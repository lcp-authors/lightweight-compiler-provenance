
../repos/diffutils/src/sdiff:     file format elf32-littlearm


Disassembly of section .init:

00011474 <.init>:
   11474:	push	{r3, lr}
   11478:	bl	118d8 <sigaltstack@plt+0x48>
   1147c:	pop	{r3, pc}

Disassembly of section .plt:

00011480 <fdopen@plt-0x14>:
   11480:	push	{lr}		; (str lr, [sp, #-4]!)
   11484:	ldr	lr, [pc, #4]	; 11490 <fdopen@plt-0x4>
   11488:	add	lr, pc, lr
   1148c:	ldr	pc, [lr, #8]!
   11490:	andeq	r7, r1, r0, ror fp

00011494 <fdopen@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #94208	; 0x17000
   1149c:	ldr	pc, [ip, #2928]!	; 0xb70

000114a0 <calloc@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #94208	; 0x17000
   114a8:	ldr	pc, [ip, #2920]!	; 0xb68

000114ac <fputs_unlocked@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #94208	; 0x17000
   114b4:	ldr	pc, [ip, #2912]!	; 0xb60

000114b8 <raise@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #94208	; 0x17000
   114c0:	ldr	pc, [ip, #2904]!	; 0xb58

000114c4 <iconv_close@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #94208	; 0x17000
   114cc:	ldr	pc, [ip, #2896]!	; 0xb50

000114d0 <iconv@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #94208	; 0x17000
   114d8:	ldr	pc, [ip, #2888]!	; 0xb48

000114dc <strcmp@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #94208	; 0x17000
   114e4:	ldr	pc, [ip, #2880]!	; 0xb40

000114e8 <printf@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #94208	; 0x17000
   114f0:	ldr	pc, [ip, #2872]!	; 0xb38

000114f4 <read@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #94208	; 0x17000
   114fc:	ldr	pc, [ip, #2864]!	; 0xb30

00011500 <wcwidth@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #94208	; 0x17000
   11508:	ldr	pc, [ip, #2856]!	; 0xb28

0001150c <memmove@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #94208	; 0x17000
   11514:	ldr	pc, [ip, #2848]!	; 0xb20

00011518 <free@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #94208	; 0x17000
   11520:	ldr	pc, [ip, #2840]!	; 0xb18

00011524 <_exit@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #94208	; 0x17000
   1152c:	ldr	pc, [ip, #2832]!	; 0xb10

00011530 <memcpy@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #94208	; 0x17000
   11538:	ldr	pc, [ip, #2824]!	; 0xb08

0001153c <execvp@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #94208	; 0x17000
   11544:	ldr	pc, [ip, #2816]!	; 0xb00

00011548 <mmap64@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #94208	; 0x17000
   11550:	ldr	pc, [ip, #2808]!	; 0xaf8

00011554 <mbsinit@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #94208	; 0x17000
   1155c:	ldr	pc, [ip, #2800]!	; 0xaf0

00011560 <signal@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #94208	; 0x17000
   11568:	ldr	pc, [ip, #2792]!	; 0xae8

0001156c <fwrite_unlocked@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #94208	; 0x17000
   11574:	ldr	pc, [ip, #2784]!	; 0xae0

00011578 <memcmp@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #94208	; 0x17000
   11580:	ldr	pc, [ip, #2776]!	; 0xad8

00011584 <dcgettext@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #94208	; 0x17000
   1158c:	ldr	pc, [ip, #2768]!	; 0xad0

00011590 <strdup@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #94208	; 0x17000
   11598:	ldr	pc, [ip, #2760]!	; 0xac8

0001159c <unlink@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #94208	; 0x17000
   115a4:	ldr	pc, [ip, #2752]!	; 0xac0

000115a8 <dup2@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #94208	; 0x17000
   115b0:	ldr	pc, [ip, #2744]!	; 0xab8

000115b4 <realloc@plt>:
   115b4:	add	ip, pc, #0, 12
   115b8:	add	ip, ip, #94208	; 0x17000
   115bc:	ldr	pc, [ip, #2736]!	; 0xab0

000115c0 <textdomain@plt>:
   115c0:	add	ip, pc, #0, 12
   115c4:	add	ip, ip, #94208	; 0x17000
   115c8:	ldr	pc, [ip, #2728]!	; 0xaa8

000115cc <iswcntrl@plt>:
   115cc:	add	ip, pc, #0, 12
   115d0:	add	ip, ip, #94208	; 0x17000
   115d4:	ldr	pc, [ip, #2720]!	; 0xaa0

000115d8 <rawmemchr@plt>:
   115d8:	add	ip, pc, #0, 12
   115dc:	add	ip, ip, #94208	; 0x17000
   115e0:	ldr	pc, [ip, #2712]!	; 0xa98

000115e4 <perror@plt>:
   115e4:	add	ip, pc, #0, 12
   115e8:	add	ip, ip, #94208	; 0x17000
   115ec:	ldr	pc, [ip, #2704]!	; 0xa90

000115f0 <fflush_unlocked@plt>:
   115f0:	add	ip, pc, #0, 12
   115f4:	add	ip, ip, #94208	; 0x17000
   115f8:	ldr	pc, [ip, #2696]!	; 0xa88

000115fc <sigaction@plt>:
   115fc:	add	ip, pc, #0, 12
   11600:	add	ip, ip, #94208	; 0x17000
   11604:	ldr	pc, [ip, #2688]!	; 0xa80

00011608 <fwrite@plt>:
   11608:	add	ip, pc, #0, 12
   1160c:	add	ip, ip, #94208	; 0x17000
   11610:	ldr	pc, [ip, #2680]!	; 0xa78

00011614 <lseek64@plt>:
   11614:	add	ip, pc, #0, 12
   11618:	add	ip, ip, #94208	; 0x17000
   1161c:	ldr	pc, [ip, #2672]!	; 0xa70

00011620 <waitpid@plt>:
   11620:	add	ip, pc, #0, 12
   11624:	add	ip, ip, #94208	; 0x17000
   11628:	ldr	pc, [ip, #2664]!	; 0xa68

0001162c <__ctype_get_mb_cur_max@plt>:
   1162c:	add	ip, pc, #0, 12
   11630:	add	ip, ip, #94208	; 0x17000
   11634:	ldr	pc, [ip, #2656]!	; 0xa60

00011638 <ferror_unlocked@plt>:
   11638:	add	ip, pc, #0, 12
   1163c:	add	ip, ip, #94208	; 0x17000
   11640:	ldr	pc, [ip, #2648]!	; 0xa58

00011644 <mbrtowc@plt>:
   11644:	add	ip, pc, #0, 12
   11648:	add	ip, ip, #94208	; 0x17000
   1164c:	ldr	pc, [ip, #2640]!	; 0xa50

00011650 <error@plt>:
   11650:	add	ip, pc, #0, 12
   11654:	add	ip, ip, #94208	; 0x17000
   11658:	ldr	pc, [ip, #2632]!	; 0xa48

0001165c <open64@plt>:
   1165c:	add	ip, pc, #0, 12
   11660:	add	ip, ip, #94208	; 0x17000
   11664:	ldr	pc, [ip, #2624]!	; 0xa40

00011668 <getenv@plt>:
   11668:	add	ip, pc, #0, 12
   1166c:	add	ip, ip, #94208	; 0x17000
   11670:	ldr	pc, [ip, #2616]!	; 0xa38

00011674 <mkstemp64@plt>:
   11674:	add	ip, pc, #0, 12
   11678:	add	ip, ip, #94208	; 0x17000
   1167c:	ldr	pc, [ip, #2608]!	; 0xa30

00011680 <puts@plt>:
   11680:	add	ip, pc, #0, 12
   11684:	add	ip, ip, #94208	; 0x17000
   11688:	ldr	pc, [ip, #2600]!	; 0xa28

0001168c <malloc@plt>:
   1168c:	add	ip, pc, #0, 12
   11690:	add	ip, ip, #94208	; 0x17000
   11694:	ldr	pc, [ip, #2592]!	; 0xa20

00011698 <iconv_open@plt>:
   11698:	add	ip, pc, #0, 12
   1169c:	add	ip, ip, #94208	; 0x17000
   116a0:	ldr	pc, [ip, #2584]!	; 0xa18

000116a4 <sigaddset@plt>:
   116a4:	add	ip, pc, #0, 12
   116a8:	add	ip, ip, #94208	; 0x17000
   116ac:	ldr	pc, [ip, #2576]!	; 0xa10

000116b0 <__libc_start_main@plt>:
   116b0:	add	ip, pc, #0, 12
   116b4:	add	ip, ip, #94208	; 0x17000
   116b8:	ldr	pc, [ip, #2568]!	; 0xa08

000116bc <__gmon_start__@plt>:
   116bc:	add	ip, pc, #0, 12
   116c0:	add	ip, ip, #94208	; 0x17000
   116c4:	ldr	pc, [ip, #2560]!	; 0xa00

000116c8 <getopt_long@plt>:
   116c8:	add	ip, pc, #0, 12
   116cc:	add	ip, ip, #94208	; 0x17000
   116d0:	ldr	pc, [ip, #2552]!	; 0x9f8

000116d4 <kill@plt>:
   116d4:	add	ip, pc, #0, 12
   116d8:	add	ip, ip, #94208	; 0x17000
   116dc:	ldr	pc, [ip, #2544]!	; 0x9f0

000116e0 <__ctype_b_loc@plt>:
   116e0:	add	ip, pc, #0, 12
   116e4:	add	ip, ip, #94208	; 0x17000
   116e8:	ldr	pc, [ip, #2536]!	; 0x9e8

000116ec <exit@plt>:
   116ec:	add	ip, pc, #0, 12
   116f0:	add	ip, ip, #94208	; 0x17000
   116f4:	ldr	pc, [ip, #2528]!	; 0x9e0

000116f8 <iswspace@plt>:
   116f8:	add	ip, pc, #0, 12
   116fc:	add	ip, ip, #94208	; 0x17000
   11700:	ldr	pc, [ip, #2520]!	; 0x9d8

00011704 <strlen@plt>:
   11704:	add	ip, pc, #0, 12
   11708:	add	ip, ip, #94208	; 0x17000
   1170c:	ldr	pc, [ip, #2512]!	; 0x9d0

00011710 <getchar_unlocked@plt>:
   11710:	add	ip, pc, #0, 12
   11714:	add	ip, ip, #94208	; 0x17000
   11718:	ldr	pc, [ip, #2504]!	; 0x9c8

0001171c <strchr@plt>:
   1171c:	add	ip, pc, #0, 12
   11720:	add	ip, ip, #94208	; 0x17000
   11724:	ldr	pc, [ip, #2496]!	; 0x9c0

00011728 <fprintf@plt>:
   11728:	add	ip, pc, #0, 12
   1172c:	add	ip, ip, #94208	; 0x17000
   11730:	ldr	pc, [ip, #2488]!	; 0x9b8

00011734 <getpagesize@plt>:
   11734:	add	ip, pc, #0, 12
   11738:	add	ip, ip, #94208	; 0x17000
   1173c:	ldr	pc, [ip, #2480]!	; 0x9b0

00011740 <__errno_location@plt>:
   11740:	add	ip, pc, #0, 12
   11744:	add	ip, ip, #94208	; 0x17000
   11748:	ldr	pc, [ip, #2472]!	; 0x9a8

0001174c <iswalnum@plt>:
   1174c:	add	ip, pc, #0, 12
   11750:	add	ip, ip, #94208	; 0x17000
   11754:	ldr	pc, [ip, #2464]!	; 0x9a0

00011758 <write@plt>:
   11758:	add	ip, pc, #0, 12
   1175c:	add	ip, ip, #94208	; 0x17000
   11760:	ldr	pc, [ip, #2456]!	; 0x998

00011764 <memchr@plt>:
   11764:	add	ip, pc, #0, 12
   11768:	add	ip, ip, #94208	; 0x17000
   1176c:	ldr	pc, [ip, #2448]!	; 0x990

00011770 <strtoimax@plt>:
   11770:	add	ip, pc, #0, 12
   11774:	add	ip, ip, #94208	; 0x17000
   11778:	ldr	pc, [ip, #2440]!	; 0x988

0001177c <fclose@plt>:
   1177c:	add	ip, pc, #0, 12
   11780:	add	ip, ip, #94208	; 0x17000
   11784:	ldr	pc, [ip, #2432]!	; 0x980

00011788 <strnlen@plt>:
   11788:	add	ip, pc, #0, 12
   1178c:	add	ip, ip, #94208	; 0x17000
   11790:	ldr	pc, [ip, #2424]!	; 0x978

00011794 <pipe@plt>:
   11794:	add	ip, pc, #0, 12
   11798:	add	ip, ip, #94208	; 0x17000
   1179c:	ldr	pc, [ip, #2416]!	; 0x970

000117a0 <munmap@plt>:
   117a0:	add	ip, pc, #0, 12
   117a4:	add	ip, ip, #94208	; 0x17000
   117a8:	ldr	pc, [ip, #2408]!	; 0x968

000117ac <fcntl64@plt>:
   117ac:	add	ip, pc, #0, 12
   117b0:	add	ip, ip, #94208	; 0x17000
   117b4:	ldr	pc, [ip, #2400]!	; 0x960

000117b8 <setlocale@plt>:
   117b8:	add	ip, pc, #0, 12
   117bc:	add	ip, ip, #94208	; 0x17000
   117c0:	ldr	pc, [ip, #2392]!	; 0x958

000117c4 <sigemptyset@plt>:
   117c4:	add	ip, pc, #0, 12
   117c8:	add	ip, ip, #94208	; 0x17000
   117cc:	ldr	pc, [ip, #2384]!	; 0x950

000117d0 <fork@plt>:
   117d0:	add	ip, pc, #0, 12
   117d4:	add	ip, ip, #94208	; 0x17000
   117d8:	ldr	pc, [ip, #2376]!	; 0x948

000117dc <strrchr@plt>:
   117dc:	add	ip, pc, #0, 12
   117e0:	add	ip, ip, #94208	; 0x17000
   117e4:	ldr	pc, [ip, #2368]!	; 0x940

000117e8 <nl_langinfo@plt>:
   117e8:	add	ip, pc, #0, 12
   117ec:	add	ip, ip, #94208	; 0x17000
   117f0:	ldr	pc, [ip, #2360]!	; 0x938

000117f4 <sprintf@plt>:
   117f4:	add	ip, pc, #0, 12
   117f8:	add	ip, ip, #94208	; 0x17000
   117fc:	ldr	pc, [ip, #2352]!	; 0x930

00011800 <fopen64@plt>:
   11800:	add	ip, pc, #0, 12
   11804:	add	ip, ip, #94208	; 0x17000
   11808:	ldr	pc, [ip, #2344]!	; 0x928

0001180c <mincore@plt>:
   1180c:	add	ip, pc, #0, 12
   11810:	add	ip, ip, #94208	; 0x17000
   11814:	ldr	pc, [ip, #2336]!	; 0x920

00011818 <bindtextdomain@plt>:
   11818:	add	ip, pc, #0, 12
   1181c:	add	ip, ip, #94208	; 0x17000
   11820:	ldr	pc, [ip, #2328]!	; 0x918

00011824 <fread_unlocked@plt>:
   11824:	add	ip, pc, #0, 12
   11828:	add	ip, ip, #94208	; 0x17000
   1182c:	ldr	pc, [ip, #2320]!	; 0x910

00011830 <__xstat64@plt>:
   11830:	add	ip, pc, #0, 12
   11834:	add	ip, ip, #94208	; 0x17000
   11838:	ldr	pc, [ip, #2312]!	; 0x908

0001183c <fputs@plt>:
   1183c:	add	ip, pc, #0, 12
   11840:	add	ip, ip, #94208	; 0x17000
   11844:	ldr	pc, [ip, #2304]!	; 0x900

00011848 <strncmp@plt>:
   11848:	add	ip, pc, #0, 12
   1184c:	add	ip, ip, #94208	; 0x17000
   11850:	ldr	pc, [ip, #2296]!	; 0x8f8

00011854 <abort@plt>:
   11854:	add	ip, pc, #0, 12
   11858:	add	ip, ip, #94208	; 0x17000
   1185c:	ldr	pc, [ip, #2288]!	; 0x8f0

00011860 <feof_unlocked@plt>:
   11860:	add	ip, pc, #0, 12
   11864:	add	ip, ip, #94208	; 0x17000
   11868:	ldr	pc, [ip, #2280]!	; 0x8e8

0001186c <close@plt>:
   1186c:	add	ip, pc, #0, 12
   11870:	add	ip, ip, #94208	; 0x17000
   11874:	ldr	pc, [ip, #2272]!	; 0x8e0

00011878 <putchar_unlocked@plt>:
   11878:	add	ip, pc, #0, 12
   1187c:	add	ip, ip, #94208	; 0x17000
   11880:	ldr	pc, [ip, #2264]!	; 0x8d8

00011884 <__assert_fail@plt>:
   11884:	add	ip, pc, #0, 12
   11888:	add	ip, ip, #94208	; 0x17000
   1188c:	ldr	pc, [ip, #2256]!	; 0x8d0

00011890 <sigaltstack@plt>:
   11890:	add	ip, pc, #0, 12
   11894:	add	ip, ip, #94208	; 0x17000
   11898:	ldr	pc, [ip, #2248]!	; 0x8c8

Disassembly of section .text:

0001189c <.text>:
   1189c:	mov	fp, #0
   118a0:	mov	lr, #0
   118a4:	pop	{r1}		; (ldr r1, [sp], #4)
   118a8:	mov	r2, sp
   118ac:	push	{r2}		; (str r2, [sp, #-4]!)
   118b0:	push	{r0}		; (str r0, [sp, #-4]!)
   118b4:	ldr	ip, [pc, #16]	; 118cc <sigaltstack@plt+0x3c>
   118b8:	push	{ip}		; (str ip, [sp, #-4]!)
   118bc:	ldr	r0, [pc, #12]	; 118d0 <sigaltstack@plt+0x40>
   118c0:	ldr	r3, [pc, #12]	; 118d4 <sigaltstack@plt+0x44>
   118c4:	bl	116b0 <__libc_start_main@plt>
   118c8:	bl	11854 <abort@plt>
   118cc:	andeq	r7, r1, r4, ror #15
   118d0:	andeq	r1, r1, ip, lsl #19
   118d4:	andeq	r7, r1, r4, lsl #15
   118d8:	ldr	r3, [pc, #20]	; 118f4 <sigaltstack@plt+0x64>
   118dc:	ldr	r2, [pc, #20]	; 118f8 <sigaltstack@plt+0x68>
   118e0:	add	r3, pc, r3
   118e4:	ldr	r2, [r3, r2]
   118e8:	cmp	r2, #0
   118ec:	bxeq	lr
   118f0:	b	116bc <__gmon_start__@plt>
   118f4:	andeq	r7, r1, r8, lsl r7
   118f8:	andeq	r0, r0, r4, ror #2
   118fc:	ldr	r0, [pc, #24]	; 1191c <sigaltstack@plt+0x8c>
   11900:	ldr	r3, [pc, #24]	; 11920 <sigaltstack@plt+0x90>
   11904:	cmp	r3, r0
   11908:	bxeq	lr
   1190c:	ldr	r3, [pc, #16]	; 11924 <sigaltstack@plt+0x94>
   11910:	cmp	r3, #0
   11914:	bxeq	lr
   11918:	bx	r3
   1191c:	andeq	r9, r2, r0, lsl #3
   11920:	andeq	r9, r2, r0, lsl #3
   11924:	andeq	r0, r0, r0
   11928:	ldr	r0, [pc, #36]	; 11954 <sigaltstack@plt+0xc4>
   1192c:	ldr	r1, [pc, #36]	; 11958 <sigaltstack@plt+0xc8>
   11930:	sub	r1, r1, r0
   11934:	asr	r1, r1, #2
   11938:	add	r1, r1, r1, lsr #31
   1193c:	asrs	r1, r1, #1
   11940:	bxeq	lr
   11944:	ldr	r3, [pc, #16]	; 1195c <sigaltstack@plt+0xcc>
   11948:	cmp	r3, #0
   1194c:	bxeq	lr
   11950:	bx	r3
   11954:	andeq	r9, r2, r0, lsl #3
   11958:	andeq	r9, r2, r0, lsl #3
   1195c:	andeq	r0, r0, r0
   11960:	push	{r4, lr}
   11964:	ldr	r4, [pc, #24]	; 11984 <sigaltstack@plt+0xf4>
   11968:	ldrb	r3, [r4]
   1196c:	cmp	r3, #0
   11970:	popne	{r4, pc}
   11974:	bl	118fc <sigaltstack@plt+0x6c>
   11978:	mov	r3, #1
   1197c:	strb	r3, [r4]
   11980:	pop	{r4, pc}
   11984:	andeq	r9, r2, r4, lsr #3
   11988:	b	11928 <sigaltstack@plt+0x98>
   1198c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11990:	add	fp, sp, #28
   11994:	sub	sp, sp, #76	; 0x4c
   11998:	mov	r4, r1
   1199c:	mov	r5, r0
   119a0:	movw	r0, #37240	; 0x9178
   119a4:	movt	r0, #2
   119a8:	mov	r1, #2
   119ac:	str	r1, [r0]
   119b0:	ldr	r0, [r4]
   119b4:	bl	139c4 <sigaltstack@plt+0x2134>
   119b8:	movw	r1, #31322	; 0x7a5a
   119bc:	movt	r1, #1
   119c0:	mov	r0, #6
   119c4:	bl	117b8 <setlocale@plt>
   119c8:	movw	r6, #30826	; 0x786a
   119cc:	movt	r6, #1
   119d0:	movw	r1, #30724	; 0x7804
   119d4:	movt	r1, #1
   119d8:	mov	r0, r6
   119dc:	bl	11818 <bindtextdomain@plt>
   119e0:	mov	r0, r6
   119e4:	bl	115c0 <textdomain@plt>
   119e8:	movw	r0, #8984	; 0x2318
   119ec:	movt	r0, #1
   119f0:	bl	1376c <sigaltstack@plt+0x1edc>
   119f4:	bl	157b0 <sigaltstack@plt+0x3f20>
   119f8:	movw	r0, #30748	; 0x781c
   119fc:	movt	r0, #1
   11a00:	bl	11668 <getenv@plt>
   11a04:	cmp	r0, #0
   11a08:	movwne	r1, #37232	; 0x9170
   11a0c:	movtne	r1, #2
   11a10:	strne	r0, [r1]
   11a14:	movw	r0, #30817	; 0x7861
   11a18:	movt	r0, #1
   11a1c:	bl	12360 <sigaltstack@plt+0xad0>
   11a20:	mov	r8, #0
   11a24:	movw	r6, #30755	; 0x7823
   11a28:	movt	r6, #1
   11a2c:	movw	r7, #33636	; 0x8364
   11a30:	movt	r7, #1
   11a34:	movw	r9, #37280	; 0x91a0
   11a38:	movt	r9, #2
   11a3c:	movw	sl, #30877	; 0x789d
   11a40:	movt	sl, #1
   11a44:	b	11a54 <sigaltstack@plt+0x1c4>
   11a48:	bl	12360 <sigaltstack@plt+0xad0>
   11a4c:	ldr	r0, [r9]
   11a50:	bl	12360 <sigaltstack@plt+0xad0>
   11a54:	str	r8, [sp]
   11a58:	mov	r0, r5
   11a5c:	mov	r1, r4
   11a60:	mov	r2, r6
   11a64:	mov	r3, r7
   11a68:	bl	116c8 <getopt_long@plt>
   11a6c:	sub	r1, r0, #66	; 0x42
   11a70:	cmp	r1, #193	; 0xc1
   11a74:	bhi	11ea8 <sigaltstack@plt+0x618>
   11a78:	add	r0, pc, #0
   11a7c:	ldr	pc, [r0, r1, lsl #2]
   11a80:	andeq	r1, r1, r8, lsl #27
   11a84:			; <UNDEFINED> instruction: 0x000121b0
   11a88:			; <UNDEFINED> instruction: 0x000121b0
   11a8c:	andeq	r1, r1, r8, asr lr
   11a90:			; <UNDEFINED> instruction: 0x000121b0
   11a94:			; <UNDEFINED> instruction: 0x000121b0
   11a98:	andeq	r1, r1, r8, ror lr
   11a9c:	andeq	r1, r1, ip, asr #28
   11aa0:			; <UNDEFINED> instruction: 0x000121b0
   11aa4:			; <UNDEFINED> instruction: 0x000121b0
   11aa8:			; <UNDEFINED> instruction: 0x000121b0
   11aac:			; <UNDEFINED> instruction: 0x000121b0
   11ab0:			; <UNDEFINED> instruction: 0x000121b0
   11ab4:			; <UNDEFINED> instruction: 0x000121b0
   11ab8:			; <UNDEFINED> instruction: 0x000121b0
   11abc:			; <UNDEFINED> instruction: 0x000121b0
   11ac0:			; <UNDEFINED> instruction: 0x000121b0
   11ac4:			; <UNDEFINED> instruction: 0x000121b0
   11ac8:			; <UNDEFINED> instruction: 0x000121b0
   11acc:			; <UNDEFINED> instruction: 0x000121b0
   11ad0:			; <UNDEFINED> instruction: 0x000121b0
   11ad4:	andeq	r1, r1, ip, lsl lr
   11ad8:			; <UNDEFINED> instruction: 0x000121b0
   11adc:			; <UNDEFINED> instruction: 0x000121b0
   11ae0:	andeq	r1, r1, ip, ror #27
   11ae4:			; <UNDEFINED> instruction: 0x000121b0
   11ae8:			; <UNDEFINED> instruction: 0x000121b0
   11aec:			; <UNDEFINED> instruction: 0x000121b0
   11af0:			; <UNDEFINED> instruction: 0x000121b0
   11af4:			; <UNDEFINED> instruction: 0x000121b0
   11af8:			; <UNDEFINED> instruction: 0x000121b0
   11afc:	andeq	r1, r1, ip, lsl #28
   11b00:	ldrdeq	r1, [r1], -r0
   11b04:			; <UNDEFINED> instruction: 0x000121b0
   11b08:	andeq	r1, r1, ip, lsr #28
   11b0c:			; <UNDEFINED> instruction: 0x000121b0
   11b10:			; <UNDEFINED> instruction: 0x000121b0
   11b14:			; <UNDEFINED> instruction: 0x000121b0
   11b18:			; <UNDEFINED> instruction: 0x000121b0
   11b1c:	andeq	r1, r1, r0, asr #27
   11b20:			; <UNDEFINED> instruction: 0x000121b0
   11b24:			; <UNDEFINED> instruction: 0x000121b0
   11b28:	andeq	r1, r1, ip, lsr lr
   11b2c:			; <UNDEFINED> instruction: 0x000121b0
   11b30:			; <UNDEFINED> instruction: 0x000121b0
   11b34:	muleq	r1, r8, sp
   11b38:			; <UNDEFINED> instruction: 0x000121b0
   11b3c:			; <UNDEFINED> instruction: 0x000121b0
   11b40:			; <UNDEFINED> instruction: 0x000121b0
   11b44:	andeq	r1, r1, ip, lsr #27
   11b48:	strdeq	r1, [r1], -ip
   11b4c:			; <UNDEFINED> instruction: 0x000121b0
   11b50:	andeq	r2, r1, r8, asr #2
   11b54:	andeq	r1, r1, r0, ror #27
   11b58:			; <UNDEFINED> instruction: 0x000121b0
   11b5c:			; <UNDEFINED> instruction: 0x000121b0
   11b60:			; <UNDEFINED> instruction: 0x000121b0
   11b64:			; <UNDEFINED> instruction: 0x000121b0
   11b68:			; <UNDEFINED> instruction: 0x000121b0
   11b6c:			; <UNDEFINED> instruction: 0x000121b0
   11b70:			; <UNDEFINED> instruction: 0x000121b0
   11b74:			; <UNDEFINED> instruction: 0x000121b0
   11b78:			; <UNDEFINED> instruction: 0x000121b0
   11b7c:			; <UNDEFINED> instruction: 0x000121b0
   11b80:			; <UNDEFINED> instruction: 0x000121b0
   11b84:			; <UNDEFINED> instruction: 0x000121b0
   11b88:			; <UNDEFINED> instruction: 0x000121b0
   11b8c:			; <UNDEFINED> instruction: 0x000121b0
   11b90:			; <UNDEFINED> instruction: 0x000121b0
   11b94:			; <UNDEFINED> instruction: 0x000121b0
   11b98:			; <UNDEFINED> instruction: 0x000121b0
   11b9c:			; <UNDEFINED> instruction: 0x000121b0
   11ba0:			; <UNDEFINED> instruction: 0x000121b0
   11ba4:			; <UNDEFINED> instruction: 0x000121b0
   11ba8:			; <UNDEFINED> instruction: 0x000121b0
   11bac:			; <UNDEFINED> instruction: 0x000121b0
   11bb0:			; <UNDEFINED> instruction: 0x000121b0
   11bb4:			; <UNDEFINED> instruction: 0x000121b0
   11bb8:			; <UNDEFINED> instruction: 0x000121b0
   11bbc:			; <UNDEFINED> instruction: 0x000121b0
   11bc0:			; <UNDEFINED> instruction: 0x000121b0
   11bc4:			; <UNDEFINED> instruction: 0x000121b0
   11bc8:			; <UNDEFINED> instruction: 0x000121b0
   11bcc:			; <UNDEFINED> instruction: 0x000121b0
   11bd0:			; <UNDEFINED> instruction: 0x000121b0
   11bd4:			; <UNDEFINED> instruction: 0x000121b0
   11bd8:			; <UNDEFINED> instruction: 0x000121b0
   11bdc:			; <UNDEFINED> instruction: 0x000121b0
   11be0:			; <UNDEFINED> instruction: 0x000121b0
   11be4:			; <UNDEFINED> instruction: 0x000121b0
   11be8:			; <UNDEFINED> instruction: 0x000121b0
   11bec:			; <UNDEFINED> instruction: 0x000121b0
   11bf0:			; <UNDEFINED> instruction: 0x000121b0
   11bf4:			; <UNDEFINED> instruction: 0x000121b0
   11bf8:			; <UNDEFINED> instruction: 0x000121b0
   11bfc:			; <UNDEFINED> instruction: 0x000121b0
   11c00:			; <UNDEFINED> instruction: 0x000121b0
   11c04:			; <UNDEFINED> instruction: 0x000121b0
   11c08:			; <UNDEFINED> instruction: 0x000121b0
   11c0c:			; <UNDEFINED> instruction: 0x000121b0
   11c10:			; <UNDEFINED> instruction: 0x000121b0
   11c14:			; <UNDEFINED> instruction: 0x000121b0
   11c18:			; <UNDEFINED> instruction: 0x000121b0
   11c1c:			; <UNDEFINED> instruction: 0x000121b0
   11c20:			; <UNDEFINED> instruction: 0x000121b0
   11c24:			; <UNDEFINED> instruction: 0x000121b0
   11c28:			; <UNDEFINED> instruction: 0x000121b0
   11c2c:			; <UNDEFINED> instruction: 0x000121b0
   11c30:			; <UNDEFINED> instruction: 0x000121b0
   11c34:			; <UNDEFINED> instruction: 0x000121b0
   11c38:			; <UNDEFINED> instruction: 0x000121b0
   11c3c:			; <UNDEFINED> instruction: 0x000121b0
   11c40:			; <UNDEFINED> instruction: 0x000121b0
   11c44:			; <UNDEFINED> instruction: 0x000121b0
   11c48:			; <UNDEFINED> instruction: 0x000121b0
   11c4c:			; <UNDEFINED> instruction: 0x000121b0
   11c50:			; <UNDEFINED> instruction: 0x000121b0
   11c54:			; <UNDEFINED> instruction: 0x000121b0
   11c58:			; <UNDEFINED> instruction: 0x000121b0
   11c5c:			; <UNDEFINED> instruction: 0x000121b0
   11c60:			; <UNDEFINED> instruction: 0x000121b0
   11c64:			; <UNDEFINED> instruction: 0x000121b0
   11c68:			; <UNDEFINED> instruction: 0x000121b0
   11c6c:			; <UNDEFINED> instruction: 0x000121b0
   11c70:			; <UNDEFINED> instruction: 0x000121b0
   11c74:			; <UNDEFINED> instruction: 0x000121b0
   11c78:			; <UNDEFINED> instruction: 0x000121b0
   11c7c:			; <UNDEFINED> instruction: 0x000121b0
   11c80:			; <UNDEFINED> instruction: 0x000121b0
   11c84:			; <UNDEFINED> instruction: 0x000121b0
   11c88:			; <UNDEFINED> instruction: 0x000121b0
   11c8c:			; <UNDEFINED> instruction: 0x000121b0
   11c90:			; <UNDEFINED> instruction: 0x000121b0
   11c94:			; <UNDEFINED> instruction: 0x000121b0
   11c98:			; <UNDEFINED> instruction: 0x000121b0
   11c9c:			; <UNDEFINED> instruction: 0x000121b0
   11ca0:			; <UNDEFINED> instruction: 0x000121b0
   11ca4:			; <UNDEFINED> instruction: 0x000121b0
   11ca8:			; <UNDEFINED> instruction: 0x000121b0
   11cac:			; <UNDEFINED> instruction: 0x000121b0
   11cb0:			; <UNDEFINED> instruction: 0x000121b0
   11cb4:			; <UNDEFINED> instruction: 0x000121b0
   11cb8:			; <UNDEFINED> instruction: 0x000121b0
   11cbc:			; <UNDEFINED> instruction: 0x000121b0
   11cc0:			; <UNDEFINED> instruction: 0x000121b0
   11cc4:			; <UNDEFINED> instruction: 0x000121b0
   11cc8:			; <UNDEFINED> instruction: 0x000121b0
   11ccc:			; <UNDEFINED> instruction: 0x000121b0
   11cd0:			; <UNDEFINED> instruction: 0x000121b0
   11cd4:			; <UNDEFINED> instruction: 0x000121b0
   11cd8:			; <UNDEFINED> instruction: 0x000121b0
   11cdc:			; <UNDEFINED> instruction: 0x000121b0
   11ce0:			; <UNDEFINED> instruction: 0x000121b0
   11ce4:			; <UNDEFINED> instruction: 0x000121b0
   11ce8:			; <UNDEFINED> instruction: 0x000121b0
   11cec:			; <UNDEFINED> instruction: 0x000121b0
   11cf0:			; <UNDEFINED> instruction: 0x000121b0
   11cf4:			; <UNDEFINED> instruction: 0x000121b0
   11cf8:			; <UNDEFINED> instruction: 0x000121b0
   11cfc:			; <UNDEFINED> instruction: 0x000121b0
   11d00:			; <UNDEFINED> instruction: 0x000121b0
   11d04:			; <UNDEFINED> instruction: 0x000121b0
   11d08:			; <UNDEFINED> instruction: 0x000121b0
   11d0c:			; <UNDEFINED> instruction: 0x000121b0
   11d10:			; <UNDEFINED> instruction: 0x000121b0
   11d14:			; <UNDEFINED> instruction: 0x000121b0
   11d18:			; <UNDEFINED> instruction: 0x000121b0
   11d1c:			; <UNDEFINED> instruction: 0x000121b0
   11d20:			; <UNDEFINED> instruction: 0x000121b0
   11d24:			; <UNDEFINED> instruction: 0x000121b0
   11d28:			; <UNDEFINED> instruction: 0x000121b0
   11d2c:			; <UNDEFINED> instruction: 0x000121b0
   11d30:			; <UNDEFINED> instruction: 0x000121b0
   11d34:			; <UNDEFINED> instruction: 0x000121b0
   11d38:			; <UNDEFINED> instruction: 0x000121b0
   11d3c:			; <UNDEFINED> instruction: 0x000121b0
   11d40:			; <UNDEFINED> instruction: 0x000121b0
   11d44:			; <UNDEFINED> instruction: 0x000121b0
   11d48:			; <UNDEFINED> instruction: 0x000121b0
   11d4c:			; <UNDEFINED> instruction: 0x000121b0
   11d50:			; <UNDEFINED> instruction: 0x000121b0
   11d54:			; <UNDEFINED> instruction: 0x000121b0
   11d58:			; <UNDEFINED> instruction: 0x000121b0
   11d5c:			; <UNDEFINED> instruction: 0x000121b0
   11d60:			; <UNDEFINED> instruction: 0x000121b0
   11d64:			; <UNDEFINED> instruction: 0x000121b0
   11d68:			; <UNDEFINED> instruction: 0x000121b0
   11d6c:			; <UNDEFINED> instruction: 0x000121b0
   11d70:			; <UNDEFINED> instruction: 0x000121b0
   11d74:			; <UNDEFINED> instruction: 0x000121b0
   11d78:	muleq	r1, r0, lr
   11d7c:	andeq	r2, r1, r0, asr #2
   11d80:	andeq	r1, r1, r8, ror #28
   11d84:	andeq	r1, r1, r8, lsl #29
   11d88:	movw	r0, #30781	; 0x783d
   11d8c:	movt	r0, #1
   11d90:	bl	12360 <sigaltstack@plt+0xad0>
   11d94:	b	11a54 <sigaltstack@plt+0x1c4>
   11d98:	ldr	r0, [r9]
   11d9c:	movw	r1, #37288	; 0x91a8
   11da0:	movt	r1, #2
   11da4:	str	r0, [r1]
   11da8:	b	11a54 <sigaltstack@plt+0x1c4>
   11dac:	movw	r0, #37292	; 0x91ac
   11db0:	movt	r0, #2
   11db4:	mov	r1, #1
   11db8:	strb	r1, [r0]
   11dbc:	b	11a54 <sigaltstack@plt+0x1c4>
   11dc0:	movw	r0, #30793	; 0x7849
   11dc4:	movt	r0, #1
   11dc8:	bl	12360 <sigaltstack@plt+0xad0>
   11dcc:	b	11a54 <sigaltstack@plt+0x1c4>
   11dd0:	movw	r0, #30778	; 0x783a
   11dd4:	movt	r0, #1
   11dd8:	bl	12360 <sigaltstack@plt+0xad0>
   11ddc:	b	11a54 <sigaltstack@plt+0x1c4>
   11de0:	movw	r0, #30848	; 0x7880
   11de4:	movt	r0, #1
   11de8:	b	11a48 <sigaltstack@plt+0x1b8>
   11dec:	movw	r0, #30854	; 0x7886
   11df0:	movt	r0, #1
   11df4:	bl	12360 <sigaltstack@plt+0xad0>
   11df8:	b	11a54 <sigaltstack@plt+0x1c4>
   11dfc:	movw	r0, #30813	; 0x785d
   11e00:	movt	r0, #1
   11e04:	bl	12360 <sigaltstack@plt+0xad0>
   11e08:	b	11a54 <sigaltstack@plt+0x1c4>
   11e0c:	movw	r0, #30775	; 0x7837
   11e10:	movt	r0, #1
   11e14:	bl	12360 <sigaltstack@plt+0xad0>
   11e18:	b	11a54 <sigaltstack@plt+0x1c4>
   11e1c:	movw	r0, #30851	; 0x7883
   11e20:	movt	r0, #1
   11e24:	bl	12360 <sigaltstack@plt+0xad0>
   11e28:	b	11a54 <sigaltstack@plt+0x1c4>
   11e2c:	movw	r0, #30784	; 0x7840
   11e30:	movt	r0, #1
   11e34:	bl	12360 <sigaltstack@plt+0xad0>
   11e38:	b	11a54 <sigaltstack@plt+0x1c4>
   11e3c:	movw	r0, #30799	; 0x784f
   11e40:	movt	r0, #1
   11e44:	bl	12360 <sigaltstack@plt+0xad0>
   11e48:	b	11a54 <sigaltstack@plt+0x1c4>
   11e4c:	movw	r0, #30796	; 0x784c
   11e50:	movt	r0, #1
   11e54:	b	11a48 <sigaltstack@plt+0x1b8>
   11e58:	movw	r0, #30787	; 0x7843
   11e5c:	movt	r0, #1
   11e60:	bl	12360 <sigaltstack@plt+0xad0>
   11e64:	b	11a54 <sigaltstack@plt+0x1c4>
   11e68:	movw	r0, #30857	; 0x7889
   11e6c:	movt	r0, #1
   11e70:	bl	12360 <sigaltstack@plt+0xad0>
   11e74:	b	11a54 <sigaltstack@plt+0x1c4>
   11e78:	movw	r0, #30790	; 0x7846
   11e7c:	movt	r0, #1
   11e80:	bl	12360 <sigaltstack@plt+0xad0>
   11e84:	b	11a54 <sigaltstack@plt+0x1c4>
   11e88:	mov	r0, sl
   11e8c:	b	11a48 <sigaltstack@plt+0x1b8>
   11e90:	movw	r0, #37296	; 0x91b0
   11e94:	movt	r0, #2
   11e98:	ldr	r0, [r0]
   11e9c:	ldr	r1, [r9]
   11ea0:	str	r1, [r0]
   11ea4:	b	11a54 <sigaltstack@plt+0x1c4>
   11ea8:	cmn	r0, #1
   11eac:	bne	121b0 <sigaltstack@plt+0x920>
   11eb0:	movw	r8, #37256	; 0x9188
   11eb4:	movt	r8, #2
   11eb8:	ldr	r0, [r8]
   11ebc:	sub	r1, r5, r0
   11ec0:	cmp	r1, #2
   11ec4:	bne	121bc <sigaltstack@plt+0x92c>
   11ec8:	movw	r1, #37288	; 0x91a8
   11ecc:	movt	r1, #2
   11ed0:	ldr	r1, [r1]
   11ed4:	cmp	r1, #0
   11ed8:	beq	121d8 <sigaltstack@plt+0x948>
   11edc:	ldr	r0, [r4, r0, lsl #2]
   11ee0:	bl	125ec <sigaltstack@plt+0xd5c>
   11ee4:	mov	r6, r0
   11ee8:	ldr	r0, [r8]
   11eec:	add	r0, r4, r0, lsl #2
   11ef0:	ldr	r0, [r0, #4]
   11ef4:	bl	125ec <sigaltstack@plt+0xd5c>
   11ef8:	mov	r5, r0
   11efc:	cmp	r6, #0
   11f00:	cmpne	r5, #0
   11f04:	bne	12258 <sigaltstack@plt+0x9c8>
   11f08:	ldr	r0, [r8]
   11f0c:	mov	r1, r4
   11f10:	ldr	r0, [r1, r0, lsl #2]!
   11f14:	ldr	r2, [r1, #4]
   11f18:	mov	r1, r6
   11f1c:	bl	12668 <sigaltstack@plt+0xdd8>
   11f20:	mov	r9, r0
   11f24:	movw	r7, #30875	; 0x789b
   11f28:	movt	r7, #1
   11f2c:	mov	r1, r7
   11f30:	bl	1274c <sigaltstack@plt+0xebc>
   11f34:	str	r0, [sp, #16]
   11f38:	ldr	r0, [r8]
   11f3c:	mov	r1, r4
   11f40:	ldr	r2, [r1, r0, lsl #2]!
   11f44:	ldr	r0, [r1, #4]
   11f48:	mov	r1, r5
   11f4c:	bl	12668 <sigaltstack@plt+0xdd8>
   11f50:	str	r0, [sp, #12]
   11f54:	mov	r1, r7
   11f58:	bl	1274c <sigaltstack@plt+0xebc>
   11f5c:	mov	r5, r0
   11f60:	movw	r0, #37288	; 0x91a8
   11f64:	movt	r0, #2
   11f68:	ldr	r0, [r0]
   11f6c:	movw	r1, #30852	; 0x7884
   11f70:	movt	r1, #1
   11f74:	bl	1274c <sigaltstack@plt+0xebc>
   11f78:	mov	r7, r0
   11f7c:	movw	r0, #31005	; 0x791d
   11f80:	movt	r0, #1
   11f84:	bl	12360 <sigaltstack@plt+0xad0>
   11f88:	movw	r0, #30960	; 0x78f0
   11f8c:	movt	r0, #1
   11f90:	bl	12360 <sigaltstack@plt+0xad0>
   11f94:	ldr	r0, [r8]
   11f98:	ldr	r0, [r4, r0, lsl #2]
   11f9c:	bl	12360 <sigaltstack@plt+0xad0>
   11fa0:	ldr	r0, [r8]
   11fa4:	add	r0, r4, r0, lsl #2
   11fa8:	ldr	r0, [r0, #4]
   11fac:	bl	12360 <sigaltstack@plt+0xad0>
   11fb0:	mov	r0, #0
   11fb4:	bl	12360 <sigaltstack@plt+0xad0>
   11fb8:	bl	1276c <sigaltstack@plt+0xedc>
   11fbc:	sub	r0, fp, #44	; 0x2c
   11fc0:	bl	11794 <pipe@plt>
   11fc4:	cmp	r0, #0
   11fc8:	bne	12264 <sigaltstack@plt+0x9d4>
   11fcc:	bl	117d0 <fork@plt>
   11fd0:	movw	sl, #37300	; 0x91b4
   11fd4:	movt	sl, #2
   11fd8:	str	r0, [sl]
   11fdc:	ldr	r0, [sl]
   11fe0:	cmn	r0, #1
   11fe4:	ble	12270 <sigaltstack@plt+0x9e0>
   11fe8:	ldr	r0, [sl]
   11fec:	cmp	r0, #0
   11ff0:	beq	1227c <sigaltstack@plt+0x9ec>
   11ff4:	mov	r6, r5
   11ff8:	str	r9, [sp, #20]
   11ffc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12000:	bl	1186c <close@plt>
   12004:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12008:	movw	r1, #30875	; 0x789b
   1200c:	movt	r1, #1
   12010:	bl	11494 <fdopen@plt>
   12014:	cmp	r0, #0
   12018:	beq	122f8 <sigaltstack@plt+0xa68>
   1201c:	mov	r4, r0
   12020:	add	r0, sp, #28
   12024:	mov	r1, r4
   12028:	bl	1283c <sigaltstack@plt+0xfac>
   1202c:	sub	r8, fp, #44	; 0x2c
   12030:	mov	r0, r8
   12034:	ldr	r9, [sp, #16]
   12038:	mov	r1, r9
   1203c:	bl	1283c <sigaltstack@plt+0xfac>
   12040:	add	r5, sp, #44	; 0x2c
   12044:	mov	r0, r5
   12048:	mov	r1, r6
   1204c:	bl	1283c <sigaltstack@plt+0xfac>
   12050:	ldr	r0, [sp, #12]
   12054:	stm	sp, {r0, r7}
   12058:	add	r0, sp, #28
   1205c:	mov	r1, r8
   12060:	ldr	r2, [sp, #20]
   12064:	mov	r3, r5
   12068:	bl	12870 <sigaltstack@plt+0xfe0>
   1206c:	mov	r8, r0
   12070:	mov	r0, r9
   12074:	bl	12a70 <sigaltstack@plt+0x11e0>
   12078:	mov	r0, r6
   1207c:	bl	12a70 <sigaltstack@plt+0x11e0>
   12080:	mov	r0, r7
   12084:	bl	12a70 <sigaltstack@plt+0x11e0>
   12088:	mov	r0, r4
   1208c:	bl	12a70 <sigaltstack@plt+0x11e0>
   12090:	ldr	r0, [sl]
   12094:	add	r1, sp, #24
   12098:	mov	r6, #0
   1209c:	mov	r2, #0
   120a0:	bl	11620 <waitpid@plt>
   120a4:	cmn	r0, #1
   120a8:	bgt	120e0 <sigaltstack@plt+0x850>
   120ac:	bl	11740 <__errno_location@plt>
   120b0:	mov	r4, r0
   120b4:	add	r5, sp, #24
   120b8:	ldr	r0, [r4]
   120bc:	cmp	r0, #4
   120c0:	bne	121a0 <sigaltstack@plt+0x910>
   120c4:	bl	12a90 <sigaltstack@plt+0x1200>
   120c8:	ldr	r0, [sl]
   120cc:	mov	r1, r5
   120d0:	mov	r2, #0
   120d4:	bl	11620 <waitpid@plt>
   120d8:	cmp	r0, #0
   120dc:	blt	120b8 <sigaltstack@plt+0x828>
   120e0:	str	r6, [sl]
   120e4:	movw	r4, #38284	; 0x958c
   120e8:	movt	r4, #2
   120ec:	ldr	r0, [r4]
   120f0:	cmp	r0, #0
   120f4:	beq	12108 <sigaltstack@plt+0x878>
   120f8:	ldr	r0, [r4]
   120fc:	bl	1159c <unlink@plt>
   12100:	mov	r0, #0
   12104:	str	r0, [r4]
   12108:	cmp	r8, #0
   1210c:	beq	121ac <sigaltstack@plt+0x91c>
   12110:	movw	r0, #37296	; 0x91b0
   12114:	movt	r0, #2
   12118:	ldr	r0, [r0]
   1211c:	ldr	r2, [r0]
   12120:	ldr	r0, [sp, #24]
   12124:	mov	r1, #1
   12128:	bl	12af0 <sigaltstack@plt+0x1260>
   1212c:	mov	r0, #0
   12130:	bl	12b80 <sigaltstack@plt+0x12f0>
   12134:	bl	12a90 <sigaltstack@plt+0x1200>
   12138:	ldrb	r0, [sp, #25]
   1213c:	bl	116ec <exit@plt>
   12140:	bl	1243c <sigaltstack@plt+0xbac>
   12144:	b	12190 <sigaltstack@plt+0x900>
   12148:	movw	r0, #37236	; 0x9174
   1214c:	movt	r0, #2
   12150:	ldr	r4, [r0]
   12154:	movw	r0, #37276	; 0x919c
   12158:	movt	r0, #2
   1215c:	ldr	r5, [r0]
   12160:	movw	r0, #30836	; 0x7874
   12164:	movt	r0, #1
   12168:	bl	13a88 <sigaltstack@plt+0x21f8>
   1216c:	mov	r1, #0
   12170:	stm	sp, {r0, r1}
   12174:	movw	r1, #30816	; 0x7860
   12178:	movt	r1, #1
   1217c:	movw	r2, #30822	; 0x7866
   12180:	movt	r2, #1
   12184:	mov	r0, r5
   12188:	mov	r3, r4
   1218c:	bl	152dc <sigaltstack@plt+0x3a4c>
   12190:	bl	123e8 <sigaltstack@plt+0xb58>
   12194:	mov	r0, #0
   12198:	sub	sp, fp, #28
   1219c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121a0:	movw	r0, #31043	; 0x7943
   121a4:	movt	r0, #1
   121a8:	bl	125b8 <sigaltstack@plt+0xd28>
   121ac:	bl	12acc <sigaltstack@plt+0x123c>
   121b0:	mov	r0, #0
   121b4:	mov	r1, #0
   121b8:	bl	12550 <sigaltstack@plt+0xcc0>
   121bc:	cmp	r1, #1
   121c0:	bgt	12304 <sigaltstack@plt+0xa74>
   121c4:	add	r0, r4, r5, lsl #2
   121c8:	ldr	r1, [r0, #-4]
   121cc:	movw	r0, #30887	; 0x78a7
   121d0:	movt	r0, #1
   121d4:	bl	12550 <sigaltstack@plt+0xcc0>
   121d8:	movw	r0, #37292	; 0x91ac
   121dc:	movt	r0, #2
   121e0:	ldrb	r0, [r0]
   121e4:	cmp	r0, #1
   121e8:	bne	121f8 <sigaltstack@plt+0x968>
   121ec:	movw	r0, #30933	; 0x78d5
   121f0:	movt	r0, #1
   121f4:	bl	12360 <sigaltstack@plt+0xad0>
   121f8:	movw	r0, #30957	; 0x78ed
   121fc:	movt	r0, #1
   12200:	bl	12360 <sigaltstack@plt+0xad0>
   12204:	movw	r0, #30960	; 0x78f0
   12208:	movt	r0, #1
   1220c:	bl	12360 <sigaltstack@plt+0xad0>
   12210:	ldr	r0, [r8]
   12214:	ldr	r0, [r4, r0, lsl #2]
   12218:	bl	12360 <sigaltstack@plt+0xad0>
   1221c:	ldr	r0, [r8]
   12220:	add	r0, r4, r0, lsl #2
   12224:	ldr	r0, [r0, #4]
   12228:	bl	12360 <sigaltstack@plt+0xad0>
   1222c:	mov	r0, #0
   12230:	bl	12360 <sigaltstack@plt+0xad0>
   12234:	movw	r0, #37296	; 0x91b0
   12238:	movt	r0, #2
   1223c:	mov	r4, r0
   12240:	ldr	r1, [r0]
   12244:	ldr	r0, [r1]
   12248:	bl	1153c <execvp@plt>
   1224c:	ldr	r0, [r4]
   12250:	ldr	r0, [r0]
   12254:	bl	125b8 <sigaltstack@plt+0xd28>
   12258:	movw	r0, #30963	; 0x78f3
   1225c:	movt	r0, #1
   12260:	bl	12634 <sigaltstack@plt+0xda4>
   12264:	movw	r0, #31026	; 0x7932
   12268:	movt	r0, #1
   1226c:	bl	125b8 <sigaltstack@plt+0xd28>
   12270:	movw	r0, #31031	; 0x7937
   12274:	movt	r0, #1
   12278:	bl	125b8 <sigaltstack@plt+0xd28>
   1227c:	movw	r0, #37304	; 0x91b8
   12280:	movt	r0, #2
   12284:	ldr	r0, [r0, #840]	; 0x348
   12288:	cmp	r0, #1
   1228c:	beq	1229c <sigaltstack@plt+0xa0c>
   12290:	mov	r0, #2
   12294:	mov	r1, #1
   12298:	bl	12824 <sigaltstack@plt+0xf94>
   1229c:	mov	r0, #13
   122a0:	mov	r1, #0
   122a4:	bl	12824 <sigaltstack@plt+0xf94>
   122a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   122ac:	bl	1186c <close@plt>
   122b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   122b4:	cmp	r0, #1
   122b8:	beq	122cc <sigaltstack@plt+0xa3c>
   122bc:	mov	r1, #1
   122c0:	bl	115a8 <dup2@plt>
   122c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   122c8:	bl	1186c <close@plt>
   122cc:	movw	r0, #37296	; 0x91b0
   122d0:	movt	r0, #2
   122d4:	ldr	r1, [r0]
   122d8:	ldr	r0, [r1]
   122dc:	bl	1153c <execvp@plt>
   122e0:	bl	11740 <__errno_location@plt>
   122e4:	ldr	r1, [r0]
   122e8:	mov	r0, #126	; 0x7e
   122ec:	cmp	r1, #2
   122f0:	movweq	r0, #127	; 0x7f
   122f4:	bl	11524 <_exit@plt>
   122f8:	movw	r0, #31036	; 0x793c
   122fc:	movt	r0, #1
   12300:	bl	125b8 <sigaltstack@plt+0xd28>
   12304:	add	r0, r4, r0, lsl #2
   12308:	ldr	r1, [r0, #8]
   1230c:	movw	r0, #30914	; 0x78c2
   12310:	movt	r0, #1
   12314:	bl	12550 <sigaltstack@plt+0xcc0>
   12318:	movw	r0, #37300	; 0x91b4
   1231c:	movt	r0, #2
   12320:	ldr	r1, [r0]
   12324:	cmp	r1, #1
   12328:	blt	12344 <sigaltstack@plt+0xab4>
   1232c:	push	{fp, lr}
   12330:	mov	fp, sp
   12334:	ldr	r0, [r0]
   12338:	mov	r1, #13
   1233c:	bl	116d4 <kill@plt>
   12340:	pop	{fp, lr}
   12344:	movw	r0, #38284	; 0x958c
   12348:	movt	r0, #2
   1234c:	ldr	r1, [r0]
   12350:	cmp	r1, #0
   12354:	bxeq	lr
   12358:	ldr	r0, [r0]
   1235c:	b	1159c <unlink@plt>
   12360:	push	{r4, r5, r6, sl, fp, lr}
   12364:	add	fp, sp, #16
   12368:	mov	r4, r0
   1236c:	movw	r0, #38292	; 0x9594
   12370:	movt	r0, #2
   12374:	ldr	r1, [r0]
   12378:	movw	r5, #38288	; 0x9590
   1237c:	movt	r5, #2
   12380:	ldr	r2, [r5]
   12384:	cmp	r2, r1
   12388:	bne	123c4 <sigaltstack@plt+0xb34>
   1238c:	cmp	r1, #0
   12390:	beq	123a4 <sigaltstack@plt+0xb14>
   12394:	cmn	r1, #-268435455	; 0xf0000001
   12398:	bcs	123e4 <sigaltstack@plt+0xb54>
   1239c:	lsl	r1, r1, #1
   123a0:	b	123a8 <sigaltstack@plt+0xb18>
   123a4:	mov	r1, #16
   123a8:	str	r1, [r0]
   123ac:	movw	r6, #37296	; 0x91b0
   123b0:	movt	r6, #2
   123b4:	ldr	r0, [r6]
   123b8:	lsl	r1, r1, #2
   123bc:	bl	15428 <sigaltstack@plt+0x3b98>
   123c0:	str	r0, [r6]
   123c4:	ldr	r0, [r5]
   123c8:	add	r1, r0, #1
   123cc:	str	r1, [r5]
   123d0:	movw	r1, #37296	; 0x91b0
   123d4:	movt	r1, #2
   123d8:	ldr	r1, [r1]
   123dc:	str	r4, [r1, r0, lsl #2]
   123e0:	pop	{r4, r5, r6, sl, fp, pc}
   123e4:	bl	1576c <sigaltstack@plt+0x3edc>
   123e8:	push	{r4, sl, fp, lr}
   123ec:	add	fp, sp, #8
   123f0:	movw	r4, #37276	; 0x919c
   123f4:	movt	r4, #2
   123f8:	ldr	r0, [r4]
   123fc:	bl	11638 <ferror_unlocked@plt>
   12400:	cmp	r0, #0
   12404:	bne	12430 <sigaltstack@plt+0xba0>
   12408:	ldr	r0, [r4]
   1240c:	bl	1177c <fclose@plt>
   12410:	cmp	r0, #0
   12414:	popeq	{r4, sl, fp, pc}
   12418:	movw	r1, #31267	; 0x7a23
   1241c:	movt	r1, #1
   12420:	mov	r0, #0
   12424:	mov	r2, #5
   12428:	bl	11584 <dcgettext@plt>
   1242c:	bl	125b8 <sigaltstack@plt+0xd28>
   12430:	movw	r0, #31254	; 0x7a16
   12434:	movt	r0, #1
   12438:	bl	12634 <sigaltstack@plt+0xda4>
   1243c:	push	{r4, r5, fp, lr}
   12440:	add	fp, sp, #8
   12444:	movw	r1, #31283	; 0x7a33
   12448:	movt	r1, #1
   1244c:	mov	r0, #0
   12450:	mov	r2, #5
   12454:	bl	11584 <dcgettext@plt>
   12458:	movw	r1, #38468	; 0x9644
   1245c:	movt	r1, #3
   12460:	ldr	r1, [r1]
   12464:	bl	114e8 <printf@plt>
   12468:	movw	r1, #31323	; 0x7a5b
   1246c:	movt	r1, #1
   12470:	mov	r0, #0
   12474:	mov	r2, #5
   12478:	bl	11584 <dcgettext@plt>
   1247c:	mov	r1, r0
   12480:	movw	r0, #31318	; 0x7a56
   12484:	movt	r0, #1
   12488:	bl	114e8 <printf@plt>
   1248c:	movw	r1, #31382	; 0x7a96
   12490:	movt	r1, #1
   12494:	mov	r0, #0
   12498:	mov	r2, #5
   1249c:	bl	11584 <dcgettext@plt>
   124a0:	movw	r1, #37276	; 0x919c
   124a4:	movt	r1, #2
   124a8:	ldr	r1, [r1]
   124ac:	bl	114ac <fputs_unlocked@plt>
   124b0:	movw	r0, #33972	; 0x84b4
   124b4:	movt	r0, #1
   124b8:	add	r5, r0, #4
   124bc:	movw	r1, #31580	; 0x7b5c
   124c0:	movt	r1, #1
   124c4:	movw	r4, #31456	; 0x7ae0
   124c8:	movt	r4, #1
   124cc:	ldrb	r0, [r1]
   124d0:	cmp	r0, #0
   124d4:	beq	124f4 <sigaltstack@plt+0xc64>
   124d8:	mov	r0, #0
   124dc:	mov	r2, #5
   124e0:	bl	11584 <dcgettext@plt>
   124e4:	mov	r1, r0
   124e8:	mov	r0, r4
   124ec:	bl	114e8 <printf@plt>
   124f0:	b	124fc <sigaltstack@plt+0xc6c>
   124f4:	mov	r0, #10
   124f8:	bl	11878 <putchar_unlocked@plt>
   124fc:	ldr	r1, [r5], #4
   12500:	cmp	r1, #0
   12504:	bne	124cc <sigaltstack@plt+0xc3c>
   12508:	movw	r1, #31470	; 0x7aee
   1250c:	movt	r1, #1
   12510:	mov	r0, #0
   12514:	mov	r2, #5
   12518:	bl	11584 <dcgettext@plt>
   1251c:	mov	r4, r0
   12520:	movw	r1, #31509	; 0x7b15
   12524:	movt	r1, #1
   12528:	mov	r0, #0
   1252c:	mov	r2, #5
   12530:	bl	11584 <dcgettext@plt>
   12534:	mov	r2, r0
   12538:	movw	r0, #31462	; 0x7ae6
   1253c:	movt	r0, #1
   12540:	mov	r1, r4
   12544:	bl	114e8 <printf@plt>
   12548:	pop	{r4, r5, fp, lr}
   1254c:	b	15300 <sigaltstack@plt+0x3a70>
   12550:	push	{fp, lr}
   12554:	mov	fp, sp
   12558:	cmp	r0, #0
   1255c:	beq	12588 <sigaltstack@plt+0xcf8>
   12560:	mov	r4, r1
   12564:	mov	r1, r0
   12568:	mov	r0, #0
   1256c:	mov	r2, #5
   12570:	bl	11584 <dcgettext@plt>
   12574:	mov	r2, r0
   12578:	mov	r0, #0
   1257c:	mov	r1, #0
   12580:	mov	r3, r4
   12584:	bl	11650 <error@plt>
   12588:	movw	r1, #32916	; 0x8094
   1258c:	movt	r1, #1
   12590:	mov	r0, #0
   12594:	mov	r2, #5
   12598:	bl	11584 <dcgettext@plt>
   1259c:	mov	r2, r0
   125a0:	movw	r0, #38468	; 0x9644
   125a4:	movt	r0, #3
   125a8:	ldr	r3, [r0]
   125ac:	mov	r0, #2
   125b0:	mov	r1, #0
   125b4:	bl	11650 <error@plt>
   125b8:	push	{fp, lr}
   125bc:	mov	fp, sp
   125c0:	mov	r4, r0
   125c4:	bl	11740 <__errno_location@plt>
   125c8:	ldr	r5, [r0]
   125cc:	bl	12a90 <sigaltstack@plt+0x1200>
   125d0:	movw	r2, #32954	; 0x80ba
   125d4:	movt	r2, #1
   125d8:	mov	r0, #0
   125dc:	mov	r1, r5
   125e0:	mov	r3, r4
   125e4:	bl	11650 <error@plt>
   125e8:	bl	12acc <sigaltstack@plt+0x123c>
   125ec:	push	{fp, lr}
   125f0:	mov	fp, sp
   125f4:	sub	sp, sp, #104	; 0x68
   125f8:	mov	r1, sp
   125fc:	bl	177e8 <sigaltstack@plt+0x5f58>
   12600:	mov	r1, r0
   12604:	mov	r0, #0
   12608:	cmp	r1, #0
   1260c:	beq	12618 <sigaltstack@plt+0xd88>
   12610:	mov	sp, fp
   12614:	pop	{fp, pc}
   12618:	ldr	r0, [sp, #16]
   1261c:	and	r0, r0, #61440	; 0xf000
   12620:	sub	r0, r0, #16384	; 0x4000
   12624:	clz	r0, r0
   12628:	lsr	r0, r0, #5
   1262c:	mov	sp, fp
   12630:	pop	{fp, pc}
   12634:	push	{fp, lr}
   12638:	mov	fp, sp
   1263c:	mov	r1, r0
   12640:	mov	r0, #0
   12644:	mov	r2, #5
   12648:	bl	11584 <dcgettext@plt>
   1264c:	mov	r3, r0
   12650:	movw	r2, #32954	; 0x80ba
   12654:	movt	r2, #1
   12658:	mov	r0, #0
   1265c:	mov	r1, #0
   12660:	bl	11650 <error@plt>
   12664:	bl	12acc <sigaltstack@plt+0x123c>
   12668:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1266c:	add	fp, sp, #28
   12670:	sub	sp, sp, #4
   12674:	mov	r4, r2
   12678:	mov	r6, r1
   1267c:	mov	r5, r0
   12680:	movw	r1, #30961	; 0x78f1
   12684:	movt	r1, #1
   12688:	bl	114dc <strcmp@plt>
   1268c:	cmp	r0, #0
   12690:	beq	12740 <sigaltstack@plt+0xeb0>
   12694:	cmp	r6, #0
   12698:	beq	12730 <sigaltstack@plt+0xea0>
   1269c:	mov	r0, r4
   126a0:	bl	136e8 <sigaltstack@plt+0x1e58>
   126a4:	mov	r8, r0
   126a8:	mov	r0, r5
   126ac:	bl	11704 <strlen@plt>
   126b0:	mov	r6, r0
   126b4:	mov	r0, r8
   126b8:	bl	13734 <sigaltstack@plt+0x1ea4>
   126bc:	mov	sl, r0
   126c0:	mov	r0, r5
   126c4:	bl	136e8 <sigaltstack@plt+0x1e58>
   126c8:	ldrb	r0, [r0]
   126cc:	cmp	r0, #0
   126d0:	mov	r7, #0
   126d4:	beq	126e8 <sigaltstack@plt+0xe58>
   126d8:	add	r0, r5, r6
   126dc:	ldrb	r0, [r0, #-1]
   126e0:	subs	r7, r0, #47	; 0x2f
   126e4:	movwne	r7, #1
   126e8:	add	r0, sl, r6
   126ec:	add	r9, r0, r7
   126f0:	add	r0, r9, #1
   126f4:	bl	153ec <sigaltstack@plt+0x3b5c>
   126f8:	mov	r4, r0
   126fc:	mov	r1, r5
   12700:	mov	r2, r6
   12704:	bl	11530 <memcpy@plt>
   12708:	mov	r0, #47	; 0x2f
   1270c:	mov	r1, r4
   12710:	strb	r0, [r1, r6]!
   12714:	add	r0, r1, r7
   12718:	mov	r1, r8
   1271c:	mov	r2, sl
   12720:	bl	11530 <memcpy@plt>
   12724:	mov	r0, #0
   12728:	strb	r0, [r4, r9]
   1272c:	b	12734 <sigaltstack@plt+0xea4>
   12730:	mov	r4, r5
   12734:	mov	r0, r4
   12738:	sub	sp, fp, #28
   1273c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12740:	movw	r0, #32957	; 0x80bd
   12744:	movt	r0, #1
   12748:	bl	12634 <sigaltstack@plt+0xda4>
   1274c:	push	{r4, sl, fp, lr}
   12750:	add	fp, sp, #8
   12754:	mov	r4, r0
   12758:	bl	11800 <fopen64@plt>
   1275c:	cmp	r0, #0
   12760:	popne	{r4, sl, fp, pc}
   12764:	mov	r0, r4
   12768:	bl	125b8 <sigaltstack@plt+0xd28>
   1276c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12770:	add	fp, sp, #24
   12774:	movw	r0, #38296	; 0x9598
   12778:	movt	r0, #2
   1277c:	mov	r1, #268435456	; 0x10000000
   12780:	str	r1, [r0, #132]	; 0x84
   12784:	add	r4, r0, #4
   12788:	mov	r0, r4
   1278c:	bl	117c4 <sigemptyset@plt>
   12790:	mov	r5, #0
   12794:	movw	r7, #34076	; 0x851c
   12798:	movt	r7, #1
   1279c:	ldr	r1, [r7, r5, lsl #2]
   127a0:	mov	r0, r4
   127a4:	bl	116a4 <sigaddset@plt>
   127a8:	add	r5, r5, #1
   127ac:	cmp	r5, #7
   127b0:	bne	1279c <sigaltstack@plt+0xf0c>
   127b4:	mov	r5, #0
   127b8:	movw	r4, #37304	; 0x91b8
   127bc:	movt	r4, #2
   127c0:	movw	r8, #11252	; 0x2bf4
   127c4:	movt	r8, #1
   127c8:	ldr	r6, [r7, r5, lsl #2]
   127cc:	mov	r0, r6
   127d0:	mov	r1, #0
   127d4:	mov	r2, r4
   127d8:	bl	115fc <sigaction@plt>
   127dc:	ldr	r0, [r4]
   127e0:	cmp	r0, #1
   127e4:	beq	127f4 <sigaltstack@plt+0xf64>
   127e8:	mov	r0, r6
   127ec:	mov	r1, r8
   127f0:	bl	12824 <sigaltstack@plt+0xf94>
   127f4:	add	r4, r4, #140	; 0x8c
   127f8:	add	r5, r5, #1
   127fc:	cmp	r5, #7
   12800:	bne	127c8 <sigaltstack@plt+0xf38>
   12804:	mov	r0, #17
   12808:	mov	r1, #0
   1280c:	bl	11560 <signal@plt>
   12810:	movw	r0, #38436	; 0x9624
   12814:	movt	r0, #2
   12818:	mov	r1, #1
   1281c:	strb	r1, [r0]
   12820:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12824:	movw	r2, #38296	; 0x9598
   12828:	movt	r2, #2
   1282c:	str	r1, [r2]
   12830:	mov	r1, r2
   12834:	mov	r2, #0
   12838:	b	115fc <sigaction@plt>
   1283c:	push	{r4, sl, fp, lr}
   12840:	add	fp, sp, #8
   12844:	mov	r4, r0
   12848:	str	r1, [r0]
   1284c:	movw	r0, #1
   12850:	movt	r0, #1
   12854:	bl	153ec <sigaltstack@plt+0x3b5c>
   12858:	str	r0, [r4, #4]
   1285c:	str	r0, [r4, #8]
   12860:	str	r0, [r4, #12]
   12864:	mov	r1, #10
   12868:	strb	r1, [r0]
   1286c:	pop	{r4, sl, fp, pc}
   12870:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12874:	add	fp, sp, #28
   12878:	sub	sp, sp, #300	; 0x12c
   1287c:	str	r3, [sp, #32]
   12880:	str	r2, [sp, #20]
   12884:	str	r1, [sp, #28]
   12888:	mov	r8, r0
   1288c:	add	r6, sp, #40	; 0x28
   12890:	mov	r1, r6
   12894:	bl	12c20 <sigaltstack@plt+0x1390>
   12898:	cmp	r0, #1
   1289c:	blt	12a54 <sigaltstack@plt+0x11c4>
   128a0:	add	r5, r6, #1
   128a4:	mov	r7, #1
   128a8:	mov	r9, #1
   128ac:	str	r5, [sp, #24]
   128b0:	bl	12a90 <sigaltstack@plt+0x1200>
   128b4:	ldrb	r0, [sp, #40]	; 0x28
   128b8:	cmp	r0, #32
   128bc:	bne	128e0 <sigaltstack@plt+0x1050>
   128c0:	mov	r0, r5
   128c4:	bl	11680 <puts@plt>
   128c8:	mov	r0, r8
   128cc:	mov	r1, r6
   128d0:	bl	12c20 <sigaltstack@plt+0x1390>
   128d4:	cmp	r0, #1
   128d8:	bge	128b0 <sigaltstack@plt+0x1020>
   128dc:	b	12a54 <sigaltstack@plt+0x11c4>
   128e0:	mov	r4, r8
   128e4:	bl	11740 <__errno_location@plt>
   128e8:	mov	r8, r0
   128ec:	mov	r0, #0
   128f0:	str	r0, [r8]
   128f4:	mov	r0, r5
   128f8:	add	r5, sp, #36	; 0x24
   128fc:	mov	r1, r5
   12900:	mov	r2, #10
   12904:	bl	11770 <strtoimax@plt>
   12908:	mov	sl, r0
   1290c:	mvn	r0, #-2147483648	; 0x80000000
   12910:	subs	r0, r0, sl
   12914:	rscs	r0, r1, #0
   12918:	bcc	12a4c <sigaltstack@plt+0x11bc>
   1291c:	ldr	r0, [r8]
   12920:	cmp	r0, #0
   12924:	ldreq	r0, [sp, #36]	; 0x24
   12928:	ldrbeq	r1, [r0]
   1292c:	cmpeq	r1, #44	; 0x2c
   12930:	bne	12a4c <sigaltstack@plt+0x11bc>
   12934:	add	r0, r0, #1
   12938:	mov	r1, r5
   1293c:	mov	r2, #10
   12940:	bl	11770 <strtoimax@plt>
   12944:	mov	r6, r0
   12948:	mvn	r0, #-2147483648	; 0x80000000
   1294c:	subs	r0, r0, r6
   12950:	rscs	r0, r1, #0
   12954:	bcc	12a4c <sigaltstack@plt+0x11bc>
   12958:	ldr	r0, [r8]
   1295c:	cmp	r0, #0
   12960:	ldreq	r0, [sp, #36]	; 0x24
   12964:	ldrbeq	r0, [r0]
   12968:	cmpeq	r0, #0
   1296c:	bne	12a4c <sigaltstack@plt+0x11bc>
   12970:	cmp	sl, r6
   12974:	mov	r1, r6
   12978:	movge	r1, sl
   1297c:	ldrb	r0, [sp, #40]	; 0x28
   12980:	cmp	r0, #99	; 0x63
   12984:	beq	129b4 <sigaltstack@plt+0x1124>
   12988:	cmp	r0, #105	; 0x69
   1298c:	bne	12a4c <sigaltstack@plt+0x11bc>
   12990:	mov	r8, r4
   12994:	movw	r0, #37292	; 0x91ac
   12998:	movt	r0, #2
   1299c:	ldrb	r0, [r0]
   129a0:	cmp	r0, #1
   129a4:	bne	12a08 <sigaltstack@plt+0x1178>
   129a8:	mov	r0, r8
   129ac:	bl	12ce4 <sigaltstack@plt+0x1454>
   129b0:	b	12a1c <sigaltstack@plt+0x118c>
   129b4:	movw	r0, #37276	; 0x919c
   129b8:	movt	r0, #2
   129bc:	ldr	r2, [r0]
   129c0:	mov	r8, r4
   129c4:	mov	r0, r4
   129c8:	bl	12d4c <sigaltstack@plt+0x14bc>
   129cc:	ldr	r0, [sp, #32]
   129d0:	str	r0, [sp]
   129d4:	ldr	r0, [fp, #8]
   129d8:	stmib	sp, {r0, r9}
   129dc:	str	r6, [sp, #12]
   129e0:	ldr	r0, [fp, #12]
   129e4:	str	r0, [sp, #16]
   129e8:	ldr	r0, [sp, #28]
   129ec:	ldr	r1, [sp, #20]
   129f0:	mov	r2, r7
   129f4:	mov	r3, sl
   129f8:	bl	12de4 <sigaltstack@plt+0x1554>
   129fc:	cmp	r0, #0
   12a00:	bne	12a38 <sigaltstack@plt+0x11a8>
   12a04:	b	12a64 <sigaltstack@plt+0x11d4>
   12a08:	movw	r0, #37276	; 0x919c
   12a0c:	movt	r0, #2
   12a10:	ldr	r2, [r0]
   12a14:	mov	r0, r8
   12a18:	bl	12d4c <sigaltstack@plt+0x14bc>
   12a1c:	ldr	r0, [sp, #28]
   12a20:	mov	r1, sl
   12a24:	ldr	r2, [fp, #12]
   12a28:	bl	12d4c <sigaltstack@plt+0x14bc>
   12a2c:	ldr	r0, [sp, #32]
   12a30:	mov	r1, r6
   12a34:	bl	12ce4 <sigaltstack@plt+0x1454>
   12a38:	add	r9, r9, r6
   12a3c:	add	r7, r7, sl
   12a40:	add	r6, sp, #40	; 0x28
   12a44:	ldr	r5, [sp, #24]
   12a48:	b	128c8 <sigaltstack@plt+0x1038>
   12a4c:	add	r0, sp, #40	; 0x28
   12a50:	bl	12634 <sigaltstack@plt+0xda4>
   12a54:	cmp	r0, #0
   12a58:	movwne	r0, #1
   12a5c:	sub	sp, fp, #28
   12a60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a64:	mov	r0, #0
   12a68:	sub	sp, fp, #28
   12a6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a70:	push	{fp, lr}
   12a74:	mov	fp, sp
   12a78:	bl	1177c <fclose@plt>
   12a7c:	cmp	r0, #0
   12a80:	popeq	{fp, pc}
   12a84:	movw	r0, #32999	; 0x80e7
   12a88:	movt	r0, #1
   12a8c:	bl	125b8 <sigaltstack@plt+0xd28>
   12a90:	push	{r4, sl, fp, lr}
   12a94:	add	fp, sp, #8
   12a98:	movw	r0, #38440	; 0x9628
   12a9c:	movt	r0, #2
   12aa0:	ldr	r4, [r0]
   12aa4:	cmp	r4, #0
   12aa8:	popeq	{r4, sl, fp, pc}
   12aac:	mov	r0, #0
   12ab0:	bl	12318 <sigaltstack@plt+0xa88>
   12ab4:	mov	r0, r4
   12ab8:	bl	12b80 <sigaltstack@plt+0x12f0>
   12abc:	mov	r0, r4
   12ac0:	bl	114b8 <raise@plt>
   12ac4:	mov	r0, #2
   12ac8:	bl	116ec <exit@plt>
   12acc:	push	{fp, lr}
   12ad0:	mov	fp, sp
   12ad4:	mov	r0, #0
   12ad8:	bl	12318 <sigaltstack@plt+0xa88>
   12adc:	mov	r0, #0
   12ae0:	bl	12b80 <sigaltstack@plt+0x12f0>
   12ae4:	bl	12a90 <sigaltstack@plt+0x1200>
   12ae8:	mov	r0, #2
   12aec:	bl	116ec <exit@plt>
   12af0:	push	{r4, r5, fp, lr}
   12af4:	add	fp, sp, #8
   12af8:	sub	sp, sp, #8
   12afc:	ubfx	r5, r0, #8, #8
   12b00:	tst	r0, #127	; 0x7f
   12b04:	mvnne	r5, #-2147483648	; 0x80000000
   12b08:	cmp	r5, r1
   12b0c:	suble	sp, fp, #8
   12b10:	pople	{r4, r5, fp, pc}
   12b14:	mov	r4, r2
   12b18:	cmp	r5, #126	; 0x7e
   12b1c:	beq	12b34 <sigaltstack@plt+0x12a4>
   12b20:	cmp	r5, #127	; 0x7f
   12b24:	bne	12b40 <sigaltstack@plt+0x12b0>
   12b28:	movw	r1, #33051	; 0x811b
   12b2c:	movt	r1, #1
   12b30:	b	12b58 <sigaltstack@plt+0x12c8>
   12b34:	movw	r1, #33006	; 0x80ee
   12b38:	movt	r1, #1
   12b3c:	b	12b58 <sigaltstack@plt+0x12c8>
   12b40:	movw	r0, #33085	; 0x813d
   12b44:	movt	r0, #1
   12b48:	movw	r1, #33116	; 0x815c
   12b4c:	movt	r1, #1
   12b50:	cmn	r5, #-2147483647	; 0x80000001
   12b54:	moveq	r1, r0
   12b58:	mov	r0, #0
   12b5c:	mov	r2, #5
   12b60:	bl	11584 <dcgettext@plt>
   12b64:	mov	r2, r0
   12b68:	str	r5, [sp]
   12b6c:	mov	r0, #0
   12b70:	mov	r1, #0
   12b74:	mov	r3, r4
   12b78:	bl	11650 <error@plt>
   12b7c:	bl	12acc <sigaltstack@plt+0x123c>
   12b80:	push	{r4, r5, r6, r7, fp, lr}
   12b84:	add	fp, sp, #16
   12b88:	mov	r4, r0
   12b8c:	movw	r0, #38436	; 0x9624
   12b90:	movt	r0, #2
   12b94:	ldrb	r0, [r0]
   12b98:	cmp	r0, #1
   12b9c:	popne	{r4, r5, r6, r7, fp, pc}
   12ba0:	mov	r6, #0
   12ba4:	movw	r5, #37304	; 0x91b8
   12ba8:	movt	r5, #2
   12bac:	movw	r7, #34076	; 0x851c
   12bb0:	movt	r7, #1
   12bb4:	cmp	r4, #0
   12bb8:	ldrne	r0, [r7, r6, lsl #2]
   12bbc:	cmpne	r0, r4
   12bc0:	bne	12be0 <sigaltstack@plt+0x1350>
   12bc4:	ldr	r0, [r5]
   12bc8:	cmp	r0, #1
   12bcc:	beq	12be0 <sigaltstack@plt+0x1350>
   12bd0:	ldr	r0, [r7, r6, lsl #2]
   12bd4:	mov	r1, r5
   12bd8:	mov	r2, #0
   12bdc:	bl	115fc <sigaction@plt>
   12be0:	add	r5, r5, #140	; 0x8c
   12be4:	add	r6, r6, #1
   12be8:	cmp	r6, #7
   12bec:	bne	12bb4 <sigaltstack@plt+0x1324>
   12bf0:	pop	{r4, r5, r6, r7, fp, pc}
   12bf4:	cmp	r0, #2
   12bf8:	bne	12c10 <sigaltstack@plt+0x1380>
   12bfc:	movw	r1, #38437	; 0x9625
   12c00:	movt	r1, #2
   12c04:	ldrb	r1, [r1]
   12c08:	cmp	r1, #0
   12c0c:	bxne	lr
   12c10:	movw	r1, #38440	; 0x9628
   12c14:	movt	r1, #2
   12c18:	str	r0, [r1]
   12c1c:	bx	lr
   12c20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c24:	add	fp, sp, #28
   12c28:	sub	sp, sp, #4
   12c2c:	mov	sl, r1
   12c30:	mov	r9, r0
   12c34:	ldr	r4, [r0, #4]
   12c38:	mov	r0, r4
   12c3c:	mov	r1, #10
   12c40:	bl	115d8 <rawmemchr@plt>
   12c44:	sub	r7, r0, r4
   12c48:	mov	r8, #0
   12c4c:	cmp	r7, #255	; 0xff
   12c50:	bhi	12cd8 <sigaltstack@plt+0x1448>
   12c54:	mov	r5, r0
   12c58:	mov	r6, #256	; 0x100
   12c5c:	mov	r0, sl
   12c60:	mov	r1, r4
   12c64:	mov	r2, r7
   12c68:	bl	11530 <memcpy@plt>
   12c6c:	ldr	r0, [r9, #12]
   12c70:	cmp	r5, r0
   12c74:	bcc	12cb4 <sigaltstack@plt+0x1424>
   12c78:	mov	r0, r9
   12c7c:	bl	1348c <sigaltstack@plt+0x1bfc>
   12c80:	cmp	r0, #0
   12c84:	beq	12ccc <sigaltstack@plt+0x143c>
   12c88:	sub	r6, r6, r7
   12c8c:	add	sl, sl, r7
   12c90:	ldr	r4, [r9, #4]
   12c94:	mov	r0, r4
   12c98:	mov	r1, #10
   12c9c:	bl	115d8 <rawmemchr@plt>
   12ca0:	mov	r5, r0
   12ca4:	sub	r7, r0, r4
   12ca8:	cmp	r6, r7
   12cac:	bhi	12c5c <sigaltstack@plt+0x13cc>
   12cb0:	b	12cd8 <sigaltstack@plt+0x1448>
   12cb4:	mov	r0, #0
   12cb8:	strb	r0, [sl, r7]
   12cbc:	add	r0, r5, #1
   12cc0:	str	r0, [r9, #4]
   12cc4:	mov	r8, #1
   12cc8:	b	12cd8 <sigaltstack@plt+0x1448>
   12ccc:	mov	r8, #0
   12cd0:	cmp	r7, #0
   12cd4:	mvneq	r8, #0
   12cd8:	mov	r0, r8
   12cdc:	sub	sp, fp, #28
   12ce0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ce4:	push	{r4, r5, fp, lr}
   12ce8:	add	fp, sp, #8
   12cec:	cmp	r1, #0
   12cf0:	popeq	{r4, r5, fp, pc}
   12cf4:	mov	r4, r1
   12cf8:	mov	r5, r0
   12cfc:	ldr	r0, [r5, #4]
   12d00:	mov	r1, #10
   12d04:	bl	115d8 <rawmemchr@plt>
   12d08:	str	r0, [r5, #4]
   12d0c:	ldr	r1, [r5, #12]
   12d10:	cmp	r0, r1
   12d14:	beq	12d30 <sigaltstack@plt+0x14a0>
   12d18:	add	r0, r0, #1
   12d1c:	str	r0, [r5, #4]
   12d20:	sub	r4, r4, #1
   12d24:	cmp	r4, #0
   12d28:	bne	12cfc <sigaltstack@plt+0x146c>
   12d2c:	b	12d48 <sigaltstack@plt+0x14b8>
   12d30:	mov	r0, r5
   12d34:	bl	1348c <sigaltstack@plt+0x1bfc>
   12d38:	cmp	r0, #0
   12d3c:	beq	12d48 <sigaltstack@plt+0x14b8>
   12d40:	cmp	r4, #0
   12d44:	bne	12cfc <sigaltstack@plt+0x146c>
   12d48:	pop	{r4, r5, fp, pc}
   12d4c:	push	{r4, r5, r6, r7, fp, lr}
   12d50:	add	fp, sp, #16
   12d54:	mov	r4, r2
   12d58:	mov	r5, r0
   12d5c:	ldr	r7, [r0, #4]
   12d60:	cmp	r1, #0
   12d64:	beq	12dcc <sigaltstack@plt+0x153c>
   12d68:	mov	r6, r1
   12d6c:	ldr	r0, [r5, #4]
   12d70:	mov	r1, #10
   12d74:	bl	115d8 <rawmemchr@plt>
   12d78:	str	r0, [r5, #4]
   12d7c:	ldr	r1, [r5, #12]
   12d80:	cmp	r0, r1
   12d84:	beq	12da0 <sigaltstack@plt+0x1510>
   12d88:	add	r0, r0, #1
   12d8c:	str	r0, [r5, #4]
   12d90:	sub	r6, r6, #1
   12d94:	cmp	r6, #0
   12d98:	bne	12d6c <sigaltstack@plt+0x14dc>
   12d9c:	b	12dcc <sigaltstack@plt+0x153c>
   12da0:	sub	r1, r1, r7
   12da4:	mov	r0, r7
   12da8:	mov	r2, r4
   12dac:	bl	13524 <sigaltstack@plt+0x1c94>
   12db0:	mov	r0, r5
   12db4:	bl	1348c <sigaltstack@plt+0x1bfc>
   12db8:	cmp	r0, #0
   12dbc:	popeq	{r4, r5, r6, r7, fp, pc}
   12dc0:	ldr	r7, [r5, #4]
   12dc4:	cmp	r6, #0
   12dc8:	bne	12d6c <sigaltstack@plt+0x14dc>
   12dcc:	ldr	r0, [r5, #4]
   12dd0:	sub	r1, r0, r7
   12dd4:	mov	r0, r7
   12dd8:	mov	r2, r4
   12ddc:	pop	{r4, r5, r6, r7, fp, lr}
   12de0:	b	13524 <sigaltstack@plt+0x1c94>
   12de4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12de8:	add	fp, sp, #28
   12dec:	sub	sp, sp, #28
   12df0:	sub	sp, sp, #65536	; 0x10000
   12df4:	str	r3, [sp, #16]
   12df8:	stmib	sp, {r1, r2}
   12dfc:	str	r0, [sp, #12]
   12e00:	mov	r0, #37	; 0x25
   12e04:	bl	11878 <putchar_unlocked@plt>
   12e08:	cmp	r0, #37	; 0x25
   12e0c:	bne	13424 <sigaltstack@plt+0x1b94>
   12e10:	movw	r5, #37276	; 0x919c
   12e14:	movt	r5, #2
   12e18:	movw	r6, #37272	; 0x9198
   12e1c:	movt	r6, #2
   12e20:	movw	r7, #37292	; 0x91ac
   12e24:	movt	r7, #2
   12e28:	mov	r4, #1
   12e2c:	movw	sl, #1029	; 0x405
   12e30:	movt	sl, #1
   12e34:	ldr	r0, [r5]
   12e38:	bl	13560 <sigaltstack@plt+0x1cd0>
   12e3c:	bl	1358c <sigaltstack@plt+0x1cfc>
   12e40:	sub	r9, r0, #49	; 0x31
   12e44:	cmp	r9, #69	; 0x45
   12e48:	bhi	12f84 <sigaltstack@plt+0x16f4>
   12e4c:	add	r0, pc, #0
   12e50:	ldr	pc, [r0, r9, lsl #2]
   12e54:	andeq	r2, r1, ip, ror #30
   12e58:	andeq	r2, r1, ip, ror #30
   12e5c:	andeq	r2, r1, r8, lsr #31
   12e60:	andeq	r2, r1, r8, lsr #31
   12e64:	andeq	r2, r1, r8, lsr #31
   12e68:	andeq	r2, r1, r8, lsr #31
   12e6c:	andeq	r2, r1, r8, lsr #31
   12e70:	andeq	r2, r1, r8, lsr #31
   12e74:	andeq	r2, r1, r8, lsr #31
   12e78:	andeq	r2, r1, r8, lsr #31
   12e7c:	andeq	r2, r1, r8, lsr #31
   12e80:	andeq	r2, r1, r8, lsr #31
   12e84:	andeq	r2, r1, r8, lsr #31
   12e88:	andeq	r2, r1, r8, lsr #31
   12e8c:	andeq	r2, r1, r8, lsr #31
   12e90:	andeq	r2, r1, r8, lsr #31
   12e94:	andeq	r2, r1, r8, lsr #31
   12e98:	andeq	r2, r1, r8, lsr #31
   12e9c:	andeq	r2, r1, r8, lsr #31
   12ea0:	andeq	r2, r1, r8, lsr #31
   12ea4:	andeq	r2, r1, r8, lsr #31
   12ea8:	andeq	r2, r1, r8, lsr #31
   12eac:	andeq	r2, r1, r8, lsr #31
   12eb0:	andeq	r2, r1, r8, lsr #31
   12eb4:	andeq	r2, r1, r8, lsr #31
   12eb8:	andeq	r2, r1, r8, lsr #31
   12ebc:	andeq	r2, r1, r8, lsr #31
   12ec0:	andeq	r2, r1, r8, lsr #31
   12ec4:	andeq	r2, r1, r8, lsr #31
   12ec8:	andeq	r2, r1, r8, lsr #31
   12ecc:	andeq	r2, r1, r8, lsr #31
   12ed0:	andeq	r2, r1, r8, lsr #31
   12ed4:	andeq	r2, r1, r8, lsr #31
   12ed8:	andeq	r2, r1, r8, lsr #31
   12edc:	andeq	r2, r1, r8, lsr #31
   12ee0:	andeq	r2, r1, r8, lsr #31
   12ee4:	andeq	r2, r1, r8, lsr #31
   12ee8:	andeq	r2, r1, r8, lsr #31
   12eec:	andeq	r2, r1, r8, lsr #31
   12ef0:	andeq	r2, r1, r8, lsr #31
   12ef4:	andeq	r2, r1, r8, lsr #31
   12ef8:	andeq	r2, r1, r8, lsr #31
   12efc:	andeq	r2, r1, r8, lsr #31
   12f00:	andeq	r2, r1, r8, lsr #31
   12f04:	andeq	r2, r1, r8, lsr #31
   12f08:	andeq	r2, r1, r8, lsr #31
   12f0c:	andeq	r2, r1, r8, lsr #31
   12f10:	andeq	r2, r1, r8, lsr #31
   12f14:	andeq	r2, r1, r8, lsr #31
   12f18:	andeq	r2, r1, r8, lsr #31
   12f1c:	andeq	r2, r1, r8, lsr #31
   12f20:	andeq	r2, r1, r8, lsr #31
   12f24:	andeq	r2, r1, r4, asr #31
   12f28:	andeq	r2, r1, r8, lsr #31
   12f2c:	andeq	r2, r1, r8, lsr #31
   12f30:	andeq	r2, r1, r8, lsr #31
   12f34:	andeq	r2, r1, r8, lsr #31
   12f38:	andeq	r2, r1, r8, lsr #31
   12f3c:	andeq	r2, r1, r8, lsr #31
   12f40:	andeq	r2, r1, ip, ror #30
   12f44:	andeq	r2, r1, r8, lsr #31
   12f48:	andeq	r2, r1, r8, lsr #31
   12f4c:	andeq	r2, r1, r8, lsr #31
   12f50:	andeq	r2, r1, r8, lsr #31
   12f54:	andeq	r2, r1, ip, ror #30
   12f58:	andeq	r2, r1, ip, ror #30
   12f5c:	andeq	r2, r1, ip, ror #30
   12f60:	andeq	r2, r1, r8, lsr #31
   12f64:	andeq	r2, r1, r8, lsr #31
   12f68:	andeq	r2, r1, ip, ror #30
   12f6c:	bl	1358c <sigaltstack@plt+0x1cfc>
   12f70:	cmp	r0, #10
   12f74:	beq	12ffc <sigaltstack@plt+0x176c>
   12f78:	bl	13608 <sigaltstack@plt+0x1d78>
   12f7c:	bl	1363c <sigaltstack@plt+0x1dac>
   12f80:	b	12fb0 <sigaltstack@plt+0x1720>
   12f84:	cmn	r0, #1
   12f88:	beq	12f98 <sigaltstack@plt+0x1708>
   12f8c:	cmp	r0, #10
   12f90:	blne	1363c <sigaltstack@plt+0x1dac>
   12f94:	b	12fac <sigaltstack@plt+0x171c>
   12f98:	ldr	r0, [r6]
   12f9c:	bl	11860 <feof_unlocked@plt>
   12fa0:	cmp	r0, #0
   12fa4:	bne	13168 <sigaltstack@plt+0x18d8>
   12fa8:	bl	1363c <sigaltstack@plt+0x1dac>
   12fac:	bl	13608 <sigaltstack@plt+0x1d78>
   12fb0:	mov	r0, #37	; 0x25
   12fb4:	bl	11878 <putchar_unlocked@plt>
   12fb8:	cmp	r0, #37	; 0x25
   12fbc:	beq	12e34 <sigaltstack@plt+0x15a4>
   12fc0:	b	13424 <sigaltstack@plt+0x1b94>
   12fc4:	bl	1358c <sigaltstack@plt+0x1cfc>
   12fc8:	mov	r8, r0
   12fcc:	sub	r0, r0, #98	; 0x62
   12fd0:	cmp	r0, #16
   12fd4:	bhi	12fe0 <sigaltstack@plt+0x1750>
   12fd8:	tst	sl, r4, lsl r0
   12fdc:	bne	12fec <sigaltstack@plt+0x175c>
   12fe0:	sub	r0, r8, #49	; 0x31
   12fe4:	cmp	r0, #2
   12fe8:	bcs	13138 <sigaltstack@plt+0x18a8>
   12fec:	bl	1358c <sigaltstack@plt+0x1cfc>
   12ff0:	cmp	r0, #10
   12ff4:	bne	12f78 <sigaltstack@plt+0x16e8>
   12ff8:	b	13140 <sigaltstack@plt+0x18b0>
   12ffc:	cmp	r9, #69	; 0x45
   13000:	bhi	12fac <sigaltstack@plt+0x171c>
   13004:	add	r0, pc, #0
   13008:	ldr	pc, [r0, r9, lsl #2]
   1300c:	andeq	r3, r1, ip, lsr r2
   13010:	andeq	r3, r1, r8, asr r2
   13014:	andeq	r2, r1, ip, lsr #31
   13018:	andeq	r2, r1, ip, lsr #31
   1301c:	andeq	r2, r1, ip, lsr #31
   13020:	andeq	r2, r1, ip, lsr #31
   13024:	andeq	r2, r1, ip, lsr #31
   13028:	andeq	r2, r1, ip, lsr #31
   1302c:	andeq	r2, r1, ip, lsr #31
   13030:	andeq	r2, r1, ip, lsr #31
   13034:	andeq	r2, r1, ip, lsr #31
   13038:	andeq	r2, r1, ip, lsr #31
   1303c:	andeq	r2, r1, ip, lsr #31
   13040:	andeq	r2, r1, ip, lsr #31
   13044:	andeq	r2, r1, ip, lsr #31
   13048:	andeq	r2, r1, ip, lsr #31
   1304c:	andeq	r2, r1, ip, lsr #31
   13050:	andeq	r2, r1, ip, lsr #31
   13054:	andeq	r2, r1, ip, lsr #31
   13058:	andeq	r2, r1, ip, lsr #31
   1305c:	andeq	r2, r1, ip, lsr #31
   13060:	andeq	r2, r1, ip, lsr #31
   13064:	andeq	r2, r1, ip, lsr #31
   13068:	andeq	r2, r1, ip, lsr #31
   1306c:	andeq	r2, r1, ip, lsr #31
   13070:	andeq	r2, r1, ip, lsr #31
   13074:	andeq	r2, r1, ip, lsr #31
   13078:	andeq	r2, r1, ip, lsr #31
   1307c:	andeq	r2, r1, ip, lsr #31
   13080:	andeq	r2, r1, ip, lsr #31
   13084:	andeq	r2, r1, ip, lsr #31
   13088:	andeq	r2, r1, ip, lsr #31
   1308c:	andeq	r2, r1, ip, lsr #31
   13090:	andeq	r2, r1, ip, lsr #31
   13094:	andeq	r2, r1, ip, lsr #31
   13098:	andeq	r2, r1, ip, lsr #31
   1309c:	andeq	r2, r1, ip, lsr #31
   130a0:	andeq	r2, r1, ip, lsr #31
   130a4:	andeq	r2, r1, ip, lsr #31
   130a8:	andeq	r2, r1, ip, lsr #31
   130ac:	andeq	r2, r1, ip, lsr #31
   130b0:	andeq	r2, r1, ip, lsr #31
   130b4:	andeq	r2, r1, ip, lsr #31
   130b8:	andeq	r2, r1, ip, lsr #31
   130bc:	andeq	r2, r1, ip, lsr #31
   130c0:	andeq	r2, r1, ip, lsr #31
   130c4:	andeq	r2, r1, ip, lsr #31
   130c8:	andeq	r2, r1, ip, lsr #31
   130cc:	andeq	r2, r1, ip, lsr #31
   130d0:	andeq	r2, r1, ip, lsr #31
   130d4:	andeq	r2, r1, ip, lsr #31
   130d8:	andeq	r2, r1, ip, lsr #31
   130dc:	andeq	r3, r1, r0, asr #2
   130e0:	andeq	r2, r1, ip, lsr #31
   130e4:	andeq	r2, r1, ip, lsr #31
   130e8:	andeq	r2, r1, ip, lsr #31
   130ec:	andeq	r2, r1, ip, lsr #31
   130f0:	andeq	r2, r1, ip, lsr #31
   130f4:	andeq	r2, r1, ip, lsr #31
   130f8:	andeq	r3, r1, ip, lsr r2
   130fc:	andeq	r2, r1, ip, lsr #31
   13100:	andeq	r2, r1, ip, lsr #31
   13104:	andeq	r2, r1, ip, lsr #31
   13108:	andeq	r2, r1, ip, lsr #31
   1310c:	andeq	r3, r1, r8, ror #2
   13110:	andeq	r3, r1, r8, asr r2
   13114:	andeq	r3, r1, r4, lsr #2
   13118:	andeq	r2, r1, ip, lsr #31
   1311c:	andeq	r2, r1, ip, lsr #31
   13120:	andeq	r3, r1, ip, lsr #2
   13124:	strb	r4, [r7]
   13128:	b	12fb0 <sigaltstack@plt+0x1720>
   1312c:	mov	r0, #0
   13130:	strb	r0, [r7]
   13134:	b	12fb0 <sigaltstack@plt+0x1720>
   13138:	cmp	r8, #10
   1313c:	bne	12f78 <sigaltstack@plt+0x16e8>
   13140:	movw	r9, #38284	; 0x958c
   13144:	movt	r9, #2
   13148:	ldr	r0, [r9]
   1314c:	cmp	r0, #0
   13150:	beq	13174 <sigaltstack@plt+0x18e4>
   13154:	ldr	r0, [r9]
   13158:	movw	r1, #30852	; 0x7884
   1315c:	movt	r1, #1
   13160:	bl	11800 <fopen64@plt>
   13164:	b	1318c <sigaltstack@plt+0x18fc>
   13168:	mov	r0, #0
   1316c:	sub	sp, fp, #28
   13170:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13174:	bl	13684 <sigaltstack@plt+0x1df4>
   13178:	cmn	r0, #1
   1317c:	ble	13480 <sigaltstack@plt+0x1bf0>
   13180:	movw	r1, #30852	; 0x7884
   13184:	movt	r1, #1
   13188:	bl	11494 <fdopen@plt>
   1318c:	ldr	r4, [fp, #20]
   13190:	ldr	r5, [sp, #16]
   13194:	movw	sl, #38444	; 0x962c
   13198:	movt	sl, #2
   1319c:	str	r0, [sl]
   131a0:	cmp	r0, #0
   131a4:	beq	13448 <sigaltstack@plt+0x1bb8>
   131a8:	cmp	r8, #99	; 0x63
   131ac:	bgt	131c0 <sigaltstack@plt+0x1930>
   131b0:	cmp	r8, #49	; 0x31
   131b4:	cmpne	r8, #98	; 0x62
   131b8:	beq	13298 <sigaltstack@plt+0x1a08>
   131bc:	b	131f0 <sigaltstack@plt+0x1960>
   131c0:	cmp	r8, #108	; 0x6c
   131c4:	beq	13298 <sigaltstack@plt+0x1a08>
   131c8:	cmp	r8, #100	; 0x64
   131cc:	bne	131f0 <sigaltstack@plt+0x1960>
   131d0:	cmp	r5, #0
   131d4:	beq	13298 <sigaltstack@plt+0x1a08>
   131d8:	cmp	r5, #1
   131dc:	bne	13278 <sigaltstack@plt+0x19e8>
   131e0:	movw	r1, #33184	; 0x81a0
   131e4:	movt	r1, #1
   131e8:	ldmib	sp, {r2, r3}
   131ec:	b	13294 <sigaltstack@plt+0x1a04>
   131f0:	ldr	r0, [sp, #12]
   131f4:	mov	r1, r5
   131f8:	bl	12ce4 <sigaltstack@plt+0x1454>
   131fc:	cmp	r8, #99	; 0x63
   13200:	ble	132b0 <sigaltstack@plt+0x1a20>
   13204:	cmp	r8, #114	; 0x72
   13208:	beq	132bc <sigaltstack@plt+0x1a2c>
   1320c:	cmp	r8, #100	; 0x64
   13210:	bne	133f0 <sigaltstack@plt+0x1b60>
   13214:	cmp	r4, #0
   13218:	beq	132bc <sigaltstack@plt+0x1a2c>
   1321c:	ldr	r0, [sl]
   13220:	cmp	r4, #1
   13224:	bne	13400 <sigaltstack@plt+0x1b70>
   13228:	movw	r1, #33212	; 0x81bc
   1322c:	movt	r1, #1
   13230:	ldr	r2, [fp, #12]
   13234:	ldr	r3, [fp, #16]
   13238:	b	1341c <sigaltstack@plt+0x1b8c>
   1323c:	ldr	r0, [sp, #12]
   13240:	ldr	r1, [sp, #16]
   13244:	ldr	r2, [fp, #24]
   13248:	bl	12d4c <sigaltstack@plt+0x14bc>
   1324c:	ldr	r0, [fp, #8]
   13250:	ldr	r1, [fp, #20]
   13254:	b	13270 <sigaltstack@plt+0x19e0>
   13258:	ldr	r0, [fp, #8]
   1325c:	ldr	r1, [fp, #20]
   13260:	ldr	r2, [fp, #24]
   13264:	bl	12d4c <sigaltstack@plt+0x14bc>
   13268:	ldr	r0, [sp, #12]
   1326c:	ldr	r1, [sp, #16]
   13270:	bl	12ce4 <sigaltstack@plt+0x1454>
   13274:	b	133e4 <sigaltstack@plt+0x1b54>
   13278:	ldr	r3, [sp, #8]
   1327c:	add	r1, r3, r5
   13280:	sub	r1, r1, #1
   13284:	str	r1, [sp]
   13288:	movw	r1, #33196	; 0x81ac
   1328c:	movt	r1, #1
   13290:	ldr	r2, [sp, #4]
   13294:	bl	11728 <fprintf@plt>
   13298:	ldr	r2, [sl]
   1329c:	ldr	r0, [sp, #12]
   132a0:	mov	r1, r5
   132a4:	bl	12d4c <sigaltstack@plt+0x14bc>
   132a8:	cmp	r8, #99	; 0x63
   132ac:	bgt	13204 <sigaltstack@plt+0x1974>
   132b0:	cmp	r8, #50	; 0x32
   132b4:	cmpne	r8, #98	; 0x62
   132b8:	bne	133f0 <sigaltstack@plt+0x1b60>
   132bc:	ldr	r2, [sl]
   132c0:	ldr	r0, [fp, #8]
   132c4:	mov	r1, r4
   132c8:	bl	12d4c <sigaltstack@plt+0x14bc>
   132cc:	ldr	r0, [sl]
   132d0:	bl	12a70 <sigaltstack@plt+0x11e0>
   132d4:	movw	r8, #38437	; 0x9625
   132d8:	movt	r8, #2
   132dc:	mov	r0, #1
   132e0:	strb	r0, [r8]
   132e4:	bl	12a90 <sigaltstack@plt+0x1200>
   132e8:	mov	r0, #0
   132ec:	str	r0, [sp, #28]
   132f0:	movw	r4, #37232	; 0x9170
   132f4:	movt	r4, #2
   132f8:	ldr	r0, [r4]
   132fc:	str	r0, [sp, #20]
   13300:	ldr	r0, [r9]
   13304:	str	r0, [sp, #24]
   13308:	bl	117d0 <fork@plt>
   1330c:	cmp	r0, #0
   13310:	beq	13450 <sigaltstack@plt+0x1bc0>
   13314:	blt	13474 <sigaltstack@plt+0x1be4>
   13318:	mov	r5, r0
   1331c:	sub	r1, fp, #36	; 0x24
   13320:	mov	r2, #0
   13324:	bl	11620 <waitpid@plt>
   13328:	cmn	r0, #1
   1332c:	bgt	13364 <sigaltstack@plt+0x1ad4>
   13330:	bl	11740 <__errno_location@plt>
   13334:	mov	r6, r0
   13338:	sub	r7, fp, #36	; 0x24
   1333c:	ldr	r0, [r6]
   13340:	cmp	r0, #4
   13344:	bne	1343c <sigaltstack@plt+0x1bac>
   13348:	bl	12a90 <sigaltstack@plt+0x1200>
   1334c:	mov	r0, r5
   13350:	mov	r1, r7
   13354:	mov	r2, #0
   13358:	bl	11620 <waitpid@plt>
   1335c:	cmp	r0, #0
   13360:	blt	1333c <sigaltstack@plt+0x1aac>
   13364:	mov	r0, #0
   13368:	strb	r0, [r8]
   1336c:	ldr	r2, [r4]
   13370:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13374:	mov	r1, #0
   13378:	bl	12af0 <sigaltstack@plt+0x1260>
   1337c:	ldr	r0, [r9]
   13380:	movw	r1, #30875	; 0x789b
   13384:	movt	r1, #1
   13388:	bl	1274c <sigaltstack@plt+0xebc>
   1338c:	mov	r1, r0
   13390:	str	r0, [sl]
   13394:	add	r0, sp, #20
   13398:	bl	134cc <sigaltstack@plt+0x1c3c>
   1339c:	cmp	r0, #0
   133a0:	ldr	r4, [fp, #24]
   133a4:	beq	133dc <sigaltstack@plt+0x1b4c>
   133a8:	mov	r6, r0
   133ac:	add	r5, sp, #20
   133b0:	bl	12a90 <sigaltstack@plt+0x1200>
   133b4:	mov	r0, r5
   133b8:	mov	r1, r6
   133bc:	mov	r2, r4
   133c0:	bl	13524 <sigaltstack@plt+0x1c94>
   133c4:	ldr	r1, [sl]
   133c8:	mov	r0, r5
   133cc:	bl	134cc <sigaltstack@plt+0x1c3c>
   133d0:	mov	r6, r0
   133d4:	cmp	r0, #0
   133d8:	bne	133b0 <sigaltstack@plt+0x1b20>
   133dc:	ldr	r0, [sl]
   133e0:	bl	12a70 <sigaltstack@plt+0x11e0>
   133e4:	mov	r0, #1
   133e8:	sub	sp, fp, #28
   133ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133f0:	ldr	r0, [fp, #8]
   133f4:	mov	r1, r4
   133f8:	bl	12ce4 <sigaltstack@plt+0x1454>
   133fc:	b	132cc <sigaltstack@plt+0x1a3c>
   13400:	ldr	r3, [fp, #16]
   13404:	add	r1, r3, r4
   13408:	sub	r1, r1, #1
   1340c:	str	r1, [sp]
   13410:	movw	r1, #33224	; 0x81c8
   13414:	movt	r1, #1
   13418:	ldr	r2, [fp, #12]
   1341c:	bl	11728 <fprintf@plt>
   13420:	b	132bc <sigaltstack@plt+0x1a2c>
   13424:	movw	r1, #31254	; 0x7a16
   13428:	movt	r1, #1
   1342c:	mov	r0, #0
   13430:	mov	r2, #5
   13434:	bl	11584 <dcgettext@plt>
   13438:	bl	125b8 <sigaltstack@plt+0xd28>
   1343c:	movw	r0, #31043	; 0x7943
   13440:	movt	r0, #1
   13444:	bl	125b8 <sigaltstack@plt+0xd28>
   13448:	ldr	r0, [r9]
   1344c:	bl	125b8 <sigaltstack@plt+0xd28>
   13450:	ldr	r0, [r4]
   13454:	add	r1, sp, #20
   13458:	bl	1153c <execvp@plt>
   1345c:	bl	11740 <__errno_location@plt>
   13460:	ldr	r1, [r0]
   13464:	mov	r0, #126	; 0x7e
   13468:	cmp	r1, #2
   1346c:	movweq	r0, #127	; 0x7f
   13470:	bl	11524 <_exit@plt>
   13474:	movw	r0, #31031	; 0x7937
   13478:	movt	r0, #1
   1347c:	bl	125b8 <sigaltstack@plt+0xd28>
   13480:	movw	r0, #33176	; 0x8198
   13484:	movt	r0, #1
   13488:	bl	125b8 <sigaltstack@plt+0xd28>
   1348c:	push	{r4, r5, fp, lr}
   13490:	add	fp, sp, #8
   13494:	mov	r4, r0
   13498:	ldr	r1, [r0]
   1349c:	ldr	r0, [r0, #8]
   134a0:	bl	134cc <sigaltstack@plt+0x1c3c>
   134a4:	mov	r5, r0
   134a8:	ldr	r0, [r4, #8]
   134ac:	str	r0, [r4, #4]
   134b0:	add	r1, r0, r5
   134b4:	str	r1, [r4, #12]
   134b8:	mov	r1, #10
   134bc:	strb	r1, [r0, r5]
   134c0:	bl	12a90 <sigaltstack@plt+0x1200>
   134c4:	mov	r0, r5
   134c8:	pop	{r4, r5, fp, pc}
   134cc:	push	{r4, r5, fp, lr}
   134d0:	add	fp, sp, #8
   134d4:	mov	r4, r1
   134d8:	mov	r1, #1
   134dc:	mov	r2, #65536	; 0x10000
   134e0:	mov	r3, r4
   134e4:	bl	11824 <fread_unlocked@plt>
   134e8:	mov	r5, r0
   134ec:	cmp	r0, #0
   134f0:	bne	13504 <sigaltstack@plt+0x1c74>
   134f4:	mov	r0, r4
   134f8:	bl	11638 <ferror_unlocked@plt>
   134fc:	cmp	r0, #0
   13500:	bne	1350c <sigaltstack@plt+0x1c7c>
   13504:	mov	r0, r5
   13508:	pop	{r4, r5, fp, pc}
   1350c:	movw	r1, #33164	; 0x818c
   13510:	movt	r1, #1
   13514:	mov	r0, #0
   13518:	mov	r2, #5
   1351c:	bl	11584 <dcgettext@plt>
   13520:	bl	125b8 <sigaltstack@plt+0xd28>
   13524:	push	{r4, sl, fp, lr}
   13528:	add	fp, sp, #8
   1352c:	mov	r3, r2
   13530:	mov	r4, r1
   13534:	mov	r1, #1
   13538:	mov	r2, r4
   1353c:	bl	1156c <fwrite_unlocked@plt>
   13540:	cmp	r0, r4
   13544:	popeq	{r4, sl, fp, pc}
   13548:	movw	r1, #31254	; 0x7a16
   1354c:	movt	r1, #1
   13550:	mov	r0, #0
   13554:	mov	r2, #5
   13558:	bl	11584 <dcgettext@plt>
   1355c:	bl	125b8 <sigaltstack@plt+0xd28>
   13560:	push	{fp, lr}
   13564:	mov	fp, sp
   13568:	bl	115f0 <fflush_unlocked@plt>
   1356c:	cmp	r0, #0
   13570:	popeq	{fp, pc}
   13574:	movw	r1, #31254	; 0x7a16
   13578:	movt	r1, #1
   1357c:	mov	r0, #0
   13580:	mov	r2, #5
   13584:	bl	11584 <dcgettext@plt>
   13588:	bl	125b8 <sigaltstack@plt+0xd28>
   1358c:	push	{r4, r5, fp, lr}
   13590:	add	fp, sp, #8
   13594:	bl	11710 <getchar_unlocked@plt>
   13598:	mov	r4, r0
   1359c:	bl	116e0 <__ctype_b_loc@plt>
   135a0:	cmp	r4, #10
   135a4:	beq	135d4 <sigaltstack@plt+0x1d44>
   135a8:	mov	r5, r0
   135ac:	ldr	r0, [r5]
   135b0:	add	r0, r0, r4, lsl #1
   135b4:	ldrh	r0, [r0]
   135b8:	ands	r0, r0, #8192	; 0x2000
   135bc:	beq	135d4 <sigaltstack@plt+0x1d44>
   135c0:	bl	12a90 <sigaltstack@plt+0x1200>
   135c4:	bl	11710 <getchar_unlocked@plt>
   135c8:	mov	r4, r0
   135cc:	cmp	r0, #10
   135d0:	bne	135ac <sigaltstack@plt+0x1d1c>
   135d4:	movw	r0, #37272	; 0x9198
   135d8:	movt	r0, #2
   135dc:	ldr	r0, [r0]
   135e0:	bl	11638 <ferror_unlocked@plt>
   135e4:	cmp	r0, #0
   135e8:	moveq	r0, r4
   135ec:	popeq	{r4, r5, fp, pc}
   135f0:	movw	r1, #33164	; 0x818c
   135f4:	movt	r1, #1
   135f8:	mov	r0, #0
   135fc:	mov	r2, #5
   13600:	bl	11584 <dcgettext@plt>
   13604:	bl	125b8 <sigaltstack@plt+0xd28>
   13608:	push	{r4, sl, fp, lr}
   1360c:	add	fp, sp, #8
   13610:	movw	r0, #37264	; 0x9190
   13614:	movt	r0, #2
   13618:	ldr	r4, [r0]
   1361c:	movw	r1, #33240	; 0x81d8
   13620:	movt	r1, #1
   13624:	mov	r0, #0
   13628:	mov	r2, #5
   1362c:	bl	11584 <dcgettext@plt>
   13630:	mov	r1, r4
   13634:	pop	{r4, sl, fp, lr}
   13638:	b	1183c <fputs@plt>
   1363c:	push	{fp, lr}
   13640:	mov	fp, sp
   13644:	bl	11710 <getchar_unlocked@plt>
   13648:	cmp	r0, #10
   1364c:	cmnne	r0, #1
   13650:	bne	13644 <sigaltstack@plt+0x1db4>
   13654:	movw	r0, #37272	; 0x9198
   13658:	movt	r0, #2
   1365c:	ldr	r0, [r0]
   13660:	bl	11638 <ferror_unlocked@plt>
   13664:	cmp	r0, #0
   13668:	popeq	{fp, pc}
   1366c:	movw	r1, #33164	; 0x818c
   13670:	movt	r1, #1
   13674:	mov	r0, #0
   13678:	mov	r2, #5
   1367c:	bl	11584 <dcgettext@plt>
   13680:	bl	125b8 <sigaltstack@plt+0xd28>
   13684:	push	{r4, r5, fp, lr}
   13688:	add	fp, sp, #8
   1368c:	movw	r0, #33607	; 0x8347
   13690:	movt	r0, #1
   13694:	bl	11668 <getenv@plt>
   13698:	movw	r5, #33614	; 0x834e
   1369c:	movt	r5, #1
   136a0:	cmp	r0, #0
   136a4:	movne	r5, r0
   136a8:	mov	r0, r5
   136ac:	bl	11704 <strlen@plt>
   136b0:	add	r0, r0, #13
   136b4:	bl	153ec <sigaltstack@plt+0x3b5c>
   136b8:	mov	r4, r0
   136bc:	movw	r1, #33619	; 0x8353
   136c0:	movt	r1, #1
   136c4:	mov	r2, r5
   136c8:	bl	117f4 <sprintf@plt>
   136cc:	mov	r0, r4
   136d0:	bl	11674 <mkstemp64@plt>
   136d4:	cmp	r0, #0
   136d8:	movwge	r1, #38284	; 0x958c
   136dc:	movtge	r1, #2
   136e0:	strge	r4, [r1]
   136e4:	pop	{r4, r5, fp, pc}
   136e8:	sub	r0, r0, #1
   136ec:	ldrb	r3, [r0, #1]!
   136f0:	cmp	r3, #47	; 0x2f
   136f4:	beq	136ec <sigaltstack@plt+0x1e5c>
   136f8:	mov	r2, #0
   136fc:	mov	r1, r0
   13700:	b	1371c <sigaltstack@plt+0x1e8c>
   13704:	cmp	r3, #0
   13708:	bxeq	lr
   1370c:	tst	r2, #1
   13710:	movne	r0, r1
   13714:	mov	r2, #0
   13718:	ldrb	r3, [r1, #1]!
   1371c:	uxtb	r3, r3
   13720:	cmp	r3, #47	; 0x2f
   13724:	bne	13704 <sigaltstack@plt+0x1e74>
   13728:	mov	r2, #1
   1372c:	ldrb	r3, [r1, #1]!
   13730:	b	1371c <sigaltstack@plt+0x1e8c>
   13734:	push	{r4, sl, fp, lr}
   13738:	add	fp, sp, #8
   1373c:	mov	r4, r0
   13740:	bl	11704 <strlen@plt>
   13744:	mov	r1, r0
   13748:	sub	r2, r4, #1
   1374c:	mov	r0, r1
   13750:	cmp	r1, #2
   13754:	popcc	{r4, sl, fp, pc}
   13758:	ldrb	r3, [r2, r0]
   1375c:	sub	r1, r0, #1
   13760:	cmp	r3, #47	; 0x2f
   13764:	beq	1374c <sigaltstack@plt+0x1ebc>
   13768:	pop	{r4, sl, fp, pc}
   1376c:	push	{r4, sl, fp, lr}
   13770:	add	fp, sp, #8
   13774:	movw	r1, #14396	; 0x383c
   13778:	movt	r1, #1
   1377c:	cmp	r0, #0
   13780:	movne	r1, r0
   13784:	movw	r0, #38448	; 0x9630
   13788:	movt	r0, #2
   1378c:	str	r1, [r0]
   13790:	mov	r4, #0
   13794:	movw	r1, #34108	; 0x853c
   13798:	movt	r1, #1
   1379c:	mov	r0, #0
   137a0:	mov	r2, #5
   137a4:	bl	11584 <dcgettext@plt>
   137a8:	movw	r1, #38452	; 0x9634
   137ac:	movt	r1, #2
   137b0:	str	r0, [r1]
   137b4:	movw	r1, #34122	; 0x854a
   137b8:	movt	r1, #1
   137bc:	mov	r0, #0
   137c0:	mov	r2, #5
   137c4:	bl	11584 <dcgettext@plt>
   137c8:	movw	r1, #38456	; 0x9638
   137cc:	movt	r1, #2
   137d0:	str	r0, [r1]
   137d4:	bl	139b4 <sigaltstack@plt+0x2124>
   137d8:	movw	r1, #38460	; 0x963c
   137dc:	movt	r1, #2
   137e0:	str	r0, [r1]
   137e4:	movw	r0, #14400	; 0x3840
   137e8:	movt	r0, #1
   137ec:	movw	r1, #38464	; 0x9640
   137f0:	movt	r1, #2
   137f4:	mov	r2, #65536	; 0x10000
   137f8:	bl	141c4 <sigaltstack@plt+0x2934>
   137fc:	cmp	r0, #0
   13800:	beq	1381c <sigaltstack@plt+0x1f8c>
   13804:	bl	11740 <__errno_location@plt>
   13808:	mov	r1, #95	; 0x5f
   1380c:	str	r1, [r0]
   13810:	mvn	r4, #0
   13814:	mov	r0, r4
   13818:	pop	{r4, sl, fp, pc}
   1381c:	movw	r0, #14452	; 0x3874
   13820:	movt	r0, #1
   13824:	bl	14008 <sigaltstack@plt+0x2778>
   13828:	movw	r1, #38464	; 0x9640
   1382c:	movt	r1, #3
   13830:	str	r0, [r1]
   13834:	mov	r0, r4
   13838:	pop	{r4, sl, fp, pc}
   1383c:	bx	lr
   13840:	mov	r1, r0
   13844:	mov	r0, #0
   13848:	cmp	r1, #0
   1384c:	beq	13868 <sigaltstack@plt+0x1fd8>
   13850:	movw	r0, #38464	; 0x9640
   13854:	movt	r0, #3
   13858:	ldr	r1, [r0]
   1385c:	mov	r0, #0
   13860:	cmp	r1, #0
   13864:	movweq	r0, #11
   13868:	push	{fp, lr}
   1386c:	mov	fp, sp
   13870:	bl	13890 <sigaltstack@plt+0x2000>
   13874:	cmp	r1, #0
   13878:	moveq	r0, #0
   1387c:	bxeq	lr
   13880:	push	{fp, lr}
   13884:	mov	fp, sp
   13888:	mov	r0, #11
   1388c:	bl	13890 <sigaltstack@plt+0x2000>
   13890:	push	{r4, r5, fp, lr}
   13894:	add	fp, sp, #8
   13898:	sub	sp, sp, #8
   1389c:	sub	sp, sp, #4096	; 0x1000
   138a0:	mov	r9, r0
   138a4:	movw	r0, #38448	; 0x9630
   138a8:	movt	r0, #2
   138ac:	ldr	r1, [r0]
   138b0:	mov	r0, r9
   138b4:	blx	r1
   138b8:	movw	r0, #38452	; 0x9634
   138bc:	movt	r0, #2
   138c0:	movw	r1, #38456	; 0x9638
   138c4:	movt	r1, #2
   138c8:	cmp	r9, #0
   138cc:	movne	r1, r0
   138d0:	ldr	r5, [r1]
   138d4:	movw	r4, #38460	; 0x963c
   138d8:	movt	r4, #2
   138dc:	ldr	r0, [r4]
   138e0:	bl	11704 <strlen@plt>
   138e4:	mov	r7, r0
   138e8:	mov	r0, r5
   138ec:	bl	11704 <strlen@plt>
   138f0:	mov	r6, r0
   138f4:	add	r0, r0, r7
   138f8:	ldr	r1, [r4]
   138fc:	mov	r2, #0
   13900:	cmp	r2, r0, lsr #12
   13904:	bne	13948 <sigaltstack@plt+0x20b8>
   13908:	add	r8, sp, #2
   1390c:	mov	r0, r8
   13910:	mov	r2, r7
   13914:	bl	11530 <memcpy@plt>
   13918:	add	r7, r8, r7
   1391c:	movw	r0, #8250	; 0x203a
   13920:	strh	r0, [r7], #2
   13924:	mov	r0, r7
   13928:	mov	r1, r5
   1392c:	mov	r2, r6
   13930:	bl	11530 <memcpy@plt>
   13934:	mov	r0, #10
   13938:	strb	r0, [r7, r6]!
   1393c:	add	r0, r7, #1
   13940:	sub	r2, r0, r8
   13944:	b	13984 <sigaltstack@plt+0x20f4>
   13948:	mov	r0, #2
   1394c:	mov	r2, r7
   13950:	bl	11758 <write@plt>
   13954:	movw	r1, #34137	; 0x8559
   13958:	movt	r1, #1
   1395c:	mov	r0, #2
   13960:	mov	r2, #2
   13964:	bl	11758 <write@plt>
   13968:	mov	r0, #2
   1396c:	mov	r1, r5
   13970:	mov	r2, r6
   13974:	bl	11758 <write@plt>
   13978:	mov	r0, #10
   1397c:	strb	r0, [sp, #2]
   13980:	mov	r2, #1
   13984:	add	r1, sp, #2
   13988:	mov	r0, #2
   1398c:	bl	11758 <write@plt>
   13990:	cmp	r9, #0
   13994:	beq	139a4 <sigaltstack@plt+0x2114>
   13998:	mov	r0, r9
   1399c:	bl	114b8 <raise@plt>
   139a0:	bl	11854 <abort@plt>
   139a4:	movw	r0, #37240	; 0x9178
   139a8:	movt	r0, #2
   139ac:	ldr	r0, [r0]
   139b0:	bl	11524 <_exit@plt>
   139b4:	movw	r0, #37248	; 0x9180
   139b8:	movt	r0, #2
   139bc:	ldr	r0, [r0]
   139c0:	bx	lr
   139c4:	push	{r4, r5, fp, lr}
   139c8:	add	fp, sp, #8
   139cc:	cmp	r0, #0
   139d0:	beq	13a64 <sigaltstack@plt+0x21d4>
   139d4:	mov	r4, r0
   139d8:	mov	r1, #47	; 0x2f
   139dc:	bl	117dc <strrchr@plt>
   139e0:	cmp	r0, #0
   139e4:	mov	r5, r4
   139e8:	addne	r5, r0, #1
   139ec:	sub	r0, r5, r4
   139f0:	cmp	r0, #7
   139f4:	blt	13a48 <sigaltstack@plt+0x21b8>
   139f8:	sub	r0, r5, #7
   139fc:	movw	r1, #34195	; 0x8593
   13a00:	movt	r1, #1
   13a04:	mov	r2, #7
   13a08:	bl	11848 <strncmp@plt>
   13a0c:	cmp	r0, #0
   13a10:	bne	13a48 <sigaltstack@plt+0x21b8>
   13a14:	movw	r1, #34203	; 0x859b
   13a18:	movt	r1, #1
   13a1c:	mov	r0, r5
   13a20:	mov	r2, #3
   13a24:	bl	11848 <strncmp@plt>
   13a28:	cmp	r0, #0
   13a2c:	beq	13a38 <sigaltstack@plt+0x21a8>
   13a30:	mov	r4, r5
   13a34:	b	13a48 <sigaltstack@plt+0x21b8>
   13a38:	add	r4, r5, #3
   13a3c:	movw	r0, #37248	; 0x9180
   13a40:	movt	r0, #2
   13a44:	str	r4, [r0]
   13a48:	movw	r0, #37252	; 0x9184
   13a4c:	movt	r0, #2
   13a50:	str	r4, [r0]
   13a54:	movw	r0, #38468	; 0x9644
   13a58:	movt	r0, #3
   13a5c:	str	r4, [r0]
   13a60:	pop	{r4, r5, fp, pc}
   13a64:	movw	r0, #37264	; 0x9190
   13a68:	movt	r0, #2
   13a6c:	ldr	r3, [r0]
   13a70:	movw	r0, #34139	; 0x855b
   13a74:	movt	r0, #1
   13a78:	mov	r1, #55	; 0x37
   13a7c:	mov	r2, #1
   13a80:	bl	11608 <fwrite@plt>
   13a84:	bl	11854 <abort@plt>
   13a88:	push	{r4, r5, r6, sl, fp, lr}
   13a8c:	add	fp, sp, #16
   13a90:	mov	r4, r0
   13a94:	mov	r0, #0
   13a98:	mov	r1, r4
   13a9c:	mov	r2, #5
   13aa0:	bl	11584 <dcgettext@plt>
   13aa4:	cmp	r0, r4
   13aa8:	moveq	r0, r4
   13aac:	popeq	{r4, r5, r6, sl, fp, pc}
   13ab0:	mov	r5, r0
   13ab4:	mov	r1, r4
   13ab8:	bl	13b08 <sigaltstack@plt+0x2278>
   13abc:	cmp	r0, #0
   13ac0:	movne	r0, r5
   13ac4:	popne	{r4, r5, r6, sl, fp, pc}
   13ac8:	mov	r0, r5
   13acc:	bl	11704 <strlen@plt>
   13ad0:	mov	r6, r0
   13ad4:	mov	r0, r4
   13ad8:	bl	11704 <strlen@plt>
   13adc:	add	r0, r6, r0
   13ae0:	add	r0, r0, #4
   13ae4:	bl	153ec <sigaltstack@plt+0x3b5c>
   13ae8:	mov	r6, r0
   13aec:	movw	r1, #34207	; 0x859f
   13af0:	movt	r1, #1
   13af4:	mov	r2, r5
   13af8:	mov	r3, r4
   13afc:	bl	117f4 <sprintf@plt>
   13b00:	mov	r0, r6
   13b04:	pop	{r4, r5, r6, sl, fp, pc}
   13b08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b0c:	add	fp, sp, #28
   13b10:	sub	sp, sp, #124	; 0x7c
   13b14:	mov	r4, r0
   13b18:	mov	r0, r1
   13b1c:	mov	r1, #2
   13b20:	bl	14c64 <sigaltstack@plt+0x33d4>
   13b24:	mov	sl, r0
   13b28:	ldrb	r0, [r4]
   13b2c:	cmp	r0, #0
   13b30:	beq	13d9c <sigaltstack@plt+0x250c>
   13b34:	add	r5, sp, #12
   13b38:	add	r0, r5, #4
   13b3c:	str	r0, [sp, #4]
   13b40:	add	r6, sp, #68	; 0x44
   13b44:	add	r8, r6, #4
   13b48:	mov	r9, #0
   13b4c:	str	r8, [sp]
   13b50:	mov	r0, r4
   13b54:	mov	r1, sl
   13b58:	bl	15cb0 <sigaltstack@plt+0x4420>
   13b5c:	cmp	r0, #0
   13b60:	beq	13d9c <sigaltstack@plt+0x250c>
   13b64:	mov	r7, r0
   13b68:	bl	1162c <__ctype_get_mb_cur_max@plt>
   13b6c:	cmp	r0, #2
   13b70:	bcc	13c88 <sigaltstack@plt+0x23f8>
   13b74:	strb	r9, [sp, #68]	; 0x44
   13b78:	str	r4, [sp, #84]	; 0x54
   13b7c:	str	r9, [r8]
   13b80:	str	r9, [r8, #4]
   13b84:	strb	r9, [sp, #80]	; 0x50
   13b88:	mov	r0, #1
   13b8c:	str	r0, [sp, #8]
   13b90:	cmp	r4, r7
   13b94:	bcs	13bec <sigaltstack@plt+0x235c>
   13b98:	mov	r0, r6
   13b9c:	bl	166bc <sigaltstack@plt+0x4e2c>
   13ba0:	ldr	r0, [sp, #96]	; 0x60
   13ba4:	ldrb	r1, [sp, #92]	; 0x5c
   13ba8:	cmp	r1, #0
   13bac:	beq	13bb8 <sigaltstack@plt+0x2328>
   13bb0:	cmp	r0, #0
   13bb4:	beq	13dc0 <sigaltstack@plt+0x2530>
   13bb8:	strb	r9, [sp, #80]	; 0x50
   13bbc:	ldr	r2, [sp, #84]	; 0x54
   13bc0:	ldr	r3, [sp, #88]	; 0x58
   13bc4:	add	r2, r2, r3
   13bc8:	str	r2, [sp, #84]	; 0x54
   13bcc:	cmp	r2, r7
   13bd0:	bcc	13b98 <sigaltstack@plt+0x2308>
   13bd4:	cmp	r1, #0
   13bd8:	beq	13bec <sigaltstack@plt+0x235c>
   13bdc:	bl	1174c <iswalnum@plt>
   13be0:	clz	r0, r0
   13be4:	lsr	r0, r0, #5
   13be8:	str	r0, [sp, #8]
   13bec:	strb	r9, [sp, #68]	; 0x44
   13bf0:	str	r7, [sp, #84]	; 0x54
   13bf4:	str	r9, [r8]
   13bf8:	str	r9, [r8, #4]
   13bfc:	strb	r9, [sp, #80]	; 0x50
   13c00:	strb	r9, [sp, #12]
   13c04:	str	sl, [sp, #28]
   13c08:	ldr	r0, [sp, #4]
   13c0c:	str	r9, [r0]
   13c10:	str	r9, [r0, #4]
   13c14:	strb	r9, [sp, #24]
   13c18:	b	13c44 <sigaltstack@plt+0x23b4>
   13c1c:	strb	r9, [sp, #80]	; 0x50
   13c20:	strb	r9, [sp, #24]
   13c24:	ldr	r0, [sp, #84]	; 0x54
   13c28:	ldr	r1, [sp, #88]	; 0x58
   13c2c:	add	r0, r0, r1
   13c30:	str	r0, [sp, #84]	; 0x54
   13c34:	ldr	r0, [sp, #28]
   13c38:	ldr	r1, [sp, #32]
   13c3c:	add	r0, r0, r1
   13c40:	str	r0, [sp, #28]
   13c44:	mov	r0, r5
   13c48:	bl	166bc <sigaltstack@plt+0x4e2c>
   13c4c:	ldrb	r0, [sp, #36]	; 0x24
   13c50:	cmp	r0, #0
   13c54:	beq	13c64 <sigaltstack@plt+0x23d4>
   13c58:	ldr	r0, [sp, #40]	; 0x28
   13c5c:	cmp	r0, #0
   13c60:	beq	13d0c <sigaltstack@plt+0x247c>
   13c64:	mov	r0, r6
   13c68:	bl	166bc <sigaltstack@plt+0x4e2c>
   13c6c:	ldrb	r0, [sp, #92]	; 0x5c
   13c70:	cmp	r0, #0
   13c74:	beq	13c1c <sigaltstack@plt+0x238c>
   13c78:	ldr	r0, [sp, #96]	; 0x60
   13c7c:	cmp	r0, #0
   13c80:	bne	13c1c <sigaltstack@plt+0x238c>
   13c84:	b	13dc0 <sigaltstack@plt+0x2530>
   13c88:	mov	r8, #1
   13c8c:	cmp	r4, r7
   13c90:	mov	r4, #1
   13c94:	bcs	13cb4 <sigaltstack@plt+0x2424>
   13c98:	bl	116e0 <__ctype_b_loc@plt>
   13c9c:	ldrb	r1, [r7, #-1]
   13ca0:	ldr	r0, [r0]
   13ca4:	ldrb	r0, [r0, r1, lsl #1]
   13ca8:	and	r0, r0, #8
   13cac:	mov	r1, #1
   13cb0:	eor	r4, r1, r0, lsr #3
   13cb4:	mov	r5, sl
   13cb8:	mov	r0, sl
   13cbc:	bl	11704 <strlen@plt>
   13cc0:	ldrb	sl, [r7, r0]
   13cc4:	cmp	sl, #0
   13cc8:	beq	13ce4 <sigaltstack@plt+0x2454>
   13ccc:	bl	116e0 <__ctype_b_loc@plt>
   13cd0:	ldr	r0, [r0]
   13cd4:	ldrb	r0, [r0, sl, lsl #1]
   13cd8:	and	r0, r0, #8
   13cdc:	mov	r1, #1
   13ce0:	eor	r8, r1, r0, lsr #3
   13ce4:	tst	r4, r8
   13ce8:	bne	13db4 <sigaltstack@plt+0x2524>
   13cec:	ldrb	r0, [r7], #1
   13cf0:	cmp	r0, #0
   13cf4:	mov	r4, r7
   13cf8:	mov	sl, r5
   13cfc:	add	r5, sp, #12
   13d00:	ldr	r8, [sp]
   13d04:	bne	13d90 <sigaltstack@plt+0x2500>
   13d08:	b	13d9c <sigaltstack@plt+0x250c>
   13d0c:	mov	r0, r6
   13d10:	bl	166bc <sigaltstack@plt+0x4e2c>
   13d14:	mov	r4, #1
   13d18:	ldrb	r0, [sp, #92]	; 0x5c
   13d1c:	cmp	r0, #0
   13d20:	mov	r1, #1
   13d24:	beq	13d44 <sigaltstack@plt+0x24b4>
   13d28:	ldr	r0, [sp, #96]	; 0x60
   13d2c:	cmp	r0, #0
   13d30:	mov	r1, #1
   13d34:	beq	13d44 <sigaltstack@plt+0x24b4>
   13d38:	bl	1174c <iswalnum@plt>
   13d3c:	clz	r0, r0
   13d40:	lsr	r1, r0, #5
   13d44:	ldr	r0, [sp, #8]
   13d48:	tst	r0, r1
   13d4c:	bne	13da0 <sigaltstack@plt+0x2510>
   13d50:	mov	r4, #0
   13d54:	strb	r4, [sp, #68]	; 0x44
   13d58:	str	r7, [sp, #84]	; 0x54
   13d5c:	str	r4, [r8]
   13d60:	str	r4, [r8, #4]
   13d64:	strb	r4, [sp, #80]	; 0x50
   13d68:	mov	r0, r6
   13d6c:	bl	166bc <sigaltstack@plt+0x4e2c>
   13d70:	ldrb	r0, [sp, #92]	; 0x5c
   13d74:	cmp	r0, #0
   13d78:	beq	13d88 <sigaltstack@plt+0x24f8>
   13d7c:	ldr	r0, [sp, #96]	; 0x60
   13d80:	cmp	r0, #0
   13d84:	beq	13da0 <sigaltstack@plt+0x2510>
   13d88:	ldr	r0, [sp, #88]	; 0x58
   13d8c:	add	r4, r7, r0
   13d90:	ldrb	r0, [r4]
   13d94:	cmp	r0, #0
   13d98:	bne	13b50 <sigaltstack@plt+0x22c0>
   13d9c:	mov	r4, #0
   13da0:	mov	r0, sl
   13da4:	bl	158fc <sigaltstack@plt+0x406c>
   13da8:	mov	r0, r4
   13dac:	sub	sp, fp, #28
   13db0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13db4:	mov	r4, #1
   13db8:	mov	sl, r5
   13dbc:	b	13da0 <sigaltstack@plt+0x2510>
   13dc0:	bl	11854 <abort@plt>
   13dc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13dc8:	add	fp, sp, #28
   13dcc:	sub	sp, sp, #4
   13dd0:	mov	r5, r1
   13dd4:	mov	r8, r0
   13dd8:	mov	sl, #0
   13ddc:	mov	r0, #0
   13de0:	mov	r1, r8
   13de4:	mov	r2, #5
   13de8:	bl	11584 <dcgettext@plt>
   13dec:	mov	r6, r0
   13df0:	bl	15a90 <sigaltstack@plt+0x4200>
   13df4:	mov	r4, r0
   13df8:	movw	r1, #34215	; 0x85a7
   13dfc:	movt	r1, #1
   13e00:	bl	159e4 <sigaltstack@plt+0x4154>
   13e04:	cmp	r0, #0
   13e08:	beq	13ebc <sigaltstack@plt+0x262c>
   13e0c:	str	r6, [sp]
   13e10:	movw	sl, #34215	; 0x85a7
   13e14:	movt	sl, #1
   13e18:	mov	r0, r5
   13e1c:	mov	r1, sl
   13e20:	mov	r2, r4
   13e24:	bl	15874 <sigaltstack@plt+0x3fe4>
   13e28:	mov	r7, r0
   13e2c:	mov	r0, r4
   13e30:	bl	11704 <strlen@plt>
   13e34:	mov	r6, r0
   13e38:	add	r0, r0, #11
   13e3c:	bl	153ec <sigaltstack@plt+0x3b5c>
   13e40:	mov	r9, r0
   13e44:	mov	r1, r4
   13e48:	mov	r2, r6
   13e4c:	bl	11530 <memcpy@plt>
   13e50:	add	r0, r9, r6
   13e54:	mov	r4, #0
   13e58:	movw	r1, #34352	; 0x8630
   13e5c:	movt	r1, #1
   13e60:	vldr	d16, [r1]
   13e64:	strb	r4, [r0, #10]
   13e68:	movw	r1, #21577	; 0x5449
   13e6c:	strh	r1, [r0, #8]
   13e70:	vst1.8	{d16}, [r0]
   13e74:	mov	r0, r5
   13e78:	mov	r1, sl
   13e7c:	mov	r2, r9
   13e80:	bl	15874 <sigaltstack@plt+0x3fe4>
   13e84:	mov	sl, r0
   13e88:	mov	r0, r9
   13e8c:	bl	158fc <sigaltstack@plt+0x406c>
   13e90:	cmp	sl, #0
   13e94:	beq	13eb4 <sigaltstack@plt+0x2624>
   13e98:	mov	r0, sl
   13e9c:	mov	r1, #63	; 0x3f
   13ea0:	bl	1171c <strchr@plt>
   13ea4:	cmp	r0, #0
   13ea8:	beq	13ecc <sigaltstack@plt+0x263c>
   13eac:	mov	r0, sl
   13eb0:	bl	158fc <sigaltstack@plt+0x406c>
   13eb4:	mov	sl, #0
   13eb8:	b	13ed0 <sigaltstack@plt+0x2640>
   13ebc:	mov	r4, r5
   13ec0:	mov	r7, r5
   13ec4:	mov	r9, #0
   13ec8:	b	13ed8 <sigaltstack@plt+0x2648>
   13ecc:	mov	r4, sl
   13ed0:	mov	r9, r7
   13ed4:	ldr	r6, [sp]
   13ed8:	cmp	r4, #0
   13edc:	mov	r5, r4
   13ee0:	moveq	r5, r8
   13ee4:	cmp	r7, #0
   13ee8:	movne	r5, r7
   13eec:	mov	r0, r6
   13ef0:	mov	r1, r8
   13ef4:	bl	114dc <strcmp@plt>
   13ef8:	cmp	r0, #0
   13efc:	beq	13f70 <sigaltstack@plt+0x26e0>
   13f00:	mov	r0, r6
   13f04:	mov	r1, r8
   13f08:	bl	13b08 <sigaltstack@plt+0x2278>
   13f0c:	cmp	r0, #0
   13f10:	bne	13f4c <sigaltstack@plt+0x26bc>
   13f14:	cmp	r7, #0
   13f18:	beq	13f30 <sigaltstack@plt+0x26a0>
   13f1c:	mov	r0, r6
   13f20:	mov	r1, r7
   13f24:	bl	13b08 <sigaltstack@plt+0x2278>
   13f28:	cmp	r0, #0
   13f2c:	bne	13f4c <sigaltstack@plt+0x26bc>
   13f30:	cmp	r4, #0
   13f34:	beq	13fa0 <sigaltstack@plt+0x2710>
   13f38:	mov	r0, r6
   13f3c:	mov	r1, r4
   13f40:	bl	13b08 <sigaltstack@plt+0x2278>
   13f44:	cmp	r0, #0
   13f48:	beq	13fa0 <sigaltstack@plt+0x2710>
   13f4c:	cmp	r9, #0
   13f50:	beq	13f5c <sigaltstack@plt+0x26cc>
   13f54:	mov	r0, r9
   13f58:	bl	158fc <sigaltstack@plt+0x406c>
   13f5c:	cmp	sl, #0
   13f60:	beq	13ffc <sigaltstack@plt+0x276c>
   13f64:	mov	r0, sl
   13f68:	bl	158fc <sigaltstack@plt+0x406c>
   13f6c:	b	13ffc <sigaltstack@plt+0x276c>
   13f70:	cmp	r9, #0
   13f74:	cmpne	r9, r5
   13f78:	beq	13f84 <sigaltstack@plt+0x26f4>
   13f7c:	mov	r0, r9
   13f80:	bl	158fc <sigaltstack@plt+0x406c>
   13f84:	cmp	sl, #0
   13f88:	cmpne	sl, r5
   13f8c:	beq	13f98 <sigaltstack@plt+0x2708>
   13f90:	mov	r0, sl
   13f94:	bl	158fc <sigaltstack@plt+0x406c>
   13f98:	mov	r6, r5
   13f9c:	b	13ffc <sigaltstack@plt+0x276c>
   13fa0:	mov	r0, r6
   13fa4:	bl	11704 <strlen@plt>
   13fa8:	mov	r4, r0
   13fac:	mov	r0, r5
   13fb0:	bl	11704 <strlen@plt>
   13fb4:	add	r0, r4, r0
   13fb8:	add	r0, r0, #4
   13fbc:	bl	153ec <sigaltstack@plt+0x3b5c>
   13fc0:	mov	r4, r0
   13fc4:	movw	r1, #34207	; 0x859f
   13fc8:	movt	r1, #1
   13fcc:	mov	r2, r6
   13fd0:	mov	r3, r5
   13fd4:	bl	117f4 <sprintf@plt>
   13fd8:	cmp	r9, #0
   13fdc:	beq	13fe8 <sigaltstack@plt+0x2758>
   13fe0:	mov	r0, r9
   13fe4:	bl	158fc <sigaltstack@plt+0x406c>
   13fe8:	cmp	sl, #0
   13fec:	beq	13ff8 <sigaltstack@plt+0x2768>
   13ff0:	mov	r0, sl
   13ff4:	bl	158fc <sigaltstack@plt+0x406c>
   13ff8:	mov	r6, r4
   13ffc:	mov	r0, r6
   14000:	sub	sp, fp, #28
   14004:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14008:	push	{fp, lr}
   1400c:	mov	fp, sp
   14010:	movw	r1, #38472	; 0x9648
   14014:	movt	r1, #3
   14018:	str	r0, [r1]
   1401c:	bl	14028 <sigaltstack@plt+0x2798>
   14020:	mov	r0, #0
   14024:	pop	{fp, pc}
   14028:	push	{r4, r5, fp, lr}
   1402c:	add	fp, sp, #8
   14030:	sub	sp, sp, #144	; 0x90
   14034:	movw	r0, #17172	; 0x4314
   14038:	movt	r0, #1
   1403c:	str	r0, [sp, #4]
   14040:	add	r4, sp, #4
   14044:	add	r5, r4, #4
   14048:	mov	r0, r5
   1404c:	bl	117c4 <sigemptyset@plt>
   14050:	mov	r0, r5
   14054:	mov	r1, #1
   14058:	bl	116a4 <sigaddset@plt>
   1405c:	mov	r0, r5
   14060:	mov	r1, #2
   14064:	bl	116a4 <sigaddset@plt>
   14068:	mov	r0, r5
   1406c:	mov	r1, #3
   14070:	bl	116a4 <sigaddset@plt>
   14074:	mov	r0, r5
   14078:	mov	r1, #13
   1407c:	bl	116a4 <sigaddset@plt>
   14080:	mov	r0, r5
   14084:	mov	r1, #14
   14088:	bl	116a4 <sigaddset@plt>
   1408c:	mov	r0, r5
   14090:	mov	r1, #15
   14094:	bl	116a4 <sigaddset@plt>
   14098:	mov	r0, r5
   1409c:	mov	r1, #10
   140a0:	bl	116a4 <sigaddset@plt>
   140a4:	mov	r0, r5
   140a8:	mov	r1, #12
   140ac:	bl	116a4 <sigaddset@plt>
   140b0:	mov	r0, r5
   140b4:	mov	r1, #17
   140b8:	bl	116a4 <sigaddset@plt>
   140bc:	mov	r0, r5
   140c0:	mov	r1, #17
   140c4:	bl	116a4 <sigaddset@plt>
   140c8:	mov	r0, r5
   140cc:	mov	r1, #23
   140d0:	bl	116a4 <sigaddset@plt>
   140d4:	mov	r0, r5
   140d8:	mov	r1, #29
   140dc:	bl	116a4 <sigaddset@plt>
   140e0:	mov	r0, r5
   140e4:	mov	r1, #29
   140e8:	bl	116a4 <sigaddset@plt>
   140ec:	mov	r0, r5
   140f0:	mov	r1, #24
   140f4:	bl	116a4 <sigaddset@plt>
   140f8:	mov	r0, r5
   140fc:	mov	r1, #25
   14100:	bl	116a4 <sigaddset@plt>
   14104:	mov	r0, r5
   14108:	mov	r1, #26
   1410c:	bl	116a4 <sigaddset@plt>
   14110:	mov	r0, r5
   14114:	mov	r1, #27
   14118:	bl	116a4 <sigaddset@plt>
   1411c:	mov	r0, r5
   14120:	mov	r1, #30
   14124:	bl	116a4 <sigaddset@plt>
   14128:	mov	r0, r5
   1412c:	mov	r1, #28
   14130:	bl	116a4 <sigaddset@plt>
   14134:	movw	r0, #38476	; 0x964c
   14138:	movt	r0, #3
   1413c:	ldr	r0, [r0]
   14140:	movw	r1, #4
   14144:	movt	r1, #2048	; 0x800
   14148:	cmp	r0, #0
   1414c:	movweq	r1, #4
   14150:	str	r1, [sp, #136]	; 0x88
   14154:	mov	r0, #11
   14158:	mov	r1, r4
   1415c:	mov	r2, #0
   14160:	bl	115fc <sigaction@plt>
   14164:	sub	sp, fp, #8
   14168:	pop	{r4, r5, fp, pc}
   1416c:	movw	r0, #38472	; 0x9648
   14170:	movt	r0, #3
   14174:	mov	r1, #0
   14178:	str	r1, [r0]
   1417c:	movw	r0, #38476	; 0x964c
   14180:	movt	r0, #3
   14184:	ldr	r0, [r0]
   14188:	cmp	r0, #0
   1418c:	bxne	lr
   14190:	mov	r0, #11
   14194:	mov	r1, #0
   14198:	b	11560 <signal@plt>
   1419c:	push	{fp, lr}
   141a0:	mov	fp, sp
   141a4:	mov	ip, r3
   141a8:	mov	r3, r0
   141ac:	mov	r0, r1
   141b0:	mov	r1, r2
   141b4:	mov	r2, ip
   141b8:	blx	r3
   141bc:	mov	r0, #1
   141c0:	pop	{fp, pc}
   141c4:	push	{r4, r5, r6, r7, fp, lr}
   141c8:	add	fp, sp, #16
   141cc:	sub	sp, sp, #16
   141d0:	mov	r5, r2
   141d4:	mov	r4, r1
   141d8:	mov	r6, r0
   141dc:	movw	r7, #38480	; 0x9650
   141e0:	movt	r7, #3
   141e4:	ldr	r0, [r7]
   141e8:	cmp	r0, #0
   141ec:	bne	14204 <sigaltstack@plt+0x2974>
   141f0:	add	r0, sp, #4
   141f4:	bl	14264 <sigaltstack@plt+0x29d4>
   141f8:	ldr	r0, [r7]
   141fc:	cmp	r0, #0
   14200:	beq	14254 <sigaltstack@plt+0x29c4>
   14204:	movw	r0, #38484	; 0x9654
   14208:	movt	r0, #3
   1420c:	str	r4, [r0]
   14210:	movw	r0, #38476	; 0x964c
   14214:	movt	r0, #3
   14218:	str	r6, [r0]
   1421c:	movw	r0, #38488	; 0x9658
   14220:	movt	r0, #3
   14224:	str	r5, [r0]
   14228:	str	r5, [sp, #12]
   1422c:	str	r4, [sp, #4]
   14230:	mov	r4, #0
   14234:	str	r4, [sp, #8]
   14238:	add	r0, sp, #4
   1423c:	mov	r1, #0
   14240:	bl	11890 <sigaltstack@plt>
   14244:	cmp	r0, #0
   14248:	blt	14254 <sigaltstack@plt+0x29c4>
   1424c:	bl	14028 <sigaltstack@plt+0x2798>
   14250:	b	14258 <sigaltstack@plt+0x29c8>
   14254:	mvn	r4, #0
   14258:	mov	r0, r4
   1425c:	sub	sp, fp, #16
   14260:	pop	{r4, r5, r6, r7, fp, pc}
   14264:	push	{fp, lr}
   14268:	mov	fp, sp
   1426c:	sub	sp, sp, #16
   14270:	mov	r1, sp
   14274:	bl	1445c <sigaltstack@plt+0x2bcc>
   14278:	cmp	r0, #0
   1427c:	ldrge	r0, [sp, #4]
   14280:	subge	r0, r0, #1
   14284:	movwge	r1, #38480	; 0x9650
   14288:	movtge	r1, #3
   1428c:	strge	r0, [r1]
   14290:	mov	sp, fp
   14294:	pop	{fp, pc}
   14298:	push	{fp, lr}
   1429c:	mov	fp, sp
   142a0:	sub	sp, sp, #16
   142a4:	movw	r0, #38476	; 0x964c
   142a8:	movt	r0, #3
   142ac:	mov	r1, #0
   142b0:	str	r1, [r0]
   142b4:	movw	r0, #38472	; 0x9648
   142b8:	movt	r0, #3
   142bc:	ldr	r0, [r0]
   142c0:	cmp	r0, #0
   142c4:	beq	142d0 <sigaltstack@plt+0x2a40>
   142c8:	bl	14028 <sigaltstack@plt+0x2798>
   142cc:	b	142dc <sigaltstack@plt+0x2a4c>
   142d0:	mov	r0, #11
   142d4:	mov	r1, #0
   142d8:	bl	11560 <signal@plt>
   142dc:	mov	r0, #2
   142e0:	str	r0, [sp, #8]
   142e4:	add	r0, sp, #4
   142e8:	mov	r1, #0
   142ec:	bl	11890 <sigaltstack@plt>
   142f0:	cmn	r0, #1
   142f4:	ble	14300 <sigaltstack@plt+0x2a70>
   142f8:	mov	sp, fp
   142fc:	pop	{fp, pc}
   14300:	movw	r0, #34368	; 0x8640
   14304:	movt	r0, #1
   14308:	bl	115e4 <perror@plt>
   1430c:	mov	sp, fp
   14310:	pop	{fp, pc}
   14314:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14318:	add	fp, sp, #28
   1431c:	sub	sp, sp, #20
   14320:	mov	r5, r2
   14324:	movw	r8, #38472	; 0x9648
   14328:	movt	r8, #3
   1432c:	ldr	r2, [r8]
   14330:	ldr	r4, [r1, #12]
   14334:	cmp	r2, #0
   14338:	beq	14350 <sigaltstack@plt+0x2ac0>
   1433c:	mov	r0, r4
   14340:	mov	r1, #0
   14344:	blx	r2
   14348:	cmp	r0, #0
   1434c:	bne	14440 <sigaltstack@plt+0x2bb0>
   14350:	movw	r9, #38476	; 0x964c
   14354:	movt	r9, #3
   14358:	ldr	r0, [r9]
   1435c:	cmp	r0, #0
   14360:	beq	14420 <sigaltstack@plt+0x2b90>
   14364:	movw	r0, #38480	; 0x9650
   14368:	movt	r0, #3
   1436c:	ldr	r6, [r0]
   14370:	cmp	r6, #0
   14374:	beq	14420 <sigaltstack@plt+0x2b90>
   14378:	ldr	r0, [r5, #84]	; 0x54
   1437c:	str	r0, [sp]
   14380:	bl	11740 <__errno_location@plt>
   14384:	mov	r7, r0
   14388:	ldr	sl, [r0]
   1438c:	add	r1, sp, #4
   14390:	mov	r0, r6
   14394:	bl	1445c <sigaltstack@plt+0x2bcc>
   14398:	str	sl, [r7]
   1439c:	cmp	r0, #0
   143a0:	blt	14420 <sigaltstack@plt+0x2b90>
   143a4:	ldr	r0, [sp, #4]
   143a8:	cmp	r0, r4
   143ac:	bls	143cc <sigaltstack@plt+0x2b3c>
   143b0:	ldr	r2, [sp, #12]
   143b4:	add	r1, sp, #4
   143b8:	mov	r0, r4
   143bc:	blx	r2
   143c0:	cmp	r0, #0
   143c4:	bne	143dc <sigaltstack@plt+0x2b4c>
   143c8:	b	14420 <sigaltstack@plt+0x2b90>
   143cc:	ldr	r0, [sp, #8]
   143d0:	sub	r0, r0, #1
   143d4:	cmp	r0, r4
   143d8:	bcc	14420 <sigaltstack@plt+0x2b90>
   143dc:	movw	r0, #38484	; 0x9654
   143e0:	movt	r0, #3
   143e4:	ldr	r1, [r0]
   143e8:	mov	r0, #0
   143ec:	ldr	r2, [sp]
   143f0:	cmp	r2, r1
   143f4:	bcc	14414 <sigaltstack@plt+0x2b84>
   143f8:	movw	r0, #38488	; 0x9658
   143fc:	movt	r0, #3
   14400:	ldr	r0, [r0]
   14404:	add	r1, r0, r1
   14408:	mov	r0, #0
   1440c:	cmp	r2, r1
   14410:	movwls	r0, #1
   14414:	ldr	r2, [r9]
   14418:	mov	r1, r5
   1441c:	blx	r2
   14420:	ldr	r2, [r8]
   14424:	cmp	r2, #0
   14428:	beq	14448 <sigaltstack@plt+0x2bb8>
   1442c:	mov	r0, r4
   14430:	mov	r1, #1
   14434:	blx	r2
   14438:	cmp	r0, #0
   1443c:	beq	14448 <sigaltstack@plt+0x2bb8>
   14440:	sub	sp, fp, #28
   14444:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14448:	mov	r0, #11
   1444c:	mov	r1, #0
   14450:	bl	11560 <signal@plt>
   14454:	sub	sp, fp, #28
   14458:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1445c:	push	{r4, r5, fp, lr}
   14460:	add	fp, sp, #8
   14464:	sub	sp, sp, #16
   14468:	mov	r4, r1
   1446c:	mov	r5, r0
   14470:	stm	sp, {r0, r1}
   14474:	mov	r0, #0
   14478:	str	r0, [sp, #8]
   1447c:	mvn	r0, #0
   14480:	str	r0, [sp, #12]
   14484:	mov	r0, sp
   14488:	bl	144c0 <sigaltstack@plt+0x2c30>
   1448c:	ldr	r0, [sp, #12]
   14490:	cmp	r0, #0
   14494:	beq	144a8 <sigaltstack@plt+0x2c18>
   14498:	mov	r0, r5
   1449c:	mov	r1, r4
   144a0:	bl	144e4 <sigaltstack@plt+0x2c54>
   144a4:	b	144b4 <sigaltstack@plt+0x2c24>
   144a8:	movw	r0, #17604	; 0x44c4
   144ac:	movt	r0, #1
   144b0:	str	r0, [r4, #8]
   144b4:	mov	r0, #0
   144b8:	sub	sp, fp, #8
   144bc:	pop	{r4, r5, fp, pc}
   144c0:	b	14538 <sigaltstack@plt+0x2ca8>
   144c4:	ldr	r2, [r1]
   144c8:	ldr	r1, [r1, #12]
   144cc:	sub	r3, r2, r0
   144d0:	sub	r1, r2, r1
   144d4:	mov	r0, #0
   144d8:	cmp	r3, r1, lsr #1
   144dc:	movwls	r0, #1
   144e0:	bx	lr
   144e4:	push	{r4, r5, r6, sl, fp, lr}
   144e8:	add	fp, sp, #16
   144ec:	mov	r4, r1
   144f0:	mov	r5, r0
   144f4:	movw	r6, #38492	; 0x965c
   144f8:	movt	r6, #3
   144fc:	ldr	r0, [r6]
   14500:	cmp	r0, #0
   14504:	bleq	14988 <sigaltstack@plt+0x30f8>
   14508:	ldr	r0, [r6]
   1450c:	udiv	r1, r5, r0
   14510:	mul	r5, r1, r0
   14514:	mov	r0, r5
   14518:	bl	149a4 <sigaltstack@plt+0x3114>
   1451c:	str	r0, [r4]
   14520:	mov	r0, r5
   14524:	bl	14a6c <sigaltstack@plt+0x31dc>
   14528:	movw	r1, #19256	; 0x4b38
   1452c:	movt	r1, #1
   14530:	stmib	r4, {r0, r1}
   14534:	pop	{r4, r5, r6, sl, fp, pc}
   14538:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1453c:	add	fp, sp, #28
   14540:	sub	sp, sp, #52	; 0x34
   14544:	mov	r4, r0
   14548:	add	r0, sp, #16
   1454c:	bl	14658 <sigaltstack@plt+0x2dc8>
   14550:	cmp	r0, #0
   14554:	mvnlt	r0, #0
   14558:	sublt	sp, fp, #28
   1455c:	poplt	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14560:	ldr	r5, [sp, #40]	; 0x28
   14564:	ldr	r0, [sp, #44]	; 0x2c
   14568:	str	r0, [sp, #4]
   1456c:	add	r0, sp, #16
   14570:	add	r1, sp, #12
   14574:	bl	1485c <sigaltstack@plt+0x2fcc>
   14578:	cmp	r0, #0
   1457c:	blt	14644 <sigaltstack@plt+0x2db4>
   14580:	ldr	r0, [sp, #4]
   14584:	sub	r8, r0, #1
   14588:	add	r7, sp, #16
   1458c:	add	sl, sp, #8
   14590:	b	145c8 <sigaltstack@plt+0x2d38>
   14594:	cmp	r1, r5
   14598:	bcs	145b0 <sigaltstack@plt+0x2d20>
   1459c:	mov	r0, r4
   145a0:	mov	r2, r5
   145a4:	bl	14908 <sigaltstack@plt+0x3078>
   145a8:	cmp	r0, #0
   145ac:	bne	14644 <sigaltstack@plt+0x2db4>
   145b0:	cmp	r8, r9
   145b4:	bcs	14630 <sigaltstack@plt+0x2da0>
   145b8:	mov	r0, r4
   145bc:	ldr	r1, [sp, #4]
   145c0:	mov	r2, r6
   145c4:	b	14624 <sigaltstack@plt+0x2d94>
   145c8:	mov	r0, r7
   145cc:	bl	148e4 <sigaltstack@plt+0x3054>
   145d0:	cmp	r0, #45	; 0x2d
   145d4:	bne	14644 <sigaltstack@plt+0x2db4>
   145d8:	mov	r0, r7
   145dc:	mov	r1, sl
   145e0:	bl	1485c <sigaltstack@plt+0x2fcc>
   145e4:	cmp	r0, #0
   145e8:	blt	14644 <sigaltstack@plt+0x2db4>
   145ec:	mov	r0, r7
   145f0:	bl	148e4 <sigaltstack@plt+0x3054>
   145f4:	cmp	r0, #10
   145f8:	cmnne	r0, #1
   145fc:	bne	145ec <sigaltstack@plt+0x2d5c>
   14600:	ldr	r1, [sp, #12]
   14604:	cmp	r1, r5
   14608:	bhi	1461c <sigaltstack@plt+0x2d8c>
   1460c:	ldr	r6, [sp, #8]
   14610:	sub	r9, r6, #1
   14614:	cmp	r8, r9
   14618:	bls	14594 <sigaltstack@plt+0x2d04>
   1461c:	ldr	r2, [sp, #8]
   14620:	mov	r0, r4
   14624:	bl	14908 <sigaltstack@plt+0x3078>
   14628:	cmp	r0, #0
   1462c:	bne	14644 <sigaltstack@plt+0x2db4>
   14630:	mov	r0, r7
   14634:	add	r1, sp, #12
   14638:	bl	1485c <sigaltstack@plt+0x2fcc>
   1463c:	cmn	r0, #1
   14640:	bgt	145c8 <sigaltstack@plt+0x2d38>
   14644:	add	r0, sp, #16
   14648:	bl	1494c <sigaltstack@plt+0x30bc>
   1464c:	mov	r0, #0
   14650:	sub	sp, fp, #28
   14654:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14658:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1465c:	add	fp, sp, #28
   14660:	sub	sp, sp, #20
   14664:	mov	r4, r0
   14668:	movw	r0, #34417	; 0x8671
   1466c:	movt	r0, #1
   14670:	mov	sl, #0
   14674:	mov	r1, #0
   14678:	bl	1165c <open64@plt>
   1467c:	cmp	r0, #0
   14680:	blt	1484c <sigaltstack@plt+0x2fbc>
   14684:	mov	r5, r0
   14688:	str	sl, [r4]
   1468c:	str	sl, [r4, #24]
   14690:	str	sl, [r4, #28]
   14694:	add	r0, r4, #32
   14698:	str	sl, [r4, #8]
   1469c:	str	r0, [r4, #12]
   146a0:	str	sl, [r4, #16]
   146a4:	mov	r7, #1
   146a8:	movw	r6, #4170	; 0x104a
   146ac:	movw	r8, #4169	; 0x1049
   146b0:	mov	r9, #0
   146b4:	cmp	r7, r6
   146b8:	bcc	146e8 <sigaltstack@plt+0x2e58>
   146bc:	ldr	r1, [r4, #12]
   146c0:	mov	r0, r5
   146c4:	mov	r2, r7
   146c8:	bl	114f4 <read@plt>
   146cc:	cmn	r0, #1
   146d0:	ble	14758 <sigaltstack@plt+0x2ec8>
   146d4:	cmp	r0, #0
   146d8:	beq	14820 <sigaltstack@plt+0x2f90>
   146dc:	add	r1, r0, r8
   146e0:	cmp	r1, r7
   146e4:	bls	14718 <sigaltstack@plt+0x2e88>
   146e8:	cmp	r9, #0
   146ec:	beq	1476c <sigaltstack@plt+0x2edc>
   146f0:	cmp	sl, r7, lsl #1
   146f4:	beq	14820 <sigaltstack@plt+0x2f90>
   146f8:	lsl	r7, r7, #1
   146fc:	ldr	r0, [r4, #16]
   14700:	cmp	r0, #0
   14704:	beq	14784 <sigaltstack@plt+0x2ef4>
   14708:	ldr	r1, [r4, #20]
   1470c:	bl	117a0 <munmap@plt>
   14710:	b	14784 <sigaltstack@plt+0x2ef4>
   14714:	add	r0, r1, r0
   14718:	str	r0, [r4, #4]
   1471c:	sub	r2, r7, r0
   14720:	ldr	r1, [r4, #12]
   14724:	add	r1, r1, r0
   14728:	mov	r0, r5
   1472c:	bl	114f4 <read@plt>
   14730:	cmp	r0, #0
   14734:	blt	14758 <sigaltstack@plt+0x2ec8>
   14738:	add	r2, r0, r8
   1473c:	ldr	r1, [r4, #4]
   14740:	sub	r3, r7, r1
   14744:	cmp	r2, r3
   14748:	bhi	146e8 <sigaltstack@plt+0x2e58>
   1474c:	cmp	r0, #0
   14750:	bne	14714 <sigaltstack@plt+0x2e84>
   14754:	b	14810 <sigaltstack@plt+0x2f80>
   14758:	bl	11740 <__errno_location@plt>
   1475c:	ldr	r0, [r0]
   14760:	cmp	r0, #4
   14764:	beq	147cc <sigaltstack@plt+0x2f3c>
   14768:	b	14820 <sigaltstack@plt+0x2f90>
   1476c:	bl	11734 <getpagesize@plt>
   14770:	mov	r9, r0
   14774:	mov	r7, r0
   14778:	lsl	r0, r0, #1
   1477c:	cmp	r7, r6
   14780:	bcc	14774 <sigaltstack@plt+0x2ee4>
   14784:	str	sl, [sp, #8]
   14788:	str	sl, [sp, #12]
   1478c:	mvn	r0, #0
   14790:	str	r0, [sp]
   14794:	mov	r0, #0
   14798:	mov	r1, r7
   1479c:	mov	r2, #3
   147a0:	mov	r3, #34	; 0x22
   147a4:	bl	11548 <mmap64@plt>
   147a8:	str	r0, [r4, #16]
   147ac:	cmn	r0, #1
   147b0:	beq	14844 <sigaltstack@plt+0x2fb4>
   147b4:	ldr	r0, [r4, #16]
   147b8:	str	r0, [r4, #12]
   147bc:	add	r1, r0, r7
   147c0:	str	r7, [r4, #20]
   147c4:	str	r0, [r4, #24]
   147c8:	str	r1, [r4, #28]
   147cc:	str	sl, [sp]
   147d0:	mov	r0, r5
   147d4:	mov	r2, #0
   147d8:	mov	r3, #0
   147dc:	bl	11614 <lseek64@plt>
   147e0:	cmn	r1, #1
   147e4:	bgt	146b4 <sigaltstack@plt+0x2e24>
   147e8:	mov	r0, r5
   147ec:	bl	1186c <close@plt>
   147f0:	movw	r0, #34417	; 0x8671
   147f4:	movt	r0, #1
   147f8:	mov	r1, #0
   147fc:	bl	1165c <open64@plt>
   14800:	mov	r5, r0
   14804:	cmp	r0, #0
   14808:	bge	146b4 <sigaltstack@plt+0x2e24>
   1480c:	b	14828 <sigaltstack@plt+0x2f98>
   14810:	mov	r0, r5
   14814:	bl	1186c <close@plt>
   14818:	mov	r5, #0
   1481c:	b	14850 <sigaltstack@plt+0x2fc0>
   14820:	mov	r0, r5
   14824:	bl	1186c <close@plt>
   14828:	ldr	r0, [r4, #16]
   1482c:	mvn	r5, #0
   14830:	cmp	r0, #0
   14834:	beq	14850 <sigaltstack@plt+0x2fc0>
   14838:	ldr	r1, [r4, #20]
   1483c:	bl	117a0 <munmap@plt>
   14840:	b	14850 <sigaltstack@plt+0x2fc0>
   14844:	mov	r0, r5
   14848:	bl	1186c <close@plt>
   1484c:	mvn	r5, #0
   14850:	mov	r0, r5
   14854:	sub	sp, fp, #28
   14858:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1485c:	push	{r4, r5, r6, r7, fp, lr}
   14860:	add	fp, sp, #16
   14864:	mov	r4, r1
   14868:	mov	r5, r0
   1486c:	mov	r6, #0
   14870:	mov	r7, #0
   14874:	b	14884 <sigaltstack@plt+0x2ff4>
   14878:	mov	r0, r5
   1487c:	bl	148e4 <sigaltstack@plt+0x3054>
   14880:	sub	r6, r6, #1
   14884:	mov	r0, r5
   14888:	bl	14964 <sigaltstack@plt+0x30d4>
   1488c:	sub	r1, r0, #48	; 0x30
   14890:	cmp	r1, #9
   14894:	bhi	148a0 <sigaltstack@plt+0x3010>
   14898:	add	r7, r1, r7, lsl #4
   1489c:	b	14878 <sigaltstack@plt+0x2fe8>
   148a0:	sub	r1, r0, #65	; 0x41
   148a4:	cmp	r1, #5
   148a8:	bhi	148b8 <sigaltstack@plt+0x3028>
   148ac:	add	r0, r0, r7, lsl #4
   148b0:	sub	r7, r0, #55	; 0x37
   148b4:	b	14878 <sigaltstack@plt+0x2fe8>
   148b8:	sub	r1, r0, #97	; 0x61
   148bc:	cmp	r1, #5
   148c0:	bhi	148d0 <sigaltstack@plt+0x3040>
   148c4:	add	r0, r0, r7, lsl #4
   148c8:	sub	r7, r0, #87	; 0x57
   148cc:	b	14878 <sigaltstack@plt+0x2fe8>
   148d0:	cmp	r6, #0
   148d4:	mvneq	r0, #0
   148d8:	strne	r7, [r4]
   148dc:	movne	r0, #0
   148e0:	pop	{r4, r5, r6, r7, fp, pc}
   148e4:	push	{r4, sl, fp, lr}
   148e8:	add	fp, sp, #8
   148ec:	mov	r4, r0
   148f0:	bl	14964 <sigaltstack@plt+0x30d4>
   148f4:	cmp	r0, #0
   148f8:	ldrge	r1, [r4]
   148fc:	addge	r1, r1, #1
   14900:	strge	r1, [r4]
   14904:	pop	{r4, sl, fp, pc}
   14908:	ldr	ip, [r0]
   1490c:	cmp	ip, r1
   14910:	bcc	14940 <sigaltstack@plt+0x30b0>
   14914:	sub	r3, r2, #1
   14918:	cmp	ip, r3
   1491c:	bhi	14940 <sigaltstack@plt+0x30b0>
   14920:	ldr	r3, [r0, #4]
   14924:	stm	r3, {r1, r2}
   14928:	ldr	r1, [r0, #8]
   1492c:	str	r1, [r3, #12]
   14930:	mov	r1, #0
   14934:	str	r1, [r0, #12]
   14938:	mov	r0, #1
   1493c:	bx	lr
   14940:	str	r2, [r0, #8]
   14944:	mov	r0, #0
   14948:	bx	lr
   1494c:	mov	r1, r0
   14950:	ldr	r0, [r0, #16]
   14954:	cmp	r0, #0
   14958:	bxeq	lr
   1495c:	ldr	r1, [r1, #20]
   14960:	b	117a0 <munmap@plt>
   14964:	ldm	r0, {r1, r2}
   14968:	cmp	r1, r2
   1496c:	ldrne	r0, [r0, #12]
   14970:	ldrbne	r0, [r0, r1]
   14974:	bxne	lr
   14978:	mov	r1, #1
   1497c:	str	r1, [r0, #8]
   14980:	mvn	r0, #0
   14984:	bx	lr
   14988:	push	{fp, lr}
   1498c:	mov	fp, sp
   14990:	bl	11734 <getpagesize@plt>
   14994:	movw	r1, #38492	; 0x965c
   14998:	movt	r1, #3
   1499c:	str	r0, [r1]
   149a0:	pop	{fp, pc}
   149a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   149a8:	add	fp, sp, #24
   149ac:	sub	sp, sp, #1024	; 0x400
   149b0:	cmp	r0, #0
   149b4:	beq	14a04 <sigaltstack@plt+0x3174>
   149b8:	mov	r4, r0
   149bc:	mov	r7, #1024	; 0x400
   149c0:	movw	r6, #38492	; 0x965c
   149c4:	movt	r6, #3
   149c8:	mov	r5, sp
   149cc:	ldr	r1, [r6]
   149d0:	udiv	r0, r4, r1
   149d4:	cmp	r7, r0
   149d8:	movhi	r7, r0
   149dc:	mls	r0, r7, r1, r4
   149e0:	mul	r1, r7, r1
   149e4:	mov	r2, r5
   149e8:	bl	1180c <mincore@plt>
   149ec:	cmp	r0, #0
   149f0:	blt	14a14 <sigaltstack@plt+0x3184>
   149f4:	ldr	r0, [r6]
   149f8:	mls	r4, r0, r7, r4
   149fc:	cmp	r4, #0
   14a00:	bne	149cc <sigaltstack@plt+0x313c>
   14a04:	mov	r4, #0
   14a08:	mov	r0, r4
   14a0c:	sub	sp, fp, #24
   14a10:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14a14:	cmp	r7, #1
   14a18:	beq	14a08 <sigaltstack@plt+0x3178>
   14a1c:	mov	r8, sp
   14a20:	ldr	r1, [r6]
   14a24:	add	r0, r7, #1
   14a28:	lsr	r5, r0, #1
   14a2c:	mls	r0, r1, r5, r4
   14a30:	mul	r1, r1, r5
   14a34:	mov	r2, r8
   14a38:	bl	1180c <mincore@plt>
   14a3c:	cmp	r0, #0
   14a40:	blt	14a5c <sigaltstack@plt+0x31cc>
   14a44:	ldr	r0, [r6]
   14a48:	mls	r4, r0, r5, r4
   14a4c:	lsr	r7, r7, #1
   14a50:	cmp	r7, #1
   14a54:	bne	14a20 <sigaltstack@plt+0x3190>
   14a58:	b	14a08 <sigaltstack@plt+0x3178>
   14a5c:	mov	r7, r5
   14a60:	cmp	r7, #1
   14a64:	bne	14a20 <sigaltstack@plt+0x3190>
   14a68:	b	14a08 <sigaltstack@plt+0x3178>
   14a6c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14a70:	add	fp, sp, #24
   14a74:	sub	sp, sp, #1024	; 0x400
   14a78:	movw	r6, #38492	; 0x965c
   14a7c:	movt	r6, #3
   14a80:	ldr	r1, [r6]
   14a84:	adds	r4, r1, r0
   14a88:	beq	14ad0 <sigaltstack@plt+0x3240>
   14a8c:	mov	r7, #1024	; 0x400
   14a90:	mov	r5, sp
   14a94:	ldr	r0, [r6]
   14a98:	rsb	r1, r4, #0
   14a9c:	udiv	r1, r1, r0
   14aa0:	cmp	r7, r1
   14aa4:	movhi	r7, r1
   14aa8:	mul	r1, r7, r0
   14aac:	mov	r0, r4
   14ab0:	mov	r2, r5
   14ab4:	bl	1180c <mincore@plt>
   14ab8:	cmp	r0, #0
   14abc:	blt	14ae0 <sigaltstack@plt+0x3250>
   14ac0:	ldr	r0, [r6]
   14ac4:	mla	r4, r0, r7, r4
   14ac8:	cmp	r4, #0
   14acc:	bne	14a94 <sigaltstack@plt+0x3204>
   14ad0:	mov	r4, #0
   14ad4:	mov	r0, r4
   14ad8:	sub	sp, fp, #24
   14adc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14ae0:	cmp	r7, #1
   14ae4:	beq	14ad4 <sigaltstack@plt+0x3244>
   14ae8:	mov	r8, sp
   14aec:	ldr	r0, [r6]
   14af0:	add	r1, r7, #1
   14af4:	lsr	r5, r1, #1
   14af8:	mul	r1, r0, r5
   14afc:	mov	r0, r4
   14b00:	mov	r2, r8
   14b04:	bl	1180c <mincore@plt>
   14b08:	cmp	r0, #0
   14b0c:	blt	14b28 <sigaltstack@plt+0x3298>
   14b10:	ldr	r0, [r6]
   14b14:	mla	r4, r0, r5, r4
   14b18:	lsr	r7, r7, #1
   14b1c:	cmp	r7, #1
   14b20:	bne	14aec <sigaltstack@plt+0x325c>
   14b24:	b	14ad4 <sigaltstack@plt+0x3244>
   14b28:	mov	r7, r5
   14b2c:	cmp	r7, #1
   14b30:	bne	14aec <sigaltstack@plt+0x325c>
   14b34:	b	14ad4 <sigaltstack@plt+0x3244>
   14b38:	mov	r2, r0
   14b3c:	ldr	r1, [r1]
   14b40:	sub	r0, r0, r1
   14b44:	add	r0, r0, r2
   14b48:	cmp	r0, r2
   14b4c:	movhi	r0, #0
   14b50:	bxhi	lr
   14b54:	sub	r1, r1, #1
   14b58:	b	14b5c <sigaltstack@plt+0x32cc>
   14b5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b60:	add	fp, sp, #28
   14b64:	sub	sp, sp, #4
   14b68:	movw	r2, #38492	; 0x965c
   14b6c:	movt	r2, #3
   14b70:	ldr	r2, [r2]
   14b74:	udiv	r0, r0, r2
   14b78:	udiv	r1, r1, r2
   14b7c:	add	r1, r1, #1
   14b80:	mul	r1, r1, r2
   14b84:	mls	r1, r0, r2, r1
   14b88:	udiv	r7, r1, r2
   14b8c:	mul	r0, r0, r2
   14b90:	str	r0, [sp]
   14b94:	mov	r0, #1
   14b98:	mov	sl, r0
   14b9c:	lsl	r0, r0, #1
   14ba0:	cmp	sl, r7
   14ba4:	bcc	14b98 <sigaltstack@plt+0x3308>
   14ba8:	mov	r4, #1
   14bac:	mov	r0, #0
   14bb0:	cmp	r0, sl, lsr #1
   14bb4:	beq	14c28 <sigaltstack@plt+0x3398>
   14bb8:	lsr	r0, sl, #1
   14bbc:	mov	r1, sl
   14bc0:	mov	sl, r0
   14bc4:	cmp	r0, r7
   14bc8:	bcs	14c10 <sigaltstack@plt+0x3380>
   14bcc:	movw	r0, #38492	; 0x965c
   14bd0:	movt	r0, #3
   14bd4:	ldr	r0, [r0]
   14bd8:	mul	r0, r0, sl
   14bdc:	ldr	r2, [sp]
   14be0:	add	r5, r0, r2
   14be4:	lsl	r8, r0, #1
   14be8:	bic	r9, r1, #1
   14bec:	mov	r6, sl
   14bf0:	mov	r0, r5
   14bf4:	bl	14c34 <sigaltstack@plt+0x33a4>
   14bf8:	cmp	r0, #0
   14bfc:	bne	14c24 <sigaltstack@plt+0x3394>
   14c00:	add	r5, r5, r8
   14c04:	add	r6, r6, r9
   14c08:	cmp	r6, r7
   14c0c:	bcc	14bf0 <sigaltstack@plt+0x3360>
   14c10:	lsr	r0, sl, #1
   14c14:	mov	r1, #0
   14c18:	cmp	r1, sl, lsr #1
   14c1c:	bne	14bbc <sigaltstack@plt+0x332c>
   14c20:	b	14c28 <sigaltstack@plt+0x3398>
   14c24:	mov	r4, #0
   14c28:	mov	r0, r4
   14c2c:	sub	sp, fp, #28
   14c30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c34:	push	{fp, lr}
   14c38:	mov	fp, sp
   14c3c:	sub	sp, sp, #8
   14c40:	movw	r1, #38492	; 0x965c
   14c44:	movt	r1, #3
   14c48:	ldr	r1, [r1]
   14c4c:	sub	r2, fp, #1
   14c50:	bl	1180c <mincore@plt>
   14c54:	mov	r1, #1
   14c58:	eor	r0, r1, r0, lsr #31
   14c5c:	mov	sp, fp
   14c60:	pop	{fp, pc}
   14c64:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14c68:	add	fp, sp, #24
   14c6c:	sub	sp, sp, #64	; 0x40
   14c70:	mov	r5, r1
   14c74:	bl	11590 <strdup@plt>
   14c78:	cmp	r0, #0
   14c7c:	beq	14f24 <sigaltstack@plt+0x3694>
   14c80:	mov	r4, r0
   14c84:	bl	1162c <__ctype_get_mb_cur_max@plt>
   14c88:	cmp	r0, #2
   14c8c:	bcc	14d78 <sigaltstack@plt+0x34e8>
   14c90:	cmp	r5, #0
   14c94:	beq	14d38 <sigaltstack@plt+0x34a8>
   14c98:	str	r4, [sp, #24]
   14c9c:	mov	r0, r4
   14ca0:	bl	11704 <strlen@plt>
   14ca4:	mov	r7, #0
   14ca8:	str	r7, [sp, #16]
   14cac:	str	r7, [sp, #12]
   14cb0:	strb	r7, [sp, #8]
   14cb4:	strb	r7, [sp, #20]
   14cb8:	add	r0, r4, r0
   14cbc:	str	r0, [sp, #4]
   14cc0:	ldr	r1, [sp, #24]
   14cc4:	cmp	r1, r0
   14cc8:	bcs	14d14 <sigaltstack@plt+0x3484>
   14ccc:	add	r6, sp, #4
   14cd0:	mov	r0, r6
   14cd4:	bl	15ac8 <sigaltstack@plt+0x4238>
   14cd8:	ldrb	r0, [sp, #32]
   14cdc:	cmp	r0, #0
   14ce0:	beq	14d14 <sigaltstack@plt+0x3484>
   14ce4:	ldr	r0, [sp, #36]	; 0x24
   14ce8:	bl	116f8 <iswspace@plt>
   14cec:	cmp	r0, #0
   14cf0:	beq	14d14 <sigaltstack@plt+0x3484>
   14cf4:	strb	r7, [sp, #20]
   14cf8:	ldr	r0, [sp, #4]
   14cfc:	ldr	r1, [sp, #24]
   14d00:	ldr	r2, [sp, #28]
   14d04:	add	r1, r1, r2
   14d08:	str	r1, [sp, #24]
   14d0c:	cmp	r1, r0
   14d10:	bcc	14cd0 <sigaltstack@plt+0x3440>
   14d14:	ldr	r6, [sp, #24]
   14d18:	mov	r0, r6
   14d1c:	bl	11704 <strlen@plt>
   14d20:	add	r2, r0, #1
   14d24:	mov	r0, r4
   14d28:	mov	r1, r6
   14d2c:	bl	1150c <memmove@plt>
   14d30:	cmp	r5, #1
   14d34:	beq	14f18 <sigaltstack@plt+0x3688>
   14d38:	str	r4, [sp, #24]
   14d3c:	mov	r0, r4
   14d40:	bl	11704 <strlen@plt>
   14d44:	mov	r6, #0
   14d48:	str	r6, [sp, #16]
   14d4c:	str	r6, [sp, #12]
   14d50:	strb	r6, [sp, #8]
   14d54:	strb	r6, [sp, #20]
   14d58:	add	r0, r4, r0
   14d5c:	str	r0, [sp, #4]
   14d60:	ldr	r1, [sp, #24]
   14d64:	cmp	r1, r0
   14d68:	bcs	14f18 <sigaltstack@plt+0x3688>
   14d6c:	add	r5, sp, #4
   14d70:	mov	r7, #0
   14d74:	b	14e40 <sigaltstack@plt+0x35b0>
   14d78:	cmp	r5, #0
   14d7c:	beq	14dd8 <sigaltstack@plt+0x3548>
   14d80:	ldrb	r7, [r4]
   14d84:	cmp	r7, #0
   14d88:	mov	r6, r4
   14d8c:	beq	14db8 <sigaltstack@plt+0x3528>
   14d90:	bl	116e0 <__ctype_b_loc@plt>
   14d94:	ldr	r0, [r0]
   14d98:	mov	r6, r4
   14d9c:	uxtb	r1, r7
   14da0:	add	r1, r0, r1, lsl #1
   14da4:	ldrb	r1, [r1, #1]
   14da8:	tst	r1, #32
   14dac:	ldrbne	r7, [r6, #1]!
   14db0:	cmpne	r7, #0
   14db4:	bne	14d9c <sigaltstack@plt+0x350c>
   14db8:	mov	r0, r6
   14dbc:	bl	11704 <strlen@plt>
   14dc0:	add	r2, r0, #1
   14dc4:	mov	r0, r4
   14dc8:	mov	r1, r6
   14dcc:	bl	1150c <memmove@plt>
   14dd0:	cmp	r5, #1
   14dd4:	beq	14f18 <sigaltstack@plt+0x3688>
   14dd8:	mov	r0, r4
   14ddc:	bl	11704 <strlen@plt>
   14de0:	add	r0, r4, r0
   14de4:	sub	r5, r0, #1
   14de8:	cmp	r5, r4
   14dec:	bcc	14f18 <sigaltstack@plt+0x3688>
   14df0:	bl	116e0 <__ctype_b_loc@plt>
   14df4:	mov	r1, #0
   14df8:	ldrb	r2, [r5]
   14dfc:	ldr	r3, [r0]
   14e00:	add	r2, r3, r2, lsl #1
   14e04:	ldrb	r2, [r2, #1]
   14e08:	tst	r2, #32
   14e0c:	beq	14f18 <sigaltstack@plt+0x3688>
   14e10:	strb	r1, [r5], #-1
   14e14:	cmp	r5, r4
   14e18:	bcs	14df8 <sigaltstack@plt+0x3568>
   14e1c:	b	14f18 <sigaltstack@plt+0x3688>
   14e20:	ldrb	r0, [sp, #32]
   14e24:	cmp	r0, #0
   14e28:	beq	14eec <sigaltstack@plt+0x365c>
   14e2c:	ldr	r0, [sp, #36]	; 0x24
   14e30:	bl	116f8 <iswspace@plt>
   14e34:	cmp	r0, #0
   14e38:	movne	r7, #1
   14e3c:	b	14eec <sigaltstack@plt+0x365c>
   14e40:	mov	r0, r5
   14e44:	bl	15ac8 <sigaltstack@plt+0x4238>
   14e48:	cmp	r7, #1
   14e4c:	beq	14e80 <sigaltstack@plt+0x35f0>
   14e50:	cmp	r7, #0
   14e54:	bne	14ec8 <sigaltstack@plt+0x3638>
   14e58:	mov	r7, #1
   14e5c:	ldrb	r0, [sp, #32]
   14e60:	cmp	r0, #0
   14e64:	beq	14eec <sigaltstack@plt+0x365c>
   14e68:	ldr	r0, [sp, #36]	; 0x24
   14e6c:	bl	116f8 <iswspace@plt>
   14e70:	cmp	r0, #0
   14e74:	beq	14e20 <sigaltstack@plt+0x3590>
   14e78:	mov	r7, #0
   14e7c:	b	14eec <sigaltstack@plt+0x365c>
   14e80:	mov	r7, #1
   14e84:	ldrb	r0, [sp, #32]
   14e88:	cmp	r0, #0
   14e8c:	beq	14eec <sigaltstack@plt+0x365c>
   14e90:	ldr	r0, [sp, #36]	; 0x24
   14e94:	bl	116f8 <iswspace@plt>
   14e98:	cmp	r0, #0
   14e9c:	beq	14eec <sigaltstack@plt+0x365c>
   14ea0:	ldrb	r0, [sp, #32]
   14ea4:	cmp	r0, #0
   14ea8:	beq	14ee8 <sigaltstack@plt+0x3658>
   14eac:	ldr	r0, [sp, #36]	; 0x24
   14eb0:	bl	116f8 <iswspace@plt>
   14eb4:	cmp	r0, #0
   14eb8:	beq	14ee8 <sigaltstack@plt+0x3658>
   14ebc:	mov	r7, #2
   14ec0:	ldr	r8, [sp, #24]
   14ec4:	b	14eec <sigaltstack@plt+0x365c>
   14ec8:	ldrb	r0, [sp, #32]
   14ecc:	cmp	r0, #0
   14ed0:	beq	14ee8 <sigaltstack@plt+0x3658>
   14ed4:	ldr	r0, [sp, #36]	; 0x24
   14ed8:	bl	116f8 <iswspace@plt>
   14edc:	mov	r7, #2
   14ee0:	cmp	r0, #0
   14ee4:	bne	14eec <sigaltstack@plt+0x365c>
   14ee8:	mov	r7, #1
   14eec:	strb	r6, [sp, #20]
   14ef0:	ldr	r0, [sp, #4]
   14ef4:	ldr	r1, [sp, #24]
   14ef8:	ldr	r2, [sp, #28]
   14efc:	add	r1, r1, r2
   14f00:	str	r1, [sp, #24]
   14f04:	cmp	r1, r0
   14f08:	bcc	14e40 <sigaltstack@plt+0x35b0>
   14f0c:	cmp	r7, #2
   14f10:	moveq	r0, #0
   14f14:	strbeq	r0, [r8]
   14f18:	mov	r0, r4
   14f1c:	sub	sp, fp, #24
   14f20:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14f24:	bl	1576c <sigaltstack@plt+0x3edc>
   14f28:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14f2c:	add	fp, sp, #24
   14f30:	sub	sp, sp, #32
   14f34:	mov	r4, r2
   14f38:	mov	r5, r0
   14f3c:	ldr	r7, [fp, #12]
   14f40:	ldr	r6, [fp, #8]
   14f44:	cmp	r1, #0
   14f48:	beq	14f68 <sigaltstack@plt+0x36d8>
   14f4c:	mov	r2, r1
   14f50:	str	r3, [sp]
   14f54:	movw	r1, #34490	; 0x86ba
   14f58:	movt	r1, #1
   14f5c:	mov	r0, r5
   14f60:	mov	r3, r4
   14f64:	b	14f78 <sigaltstack@plt+0x36e8>
   14f68:	movw	r1, #34502	; 0x86c6
   14f6c:	movt	r1, #1
   14f70:	mov	r0, r5
   14f74:	mov	r2, r4
   14f78:	bl	11728 <fprintf@plt>
   14f7c:	movw	r1, #34509	; 0x86cd
   14f80:	movt	r1, #1
   14f84:	mov	r0, #0
   14f88:	mov	r2, #5
   14f8c:	bl	11584 <dcgettext@plt>
   14f90:	mov	r2, r0
   14f94:	movw	r1, #35267	; 0x89c3
   14f98:	movt	r1, #1
   14f9c:	mov	r0, r5
   14fa0:	movw	r3, #2021	; 0x7e5
   14fa4:	bl	11728 <fprintf@plt>
   14fa8:	movw	r4, #31321	; 0x7a59
   14fac:	movt	r4, #1
   14fb0:	mov	r0, r4
   14fb4:	mov	r1, r5
   14fb8:	bl	114ac <fputs_unlocked@plt>
   14fbc:	movw	r1, #34513	; 0x86d1
   14fc0:	movt	r1, #1
   14fc4:	mov	r0, #0
   14fc8:	mov	r2, #5
   14fcc:	bl	11584 <dcgettext@plt>
   14fd0:	mov	r1, r0
   14fd4:	movw	r2, #34684	; 0x877c
   14fd8:	movt	r2, #1
   14fdc:	mov	r0, r5
   14fe0:	bl	11728 <fprintf@plt>
   14fe4:	mov	r0, r4
   14fe8:	mov	r1, r5
   14fec:	bl	114ac <fputs_unlocked@plt>
   14ff0:	cmp	r7, #9
   14ff4:	bhi	15030 <sigaltstack@plt+0x37a0>
   14ff8:	add	r0, pc, #0
   14ffc:	ldr	pc, [r0, r7, lsl #2]
   15000:	andeq	r5, r1, r8, lsr #32
   15004:	andeq	r5, r1, ip, lsr r0
   15008:	andeq	r5, r1, r8, rrx
   1500c:	muleq	r1, r4, r0
   15010:	strheq	r5, [r1], -ip
   15014:	andeq	r5, r1, r8, ror #1
   15018:	andeq	r5, r1, ip, lsl r1
   1501c:	andeq	r5, r1, ip, asr r1
   15020:	strdeq	r5, [r1], -r8
   15024:	andeq	r5, r1, r0, lsr #3
   15028:	sub	sp, fp, #24
   1502c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15030:	movw	r1, #35037	; 0x88dd
   15034:	movt	r1, #1
   15038:	b	151a8 <sigaltstack@plt+0x3918>
   1503c:	movw	r1, #34718	; 0x879e
   15040:	movt	r1, #1
   15044:	mov	r0, #0
   15048:	mov	r2, #5
   1504c:	bl	11584 <dcgettext@plt>
   15050:	mov	r1, r0
   15054:	ldr	r2, [r6]
   15058:	mov	r0, r5
   1505c:	sub	sp, fp, #24
   15060:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15064:	b	11728 <fprintf@plt>
   15068:	movw	r1, #34734	; 0x87ae
   1506c:	movt	r1, #1
   15070:	mov	r0, #0
   15074:	mov	r2, #5
   15078:	bl	11584 <dcgettext@plt>
   1507c:	mov	r1, r0
   15080:	ldm	r6, {r2, r3}
   15084:	mov	r0, r5
   15088:	sub	sp, fp, #24
   1508c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15090:	b	11728 <fprintf@plt>
   15094:	movw	r1, #34757	; 0x87c5
   15098:	movt	r1, #1
   1509c:	mov	r0, #0
   150a0:	mov	r2, #5
   150a4:	bl	11584 <dcgettext@plt>
   150a8:	mov	r1, r0
   150ac:	ldm	r6, {r2, r3}
   150b0:	ldr	r0, [r6, #8]
   150b4:	str	r0, [sp]
   150b8:	b	15154 <sigaltstack@plt+0x38c4>
   150bc:	movw	r1, #34785	; 0x87e1
   150c0:	movt	r1, #1
   150c4:	mov	r0, #0
   150c8:	mov	r2, #5
   150cc:	bl	11584 <dcgettext@plt>
   150d0:	mov	r1, r0
   150d4:	ldm	r6, {r2, r3}
   150d8:	ldr	r0, [r6, #8]
   150dc:	ldr	r7, [r6, #12]
   150e0:	stm	sp, {r0, r7}
   150e4:	b	15154 <sigaltstack@plt+0x38c4>
   150e8:	movw	r1, #34817	; 0x8801
   150ec:	movt	r1, #1
   150f0:	mov	r0, #0
   150f4:	mov	r2, #5
   150f8:	bl	11584 <dcgettext@plt>
   150fc:	mov	r1, r0
   15100:	ldm	r6, {r2, r3}
   15104:	ldr	r0, [r6, #8]
   15108:	ldr	r7, [r6, #12]
   1510c:	ldr	r6, [r6, #16]
   15110:	stm	sp, {r0, r7}
   15114:	str	r6, [sp, #8]
   15118:	b	15154 <sigaltstack@plt+0x38c4>
   1511c:	movw	r1, #34853	; 0x8825
   15120:	movt	r1, #1
   15124:	mov	r0, #0
   15128:	mov	r2, #5
   1512c:	bl	11584 <dcgettext@plt>
   15130:	mov	r1, r0
   15134:	ldm	r6, {r2, r3}
   15138:	ldr	r0, [r6, #8]
   1513c:	ldr	r7, [r6, #12]
   15140:	ldr	r4, [r6, #16]
   15144:	ldr	r6, [r6, #20]
   15148:	stm	sp, {r0, r7}
   1514c:	str	r4, [sp, #8]
   15150:	str	r6, [sp, #12]
   15154:	mov	r0, r5
   15158:	b	15248 <sigaltstack@plt+0x39b8>
   1515c:	movw	r1, #34893	; 0x884d
   15160:	movt	r1, #1
   15164:	mov	r0, #0
   15168:	mov	r2, #5
   1516c:	bl	11584 <dcgettext@plt>
   15170:	mov	ip, r0
   15174:	ldm	r6, {r2, r3}
   15178:	ldr	r0, [r6, #8]
   1517c:	ldr	r7, [r6, #12]
   15180:	ldr	r4, [r6, #16]
   15184:	ldr	r1, [r6, #20]
   15188:	ldr	r6, [r6, #24]
   1518c:	stm	sp, {r0, r7}
   15190:	str	r4, [sp, #8]
   15194:	str	r1, [sp, #12]
   15198:	str	r6, [sp, #16]
   1519c:	b	15240 <sigaltstack@plt+0x39b0>
   151a0:	movw	r1, #34985	; 0x88a9
   151a4:	movt	r1, #1
   151a8:	mov	r0, #0
   151ac:	mov	r2, #5
   151b0:	bl	11584 <dcgettext@plt>
   151b4:	mov	ip, r0
   151b8:	ldr	r2, [r6]
   151bc:	ldr	r3, [r6, #4]
   151c0:	ldr	r0, [r6, #8]
   151c4:	ldr	r7, [r6, #12]
   151c8:	ldr	r4, [r6, #16]
   151cc:	ldr	r1, [r6, #20]
   151d0:	ldr	lr, [r6, #24]
   151d4:	ldr	r8, [r6, #28]
   151d8:	ldr	r6, [r6, #32]
   151dc:	stm	sp, {r0, r7}
   151e0:	str	r4, [sp, #8]
   151e4:	str	r1, [sp, #12]
   151e8:	str	lr, [sp, #16]
   151ec:	str	r8, [sp, #20]
   151f0:	str	r6, [sp, #24]
   151f4:	b	15240 <sigaltstack@plt+0x39b0>
   151f8:	movw	r1, #34937	; 0x8879
   151fc:	movt	r1, #1
   15200:	mov	r0, #0
   15204:	mov	r2, #5
   15208:	bl	11584 <dcgettext@plt>
   1520c:	mov	ip, r0
   15210:	ldm	r6, {r2, r3}
   15214:	ldr	r0, [r6, #8]
   15218:	ldr	r7, [r6, #12]
   1521c:	ldr	r4, [r6, #16]
   15220:	ldr	r1, [r6, #20]
   15224:	ldr	lr, [r6, #24]
   15228:	ldr	r6, [r6, #28]
   1522c:	stm	sp, {r0, r7}
   15230:	str	r4, [sp, #8]
   15234:	str	r1, [sp, #12]
   15238:	str	lr, [sp, #16]
   1523c:	str	r6, [sp, #20]
   15240:	mov	r0, r5
   15244:	mov	r1, ip
   15248:	bl	11728 <fprintf@plt>
   1524c:	sub	sp, fp, #24
   15250:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15254:	push	{r4, sl, fp, lr}
   15258:	add	fp, sp, #8
   1525c:	sub	sp, sp, #8
   15260:	mov	lr, #0
   15264:	ldr	ip, [fp, #8]
   15268:	ldr	r4, [ip, lr, lsl #2]
   1526c:	add	lr, lr, #1
   15270:	cmp	r4, #0
   15274:	bne	15268 <sigaltstack@plt+0x39d8>
   15278:	sub	r4, lr, #1
   1527c:	str	ip, [sp]
   15280:	str	r4, [sp, #4]
   15284:	bl	14f28 <sigaltstack@plt+0x3698>
   15288:	sub	sp, fp, #8
   1528c:	pop	{r4, sl, fp, pc}
   15290:	push	{r4, r5, fp, lr}
   15294:	add	fp, sp, #8
   15298:	sub	sp, sp, #48	; 0x30
   1529c:	mov	ip, #0
   152a0:	ldr	r4, [fp, #8]
   152a4:	add	lr, sp, #8
   152a8:	ldr	r5, [r4]
   152ac:	str	r5, [lr, ip, lsl #2]
   152b0:	cmp	r5, #0
   152b4:	beq	152c8 <sigaltstack@plt+0x3a38>
   152b8:	add	ip, ip, #1
   152bc:	add	r4, r4, #4
   152c0:	cmp	ip, #10
   152c4:	bcc	152a8 <sigaltstack@plt+0x3a18>
   152c8:	str	lr, [sp]
   152cc:	str	ip, [sp, #4]
   152d0:	bl	14f28 <sigaltstack@plt+0x3698>
   152d4:	sub	sp, fp, #8
   152d8:	pop	{r4, r5, fp, pc}
   152dc:	push	{fp, lr}
   152e0:	mov	fp, sp
   152e4:	sub	sp, sp, #8
   152e8:	add	ip, fp, #8
   152ec:	str	ip, [sp, #4]
   152f0:	str	ip, [sp]
   152f4:	bl	15290 <sigaltstack@plt+0x3a00>
   152f8:	mov	sp, fp
   152fc:	pop	{fp, pc}
   15300:	push	{fp, lr}
   15304:	mov	fp, sp
   15308:	movw	r0, #37276	; 0x919c
   1530c:	movt	r0, #2
   15310:	ldr	r1, [r0]
   15314:	movw	r0, #31321	; 0x7a59
   15318:	movt	r0, #1
   1531c:	bl	114ac <fputs_unlocked@plt>
   15320:	movw	r1, #35097	; 0x8919
   15324:	movt	r1, #1
   15328:	mov	r0, #0
   1532c:	mov	r2, #5
   15330:	bl	11584 <dcgettext@plt>
   15334:	movw	r1, #35117	; 0x892d
   15338:	movt	r1, #1
   1533c:	bl	114e8 <printf@plt>
   15340:	movw	r1, #35139	; 0x8943
   15344:	movt	r1, #1
   15348:	mov	r0, #0
   1534c:	mov	r2, #5
   15350:	bl	11584 <dcgettext@plt>
   15354:	movw	r1, #30822	; 0x7866
   15358:	movt	r1, #1
   1535c:	movw	r2, #35159	; 0x8957
   15360:	movt	r2, #1
   15364:	bl	114e8 <printf@plt>
   15368:	movw	r1, #35199	; 0x897f
   1536c:	movt	r1, #1
   15370:	mov	r0, #0
   15374:	mov	r2, #5
   15378:	bl	11584 <dcgettext@plt>
   1537c:	movw	r1, #35238	; 0x89a6
   15380:	movt	r1, #1
   15384:	pop	{fp, lr}
   15388:	b	114e8 <printf@plt>
   1538c:	push	{fp, lr}
   15390:	mov	fp, sp
   15394:	mov	r2, r1
   15398:	mov	r1, r0
   1539c:	mov	r0, #0
   153a0:	bl	153a8 <sigaltstack@plt+0x3b18>
   153a4:	pop	{fp, pc}
   153a8:	push	{r4, r5, r6, sl, fp, lr}
   153ac:	add	fp, sp, #16
   153b0:	mov	r4, r2
   153b4:	mov	r5, r1
   153b8:	mov	r6, r0
   153bc:	bl	159a8 <sigaltstack@plt+0x4118>
   153c0:	cmp	r0, #0
   153c4:	popne	{r4, r5, r6, sl, fp, pc}
   153c8:	cmp	r6, #0
   153cc:	beq	153e0 <sigaltstack@plt+0x3b50>
   153d0:	cmp	r5, #0
   153d4:	cmpne	r4, #0
   153d8:	bne	153e0 <sigaltstack@plt+0x3b50>
   153dc:	pop	{r4, r5, r6, sl, fp, pc}
   153e0:	bl	1576c <sigaltstack@plt+0x3edc>
   153e4:	b	153a8 <sigaltstack@plt+0x3b18>
   153e8:	b	153ec <sigaltstack@plt+0x3b5c>
   153ec:	push	{fp, lr}
   153f0:	mov	fp, sp
   153f4:	bl	15924 <sigaltstack@plt+0x4094>
   153f8:	bl	15400 <sigaltstack@plt+0x3b70>
   153fc:	pop	{fp, pc}
   15400:	cmp	r0, #0
   15404:	bxne	lr
   15408:	push	{fp, lr}
   1540c:	mov	fp, sp
   15410:	bl	1576c <sigaltstack@plt+0x3edc>
   15414:	push	{fp, lr}
   15418:	mov	fp, sp
   1541c:	bl	15a5c <sigaltstack@plt+0x41cc>
   15420:	bl	15400 <sigaltstack@plt+0x3b70>
   15424:	pop	{fp, pc}
   15428:	push	{r4, r5, fp, lr}
   1542c:	add	fp, sp, #8
   15430:	mov	r4, r1
   15434:	mov	r5, r0
   15438:	bl	15954 <sigaltstack@plt+0x40c4>
   1543c:	cmp	r0, #0
   15440:	popne	{r4, r5, fp, pc}
   15444:	cmp	r5, #0
   15448:	beq	15458 <sigaltstack@plt+0x3bc8>
   1544c:	cmp	r4, #0
   15450:	bne	15458 <sigaltstack@plt+0x3bc8>
   15454:	pop	{r4, r5, fp, pc}
   15458:	bl	1576c <sigaltstack@plt+0x3edc>
   1545c:	push	{fp, lr}
   15460:	mov	fp, sp
   15464:	bl	15a60 <sigaltstack@plt+0x41d0>
   15468:	bl	15400 <sigaltstack@plt+0x3b70>
   1546c:	pop	{fp, pc}
   15470:	push	{fp, lr}
   15474:	mov	fp, sp
   15478:	bl	15a70 <sigaltstack@plt+0x41e0>
   1547c:	bl	15400 <sigaltstack@plt+0x3b70>
   15480:	pop	{fp, pc}
   15484:	mov	r2, #1
   15488:	b	1548c <sigaltstack@plt+0x3bfc>
   1548c:	push	{r4, r5, fp, lr}
   15490:	add	fp, sp, #8
   15494:	mov	r4, r1
   15498:	ldr	r5, [r1]
   1549c:	cmp	r0, #0
   154a0:	beq	154b8 <sigaltstack@plt+0x3c28>
   154a4:	mov	r1, #1
   154a8:	add	r1, r1, r5, lsr #1
   154ac:	adds	r5, r5, r1
   154b0:	bcc	154d0 <sigaltstack@plt+0x3c40>
   154b4:	bl	1576c <sigaltstack@plt+0x3edc>
   154b8:	cmp	r5, #0
   154bc:	bne	154d0 <sigaltstack@plt+0x3c40>
   154c0:	mov	r1, #64	; 0x40
   154c4:	udiv	r5, r1, r2
   154c8:	cmp	r2, #64	; 0x40
   154cc:	addhi	r5, r5, #1
   154d0:	mov	r1, r5
   154d4:	bl	153a8 <sigaltstack@plt+0x3b18>
   154d8:	str	r5, [r4]
   154dc:	pop	{r4, r5, fp, pc}
   154e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   154e4:	add	fp, sp, #24
   154e8:	mov	r8, r1
   154ec:	ldr	r6, [r1]
   154f0:	add	r1, r6, r6, asr #1
   154f4:	cmp	r1, r6
   154f8:	mvnvs	r1, #-2147483648	; 0x80000000
   154fc:	cmp	r1, r3
   15500:	mov	r5, r1
   15504:	movgt	r5, r3
   15508:	cmn	r3, #1
   1550c:	movle	r5, r1
   15510:	ldr	r4, [fp, #8]
   15514:	cmn	r4, #1
   15518:	ble	15540 <sigaltstack@plt+0x3cb0>
   1551c:	cmp	r4, #0
   15520:	beq	15594 <sigaltstack@plt+0x3d04>
   15524:	cmn	r5, #1
   15528:	ble	15568 <sigaltstack@plt+0x3cd8>
   1552c:	mvn	r7, #-2147483648	; 0x80000000
   15530:	udiv	r1, r7, r4
   15534:	cmp	r1, r5
   15538:	bge	15594 <sigaltstack@plt+0x3d04>
   1553c:	b	155a4 <sigaltstack@plt+0x3d14>
   15540:	cmn	r5, #1
   15544:	ble	15584 <sigaltstack@plt+0x3cf4>
   15548:	cmn	r4, #1
   1554c:	beq	15594 <sigaltstack@plt+0x3d04>
   15550:	mov	r1, #-2147483648	; 0x80000000
   15554:	sdiv	r1, r1, r4
   15558:	mvn	r7, #-2147483648	; 0x80000000
   1555c:	cmp	r1, r5
   15560:	bge	15594 <sigaltstack@plt+0x3d04>
   15564:	b	155a4 <sigaltstack@plt+0x3d14>
   15568:	beq	15594 <sigaltstack@plt+0x3d04>
   1556c:	mov	r1, #-2147483648	; 0x80000000
   15570:	sdiv	r1, r1, r5
   15574:	mvn	r7, #-2147483648	; 0x80000000
   15578:	cmp	r1, r4
   1557c:	bge	15594 <sigaltstack@plt+0x3d04>
   15580:	b	155a4 <sigaltstack@plt+0x3d14>
   15584:	mvn	r7, #-2147483648	; 0x80000000
   15588:	sdiv	r1, r7, r4
   1558c:	cmp	r5, r1
   15590:	blt	155a4 <sigaltstack@plt+0x3d14>
   15594:	mul	r1, r5, r4
   15598:	mov	r7, #64	; 0x40
   1559c:	cmp	r1, #63	; 0x3f
   155a0:	bgt	155ac <sigaltstack@plt+0x3d1c>
   155a4:	sdiv	r5, r7, r4
   155a8:	mul	r1, r5, r4
   155ac:	cmp	r0, #0
   155b0:	moveq	r7, #0
   155b4:	streq	r7, [r8]
   155b8:	sub	r7, r5, r6
   155bc:	cmp	r7, r2
   155c0:	bge	1566c <sigaltstack@plt+0x3ddc>
   155c4:	add	r5, r6, r2
   155c8:	mov	r1, #0
   155cc:	cmp	r5, r3
   155d0:	mov	r2, #0
   155d4:	movwgt	r2, #1
   155d8:	cmn	r3, #1
   155dc:	movwgt	r1, #1
   155e0:	cmp	r5, r6
   155e4:	bvs	15654 <sigaltstack@plt+0x3dc4>
   155e8:	ands	r1, r1, r2
   155ec:	bne	15654 <sigaltstack@plt+0x3dc4>
   155f0:	cmn	r4, #1
   155f4:	ble	1561c <sigaltstack@plt+0x3d8c>
   155f8:	cmp	r4, #0
   155fc:	beq	15668 <sigaltstack@plt+0x3dd8>
   15600:	cmn	r5, #1
   15604:	ble	15640 <sigaltstack@plt+0x3db0>
   15608:	mvn	r1, #-2147483648	; 0x80000000
   1560c:	udiv	r1, r1, r4
   15610:	cmp	r1, r5
   15614:	bge	15668 <sigaltstack@plt+0x3dd8>
   15618:	b	15654 <sigaltstack@plt+0x3dc4>
   1561c:	cmn	r5, #1
   15620:	ble	15658 <sigaltstack@plt+0x3dc8>
   15624:	cmn	r4, #1
   15628:	beq	15668 <sigaltstack@plt+0x3dd8>
   1562c:	mov	r1, #-2147483648	; 0x80000000
   15630:	sdiv	r1, r1, r4
   15634:	cmp	r1, r5
   15638:	bge	15668 <sigaltstack@plt+0x3dd8>
   1563c:	b	15654 <sigaltstack@plt+0x3dc4>
   15640:	beq	15668 <sigaltstack@plt+0x3dd8>
   15644:	mov	r1, #-2147483648	; 0x80000000
   15648:	sdiv	r1, r1, r5
   1564c:	cmp	r1, r4
   15650:	bge	15668 <sigaltstack@plt+0x3dd8>
   15654:	bl	1576c <sigaltstack@plt+0x3edc>
   15658:	mvn	r1, #-2147483648	; 0x80000000
   1565c:	sdiv	r1, r1, r4
   15660:	cmp	r5, r1
   15664:	blt	15654 <sigaltstack@plt+0x3dc4>
   15668:	mul	r1, r5, r4
   1566c:	bl	15428 <sigaltstack@plt+0x3b98>
   15670:	str	r5, [r8]
   15674:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15678:	mov	r1, #1
   1567c:	b	15680 <sigaltstack@plt+0x3df0>
   15680:	push	{fp, lr}
   15684:	mov	fp, sp
   15688:	bl	158a8 <sigaltstack@plt+0x4018>
   1568c:	bl	15400 <sigaltstack@plt+0x3b70>
   15690:	pop	{fp, pc}
   15694:	mov	r1, #1
   15698:	b	1569c <sigaltstack@plt+0x3e0c>
   1569c:	push	{fp, lr}
   156a0:	mov	fp, sp
   156a4:	bl	15a6c <sigaltstack@plt+0x41dc>
   156a8:	bl	15400 <sigaltstack@plt+0x3b70>
   156ac:	pop	{fp, pc}
   156b0:	push	{r4, r5, r6, sl, fp, lr}
   156b4:	add	fp, sp, #16
   156b8:	mov	r4, r1
   156bc:	mov	r5, r0
   156c0:	mov	r0, r1
   156c4:	bl	153ec <sigaltstack@plt+0x3b5c>
   156c8:	mov	r6, r0
   156cc:	mov	r1, r5
   156d0:	mov	r2, r4
   156d4:	bl	11530 <memcpy@plt>
   156d8:	mov	r0, r6
   156dc:	pop	{r4, r5, r6, sl, fp, pc}
   156e0:	push	{r4, r5, r6, sl, fp, lr}
   156e4:	add	fp, sp, #16
   156e8:	mov	r4, r1
   156ec:	mov	r5, r0
   156f0:	mov	r0, r1
   156f4:	bl	15414 <sigaltstack@plt+0x3b84>
   156f8:	mov	r6, r0
   156fc:	mov	r1, r5
   15700:	mov	r2, r4
   15704:	bl	11530 <memcpy@plt>
   15708:	mov	r0, r6
   1570c:	pop	{r4, r5, r6, sl, fp, pc}
   15710:	push	{r4, r5, r6, sl, fp, lr}
   15714:	add	fp, sp, #16
   15718:	mov	r4, r1
   1571c:	mov	r5, r0
   15720:	add	r0, r1, #1
   15724:	bl	15414 <sigaltstack@plt+0x3b84>
   15728:	mov	r6, r0
   1572c:	mov	r0, #0
   15730:	strb	r0, [r6, r4]
   15734:	mov	r0, r6
   15738:	mov	r1, r5
   1573c:	mov	r2, r4
   15740:	bl	11530 <memcpy@plt>
   15744:	mov	r0, r6
   15748:	pop	{r4, r5, r6, sl, fp, pc}
   1574c:	push	{r4, sl, fp, lr}
   15750:	add	fp, sp, #8
   15754:	mov	r4, r0
   15758:	bl	11704 <strlen@plt>
   1575c:	add	r1, r0, #1
   15760:	mov	r0, r4
   15764:	pop	{r4, sl, fp, lr}
   15768:	b	156b0 <sigaltstack@plt+0x3e20>
   1576c:	push	{fp, lr}
   15770:	mov	fp, sp
   15774:	movw	r0, #37240	; 0x9178
   15778:	movt	r0, #2
   1577c:	ldr	r4, [r0]
   15780:	movw	r1, #35314	; 0x89f2
   15784:	movt	r1, #1
   15788:	mov	r0, #0
   1578c:	mov	r2, #5
   15790:	bl	11584 <dcgettext@plt>
   15794:	mov	r3, r0
   15798:	movw	r2, #32954	; 0x80ba
   1579c:	movt	r2, #1
   157a0:	mov	r0, r4
   157a4:	mov	r1, #0
   157a8:	bl	11650 <error@plt>
   157ac:	bl	11854 <abort@plt>
   157b0:	push	{r4, r5, fp, lr}
   157b4:	add	fp, sp, #8
   157b8:	bl	1689c <sigaltstack@plt+0x500c>
   157bc:	cmp	r0, #0
   157c0:	popeq	{r4, r5, fp, pc}
   157c4:	mov	r4, r0
   157c8:	movw	r0, #37240	; 0x9178
   157cc:	movt	r0, #2
   157d0:	ldr	r5, [r0]
   157d4:	movw	r1, #35331	; 0x8a03
   157d8:	movt	r1, #1
   157dc:	mov	r0, #0
   157e0:	mov	r2, #5
   157e4:	bl	11584 <dcgettext@plt>
   157e8:	mov	r2, r0
   157ec:	mov	r0, r5
   157f0:	mov	r1, r4
   157f4:	pop	{r4, r5, fp, lr}
   157f8:	b	11650 <error@plt>
   157fc:	push	{r4, sl, fp, lr}
   15800:	add	fp, sp, #8
   15804:	sub	sp, sp, #8
   15808:	ldr	r4, [fp, #8]
   1580c:	str	r4, [sp]
   15810:	bl	1693c <sigaltstack@plt+0x50ac>
   15814:	mov	r4, r0
   15818:	cmn	r0, #1
   1581c:	bgt	15830 <sigaltstack@plt+0x3fa0>
   15820:	bl	11740 <__errno_location@plt>
   15824:	ldr	r0, [r0]
   15828:	cmp	r0, #12
   1582c:	beq	1583c <sigaltstack@plt+0x3fac>
   15830:	mov	r0, r4
   15834:	sub	sp, fp, #8
   15838:	pop	{r4, sl, fp, pc}
   1583c:	bl	1576c <sigaltstack@plt+0x3edc>
   15840:	push	{r4, sl, fp, lr}
   15844:	add	fp, sp, #8
   15848:	bl	16bdc <sigaltstack@plt+0x534c>
   1584c:	mov	r4, r0
   15850:	cmp	r0, #0
   15854:	bne	15868 <sigaltstack@plt+0x3fd8>
   15858:	bl	11740 <__errno_location@plt>
   1585c:	ldr	r0, [r0]
   15860:	cmp	r0, #12
   15864:	beq	15870 <sigaltstack@plt+0x3fe0>
   15868:	mov	r0, r4
   1586c:	pop	{r4, sl, fp, pc}
   15870:	bl	1576c <sigaltstack@plt+0x3edc>
   15874:	push	{r4, sl, fp, lr}
   15878:	add	fp, sp, #8
   1587c:	bl	16e10 <sigaltstack@plt+0x5580>
   15880:	mov	r4, r0
   15884:	cmp	r0, #0
   15888:	bne	1589c <sigaltstack@plt+0x400c>
   1588c:	bl	11740 <__errno_location@plt>
   15890:	ldr	r0, [r0]
   15894:	cmp	r0, #12
   15898:	beq	158a4 <sigaltstack@plt+0x4014>
   1589c:	mov	r0, r4
   158a0:	pop	{r4, sl, fp, pc}
   158a4:	bl	1576c <sigaltstack@plt+0x3edc>
   158a8:	clz	r2, r1
   158ac:	lsr	r2, r2, #5
   158b0:	clz	r3, r0
   158b4:	lsr	r3, r3, #5
   158b8:	orrs	r2, r3, r2
   158bc:	movwne	r1, #1
   158c0:	movwne	r0, #1
   158c4:	cmp	r1, #0
   158c8:	beq	158f8 <sigaltstack@plt+0x4068>
   158cc:	mvn	r2, #-2147483648	; 0x80000000
   158d0:	udiv	r2, r2, r1
   158d4:	cmp	r2, r0
   158d8:	bcs	158f8 <sigaltstack@plt+0x4068>
   158dc:	push	{fp, lr}
   158e0:	mov	fp, sp
   158e4:	bl	11740 <__errno_location@plt>
   158e8:	mov	r1, #12
   158ec:	str	r1, [r0]
   158f0:	mov	r0, #0
   158f4:	pop	{fp, pc}
   158f8:	b	114a0 <calloc@plt>
   158fc:	push	{r4, r5, r6, sl, fp, lr}
   15900:	add	fp, sp, #16
   15904:	mov	r4, r0
   15908:	bl	11740 <__errno_location@plt>
   1590c:	mov	r5, r0
   15910:	ldr	r6, [r0]
   15914:	mov	r0, r4
   15918:	bl	11518 <free@plt>
   1591c:	str	r6, [r5]
   15920:	pop	{r4, r5, r6, sl, fp, pc}
   15924:	cmp	r0, #0
   15928:	movweq	r0, #1
   1592c:	cmn	r0, #1
   15930:	ble	15938 <sigaltstack@plt+0x40a8>
   15934:	b	1168c <malloc@plt>
   15938:	push	{fp, lr}
   1593c:	mov	fp, sp
   15940:	bl	11740 <__errno_location@plt>
   15944:	mov	r1, #12
   15948:	str	r1, [r0]
   1594c:	mov	r0, #0
   15950:	pop	{fp, pc}
   15954:	push	{fp, lr}
   15958:	mov	fp, sp
   1595c:	cmp	r0, #0
   15960:	beq	1597c <sigaltstack@plt+0x40ec>
   15964:	cmp	r1, #0
   15968:	beq	15988 <sigaltstack@plt+0x40f8>
   1596c:	cmn	r1, #1
   15970:	ble	15994 <sigaltstack@plt+0x4104>
   15974:	pop	{fp, lr}
   15978:	b	115b4 <realloc@plt>
   1597c:	mov	r0, r1
   15980:	pop	{fp, lr}
   15984:	b	15924 <sigaltstack@plt+0x4094>
   15988:	bl	158fc <sigaltstack@plt+0x406c>
   1598c:	mov	r0, #0
   15990:	pop	{fp, pc}
   15994:	bl	11740 <__errno_location@plt>
   15998:	mov	r1, #12
   1599c:	str	r1, [r0]
   159a0:	mov	r0, #0
   159a4:	pop	{fp, pc}
   159a8:	cmp	r2, #0
   159ac:	beq	159dc <sigaltstack@plt+0x414c>
   159b0:	mvn	r3, #0
   159b4:	udiv	r3, r3, r2
   159b8:	cmp	r3, r1
   159bc:	bcs	159dc <sigaltstack@plt+0x414c>
   159c0:	push	{fp, lr}
   159c4:	mov	fp, sp
   159c8:	bl	11740 <__errno_location@plt>
   159cc:	mov	r1, #12
   159d0:	str	r1, [r0]
   159d4:	mov	r0, #0
   159d8:	pop	{fp, pc}
   159dc:	mul	r1, r2, r1
   159e0:	b	15954 <sigaltstack@plt+0x40c4>
   159e4:	push	{r4, r5, r6, sl, fp, lr}
   159e8:	add	fp, sp, #16
   159ec:	cmp	r0, r1
   159f0:	moveq	r0, #0
   159f4:	popeq	{r4, r5, r6, sl, fp, pc}
   159f8:	mov	r4, r1
   159fc:	mov	r5, r0
   15a00:	ldrb	r0, [r5]
   15a04:	bl	17468 <sigaltstack@plt+0x5bd8>
   15a08:	mov	r6, r0
   15a0c:	ldrb	r0, [r4]
   15a10:	bl	17468 <sigaltstack@plt+0x5bd8>
   15a14:	uxtb	r1, r6
   15a18:	cmp	r1, #0
   15a1c:	beq	15a34 <sigaltstack@plt+0x41a4>
   15a20:	add	r4, r4, #1
   15a24:	add	r5, r5, #1
   15a28:	uxtb	r2, r0
   15a2c:	cmp	r1, r2
   15a30:	beq	15a00 <sigaltstack@plt+0x4170>
   15a34:	uxtb	r0, r0
   15a38:	sub	r0, r1, r0
   15a3c:	pop	{r4, r5, r6, sl, fp, pc}
   15a40:	push	{fp, lr}
   15a44:	mov	fp, sp
   15a48:	bl	11740 <__errno_location@plt>
   15a4c:	mov	r1, #12
   15a50:	str	r1, [r0]
   15a54:	mov	r0, #0
   15a58:	pop	{fp, pc}
   15a5c:	b	15924 <sigaltstack@plt+0x4094>
   15a60:	cmp	r1, #0
   15a64:	orreq	r1, r1, #1
   15a68:	b	15954 <sigaltstack@plt+0x40c4>
   15a6c:	b	158a8 <sigaltstack@plt+0x4018>
   15a70:	clz	r3, r2
   15a74:	lsr	ip, r3, #5
   15a78:	clz	r3, r1
   15a7c:	lsr	r3, r3, #5
   15a80:	orrs	r3, r3, ip
   15a84:	movwne	r1, #1
   15a88:	movwne	r2, #1
   15a8c:	b	159a8 <sigaltstack@plt+0x4118>
   15a90:	push	{fp, lr}
   15a94:	mov	fp, sp
   15a98:	mov	r0, #14
   15a9c:	bl	117e8 <nl_langinfo@plt>
   15aa0:	movw	r1, #31322	; 0x7a5a
   15aa4:	movt	r1, #1
   15aa8:	cmp	r0, #0
   15aac:	movne	r1, r0
   15ab0:	ldrb	r2, [r1]
   15ab4:	movw	r0, #35357	; 0x8a1d
   15ab8:	movt	r0, #1
   15abc:	cmp	r2, #0
   15ac0:	movne	r0, r1
   15ac4:	pop	{fp, pc}
   15ac8:	push	{r4, r5, r6, sl, fp, lr}
   15acc:	add	fp, sp, #16
   15ad0:	mov	r4, r0
   15ad4:	ldrb	r0, [r0, #16]
   15ad8:	cmp	r0, #0
   15adc:	popne	{r4, r5, r6, sl, fp, pc}
   15ae0:	ldrb	r0, [r4, #4]
   15ae4:	cmp	r0, #0
   15ae8:	bne	15b34 <sigaltstack@plt+0x42a4>
   15aec:	ldr	r0, [r4, #20]
   15af0:	ldrb	r0, [r0]
   15af4:	bl	17600 <sigaltstack@plt+0x5d70>
   15af8:	cmp	r0, #0
   15afc:	beq	15b1c <sigaltstack@plt+0x428c>
   15b00:	mov	r0, #1
   15b04:	str	r0, [r4, #24]
   15b08:	ldr	r1, [r4, #20]
   15b0c:	ldrb	r1, [r1]
   15b10:	strb	r0, [r4, #28]
   15b14:	str	r1, [r4, #32]
   15b18:	b	15bdc <sigaltstack@plt+0x434c>
   15b1c:	add	r0, r4, #8
   15b20:	bl	11554 <mbsinit@plt>
   15b24:	cmp	r0, #0
   15b28:	beq	15be8 <sigaltstack@plt+0x4358>
   15b2c:	mov	r0, #1
   15b30:	strb	r0, [r4, #4]
   15b34:	ldr	r0, [r4]
   15b38:	ldr	r1, [r4, #20]
   15b3c:	add	r6, r4, #32
   15b40:	add	r5, r4, #8
   15b44:	sub	r2, r0, r1
   15b48:	mov	r0, r6
   15b4c:	mov	r3, r5
   15b50:	bl	17104 <sigaltstack@plt+0x5874>
   15b54:	str	r0, [r4, #24]
   15b58:	cmn	r0, #2
   15b5c:	beq	15bc4 <sigaltstack@plt+0x4334>
   15b60:	cmp	r0, #0
   15b64:	beq	15b80 <sigaltstack@plt+0x42f0>
   15b68:	cmn	r0, #1
   15b6c:	bne	15ba4 <sigaltstack@plt+0x4314>
   15b70:	mov	r0, #0
   15b74:	strb	r0, [r4, #28]
   15b78:	mov	r0, #1
   15b7c:	b	15bd8 <sigaltstack@plt+0x4348>
   15b80:	mov	r0, #1
   15b84:	str	r0, [r4, #24]
   15b88:	ldr	r0, [r4, #20]
   15b8c:	ldrb	r0, [r0]
   15b90:	cmp	r0, #0
   15b94:	bne	15c08 <sigaltstack@plt+0x4378>
   15b98:	ldr	r0, [r6]
   15b9c:	cmp	r0, #0
   15ba0:	bne	15c28 <sigaltstack@plt+0x4398>
   15ba4:	mov	r0, #1
   15ba8:	strb	r0, [r4, #28]
   15bac:	mov	r0, r5
   15bb0:	bl	11554 <mbsinit@plt>
   15bb4:	cmp	r0, #0
   15bb8:	movne	r0, #0
   15bbc:	strbne	r0, [r4, #4]
   15bc0:	b	15bdc <sigaltstack@plt+0x434c>
   15bc4:	mov	r0, #0
   15bc8:	strb	r0, [r4, #28]
   15bcc:	ldr	r0, [r4]
   15bd0:	ldr	r1, [r4, #20]
   15bd4:	sub	r0, r0, r1
   15bd8:	str	r0, [r4, #24]
   15bdc:	mov	r0, #1
   15be0:	strb	r0, [r4, #16]
   15be4:	pop	{r4, r5, r6, sl, fp, pc}
   15be8:	movw	r0, #34221	; 0x85ad
   15bec:	movt	r0, #1
   15bf0:	movw	r1, #34433	; 0x8681
   15bf4:	movt	r1, #1
   15bf8:	movw	r3, #34444	; 0x868c
   15bfc:	movt	r3, #1
   15c00:	mov	r2, #135	; 0x87
   15c04:	bl	11884 <__assert_fail@plt>
   15c08:	movw	r0, #34304	; 0x8600
   15c0c:	movt	r0, #1
   15c10:	movw	r1, #34433	; 0x8681
   15c14:	movt	r1, #1
   15c18:	movw	r3, #34444	; 0x868c
   15c1c:	movt	r3, #1
   15c20:	mov	r2, #162	; 0xa2
   15c24:	bl	11884 <__assert_fail@plt>
   15c28:	movw	r0, #34327	; 0x8617
   15c2c:	movt	r0, #1
   15c30:	movw	r1, #34433	; 0x8681
   15c34:	movt	r1, #1
   15c38:	movw	r3, #34444	; 0x868c
   15c3c:	movt	r3, #1
   15c40:	mov	r2, #163	; 0xa3
   15c44:	bl	11884 <__assert_fail@plt>
   15c48:	ldr	r2, [r0]
   15c4c:	ldr	r3, [r0, #20]
   15c50:	add	r3, r3, r1
   15c54:	str	r3, [r0, #20]
   15c58:	add	r1, r2, r1
   15c5c:	str	r1, [r0]
   15c60:	bx	lr
   15c64:	ldr	r2, [r1]
   15c68:	str	r2, [r0]
   15c6c:	ldrb	r3, [r1, #4]
   15c70:	strb	r3, [r0, #4]
   15c74:	add	r2, r0, #8
   15c78:	cmp	r3, #0
   15c7c:	beq	15c90 <sigaltstack@plt+0x4400>
   15c80:	ldr	r3, [r1, #8]
   15c84:	ldr	ip, [r1, #12]
   15c88:	stm	r2, {r3, ip}
   15c8c:	b	15c9c <sigaltstack@plt+0x440c>
   15c90:	mov	r3, #0
   15c94:	str	r3, [r2]
   15c98:	str	r3, [r2, #4]
   15c9c:	ldrb	r2, [r1, #16]
   15ca0:	strb	r2, [r0, #16]
   15ca4:	add	r0, r0, #20
   15ca8:	add	r1, r1, #20
   15cac:	b	175b0 <sigaltstack@plt+0x5d20>
   15cb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15cb4:	add	fp, sp, #28
   15cb8:	sub	sp, sp, #300	; 0x12c
   15cbc:	mov	r5, r1
   15cc0:	mov	r6, r0
   15cc4:	bl	1162c <__ctype_get_mb_cur_max@plt>
   15cc8:	cmp	r0, #2
   15ccc:	bcc	1605c <sigaltstack@plt+0x47cc>
   15cd0:	mov	r4, #0
   15cd4:	str	r4, [fp, #-80]	; 0xffffffb0
   15cd8:	str	r4, [fp, #-84]	; 0xffffffac
   15cdc:	strb	r4, [fp, #-88]	; 0xffffffa8
   15ce0:	str	r5, [fp, #-72]	; 0xffffffb8
   15ce4:	strb	r4, [fp, #-76]	; 0xffffffb4
   15ce8:	sub	r0, fp, #88	; 0x58
   15cec:	bl	166bc <sigaltstack@plt+0x4e2c>
   15cf0:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   15cf4:	cmp	r0, #0
   15cf8:	beq	15d08 <sigaltstack@plt+0x4478>
   15cfc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15d00:	cmp	r0, #0
   15d04:	beq	1615c <sigaltstack@plt+0x48cc>
   15d08:	str	r4, [fp, #-136]	; 0xffffff78
   15d0c:	str	r4, [fp, #-140]	; 0xffffff74
   15d10:	str	r4, [sp, #136]	; 0x88
   15d14:	str	r4, [sp, #132]	; 0x84
   15d18:	strb	r4, [fp, #-144]	; 0xffffff70
   15d1c:	str	r5, [fp, #-128]	; 0xffffff80
   15d20:	strb	r4, [fp, #-132]	; 0xffffff7c
   15d24:	str	r6, [sp, #144]	; 0x90
   15d28:	strb	r4, [sp, #128]	; 0x80
   15d2c:	strb	r4, [sp, #140]	; 0x8c
   15d30:	add	r7, sp, #128	; 0x80
   15d34:	mov	r0, r7
   15d38:	bl	166bc <sigaltstack@plt+0x4e2c>
   15d3c:	ldrb	r0, [sp, #152]	; 0x98
   15d40:	cmp	r0, #0
   15d44:	beq	15d54 <sigaltstack@plt+0x44c4>
   15d48:	ldr	r0, [sp, #156]	; 0x9c
   15d4c:	cmp	r0, #0
   15d50:	beq	16168 <sigaltstack@plt+0x48d8>
   15d54:	add	r0, sp, #16
   15d58:	add	r0, r0, #4
   15d5c:	str	r0, [sp, #4]
   15d60:	mov	r0, #1
   15d64:	str	r0, [sp, #8]
   15d68:	mov	r8, #0
   15d6c:	add	r0, r7, #16
   15d70:	str	r0, [sp]
   15d74:	mov	r0, #0
   15d78:	str	r0, [sp, #12]
   15d7c:	mov	sl, #0
   15d80:	mov	r9, #0
   15d84:	mov	r4, sl
   15d88:	add	r0, r9, r9, lsl #2
   15d8c:	cmp	sl, r0
   15d90:	bcc	15e50 <sigaltstack@plt+0x45c0>
   15d94:	ldr	r0, [sp, #8]
   15d98:	tst	r0, #1
   15d9c:	beq	15e50 <sigaltstack@plt+0x45c0>
   15da0:	cmp	r9, #10
   15da4:	bcc	15e50 <sigaltstack@plt+0x45c0>
   15da8:	mov	sl, r7
   15dac:	ldr	r1, [sp, #12]
   15db0:	subs	r0, r4, r1
   15db4:	beq	15df8 <sigaltstack@plt+0x4568>
   15db8:	sub	r7, r1, r4
   15dbc:	sub	r0, fp, #144	; 0x90
   15dc0:	bl	166bc <sigaltstack@plt+0x4e2c>
   15dc4:	ldrb	r0, [fp, #-120]	; 0xffffff88
   15dc8:	cmp	r0, #0
   15dcc:	beq	15ddc <sigaltstack@plt+0x454c>
   15dd0:	ldr	r0, [fp, #-116]	; 0xffffff8c
   15dd4:	cmp	r0, #0
   15dd8:	beq	15df8 <sigaltstack@plt+0x4568>
   15ddc:	strb	r8, [fp, #-132]	; 0xffffff7c
   15de0:	ldr	r0, [fp, #-128]	; 0xffffff80
   15de4:	ldr	r1, [fp, #-124]	; 0xffffff84
   15de8:	add	r0, r0, r1
   15dec:	str	r0, [fp, #-128]	; 0xffffff80
   15df0:	adds	r7, r7, #1
   15df4:	bne	15dbc <sigaltstack@plt+0x452c>
   15df8:	sub	r0, fp, #144	; 0x90
   15dfc:	bl	166bc <sigaltstack@plt+0x4e2c>
   15e00:	ldrb	r0, [fp, #-120]	; 0xffffff88
   15e04:	cmp	r0, #0
   15e08:	beq	15e48 <sigaltstack@plt+0x45b8>
   15e0c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   15e10:	cmp	r0, #0
   15e14:	str	r4, [sp, #12]
   15e18:	mov	r7, sl
   15e1c:	bne	15e50 <sigaltstack@plt+0x45c0>
   15e20:	mov	r0, r6
   15e24:	mov	r1, r5
   15e28:	add	r2, sp, #72	; 0x48
   15e2c:	bl	16190 <sigaltstack@plt+0x4900>
   15e30:	mov	r1, #0
   15e34:	str	r1, [sp, #8]
   15e38:	cmp	r0, #0
   15e3c:	str	r4, [sp, #12]
   15e40:	beq	15e50 <sigaltstack@plt+0x45c0>
   15e44:	b	16184 <sigaltstack@plt+0x48f4>
   15e48:	str	r4, [sp, #12]
   15e4c:	mov	r7, sl
   15e50:	add	sl, r4, #1
   15e54:	ldrb	r0, [sp, #152]	; 0x98
   15e58:	cmp	r0, #0
   15e5c:	ldrbne	r0, [fp, #-64]	; 0xffffffc0
   15e60:	cmpne	r0, #0
   15e64:	bne	15e90 <sigaltstack@plt+0x4600>
   15e68:	ldr	r2, [sp, #148]	; 0x94
   15e6c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15e70:	cmp	r2, r0
   15e74:	bne	1601c <sigaltstack@plt+0x478c>
   15e78:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15e7c:	ldr	r0, [sp, #144]	; 0x90
   15e80:	bl	11578 <memcmp@plt>
   15e84:	cmp	r0, #0
   15e88:	bne	1601c <sigaltstack@plt+0x478c>
   15e8c:	b	15ea0 <sigaltstack@plt+0x4610>
   15e90:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15e94:	ldr	r1, [sp, #156]	; 0x9c
   15e98:	cmp	r1, r0
   15e9c:	bne	1601c <sigaltstack@plt+0x478c>
   15ea0:	mov	r0, r7
   15ea4:	mov	r1, #48	; 0x30
   15ea8:	vld1.64	{d16-d17}, [r0], r1
   15eac:	ldr	r1, [sp]
   15eb0:	vld1.64	{d18-d19}, [r1]
   15eb4:	add	r3, sp, #72	; 0x48
   15eb8:	add	r1, r3, #16
   15ebc:	add	r2, r7, #32
   15ec0:	vld1.64	{d20-d21}, [r2]
   15ec4:	vldr	d22, [r0]
   15ec8:	vst1.64	{d18-d19}, [r1]
   15ecc:	add	r0, r3, #32
   15ed0:	vst1.64	{d20-d21}, [r0]
   15ed4:	mov	r0, r3
   15ed8:	mov	r1, #12
   15edc:	vst1.64	{d16-d17}, [r0], r1
   15ee0:	strb	r8, [r0]
   15ee4:	str	r5, [sp, #32]
   15ee8:	strb	r8, [sp, #16]
   15eec:	vstr	d22, [sp, #120]	; 0x78
   15ef0:	ldr	r0, [sp, #88]	; 0x58
   15ef4:	ldr	r1, [sp, #92]	; 0x5c
   15ef8:	add	r0, r0, r1
   15efc:	str	r0, [sp, #88]	; 0x58
   15f00:	ldr	r0, [sp, #4]
   15f04:	str	r8, [r0]
   15f08:	str	r8, [r0, #4]
   15f0c:	strb	r8, [sp, #28]
   15f10:	add	r0, sp, #16
   15f14:	bl	166bc <sigaltstack@plt+0x4e2c>
   15f18:	ldrb	r0, [sp, #40]	; 0x28
   15f1c:	cmp	r0, #0
   15f20:	beq	15f30 <sigaltstack@plt+0x46a0>
   15f24:	ldr	r0, [sp, #44]	; 0x2c
   15f28:	cmp	r0, #0
   15f2c:	beq	1618c <sigaltstack@plt+0x48fc>
   15f30:	strb	r8, [sp, #28]
   15f34:	ldr	r0, [sp, #32]
   15f38:	ldr	r1, [sp, #36]	; 0x24
   15f3c:	add	r0, r0, r1
   15f40:	str	r0, [sp, #32]
   15f44:	add	r0, sp, #16
   15f48:	bl	166bc <sigaltstack@plt+0x4e2c>
   15f4c:	ldrb	r0, [sp, #40]	; 0x28
   15f50:	cmp	r0, #0
   15f54:	beq	15f64 <sigaltstack@plt+0x46d4>
   15f58:	ldr	r0, [sp, #44]	; 0x2c
   15f5c:	cmp	r0, #0
   15f60:	beq	16174 <sigaltstack@plt+0x48e4>
   15f64:	add	sl, r4, #2
   15f68:	add	r0, sp, #72	; 0x48
   15f6c:	bl	166bc <sigaltstack@plt+0x4e2c>
   15f70:	ldr	r0, [sp, #100]	; 0x64
   15f74:	ldrb	r1, [sp, #96]	; 0x60
   15f78:	cmp	r0, #0
   15f7c:	bne	15f88 <sigaltstack@plt+0x46f8>
   15f80:	cmp	r1, #0
   15f84:	bne	16164 <sigaltstack@plt+0x48d4>
   15f88:	cmp	r1, #0
   15f8c:	ldrbne	r1, [sp, #40]	; 0x28
   15f90:	cmpne	r1, #0
   15f94:	bne	15fc0 <sigaltstack@plt+0x4730>
   15f98:	ldr	r2, [sp, #92]	; 0x5c
   15f9c:	ldr	r0, [sp, #36]	; 0x24
   15fa0:	cmp	r2, r0
   15fa4:	bne	1601c <sigaltstack@plt+0x478c>
   15fa8:	ldr	r1, [sp, #32]
   15fac:	ldr	r0, [sp, #88]	; 0x58
   15fb0:	bl	11578 <memcmp@plt>
   15fb4:	cmp	r0, #0
   15fb8:	beq	15fcc <sigaltstack@plt+0x473c>
   15fbc:	b	1601c <sigaltstack@plt+0x478c>
   15fc0:	ldr	r1, [sp, #44]	; 0x2c
   15fc4:	cmp	r0, r1
   15fc8:	bne	1601c <sigaltstack@plt+0x478c>
   15fcc:	strb	r8, [sp, #84]	; 0x54
   15fd0:	strb	r8, [sp, #28]
   15fd4:	ldr	r0, [sp, #88]	; 0x58
   15fd8:	ldr	r1, [sp, #92]	; 0x5c
   15fdc:	add	r0, r0, r1
   15fe0:	str	r0, [sp, #88]	; 0x58
   15fe4:	ldr	r0, [sp, #32]
   15fe8:	ldr	r1, [sp, #36]	; 0x24
   15fec:	add	r0, r0, r1
   15ff0:	str	r0, [sp, #32]
   15ff4:	add	r0, sp, #16
   15ff8:	bl	166bc <sigaltstack@plt+0x4e2c>
   15ffc:	add	sl, sl, #1
   16000:	ldrb	r0, [sp, #40]	; 0x28
   16004:	cmp	r0, #0
   16008:	beq	15f68 <sigaltstack@plt+0x46d8>
   1600c:	ldr	r0, [sp, #44]	; 0x2c
   16010:	cmp	r0, #0
   16014:	bne	15f68 <sigaltstack@plt+0x46d8>
   16018:	b	16174 <sigaltstack@plt+0x48e4>
   1601c:	add	r9, r9, #1
   16020:	mov	r4, #0
   16024:	strb	r4, [sp, #140]	; 0x8c
   16028:	ldr	r0, [sp, #144]	; 0x90
   1602c:	ldr	r1, [sp, #148]	; 0x94
   16030:	add	r0, r0, r1
   16034:	str	r0, [sp, #144]	; 0x90
   16038:	mov	r0, r7
   1603c:	bl	166bc <sigaltstack@plt+0x4e2c>
   16040:	ldrb	r0, [sp, #152]	; 0x98
   16044:	cmp	r0, #0
   16048:	beq	15d84 <sigaltstack@plt+0x44f4>
   1604c:	ldr	r0, [sp, #156]	; 0x9c
   16050:	cmp	r0, #0
   16054:	bne	15d84 <sigaltstack@plt+0x44f4>
   16058:	b	16168 <sigaltstack@plt+0x48d8>
   1605c:	ldrb	r9, [r5]
   16060:	cmp	r9, #0
   16064:	beq	1615c <sigaltstack@plt+0x48cc>
   16068:	ldrb	r0, [r6]
   1606c:	cmp	r0, #0
   16070:	beq	16164 <sigaltstack@plt+0x48d4>
   16074:	mov	r3, #1
   16078:	mov	ip, #0
   1607c:	mov	sl, r5
   16080:	mov	r7, #0
   16084:	mov	r8, #0
   16088:	add	r0, r8, r8, lsl #2
   1608c:	cmp	r7, r0
   16090:	bcc	16104 <sigaltstack@plt+0x4874>
   16094:	tst	r3, #1
   16098:	beq	16104 <sigaltstack@plt+0x4874>
   1609c:	cmp	r8, #10
   160a0:	bcc	16104 <sigaltstack@plt+0x4874>
   160a4:	cmp	sl, #0
   160a8:	beq	160d0 <sigaltstack@plt+0x4840>
   160ac:	sub	r1, r7, ip
   160b0:	mov	r0, sl
   160b4:	mov	r4, r3
   160b8:	bl	11788 <strnlen@plt>
   160bc:	mov	r3, r4
   160c0:	ldrb	r0, [sl, r0]!
   160c4:	cmp	r0, #0
   160c8:	mov	ip, r7
   160cc:	bne	16104 <sigaltstack@plt+0x4874>
   160d0:	mov	r0, r5
   160d4:	mov	r4, ip
   160d8:	bl	11704 <strlen@plt>
   160dc:	mov	r2, r0
   160e0:	mov	r0, r6
   160e4:	mov	r1, r5
   160e8:	sub	r3, fp, #88	; 0x58
   160ec:	bl	16564 <sigaltstack@plt+0x4cd4>
   160f0:	mov	ip, r4
   160f4:	mov	r3, #0
   160f8:	cmp	r0, #0
   160fc:	mov	sl, #0
   16100:	bne	1617c <sigaltstack@plt+0x48ec>
   16104:	ldrb	r0, [r6]
   16108:	cmp	r0, r9
   1610c:	bne	16140 <sigaltstack@plt+0x48b0>
   16110:	mov	r0, #1
   16114:	ldrb	r1, [r5, r0]
   16118:	cmp	r1, #0
   1611c:	beq	1615c <sigaltstack@plt+0x48cc>
   16120:	ldrb	r2, [r6, r0]
   16124:	cmp	r2, #0
   16128:	beq	16164 <sigaltstack@plt+0x48d4>
   1612c:	add	r0, r0, #1
   16130:	cmp	r2, r1
   16134:	beq	16114 <sigaltstack@plt+0x4884>
   16138:	add	r7, r7, r0
   1613c:	b	16144 <sigaltstack@plt+0x48b4>
   16140:	add	r7, r7, #1
   16144:	add	r8, r8, #1
   16148:	ldrb	r0, [r6, #1]!
   1614c:	mov	r4, #0
   16150:	cmp	r0, #0
   16154:	bne	16088 <sigaltstack@plt+0x47f8>
   16158:	b	16168 <sigaltstack@plt+0x48d8>
   1615c:	mov	r4, r6
   16160:	b	16168 <sigaltstack@plt+0x48d8>
   16164:	mov	r4, #0
   16168:	mov	r0, r4
   1616c:	sub	sp, fp, #28
   16170:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16174:	ldr	r4, [sp, #144]	; 0x90
   16178:	b	16168 <sigaltstack@plt+0x48d8>
   1617c:	ldr	r4, [fp, #-88]	; 0xffffffa8
   16180:	b	16168 <sigaltstack@plt+0x48d8>
   16184:	ldr	r4, [sp, #72]	; 0x48
   16188:	b	16168 <sigaltstack@plt+0x48d8>
   1618c:	bl	11854 <abort@plt>
   16190:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16194:	add	fp, sp, #28
   16198:	sub	sp, sp, #132	; 0x84
   1619c:	mov	r5, r2
   161a0:	mov	r4, r1
   161a4:	mov	r8, r0
   161a8:	mov	r0, r1
   161ac:	bl	17628 <sigaltstack@plt+0x5d98>
   161b0:	mov	r6, r0
   161b4:	mov	r7, #0
   161b8:	movw	r0, #47662	; 0xba2e
   161bc:	movt	r0, #744	; 0x2e8
   161c0:	cmp	r6, r0
   161c4:	bhi	16554 <sigaltstack@plt+0x4cc4>
   161c8:	mov	r0, #44	; 0x2c
   161cc:	mul	r0, r6, r0
   161d0:	cmp	r0, #4016	; 0xfb0
   161d4:	bhi	161fc <sigaltstack@plt+0x496c>
   161d8:	add	r0, r0, #22
   161dc:	bic	r0, r0, #7
   161e0:	sub	r0, sp, r0
   161e4:	add	r1, r0, #15
   161e8:	bic	sl, r1, #15
   161ec:	mov	sp, r0
   161f0:	cmp	sl, #0
   161f4:	bne	1620c <sigaltstack@plt+0x497c>
   161f8:	b	16554 <sigaltstack@plt+0x4cc4>
   161fc:	bl	174ec <sigaltstack@plt+0x5c5c>
   16200:	mov	sl, r0
   16204:	cmp	sl, #0
   16208:	beq	16554 <sigaltstack@plt+0x4cc4>
   1620c:	str	r5, [fp, #-156]	; 0xffffff64
   16210:	mov	r9, #0
   16214:	str	r9, [fp, #-80]	; 0xffffffb0
   16218:	str	r9, [fp, #-84]	; 0xffffffac
   1621c:	strb	r9, [fp, #-88]	; 0xffffffa8
   16220:	str	r4, [fp, #-72]	; 0xffffffb8
   16224:	strb	r9, [fp, #-76]	; 0xffffffb4
   16228:	sub	r4, fp, #88	; 0x58
   1622c:	mov	r0, r4
   16230:	bl	166bc <sigaltstack@plt+0x4e2c>
   16234:	add	r0, r6, r6, lsl #2
   16238:	add	r0, sl, r0, lsl #3
   1623c:	str	r0, [fp, #-148]	; 0xffffff6c
   16240:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   16244:	cmp	r0, #0
   16248:	beq	16258 <sigaltstack@plt+0x49c8>
   1624c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16250:	cmp	r0, #0
   16254:	beq	162a8 <sigaltstack@plt+0x4a18>
   16258:	add	r4, r4, #16
   1625c:	sub	r7, fp, #88	; 0x58
   16260:	mov	r5, sl
   16264:	mov	r0, r5
   16268:	mov	r1, r4
   1626c:	bl	175b0 <sigaltstack@plt+0x5d20>
   16270:	strb	r9, [fp, #-76]	; 0xffffffb4
   16274:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16278:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1627c:	add	r0, r0, r1
   16280:	str	r0, [fp, #-72]	; 0xffffffb8
   16284:	mov	r0, r7
   16288:	bl	166bc <sigaltstack@plt+0x4e2c>
   1628c:	add	r5, r5, #40	; 0x28
   16290:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16294:	ldrb	r1, [fp, #-64]	; 0xffffffc0
   16298:	cmp	r1, #0
   1629c:	beq	16264 <sigaltstack@plt+0x49d4>
   162a0:	cmp	r0, #0
   162a4:	bne	16264 <sigaltstack@plt+0x49d4>
   162a8:	str	r8, [fp, #-160]	; 0xffffff60
   162ac:	mov	r0, #1
   162b0:	ldr	r3, [fp, #-148]	; 0xffffff6c
   162b4:	str	r0, [r3, #4]
   162b8:	str	r6, [fp, #-152]	; 0xffffff68
   162bc:	cmp	r6, #3
   162c0:	bcc	16388 <sigaltstack@plt+0x4af8>
   162c4:	mov	r4, #2
   162c8:	mov	r5, #0
   162cc:	add	r0, r4, r4, lsl #2
   162d0:	add	r0, sl, r0, lsl #3
   162d4:	sub	r7, r0, #28
   162d8:	sub	r9, r0, #40	; 0x28
   162dc:	sub	r6, r0, #36	; 0x24
   162e0:	ldrb	r8, [r0, #-32]	; 0xffffffe0
   162e4:	cmp	r8, #0
   162e8:	bne	16300 <sigaltstack@plt+0x4a70>
   162ec:	b	16328 <sigaltstack@plt+0x4a98>
   162f0:	ldr	r0, [r3, r5, lsl #2]
   162f4:	sub	r5, r5, r0
   162f8:	cmp	r8, #0
   162fc:	beq	16328 <sigaltstack@plt+0x4a98>
   16300:	add	r0, r5, r5, lsl #2
   16304:	add	r0, sl, r0, lsl #3
   16308:	ldrb	r1, [r0, #8]
   1630c:	cmp	r1, #0
   16310:	beq	16328 <sigaltstack@plt+0x4a98>
   16314:	ldr	r0, [r0, #12]
   16318:	ldr	r1, [r7]
   1631c:	cmp	r1, r0
   16320:	bne	16358 <sigaltstack@plt+0x4ac8>
   16324:	b	1636c <sigaltstack@plt+0x4adc>
   16328:	add	r0, r5, r5, lsl #2
   1632c:	add	r1, sl, r0, lsl #3
   16330:	ldr	r1, [r1, #4]
   16334:	ldr	r2, [r6]
   16338:	cmp	r2, r1
   1633c:	bne	16358 <sigaltstack@plt+0x4ac8>
   16340:	ldr	r1, [sl, r0, lsl #3]
   16344:	ldr	r0, [r9]
   16348:	bl	11578 <memcmp@plt>
   1634c:	ldr	r3, [fp, #-148]	; 0xffffff6c
   16350:	cmp	r0, #0
   16354:	beq	1636c <sigaltstack@plt+0x4adc>
   16358:	cmp	r5, #0
   1635c:	bne	162f0 <sigaltstack@plt+0x4a60>
   16360:	mov	r5, #0
   16364:	mov	r0, r4
   16368:	b	16374 <sigaltstack@plt+0x4ae4>
   1636c:	add	r5, r5, #1
   16370:	sub	r0, r4, r5
   16374:	str	r0, [r3, r4, lsl #2]
   16378:	add	r4, r4, #1
   1637c:	ldr	r0, [fp, #-152]	; 0xffffff68
   16380:	cmp	r4, r0
   16384:	bne	162cc <sigaltstack@plt+0x4a3c>
   16388:	mov	r5, #0
   1638c:	ldr	r8, [fp, #-156]	; 0xffffff64
   16390:	str	r5, [r8]
   16394:	str	r5, [fp, #-80]	; 0xffffffb0
   16398:	str	r5, [fp, #-84]	; 0xffffffac
   1639c:	str	r5, [fp, #-136]	; 0xffffff78
   163a0:	str	r5, [fp, #-140]	; 0xffffff74
   163a4:	strb	r5, [fp, #-88]	; 0xffffffa8
   163a8:	ldr	r0, [fp, #-160]	; 0xffffff60
   163ac:	str	r0, [fp, #-72]	; 0xffffffb8
   163b0:	strb	r5, [fp, #-76]	; 0xffffffb4
   163b4:	str	r0, [fp, #-128]	; 0xffffff80
   163b8:	strb	r5, [fp, #-144]	; 0xffffff70
   163bc:	strb	r5, [fp, #-132]	; 0xffffff7c
   163c0:	sub	r0, fp, #144	; 0x90
   163c4:	bl	166bc <sigaltstack@plt+0x4e2c>
   163c8:	ldrb	r1, [fp, #-120]	; 0xffffff88
   163cc:	ldr	r0, [fp, #-116]	; 0xffffff8c
   163d0:	cmp	r0, #0
   163d4:	bne	163e0 <sigaltstack@plt+0x4b50>
   163d8:	cmp	r1, #0
   163dc:	bne	16548 <sigaltstack@plt+0x4cb8>
   163e0:	clz	r1, r1
   163e4:	lsr	r1, r1, #5
   163e8:	sub	r9, fp, #144	; 0x90
   163ec:	sub	r4, fp, #88	; 0x58
   163f0:	mov	r7, #0
   163f4:	add	r3, r7, r7, lsl #2
   163f8:	add	r2, sl, r3, lsl #3
   163fc:	tst	r1, #1
   16400:	bne	16420 <sigaltstack@plt+0x4b90>
   16404:	ldrb	r1, [r2, #8]
   16408:	cmp	r1, #0
   1640c:	beq	16420 <sigaltstack@plt+0x4b90>
   16410:	ldr	r1, [r2, #12]
   16414:	cmp	r1, r0
   16418:	bne	16444 <sigaltstack@plt+0x4bb4>
   1641c:	b	164a0 <sigaltstack@plt+0x4c10>
   16420:	ldr	r2, [r2, #4]
   16424:	ldr	r0, [fp, #-124]	; 0xffffff84
   16428:	cmp	r2, r0
   1642c:	bne	16444 <sigaltstack@plt+0x4bb4>
   16430:	ldr	r0, [sl, r3, lsl #3]
   16434:	ldr	r1, [fp, #-128]	; 0xffffff80
   16438:	bl	11578 <memcmp@plt>
   1643c:	cmp	r0, #0
   16440:	beq	164a0 <sigaltstack@plt+0x4c10>
   16444:	cmp	r7, #0
   16448:	beq	164c8 <sigaltstack@plt+0x4c38>
   1644c:	ldr	r0, [fp, #-148]	; 0xffffff6c
   16450:	ldr	r6, [r0, r7, lsl #2]
   16454:	sub	r7, r7, r6
   16458:	cmp	r6, #0
   1645c:	beq	16514 <sigaltstack@plt+0x4c84>
   16460:	mov	r0, r4
   16464:	bl	166bc <sigaltstack@plt+0x4e2c>
   16468:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   1646c:	cmp	r0, #0
   16470:	beq	16480 <sigaltstack@plt+0x4bf0>
   16474:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16478:	cmp	r0, #0
   1647c:	beq	16560 <sigaltstack@plt+0x4cd0>
   16480:	strb	r5, [fp, #-76]	; 0xffffffb4
   16484:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16488:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1648c:	add	r0, r0, r1
   16490:	str	r0, [fp, #-72]	; 0xffffffb8
   16494:	subs	r6, r6, #1
   16498:	bne	16460 <sigaltstack@plt+0x4bd0>
   1649c:	b	16514 <sigaltstack@plt+0x4c84>
   164a0:	strb	r5, [fp, #-132]	; 0xffffff7c
   164a4:	ldr	r0, [fp, #-128]	; 0xffffff80
   164a8:	ldr	r1, [fp, #-124]	; 0xffffff84
   164ac:	add	r0, r0, r1
   164b0:	str	r0, [fp, #-128]	; 0xffffff80
   164b4:	add	r7, r7, #1
   164b8:	ldr	r0, [fp, #-152]	; 0xffffff68
   164bc:	cmp	r7, r0
   164c0:	bne	16514 <sigaltstack@plt+0x4c84>
   164c4:	b	16540 <sigaltstack@plt+0x4cb0>
   164c8:	mov	r0, r4
   164cc:	bl	166bc <sigaltstack@plt+0x4e2c>
   164d0:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   164d4:	cmp	r0, #0
   164d8:	beq	164e8 <sigaltstack@plt+0x4c58>
   164dc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   164e0:	cmp	r0, #0
   164e4:	beq	16560 <sigaltstack@plt+0x4cd0>
   164e8:	mov	r7, #0
   164ec:	strb	r7, [fp, #-76]	; 0xffffffb4
   164f0:	strb	r7, [fp, #-132]	; 0xffffff7c
   164f4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   164f8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   164fc:	add	r0, r0, r1
   16500:	str	r0, [fp, #-72]	; 0xffffffb8
   16504:	ldr	r0, [fp, #-128]	; 0xffffff80
   16508:	ldr	r1, [fp, #-124]	; 0xffffff84
   1650c:	add	r0, r0, r1
   16510:	str	r0, [fp, #-128]	; 0xffffff80
   16514:	mov	r0, r9
   16518:	bl	166bc <sigaltstack@plt+0x4e2c>
   1651c:	ldrb	r2, [fp, #-120]	; 0xffffff88
   16520:	clz	r0, r2
   16524:	lsr	r1, r0, #5
   16528:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1652c:	cmp	r0, #0
   16530:	bne	163f4 <sigaltstack@plt+0x4b64>
   16534:	cmp	r2, #0
   16538:	beq	163f4 <sigaltstack@plt+0x4b64>
   1653c:	b	16548 <sigaltstack@plt+0x4cb8>
   16540:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16544:	str	r0, [r8]
   16548:	mov	r0, sl
   1654c:	bl	1755c <sigaltstack@plt+0x5ccc>
   16550:	mov	r7, #1
   16554:	mov	r0, r7
   16558:	sub	sp, fp, #28
   1655c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16560:	bl	11854 <abort@plt>
   16564:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16568:	add	fp, sp, #24
   1656c:	mov	r4, #0
   16570:	cmn	r2, #-536870911	; 0xe0000001
   16574:	bhi	166b0 <sigaltstack@plt+0x4e20>
   16578:	mov	r8, r3
   1657c:	mov	r5, r2
   16580:	mov	r6, r1
   16584:	mov	r7, r0
   16588:	lsl	r0, r2, #2
   1658c:	cmp	r0, #4016	; 0xfb0
   16590:	bhi	165b8 <sigaltstack@plt+0x4d28>
   16594:	add	r0, r0, #22
   16598:	bic	r0, r0, #7
   1659c:	sub	r1, sp, r0
   165a0:	add	r0, r1, #15
   165a4:	bic	r0, r0, #15
   165a8:	mov	sp, r1
   165ac:	cmp	r0, #0
   165b0:	bne	165c4 <sigaltstack@plt+0x4d34>
   165b4:	b	166b0 <sigaltstack@plt+0x4e20>
   165b8:	bl	174ec <sigaltstack@plt+0x5c5c>
   165bc:	cmp	r0, #0
   165c0:	beq	166b0 <sigaltstack@plt+0x4e20>
   165c4:	mov	r1, #1
   165c8:	str	r1, [r0, #4]
   165cc:	cmp	r5, #3
   165d0:	bcc	16634 <sigaltstack@plt+0x4da4>
   165d4:	mov	r1, #2
   165d8:	mov	r2, #0
   165dc:	ldrb	r4, [r6, r2]
   165e0:	add	r3, r6, r1
   165e4:	ldrb	r3, [r3, #-1]
   165e8:	cmp	r3, r4
   165ec:	bne	16608 <sigaltstack@plt+0x4d78>
   165f0:	b	1661c <sigaltstack@plt+0x4d8c>
   165f4:	ldr	r4, [r0, r2, lsl #2]
   165f8:	sub	r2, r2, r4
   165fc:	ldrb	r4, [r6, r2]
   16600:	cmp	r3, r4
   16604:	beq	1661c <sigaltstack@plt+0x4d8c>
   16608:	cmp	r2, #0
   1660c:	bne	165f4 <sigaltstack@plt+0x4d64>
   16610:	mov	r2, #0
   16614:	mov	r3, r1
   16618:	b	16624 <sigaltstack@plt+0x4d94>
   1661c:	add	r2, r2, #1
   16620:	sub	r3, r1, r2
   16624:	str	r3, [r0, r1, lsl #2]
   16628:	add	r1, r1, #1
   1662c:	cmp	r1, r5
   16630:	bne	165dc <sigaltstack@plt+0x4d4c>
   16634:	mov	r1, #0
   16638:	str	r1, [r8]
   1663c:	ldrb	r3, [r7]
   16640:	cmp	r3, #0
   16644:	beq	166a8 <sigaltstack@plt+0x4e18>
   16648:	mov	r2, r7
   1664c:	ldrb	r4, [r6, r1]
   16650:	uxtb	r3, r3
   16654:	cmp	r4, r3
   16658:	bne	16670 <sigaltstack@plt+0x4de0>
   1665c:	add	r1, r1, #1
   16660:	cmp	r1, r5
   16664:	beq	166a4 <sigaltstack@plt+0x4e14>
   16668:	add	r7, r7, #1
   1666c:	b	16694 <sigaltstack@plt+0x4e04>
   16670:	cmp	r1, #0
   16674:	beq	16688 <sigaltstack@plt+0x4df8>
   16678:	ldr	r3, [r0, r1, lsl #2]
   1667c:	sub	r1, r1, r3
   16680:	add	r2, r2, r3
   16684:	b	16694 <sigaltstack@plt+0x4e04>
   16688:	add	r7, r7, #1
   1668c:	add	r2, r2, #1
   16690:	mov	r1, #0
   16694:	ldrb	r3, [r7]
   16698:	cmp	r3, #0
   1669c:	bne	1664c <sigaltstack@plt+0x4dbc>
   166a0:	b	166a8 <sigaltstack@plt+0x4e18>
   166a4:	str	r2, [r8]
   166a8:	bl	1755c <sigaltstack@plt+0x5ccc>
   166ac:	mov	r4, #1
   166b0:	mov	r0, r4
   166b4:	sub	sp, fp, #24
   166b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   166bc:	push	{r4, r5, r6, r7, fp, lr}
   166c0:	add	fp, sp, #16
   166c4:	mov	r4, r0
   166c8:	ldrb	r0, [r0, #12]
   166cc:	cmp	r0, #0
   166d0:	popne	{r4, r5, r6, r7, fp, pc}
   166d4:	ldrb	r0, [r4]
   166d8:	cmp	r0, #0
   166dc:	bne	16728 <sigaltstack@plt+0x4e98>
   166e0:	ldr	r0, [r4, #16]
   166e4:	ldrb	r0, [r0]
   166e8:	bl	17600 <sigaltstack@plt+0x5d70>
   166ec:	cmp	r0, #0
   166f0:	beq	16710 <sigaltstack@plt+0x4e80>
   166f4:	mov	r0, #1
   166f8:	str	r0, [r4, #20]
   166fc:	ldr	r1, [r4, #16]
   16700:	ldrb	r1, [r1]
   16704:	strb	r0, [r4, #24]
   16708:	str	r1, [r4, #28]
   1670c:	b	167e0 <sigaltstack@plt+0x4f50>
   16710:	add	r0, r4, #4
   16714:	bl	11554 <mbsinit@plt>
   16718:	cmp	r0, #0
   1671c:	beq	167ec <sigaltstack@plt+0x4f5c>
   16720:	mov	r0, #1
   16724:	strb	r0, [r4]
   16728:	ldr	r7, [r4, #16]
   1672c:	bl	1162c <__ctype_get_mb_cur_max@plt>
   16730:	mov	r1, r0
   16734:	mov	r0, r7
   16738:	bl	16ef0 <sigaltstack@plt+0x5660>
   1673c:	mov	r2, r0
   16740:	add	r6, r4, #28
   16744:	add	r5, r4, #4
   16748:	mov	r0, r6
   1674c:	mov	r1, r7
   16750:	mov	r3, r5
   16754:	bl	17104 <sigaltstack@plt+0x5874>
   16758:	str	r0, [r4, #20]
   1675c:	cmn	r0, #2
   16760:	beq	167cc <sigaltstack@plt+0x4f3c>
   16764:	cmp	r0, #0
   16768:	beq	16788 <sigaltstack@plt+0x4ef8>
   1676c:	cmn	r0, #1
   16770:	bne	167ac <sigaltstack@plt+0x4f1c>
   16774:	mov	r0, #0
   16778:	strb	r0, [r4, #24]
   1677c:	mov	r0, #1
   16780:	str	r0, [r4, #20]
   16784:	b	167e0 <sigaltstack@plt+0x4f50>
   16788:	mov	r0, #1
   1678c:	str	r0, [r4, #20]
   16790:	ldr	r0, [r4, #16]
   16794:	ldrb	r0, [r0]
   16798:	cmp	r0, #0
   1679c:	bne	1680c <sigaltstack@plt+0x4f7c>
   167a0:	ldr	r0, [r6]
   167a4:	cmp	r0, #0
   167a8:	bne	1682c <sigaltstack@plt+0x4f9c>
   167ac:	mov	r0, #1
   167b0:	strb	r0, [r4, #24]
   167b4:	mov	r0, r5
   167b8:	bl	11554 <mbsinit@plt>
   167bc:	cmp	r0, #0
   167c0:	movne	r0, #0
   167c4:	strbne	r0, [r4]
   167c8:	b	167e0 <sigaltstack@plt+0x4f50>
   167cc:	ldr	r0, [r4, #16]
   167d0:	bl	11704 <strlen@plt>
   167d4:	str	r0, [r4, #20]
   167d8:	mov	r0, #0
   167dc:	strb	r0, [r4, #24]
   167e0:	mov	r0, #1
   167e4:	strb	r0, [r4, #12]
   167e8:	pop	{r4, r5, r6, r7, fp, pc}
   167ec:	movw	r0, #34221	; 0x85ad
   167f0:	movt	r0, #1
   167f4:	movw	r1, #34244	; 0x85c4
   167f8:	movt	r1, #1
   167fc:	movw	r3, #34256	; 0x85d0
   16800:	movt	r3, #1
   16804:	mov	r2, #143	; 0x8f
   16808:	bl	11884 <__assert_fail@plt>
   1680c:	movw	r0, #34304	; 0x8600
   16810:	movt	r0, #1
   16814:	movw	r1, #34244	; 0x85c4
   16818:	movt	r1, #1
   1681c:	movw	r3, #34256	; 0x85d0
   16820:	movt	r3, #1
   16824:	mov	r2, #171	; 0xab
   16828:	bl	11884 <__assert_fail@plt>
   1682c:	movw	r0, #34327	; 0x8617
   16830:	movt	r0, #1
   16834:	movw	r1, #34244	; 0x85c4
   16838:	movt	r1, #1
   1683c:	movw	r3, #34256	; 0x85d0
   16840:	movt	r3, #1
   16844:	mov	r2, #172	; 0xac
   16848:	bl	11884 <__assert_fail@plt>
   1684c:	ldr	r2, [r0, #16]
   16850:	add	r1, r2, r1
   16854:	str	r1, [r0, #16]
   16858:	bx	lr
   1685c:	ldrb	r3, [r1]
   16860:	mov	r2, r0
   16864:	strb	r3, [r2], #4
   16868:	cmp	r3, #0
   1686c:	beq	1687c <sigaltstack@plt+0x4fec>
   16870:	ldmib	r1, {r3, ip}
   16874:	stm	r2, {r3, ip}
   16878:	b	16888 <sigaltstack@plt+0x4ff8>
   1687c:	mov	r3, #0
   16880:	str	r3, [r2]
   16884:	str	r3, [r2, #4]
   16888:	ldrb	r2, [r1, #12]
   1688c:	strb	r2, [r0, #12]
   16890:	add	r0, r0, #16
   16894:	add	r1, r1, #16
   16898:	b	175b0 <sigaltstack@plt+0x5d20>
   1689c:	push	{r4, r5, r6, r7, fp, lr}
   168a0:	add	fp, sp, #16
   168a4:	mov	r4, #0
   168a8:	movw	r5, #35363	; 0x8a23
   168ac:	movt	r5, #1
   168b0:	movw	r6, #35373	; 0x8a2d
   168b4:	movt	r6, #1
   168b8:	b	168cc <sigaltstack@plt+0x503c>
   168bc:	add	r4, r4, #1
   168c0:	cmp	r4, #3
   168c4:	movcs	r0, #0
   168c8:	popcs	{r4, r5, r6, r7, fp, pc}
   168cc:	mov	r0, r4
   168d0:	mov	r1, #1
   168d4:	bl	16f20 <sigaltstack@plt+0x5690>
   168d8:	cmn	r0, #1
   168dc:	bgt	168bc <sigaltstack@plt+0x502c>
   168e0:	clz	r0, r4
   168e4:	lsr	r7, r0, #5
   168e8:	cmp	r4, #0
   168ec:	beq	16908 <sigaltstack@plt+0x5078>
   168f0:	mov	r0, r6
   168f4:	mov	r1, r7
   168f8:	bl	1165c <open64@plt>
   168fc:	cmn	r0, #1
   16900:	bgt	1691c <sigaltstack@plt+0x508c>
   16904:	b	16930 <sigaltstack@plt+0x50a0>
   16908:	mov	r0, r5
   1690c:	mov	r1, r7
   16910:	bl	1165c <open64@plt>
   16914:	cmn	r0, #1
   16918:	ble	168f0 <sigaltstack@plt+0x5060>
   1691c:	cmp	r0, #3
   16920:	blt	168bc <sigaltstack@plt+0x502c>
   16924:	bl	1186c <close@plt>
   16928:	mov	r0, #0
   1692c:	pop	{r4, r5, r6, r7, fp, pc}
   16930:	bl	11740 <__errno_location@plt>
   16934:	ldr	r0, [r0]
   16938:	pop	{r4, r5, r6, r7, fp, pc}
   1693c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16940:	add	fp, sp, #28
   16944:	sub	sp, sp, #44	; 0x2c
   16948:	sub	sp, sp, #4096	; 0x1000
   1694c:	str	r3, [sp, #16]
   16950:	mov	r4, r1
   16954:	mov	r6, r0
   16958:	mov	r5, #0
   1695c:	str	r5, [sp]
   16960:	str	r2, [sp, #20]
   16964:	mov	r0, r2
   16968:	mov	r1, #0
   1696c:	mov	r2, #0
   16970:	mov	r3, #0
   16974:	bl	114d0 <iconv@plt>
   16978:	str	r6, [sp, #8]
   1697c:	str	r6, [sp, #36]	; 0x24
   16980:	str	r4, [sp, #32]
   16984:	str	r4, [sp, #12]
   16988:	cmp	r4, #0
   1698c:	beq	169fc <sigaltstack@plt+0x516c>
   16990:	mov	r5, #0
   16994:	add	r4, sp, #40	; 0x28
   16998:	mov	r8, #4096	; 0x1000
   1699c:	add	sl, sp, #24
   169a0:	add	r9, sp, #36	; 0x24
   169a4:	add	r7, sp, #32
   169a8:	add	r6, sp, #28
   169ac:	str	r4, [sp, #28]
   169b0:	str	r8, [sp, #24]
   169b4:	str	sl, [sp]
   169b8:	ldr	r0, [sp, #20]
   169bc:	mov	r1, r9
   169c0:	mov	r2, r7
   169c4:	mov	r3, r6
   169c8:	bl	114d0 <iconv@plt>
   169cc:	cmn	r0, #1
   169d0:	bne	169e4 <sigaltstack@plt+0x5154>
   169d4:	bl	11740 <__errno_location@plt>
   169d8:	ldr	r0, [r0]
   169dc:	cmp	r0, #7
   169e0:	bne	16a4c <sigaltstack@plt+0x51bc>
   169e4:	sub	r0, r5, r4
   169e8:	ldr	r1, [sp, #28]
   169ec:	add	r5, r0, r1
   169f0:	ldr	r0, [sp, #32]
   169f4:	cmp	r0, #0
   169f8:	bne	169ac <sigaltstack@plt+0x511c>
   169fc:	add	r6, sp, #40	; 0x28
   16a00:	str	r6, [sp, #28]
   16a04:	mov	r0, #4096	; 0x1000
   16a08:	str	r0, [sp, #24]
   16a0c:	add	r0, sp, #24
   16a10:	str	r0, [sp]
   16a14:	mov	r4, #0
   16a18:	add	r3, sp, #28
   16a1c:	ldr	r0, [sp, #20]
   16a20:	mov	r1, #0
   16a24:	mov	r2, #0
   16a28:	bl	114d0 <iconv@plt>
   16a2c:	cmn	r0, #1
   16a30:	beq	16a44 <sigaltstack@plt+0x51b4>
   16a34:	sub	r0, r5, r6
   16a38:	ldr	r1, [sp, #28]
   16a3c:	add	r5, r0, r1
   16a40:	b	16a58 <sigaltstack@plt+0x51c8>
   16a44:	mov	r4, #1
   16a48:	b	16a58 <sigaltstack@plt+0x51c8>
   16a4c:	cmp	r0, #22
   16a50:	beq	169fc <sigaltstack@plt+0x516c>
   16a54:	mov	r4, #1
   16a58:	mvn	r9, #0
   16a5c:	cmp	r4, #0
   16a60:	beq	16a70 <sigaltstack@plt+0x51e0>
   16a64:	mov	r0, r9
   16a68:	sub	sp, fp, #28
   16a6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a70:	ldr	r1, [fp, #8]
   16a74:	cmp	r5, #0
   16a78:	beq	16b98 <sigaltstack@plt+0x5308>
   16a7c:	ldr	r0, [sp, #16]
   16a80:	ldr	r4, [r0]
   16a84:	cmp	r4, #0
   16a88:	beq	16a98 <sigaltstack@plt+0x5208>
   16a8c:	ldr	r0, [r1]
   16a90:	cmp	r0, r5
   16a94:	bcs	16aac <sigaltstack@plt+0x521c>
   16a98:	mov	r0, r5
   16a9c:	bl	15924 <sigaltstack@plt+0x4094>
   16aa0:	mov	r4, r0
   16aa4:	cmp	r0, #0
   16aa8:	beq	16ba4 <sigaltstack@plt+0x5314>
   16aac:	mov	r0, #0
   16ab0:	str	r0, [sp]
   16ab4:	ldr	r0, [sp, #20]
   16ab8:	mov	r1, #0
   16abc:	mov	r2, #0
   16ac0:	mov	r3, #0
   16ac4:	bl	114d0 <iconv@plt>
   16ac8:	ldr	r0, [sp, #8]
   16acc:	str	r0, [sp, #40]	; 0x28
   16ad0:	ldr	r0, [sp, #12]
   16ad4:	str	r0, [sp, #36]	; 0x24
   16ad8:	mov	sl, r4
   16adc:	str	r4, [sp, #32]
   16ae0:	str	r5, [sp, #28]
   16ae4:	add	r8, sp, #28
   16ae8:	add	r7, sp, #40	; 0x28
   16aec:	add	r6, sp, #36	; 0x24
   16af0:	add	r4, sp, #32
   16af4:	ldr	r0, [sp, #36]	; 0x24
   16af8:	cmp	r0, #0
   16afc:	beq	16b54 <sigaltstack@plt+0x52c4>
   16b00:	str	r8, [sp]
   16b04:	ldr	r0, [sp, #20]
   16b08:	mov	r1, r7
   16b0c:	mov	r2, r6
   16b10:	mov	r3, r4
   16b14:	bl	114d0 <iconv@plt>
   16b18:	mov	r1, #0
   16b1c:	cmn	r0, #1
   16b20:	beq	16b30 <sigaltstack@plt+0x52a0>
   16b24:	cmp	r1, #0
   16b28:	beq	16af4 <sigaltstack@plt+0x5264>
   16b2c:	b	16b4c <sigaltstack@plt+0x52bc>
   16b30:	bl	11740 <__errno_location@plt>
   16b34:	ldr	r0, [r0]
   16b38:	cmp	r0, #22
   16b3c:	mov	r1, #6
   16b40:	movweq	r1, #5
   16b44:	cmp	r1, #0
   16b48:	beq	16af4 <sigaltstack@plt+0x5264>
   16b4c:	cmp	r1, #5
   16b50:	bne	16bb4 <sigaltstack@plt+0x5324>
   16b54:	str	r8, [sp]
   16b58:	add	r3, sp, #32
   16b5c:	ldr	r0, [sp, #20]
   16b60:	mov	r1, #0
   16b64:	mov	r2, #0
   16b68:	bl	114d0 <iconv@plt>
   16b6c:	cmn	r0, #1
   16b70:	beq	16bbc <sigaltstack@plt+0x532c>
   16b74:	ldr	r0, [sp, #28]
   16b78:	cmp	r0, #0
   16b7c:	bne	16bd8 <sigaltstack@plt+0x5348>
   16b80:	ldr	r0, [sp, #16]
   16b84:	str	sl, [r0]
   16b88:	ldr	r0, [fp, #8]
   16b8c:	str	r5, [r0]
   16b90:	mov	r9, #0
   16b94:	b	16a64 <sigaltstack@plt+0x51d4>
   16b98:	mov	r9, #0
   16b9c:	str	r9, [r1]
   16ba0:	b	16a64 <sigaltstack@plt+0x51d4>
   16ba4:	bl	11740 <__errno_location@plt>
   16ba8:	mov	r1, #12
   16bac:	str	r1, [r0]
   16bb0:	b	16a64 <sigaltstack@plt+0x51d4>
   16bb4:	cmp	r1, #6
   16bb8:	bne	16a64 <sigaltstack@plt+0x51d4>
   16bbc:	ldr	r0, [sp, #16]
   16bc0:	ldr	r0, [r0]
   16bc4:	cmp	sl, r0
   16bc8:	beq	16a64 <sigaltstack@plt+0x51d4>
   16bcc:	mov	r0, sl
   16bd0:	bl	158fc <sigaltstack@plt+0x406c>
   16bd4:	b	16a64 <sigaltstack@plt+0x51d4>
   16bd8:	bl	11854 <abort@plt>
   16bdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16be0:	add	fp, sp, #28
   16be4:	sub	sp, sp, #20
   16be8:	mov	r5, r1
   16bec:	str	r0, [sp, #16]
   16bf0:	bl	11704 <strlen@plt>
   16bf4:	mov	r7, r0
   16bf8:	str	r0, [sp, #12]
   16bfc:	cmp	r0, #4096	; 0x1000
   16c00:	lslcc	r7, r0, #4
   16c04:	add	r4, r7, #1
   16c08:	mov	r0, r4
   16c0c:	bl	15924 <sigaltstack@plt+0x4094>
   16c10:	cmp	r0, #0
   16c14:	beq	16d4c <sigaltstack@plt+0x54bc>
   16c18:	mov	r6, r0
   16c1c:	mov	r0, #0
   16c20:	str	r0, [sp]
   16c24:	mov	r0, r5
   16c28:	mov	r1, #0
   16c2c:	mov	r2, #0
   16c30:	mov	r3, #0
   16c34:	bl	114d0 <iconv@plt>
   16c38:	str	r6, [sp, #8]
   16c3c:	str	r7, [sp, #4]
   16c40:	add	r9, sp, #4
   16c44:	str	r9, [sp]
   16c48:	add	r1, sp, #16
   16c4c:	add	r2, sp, #12
   16c50:	add	r3, sp, #8
   16c54:	mov	r0, r5
   16c58:	bl	114d0 <iconv@plt>
   16c5c:	cmn	r0, #1
   16c60:	beq	16cd0 <sigaltstack@plt+0x5440>
   16c64:	mov	r7, r6
   16c68:	str	r9, [sp]
   16c6c:	add	r3, sp, #8
   16c70:	mov	r0, r5
   16c74:	mov	r1, #0
   16c78:	mov	r2, #0
   16c7c:	bl	114d0 <iconv@plt>
   16c80:	cmn	r0, #1
   16c84:	beq	16d5c <sigaltstack@plt+0x54cc>
   16c88:	mov	r6, r7
   16c8c:	ldr	r0, [sp, #8]
   16c90:	add	r1, r0, #1
   16c94:	str	r1, [sp, #8]
   16c98:	mov	r1, #0
   16c9c:	strb	r1, [r0]
   16ca0:	ldr	r0, [sp, #8]
   16ca4:	sub	r1, r0, r6
   16ca8:	cmp	r1, r4
   16cac:	movcs	r0, r6
   16cb0:	subcs	sp, fp, #28
   16cb4:	popcs	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16cb8:	mov	r0, r6
   16cbc:	bl	15954 <sigaltstack@plt+0x40c4>
   16cc0:	cmp	r0, #0
   16cc4:	moveq	r0, r6
   16cc8:	sub	sp, fp, #28
   16ccc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16cd0:	bl	11740 <__errno_location@plt>
   16cd4:	mov	r8, r0
   16cd8:	ldr	r0, [r0]
   16cdc:	cmp	r0, #7
   16ce0:	bne	16e04 <sigaltstack@plt+0x5574>
   16ce4:	cmp	r4, r4, lsl #1
   16ce8:	bcs	16dd8 <sigaltstack@plt+0x5548>
   16cec:	ldr	sl, [sp, #8]
   16cf0:	lsl	r4, r4, #1
   16cf4:	mov	r0, r6
   16cf8:	mov	r1, r4
   16cfc:	bl	15954 <sigaltstack@plt+0x40c4>
   16d00:	cmp	r0, #0
   16d04:	beq	16dd8 <sigaltstack@plt+0x5548>
   16d08:	mov	r7, r0
   16d0c:	sub	r0, sl, r6
   16d10:	add	r1, r7, r0
   16d14:	str	r1, [sp, #8]
   16d18:	mvn	r0, r0
   16d1c:	add	r0, r4, r0
   16d20:	str	r0, [sp, #4]
   16d24:	str	r9, [sp]
   16d28:	mov	r0, r5
   16d2c:	add	r1, sp, #16
   16d30:	add	r2, sp, #12
   16d34:	add	r3, sp, #8
   16d38:	bl	114d0 <iconv@plt>
   16d3c:	cmn	r0, #1
   16d40:	mov	r6, r7
   16d44:	beq	16cd0 <sigaltstack@plt+0x5440>
   16d48:	b	16c68 <sigaltstack@plt+0x53d8>
   16d4c:	bl	11740 <__errno_location@plt>
   16d50:	mov	r1, #12
   16d54:	str	r1, [r0]
   16d58:	b	16df8 <sigaltstack@plt+0x5568>
   16d5c:	bl	11740 <__errno_location@plt>
   16d60:	mov	r8, r0
   16d64:	ldr	r0, [r8]
   16d68:	cmp	r0, #7
   16d6c:	bne	16dec <sigaltstack@plt+0x555c>
   16d70:	cmp	r4, r4, lsl #1
   16d74:	bcs	16de4 <sigaltstack@plt+0x5554>
   16d78:	ldr	sl, [sp, #8]
   16d7c:	lsl	r4, r4, #1
   16d80:	mov	r0, r7
   16d84:	mov	r1, r4
   16d88:	bl	15954 <sigaltstack@plt+0x40c4>
   16d8c:	cmp	r0, #0
   16d90:	beq	16de4 <sigaltstack@plt+0x5554>
   16d94:	mov	r6, r0
   16d98:	sub	r0, sl, r7
   16d9c:	add	r1, r6, r0
   16da0:	str	r1, [sp, #8]
   16da4:	mvn	r0, r0
   16da8:	add	r0, r4, r0
   16dac:	str	r0, [sp, #4]
   16db0:	str	r9, [sp]
   16db4:	mov	r0, r5
   16db8:	mov	r1, #0
   16dbc:	mov	r2, #0
   16dc0:	add	r3, sp, #8
   16dc4:	bl	114d0 <iconv@plt>
   16dc8:	cmn	r0, #1
   16dcc:	mov	r7, r6
   16dd0:	beq	16d64 <sigaltstack@plt+0x54d4>
   16dd4:	b	16c8c <sigaltstack@plt+0x53fc>
   16dd8:	mov	r0, #12
   16ddc:	str	r0, [r8]
   16de0:	b	16df0 <sigaltstack@plt+0x5560>
   16de4:	mov	r0, #12
   16de8:	str	r0, [r8]
   16dec:	mov	r6, r7
   16df0:	mov	r0, r6
   16df4:	bl	158fc <sigaltstack@plt+0x406c>
   16df8:	mov	r0, #0
   16dfc:	sub	sp, fp, #28
   16e00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16e04:	cmp	r0, #22
   16e08:	beq	16c64 <sigaltstack@plt+0x53d4>
   16e0c:	b	16df0 <sigaltstack@plt+0x5560>
   16e10:	push	{r4, r5, r6, r7, fp, lr}
   16e14:	add	fp, sp, #16
   16e18:	mov	r5, r0
   16e1c:	ldrb	r0, [r0]
   16e20:	cmp	r0, #0
   16e24:	beq	16e9c <sigaltstack@plt+0x560c>
   16e28:	mov	r6, r2
   16e2c:	mov	r4, r1
   16e30:	mov	r0, r1
   16e34:	mov	r1, r2
   16e38:	bl	159e4 <sigaltstack@plt+0x4154>
   16e3c:	cmp	r0, #0
   16e40:	beq	16e9c <sigaltstack@plt+0x560c>
   16e44:	mov	r0, r6
   16e48:	mov	r1, r4
   16e4c:	bl	11698 <iconv_open@plt>
   16e50:	mov	r4, #0
   16e54:	cmn	r0, #1
   16e58:	beq	16eb0 <sigaltstack@plt+0x5620>
   16e5c:	mov	r6, r0
   16e60:	mov	r0, r5
   16e64:	mov	r1, r6
   16e68:	bl	16bdc <sigaltstack@plt+0x534c>
   16e6c:	cmp	r0, #0
   16e70:	beq	16ed0 <sigaltstack@plt+0x5640>
   16e74:	mov	r5, r0
   16e78:	mov	r0, r6
   16e7c:	bl	114c4 <iconv_close@plt>
   16e80:	cmn	r0, #1
   16e84:	movgt	r0, r5
   16e88:	popgt	{r4, r5, r6, r7, fp, pc}
   16e8c:	mov	r0, r5
   16e90:	bl	158fc <sigaltstack@plt+0x406c>
   16e94:	mov	r0, r4
   16e98:	pop	{r4, r5, r6, r7, fp, pc}
   16e9c:	mov	r0, r5
   16ea0:	bl	11590 <strdup@plt>
   16ea4:	mov	r4, r0
   16ea8:	cmp	r0, #0
   16eac:	beq	16eb8 <sigaltstack@plt+0x5628>
   16eb0:	mov	r0, r4
   16eb4:	pop	{r4, r5, r6, r7, fp, pc}
   16eb8:	bl	11740 <__errno_location@plt>
   16ebc:	mov	r1, #12
   16ec0:	str	r1, [r0]
   16ec4:	mov	r4, #0
   16ec8:	mov	r0, r4
   16ecc:	pop	{r4, r5, r6, r7, fp, pc}
   16ed0:	bl	11740 <__errno_location@plt>
   16ed4:	mov	r5, r0
   16ed8:	ldr	r7, [r0]
   16edc:	mov	r0, r6
   16ee0:	bl	114c4 <iconv_close@plt>
   16ee4:	str	r7, [r5]
   16ee8:	mov	r0, r4
   16eec:	pop	{r4, r5, r6, r7, fp, pc}
   16ef0:	push	{r4, r5, fp, lr}
   16ef4:	add	fp, sp, #8
   16ef8:	mov	r4, r1
   16efc:	mov	r5, r0
   16f00:	mov	r1, #0
   16f04:	mov	r2, r4
   16f08:	bl	11764 <memchr@plt>
   16f0c:	rsb	r1, r5, #1
   16f10:	cmp	r0, #0
   16f14:	addne	r4, r1, r0
   16f18:	mov	r0, r4
   16f1c:	pop	{r4, r5, fp, pc}
   16f20:	sub	sp, sp, #8
   16f24:	push	{fp, lr}
   16f28:	mov	fp, sp
   16f2c:	sub	sp, sp, #8
   16f30:	str	r3, [fp, #12]
   16f34:	str	r2, [fp, #8]
   16f38:	add	r2, fp, #8
   16f3c:	str	r2, [sp, #4]
   16f40:	cmp	r1, #11
   16f44:	bhi	16f84 <sigaltstack@plt+0x56f4>
   16f48:	mov	r2, #1
   16f4c:	movw	r3, #1300	; 0x514
   16f50:	tst	r3, r2, lsl r1
   16f54:	bne	16fd4 <sigaltstack@plt+0x5744>
   16f58:	movw	r3, #2570	; 0xa0a
   16f5c:	tst	r3, r2, lsl r1
   16f60:	bne	16fac <sigaltstack@plt+0x571c>
   16f64:	cmp	r1, #0
   16f68:	bne	16f84 <sigaltstack@plt+0x56f4>
   16f6c:	ldr	r1, [sp, #4]
   16f70:	add	r2, r1, #4
   16f74:	str	r2, [sp, #4]
   16f78:	ldr	r1, [r1]
   16f7c:	bl	16ff8 <sigaltstack@plt+0x5768>
   16f80:	b	16fe8 <sigaltstack@plt+0x5758>
   16f84:	sub	r2, r1, #1024	; 0x400
   16f88:	cmp	r2, #10
   16f8c:	bhi	16fd4 <sigaltstack@plt+0x5744>
   16f90:	mov	ip, #1
   16f94:	movw	r3, #645	; 0x285
   16f98:	tst	r3, ip, lsl r2
   16f9c:	bne	16fd4 <sigaltstack@plt+0x5744>
   16fa0:	movw	r3, #1282	; 0x502
   16fa4:	tst	r3, ip, lsl r2
   16fa8:	beq	16fb4 <sigaltstack@plt+0x5724>
   16fac:	bl	117ac <fcntl64@plt>
   16fb0:	b	16fe8 <sigaltstack@plt+0x5758>
   16fb4:	cmp	r2, #6
   16fb8:	bne	16fd4 <sigaltstack@plt+0x5744>
   16fbc:	ldr	r1, [sp, #4]
   16fc0:	add	r2, r1, #4
   16fc4:	str	r2, [sp, #4]
   16fc8:	ldr	r1, [r1]
   16fcc:	bl	17004 <sigaltstack@plt+0x5774>
   16fd0:	b	16fe8 <sigaltstack@plt+0x5758>
   16fd4:	ldr	r2, [sp, #4]
   16fd8:	add	r3, r2, #4
   16fdc:	str	r3, [sp, #4]
   16fe0:	ldr	r2, [r2]
   16fe4:	bl	117ac <fcntl64@plt>
   16fe8:	mov	sp, fp
   16fec:	pop	{fp, lr}
   16ff0:	add	sp, sp, #8
   16ff4:	bx	lr
   16ff8:	mov	r2, r1
   16ffc:	mov	r1, #0
   17000:	b	117ac <fcntl64@plt>
   17004:	push	{r4, r5, r6, r7, fp, lr}
   17008:	add	fp, sp, #16
   1700c:	mov	r5, r1
   17010:	mov	r6, r0
   17014:	movw	r7, #38496	; 0x9660
   17018:	movt	r7, #3
   1701c:	ldr	r0, [r7]
   17020:	cmp	r0, #0
   17024:	blt	17088 <sigaltstack@plt+0x57f8>
   17028:	mov	r0, r6
   1702c:	movw	r1, #1030	; 0x406
   17030:	mov	r2, r5
   17034:	bl	117ac <fcntl64@plt>
   17038:	mov	r4, r0
   1703c:	cmn	r0, #1
   17040:	bgt	17074 <sigaltstack@plt+0x57e4>
   17044:	bl	11740 <__errno_location@plt>
   17048:	ldr	r0, [r0]
   1704c:	cmp	r0, #22
   17050:	bne	17074 <sigaltstack@plt+0x57e4>
   17054:	mov	r0, r6
   17058:	mov	r1, r5
   1705c:	bl	16ff8 <sigaltstack@plt+0x5768>
   17060:	mov	r4, r0
   17064:	cmp	r0, #0
   17068:	blt	170d8 <sigaltstack@plt+0x5848>
   1706c:	mvn	r0, #0
   17070:	b	17078 <sigaltstack@plt+0x57e8>
   17074:	mov	r0, #1
   17078:	str	r0, [r7]
   1707c:	cmp	r4, #0
   17080:	bge	170a0 <sigaltstack@plt+0x5810>
   17084:	b	170d8 <sigaltstack@plt+0x5848>
   17088:	mov	r0, r6
   1708c:	mov	r1, r5
   17090:	bl	16ff8 <sigaltstack@plt+0x5768>
   17094:	mov	r4, r0
   17098:	cmp	r4, #0
   1709c:	blt	170d8 <sigaltstack@plt+0x5848>
   170a0:	ldr	r0, [r7]
   170a4:	cmn	r0, #1
   170a8:	bne	170d8 <sigaltstack@plt+0x5848>
   170ac:	mov	r0, r4
   170b0:	mov	r1, #1
   170b4:	bl	117ac <fcntl64@plt>
   170b8:	cmp	r0, #0
   170bc:	blt	170e0 <sigaltstack@plt+0x5850>
   170c0:	orr	r2, r0, #1
   170c4:	mov	r0, r4
   170c8:	mov	r1, #2
   170cc:	bl	117ac <fcntl64@plt>
   170d0:	cmn	r0, #1
   170d4:	beq	170e0 <sigaltstack@plt+0x5850>
   170d8:	mov	r0, r4
   170dc:	pop	{r4, r5, r6, r7, fp, pc}
   170e0:	bl	11740 <__errno_location@plt>
   170e4:	mov	r5, r0
   170e8:	ldr	r6, [r0]
   170ec:	mov	r0, r4
   170f0:	bl	1186c <close@plt>
   170f4:	str	r6, [r5]
   170f8:	mvn	r4, #0
   170fc:	mov	r0, r4
   17100:	pop	{r4, r5, r6, r7, fp, pc}
   17104:	push	{r4, r5, r6, r7, fp, lr}
   17108:	add	fp, sp, #16
   1710c:	sub	sp, sp, #8
   17110:	mov	r7, r2
   17114:	mov	r4, r1
   17118:	add	r5, sp, #4
   1711c:	cmp	r0, #0
   17120:	movne	r5, r0
   17124:	mov	r0, r5
   17128:	bl	11644 <mbrtowc@plt>
   1712c:	mov	r6, r0
   17130:	cmp	r7, #0
   17134:	beq	17158 <sigaltstack@plt+0x58c8>
   17138:	cmn	r6, #2
   1713c:	bcc	17158 <sigaltstack@plt+0x58c8>
   17140:	mov	r0, #0
   17144:	bl	17488 <sigaltstack@plt+0x5bf8>
   17148:	cmp	r0, #0
   1714c:	ldrbeq	r0, [r4]
   17150:	streq	r0, [r5]
   17154:	moveq	r6, #1
   17158:	mov	r0, r6
   1715c:	sub	sp, fp, #16
   17160:	pop	{r4, r5, r6, r7, fp, pc}
   17164:	mov	r1, r0
   17168:	sub	r2, r0, #65	; 0x41
   1716c:	mov	r0, #1
   17170:	cmp	r2, #26
   17174:	subcs	r2, r1, #97	; 0x61
   17178:	cmpcs	r2, #26
   1717c:	bcs	17184 <sigaltstack@plt+0x58f4>
   17180:	bx	lr
   17184:	sub	r1, r1, #48	; 0x30
   17188:	cmp	r1, #10
   1718c:	movcs	r0, #0
   17190:	bx	lr
   17194:	mov	r1, r0
   17198:	sub	r2, r0, #65	; 0x41
   1719c:	mov	r0, #1
   171a0:	cmp	r2, #26
   171a4:	subcs	r1, r1, #97	; 0x61
   171a8:	cmpcs	r1, #26
   171ac:	movcs	r0, #0
   171b0:	bx	lr
   171b4:	mov	r1, #0
   171b8:	cmp	r0, #128	; 0x80
   171bc:	movwcc	r1, #1
   171c0:	mov	r0, r1
   171c4:	bx	lr
   171c8:	sub	r1, r0, #9
   171cc:	clz	r1, r1
   171d0:	lsr	r1, r1, #5
   171d4:	sub	r0, r0, #32
   171d8:	clz	r0, r0
   171dc:	lsr	r0, r0, #5
   171e0:	orr	r0, r0, r1
   171e4:	bx	lr
   171e8:	mov	r1, r0
   171ec:	mov	r0, #1
   171f0:	cmp	r1, #32
   171f4:	bxcc	lr
   171f8:	cmp	r1, #127	; 0x7f
   171fc:	movne	r0, #0
   17200:	bx	lr
   17204:	sub	r1, r0, #48	; 0x30
   17208:	mov	r0, #0
   1720c:	cmp	r1, #10
   17210:	movwcc	r0, #1
   17214:	bx	lr
   17218:	sub	r1, r0, #33	; 0x21
   1721c:	mov	r0, #0
   17220:	cmp	r1, #94	; 0x5e
   17224:	movwcc	r0, #1
   17228:	bx	lr
   1722c:	sub	r1, r0, #97	; 0x61
   17230:	mov	r0, #0
   17234:	cmp	r1, #26
   17238:	movwcc	r0, #1
   1723c:	bx	lr
   17240:	sub	r1, r0, #32
   17244:	mov	r0, #0
   17248:	cmp	r1, #95	; 0x5f
   1724c:	movwcc	r0, #1
   17250:	bx	lr
   17254:	sub	r1, r0, #33	; 0x21
   17258:	cmp	r1, #93	; 0x5d
   1725c:	bhi	173e8 <sigaltstack@plt+0x5b58>
   17260:	mov	r0, #1
   17264:	add	r2, pc, #0
   17268:	ldr	pc, [r2, r1, lsl #2]
   1726c:	andeq	r7, r1, r4, ror #7
   17270:	andeq	r7, r1, r4, ror #7
   17274:	andeq	r7, r1, r4, ror #7
   17278:	andeq	r7, r1, r4, ror #7
   1727c:	andeq	r7, r1, r4, ror #7
   17280:	andeq	r7, r1, r4, ror #7
   17284:	andeq	r7, r1, r4, ror #7
   17288:	andeq	r7, r1, r4, ror #7
   1728c:	andeq	r7, r1, r4, ror #7
   17290:	andeq	r7, r1, r4, ror #7
   17294:	andeq	r7, r1, r4, ror #7
   17298:	andeq	r7, r1, r4, ror #7
   1729c:	andeq	r7, r1, r4, ror #7
   172a0:	andeq	r7, r1, r4, ror #7
   172a4:	andeq	r7, r1, r4, ror #7
   172a8:	andeq	r7, r1, r8, ror #7
   172ac:	andeq	r7, r1, r8, ror #7
   172b0:	andeq	r7, r1, r8, ror #7
   172b4:	andeq	r7, r1, r8, ror #7
   172b8:	andeq	r7, r1, r8, ror #7
   172bc:	andeq	r7, r1, r8, ror #7
   172c0:	andeq	r7, r1, r8, ror #7
   172c4:	andeq	r7, r1, r8, ror #7
   172c8:	andeq	r7, r1, r8, ror #7
   172cc:	andeq	r7, r1, r8, ror #7
   172d0:	andeq	r7, r1, r4, ror #7
   172d4:	andeq	r7, r1, r4, ror #7
   172d8:	andeq	r7, r1, r4, ror #7
   172dc:	andeq	r7, r1, r4, ror #7
   172e0:	andeq	r7, r1, r4, ror #7
   172e4:	andeq	r7, r1, r4, ror #7
   172e8:	andeq	r7, r1, r4, ror #7
   172ec:	andeq	r7, r1, r8, ror #7
   172f0:	andeq	r7, r1, r8, ror #7
   172f4:	andeq	r7, r1, r8, ror #7
   172f8:	andeq	r7, r1, r8, ror #7
   172fc:	andeq	r7, r1, r8, ror #7
   17300:	andeq	r7, r1, r8, ror #7
   17304:	andeq	r7, r1, r8, ror #7
   17308:	andeq	r7, r1, r8, ror #7
   1730c:	andeq	r7, r1, r8, ror #7
   17310:	andeq	r7, r1, r8, ror #7
   17314:	andeq	r7, r1, r8, ror #7
   17318:	andeq	r7, r1, r8, ror #7
   1731c:	andeq	r7, r1, r8, ror #7
   17320:	andeq	r7, r1, r8, ror #7
   17324:	andeq	r7, r1, r8, ror #7
   17328:	andeq	r7, r1, r8, ror #7
   1732c:	andeq	r7, r1, r8, ror #7
   17330:	andeq	r7, r1, r8, ror #7
   17334:	andeq	r7, r1, r8, ror #7
   17338:	andeq	r7, r1, r8, ror #7
   1733c:	andeq	r7, r1, r8, ror #7
   17340:	andeq	r7, r1, r8, ror #7
   17344:	andeq	r7, r1, r8, ror #7
   17348:	andeq	r7, r1, r8, ror #7
   1734c:	andeq	r7, r1, r8, ror #7
   17350:	andeq	r7, r1, r8, ror #7
   17354:	andeq	r7, r1, r4, ror #7
   17358:	andeq	r7, r1, r4, ror #7
   1735c:	andeq	r7, r1, r4, ror #7
   17360:	andeq	r7, r1, r4, ror #7
   17364:	andeq	r7, r1, r4, ror #7
   17368:	andeq	r7, r1, r4, ror #7
   1736c:	andeq	r7, r1, r8, ror #7
   17370:	andeq	r7, r1, r8, ror #7
   17374:	andeq	r7, r1, r8, ror #7
   17378:	andeq	r7, r1, r8, ror #7
   1737c:	andeq	r7, r1, r8, ror #7
   17380:	andeq	r7, r1, r8, ror #7
   17384:	andeq	r7, r1, r8, ror #7
   17388:	andeq	r7, r1, r8, ror #7
   1738c:	andeq	r7, r1, r8, ror #7
   17390:	andeq	r7, r1, r8, ror #7
   17394:	andeq	r7, r1, r8, ror #7
   17398:	andeq	r7, r1, r8, ror #7
   1739c:	andeq	r7, r1, r8, ror #7
   173a0:	andeq	r7, r1, r8, ror #7
   173a4:	andeq	r7, r1, r8, ror #7
   173a8:	andeq	r7, r1, r8, ror #7
   173ac:	andeq	r7, r1, r8, ror #7
   173b0:	andeq	r7, r1, r8, ror #7
   173b4:	andeq	r7, r1, r8, ror #7
   173b8:	andeq	r7, r1, r8, ror #7
   173bc:	andeq	r7, r1, r8, ror #7
   173c0:	andeq	r7, r1, r8, ror #7
   173c4:	andeq	r7, r1, r8, ror #7
   173c8:	andeq	r7, r1, r8, ror #7
   173cc:	andeq	r7, r1, r8, ror #7
   173d0:	andeq	r7, r1, r8, ror #7
   173d4:	andeq	r7, r1, r4, ror #7
   173d8:	andeq	r7, r1, r4, ror #7
   173dc:	andeq	r7, r1, r4, ror #7
   173e0:	andeq	r7, r1, r4, ror #7
   173e4:	bx	lr
   173e8:	mov	r0, #0
   173ec:	bx	lr
   173f0:	sub	r0, r0, #9
   173f4:	cmp	r0, #23
   173f8:	movhi	r0, #0
   173fc:	bxhi	lr
   17400:	bic	r0, r0, #-16777216	; 0xff000000
   17404:	movw	r1, #31
   17408:	movt	r1, #128	; 0x80
   1740c:	mov	r2, #1
   17410:	and	r0, r2, r1, lsr r0
   17414:	bx	lr
   17418:	sub	r1, r0, #65	; 0x41
   1741c:	mov	r0, #0
   17420:	cmp	r1, #26
   17424:	movwcc	r0, #1
   17428:	bx	lr
   1742c:	mov	r1, r0
   17430:	sub	r2, r0, #48	; 0x30
   17434:	mov	r0, #1
   17438:	cmp	r2, #22
   1743c:	bhi	17454 <sigaltstack@plt+0x5bc4>
   17440:	mov	ip, #1
   17444:	movw	r3, #1023	; 0x3ff
   17448:	movt	r3, #126	; 0x7e
   1744c:	tst	r3, ip, lsl r2
   17450:	bxne	lr
   17454:	sub	r1, r1, #97	; 0x61
   17458:	cmp	r1, #6
   1745c:	movcs	r0, #0
   17460:	bxcs	lr
   17464:	bx	lr
   17468:	sub	r1, r0, #65	; 0x41
   1746c:	cmp	r1, #26
   17470:	addcc	r0, r0, #32
   17474:	bx	lr
   17478:	sub	r1, r0, #97	; 0x61
   1747c:	cmp	r1, #26
   17480:	subcc	r0, r0, #32
   17484:	bx	lr
   17488:	push	{r4, sl, fp, lr}
   1748c:	add	fp, sp, #8
   17490:	sub	sp, sp, #264	; 0x108
   17494:	add	r1, sp, #7
   17498:	movw	r2, #257	; 0x101
   1749c:	bl	176dc <sigaltstack@plt+0x5e4c>
   174a0:	mov	r4, #0
   174a4:	cmp	r0, #0
   174a8:	bne	174e0 <sigaltstack@plt+0x5c50>
   174ac:	add	r0, sp, #7
   174b0:	movw	r1, #35383	; 0x8a37
   174b4:	movt	r1, #1
   174b8:	bl	114dc <strcmp@plt>
   174bc:	cmp	r0, #0
   174c0:	beq	174e0 <sigaltstack@plt+0x5c50>
   174c4:	add	r0, sp, #7
   174c8:	movw	r1, #35385	; 0x8a39
   174cc:	movt	r1, #1
   174d0:	bl	114dc <strcmp@plt>
   174d4:	mov	r4, r0
   174d8:	cmp	r0, #0
   174dc:	movwne	r4, #1
   174e0:	mov	r0, r4
   174e4:	sub	sp, fp, #8
   174e8:	pop	{r4, sl, fp, pc}
   174ec:	push	{r4, sl, fp, lr}
   174f0:	add	fp, sp, #8
   174f4:	mov	r4, #0
   174f8:	adds	r0, r0, #16
   174fc:	adc	r1, r4, #0
   17500:	rsb	r2, r1, #0
   17504:	eors	r2, r2, r1
   17508:	movwne	r2, #1
   1750c:	cmp	r0, #0
   17510:	blt	17530 <sigaltstack@plt+0x5ca0>
   17514:	cmp	r2, #0
   17518:	asreq	r2, r0, #31
   1751c:	eoreq	r3, r0, r0
   17520:	andeq	r2, r2, #1
   17524:	eoreq	r1, r1, r2
   17528:	orrseq	r1, r3, r1
   1752c:	beq	17538 <sigaltstack@plt+0x5ca8>
   17530:	mov	r0, r4
   17534:	pop	{r4, sl, fp, pc}
   17538:	bl	1168c <malloc@plt>
   1753c:	cmp	r0, #0
   17540:	addne	r4, r0, #8
   17544:	movne	r1, #8
   17548:	bfine	r4, r1, #0, #4
   1754c:	subne	r0, r4, r0
   17550:	strbne	r0, [r4, #-1]
   17554:	mov	r0, r4
   17558:	pop	{r4, sl, fp, pc}
   1755c:	tst	r0, #7
   17560:	bne	17578 <sigaltstack@plt+0x5ce8>
   17564:	tst	r0, #8
   17568:	bxeq	lr
   1756c:	ldrb	r1, [r0, #-1]
   17570:	sub	r0, r0, r1
   17574:	b	158fc <sigaltstack@plt+0x406c>
   17578:	push	{fp, lr}
   1757c:	mov	fp, sp
   17580:	bl	11854 <abort@plt>
   17584:	push	{r4, sl, fp, lr}
   17588:	add	fp, sp, #8
   1758c:	mov	r4, r0
   17590:	bl	11500 <wcwidth@plt>
   17594:	cmn	r0, #1
   17598:	popgt	{r4, sl, fp, pc}
   1759c:	mov	r0, r4
   175a0:	bl	115cc <iswcntrl@plt>
   175a4:	clz	r0, r0
   175a8:	lsr	r0, r0, #5
   175ac:	pop	{r4, sl, fp, pc}
   175b0:	push	{r4, r5, r6, sl, fp, lr}
   175b4:	add	fp, sp, #16
   175b8:	mov	r5, r1
   175bc:	mov	r4, r0
   175c0:	ldr	r6, [r1], #16
   175c4:	cmp	r6, r1
   175c8:	bne	175dc <sigaltstack@plt+0x5d4c>
   175cc:	ldr	r2, [r5, #4]
   175d0:	add	r6, r4, #16
   175d4:	mov	r0, r6
   175d8:	bl	11530 <memcpy@plt>
   175dc:	str	r6, [r4]
   175e0:	ldr	r0, [r5, #4]
   175e4:	str	r0, [r4, #4]
   175e8:	ldrb	r0, [r5, #8]
   175ec:	strb	r0, [r4, #8]
   175f0:	cmp	r0, #0
   175f4:	ldrne	r0, [r5, #12]
   175f8:	strne	r0, [r4, #12]
   175fc:	pop	{r4, r5, r6, sl, fp, pc}
   17600:	ubfx	r1, r0, #5, #3
   17604:	movw	r2, #35392	; 0x8a40
   17608:	movt	r2, #1
   1760c:	ldr	r1, [r2, r1, lsl #2]
   17610:	and	r0, r0, #31
   17614:	mov	r2, #1
   17618:	and	r0, r1, r2, lsl r0
   1761c:	cmp	r0, #0
   17620:	movwne	r0, #1
   17624:	bx	lr
   17628:	push	{r4, r5, r6, sl, fp, lr}
   1762c:	add	fp, sp, #16
   17630:	sub	sp, sp, #56	; 0x38
   17634:	mov	r5, r0
   17638:	bl	1162c <__ctype_get_mb_cur_max@plt>
   1763c:	cmp	r0, #2
   17640:	bcc	176cc <sigaltstack@plt+0x5e3c>
   17644:	mov	r4, #0
   17648:	str	r4, [sp, #8]
   1764c:	str	r4, [sp, #4]
   17650:	strb	r4, [sp]
   17654:	str	r5, [sp, #16]
   17658:	strb	r4, [sp, #12]
   1765c:	mov	r0, sp
   17660:	bl	166bc <sigaltstack@plt+0x4e2c>
   17664:	ldrb	r0, [sp, #24]
   17668:	cmp	r0, #0
   1766c:	beq	1767c <sigaltstack@plt+0x5dec>
   17670:	ldr	r0, [sp, #28]
   17674:	cmp	r0, #0
   17678:	beq	176c0 <sigaltstack@plt+0x5e30>
   1767c:	mov	r6, #0
   17680:	mov	r5, sp
   17684:	mov	r4, #0
   17688:	strb	r6, [sp, #12]
   1768c:	ldr	r0, [sp, #16]
   17690:	ldr	r1, [sp, #20]
   17694:	add	r0, r0, r1
   17698:	str	r0, [sp, #16]
   1769c:	mov	r0, r5
   176a0:	bl	166bc <sigaltstack@plt+0x4e2c>
   176a4:	add	r4, r4, #1
   176a8:	ldr	r0, [sp, #28]
   176ac:	ldrb	r1, [sp, #24]
   176b0:	cmp	r1, #0
   176b4:	beq	17688 <sigaltstack@plt+0x5df8>
   176b8:	cmp	r0, #0
   176bc:	bne	17688 <sigaltstack@plt+0x5df8>
   176c0:	mov	r0, r4
   176c4:	sub	sp, fp, #16
   176c8:	pop	{r4, r5, r6, sl, fp, pc}
   176cc:	mov	r0, r5
   176d0:	sub	sp, fp, #16
   176d4:	pop	{r4, r5, r6, sl, fp, lr}
   176d8:	b	11704 <strlen@plt>
   176dc:	b	176e0 <sigaltstack@plt+0x5e50>
   176e0:	push	{r4, r5, r6, r7, fp, lr}
   176e4:	add	fp, sp, #16
   176e8:	mov	r6, r2
   176ec:	mov	r4, r1
   176f0:	bl	1777c <sigaltstack@plt+0x5eec>
   176f4:	cmp	r0, #0
   176f8:	beq	17728 <sigaltstack@plt+0x5e98>
   176fc:	mov	r7, r0
   17700:	bl	11704 <strlen@plt>
   17704:	cmp	r0, r6
   17708:	bcs	17748 <sigaltstack@plt+0x5eb8>
   1770c:	add	r2, r0, #1
   17710:	mov	r0, r4
   17714:	mov	r1, r7
   17718:	bl	11530 <memcpy@plt>
   1771c:	mov	r5, #0
   17720:	mov	r0, r5
   17724:	pop	{r4, r5, r6, r7, fp, pc}
   17728:	mov	r5, #22
   1772c:	cmp	r6, #0
   17730:	movne	r0, #0
   17734:	strbne	r0, [r4]
   17738:	movne	r0, r5
   1773c:	popne	{r4, r5, r6, r7, fp, pc}
   17740:	mov	r0, r5
   17744:	pop	{r4, r5, r6, r7, fp, pc}
   17748:	mov	r5, #34	; 0x22
   1774c:	cmp	r6, #0
   17750:	beq	17770 <sigaltstack@plt+0x5ee0>
   17754:	sub	r6, r6, #1
   17758:	mov	r0, r4
   1775c:	mov	r1, r7
   17760:	mov	r2, r6
   17764:	bl	11530 <memcpy@plt>
   17768:	mov	r0, #0
   1776c:	strb	r0, [r4, r6]
   17770:	mov	r0, r5
   17774:	pop	{r4, r5, r6, r7, fp, pc}
   17778:	b	1777c <sigaltstack@plt+0x5eec>
   1777c:	mov	r1, #0
   17780:	b	117b8 <setlocale@plt>
   17784:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17788:	mov	r7, r0
   1778c:	ldr	r6, [pc, #72]	; 177dc <sigaltstack@plt+0x5f4c>
   17790:	ldr	r5, [pc, #72]	; 177e0 <sigaltstack@plt+0x5f50>
   17794:	add	r6, pc, r6
   17798:	add	r5, pc, r5
   1779c:	sub	r6, r6, r5
   177a0:	mov	r8, r1
   177a4:	mov	r9, r2
   177a8:	bl	11474 <fdopen@plt-0x20>
   177ac:	asrs	r6, r6, #2
   177b0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   177b4:	mov	r4, #0
   177b8:	add	r4, r4, #1
   177bc:	ldr	r3, [r5], #4
   177c0:	mov	r2, r9
   177c4:	mov	r1, r8
   177c8:	mov	r0, r7
   177cc:	blx	r3
   177d0:	cmp	r6, r4
   177d4:	bne	177b8 <sigaltstack@plt+0x5f28>
   177d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   177dc:	andeq	r1, r1, r0, ror r7
   177e0:	andeq	r1, r1, r8, ror #14
   177e4:	bx	lr
   177e8:	mov	r2, r1
   177ec:	mov	r1, r0
   177f0:	mov	r0, #3
   177f4:	b	11830 <__xstat64@plt>

Disassembly of section .fini:

000177f8 <.fini>:
   177f8:	push	{r3, lr}
   177fc:	pop	{r3, pc}
