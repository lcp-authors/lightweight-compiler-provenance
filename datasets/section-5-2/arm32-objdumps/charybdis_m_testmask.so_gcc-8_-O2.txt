
../repos/charybdis/modules/.libs/m_testmask.so:     file format elf32-littlearm


Disassembly of section .init:

00000584 <_init>:
 584:	push	{r3, lr}
 588:	bl	640 <call_weak_fn>
 58c:	pop	{r3, pc}

Disassembly of section .plt:

00000590 <.plt>:
 590:	push	{lr}		; (str lr, [sp, #-4]!)
 594:	ldr	lr, [pc, #4]	; 5a0 <.plt+0x10>
 598:	add	lr, pc, lr
 59c:	ldr	pc, [lr, #8]!
 5a0:	.word	0x00010a60

000005a4 <__cxa_finalize@plt>:
 5a4:	add	ip, pc, #0, 12
 5a8:	add	ip, ip, #16, 20	; 0x10000
 5ac:	ldr	pc, [ip, #2656]!	; 0xa60

000005b0 <match_esc@plt>:
 5b0:	add	ip, pc, #0, 12
 5b4:	add	ip, ip, #16, 20	; 0x10000
 5b8:	ldr	pc, [ip, #2648]!	; 0xa58

000005bc <sendto_one@plt>:
 5bc:	add	ip, pc, #0, 12
 5c0:	add	ip, ip, #16, 20	; 0x10000
 5c4:	ldr	pc, [ip, #2640]!	; 0xa50

000005c8 <collapse_esc@plt>:
 5c8:	add	ip, pc, #0, 12
 5cc:	add	ip, ip, #16, 20	; 0x10000
 5d0:	ldr	pc, [ip, #2632]!	; 0xa48

000005d4 <match_ips@plt>:
 5d4:	add	ip, pc, #0, 12
 5d8:	add	ip, ip, #16, 20	; 0x10000
 5dc:	ldr	pc, [ip, #2624]!	; 0xa40

000005e0 <memcpy@plt>:
 5e0:	add	ip, pc, #0, 12
 5e4:	add	ip, ip, #16, 20	; 0x10000
 5e8:	ldr	pc, [ip, #2616]!	; 0xa38

000005ec <__gmon_start__@plt>:
 5ec:	add	ip, pc, #0, 12
 5f0:	add	ip, ip, #16, 20	; 0x10000
 5f4:	ldr	pc, [ip, #2608]!	; 0xa30

000005f8 <strlen@plt>:
 5f8:	add	ip, pc, #0, 12
 5fc:	add	ip, ip, #16, 20	; 0x10000
 600:	ldr	pc, [ip, #2600]!	; 0xa28

00000604 <strchr@plt>:
 604:	add	ip, pc, #0, 12
 608:	add	ip, ip, #16, 20	; 0x10000
 60c:	ldr	pc, [ip, #2592]!	; 0xa20

00000610 <collapse@plt>:
 610:	add	ip, pc, #0, 12
 614:	add	ip, ip, #16, 20	; 0x10000
 618:	ldr	pc, [ip, #2584]!	; 0xa18

0000061c <match@plt>:
 61c:	add	ip, pc, #0, 12
 620:	add	ip, ip, #16, 20	; 0x10000
 624:	ldr	pc, [ip, #2576]!	; 0xa10

00000628 <sendto_one_notice@plt>:
 628:	add	ip, pc, #0, 12
 62c:	add	ip, ip, #16, 20	; 0x10000
 630:	ldr	pc, [ip, #2568]!	; 0xa08

00000634 <show_ip@plt>:
 634:	add	ip, pc, #0, 12
 638:	add	ip, ip, #16, 20	; 0x10000
 63c:	ldr	pc, [ip, #2560]!	; 0xa00

Disassembly of section .text:

00000640 <call_weak_fn>:
 640:	ldr	r3, [pc, #20]	; 65c <call_weak_fn+0x1c>
 644:	ldr	r2, [pc, #20]	; 660 <call_weak_fn+0x20>
 648:	add	r3, pc, r3
 64c:	ldr	r2, [r3, r2]
 650:	cmp	r2, #0
 654:	bxeq	lr
 658:	b	5ec <__gmon_start__@plt>
 65c:	.word	0x000109b0
 660:	.word	0x00000048

00000664 <deregister_tm_clones>:
 664:	ldr	r0, [pc, #44]	; 698 <deregister_tm_clones+0x34>
 668:	ldr	r3, [pc, #44]	; 69c <deregister_tm_clones+0x38>
 66c:	add	r0, pc, r0
 670:	add	r3, pc, r3
 674:	cmp	r3, r0
 678:	ldr	r3, [pc, #32]	; 6a0 <deregister_tm_clones+0x3c>
 67c:	add	r3, pc, r3
 680:	bxeq	lr
 684:	ldr	r2, [pc, #24]	; 6a4 <deregister_tm_clones+0x40>
 688:	ldr	r3, [r3, r2]
 68c:	cmp	r3, #0
 690:	bxeq	lr
 694:	bx	r3
 698:	.word	0x00010a5c
 69c:	.word	0x00010a58
 6a0:	.word	0x0001097c
 6a4:	.word	0x00000044

000006a8 <register_tm_clones>:
 6a8:	ldr	r0, [pc, #56]	; 6e8 <register_tm_clones+0x40>
 6ac:	ldr	r3, [pc, #56]	; 6ec <register_tm_clones+0x44>
 6b0:	add	r0, pc, r0
 6b4:	add	r3, pc, r3
 6b8:	sub	r1, r3, r0
 6bc:	ldr	r3, [pc, #44]	; 6f0 <register_tm_clones+0x48>
 6c0:	asr	r1, r1, #2
 6c4:	add	r3, pc, r3
 6c8:	add	r1, r1, r1, lsr #31
 6cc:	asrs	r1, r1, #1
 6d0:	bxeq	lr
 6d4:	ldr	r2, [pc, #24]	; 6f4 <register_tm_clones+0x4c>
 6d8:	ldr	r3, [r3, r2]
 6dc:	cmp	r3, #0
 6e0:	bxeq	lr
 6e4:	bx	r3
 6e8:	.word	0x00010a18
 6ec:	.word	0x00010a14
 6f0:	.word	0x00010934
 6f4:	.word	0x00000050

000006f8 <__do_global_dtors_aux>:
 6f8:	ldr	r3, [pc, #76]	; 74c <__do_global_dtors_aux+0x54>
 6fc:	ldr	r2, [pc, #76]	; 750 <__do_global_dtors_aux+0x58>
 700:	add	r3, pc, r3
 704:	add	r2, pc, r2
 708:	ldrb	r3, [r3]
 70c:	cmp	r3, #0
 710:	bxne	lr
 714:	ldr	r3, [pc, #56]	; 754 <__do_global_dtors_aux+0x5c>
 718:	push	{r4, lr}
 71c:	ldr	r3, [r2, r3]
 720:	cmp	r3, #0
 724:	beq	734 <__do_global_dtors_aux+0x3c>
 728:	ldr	r3, [pc, #40]	; 758 <__do_global_dtors_aux+0x60>
 72c:	ldr	r0, [pc, r3]
 730:	bl	5a4 <__cxa_finalize@plt>
 734:	bl	664 <deregister_tm_clones>
 738:	ldr	r3, [pc, #28]	; 75c <__do_global_dtors_aux+0x64>
 73c:	mov	r2, #1
 740:	add	r3, pc, r3
 744:	strb	r2, [r3]
 748:	pop	{r4, pc}
 74c:	.word	0x000109c8
 750:	.word	0x000108f4
 754:	.word	0x00000040
 758:	.word	0x00010924
 75c:	.word	0x00010988

00000760 <frame_dummy>:
 760:	b	6a8 <register_tm_clones>

00000764 <mo_testmask>:
 764:	strd	r4, [sp, #-36]!	; 0xffffffdc
 768:	strd	r6, [sp, #8]
 76c:	strd	r8, [sp, #16]
 770:	mov	r8, r2
 774:	strd	sl, [sp, #24]
 778:	add	fp, sp, #32
 77c:	str	lr, [sp, #32]
 780:	sub	sp, sp, #60	; 0x3c
 784:	ldr	r9, [pc, #868]	; af0 <mo_testmask+0x38c>
 788:	str	r3, [fp, #-40]	; 0xffffffd8
 78c:	ldr	r3, [fp, #4]
 790:	add	r9, pc, r9
 794:	ldr	r5, [r3, #4]
 798:	mov	r0, r5
 79c:	bl	5f8 <strlen@plt>
 7a0:	add	r3, r0, #8
 7a4:	mov	r1, r5
 7a8:	bic	r3, r3, #7
 7ac:	add	r2, r0, #1
 7b0:	sub	sp, sp, r3
 7b4:	add	r5, sp, #24
 7b8:	mov	r0, r5
 7bc:	bl	5e0 <memcpy@plt>
 7c0:	mov	r0, r5
 7c4:	bl	610 <collapse@plt>
 7c8:	mov	r0, r5
 7cc:	mov	r1, #64	; 0x40
 7d0:	bl	604 <strchr@plt>
 7d4:	subs	sl, r0, #0
 7d8:	beq	8f0 <mo_testmask+0x18c>
 7dc:	mov	r7, sl
 7e0:	mov	r4, #0
 7e4:	mov	r1, #33	; 0x21
 7e8:	mov	r0, r5
 7ec:	strb	r4, [r7], #1
 7f0:	bl	604 <strchr@plt>
 7f4:	cmp	r0, #0
 7f8:	beq	a10 <mo_testmask+0x2ac>
 7fc:	mov	r6, r0
 800:	strb	r4, [r6], #1
 804:	cmp	r6, r4
 808:	beq	8f0 <mo_testmask+0x18c>
 80c:	ldrb	r1, [r6]
 810:	clz	r3, r7
 814:	lsr	r3, r3, #5
 818:	cmp	r1, #0
 81c:	moveq	r3, #1
 820:	cmp	r3, #0
 824:	bne	8f0 <mo_testmask+0x18c>
 828:	ldrb	r2, [sl, #1]
 82c:	cmp	r2, #0
 830:	beq	8f0 <mo_testmask+0x18c>
 834:	ldr	r2, [fp, #-40]	; 0xffffffd8
 838:	cmp	r2, #2
 83c:	bgt	a1c <mo_testmask+0x2b8>
 840:	str	r3, [fp, #-40]	; 0xffffffd8
 844:	ldr	r3, [pc, #680]	; af4 <mo_testmask+0x390>
 848:	ldr	r3, [r9, r3]
 84c:	ldr	sl, [r3]
 850:	cmp	sl, #0
 854:	beq	ae4 <mo_testmask+0x380>
 858:	ldr	r3, [pc, #664]	; af8 <mo_testmask+0x394>
 85c:	str	r9, [fp, #-64]	; 0xffffffc0
 860:	add	r3, pc, r3
 864:	str	r3, [fp, #-48]	; 0xffffffd0
 868:	mov	r3, #0
 86c:	str	r3, [fp, #-52]	; 0xffffffcc
 870:	str	r3, [fp, #-44]	; 0xffffffd4
 874:	ldr	r3, [pc, #640]	; afc <mo_testmask+0x398>
 878:	add	r3, pc, r3
 87c:	str	r3, [fp, #-68]	; 0xffffffbc
 880:	b	8a8 <mo_testmask+0x144>
 884:	ldr	r4, [fp, #-48]	; 0xffffffd0
 888:	add	r1, r9, #152	; 0x98
 88c:	mov	r0, r6
 890:	bl	61c <match@plt>
 894:	cmp	r0, #0
 898:	bne	91c <mo_testmask+0x1b8>
 89c:	ldr	sl, [sl, #8]
 8a0:	cmp	sl, #0
 8a4:	beq	9b4 <mo_testmask+0x250>
 8a8:	ldr	r9, [sl]
 8ac:	ldrh	r1, [r9, #80]	; 0x50
 8b0:	cmp	r1, #64	; 0x40
 8b4:	bne	89c <mo_testmask+0x138>
 8b8:	ldr	r1, [r9, #24]
 8bc:	cmp	r1, #0
 8c0:	beq	89c <mo_testmask+0x138>
 8c4:	ldrb	r1, [r9, #291]	; 0x123
 8c8:	cmp	r1, #0
 8cc:	beq	884 <mo_testmask+0x120>
 8d0:	mov	r1, r9
 8d4:	mov	r0, r8
 8d8:	bl	634 <show_ip@plt>
 8dc:	cmp	r0, #0
 8e0:	addne	r4, r9, #288	; 0x120
 8e4:	addne	r4, r4, #3
 8e8:	ldreq	r4, [fp, #-68]	; 0xffffffbc
 8ec:	b	888 <mo_testmask+0x124>
 8f0:	ldr	r1, [pc, #520]	; b00 <mo_testmask+0x39c>
 8f4:	mov	r0, r8
 8f8:	add	r1, pc, r1
 8fc:	bl	628 <sendto_one_notice@plt>
 900:	sub	sp, fp, #32
 904:	ldrd	r4, [sp]
 908:	ldrd	r6, [sp, #8]
 90c:	ldrd	r8, [sp, #16]
 910:	ldrd	sl, [sp, #24]
 914:	add	sp, sp, #32
 918:	pop	{pc}		; (ldr pc, [sp], #4)
 91c:	add	r1, r9, #163	; 0xa3
 920:	mov	r0, r7
 924:	bl	61c <match@plt>
 928:	cmp	r0, #0
 92c:	beq	a78 <mo_testmask+0x314>
 930:	cmp	r5, #0
 934:	beq	94c <mo_testmask+0x1e8>
 938:	add	r1, r9, #88	; 0x58
 93c:	mov	r0, r5
 940:	bl	61c <match@plt>
 944:	cmp	r0, #0
 948:	beq	89c <mo_testmask+0x138>
 94c:	ldr	r3, [fp, #-40]	; 0xffffffd8
 950:	cmp	r3, #0
 954:	beq	970 <mo_testmask+0x20c>
 958:	add	r1, r9, #344	; 0x158
 95c:	ldr	r0, [fp, #-40]	; 0xffffffd8
 960:	add	r1, r1, #1
 964:	bl	5b0 <match_esc@plt>
 968:	cmp	r0, #0
 96c:	beq	89c <mo_testmask+0x138>
 970:	ldr	r1, [r9, #64]	; 0x40
 974:	and	r3, r1, #8192	; 0x2000
 978:	str	r3, [fp, #-60]	; 0xffffffc4
 97c:	mov	r3, #0
 980:	str	r3, [fp, #-56]	; 0xffffffc8
 984:	ldrd	r2, [fp, #-60]	; 0xffffffc4
 988:	orrs	r3, r2, r3
 98c:	beq	99c <mo_testmask+0x238>
 990:	ldrh	r3, [r9, #80]	; 0x50
 994:	cmp	r3, #64	; 0x40
 998:	beq	ad4 <mo_testmask+0x370>
 99c:	ldr	r3, [fp, #-44]	; 0xffffffd4
 9a0:	ldr	sl, [sl, #8]
 9a4:	add	r3, r3, #1
 9a8:	cmp	sl, #0
 9ac:	str	r3, [fp, #-44]	; 0xffffffd4
 9b0:	bne	8a8 <mo_testmask+0x144>
 9b4:	ldr	r9, [fp, #-64]	; 0xffffffc0
 9b8:	cmp	r5, #0
 9bc:	add	r3, r8, #88	; 0x58
 9c0:	beq	ab8 <mo_testmask+0x354>
 9c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
 9c8:	cmp	r2, #0
 9cc:	beq	ac4 <mo_testmask+0x360>
 9d0:	ldr	r2, [pc, #300]	; b04 <mo_testmask+0x3a0>
 9d4:	mov	r0, r8
 9d8:	ldr	ip, [fp, #-52]	; 0xffffffcc
 9dc:	ldr	r1, [pc, #292]	; b08 <mo_testmask+0x3a4>
 9e0:	ldr	r2, [r9, r2]
 9e4:	str	ip, [sp]
 9e8:	ldr	ip, [fp, #-44]	; 0xffffffd4
 9ec:	add	r1, pc, r1
 9f0:	add	r2, r2, #88	; 0x58
 9f4:	str	ip, [sp, #4]
 9f8:	ldr	ip, [fp, #-40]	; 0xffffffd8
 9fc:	str	r5, [sp, #8]
 a00:	strd	r6, [sp, #12]
 a04:	str	ip, [sp, #20]
 a08:	bl	5bc <sendto_one@plt>
 a0c:	b	900 <mo_testmask+0x19c>
 a10:	mov	r6, r5
 a14:	mov	r5, r0
 a18:	b	80c <mo_testmask+0xa8>
 a1c:	ldr	r3, [fp, #4]
 a20:	ldr	r3, [r3, #8]
 a24:	cmp	r3, #0
 a28:	str	r3, [fp, #-40]	; 0xffffffd8
 a2c:	beq	844 <mo_testmask+0xe0>
 a30:	ldrb	r3, [r3]
 a34:	cmp	r3, #0
 a38:	beq	840 <mo_testmask+0xdc>
 a3c:	ldr	r4, [fp, #-40]	; 0xffffffd8
 a40:	mov	r0, r4
 a44:	bl	5f8 <strlen@plt>
 a48:	add	r3, r0, #8
 a4c:	add	r2, r0, #1
 a50:	bic	r3, r3, #7
 a54:	mov	r1, r4
 a58:	sub	sp, sp, r3
 a5c:	add	sl, sp, #24
 a60:	mov	r0, sl
 a64:	str	sl, [fp, #-40]	; 0xffffffd8
 a68:	bl	5e0 <memcpy@plt>
 a6c:	mov	r0, sl
 a70:	bl	5c8 <collapse_esc@plt>
 a74:	b	844 <mo_testmask+0xe0>
 a78:	add	r1, r9, #227	; 0xe3
 a7c:	mov	r0, r7
 a80:	bl	61c <match@plt>
 a84:	cmp	r0, #0
 a88:	bne	930 <mo_testmask+0x1cc>
 a8c:	mov	r1, r4
 a90:	mov	r0, r7
 a94:	bl	61c <match@plt>
 a98:	cmp	r0, #0
 a9c:	bne	930 <mo_testmask+0x1cc>
 aa0:	mov	r1, r4
 aa4:	mov	r0, r7
 aa8:	bl	5d4 <match_ips@plt>
 aac:	cmp	r0, #0
 ab0:	bne	930 <mo_testmask+0x1cc>
 ab4:	b	89c <mo_testmask+0x138>
 ab8:	ldr	r5, [pc, #76]	; b0c <mo_testmask+0x3a8>
 abc:	add	r5, pc, r5
 ac0:	b	9c4 <mo_testmask+0x260>
 ac4:	ldr	r2, [pc, #68]	; b10 <mo_testmask+0x3ac>
 ac8:	add	r2, pc, r2
 acc:	str	r2, [fp, #-40]	; 0xffffffd8
 ad0:	b	9d0 <mo_testmask+0x26c>
 ad4:	ldr	r3, [fp, #-52]	; 0xffffffcc
 ad8:	add	r3, r3, #1
 adc:	str	r3, [fp, #-52]	; 0xffffffcc
 ae0:	b	89c <mo_testmask+0x138>
 ae4:	str	sl, [fp, #-52]	; 0xffffffcc
 ae8:	str	sl, [fp, #-44]	; 0xffffffd4
 aec:	b	9b8 <mo_testmask+0x254>
 af0:	.word	0x00010868
 af4:	.word	0x0000004c
 af8:	.word	0x00000310
 afc:	.word	0x00000308
 b00:	.word	0x00000290
 b04:	.word	0x00000054
 b08:	.word	0x000001b0
 b0c:	.word	0x000000c8
 b10:	.word	0x000000bc

Disassembly of section .fini:

00000b14 <_fini>:
 b14:	push	{r3, lr}
 b18:	pop	{r3, pc}
