
../repos/dvidelabs-flatcc-3b39ef7/samples/reflection/bfbs2json:     file format elf32-littlearm


Disassembly of section .init:

0001086c <.init>:
   1086c:	push	{r3, lr}
   10870:	bl	10a30 <_start@@Base+0x3c>
   10874:	pop	{r3, pc}

Disassembly of section .plt:

00010878 <printf@plt-0x14>:
   10878:	push	{lr}		; (str lr, [sp, #-4]!)
   1087c:	ldr	lr, [pc, #4]	; 10888 <printf@plt-0x4>
   10880:	add	lr, pc, lr
   10884:	ldr	pc, [lr, #8]!
   10888:	andeq	r1, r1, r8, ror r7

0001088c <printf@plt>:
   1088c:	add	ip, pc, #0, 12
   10890:	add	ip, ip, #69632	; 0x11000
   10894:	ldr	pc, [ip, #1912]!	; 0x778

00010898 <fopen@plt>:
   10898:	add	ip, pc, #0, 12
   1089c:	add	ip, ip, #69632	; 0x11000
   108a0:	ldr	pc, [ip, #1904]!	; 0x770

000108a4 <free@plt>:
   108a4:	add	ip, pc, #0, 12
   108a8:	add	ip, ip, #69632	; 0x11000
   108ac:	ldr	pc, [ip, #1896]!	; 0x768

000108b0 <ftell@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #69632	; 0x11000
   108b8:	ldr	pc, [ip, #1888]!	; 0x760

000108bc <rewind@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #69632	; 0x11000
   108c4:	ldr	pc, [ip, #1880]!	; 0x758

000108c8 <fwrite@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #69632	; 0x11000
   108d0:	ldr	pc, [ip, #1872]!	; 0x750

000108d4 <fread@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #69632	; 0x11000
   108dc:	ldr	pc, [ip, #1864]!	; 0x748

000108e0 <puts@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #69632	; 0x11000
   108e8:	ldr	pc, [ip, #1856]!	; 0x740

000108ec <malloc@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #69632	; 0x11000
   108f4:	ldr	pc, [ip, #1848]!	; 0x738

000108f8 <__libc_start_main@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #69632	; 0x11000
   10900:	ldr	pc, [ip, #1840]!	; 0x730

00010904 <__gmon_start__@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #69632	; 0x11000
   1090c:	ldr	pc, [ip, #1832]!	; 0x728

00010910 <exit@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #69632	; 0x11000
   10918:	ldr	pc, [ip, #1824]!	; 0x720

0001091c <fprintf@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #69632	; 0x11000
   10924:	ldr	pc, [ip, #1816]!	; 0x718

00010928 <putchar@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #69632	; 0x11000
   10930:	ldr	pc, [ip, #1808]!	; 0x710

00010934 <fclose@plt>:
   10934:	add	ip, pc, #0, 12
   10938:	add	ip, ip, #69632	; 0x11000
   1093c:	ldr	pc, [ip, #1800]!	; 0x708

00010940 <fseek@plt>:
   10940:	add	ip, pc, #0, 12
   10944:	add	ip, ip, #69632	; 0x11000
   10948:	ldr	pc, [ip, #1792]!	; 0x700

0001094c <abort@plt>:
   1094c:	add	ip, pc, #0, 12
   10950:	add	ip, ip, #69632	; 0x11000
   10954:	ldr	pc, [ip, #1784]!	; 0x6f8

00010958 <__assert_fail@plt>:
   10958:	add	ip, pc, #0, 12
   1095c:	add	ip, ip, #69632	; 0x11000
   10960:	ldr	pc, [ip, #1776]!	; 0x6f0

Disassembly of section .text:

00010964 <main@@Base-0x24>:
   10964:	push	{r4, lr}
   10968:	mov	r2, #147	; 0x93
   1096c:	ldr	r3, [pc, #8]	; 1097c <__assert_fail@plt+0x24>
   10970:	ldr	r1, [pc, #8]	; 10980 <__assert_fail@plt+0x28>
   10974:	ldr	r0, [pc, #8]	; 10984 <__assert_fail@plt+0x2c>
   10978:	bl	10958 <__assert_fail@plt>
   1097c:	andeq	r1, r1, r4, asr r8
   10980:	andeq	r1, r1, r8, lsr #20
   10984:	andeq	r1, r1, r8, lsl #21

00010988 <main@@Base>:
   10988:	cmp	r0, #2
   1098c:	bne	10998 <main@@Base+0x10>
   10990:	ldr	r0, [r1, #4]
   10994:	b	11640 <load_and_dump_schema@@Base>
   10998:	push	{r4, lr}
   1099c:	mov	r2, #28
   109a0:	ldr	r4, [pc, #60]	; 109e4 <main@@Base+0x5c>
   109a4:	mov	r1, #1
   109a8:	ldr	r0, [pc, #56]	; 109e8 <main@@Base+0x60>
   109ac:	ldr	r3, [r4]
   109b0:	bl	108c8 <fwrite@plt>
   109b4:	ldr	r3, [r4]
   109b8:	mov	r2, #74	; 0x4a
   109bc:	mov	r1, #1
   109c0:	ldr	r0, [pc, #36]	; 109ec <main@@Base+0x64>
   109c4:	bl	108c8 <fwrite@plt>
   109c8:	ldr	r3, [r4]
   109cc:	mov	r2, #180	; 0xb4
   109d0:	mov	r1, #1
   109d4:	ldr	r0, [pc, #20]	; 109f0 <main@@Base+0x68>
   109d8:	bl	108c8 <fwrite@plt>
   109dc:	mvn	r0, #0
   109e0:	bl	10910 <exit@plt>
   109e4:	andeq	r2, r2, r0, rrx
   109e8:	andeq	r1, r1, r8, asr #26
   109ec:	andeq	r1, r1, r8, ror #26
   109f0:			; <UNDEFINED> instruction: 0x00011db4

000109f4 <_start@@Base>:
   109f4:	mov	fp, #0
   109f8:	mov	lr, #0
   109fc:	pop	{r1}		; (ldr r1, [sp], #4)
   10a00:	mov	r2, sp
   10a04:	push	{r2}		; (str r2, [sp, #-4]!)
   10a08:	push	{r0}		; (str r0, [sp, #-4]!)
   10a0c:	ldr	ip, [pc, #16]	; 10a24 <_start@@Base+0x30>
   10a10:	push	{ip}		; (str ip, [sp, #-4]!)
   10a14:	ldr	r0, [pc, #12]	; 10a28 <_start@@Base+0x34>
   10a18:	ldr	r3, [pc, #12]	; 10a2c <_start@@Base+0x38>
   10a1c:	bl	108f8 <__libc_start_main@plt>
   10a20:	bl	1094c <abort@plt>
   10a24:	andeq	r1, r1, r4, asr #16
   10a28:	andeq	r0, r1, r8, lsl #19
   10a2c:	andeq	r1, r1, r4, ror #15
   10a30:	ldr	r3, [pc, #20]	; 10a4c <_start@@Base+0x58>
   10a34:	ldr	r2, [pc, #20]	; 10a50 <_start@@Base+0x5c>
   10a38:	add	r3, pc, r3
   10a3c:	ldr	r2, [r3, r2]
   10a40:	cmp	r2, #0
   10a44:	bxeq	lr
   10a48:	b	10904 <__gmon_start__@plt>
   10a4c:	andeq	r1, r1, r0, asr #11
   10a50:	andeq	r0, r0, r4, asr r0
   10a54:	ldr	r3, [pc, #28]	; 10a78 <_start@@Base+0x84>
   10a58:	ldr	r0, [pc, #28]	; 10a7c <_start@@Base+0x88>
   10a5c:	sub	r3, r3, r0
   10a60:	cmp	r3, #6
   10a64:	bxls	lr
   10a68:	ldr	r3, [pc, #16]	; 10a80 <_start@@Base+0x8c>
   10a6c:	cmp	r3, #0
   10a70:	bxeq	lr
   10a74:	bx	r3
   10a78:	andeq	r2, r2, r3, rrx
   10a7c:	andeq	r2, r2, r0, rrx
   10a80:	andeq	r0, r0, r0
   10a84:	ldr	r1, [pc, #36]	; 10ab0 <_start@@Base+0xbc>
   10a88:	ldr	r0, [pc, #36]	; 10ab4 <_start@@Base+0xc0>
   10a8c:	sub	r1, r1, r0
   10a90:	asr	r1, r1, #2
   10a94:	add	r1, r1, r1, lsr #31
   10a98:	asrs	r1, r1, #1
   10a9c:	bxeq	lr
   10aa0:	ldr	r3, [pc, #16]	; 10ab8 <_start@@Base+0xc4>
   10aa4:	cmp	r3, #0
   10aa8:	bxeq	lr
   10aac:	bx	r3
   10ab0:	andeq	r2, r2, r0, rrx
   10ab4:	andeq	r2, r2, r0, rrx
   10ab8:	andeq	r0, r0, r0
   10abc:	push	{r4, lr}
   10ac0:	ldr	r4, [pc, #24]	; 10ae0 <_start@@Base+0xec>
   10ac4:	ldrb	r3, [r4]
   10ac8:	cmp	r3, #0
   10acc:	popne	{r4, pc}
   10ad0:	bl	10a54 <_start@@Base+0x60>
   10ad4:	mov	r3, #1
   10ad8:	strb	r3, [r4]
   10adc:	pop	{r4, pc}
   10ae0:	andeq	r2, r2, r4, rrx
   10ae4:	ldr	r0, [pc, #40]	; 10b14 <_start@@Base+0x120>
   10ae8:	ldr	r3, [r0]
   10aec:	cmp	r3, #0
   10af0:	bne	10af8 <_start@@Base+0x104>
   10af4:	b	10a84 <_start@@Base+0x90>
   10af8:	ldr	r3, [pc, #24]	; 10b18 <_start@@Base+0x124>
   10afc:	cmp	r3, #0
   10b00:	beq	10af4 <_start@@Base+0x100>
   10b04:	push	{r4, lr}
   10b08:	blx	r3
   10b0c:	pop	{r4, lr}
   10b10:	b	10a84 <_start@@Base+0x90>
   10b14:	andeq	r1, r2, r4, lsl pc
   10b18:	andeq	r0, r0, r0

00010b1c <print_type@@Base>:
   10b1c:	push	{r4, lr}
   10b20:	mov	r4, r0
   10b24:	mov	r0, #123	; 0x7b
   10b28:	bl	10928 <putchar@plt>
   10b2c:	cmp	r4, #0
   10b30:	beq	10c58 <print_type@@Base+0x13c>
   10b34:	ldr	r3, [r4]
   10b38:	sub	r3, r4, r3
   10b3c:	ldrh	r2, [r3]
   10b40:	cmp	r2, #5
   10b44:	bls	10bd0 <print_type@@Base+0xb4>
   10b48:	ldrh	r1, [r3, #4]
   10b4c:	cmp	r1, #0
   10b50:	moveq	r1, #1
   10b54:	bne	10bdc <print_type@@Base+0xc0>
   10b58:	cmp	r2, #7
   10b5c:	bls	10bd0 <print_type@@Base+0xb4>
   10b60:	ldrh	r0, [r3, #6]
   10b64:	cmp	r0, #0
   10b68:	beq	10ba8 <print_type@@Base+0x8c>
   10b6c:	cmp	r1, #0
   10b70:	beq	10c34 <print_type@@Base+0x118>
   10b74:	ldrh	r3, [r3, #4]
   10b78:	cmp	r3, #0
   10b7c:	beq	10c50 <print_type@@Base+0x134>
   10b80:	ldrb	r3, [r4, r3]
   10b84:	cmp	r3, #16
   10b88:	ldrhi	r1, [pc, #252]	; 10c8c <print_type@@Base+0x170>
   10b8c:	bls	10c7c <print_type@@Base+0x160>
   10b90:	ldr	r0, [pc, #248]	; 10c90 <print_type@@Base+0x174>
   10b94:	bl	1088c <printf@plt>
   10b98:	ldr	r3, [r4]
   10b9c:	mov	r1, #0
   10ba0:	sub	r3, r4, r3
   10ba4:	ldrh	r2, [r3]
   10ba8:	cmp	r2, #9
   10bac:	bls	10bd0 <print_type@@Base+0xb4>
   10bb0:	ldrh	r3, [r3, #8]
   10bb4:	cmp	r3, #0
   10bb8:	beq	10bd0 <print_type@@Base+0xb4>
   10bbc:	cmp	r1, #0
   10bc0:	beq	10c10 <print_type@@Base+0xf4>
   10bc4:	ldr	r1, [r4, r3]
   10bc8:	ldr	r0, [pc, #196]	; 10c94 <print_type@@Base+0x178>
   10bcc:	bl	1088c <printf@plt>
   10bd0:	mov	r0, #125	; 0x7d
   10bd4:	pop	{r4, lr}
   10bd8:	b	10928 <putchar@plt>
   10bdc:	ldrb	r3, [r4, r1]
   10be0:	ldr	r0, [pc, #176]	; 10c98 <print_type@@Base+0x17c>
   10be4:	cmp	r3, #16
   10be8:	ldrls	r2, [pc, #172]	; 10c9c <print_type@@Base+0x180>
   10bec:	ldrhi	r1, [pc, #152]	; 10c8c <print_type@@Base+0x170>
   10bf0:	addls	r3, r2, r3, lsl #2
   10bf4:	ldrls	r1, [r3, #68]	; 0x44
   10bf8:	bl	1088c <printf@plt>
   10bfc:	ldr	r3, [r4]
   10c00:	mov	r1, #0
   10c04:	sub	r3, r4, r3
   10c08:	ldrh	r2, [r3]
   10c0c:	b	10b58 <print_type@@Base+0x3c>
   10c10:	mov	r0, #44	; 0x2c
   10c14:	bl	10928 <putchar@plt>
   10c18:	ldr	r3, [r4]
   10c1c:	sub	r3, r4, r3
   10c20:	ldrh	r2, [r3]
   10c24:	cmp	r2, #9
   10c28:	bhi	10c6c <print_type@@Base+0x150>
   10c2c:	mvn	r1, #0
   10c30:	b	10bc8 <print_type@@Base+0xac>
   10c34:	mov	r0, #44	; 0x2c
   10c38:	bl	10928 <putchar@plt>
   10c3c:	ldr	r3, [r4]
   10c40:	sub	r3, r4, r3
   10c44:	ldrh	r2, [r3]
   10c48:	cmp	r2, #5
   10c4c:	bhi	10b74 <print_type@@Base+0x58>
   10c50:	ldr	r1, [pc, #72]	; 10ca0 <print_type@@Base+0x184>
   10c54:	b	10b90 <print_type@@Base+0x74>
   10c58:	ldr	r3, [pc, #68]	; 10ca4 <print_type@@Base+0x188>
   10c5c:	mov	r2, #147	; 0x93
   10c60:	ldr	r1, [pc, #64]	; 10ca8 <print_type@@Base+0x18c>
   10c64:	ldr	r0, [pc, #64]	; 10cac <print_type@@Base+0x190>
   10c68:	bl	10958 <__assert_fail@plt>
   10c6c:	ldrh	r3, [r3, #8]
   10c70:	cmp	r3, #0
   10c74:	bne	10bc4 <print_type@@Base+0xa8>
   10c78:	b	10c2c <print_type@@Base+0x110>
   10c7c:	ldr	r2, [pc, #24]	; 10c9c <print_type@@Base+0x180>
   10c80:	add	r3, r2, r3, lsl #2
   10c84:	ldr	r1, [r3, #68]	; 0x44
   10c88:	b	10b90 <print_type@@Base+0x74>
   10c8c:	andeq	r1, r1, r8, lsr #26
   10c90:	andeq	r1, r1, ip, asr #21
   10c94:	ldrdeq	r1, [r1], -ip
   10c98:			; <UNDEFINED> instruction: 0x00011ab8
   10c9c:	andeq	r1, r1, r4, asr r8
   10ca0:			; <UNDEFINED> instruction: 0x00011ab0
   10ca4:	andeq	r1, r1, r0, ror r8
   10ca8:	andeq	r1, r1, r8, lsr #20
   10cac:	andeq	r1, r1, r8, lsl #21

00010cb0 <print_object@@Base>:
   10cb0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10cb4:	subs	sl, r0, #0
   10cb8:	beq	11020 <print_object@@Base+0x370>
   10cbc:	ldr	r3, [sl]
   10cc0:	sub	r3, sl, r3
   10cc4:	ldrh	r2, [r3]
   10cc8:	cmp	r2, #7
   10ccc:	bhi	10ce4 <print_object@@Base+0x34>
   10cd0:	ldr	r3, [pc, #860]	; 11034 <print_object@@Base+0x384>
   10cd4:	mov	r2, #224	; 0xe0
   10cd8:	ldr	r1, [pc, #856]	; 11038 <print_object@@Base+0x388>
   10cdc:	ldr	r0, [pc, #856]	; 1103c <print_object@@Base+0x38c>
   10ce0:	bl	10958 <__assert_fail@plt>
   10ce4:	ldrh	r2, [r3, #6]
   10ce8:	cmp	r2, #0
   10cec:	beq	10cd0 <print_object@@Base+0x20>
   10cf0:	ldrh	r1, [r3, #4]
   10cf4:	ldr	r9, [sl, r2]
   10cf8:	add	r2, sl, r2
   10cfc:	add	r9, r9, #4
   10d00:	cmp	r1, #0
   10d04:	add	r9, r2, r9
   10d08:	beq	1100c <print_object@@Base+0x35c>
   10d0c:	ldr	r3, [sl, r1]
   10d10:	add	r1, sl, r1
   10d14:	add	r3, r3, #4
   10d18:	add	r1, r1, r3
   10d1c:	ldr	r0, [pc, #796]	; 11040 <print_object@@Base+0x390>
   10d20:	bl	1088c <printf@plt>
   10d24:	ldr	r0, [pc, #792]	; 11044 <print_object@@Base+0x394>
   10d28:	bl	1088c <printf@plt>
   10d2c:	cmp	r9, #0
   10d30:	beq	10f30 <print_object@@Base+0x280>
   10d34:	ldr	r3, [r9, #-4]
   10d38:	cmp	r3, #0
   10d3c:	beq	10f30 <print_object@@Base+0x280>
   10d40:	ldr	fp, [pc, #768]	; 11048 <print_object@@Base+0x398>
   10d44:	mov	r8, r9
   10d48:	mov	r7, #0
   10d4c:	cmp	r3, r7
   10d50:	mov	r5, r8
   10d54:	bls	10ff8 <print_object@@Base+0x348>
   10d58:	ldr	r6, [r8]
   10d5c:	add	r8, r8, #4
   10d60:	adds	r4, r5, r6
   10d64:	beq	10fe4 <print_object@@Base+0x334>
   10d68:	ldr	r3, [r5, r6]
   10d6c:	sub	r3, r4, r3
   10d70:	ldrh	r2, [r3]
   10d74:	cmp	r2, #5
   10d78:	bhi	10d90 <print_object@@Base+0xe0>
   10d7c:	ldr	r3, [pc, #712]	; 1104c <print_object@@Base+0x39c>
   10d80:	mov	r2, #195	; 0xc3
   10d84:	ldr	r1, [pc, #684]	; 11038 <print_object@@Base+0x388>
   10d88:	ldr	r0, [pc, #684]	; 1103c <print_object@@Base+0x38c>
   10d8c:	bl	10958 <__assert_fail@plt>
   10d90:	ldrh	r1, [r3, #4]
   10d94:	cmp	r1, #0
   10d98:	beq	10d7c <print_object@@Base+0xcc>
   10d9c:	ldr	r3, [r4, r1]
   10da0:	add	r1, r4, r1
   10da4:	add	r3, r3, #4
   10da8:	add	r1, r1, r3
   10dac:	mov	r0, fp
   10db0:	bl	1088c <printf@plt>
   10db4:	ldr	r3, [r5, r6]
   10db8:	sub	r3, r4, r3
   10dbc:	ldrh	r2, [r3]
   10dc0:	cmp	r2, #7
   10dc4:	bhi	10ddc <print_object@@Base+0x12c>
   10dc8:	ldr	r3, [pc, #640]	; 11050 <print_object@@Base+0x3a0>
   10dcc:	mov	r2, #201	; 0xc9
   10dd0:	ldr	r1, [pc, #608]	; 11038 <print_object@@Base+0x388>
   10dd4:	ldr	r0, [pc, #608]	; 1103c <print_object@@Base+0x38c>
   10dd8:	bl	10958 <__assert_fail@plt>
   10ddc:	ldrh	r3, [r3, #6]
   10de0:	cmp	r3, #0
   10de4:	beq	10dc8 <print_object@@Base+0x118>
   10de8:	ldr	r0, [r4, r3]
   10dec:	add	r3, r4, r3
   10df0:	add	r0, r3, r0
   10df4:	bl	10b1c <print_type@@Base>
   10df8:	ldr	r3, [r5, r6]
   10dfc:	sub	r3, r4, r3
   10e00:	ldrh	r2, [r3]
   10e04:	cmp	r2, #9
   10e08:	bls	10f00 <print_object@@Base+0x250>
   10e0c:	ldrh	r1, [r3, #8]
   10e10:	cmp	r1, #0
   10e14:	beq	10e30 <print_object@@Base+0x180>
   10e18:	ldrh	r1, [r4, r1]
   10e1c:	ldr	r0, [pc, #560]	; 11054 <print_object@@Base+0x3a4>
   10e20:	bl	1088c <printf@plt>
   10e24:	ldr	r3, [r5, r6]
   10e28:	sub	r3, r4, r3
   10e2c:	ldrh	r2, [r3]
   10e30:	cmp	r2, #13
   10e34:	bls	10f00 <print_object@@Base+0x250>
   10e38:	ldrh	r1, [r3, #12]
   10e3c:	cmp	r1, #0
   10e40:	beq	10e5c <print_object@@Base+0x1ac>
   10e44:	ldrd	r2, [r4, r1]
   10e48:	ldr	r0, [pc, #520]	; 11058 <print_object@@Base+0x3a8>
   10e4c:	bl	1088c <printf@plt>
   10e50:	ldr	r3, [r5, r6]
   10e54:	sub	r3, r4, r3
   10e58:	ldrh	r2, [r3]
   10e5c:	cmp	r2, #15
   10e60:	bls	10f00 <print_object@@Base+0x250>
   10e64:	ldrh	r1, [r3, #14]
   10e68:	cmp	r1, #0
   10e6c:	beq	10e8c <print_object@@Base+0x1dc>
   10e70:	add	r1, r4, r1
   10e74:	ldr	r0, [pc, #480]	; 1105c <print_object@@Base+0x3ac>
   10e78:	ldrd	r2, [r1]
   10e7c:	bl	1088c <printf@plt>
   10e80:	ldr	r3, [r5, r6]
   10e84:	sub	r3, r4, r3
   10e88:	ldrh	r2, [r3]
   10e8c:	cmp	r2, #19
   10e90:	bls	10f00 <print_object@@Base+0x250>
   10e94:	ldrh	r1, [r3, #18]
   10e98:	cmp	r1, #0
   10e9c:	beq	10ecc <print_object@@Base+0x21c>
   10ea0:	ldrb	r1, [r4, r1]
   10ea4:	ldr	r2, [pc, #436]	; 11060 <print_object@@Base+0x3b0>
   10ea8:	ldr	r3, [pc, #436]	; 11064 <print_object@@Base+0x3b4>
   10eac:	cmp	r1, #0
   10eb0:	movne	r3, r2
   10eb4:	mov	r1, r3
   10eb8:	ldr	r0, [pc, #424]	; 11068 <print_object@@Base+0x3b8>
   10ebc:	bl	1088c <printf@plt>
   10ec0:	ldr	r3, [r5, r6]
   10ec4:	sub	r3, r4, r3
   10ec8:	ldrh	r2, [r3]
   10ecc:	cmp	r2, #21
   10ed0:	bls	10f00 <print_object@@Base+0x250>
   10ed4:	ldrh	r3, [r3, #20]
   10ed8:	cmp	r3, #0
   10edc:	beq	10f00 <print_object@@Base+0x250>
   10ee0:	ldrb	r1, [r4, r3]
   10ee4:	ldr	r2, [pc, #372]	; 11060 <print_object@@Base+0x3b0>
   10ee8:	ldr	r3, [pc, #372]	; 11064 <print_object@@Base+0x3b4>
   10eec:	cmp	r1, #0
   10ef0:	movne	r3, r2
   10ef4:	ldr	r0, [pc, #368]	; 1106c <print_object@@Base+0x3bc>
   10ef8:	mov	r1, r3
   10efc:	bl	1088c <printf@plt>
   10f00:	mov	r0, #125	; 0x7d
   10f04:	bl	10928 <putchar@plt>
   10f08:	ldr	r3, [r9, #-4]
   10f0c:	add	r7, r7, #1
   10f10:	cmp	r7, r3
   10f14:	bcs	10f30 <print_object@@Base+0x280>
   10f18:	cmp	r7, #0
   10f1c:	beq	10d4c <print_object@@Base+0x9c>
   10f20:	mov	r0, #44	; 0x2c
   10f24:	bl	10928 <putchar@plt>
   10f28:	ldr	r3, [r9, #-4]
   10f2c:	b	10d4c <print_object@@Base+0x9c>
   10f30:	mov	r0, #93	; 0x5d
   10f34:	bl	10928 <putchar@plt>
   10f38:	ldr	r3, [sl]
   10f3c:	sub	r3, sl, r3
   10f40:	ldrh	r2, [r3]
   10f44:	cmp	r2, #9
   10f48:	bls	10f8c <print_object@@Base+0x2dc>
   10f4c:	ldrh	r1, [r3, #8]
   10f50:	cmp	r1, #0
   10f54:	bne	10fb4 <print_object@@Base+0x304>
   10f58:	cmp	r2, #11
   10f5c:	bls	10f8c <print_object@@Base+0x2dc>
   10f60:	ldrh	r1, [r3, #10]
   10f64:	cmp	r1, #0
   10f68:	bne	10f98 <print_object@@Base+0x2e8>
   10f6c:	cmp	r2, #13
   10f70:	bls	10f8c <print_object@@Base+0x2dc>
   10f74:	ldrh	r3, [r3, #12]
   10f78:	cmp	r3, #0
   10f7c:	beq	10f8c <print_object@@Base+0x2dc>
   10f80:	ldr	r1, [sl, r3]
   10f84:	ldr	r0, [pc, #228]	; 11070 <print_object@@Base+0x3c0>
   10f88:	bl	1088c <printf@plt>
   10f8c:	mov	r0, #125	; 0x7d
   10f90:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f94:	b	10928 <putchar@plt>
   10f98:	ldr	r1, [sl, r1]
   10f9c:	ldr	r0, [pc, #208]	; 11074 <print_object@@Base+0x3c4>
   10fa0:	bl	1088c <printf@plt>
   10fa4:	ldr	r3, [sl]
   10fa8:	sub	r3, sl, r3
   10fac:	ldrh	r2, [r3]
   10fb0:	b	10f6c <print_object@@Base+0x2bc>
   10fb4:	ldrb	r1, [sl, r1]
   10fb8:	ldr	r2, [pc, #164]	; 11064 <print_object@@Base+0x3b4>
   10fbc:	ldr	r3, [pc, #156]	; 11060 <print_object@@Base+0x3b0>
   10fc0:	cmp	r1, #0
   10fc4:	moveq	r1, r2
   10fc8:	movne	r1, r3
   10fcc:	ldr	r0, [pc, #164]	; 11078 <print_object@@Base+0x3c8>
   10fd0:	bl	1088c <printf@plt>
   10fd4:	ldr	r3, [sl]
   10fd8:	sub	r3, sl, r3
   10fdc:	ldrh	r2, [r3]
   10fe0:	b	10f58 <print_object@@Base+0x2a8>
   10fe4:	ldr	r3, [pc, #96]	; 1104c <print_object@@Base+0x39c>
   10fe8:	mov	r2, #195	; 0xc3
   10fec:	ldr	r1, [pc, #68]	; 11038 <print_object@@Base+0x388>
   10ff0:	ldr	r0, [pc, #132]	; 1107c <print_object@@Base+0x3cc>
   10ff4:	bl	10958 <__assert_fail@plt>
   10ff8:	ldr	r3, [pc, #128]	; 11080 <print_object@@Base+0x3d0>
   10ffc:	mov	r2, #192	; 0xc0
   11000:	ldr	r1, [pc, #48]	; 11038 <print_object@@Base+0x388>
   11004:	ldr	r0, [pc, #120]	; 11084 <print_object@@Base+0x3d4>
   11008:	bl	10958 <__assert_fail@plt>
   1100c:	ldr	r3, [pc, #116]	; 11088 <print_object@@Base+0x3d8>
   11010:	mov	r2, #218	; 0xda
   11014:	ldr	r1, [pc, #28]	; 11038 <print_object@@Base+0x388>
   11018:	ldr	r0, [pc, #28]	; 1103c <print_object@@Base+0x38c>
   1101c:	bl	10958 <__assert_fail@plt>
   11020:	ldr	r3, [pc, #12]	; 11034 <print_object@@Base+0x384>
   11024:	mov	r2, #224	; 0xe0
   11028:	ldr	r1, [pc, #8]	; 11038 <print_object@@Base+0x388>
   1102c:	ldr	r0, [pc, #72]	; 1107c <print_object@@Base+0x3cc>
   11030:	bl	10958 <__assert_fail@plt>
   11034:	ldrdeq	r1, [r1], -ip
   11038:	andeq	r1, r1, r8, lsr #20
   1103c:	strdeq	r1, [r1], -r8
   11040:	andeq	r1, r1, ip, lsl fp
   11044:	andeq	r1, r1, ip, lsr #22
   11048:	andeq	r1, r1, r0, ror fp
   1104c:	andeq	r1, r1, r8, lsr #18
   11050:	andeq	r1, r1, r0, asr #18
   11054:	andeq	r1, r1, r8, lsl #23
   11058:	muleq	r1, r4, fp
   1105c:	andeq	r1, r1, ip, lsr #23
   11060:	andeq	r1, r1, r8, ror #21
   11064:	strdeq	r1, [r1], -r0
   11068:	andeq	r1, r1, r4, asr #23
   1106c:	ldrdeq	r1, [r1], -r4
   11070:	andeq	r1, r1, r0, lsl #24
   11074:	strdeq	r1, [r1], -r0
   11078:	andeq	r1, r1, r0, ror #23
   1107c:	andeq	r1, r1, r8, lsl #21
   11080:	andeq	r1, r1, r0, lsl r9
   11084:	andeq	r1, r1, r8, lsr fp
   11088:	strdeq	r1, [r1], -r8

0001108c <print_enum@@Base>:
   1108c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11090:	subs	r7, r0, #0
   11094:	beq	11328 <print_enum@@Base+0x29c>
   11098:	ldr	r3, [r7]
   1109c:	sub	r3, r7, r3
   110a0:	ldrh	r2, [r3]
   110a4:	cmp	r2, #5
   110a8:	bhi	110c0 <print_enum@@Base+0x34>
   110ac:	ldr	r3, [pc, #648]	; 1133c <print_enum@@Base+0x2b0>
   110b0:	mov	r2, #177	; 0xb1
   110b4:	ldr	r1, [pc, #644]	; 11340 <print_enum@@Base+0x2b4>
   110b8:	ldr	r0, [pc, #644]	; 11344 <print_enum@@Base+0x2b8>
   110bc:	bl	10958 <__assert_fail@plt>
   110c0:	ldrh	r1, [r3, #4]
   110c4:	cmp	r1, #0
   110c8:	beq	110ac <print_enum@@Base+0x20>
   110cc:	ldr	r3, [r7, r1]
   110d0:	add	r1, r7, r1
   110d4:	add	r3, r3, #4
   110d8:	add	r1, r1, r3
   110dc:	ldr	r0, [pc, #612]	; 11348 <print_enum@@Base+0x2bc>
   110e0:	bl	1088c <printf@plt>
   110e4:	ldr	r3, [r7]
   110e8:	sub	r3, r7, r3
   110ec:	ldrh	r2, [r3]
   110f0:	cmp	r2, #7
   110f4:	bhi	1110c <print_enum@@Base+0x80>
   110f8:	ldr	r3, [pc, #588]	; 1134c <print_enum@@Base+0x2c0>
   110fc:	mov	r2, #183	; 0xb7
   11100:	ldr	r1, [pc, #568]	; 11340 <print_enum@@Base+0x2b4>
   11104:	ldr	r0, [pc, #568]	; 11344 <print_enum@@Base+0x2b8>
   11108:	bl	10958 <__assert_fail@plt>
   1110c:	ldrh	r3, [r3, #6]
   11110:	cmp	r3, #0
   11114:	beq	110f8 <print_enum@@Base+0x6c>
   11118:	ldr	r5, [r7, r3]
   1111c:	add	r4, r7, r3
   11120:	add	r5, r5, #4
   11124:	add	r8, r4, r5
   11128:	ldr	r0, [pc, #544]	; 11350 <print_enum@@Base+0x2c4>
   1112c:	bl	1088c <printf@plt>
   11130:	cmp	r8, #0
   11134:	beq	11250 <print_enum@@Base+0x1c4>
   11138:	ldr	r3, [r8, #-4]
   1113c:	cmp	r3, #0
   11140:	beq	11250 <print_enum@@Base+0x1c4>
   11144:	ldr	r4, [r4, r5]
   11148:	ldr	r9, [pc, #504]	; 11348 <print_enum@@Base+0x2bc>
   1114c:	mov	r5, #0
   11150:	add	r4, r8, r4
   11154:	add	r6, r8, #4
   11158:	mov	sl, #125	; 0x7d
   1115c:	mov	fp, #44	; 0x2c
   11160:	cmp	r4, #0
   11164:	beq	11314 <print_enum@@Base+0x288>
   11168:	ldr	r3, [r4]
   1116c:	sub	r3, r4, r3
   11170:	ldrh	r2, [r3]
   11174:	cmp	r2, #5
   11178:	bhi	11190 <print_enum@@Base+0x104>
   1117c:	ldr	r3, [pc, #464]	; 11354 <print_enum@@Base+0x2c8>
   11180:	mov	r2, #159	; 0x9f
   11184:	ldr	r1, [pc, #436]	; 11340 <print_enum@@Base+0x2b4>
   11188:	ldr	r0, [pc, #436]	; 11344 <print_enum@@Base+0x2b8>
   1118c:	bl	10958 <__assert_fail@plt>
   11190:	ldrh	r1, [r3, #4]
   11194:	cmp	r1, #0
   11198:	beq	1117c <print_enum@@Base+0xf0>
   1119c:	ldr	r3, [r4, r1]
   111a0:	add	r1, r4, r1
   111a4:	add	r3, r3, #4
   111a8:	add	r1, r1, r3
   111ac:	mov	r0, r9
   111b0:	bl	1088c <printf@plt>
   111b4:	ldr	r3, [r4]
   111b8:	sub	r3, r4, r3
   111bc:	ldrh	r2, [r3]
   111c0:	cmp	r2, #7
   111c4:	bls	11238 <print_enum@@Base+0x1ac>
   111c8:	ldrh	r1, [r3, #6]
   111cc:	cmp	r1, #0
   111d0:	beq	111ec <print_enum@@Base+0x160>
   111d4:	ldrd	r2, [r4, r1]
   111d8:	ldr	r0, [pc, #376]	; 11358 <print_enum@@Base+0x2cc>
   111dc:	bl	1088c <printf@plt>
   111e0:	ldr	r3, [r4]
   111e4:	sub	r3, r4, r3
   111e8:	ldrh	r2, [r3]
   111ec:	cmp	r2, #9
   111f0:	bls	11238 <print_enum@@Base+0x1ac>
   111f4:	ldrh	r3, [r3, #8]
   111f8:	cmp	r3, #0
   111fc:	beq	11238 <print_enum@@Base+0x1ac>
   11200:	ldr	r0, [pc, #340]	; 1135c <print_enum@@Base+0x2d0>
   11204:	bl	1088c <printf@plt>
   11208:	ldr	r3, [r4]
   1120c:	sub	r3, r4, r3
   11210:	ldrh	r2, [r3]
   11214:	cmp	r2, #9
   11218:	bls	112e4 <print_enum@@Base+0x258>
   1121c:	ldrh	r3, [r3, #8]
   11220:	cmp	r3, #0
   11224:	beq	112e4 <print_enum@@Base+0x258>
   11228:	ldr	r0, [r4, r3]
   1122c:	add	r4, r4, r3
   11230:	add	r0, r4, r0
   11234:	bl	10cb0 <print_object@@Base>
   11238:	mov	r0, sl
   1123c:	bl	10928 <putchar@plt>
   11240:	ldr	r3, [r8, #-4]
   11244:	add	r5, r5, #1
   11248:	cmp	r5, r3
   1124c:	bcc	112c8 <print_enum@@Base+0x23c>
   11250:	mov	r0, #93	; 0x5d
   11254:	bl	10928 <putchar@plt>
   11258:	ldr	r3, [r7]
   1125c:	sub	r3, r7, r3
   11260:	ldrh	r2, [r3]
   11264:	cmp	r2, #9
   11268:	bls	11298 <print_enum@@Base+0x20c>
   1126c:	ldrh	r3, [r3, #8]
   11270:	cmp	r3, #0
   11274:	beq	11298 <print_enum@@Base+0x20c>
   11278:	ldrb	r1, [r7, r3]
   1127c:	ldr	r2, [pc, #220]	; 11360 <print_enum@@Base+0x2d4>
   11280:	ldr	r3, [pc, #220]	; 11364 <print_enum@@Base+0x2d8>
   11284:	cmp	r1, #0
   11288:	ldr	r0, [pc, #216]	; 11368 <print_enum@@Base+0x2dc>
   1128c:	moveq	r1, r2
   11290:	movne	r1, r3
   11294:	bl	1088c <printf@plt>
   11298:	ldr	r0, [pc, #204]	; 1136c <print_enum@@Base+0x2e0>
   1129c:	bl	1088c <printf@plt>
   112a0:	ldr	r3, [r7]
   112a4:	sub	r3, r7, r3
   112a8:	ldrh	r2, [r3]
   112ac:	cmp	r2, #11
   112b0:	bhi	112ec <print_enum@@Base+0x260>
   112b4:	ldr	r3, [pc, #180]	; 11370 <print_enum@@Base+0x2e4>
   112b8:	mov	r2, #185	; 0xb9
   112bc:	ldr	r1, [pc, #124]	; 11340 <print_enum@@Base+0x2b4>
   112c0:	ldr	r0, [pc, #124]	; 11344 <print_enum@@Base+0x2b8>
   112c4:	bl	10958 <__assert_fail@plt>
   112c8:	ldr	r3, [r6]
   112cc:	mov	r4, r6
   112d0:	mov	r0, fp
   112d4:	add	r6, r6, #4
   112d8:	add	r4, r4, r3
   112dc:	bl	10928 <putchar@plt>
   112e0:	b	11160 <print_enum@@Base+0xd4>
   112e4:	mov	r0, #0
   112e8:	b	11234 <print_enum@@Base+0x1a8>
   112ec:	ldrh	r3, [r3, #10]
   112f0:	cmp	r3, #0
   112f4:	beq	112b4 <print_enum@@Base+0x228>
   112f8:	ldr	r0, [r7, r3]
   112fc:	add	r7, r7, r3
   11300:	add	r0, r7, r0
   11304:	bl	10b1c <print_type@@Base>
   11308:	mov	r0, #125	; 0x7d
   1130c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11310:	b	10928 <putchar@plt>
   11314:	ldr	r3, [pc, #56]	; 11354 <print_enum@@Base+0x2c8>
   11318:	mov	r2, #159	; 0x9f
   1131c:	ldr	r1, [pc, #28]	; 11340 <print_enum@@Base+0x2b4>
   11320:	ldr	r0, [pc, #76]	; 11374 <print_enum@@Base+0x2e8>
   11324:	bl	10958 <__assert_fail@plt>
   11328:	ldr	r3, [pc, #12]	; 1133c <print_enum@@Base+0x2b0>
   1132c:	mov	r2, #177	; 0xb1
   11330:	ldr	r1, [pc, #8]	; 11340 <print_enum@@Base+0x2b4>
   11334:	ldr	r0, [pc, #56]	; 11374 <print_enum@@Base+0x2e8>
   11338:	bl	10958 <__assert_fail@plt>
   1133c:	andeq	r1, r1, r8, asr r9
   11340:	andeq	r1, r1, r8, lsr #20
   11344:	strdeq	r1, [r1], -r8
   11348:	andeq	r1, r1, ip, lsl fp
   1134c:	andeq	r1, r1, r0, ror r9
   11350:	andeq	r1, r1, r0, lsl ip
   11354:	andeq	r1, r1, r8, lsl #19
   11358:	andeq	r1, r1, ip, lsl ip
   1135c:	andeq	r1, r1, ip, lsr #24
   11360:	strdeq	r1, [r1], -r0
   11364:	andeq	r1, r1, r8, ror #21
   11368:	andeq	r1, r1, r8, lsr ip
   1136c:	andeq	r1, r1, r8, asr #24
   11370:	andeq	r1, r1, r0, lsr #19
   11374:	andeq	r1, r1, r8, lsl #21

00011378 <print_schema@@Base>:
   11378:	push	{r4, r5, r6, r7, r8, lr}
   1137c:	subs	r6, r0, #0
   11380:	beq	115f4 <print_schema@@Base+0x27c>
   11384:	ldr	r3, [r6]
   11388:	sub	r3, r6, r3
   1138c:	ldrh	r2, [r3]
   11390:	cmp	r2, #5
   11394:	bhi	113ac <print_schema@@Base+0x34>
   11398:	ldr	r3, [pc, #616]	; 11608 <print_schema@@Base+0x290>
   1139c:	mov	r2, #237	; 0xed
   113a0:	ldr	r1, [pc, #612]	; 1160c <print_schema@@Base+0x294>
   113a4:	ldr	r0, [pc, #612]	; 11610 <print_schema@@Base+0x298>
   113a8:	bl	10958 <__assert_fail@plt>
   113ac:	ldrh	r3, [r3, #4]
   113b0:	cmp	r3, #0
   113b4:	beq	11398 <print_schema@@Base+0x20>
   113b8:	ldr	r7, [r6, r3]
   113bc:	mov	r0, #123	; 0x7b
   113c0:	add	r3, r6, r3
   113c4:	add	r7, r7, #4
   113c8:	add	r7, r3, r7
   113cc:	bl	10928 <putchar@plt>
   113d0:	ldr	r0, [pc, #572]	; 11614 <print_schema@@Base+0x29c>
   113d4:	bl	1088c <printf@plt>
   113d8:	cmp	r7, #0
   113dc:	beq	11438 <print_schema@@Base+0xc0>
   113e0:	ldr	r3, [r7, #-4]
   113e4:	cmp	r3, #0
   113e8:	beq	11438 <print_schema@@Base+0xc0>
   113ec:	mov	r5, r7
   113f0:	mov	r4, #0
   113f4:	mov	r8, #44	; 0x2c
   113f8:	cmp	r3, r4
   113fc:	bls	115e0 <print_schema@@Base+0x268>
   11400:	ldr	r0, [r5]
   11404:	add	r4, r4, #1
   11408:	add	r0, r5, r0
   1140c:	bl	10cb0 <print_object@@Base>
   11410:	ldr	r3, [r7, #-4]
   11414:	add	r5, r5, #4
   11418:	cmp	r4, r3
   1141c:	bcs	11438 <print_schema@@Base+0xc0>
   11420:	cmp	r4, #0
   11424:	beq	113f8 <print_schema@@Base+0x80>
   11428:	mov	r0, r8
   1142c:	bl	10928 <putchar@plt>
   11430:	ldr	r3, [r7, #-4]
   11434:	b	113f8 <print_schema@@Base+0x80>
   11438:	mov	r0, #93	; 0x5d
   1143c:	bl	10928 <putchar@plt>
   11440:	ldr	r3, [r6]
   11444:	sub	r3, r6, r3
   11448:	ldrh	r2, [r3]
   1144c:	cmp	r2, #7
   11450:	bls	115b8 <print_schema@@Base+0x240>
   11454:	ldrh	r3, [r3, #6]
   11458:	cmp	r3, #0
   1145c:	beq	115b8 <print_schema@@Base+0x240>
   11460:	ldr	r7, [r6, r3]
   11464:	add	r3, r6, r3
   11468:	add	r7, r7, #4
   1146c:	add	r7, r3, r7
   11470:	ldr	r0, [pc, #416]	; 11618 <print_schema@@Base+0x2a0>
   11474:	bl	1088c <printf@plt>
   11478:	cmp	r7, #0
   1147c:	beq	114d8 <print_schema@@Base+0x160>
   11480:	ldr	r3, [r7, #-4]
   11484:	cmp	r3, #0
   11488:	beq	114d8 <print_schema@@Base+0x160>
   1148c:	mov	r5, r7
   11490:	mov	r4, #0
   11494:	mov	r8, #44	; 0x2c
   11498:	cmp	r3, r4
   1149c:	bls	115cc <print_schema@@Base+0x254>
   114a0:	ldr	r0, [r5]
   114a4:	add	r4, r4, #1
   114a8:	add	r0, r5, r0
   114ac:	bl	1108c <print_enum@@Base>
   114b0:	ldr	r3, [r7, #-4]
   114b4:	add	r5, r5, #4
   114b8:	cmp	r4, r3
   114bc:	bcs	114d8 <print_schema@@Base+0x160>
   114c0:	cmp	r4, #0
   114c4:	beq	11498 <print_schema@@Base+0x120>
   114c8:	mov	r0, r8
   114cc:	bl	10928 <putchar@plt>
   114d0:	ldr	r3, [r7, #-4]
   114d4:	b	11498 <print_schema@@Base+0x120>
   114d8:	mov	r0, #93	; 0x5d
   114dc:	bl	10928 <putchar@plt>
   114e0:	ldr	r3, [r6]
   114e4:	sub	r3, r6, r3
   114e8:	ldrh	r2, [r3]
   114ec:	cmp	r2, #9
   114f0:	bls	11594 <print_schema@@Base+0x21c>
   114f4:	ldrh	r1, [r3, #8]
   114f8:	cmp	r1, #0
   114fc:	beq	11524 <print_schema@@Base+0x1ac>
   11500:	ldr	r3, [r6, r1]
   11504:	add	r1, r6, r1
   11508:	add	r3, r3, #4
   1150c:	add	r1, r1, r3
   11510:	ldr	r0, [pc, #260]	; 1161c <print_schema@@Base+0x2a4>
   11514:	bl	1088c <printf@plt>
   11518:	ldr	r3, [r6]
   1151c:	sub	r3, r6, r3
   11520:	ldrh	r2, [r3]
   11524:	cmp	r2, #11
   11528:	bls	11594 <print_schema@@Base+0x21c>
   1152c:	ldrh	r1, [r3, #10]
   11530:	cmp	r1, #0
   11534:	beq	1155c <print_schema@@Base+0x1e4>
   11538:	ldr	r3, [r6, r1]
   1153c:	add	r1, r6, r1
   11540:	add	r3, r3, #4
   11544:	add	r1, r1, r3
   11548:	ldr	r0, [pc, #208]	; 11620 <print_schema@@Base+0x2a8>
   1154c:	bl	1088c <printf@plt>
   11550:	ldr	r3, [r6]
   11554:	sub	r3, r6, r3
   11558:	ldrh	r2, [r3]
   1155c:	cmp	r2, #13
   11560:	bls	11594 <print_schema@@Base+0x21c>
   11564:	ldrh	r3, [r3, #12]
   11568:	cmp	r3, #0
   1156c:	beq	11594 <print_schema@@Base+0x21c>
   11570:	ldr	r0, [pc, #172]	; 11624 <print_schema@@Base+0x2ac>
   11574:	bl	1088c <printf@plt>
   11578:	ldr	r3, [r6]
   1157c:	sub	r3, r6, r3
   11580:	ldrh	r2, [r3]
   11584:	cmp	r2, #13
   11588:	movls	r0, #0
   1158c:	bhi	115a0 <print_schema@@Base+0x228>
   11590:	bl	10cb0 <print_object@@Base>
   11594:	ldr	r0, [pc, #140]	; 11628 <print_schema@@Base+0x2b0>
   11598:	pop	{r4, r5, r6, r7, r8, lr}
   1159c:	b	108e0 <puts@plt>
   115a0:	ldrh	r0, [r3, #12]
   115a4:	cmp	r0, #0
   115a8:	ldrne	r3, [r6, r0]
   115ac:	addne	r0, r6, r0
   115b0:	addne	r0, r0, r3
   115b4:	b	11590 <print_schema@@Base+0x218>
   115b8:	ldr	r3, [pc, #108]	; 1162c <print_schema@@Base+0x2b4>
   115bc:	mov	r2, #238	; 0xee
   115c0:	ldr	r1, [pc, #68]	; 1160c <print_schema@@Base+0x294>
   115c4:	ldr	r0, [pc, #68]	; 11610 <print_schema@@Base+0x298>
   115c8:	bl	10958 <__assert_fail@plt>
   115cc:	ldr	r3, [pc, #92]	; 11630 <print_schema@@Base+0x2b8>
   115d0:	mov	r2, #174	; 0xae
   115d4:	ldr	r1, [pc, #48]	; 1160c <print_schema@@Base+0x294>
   115d8:	ldr	r0, [pc, #84]	; 11634 <print_schema@@Base+0x2bc>
   115dc:	bl	10958 <__assert_fail@plt>
   115e0:	ldr	r3, [pc, #80]	; 11638 <print_schema@@Base+0x2c0>
   115e4:	mov	r2, #215	; 0xd7
   115e8:	ldr	r1, [pc, #28]	; 1160c <print_schema@@Base+0x294>
   115ec:	ldr	r0, [pc, #64]	; 11634 <print_schema@@Base+0x2bc>
   115f0:	bl	10958 <__assert_fail@plt>
   115f4:	ldr	r3, [pc, #12]	; 11608 <print_schema@@Base+0x290>
   115f8:	mov	r2, #237	; 0xed
   115fc:	ldr	r1, [pc, #8]	; 1160c <print_schema@@Base+0x294>
   11600:	ldr	r0, [pc, #52]	; 1163c <print_schema@@Base+0x2c4>
   11604:	bl	10958 <__assert_fail@plt>
   11608:	andeq	r1, r1, r0, asr #19
   1160c:	andeq	r1, r1, r8, lsr #20
   11610:	strdeq	r1, [r1], -r8
   11614:	andeq	r1, r1, ip, asr ip
   11618:	andeq	r1, r1, r8, ror #24
   1161c:	andeq	r1, r1, r4, ror ip
   11620:	andeq	r1, r1, r8, lsl #25
   11624:	muleq	r1, ip, ip
   11628:	andeq	r1, r1, ip, lsr #25
   1162c:	strdeq	r1, [r1], -r8
   11630:	andeq	r1, r1, r0, lsl sl
   11634:	andeq	r1, r1, r8, lsr fp
   11638:	ldrdeq	r1, [r1], -ip
   1163c:	andeq	r1, r1, r8, lsl #21

00011640 <load_and_dump_schema@@Base>:
   11640:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11644:	mov	r9, r0
   11648:	ldr	r1, [pc, #372]	; 117c4 <load_and_dump_schema@@Base+0x184>
   1164c:	bl	10898 <fopen@plt>
   11650:	subs	r7, r0, #0
   11654:	beq	11728 <load_and_dump_schema@@Base+0xe8>
   11658:	mov	r2, #2
   1165c:	mov	r1, #0
   11660:	bl	10940 <fseek@plt>
   11664:	mov	r0, r7
   11668:	bl	108b0 <ftell@plt>
   1166c:	ldr	r3, [pc, #340]	; 117c8 <load_and_dump_schema@@Base+0x188>
   11670:	cmp	r0, r3
   11674:	mov	r5, r0
   11678:	bhi	11720 <load_and_dump_schema@@Base+0xe0>
   1167c:	mov	r0, r7
   11680:	bl	108bc <rewind@plt>
   11684:	cmp	r5, #0
   11688:	movne	r0, r5
   1168c:	moveq	r0, #1
   11690:	bl	108ec <malloc@plt>
   11694:	subs	r6, r0, #0
   11698:	beq	11720 <load_and_dump_schema@@Base+0xe0>
   1169c:	mov	r4, #0
   116a0:	mov	r8, #1
   116a4:	b	116ac <load_and_dump_schema@@Base+0x6c>
   116a8:	add	r4, r4, r0
   116ac:	mov	r3, r7
   116b0:	sub	r2, r5, r4
   116b4:	mov	r1, r8
   116b8:	add	r0, r6, r4
   116bc:	bl	108d4 <fread@plt>
   116c0:	cmp	r0, #0
   116c4:	bne	116a8 <load_and_dump_schema@@Base+0x68>
   116c8:	cmp	r5, r4
   116cc:	mov	r0, r7
   116d0:	bne	11748 <load_and_dump_schema@@Base+0x108>
   116d4:	bl	10934 <fclose@plt>
   116d8:	cmp	r5, #11
   116dc:	bls	117a8 <load_and_dump_schema@@Base+0x168>
   116e0:	ldr	r3, [r6, #4]
   116e4:	ldr	r2, [pc, #224]	; 117cc <load_and_dump_schema@@Base+0x18c>
   116e8:	cmp	r3, r2
   116ec:	beq	11758 <load_and_dump_schema@@Base+0x118>
   116f0:	ldr	r2, [pc, #212]	; 117cc <load_and_dump_schema@@Base+0x18c>
   116f4:	ldr	r1, [r6, #8]
   116f8:	cmp	r1, r2
   116fc:	beq	11780 <load_and_dump_schema@@Base+0x140>
   11700:	ldr	r3, [pc, #200]	; 117d0 <load_and_dump_schema@@Base+0x190>
   11704:	mov	r2, #27
   11708:	mov	r1, #1
   1170c:	ldr	r3, [r3]
   11710:	ldr	r0, [pc, #188]	; 117d4 <load_and_dump_schema@@Base+0x194>
   11714:	bl	108c8 <fwrite@plt>
   11718:	mvn	r4, #0
   1171c:	b	11770 <load_and_dump_schema@@Base+0x130>
   11720:	mov	r0, r7
   11724:	bl	10934 <fclose@plt>
   11728:	ldr	r3, [pc, #160]	; 117d0 <load_and_dump_schema@@Base+0x190>
   1172c:	mov	r2, r9
   11730:	ldr	r1, [pc, #160]	; 117d8 <load_and_dump_schema@@Base+0x198>
   11734:	ldr	r0, [r3]
   11738:	mvn	r4, #0
   1173c:	bl	1091c <fprintf@plt>
   11740:	mov	r0, r4
   11744:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11748:	bl	10934 <fclose@plt>
   1174c:	mov	r0, r6
   11750:	bl	108a4 <free@plt>
   11754:	b	11728 <load_and_dump_schema@@Base+0xe8>
   11758:	ldr	r4, [r6]
   1175c:	adds	r4, r6, r4
   11760:	beq	116f0 <load_and_dump_schema@@Base+0xb0>
   11764:	mov	r0, r4
   11768:	bl	11378 <print_schema@@Base>
   1176c:	mov	r4, #0
   11770:	mov	r0, r6
   11774:	bl	108a4 <free@plt>
   11778:	mov	r0, r4
   1177c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11780:	add	r3, r3, #4
   11784:	adds	r4, r6, r3
   11788:	beq	11700 <load_and_dump_schema@@Base+0xc0>
   1178c:	ldr	r3, [pc, #60]	; 117d0 <load_and_dump_schema@@Base+0x190>
   11790:	mov	r2, #40	; 0x28
   11794:	mov	r1, #1
   11798:	ldr	r3, [r3]
   1179c:	ldr	r0, [pc, #56]	; 117dc <load_and_dump_schema@@Base+0x19c>
   117a0:	bl	108c8 <fwrite@plt>
   117a4:	b	11764 <load_and_dump_schema@@Base+0x124>
   117a8:	ldr	r3, [pc, #32]	; 117d0 <load_and_dump_schema@@Base+0x190>
   117ac:	mov	r2, r9
   117b0:	ldr	r1, [pc, #40]	; 117e0 <load_and_dump_schema@@Base+0x1a0>
   117b4:	ldr	r0, [r3]
   117b8:	bl	1091c <fprintf@plt>
   117bc:	mvn	r4, #0
   117c0:	b	11770 <load_and_dump_schema@@Base+0x130>
   117c4:			; <UNDEFINED> instruction: 0x00011cb0
   117c8:	andeq	r2, r0, r0, lsl r7
   117cc:	movtpl	r4, #9794	; 0x2642
   117d0:	andeq	r2, r2, r0, rrx
   117d4:	andeq	r1, r1, ip, lsr #26
   117d8:	andeq	r1, r1, r0, lsl #26
   117dc:	ldrdeq	r1, [r1], -r4
   117e0:			; <UNDEFINED> instruction: 0x00011cb4

000117e4 <__libc_csu_init@@Base>:
   117e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   117e8:	mov	r7, r0
   117ec:	ldr	r6, [pc, #72]	; 1183c <__libc_csu_init@@Base+0x58>
   117f0:	ldr	r5, [pc, #72]	; 11840 <__libc_csu_init@@Base+0x5c>
   117f4:	add	r6, pc, r6
   117f8:	add	r5, pc, r5
   117fc:	sub	r6, r6, r5
   11800:	mov	r8, r1
   11804:	mov	r9, r2
   11808:	bl	1086c <printf@plt-0x20>
   1180c:	asrs	r6, r6, #2
   11810:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11814:	mov	r4, #0
   11818:	add	r4, r4, #1
   1181c:	ldr	r3, [r5], #4
   11820:	mov	r2, r9
   11824:	mov	r1, r8
   11828:	mov	r0, r7
   1182c:	blx	r3
   11830:	cmp	r6, r4
   11834:	bne	11818 <__libc_csu_init@@Base+0x34>
   11838:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1183c:	andeq	r0, r1, r4, lsl r7
   11840:	andeq	r0, r1, ip, lsl #14

00011844 <__libc_csu_fini@@Base>:
   11844:	bx	lr

Disassembly of section .fini:

00011848 <.fini>:
   11848:	push	{r3, lr}
   1184c:	pop	{r3, pc}
