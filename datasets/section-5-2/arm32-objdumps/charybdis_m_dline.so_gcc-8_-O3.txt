
../repos/charybdis/modules/.libs/m_dline.so:     file format elf32-littlearm


Disassembly of section .init:

0000099c <_init>:
 99c:	push	{r3, lr}
 9a0:	bl	b60 <call_weak_fn>
 9a4:	pop	{r3, pc}

Disassembly of section .plt:

000009a8 <.plt>:
 9a8:	push	{lr}		; (str lr, [sp, #-4]!)
 9ac:	ldr	lr, [pc, #4]	; 9b8 <.plt+0x10>
 9b0:	add	lr, pc, lr
 9b4:	ldr	pc, [lr, #8]!
 9b8:	.word	0x00012648

000009bc <make_conf@plt>:
 9bc:	add	ip, pc, #0, 12
 9c0:	add	ip, ip, #73728	; 0x12000
 9c4:	ldr	pc, [ip, #1608]!	; 0x648

000009c8 <parse_netmask_strict@plt>:
 9c8:	add	ip, pc, #0, 12
 9cc:	add	ip, ip, #73728	; 0x12000
 9d0:	ldr	pc, [ip, #1600]!	; 0x640

000009d4 <rb_current_time@plt>:
 9d4:	add	ip, pc, #0, 12
 9d8:	add	ip, ip, #73728	; 0x12000
 9dc:	ldr	pc, [ip, #1592]!	; 0x638

000009e0 <sendto_match_servs@plt>:
 9e0:	add	ip, pc, #0, 12
 9e4:	add	ip, ip, #73728	; 0x12000
 9e8:	ldr	pc, [ip, #1584]!	; 0x630

000009ec <__cxa_finalize@plt>:
 9ec:	add	ip, pc, #0, 12
 9f0:	add	ip, ip, #73728	; 0x12000
 9f4:	ldr	pc, [ip, #1576]!	; 0x628

000009f8 <strtol@plt>:
 9f8:	add	ip, pc, #0, 12
 9fc:	add	ip, ip, #73728	; 0x12000
 a00:	ldr	pc, [ip, #1568]!	; 0x620

00000a04 <sendto_one@plt>:
 a04:	add	ip, pc, #0, 12
 a08:	add	ip, ip, #73728	; 0x12000
 a0c:	ldr	pc, [ip, #1560]!	; 0x618

00000a10 <memcpy@plt>:
 a10:	add	ip, pc, #0, 12
 a14:	add	ip, ip, #73728	; 0x12000
 a18:	ldr	pc, [ip, #1552]!	; 0x610

00000a1c <rb_outofmemory@plt>:
 a1c:	add	ip, pc, #0, 12
 a20:	add	ip, ip, #73728	; 0x12000
 a24:	ldr	pc, [ip, #1544]!	; 0x608

00000a28 <parse_netmask@plt>:
 a28:	add	ip, pc, #0, 12
 a2c:	add	ip, ip, #73728	; 0x12000
 a30:	ldr	pc, [ip, #1536]!	; 0x600

00000a34 <sendto_realops_snomask@plt>:
 a34:	add	ip, pc, #0, 12
 a38:	add	ip, ip, #73728	; 0x12000
 a3c:	ldr	pc, [ip, #1528]!	; 0x5f8

00000a40 <bandb_add@plt>:
 a40:	add	ip, pc, #0, 12
 a44:	add	ip, ip, #73728	; 0x12000
 a48:	ldr	pc, [ip, #1520]!	; 0x5f0

00000a4c <get_oper_name@plt>:
 a4c:	add	ip, pc, #0, 12
 a50:	add	ip, ip, #73728	; 0x12000
 a54:	ldr	pc, [ip, #1512]!	; 0x5e8

00000a58 <rb_free_rb_dlink_node@plt>:
 a58:	add	ip, pc, #0, 12
 a5c:	add	ip, ip, #73728	; 0x12000
 a60:	ldr	pc, [ip, #1504]!	; 0x5e0

00000a64 <operhash_add@plt>:
 a64:	add	ip, pc, #0, 12
 a68:	add	ip, ip, #73728	; 0x12000
 a6c:	ldr	pc, [ip, #1496]!	; 0x5d8

00000a70 <add_temp_dline@plt>:
 a70:	add	ip, pc, #0, 12
 a74:	add	ip, ip, #73728	; 0x12000
 a78:	ldr	pc, [ip, #1488]!	; 0x5d0

00000a7c <rb_set_time@plt>:
 a7c:	add	ip, pc, #0, 12
 a80:	add	ip, ip, #73728	; 0x12000
 a84:	ldr	pc, [ip, #1480]!	; 0x5c8

00000a88 <malloc@plt>:
 a88:	add	ip, pc, #0, 12
 a8c:	add	ip, ip, #73728	; 0x12000
 a90:	ldr	pc, [ip, #1472]!	; 0x5c0

00000a94 <add_conf_by_address@plt>:
 a94:	add	ip, pc, #0, 12
 a98:	add	ip, ip, #73728	; 0x12000
 a9c:	ldr	pc, [ip, #1464]!	; 0x5b8

00000aa0 <__gmon_start__@plt>:
 aa0:	add	ip, pc, #0, 12
 aa4:	add	ip, ip, #73728	; 0x12000
 aa8:	ldr	pc, [ip, #1456]!	; 0x5b0

00000aac <strlen@plt>:
 aac:	add	ip, pc, #0, 12
 ab0:	add	ip, ip, #73728	; 0x12000
 ab4:	ldr	pc, [ip, #1448]!	; 0x5a8

00000ab8 <strchr@plt>:
 ab8:	add	ip, pc, #0, 12
 abc:	add	ip, ip, #73728	; 0x12000
 ac0:	ldr	pc, [ip, #1440]!	; 0x5a0

00000ac4 <delete_one_address_conf@plt>:
 ac4:	add	ip, pc, #0, 12
 ac8:	add	ip, ip, #73728	; 0x12000
 acc:	ldr	pc, [ip, #1432]!	; 0x598

00000ad0 <ilog@plt>:
 ad0:	add	ip, pc, #0, 12
 ad4:	add	ip, ip, #73728	; 0x12000
 ad8:	ldr	pc, [ip, #1424]!	; 0x590

00000adc <match@plt>:
 adc:	add	ip, pc, #0, 12
 ae0:	add	ip, ip, #73728	; 0x12000
 ae4:	ldr	pc, [ip, #1416]!	; 0x588

00000ae8 <valid_temp_time@plt>:
 ae8:	add	ip, pc, #0, 12
 aec:	add	ip, ip, #73728	; 0x12000
 af0:	ldr	pc, [ip, #1408]!	; 0x580

00000af4 <check_dlines@plt>:
 af4:	add	ip, pc, #0, 12
 af8:	add	ip, ip, #73728	; 0x12000
 afc:	ldr	pc, [ip, #1400]!	; 0x578

00000b00 <sendto_one_notice@plt>:
 b00:	add	ip, pc, #0, 12
 b04:	add	ip, ip, #73728	; 0x12000
 b08:	ldr	pc, [ip, #1392]!	; 0x570

00000b0c <bandb_del@plt>:
 b0c:	add	ip, pc, #0, 12
 b10:	add	ip, ip, #73728	; 0x12000
 b14:	ldr	pc, [ip, #1384]!	; 0x568

00000b18 <find_exact_conf_by_address@plt>:
 b18:	add	ip, pc, #0, 12
 b1c:	add	ip, ip, #73728	; 0x12000
 b20:	ldr	pc, [ip, #1376]!	; 0x560

00000b24 <rb_strlcpy@plt>:
 b24:	add	ip, pc, #0, 12
 b28:	add	ip, ip, #73728	; 0x12000
 b2c:	ldr	pc, [ip, #1368]!	; 0x558

00000b30 <find_shared_conf@plt>:
 b30:	add	ip, pc, #0, 12
 b34:	add	ip, ip, #73728	; 0x12000
 b38:	ldr	pc, [ip, #1360]!	; 0x550

00000b3c <privilegeset_in_set@plt>:
 b3c:	add	ip, pc, #0, 12
 b40:	add	ip, ip, #73728	; 0x12000
 b44:	ldr	pc, [ip, #1352]!	; 0x548

00000b48 <irccmp@plt>:
 b48:	add	ip, pc, #0, 12
 b4c:	add	ip, ip, #73728	; 0x12000
 b50:	ldr	pc, [ip, #1344]!	; 0x540

00000b54 <find_dline@plt>:
 b54:	add	ip, pc, #0, 12
 b58:	add	ip, ip, #73728	; 0x12000
 b5c:	ldr	pc, [ip, #1336]!	; 0x538

Disassembly of section .text:

00000b60 <call_weak_fn>:
     b60:	ldr	r3, [pc, #20]	; b7c <call_weak_fn+0x1c>
     b64:	ldr	r2, [pc, #20]	; b80 <call_weak_fn+0x20>
     b68:	add	r3, pc, r3
     b6c:	ldr	r2, [r3, r2]
     b70:	cmp	r2, #0
     b74:	bxeq	lr
     b78:	b	aa0 <__gmon_start__@plt>
     b7c:	.word	0x00012490
     b80:	.word	0x000000a0

00000b84 <deregister_tm_clones>:
     b84:	ldr	r0, [pc, #44]	; bb8 <deregister_tm_clones+0x34>
     b88:	ldr	r3, [pc, #44]	; bbc <deregister_tm_clones+0x38>
     b8c:	add	r0, pc, r0
     b90:	add	r3, pc, r3
     b94:	cmp	r3, r0
     b98:	ldr	r3, [pc, #32]	; bc0 <deregister_tm_clones+0x3c>
     b9c:	add	r3, pc, r3
     ba0:	bxeq	lr
     ba4:	ldr	r2, [pc, #24]	; bc4 <deregister_tm_clones+0x40>
     ba8:	ldr	r3, [r3, r2]
     bac:	cmp	r3, #0
     bb0:	bxeq	lr
     bb4:	bx	r3
     bb8:	.word	0x000125e4
     bbc:	.word	0x000125e0
     bc0:	.word	0x0001245c
     bc4:	.word	0x0000009c

00000bc8 <register_tm_clones>:
     bc8:	ldr	r0, [pc, #56]	; c08 <register_tm_clones+0x40>
     bcc:	ldr	r3, [pc, #56]	; c0c <register_tm_clones+0x44>
     bd0:	add	r0, pc, r0
     bd4:	add	r3, pc, r3
     bd8:	sub	r1, r3, r0
     bdc:	ldr	r3, [pc, #44]	; c10 <register_tm_clones+0x48>
     be0:	asr	r1, r1, #2
     be4:	add	r3, pc, r3
     be8:	add	r1, r1, r1, lsr #31
     bec:	asrs	r1, r1, #1
     bf0:	bxeq	lr
     bf4:	ldr	r2, [pc, #24]	; c14 <register_tm_clones+0x4c>
     bf8:	ldr	r3, [r3, r2]
     bfc:	cmp	r3, #0
     c00:	bxeq	lr
     c04:	bx	r3
     c08:	.word	0x000125a0
     c0c:	.word	0x0001259c
     c10:	.word	0x00012414
     c14:	.word	0x000000a8

00000c18 <__do_global_dtors_aux>:
     c18:	ldr	r3, [pc, #76]	; c6c <__do_global_dtors_aux+0x54>
     c1c:	ldr	r2, [pc, #76]	; c70 <__do_global_dtors_aux+0x58>
     c20:	add	r3, pc, r3
     c24:	add	r2, pc, r2
     c28:	ldrb	r3, [r3]
     c2c:	cmp	r3, #0
     c30:	bxne	lr
     c34:	ldr	r3, [pc, #56]	; c74 <__do_global_dtors_aux+0x5c>
     c38:	push	{r4, lr}
     c3c:	ldr	r3, [r2, r3]
     c40:	cmp	r3, #0
     c44:	beq	c54 <__do_global_dtors_aux+0x3c>
     c48:	ldr	r3, [pc, #40]	; c78 <__do_global_dtors_aux+0x60>
     c4c:	ldr	r0, [pc, r3]
     c50:	bl	9ec <__cxa_finalize@plt>
     c54:	bl	b84 <deregister_tm_clones>
     c58:	ldr	r3, [pc, #28]	; c7c <__do_global_dtors_aux+0x64>
     c5c:	mov	r2, #1
     c60:	add	r3, pc, r3
     c64:	strb	r2, [r3]
     c68:	pop	{r4, pc}
     c6c:	.word	0x00012550
     c70:	.word	0x000123d4
     c74:	.word	0x00000098
     c78:	.word	0x00012464
     c7c:	.word	0x00012510

00000c80 <frame_dummy>:
     c80:	b	bc8 <register_tm_clones>

00000c84 <apply_undline>:
     c84:	mov	r2, #0
     c88:	strd	r4, [sp, #-24]!	; 0xffffffe8
     c8c:	mov	r5, r0
     c90:	strd	r6, [sp, #8]
     c94:	mov	r6, r1
     c98:	mov	r1, r2
     c9c:	ldr	r7, [pc, #576]	; ee4 <apply_undline+0x260>
     ca0:	mov	r0, r6
     ca4:	str	r8, [sp, #16]
     ca8:	str	lr, [sp, #20]
     cac:	sub	sp, sp, #520	; 0x208
     cb0:	bl	a28 <parse_netmask@plt>
     cb4:	sub	r0, r0, #2
     cb8:	cmp	r0, #1
     cbc:	add	r7, pc, r7
     cc0:	bhi	e04 <apply_undline+0x180>
     cc4:	mov	r2, #0
     cc8:	mov	r1, #131072	; 0x20000
     ccc:	mov	r0, r6
     cd0:	bl	b18 <find_exact_conf_by_address@plt>
     cd4:	subs	r4, r0, #0
     cd8:	beq	ebc <apply_undline+0x238>
     cdc:	add	r6, sp, #8
     ce0:	mov	r2, #512	; 0x200
     ce4:	ldr	r1, [r4, #16]
     ce8:	mov	r0, r6
     cec:	bl	b24 <rb_strlcpy@plt>
     cf0:	ldr	r3, [pc, #496]	; ee8 <apply_undline+0x264>
     cf4:	mov	r1, #0
     cf8:	ldr	r2, [r7, r3]
     cfc:	mov	ip, r2
     d00:	ldr	r3, [ip]
     d04:	cmp	r3, #0
     d08:	bne	d1c <apply_undline+0x98>
     d0c:	b	e1c <apply_undline+0x198>
     d10:	ldr	r3, [r3, #8]
     d14:	cmp	r3, #0
     d18:	beq	e1c <apply_undline+0x198>
     d1c:	ldr	r0, [r3]
     d20:	cmp	r4, r0
     d24:	bne	d10 <apply_undline+0x8c>
     d28:	ldmib	r3, {ip, lr}
     d2c:	lsl	r0, r1, #1
     d30:	cmp	lr, #0
     d34:	beq	ed4 <apply_undline+0x250>
     d38:	str	ip, [lr, #4]
     d3c:	ldr	ip, [r3, #4]
     d40:	cmp	ip, #0
     d44:	mov	r8, #0
     d48:	addeq	ip, r0, r1
     d4c:	add	r1, r0, r1
     d50:	strne	lr, [ip, #8]
     d54:	mov	r0, r3
     d58:	streq	lr, [r2, ip, lsl #2]
     d5c:	add	r2, r2, r1, lsl #2
     d60:	ldr	r1, [r2, #8]
     d64:	str	r8, [r3, #4]
     d68:	str	r8, [r3, #8]
     d6c:	sub	r3, r1, #1
     d70:	str	r3, [r2, #8]
     d74:	bl	a58 <rb_free_rb_dlink_node@plt>
     d78:	mov	r1, r4
     d7c:	ldr	r0, [r4, #16]
     d80:	bl	ac4 <delete_one_address_conf@plt>
     d84:	ldr	r2, [pc, #352]	; eec <apply_undline+0x268>
     d88:	add	r3, r5, #88	; 0x58
     d8c:	mov	r0, r5
     d90:	ldr	r1, [pc, #344]	; ef0 <apply_undline+0x26c>
     d94:	ldr	r2, [r7, r2]
     d98:	str	r6, [sp]
     d9c:	add	r1, pc, r1
     da0:	add	r2, r2, #88	; 0x58
     da4:	bl	a04 <sendto_one@plt>
     da8:	mov	r0, r5
     dac:	bl	a4c <get_oper_name@plt>
     db0:	ldr	r2, [pc, #316]	; ef4 <apply_undline+0x270>
     db4:	mov	r3, r0
     db8:	mov	r1, r8
     dbc:	mov	r0, #256	; 0x100
     dc0:	str	r6, [sp]
     dc4:	add	r2, pc, r2
     dc8:	bl	a34 <sendto_realops_snomask@plt>
     dcc:	mov	r0, r5
     dd0:	bl	a4c <get_oper_name@plt>
     dd4:	ldr	r1, [pc, #284]	; ef8 <apply_undline+0x274>
     dd8:	mov	r2, r0
     ddc:	mov	r3, r6
     de0:	mov	r0, #7
     de4:	add	r1, pc, r1
     de8:	bl	ad0 <ilog@plt>
     dec:	add	sp, sp, #520	; 0x208
     df0:	ldrd	r4, [sp]
     df4:	ldrd	r6, [sp, #8]
     df8:	ldr	r8, [sp, #16]
     dfc:	add	sp, sp, #20
     e00:	pop	{pc}		; (ldr pc, [sp], #4)
     e04:	ldr	r1, [pc, #240]	; efc <apply_undline+0x278>
     e08:	mov	r2, r6
     e0c:	mov	r0, r5
     e10:	add	r1, pc, r1
     e14:	bl	b00 <sendto_one_notice@plt>
     e18:	b	dec <apply_undline+0x168>
     e1c:	add	r1, r1, #1
     e20:	add	ip, ip, #12
     e24:	cmp	r1, #4
     e28:	bne	d00 <apply_undline+0x7c>
     e2c:	mov	r2, #0
     e30:	mov	r0, #1
     e34:	ldr	r1, [r4, #16]
     e38:	bl	b0c <bandb_del@plt>
     e3c:	ldr	r2, [pc, #168]	; eec <apply_undline+0x268>
     e40:	add	r3, r5, #88	; 0x58
     e44:	mov	r0, r5
     e48:	ldr	r1, [r4, #16]
     e4c:	ldr	r2, [r7, r2]
     e50:	str	r1, [sp]
     e54:	ldr	r1, [pc, #164]	; f00 <apply_undline+0x27c>
     e58:	add	r2, r2, #88	; 0x58
     e5c:	add	r1, pc, r1
     e60:	bl	a04 <sendto_one@plt>
     e64:	mov	r0, r5
     e68:	bl	a4c <get_oper_name@plt>
     e6c:	ldr	r2, [pc, #144]	; f04 <apply_undline+0x280>
     e70:	mov	r3, r0
     e74:	mov	r1, #0
     e78:	mov	r0, #256	; 0x100
     e7c:	ldr	ip, [r4, #16]
     e80:	add	r2, pc, r2
     e84:	str	ip, [sp]
     e88:	bl	a34 <sendto_realops_snomask@plt>
     e8c:	mov	r0, r5
     e90:	bl	a4c <get_oper_name@plt>
     e94:	ldr	r1, [pc, #108]	; f08 <apply_undline+0x284>
     e98:	mov	r2, r0
     e9c:	mov	r0, #7
     ea0:	ldr	r3, [r4, #16]
     ea4:	add	r1, pc, r1
     ea8:	bl	ad0 <ilog@plt>
     eac:	mov	r1, r4
     eb0:	ldr	r0, [r4, #16]
     eb4:	bl	ac4 <delete_one_address_conf@plt>
     eb8:	b	dec <apply_undline+0x168>
     ebc:	ldr	r1, [pc, #72]	; f0c <apply_undline+0x288>
     ec0:	mov	r2, r6
     ec4:	mov	r0, r5
     ec8:	add	r1, pc, r1
     ecc:	bl	b00 <sendto_one_notice@plt>
     ed0:	b	dec <apply_undline+0x168>
     ed4:	add	r8, r0, r1
     ed8:	add	r8, r2, r8, lsl #2
     edc:	str	ip, [r8, #4]
     ee0:	b	d40 <apply_undline+0xbc>
     ee4:	.word	0x0001233c
     ee8:	.word	0x000000a4
     eec:	.word	0x000000ac
     ef0:	.word	0x00000eb0
     ef4:	.word	0x00000ec0
     ef8:	.word	0x00000ed0
     efc:	.word	0x00000df4
     f00:	.word	0x00000e64
     f04:	.word	0x00000e6c
     f08:	.word	0x00000e10
     f0c:	.word	0x00000d70

00000f10 <mo_undline>:
     f10:	strd	r4, [sp, #-24]!	; 0xffffffe8
     f14:	mov	r4, r2
     f18:	ldr	r2, [r2, #24]
     f1c:	strd	r6, [sp, #8]
     f20:	ldr	r5, [pc, #372]	; 109c <mo_undline+0x18c>
     f24:	str	r8, [sp, #16]
     f28:	str	lr, [sp, #20]
     f2c:	sub	sp, sp, #16
     f30:	cmp	r2, #0
     f34:	ldr	r6, [sp, #40]	; 0x28
     f38:	add	r5, pc, r5
     f3c:	beq	fd4 <mo_undline+0xc4>
     f40:	ldr	r0, [r2, #36]	; 0x24
     f44:	cmp	r0, #0
     f48:	beq	fd4 <mo_undline+0xc4>
     f4c:	ldr	r1, [pc, #332]	; 10a0 <mo_undline+0x190>
     f50:	mov	r7, r3
     f54:	add	r1, pc, r1
     f58:	bl	b3c <privilegeset_in_set@plt>
     f5c:	cmp	r0, #0
     f60:	beq	fd4 <mo_undline+0xc4>
     f64:	cmp	r7, #3
     f68:	ldr	r7, [r6, #4]
     f6c:	ble	1018 <mo_undline+0x108>
     f70:	ldr	r1, [pc, #300]	; 10a4 <mo_undline+0x194>
     f74:	ldr	r0, [r6, #8]
     f78:	add	r1, pc, r1
     f7c:	bl	b48 <irccmp@plt>
     f80:	subs	r8, r0, #0
     f84:	bne	1018 <mo_undline+0x108>
     f88:	ldr	r2, [r4, #24]
     f8c:	cmp	r2, #0
     f90:	beq	fb4 <mo_undline+0xa4>
     f94:	ldr	r0, [r2, #36]	; 0x24
     f98:	cmp	r0, #0
     f9c:	beq	fb4 <mo_undline+0xa4>
     fa0:	ldr	r1, [pc, #256]	; 10a8 <mo_undline+0x198>
     fa4:	add	r1, pc, r1
     fa8:	bl	b3c <privilegeset_in_set@plt>
     fac:	cmp	r0, #0
     fb0:	bne	103c <mo_undline+0x12c>
     fb4:	ldr	ip, [pc, #240]	; 10ac <mo_undline+0x19c>
     fb8:	add	r3, r4, #88	; 0x58
     fbc:	mov	r0, r4
     fc0:	ldr	r1, [pc, #232]	; 10b0 <mo_undline+0x1a0>
     fc4:	ldr	r2, [pc, #232]	; 10b4 <mo_undline+0x1a4>
     fc8:	add	ip, pc, ip
     fcc:	add	r1, pc, r1
     fd0:	b	ff0 <mo_undline+0xe0>
     fd4:	ldr	ip, [pc, #220]	; 10b8 <mo_undline+0x1a8>
     fd8:	add	r3, r4, #88	; 0x58
     fdc:	mov	r0, r4
     fe0:	ldr	r1, [pc, #212]	; 10bc <mo_undline+0x1ac>
     fe4:	ldr	r2, [pc, #200]	; 10b4 <mo_undline+0x1a4>
     fe8:	add	ip, pc, ip
     fec:	add	r1, pc, r1
     ff0:	ldr	r2, [r5, r2]
     ff4:	str	ip, [sp, #40]	; 0x28
     ff8:	add	r2, r2, #88	; 0x58
     ffc:	add	sp, sp, #16
    1000:	ldrd	r4, [sp]
    1004:	ldrd	r6, [sp, #8]
    1008:	ldr	r8, [sp, #16]
    100c:	ldr	lr, [sp, #20]
    1010:	add	sp, sp, #24
    1014:	b	a04 <sendto_one@plt>
    1018:	mov	r1, r7
    101c:	mov	r0, r4
    1020:	add	sp, sp, #16
    1024:	ldrd	r4, [sp]
    1028:	ldrd	r6, [sp, #8]
    102c:	ldr	r8, [sp, #16]
    1030:	ldr	lr, [sp, #20]
    1034:	add	sp, sp, #24
    1038:	b	c84 <apply_undline>
    103c:	ldr	r1, [pc, #124]	; 10c0 <mo_undline+0x1b0>
    1040:	mov	r3, r8
    1044:	mov	r0, r4
    1048:	ldr	r2, [pc, #116]	; 10c4 <mo_undline+0x1b4>
    104c:	ldr	r6, [r6, #12]
    1050:	ldr	ip, [r5, r1]
    1054:	add	r2, pc, r2
    1058:	mov	r1, r6
    105c:	stm	sp, {r2, r6, r7}
    1060:	ldr	r2, [ip]
    1064:	bl	9e0 <sendto_match_servs@plt>
    1068:	ldr	r3, [pc, #68]	; 10b4 <mo_undline+0x1a4>
    106c:	mov	r0, r6
    1070:	ldr	r1, [r5, r3]
    1074:	add	r1, r1, #88	; 0x58
    1078:	bl	adc <match@plt>
    107c:	cmp	r0, #0
    1080:	bne	1018 <mo_undline+0x108>
    1084:	add	sp, sp, #16
    1088:	ldrd	r4, [sp]
    108c:	ldrd	r6, [sp, #8]
    1090:	ldr	r8, [sp, #16]
    1094:	add	sp, sp, #20
    1098:	pop	{pc}		; (ldr pc, [sp], #4)
    109c:	.word	0x000120c0
    10a0:	.word	0x00000dec
    10a4:	.word	0x00000dd4
    10a8:	.word	0x00000db8
    10ac:	.word	0x00000d88
    10b0:	.word	0x00000d44
    10b4:	.word	0x000000ac
    10b8:	.word	0x00000d50
    10bc:	.word	0x00000d24
    10c0:	.word	0x000000b0
    10c4:	.word	0x00000d18

000010c8 <me_undline>:
    10c8:	ldrh	r3, [r2, #80]	; 0x50
    10cc:	strd	r4, [sp, #-16]!
    10d0:	str	r6, [sp, #8]
    10d4:	str	lr, [sp, #12]
    10d8:	ldr	r5, [sp, #16]
    10dc:	cmp	r3, #64	; 0x40
    10e0:	bne	1114 <me_undline+0x4c>
    10e4:	ldr	r3, [r2, #24]
    10e8:	cmp	r3, #0
    10ec:	beq	1114 <me_undline+0x4c>
    10f0:	add	r1, r2, #163	; 0xa3
    10f4:	add	r0, r2, #152	; 0x98
    10f8:	mov	r4, r2
    10fc:	ldr	r2, [r2, #32]
    1100:	mov	r3, #8192	; 0x2000
    1104:	add	r2, r2, #88	; 0x58
    1108:	bl	b30 <find_shared_conf@plt>
    110c:	cmp	r0, #0
    1110:	bne	1124 <me_undline+0x5c>
    1114:	ldrd	r4, [sp]
    1118:	ldr	r6, [sp, #8]
    111c:	add	sp, sp, #12
    1120:	pop	{pc}		; (ldr pc, [sp], #4)
    1124:	mov	r0, r4
    1128:	ldr	r1, [r5, #4]
    112c:	ldrd	r4, [sp]
    1130:	ldr	r6, [sp, #8]
    1134:	ldr	lr, [sp, #12]
    1138:	add	sp, sp, #16
    113c:	b	c84 <apply_undline>

00001140 <apply_dline>:
    1140:	strd	r4, [sp, #-36]!	; 0xffffffdc
    1144:	mov	r5, r0
    1148:	mov	r0, r1
    114c:	strd	r6, [sp, #8]
    1150:	mov	r6, r3
    1154:	strd	r8, [sp, #16]
    1158:	mov	r8, r1
    115c:	mov	r9, r2
    1160:	strd	sl, [sp, #24]
    1164:	str	lr, [sp, #32]
    1168:	sub	sp, sp, #164	; 0xa4
    116c:	add	r4, sp, #32
    1170:	ldr	r7, [pc, #1488]	; 1748 <apply_dline+0x608>
    1174:	add	r2, sp, #24
    1178:	mov	r1, r4
    117c:	bl	9c8 <parse_netmask_strict@plt>
    1180:	sub	r3, r0, #2
    1184:	cmp	r3, #1
    1188:	add	r7, pc, r7
    118c:	bhi	1448 <apply_dline+0x308>
    1190:	ldr	r3, [r5, #24]
    1194:	cmp	r0, #3
    1198:	moveq	sl, #10
    119c:	movne	sl, #2
    11a0:	cmp	r3, #0
    11a4:	beq	13a8 <apply_dline+0x268>
    11a8:	ldr	r0, [r3, #36]	; 0x24
    11ac:	cmp	r0, #0
    11b0:	beq	13a8 <apply_dline+0x268>
    11b4:	ldr	r1, [pc, #1424]	; 174c <apply_dline+0x60c>
    11b8:	add	r1, pc, r1
    11bc:	bl	b3c <privilegeset_in_set@plt>
    11c0:	cmp	r0, #0
    11c4:	bne	11f4 <apply_dline+0xb4>
    11c8:	ldr	r3, [r5, #24]
    11cc:	cmp	r3, #0
    11d0:	beq	13a8 <apply_dline+0x268>
    11d4:	ldr	r0, [r3, #36]	; 0x24
    11d8:	cmp	r0, #0
    11dc:	beq	13a8 <apply_dline+0x268>
    11e0:	ldr	r1, [pc, #1384]	; 1750 <apply_dline+0x610>
    11e4:	add	r1, pc, r1
    11e8:	bl	b3c <privilegeset_in_set@plt>
    11ec:	cmp	r0, #0
    11f0:	beq	13a8 <apply_dline+0x268>
    11f4:	ldr	r3, [sp, #24]
    11f8:	cmp	r3, #7
    11fc:	ble	15cc <apply_dline+0x48c>
    1200:	ldr	r3, [pc, #1356]	; 1754 <apply_dline+0x614>
    1204:	ldr	r3, [r7, r3]
    1208:	ldr	r3, [r3, #140]	; 0x8c
    120c:	cmp	r3, #0
    1210:	bne	13c8 <apply_dline+0x288>
    1214:	bl	a7c <rb_set_time@plt>
    1218:	bl	9bc <make_conf@plt>
    121c:	mov	r3, #131072	; 0x20000
    1220:	mov	r4, r0
    1224:	str	r3, [r0]
    1228:	bl	9d4 <rb_current_time@plt>
    122c:	str	r0, [r4, #40]	; 0x28
    1230:	mov	r0, r8
    1234:	bl	aac <strlen@plt>
    1238:	add	sl, r0, #1
    123c:	mov	r0, sl
    1240:	bl	a88 <malloc@plt>
    1244:	subs	fp, r0, #0
    1248:	beq	15c8 <apply_dline+0x488>
    124c:	mov	r2, sl
    1250:	mov	r1, r8
    1254:	bl	a10 <memcpy@plt>
    1258:	mov	r0, r6
    125c:	str	fp, [r4, #16]
    1260:	bl	aac <strlen@plt>
    1264:	add	r8, r0, #1
    1268:	mov	r0, r8
    126c:	bl	a88 <malloc@plt>
    1270:	subs	sl, r0, #0
    1274:	beq	15c8 <apply_dline+0x488>
    1278:	mov	r2, r8
    127c:	mov	r1, r6
    1280:	bl	a10 <memcpy@plt>
    1284:	mov	r0, r5
    1288:	str	sl, [r4, #20]
    128c:	bl	a4c <get_oper_name@plt>
    1290:	bl	a64 <operhash_add@plt>
    1294:	str	r0, [r4, #12]
    1298:	mov	r0, r6
    129c:	bl	aac <strlen@plt>
    12a0:	movw	r3, #390	; 0x186
    12a4:	mov	r1, #124	; 0x7c
    12a8:	cmp	r0, r3
    12ac:	mov	r0, r6
    12b0:	movhi	r3, #0
    12b4:	strbhi	r3, [r6, #390]	; 0x186
    12b8:	bl	ab8 <strchr@plt>
    12bc:	subs	sl, r0, #0
    12c0:	beq	1484 <apply_dline+0x344>
    12c4:	mov	r3, #0
    12c8:	mov	r8, sl
    12cc:	strb	r3, [r8], #1
    12d0:	cmp	r8, r3
    12d4:	beq	1484 <apply_dline+0x344>
    12d8:	ldrb	r3, [sl, #1]
    12dc:	cmp	r3, #0
    12e0:	bne	1530 <apply_dline+0x3f0>
    12e4:	cmp	r9, #0
    12e8:	ble	1660 <apply_dline+0x520>
    12ec:	bl	9d4 <rb_current_time@plt>
    12f0:	add	r3, r9, r0
    12f4:	mov	r0, r4
    12f8:	str	r3, [r4, #36]	; 0x24
    12fc:	bl	a70 <add_temp_dline@plt>
    1300:	ldrb	r1, [sl, #1]
    1304:	movw	r3, #34953	; 0x8889
    1308:	movt	r3, #34952	; 0x8888
    130c:	asr	r2, r9, #31
    1310:	smull	r0, r3, r3, r9
    1314:	cmp	r1, #0
    1318:	add	r9, r3, r9
    131c:	rsb	r9, r2, r9, asr #5
    1320:	bne	1568 <apply_dline+0x428>
    1324:	mov	r0, r5
    1328:	bl	a4c <get_oper_name@plt>
    132c:	ldr	r2, [pc, #1060]	; 1758 <apply_dline+0x618>
    1330:	mov	r3, r0
    1334:	mov	r1, #0
    1338:	str	r6, [sp, #8]
    133c:	mov	r0, #256	; 0x100
    1340:	ldr	ip, [r4, #16]
    1344:	add	r2, pc, r2
    1348:	stm	sp, {r9, ip}
    134c:	bl	a34 <sendto_realops_snomask@plt>
    1350:	mov	r0, r5
    1354:	bl	a4c <get_oper_name@plt>
    1358:	ldr	r1, [pc, #1020]	; 175c <apply_dline+0x61c>
    135c:	mov	r2, r0
    1360:	mov	r3, r9
    1364:	str	r6, [sp, #4]
    1368:	mov	r0, #7
    136c:	ldr	ip, [r4, #16]
    1370:	add	r1, pc, r1
    1374:	str	ip, [sp]
    1378:	bl	ad0 <ilog@plt>
    137c:	ldr	r2, [pc, #988]	; 1760 <apply_dline+0x620>
    1380:	add	r3, r5, #88	; 0x58
    1384:	mov	r0, r5
    1388:	ldr	r1, [pc, #980]	; 1764 <apply_dline+0x624>
    138c:	ldr	ip, [r4, #16]
    1390:	ldr	r2, [r7, r2]
    1394:	add	r1, pc, r1
    1398:	stm	sp, {r9, ip}
    139c:	add	r2, r2, #88	; 0x58
    13a0:	bl	a04 <sendto_one@plt>
    13a4:	b	1468 <apply_dline+0x328>
    13a8:	ldr	r3, [sp, #24]
    13ac:	cmp	r3, #15
    13b0:	bgt	1200 <apply_dline+0xc0>
    13b4:	ldr	r1, [pc, #940]	; 1768 <apply_dline+0x628>
    13b8:	mov	r0, r5
    13bc:	add	r1, pc, r1
    13c0:	bl	b00 <sendto_one_notice@plt>
    13c4:	b	1468 <apply_dline+0x328>
    13c8:	mov	r0, r4
    13cc:	mov	r1, sl
    13d0:	bl	b54 <find_dline@plt>
    13d4:	subs	r4, r0, #0
    13d8:	beq	1214 <apply_dline+0xd4>
    13dc:	add	r2, sp, #28
    13e0:	mov	r1, #0
    13e4:	ldr	r0, [r4, #16]
    13e8:	bl	9c8 <parse_netmask_strict@plt>
    13ec:	cmp	r0, #0
    13f0:	beq	1214 <apply_dline+0xd4>
    13f4:	ldrd	r2, [sp, #24]
    13f8:	cmp	r2, r3
    13fc:	blt	1214 <apply_dline+0xd4>
    1400:	ldr	ip, [r4, #20]
    1404:	cmp	ip, #0
    1408:	beq	1638 <apply_dline+0x4f8>
    140c:	ldr	r2, [r4, #4]
    1410:	add	r3, r5, #88	; 0x58
    1414:	mov	r0, r5
    1418:	ldr	lr, [r4, #16]
    141c:	tst	r2, #64	; 0x40
    1420:	ldr	r2, [pc, #824]	; 1760 <apply_dline+0x620>
    1424:	beq	162c <apply_dline+0x4ec>
    1428:	ldr	r1, [pc, #828]	; 176c <apply_dline+0x62c>
    142c:	add	r1, pc, r1
    1430:	ldr	r2, [r7, r2]
    1434:	stm	sp, {r8, lr}
    1438:	str	ip, [sp, #8]
    143c:	add	r2, r2, #88	; 0x58
    1440:	bl	a04 <sendto_one@plt>
    1444:	b	1468 <apply_dline+0x328>
    1448:	ldr	r2, [pc, #784]	; 1760 <apply_dline+0x620>
    144c:	add	r3, r5, #88	; 0x58
    1450:	mov	r0, r5
    1454:	ldr	r1, [pc, #788]	; 1770 <apply_dline+0x630>
    1458:	ldr	r2, [r7, r2]
    145c:	add	r1, pc, r1
    1460:	add	r2, r2, #88	; 0x58
    1464:	bl	a04 <sendto_one@plt>
    1468:	add	sp, sp, #164	; 0xa4
    146c:	ldrd	r4, [sp]
    1470:	ldrd	r6, [sp, #8]
    1474:	ldrd	r8, [sp, #16]
    1478:	ldrd	sl, [sp, #24]
    147c:	add	sp, sp, #32
    1480:	pop	{pc}		; (ldr pc, [sp], #4)
    1484:	cmp	r9, #0
    1488:	bgt	15e0 <apply_dline+0x4a0>
    148c:	mov	r3, #0
    1490:	mov	r1, #131072	; 0x20000
    1494:	ldr	r0, [r4, #16]
    1498:	mov	r2, r3
    149c:	str	r4, [sp]
    14a0:	bl	a94 <add_conf_by_address@plt>
    14a4:	ldr	r2, [r4, #16]
    14a8:	ldr	ip, [r4, #24]
    14ac:	cmp	ip, #0
    14b0:	beq	1610 <apply_dline+0x4d0>
    14b4:	ldrb	lr, [ip]
    14b8:	cmp	lr, #0
    14bc:	beq	1644 <apply_dline+0x504>
    14c0:	mov	r0, #0
    14c4:	mov	r1, r5
    14c8:	stm	sp, {r6, ip}
    14cc:	mov	r3, r0
    14d0:	str	r0, [sp, #8]
    14d4:	mov	r0, #1
    14d8:	bl	a40 <bandb_add@plt>
    14dc:	mov	r0, r5
    14e0:	bl	a4c <get_oper_name@plt>
    14e4:	ldr	r2, [pc, #648]	; 1774 <apply_dline+0x634>
    14e8:	mov	r3, r0
    14ec:	mov	r1, #0
    14f0:	str	r6, [sp, #4]
    14f4:	mov	r0, #256	; 0x100
    14f8:	ldr	ip, [r4, #16]
    14fc:	add	r2, pc, r2
    1500:	str	ip, [sp]
    1504:	bl	a34 <sendto_realops_snomask@plt>
    1508:	mov	r0, r5
    150c:	bl	a4c <get_oper_name@plt>
    1510:	ldr	r1, [pc, #608]	; 1778 <apply_dline+0x638>
    1514:	mov	r2, r0
    1518:	mov	r0, #7
    151c:	ldr	r3, [r4, #16]
    1520:	str	r6, [sp]
    1524:	add	r1, pc, r1
    1528:	bl	ad0 <ilog@plt>
    152c:	b	1468 <apply_dline+0x328>
    1530:	mov	r0, r8
    1534:	bl	aac <strlen@plt>
    1538:	add	fp, r0, #1
    153c:	mov	r0, fp
    1540:	bl	a88 <malloc@plt>
    1544:	subs	r3, r0, #0
    1548:	str	r3, [sp, #20]
    154c:	beq	15c8 <apply_dline+0x488>
    1550:	mov	r2, fp
    1554:	mov	r1, r8
    1558:	bl	a10 <memcpy@plt>
    155c:	ldr	r3, [sp, #20]
    1560:	str	r3, [r4, #24]
    1564:	b	12e4 <apply_dline+0x1a4>
    1568:	mov	r0, r5
    156c:	bl	a4c <get_oper_name@plt>
    1570:	ldr	r2, [pc, #516]	; 177c <apply_dline+0x63c>
    1574:	mov	r3, r0
    1578:	mov	r1, #0
    157c:	str	r6, [sp, #8]
    1580:	mov	r0, #256	; 0x100
    1584:	str	r8, [sp, #12]
    1588:	ldr	ip, [r4, #16]
    158c:	add	r2, pc, r2
    1590:	stm	sp, {r9, ip}
    1594:	bl	a34 <sendto_realops_snomask@plt>
    1598:	mov	r0, r5
    159c:	bl	a4c <get_oper_name@plt>
    15a0:	ldr	r1, [pc, #472]	; 1780 <apply_dline+0x640>
    15a4:	mov	r2, r0
    15a8:	mov	r3, r9
    15ac:	stmib	sp, {r6, r8}
    15b0:	mov	r0, #7
    15b4:	ldr	ip, [r4, #16]
    15b8:	add	r1, pc, r1
    15bc:	str	ip, [sp]
    15c0:	bl	ad0 <ilog@plt>
    15c4:	b	137c <apply_dline+0x23c>
    15c8:	bl	a1c <rb_outofmemory@plt>
    15cc:	ldr	r1, [pc, #432]	; 1784 <apply_dline+0x644>
    15d0:	mov	r0, r5
    15d4:	add	r1, pc, r1
    15d8:	bl	b00 <sendto_one_notice@plt>
    15dc:	b	1468 <apply_dline+0x328>
    15e0:	bl	9d4 <rb_current_time@plt>
    15e4:	add	r3, r9, r0
    15e8:	mov	r0, r4
    15ec:	str	r3, [r4, #36]	; 0x24
    15f0:	bl	a70 <add_temp_dline@plt>
    15f4:	movw	r3, #34953	; 0x8889
    15f8:	movt	r3, #34952	; 0x8888
    15fc:	asr	r2, r9, #31
    1600:	smull	r1, r3, r3, r9
    1604:	add	r9, r3, r9
    1608:	rsb	r9, r2, r9, asr #5
    160c:	b	1324 <apply_dline+0x1e4>
    1610:	mov	r3, ip
    1614:	mov	r1, r5
    1618:	stm	sp, {r6, ip}
    161c:	mov	r0, #1
    1620:	str	ip, [sp, #8]
    1624:	bl	a40 <bandb_add@plt>
    1628:	b	14dc <apply_dline+0x39c>
    162c:	ldr	r1, [pc, #340]	; 1788 <apply_dline+0x648>
    1630:	add	r1, pc, r1
    1634:	b	1430 <apply_dline+0x2f0>
    1638:	ldr	ip, [pc, #332]	; 178c <apply_dline+0x64c>
    163c:	add	ip, pc, ip
    1640:	b	140c <apply_dline+0x2cc>
    1644:	mov	r3, lr
    1648:	mov	r1, r5
    164c:	stm	sp, {r6, lr}
    1650:	mov	r0, #1
    1654:	str	lr, [sp, #8]
    1658:	bl	a40 <bandb_add@plt>
    165c:	b	14dc <apply_dline+0x39c>
    1660:	mov	r3, #0
    1664:	mov	r1, #131072	; 0x20000
    1668:	str	r4, [sp]
    166c:	mov	r2, r3
    1670:	ldr	r0, [r4, #16]
    1674:	bl	a94 <add_conf_by_address@plt>
    1678:	ldr	r2, [r4, #16]
    167c:	ldr	ip, [r4, #24]
    1680:	cmp	ip, #0
    1684:	beq	1710 <apply_dline+0x5d0>
    1688:	ldrb	lr, [ip]
    168c:	cmp	lr, #0
    1690:	beq	172c <apply_dline+0x5ec>
    1694:	mov	r0, #0
    1698:	mov	r1, r5
    169c:	stm	sp, {r6, ip}
    16a0:	mov	r3, r0
    16a4:	str	r0, [sp, #8]
    16a8:	mov	r0, #1
    16ac:	bl	a40 <bandb_add@plt>
    16b0:	ldrb	r3, [sl, #1]
    16b4:	cmp	r3, #0
    16b8:	beq	14dc <apply_dline+0x39c>
    16bc:	mov	r0, r5
    16c0:	bl	a4c <get_oper_name@plt>
    16c4:	ldr	r2, [pc, #196]	; 1790 <apply_dline+0x650>
    16c8:	mov	r3, r0
    16cc:	mov	r1, #0
    16d0:	stmib	sp, {r6, r8}
    16d4:	mov	r0, #256	; 0x100
    16d8:	ldr	ip, [r4, #16]
    16dc:	add	r2, pc, r2
    16e0:	str	ip, [sp]
    16e4:	bl	a34 <sendto_realops_snomask@plt>
    16e8:	mov	r0, r5
    16ec:	bl	a4c <get_oper_name@plt>
    16f0:	ldr	r1, [pc, #156]	; 1794 <apply_dline+0x654>
    16f4:	mov	r2, r0
    16f8:	mov	r0, #7
    16fc:	ldr	r3, [r4, #16]
    1700:	stm	sp, {r6, r8}
    1704:	add	r1, pc, r1
    1708:	bl	ad0 <ilog@plt>
    170c:	b	1468 <apply_dline+0x328>
    1710:	mov	r3, ip
    1714:	mov	r1, r5
    1718:	stm	sp, {r6, ip}
    171c:	mov	r0, #1
    1720:	str	ip, [sp, #8]
    1724:	bl	a40 <bandb_add@plt>
    1728:	b	16b0 <apply_dline+0x570>
    172c:	mov	r3, lr
    1730:	mov	r1, r5
    1734:	stm	sp, {r6, lr}
    1738:	mov	r0, #1
    173c:	str	lr, [sp, #8]
    1740:	bl	a40 <bandb_add@plt>
    1744:	b	16b0 <apply_dline+0x570>
    1748:	.word	0x00011e70
    174c:	.word	0x00000bf4
    1750:	.word	0x00000bd4
    1754:	.word	0x000000b4
    1758:	.word	0x00000b58
    175c:	.word	0x00000b5c
    1760:	.word	0x000000ac
    1764:	.word	0x00000b90
    1768:	.word	0x00000a48
    176c:	.word	0x00000a0c
    1770:	.word	0x00000930
    1774:	.word	0x00000a60
    1778:	.word	0x00000a58
    177c:	.word	0x00000950
    1780:	.word	0x00000958
    1784:	.word	0x000007f8
    1788:	.word	0x00000838
    178c:	.word	0x00000744
    1790:	.word	0x000008b0
    1794:	.word	0x000008ac

00001798 <mo_dline>:
    1798:	ldr	r1, [pc, #804]	; 1ac4 <mo_dline+0x32c>
    179c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    17a0:	mov	r4, r2
    17a4:	strd	r6, [sp, #8]
    17a8:	strd	r8, [sp, #16]
    17ac:	mov	r8, r3
    17b0:	strd	sl, [sp, #24]
    17b4:	add	fp, sp, #32
    17b8:	str	lr, [sp, #32]
    17bc:	sub	sp, sp, #132	; 0x84
    17c0:	add	r1, pc, r1
    17c4:	ldr	r5, [pc, #764]	; 1ac8 <mo_dline+0x330>
    17c8:	sub	r6, fp, #112	; 0x70
    17cc:	ldr	r0, [r2, #24]
    17d0:	ldrd	r2, [r1]
    17d4:	add	r5, pc, r5
    17d8:	ldrh	r1, [r1, #8]
    17dc:	cmp	r0, #0
    17e0:	strd	r2, [fp, #-112]	; 0xffffff90
    17e4:	strh	r1, [r6, #8]
    17e8:	beq	180c <mo_dline+0x74>
    17ec:	ldr	r0, [r0, #36]	; 0x24
    17f0:	cmp	r0, #0
    17f4:	beq	180c <mo_dline+0x74>
    17f8:	ldr	r1, [pc, #716]	; 1acc <mo_dline+0x334>
    17fc:	add	r1, pc, r1
    1800:	bl	b3c <privilegeset_in_set@plt>
    1804:	cmp	r0, #0
    1808:	bne	1854 <mo_dline+0xbc>
    180c:	ldr	r2, [pc, #700]	; 1ad0 <mo_dline+0x338>
    1810:	add	r3, r4, #88	; 0x58
    1814:	mov	r0, r4
    1818:	ldr	ip, [pc, #692]	; 1ad4 <mo_dline+0x33c>
    181c:	ldr	r1, [pc, #692]	; 1ad8 <mo_dline+0x340>
    1820:	ldr	r2, [r5, r2]
    1824:	add	ip, pc, ip
    1828:	add	r1, pc, r1
    182c:	str	ip, [sp]
    1830:	add	r2, r2, #88	; 0x58
    1834:	bl	a04 <sendto_one@plt>
    1838:	sub	sp, fp, #32
    183c:	ldrd	r4, [sp]
    1840:	ldrd	r6, [sp, #8]
    1844:	ldrd	r8, [sp, #16]
    1848:	ldrd	sl, [sp, #24]
    184c:	add	sp, sp, #32
    1850:	pop	{pc}		; (ldr pc, [sp], #4)
    1854:	ldr	r3, [fp, #4]
    1858:	ldr	r0, [r3, #4]
    185c:	bl	ae8 <valid_temp_time@plt>
    1860:	subs	r9, r0, #0
    1864:	blt	19a4 <mo_dline+0x20c>
    1868:	mov	r3, #12
    186c:	mov	r0, #20
    1870:	mov	r1, #16
    1874:	mov	sl, #4
    1878:	str	r3, [fp, #-124]	; 0xffffff84
    187c:	mov	r3, #5
    1880:	strd	r0, [fp, #-136]	; 0xffffff78
    1884:	str	r3, [fp, #-128]	; 0xffffff80
    1888:	mov	r3, #3
    188c:	str	r3, [fp, #-120]	; 0xffffff88
    1890:	mov	r3, #8
    1894:	ldr	r2, [fp, #4]
    1898:	sub	r0, fp, #100	; 0x64
    189c:	ldr	r7, [r2, r3]
    18a0:	mov	r2, #64	; 0x40
    18a4:	mov	r1, r7
    18a8:	bl	b24 <rb_strlcpy@plt>
    18ac:	ldrb	r3, [r7]
    18b0:	cmp	r3, #58	; 0x3a
    18b4:	beq	19e8 <mo_dline+0x250>
    18b8:	mov	r2, #0
    18bc:	mov	r0, r7
    18c0:	mov	r1, r2
    18c4:	bl	9c8 <parse_netmask_strict@plt>
    18c8:	sub	r0, r0, #2
    18cc:	cmp	r0, #1
    18d0:	bhi	19d0 <mo_dline+0x238>
    18d4:	cmp	r8, sl
    18d8:	bgt	1a00 <mo_dline+0x268>
    18dc:	ldr	r3, [fp, #-120]	; 0xffffff88
    18e0:	cmp	r8, r3
    18e4:	ble	1988 <mo_dline+0x1f0>
    18e8:	ldr	r2, [fp, #-124]	; 0xffffff84
    18ec:	ldr	r3, [fp, #4]
    18f0:	ldr	sl, [r3, r2]
    18f4:	cmp	sl, #0
    18f8:	beq	1988 <mo_dline+0x1f0>
    18fc:	ldrb	r3, [sl]
    1900:	cmp	r3, #0
    1904:	movne	r8, #0
    1908:	beq	1988 <mo_dline+0x1f0>
    190c:	mov	r0, sl
    1910:	bl	aac <strlen@plt>
    1914:	add	r3, r0, #8
    1918:	add	r2, r0, #1
    191c:	bic	r3, r3, #7
    1920:	mov	r1, sl
    1924:	sub	sp, sp, r3
    1928:	add	r6, sp, #24
    192c:	mov	r0, r6
    1930:	bl	a10 <memcpy@plt>
    1934:	cmp	r8, #0
    1938:	beq	1988 <mo_dline+0x1f0>
    193c:	ldr	ip, [pc, #408]	; 1adc <mo_dline+0x344>
    1940:	mov	r3, #0
    1944:	mov	r1, r8
    1948:	mov	r0, r4
    194c:	ldr	r2, [pc, #396]	; 1ae0 <mo_dline+0x348>
    1950:	ldr	ip, [r5, ip]
    1954:	str	r7, [sp, #12]
    1958:	add	r2, pc, r2
    195c:	stm	sp, {r2, r8, r9}
    1960:	ldr	r2, [ip]
    1964:	str	r6, [sp, #16]
    1968:	bl	9e0 <sendto_match_servs@plt>
    196c:	ldr	r3, [pc, #348]	; 1ad0 <mo_dline+0x338>
    1970:	mov	r0, r8
    1974:	ldr	r1, [r5, r3]
    1978:	add	r1, r1, #88	; 0x58
    197c:	bl	adc <match@plt>
    1980:	cmp	r0, #0
    1984:	beq	1838 <mo_dline+0xa0>
    1988:	mov	r3, r6
    198c:	mov	r2, r9
    1990:	mov	r1, r7
    1994:	mov	r0, r4
    1998:	bl	1140 <apply_dline>
    199c:	bl	af4 <check_dlines@plt>
    19a0:	b	1838 <mo_dline+0xa0>
    19a4:	mov	r2, #8
    19a8:	mov	r3, #4
    19ac:	mov	r0, #16
    19b0:	mov	r1, #12
    19b4:	mov	sl, #3
    19b8:	str	r2, [fp, #-124]	; 0xffffff84
    19bc:	mov	r2, #2
    19c0:	strd	r0, [fp, #-136]	; 0xffffff78
    19c4:	str	r3, [fp, #-128]	; 0xffffff80
    19c8:	str	r2, [fp, #-120]	; 0xffffff88
    19cc:	b	1894 <mo_dline+0xfc>
    19d0:	ldr	r1, [pc, #268]	; 1ae4 <mo_dline+0x34c>
    19d4:	mov	r2, r7
    19d8:	mov	r0, r4
    19dc:	add	r1, pc, r1
    19e0:	bl	b00 <sendto_one_notice@plt>
    19e4:	b	1838 <mo_dline+0xa0>
    19e8:	ldr	r1, [pc, #248]	; 1ae8 <mo_dline+0x350>
    19ec:	mov	r2, r7
    19f0:	mov	r0, r4
    19f4:	add	r1, pc, r1
    19f8:	bl	b00 <sendto_one_notice@plt>
    19fc:	b	1838 <mo_dline+0xa0>
    1a00:	ldr	r1, [pc, #228]	; 1aec <mo_dline+0x354>
    1a04:	ldr	sl, [fp, #-124]	; 0xffffff84
    1a08:	ldr	r3, [fp, #4]
    1a0c:	add	r1, pc, r1
    1a10:	ldr	r0, [r3, sl]
    1a14:	bl	b48 <irccmp@plt>
    1a18:	cmp	r0, #0
    1a1c:	bne	1a80 <mo_dline+0x2e8>
    1a20:	ldr	r3, [r4, #24]
    1a24:	cmp	r3, #0
    1a28:	beq	1a94 <mo_dline+0x2fc>
    1a2c:	ldr	r0, [r3, #36]	; 0x24
    1a30:	cmp	r0, #0
    1a34:	beq	1a94 <mo_dline+0x2fc>
    1a38:	ldr	r1, [pc, #176]	; 1af0 <mo_dline+0x358>
    1a3c:	add	r1, pc, r1
    1a40:	bl	b3c <privilegeset_in_set@plt>
    1a44:	cmp	r0, #0
    1a48:	beq	1a94 <mo_dline+0x2fc>
    1a4c:	ldrd	r2, [fp, #-132]	; 0xffffff7c
    1a50:	cmp	r8, r3
    1a54:	ldr	r3, [fp, #4]
    1a58:	ldr	r8, [r3, r2]
    1a5c:	ble	1934 <mo_dline+0x19c>
    1a60:	ldr	r2, [fp, #-136]	; 0xffffff78
    1a64:	ldr	sl, [r3, r2]
    1a68:	cmp	sl, #0
    1a6c:	beq	1934 <mo_dline+0x19c>
    1a70:	ldrb	r3, [sl]
    1a74:	cmp	r3, #0
    1a78:	beq	1934 <mo_dline+0x19c>
    1a7c:	b	190c <mo_dline+0x174>
    1a80:	ldr	r3, [fp, #4]
    1a84:	ldr	sl, [r3, sl]
    1a88:	cmp	sl, #0
    1a8c:	bne	18fc <mo_dline+0x164>
    1a90:	b	1988 <mo_dline+0x1f0>
    1a94:	ldr	r2, [pc, #52]	; 1ad0 <mo_dline+0x338>
    1a98:	add	r3, r4, #88	; 0x58
    1a9c:	mov	r0, r4
    1aa0:	ldr	ip, [pc, #76]	; 1af4 <mo_dline+0x35c>
    1aa4:	ldr	r1, [pc, #76]	; 1af8 <mo_dline+0x360>
    1aa8:	ldr	r2, [r5, r2]
    1aac:	add	ip, pc, ip
    1ab0:	add	r1, pc, r1
    1ab4:	str	ip, [sp]
    1ab8:	add	r2, r2, #88	; 0x58
    1abc:	bl	a04 <sendto_one@plt>
    1ac0:	b	1838 <mo_dline+0xa0>
    1ac4:	.word	0x00000854
    1ac8:	.word	0x00011824
    1acc:	.word	0x00000544
    1ad0:	.word	0x000000ac
    1ad4:	.word	0x0000079c
    1ad8:	.word	0x000004e8
    1adc:	.word	0x000000b0
    1ae0:	.word	0x000006a0
    1ae4:	.word	0x00000228
    1ae8:	.word	0x000005d4
    1aec:	.word	0x00000340
    1af0:	.word	0x00000320
    1af4:	.word	0x000002a4
    1af8:	.word	0x00000260

00001afc <me_dline>:
    1afc:	strd	r4, [sp, #-24]!	; 0xffffffe8
    1b00:	mov	r1, #0
    1b04:	mov	r4, r2
    1b08:	mov	r2, #10
    1b0c:	strd	r6, [sp, #8]
    1b10:	str	fp, [sp, #16]
    1b14:	add	fp, sp, #20
    1b18:	ldr	r5, [fp, #4]
    1b1c:	str	lr, [sp, #20]
    1b20:	ldr	r0, [r5, #4]
    1b24:	bl	9f8 <strtol@plt>
    1b28:	ldrh	r3, [r4, #80]	; 0x50
    1b2c:	cmp	r3, #64	; 0x40
    1b30:	bne	1bb4 <me_dline+0xb8>
    1b34:	ldr	r3, [r4, #24]
    1b38:	cmp	r3, #0
    1b3c:	beq	1bb4 <me_dline+0xb8>
    1b40:	ldr	r2, [r4, #32]
    1b44:	cmp	r0, #0
    1b48:	mov	r6, r0
    1b4c:	movgt	r3, #2048	; 0x800
    1b50:	movle	r3, #4096	; 0x1000
    1b54:	add	r1, r4, #163	; 0xa3
    1b58:	add	r0, r4, #152	; 0x98
    1b5c:	add	r2, r2, #88	; 0x58
    1b60:	bl	b30 <find_shared_conf@plt>
    1b64:	cmp	r0, #0
    1b68:	beq	1bb4 <me_dline+0xb8>
    1b6c:	ldr	r7, [r5, #12]
    1b70:	ldr	r5, [r5, #8]
    1b74:	mov	r0, r7
    1b78:	bl	aac <strlen@plt>
    1b7c:	add	r3, r0, #8
    1b80:	add	r2, r0, #1
    1b84:	bic	r3, r3, #7
    1b88:	mov	r1, r7
    1b8c:	sub	sp, sp, r3
    1b90:	mov	r3, sp
    1b94:	mov	r0, r3
    1b98:	bl	a10 <memcpy@plt>
    1b9c:	mov	r3, r0
    1ba0:	mov	r2, r6
    1ba4:	mov	r1, r5
    1ba8:	mov	r0, r4
    1bac:	bl	1140 <apply_dline>
    1bb0:	bl	af4 <check_dlines@plt>
    1bb4:	sub	sp, fp, #20
    1bb8:	ldrd	r4, [sp]
    1bbc:	ldrd	r6, [sp, #8]
    1bc0:	ldr	fp, [sp, #16]
    1bc4:	add	sp, sp, #20
    1bc8:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

00001bcc <_fini>:
    1bcc:	push	{r3, lr}
    1bd0:	pop	{r3, pc}
