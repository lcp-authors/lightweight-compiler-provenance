
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_printer:     file format elf32-littlearm


Disassembly of section .init:

00012858 <.init>:
   12858:	push	{r3, lr}
   1285c:	bl	129e4 <_start@@Base+0x3c>
   12860:	pop	{r3, pc}

Disassembly of section .plt:

00012864 <raise@plt-0x14>:
   12864:	push	{lr}		; (str lr, [sp, #-4]!)
   12868:	ldr	lr, [pc, #4]	; 12874 <raise@plt-0x4>
   1286c:	add	lr, pc, lr
   12870:	ldr	pc, [lr, #8]!
   12874:	andeq	fp, r1, ip, lsl #15

00012878 <raise@plt>:
   12878:	add	ip, pc, #0, 12
   1287c:	add	ip, ip, #110592	; 0x1b000
   12880:	ldr	pc, [ip, #1932]!	; 0x78c

00012884 <strcmp@plt>:
   12884:	add	ip, pc, #0, 12
   12888:	add	ip, ip, #110592	; 0x1b000
   1288c:	ldr	pc, [ip, #1924]!	; 0x784

00012890 <fopen@plt>:
   12890:	add	ip, pc, #0, 12
   12894:	add	ip, ip, #110592	; 0x1b000
   12898:	ldr	pc, [ip, #1916]!	; 0x77c

0001289c <memmove@plt>:
   1289c:	add	ip, pc, #0, 12
   128a0:	add	ip, ip, #110592	; 0x1b000
   128a4:	ldr	pc, [ip, #1908]!	; 0x774

000128a8 <free@plt>:
   128a8:	add	ip, pc, #0, 12
   128ac:	add	ip, ip, #110592	; 0x1b000
   128b0:	ldr	pc, [ip, #1900]!	; 0x76c

000128b4 <memcpy@plt>:
   128b4:	add	ip, pc, #0, 12
   128b8:	add	ip, ip, #110592	; 0x1b000
   128bc:	ldr	pc, [ip, #1892]!	; 0x764

000128c0 <ftell@plt>:
   128c0:	add	ip, pc, #0, 12
   128c4:	add	ip, ip, #110592	; 0x1b000
   128c8:	ldr	pc, [ip, #1884]!	; 0x75c

000128cc <rewind@plt>:
   128cc:	add	ip, pc, #0, 12
   128d0:	add	ip, ip, #110592	; 0x1b000
   128d4:	ldr	pc, [ip, #1876]!	; 0x754

000128d8 <realloc@plt>:
   128d8:	add	ip, pc, #0, 12
   128dc:	add	ip, ip, #110592	; 0x1b000
   128e0:	ldr	pc, [ip, #1868]!	; 0x74c

000128e4 <fwrite@plt>:
   128e4:	add	ip, pc, #0, 12
   128e8:	add	ip, ip, #110592	; 0x1b000
   128ec:	ldr	pc, [ip, #1860]!	; 0x744

000128f0 <puts@plt>:
   128f0:	add	ip, pc, #0, 12
   128f4:	add	ip, ip, #110592	; 0x1b000
   128f8:	ldr	pc, [ip, #1852]!	; 0x73c

000128fc <malloc@plt>:
   128fc:	add	ip, pc, #0, 12
   12900:	add	ip, ip, #110592	; 0x1b000
   12904:	ldr	pc, [ip, #1844]!	; 0x734

00012908 <__libc_start_main@plt>:
   12908:	add	ip, pc, #0, 12
   1290c:	add	ip, ip, #110592	; 0x1b000
   12910:	ldr	pc, [ip, #1836]!	; 0x72c

00012914 <__gmon_start__@plt>:
   12914:	add	ip, pc, #0, 12
   12918:	add	ip, ip, #110592	; 0x1b000
   1291c:	ldr	pc, [ip, #1828]!	; 0x724

00012920 <exit@plt>:
   12920:	add	ip, pc, #0, 12
   12924:	add	ip, ip, #110592	; 0x1b000
   12928:	ldr	pc, [ip, #1820]!	; 0x71c

0001292c <bcmp@plt>:
   1292c:	add	ip, pc, #0, 12
   12930:	add	ip, ip, #110592	; 0x1b000
   12934:	ldr	pc, [ip, #1812]!	; 0x714

00012938 <fprintf@plt>:
   12938:	add	ip, pc, #0, 12
   1293c:	add	ip, ip, #110592	; 0x1b000
   12940:	ldr	pc, [ip, #1804]!	; 0x70c

00012944 <memset@plt>:
   12944:	add	ip, pc, #0, 12
   12948:	add	ip, ip, #110592	; 0x1b000
   1294c:	ldr	pc, [ip, #1796]!	; 0x704

00012950 <strncpy@plt>:
   12950:	add	ip, pc, #0, 12
   12954:	add	ip, ip, #110592	; 0x1b000
   12958:	ldr	pc, [ip, #1788]!	; 0x6fc

0001295c <fclose@plt>:
   1295c:	add	ip, pc, #0, 12
   12960:	add	ip, ip, #110592	; 0x1b000
   12964:	ldr	pc, [ip, #1780]!	; 0x6f4

00012968 <sprintf@plt>:
   12968:	add	ip, pc, #0, 12
   1296c:	add	ip, ip, #110592	; 0x1b000
   12970:	ldr	pc, [ip, #1772]!	; 0x6ec

00012974 <fread_unlocked@plt>:
   12974:	add	ip, pc, #0, 12
   12978:	add	ip, ip, #110592	; 0x1b000
   1297c:	ldr	pc, [ip, #1764]!	; 0x6e4

00012980 <fseek@plt>:
   12980:	add	ip, pc, #0, 12
   12984:	add	ip, ip, #110592	; 0x1b000
   12988:	ldr	pc, [ip, #1756]!	; 0x6dc

0001298c <abort@plt>:
   1298c:	add	ip, pc, #0, 12
   12990:	add	ip, ip, #110592	; 0x1b000
   12994:	ldr	pc, [ip, #1748]!	; 0x6d4

00012998 <__assert_fail@plt>:
   12998:	add	ip, pc, #0, 12
   1299c:	add	ip, ip, #110592	; 0x1b000
   129a0:	ldr	pc, [ip, #1740]!	; 0x6cc

Disassembly of section .text:

000129a8 <_start@@Base>:
   129a8:	mov	fp, #0
   129ac:	mov	lr, #0
   129b0:	pop	{r1}		; (ldr r1, [sp], #4)
   129b4:	mov	r2, sp
   129b8:	push	{r2}		; (str r2, [sp, #-4]!)
   129bc:	push	{r0}		; (str r0, [sp, #-4]!)
   129c0:	ldr	ip, [pc, #16]	; 129d8 <_start@@Base+0x30>
   129c4:	push	{ip}		; (str ip, [sp, #-4]!)
   129c8:	ldr	r0, [pc, #12]	; 129dc <_start@@Base+0x34>
   129cc:	ldr	r3, [pc, #12]	; 129e0 <_start@@Base+0x38>
   129d0:	bl	12908 <__libc_start_main@plt>
   129d4:	bl	1298c <abort@plt>
   129d8:	andeq	fp, r1, r4, ror #29
   129dc:	andeq	r2, r1, r0, lsr #29
   129e0:	andeq	fp, r1, r4, lsl #29
   129e4:	ldr	r3, [pc, #20]	; 12a00 <_start@@Base+0x58>
   129e8:	ldr	r2, [pc, #20]	; 12a04 <_start@@Base+0x5c>
   129ec:	add	r3, pc, r3
   129f0:	ldr	r2, [r3, r2]
   129f4:	cmp	r2, #0
   129f8:	bxeq	lr
   129fc:	b	12914 <__gmon_start__@plt>
   12a00:	andeq	fp, r1, ip, lsl #12
   12a04:	andeq	r0, r0, r0, ror r0
   12a08:	ldr	r0, [pc, #24]	; 12a28 <_start@@Base+0x80>
   12a0c:	ldr	r3, [pc, #24]	; 12a2c <_start@@Base+0x84>
   12a10:	cmp	r3, r0
   12a14:	bxeq	lr
   12a18:	ldr	r3, [pc, #16]	; 12a30 <_start@@Base+0x88>
   12a1c:	cmp	r3, #0
   12a20:	bxeq	lr
   12a24:	bx	r3
   12a28:	andeq	lr, r2, r4, lsl #1
   12a2c:	andeq	lr, r2, r4, lsl #1
   12a30:	andeq	r0, r0, r0
   12a34:	ldr	r0, [pc, #36]	; 12a60 <_start@@Base+0xb8>
   12a38:	ldr	r1, [pc, #36]	; 12a64 <_start@@Base+0xbc>
   12a3c:	sub	r1, r1, r0
   12a40:	asr	r1, r1, #2
   12a44:	add	r1, r1, r1, lsr #31
   12a48:	asrs	r1, r1, #1
   12a4c:	bxeq	lr
   12a50:	ldr	r3, [pc, #16]	; 12a68 <_start@@Base+0xc0>
   12a54:	cmp	r3, #0
   12a58:	bxeq	lr
   12a5c:	bx	r3
   12a60:	andeq	lr, r2, r4, lsl #1
   12a64:	andeq	lr, r2, r4, lsl #1
   12a68:	andeq	r0, r0, r0
   12a6c:	push	{r4, lr}
   12a70:	ldr	r4, [pc, #24]	; 12a90 <_start@@Base+0xe8>
   12a74:	ldrb	r3, [r4]
   12a78:	cmp	r3, #0
   12a7c:	popne	{r4, pc}
   12a80:	bl	12a08 <_start@@Base+0x60>
   12a84:	mov	r3, #1
   12a88:	strb	r3, [r4]
   12a8c:	pop	{r4, pc}
   12a90:	muleq	r2, r0, r0
   12a94:	b	12a34 <_start@@Base+0x8c>

00012a98 <test_print@@Base>:
   12a98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a9c:	add	fp, sp, #28
   12aa0:	sub	sp, sp, #60	; 0x3c
   12aa4:	mov	r0, #0
   12aa8:	str	r0, [fp, #-32]	; 0xffffffe0
   12aac:	str	r0, [fp, #-36]	; 0xffffffdc
   12ab0:	str	r0, [fp, #-40]	; 0xffffffd8
   12ab4:	movw	sl, #57472	; 0xe080
   12ab8:	movt	sl, #2
   12abc:	ldr	r0, [sl]
   12ac0:	movw	r1, #48934	; 0xbf26
   12ac4:	movt	r1, #1
   12ac8:	bl	12890 <fopen@plt>
   12acc:	cmp	r0, #0
   12ad0:	bne	12af8 <test_print@@Base+0x60>
   12ad4:	ldr	r2, [sl]
   12ad8:	movw	r0, #57480	; 0xe088
   12adc:	movt	r0, #2
   12ae0:	ldr	r0, [r0]
   12ae4:	movw	r1, #48937	; 0xbf29
   12ae8:	movt	r1, #1
   12aec:	bl	12938 <fprintf@plt>
   12af0:	mvn	r4, #0
   12af4:	b	12d24 <test_print@@Base+0x28c>
   12af8:	mov	r5, r0
   12afc:	mov	r4, sp
   12b00:	mov	r0, r4
   12b04:	mov	r1, r5
   12b08:	bl	1aae4 <flatcc_json_printer_init@@Base>
   12b0c:	mov	r0, r4
   12b10:	bl	12d44 <test_print@@Base+0x2ac>
   12b14:	movw	r9, #57492	; 0xe094
   12b18:	movt	r9, #2
   12b1c:	ldr	r4, [r9]
   12b20:	cmp	r4, #0
   12b24:	beq	12b40 <test_print@@Base+0xa8>
   12b28:	movw	r1, #48969	; 0xbf49
   12b2c:	movt	r1, #1
   12b30:	mov	r0, r4
   12b34:	bl	12884 <strcmp@plt>
   12b38:	cmp	r0, #0
   12b3c:	bne	12c18 <test_print@@Base+0x180>
   12b40:	mov	r0, #288	; 0x120
   12b44:	str	r0, [fp, #-32]	; 0xffffffe0
   12b48:	movw	r8, #50340	; 0xc4a4
   12b4c:	movt	r8, #1
   12b50:	movw	r4, #57468	; 0xe07c
   12b54:	movt	r4, #2
   12b58:	ldr	r0, [r4]
   12b5c:	sub	r1, fp, #36	; 0x24
   12b60:	bl	12d68 <test_print@@Base+0x2d0>
   12b64:	cmp	r0, #0
   12b68:	bne	12b98 <test_print@@Base+0x100>
   12b6c:	ldr	r2, [r4]
   12b70:	movw	r0, #57480	; 0xe088
   12b74:	movt	r0, #2
   12b78:	ldr	r0, [r0]
   12b7c:	movw	r1, #49013	; 0xbf75
   12b80:	movt	r1, #1
   12b84:	bl	12938 <fprintf@plt>
   12b88:	mov	r6, #0
   12b8c:	mvn	r4, #0
   12b90:	mov	r7, #0
   12b94:	b	12cdc <test_print@@Base+0x244>
   12b98:	mov	r6, r0
   12b9c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12ba0:	mov	r4, sp
   12ba4:	mov	r0, r4
   12ba8:	mov	r1, r8
   12bac:	bl	12e60 <test_print@@Base+0x3c8>
   12bb0:	mov	r0, r4
   12bb4:	bl	12e8c <test_print@@Base+0x3f4>
   12bb8:	mov	r0, r4
   12bbc:	bl	12e98 <test_print@@Base+0x400>
   12bc0:	cmp	r0, #0
   12bc4:	beq	12bd4 <test_print@@Base+0x13c>
   12bc8:	movw	r0, #50309	; 0xc485
   12bcc:	movt	r0, #1
   12bd0:	bl	128f0 <puts@plt>
   12bd4:	mov	r0, r5
   12bd8:	bl	1295c <fclose@plt>
   12bdc:	ldr	r0, [sl]
   12be0:	sub	r1, fp, #40	; 0x28
   12be4:	bl	12d68 <test_print@@Base+0x2d0>
   12be8:	cmp	r0, #0
   12bec:	bne	12c60 <test_print@@Base+0x1c8>
   12bf0:	ldr	r2, [sl]
   12bf4:	movw	r0, #57480	; 0xe088
   12bf8:	movt	r0, #2
   12bfc:	ldr	r0, [r0]
   12c00:	movw	r1, #49061	; 0xbfa5
   12c04:	movt	r1, #1
   12c08:	bl	12938 <fprintf@plt>
   12c0c:	mov	r7, #0
   12c10:	mvn	r4, #0
   12c14:	b	12cac <test_print@@Base+0x214>
   12c18:	sub	r1, fp, #32
   12c1c:	mov	r0, r4
   12c20:	bl	12d68 <test_print@@Base+0x2d0>
   12c24:	mov	r8, r0
   12c28:	cmp	r0, #0
   12c2c:	bne	12b50 <test_print@@Base+0xb8>
   12c30:	ldr	r2, [r9]
   12c34:	movw	r0, #57480	; 0xe088
   12c38:	movt	r0, #2
   12c3c:	ldr	r0, [r0]
   12c40:	movw	r1, #48971	; 0xbf4b
   12c44:	movt	r1, #1
   12c48:	bl	12938 <fprintf@plt>
   12c4c:	mvn	r4, #0
   12c50:	mov	r8, #0
   12c54:	mov	r6, #0
   12c58:	mov	r7, #0
   12c5c:	b	12cdc <test_print@@Base+0x244>
   12c60:	mov	r7, r0
   12c64:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12c68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12c6c:	cmp	r2, r0
   12c70:	bne	12cb4 <test_print@@Base+0x21c>
   12c74:	mov	r0, r7
   12c78:	mov	r1, r6
   12c7c:	bl	1292c <bcmp@plt>
   12c80:	cmp	r0, #0
   12c84:	bne	12cb4 <test_print@@Base+0x21c>
   12c88:	movw	r0, #57480	; 0xe088
   12c8c:	movt	r0, #2
   12c90:	ldr	r3, [r0]
   12c94:	movw	r0, #49153	; 0xc001
   12c98:	movt	r0, #1
   12c9c:	mov	r1, #26
   12ca0:	mov	r2, #1
   12ca4:	bl	128e4 <fwrite@plt>
   12ca8:	mov	r4, #0
   12cac:	mov	r5, #0
   12cb0:	b	12cdc <test_print@@Base+0x244>
   12cb4:	movw	r0, #57480	; 0xe088
   12cb8:	movt	r0, #2
   12cbc:	ldr	r3, [r0]
   12cc0:	movw	r0, #49098	; 0xbfca
   12cc4:	movt	r0, #1
   12cc8:	mov	r1, #54	; 0x36
   12ccc:	mov	r2, #1
   12cd0:	bl	128e4 <fwrite@plt>
   12cd4:	mov	r5, #0
   12cd8:	mvn	r4, #0
   12cdc:	mov	r0, sp
   12ce0:	bl	1ae7c <flatcc_json_printer_clear@@Base>
   12ce4:	cmp	r8, #0
   12ce8:	ldrne	r0, [r9]
   12cec:	cmpne	r0, #0
   12cf0:	bne	12d30 <test_print@@Base+0x298>
   12cf4:	cmp	r6, #0
   12cf8:	beq	12d04 <test_print@@Base+0x26c>
   12cfc:	mov	r0, r6
   12d00:	bl	128a8 <free@plt>
   12d04:	cmp	r7, #0
   12d08:	beq	12d14 <test_print@@Base+0x27c>
   12d0c:	mov	r0, r7
   12d10:	bl	128a8 <free@plt>
   12d14:	cmp	r5, #0
   12d18:	beq	12d24 <test_print@@Base+0x28c>
   12d1c:	mov	r0, r5
   12d20:	bl	1295c <fclose@plt>
   12d24:	mov	r0, r4
   12d28:	sub	sp, fp, #28
   12d2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d30:	mov	r0, r8
   12d34:	bl	128a8 <free@plt>
   12d38:	cmp	r6, #0
   12d3c:	bne	12cfc <test_print@@Base+0x264>
   12d40:	b	12d04 <test_print@@Base+0x26c>
   12d44:	push	{r4, sl, fp, lr}
   12d48:	add	fp, sp, #8
   12d4c:	mov	r4, r0
   12d50:	bl	12f30 <main@@Base+0x90>
   12d54:	mov	r0, r4
   12d58:	bl	12f3c <main@@Base+0x9c>
   12d5c:	mov	r0, r4
   12d60:	pop	{r4, sl, fp, lr}
   12d64:	b	12f48 <main@@Base+0xa8>
   12d68:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12d6c:	add	fp, sp, #24
   12d70:	sub	sp, sp, #8
   12d74:	add	r9, sp, #4
   12d78:	cmp	r1, #0
   12d7c:	movne	r9, r1
   12d80:	movw	r1, #49397	; 0xc0f5
   12d84:	movt	r1, #1
   12d88:	bl	12890 <fopen@plt>
   12d8c:	cmp	r0, #0
   12d90:	beq	12e24 <test_print@@Base+0x38c>
   12d94:	mov	r6, r0
   12d98:	mov	r8, #0
   12d9c:	mov	r1, #0
   12da0:	mov	r2, #2
   12da4:	bl	12980 <fseek@plt>
   12da8:	mov	r0, r6
   12dac:	bl	128c0 <ftell@plt>
   12db0:	mov	r5, r0
   12db4:	str	r0, [r9]
   12db8:	cmp	r0, #10240	; 0x2800
   12dbc:	bhi	12e34 <test_print@@Base+0x39c>
   12dc0:	mov	r0, r6
   12dc4:	bl	128cc <rewind@plt>
   12dc8:	cmp	r5, #0
   12dcc:	mov	r0, r5
   12dd0:	movweq	r0, #1
   12dd4:	bl	128fc <malloc@plt>
   12dd8:	cmp	r0, #0
   12ddc:	beq	12e34 <test_print@@Base+0x39c>
   12de0:	mov	r7, r0
   12de4:	mov	r8, r0
   12de8:	mov	r1, #0
   12dec:	mov	r4, r1
   12df0:	add	r0, r7, r1
   12df4:	sub	r2, r5, r1
   12df8:	mov	r1, #1
   12dfc:	mov	r3, r6
   12e00:	bl	12974 <fread_unlocked@plt>
   12e04:	add	r1, r0, r4
   12e08:	cmp	r0, #0
   12e0c:	bne	12dec <test_print@@Base+0x354>
   12e10:	cmp	r5, r4
   12e14:	bne	12e2c <test_print@@Base+0x394>
   12e18:	mov	r0, r6
   12e1c:	bl	1295c <fclose@plt>
   12e20:	b	12e50 <test_print@@Base+0x3b8>
   12e24:	mov	r5, #0
   12e28:	b	12e4c <test_print@@Base+0x3b4>
   12e2c:	cmp	r6, #0
   12e30:	beq	12e3c <test_print@@Base+0x3a4>
   12e34:	mov	r0, r6
   12e38:	bl	1295c <fclose@plt>
   12e3c:	cmp	r8, #0
   12e40:	beq	12e4c <test_print@@Base+0x3b4>
   12e44:	mov	r0, r8
   12e48:	bl	128a8 <free@plt>
   12e4c:	mov	r8, #0
   12e50:	str	r5, [r9]
   12e54:	mov	r0, r8
   12e58:	sub	sp, fp, #24
   12e5c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12e60:	push	{fp, lr}
   12e64:	mov	fp, sp
   12e68:	sub	sp, sp, #8
   12e6c:	movw	r3, #12116	; 0x2f54
   12e70:	movt	r3, #1
   12e74:	str	r3, [sp]
   12e78:	movw	r3, #49056	; 0xbfa0
   12e7c:	movt	r3, #1
   12e80:	bl	1a868 <flatcc_json_printer_table_as_root@@Base>
   12e84:	mov	sp, fp
   12e88:	pop	{fp, pc}
   12e8c:	ldr	r2, [r0, #44]	; 0x2c
   12e90:	mov	r1, #1
   12e94:	bx	r2
   12e98:	ldr	r0, [r0, #36]	; 0x24
   12e9c:	bx	lr

00012ea0 <main@@Base>:
   12ea0:	push	{r4, r5, r6, sl, fp, lr}
   12ea4:	add	fp, sp, #16
   12ea8:	mov	r4, r1
   12eac:	mov	r5, r0
   12eb0:	movw	r6, #57480	; 0xe088
   12eb4:	movt	r6, #2
   12eb8:	ldr	r3, [r6]
   12ebc:	movw	r0, #49180	; 0xc01c
   12ec0:	movt	r0, #1
   12ec4:	mov	r1, #24
   12ec8:	mov	r2, #1
   12ecc:	bl	128e4 <fwrite@plt>
   12ed0:	cmp	r5, #1
   12ed4:	beq	12f08 <main@@Base+0x68>
   12ed8:	cmp	r5, #4
   12edc:	bne	12f10 <main@@Base+0x70>
   12ee0:	ldmib	r4, {r0, r1, r2}
   12ee4:	movw	r3, #57492	; 0xe094
   12ee8:	movt	r3, #2
   12eec:	str	r0, [r3]
   12ef0:	movw	r0, #57468	; 0xe07c
   12ef4:	movt	r0, #2
   12ef8:	str	r1, [r0]
   12efc:	movw	r0, #57472	; 0xe080
   12f00:	movt	r0, #2
   12f04:	str	r2, [r0]
   12f08:	pop	{r4, r5, r6, sl, fp, lr}
   12f0c:	b	12a98 <test_print@@Base>
   12f10:	ldr	r3, [r6]
   12f14:	movw	r0, #49205	; 0xc035
   12f18:	movt	r0, #1
   12f1c:	mov	r1, #191	; 0xbf
   12f20:	mov	r2, #1
   12f24:	bl	128e4 <fwrite@plt>
   12f28:	mov	r0, #1
   12f2c:	bl	12920 <exit@plt>
   12f30:	mov	r1, #2
   12f34:	strb	r1, [r0, #25]
   12f38:	bx	lr
   12f3c:	mov	r1, #1
   12f40:	strb	r1, [r0, #26]
   12f44:	bx	lr
   12f48:	mov	r1, #0
   12f4c:	strb	r1, [r0, #27]
   12f50:	bx	lr
   12f54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f58:	add	fp, sp, #28
   12f5c:	sub	sp, sp, #20
   12f60:	mov	r4, r1
   12f64:	mov	r5, r0
   12f68:	movw	r0, #13408	; 0x3460
   12f6c:	movt	r0, #1
   12f70:	mov	r1, #3
   12f74:	str	r1, [sp]
   12f78:	str	r0, [sp, #4]
   12f7c:	mov	r8, #0
   12f80:	movw	r3, #49400	; 0xc0f8
   12f84:	movt	r3, #1
   12f88:	mov	r0, r5
   12f8c:	mov	r1, r4
   12f90:	mov	r2, #0
   12f94:	bl	1a5bc <flatcc_json_printer_struct_field@@Base>
   12f98:	mov	r0, #150	; 0x96
   12f9c:	mov	r1, #4
   12fa0:	str	r1, [sp]
   12fa4:	mov	r6, #4
   12fa8:	str	r0, [sp, #4]
   12fac:	movw	r3, #49404	; 0xc0fc
   12fb0:	movt	r3, #1
   12fb4:	mov	r0, r5
   12fb8:	mov	r1, r4
   12fbc:	mov	r2, #1
   12fc0:	bl	15a44 <flatcc_json_printer_int16_field@@Base>
   12fc4:	mov	r0, #100	; 0x64
   12fc8:	mov	r1, #2
   12fcc:	str	r1, [sp]
   12fd0:	str	r0, [sp, #4]
   12fd4:	movw	r3, #49409	; 0xc101
   12fd8:	movt	r3, #1
   12fdc:	mov	r0, r5
   12fe0:	mov	r1, r4
   12fe4:	mov	r2, #2
   12fe8:	bl	15a44 <flatcc_json_printer_int16_field@@Base>
   12fec:	str	r6, [sp]
   12ff0:	movw	r3, #49412	; 0xc104
   12ff4:	movt	r3, #1
   12ff8:	mov	r0, r5
   12ffc:	mov	r1, r4
   13000:	mov	r2, #3
   13004:	bl	15308 <flatcc_json_printer_string_field@@Base>
   13008:	mov	r0, #9
   1300c:	str	r0, [sp]
   13010:	mov	r7, #5
   13014:	movw	r3, #49417	; 0xc109
   13018:	movt	r3, #1
   1301c:	mov	r0, r5
   13020:	mov	r1, r4
   13024:	mov	r2, #5
   13028:	bl	17278 <flatcc_json_printer_uint8_vector_field@@Base>
   1302c:	movw	r0, #13660	; 0x355c
   13030:	movt	r0, #1
   13034:	mov	r1, #8
   13038:	str	r7, [sp]
   1303c:	mov	r7, #5
   13040:	str	r1, [sp, #4]
   13044:	str	r0, [sp, #8]
   13048:	movw	r3, #49427	; 0xc113
   1304c:	movt	r3, #1
   13050:	mov	r0, r5
   13054:	mov	r1, r4
   13058:	mov	r2, #6
   1305c:	bl	162d8 <flatcc_json_printer_int8_enum_field@@Base>
   13060:	movw	r0, #13992	; 0x36a8
   13064:	movt	r0, #1
   13068:	movw	r1, #13876	; 0x3634
   1306c:	movt	r1, #1
   13070:	str	r6, [sp]
   13074:	str	r1, [sp, #4]
   13078:	str	r0, [sp, #8]
   1307c:	movw	r3, #49803	; 0xc28b
   13080:	movt	r3, #1
   13084:	mov	r0, r5
   13088:	mov	r1, r4
   1308c:	mov	r2, #8
   13090:	bl	1a210 <flatcc_json_printer_union_field@@Base>
   13094:	movw	r0, #14032	; 0x36d0
   13098:	movt	r0, #1
   1309c:	str	r7, [sp]
   130a0:	mov	sl, #5
   130a4:	str	r6, [sp, #4]
   130a8:	str	r0, [sp, #8]
   130ac:	movw	r3, #49433	; 0xc119
   130b0:	movt	r3, #1
   130b4:	mov	r0, r5
   130b8:	mov	r1, r4
   130bc:	mov	r2, #9
   130c0:	bl	19818 <flatcc_json_printer_struct_vector_field@@Base>
   130c4:	mov	r7, #17
   130c8:	str	r7, [sp]
   130cc:	movw	r3, #49439	; 0xc11f
   130d0:	movt	r3, #1
   130d4:	mov	r0, r5
   130d8:	mov	r1, r4
   130dc:	mov	r2, #10
   130e0:	bl	19aa0 <flatcc_json_printer_string_vector_field@@Base>
   130e4:	movw	r9, #12116	; 0x2f54
   130e8:	movt	r9, #1
   130ec:	stm	sp, {r7, r9}
   130f0:	movw	r3, #49457	; 0xc131
   130f4:	movt	r3, #1
   130f8:	mov	r0, r5
   130fc:	mov	r1, r4
   13100:	mov	r2, #11
   13104:	bl	19c50 <flatcc_json_printer_table_vector_field@@Base>
   13108:	str	sl, [sp]
   1310c:	mov	sl, #5
   13110:	str	r9, [sp, #4]
   13114:	movw	r3, #49475	; 0xc143
   13118:	movt	r3, #1
   1311c:	mov	r0, r5
   13120:	mov	r1, r4
   13124:	mov	r2, #12
   13128:	bl	1a184 <flatcc_json_printer_table_field@@Base>
   1312c:	mov	r0, #20
   13130:	stm	sp, {r0, r8, r9}
   13134:	movw	r3, #49481	; 0xc149
   13138:	movt	r3, #1
   1313c:	mov	r0, r5
   13140:	mov	r1, r4
   13144:	mov	r2, #13
   13148:	bl	1aa1c <flatcc_json_printer_table_as_nested_root@@Base>
   1314c:	movw	r0, #14128	; 0x3730
   13150:	movt	r0, #1
   13154:	mov	r1, #9
   13158:	str	r1, [sp]
   1315c:	str	r0, [sp, #4]
   13160:	movw	r3, #49502	; 0xc15e
   13164:	movt	r3, #1
   13168:	mov	r0, r5
   1316c:	mov	r1, r4
   13170:	mov	r2, #14
   13174:	bl	1a184 <flatcc_json_printer_table_field@@Base>
   13178:	mov	r9, #8
   1317c:	str	r9, [sp]
   13180:	mov	r0, #1
   13184:	str	r0, [sp, #4]
   13188:	movw	r3, #49512	; 0xc168
   1318c:	movt	r3, #1
   13190:	mov	r0, r5
   13194:	mov	r1, r4
   13198:	mov	r2, #15
   1319c:	bl	15c90 <flatcc_json_printer_bool_field@@Base>
   131a0:	mov	r6, #16
   131a4:	stm	sp, {r6, r8}
   131a8:	movw	r3, #49521	; 0xc171
   131ac:	movt	r3, #1
   131b0:	mov	r0, r5
   131b4:	mov	r1, r4
   131b8:	mov	r2, #16
   131bc:	bl	15afc <flatcc_json_printer_int32_field@@Base>
   131c0:	stm	sp, {r6, r8}
   131c4:	movw	r3, #49538	; 0xc182
   131c8:	movt	r3, #1
   131cc:	mov	r0, r5
   131d0:	mov	r1, r4
   131d4:	mov	r2, #17
   131d8:	bl	157f8 <flatcc_json_printer_uint32_field@@Base>
   131dc:	str	r8, [sp, #8]
   131e0:	str	r8, [sp, #12]
   131e4:	str	r6, [sp]
   131e8:	movw	r3, #49555	; 0xc193
   131ec:	movt	r3, #1
   131f0:	mov	r0, r5
   131f4:	mov	r1, r4
   131f8:	mov	r2, #18
   131fc:	bl	15bb4 <flatcc_json_printer_int64_field@@Base>
   13200:	str	r8, [sp, #8]
   13204:	str	r8, [sp, #12]
   13208:	str	r6, [sp]
   1320c:	movw	r3, #49572	; 0xc1a4
   13210:	movt	r3, #1
   13214:	mov	r0, r5
   13218:	mov	r1, r4
   1321c:	mov	r2, #19
   13220:	bl	158b0 <flatcc_json_printer_uint64_field@@Base>
   13224:	stm	sp, {r7, r8}
   13228:	movw	r3, #49589	; 0xc1b5
   1322c:	movt	r3, #1
   13230:	mov	r0, r5
   13234:	mov	r1, r4
   13238:	mov	r2, #20
   1323c:	bl	15afc <flatcc_json_printer_int32_field@@Base>
   13240:	stm	sp, {r7, r8}
   13244:	movw	r3, #49607	; 0xc1c7
   13248:	movt	r3, #1
   1324c:	mov	r0, r5
   13250:	mov	r1, r4
   13254:	mov	r2, #21
   13258:	bl	157f8 <flatcc_json_printer_uint32_field@@Base>
   1325c:	str	r8, [sp, #8]
   13260:	str	r8, [sp, #12]
   13264:	str	r7, [sp]
   13268:	movw	r3, #49625	; 0xc1d9
   1326c:	movt	r3, #1
   13270:	mov	r0, r5
   13274:	mov	r1, r4
   13278:	mov	r2, #22
   1327c:	bl	15bb4 <flatcc_json_printer_int64_field@@Base>
   13280:	str	r8, [sp, #8]
   13284:	str	r8, [sp, #12]
   13288:	str	r7, [sp]
   1328c:	mov	r8, #23
   13290:	movw	r3, #49643	; 0xc1eb
   13294:	movt	r3, #1
   13298:	mov	r0, r5
   1329c:	mov	r1, r4
   132a0:	mov	r2, #23
   132a4:	bl	158b0 <flatcc_json_printer_uint64_field@@Base>
   132a8:	str	r6, [sp]
   132ac:	movw	r3, #49661	; 0xc1fd
   132b0:	movt	r3, #1
   132b4:	mov	r0, r5
   132b8:	mov	r1, r4
   132bc:	mov	r2, #24
   132c0:	bl	18078 <flatcc_json_printer_bool_vector_field@@Base>
   132c4:	str	sl, [sp]
   132c8:	vldr	s0, [pc, #392]	; 13458 <main@@Base+0x5b8>
   132cc:	movw	r3, #49678	; 0xc20e
   132d0:	movt	r3, #1
   132d4:	mov	r0, r5
   132d8:	mov	r1, r4
   132dc:	mov	r2, #25
   132e0:	bl	15d88 <flatcc_json_printer_float_field@@Base>
   132e4:	mov	r6, #6
   132e8:	str	r6, [sp]
   132ec:	movw	r3, #49684	; 0xc214
   132f0:	movt	r3, #1
   132f4:	vmov.f32	s0, #8	; 0x40400000  3.0
   132f8:	mov	r0, r5
   132fc:	mov	r1, r4
   13300:	mov	r2, #26
   13304:	bl	15d88 <flatcc_json_printer_float_field@@Base>
   13308:	str	r6, [sp]
   1330c:	vldr	s0, [pc, #328]	; 1345c <main@@Base+0x5bc>
   13310:	movw	r3, #49691	; 0xc21b
   13314:	movt	r3, #1
   13318:	mov	r0, r5
   1331c:	mov	r1, r4
   13320:	mov	r2, #27
   13324:	bl	15d88 <flatcc_json_printer_float_field@@Base>
   13328:	mov	r0, #18
   1332c:	str	r0, [sp]
   13330:	movw	r3, #49698	; 0xc222
   13334:	movt	r3, #1
   13338:	mov	r0, r5
   1333c:	mov	r1, r4
   13340:	mov	r2, #28
   13344:	bl	19aa0 <flatcc_json_printer_string_vector_field@@Base>
   13348:	movw	r0, #14260	; 0x37b4
   1334c:	movt	r0, #1
   13350:	stm	sp, {r8, r9}
   13354:	str	r0, [sp, #8]
   13358:	movw	r3, #49717	; 0xc235
   1335c:	movt	r3, #1
   13360:	mov	r0, r5
   13364:	mov	r1, r4
   13368:	mov	r2, #29
   1336c:	bl	19818 <flatcc_json_printer_struct_vector_field@@Base>
   13370:	mov	r6, #4
   13374:	str	r6, [sp]
   13378:	movw	r3, #49741	; 0xc24d
   1337c:	movt	r3, #1
   13380:	mov	r0, r5
   13384:	mov	r1, r4
   13388:	mov	r2, #30
   1338c:	bl	17278 <flatcc_json_printer_uint8_vector_field@@Base>
   13390:	str	sl, [sp]
   13394:	str	r6, [sp, #4]
   13398:	movw	r0, #14032	; 0x36d0
   1339c:	movt	r0, #1
   133a0:	str	r0, [sp, #8]
   133a4:	movw	r3, #49746	; 0xc252
   133a8:	movt	r3, #1
   133ac:	mov	r0, r5
   133b0:	mov	r1, r4
   133b4:	mov	r2, #31
   133b8:	bl	19818 <flatcc_json_printer_struct_vector_field@@Base>
   133bc:	mov	r0, #15
   133c0:	str	r0, [sp]
   133c4:	movw	r3, #49752	; 0xc258
   133c8:	movt	r3, #1
   133cc:	mov	r0, r5
   133d0:	mov	r1, r4
   133d4:	mov	r2, #32
   133d8:	bl	17eb8 <flatcc_json_printer_int64_vector_field@@Base>
   133dc:	str	r7, [sp]
   133e0:	movw	r3, #49768	; 0xc268
   133e4:	movt	r3, #1
   133e8:	mov	r0, r5
   133ec:	mov	r1, r4
   133f0:	mov	r2, #33	; 0x21
   133f4:	bl	18400 <flatcc_json_printer_double_vector_field@@Base>
   133f8:	movw	r0, #14368	; 0x3820
   133fc:	movt	r0, #1
   13400:	mov	r1, #21
   13404:	str	r1, [sp]
   13408:	str	r0, [sp, #4]
   1340c:	movw	r3, #49786	; 0xc27a
   13410:	movt	r3, #1
   13414:	mov	r0, r5
   13418:	mov	r1, r4
   1341c:	mov	r2, #34	; 0x22
   13420:	bl	1a184 <flatcc_json_printer_table_field@@Base>
   13424:	movw	r0, #14372	; 0x3824
   13428:	movt	r0, #1
   1342c:	mov	r1, #10
   13430:	str	r1, [sp]
   13434:	str	r0, [sp, #4]
   13438:	movw	r3, #49808	; 0xc290
   1343c:	movt	r3, #1
   13440:	mov	r0, r5
   13444:	mov	r1, r4
   13448:	mov	r2, #35	; 0x23
   1344c:	bl	1a184 <flatcc_json_printer_table_field@@Base>
   13450:	sub	sp, fp, #28
   13454:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13458:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   1345c:	andeq	r0, r0, r0
   13460:	push	{r4, r5, r6, sl, fp, lr}
   13464:	add	fp, sp, #16
   13468:	sub	sp, sp, #16
   1346c:	mov	r4, r1
   13470:	mov	r5, r0
   13474:	mov	r6, #1
   13478:	movw	r0, #49744	; 0xc250
   1347c:	movt	r0, #1
   13480:	stm	sp, {r0, r6}
   13484:	mov	r0, r5
   13488:	mov	r1, #0
   1348c:	mov	r2, r4
   13490:	mov	r3, #0
   13494:	bl	16b14 <flatcc_json_printer_float_struct_field@@Base>
   13498:	movw	r0, #49479	; 0xc147
   1349c:	movt	r0, #1
   134a0:	stm	sp, {r0, r6}
   134a4:	mov	r0, r5
   134a8:	mov	r1, #1
   134ac:	mov	r2, r4
   134b0:	mov	r3, #4
   134b4:	bl	16b14 <flatcc_json_printer_float_struct_field@@Base>
   134b8:	movw	r0, #49819	; 0xc29b
   134bc:	movt	r0, #1
   134c0:	stm	sp, {r0, r6}
   134c4:	mov	r0, r5
   134c8:	mov	r1, #2
   134cc:	mov	r2, r4
   134d0:	mov	r3, #8
   134d4:	bl	16b14 <flatcc_json_printer_float_struct_field@@Base>
   134d8:	mov	r6, #5
   134dc:	movw	r0, #49821	; 0xc29d
   134e0:	movt	r0, #1
   134e4:	stm	sp, {r0, r6}
   134e8:	mov	r0, r5
   134ec:	mov	r1, #3
   134f0:	mov	r2, r4
   134f4:	mov	r3, #16
   134f8:	bl	16b80 <flatcc_json_printer_double_struct_field@@Base>
   134fc:	movw	r0, #13660	; 0x355c
   13500:	movt	r0, #1
   13504:	movw	r1, #49827	; 0xc2a3
   13508:	movt	r1, #1
   1350c:	stm	sp, {r1, r6}
   13510:	str	r0, [sp, #8]
   13514:	mov	r0, r5
   13518:	mov	r1, #4
   1351c:	mov	r2, r4
   13520:	mov	r3, #24
   13524:	bl	16e08 <flatcc_json_printer_int8_enum_struct_field@@Base>
   13528:	movw	r0, #14032	; 0x36d0
   1352c:	movt	r0, #1
   13530:	movw	r1, #49833	; 0xc2a9
   13534:	movt	r1, #1
   13538:	stm	sp, {r1, r6}
   1353c:	str	r0, [sp, #8]
   13540:	mov	r0, r5
   13544:	mov	r1, #5
   13548:	mov	r2, r4
   1354c:	mov	r3, #26
   13550:	bl	1a500 <flatcc_json_printer_embedded_struct_field@@Base>
   13554:	sub	sp, fp, #16
   13558:	pop	{r4, r5, r6, sl, fp, pc}
   1355c:	push	{r4, r5, r6, r7, fp, lr}
   13560:	add	fp, sp, #16
   13564:	mov	r4, r0
   13568:	mvn	r0, #0
   1356c:	uxtab	r0, r0, r1
   13570:	uxtb	r7, r1
   13574:	ands	r5, r0, r7
   13578:	movwne	r5, #1
   1357c:	cmp	r1, #0
   13580:	beq	135dc <main@@Base+0x73c>
   13584:	ands	r0, r1, #244	; 0xf4
   13588:	bne	135dc <main@@Base+0x73c>
   1358c:	mov	r0, r4
   13590:	mov	r1, r5
   13594:	bl	15298 <flatcc_json_printer_delimit_enum_flags@@Base>
   13598:	mov	r6, #0
   1359c:	tst	r7, #1
   135a0:	bne	135e8 <main@@Base+0x748>
   135a4:	tst	r7, #2
   135a8:	bne	1360c <main@@Base+0x76c>
   135ac:	tst	r7, #8
   135b0:	beq	135cc <main@@Base+0x72c>
   135b4:	movw	r2, #49849	; 0xc2b9
   135b8:	movt	r2, #1
   135bc:	mov	r0, r4
   135c0:	mov	r1, r6
   135c4:	mov	r3, #4
   135c8:	bl	152cc <flatcc_json_printer_enum_flag@@Base>
   135cc:	mov	r0, r4
   135d0:	mov	r1, r5
   135d4:	pop	{r4, r5, r6, r7, fp, lr}
   135d8:	b	15298 <flatcc_json_printer_delimit_enum_flags@@Base>
   135dc:	mov	r0, r4
   135e0:	pop	{r4, r5, r6, r7, fp, lr}
   135e4:	b	15054 <flatcc_json_printer_int8@@Base>
   135e8:	movw	r2, #49839	; 0xc2af
   135ec:	movt	r2, #1
   135f0:	mov	r0, r4
   135f4:	mov	r1, #0
   135f8:	mov	r3, #3
   135fc:	bl	152cc <flatcc_json_printer_enum_flag@@Base>
   13600:	mov	r6, #1
   13604:	tst	r7, #2
   13608:	beq	135ac <main@@Base+0x70c>
   1360c:	movw	r2, #49843	; 0xc2b3
   13610:	movt	r2, #1
   13614:	mov	r0, r4
   13618:	mov	r1, r6
   1361c:	mov	r3, #5
   13620:	bl	152cc <flatcc_json_printer_enum_flag@@Base>
   13624:	add	r6, r6, #1
   13628:	tst	r7, #8
   1362c:	bne	135b4 <main@@Base+0x714>
   13630:	b	135cc <main@@Base+0x72c>
   13634:	sub	r1, r1, #1
   13638:	cmp	r1, #3
   1363c:	bhi	13668 <main@@Base+0x7c8>
   13640:	add	r2, pc, #0
   13644:	ldr	pc, [r2, r1, lsl #2]
   13648:	andeq	r3, r1, r8, asr r6
   1364c:	andeq	r3, r1, r8, ror r6
   13650:	andeq	r3, r1, r8, lsl #13
   13654:	muleq	r1, r8, r6
   13658:	movw	r1, #49854	; 0xc2be
   1365c:	movt	r1, #1
   13660:	mov	r2, #7
   13664:	b	1520c <flatcc_json_printer_enum@@Base>
   13668:	movw	r1, #49899	; 0xc2eb
   1366c:	movt	r1, #1
   13670:	mov	r2, #4
   13674:	b	1520c <flatcc_json_printer_enum@@Base>
   13678:	movw	r1, #49862	; 0xc2c6
   1367c:	movt	r1, #1
   13680:	mov	r2, #23
   13684:	b	1520c <flatcc_json_printer_enum@@Base>
   13688:	movw	r1, #49886	; 0xc2de
   1368c:	movt	r1, #1
   13690:	mov	r2, #8
   13694:	b	1520c <flatcc_json_printer_enum@@Base>
   13698:	movw	r1, #49895	; 0xc2e7
   1369c:	movt	r1, #1
   136a0:	mov	r2, #3
   136a4:	b	1520c <flatcc_json_printer_enum@@Base>
   136a8:	ldrb	r2, [r1, #8]
   136ac:	sub	r2, r2, #1
   136b0:	uxtb	r3, r2
   136b4:	cmp	r3, #3
   136b8:	bxhi	lr
   136bc:	sxtb	r2, r2
   136c0:	movw	r3, #50628	; 0xc5c4
   136c4:	movt	r3, #1
   136c8:	ldr	r2, [r3, r2, lsl #2]
   136cc:	b	1a418 <flatcc_json_printer_union_table@@Base>
   136d0:	push	{r4, r5, r6, sl, fp, lr}
   136d4:	add	fp, sp, #16
   136d8:	sub	sp, sp, #8
   136dc:	mov	r4, r1
   136e0:	mov	r5, r0
   136e4:	mov	r6, #1
   136e8:	movw	r0, #49605	; 0xc1c5
   136ec:	movt	r0, #1
   136f0:	stm	sp, {r0, r6}
   136f4:	mov	r0, r5
   136f8:	mov	r1, #0
   136fc:	mov	r2, r4
   13700:	mov	r3, #0
   13704:	bl	1697c <flatcc_json_printer_int16_struct_field@@Base>
   13708:	movw	r0, #50025	; 0xc369
   1370c:	movt	r0, #1
   13710:	stm	sp, {r0, r6}
   13714:	mov	r0, r5
   13718:	mov	r1, #1
   1371c:	mov	r2, r4
   13720:	mov	r3, #2
   13724:	bl	16918 <flatcc_json_printer_int8_struct_field@@Base>
   13728:	sub	sp, fp, #16
   1372c:	pop	{r4, r5, r6, sl, fp, pc}
   13730:	push	{r4, r5, r6, sl, fp, lr}
   13734:	add	fp, sp, #16
   13738:	sub	sp, sp, #16
   1373c:	mov	r4, r1
   13740:	mov	r5, r0
   13744:	mov	r0, #2
   13748:	str	r0, [sp]
   1374c:	mov	r6, #0
   13750:	movw	r3, #50272	; 0xc460
   13754:	movt	r3, #1
   13758:	mov	r0, r5
   1375c:	mov	r2, #0
   13760:	bl	15308 <flatcc_json_printer_string_field@@Base>
   13764:	str	r6, [sp, #8]
   13768:	str	r6, [sp, #12]
   1376c:	mov	r0, #3
   13770:	str	r0, [sp]
   13774:	movw	r3, #50275	; 0xc463
   13778:	movt	r3, #1
   1377c:	mov	r0, r5
   13780:	mov	r1, r4
   13784:	mov	r2, #1
   13788:	bl	15bb4 <flatcc_json_printer_int64_field@@Base>
   1378c:	mov	r0, #5
   13790:	stm	sp, {r0, r6}
   13794:	movw	r3, #50279	; 0xc467
   13798:	movt	r3, #1
   1379c:	mov	r0, r5
   137a0:	mov	r1, r4
   137a4:	mov	r2, #2
   137a8:	bl	15740 <flatcc_json_printer_uint16_field@@Base>
   137ac:	sub	sp, fp, #16
   137b0:	pop	{r4, r5, r6, sl, fp, pc}
   137b4:	push	{r4, r5, fp, lr}
   137b8:	add	fp, sp, #8
   137bc:	sub	sp, sp, #8
   137c0:	mov	r4, r1
   137c4:	mov	r5, r0
   137c8:	mov	r0, #2
   137cc:	movw	r1, #50272	; 0xc460
   137d0:	movt	r1, #1
   137d4:	str	r1, [sp]
   137d8:	str	r0, [sp, #4]
   137dc:	mov	r0, r5
   137e0:	mov	r1, #0
   137e4:	mov	r2, r4
   137e8:	mov	r3, #0
   137ec:	bl	16848 <flatcc_json_printer_uint32_struct_field@@Base>
   137f0:	mov	r0, #8
   137f4:	movw	r1, #50285	; 0xc46d
   137f8:	movt	r1, #1
   137fc:	str	r1, [sp]
   13800:	str	r0, [sp, #4]
   13804:	mov	r0, r5
   13808:	mov	r1, #1
   1380c:	mov	r2, r4
   13810:	mov	r3, #4
   13814:	bl	16848 <flatcc_json_printer_uint32_struct_field@@Base>
   13818:	sub	sp, fp, #8
   1381c:	pop	{r4, r5, fp, pc}
   13820:	bx	lr
   13824:	push	{r4, r5, r6, sl, fp, lr}
   13828:	add	fp, sp, #16
   1382c:	sub	sp, sp, #8
   13830:	mov	r4, r1
   13834:	mov	r5, r0
   13838:	mov	r6, #0
   1383c:	mov	r0, #4
   13840:	stm	sp, {r0, r6}
   13844:	movw	r3, #50333	; 0xc49d
   13848:	movt	r3, #1
   1384c:	mov	r0, r5
   13850:	mov	r2, #0
   13854:	bl	1549c <flatcc_json_printer_uint8_vector_base64_field@@Base>
   13858:	mov	r0, #1
   1385c:	mov	r1, #7
   13860:	str	r1, [sp]
   13864:	str	r0, [sp, #4]
   13868:	movw	r3, #50294	; 0xc476
   1386c:	movt	r3, #1
   13870:	mov	r0, r5
   13874:	mov	r1, r4
   13878:	mov	r2, #1
   1387c:	bl	1549c <flatcc_json_printer_uint8_vector_base64_field@@Base>
   13880:	mov	r0, #6
   13884:	stm	sp, {r0, r6}
   13888:	movw	r3, #50302	; 0xc47e
   1388c:	movt	r3, #1
   13890:	mov	r0, r5
   13894:	mov	r1, r4
   13898:	mov	r2, #2
   1389c:	bl	1549c <flatcc_json_printer_uint8_vector_base64_field@@Base>
   138a0:	sub	sp, fp, #16
   138a4:	pop	{r4, r5, r6, sl, fp, pc}
   138a8:	push	{r4, r5, r6, r7, fp, lr}
   138ac:	add	fp, sp, #16
   138b0:	sub	sp, sp, #16
   138b4:	mov	r4, r1
   138b8:	mov	r5, r0
   138bc:	movw	r7, #13660	; 0x355c
   138c0:	movt	r7, #1
   138c4:	mov	r6, #2
   138c8:	mov	r0, #5
   138cc:	stm	sp, {r0, r6, r7}
   138d0:	movw	r3, #49427	; 0xc113
   138d4:	movt	r3, #1
   138d8:	mov	r0, r5
   138dc:	mov	r2, #0
   138e0:	bl	162d8 <flatcc_json_printer_int8_enum_field@@Base>
   138e4:	mov	r0, #6
   138e8:	stm	sp, {r0, r6, r7}
   138ec:	movw	r3, #49904	; 0xc2f0
   138f0:	movt	r3, #1
   138f4:	mov	r0, r5
   138f8:	mov	r1, r4
   138fc:	mov	r2, #1
   13900:	bl	162d8 <flatcc_json_printer_int8_enum_field@@Base>
   13904:	str	r6, [sp]
   13908:	str	r6, [sp, #4]
   1390c:	movw	r3, #49911	; 0xc2f7
   13910:	movt	r3, #1
   13914:	mov	r0, r5
   13918:	mov	r1, r4
   1391c:	mov	r2, #2
   13920:	bl	15688 <flatcc_json_printer_uint8_field@@Base>
   13924:	mov	r0, #3
   13928:	stm	sp, {r0, r6}
   1392c:	movw	r3, #49914	; 0xc2fa
   13930:	movt	r3, #1
   13934:	mov	r0, r5
   13938:	mov	r1, r4
   1393c:	mov	r2, #3
   13940:	bl	15688 <flatcc_json_printer_uint8_field@@Base>
   13944:	sub	sp, fp, #16
   13948:	pop	{r4, r5, r6, r7, fp, pc}
   1394c:	bx	lr
   13950:	push	{r4, r5, fp, lr}
   13954:	add	fp, sp, #8
   13958:	sub	sp, sp, #16
   1395c:	mov	r4, r1
   13960:	mov	r5, r0
   13964:	movw	r0, #14844	; 0x39fc
   13968:	movt	r0, #1
   1396c:	mov	r1, #6
   13970:	str	r1, [sp]
   13974:	str	r0, [sp, #4]
   13978:	movw	r3, #49918	; 0xc2fe
   1397c:	movt	r3, #1
   13980:	mov	r0, r5
   13984:	mov	r1, r4
   13988:	mov	r2, #0
   1398c:	bl	1a184 <flatcc_json_printer_table_field@@Base>
   13990:	movw	r0, #15000	; 0x3a98
   13994:	movt	r0, #1
   13998:	mov	r1, #5
   1399c:	str	r1, [sp]
   139a0:	str	r0, [sp, #4]
   139a4:	movw	r3, #49925	; 0xc305
   139a8:	movt	r3, #1
   139ac:	mov	r0, r5
   139b0:	mov	r1, r4
   139b4:	mov	r2, #1
   139b8:	bl	1a184 <flatcc_json_printer_table_field@@Base>
   139bc:	movw	r0, #13992	; 0x36a8
   139c0:	movt	r0, #1
   139c4:	movw	r1, #13876	; 0x3634
   139c8:	movt	r1, #1
   139cc:	mov	r2, #7
   139d0:	str	r2, [sp]
   139d4:	str	r1, [sp, #4]
   139d8:	str	r0, [sp, #8]
   139dc:	movw	r3, #49931	; 0xc30b
   139e0:	movt	r3, #1
   139e4:	mov	r0, r5
   139e8:	mov	r1, r4
   139ec:	mov	r2, #3
   139f0:	bl	19e78 <flatcc_json_printer_union_vector_field@@Base>
   139f4:	sub	sp, fp, #8
   139f8:	pop	{r4, r5, fp, pc}
   139fc:	push	{r4, r5, r6, sl, fp, lr}
   13a00:	add	fp, sp, #16
   13a04:	sub	sp, sp, #8
   13a08:	mov	r4, r1
   13a0c:	mov	r5, r0
   13a10:	movw	r0, #15228	; 0x3b7c
   13a14:	movt	r0, #1
   13a18:	mov	r1, #21
   13a1c:	str	r1, [sp]
   13a20:	str	r0, [sp, #4]
   13a24:	movw	r3, #49939	; 0xc313
   13a28:	movt	r3, #1
   13a2c:	mov	r0, r5
   13a30:	mov	r1, r4
   13a34:	mov	r2, #0
   13a38:	bl	1a184 <flatcc_json_printer_table_field@@Base>
   13a3c:	movw	r0, #15552	; 0x3cc0
   13a40:	movt	r0, #1
   13a44:	mov	r6, #22
   13a48:	str	r6, [sp]
   13a4c:	str	r0, [sp, #4]
   13a50:	movw	r3, #49961	; 0xc329
   13a54:	movt	r3, #1
   13a58:	mov	r0, r5
   13a5c:	mov	r1, r4
   13a60:	mov	r2, #1
   13a64:	bl	1a184 <flatcc_json_printer_table_field@@Base>
   13a68:	movw	r0, #15652	; 0x3d24
   13a6c:	movt	r0, #1
   13a70:	str	r6, [sp]
   13a74:	str	r0, [sp, #4]
   13a78:	movw	r3, #49984	; 0xc340
   13a7c:	movt	r3, #1
   13a80:	mov	r0, r5
   13a84:	mov	r1, r4
   13a88:	mov	r2, #2
   13a8c:	bl	1a184 <flatcc_json_printer_table_field@@Base>
   13a90:	sub	sp, fp, #16
   13a94:	pop	{r4, r5, r6, sl, fp, pc}
   13a98:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13a9c:	add	fp, sp, #24
   13aa0:	sub	sp, sp, #16
   13aa4:	mov	r4, r1
   13aa8:	mov	r5, r0
   13aac:	movw	r6, #15932	; 0x3e3c
   13ab0:	movt	r6, #1
   13ab4:	movw	r7, #15752	; 0x3d88
   13ab8:	movt	r7, #1
   13abc:	mov	r0, #14
   13ac0:	stm	sp, {r0, r7}
   13ac4:	str	r6, [sp, #8]
   13ac8:	movw	r3, #50134	; 0xc3d6
   13acc:	movt	r3, #1
   13ad0:	mov	r0, r5
   13ad4:	mov	r2, #1
   13ad8:	bl	1a210 <flatcc_json_printer_union_field@@Base>
   13adc:	mov	r8, #10
   13ae0:	str	r8, [sp]
   13ae4:	str	r7, [sp, #4]
   13ae8:	str	r6, [sp, #8]
   13aec:	movw	r3, #50149	; 0xc3e5
   13af0:	movt	r3, #1
   13af4:	mov	r0, r5
   13af8:	mov	r1, r4
   13afc:	mov	r2, #3
   13b00:	bl	1a210 <flatcc_json_printer_union_field@@Base>
   13b04:	mov	r0, #9
   13b08:	stm	sp, {r0, r7}
   13b0c:	str	r6, [sp, #8]
   13b10:	mov	r9, #5
   13b14:	movw	r3, #50160	; 0xc3f0
   13b18:	movt	r3, #1
   13b1c:	mov	r0, r5
   13b20:	mov	r1, r4
   13b24:	mov	r2, #5
   13b28:	bl	1a210 <flatcc_json_printer_union_field@@Base>
   13b2c:	str	r9, [sp]
   13b30:	str	r7, [sp, #4]
   13b34:	str	r6, [sp, #8]
   13b38:	movw	r3, #50170	; 0xc3fa
   13b3c:	movt	r3, #1
   13b40:	mov	r0, r5
   13b44:	mov	r1, r4
   13b48:	mov	r2, #7
   13b4c:	bl	1a210 <flatcc_json_printer_union_field@@Base>
   13b50:	str	r8, [sp]
   13b54:	str	r7, [sp, #4]
   13b58:	str	r6, [sp, #8]
   13b5c:	movw	r3, #50176	; 0xc400
   13b60:	movt	r3, #1
   13b64:	mov	r0, r5
   13b68:	mov	r1, r4
   13b6c:	mov	r2, #9
   13b70:	bl	19e78 <flatcc_json_printer_union_vector_field@@Base>
   13b74:	sub	sp, fp, #24
   13b78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13b7c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13b80:	add	fp, sp, #24
   13b84:	sub	sp, sp, #16
   13b88:	mov	r4, r1
   13b8c:	mov	r5, r0
   13b90:	mov	r9, #4
   13b94:	str	r9, [sp]
   13b98:	mov	r6, #0
   13b9c:	movw	r3, #50007	; 0xc357
   13ba0:	movt	r3, #1
   13ba4:	mov	r2, #0
   13ba8:	bl	15308 <flatcc_json_printer_string_field@@Base>
   13bac:	mov	r8, #9
   13bb0:	str	r8, [sp]
   13bb4:	str	r6, [sp, #4]
   13bb8:	movw	r3, #50012	; 0xc35c
   13bbc:	movt	r3, #1
   13bc0:	mov	r0, r5
   13bc4:	mov	r1, r4
   13bc8:	mov	r2, #1
   13bcc:	bl	157f8 <flatcc_json_printer_uint32_field@@Base>
   13bd0:	str	r9, [sp]
   13bd4:	movw	r3, #50022	; 0xc366
   13bd8:	movt	r3, #1
   13bdc:	mov	r0, r5
   13be0:	mov	r1, r4
   13be4:	mov	r2, #2
   13be8:	bl	15308 <flatcc_json_printer_string_field@@Base>
   13bec:	str	r6, [sp, #8]
   13bf0:	str	r6, [sp, #12]
   13bf4:	mov	r7, #8
   13bf8:	str	r7, [sp]
   13bfc:	movw	r3, #50027	; 0xc36b
   13c00:	movt	r3, #1
   13c04:	mov	r0, r5
   13c08:	mov	r1, r4
   13c0c:	mov	r2, #3
   13c10:	bl	15bb4 <flatcc_json_printer_int64_field@@Base>
   13c14:	str	r9, [sp]
   13c18:	movw	r3, #50036	; 0xc374
   13c1c:	movt	r3, #1
   13c20:	mov	r0, r5
   13c24:	mov	r1, r4
   13c28:	mov	r2, #4
   13c2c:	bl	15308 <flatcc_json_printer_string_field@@Base>
   13c30:	str	r6, [sp, #8]
   13c34:	str	r6, [sp, #12]
   13c38:	str	r7, [sp]
   13c3c:	movw	r3, #50041	; 0xc379
   13c40:	movt	r3, #1
   13c44:	mov	r0, r5
   13c48:	mov	r1, r4
   13c4c:	mov	r2, #5
   13c50:	bl	15bb4 <flatcc_json_printer_int64_field@@Base>
   13c54:	str	r8, [sp]
   13c58:	str	r6, [sp, #4]
   13c5c:	movw	r3, #50050	; 0xc382
   13c60:	movt	r3, #1
   13c64:	mov	r0, r5
   13c68:	mov	r1, r4
   13c6c:	mov	r2, #6
   13c70:	bl	157f8 <flatcc_json_printer_uint32_field@@Base>
   13c74:	str	r6, [sp, #8]
   13c78:	str	r6, [sp, #12]
   13c7c:	str	r7, [sp]
   13c80:	movw	r3, #50060	; 0xc38c
   13c84:	movt	r3, #1
   13c88:	mov	r0, r5
   13c8c:	mov	r1, r4
   13c90:	mov	r2, #7
   13c94:	bl	15bb4 <flatcc_json_printer_int64_field@@Base>
   13c98:	str	r8, [sp]
   13c9c:	str	r6, [sp, #4]
   13ca0:	movw	r3, #50069	; 0xc395
   13ca4:	movt	r3, #1
   13ca8:	mov	r0, r5
   13cac:	mov	r1, r4
   13cb0:	mov	r2, #8
   13cb4:	bl	157f8 <flatcc_json_printer_uint32_field@@Base>
   13cb8:	sub	sp, fp, #24
   13cbc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13cc0:	push	{r4, r5, r6, sl, fp, lr}
   13cc4:	add	fp, sp, #16
   13cc8:	sub	sp, sp, #16
   13ccc:	mov	r4, r1
   13cd0:	mov	r5, r0
   13cd4:	mov	r6, #0
   13cd8:	str	r6, [sp, #8]
   13cdc:	str	r6, [sp, #12]
   13ce0:	mov	r0, #15
   13ce4:	str	r0, [sp]
   13ce8:	movw	r3, #50079	; 0xc39f
   13cec:	movt	r3, #1
   13cf0:	mov	r0, r5
   13cf4:	mov	r2, #0
   13cf8:	bl	15bb4 <flatcc_json_printer_int64_field@@Base>
   13cfc:	mov	r0, #16
   13d00:	stm	sp, {r0, r6}
   13d04:	movw	r3, #50095	; 0xc3af
   13d08:	movt	r3, #1
   13d0c:	mov	r0, r5
   13d10:	mov	r1, r4
   13d14:	mov	r2, #1
   13d18:	bl	157f8 <flatcc_json_printer_uint32_field@@Base>
   13d1c:	sub	sp, fp, #16
   13d20:	pop	{r4, r5, r6, sl, fp, pc}
   13d24:	push	{r4, r5, r6, sl, fp, lr}
   13d28:	add	fp, sp, #16
   13d2c:	sub	sp, sp, #16
   13d30:	mov	r4, r1
   13d34:	mov	r5, r0
   13d38:	mov	r6, #0
   13d3c:	str	r6, [sp, #8]
   13d40:	str	r6, [sp, #12]
   13d44:	mov	r0, #15
   13d48:	str	r0, [sp]
   13d4c:	movw	r3, #50079	; 0xc39f
   13d50:	movt	r3, #1
   13d54:	mov	r0, r5
   13d58:	mov	r2, #0
   13d5c:	bl	15bb4 <flatcc_json_printer_int64_field@@Base>
   13d60:	mov	r0, #21
   13d64:	stm	sp, {r0, r6}
   13d68:	movw	r3, #50112	; 0xc3c0
   13d6c:	movt	r3, #1
   13d70:	mov	r0, r5
   13d74:	mov	r1, r4
   13d78:	mov	r2, #1
   13d7c:	bl	157f8 <flatcc_json_printer_uint32_field@@Base>
   13d80:	sub	sp, fp, #16
   13d84:	pop	{r4, r5, r6, sl, fp, pc}
   13d88:	sub	r2, r1, #2
   13d8c:	cmp	r2, #9
   13d90:	bhi	13dd4 <main@@Base+0xf34>
   13d94:	add	r1, pc, #0
   13d98:	ldr	pc, [r1, r2, lsl #2]
   13d9c:	andeq	r3, r1, r4, asr #27
   13da0:	andeq	r3, r1, ip, ror #27
   13da4:	andeq	r3, r1, ip, ror #27
   13da8:	andeq	r3, r1, ip, ror #27
   13dac:	andeq	r3, r1, ip, ror #27
   13db0:	andeq	r3, r1, ip, ror #27
   13db4:	strdeq	r3, [r1], -ip
   13db8:	andeq	r3, r1, ip, lsl #28
   13dbc:	andeq	r3, r1, ip, lsl lr
   13dc0:	andeq	r3, r1, ip, lsr #28
   13dc4:	movw	r1, #50187	; 0xc40b
   13dc8:	movt	r1, #1
   13dcc:	mov	r2, #5
   13dd0:	b	1520c <flatcc_json_printer_enum@@Base>
   13dd4:	cmp	r1, #255	; 0xff
   13dd8:	bne	13dec <main@@Base+0xf4c>
   13ddc:	movw	r1, #50222	; 0xc42e
   13de0:	movt	r1, #1
   13de4:	mov	r2, #6
   13de8:	b	1520c <flatcc_json_printer_enum@@Base>
   13dec:	movw	r1, #49899	; 0xc2eb
   13df0:	movt	r1, #1
   13df4:	mov	r2, #4
   13df8:	b	1520c <flatcc_json_printer_enum@@Base>
   13dfc:	movw	r1, #50193	; 0xc411
   13e00:	movt	r1, #1
   13e04:	mov	r2, #8
   13e08:	b	1520c <flatcc_json_printer_enum@@Base>
   13e0c:	movw	r1, #50202	; 0xc41a
   13e10:	movt	r1, #1
   13e14:	mov	r2, #5
   13e18:	b	1520c <flatcc_json_printer_enum@@Base>
   13e1c:	movw	r1, #50208	; 0xc420
   13e20:	movt	r1, #1
   13e24:	mov	r2, #7
   13e28:	b	1520c <flatcc_json_printer_enum@@Base>
   13e2c:	movw	r1, #50216	; 0xc428
   13e30:	movt	r1, #1
   13e34:	mov	r2, #5
   13e38:	b	1520c <flatcc_json_printer_enum@@Base>
   13e3c:	ldrb	r3, [r1, #8]
   13e40:	sub	r2, r3, #2
   13e44:	cmp	r2, #9
   13e48:	bhi	13e88 <main@@Base+0xfe8>
   13e4c:	add	r3, pc, #0
   13e50:	ldr	pc, [r3, r2, lsl #2]
   13e54:	muleq	r1, r4, lr
   13e58:	andeq	r3, r1, ip, lsr #29
   13e5c:	andeq	r3, r1, ip, lsr #29
   13e60:	andeq	r3, r1, ip, lsr #29
   13e64:	andeq	r3, r1, ip, lsr #29
   13e68:	andeq	r3, r1, ip, lsr #29
   13e6c:	andeq	r3, r1, r0, lsr #29
   13e70:	andeq	r3, r1, ip, ror lr
   13e74:	andeq	r3, r1, ip, ror lr
   13e78:	muleq	r1, r0, lr
   13e7c:	movw	r2, #16156	; 0x3f1c
   13e80:	movt	r2, #1
   13e84:	b	1a44c <flatcc_json_printer_union_struct@@Base>
   13e88:	cmp	r3, #255	; 0xff
   13e8c:	bxne	lr
   13e90:	b	1a4dc <flatcc_json_printer_union_string@@Base>
   13e94:	movw	r2, #16048	; 0x3eb0
   13e98:	movt	r2, #1
   13e9c:	b	1a418 <flatcc_json_printer_union_table@@Base>
   13ea0:	movw	r2, #16100	; 0x3ee4
   13ea4:	movt	r2, #1
   13ea8:	b	1a44c <flatcc_json_printer_union_struct@@Base>
   13eac:	bx	lr
   13eb0:	push	{fp, lr}
   13eb4:	mov	fp, sp
   13eb8:	sub	sp, sp, #8
   13ebc:	mov	r2, #0
   13ec0:	mov	r3, #19
   13ec4:	str	r3, [sp]
   13ec8:	str	r2, [sp, #4]
   13ecc:	movw	r3, #50229	; 0xc435
   13ed0:	movt	r3, #1
   13ed4:	mov	r2, #0
   13ed8:	bl	15afc <flatcc_json_printer_int32_field@@Base>
   13edc:	mov	sp, fp
   13ee0:	pop	{fp, pc}
   13ee4:	push	{fp, lr}
   13ee8:	mov	fp, sp
   13eec:	sub	sp, sp, #8
   13ef0:	mov	r2, r1
   13ef4:	mov	r1, #11
   13ef8:	movw	r3, #50249	; 0xc449
   13efc:	movt	r3, #1
   13f00:	str	r3, [sp]
   13f04:	str	r1, [sp, #4]
   13f08:	mov	r1, #0
   13f0c:	mov	r3, #0
   13f10:	bl	167e4 <flatcc_json_printer_uint16_struct_field@@Base>
   13f14:	mov	sp, fp
   13f18:	pop	{fp, pc}
   13f1c:	push	{fp, lr}
   13f20:	mov	fp, sp
   13f24:	sub	sp, sp, #8
   13f28:	mov	r2, r1
   13f2c:	mov	r1, #10
   13f30:	movw	r3, #50261	; 0xc455
   13f34:	movt	r3, #1
   13f38:	str	r3, [sp]
   13f3c:	str	r1, [sp, #4]
   13f40:	mov	r1, #0
   13f44:	mov	r3, #0
   13f48:	bl	169e0 <flatcc_json_printer_int32_struct_field@@Base>
   13f4c:	mov	sp, fp
   13f50:	pop	{fp, pc}
   13f54:	andeq	r0, r0, r0

00013f58 <flatcc_json_printer_error_string@@Base>:
   13f58:	cmp	r0, #3
   13f5c:	movwhi	r0, #50681	; 0xc5f9
   13f60:	movthi	r0, #1
   13f64:	bxhi	lr
   13f68:	movw	r1, #53612	; 0xd16c
   13f6c:	movt	r1, #1
   13f70:	ldr	r0, [r1, r0, lsl #2]
   13f74:	bx	lr

00013f78 <flatcc_json_printer_fmt_float@@Base>:
   13f78:	vcvt.f64.f32	d0, s0
   13f7c:	b	13f80 <flatcc_json_printer_fmt_float@@Base+0x8>
   13f80:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13f84:	add	fp, sp, #24
   13f88:	vpush	{d8}
   13f8c:	sub	sp, sp, #8
   13f90:	mov	r4, r0
   13f94:	vmov.f64	d8, d0
   13f98:	bl	1aec0 <flatcc_json_printer_clear@@Base+0x44>
   13f9c:	cmp	r4, #0
   13fa0:	beq	14224 <flatcc_json_printer_fmt_float@@Base+0x2ac>
   13fa4:	mov	r3, r0
   13fa8:	mov	r2, r1
   13fac:	mov	r0, #-2147483648	; 0x80000000
   13fb0:	orr	r1, r0, #266338304	; 0xfe00000
   13fb4:	orr	r1, r1, #1879048192	; 0x70000000
   13fb8:	lsl	r7, r2, #1
   13fbc:	orr	r7, r7, r3, lsr #31
   13fc0:	mov	r6, #0
   13fc4:	subs	r6, r6, r3, lsl #1
   13fc8:	sbcs	r1, r1, r7
   13fcc:	bcs	13fe4 <flatcc_json_printer_fmt_float@@Base+0x6c>
   13fd0:	movw	r1, #51254	; 0xc836
   13fd4:	movt	r1, #1
   13fd8:	mov	r0, r4
   13fdc:	bl	12968 <sprintf@plt>
   13fe0:	b	14218 <flatcc_json_printer_fmt_float@@Base+0x2a0>
   13fe4:	cmn	r2, #1
   13fe8:	ble	13ff4 <flatcc_json_printer_fmt_float@@Base+0x7c>
   13fec:	mov	r5, r4
   13ff0:	b	14008 <flatcc_json_printer_fmt_float@@Base+0x90>
   13ff4:	mov	r1, #45	; 0x2d
   13ff8:	vneg.f64	d8, d8
   13ffc:	mov	r5, r4
   14000:	strb	r1, [r5], #1
   14004:	eor	r2, r2, r0
   14008:	eor	r0, r2, #267386880	; 0xff00000
   1400c:	eor	r0, r0, #1879048192	; 0x70000000
   14010:	orrs	r0, r3, r0
   14014:	beq	14030 <flatcc_json_printer_fmt_float@@Base+0xb8>
   14018:	orrs	r0, r3, r2
   1401c:	bne	14044 <flatcc_json_printer_fmt_float@@Base+0xcc>
   14020:	mov	r0, #48	; 0x30
   14024:	strh	r0, [r5], -r4
   14028:	add	r0, r5, #1
   1402c:	b	14218 <flatcc_json_printer_fmt_float@@Base+0x2a0>
   14030:	movw	r0, #28265	; 0x6e69
   14034:	movt	r0, #102	; 0x66
   14038:	str	r0, [r5], -r4
   1403c:	add	r0, r5, #3
   14040:	b	14218 <flatcc_json_printer_fmt_float@@Base+0x2a0>
   14044:	mov	r1, sp
   14048:	add	r2, sp, #4
   1404c:	vmov.f64	d0, d8
   14050:	mov	r0, r5
   14054:	bl	1aec8 <flatcc_json_printer_clear@@Base+0x4c>
   14058:	cmp	r0, #0
   1405c:	beq	140b0 <flatcc_json_printer_fmt_float@@Base+0x138>
   14060:	ldr	r9, [sp]
   14064:	sub	r1, r9, #1
   14068:	cmp	r9, #3
   1406c:	movwlt	r1, #1
   14070:	ldr	r0, [sp, #4]
   14074:	rsb	r7, r0, #0
   14078:	cmp	r1, r7
   1407c:	movge	r1, r7
   14080:	cmn	r0, #1
   14084:	ble	140d0 <flatcc_json_printer_fmt_float@@Base+0x158>
   14088:	cmp	r0, #3
   1408c:	bcc	1414c <flatcc_json_printer_fmt_float@@Base+0x1d4>
   14090:	mov	r1, #101	; 0x65
   14094:	strb	r1, [r5, r9]
   14098:	add	r6, r9, #1
   1409c:	add	r1, r5, r6
   140a0:	bl	1b130 <flatcc_json_printer_clear@@Base+0x2b4>
   140a4:	add	r0, r0, r6
   140a8:	str	r0, [sp]
   140ac:	b	14208 <flatcc_json_printer_fmt_float@@Base+0x290>
   140b0:	vmov	r2, r3, d8
   140b4:	movw	r1, #51268	; 0xc844
   140b8:	movt	r1, #1
   140bc:	mov	r0, r5
   140c0:	bl	12968 <sprintf@plt>
   140c4:	sub	r1, r5, r4
   140c8:	add	r0, r1, r0
   140cc:	b	14218 <flatcc_json_printer_fmt_float@@Base+0x2a0>
   140d0:	cmp	r9, r7
   140d4:	bgt	141a0 <flatcc_json_printer_fmt_float@@Base+0x228>
   140d8:	add	r8, r9, r0
   140dc:	cmn	r8, #2
   140e0:	blt	141a0 <flatcc_json_printer_fmt_float@@Base+0x228>
   140e4:	rsb	r0, r9, #0
   140e8:	add	r1, r5, r7
   140ec:	add	r0, r1, r0
   140f0:	add	r0, r0, #2
   140f4:	mov	r1, r5
   140f8:	mov	r2, r9
   140fc:	bl	1289c <memmove@plt>
   14100:	movw	r0, #11824	; 0x2e30
   14104:	strh	r0, [r5]
   14108:	rsb	r1, r8, #2
   1410c:	mov	r0, #2
   14110:	cmp	r1, #3
   14114:	blt	14140 <flatcc_json_printer_fmt_float@@Base+0x1c8>
   14118:	sub	r7, r7, r9
   1411c:	add	r0, r5, #2
   14120:	mov	r1, #48	; 0x30
   14124:	mov	r2, r7
   14128:	bl	12944 <memset@plt>
   1412c:	mov	r0, #0
   14130:	add	r0, r0, #1
   14134:	cmp	r7, r0
   14138:	bne	14130 <flatcc_json_printer_fmt_float@@Base+0x1b8>
   1413c:	add	r0, r0, #2
   14140:	add	r0, r0, r9
   14144:	str	r0, [sp]
   14148:	b	14208 <flatcc_json_printer_fmt_float@@Base+0x290>
   1414c:	cmp	r0, #0
   14150:	beq	14208 <flatcc_json_printer_fmt_float@@Base+0x290>
   14154:	ldr	r0, [sp, #4]
   14158:	subs	r0, r0, #1
   1415c:	str	r0, [sp, #4]
   14160:	blt	14208 <flatcc_json_printer_fmt_float@@Base+0x290>
   14164:	ldr	r6, [sp]
   14168:	add	r0, r5, r6
   1416c:	ldr	r7, [sp, #4]
   14170:	bic	r1, r7, r7, asr #31
   14174:	add	r2, r1, #1
   14178:	mov	r1, #48	; 0x30
   1417c:	bl	12944 <memset@plt>
   14180:	sub	r0, r7, #1
   14184:	add	r6, r6, #1
   14188:	cmp	r7, #0
   1418c:	mov	r7, r0
   14190:	bgt	14180 <flatcc_json_printer_fmt_float@@Base+0x208>
   14194:	str	r0, [sp, #4]
   14198:	str	r6, [sp]
   1419c:	b	14208 <flatcc_json_printer_fmt_float@@Base+0x290>
   141a0:	cmn	r0, #1
   141a4:	bgt	14090 <flatcc_json_printer_fmt_float@@Base+0x118>
   141a8:	cmp	r9, #2
   141ac:	blt	14090 <flatcc_json_printer_fmt_float@@Base+0x118>
   141b0:	cmp	r1, #1
   141b4:	blt	141d8 <flatcc_json_printer_fmt_float@@Base+0x260>
   141b8:	add	r2, r5, r9
   141bc:	sub	r3, r2, #1
   141c0:	mov	r7, #0
   141c4:	ldrb	r6, [r3, -r7]
   141c8:	strb	r6, [r2, -r7]
   141cc:	add	r7, r7, #1
   141d0:	cmp	r7, r1
   141d4:	blt	141c4 <flatcc_json_printer_fmt_float@@Base+0x24c>
   141d8:	add	r2, r9, #1
   141dc:	str	r2, [sp]
   141e0:	sub	r3, r9, r1
   141e4:	mov	r7, #46	; 0x2e
   141e8:	strb	r7, [r5, r3]
   141ec:	adds	r0, r1, r0
   141f0:	str	r0, [sp, #4]
   141f4:	beq	14208 <flatcc_json_printer_fmt_float@@Base+0x290>
   141f8:	mov	r1, #101	; 0x65
   141fc:	strb	r1, [r5, r2]
   14200:	add	r6, r9, #2
   14204:	b	1409c <flatcc_json_printer_fmt_float@@Base+0x124>
   14208:	ldr	r0, [sp]
   1420c:	mov	r1, #0
   14210:	strb	r1, [r5, r0]!
   14214:	sub	r0, r5, r4
   14218:	sub	sp, fp, #32
   1421c:	vpop	{d8}
   14220:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14224:	movw	r0, #51123	; 0xc7b3
   14228:	movt	r0, #1
   1422c:	movw	r1, #51127	; 0xc7b7
   14230:	movt	r1, #1
   14234:	movw	r3, #51214	; 0xc80e
   14238:	movt	r3, #1
   1423c:	mov	r2, #189	; 0xbd
   14240:	bl	12998 <__assert_fail@plt>

00014244 <flatcc_json_printer_fmt_double@@Base>:
   14244:	b	13f80 <flatcc_json_printer_fmt_float@@Base+0x8>

00014248 <flatcc_json_printer_fmt_bool@@Base>:
   14248:	cmp	r1, #0
   1424c:	movwne	r1, #29300	; 0x7274
   14250:	movtne	r1, #25973	; 0x6575
   14254:	strne	r1, [r0]
   14258:	movne	r0, #4
   1425c:	bxne	lr
   14260:	mov	r1, #101	; 0x65
   14264:	strb	r1, [r0, #4]
   14268:	movw	r1, #24934	; 0x6166
   1426c:	movt	r1, #29548	; 0x736c
   14270:	str	r1, [r0]
   14274:	mov	r0, #5
   14278:	bx	lr

0001427c <flatcc_json_printer_string@@Base>:
   1427c:	b	14280 <flatcc_json_printer_string@@Base+0x4>
   14280:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14284:	add	fp, sp, #28
   14288:	sub	sp, sp, #4
   1428c:	mov	r5, r2
   14290:	mov	r4, r0
   14294:	mov	r7, r0
   14298:	ldr	r0, [r7, #20]!
   1429c:	add	r2, r0, #1
   142a0:	str	r2, [r7]
   142a4:	mov	r2, #34	; 0x22
   142a8:	strb	r2, [r0]
   142ac:	mov	r9, #92	; 0x5c
   142b0:	b	1432c <flatcc_json_printer_string@@Base+0xb0>
   142b4:	ldr	r2, [r7]
   142b8:	add	r3, r2, #1
   142bc:	str	r3, [r7]
   142c0:	mov	r3, #117	; 0x75
   142c4:	strb	r3, [r2]
   142c8:	ldr	r2, [r7]
   142cc:	add	r3, r2, #1
   142d0:	str	r3, [r7]
   142d4:	mov	r6, #48	; 0x30
   142d8:	strb	r6, [r2]
   142dc:	ldr	r2, [r7]
   142e0:	add	r3, r2, #1
   142e4:	str	r3, [r7]
   142e8:	strb	r6, [r2]
   142ec:	ldr	r2, [r7]
   142f0:	add	r3, r2, #1
   142f4:	str	r3, [r7]
   142f8:	orr	r1, r6, r1, lsr #4
   142fc:	strb	r1, [r2]
   14300:	ldr	r1, [r7]
   14304:	add	r2, r1, #1
   14308:	str	r2, [r7]
   1430c:	and	r2, sl, #15
   14310:	cmp	r2, #10
   14314:	mov	r3, #87	; 0x57
   14318:	movwcc	r3, #48	; 0x30
   1431c:	add	r2, r3, r2
   14320:	strb	r2, [r1]
   14324:	sub	r5, r0, #1
   14328:	add	r1, r8, #1
   1432c:	ldrb	sl, [r1]
   14330:	mov	r8, r1
   14334:	cmp	sl, #32
   14338:	bcc	14358 <flatcc_json_printer_string@@Base+0xdc>
   1433c:	uxtb	r0, sl
   14340:	cmp	r0, #34	; 0x22
   14344:	cmpne	r0, #92	; 0x5c
   14348:	beq	14358 <flatcc_json_printer_string@@Base+0xdc>
   1434c:	ldrb	sl, [r8, #1]!
   14350:	cmp	sl, #31
   14354:	bhi	1433c <flatcc_json_printer_string@@Base+0xc0>
   14358:	sub	r6, r8, r1
   1435c:	mov	r0, r4
   14360:	mov	r2, r6
   14364:	bl	144b0 <flatcc_json_printer_write@@Base+0x4>
   14368:	ldr	r1, [r4, #20]
   1436c:	add	r0, r1, #1
   14370:	str	r0, [r4, #20]
   14374:	subs	r0, r5, r6
   14378:	beq	1449c <flatcc_json_printer_string@@Base+0x220>
   1437c:	strb	r9, [r1]
   14380:	mvn	r1, #7
   14384:	uxtab	r2, r1, sl
   14388:	uxtb	r1, sl
   1438c:	cmp	r2, #26
   14390:	bhi	1441c <flatcc_json_printer_string@@Base+0x1a0>
   14394:	add	r3, pc, #0
   14398:	ldr	pc, [r3, r2, lsl #2]
   1439c:	andeq	r4, r1, r8, lsl #8
   143a0:	andeq	r4, r1, r8, lsr r4
   143a4:	andeq	r4, r1, ip, asr #8
   143a8:			; <UNDEFINED> instruction: 0x000142b4
   143ac:	andeq	r4, r1, r0, ror #8
   143b0:	andeq	r4, r1, r4, ror r4
   143b4:			; <UNDEFINED> instruction: 0x000142b4
   143b8:			; <UNDEFINED> instruction: 0x000142b4
   143bc:			; <UNDEFINED> instruction: 0x000142b4
   143c0:			; <UNDEFINED> instruction: 0x000142b4
   143c4:			; <UNDEFINED> instruction: 0x000142b4
   143c8:			; <UNDEFINED> instruction: 0x000142b4
   143cc:			; <UNDEFINED> instruction: 0x000142b4
   143d0:			; <UNDEFINED> instruction: 0x000142b4
   143d4:			; <UNDEFINED> instruction: 0x000142b4
   143d8:			; <UNDEFINED> instruction: 0x000142b4
   143dc:			; <UNDEFINED> instruction: 0x000142b4
   143e0:			; <UNDEFINED> instruction: 0x000142b4
   143e4:			; <UNDEFINED> instruction: 0x000142b4
   143e8:			; <UNDEFINED> instruction: 0x000142b4
   143ec:			; <UNDEFINED> instruction: 0x000142b4
   143f0:			; <UNDEFINED> instruction: 0x000142b4
   143f4:			; <UNDEFINED> instruction: 0x000142b4
   143f8:			; <UNDEFINED> instruction: 0x000142b4
   143fc:			; <UNDEFINED> instruction: 0x000142b4
   14400:			; <UNDEFINED> instruction: 0x000142b4
   14404:	andeq	r4, r1, r8, lsl #9
   14408:	ldr	r1, [r7]
   1440c:	add	r2, r1, #1
   14410:	str	r2, [r7]
   14414:	mov	r2, #98	; 0x62
   14418:	b	14320 <flatcc_json_printer_string@@Base+0xa4>
   1441c:	cmp	r1, #92	; 0x5c
   14420:	bne	142b4 <flatcc_json_printer_string@@Base+0x38>
   14424:	ldr	r1, [r7]
   14428:	add	r2, r1, #1
   1442c:	str	r2, [r7]
   14430:	strb	r9, [r1]
   14434:	b	14324 <flatcc_json_printer_string@@Base+0xa8>
   14438:	ldr	r1, [r7]
   1443c:	add	r2, r1, #1
   14440:	str	r2, [r7]
   14444:	mov	r2, #116	; 0x74
   14448:	b	14320 <flatcc_json_printer_string@@Base+0xa4>
   1444c:	ldr	r1, [r7]
   14450:	add	r2, r1, #1
   14454:	str	r2, [r7]
   14458:	mov	r2, #110	; 0x6e
   1445c:	b	14320 <flatcc_json_printer_string@@Base+0xa4>
   14460:	ldr	r1, [r7]
   14464:	add	r2, r1, #1
   14468:	str	r2, [r7]
   1446c:	mov	r2, #102	; 0x66
   14470:	b	14320 <flatcc_json_printer_string@@Base+0xa4>
   14474:	ldr	r1, [r7]
   14478:	add	r2, r1, #1
   1447c:	str	r2, [r7]
   14480:	mov	r2, #114	; 0x72
   14484:	b	14320 <flatcc_json_printer_string@@Base+0xa4>
   14488:	ldr	r1, [r7]
   1448c:	add	r2, r1, #1
   14490:	str	r2, [r7]
   14494:	mov	r2, #34	; 0x22
   14498:	b	14320 <flatcc_json_printer_string@@Base+0xa4>
   1449c:	mov	r0, #34	; 0x22
   144a0:	strb	r0, [r1]
   144a4:	sub	sp, fp, #28
   144a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000144ac <flatcc_json_printer_write@@Base>:
   144ac:	b	144b0 <flatcc_json_printer_write@@Base+0x4>
   144b0:	push	{r4, r5, fp, lr}
   144b4:	add	fp, sp, #8
   144b8:	mov	r4, r2
   144bc:	mov	r5, r0
   144c0:	ldr	r2, [r0, #16]
   144c4:	ldr	r0, [r0, #20]
   144c8:	add	r3, r0, r4
   144cc:	cmp	r3, r2
   144d0:	bcs	144ec <flatcc_json_printer_write@@Base+0x40>
   144d4:	mov	r2, r4
   144d8:	bl	128b4 <memcpy@plt>
   144dc:	ldr	r0, [r5, #20]
   144e0:	add	r0, r0, r4
   144e4:	str	r0, [r5, #20]
   144e8:	pop	{r4, r5, fp, pc}
   144ec:	mov	r0, r5
   144f0:	mov	r2, r4
   144f4:	pop	{r4, r5, fp, lr}
   144f8:	b	1b9c4 <flatcc_json_printer_clear@@Base+0xb48>

000144fc <flatcc_json_printer_nl@@Base>:
   144fc:	ldr	r1, [r0, #20]
   14500:	add	r2, r1, #1
   14504:	str	r2, [r0, #20]
   14508:	mov	r2, #10
   1450c:	strb	r2, [r1]
   14510:	b	14514 <flatcc_json_printer_nl@@Base+0x18>
   14514:	ldr	r1, [r0, #16]
   14518:	ldr	r2, [r0, #20]
   1451c:	cmp	r2, r1
   14520:	bxcc	lr
   14524:	ldr	r2, [r0, #44]	; 0x2c
   14528:	mov	r1, #0
   1452c:	bx	r2

00014530 <flatcc_json_printer_char@@Base>:
   14530:	ldr	r2, [r0, #20]
   14534:	add	r3, r2, #1
   14538:	str	r3, [r0, #20]
   1453c:	strb	r1, [r2]
   14540:	bx	lr

00014544 <flatcc_json_printer_indent@@Base>:
   14544:	b	14548 <flatcc_json_printer_indent@@Base+0x4>
   14548:	push	{r4, r5, r6, sl, fp, lr}
   1454c:	add	fp, sp, #16
   14550:	mov	r4, r0
   14554:	ldr	r1, [r0, #16]
   14558:	ldr	r0, [r0, #20]
   1455c:	ldrb	r2, [r4, #25]
   14560:	ldr	r3, [r4, #32]
   14564:	mla	r5, r3, r2, r0
   14568:	mul	r6, r3, r2
   1456c:	cmp	r5, r1
   14570:	bls	14584 <flatcc_json_printer_indent@@Base+0x40>
   14574:	mov	r0, r4
   14578:	mov	r1, r6
   1457c:	pop	{r4, r5, r6, sl, fp, lr}
   14580:	b	1ba6c <flatcc_json_printer_clear@@Base+0xbf0>
   14584:	mov	r1, #32
   14588:	mov	r2, r6
   1458c:	bl	12944 <memset@plt>
   14590:	ldr	r0, [r4, #20]
   14594:	add	r0, r0, r6
   14598:	str	r0, [r4, #20]
   1459c:	pop	{r4, r5, r6, sl, fp, pc}

000145a0 <flatcc_json_printer_add_level@@Base>:
   145a0:	ldr	r2, [r0, #32]
   145a4:	add	r1, r2, r1
   145a8:	str	r1, [r0, #32]
   145ac:	bx	lr

000145b0 <flatcc_json_printer_get_level@@Base>:
   145b0:	ldr	r0, [r0, #32]
   145b4:	bx	lr

000145b8 <flatcc_json_printer_uint8@@Base>:
   145b8:	push	{r4, sl, fp, lr}
   145bc:	add	fp, sp, #8
   145c0:	mov	r2, r1
   145c4:	mov	r4, r0
   145c8:	ldr	r1, [r0, #20]
   145cc:	mov	r0, r2
   145d0:	bl	145e4 <flatcc_json_printer_uint8@@Base+0x2c>
   145d4:	ldr	r1, [r4, #20]
   145d8:	add	r0, r1, r0
   145dc:	str	r0, [r4, #20]
   145e0:	pop	{r4, sl, fp, pc}
   145e4:	mov	r2, #0
   145e8:	cmp	r0, #100	; 0x64
   145ec:	bcc	14638 <flatcc_json_printer_uint8@@Base+0x80>
   145f0:	strb	r2, [r1, #3]
   145f4:	movw	r2, #34079	; 0x851f
   145f8:	movt	r2, #20971	; 0x51eb
   145fc:	umull	r2, r3, r0, r2
   14600:	mov	r2, #48	; 0x30
   14604:	orr	r2, r2, r3, lsr #5
   14608:	strb	r2, [r1]
   1460c:	lsr	r2, r3, #5
   14610:	mov	r3, #100	; 0x64
   14614:	mls	r0, r2, r3, r0
   14618:	uxtb	r0, r0
   1461c:	movw	r2, #51599	; 0xc98f
   14620:	movt	r2, #1
   14624:	add	r0, r2, r0, lsl #1
   14628:	ldrh	r0, [r0]
   1462c:	strh	r0, [r1, #1]
   14630:	mov	r0, #3
   14634:	bx	lr
   14638:	cmp	r0, #10
   1463c:	strbcc	r2, [r1, #1]
   14640:	addcc	r0, r0, #48	; 0x30
   14644:	strbcc	r0, [r1]
   14648:	movcc	r0, #1
   1464c:	bxcc	lr
   14650:	strb	r2, [r1, #2]
   14654:	movw	r2, #34079	; 0x851f
   14658:	movt	r2, #20971	; 0x51eb
   1465c:	umull	r2, r3, r0, r2
   14660:	lsr	r2, r3, #5
   14664:	mov	r3, #100	; 0x64
   14668:	mls	r0, r2, r3, r0
   1466c:	movw	r2, #51599	; 0xc98f
   14670:	movt	r2, #1
   14674:	add	r0, r2, r0, lsl #1
   14678:	ldrh	r0, [r0]
   1467c:	strh	r0, [r1]
   14680:	mov	r0, #2
   14684:	bx	lr

00014688 <flatcc_json_printer_uint16@@Base>:
   14688:	push	{r4, sl, fp, lr}
   1468c:	add	fp, sp, #8
   14690:	mov	r2, r1
   14694:	mov	r4, r0
   14698:	ldr	r1, [r0, #20]
   1469c:	mov	r0, r2
   146a0:	bl	146b4 <flatcc_json_printer_uint16@@Base+0x2c>
   146a4:	ldr	r1, [r4, #20]
   146a8:	add	r0, r1, r0
   146ac:	str	r0, [r4, #20]
   146b0:	pop	{r4, sl, fp, pc}
   146b4:	push	{fp, lr}
   146b8:	mov	fp, sp
   146bc:	mov	lr, r0
   146c0:	cmp	r0, #1000	; 0x3e8
   146c4:	bcc	146dc <flatcc_json_printer_uint16@@Base+0x54>
   146c8:	movw	r3, #9999	; 0x270f
   146cc:	mov	r0, #4
   146d0:	cmp	lr, r3
   146d4:	movwhi	r0, #5
   146d8:	b	14700 <flatcc_json_printer_uint16@@Base+0x78>
   146dc:	cmp	lr, #100	; 0x64
   146e0:	bcc	146f4 <flatcc_json_printer_uint16@@Base+0x6c>
   146e4:	mov	r0, #0
   146e8:	strb	r0, [r1, #3]!
   146ec:	mov	r0, #3
   146f0:	b	147a4 <flatcc_json_printer_uint16@@Base+0x11c>
   146f4:	mov	r0, #1
   146f8:	cmp	lr, #9
   146fc:	movwhi	r0, #2
   14700:	mov	r3, #0
   14704:	strb	r3, [r1, r0]!
   14708:	tst	r0, #1
   1470c:	bne	14754 <flatcc_json_printer_uint16@@Base+0xcc>
   14710:	cmp	r0, #2
   14714:	beq	147e4 <flatcc_json_printer_uint16@@Base+0x15c>
   14718:	cmp	r0, #4
   1471c:	popne	{fp, pc}
   14720:	movw	r2, #34079	; 0x851f
   14724:	movt	r2, #20971	; 0x51eb
   14728:	umull	r2, r3, lr, r2
   1472c:	lsr	r3, r3, #5
   14730:	mov	r2, #100	; 0x64
   14734:	mls	r2, r3, r2, lr
   14738:	uxth	ip, r2
   1473c:	movw	r2, #51599	; 0xc98f
   14740:	movt	r2, #1
   14744:	add	r2, r2, ip, lsl #1
   14748:	ldrh	r2, [r2]
   1474c:	strh	r2, [r1, #-2]!
   14750:	b	147e8 <flatcc_json_printer_uint16@@Base+0x160>
   14754:	cmp	r0, #1
   14758:	beq	1481c <flatcc_json_printer_uint16@@Base+0x194>
   1475c:	cmp	r0, #3
   14760:	beq	147a4 <flatcc_json_printer_uint16@@Base+0x11c>
   14764:	cmp	r0, #5
   14768:	bne	14818 <flatcc_json_printer_uint16@@Base+0x190>
   1476c:	movw	r0, #34079	; 0x851f
   14770:	movt	r0, #20971	; 0x51eb
   14774:	umull	r0, r3, lr, r0
   14778:	lsr	r3, r3, #5
   1477c:	mov	r0, #100	; 0x64
   14780:	mls	r0, r3, r0, lr
   14784:	uxth	r0, r0
   14788:	movw	r2, #51599	; 0xc98f
   1478c:	movt	r2, #1
   14790:	add	r0, r2, r0, lsl #1
   14794:	ldrh	r0, [r0]
   14798:	strh	r0, [r1, #-2]!
   1479c:	mov	r0, #5
   147a0:	mov	lr, r3
   147a4:	uxth	ip, lr
   147a8:	movw	r3, #34079	; 0x851f
   147ac:	movt	r3, #20971	; 0x51eb
   147b0:	umull	r3, r2, ip, r3
   147b4:	lsr	r3, r2, #5
   147b8:	mov	r2, #100	; 0x64
   147bc:	mls	r2, r3, r2, lr
   147c0:	uxth	ip, r2
   147c4:	movw	r2, #51599	; 0xc98f
   147c8:	movt	r2, #1
   147cc:	add	r2, r2, ip, lsl #1
   147d0:	ldrh	r2, [r2]
   147d4:	strh	r2, [r1, #-2]!
   147d8:	add	r2, r3, #48	; 0x30
   147dc:	strb	r2, [r1, #-1]
   147e0:	pop	{fp, pc}
   147e4:	mov	r3, lr
   147e8:	uxth	ip, r3
   147ec:	movw	r3, #34079	; 0x851f
   147f0:	movt	r3, #20971	; 0x51eb
   147f4:	umull	r3, r2, ip, r3
   147f8:	lsr	r2, r2, #5
   147fc:	mov	r3, #100	; 0x64
   14800:	mls	r2, r2, r3, ip
   14804:	movw	r3, #51599	; 0xc98f
   14808:	movt	r3, #1
   1480c:	add	r2, r3, r2, lsl #1
   14810:	ldrh	r2, [r2]
   14814:	strh	r2, [r1, #-2]
   14818:	pop	{fp, pc}
   1481c:	mov	r3, lr
   14820:	b	147d8 <flatcc_json_printer_uint16@@Base+0x150>

00014824 <flatcc_json_printer_uint32@@Base>:
   14824:	push	{r4, sl, fp, lr}
   14828:	add	fp, sp, #8
   1482c:	mov	r2, r1
   14830:	mov	r4, r0
   14834:	ldr	r1, [r0, #20]
   14838:	mov	r0, r2
   1483c:	bl	14850 <flatcc_json_printer_uint32@@Base+0x2c>
   14840:	ldr	r1, [r4, #20]
   14844:	add	r0, r1, r0
   14848:	str	r0, [r4, #20]
   1484c:	pop	{r4, sl, fp, pc}
   14850:	push	{fp, lr}
   14854:	mov	fp, sp
   14858:	mov	lr, r0
   1485c:	movw	r0, #10000	; 0x2710
   14860:	cmp	lr, r0
   14864:	bcc	148c8 <flatcc_json_printer_uint32@@Base+0xa4>
   14868:	movw	r0, #38528	; 0x9680
   1486c:	movt	r0, #152	; 0x98
   14870:	cmp	lr, r0
   14874:	bcc	148e4 <flatcc_json_printer_uint32@@Base+0xc0>
   14878:	movw	r0, #51712	; 0xca00
   1487c:	movt	r0, #15258	; 0x3b9a
   14880:	cmp	lr, r0
   14884:	bcc	14914 <flatcc_json_printer_uint32@@Base+0xf0>
   14888:	movw	r0, #34079	; 0x851f
   1488c:	movt	r0, #20971	; 0x51eb
   14890:	umull	r0, r3, lr, r0
   14894:	lsr	r3, r3, #5
   14898:	mov	r0, #100	; 0x64
   1489c:	mls	r0, r3, r0, lr
   148a0:	movw	r2, #51599	; 0xc98f
   148a4:	movt	r2, #1
   148a8:	add	r0, r2, r0, lsl #1
   148ac:	ldrh	r0, [r0]
   148b0:	strh	r0, [r1, #8]!
   148b4:	mov	r0, #0
   148b8:	strb	r0, [r1, #2]
   148bc:	mov	r0, #10
   148c0:	mov	lr, r3
   148c4:	b	14980 <flatcc_json_printer_uint32@@Base+0x15c>
   148c8:	cmp	lr, #100	; 0x64
   148cc:	bcc	14904 <flatcc_json_printer_uint32@@Base+0xe0>
   148d0:	lsr	r3, lr, #3
   148d4:	mov	r0, #3
   148d8:	cmp	r3, #124	; 0x7c
   148dc:	movwhi	r0, #4
   148e0:	b	14940 <flatcc_json_printer_uint32@@Base+0x11c>
   148e4:	movw	r0, #16960	; 0x4240
   148e8:	movt	r0, #15
   148ec:	cmp	lr, r0
   148f0:	bcc	1492c <flatcc_json_printer_uint32@@Base+0x108>
   148f4:	mov	r0, #0
   148f8:	strb	r0, [r1, #7]!
   148fc:	mov	r0, #7
   14900:	b	14aac <flatcc_json_printer_uint32@@Base+0x288>
   14904:	mov	r0, #1
   14908:	cmp	lr, #9
   1490c:	movwhi	r0, #2
   14910:	b	14940 <flatcc_json_printer_uint32@@Base+0x11c>
   14914:	movw	r3, #57599	; 0xe0ff
   14918:	movt	r3, #1525	; 0x5f5
   1491c:	mov	r0, #8
   14920:	cmp	lr, r3
   14924:	movwhi	r0, #9
   14928:	b	14940 <flatcc_json_printer_uint32@@Base+0x11c>
   1492c:	movw	r3, #34463	; 0x869f
   14930:	movt	r3, #1
   14934:	mov	r0, #5
   14938:	cmp	lr, r3
   1493c:	movwhi	r0, #6
   14940:	mov	r3, #0
   14944:	strb	r3, [r1, r0]!
   14948:	tst	r0, #1
   1494c:	bne	14a40 <flatcc_json_printer_uint32@@Base+0x21c>
   14950:	sub	r3, r0, #2
   14954:	cmp	r3, #6
   14958:	bhi	14b44 <flatcc_json_printer_uint32@@Base+0x320>
   1495c:	add	r2, pc, #0
   14960:	ldr	pc, [r2, r3, lsl #2]
   14964:	andeq	r4, r1, r0, lsl sl
   14968:	andeq	r4, r1, r4, asr #22
   1496c:	andeq	r4, r1, r0, ror #19
   14970:	andeq	r4, r1, r4, asr #22
   14974:			; <UNDEFINED> instruction: 0x000149b0
   14978:	andeq	r4, r1, r4, asr #22
   1497c:	andeq	r4, r1, r0, lsl #19
   14980:	movw	r2, #34079	; 0x851f
   14984:	movt	r2, #20971	; 0x51eb
   14988:	umull	r2, r3, lr, r2
   1498c:	lsr	r2, r3, #5
   14990:	mov	r3, #100	; 0x64
   14994:	mls	ip, r2, r3, lr
   14998:	movw	r3, #51599	; 0xc98f
   1499c:	movt	r3, #1
   149a0:	add	r3, r3, ip, lsl #1
   149a4:	ldrh	r3, [r3]
   149a8:	strh	r3, [r1, #-2]!
   149ac:	mov	lr, r2
   149b0:	movw	r2, #34079	; 0x851f
   149b4:	movt	r2, #20971	; 0x51eb
   149b8:	umull	r2, r3, lr, r2
   149bc:	lsr	r2, r3, #5
   149c0:	mov	r3, #100	; 0x64
   149c4:	mls	ip, r2, r3, lr
   149c8:	movw	r3, #51599	; 0xc98f
   149cc:	movt	r3, #1
   149d0:	add	r3, r3, ip, lsl #1
   149d4:	ldrh	r3, [r3]
   149d8:	strh	r3, [r1, #-2]!
   149dc:	mov	lr, r2
   149e0:	movw	r2, #34079	; 0x851f
   149e4:	movt	r2, #20971	; 0x51eb
   149e8:	umull	r2, r3, lr, r2
   149ec:	lsr	r2, r3, #5
   149f0:	mov	r3, #100	; 0x64
   149f4:	mls	ip, r2, r3, lr
   149f8:	movw	r3, #51599	; 0xc98f
   149fc:	movt	r3, #1
   14a00:	add	r3, r3, ip, lsl #1
   14a04:	ldrh	r3, [r3]
   14a08:	strh	r3, [r1, #-2]!
   14a0c:	mov	lr, r2
   14a10:	movw	r2, #34079	; 0x851f
   14a14:	movt	r2, #20971	; 0x51eb
   14a18:	umull	r2, r3, lr, r2
   14a1c:	lsr	r2, r3, #5
   14a20:	mov	r3, #100	; 0x64
   14a24:	mls	r2, r2, r3, lr
   14a28:	movw	r3, #51599	; 0xc98f
   14a2c:	movt	r3, #1
   14a30:	add	r2, r3, r2, lsl #1
   14a34:	ldrh	r2, [r2]
   14a38:	strh	r2, [r1, #-2]
   14a3c:	pop	{fp, pc}
   14a40:	sub	ip, r0, #1
   14a44:	cmp	ip, #8
   14a48:	bhi	14b44 <flatcc_json_printer_uint32@@Base+0x320>
   14a4c:	add	r3, pc, #0
   14a50:	ldr	pc, [r3, ip, lsl #2]
   14a54:	andeq	r4, r1, ip, lsr fp
   14a58:	andeq	r4, r1, r4, asr #22
   14a5c:	andeq	r4, r1, ip, lsl #22
   14a60:	andeq	r4, r1, r4, asr #22
   14a64:	ldrdeq	r4, [r1], -ip
   14a68:	andeq	r4, r1, r4, asr #22
   14a6c:	andeq	r4, r1, ip, lsr #21
   14a70:	andeq	r4, r1, r4, asr #22
   14a74:	andeq	r4, r1, r8, ror sl
   14a78:	movw	r0, #34079	; 0x851f
   14a7c:	movt	r0, #20971	; 0x51eb
   14a80:	umull	r0, r3, lr, r0
   14a84:	lsr	r3, r3, #5
   14a88:	mov	r0, #100	; 0x64
   14a8c:	mls	r0, r3, r0, lr
   14a90:	movw	r2, #51599	; 0xc98f
   14a94:	movt	r2, #1
   14a98:	add	r0, r2, r0, lsl #1
   14a9c:	ldrh	r0, [r0]
   14aa0:	strh	r0, [r1, #-2]!
   14aa4:	mov	r0, #9
   14aa8:	mov	lr, r3
   14aac:	movw	r3, #34079	; 0x851f
   14ab0:	movt	r3, #20971	; 0x51eb
   14ab4:	umull	r3, r2, lr, r3
   14ab8:	lsr	r2, r2, #5
   14abc:	mov	r3, #100	; 0x64
   14ac0:	mls	ip, r2, r3, lr
   14ac4:	movw	r3, #51599	; 0xc98f
   14ac8:	movt	r3, #1
   14acc:	add	r3, r3, ip, lsl #1
   14ad0:	ldrh	r3, [r3]
   14ad4:	strh	r3, [r1, #-2]!
   14ad8:	mov	lr, r2
   14adc:	movw	r2, #34079	; 0x851f
   14ae0:	movt	r2, #20971	; 0x51eb
   14ae4:	umull	r2, r3, lr, r2
   14ae8:	lsr	r2, r3, #5
   14aec:	mov	r3, #100	; 0x64
   14af0:	mls	ip, r2, r3, lr
   14af4:	movw	r3, #51599	; 0xc98f
   14af8:	movt	r3, #1
   14afc:	add	r3, r3, ip, lsl #1
   14b00:	ldrh	r3, [r3]
   14b04:	strh	r3, [r1, #-2]!
   14b08:	mov	lr, r2
   14b0c:	movw	r2, #34079	; 0x851f
   14b10:	movt	r2, #20971	; 0x51eb
   14b14:	umull	r2, r3, lr, r2
   14b18:	lsr	r2, r3, #5
   14b1c:	mov	r3, #100	; 0x64
   14b20:	mls	ip, r2, r3, lr
   14b24:	movw	r3, #51599	; 0xc98f
   14b28:	movt	r3, #1
   14b2c:	add	r3, r3, ip, lsl #1
   14b30:	ldrh	r3, [r3]
   14b34:	strh	r3, [r1, #-2]!
   14b38:	mov	lr, r2
   14b3c:	add	r2, lr, #48	; 0x30
   14b40:	strb	r2, [r1, #-1]
   14b44:	pop	{fp, pc}

00014b48 <flatcc_json_printer_uint64@@Base>:
   14b48:	push	{r4, sl, fp, lr}
   14b4c:	add	fp, sp, #8
   14b50:	mov	r1, r3
   14b54:	mov	r3, r2
   14b58:	mov	r4, r0
   14b5c:	ldr	r2, [r0, #20]
   14b60:	mov	r0, r3
   14b64:	bl	14b78 <flatcc_json_printer_uint64@@Base+0x30>
   14b68:	ldr	r1, [r4, #20]
   14b6c:	add	r0, r1, r0
   14b70:	str	r0, [r4, #20]
   14b74:	pop	{r4, sl, fp, pc}
   14b78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b7c:	add	fp, sp, #28
   14b80:	sub	sp, sp, #4
   14b84:	mov	r4, r2
   14b88:	mov	r7, r0
   14b8c:	movw	r0, #51711	; 0xc9ff
   14b90:	movt	r0, #15258	; 0x3b9a
   14b94:	subs	r0, r0, r7
   14b98:	rscs	r0, r1, #0
   14b9c:	bcc	14bb4 <flatcc_json_printer_uint64@@Base+0x6c>
   14ba0:	mov	r0, r7
   14ba4:	mov	r1, r4
   14ba8:	sub	sp, fp, #28
   14bac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14bb0:	b	14850 <flatcc_json_printer_uint32@@Base+0x2c>
   14bb4:	mov	r6, r1
   14bb8:	movw	r0, #2328	; 0x918
   14bbc:	movw	r1, #40960	; 0xa000
   14bc0:	movt	r1, #20082	; 0x4e72
   14bc4:	subs	r1, r7, r1
   14bc8:	sbcs	r0, r6, r0
   14bcc:	movw	r9, #51599	; 0xc98f
   14bd0:	movt	r9, #1
   14bd4:	bcc	14c34 <flatcc_json_printer_uint64@@Base+0xec>
   14bd8:	movw	r0, #34546	; 0x86f2
   14bdc:	movt	r0, #35	; 0x23
   14be0:	movw	r1, #0
   14be4:	movt	r1, #28609	; 0x6fc1
   14be8:	subs	r1, r7, r1
   14bec:	sbcs	r0, r6, r0
   14bf0:	bcc	14c64 <flatcc_json_printer_uint64@@Base+0x11c>
   14bf4:	movw	r0, #46771	; 0xb6b3
   14bf8:	movt	r0, #3552	; 0xde0
   14bfc:	movw	r1, #0
   14c00:	movt	r1, #42852	; 0xa764
   14c04:	subs	r1, r7, r1
   14c08:	sbcs	r0, r6, r0
   14c0c:	bcc	14cac <flatcc_json_printer_uint64@@Base+0x164>
   14c10:	mov	r8, #19
   14c14:	movw	r0, #8964	; 0x2304
   14c18:	movt	r0, #35527	; 0x8ac7
   14c1c:	movw	r1, #65535	; 0xffff
   14c20:	movt	r1, #35303	; 0x89e7
   14c24:	subs	r1, r1, r7
   14c28:	sbcs	r0, r0, r6
   14c2c:	movwcc	r8, #20
   14c30:	b	14cec <flatcc_json_printer_uint64@@Base+0x1a4>
   14c34:	movw	r0, #59392	; 0xe800
   14c38:	movt	r0, #18550	; 0x4876
   14c3c:	subs	r0, r7, r0
   14c40:	sbcs	r0, r6, #23
   14c44:	bcc	14c90 <flatcc_json_printer_uint64@@Base+0x148>
   14c48:	mov	r8, #12
   14c4c:	movw	r0, #4095	; 0xfff
   14c50:	movt	r0, #54437	; 0xd4a5
   14c54:	subs	r0, r0, r7
   14c58:	rscs	r0, r6, #232	; 0xe8
   14c5c:	movwcc	r8, #13
   14c60:	b	14cec <flatcc_json_printer_uint64@@Base+0x1a4>
   14c64:	movw	r0, #36222	; 0x8d7e
   14c68:	movt	r0, #3
   14c6c:	movw	r1, #32768	; 0x8000
   14c70:	movt	r1, #42182	; 0xa4c6
   14c74:	subs	r1, r7, r1
   14c78:	sbcs	r0, r6, r0
   14c7c:	bcc	14cd0 <flatcc_json_printer_uint64@@Base+0x188>
   14c80:	mov	r0, #0
   14c84:	strb	r0, [r4, #16]!
   14c88:	mov	r8, #16
   14c8c:	b	14d9c <flatcc_json_printer_uint64@@Base+0x254>
   14c90:	mov	r8, #10
   14c94:	movw	r0, #58367	; 0xe3ff
   14c98:	movt	r0, #21515	; 0x540b
   14c9c:	subs	r0, r0, r7
   14ca0:	rscs	r0, r6, #2
   14ca4:	movwcc	r8, #11
   14ca8:	b	14cec <flatcc_json_printer_uint64@@Base+0x1a4>
   14cac:	mov	r8, #17
   14cb0:	movw	r0, #17784	; 0x4578
   14cb4:	movt	r0, #355	; 0x163
   14cb8:	movw	r1, #65535	; 0xffff
   14cbc:	movt	r1, #23945	; 0x5d89
   14cc0:	subs	r1, r1, r7
   14cc4:	sbcs	r0, r0, r6
   14cc8:	movwcc	r8, #18
   14ccc:	b	14cec <flatcc_json_printer_uint64@@Base+0x1a4>
   14cd0:	mov	r8, #14
   14cd4:	movw	r0, #23283	; 0x5af3
   14cd8:	movw	r1, #16383	; 0x3fff
   14cdc:	movt	r1, #4218	; 0x107a
   14ce0:	subs	r1, r1, r7
   14ce4:	sbcs	r0, r0, r6
   14ce8:	movwcc	r8, #15
   14cec:	mov	r0, #0
   14cf0:	strb	r0, [r4, r8]!
   14cf4:	tst	r8, #1
   14cf8:	bne	14e60 <flatcc_json_printer_uint64@@Base+0x318>
   14cfc:	sub	r0, r8, #10
   14d00:	cmp	r0, #10
   14d04:	bhi	14fac <flatcc_json_printer_uint64@@Base+0x464>
   14d08:	add	r1, pc, #0
   14d0c:	ldr	pc, [r1, r0, lsl #2]
   14d10:	andeq	r4, r1, ip, lsr #28
   14d14:	andeq	r4, r1, ip, lsr #31
   14d18:	strdeq	r4, [r1], -ip
   14d1c:	andeq	r4, r1, ip, lsr #31
   14d20:	andeq	r4, r1, ip, asr #27
   14d24:	andeq	r4, r1, ip, lsr #31
   14d28:	muleq	r1, ip, sp
   14d2c:	andeq	r4, r1, ip, lsr #31
   14d30:	andeq	r4, r1, ip, ror #26
   14d34:	andeq	r4, r1, ip, lsr #31
   14d38:	andeq	r4, r1, ip, lsr sp
   14d3c:	mov	r5, #100	; 0x64
   14d40:	mov	r0, r7
   14d44:	mov	r1, r6
   14d48:	mov	r2, #100	; 0x64
   14d4c:	mov	r3, #0
   14d50:	bl	1bd10 <flatcc_json_printer_clear@@Base+0xe94>
   14d54:	mov	r6, r1
   14d58:	mls	r1, r0, r5, r7
   14d5c:	add	r1, r9, r1, lsl #1
   14d60:	ldrh	r1, [r1]
   14d64:	strh	r1, [r4, #-2]!
   14d68:	mov	r7, r0
   14d6c:	mov	r5, #100	; 0x64
   14d70:	mov	r0, r7
   14d74:	mov	r1, r6
   14d78:	mov	r2, #100	; 0x64
   14d7c:	mov	r3, #0
   14d80:	bl	1bd10 <flatcc_json_printer_clear@@Base+0xe94>
   14d84:	mov	r6, r1
   14d88:	mls	r1, r0, r5, r7
   14d8c:	add	r1, r9, r1, lsl #1
   14d90:	ldrh	r1, [r1]
   14d94:	strh	r1, [r4, #-2]!
   14d98:	mov	r7, r0
   14d9c:	mov	r5, #100	; 0x64
   14da0:	mov	r0, r7
   14da4:	mov	r1, r6
   14da8:	mov	r2, #100	; 0x64
   14dac:	mov	r3, #0
   14db0:	bl	1bd10 <flatcc_json_printer_clear@@Base+0xe94>
   14db4:	mov	r6, r1
   14db8:	mls	r1, r0, r5, r7
   14dbc:	add	r1, r9, r1, lsl #1
   14dc0:	ldrh	r1, [r1]
   14dc4:	strh	r1, [r4, #-2]!
   14dc8:	mov	r7, r0
   14dcc:	mov	r5, #100	; 0x64
   14dd0:	mov	r0, r7
   14dd4:	mov	r1, r6
   14dd8:	mov	r2, #100	; 0x64
   14ddc:	mov	r3, #0
   14de0:	bl	1bd10 <flatcc_json_printer_clear@@Base+0xe94>
   14de4:	mov	r6, r1
   14de8:	mls	r1, r0, r5, r7
   14dec:	add	r1, r9, r1, lsl #1
   14df0:	ldrh	r1, [r1]
   14df4:	strh	r1, [r4, #-2]!
   14df8:	mov	r7, r0
   14dfc:	mov	r5, #100	; 0x64
   14e00:	mov	r0, r7
   14e04:	mov	r1, r6
   14e08:	mov	r2, #100	; 0x64
   14e0c:	mov	r3, #0
   14e10:	bl	1bd10 <flatcc_json_printer_clear@@Base+0xe94>
   14e14:	mov	r6, r1
   14e18:	mls	r1, r0, r5, r7
   14e1c:	add	r1, r9, r1, lsl #1
   14e20:	ldrh	r1, [r1]
   14e24:	strh	r1, [r4, #-2]!
   14e28:	mov	r7, r0
   14e2c:	mov	r5, #100	; 0x64
   14e30:	mov	r0, r7
   14e34:	mov	r1, r6
   14e38:	mov	r2, #100	; 0x64
   14e3c:	mov	r3, #0
   14e40:	bl	1bd10 <flatcc_json_printer_clear@@Base+0xe94>
   14e44:	mov	r6, r1
   14e48:	mls	r1, r0, r5, r7
   14e4c:	add	r1, r9, r1, lsl #1
   14e50:	ldrh	r1, [r1]
   14e54:	strh	r1, [r4, #-2]!
   14e58:	mov	r7, r0
   14e5c:	b	14fac <flatcc_json_printer_uint64@@Base+0x464>
   14e60:	sub	r0, r8, #11
   14e64:	cmp	r0, #8
   14e68:	bhi	14fac <flatcc_json_printer_uint64@@Base+0x464>
   14e6c:	add	r1, pc, #0
   14e70:	ldr	pc, [r1, r0, lsl #2]
   14e74:	andeq	r4, r1, r0, asr pc
   14e78:	andeq	r4, r1, ip, lsr #31
   14e7c:	andeq	r4, r1, r0, lsr #30
   14e80:	andeq	r4, r1, ip, lsr #31
   14e84:	strdeq	r4, [r1], -r0
   14e88:	andeq	r4, r1, ip, lsr #31
   14e8c:	andeq	r4, r1, r0, asr #29
   14e90:	andeq	r4, r1, ip, lsr #31
   14e94:	muleq	r1, r8, lr
   14e98:	mov	r0, r7
   14e9c:	mov	r1, r6
   14ea0:	mov	r2, #100	; 0x64
   14ea4:	mov	r3, #0
   14ea8:	bl	1bd10 <flatcc_json_printer_clear@@Base+0xe94>
   14eac:	mov	r7, r0
   14eb0:	mov	r6, r1
   14eb4:	add	r0, r9, r2, lsl #1
   14eb8:	ldrh	r0, [r0]
   14ebc:	strh	r0, [r4, #-2]!
   14ec0:	mov	r5, #100	; 0x64
   14ec4:	mov	r0, r7
   14ec8:	mov	r1, r6
   14ecc:	mov	r2, #100	; 0x64
   14ed0:	mov	r3, #0
   14ed4:	bl	1bd10 <flatcc_json_printer_clear@@Base+0xe94>
   14ed8:	mov	r6, r1
   14edc:	mls	r1, r0, r5, r7
   14ee0:	add	r1, r9, r1, lsl #1
   14ee4:	ldrh	r1, [r1]
   14ee8:	strh	r1, [r4, #-2]!
   14eec:	mov	r7, r0
   14ef0:	mov	r5, #100	; 0x64
   14ef4:	mov	r0, r7
   14ef8:	mov	r1, r6
   14efc:	mov	r2, #100	; 0x64
   14f00:	mov	r3, #0
   14f04:	bl	1bd10 <flatcc_json_printer_clear@@Base+0xe94>
   14f08:	mov	r6, r1
   14f0c:	mls	r1, r0, r5, r7
   14f10:	add	r1, r9, r1, lsl #1
   14f14:	ldrh	r1, [r1]
   14f18:	strh	r1, [r4, #-2]!
   14f1c:	mov	r7, r0
   14f20:	mov	r5, #100	; 0x64
   14f24:	mov	r0, r7
   14f28:	mov	r1, r6
   14f2c:	mov	r2, #100	; 0x64
   14f30:	mov	r3, #0
   14f34:	bl	1bd10 <flatcc_json_printer_clear@@Base+0xe94>
   14f38:	mov	r6, r1
   14f3c:	mls	r1, r0, r5, r7
   14f40:	add	r1, r9, r1, lsl #1
   14f44:	ldrh	r1, [r1]
   14f48:	strh	r1, [r4, #-2]!
   14f4c:	mov	r7, r0
   14f50:	mov	sl, #100	; 0x64
   14f54:	mov	r0, r7
   14f58:	mov	r1, r6
   14f5c:	mov	r2, #100	; 0x64
   14f60:	mov	r3, #0
   14f64:	bl	1bd10 <flatcc_json_printer_clear@@Base+0xe94>
   14f68:	mov	r5, r0
   14f6c:	mov	r2, #10
   14f70:	mov	r3, #0
   14f74:	bl	1bd10 <flatcc_json_printer_clear@@Base+0xe94>
   14f78:	orr	r0, r2, #48	; 0x30
   14f7c:	strb	r0, [r4, #-3]!
   14f80:	mls	r0, r5, sl, r7
   14f84:	add	r0, r9, r0, lsl #1
   14f88:	ldrh	r0, [r0]
   14f8c:	strh	r0, [r4, #1]
   14f90:	mov	r0, r7
   14f94:	mov	r1, r6
   14f98:	mov	r2, #1000	; 0x3e8
   14f9c:	mov	r3, #0
   14fa0:	bl	1bd10 <flatcc_json_printer_clear@@Base+0xe94>
   14fa4:	mov	r7, r0
   14fa8:	mov	r6, r1
   14fac:	mov	r5, #100	; 0x64
   14fb0:	mov	r0, r7
   14fb4:	mov	r1, r6
   14fb8:	mov	r2, #100	; 0x64
   14fbc:	mov	r3, #0
   14fc0:	bl	1bd10 <flatcc_json_printer_clear@@Base+0xe94>
   14fc4:	mls	r2, r0, r5, r7
   14fc8:	add	r2, r9, r2, lsl #1
   14fcc:	ldrh	r2, [r2]
   14fd0:	strh	r2, [r4, #-2]
   14fd4:	mov	r2, #100	; 0x64
   14fd8:	mov	r3, #0
   14fdc:	bl	1bd10 <flatcc_json_printer_clear@@Base+0xe94>
   14fe0:	add	r0, r9, r2, lsl #1
   14fe4:	ldrh	r0, [r0]
   14fe8:	strh	r0, [r4, #-4]
   14fec:	mov	r0, r7
   14ff0:	mov	r1, r6
   14ff4:	movw	r2, #10000	; 0x2710
   14ff8:	mov	r3, #0
   14ffc:	bl	1bd10 <flatcc_json_printer_clear@@Base+0xe94>
   15000:	mov	r2, #100	; 0x64
   15004:	mov	r3, #0
   15008:	bl	1bd10 <flatcc_json_printer_clear@@Base+0xe94>
   1500c:	add	r0, r9, r2, lsl #1
   15010:	ldrh	r0, [r0]
   15014:	strh	r0, [r4, #-6]
   15018:	movw	r2, #16960	; 0x4240
   1501c:	movt	r2, #15
   15020:	mov	r0, r7
   15024:	mov	r1, r6
   15028:	mov	r3, #0
   1502c:	bl	1bd10 <flatcc_json_printer_clear@@Base+0xe94>
   15030:	mov	r2, #100	; 0x64
   15034:	mov	r3, #0
   15038:	bl	1bd10 <flatcc_json_printer_clear@@Base+0xe94>
   1503c:	add	r0, r9, r2, lsl #1
   15040:	ldrh	r0, [r0]
   15044:	strh	r0, [r4, #-8]
   15048:	mov	r0, r8
   1504c:	sub	sp, fp, #28
   15050:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015054 <flatcc_json_printer_int8@@Base>:
   15054:	push	{r4, sl, fp, lr}
   15058:	add	fp, sp, #8
   1505c:	mov	r2, r1
   15060:	mov	r4, r0
   15064:	ldr	r1, [r0, #20]
   15068:	mov	r0, r2
   1506c:	bl	15080 <flatcc_json_printer_int8@@Base+0x2c>
   15070:	ldr	r1, [r4, #20]
   15074:	add	r0, r1, r0
   15078:	str	r0, [r4, #20]
   1507c:	pop	{r4, sl, fp, pc}
   15080:	push	{r4, sl, fp, lr}
   15084:	add	fp, sp, #8
   15088:	uxtb	r2, r0
   1508c:	lsr	r4, r2, #7
   15090:	cmn	r0, #1
   15094:	movle	r2, #45	; 0x2d
   15098:	strble	r2, [r1], #1
   1509c:	rsble	r0, r0, #0
   150a0:	uxtb	r0, r0
   150a4:	bl	145e4 <flatcc_json_printer_uint8@@Base+0x2c>
   150a8:	add	r0, r0, r4
   150ac:	pop	{r4, sl, fp, pc}

000150b0 <flatcc_json_printer_int16@@Base>:
   150b0:	push	{r4, sl, fp, lr}
   150b4:	add	fp, sp, #8
   150b8:	mov	r2, r1
   150bc:	mov	r4, r0
   150c0:	ldr	r1, [r0, #20]
   150c4:	mov	r0, r2
   150c8:	bl	150dc <flatcc_json_printer_int16@@Base+0x2c>
   150cc:	ldr	r1, [r4, #20]
   150d0:	add	r0, r1, r0
   150d4:	str	r0, [r4, #20]
   150d8:	pop	{r4, sl, fp, pc}
   150dc:	push	{r4, sl, fp, lr}
   150e0:	add	fp, sp, #8
   150e4:	uxth	r2, r0
   150e8:	lsr	r4, r2, #15
   150ec:	cmn	r0, #1
   150f0:	movle	r2, #45	; 0x2d
   150f4:	strble	r2, [r1], #1
   150f8:	rsble	r0, r0, #0
   150fc:	uxth	r0, r0
   15100:	bl	146b4 <flatcc_json_printer_uint16@@Base+0x2c>
   15104:	add	r0, r0, r4
   15108:	pop	{r4, sl, fp, pc}

0001510c <flatcc_json_printer_int32@@Base>:
   1510c:	push	{r4, sl, fp, lr}
   15110:	add	fp, sp, #8
   15114:	mov	r2, r1
   15118:	mov	r4, r0
   1511c:	ldr	r1, [r0, #20]
   15120:	mov	r0, r2
   15124:	bl	15138 <flatcc_json_printer_int32@@Base+0x2c>
   15128:	ldr	r1, [r4, #20]
   1512c:	add	r0, r1, r0
   15130:	str	r0, [r4, #20]
   15134:	pop	{r4, sl, fp, pc}
   15138:	push	{r4, sl, fp, lr}
   1513c:	add	fp, sp, #8
   15140:	lsr	r4, r0, #31
   15144:	cmn	r0, #1
   15148:	movle	r2, #45	; 0x2d
   1514c:	strble	r2, [r1], #1
   15150:	rsble	r0, r0, #0
   15154:	bl	14850 <flatcc_json_printer_uint32@@Base+0x2c>
   15158:	add	r0, r0, r4
   1515c:	pop	{r4, sl, fp, pc}

00015160 <flatcc_json_printer_int64@@Base>:
   15160:	push	{r4, sl, fp, lr}
   15164:	add	fp, sp, #8
   15168:	mov	r1, r3
   1516c:	mov	r3, r2
   15170:	mov	r4, r0
   15174:	ldr	r2, [r0, #20]
   15178:	mov	r0, r3
   1517c:	bl	15190 <flatcc_json_printer_int64@@Base+0x30>
   15180:	ldr	r1, [r4, #20]
   15184:	add	r0, r1, r0
   15188:	str	r0, [r4, #20]
   1518c:	pop	{r4, sl, fp, pc}
   15190:	push	{r4, sl, fp, lr}
   15194:	add	fp, sp, #8
   15198:	lsr	r4, r1, #31
   1519c:	cmn	r1, #1
   151a0:	bgt	151b4 <flatcc_json_printer_int64@@Base+0x54>
   151a4:	mov	r3, #45	; 0x2d
   151a8:	strb	r3, [r2], #1
   151ac:	rsbs	r0, r0, #0
   151b0:	rsc	r1, r1, #0
   151b4:	bl	14b78 <flatcc_json_printer_uint64@@Base+0x30>
   151b8:	add	r0, r0, r4
   151bc:	pop	{r4, sl, fp, pc}

000151c0 <flatcc_json_printer_float@@Base>:
   151c0:	push	{r4, sl, fp, lr}
   151c4:	add	fp, sp, #8
   151c8:	mov	r4, r0
   151cc:	ldr	r0, [r0, #20]
   151d0:	vcvt.f64.f32	d0, s0
   151d4:	bl	13f80 <flatcc_json_printer_fmt_float@@Base+0x8>
   151d8:	ldr	r1, [r4, #20]
   151dc:	add	r0, r1, r0
   151e0:	str	r0, [r4, #20]
   151e4:	pop	{r4, sl, fp, pc}

000151e8 <flatcc_json_printer_double@@Base>:
   151e8:	push	{r4, sl, fp, lr}
   151ec:	add	fp, sp, #8
   151f0:	mov	r4, r0
   151f4:	ldr	r0, [r0, #20]
   151f8:	bl	13f80 <flatcc_json_printer_fmt_float@@Base+0x8>
   151fc:	ldr	r1, [r4, #20]
   15200:	add	r0, r1, r0
   15204:	str	r0, [r4, #20]
   15208:	pop	{r4, sl, fp, pc}

0001520c <flatcc_json_printer_enum@@Base>:
   1520c:	b	15210 <flatcc_json_printer_enum@@Base+0x4>
   15210:	push	{r4, r5, fp, lr}
   15214:	add	fp, sp, #8
   15218:	mov	r5, r2
   1521c:	mov	r4, r0
   15220:	ldr	r0, [r0, #20]
   15224:	mov	r2, #34	; 0x22
   15228:	strb	r2, [r0]
   1522c:	ldrb	r2, [r4, #26]
   15230:	ldr	r3, [r4, #16]
   15234:	ldr	r0, [r4, #20]
   15238:	cmp	r2, #0
   1523c:	addeq	r0, r0, #1
   15240:	str	r0, [r4, #20]
   15244:	add	r2, r0, r5
   15248:	cmp	r2, r3
   1524c:	bcs	15268 <flatcc_json_printer_enum@@Base+0x5c>
   15250:	mov	r2, r5
   15254:	bl	128b4 <memcpy@plt>
   15258:	ldr	r0, [r4, #20]
   1525c:	add	r0, r0, r5
   15260:	str	r0, [r4, #20]
   15264:	b	15274 <flatcc_json_printer_enum@@Base+0x68>
   15268:	mov	r0, r4
   1526c:	mov	r2, r5
   15270:	bl	144b0 <flatcc_json_printer_write@@Base+0x4>
   15274:	ldr	r0, [r4, #20]
   15278:	mov	r1, #34	; 0x22
   1527c:	strb	r1, [r0]
   15280:	ldrb	r0, [r4, #26]
   15284:	ldr	r1, [r4, #20]
   15288:	cmp	r0, #0
   1528c:	addeq	r1, r1, #1
   15290:	str	r1, [r4, #20]
   15294:	pop	{r4, r5, fp, pc}

00015298 <flatcc_json_printer_delimit_enum_flags@@Base>:
   15298:	ldrb	ip, [r0, #26]
   1529c:	ldr	r3, [r0, #20]
   152a0:	mov	r2, #34	; 0x22
   152a4:	strb	r2, [r3]
   152a8:	cmp	r1, #0
   152ac:	movwne	r1, #1
   152b0:	clz	r2, ip
   152b4:	lsr	r2, r2, #5
   152b8:	orr	r1, r1, r2
   152bc:	ldr	r2, [r0, #20]
   152c0:	add	r1, r2, r1
   152c4:	str	r1, [r0, #20]
   152c8:	bx	lr

000152cc <flatcc_json_printer_enum_flag@@Base>:
   152cc:	push	{fp, lr}
   152d0:	mov	fp, sp
   152d4:	mov	ip, r3
   152d8:	mov	lr, r2
   152dc:	ldr	r3, [r0, #20]
   152e0:	mov	r2, #32
   152e4:	strb	r2, [r3]
   152e8:	ldr	r2, [r0, #20]
   152ec:	cmp	r1, #0
   152f0:	addgt	r2, r2, #1
   152f4:	str	r2, [r0, #20]
   152f8:	mov	r1, lr
   152fc:	mov	r2, ip
   15300:	pop	{fp, lr}
   15304:	b	144b0 <flatcc_json_printer_write@@Base+0x4>

00015308 <flatcc_json_printer_string_field@@Base>:
   15308:	push	{r4, r5, r6, r7, fp, lr}
   1530c:	add	fp, sp, #16
   15310:	mov	r5, r3
   15314:	mov	r7, r1
   15318:	mov	r4, r0
   1531c:	mov	r0, r1
   15320:	mov	r1, r2
   15324:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   15328:	cmp	r0, #0
   1532c:	beq	15384 <flatcc_json_printer_string_field@@Base+0x7c>
   15330:	mov	r6, r0
   15334:	ldr	r2, [fp, #8]
   15338:	ldr	r0, [r7, #16]
   1533c:	add	r1, r0, #1
   15340:	str	r1, [r7, #16]
   15344:	cmp	r0, #0
   15348:	beq	15360 <flatcc_json_printer_string_field@@Base+0x58>
   1534c:	ldr	r0, [r4, #20]
   15350:	add	r1, r0, #1
   15354:	str	r1, [r4, #20]
   15358:	mov	r1, #44	; 0x2c
   1535c:	strb	r1, [r0]
   15360:	mov	r0, r4
   15364:	mov	r1, r5
   15368:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   1536c:	mov	r0, r6
   15370:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   15374:	mov	r1, r0
   15378:	mov	r0, r4
   1537c:	pop	{r4, r5, r6, r7, fp, lr}
   15380:	b	15458 <flatcc_json_printer_string_field@@Base+0x150>
   15384:	pop	{r4, r5, r6, r7, fp, pc}
   15388:	push	{r4, r5, fp, lr}
   1538c:	add	fp, sp, #8
   15390:	mov	r5, r0
   15394:	mov	r0, #4
   15398:	add	r1, r0, r1, lsl #1
   1539c:	ldr	r0, [r5, #8]
   153a0:	mov	r4, #0
   153a4:	cmp	r1, r0
   153a8:	bge	153c0 <flatcc_json_printer_string_field@@Base+0xb8>
   153ac:	ldr	r0, [r5, #4]
   153b0:	bl	1bb0c <flatcc_json_printer_clear@@Base+0xc90>
   153b4:	cmp	r0, #0
   153b8:	ldrne	r1, [r5]
   153bc:	addne	r4, r1, r0
   153c0:	mov	r0, r4
   153c4:	pop	{r4, r5, fp, pc}
   153c8:	push	{r4, r5, r6, sl, fp, lr}
   153cc:	add	fp, sp, #16
   153d0:	mov	r5, r2
   153d4:	mov	r6, r1
   153d8:	mov	r4, r0
   153dc:	ldrb	r0, [r0, #25]
   153e0:	cmp	r0, #0
   153e4:	beq	15408 <flatcc_json_printer_string_field@@Base+0x100>
   153e8:	ldr	r0, [r4, #20]
   153ec:	add	r1, r0, #1
   153f0:	str	r1, [r4, #20]
   153f4:	mov	r1, #10
   153f8:	strb	r1, [r0]
   153fc:	mov	r0, r4
   15400:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   15404:	b	15410 <flatcc_json_printer_string_field@@Base+0x108>
   15408:	mov	r0, r4
   1540c:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   15410:	mov	r0, r4
   15414:	mov	r1, r6
   15418:	mov	r2, r5
   1541c:	bl	15210 <flatcc_json_printer_enum@@Base+0x4>
   15420:	ldr	r0, [r4, #20]
   15424:	add	r1, r0, #1
   15428:	str	r1, [r4, #20]
   1542c:	mov	r1, #58	; 0x3a
   15430:	strb	r1, [r0]
   15434:	ldr	r0, [r4, #20]
   15438:	mov	r1, #32
   1543c:	strb	r1, [r0]
   15440:	ldrb	r0, [r4, #25]
   15444:	ldr	r1, [r4, #20]
   15448:	cmp	r0, #0
   1544c:	addne	r1, r1, #1
   15450:	str	r1, [r4, #20]
   15454:	pop	{r4, r5, r6, sl, fp, pc}
   15458:	push	{r4, r5, fp, lr}
   1545c:	add	fp, sp, #8
   15460:	mov	r4, r1
   15464:	mov	r5, r0
   15468:	mov	r0, r1
   1546c:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   15470:	mov	r2, r0
   15474:	add	r1, r4, #4
   15478:	mov	r0, r5
   1547c:	pop	{r4, r5, fp, lr}
   15480:	b	14280 <flatcc_json_printer_string@@Base+0x4>
   15484:	push	{r4, sl, fp, lr}
   15488:	add	fp, sp, #8
   1548c:	mov	r4, r0
   15490:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   15494:	add	r0, r4, r0
   15498:	pop	{r4, sl, fp, pc}

0001549c <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   1549c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   154a0:	add	fp, sp, #24
   154a4:	mov	r8, r3
   154a8:	mov	r6, r1
   154ac:	mov	r4, r0
   154b0:	mov	r0, r1
   154b4:	mov	r1, r2
   154b8:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   154bc:	mov	r7, r0
   154c0:	ldr	r0, [fp, #12]
   154c4:	mov	r5, #128	; 0x80
   154c8:	cmp	r0, #0
   154cc:	movwne	r5, #129	; 0x81
   154d0:	cmp	r7, #0
   154d4:	beq	1552c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x90>
   154d8:	ldr	r2, [fp, #8]
   154dc:	ldr	r0, [r6, #16]
   154e0:	add	r1, r0, #1
   154e4:	str	r1, [r6, #16]
   154e8:	cmp	r0, #0
   154ec:	beq	15504 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x68>
   154f0:	ldr	r0, [r4, #20]
   154f4:	add	r1, r0, #1
   154f8:	str	r1, [r4, #20]
   154fc:	mov	r1, #44	; 0x2c
   15500:	strb	r1, [r0]
   15504:	mov	r0, r4
   15508:	mov	r1, r8
   1550c:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   15510:	mov	r0, r7
   15514:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   15518:	mov	r1, r0
   1551c:	mov	r0, r4
   15520:	mov	r2, r5
   15524:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15528:	b	15530 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x94>
   1552c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15530:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15534:	add	fp, sp, #28
   15538:	sub	sp, sp, #12
   1553c:	mov	r8, r2
   15540:	mov	r5, r1
   15544:	mov	r4, r0
   15548:	mov	r0, r1
   1554c:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   15550:	str	r0, [sp, #8]
   15554:	ldr	r0, [r4, #20]
   15558:	add	r1, r0, #1
   1555c:	str	r1, [r4, #20]
   15560:	mov	r1, #34	; 0x22
   15564:	strb	r1, [r0]
   15568:	ldr	r0, [sp, #8]
   1556c:	mov	r1, r8
   15570:	bl	1bb20 <flatcc_json_printer_clear@@Base+0xca4>
   15574:	mov	r7, r0
   15578:	ldr	r0, [r4, #16]
   1557c:	ldr	r1, [r4, #20]
   15580:	add	r1, r1, r7
   15584:	cmp	r1, r0
   15588:	bcc	1559c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x100>
   1558c:	ldr	r2, [r4, #44]	; 0x2c
   15590:	mov	r0, r4
   15594:	mov	r1, #0
   15598:	blx	r2
   1559c:	add	r6, r5, #4
   155a0:	ldr	r1, [r4, #16]
   155a4:	ldr	r0, [r4, #20]
   155a8:	add	r2, r0, r7
   155ac:	cmp	r2, r1
   155b0:	bls	15638 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x19c>
   155b4:	bic	sl, r8, #128	; 0x80
   155b8:	add	r9, sp, #4
   155bc:	sub	r1, r1, r0
   155c0:	bic	r7, r1, #3
   155c4:	add	r1, r7, r7, lsl #1
   155c8:	cmp	r1, #0
   155cc:	beq	15668 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1cc>
   155d0:	lsr	r5, r1, #2
   155d4:	str	r5, [sp, #4]
   155d8:	mov	r1, r6
   155dc:	mov	r2, r9
   155e0:	mov	r3, sl
   155e4:	bl	1bb78 <flatcc_json_printer_clear@@Base+0xcfc>
   155e8:	ldr	r0, [r4, #20]
   155ec:	add	r0, r0, r7
   155f0:	str	r0, [r4, #20]
   155f4:	ldr	r0, [sp, #8]
   155f8:	sub	r0, r0, r5
   155fc:	str	r0, [sp, #8]
   15600:	ldr	r2, [r4, #44]	; 0x2c
   15604:	mov	r0, r4
   15608:	mov	r1, #0
   1560c:	blx	r2
   15610:	add	r6, r6, r5
   15614:	ldr	r0, [sp, #8]
   15618:	mov	r1, r8
   1561c:	bl	1bb20 <flatcc_json_printer_clear@@Base+0xca4>
   15620:	mov	r7, r0
   15624:	ldr	r1, [r4, #16]
   15628:	ldr	r0, [r4, #20]
   1562c:	add	r2, r0, r7
   15630:	cmp	r2, r1
   15634:	bhi	155bc <flatcc_json_printer_uint8_vector_base64_field@@Base+0x120>
   15638:	add	r2, sp, #8
   1563c:	mov	r1, r6
   15640:	mov	r3, r8
   15644:	bl	1bb78 <flatcc_json_printer_clear@@Base+0xcfc>
   15648:	ldr	r0, [r4, #20]
   1564c:	add	r1, r0, r7
   15650:	add	r1, r1, #1
   15654:	str	r1, [r4, #20]
   15658:	mov	r1, #34	; 0x22
   1565c:	strb	r1, [r0, r7]
   15660:	sub	sp, fp, #28
   15664:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15668:	movw	r0, #51800	; 0xca58
   1566c:	movt	r0, #1
   15670:	movw	r1, #50722	; 0xc622
   15674:	movt	r1, #1
   15678:	movw	r3, #51806	; 0xca5e
   1567c:	movt	r3, #1
   15680:	movw	r2, #277	; 0x115
   15684:	bl	12998 <__assert_fail@plt>

00015688 <flatcc_json_printer_uint8_field@@Base>:
   15688:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1568c:	add	fp, sp, #24
   15690:	mov	r8, r3
   15694:	mov	r6, r1
   15698:	mov	r4, r0
   1569c:	mov	r0, r1
   156a0:	mov	r1, r2
   156a4:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   156a8:	ldr	r5, [fp, #12]
   156ac:	cmp	r0, #0
   156b0:	beq	156d4 <flatcc_json_printer_uint8_field@@Base+0x4c>
   156b4:	bl	15738 <flatcc_json_printer_uint8_field@@Base+0xb0>
   156b8:	mov	r7, r0
   156bc:	cmp	r0, r5
   156c0:	bne	156e4 <flatcc_json_printer_uint8_field@@Base+0x5c>
   156c4:	ldrb	r0, [r4, #28]
   156c8:	cmp	r0, #0
   156cc:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   156d0:	b	156e4 <flatcc_json_printer_uint8_field@@Base+0x5c>
   156d4:	ldrb	r0, [r4, #29]
   156d8:	cmp	r0, #0
   156dc:	mov	r7, r5
   156e0:	beq	15734 <flatcc_json_printer_uint8_field@@Base+0xac>
   156e4:	ldr	r2, [fp, #8]
   156e8:	ldr	r0, [r6, #16]
   156ec:	add	r1, r0, #1
   156f0:	str	r1, [r6, #16]
   156f4:	cmp	r0, #0
   156f8:	beq	15710 <flatcc_json_printer_uint8_field@@Base+0x88>
   156fc:	ldr	r0, [r4, #20]
   15700:	add	r1, r0, #1
   15704:	str	r1, [r4, #20]
   15708:	mov	r1, #44	; 0x2c
   1570c:	strb	r1, [r0]
   15710:	mov	r0, r4
   15714:	mov	r1, r8
   15718:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   1571c:	ldr	r1, [r4, #20]
   15720:	mov	r0, r7
   15724:	bl	145e4 <flatcc_json_printer_uint8@@Base+0x2c>
   15728:	ldr	r1, [r4, #20]
   1572c:	add	r0, r1, r0
   15730:	str	r0, [r4, #20]
   15734:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15738:	ldrb	r0, [r0]
   1573c:	b	1bcc0 <flatcc_json_printer_clear@@Base+0xe44>

00015740 <flatcc_json_printer_uint16_field@@Base>:
   15740:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15744:	add	fp, sp, #24
   15748:	mov	r8, r3
   1574c:	mov	r6, r1
   15750:	mov	r4, r0
   15754:	mov	r0, r1
   15758:	mov	r1, r2
   1575c:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   15760:	ldr	r5, [fp, #12]
   15764:	cmp	r0, #0
   15768:	beq	1578c <flatcc_json_printer_uint16_field@@Base+0x4c>
   1576c:	bl	157f0 <flatcc_json_printer_uint16_field@@Base+0xb0>
   15770:	mov	r7, r0
   15774:	cmp	r0, r5
   15778:	bne	1579c <flatcc_json_printer_uint16_field@@Base+0x5c>
   1577c:	ldrb	r0, [r4, #28]
   15780:	cmp	r0, #0
   15784:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   15788:	b	1579c <flatcc_json_printer_uint16_field@@Base+0x5c>
   1578c:	ldrb	r0, [r4, #29]
   15790:	cmp	r0, #0
   15794:	mov	r7, r5
   15798:	beq	157ec <flatcc_json_printer_uint16_field@@Base+0xac>
   1579c:	ldr	r2, [fp, #8]
   157a0:	ldr	r0, [r6, #16]
   157a4:	add	r1, r0, #1
   157a8:	str	r1, [r6, #16]
   157ac:	cmp	r0, #0
   157b0:	beq	157c8 <flatcc_json_printer_uint16_field@@Base+0x88>
   157b4:	ldr	r0, [r4, #20]
   157b8:	add	r1, r0, #1
   157bc:	str	r1, [r4, #20]
   157c0:	mov	r1, #44	; 0x2c
   157c4:	strb	r1, [r0]
   157c8:	mov	r0, r4
   157cc:	mov	r1, r8
   157d0:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   157d4:	ldr	r1, [r4, #20]
   157d8:	mov	r0, r7
   157dc:	bl	146b4 <flatcc_json_printer_uint16@@Base+0x2c>
   157e0:	ldr	r1, [r4, #20]
   157e4:	add	r0, r1, r0
   157e8:	str	r0, [r4, #20]
   157ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   157f0:	ldrh	r0, [r0]
   157f4:	b	1bcc4 <flatcc_json_printer_clear@@Base+0xe48>

000157f8 <flatcc_json_printer_uint32_field@@Base>:
   157f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   157fc:	add	fp, sp, #24
   15800:	mov	r8, r3
   15804:	mov	r6, r1
   15808:	mov	r4, r0
   1580c:	mov	r0, r1
   15810:	mov	r1, r2
   15814:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   15818:	ldr	r5, [fp, #12]
   1581c:	cmp	r0, #0
   15820:	beq	15844 <flatcc_json_printer_uint32_field@@Base+0x4c>
   15824:	bl	158a8 <flatcc_json_printer_uint32_field@@Base+0xb0>
   15828:	mov	r7, r0
   1582c:	cmp	r0, r5
   15830:	bne	15854 <flatcc_json_printer_uint32_field@@Base+0x5c>
   15834:	ldrb	r0, [r4, #28]
   15838:	cmp	r0, #0
   1583c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   15840:	b	15854 <flatcc_json_printer_uint32_field@@Base+0x5c>
   15844:	ldrb	r0, [r4, #29]
   15848:	cmp	r0, #0
   1584c:	mov	r7, r5
   15850:	beq	158a4 <flatcc_json_printer_uint32_field@@Base+0xac>
   15854:	ldr	r2, [fp, #8]
   15858:	ldr	r0, [r6, #16]
   1585c:	add	r1, r0, #1
   15860:	str	r1, [r6, #16]
   15864:	cmp	r0, #0
   15868:	beq	15880 <flatcc_json_printer_uint32_field@@Base+0x88>
   1586c:	ldr	r0, [r4, #20]
   15870:	add	r1, r0, #1
   15874:	str	r1, [r4, #20]
   15878:	mov	r1, #44	; 0x2c
   1587c:	strb	r1, [r0]
   15880:	mov	r0, r4
   15884:	mov	r1, r8
   15888:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   1588c:	ldr	r1, [r4, #20]
   15890:	mov	r0, r7
   15894:	bl	14850 <flatcc_json_printer_uint32@@Base+0x2c>
   15898:	ldr	r1, [r4, #20]
   1589c:	add	r0, r1, r0
   158a0:	str	r0, [r4, #20]
   158a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   158a8:	ldr	r0, [r0]
   158ac:	b	1bcc8 <flatcc_json_printer_clear@@Base+0xe4c>

000158b0 <flatcc_json_printer_uint64_field@@Base>:
   158b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158b4:	add	fp, sp, #28
   158b8:	sub	sp, sp, #4
   158bc:	mov	r8, r3
   158c0:	mov	r6, r1
   158c4:	mov	r4, r0
   158c8:	mov	r0, r1
   158cc:	mov	r1, r2
   158d0:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   158d4:	ldr	r9, [fp, #20]
   158d8:	ldr	sl, [fp, #16]
   158dc:	cmp	r0, #0
   158e0:	beq	15914 <flatcc_json_printer_uint64_field@@Base+0x64>
   158e4:	bl	15984 <flatcc_json_printer_uint64_field@@Base+0xd4>
   158e8:	mov	r7, r0
   158ec:	mov	r5, r1
   158f0:	eor	r0, r1, r9
   158f4:	eor	r1, r7, sl
   158f8:	orrs	r0, r1, r0
   158fc:	bne	15928 <flatcc_json_printer_uint64_field@@Base+0x78>
   15900:	ldrb	r0, [r4, #28]
   15904:	cmp	r0, #0
   15908:	beq	15928 <flatcc_json_printer_uint64_field@@Base+0x78>
   1590c:	sub	sp, fp, #28
   15910:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15914:	ldrb	r0, [r4, #29]
   15918:	cmp	r0, #0
   1591c:	mov	r7, sl
   15920:	mov	r5, r9
   15924:	beq	1590c <flatcc_json_printer_uint64_field@@Base+0x5c>
   15928:	ldr	r2, [fp, #8]
   1592c:	ldr	r0, [r6, #16]
   15930:	add	r1, r0, #1
   15934:	str	r1, [r6, #16]
   15938:	cmp	r0, #0
   1593c:	beq	15954 <flatcc_json_printer_uint64_field@@Base+0xa4>
   15940:	ldr	r0, [r4, #20]
   15944:	add	r1, r0, #1
   15948:	str	r1, [r4, #20]
   1594c:	mov	r1, #44	; 0x2c
   15950:	strb	r1, [r0]
   15954:	mov	r0, r4
   15958:	mov	r1, r8
   1595c:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   15960:	ldr	r2, [r4, #20]
   15964:	mov	r0, r7
   15968:	mov	r1, r5
   1596c:	bl	14b78 <flatcc_json_printer_uint64@@Base+0x30>
   15970:	ldr	r1, [r4, #20]
   15974:	add	r0, r1, r0
   15978:	str	r0, [r4, #20]
   1597c:	sub	sp, fp, #28
   15980:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15984:	ldrd	r0, [r0]
   15988:	b	1bccc <flatcc_json_printer_clear@@Base+0xe50>

0001598c <flatcc_json_printer_int8_field@@Base>:
   1598c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15990:	add	fp, sp, #24
   15994:	mov	r8, r3
   15998:	mov	r6, r1
   1599c:	mov	r4, r0
   159a0:	mov	r0, r1
   159a4:	mov	r1, r2
   159a8:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   159ac:	ldr	r5, [fp, #12]
   159b0:	cmp	r0, #0
   159b4:	beq	159d8 <flatcc_json_printer_int8_field@@Base+0x4c>
   159b8:	bl	15a3c <flatcc_json_printer_int8_field@@Base+0xb0>
   159bc:	mov	r7, r0
   159c0:	cmp	r0, r5
   159c4:	bne	159e8 <flatcc_json_printer_int8_field@@Base+0x5c>
   159c8:	ldrb	r0, [r4, #28]
   159cc:	cmp	r0, #0
   159d0:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   159d4:	b	159e8 <flatcc_json_printer_int8_field@@Base+0x5c>
   159d8:	ldrb	r0, [r4, #29]
   159dc:	cmp	r0, #0
   159e0:	mov	r7, r5
   159e4:	beq	15a38 <flatcc_json_printer_int8_field@@Base+0xac>
   159e8:	ldr	r2, [fp, #8]
   159ec:	ldr	r0, [r6, #16]
   159f0:	add	r1, r0, #1
   159f4:	str	r1, [r6, #16]
   159f8:	cmp	r0, #0
   159fc:	beq	15a14 <flatcc_json_printer_int8_field@@Base+0x88>
   15a00:	ldr	r0, [r4, #20]
   15a04:	add	r1, r0, #1
   15a08:	str	r1, [r4, #20]
   15a0c:	mov	r1, #44	; 0x2c
   15a10:	strb	r1, [r0]
   15a14:	mov	r0, r4
   15a18:	mov	r1, r8
   15a1c:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   15a20:	ldr	r1, [r4, #20]
   15a24:	mov	r0, r7
   15a28:	bl	15080 <flatcc_json_printer_int8@@Base+0x2c>
   15a2c:	ldr	r1, [r4, #20]
   15a30:	add	r0, r1, r0
   15a34:	str	r0, [r4, #20]
   15a38:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15a3c:	ldrsb	r0, [r0]
   15a40:	b	1bcd0 <flatcc_json_printer_clear@@Base+0xe54>

00015a44 <flatcc_json_printer_int16_field@@Base>:
   15a44:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15a48:	add	fp, sp, #24
   15a4c:	mov	r8, r3
   15a50:	mov	r6, r1
   15a54:	mov	r4, r0
   15a58:	mov	r0, r1
   15a5c:	mov	r1, r2
   15a60:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   15a64:	ldr	r5, [fp, #12]
   15a68:	cmp	r0, #0
   15a6c:	beq	15a90 <flatcc_json_printer_int16_field@@Base+0x4c>
   15a70:	bl	15af4 <flatcc_json_printer_int16_field@@Base+0xb0>
   15a74:	mov	r7, r0
   15a78:	cmp	r0, r5
   15a7c:	bne	15aa0 <flatcc_json_printer_int16_field@@Base+0x5c>
   15a80:	ldrb	r0, [r4, #28]
   15a84:	cmp	r0, #0
   15a88:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   15a8c:	b	15aa0 <flatcc_json_printer_int16_field@@Base+0x5c>
   15a90:	ldrb	r0, [r4, #29]
   15a94:	cmp	r0, #0
   15a98:	mov	r7, r5
   15a9c:	beq	15af0 <flatcc_json_printer_int16_field@@Base+0xac>
   15aa0:	ldr	r2, [fp, #8]
   15aa4:	ldr	r0, [r6, #16]
   15aa8:	add	r1, r0, #1
   15aac:	str	r1, [r6, #16]
   15ab0:	cmp	r0, #0
   15ab4:	beq	15acc <flatcc_json_printer_int16_field@@Base+0x88>
   15ab8:	ldr	r0, [r4, #20]
   15abc:	add	r1, r0, #1
   15ac0:	str	r1, [r4, #20]
   15ac4:	mov	r1, #44	; 0x2c
   15ac8:	strb	r1, [r0]
   15acc:	mov	r0, r4
   15ad0:	mov	r1, r8
   15ad4:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   15ad8:	ldr	r1, [r4, #20]
   15adc:	mov	r0, r7
   15ae0:	bl	150dc <flatcc_json_printer_int16@@Base+0x2c>
   15ae4:	ldr	r1, [r4, #20]
   15ae8:	add	r0, r1, r0
   15aec:	str	r0, [r4, #20]
   15af0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15af4:	ldrsh	r0, [r0]
   15af8:	b	1bcd4 <flatcc_json_printer_clear@@Base+0xe58>

00015afc <flatcc_json_printer_int32_field@@Base>:
   15afc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15b00:	add	fp, sp, #24
   15b04:	mov	r8, r3
   15b08:	mov	r6, r1
   15b0c:	mov	r4, r0
   15b10:	mov	r0, r1
   15b14:	mov	r1, r2
   15b18:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   15b1c:	ldr	r5, [fp, #12]
   15b20:	cmp	r0, #0
   15b24:	beq	15b48 <flatcc_json_printer_int32_field@@Base+0x4c>
   15b28:	bl	15bac <flatcc_json_printer_int32_field@@Base+0xb0>
   15b2c:	mov	r7, r0
   15b30:	cmp	r0, r5
   15b34:	bne	15b58 <flatcc_json_printer_int32_field@@Base+0x5c>
   15b38:	ldrb	r0, [r4, #28]
   15b3c:	cmp	r0, #0
   15b40:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   15b44:	b	15b58 <flatcc_json_printer_int32_field@@Base+0x5c>
   15b48:	ldrb	r0, [r4, #29]
   15b4c:	cmp	r0, #0
   15b50:	mov	r7, r5
   15b54:	beq	15ba8 <flatcc_json_printer_int32_field@@Base+0xac>
   15b58:	ldr	r2, [fp, #8]
   15b5c:	ldr	r0, [r6, #16]
   15b60:	add	r1, r0, #1
   15b64:	str	r1, [r6, #16]
   15b68:	cmp	r0, #0
   15b6c:	beq	15b84 <flatcc_json_printer_int32_field@@Base+0x88>
   15b70:	ldr	r0, [r4, #20]
   15b74:	add	r1, r0, #1
   15b78:	str	r1, [r4, #20]
   15b7c:	mov	r1, #44	; 0x2c
   15b80:	strb	r1, [r0]
   15b84:	mov	r0, r4
   15b88:	mov	r1, r8
   15b8c:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   15b90:	ldr	r1, [r4, #20]
   15b94:	mov	r0, r7
   15b98:	bl	15138 <flatcc_json_printer_int32@@Base+0x2c>
   15b9c:	ldr	r1, [r4, #20]
   15ba0:	add	r0, r1, r0
   15ba4:	str	r0, [r4, #20]
   15ba8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15bac:	ldr	r0, [r0]
   15bb0:	b	1bcd8 <flatcc_json_printer_clear@@Base+0xe5c>

00015bb4 <flatcc_json_printer_int64_field@@Base>:
   15bb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15bb8:	add	fp, sp, #28
   15bbc:	sub	sp, sp, #4
   15bc0:	mov	r8, r3
   15bc4:	mov	r6, r1
   15bc8:	mov	r4, r0
   15bcc:	mov	r0, r1
   15bd0:	mov	r1, r2
   15bd4:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   15bd8:	ldr	r9, [fp, #20]
   15bdc:	ldr	sl, [fp, #16]
   15be0:	cmp	r0, #0
   15be4:	beq	15c18 <flatcc_json_printer_int64_field@@Base+0x64>
   15be8:	bl	15c88 <flatcc_json_printer_int64_field@@Base+0xd4>
   15bec:	mov	r7, r0
   15bf0:	mov	r5, r1
   15bf4:	eor	r0, r1, r9
   15bf8:	eor	r1, r7, sl
   15bfc:	orrs	r0, r1, r0
   15c00:	bne	15c2c <flatcc_json_printer_int64_field@@Base+0x78>
   15c04:	ldrb	r0, [r4, #28]
   15c08:	cmp	r0, #0
   15c0c:	beq	15c2c <flatcc_json_printer_int64_field@@Base+0x78>
   15c10:	sub	sp, fp, #28
   15c14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c18:	ldrb	r0, [r4, #29]
   15c1c:	cmp	r0, #0
   15c20:	mov	r7, sl
   15c24:	mov	r5, r9
   15c28:	beq	15c10 <flatcc_json_printer_int64_field@@Base+0x5c>
   15c2c:	ldr	r2, [fp, #8]
   15c30:	ldr	r0, [r6, #16]
   15c34:	add	r1, r0, #1
   15c38:	str	r1, [r6, #16]
   15c3c:	cmp	r0, #0
   15c40:	beq	15c58 <flatcc_json_printer_int64_field@@Base+0xa4>
   15c44:	ldr	r0, [r4, #20]
   15c48:	add	r1, r0, #1
   15c4c:	str	r1, [r4, #20]
   15c50:	mov	r1, #44	; 0x2c
   15c54:	strb	r1, [r0]
   15c58:	mov	r0, r4
   15c5c:	mov	r1, r8
   15c60:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   15c64:	ldr	r2, [r4, #20]
   15c68:	mov	r0, r7
   15c6c:	mov	r1, r5
   15c70:	bl	15190 <flatcc_json_printer_int64@@Base+0x30>
   15c74:	ldr	r1, [r4, #20]
   15c78:	add	r0, r1, r0
   15c7c:	str	r0, [r4, #20]
   15c80:	sub	sp, fp, #28
   15c84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c88:	ldrd	r0, [r0]
   15c8c:	b	1bcdc <flatcc_json_printer_clear@@Base+0xe60>

00015c90 <flatcc_json_printer_bool_field@@Base>:
   15c90:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15c94:	add	fp, sp, #24
   15c98:	mov	r8, r3
   15c9c:	mov	r6, r1
   15ca0:	mov	r4, r0
   15ca4:	mov	r0, r1
   15ca8:	mov	r1, r2
   15cac:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   15cb0:	ldr	r5, [fp, #12]
   15cb4:	cmp	r0, #0
   15cb8:	beq	15cdc <flatcc_json_printer_bool_field@@Base+0x4c>
   15cbc:	bl	15d40 <flatcc_json_printer_bool_field@@Base+0xb0>
   15cc0:	mov	r7, r0
   15cc4:	cmp	r0, r5
   15cc8:	bne	15cec <flatcc_json_printer_bool_field@@Base+0x5c>
   15ccc:	ldrb	r0, [r4, #28]
   15cd0:	cmp	r0, #0
   15cd4:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   15cd8:	b	15cec <flatcc_json_printer_bool_field@@Base+0x5c>
   15cdc:	ldrb	r0, [r4, #29]
   15ce0:	cmp	r0, #0
   15ce4:	mov	r7, r5
   15ce8:	beq	15d3c <flatcc_json_printer_bool_field@@Base+0xac>
   15cec:	ldr	r2, [fp, #8]
   15cf0:	ldr	r0, [r6, #16]
   15cf4:	add	r1, r0, #1
   15cf8:	str	r1, [r6, #16]
   15cfc:	cmp	r0, #0
   15d00:	beq	15d18 <flatcc_json_printer_bool_field@@Base+0x88>
   15d04:	ldr	r0, [r4, #20]
   15d08:	add	r1, r0, #1
   15d0c:	str	r1, [r4, #20]
   15d10:	mov	r1, #44	; 0x2c
   15d14:	strb	r1, [r0]
   15d18:	mov	r0, r4
   15d1c:	mov	r1, r8
   15d20:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   15d24:	ldr	r1, [r4, #20]
   15d28:	mov	r0, r7
   15d2c:	bl	15d48 <flatcc_json_printer_bool_field@@Base+0xb8>
   15d30:	ldr	r1, [r4, #20]
   15d34:	add	r0, r1, r0
   15d38:	str	r0, [r4, #20]
   15d3c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15d40:	ldrb	r0, [r0]
   15d44:	b	1bce0 <flatcc_json_printer_clear@@Base+0xe64>
   15d48:	cmp	r0, #0
   15d4c:	beq	15d6c <flatcc_json_printer_bool_field@@Base+0xdc>
   15d50:	mov	r0, #0
   15d54:	strb	r0, [r1, #4]
   15d58:	movw	r0, #29300	; 0x7274
   15d5c:	movt	r0, #25973	; 0x6575
   15d60:	str	r0, [r1]
   15d64:	mov	r0, #4
   15d68:	bx	lr
   15d6c:	mov	r0, #101	; 0x65
   15d70:	strh	r0, [r1, #4]
   15d74:	movw	r0, #24934	; 0x6166
   15d78:	movt	r0, #29548	; 0x736c
   15d7c:	str	r0, [r1]
   15d80:	mov	r0, #5
   15d84:	bx	lr

00015d88 <flatcc_json_printer_float_field@@Base>:
   15d88:	push	{r4, r5, r6, sl, fp, lr}
   15d8c:	add	fp, sp, #16
   15d90:	vpush	{d8-d9}
   15d94:	vmov.f32	s18, s0
   15d98:	mov	r5, r3
   15d9c:	mov	r6, r1
   15da0:	mov	r4, r0
   15da4:	mov	r0, r1
   15da8:	mov	r1, r2
   15dac:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   15db0:	cmp	r0, #0
   15db4:	beq	15de0 <flatcc_json_printer_float_field@@Base+0x58>
   15db8:	bl	15e48 <flatcc_json_printer_float_field@@Base+0xc0>
   15dbc:	vmov.f32	s16, s0
   15dc0:	vcmp.f32	s0, s18
   15dc4:	vmrs	APSR_nzcv, fpscr
   15dc8:	bne	15df0 <flatcc_json_printer_float_field@@Base+0x68>
   15dcc:	ldrb	r0, [r4, #28]
   15dd0:	cmp	r0, #0
   15dd4:	beq	15df0 <flatcc_json_printer_float_field@@Base+0x68>
   15dd8:	vpop	{d8-d9}
   15ddc:	pop	{r4, r5, r6, sl, fp, pc}
   15de0:	ldrb	r0, [r4, #29]
   15de4:	cmp	r0, #0
   15de8:	vmov.f32	s16, s18
   15dec:	beq	15dd8 <flatcc_json_printer_float_field@@Base+0x50>
   15df0:	ldr	r2, [fp, #8]
   15df4:	ldr	r0, [r6, #16]
   15df8:	add	r1, r0, #1
   15dfc:	str	r1, [r6, #16]
   15e00:	cmp	r0, #0
   15e04:	beq	15e1c <flatcc_json_printer_float_field@@Base+0x94>
   15e08:	ldr	r0, [r4, #20]
   15e0c:	add	r1, r0, #1
   15e10:	str	r1, [r4, #20]
   15e14:	mov	r1, #44	; 0x2c
   15e18:	strb	r1, [r0]
   15e1c:	mov	r0, r4
   15e20:	mov	r1, r5
   15e24:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   15e28:	ldr	r0, [r4, #20]
   15e2c:	vcvt.f64.f32	d0, s16
   15e30:	bl	13f80 <flatcc_json_printer_fmt_float@@Base+0x8>
   15e34:	ldr	r1, [r4, #20]
   15e38:	add	r0, r1, r0
   15e3c:	str	r0, [r4, #20]
   15e40:	vpop	{d8-d9}
   15e44:	pop	{r4, r5, r6, sl, fp, pc}
   15e48:	vldr	s0, [r0]
   15e4c:	b	1bce4 <flatcc_json_printer_clear@@Base+0xe68>

00015e50 <flatcc_json_printer_double_field@@Base>:
   15e50:	push	{r4, r5, r6, sl, fp, lr}
   15e54:	add	fp, sp, #16
   15e58:	vpush	{d8-d9}
   15e5c:	vmov.f64	d9, d0
   15e60:	mov	r5, r3
   15e64:	mov	r6, r1
   15e68:	mov	r4, r0
   15e6c:	mov	r0, r1
   15e70:	mov	r1, r2
   15e74:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   15e78:	cmp	r0, #0
   15e7c:	beq	15ea8 <flatcc_json_printer_double_field@@Base+0x58>
   15e80:	bl	15f10 <flatcc_json_printer_double_field@@Base+0xc0>
   15e84:	vmov.f64	d8, d0
   15e88:	vcmp.f64	d0, d9
   15e8c:	vmrs	APSR_nzcv, fpscr
   15e90:	bne	15eb8 <flatcc_json_printer_double_field@@Base+0x68>
   15e94:	ldrb	r0, [r4, #28]
   15e98:	cmp	r0, #0
   15e9c:	beq	15eb8 <flatcc_json_printer_double_field@@Base+0x68>
   15ea0:	vpop	{d8-d9}
   15ea4:	pop	{r4, r5, r6, sl, fp, pc}
   15ea8:	ldrb	r0, [r4, #29]
   15eac:	cmp	r0, #0
   15eb0:	vmov.f64	d8, d9
   15eb4:	beq	15ea0 <flatcc_json_printer_double_field@@Base+0x50>
   15eb8:	ldr	r2, [fp, #8]
   15ebc:	ldr	r0, [r6, #16]
   15ec0:	add	r1, r0, #1
   15ec4:	str	r1, [r6, #16]
   15ec8:	cmp	r0, #0
   15ecc:	beq	15ee4 <flatcc_json_printer_double_field@@Base+0x94>
   15ed0:	ldr	r0, [r4, #20]
   15ed4:	add	r1, r0, #1
   15ed8:	str	r1, [r4, #20]
   15edc:	mov	r1, #44	; 0x2c
   15ee0:	strb	r1, [r0]
   15ee4:	mov	r0, r4
   15ee8:	mov	r1, r5
   15eec:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   15ef0:	ldr	r0, [r4, #20]
   15ef4:	vmov.f64	d0, d8
   15ef8:	bl	13f80 <flatcc_json_printer_fmt_float@@Base+0x8>
   15efc:	ldr	r1, [r4, #20]
   15f00:	add	r0, r1, r0
   15f04:	str	r0, [r4, #20]
   15f08:	vpop	{d8-d9}
   15f0c:	pop	{r4, r5, r6, sl, fp, pc}
   15f10:	vldr	d0, [r0]
   15f14:	b	1bce8 <flatcc_json_printer_clear@@Base+0xe6c>

00015f18 <flatcc_json_printer_uint8_enum_field@@Base>:
   15f18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f1c:	add	fp, sp, #28
   15f20:	sub	sp, sp, #4
   15f24:	mov	r8, r3
   15f28:	mov	r5, r1
   15f2c:	mov	r4, r0
   15f30:	mov	r0, r1
   15f34:	mov	r1, r2
   15f38:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   15f3c:	ldr	sl, [fp, #16]
   15f40:	ldr	r7, [fp, #12]
   15f44:	ldr	r9, [fp, #8]
   15f48:	cmp	r0, #0
   15f4c:	beq	15f74 <flatcc_json_printer_uint8_enum_field@@Base+0x5c>
   15f50:	bl	15738 <flatcc_json_printer_uint8_field@@Base+0xb0>
   15f54:	mov	r6, r0
   15f58:	cmp	r0, r7
   15f5c:	bne	15f84 <flatcc_json_printer_uint8_enum_field@@Base+0x6c>
   15f60:	ldrb	r0, [r4, #28]
   15f64:	cmp	r0, #0
   15f68:	beq	15f84 <flatcc_json_printer_uint8_enum_field@@Base+0x6c>
   15f6c:	sub	sp, fp, #28
   15f70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f74:	ldrb	r0, [r4, #29]
   15f78:	cmp	r0, #0
   15f7c:	mov	r6, r7
   15f80:	beq	15f6c <flatcc_json_printer_uint8_enum_field@@Base+0x54>
   15f84:	ldr	r0, [r5, #16]
   15f88:	add	r1, r0, #1
   15f8c:	str	r1, [r5, #16]
   15f90:	cmp	r0, #0
   15f94:	beq	15fac <flatcc_json_printer_uint8_enum_field@@Base+0x94>
   15f98:	ldr	r0, [r4, #20]
   15f9c:	add	r1, r0, #1
   15fa0:	str	r1, [r4, #20]
   15fa4:	mov	r1, #44	; 0x2c
   15fa8:	strb	r1, [r0]
   15fac:	mov	r0, r4
   15fb0:	mov	r1, r8
   15fb4:	mov	r2, r9
   15fb8:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   15fbc:	ldrb	r0, [r4, #27]
   15fc0:	cmp	r0, #0
   15fc4:	beq	15fe8 <flatcc_json_printer_uint8_enum_field@@Base+0xd0>
   15fc8:	ldr	r1, [r4, #20]
   15fcc:	mov	r0, r6
   15fd0:	bl	145e4 <flatcc_json_printer_uint8@@Base+0x2c>
   15fd4:	ldr	r1, [r4, #20]
   15fd8:	add	r0, r1, r0
   15fdc:	str	r0, [r4, #20]
   15fe0:	sub	sp, fp, #28
   15fe4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15fe8:	mov	r0, r4
   15fec:	mov	r1, r6
   15ff0:	mov	r2, sl
   15ff4:	sub	sp, fp, #28
   15ff8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ffc:	bx	r2

00016000 <flatcc_json_printer_uint16_enum_field@@Base>:
   16000:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16004:	add	fp, sp, #28
   16008:	sub	sp, sp, #4
   1600c:	mov	r8, r3
   16010:	mov	r5, r1
   16014:	mov	r4, r0
   16018:	mov	r0, r1
   1601c:	mov	r1, r2
   16020:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   16024:	ldr	sl, [fp, #16]
   16028:	ldr	r7, [fp, #12]
   1602c:	ldr	r9, [fp, #8]
   16030:	cmp	r0, #0
   16034:	beq	1605c <flatcc_json_printer_uint16_enum_field@@Base+0x5c>
   16038:	bl	157f0 <flatcc_json_printer_uint16_field@@Base+0xb0>
   1603c:	mov	r6, r0
   16040:	cmp	r0, r7
   16044:	bne	1606c <flatcc_json_printer_uint16_enum_field@@Base+0x6c>
   16048:	ldrb	r0, [r4, #28]
   1604c:	cmp	r0, #0
   16050:	beq	1606c <flatcc_json_printer_uint16_enum_field@@Base+0x6c>
   16054:	sub	sp, fp, #28
   16058:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1605c:	ldrb	r0, [r4, #29]
   16060:	cmp	r0, #0
   16064:	mov	r6, r7
   16068:	beq	16054 <flatcc_json_printer_uint16_enum_field@@Base+0x54>
   1606c:	ldr	r0, [r5, #16]
   16070:	add	r1, r0, #1
   16074:	str	r1, [r5, #16]
   16078:	cmp	r0, #0
   1607c:	beq	16094 <flatcc_json_printer_uint16_enum_field@@Base+0x94>
   16080:	ldr	r0, [r4, #20]
   16084:	add	r1, r0, #1
   16088:	str	r1, [r4, #20]
   1608c:	mov	r1, #44	; 0x2c
   16090:	strb	r1, [r0]
   16094:	mov	r0, r4
   16098:	mov	r1, r8
   1609c:	mov	r2, r9
   160a0:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   160a4:	ldrb	r0, [r4, #27]
   160a8:	cmp	r0, #0
   160ac:	beq	160d0 <flatcc_json_printer_uint16_enum_field@@Base+0xd0>
   160b0:	ldr	r1, [r4, #20]
   160b4:	mov	r0, r6
   160b8:	bl	146b4 <flatcc_json_printer_uint16@@Base+0x2c>
   160bc:	ldr	r1, [r4, #20]
   160c0:	add	r0, r1, r0
   160c4:	str	r0, [r4, #20]
   160c8:	sub	sp, fp, #28
   160cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160d0:	mov	r0, r4
   160d4:	mov	r1, r6
   160d8:	mov	r2, sl
   160dc:	sub	sp, fp, #28
   160e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160e4:	bx	r2

000160e8 <flatcc_json_printer_uint32_enum_field@@Base>:
   160e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160ec:	add	fp, sp, #28
   160f0:	sub	sp, sp, #4
   160f4:	mov	r8, r3
   160f8:	mov	r5, r1
   160fc:	mov	r4, r0
   16100:	mov	r0, r1
   16104:	mov	r1, r2
   16108:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   1610c:	ldr	sl, [fp, #16]
   16110:	ldr	r7, [fp, #12]
   16114:	ldr	r9, [fp, #8]
   16118:	cmp	r0, #0
   1611c:	beq	16144 <flatcc_json_printer_uint32_enum_field@@Base+0x5c>
   16120:	bl	158a8 <flatcc_json_printer_uint32_field@@Base+0xb0>
   16124:	mov	r6, r0
   16128:	cmp	r0, r7
   1612c:	bne	16154 <flatcc_json_printer_uint32_enum_field@@Base+0x6c>
   16130:	ldrb	r0, [r4, #28]
   16134:	cmp	r0, #0
   16138:	beq	16154 <flatcc_json_printer_uint32_enum_field@@Base+0x6c>
   1613c:	sub	sp, fp, #28
   16140:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16144:	ldrb	r0, [r4, #29]
   16148:	cmp	r0, #0
   1614c:	mov	r6, r7
   16150:	beq	1613c <flatcc_json_printer_uint32_enum_field@@Base+0x54>
   16154:	ldr	r0, [r5, #16]
   16158:	add	r1, r0, #1
   1615c:	str	r1, [r5, #16]
   16160:	cmp	r0, #0
   16164:	beq	1617c <flatcc_json_printer_uint32_enum_field@@Base+0x94>
   16168:	ldr	r0, [r4, #20]
   1616c:	add	r1, r0, #1
   16170:	str	r1, [r4, #20]
   16174:	mov	r1, #44	; 0x2c
   16178:	strb	r1, [r0]
   1617c:	mov	r0, r4
   16180:	mov	r1, r8
   16184:	mov	r2, r9
   16188:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   1618c:	ldrb	r0, [r4, #27]
   16190:	cmp	r0, #0
   16194:	beq	161b8 <flatcc_json_printer_uint32_enum_field@@Base+0xd0>
   16198:	ldr	r1, [r4, #20]
   1619c:	mov	r0, r6
   161a0:	bl	14850 <flatcc_json_printer_uint32@@Base+0x2c>
   161a4:	ldr	r1, [r4, #20]
   161a8:	add	r0, r1, r0
   161ac:	str	r0, [r4, #20]
   161b0:	sub	sp, fp, #28
   161b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   161b8:	mov	r0, r4
   161bc:	mov	r1, r6
   161c0:	mov	r2, sl
   161c4:	sub	sp, fp, #28
   161c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   161cc:	bx	r2

000161d0 <flatcc_json_printer_uint64_enum_field@@Base>:
   161d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   161d4:	add	fp, sp, #28
   161d8:	sub	sp, sp, #12
   161dc:	str	r3, [sp, #8]
   161e0:	mov	r6, r1
   161e4:	mov	r4, r0
   161e8:	mov	r0, r1
   161ec:	mov	r1, r2
   161f0:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   161f4:	ldr	r5, [fp, #20]
   161f8:	ldr	r7, [fp, #16]
   161fc:	ldr	r1, [fp, #24]
   16200:	str	r1, [sp, #4]
   16204:	ldr	r9, [fp, #8]
   16208:	cmp	r0, #0
   1620c:	beq	16240 <flatcc_json_printer_uint64_enum_field@@Base+0x70>
   16210:	bl	15984 <flatcc_json_printer_uint64_field@@Base+0xd4>
   16214:	mov	r8, r0
   16218:	mov	sl, r1
   1621c:	eor	r0, r1, r5
   16220:	eor	r1, r8, r7
   16224:	orrs	r0, r1, r0
   16228:	bne	16254 <flatcc_json_printer_uint64_enum_field@@Base+0x84>
   1622c:	ldrb	r0, [r4, #28]
   16230:	cmp	r0, #0
   16234:	beq	16254 <flatcc_json_printer_uint64_enum_field@@Base+0x84>
   16238:	sub	sp, fp, #28
   1623c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16240:	ldrb	r0, [r4, #29]
   16244:	cmp	r0, #0
   16248:	mov	r8, r7
   1624c:	mov	sl, r5
   16250:	beq	16238 <flatcc_json_printer_uint64_enum_field@@Base+0x68>
   16254:	ldr	r0, [r6, #16]
   16258:	add	r1, r0, #1
   1625c:	str	r1, [r6, #16]
   16260:	cmp	r0, #0
   16264:	beq	1627c <flatcc_json_printer_uint64_enum_field@@Base+0xac>
   16268:	ldr	r0, [r4, #20]
   1626c:	add	r1, r0, #1
   16270:	str	r1, [r4, #20]
   16274:	mov	r1, #44	; 0x2c
   16278:	strb	r1, [r0]
   1627c:	mov	r0, r4
   16280:	ldr	r1, [sp, #8]
   16284:	mov	r2, r9
   16288:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   1628c:	ldrb	r0, [r4, #27]
   16290:	cmp	r0, #0
   16294:	beq	162bc <flatcc_json_printer_uint64_enum_field@@Base+0xec>
   16298:	ldr	r2, [r4, #20]
   1629c:	mov	r0, r8
   162a0:	mov	r1, sl
   162a4:	bl	14b78 <flatcc_json_printer_uint64@@Base+0x30>
   162a8:	ldr	r1, [r4, #20]
   162ac:	add	r0, r1, r0
   162b0:	str	r0, [r4, #20]
   162b4:	sub	sp, fp, #28
   162b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   162bc:	mov	r0, r4
   162c0:	mov	r2, r8
   162c4:	mov	r3, sl
   162c8:	ldr	r1, [sp, #4]
   162cc:	sub	sp, fp, #28
   162d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   162d4:	bx	r1

000162d8 <flatcc_json_printer_int8_enum_field@@Base>:
   162d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   162dc:	add	fp, sp, #28
   162e0:	sub	sp, sp, #4
   162e4:	mov	r8, r3
   162e8:	mov	r5, r1
   162ec:	mov	r4, r0
   162f0:	mov	r0, r1
   162f4:	mov	r1, r2
   162f8:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   162fc:	ldr	sl, [fp, #16]
   16300:	ldr	r7, [fp, #12]
   16304:	ldr	r9, [fp, #8]
   16308:	cmp	r0, #0
   1630c:	beq	16334 <flatcc_json_printer_int8_enum_field@@Base+0x5c>
   16310:	bl	15a3c <flatcc_json_printer_int8_field@@Base+0xb0>
   16314:	mov	r6, r0
   16318:	cmp	r0, r7
   1631c:	bne	16344 <flatcc_json_printer_int8_enum_field@@Base+0x6c>
   16320:	ldrb	r0, [r4, #28]
   16324:	cmp	r0, #0
   16328:	beq	16344 <flatcc_json_printer_int8_enum_field@@Base+0x6c>
   1632c:	sub	sp, fp, #28
   16330:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16334:	ldrb	r0, [r4, #29]
   16338:	cmp	r0, #0
   1633c:	mov	r6, r7
   16340:	beq	1632c <flatcc_json_printer_int8_enum_field@@Base+0x54>
   16344:	ldr	r0, [r5, #16]
   16348:	add	r1, r0, #1
   1634c:	str	r1, [r5, #16]
   16350:	cmp	r0, #0
   16354:	beq	1636c <flatcc_json_printer_int8_enum_field@@Base+0x94>
   16358:	ldr	r0, [r4, #20]
   1635c:	add	r1, r0, #1
   16360:	str	r1, [r4, #20]
   16364:	mov	r1, #44	; 0x2c
   16368:	strb	r1, [r0]
   1636c:	mov	r0, r4
   16370:	mov	r1, r8
   16374:	mov	r2, r9
   16378:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   1637c:	ldrb	r0, [r4, #27]
   16380:	cmp	r0, #0
   16384:	beq	163a8 <flatcc_json_printer_int8_enum_field@@Base+0xd0>
   16388:	ldr	r1, [r4, #20]
   1638c:	mov	r0, r6
   16390:	bl	15080 <flatcc_json_printer_int8@@Base+0x2c>
   16394:	ldr	r1, [r4, #20]
   16398:	add	r0, r1, r0
   1639c:	str	r0, [r4, #20]
   163a0:	sub	sp, fp, #28
   163a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163a8:	mov	r0, r4
   163ac:	mov	r1, r6
   163b0:	mov	r2, sl
   163b4:	sub	sp, fp, #28
   163b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   163bc:	bx	r2

000163c0 <flatcc_json_printer_int16_enum_field@@Base>:
   163c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   163c4:	add	fp, sp, #28
   163c8:	sub	sp, sp, #4
   163cc:	mov	r8, r3
   163d0:	mov	r5, r1
   163d4:	mov	r4, r0
   163d8:	mov	r0, r1
   163dc:	mov	r1, r2
   163e0:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   163e4:	ldr	sl, [fp, #16]
   163e8:	ldr	r7, [fp, #12]
   163ec:	ldr	r9, [fp, #8]
   163f0:	cmp	r0, #0
   163f4:	beq	1641c <flatcc_json_printer_int16_enum_field@@Base+0x5c>
   163f8:	bl	15af4 <flatcc_json_printer_int16_field@@Base+0xb0>
   163fc:	mov	r6, r0
   16400:	cmp	r0, r7
   16404:	bne	1642c <flatcc_json_printer_int16_enum_field@@Base+0x6c>
   16408:	ldrb	r0, [r4, #28]
   1640c:	cmp	r0, #0
   16410:	beq	1642c <flatcc_json_printer_int16_enum_field@@Base+0x6c>
   16414:	sub	sp, fp, #28
   16418:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1641c:	ldrb	r0, [r4, #29]
   16420:	cmp	r0, #0
   16424:	mov	r6, r7
   16428:	beq	16414 <flatcc_json_printer_int16_enum_field@@Base+0x54>
   1642c:	ldr	r0, [r5, #16]
   16430:	add	r1, r0, #1
   16434:	str	r1, [r5, #16]
   16438:	cmp	r0, #0
   1643c:	beq	16454 <flatcc_json_printer_int16_enum_field@@Base+0x94>
   16440:	ldr	r0, [r4, #20]
   16444:	add	r1, r0, #1
   16448:	str	r1, [r4, #20]
   1644c:	mov	r1, #44	; 0x2c
   16450:	strb	r1, [r0]
   16454:	mov	r0, r4
   16458:	mov	r1, r8
   1645c:	mov	r2, r9
   16460:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   16464:	ldrb	r0, [r4, #27]
   16468:	cmp	r0, #0
   1646c:	beq	16490 <flatcc_json_printer_int16_enum_field@@Base+0xd0>
   16470:	ldr	r1, [r4, #20]
   16474:	mov	r0, r6
   16478:	bl	150dc <flatcc_json_printer_int16@@Base+0x2c>
   1647c:	ldr	r1, [r4, #20]
   16480:	add	r0, r1, r0
   16484:	str	r0, [r4, #20]
   16488:	sub	sp, fp, #28
   1648c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16490:	mov	r0, r4
   16494:	mov	r1, r6
   16498:	mov	r2, sl
   1649c:	sub	sp, fp, #28
   164a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   164a4:	bx	r2

000164a8 <flatcc_json_printer_int32_enum_field@@Base>:
   164a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   164ac:	add	fp, sp, #28
   164b0:	sub	sp, sp, #4
   164b4:	mov	r8, r3
   164b8:	mov	r5, r1
   164bc:	mov	r4, r0
   164c0:	mov	r0, r1
   164c4:	mov	r1, r2
   164c8:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   164cc:	ldr	sl, [fp, #16]
   164d0:	ldr	r7, [fp, #12]
   164d4:	ldr	r9, [fp, #8]
   164d8:	cmp	r0, #0
   164dc:	beq	16504 <flatcc_json_printer_int32_enum_field@@Base+0x5c>
   164e0:	bl	15bac <flatcc_json_printer_int32_field@@Base+0xb0>
   164e4:	mov	r6, r0
   164e8:	cmp	r0, r7
   164ec:	bne	16514 <flatcc_json_printer_int32_enum_field@@Base+0x6c>
   164f0:	ldrb	r0, [r4, #28]
   164f4:	cmp	r0, #0
   164f8:	beq	16514 <flatcc_json_printer_int32_enum_field@@Base+0x6c>
   164fc:	sub	sp, fp, #28
   16500:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16504:	ldrb	r0, [r4, #29]
   16508:	cmp	r0, #0
   1650c:	mov	r6, r7
   16510:	beq	164fc <flatcc_json_printer_int32_enum_field@@Base+0x54>
   16514:	ldr	r0, [r5, #16]
   16518:	add	r1, r0, #1
   1651c:	str	r1, [r5, #16]
   16520:	cmp	r0, #0
   16524:	beq	1653c <flatcc_json_printer_int32_enum_field@@Base+0x94>
   16528:	ldr	r0, [r4, #20]
   1652c:	add	r1, r0, #1
   16530:	str	r1, [r4, #20]
   16534:	mov	r1, #44	; 0x2c
   16538:	strb	r1, [r0]
   1653c:	mov	r0, r4
   16540:	mov	r1, r8
   16544:	mov	r2, r9
   16548:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   1654c:	ldrb	r0, [r4, #27]
   16550:	cmp	r0, #0
   16554:	beq	16578 <flatcc_json_printer_int32_enum_field@@Base+0xd0>
   16558:	ldr	r1, [r4, #20]
   1655c:	mov	r0, r6
   16560:	bl	15138 <flatcc_json_printer_int32@@Base+0x2c>
   16564:	ldr	r1, [r4, #20]
   16568:	add	r0, r1, r0
   1656c:	str	r0, [r4, #20]
   16570:	sub	sp, fp, #28
   16574:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16578:	mov	r0, r4
   1657c:	mov	r1, r6
   16580:	mov	r2, sl
   16584:	sub	sp, fp, #28
   16588:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1658c:	bx	r2

00016590 <flatcc_json_printer_int64_enum_field@@Base>:
   16590:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16594:	add	fp, sp, #28
   16598:	sub	sp, sp, #12
   1659c:	str	r3, [sp, #8]
   165a0:	mov	r6, r1
   165a4:	mov	r4, r0
   165a8:	mov	r0, r1
   165ac:	mov	r1, r2
   165b0:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   165b4:	ldr	r5, [fp, #20]
   165b8:	ldr	r7, [fp, #16]
   165bc:	ldr	r1, [fp, #24]
   165c0:	str	r1, [sp, #4]
   165c4:	ldr	r9, [fp, #8]
   165c8:	cmp	r0, #0
   165cc:	beq	16600 <flatcc_json_printer_int64_enum_field@@Base+0x70>
   165d0:	bl	15c88 <flatcc_json_printer_int64_field@@Base+0xd4>
   165d4:	mov	r8, r0
   165d8:	mov	sl, r1
   165dc:	eor	r0, r1, r5
   165e0:	eor	r1, r8, r7
   165e4:	orrs	r0, r1, r0
   165e8:	bne	16614 <flatcc_json_printer_int64_enum_field@@Base+0x84>
   165ec:	ldrb	r0, [r4, #28]
   165f0:	cmp	r0, #0
   165f4:	beq	16614 <flatcc_json_printer_int64_enum_field@@Base+0x84>
   165f8:	sub	sp, fp, #28
   165fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16600:	ldrb	r0, [r4, #29]
   16604:	cmp	r0, #0
   16608:	mov	r8, r7
   1660c:	mov	sl, r5
   16610:	beq	165f8 <flatcc_json_printer_int64_enum_field@@Base+0x68>
   16614:	ldr	r0, [r6, #16]
   16618:	add	r1, r0, #1
   1661c:	str	r1, [r6, #16]
   16620:	cmp	r0, #0
   16624:	beq	1663c <flatcc_json_printer_int64_enum_field@@Base+0xac>
   16628:	ldr	r0, [r4, #20]
   1662c:	add	r1, r0, #1
   16630:	str	r1, [r4, #20]
   16634:	mov	r1, #44	; 0x2c
   16638:	strb	r1, [r0]
   1663c:	mov	r0, r4
   16640:	ldr	r1, [sp, #8]
   16644:	mov	r2, r9
   16648:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   1664c:	ldrb	r0, [r4, #27]
   16650:	cmp	r0, #0
   16654:	beq	1667c <flatcc_json_printer_int64_enum_field@@Base+0xec>
   16658:	ldr	r2, [r4, #20]
   1665c:	mov	r0, r8
   16660:	mov	r1, sl
   16664:	bl	15190 <flatcc_json_printer_int64@@Base+0x30>
   16668:	ldr	r1, [r4, #20]
   1666c:	add	r0, r1, r0
   16670:	str	r0, [r4, #20]
   16674:	sub	sp, fp, #28
   16678:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1667c:	mov	r0, r4
   16680:	mov	r2, r8
   16684:	mov	r3, sl
   16688:	ldr	r1, [sp, #4]
   1668c:	sub	sp, fp, #28
   16690:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16694:	bx	r1

00016698 <flatcc_json_printer_bool_enum_field@@Base>:
   16698:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1669c:	add	fp, sp, #28
   166a0:	sub	sp, sp, #4
   166a4:	mov	r8, r3
   166a8:	mov	r5, r1
   166ac:	mov	r4, r0
   166b0:	mov	r0, r1
   166b4:	mov	r1, r2
   166b8:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   166bc:	ldr	sl, [fp, #16]
   166c0:	ldr	r7, [fp, #12]
   166c4:	ldr	r9, [fp, #8]
   166c8:	cmp	r0, #0
   166cc:	beq	166f4 <flatcc_json_printer_bool_enum_field@@Base+0x5c>
   166d0:	bl	15d40 <flatcc_json_printer_bool_field@@Base+0xb0>
   166d4:	mov	r6, r0
   166d8:	cmp	r0, r7
   166dc:	bne	16704 <flatcc_json_printer_bool_enum_field@@Base+0x6c>
   166e0:	ldrb	r0, [r4, #28]
   166e4:	cmp	r0, #0
   166e8:	beq	16704 <flatcc_json_printer_bool_enum_field@@Base+0x6c>
   166ec:	sub	sp, fp, #28
   166f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   166f4:	ldrb	r0, [r4, #29]
   166f8:	cmp	r0, #0
   166fc:	mov	r6, r7
   16700:	beq	166ec <flatcc_json_printer_bool_enum_field@@Base+0x54>
   16704:	ldr	r0, [r5, #16]
   16708:	add	r1, r0, #1
   1670c:	str	r1, [r5, #16]
   16710:	cmp	r0, #0
   16714:	beq	1672c <flatcc_json_printer_bool_enum_field@@Base+0x94>
   16718:	ldr	r0, [r4, #20]
   1671c:	add	r1, r0, #1
   16720:	str	r1, [r4, #20]
   16724:	mov	r1, #44	; 0x2c
   16728:	strb	r1, [r0]
   1672c:	mov	r0, r4
   16730:	mov	r1, r8
   16734:	mov	r2, r9
   16738:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   1673c:	ldrb	r0, [r4, #27]
   16740:	cmp	r0, #0
   16744:	beq	16768 <flatcc_json_printer_bool_enum_field@@Base+0xd0>
   16748:	ldr	r1, [r4, #20]
   1674c:	mov	r0, r6
   16750:	bl	15d48 <flatcc_json_printer_bool_field@@Base+0xb8>
   16754:	ldr	r1, [r4, #20]
   16758:	add	r0, r1, r0
   1675c:	str	r0, [r4, #20]
   16760:	sub	sp, fp, #28
   16764:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16768:	mov	r0, r4
   1676c:	mov	r1, r6
   16770:	mov	r2, sl
   16774:	sub	sp, fp, #28
   16778:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1677c:	bx	r2

00016780 <flatcc_json_printer_uint8_struct_field@@Base>:
   16780:	push	{r4, r5, r6, sl, fp, lr}
   16784:	add	fp, sp, #16
   16788:	mov	r6, r1
   1678c:	mov	r4, r0
   16790:	add	r0, r2, r3
   16794:	bl	15738 <flatcc_json_printer_uint8_field@@Base+0xb0>
   16798:	mov	r5, r0
   1679c:	ldr	r2, [fp, #12]
   167a0:	ldr	r1, [fp, #8]
   167a4:	cmp	r6, #0
   167a8:	beq	167c0 <flatcc_json_printer_uint8_struct_field@@Base+0x40>
   167ac:	ldr	r0, [r4, #20]
   167b0:	add	r3, r0, #1
   167b4:	str	r3, [r4, #20]
   167b8:	mov	r3, #44	; 0x2c
   167bc:	strb	r3, [r0]
   167c0:	mov	r0, r4
   167c4:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   167c8:	ldr	r1, [r4, #20]
   167cc:	mov	r0, r5
   167d0:	bl	145e4 <flatcc_json_printer_uint8@@Base+0x2c>
   167d4:	ldr	r1, [r4, #20]
   167d8:	add	r0, r1, r0
   167dc:	str	r0, [r4, #20]
   167e0:	pop	{r4, r5, r6, sl, fp, pc}

000167e4 <flatcc_json_printer_uint16_struct_field@@Base>:
   167e4:	push	{r4, r5, r6, sl, fp, lr}
   167e8:	add	fp, sp, #16
   167ec:	mov	r6, r1
   167f0:	mov	r4, r0
   167f4:	add	r0, r2, r3
   167f8:	bl	157f0 <flatcc_json_printer_uint16_field@@Base+0xb0>
   167fc:	mov	r5, r0
   16800:	ldr	r2, [fp, #12]
   16804:	ldr	r1, [fp, #8]
   16808:	cmp	r6, #0
   1680c:	beq	16824 <flatcc_json_printer_uint16_struct_field@@Base+0x40>
   16810:	ldr	r0, [r4, #20]
   16814:	add	r3, r0, #1
   16818:	str	r3, [r4, #20]
   1681c:	mov	r3, #44	; 0x2c
   16820:	strb	r3, [r0]
   16824:	mov	r0, r4
   16828:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   1682c:	ldr	r1, [r4, #20]
   16830:	mov	r0, r5
   16834:	bl	146b4 <flatcc_json_printer_uint16@@Base+0x2c>
   16838:	ldr	r1, [r4, #20]
   1683c:	add	r0, r1, r0
   16840:	str	r0, [r4, #20]
   16844:	pop	{r4, r5, r6, sl, fp, pc}

00016848 <flatcc_json_printer_uint32_struct_field@@Base>:
   16848:	push	{r4, r5, r6, sl, fp, lr}
   1684c:	add	fp, sp, #16
   16850:	mov	r6, r1
   16854:	mov	r4, r0
   16858:	add	r0, r2, r3
   1685c:	bl	158a8 <flatcc_json_printer_uint32_field@@Base+0xb0>
   16860:	mov	r5, r0
   16864:	ldr	r2, [fp, #12]
   16868:	ldr	r1, [fp, #8]
   1686c:	cmp	r6, #0
   16870:	beq	16888 <flatcc_json_printer_uint32_struct_field@@Base+0x40>
   16874:	ldr	r0, [r4, #20]
   16878:	add	r3, r0, #1
   1687c:	str	r3, [r4, #20]
   16880:	mov	r3, #44	; 0x2c
   16884:	strb	r3, [r0]
   16888:	mov	r0, r4
   1688c:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   16890:	ldr	r1, [r4, #20]
   16894:	mov	r0, r5
   16898:	bl	14850 <flatcc_json_printer_uint32@@Base+0x2c>
   1689c:	ldr	r1, [r4, #20]
   168a0:	add	r0, r1, r0
   168a4:	str	r0, [r4, #20]
   168a8:	pop	{r4, r5, r6, sl, fp, pc}

000168ac <flatcc_json_printer_uint64_struct_field@@Base>:
   168ac:	push	{r4, r5, r6, r7, fp, lr}
   168b0:	add	fp, sp, #16
   168b4:	mov	r7, r1
   168b8:	mov	r4, r0
   168bc:	add	r0, r2, r3
   168c0:	bl	15984 <flatcc_json_printer_uint64_field@@Base+0xd4>
   168c4:	mov	r5, r0
   168c8:	mov	r6, r1
   168cc:	ldr	r2, [fp, #12]
   168d0:	ldr	r1, [fp, #8]
   168d4:	cmp	r7, #0
   168d8:	beq	168f0 <flatcc_json_printer_uint64_struct_field@@Base+0x44>
   168dc:	ldr	r0, [r4, #20]
   168e0:	add	r3, r0, #1
   168e4:	str	r3, [r4, #20]
   168e8:	mov	r3, #44	; 0x2c
   168ec:	strb	r3, [r0]
   168f0:	mov	r0, r4
   168f4:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   168f8:	ldr	r2, [r4, #20]
   168fc:	mov	r0, r5
   16900:	mov	r1, r6
   16904:	bl	14b78 <flatcc_json_printer_uint64@@Base+0x30>
   16908:	ldr	r1, [r4, #20]
   1690c:	add	r0, r1, r0
   16910:	str	r0, [r4, #20]
   16914:	pop	{r4, r5, r6, r7, fp, pc}

00016918 <flatcc_json_printer_int8_struct_field@@Base>:
   16918:	push	{r4, r5, r6, sl, fp, lr}
   1691c:	add	fp, sp, #16
   16920:	mov	r6, r1
   16924:	mov	r4, r0
   16928:	add	r0, r2, r3
   1692c:	bl	15a3c <flatcc_json_printer_int8_field@@Base+0xb0>
   16930:	mov	r5, r0
   16934:	ldr	r2, [fp, #12]
   16938:	ldr	r1, [fp, #8]
   1693c:	cmp	r6, #0
   16940:	beq	16958 <flatcc_json_printer_int8_struct_field@@Base+0x40>
   16944:	ldr	r0, [r4, #20]
   16948:	add	r3, r0, #1
   1694c:	str	r3, [r4, #20]
   16950:	mov	r3, #44	; 0x2c
   16954:	strb	r3, [r0]
   16958:	mov	r0, r4
   1695c:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   16960:	ldr	r1, [r4, #20]
   16964:	mov	r0, r5
   16968:	bl	15080 <flatcc_json_printer_int8@@Base+0x2c>
   1696c:	ldr	r1, [r4, #20]
   16970:	add	r0, r1, r0
   16974:	str	r0, [r4, #20]
   16978:	pop	{r4, r5, r6, sl, fp, pc}

0001697c <flatcc_json_printer_int16_struct_field@@Base>:
   1697c:	push	{r4, r5, r6, sl, fp, lr}
   16980:	add	fp, sp, #16
   16984:	mov	r6, r1
   16988:	mov	r4, r0
   1698c:	add	r0, r2, r3
   16990:	bl	15af4 <flatcc_json_printer_int16_field@@Base+0xb0>
   16994:	mov	r5, r0
   16998:	ldr	r2, [fp, #12]
   1699c:	ldr	r1, [fp, #8]
   169a0:	cmp	r6, #0
   169a4:	beq	169bc <flatcc_json_printer_int16_struct_field@@Base+0x40>
   169a8:	ldr	r0, [r4, #20]
   169ac:	add	r3, r0, #1
   169b0:	str	r3, [r4, #20]
   169b4:	mov	r3, #44	; 0x2c
   169b8:	strb	r3, [r0]
   169bc:	mov	r0, r4
   169c0:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   169c4:	ldr	r1, [r4, #20]
   169c8:	mov	r0, r5
   169cc:	bl	150dc <flatcc_json_printer_int16@@Base+0x2c>
   169d0:	ldr	r1, [r4, #20]
   169d4:	add	r0, r1, r0
   169d8:	str	r0, [r4, #20]
   169dc:	pop	{r4, r5, r6, sl, fp, pc}

000169e0 <flatcc_json_printer_int32_struct_field@@Base>:
   169e0:	push	{r4, r5, r6, sl, fp, lr}
   169e4:	add	fp, sp, #16
   169e8:	mov	r6, r1
   169ec:	mov	r4, r0
   169f0:	add	r0, r2, r3
   169f4:	bl	15bac <flatcc_json_printer_int32_field@@Base+0xb0>
   169f8:	mov	r5, r0
   169fc:	ldr	r2, [fp, #12]
   16a00:	ldr	r1, [fp, #8]
   16a04:	cmp	r6, #0
   16a08:	beq	16a20 <flatcc_json_printer_int32_struct_field@@Base+0x40>
   16a0c:	ldr	r0, [r4, #20]
   16a10:	add	r3, r0, #1
   16a14:	str	r3, [r4, #20]
   16a18:	mov	r3, #44	; 0x2c
   16a1c:	strb	r3, [r0]
   16a20:	mov	r0, r4
   16a24:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   16a28:	ldr	r1, [r4, #20]
   16a2c:	mov	r0, r5
   16a30:	bl	15138 <flatcc_json_printer_int32@@Base+0x2c>
   16a34:	ldr	r1, [r4, #20]
   16a38:	add	r0, r1, r0
   16a3c:	str	r0, [r4, #20]
   16a40:	pop	{r4, r5, r6, sl, fp, pc}

00016a44 <flatcc_json_printer_int64_struct_field@@Base>:
   16a44:	push	{r4, r5, r6, r7, fp, lr}
   16a48:	add	fp, sp, #16
   16a4c:	mov	r7, r1
   16a50:	mov	r4, r0
   16a54:	add	r0, r2, r3
   16a58:	bl	15c88 <flatcc_json_printer_int64_field@@Base+0xd4>
   16a5c:	mov	r5, r0
   16a60:	mov	r6, r1
   16a64:	ldr	r2, [fp, #12]
   16a68:	ldr	r1, [fp, #8]
   16a6c:	cmp	r7, #0
   16a70:	beq	16a88 <flatcc_json_printer_int64_struct_field@@Base+0x44>
   16a74:	ldr	r0, [r4, #20]
   16a78:	add	r3, r0, #1
   16a7c:	str	r3, [r4, #20]
   16a80:	mov	r3, #44	; 0x2c
   16a84:	strb	r3, [r0]
   16a88:	mov	r0, r4
   16a8c:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   16a90:	ldr	r2, [r4, #20]
   16a94:	mov	r0, r5
   16a98:	mov	r1, r6
   16a9c:	bl	15190 <flatcc_json_printer_int64@@Base+0x30>
   16aa0:	ldr	r1, [r4, #20]
   16aa4:	add	r0, r1, r0
   16aa8:	str	r0, [r4, #20]
   16aac:	pop	{r4, r5, r6, r7, fp, pc}

00016ab0 <flatcc_json_printer_bool_struct_field@@Base>:
   16ab0:	push	{r4, r5, r6, sl, fp, lr}
   16ab4:	add	fp, sp, #16
   16ab8:	mov	r6, r1
   16abc:	mov	r4, r0
   16ac0:	add	r0, r2, r3
   16ac4:	bl	15d40 <flatcc_json_printer_bool_field@@Base+0xb0>
   16ac8:	mov	r5, r0
   16acc:	ldr	r2, [fp, #12]
   16ad0:	ldr	r1, [fp, #8]
   16ad4:	cmp	r6, #0
   16ad8:	beq	16af0 <flatcc_json_printer_bool_struct_field@@Base+0x40>
   16adc:	ldr	r0, [r4, #20]
   16ae0:	add	r3, r0, #1
   16ae4:	str	r3, [r4, #20]
   16ae8:	mov	r3, #44	; 0x2c
   16aec:	strb	r3, [r0]
   16af0:	mov	r0, r4
   16af4:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   16af8:	ldr	r1, [r4, #20]
   16afc:	mov	r0, r5
   16b00:	bl	15d48 <flatcc_json_printer_bool_field@@Base+0xb8>
   16b04:	ldr	r1, [r4, #20]
   16b08:	add	r0, r1, r0
   16b0c:	str	r0, [r4, #20]
   16b10:	pop	{r4, r5, r6, sl, fp, pc}

00016b14 <flatcc_json_printer_float_struct_field@@Base>:
   16b14:	push	{r4, r5, fp, lr}
   16b18:	add	fp, sp, #8
   16b1c:	vpush	{d8}
   16b20:	mov	r5, r1
   16b24:	mov	r4, r0
   16b28:	add	r0, r2, r3
   16b2c:	bl	15e48 <flatcc_json_printer_float_field@@Base+0xc0>
   16b30:	vmov.f32	s16, s0
   16b34:	ldr	r2, [fp, #12]
   16b38:	ldr	r1, [fp, #8]
   16b3c:	cmp	r5, #0
   16b40:	beq	16b58 <flatcc_json_printer_float_struct_field@@Base+0x44>
   16b44:	ldr	r0, [r4, #20]
   16b48:	add	r3, r0, #1
   16b4c:	str	r3, [r4, #20]
   16b50:	mov	r3, #44	; 0x2c
   16b54:	strb	r3, [r0]
   16b58:	mov	r0, r4
   16b5c:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   16b60:	ldr	r0, [r4, #20]
   16b64:	vcvt.f64.f32	d0, s16
   16b68:	bl	13f80 <flatcc_json_printer_fmt_float@@Base+0x8>
   16b6c:	ldr	r1, [r4, #20]
   16b70:	add	r0, r1, r0
   16b74:	str	r0, [r4, #20]
   16b78:	vpop	{d8}
   16b7c:	pop	{r4, r5, fp, pc}

00016b80 <flatcc_json_printer_double_struct_field@@Base>:
   16b80:	push	{r4, r5, fp, lr}
   16b84:	add	fp, sp, #8
   16b88:	vpush	{d8}
   16b8c:	mov	r5, r1
   16b90:	mov	r4, r0
   16b94:	add	r0, r2, r3
   16b98:	bl	15f10 <flatcc_json_printer_double_field@@Base+0xc0>
   16b9c:	vmov.f64	d8, d0
   16ba0:	ldr	r2, [fp, #12]
   16ba4:	ldr	r1, [fp, #8]
   16ba8:	cmp	r5, #0
   16bac:	beq	16bc4 <flatcc_json_printer_double_struct_field@@Base+0x44>
   16bb0:	ldr	r0, [r4, #20]
   16bb4:	add	r3, r0, #1
   16bb8:	str	r3, [r4, #20]
   16bbc:	mov	r3, #44	; 0x2c
   16bc0:	strb	r3, [r0]
   16bc4:	mov	r0, r4
   16bc8:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   16bcc:	ldr	r0, [r4, #20]
   16bd0:	vmov.f64	d0, d8
   16bd4:	bl	13f80 <flatcc_json_printer_fmt_float@@Base+0x8>
   16bd8:	ldr	r1, [r4, #20]
   16bdc:	add	r0, r1, r0
   16be0:	str	r0, [r4, #20]
   16be4:	vpop	{d8}
   16be8:	pop	{r4, r5, fp, pc}

00016bec <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   16bec:	push	{r4, r5, r6, r7, fp, lr}
   16bf0:	add	fp, sp, #16
   16bf4:	mov	r6, r1
   16bf8:	mov	r4, r0
   16bfc:	add	r0, r2, r3
   16c00:	bl	15738 <flatcc_json_printer_uint8_field@@Base+0xb0>
   16c04:	mov	r5, r0
   16c08:	add	r7, fp, #8
   16c0c:	ldm	r7, {r1, r2, r7}
   16c10:	cmp	r6, #0
   16c14:	beq	16c2c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x40>
   16c18:	ldr	r0, [r4, #20]
   16c1c:	add	r3, r0, #1
   16c20:	str	r3, [r4, #20]
   16c24:	mov	r3, #44	; 0x2c
   16c28:	strb	r3, [r0]
   16c2c:	mov	r0, r4
   16c30:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   16c34:	ldrb	r0, [r4, #27]
   16c38:	cmp	r0, #0
   16c3c:	beq	16c5c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x70>
   16c40:	ldr	r1, [r4, #20]
   16c44:	mov	r0, r5
   16c48:	bl	145e4 <flatcc_json_printer_uint8@@Base+0x2c>
   16c4c:	ldr	r1, [r4, #20]
   16c50:	add	r0, r1, r0
   16c54:	str	r0, [r4, #20]
   16c58:	pop	{r4, r5, r6, r7, fp, pc}
   16c5c:	mov	r0, r4
   16c60:	mov	r1, r5
   16c64:	mov	r2, r7
   16c68:	pop	{r4, r5, r6, r7, fp, lr}
   16c6c:	bx	r2

00016c70 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   16c70:	push	{r4, r5, r6, r7, fp, lr}
   16c74:	add	fp, sp, #16
   16c78:	mov	r6, r1
   16c7c:	mov	r4, r0
   16c80:	add	r0, r2, r3
   16c84:	bl	157f0 <flatcc_json_printer_uint16_field@@Base+0xb0>
   16c88:	mov	r5, r0
   16c8c:	add	r7, fp, #8
   16c90:	ldm	r7, {r1, r2, r7}
   16c94:	cmp	r6, #0
   16c98:	beq	16cb0 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x40>
   16c9c:	ldr	r0, [r4, #20]
   16ca0:	add	r3, r0, #1
   16ca4:	str	r3, [r4, #20]
   16ca8:	mov	r3, #44	; 0x2c
   16cac:	strb	r3, [r0]
   16cb0:	mov	r0, r4
   16cb4:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   16cb8:	ldrb	r0, [r4, #27]
   16cbc:	cmp	r0, #0
   16cc0:	beq	16ce0 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x70>
   16cc4:	ldr	r1, [r4, #20]
   16cc8:	mov	r0, r5
   16ccc:	bl	146b4 <flatcc_json_printer_uint16@@Base+0x2c>
   16cd0:	ldr	r1, [r4, #20]
   16cd4:	add	r0, r1, r0
   16cd8:	str	r0, [r4, #20]
   16cdc:	pop	{r4, r5, r6, r7, fp, pc}
   16ce0:	mov	r0, r4
   16ce4:	mov	r1, r5
   16ce8:	mov	r2, r7
   16cec:	pop	{r4, r5, r6, r7, fp, lr}
   16cf0:	bx	r2

00016cf4 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   16cf4:	push	{r4, r5, r6, r7, fp, lr}
   16cf8:	add	fp, sp, #16
   16cfc:	mov	r6, r1
   16d00:	mov	r4, r0
   16d04:	add	r0, r2, r3
   16d08:	bl	158a8 <flatcc_json_printer_uint32_field@@Base+0xb0>
   16d0c:	mov	r5, r0
   16d10:	add	r7, fp, #8
   16d14:	ldm	r7, {r1, r2, r7}
   16d18:	cmp	r6, #0
   16d1c:	beq	16d34 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x40>
   16d20:	ldr	r0, [r4, #20]
   16d24:	add	r3, r0, #1
   16d28:	str	r3, [r4, #20]
   16d2c:	mov	r3, #44	; 0x2c
   16d30:	strb	r3, [r0]
   16d34:	mov	r0, r4
   16d38:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   16d3c:	ldrb	r0, [r4, #27]
   16d40:	cmp	r0, #0
   16d44:	beq	16d64 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x70>
   16d48:	ldr	r1, [r4, #20]
   16d4c:	mov	r0, r5
   16d50:	bl	14850 <flatcc_json_printer_uint32@@Base+0x2c>
   16d54:	ldr	r1, [r4, #20]
   16d58:	add	r0, r1, r0
   16d5c:	str	r0, [r4, #20]
   16d60:	pop	{r4, r5, r6, r7, fp, pc}
   16d64:	mov	r0, r4
   16d68:	mov	r1, r5
   16d6c:	mov	r2, r7
   16d70:	pop	{r4, r5, r6, r7, fp, lr}
   16d74:	bx	r2

00016d78 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   16d78:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16d7c:	add	fp, sp, #24
   16d80:	mov	r7, r1
   16d84:	mov	r4, r0
   16d88:	add	r0, r2, r3
   16d8c:	bl	15984 <flatcc_json_printer_uint64_field@@Base+0xd4>
   16d90:	mov	r6, r0
   16d94:	mov	r5, r1
   16d98:	add	r8, fp, #8
   16d9c:	ldm	r8, {r1, r2, r8}
   16da0:	cmp	r7, #0
   16da4:	beq	16dbc <flatcc_json_printer_uint64_enum_struct_field@@Base+0x44>
   16da8:	ldr	r0, [r4, #20]
   16dac:	add	r3, r0, #1
   16db0:	str	r3, [r4, #20]
   16db4:	mov	r3, #44	; 0x2c
   16db8:	strb	r3, [r0]
   16dbc:	mov	r0, r4
   16dc0:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   16dc4:	ldrb	r0, [r4, #27]
   16dc8:	cmp	r0, #0
   16dcc:	beq	16df0 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x78>
   16dd0:	ldr	r2, [r4, #20]
   16dd4:	mov	r0, r6
   16dd8:	mov	r1, r5
   16ddc:	bl	14b78 <flatcc_json_printer_uint64@@Base+0x30>
   16de0:	ldr	r1, [r4, #20]
   16de4:	add	r0, r1, r0
   16de8:	str	r0, [r4, #20]
   16dec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16df0:	mov	r0, r4
   16df4:	mov	r2, r6
   16df8:	mov	r3, r5
   16dfc:	mov	r1, r8
   16e00:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   16e04:	bx	r1

00016e08 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   16e08:	push	{r4, r5, r6, r7, fp, lr}
   16e0c:	add	fp, sp, #16
   16e10:	mov	r6, r1
   16e14:	mov	r4, r0
   16e18:	add	r0, r2, r3
   16e1c:	bl	15a3c <flatcc_json_printer_int8_field@@Base+0xb0>
   16e20:	mov	r5, r0
   16e24:	add	r7, fp, #8
   16e28:	ldm	r7, {r1, r2, r7}
   16e2c:	cmp	r6, #0
   16e30:	beq	16e48 <flatcc_json_printer_int8_enum_struct_field@@Base+0x40>
   16e34:	ldr	r0, [r4, #20]
   16e38:	add	r3, r0, #1
   16e3c:	str	r3, [r4, #20]
   16e40:	mov	r3, #44	; 0x2c
   16e44:	strb	r3, [r0]
   16e48:	mov	r0, r4
   16e4c:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   16e50:	ldrb	r0, [r4, #27]
   16e54:	cmp	r0, #0
   16e58:	beq	16e78 <flatcc_json_printer_int8_enum_struct_field@@Base+0x70>
   16e5c:	ldr	r1, [r4, #20]
   16e60:	mov	r0, r5
   16e64:	bl	15080 <flatcc_json_printer_int8@@Base+0x2c>
   16e68:	ldr	r1, [r4, #20]
   16e6c:	add	r0, r1, r0
   16e70:	str	r0, [r4, #20]
   16e74:	pop	{r4, r5, r6, r7, fp, pc}
   16e78:	mov	r0, r4
   16e7c:	mov	r1, r5
   16e80:	mov	r2, r7
   16e84:	pop	{r4, r5, r6, r7, fp, lr}
   16e88:	bx	r2

00016e8c <flatcc_json_printer_int16_enum_struct_field@@Base>:
   16e8c:	push	{r4, r5, r6, r7, fp, lr}
   16e90:	add	fp, sp, #16
   16e94:	mov	r6, r1
   16e98:	mov	r4, r0
   16e9c:	add	r0, r2, r3
   16ea0:	bl	15af4 <flatcc_json_printer_int16_field@@Base+0xb0>
   16ea4:	mov	r5, r0
   16ea8:	add	r7, fp, #8
   16eac:	ldm	r7, {r1, r2, r7}
   16eb0:	cmp	r6, #0
   16eb4:	beq	16ecc <flatcc_json_printer_int16_enum_struct_field@@Base+0x40>
   16eb8:	ldr	r0, [r4, #20]
   16ebc:	add	r3, r0, #1
   16ec0:	str	r3, [r4, #20]
   16ec4:	mov	r3, #44	; 0x2c
   16ec8:	strb	r3, [r0]
   16ecc:	mov	r0, r4
   16ed0:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   16ed4:	ldrb	r0, [r4, #27]
   16ed8:	cmp	r0, #0
   16edc:	beq	16efc <flatcc_json_printer_int16_enum_struct_field@@Base+0x70>
   16ee0:	ldr	r1, [r4, #20]
   16ee4:	mov	r0, r5
   16ee8:	bl	150dc <flatcc_json_printer_int16@@Base+0x2c>
   16eec:	ldr	r1, [r4, #20]
   16ef0:	add	r0, r1, r0
   16ef4:	str	r0, [r4, #20]
   16ef8:	pop	{r4, r5, r6, r7, fp, pc}
   16efc:	mov	r0, r4
   16f00:	mov	r1, r5
   16f04:	mov	r2, r7
   16f08:	pop	{r4, r5, r6, r7, fp, lr}
   16f0c:	bx	r2

00016f10 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   16f10:	push	{r4, r5, r6, r7, fp, lr}
   16f14:	add	fp, sp, #16
   16f18:	mov	r6, r1
   16f1c:	mov	r4, r0
   16f20:	add	r0, r2, r3
   16f24:	bl	15bac <flatcc_json_printer_int32_field@@Base+0xb0>
   16f28:	mov	r5, r0
   16f2c:	add	r7, fp, #8
   16f30:	ldm	r7, {r1, r2, r7}
   16f34:	cmp	r6, #0
   16f38:	beq	16f50 <flatcc_json_printer_int32_enum_struct_field@@Base+0x40>
   16f3c:	ldr	r0, [r4, #20]
   16f40:	add	r3, r0, #1
   16f44:	str	r3, [r4, #20]
   16f48:	mov	r3, #44	; 0x2c
   16f4c:	strb	r3, [r0]
   16f50:	mov	r0, r4
   16f54:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   16f58:	ldrb	r0, [r4, #27]
   16f5c:	cmp	r0, #0
   16f60:	beq	16f80 <flatcc_json_printer_int32_enum_struct_field@@Base+0x70>
   16f64:	ldr	r1, [r4, #20]
   16f68:	mov	r0, r5
   16f6c:	bl	15138 <flatcc_json_printer_int32@@Base+0x2c>
   16f70:	ldr	r1, [r4, #20]
   16f74:	add	r0, r1, r0
   16f78:	str	r0, [r4, #20]
   16f7c:	pop	{r4, r5, r6, r7, fp, pc}
   16f80:	mov	r0, r4
   16f84:	mov	r1, r5
   16f88:	mov	r2, r7
   16f8c:	pop	{r4, r5, r6, r7, fp, lr}
   16f90:	bx	r2

00016f94 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   16f94:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16f98:	add	fp, sp, #24
   16f9c:	mov	r7, r1
   16fa0:	mov	r4, r0
   16fa4:	add	r0, r2, r3
   16fa8:	bl	15c88 <flatcc_json_printer_int64_field@@Base+0xd4>
   16fac:	mov	r6, r0
   16fb0:	mov	r5, r1
   16fb4:	add	r8, fp, #8
   16fb8:	ldm	r8, {r1, r2, r8}
   16fbc:	cmp	r7, #0
   16fc0:	beq	16fd8 <flatcc_json_printer_int64_enum_struct_field@@Base+0x44>
   16fc4:	ldr	r0, [r4, #20]
   16fc8:	add	r3, r0, #1
   16fcc:	str	r3, [r4, #20]
   16fd0:	mov	r3, #44	; 0x2c
   16fd4:	strb	r3, [r0]
   16fd8:	mov	r0, r4
   16fdc:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   16fe0:	ldrb	r0, [r4, #27]
   16fe4:	cmp	r0, #0
   16fe8:	beq	1700c <flatcc_json_printer_int64_enum_struct_field@@Base+0x78>
   16fec:	ldr	r2, [r4, #20]
   16ff0:	mov	r0, r6
   16ff4:	mov	r1, r5
   16ff8:	bl	15190 <flatcc_json_printer_int64@@Base+0x30>
   16ffc:	ldr	r1, [r4, #20]
   17000:	add	r0, r1, r0
   17004:	str	r0, [r4, #20]
   17008:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1700c:	mov	r0, r4
   17010:	mov	r2, r6
   17014:	mov	r3, r5
   17018:	mov	r1, r8
   1701c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   17020:	bx	r1

00017024 <flatcc_json_printer_bool_enum_struct_field@@Base>:
   17024:	push	{r4, r5, r6, r7, fp, lr}
   17028:	add	fp, sp, #16
   1702c:	mov	r6, r1
   17030:	mov	r4, r0
   17034:	add	r0, r2, r3
   17038:	bl	15d40 <flatcc_json_printer_bool_field@@Base+0xb0>
   1703c:	mov	r5, r0
   17040:	add	r7, fp, #8
   17044:	ldm	r7, {r1, r2, r7}
   17048:	cmp	r6, #0
   1704c:	beq	17064 <flatcc_json_printer_bool_enum_struct_field@@Base+0x40>
   17050:	ldr	r0, [r4, #20]
   17054:	add	r3, r0, #1
   17058:	str	r3, [r4, #20]
   1705c:	mov	r3, #44	; 0x2c
   17060:	strb	r3, [r0]
   17064:	mov	r0, r4
   17068:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   1706c:	ldrb	r0, [r4, #27]
   17070:	cmp	r0, #0
   17074:	beq	17094 <flatcc_json_printer_bool_enum_struct_field@@Base+0x70>
   17078:	ldr	r1, [r4, #20]
   1707c:	mov	r0, r5
   17080:	bl	15d48 <flatcc_json_printer_bool_field@@Base+0xb8>
   17084:	ldr	r1, [r4, #20]
   17088:	add	r0, r1, r0
   1708c:	str	r0, [r4, #20]
   17090:	pop	{r4, r5, r6, r7, fp, pc}
   17094:	mov	r0, r4
   17098:	mov	r1, r5
   1709c:	mov	r2, r7
   170a0:	pop	{r4, r5, r6, r7, fp, lr}
   170a4:	bx	r2

000170a8 <flatcc_json_printer_utype_vector_field@@Base>:
   170a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   170ac:	add	fp, sp, #24
   170b0:	mov	r7, r3
   170b4:	mov	r5, r1
   170b8:	mov	r4, r0
   170bc:	mov	r0, r1
   170c0:	mov	r1, r2
   170c4:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   170c8:	cmp	r0, #0
   170cc:	beq	17264 <flatcc_json_printer_utype_vector_field@@Base+0x1bc>
   170d0:	ldr	r8, [fp, #8]
   170d4:	ldr	r1, [r5, #16]
   170d8:	add	r2, r1, #1
   170dc:	str	r2, [r5, #16]
   170e0:	cmp	r1, #0
   170e4:	beq	170fc <flatcc_json_printer_utype_vector_field@@Base+0x54>
   170e8:	ldr	r1, [r4, #20]
   170ec:	add	r2, r1, #1
   170f0:	str	r2, [r4, #20]
   170f4:	mov	r2, #44	; 0x2c
   170f8:	strb	r2, [r1]
   170fc:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   17100:	mov	r5, r0
   17104:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   17108:	mov	r6, r0
   1710c:	mov	r0, r4
   17110:	mov	r1, r7
   17114:	mov	r2, r8
   17118:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   1711c:	ldr	r0, [r4, #20]
   17120:	ldr	r1, [r4, #32]
   17124:	add	r1, r1, #1
   17128:	str	r1, [r4, #32]
   1712c:	add	r1, r0, #1
   17130:	str	r1, [r4, #20]
   17134:	mov	r1, #91	; 0x5b
   17138:	strb	r1, [r0]
   1713c:	cmp	r6, #0
   17140:	beq	1721c <flatcc_json_printer_utype_vector_field@@Base+0x174>
   17144:	add	r7, r5, #4
   17148:	ldrb	r0, [r4, #25]
   1714c:	cmp	r0, #0
   17150:	beq	17174 <flatcc_json_printer_utype_vector_field@@Base+0xcc>
   17154:	ldr	r0, [r4, #20]
   17158:	add	r1, r0, #1
   1715c:	str	r1, [r4, #20]
   17160:	mov	r1, #10
   17164:	strb	r1, [r0]
   17168:	mov	r0, r4
   1716c:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   17170:	b	1717c <flatcc_json_printer_utype_vector_field@@Base+0xd4>
   17174:	mov	r0, r4
   17178:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   1717c:	mov	r0, r7
   17180:	bl	17270 <flatcc_json_printer_utype_vector_field@@Base+0x1c8>
   17184:	ldr	r1, [r4, #20]
   17188:	bl	145e4 <flatcc_json_printer_uint8@@Base+0x2c>
   1718c:	ldr	r1, [r4, #20]
   17190:	add	r0, r1, r0
   17194:	str	r0, [r4, #20]
   17198:	subs	r6, r6, #1
   1719c:	beq	1721c <flatcc_json_printer_utype_vector_field@@Base+0x174>
   171a0:	add	r5, r5, #5
   171a4:	mov	r7, #44	; 0x2c
   171a8:	mov	r8, #10
   171ac:	b	171e0 <flatcc_json_printer_utype_vector_field@@Base+0x138>
   171b0:	mov	r0, r4
   171b4:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   171b8:	mov	r0, r5
   171bc:	bl	17270 <flatcc_json_printer_utype_vector_field@@Base+0x1c8>
   171c0:	ldr	r1, [r4, #20]
   171c4:	bl	145e4 <flatcc_json_printer_uint8@@Base+0x2c>
   171c8:	ldr	r1, [r4, #20]
   171cc:	add	r0, r1, r0
   171d0:	str	r0, [r4, #20]
   171d4:	add	r5, r5, #1
   171d8:	cmp	r6, #0
   171dc:	beq	1721c <flatcc_json_printer_utype_vector_field@@Base+0x174>
   171e0:	ldr	r0, [r4, #20]
   171e4:	add	r1, r0, #1
   171e8:	str	r1, [r4, #20]
   171ec:	strb	r7, [r0]
   171f0:	sub	r6, r6, #1
   171f4:	ldrb	r0, [r4, #25]
   171f8:	cmp	r0, #0
   171fc:	beq	171b0 <flatcc_json_printer_utype_vector_field@@Base+0x108>
   17200:	ldr	r0, [r4, #20]
   17204:	add	r1, r0, #1
   17208:	str	r1, [r4, #20]
   1720c:	strb	r8, [r0]
   17210:	mov	r0, r4
   17214:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   17218:	b	171b8 <flatcc_json_printer_utype_vector_field@@Base+0x110>
   1721c:	ldrb	r0, [r4, #25]
   17220:	cmp	r0, #0
   17224:	beq	17250 <flatcc_json_printer_utype_vector_field@@Base+0x1a8>
   17228:	ldr	r0, [r4, #20]
   1722c:	add	r1, r0, #1
   17230:	str	r1, [r4, #20]
   17234:	mov	r1, #10
   17238:	strb	r1, [r0]
   1723c:	ldr	r0, [r4, #32]
   17240:	sub	r0, r0, #1
   17244:	str	r0, [r4, #32]
   17248:	mov	r0, r4
   1724c:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   17250:	ldr	r0, [r4, #20]
   17254:	add	r1, r0, #1
   17258:	str	r1, [r4, #20]
   1725c:	mov	r1, #93	; 0x5d
   17260:	strb	r1, [r0]
   17264:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17268:	ldr	r0, [r0]
   1726c:	b	1bcec <flatcc_json_printer_clear@@Base+0xe70>
   17270:	ldrb	r0, [r0]
   17274:	b	1bcf0 <flatcc_json_printer_clear@@Base+0xe74>

00017278 <flatcc_json_printer_uint8_vector_field@@Base>:
   17278:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1727c:	add	fp, sp, #24
   17280:	mov	r7, r3
   17284:	mov	r5, r1
   17288:	mov	r4, r0
   1728c:	mov	r0, r1
   17290:	mov	r1, r2
   17294:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   17298:	cmp	r0, #0
   1729c:	beq	17434 <flatcc_json_printer_uint8_vector_field@@Base+0x1bc>
   172a0:	ldr	r8, [fp, #8]
   172a4:	ldr	r1, [r5, #16]
   172a8:	add	r2, r1, #1
   172ac:	str	r2, [r5, #16]
   172b0:	cmp	r1, #0
   172b4:	beq	172cc <flatcc_json_printer_uint8_vector_field@@Base+0x54>
   172b8:	ldr	r1, [r4, #20]
   172bc:	add	r2, r1, #1
   172c0:	str	r2, [r4, #20]
   172c4:	mov	r2, #44	; 0x2c
   172c8:	strb	r2, [r1]
   172cc:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   172d0:	mov	r5, r0
   172d4:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   172d8:	mov	r6, r0
   172dc:	mov	r0, r4
   172e0:	mov	r1, r7
   172e4:	mov	r2, r8
   172e8:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   172ec:	ldr	r0, [r4, #20]
   172f0:	ldr	r1, [r4, #32]
   172f4:	add	r1, r1, #1
   172f8:	str	r1, [r4, #32]
   172fc:	add	r1, r0, #1
   17300:	str	r1, [r4, #20]
   17304:	mov	r1, #91	; 0x5b
   17308:	strb	r1, [r0]
   1730c:	cmp	r6, #0
   17310:	beq	173ec <flatcc_json_printer_uint8_vector_field@@Base+0x174>
   17314:	add	r7, r5, #4
   17318:	ldrb	r0, [r4, #25]
   1731c:	cmp	r0, #0
   17320:	beq	17344 <flatcc_json_printer_uint8_vector_field@@Base+0xcc>
   17324:	ldr	r0, [r4, #20]
   17328:	add	r1, r0, #1
   1732c:	str	r1, [r4, #20]
   17330:	mov	r1, #10
   17334:	strb	r1, [r0]
   17338:	mov	r0, r4
   1733c:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   17340:	b	1734c <flatcc_json_printer_uint8_vector_field@@Base+0xd4>
   17344:	mov	r0, r4
   17348:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   1734c:	mov	r0, r7
   17350:	bl	15738 <flatcc_json_printer_uint8_field@@Base+0xb0>
   17354:	ldr	r1, [r4, #20]
   17358:	bl	145e4 <flatcc_json_printer_uint8@@Base+0x2c>
   1735c:	ldr	r1, [r4, #20]
   17360:	add	r0, r1, r0
   17364:	str	r0, [r4, #20]
   17368:	subs	r6, r6, #1
   1736c:	beq	173ec <flatcc_json_printer_uint8_vector_field@@Base+0x174>
   17370:	add	r5, r5, #5
   17374:	mov	r7, #44	; 0x2c
   17378:	mov	r8, #10
   1737c:	b	173b0 <flatcc_json_printer_uint8_vector_field@@Base+0x138>
   17380:	mov	r0, r4
   17384:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   17388:	mov	r0, r5
   1738c:	bl	15738 <flatcc_json_printer_uint8_field@@Base+0xb0>
   17390:	ldr	r1, [r4, #20]
   17394:	bl	145e4 <flatcc_json_printer_uint8@@Base+0x2c>
   17398:	ldr	r1, [r4, #20]
   1739c:	add	r0, r1, r0
   173a0:	str	r0, [r4, #20]
   173a4:	add	r5, r5, #1
   173a8:	cmp	r6, #0
   173ac:	beq	173ec <flatcc_json_printer_uint8_vector_field@@Base+0x174>
   173b0:	ldr	r0, [r4, #20]
   173b4:	add	r1, r0, #1
   173b8:	str	r1, [r4, #20]
   173bc:	strb	r7, [r0]
   173c0:	sub	r6, r6, #1
   173c4:	ldrb	r0, [r4, #25]
   173c8:	cmp	r0, #0
   173cc:	beq	17380 <flatcc_json_printer_uint8_vector_field@@Base+0x108>
   173d0:	ldr	r0, [r4, #20]
   173d4:	add	r1, r0, #1
   173d8:	str	r1, [r4, #20]
   173dc:	strb	r8, [r0]
   173e0:	mov	r0, r4
   173e4:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   173e8:	b	17388 <flatcc_json_printer_uint8_vector_field@@Base+0x110>
   173ec:	ldrb	r0, [r4, #25]
   173f0:	cmp	r0, #0
   173f4:	beq	17420 <flatcc_json_printer_uint8_vector_field@@Base+0x1a8>
   173f8:	ldr	r0, [r4, #20]
   173fc:	add	r1, r0, #1
   17400:	str	r1, [r4, #20]
   17404:	mov	r1, #10
   17408:	strb	r1, [r0]
   1740c:	ldr	r0, [r4, #32]
   17410:	sub	r0, r0, #1
   17414:	str	r0, [r4, #32]
   17418:	mov	r0, r4
   1741c:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   17420:	ldr	r0, [r4, #20]
   17424:	add	r1, r0, #1
   17428:	str	r1, [r4, #20]
   1742c:	mov	r1, #93	; 0x5d
   17430:	strb	r1, [r0]
   17434:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017438 <flatcc_json_printer_uint16_vector_field@@Base>:
   17438:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1743c:	add	fp, sp, #24
   17440:	mov	r7, r3
   17444:	mov	r5, r1
   17448:	mov	r4, r0
   1744c:	mov	r0, r1
   17450:	mov	r1, r2
   17454:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   17458:	cmp	r0, #0
   1745c:	beq	175f4 <flatcc_json_printer_uint16_vector_field@@Base+0x1bc>
   17460:	ldr	r8, [fp, #8]
   17464:	ldr	r1, [r5, #16]
   17468:	add	r2, r1, #1
   1746c:	str	r2, [r5, #16]
   17470:	cmp	r1, #0
   17474:	beq	1748c <flatcc_json_printer_uint16_vector_field@@Base+0x54>
   17478:	ldr	r1, [r4, #20]
   1747c:	add	r2, r1, #1
   17480:	str	r2, [r4, #20]
   17484:	mov	r2, #44	; 0x2c
   17488:	strb	r2, [r1]
   1748c:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   17490:	mov	r5, r0
   17494:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   17498:	mov	r6, r0
   1749c:	mov	r0, r4
   174a0:	mov	r1, r7
   174a4:	mov	r2, r8
   174a8:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   174ac:	ldr	r0, [r4, #20]
   174b0:	ldr	r1, [r4, #32]
   174b4:	add	r1, r1, #1
   174b8:	str	r1, [r4, #32]
   174bc:	add	r1, r0, #1
   174c0:	str	r1, [r4, #20]
   174c4:	mov	r1, #91	; 0x5b
   174c8:	strb	r1, [r0]
   174cc:	cmp	r6, #0
   174d0:	beq	175ac <flatcc_json_printer_uint16_vector_field@@Base+0x174>
   174d4:	add	r7, r5, #4
   174d8:	ldrb	r0, [r4, #25]
   174dc:	cmp	r0, #0
   174e0:	beq	17504 <flatcc_json_printer_uint16_vector_field@@Base+0xcc>
   174e4:	ldr	r0, [r4, #20]
   174e8:	add	r1, r0, #1
   174ec:	str	r1, [r4, #20]
   174f0:	mov	r1, #10
   174f4:	strb	r1, [r0]
   174f8:	mov	r0, r4
   174fc:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   17500:	b	1750c <flatcc_json_printer_uint16_vector_field@@Base+0xd4>
   17504:	mov	r0, r4
   17508:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   1750c:	mov	r0, r7
   17510:	bl	157f0 <flatcc_json_printer_uint16_field@@Base+0xb0>
   17514:	ldr	r1, [r4, #20]
   17518:	bl	146b4 <flatcc_json_printer_uint16@@Base+0x2c>
   1751c:	ldr	r1, [r4, #20]
   17520:	add	r0, r1, r0
   17524:	str	r0, [r4, #20]
   17528:	subs	r6, r6, #1
   1752c:	beq	175ac <flatcc_json_printer_uint16_vector_field@@Base+0x174>
   17530:	add	r5, r5, #6
   17534:	mov	r7, #44	; 0x2c
   17538:	mov	r8, #10
   1753c:	b	17570 <flatcc_json_printer_uint16_vector_field@@Base+0x138>
   17540:	mov	r0, r4
   17544:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   17548:	mov	r0, r5
   1754c:	bl	157f0 <flatcc_json_printer_uint16_field@@Base+0xb0>
   17550:	ldr	r1, [r4, #20]
   17554:	bl	146b4 <flatcc_json_printer_uint16@@Base+0x2c>
   17558:	ldr	r1, [r4, #20]
   1755c:	add	r0, r1, r0
   17560:	str	r0, [r4, #20]
   17564:	add	r5, r5, #2
   17568:	cmp	r6, #0
   1756c:	beq	175ac <flatcc_json_printer_uint16_vector_field@@Base+0x174>
   17570:	ldr	r0, [r4, #20]
   17574:	add	r1, r0, #1
   17578:	str	r1, [r4, #20]
   1757c:	strb	r7, [r0]
   17580:	sub	r6, r6, #1
   17584:	ldrb	r0, [r4, #25]
   17588:	cmp	r0, #0
   1758c:	beq	17540 <flatcc_json_printer_uint16_vector_field@@Base+0x108>
   17590:	ldr	r0, [r4, #20]
   17594:	add	r1, r0, #1
   17598:	str	r1, [r4, #20]
   1759c:	strb	r8, [r0]
   175a0:	mov	r0, r4
   175a4:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   175a8:	b	17548 <flatcc_json_printer_uint16_vector_field@@Base+0x110>
   175ac:	ldrb	r0, [r4, #25]
   175b0:	cmp	r0, #0
   175b4:	beq	175e0 <flatcc_json_printer_uint16_vector_field@@Base+0x1a8>
   175b8:	ldr	r0, [r4, #20]
   175bc:	add	r1, r0, #1
   175c0:	str	r1, [r4, #20]
   175c4:	mov	r1, #10
   175c8:	strb	r1, [r0]
   175cc:	ldr	r0, [r4, #32]
   175d0:	sub	r0, r0, #1
   175d4:	str	r0, [r4, #32]
   175d8:	mov	r0, r4
   175dc:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   175e0:	ldr	r0, [r4, #20]
   175e4:	add	r1, r0, #1
   175e8:	str	r1, [r4, #20]
   175ec:	mov	r1, #93	; 0x5d
   175f0:	strb	r1, [r0]
   175f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000175f8 <flatcc_json_printer_uint32_vector_field@@Base>:
   175f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   175fc:	add	fp, sp, #24
   17600:	mov	r7, r3
   17604:	mov	r5, r1
   17608:	mov	r4, r0
   1760c:	mov	r0, r1
   17610:	mov	r1, r2
   17614:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   17618:	cmp	r0, #0
   1761c:	beq	177b4 <flatcc_json_printer_uint32_vector_field@@Base+0x1bc>
   17620:	ldr	r8, [fp, #8]
   17624:	ldr	r1, [r5, #16]
   17628:	add	r2, r1, #1
   1762c:	str	r2, [r5, #16]
   17630:	cmp	r1, #0
   17634:	beq	1764c <flatcc_json_printer_uint32_vector_field@@Base+0x54>
   17638:	ldr	r1, [r4, #20]
   1763c:	add	r2, r1, #1
   17640:	str	r2, [r4, #20]
   17644:	mov	r2, #44	; 0x2c
   17648:	strb	r2, [r1]
   1764c:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   17650:	mov	r5, r0
   17654:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   17658:	mov	r6, r0
   1765c:	mov	r0, r4
   17660:	mov	r1, r7
   17664:	mov	r2, r8
   17668:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   1766c:	ldr	r0, [r4, #20]
   17670:	ldr	r1, [r4, #32]
   17674:	add	r1, r1, #1
   17678:	str	r1, [r4, #32]
   1767c:	add	r1, r0, #1
   17680:	str	r1, [r4, #20]
   17684:	mov	r1, #91	; 0x5b
   17688:	strb	r1, [r0]
   1768c:	cmp	r6, #0
   17690:	beq	1776c <flatcc_json_printer_uint32_vector_field@@Base+0x174>
   17694:	add	r7, r5, #4
   17698:	ldrb	r0, [r4, #25]
   1769c:	cmp	r0, #0
   176a0:	beq	176c4 <flatcc_json_printer_uint32_vector_field@@Base+0xcc>
   176a4:	ldr	r0, [r4, #20]
   176a8:	add	r1, r0, #1
   176ac:	str	r1, [r4, #20]
   176b0:	mov	r1, #10
   176b4:	strb	r1, [r0]
   176b8:	mov	r0, r4
   176bc:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   176c0:	b	176cc <flatcc_json_printer_uint32_vector_field@@Base+0xd4>
   176c4:	mov	r0, r4
   176c8:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   176cc:	mov	r0, r7
   176d0:	bl	158a8 <flatcc_json_printer_uint32_field@@Base+0xb0>
   176d4:	ldr	r1, [r4, #20]
   176d8:	bl	14850 <flatcc_json_printer_uint32@@Base+0x2c>
   176dc:	ldr	r1, [r4, #20]
   176e0:	add	r0, r1, r0
   176e4:	str	r0, [r4, #20]
   176e8:	subs	r6, r6, #1
   176ec:	beq	1776c <flatcc_json_printer_uint32_vector_field@@Base+0x174>
   176f0:	add	r5, r5, #8
   176f4:	mov	r7, #44	; 0x2c
   176f8:	mov	r8, #10
   176fc:	b	17730 <flatcc_json_printer_uint32_vector_field@@Base+0x138>
   17700:	mov	r0, r4
   17704:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   17708:	mov	r0, r5
   1770c:	bl	158a8 <flatcc_json_printer_uint32_field@@Base+0xb0>
   17710:	ldr	r1, [r4, #20]
   17714:	bl	14850 <flatcc_json_printer_uint32@@Base+0x2c>
   17718:	ldr	r1, [r4, #20]
   1771c:	add	r0, r1, r0
   17720:	str	r0, [r4, #20]
   17724:	add	r5, r5, #4
   17728:	cmp	r6, #0
   1772c:	beq	1776c <flatcc_json_printer_uint32_vector_field@@Base+0x174>
   17730:	ldr	r0, [r4, #20]
   17734:	add	r1, r0, #1
   17738:	str	r1, [r4, #20]
   1773c:	strb	r7, [r0]
   17740:	sub	r6, r6, #1
   17744:	ldrb	r0, [r4, #25]
   17748:	cmp	r0, #0
   1774c:	beq	17700 <flatcc_json_printer_uint32_vector_field@@Base+0x108>
   17750:	ldr	r0, [r4, #20]
   17754:	add	r1, r0, #1
   17758:	str	r1, [r4, #20]
   1775c:	strb	r8, [r0]
   17760:	mov	r0, r4
   17764:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   17768:	b	17708 <flatcc_json_printer_uint32_vector_field@@Base+0x110>
   1776c:	ldrb	r0, [r4, #25]
   17770:	cmp	r0, #0
   17774:	beq	177a0 <flatcc_json_printer_uint32_vector_field@@Base+0x1a8>
   17778:	ldr	r0, [r4, #20]
   1777c:	add	r1, r0, #1
   17780:	str	r1, [r4, #20]
   17784:	mov	r1, #10
   17788:	strb	r1, [r0]
   1778c:	ldr	r0, [r4, #32]
   17790:	sub	r0, r0, #1
   17794:	str	r0, [r4, #32]
   17798:	mov	r0, r4
   1779c:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   177a0:	ldr	r0, [r4, #20]
   177a4:	add	r1, r0, #1
   177a8:	str	r1, [r4, #20]
   177ac:	mov	r1, #93	; 0x5d
   177b0:	strb	r1, [r0]
   177b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000177b8 <flatcc_json_printer_uint64_vector_field@@Base>:
   177b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   177bc:	add	fp, sp, #24
   177c0:	mov	r7, r3
   177c4:	mov	r5, r1
   177c8:	mov	r4, r0
   177cc:	mov	r0, r1
   177d0:	mov	r1, r2
   177d4:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   177d8:	cmp	r0, #0
   177dc:	beq	17974 <flatcc_json_printer_uint64_vector_field@@Base+0x1bc>
   177e0:	ldr	r8, [fp, #8]
   177e4:	ldr	r1, [r5, #16]
   177e8:	add	r2, r1, #1
   177ec:	str	r2, [r5, #16]
   177f0:	cmp	r1, #0
   177f4:	beq	1780c <flatcc_json_printer_uint64_vector_field@@Base+0x54>
   177f8:	ldr	r1, [r4, #20]
   177fc:	add	r2, r1, #1
   17800:	str	r2, [r4, #20]
   17804:	mov	r2, #44	; 0x2c
   17808:	strb	r2, [r1]
   1780c:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   17810:	mov	r5, r0
   17814:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   17818:	mov	r6, r0
   1781c:	mov	r0, r4
   17820:	mov	r1, r7
   17824:	mov	r2, r8
   17828:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   1782c:	ldr	r0, [r4, #20]
   17830:	ldr	r1, [r4, #32]
   17834:	add	r1, r1, #1
   17838:	str	r1, [r4, #32]
   1783c:	add	r1, r0, #1
   17840:	str	r1, [r4, #20]
   17844:	mov	r1, #91	; 0x5b
   17848:	strb	r1, [r0]
   1784c:	cmp	r6, #0
   17850:	beq	1792c <flatcc_json_printer_uint64_vector_field@@Base+0x174>
   17854:	add	r7, r5, #4
   17858:	ldrb	r0, [r4, #25]
   1785c:	cmp	r0, #0
   17860:	beq	17884 <flatcc_json_printer_uint64_vector_field@@Base+0xcc>
   17864:	ldr	r0, [r4, #20]
   17868:	add	r1, r0, #1
   1786c:	str	r1, [r4, #20]
   17870:	mov	r1, #10
   17874:	strb	r1, [r0]
   17878:	mov	r0, r4
   1787c:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   17880:	b	1788c <flatcc_json_printer_uint64_vector_field@@Base+0xd4>
   17884:	mov	r0, r4
   17888:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   1788c:	mov	r0, r7
   17890:	bl	15984 <flatcc_json_printer_uint64_field@@Base+0xd4>
   17894:	ldr	r2, [r4, #20]
   17898:	bl	14b78 <flatcc_json_printer_uint64@@Base+0x30>
   1789c:	ldr	r1, [r4, #20]
   178a0:	add	r0, r1, r0
   178a4:	str	r0, [r4, #20]
   178a8:	subs	r6, r6, #1
   178ac:	beq	1792c <flatcc_json_printer_uint64_vector_field@@Base+0x174>
   178b0:	add	r5, r5, #12
   178b4:	mov	r7, #44	; 0x2c
   178b8:	mov	r8, #10
   178bc:	b	178f0 <flatcc_json_printer_uint64_vector_field@@Base+0x138>
   178c0:	mov	r0, r4
   178c4:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   178c8:	mov	r0, r5
   178cc:	bl	15984 <flatcc_json_printer_uint64_field@@Base+0xd4>
   178d0:	ldr	r2, [r4, #20]
   178d4:	bl	14b78 <flatcc_json_printer_uint64@@Base+0x30>
   178d8:	ldr	r1, [r4, #20]
   178dc:	add	r0, r1, r0
   178e0:	str	r0, [r4, #20]
   178e4:	add	r5, r5, #8
   178e8:	cmp	r6, #0
   178ec:	beq	1792c <flatcc_json_printer_uint64_vector_field@@Base+0x174>
   178f0:	ldr	r0, [r4, #20]
   178f4:	add	r1, r0, #1
   178f8:	str	r1, [r4, #20]
   178fc:	strb	r7, [r0]
   17900:	sub	r6, r6, #1
   17904:	ldrb	r0, [r4, #25]
   17908:	cmp	r0, #0
   1790c:	beq	178c0 <flatcc_json_printer_uint64_vector_field@@Base+0x108>
   17910:	ldr	r0, [r4, #20]
   17914:	add	r1, r0, #1
   17918:	str	r1, [r4, #20]
   1791c:	strb	r8, [r0]
   17920:	mov	r0, r4
   17924:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   17928:	b	178c8 <flatcc_json_printer_uint64_vector_field@@Base+0x110>
   1792c:	ldrb	r0, [r4, #25]
   17930:	cmp	r0, #0
   17934:	beq	17960 <flatcc_json_printer_uint64_vector_field@@Base+0x1a8>
   17938:	ldr	r0, [r4, #20]
   1793c:	add	r1, r0, #1
   17940:	str	r1, [r4, #20]
   17944:	mov	r1, #10
   17948:	strb	r1, [r0]
   1794c:	ldr	r0, [r4, #32]
   17950:	sub	r0, r0, #1
   17954:	str	r0, [r4, #32]
   17958:	mov	r0, r4
   1795c:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   17960:	ldr	r0, [r4, #20]
   17964:	add	r1, r0, #1
   17968:	str	r1, [r4, #20]
   1796c:	mov	r1, #93	; 0x5d
   17970:	strb	r1, [r0]
   17974:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017978 <flatcc_json_printer_int8_vector_field@@Base>:
   17978:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1797c:	add	fp, sp, #24
   17980:	mov	r7, r3
   17984:	mov	r5, r1
   17988:	mov	r4, r0
   1798c:	mov	r0, r1
   17990:	mov	r1, r2
   17994:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   17998:	cmp	r0, #0
   1799c:	beq	17b34 <flatcc_json_printer_int8_vector_field@@Base+0x1bc>
   179a0:	ldr	r8, [fp, #8]
   179a4:	ldr	r1, [r5, #16]
   179a8:	add	r2, r1, #1
   179ac:	str	r2, [r5, #16]
   179b0:	cmp	r1, #0
   179b4:	beq	179cc <flatcc_json_printer_int8_vector_field@@Base+0x54>
   179b8:	ldr	r1, [r4, #20]
   179bc:	add	r2, r1, #1
   179c0:	str	r2, [r4, #20]
   179c4:	mov	r2, #44	; 0x2c
   179c8:	strb	r2, [r1]
   179cc:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   179d0:	mov	r5, r0
   179d4:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   179d8:	mov	r6, r0
   179dc:	mov	r0, r4
   179e0:	mov	r1, r7
   179e4:	mov	r2, r8
   179e8:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   179ec:	ldr	r0, [r4, #20]
   179f0:	ldr	r1, [r4, #32]
   179f4:	add	r1, r1, #1
   179f8:	str	r1, [r4, #32]
   179fc:	add	r1, r0, #1
   17a00:	str	r1, [r4, #20]
   17a04:	mov	r1, #91	; 0x5b
   17a08:	strb	r1, [r0]
   17a0c:	cmp	r6, #0
   17a10:	beq	17aec <flatcc_json_printer_int8_vector_field@@Base+0x174>
   17a14:	add	r7, r5, #4
   17a18:	ldrb	r0, [r4, #25]
   17a1c:	cmp	r0, #0
   17a20:	beq	17a44 <flatcc_json_printer_int8_vector_field@@Base+0xcc>
   17a24:	ldr	r0, [r4, #20]
   17a28:	add	r1, r0, #1
   17a2c:	str	r1, [r4, #20]
   17a30:	mov	r1, #10
   17a34:	strb	r1, [r0]
   17a38:	mov	r0, r4
   17a3c:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   17a40:	b	17a4c <flatcc_json_printer_int8_vector_field@@Base+0xd4>
   17a44:	mov	r0, r4
   17a48:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   17a4c:	mov	r0, r7
   17a50:	bl	15a3c <flatcc_json_printer_int8_field@@Base+0xb0>
   17a54:	ldr	r1, [r4, #20]
   17a58:	bl	15080 <flatcc_json_printer_int8@@Base+0x2c>
   17a5c:	ldr	r1, [r4, #20]
   17a60:	add	r0, r1, r0
   17a64:	str	r0, [r4, #20]
   17a68:	subs	r6, r6, #1
   17a6c:	beq	17aec <flatcc_json_printer_int8_vector_field@@Base+0x174>
   17a70:	add	r5, r5, #5
   17a74:	mov	r7, #44	; 0x2c
   17a78:	mov	r8, #10
   17a7c:	b	17ab0 <flatcc_json_printer_int8_vector_field@@Base+0x138>
   17a80:	mov	r0, r4
   17a84:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   17a88:	mov	r0, r5
   17a8c:	bl	15a3c <flatcc_json_printer_int8_field@@Base+0xb0>
   17a90:	ldr	r1, [r4, #20]
   17a94:	bl	15080 <flatcc_json_printer_int8@@Base+0x2c>
   17a98:	ldr	r1, [r4, #20]
   17a9c:	add	r0, r1, r0
   17aa0:	str	r0, [r4, #20]
   17aa4:	add	r5, r5, #1
   17aa8:	cmp	r6, #0
   17aac:	beq	17aec <flatcc_json_printer_int8_vector_field@@Base+0x174>
   17ab0:	ldr	r0, [r4, #20]
   17ab4:	add	r1, r0, #1
   17ab8:	str	r1, [r4, #20]
   17abc:	strb	r7, [r0]
   17ac0:	sub	r6, r6, #1
   17ac4:	ldrb	r0, [r4, #25]
   17ac8:	cmp	r0, #0
   17acc:	beq	17a80 <flatcc_json_printer_int8_vector_field@@Base+0x108>
   17ad0:	ldr	r0, [r4, #20]
   17ad4:	add	r1, r0, #1
   17ad8:	str	r1, [r4, #20]
   17adc:	strb	r8, [r0]
   17ae0:	mov	r0, r4
   17ae4:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   17ae8:	b	17a88 <flatcc_json_printer_int8_vector_field@@Base+0x110>
   17aec:	ldrb	r0, [r4, #25]
   17af0:	cmp	r0, #0
   17af4:	beq	17b20 <flatcc_json_printer_int8_vector_field@@Base+0x1a8>
   17af8:	ldr	r0, [r4, #20]
   17afc:	add	r1, r0, #1
   17b00:	str	r1, [r4, #20]
   17b04:	mov	r1, #10
   17b08:	strb	r1, [r0]
   17b0c:	ldr	r0, [r4, #32]
   17b10:	sub	r0, r0, #1
   17b14:	str	r0, [r4, #32]
   17b18:	mov	r0, r4
   17b1c:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   17b20:	ldr	r0, [r4, #20]
   17b24:	add	r1, r0, #1
   17b28:	str	r1, [r4, #20]
   17b2c:	mov	r1, #93	; 0x5d
   17b30:	strb	r1, [r0]
   17b34:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017b38 <flatcc_json_printer_int16_vector_field@@Base>:
   17b38:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17b3c:	add	fp, sp, #24
   17b40:	mov	r7, r3
   17b44:	mov	r5, r1
   17b48:	mov	r4, r0
   17b4c:	mov	r0, r1
   17b50:	mov	r1, r2
   17b54:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   17b58:	cmp	r0, #0
   17b5c:	beq	17cf4 <flatcc_json_printer_int16_vector_field@@Base+0x1bc>
   17b60:	ldr	r8, [fp, #8]
   17b64:	ldr	r1, [r5, #16]
   17b68:	add	r2, r1, #1
   17b6c:	str	r2, [r5, #16]
   17b70:	cmp	r1, #0
   17b74:	beq	17b8c <flatcc_json_printer_int16_vector_field@@Base+0x54>
   17b78:	ldr	r1, [r4, #20]
   17b7c:	add	r2, r1, #1
   17b80:	str	r2, [r4, #20]
   17b84:	mov	r2, #44	; 0x2c
   17b88:	strb	r2, [r1]
   17b8c:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   17b90:	mov	r5, r0
   17b94:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   17b98:	mov	r6, r0
   17b9c:	mov	r0, r4
   17ba0:	mov	r1, r7
   17ba4:	mov	r2, r8
   17ba8:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   17bac:	ldr	r0, [r4, #20]
   17bb0:	ldr	r1, [r4, #32]
   17bb4:	add	r1, r1, #1
   17bb8:	str	r1, [r4, #32]
   17bbc:	add	r1, r0, #1
   17bc0:	str	r1, [r4, #20]
   17bc4:	mov	r1, #91	; 0x5b
   17bc8:	strb	r1, [r0]
   17bcc:	cmp	r6, #0
   17bd0:	beq	17cac <flatcc_json_printer_int16_vector_field@@Base+0x174>
   17bd4:	add	r7, r5, #4
   17bd8:	ldrb	r0, [r4, #25]
   17bdc:	cmp	r0, #0
   17be0:	beq	17c04 <flatcc_json_printer_int16_vector_field@@Base+0xcc>
   17be4:	ldr	r0, [r4, #20]
   17be8:	add	r1, r0, #1
   17bec:	str	r1, [r4, #20]
   17bf0:	mov	r1, #10
   17bf4:	strb	r1, [r0]
   17bf8:	mov	r0, r4
   17bfc:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   17c00:	b	17c0c <flatcc_json_printer_int16_vector_field@@Base+0xd4>
   17c04:	mov	r0, r4
   17c08:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   17c0c:	mov	r0, r7
   17c10:	bl	15af4 <flatcc_json_printer_int16_field@@Base+0xb0>
   17c14:	ldr	r1, [r4, #20]
   17c18:	bl	150dc <flatcc_json_printer_int16@@Base+0x2c>
   17c1c:	ldr	r1, [r4, #20]
   17c20:	add	r0, r1, r0
   17c24:	str	r0, [r4, #20]
   17c28:	subs	r6, r6, #1
   17c2c:	beq	17cac <flatcc_json_printer_int16_vector_field@@Base+0x174>
   17c30:	add	r5, r5, #6
   17c34:	mov	r7, #44	; 0x2c
   17c38:	mov	r8, #10
   17c3c:	b	17c70 <flatcc_json_printer_int16_vector_field@@Base+0x138>
   17c40:	mov	r0, r4
   17c44:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   17c48:	mov	r0, r5
   17c4c:	bl	15af4 <flatcc_json_printer_int16_field@@Base+0xb0>
   17c50:	ldr	r1, [r4, #20]
   17c54:	bl	150dc <flatcc_json_printer_int16@@Base+0x2c>
   17c58:	ldr	r1, [r4, #20]
   17c5c:	add	r0, r1, r0
   17c60:	str	r0, [r4, #20]
   17c64:	add	r5, r5, #2
   17c68:	cmp	r6, #0
   17c6c:	beq	17cac <flatcc_json_printer_int16_vector_field@@Base+0x174>
   17c70:	ldr	r0, [r4, #20]
   17c74:	add	r1, r0, #1
   17c78:	str	r1, [r4, #20]
   17c7c:	strb	r7, [r0]
   17c80:	sub	r6, r6, #1
   17c84:	ldrb	r0, [r4, #25]
   17c88:	cmp	r0, #0
   17c8c:	beq	17c40 <flatcc_json_printer_int16_vector_field@@Base+0x108>
   17c90:	ldr	r0, [r4, #20]
   17c94:	add	r1, r0, #1
   17c98:	str	r1, [r4, #20]
   17c9c:	strb	r8, [r0]
   17ca0:	mov	r0, r4
   17ca4:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   17ca8:	b	17c48 <flatcc_json_printer_int16_vector_field@@Base+0x110>
   17cac:	ldrb	r0, [r4, #25]
   17cb0:	cmp	r0, #0
   17cb4:	beq	17ce0 <flatcc_json_printer_int16_vector_field@@Base+0x1a8>
   17cb8:	ldr	r0, [r4, #20]
   17cbc:	add	r1, r0, #1
   17cc0:	str	r1, [r4, #20]
   17cc4:	mov	r1, #10
   17cc8:	strb	r1, [r0]
   17ccc:	ldr	r0, [r4, #32]
   17cd0:	sub	r0, r0, #1
   17cd4:	str	r0, [r4, #32]
   17cd8:	mov	r0, r4
   17cdc:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   17ce0:	ldr	r0, [r4, #20]
   17ce4:	add	r1, r0, #1
   17ce8:	str	r1, [r4, #20]
   17cec:	mov	r1, #93	; 0x5d
   17cf0:	strb	r1, [r0]
   17cf4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017cf8 <flatcc_json_printer_int32_vector_field@@Base>:
   17cf8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17cfc:	add	fp, sp, #24
   17d00:	mov	r7, r3
   17d04:	mov	r5, r1
   17d08:	mov	r4, r0
   17d0c:	mov	r0, r1
   17d10:	mov	r1, r2
   17d14:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   17d18:	cmp	r0, #0
   17d1c:	beq	17eb4 <flatcc_json_printer_int32_vector_field@@Base+0x1bc>
   17d20:	ldr	r8, [fp, #8]
   17d24:	ldr	r1, [r5, #16]
   17d28:	add	r2, r1, #1
   17d2c:	str	r2, [r5, #16]
   17d30:	cmp	r1, #0
   17d34:	beq	17d4c <flatcc_json_printer_int32_vector_field@@Base+0x54>
   17d38:	ldr	r1, [r4, #20]
   17d3c:	add	r2, r1, #1
   17d40:	str	r2, [r4, #20]
   17d44:	mov	r2, #44	; 0x2c
   17d48:	strb	r2, [r1]
   17d4c:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   17d50:	mov	r5, r0
   17d54:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   17d58:	mov	r6, r0
   17d5c:	mov	r0, r4
   17d60:	mov	r1, r7
   17d64:	mov	r2, r8
   17d68:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   17d6c:	ldr	r0, [r4, #20]
   17d70:	ldr	r1, [r4, #32]
   17d74:	add	r1, r1, #1
   17d78:	str	r1, [r4, #32]
   17d7c:	add	r1, r0, #1
   17d80:	str	r1, [r4, #20]
   17d84:	mov	r1, #91	; 0x5b
   17d88:	strb	r1, [r0]
   17d8c:	cmp	r6, #0
   17d90:	beq	17e6c <flatcc_json_printer_int32_vector_field@@Base+0x174>
   17d94:	add	r7, r5, #4
   17d98:	ldrb	r0, [r4, #25]
   17d9c:	cmp	r0, #0
   17da0:	beq	17dc4 <flatcc_json_printer_int32_vector_field@@Base+0xcc>
   17da4:	ldr	r0, [r4, #20]
   17da8:	add	r1, r0, #1
   17dac:	str	r1, [r4, #20]
   17db0:	mov	r1, #10
   17db4:	strb	r1, [r0]
   17db8:	mov	r0, r4
   17dbc:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   17dc0:	b	17dcc <flatcc_json_printer_int32_vector_field@@Base+0xd4>
   17dc4:	mov	r0, r4
   17dc8:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   17dcc:	mov	r0, r7
   17dd0:	bl	15bac <flatcc_json_printer_int32_field@@Base+0xb0>
   17dd4:	ldr	r1, [r4, #20]
   17dd8:	bl	15138 <flatcc_json_printer_int32@@Base+0x2c>
   17ddc:	ldr	r1, [r4, #20]
   17de0:	add	r0, r1, r0
   17de4:	str	r0, [r4, #20]
   17de8:	subs	r6, r6, #1
   17dec:	beq	17e6c <flatcc_json_printer_int32_vector_field@@Base+0x174>
   17df0:	add	r5, r5, #8
   17df4:	mov	r7, #44	; 0x2c
   17df8:	mov	r8, #10
   17dfc:	b	17e30 <flatcc_json_printer_int32_vector_field@@Base+0x138>
   17e00:	mov	r0, r4
   17e04:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   17e08:	mov	r0, r5
   17e0c:	bl	15bac <flatcc_json_printer_int32_field@@Base+0xb0>
   17e10:	ldr	r1, [r4, #20]
   17e14:	bl	15138 <flatcc_json_printer_int32@@Base+0x2c>
   17e18:	ldr	r1, [r4, #20]
   17e1c:	add	r0, r1, r0
   17e20:	str	r0, [r4, #20]
   17e24:	add	r5, r5, #4
   17e28:	cmp	r6, #0
   17e2c:	beq	17e6c <flatcc_json_printer_int32_vector_field@@Base+0x174>
   17e30:	ldr	r0, [r4, #20]
   17e34:	add	r1, r0, #1
   17e38:	str	r1, [r4, #20]
   17e3c:	strb	r7, [r0]
   17e40:	sub	r6, r6, #1
   17e44:	ldrb	r0, [r4, #25]
   17e48:	cmp	r0, #0
   17e4c:	beq	17e00 <flatcc_json_printer_int32_vector_field@@Base+0x108>
   17e50:	ldr	r0, [r4, #20]
   17e54:	add	r1, r0, #1
   17e58:	str	r1, [r4, #20]
   17e5c:	strb	r8, [r0]
   17e60:	mov	r0, r4
   17e64:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   17e68:	b	17e08 <flatcc_json_printer_int32_vector_field@@Base+0x110>
   17e6c:	ldrb	r0, [r4, #25]
   17e70:	cmp	r0, #0
   17e74:	beq	17ea0 <flatcc_json_printer_int32_vector_field@@Base+0x1a8>
   17e78:	ldr	r0, [r4, #20]
   17e7c:	add	r1, r0, #1
   17e80:	str	r1, [r4, #20]
   17e84:	mov	r1, #10
   17e88:	strb	r1, [r0]
   17e8c:	ldr	r0, [r4, #32]
   17e90:	sub	r0, r0, #1
   17e94:	str	r0, [r4, #32]
   17e98:	mov	r0, r4
   17e9c:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   17ea0:	ldr	r0, [r4, #20]
   17ea4:	add	r1, r0, #1
   17ea8:	str	r1, [r4, #20]
   17eac:	mov	r1, #93	; 0x5d
   17eb0:	strb	r1, [r0]
   17eb4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017eb8 <flatcc_json_printer_int64_vector_field@@Base>:
   17eb8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17ebc:	add	fp, sp, #24
   17ec0:	mov	r7, r3
   17ec4:	mov	r5, r1
   17ec8:	mov	r4, r0
   17ecc:	mov	r0, r1
   17ed0:	mov	r1, r2
   17ed4:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   17ed8:	cmp	r0, #0
   17edc:	beq	18074 <flatcc_json_printer_int64_vector_field@@Base+0x1bc>
   17ee0:	ldr	r8, [fp, #8]
   17ee4:	ldr	r1, [r5, #16]
   17ee8:	add	r2, r1, #1
   17eec:	str	r2, [r5, #16]
   17ef0:	cmp	r1, #0
   17ef4:	beq	17f0c <flatcc_json_printer_int64_vector_field@@Base+0x54>
   17ef8:	ldr	r1, [r4, #20]
   17efc:	add	r2, r1, #1
   17f00:	str	r2, [r4, #20]
   17f04:	mov	r2, #44	; 0x2c
   17f08:	strb	r2, [r1]
   17f0c:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   17f10:	mov	r5, r0
   17f14:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   17f18:	mov	r6, r0
   17f1c:	mov	r0, r4
   17f20:	mov	r1, r7
   17f24:	mov	r2, r8
   17f28:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   17f2c:	ldr	r0, [r4, #20]
   17f30:	ldr	r1, [r4, #32]
   17f34:	add	r1, r1, #1
   17f38:	str	r1, [r4, #32]
   17f3c:	add	r1, r0, #1
   17f40:	str	r1, [r4, #20]
   17f44:	mov	r1, #91	; 0x5b
   17f48:	strb	r1, [r0]
   17f4c:	cmp	r6, #0
   17f50:	beq	1802c <flatcc_json_printer_int64_vector_field@@Base+0x174>
   17f54:	add	r7, r5, #4
   17f58:	ldrb	r0, [r4, #25]
   17f5c:	cmp	r0, #0
   17f60:	beq	17f84 <flatcc_json_printer_int64_vector_field@@Base+0xcc>
   17f64:	ldr	r0, [r4, #20]
   17f68:	add	r1, r0, #1
   17f6c:	str	r1, [r4, #20]
   17f70:	mov	r1, #10
   17f74:	strb	r1, [r0]
   17f78:	mov	r0, r4
   17f7c:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   17f80:	b	17f8c <flatcc_json_printer_int64_vector_field@@Base+0xd4>
   17f84:	mov	r0, r4
   17f88:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   17f8c:	mov	r0, r7
   17f90:	bl	15c88 <flatcc_json_printer_int64_field@@Base+0xd4>
   17f94:	ldr	r2, [r4, #20]
   17f98:	bl	15190 <flatcc_json_printer_int64@@Base+0x30>
   17f9c:	ldr	r1, [r4, #20]
   17fa0:	add	r0, r1, r0
   17fa4:	str	r0, [r4, #20]
   17fa8:	subs	r6, r6, #1
   17fac:	beq	1802c <flatcc_json_printer_int64_vector_field@@Base+0x174>
   17fb0:	add	r5, r5, #12
   17fb4:	mov	r7, #44	; 0x2c
   17fb8:	mov	r8, #10
   17fbc:	b	17ff0 <flatcc_json_printer_int64_vector_field@@Base+0x138>
   17fc0:	mov	r0, r4
   17fc4:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   17fc8:	mov	r0, r5
   17fcc:	bl	15c88 <flatcc_json_printer_int64_field@@Base+0xd4>
   17fd0:	ldr	r2, [r4, #20]
   17fd4:	bl	15190 <flatcc_json_printer_int64@@Base+0x30>
   17fd8:	ldr	r1, [r4, #20]
   17fdc:	add	r0, r1, r0
   17fe0:	str	r0, [r4, #20]
   17fe4:	add	r5, r5, #8
   17fe8:	cmp	r6, #0
   17fec:	beq	1802c <flatcc_json_printer_int64_vector_field@@Base+0x174>
   17ff0:	ldr	r0, [r4, #20]
   17ff4:	add	r1, r0, #1
   17ff8:	str	r1, [r4, #20]
   17ffc:	strb	r7, [r0]
   18000:	sub	r6, r6, #1
   18004:	ldrb	r0, [r4, #25]
   18008:	cmp	r0, #0
   1800c:	beq	17fc0 <flatcc_json_printer_int64_vector_field@@Base+0x108>
   18010:	ldr	r0, [r4, #20]
   18014:	add	r1, r0, #1
   18018:	str	r1, [r4, #20]
   1801c:	strb	r8, [r0]
   18020:	mov	r0, r4
   18024:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   18028:	b	17fc8 <flatcc_json_printer_int64_vector_field@@Base+0x110>
   1802c:	ldrb	r0, [r4, #25]
   18030:	cmp	r0, #0
   18034:	beq	18060 <flatcc_json_printer_int64_vector_field@@Base+0x1a8>
   18038:	ldr	r0, [r4, #20]
   1803c:	add	r1, r0, #1
   18040:	str	r1, [r4, #20]
   18044:	mov	r1, #10
   18048:	strb	r1, [r0]
   1804c:	ldr	r0, [r4, #32]
   18050:	sub	r0, r0, #1
   18054:	str	r0, [r4, #32]
   18058:	mov	r0, r4
   1805c:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   18060:	ldr	r0, [r4, #20]
   18064:	add	r1, r0, #1
   18068:	str	r1, [r4, #20]
   1806c:	mov	r1, #93	; 0x5d
   18070:	strb	r1, [r0]
   18074:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00018078 <flatcc_json_printer_bool_vector_field@@Base>:
   18078:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1807c:	add	fp, sp, #24
   18080:	mov	r7, r3
   18084:	mov	r5, r1
   18088:	mov	r4, r0
   1808c:	mov	r0, r1
   18090:	mov	r1, r2
   18094:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   18098:	cmp	r0, #0
   1809c:	beq	18234 <flatcc_json_printer_bool_vector_field@@Base+0x1bc>
   180a0:	ldr	r8, [fp, #8]
   180a4:	ldr	r1, [r5, #16]
   180a8:	add	r2, r1, #1
   180ac:	str	r2, [r5, #16]
   180b0:	cmp	r1, #0
   180b4:	beq	180cc <flatcc_json_printer_bool_vector_field@@Base+0x54>
   180b8:	ldr	r1, [r4, #20]
   180bc:	add	r2, r1, #1
   180c0:	str	r2, [r4, #20]
   180c4:	mov	r2, #44	; 0x2c
   180c8:	strb	r2, [r1]
   180cc:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   180d0:	mov	r5, r0
   180d4:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   180d8:	mov	r6, r0
   180dc:	mov	r0, r4
   180e0:	mov	r1, r7
   180e4:	mov	r2, r8
   180e8:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   180ec:	ldr	r0, [r4, #20]
   180f0:	ldr	r1, [r4, #32]
   180f4:	add	r1, r1, #1
   180f8:	str	r1, [r4, #32]
   180fc:	add	r1, r0, #1
   18100:	str	r1, [r4, #20]
   18104:	mov	r1, #91	; 0x5b
   18108:	strb	r1, [r0]
   1810c:	cmp	r6, #0
   18110:	beq	181ec <flatcc_json_printer_bool_vector_field@@Base+0x174>
   18114:	add	r7, r5, #4
   18118:	ldrb	r0, [r4, #25]
   1811c:	cmp	r0, #0
   18120:	beq	18144 <flatcc_json_printer_bool_vector_field@@Base+0xcc>
   18124:	ldr	r0, [r4, #20]
   18128:	add	r1, r0, #1
   1812c:	str	r1, [r4, #20]
   18130:	mov	r1, #10
   18134:	strb	r1, [r0]
   18138:	mov	r0, r4
   1813c:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   18140:	b	1814c <flatcc_json_printer_bool_vector_field@@Base+0xd4>
   18144:	mov	r0, r4
   18148:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   1814c:	mov	r0, r7
   18150:	bl	15d40 <flatcc_json_printer_bool_field@@Base+0xb0>
   18154:	ldr	r1, [r4, #20]
   18158:	bl	15d48 <flatcc_json_printer_bool_field@@Base+0xb8>
   1815c:	ldr	r1, [r4, #20]
   18160:	add	r0, r1, r0
   18164:	str	r0, [r4, #20]
   18168:	subs	r6, r6, #1
   1816c:	beq	181ec <flatcc_json_printer_bool_vector_field@@Base+0x174>
   18170:	add	r5, r5, #5
   18174:	mov	r7, #44	; 0x2c
   18178:	mov	r8, #10
   1817c:	b	181b0 <flatcc_json_printer_bool_vector_field@@Base+0x138>
   18180:	mov	r0, r4
   18184:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   18188:	mov	r0, r5
   1818c:	bl	15d40 <flatcc_json_printer_bool_field@@Base+0xb0>
   18190:	ldr	r1, [r4, #20]
   18194:	bl	15d48 <flatcc_json_printer_bool_field@@Base+0xb8>
   18198:	ldr	r1, [r4, #20]
   1819c:	add	r0, r1, r0
   181a0:	str	r0, [r4, #20]
   181a4:	add	r5, r5, #1
   181a8:	cmp	r6, #0
   181ac:	beq	181ec <flatcc_json_printer_bool_vector_field@@Base+0x174>
   181b0:	ldr	r0, [r4, #20]
   181b4:	add	r1, r0, #1
   181b8:	str	r1, [r4, #20]
   181bc:	strb	r7, [r0]
   181c0:	sub	r6, r6, #1
   181c4:	ldrb	r0, [r4, #25]
   181c8:	cmp	r0, #0
   181cc:	beq	18180 <flatcc_json_printer_bool_vector_field@@Base+0x108>
   181d0:	ldr	r0, [r4, #20]
   181d4:	add	r1, r0, #1
   181d8:	str	r1, [r4, #20]
   181dc:	strb	r8, [r0]
   181e0:	mov	r0, r4
   181e4:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   181e8:	b	18188 <flatcc_json_printer_bool_vector_field@@Base+0x110>
   181ec:	ldrb	r0, [r4, #25]
   181f0:	cmp	r0, #0
   181f4:	beq	18220 <flatcc_json_printer_bool_vector_field@@Base+0x1a8>
   181f8:	ldr	r0, [r4, #20]
   181fc:	add	r1, r0, #1
   18200:	str	r1, [r4, #20]
   18204:	mov	r1, #10
   18208:	strb	r1, [r0]
   1820c:	ldr	r0, [r4, #32]
   18210:	sub	r0, r0, #1
   18214:	str	r0, [r4, #32]
   18218:	mov	r0, r4
   1821c:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   18220:	ldr	r0, [r4, #20]
   18224:	add	r1, r0, #1
   18228:	str	r1, [r4, #20]
   1822c:	mov	r1, #93	; 0x5d
   18230:	strb	r1, [r0]
   18234:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00018238 <flatcc_json_printer_float_vector_field@@Base>:
   18238:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1823c:	add	fp, sp, #24
   18240:	mov	r7, r3
   18244:	mov	r5, r1
   18248:	mov	r4, r0
   1824c:	mov	r0, r1
   18250:	mov	r1, r2
   18254:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   18258:	cmp	r0, #0
   1825c:	beq	183fc <flatcc_json_printer_float_vector_field@@Base+0x1c4>
   18260:	ldr	r8, [fp, #8]
   18264:	ldr	r1, [r5, #16]
   18268:	add	r2, r1, #1
   1826c:	str	r2, [r5, #16]
   18270:	cmp	r1, #0
   18274:	beq	1828c <flatcc_json_printer_float_vector_field@@Base+0x54>
   18278:	ldr	r1, [r4, #20]
   1827c:	add	r2, r1, #1
   18280:	str	r2, [r4, #20]
   18284:	mov	r2, #44	; 0x2c
   18288:	strb	r2, [r1]
   1828c:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   18290:	mov	r5, r0
   18294:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   18298:	mov	r6, r0
   1829c:	mov	r0, r4
   182a0:	mov	r1, r7
   182a4:	mov	r2, r8
   182a8:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   182ac:	ldr	r0, [r4, #20]
   182b0:	ldr	r1, [r4, #32]
   182b4:	add	r1, r1, #1
   182b8:	str	r1, [r4, #32]
   182bc:	add	r1, r0, #1
   182c0:	str	r1, [r4, #20]
   182c4:	mov	r1, #91	; 0x5b
   182c8:	strb	r1, [r0]
   182cc:	cmp	r6, #0
   182d0:	beq	183b4 <flatcc_json_printer_float_vector_field@@Base+0x17c>
   182d4:	add	r7, r5, #4
   182d8:	ldrb	r0, [r4, #25]
   182dc:	cmp	r0, #0
   182e0:	beq	18304 <flatcc_json_printer_float_vector_field@@Base+0xcc>
   182e4:	ldr	r0, [r4, #20]
   182e8:	add	r1, r0, #1
   182ec:	str	r1, [r4, #20]
   182f0:	mov	r1, #10
   182f4:	strb	r1, [r0]
   182f8:	mov	r0, r4
   182fc:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   18300:	b	1830c <flatcc_json_printer_float_vector_field@@Base+0xd4>
   18304:	mov	r0, r4
   18308:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   1830c:	mov	r0, r7
   18310:	bl	15e48 <flatcc_json_printer_float_field@@Base+0xc0>
   18314:	ldr	r0, [r4, #20]
   18318:	vcvt.f64.f32	d0, s0
   1831c:	bl	13f80 <flatcc_json_printer_fmt_float@@Base+0x8>
   18320:	ldr	r1, [r4, #20]
   18324:	add	r0, r1, r0
   18328:	str	r0, [r4, #20]
   1832c:	subs	r6, r6, #1
   18330:	beq	183b4 <flatcc_json_printer_float_vector_field@@Base+0x17c>
   18334:	add	r5, r5, #8
   18338:	mov	r7, #44	; 0x2c
   1833c:	mov	r8, #10
   18340:	b	18378 <flatcc_json_printer_float_vector_field@@Base+0x140>
   18344:	mov	r0, r4
   18348:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   1834c:	mov	r0, r5
   18350:	bl	15e48 <flatcc_json_printer_float_field@@Base+0xc0>
   18354:	ldr	r0, [r4, #20]
   18358:	vcvt.f64.f32	d0, s0
   1835c:	bl	13f80 <flatcc_json_printer_fmt_float@@Base+0x8>
   18360:	ldr	r1, [r4, #20]
   18364:	add	r0, r1, r0
   18368:	str	r0, [r4, #20]
   1836c:	add	r5, r5, #4
   18370:	cmp	r6, #0
   18374:	beq	183b4 <flatcc_json_printer_float_vector_field@@Base+0x17c>
   18378:	ldr	r0, [r4, #20]
   1837c:	add	r1, r0, #1
   18380:	str	r1, [r4, #20]
   18384:	strb	r7, [r0]
   18388:	sub	r6, r6, #1
   1838c:	ldrb	r0, [r4, #25]
   18390:	cmp	r0, #0
   18394:	beq	18344 <flatcc_json_printer_float_vector_field@@Base+0x10c>
   18398:	ldr	r0, [r4, #20]
   1839c:	add	r1, r0, #1
   183a0:	str	r1, [r4, #20]
   183a4:	strb	r8, [r0]
   183a8:	mov	r0, r4
   183ac:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   183b0:	b	1834c <flatcc_json_printer_float_vector_field@@Base+0x114>
   183b4:	ldrb	r0, [r4, #25]
   183b8:	cmp	r0, #0
   183bc:	beq	183e8 <flatcc_json_printer_float_vector_field@@Base+0x1b0>
   183c0:	ldr	r0, [r4, #20]
   183c4:	add	r1, r0, #1
   183c8:	str	r1, [r4, #20]
   183cc:	mov	r1, #10
   183d0:	strb	r1, [r0]
   183d4:	ldr	r0, [r4, #32]
   183d8:	sub	r0, r0, #1
   183dc:	str	r0, [r4, #32]
   183e0:	mov	r0, r4
   183e4:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   183e8:	ldr	r0, [r4, #20]
   183ec:	add	r1, r0, #1
   183f0:	str	r1, [r4, #20]
   183f4:	mov	r1, #93	; 0x5d
   183f8:	strb	r1, [r0]
   183fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00018400 <flatcc_json_printer_double_vector_field@@Base>:
   18400:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18404:	add	fp, sp, #24
   18408:	mov	r7, r3
   1840c:	mov	r5, r1
   18410:	mov	r4, r0
   18414:	mov	r0, r1
   18418:	mov	r1, r2
   1841c:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   18420:	cmp	r0, #0
   18424:	beq	185bc <flatcc_json_printer_double_vector_field@@Base+0x1bc>
   18428:	ldr	r8, [fp, #8]
   1842c:	ldr	r1, [r5, #16]
   18430:	add	r2, r1, #1
   18434:	str	r2, [r5, #16]
   18438:	cmp	r1, #0
   1843c:	beq	18454 <flatcc_json_printer_double_vector_field@@Base+0x54>
   18440:	ldr	r1, [r4, #20]
   18444:	add	r2, r1, #1
   18448:	str	r2, [r4, #20]
   1844c:	mov	r2, #44	; 0x2c
   18450:	strb	r2, [r1]
   18454:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   18458:	mov	r5, r0
   1845c:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   18460:	mov	r6, r0
   18464:	mov	r0, r4
   18468:	mov	r1, r7
   1846c:	mov	r2, r8
   18470:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   18474:	ldr	r0, [r4, #20]
   18478:	ldr	r1, [r4, #32]
   1847c:	add	r1, r1, #1
   18480:	str	r1, [r4, #32]
   18484:	add	r1, r0, #1
   18488:	str	r1, [r4, #20]
   1848c:	mov	r1, #91	; 0x5b
   18490:	strb	r1, [r0]
   18494:	cmp	r6, #0
   18498:	beq	18574 <flatcc_json_printer_double_vector_field@@Base+0x174>
   1849c:	add	r7, r5, #4
   184a0:	ldrb	r0, [r4, #25]
   184a4:	cmp	r0, #0
   184a8:	beq	184cc <flatcc_json_printer_double_vector_field@@Base+0xcc>
   184ac:	ldr	r0, [r4, #20]
   184b0:	add	r1, r0, #1
   184b4:	str	r1, [r4, #20]
   184b8:	mov	r1, #10
   184bc:	strb	r1, [r0]
   184c0:	mov	r0, r4
   184c4:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   184c8:	b	184d4 <flatcc_json_printer_double_vector_field@@Base+0xd4>
   184cc:	mov	r0, r4
   184d0:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   184d4:	mov	r0, r7
   184d8:	bl	15f10 <flatcc_json_printer_double_field@@Base+0xc0>
   184dc:	ldr	r0, [r4, #20]
   184e0:	bl	13f80 <flatcc_json_printer_fmt_float@@Base+0x8>
   184e4:	ldr	r1, [r4, #20]
   184e8:	add	r0, r1, r0
   184ec:	str	r0, [r4, #20]
   184f0:	subs	r6, r6, #1
   184f4:	beq	18574 <flatcc_json_printer_double_vector_field@@Base+0x174>
   184f8:	add	r5, r5, #12
   184fc:	mov	r7, #44	; 0x2c
   18500:	mov	r8, #10
   18504:	b	18538 <flatcc_json_printer_double_vector_field@@Base+0x138>
   18508:	mov	r0, r4
   1850c:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   18510:	mov	r0, r5
   18514:	bl	15f10 <flatcc_json_printer_double_field@@Base+0xc0>
   18518:	ldr	r0, [r4, #20]
   1851c:	bl	13f80 <flatcc_json_printer_fmt_float@@Base+0x8>
   18520:	ldr	r1, [r4, #20]
   18524:	add	r0, r1, r0
   18528:	str	r0, [r4, #20]
   1852c:	add	r5, r5, #8
   18530:	cmp	r6, #0
   18534:	beq	18574 <flatcc_json_printer_double_vector_field@@Base+0x174>
   18538:	ldr	r0, [r4, #20]
   1853c:	add	r1, r0, #1
   18540:	str	r1, [r4, #20]
   18544:	strb	r7, [r0]
   18548:	sub	r6, r6, #1
   1854c:	ldrb	r0, [r4, #25]
   18550:	cmp	r0, #0
   18554:	beq	18508 <flatcc_json_printer_double_vector_field@@Base+0x108>
   18558:	ldr	r0, [r4, #20]
   1855c:	add	r1, r0, #1
   18560:	str	r1, [r4, #20]
   18564:	strb	r8, [r0]
   18568:	mov	r0, r4
   1856c:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   18570:	b	18510 <flatcc_json_printer_double_vector_field@@Base+0x110>
   18574:	ldrb	r0, [r4, #25]
   18578:	cmp	r0, #0
   1857c:	beq	185a8 <flatcc_json_printer_double_vector_field@@Base+0x1a8>
   18580:	ldr	r0, [r4, #20]
   18584:	add	r1, r0, #1
   18588:	str	r1, [r4, #20]
   1858c:	mov	r1, #10
   18590:	strb	r1, [r0]
   18594:	ldr	r0, [r4, #32]
   18598:	sub	r0, r0, #1
   1859c:	str	r0, [r4, #32]
   185a0:	mov	r0, r4
   185a4:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   185a8:	ldr	r0, [r4, #20]
   185ac:	add	r1, r0, #1
   185b0:	str	r1, [r4, #20]
   185b4:	mov	r1, #93	; 0x5d
   185b8:	strb	r1, [r0]
   185bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000185c0 <flatcc_json_printer_utype_enum_vector_field@@Base>:
   185c0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   185c4:	add	fp, sp, #24
   185c8:	mov	r6, r3
   185cc:	mov	r5, r1
   185d0:	mov	r4, r0
   185d4:	ldrb	r0, [r0, #27]
   185d8:	cmp	r0, #0
   185dc:	beq	185f4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x34>
   185e0:	mov	r0, r4
   185e4:	mov	r1, r5
   185e8:	mov	r3, r6
   185ec:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   185f0:	b	170a8 <flatcc_json_printer_utype_vector_field@@Base>
   185f4:	ldr	r7, [fp, #12]
   185f8:	ldr	r9, [fp, #8]
   185fc:	mov	r0, r5
   18600:	mov	r1, r2
   18604:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   18608:	cmp	r0, #0
   1860c:	beq	18790 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d0>
   18610:	ldr	r1, [r5, #16]
   18614:	add	r2, r1, #1
   18618:	str	r2, [r5, #16]
   1861c:	cmp	r1, #0
   18620:	beq	18638 <flatcc_json_printer_utype_enum_vector_field@@Base+0x78>
   18624:	ldr	r1, [r4, #20]
   18628:	add	r2, r1, #1
   1862c:	str	r2, [r4, #20]
   18630:	mov	r2, #44	; 0x2c
   18634:	strb	r2, [r1]
   18638:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   1863c:	mov	r5, r0
   18640:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   18644:	mov	r8, r0
   18648:	mov	r0, r4
   1864c:	mov	r1, r6
   18650:	mov	r2, r9
   18654:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   18658:	ldr	r0, [r4, #20]
   1865c:	ldr	r1, [r4, #32]
   18660:	add	r1, r1, #1
   18664:	str	r1, [r4, #32]
   18668:	add	r1, r0, #1
   1866c:	str	r1, [r4, #20]
   18670:	mov	r1, #91	; 0x5b
   18674:	strb	r1, [r0]
   18678:	cmp	r8, #0
   1867c:	beq	18748 <flatcc_json_printer_utype_enum_vector_field@@Base+0x188>
   18680:	add	r6, r5, #4
   18684:	ldrb	r0, [r4, #25]
   18688:	cmp	r0, #0
   1868c:	beq	186b0 <flatcc_json_printer_utype_enum_vector_field@@Base+0xf0>
   18690:	ldr	r0, [r4, #20]
   18694:	add	r1, r0, #1
   18698:	str	r1, [r4, #20]
   1869c:	mov	r1, #10
   186a0:	strb	r1, [r0]
   186a4:	mov	r0, r4
   186a8:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   186ac:	b	186b8 <flatcc_json_printer_utype_enum_vector_field@@Base+0xf8>
   186b0:	mov	r0, r4
   186b4:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   186b8:	mov	r0, r6
   186bc:	bl	17270 <flatcc_json_printer_utype_vector_field@@Base+0x1c8>
   186c0:	mov	r1, r0
   186c4:	mov	r0, r4
   186c8:	blx	r7
   186cc:	subs	r6, r8, #1
   186d0:	beq	18748 <flatcc_json_printer_utype_enum_vector_field@@Base+0x188>
   186d4:	add	r5, r5, #5
   186d8:	mov	r8, #44	; 0x2c
   186dc:	mov	r9, #10
   186e0:	b	1870c <flatcc_json_printer_utype_enum_vector_field@@Base+0x14c>
   186e4:	mov	r0, r4
   186e8:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   186ec:	mov	r0, r5
   186f0:	bl	17270 <flatcc_json_printer_utype_vector_field@@Base+0x1c8>
   186f4:	mov	r1, r0
   186f8:	mov	r0, r4
   186fc:	blx	r7
   18700:	add	r5, r5, #1
   18704:	cmp	r6, #0
   18708:	beq	18748 <flatcc_json_printer_utype_enum_vector_field@@Base+0x188>
   1870c:	ldr	r0, [r4, #20]
   18710:	add	r1, r0, #1
   18714:	str	r1, [r4, #20]
   18718:	strb	r8, [r0]
   1871c:	sub	r6, r6, #1
   18720:	ldrb	r0, [r4, #25]
   18724:	cmp	r0, #0
   18728:	beq	186e4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x124>
   1872c:	ldr	r0, [r4, #20]
   18730:	add	r1, r0, #1
   18734:	str	r1, [r4, #20]
   18738:	strb	r9, [r0]
   1873c:	mov	r0, r4
   18740:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   18744:	b	186ec <flatcc_json_printer_utype_enum_vector_field@@Base+0x12c>
   18748:	ldrb	r0, [r4, #25]
   1874c:	cmp	r0, #0
   18750:	beq	1877c <flatcc_json_printer_utype_enum_vector_field@@Base+0x1bc>
   18754:	ldr	r0, [r4, #20]
   18758:	add	r1, r0, #1
   1875c:	str	r1, [r4, #20]
   18760:	mov	r1, #10
   18764:	strb	r1, [r0]
   18768:	ldr	r0, [r4, #32]
   1876c:	sub	r0, r0, #1
   18770:	str	r0, [r4, #32]
   18774:	mov	r0, r4
   18778:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   1877c:	ldr	r0, [r4, #20]
   18780:	add	r1, r0, #1
   18784:	str	r1, [r4, #20]
   18788:	mov	r1, #93	; 0x5d
   1878c:	strb	r1, [r0]
   18790:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00018794 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   18794:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18798:	add	fp, sp, #24
   1879c:	mov	r6, r3
   187a0:	mov	r5, r1
   187a4:	mov	r4, r0
   187a8:	ldrb	r0, [r0, #27]
   187ac:	cmp	r0, #0
   187b0:	beq	187c8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x34>
   187b4:	mov	r0, r4
   187b8:	mov	r1, r5
   187bc:	mov	r3, r6
   187c0:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   187c4:	b	17278 <flatcc_json_printer_uint8_vector_field@@Base>
   187c8:	ldr	r7, [fp, #12]
   187cc:	ldr	r9, [fp, #8]
   187d0:	mov	r0, r5
   187d4:	mov	r1, r2
   187d8:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   187dc:	cmp	r0, #0
   187e0:	beq	18964 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d0>
   187e4:	ldr	r1, [r5, #16]
   187e8:	add	r2, r1, #1
   187ec:	str	r2, [r5, #16]
   187f0:	cmp	r1, #0
   187f4:	beq	1880c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x78>
   187f8:	ldr	r1, [r4, #20]
   187fc:	add	r2, r1, #1
   18800:	str	r2, [r4, #20]
   18804:	mov	r2, #44	; 0x2c
   18808:	strb	r2, [r1]
   1880c:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   18810:	mov	r5, r0
   18814:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   18818:	mov	r8, r0
   1881c:	mov	r0, r4
   18820:	mov	r1, r6
   18824:	mov	r2, r9
   18828:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   1882c:	ldr	r0, [r4, #20]
   18830:	ldr	r1, [r4, #32]
   18834:	add	r1, r1, #1
   18838:	str	r1, [r4, #32]
   1883c:	add	r1, r0, #1
   18840:	str	r1, [r4, #20]
   18844:	mov	r1, #91	; 0x5b
   18848:	strb	r1, [r0]
   1884c:	cmp	r8, #0
   18850:	beq	1891c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x188>
   18854:	add	r6, r5, #4
   18858:	ldrb	r0, [r4, #25]
   1885c:	cmp	r0, #0
   18860:	beq	18884 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xf0>
   18864:	ldr	r0, [r4, #20]
   18868:	add	r1, r0, #1
   1886c:	str	r1, [r4, #20]
   18870:	mov	r1, #10
   18874:	strb	r1, [r0]
   18878:	mov	r0, r4
   1887c:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   18880:	b	1888c <flatcc_json_printer_uint8_enum_vector_field@@Base+0xf8>
   18884:	mov	r0, r4
   18888:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   1888c:	mov	r0, r6
   18890:	bl	15738 <flatcc_json_printer_uint8_field@@Base+0xb0>
   18894:	mov	r1, r0
   18898:	mov	r0, r4
   1889c:	blx	r7
   188a0:	subs	r6, r8, #1
   188a4:	beq	1891c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x188>
   188a8:	add	r5, r5, #5
   188ac:	mov	r8, #44	; 0x2c
   188b0:	mov	r9, #10
   188b4:	b	188e0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x14c>
   188b8:	mov	r0, r4
   188bc:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   188c0:	mov	r0, r5
   188c4:	bl	15738 <flatcc_json_printer_uint8_field@@Base+0xb0>
   188c8:	mov	r1, r0
   188cc:	mov	r0, r4
   188d0:	blx	r7
   188d4:	add	r5, r5, #1
   188d8:	cmp	r6, #0
   188dc:	beq	1891c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x188>
   188e0:	ldr	r0, [r4, #20]
   188e4:	add	r1, r0, #1
   188e8:	str	r1, [r4, #20]
   188ec:	strb	r8, [r0]
   188f0:	sub	r6, r6, #1
   188f4:	ldrb	r0, [r4, #25]
   188f8:	cmp	r0, #0
   188fc:	beq	188b8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x124>
   18900:	ldr	r0, [r4, #20]
   18904:	add	r1, r0, #1
   18908:	str	r1, [r4, #20]
   1890c:	strb	r9, [r0]
   18910:	mov	r0, r4
   18914:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   18918:	b	188c0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x12c>
   1891c:	ldrb	r0, [r4, #25]
   18920:	cmp	r0, #0
   18924:	beq	18950 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1bc>
   18928:	ldr	r0, [r4, #20]
   1892c:	add	r1, r0, #1
   18930:	str	r1, [r4, #20]
   18934:	mov	r1, #10
   18938:	strb	r1, [r0]
   1893c:	ldr	r0, [r4, #32]
   18940:	sub	r0, r0, #1
   18944:	str	r0, [r4, #32]
   18948:	mov	r0, r4
   1894c:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   18950:	ldr	r0, [r4, #20]
   18954:	add	r1, r0, #1
   18958:	str	r1, [r4, #20]
   1895c:	mov	r1, #93	; 0x5d
   18960:	strb	r1, [r0]
   18964:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00018968 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   18968:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1896c:	add	fp, sp, #24
   18970:	mov	r6, r3
   18974:	mov	r5, r1
   18978:	mov	r4, r0
   1897c:	ldrb	r0, [r0, #27]
   18980:	cmp	r0, #0
   18984:	beq	1899c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x34>
   18988:	mov	r0, r4
   1898c:	mov	r1, r5
   18990:	mov	r3, r6
   18994:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   18998:	b	17438 <flatcc_json_printer_uint16_vector_field@@Base>
   1899c:	ldr	r7, [fp, #12]
   189a0:	ldr	r9, [fp, #8]
   189a4:	mov	r0, r5
   189a8:	mov	r1, r2
   189ac:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   189b0:	cmp	r0, #0
   189b4:	beq	18b38 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d0>
   189b8:	ldr	r1, [r5, #16]
   189bc:	add	r2, r1, #1
   189c0:	str	r2, [r5, #16]
   189c4:	cmp	r1, #0
   189c8:	beq	189e0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x78>
   189cc:	ldr	r1, [r4, #20]
   189d0:	add	r2, r1, #1
   189d4:	str	r2, [r4, #20]
   189d8:	mov	r2, #44	; 0x2c
   189dc:	strb	r2, [r1]
   189e0:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   189e4:	mov	r5, r0
   189e8:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   189ec:	mov	r8, r0
   189f0:	mov	r0, r4
   189f4:	mov	r1, r6
   189f8:	mov	r2, r9
   189fc:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   18a00:	ldr	r0, [r4, #20]
   18a04:	ldr	r1, [r4, #32]
   18a08:	add	r1, r1, #1
   18a0c:	str	r1, [r4, #32]
   18a10:	add	r1, r0, #1
   18a14:	str	r1, [r4, #20]
   18a18:	mov	r1, #91	; 0x5b
   18a1c:	strb	r1, [r0]
   18a20:	cmp	r8, #0
   18a24:	beq	18af0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x188>
   18a28:	add	r6, r5, #4
   18a2c:	ldrb	r0, [r4, #25]
   18a30:	cmp	r0, #0
   18a34:	beq	18a58 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xf0>
   18a38:	ldr	r0, [r4, #20]
   18a3c:	add	r1, r0, #1
   18a40:	str	r1, [r4, #20]
   18a44:	mov	r1, #10
   18a48:	strb	r1, [r0]
   18a4c:	mov	r0, r4
   18a50:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   18a54:	b	18a60 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xf8>
   18a58:	mov	r0, r4
   18a5c:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   18a60:	mov	r0, r6
   18a64:	bl	157f0 <flatcc_json_printer_uint16_field@@Base+0xb0>
   18a68:	mov	r1, r0
   18a6c:	mov	r0, r4
   18a70:	blx	r7
   18a74:	subs	r6, r8, #1
   18a78:	beq	18af0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x188>
   18a7c:	add	r5, r5, #6
   18a80:	mov	r8, #44	; 0x2c
   18a84:	mov	r9, #10
   18a88:	b	18ab4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x14c>
   18a8c:	mov	r0, r4
   18a90:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   18a94:	mov	r0, r5
   18a98:	bl	157f0 <flatcc_json_printer_uint16_field@@Base+0xb0>
   18a9c:	mov	r1, r0
   18aa0:	mov	r0, r4
   18aa4:	blx	r7
   18aa8:	add	r5, r5, #2
   18aac:	cmp	r6, #0
   18ab0:	beq	18af0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x188>
   18ab4:	ldr	r0, [r4, #20]
   18ab8:	add	r1, r0, #1
   18abc:	str	r1, [r4, #20]
   18ac0:	strb	r8, [r0]
   18ac4:	sub	r6, r6, #1
   18ac8:	ldrb	r0, [r4, #25]
   18acc:	cmp	r0, #0
   18ad0:	beq	18a8c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x124>
   18ad4:	ldr	r0, [r4, #20]
   18ad8:	add	r1, r0, #1
   18adc:	str	r1, [r4, #20]
   18ae0:	strb	r9, [r0]
   18ae4:	mov	r0, r4
   18ae8:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   18aec:	b	18a94 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x12c>
   18af0:	ldrb	r0, [r4, #25]
   18af4:	cmp	r0, #0
   18af8:	beq	18b24 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1bc>
   18afc:	ldr	r0, [r4, #20]
   18b00:	add	r1, r0, #1
   18b04:	str	r1, [r4, #20]
   18b08:	mov	r1, #10
   18b0c:	strb	r1, [r0]
   18b10:	ldr	r0, [r4, #32]
   18b14:	sub	r0, r0, #1
   18b18:	str	r0, [r4, #32]
   18b1c:	mov	r0, r4
   18b20:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   18b24:	ldr	r0, [r4, #20]
   18b28:	add	r1, r0, #1
   18b2c:	str	r1, [r4, #20]
   18b30:	mov	r1, #93	; 0x5d
   18b34:	strb	r1, [r0]
   18b38:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00018b3c <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   18b3c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18b40:	add	fp, sp, #24
   18b44:	mov	r6, r3
   18b48:	mov	r5, r1
   18b4c:	mov	r4, r0
   18b50:	ldrb	r0, [r0, #27]
   18b54:	cmp	r0, #0
   18b58:	beq	18b70 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x34>
   18b5c:	mov	r0, r4
   18b60:	mov	r1, r5
   18b64:	mov	r3, r6
   18b68:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   18b6c:	b	175f8 <flatcc_json_printer_uint32_vector_field@@Base>
   18b70:	ldr	r7, [fp, #12]
   18b74:	ldr	r9, [fp, #8]
   18b78:	mov	r0, r5
   18b7c:	mov	r1, r2
   18b80:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   18b84:	cmp	r0, #0
   18b88:	beq	18d0c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d0>
   18b8c:	ldr	r1, [r5, #16]
   18b90:	add	r2, r1, #1
   18b94:	str	r2, [r5, #16]
   18b98:	cmp	r1, #0
   18b9c:	beq	18bb4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x78>
   18ba0:	ldr	r1, [r4, #20]
   18ba4:	add	r2, r1, #1
   18ba8:	str	r2, [r4, #20]
   18bac:	mov	r2, #44	; 0x2c
   18bb0:	strb	r2, [r1]
   18bb4:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   18bb8:	mov	r5, r0
   18bbc:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   18bc0:	mov	r8, r0
   18bc4:	mov	r0, r4
   18bc8:	mov	r1, r6
   18bcc:	mov	r2, r9
   18bd0:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   18bd4:	ldr	r0, [r4, #20]
   18bd8:	ldr	r1, [r4, #32]
   18bdc:	add	r1, r1, #1
   18be0:	str	r1, [r4, #32]
   18be4:	add	r1, r0, #1
   18be8:	str	r1, [r4, #20]
   18bec:	mov	r1, #91	; 0x5b
   18bf0:	strb	r1, [r0]
   18bf4:	cmp	r8, #0
   18bf8:	beq	18cc4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x188>
   18bfc:	add	r6, r5, #4
   18c00:	ldrb	r0, [r4, #25]
   18c04:	cmp	r0, #0
   18c08:	beq	18c2c <flatcc_json_printer_uint32_enum_vector_field@@Base+0xf0>
   18c0c:	ldr	r0, [r4, #20]
   18c10:	add	r1, r0, #1
   18c14:	str	r1, [r4, #20]
   18c18:	mov	r1, #10
   18c1c:	strb	r1, [r0]
   18c20:	mov	r0, r4
   18c24:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   18c28:	b	18c34 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xf8>
   18c2c:	mov	r0, r4
   18c30:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   18c34:	mov	r0, r6
   18c38:	bl	158a8 <flatcc_json_printer_uint32_field@@Base+0xb0>
   18c3c:	mov	r1, r0
   18c40:	mov	r0, r4
   18c44:	blx	r7
   18c48:	subs	r6, r8, #1
   18c4c:	beq	18cc4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x188>
   18c50:	add	r5, r5, #8
   18c54:	mov	r8, #44	; 0x2c
   18c58:	mov	r9, #10
   18c5c:	b	18c88 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x14c>
   18c60:	mov	r0, r4
   18c64:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   18c68:	mov	r0, r5
   18c6c:	bl	158a8 <flatcc_json_printer_uint32_field@@Base+0xb0>
   18c70:	mov	r1, r0
   18c74:	mov	r0, r4
   18c78:	blx	r7
   18c7c:	add	r5, r5, #4
   18c80:	cmp	r6, #0
   18c84:	beq	18cc4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x188>
   18c88:	ldr	r0, [r4, #20]
   18c8c:	add	r1, r0, #1
   18c90:	str	r1, [r4, #20]
   18c94:	strb	r8, [r0]
   18c98:	sub	r6, r6, #1
   18c9c:	ldrb	r0, [r4, #25]
   18ca0:	cmp	r0, #0
   18ca4:	beq	18c60 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x124>
   18ca8:	ldr	r0, [r4, #20]
   18cac:	add	r1, r0, #1
   18cb0:	str	r1, [r4, #20]
   18cb4:	strb	r9, [r0]
   18cb8:	mov	r0, r4
   18cbc:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   18cc0:	b	18c68 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x12c>
   18cc4:	ldrb	r0, [r4, #25]
   18cc8:	cmp	r0, #0
   18ccc:	beq	18cf8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1bc>
   18cd0:	ldr	r0, [r4, #20]
   18cd4:	add	r1, r0, #1
   18cd8:	str	r1, [r4, #20]
   18cdc:	mov	r1, #10
   18ce0:	strb	r1, [r0]
   18ce4:	ldr	r0, [r4, #32]
   18ce8:	sub	r0, r0, #1
   18cec:	str	r0, [r4, #32]
   18cf0:	mov	r0, r4
   18cf4:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   18cf8:	ldr	r0, [r4, #20]
   18cfc:	add	r1, r0, #1
   18d00:	str	r1, [r4, #20]
   18d04:	mov	r1, #93	; 0x5d
   18d08:	strb	r1, [r0]
   18d0c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00018d10 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   18d10:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18d14:	add	fp, sp, #24
   18d18:	mov	r7, r3
   18d1c:	mov	r5, r1
   18d20:	mov	r4, r0
   18d24:	ldrb	r0, [r0, #27]
   18d28:	cmp	r0, #0
   18d2c:	beq	18d44 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x34>
   18d30:	mov	r0, r4
   18d34:	mov	r1, r5
   18d38:	mov	r3, r7
   18d3c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   18d40:	b	177b8 <flatcc_json_printer_uint64_vector_field@@Base>
   18d44:	ldr	r6, [fp, #12]
   18d48:	ldr	r9, [fp, #8]
   18d4c:	mov	r0, r5
   18d50:	mov	r1, r2
   18d54:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   18d58:	cmp	r0, #0
   18d5c:	beq	18ee8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d8>
   18d60:	ldr	r1, [r5, #16]
   18d64:	add	r2, r1, #1
   18d68:	str	r2, [r5, #16]
   18d6c:	cmp	r1, #0
   18d70:	beq	18d88 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x78>
   18d74:	ldr	r1, [r4, #20]
   18d78:	add	r2, r1, #1
   18d7c:	str	r2, [r4, #20]
   18d80:	mov	r2, #44	; 0x2c
   18d84:	strb	r2, [r1]
   18d88:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   18d8c:	mov	r5, r0
   18d90:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   18d94:	mov	r8, r0
   18d98:	mov	r0, r4
   18d9c:	mov	r1, r7
   18da0:	mov	r2, r9
   18da4:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   18da8:	ldr	r0, [r4, #20]
   18dac:	ldr	r1, [r4, #32]
   18db0:	add	r1, r1, #1
   18db4:	str	r1, [r4, #32]
   18db8:	add	r1, r0, #1
   18dbc:	str	r1, [r4, #20]
   18dc0:	mov	r1, #91	; 0x5b
   18dc4:	strb	r1, [r0]
   18dc8:	cmp	r8, #0
   18dcc:	beq	18ea0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x190>
   18dd0:	add	r7, r5, #4
   18dd4:	ldrb	r0, [r4, #25]
   18dd8:	cmp	r0, #0
   18ddc:	beq	18e00 <flatcc_json_printer_uint64_enum_vector_field@@Base+0xf0>
   18de0:	ldr	r0, [r4, #20]
   18de4:	add	r1, r0, #1
   18de8:	str	r1, [r4, #20]
   18dec:	mov	r1, #10
   18df0:	strb	r1, [r0]
   18df4:	mov	r0, r4
   18df8:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   18dfc:	b	18e08 <flatcc_json_printer_uint64_enum_vector_field@@Base+0xf8>
   18e00:	mov	r0, r4
   18e04:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   18e08:	mov	r0, r7
   18e0c:	bl	15984 <flatcc_json_printer_uint64_field@@Base+0xd4>
   18e10:	mov	r2, r0
   18e14:	mov	r0, r4
   18e18:	mov	r3, r1
   18e1c:	blx	r6
   18e20:	subs	r7, r8, #1
   18e24:	beq	18ea0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x190>
   18e28:	add	r5, r5, #12
   18e2c:	mov	r8, #44	; 0x2c
   18e30:	mov	r9, #10
   18e34:	b	18e64 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x154>
   18e38:	mov	r0, r4
   18e3c:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   18e40:	mov	r0, r5
   18e44:	bl	15984 <flatcc_json_printer_uint64_field@@Base+0xd4>
   18e48:	mov	r2, r0
   18e4c:	mov	r0, r4
   18e50:	mov	r3, r1
   18e54:	blx	r6
   18e58:	add	r5, r5, #8
   18e5c:	cmp	r7, #0
   18e60:	beq	18ea0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x190>
   18e64:	ldr	r0, [r4, #20]
   18e68:	add	r1, r0, #1
   18e6c:	str	r1, [r4, #20]
   18e70:	strb	r8, [r0]
   18e74:	sub	r7, r7, #1
   18e78:	ldrb	r0, [r4, #25]
   18e7c:	cmp	r0, #0
   18e80:	beq	18e38 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x128>
   18e84:	ldr	r0, [r4, #20]
   18e88:	add	r1, r0, #1
   18e8c:	str	r1, [r4, #20]
   18e90:	strb	r9, [r0]
   18e94:	mov	r0, r4
   18e98:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   18e9c:	b	18e40 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x130>
   18ea0:	ldrb	r0, [r4, #25]
   18ea4:	cmp	r0, #0
   18ea8:	beq	18ed4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1c4>
   18eac:	ldr	r0, [r4, #20]
   18eb0:	add	r1, r0, #1
   18eb4:	str	r1, [r4, #20]
   18eb8:	mov	r1, #10
   18ebc:	strb	r1, [r0]
   18ec0:	ldr	r0, [r4, #32]
   18ec4:	sub	r0, r0, #1
   18ec8:	str	r0, [r4, #32]
   18ecc:	mov	r0, r4
   18ed0:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   18ed4:	ldr	r0, [r4, #20]
   18ed8:	add	r1, r0, #1
   18edc:	str	r1, [r4, #20]
   18ee0:	mov	r1, #93	; 0x5d
   18ee4:	strb	r1, [r0]
   18ee8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00018eec <flatcc_json_printer_int8_enum_vector_field@@Base>:
   18eec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18ef0:	add	fp, sp, #24
   18ef4:	mov	r6, r3
   18ef8:	mov	r5, r1
   18efc:	mov	r4, r0
   18f00:	ldrb	r0, [r0, #27]
   18f04:	cmp	r0, #0
   18f08:	beq	18f20 <flatcc_json_printer_int8_enum_vector_field@@Base+0x34>
   18f0c:	mov	r0, r4
   18f10:	mov	r1, r5
   18f14:	mov	r3, r6
   18f18:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   18f1c:	b	17978 <flatcc_json_printer_int8_vector_field@@Base>
   18f20:	ldr	r7, [fp, #12]
   18f24:	ldr	r9, [fp, #8]
   18f28:	mov	r0, r5
   18f2c:	mov	r1, r2
   18f30:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   18f34:	cmp	r0, #0
   18f38:	beq	190bc <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d0>
   18f3c:	ldr	r1, [r5, #16]
   18f40:	add	r2, r1, #1
   18f44:	str	r2, [r5, #16]
   18f48:	cmp	r1, #0
   18f4c:	beq	18f64 <flatcc_json_printer_int8_enum_vector_field@@Base+0x78>
   18f50:	ldr	r1, [r4, #20]
   18f54:	add	r2, r1, #1
   18f58:	str	r2, [r4, #20]
   18f5c:	mov	r2, #44	; 0x2c
   18f60:	strb	r2, [r1]
   18f64:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   18f68:	mov	r5, r0
   18f6c:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   18f70:	mov	r8, r0
   18f74:	mov	r0, r4
   18f78:	mov	r1, r6
   18f7c:	mov	r2, r9
   18f80:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   18f84:	ldr	r0, [r4, #20]
   18f88:	ldr	r1, [r4, #32]
   18f8c:	add	r1, r1, #1
   18f90:	str	r1, [r4, #32]
   18f94:	add	r1, r0, #1
   18f98:	str	r1, [r4, #20]
   18f9c:	mov	r1, #91	; 0x5b
   18fa0:	strb	r1, [r0]
   18fa4:	cmp	r8, #0
   18fa8:	beq	19074 <flatcc_json_printer_int8_enum_vector_field@@Base+0x188>
   18fac:	add	r6, r5, #4
   18fb0:	ldrb	r0, [r4, #25]
   18fb4:	cmp	r0, #0
   18fb8:	beq	18fdc <flatcc_json_printer_int8_enum_vector_field@@Base+0xf0>
   18fbc:	ldr	r0, [r4, #20]
   18fc0:	add	r1, r0, #1
   18fc4:	str	r1, [r4, #20]
   18fc8:	mov	r1, #10
   18fcc:	strb	r1, [r0]
   18fd0:	mov	r0, r4
   18fd4:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   18fd8:	b	18fe4 <flatcc_json_printer_int8_enum_vector_field@@Base+0xf8>
   18fdc:	mov	r0, r4
   18fe0:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   18fe4:	mov	r0, r6
   18fe8:	bl	15a3c <flatcc_json_printer_int8_field@@Base+0xb0>
   18fec:	mov	r1, r0
   18ff0:	mov	r0, r4
   18ff4:	blx	r7
   18ff8:	subs	r6, r8, #1
   18ffc:	beq	19074 <flatcc_json_printer_int8_enum_vector_field@@Base+0x188>
   19000:	add	r5, r5, #5
   19004:	mov	r8, #44	; 0x2c
   19008:	mov	r9, #10
   1900c:	b	19038 <flatcc_json_printer_int8_enum_vector_field@@Base+0x14c>
   19010:	mov	r0, r4
   19014:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   19018:	mov	r0, r5
   1901c:	bl	15a3c <flatcc_json_printer_int8_field@@Base+0xb0>
   19020:	mov	r1, r0
   19024:	mov	r0, r4
   19028:	blx	r7
   1902c:	add	r5, r5, #1
   19030:	cmp	r6, #0
   19034:	beq	19074 <flatcc_json_printer_int8_enum_vector_field@@Base+0x188>
   19038:	ldr	r0, [r4, #20]
   1903c:	add	r1, r0, #1
   19040:	str	r1, [r4, #20]
   19044:	strb	r8, [r0]
   19048:	sub	r6, r6, #1
   1904c:	ldrb	r0, [r4, #25]
   19050:	cmp	r0, #0
   19054:	beq	19010 <flatcc_json_printer_int8_enum_vector_field@@Base+0x124>
   19058:	ldr	r0, [r4, #20]
   1905c:	add	r1, r0, #1
   19060:	str	r1, [r4, #20]
   19064:	strb	r9, [r0]
   19068:	mov	r0, r4
   1906c:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   19070:	b	19018 <flatcc_json_printer_int8_enum_vector_field@@Base+0x12c>
   19074:	ldrb	r0, [r4, #25]
   19078:	cmp	r0, #0
   1907c:	beq	190a8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1bc>
   19080:	ldr	r0, [r4, #20]
   19084:	add	r1, r0, #1
   19088:	str	r1, [r4, #20]
   1908c:	mov	r1, #10
   19090:	strb	r1, [r0]
   19094:	ldr	r0, [r4, #32]
   19098:	sub	r0, r0, #1
   1909c:	str	r0, [r4, #32]
   190a0:	mov	r0, r4
   190a4:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   190a8:	ldr	r0, [r4, #20]
   190ac:	add	r1, r0, #1
   190b0:	str	r1, [r4, #20]
   190b4:	mov	r1, #93	; 0x5d
   190b8:	strb	r1, [r0]
   190bc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000190c0 <flatcc_json_printer_int16_enum_vector_field@@Base>:
   190c0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   190c4:	add	fp, sp, #24
   190c8:	mov	r6, r3
   190cc:	mov	r5, r1
   190d0:	mov	r4, r0
   190d4:	ldrb	r0, [r0, #27]
   190d8:	cmp	r0, #0
   190dc:	beq	190f4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x34>
   190e0:	mov	r0, r4
   190e4:	mov	r1, r5
   190e8:	mov	r3, r6
   190ec:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   190f0:	b	17b38 <flatcc_json_printer_int16_vector_field@@Base>
   190f4:	ldr	r7, [fp, #12]
   190f8:	ldr	r9, [fp, #8]
   190fc:	mov	r0, r5
   19100:	mov	r1, r2
   19104:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   19108:	cmp	r0, #0
   1910c:	beq	19290 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d0>
   19110:	ldr	r1, [r5, #16]
   19114:	add	r2, r1, #1
   19118:	str	r2, [r5, #16]
   1911c:	cmp	r1, #0
   19120:	beq	19138 <flatcc_json_printer_int16_enum_vector_field@@Base+0x78>
   19124:	ldr	r1, [r4, #20]
   19128:	add	r2, r1, #1
   1912c:	str	r2, [r4, #20]
   19130:	mov	r2, #44	; 0x2c
   19134:	strb	r2, [r1]
   19138:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   1913c:	mov	r5, r0
   19140:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   19144:	mov	r8, r0
   19148:	mov	r0, r4
   1914c:	mov	r1, r6
   19150:	mov	r2, r9
   19154:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   19158:	ldr	r0, [r4, #20]
   1915c:	ldr	r1, [r4, #32]
   19160:	add	r1, r1, #1
   19164:	str	r1, [r4, #32]
   19168:	add	r1, r0, #1
   1916c:	str	r1, [r4, #20]
   19170:	mov	r1, #91	; 0x5b
   19174:	strb	r1, [r0]
   19178:	cmp	r8, #0
   1917c:	beq	19248 <flatcc_json_printer_int16_enum_vector_field@@Base+0x188>
   19180:	add	r6, r5, #4
   19184:	ldrb	r0, [r4, #25]
   19188:	cmp	r0, #0
   1918c:	beq	191b0 <flatcc_json_printer_int16_enum_vector_field@@Base+0xf0>
   19190:	ldr	r0, [r4, #20]
   19194:	add	r1, r0, #1
   19198:	str	r1, [r4, #20]
   1919c:	mov	r1, #10
   191a0:	strb	r1, [r0]
   191a4:	mov	r0, r4
   191a8:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   191ac:	b	191b8 <flatcc_json_printer_int16_enum_vector_field@@Base+0xf8>
   191b0:	mov	r0, r4
   191b4:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   191b8:	mov	r0, r6
   191bc:	bl	15af4 <flatcc_json_printer_int16_field@@Base+0xb0>
   191c0:	mov	r1, r0
   191c4:	mov	r0, r4
   191c8:	blx	r7
   191cc:	subs	r6, r8, #1
   191d0:	beq	19248 <flatcc_json_printer_int16_enum_vector_field@@Base+0x188>
   191d4:	add	r5, r5, #6
   191d8:	mov	r8, #44	; 0x2c
   191dc:	mov	r9, #10
   191e0:	b	1920c <flatcc_json_printer_int16_enum_vector_field@@Base+0x14c>
   191e4:	mov	r0, r4
   191e8:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   191ec:	mov	r0, r5
   191f0:	bl	15af4 <flatcc_json_printer_int16_field@@Base+0xb0>
   191f4:	mov	r1, r0
   191f8:	mov	r0, r4
   191fc:	blx	r7
   19200:	add	r5, r5, #2
   19204:	cmp	r6, #0
   19208:	beq	19248 <flatcc_json_printer_int16_enum_vector_field@@Base+0x188>
   1920c:	ldr	r0, [r4, #20]
   19210:	add	r1, r0, #1
   19214:	str	r1, [r4, #20]
   19218:	strb	r8, [r0]
   1921c:	sub	r6, r6, #1
   19220:	ldrb	r0, [r4, #25]
   19224:	cmp	r0, #0
   19228:	beq	191e4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x124>
   1922c:	ldr	r0, [r4, #20]
   19230:	add	r1, r0, #1
   19234:	str	r1, [r4, #20]
   19238:	strb	r9, [r0]
   1923c:	mov	r0, r4
   19240:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   19244:	b	191ec <flatcc_json_printer_int16_enum_vector_field@@Base+0x12c>
   19248:	ldrb	r0, [r4, #25]
   1924c:	cmp	r0, #0
   19250:	beq	1927c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1bc>
   19254:	ldr	r0, [r4, #20]
   19258:	add	r1, r0, #1
   1925c:	str	r1, [r4, #20]
   19260:	mov	r1, #10
   19264:	strb	r1, [r0]
   19268:	ldr	r0, [r4, #32]
   1926c:	sub	r0, r0, #1
   19270:	str	r0, [r4, #32]
   19274:	mov	r0, r4
   19278:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   1927c:	ldr	r0, [r4, #20]
   19280:	add	r1, r0, #1
   19284:	str	r1, [r4, #20]
   19288:	mov	r1, #93	; 0x5d
   1928c:	strb	r1, [r0]
   19290:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00019294 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   19294:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19298:	add	fp, sp, #24
   1929c:	mov	r6, r3
   192a0:	mov	r5, r1
   192a4:	mov	r4, r0
   192a8:	ldrb	r0, [r0, #27]
   192ac:	cmp	r0, #0
   192b0:	beq	192c8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x34>
   192b4:	mov	r0, r4
   192b8:	mov	r1, r5
   192bc:	mov	r3, r6
   192c0:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   192c4:	b	17cf8 <flatcc_json_printer_int32_vector_field@@Base>
   192c8:	ldr	r7, [fp, #12]
   192cc:	ldr	r9, [fp, #8]
   192d0:	mov	r0, r5
   192d4:	mov	r1, r2
   192d8:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   192dc:	cmp	r0, #0
   192e0:	beq	19464 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d0>
   192e4:	ldr	r1, [r5, #16]
   192e8:	add	r2, r1, #1
   192ec:	str	r2, [r5, #16]
   192f0:	cmp	r1, #0
   192f4:	beq	1930c <flatcc_json_printer_int32_enum_vector_field@@Base+0x78>
   192f8:	ldr	r1, [r4, #20]
   192fc:	add	r2, r1, #1
   19300:	str	r2, [r4, #20]
   19304:	mov	r2, #44	; 0x2c
   19308:	strb	r2, [r1]
   1930c:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   19310:	mov	r5, r0
   19314:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   19318:	mov	r8, r0
   1931c:	mov	r0, r4
   19320:	mov	r1, r6
   19324:	mov	r2, r9
   19328:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   1932c:	ldr	r0, [r4, #20]
   19330:	ldr	r1, [r4, #32]
   19334:	add	r1, r1, #1
   19338:	str	r1, [r4, #32]
   1933c:	add	r1, r0, #1
   19340:	str	r1, [r4, #20]
   19344:	mov	r1, #91	; 0x5b
   19348:	strb	r1, [r0]
   1934c:	cmp	r8, #0
   19350:	beq	1941c <flatcc_json_printer_int32_enum_vector_field@@Base+0x188>
   19354:	add	r6, r5, #4
   19358:	ldrb	r0, [r4, #25]
   1935c:	cmp	r0, #0
   19360:	beq	19384 <flatcc_json_printer_int32_enum_vector_field@@Base+0xf0>
   19364:	ldr	r0, [r4, #20]
   19368:	add	r1, r0, #1
   1936c:	str	r1, [r4, #20]
   19370:	mov	r1, #10
   19374:	strb	r1, [r0]
   19378:	mov	r0, r4
   1937c:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   19380:	b	1938c <flatcc_json_printer_int32_enum_vector_field@@Base+0xf8>
   19384:	mov	r0, r4
   19388:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   1938c:	mov	r0, r6
   19390:	bl	15bac <flatcc_json_printer_int32_field@@Base+0xb0>
   19394:	mov	r1, r0
   19398:	mov	r0, r4
   1939c:	blx	r7
   193a0:	subs	r6, r8, #1
   193a4:	beq	1941c <flatcc_json_printer_int32_enum_vector_field@@Base+0x188>
   193a8:	add	r5, r5, #8
   193ac:	mov	r8, #44	; 0x2c
   193b0:	mov	r9, #10
   193b4:	b	193e0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x14c>
   193b8:	mov	r0, r4
   193bc:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   193c0:	mov	r0, r5
   193c4:	bl	15bac <flatcc_json_printer_int32_field@@Base+0xb0>
   193c8:	mov	r1, r0
   193cc:	mov	r0, r4
   193d0:	blx	r7
   193d4:	add	r5, r5, #4
   193d8:	cmp	r6, #0
   193dc:	beq	1941c <flatcc_json_printer_int32_enum_vector_field@@Base+0x188>
   193e0:	ldr	r0, [r4, #20]
   193e4:	add	r1, r0, #1
   193e8:	str	r1, [r4, #20]
   193ec:	strb	r8, [r0]
   193f0:	sub	r6, r6, #1
   193f4:	ldrb	r0, [r4, #25]
   193f8:	cmp	r0, #0
   193fc:	beq	193b8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x124>
   19400:	ldr	r0, [r4, #20]
   19404:	add	r1, r0, #1
   19408:	str	r1, [r4, #20]
   1940c:	strb	r9, [r0]
   19410:	mov	r0, r4
   19414:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   19418:	b	193c0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x12c>
   1941c:	ldrb	r0, [r4, #25]
   19420:	cmp	r0, #0
   19424:	beq	19450 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1bc>
   19428:	ldr	r0, [r4, #20]
   1942c:	add	r1, r0, #1
   19430:	str	r1, [r4, #20]
   19434:	mov	r1, #10
   19438:	strb	r1, [r0]
   1943c:	ldr	r0, [r4, #32]
   19440:	sub	r0, r0, #1
   19444:	str	r0, [r4, #32]
   19448:	mov	r0, r4
   1944c:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   19450:	ldr	r0, [r4, #20]
   19454:	add	r1, r0, #1
   19458:	str	r1, [r4, #20]
   1945c:	mov	r1, #93	; 0x5d
   19460:	strb	r1, [r0]
   19464:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00019468 <flatcc_json_printer_int64_enum_vector_field@@Base>:
   19468:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1946c:	add	fp, sp, #24
   19470:	mov	r7, r3
   19474:	mov	r5, r1
   19478:	mov	r4, r0
   1947c:	ldrb	r0, [r0, #27]
   19480:	cmp	r0, #0
   19484:	beq	1949c <flatcc_json_printer_int64_enum_vector_field@@Base+0x34>
   19488:	mov	r0, r4
   1948c:	mov	r1, r5
   19490:	mov	r3, r7
   19494:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   19498:	b	17eb8 <flatcc_json_printer_int64_vector_field@@Base>
   1949c:	ldr	r6, [fp, #12]
   194a0:	ldr	r9, [fp, #8]
   194a4:	mov	r0, r5
   194a8:	mov	r1, r2
   194ac:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   194b0:	cmp	r0, #0
   194b4:	beq	19640 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d8>
   194b8:	ldr	r1, [r5, #16]
   194bc:	add	r2, r1, #1
   194c0:	str	r2, [r5, #16]
   194c4:	cmp	r1, #0
   194c8:	beq	194e0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x78>
   194cc:	ldr	r1, [r4, #20]
   194d0:	add	r2, r1, #1
   194d4:	str	r2, [r4, #20]
   194d8:	mov	r2, #44	; 0x2c
   194dc:	strb	r2, [r1]
   194e0:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   194e4:	mov	r5, r0
   194e8:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   194ec:	mov	r8, r0
   194f0:	mov	r0, r4
   194f4:	mov	r1, r7
   194f8:	mov	r2, r9
   194fc:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   19500:	ldr	r0, [r4, #20]
   19504:	ldr	r1, [r4, #32]
   19508:	add	r1, r1, #1
   1950c:	str	r1, [r4, #32]
   19510:	add	r1, r0, #1
   19514:	str	r1, [r4, #20]
   19518:	mov	r1, #91	; 0x5b
   1951c:	strb	r1, [r0]
   19520:	cmp	r8, #0
   19524:	beq	195f8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x190>
   19528:	add	r7, r5, #4
   1952c:	ldrb	r0, [r4, #25]
   19530:	cmp	r0, #0
   19534:	beq	19558 <flatcc_json_printer_int64_enum_vector_field@@Base+0xf0>
   19538:	ldr	r0, [r4, #20]
   1953c:	add	r1, r0, #1
   19540:	str	r1, [r4, #20]
   19544:	mov	r1, #10
   19548:	strb	r1, [r0]
   1954c:	mov	r0, r4
   19550:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   19554:	b	19560 <flatcc_json_printer_int64_enum_vector_field@@Base+0xf8>
   19558:	mov	r0, r4
   1955c:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   19560:	mov	r0, r7
   19564:	bl	15c88 <flatcc_json_printer_int64_field@@Base+0xd4>
   19568:	mov	r2, r0
   1956c:	mov	r0, r4
   19570:	mov	r3, r1
   19574:	blx	r6
   19578:	subs	r7, r8, #1
   1957c:	beq	195f8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x190>
   19580:	add	r5, r5, #12
   19584:	mov	r8, #44	; 0x2c
   19588:	mov	r9, #10
   1958c:	b	195bc <flatcc_json_printer_int64_enum_vector_field@@Base+0x154>
   19590:	mov	r0, r4
   19594:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   19598:	mov	r0, r5
   1959c:	bl	15c88 <flatcc_json_printer_int64_field@@Base+0xd4>
   195a0:	mov	r2, r0
   195a4:	mov	r0, r4
   195a8:	mov	r3, r1
   195ac:	blx	r6
   195b0:	add	r5, r5, #8
   195b4:	cmp	r7, #0
   195b8:	beq	195f8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x190>
   195bc:	ldr	r0, [r4, #20]
   195c0:	add	r1, r0, #1
   195c4:	str	r1, [r4, #20]
   195c8:	strb	r8, [r0]
   195cc:	sub	r7, r7, #1
   195d0:	ldrb	r0, [r4, #25]
   195d4:	cmp	r0, #0
   195d8:	beq	19590 <flatcc_json_printer_int64_enum_vector_field@@Base+0x128>
   195dc:	ldr	r0, [r4, #20]
   195e0:	add	r1, r0, #1
   195e4:	str	r1, [r4, #20]
   195e8:	strb	r9, [r0]
   195ec:	mov	r0, r4
   195f0:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   195f4:	b	19598 <flatcc_json_printer_int64_enum_vector_field@@Base+0x130>
   195f8:	ldrb	r0, [r4, #25]
   195fc:	cmp	r0, #0
   19600:	beq	1962c <flatcc_json_printer_int64_enum_vector_field@@Base+0x1c4>
   19604:	ldr	r0, [r4, #20]
   19608:	add	r1, r0, #1
   1960c:	str	r1, [r4, #20]
   19610:	mov	r1, #10
   19614:	strb	r1, [r0]
   19618:	ldr	r0, [r4, #32]
   1961c:	sub	r0, r0, #1
   19620:	str	r0, [r4, #32]
   19624:	mov	r0, r4
   19628:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   1962c:	ldr	r0, [r4, #20]
   19630:	add	r1, r0, #1
   19634:	str	r1, [r4, #20]
   19638:	mov	r1, #93	; 0x5d
   1963c:	strb	r1, [r0]
   19640:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00019644 <flatcc_json_printer_bool_enum_vector_field@@Base>:
   19644:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19648:	add	fp, sp, #24
   1964c:	mov	r6, r3
   19650:	mov	r5, r1
   19654:	mov	r4, r0
   19658:	ldrb	r0, [r0, #27]
   1965c:	cmp	r0, #0
   19660:	beq	19678 <flatcc_json_printer_bool_enum_vector_field@@Base+0x34>
   19664:	mov	r0, r4
   19668:	mov	r1, r5
   1966c:	mov	r3, r6
   19670:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   19674:	b	18078 <flatcc_json_printer_bool_vector_field@@Base>
   19678:	ldr	r7, [fp, #12]
   1967c:	ldr	r9, [fp, #8]
   19680:	mov	r0, r5
   19684:	mov	r1, r2
   19688:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   1968c:	cmp	r0, #0
   19690:	beq	19814 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d0>
   19694:	ldr	r1, [r5, #16]
   19698:	add	r2, r1, #1
   1969c:	str	r2, [r5, #16]
   196a0:	cmp	r1, #0
   196a4:	beq	196bc <flatcc_json_printer_bool_enum_vector_field@@Base+0x78>
   196a8:	ldr	r1, [r4, #20]
   196ac:	add	r2, r1, #1
   196b0:	str	r2, [r4, #20]
   196b4:	mov	r2, #44	; 0x2c
   196b8:	strb	r2, [r1]
   196bc:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   196c0:	mov	r5, r0
   196c4:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   196c8:	mov	r8, r0
   196cc:	mov	r0, r4
   196d0:	mov	r1, r6
   196d4:	mov	r2, r9
   196d8:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   196dc:	ldr	r0, [r4, #20]
   196e0:	ldr	r1, [r4, #32]
   196e4:	add	r1, r1, #1
   196e8:	str	r1, [r4, #32]
   196ec:	add	r1, r0, #1
   196f0:	str	r1, [r4, #20]
   196f4:	mov	r1, #91	; 0x5b
   196f8:	strb	r1, [r0]
   196fc:	cmp	r8, #0
   19700:	beq	197cc <flatcc_json_printer_bool_enum_vector_field@@Base+0x188>
   19704:	add	r6, r5, #4
   19708:	ldrb	r0, [r4, #25]
   1970c:	cmp	r0, #0
   19710:	beq	19734 <flatcc_json_printer_bool_enum_vector_field@@Base+0xf0>
   19714:	ldr	r0, [r4, #20]
   19718:	add	r1, r0, #1
   1971c:	str	r1, [r4, #20]
   19720:	mov	r1, #10
   19724:	strb	r1, [r0]
   19728:	mov	r0, r4
   1972c:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   19730:	b	1973c <flatcc_json_printer_bool_enum_vector_field@@Base+0xf8>
   19734:	mov	r0, r4
   19738:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   1973c:	mov	r0, r6
   19740:	bl	15d40 <flatcc_json_printer_bool_field@@Base+0xb0>
   19744:	mov	r1, r0
   19748:	mov	r0, r4
   1974c:	blx	r7
   19750:	subs	r6, r8, #1
   19754:	beq	197cc <flatcc_json_printer_bool_enum_vector_field@@Base+0x188>
   19758:	add	r5, r5, #5
   1975c:	mov	r8, #44	; 0x2c
   19760:	mov	r9, #10
   19764:	b	19790 <flatcc_json_printer_bool_enum_vector_field@@Base+0x14c>
   19768:	mov	r0, r4
   1976c:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   19770:	mov	r0, r5
   19774:	bl	15d40 <flatcc_json_printer_bool_field@@Base+0xb0>
   19778:	mov	r1, r0
   1977c:	mov	r0, r4
   19780:	blx	r7
   19784:	add	r5, r5, #1
   19788:	cmp	r6, #0
   1978c:	beq	197cc <flatcc_json_printer_bool_enum_vector_field@@Base+0x188>
   19790:	ldr	r0, [r4, #20]
   19794:	add	r1, r0, #1
   19798:	str	r1, [r4, #20]
   1979c:	strb	r8, [r0]
   197a0:	sub	r6, r6, #1
   197a4:	ldrb	r0, [r4, #25]
   197a8:	cmp	r0, #0
   197ac:	beq	19768 <flatcc_json_printer_bool_enum_vector_field@@Base+0x124>
   197b0:	ldr	r0, [r4, #20]
   197b4:	add	r1, r0, #1
   197b8:	str	r1, [r4, #20]
   197bc:	strb	r9, [r0]
   197c0:	mov	r0, r4
   197c4:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   197c8:	b	19770 <flatcc_json_printer_bool_enum_vector_field@@Base+0x12c>
   197cc:	ldrb	r0, [r4, #25]
   197d0:	cmp	r0, #0
   197d4:	beq	19800 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1bc>
   197d8:	ldr	r0, [r4, #20]
   197dc:	add	r1, r0, #1
   197e0:	str	r1, [r4, #20]
   197e4:	mov	r1, #10
   197e8:	strb	r1, [r0]
   197ec:	ldr	r0, [r4, #32]
   197f0:	sub	r0, r0, #1
   197f4:	str	r0, [r4, #32]
   197f8:	mov	r0, r4
   197fc:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   19800:	ldr	r0, [r4, #20]
   19804:	add	r1, r0, #1
   19808:	str	r1, [r4, #20]
   1980c:	mov	r1, #93	; 0x5d
   19810:	strb	r1, [r0]
   19814:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00019818 <flatcc_json_printer_struct_vector_field@@Base>:
   19818:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1981c:	add	fp, sp, #28
   19820:	sub	sp, sp, #4
   19824:	mov	r7, r3
   19828:	mov	r5, r1
   1982c:	mov	r4, r0
   19830:	mov	r0, r1
   19834:	mov	r1, r2
   19838:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   1983c:	cmp	r0, #0
   19840:	beq	19a98 <flatcc_json_printer_struct_vector_field@@Base+0x280>
   19844:	ldr	r8, [fp, #8]
   19848:	ldr	r1, [r5, #16]
   1984c:	add	r2, r1, #1
   19850:	str	r2, [r5, #16]
   19854:	cmp	r1, #0
   19858:	beq	19870 <flatcc_json_printer_struct_vector_field@@Base+0x58>
   1985c:	ldr	r1, [r4, #20]
   19860:	add	r2, r1, #1
   19864:	str	r2, [r4, #20]
   19868:	mov	r2, #44	; 0x2c
   1986c:	strb	r2, [r1]
   19870:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   19874:	mov	r5, r0
   19878:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   1987c:	mov	r9, r0
   19880:	mov	r0, r4
   19884:	mov	r1, r7
   19888:	mov	r2, r8
   1988c:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   19890:	ldr	r0, [r4, #20]
   19894:	ldr	r1, [r4, #32]
   19898:	add	r1, r1, #1
   1989c:	str	r1, [r4, #32]
   198a0:	add	r1, r0, #1
   198a4:	str	r1, [r4, #20]
   198a8:	mov	r1, #91	; 0x5b
   198ac:	strb	r1, [r0]
   198b0:	cmp	r9, #0
   198b4:	beq	19a50 <flatcc_json_printer_struct_vector_field@@Base+0x238>
   198b8:	add	r8, r5, #4
   198bc:	ldrb	r0, [r4, #25]
   198c0:	cmp	r0, #0
   198c4:	beq	198e8 <flatcc_json_printer_struct_vector_field@@Base+0xd0>
   198c8:	ldr	r0, [r4, #20]
   198cc:	add	r1, r0, #1
   198d0:	str	r1, [r4, #20]
   198d4:	mov	r1, #10
   198d8:	strb	r1, [r0]
   198dc:	mov	r0, r4
   198e0:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   198e4:	b	198f0 <flatcc_json_printer_struct_vector_field@@Base+0xd8>
   198e8:	mov	r0, r4
   198ec:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   198f0:	ldr	r0, [r4, #20]
   198f4:	ldr	r1, [r4, #32]
   198f8:	add	r1, r1, #1
   198fc:	str	r1, [r4, #32]
   19900:	add	r1, r0, #1
   19904:	str	r1, [r4, #20]
   19908:	mov	r1, #123	; 0x7b
   1990c:	strb	r1, [r0]
   19910:	mov	r0, r4
   19914:	mov	r1, r8
   19918:	ldr	r2, [fp, #16]
   1991c:	blx	r2
   19920:	ldrb	r0, [r4, #25]
   19924:	cmp	r0, #0
   19928:	beq	19954 <flatcc_json_printer_struct_vector_field@@Base+0x13c>
   1992c:	ldr	r0, [r4, #20]
   19930:	add	r1, r0, #1
   19934:	str	r1, [r4, #20]
   19938:	mov	r1, #10
   1993c:	strb	r1, [r0]
   19940:	ldr	r0, [r4, #32]
   19944:	sub	r0, r0, #1
   19948:	str	r0, [r4, #32]
   1994c:	mov	r0, r4
   19950:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   19954:	ldr	r0, [r4, #20]
   19958:	add	r1, r0, #1
   1995c:	str	r1, [r4, #20]
   19960:	mov	r1, #125	; 0x7d
   19964:	strb	r1, [r0]
   19968:	subs	r7, r9, #1
   1996c:	beq	19a50 <flatcc_json_printer_struct_vector_field@@Base+0x238>
   19970:	ldr	r9, [fp, #12]
   19974:	add	r0, r9, r5
   19978:	add	r5, r0, #4
   1997c:	mov	r6, #44	; 0x2c
   19980:	mov	sl, #123	; 0x7b
   19984:	mov	r8, #10
   19988:	b	199ac <flatcc_json_printer_struct_vector_field@@Base+0x194>
   1998c:	ldr	r0, [r4, #20]
   19990:	add	r1, r0, #1
   19994:	str	r1, [r4, #20]
   19998:	mov	r1, #125	; 0x7d
   1999c:	strb	r1, [r0]
   199a0:	add	r5, r5, r9
   199a4:	cmp	r7, #0
   199a8:	beq	19a50 <flatcc_json_printer_struct_vector_field@@Base+0x238>
   199ac:	ldr	r0, [r4, #20]
   199b0:	add	r1, r0, #1
   199b4:	str	r1, [r4, #20]
   199b8:	strb	r6, [r0]
   199bc:	ldrb	r0, [r4, #25]
   199c0:	cmp	r0, #0
   199c4:	beq	199e4 <flatcc_json_printer_struct_vector_field@@Base+0x1cc>
   199c8:	ldr	r0, [r4, #20]
   199cc:	add	r1, r0, #1
   199d0:	str	r1, [r4, #20]
   199d4:	strb	r8, [r0]
   199d8:	mov	r0, r4
   199dc:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   199e0:	b	199ec <flatcc_json_printer_struct_vector_field@@Base+0x1d4>
   199e4:	mov	r0, r4
   199e8:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   199ec:	sub	r7, r7, #1
   199f0:	ldr	r0, [r4, #20]
   199f4:	ldr	r1, [r4, #32]
   199f8:	add	r1, r1, #1
   199fc:	str	r1, [r4, #32]
   19a00:	add	r1, r0, #1
   19a04:	str	r1, [r4, #20]
   19a08:	strb	sl, [r0]
   19a0c:	mov	r0, r4
   19a10:	mov	r1, r5
   19a14:	ldr	r2, [fp, #16]
   19a18:	blx	r2
   19a1c:	ldrb	r0, [r4, #25]
   19a20:	cmp	r0, #0
   19a24:	beq	1998c <flatcc_json_printer_struct_vector_field@@Base+0x174>
   19a28:	ldr	r0, [r4, #20]
   19a2c:	add	r1, r0, #1
   19a30:	str	r1, [r4, #20]
   19a34:	strb	r8, [r0]
   19a38:	ldr	r0, [r4, #32]
   19a3c:	sub	r0, r0, #1
   19a40:	str	r0, [r4, #32]
   19a44:	mov	r0, r4
   19a48:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   19a4c:	b	1998c <flatcc_json_printer_struct_vector_field@@Base+0x174>
   19a50:	ldrb	r0, [r4, #25]
   19a54:	cmp	r0, #0
   19a58:	beq	19a84 <flatcc_json_printer_struct_vector_field@@Base+0x26c>
   19a5c:	ldr	r0, [r4, #20]
   19a60:	add	r1, r0, #1
   19a64:	str	r1, [r4, #20]
   19a68:	mov	r1, #10
   19a6c:	strb	r1, [r0]
   19a70:	ldr	r0, [r4, #32]
   19a74:	sub	r0, r0, #1
   19a78:	str	r0, [r4, #32]
   19a7c:	mov	r0, r4
   19a80:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   19a84:	ldr	r0, [r4, #20]
   19a88:	add	r1, r0, #1
   19a8c:	str	r1, [r4, #20]
   19a90:	mov	r1, #93	; 0x5d
   19a94:	strb	r1, [r0]
   19a98:	sub	sp, fp, #28
   19a9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00019aa0 <flatcc_json_printer_string_vector_field@@Base>:
   19aa0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   19aa4:	add	fp, sp, #24
   19aa8:	mov	r7, r3
   19aac:	mov	r5, r1
   19ab0:	mov	r4, r0
   19ab4:	mov	r0, r1
   19ab8:	mov	r1, r2
   19abc:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   19ac0:	cmp	r0, #0
   19ac4:	beq	19c4c <flatcc_json_printer_string_vector_field@@Base+0x1ac>
   19ac8:	ldr	r8, [fp, #8]
   19acc:	ldr	r1, [r5, #16]
   19ad0:	add	r2, r1, #1
   19ad4:	str	r2, [r5, #16]
   19ad8:	cmp	r1, #0
   19adc:	beq	19af4 <flatcc_json_printer_string_vector_field@@Base+0x54>
   19ae0:	ldr	r1, [r4, #20]
   19ae4:	add	r2, r1, #1
   19ae8:	str	r2, [r4, #20]
   19aec:	mov	r2, #44	; 0x2c
   19af0:	strb	r2, [r1]
   19af4:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   19af8:	mov	r5, r0
   19afc:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   19b00:	mov	r6, r0
   19b04:	mov	r0, r4
   19b08:	mov	r1, r7
   19b0c:	mov	r2, r8
   19b10:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   19b14:	ldr	r0, [r4, #20]
   19b18:	ldr	r1, [r4, #32]
   19b1c:	add	r1, r1, #1
   19b20:	str	r1, [r4, #32]
   19b24:	add	r1, r0, #1
   19b28:	str	r1, [r4, #20]
   19b2c:	mov	r1, #91	; 0x5b
   19b30:	strb	r1, [r0]
   19b34:	cmp	r6, #0
   19b38:	beq	19c04 <flatcc_json_printer_string_vector_field@@Base+0x164>
   19b3c:	add	r7, r5, #4
   19b40:	ldrb	r0, [r4, #25]
   19b44:	cmp	r0, #0
   19b48:	beq	19b6c <flatcc_json_printer_string_vector_field@@Base+0xcc>
   19b4c:	ldr	r0, [r4, #20]
   19b50:	add	r1, r0, #1
   19b54:	str	r1, [r4, #20]
   19b58:	mov	r1, #10
   19b5c:	strb	r1, [r0]
   19b60:	mov	r0, r4
   19b64:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   19b68:	b	19b74 <flatcc_json_printer_string_vector_field@@Base+0xd4>
   19b6c:	mov	r0, r4
   19b70:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   19b74:	mov	r0, r7
   19b78:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   19b7c:	mov	r1, r0
   19b80:	mov	r0, r4
   19b84:	bl	15458 <flatcc_json_printer_string_field@@Base+0x150>
   19b88:	subs	r6, r6, #1
   19b8c:	beq	19c04 <flatcc_json_printer_string_vector_field@@Base+0x164>
   19b90:	add	r5, r5, #8
   19b94:	mov	r7, #44	; 0x2c
   19b98:	mov	r8, #10
   19b9c:	b	19bc8 <flatcc_json_printer_string_vector_field@@Base+0x128>
   19ba0:	mov	r0, r4
   19ba4:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   19ba8:	mov	r0, r5
   19bac:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   19bb0:	mov	r1, r0
   19bb4:	mov	r0, r4
   19bb8:	bl	15458 <flatcc_json_printer_string_field@@Base+0x150>
   19bbc:	add	r5, r5, #4
   19bc0:	cmp	r6, #0
   19bc4:	beq	19c04 <flatcc_json_printer_string_vector_field@@Base+0x164>
   19bc8:	ldr	r0, [r4, #20]
   19bcc:	add	r1, r0, #1
   19bd0:	str	r1, [r4, #20]
   19bd4:	strb	r7, [r0]
   19bd8:	sub	r6, r6, #1
   19bdc:	ldrb	r0, [r4, #25]
   19be0:	cmp	r0, #0
   19be4:	beq	19ba0 <flatcc_json_printer_string_vector_field@@Base+0x100>
   19be8:	ldr	r0, [r4, #20]
   19bec:	add	r1, r0, #1
   19bf0:	str	r1, [r4, #20]
   19bf4:	strb	r8, [r0]
   19bf8:	mov	r0, r4
   19bfc:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   19c00:	b	19ba8 <flatcc_json_printer_string_vector_field@@Base+0x108>
   19c04:	ldrb	r0, [r4, #25]
   19c08:	cmp	r0, #0
   19c0c:	beq	19c38 <flatcc_json_printer_string_vector_field@@Base+0x198>
   19c10:	ldr	r0, [r4, #20]
   19c14:	add	r1, r0, #1
   19c18:	str	r1, [r4, #20]
   19c1c:	mov	r1, #10
   19c20:	strb	r1, [r0]
   19c24:	ldr	r0, [r4, #32]
   19c28:	sub	r0, r0, #1
   19c2c:	str	r0, [r4, #32]
   19c30:	mov	r0, r4
   19c34:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   19c38:	ldr	r0, [r4, #20]
   19c3c:	add	r1, r0, #1
   19c40:	str	r1, [r4, #20]
   19c44:	mov	r1, #93	; 0x5d
   19c48:	strb	r1, [r0]
   19c4c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00019c50 <flatcc_json_printer_table_vector_field@@Base>:
   19c50:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19c54:	add	fp, sp, #24
   19c58:	mov	r6, r3
   19c5c:	mov	r5, r1
   19c60:	mov	r4, r0
   19c64:	mov	r0, r1
   19c68:	mov	r1, r2
   19c6c:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   19c70:	cmp	r0, #0
   19c74:	beq	19d9c <flatcc_json_printer_table_vector_field@@Base+0x14c>
   19c78:	ldr	r9, [fp, #8]
   19c7c:	ldr	r1, [r5, #16]
   19c80:	add	r2, r1, #1
   19c84:	str	r2, [r5, #16]
   19c88:	cmp	r1, #0
   19c8c:	beq	19ca4 <flatcc_json_printer_table_vector_field@@Base+0x54>
   19c90:	ldr	r1, [r4, #20]
   19c94:	add	r2, r1, #1
   19c98:	str	r2, [r4, #20]
   19c9c:	mov	r2, #44	; 0x2c
   19ca0:	strb	r2, [r1]
   19ca4:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   19ca8:	mov	r8, r0
   19cac:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   19cb0:	mov	r7, r0
   19cb4:	mov	r0, r4
   19cb8:	mov	r1, r6
   19cbc:	mov	r2, r9
   19cc0:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   19cc4:	ldr	r0, [r4, #20]
   19cc8:	ldr	r1, [r4, #32]
   19ccc:	add	r1, r1, #1
   19cd0:	str	r1, [r4, #32]
   19cd4:	add	r1, r0, #1
   19cd8:	str	r1, [r4, #20]
   19cdc:	mov	r1, #91	; 0x5b
   19ce0:	strb	r1, [r0]
   19ce4:	cmp	r7, #0
   19ce8:	beq	19d54 <flatcc_json_printer_table_vector_field@@Base+0x104>
   19cec:	ldr	r9, [fp, #12]
   19cf0:	add	r0, r8, #4
   19cf4:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   19cf8:	mov	r1, r0
   19cfc:	ldr	r2, [r5, #12]
   19d00:	mov	r0, r4
   19d04:	mov	r3, r9
   19d08:	bl	19da0 <flatcc_json_printer_table_vector_field@@Base+0x150>
   19d0c:	subs	r6, r7, #1
   19d10:	beq	19d54 <flatcc_json_printer_table_vector_field@@Base+0x104>
   19d14:	add	r7, r8, #8
   19d18:	mov	r8, #44	; 0x2c
   19d1c:	ldr	r0, [r4, #20]
   19d20:	add	r1, r0, #1
   19d24:	str	r1, [r4, #20]
   19d28:	strb	r8, [r0]
   19d2c:	mov	r0, r7
   19d30:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   19d34:	mov	r1, r0
   19d38:	ldr	r2, [r5, #12]
   19d3c:	mov	r0, r4
   19d40:	mov	r3, r9
   19d44:	bl	19da0 <flatcc_json_printer_table_vector_field@@Base+0x150>
   19d48:	add	r7, r7, #4
   19d4c:	subs	r6, r6, #1
   19d50:	bne	19d1c <flatcc_json_printer_table_vector_field@@Base+0xcc>
   19d54:	ldrb	r0, [r4, #25]
   19d58:	cmp	r0, #0
   19d5c:	beq	19d88 <flatcc_json_printer_table_vector_field@@Base+0x138>
   19d60:	ldr	r0, [r4, #20]
   19d64:	add	r1, r0, #1
   19d68:	str	r1, [r4, #20]
   19d6c:	mov	r1, #10
   19d70:	strb	r1, [r0]
   19d74:	ldr	r0, [r4, #32]
   19d78:	sub	r0, r0, #1
   19d7c:	str	r0, [r4, #32]
   19d80:	mov	r0, r4
   19d84:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   19d88:	ldr	r0, [r4, #20]
   19d8c:	add	r1, r0, #1
   19d90:	str	r1, [r4, #20]
   19d94:	mov	r1, #93	; 0x5d
   19d98:	strb	r1, [r0]
   19d9c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19da0:	push	{r4, r5, r6, sl, fp, lr}
   19da4:	add	fp, sp, #16
   19da8:	sub	sp, sp, #24
   19dac:	mov	r4, r0
   19db0:	subs	r0, r2, #1
   19db4:	beq	19e64 <flatcc_json_printer_table_vector_field@@Base+0x214>
   19db8:	mov	r5, r3
   19dbc:	mov	r6, r1
   19dc0:	ldr	r1, [r4, #20]
   19dc4:	ldr	r2, [r4, #32]
   19dc8:	add	r2, r2, #1
   19dcc:	str	r2, [r4, #32]
   19dd0:	add	r2, r1, #1
   19dd4:	str	r2, [r4, #20]
   19dd8:	mov	r2, #123	; 0x7b
   19ddc:	strb	r2, [r1]
   19de0:	str	r0, [sp, #16]
   19de4:	mov	r0, #0
   19de8:	str	r0, [sp, #20]
   19dec:	str	r6, [sp, #4]
   19df0:	mov	r0, r6
   19df4:	bl	1bcf4 <flatcc_json_printer_clear@@Base+0xe78>
   19df8:	sub	r0, r6, r0
   19dfc:	str	r0, [sp, #8]
   19e00:	bl	1bb14 <flatcc_json_printer_clear@@Base+0xc98>
   19e04:	str	r0, [sp, #12]
   19e08:	add	r1, sp, #4
   19e0c:	mov	r0, r4
   19e10:	blx	r5
   19e14:	ldrb	r0, [r4, #25]
   19e18:	cmp	r0, #0
   19e1c:	beq	19e48 <flatcc_json_printer_table_vector_field@@Base+0x1f8>
   19e20:	ldr	r0, [r4, #20]
   19e24:	add	r1, r0, #1
   19e28:	str	r1, [r4, #20]
   19e2c:	mov	r1, #10
   19e30:	strb	r1, [r0]
   19e34:	ldr	r0, [r4, #32]
   19e38:	sub	r0, r0, #1
   19e3c:	str	r0, [r4, #32]
   19e40:	mov	r0, r4
   19e44:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   19e48:	ldr	r0, [r4, #20]
   19e4c:	add	r1, r0, #1
   19e50:	str	r1, [r4, #20]
   19e54:	mov	r1, #125	; 0x7d
   19e58:	strb	r1, [r0]
   19e5c:	sub	sp, fp, #16
   19e60:	pop	{r4, r5, r6, sl, fp, pc}
   19e64:	mov	r0, r4
   19e68:	mov	r1, #2
   19e6c:	bl	1a174 <flatcc_json_printer_union_vector_field@@Base+0x2fc>
   19e70:	sub	sp, fp, #16
   19e74:	pop	{r4, r5, r6, sl, fp, pc}

00019e78 <flatcc_json_printer_union_vector_field@@Base>:
   19e78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19e7c:	add	fp, sp, #28
   19e80:	sub	sp, sp, #140	; 0x8c
   19e84:	mov	r6, r3
   19e88:	mov	r7, r2
   19e8c:	mov	r5, r1
   19e90:	mov	r4, r0
   19e94:	sub	r1, r2, #1
   19e98:	mov	r0, r5
   19e9c:	str	r1, [sp, #12]
   19ea0:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   19ea4:	mov	r8, r0
   19ea8:	mov	r0, r5
   19eac:	mov	r1, r7
   19eb0:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   19eb4:	mov	r7, r0
   19eb8:	ldr	r0, [r5, #12]
   19ebc:	str	r0, [sp, #24]
   19ec0:	ldr	r9, [fp, #8]
   19ec4:	cmp	r9, #101	; 0x65
   19ec8:	bge	1a148 <flatcc_json_printer_union_vector_field@@Base+0x2d0>
   19ecc:	add	sl, sp, #32
   19ed0:	mov	r0, sl
   19ed4:	str	r6, [sp, #16]
   19ed8:	mov	r1, r6
   19edc:	mov	r2, r9
   19ee0:	bl	128b4 <memcpy@plt>
   19ee4:	movw	r0, #29791	; 0x745f
   19ee8:	movt	r0, #28793	; 0x7079
   19eec:	str	r0, [sl, r9]
   19ef0:	add	r0, sl, r9
   19ef4:	mov	r1, #101	; 0x65
   19ef8:	strb	r1, [r0, #4]
   19efc:	cmp	r8, #0
   19f00:	cmpne	r7, #0
   19f04:	bne	19f10 <flatcc_json_printer_union_vector_field@@Base+0x98>
   19f08:	sub	sp, fp, #28
   19f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19f10:	ldr	r0, [fp, #12]
   19f14:	add	r1, r9, #5
   19f18:	str	r1, [sp]
   19f1c:	str	r0, [sp, #4]
   19f20:	add	r3, sp, #32
   19f24:	mov	r0, r4
   19f28:	mov	r1, r5
   19f2c:	ldr	r2, [sp, #12]
   19f30:	bl	185c0 <flatcc_json_printer_utype_enum_vector_field@@Base>
   19f34:	ldr	r0, [r5, #16]
   19f38:	add	r1, r0, #1
   19f3c:	str	r1, [r5, #16]
   19f40:	cmp	r0, #0
   19f44:	beq	19f5c <flatcc_json_printer_union_vector_field@@Base+0xe4>
   19f48:	ldr	r0, [r4, #20]
   19f4c:	add	r1, r0, #1
   19f50:	str	r1, [r4, #20]
   19f54:	mov	r1, #44	; 0x2c
   19f58:	strb	r1, [r0]
   19f5c:	mov	r0, r7
   19f60:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   19f64:	mov	r5, r0
   19f68:	mov	r0, r8
   19f6c:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   19f70:	mov	sl, r0
   19f74:	mov	r0, r5
   19f78:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   19f7c:	mov	r6, r0
   19f80:	mov	r0, r4
   19f84:	ldr	r1, [sp, #16]
   19f88:	mov	r2, r9
   19f8c:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   19f90:	mov	r7, r4
   19f94:	ldr	r0, [r7, #20]!
   19f98:	add	r1, r0, #1
   19f9c:	str	r1, [r7]
   19fa0:	ldr	r1, [r7, #12]
   19fa4:	add	r1, r1, #1
   19fa8:	str	r1, [r7, #12]
   19fac:	mov	r1, #91	; 0x5b
   19fb0:	strb	r1, [r0]
   19fb4:	cmp	r6, #0
   19fb8:	beq	1a0f8 <flatcc_json_printer_union_vector_field@@Base+0x280>
   19fbc:	ldr	r8, [fp, #16]
   19fc0:	add	r0, sl, #4
   19fc4:	bl	17270 <flatcc_json_printer_utype_vector_field@@Base+0x1c8>
   19fc8:	cmp	r0, #0
   19fcc:	beq	19ff8 <flatcc_json_printer_union_vector_field@@Base+0x180>
   19fd0:	add	r1, r5, #4
   19fd4:	str	r1, [sp, #20]
   19fd8:	strb	r0, [sp, #28]
   19fdc:	add	r1, sp, #20
   19fe0:	mov	r0, r4
   19fe4:	mov	r9, r8
   19fe8:	blx	r8
   19fec:	subs	r8, r6, #1
   19ff0:	bne	1a050 <flatcc_json_printer_union_vector_field@@Base+0x1d8>
   19ff4:	b	1a0f8 <flatcc_json_printer_union_vector_field@@Base+0x280>
   19ff8:	mov	r9, r8
   19ffc:	ldr	r0, [r7]
   1a000:	add	r1, r0, #1
   1a004:	str	r1, [r7]
   1a008:	mov	r1, #110	; 0x6e
   1a00c:	strb	r1, [r0]
   1a010:	ldr	r0, [r7]
   1a014:	add	r1, r0, #1
   1a018:	str	r1, [r7]
   1a01c:	mov	r1, #117	; 0x75
   1a020:	strb	r1, [r0]
   1a024:	ldr	r0, [r7]
   1a028:	add	r1, r0, #1
   1a02c:	str	r1, [r7]
   1a030:	mov	r1, #108	; 0x6c
   1a034:	strb	r1, [r0]
   1a038:	ldr	r0, [r7]
   1a03c:	add	r2, r0, #1
   1a040:	str	r2, [r7]
   1a044:	strb	r1, [r0]
   1a048:	subs	r8, r6, #1
   1a04c:	beq	1a0f8 <flatcc_json_printer_union_vector_field@@Base+0x280>
   1a050:	add	r6, r5, #8
   1a054:	add	r5, sl, #5
   1a058:	mov	sl, #44	; 0x2c
   1a05c:	b	1a0bc <flatcc_json_printer_union_vector_field@@Base+0x244>
   1a060:	ldr	r0, [r7]
   1a064:	add	r1, r0, #1
   1a068:	str	r1, [r7]
   1a06c:	mov	r1, #110	; 0x6e
   1a070:	strb	r1, [r0]
   1a074:	ldr	r0, [r7]
   1a078:	add	r1, r0, #1
   1a07c:	str	r1, [r7]
   1a080:	mov	r1, #117	; 0x75
   1a084:	strb	r1, [r0]
   1a088:	ldr	r0, [r7]
   1a08c:	add	r1, r0, #1
   1a090:	str	r1, [r7]
   1a094:	mov	r2, #108	; 0x6c
   1a098:	strb	r2, [r0]
   1a09c:	ldr	r0, [r7]
   1a0a0:	add	r1, r0, #1
   1a0a4:	str	r1, [r7]
   1a0a8:	strb	r2, [r0]
   1a0ac:	add	r6, r6, #4
   1a0b0:	add	r5, r5, #1
   1a0b4:	cmp	r8, #0
   1a0b8:	beq	1a0f8 <flatcc_json_printer_union_vector_field@@Base+0x280>
   1a0bc:	mov	r0, r5
   1a0c0:	bl	17270 <flatcc_json_printer_utype_vector_field@@Base+0x1c8>
   1a0c4:	ldr	r1, [r7]
   1a0c8:	add	r2, r1, #1
   1a0cc:	str	r2, [r7]
   1a0d0:	strb	sl, [r1]
   1a0d4:	sub	r8, r8, #1
   1a0d8:	cmp	r0, #0
   1a0dc:	beq	1a060 <flatcc_json_printer_union_vector_field@@Base+0x1e8>
   1a0e0:	str	r6, [sp, #20]
   1a0e4:	strb	r0, [sp, #28]
   1a0e8:	mov	r0, r4
   1a0ec:	add	r1, sp, #20
   1a0f0:	blx	r9
   1a0f4:	b	1a0ac <flatcc_json_printer_union_vector_field@@Base+0x234>
   1a0f8:	ldrb	r0, [r4, #25]
   1a0fc:	cmp	r0, #0
   1a100:	beq	1a12c <flatcc_json_printer_union_vector_field@@Base+0x2b4>
   1a104:	ldr	r0, [r4, #20]
   1a108:	add	r1, r0, #1
   1a10c:	str	r1, [r4, #20]
   1a110:	mov	r1, #10
   1a114:	strb	r1, [r0]
   1a118:	ldr	r0, [r4, #32]
   1a11c:	sub	r0, r0, #1
   1a120:	str	r0, [r4, #32]
   1a124:	mov	r0, r4
   1a128:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   1a12c:	ldr	r0, [r7]
   1a130:	add	r1, r0, #1
   1a134:	str	r1, [r7]
   1a138:	mov	r1, #93	; 0x5d
   1a13c:	strb	r1, [r0]
   1a140:	sub	sp, fp, #28
   1a144:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a148:	mov	r0, r4
   1a14c:	mov	r1, #1
   1a150:	bl	1a174 <flatcc_json_printer_union_vector_field@@Base+0x2fc>
   1a154:	movw	r0, #50695	; 0xc607
   1a158:	movt	r0, #1
   1a15c:	movw	r1, #50722	; 0xc622
   1a160:	movt	r1, #1
   1a164:	movw	r3, #50797	; 0xc66d
   1a168:	movt	r3, #1
   1a16c:	movw	r2, #843	; 0x34b
   1a170:	bl	12998 <__assert_fail@plt>
   1a174:	ldr	r2, [r0, #36]	; 0x24
   1a178:	cmp	r2, #0
   1a17c:	streq	r1, [r0, #36]	; 0x24
   1a180:	bx	lr

0001a184 <flatcc_json_printer_table_field@@Base>:
   1a184:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a188:	add	fp, sp, #24
   1a18c:	mov	r6, r3
   1a190:	mov	r5, r1
   1a194:	mov	r4, r0
   1a198:	mov	r0, r1
   1a19c:	mov	r1, r2
   1a1a0:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   1a1a4:	cmp	r0, #0
   1a1a8:	beq	1a20c <flatcc_json_printer_table_field@@Base+0x88>
   1a1ac:	mov	r7, r0
   1a1b0:	ldr	r8, [fp, #12]
   1a1b4:	ldr	r2, [fp, #8]
   1a1b8:	ldr	r0, [r5, #16]
   1a1bc:	add	r1, r0, #1
   1a1c0:	str	r1, [r5, #16]
   1a1c4:	cmp	r0, #0
   1a1c8:	beq	1a1e0 <flatcc_json_printer_table_field@@Base+0x5c>
   1a1cc:	ldr	r0, [r4, #20]
   1a1d0:	add	r1, r0, #1
   1a1d4:	str	r1, [r4, #20]
   1a1d8:	mov	r1, #44	; 0x2c
   1a1dc:	strb	r1, [r0]
   1a1e0:	mov	r0, r4
   1a1e4:	mov	r1, r6
   1a1e8:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   1a1ec:	mov	r0, r7
   1a1f0:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   1a1f4:	mov	r1, r0
   1a1f8:	ldr	r2, [r5, #12]
   1a1fc:	mov	r0, r4
   1a200:	mov	r3, r8
   1a204:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a208:	b	19da0 <flatcc_json_printer_table_vector_field@@Base+0x150>
   1a20c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001a210 <flatcc_json_printer_union_field@@Base>:
   1a210:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a214:	add	fp, sp, #28
   1a218:	sub	sp, sp, #12
   1a21c:	mov	r8, r3
   1a220:	mov	r7, r2
   1a224:	mov	r5, r1
   1a228:	mov	r4, r0
   1a22c:	sub	r1, r2, #1
   1a230:	mov	r0, r5
   1a234:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   1a238:	mov	r6, r0
   1a23c:	mov	r0, r5
   1a240:	mov	r1, r7
   1a244:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   1a248:	cmp	r6, #0
   1a24c:	movne	r7, r0
   1a250:	cmpne	r0, #0
   1a254:	bne	1a260 <flatcc_json_printer_union_field@@Base+0x50>
   1a258:	sub	sp, fp, #28
   1a25c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a260:	mov	r0, r6
   1a264:	bl	17270 <flatcc_json_printer_utype_vector_field@@Base+0x1c8>
   1a268:	mov	r6, r0
   1a26c:	ldr	r0, [r5, #16]
   1a270:	add	r1, r0, #1
   1a274:	str	r1, [r5, #16]
   1a278:	cmp	r0, #0
   1a27c:	beq	1a294 <flatcc_json_printer_union_field@@Base+0x84>
   1a280:	ldr	r0, [r4, #20]
   1a284:	add	r1, r0, #1
   1a288:	str	r1, [r4, #20]
   1a28c:	mov	r1, #44	; 0x2c
   1a290:	strb	r1, [r0]
   1a294:	ldr	r9, [fp, #8]
   1a298:	ldrb	r0, [r4, #25]
   1a29c:	cmp	r0, #0
   1a2a0:	beq	1a2c4 <flatcc_json_printer_union_field@@Base+0xb4>
   1a2a4:	ldr	r0, [r4, #20]
   1a2a8:	add	r1, r0, #1
   1a2ac:	str	r1, [r4, #20]
   1a2b0:	mov	r1, #10
   1a2b4:	strb	r1, [r0]
   1a2b8:	mov	r0, r4
   1a2bc:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   1a2c0:	b	1a2cc <flatcc_json_printer_union_field@@Base+0xbc>
   1a2c4:	mov	r0, r4
   1a2c8:	bl	14514 <flatcc_json_printer_nl@@Base+0x18>
   1a2cc:	ldr	r0, [r4, #20]
   1a2d0:	mov	r1, #34	; 0x22
   1a2d4:	strb	r1, [r0]
   1a2d8:	ldrb	r1, [r4, #26]
   1a2dc:	ldr	r2, [r4, #16]
   1a2e0:	ldr	r0, [r4, #20]
   1a2e4:	cmp	r1, #0
   1a2e8:	addeq	r0, r0, #1
   1a2ec:	str	r0, [r4, #20]
   1a2f0:	add	r1, r0, r9
   1a2f4:	cmp	r1, r2
   1a2f8:	bcs	1a318 <flatcc_json_printer_union_field@@Base+0x108>
   1a2fc:	mov	r1, r8
   1a300:	mov	r2, r9
   1a304:	bl	128b4 <memcpy@plt>
   1a308:	ldr	r0, [r4, #20]
   1a30c:	add	r0, r0, r9
   1a310:	str	r0, [r4, #20]
   1a314:	b	1a328 <flatcc_json_printer_union_field@@Base+0x118>
   1a318:	mov	r0, r4
   1a31c:	mov	r1, r8
   1a320:	mov	r2, r9
   1a324:	bl	144b0 <flatcc_json_printer_write@@Base+0x4>
   1a328:	movw	r1, #50999	; 0xc737
   1a32c:	movt	r1, #1
   1a330:	mov	r0, r4
   1a334:	mov	r2, #5
   1a338:	bl	144b0 <flatcc_json_printer_write@@Base+0x4>
   1a33c:	ldr	r0, [r4, #20]
   1a340:	mov	r1, #34	; 0x22
   1a344:	strb	r1, [r0]
   1a348:	ldrb	r0, [r4, #26]
   1a34c:	ldr	r1, [r4, #20]
   1a350:	cmp	r0, #0
   1a354:	addeq	r1, r1, #1
   1a358:	add	r0, r1, #1
   1a35c:	str	r0, [r4, #20]
   1a360:	mov	r0, #58	; 0x3a
   1a364:	strb	r0, [r1]
   1a368:	ldr	r0, [r4, #20]
   1a36c:	mov	r1, #32
   1a370:	strb	r1, [r0]
   1a374:	ldrb	r0, [r4, #25]
   1a378:	ldr	r1, [r4, #20]
   1a37c:	cmp	r0, #0
   1a380:	addne	r1, r1, #1
   1a384:	str	r1, [r4, #20]
   1a388:	ldrb	r0, [r4, #27]
   1a38c:	cmp	r0, #0
   1a390:	beq	1a3b4 <flatcc_json_printer_union_field@@Base+0x1a4>
   1a394:	mov	r0, r6
   1a398:	bl	145e4 <flatcc_json_printer_uint8@@Base+0x2c>
   1a39c:	ldr	r1, [r4, #20]
   1a3a0:	add	r0, r1, r0
   1a3a4:	str	r0, [r4, #20]
   1a3a8:	cmp	r6, #0
   1a3ac:	bne	1a3cc <flatcc_json_printer_union_field@@Base+0x1bc>
   1a3b0:	b	1a258 <flatcc_json_printer_union_field@@Base+0x48>
   1a3b4:	ldr	r2, [fp, #12]
   1a3b8:	mov	r0, r4
   1a3bc:	mov	r1, r6
   1a3c0:	blx	r2
   1a3c4:	cmp	r6, #0
   1a3c8:	beq	1a258 <flatcc_json_printer_union_field@@Base+0x48>
   1a3cc:	ldr	sl, [fp, #16]
   1a3d0:	ldr	r0, [r4, #20]
   1a3d4:	add	r1, r0, #1
   1a3d8:	str	r1, [r4, #20]
   1a3dc:	mov	r1, #44	; 0x2c
   1a3e0:	strb	r1, [r0]
   1a3e4:	mov	r0, r4
   1a3e8:	mov	r1, r8
   1a3ec:	mov	r2, r9
   1a3f0:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   1a3f4:	ldr	r0, [r5, #12]
   1a3f8:	strb	r6, [sp, #8]
   1a3fc:	str	r7, [sp]
   1a400:	str	r0, [sp, #4]
   1a404:	mov	r1, sp
   1a408:	mov	r0, r4
   1a40c:	blx	sl
   1a410:	sub	sp, fp, #28
   1a414:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001a418 <flatcc_json_printer_union_table@@Base>:
   1a418:	push	{r4, r5, r6, sl, fp, lr}
   1a41c:	add	fp, sp, #16
   1a420:	mov	r4, r2
   1a424:	mov	r5, r1
   1a428:	mov	r6, r0
   1a42c:	ldr	r0, [r1]
   1a430:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   1a434:	mov	r1, r0
   1a438:	ldr	r2, [r5, #4]
   1a43c:	mov	r0, r6
   1a440:	mov	r3, r4
   1a444:	pop	{r4, r5, r6, sl, fp, lr}
   1a448:	b	19da0 <flatcc_json_printer_table_vector_field@@Base+0x150>

0001a44c <flatcc_json_printer_union_struct@@Base>:
   1a44c:	push	{r4, r5, fp, lr}
   1a450:	add	fp, sp, #8
   1a454:	mov	r5, r2
   1a458:	mov	r4, r0
   1a45c:	ldr	r0, [r0, #20]
   1a460:	ldr	r2, [r4, #32]
   1a464:	add	r2, r2, #1
   1a468:	str	r2, [r4, #32]
   1a46c:	add	r2, r0, #1
   1a470:	str	r2, [r4, #20]
   1a474:	mov	r2, #123	; 0x7b
   1a478:	strb	r2, [r0]
   1a47c:	ldr	r0, [r1]
   1a480:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   1a484:	mov	r1, r0
   1a488:	mov	r0, r4
   1a48c:	blx	r5
   1a490:	ldrb	r0, [r4, #25]
   1a494:	cmp	r0, #0
   1a498:	beq	1a4c4 <flatcc_json_printer_union_struct@@Base+0x78>
   1a49c:	ldr	r0, [r4, #20]
   1a4a0:	add	r1, r0, #1
   1a4a4:	str	r1, [r4, #20]
   1a4a8:	mov	r1, #10
   1a4ac:	strb	r1, [r0]
   1a4b0:	ldr	r0, [r4, #32]
   1a4b4:	sub	r0, r0, #1
   1a4b8:	str	r0, [r4, #32]
   1a4bc:	mov	r0, r4
   1a4c0:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   1a4c4:	ldr	r0, [r4, #20]
   1a4c8:	add	r1, r0, #1
   1a4cc:	str	r1, [r4, #20]
   1a4d0:	mov	r1, #125	; 0x7d
   1a4d4:	strb	r1, [r0]
   1a4d8:	pop	{r4, r5, fp, pc}

0001a4dc <flatcc_json_printer_union_string@@Base>:
   1a4dc:	push	{r4, sl, fp, lr}
   1a4e0:	add	fp, sp, #8
   1a4e4:	mov	r4, r0
   1a4e8:	ldr	r0, [r1]
   1a4ec:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   1a4f0:	mov	r1, r0
   1a4f4:	mov	r0, r4
   1a4f8:	pop	{r4, sl, fp, lr}
   1a4fc:	b	15458 <flatcc_json_printer_string_field@@Base+0x150>

0001a500 <flatcc_json_printer_embedded_struct_field@@Base>:
   1a500:	push	{r4, r5, r6, r7, fp, lr}
   1a504:	add	fp, sp, #16
   1a508:	mov	r5, r3
   1a50c:	mov	r6, r2
   1a510:	mov	r3, r1
   1a514:	mov	r4, r0
   1a518:	add	r7, fp, #8
   1a51c:	ldm	r7, {r1, r2, r7}
   1a520:	cmp	r3, #0
   1a524:	beq	1a53c <flatcc_json_printer_embedded_struct_field@@Base+0x3c>
   1a528:	ldr	r0, [r4, #20]
   1a52c:	add	r3, r0, #1
   1a530:	str	r3, [r4, #20]
   1a534:	mov	r3, #44	; 0x2c
   1a538:	strb	r3, [r0]
   1a53c:	mov	r0, r4
   1a540:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   1a544:	ldr	r0, [r4, #20]
   1a548:	ldr	r1, [r4, #32]
   1a54c:	add	r1, r1, #1
   1a550:	str	r1, [r4, #32]
   1a554:	add	r1, r0, #1
   1a558:	str	r1, [r4, #20]
   1a55c:	mov	r1, #123	; 0x7b
   1a560:	strb	r1, [r0]
   1a564:	add	r1, r6, r5
   1a568:	mov	r0, r4
   1a56c:	blx	r7
   1a570:	ldrb	r0, [r4, #25]
   1a574:	cmp	r0, #0
   1a578:	beq	1a5a4 <flatcc_json_printer_embedded_struct_field@@Base+0xa4>
   1a57c:	ldr	r0, [r4, #20]
   1a580:	add	r1, r0, #1
   1a584:	str	r1, [r4, #20]
   1a588:	mov	r1, #10
   1a58c:	strb	r1, [r0]
   1a590:	ldr	r0, [r4, #32]
   1a594:	sub	r0, r0, #1
   1a598:	str	r0, [r4, #32]
   1a59c:	mov	r0, r4
   1a5a0:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   1a5a4:	ldr	r0, [r4, #20]
   1a5a8:	add	r1, r0, #1
   1a5ac:	str	r1, [r4, #20]
   1a5b0:	mov	r1, #125	; 0x7d
   1a5b4:	strb	r1, [r0]
   1a5b8:	pop	{r4, r5, r6, r7, fp, pc}

0001a5bc <flatcc_json_printer_struct_field@@Base>:
   1a5bc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a5c0:	add	fp, sp, #24
   1a5c4:	mov	r6, r3
   1a5c8:	mov	r7, r1
   1a5cc:	mov	r4, r0
   1a5d0:	mov	r0, r1
   1a5d4:	mov	r1, r2
   1a5d8:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   1a5dc:	cmp	r0, #0
   1a5e0:	beq	1a698 <flatcc_json_printer_struct_field@@Base+0xdc>
   1a5e4:	mov	r5, r0
   1a5e8:	ldr	r8, [fp, #12]
   1a5ec:	ldr	r2, [fp, #8]
   1a5f0:	ldr	r0, [r7, #16]
   1a5f4:	add	r1, r0, #1
   1a5f8:	str	r1, [r7, #16]
   1a5fc:	cmp	r0, #0
   1a600:	beq	1a618 <flatcc_json_printer_struct_field@@Base+0x5c>
   1a604:	ldr	r0, [r4, #20]
   1a608:	add	r1, r0, #1
   1a60c:	str	r1, [r4, #20]
   1a610:	mov	r1, #44	; 0x2c
   1a614:	strb	r1, [r0]
   1a618:	mov	r0, r4
   1a61c:	mov	r1, r6
   1a620:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   1a624:	ldr	r0, [r4, #20]
   1a628:	ldr	r1, [r4, #32]
   1a62c:	add	r1, r1, #1
   1a630:	str	r1, [r4, #32]
   1a634:	add	r1, r0, #1
   1a638:	str	r1, [r4, #20]
   1a63c:	mov	r1, #123	; 0x7b
   1a640:	strb	r1, [r0]
   1a644:	mov	r0, r4
   1a648:	mov	r1, r5
   1a64c:	blx	r8
   1a650:	ldrb	r0, [r4, #25]
   1a654:	cmp	r0, #0
   1a658:	beq	1a684 <flatcc_json_printer_struct_field@@Base+0xc8>
   1a65c:	ldr	r0, [r4, #20]
   1a660:	add	r1, r0, #1
   1a664:	str	r1, [r4, #20]
   1a668:	mov	r1, #10
   1a66c:	strb	r1, [r0]
   1a670:	ldr	r0, [r4, #32]
   1a674:	sub	r0, r0, #1
   1a678:	str	r0, [r4, #32]
   1a67c:	mov	r0, r4
   1a680:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   1a684:	ldr	r0, [r4, #20]
   1a688:	add	r1, r0, #1
   1a68c:	str	r1, [r4, #20]
   1a690:	mov	r1, #125	; 0x7d
   1a694:	strb	r1, [r0]
   1a698:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001a69c <flatcc_json_printer_struct_as_root@@Base>:
   1a69c:	push	{r4, r5, fp, lr}
   1a6a0:	add	fp, sp, #8
   1a6a4:	mov	r5, r1
   1a6a8:	mov	r4, r0
   1a6ac:	bl	1a79c <flatcc_json_printer_struct_as_root@@Base+0x100>
   1a6b0:	ldr	r0, [r4, #20]
   1a6b4:	ldr	r1, [r4, #32]
   1a6b8:	add	r1, r1, #1
   1a6bc:	str	r1, [r4, #32]
   1a6c0:	add	r1, r0, #1
   1a6c4:	str	r1, [r4, #20]
   1a6c8:	mov	r1, #123	; 0x7b
   1a6cc:	strb	r1, [r0]
   1a6d0:	mov	r0, r5
   1a6d4:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   1a6d8:	mov	r1, r0
   1a6dc:	ldr	r2, [fp, #8]
   1a6e0:	mov	r0, r4
   1a6e4:	blx	r2
   1a6e8:	ldrb	r0, [r4, #25]
   1a6ec:	cmp	r0, #0
   1a6f0:	beq	1a71c <flatcc_json_printer_struct_as_root@@Base+0x80>
   1a6f4:	ldr	r0, [r4, #20]
   1a6f8:	add	r1, r0, #1
   1a6fc:	str	r1, [r4, #20]
   1a700:	mov	r1, #10
   1a704:	strb	r1, [r0]
   1a708:	ldr	r0, [r4, #32]
   1a70c:	sub	r0, r0, #1
   1a710:	str	r0, [r4, #32]
   1a714:	mov	r0, r4
   1a718:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   1a71c:	ldr	r0, [r4, #20]
   1a720:	add	r1, r0, #1
   1a724:	str	r1, [r4, #20]
   1a728:	mov	r1, #125	; 0x7d
   1a72c:	strb	r1, [r0]
   1a730:	ldrb	r0, [r4, #25]
   1a734:	cmp	r0, #0
   1a738:	beq	1a75c <flatcc_json_printer_struct_as_root@@Base+0xc0>
   1a73c:	ldr	r0, [r4, #32]
   1a740:	cmp	r0, #0
   1a744:	bne	1a75c <flatcc_json_printer_struct_as_root@@Base+0xc0>
   1a748:	ldr	r0, [r4, #20]
   1a74c:	add	r1, r0, #1
   1a750:	str	r1, [r4, #20]
   1a754:	mov	r1, #10
   1a758:	strb	r1, [r0]
   1a75c:	ldr	r2, [r4, #44]	; 0x2c
   1a760:	mov	r0, r4
   1a764:	mov	r1, #1
   1a768:	blx	r2
   1a76c:	mov	r0, r4
   1a770:	bl	1a860 <flatcc_json_printer_struct_as_root@@Base+0x1c4>
   1a774:	mov	r1, r0
   1a778:	mvn	r0, #0
   1a77c:	cmp	r1, #0
   1a780:	popne	{r4, r5, fp, pc}
   1a784:	ldr	r0, [r4]
   1a788:	ldr	r1, [r4, #12]
   1a78c:	ldr	r2, [r4, #20]
   1a790:	add	r1, r2, r1
   1a794:	sub	r0, r1, r0
   1a798:	pop	{r4, r5, fp, pc}
   1a79c:	push	{r4, r5, r6, sl, fp, lr}
   1a7a0:	add	fp, sp, #16
   1a7a4:	sub	sp, sp, #8
   1a7a8:	mov	r4, r0
   1a7ac:	mov	r0, #0
   1a7b0:	str	r0, [sp, #4]
   1a7b4:	cmp	r1, #0
   1a7b8:	cmpne	r2, #7
   1a7bc:	bhi	1a7ec <flatcc_json_printer_struct_as_root@@Base+0x150>
   1a7c0:	mov	r0, r4
   1a7c4:	mov	r1, #1
   1a7c8:	bl	1a174 <flatcc_json_printer_union_vector_field@@Base+0x2fc>
   1a7cc:	movw	r0, #52018	; 0xcb32
   1a7d0:	movt	r0, #1
   1a7d4:	movw	r1, #50722	; 0xc622
   1a7d8:	movt	r1, #1
   1a7dc:	movw	r3, #52049	; 0xcb51
   1a7e0:	movt	r3, #1
   1a7e4:	movw	r2, #1019	; 0x3fb
   1a7e8:	bl	12998 <__assert_fail@plt>
   1a7ec:	cmp	r3, #0
   1a7f0:	beq	1a82c <flatcc_json_printer_struct_as_root@@Base+0x190>
   1a7f4:	mov	r5, r1
   1a7f8:	add	r0, sp, #4
   1a7fc:	mov	r1, r3
   1a800:	mov	r2, #4
   1a804:	bl	12950 <strncpy@plt>
   1a808:	ldr	r6, [sp, #4]
   1a80c:	mov	r0, r6
   1a810:	bl	1bd00 <flatcc_json_printer_clear@@Base+0xe84>
   1a814:	str	r6, [sp, #4]
   1a818:	add	r0, r5, #4
   1a81c:	bl	1bd04 <flatcc_json_printer_clear@@Base+0xe88>
   1a820:	cmp	r6, #0
   1a824:	cmpne	r0, r6
   1a828:	bne	1a834 <flatcc_json_printer_struct_as_root@@Base+0x198>
   1a82c:	sub	sp, fp, #16
   1a830:	pop	{r4, r5, r6, sl, fp, pc}
   1a834:	mov	r0, r4
   1a838:	mov	r1, #1
   1a83c:	bl	1a174 <flatcc_json_printer_union_vector_field@@Base+0x2fc>
   1a840:	movw	r0, #52128	; 0xcba0
   1a844:	movt	r0, #1
   1a848:	movw	r1, #50722	; 0xc622
   1a84c:	movt	r1, #1
   1a850:	movw	r3, #52049	; 0xcb51
   1a854:	movt	r3, #1
   1a858:	movw	r2, #1028	; 0x404
   1a85c:	bl	12998 <__assert_fail@plt>
   1a860:	ldr	r0, [r0, #36]	; 0x24
   1a864:	bx	lr

0001a868 <flatcc_json_printer_table_as_root@@Base>:
   1a868:	push	{r4, r5, fp, lr}
   1a86c:	add	fp, sp, #8
   1a870:	mov	r5, r1
   1a874:	mov	r4, r0
   1a878:	bl	1a79c <flatcc_json_printer_struct_as_root@@Base+0x100>
   1a87c:	mov	r0, r5
   1a880:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   1a884:	mov	r1, r0
   1a888:	ldr	r3, [fp, #8]
   1a88c:	mov	r0, r4
   1a890:	mov	r2, #100	; 0x64
   1a894:	bl	19da0 <flatcc_json_printer_table_vector_field@@Base+0x150>
   1a898:	ldrb	r0, [r4, #25]
   1a89c:	cmp	r0, #0
   1a8a0:	beq	1a8c4 <flatcc_json_printer_table_as_root@@Base+0x5c>
   1a8a4:	ldr	r0, [r4, #32]
   1a8a8:	cmp	r0, #0
   1a8ac:	bne	1a8c4 <flatcc_json_printer_table_as_root@@Base+0x5c>
   1a8b0:	ldr	r0, [r4, #20]
   1a8b4:	add	r1, r0, #1
   1a8b8:	str	r1, [r4, #20]
   1a8bc:	mov	r1, #10
   1a8c0:	strb	r1, [r0]
   1a8c4:	ldr	r2, [r4, #44]	; 0x2c
   1a8c8:	mov	r0, r4
   1a8cc:	mov	r1, #1
   1a8d0:	blx	r2
   1a8d4:	mov	r0, r4
   1a8d8:	bl	1a860 <flatcc_json_printer_struct_as_root@@Base+0x1c4>
   1a8dc:	mov	r1, r0
   1a8e0:	mvn	r0, #0
   1a8e4:	cmp	r1, #0
   1a8e8:	popne	{r4, r5, fp, pc}
   1a8ec:	ldr	r0, [r4]
   1a8f0:	ldr	r1, [r4, #12]
   1a8f4:	ldr	r2, [r4, #20]
   1a8f8:	add	r1, r2, r1
   1a8fc:	sub	r0, r1, r0
   1a900:	pop	{r4, r5, fp, pc}

0001a904 <flatcc_json_printer_struct_as_nested_root@@Base>:
   1a904:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a908:	add	fp, sp, #28
   1a90c:	sub	sp, sp, #4
   1a910:	mov	r5, r3
   1a914:	mov	r7, r1
   1a918:	mov	r4, r0
   1a91c:	mov	r0, r1
   1a920:	mov	r1, r2
   1a924:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   1a928:	cmp	r0, #0
   1a92c:	beq	1aa14 <flatcc_json_printer_struct_as_nested_root@@Base+0x110>
   1a930:	mov	r6, r0
   1a934:	add	sl, fp, #8
   1a938:	ldm	sl, {r8, r9, sl}
   1a93c:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   1a940:	add	r6, r0, r6
   1a944:	mov	r0, r6
   1a948:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   1a94c:	mov	r2, r0
   1a950:	mov	r0, r4
   1a954:	mov	r1, r6
   1a958:	mov	r3, r9
   1a95c:	bl	1a79c <flatcc_json_printer_struct_as_root@@Base+0x100>
   1a960:	ldr	r0, [r7, #16]
   1a964:	add	r1, r0, #1
   1a968:	str	r1, [r7, #16]
   1a96c:	cmp	r0, #0
   1a970:	beq	1a988 <flatcc_json_printer_struct_as_nested_root@@Base+0x84>
   1a974:	ldr	r0, [r4, #20]
   1a978:	add	r1, r0, #1
   1a97c:	str	r1, [r4, #20]
   1a980:	mov	r1, #44	; 0x2c
   1a984:	strb	r1, [r0]
   1a988:	mov	r0, r4
   1a98c:	mov	r1, r5
   1a990:	mov	r2, r8
   1a994:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   1a998:	ldr	r0, [r4, #20]
   1a99c:	ldr	r1, [r4, #32]
   1a9a0:	add	r1, r1, #1
   1a9a4:	str	r1, [r4, #32]
   1a9a8:	add	r1, r0, #1
   1a9ac:	str	r1, [r4, #20]
   1a9b0:	mov	r1, #123	; 0x7b
   1a9b4:	strb	r1, [r0]
   1a9b8:	mov	r0, r6
   1a9bc:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   1a9c0:	mov	r1, r0
   1a9c4:	mov	r0, r4
   1a9c8:	blx	sl
   1a9cc:	ldrb	r0, [r4, #25]
   1a9d0:	cmp	r0, #0
   1a9d4:	beq	1aa00 <flatcc_json_printer_struct_as_nested_root@@Base+0xfc>
   1a9d8:	ldr	r0, [r4, #20]
   1a9dc:	add	r1, r0, #1
   1a9e0:	str	r1, [r4, #20]
   1a9e4:	mov	r1, #10
   1a9e8:	strb	r1, [r0]
   1a9ec:	ldr	r0, [r4, #32]
   1a9f0:	sub	r0, r0, #1
   1a9f4:	str	r0, [r4, #32]
   1a9f8:	mov	r0, r4
   1a9fc:	bl	14548 <flatcc_json_printer_indent@@Base+0x4>
   1aa00:	ldr	r0, [r4, #20]
   1aa04:	add	r1, r0, #1
   1aa08:	str	r1, [r4, #20]
   1aa0c:	mov	r1, #125	; 0x7d
   1aa10:	strb	r1, [r0]
   1aa14:	sub	sp, fp, #28
   1aa18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001aa1c <flatcc_json_printer_table_as_nested_root@@Base>:
   1aa1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aa20:	add	fp, sp, #28
   1aa24:	sub	sp, sp, #4
   1aa28:	mov	sl, r3
   1aa2c:	mov	r5, r1
   1aa30:	mov	r4, r0
   1aa34:	mov	r0, r1
   1aa38:	mov	r1, r2
   1aa3c:	bl	15388 <flatcc_json_printer_string_field@@Base+0x80>
   1aa40:	cmp	r0, #0
   1aa44:	beq	1aadc <flatcc_json_printer_table_as_nested_root@@Base+0xc0>
   1aa48:	mov	r7, r0
   1aa4c:	ldr	r8, [fp, #16]
   1aa50:	ldr	r6, [fp, #12]
   1aa54:	ldr	r9, [fp, #8]
   1aa58:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   1aa5c:	add	r7, r0, r7
   1aa60:	mov	r0, r7
   1aa64:	bl	17268 <flatcc_json_printer_utype_vector_field@@Base+0x1c0>
   1aa68:	mov	r2, r0
   1aa6c:	add	r7, r7, #4
   1aa70:	mov	r0, r4
   1aa74:	mov	r1, r7
   1aa78:	mov	r3, r6
   1aa7c:	bl	1a79c <flatcc_json_printer_struct_as_root@@Base+0x100>
   1aa80:	ldr	r0, [r5, #16]
   1aa84:	add	r1, r0, #1
   1aa88:	str	r1, [r5, #16]
   1aa8c:	cmp	r0, #0
   1aa90:	beq	1aaa8 <flatcc_json_printer_table_as_nested_root@@Base+0x8c>
   1aa94:	ldr	r0, [r4, #20]
   1aa98:	add	r1, r0, #1
   1aa9c:	str	r1, [r4, #20]
   1aaa0:	mov	r1, #44	; 0x2c
   1aaa4:	strb	r1, [r0]
   1aaa8:	mov	r0, r4
   1aaac:	mov	r1, sl
   1aab0:	mov	r2, r9
   1aab4:	bl	153c8 <flatcc_json_printer_string_field@@Base+0xc0>
   1aab8:	mov	r0, r7
   1aabc:	bl	15484 <flatcc_json_printer_string_field@@Base+0x17c>
   1aac0:	mov	r1, r0
   1aac4:	ldr	r2, [r5, #12]
   1aac8:	mov	r0, r4
   1aacc:	mov	r3, r8
   1aad0:	sub	sp, fp, #28
   1aad4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aad8:	b	19da0 <flatcc_json_printer_table_vector_field@@Base+0x150>
   1aadc:	sub	sp, fp, #28
   1aae0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001aae4 <flatcc_json_printer_init@@Base>:
   1aae4:	push	{r4, r5, r6, sl, fp, lr}
   1aae8:	add	fp, sp, #16
   1aaec:	mov	r5, r0
   1aaf0:	mov	r4, #0
   1aaf4:	vmov.i32	q8, #0	; 0x00000000
   1aaf8:	str	r4, [r0, #32]
   1aafc:	mov	r0, #36	; 0x24
   1ab00:	mov	r2, r5
   1ab04:	vst1.32	{d16-d17}, [r2], r0
   1ab08:	str	r4, [r2]
   1ab0c:	add	r0, r5, #16
   1ab10:	vst1.32	{d16-d17}, [r0]
   1ab14:	movw	r0, #57484	; 0xe08c
   1ab18:	movt	r0, #2
   1ab1c:	ldr	r0, [r0]
   1ab20:	movw	r2, #43912	; 0xab88
   1ab24:	movt	r2, #1
   1ab28:	cmp	r1, #0
   1ab2c:	movne	r0, r1
   1ab30:	str	r0, [r5, #40]	; 0x28
   1ab34:	str	r2, [r5, #44]	; 0x2c
   1ab38:	movw	r6, #16448	; 0x4040
   1ab3c:	movw	r0, #16448	; 0x4040
   1ab40:	bl	128fc <malloc@plt>
   1ab44:	str	r0, [r5]
   1ab48:	cmp	r0, #0
   1ab4c:	beq	1ab7c <flatcc_json_printer_init@@Base+0x98>
   1ab50:	mov	r0, #16384	; 0x4000
   1ab54:	str	r6, [r5, #4]
   1ab58:	str	r0, [r5, #8]
   1ab5c:	mov	r0, #1
   1ab60:	strb	r0, [r5, #24]
   1ab64:	ldr	r0, [r5]
   1ab68:	add	r1, r0, #16384	; 0x4000
   1ab6c:	str	r1, [r5, #16]
   1ab70:	str	r0, [r5, #20]
   1ab74:	mov	r0, r4
   1ab78:	pop	{r4, r5, r6, sl, fp, pc}
   1ab7c:	mvn	r4, #0
   1ab80:	mov	r0, r4
   1ab84:	pop	{r4, r5, r6, sl, fp, pc}
   1ab88:	push	{r4, r5, r6, sl, fp, lr}
   1ab8c:	add	fp, sp, #16
   1ab90:	mov	r4, r0
   1ab94:	cmp	r1, #0
   1ab98:	bne	1abac <flatcc_json_printer_init@@Base+0xc8>
   1ab9c:	ldr	r5, [r4, #16]
   1aba0:	ldr	r6, [r4, #20]
   1aba4:	cmp	r6, r5
   1aba8:	bcs	1abd0 <flatcc_json_printer_init@@Base+0xec>
   1abac:	ldr	r0, [r4]
   1abb0:	ldr	r1, [r4, #20]
   1abb4:	ldr	r3, [r4, #40]	; 0x28
   1abb8:	sub	r5, r1, r0
   1abbc:	mov	r1, r5
   1abc0:	mov	r2, #1
   1abc4:	bl	128e4 <fwrite@plt>
   1abc8:	ldr	r0, [r4]
   1abcc:	b	1ac08 <flatcc_json_printer_init@@Base+0x124>
   1abd0:	ldr	r0, [r4]
   1abd4:	ldr	r1, [r4, #8]
   1abd8:	ldr	r3, [r4, #40]	; 0x28
   1abdc:	mov	r2, #1
   1abe0:	bl	128e4 <fwrite@plt>
   1abe4:	sub	r6, r6, r5
   1abe8:	ldr	r0, [r4]
   1abec:	ldr	r1, [r4, #8]
   1abf0:	add	r1, r0, r1
   1abf4:	mov	r2, r6
   1abf8:	bl	128b4 <memcpy@plt>
   1abfc:	ldr	r0, [r4]
   1ac00:	ldr	r5, [r4, #8]
   1ac04:	add	r0, r0, r6
   1ac08:	str	r0, [r4, #20]
   1ac0c:	ldr	r0, [r4, #12]
   1ac10:	ldr	r1, [r4, #20]
   1ac14:	add	r0, r0, r5
   1ac18:	str	r0, [r4, #12]
   1ac1c:	mov	r0, #0
   1ac20:	strb	r0, [r1]
   1ac24:	pop	{r4, r5, r6, sl, fp, pc}

0001ac28 <flatcc_json_printer_init_buffer@@Base>:
   1ac28:	push	{fp, lr}
   1ac2c:	mov	fp, sp
   1ac30:	cmp	r2, #63	; 0x3f
   1ac34:	bls	1ac74 <flatcc_json_printer_init_buffer@@Base+0x4c>
   1ac38:	vmov.i32	q8, #0	; 0x00000000
   1ac3c:	add	r3, r0, #12
   1ac40:	vst1.32	{d16-d17}, [r3]
   1ac44:	movw	r3, #44180	; 0xac94
   1ac48:	movt	r3, #1
   1ac4c:	str	r3, [r0, #44]	; 0x2c
   1ac50:	add	r3, r0, #28
   1ac54:	vst1.32	{d16-d17}, [r3]
   1ac58:	sub	r3, r2, #64	; 0x40
   1ac5c:	stm	r0, {r1, r2, r3}
   1ac60:	add	r2, r1, r3
   1ac64:	str	r2, [r0, #16]
   1ac68:	str	r1, [r0, #20]
   1ac6c:	mov	r0, #0
   1ac70:	pop	{fp, pc}
   1ac74:	movw	r0, #51005	; 0xc73d
   1ac78:	movt	r0, #1
   1ac7c:	movw	r1, #50722	; 0xc622
   1ac80:	movt	r1, #1
   1ac84:	movw	r3, #51046	; 0xc766
   1ac88:	movt	r3, #1
   1ac8c:	movw	r2, #1165	; 0x48d
   1ac90:	bl	12998 <__assert_fail@plt>
   1ac94:	push	{r4, sl, fp, lr}
   1ac98:	add	fp, sp, #8
   1ac9c:	mov	r4, r0
   1aca0:	ldr	r0, [r0, #16]
   1aca4:	ldr	r1, [r4, #20]
   1aca8:	cmp	r1, r0
   1acac:	bcc	1acd8 <flatcc_json_printer_init_buffer@@Base+0xb0>
   1acb0:	mov	r0, r4
   1acb4:	mov	r1, #3
   1acb8:	bl	1a174 <flatcc_json_printer_union_vector_field@@Base+0x2fc>
   1acbc:	ldr	r0, [r4]
   1acc0:	ldr	r1, [r4, #12]
   1acc4:	ldr	r2, [r4, #20]
   1acc8:	str	r0, [r4, #20]
   1accc:	sub	r0, r2, r0
   1acd0:	add	r0, r0, r1
   1acd4:	str	r0, [r4, #12]
   1acd8:	ldr	r0, [r4, #20]
   1acdc:	mov	r1, #0
   1ace0:	strb	r1, [r0]
   1ace4:	pop	{r4, sl, fp, pc}

0001ace8 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   1ace8:	push	{r4, r5, fp, lr}
   1acec:	add	fp, sp, #8
   1acf0:	mov	r5, r1
   1acf4:	mov	r4, r0
   1acf8:	vmov.i32	q8, #0	; 0x00000000
   1acfc:	add	r0, r0, #28
   1ad00:	vst1.32	{d16-d17}, [r0]
   1ad04:	add	r0, r4, #12
   1ad08:	vst1.32	{d16-d17}, [r0]
   1ad0c:	cmp	r1, #0
   1ad10:	movweq	r5, #4096	; 0x1000
   1ad14:	cmp	r5, #64	; 0x40
   1ad18:	movls	r5, #64	; 0x40
   1ad1c:	mov	r0, r5
   1ad20:	bl	128fc <malloc@plt>
   1ad24:	mov	r1, r0
   1ad28:	mov	r0, #1
   1ad2c:	strb	r0, [r4, #24]
   1ad30:	sub	r0, r5, #64	; 0x40
   1ad34:	stm	r4, {r1, r5}
   1ad38:	str	r0, [r4, #8]
   1ad3c:	movw	r2, #44404	; 0xad74
   1ad40:	movt	r2, #1
   1ad44:	str	r2, [r4, #44]	; 0x2c
   1ad48:	add	r0, r1, r0
   1ad4c:	str	r0, [r4, #16]
   1ad50:	str	r1, [r4, #20]
   1ad54:	mov	r0, #0
   1ad58:	cmp	r1, #0
   1ad5c:	popne	{r4, r5, fp, pc}
   1ad60:	mov	r0, r4
   1ad64:	mov	r1, #3
   1ad68:	bl	1a174 <flatcc_json_printer_union_vector_field@@Base+0x2fc>
   1ad6c:	mvn	r0, #0
   1ad70:	pop	{r4, r5, fp, pc}
   1ad74:	push	{r4, r5, fp, lr}
   1ad78:	add	fp, sp, #8
   1ad7c:	mov	r4, r0
   1ad80:	ldr	r0, [r0]
   1ad84:	ldr	r5, [r4, #20]
   1ad88:	mov	r1, #0
   1ad8c:	strb	r1, [r5], -r0
   1ad90:	ldr	r0, [r4, #16]
   1ad94:	ldr	r1, [r4, #20]
   1ad98:	cmp	r1, r0
   1ad9c:	popcc	{r4, r5, fp, pc}
   1ada0:	ldm	r4, {r0, r1}
   1ada4:	lsl	r1, r1, #1
   1ada8:	bl	128d8 <realloc@plt>
   1adac:	cmp	r0, #0
   1adb0:	beq	1ade4 <flatcc_json_printer_init_dynamic_buffer@@Base+0xfc>
   1adb4:	str	r0, [r4]
   1adb8:	add	r1, r0, r5
   1adbc:	ldr	r2, [r4, #4]
   1adc0:	mvn	r3, #63	; 0x3f
   1adc4:	add	r3, r3, r2, lsl #1
   1adc8:	str	r3, [r4, #8]
   1adcc:	lsl	r2, r2, #1
   1add0:	str	r2, [r4, #4]
   1add4:	add	r0, r0, r3
   1add8:	str	r0, [r4, #16]
   1addc:	str	r1, [r4, #20]
   1ade0:	b	1ae04 <flatcc_json_printer_init_dynamic_buffer@@Base+0x11c>
   1ade4:	mov	r0, r4
   1ade8:	mov	r1, #3
   1adec:	bl	1a174 <flatcc_json_printer_union_vector_field@@Base+0x2fc>
   1adf0:	ldr	r0, [r4]
   1adf4:	ldr	r1, [r4, #12]
   1adf8:	str	r0, [r4, #20]
   1adfc:	add	r0, r1, r5
   1ae00:	str	r0, [r4, #12]
   1ae04:	ldr	r0, [r4, #20]
   1ae08:	mov	r1, #0
   1ae0c:	strb	r1, [r0]
   1ae10:	pop	{r4, r5, fp, pc}

0001ae14 <flatcc_json_printer_get_buffer@@Base>:
   1ae14:	push	{r4, r5, fp, lr}
   1ae18:	add	fp, sp, #8
   1ae1c:	mov	r5, r1
   1ae20:	mov	r4, r0
   1ae24:	ldr	r2, [r0, #44]	; 0x2c
   1ae28:	mov	r1, #0
   1ae2c:	blx	r2
   1ae30:	cmp	r5, #0
   1ae34:	beq	1ae48 <flatcc_json_printer_get_buffer@@Base+0x34>
   1ae38:	ldr	r0, [r4]
   1ae3c:	ldr	r1, [r4, #20]
   1ae40:	sub	r0, r1, r0
   1ae44:	str	r0, [r5]
   1ae48:	ldr	r0, [r4]
   1ae4c:	pop	{r4, r5, fp, pc}

0001ae50 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   1ae50:	push	{r4, sl, fp, lr}
   1ae54:	add	fp, sp, #8
   1ae58:	mov	r4, r0
   1ae5c:	bl	1ae14 <flatcc_json_printer_get_buffer@@Base>
   1ae60:	vmov.i32	q8, #0	; 0x00000000
   1ae64:	add	r1, r4, #16
   1ae68:	vst1.32	{d16-d17}, [r1]
   1ae6c:	mov	r1, #32
   1ae70:	vst1.32	{d16-d17}, [r4], r1
   1ae74:	vst1.32	{d16-d17}, [r4]
   1ae78:	pop	{r4, sl, fp, pc}

0001ae7c <flatcc_json_printer_clear@@Base>:
   1ae7c:	push	{r4, sl, fp, lr}
   1ae80:	add	fp, sp, #8
   1ae84:	mov	r4, r0
   1ae88:	ldrb	r0, [r0, #24]
   1ae8c:	cmp	r0, #0
   1ae90:	beq	1aea4 <flatcc_json_printer_clear@@Base+0x28>
   1ae94:	ldr	r0, [r4]
   1ae98:	cmp	r0, #0
   1ae9c:	beq	1aea4 <flatcc_json_printer_clear@@Base+0x28>
   1aea0:	bl	128a8 <free@plt>
   1aea4:	vmov.i32	q8, #0	; 0x00000000
   1aea8:	mov	r0, #32
   1aeac:	add	r1, r4, #16
   1aeb0:	vst1.32	{d16-d17}, [r4], r0
   1aeb4:	vst1.32	{d16-d17}, [r4]
   1aeb8:	vst1.32	{d16-d17}, [r1]
   1aebc:	pop	{r4, sl, fp, pc}
   1aec0:	vmov	r0, r1, d0
   1aec4:	bx	lr
   1aec8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aecc:	add	fp, sp, #28
   1aed0:	sub	sp, sp, #4
   1aed4:	vpush	{d8}
   1aed8:	sub	sp, sp, #160	; 0xa0
   1aedc:	add	r3, sp, #68	; 0x44
   1aee0:	stm	r3, {r0, r1, r2}
   1aee4:	vmov.f64	d8, d0
   1aee8:	sub	r0, fp, #56	; 0x38
   1aeec:	bl	1b1d0 <flatcc_json_printer_clear@@Base+0x354>
   1aef0:	ldr	sl, [fp, #-56]	; 0xffffffc8
   1aef4:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1aef8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1aefc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1af00:	stm	sp, {r0, r1}
   1af04:	sub	r0, fp, #72	; 0x48
   1af08:	mov	r2, sl
   1af0c:	mov	r3, r5
   1af10:	bl	1b224 <flatcc_json_printer_clear@@Base+0x3a8>
   1af14:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1af18:	mov	r0, #0
   1af1c:	str	r1, [sp, #56]	; 0x38
   1af20:	sub	r1, r1, #1
   1af24:	str	r1, [sp, #52]	; 0x34
   1af28:	str	r1, [sp]
   1af2c:	str	r0, [sp, #4]
   1af30:	mov	r0, #1
   1af34:	orr	r2, r0, sl, lsl #1
   1af38:	str	r5, [sp, #60]	; 0x3c
   1af3c:	lsl	r0, r5, #1
   1af40:	orr	r8, r0, sl, lsr #31
   1af44:	sub	r0, fp, #88	; 0x58
   1af48:	mov	r3, r8
   1af4c:	bl	1b224 <flatcc_json_printer_clear@@Base+0x3a8>
   1af50:	vmov.f64	d0, d8
   1af54:	bl	1aec0 <flatcc_json_printer_clear@@Base+0x44>
   1af58:	str	r0, [sp, #48]	; 0x30
   1af5c:	vcmpe.f64	d8, #0.0
   1af60:	vmrs	APSR_nzcv, fpscr
   1af64:	ble	1b108 <flatcc_json_printer_clear@@Base+0x28c>
   1af68:	vldr	d16, [pc, #440]	; 1b128 <flatcc_json_printer_clear@@Base+0x2ac>
   1af6c:	vcmpe.f64	d8, d16
   1af70:	vmrs	APSR_nzcv, fpscr
   1af74:	bhi	1b108 <flatcc_json_printer_clear@@Base+0x28c>
   1af78:	mov	r9, r1
   1af7c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1af80:	mvn	r1, #123	; 0x7b
   1af84:	sub	r0, r1, r0
   1af88:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1af8c:	str	r1, [sp, #44]	; 0x2c
   1af90:	add	r1, sp, #96	; 0x60
   1af94:	bl	1b2c8 <flatcc_json_printer_clear@@Base+0x44c>
   1af98:	str	r0, [sp, #64]	; 0x40
   1af9c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1afa0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1afa4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1afa8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1afac:	add	r7, sp, #96	; 0x60
   1afb0:	ldm	r7, {r4, r6, r7}
   1afb4:	ldr	r5, [sp, #108]	; 0x6c
   1afb8:	stm	sp, {r0, r1, r4, r6, r7}
   1afbc:	str	r5, [sp, #20]
   1afc0:	sub	r0, fp, #72	; 0x48
   1afc4:	bl	1b330 <flatcc_json_printer_clear@@Base+0x4b4>
   1afc8:	mov	r0, #0
   1afcc:	ldr	ip, [sp, #44]	; 0x2c
   1afd0:	str	ip, [sp]
   1afd4:	stmib	sp, {r0, r4, r6, r7}
   1afd8:	str	r5, [sp, #20]
   1afdc:	movw	r0, #0
   1afe0:	movt	r0, #32752	; 0x7ff0
   1afe4:	and	r0, r9, r0
   1afe8:	clz	r0, r0
   1afec:	lsr	r0, r0, #5
   1aff0:	bfc	r9, #20, #12
   1aff4:	ldr	r1, [sp, #48]	; 0x30
   1aff8:	orrs	r1, r1, r9
   1affc:	movwne	r1, #1
   1b000:	orrs	r0, r1, r0
   1b004:	ldr	r1, [sp, #60]	; 0x3c
   1b008:	lsl	r1, r1, #2
   1b00c:	orreq	r8, r1, sl, lsr #30
   1b010:	lsl	r1, sl, #2
   1b014:	lslne	r1, sl, #1
   1b018:	subs	r1, r1, #1
   1b01c:	sbc	r2, r8, #0
   1b020:	cmp	r0, #0
   1b024:	ldr	r0, [sp, #56]	; 0x38
   1b028:	ldr	r3, [sp, #52]	; 0x34
   1b02c:	subeq	r3, r0, #2
   1b030:	sub	r0, r3, ip
   1b034:	rsb	r3, r0, #32
   1b038:	lsr	r3, r1, r3
   1b03c:	orr	r3, r3, r2, lsl r0
   1b040:	subs	r2, r0, #32
   1b044:	lslpl	r3, r1, r2
   1b048:	lsl	r2, r1, r0
   1b04c:	movwpl	r2, #0
   1b050:	add	r0, sp, #80	; 0x50
   1b054:	bl	1b330 <flatcc_json_printer_clear@@Base+0x4b4>
   1b058:	ldr	r8, [sp, #80]	; 0x50
   1b05c:	ldr	r9, [sp, #84]	; 0x54
   1b060:	ldr	r0, [sp, #88]	; 0x58
   1b064:	str	r0, [sp, #60]	; 0x3c
   1b068:	ldr	sl, [sp, #92]	; 0x5c
   1b06c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b070:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b074:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1b078:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1b07c:	stm	sp, {r0, r1, r4, r6, r7}
   1b080:	str	r5, [sp, #20]
   1b084:	sub	r0, fp, #88	; 0x58
   1b088:	bl	1b330 <flatcc_json_printer_clear@@Base+0x4b4>
   1b08c:	sub	r3, fp, #68	; 0x44
   1b090:	ldm	r3, {r1, r2, r3}
   1b094:	ldr	r7, [fp, #-88]	; 0xffffffa8
   1b098:	ldr	r5, [fp, #-84]	; 0xffffffac
   1b09c:	sub	ip, fp, #80	; 0x50
   1b0a0:	ldm	ip, {r4, r6, ip}
   1b0a4:	ldr	r0, [sp, #68]	; 0x44
   1b0a8:	str	r0, [sp, #32]
   1b0ac:	ldr	r0, [sp, #72]	; 0x48
   1b0b0:	str	r0, [sp, #36]	; 0x24
   1b0b4:	add	r0, sp, #80	; 0x50
   1b0b8:	str	r0, [sp, #40]	; 0x28
   1b0bc:	str	ip, [sp]
   1b0c0:	stmib	sp, {r1, r2, r3, r7}
   1b0c4:	str	r5, [sp, #20]
   1b0c8:	str	r4, [sp, #24]
   1b0cc:	str	r6, [sp, #28]
   1b0d0:	mov	r0, r8
   1b0d4:	mov	r1, r9
   1b0d8:	ldr	r2, [sp, #60]	; 0x3c
   1b0dc:	mov	r3, sl
   1b0e0:	bl	1b390 <flatcc_json_printer_clear@@Base+0x514>
   1b0e4:	ldr	r1, [sp, #80]	; 0x50
   1b0e8:	ldr	r2, [sp, #64]	; 0x40
   1b0ec:	sub	r1, r1, r2
   1b0f0:	ldr	r2, [sp, #76]	; 0x4c
   1b0f4:	str	r1, [r2]
   1b0f8:	sub	sp, fp, #40	; 0x28
   1b0fc:	vpop	{d8}
   1b100:	add	sp, sp, #4
   1b104:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b108:	movw	r0, #51274	; 0xc84a
   1b10c:	movt	r0, #1
   1b110:	movw	r1, #51127	; 0xc7b7
   1b114:	movt	r1, #1
   1b118:	movw	r3, #51311	; 0xc86f
   1b11c:	movt	r3, #1
   1b120:	mov	r2, #138	; 0x8a
   1b124:	bl	12998 <__assert_fail@plt>
   1b128:			; <UNDEFINED> instruction: 0xffffffff
   1b12c:	svcvc	0x00efffff
   1b130:	push	{r4, sl, fp, lr}
   1b134:	add	fp, sp, #8
   1b138:	cmn	r0, #1
   1b13c:	ble	1b148 <flatcc_json_printer_clear@@Base+0x2cc>
   1b140:	mov	lr, r1
   1b144:	b	1b158 <flatcc_json_printer_clear@@Base+0x2dc>
   1b148:	mov	r2, #45	; 0x2d
   1b14c:	mov	lr, r1
   1b150:	strb	r2, [lr], #1
   1b154:	rsb	r0, r0, #0
   1b158:	movw	ip, #26215	; 0x6667
   1b15c:	movt	ip, #26214	; 0x6666
   1b160:	mov	r3, lr
   1b164:	smmul	r2, r0, ip
   1b168:	asr	r4, r2, #2
   1b16c:	add	r2, r4, r2, lsr #31
   1b170:	add	r4, r2, r2, lsl #2
   1b174:	sub	r4, r0, r4, lsl #1
   1b178:	add	r4, r4, #48	; 0x30
   1b17c:	strb	r4, [r3], #1
   1b180:	add	r0, r0, #9
   1b184:	cmp	r0, #18
   1b188:	mov	r0, r2
   1b18c:	bhi	1b164 <flatcc_json_printer_clear@@Base+0x2e8>
   1b190:	mov	r2, #0
   1b194:	mov	r0, r3
   1b198:	strb	r2, [r0], -lr
   1b19c:	cmp	r0, #2
   1b1a0:	blt	1b1c8 <flatcc_json_printer_clear@@Base+0x34c>
   1b1a4:	add	r0, r0, r0, lsr #31
   1b1a8:	asr	r0, r0, #1
   1b1ac:	sub	r2, r3, #1
   1b1b0:	ldrb	ip, [lr]
   1b1b4:	ldrb	r4, [r2]
   1b1b8:	strb	r4, [lr], #1
   1b1bc:	strb	ip, [r2], #-1
   1b1c0:	subs	r0, r0, #1
   1b1c4:	bne	1b1b0 <flatcc_json_printer_clear@@Base+0x334>
   1b1c8:	sub	r0, r3, r1
   1b1cc:	pop	{r4, sl, fp, pc}
   1b1d0:	push	{r4, sl, fp, lr}
   1b1d4:	add	fp, sp, #8
   1b1d8:	mov	r4, r0
   1b1dc:	bl	1aec0 <flatcc_json_printer_clear@@Base+0x44>
   1b1e0:	movw	r2, #0
   1b1e4:	movt	r2, #32752	; 0x7ff0
   1b1e8:	ands	r2, r1, r2
   1b1ec:	bfc	r1, #20, #12
   1b1f0:	beq	1b210 <flatcc_json_printer_clear@@Base+0x394>
   1b1f4:	orr	r1, r1, #1048576	; 0x100000
   1b1f8:	strd	r0, [r4]
   1b1fc:	movw	r0, #64461	; 0xfbcd
   1b200:	movt	r0, #65535	; 0xffff
   1b204:	add	r0, r0, r2, lsr #20
   1b208:	str	r0, [r4, #8]
   1b20c:	pop	{r4, sl, fp, pc}
   1b210:	strd	r0, [r4]
   1b214:	movw	r0, #64462	; 0xfbce
   1b218:	movt	r0, #65535	; 0xffff
   1b21c:	str	r0, [r4, #8]
   1b220:	pop	{r4, sl, fp, pc}
   1b224:	push	{r4, sl, fp, lr}
   1b228:	add	fp, sp, #8
   1b22c:	orrs	r1, r2, r3
   1b230:	beq	1b2a8 <flatcc_json_printer_clear@@Base+0x42c>
   1b234:	ldr	r1, [fp, #8]
   1b238:	mov	r4, #0
   1b23c:	cmp	r4, r3, lsr #22
   1b240:	bne	1b25c <flatcc_json_printer_clear@@Base+0x3e0>
   1b244:	lsl	r3, r3, #10
   1b248:	orr	r3, r3, r2, lsr #22
   1b24c:	sub	r1, r1, #10
   1b250:	lsl	r2, r2, #10
   1b254:	cmp	r3, #4194304	; 0x400000
   1b258:	bcc	1b244 <flatcc_json_printer_clear@@Base+0x3c8>
   1b25c:	ldr	ip, [fp, #12]
   1b260:	cmp	r3, #0
   1b264:	bmi	1b290 <flatcc_json_printer_clear@@Base+0x414>
   1b268:	mvn	lr, #0
   1b26c:	lsl	r3, r3, #1
   1b270:	orr	r3, r3, r2, lsr #31
   1b274:	sub	r1, r1, #1
   1b278:	lsl	r4, r2, #1
   1b27c:	subs	r2, lr, r2, lsl #1
   1b280:	sbcs	r2, lr, r3
   1b284:	mov	r2, r4
   1b288:	blt	1b26c <flatcc_json_printer_clear@@Base+0x3f0>
   1b28c:	b	1b294 <flatcc_json_printer_clear@@Base+0x418>
   1b290:	mov	r4, r2
   1b294:	str	r4, [r0]
   1b298:	str	r3, [r0, #4]
   1b29c:	str	r1, [r0, #8]
   1b2a0:	str	ip, [r0, #12]
   1b2a4:	pop	{r4, sl, fp, pc}
   1b2a8:	movw	r0, #51352	; 0xc898
   1b2ac:	movt	r0, #1
   1b2b0:	movw	r1, #51361	; 0xc8a1
   1b2b4:	movt	r1, #1
   1b2b8:	movw	r3, #51447	; 0xc8f7
   1b2bc:	movt	r3, #1
   1b2c0:	mov	r2, #260	; 0x104
   1b2c4:	bl	12998 <__assert_fail@plt>
   1b2c8:	push	{r4, sl, fp, lr}
   1b2cc:	add	fp, sp, #8
   1b2d0:	mov	r4, r1
   1b2d4:	add	r0, r0, #63	; 0x3f
   1b2d8:	vldr	d16, [pc, #72]	; 1b328 <flatcc_json_printer_clear@@Base+0x4ac>
   1b2dc:	vmov	s0, r0
   1b2e0:	vcvt.f64.s32	d17, s0
   1b2e4:	vmul.f64	d0, d17, d16
   1b2e8:	bl	1b714 <flatcc_json_printer_clear@@Base+0x898>
   1b2ec:	movw	r1, #347	; 0x15b
   1b2f0:	add	r0, r0, r1
   1b2f4:	asr	r1, r0, #31
   1b2f8:	add	r0, r0, r1, lsr #29
   1b2fc:	mvn	r1, #14
   1b300:	and	r0, r1, r0, lsl #1
   1b304:	movw	r1, #52160	; 0xcbc0
   1b308:	movt	r1, #1
   1b30c:	add	r0, r0, r1
   1b310:	ldrd	r2, [r0, #16]
   1b314:	stm	r4, {r2, r3}
   1b318:	ldrsh	r1, [r0, #24]
   1b31c:	str	r1, [r4, #8]
   1b320:	ldrsh	r0, [r0, #26]
   1b324:	pop	{r4, sl, fp, pc}
   1b328:			; <UNDEFINED> instruction: 0x509f79fe
   1b32c:	svccc	0x00d34413
   1b330:	push	{r4, r5, fp, lr}
   1b334:	add	fp, sp, #8
   1b338:	ldr	ip, [fp, #24]
   1b33c:	ldr	r1, [fp, #8]
   1b340:	add	r1, r1, ip
   1b344:	add	r1, r1, #64	; 0x40
   1b348:	str	r1, [r0, #8]
   1b34c:	ldr	ip, [fp, #16]
   1b350:	umull	r1, lr, ip, r2
   1b354:	umull	ip, r1, ip, r3
   1b358:	mov	r5, #0
   1b35c:	adds	lr, ip, lr
   1b360:	adc	r5, r5, #0
   1b364:	ldr	ip, [fp, #20]
   1b368:	umull	r2, r4, ip, r2
   1b36c:	adds	r2, lr, r2
   1b370:	adc	r5, r5, #0
   1b374:	umaal	r1, r4, ip, r3
   1b378:	adds	r2, r2, #-2147483648	; 0x80000000
   1b37c:	adcs	r1, r1, r5
   1b380:	str	r1, [r0]
   1b384:	adc	r1, r4, #0
   1b388:	str	r1, [r0, #4]
   1b38c:	pop	{r4, r5, fp, pc}
   1b390:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b394:	add	fp, sp, #28
   1b398:	sub	sp, sp, #132	; 0x84
   1b39c:	mov	r6, #0
   1b3a0:	str	r6, [sp, #20]
   1b3a4:	str	r2, [sp, #16]
   1b3a8:	subs	r0, r0, #1
   1b3ac:	sbc	r1, r1, #0
   1b3b0:	str	r1, [sp, #12]
   1b3b4:	str	r0, [sp, #8]
   1b3b8:	str	r6, [sp, #4]
   1b3bc:	ldr	r0, [fp, #32]
   1b3c0:	str	r0, [sp]
   1b3c4:	ldr	r0, [fp, #28]
   1b3c8:	ldr	r1, [fp, #24]
   1b3cc:	adds	r9, r1, #1
   1b3d0:	adc	r4, r0, #0
   1b3d4:	sub	r0, fp, #48	; 0x30
   1b3d8:	mov	r2, r9
   1b3dc:	mov	r3, r4
   1b3e0:	bl	1b740 <flatcc_json_printer_clear@@Base+0x8c4>
   1b3e4:	ldr	r1, [fp, #16]
   1b3e8:	rsb	sl, r1, #0
   1b3ec:	lsr	r0, r9, sl
   1b3f0:	add	r8, r1, #32
   1b3f4:	orr	r7, r0, r4, lsl r8
   1b3f8:	mvn	r0, #31
   1b3fc:	subs	r5, r0, r1
   1b400:	lsrpl	r7, r4, r5
   1b404:	add	r1, r1, #64	; 0x40
   1b408:	sub	r2, fp, #52	; 0x34
   1b40c:	mov	r0, r7
   1b410:	bl	1b798 <flatcc_json_printer_clear@@Base+0x91c>
   1b414:	mov	ip, sl
   1b418:	ldr	r1, [fp, #48]	; 0x30
   1b41c:	str	r0, [r1]
   1b420:	mov	sl, #1
   1b424:	lsr	r2, sl, r8
   1b428:	cmp	r5, #0
   1b42c:	lslpl	r2, sl, r5
   1b430:	lsl	r5, sl, ip
   1b434:	movwpl	r5, #0
   1b438:	ldr	r0, [fp, #44]	; 0x2c
   1b43c:	str	r6, [r0]
   1b440:	ldr	r1, [r1]
   1b444:	str	r5, [sp, #40]	; 0x28
   1b448:	subs	r3, r5, #1
   1b44c:	str	r9, [sp, #48]	; 0x30
   1b450:	and	r9, r3, r9
   1b454:	str	r2, [sp, #44]	; 0x2c
   1b458:	sbc	r2, r2, #0
   1b45c:	str	r4, [sp, #52]	; 0x34
   1b460:	str	r2, [sp, #68]	; 0x44
   1b464:	and	r8, r2, r4
   1b468:	cmp	r1, #1
   1b46c:	blt	1b51c <flatcc_json_printer_clear@@Base+0x6a0>
   1b470:	str	r3, [sp, #36]	; 0x24
   1b474:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1b478:	str	r1, [sp, #64]	; 0x40
   1b47c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b480:	str	r1, [sp, #60]	; 0x3c
   1b484:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1b488:	ldr	r3, [fp, #48]	; 0x30
   1b48c:	udiv	r2, r7, r5
   1b490:	add	r6, r2, #48	; 0x30
   1b494:	ldr	r4, [r0]
   1b498:	ldr	r1, [fp, #40]	; 0x28
   1b49c:	strb	r6, [r1, r4]
   1b4a0:	ldr	r6, [r0]
   1b4a4:	add	r6, r6, #1
   1b4a8:	str	r6, [r0]
   1b4ac:	ldr	r6, [r3]
   1b4b0:	sub	r6, r6, #1
   1b4b4:	str	r6, [r3]
   1b4b8:	mls	r7, r2, r5, r7
   1b4bc:	rsb	r6, ip, #32
   1b4c0:	lsr	r2, r7, r6
   1b4c4:	subs	r4, ip, #32
   1b4c8:	lslpl	r2, r7, r4
   1b4cc:	lsl	r1, r7, ip
   1b4d0:	movwpl	r1, #0
   1b4d4:	adds	lr, r1, r9
   1b4d8:	adc	r2, r2, r8
   1b4dc:	ldr	r1, [sp, #64]	; 0x40
   1b4e0:	str	lr, [sp, #56]	; 0x38
   1b4e4:	subs	r1, lr, r1
   1b4e8:	ldr	r1, [sp, #60]	; 0x3c
   1b4ec:	sbcs	r1, r2, r1
   1b4f0:	bcc	1b668 <flatcc_json_printer_clear@@Base+0x7ec>
   1b4f4:	movw	r1, #52429	; 0xcccd
   1b4f8:	movt	r1, #52428	; 0xcccc
   1b4fc:	umull	r1, r2, r5, r1
   1b500:	lsr	r5, r2, #3
   1b504:	ldr	r1, [r3]
   1b508:	cmp	r1, #0
   1b50c:	bgt	1b48c <flatcc_json_printer_clear@@Base+0x610>
   1b510:	str	r5, [fp, #-52]	; 0xffffffcc
   1b514:	mov	r6, #0
   1b518:	ldr	r3, [sp, #36]	; 0x24
   1b51c:	ldr	r7, [fp, #-48]	; 0xffffffd0
   1b520:	ldr	r5, [fp, #-44]	; 0xffffffd4
   1b524:	rsb	r1, ip, #32
   1b528:	str	r1, [sp, #64]	; 0x40
   1b52c:	sub	r1, ip, #32
   1b530:	str	r1, [sp, #60]	; 0x3c
   1b534:	str	ip, [sp, #56]	; 0x38
   1b538:	mov	lr, #10
   1b53c:	mov	ip, r6
   1b540:	umull	r4, r6, r9, lr
   1b544:	mov	r9, r3
   1b548:	ldr	r0, [sp, #56]	; 0x38
   1b54c:	lsr	r3, r4, r0
   1b550:	add	r2, r8, r8, lsl #2
   1b554:	add	r2, r6, r2, lsl #1
   1b558:	ldr	r1, [sp, #64]	; 0x40
   1b55c:	orr	r3, r3, r2, lsl r1
   1b560:	ldr	r1, [sp, #60]	; 0x3c
   1b564:	cmp	r1, #0
   1b568:	lsrpl	r3, r2, r1
   1b56c:	add	r3, r3, #48	; 0x30
   1b570:	ldr	r1, [fp, #44]	; 0x2c
   1b574:	mov	r0, r1
   1b578:	ldr	r6, [r1]
   1b57c:	ldr	r1, [fp, #40]	; 0x28
   1b580:	strb	r3, [r1, r6]
   1b584:	ldr	r3, [r0]
   1b588:	add	r3, r3, #1
   1b58c:	str	r3, [r0]
   1b590:	ldr	r0, [fp, #48]	; 0x30
   1b594:	ldr	r3, [r0]
   1b598:	sub	r3, r3, #1
   1b59c:	str	r3, [r0]
   1b5a0:	umull	sl, r3, sl, lr
   1b5a4:	add	r6, ip, ip, lsl #2
   1b5a8:	add	r6, r3, r6, lsl #1
   1b5ac:	umull	r7, r3, r7, lr
   1b5b0:	add	r5, r5, r5, lsl #2
   1b5b4:	add	r5, r3, r5, lsl #1
   1b5b8:	mov	r3, r9
   1b5bc:	ldr	r0, [sp, #68]	; 0x44
   1b5c0:	and	r8, r2, r0
   1b5c4:	and	r9, r4, r9
   1b5c8:	subs	r2, r9, r7
   1b5cc:	sbcs	r2, r8, r5
   1b5d0:	bcs	1b53c <flatcc_json_printer_clear@@Base+0x6c0>
   1b5d4:	str	r7, [fp, #-48]	; 0xffffffd0
   1b5d8:	str	r5, [fp, #-44]	; 0xffffffd4
   1b5dc:	ldr	r0, [fp, #44]	; 0x2c
   1b5e0:	ldr	r4, [r0]
   1b5e4:	mov	r0, #0
   1b5e8:	ldr	r1, [fp, #32]
   1b5ec:	str	r1, [sp]
   1b5f0:	str	r0, [sp, #4]
   1b5f4:	ldr	r0, [fp, #8]
   1b5f8:	str	r0, [sp, #8]
   1b5fc:	ldr	r0, [fp, #12]
   1b600:	str	r0, [sp, #12]
   1b604:	ldr	r0, [fp, #16]
   1b608:	str	r0, [sp, #16]
   1b60c:	ldr	r0, [fp, #20]
   1b610:	str	r0, [sp, #20]
   1b614:	add	r0, sp, #72	; 0x48
   1b618:	ldr	r2, [sp, #48]	; 0x30
   1b61c:	ldr	r3, [sp, #52]	; 0x34
   1b620:	bl	1b740 <flatcc_json_printer_clear@@Base+0x8c4>
   1b624:	ldr	r0, [sp, #72]	; 0x48
   1b628:	ldr	r1, [sp, #76]	; 0x4c
   1b62c:	str	r7, [sp]
   1b630:	stmib	sp, {r5, r9}
   1b634:	str	r8, [sp, #12]
   1b638:	ldr	r2, [sp, #40]	; 0x28
   1b63c:	str	r2, [sp, #16]
   1b640:	ldr	r2, [sp, #44]	; 0x2c
   1b644:	str	r2, [sp, #20]
   1b648:	str	sl, [sp, #24]
   1b64c:	str	r6, [sp, #28]
   1b650:	umull	r2, r3, r0, sl
   1b654:	mla	r0, r0, r6, r3
   1b658:	mla	r3, r1, sl, r0
   1b65c:	ldr	r0, [fp, #40]	; 0x28
   1b660:	mov	r1, r4
   1b664:	b	1b708 <flatcc_json_printer_clear@@Base+0x88c>
   1b668:	str	r5, [fp, #-52]	; 0xffffffcc
   1b66c:	ldr	sl, [r0]
   1b670:	mov	r8, #0
   1b674:	ldr	r0, [fp, #32]
   1b678:	stm	sp, {r0, r8}
   1b67c:	ldr	r0, [fp, #8]
   1b680:	str	r0, [sp, #8]
   1b684:	ldr	r0, [fp, #12]
   1b688:	str	r0, [sp, #12]
   1b68c:	ldr	r0, [fp, #16]
   1b690:	str	r0, [sp, #16]
   1b694:	ldr	r0, [fp, #20]
   1b698:	str	r0, [sp, #20]
   1b69c:	sub	r0, fp, #72	; 0x48
   1b6a0:	mov	r9, r2
   1b6a4:	ldr	r2, [sp, #48]	; 0x30
   1b6a8:	ldr	r3, [sp, #52]	; 0x34
   1b6ac:	mov	r7, ip
   1b6b0:	bl	1b740 <flatcc_json_printer_clear@@Base+0x8c4>
   1b6b4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1b6b8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1b6bc:	mov	r0, #1
   1b6c0:	lsr	r1, r5, r6
   1b6c4:	cmp	r4, #0
   1b6c8:	lslpl	r1, r5, r4
   1b6cc:	lsl	r6, r5, r7
   1b6d0:	movwpl	r6, #0
   1b6d4:	ldr	r7, [sp, #64]	; 0x40
   1b6d8:	str	r7, [sp]
   1b6dc:	ldr	r7, [sp, #60]	; 0x3c
   1b6e0:	str	r7, [sp, #4]
   1b6e4:	ldr	r7, [sp, #56]	; 0x38
   1b6e8:	str	r7, [sp, #8]
   1b6ec:	str	r9, [sp, #12]
   1b6f0:	str	r6, [sp, #16]
   1b6f4:	str	r1, [sp, #20]
   1b6f8:	str	r0, [sp, #24]
   1b6fc:	str	r8, [sp, #28]
   1b700:	ldr	r0, [fp, #40]	; 0x28
   1b704:	mov	r1, sl
   1b708:	bl	1b7d4 <flatcc_json_printer_clear@@Base+0x958>
   1b70c:	sub	sp, fp, #28
   1b710:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b714:	vcvt.s32.f64	s2, d0
   1b718:	vmov	r0, s2
   1b71c:	vcmpe.f64	d0, #0.0
   1b720:	vmrs	APSR_nzcv, fpscr
   1b724:	bxmi	lr
   1b728:	vcvt.f64.s32	d16, s2
   1b72c:	vsub.f64	d16, d0, d16
   1b730:	vcmp.f64	d16, #0.0
   1b734:	vmrs	APSR_nzcv, fpscr
   1b738:	addne	r0, r0, #1
   1b73c:	bx	lr
   1b740:	push	{fp, lr}
   1b744:	mov	fp, sp
   1b748:	ldr	ip, [fp, #8]
   1b74c:	str	ip, [r0, #8]
   1b750:	ldr	r1, [fp, #16]
   1b754:	subs	r1, r2, r1
   1b758:	str	r1, [r0]
   1b75c:	ldr	r1, [fp, #20]
   1b760:	sbcs	r1, r3, r1
   1b764:	str	r1, [r0, #4]
   1b768:	bcc	1b778 <flatcc_json_printer_clear@@Base+0x8fc>
   1b76c:	ldr	r0, [fp, #24]
   1b770:	cmp	ip, r0
   1b774:	popeq	{fp, pc}
   1b778:	movw	r0, #51504	; 0xc930
   1b77c:	movt	r0, #1
   1b780:	movw	r1, #51361	; 0xc8a1
   1b784:	movt	r1, #1
   1b788:	movw	r3, #51529	; 0xc949
   1b78c:	movt	r3, #1
   1b790:	mov	r2, #239	; 0xef
   1b794:	bl	12998 <__assert_fail@plt>
   1b798:	push	{fp, lr}
   1b79c:	mov	fp, sp
   1b7a0:	movw	r3, #1233	; 0x4d1
   1b7a4:	mla	lr, r1, r3, r3
   1b7a8:	mov	r1, #1
   1b7ac:	add	r1, r1, lr, asr #12
   1b7b0:	movw	ip, #53552	; 0xd130
   1b7b4:	movt	ip, #1
   1b7b8:	ldr	r3, [ip, r1, lsl #2]
   1b7bc:	cmp	r3, r0
   1b7c0:	asrhi	r1, lr, #12
   1b7c4:	ldr	r0, [ip, r1, lsl #2]
   1b7c8:	str	r0, [r2]
   1b7cc:	mov	r0, r1
   1b7d0:	pop	{fp, pc}
   1b7d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b7d8:	add	fp, sp, #28
   1b7dc:	sub	sp, sp, #20
   1b7e0:	str	r1, [sp, #12]
   1b7e4:	str	r0, [sp, #16]
   1b7e8:	ldr	r5, [fp, #20]
   1b7ec:	ldr	ip, [fp, #12]
   1b7f0:	ldr	r1, [fp, #16]
   1b7f4:	ldr	lr, [fp, #8]
   1b7f8:	subs	r8, lr, r1
   1b7fc:	sbc	r7, ip, r5
   1b800:	mov	r9, #0
   1b804:	ldr	r0, [fp, #28]
   1b808:	ldr	r4, [fp, #24]
   1b80c:	subs	r4, r8, r4
   1b810:	sbcs	r4, r7, r0
   1b814:	movwcc	r9, #1
   1b818:	ldr	r4, [fp, #36]	; 0x24
   1b81c:	ldr	r0, [fp, #32]
   1b820:	adds	r6, r0, r2
   1b824:	str	r6, [sp, #8]
   1b828:	adc	r6, r4, r3
   1b82c:	subs	r0, r2, r0
   1b830:	sbc	sl, r3, r4
   1b834:	subs	r4, r1, r0
   1b838:	sbcs	r4, r5, sl
   1b83c:	str	r6, [sp, #4]
   1b840:	bcs	1b904 <flatcc_json_printer_clear@@Base+0xa88>
   1b844:	ldr	r3, [fp, #24]
   1b848:	subs	r4, r8, r3
   1b84c:	ldr	r2, [fp, #28]
   1b850:	sbcs	r4, r7, r2
   1b854:	bcc	1b90c <flatcc_json_printer_clear@@Base+0xa90>
   1b858:	ldr	r1, [sp, #12]
   1b85c:	sub	r1, r1, #1
   1b860:	str	r1, [sp, #12]
   1b864:	ldr	r5, [fp, #20]
   1b868:	ldr	r8, [fp, #16]
   1b86c:	adds	r7, r8, r3
   1b870:	adc	r6, r5, r2
   1b874:	subs	r4, r7, r0
   1b878:	sbcs	r4, r6, sl
   1b87c:	bcc	1b8b4 <flatcc_json_printer_clear@@Base+0xa38>
   1b880:	subs	r4, r7, r0
   1b884:	sbc	lr, r6, sl
   1b888:	mov	r1, ip
   1b88c:	subs	ip, r0, r8
   1b890:	mov	r2, r8
   1b894:	sbc	r8, sl, r5
   1b898:	subs	r4, ip, r4
   1b89c:	mov	ip, r1
   1b8a0:	sbcs	r4, r8, lr
   1b8a4:	mov	r8, r2
   1b8a8:	ldr	r2, [fp, #28]
   1b8ac:	ldr	lr, [fp, #8]
   1b8b0:	bcc	1b920 <flatcc_json_printer_clear@@Base+0xaa4>
   1b8b4:	ldr	r1, [sp, #16]
   1b8b8:	ldr	r4, [sp, #12]
   1b8bc:	ldrb	r5, [r1, r4]
   1b8c0:	sub	r5, r5, #1
   1b8c4:	strb	r5, [r1, r4]
   1b8c8:	subs	r5, lr, r7
   1b8cc:	sbc	r4, ip, r6
   1b8d0:	subs	r1, r5, r3
   1b8d4:	sbcs	r1, r4, r2
   1b8d8:	mov	r9, #0
   1b8dc:	movwcc	r9, #1
   1b8e0:	subs	r1, r7, r0
   1b8e4:	sbcs	r1, r6, sl
   1b8e8:	bcs	1b918 <flatcc_json_printer_clear@@Base+0xa9c>
   1b8ec:	subs	r1, r5, r3
   1b8f0:	sbcs	r1, r4, r2
   1b8f4:	mov	r8, r7
   1b8f8:	mov	r5, r6
   1b8fc:	bcs	1b86c <flatcc_json_printer_clear@@Base+0x9f0>
   1b900:	b	1b920 <flatcc_json_printer_clear@@Base+0xaa4>
   1b904:	ldr	r2, [fp, #28]
   1b908:	ldr	r3, [fp, #24]
   1b90c:	ldr	r5, [fp, #20]
   1b910:	ldr	r8, [fp, #16]
   1b914:	b	1b920 <flatcc_json_printer_clear@@Base+0xaa4>
   1b918:	mov	r8, r7
   1b91c:	mov	r5, r6
   1b920:	ldr	r4, [sp, #8]
   1b924:	subs	r0, r8, r4
   1b928:	ldr	r6, [sp, #4]
   1b92c:	sbcs	r0, r5, r6
   1b930:	bcs	1b970 <flatcc_json_printer_clear@@Base+0xaf4>
   1b934:	tst	r9, #1
   1b938:	bne	1b970 <flatcc_json_printer_clear@@Base+0xaf4>
   1b93c:	adds	r1, r8, r3
   1b940:	adc	r2, r5, r2
   1b944:	mov	r0, #0
   1b948:	subs	r3, r1, r4
   1b94c:	sbcs	r3, r2, r6
   1b950:	bcc	1b9bc <flatcc_json_printer_clear@@Base+0xb40>
   1b954:	subs	r3, r4, r8
   1b958:	sbc	r7, r6, r5
   1b95c:	subs	r1, r1, r4
   1b960:	sbc	r2, r2, r6
   1b964:	subs	r1, r1, r3
   1b968:	sbcs	r1, r2, r7
   1b96c:	bcc	1b9bc <flatcc_json_printer_clear@@Base+0xb40>
   1b970:	ldr	r0, [fp, #36]	; 0x24
   1b974:	lsl	r0, r0, #1
   1b978:	ldr	r1, [fp, #32]
   1b97c:	mov	r2, r1
   1b980:	orr	r1, r0, r1, lsr #31
   1b984:	mov	r0, #0
   1b988:	subs	r2, r8, r2, lsl #1
   1b98c:	sbcs	r1, r5, r1
   1b990:	bcc	1b9bc <flatcc_json_printer_clear@@Base+0xb40>
   1b994:	ldr	r0, [fp, #36]	; 0x24
   1b998:	lsl	r0, r0, #2
   1b99c:	ldr	r1, [fp, #32]
   1b9a0:	orr	r0, r0, r1, lsr #30
   1b9a4:	subs	r1, lr, r1, lsl #2
   1b9a8:	sbc	r2, ip, r0
   1b9ac:	mov	r0, #0
   1b9b0:	subs	r1, r1, r8
   1b9b4:	sbcs	r1, r2, r5
   1b9b8:	movwcs	r0, #1
   1b9bc:	sub	sp, fp, #28
   1b9c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b9c4:	push	{r4, r5, r6, r7, fp, lr}
   1b9c8:	add	fp, sp, #16
   1b9cc:	mov	r4, r2
   1b9d0:	mov	r6, r1
   1b9d4:	mov	r5, r0
   1b9d8:	ldr	r0, [r0, #16]
   1b9dc:	ldr	r1, [r5, #20]
   1b9e0:	cmp	r1, r0
   1b9e4:	bcc	1b9f8 <flatcc_json_printer_clear@@Base+0xb7c>
   1b9e8:	ldr	r2, [r5, #44]	; 0x2c
   1b9ec:	mov	r0, r5
   1b9f0:	mov	r1, #0
   1b9f4:	blx	r2
   1b9f8:	ldr	r1, [r5, #16]
   1b9fc:	ldr	r0, [r5, #20]
   1ba00:	sub	r7, r1, r0
   1ba04:	cmp	r7, r4
   1ba08:	bcs	1ba50 <flatcc_json_printer_clear@@Base+0xbd4>
   1ba0c:	mov	r1, r6
   1ba10:	mov	r2, r7
   1ba14:	bl	128b4 <memcpy@plt>
   1ba18:	ldr	r0, [r5, #20]
   1ba1c:	ldr	r2, [r5, #44]	; 0x2c
   1ba20:	add	r0, r0, r7
   1ba24:	str	r0, [r5, #20]
   1ba28:	mov	r0, r5
   1ba2c:	mov	r1, #0
   1ba30:	blx	r2
   1ba34:	sub	r4, r4, r7
   1ba38:	add	r6, r6, r7
   1ba3c:	ldr	r1, [r5, #16]
   1ba40:	ldr	r0, [r5, #20]
   1ba44:	sub	r7, r1, r0
   1ba48:	cmp	r4, r7
   1ba4c:	bhi	1ba0c <flatcc_json_printer_clear@@Base+0xb90>
   1ba50:	mov	r1, r6
   1ba54:	mov	r2, r4
   1ba58:	bl	128b4 <memcpy@plt>
   1ba5c:	ldr	r0, [r5, #20]
   1ba60:	add	r0, r0, r4
   1ba64:	str	r0, [r5, #20]
   1ba68:	pop	{r4, r5, r6, r7, fp, pc}
   1ba6c:	push	{r4, r5, r6, sl, fp, lr}
   1ba70:	add	fp, sp, #16
   1ba74:	mov	r5, r1
   1ba78:	mov	r4, r0
   1ba7c:	ldr	r0, [r0, #16]
   1ba80:	ldr	r1, [r4, #20]
   1ba84:	cmp	r1, r0
   1ba88:	bcc	1ba9c <flatcc_json_printer_clear@@Base+0xc20>
   1ba8c:	ldr	r2, [r4, #44]	; 0x2c
   1ba90:	mov	r0, r4
   1ba94:	mov	r1, #0
   1ba98:	blx	r2
   1ba9c:	ldr	r1, [r4, #16]
   1baa0:	ldr	r0, [r4, #20]
   1baa4:	sub	r6, r1, r0
   1baa8:	cmp	r6, r5
   1baac:	bcs	1baf0 <flatcc_json_printer_clear@@Base+0xc74>
   1bab0:	mov	r1, #32
   1bab4:	mov	r2, r6
   1bab8:	bl	12944 <memset@plt>
   1babc:	ldr	r0, [r4, #20]
   1bac0:	ldr	r2, [r4, #44]	; 0x2c
   1bac4:	add	r0, r0, r6
   1bac8:	str	r0, [r4, #20]
   1bacc:	mov	r0, r4
   1bad0:	mov	r1, #0
   1bad4:	blx	r2
   1bad8:	sub	r5, r5, r6
   1badc:	ldr	r1, [r4, #16]
   1bae0:	ldr	r0, [r4, #20]
   1bae4:	sub	r6, r1, r0
   1bae8:	cmp	r5, r6
   1baec:	bhi	1bab0 <flatcc_json_printer_clear@@Base+0xc34>
   1baf0:	mov	r1, #32
   1baf4:	mov	r2, r5
   1baf8:	bl	12944 <memset@plt>
   1bafc:	ldr	r0, [r4, #20]
   1bb00:	add	r0, r0, r5
   1bb04:	str	r0, [r4, #20]
   1bb08:	pop	{r4, r5, r6, sl, fp, pc}
   1bb0c:	add	r0, r0, r1
   1bb10:	b	1bb14 <flatcc_json_printer_clear@@Base+0xc98>
   1bb14:	ldrh	r0, [r0]
   1bb18:	b	1bb1c <flatcc_json_printer_clear@@Base+0xca0>
   1bb1c:	bx	lr
   1bb20:	mov	r2, r0
   1bb24:	lsl	r0, r0, #2
   1bb28:	movw	ip, #43691	; 0xaaab
   1bb2c:	movt	ip, #43690	; 0xaaaa
   1bb30:	umull	r0, r3, r0, ip
   1bb34:	mov	r0, #3
   1bb38:	add	r0, r0, r3, lsr #1
   1bb3c:	bic	r0, r0, #3
   1bb40:	tst	r1, #128	; 0x80
   1bb44:	bxne	lr
   1bb48:	umull	r1, r3, r2, ip
   1bb4c:	lsr	r1, r3, #1
   1bb50:	add	r1, r1, r1, lsl #1
   1bb54:	sub	r1, r2, r1
   1bb58:	cmp	r1, #1
   1bb5c:	beq	1bb70 <flatcc_json_printer_clear@@Base+0xcf4>
   1bb60:	cmp	r1, #2
   1bb64:	subeq	r0, r0, #1
   1bb68:	bxeq	lr
   1bb6c:	bx	lr
   1bb70:	sub	r0, r0, #2
   1bb74:	bx	lr
   1bb78:	push	{r4, r5, fp, lr}
   1bb7c:	add	fp, sp, #8
   1bb80:	cmp	r2, #0
   1bb84:	beq	1bcbc <flatcc_json_printer_clear@@Base+0xe40>
   1bb88:	bic	ip, r3, #224	; 0xe0
   1bb8c:	ldr	lr, [r2]
   1bb90:	cmp	ip, #0
   1bb94:	beq	1bbb4 <flatcc_json_printer_clear@@Base+0xd38>
   1bb98:	cmp	ip, #1
   1bb9c:	bne	1bcb0 <flatcc_json_printer_clear@@Base+0xe34>
   1bba0:	movw	ip, #51953	; 0xcaf1
   1bba4:	movt	ip, #1
   1bba8:	cmp	lr, #3
   1bbac:	bcs	1bbc4 <flatcc_json_printer_clear@@Base+0xd48>
   1bbb0:	b	1bc24 <flatcc_json_printer_clear@@Base+0xda8>
   1bbb4:	movw	ip, #51888	; 0xcab0
   1bbb8:	movt	ip, #1
   1bbbc:	cmp	lr, #3
   1bbc0:	bcc	1bc24 <flatcc_json_printer_clear@@Base+0xda8>
   1bbc4:	ldrb	r4, [r1]
   1bbc8:	ldrb	r4, [ip, r4, lsr #2]
   1bbcc:	strb	r4, [r0]
   1bbd0:	ldrb	r4, [r1]
   1bbd4:	ldrb	r5, [r1, #1]
   1bbd8:	lsr	r5, r5, #4
   1bbdc:	bfi	r5, r4, #4, #2
   1bbe0:	ldrb	r4, [ip, r5]
   1bbe4:	strb	r4, [r0, #1]
   1bbe8:	ldrb	r4, [r1, #1]
   1bbec:	ldrb	r5, [r1, #2]
   1bbf0:	lsr	r5, r5, #6
   1bbf4:	bfi	r5, r4, #2, #4
   1bbf8:	ldrb	r4, [ip, r5]
   1bbfc:	strb	r4, [r0, #2]
   1bc00:	ldrb	r4, [r1, #2]
   1bc04:	and	r4, r4, #63	; 0x3f
   1bc08:	ldrb	r4, [ip, r4]
   1bc0c:	strb	r4, [r0, #3]
   1bc10:	add	r0, r0, #4
   1bc14:	add	r1, r1, #3
   1bc18:	sub	lr, lr, #3
   1bc1c:	cmp	lr, #2
   1bc20:	bhi	1bbc4 <flatcc_json_printer_clear@@Base+0xd48>
   1bc24:	and	r3, r3, #128	; 0x80
   1bc28:	cmp	lr, #1
   1bc2c:	beq	1bc7c <flatcc_json_printer_clear@@Base+0xe00>
   1bc30:	cmp	lr, #2
   1bc34:	bne	1bca4 <flatcc_json_printer_clear@@Base+0xe28>
   1bc38:	ldrb	r5, [r1]
   1bc3c:	ldrb	r5, [ip, r5, lsr #2]
   1bc40:	strb	r5, [r0]
   1bc44:	ldrb	r5, [r1]
   1bc48:	ldrb	r4, [r1, #1]
   1bc4c:	lsr	r4, r4, #4
   1bc50:	bfi	r4, r5, #4, #2
   1bc54:	ldrb	r5, [ip, r4]
   1bc58:	strb	r5, [r0, #1]
   1bc5c:	ldrb	r1, [r1, #1]
   1bc60:	and	r1, r1, #15
   1bc64:	ldrb	r1, [ip, r1, lsl #2]
   1bc68:	strb	r1, [r0, #2]
   1bc6c:	cmp	r3, #0
   1bc70:	movne	r1, #61	; 0x3d
   1bc74:	strbne	r1, [r0, #3]
   1bc78:	b	1bca4 <flatcc_json_printer_clear@@Base+0xe28>
   1bc7c:	ldrb	r5, [r1]
   1bc80:	ldrb	r5, [ip, r5, lsr #2]
   1bc84:	strb	r5, [r0]
   1bc88:	ldrb	r1, [r1]
   1bc8c:	and	r1, r1, #3
   1bc90:	ldrb	r1, [ip, r1, lsl #4]
   1bc94:	strb	r1, [r0, #1]
   1bc98:	cmp	r3, #0
   1bc9c:	movwne	r1, #15677	; 0x3d3d
   1bca0:	strhne	r1, [r0, #2]
   1bca4:	mov	lr, #0
   1bca8:	cmp	r2, #0
   1bcac:	popeq	{r4, r5, fp, pc}
   1bcb0:	ldr	r0, [r2]
   1bcb4:	sub	r0, r0, lr
   1bcb8:	str	r0, [r2]
   1bcbc:	pop	{r4, r5, fp, pc}
   1bcc0:	bx	lr
   1bcc4:	bx	lr
   1bcc8:	bx	lr
   1bccc:	bx	lr
   1bcd0:	bx	lr
   1bcd4:	bx	lr
   1bcd8:	bx	lr
   1bcdc:	bx	lr
   1bce0:	bx	lr
   1bce4:	bx	lr
   1bce8:	bx	lr
   1bcec:	bx	lr
   1bcf0:	bx	lr
   1bcf4:	ldr	r0, [r0]
   1bcf8:	b	1bcfc <flatcc_json_printer_clear@@Base+0xe80>
   1bcfc:	bx	lr
   1bd00:	bx	lr
   1bd04:	ldr	r0, [r0]
   1bd08:	b	1bd0c <flatcc_json_printer_clear@@Base+0xe90>
   1bd0c:	bx	lr
   1bd10:	cmp	r3, #0
   1bd14:	cmpeq	r2, #0
   1bd18:	bne	1bd30 <flatcc_json_printer_clear@@Base+0xeb4>
   1bd1c:	cmp	r1, #0
   1bd20:	cmpeq	r0, #0
   1bd24:	mvnne	r1, #0
   1bd28:	mvnne	r0, #0
   1bd2c:	b	1bd4c <flatcc_json_printer_clear@@Base+0xed0>
   1bd30:	sub	sp, sp, #8
   1bd34:	push	{sp, lr}
   1bd38:	bl	1bd5c <flatcc_json_printer_clear@@Base+0xee0>
   1bd3c:	ldr	lr, [sp, #4]
   1bd40:	add	sp, sp, #8
   1bd44:	pop	{r2, r3}
   1bd48:	bx	lr
   1bd4c:	push	{r1, lr}
   1bd50:	mov	r0, #8
   1bd54:	bl	12878 <raise@plt>
   1bd58:	pop	{r1, pc}
   1bd5c:	cmp	r1, r3
   1bd60:	cmpeq	r0, r2
   1bd64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bd68:	mov	r4, r0
   1bd6c:	movcc	r0, #0
   1bd70:	mov	r5, r1
   1bd74:	ldr	lr, [sp, #36]	; 0x24
   1bd78:	movcc	r1, r0
   1bd7c:	bcc	1be78 <flatcc_json_printer_clear@@Base+0xffc>
   1bd80:	cmp	r3, #0
   1bd84:	clzeq	ip, r2
   1bd88:	clzne	ip, r3
   1bd8c:	addeq	ip, ip, #32
   1bd90:	cmp	r5, #0
   1bd94:	clzeq	r1, r4
   1bd98:	addeq	r1, r1, #32
   1bd9c:	clzne	r1, r5
   1bda0:	sub	ip, ip, r1
   1bda4:	sub	sl, ip, #32
   1bda8:	lsl	r9, r3, ip
   1bdac:	rsb	fp, ip, #32
   1bdb0:	orr	r9, r9, r2, lsl sl
   1bdb4:	orr	r9, r9, r2, lsr fp
   1bdb8:	lsl	r8, r2, ip
   1bdbc:	cmp	r5, r9
   1bdc0:	cmpeq	r4, r8
   1bdc4:	movcc	r0, #0
   1bdc8:	movcc	r1, r0
   1bdcc:	bcc	1bde8 <flatcc_json_printer_clear@@Base+0xf6c>
   1bdd0:	mov	r0, #1
   1bdd4:	subs	r4, r4, r8
   1bdd8:	lsl	r1, r0, sl
   1bddc:	orr	r1, r1, r0, lsr fp
   1bde0:	lsl	r0, r0, ip
   1bde4:	sbc	r5, r5, r9
   1bde8:	cmp	ip, #0
   1bdec:	beq	1be78 <flatcc_json_printer_clear@@Base+0xffc>
   1bdf0:	lsr	r6, r8, #1
   1bdf4:	orr	r6, r6, r9, lsl #31
   1bdf8:	lsr	r7, r9, #1
   1bdfc:	mov	r2, ip
   1be00:	b	1be24 <flatcc_json_printer_clear@@Base+0xfa8>
   1be04:	subs	r3, r4, r6
   1be08:	sbc	r8, r5, r7
   1be0c:	adds	r3, r3, r3
   1be10:	adc	r8, r8, r8
   1be14:	adds	r4, r3, #1
   1be18:	adc	r5, r8, #0
   1be1c:	subs	r2, r2, #1
   1be20:	beq	1be40 <flatcc_json_printer_clear@@Base+0xfc4>
   1be24:	cmp	r5, r7
   1be28:	cmpeq	r4, r6
   1be2c:	bcs	1be04 <flatcc_json_printer_clear@@Base+0xf88>
   1be30:	adds	r4, r4, r4
   1be34:	adc	r5, r5, r5
   1be38:	subs	r2, r2, #1
   1be3c:	bne	1be24 <flatcc_json_printer_clear@@Base+0xfa8>
   1be40:	lsr	r3, r4, ip
   1be44:	orr	r3, r3, r5, lsl fp
   1be48:	lsr	r2, r5, ip
   1be4c:	orr	r3, r3, r5, lsr sl
   1be50:	adds	r0, r0, r4
   1be54:	mov	r4, r3
   1be58:	lsl	r3, r2, ip
   1be5c:	orr	r3, r3, r4, lsl sl
   1be60:	lsl	ip, r4, ip
   1be64:	orr	r3, r3, r4, lsr fp
   1be68:	adc	r1, r1, r5
   1be6c:	subs	r0, r0, ip
   1be70:	mov	r5, r2
   1be74:	sbc	r1, r1, r3
   1be78:	cmp	lr, #0
   1be7c:	strdne	r4, [lr]
   1be80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001be84 <__libc_csu_init@@Base>:
   1be84:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1be88:	mov	r7, r0
   1be8c:	ldr	r6, [pc, #72]	; 1bedc <__libc_csu_init@@Base+0x58>
   1be90:	ldr	r5, [pc, #72]	; 1bee0 <__libc_csu_init@@Base+0x5c>
   1be94:	add	r6, pc, r6
   1be98:	add	r5, pc, r5
   1be9c:	sub	r6, r6, r5
   1bea0:	mov	r8, r1
   1bea4:	mov	r9, r2
   1bea8:	bl	12858 <raise@plt-0x20>
   1beac:	asrs	r6, r6, #2
   1beb0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1beb4:	mov	r4, #0
   1beb8:	add	r4, r4, #1
   1bebc:	ldr	r3, [r5], #4
   1bec0:	mov	r2, r9
   1bec4:	mov	r1, r8
   1bec8:	mov	r0, r7
   1becc:	blx	r3
   1bed0:	cmp	r6, r4
   1bed4:	bne	1beb8 <__libc_csu_init@@Base+0x34>
   1bed8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bedc:	andeq	r2, r1, r0, ror r0
   1bee0:	andeq	r2, r1, r8, rrx

0001bee4 <__libc_csu_fini@@Base>:
   1bee4:	bx	lr

Disassembly of section .fini:

0001bee8 <.fini>:
   1bee8:	push	{r3, lr}
   1beec:	pop	{r3, pc}
