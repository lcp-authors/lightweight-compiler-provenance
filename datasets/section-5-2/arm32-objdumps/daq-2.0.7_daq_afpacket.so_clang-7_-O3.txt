
../repos/daq-2.0.7/os-daq-modules/.libs/daq_afpacket.so:     file format elf32-littlearm


Disassembly of section .init:

00000944 <_init>:
 944:	push	{r3, lr}
 948:	bl	b00 <call_weak_fn>
 94c:	pop	{r3, pc}

Disassembly of section .plt:

00000950 <.plt>:
 950:	push	{lr}		; (str lr, [sp, #-4]!)
 954:	ldr	lr, [pc, #4]	; 960 <.plt+0x10>
 958:	add	lr, pc, lr
 95c:	ldr	pc, [lr, #8]!
 960:	.word	0x000126a0

00000964 <calloc@plt>:
 964:	add	ip, pc, #0, 12
 968:	add	ip, ip, #73728	; 0x12000
 96c:	ldr	pc, [ip, #1696]!	; 0x6a0

00000970 <strstr@plt>:
 970:	add	ip, pc, #0, 12
 974:	add	ip, ip, #73728	; 0x12000
 978:	ldr	pc, [ip, #1688]!	; 0x698

0000097c <strcmp@plt>:
 97c:	add	ip, pc, #0, 12
 980:	add	ip, ip, #73728	; 0x12000
 984:	ldr	pc, [ip, #1680]!	; 0x690

00000988 <__cxa_finalize@plt>:
 988:	add	ip, pc, #0, 12
 98c:	add	ip, ip, #73728	; 0x12000
 990:	ldr	pc, [ip, #1672]!	; 0x688

00000994 <setsockopt@plt>:
 994:	add	ip, pc, #0, 12
 998:	add	ip, ip, #73728	; 0x12000
 99c:	ldr	pc, [ip, #1664]!	; 0x680

000009a0 <strcspn@plt>:
 9a0:	add	ip, pc, #0, 12
 9a4:	add	ip, ip, #73728	; 0x12000
 9a8:	ldr	pc, [ip, #1656]!	; 0x678

000009ac <printf@plt>:
 9ac:	add	ip, pc, #0, 12
 9b0:	add	ip, ip, #73728	; 0x12000
 9b4:	ldr	pc, [ip, #1648]!	; 0x670

000009b8 <free@plt>:
 9b8:	add	ip, pc, #0, 12
 9bc:	add	ip, ip, #73728	; 0x12000
 9c0:	ldr	pc, [ip, #1640]!	; 0x668

000009c4 <memcpy@plt>:
 9c4:	add	ip, pc, #0, 12
 9c8:	add	ip, ip, #73728	; 0x12000
 9cc:	ldr	pc, [ip, #1632]!	; 0x660

000009d0 <strdup@plt>:
 9d0:	add	ip, pc, #0, 12
 9d4:	add	ip, ip, #73728	; 0x12000
 9d8:	ldr	pc, [ip, #1624]!	; 0x658

000009dc <poll@plt>:
 9dc:	add	ip, pc, #0, 12
 9e0:	add	ip, ip, #73728	; 0x12000
 9e4:	ldr	pc, [ip, #1616]!	; 0x650

000009e8 <getsockopt@plt>:
 9e8:	add	ip, pc, #0, 12
 9ec:	add	ip, ip, #73728	; 0x12000
 9f0:	ldr	pc, [ip, #1608]!	; 0x648

000009f4 <ioctl@plt>:
 9f4:	add	ip, pc, #0, 12
 9f8:	add	ip, ip, #73728	; 0x12000
 9fc:	ldr	pc, [ip, #1600]!	; 0x640

00000a00 <sfbpf_freecode@plt>:
 a00:	add	ip, pc, #0, 12
 a04:	add	ip, ip, #73728	; 0x12000
 a08:	ldr	pc, [ip, #1592]!	; 0x638

00000a0c <getenv@plt>:
 a0c:	add	ip, pc, #0, 12
 a10:	add	ip, ip, #73728	; 0x12000
 a14:	ldr	pc, [ip, #1584]!	; 0x630

00000a18 <puts@plt>:
 a18:	add	ip, pc, #0, 12
 a1c:	add	ip, ip, #73728	; 0x12000
 a20:	ldr	pc, [ip, #1576]!	; 0x628

00000a24 <sfbpf_compile@plt>:
 a24:	add	ip, pc, #0, 12
 a28:	add	ip, ip, #73728	; 0x12000
 a2c:	ldr	pc, [ip, #1568]!	; 0x620

00000a30 <strerror@plt>:
 a30:	add	ip, pc, #0, 12
 a34:	add	ip, ip, #73728	; 0x12000
 a38:	ldr	pc, [ip, #1560]!	; 0x618

00000a3c <__gmon_start__@plt>:
 a3c:	add	ip, pc, #0, 12
 a40:	add	ip, ip, #73728	; 0x12000
 a44:	ldr	pc, [ip, #1552]!	; 0x610

00000a48 <strtoul@plt>:
 a48:	add	ip, pc, #0, 12
 a4c:	add	ip, ip, #73728	; 0x12000
 a50:	ldr	pc, [ip, #1544]!	; 0x608

00000a54 <strlen@plt>:
 a54:	add	ip, pc, #0, 12
 a58:	add	ip, ip, #73728	; 0x12000
 a5c:	ldr	pc, [ip, #1536]!	; 0x600

00000a60 <mmap@plt>:
 a60:	add	ip, pc, #0, 12
 a64:	add	ip, ip, #73728	; 0x12000
 a68:	ldr	pc, [ip, #1528]!	; 0x5f8

00000a6c <fprintf@plt>:
 a6c:	add	ip, pc, #0, 12
 a70:	add	ip, ip, #73728	; 0x12000
 a74:	ldr	pc, [ip, #1520]!	; 0x5f0

00000a78 <getpagesize@plt>:
 a78:	add	ip, pc, #0, 12
 a7c:	add	ip, ip, #73728	; 0x12000
 a80:	ldr	pc, [ip, #1512]!	; 0x5e8

00000a84 <__errno_location@plt>:
 a84:	add	ip, pc, #0, 12
 a88:	add	ip, ip, #73728	; 0x12000
 a8c:	ldr	pc, [ip, #1504]!	; 0x5e0

00000a90 <snprintf@plt>:
 a90:	add	ip, pc, #0, 12
 a94:	add	ip, ip, #73728	; 0x12000
 a98:	ldr	pc, [ip, #1496]!	; 0x5d8

00000a9c <bind@plt>:
 a9c:	add	ip, pc, #0, 12
 aa0:	add	ip, ip, #73728	; 0x12000
 aa4:	ldr	pc, [ip, #1488]!	; 0x5d0

00000aa8 <memset@plt>:
 aa8:	add	ip, pc, #0, 12
 aac:	add	ip, ip, #73728	; 0x12000
 ab0:	ldr	pc, [ip, #1480]!	; 0x5c8

00000ab4 <strncpy@plt>:
 ab4:	add	ip, pc, #0, 12
 ab8:	add	ip, ip, #73728	; 0x12000
 abc:	ldr	pc, [ip, #1472]!	; 0x5c0

00000ac0 <munmap@plt>:
 ac0:	add	ip, pc, #0, 12
 ac4:	add	ip, ip, #73728	; 0x12000
 ac8:	ldr	pc, [ip, #1464]!	; 0x5b8

00000acc <sfbpf_filter@plt>:
 acc:	add	ip, pc, #0, 12
 ad0:	add	ip, ip, #73728	; 0x12000
 ad4:	ldr	pc, [ip, #1456]!	; 0x5b0

00000ad8 <socket@plt>:
 ad8:	add	ip, pc, #0, 12
 adc:	add	ip, ip, #73728	; 0x12000
 ae0:	ldr	pc, [ip, #1448]!	; 0x5a8

00000ae4 <close@plt>:
 ae4:	add	ip, pc, #0, 12
 ae8:	add	ip, ip, #73728	; 0x12000
 aec:	ldr	pc, [ip, #1440]!	; 0x5a0

00000af0 <send@plt>:
 af0:	add	ip, pc, #0, 12
 af4:	add	ip, ip, #73728	; 0x12000
 af8:	ldr	pc, [ip, #1432]!	; 0x598

Disassembly of section .text:

00000b00 <call_weak_fn>:
     b00:	ldr	r3, [pc, #20]	; b1c <call_weak_fn+0x1c>
     b04:	ldr	r2, [pc, #20]	; b20 <call_weak_fn+0x20>
     b08:	add	r3, pc, r3
     b0c:	ldr	r2, [r3, r2]
     b10:	cmp	r2, #0
     b14:	bxeq	lr
     b18:	b	a3c <__gmon_start__@plt>
     b1c:	.word	0x000124f0
     b20:	.word	0x000000a0

00000b24 <deregister_tm_clones>:
     b24:	ldr	r0, [pc, #44]	; b58 <deregister_tm_clones+0x34>
     b28:	ldr	r3, [pc, #44]	; b5c <deregister_tm_clones+0x38>
     b2c:	add	r0, pc, r0
     b30:	add	r3, pc, r3
     b34:	cmp	r3, r0
     b38:	ldr	r3, [pc, #32]	; b60 <deregister_tm_clones+0x3c>
     b3c:	add	r3, pc, r3
     b40:	bxeq	lr
     b44:	ldr	r2, [pc, #24]	; b64 <deregister_tm_clones+0x40>
     b48:	ldr	r3, [r3, r2]
     b4c:	cmp	r3, #0
     b50:	bxeq	lr
     b54:	bx	r3
     b58:	.word	0x00012578
     b5c:	.word	0x00012574
     b60:	.word	0x000124bc
     b64:	.word	0x00000098

00000b68 <register_tm_clones>:
     b68:	ldr	r0, [pc, #56]	; ba8 <register_tm_clones+0x40>
     b6c:	ldr	r3, [pc, #56]	; bac <register_tm_clones+0x44>
     b70:	add	r0, pc, r0
     b74:	add	r3, pc, r3
     b78:	sub	r1, r3, r0
     b7c:	ldr	r3, [pc, #44]	; bb0 <register_tm_clones+0x48>
     b80:	asr	r1, r1, #2
     b84:	add	r3, pc, r3
     b88:	add	r1, r1, r1, lsr #31
     b8c:	asrs	r1, r1, #1
     b90:	bxeq	lr
     b94:	ldr	r2, [pc, #24]	; bb4 <register_tm_clones+0x4c>
     b98:	ldr	r3, [r3, r2]
     b9c:	cmp	r3, #0
     ba0:	bxeq	lr
     ba4:	bx	r3
     ba8:	.word	0x00012534
     bac:	.word	0x00012530
     bb0:	.word	0x00012474
     bb4:	.word	0x000000a4

00000bb8 <__do_global_dtors_aux>:
     bb8:	ldr	r3, [pc, #76]	; c0c <__do_global_dtors_aux+0x54>
     bbc:	ldr	r2, [pc, #76]	; c10 <__do_global_dtors_aux+0x58>
     bc0:	add	r3, pc, r3
     bc4:	add	r2, pc, r2
     bc8:	ldrb	r3, [r3]
     bcc:	cmp	r3, #0
     bd0:	bxne	lr
     bd4:	ldr	r3, [pc, #56]	; c14 <__do_global_dtors_aux+0x5c>
     bd8:	push	{r4, lr}
     bdc:	ldr	r3, [r2, r3]
     be0:	cmp	r3, #0
     be4:	beq	bf4 <__do_global_dtors_aux+0x3c>
     be8:	ldr	r3, [pc, #40]	; c18 <__do_global_dtors_aux+0x60>
     bec:	ldr	r0, [pc, r3]
     bf0:	bl	988 <__cxa_finalize@plt>
     bf4:	bl	b24 <deregister_tm_clones>
     bf8:	ldr	r3, [pc, #28]	; c1c <__do_global_dtors_aux+0x64>
     bfc:	mov	r2, #1
     c00:	add	r3, pc, r3
     c04:	strb	r2, [r3]
     c08:	pop	{r4, pc}
     c0c:	.word	0x000124e4
     c10:	.word	0x00012434
     c14:	.word	0x00000094
     c18:	.word	0x000124b4
     c1c:	.word	0x000124a4

00000c20 <frame_dummy>:
     c20:	b	b68 <register_tm_clones>
	...

00000c30 <afpacket_daq_initialize>:
     c30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     c34:	add	fp, sp, #28
     c38:	sub	sp, sp, #4
     c3c:	vpush	{d8-d9}
     c40:	sub	sp, sp, #80	; 0x50
     c44:	mov	r6, r1
     c48:	mov	sl, r0
     c4c:	mov	r0, #1
     c50:	mov	r1, #408	; 0x198
     c54:	mov	r8, r3
     c58:	mov	r9, r2
     c5c:	bl	964 <calloc@plt>
     c60:	cmp	r0, #0
     c64:	beq	1000 <afpacket_daq_initialize+0x3d0>
     c68:	mov	r4, r0
     c6c:	ldr	r0, [sl]
     c70:	bl	9d0 <strdup@plt>
     c74:	cmp	r0, #0
     c78:	str	r0, [r4]
     c7c:	beq	1024 <afpacket_daq_initialize+0x3f4>
     c80:	mov	r7, r0
     c84:	ldmib	sl, {r0, r1}
     c88:	ldrb	r5, [r7]
     c8c:	cmp	r1, #0
     c90:	mvneq	r1, #0
     c94:	cmp	r5, #58	; 0x3a
     c98:	strd	r0, [r4, #8]
     c9c:	beq	1060 <afpacket_daq_initialize+0x430>
     ca0:	mov	r0, r7
     ca4:	bl	a54 <strlen@plt>
     ca8:	cmp	r0, #0
     cac:	beq	cc0 <afpacket_daq_initialize+0x90>
     cb0:	add	r0, r7, r0
     cb4:	ldrb	r0, [r0, #-1]
     cb8:	cmp	r0, #58	; 0x3a
     cbc:	beq	1060 <afpacket_daq_initialize+0x430>
     cc0:	ldr	r0, [sl, #12]
     cc4:	cmp	r0, #0
     cc8:	beq	1048 <afpacket_daq_initialize+0x418>
     ccc:	cmp	r5, #0
     cd0:	str	r6, [sp, #8]
     cd4:	beq	11fc <afpacket_daq_initialize+0x5cc>
     cd8:	ldr	r5, [pc, #1348]	; 1224 <afpacket_daq_initialize+0x5f4>
     cdc:	mov	r6, #0
     ce0:	vmov.i32	q4, #0	; 0x00000000
     ce4:	str	r8, [sp, #20]
     ce8:	str	r9, [sp, #16]
     cec:	str	sl, [sp, #12]
     cf0:	add	r5, pc, r5
     cf4:	mov	r0, r7
     cf8:	mov	r1, r5
     cfc:	bl	9a0 <strcspn@plt>
     d00:	cmp	r0, #16
     d04:	bcs	1110 <afpacket_daq_initialize+0x4e0>
     d08:	cmp	r0, #0
     d0c:	beq	eb0 <afpacket_daq_initialize+0x280>
     d10:	ldr	r1, [r4, #28]
     d14:	add	r1, r1, #1
     d18:	cmp	r1, #32
     d1c:	str	r1, [r4, #28]
     d20:	bcs	1120 <afpacket_daq_initialize+0x4f0>
     d24:	str	r0, [sp, #24]
     d28:	mov	r8, r6
     d2c:	add	r6, sp, #32
     d30:	add	r1, r0, #1
     d34:	mov	r3, r7
     d38:	ldr	r2, [pc, #1264]	; 1230 <afpacket_daq_initialize+0x600>
     d3c:	mov	r0, r6
     d40:	add	r2, pc, r2
     d44:	bl	a90 <snprintf@plt>
     d48:	mov	r0, #1
     d4c:	mov	r1, #116	; 0x74
     d50:	bl	964 <calloc@plt>
     d54:	mov	r5, r0
     d58:	cmp	r0, #0
     d5c:	beq	1134 <afpacket_daq_initialize+0x504>
     d60:	mvn	r0, #0
     d64:	str	r0, [r5, #16]
     d68:	mov	r0, r6
     d6c:	bl	9d0 <strdup@plt>
     d70:	cmp	r0, #0
     d74:	str	r0, [r5, #84]	; 0x54
     d78:	beq	1140 <afpacket_daq_initialize+0x510>
     d7c:	mov	r0, #17
     d80:	mov	r1, #3
     d84:	mov	r2, #768	; 0x300
     d88:	bl	ad8 <socket@plt>
     d8c:	cmn	r0, #1
     d90:	str	r0, [r5, #4]
     d94:	beq	114c <afpacket_daq_initialize+0x51c>
     d98:	add	r6, sp, #48	; 0x30
     d9c:	add	r1, sp, #32
     da0:	mov	r2, #16
     da4:	mov	r0, r6
     da8:	vst1.64	{d8-d9}, [r0]!
     dac:	vst1.64	{d8-d9}, [r0]
     db0:	mov	r0, r6
     db4:	bl	ab4 <strncpy@plt>
     db8:	ldr	r0, [r5, #4]
     dbc:	movw	r1, #35123	; 0x8933
     dc0:	mov	r2, r6
     dc4:	bl	9f4 <ioctl@plt>
     dc8:	cmn	r0, #1
     dcc:	beq	1168 <afpacket_daq_initialize+0x538>
     dd0:	ldr	r0, [sp, #64]	; 0x40
     dd4:	movw	r1, #17
     dd8:	movt	r1, #768	; 0x300
     ddc:	str	r0, [r5, #88]	; 0x58
     de0:	str	r1, [r5, #96]	; 0x60
     de4:	ldr	r1, [r4, #24]
     de8:	str	r0, [r5, #100]	; 0x64
     dec:	str	r5, [r4, #24]
     df0:	add	r0, r8, #1
     df4:	str	r1, [r5]
     df8:	ldr	r2, [sl, #12]
     dfc:	cmp	r2, #0
     e00:	beq	ec4 <afpacket_daq_initialize+0x294>
     e04:	cmp	r0, #2
     e08:	bne	ee8 <afpacket_daq_initialize+0x2b8>
     e0c:	ldr	r9, [r5, #84]	; 0x54
     e10:	ldr	sl, [r1, #84]	; 0x54
     e14:	mov	r8, #0
     e18:	mov	r0, #0
     e1c:	str	r0, [sp, #28]
     e20:	ldr	r6, [r5, #84]	; 0x54
     e24:	mov	r1, sl
     e28:	mov	r0, r6
     e2c:	bl	97c <strcmp@plt>
     e30:	cmp	r0, #0
     e34:	beq	e5c <afpacket_daq_initialize+0x22c>
     e38:	mov	r0, r6
     e3c:	mov	r1, r9
     e40:	bl	97c <strcmp@plt>
     e44:	cmp	r0, #0
     e48:	moveq	r8, r5
     e4c:	ldr	r5, [r5]
     e50:	cmp	r5, #0
     e54:	bne	e20 <afpacket_daq_initialize+0x1f0>
     e58:	b	e6c <afpacket_daq_initialize+0x23c>
     e5c:	str	r5, [sp, #28]
     e60:	ldr	r5, [r5]
     e64:	cmp	r5, #0
     e68:	bne	e20 <afpacket_daq_initialize+0x1f0>
     e6c:	ldr	r0, [sp, #28]
     e70:	cmp	r0, #0
     e74:	cmpne	r8, #0
     e78:	beq	10ec <afpacket_daq_initialize+0x4bc>
     e7c:	str	r8, [r0, #92]	; 0x5c
     e80:	str	r0, [r8, #92]	; 0x5c
     e84:	ldr	r8, [sp, #20]
     e88:	ldr	r9, [sp, #16]
     e8c:	ldr	sl, [sp, #12]
     e90:	mov	r6, #0
     e94:	ldr	r5, [pc, #944]	; 124c <afpacket_daq_initialize+0x61c>
     e98:	ldr	r1, [sp, #24]
     e9c:	add	r5, pc, r5
     ea0:	ldrb	r0, [r7, r1]!
     ea4:	cmp	r0, #0
     ea8:	bne	cf4 <afpacket_daq_initialize+0xc4>
     eac:	b	f10 <afpacket_daq_initialize+0x2e0>
     eb0:	mov	r1, #1
     eb4:	ldrb	r0, [r7, r1]!
     eb8:	cmp	r0, #0
     ebc:	bne	cf4 <afpacket_daq_initialize+0xc4>
     ec0:	b	f10 <afpacket_daq_initialize+0x2e0>
     ec4:	ldr	r5, [pc, #892]	; 1248 <afpacket_daq_initialize+0x618>
     ec8:	ldr	r1, [sp, #24]
     ecc:	mov	r6, r0
     ed0:	add	r5, pc, r5
     ed4:	ldr	r8, [sp, #20]
     ed8:	ldrb	r0, [r7, r1]!
     edc:	cmp	r0, #0
     ee0:	bne	cf4 <afpacket_daq_initialize+0xc4>
     ee4:	b	f10 <afpacket_daq_initialize+0x2e0>
     ee8:	ldr	r1, [sp, #24]
     eec:	cmp	r8, #1
     ef0:	mov	r6, r0
     ef4:	bgt	11f0 <afpacket_daq_initialize+0x5c0>
     ef8:	ldr	r5, [pc, #856]	; 1258 <afpacket_daq_initialize+0x628>
     efc:	add	r5, pc, r5
     f00:	ldr	r8, [sp, #20]
     f04:	ldrb	r0, [r7, r1]!
     f08:	cmp	r0, #0
     f0c:	bne	cf4 <afpacket_daq_initialize+0xc4>
     f10:	ldr	r5, [r4, #24]
     f14:	cmp	r5, #0
     f18:	beq	11fc <afpacket_daq_initialize+0x5cc>
     f1c:	cmp	r6, #0
     f20:	ldrne	r0, [sl, #12]
     f24:	cmpne	r0, #0
     f28:	bne	11fc <afpacket_daq_initialize+0x5cc>
     f2c:	ldr	r7, [sl, #20]
     f30:	cmp	r7, #0
     f34:	beq	fa4 <afpacket_daq_initialize+0x374>
     f38:	ldr	sl, [pc, #796]	; 125c <afpacket_daq_initialize+0x62c>
     f3c:	ldr	r8, [pc, #796]	; 1260 <afpacket_daq_initialize+0x630>
     f40:	mov	r9, #0
     f44:	add	sl, pc, sl
     f48:	add	r8, pc, r8
     f4c:	ldr	r6, [r7]
     f50:	mov	r1, sl
     f54:	mov	r0, r6
     f58:	bl	97c <strcmp@plt>
     f5c:	cmp	r0, #0
     f60:	beq	f8c <afpacket_daq_initialize+0x35c>
     f64:	mov	r0, r6
     f68:	mov	r1, r8
     f6c:	bl	97c <strcmp@plt>
     f70:	cmp	r0, #0
     f74:	moveq	r0, #1
     f78:	streq	r0, [r4, #20]
     f7c:	ldr	r7, [r7, #8]
     f80:	cmp	r7, #0
     f84:	bne	f4c <afpacket_daq_initialize+0x31c>
     f88:	b	f9c <afpacket_daq_initialize+0x36c>
     f8c:	ldr	r9, [r7, #4]
     f90:	ldr	r7, [r7, #8]
     f94:	cmp	r7, #0
     f98:	bne	f4c <afpacket_daq_initialize+0x31c>
     f9c:	cmp	r9, #0
     fa0:	bne	fbc <afpacket_daq_initialize+0x38c>
     fa4:	ldr	r0, [pc, #696]	; 1264 <afpacket_daq_initialize+0x634>
     fa8:	add	r0, pc, r0
     fac:	bl	a0c <getenv@plt>
     fb0:	mov	r9, r0
     fb4:	cmp	r0, #0
     fb8:	beq	1198 <afpacket_daq_initialize+0x568>
     fbc:	ldr	r0, [pc, #676]	; 1268 <afpacket_daq_initialize+0x638>
     fc0:	mov	r1, r9
     fc4:	add	r0, pc, r0
     fc8:	bl	97c <strcmp@plt>
     fcc:	cmp	r0, #0
     fd0:	beq	1198 <afpacket_daq_initialize+0x568>
     fd4:	mov	r0, r9
     fd8:	mov	r1, #0
     fdc:	mov	r2, #10
     fe0:	bl	a48 <strtoul@plt>
     fe4:	ldr	r5, [r4, #24]
     fe8:	lsl	r0, r0, #20
     fec:	mov	r6, #0
     ff0:	cmp	r5, #0
     ff4:	mov	r1, #0
     ff8:	bne	11ac <afpacket_daq_initialize+0x57c>
     ffc:	b	11d4 <afpacket_daq_initialize+0x5a4>
    1000:	ldr	r2, [pc, #512]	; 1208 <afpacket_daq_initialize+0x5d8>
    1004:	ldr	r3, [pc, #512]	; 120c <afpacket_daq_initialize+0x5dc>
    1008:	mov	r0, r9
    100c:	mov	r1, r8
    1010:	add	r2, pc, r2
    1014:	add	r3, pc, r3
    1018:	bl	a90 <snprintf@plt>
    101c:	mvn	r6, #1
    1020:	b	10d8 <afpacket_daq_initialize+0x4a8>
    1024:	ldr	r2, [pc, #484]	; 1210 <afpacket_daq_initialize+0x5e0>
    1028:	ldr	r3, [pc, #484]	; 1214 <afpacket_daq_initialize+0x5e4>
    102c:	mov	r0, r9
    1030:	mov	r1, r8
    1034:	add	r2, pc, r2
    1038:	add	r3, pc, r3
    103c:	bl	a90 <snprintf@plt>
    1040:	mvn	r6, #1
    1044:	b	1084 <afpacket_daq_initialize+0x454>
    1048:	ldr	r1, [pc, #456]	; 1218 <afpacket_daq_initialize+0x5e8>
    104c:	mov	r0, r7
    1050:	add	r1, pc, r1
    1054:	bl	970 <strstr@plt>
    1058:	cmp	r0, #0
    105c:	beq	ccc <afpacket_daq_initialize+0x9c>
    1060:	str	r7, [sp]
    1064:	ldr	r2, [pc, #432]	; 121c <afpacket_daq_initialize+0x5ec>
    1068:	add	r2, pc, r2
    106c:	ldr	r3, [pc, #428]	; 1220 <afpacket_daq_initialize+0x5f0>
    1070:	mov	r0, r9
    1074:	mov	r1, r8
    1078:	add	r3, pc, r3
    107c:	bl	a90 <snprintf@plt>
    1080:	mvn	r6, #0
    1084:	mov	r0, r4
    1088:	bl	21d4 <update_hw_stats>
    108c:	ldr	r0, [r4, #24]
    1090:	cmp	r0, #0
    1094:	beq	10b0 <afpacket_daq_initialize+0x480>
    1098:	ldr	r1, [r0]
    109c:	str	r1, [r4, #24]
    10a0:	bl	20f0 <destroy_instance>
    10a4:	ldr	r0, [r4, #24]
    10a8:	cmp	r0, #0
    10ac:	bne	1098 <afpacket_daq_initialize+0x468>
    10b0:	add	r0, r4, #32
    10b4:	bl	a00 <sfbpf_freecode@plt>
    10b8:	mov	r0, #3
    10bc:	str	r0, [r4, #144]	; 0x90
    10c0:	ldr	r0, [r4]
    10c4:	cmp	r0, #0
    10c8:	beq	10d0 <afpacket_daq_initialize+0x4a0>
    10cc:	bl	9b8 <free@plt>
    10d0:	mov	r0, r4
    10d4:	bl	9b8 <free@plt>
    10d8:	mov	r0, r6
    10dc:	sub	sp, fp, #48	; 0x30
    10e0:	vpop	{d8-d9}
    10e4:	add	sp, sp, #4
    10e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    10ec:	str	sl, [sp]
    10f0:	str	r9, [sp, #4]
    10f4:	ldr	r2, [pc, #340]	; 1250 <afpacket_daq_initialize+0x620>
    10f8:	ldr	r3, [pc, #340]	; 1254 <afpacket_daq_initialize+0x624>
    10fc:	ldr	r0, [sp, #16]
    1100:	ldr	r1, [sp, #20]
    1104:	add	r2, pc, r2
    1108:	add	r3, pc, r3
    110c:	b	107c <afpacket_daq_initialize+0x44c>
    1110:	str	r0, [sp]
    1114:	ldr	r2, [pc, #268]	; 1228 <afpacket_daq_initialize+0x5f8>
    1118:	add	r2, pc, r2
    111c:	b	106c <afpacket_daq_initialize+0x43c>
    1120:	mov	r0, #32
    1124:	str	r0, [sp]
    1128:	ldr	r2, [pc, #252]	; 122c <afpacket_daq_initialize+0x5fc>
    112c:	add	r2, pc, r2
    1130:	b	106c <afpacket_daq_initialize+0x43c>
    1134:	ldr	r2, [pc, #248]	; 1234 <afpacket_daq_initialize+0x604>
    1138:	add	r2, pc, r2
    113c:	b	1178 <afpacket_daq_initialize+0x548>
    1140:	ldr	r2, [pc, #240]	; 1238 <afpacket_daq_initialize+0x608>
    1144:	add	r2, pc, r2
    1148:	b	1178 <afpacket_daq_initialize+0x548>
    114c:	bl	a84 <__errno_location@plt>
    1150:	ldr	r0, [r0]
    1154:	bl	a30 <strerror@plt>
    1158:	str	r0, [sp]
    115c:	ldr	r2, [pc, #216]	; 123c <afpacket_daq_initialize+0x60c>
    1160:	add	r2, pc, r2
    1164:	b	1178 <afpacket_daq_initialize+0x548>
    1168:	ldr	r0, [r5, #84]	; 0x54
    116c:	str	r0, [sp]
    1170:	ldr	r2, [pc, #200]	; 1240 <afpacket_daq_initialize+0x610>
    1174:	add	r2, pc, r2
    1178:	ldr	r3, [pc, #196]	; 1244 <afpacket_daq_initialize+0x614>
    117c:	ldr	r1, [sp, #20]
    1180:	mov	r0, r9
    1184:	add	r3, pc, r3
    1188:	bl	a90 <snprintf@plt>
    118c:	mov	r0, r5
    1190:	bl	20f0 <destroy_instance>
    1194:	b	1080 <afpacket_daq_initialize+0x450>
    1198:	mov	r0, #134217728	; 0x8000000
    119c:	mov	r6, #0
    11a0:	cmp	r5, #0
    11a4:	mov	r1, #0
    11a8:	beq	11d4 <afpacket_daq_initialize+0x5a4>
    11ac:	mov	r1, #0
    11b0:	ldr	r3, [r5, #92]	; 0x5c
    11b4:	ldr	r2, [r5]
    11b8:	cmp	r3, #0
    11bc:	mov	r3, #2
    11c0:	mov	r5, r2
    11c4:	movweq	r3, #1
    11c8:	cmp	r2, #0
    11cc:	add	r1, r3, r1
    11d0:	bne	11b0 <afpacket_daq_initialize+0x580>
    11d4:	mov	r2, #1
    11d8:	udiv	r0, r0, r1
    11dc:	str	r2, [r4, #144]	; 0x90
    11e0:	str	r0, [r4, #16]
    11e4:	ldr	r0, [sp, #8]
    11e8:	str	r4, [r0]
    11ec:	b	10d8 <afpacket_daq_initialize+0x4a8>
    11f0:	ldr	r8, [sp, #20]
    11f4:	cmp	r5, #0
    11f8:	bne	f1c <afpacket_daq_initialize+0x2ec>
    11fc:	ldr	r0, [r4]
    1200:	str	r0, [sp]
    1204:	b	1064 <afpacket_daq_initialize+0x434>
    1208:	.word	0x000015f1
    120c:	.word	0x00001628
    1210:	.word	0x00001620
    1214:	.word	0x00001604
    1218:	.word	0x00001638
    121c:	.word	0x00001623
    1220:	.word	0x000015c4
    1224:	.word	0x00001999
    1228:	.word	0x0000159e
    122c:	.word	0x000015ad
    1230:	.word	0x00001be4
    1234:	.word	0x00001636
    1238:	.word	0x0000166b
    123c:	.word	0x00001681
    1240:	.word	0x00001699
    1244:	.word	0x0000161b
    1248:	.word	0x000017b9
    124c:	.word	0x000017ed
    1250:	.word	0x00001609
    1254:	.word	0x00001534
    1258:	.word	0x0000178d
    125c:	.word	0x000017fb
    1260:	.word	0x00001806
    1264:	.word	0x000017ac
    1268:	.word	0x000017a6

0000126c <afpacket_daq_set_filter>:
    126c:	push	{r4, r5, fp, lr}
    1270:	add	fp, sp, #8
    1274:	sub	sp, sp, #16
    1278:	mov	r4, r0
    127c:	ldr	r0, [r0, #4]
    1280:	mov	r5, r1
    1284:	cmp	r0, #0
    1288:	beq	1290 <afpacket_daq_set_filter+0x24>
    128c:	bl	9b8 <free@plt>
    1290:	mov	r0, r5
    1294:	bl	9d0 <strdup@plt>
    1298:	cmp	r0, #0
    129c:	str	r0, [r4, #4]
    12a0:	beq	12ec <afpacket_daq_set_filter+0x80>
    12a4:	mov	r3, r0
    12a8:	ldr	r0, [r4, #8]
    12ac:	mov	r5, #0
    12b0:	mov	r1, #1
    12b4:	add	r2, sp, #8
    12b8:	stm	sp, {r1, r5}
    12bc:	mov	r1, #1
    12c0:	bl	a24 <sfbpf_compile@plt>
    12c4:	cmn	r0, #1
    12c8:	ble	12fc <afpacket_daq_set_filter+0x90>
    12cc:	add	r0, r4, #32
    12d0:	bl	a00 <sfbpf_freecode@plt>
    12d4:	ldr	r0, [sp, #8]
    12d8:	ldr	r1, [sp, #12]
    12dc:	strd	r0, [r4, #32]
    12e0:	mov	r0, r5
    12e4:	sub	sp, fp, #8
    12e8:	pop	{r4, r5, fp, pc}
    12ec:	ldr	r2, [pc, #52]	; 1328 <afpacket_daq_set_filter+0xbc>
    12f0:	add	r0, r4, #148	; 0x94
    12f4:	add	r2, pc, r2
    12f8:	b	1308 <afpacket_daq_set_filter+0x9c>
    12fc:	ldr	r2, [pc, #44]	; 1330 <afpacket_daq_set_filter+0xc4>
    1300:	add	r0, r4, #148	; 0x94
    1304:	add	r2, pc, r2
    1308:	ldr	r3, [pc, #28]	; 132c <afpacket_daq_set_filter+0xc0>
    130c:	mov	r1, #256	; 0x100
    1310:	add	r3, pc, r3
    1314:	bl	a90 <snprintf@plt>
    1318:	mvn	r5, #0
    131c:	mov	r0, r5
    1320:	sub	sp, fp, #8
    1324:	pop	{r4, r5, fp, pc}
    1328:	.word	0x00001563
    132c:	.word	0x0000157b
    1330:	.word	0x0000159f

00001334 <afpacket_daq_start>:
    1334:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1338:	add	fp, sp, #28
    133c:	sub	sp, sp, #4
    1340:	vpush	{d8-d9}
    1344:	sub	sp, sp, #80	; 0x50
    1348:	ldr	r5, [r0, #24]
    134c:	mov	r8, r0
    1350:	cmp	r5, #0
    1354:	beq	15e0 <afpacket_daq_start+0x2ac>
    1358:	add	r7, sp, #40	; 0x28
    135c:	mov	r6, #4
    1360:	mov	r9, #1
    1364:	sub	r4, fp, #52	; 0x34
    1368:	vmov.i32	q4, #0	; 0x00000000
    136c:	add	sl, r7, #8
    1370:	mov	r0, #0
    1374:	str	r6, [sp, #36]	; 0x24
    1378:	mov	r1, #768	; 0x300
    137c:	mov	r2, #20
    1380:	str	r0, [sl]
    1384:	str	r0, [sl, #4]
    1388:	str	r0, [sl, #8]
    138c:	mov	r0, #17
    1390:	strh	r0, [sp, #40]	; 0x28
    1394:	ldr	r0, [r5, #88]	; 0x58
    1398:	strh	r1, [sp, #42]	; 0x2a
    139c:	mov	r1, r7
    13a0:	str	r0, [sp, #44]	; 0x2c
    13a4:	ldr	r0, [r5, #4]
    13a8:	bl	a9c <bind@plt>
    13ac:	cmn	r0, #1
    13b0:	beq	1684 <afpacket_daq_start+0x350>
    13b4:	ldr	r0, [r5, #4]
    13b8:	add	r1, sp, #36	; 0x24
    13bc:	mov	r2, #4
    13c0:	mov	r3, r4
    13c4:	str	r1, [sp]
    13c8:	mov	r1, #1
    13cc:	bl	9e8 <getsockopt@plt>
    13d0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    13d4:	orrs	r0, r1, r0
    13d8:	bne	16ac <afpacket_daq_start+0x378>
    13dc:	add	r3, sp, #16
    13e0:	mov	r1, #16
    13e4:	mov	r2, #1
    13e8:	vst1.64	{d8-d9}, [r3]
    13ec:	ldr	r0, [r5, #88]	; 0x58
    13f0:	strh	r9, [sp, #20]
    13f4:	str	r0, [sp, #16]
    13f8:	ldr	r0, [r5, #4]
    13fc:	str	r1, [sp]
    1400:	movw	r1, #263	; 0x107
    1404:	bl	994 <setsockopt@plt>
    1408:	cmn	r0, #1
    140c:	beq	16d4 <afpacket_daq_start+0x3a0>
    1410:	mov	r0, r7
    1414:	mov	r2, #16
    1418:	vst1.64	{d8-d9}, [r0]!
    141c:	vst1.64	{d8-d9}, [r0]
    1420:	mov	r0, r7
    1424:	ldr	r1, [r5, #84]	; 0x54
    1428:	bl	ab4 <strncpy@plt>
    142c:	ldr	r0, [r5, #4]
    1430:	movw	r1, #35111	; 0x8927
    1434:	mov	r2, r7
    1438:	bl	9f4 <ioctl@plt>
    143c:	cmn	r0, #1
    1440:	beq	16fc <afpacket_daq_start+0x3c8>
    1444:	ldrh	r0, [sp, #56]	; 0x38
    1448:	cmp	r0, #1
    144c:	bne	1734 <afpacket_daq_start+0x400>
    1450:	str	r6, [sp, #40]	; 0x28
    1454:	str	r9, [fp, #-52]	; 0xffffffcc
    1458:	movw	r1, #263	; 0x107
    145c:	mov	r2, #11
    1460:	mov	r3, r4
    1464:	ldr	r0, [r5, #4]
    1468:	str	r7, [sp]
    146c:	bl	9e8 <getsockopt@plt>
    1470:	cmn	r0, #1
    1474:	ble	175c <afpacket_daq_start+0x428>
    1478:	ldr	r0, [fp, #-52]	; 0xffffffcc
    147c:	movw	r1, #263	; 0x107
    1480:	mov	r2, #10
    1484:	mov	r3, r4
    1488:	str	r0, [r5, #12]
    148c:	str	r9, [fp, #-52]	; 0xffffffcc
    1490:	ldr	r0, [r5, #4]
    1494:	str	r6, [sp]
    1498:	bl	994 <setsockopt@plt>
    149c:	cmn	r0, #1
    14a0:	ble	177c <afpacket_daq_start+0x448>
    14a4:	str	r9, [r5, #8]
    14a8:	str	r6, [fp, #-52]	; 0xffffffcc
    14ac:	movw	r1, #263	; 0x107
    14b0:	mov	r2, #12
    14b4:	mov	r3, r4
    14b8:	ldr	r0, [r5, #4]
    14bc:	str	r6, [sp]
    14c0:	bl	994 <setsockopt@plt>
    14c4:	cmn	r0, #1
    14c8:	ble	179c <afpacket_daq_start+0x468>
    14cc:	ldr	r0, [r8, #20]
    14d0:	cmp	r0, #0
    14d4:	beq	14f8 <afpacket_daq_start+0x1c4>
    14d8:	ldr	r1, [r5, #8]
    14dc:	ldr	r0, [pc, #852]	; 1838 <afpacket_daq_start+0x504>
    14e0:	add	r0, pc, r0
    14e4:	bl	9ac <printf@plt>
    14e8:	ldr	r1, [r5, #12]
    14ec:	ldr	r0, [pc, #840]	; 183c <afpacket_daq_start+0x508>
    14f0:	add	r0, pc, r0
    14f4:	bl	9ac <printf@plt>
    14f8:	add	r9, r5, #20
    14fc:	mov	r0, r8
    1500:	mov	r1, r5
    1504:	mov	r3, #5
    1508:	mov	r2, r9
    150c:	bl	22cc <create_ring>
    1510:	cmp	r0, #0
    1514:	bne	1670 <afpacket_daq_start+0x33c>
    1518:	ldr	r0, [r5, #92]	; 0x5c
    151c:	cmp	r0, #0
    1520:	beq	1540 <afpacket_daq_start+0x20c>
    1524:	add	r2, r5, #52	; 0x34
    1528:	mov	r0, r8
    152c:	mov	r1, r5
    1530:	mov	r3, #13
    1534:	bl	22cc <create_ring>
    1538:	cmp	r0, #0
    153c:	bne	1670 <afpacket_daq_start+0x33c>
    1540:	ldr	r0, [r5, #4]
    1544:	ldr	r1, [r5, #36]	; 0x24
    1548:	ldr	r2, [r5, #68]	; 0x44
    154c:	mov	r3, #1
    1550:	str	r0, [sp]
    1554:	mov	r0, #0
    1558:	add	r1, r2, r1
    155c:	mov	r2, #3
    1560:	str	r0, [sp, #4]
    1564:	mov	r0, #0
    1568:	bl	a60 <mmap@plt>
    156c:	cmn	r0, #1
    1570:	str	r0, [r5, #16]
    1574:	beq	17c8 <afpacket_daq_start+0x494>
    1578:	str	r0, [r5, #40]	; 0x28
    157c:	mov	r2, r9
    1580:	ldr	r1, [r5, #68]	; 0x44
    1584:	add	r0, r0, r1
    1588:	mov	r1, r5
    158c:	str	r0, [r5, #72]	; 0x48
    1590:	mov	r0, r8
    1594:	bl	24b4 <set_up_ring>
    1598:	cmp	r0, #0
    159c:	bne	1670 <afpacket_daq_start+0x33c>
    15a0:	ldr	r0, [r5, #92]	; 0x5c
    15a4:	cmp	r0, #0
    15a8:	beq	15c4 <afpacket_daq_start+0x290>
    15ac:	add	r2, r5, #52	; 0x34
    15b0:	mov	r0, r8
    15b4:	mov	r1, r5
    15b8:	bl	24b4 <set_up_ring>
    15bc:	cmp	r0, #0
    15c0:	bne	1670 <afpacket_daq_start+0x33c>
    15c4:	ldr	r5, [r5]
    15c8:	mov	r9, #1
    15cc:	mov	r6, #4
    15d0:	cmp	r5, #0
    15d4:	bne	1370 <afpacket_daq_start+0x3c>
    15d8:	ldr	r6, [r8, #24]
    15dc:	b	15e4 <afpacket_daq_start+0x2b0>
    15e0:	mov	r6, #0
    15e4:	mov	r0, #8
    15e8:	vmov.i32	q8, #0	; 0x00000000
    15ec:	cmp	r6, #0
    15f0:	str	r0, [sp, #16]
    15f4:	add	r0, r8, #128	; 0x80
    15f8:	vst1.64	{d16-d17}, [r0]
    15fc:	add	r0, r8, #112	; 0x70
    1600:	vst1.64	{d16-d17}, [r0]
    1604:	add	r0, r8, #96	; 0x60
    1608:	vst1.64	{d16-d17}, [r0]
    160c:	add	r0, r8, #80	; 0x50
    1610:	vst1.64	{d16-d17}, [r0]
    1614:	add	r0, r8, #64	; 0x40
    1618:	vst1.64	{d16-d17}, [r0]
    161c:	add	r0, r8, #48	; 0x30
    1620:	vst1.64	{d16-d17}, [r0]
    1624:	beq	1654 <afpacket_daq_start+0x320>
    1628:	add	r7, sp, #16
    162c:	add	r5, sp, #40	; 0x28
    1630:	ldr	r0, [r6, #4]
    1634:	movw	r1, #263	; 0x107
    1638:	mov	r2, #6
    163c:	mov	r3, r5
    1640:	str	r7, [sp]
    1644:	bl	9e8 <getsockopt@plt>
    1648:	ldr	r6, [r6]
    164c:	cmp	r6, #0
    1650:	bne	1630 <afpacket_daq_start+0x2fc>
    1654:	mov	r0, #2
    1658:	str	r0, [r8, #144]	; 0x90
    165c:	mov	r0, #0
    1660:	sub	sp, fp, #48	; 0x30
    1664:	vpop	{d8-d9}
    1668:	add	sp, sp, #4
    166c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1670:	mvn	r0, #0
    1674:	sub	sp, fp, #48	; 0x30
    1678:	vpop	{d8-d9}
    167c:	add	sp, sp, #4
    1680:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1684:	ldr	r5, [r5, #84]	; 0x54
    1688:	bl	a84 <__errno_location@plt>
    168c:	ldr	r0, [r0]
    1690:	bl	a30 <strerror@plt>
    1694:	str	r0, [sp, #4]
    1698:	str	r5, [sp]
    169c:	add	r0, r8, #148	; 0x94
    16a0:	ldr	r2, [pc, #352]	; 1808 <afpacket_daq_start+0x4d4>
    16a4:	add	r2, pc, r2
    16a8:	b	16c8 <afpacket_daq_start+0x394>
    16ac:	bl	a84 <__errno_location@plt>
    16b0:	ldr	r0, [r0]
    16b4:	bl	a30 <strerror@plt>
    16b8:	str	r0, [sp]
    16bc:	add	r0, r8, #148	; 0x94
    16c0:	ldr	r2, [pc, #324]	; 180c <afpacket_daq_start+0x4d8>
    16c4:	add	r2, pc, r2
    16c8:	ldr	r3, [pc, #320]	; 1810 <afpacket_daq_start+0x4dc>
    16cc:	add	r3, pc, r3
    16d0:	b	17ec <afpacket_daq_start+0x4b8>
    16d4:	bl	a84 <__errno_location@plt>
    16d8:	ldr	r0, [r0]
    16dc:	bl	a30 <strerror@plt>
    16e0:	str	r0, [sp]
    16e4:	add	r0, r8, #148	; 0x94
    16e8:	ldr	r2, [pc, #292]	; 1814 <afpacket_daq_start+0x4e0>
    16ec:	ldr	r3, [pc, #292]	; 1818 <afpacket_daq_start+0x4e4>
    16f0:	add	r2, pc, r2
    16f4:	add	r3, pc, r3
    16f8:	b	17ec <afpacket_daq_start+0x4b8>
    16fc:	ldr	r6, [r5, #84]	; 0x54
    1700:	bl	a84 <__errno_location@plt>
    1704:	ldr	r5, [r0]
    1708:	mov	r0, r5
    170c:	bl	a30 <strerror@plt>
    1710:	str	r0, [sp, #8]
    1714:	str	r6, [sp]
    1718:	str	r5, [sp, #4]
    171c:	add	r0, r8, #148	; 0x94
    1720:	ldr	r2, [pc, #244]	; 181c <afpacket_daq_start+0x4e8>
    1724:	ldr	r3, [pc, #244]	; 1820 <afpacket_daq_start+0x4ec>
    1728:	add	r2, pc, r2
    172c:	add	r3, pc, r3
    1730:	b	17ec <afpacket_daq_start+0x4b8>
    1734:	ldr	r1, [r5, #84]	; 0x54
    1738:	mov	r2, #1
    173c:	str	r1, [sp]
    1740:	stmib	sp, {r0, r2}
    1744:	add	r0, r8, #148	; 0x94
    1748:	ldr	r2, [pc, #212]	; 1824 <afpacket_daq_start+0x4f0>
    174c:	ldr	r3, [pc, #212]	; 1828 <afpacket_daq_start+0x4f4>
    1750:	add	r2, pc, r2
    1754:	add	r3, pc, r3
    1758:	b	17ec <afpacket_daq_start+0x4b8>
    175c:	bl	a84 <__errno_location@plt>
    1760:	ldr	r0, [r0]
    1764:	bl	a30 <strerror@plt>
    1768:	ldr	r2, [pc, #188]	; 182c <afpacket_daq_start+0x4f8>
    176c:	mov	r3, r0
    1770:	add	r0, r8, #148	; 0x94
    1774:	add	r2, pc, r2
    1778:	b	17ec <afpacket_daq_start+0x4b8>
    177c:	bl	a84 <__errno_location@plt>
    1780:	ldr	r0, [r0]
    1784:	bl	a30 <strerror@plt>
    1788:	ldr	r2, [pc, #160]	; 1830 <afpacket_daq_start+0x4fc>
    178c:	mov	r3, r0
    1790:	add	r0, r8, #148	; 0x94
    1794:	add	r2, pc, r2
    1798:	b	17ec <afpacket_daq_start+0x4b8>
    179c:	ldr	r5, [fp, #-52]	; 0xffffffcc
    17a0:	bl	a84 <__errno_location@plt>
    17a4:	ldr	r0, [r0]
    17a8:	bl	a30 <strerror@plt>
    17ac:	str	r0, [sp]
    17b0:	add	r0, r8, #148	; 0x94
    17b4:	mov	r1, #256	; 0x100
    17b8:	mov	r3, r5
    17bc:	ldr	r2, [pc, #112]	; 1834 <afpacket_daq_start+0x500>
    17c0:	add	r2, pc, r2
    17c4:	b	17f0 <afpacket_daq_start+0x4bc>
    17c8:	bl	a84 <__errno_location@plt>
    17cc:	ldr	r0, [r0]
    17d0:	bl	a30 <strerror@plt>
    17d4:	str	r0, [sp]
    17d8:	add	r0, r8, #148	; 0x94
    17dc:	ldr	r2, [pc, #92]	; 1840 <afpacket_daq_start+0x50c>
    17e0:	ldr	r3, [pc, #92]	; 1844 <afpacket_daq_start+0x510>
    17e4:	add	r2, pc, r2
    17e8:	add	r3, pc, r3
    17ec:	mov	r1, #256	; 0x100
    17f0:	bl	a90 <snprintf@plt>
    17f4:	mvn	r0, #0
    17f8:	sub	sp, fp, #48	; 0x30
    17fc:	vpop	{d8-d9}
    1800:	add	sp, sp, #4
    1804:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1808:	.word	0x000012b6
    180c:	.word	0x000012c0
    1810:	.word	0x000012a0
    1814:	.word	0x000011dd
    1818:	.word	0x000011ec
    181c:	.word	0x000011c7
    1820:	.word	0x000011b4
    1824:	.word	0x000011d7
    1828:	.word	0x0000118c
    182c:	.word	0x00001223
    1830:	.word	0x00001232
    1834:	.word	0x00001238
    1838:	.word	0x00001550
    183c:	.word	0x0000154d
    1840:	.word	0x000013b9
    1844:	.word	0x000013d5
    1848:	.word	0xe320f000
    184c:	.word	0xe320f000

00001850 <afpacket_daq_acquire>:
    1850:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1854:	add	fp, sp, #28
    1858:	sub	sp, sp, #372	; 0x174
    185c:	mov	ip, r0
    1860:	add	r0, sp, #60	; 0x3c
    1864:	str	r1, [sp, #24]
    1868:	mov	sl, r2
    186c:	add	r1, r0, #6
    1870:	add	r0, r0, #4
    1874:	str	ip, [sp, #48]	; 0x30
    1878:	str	r0, [sp, #16]
    187c:	add	r0, ip, #88	; 0x58
    1880:	str	r1, [sp, #12]
    1884:	str	r0, [sp, #28]
    1888:	add	r0, ip, #64	; 0x40
    188c:	str	r0, [sp, #32]
    1890:	add	r0, ip, #72	; 0x48
    1894:	str	r0, [sp, #20]
    1898:	sub	r0, fp, #84	; 0x54
    189c:	add	r0, r0, #24
    18a0:	str	r0, [sp, #36]	; 0x24
    18a4:	mov	r0, #0
    18a8:	str	r0, [sp, #52]	; 0x34
    18ac:	ldr	r5, [ip, #24]
    18b0:	cmp	r5, #0
    18b4:	beq	1b94 <afpacket_daq_acquire+0x344>
    18b8:	mov	r9, #0
    18bc:	mov	r0, #0
    18c0:	str	r0, [sp, #40]	; 0x28
    18c4:	ldr	r0, [ip, #40]	; 0x28
    18c8:	cmp	r0, #0
    18cc:	bne	1c8c <afpacket_daq_acquire+0x43c>
    18d0:	ldr	r0, [r5, #8]
    18d4:	cmp	r0, #1
    18d8:	bne	1b84 <afpacket_daq_acquire+0x334>
    18dc:	ldr	r0, [r5, #48]	; 0x30
    18e0:	ldr	r6, [r0, #4]
    18e4:	ldr	r1, [r6]
    18e8:	tst	r1, #1
    18ec:	beq	1b84 <afpacket_daq_acquire+0x334>
    18f0:	ldr	r2, [r6, #20]
    18f4:	movw	r4, #19923	; 0x4dd3
    18f8:	ldrh	r0, [r6, #12]
    18fc:	ldr	r7, [r6, #8]
    1900:	movt	r4, #4194	; 0x1062
    1904:	umull	r2, r4, r2, r4
    1908:	add	r3, r7, r0
    190c:	ldr	r2, [r5, #28]
    1910:	cmp	r3, r2
    1914:	bhi	1ca0 <afpacket_daq_acquire+0x450>
    1918:	ldrh	r2, [r6, #24]
    191c:	str	r9, [sp, #44]	; 0x2c
    1920:	mov	r9, sl
    1924:	ldr	r8, [r6, #4]
    1928:	ldr	sl, [r6, #16]
    192c:	add	r0, r6, r0
    1930:	cmp	r2, #0
    1934:	beq	1944 <afpacket_daq_acquire+0xf4>
    1938:	cmp	r7, #12
    193c:	bcs	1954 <afpacket_daq_acquire+0x104>
    1940:	b	1998 <afpacket_daq_acquire+0x148>
    1944:	tst	r1, #16
    1948:	beq	1998 <afpacket_daq_acquire+0x148>
    194c:	cmp	r7, #11
    1950:	bls	1998 <afpacket_daq_acquire+0x148>
    1954:	ldr	r1, [r0, #8]
    1958:	vld1.8	{d16}, [r0]
    195c:	mov	r2, #129	; 0x81
    1960:	add	r8, r8, #4
    1964:	add	r7, r7, #4
    1968:	strh	r2, [r0, #8]
    196c:	str	r1, [r0, #4]
    1970:	sub	r1, r0, #4
    1974:	vst1.8	{d16}, [r1]
    1978:	str	r1, [sp, #56]	; 0x38
    197c:	ldrh	r1, [r6, #24]
    1980:	rev16	r1, r1
    1984:	strh	r1, [r0, #10]
    1988:	ldr	r0, [ip, #36]	; 0x24
    198c:	cmp	r0, #0
    1990:	bne	19a8 <afpacket_daq_acquire+0x158>
    1994:	b	19c4 <afpacket_daq_acquire+0x174>
    1998:	str	r0, [sp, #56]	; 0x38
    199c:	ldr	r0, [ip, #36]	; 0x24
    19a0:	cmp	r0, #0
    19a4:	beq	19c4 <afpacket_daq_acquire+0x174>
    19a8:	ldr	r1, [sp, #56]	; 0x38
    19ac:	mov	r2, r8
    19b0:	mov	r3, r7
    19b4:	bl	acc <sfbpf_filter@plt>
    19b8:	ldr	ip, [sp, #48]	; 0x30
    19bc:	cmp	r0, #0
    19c0:	beq	1ac8 <afpacket_daq_acquire+0x278>
    19c4:	lsr	r0, r4, #6
    19c8:	sub	r1, fp, #80	; 0x50
    19cc:	str	sl, [fp, #-84]	; 0xffffffac
    19d0:	mov	sl, r9
    19d4:	stm	r1, {r0, r7, r8}
    19d8:	mov	r8, r5
    19dc:	ldr	r0, [r5, #88]	; 0x58
    19e0:	str	r0, [fp, #-68]	; 0xffffffbc
    19e4:	ldr	r0, [r8, #92]!	; 0x5c
    19e8:	cmp	r0, #0
    19ec:	ldrne	r0, [r0, #88]	; 0x58
    19f0:	add	r1, pc, #856	; 0x358
    19f4:	vld1.64	{d16-d17}, [r1 :128]
    19f8:	mvneq	r0, #0
    19fc:	cmp	r9, #0
    1a00:	str	r0, [fp, #-64]	; 0xffffffc0
    1a04:	ldr	r0, [sp, #36]	; 0x24
    1a08:	vst1.32	{d16-d17}, [r0]
    1a0c:	mov	r0, #0
    1a10:	strh	r0, [fp, #-36]	; 0xffffffdc
    1a14:	str	r0, [fp, #-44]	; 0xffffffd4
    1a18:	beq	1a94 <afpacket_daq_acquire+0x244>
    1a1c:	ldr	r0, [fp, #8]
    1a20:	ldr	r2, [sp, #56]	; 0x38
    1a24:	sub	r1, fp, #84	; 0x54
    1a28:	blx	sl
    1a2c:	ldr	r1, [sp, #28]
    1a30:	cmp	r0, #6
    1a34:	ldr	ip, [sp, #48]	; 0x30
    1a38:	mov	r9, #1
    1a3c:	movwhi	r0, #0
    1a40:	ldr	r2, [r1, r0, lsl #3]!
    1a44:	adds	r2, r2, #1
    1a48:	str	r2, [r1]
    1a4c:	ldr	r2, [r1, #4]
    1a50:	adc	r2, r2, #0
    1a54:	str	r2, [r1, #4]
    1a58:	ldr	r1, [sp, #32]
    1a5c:	ldrd	r2, [r1]
    1a60:	adds	r2, r2, #1
    1a64:	adc	r3, r3, #0
    1a68:	strd	r2, [r1]
    1a6c:	ldr	r1, [sp, #52]	; 0x34
    1a70:	add	r1, r1, #1
    1a74:	str	r1, [sp, #52]	; 0x34
    1a78:	mov	r1, #45	; 0x2d
    1a7c:	tst	r9, r1, lsr r0
    1a80:	beq	1b68 <afpacket_daq_acquire+0x318>
    1a84:	ldr	r0, [r8]
    1a88:	cmp	r0, #0
    1a8c:	bne	1afc <afpacket_daq_acquire+0x2ac>
    1a90:	b	1b68 <afpacket_daq_acquire+0x318>
    1a94:	ldr	r2, [sp, #32]
    1a98:	mov	r9, #1
    1a9c:	ldrd	r0, [r2]
    1aa0:	adds	r0, r0, #1
    1aa4:	adc	r1, r1, #0
    1aa8:	strd	r0, [r2]
    1aac:	ldr	r0, [sp, #52]	; 0x34
    1ab0:	add	r0, r0, #1
    1ab4:	str	r0, [sp, #52]	; 0x34
    1ab8:	ldr	r0, [r8]
    1abc:	cmp	r0, #0
    1ac0:	bne	1afc <afpacket_daq_acquire+0x2ac>
    1ac4:	b	1b68 <afpacket_daq_acquire+0x318>
    1ac8:	ldr	r2, [sp, #20]
    1acc:	mov	sl, r9
    1ad0:	add	r8, r5, #92	; 0x5c
    1ad4:	ldrd	r0, [r2]
    1ad8:	adds	r0, r0, #1
    1adc:	adc	r1, r1, #0
    1ae0:	strd	r0, [r2]
    1ae4:	mov	r0, #1
    1ae8:	ldr	r9, [sp, #44]	; 0x2c
    1aec:	str	r0, [sp, #40]	; 0x28
    1af0:	ldr	r0, [r8]
    1af4:	cmp	r0, #0
    1af8:	beq	1b68 <afpacket_daq_acquire+0x318>
    1afc:	ldr	r4, [r0, #80]	; 0x50
    1b00:	ldr	r1, [r4, #4]
    1b04:	ldr	r2, [r1]
    1b08:	cmp	r2, #0
    1b0c:	bne	1b68 <afpacket_daq_acquire+0x318>
    1b10:	ldr	r0, [r0, #12]
    1b14:	mov	r2, r7
    1b18:	add	r0, r0, #15
    1b1c:	bic	r0, r0, #15
    1b20:	add	r0, r1, r0
    1b24:	ldr	r1, [sp, #56]	; 0x38
    1b28:	bl	9c4 <memcpy@plt>
    1b2c:	ldr	r0, [r4, #4]
    1b30:	mov	r1, #1
    1b34:	mov	r2, #0
    1b38:	mov	r3, #0
    1b3c:	str	r7, [r0, #4]
    1b40:	ldr	r0, [r4, #4]
    1b44:	str	r1, [r0]
    1b48:	mov	r1, #0
    1b4c:	ldr	r0, [r8]
    1b50:	ldr	r0, [r0, #4]
    1b54:	bl	af0 <send@plt>
    1b58:	ldr	ip, [sp, #48]	; 0x30
    1b5c:	ldr	r0, [r4]
    1b60:	ldr	r1, [r8]
    1b64:	str	r0, [r1, #80]	; 0x50
    1b68:	ldr	r0, [r5, #8]
    1b6c:	cmp	r0, #1
    1b70:	moveq	r0, #0
    1b74:	streq	r0, [r6]
    1b78:	ldr	r0, [r5, #48]	; 0x30
    1b7c:	ldr	r0, [r0]
    1b80:	str	r0, [r5, #48]	; 0x30
    1b84:	ldr	r5, [r5]
    1b88:	cmp	r5, #0
    1b8c:	bne	18c4 <afpacket_daq_acquire+0x74>
    1b90:	b	1ba0 <afpacket_daq_acquire+0x350>
    1b94:	mov	r0, #0
    1b98:	mov	r9, #0
    1b9c:	str	r0, [sp, #40]	; 0x28
    1ba0:	ldr	r0, [sp, #40]	; 0x28
    1ba4:	movw	r4, #8248	; 0x2038
    1ba8:	mov	r3, #1
    1bac:	orrs	r0, r9, r0
    1bb0:	beq	1bd4 <afpacket_daq_acquire+0x384>
    1bb4:	ldr	r0, [sp, #24]
    1bb8:	cmp	r0, #1
    1bbc:	blt	18ac <afpacket_daq_acquire+0x5c>
    1bc0:	ldr	r0, [sp, #24]
    1bc4:	ldr	r1, [sp, #52]	; 0x34
    1bc8:	cmp	r1, r0
    1bcc:	blt	18ac <afpacket_daq_acquire+0x5c>
    1bd0:	b	1cd8 <afpacket_daq_acquire+0x488>
    1bd4:	ldr	r0, [ip, #24]
    1bd8:	cmp	r0, #0
    1bdc:	beq	1bfc <afpacket_daq_acquire+0x3ac>
    1be0:	ldr	r1, [sp, #16]
    1be4:	ldr	r2, [r0, #4]
    1be8:	stmda	r1, {r2, r3}
    1bec:	add	r1, r1, #8
    1bf0:	ldr	r0, [r0]
    1bf4:	cmp	r0, #0
    1bf8:	bne	1be4 <afpacket_daq_acquire+0x394>
    1bfc:	ldr	r2, [ip, #12]
    1c00:	ldr	r1, [ip, #28]
    1c04:	add	r0, sp, #60	; 0x3c
    1c08:	bl	9dc <poll@plt>
    1c0c:	cmn	r0, #1
    1c10:	ble	1c54 <afpacket_daq_acquire+0x404>
    1c14:	cmp	r0, #0
    1c18:	beq	1cd8 <afpacket_daq_acquire+0x488>
    1c1c:	ldr	ip, [sp, #48]	; 0x30
    1c20:	ldr	r0, [ip, #28]
    1c24:	cmp	r0, #0
    1c28:	beq	1bb4 <afpacket_daq_acquire+0x364>
    1c2c:	ldr	r2, [sp, #12]
    1c30:	mov	r1, #0
    1c34:	ldrh	r3, [r2]
    1c38:	tst	r3, r4
    1c3c:	bne	1cb8 <afpacket_daq_acquire+0x468>
    1c40:	add	r1, r1, #1
    1c44:	add	r2, r2, #8
    1c48:	cmp	r1, r0
    1c4c:	bcc	1c34 <afpacket_daq_acquire+0x3e4>
    1c50:	b	1bb4 <afpacket_daq_acquire+0x364>
    1c54:	bl	a84 <__errno_location@plt>
    1c58:	mov	r7, r0
    1c5c:	ldr	r0, [r0]
    1c60:	ldr	ip, [sp, #48]	; 0x30
    1c64:	cmp	r0, #4
    1c68:	beq	1bb4 <afpacket_daq_acquire+0x364>
    1c6c:	mov	r4, ip
    1c70:	bl	a30 <strerror@plt>
    1c74:	ldr	r1, [r7]
    1c78:	stm	sp, {r0, r1}
    1c7c:	add	r0, r4, #148	; 0x94
    1c80:	ldr	r2, [pc, #220]	; 1d64 <afpacket_daq_acquire+0x514>
    1c84:	add	r2, pc, r2
    1c88:	b	1d30 <afpacket_daq_acquire+0x4e0>
    1c8c:	mov	r5, #0
    1c90:	str	r5, [ip, #40]	; 0x28
    1c94:	mov	r0, r5
    1c98:	sub	sp, fp, #28
    1c9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1ca0:	stm	sp, {r0, r7}
    1ca4:	str	r2, [sp, #8]
    1ca8:	add	r0, ip, #148	; 0x94
    1cac:	ldr	r2, [pc, #172]	; 1d60 <afpacket_daq_acquire+0x510>
    1cb0:	add	r2, pc, r2
    1cb4:	b	1d30 <afpacket_daq_acquire+0x4e0>
    1cb8:	sxth	r0, r3
    1cbc:	movw	r1, #8208	; 0x2010
    1cc0:	tst	r0, r1
    1cc4:	beq	1ce8 <afpacket_daq_acquire+0x498>
    1cc8:	ldr	r2, [pc, #152]	; 1d68 <afpacket_daq_acquire+0x518>
    1ccc:	add	r0, ip, #148	; 0x94
    1cd0:	add	r2, pc, r2
    1cd4:	b	1d30 <afpacket_daq_acquire+0x4e0>
    1cd8:	mov	r5, #0
    1cdc:	mov	r0, r5
    1ce0:	sub	sp, fp, #28
    1ce4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1ce8:	tst	r0, #8
    1cec:	bne	1d24 <afpacket_daq_acquire+0x4d4>
    1cf0:	mvn	r5, #0
    1cf4:	tst	r0, #32
    1cf8:	beq	1d44 <afpacket_daq_acquire+0x4f4>
    1cfc:	ldr	r2, [pc, #112]	; 1d74 <afpacket_daq_acquire+0x524>
    1d00:	ldr	r3, [pc, #112]	; 1d78 <afpacket_daq_acquire+0x528>
    1d04:	add	r0, ip, #148	; 0x94
    1d08:	mov	r1, #256	; 0x100
    1d0c:	add	r2, pc, r2
    1d10:	add	r3, pc, r3
    1d14:	bl	a90 <snprintf@plt>
    1d18:	mov	r0, r5
    1d1c:	sub	sp, fp, #28
    1d20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1d24:	ldr	r2, [pc, #68]	; 1d70 <afpacket_daq_acquire+0x520>
    1d28:	add	r0, ip, #148	; 0x94
    1d2c:	add	r2, pc, r2
    1d30:	ldr	r3, [pc, #52]	; 1d6c <afpacket_daq_acquire+0x51c>
    1d34:	mov	r1, #256	; 0x100
    1d38:	add	r3, pc, r3
    1d3c:	bl	a90 <snprintf@plt>
    1d40:	mvn	r5, #0
    1d44:	mov	r0, r5
    1d48:	sub	sp, fp, #28
    1d4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1d50:	.word	0xffffffff
    1d54:	.word	0xffffffff
	...
    1d60:	.word	0x00000f73
    1d64:	.word	0x00000fed
    1d68:	.word	0x00000fba
    1d6c:	.word	0x00000ed6
    1d70:	.word	0x00000f7d
    1d74:	.word	0x00000fd0
    1d78:	.word	0x00000efe

00001d7c <afpacket_daq_inject>:
    1d7c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    1d80:	add	fp, sp, #24
    1d84:	sub	sp, sp, #8
    1d88:	ldr	r7, [r0, #24]
    1d8c:	mvn	r5, #0
    1d90:	cmp	r7, #0
    1d94:	beq	1df0 <afpacket_daq_inject+0x74>
    1d98:	mov	r4, r0
    1d9c:	ldr	r0, [fp, #8]
    1da0:	ldr	r1, [r1, #16]
    1da4:	mov	r8, r3
    1da8:	ldr	r3, [r7, #88]	; 0x58
    1dac:	cmp	r3, r1
    1db0:	beq	1dc4 <afpacket_daq_inject+0x48>
    1db4:	ldr	r7, [r7]
    1db8:	cmp	r7, #0
    1dbc:	bne	1da8 <afpacket_daq_inject+0x2c>
    1dc0:	b	1df0 <afpacket_daq_inject+0x74>
    1dc4:	cmp	r0, #0
    1dc8:	bne	1dd8 <afpacket_daq_inject+0x5c>
    1dcc:	ldr	r7, [r7, #92]	; 0x5c
    1dd0:	cmp	r7, #0
    1dd4:	beq	1df0 <afpacket_daq_inject+0x74>
    1dd8:	ldr	r6, [r7, #80]	; 0x50
    1ddc:	mov	r5, #0
    1de0:	ldr	r0, [r6, #4]
    1de4:	ldr	r1, [r0]
    1de8:	cmp	r1, #0
    1dec:	beq	1dfc <afpacket_daq_inject+0x80>
    1df0:	mov	r0, r5
    1df4:	sub	sp, fp, #24
    1df8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1dfc:	ldr	r1, [r7, #12]
    1e00:	add	r1, r1, #15
    1e04:	bic	r1, r1, #15
    1e08:	add	r0, r0, r1
    1e0c:	mov	r1, r2
    1e10:	mov	r2, r8
    1e14:	bl	9c4 <memcpy@plt>
    1e18:	ldr	r0, [r6, #4]
    1e1c:	mov	r1, #1
    1e20:	mov	r2, #0
    1e24:	mov	r3, #0
    1e28:	mov	r5, #0
    1e2c:	str	r8, [r0, #4]
    1e30:	ldr	r0, [r6, #4]
    1e34:	str	r1, [r0]
    1e38:	mov	r1, #0
    1e3c:	ldr	r0, [r6]
    1e40:	str	r0, [r7, #80]	; 0x50
    1e44:	ldr	r0, [r7, #4]
    1e48:	bl	af0 <send@plt>
    1e4c:	cmn	r0, #1
    1e50:	ble	1e70 <afpacket_daq_inject+0xf4>
    1e54:	ldrd	r0, [r4, #80]	; 0x50
    1e58:	adds	r0, r0, #1
    1e5c:	adc	r1, r1, #0
    1e60:	strd	r0, [r4, #80]	; 0x50
    1e64:	mov	r0, r5
    1e68:	sub	sp, fp, #24
    1e6c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1e70:	bl	a84 <__errno_location@plt>
    1e74:	mov	r5, r0
    1e78:	ldr	r0, [r0]
    1e7c:	bl	a30 <strerror@plt>
    1e80:	ldr	r1, [r5]
    1e84:	stm	sp, {r0, r1}
    1e88:	add	r0, r4, #148	; 0x94
    1e8c:	mov	r1, #256	; 0x100
    1e90:	ldr	r2, [pc, #28]	; 1eb4 <afpacket_daq_inject+0x138>
    1e94:	ldr	r3, [pc, #28]	; 1eb8 <afpacket_daq_inject+0x13c>
    1e98:	add	r2, pc, r2
    1e9c:	add	r3, pc, r3
    1ea0:	bl	a90 <snprintf@plt>
    1ea4:	mvn	r5, #0
    1ea8:	mov	r0, r5
    1eac:	sub	sp, fp, #24
    1eb0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1eb4:	.word	0x00000e73
    1eb8:	.word	0x00000e91

00001ebc <afpacket_daq_breakloop>:
    1ebc:	mov	r1, #1
    1ec0:	str	r1, [r0, #40]	; 0x28
    1ec4:	mov	r0, #0
    1ec8:	bx	lr

00001ecc <afpacket_daq_stop>:
    1ecc:	cmp	r0, #0
    1ed0:	beq	1f1c <afpacket_daq_stop+0x50>
    1ed4:	push	{r4, sl, fp, lr}
    1ed8:	add	fp, sp, #8
    1edc:	mov	r4, r0
    1ee0:	bl	21d4 <update_hw_stats>
    1ee4:	ldr	r0, [r4, #24]
    1ee8:	cmp	r0, #0
    1eec:	beq	1f08 <afpacket_daq_stop+0x3c>
    1ef0:	ldr	r1, [r0]
    1ef4:	str	r1, [r4, #24]
    1ef8:	bl	20f0 <destroy_instance>
    1efc:	ldr	r0, [r4, #24]
    1f00:	cmp	r0, #0
    1f04:	bne	1ef0 <afpacket_daq_stop+0x24>
    1f08:	add	r0, r4, #32
    1f0c:	bl	a00 <sfbpf_freecode@plt>
    1f10:	mov	r0, #3
    1f14:	str	r0, [r4, #144]	; 0x90
    1f18:	pop	{r4, sl, fp, lr}
    1f1c:	mov	r0, #0
    1f20:	bx	lr

00001f24 <afpacket_daq_shutdown>:
    1f24:	push	{r4, sl, fp, lr}
    1f28:	add	fp, sp, #8
    1f2c:	mov	r4, r0
    1f30:	cmp	r0, #0
    1f34:	beq	1f74 <afpacket_daq_shutdown+0x50>
    1f38:	mov	r0, r4
    1f3c:	bl	21d4 <update_hw_stats>
    1f40:	ldr	r0, [r4, #24]
    1f44:	cmp	r0, #0
    1f48:	beq	1f64 <afpacket_daq_shutdown+0x40>
    1f4c:	ldr	r1, [r0]
    1f50:	str	r1, [r4, #24]
    1f54:	bl	20f0 <destroy_instance>
    1f58:	ldr	r0, [r4, #24]
    1f5c:	cmp	r0, #0
    1f60:	bne	1f4c <afpacket_daq_shutdown+0x28>
    1f64:	add	r0, r4, #32
    1f68:	bl	a00 <sfbpf_freecode@plt>
    1f6c:	mov	r0, #3
    1f70:	str	r0, [r4, #144]	; 0x90
    1f74:	ldr	r0, [r4]
    1f78:	cmp	r0, #0
    1f7c:	beq	1f84 <afpacket_daq_shutdown+0x60>
    1f80:	bl	9b8 <free@plt>
    1f84:	ldr	r0, [r4, #4]
    1f88:	cmp	r0, #0
    1f8c:	beq	1f94 <afpacket_daq_shutdown+0x70>
    1f90:	bl	9b8 <free@plt>
    1f94:	mov	r0, r4
    1f98:	pop	{r4, sl, fp, lr}
    1f9c:	b	9b8 <free@plt>

00001fa0 <afpacket_daq_check_status>:
    1fa0:	ldr	r0, [r0, #144]	; 0x90
    1fa4:	bx	lr

00001fa8 <afpacket_daq_get_stats>:
    1fa8:	push	{r4, r5, fp, lr}
    1fac:	add	fp, sp, #8
    1fb0:	mov	r4, r1
    1fb4:	mov	r5, r0
    1fb8:	bl	21d4 <update_hw_stats>
    1fbc:	add	r1, r5, #48	; 0x30
    1fc0:	mov	r0, r4
    1fc4:	mov	r2, #96	; 0x60
    1fc8:	bl	9c4 <memcpy@plt>
    1fcc:	mov	r0, #0
    1fd0:	pop	{r4, r5, fp, pc}

00001fd4 <afpacket_daq_reset_stats>:
    1fd4:	push	{r4, r5, r6, sl, fp, lr}
    1fd8:	add	fp, sp, #16
    1fdc:	sub	sp, sp, #16
    1fe0:	mov	r1, #8
    1fe4:	vmov.i32	q8, #0	; 0x00000000
    1fe8:	str	r1, [sp, #4]
    1fec:	add	r1, r0, #128	; 0x80
    1ff0:	vst1.64	{d16-d17}, [r1]
    1ff4:	add	r1, r0, #112	; 0x70
    1ff8:	vst1.64	{d16-d17}, [r1]
    1ffc:	add	r1, r0, #96	; 0x60
    2000:	vst1.64	{d16-d17}, [r1]
    2004:	add	r1, r0, #80	; 0x50
    2008:	vst1.64	{d16-d17}, [r1]
    200c:	add	r1, r0, #64	; 0x40
    2010:	vst1.64	{d16-d17}, [r1]
    2014:	add	r1, r0, #48	; 0x30
    2018:	vst1.64	{d16-d17}, [r1]
    201c:	ldr	r5, [r0, #24]
    2020:	cmp	r5, #0
    2024:	beq	2054 <afpacket_daq_reset_stats+0x80>
    2028:	add	r6, sp, #4
    202c:	add	r4, sp, #8
    2030:	ldr	r0, [r5, #4]
    2034:	movw	r1, #263	; 0x107
    2038:	mov	r2, #6
    203c:	mov	r3, r4
    2040:	str	r6, [sp]
    2044:	bl	9e8 <getsockopt@plt>
    2048:	ldr	r5, [r5]
    204c:	cmp	r5, #0
    2050:	bne	2030 <afpacket_daq_reset_stats+0x5c>
    2054:	sub	sp, fp, #16
    2058:	pop	{r4, r5, r6, sl, fp, pc}

0000205c <afpacket_daq_get_snaplen>:
    205c:	ldr	r0, [r0, #8]
    2060:	bx	lr

00002064 <afpacket_daq_get_capabilities>:
    2064:	movw	r0, #487	; 0x1e7
    2068:	bx	lr

0000206c <afpacket_daq_get_datalink_type>:
    206c:	mov	r0, #1
    2070:	bx	lr

00002074 <afpacket_daq_get_errbuf>:
    2074:	add	r0, r0, #148	; 0x94
    2078:	bx	lr

0000207c <afpacket_daq_set_errbuf>:
    207c:	cmp	r1, #0
    2080:	bxeq	lr
    2084:	ldr	r2, [pc, #16]	; 209c <afpacket_daq_set_errbuf+0x20>
    2088:	mov	r3, r1
    208c:	add	r0, r0, #148	; 0x94
    2090:	mov	r1, #256	; 0x100
    2094:	add	r2, pc, r2
    2098:	b	a90 <snprintf@plt>
    209c:	.word	0x00000890

000020a0 <afpacket_daq_get_device_index>:
    20a0:	push	{r4, r5, r6, sl, fp, lr}
    20a4:	add	fp, sp, #16
    20a8:	ldr	r6, [r0, #24]
    20ac:	mvn	r4, #2
    20b0:	cmp	r6, #0
    20b4:	beq	20dc <afpacket_daq_get_device_index+0x3c>
    20b8:	mov	r5, r1
    20bc:	ldr	r1, [r6, #84]	; 0x54
    20c0:	mov	r0, r5
    20c4:	bl	97c <strcmp@plt>
    20c8:	cmp	r0, #0
    20cc:	beq	20e4 <afpacket_daq_get_device_index+0x44>
    20d0:	ldr	r6, [r6]
    20d4:	cmp	r6, #0
    20d8:	bne	20bc <afpacket_daq_get_device_index+0x1c>
    20dc:	mov	r0, r4
    20e0:	pop	{r4, r5, r6, sl, fp, pc}
    20e4:	ldr	r4, [r6, #88]	; 0x58
    20e8:	mov	r0, r4
    20ec:	pop	{r4, r5, r6, sl, fp, pc}

000020f0 <destroy_instance>:
    20f0:	cmp	r0, #0
    20f4:	bxeq	lr
    20f8:	push	{r4, r5, r6, sl, fp, lr}
    20fc:	add	fp, sp, #16
    2100:	sub	sp, sp, #24
    2104:	mov	r4, r0
    2108:	ldr	r0, [r0, #4]
    210c:	cmn	r0, #1
    2110:	beq	21b0 <destroy_instance+0xc0>
    2114:	ldr	r0, [r4, #44]	; 0x2c
    2118:	cmp	r0, #0
    211c:	beq	212c <destroy_instance+0x3c>
    2120:	bl	9b8 <free@plt>
    2124:	mov	r0, #0
    2128:	str	r0, [r4, #44]	; 0x2c
    212c:	ldr	r0, [r4, #76]	; 0x4c
    2130:	cmp	r0, #0
    2134:	beq	2144 <destroy_instance+0x54>
    2138:	bl	9b8 <free@plt>
    213c:	mov	r0, #0
    2140:	str	r0, [r4, #76]	; 0x4c
    2144:	ldr	r0, [r4, #16]
    2148:	cmn	r0, #1
    214c:	beq	2168 <destroy_instance+0x78>
    2150:	ldr	r1, [r4, #36]	; 0x24
    2154:	ldr	r2, [r4, #68]	; 0x44
    2158:	add	r1, r2, r1
    215c:	bl	ac0 <munmap@plt>
    2160:	mvn	r0, #0
    2164:	str	r0, [r4, #16]
    2168:	add	r5, sp, #8
    216c:	vmov.i32	q8, #0	; 0x00000000
    2170:	mov	r6, #16
    2174:	movw	r1, #263	; 0x107
    2178:	mov	r2, #5
    217c:	vst1.64	{d16-d17}, [r5]
    2180:	mov	r3, r5
    2184:	ldr	r0, [r4, #4]
    2188:	str	r6, [sp]
    218c:	bl	994 <setsockopt@plt>
    2190:	ldr	r0, [r4, #4]
    2194:	movw	r1, #263	; 0x107
    2198:	mov	r2, #13
    219c:	mov	r3, r5
    21a0:	str	r6, [sp]
    21a4:	bl	994 <setsockopt@plt>
    21a8:	ldr	r0, [r4, #4]
    21ac:	bl	ae4 <close@plt>
    21b0:	ldr	r0, [r4, #84]	; 0x54
    21b4:	cmp	r0, #0
    21b8:	beq	21c0 <destroy_instance+0xd0>
    21bc:	bl	9b8 <free@plt>
    21c0:	mov	r0, r4
    21c4:	bl	9b8 <free@plt>
    21c8:	sub	sp, fp, #16
    21cc:	pop	{r4, r5, r6, sl, fp, lr}
    21d0:	bx	lr

000021d4 <update_hw_stats>:
    21d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    21d8:	add	fp, sp, #28
    21dc:	sub	sp, sp, #20
    21e0:	mov	r1, #8
    21e4:	str	r1, [sp, #4]
    21e8:	ldr	r1, [r0, #144]	; 0x90
    21ec:	cmp	r1, #2
    21f0:	bne	22bc <update_hw_stats+0xe8>
    21f4:	ldr	r6, [r0, #24]
    21f8:	cmp	r6, #0
    21fc:	beq	22bc <update_hw_stats+0xe8>
    2200:	add	r7, r0, #48	; 0x30
    2204:	mov	r2, #8
    2208:	add	r4, sp, #8
    220c:	add	r8, sp, #4
    2210:	b	2218 <update_hw_stats+0x44>
    2214:	ldr	r2, [sp, #4]
    2218:	mov	r0, r4
    221c:	mov	r1, #0
    2220:	bl	aa8 <memset@plt>
    2224:	ldr	r0, [r6, #4]
    2228:	movw	r1, #263	; 0x107
    222c:	mov	r2, #6
    2230:	mov	r3, r4
    2234:	str	r8, [sp]
    2238:	bl	9e8 <getsockopt@plt>
    223c:	cmp	r0, #0
    2240:	blt	2274 <update_hw_stats+0xa0>
    2244:	ldr	r0, [sp, #8]
    2248:	ldr	r1, [sp, #12]
    224c:	vld1.64	{d16-d17}, [r7]
    2250:	sub	r0, r0, r1
    2254:	vmov.32	d18[0], r0
    2258:	vmov.32	d18[1], r1
    225c:	vaddw.u32	q8, q8, d18
    2260:	vst1.64	{d16-d17}, [r7]
    2264:	ldr	r6, [r6]
    2268:	cmp	r6, #0
    226c:	bne	2214 <update_hw_stats+0x40>
    2270:	b	22bc <update_hw_stats+0xe8>
    2274:	ldr	r9, [r6, #84]	; 0x54
    2278:	ldr	r0, [pc, #68]	; 22c4 <update_hw_stats+0xf0>
    227c:	ldr	r0, [pc, r0]
    2280:	ldr	sl, [r0]
    2284:	bl	a84 <__errno_location@plt>
    2288:	ldr	r5, [r0]
    228c:	mov	r0, r5
    2290:	bl	a30 <strerror@plt>
    2294:	str	r0, [sp]
    2298:	mov	r0, sl
    229c:	mov	r2, r9
    22a0:	mov	r3, r5
    22a4:	ldr	r1, [pc, #28]	; 22c8 <update_hw_stats+0xf4>
    22a8:	add	r1, pc, r1
    22ac:	bl	a6c <fprintf@plt>
    22b0:	ldr	r6, [r6]
    22b4:	cmp	r6, #0
    22b8:	bne	2214 <update_hw_stats+0x40>
    22bc:	sub	sp, fp, #28
    22c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    22c4:	.word	0x00010e18
    22c8:	.word	0x0000058c

000022cc <create_ring>:
    22cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    22d0:	add	fp, sp, #28
    22d4:	sub	sp, sp, #4
    22d8:	mov	r8, r3
    22dc:	mov	r6, r2
    22e0:	mov	r7, r1
    22e4:	mov	r4, r0
    22e8:	mov	r9, #3
    22ec:	bl	a78 <getpagesize@plt>
    22f0:	mov	r5, r0
    22f4:	ldr	r1, [r7, #12]
    22f8:	ldr	r0, [r4, #8]
    22fc:	mov	sl, r9
    2300:	add	r1, r1, #15
    2304:	bic	r1, r1, #15
    2308:	add	r1, r1, #49	; 0x31
    230c:	orr	r1, r1, #5
    2310:	add	r0, r1, r0
    2314:	lsl	r1, r5, r9
    2318:	bic	r0, r0, #15
    231c:	str	r0, [r6, #8]
    2320:	mov	r2, r1
    2324:	lsl	r1, r1, #1
    2328:	cmp	r2, r0
    232c:	bcc	2320 <create_ring+0x54>
    2330:	str	r2, [r6]
    2334:	udiv	r1, r2, r0
    2338:	ldr	r2, [r4, #16]
    233c:	udiv	r0, r2, r0
    2340:	udiv	r0, r0, r1
    2344:	str	r0, [r6, #4]
    2348:	mul	r0, r0, r1
    234c:	str	r0, [r6, #12]
    2350:	ldr	r0, [r4, #20]
    2354:	cmp	r0, #0
    2358:	beq	23ac <create_ring+0xe0>
    235c:	ldr	r0, [pc, #296]	; 248c <create_ring+0x1c0>
    2360:	add	r0, pc, r0
    2364:	bl	a18 <puts@plt>
    2368:	ldr	r1, [r6, #8]
    236c:	ldr	r0, [pc, #284]	; 2490 <create_ring+0x1c4>
    2370:	add	r0, pc, r0
    2374:	bl	9ac <printf@plt>
    2378:	ldr	r1, [r6, #12]
    237c:	ldr	r0, [pc, #272]	; 2494 <create_ring+0x1c8>
    2380:	add	r0, pc, r0
    2384:	bl	9ac <printf@plt>
    2388:	ldr	r1, [r6]
    238c:	ldr	r0, [pc, #260]	; 2498 <create_ring+0x1cc>
    2390:	mov	r2, sl
    2394:	add	r0, pc, r0
    2398:	bl	9ac <printf@plt>
    239c:	ldr	r1, [r6, #4]
    23a0:	ldr	r0, [pc, #244]	; 249c <create_ring+0x1d0>
    23a4:	add	r0, pc, r0
    23a8:	bl	9ac <printf@plt>
    23ac:	ldr	r0, [r7, #4]
    23b0:	mov	r1, #16
    23b4:	mov	r2, r8
    23b8:	mov	r3, r6
    23bc:	str	r1, [sp]
    23c0:	movw	r1, #263	; 0x107
    23c4:	bl	994 <setsockopt@plt>
    23c8:	cmp	r0, #0
    23cc:	beq	2420 <create_ring+0x154>
    23d0:	bl	a84 <__errno_location@plt>
    23d4:	ldr	r0, [r0]
    23d8:	cmp	r0, #12
    23dc:	bne	2458 <create_ring+0x18c>
    23e0:	ldr	r0, [r4, #20]
    23e4:	cmp	r0, #0
    23e8:	beq	2400 <create_ring+0x134>
    23ec:	ldr	r1, [r7, #84]	; 0x54
    23f0:	ldr	r0, [pc, #168]	; 24a0 <create_ring+0x1d4>
    23f4:	mov	r2, sl
    23f8:	add	r0, pc, r0
    23fc:	bl	9ac <printf@plt>
    2400:	sub	r9, sl, #1
    2404:	cmp	sl, #0
    2408:	bne	22f4 <create_ring+0x28>
    240c:	ldr	r3, [r7, #84]	; 0x54
    2410:	ldr	r2, [pc, #140]	; 24a4 <create_ring+0x1d8>
    2414:	add	r0, r4, #148	; 0x94
    2418:	add	r2, pc, r2
    241c:	b	2474 <create_ring+0x1a8>
    2420:	ldm	r6, {r0, r1}
    2424:	mul	r2, r1, r0
    2428:	str	r2, [r6, #16]
    242c:	ldr	r0, [r4, #20]
    2430:	mov	r4, #0
    2434:	cmp	r0, #0
    2438:	beq	244c <create_ring+0x180>
    243c:	ldr	r0, [pc, #108]	; 24b0 <create_ring+0x1e4>
    2440:	mov	r1, r8
    2444:	add	r0, pc, r0
    2448:	bl	9ac <printf@plt>
    244c:	mov	r0, r4
    2450:	sub	sp, fp, #28
    2454:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2458:	bl	a30 <strerror@plt>
    245c:	str	r0, [sp]
    2460:	add	r0, r4, #148	; 0x94
    2464:	ldr	r2, [pc, #60]	; 24a8 <create_ring+0x1dc>
    2468:	ldr	r3, [pc, #60]	; 24ac <create_ring+0x1e0>
    246c:	add	r2, pc, r2
    2470:	add	r3, pc, r3
    2474:	mov	r1, #256	; 0x100
    2478:	bl	a90 <snprintf@plt>
    247c:	mvn	r4, #0
    2480:	mov	r0, r4
    2484:	sub	sp, fp, #28
    2488:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    248c:	.word	0x000009e8
    2490:	.word	0x000007da
    2494:	.word	0x000007dc
    2498:	.word	0x000007da
    249c:	.word	0x000007e7
    24a0:	.word	0x00000658
    24a4:	.word	0x000006f2
    24a8:	.word	0x0000062c
    24ac:	.word	0x0000065d
    24b0:	.word	0x00000695

000024b4 <set_up_ring>:
    24b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    24b8:	add	fp, sp, #24
    24bc:	sub	sp, sp, #8
    24c0:	ldr	r5, [r2, #12]
    24c4:	mov	r7, r1
    24c8:	mov	r6, r0
    24cc:	mov	r1, #8
    24d0:	mov	r4, r2
    24d4:	mov	r0, r5
    24d8:	bl	964 <calloc@plt>
    24dc:	cmp	r0, #0
    24e0:	str	r0, [r4, #24]
    24e4:	beq	25b8 <set_up_ring+0x104>
    24e8:	ldr	r7, [r4, #4]
    24ec:	cmp	r7, #0
    24f0:	beq	259c <set_up_ring+0xe8>
    24f4:	ldr	r3, [r4]
    24f8:	ldr	r2, [r4, #8]
    24fc:	mov	ip, #0
    2500:	mov	lr, #0
    2504:	cmp	r2, r3
    2508:	bhi	2588 <set_up_ring+0xd4>
    250c:	ldr	r0, [r4, #12]
    2510:	cmp	ip, r0
    2514:	bcs	2584 <set_up_ring+0xd0>
    2518:	mul	r8, r3, lr
    251c:	lsl	r6, ip, #3
    2520:	mov	r5, #0
    2524:	ldr	r1, [r4, #20]
    2528:	ldr	r3, [r4, #24]
    252c:	mov	r0, r5
    2530:	add	r1, r1, r8
    2534:	mla	r1, r2, r5, r1
    2538:	add	r2, r3, r6
    253c:	add	r5, r5, #1
    2540:	str	r1, [r2, #4]
    2544:	ldr	r1, [r4, #24]
    2548:	add	r2, r1, r6
    254c:	add	r2, r2, #8
    2550:	str	r2, [r1, r6]
    2554:	ldr	r3, [r4]
    2558:	ldr	r2, [r4, #8]
    255c:	udiv	r1, r3, r2
    2560:	cmp	r5, r1
    2564:	bcs	257c <set_up_ring+0xc8>
    2568:	ldr	r7, [r4, #12]
    256c:	add	r1, ip, r5
    2570:	add	r6, r6, #8
    2574:	cmp	r1, r7
    2578:	bcc	2524 <set_up_ring+0x70>
    257c:	add	r0, ip, r0
    2580:	add	ip, r0, #1
    2584:	ldr	r7, [r4, #4]
    2588:	add	lr, lr, #1
    258c:	cmp	lr, r7
    2590:	bcc	2504 <set_up_ring+0x50>
    2594:	ldr	r5, [r4, #12]
    2598:	ldr	r0, [r4, #24]
    259c:	add	r1, r0, r5, lsl #3
    25a0:	str	r0, [r1, #-8]
    25a4:	ldr	r0, [r4, #24]
    25a8:	str	r0, [r4, #28]
    25ac:	mov	r0, #0
    25b0:	sub	sp, fp, #24
    25b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    25b8:	ldr	r0, [r7, #84]	; 0x54
    25bc:	mov	r1, #256	; 0x100
    25c0:	str	r0, [sp]
    25c4:	add	r0, r6, #148	; 0x94
    25c8:	ldr	r2, [pc, #24]	; 25e8 <set_up_ring+0x134>
    25cc:	ldr	r3, [pc, #24]	; 25ec <set_up_ring+0x138>
    25d0:	add	r2, pc, r2
    25d4:	add	r3, pc, r3
    25d8:	bl	a90 <snprintf@plt>
    25dc:	mvn	r0, #1
    25e0:	sub	sp, fp, #24
    25e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    25e8:	.word	0x000005f8
    25ec:	.word	0x0000062e

Disassembly of section .fini:

000025f0 <_fini>:
    25f0:	push	{r3, lr}
    25f4:	pop	{r3, pc}
