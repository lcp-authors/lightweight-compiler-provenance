
../repos/prog2/1.4:     file format elf32-littlearm


Disassembly of section .init:

00010700 <.init>:
   10700:	push	{r3, lr}
   10704:	bl	107e0 <_start@@Base+0x3c>
   10708:	pop	{r3, pc}

Disassembly of section .plt:

0001070c <printf@plt-0x14>:
   1070c:	push	{lr}		; (str lr, [sp, #-4]!)
   10710:	ldr	lr, [pc, #4]	; 1071c <printf@plt-0x4>
   10714:	add	lr, pc, lr
   10718:	ldr	pc, [lr, #8]!
   1071c:	andeq	r0, r1, r4, ror #17

00010720 <printf@plt>:
   10720:	add	ip, pc, #0, 12
   10724:	add	ip, ip, #16, 20	; 0x10000
   10728:	ldr	pc, [ip, #2276]!	; 0x8e4

0001072c <fopen@plt>:
   1072c:	add	ip, pc, #0, 12
   10730:	add	ip, ip, #16, 20	; 0x10000
   10734:	ldr	pc, [ip, #2268]!	; 0x8dc

00010738 <free@plt>:
   10738:	add	ip, pc, #0, 12
   1073c:	add	ip, ip, #16, 20	; 0x10000
   10740:	ldr	pc, [ip, #2260]!	; 0x8d4

00010744 <malloc@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #16, 20	; 0x10000
   1074c:	ldr	pc, [ip, #2252]!	; 0x8cc

00010750 <__libc_start_main@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #16, 20	; 0x10000
   10758:	ldr	pc, [ip, #2244]!	; 0x8c4

0001075c <__gmon_start__@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #16, 20	; 0x10000
   10764:	ldr	pc, [ip, #2236]!	; 0x8bc

00010768 <exit@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #16, 20	; 0x10000
   10770:	ldr	pc, [ip, #2228]!	; 0x8b4

00010774 <fclose@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #16, 20	; 0x10000
   1077c:	ldr	pc, [ip, #2220]!	; 0x8ac

00010780 <fseek@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #16, 20	; 0x10000
   10788:	ldr	pc, [ip, #2212]!	; 0x8a4

0001078c <abort@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #16, 20	; 0x10000
   10794:	ldr	pc, [ip, #2204]!	; 0x89c

00010798 <getc@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #16, 20	; 0x10000
   107a0:	ldr	pc, [ip, #2196]!	; 0x894

Disassembly of section .text:

000107a4 <_start@@Base>:
   107a4:	mov	fp, #0
   107a8:	mov	lr, #0
   107ac:	pop	{r1}		; (ldr r1, [sp], #4)
   107b0:	mov	r2, sp
   107b4:	push	{r2}		; (str r2, [sp, #-4]!)
   107b8:	push	{r0}		; (str r0, [sp, #-4]!)
   107bc:	ldr	ip, [pc, #16]	; 107d4 <_start@@Base+0x30>
   107c0:	push	{ip}		; (str ip, [sp, #-4]!)
   107c4:	ldr	r0, [pc, #12]	; 107d8 <_start@@Base+0x34>
   107c8:	ldr	r3, [pc, #12]	; 107dc <_start@@Base+0x38>
   107cc:	bl	10750 <__libc_start_main@plt>
   107d0:	bl	1078c <abort@plt>
   107d4:	andeq	r0, r1, r8, asr #24
   107d8:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   107dc:	andeq	r0, r1, r8, ror #23
   107e0:	ldr	r3, [pc, #20]	; 107fc <_start@@Base+0x58>
   107e4:	ldr	r2, [pc, #20]	; 10800 <_start@@Base+0x5c>
   107e8:	add	r3, pc, r3
   107ec:	ldr	r2, [r3, r2]
   107f0:	cmp	r2, #0
   107f4:	bxeq	lr
   107f8:	b	1075c <__gmon_start__@plt>
   107fc:	andeq	r0, r1, r0, lsl r8
   10800:	andeq	r0, r0, r8, lsr r0
   10804:	ldr	r0, [pc, #24]	; 10824 <_start@@Base+0x80>
   10808:	ldr	r3, [pc, #24]	; 10828 <_start@@Base+0x84>
   1080c:	cmp	r3, r0
   10810:	bxeq	lr
   10814:	ldr	r3, [pc, #16]	; 1082c <_start@@Base+0x88>
   10818:	cmp	r3, #0
   1081c:	bxeq	lr
   10820:	bx	r3
   10824:	andeq	r1, r2, r4, asr #32
   10828:	andeq	r1, r2, r4, asr #32
   1082c:	andeq	r0, r0, r0
   10830:	ldr	r0, [pc, #36]	; 1085c <_start@@Base+0xb8>
   10834:	ldr	r1, [pc, #36]	; 10860 <_start@@Base+0xbc>
   10838:	sub	r1, r1, r0
   1083c:	asr	r1, r1, #2
   10840:	add	r1, r1, r1, lsr #31
   10844:	asrs	r1, r1, #1
   10848:	bxeq	lr
   1084c:	ldr	r3, [pc, #16]	; 10864 <_start@@Base+0xc0>
   10850:	cmp	r3, #0
   10854:	bxeq	lr
   10858:	bx	r3
   1085c:	andeq	r1, r2, r4, asr #32
   10860:	andeq	r1, r2, r4, asr #32
   10864:	andeq	r0, r0, r0
   10868:	push	{r4, lr}
   1086c:	ldr	r4, [pc, #24]	; 1088c <_start@@Base+0xe8>
   10870:	ldrb	r3, [r4]
   10874:	cmp	r3, #0
   10878:	popne	{r4, pc}
   1087c:	bl	10804 <_start@@Base+0x60>
   10880:	mov	r3, #1
   10884:	strb	r3, [r4]
   10888:	pop	{r4, pc}
   1088c:	andeq	r1, r2, r4, asr #32
   10890:	b	10830 <_start@@Base+0x8c>

00010894 <print_pixelinfo@@Base>:
   10894:	push	{fp, lr}
   10898:	mov	fp, sp
   1089c:	sub	sp, sp, #8
   108a0:	ldr	r0, [r0, r1, lsl #2]
   108a4:	add	r3, r2, r2, lsl #1
   108a8:	ldrb	r3, [r0, r3]!
   108ac:	ldrb	ip, [r0, #1]
   108b0:	ldrb	r0, [r0, #2]
   108b4:	str	ip, [sp]
   108b8:	str	r0, [sp, #4]
   108bc:	movw	r0, #3160	; 0xc58
   108c0:	movt	r0, #1
   108c4:	bl	10720 <printf@plt>
   108c8:	mov	sp, fp
   108cc:	pop	{fp, pc}

000108d0 <main@@Base>:
   108d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   108d4:	add	fp, sp, #28
   108d8:	sub	sp, sp, #12
   108dc:	movw	r0, #3198	; 0xc7e
   108e0:	movt	r0, #1
   108e4:	movw	r1, #3219	; 0xc93
   108e8:	movt	r1, #1
   108ec:	bl	1072c <fopen@plt>
   108f0:	mov	r6, r0
   108f4:	bl	10798 <getc@plt>
   108f8:	cmp	r0, #66	; 0x42
   108fc:	bne	10bac <main@@Base+0x2dc>
   10900:	mov	r0, r6
   10904:	bl	10798 <getc@plt>
   10908:	cmp	r0, #77	; 0x4d
   1090c:	bne	10bac <main@@Base+0x2dc>
   10910:	mov	r0, r6
   10914:	bl	10798 <getc@plt>
   10918:	mov	r5, r0
   1091c:	mov	r0, r6
   10920:	bl	10798 <getc@plt>
   10924:	orr	r5, r5, r0, lsl #8
   10928:	mov	r0, r6
   1092c:	bl	10798 <getc@plt>
   10930:	orr	r5, r5, r0, lsl #16
   10934:	mov	r0, r6
   10938:	bl	10798 <getc@plt>
   1093c:	orr	r1, r5, r0, lsl #24
   10940:	movw	r0, #3279	; 0xccf
   10944:	movt	r0, #1
   10948:	bl	10720 <printf@plt>
   1094c:	mov	r0, r6
   10950:	mov	r1, #4
   10954:	mov	r2, #1
   10958:	bl	10780 <fseek@plt>
   1095c:	mov	r0, r6
   10960:	bl	10798 <getc@plt>
   10964:	mov	r4, r0
   10968:	mov	r0, r6
   1096c:	bl	10798 <getc@plt>
   10970:	str	r0, [sp, #4]
   10974:	mov	r0, r6
   10978:	bl	10798 <getc@plt>
   1097c:	str	r0, [sp]
   10980:	mov	r0, r6
   10984:	bl	10798 <getc@plt>
   10988:	mov	r9, r0
   1098c:	mov	r0, r6
   10990:	mov	r1, #4
   10994:	mov	r2, #1
   10998:	bl	10780 <fseek@plt>
   1099c:	mov	r0, r6
   109a0:	bl	10798 <getc@plt>
   109a4:	mov	r5, r0
   109a8:	mov	r0, r6
   109ac:	bl	10798 <getc@plt>
   109b0:	orr	r5, r5, r0, lsl #8
   109b4:	mov	r0, r6
   109b8:	bl	10798 <getc@plt>
   109bc:	orr	r5, r5, r0, lsl #16
   109c0:	mov	r0, r6
   109c4:	bl	10798 <getc@plt>
   109c8:	orr	sl, r5, r0, lsl #24
   109cc:	movw	r0, #3314	; 0xcf2
   109d0:	movt	r0, #1
   109d4:	mov	r1, sl
   109d8:	bl	10720 <printf@plt>
   109dc:	mov	r0, r6
   109e0:	bl	10798 <getc@plt>
   109e4:	mov	r5, r0
   109e8:	mov	r0, r6
   109ec:	bl	10798 <getc@plt>
   109f0:	orr	r5, r5, r0, lsl #8
   109f4:	mov	r0, r6
   109f8:	bl	10798 <getc@plt>
   109fc:	orr	r5, r5, r0, lsl #16
   10a00:	mov	r0, r6
   10a04:	bl	10798 <getc@plt>
   10a08:	orr	r8, r5, r0, lsl #24
   10a0c:	movw	r0, #3337	; 0xd09
   10a10:	movt	r0, #1
   10a14:	mov	r1, r8
   10a18:	bl	10720 <printf@plt>
   10a1c:	mov	r0, r6
   10a20:	bl	10798 <getc@plt>
   10a24:	mov	r5, r0
   10a28:	mov	r0, r6
   10a2c:	bl	10798 <getc@plt>
   10a30:	orr	r0, r5, r0, lsl #8
   10a34:	cmp	r0, #1
   10a38:	bne	10bc0 <main@@Base+0x2f0>
   10a3c:	mov	r0, r6
   10a40:	bl	10798 <getc@plt>
   10a44:	mov	r7, r0
   10a48:	mov	r0, r6
   10a4c:	bl	10798 <getc@plt>
   10a50:	orr	r7, r7, r0, lsl #8
   10a54:	movw	r0, #3455	; 0xd7f
   10a58:	movt	r0, #1
   10a5c:	mov	r1, r7
   10a60:	bl	10720 <printf@plt>
   10a64:	cmp	r7, #24
   10a68:	bne	10bd4 <main@@Base+0x304>
   10a6c:	mov	r0, r6
   10a70:	ldr	r1, [sp, #4]
   10a74:	orr	r1, r4, r1, lsl #8
   10a78:	ldr	r2, [sp]
   10a7c:	orr	r1, r1, r2, lsl #16
   10a80:	orr	r1, r1, r9, lsl #24
   10a84:	mov	r6, #0
   10a88:	str	r0, [sp, #4]
   10a8c:	mov	r2, #0
   10a90:	bl	10780 <fseek@plt>
   10a94:	lsl	r0, r8, #2
   10a98:	bl	10744 <malloc@plt>
   10a9c:	mov	r5, r0
   10aa0:	str	r8, [sp]
   10aa4:	cmp	r8, #1
   10aa8:	blt	10b40 <main@@Base+0x270>
   10aac:	add	r8, sl, sl, lsl #1
   10ab0:	ldr	r7, [sp]
   10ab4:	mov	r0, r8
   10ab8:	bl	10744 <malloc@plt>
   10abc:	str	r0, [r5, r6, lsl #2]
   10ac0:	add	r6, r6, #1
   10ac4:	cmp	r7, r6
   10ac8:	bne	10ab4 <main@@Base+0x1e4>
   10acc:	cmp	r7, #1
   10ad0:	blt	10b40 <main@@Base+0x270>
   10ad4:	ldr	r8, [sp]
   10ad8:	str	sl, [sp, #8]
   10adc:	ldr	r4, [sp, #4]
   10ae0:	b	10aec <main@@Base+0x21c>
   10ae4:	cmp	r8, #1
   10ae8:	blt	10b40 <main@@Base+0x270>
   10aec:	sub	r8, r8, #1
   10af0:	cmp	sl, #1
   10af4:	blt	10ae4 <main@@Base+0x214>
   10af8:	mov	r6, #0
   10afc:	mov	r0, r4
   10b00:	bl	10798 <getc@plt>
   10b04:	ldr	r7, [r5, r8, lsl #2]
   10b08:	add	sl, r6, r6, lsl #1
   10b0c:	add	r9, r7, sl
   10b10:	strb	r0, [r9, #2]
   10b14:	mov	r0, r4
   10b18:	bl	10798 <getc@plt>
   10b1c:	strb	r0, [r9, #1]
   10b20:	mov	r0, r4
   10b24:	bl	10798 <getc@plt>
   10b28:	strb	r0, [r7, sl]
   10b2c:	ldr	sl, [sp, #8]
   10b30:	add	r6, r6, #1
   10b34:	cmp	sl, r6
   10b38:	bne	10afc <main@@Base+0x22c>
   10b3c:	b	10ae4 <main@@Base+0x214>
   10b40:	ldr	r0, [sp, #4]
   10b44:	bl	10774 <fclose@plt>
   10b48:	mov	r0, r5
   10b4c:	mov	r1, #0
   10b50:	mov	r2, #0
   10b54:	bl	10894 <print_pixelinfo@@Base>
   10b58:	mov	r0, r5
   10b5c:	mov	r1, #532	; 0x214
   10b60:	mov	r2, #0
   10b64:	bl	10894 <print_pixelinfo@@Base>
   10b68:	mov	r0, r5
   10b6c:	mov	r1, #408	; 0x198
   10b70:	movw	r2, #443	; 0x1bb
   10b74:	bl	10894 <print_pixelinfo@@Base>
   10b78:	ldr	r6, [sp]
   10b7c:	cmp	r6, #1
   10b80:	blt	10b98 <main@@Base+0x2c8>
   10b84:	mov	r4, r5
   10b88:	ldr	r0, [r4], #4
   10b8c:	bl	10738 <free@plt>
   10b90:	subs	r6, r6, #1
   10b94:	bne	10b88 <main@@Base+0x2b8>
   10b98:	mov	r0, r5
   10b9c:	bl	10738 <free@plt>
   10ba0:	mov	r0, #0
   10ba4:	sub	sp, fp, #28
   10ba8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10bac:	movw	r0, #3221	; 0xc95
   10bb0:	movt	r0, #1
   10bb4:	bl	10720 <printf@plt>
   10bb8:	mov	r0, #1
   10bbc:	bl	10768 <exit@plt>
   10bc0:	movw	r0, #3359	; 0xd1f
   10bc4:	movt	r0, #1
   10bc8:	bl	10720 <printf@plt>
   10bcc:	mov	r0, #2
   10bd0:	bl	10768 <exit@plt>
   10bd4:	movw	r0, #3475	; 0xd93
   10bd8:	movt	r0, #1
   10bdc:	bl	10720 <printf@plt>
   10be0:	mov	r0, #3
   10be4:	bl	10768 <exit@plt>

00010be8 <__libc_csu_init@@Base>:
   10be8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10bec:	mov	r7, r0
   10bf0:	ldr	r6, [pc, #72]	; 10c40 <__libc_csu_init@@Base+0x58>
   10bf4:	ldr	r5, [pc, #72]	; 10c44 <__libc_csu_init@@Base+0x5c>
   10bf8:	add	r6, pc, r6
   10bfc:	add	r5, pc, r5
   10c00:	sub	r6, r6, r5
   10c04:	mov	r8, r1
   10c08:	mov	r9, r2
   10c0c:	bl	10700 <printf@plt-0x20>
   10c10:	asrs	r6, r6, #2
   10c14:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c18:	mov	r4, #0
   10c1c:	add	r4, r4, #1
   10c20:	ldr	r3, [r5], #4
   10c24:	mov	r2, r9
   10c28:	mov	r1, r8
   10c2c:	mov	r0, r7
   10c30:	blx	r3
   10c34:	cmp	r6, r4
   10c38:	bne	10c1c <__libc_csu_init@@Base+0x34>
   10c3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c40:	andeq	r0, r1, ip, lsl #6
   10c44:	andeq	r0, r1, r4, lsl #6

00010c48 <__libc_csu_fini@@Base>:
   10c48:	bx	lr

Disassembly of section .fini:

00010c4c <.fini>:
   10c4c:	push	{r3, lr}
   10c50:	pop	{r3, pc}
