
../repos/coreutils/src/mktemp:     file format elf32-littlearm


Disassembly of section .init:

00010e14 <.init>:
   10e14:	push	{r3, lr}
   10e18:	bl	110ec <__mempcpy_chk@plt+0x48>
   10e1c:	pop	{r3, pc}

Disassembly of section .plt:

00010e20 <calloc@plt-0x14>:
   10e20:	push	{lr}		; (str lr, [sp, #-4]!)
   10e24:	ldr	lr, [pc, #4]	; 10e30 <calloc@plt-0x4>
   10e28:	add	lr, pc, lr
   10e2c:	ldr	pc, [lr, #8]!
   10e30:	ldrdeq	r6, [r1], -r0

00010e34 <calloc@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #90112	; 0x16000
   10e3c:	ldr	pc, [ip, #464]!	; 0x1d0

00010e40 <fputs_unlocked@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #90112	; 0x16000
   10e48:	ldr	pc, [ip, #456]!	; 0x1c8

00010e4c <raise@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #90112	; 0x16000
   10e54:	ldr	pc, [ip, #448]!	; 0x1c0

00010e58 <strcmp@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #90112	; 0x16000
   10e60:	ldr	pc, [ip, #440]!	; 0x1b8

00010e64 <fflush@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #90112	; 0x16000
   10e6c:	ldr	pc, [ip, #432]!	; 0x1b0

00010e70 <free@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #90112	; 0x16000
   10e78:	ldr	pc, [ip, #424]!	; 0x1a8

00010e7c <clock_gettime@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #90112	; 0x16000
   10e84:	ldr	pc, [ip, #416]!	; 0x1a0

00010e88 <_exit@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #90112	; 0x16000
   10e90:	ldr	pc, [ip, #408]!	; 0x198

00010e94 <memcpy@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #90112	; 0x16000
   10e9c:	ldr	pc, [ip, #400]!	; 0x190

00010ea0 <mbsinit@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #90112	; 0x16000
   10ea8:	ldr	pc, [ip, #392]!	; 0x188

00010eac <dcgettext@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #90112	; 0x16000
   10eb4:	ldr	pc, [ip, #384]!	; 0x180

00010eb8 <realloc@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #90112	; 0x16000
   10ec0:	ldr	pc, [ip, #376]!	; 0x178

00010ec4 <textdomain@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #90112	; 0x16000
   10ecc:	ldr	pc, [ip, #368]!	; 0x170

00010ed0 <iswprint@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #90112	; 0x16000
   10ed8:	ldr	pc, [ip, #360]!	; 0x168

00010edc <fwrite@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #90112	; 0x16000
   10ee4:	ldr	pc, [ip, #352]!	; 0x160

00010ee8 <lseek64@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #90112	; 0x16000
   10ef0:	ldr	pc, [ip, #344]!	; 0x158

00010ef4 <__ctype_get_mb_cur_max@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #90112	; 0x16000
   10efc:	ldr	pc, [ip, #336]!	; 0x150

00010f00 <__fpending@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #90112	; 0x16000
   10f08:	ldr	pc, [ip, #328]!	; 0x148

00010f0c <mbrtowc@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #90112	; 0x16000
   10f14:	ldr	pc, [ip, #320]!	; 0x140

00010f18 <error@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #90112	; 0x16000
   10f20:	ldr	pc, [ip, #312]!	; 0x138

00010f24 <open64@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #90112	; 0x16000
   10f2c:	ldr	pc, [ip, #304]!	; 0x130

00010f30 <getenv@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #90112	; 0x16000
   10f38:	ldr	pc, [ip, #296]!	; 0x128

00010f3c <puts@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #90112	; 0x16000
   10f44:	ldr	pc, [ip, #288]!	; 0x120

00010f48 <malloc@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #90112	; 0x16000
   10f50:	ldr	pc, [ip, #280]!	; 0x118

00010f54 <__libc_start_main@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #90112	; 0x16000
   10f5c:	ldr	pc, [ip, #272]!	; 0x110

00010f60 <__freading@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #90112	; 0x16000
   10f68:	ldr	pc, [ip, #264]!	; 0x108

00010f6c <__gmon_start__@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #90112	; 0x16000
   10f74:	ldr	pc, [ip, #256]!	; 0x100

00010f78 <getopt_long@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #90112	; 0x16000
   10f80:	ldr	pc, [ip, #248]!	; 0xf8

00010f84 <__ctype_b_loc@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #90112	; 0x16000
   10f8c:	ldr	pc, [ip, #240]!	; 0xf0

00010f90 <exit@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #90112	; 0x16000
   10f98:	ldr	pc, [ip, #232]!	; 0xe8

00010f9c <bcmp@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #90112	; 0x16000
   10fa4:	ldr	pc, [ip, #224]!	; 0xe0

00010fa8 <strlen@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #90112	; 0x16000
   10fb0:	ldr	pc, [ip, #216]!	; 0xd8

00010fb4 <__errno_location@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #90112	; 0x16000
   10fbc:	ldr	pc, [ip, #208]!	; 0xd0

00010fc0 <__cxa_atexit@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #90112	; 0x16000
   10fc8:	ldr	pc, [ip, #200]!	; 0xc8

00010fcc <mkdir@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #90112	; 0x16000
   10fd4:	ldr	pc, [ip, #192]!	; 0xc0

00010fd8 <memset@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #90112	; 0x16000
   10fe0:	ldr	pc, [ip, #184]!	; 0xb8

00010fe4 <__printf_chk@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #90112	; 0x16000
   10fec:	ldr	pc, [ip, #176]!	; 0xb0

00010ff0 <fileno@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #90112	; 0x16000
   10ff8:	ldr	pc, [ip, #168]!	; 0xa8

00010ffc <__fprintf_chk@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #90112	; 0x16000
   11004:	ldr	pc, [ip, #160]!	; 0xa0

00011008 <fclose@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #90112	; 0x16000
   11010:	ldr	pc, [ip, #152]!	; 0x98

00011014 <fseeko64@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #90112	; 0x16000
   1101c:	ldr	pc, [ip, #144]!	; 0x90

00011020 <setlocale@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #90112	; 0x16000
   11028:	ldr	pc, [ip, #136]!	; 0x88

0001102c <strrchr@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #90112	; 0x16000
   11034:	ldr	pc, [ip, #128]!	; 0x80

00011038 <nl_langinfo@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #90112	; 0x16000
   11040:	ldr	pc, [ip, #120]!	; 0x78

00011044 <remove@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #90112	; 0x16000
   1104c:	ldr	pc, [ip, #112]!	; 0x70

00011050 <bindtextdomain@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #90112	; 0x16000
   11058:	ldr	pc, [ip, #104]!	; 0x68

0001105c <getrandom@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #90112	; 0x16000
   11064:	ldr	pc, [ip, #96]!	; 0x60

00011068 <strncmp@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #90112	; 0x16000
   11070:	ldr	pc, [ip, #88]!	; 0x58

00011074 <abort@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #90112	; 0x16000
   1107c:	ldr	pc, [ip, #80]!	; 0x50

00011080 <close@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #90112	; 0x16000
   11088:	ldr	pc, [ip, #72]!	; 0x48

0001108c <__lxstat64@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #90112	; 0x16000
   11094:	ldr	pc, [ip, #64]!	; 0x40

00011098 <strspn@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #90112	; 0x16000
   110a0:	ldr	pc, [ip, #56]!	; 0x38

000110a4 <__mempcpy_chk@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #90112	; 0x16000
   110ac:	ldr	pc, [ip, #48]!	; 0x30

Disassembly of section .text:

000110b0 <.text>:
   110b0:	mov	fp, #0
   110b4:	mov	lr, #0
   110b8:	pop	{r1}		; (ldr r1, [sp], #4)
   110bc:	mov	r2, sp
   110c0:	push	{r2}		; (str r2, [sp, #-4]!)
   110c4:	push	{r0}		; (str r0, [sp, #-4]!)
   110c8:	ldr	ip, [pc, #16]	; 110e0 <__mempcpy_chk@plt+0x3c>
   110cc:	push	{ip}		; (str ip, [sp, #-4]!)
   110d0:	ldr	r0, [pc, #12]	; 110e4 <__mempcpy_chk@plt+0x40>
   110d4:	ldr	r3, [pc, #12]	; 110e8 <__mempcpy_chk@plt+0x44>
   110d8:	bl	10f54 <__libc_start_main@plt>
   110dc:	bl	11074 <abort@plt>
   110e0:	andeq	r5, r1, ip, lsl #11
   110e4:	andeq	r1, r1, r0, lsl #9
   110e8:	andeq	r5, r1, ip, lsr #10
   110ec:	ldr	r3, [pc, #20]	; 11108 <__mempcpy_chk@plt+0x64>
   110f0:	ldr	r2, [pc, #20]	; 1110c <__mempcpy_chk@plt+0x68>
   110f4:	add	r3, pc, r3
   110f8:	ldr	r2, [r3, r2]
   110fc:	cmp	r2, #0
   11100:	bxeq	lr
   11104:	b	10f6c <__gmon_start__@plt>
   11108:	andeq	r5, r1, r4, lsl #30
   1110c:	andeq	r0, r0, r0, ror #1
   11110:	ldr	r0, [pc, #24]	; 11130 <__mempcpy_chk@plt+0x8c>
   11114:	ldr	r3, [pc, #24]	; 11134 <__mempcpy_chk@plt+0x90>
   11118:	cmp	r3, r0
   1111c:	bxeq	lr
   11120:	ldr	r3, [pc, #16]	; 11138 <__mempcpy_chk@plt+0x94>
   11124:	cmp	r3, #0
   11128:	bxeq	lr
   1112c:	bx	r3
   11130:	andeq	r7, r2, r8, lsr r1
   11134:	andeq	r7, r2, r8, lsr r1
   11138:	andeq	r0, r0, r0
   1113c:	ldr	r0, [pc, #36]	; 11168 <__mempcpy_chk@plt+0xc4>
   11140:	ldr	r1, [pc, #36]	; 1116c <__mempcpy_chk@plt+0xc8>
   11144:	sub	r1, r1, r0
   11148:	asr	r1, r1, #2
   1114c:	add	r1, r1, r1, lsr #31
   11150:	asrs	r1, r1, #1
   11154:	bxeq	lr
   11158:	ldr	r3, [pc, #16]	; 11170 <__mempcpy_chk@plt+0xcc>
   1115c:	cmp	r3, #0
   11160:	bxeq	lr
   11164:	bx	r3
   11168:	andeq	r7, r2, r8, lsr r1
   1116c:	andeq	r7, r2, r8, lsr r1
   11170:	andeq	r0, r0, r0
   11174:	push	{r4, lr}
   11178:	ldr	r4, [pc, #24]	; 11198 <__mempcpy_chk@plt+0xf4>
   1117c:	ldrb	r3, [r4]
   11180:	cmp	r3, #0
   11184:	popne	{r4, pc}
   11188:	bl	11110 <__mempcpy_chk@plt+0x6c>
   1118c:	mov	r3, #1
   11190:	strb	r3, [r4]
   11194:	pop	{r4, pc}
   11198:	andeq	r7, r2, r4, asr r1
   1119c:	b	1113c <__mempcpy_chk@plt+0x98>
   111a0:	push	{fp, lr}
   111a4:	mov	fp, sp
   111a8:	sub	sp, sp, #56	; 0x38
   111ac:	mov	r4, r0
   111b0:	cmp	r0, #0
   111b4:	bne	1143c <__mempcpy_chk@plt+0x398>
   111b8:	movw	r1, #21979	; 0x55db
   111bc:	mov	r0, #0
   111c0:	mov	r2, #5
   111c4:	movt	r1, #1
   111c8:	bl	10eac <dcgettext@plt>
   111cc:	mov	r1, r0
   111d0:	movw	r0, #29024	; 0x7160
   111d4:	movt	r0, #2
   111d8:	ldr	r2, [r0]
   111dc:	mov	r0, #1
   111e0:	bl	10fe4 <__printf_chk@plt>
   111e4:	movw	r1, #22013	; 0x55fd
   111e8:	mov	r0, #0
   111ec:	mov	r2, #5
   111f0:	movt	r1, #1
   111f4:	bl	10eac <dcgettext@plt>
   111f8:	movw	r7, #29004	; 0x714c
   111fc:	movt	r7, #2
   11200:	ldr	r1, [r7]
   11204:	bl	10e40 <fputs_unlocked@plt>
   11208:	movw	r1, #22224	; 0x56d0
   1120c:	mov	r0, #0
   11210:	mov	r2, #5
   11214:	movt	r1, #1
   11218:	bl	10eac <dcgettext@plt>
   1121c:	ldr	r1, [r7]
   11220:	bl	10e40 <fputs_unlocked@plt>
   11224:	ldr	r1, [r7]
   11228:	movw	r0, #24082	; 0x5e12
   1122c:	movt	r0, #1
   11230:	bl	10e40 <fputs_unlocked@plt>
   11234:	movw	r1, #22298	; 0x571a
   11238:	mov	r0, #0
   1123c:	mov	r2, #5
   11240:	movt	r1, #1
   11244:	bl	10eac <dcgettext@plt>
   11248:	ldr	r1, [r7]
   1124c:	bl	10e40 <fputs_unlocked@plt>
   11250:	movw	r1, #22502	; 0x57e6
   11254:	mov	r0, #0
   11258:	mov	r2, #5
   1125c:	movt	r1, #1
   11260:	bl	10eac <dcgettext@plt>
   11264:	ldr	r1, [r7]
   11268:	bl	10e40 <fputs_unlocked@plt>
   1126c:	movw	r1, #22658	; 0x5882
   11270:	mov	r0, #0
   11274:	mov	r2, #5
   11278:	movt	r1, #1
   1127c:	bl	10eac <dcgettext@plt>
   11280:	ldr	r1, [r7]
   11284:	bl	10e40 <fputs_unlocked@plt>
   11288:	movw	r1, #23021	; 0x59ed
   1128c:	mov	r0, #0
   11290:	mov	r2, #5
   11294:	movt	r1, #1
   11298:	bl	10eac <dcgettext@plt>
   1129c:	ldr	r1, [r7]
   112a0:	bl	10e40 <fputs_unlocked@plt>
   112a4:	movw	r1, #23246	; 0x5ace
   112a8:	mov	r0, #0
   112ac:	mov	r2, #5
   112b0:	movt	r1, #1
   112b4:	bl	10eac <dcgettext@plt>
   112b8:	ldr	r1, [r7]
   112bc:	bl	10e40 <fputs_unlocked@plt>
   112c0:	movw	r1, #23291	; 0x5afb
   112c4:	mov	r0, #0
   112c8:	mov	r2, #5
   112cc:	movt	r1, #1
   112d0:	bl	10eac <dcgettext@plt>
   112d4:	ldr	r1, [r7]
   112d8:	bl	10e40 <fputs_unlocked@plt>
   112dc:	movw	r0, #24280	; 0x5ed8
   112e0:	mov	r2, #48	; 0x30
   112e4:	mov	r6, sp
   112e8:	movw	r5, #23345	; 0x5b31
   112ec:	movt	r0, #1
   112f0:	movt	r5, #1
   112f4:	add	r1, r0, #32
   112f8:	add	r3, r0, #16
   112fc:	vld1.64	{d18-d19}, [r0], r2
   11300:	vld1.64	{d16-d17}, [r1]
   11304:	vld1.64	{d20-d21}, [r3]
   11308:	vldr	d22, [r0]
   1130c:	add	r1, r6, #32
   11310:	add	r0, r6, #16
   11314:	vst1.64	{d16-d17}, [r1]
   11318:	movw	r1, #23773	; 0x5cdd
   1131c:	vst1.64	{d20-d21}, [r0]
   11320:	mov	r0, r6
   11324:	movt	r1, #1
   11328:	vst1.64	{d18-d19}, [r0], r2
   1132c:	vstr	d22, [r0]
   11330:	mov	r0, r5
   11334:	bl	10e58 <strcmp@plt>
   11338:	cmp	r0, #0
   1133c:	ldrne	r1, [r6, #8]!
   11340:	cmpne	r1, #0
   11344:	bne	11330 <__mempcpy_chk@plt+0x28c>
   11348:	movw	r1, #23868	; 0x5d3c
   1134c:	ldr	r6, [r6, #4]
   11350:	mov	r0, #0
   11354:	mov	r2, #5
   11358:	movt	r1, #1
   1135c:	bl	10eac <dcgettext@plt>
   11360:	movw	r2, #23384	; 0x5b58
   11364:	movw	r3, #23891	; 0x5d53
   11368:	mov	r1, r0
   1136c:	mov	r0, #1
   11370:	movt	r2, #1
   11374:	movt	r3, #1
   11378:	bl	10fe4 <__printf_chk@plt>
   1137c:	cmp	r6, #0
   11380:	mov	r0, #5
   11384:	mov	r1, #0
   11388:	moveq	r6, r5
   1138c:	bl	11020 <setlocale@plt>
   11390:	cmp	r0, #0
   11394:	beq	113cc <__mempcpy_chk@plt+0x328>
   11398:	movw	r1, #23931	; 0x5d7b
   1139c:	mov	r2, #3
   113a0:	movt	r1, #1
   113a4:	bl	11068 <strncmp@plt>
   113a8:	cmp	r0, #0
   113ac:	beq	113cc <__mempcpy_chk@plt+0x328>
   113b0:	movw	r1, #23935	; 0x5d7f
   113b4:	mov	r0, #0
   113b8:	mov	r2, #5
   113bc:	movt	r1, #1
   113c0:	bl	10eac <dcgettext@plt>
   113c4:	ldr	r1, [r7]
   113c8:	bl	10e40 <fputs_unlocked@plt>
   113cc:	movw	r1, #24006	; 0x5dc6
   113d0:	mov	r0, #0
   113d4:	mov	r2, #5
   113d8:	movt	r1, #1
   113dc:	bl	10eac <dcgettext@plt>
   113e0:	movw	r2, #23891	; 0x5d53
   113e4:	mov	r1, r0
   113e8:	mov	r0, #1
   113ec:	mov	r3, r5
   113f0:	movt	r2, #1
   113f4:	bl	10fe4 <__printf_chk@plt>
   113f8:	movw	r1, #24033	; 0x5de1
   113fc:	mov	r0, #0
   11400:	mov	r2, #5
   11404:	movt	r1, #1
   11408:	bl	10eac <dcgettext@plt>
   1140c:	mov	r1, r0
   11410:	movw	r0, #23801	; 0x5cf9
   11414:	movw	r3, #24083	; 0x5e13
   11418:	cmp	r6, r5
   1141c:	mov	r2, r6
   11420:	movt	r0, #1
   11424:	movt	r3, #1
   11428:	moveq	r3, r0
   1142c:	mov	r0, #1
   11430:	bl	10fe4 <__printf_chk@plt>
   11434:	mov	r0, r4
   11438:	bl	10f90 <exit@plt>
   1143c:	movw	r0, #29000	; 0x7148
   11440:	movw	r1, #21940	; 0x55b4
   11444:	mov	r2, #5
   11448:	movt	r0, #2
   1144c:	movt	r1, #1
   11450:	ldr	r5, [r0]
   11454:	mov	r0, #0
   11458:	bl	10eac <dcgettext@plt>
   1145c:	mov	r2, r0
   11460:	movw	r0, #29024	; 0x7160
   11464:	mov	r1, #1
   11468:	movt	r0, #2
   1146c:	ldr	r3, [r0]
   11470:	mov	r0, r5
   11474:	bl	10ffc <__fprintf_chk@plt>
   11478:	mov	r0, r4
   1147c:	bl	10f90 <exit@plt>
   11480:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11484:	add	fp, sp, #28
   11488:	sub	sp, sp, #36	; 0x24
   1148c:	mov	r5, r0
   11490:	ldr	r0, [r1]
   11494:	mov	r4, r1
   11498:	bl	120a0 <__mempcpy_chk@plt+0xffc>
   1149c:	movw	r1, #24083	; 0x5e13
   114a0:	mov	r0, #6
   114a4:	movt	r1, #1
   114a8:	bl	11020 <setlocale@plt>
   114ac:	movw	r6, #23388	; 0x5b5c
   114b0:	movw	r1, #23352	; 0x5b38
   114b4:	movt	r6, #1
   114b8:	movt	r1, #1
   114bc:	mov	r0, r6
   114c0:	bl	11050 <bindtextdomain@plt>
   114c4:	mov	r0, r6
   114c8:	bl	10ec4 <textdomain@plt>
   114cc:	movw	r0, #7028	; 0x1b74
   114d0:	movt	r0, #1
   114d4:	bl	15590 <__mempcpy_chk@plt+0x44ec>
   114d8:	mov	r0, #0
   114dc:	movw	r7, #23376	; 0x5b50
   114e0:	movw	r6, #24152	; 0x5e58
   114e4:	mov	r1, #0
   114e8:	mov	r9, #0
   114ec:	mov	r8, #0
   114f0:	str	r0, [sp, #24]
   114f4:	mov	r0, #0
   114f8:	movt	r7, #1
   114fc:	movt	r6, #1
   11500:	str	r1, [sp, #20]
   11504:	str	r0, [sp, #16]
   11508:	mov	r0, #0
   1150c:	str	r0, [sp, #28]
   11510:	mov	r0, #0
   11514:	str	r0, [sp, #32]
   11518:	mov	r0, #0
   1151c:	b	11534 <__mempcpy_chk@plt+0x490>
   11520:	mov	r0, #1
   11524:	str	r0, [sp, #16]
   11528:	mov	r0, #1
   1152c:	str	r0, [sp, #32]
   11530:	mov	r0, sl
   11534:	mov	sl, r0
   11538:	mov	r0, r5
   1153c:	mov	r1, r4
   11540:	mov	r2, r7
   11544:	mov	r3, r6
   11548:	str	r9, [sp]
   1154c:	bl	10f78 <getopt_long@plt>
   11550:	cmp	r0, #85	; 0x55
   11554:	ble	11634 <__mempcpy_chk@plt+0x590>
   11558:	sub	r1, r0, #86	; 0x56
   1155c:	cmp	r1, #31
   11560:	bhi	11610 <__mempcpy_chk@plt+0x56c>
   11564:	add	r2, pc, #4
   11568:	mov	r0, #1
   1156c:	ldr	pc, [r2, r1, lsl #2]
   11570:	andeq	r1, r1, r8, ror #20
   11574:	andeq	r1, r1, ip, asr #21
   11578:	andeq	r1, r1, ip, asr #21
   1157c:	andeq	r1, r1, ip, asr #21
   11580:	andeq	r1, r1, ip, asr #21
   11584:	andeq	r1, r1, ip, asr #21
   11588:	andeq	r1, r1, ip, asr #21
   1158c:	andeq	r1, r1, ip, asr #21
   11590:	andeq	r1, r1, ip, asr #21
   11594:	andeq	r1, r1, ip, asr #21
   11598:	andeq	r1, r1, ip, asr #21
   1159c:	andeq	r1, r1, ip, asr #21
   115a0:	andeq	r1, r1, ip, asr #21
   115a4:	andeq	r1, r1, ip, asr #21
   115a8:	strdeq	r1, [r1], -r0
   115ac:	andeq	r1, r1, ip, asr #21
   115b0:	andeq	r1, r1, ip, asr #21
   115b4:	andeq	r1, r1, ip, asr #21
   115b8:	andeq	r1, r1, ip, asr #21
   115bc:	andeq	r1, r1, ip, asr #21
   115c0:	andeq	r1, r1, ip, asr #21
   115c4:	andeq	r1, r1, ip, asr #21
   115c8:	andeq	r1, r1, ip, asr #21
   115cc:	andeq	r1, r1, ip, asr #21
   115d0:	andeq	r1, r1, ip, asr #21
   115d4:	andeq	r1, r1, ip, asr #21
   115d8:	strdeq	r1, [r1], -ip
   115dc:	andeq	r1, r1, r4, lsr r5
   115e0:	andeq	r1, r1, ip, asr #21
   115e4:	andeq	r1, r1, ip, asr #21
   115e8:	andeq	r1, r1, r0, lsr #10
   115ec:	andeq	r1, r1, r8, lsr #12
   115f0:	mov	r0, #1
   115f4:	str	r0, [sp, #24]
   115f8:	b	11530 <__mempcpy_chk@plt+0x48c>
   115fc:	movw	r0, #29008	; 0x7150
   11600:	movt	r0, #2
   11604:	ldr	r0, [r0]
   11608:	str	r0, [sp, #20]
   1160c:	b	11528 <__mempcpy_chk@plt+0x484>
   11610:	cmp	r0, #256	; 0x100
   11614:	bne	11acc <__mempcpy_chk@plt+0xa28>
   11618:	movw	r0, #29008	; 0x7150
   1161c:	movt	r0, #2
   11620:	ldr	r8, [r0]
   11624:	b	11530 <__mempcpy_chk@plt+0x48c>
   11628:	mov	r0, #1
   1162c:	str	r0, [sp, #28]
   11630:	b	11530 <__mempcpy_chk@plt+0x48c>
   11634:	cmn	r0, #1
   11638:	bne	11a60 <__mempcpy_chk@plt+0x9bc>
   1163c:	movw	r0, #28992	; 0x7140
   11640:	movt	r0, #2
   11644:	ldr	r0, [r0]
   11648:	sub	r1, r5, r0
   1164c:	cmp	r1, #2
   11650:	bcs	11b14 <__mempcpy_chk@plt+0xa70>
   11654:	cmp	r1, #0
   11658:	beq	11798 <__mempcpy_chk@plt+0x6f4>
   1165c:	ldr	r6, [r4, r0, lsl #2]
   11660:	cmp	r8, #0
   11664:	beq	117b0 <__mempcpy_chk@plt+0x70c>
   11668:	mov	r0, r6
   1166c:	bl	10fa8 <strlen@plt>
   11670:	cmp	r0, #0
   11674:	beq	11b08 <__mempcpy_chk@plt+0xa64>
   11678:	mov	r7, r0
   1167c:	add	r0, r0, r6
   11680:	ldrb	r0, [r0, #-1]
   11684:	cmp	r0, #88	; 0x58
   11688:	bne	11b08 <__mempcpy_chk@plt+0xa64>
   1168c:	mov	r0, r8
   11690:	bl	10fa8 <strlen@plt>
   11694:	add	r5, r0, #1
   11698:	mov	r9, r0
   1169c:	add	r0, r5, r7
   116a0:	bl	14bac <__mempcpy_chk@plt+0x3b08>
   116a4:	mov	r1, r6
   116a8:	mov	r2, r7
   116ac:	mov	r4, r0
   116b0:	bl	10e94 <memcpy@plt>
   116b4:	add	r6, r4, r7
   116b8:	mov	r1, r8
   116bc:	mov	r2, r5
   116c0:	mov	r0, r6
   116c4:	bl	10e94 <memcpy@plt>
   116c8:	cmp	r9, #0
   116cc:	beq	116e0 <__mempcpy_chk@plt+0x63c>
   116d0:	mov	r0, r6
   116d4:	bl	11bb8 <__mempcpy_chk@plt+0xb14>
   116d8:	cmp	r0, r6
   116dc:	bne	11b40 <__mempcpy_chk@plt+0xa9c>
   116e0:	subs	r0, r6, r4
   116e4:	beq	11ad4 <__mempcpy_chk@plt+0xa30>
   116e8:	sub	r0, r4, r6
   116ec:	sub	r1, r6, #1
   116f0:	mov	r5, #0
   116f4:	ldrb	r2, [r1, -r5]
   116f8:	cmp	r2, #88	; 0x58
   116fc:	bne	1170c <__mempcpy_chk@plt+0x668>
   11700:	add	r5, r5, #1
   11704:	adds	r2, r0, r5
   11708:	bne	116f4 <__mempcpy_chk@plt+0x650>
   1170c:	cmp	r5, #2
   11710:	bls	11ad4 <__mempcpy_chk@plt+0xa30>
   11714:	ldr	r0, [sp, #32]
   11718:	tst	r0, #1
   1171c:	beq	11790 <__mempcpy_chk@plt+0x6ec>
   11720:	ldr	r0, [sp, #16]
   11724:	tst	r0, #1
   11728:	beq	117d4 <__mempcpy_chk@plt+0x730>
   1172c:	movw	r0, #23557	; 0x5c05
   11730:	movt	r0, #1
   11734:	bl	10f30 <getenv@plt>
   11738:	ldr	r1, [sp, #20]
   1173c:	cmp	r0, #0
   11740:	beq	11754 <__mempcpy_chk@plt+0x6b0>
   11744:	mov	r6, r0
   11748:	ldrb	r0, [r0]
   1174c:	cmp	r0, #0
   11750:	bne	11774 <__mempcpy_chk@plt+0x6d0>
   11754:	cmp	r1, #0
   11758:	beq	1176c <__mempcpy_chk@plt+0x6c8>
   1175c:	ldrb	r0, [r1]
   11760:	mov	r6, r1
   11764:	cmp	r0, #0
   11768:	bne	11774 <__mempcpy_chk@plt+0x6d0>
   1176c:	movw	r6, #23564	; 0x5c0c
   11770:	movt	r6, #1
   11774:	mov	r0, r4
   11778:	bl	11bb8 <__mempcpy_chk@plt+0xb14>
   1177c:	cmp	r0, r4
   11780:	beq	11820 <__mempcpy_chk@plt+0x77c>
   11784:	movw	r1, #23569	; 0x5c11
   11788:	movt	r1, #1
   1178c:	b	11adc <__mempcpy_chk@plt+0xa38>
   11790:	mov	r6, r4
   11794:	b	1183c <__mempcpy_chk@plt+0x798>
   11798:	movw	r6, #24135	; 0x5e47
   1179c:	mov	r0, #1
   117a0:	movt	r6, #1
   117a4:	str	r0, [sp, #32]
   117a8:	cmp	r8, #0
   117ac:	bne	11668 <__mempcpy_chk@plt+0x5c4>
   117b0:	mov	r0, r6
   117b4:	bl	15080 <__mempcpy_chk@plt+0x3fdc>
   117b8:	mov	r1, #88	; 0x58
   117bc:	mov	r4, r0
   117c0:	bl	1102c <strrchr@plt>
   117c4:	cmp	r0, #0
   117c8:	beq	11a1c <__mempcpy_chk@plt+0x978>
   117cc:	add	r6, r0, #1
   117d0:	b	11a28 <__mempcpy_chk@plt+0x984>
   117d4:	ldr	r6, [sp, #20]
   117d8:	cmp	r6, #0
   117dc:	beq	117ec <__mempcpy_chk@plt+0x748>
   117e0:	ldrb	r0, [r6]
   117e4:	cmp	r0, #0
   117e8:	bne	11814 <__mempcpy_chk@plt+0x770>
   117ec:	movw	r0, #23557	; 0x5c05
   117f0:	movt	r0, #1
   117f4:	bl	10f30 <getenv@plt>
   117f8:	cmp	r0, #0
   117fc:	beq	11a40 <__mempcpy_chk@plt+0x99c>
   11800:	ldrb	r1, [r0]
   11804:	movw	r6, #23564	; 0x5c0c
   11808:	movt	r6, #1
   1180c:	cmp	r1, #0
   11810:	movne	r6, r0
   11814:	ldrb	r0, [r4]
   11818:	cmp	r0, #47	; 0x2f
   1181c:	beq	11a54 <__mempcpy_chk@plt+0x9b0>
   11820:	mov	r0, r6
   11824:	mov	r1, r4
   11828:	mov	r2, #0
   1182c:	bl	11ed8 <__mempcpy_chk@plt+0xe34>
   11830:	mov	r6, r0
   11834:	mov	r0, r4
   11838:	bl	11fd0 <__mempcpy_chk@plt+0xf2c>
   1183c:	mov	r0, r6
   11840:	bl	15080 <__mempcpy_chk@plt+0x3fdc>
   11844:	mov	r4, r0
   11848:	ldr	r0, [sp, #24]
   1184c:	tst	r0, #1
   11850:	beq	118d8 <__mempcpy_chk@plt+0x834>
   11854:	str	r5, [sp]
   11858:	ldr	r5, [sp, #28]
   1185c:	mov	r3, #1
   11860:	mov	r0, r4
   11864:	mov	r1, r9
   11868:	mov	r2, #0
   1186c:	mov	r7, #1
   11870:	tst	r5, #1
   11874:	movwne	r3, #2
   11878:	bl	1407c <__mempcpy_chk@plt+0x2fd8>
   1187c:	clz	r0, r0
   11880:	lsr	r0, r0, #5
   11884:	orr	r1, sl, r0
   11888:	tst	r1, #1
   1188c:	bne	11948 <__mempcpy_chk@plt+0x8a4>
   11890:	bl	10fb4 <__errno_location@plt>
   11894:	movw	r1, #23680	; 0x5c80
   11898:	ldr	r4, [r0]
   1189c:	mov	r0, #0
   118a0:	mov	r2, #5
   118a4:	movt	r1, #1
   118a8:	bl	10eac <dcgettext@plt>
   118ac:	mov	r5, r0
   118b0:	mov	r0, r6
   118b4:	bl	14064 <__mempcpy_chk@plt+0x2fc0>
   118b8:	mov	r3, r0
   118bc:	mov	r0, #0
   118c0:	mov	r1, r4
   118c4:	mov	r2, r5
   118c8:	bl	10f18 <error@plt>
   118cc:	mov	r0, r7
   118d0:	sub	sp, fp, #28
   118d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118d8:	str	r5, [sp]
   118dc:	ldr	r5, [sp, #28]
   118e0:	mov	r0, r4
   118e4:	mov	r1, r9
   118e8:	mov	r2, #0
   118ec:	ands	r3, r5, #1
   118f0:	movwne	r3, #2
   118f4:	bl	1407c <__mempcpy_chk@plt+0x2fd8>
   118f8:	cmp	r0, #0
   118fc:	bmi	11920 <__mempcpy_chk@plt+0x87c>
   11900:	tst	r5, #1
   11904:	beq	11930 <__mempcpy_chk@plt+0x88c>
   11908:	mov	r0, r4
   1190c:	bl	10f3c <puts@plt>
   11910:	mov	r7, #0
   11914:	mov	r0, r7
   11918:	sub	sp, fp, #28
   1191c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11920:	mov	r7, #1
   11924:	tst	sl, #1
   11928:	beq	119d0 <__mempcpy_chk@plt+0x92c>
   1192c:	b	11a10 <__mempcpy_chk@plt+0x96c>
   11930:	bl	11080 <close@plt>
   11934:	clz	r0, r0
   11938:	lsr	r0, r0, #5
   1193c:	orr	r1, sl, r0
   11940:	tst	r1, #1
   11944:	beq	119d0 <__mempcpy_chk@plt+0x92c>
   11948:	mov	r7, #1
   1194c:	cmp	r0, #0
   11950:	beq	11a10 <__mempcpy_chk@plt+0x96c>
   11954:	mov	r0, r4
   11958:	bl	10f3c <puts@plt>
   1195c:	mov	r7, #0
   11960:	tst	r5, #1
   11964:	bne	11a10 <__mempcpy_chk@plt+0x96c>
   11968:	movw	r0, #29013	; 0x7155
   1196c:	mov	r1, #1
   11970:	movt	r0, #2
   11974:	strb	r1, [r0]
   11978:	movw	r0, #29004	; 0x714c
   1197c:	movt	r0, #2
   11980:	ldr	r0, [r0]
   11984:	bl	11c50 <__mempcpy_chk@plt+0xbac>
   11988:	cmp	r0, #0
   1198c:	beq	11a10 <__mempcpy_chk@plt+0x96c>
   11990:	bl	10fb4 <__errno_location@plt>
   11994:	ldr	r5, [r0]
   11998:	mov	r0, r4
   1199c:	bl	11044 <remove@plt>
   119a0:	tst	sl, #1
   119a4:	bne	11a0c <__mempcpy_chk@plt+0x968>
   119a8:	movw	r1, #23761	; 0x5cd1
   119ac:	mov	r0, #0
   119b0:	mov	r2, #5
   119b4:	movt	r1, #1
   119b8:	bl	10eac <dcgettext@plt>
   119bc:	mov	r2, r0
   119c0:	mov	r0, #0
   119c4:	mov	r1, r5
   119c8:	bl	10f18 <error@plt>
   119cc:	b	11a0c <__mempcpy_chk@plt+0x968>
   119d0:	bl	10fb4 <__errno_location@plt>
   119d4:	movw	r1, #23723	; 0x5cab
   119d8:	ldr	r4, [r0]
   119dc:	mov	r0, #0
   119e0:	mov	r2, #5
   119e4:	movt	r1, #1
   119e8:	bl	10eac <dcgettext@plt>
   119ec:	mov	r5, r0
   119f0:	mov	r0, r6
   119f4:	bl	14064 <__mempcpy_chk@plt+0x2fc0>
   119f8:	mov	r3, r0
   119fc:	mov	r0, #0
   11a00:	mov	r1, r4
   11a04:	mov	r2, r5
   11a08:	bl	10f18 <error@plt>
   11a0c:	mov	r7, #1
   11a10:	mov	r0, r7
   11a14:	sub	sp, fp, #28
   11a18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a1c:	mov	r0, r4
   11a20:	bl	10fa8 <strlen@plt>
   11a24:	add	r6, r4, r0
   11a28:	mov	r0, r6
   11a2c:	bl	10fa8 <strlen@plt>
   11a30:	mov	r9, r0
   11a34:	cmp	r9, #0
   11a38:	bne	116d0 <__mempcpy_chk@plt+0x62c>
   11a3c:	b	116e0 <__mempcpy_chk@plt+0x63c>
   11a40:	movw	r6, #23564	; 0x5c0c
   11a44:	movt	r6, #1
   11a48:	ldrb	r0, [r4]
   11a4c:	cmp	r0, #47	; 0x2f
   11a50:	bne	11820 <__mempcpy_chk@plt+0x77c>
   11a54:	movw	r1, #23620	; 0x5c44
   11a58:	movt	r1, #1
   11a5c:	b	11adc <__mempcpy_chk@plt+0xa38>
   11a60:	cmn	r0, #3
   11a64:	bne	11abc <__mempcpy_chk@plt+0xa18>
   11a68:	movw	r0, #28912	; 0x70f0
   11a6c:	movw	r2, #23411	; 0x5b73
   11a70:	mov	r1, #0
   11a74:	movw	r7, #23398	; 0x5b66
   11a78:	movt	r0, #2
   11a7c:	movt	r2, #1
   11a80:	str	r1, [sp, #8]
   11a84:	movw	r1, #23345	; 0x5b31
   11a88:	movt	r7, #1
   11a8c:	movt	r1, #1
   11a90:	ldr	r3, [r0]
   11a94:	movw	r0, #29004	; 0x714c
   11a98:	str	r2, [sp, #4]
   11a9c:	movw	r2, #23384	; 0x5b58
   11aa0:	str	r7, [sp]
   11aa4:	movt	r0, #2
   11aa8:	movt	r2, #1
   11aac:	ldr	r0, [r0]
   11ab0:	bl	14948 <__mempcpy_chk@plt+0x38a4>
   11ab4:	mov	r0, #0
   11ab8:	bl	10f90 <exit@plt>
   11abc:	cmn	r0, #2
   11ac0:	bne	11acc <__mempcpy_chk@plt+0xa28>
   11ac4:	mov	r0, #0
   11ac8:	bl	111a0 <__mempcpy_chk@plt+0xfc>
   11acc:	mov	r0, #1
   11ad0:	bl	111a0 <__mempcpy_chk@plt+0xfc>
   11ad4:	movw	r1, #23530	; 0x5bea
   11ad8:	movt	r1, #1
   11adc:	mov	r0, #0
   11ae0:	mov	r2, #5
   11ae4:	bl	10eac <dcgettext@plt>
   11ae8:	mov	r5, r0
   11aec:	mov	r0, r4
   11af0:	bl	14064 <__mempcpy_chk@plt+0x2fc0>
   11af4:	mov	r3, r0
   11af8:	mov	r0, #1
   11afc:	mov	r1, #0
   11b00:	mov	r2, r5
   11b04:	bl	10f18 <error@plt>
   11b08:	movw	r1, #23441	; 0x5b91
   11b0c:	movt	r1, #1
   11b10:	b	11b48 <__mempcpy_chk@plt+0xaa4>
   11b14:	movw	r1, #23422	; 0x5b7e
   11b18:	mov	r0, #0
   11b1c:	mov	r2, #5
   11b20:	movt	r1, #1
   11b24:	bl	10eac <dcgettext@plt>
   11b28:	mov	r2, r0
   11b2c:	mov	r0, #0
   11b30:	mov	r1, #0
   11b34:	bl	10f18 <error@plt>
   11b38:	mov	r0, #1
   11b3c:	bl	111a0 <__mempcpy_chk@plt+0xfc>
   11b40:	movw	r1, #23482	; 0x5bba
   11b44:	movt	r1, #1
   11b48:	mov	r0, #0
   11b4c:	mov	r2, #5
   11b50:	bl	10eac <dcgettext@plt>
   11b54:	mov	r4, r0
   11b58:	mov	r0, r6
   11b5c:	bl	14064 <__mempcpy_chk@plt+0x2fc0>
   11b60:	mov	r3, r0
   11b64:	mov	r0, #1
   11b68:	mov	r1, #0
   11b6c:	mov	r2, r4
   11b70:	bl	10f18 <error@plt>
   11b74:	push	{fp, lr}
   11b78:	mov	fp, sp
   11b7c:	movw	r0, #29013	; 0x7155
   11b80:	movt	r0, #2
   11b84:	ldrb	r0, [r0]
   11b88:	cmp	r0, #0
   11b8c:	beq	11bb0 <__mempcpy_chk@plt+0xb0c>
   11b90:	movw	r0, #29000	; 0x7148
   11b94:	movt	r0, #2
   11b98:	ldr	r0, [r0]
   11b9c:	bl	11c50 <__mempcpy_chk@plt+0xbac>
   11ba0:	cmp	r0, #0
   11ba4:	popeq	{fp, pc}
   11ba8:	mov	r0, #1
   11bac:	bl	10e88 <_exit@plt>
   11bb0:	pop	{fp, lr}
   11bb4:	b	11cf4 <__mempcpy_chk@plt+0xc50>
   11bb8:	sub	r0, r0, #1
   11bbc:	ldrb	r3, [r0, #1]!
   11bc0:	cmp	r3, #47	; 0x2f
   11bc4:	beq	11bbc <__mempcpy_chk@plt+0xb18>
   11bc8:	mov	r2, #0
   11bcc:	mov	r1, r0
   11bd0:	uxtb	r3, r3
   11bd4:	cmp	r3, #47	; 0x2f
   11bd8:	bne	11bf0 <__mempcpy_chk@plt+0xb4c>
   11bdc:	ldrb	r3, [r1, #1]!
   11be0:	mov	r2, #1
   11be4:	uxtb	r3, r3
   11be8:	cmp	r3, #47	; 0x2f
   11bec:	beq	11bdc <__mempcpy_chk@plt+0xb38>
   11bf0:	cmp	r3, #0
   11bf4:	bxeq	lr
   11bf8:	tst	r2, #1
   11bfc:	mov	r2, #0
   11c00:	movne	r0, r1
   11c04:	ldrb	r3, [r1, #1]!
   11c08:	uxtb	r3, r3
   11c0c:	cmp	r3, #47	; 0x2f
   11c10:	bne	11bf0 <__mempcpy_chk@plt+0xb4c>
   11c14:	b	11bdc <__mempcpy_chk@plt+0xb38>
   11c18:	push	{r4, sl, fp, lr}
   11c1c:	add	fp, sp, #8
   11c20:	mov	r4, r0
   11c24:	bl	10fa8 <strlen@plt>
   11c28:	mov	r1, r0
   11c2c:	sub	r2, r4, #1
   11c30:	mov	r0, r1
   11c34:	cmp	r1, #2
   11c38:	bcc	11c4c <__mempcpy_chk@plt+0xba8>
   11c3c:	ldrb	r3, [r2, r0]
   11c40:	sub	r1, r0, #1
   11c44:	cmp	r3, #47	; 0x2f
   11c48:	beq	11c30 <__mempcpy_chk@plt+0xb8c>
   11c4c:	pop	{r4, sl, fp, pc}
   11c50:	push	{r4, r5, r6, sl, fp, lr}
   11c54:	add	fp, sp, #16
   11c58:	mov	r4, r0
   11c5c:	bl	10f00 <__fpending@plt>
   11c60:	ldr	r6, [r4]
   11c64:	mov	r5, r0
   11c68:	mov	r0, r4
   11c6c:	bl	11de0 <__mempcpy_chk@plt+0xd3c>
   11c70:	tst	r6, #32
   11c74:	bne	11cac <__mempcpy_chk@plt+0xc08>
   11c78:	cmp	r0, #0
   11c7c:	mov	r4, r0
   11c80:	mvnne	r4, #0
   11c84:	cmp	r5, #0
   11c88:	bne	11cb8 <__mempcpy_chk@plt+0xc14>
   11c8c:	cmp	r0, #0
   11c90:	beq	11cb8 <__mempcpy_chk@plt+0xc14>
   11c94:	bl	10fb4 <__errno_location@plt>
   11c98:	ldr	r0, [r0]
   11c9c:	subs	r4, r0, #9
   11ca0:	mvnne	r4, #0
   11ca4:	mov	r0, r4
   11ca8:	pop	{r4, r5, r6, sl, fp, pc}
   11cac:	mvn	r4, #0
   11cb0:	cmp	r0, #0
   11cb4:	beq	11cc0 <__mempcpy_chk@plt+0xc1c>
   11cb8:	mov	r0, r4
   11cbc:	pop	{r4, r5, r6, sl, fp, pc}
   11cc0:	bl	10fb4 <__errno_location@plt>
   11cc4:	mov	r1, #0
   11cc8:	str	r1, [r0]
   11ccc:	mov	r0, r4
   11cd0:	pop	{r4, r5, r6, sl, fp, pc}
   11cd4:	movw	r1, #29016	; 0x7158
   11cd8:	movt	r1, #2
   11cdc:	str	r0, [r1, #4]
   11ce0:	bx	lr
   11ce4:	movw	r1, #29016	; 0x7158
   11ce8:	movt	r1, #2
   11cec:	strb	r0, [r1]
   11cf0:	bx	lr
   11cf4:	push	{r4, r5, r6, sl, fp, lr}
   11cf8:	add	fp, sp, #16
   11cfc:	sub	sp, sp, #8
   11d00:	movw	r0, #29004	; 0x714c
   11d04:	movt	r0, #2
   11d08:	ldr	r0, [r0]
   11d0c:	bl	11c50 <__mempcpy_chk@plt+0xbac>
   11d10:	cmp	r0, #0
   11d14:	beq	11d3c <__mempcpy_chk@plt+0xc98>
   11d18:	movw	r5, #29016	; 0x7158
   11d1c:	movt	r5, #2
   11d20:	ldrb	r0, [r5]
   11d24:	cmp	r0, #0
   11d28:	beq	11d68 <__mempcpy_chk@plt+0xcc4>
   11d2c:	bl	10fb4 <__errno_location@plt>
   11d30:	ldr	r0, [r0]
   11d34:	cmp	r0, #32
   11d38:	bne	11d68 <__mempcpy_chk@plt+0xcc4>
   11d3c:	movw	r0, #29000	; 0x7148
   11d40:	movt	r0, #2
   11d44:	ldr	r0, [r0]
   11d48:	bl	11c50 <__mempcpy_chk@plt+0xbac>
   11d4c:	cmp	r0, #0
   11d50:	subeq	sp, fp, #16
   11d54:	popeq	{r4, r5, r6, sl, fp, pc}
   11d58:	movw	r0, #28916	; 0x70f4
   11d5c:	movt	r0, #2
   11d60:	ldr	r0, [r0]
   11d64:	bl	10e88 <_exit@plt>
   11d68:	movw	r1, #23761	; 0x5cd1
   11d6c:	mov	r0, #0
   11d70:	mov	r2, #5
   11d74:	movt	r1, #1
   11d78:	bl	10eac <dcgettext@plt>
   11d7c:	ldr	r6, [r5, #4]
   11d80:	mov	r4, r0
   11d84:	bl	10fb4 <__errno_location@plt>
   11d88:	ldr	r5, [r0]
   11d8c:	cmp	r6, #0
   11d90:	bne	11dac <__mempcpy_chk@plt+0xd08>
   11d94:	movw	r2, #24355	; 0x5f23
   11d98:	mov	r0, #0
   11d9c:	mov	r1, r5
   11da0:	mov	r3, r4
   11da4:	movt	r2, #1
   11da8:	b	11dcc <__mempcpy_chk@plt+0xd28>
   11dac:	mov	r0, r6
   11db0:	bl	13cdc <__mempcpy_chk@plt+0x2c38>
   11db4:	movw	r2, #24351	; 0x5f1f
   11db8:	mov	r3, r0
   11dbc:	str	r4, [sp]
   11dc0:	mov	r0, #0
   11dc4:	mov	r1, r5
   11dc8:	movt	r2, #1
   11dcc:	bl	10f18 <error@plt>
   11dd0:	movw	r0, #28916	; 0x70f4
   11dd4:	movt	r0, #2
   11dd8:	ldr	r0, [r0]
   11ddc:	bl	10e88 <_exit@plt>
   11de0:	push	{r4, r5, r6, sl, fp, lr}
   11de4:	add	fp, sp, #16
   11de8:	sub	sp, sp, #8
   11dec:	mov	r4, r0
   11df0:	bl	10ff0 <fileno@plt>
   11df4:	cmn	r0, #1
   11df8:	ble	11e6c <__mempcpy_chk@plt+0xdc8>
   11dfc:	mov	r0, r4
   11e00:	bl	10f60 <__freading@plt>
   11e04:	cmp	r0, #0
   11e08:	beq	11e34 <__mempcpy_chk@plt+0xd90>
   11e0c:	mov	r0, r4
   11e10:	bl	10ff0 <fileno@plt>
   11e14:	mov	r1, #1
   11e18:	mov	r2, #0
   11e1c:	mov	r3, #0
   11e20:	str	r1, [sp]
   11e24:	bl	10ee8 <lseek64@plt>
   11e28:	and	r0, r0, r1
   11e2c:	cmn	r0, #1
   11e30:	beq	11e6c <__mempcpy_chk@plt+0xdc8>
   11e34:	mov	r0, r4
   11e38:	bl	11e7c <__mempcpy_chk@plt+0xdd8>
   11e3c:	cmp	r0, #0
   11e40:	beq	11e6c <__mempcpy_chk@plt+0xdc8>
   11e44:	bl	10fb4 <__errno_location@plt>
   11e48:	ldr	r6, [r0]
   11e4c:	mov	r5, r0
   11e50:	mov	r0, r4
   11e54:	bl	11008 <fclose@plt>
   11e58:	cmp	r6, #0
   11e5c:	strne	r6, [r5]
   11e60:	mvnne	r0, #0
   11e64:	sub	sp, fp, #16
   11e68:	pop	{r4, r5, r6, sl, fp, pc}
   11e6c:	mov	r0, r4
   11e70:	sub	sp, fp, #16
   11e74:	pop	{r4, r5, r6, sl, fp, lr}
   11e78:	b	11008 <fclose@plt>
   11e7c:	push	{r4, sl, fp, lr}
   11e80:	add	fp, sp, #8
   11e84:	sub	sp, sp, #8
   11e88:	mov	r4, r0
   11e8c:	cmp	r0, #0
   11e90:	beq	11ec8 <__mempcpy_chk@plt+0xe24>
   11e94:	mov	r0, r4
   11e98:	bl	10f60 <__freading@plt>
   11e9c:	cmp	r0, #0
   11ea0:	beq	11ec8 <__mempcpy_chk@plt+0xe24>
   11ea4:	ldrb	r0, [r4, #1]
   11ea8:	tst	r0, #1
   11eac:	beq	11ec8 <__mempcpy_chk@plt+0xe24>
   11eb0:	mov	r0, #1
   11eb4:	mov	r2, #0
   11eb8:	mov	r3, #0
   11ebc:	str	r0, [sp]
   11ec0:	mov	r0, r4
   11ec4:	bl	11ff8 <__mempcpy_chk@plt+0xf54>
   11ec8:	mov	r0, r4
   11ecc:	sub	sp, fp, #8
   11ed0:	pop	{r4, sl, fp, lr}
   11ed4:	b	10e64 <fflush@plt>
   11ed8:	push	{fp, lr}
   11edc:	mov	fp, sp
   11ee0:	bl	11ef0 <__mempcpy_chk@plt+0xe4c>
   11ee4:	cmp	r0, #0
   11ee8:	popne	{fp, pc}
   11eec:	bl	150b8 <__mempcpy_chk@plt+0x4014>
   11ef0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ef4:	add	fp, sp, #28
   11ef8:	push	{r2}		; (str r2, [sp, #-4]!)
   11efc:	mov	sl, r1
   11f00:	mov	r7, r0
   11f04:	bl	11bb8 <__mempcpy_chk@plt+0xb14>
   11f08:	sub	r4, r0, r7
   11f0c:	bl	11c18 <__mempcpy_chk@plt+0xb74>
   11f10:	mov	r6, r0
   11f14:	add	r5, r4, r0
   11f18:	mov	r0, sl
   11f1c:	bl	10fa8 <strlen@plt>
   11f20:	mov	r9, r0
   11f24:	cmp	r6, #0
   11f28:	beq	11f50 <__mempcpy_chk@plt+0xeac>
   11f2c:	add	r0, r5, r7
   11f30:	mov	r4, #0
   11f34:	ldrb	r0, [r0, #-1]
   11f38:	cmp	r0, #47	; 0x2f
   11f3c:	beq	11f60 <__mempcpy_chk@plt+0xebc>
   11f40:	ldrb	r0, [sl]
   11f44:	subs	r4, r0, #47	; 0x2f
   11f48:	movwne	r4, #47	; 0x2f
   11f4c:	b	11f60 <__mempcpy_chk@plt+0xebc>
   11f50:	ldrb	r0, [sl]
   11f54:	mov	r4, #0
   11f58:	cmp	r0, #47	; 0x2f
   11f5c:	movweq	r4, #46	; 0x2e
   11f60:	uxtb	r8, r4
   11f64:	add	r0, r9, r5
   11f68:	cmp	r8, #0
   11f6c:	movwne	r8, #1
   11f70:	add	r0, r0, r8
   11f74:	add	r0, r0, #1
   11f78:	bl	15150 <__mempcpy_chk@plt+0x40ac>
   11f7c:	mov	r6, r0
   11f80:	cmp	r0, #0
   11f84:	beq	11fc4 <__mempcpy_chk@plt+0xf20>
   11f88:	mov	r0, r6
   11f8c:	mov	r1, r7
   11f90:	mov	r2, r5
   11f94:	mvn	r3, #0
   11f98:	bl	110a4 <__mempcpy_chk@plt>
   11f9c:	ldr	r1, [sp]
   11fa0:	strb	r4, [r0], r8
   11fa4:	mov	r2, r9
   11fa8:	mvn	r3, #0
   11fac:	cmp	r1, #0
   11fb0:	strne	r0, [r1]
   11fb4:	mov	r1, sl
   11fb8:	bl	110a4 <__mempcpy_chk@plt>
   11fbc:	mov	r1, #0
   11fc0:	strb	r1, [r0]
   11fc4:	mov	r0, r6
   11fc8:	sub	sp, fp, #28
   11fcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fd0:	push	{r4, r5, r6, sl, fp, lr}
   11fd4:	add	fp, sp, #16
   11fd8:	mov	r4, r0
   11fdc:	bl	10fb4 <__errno_location@plt>
   11fe0:	ldr	r6, [r0]
   11fe4:	mov	r5, r0
   11fe8:	mov	r0, r4
   11fec:	bl	10e70 <free@plt>
   11ff0:	str	r6, [r5]
   11ff4:	pop	{r4, r5, r6, sl, fp, pc}
   11ff8:	push	{r4, r5, r6, r7, fp, lr}
   11ffc:	add	fp, sp, #16
   12000:	sub	sp, sp, #8
   12004:	mov	r4, r0
   12008:	ldr	r0, [r0, #4]
   1200c:	mov	r5, r3
   12010:	mov	r6, r2
   12014:	ldr	r1, [r4, #8]
   12018:	cmp	r1, r0
   1201c:	bne	12038 <__mempcpy_chk@plt+0xf94>
   12020:	ldrd	r0, [r4, #16]
   12024:	cmp	r1, r0
   12028:	bne	12038 <__mempcpy_chk@plt+0xf94>
   1202c:	ldr	r0, [r4, #36]	; 0x24
   12030:	cmp	r0, #0
   12034:	beq	12050 <__mempcpy_chk@plt+0xfac>
   12038:	mov	r0, r4
   1203c:	mov	r2, r6
   12040:	mov	r3, r5
   12044:	sub	sp, fp, #16
   12048:	pop	{r4, r5, r6, r7, fp, lr}
   1204c:	b	11014 <fseeko64@plt>
   12050:	ldr	r7, [fp, #8]
   12054:	mov	r0, r4
   12058:	bl	10ff0 <fileno@plt>
   1205c:	mov	r2, r6
   12060:	mov	r3, r5
   12064:	str	r7, [sp]
   12068:	bl	10ee8 <lseek64@plt>
   1206c:	and	r2, r0, r1
   12070:	cmn	r2, #1
   12074:	beq	12094 <__mempcpy_chk@plt+0xff0>
   12078:	strd	r0, [r4, #80]	; 0x50
   1207c:	ldr	r0, [r4]
   12080:	bic	r0, r0, #16
   12084:	str	r0, [r4]
   12088:	mov	r0, #0
   1208c:	sub	sp, fp, #16
   12090:	pop	{r4, r5, r6, r7, fp, pc}
   12094:	mvn	r0, #0
   12098:	sub	sp, fp, #16
   1209c:	pop	{r4, r5, r6, r7, fp, pc}
   120a0:	push	{r4, r5, fp, lr}
   120a4:	add	fp, sp, #8
   120a8:	cmp	r0, #0
   120ac:	beq	12140 <__mempcpy_chk@plt+0x109c>
   120b0:	mov	r1, #47	; 0x2f
   120b4:	mov	r4, r0
   120b8:	bl	1102c <strrchr@plt>
   120bc:	cmp	r0, #0
   120c0:	mov	r5, r4
   120c4:	addne	r5, r0, #1
   120c8:	sub	r0, r5, r4
   120cc:	cmp	r0, #7
   120d0:	blt	12124 <__mempcpy_chk@plt+0x1080>
   120d4:	movw	r1, #24414	; 0x5f5e
   120d8:	sub	r0, r5, #7
   120dc:	mov	r2, #7
   120e0:	movt	r1, #1
   120e4:	bl	11068 <strncmp@plt>
   120e8:	cmp	r0, #0
   120ec:	bne	12124 <__mempcpy_chk@plt+0x1080>
   120f0:	movw	r1, #24422	; 0x5f66
   120f4:	mov	r0, r5
   120f8:	mov	r2, #3
   120fc:	movt	r1, #1
   12100:	bl	11068 <strncmp@plt>
   12104:	cmp	r0, #0
   12108:	beq	12114 <__mempcpy_chk@plt+0x1070>
   1210c:	mov	r4, r5
   12110:	b	12124 <__mempcpy_chk@plt+0x1080>
   12114:	movw	r0, #28984	; 0x7138
   12118:	add	r4, r5, #3
   1211c:	movt	r0, #2
   12120:	str	r4, [r0]
   12124:	movw	r0, #28988	; 0x713c
   12128:	movt	r0, #2
   1212c:	str	r4, [r0]
   12130:	movw	r0, #29024	; 0x7160
   12134:	movt	r0, #2
   12138:	str	r4, [r0]
   1213c:	pop	{r4, r5, fp, pc}
   12140:	movw	r0, #29000	; 0x7148
   12144:	mov	r1, #55	; 0x37
   12148:	mov	r2, #1
   1214c:	movt	r0, #2
   12150:	ldr	r3, [r0]
   12154:	movw	r0, #24358	; 0x5f26
   12158:	movt	r0, #1
   1215c:	bl	10edc <fwrite@plt>
   12160:	bl	11074 <abort@plt>
   12164:	push	{r4, r5, r6, sl, fp, lr}
   12168:	add	fp, sp, #16
   1216c:	mov	r4, r0
   12170:	movw	r0, #29032	; 0x7168
   12174:	movt	r0, #2
   12178:	cmp	r4, #0
   1217c:	moveq	r4, r0
   12180:	bl	10fb4 <__errno_location@plt>
   12184:	ldr	r6, [r0]
   12188:	mov	r5, r0
   1218c:	mov	r0, r4
   12190:	mov	r1, #48	; 0x30
   12194:	bl	14fdc <__mempcpy_chk@plt+0x3f38>
   12198:	str	r6, [r5]
   1219c:	pop	{r4, r5, r6, sl, fp, pc}
   121a0:	movw	r1, #29032	; 0x7168
   121a4:	cmp	r0, #0
   121a8:	movt	r1, #2
   121ac:	movne	r1, r0
   121b0:	ldr	r0, [r1]
   121b4:	bx	lr
   121b8:	movw	r2, #29032	; 0x7168
   121bc:	cmp	r0, #0
   121c0:	movt	r2, #2
   121c4:	movne	r2, r0
   121c8:	str	r1, [r2]
   121cc:	bx	lr
   121d0:	movw	r3, #29032	; 0x7168
   121d4:	cmp	r0, #0
   121d8:	and	r2, r2, #1
   121dc:	movt	r3, #2
   121e0:	movne	r3, r0
   121e4:	ubfx	r0, r1, #5, #3
   121e8:	and	r1, r1, #31
   121ec:	add	ip, r3, r0, lsl #2
   121f0:	mov	r0, #1
   121f4:	ldr	r3, [ip, #8]
   121f8:	and	r0, r0, r3, lsr r1
   121fc:	eor	r2, r0, r2
   12200:	eor	r1, r3, r2, lsl r1
   12204:	str	r1, [ip, #8]
   12208:	bx	lr
   1220c:	movw	r2, #29032	; 0x7168
   12210:	cmp	r0, #0
   12214:	movt	r2, #2
   12218:	movne	r2, r0
   1221c:	ldr	r0, [r2, #4]
   12220:	str	r1, [r2, #4]
   12224:	bx	lr
   12228:	push	{fp, lr}
   1222c:	mov	fp, sp
   12230:	movw	r3, #29032	; 0x7168
   12234:	cmp	r0, #0
   12238:	movt	r3, #2
   1223c:	movne	r3, r0
   12240:	cmp	r1, #0
   12244:	mov	r0, #10
   12248:	cmpne	r2, #0
   1224c:	str	r0, [r3]
   12250:	bne	12258 <__mempcpy_chk@plt+0x11b4>
   12254:	bl	11074 <abort@plt>
   12258:	str	r1, [r3, #40]	; 0x28
   1225c:	str	r2, [r3, #44]	; 0x2c
   12260:	pop	{fp, pc}
   12264:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12268:	add	fp, sp, #28
   1226c:	sub	sp, sp, #20
   12270:	mov	r7, r0
   12274:	ldr	r0, [fp, #8]
   12278:	movw	r5, #29032	; 0x7168
   1227c:	mov	r8, r3
   12280:	mov	r9, r2
   12284:	mov	sl, r1
   12288:	movt	r5, #2
   1228c:	cmp	r0, #0
   12290:	movne	r5, r0
   12294:	bl	10fb4 <__errno_location@plt>
   12298:	ldr	r2, [r5, #40]	; 0x28
   1229c:	ldr	r3, [r5, #44]	; 0x2c
   122a0:	mov	r4, r0
   122a4:	ldm	r5, {r0, r1}
   122a8:	add	r5, r5, #8
   122ac:	ldr	r6, [r4]
   122b0:	stm	sp, {r0, r1, r5}
   122b4:	mov	r0, r7
   122b8:	mov	r1, sl
   122bc:	str	r2, [sp, #12]
   122c0:	str	r3, [sp, #16]
   122c4:	mov	r2, r9
   122c8:	mov	r3, r8
   122cc:	bl	122dc <__mempcpy_chk@plt+0x1238>
   122d0:	str	r6, [r4]
   122d4:	sub	sp, fp, #28
   122d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   122dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122e0:	add	fp, sp, #28
   122e4:	sub	sp, sp, #156	; 0x9c
   122e8:	str	r0, [fp, #-84]	; 0xffffffac
   122ec:	add	r0, r2, #1
   122f0:	mov	r6, r1
   122f4:	mov	r7, r3
   122f8:	str	r2, [fp, #-80]	; 0xffffffb0
   122fc:	str	r0, [sp, #80]	; 0x50
   12300:	ldr	r0, [fp, #12]
   12304:	and	r1, r0, #1
   12308:	str	r1, [sp, #36]	; 0x24
   1230c:	and	r1, r0, #4
   12310:	str	r1, [sp, #32]
   12314:	ubfx	r8, r0, #1, #1
   12318:	bl	10ef4 <__ctype_get_mb_cur_max@plt>
   1231c:	str	r0, [sp, #40]	; 0x28
   12320:	ldr	r0, [fp, #24]
   12324:	ldr	r4, [fp, #8]
   12328:	mov	r1, #0
   1232c:	str	r1, [fp, #-52]	; 0xffffffcc
   12330:	mov	r1, #0
   12334:	str	r1, [sp, #60]	; 0x3c
   12338:	mov	r1, #1
   1233c:	str	r1, [sp, #84]	; 0x54
   12340:	str	r0, [sp, #76]	; 0x4c
   12344:	ldr	r0, [fp, #20]
   12348:	str	r0, [sp, #72]	; 0x48
   1234c:	mov	r0, #0
   12350:	str	r0, [sp, #56]	; 0x38
   12354:	mov	r0, #0
   12358:	str	r0, [fp, #-88]	; 0xffffffa8
   1235c:	mov	r0, #0
   12360:	str	r0, [fp, #-72]	; 0xffffffb8
   12364:	mov	r0, #0
   12368:	cmp	r4, #10
   1236c:	bhi	13688 <__mempcpy_chk@plt+0x25e4>
   12370:	add	r1, pc, #24
   12374:	ldr	ip, [fp, #-84]	; 0xffffffac
   12378:	ldr	lr, [fp, #-80]	; 0xffffffb0
   1237c:	mov	r5, r6
   12380:	mov	r9, #0
   12384:	mov	r2, #1
   12388:	mov	r3, #0
   1238c:	ldr	pc, [r1, r4, lsl #2]
   12390:	andeq	r2, r1, r8, asr r4
   12394:	muleq	r1, r4, r4
   12398:	andeq	r2, r1, r8, ror #8
   1239c:	andeq	r2, r1, r0, asr r4
   123a0:	andeq	r2, r1, r8, lsl #9
   123a4:	andeq	r2, r1, ip, ror #9
   123a8:	andeq	r2, r1, r8, ror r4
   123ac:	andeq	r2, r1, r4, ror #14
   123b0:			; <UNDEFINED> instruction: 0x000123bc
   123b4:			; <UNDEFINED> instruction: 0x000123bc
   123b8:	strdeq	r2, [r1], -r4
   123bc:	movw	r6, #24506	; 0x5fba
   123c0:	mov	r0, #0
   123c4:	mov	r2, #5
   123c8:	movt	r6, #1
   123cc:	mov	r1, r6
   123d0:	bl	10eac <dcgettext@plt>
   123d4:	cmp	r0, r6
   123d8:	str	r0, [sp, #72]	; 0x48
   123dc:	bne	125cc <__mempcpy_chk@plt+0x1528>
   123e0:	bl	151d4 <__mempcpy_chk@plt+0x4130>
   123e4:	ldrb	r1, [r0]
   123e8:	and	r1, r1, #223	; 0xdf
   123ec:	cmp	r1, #71	; 0x47
   123f0:	beq	1254c <__mempcpy_chk@plt+0x14a8>
   123f4:	cmp	r1, #85	; 0x55
   123f8:	bne	125b0 <__mempcpy_chk@plt+0x150c>
   123fc:	ldrb	r1, [r0, #1]
   12400:	and	r1, r1, #223	; 0xdf
   12404:	cmp	r1, #84	; 0x54
   12408:	bne	125b0 <__mempcpy_chk@plt+0x150c>
   1240c:	ldrb	r1, [r0, #2]
   12410:	and	r1, r1, #223	; 0xdf
   12414:	cmp	r1, #70	; 0x46
   12418:	bne	125b0 <__mempcpy_chk@plt+0x150c>
   1241c:	ldrb	r1, [r0, #3]
   12420:	cmp	r1, #45	; 0x2d
   12424:	bne	125b0 <__mempcpy_chk@plt+0x150c>
   12428:	ldrb	r1, [r0, #4]
   1242c:	cmp	r1, #56	; 0x38
   12430:	bne	125b0 <__mempcpy_chk@plt+0x150c>
   12434:	ldrb	r0, [r0, #5]
   12438:	cmp	r0, #0
   1243c:	movw	r0, #24510	; 0x5fbe
   12440:	movt	r0, #1
   12444:	str	r0, [sp, #72]	; 0x48
   12448:	bne	125b0 <__mempcpy_chk@plt+0x150c>
   1244c:	b	125cc <__mempcpy_chk@plt+0x1528>
   12450:	mov	r0, #1
   12454:	b	12494 <__mempcpy_chk@plt+0x13f0>
   12458:	mov	r4, #0
   1245c:	mov	r9, #0
   12460:	mov	r2, r0
   12464:	b	124e4 <__mempcpy_chk@plt+0x1440>
   12468:	tst	r8, #1
   1246c:	bne	12494 <__mempcpy_chk@plt+0x13f0>
   12470:	mov	r2, r0
   12474:	b	124bc <__mempcpy_chk@plt+0x1418>
   12478:	mov	r0, #1
   1247c:	mov	r9, #0
   12480:	mov	r4, #5
   12484:	b	12500 <__mempcpy_chk@plt+0x145c>
   12488:	mov	r2, #1
   1248c:	tst	r8, #1
   12490:	beq	124bc <__mempcpy_chk@plt+0x1418>
   12494:	mov	r1, #1
   12498:	mov	r9, #0
   1249c:	mov	r4, #2
   124a0:	mov	r2, r0
   124a4:	mov	r3, #1
   124a8:	str	r1, [fp, #-72]	; 0xffffffb8
   124ac:	movw	r1, #24508	; 0x5fbc
   124b0:	movt	r1, #1
   124b4:	str	r1, [fp, #-88]	; 0xffffffa8
   124b8:	b	12764 <__mempcpy_chk@plt+0x16c0>
   124bc:	cmp	r5, #0
   124c0:	mov	r9, #1
   124c4:	mov	r4, #2
   124c8:	movne	r0, #39	; 0x27
   124cc:	strbne	r0, [ip]
   124d0:	movw	r0, #24508	; 0x5fbc
   124d4:	movt	r0, #1
   124d8:	str	r0, [fp, #-88]	; 0xffffffa8
   124dc:	mov	r0, #1
   124e0:	str	r0, [fp, #-72]	; 0xffffffb8
   124e4:	mov	r3, #0
   124e8:	b	12764 <__mempcpy_chk@plt+0x16c0>
   124ec:	mov	r4, #5
   124f0:	tst	r8, #1
   124f4:	beq	1251c <__mempcpy_chk@plt+0x1478>
   124f8:	mov	r0, #1
   124fc:	mov	r9, #0
   12500:	str	r0, [fp, #-72]	; 0xffffffb8
   12504:	movw	r0, #24504	; 0x5fb8
   12508:	mov	r2, #1
   1250c:	mov	r3, #1
   12510:	movt	r0, #1
   12514:	str	r0, [fp, #-88]	; 0xffffffa8
   12518:	b	12764 <__mempcpy_chk@plt+0x16c0>
   1251c:	cmp	r5, #0
   12520:	mov	r3, #0
   12524:	mov	r9, #1
   12528:	mov	r2, #1
   1252c:	movne	r0, #34	; 0x22
   12530:	strbne	r0, [ip]
   12534:	movw	r0, #24504	; 0x5fb8
   12538:	movt	r0, #1
   1253c:	str	r0, [fp, #-88]	; 0xffffffa8
   12540:	mov	r0, #1
   12544:	str	r0, [fp, #-72]	; 0xffffffb8
   12548:	b	12764 <__mempcpy_chk@plt+0x16c0>
   1254c:	ldrb	r1, [r0, #1]
   12550:	and	r1, r1, #223	; 0xdf
   12554:	cmp	r1, #66	; 0x42
   12558:	bne	125b0 <__mempcpy_chk@plt+0x150c>
   1255c:	ldrb	r1, [r0, #2]
   12560:	cmp	r1, #49	; 0x31
   12564:	bne	125b0 <__mempcpy_chk@plt+0x150c>
   12568:	ldrb	r1, [r0, #3]
   1256c:	cmp	r1, #56	; 0x38
   12570:	bne	125b0 <__mempcpy_chk@plt+0x150c>
   12574:	ldrb	r1, [r0, #4]
   12578:	cmp	r1, #48	; 0x30
   1257c:	bne	125b0 <__mempcpy_chk@plt+0x150c>
   12580:	ldrb	r1, [r0, #5]
   12584:	cmp	r1, #51	; 0x33
   12588:	bne	125b0 <__mempcpy_chk@plt+0x150c>
   1258c:	ldrb	r1, [r0, #6]
   12590:	cmp	r1, #48	; 0x30
   12594:	bne	125b0 <__mempcpy_chk@plt+0x150c>
   12598:	ldrb	r0, [r0, #7]
   1259c:	cmp	r0, #0
   125a0:	movw	r0, #24518	; 0x5fc6
   125a4:	movt	r0, #1
   125a8:	str	r0, [sp, #72]	; 0x48
   125ac:	beq	125cc <__mempcpy_chk@plt+0x1528>
   125b0:	movw	r1, #24504	; 0x5fb8
   125b4:	movw	r0, #24508	; 0x5fbc
   125b8:	cmp	r4, #9
   125bc:	movt	r1, #1
   125c0:	movt	r0, #1
   125c4:	moveq	r0, r1
   125c8:	str	r0, [sp, #72]	; 0x48
   125cc:	movw	r6, #24508	; 0x5fbc
   125d0:	mov	r0, #0
   125d4:	mov	r2, #5
   125d8:	movt	r6, #1
   125dc:	mov	r1, r6
   125e0:	bl	10eac <dcgettext@plt>
   125e4:	cmp	r0, r6
   125e8:	str	r0, [sp, #76]	; 0x4c
   125ec:	beq	12638 <__mempcpy_chk@plt+0x1594>
   125f0:	ldr	ip, [fp, #-84]	; 0xffffffac
   125f4:	mov	r9, #0
   125f8:	tst	r8, #1
   125fc:	bne	12740 <__mempcpy_chk@plt+0x169c>
   12600:	ldr	r0, [sp, #72]	; 0x48
   12604:	ldrb	r0, [r0]
   12608:	cmp	r0, #0
   1260c:	beq	12740 <__mempcpy_chk@plt+0x169c>
   12610:	ldr	r1, [sp, #72]	; 0x48
   12614:	mov	r9, #0
   12618:	add	r1, r1, #1
   1261c:	cmp	r9, r5
   12620:	strbcc	r0, [ip, r9]
   12624:	ldrb	r0, [r1, r9]
   12628:	add	r9, r9, #1
   1262c:	cmp	r0, #0
   12630:	bne	1261c <__mempcpy_chk@plt+0x1578>
   12634:	b	12740 <__mempcpy_chk@plt+0x169c>
   12638:	bl	151d4 <__mempcpy_chk@plt+0x4130>
   1263c:	ldrb	r1, [r0]
   12640:	and	r1, r1, #223	; 0xdf
   12644:	cmp	r1, #71	; 0x47
   12648:	beq	126b8 <__mempcpy_chk@plt+0x1614>
   1264c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12650:	cmp	r1, #85	; 0x55
   12654:	bne	12714 <__mempcpy_chk@plt+0x1670>
   12658:	ldrb	r1, [r0, #1]
   1265c:	and	r1, r1, #223	; 0xdf
   12660:	cmp	r1, #84	; 0x54
   12664:	bne	12714 <__mempcpy_chk@plt+0x1670>
   12668:	ldrb	r1, [r0, #2]
   1266c:	and	r1, r1, #223	; 0xdf
   12670:	cmp	r1, #70	; 0x46
   12674:	bne	12714 <__mempcpy_chk@plt+0x1670>
   12678:	ldrb	r1, [r0, #3]
   1267c:	cmp	r1, #45	; 0x2d
   12680:	bne	12714 <__mempcpy_chk@plt+0x1670>
   12684:	ldrb	r1, [r0, #4]
   12688:	cmp	r1, #56	; 0x38
   1268c:	bne	12714 <__mempcpy_chk@plt+0x1670>
   12690:	ldrb	r0, [r0, #5]
   12694:	cmp	r0, #0
   12698:	bne	12714 <__mempcpy_chk@plt+0x1670>
   1269c:	movw	r0, #24514	; 0x5fc2
   126a0:	movt	r0, #1
   126a4:	str	r0, [sp, #76]	; 0x4c
   126a8:	mov	r9, #0
   126ac:	tst	r8, #1
   126b0:	beq	12600 <__mempcpy_chk@plt+0x155c>
   126b4:	b	12740 <__mempcpy_chk@plt+0x169c>
   126b8:	ldrb	r1, [r0, #1]
   126bc:	ldr	ip, [fp, #-84]	; 0xffffffac
   126c0:	and	r1, r1, #223	; 0xdf
   126c4:	cmp	r1, #66	; 0x42
   126c8:	bne	12714 <__mempcpy_chk@plt+0x1670>
   126cc:	ldrb	r1, [r0, #2]
   126d0:	cmp	r1, #49	; 0x31
   126d4:	bne	12714 <__mempcpy_chk@plt+0x1670>
   126d8:	ldrb	r1, [r0, #3]
   126dc:	cmp	r1, #56	; 0x38
   126e0:	bne	12714 <__mempcpy_chk@plt+0x1670>
   126e4:	ldrb	r1, [r0, #4]
   126e8:	cmp	r1, #48	; 0x30
   126ec:	bne	12714 <__mempcpy_chk@plt+0x1670>
   126f0:	ldrb	r1, [r0, #5]
   126f4:	cmp	r1, #51	; 0x33
   126f8:	bne	12714 <__mempcpy_chk@plt+0x1670>
   126fc:	ldrb	r1, [r0, #6]
   12700:	cmp	r1, #48	; 0x30
   12704:	bne	12714 <__mempcpy_chk@plt+0x1670>
   12708:	ldrb	r0, [r0, #7]
   1270c:	cmp	r0, #0
   12710:	beq	13528 <__mempcpy_chk@plt+0x2484>
   12714:	movw	r0, #24508	; 0x5fbc
   12718:	cmp	r4, #9
   1271c:	movt	r0, #1
   12720:	mov	r1, r0
   12724:	movw	r0, #24504	; 0x5fb8
   12728:	movt	r0, #1
   1272c:	moveq	r1, r0
   12730:	str	r1, [sp, #76]	; 0x4c
   12734:	mov	r9, #0
   12738:	tst	r8, #1
   1273c:	beq	12600 <__mempcpy_chk@plt+0x155c>
   12740:	ldr	r6, [sp, #76]	; 0x4c
   12744:	mov	r0, r6
   12748:	bl	10fa8 <strlen@plt>
   1274c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12750:	ldr	lr, [fp, #-80]	; 0xffffffb0
   12754:	str	r0, [fp, #-72]	; 0xffffffb8
   12758:	str	r6, [fp, #-88]	; 0xffffffa8
   1275c:	mov	r2, #1
   12760:	mov	r3, r8
   12764:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12768:	str	r4, [fp, #-64]	; 0xffffffc0
   1276c:	mov	sl, #0
   12770:	str	r3, [fp, #-76]	; 0xffffffb4
   12774:	str	r2, [sp, #88]	; 0x58
   12778:	cmp	r0, #0
   1277c:	movwne	r0, #1
   12780:	and	r1, r0, r3
   12784:	and	r1, r2, r1
   12788:	str	r1, [sp, #48]	; 0x30
   1278c:	sub	r1, r4, #2
   12790:	clz	r1, r1
   12794:	lsr	r1, r1, #5
   12798:	and	r1, r1, r3
   1279c:	str	r1, [sp, #44]	; 0x2c
   127a0:	subs	r1, r4, #2
   127a4:	eor	r4, r3, #1
   127a8:	movwne	r1, #1
   127ac:	str	r4, [sp, #92]	; 0x5c
   127b0:	orr	r4, r1, r4
   127b4:	and	r1, r1, r2
   127b8:	and	r0, r0, r1
   127bc:	str	r4, [sp, #64]	; 0x40
   127c0:	ldr	r4, [sp, #84]	; 0x54
   127c4:	str	r0, [fp, #-60]	; 0xffffffc4
   127c8:	orr	r0, r1, r3
   127cc:	ldr	r1, [fp, #16]
   127d0:	eor	r0, r0, #1
   127d4:	clz	r1, r1
   127d8:	lsr	r1, r1, #5
   127dc:	orr	r0, r1, r0
   127e0:	str	r0, [fp, #-68]	; 0xffffffbc
   127e4:	eor	r0, r2, #1
   127e8:	str	r0, [sp, #52]	; 0x34
   127ec:	cmn	r7, #1
   127f0:	beq	12800 <__mempcpy_chk@plt+0x175c>
   127f4:	cmp	sl, r7
   127f8:	bne	1280c <__mempcpy_chk@plt+0x1768>
   127fc:	b	134a0 <__mempcpy_chk@plt+0x23fc>
   12800:	ldrb	r0, [lr, sl]
   12804:	cmp	r0, #0
   12808:	beq	134a8 <__mempcpy_chk@plt+0x2404>
   1280c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12810:	cmp	r0, #0
   12814:	beq	12874 <__mempcpy_chk@plt+0x17d0>
   12818:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1281c:	mov	r6, r5
   12820:	add	r5, sl, r0
   12824:	cmp	r0, #2
   12828:	bcc	12894 <__mempcpy_chk@plt+0x17f0>
   1282c:	mov	r0, #0
   12830:	cmn	r7, #1
   12834:	str	r0, [fp, #-56]	; 0xffffffc8
   12838:	bne	12850 <__mempcpy_chk@plt+0x17ac>
   1283c:	mov	r0, lr
   12840:	bl	10fa8 <strlen@plt>
   12844:	ldr	lr, [fp, #-80]	; 0xffffffb0
   12848:	ldr	ip, [fp, #-84]	; 0xffffffac
   1284c:	mov	r7, r0
   12850:	cmp	r5, r7
   12854:	bls	128a4 <__mempcpy_chk@plt+0x1800>
   12858:	mov	r0, #0
   1285c:	mov	r5, r6
   12860:	str	r0, [fp, #-48]	; 0xffffffd0
   12864:	ldrb	r6, [lr, sl]
   12868:	cmp	r6, #126	; 0x7e
   1286c:	bls	128f4 <__mempcpy_chk@plt+0x1850>
   12870:	b	12e50 <__mempcpy_chk@plt+0x1dac>
   12874:	mov	r0, #0
   12878:	str	r0, [fp, #-56]	; 0xffffffc8
   1287c:	mov	r0, #0
   12880:	str	r0, [fp, #-48]	; 0xffffffd0
   12884:	ldrb	r6, [lr, sl]
   12888:	cmp	r6, #126	; 0x7e
   1288c:	bls	128f4 <__mempcpy_chk@plt+0x1850>
   12890:	b	12e50 <__mempcpy_chk@plt+0x1dac>
   12894:	mov	r0, #0
   12898:	str	r0, [fp, #-56]	; 0xffffffc8
   1289c:	cmp	r5, r7
   128a0:	bhi	12858 <__mempcpy_chk@plt+0x17b4>
   128a4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   128a8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   128ac:	add	r0, lr, sl
   128b0:	bl	10f9c <bcmp@plt>
   128b4:	ldr	r2, [sp, #92]	; 0x5c
   128b8:	cmp	r0, #0
   128bc:	mov	r1, r0
   128c0:	mov	r5, r6
   128c4:	movwne	r1, #1
   128c8:	orr	r1, r1, r2
   128cc:	tst	r1, #1
   128d0:	beq	13568 <__mempcpy_chk@plt+0x24c4>
   128d4:	ldr	ip, [fp, #-84]	; 0xffffffac
   128d8:	ldr	lr, [fp, #-80]	; 0xffffffb0
   128dc:	clz	r0, r0
   128e0:	lsr	r0, r0, #5
   128e4:	str	r0, [fp, #-48]	; 0xffffffd0
   128e8:	ldrb	r6, [lr, sl]
   128ec:	cmp	r6, #126	; 0x7e
   128f0:	bhi	12e50 <__mempcpy_chk@plt+0x1dac>
   128f4:	add	r3, pc, #16
   128f8:	mov	r8, #1
   128fc:	mov	r2, #110	; 0x6e
   12900:	mov	r0, #97	; 0x61
   12904:	mov	r1, #0
   12908:	ldr	pc, [r3, r6, lsl #2]
   1290c:	andeq	r2, r1, r8, lsl #24
   12910:	andeq	r2, r1, r0, asr lr
   12914:	andeq	r2, r1, r0, asr lr
   12918:	andeq	r2, r1, r0, asr lr
   1291c:	andeq	r2, r1, r0, asr lr
   12920:	andeq	r2, r1, r0, asr lr
   12924:	andeq	r2, r1, r0, asr lr
   12928:	andeq	r2, r1, r4, lsl #30
   1292c:	andeq	r2, r1, r8, ror #23
   12930:	andeq	r2, r1, r0, ror #23
   12934:	strdeq	r2, [r1], -r4
   12938:	andeq	r2, r1, r4, lsr #26
   1293c:	ldrdeq	r2, [r1], -r8
   12940:	strdeq	r2, [r1], -r0
   12944:	andeq	r2, r1, r0, asr lr
   12948:	andeq	r2, r1, r0, asr lr
   1294c:	andeq	r2, r1, r0, asr lr
   12950:	andeq	r2, r1, r0, asr lr
   12954:	andeq	r2, r1, r0, asr lr
   12958:	andeq	r2, r1, r0, asr lr
   1295c:	andeq	r2, r1, r0, asr lr
   12960:	andeq	r2, r1, r0, asr lr
   12964:	andeq	r2, r1, r0, asr lr
   12968:	andeq	r2, r1, r0, asr lr
   1296c:	andeq	r2, r1, r0, asr lr
   12970:	andeq	r2, r1, r0, asr lr
   12974:	andeq	r2, r1, r0, asr lr
   12978:	andeq	r2, r1, r0, asr lr
   1297c:	andeq	r2, r1, r0, asr lr
   12980:	andeq	r2, r1, r0, asr lr
   12984:	andeq	r2, r1, r0, asr lr
   12988:	andeq	r2, r1, r0, asr lr
   1298c:	andeq	r2, r1, ip, ror fp
   12990:	andeq	r2, r1, r0, lsl #23
   12994:	andeq	r2, r1, r0, lsl #23
   12998:	andeq	r2, r1, r0, ror fp
   1299c:	andeq	r2, r1, r0, lsl #23
   129a0:	andeq	r2, r1, r8, lsl #22
   129a4:	andeq	r2, r1, r0, lsl #23
   129a8:	andeq	r2, r1, ip, lsr #26
   129ac:	andeq	r2, r1, r0, lsl #23
   129b0:	andeq	r2, r1, r0, lsl #23
   129b4:	andeq	r2, r1, r0, lsl #23
   129b8:	andeq	r2, r1, r8, lsl #22
   129bc:	andeq	r2, r1, r8, lsl #22
   129c0:	andeq	r2, r1, r8, lsl #22
   129c4:	andeq	r2, r1, r8, lsl #22
   129c8:	andeq	r2, r1, r8, lsl #22
   129cc:	andeq	r2, r1, r8, lsl #22
   129d0:	andeq	r2, r1, r8, lsl #22
   129d4:	andeq	r2, r1, r8, lsl #22
   129d8:	andeq	r2, r1, r8, lsl #22
   129dc:	andeq	r2, r1, r8, lsl #22
   129e0:	andeq	r2, r1, r8, lsl #22
   129e4:	andeq	r2, r1, r8, lsl #22
   129e8:	andeq	r2, r1, r8, lsl #22
   129ec:	andeq	r2, r1, r8, lsl #22
   129f0:	andeq	r2, r1, r8, lsl #22
   129f4:	andeq	r2, r1, r8, lsl #22
   129f8:	andeq	r2, r1, r0, lsl #23
   129fc:	andeq	r2, r1, r0, lsl #23
   12a00:	andeq	r2, r1, r0, lsl #23
   12a04:	andeq	r2, r1, r0, lsl #23
   12a08:	strdeq	r2, [r1], -r0
   12a0c:	andeq	r2, r1, r0, asr lr
   12a10:	andeq	r2, r1, r8, lsl #22
   12a14:	andeq	r2, r1, r8, lsl #22
   12a18:	andeq	r2, r1, r8, lsl #22
   12a1c:	andeq	r2, r1, r8, lsl #22
   12a20:	andeq	r2, r1, r8, lsl #22
   12a24:	andeq	r2, r1, r8, lsl #22
   12a28:	andeq	r2, r1, r8, lsl #22
   12a2c:	andeq	r2, r1, r8, lsl #22
   12a30:	andeq	r2, r1, r8, lsl #22
   12a34:	andeq	r2, r1, r8, lsl #22
   12a38:	andeq	r2, r1, r8, lsl #22
   12a3c:	andeq	r2, r1, r8, lsl #22
   12a40:	andeq	r2, r1, r8, lsl #22
   12a44:	andeq	r2, r1, r8, lsl #22
   12a48:	andeq	r2, r1, r8, lsl #22
   12a4c:	andeq	r2, r1, r8, lsl #22
   12a50:	andeq	r2, r1, r8, lsl #22
   12a54:	andeq	r2, r1, r8, lsl #22
   12a58:	andeq	r2, r1, r8, lsl #22
   12a5c:	andeq	r2, r1, r8, lsl #22
   12a60:	andeq	r2, r1, r8, lsl #22
   12a64:	andeq	r2, r1, r8, lsl #22
   12a68:	andeq	r2, r1, r8, lsl #22
   12a6c:	andeq	r2, r1, r8, lsl #22
   12a70:	andeq	r2, r1, r8, lsl #22
   12a74:	andeq	r2, r1, r8, lsl #22
   12a78:	andeq	r2, r1, r0, lsl #23
   12a7c:			; <UNDEFINED> instruction: 0x00012bb4
   12a80:	andeq	r2, r1, r8, lsl #22
   12a84:	andeq	r2, r1, r0, lsl #23
   12a88:	andeq	r2, r1, r8, lsl #22
   12a8c:	andeq	r2, r1, r0, lsl #23
   12a90:	andeq	r2, r1, r8, lsl #22
   12a94:	andeq	r2, r1, r8, lsl #22
   12a98:	andeq	r2, r1, r8, lsl #22
   12a9c:	andeq	r2, r1, r8, lsl #22
   12aa0:	andeq	r2, r1, r8, lsl #22
   12aa4:	andeq	r2, r1, r8, lsl #22
   12aa8:	andeq	r2, r1, r8, lsl #22
   12aac:	andeq	r2, r1, r8, lsl #22
   12ab0:	andeq	r2, r1, r8, lsl #22
   12ab4:	andeq	r2, r1, r8, lsl #22
   12ab8:	andeq	r2, r1, r8, lsl #22
   12abc:	andeq	r2, r1, r8, lsl #22
   12ac0:	andeq	r2, r1, r8, lsl #22
   12ac4:	andeq	r2, r1, r8, lsl #22
   12ac8:	andeq	r2, r1, r8, lsl #22
   12acc:	andeq	r2, r1, r8, lsl #22
   12ad0:	andeq	r2, r1, r8, lsl #22
   12ad4:	andeq	r2, r1, r8, lsl #22
   12ad8:	andeq	r2, r1, r8, lsl #22
   12adc:	andeq	r2, r1, r8, lsl #22
   12ae0:	andeq	r2, r1, r8, lsl #22
   12ae4:	andeq	r2, r1, r8, lsl #22
   12ae8:	andeq	r2, r1, r8, lsl #22
   12aec:	andeq	r2, r1, r8, lsl #22
   12af0:	andeq	r2, r1, r8, lsl #22
   12af4:	andeq	r2, r1, r8, lsl #22
   12af8:	andeq	r2, r1, r8, asr #22
   12afc:	andeq	r2, r1, r0, lsl #23
   12b00:	andeq	r2, r1, r8, asr #22
   12b04:	andeq	r2, r1, r0, ror fp
   12b08:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12b0c:	tst	r0, #1
   12b10:	bne	12dc8 <__mempcpy_chk@plt+0x1d24>
   12b14:	ldr	r1, [fp, #16]
   12b18:	ubfx	r0, r6, #5, #3
   12b1c:	mov	r2, #1
   12b20:	ldr	r0, [r1, r0, lsl #2]
   12b24:	and	r1, r6, #31
   12b28:	tst	r0, r2, lsl r1
   12b2c:	beq	12dc8 <__mempcpy_chk@plt+0x1d24>
   12b30:	mov	r0, r6
   12b34:	mov	r1, r8
   12b38:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12b3c:	tst	r2, #1
   12b40:	beq	12de8 <__mempcpy_chk@plt+0x1d44>
   12b44:	b	13544 <__mempcpy_chk@plt+0x24a0>
   12b48:	cmp	r7, #1
   12b4c:	beq	12b70 <__mempcpy_chk@plt+0x1acc>
   12b50:	mov	r8, #0
   12b54:	cmn	r7, #1
   12b58:	bne	12db4 <__mempcpy_chk@plt+0x1d10>
   12b5c:	ldrb	r0, [lr, #1]
   12b60:	cmp	r0, #0
   12b64:	beq	12b70 <__mempcpy_chk@plt+0x1acc>
   12b68:	mvn	r7, #0
   12b6c:	b	12db4 <__mempcpy_chk@plt+0x1d10>
   12b70:	mov	r8, #0
   12b74:	cmp	sl, #0
   12b78:	bne	12db4 <__mempcpy_chk@plt+0x1d10>
   12b7c:	mov	r1, #1
   12b80:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12b84:	cmp	r0, #2
   12b88:	bne	12ba0 <__mempcpy_chk@plt+0x1afc>
   12b8c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12b90:	mov	r8, r1
   12b94:	tst	r0, #1
   12b98:	beq	12b08 <__mempcpy_chk@plt+0x1a64>
   12b9c:	b	13544 <__mempcpy_chk@plt+0x24a0>
   12ba0:	mov	r8, r1
   12ba4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12ba8:	tst	r0, #1
   12bac:	beq	12b14 <__mempcpy_chk@plt+0x1a70>
   12bb0:	b	12dc8 <__mempcpy_chk@plt+0x1d24>
   12bb4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12bb8:	cmp	r0, #2
   12bbc:	bne	12e7c <__mempcpy_chk@plt+0x1dd8>
   12bc0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12bc4:	tst	r0, #1
   12bc8:	bne	13544 <__mempcpy_chk@plt+0x24a0>
   12bcc:	mov	r0, #0
   12bd0:	str	r0, [fp, #-56]	; 0xffffffc8
   12bd4:	b	12e94 <__mempcpy_chk@plt+0x1df0>
   12bd8:	mov	r0, #102	; 0x66
   12bdc:	b	12f04 <__mempcpy_chk@plt+0x1e60>
   12be0:	mov	r2, #116	; 0x74
   12be4:	b	12bf4 <__mempcpy_chk@plt+0x1b50>
   12be8:	mov	r0, #98	; 0x62
   12bec:	b	12f04 <__mempcpy_chk@plt+0x1e60>
   12bf0:	mov	r2, #114	; 0x72
   12bf4:	ldr	r0, [sp, #64]	; 0x40
   12bf8:	tst	r0, #1
   12bfc:	mov	r0, r2
   12c00:	bne	12f04 <__mempcpy_chk@plt+0x1e60>
   12c04:	b	13544 <__mempcpy_chk@plt+0x24a0>
   12c08:	ldr	r0, [sp, #88]	; 0x58
   12c0c:	tst	r0, #1
   12c10:	beq	12f24 <__mempcpy_chk@plt+0x1e80>
   12c14:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12c18:	tst	r0, #1
   12c1c:	bne	13680 <__mempcpy_chk@plt+0x25dc>
   12c20:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12c24:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12c28:	subs	r0, r0, #2
   12c2c:	movwne	r0, #1
   12c30:	orr	r0, r0, r1
   12c34:	tst	r0, #1
   12c38:	bne	12c74 <__mempcpy_chk@plt+0x1bd0>
   12c3c:	cmp	r9, r5
   12c40:	movcc	r0, #39	; 0x27
   12c44:	strbcc	r0, [ip, r9]
   12c48:	add	r0, r9, #1
   12c4c:	cmp	r0, r5
   12c50:	movcc	r1, #36	; 0x24
   12c54:	strbcc	r1, [ip, r0]
   12c58:	add	r0, r9, #2
   12c5c:	add	r9, r9, #3
   12c60:	cmp	r0, r5
   12c64:	movcc	r1, #39	; 0x27
   12c68:	strbcc	r1, [ip, r0]
   12c6c:	mov	r0, #1
   12c70:	str	r0, [fp, #-52]	; 0xffffffcc
   12c74:	mov	r1, #1
   12c78:	cmp	r9, r5
   12c7c:	mov	r8, #0
   12c80:	mov	r6, #48	; 0x30
   12c84:	str	r1, [fp, #-56]	; 0xffffffc8
   12c88:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12c8c:	movcc	r0, #92	; 0x5c
   12c90:	strbcc	r0, [ip, r9]
   12c94:	add	r0, r9, #1
   12c98:	cmp	r1, #2
   12c9c:	beq	130f0 <__mempcpy_chk@plt+0x204c>
   12ca0:	add	r1, sl, #1
   12ca4:	cmp	r1, r7
   12ca8:	bcs	130f0 <__mempcpy_chk@plt+0x204c>
   12cac:	ldrb	r1, [lr, r1]
   12cb0:	sub	r1, r1, #48	; 0x30
   12cb4:	uxtb	r1, r1
   12cb8:	cmp	r1, #9
   12cbc:	bhi	130f0 <__mempcpy_chk@plt+0x204c>
   12cc0:	cmp	r0, r5
   12cc4:	movcc	r1, #48	; 0x30
   12cc8:	strbcc	r1, [ip, r0]
   12ccc:	add	r0, r9, #2
   12cd0:	add	r9, r9, #3
   12cd4:	cmp	r0, r5
   12cd8:	movcc	r1, #48	; 0x30
   12cdc:	strbcc	r1, [ip, r0]
   12ce0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12ce4:	tst	r0, #1
   12ce8:	beq	12b14 <__mempcpy_chk@plt+0x1a70>
   12cec:	b	12dc8 <__mempcpy_chk@plt+0x1d24>
   12cf0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12cf4:	mov	r6, #63	; 0x3f
   12cf8:	cmp	r0, #5
   12cfc:	beq	13104 <__mempcpy_chk@plt+0x2060>
   12d00:	mov	r1, #0
   12d04:	cmp	r0, #2
   12d08:	str	r1, [fp, #-56]	; 0xffffffc8
   12d0c:	bne	131cc <__mempcpy_chk@plt+0x2128>
   12d10:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12d14:	mov	r8, #0
   12d18:	tst	r0, #1
   12d1c:	beq	12b08 <__mempcpy_chk@plt+0x1a64>
   12d20:	b	13544 <__mempcpy_chk@plt+0x24a0>
   12d24:	mov	r0, #118	; 0x76
   12d28:	b	12f04 <__mempcpy_chk@plt+0x1e60>
   12d2c:	mov	r0, #1
   12d30:	mov	r6, #39	; 0x27
   12d34:	str	r0, [sp, #60]	; 0x3c
   12d38:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12d3c:	cmp	r0, #2
   12d40:	bne	12f44 <__mempcpy_chk@plt+0x1ea0>
   12d44:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12d48:	tst	r0, #1
   12d4c:	bne	13544 <__mempcpy_chk@plt+0x24a0>
   12d50:	ldr	r2, [sp, #56]	; 0x38
   12d54:	clz	r1, r5
   12d58:	mov	r8, #1
   12d5c:	lsr	r1, r1, #5
   12d60:	cmp	r2, #0
   12d64:	mov	r0, r2
   12d68:	movwne	r0, #1
   12d6c:	orrs	r0, r0, r1
   12d70:	moveq	r2, r5
   12d74:	moveq	r5, r0
   12d78:	cmp	r9, r5
   12d7c:	str	r2, [sp, #56]	; 0x38
   12d80:	movcc	r0, #39	; 0x27
   12d84:	strbcc	r0, [ip, r9]
   12d88:	add	r0, r9, #1
   12d8c:	cmp	r0, r5
   12d90:	movcc	r1, #92	; 0x5c
   12d94:	strbcc	r1, [ip, r0]
   12d98:	add	r0, r9, #2
   12d9c:	add	r9, r9, #3
   12da0:	cmp	r0, r5
   12da4:	movcc	r1, #39	; 0x27
   12da8:	strbcc	r1, [ip, r0]
   12dac:	mov	r0, #0
   12db0:	str	r0, [fp, #-52]	; 0xffffffcc
   12db4:	mov	r0, #0
   12db8:	str	r0, [fp, #-56]	; 0xffffffc8
   12dbc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12dc0:	tst	r0, #1
   12dc4:	beq	12b14 <__mempcpy_chk@plt+0x1a70>
   12dc8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12dcc:	mov	r1, r8
   12dd0:	cmp	r0, #0
   12dd4:	mov	r0, r6
   12dd8:	beq	12e9c <__mempcpy_chk@plt+0x1df8>
   12ddc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12de0:	tst	r2, #1
   12de4:	bne	13544 <__mempcpy_chk@plt+0x24a0>
   12de8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12dec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12df0:	subs	r2, r2, #2
   12df4:	movwne	r2, #1
   12df8:	orr	r2, r2, r3
   12dfc:	tst	r2, #1
   12e00:	bne	12e3c <__mempcpy_chk@plt+0x1d98>
   12e04:	cmp	r9, r5
   12e08:	movcc	r2, #39	; 0x27
   12e0c:	strbcc	r2, [ip, r9]
   12e10:	add	r2, r9, #1
   12e14:	cmp	r2, r5
   12e18:	movcc	r3, #36	; 0x24
   12e1c:	strbcc	r3, [ip, r2]
   12e20:	add	r2, r9, #2
   12e24:	add	r9, r9, #3
   12e28:	cmp	r2, r5
   12e2c:	movcc	r3, #39	; 0x27
   12e30:	strbcc	r3, [ip, r2]
   12e34:	mov	r2, #1
   12e38:	str	r2, [fp, #-52]	; 0xffffffcc
   12e3c:	cmp	r9, r5
   12e40:	movcc	r2, #92	; 0x5c
   12e44:	strbcc	r2, [ip, r9]
   12e48:	add	r9, r9, #1
   12e4c:	b	12ee4 <__mempcpy_chk@plt+0x1e40>
   12e50:	ldr	r0, [sp, #40]	; 0x28
   12e54:	cmp	r0, #1
   12e58:	bne	12f58 <__mempcpy_chk@plt+0x1eb4>
   12e5c:	bl	10f84 <__ctype_b_loc@plt>
   12e60:	ldr	r0, [r0]
   12e64:	ldr	lr, [fp, #-80]	; 0xffffffb0
   12e68:	mov	r1, #1
   12e6c:	add	r0, r0, r6, lsl #1
   12e70:	ldrb	r0, [r0, #1]
   12e74:	ubfx	r8, r0, #6, #1
   12e78:	b	132b0 <__mempcpy_chk@plt+0x220c>
   12e7c:	ldr	r1, [sp, #48]	; 0x30
   12e80:	mov	r0, #0
   12e84:	str	r0, [fp, #-56]	; 0xffffffc8
   12e88:	mov	r0, #92	; 0x5c
   12e8c:	cmp	r1, #0
   12e90:	beq	12f04 <__mempcpy_chk@plt+0x1e60>
   12e94:	mov	r6, #92	; 0x5c
   12e98:	mov	r8, #0
   12e9c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12ea0:	cmp	r0, #0
   12ea4:	bne	12edc <__mempcpy_chk@plt+0x1e38>
   12ea8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12eac:	tst	r0, #1
   12eb0:	beq	12edc <__mempcpy_chk@plt+0x1e38>
   12eb4:	cmp	r9, r5
   12eb8:	movcc	r0, #39	; 0x27
   12ebc:	strbcc	r0, [ip, r9]
   12ec0:	add	r0, r9, #1
   12ec4:	add	r9, r9, #2
   12ec8:	cmp	r0, r5
   12ecc:	movcc	r1, #39	; 0x27
   12ed0:	strbcc	r1, [ip, r0]
   12ed4:	mov	r0, #0
   12ed8:	str	r0, [fp, #-52]	; 0xffffffcc
   12edc:	mov	r1, r8
   12ee0:	mov	r0, r6
   12ee4:	cmp	r9, r5
   12ee8:	and	r4, r4, r1
   12eec:	strbcc	r0, [ip, r9]
   12ef0:	add	r9, r9, #1
   12ef4:	add	sl, sl, #1
   12ef8:	cmn	r7, #1
   12efc:	bne	127f4 <__mempcpy_chk@plt+0x1750>
   12f00:	b	12800 <__mempcpy_chk@plt+0x175c>
   12f04:	mov	r1, #0
   12f08:	mov	r8, #0
   12f0c:	str	r1, [fp, #-56]	; 0xffffffc8
   12f10:	ldr	r1, [sp, #88]	; 0x58
   12f14:	tst	r1, #1
   12f18:	mov	r1, #0
   12f1c:	beq	12b08 <__mempcpy_chk@plt+0x1a64>
   12f20:	b	12ddc <__mempcpy_chk@plt+0x1d38>
   12f24:	ldr	r0, [sp, #36]	; 0x24
   12f28:	mov	r6, #0
   12f2c:	mov	r8, #0
   12f30:	cmp	r0, #0
   12f34:	mov	r0, #0
   12f38:	str	r0, [fp, #-56]	; 0xffffffc8
   12f3c:	bne	12ef4 <__mempcpy_chk@plt+0x1e50>
   12f40:	b	12b08 <__mempcpy_chk@plt+0x1a64>
   12f44:	mov	r8, #1
   12f48:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12f4c:	tst	r0, #1
   12f50:	beq	12b14 <__mempcpy_chk@plt+0x1a70>
   12f54:	b	12dc8 <__mempcpy_chk@plt+0x1d24>
   12f58:	mov	r0, #0
   12f5c:	cmn	r7, #1
   12f60:	str	r0, [fp, #-36]	; 0xffffffdc
   12f64:	str	r0, [fp, #-40]	; 0xffffffd8
   12f68:	bne	12f7c <__mempcpy_chk@plt+0x1ed8>
   12f6c:	mov	r0, lr
   12f70:	bl	10fa8 <strlen@plt>
   12f74:	ldr	lr, [fp, #-80]	; 0xffffffb0
   12f78:	mov	r7, r0
   12f7c:	ldr	r0, [sp, #44]	; 0x2c
   12f80:	str	r4, [sp, #84]	; 0x54
   12f84:	str	r5, [sp, #28]
   12f88:	cmp	r0, #0
   12f8c:	beq	131e0 <__mempcpy_chk@plt+0x213c>
   12f90:	ldr	r0, [sp, #80]	; 0x50
   12f94:	mov	r8, #1
   12f98:	mov	r5, #0
   12f9c:	add	r0, r0, sl
   12fa0:	str	r0, [sp, #24]
   12fa4:	sub	r0, fp, #40	; 0x28
   12fa8:	mov	r3, r0
   12fac:	b	12fe8 <__mempcpy_chk@plt+0x1f44>
   12fb0:	ldr	r5, [sp, #68]	; 0x44
   12fb4:	add	r5, r0, r5
   12fb8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12fbc:	bl	10ed0 <iswprint@plt>
   12fc0:	cmp	r0, #0
   12fc4:	sub	r4, fp, #40	; 0x28
   12fc8:	movwne	r0, #1
   12fcc:	and	r8, r8, r0
   12fd0:	mov	r0, r4
   12fd4:	bl	10ea0 <mbsinit@plt>
   12fd8:	ldr	lr, [fp, #-80]	; 0xffffffb0
   12fdc:	mov	r3, r4
   12fe0:	cmp	r0, #0
   12fe4:	bne	132a4 <__mempcpy_chk@plt+0x2200>
   12fe8:	str	r5, [sp, #68]	; 0x44
   12fec:	add	r5, r5, sl
   12ff0:	sub	r0, fp, #44	; 0x2c
   12ff4:	add	r1, lr, r5
   12ff8:	sub	r2, r7, r5
   12ffc:	bl	1520c <__mempcpy_chk@plt+0x4168>
   13000:	cmn	r0, #2
   13004:	beq	13264 <__mempcpy_chk@plt+0x21c0>
   13008:	ldr	ip, [fp, #-84]	; 0xffffffac
   1300c:	cmn	r0, #1
   13010:	beq	13258 <__mempcpy_chk@plt+0x21b4>
   13014:	cmp	r0, #0
   13018:	beq	1325c <__mempcpy_chk@plt+0x21b8>
   1301c:	cmp	r0, #2
   13020:	bcc	12fb0 <__mempcpy_chk@plt+0x1f0c>
   13024:	ldr	r1, [sp, #68]	; 0x44
   13028:	ldr	r2, [sp, #24]
   1302c:	add	r1, r2, r1
   13030:	sub	r2, r0, #1
   13034:	ldrb	r3, [r1]
   13038:	sub	r3, r3, #91	; 0x5b
   1303c:	cmp	r3, #33	; 0x21
   13040:	bls	13060 <__mempcpy_chk@plt+0x1fbc>
   13044:	add	r1, r1, #1
   13048:	subs	r2, r2, #1
   1304c:	beq	12fb0 <__mempcpy_chk@plt+0x1f0c>
   13050:	ldrb	r3, [r1]
   13054:	sub	r3, r3, #91	; 0x5b
   13058:	cmp	r3, #33	; 0x21
   1305c:	bhi	13044 <__mempcpy_chk@plt+0x1fa0>
   13060:	add	r5, pc, #0
   13064:	ldr	pc, [r5, r3, lsl #2]
   13068:	andeq	r3, r1, ip, ror r5
   1306c:	andeq	r3, r1, ip, ror r5
   13070:	andeq	r3, r1, r4, asr #32
   13074:	andeq	r3, r1, ip, ror r5
   13078:	andeq	r3, r1, r4, asr #32
   1307c:	andeq	r3, r1, ip, ror r5
   13080:	andeq	r3, r1, r4, asr #32
   13084:	andeq	r3, r1, r4, asr #32
   13088:	andeq	r3, r1, r4, asr #32
   1308c:	andeq	r3, r1, r4, asr #32
   13090:	andeq	r3, r1, r4, asr #32
   13094:	andeq	r3, r1, r4, asr #32
   13098:	andeq	r3, r1, r4, asr #32
   1309c:	andeq	r3, r1, r4, asr #32
   130a0:	andeq	r3, r1, r4, asr #32
   130a4:	andeq	r3, r1, r4, asr #32
   130a8:	andeq	r3, r1, r4, asr #32
   130ac:	andeq	r3, r1, r4, asr #32
   130b0:	andeq	r3, r1, r4, asr #32
   130b4:	andeq	r3, r1, r4, asr #32
   130b8:	andeq	r3, r1, r4, asr #32
   130bc:	andeq	r3, r1, r4, asr #32
   130c0:	andeq	r3, r1, r4, asr #32
   130c4:	andeq	r3, r1, r4, asr #32
   130c8:	andeq	r3, r1, r4, asr #32
   130cc:	andeq	r3, r1, r4, asr #32
   130d0:	andeq	r3, r1, r4, asr #32
   130d4:	andeq	r3, r1, r4, asr #32
   130d8:	andeq	r3, r1, r4, asr #32
   130dc:	andeq	r3, r1, r4, asr #32
   130e0:	andeq	r3, r1, r4, asr #32
   130e4:	andeq	r3, r1, r4, asr #32
   130e8:	andeq	r3, r1, r4, asr #32
   130ec:	andeq	r3, r1, ip, ror r5
   130f0:	mov	r9, r0
   130f4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   130f8:	tst	r0, #1
   130fc:	beq	12b14 <__mempcpy_chk@plt+0x1a70>
   13100:	b	12dc8 <__mempcpy_chk@plt+0x1d24>
   13104:	mov	r0, #0
   13108:	str	r0, [fp, #-56]	; 0xffffffc8
   1310c:	ldr	r0, [sp, #32]
   13110:	cmp	r0, #0
   13114:	beq	131cc <__mempcpy_chk@plt+0x2128>
   13118:	add	r0, sl, #2
   1311c:	mov	r1, r7
   13120:	cmp	r0, r7
   13124:	bcs	131cc <__mempcpy_chk@plt+0x2128>
   13128:	add	r1, sl, lr
   1312c:	ldrb	r1, [r1, #1]
   13130:	cmp	r1, #63	; 0x3f
   13134:	bne	131cc <__mempcpy_chk@plt+0x2128>
   13138:	ldrb	r8, [lr, r0]
   1313c:	sub	r2, r8, #33	; 0x21
   13140:	cmp	r2, #29
   13144:	bhi	131cc <__mempcpy_chk@plt+0x2128>
   13148:	mov	r1, r4
   1314c:	movw	r4, #20929	; 0x51c1
   13150:	mov	r3, #1
   13154:	movt	r4, #14336	; 0x3800
   13158:	tst	r4, r3, lsl r2
   1315c:	beq	13488 <__mempcpy_chk@plt+0x23e4>
   13160:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13164:	tst	r2, #1
   13168:	bne	13544 <__mempcpy_chk@plt+0x24a0>
   1316c:	cmp	r9, r5
   13170:	mov	r6, r8
   13174:	mov	r4, r1
   13178:	mov	sl, r0
   1317c:	mov	r8, #0
   13180:	movcc	r2, #63	; 0x3f
   13184:	strbcc	r2, [ip, r9]
   13188:	add	r2, r9, #1
   1318c:	cmp	r2, r5
   13190:	movcc	r3, #34	; 0x22
   13194:	strbcc	r3, [ip, r2]
   13198:	add	r2, r9, #2
   1319c:	cmp	r2, r5
   131a0:	movcc	r3, #34	; 0x22
   131a4:	strbcc	r3, [ip, r2]
   131a8:	add	r2, r9, #3
   131ac:	add	r9, r9, #4
   131b0:	cmp	r2, r5
   131b4:	movcc	r3, #63	; 0x3f
   131b8:	strbcc	r3, [ip, r2]
   131bc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   131c0:	tst	r0, #1
   131c4:	beq	12b14 <__mempcpy_chk@plt+0x1a70>
   131c8:	b	12dc8 <__mempcpy_chk@plt+0x1d24>
   131cc:	mov	r8, #0
   131d0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   131d4:	tst	r0, #1
   131d8:	beq	12b14 <__mempcpy_chk@plt+0x1a70>
   131dc:	b	12dc8 <__mempcpy_chk@plt+0x1d24>
   131e0:	mov	r8, #1
   131e4:	mov	r5, #0
   131e8:	sub	r4, fp, #40	; 0x28
   131ec:	str	r5, [sp, #68]	; 0x44
   131f0:	add	r5, r5, sl
   131f4:	sub	r0, fp, #44	; 0x2c
   131f8:	mov	r3, r4
   131fc:	add	r1, lr, r5
   13200:	sub	r2, r7, r5
   13204:	bl	1520c <__mempcpy_chk@plt+0x4168>
   13208:	cmn	r0, #2
   1320c:	beq	13264 <__mempcpy_chk@plt+0x21c0>
   13210:	cmn	r0, #1
   13214:	beq	13258 <__mempcpy_chk@plt+0x21b4>
   13218:	ldr	r5, [sp, #68]	; 0x44
   1321c:	cmp	r0, #0
   13220:	beq	132a0 <__mempcpy_chk@plt+0x21fc>
   13224:	add	r5, r0, r5
   13228:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1322c:	bl	10ed0 <iswprint@plt>
   13230:	cmp	r0, #0
   13234:	sub	r4, fp, #40	; 0x28
   13238:	movwne	r0, #1
   1323c:	and	r8, r8, r0
   13240:	mov	r0, r4
   13244:	bl	10ea0 <mbsinit@plt>
   13248:	ldr	lr, [fp, #-80]	; 0xffffffb0
   1324c:	cmp	r0, #0
   13250:	beq	131ec <__mempcpy_chk@plt+0x2148>
   13254:	b	132a4 <__mempcpy_chk@plt+0x2200>
   13258:	mov	r8, #0
   1325c:	ldr	lr, [fp, #-80]	; 0xffffffb0
   13260:	b	13298 <__mempcpy_chk@plt+0x21f4>
   13264:	ldr	lr, [fp, #-80]	; 0xffffffb0
   13268:	mov	r8, #0
   1326c:	cmp	r5, r7
   13270:	bcs	13298 <__mempcpy_chk@plt+0x21f4>
   13274:	ldrb	r0, [lr, r5]
   13278:	cmp	r0, #0
   1327c:	beq	13298 <__mempcpy_chk@plt+0x21f4>
   13280:	ldr	r0, [sp, #68]	; 0x44
   13284:	add	r0, r0, #1
   13288:	add	r5, r0, sl
   1328c:	str	r0, [sp, #68]	; 0x44
   13290:	cmp	r5, r7
   13294:	bcc	13274 <__mempcpy_chk@plt+0x21d0>
   13298:	ldr	r5, [sp, #68]	; 0x44
   1329c:	b	132a4 <__mempcpy_chk@plt+0x2200>
   132a0:	ldr	lr, [fp, #-80]	; 0xffffffb0
   132a4:	mov	r1, r5
   132a8:	ldr	r5, [sp, #28]
   132ac:	ldr	r4, [sp, #84]	; 0x54
   132b0:	ldr	r0, [sp, #52]	; 0x34
   132b4:	ldr	ip, [fp, #-84]	; 0xffffffac
   132b8:	cmp	r1, #1
   132bc:	orr	r2, r8, r0
   132c0:	mov	r0, r1
   132c4:	bhi	132d0 <__mempcpy_chk@plt+0x222c>
   132c8:	tst	r2, #1
   132cc:	bne	12b08 <__mempcpy_chk@plt+0x1a64>
   132d0:	add	r0, r0, sl
   132d4:	str	r2, [sp, #84]	; 0x54
   132d8:	str	r0, [fp, #-56]	; 0xffffffc8
   132dc:	mov	r0, #0
   132e0:	tst	r2, #1
   132e4:	bne	133c4 <__mempcpy_chk@plt+0x2320>
   132e8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   132ec:	tst	r1, #1
   132f0:	bne	13544 <__mempcpy_chk@plt+0x24a0>
   132f4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   132f8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   132fc:	subs	r2, r1, #2
   13300:	movwne	r2, #1
   13304:	orr	r2, r2, r0
   13308:	tst	r2, #1
   1330c:	bne	13348 <__mempcpy_chk@plt+0x22a4>
   13310:	cmp	r9, r5
   13314:	add	r2, r9, #1
   13318:	mov	r0, #1
   1331c:	movcc	r1, #39	; 0x27
   13320:	str	r0, [fp, #-52]	; 0xffffffcc
   13324:	strbcc	r1, [ip, r9]
   13328:	cmp	r2, r5
   1332c:	movcc	r1, #36	; 0x24
   13330:	strbcc	r1, [ip, r2]
   13334:	add	r2, r9, #2
   13338:	add	r9, r9, #3
   1333c:	cmp	r2, r5
   13340:	movcc	r1, #39	; 0x27
   13344:	strbcc	r1, [ip, r2]
   13348:	cmp	r9, r5
   1334c:	add	r2, r9, #1
   13350:	movcc	r1, #92	; 0x5c
   13354:	strbcc	r1, [ip, r9]
   13358:	cmp	r2, r5
   1335c:	bcs	13370 <__mempcpy_chk@plt+0x22cc>
   13360:	uxtb	r3, r6
   13364:	mov	r1, #48	; 0x30
   13368:	orr	r3, r1, r3, lsr #6
   1336c:	strb	r3, [ip, r2]
   13370:	add	r2, r9, #2
   13374:	add	r9, r9, #3
   13378:	cmp	r2, r5
   1337c:	lsrcc	r3, r6, #3
   13380:	movcc	r1, #6
   13384:	bficc	r3, r1, #3, #29
   13388:	mov	r1, #6
   1338c:	bfi	r6, r1, #3, #29
   13390:	strbcc	r3, [ip, r2]
   13394:	mov	r2, #1
   13398:	b	133f8 <__mempcpy_chk@plt+0x2354>
   1339c:	ldr	r1, [sp, #80]	; 0x50
   133a0:	cmp	r9, r2
   133a4:	mov	r5, r2
   133a8:	ldr	r2, [sp, #84]	; 0x54
   133ac:	strbcc	r6, [ip, r9]
   133b0:	add	r9, r9, #1
   133b4:	ldrb	r6, [r1, sl]
   133b8:	mov	sl, r3
   133bc:	tst	r2, #1
   133c0:	beq	132e8 <__mempcpy_chk@plt+0x2244>
   133c4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   133c8:	tst	r1, #1
   133cc:	beq	133ec <__mempcpy_chk@plt+0x2348>
   133d0:	cmp	r9, r5
   133d4:	mov	r2, r0
   133d8:	movcc	r1, #92	; 0x5c
   133dc:	strbcc	r1, [ip, r9]
   133e0:	add	r9, r9, #1
   133e4:	mov	r1, #0
   133e8:	b	133f4 <__mempcpy_chk@plt+0x2350>
   133ec:	mov	r1, #0
   133f0:	mov	r2, r0
   133f4:	str	r1, [fp, #-48]	; 0xffffffd0
   133f8:	mov	r0, r2
   133fc:	and	r1, r2, #1
   13400:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13404:	add	r3, sl, #1
   13408:	cmp	r2, r3
   1340c:	bls	1346c <__mempcpy_chk@plt+0x23c8>
   13410:	mov	r2, r5
   13414:	ldr	r5, [fp, #-52]	; 0xffffffcc
   13418:	cmp	r1, #0
   1341c:	movwne	r1, #1
   13420:	mvn	r5, r5
   13424:	orr	r5, r5, r1
   13428:	tst	r5, #1
   1342c:	bne	1339c <__mempcpy_chk@plt+0x22f8>
   13430:	cmp	r9, r2
   13434:	movcc	r5, r4
   13438:	movcc	r4, #39	; 0x27
   1343c:	strbcc	r4, [ip, r9]
   13440:	movcc	r4, r5
   13444:	add	r5, r9, #1
   13448:	add	r9, r9, #2
   1344c:	cmp	r5, r2
   13450:	movcc	r1, r4
   13454:	movcc	r4, #39	; 0x27
   13458:	strbcc	r4, [ip, r5]
   1345c:	movcc	r4, r1
   13460:	mov	r1, #0
   13464:	str	r1, [fp, #-52]	; 0xffffffcc
   13468:	b	1339c <__mempcpy_chk@plt+0x22f8>
   1346c:	cmp	r1, #0
   13470:	movwne	r1, #1
   13474:	str	r1, [fp, #-56]	; 0xffffffc8
   13478:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1347c:	cmp	r0, #0
   13480:	beq	12ea8 <__mempcpy_chk@plt+0x1e04>
   13484:	b	12edc <__mempcpy_chk@plt+0x1e38>
   13488:	mov	r8, #0
   1348c:	mov	r4, r1
   13490:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13494:	tst	r0, #1
   13498:	beq	12b14 <__mempcpy_chk@plt+0x1a70>
   1349c:	b	12dc8 <__mempcpy_chk@plt+0x1d24>
   134a0:	mov	r7, sl
   134a4:	b	134ac <__mempcpy_chk@plt+0x2408>
   134a8:	mvn	r7, #0
   134ac:	ldr	r1, [fp, #-64]	; 0xffffffc0
   134b0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   134b4:	ldr	r2, [sp, #88]	; 0x58
   134b8:	eor	r0, r1, #2
   134bc:	orr	r0, r0, r9
   134c0:	clz	r0, r0
   134c4:	lsr	r0, r0, #5
   134c8:	tst	r3, r0
   134cc:	bne	13544 <__mempcpy_chk@plt+0x24a0>
   134d0:	subs	r0, r1, #2
   134d4:	movwne	r0, #1
   134d8:	orr	r0, r3, r0
   134dc:	tst	r0, #1
   134e0:	ldreq	r0, [sp, #60]	; 0x3c
   134e4:	eoreq	r0, r0, #1
   134e8:	tsteq	r0, #1
   134ec:	bne	13620 <__mempcpy_chk@plt+0x257c>
   134f0:	tst	r4, #1
   134f4:	bne	135e4 <__mempcpy_chk@plt+0x2540>
   134f8:	ldr	r6, [sp, #56]	; 0x38
   134fc:	mov	r8, #0
   13500:	cmp	r6, #0
   13504:	beq	1361c <__mempcpy_chk@plt+0x2578>
   13508:	mov	r1, #0
   1350c:	mov	r4, #2
   13510:	cmp	r5, #0
   13514:	mov	r0, r2
   13518:	mov	r3, #0
   1351c:	str	r1, [sp, #84]	; 0x54
   13520:	beq	12368 <__mempcpy_chk@plt+0x12c4>
   13524:	b	13620 <__mempcpy_chk@plt+0x257c>
   13528:	movw	r0, #24522	; 0x5fca
   1352c:	movt	r0, #1
   13530:	str	r0, [sp, #76]	; 0x4c
   13534:	mov	r9, #0
   13538:	tst	r8, #1
   1353c:	beq	12600 <__mempcpy_chk@plt+0x155c>
   13540:	b	12740 <__mempcpy_chk@plt+0x169c>
   13544:	ldr	r1, [sp, #88]	; 0x58
   13548:	mov	r0, #2
   1354c:	tst	r1, #1
   13550:	movwne	r0, #4
   13554:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13558:	ldr	r1, [fp, #12]
   1355c:	cmp	r2, #2
   13560:	moveq	r2, r0
   13564:	b	1359c <__mempcpy_chk@plt+0x24f8>
   13568:	ldr	ip, [fp, #-84]	; 0xffffffac
   1356c:	ldr	lr, [fp, #-80]	; 0xffffffb0
   13570:	ldr	r1, [fp, #12]
   13574:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13578:	b	1359c <__mempcpy_chk@plt+0x24f8>
   1357c:	ldr	r1, [sp, #88]	; 0x58
   13580:	ldr	lr, [fp, #-80]	; 0xffffffb0
   13584:	ldr	r5, [sp, #28]
   13588:	mov	r0, #2
   1358c:	tst	r1, #1
   13590:	ldr	r1, [fp, #12]
   13594:	movwne	r0, #4
   13598:	mov	r2, r0
   1359c:	mov	r0, #0
   135a0:	bic	r1, r1, #2
   135a4:	str	r2, [sp]
   135a8:	mov	r2, lr
   135ac:	str	r0, [sp, #8]
   135b0:	ldr	r0, [sp, #72]	; 0x48
   135b4:	str	r1, [sp, #4]
   135b8:	mov	r1, r5
   135bc:	str	r0, [sp, #12]
   135c0:	ldr	r0, [sp, #76]	; 0x4c
   135c4:	str	r0, [sp, #16]
   135c8:	mov	r0, ip
   135cc:	mov	r3, r7
   135d0:	bl	122dc <__mempcpy_chk@plt+0x1238>
   135d4:	mov	r9, r0
   135d8:	mov	r0, r9
   135dc:	sub	sp, fp, #28
   135e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   135e4:	mov	r0, #5
   135e8:	ldr	r1, [sp, #56]	; 0x38
   135ec:	ldr	r2, [fp, #-80]	; 0xffffffb0
   135f0:	str	r0, [sp]
   135f4:	ldr	r0, [fp, #12]
   135f8:	str	r0, [sp, #4]
   135fc:	ldr	r0, [fp, #16]
   13600:	str	r0, [sp, #8]
   13604:	ldr	r0, [sp, #72]	; 0x48
   13608:	str	r0, [sp, #12]
   1360c:	ldr	r0, [sp, #76]	; 0x4c
   13610:	str	r0, [sp, #16]
   13614:	ldr	r0, [fp, #-84]	; 0xffffffac
   13618:	b	135cc <__mempcpy_chk@plt+0x2528>
   1361c:	mov	r3, #0
   13620:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13624:	cmp	r1, #0
   13628:	beq	13664 <__mempcpy_chk@plt+0x25c0>
   1362c:	ldr	r2, [fp, #-84]	; 0xffffffac
   13630:	tst	r3, #1
   13634:	bne	13668 <__mempcpy_chk@plt+0x25c4>
   13638:	ldrb	r0, [r1]
   1363c:	cmp	r0, #0
   13640:	beq	13668 <__mempcpy_chk@plt+0x25c4>
   13644:	add	r1, r1, #1
   13648:	cmp	r9, r5
   1364c:	strbcc	r0, [r2, r9]
   13650:	add	r9, r9, #1
   13654:	ldrb	r0, [r1], #1
   13658:	cmp	r0, #0
   1365c:	bne	13648 <__mempcpy_chk@plt+0x25a4>
   13660:	b	13668 <__mempcpy_chk@plt+0x25c4>
   13664:	ldr	r2, [fp, #-84]	; 0xffffffac
   13668:	cmp	r9, r5
   1366c:	movcc	r0, #0
   13670:	strbcc	r0, [r2, r9]
   13674:	mov	r0, r9
   13678:	sub	sp, fp, #28
   1367c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13680:	mov	r0, #4
   13684:	b	13554 <__mempcpy_chk@plt+0x24b0>
   13688:	bl	11074 <abort@plt>
   1368c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13690:	add	fp, sp, #28
   13694:	sub	sp, sp, #28
   13698:	movw	r5, #29032	; 0x7168
   1369c:	cmp	r2, #0
   136a0:	mov	r4, r1
   136a4:	mov	r7, r0
   136a8:	str	r0, [sp, #20]
   136ac:	movt	r5, #2
   136b0:	movne	r5, r2
   136b4:	bl	10fb4 <__errno_location@plt>
   136b8:	mov	sl, r0
   136bc:	ldr	r2, [r5, #40]	; 0x28
   136c0:	ldr	r3, [r5, #44]	; 0x2c
   136c4:	ldm	r5, {r0, r1}
   136c8:	orr	r8, r1, #1
   136cc:	add	r9, r5, #8
   136d0:	mov	r1, #0
   136d4:	ldr	r6, [sl]
   136d8:	stm	sp, {r0, r8, r9}
   136dc:	mov	r0, #0
   136e0:	str	r2, [sp, #12]
   136e4:	str	r3, [sp, #16]
   136e8:	mov	r2, r7
   136ec:	mov	r3, r4
   136f0:	str	r6, [sp, #24]
   136f4:	mov	r6, r4
   136f8:	bl	122dc <__mempcpy_chk@plt+0x1238>
   136fc:	add	r7, r0, #1
   13700:	mov	r0, r7
   13704:	bl	14bac <__mempcpy_chk@plt+0x3b08>
   13708:	mov	r4, r0
   1370c:	ldr	r0, [r5]
   13710:	ldr	r2, [r5, #44]	; 0x2c
   13714:	ldr	r1, [r5, #40]	; 0x28
   13718:	mov	r3, r6
   1371c:	stm	sp, {r0, r8, r9}
   13720:	str	r2, [sp, #16]
   13724:	ldr	r2, [sp, #20]
   13728:	str	r1, [sp, #12]
   1372c:	mov	r0, r4
   13730:	mov	r1, r7
   13734:	bl	122dc <__mempcpy_chk@plt+0x1238>
   13738:	ldr	r0, [sp, #24]
   1373c:	str	r0, [sl]
   13740:	mov	r0, r4
   13744:	sub	sp, fp, #28
   13748:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1374c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13750:	add	fp, sp, #28
   13754:	sub	sp, sp, #36	; 0x24
   13758:	movw	r8, #29032	; 0x7168
   1375c:	cmp	r3, #0
   13760:	mov	r4, r2
   13764:	str	r2, [sp, #24]
   13768:	mov	r5, r1
   1376c:	mov	r6, r0
   13770:	str	r0, [sp, #20]
   13774:	movt	r8, #2
   13778:	movne	r8, r3
   1377c:	bl	10fb4 <__errno_location@plt>
   13780:	str	r0, [sp, #28]
   13784:	ldr	r1, [r8, #40]	; 0x28
   13788:	ldr	r2, [r8, #44]	; 0x2c
   1378c:	ldr	r7, [r0]
   13790:	cmp	r4, #0
   13794:	add	sl, r8, #8
   13798:	mov	r0, #0
   1379c:	ldm	r8, {r3, r9}
   137a0:	orreq	r9, r9, #1
   137a4:	stm	sp, {r3, r9, sl}
   137a8:	str	r1, [sp, #12]
   137ac:	str	r2, [sp, #16]
   137b0:	mov	r1, #0
   137b4:	mov	r2, r6
   137b8:	mov	r3, r5
   137bc:	str	r7, [sp, #32]
   137c0:	mov	r7, r5
   137c4:	bl	122dc <__mempcpy_chk@plt+0x1238>
   137c8:	add	r4, r0, #1
   137cc:	mov	r5, r0
   137d0:	mov	r0, r4
   137d4:	bl	14bac <__mempcpy_chk@plt+0x3b08>
   137d8:	mov	r6, r0
   137dc:	ldr	r0, [r8]
   137e0:	ldr	r2, [r8, #44]	; 0x2c
   137e4:	ldr	r1, [r8, #40]	; 0x28
   137e8:	mov	r3, r7
   137ec:	stm	sp, {r0, r9, sl}
   137f0:	str	r2, [sp, #16]
   137f4:	ldr	r2, [sp, #20]
   137f8:	str	r1, [sp, #12]
   137fc:	mov	r0, r6
   13800:	mov	r1, r4
   13804:	bl	122dc <__mempcpy_chk@plt+0x1238>
   13808:	ldr	r0, [sp, #24]
   1380c:	ldr	r1, [sp, #32]
   13810:	ldr	r2, [sp, #28]
   13814:	cmp	r0, #0
   13818:	str	r1, [r2]
   1381c:	strne	r5, [r0]
   13820:	mov	r0, r6
   13824:	sub	sp, fp, #28
   13828:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1382c:	push	{r4, r5, r6, r7, fp, lr}
   13830:	add	fp, sp, #16
   13834:	movw	r4, #28968	; 0x7128
   13838:	movt	r4, #2
   1383c:	ldrd	r6, [r4]
   13840:	cmp	r7, #2
   13844:	blt	13870 <__mempcpy_chk@plt+0x27cc>
   13848:	add	r5, r6, #12
   1384c:	mov	r7, #0
   13850:	ldr	r0, [r5, r7, lsl #3]
   13854:	bl	11fd0 <__mempcpy_chk@plt+0xf2c>
   13858:	ldr	r1, [r4, #4]
   1385c:	add	r2, r7, #2
   13860:	add	r0, r7, #1
   13864:	mov	r7, r0
   13868:	cmp	r2, r1
   1386c:	blt	13850 <__mempcpy_chk@plt+0x27ac>
   13870:	ldr	r0, [r6, #4]
   13874:	movw	r5, #29080	; 0x7198
   13878:	movt	r5, #2
   1387c:	cmp	r0, r5
   13880:	beq	13894 <__mempcpy_chk@plt+0x27f0>
   13884:	bl	11fd0 <__mempcpy_chk@plt+0xf2c>
   13888:	mov	r0, #256	; 0x100
   1388c:	str	r0, [r4, #8]
   13890:	str	r5, [r4, #12]
   13894:	add	r5, r4, #8
   13898:	cmp	r6, r5
   1389c:	beq	138ac <__mempcpy_chk@plt+0x2808>
   138a0:	mov	r0, r6
   138a4:	bl	11fd0 <__mempcpy_chk@plt+0xf2c>
   138a8:	str	r5, [r4]
   138ac:	mov	r0, #1
   138b0:	str	r0, [r4, #4]
   138b4:	pop	{r4, r5, r6, r7, fp, pc}
   138b8:	movw	r3, #29032	; 0x7168
   138bc:	mvn	r2, #0
   138c0:	movt	r3, #2
   138c4:	b	138c8 <__mempcpy_chk@plt+0x2824>
   138c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   138cc:	add	fp, sp, #28
   138d0:	sub	sp, sp, #44	; 0x2c
   138d4:	mov	r7, r3
   138d8:	str	r2, [sp, #36]	; 0x24
   138dc:	str	r1, [sp, #32]
   138e0:	mov	r5, r0
   138e4:	bl	10fb4 <__errno_location@plt>
   138e8:	cmp	r5, #0
   138ec:	bmi	13a54 <__mempcpy_chk@plt+0x29b0>
   138f0:	cmn	r5, #-2147483647	; 0x80000001
   138f4:	beq	13a54 <__mempcpy_chk@plt+0x29b0>
   138f8:	movw	r8, #28968	; 0x7128
   138fc:	mov	r4, r0
   13900:	ldr	r0, [r0]
   13904:	movt	r8, #2
   13908:	str	r4, [sp, #28]
   1390c:	ldr	r1, [r8, #4]
   13910:	ldr	r6, [r8]
   13914:	str	r0, [sp, #24]
   13918:	cmp	r1, r5
   1391c:	ble	13928 <__mempcpy_chk@plt+0x2884>
   13920:	mov	sl, r6
   13924:	b	13990 <__mempcpy_chk@plt+0x28ec>
   13928:	mov	r0, #8
   1392c:	add	r9, r8, #8
   13930:	str	r1, [fp, #-32]	; 0xffffffe0
   13934:	sub	r1, r5, r1
   13938:	mvn	r3, #-2147483648	; 0x80000000
   1393c:	str	r0, [sp]
   13940:	subs	r0, r6, r9
   13944:	add	r2, r1, #1
   13948:	sub	r1, fp, #32
   1394c:	movne	r0, r6
   13950:	bl	14dac <__mempcpy_chk@plt+0x3d08>
   13954:	mov	sl, r0
   13958:	cmp	r6, r9
   1395c:	str	r0, [r8]
   13960:	bne	1396c <__mempcpy_chk@plt+0x28c8>
   13964:	ldrd	r0, [r8, #8]
   13968:	stm	sl, {r0, r1}
   1396c:	ldr	r1, [r8, #4]
   13970:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13974:	add	r0, sl, r1, lsl #3
   13978:	sub	r1, r2, r1
   1397c:	lsl	r2, r1, #3
   13980:	mov	r1, #0
   13984:	bl	10fd8 <memset@plt>
   13988:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1398c:	str	r0, [r8, #4]
   13990:	mov	r9, sl
   13994:	ldm	r7, {r0, r1}
   13998:	orr	r8, r1, #1
   1399c:	add	r1, r7, #8
   139a0:	ldr	r2, [r7, #40]	; 0x28
   139a4:	ldr	r3, [r7, #44]	; 0x2c
   139a8:	ldr	r6, [r9, r5, lsl #3]!
   139ac:	str	r1, [sp, #20]
   139b0:	ldr	r4, [r9, #4]!
   139b4:	stm	sp, {r0, r8}
   139b8:	add	r0, sp, #8
   139bc:	stm	r0, {r1, r2, r3}
   139c0:	ldr	r2, [sp, #32]
   139c4:	ldr	r3, [sp, #36]	; 0x24
   139c8:	mov	r1, r6
   139cc:	mov	r0, r4
   139d0:	bl	122dc <__mempcpy_chk@plt+0x1238>
   139d4:	cmp	r6, r0
   139d8:	bhi	13a3c <__mempcpy_chk@plt+0x2998>
   139dc:	add	r6, r0, #1
   139e0:	movw	r0, #29080	; 0x7198
   139e4:	movt	r0, #2
   139e8:	str	r6, [sl, r5, lsl #3]
   139ec:	cmp	r4, r0
   139f0:	beq	139fc <__mempcpy_chk@plt+0x2958>
   139f4:	mov	r0, r4
   139f8:	bl	11fd0 <__mempcpy_chk@plt+0xf2c>
   139fc:	mov	r0, r6
   13a00:	bl	14bac <__mempcpy_chk@plt+0x3b08>
   13a04:	str	r0, [r9]
   13a08:	mov	r4, r0
   13a0c:	add	r3, sp, #8
   13a10:	ldr	r0, [r7]
   13a14:	ldr	r1, [r7, #40]	; 0x28
   13a18:	ldr	r2, [r7, #44]	; 0x2c
   13a1c:	stm	sp, {r0, r8}
   13a20:	ldr	r0, [sp, #20]
   13a24:	stm	r3, {r0, r1, r2}
   13a28:	ldr	r2, [sp, #32]
   13a2c:	ldr	r3, [sp, #36]	; 0x24
   13a30:	mov	r0, r4
   13a34:	mov	r1, r6
   13a38:	bl	122dc <__mempcpy_chk@plt+0x1238>
   13a3c:	ldr	r1, [sp, #24]
   13a40:	ldr	r0, [sp, #28]
   13a44:	str	r1, [r0]
   13a48:	mov	r0, r4
   13a4c:	sub	sp, fp, #28
   13a50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a54:	bl	11074 <abort@plt>
   13a58:	movw	r3, #29032	; 0x7168
   13a5c:	movt	r3, #2
   13a60:	b	138c8 <__mempcpy_chk@plt+0x2824>
   13a64:	movw	r3, #29032	; 0x7168
   13a68:	mov	r1, r0
   13a6c:	mov	r0, #0
   13a70:	mvn	r2, #0
   13a74:	movt	r3, #2
   13a78:	b	138c8 <__mempcpy_chk@plt+0x2824>
   13a7c:	movw	r3, #29032	; 0x7168
   13a80:	mov	r2, r1
   13a84:	mov	r1, r0
   13a88:	mov	r0, #0
   13a8c:	movt	r3, #2
   13a90:	b	138c8 <__mempcpy_chk@plt+0x2824>
   13a94:	push	{fp, lr}
   13a98:	mov	fp, sp
   13a9c:	sub	sp, sp, #48	; 0x30
   13aa0:	vmov.i32	q8, #0	; 0x00000000
   13aa4:	mov	ip, #32
   13aa8:	mov	r3, sp
   13aac:	mov	lr, r2
   13ab0:	cmp	r1, #10
   13ab4:	add	r2, r3, #16
   13ab8:	vst1.64	{d16-d17}, [r3], ip
   13abc:	vst1.64	{d16-d17}, [r2]
   13ac0:	vst1.64	{d16-d17}, [r3]
   13ac4:	beq	13ae4 <__mempcpy_chk@plt+0x2a40>
   13ac8:	str	r1, [sp]
   13acc:	mov	r3, sp
   13ad0:	mov	r1, lr
   13ad4:	mvn	r2, #0
   13ad8:	bl	138c8 <__mempcpy_chk@plt+0x2824>
   13adc:	mov	sp, fp
   13ae0:	pop	{fp, pc}
   13ae4:	bl	11074 <abort@plt>
   13ae8:	push	{r4, sl, fp, lr}
   13aec:	add	fp, sp, #8
   13af0:	sub	sp, sp, #48	; 0x30
   13af4:	vmov.i32	q8, #0	; 0x00000000
   13af8:	mov	ip, r3
   13afc:	mov	r3, sp
   13b00:	mov	lr, #32
   13b04:	cmp	r1, #10
   13b08:	add	r4, r3, #16
   13b0c:	vst1.64	{d16-d17}, [r3], lr
   13b10:	vst1.64	{d16-d17}, [r4]
   13b14:	vst1.64	{d16-d17}, [r3]
   13b18:	beq	13b38 <__mempcpy_chk@plt+0x2a94>
   13b1c:	str	r1, [sp]
   13b20:	mov	r1, r2
   13b24:	mov	r3, sp
   13b28:	mov	r2, ip
   13b2c:	bl	138c8 <__mempcpy_chk@plt+0x2824>
   13b30:	sub	sp, fp, #8
   13b34:	pop	{r4, sl, fp, pc}
   13b38:	bl	11074 <abort@plt>
   13b3c:	push	{fp, lr}
   13b40:	mov	fp, sp
   13b44:	sub	sp, sp, #48	; 0x30
   13b48:	vmov.i32	q8, #0	; 0x00000000
   13b4c:	mov	r3, sp
   13b50:	mov	ip, #32
   13b54:	cmp	r0, #10
   13b58:	add	r2, r3, #16
   13b5c:	vst1.64	{d16-d17}, [r3], ip
   13b60:	vst1.64	{d16-d17}, [r2]
   13b64:	vst1.64	{d16-d17}, [r3]
   13b68:	beq	13b88 <__mempcpy_chk@plt+0x2ae4>
   13b6c:	str	r0, [sp]
   13b70:	mov	r3, sp
   13b74:	mov	r0, #0
   13b78:	mvn	r2, #0
   13b7c:	bl	138c8 <__mempcpy_chk@plt+0x2824>
   13b80:	mov	sp, fp
   13b84:	pop	{fp, pc}
   13b88:	bl	11074 <abort@plt>
   13b8c:	push	{fp, lr}
   13b90:	mov	fp, sp
   13b94:	sub	sp, sp, #48	; 0x30
   13b98:	vmov.i32	q8, #0	; 0x00000000
   13b9c:	mov	r3, sp
   13ba0:	mov	ip, #32
   13ba4:	cmp	r0, #10
   13ba8:	add	lr, r3, #16
   13bac:	vst1.64	{d16-d17}, [r3], ip
   13bb0:	vst1.64	{d16-d17}, [lr]
   13bb4:	vst1.64	{d16-d17}, [r3]
   13bb8:	beq	13bd4 <__mempcpy_chk@plt+0x2b30>
   13bbc:	str	r0, [sp]
   13bc0:	mov	r3, sp
   13bc4:	mov	r0, #0
   13bc8:	bl	138c8 <__mempcpy_chk@plt+0x2824>
   13bcc:	mov	sp, fp
   13bd0:	pop	{fp, pc}
   13bd4:	bl	11074 <abort@plt>
   13bd8:	push	{r4, sl, fp, lr}
   13bdc:	add	fp, sp, #8
   13be0:	sub	sp, sp, #48	; 0x30
   13be4:	mov	lr, r0
   13be8:	movw	r0, #29032	; 0x7168
   13bec:	mov	ip, r1
   13bf0:	mov	r1, #32
   13bf4:	mov	r4, #1
   13bf8:	movt	r0, #2
   13bfc:	add	r3, r0, #16
   13c00:	vld1.64	{d16-d17}, [r0], r1
   13c04:	vld1.64	{d20-d21}, [r0]
   13c08:	vld1.64	{d18-d19}, [r3]
   13c0c:	mov	r3, sp
   13c10:	add	r0, r3, #32
   13c14:	add	r1, r3, #16
   13c18:	vst1.64	{d20-d21}, [r0]
   13c1c:	mov	r0, #28
   13c20:	vst1.64	{d18-d19}, [r1]
   13c24:	mov	r1, r3
   13c28:	and	r0, r0, r2, lsr #3
   13c2c:	and	r2, r2, #31
   13c30:	vst1.64	{d16-d17}, [r1], r0
   13c34:	ldr	r0, [r1, #8]
   13c38:	bic	r4, r4, r0, lsr r2
   13c3c:	eor	r0, r0, r4, lsl r2
   13c40:	mov	r2, ip
   13c44:	str	r0, [r1, #8]
   13c48:	mov	r0, #0
   13c4c:	mov	r1, lr
   13c50:	bl	138c8 <__mempcpy_chk@plt+0x2824>
   13c54:	sub	sp, fp, #8
   13c58:	pop	{r4, sl, fp, pc}
   13c5c:	push	{fp, lr}
   13c60:	mov	fp, sp
   13c64:	sub	sp, sp, #48	; 0x30
   13c68:	mov	ip, r0
   13c6c:	movw	r0, #29032	; 0x7168
   13c70:	mov	r2, #32
   13c74:	movt	r0, #2
   13c78:	add	r3, r0, #16
   13c7c:	vld1.64	{d16-d17}, [r0], r2
   13c80:	vld1.64	{d20-d21}, [r0]
   13c84:	vld1.64	{d18-d19}, [r3]
   13c88:	mov	r3, sp
   13c8c:	add	r0, r3, #32
   13c90:	add	r2, r3, #16
   13c94:	vst1.64	{d20-d21}, [r0]
   13c98:	mov	r0, #28
   13c9c:	vst1.64	{d18-d19}, [r2]
   13ca0:	mov	r2, r3
   13ca4:	and	r0, r0, r1, lsr #3
   13ca8:	and	r1, r1, #31
   13cac:	vst1.64	{d16-d17}, [r2], r0
   13cb0:	mov	r0, #1
   13cb4:	ldr	lr, [r2, #8]
   13cb8:	bic	r0, r0, lr, lsr r1
   13cbc:	eor	r0, lr, r0, lsl r1
   13cc0:	mov	r1, ip
   13cc4:	str	r0, [r2, #8]
   13cc8:	mov	r0, #0
   13ccc:	mvn	r2, #0
   13cd0:	bl	138c8 <__mempcpy_chk@plt+0x2824>
   13cd4:	mov	sp, fp
   13cd8:	pop	{fp, pc}
   13cdc:	push	{fp, lr}
   13ce0:	mov	fp, sp
   13ce4:	sub	sp, sp, #48	; 0x30
   13ce8:	mov	r1, r0
   13cec:	movw	r0, #29032	; 0x7168
   13cf0:	mov	r3, #32
   13cf4:	movt	r0, #2
   13cf8:	add	r2, r0, #16
   13cfc:	vld1.64	{d16-d17}, [r0], r3
   13d00:	mov	r3, sp
   13d04:	vld1.64	{d18-d19}, [r2]
   13d08:	vld1.64	{d20-d21}, [r0]
   13d0c:	add	r2, r3, #16
   13d10:	add	r0, r3, #32
   13d14:	vst1.64	{d18-d19}, [r2]
   13d18:	vst1.64	{d20-d21}, [r0]
   13d1c:	mov	r0, #12
   13d20:	mov	r2, r3
   13d24:	vst1.64	{d16-d17}, [r2], r0
   13d28:	ldr	r0, [r2]
   13d2c:	orr	r0, r0, #67108864	; 0x4000000
   13d30:	str	r0, [r2]
   13d34:	mov	r0, #0
   13d38:	mvn	r2, #0
   13d3c:	bl	138c8 <__mempcpy_chk@plt+0x2824>
   13d40:	mov	sp, fp
   13d44:	pop	{fp, pc}
   13d48:	push	{fp, lr}
   13d4c:	mov	fp, sp
   13d50:	sub	sp, sp, #48	; 0x30
   13d54:	mov	ip, r1
   13d58:	mov	r1, r0
   13d5c:	movw	r0, #29032	; 0x7168
   13d60:	mov	r2, #32
   13d64:	movt	r0, #2
   13d68:	add	r3, r0, #16
   13d6c:	vld1.64	{d16-d17}, [r0], r2
   13d70:	vld1.64	{d18-d19}, [r3]
   13d74:	vld1.64	{d20-d21}, [r0]
   13d78:	mov	r3, sp
   13d7c:	add	r2, r3, #16
   13d80:	add	r0, r3, #32
   13d84:	vst1.64	{d18-d19}, [r2]
   13d88:	vst1.64	{d20-d21}, [r0]
   13d8c:	mov	r0, #12
   13d90:	mov	r2, r3
   13d94:	vst1.64	{d16-d17}, [r2], r0
   13d98:	ldr	r0, [r2]
   13d9c:	orr	r0, r0, #67108864	; 0x4000000
   13da0:	str	r0, [r2]
   13da4:	mov	r0, #0
   13da8:	mov	r2, ip
   13dac:	bl	138c8 <__mempcpy_chk@plt+0x2824>
   13db0:	mov	sp, fp
   13db4:	pop	{fp, pc}
   13db8:	push	{r4, sl, fp, lr}
   13dbc:	add	fp, sp, #8
   13dc0:	sub	sp, sp, #96	; 0x60
   13dc4:	vmov.i32	q8, #0	; 0x00000000
   13dc8:	mov	ip, r2
   13dcc:	mov	r2, sp
   13dd0:	mov	r4, #28
   13dd4:	cmp	r1, #10
   13dd8:	mov	r3, r2
   13ddc:	add	lr, r2, #16
   13de0:	vst1.64	{d16-d17}, [r3], r4
   13de4:	vst1.64	{d16-d17}, [lr]
   13de8:	vst1.32	{d16-d17}, [r3]
   13dec:	beq	13e3c <__mempcpy_chk@plt+0x2d98>
   13df0:	vld1.64	{d16-d17}, [r2], r4
   13df4:	vld1.64	{d18-d19}, [lr]
   13df8:	add	r3, sp, #48	; 0x30
   13dfc:	vld1.32	{d20-d21}, [r2]
   13e00:	add	r2, r3, #20
   13e04:	add	r4, r3, #4
   13e08:	vst1.32	{d18-d19}, [r2]
   13e0c:	add	r2, r3, #32
   13e10:	vst1.32	{d16-d17}, [r4]
   13e14:	vst1.32	{d20-d21}, [r2]
   13e18:	str	r1, [sp, #48]	; 0x30
   13e1c:	mvn	r2, #0
   13e20:	ldr	r1, [sp, #60]	; 0x3c
   13e24:	orr	r1, r1, #67108864	; 0x4000000
   13e28:	str	r1, [sp, #60]	; 0x3c
   13e2c:	mov	r1, ip
   13e30:	bl	138c8 <__mempcpy_chk@plt+0x2824>
   13e34:	sub	sp, fp, #8
   13e38:	pop	{r4, sl, fp, pc}
   13e3c:	bl	11074 <abort@plt>
   13e40:	push	{r4, r5, r6, sl, fp, lr}
   13e44:	add	fp, sp, #16
   13e48:	sub	sp, sp, #48	; 0x30
   13e4c:	mov	ip, r3
   13e50:	movw	r3, #29032	; 0x7168
   13e54:	mov	r6, #32
   13e58:	cmp	r1, #0
   13e5c:	mov	r4, sp
   13e60:	movt	r3, #2
   13e64:	cmpne	r2, #0
   13e68:	add	r5, r4, #16
   13e6c:	add	lr, r3, #16
   13e70:	vld1.64	{d16-d17}, [r3], r6
   13e74:	vld1.64	{d18-d19}, [lr]
   13e78:	vld1.64	{d20-d21}, [r3]
   13e7c:	mov	r3, #10
   13e80:	vst1.64	{d16-d17}, [r4], r6
   13e84:	vst1.64	{d18-d19}, [r5]
   13e88:	vst1.64	{d20-d21}, [r4]
   13e8c:	str	r3, [sp]
   13e90:	bne	13e98 <__mempcpy_chk@plt+0x2df4>
   13e94:	bl	11074 <abort@plt>
   13e98:	str	r2, [sp, #44]	; 0x2c
   13e9c:	str	r1, [sp, #40]	; 0x28
   13ea0:	mov	r3, sp
   13ea4:	mov	r1, ip
   13ea8:	mvn	r2, #0
   13eac:	bl	138c8 <__mempcpy_chk@plt+0x2824>
   13eb0:	sub	sp, fp, #16
   13eb4:	pop	{r4, r5, r6, sl, fp, pc}
   13eb8:	push	{r4, r5, r6, sl, fp, lr}
   13ebc:	add	fp, sp, #16
   13ec0:	sub	sp, sp, #48	; 0x30
   13ec4:	mov	lr, r3
   13ec8:	movw	r3, #29032	; 0x7168
   13ecc:	mov	r6, #32
   13ed0:	cmp	r1, #0
   13ed4:	mov	r4, sp
   13ed8:	movt	r3, #2
   13edc:	cmpne	r2, #0
   13ee0:	add	r5, r4, #16
   13ee4:	add	ip, r3, #16
   13ee8:	vld1.64	{d16-d17}, [r3], r6
   13eec:	vld1.64	{d18-d19}, [ip]
   13ef0:	vld1.64	{d20-d21}, [r3]
   13ef4:	mov	r3, #10
   13ef8:	vst1.64	{d16-d17}, [r4], r6
   13efc:	vst1.64	{d18-d19}, [r5]
   13f00:	vst1.64	{d20-d21}, [r4]
   13f04:	str	r3, [sp]
   13f08:	bne	13f10 <__mempcpy_chk@plt+0x2e6c>
   13f0c:	bl	11074 <abort@plt>
   13f10:	ldr	ip, [fp, #8]
   13f14:	str	r2, [sp, #44]	; 0x2c
   13f18:	str	r1, [sp, #40]	; 0x28
   13f1c:	mov	r3, sp
   13f20:	mov	r1, lr
   13f24:	mov	r2, ip
   13f28:	bl	138c8 <__mempcpy_chk@plt+0x2824>
   13f2c:	sub	sp, fp, #16
   13f30:	pop	{r4, r5, r6, sl, fp, pc}
   13f34:	push	{r4, sl, fp, lr}
   13f38:	add	fp, sp, #8
   13f3c:	sub	sp, sp, #48	; 0x30
   13f40:	movw	r3, #29032	; 0x7168
   13f44:	mov	lr, #32
   13f48:	mov	ip, r2
   13f4c:	cmp	r0, #0
   13f50:	movt	r3, #2
   13f54:	cmpne	r1, #0
   13f58:	add	r2, r3, #16
   13f5c:	vld1.64	{d16-d17}, [r3], lr
   13f60:	vld1.64	{d20-d21}, [r3]
   13f64:	vld1.64	{d18-d19}, [r2]
   13f68:	mov	r2, sp
   13f6c:	add	r4, r2, #16
   13f70:	vst1.64	{d16-d17}, [r2], lr
   13f74:	vst1.64	{d20-d21}, [r2]
   13f78:	mov	r2, #10
   13f7c:	vst1.64	{d18-d19}, [r4]
   13f80:	str	r2, [sp]
   13f84:	bne	13f8c <__mempcpy_chk@plt+0x2ee8>
   13f88:	bl	11074 <abort@plt>
   13f8c:	str	r1, [sp, #44]	; 0x2c
   13f90:	str	r0, [sp, #40]	; 0x28
   13f94:	mov	r3, sp
   13f98:	mov	r0, #0
   13f9c:	mov	r1, ip
   13fa0:	mvn	r2, #0
   13fa4:	bl	138c8 <__mempcpy_chk@plt+0x2824>
   13fa8:	sub	sp, fp, #8
   13fac:	pop	{r4, sl, fp, pc}
   13fb0:	push	{r4, r5, fp, lr}
   13fb4:	add	fp, sp, #8
   13fb8:	sub	sp, sp, #48	; 0x30
   13fbc:	mov	ip, r3
   13fc0:	movw	r3, #29032	; 0x7168
   13fc4:	mov	r4, #32
   13fc8:	mov	lr, r2
   13fcc:	cmp	r0, #0
   13fd0:	movt	r3, #2
   13fd4:	cmpne	r1, #0
   13fd8:	add	r2, r3, #16
   13fdc:	vld1.64	{d16-d17}, [r3], r4
   13fe0:	vld1.64	{d20-d21}, [r3]
   13fe4:	vld1.64	{d18-d19}, [r2]
   13fe8:	mov	r2, sp
   13fec:	add	r5, r2, #16
   13ff0:	vst1.64	{d16-d17}, [r2], r4
   13ff4:	vst1.64	{d20-d21}, [r2]
   13ff8:	mov	r2, #10
   13ffc:	vst1.64	{d18-d19}, [r5]
   14000:	str	r2, [sp]
   14004:	bne	1400c <__mempcpy_chk@plt+0x2f68>
   14008:	bl	11074 <abort@plt>
   1400c:	str	r1, [sp, #44]	; 0x2c
   14010:	str	r0, [sp, #40]	; 0x28
   14014:	mov	r3, sp
   14018:	mov	r0, #0
   1401c:	mov	r1, lr
   14020:	mov	r2, ip
   14024:	bl	138c8 <__mempcpy_chk@plt+0x2824>
   14028:	sub	sp, fp, #8
   1402c:	pop	{r4, r5, fp, pc}
   14030:	movw	r3, #28920	; 0x70f8
   14034:	movt	r3, #2
   14038:	b	138c8 <__mempcpy_chk@plt+0x2824>
   1403c:	movw	r3, #28920	; 0x70f8
   14040:	mov	r2, r1
   14044:	mov	r1, r0
   14048:	mov	r0, #0
   1404c:	movt	r3, #2
   14050:	b	138c8 <__mempcpy_chk@plt+0x2824>
   14054:	movw	r3, #28920	; 0x70f8
   14058:	mvn	r2, #0
   1405c:	movt	r3, #2
   14060:	b	138c8 <__mempcpy_chk@plt+0x2824>
   14064:	movw	r3, #28920	; 0x70f8
   14068:	mov	r1, r0
   1406c:	mov	r0, #0
   14070:	mvn	r2, #0
   14074:	movt	r3, #2
   14078:	b	138c8 <__mempcpy_chk@plt+0x2824>
   1407c:	push	{fp, lr}
   14080:	mov	fp, sp
   14084:	sub	sp, sp, #8
   14088:	str	r2, [sp, #4]
   1408c:	ldr	r2, [fp, #8]
   14090:	str	r2, [sp]
   14094:	movw	r2, #24612	; 0x6024
   14098:	movt	r2, #1
   1409c:	ldr	r3, [r2, r3, lsl #2]
   140a0:	add	r2, sp, #4
   140a4:	bl	14120 <__mempcpy_chk@plt+0x307c>
   140a8:	mov	sp, fp
   140ac:	pop	{fp, pc}
   140b0:	ldr	r1, [r1]
   140b4:	mov	r2, #384	; 0x180
   140b8:	orr	r1, r1, #194	; 0xc2
   140bc:	bic	r1, r1, #1
   140c0:	b	10f24 <open64@plt>
   140c4:	mov	r1, #448	; 0x1c0
   140c8:	b	10fcc <mkdir@plt>
   140cc:	push	{r4, sl, fp, lr}
   140d0:	add	fp, sp, #8
   140d4:	sub	sp, sp, #104	; 0x68
   140d8:	mov	r1, r0
   140dc:	mov	r2, sp
   140e0:	mov	r0, #3
   140e4:	bl	1108c <__lxstat64@plt>
   140e8:	mov	r4, r0
   140ec:	bl	10fb4 <__errno_location@plt>
   140f0:	cmp	r4, #0
   140f4:	beq	14104 <__mempcpy_chk@plt+0x3060>
   140f8:	ldr	r1, [r0]
   140fc:	cmp	r1, #75	; 0x4b
   14100:	bne	1410c <__mempcpy_chk@plt+0x3068>
   14104:	mov	r1, #17
   14108:	str	r1, [r0]
   1410c:	ldr	r0, [r0]
   14110:	subs	r0, r0, #2
   14114:	mvnne	r0, #0
   14118:	sub	sp, fp, #8
   1411c:	pop	{r4, sl, fp, pc}
   14120:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14124:	add	fp, sp, #28
   14128:	sub	sp, sp, #68	; 0x44
   1412c:	mov	r8, r3
   14130:	mov	r9, r2
   14134:	mov	r5, r1
   14138:	mov	r6, r0
   1413c:	bl	10fb4 <__errno_location@plt>
   14140:	mov	r7, r0
   14144:	ldr	sl, [r0]
   14148:	mov	r0, #0
   1414c:	str	r0, [sp, #44]	; 0x2c
   14150:	add	r0, sp, #40	; 0x28
   14154:	lsr	r0, r0, #3
   14158:	str	r0, [sp, #40]	; 0x28
   1415c:	ldr	r0, [fp, #8]
   14160:	add	r4, r0, r5
   14164:	mov	r5, r0
   14168:	mov	r0, r6
   1416c:	bl	10fa8 <strlen@plt>
   14170:	cmp	r0, r4
   14174:	bcc	14198 <__mempcpy_chk@plt+0x30f4>
   14178:	movw	r1, #23480	; 0x5bb8
   1417c:	sub	r0, r0, r4
   14180:	movt	r1, #1
   14184:	add	r0, r6, r0
   14188:	str	r0, [sp, #32]
   1418c:	bl	11098 <strspn@plt>
   14190:	cmp	r0, r5
   14194:	bcs	141ac <__mempcpy_chk@plt+0x3108>
   14198:	mov	r0, #22
   1419c:	str	r0, [r7]
   141a0:	mvn	r0, #0
   141a4:	sub	sp, fp, #28
   141a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141ac:	cmp	r5, #0
   141b0:	str	r6, [sp, #20]
   141b4:	str	sl, [sp, #4]
   141b8:	beq	14410 <__mempcpy_chk@plt+0x336c>
   141bc:	movw	r0, #16588	; 0x40cc
   141c0:	movw	r4, #39131	; 0x98db
   141c4:	movw	r6, #21503	; 0x53ff
   141c8:	mov	r2, #0
   141cc:	mov	r1, #0
   141d0:	str	r7, [sp, #8]
   141d4:	str	r8, [sp, #16]
   141d8:	str	r9, [sp, #12]
   141dc:	movt	r0, #1
   141e0:	movt	r4, #62617	; 0xf499
   141e4:	movt	r6, #2727	; 0xaa7
   141e8:	sub	r0, r8, r0
   141ec:	clz	r0, r0
   141f0:	lsr	r0, r0, #5
   141f4:	str	r0, [sp, #28]
   141f8:	mov	sl, #0
   141fc:	sub	r7, fp, #40	; 0x28
   14200:	str	r1, [sp, #24]
   14204:	ldr	r8, [sp, #40]	; 0x28
   14208:	ldr	r9, [sp, #44]	; 0x2c
   1420c:	cmp	r2, #0
   14210:	beq	14278 <__mempcpy_chk@plt+0x31d4>
   14214:	str	r2, [sp, #36]	; 0x24
   14218:	mov	r0, r8
   1421c:	mov	r1, r9
   14220:	mov	r2, #62	; 0x3e
   14224:	mov	r3, #0
   14228:	bl	153b8 <__mempcpy_chk@plt+0x4314>
   1422c:	rsb	r2, r0, r0, lsl #5
   14230:	movw	r3, #24624	; 0x6030
   14234:	movt	r3, #1
   14238:	sub	r2, r8, r2, lsl #1
   1423c:	ldrb	r2, [r3, r2]
   14240:	ldr	r3, [sp, #32]
   14244:	strb	r2, [r3, sl]
   14248:	ldr	r2, [sp, #36]	; 0x24
   1424c:	str	r0, [sp, #40]	; 0x28
   14250:	ldr	r0, [fp, #8]
   14254:	add	sl, sl, #1
   14258:	str	r1, [sp, #44]	; 0x2c
   1425c:	sub	r2, r2, #1
   14260:	cmp	sl, r0
   14264:	beq	143c0 <__mempcpy_chk@plt+0x331c>
   14268:	ldr	r8, [sp, #40]	; 0x28
   1426c:	ldr	r9, [sp, #44]	; 0x2c
   14270:	cmp	r2, #0
   14274:	bne	14214 <__mempcpy_chk@plt+0x3170>
   14278:	ldr	r0, [sp, #28]
   1427c:	tst	r0, #1
   14280:	beq	142a8 <__mempcpy_chk@plt+0x3204>
   14284:	mov	r0, r7
   14288:	mov	r1, #8
   1428c:	mov	r2, #1
   14290:	bl	1105c <getrandom@plt>
   14294:	cmp	r0, #8
   14298:	bne	142a8 <__mempcpy_chk@plt+0x3204>
   1429c:	ldr	r8, [fp, #-40]	; 0xffffffd8
   142a0:	ldr	r9, [fp, #-36]	; 0xffffffdc
   142a4:	b	142f0 <__mempcpy_chk@plt+0x324c>
   142a8:	mov	r0, #1
   142ac:	add	r1, sp, #48	; 0x30
   142b0:	bl	10e7c <clock_gettime@plt>
   142b4:	ldr	r0, [sp, #52]	; 0x34
   142b8:	movw	r2, #45309	; 0xb0fd
   142bc:	movw	r5, #12006	; 0x2ee6
   142c0:	movt	r2, #34736	; 0x87b0
   142c4:	movt	r5, #10171	; 0x27bb
   142c8:	mov	ip, r2
   142cc:	eor	r1, r8, r0
   142d0:	eor	r0, r9, r0, asr #31
   142d4:	umull	r2, r3, r1, r2
   142d8:	mul	r0, r0, ip
   142dc:	mla	r1, r1, r5, r3
   142e0:	movw	r3, #62253	; 0xf32d
   142e4:	movt	r3, #46340	; 0xb504
   142e8:	adds	r8, r2, r3
   142ec:	adc	r9, r1, r0
   142f0:	subs	r0, r6, r8
   142f4:	str	r8, [sp, #40]	; 0x28
   142f8:	str	r9, [sp, #44]	; 0x2c
   142fc:	sbcs	r0, r4, r9
   14300:	bcs	143ac <__mempcpy_chk@plt+0x3308>
   14304:	mov	r0, #10
   14308:	str	r0, [sp, #36]	; 0x24
   1430c:	mov	r0, #1
   14310:	str	r0, [sp, #28]
   14314:	b	14334 <__mempcpy_chk@plt+0x3290>
   14318:	ldr	r8, [fp, #-40]	; 0xffffffd8
   1431c:	ldr	r9, [fp, #-36]	; 0xffffffdc
   14320:	subs	r0, r6, r8
   14324:	str	r8, [sp, #40]	; 0x28
   14328:	str	r9, [sp, #44]	; 0x2c
   1432c:	sbcs	r0, r4, r9
   14330:	bcs	14218 <__mempcpy_chk@plt+0x3174>
   14334:	mov	r0, r7
   14338:	mov	r1, #8
   1433c:	mov	r2, #1
   14340:	bl	1105c <getrandom@plt>
   14344:	cmp	r0, #8
   14348:	beq	14318 <__mempcpy_chk@plt+0x3274>
   1434c:	mov	r0, #1
   14350:	add	r1, sp, #48	; 0x30
   14354:	bl	10e7c <clock_gettime@plt>
   14358:	ldr	r0, [sp, #52]	; 0x34
   1435c:	movw	r2, #45309	; 0xb0fd
   14360:	mov	r5, r6
   14364:	mov	r6, r4
   14368:	movw	r4, #12006	; 0x2ee6
   1436c:	movt	r2, #34736	; 0x87b0
   14370:	movt	r4, #10171	; 0x27bb
   14374:	mov	r7, r2
   14378:	eor	r1, r8, r0
   1437c:	eor	r0, r9, r0, asr #31
   14380:	umull	r2, r3, r1, r2
   14384:	mul	r0, r0, r7
   14388:	sub	r7, fp, #40	; 0x28
   1438c:	mla	r1, r1, r4, r3
   14390:	movw	r3, #62253	; 0xf32d
   14394:	mov	r4, r6
   14398:	mov	r6, r5
   1439c:	movt	r3, #46340	; 0xb504
   143a0:	adds	r8, r2, r3
   143a4:	adc	r9, r1, r0
   143a8:	b	14320 <__mempcpy_chk@plt+0x327c>
   143ac:	mov	r0, #10
   143b0:	str	r0, [sp, #36]	; 0x24
   143b4:	mov	r0, #1
   143b8:	str	r0, [sp, #28]
   143bc:	b	14218 <__mempcpy_chk@plt+0x3174>
   143c0:	ldr	r9, [sp, #12]
   143c4:	ldr	r0, [sp, #20]
   143c8:	ldr	r8, [sp, #16]
   143cc:	mov	r5, r2
   143d0:	mov	r1, r9
   143d4:	blx	r8
   143d8:	cmn	r0, #1
   143dc:	bgt	14454 <__mempcpy_chk@plt+0x33b0>
   143e0:	ldr	r7, [sp, #8]
   143e4:	ldr	r0, [r7]
   143e8:	cmp	r0, #17
   143ec:	bne	141a0 <__mempcpy_chk@plt+0x30fc>
   143f0:	ldr	r1, [sp, #24]
   143f4:	movw	r0, #41720	; 0xa2f8
   143f8:	mov	r2, r5
   143fc:	movt	r0, #3
   14400:	add	r1, r1, #1
   14404:	cmp	r1, r0
   14408:	bne	141f8 <__mempcpy_chk@plt+0x3154>
   1440c:	b	14440 <__mempcpy_chk@plt+0x339c>
   14410:	movw	r4, #41720	; 0xa2f8
   14414:	movt	r4, #3
   14418:	ldr	r0, [sp, #20]
   1441c:	mov	r1, r9
   14420:	blx	r8
   14424:	cmp	r0, #0
   14428:	bpl	14458 <__mempcpy_chk@plt+0x33b4>
   1442c:	ldr	r0, [r7]
   14430:	cmp	r0, #17
   14434:	bne	141a0 <__mempcpy_chk@plt+0x30fc>
   14438:	subs	r4, r4, #1
   1443c:	bne	14418 <__mempcpy_chk@plt+0x3374>
   14440:	mov	r0, #17
   14444:	str	r0, [r7]
   14448:	mvn	r0, #0
   1444c:	sub	sp, fp, #28
   14450:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14454:	ldr	r7, [sp, #8]
   14458:	ldr	r1, [sp, #4]
   1445c:	str	r1, [r7]
   14460:	sub	sp, fp, #28
   14464:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14468:	push	{fp, lr}
   1446c:	mov	fp, sp
   14470:	sub	sp, sp, #8
   14474:	str	r2, [sp, #4]
   14478:	mov	r2, #6
   1447c:	str	r2, [sp]
   14480:	movw	r2, #24612	; 0x6024
   14484:	movt	r2, #1
   14488:	ldr	r3, [r2, r3, lsl #2]
   1448c:	add	r2, sp, #4
   14490:	bl	14120 <__mempcpy_chk@plt+0x307c>
   14494:	mov	sp, fp
   14498:	pop	{fp, pc}
   1449c:	push	{fp, lr}
   144a0:	mov	fp, sp
   144a4:	sub	sp, sp, #8
   144a8:	mov	ip, #6
   144ac:	str	ip, [sp]
   144b0:	bl	14120 <__mempcpy_chk@plt+0x307c>
   144b4:	mov	sp, fp
   144b8:	pop	{fp, pc}
   144bc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   144c0:	add	fp, sp, #24
   144c4:	sub	sp, sp, #32
   144c8:	ldr	r6, [fp, #12]
   144cc:	ldr	r7, [fp, #8]
   144d0:	mov	r4, r2
   144d4:	mov	r8, r0
   144d8:	cmp	r1, #0
   144dc:	beq	14504 <__mempcpy_chk@plt+0x3460>
   144e0:	movw	r2, #24687	; 0x606f
   144e4:	mov	r5, r1
   144e8:	str	r3, [sp, #4]
   144ec:	str	r4, [sp]
   144f0:	mov	r0, r8
   144f4:	mov	r1, #1
   144f8:	movt	r2, #1
   144fc:	mov	r3, r5
   14500:	b	1451c <__mempcpy_chk@plt+0x3478>
   14504:	movw	r2, #24699	; 0x607b
   14508:	str	r3, [sp]
   1450c:	mov	r0, r8
   14510:	mov	r1, #1
   14514:	mov	r3, r4
   14518:	movt	r2, #1
   1451c:	bl	10ffc <__fprintf_chk@plt>
   14520:	movw	r1, #24706	; 0x6082
   14524:	mov	r0, #0
   14528:	mov	r2, #5
   1452c:	movt	r1, #1
   14530:	bl	10eac <dcgettext@plt>
   14534:	movw	r2, #25424	; 0x6350
   14538:	mov	r3, r0
   1453c:	movw	r0, #2022	; 0x7e6
   14540:	mov	r1, #1
   14544:	movt	r2, #1
   14548:	str	r0, [sp]
   1454c:	mov	r0, r8
   14550:	bl	10ffc <__fprintf_chk@plt>
   14554:	movw	r4, #24082	; 0x5e12
   14558:	mov	r1, r8
   1455c:	movt	r4, #1
   14560:	mov	r0, r4
   14564:	bl	10e40 <fputs_unlocked@plt>
   14568:	movw	r1, #24710	; 0x6086
   1456c:	mov	r0, #0
   14570:	mov	r2, #5
   14574:	movt	r1, #1
   14578:	bl	10eac <dcgettext@plt>
   1457c:	movw	r3, #24881	; 0x6131
   14580:	mov	r2, r0
   14584:	mov	r0, r8
   14588:	mov	r1, #1
   1458c:	movt	r3, #1
   14590:	bl	10ffc <__fprintf_chk@plt>
   14594:	mov	r0, r4
   14598:	mov	r1, r8
   1459c:	bl	10e40 <fputs_unlocked@plt>
   145a0:	cmp	r6, #9
   145a4:	bhi	145e0 <__mempcpy_chk@plt+0x353c>
   145a8:	add	r0, pc, #0
   145ac:	ldr	pc, [r0, r6, lsl #2]
   145b0:	ldrdeq	r4, [r1], -r8
   145b4:	andeq	r4, r1, ip, ror #11
   145b8:	andeq	r4, r1, ip, lsl r6
   145bc:	andeq	r4, r1, r4, asr #12
   145c0:	andeq	r4, r1, ip, ror #12
   145c4:	muleq	r1, r4, r6
   145c8:			; <UNDEFINED> instruction: 0x000146bc
   145cc:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   145d0:	muleq	r1, ip, r7
   145d4:	andeq	r4, r1, r4, asr #14
   145d8:	sub	sp, fp, #24
   145dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   145e0:	movw	r1, #25234	; 0x6292
   145e4:	movt	r1, #1
   145e8:	b	1474c <__mempcpy_chk@plt+0x36a8>
   145ec:	movw	r1, #24915	; 0x6153
   145f0:	mov	r0, #0
   145f4:	mov	r2, #5
   145f8:	movt	r1, #1
   145fc:	bl	10eac <dcgettext@plt>
   14600:	ldr	r3, [r7]
   14604:	mov	r2, r0
   14608:	mov	r0, r8
   1460c:	mov	r1, #1
   14610:	sub	sp, fp, #24
   14614:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14618:	b	10ffc <__fprintf_chk@plt>
   1461c:	movw	r1, #24931	; 0x6163
   14620:	mov	r0, #0
   14624:	mov	r2, #5
   14628:	movt	r1, #1
   1462c:	bl	10eac <dcgettext@plt>
   14630:	mov	r2, r0
   14634:	ldr	r3, [r7]
   14638:	ldr	r0, [r7, #4]
   1463c:	str	r0, [sp]
   14640:	b	14730 <__mempcpy_chk@plt+0x368c>
   14644:	movw	r1, #24954	; 0x617a
   14648:	mov	r0, #0
   1464c:	mov	r2, #5
   14650:	movt	r1, #1
   14654:	bl	10eac <dcgettext@plt>
   14658:	mov	r2, r0
   1465c:	ldr	r3, [r7]
   14660:	ldmib	r7, {r0, r1}
   14664:	stm	sp, {r0, r1}
   14668:	b	14730 <__mempcpy_chk@plt+0x368c>
   1466c:	movw	r1, #24982	; 0x6196
   14670:	mov	r0, #0
   14674:	mov	r2, #5
   14678:	movt	r1, #1
   1467c:	bl	10eac <dcgettext@plt>
   14680:	ldr	r3, [r7]
   14684:	mov	r2, r0
   14688:	ldmib	r7, {r0, r1, r7}
   1468c:	stm	sp, {r0, r1, r7}
   14690:	b	14730 <__mempcpy_chk@plt+0x368c>
   14694:	movw	r1, #25014	; 0x61b6
   14698:	mov	r0, #0
   1469c:	mov	r2, #5
   146a0:	movt	r1, #1
   146a4:	bl	10eac <dcgettext@plt>
   146a8:	ldr	r3, [r7]
   146ac:	mov	r2, r0
   146b0:	ldmib	r7, {r0, r1, r6, r7}
   146b4:	stm	sp, {r0, r1, r6, r7}
   146b8:	b	14730 <__mempcpy_chk@plt+0x368c>
   146bc:	movw	r1, #25050	; 0x61da
   146c0:	mov	r0, #0
   146c4:	mov	r2, #5
   146c8:	movt	r1, #1
   146cc:	bl	10eac <dcgettext@plt>
   146d0:	mov	r2, r0
   146d4:	ldr	r3, [r7]
   146d8:	ldmib	r7, {r0, r1, r6}
   146dc:	ldr	r5, [r7, #16]
   146e0:	ldr	r7, [r7, #20]
   146e4:	stm	sp, {r0, r1, r6}
   146e8:	str	r5, [sp, #12]
   146ec:	str	r7, [sp, #16]
   146f0:	b	14730 <__mempcpy_chk@plt+0x368c>
   146f4:	movw	r1, #25090	; 0x6202
   146f8:	mov	r0, #0
   146fc:	mov	r2, #5
   14700:	movt	r1, #1
   14704:	bl	10eac <dcgettext@plt>
   14708:	mov	r2, r0
   1470c:	ldr	r3, [r7]
   14710:	ldmib	r7, {r0, r1, r6}
   14714:	ldr	r5, [r7, #16]
   14718:	ldr	r4, [r7, #20]
   1471c:	ldr	r7, [r7, #24]
   14720:	stm	sp, {r0, r1, r6}
   14724:	str	r5, [sp, #12]
   14728:	str	r4, [sp, #16]
   1472c:	str	r7, [sp, #20]
   14730:	mov	r0, r8
   14734:	mov	r1, #1
   14738:	bl	10ffc <__fprintf_chk@plt>
   1473c:	sub	sp, fp, #24
   14740:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14744:	movw	r1, #25182	; 0x625e
   14748:	movt	r1, #1
   1474c:	mov	r0, #0
   14750:	mov	r2, #5
   14754:	bl	10eac <dcgettext@plt>
   14758:	mov	ip, r0
   1475c:	ldr	r3, [r7]
   14760:	ldr	r0, [r7, #4]
   14764:	ldr	r1, [r7, #8]
   14768:	ldr	r6, [r7, #12]
   1476c:	ldr	r5, [r7, #16]
   14770:	ldr	r4, [r7, #20]
   14774:	ldr	r2, [r7, #24]
   14778:	ldr	lr, [r7, #28]
   1477c:	ldr	r7, [r7, #32]
   14780:	stm	sp, {r0, r1, r6}
   14784:	str	r5, [sp, #12]
   14788:	str	r4, [sp, #16]
   1478c:	str	r2, [sp, #20]
   14790:	str	lr, [sp, #24]
   14794:	str	r7, [sp, #28]
   14798:	b	147e0 <__mempcpy_chk@plt+0x373c>
   1479c:	movw	r1, #25134	; 0x622e
   147a0:	mov	r0, #0
   147a4:	mov	r2, #5
   147a8:	movt	r1, #1
   147ac:	bl	10eac <dcgettext@plt>
   147b0:	mov	ip, r0
   147b4:	ldr	r3, [r7]
   147b8:	ldmib	r7, {r0, r1, r6}
   147bc:	ldr	r5, [r7, #16]
   147c0:	ldr	r4, [r7, #20]
   147c4:	ldr	r2, [r7, #24]
   147c8:	ldr	r7, [r7, #28]
   147cc:	stm	sp, {r0, r1, r6}
   147d0:	str	r5, [sp, #12]
   147d4:	str	r4, [sp, #16]
   147d8:	str	r2, [sp, #20]
   147dc:	str	r7, [sp, #24]
   147e0:	mov	r0, r8
   147e4:	mov	r1, #1
   147e8:	mov	r2, ip
   147ec:	bl	10ffc <__fprintf_chk@plt>
   147f0:	sub	sp, fp, #24
   147f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   147f8:	push	{r4, sl, fp, lr}
   147fc:	add	fp, sp, #8
   14800:	sub	sp, sp, #8
   14804:	ldr	ip, [fp, #8]
   14808:	mov	lr, #0
   1480c:	ldr	r4, [ip, lr, lsl #2]
   14810:	add	lr, lr, #1
   14814:	cmp	r4, #0
   14818:	bne	1480c <__mempcpy_chk@plt+0x3768>
   1481c:	sub	r4, lr, #1
   14820:	str	ip, [sp]
   14824:	str	r4, [sp, #4]
   14828:	bl	144bc <__mempcpy_chk@plt+0x3418>
   1482c:	sub	sp, fp, #8
   14830:	pop	{r4, sl, fp, pc}
   14834:	push	{fp, lr}
   14838:	mov	fp, sp
   1483c:	sub	sp, sp, #48	; 0x30
   14840:	ldr	ip, [fp, #8]
   14844:	ldr	lr, [ip]
   14848:	cmp	lr, #0
   1484c:	str	lr, [sp, #8]
   14850:	beq	148ec <__mempcpy_chk@plt+0x3848>
   14854:	ldr	lr, [ip, #4]
   14858:	cmp	lr, #0
   1485c:	str	lr, [sp, #12]
   14860:	beq	148f4 <__mempcpy_chk@plt+0x3850>
   14864:	ldr	lr, [ip, #8]
   14868:	cmp	lr, #0
   1486c:	str	lr, [sp, #16]
   14870:	beq	148fc <__mempcpy_chk@plt+0x3858>
   14874:	ldr	lr, [ip, #12]
   14878:	cmp	lr, #0
   1487c:	str	lr, [sp, #20]
   14880:	beq	14904 <__mempcpy_chk@plt+0x3860>
   14884:	ldr	lr, [ip, #16]
   14888:	cmp	lr, #0
   1488c:	str	lr, [sp, #24]
   14890:	beq	1490c <__mempcpy_chk@plt+0x3868>
   14894:	ldr	lr, [ip, #20]
   14898:	cmp	lr, #0
   1489c:	str	lr, [sp, #28]
   148a0:	beq	14914 <__mempcpy_chk@plt+0x3870>
   148a4:	ldr	lr, [ip, #24]
   148a8:	cmp	lr, #0
   148ac:	str	lr, [sp, #32]
   148b0:	beq	1491c <__mempcpy_chk@plt+0x3878>
   148b4:	ldr	lr, [ip, #28]
   148b8:	cmp	lr, #0
   148bc:	str	lr, [sp, #36]	; 0x24
   148c0:	beq	14924 <__mempcpy_chk@plt+0x3880>
   148c4:	ldr	lr, [ip, #32]
   148c8:	cmp	lr, #0
   148cc:	str	lr, [sp, #40]	; 0x28
   148d0:	beq	1492c <__mempcpy_chk@plt+0x3888>
   148d4:	ldr	lr, [ip, #36]	; 0x24
   148d8:	mov	ip, #10
   148dc:	cmp	lr, #0
   148e0:	str	lr, [sp, #44]	; 0x2c
   148e4:	movweq	ip, #9
   148e8:	b	14930 <__mempcpy_chk@plt+0x388c>
   148ec:	mov	ip, #0
   148f0:	b	14930 <__mempcpy_chk@plt+0x388c>
   148f4:	mov	ip, #1
   148f8:	b	14930 <__mempcpy_chk@plt+0x388c>
   148fc:	mov	ip, #2
   14900:	b	14930 <__mempcpy_chk@plt+0x388c>
   14904:	mov	ip, #3
   14908:	b	14930 <__mempcpy_chk@plt+0x388c>
   1490c:	mov	ip, #4
   14910:	b	14930 <__mempcpy_chk@plt+0x388c>
   14914:	mov	ip, #5
   14918:	b	14930 <__mempcpy_chk@plt+0x388c>
   1491c:	mov	ip, #6
   14920:	b	14930 <__mempcpy_chk@plt+0x388c>
   14924:	mov	ip, #7
   14928:	b	14930 <__mempcpy_chk@plt+0x388c>
   1492c:	mov	ip, #8
   14930:	add	lr, sp, #8
   14934:	str	ip, [sp, #4]
   14938:	str	lr, [sp]
   1493c:	bl	144bc <__mempcpy_chk@plt+0x3418>
   14940:	mov	sp, fp
   14944:	pop	{fp, pc}
   14948:	push	{fp, lr}
   1494c:	mov	fp, sp
   14950:	sub	sp, sp, #56	; 0x38
   14954:	add	ip, fp, #8
   14958:	str	ip, [sp, #12]
   1495c:	ldr	lr, [fp, #8]
   14960:	cmp	lr, #0
   14964:	str	lr, [sp, #16]
   14968:	beq	14a04 <__mempcpy_chk@plt+0x3960>
   1496c:	ldr	lr, [ip, #4]
   14970:	cmp	lr, #0
   14974:	str	lr, [sp, #20]
   14978:	beq	14a0c <__mempcpy_chk@plt+0x3968>
   1497c:	ldr	lr, [ip, #8]
   14980:	cmp	lr, #0
   14984:	str	lr, [sp, #24]
   14988:	beq	14a14 <__mempcpy_chk@plt+0x3970>
   1498c:	ldr	lr, [ip, #12]
   14990:	cmp	lr, #0
   14994:	str	lr, [sp, #28]
   14998:	beq	14a1c <__mempcpy_chk@plt+0x3978>
   1499c:	ldr	lr, [ip, #16]
   149a0:	cmp	lr, #0
   149a4:	str	lr, [sp, #32]
   149a8:	beq	14a24 <__mempcpy_chk@plt+0x3980>
   149ac:	ldr	lr, [ip, #20]
   149b0:	cmp	lr, #0
   149b4:	str	lr, [sp, #36]	; 0x24
   149b8:	beq	14a2c <__mempcpy_chk@plt+0x3988>
   149bc:	ldr	lr, [ip, #24]
   149c0:	cmp	lr, #0
   149c4:	str	lr, [sp, #40]	; 0x28
   149c8:	beq	14a34 <__mempcpy_chk@plt+0x3990>
   149cc:	ldr	lr, [ip, #28]
   149d0:	cmp	lr, #0
   149d4:	str	lr, [sp, #44]	; 0x2c
   149d8:	beq	14a3c <__mempcpy_chk@plt+0x3998>
   149dc:	ldr	lr, [ip, #32]
   149e0:	cmp	lr, #0
   149e4:	str	lr, [sp, #48]	; 0x30
   149e8:	beq	14a44 <__mempcpy_chk@plt+0x39a0>
   149ec:	ldr	lr, [ip, #36]	; 0x24
   149f0:	mov	ip, #10
   149f4:	cmp	lr, #0
   149f8:	str	lr, [sp, #52]	; 0x34
   149fc:	movweq	ip, #9
   14a00:	b	14a48 <__mempcpy_chk@plt+0x39a4>
   14a04:	mov	ip, #0
   14a08:	b	14a48 <__mempcpy_chk@plt+0x39a4>
   14a0c:	mov	ip, #1
   14a10:	b	14a48 <__mempcpy_chk@plt+0x39a4>
   14a14:	mov	ip, #2
   14a18:	b	14a48 <__mempcpy_chk@plt+0x39a4>
   14a1c:	mov	ip, #3
   14a20:	b	14a48 <__mempcpy_chk@plt+0x39a4>
   14a24:	mov	ip, #4
   14a28:	b	14a48 <__mempcpy_chk@plt+0x39a4>
   14a2c:	mov	ip, #5
   14a30:	b	14a48 <__mempcpy_chk@plt+0x39a4>
   14a34:	mov	ip, #6
   14a38:	b	14a48 <__mempcpy_chk@plt+0x39a4>
   14a3c:	mov	ip, #7
   14a40:	b	14a48 <__mempcpy_chk@plt+0x39a4>
   14a44:	mov	ip, #8
   14a48:	add	lr, sp, #16
   14a4c:	str	ip, [sp, #4]
   14a50:	str	lr, [sp]
   14a54:	bl	144bc <__mempcpy_chk@plt+0x3418>
   14a58:	mov	sp, fp
   14a5c:	pop	{fp, pc}
   14a60:	push	{fp, lr}
   14a64:	mov	fp, sp
   14a68:	movw	r0, #29004	; 0x714c
   14a6c:	movt	r0, #2
   14a70:	ldr	r1, [r0]
   14a74:	movw	r0, #24082	; 0x5e12
   14a78:	movt	r0, #1
   14a7c:	bl	10e40 <fputs_unlocked@plt>
   14a80:	movw	r1, #25294	; 0x62ce
   14a84:	mov	r0, #0
   14a88:	mov	r2, #5
   14a8c:	movt	r1, #1
   14a90:	bl	10eac <dcgettext@plt>
   14a94:	movw	r2, #25314	; 0x62e2
   14a98:	mov	r1, r0
   14a9c:	mov	r0, #1
   14aa0:	movt	r2, #1
   14aa4:	bl	10fe4 <__printf_chk@plt>
   14aa8:	movw	r1, #25336	; 0x62f8
   14aac:	mov	r0, #0
   14ab0:	mov	r2, #5
   14ab4:	movt	r1, #1
   14ab8:	bl	10eac <dcgettext@plt>
   14abc:	movw	r2, #23384	; 0x5b58
   14ac0:	movw	r3, #23891	; 0x5d53
   14ac4:	mov	r1, r0
   14ac8:	mov	r0, #1
   14acc:	movt	r2, #1
   14ad0:	movt	r3, #1
   14ad4:	bl	10fe4 <__printf_chk@plt>
   14ad8:	movw	r1, #25356	; 0x630c
   14adc:	mov	r0, #0
   14ae0:	mov	r2, #5
   14ae4:	movt	r1, #1
   14ae8:	bl	10eac <dcgettext@plt>
   14aec:	movw	r2, #25395	; 0x6333
   14af0:	mov	r1, r0
   14af4:	mov	r0, #1
   14af8:	movt	r2, #1
   14afc:	pop	{fp, lr}
   14b00:	b	10fe4 <__printf_chk@plt>
   14b04:	push	{r4, r5, r6, sl, fp, lr}
   14b08:	add	fp, sp, #16
   14b0c:	mov	r4, r2
   14b10:	mov	r5, r1
   14b14:	mov	r6, r0
   14b18:	bl	15270 <__mempcpy_chk@plt+0x41cc>
   14b1c:	cmp	r0, #0
   14b20:	popne	{r4, r5, r6, sl, fp, pc}
   14b24:	cmp	r6, #0
   14b28:	beq	14b3c <__mempcpy_chk@plt+0x3a98>
   14b2c:	cmp	r5, #0
   14b30:	cmpne	r4, #0
   14b34:	bne	14b3c <__mempcpy_chk@plt+0x3a98>
   14b38:	pop	{r4, r5, r6, sl, fp, pc}
   14b3c:	bl	150b8 <__mempcpy_chk@plt+0x4014>
   14b40:	push	{r4, r5, r6, sl, fp, lr}
   14b44:	add	fp, sp, #16
   14b48:	mov	r4, r2
   14b4c:	mov	r5, r1
   14b50:	mov	r6, r0
   14b54:	bl	15270 <__mempcpy_chk@plt+0x41cc>
   14b58:	cmp	r0, #0
   14b5c:	popne	{r4, r5, r6, sl, fp, pc}
   14b60:	cmp	r6, #0
   14b64:	beq	14b78 <__mempcpy_chk@plt+0x3ad4>
   14b68:	cmp	r5, #0
   14b6c:	cmpne	r4, #0
   14b70:	bne	14b78 <__mempcpy_chk@plt+0x3ad4>
   14b74:	pop	{r4, r5, r6, sl, fp, pc}
   14b78:	bl	150b8 <__mempcpy_chk@plt+0x4014>
   14b7c:	push	{fp, lr}
   14b80:	mov	fp, sp
   14b84:	bl	15150 <__mempcpy_chk@plt+0x40ac>
   14b88:	cmp	r0, #0
   14b8c:	popne	{fp, pc}
   14b90:	bl	150b8 <__mempcpy_chk@plt+0x4014>
   14b94:	push	{fp, lr}
   14b98:	mov	fp, sp
   14b9c:	bl	15150 <__mempcpy_chk@plt+0x40ac>
   14ba0:	cmp	r0, #0
   14ba4:	popne	{fp, pc}
   14ba8:	bl	150b8 <__mempcpy_chk@plt+0x4014>
   14bac:	push	{fp, lr}
   14bb0:	mov	fp, sp
   14bb4:	bl	15150 <__mempcpy_chk@plt+0x40ac>
   14bb8:	cmp	r0, #0
   14bbc:	popne	{fp, pc}
   14bc0:	bl	150b8 <__mempcpy_chk@plt+0x4014>
   14bc4:	push	{r4, r5, fp, lr}
   14bc8:	add	fp, sp, #8
   14bcc:	mov	r4, r1
   14bd0:	mov	r5, r0
   14bd4:	bl	15180 <__mempcpy_chk@plt+0x40dc>
   14bd8:	cmp	r0, #0
   14bdc:	popne	{r4, r5, fp, pc}
   14be0:	cmp	r5, #0
   14be4:	beq	14bf4 <__mempcpy_chk@plt+0x3b50>
   14be8:	cmp	r4, #0
   14bec:	bne	14bf4 <__mempcpy_chk@plt+0x3b50>
   14bf0:	pop	{r4, r5, fp, pc}
   14bf4:	bl	150b8 <__mempcpy_chk@plt+0x4014>
   14bf8:	push	{fp, lr}
   14bfc:	mov	fp, sp
   14c00:	cmp	r1, #0
   14c04:	orreq	r1, r1, #1
   14c08:	bl	15180 <__mempcpy_chk@plt+0x40dc>
   14c0c:	cmp	r0, #0
   14c10:	popne	{fp, pc}
   14c14:	bl	150b8 <__mempcpy_chk@plt+0x4014>
   14c18:	push	{fp, lr}
   14c1c:	mov	fp, sp
   14c20:	clz	r3, r2
   14c24:	lsr	ip, r3, #5
   14c28:	clz	r3, r1
   14c2c:	lsr	r3, r3, #5
   14c30:	orrs	r3, r3, ip
   14c34:	movwne	r1, #1
   14c38:	movwne	r2, #1
   14c3c:	bl	15270 <__mempcpy_chk@plt+0x41cc>
   14c40:	cmp	r0, #0
   14c44:	popne	{fp, pc}
   14c48:	bl	150b8 <__mempcpy_chk@plt+0x4014>
   14c4c:	push	{fp, lr}
   14c50:	mov	fp, sp
   14c54:	mov	r2, r1
   14c58:	mov	r1, r0
   14c5c:	mov	r0, #0
   14c60:	bl	15270 <__mempcpy_chk@plt+0x41cc>
   14c64:	cmp	r0, #0
   14c68:	popne	{fp, pc}
   14c6c:	bl	150b8 <__mempcpy_chk@plt+0x4014>
   14c70:	push	{fp, lr}
   14c74:	mov	fp, sp
   14c78:	mov	r2, r1
   14c7c:	mov	r1, r0
   14c80:	clz	r0, r2
   14c84:	clz	r3, r1
   14c88:	lsr	r0, r0, #5
   14c8c:	lsr	r3, r3, #5
   14c90:	orrs	r0, r3, r0
   14c94:	mov	r0, #0
   14c98:	movwne	r1, #1
   14c9c:	movwne	r2, #1
   14ca0:	bl	15270 <__mempcpy_chk@plt+0x41cc>
   14ca4:	cmp	r0, #0
   14ca8:	popne	{fp, pc}
   14cac:	bl	150b8 <__mempcpy_chk@plt+0x4014>
   14cb0:	push	{r4, r5, r6, sl, fp, lr}
   14cb4:	add	fp, sp, #16
   14cb8:	ldr	r5, [r1]
   14cbc:	mov	r4, r1
   14cc0:	mov	r6, r0
   14cc4:	cmp	r0, #0
   14cc8:	beq	14ce0 <__mempcpy_chk@plt+0x3c3c>
   14ccc:	mov	r0, #1
   14cd0:	add	r0, r0, r5, lsr #1
   14cd4:	adds	r5, r5, r0
   14cd8:	bcc	14ce8 <__mempcpy_chk@plt+0x3c44>
   14cdc:	b	14d24 <__mempcpy_chk@plt+0x3c80>
   14ce0:	cmp	r5, #0
   14ce4:	movweq	r5, #64	; 0x40
   14ce8:	mov	r0, r6
   14cec:	mov	r1, r5
   14cf0:	mov	r2, #1
   14cf4:	bl	15270 <__mempcpy_chk@plt+0x41cc>
   14cf8:	cmp	r5, #0
   14cfc:	mov	r1, r5
   14d00:	movwne	r1, #1
   14d04:	cmp	r0, #0
   14d08:	bne	14d1c <__mempcpy_chk@plt+0x3c78>
   14d0c:	clz	r2, r6
   14d10:	lsr	r2, r2, #5
   14d14:	orrs	r1, r2, r1
   14d18:	bne	14d24 <__mempcpy_chk@plt+0x3c80>
   14d1c:	str	r5, [r4]
   14d20:	pop	{r4, r5, r6, sl, fp, pc}
   14d24:	bl	150b8 <__mempcpy_chk@plt+0x4014>
   14d28:	push	{r4, r5, r6, r7, fp, lr}
   14d2c:	add	fp, sp, #16
   14d30:	ldr	r5, [r1]
   14d34:	mov	r6, r2
   14d38:	mov	r4, r1
   14d3c:	mov	r7, r0
   14d40:	cmp	r0, #0
   14d44:	beq	14d5c <__mempcpy_chk@plt+0x3cb8>
   14d48:	mov	r0, #1
   14d4c:	add	r0, r0, r5, lsr #1
   14d50:	adds	r5, r5, r0
   14d54:	bcc	14d74 <__mempcpy_chk@plt+0x3cd0>
   14d58:	b	14da8 <__mempcpy_chk@plt+0x3d04>
   14d5c:	cmp	r5, #0
   14d60:	bne	14d74 <__mempcpy_chk@plt+0x3cd0>
   14d64:	mov	r0, #64	; 0x40
   14d68:	cmp	r6, #64	; 0x40
   14d6c:	udiv	r5, r0, r6
   14d70:	addhi	r5, r5, #1
   14d74:	mov	r0, r7
   14d78:	mov	r1, r5
   14d7c:	mov	r2, r6
   14d80:	bl	15270 <__mempcpy_chk@plt+0x41cc>
   14d84:	cmp	r0, #0
   14d88:	bne	14da0 <__mempcpy_chk@plt+0x3cfc>
   14d8c:	cmp	r7, #0
   14d90:	beq	14da8 <__mempcpy_chk@plt+0x3d04>
   14d94:	cmp	r6, #0
   14d98:	cmpne	r5, #0
   14d9c:	bne	14da8 <__mempcpy_chk@plt+0x3d04>
   14da0:	str	r5, [r4]
   14da4:	pop	{r4, r5, r6, r7, fp, pc}
   14da8:	bl	150b8 <__mempcpy_chk@plt+0x4014>
   14dac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14db0:	add	fp, sp, #24
   14db4:	mov	r8, r1
   14db8:	ldr	r1, [r1]
   14dbc:	mov	r5, r0
   14dc0:	add	r0, r1, r1, asr #1
   14dc4:	cmp	r0, r1
   14dc8:	mvnvs	r0, #-2147483648	; 0x80000000
   14dcc:	cmp	r0, r3
   14dd0:	mov	r7, r0
   14dd4:	movgt	r7, r3
   14dd8:	cmn	r3, #1
   14ddc:	movle	r7, r0
   14de0:	ldr	r0, [fp, #8]
   14de4:	cmn	r0, #1
   14de8:	ble	14e10 <__mempcpy_chk@plt+0x3d6c>
   14dec:	cmp	r0, #0
   14df0:	beq	14e64 <__mempcpy_chk@plt+0x3dc0>
   14df4:	cmn	r7, #1
   14df8:	ble	14e38 <__mempcpy_chk@plt+0x3d94>
   14dfc:	mvn	r4, #-2147483648	; 0x80000000
   14e00:	udiv	r6, r4, r0
   14e04:	cmp	r6, r7
   14e08:	bge	14e64 <__mempcpy_chk@plt+0x3dc0>
   14e0c:	b	14e74 <__mempcpy_chk@plt+0x3dd0>
   14e10:	cmn	r7, #1
   14e14:	ble	14e54 <__mempcpy_chk@plt+0x3db0>
   14e18:	cmn	r0, #1
   14e1c:	beq	14e64 <__mempcpy_chk@plt+0x3dc0>
   14e20:	mov	r6, #-2147483648	; 0x80000000
   14e24:	mvn	r4, #-2147483648	; 0x80000000
   14e28:	sdiv	r6, r6, r0
   14e2c:	cmp	r6, r7
   14e30:	bge	14e64 <__mempcpy_chk@plt+0x3dc0>
   14e34:	b	14e74 <__mempcpy_chk@plt+0x3dd0>
   14e38:	beq	14e64 <__mempcpy_chk@plt+0x3dc0>
   14e3c:	mov	r6, #-2147483648	; 0x80000000
   14e40:	mvn	r4, #-2147483648	; 0x80000000
   14e44:	sdiv	r6, r6, r7
   14e48:	cmp	r6, r0
   14e4c:	bge	14e64 <__mempcpy_chk@plt+0x3dc0>
   14e50:	b	14e74 <__mempcpy_chk@plt+0x3dd0>
   14e54:	mvn	r4, #-2147483648	; 0x80000000
   14e58:	sdiv	r6, r4, r0
   14e5c:	cmp	r7, r6
   14e60:	blt	14e74 <__mempcpy_chk@plt+0x3dd0>
   14e64:	mul	r6, r7, r0
   14e68:	mov	r4, #64	; 0x40
   14e6c:	cmp	r6, #63	; 0x3f
   14e70:	bgt	14e7c <__mempcpy_chk@plt+0x3dd8>
   14e74:	sdiv	r7, r4, r0
   14e78:	mul	r6, r7, r0
   14e7c:	cmp	r5, #0
   14e80:	moveq	r4, #0
   14e84:	streq	r4, [r8]
   14e88:	sub	r4, r7, r1
   14e8c:	cmp	r4, r2
   14e90:	bge	14f3c <__mempcpy_chk@plt+0x3e98>
   14e94:	add	r7, r1, r2
   14e98:	mov	r6, #0
   14e9c:	mov	r2, #0
   14ea0:	cmp	r7, r3
   14ea4:	movwgt	r6, #1
   14ea8:	cmn	r3, #1
   14eac:	movwgt	r2, #1
   14eb0:	cmp	r7, r1
   14eb4:	bvs	14f70 <__mempcpy_chk@plt+0x3ecc>
   14eb8:	ands	r1, r2, r6
   14ebc:	bne	14f70 <__mempcpy_chk@plt+0x3ecc>
   14ec0:	cmn	r0, #1
   14ec4:	ble	14eec <__mempcpy_chk@plt+0x3e48>
   14ec8:	cmp	r0, #0
   14ecc:	beq	14f38 <__mempcpy_chk@plt+0x3e94>
   14ed0:	cmn	r7, #1
   14ed4:	ble	14f10 <__mempcpy_chk@plt+0x3e6c>
   14ed8:	mvn	r1, #-2147483648	; 0x80000000
   14edc:	udiv	r1, r1, r0
   14ee0:	cmp	r1, r7
   14ee4:	bge	14f38 <__mempcpy_chk@plt+0x3e94>
   14ee8:	b	14f70 <__mempcpy_chk@plt+0x3ecc>
   14eec:	cmn	r7, #1
   14ef0:	ble	14f28 <__mempcpy_chk@plt+0x3e84>
   14ef4:	cmn	r0, #1
   14ef8:	beq	14f38 <__mempcpy_chk@plt+0x3e94>
   14efc:	mov	r1, #-2147483648	; 0x80000000
   14f00:	sdiv	r1, r1, r0
   14f04:	cmp	r1, r7
   14f08:	bge	14f38 <__mempcpy_chk@plt+0x3e94>
   14f0c:	b	14f70 <__mempcpy_chk@plt+0x3ecc>
   14f10:	beq	14f38 <__mempcpy_chk@plt+0x3e94>
   14f14:	mov	r1, #-2147483648	; 0x80000000
   14f18:	sdiv	r1, r1, r7
   14f1c:	cmp	r1, r0
   14f20:	bge	14f38 <__mempcpy_chk@plt+0x3e94>
   14f24:	b	14f70 <__mempcpy_chk@plt+0x3ecc>
   14f28:	mvn	r1, #-2147483648	; 0x80000000
   14f2c:	sdiv	r1, r1, r0
   14f30:	cmp	r7, r1
   14f34:	blt	14f70 <__mempcpy_chk@plt+0x3ecc>
   14f38:	mul	r6, r7, r0
   14f3c:	mov	r0, r5
   14f40:	mov	r1, r6
   14f44:	bl	15180 <__mempcpy_chk@plt+0x40dc>
   14f48:	cmp	r6, #0
   14f4c:	movwne	r6, #1
   14f50:	cmp	r0, #0
   14f54:	bne	14f68 <__mempcpy_chk@plt+0x3ec4>
   14f58:	clz	r1, r5
   14f5c:	lsr	r1, r1, #5
   14f60:	orrs	r1, r1, r6
   14f64:	bne	14f70 <__mempcpy_chk@plt+0x3ecc>
   14f68:	str	r7, [r8]
   14f6c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14f70:	bl	150b8 <__mempcpy_chk@plt+0x4014>
   14f74:	push	{fp, lr}
   14f78:	mov	fp, sp
   14f7c:	mov	r1, #1
   14f80:	bl	150fc <__mempcpy_chk@plt+0x4058>
   14f84:	cmp	r0, #0
   14f88:	popne	{fp, pc}
   14f8c:	bl	150b8 <__mempcpy_chk@plt+0x4014>
   14f90:	push	{fp, lr}
   14f94:	mov	fp, sp
   14f98:	bl	150fc <__mempcpy_chk@plt+0x4058>
   14f9c:	cmp	r0, #0
   14fa0:	popne	{fp, pc}
   14fa4:	bl	150b8 <__mempcpy_chk@plt+0x4014>
   14fa8:	push	{fp, lr}
   14fac:	mov	fp, sp
   14fb0:	mov	r1, #1
   14fb4:	bl	150fc <__mempcpy_chk@plt+0x4058>
   14fb8:	cmp	r0, #0
   14fbc:	popne	{fp, pc}
   14fc0:	bl	150b8 <__mempcpy_chk@plt+0x4014>
   14fc4:	push	{fp, lr}
   14fc8:	mov	fp, sp
   14fcc:	bl	150fc <__mempcpy_chk@plt+0x4058>
   14fd0:	cmp	r0, #0
   14fd4:	popne	{fp, pc}
   14fd8:	bl	150b8 <__mempcpy_chk@plt+0x4014>
   14fdc:	push	{r4, r5, fp, lr}
   14fe0:	add	fp, sp, #8
   14fe4:	mov	r5, r0
   14fe8:	mov	r0, r1
   14fec:	mov	r4, r1
   14ff0:	bl	15150 <__mempcpy_chk@plt+0x40ac>
   14ff4:	cmp	r0, #0
   14ff8:	beq	1500c <__mempcpy_chk@plt+0x3f68>
   14ffc:	mov	r1, r5
   15000:	mov	r2, r4
   15004:	pop	{r4, r5, fp, lr}
   15008:	b	10e94 <memcpy@plt>
   1500c:	bl	150b8 <__mempcpy_chk@plt+0x4014>
   15010:	push	{r4, r5, fp, lr}
   15014:	add	fp, sp, #8
   15018:	mov	r5, r0
   1501c:	mov	r0, r1
   15020:	mov	r4, r1
   15024:	bl	15150 <__mempcpy_chk@plt+0x40ac>
   15028:	cmp	r0, #0
   1502c:	beq	15040 <__mempcpy_chk@plt+0x3f9c>
   15030:	mov	r1, r5
   15034:	mov	r2, r4
   15038:	pop	{r4, r5, fp, lr}
   1503c:	b	10e94 <memcpy@plt>
   15040:	bl	150b8 <__mempcpy_chk@plt+0x4014>
   15044:	push	{r4, r5, fp, lr}
   15048:	add	fp, sp, #8
   1504c:	mov	r5, r0
   15050:	add	r0, r1, #1
   15054:	mov	r4, r1
   15058:	bl	15150 <__mempcpy_chk@plt+0x40ac>
   1505c:	cmp	r0, #0
   15060:	beq	1507c <__mempcpy_chk@plt+0x3fd8>
   15064:	mov	r1, #0
   15068:	mov	r2, r4
   1506c:	strb	r1, [r0, r4]
   15070:	mov	r1, r5
   15074:	pop	{r4, r5, fp, lr}
   15078:	b	10e94 <memcpy@plt>
   1507c:	bl	150b8 <__mempcpy_chk@plt+0x4014>
   15080:	push	{r4, r5, fp, lr}
   15084:	add	fp, sp, #8
   15088:	mov	r4, r0
   1508c:	bl	10fa8 <strlen@plt>
   15090:	add	r5, r0, #1
   15094:	mov	r0, r5
   15098:	bl	15150 <__mempcpy_chk@plt+0x40ac>
   1509c:	cmp	r0, #0
   150a0:	beq	150b4 <__mempcpy_chk@plt+0x4010>
   150a4:	mov	r1, r4
   150a8:	mov	r2, r5
   150ac:	pop	{r4, r5, fp, lr}
   150b0:	b	10e94 <memcpy@plt>
   150b4:	bl	150b8 <__mempcpy_chk@plt+0x4014>
   150b8:	push	{fp, lr}
   150bc:	mov	fp, sp
   150c0:	movw	r0, #28916	; 0x70f4
   150c4:	movw	r1, #25471	; 0x637f
   150c8:	mov	r2, #5
   150cc:	movt	r0, #2
   150d0:	movt	r1, #1
   150d4:	ldr	r4, [r0]
   150d8:	mov	r0, #0
   150dc:	bl	10eac <dcgettext@plt>
   150e0:	movw	r2, #24355	; 0x5f23
   150e4:	mov	r3, r0
   150e8:	mov	r0, r4
   150ec:	mov	r1, #0
   150f0:	movt	r2, #1
   150f4:	bl	10f18 <error@plt>
   150f8:	bl	11074 <abort@plt>
   150fc:	clz	r2, r1
   15100:	clz	r3, r0
   15104:	lsr	r2, r2, #5
   15108:	lsr	r3, r3, #5
   1510c:	orrs	r2, r3, r2
   15110:	movwne	r1, #1
   15114:	movwne	r0, #1
   15118:	cmp	r1, #0
   1511c:	beq	1514c <__mempcpy_chk@plt+0x40a8>
   15120:	mvn	r2, #-2147483648	; 0x80000000
   15124:	udiv	r2, r2, r1
   15128:	cmp	r2, r0
   1512c:	bcs	1514c <__mempcpy_chk@plt+0x40a8>
   15130:	push	{fp, lr}
   15134:	mov	fp, sp
   15138:	bl	10fb4 <__errno_location@plt>
   1513c:	mov	r1, #12
   15140:	str	r1, [r0]
   15144:	mov	r0, #0
   15148:	pop	{fp, pc}
   1514c:	b	10e34 <calloc@plt>
   15150:	cmp	r0, #0
   15154:	movweq	r0, #1
   15158:	cmn	r0, #1
   1515c:	ble	15164 <__mempcpy_chk@plt+0x40c0>
   15160:	b	10f48 <malloc@plt>
   15164:	push	{fp, lr}
   15168:	mov	fp, sp
   1516c:	bl	10fb4 <__errno_location@plt>
   15170:	mov	r1, #12
   15174:	str	r1, [r0]
   15178:	mov	r0, #0
   1517c:	pop	{fp, pc}
   15180:	push	{fp, lr}
   15184:	mov	fp, sp
   15188:	cmp	r0, #0
   1518c:	beq	151a8 <__mempcpy_chk@plt+0x4104>
   15190:	cmp	r1, #0
   15194:	beq	151b4 <__mempcpy_chk@plt+0x4110>
   15198:	cmn	r1, #1
   1519c:	ble	151c0 <__mempcpy_chk@plt+0x411c>
   151a0:	pop	{fp, lr}
   151a4:	b	10eb8 <realloc@plt>
   151a8:	mov	r0, r1
   151ac:	pop	{fp, lr}
   151b0:	b	15150 <__mempcpy_chk@plt+0x40ac>
   151b4:	bl	11fd0 <__mempcpy_chk@plt+0xf2c>
   151b8:	mov	r0, #0
   151bc:	pop	{fp, pc}
   151c0:	bl	10fb4 <__errno_location@plt>
   151c4:	mov	r1, #12
   151c8:	str	r1, [r0]
   151cc:	mov	r0, #0
   151d0:	pop	{fp, pc}
   151d4:	push	{fp, lr}
   151d8:	mov	fp, sp
   151dc:	mov	r0, #14
   151e0:	bl	11038 <nl_langinfo@plt>
   151e4:	movw	r1, #24083	; 0x5e13
   151e8:	cmp	r0, #0
   151ec:	movt	r1, #1
   151f0:	movne	r1, r0
   151f4:	movw	r0, #25488	; 0x6390
   151f8:	ldrb	r2, [r1]
   151fc:	movt	r0, #1
   15200:	cmp	r2, #0
   15204:	movne	r0, r1
   15208:	pop	{fp, pc}
   1520c:	push	{r4, r5, r6, r7, fp, lr}
   15210:	add	fp, sp, #16
   15214:	sub	sp, sp, #8
   15218:	cmp	r0, #0
   1521c:	add	r5, sp, #4
   15220:	mov	r7, r2
   15224:	mov	r4, r1
   15228:	movne	r5, r0
   1522c:	mov	r0, r5
   15230:	bl	10f0c <mbrtowc@plt>
   15234:	mov	r6, r0
   15238:	cmp	r7, #0
   1523c:	beq	15264 <__mempcpy_chk@plt+0x41c0>
   15240:	cmn	r6, #2
   15244:	bcc	15264 <__mempcpy_chk@plt+0x41c0>
   15248:	mov	r0, #0
   1524c:	bl	152ac <__mempcpy_chk@plt+0x4208>
   15250:	cmp	r0, #0
   15254:	bne	15264 <__mempcpy_chk@plt+0x41c0>
   15258:	ldrb	r0, [r4]
   1525c:	mov	r6, #1
   15260:	str	r0, [r5]
   15264:	mov	r0, r6
   15268:	sub	sp, fp, #16
   1526c:	pop	{r4, r5, r6, r7, fp, pc}
   15270:	cmp	r2, #0
   15274:	beq	152a4 <__mempcpy_chk@plt+0x4200>
   15278:	mvn	r3, #0
   1527c:	udiv	r3, r3, r2
   15280:	cmp	r3, r1
   15284:	bcs	152a4 <__mempcpy_chk@plt+0x4200>
   15288:	push	{fp, lr}
   1528c:	mov	fp, sp
   15290:	bl	10fb4 <__errno_location@plt>
   15294:	mov	r1, #12
   15298:	str	r1, [r0]
   1529c:	mov	r0, #0
   152a0:	pop	{fp, pc}
   152a4:	mul	r1, r2, r1
   152a8:	b	15180 <__mempcpy_chk@plt+0x40dc>
   152ac:	push	{r4, sl, fp, lr}
   152b0:	add	fp, sp, #8
   152b4:	sub	sp, sp, #264	; 0x108
   152b8:	add	r1, sp, #7
   152bc:	movw	r2, #257	; 0x101
   152c0:	bl	15318 <__mempcpy_chk@plt+0x4274>
   152c4:	mov	r4, #0
   152c8:	cmp	r0, #0
   152cc:	bne	1530c <__mempcpy_chk@plt+0x4268>
   152d0:	movw	r1, #25494	; 0x6396
   152d4:	add	r0, sp, #7
   152d8:	mov	r2, #2
   152dc:	movt	r1, #1
   152e0:	bl	10f9c <bcmp@plt>
   152e4:	cmp	r0, #0
   152e8:	beq	1530c <__mempcpy_chk@plt+0x4268>
   152ec:	movw	r1, #25496	; 0x6398
   152f0:	add	r0, sp, #7
   152f4:	mov	r2, #6
   152f8:	movt	r1, #1
   152fc:	bl	10f9c <bcmp@plt>
   15300:	cmp	r0, #0
   15304:	mov	r4, r0
   15308:	movwne	r4, #1
   1530c:	mov	r0, r4
   15310:	sub	sp, fp, #8
   15314:	pop	{r4, sl, fp, pc}
   15318:	push	{r4, r5, r6, r7, fp, lr}
   1531c:	add	fp, sp, #16
   15320:	mov	r4, r1
   15324:	mov	r1, #0
   15328:	mov	r6, r2
   1532c:	bl	11020 <setlocale@plt>
   15330:	cmp	r0, #0
   15334:	beq	15364 <__mempcpy_chk@plt+0x42c0>
   15338:	mov	r7, r0
   1533c:	bl	10fa8 <strlen@plt>
   15340:	cmp	r0, r6
   15344:	bcs	15380 <__mempcpy_chk@plt+0x42dc>
   15348:	add	r2, r0, #1
   1534c:	mov	r0, r4
   15350:	mov	r1, r7
   15354:	bl	10e94 <memcpy@plt>
   15358:	mov	r5, #0
   1535c:	mov	r0, r5
   15360:	pop	{r4, r5, r6, r7, fp, pc}
   15364:	mov	r5, #22
   15368:	cmp	r6, #0
   1536c:	beq	153a8 <__mempcpy_chk@plt+0x4304>
   15370:	mov	r0, #0
   15374:	strb	r0, [r4]
   15378:	mov	r0, r5
   1537c:	pop	{r4, r5, r6, r7, fp, pc}
   15380:	mov	r5, #34	; 0x22
   15384:	cmp	r6, #0
   15388:	beq	153a8 <__mempcpy_chk@plt+0x4304>
   1538c:	sub	r6, r6, #1
   15390:	mov	r0, r4
   15394:	mov	r1, r7
   15398:	mov	r2, r6
   1539c:	bl	10e94 <memcpy@plt>
   153a0:	mov	r0, #0
   153a4:	strb	r0, [r4, r6]
   153a8:	mov	r0, r5
   153ac:	pop	{r4, r5, r6, r7, fp, pc}
   153b0:	mov	r1, #0
   153b4:	b	11020 <setlocale@plt>
   153b8:	cmp	r3, #0
   153bc:	cmpeq	r2, #0
   153c0:	bne	153d8 <__mempcpy_chk@plt+0x4334>
   153c4:	cmp	r1, #0
   153c8:	cmpeq	r0, #0
   153cc:	mvnne	r1, #0
   153d0:	mvnne	r0, #0
   153d4:	b	153f4 <__mempcpy_chk@plt+0x4350>
   153d8:	sub	sp, sp, #8
   153dc:	push	{sp, lr}
   153e0:	bl	15404 <__mempcpy_chk@plt+0x4360>
   153e4:	ldr	lr, [sp, #4]
   153e8:	add	sp, sp, #8
   153ec:	pop	{r2, r3}
   153f0:	bx	lr
   153f4:	push	{r1, lr}
   153f8:	mov	r0, #8
   153fc:	bl	10e4c <raise@plt>
   15400:	pop	{r1, pc}
   15404:	cmp	r1, r3
   15408:	cmpeq	r0, r2
   1540c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15410:	mov	r4, r0
   15414:	movcc	r0, #0
   15418:	mov	r5, r1
   1541c:	ldr	lr, [sp, #36]	; 0x24
   15420:	movcc	r1, r0
   15424:	bcc	15520 <__mempcpy_chk@plt+0x447c>
   15428:	cmp	r3, #0
   1542c:	clzeq	ip, r2
   15430:	clzne	ip, r3
   15434:	addeq	ip, ip, #32
   15438:	cmp	r5, #0
   1543c:	clzeq	r1, r4
   15440:	addeq	r1, r1, #32
   15444:	clzne	r1, r5
   15448:	sub	ip, ip, r1
   1544c:	sub	sl, ip, #32
   15450:	lsl	r9, r3, ip
   15454:	rsb	fp, ip, #32
   15458:	orr	r9, r9, r2, lsl sl
   1545c:	orr	r9, r9, r2, lsr fp
   15460:	lsl	r8, r2, ip
   15464:	cmp	r5, r9
   15468:	cmpeq	r4, r8
   1546c:	movcc	r0, #0
   15470:	movcc	r1, r0
   15474:	bcc	15490 <__mempcpy_chk@plt+0x43ec>
   15478:	mov	r0, #1
   1547c:	subs	r4, r4, r8
   15480:	lsl	r1, r0, sl
   15484:	orr	r1, r1, r0, lsr fp
   15488:	lsl	r0, r0, ip
   1548c:	sbc	r5, r5, r9
   15490:	cmp	ip, #0
   15494:	beq	15520 <__mempcpy_chk@plt+0x447c>
   15498:	lsr	r6, r8, #1
   1549c:	orr	r6, r6, r9, lsl #31
   154a0:	lsr	r7, r9, #1
   154a4:	mov	r2, ip
   154a8:	b	154cc <__mempcpy_chk@plt+0x4428>
   154ac:	subs	r3, r4, r6
   154b0:	sbc	r8, r5, r7
   154b4:	adds	r3, r3, r3
   154b8:	adc	r8, r8, r8
   154bc:	adds	r4, r3, #1
   154c0:	adc	r5, r8, #0
   154c4:	subs	r2, r2, #1
   154c8:	beq	154e8 <__mempcpy_chk@plt+0x4444>
   154cc:	cmp	r5, r7
   154d0:	cmpeq	r4, r6
   154d4:	bcs	154ac <__mempcpy_chk@plt+0x4408>
   154d8:	adds	r4, r4, r4
   154dc:	adc	r5, r5, r5
   154e0:	subs	r2, r2, #1
   154e4:	bne	154cc <__mempcpy_chk@plt+0x4428>
   154e8:	lsr	r3, r4, ip
   154ec:	orr	r3, r3, r5, lsl fp
   154f0:	lsr	r2, r5, ip
   154f4:	orr	r3, r3, r5, lsr sl
   154f8:	adds	r0, r0, r4
   154fc:	mov	r4, r3
   15500:	lsl	r3, r2, ip
   15504:	orr	r3, r3, r4, lsl sl
   15508:	lsl	ip, r4, ip
   1550c:	orr	r3, r3, r4, lsr fp
   15510:	adc	r1, r1, r5
   15514:	subs	r0, r0, ip
   15518:	mov	r5, r2
   1551c:	sbc	r1, r1, r3
   15520:	cmp	lr, #0
   15524:	strdne	r4, [lr]
   15528:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1552c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15530:	mov	r7, r0
   15534:	ldr	r6, [pc, #72]	; 15584 <__mempcpy_chk@plt+0x44e0>
   15538:	ldr	r5, [pc, #72]	; 15588 <__mempcpy_chk@plt+0x44e4>
   1553c:	add	r6, pc, r6
   15540:	add	r5, pc, r5
   15544:	sub	r6, r6, r5
   15548:	mov	r8, r1
   1554c:	mov	r9, r2
   15550:	bl	10e14 <calloc@plt-0x20>
   15554:	asrs	r6, r6, #2
   15558:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1555c:	mov	r4, #0
   15560:	add	r4, r4, #1
   15564:	ldr	r3, [r5], #4
   15568:	mov	r2, r9
   1556c:	mov	r1, r8
   15570:	mov	r0, r7
   15574:	blx	r3
   15578:	cmp	r6, r4
   1557c:	bne	15560 <__mempcpy_chk@plt+0x44bc>
   15580:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15584:	andeq	r1, r1, r8, asr #19
   15588:	andeq	r1, r1, r0, asr #19
   1558c:	bx	lr
   15590:	ldr	r3, [pc, #12]	; 155a4 <__mempcpy_chk@plt+0x4500>
   15594:	mov	r1, #0
   15598:	add	r3, pc, r3
   1559c:	ldr	r2, [r3]
   155a0:	b	10fc0 <__cxa_atexit@plt>
   155a4:	andeq	r1, r1, ip, asr #22

Disassembly of section .fini:

000155a8 <.fini>:
   155a8:	push	{r3, lr}
   155ac:	pop	{r3, pc}
