
../repos/coreutils/src/mknod:     file format elf32-littlearm


Disassembly of section .init:

0001176c <.init>:
   1176c:	push	{r3, lr}
   11770:	bl	11c0c <__assert_fail@plt+0x48>
   11774:	pop	{r3, pc}

Disassembly of section .plt:

00011778 <fstatfs64@plt-0x14>:
   11778:	push	{lr}		; (str lr, [sp, #-4]!)
   1177c:	ldr	lr, [pc, #4]	; 11788 <fstatfs64@plt-0x4>
   11780:	add	lr, pc, lr
   11784:	ldr	pc, [lr, #8]!
   11788:	andeq	fp, r1, r8, ror r8

0001178c <fstatfs64@plt>:
   1178c:	add	ip, pc, #0, 12
   11790:	add	ip, ip, #110592	; 0x1b000
   11794:	ldr	pc, [ip, #2168]!	; 0x878

00011798 <selabel_lookup@plt>:
   11798:	add	ip, pc, #0, 12
   1179c:	add	ip, ip, #110592	; 0x1b000
   117a0:	ldr	pc, [ip, #2160]!	; 0x870

000117a4 <calloc@plt>:
   117a4:	add	ip, pc, #0, 12
   117a8:	add	ip, ip, #110592	; 0x1b000
   117ac:	ldr	pc, [ip, #2152]!	; 0x868

000117b0 <fputs_unlocked@plt>:
   117b0:	add	ip, pc, #0, 12
   117b4:	add	ip, ip, #110592	; 0x1b000
   117b8:	ldr	pc, [ip, #2144]!	; 0x860

000117bc <raise@plt>:
   117bc:	add	ip, pc, #0, 12
   117c0:	add	ip, ip, #110592	; 0x1b000
   117c4:	ldr	pc, [ip, #2136]!	; 0x858

000117c8 <is_selinux_enabled@plt>:
   117c8:	add	ip, pc, #0, 12
   117cc:	add	ip, ip, #110592	; 0x1b000
   117d0:	ldr	pc, [ip, #2128]!	; 0x850

000117d4 <strcmp@plt>:
   117d4:	add	ip, pc, #0, 12
   117d8:	add	ip, ip, #110592	; 0x1b000
   117dc:	ldr	pc, [ip, #2120]!	; 0x848

000117e0 <context_type_get@plt>:
   117e0:	add	ip, pc, #0, 12
   117e4:	add	ip, ip, #110592	; 0x1b000
   117e8:	ldr	pc, [ip, #2112]!	; 0x840

000117ec <fflush@plt>:
   117ec:	add	ip, pc, #0, 12
   117f0:	add	ip, ip, #110592	; 0x1b000
   117f4:	ldr	pc, [ip, #2104]!	; 0x838

000117f8 <lsetfilecon@plt>:
   117f8:	add	ip, pc, #0, 12
   117fc:	add	ip, ip, #110592	; 0x1b000
   11800:	ldr	pc, [ip, #2096]!	; 0x830

00011804 <memmove@plt>:
   11804:	add	ip, pc, #0, 12
   11808:	add	ip, ip, #110592	; 0x1b000
   1180c:	ldr	pc, [ip, #2088]!	; 0x828

00011810 <free@plt>:
   11810:	add	ip, pc, #0, 12
   11814:	add	ip, ip, #110592	; 0x1b000
   11818:	ldr	pc, [ip, #2080]!	; 0x820

0001181c <faccessat@plt>:
   1181c:	add	ip, pc, #0, 12
   11820:	add	ip, ip, #110592	; 0x1b000
   11824:	ldr	pc, [ip, #2072]!	; 0x818

00011828 <_exit@plt>:
   11828:	add	ip, pc, #0, 12
   1182c:	add	ip, ip, #110592	; 0x1b000
   11830:	ldr	pc, [ip, #2064]!	; 0x810

00011834 <memcpy@plt>:
   11834:	add	ip, pc, #0, 12
   11838:	add	ip, ip, #110592	; 0x1b000
   1183c:	ldr	pc, [ip, #2056]!	; 0x808

00011840 <__strtoull_internal@plt>:
   11840:	add	ip, pc, #0, 12
   11844:	add	ip, ip, #110592	; 0x1b000
   11848:	ldr	pc, [ip, #2048]!	; 0x800

0001184c <mbsinit@plt>:
   1184c:	add	ip, pc, #0, 12
   11850:	add	ip, ip, #110592	; 0x1b000
   11854:	ldr	pc, [ip, #2040]!	; 0x7f8

00011858 <context_new@plt>:
   11858:	add	ip, pc, #0, 12
   1185c:	add	ip, ip, #110592	; 0x1b000
   11860:	ldr	pc, [ip, #2032]!	; 0x7f0

00011864 <memcmp@plt>:
   11864:	add	ip, pc, #0, 12
   11868:	add	ip, ip, #110592	; 0x1b000
   1186c:	ldr	pc, [ip, #2024]!	; 0x7e8

00011870 <dcgettext@plt>:
   11870:	add	ip, pc, #0, 12
   11874:	add	ip, ip, #110592	; 0x1b000
   11878:	ldr	pc, [ip, #2016]!	; 0x7e0

0001187c <context_type_set@plt>:
   1187c:	add	ip, pc, #0, 12
   11880:	add	ip, ip, #110592	; 0x1b000
   11884:	ldr	pc, [ip, #2008]!	; 0x7d8

00011888 <realloc@plt>:
   11888:	add	ip, pc, #0, 12
   1188c:	add	ip, ip, #110592	; 0x1b000
   11890:	ldr	pc, [ip, #2000]!	; 0x7d0

00011894 <fgetfilecon@plt>:
   11894:	add	ip, pc, #0, 12
   11898:	add	ip, ip, #110592	; 0x1b000
   1189c:	ldr	pc, [ip, #1992]!	; 0x7c8

000118a0 <textdomain@plt>:
   118a0:	add	ip, pc, #0, 12
   118a4:	add	ip, ip, #110592	; 0x1b000
   118a8:	ldr	pc, [ip, #1984]!	; 0x7c0

000118ac <rawmemchr@plt>:
   118ac:	add	ip, pc, #0, 12
   118b0:	add	ip, ip, #110592	; 0x1b000
   118b4:	ldr	pc, [ip, #1976]!	; 0x7b8

000118b8 <__fxstatat64@plt>:
   118b8:	add	ip, pc, #0, 12
   118bc:	add	ip, ip, #110592	; 0x1b000
   118c0:	ldr	pc, [ip, #1968]!	; 0x7b0

000118c4 <iswprint@plt>:
   118c4:	add	ip, pc, #0, 12
   118c8:	add	ip, ip, #110592	; 0x1b000
   118cc:	ldr	pc, [ip, #1960]!	; 0x7a8

000118d0 <__fxstat64@plt>:
   118d0:	add	ip, pc, #0, 12
   118d4:	add	ip, ip, #110592	; 0x1b000
   118d8:	ldr	pc, [ip, #1952]!	; 0x7a0

000118dc <readlink@plt>:
   118dc:	add	ip, pc, #0, 12
   118e0:	add	ip, ip, #110592	; 0x1b000
   118e4:	ldr	pc, [ip, #1944]!	; 0x798

000118e8 <fwrite@plt>:
   118e8:	add	ip, pc, #0, 12
   118ec:	add	ip, ip, #110592	; 0x1b000
   118f0:	ldr	pc, [ip, #1936]!	; 0x790

000118f4 <lseek64@plt>:
   118f4:	add	ip, pc, #0, 12
   118f8:	add	ip, ip, #110592	; 0x1b000
   118fc:	ldr	pc, [ip, #1928]!	; 0x788

00011900 <__ctype_get_mb_cur_max@plt>:
   11900:	add	ip, pc, #0, 12
   11904:	add	ip, ip, #110592	; 0x1b000
   11908:	ldr	pc, [ip, #1920]!	; 0x780

0001190c <getcon@plt>:
   1190c:	add	ip, pc, #0, 12
   11910:	add	ip, ip, #110592	; 0x1b000
   11914:	ldr	pc, [ip, #1912]!	; 0x778

00011918 <__fpending@plt>:
   11918:	add	ip, pc, #0, 12
   1191c:	add	ip, ip, #110592	; 0x1b000
   11920:	ldr	pc, [ip, #1904]!	; 0x770

00011924 <mbrtowc@plt>:
   11924:	add	ip, pc, #0, 12
   11928:	add	ip, ip, #110592	; 0x1b000
   1192c:	ldr	pc, [ip, #1896]!	; 0x768

00011930 <error@plt>:
   11930:	add	ip, pc, #0, 12
   11934:	add	ip, ip, #110592	; 0x1b000
   11938:	ldr	pc, [ip, #1888]!	; 0x760

0001193c <open64@plt>:
   1193c:	add	ip, pc, #0, 12
   11940:	add	ip, ip, #110592	; 0x1b000
   11944:	ldr	pc, [ip, #1880]!	; 0x758

00011948 <lgetfilecon@plt>:
   11948:	add	ip, pc, #0, 12
   1194c:	add	ip, ip, #110592	; 0x1b000
   11950:	ldr	pc, [ip, #1872]!	; 0x750

00011954 <malloc@plt>:
   11954:	add	ip, pc, #0, 12
   11958:	add	ip, ip, #110592	; 0x1b000
   1195c:	ldr	pc, [ip, #1864]!	; 0x748

00011960 <__libc_start_main@plt>:
   11960:	add	ip, pc, #0, 12
   11964:	add	ip, ip, #110592	; 0x1b000
   11968:	ldr	pc, [ip, #1856]!	; 0x740

0001196c <__freading@plt>:
   1196c:	add	ip, pc, #0, 12
   11970:	add	ip, ip, #110592	; 0x1b000
   11974:	ldr	pc, [ip, #1848]!	; 0x738

00011978 <__gmon_start__@plt>:
   11978:	add	ip, pc, #0, 12
   1197c:	add	ip, ip, #110592	; 0x1b000
   11980:	ldr	pc, [ip, #1840]!	; 0x730

00011984 <context_free@plt>:
   11984:	add	ip, pc, #0, 12
   11988:	add	ip, ip, #110592	; 0x1b000
   1198c:	ldr	pc, [ip, #1832]!	; 0x728

00011990 <getopt_long@plt>:
   11990:	add	ip, pc, #0, 12
   11994:	add	ip, ip, #110592	; 0x1b000
   11998:	ldr	pc, [ip, #1824]!	; 0x720

0001199c <__ctype_b_loc@plt>:
   1199c:	add	ip, pc, #0, 12
   119a0:	add	ip, ip, #110592	; 0x1b000
   119a4:	ldr	pc, [ip, #1816]!	; 0x718

000119a8 <getcwd@plt>:
   119a8:	add	ip, pc, #0, 12
   119ac:	add	ip, ip, #110592	; 0x1b000
   119b0:	ldr	pc, [ip, #1808]!	; 0x710

000119b4 <exit@plt>:
   119b4:	add	ip, pc, #0, 12
   119b8:	add	ip, ip, #110592	; 0x1b000
   119bc:	ldr	pc, [ip, #1800]!	; 0x708

000119c0 <getfilecon@plt>:
   119c0:	add	ip, pc, #0, 12
   119c4:	add	ip, ip, #110592	; 0x1b000
   119c8:	ldr	pc, [ip, #1792]!	; 0x700

000119cc <strlen@plt>:
   119cc:	add	ip, pc, #0, 12
   119d0:	add	ip, ip, #110592	; 0x1b000
   119d4:	ldr	pc, [ip, #1784]!	; 0x6f8

000119d8 <selabel_open@plt>:
   119d8:	add	ip, pc, #0, 12
   119dc:	add	ip, ip, #110592	; 0x1b000
   119e0:	ldr	pc, [ip, #1776]!	; 0x6f0

000119e4 <strchr@plt>:
   119e4:	add	ip, pc, #0, 12
   119e8:	add	ip, ip, #110592	; 0x1b000
   119ec:	ldr	pc, [ip, #1768]!	; 0x6e8

000119f0 <openat64@plt>:
   119f0:	add	ip, pc, #0, 12
   119f4:	add	ip, ip, #110592	; 0x1b000
   119f8:	ldr	pc, [ip, #1760]!	; 0x6e0

000119fc <setfscreatecon@plt>:
   119fc:	add	ip, pc, #0, 12
   11a00:	add	ip, ip, #110592	; 0x1b000
   11a04:	ldr	pc, [ip, #1752]!	; 0x6d8

00011a08 <__errno_location@plt>:
   11a08:	add	ip, pc, #0, 12
   11a0c:	add	ip, ip, #110592	; 0x1b000
   11a10:	ldr	pc, [ip, #1744]!	; 0x6d0

00011a14 <__sprintf_chk@plt>:
   11a14:	add	ip, pc, #0, 12
   11a18:	add	ip, ip, #110592	; 0x1b000
   11a1c:	ldr	pc, [ip, #1736]!	; 0x6c8

00011a20 <__cxa_atexit@plt>:
   11a20:	add	ip, pc, #0, 12
   11a24:	add	ip, ip, #110592	; 0x1b000
   11a28:	ldr	pc, [ip, #1728]!	; 0x6c0

00011a2c <memset@plt>:
   11a2c:	add	ip, pc, #0, 12
   11a30:	add	ip, ip, #110592	; 0x1b000
   11a34:	ldr	pc, [ip, #1720]!	; 0x6b8

00011a38 <__printf_chk@plt>:
   11a38:	add	ip, pc, #0, 12
   11a3c:	add	ip, ip, #110592	; 0x1b000
   11a40:	ldr	pc, [ip, #1712]!	; 0x6b0

00011a44 <fileno@plt>:
   11a44:	add	ip, pc, #0, 12
   11a48:	add	ip, ip, #110592	; 0x1b000
   11a4c:	ldr	pc, [ip, #1704]!	; 0x6a8

00011a50 <__fprintf_chk@plt>:
   11a50:	add	ip, pc, #0, 12
   11a54:	add	ip, ip, #110592	; 0x1b000
   11a58:	ldr	pc, [ip, #1696]!	; 0x6a0

00011a5c <fclose@plt>:
   11a5c:	add	ip, pc, #0, 12
   11a60:	add	ip, ip, #110592	; 0x1b000
   11a64:	ldr	pc, [ip, #1688]!	; 0x698

00011a68 <fseeko64@plt>:
   11a68:	add	ip, pc, #0, 12
   11a6c:	add	ip, ip, #110592	; 0x1b000
   11a70:	ldr	pc, [ip, #1680]!	; 0x690

00011a74 <fcntl64@plt>:
   11a74:	add	ip, pc, #0, 12
   11a78:	add	ip, ip, #110592	; 0x1b000
   11a7c:	ldr	pc, [ip, #1672]!	; 0x688

00011a80 <setlocale@plt>:
   11a80:	add	ip, pc, #0, 12
   11a84:	add	ip, ip, #110592	; 0x1b000
   11a88:	ldr	pc, [ip, #1664]!	; 0x680

00011a8c <fsetfilecon@plt>:
   11a8c:	add	ip, pc, #0, 12
   11a90:	add	ip, ip, #110592	; 0x1b000
   11a94:	ldr	pc, [ip, #1656]!	; 0x678

00011a98 <strrchr@plt>:
   11a98:	add	ip, pc, #0, 12
   11a9c:	add	ip, ip, #110592	; 0x1b000
   11aa0:	ldr	pc, [ip, #1648]!	; 0x670

00011aa4 <nl_langinfo@plt>:
   11aa4:	add	ip, pc, #0, 12
   11aa8:	add	ip, ip, #110592	; 0x1b000
   11aac:	ldr	pc, [ip, #1640]!	; 0x668

00011ab0 <readdir64@plt>:
   11ab0:	add	ip, pc, #0, 12
   11ab4:	add	ip, ip, #110592	; 0x1b000
   11ab8:	ldr	pc, [ip, #1632]!	; 0x660

00011abc <fdopendir@plt>:
   11abc:	add	ip, pc, #0, 12
   11ac0:	add	ip, ip, #110592	; 0x1b000
   11ac4:	ldr	pc, [ip, #1624]!	; 0x658

00011ac8 <security_compute_create@plt>:
   11ac8:	add	ip, pc, #0, 12
   11acc:	add	ip, ip, #110592	; 0x1b000
   11ad0:	ldr	pc, [ip, #1616]!	; 0x650

00011ad4 <dirfd@plt>:
   11ad4:	add	ip, pc, #0, 12
   11ad8:	add	ip, ip, #110592	; 0x1b000
   11adc:	ldr	pc, [ip, #1608]!	; 0x648

00011ae0 <fchdir@plt>:
   11ae0:	add	ip, pc, #0, 12
   11ae4:	add	ip, ip, #110592	; 0x1b000
   11ae8:	ldr	pc, [ip, #1600]!	; 0x640

00011aec <qsort@plt>:
   11aec:	add	ip, pc, #0, 12
   11af0:	add	ip, ip, #110592	; 0x1b000
   11af4:	ldr	pc, [ip, #1592]!	; 0x638

00011af8 <freecon@plt>:
   11af8:	add	ip, pc, #0, 12
   11afc:	add	ip, ip, #110592	; 0x1b000
   11b00:	ldr	pc, [ip, #1584]!	; 0x630

00011b04 <bindtextdomain@plt>:
   11b04:	add	ip, pc, #0, 12
   11b08:	add	ip, ip, #110592	; 0x1b000
   11b0c:	ldr	pc, [ip, #1576]!	; 0x628

00011b10 <getfscreatecon@plt>:
   11b10:	add	ip, pc, #0, 12
   11b14:	add	ip, ip, #110592	; 0x1b000
   11b18:	ldr	pc, [ip, #1568]!	; 0x620

00011b1c <umask@plt>:
   11b1c:	add	ip, pc, #0, 12
   11b20:	add	ip, ip, #110592	; 0x1b000
   11b24:	ldr	pc, [ip, #1560]!	; 0x618

00011b28 <context_str@plt>:
   11b28:	add	ip, pc, #0, 12
   11b2c:	add	ip, ip, #110592	; 0x1b000
   11b30:	ldr	pc, [ip, #1552]!	; 0x610

00011b34 <chmod@plt>:
   11b34:	add	ip, pc, #0, 12
   11b38:	add	ip, ip, #110592	; 0x1b000
   11b3c:	ldr	pc, [ip, #1544]!	; 0x608

00011b40 <__xstat64@plt>:
   11b40:	add	ip, pc, #0, 12
   11b44:	add	ip, ip, #110592	; 0x1b000
   11b48:	ldr	pc, [ip, #1536]!	; 0x600

00011b4c <__xmknod@plt>:
   11b4c:	add	ip, pc, #0, 12
   11b50:	add	ip, ip, #110592	; 0x1b000
   11b54:	ldr	pc, [ip, #1528]!	; 0x5f8

00011b58 <strncmp@plt>:
   11b58:	add	ip, pc, #0, 12
   11b5c:	add	ip, ip, #110592	; 0x1b000
   11b60:	ldr	pc, [ip, #1520]!	; 0x5f0

00011b64 <abort@plt>:
   11b64:	add	ip, pc, #0, 12
   11b68:	add	ip, ip, #110592	; 0x1b000
   11b6c:	ldr	pc, [ip, #1512]!	; 0x5e8

00011b70 <close@plt>:
   11b70:	add	ip, pc, #0, 12
   11b74:	add	ip, ip, #110592	; 0x1b000
   11b78:	ldr	pc, [ip, #1504]!	; 0x5e0

00011b7c <__lxstat64@plt>:
   11b7c:	add	ip, pc, #0, 12
   11b80:	add	ip, ip, #110592	; 0x1b000
   11b84:	ldr	pc, [ip, #1496]!	; 0x5d8

00011b88 <mkfifo@plt>:
   11b88:	add	ip, pc, #0, 12
   11b8c:	add	ip, ip, #110592	; 0x1b000
   11b90:	ldr	pc, [ip, #1488]!	; 0x5d0

00011b94 <mode_to_security_class@plt>:
   11b94:	add	ip, pc, #0, 12
   11b98:	add	ip, ip, #110592	; 0x1b000
   11b9c:	ldr	pc, [ip, #1480]!	; 0x5c8

00011ba0 <closedir@plt>:
   11ba0:	add	ip, pc, #0, 12
   11ba4:	add	ip, ip, #110592	; 0x1b000
   11ba8:	ldr	pc, [ip, #1472]!	; 0x5c0

00011bac <strspn@plt>:
   11bac:	add	ip, pc, #0, 12
   11bb0:	add	ip, ip, #110592	; 0x1b000
   11bb4:	ldr	pc, [ip, #1464]!	; 0x5b8

00011bb8 <__mempcpy_chk@plt>:
   11bb8:	add	ip, pc, #0, 12
   11bbc:	add	ip, ip, #110592	; 0x1b000
   11bc0:	ldr	pc, [ip, #1456]!	; 0x5b0

00011bc4 <__assert_fail@plt>:
   11bc4:	add	ip, pc, #0, 12
   11bc8:	add	ip, ip, #110592	; 0x1b000
   11bcc:	ldr	pc, [ip, #1448]!	; 0x5a8

Disassembly of section .text:

00011bd0 <lchmod@@Base-0x52d8>:
   11bd0:	mov	fp, #0
   11bd4:	mov	lr, #0
   11bd8:	pop	{r1}		; (ldr r1, [sp], #4)
   11bdc:	mov	r2, sp
   11be0:	push	{r2}		; (str r2, [sp, #-4]!)
   11be4:	push	{r0}		; (str r0, [sp, #-4]!)
   11be8:	ldr	ip, [pc, #16]	; 11c00 <__assert_fail@plt+0x3c>
   11bec:	push	{ip}		; (str ip, [sp, #-4]!)
   11bf0:	ldr	r0, [pc, #12]	; 11c04 <__assert_fail@plt+0x40>
   11bf4:	ldr	r3, [pc, #12]	; 11c08 <__assert_fail@plt+0x44>
   11bf8:	bl	11960 <__libc_start_main@plt>
   11bfc:	bl	11b64 <abort@plt>
   11c00:	andeq	fp, r1, r0, lsr #21
   11c04:			; <UNDEFINED> instruction: 0x00011fb4
   11c08:	andeq	fp, r1, r0, asr #20
   11c0c:	ldr	r3, [pc, #20]	; 11c28 <__assert_fail@plt+0x64>
   11c10:	ldr	r2, [pc, #20]	; 11c2c <__assert_fail@plt+0x68>
   11c14:	add	r3, pc, r3
   11c18:	ldr	r2, [r3, r2]
   11c1c:	cmp	r2, #0
   11c20:	bxeq	lr
   11c24:	b	11978 <__gmon_start__@plt>
   11c28:	andeq	fp, r1, r4, ror #7
   11c2c:	andeq	r0, r0, r8, ror r1
   11c30:	ldr	r0, [pc, #24]	; 11c50 <__assert_fail@plt+0x8c>
   11c34:	ldr	r3, [pc, #24]	; 11c54 <__assert_fail@plt+0x90>
   11c38:	cmp	r3, r0
   11c3c:	bxeq	lr
   11c40:	ldr	r3, [pc, #16]	; 11c58 <__assert_fail@plt+0x94>
   11c44:	cmp	r3, #0
   11c48:	bxeq	lr
   11c4c:	bx	r3
   11c50:	ldrdeq	sp, [r2], -r0
   11c54:	ldrdeq	sp, [r2], -r0
   11c58:	andeq	r0, r0, r0
   11c5c:	ldr	r0, [pc, #36]	; 11c88 <__assert_fail@plt+0xc4>
   11c60:	ldr	r1, [pc, #36]	; 11c8c <__assert_fail@plt+0xc8>
   11c64:	sub	r1, r1, r0
   11c68:	asr	r1, r1, #2
   11c6c:	add	r1, r1, r1, lsr #31
   11c70:	asrs	r1, r1, #1
   11c74:	bxeq	lr
   11c78:	ldr	r3, [pc, #16]	; 11c90 <__assert_fail@plt+0xcc>
   11c7c:	cmp	r3, #0
   11c80:	bxeq	lr
   11c84:	bx	r3
   11c88:	ldrdeq	sp, [r2], -r0
   11c8c:	ldrdeq	sp, [r2], -r0
   11c90:	andeq	r0, r0, r0
   11c94:	push	{r4, lr}
   11c98:	ldr	r4, [pc, #24]	; 11cb8 <__assert_fail@plt+0xf4>
   11c9c:	ldrb	r3, [r4]
   11ca0:	cmp	r3, #0
   11ca4:	popne	{r4, pc}
   11ca8:	bl	11c30 <__assert_fail@plt+0x6c>
   11cac:	mov	r3, #1
   11cb0:	strb	r3, [r4]
   11cb4:	pop	{r4, pc}
   11cb8:	andeq	sp, r2, ip, ror #3
   11cbc:	b	11c5c <__assert_fail@plt+0x98>
   11cc0:	push	{fp, lr}
   11cc4:	mov	fp, sp
   11cc8:	sub	sp, sp, #56	; 0x38
   11ccc:	mov	r4, r0
   11cd0:	cmp	r0, #0
   11cd4:	bne	11f70 <__assert_fail@plt+0x3ac>
   11cd8:	movw	r1, #47867	; 0xbafb
   11cdc:	mov	r0, #0
   11ce0:	mov	r2, #5
   11ce4:	movt	r1, #1
   11ce8:	bl	11870 <dcgettext@plt>
   11cec:	mov	r1, r0
   11cf0:	movw	r0, #53752	; 0xd1f8
   11cf4:	movt	r0, #2
   11cf8:	ldr	r2, [r0]
   11cfc:	mov	r0, #1
   11d00:	bl	11a38 <__printf_chk@plt>
   11d04:	movw	r1, #47914	; 0xbb2a
   11d08:	mov	r0, #0
   11d0c:	mov	r2, #5
   11d10:	movt	r1, #1
   11d14:	bl	11870 <dcgettext@plt>
   11d18:	movw	r7, #53732	; 0xd1e4
   11d1c:	movt	r7, #2
   11d20:	ldr	r1, [r7]
   11d24:	bl	117b0 <fputs_unlocked@plt>
   11d28:	movw	r1, #49490	; 0xc152
   11d2c:	mov	r0, #0
   11d30:	mov	r2, #5
   11d34:	movt	r1, #1
   11d38:	bl	11870 <dcgettext@plt>
   11d3c:	ldr	r1, [r7]
   11d40:	bl	117b0 <fputs_unlocked@plt>
   11d44:	movw	r1, #47963	; 0xbb5b
   11d48:	mov	r0, #0
   11d4c:	mov	r2, #5
   11d50:	movt	r1, #1
   11d54:	bl	11870 <dcgettext@plt>
   11d58:	ldr	r1, [r7]
   11d5c:	bl	117b0 <fputs_unlocked@plt>
   11d60:	movw	r1, #48036	; 0xbba4
   11d64:	mov	r0, #0
   11d68:	mov	r2, #5
   11d6c:	movt	r1, #1
   11d70:	bl	11870 <dcgettext@plt>
   11d74:	ldr	r1, [r7]
   11d78:	bl	117b0 <fputs_unlocked@plt>
   11d7c:	movw	r1, #48243	; 0xbc73
   11d80:	mov	r0, #0
   11d84:	mov	r2, #5
   11d88:	movt	r1, #1
   11d8c:	bl	11870 <dcgettext@plt>
   11d90:	ldr	r1, [r7]
   11d94:	bl	117b0 <fputs_unlocked@plt>
   11d98:	movw	r1, #48288	; 0xbca0
   11d9c:	mov	r0, #0
   11da0:	mov	r2, #5
   11da4:	movt	r1, #1
   11da8:	bl	11870 <dcgettext@plt>
   11dac:	ldr	r1, [r7]
   11db0:	bl	117b0 <fputs_unlocked@plt>
   11db4:	movw	r1, #48342	; 0xbcd6
   11db8:	mov	r0, #0
   11dbc:	mov	r2, #5
   11dc0:	movt	r1, #1
   11dc4:	bl	11870 <dcgettext@plt>
   11dc8:	ldr	r1, [r7]
   11dcc:	bl	117b0 <fputs_unlocked@plt>
   11dd0:	movw	r1, #48603	; 0xbddb
   11dd4:	mov	r0, #0
   11dd8:	mov	r2, #5
   11ddc:	movt	r1, #1
   11de0:	bl	11870 <dcgettext@plt>
   11de4:	ldr	r1, [r7]
   11de8:	bl	117b0 <fputs_unlocked@plt>
   11dec:	movw	r1, #48730	; 0xbe5a
   11df0:	mov	r0, #0
   11df4:	mov	r2, #5
   11df8:	movt	r1, #1
   11dfc:	bl	11870 <dcgettext@plt>
   11e00:	movw	r5, #48921	; 0xbf19
   11e04:	mov	r1, r0
   11e08:	mov	r0, #1
   11e0c:	movt	r5, #1
   11e10:	mov	r2, r5
   11e14:	bl	11a38 <__printf_chk@plt>
   11e18:	movw	r0, #49976	; 0xc338
   11e1c:	mov	r2, #48	; 0x30
   11e20:	mov	r6, sp
   11e24:	movt	r0, #1
   11e28:	add	r1, r0, #32
   11e2c:	add	r3, r0, #16
   11e30:	vld1.64	{d18-d19}, [r0], r2
   11e34:	vld1.64	{d16-d17}, [r1]
   11e38:	vld1.64	{d20-d21}, [r3]
   11e3c:	add	r1, r6, #32
   11e40:	vldr	d22, [r0]
   11e44:	add	r0, r6, #16
   11e48:	vst1.64	{d16-d17}, [r1]
   11e4c:	movw	r1, #49565	; 0xc19d
   11e50:	vst1.64	{d20-d21}, [r0]
   11e54:	mov	r0, r6
   11e58:	vst1.64	{d18-d19}, [r0], r2
   11e5c:	movt	r1, #1
   11e60:	vstr	d22, [r0]
   11e64:	mov	r0, r5
   11e68:	bl	117d4 <strcmp@plt>
   11e6c:	cmp	r0, #0
   11e70:	ldrne	r1, [r6, #8]!
   11e74:	cmpne	r1, #0
   11e78:	bne	11e64 <__assert_fail@plt+0x2a0>
   11e7c:	ldr	r6, [r6, #4]
   11e80:	movw	r1, #49660	; 0xc1fc
   11e84:	mov	r0, #0
   11e88:	mov	r2, #5
   11e8c:	movt	r1, #1
   11e90:	bl	11870 <dcgettext@plt>
   11e94:	movw	r2, #49056	; 0xbfa0
   11e98:	movw	r3, #49683	; 0xc213
   11e9c:	mov	r1, r0
   11ea0:	mov	r0, #1
   11ea4:	movt	r2, #1
   11ea8:	movt	r3, #1
   11eac:	bl	11a38 <__printf_chk@plt>
   11eb0:	cmp	r6, #0
   11eb4:	mov	r0, #5
   11eb8:	mov	r1, #0
   11ebc:	moveq	r6, r5
   11ec0:	bl	11a80 <setlocale@plt>
   11ec4:	cmp	r0, #0
   11ec8:	beq	11f00 <__assert_fail@plt+0x33c>
   11ecc:	movw	r1, #49723	; 0xc23b
   11ed0:	mov	r2, #3
   11ed4:	movt	r1, #1
   11ed8:	bl	11b58 <strncmp@plt>
   11edc:	cmp	r0, #0
   11ee0:	beq	11f00 <__assert_fail@plt+0x33c>
   11ee4:	movw	r1, #49727	; 0xc23f
   11ee8:	mov	r0, #0
   11eec:	mov	r2, #5
   11ef0:	movt	r1, #1
   11ef4:	bl	11870 <dcgettext@plt>
   11ef8:	ldr	r1, [r7]
   11efc:	bl	117b0 <fputs_unlocked@plt>
   11f00:	movw	r1, #49798	; 0xc286
   11f04:	mov	r0, #0
   11f08:	mov	r2, #5
   11f0c:	movt	r1, #1
   11f10:	bl	11870 <dcgettext@plt>
   11f14:	movw	r2, #49683	; 0xc213
   11f18:	mov	r1, r0
   11f1c:	mov	r0, #1
   11f20:	mov	r3, r5
   11f24:	movt	r2, #1
   11f28:	bl	11a38 <__printf_chk@plt>
   11f2c:	movw	r1, #49825	; 0xc2a1
   11f30:	mov	r0, #0
   11f34:	mov	r2, #5
   11f38:	movt	r1, #1
   11f3c:	bl	11870 <dcgettext@plt>
   11f40:	movw	r3, #49875	; 0xc2d3
   11f44:	mov	r1, r0
   11f48:	movw	r0, #49593	; 0xc1b9
   11f4c:	cmp	r6, r5
   11f50:	mov	r2, r6
   11f54:	movt	r0, #1
   11f58:	movt	r3, #1
   11f5c:	moveq	r3, r0
   11f60:	mov	r0, #1
   11f64:	bl	11a38 <__printf_chk@plt>
   11f68:	mov	r0, r4
   11f6c:	bl	119b4 <exit@plt>
   11f70:	movw	r0, #53728	; 0xd1e0
   11f74:	movw	r1, #47828	; 0xbad4
   11f78:	mov	r2, #5
   11f7c:	movt	r0, #2
   11f80:	movt	r1, #1
   11f84:	ldr	r5, [r0]
   11f88:	mov	r0, #0
   11f8c:	bl	11870 <dcgettext@plt>
   11f90:	mov	r2, r0
   11f94:	movw	r0, #53752	; 0xd1f8
   11f98:	mov	r1, #1
   11f9c:	movt	r0, #2
   11fa0:	ldr	r3, [r0]
   11fa4:	mov	r0, r5
   11fa8:	bl	11a50 <__fprintf_chk@plt>
   11fac:	mov	r0, r4
   11fb0:	bl	119b4 <exit@plt>
   11fb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11fb8:	add	fp, sp, #28
   11fbc:	sub	sp, sp, #52	; 0x34
   11fc0:	mov	r6, r0
   11fc4:	ldr	r0, [r1]
   11fc8:	mov	r4, r1
   11fcc:	bl	17610 <lchmod@@Base+0x768>
   11fd0:	movw	r1, #49875	; 0xc2d3
   11fd4:	mov	r0, #6
   11fd8:	movt	r1, #1
   11fdc:	bl	11a80 <setlocale@plt>
   11fe0:	movw	r5, #49060	; 0xbfa4
   11fe4:	movw	r1, #48927	; 0xbf1f
   11fe8:	movt	r5, #1
   11fec:	movt	r1, #1
   11ff0:	mov	r0, r5
   11ff4:	bl	11b04 <bindtextdomain@plt>
   11ff8:	mov	r0, r5
   11ffc:	bl	118a0 <textdomain@plt>
   12000:	movw	r0, #13316	; 0x3404
   12004:	movt	r0, #1
   12008:	bl	1baa4 <lchmod@@Base+0x4bfc>
   1200c:	movw	r5, #48951	; 0xbf37
   12010:	movw	r8, #49896	; 0xc2e8
   12014:	mov	r0, #0
   12018:	mov	r9, #0
   1201c:	mov	r1, #0
   12020:	mov	sl, #0
   12024:	movt	r5, #1
   12028:	movt	r8, #1
   1202c:	str	r0, [sp, #16]
   12030:	b	12070 <__assert_fail@plt+0x4ac>
   12034:	bl	11a08 <__errno_location@plt>
   12038:	ldr	r0, [r0]
   1203c:	movw	r1, #48955	; 0xbf3b
   12040:	mov	r2, #5
   12044:	movt	r1, #1
   12048:	str	r0, [sp, #20]
   1204c:	mov	r0, #0
   12050:	str	r0, [sp, #16]
   12054:	mov	r0, #0
   12058:	bl	11870 <dcgettext@plt>
   1205c:	ldr	r1, [sp, #20]
   12060:	mov	r2, r0
   12064:	mov	r0, #0
   12068:	bl	11930 <error@plt>
   1206c:	mov	r1, r7
   12070:	mov	r7, r1
   12074:	b	12094 <__assert_fail@plt+0x4d0>
   12078:	movw	r0, #53736	; 0xd1e8
   1207c:	movt	r0, #2
   12080:	ldr	sl, [r0]
   12084:	b	12094 <__assert_fail@plt+0x4d0>
   12088:	cmp	r0, #109	; 0x6d
   1208c:	beq	12078 <__assert_fail@plt+0x4b4>
   12090:	b	126bc <__assert_fail@plt+0xaf8>
   12094:	mov	r0, r6
   12098:	mov	r1, r4
   1209c:	mov	r2, r5
   120a0:	mov	r3, r8
   120a4:	str	r9, [sp]
   120a8:	bl	11990 <getopt_long@plt>
   120ac:	cmp	r0, #89	; 0x59
   120b0:	ble	12130 <__assert_fail@plt+0x56c>
   120b4:	cmp	r0, #90	; 0x5a
   120b8:	bne	12088 <__assert_fail@plt+0x4c4>
   120bc:	bl	117c8 <is_selinux_enabled@plt>
   120c0:	movw	r1, #53736	; 0xd1e8
   120c4:	cmp	r0, #1
   120c8:	movt	r1, #2
   120cc:	ldr	r1, [r1]
   120d0:	bge	12104 <__assert_fail@plt+0x540>
   120d4:	cmp	r1, #0
   120d8:	beq	12094 <__assert_fail@plt+0x4d0>
   120dc:	movw	r1, #48983	; 0xbf57
   120e0:	mov	r0, #0
   120e4:	mov	r2, #5
   120e8:	movt	r1, #1
   120ec:	bl	11870 <dcgettext@plt>
   120f0:	mov	r2, r0
   120f4:	mov	r0, #0
   120f8:	mov	r1, #0
   120fc:	bl	11930 <error@plt>
   12100:	b	12094 <__assert_fail@plt+0x4d0>
   12104:	cmp	r1, #0
   12108:	bne	12070 <__assert_fail@plt+0x4ac>
   1210c:	mov	r0, #0
   12110:	mov	r1, #0
   12114:	mov	r2, #0
   12118:	bl	119d8 <selabel_open@plt>
   1211c:	cmp	r0, #0
   12120:	mov	r1, r7
   12124:	str	r0, [sp, #16]
   12128:	bne	12070 <__assert_fail@plt+0x4ac>
   1212c:	b	12034 <__assert_fail@plt+0x470>
   12130:	cmn	r0, #1
   12134:	bne	1246c <__assert_fail@plt+0x8a8>
   12138:	cmp	sl, #0
   1213c:	beq	121a4 <__assert_fail@plt+0x5e0>
   12140:	mov	r0, sl
   12144:	bl	16fcc <lchmod@@Base+0x124>
   12148:	cmp	r0, #0
   1214c:	beq	125e0 <__assert_fail@plt+0xa1c>
   12150:	mov	r5, r0
   12154:	mov	r0, #0
   12158:	mov	r9, r7
   1215c:	mov	r8, #0
   12160:	bl	11b1c <umask@plt>
   12164:	mov	r7, r0
   12168:	bl	11b1c <umask@plt>
   1216c:	movw	r0, #438	; 0x1b6
   12170:	mov	r1, #0
   12174:	mov	r2, r7
   12178:	mov	r3, r5
   1217c:	str	r8, [sp]
   12180:	bl	17468 <lchmod@@Base+0x5c0>
   12184:	mov	r8, r0
   12188:	mov	r0, r5
   1218c:	bl	136a8 <__assert_fail@plt+0x1ae4>
   12190:	cmp	r8, #512	; 0x200
   12194:	bcc	121ac <__assert_fail@plt+0x5e8>
   12198:	movw	r1, #49099	; 0xbfcb
   1219c:	movt	r1, #1
   121a0:	b	125e8 <__assert_fail@plt+0xa24>
   121a4:	mov	r9, r7
   121a8:	movw	r8, #438	; 0x1b6
   121ac:	movw	r0, #53720	; 0xd1d8
   121b0:	movt	r0, #2
   121b4:	ldr	r7, [r0]
   121b8:	cmp	r7, r6
   121bc:	bge	121e4 <__assert_fail@plt+0x620>
   121c0:	add	r1, r7, #1
   121c4:	mov	r5, #4
   121c8:	mov	r0, #0
   121cc:	cmp	r1, r6
   121d0:	bge	121ec <__assert_fail@plt+0x628>
   121d4:	ldr	r1, [r4, r1, lsl #2]
   121d8:	ldrb	r1, [r1]
   121dc:	cmp	r1, #112	; 0x70
   121e0:	bne	121ec <__assert_fail@plt+0x628>
   121e4:	mov	r5, #2
   121e8:	mov	r0, #1
   121ec:	sub	r1, r6, r7
   121f0:	cmp	r1, r5
   121f4:	bcc	12510 <__assert_fail@plt+0x94c>
   121f8:	cmp	r5, r1
   121fc:	bcc	12560 <__assert_fail@plt+0x99c>
   12200:	movw	r6, #53720	; 0xd1d8
   12204:	cmp	r9, #0
   12208:	movt	r6, #2
   1220c:	beq	12224 <__assert_fail@plt+0x660>
   12210:	mov	r0, r9
   12214:	bl	119fc <setfscreatecon@plt>
   12218:	cmp	r0, #0
   1221c:	blt	12604 <__assert_fail@plt+0xa40>
   12220:	ldr	r7, [r6]
   12224:	add	r1, r4, r7, lsl #2
   12228:	ldr	r2, [r1, #4]
   1222c:	ldrb	r2, [r2]
   12230:	sub	r2, r2, #98	; 0x62
   12234:	cmp	r2, #19
   12238:	bhi	124cc <__assert_fail@plt+0x908>
   1223c:	add	r3, pc, #4
   12240:	mov	r5, #24576	; 0x6000
   12244:	ldr	pc, [r3, r2, lsl #2]
   12248:	muleq	r1, ip, r2
   1224c:	muleq	r1, r8, r2
   12250:	andeq	r2, r1, ip, asr #9
   12254:	andeq	r2, r1, ip, asr #9
   12258:	andeq	r2, r1, ip, asr #9
   1225c:	andeq	r2, r1, ip, asr #9
   12260:	andeq	r2, r1, ip, asr #9
   12264:	andeq	r2, r1, ip, asr #9
   12268:	andeq	r2, r1, ip, asr #9
   1226c:	andeq	r2, r1, ip, asr #9
   12270:	andeq	r2, r1, ip, asr #9
   12274:	andeq	r2, r1, ip, asr #9
   12278:	andeq	r2, r1, ip, asr #9
   1227c:	andeq	r2, r1, ip, asr #9
   12280:	andeq	r2, r1, r0, ror r3
   12284:	andeq	r2, r1, ip, asr #9
   12288:	andeq	r2, r1, ip, asr #9
   1228c:	andeq	r2, r1, ip, asr #9
   12290:	andeq	r2, r1, ip, asr #9
   12294:	muleq	r1, r8, r2
   12298:	mov	r5, #8192	; 0x2000
   1229c:	str	r4, [sp, #20]
   122a0:	ldr	r4, [r1, #8]
   122a4:	ldr	r6, [r1, #12]
   122a8:	movw	r7, #49875	; 0xc2d3
   122ac:	add	r3, sp, #32
   122b0:	mov	r1, #0
   122b4:	mov	r2, #0
   122b8:	movt	r7, #1
   122bc:	str	r7, [sp]
   122c0:	mov	r0, r4
   122c4:	bl	1a370 <lchmod@@Base+0x34c8>
   122c8:	cmp	r0, #0
   122cc:	ldreq	r0, [sp, #36]	; 0x24
   122d0:	cmpeq	r0, #0
   122d4:	beq	1230c <__assert_fail@plt+0x748>
   122d8:	movw	r1, #49355	; 0xc0cb
   122dc:	mov	r0, #0
   122e0:	mov	r2, #5
   122e4:	movt	r1, #1
   122e8:	bl	11870 <dcgettext@plt>
   122ec:	mov	r5, r0
   122f0:	mov	r0, r4
   122f4:	bl	19244 <lchmod@@Base+0x239c>
   122f8:	mov	r3, r0
   122fc:	mov	r0, #1
   12300:	mov	r1, #0
   12304:	mov	r2, r5
   12308:	bl	11930 <error@plt>
   1230c:	add	r3, sp, #24
   12310:	mov	r0, r6
   12314:	mov	r1, #0
   12318:	mov	r2, #0
   1231c:	str	r4, [sp, #12]
   12320:	str	r7, [sp]
   12324:	str	r6, [sp, #8]
   12328:	bl	1a370 <lchmod@@Base+0x34c8>
   1232c:	cmp	r0, #0
   12330:	ldreq	r0, [sp, #28]
   12334:	cmpeq	r0, #0
   12338:	beq	123ac <__assert_fail@plt+0x7e8>
   1233c:	movw	r1, #49386	; 0xc0ea
   12340:	mov	r0, #0
   12344:	mov	r2, #5
   12348:	movt	r1, #1
   1234c:	bl	11870 <dcgettext@plt>
   12350:	mov	r4, r0
   12354:	ldr	r0, [sp, #8]
   12358:	bl	19244 <lchmod@@Base+0x239c>
   1235c:	mov	r3, r0
   12360:	mov	r0, #1
   12364:	mov	r1, #0
   12368:	mov	r2, r4
   1236c:	bl	11930 <error@plt>
   12370:	ldr	r0, [sp, #16]
   12374:	cmp	r0, #0
   12378:	beq	1238c <__assert_fail@plt+0x7c8>
   1237c:	ldr	r1, [r4, r7, lsl #2]
   12380:	mov	r2, #4096	; 0x1000
   12384:	bl	12784 <__assert_fail@plt+0xbc0>
   12388:	ldr	r7, [r6]
   1238c:	ldr	r0, [r4, r7, lsl #2]
   12390:	mov	r1, r8
   12394:	bl	11b88 <mkfifo@plt>
   12398:	cmp	r0, #0
   1239c:	bne	1270c <__assert_fail@plt+0xb48>
   123a0:	cmp	sl, #0
   123a4:	bne	12448 <__assert_fail@plt+0x884>
   123a8:	b	12460 <__assert_fail@plt+0x89c>
   123ac:	ldr	r0, [sp, #24]
   123b0:	movw	r1, #0
   123b4:	movw	r3, #65280	; 0xff00
   123b8:	movt	r1, #65520	; 0xfff0
   123bc:	movt	r3, #15
   123c0:	and	r1, r1, r0, lsl #12
   123c4:	uxtb	r2, r0
   123c8:	orr	r1, r1, r2
   123cc:	ldr	r2, [sp, #32]
   123d0:	and	r3, r3, r2, lsl #8
   123d4:	bfc	r2, #0, #12
   123d8:	orr	r7, r1, r3
   123dc:	orr	r9, r2, r0, lsr #20
   123e0:	and	r0, r7, r9
   123e4:	cmn	r0, #1
   123e8:	beq	1271c <__assert_fail@plt+0xb58>
   123ec:	ldr	r0, [sp, #16]
   123f0:	ldr	r4, [sp, #20]
   123f4:	movw	r6, #53720	; 0xd1d8
   123f8:	movt	r6, #2
   123fc:	cmp	r0, #0
   12400:	beq	12414 <__assert_fail@plt+0x850>
   12404:	ldr	r1, [r6]
   12408:	mov	r2, r5
   1240c:	ldr	r1, [r4, r1, lsl #2]
   12410:	bl	12784 <__assert_fail@plt+0xbc0>
   12414:	ldr	r0, [r6]
   12418:	orr	r2, r5, r8
   1241c:	add	r3, sp, #40	; 0x28
   12420:	ldr	r1, [r4, r0, lsl #2]
   12424:	mov	r0, #1
   12428:	str	r9, [sp, #44]	; 0x2c
   1242c:	str	r7, [sp, #40]	; 0x28
   12430:	bl	11b4c <__xmknod@plt>
   12434:	cmp	r0, #0
   12438:	bne	1274c <__assert_fail@plt+0xb88>
   1243c:	ldr	r4, [sp, #20]
   12440:	cmp	sl, #0
   12444:	beq	12460 <__assert_fail@plt+0x89c>
   12448:	ldr	r0, [r6]
   1244c:	mov	r1, r8
   12450:	ldr	r0, [r4, r0, lsl #2]
   12454:	bl	16ea8 <lchmod@@Base>
   12458:	cmp	r0, #0
   1245c:	bne	126c4 <__assert_fail@plt+0xb00>
   12460:	mov	r0, #0
   12464:	sub	sp, fp, #28
   12468:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1246c:	cmn	r0, #3
   12470:	bne	124bc <__assert_fail@plt+0x8f8>
   12474:	movw	r0, #53640	; 0xd188
   12478:	movw	r2, #49070	; 0xbfae
   1247c:	mov	r1, #0
   12480:	movt	r0, #2
   12484:	movt	r2, #1
   12488:	str	r1, [sp, #4]
   1248c:	movw	r1, #48921	; 0xbf19
   12490:	ldr	r3, [r0]
   12494:	movw	r0, #53732	; 0xd1e4
   12498:	str	r2, [sp]
   1249c:	movw	r2, #49056	; 0xbfa0
   124a0:	movt	r1, #1
   124a4:	movt	r0, #2
   124a8:	movt	r2, #1
   124ac:	ldr	r0, [r0]
   124b0:	bl	19b1c <lchmod@@Base+0x2c74>
   124b4:	mov	r0, #0
   124b8:	bl	119b4 <exit@plt>
   124bc:	cmn	r0, #2
   124c0:	bne	126bc <__assert_fail@plt+0xaf8>
   124c4:	mov	r0, #0
   124c8:	bl	11cc0 <__assert_fail@plt+0xfc>
   124cc:	movw	r1, #49438	; 0xc11e
   124d0:	mov	r0, #0
   124d4:	mov	r2, #5
   124d8:	movt	r1, #1
   124dc:	bl	11870 <dcgettext@plt>
   124e0:	mov	r5, r0
   124e4:	ldr	r0, [r6]
   124e8:	add	r0, r4, r0, lsl #2
   124ec:	ldr	r0, [r0, #4]
   124f0:	bl	19244 <lchmod@@Base+0x239c>
   124f4:	mov	r3, r0
   124f8:	mov	r0, #0
   124fc:	mov	r1, #0
   12500:	mov	r2, r5
   12504:	bl	11930 <error@plt>
   12508:	mov	r0, #1
   1250c:	bl	11cc0 <__assert_fail@plt+0xfc>
   12510:	mov	r5, r0
   12514:	cmp	r7, r6
   12518:	bge	12640 <__assert_fail@plt+0xa7c>
   1251c:	movw	r1, #49159	; 0xc007
   12520:	mov	r0, #0
   12524:	mov	r2, #5
   12528:	movt	r1, #1
   1252c:	bl	11870 <dcgettext@plt>
   12530:	mov	r7, r0
   12534:	add	r0, r4, r6, lsl #2
   12538:	ldr	r0, [r0, #-4]
   1253c:	bl	19244 <lchmod@@Base+0x239c>
   12540:	mov	r3, r0
   12544:	mov	r0, #0
   12548:	mov	r1, #0
   1254c:	mov	r2, r7
   12550:	bl	11930 <error@plt>
   12554:	cmp	r5, #0
   12558:	beq	1266c <__assert_fail@plt+0xaa8>
   1255c:	b	126bc <__assert_fail@plt+0xaf8>
   12560:	movw	r1, #49238	; 0xc056
   12564:	mov	r7, r0
   12568:	mov	r0, #0
   1256c:	mov	r2, #5
   12570:	movt	r1, #1
   12574:	bl	11870 <dcgettext@plt>
   12578:	mov	r1, r4
   1257c:	mov	r4, r0
   12580:	movw	r0, #53720	; 0xd1d8
   12584:	movt	r0, #2
   12588:	ldr	r0, [r0]
   1258c:	add	r0, r0, r5
   12590:	ldr	r0, [r1, r0, lsl #2]
   12594:	bl	19244 <lchmod@@Base+0x239c>
   12598:	mov	r3, r0
   1259c:	mov	r0, #0
   125a0:	mov	r1, #0
   125a4:	mov	r2, r4
   125a8:	bl	11930 <error@plt>
   125ac:	cmp	r7, #0
   125b0:	beq	126bc <__assert_fail@plt+0xaf8>
   125b4:	movw	r0, #53720	; 0xd1d8
   125b8:	movt	r0, #2
   125bc:	ldr	r0, [r0]
   125c0:	sub	r0, r6, r0
   125c4:	cmp	r0, #4
   125c8:	bne	126bc <__assert_fail@plt+0xaf8>
   125cc:	movw	r0, #53728	; 0xd1e0
   125d0:	movw	r1, #49255	; 0xc067
   125d4:	movt	r0, #2
   125d8:	movt	r1, #1
   125dc:	b	12694 <__assert_fail@plt+0xad0>
   125e0:	movw	r1, #49086	; 0xbfbe
   125e4:	movt	r1, #1
   125e8:	mov	r0, #0
   125ec:	mov	r2, #5
   125f0:	bl	11870 <dcgettext@plt>
   125f4:	mov	r2, r0
   125f8:	mov	r0, #1
   125fc:	mov	r1, #0
   12600:	bl	11930 <error@plt>
   12604:	bl	11a08 <__errno_location@plt>
   12608:	ldr	r4, [r0]
   1260c:	movw	r1, #49305	; 0xc099
   12610:	mov	r0, #0
   12614:	mov	r2, #5
   12618:	movt	r1, #1
   1261c:	bl	11870 <dcgettext@plt>
   12620:	mov	r6, r0
   12624:	mov	r0, r9
   12628:	bl	19244 <lchmod@@Base+0x239c>
   1262c:	mov	r3, r0
   12630:	mov	r0, #1
   12634:	mov	r1, r4
   12638:	mov	r2, r6
   1263c:	bl	11930 <error@plt>
   12640:	movw	r1, #49143	; 0xbff7
   12644:	mov	r0, #0
   12648:	mov	r2, #5
   1264c:	movt	r1, #1
   12650:	bl	11870 <dcgettext@plt>
   12654:	mov	r2, r0
   12658:	mov	r0, #0
   1265c:	mov	r1, #0
   12660:	bl	11930 <error@plt>
   12664:	cmp	r5, #0
   12668:	bne	126bc <__assert_fail@plt+0xaf8>
   1266c:	movw	r0, #53720	; 0xd1d8
   12670:	movt	r0, #2
   12674:	ldr	r0, [r0]
   12678:	sub	r0, r6, r0
   1267c:	cmp	r0, #2
   12680:	bne	126bc <__assert_fail@plt+0xaf8>
   12684:	movw	r0, #53728	; 0xd1e0
   12688:	movw	r1, #49184	; 0xc020
   1268c:	movt	r0, #2
   12690:	movt	r1, #1
   12694:	ldr	r4, [r0]
   12698:	mov	r0, #0
   1269c:	mov	r2, #5
   126a0:	bl	11870 <dcgettext@plt>
   126a4:	movw	r2, #50546	; 0xc572
   126a8:	mov	r3, r0
   126ac:	mov	r0, r4
   126b0:	mov	r1, #1
   126b4:	movt	r2, #1
   126b8:	bl	11a50 <__fprintf_chk@plt>
   126bc:	mov	r0, #1
   126c0:	bl	11cc0 <__assert_fail@plt+0xfc>
   126c4:	bl	11a08 <__errno_location@plt>
   126c8:	ldr	r5, [r0]
   126cc:	movw	r1, #49461	; 0xc135
   126d0:	mov	r0, #0
   126d4:	mov	r2, #5
   126d8:	movt	r1, #1
   126dc:	bl	11870 <dcgettext@plt>
   126e0:	mov	r1, r6
   126e4:	mov	r6, r0
   126e8:	ldr	r0, [r1]
   126ec:	ldr	r1, [r4, r0, lsl #2]
   126f0:	mov	r0, #4
   126f4:	bl	18d1c <lchmod@@Base+0x1e74>
   126f8:	mov	r3, r0
   126fc:	mov	r0, #1
   12700:	mov	r1, r5
   12704:	mov	r2, r6
   12708:	bl	11930 <error@plt>
   1270c:	bl	11a08 <__errno_location@plt>
   12710:	ldr	r1, [r6]
   12714:	ldr	r2, [r4, r1, lsl #2]
   12718:	b	1275c <__assert_fail@plt+0xb98>
   1271c:	movw	r1, #49417	; 0xc109
   12720:	mov	r0, #0
   12724:	mov	r2, #5
   12728:	movt	r1, #1
   1272c:	bl	11870 <dcgettext@plt>
   12730:	mov	r2, r0
   12734:	ldr	r0, [sp, #8]
   12738:	ldr	r3, [sp, #12]
   1273c:	mov	r1, #0
   12740:	str	r0, [sp]
   12744:	mov	r0, #1
   12748:	bl	11930 <error@plt>
   1274c:	bl	11a08 <__errno_location@plt>
   12750:	ldr	r1, [r6]
   12754:	ldr	r2, [sp, #20]
   12758:	ldr	r2, [r2, r1, lsl #2]
   1275c:	ldr	r4, [r0]
   12760:	mov	r0, #0
   12764:	mov	r1, #3
   12768:	bl	18f98 <lchmod@@Base+0x20f0>
   1276c:	movw	r2, #50063	; 0xc38f
   12770:	mov	r3, r0
   12774:	mov	r0, #1
   12778:	mov	r1, r4
   1277c:	movt	r2, #1
   12780:	bl	11930 <error@plt>
   12784:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12788:	add	fp, sp, #24
   1278c:	sub	sp, sp, #16
   12790:	mov	r4, #0
   12794:	mov	r7, r0
   12798:	mov	r5, r2
   1279c:	mov	r6, r1
   127a0:	str	r4, [sp, #4]
   127a4:	str	r4, [sp]
   127a8:	ldrb	r0, [r1]
   127ac:	cmp	r0, #47	; 0x2f
   127b0:	beq	127d0 <__assert_fail@plt+0xc0c>
   127b4:	mov	r0, r6
   127b8:	mov	r1, #2
   127bc:	bl	12d04 <__assert_fail@plt+0x1140>
   127c0:	mov	r4, r0
   127c4:	cmp	r0, #0
   127c8:	mov	r6, r0
   127cc:	beq	12924 <__assert_fail@plt+0xd60>
   127d0:	add	r1, sp, #4
   127d4:	mov	r0, r7
   127d8:	mov	r2, r6
   127dc:	mov	r3, r5
   127e0:	bl	11798 <selabel_lookup@plt>
   127e4:	cmn	r0, #1
   127e8:	ble	128fc <__assert_fail@plt+0xd38>
   127ec:	mov	r0, #0
   127f0:	str	r0, [sp, #12]
   127f4:	str	r0, [sp, #8]
   127f8:	mov	r0, r6
   127fc:	bl	134ec <__assert_fail@plt+0x1928>
   12800:	mov	r6, r0
   12804:	add	r0, sp, #12
   12808:	bl	1190c <getcon@plt>
   1280c:	mov	r9, #1
   12810:	cmp	r0, #0
   12814:	blt	12854 <__assert_fail@plt+0xc90>
   12818:	add	r1, sp, #8
   1281c:	mov	r0, r6
   12820:	bl	194f8 <lchmod@@Base+0x2650>
   12824:	cmp	r0, #0
   12828:	blt	12854 <__assert_fail@plt+0xc90>
   1282c:	mov	r0, r5
   12830:	bl	11b94 <mode_to_security_class@plt>
   12834:	cmp	r0, #0
   12838:	beq	12854 <__assert_fail@plt+0xc90>
   1283c:	mov	r2, r0
   12840:	ldr	r1, [sp, #8]
   12844:	ldr	r0, [sp, #12]
   12848:	mov	r3, sp
   1284c:	bl	11ac8 <security_compute_create@plt>
   12850:	lsr	r9, r0, #31
   12854:	bl	11a08 <__errno_location@plt>
   12858:	ldr	r7, [r0]
   1285c:	mov	r5, r0
   12860:	mov	r0, r6
   12864:	bl	136a8 <__assert_fail@plt+0x1ae4>
   12868:	ldr	r0, [sp, #12]
   1286c:	bl	11af8 <freecon@plt>
   12870:	ldr	r0, [sp, #8]
   12874:	bl	11af8 <freecon@plt>
   12878:	mvn	r8, #0
   1287c:	cmp	r9, #0
   12880:	str	r7, [r5]
   12884:	bne	128f0 <__assert_fail@plt+0xd2c>
   12888:	ldr	r0, [sp, #4]
   1288c:	bl	11858 <context_new@plt>
   12890:	cmp	r0, #0
   12894:	beq	128f0 <__assert_fail@plt+0xd2c>
   12898:	mov	r6, r0
   1289c:	ldr	r0, [sp]
   128a0:	bl	11858 <context_new@plt>
   128a4:	cmp	r0, #0
   128a8:	beq	12940 <__assert_fail@plt+0xd7c>
   128ac:	mov	r9, r0
   128b0:	mov	r0, r6
   128b4:	bl	117e0 <context_type_get@plt>
   128b8:	cmp	r0, #0
   128bc:	beq	12944 <__assert_fail@plt+0xd80>
   128c0:	mov	r1, r0
   128c4:	mov	r0, r9
   128c8:	bl	1187c <context_type_set@plt>
   128cc:	cmp	r0, #0
   128d0:	bne	12944 <__assert_fail@plt+0xd80>
   128d4:	mov	r0, r9
   128d8:	bl	11b28 <context_str@plt>
   128dc:	cmp	r0, #0
   128e0:	beq	12944 <__assert_fail@plt+0xd80>
   128e4:	bl	119fc <setfscreatecon@plt>
   128e8:	mov	r8, r0
   128ec:	b	12944 <__assert_fail@plt+0xd80>
   128f0:	mov	r9, #0
   128f4:	mov	r6, #0
   128f8:	b	12944 <__assert_fail@plt+0xd80>
   128fc:	bl	11a08 <__errno_location@plt>
   12900:	mov	r5, r0
   12904:	ldr	r0, [r0]
   12908:	mvn	r8, #0
   1290c:	mov	r9, #0
   12910:	mov	r6, #0
   12914:	cmp	r0, #2
   12918:	moveq	r0, #61	; 0x3d
   1291c:	streq	r0, [r5]
   12920:	b	12944 <__assert_fail@plt+0xd80>
   12924:	mov	r9, #0
   12928:	mvn	r8, #0
   1292c:	bl	11a08 <__errno_location@plt>
   12930:	mov	r5, r0
   12934:	mov	r6, #0
   12938:	mov	r4, #0
   1293c:	b	12944 <__assert_fail@plt+0xd80>
   12940:	mov	r9, #0
   12944:	ldr	r7, [r5]
   12948:	mov	r0, r6
   1294c:	bl	11984 <context_free@plt>
   12950:	mov	r0, r9
   12954:	bl	11984 <context_free@plt>
   12958:	ldr	r0, [sp, #4]
   1295c:	bl	11af8 <freecon@plt>
   12960:	ldr	r0, [sp]
   12964:	bl	11af8 <freecon@plt>
   12968:	mov	r0, r4
   1296c:	bl	136a8 <__assert_fail@plt+0x1ae4>
   12970:	str	r7, [r5]
   12974:	mov	r0, r8
   12978:	sub	sp, fp, #24
   1297c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12980:	push	{r4, r5, r6, r7, fp, lr}
   12984:	add	fp, sp, #16
   12988:	sub	sp, sp, #8
   1298c:	mov	r5, r0
   12990:	ldrb	r0, [r1]
   12994:	mov	r6, r2
   12998:	mov	r4, #0
   1299c:	cmp	r0, #47	; 0x2f
   129a0:	beq	129c8 <__assert_fail@plt+0xe04>
   129a4:	mov	r0, r1
   129a8:	mov	r1, #2
   129ac:	bl	12d04 <__assert_fail@plt+0x1140>
   129b0:	mov	r4, r0
   129b4:	cmp	r0, #0
   129b8:	mov	r1, r0
   129bc:	moveq	r0, #0
   129c0:	subeq	sp, fp, #16
   129c4:	popeq	{r4, r5, r6, r7, fp, pc}
   129c8:	cmp	r6, #0
   129cc:	beq	12a64 <__assert_fail@plt+0xea0>
   129d0:	mov	r7, #0
   129d4:	mov	r0, sp
   129d8:	mov	r2, #0
   129dc:	stm	sp, {r1, r7}
   129e0:	mov	r1, #16
   129e4:	bl	1a2f4 <lchmod@@Base+0x344c>
   129e8:	mov	r6, r0
   129ec:	bl	13fe8 <__assert_fail@plt+0x2424>
   129f0:	cmp	r0, #0
   129f4:	beq	12a28 <__assert_fail@plt+0xe64>
   129f8:	mov	r7, #0
   129fc:	ldr	r1, [r6, #24]
   12a00:	mov	r0, r5
   12a04:	bl	12a9c <__assert_fail@plt+0xed8>
   12a08:	cmn	r0, #1
   12a0c:	bgt	12a18 <__assert_fail@plt+0xe54>
   12a10:	bl	11a08 <__errno_location@plt>
   12a14:	ldr	r7, [r0]
   12a18:	mov	r0, r6
   12a1c:	bl	13fe8 <__assert_fail@plt+0x2424>
   12a20:	cmp	r0, #0
   12a24:	bne	129fc <__assert_fail@plt+0xe38>
   12a28:	bl	11a08 <__errno_location@plt>
   12a2c:	mov	r5, r0
   12a30:	ldr	r0, [r0]
   12a34:	cmp	r0, #0
   12a38:	movne	r7, r0
   12a3c:	mov	r0, r6
   12a40:	bl	13e48 <__assert_fail@plt+0x2284>
   12a44:	cmp	r0, #0
   12a48:	mov	r0, r4
   12a4c:	ldrne	r7, [r5]
   12a50:	bl	136a8 <__assert_fail@plt+0x1ae4>
   12a54:	clz	r0, r7
   12a58:	lsr	r0, r0, #5
   12a5c:	sub	sp, fp, #16
   12a60:	pop	{r4, r5, r6, r7, fp, pc}
   12a64:	mov	r0, r5
   12a68:	bl	12a9c <__assert_fail@plt+0xed8>
   12a6c:	mov	r5, r0
   12a70:	bl	11a08 <__errno_location@plt>
   12a74:	ldr	r7, [r0]
   12a78:	mov	r6, r0
   12a7c:	mov	r0, r4
   12a80:	bl	136a8 <__assert_fail@plt+0x1ae4>
   12a84:	add	r0, r5, #1
   12a88:	cmn	r5, #1
   12a8c:	str	r7, [r6]
   12a90:	movwne	r0, #1
   12a94:	sub	sp, fp, #16
   12a98:	pop	{r4, r5, r6, r7, fp, pc}
   12a9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12aa0:	add	fp, sp, #28
   12aa4:	sub	sp, sp, #116	; 0x74
   12aa8:	mov	r6, r0
   12aac:	mov	r0, #0
   12ab0:	mov	r7, r1
   12ab4:	cmp	r6, #0
   12ab8:	str	r0, [sp, #4]
   12abc:	str	r0, [sp]
   12ac0:	beq	12b14 <__assert_fail@plt+0xf50>
   12ac4:	mov	r0, r7
   12ac8:	mov	r1, #32768	; 0x8000
   12acc:	bl	1193c <open64@plt>
   12ad0:	mov	sl, r0
   12ad4:	cmn	r0, #1
   12ad8:	beq	12b50 <__assert_fail@plt+0xf8c>
   12adc:	add	r2, sp, #8
   12ae0:	mov	r0, #3
   12ae4:	mov	r1, sl
   12ae8:	bl	118d0 <__fxstat64@plt>
   12aec:	mov	r5, #1
   12af0:	cmn	r0, #1
   12af4:	bgt	12b88 <__assert_fail@plt+0xfc4>
   12af8:	bl	11a08 <__errno_location@plt>
   12afc:	ldr	r5, [r0]
   12b00:	mov	r4, r0
   12b04:	mov	r8, #0
   12b08:	mvn	r9, #0
   12b0c:	mov	r6, #0
   12b10:	b	12cac <__assert_fail@plt+0x10e8>
   12b14:	mov	r0, sp
   12b18:	bl	11b10 <getfscreatecon@plt>
   12b1c:	mvn	r9, #0
   12b20:	cmp	r0, #0
   12b24:	blt	12cd8 <__assert_fail@plt+0x1114>
   12b28:	ldr	r1, [sp]
   12b2c:	cmp	r1, #0
   12b30:	beq	12c08 <__assert_fail@plt+0x1044>
   12b34:	mov	r0, r7
   12b38:	bl	117f8 <lsetfilecon@plt>
   12b3c:	mov	r9, r0
   12b40:	bl	11a08 <__errno_location@plt>
   12b44:	ldr	r5, [r0]
   12b48:	mov	r4, r0
   12b4c:	b	12ccc <__assert_fail@plt+0x1108>
   12b50:	bl	11a08 <__errno_location@plt>
   12b54:	ldr	r5, [r0]
   12b58:	mov	r4, r0
   12b5c:	mov	r8, #0
   12b60:	mvn	r9, #0
   12b64:	cmp	r5, #40	; 0x28
   12b68:	bne	12c00 <__assert_fail@plt+0x103c>
   12b6c:	add	r2, sp, #8
   12b70:	mov	r0, #3
   12b74:	mov	r1, r7
   12b78:	bl	11b7c <__lxstat64@plt>
   12b7c:	mov	r5, #0
   12b80:	cmn	r0, #1
   12b84:	ble	12ce4 <__assert_fail@plt+0x1120>
   12b88:	ldr	r3, [sp, #24]
   12b8c:	add	r1, sp, #4
   12b90:	mov	r0, r6
   12b94:	mov	r2, r7
   12b98:	bl	11798 <selabel_lookup@plt>
   12b9c:	cmn	r0, #1
   12ba0:	ble	12bdc <__assert_fail@plt+0x1018>
   12ba4:	ldr	r0, [sp, #4]
   12ba8:	bl	11858 <context_new@plt>
   12bac:	mvn	r9, #0
   12bb0:	cmp	r0, #0
   12bb4:	beq	12c18 <__assert_fail@plt+0x1054>
   12bb8:	mov	r8, r0
   12bbc:	mov	r1, sp
   12bc0:	cmp	r5, #0
   12bc4:	beq	12c24 <__assert_fail@plt+0x1060>
   12bc8:	mov	r0, sl
   12bcc:	bl	195e0 <lchmod@@Base+0x2738>
   12bd0:	cmp	r0, #0
   12bd4:	bge	12c34 <__assert_fail@plt+0x1070>
   12bd8:	b	12c94 <__assert_fail@plt+0x10d0>
   12bdc:	bl	11a08 <__errno_location@plt>
   12be0:	ldr	r1, [r0]
   12be4:	mvn	r9, #0
   12be8:	mov	r6, #0
   12bec:	mov	r8, #0
   12bf0:	cmp	r1, #2
   12bf4:	moveq	r1, #61	; 0x3d
   12bf8:	streq	r1, [r0]
   12bfc:	b	12c98 <__assert_fail@plt+0x10d4>
   12c00:	mov	r6, #0
   12c04:	b	12cb4 <__assert_fail@plt+0x10f0>
   12c08:	bl	11a08 <__errno_location@plt>
   12c0c:	mov	r1, #61	; 0x3d
   12c10:	str	r1, [r0]
   12c14:	b	12cd8 <__assert_fail@plt+0x1114>
   12c18:	mov	r6, #0
   12c1c:	mov	r8, #0
   12c20:	b	12c98 <__assert_fail@plt+0x10d4>
   12c24:	mov	r0, r7
   12c28:	bl	1956c <lchmod@@Base+0x26c4>
   12c2c:	cmp	r0, #0
   12c30:	blt	12c94 <__assert_fail@plt+0x10d0>
   12c34:	ldr	r0, [sp]
   12c38:	bl	11858 <context_new@plt>
   12c3c:	cmp	r0, #0
   12c40:	beq	12c94 <__assert_fail@plt+0x10d0>
   12c44:	mov	r6, r0
   12c48:	mov	r0, r8
   12c4c:	bl	117e0 <context_type_get@plt>
   12c50:	cmp	r0, #0
   12c54:	beq	12c98 <__assert_fail@plt+0x10d4>
   12c58:	mov	r1, r0
   12c5c:	mov	r0, r6
   12c60:	bl	1187c <context_type_set@plt>
   12c64:	cmp	r0, #0
   12c68:	bne	12c98 <__assert_fail@plt+0x10d4>
   12c6c:	mov	r0, r6
   12c70:	bl	11b28 <context_str@plt>
   12c74:	cmp	r0, #0
   12c78:	beq	12c98 <__assert_fail@plt+0x10d4>
   12c7c:	mov	r1, r0
   12c80:	cmp	r5, #0
   12c84:	beq	12cf4 <__assert_fail@plt+0x1130>
   12c88:	mov	r0, sl
   12c8c:	bl	11a8c <fsetfilecon@plt>
   12c90:	b	12cfc <__assert_fail@plt+0x1138>
   12c94:	mov	r6, #0
   12c98:	bl	11a08 <__errno_location@plt>
   12c9c:	ldr	r5, [r0]
   12ca0:	mov	r4, r0
   12ca4:	cmn	sl, #1
   12ca8:	beq	12cb4 <__assert_fail@plt+0x10f0>
   12cac:	mov	r0, sl
   12cb0:	bl	11b70 <close@plt>
   12cb4:	mov	r0, r8
   12cb8:	bl	11984 <context_free@plt>
   12cbc:	mov	r0, r6
   12cc0:	bl	11984 <context_free@plt>
   12cc4:	ldr	r0, [sp, #4]
   12cc8:	bl	11af8 <freecon@plt>
   12ccc:	ldr	r0, [sp]
   12cd0:	bl	11af8 <freecon@plt>
   12cd4:	str	r5, [r4]
   12cd8:	mov	r0, r9
   12cdc:	sub	sp, fp, #28
   12ce0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ce4:	ldr	r5, [r4]
   12ce8:	mov	r8, #0
   12cec:	mov	r6, #0
   12cf0:	b	12cb4 <__assert_fail@plt+0x10f0>
   12cf4:	mov	r0, r7
   12cf8:	bl	117f8 <lsetfilecon@plt>
   12cfc:	mov	r9, r0
   12d00:	b	12c98 <__assert_fail@plt+0x10d4>
   12d04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d08:	add	fp, sp, #28
   12d0c:	sub	sp, sp, #180	; 0xb4
   12d10:	sub	sp, sp, #3072	; 0xc00
   12d14:	mov	r8, r0
   12d18:	and	r7, r1, #3
   12d1c:	sub	r0, r1, #1
   12d20:	tst	r0, r7
   12d24:	beq	12d44 <__assert_fail@plt+0x1180>
   12d28:	bl	11a08 <__errno_location@plt>
   12d2c:	mov	r1, #22
   12d30:	mov	r4, #0
   12d34:	str	r1, [r0]
   12d38:	mov	r0, r4
   12d3c:	sub	sp, fp, #28
   12d40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d44:	cmp	r8, #0
   12d48:	beq	12d28 <__assert_fail@plt+0x1164>
   12d4c:	ldrb	r0, [r8]
   12d50:	cmp	r0, #0
   12d54:	beq	12dcc <__assert_fail@plt+0x1208>
   12d58:	sub	lr, fp, #1024	; 0x400
   12d5c:	mov	r4, r1
   12d60:	mov	r1, #1024	; 0x400
   12d64:	cmp	r0, #47	; 0x2f
   12d68:	sub	r2, lr, #40	; 0x28
   12d6c:	str	r1, [fp, #-1060]	; 0xfffffbdc
   12d70:	add	r2, r2, #8
   12d74:	str	r2, [sp, #12]
   12d78:	str	r2, [fp, #-1064]	; 0xfffffbd8
   12d7c:	add	r2, sp, #1184	; 0x4a0
   12d80:	add	r2, r2, #8
   12d84:	str	r2, [sp, #1184]	; 0x4a0
   12d88:	str	r2, [sp, #16]
   12d8c:	add	r2, sp, #48	; 0x30
   12d90:	str	r1, [sp, #1188]	; 0x4a4
   12d94:	add	r5, r2, #8
   12d98:	mov	r0, r5
   12d9c:	str	r5, [sp, #48]	; 0x30
   12da0:	str	r1, [sp, #52]	; 0x34
   12da4:	str	r5, [sp, #8]
   12da8:	bne	12dd8 <__assert_fail@plt+0x1214>
   12dac:	mov	r1, r8
   12db0:	mov	r2, #0
   12db4:	mov	r3, #1024	; 0x400
   12db8:	bl	11bb8 <__mempcpy_chk@plt>
   12dbc:	mov	r6, r0
   12dc0:	mov	r0, #47	; 0x2f
   12dc4:	strb	r0, [r6], #1
   12dc8:	b	12df8 <__assert_fail@plt+0x1234>
   12dcc:	bl	11a08 <__errno_location@plt>
   12dd0:	mov	r1, #2
   12dd4:	b	12d30 <__assert_fail@plt+0x116c>
   12dd8:	mov	r1, #1024	; 0x400
   12ddc:	bl	119a8 <getcwd@plt>
   12de0:	cmp	r0, #0
   12de4:	beq	13308 <__assert_fail@plt+0x1744>
   12de8:	mov	r0, r5
   12dec:	mov	r1, #0
   12df0:	bl	118ac <rawmemchr@plt>
   12df4:	mov	r6, r0
   12df8:	ldrb	r0, [r8]
   12dfc:	cmp	r0, #0
   12e00:	beq	132cc <__assert_fail@plt+0x1708>
   12e04:	and	r1, r4, #4
   12e08:	add	r9, sp, #48	; 0x30
   12e0c:	str	r7, [sp, #32]
   12e10:	str	r1, [sp, #40]	; 0x28
   12e14:	mov	r1, #0
   12e18:	str	r1, [sp, #24]
   12e1c:	mov	r1, #0
   12e20:	str	r1, [sp, #36]	; 0x24
   12e24:	mov	r1, #0
   12e28:	str	r1, [sp, #20]
   12e2c:	b	13274 <__assert_fail@plt+0x16b0>
   12e30:	uxtb	r0, r0
   12e34:	cmp	r0, #46	; 0x2e
   12e38:	ldrbeq	r0, [r8, #1]
   12e3c:	cmpeq	r0, #46	; 0x2e
   12e40:	bne	12e80 <__assert_fail@plt+0x12bc>
   12e44:	add	r0, r5, #1
   12e48:	cmp	r6, r0
   12e4c:	bls	12f74 <__assert_fail@plt+0x13b0>
   12e50:	sub	r0, r6, #1
   12e54:	mov	r6, r0
   12e58:	cmp	r0, r5
   12e5c:	bls	12f74 <__assert_fail@plt+0x13b0>
   12e60:	mov	r0, r6
   12e64:	ldrb	r1, [r0, #-1]!
   12e68:	cmp	r1, #47	; 0x2f
   12e6c:	bne	12e54 <__assert_fail@plt+0x1290>
   12e70:	b	12f74 <__assert_fail@plt+0x13b0>
   12e74:	uxtb	r0, r0
   12e78:	cmp	r0, #46	; 0x2e
   12e7c:	beq	12f74 <__assert_fail@plt+0x13b0>
   12e80:	ldrb	r0, [r6, #-1]
   12e84:	add	r4, r2, #2
   12e88:	str	r2, [sp, #44]	; 0x2c
   12e8c:	cmp	r0, #47	; 0x2f
   12e90:	movne	r0, #47	; 0x2f
   12e94:	strbne	r0, [r6], #1
   12e98:	ldr	r0, [sp, #52]	; 0x34
   12e9c:	add	r0, r5, r0
   12ea0:	sub	r0, r0, r6
   12ea4:	cmp	r0, r4
   12ea8:	bcs	12ee0 <__assert_fail@plt+0x131c>
   12eac:	mov	r0, r9
   12eb0:	bl	19454 <lchmod@@Base+0x25ac>
   12eb4:	cmp	r0, #0
   12eb8:	beq	133cc <__assert_fail@plt+0x1808>
   12ebc:	sub	r0, r6, r5
   12ec0:	ldr	r5, [sp, #48]	; 0x30
   12ec4:	ldr	r1, [sp, #52]	; 0x34
   12ec8:	add	r6, r5, r0
   12ecc:	add	r0, r5, r1
   12ed0:	sub	r0, r0, r6
   12ed4:	cmp	r0, r4
   12ed8:	bcc	12eac <__assert_fail@plt+0x12e8>
   12edc:	ldr	r2, [sp, #44]	; 0x2c
   12ee0:	mov	r0, r6
   12ee4:	mov	r1, r8
   12ee8:	mvn	r3, #0
   12eec:	bl	11bb8 <__mempcpy_chk@plt>
   12ef0:	mov	r6, r0
   12ef4:	mov	r0, #0
   12ef8:	strb	r0, [r6]
   12efc:	ldr	r0, [sp, #40]	; 0x28
   12f00:	cmp	r0, #0
   12f04:	bne	12f68 <__assert_fail@plt+0x13a4>
   12f08:	ldr	r0, [sp, #1188]	; 0x4a4
   12f0c:	ldr	r7, [sp, #1184]	; 0x4a0
   12f10:	sub	r9, r0, #1
   12f14:	mov	r0, r5
   12f18:	mov	r1, r7
   12f1c:	mov	r2, r9
   12f20:	bl	118dc <readlink@plt>
   12f24:	cmp	r0, r9
   12f28:	blt	12f40 <__assert_fail@plt+0x137c>
   12f2c:	add	r0, sp, #1184	; 0x4a0
   12f30:	bl	193e4 <lchmod@@Base+0x253c>
   12f34:	cmp	r0, #0
   12f38:	bne	12f08 <__assert_fail@plt+0x1344>
   12f3c:	b	133cc <__assert_fail@plt+0x1808>
   12f40:	mov	r4, r0
   12f44:	cmp	r0, #0
   12f48:	add	r9, sp, #48	; 0x30
   12f4c:	blt	12f68 <__assert_fail@plt+0x13a4>
   12f50:	ldr	r0, [sp, #24]
   12f54:	cmp	r0, #19
   12f58:	bgt	12ffc <__assert_fail@plt+0x1438>
   12f5c:	add	r0, r0, #1
   12f60:	str	r0, [sp, #24]
   12f64:	b	13164 <__assert_fail@plt+0x15a0>
   12f68:	ldr	r7, [sp, #32]
   12f6c:	cmp	r7, #2
   12f70:	bne	12f88 <__assert_fail@plt+0x13c4>
   12f74:	mov	r8, sl
   12f78:	ldrb	r0, [r8]
   12f7c:	cmp	r0, #0
   12f80:	bne	13274 <__assert_fail@plt+0x16b0>
   12f84:	b	132d4 <__assert_fail@plt+0x1710>
   12f88:	ldrb	r0, [sl]
   12f8c:	cmp	r0, #47	; 0x2f
   12f90:	bne	130cc <__assert_fail@plt+0x1508>
   12f94:	mov	r2, sl
   12f98:	mov	r1, r2
   12f9c:	ldrb	r3, [r2, #1]!
   12fa0:	cmp	r3, #47	; 0x2f
   12fa4:	beq	12f98 <__assert_fail@plt+0x13d4>
   12fa8:	cmp	r3, #46	; 0x2e
   12fac:	bne	130c4 <__assert_fail@plt+0x1500>
   12fb0:	add	r2, r1, #2
   12fb4:	ldrb	r3, [r2]
   12fb8:	cmp	r3, #47	; 0x2f
   12fbc:	beq	12f98 <__assert_fail@plt+0x13d4>
   12fc0:	cmp	r3, #0
   12fc4:	beq	12fe0 <__assert_fail@plt+0x141c>
   12fc8:	cmp	r3, #46	; 0x2e
   12fcc:	bne	130cc <__assert_fail@plt+0x1508>
   12fd0:	ldrb	r1, [r1, #3]
   12fd4:	cmp	r1, #47	; 0x2f
   12fd8:	cmpne	r1, #0
   12fdc:	bne	130cc <__assert_fail@plt+0x1508>
   12fe0:	mov	r0, #47	; 0x2f
   12fe4:	mov	r1, r5
   12fe8:	mov	r2, #0
   12fec:	mov	r3, #512	; 0x200
   12ff0:	strh	r0, [r6]
   12ff4:	mvn	r0, #99	; 0x63
   12ff8:	b	130f0 <__assert_fail@plt+0x152c>
   12ffc:	ldrb	r0, [r8]
   13000:	cmp	r0, #0
   13004:	beq	13164 <__assert_fail@plt+0x15a0>
   13008:	ldr	r9, [sp, #44]	; 0x2c
   1300c:	mov	r0, #0
   13010:	add	lr, sp, #1024	; 0x400
   13014:	mov	r1, r5
   13018:	add	r2, lr, #56	; 0x38
   1301c:	strb	r0, [r6, -r9]
   13020:	ldrb	r0, [r5]
   13024:	cmp	r0, #0
   13028:	movw	r0, #50067	; 0xc393
   1302c:	movt	r0, #1
   13030:	moveq	r1, r0
   13034:	mov	r0, #3
   13038:	bl	11b40 <__xstat64@plt>
   1303c:	cmp	r0, #0
   13040:	bne	133dc <__assert_fail@plt+0x1818>
   13044:	rsb	r0, r9, #0
   13048:	ldr	r9, [sp, #20]
   1304c:	ldrb	r1, [r8]
   13050:	cmp	r9, #0
   13054:	strb	r1, [r6, r0]
   13058:	bne	13090 <__assert_fail@plt+0x14cc>
   1305c:	movw	r0, #28088	; 0x6db8
   13060:	movw	r2, #27944	; 0x6d28
   13064:	movw	r3, #28000	; 0x6d60
   13068:	mov	r1, #0
   1306c:	movt	r0, #1
   13070:	movt	r2, #1
   13074:	movt	r3, #1
   13078:	str	r0, [sp]
   1307c:	mov	r0, #7
   13080:	bl	15f00 <__assert_fail@plt+0x433c>
   13084:	mov	r9, r0
   13088:	cmp	r0, #0
   1308c:	beq	133cc <__assert_fail@plt+0x1808>
   13090:	add	lr, sp, #1024	; 0x400
   13094:	mov	r0, r9
   13098:	mov	r1, r8
   1309c:	add	r2, lr, #56	; 0x38
   130a0:	bl	1365c <__assert_fail@plt+0x1a98>
   130a4:	cmp	r0, #0
   130a8:	str	r9, [sp, #20]
   130ac:	beq	13150 <__assert_fail@plt+0x158c>
   130b0:	ldr	r7, [sp, #32]
   130b4:	cmp	r7, #2
   130b8:	bne	133d0 <__assert_fail@plt+0x180c>
   130bc:	mov	r8, sl
   130c0:	b	13230 <__assert_fail@plt+0x166c>
   130c4:	cmp	r3, #0
   130c8:	beq	12fe0 <__assert_fail@plt+0x141c>
   130cc:	ldr	r1, [sp, #40]	; 0x28
   130d0:	cmp	r1, #0
   130d4:	beq	13100 <__assert_fail@plt+0x153c>
   130d8:	cmp	r0, #0
   130dc:	bne	12f74 <__assert_fail@plt+0x13b0>
   130e0:	mvn	r0, #99	; 0x63
   130e4:	mov	r1, r5
   130e8:	mov	r2, #0
   130ec:	mov	r3, #512	; 0x200
   130f0:	bl	1181c <faccessat@plt>
   130f4:	cmp	r0, #0
   130f8:	bne	13110 <__assert_fail@plt+0x154c>
   130fc:	b	12f74 <__assert_fail@plt+0x13b0>
   13100:	bl	11a08 <__errno_location@plt>
   13104:	ldr	r0, [r0]
   13108:	cmp	r0, #22
   1310c:	beq	12f74 <__assert_fail@plt+0x13b0>
   13110:	mov	r4, #1
   13114:	cmp	r7, #1
   13118:	bne	132f4 <__assert_fail@plt+0x1730>
   1311c:	bl	11a08 <__errno_location@plt>
   13120:	ldr	r0, [r0]
   13124:	cmp	r0, #2
   13128:	bne	132f4 <__assert_fail@plt+0x1730>
   1312c:	movw	r1, #51273	; 0xc849
   13130:	mov	r0, sl
   13134:	movt	r1, #1
   13138:	bl	11bac <strspn@plt>
   1313c:	ldrb	r0, [sl, r0]
   13140:	mov	r8, sl
   13144:	cmp	r0, #0
   13148:	beq	12f78 <__assert_fail@plt+0x13b4>
   1314c:	b	132f4 <__assert_fail@plt+0x1730>
   13150:	add	lr, sp, #1024	; 0x400
   13154:	mov	r0, r9
   13158:	mov	r1, r8
   1315c:	add	r2, lr, #56	; 0x38
   13160:	bl	135e0 <__assert_fail@plt+0x1a1c>
   13164:	mov	r0, #0
   13168:	strb	r0, [r7, r4]
   1316c:	ldr	r0, [sp, #36]	; 0x24
   13170:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   13174:	tst	r0, #1
   13178:	ldr	r0, [sp, #28]
   1317c:	subne	r0, sl, r8
   13180:	str	r0, [sp, #28]
   13184:	mov	r0, sl
   13188:	bl	119cc <strlen@plt>
   1318c:	adds	r9, r0, r4
   13190:	str	r0, [sp, #44]	; 0x2c
   13194:	bcs	133cc <__assert_fail@plt+0x1808>
   13198:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   1319c:	cmp	r0, r9
   131a0:	bhi	131c8 <__assert_fail@plt+0x1604>
   131a4:	sub	lr, fp, #1024	; 0x400
   131a8:	sub	r0, lr, #40	; 0x28
   131ac:	bl	19454 <lchmod@@Base+0x25ac>
   131b0:	cmp	r0, #0
   131b4:	beq	133cc <__assert_fail@plt+0x1808>
   131b8:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   131bc:	cmp	r0, r9
   131c0:	bls	131a4 <__assert_fail@plt+0x15e0>
   131c4:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   131c8:	ldr	r0, [sp, #36]	; 0x24
   131cc:	ldr	r1, [sp, #44]	; 0x2c
   131d0:	tst	r0, #1
   131d4:	ldr	r0, [sp, #28]
   131d8:	add	r2, r1, #1
   131dc:	addne	sl, r8, r0
   131e0:	add	r0, r8, r4
   131e4:	mov	r1, sl
   131e8:	bl	11804 <memmove@plt>
   131ec:	mov	r0, r8
   131f0:	mov	r1, r7
   131f4:	mov	r2, r4
   131f8:	bl	11834 <memcpy@plt>
   131fc:	ldrb	r0, [r7]
   13200:	cmp	r0, #47	; 0x2f
   13204:	bne	13238 <__assert_fail@plt+0x1674>
   13208:	mov	r0, r5
   1320c:	mov	r1, r7
   13210:	mov	r2, #0
   13214:	mvn	r3, #0
   13218:	bl	11bb8 <__mempcpy_chk@plt>
   1321c:	mov	r6, r0
   13220:	mov	r0, #47	; 0x2f
   13224:	strb	r0, [r6], #1
   13228:	mov	r0, #1
   1322c:	str	r0, [sp, #36]	; 0x24
   13230:	add	r9, sp, #48	; 0x30
   13234:	b	12f78 <__assert_fail@plt+0x13b4>
   13238:	add	r0, r5, #1
   1323c:	mov	r1, #1
   13240:	add	r9, sp, #48	; 0x30
   13244:	cmp	r6, r0
   13248:	str	r1, [sp, #36]	; 0x24
   1324c:	bls	12f78 <__assert_fail@plt+0x13b4>
   13250:	sub	r0, r6, #1
   13254:	mov	r6, r0
   13258:	cmp	r0, r5
   1325c:	bls	12f78 <__assert_fail@plt+0x13b4>
   13260:	mov	r0, r6
   13264:	ldrb	r1, [r0, #-1]!
   13268:	cmp	r1, #47	; 0x2f
   1326c:	bne	13254 <__assert_fail@plt+0x1690>
   13270:	b	12f78 <__assert_fail@plt+0x13b4>
   13274:	uxtb	r1, r0
   13278:	cmp	r1, #47	; 0x2f
   1327c:	bne	1328c <__assert_fail@plt+0x16c8>
   13280:	ldrb	r0, [r8, #1]!
   13284:	cmp	r0, #47	; 0x2f
   13288:	beq	13280 <__assert_fail@plt+0x16bc>
   1328c:	mov	r1, r0
   13290:	mov	sl, r8
   13294:	b	1329c <__assert_fail@plt+0x16d8>
   13298:	ldrb	r1, [sl, #1]!
   1329c:	uxtb	r1, r1
   132a0:	cmp	r1, #0
   132a4:	cmpne	r1, #47	; 0x2f
   132a8:	bne	13298 <__assert_fail@plt+0x16d4>
   132ac:	sub	r2, sl, r8
   132b0:	cmp	r2, #1
   132b4:	beq	12e74 <__assert_fail@plt+0x12b0>
   132b8:	cmp	r2, #2
   132bc:	beq	12e30 <__assert_fail@plt+0x126c>
   132c0:	cmp	r2, #0
   132c4:	bne	12e80 <__assert_fail@plt+0x12bc>
   132c8:	b	132d4 <__assert_fail@plt+0x1710>
   132cc:	mov	r0, #0
   132d0:	str	r0, [sp, #20]
   132d4:	add	r0, r5, #1
   132d8:	cmp	r6, r0
   132dc:	bls	132f0 <__assert_fail@plt+0x172c>
   132e0:	mov	r0, r6
   132e4:	ldrb	r1, [r0, #-1]!
   132e8:	cmp	r1, #47	; 0x2f
   132ec:	moveq	r6, r0
   132f0:	mov	r4, #0
   132f4:	ldr	r0, [sp, #20]
   132f8:	cmp	r0, #0
   132fc:	beq	13360 <__assert_fail@plt+0x179c>
   13300:	bl	161f8 <__assert_fail@plt+0x4634>
   13304:	b	13360 <__assert_fail@plt+0x179c>
   13308:	bl	11a08 <__errno_location@plt>
   1330c:	ldr	r5, [sp, #8]
   13310:	mov	r6, r0
   13314:	add	r9, sp, #48	; 0x30
   13318:	ldr	r0, [r6]
   1331c:	cmp	r0, #34	; 0x22
   13320:	bne	13350 <__assert_fail@plt+0x178c>
   13324:	mov	r0, r9
   13328:	bl	193e4 <lchmod@@Base+0x253c>
   1332c:	cmp	r0, #0
   13330:	beq	133cc <__assert_fail@plt+0x1808>
   13334:	ldr	r5, [sp, #48]	; 0x30
   13338:	ldr	r1, [sp, #52]	; 0x34
   1333c:	mov	r0, r5
   13340:	bl	119a8 <getcwd@plt>
   13344:	cmp	r0, #0
   13348:	beq	13318 <__assert_fail@plt+0x1754>
   1334c:	b	12de8 <__assert_fail@plt+0x1224>
   13350:	cmp	r0, #12
   13354:	beq	133cc <__assert_fail@plt+0x1808>
   13358:	mov	r4, #1
   1335c:	mov	r6, r5
   13360:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   13364:	ldr	r1, [sp, #12]
   13368:	cmp	r0, r1
   1336c:	beq	13374 <__assert_fail@plt+0x17b0>
   13370:	bl	136a8 <__assert_fail@plt+0x1ae4>
   13374:	ldr	r0, [sp, #1184]	; 0x4a0
   13378:	ldr	r1, [sp, #16]
   1337c:	cmp	r0, r1
   13380:	beq	13388 <__assert_fail@plt+0x17c4>
   13384:	bl	136a8 <__assert_fail@plt+0x1ae4>
   13388:	cmp	r4, #0
   1338c:	beq	133ac <__assert_fail@plt+0x17e8>
   13390:	ldr	r0, [sp, #48]	; 0x30
   13394:	ldr	r1, [sp, #8]
   13398:	mov	r4, #0
   1339c:	cmp	r0, r1
   133a0:	beq	12d38 <__assert_fail@plt+0x1174>
   133a4:	bl	136a8 <__assert_fail@plt+0x1ae4>
   133a8:	b	12d38 <__assert_fail@plt+0x1174>
   133ac:	mov	r0, #0
   133b0:	strb	r0, [r6], #1
   133b4:	add	r0, sp, #48	; 0x30
   133b8:	sub	r1, r6, r5
   133bc:	bl	1937c <lchmod@@Base+0x24d4>
   133c0:	mov	r4, r0
   133c4:	cmp	r0, #0
   133c8:	bne	12d38 <__assert_fail@plt+0x1174>
   133cc:	bl	1a2b0 <lchmod@@Base+0x3408>
   133d0:	bl	11a08 <__errno_location@plt>
   133d4:	mov	r1, #40	; 0x28
   133d8:	str	r1, [r0]
   133dc:	mov	r4, #1
   133e0:	b	132f4 <__assert_fail@plt+0x1730>
   133e4:	movw	r1, #53744	; 0xd1f0
   133e8:	movt	r1, #2
   133ec:	str	r0, [r1]
   133f0:	bx	lr
   133f4:	movw	r1, #53748	; 0xd1f4
   133f8:	movt	r1, #2
   133fc:	strb	r0, [r1]
   13400:	bx	lr
   13404:	push	{r4, r5, r6, sl, fp, lr}
   13408:	add	fp, sp, #16
   1340c:	sub	sp, sp, #8
   13410:	movw	r0, #53732	; 0xd1e4
   13414:	movt	r0, #2
   13418:	ldr	r0, [r0]
   1341c:	bl	1b16c <lchmod@@Base+0x42c4>
   13420:	cmp	r0, #0
   13424:	beq	1344c <__assert_fail@plt+0x1888>
   13428:	movw	r0, #53748	; 0xd1f4
   1342c:	movt	r0, #2
   13430:	ldrb	r0, [r0]
   13434:	cmp	r0, #0
   13438:	beq	1346c <__assert_fail@plt+0x18a8>
   1343c:	bl	11a08 <__errno_location@plt>
   13440:	ldr	r0, [r0]
   13444:	cmp	r0, #32
   13448:	bne	1346c <__assert_fail@plt+0x18a8>
   1344c:	movw	r0, #53728	; 0xd1e0
   13450:	movt	r0, #2
   13454:	ldr	r0, [r0]
   13458:	bl	1b16c <lchmod@@Base+0x42c4>
   1345c:	cmp	r0, #0
   13460:	subeq	sp, fp, #16
   13464:	popeq	{r4, r5, r6, sl, fp, pc}
   13468:	b	134dc <__assert_fail@plt+0x1918>
   1346c:	movw	r1, #50047	; 0xc37f
   13470:	mov	r0, #0
   13474:	mov	r2, #5
   13478:	movt	r1, #1
   1347c:	bl	11870 <dcgettext@plt>
   13480:	mov	r4, r0
   13484:	movw	r0, #53744	; 0xd1f0
   13488:	movt	r0, #2
   1348c:	ldr	r6, [r0]
   13490:	bl	11a08 <__errno_location@plt>
   13494:	ldr	r5, [r0]
   13498:	cmp	r6, #0
   1349c:	bne	134b8 <__assert_fail@plt+0x18f4>
   134a0:	movw	r2, #50063	; 0xc38f
   134a4:	mov	r0, #0
   134a8:	mov	r1, r5
   134ac:	mov	r3, r4
   134b0:	movt	r2, #1
   134b4:	b	134d8 <__assert_fail@plt+0x1914>
   134b8:	mov	r0, r6
   134bc:	bl	18ebc <lchmod@@Base+0x2014>
   134c0:	movw	r2, #50059	; 0xc38b
   134c4:	mov	r3, r0
   134c8:	str	r4, [sp]
   134cc:	mov	r0, #0
   134d0:	mov	r1, r5
   134d4:	movt	r2, #1
   134d8:	bl	11930 <error@plt>
   134dc:	movw	r0, #53644	; 0xd18c
   134e0:	movt	r0, #2
   134e4:	ldr	r0, [r0]
   134e8:	bl	11828 <_exit@plt>
   134ec:	push	{fp, lr}
   134f0:	mov	fp, sp
   134f4:	bl	1354c <__assert_fail@plt+0x1988>
   134f8:	cmp	r0, #0
   134fc:	popne	{fp, pc}
   13500:	bl	1a2b0 <lchmod@@Base+0x3408>
   13504:	push	{r4, r5, r6, sl, fp, lr}
   13508:	add	fp, sp, #16
   1350c:	mov	r5, r0
   13510:	mov	r4, r0
   13514:	ldrb	r6, [r5], #-1
   13518:	bl	1b0e8 <lchmod@@Base+0x4240>
   1351c:	sub	r2, r0, r4
   13520:	sub	r0, r6, #47	; 0x2f
   13524:	clz	r0, r0
   13528:	lsr	r1, r0, #5
   1352c:	mov	r0, r2
   13530:	cmp	r2, r1
   13534:	popls	{r4, r5, r6, sl, fp, pc}
   13538:	ldrb	r3, [r5, r0]
   1353c:	sub	r2, r0, #1
   13540:	cmp	r3, #47	; 0x2f
   13544:	beq	1352c <__assert_fail@plt+0x1968>
   13548:	pop	{r4, r5, r6, sl, fp, pc}
   1354c:	push	{r4, r5, r6, sl, fp, lr}
   13550:	add	fp, sp, #16
   13554:	mov	r6, r0
   13558:	mov	r4, r0
   1355c:	ldrb	r5, [r6], #-1
   13560:	bl	1b0e8 <lchmod@@Base+0x4240>
   13564:	sub	r1, r0, r4
   13568:	sub	r0, r5, #47	; 0x2f
   1356c:	clz	r0, r0
   13570:	lsr	r0, r0, #5
   13574:	mov	r5, r1
   13578:	cmp	r1, r0
   1357c:	bls	13590 <__assert_fail@plt+0x19cc>
   13580:	ldrb	r2, [r6, r5]
   13584:	sub	r1, r5, #1
   13588:	cmp	r2, #47	; 0x2f
   1358c:	beq	13574 <__assert_fail@plt+0x19b0>
   13590:	cmp	r5, #0
   13594:	mov	r0, r5
   13598:	addeq	r0, r0, #1
   1359c:	add	r0, r0, #1
   135a0:	bl	1b064 <lchmod@@Base+0x41bc>
   135a4:	mov	r6, r0
   135a8:	cmp	r0, #0
   135ac:	beq	135d8 <__assert_fail@plt+0x1a14>
   135b0:	mov	r0, r6
   135b4:	mov	r1, r4
   135b8:	mov	r2, r5
   135bc:	bl	11834 <memcpy@plt>
   135c0:	cmp	r5, #0
   135c4:	moveq	r0, #46	; 0x2e
   135c8:	moveq	r5, #1
   135cc:	strbeq	r0, [r6]
   135d0:	mov	r0, #0
   135d4:	strb	r0, [r6, r5]
   135d8:	mov	r0, r6
   135dc:	pop	{r4, r5, r6, sl, fp, pc}
   135e0:	push	{r4, r5, r6, r7, fp, lr}
   135e4:	add	fp, sp, #16
   135e8:	cmp	r0, #0
   135ec:	popeq	{r4, r5, r6, r7, fp, pc}
   135f0:	mov	r5, r0
   135f4:	mov	r0, #24
   135f8:	mov	r6, r2
   135fc:	mov	r7, r1
   13600:	bl	19d50 <lchmod@@Base+0x2ea8>
   13604:	mov	r4, r0
   13608:	mov	r0, r7
   1360c:	bl	1a270 <lchmod@@Base+0x33c8>
   13610:	str	r0, [r4]
   13614:	ldrd	r0, [r6, #96]	; 0x60
   13618:	str	r1, [r4, #12]
   1361c:	str	r0, [r4, #8]
   13620:	ldrd	r0, [r6]
   13624:	str	r1, [r4, #20]
   13628:	str	r0, [r4, #16]
   1362c:	mov	r0, r5
   13630:	mov	r1, r4
   13634:	bl	16a44 <__assert_fail@plt+0x4e80>
   13638:	cmp	r0, #0
   1363c:	beq	13658 <__assert_fail@plt+0x1a94>
   13640:	cmp	r0, r4
   13644:	beq	13654 <__assert_fail@plt+0x1a90>
   13648:	mov	r0, r4
   1364c:	pop	{r4, r5, r6, r7, fp, lr}
   13650:	b	16db8 <__assert_fail@plt+0x51f4>
   13654:	pop	{r4, r5, r6, r7, fp, pc}
   13658:	bl	1a2b0 <lchmod@@Base+0x3408>
   1365c:	cmp	r0, #0
   13660:	moveq	r0, #0
   13664:	bxeq	lr
   13668:	push	{r4, r5, fp, lr}
   1366c:	add	fp, sp, #8
   13670:	sub	sp, sp, #24
   13674:	str	r1, [sp]
   13678:	mov	r1, sp
   1367c:	ldrd	r4, [r2, #96]	; 0x60
   13680:	str	r5, [sp, #12]
   13684:	str	r4, [sp, #8]
   13688:	ldrd	r2, [r2]
   1368c:	str	r3, [sp, #20]
   13690:	str	r2, [sp, #16]
   13694:	bl	15c50 <__assert_fail@plt+0x408c>
   13698:	cmp	r0, #0
   1369c:	movwne	r0, #1
   136a0:	sub	sp, fp, #8
   136a4:	pop	{r4, r5, fp, pc}
   136a8:	push	{r4, r5, r6, sl, fp, lr}
   136ac:	add	fp, sp, #16
   136b0:	mov	r4, r0
   136b4:	bl	11a08 <__errno_location@plt>
   136b8:	ldr	r6, [r0]
   136bc:	mov	r5, r0
   136c0:	mov	r0, r4
   136c4:	bl	11810 <free@plt>
   136c8:	str	r6, [r5]
   136cc:	pop	{r4, r5, r6, sl, fp, pc}
   136d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136d4:	add	fp, sp, #28
   136d8:	sub	sp, sp, #28
   136dc:	cmp	r1, #4096	; 0x1000
   136e0:	bcs	136fc <__assert_fail@plt+0x1b38>
   136e4:	mov	r7, r0
   136e8:	and	r0, r1, #516	; 0x204
   136ec:	mov	r5, r1
   136f0:	cmp	r0, #516	; 0x204
   136f4:	tstne	r5, #18
   136f8:	bne	13718 <__assert_fail@plt+0x1b54>
   136fc:	bl	11a08 <__errno_location@plt>
   13700:	mov	r1, #22
   13704:	mov	r4, #0
   13708:	str	r1, [r0]
   1370c:	mov	r0, r4
   13710:	sub	sp, fp, #28
   13714:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13718:	mov	r0, #1
   1371c:	mov	r1, #96	; 0x60
   13720:	mov	sl, r2
   13724:	bl	1b010 <lchmod@@Base+0x4168>
   13728:	cmp	r0, #0
   1372c:	beq	13b1c <__assert_fail@plt+0x1f58>
   13730:	mov	r4, r0
   13734:	mvn	r0, #99	; 0x63
   13738:	tst	r5, #2
   1373c:	mov	r1, r5
   13740:	str	r0, [r4, #32]
   13744:	bic	r0, r5, #516	; 0x204
   13748:	str	sl, [r4, #44]	; 0x2c
   1374c:	str	r4, [sp, #24]
   13750:	orrne	r1, r0, #4
   13754:	str	r1, [r4, #48]	; 0x30
   13758:	ldr	r0, [r7]
   1375c:	cmp	r0, #0
   13760:	beq	13798 <__assert_fail@plt+0x1bd4>
   13764:	add	r6, r7, #4
   13768:	mov	r4, #0
   1376c:	bl	119cc <strlen@plt>
   13770:	cmp	r0, r4
   13774:	movhi	r4, r0
   13778:	ldr	r0, [r6], #4
   1377c:	cmp	r0, #0
   13780:	bne	1376c <__assert_fail@plt+0x1ba8>
   13784:	add	r0, r4, #1
   13788:	ldr	r4, [sp, #24]
   1378c:	cmp	r0, #4096	; 0x1000
   13790:	movls	r0, #4096	; 0x1000
   13794:	b	1379c <__assert_fail@plt+0x1bd8>
   13798:	mov	r0, #4096	; 0x1000
   1379c:	ldr	r1, [r4, #36]	; 0x24
   137a0:	add	r0, r0, #256	; 0x100
   137a4:	adds	r1, r0, r1
   137a8:	bcc	137cc <__assert_fail@plt+0x1c08>
   137ac:	ldr	r0, [r4, #24]
   137b0:	bl	136a8 <__assert_fail@plt+0x1ae4>
   137b4:	mov	r0, #0
   137b8:	str	r0, [r4, #24]
   137bc:	bl	11a08 <__errno_location@plt>
   137c0:	mov	r1, #36	; 0x24
   137c4:	str	r1, [r0]
   137c8:	b	13b14 <__assert_fail@plt+0x1f50>
   137cc:	str	r1, [r4, #36]	; 0x24
   137d0:	ldr	r0, [r4, #24]
   137d4:	bl	1b094 <lchmod@@Base+0x41ec>
   137d8:	cmp	r0, #0
   137dc:	beq	13840 <__assert_fail@plt+0x1c7c>
   137e0:	str	r0, [r4, #24]
   137e4:	ldr	r0, [r7]
   137e8:	cmp	r0, #0
   137ec:	beq	13854 <__assert_fail@plt+0x1c90>
   137f0:	mov	r0, #176	; 0xb0
   137f4:	bl	1b064 <lchmod@@Base+0x41bc>
   137f8:	cmp	r0, #0
   137fc:	beq	13b0c <__assert_fail@plt+0x1f48>
   13800:	ldr	r1, [r4, #24]
   13804:	mov	r8, r0
   13808:	mov	r0, #0
   1380c:	mov	r2, #196608	; 0x30000
   13810:	strb	r0, [r8, #168]	; 0xa8
   13814:	str	r2, [r8, #58]	; 0x3a
   13818:	mvn	r2, #0
   1381c:	str	r0, [r8, #12]
   13820:	str	r0, [r8, #16]
   13824:	str	r0, [r8, #20]
   13828:	str	r4, [r8, #44]	; 0x2c
   1382c:	str	r2, [r8, #48]	; 0x30
   13830:	str	r0, [r8, #52]	; 0x34
   13834:	str	r1, [r8, #28]
   13838:	str	r0, [r8, #32]
   1383c:	b	13858 <__assert_fail@plt+0x1c94>
   13840:	ldr	r0, [r4, #24]
   13844:	bl	136a8 <__assert_fail@plt+0x1ae4>
   13848:	mov	r0, #0
   1384c:	str	r0, [r4, #24]
   13850:	b	13b14 <__assert_fail@plt+0x1f50>
   13854:	mov	r8, #0
   13858:	cmp	sl, #0
   1385c:	ldrbne	r0, [r4, #49]	; 0x31
   13860:	ubfxne	r0, r0, #2, #1
   13864:	ldr	r4, [r7]
   13868:	moveq	r0, #1
   1386c:	cmp	r4, #0
   13870:	beq	139dc <__assert_fail@plt+0x1e18>
   13874:	eor	r0, r0, #1
   13878:	and	r1, r5, #2048	; 0x800
   1387c:	mov	r9, #0
   13880:	mov	r6, #0
   13884:	str	r8, [sp, #16]
   13888:	str	sl, [sp, #8]
   1388c:	str	r0, [sp, #12]
   13890:	mov	r0, #0
   13894:	str	r1, [sp, #20]
   13898:	str	r0, [sp, #4]
   1389c:	mov	r0, r4
   138a0:	bl	119cc <strlen@plt>
   138a4:	mov	r8, r0
   138a8:	ldr	r0, [sp, #20]
   138ac:	cmp	r0, #0
   138b0:	bne	138e8 <__assert_fail@plt+0x1d24>
   138b4:	cmp	r8, #3
   138b8:	bcc	138e8 <__assert_fail@plt+0x1d24>
   138bc:	add	r0, r4, r8
   138c0:	ldrb	r0, [r0, #-1]
   138c4:	cmp	r0, #47	; 0x2f
   138c8:	bne	138e8 <__assert_fail@plt+0x1d24>
   138cc:	sub	r0, r4, #2
   138d0:	ldrb	r1, [r0, r8]
   138d4:	cmp	r1, #47	; 0x2f
   138d8:	bne	138e8 <__assert_fail@plt+0x1d24>
   138dc:	sub	r8, r8, #1
   138e0:	cmp	r8, #1
   138e4:	bhi	138d0 <__assert_fail@plt+0x1d0c>
   138e8:	add	r0, r8, #176	; 0xb0
   138ec:	bic	r0, r0, #7
   138f0:	bl	1b064 <lchmod@@Base+0x41bc>
   138f4:	cmp	r0, #0
   138f8:	beq	139e8 <__assert_fail@plt+0x1e24>
   138fc:	add	sl, r0, #168	; 0xa8
   13900:	mov	r5, r0
   13904:	mov	r1, r4
   13908:	mov	r2, r8
   1390c:	mov	r0, sl
   13910:	bl	11834 <memcpy@plt>
   13914:	ldr	r0, [sp, #24]
   13918:	mov	r4, #0
   1391c:	mov	r2, #196608	; 0x30000
   13920:	strb	r4, [sl, r8]
   13924:	str	r2, [r5, #58]	; 0x3a
   13928:	add	r2, r5, #44	; 0x2c
   1392c:	ldr	r1, [r0, #24]
   13930:	stm	r2, {r0, r4, r8}
   13934:	ldr	r8, [sp, #16]
   13938:	ldr	r2, [sp, #12]
   1393c:	str	r8, [r5, #4]
   13940:	str	r4, [r5, #12]
   13944:	str	r4, [r5, #16]
   13948:	str	r4, [r5, #20]
   1394c:	str	sl, [r5, #24]
   13950:	str	r1, [r5, #28]
   13954:	clz	r1, r9
   13958:	str	r4, [r5, #32]
   1395c:	lsr	r1, r1, #5
   13960:	orrs	r1, r2, r1
   13964:	bne	1397c <__assert_fail@plt+0x1db8>
   13968:	mov	r0, #2
   1396c:	str	r0, [r5, #112]	; 0x70
   13970:	str	r4, [r5, #116]	; 0x74
   13974:	mov	r0, #11
   13978:	b	13988 <__assert_fail@plt+0x1dc4>
   1397c:	mov	r1, r5
   13980:	mov	r2, #0
   13984:	bl	13bac <__assert_fail@plt+0x1fe8>
   13988:	ldr	sl, [sp, #8]
   1398c:	strh	r0, [r5, #56]	; 0x38
   13990:	cmp	sl, #0
   13994:	beq	139a4 <__assert_fail@plt+0x1de0>
   13998:	str	r9, [r5, #8]
   1399c:	mov	r9, r5
   139a0:	b	139bc <__assert_fail@plt+0x1df8>
   139a4:	cmp	r9, #0
   139a8:	str	r4, [r5, #8]
   139ac:	beq	139d0 <__assert_fail@plt+0x1e0c>
   139b0:	ldr	r0, [sp, #4]
   139b4:	str	r5, [sp, #4]
   139b8:	str	r5, [r0, #8]
   139bc:	ldr	r4, [r7, #4]!
   139c0:	add	r6, r6, #1
   139c4:	cmp	r4, #0
   139c8:	bne	1389c <__assert_fail@plt+0x1cd8>
   139cc:	b	139f8 <__assert_fail@plt+0x1e34>
   139d0:	mov	r0, r5
   139d4:	str	r5, [sp, #4]
   139d8:	b	1399c <__assert_fail@plt+0x1dd8>
   139dc:	ldr	r4, [sp, #24]
   139e0:	mov	r9, #0
   139e4:	b	13a28 <__assert_fail@plt+0x1e64>
   139e8:	ldr	r8, [sp, #16]
   139ec:	cmp	r9, #0
   139f0:	bne	13ad8 <__assert_fail@plt+0x1f14>
   139f4:	b	13b00 <__assert_fail@plt+0x1f3c>
   139f8:	cmp	sl, #0
   139fc:	beq	13a24 <__assert_fail@plt+0x1e60>
   13a00:	ldr	r4, [sp, #24]
   13a04:	cmp	r6, #2
   13a08:	bcc	13a28 <__assert_fail@plt+0x1e64>
   13a0c:	mov	r0, r4
   13a10:	mov	r1, r9
   13a14:	mov	r2, r6
   13a18:	bl	13d44 <__assert_fail@plt+0x2180>
   13a1c:	mov	r9, r0
   13a20:	b	13a28 <__assert_fail@plt+0x1e64>
   13a24:	ldr	r4, [sp, #24]
   13a28:	mov	r0, #176	; 0xb0
   13a2c:	bl	1b064 <lchmod@@Base+0x41bc>
   13a30:	cmp	r0, #0
   13a34:	beq	13ac8 <__assert_fail@plt+0x1f04>
   13a38:	ldr	r2, [r4, #24]
   13a3c:	mov	r1, #0
   13a40:	mov	r3, #196608	; 0x30000
   13a44:	str	r0, [r4]
   13a48:	str	r1, [r0, #52]	; 0x34
   13a4c:	strb	r1, [r0, #168]	; 0xa8
   13a50:	str	r4, [r0, #44]	; 0x2c
   13a54:	str	r3, [r0, #58]	; 0x3a
   13a58:	str	r2, [r0, #28]
   13a5c:	mov	r2, #9
   13a60:	str	r1, [r0, #32]
   13a64:	strh	r2, [r0, #56]	; 0x38
   13a68:	str	r9, [r0, #8]
   13a6c:	str	r1, [r0, #12]
   13a70:	str	r1, [r0, #16]
   13a74:	str	r1, [r0, #20]
   13a78:	mov	r1, #1
   13a7c:	str	r1, [r0, #48]	; 0x30
   13a80:	ldrh	r0, [r4, #48]	; 0x30
   13a84:	movw	r1, #258	; 0x102
   13a88:	tst	r0, r1
   13a8c:	beq	13b24 <__assert_fail@plt+0x1f60>
   13a90:	movw	r0, #13992	; 0x36a8
   13a94:	movw	r2, #22640	; 0x5870
   13a98:	movw	r3, #22672	; 0x5890
   13a9c:	mov	r1, #0
   13aa0:	movt	r0, #1
   13aa4:	movt	r2, #1
   13aa8:	movt	r3, #1
   13aac:	str	r0, [sp]
   13ab0:	mov	r0, #31
   13ab4:	bl	15f00 <__assert_fail@plt+0x433c>
   13ab8:	cmp	r0, #0
   13abc:	str	r0, [r4, #56]	; 0x38
   13ac0:	bne	13b3c <__assert_fail@plt+0x1f78>
   13ac4:	b	13ad0 <__assert_fail@plt+0x1f0c>
   13ac8:	mov	r0, #0
   13acc:	str	r0, [r4]
   13ad0:	cmp	r9, #0
   13ad4:	beq	13b00 <__assert_fail@plt+0x1f3c>
   13ad8:	ldrd	r4, [r9, #8]
   13adc:	cmp	r5, #0
   13ae0:	beq	13aec <__assert_fail@plt+0x1f28>
   13ae4:	mov	r0, r5
   13ae8:	bl	11ba0 <closedir@plt>
   13aec:	mov	r0, r9
   13af0:	bl	136a8 <__assert_fail@plt+0x1ae4>
   13af4:	cmp	r4, #0
   13af8:	mov	r9, r4
   13afc:	bne	13ad8 <__assert_fail@plt+0x1f14>
   13b00:	mov	r0, r8
   13b04:	bl	136a8 <__assert_fail@plt+0x1ae4>
   13b08:	ldr	r4, [sp, #24]
   13b0c:	ldr	r0, [r4, #24]
   13b10:	bl	136a8 <__assert_fail@plt+0x1ae4>
   13b14:	mov	r0, r4
   13b18:	bl	136a8 <__assert_fail@plt+0x1ae4>
   13b1c:	mov	r4, #0
   13b20:	b	1370c <__assert_fail@plt+0x1b48>
   13b24:	mov	r0, #32
   13b28:	bl	1b064 <lchmod@@Base+0x41bc>
   13b2c:	cmp	r0, #0
   13b30:	str	r0, [r4, #56]	; 0x38
   13b34:	beq	13ad0 <__assert_fail@plt+0x1f0c>
   13b38:	bl	1b1f0 <lchmod@@Base+0x4348>
   13b3c:	ldr	r4, [sp, #24]
   13b40:	ldr	r0, [r4, #48]	; 0x30
   13b44:	tst	r0, #516	; 0x204
   13b48:	bne	13b9c <__assert_fail@plt+0x1fd8>
   13b4c:	mov	r1, #32768	; 0x8000
   13b50:	tst	r0, #512	; 0x200
   13b54:	and	r1, r1, r0, lsl #11
   13b58:	orr	r1, r1, #18688	; 0x4900
   13b5c:	orr	r2, r1, #524288	; 0x80000
   13b60:	bne	13b78 <__assert_fail@plt+0x1fb4>
   13b64:	movw	r0, #50067	; 0xc393
   13b68:	mov	r1, r2
   13b6c:	movt	r0, #1
   13b70:	bl	1b560 <lchmod@@Base+0x46b8>
   13b74:	b	13b88 <__assert_fail@plt+0x1fc4>
   13b78:	ldr	r0, [r4, #32]
   13b7c:	movw	r1, #50067	; 0xc393
   13b80:	movt	r1, #1
   13b84:	bl	17570 <lchmod@@Base+0x6c8>
   13b88:	str	r0, [r4, #28]
   13b8c:	cmn	r0, #1
   13b90:	ldrle	r0, [r4, #48]	; 0x30
   13b94:	orrle	r0, r0, #4
   13b98:	strle	r0, [r4, #48]	; 0x30
   13b9c:	add	r0, r4, #60	; 0x3c
   13ba0:	mvn	r1, #0
   13ba4:	bl	16dd8 <__assert_fail@plt+0x5214>
   13ba8:	b	1370c <__assert_fail@plt+0x1b48>
   13bac:	push	{r4, r5, r6, sl, fp, lr}
   13bb0:	add	fp, sp, #16
   13bb4:	sub	sp, sp, #8
   13bb8:	mov	r4, r1
   13bbc:	ldr	r1, [r0, #48]	; 0x30
   13bc0:	ldr	r3, [r4, #48]	; 0x30
   13bc4:	add	r5, r4, #64	; 0x40
   13bc8:	cmp	r3, #0
   13bcc:	andeq	r3, r1, #1
   13bd0:	orreq	r2, r3, r2
   13bd4:	cmp	r2, #0
   13bd8:	andseq	r1, r1, #2
   13bdc:	beq	13c38 <__assert_fail@plt+0x2074>
   13be0:	ldr	r1, [r4, #24]
   13be4:	mov	r0, #3
   13be8:	mov	r2, r5
   13bec:	bl	11b40 <__xstat64@plt>
   13bf0:	cmp	r0, #0
   13bf4:	beq	13cb8 <__assert_fail@plt+0x20f4>
   13bf8:	bl	11a08 <__errno_location@plt>
   13bfc:	mov	r6, r0
   13c00:	ldr	r0, [r0]
   13c04:	cmp	r0, #2
   13c08:	bne	13c68 <__assert_fail@plt+0x20a4>
   13c0c:	ldr	r1, [r4, #24]
   13c10:	mov	r0, #3
   13c14:	mov	r2, r5
   13c18:	bl	11b7c <__lxstat64@plt>
   13c1c:	cmp	r0, #0
   13c20:	bne	13c64 <__assert_fail@plt+0x20a0>
   13c24:	mov	r0, #0
   13c28:	str	r0, [r6]
   13c2c:	mov	r0, #13
   13c30:	sub	sp, fp, #16
   13c34:	pop	{r4, r5, r6, sl, fp, pc}
   13c38:	ldr	r1, [r0, #32]
   13c3c:	ldr	r2, [r4, #24]
   13c40:	mov	r0, #256	; 0x100
   13c44:	mov	r3, r5
   13c48:	str	r0, [sp]
   13c4c:	mov	r0, #3
   13c50:	bl	118b8 <__fxstatat64@plt>
   13c54:	cmp	r0, #0
   13c58:	beq	13cb8 <__assert_fail@plt+0x20f4>
   13c5c:	bl	11a08 <__errno_location@plt>
   13c60:	mov	r6, r0
   13c64:	ldr	r0, [r6]
   13c68:	vmov.i32	q8, #0	; 0x00000000
   13c6c:	add	r1, r5, #80	; 0x50
   13c70:	str	r0, [r4, #32]
   13c74:	mov	r0, #0
   13c78:	vst1.64	{d16-d17}, [r1]
   13c7c:	add	r1, r5, #64	; 0x40
   13c80:	str	r0, [r5, #96]	; 0x60
   13c84:	vst1.64	{d16-d17}, [r1]
   13c88:	add	r1, r5, #48	; 0x30
   13c8c:	vst1.64	{d16-d17}, [r1]
   13c90:	add	r1, r5, #32
   13c94:	vst1.64	{d16-d17}, [r1]
   13c98:	add	r1, r5, #16
   13c9c:	vst1.64	{d16-d17}, [r1]
   13ca0:	mov	r1, #100	; 0x64
   13ca4:	vst1.64	{d16-d17}, [r5], r1
   13ca8:	str	r0, [r5]
   13cac:	mov	r0, #10
   13cb0:	sub	sp, fp, #16
   13cb4:	pop	{r4, r5, r6, sl, fp, pc}
   13cb8:	ldr	r0, [r4, #80]	; 0x50
   13cbc:	and	r0, r0, #61440	; 0xf000
   13cc0:	cmp	r0, #40960	; 0xa000
   13cc4:	beq	13d20 <__assert_fail@plt+0x215c>
   13cc8:	cmp	r0, #32768	; 0x8000
   13ccc:	moveq	r0, #8
   13cd0:	subeq	sp, fp, #16
   13cd4:	popeq	{r4, r5, r6, sl, fp, pc}
   13cd8:	cmp	r0, #16384	; 0x4000
   13cdc:	bne	13d14 <__assert_fail@plt+0x2150>
   13ce0:	ldrb	r1, [r4, #168]	; 0xa8
   13ce4:	mov	r0, #1
   13ce8:	cmp	r1, #46	; 0x2e
   13cec:	bne	13d0c <__assert_fail@plt+0x2148>
   13cf0:	ldrb	r1, [r4, #169]	; 0xa9
   13cf4:	cmp	r1, #0
   13cf8:	beq	13d2c <__assert_fail@plt+0x2168>
   13cfc:	cmp	r1, #46	; 0x2e
   13d00:	ldrbeq	r1, [r4, #170]	; 0xaa
   13d04:	cmpeq	r1, #0
   13d08:	beq	13d2c <__assert_fail@plt+0x2168>
   13d0c:	sub	sp, fp, #16
   13d10:	pop	{r4, r5, r6, sl, fp, pc}
   13d14:	mov	r0, #3
   13d18:	sub	sp, fp, #16
   13d1c:	pop	{r4, r5, r6, sl, fp, pc}
   13d20:	mov	r0, #12
   13d24:	sub	sp, fp, #16
   13d28:	pop	{r4, r5, r6, sl, fp, pc}
   13d2c:	ldr	r1, [r4, #48]	; 0x30
   13d30:	mov	r0, #5
   13d34:	cmp	r1, #0
   13d38:	movweq	r0, #1
   13d3c:	sub	sp, fp, #16
   13d40:	pop	{r4, r5, r6, sl, fp, pc}
   13d44:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13d48:	add	fp, sp, #24
   13d4c:	ldrd	r8, [r0, #40]	; 0x28
   13d50:	mov	r5, r2
   13d54:	mov	r4, r1
   13d58:	mov	r6, r0
   13d5c:	cmp	r8, r2
   13d60:	bcs	13da0 <__assert_fail@plt+0x21dc>
   13d64:	add	r1, r5, #40	; 0x28
   13d68:	cmn	r1, #-1073741823	; 0xc0000001
   13d6c:	str	r1, [r6, #40]	; 0x28
   13d70:	bhi	13e2c <__assert_fail@plt+0x2268>
   13d74:	add	r7, r6, #8
   13d78:	lsl	r1, r1, #2
   13d7c:	ldr	r0, [r7]
   13d80:	bl	1b094 <lchmod@@Base+0x41ec>
   13d84:	cmp	r0, #0
   13d88:	beq	13e2c <__assert_fail@plt+0x2268>
   13d8c:	mov	r6, r7
   13d90:	str	r0, [r7]
   13d94:	cmp	r4, #0
   13d98:	bne	13dac <__assert_fail@plt+0x21e8>
   13d9c:	b	13dc0 <__assert_fail@plt+0x21fc>
   13da0:	ldr	r0, [r6, #8]!
   13da4:	cmp	r4, #0
   13da8:	beq	13dc0 <__assert_fail@plt+0x21fc>
   13dac:	str	r4, [r0], #4
   13db0:	ldr	r4, [r4, #8]
   13db4:	cmp	r4, #0
   13db8:	bne	13dac <__assert_fail@plt+0x21e8>
   13dbc:	ldr	r0, [r6]
   13dc0:	mov	r1, r5
   13dc4:	mov	r2, #4
   13dc8:	mov	r3, r9
   13dcc:	bl	11aec <qsort@plt>
   13dd0:	ldr	r7, [r6]
   13dd4:	subs	r0, r5, #1
   13dd8:	ldr	r4, [r7]
   13ddc:	mov	r1, r4
   13de0:	beq	13e1c <__assert_fail@plt+0x2258>
   13de4:	mov	r1, r7
   13de8:	cmp	r5, #2
   13dec:	ldr	r2, [r1, #4]!
   13df0:	str	r2, [r4, #8]
   13df4:	beq	13e18 <__assert_fail@plt+0x2254>
   13df8:	rsb	r3, r5, #2
   13dfc:	mov	r2, r1
   13e00:	ldr	r6, [r2, #4]!
   13e04:	ldr	r1, [r1]
   13e08:	adds	r3, r3, #1
   13e0c:	str	r6, [r1, #8]
   13e10:	mov	r1, r2
   13e14:	bne	13e00 <__assert_fail@plt+0x223c>
   13e18:	ldr	r1, [r7, r0, lsl #2]
   13e1c:	mov	r0, #0
   13e20:	str	r0, [r1, #8]
   13e24:	mov	r0, r4
   13e28:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13e2c:	ldr	r0, [r6, #8]
   13e30:	bl	136a8 <__assert_fail@plt+0x1ae4>
   13e34:	mov	r0, #0
   13e38:	str	r0, [r6, #40]	; 0x28
   13e3c:	str	r0, [r6, #8]
   13e40:	mov	r0, r4
   13e44:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13e48:	push	{r4, r5, r6, r7, fp, lr}
   13e4c:	add	fp, sp, #16
   13e50:	mov	r4, r0
   13e54:	ldr	r0, [r0]
   13e58:	cmp	r0, #0
   13e5c:	beq	13e9c <__assert_fail@plt+0x22d8>
   13e60:	ldr	r1, [r0, #48]	; 0x30
   13e64:	cmp	r1, #0
   13e68:	blt	13e90 <__assert_fail@plt+0x22cc>
   13e6c:	ldr	r5, [r0, #8]
   13e70:	cmp	r5, #0
   13e74:	ldreq	r5, [r0, #4]
   13e78:	bl	136a8 <__assert_fail@plt+0x1ae4>
   13e7c:	ldr	r0, [r5, #48]	; 0x30
   13e80:	cmn	r0, #1
   13e84:	mov	r0, r5
   13e88:	bgt	13e6c <__assert_fail@plt+0x22a8>
   13e8c:	b	13e94 <__assert_fail@plt+0x22d0>
   13e90:	mov	r5, r0
   13e94:	mov	r0, r5
   13e98:	bl	136a8 <__assert_fail@plt+0x1ae4>
   13e9c:	ldr	r5, [r4, #4]
   13ea0:	cmp	r5, #0
   13ea4:	beq	13ed0 <__assert_fail@plt+0x230c>
   13ea8:	ldrd	r6, [r5, #8]
   13eac:	cmp	r7, #0
   13eb0:	beq	13ebc <__assert_fail@plt+0x22f8>
   13eb4:	mov	r0, r7
   13eb8:	bl	11ba0 <closedir@plt>
   13ebc:	mov	r0, r5
   13ec0:	bl	136a8 <__assert_fail@plt+0x1ae4>
   13ec4:	cmp	r6, #0
   13ec8:	mov	r5, r6
   13ecc:	bne	13ea8 <__assert_fail@plt+0x22e4>
   13ed0:	ldr	r0, [r4, #8]
   13ed4:	bl	136a8 <__assert_fail@plt+0x1ae4>
   13ed8:	ldr	r0, [r4, #24]
   13edc:	bl	136a8 <__assert_fail@plt+0x1ae4>
   13ee0:	ldr	r0, [r4, #48]	; 0x30
   13ee4:	tst	r0, #512	; 0x200
   13ee8:	bne	13f14 <__assert_fail@plt+0x2350>
   13eec:	mov	r6, #0
   13ef0:	tst	r0, #4
   13ef4:	bne	13f58 <__assert_fail@plt+0x2394>
   13ef8:	ldr	r0, [r4, #28]
   13efc:	bl	11ae0 <fchdir@plt>
   13f00:	cmp	r0, #0
   13f04:	beq	13f34 <__assert_fail@plt+0x2370>
   13f08:	bl	11a08 <__errno_location@plt>
   13f0c:	ldr	r6, [r0]
   13f10:	b	13f38 <__assert_fail@plt+0x2374>
   13f14:	ldr	r0, [r4, #32]
   13f18:	mov	r6, #0
   13f1c:	cmp	r0, #0
   13f20:	blt	13f58 <__assert_fail@plt+0x2394>
   13f24:	bl	11b70 <close@plt>
   13f28:	cmp	r0, #0
   13f2c:	bne	13f50 <__assert_fail@plt+0x238c>
   13f30:	b	13f58 <__assert_fail@plt+0x2394>
   13f34:	mov	r6, #0
   13f38:	ldr	r0, [r4, #28]
   13f3c:	bl	11b70 <close@plt>
   13f40:	cmp	r6, #0
   13f44:	bne	13f58 <__assert_fail@plt+0x2394>
   13f48:	cmp	r0, #0
   13f4c:	beq	13f58 <__assert_fail@plt+0x2394>
   13f50:	bl	11a08 <__errno_location@plt>
   13f54:	ldr	r6, [r0]
   13f58:	add	r5, r4, #60	; 0x3c
   13f5c:	b	13f64 <__assert_fail@plt+0x23a0>
   13f60:	bl	11b70 <close@plt>
   13f64:	mov	r0, r5
   13f68:	bl	16dfc <__assert_fail@plt+0x5238>
   13f6c:	cmp	r0, #0
   13f70:	bne	13f88 <__assert_fail@plt+0x23c4>
   13f74:	mov	r0, r5
   13f78:	bl	16e50 <__assert_fail@plt+0x528c>
   13f7c:	cmp	r0, #0
   13f80:	bge	13f60 <__assert_fail@plt+0x239c>
   13f84:	b	13f64 <__assert_fail@plt+0x23a0>
   13f88:	ldr	r0, [r4, #52]	; 0x34
   13f8c:	cmp	r0, #0
   13f90:	beq	13f98 <__assert_fail@plt+0x23d4>
   13f94:	bl	161f8 <__assert_fail@plt+0x4634>
   13f98:	ldrh	r0, [r4, #48]	; 0x30
   13f9c:	movw	r1, #258	; 0x102
   13fa0:	tst	r0, r1
   13fa4:	beq	13fbc <__assert_fail@plt+0x23f8>
   13fa8:	ldr	r0, [r4, #56]	; 0x38
   13fac:	cmp	r0, #0
   13fb0:	beq	13fc4 <__assert_fail@plt+0x2400>
   13fb4:	bl	161f8 <__assert_fail@plt+0x4634>
   13fb8:	b	13fc4 <__assert_fail@plt+0x2400>
   13fbc:	ldr	r0, [r4, #56]	; 0x38
   13fc0:	bl	136a8 <__assert_fail@plt+0x1ae4>
   13fc4:	mov	r0, r4
   13fc8:	bl	136a8 <__assert_fail@plt+0x1ae4>
   13fcc:	cmp	r6, #0
   13fd0:	moveq	r0, #0
   13fd4:	popeq	{r4, r5, r6, r7, fp, pc}
   13fd8:	bl	11a08 <__errno_location@plt>
   13fdc:	str	r6, [r0]
   13fe0:	mvn	r0, #0
   13fe4:	pop	{r4, r5, r6, r7, fp, pc}
   13fe8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13fec:	add	fp, sp, #24
   13ff0:	sub	sp, sp, #8
   13ff4:	ldr	r6, [r0]
   13ff8:	mov	r5, #0
   13ffc:	cmp	r6, #0
   14000:	beq	14734 <__assert_fail@plt+0x2b70>
   14004:	mov	r4, r0
   14008:	ldr	r0, [r0, #48]	; 0x30
   1400c:	tst	r0, #8192	; 0x2000
   14010:	bne	14734 <__assert_fail@plt+0x2b70>
   14014:	ldrh	r1, [r6, #60]	; 0x3c
   14018:	mov	r2, #3
   1401c:	strh	r2, [r6, #60]	; 0x3c
   14020:	cmp	r1, #1
   14024:	beq	1409c <__assert_fail@plt+0x24d8>
   14028:	mov	r7, r6
   1402c:	cmp	r1, #2
   14030:	bne	140b8 <__assert_fail@plt+0x24f4>
   14034:	ldrh	r2, [r7, #56]!	; 0x38
   14038:	movw	r3, #65534	; 0xfffe
   1403c:	and	r3, r2, r3
   14040:	cmp	r3, #12
   14044:	bne	140bc <__assert_fail@plt+0x24f8>
   14048:	mov	r0, r4
   1404c:	mov	r1, r6
   14050:	mov	r2, #1
   14054:	bl	13bac <__assert_fail@plt+0x1fe8>
   14058:	cmp	r0, #1
   1405c:	strh	r0, [r6, #56]	; 0x38
   14060:	bne	141a4 <__assert_fail@plt+0x25e0>
   14064:	ldr	r0, [r4, #48]	; 0x30
   14068:	tst	r0, #4
   1406c:	bne	141a4 <__assert_fail@plt+0x25e0>
   14070:	mov	r1, #32768	; 0x8000
   14074:	tst	r0, #512	; 0x200
   14078:	and	r1, r1, r0, lsl #11
   1407c:	orr	r1, r1, #18688	; 0x4900
   14080:	orr	r2, r1, #524288	; 0x80000
   14084:	bne	14410 <__assert_fail@plt+0x284c>
   14088:	movw	r0, #50067	; 0xc393
   1408c:	mov	r1, r2
   14090:	movt	r0, #1
   14094:	bl	1b560 <lchmod@@Base+0x46b8>
   14098:	b	14420 <__assert_fail@plt+0x285c>
   1409c:	mov	r0, r4
   140a0:	mov	r1, r6
   140a4:	mov	r2, #0
   140a8:	bl	13bac <__assert_fail@plt+0x1fe8>
   140ac:	strh	r0, [r6, #56]	; 0x38
   140b0:	mov	r5, r6
   140b4:	b	14734 <__assert_fail@plt+0x2b70>
   140b8:	ldrh	r2, [r7, #56]!	; 0x38
   140bc:	cmp	r2, #1
   140c0:	bne	14138 <__assert_fail@plt+0x2574>
   140c4:	cmp	r1, #4
   140c8:	bne	141ac <__assert_fail@plt+0x25e8>
   140cc:	ldrb	r0, [r6, #58]	; 0x3a
   140d0:	tst	r0, #2
   140d4:	beq	140e0 <__assert_fail@plt+0x251c>
   140d8:	ldr	r0, [r6, #36]	; 0x24
   140dc:	bl	11b70 <close@plt>
   140e0:	ldr	r5, [r4, #4]
   140e4:	cmp	r5, #0
   140e8:	beq	1411c <__assert_fail@plt+0x2558>
   140ec:	ldrd	r8, [r5, #8]
   140f0:	cmp	r9, #0
   140f4:	beq	14100 <__assert_fail@plt+0x253c>
   140f8:	mov	r0, r9
   140fc:	bl	11ba0 <closedir@plt>
   14100:	mov	r0, r5
   14104:	bl	136a8 <__assert_fail@plt+0x1ae4>
   14108:	cmp	r8, #0
   1410c:	mov	r5, r8
   14110:	bne	140ec <__assert_fail@plt+0x2528>
   14114:	mov	r0, #0
   14118:	str	r0, [r4, #4]
   1411c:	mov	r0, #6
   14120:	strh	r0, [r6, #56]	; 0x38
   14124:	mov	r0, r4
   14128:	mov	r1, r6
   1412c:	bl	14744 <__assert_fail@plt+0x2b80>
   14130:	mov	r5, r6
   14134:	b	14734 <__assert_fail@plt+0x2b70>
   14138:	ldr	r5, [r6, #8]
   1413c:	cmp	r5, #0
   14140:	beq	1423c <__assert_fail@plt+0x2678>
   14144:	mov	r0, r6
   14148:	str	r5, [r4]
   1414c:	bl	136a8 <__assert_fail@plt+0x1ae4>
   14150:	ldr	r0, [r5, #48]	; 0x30
   14154:	cmp	r0, #0
   14158:	beq	14288 <__assert_fail@plt+0x26c4>
   1415c:	ldrh	r0, [r5, #60]	; 0x3c
   14160:	mov	r6, r5
   14164:	cmp	r0, #4
   14168:	beq	14138 <__assert_fail@plt+0x2574>
   1416c:	cmp	r0, #2
   14170:	bne	14328 <__assert_fail@plt+0x2764>
   14174:	mov	r0, r4
   14178:	mov	r1, r5
   1417c:	mov	r2, #1
   14180:	bl	13bac <__assert_fail@plt+0x1fe8>
   14184:	strh	r0, [r5, #56]	; 0x38
   14188:	cmp	r0, #1
   1418c:	ldreq	r0, [r4, #48]	; 0x30
   14190:	tsteq	r0, #4
   14194:	beq	1464c <__assert_fail@plt+0x2a88>
   14198:	mov	r0, #3
   1419c:	strh	r0, [r5, #60]	; 0x3c
   141a0:	b	14328 <__assert_fail@plt+0x2764>
   141a4:	mov	r5, r6
   141a8:	b	14364 <__assert_fail@plt+0x27a0>
   141ac:	tst	r0, #64	; 0x40
   141b0:	beq	141cc <__assert_fail@plt+0x2608>
   141b4:	ldrd	r2, [r4, #16]
   141b8:	ldrd	r8, [r6, #64]	; 0x40
   141bc:	eor	r1, r9, r3
   141c0:	eor	r2, r8, r2
   141c4:	orrs	r1, r2, r1
   141c8:	bne	140cc <__assert_fail@plt+0x2508>
   141cc:	ldr	r5, [r4, #4]
   141d0:	cmp	r5, #0
   141d4:	beq	14304 <__assert_fail@plt+0x2740>
   141d8:	tst	r0, #4096	; 0x1000
   141dc:	bne	142cc <__assert_fail@plt+0x2708>
   141e0:	ldr	r3, [r6, #24]
   141e4:	mov	r0, r4
   141e8:	mov	r1, r6
   141ec:	mvn	r2, #0
   141f0:	bl	14814 <__assert_fail@plt+0x2c50>
   141f4:	cmp	r0, #0
   141f8:	beq	1431c <__assert_fail@plt+0x2758>
   141fc:	bl	11a08 <__errno_location@plt>
   14200:	ldr	r0, [r0]
   14204:	str	r0, [r6, #32]
   14208:	ldrh	r0, [r6, #58]	; 0x3a
   1420c:	orr	r0, r0, #1
   14210:	strh	r0, [r6, #58]	; 0x3a
   14214:	ldr	r0, [r4, #4]
   14218:	cmp	r0, #0
   1421c:	beq	1431c <__assert_fail@plt+0x2758>
   14220:	ldmib	r0, {r1, r2}
   14224:	ldr	r1, [r1, #24]
   14228:	cmp	r2, #0
   1422c:	str	r1, [r0, #24]
   14230:	mov	r0, r2
   14234:	bne	14220 <__assert_fail@plt+0x265c>
   14238:	b	1431c <__assert_fail@plt+0x2758>
   1423c:	ldr	r5, [r6, #4]
   14240:	ldr	r0, [r5, #12]
   14244:	cmp	r0, #0
   14248:	beq	14450 <__assert_fail@plt+0x288c>
   1424c:	str	r5, [r4]
   14250:	ldr	r1, [r5, #40]	; 0x28
   14254:	ldr	r0, [r4, #24]
   14258:	mov	r5, #0
   1425c:	strb	r5, [r0, r1]
   14260:	mov	r0, r4
   14264:	mov	r1, #3
   14268:	bl	14a6c <__assert_fail@plt+0x2ea8>
   1426c:	cmp	r0, #0
   14270:	beq	14440 <__assert_fail@plt+0x287c>
   14274:	mov	r7, r0
   14278:	mov	r0, r6
   1427c:	bl	136a8 <__assert_fail@plt+0x1ae4>
   14280:	mov	r5, r7
   14284:	b	14328 <__assert_fail@plt+0x2764>
   14288:	mov	r0, r4
   1428c:	bl	15520 <__assert_fail@plt+0x395c>
   14290:	ldr	r1, [r4, #48]	; 0x30
   14294:	cmp	r0, #0
   14298:	beq	142ac <__assert_fail@plt+0x26e8>
   1429c:	orr	r0, r1, #8192	; 0x2000
   142a0:	mov	r5, #0
   142a4:	str	r0, [r4, #48]	; 0x30
   142a8:	b	14734 <__assert_fail@plt+0x2b70>
   142ac:	movw	r0, #258	; 0x102
   142b0:	tst	r1, r0
   142b4:	beq	14500 <__assert_fail@plt+0x293c>
   142b8:	ldr	r0, [r4, #56]	; 0x38
   142bc:	cmp	r0, #0
   142c0:	beq	14508 <__assert_fail@plt+0x2944>
   142c4:	bl	161f8 <__assert_fail@plt+0x4634>
   142c8:	b	14508 <__assert_fail@plt+0x2944>
   142cc:	bic	r0, r0, #4096	; 0x1000
   142d0:	str	r0, [r4, #48]	; 0x30
   142d4:	ldrd	r8, [r5, #8]
   142d8:	cmp	r9, #0
   142dc:	beq	142e8 <__assert_fail@plt+0x2724>
   142e0:	mov	r0, r9
   142e4:	bl	11ba0 <closedir@plt>
   142e8:	mov	r0, r5
   142ec:	bl	136a8 <__assert_fail@plt+0x1ae4>
   142f0:	cmp	r8, #0
   142f4:	mov	r5, r8
   142f8:	bne	142d4 <__assert_fail@plt+0x2710>
   142fc:	mov	r0, #0
   14300:	str	r0, [r4, #4]
   14304:	mov	r0, r4
   14308:	mov	r1, #3
   1430c:	bl	14a6c <__assert_fail@plt+0x2ea8>
   14310:	cmp	r0, #0
   14314:	str	r0, [r4, #4]
   14318:	beq	143e4 <__assert_fail@plt+0x2820>
   1431c:	ldr	r5, [r4, #4]
   14320:	mov	r0, #0
   14324:	str	r0, [r4, #4]
   14328:	ldr	r0, [r5, #4]
   1432c:	ldr	r1, [r0, #28]
   14330:	ldr	r0, [r0, #40]	; 0x28
   14334:	sub	r2, r0, #1
   14338:	ldrb	r1, [r1, r2]
   1433c:	cmp	r1, #47	; 0x2f
   14340:	ldr	r1, [r4, #24]
   14344:	moveq	r0, r2
   14348:	mov	r2, #47	; 0x2f
   1434c:	strb	r2, [r1, r0]!
   14350:	ldr	r2, [r5, #52]	; 0x34
   14354:	add	r0, r1, #1
   14358:	add	r1, r5, #168	; 0xa8
   1435c:	add	r2, r2, #1
   14360:	bl	11804 <memmove@plt>
   14364:	str	r5, [r4]
   14368:	ldrh	r0, [r5, #56]	; 0x38
   1436c:	cmp	r0, #11
   14370:	bne	143a4 <__assert_fail@plt+0x27e0>
   14374:	ldrd	r0, [r5, #112]	; 0x70
   14378:	eor	r2, r0, #1
   1437c:	orrs	r2, r2, r1
   14380:	beq	14734 <__assert_fail@plt+0x2b70>
   14384:	eor	r0, r0, #2
   14388:	orrs	r0, r0, r1
   1438c:	bne	14740 <__assert_fail@plt+0x2b7c>
   14390:	mov	r0, r4
   14394:	mov	r1, r5
   14398:	mov	r2, #0
   1439c:	bl	13bac <__assert_fail@plt+0x1fe8>
   143a0:	strh	r0, [r5, #56]	; 0x38
   143a4:	cmp	r0, #1
   143a8:	bne	14734 <__assert_fail@plt+0x2b70>
   143ac:	ldr	r0, [r5, #48]	; 0x30
   143b0:	cmp	r0, #0
   143b4:	ldrdeq	r0, [r5, #64]	; 0x40
   143b8:	strdeq	r0, [r4, #16]
   143bc:	mov	r0, r4
   143c0:	mov	r1, r5
   143c4:	bl	155b0 <__assert_fail@plt+0x39ec>
   143c8:	cmp	r0, #0
   143cc:	bne	14734 <__assert_fail@plt+0x2b70>
   143d0:	bl	11a08 <__errno_location@plt>
   143d4:	mov	r1, #12
   143d8:	mov	r5, #0
   143dc:	str	r1, [r0]
   143e0:	b	14734 <__assert_fail@plt+0x2b70>
   143e4:	ldrb	r0, [r4, #49]	; 0x31
   143e8:	mov	r5, #0
   143ec:	tst	r0, #32
   143f0:	bne	14734 <__assert_fail@plt+0x2b70>
   143f4:	ldr	r0, [r6, #32]
   143f8:	cmp	r0, #0
   143fc:	ldrhne	r0, [r7]
   14400:	cmpne	r0, #4
   14404:	movne	r0, #7
   14408:	strhne	r0, [r7]
   1440c:	b	14124 <__assert_fail@plt+0x2560>
   14410:	ldr	r0, [r4, #32]
   14414:	movw	r1, #50067	; 0xc393
   14418:	movt	r1, #1
   1441c:	bl	17570 <lchmod@@Base+0x6c8>
   14420:	cmn	r0, #1
   14424:	str	r0, [r6, #36]	; 0x24
   14428:	ble	144e4 <__assert_fail@plt+0x2920>
   1442c:	ldrh	r0, [r6, #58]	; 0x3a
   14430:	mov	r5, r6
   14434:	orr	r0, r0, #2
   14438:	strh	r0, [r6, #58]	; 0x3a
   1443c:	b	14364 <__assert_fail@plt+0x27a0>
   14440:	ldrb	r0, [r4, #49]	; 0x31
   14444:	tst	r0, #32
   14448:	bne	14734 <__assert_fail@plt+0x2b70>
   1444c:	ldr	r5, [r6, #4]
   14450:	mov	r0, r6
   14454:	str	r5, [r4]
   14458:	bl	136a8 <__assert_fail@plt+0x1ae4>
   1445c:	ldr	r0, [r5, #48]	; 0x30
   14460:	cmn	r0, #1
   14464:	beq	144c8 <__assert_fail@plt+0x2904>
   14468:	ldrh	r0, [r5, #56]	; 0x38
   1446c:	cmp	r0, #11
   14470:	beq	14740 <__assert_fail@plt+0x2b7c>
   14474:	ldr	r0, [r5, #40]	; 0x28
   14478:	ldr	r1, [r4, #24]
   1447c:	mov	r2, #0
   14480:	strb	r2, [r1, r0]
   14484:	ldr	r0, [r5, #48]	; 0x30
   14488:	cmp	r0, #0
   1448c:	beq	145d8 <__assert_fail@plt+0x2a14>
   14490:	ldrh	r0, [r5, #58]	; 0x3a
   14494:	tst	r0, #2
   14498:	bne	14604 <__assert_fail@plt+0x2a40>
   1449c:	tst	r0, #1
   144a0:	bne	146f8 <__assert_fail@plt+0x2b34>
   144a4:	ldr	r1, [r5, #4]
   144a8:	movw	r3, #50066	; 0xc392
   144ac:	mov	r0, r4
   144b0:	mvn	r2, #0
   144b4:	movt	r3, #1
   144b8:	bl	14814 <__assert_fail@plt+0x2c50>
   144bc:	cmp	r0, #0
   144c0:	bne	145e8 <__assert_fail@plt+0x2a24>
   144c4:	b	146f8 <__assert_fail@plt+0x2b34>
   144c8:	mov	r0, r5
   144cc:	bl	136a8 <__assert_fail@plt+0x1ae4>
   144d0:	bl	11a08 <__errno_location@plt>
   144d4:	mov	r5, #0
   144d8:	str	r5, [r0]
   144dc:	str	r5, [r4]
   144e0:	b	14734 <__assert_fail@plt+0x2b70>
   144e4:	bl	11a08 <__errno_location@plt>
   144e8:	ldr	r0, [r0]
   144ec:	mov	r1, #7
   144f0:	mov	r5, r6
   144f4:	strh	r1, [r6, #56]	; 0x38
   144f8:	str	r0, [r6, #32]
   144fc:	b	14364 <__assert_fail@plt+0x27a0>
   14500:	ldr	r0, [r4, #56]	; 0x38
   14504:	bl	136a8 <__assert_fail@plt+0x1ae4>
   14508:	ldr	r1, [r5, #52]	; 0x34
   1450c:	add	r6, r5, #168	; 0xa8
   14510:	str	r1, [r5, #40]	; 0x28
   14514:	add	r2, r1, #1
   14518:	mov	r1, r6
   1451c:	ldr	r0, [r4, #24]
   14520:	bl	11804 <memmove@plt>
   14524:	mov	r0, r6
   14528:	mov	r1, #47	; 0x2f
   1452c:	bl	11a98 <strrchr@plt>
   14530:	cmp	r0, #0
   14534:	beq	14570 <__assert_fail@plt+0x29ac>
   14538:	cmp	r0, r6
   1453c:	bne	1454c <__assert_fail@plt+0x2988>
   14540:	ldrb	r1, [r5, #169]	; 0xa9
   14544:	cmp	r1, #0
   14548:	beq	14570 <__assert_fail@plt+0x29ac>
   1454c:	add	r7, r0, #1
   14550:	mov	r0, r7
   14554:	bl	119cc <strlen@plt>
   14558:	mov	r8, r0
   1455c:	add	r2, r0, #1
   14560:	mov	r0, r6
   14564:	mov	r1, r7
   14568:	bl	11804 <memmove@plt>
   1456c:	str	r8, [r5, #52]	; 0x34
   14570:	ldr	r0, [r4, #24]
   14574:	movw	r1, #258	; 0x102
   14578:	str	r0, [r5, #24]
   1457c:	str	r0, [r5, #28]
   14580:	ldrh	r0, [r4, #48]	; 0x30
   14584:	tst	r0, r1
   14588:	beq	145bc <__assert_fail@plt+0x29f8>
   1458c:	movw	r0, #13992	; 0x36a8
   14590:	movw	r2, #22640	; 0x5870
   14594:	movw	r3, #22672	; 0x5890
   14598:	mov	r1, #0
   1459c:	movt	r0, #1
   145a0:	movt	r2, #1
   145a4:	movt	r3, #1
   145a8:	str	r0, [sp]
   145ac:	mov	r0, #31
   145b0:	bl	15f00 <__assert_fail@plt+0x433c>
   145b4:	str	r0, [r4, #56]	; 0x38
   145b8:	b	14364 <__assert_fail@plt+0x27a0>
   145bc:	mov	r0, #32
   145c0:	bl	1b064 <lchmod@@Base+0x41bc>
   145c4:	cmp	r0, #0
   145c8:	str	r0, [r4, #56]	; 0x38
   145cc:	beq	14364 <__assert_fail@plt+0x27a0>
   145d0:	bl	1b1f0 <lchmod@@Base+0x4348>
   145d4:	b	14364 <__assert_fail@plt+0x27a0>
   145d8:	mov	r0, r4
   145dc:	bl	15520 <__assert_fail@plt+0x395c>
   145e0:	cmp	r0, #0
   145e4:	beq	146f8 <__assert_fail@plt+0x2b34>
   145e8:	bl	11a08 <__errno_location@plt>
   145ec:	ldr	r0, [r0]
   145f0:	str	r0, [r5, #32]
   145f4:	ldr	r0, [r4, #48]	; 0x30
   145f8:	orr	r0, r0, #8192	; 0x2000
   145fc:	str	r0, [r4, #48]	; 0x30
   14600:	b	146f8 <__assert_fail@plt+0x2b34>
   14604:	ldr	r0, [r4, #48]	; 0x30
   14608:	tst	r0, #4
   1460c:	bne	14678 <__assert_fail@plt+0x2ab4>
   14610:	mov	r7, r5
   14614:	tst	r0, #512	; 0x200
   14618:	ldr	r6, [r7, #36]!	; 0x24
   1461c:	bne	146c4 <__assert_fail@plt+0x2b00>
   14620:	mov	r0, r6
   14624:	bl	11ae0 <fchdir@plt>
   14628:	cmp	r0, #0
   1462c:	beq	146f0 <__assert_fail@plt+0x2b2c>
   14630:	bl	11a08 <__errno_location@plt>
   14634:	ldr	r0, [r0]
   14638:	str	r0, [r5, #32]
   1463c:	ldr	r0, [r4, #48]	; 0x30
   14640:	orr	r0, r0, #8192	; 0x2000
   14644:	str	r0, [r4, #48]	; 0x30
   14648:	b	146f0 <__assert_fail@plt+0x2b2c>
   1464c:	mov	r1, #32768	; 0x8000
   14650:	tst	r0, #512	; 0x200
   14654:	and	r1, r1, r0, lsl #11
   14658:	orr	r1, r1, #18688	; 0x4900
   1465c:	orr	r2, r1, #524288	; 0x80000
   14660:	bne	14680 <__assert_fail@plt+0x2abc>
   14664:	movw	r0, #50067	; 0xc393
   14668:	mov	r1, r2
   1466c:	movt	r0, #1
   14670:	bl	1b560 <lchmod@@Base+0x46b8>
   14674:	b	14690 <__assert_fail@plt+0x2acc>
   14678:	add	r7, r5, #36	; 0x24
   1467c:	b	146f0 <__assert_fail@plt+0x2b2c>
   14680:	ldr	r0, [r4, #32]
   14684:	movw	r1, #50067	; 0xc393
   14688:	movt	r1, #1
   1468c:	bl	17570 <lchmod@@Base+0x6c8>
   14690:	cmn	r0, #1
   14694:	str	r0, [r5, #36]	; 0x24
   14698:	ble	146ac <__assert_fail@plt+0x2ae8>
   1469c:	ldrh	r0, [r5, #58]	; 0x3a
   146a0:	orr	r0, r0, #2
   146a4:	strh	r0, [r5, #58]	; 0x3a
   146a8:	b	14198 <__assert_fail@plt+0x25d4>
   146ac:	bl	11a08 <__errno_location@plt>
   146b0:	ldr	r0, [r0]
   146b4:	mov	r1, #7
   146b8:	strh	r1, [r5, #56]	; 0x38
   146bc:	str	r0, [r5, #32]
   146c0:	b	14198 <__assert_fail@plt+0x25d4>
   146c4:	ldr	r1, [r4, #32]
   146c8:	cmp	r1, r6
   146cc:	bne	146d8 <__assert_fail@plt+0x2b14>
   146d0:	cmn	r1, #100	; 0x64
   146d4:	bne	14740 <__assert_fail@plt+0x2b7c>
   146d8:	add	r0, r4, #60	; 0x3c
   146dc:	bl	16e04 <__assert_fail@plt+0x5240>
   146e0:	cmp	r0, #0
   146e4:	blt	146ec <__assert_fail@plt+0x2b28>
   146e8:	bl	11b70 <close@plt>
   146ec:	str	r6, [r4, #32]
   146f0:	ldr	r0, [r7]
   146f4:	bl	11b70 <close@plt>
   146f8:	ldrh	r0, [r5, #56]	; 0x38
   146fc:	cmp	r0, #2
   14700:	beq	14728 <__assert_fail@plt+0x2b64>
   14704:	ldr	r0, [r5, #32]
   14708:	mov	r1, #7
   1470c:	cmp	r0, #0
   14710:	movweq	r1, #6
   14714:	strh	r1, [r5, #56]	; 0x38
   14718:	bne	14728 <__assert_fail@plt+0x2b64>
   1471c:	mov	r0, r4
   14720:	mov	r1, r5
   14724:	bl	14744 <__assert_fail@plt+0x2b80>
   14728:	ldrb	r0, [r4, #49]	; 0x31
   1472c:	tst	r0, #32
   14730:	movne	r5, #0
   14734:	mov	r0, r5
   14738:	sub	sp, fp, #24
   1473c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14740:	bl	11b64 <abort@plt>
   14744:	push	{r4, r5, r6, r7, fp, lr}
   14748:	add	fp, sp, #16
   1474c:	sub	sp, sp, #24
   14750:	ldrh	r2, [r0, #48]	; 0x30
   14754:	movw	r3, #258	; 0x102
   14758:	add	lr, r1, #64	; 0x40
   1475c:	tst	r2, r3
   14760:	beq	14798 <__assert_fail@plt+0x2bd4>
   14764:	ldrd	r2, [lr]
   14768:	stm	sp, {r2, r3}
   1476c:	ldrd	r2, [r1, #160]	; 0xa0
   14770:	mov	r1, sp
   14774:	str	r3, [sp, #12]
   14778:	str	r2, [sp, #8]
   1477c:	ldr	r0, [r0, #56]	; 0x38
   14780:	bl	16a84 <__assert_fail@plt+0x4ec0>
   14784:	cmp	r0, #0
   14788:	beq	14810 <__assert_fail@plt+0x2c4c>
   1478c:	bl	136a8 <__assert_fail@plt+0x1ae4>
   14790:	sub	sp, fp, #16
   14794:	pop	{r4, r5, r6, r7, fp, pc}
   14798:	ldr	r2, [r1, #4]
   1479c:	cmp	r2, #0
   147a0:	beq	14808 <__assert_fail@plt+0x2c44>
   147a4:	ldr	r3, [r2, #48]	; 0x30
   147a8:	cmp	r3, #0
   147ac:	blt	14808 <__assert_fail@plt+0x2c44>
   147b0:	ldr	ip, [r0, #56]	; 0x38
   147b4:	ldrd	r4, [ip, #16]
   147b8:	orrs	r3, r4, r5
   147bc:	beq	14810 <__assert_fail@plt+0x2c4c>
   147c0:	ldrd	r4, [r1, #160]	; 0xa0
   147c4:	ldrd	r6, [ip]
   147c8:	eor	r1, r7, r5
   147cc:	eor	r3, r6, r4
   147d0:	orrs	r1, r3, r1
   147d4:	bne	14808 <__assert_fail@plt+0x2c44>
   147d8:	ldr	r1, [ip, #8]!
   147dc:	ldrd	r4, [lr]
   147e0:	ldr	r3, [ip, #4]
   147e4:	eor	r1, r1, r4
   147e8:	eor	r3, r3, r5
   147ec:	orrs	r1, r1, r3
   147f0:	bne	14808 <__assert_fail@plt+0x2c44>
   147f4:	ldrd	r4, [r2, #64]	; 0x40
   147f8:	strd	r4, [ip]
   147fc:	ldr	r0, [r0, #56]	; 0x38
   14800:	ldrd	r2, [r2, #160]	; 0xa0
   14804:	strd	r2, [r0]
   14808:	sub	sp, fp, #16
   1480c:	pop	{r4, r5, r6, r7, fp, pc}
   14810:	bl	11b64 <abort@plt>
   14814:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14818:	add	fp, sp, #28
   1481c:	sub	sp, sp, #108	; 0x6c
   14820:	mov	r7, r3
   14824:	mov	r4, r2
   14828:	mov	r8, r1
   1482c:	mov	sl, r0
   14830:	cmp	r3, #0
   14834:	beq	14858 <__assert_fail@plt+0x2c94>
   14838:	movw	r1, #50066	; 0xc392
   1483c:	mov	r0, r7
   14840:	movt	r1, #1
   14844:	bl	117d4 <strcmp@plt>
   14848:	mov	r6, r0
   1484c:	cmp	r0, #0
   14850:	movwne	r6, #1
   14854:	b	1485c <__assert_fail@plt+0x2c98>
   14858:	mov	r6, #1
   1485c:	ldr	r0, [sl, #48]	; 0x30
   14860:	tst	r0, #4
   14864:	bne	148bc <__assert_fail@plt+0x2cf8>
   14868:	cmn	r4, #1
   1486c:	mov	r1, #0
   14870:	mov	r9, #0
   14874:	movwgt	r1, #1
   14878:	orrs	r1, r1, r6
   1487c:	bne	148dc <__assert_fail@plt+0x2d18>
   14880:	ands	r0, r0, #512	; 0x200
   14884:	beq	148dc <__assert_fail@plt+0x2d18>
   14888:	add	r4, sl, #60	; 0x3c
   1488c:	mov	r0, r4
   14890:	bl	16dfc <__assert_fail@plt+0x5238>
   14894:	cmp	r0, #0
   14898:	bne	148e4 <__assert_fail@plt+0x2d20>
   1489c:	mov	r0, r4
   148a0:	bl	16e50 <__assert_fail@plt+0x528c>
   148a4:	cmn	r0, #1
   148a8:	ble	148e4 <__assert_fail@plt+0x2d20>
   148ac:	mov	r4, r0
   148b0:	mov	r9, #0
   148b4:	mov	r7, #0
   148b8:	b	1492c <__assert_fail@plt+0x2d68>
   148bc:	mov	r5, #0
   148c0:	cmp	r4, #0
   148c4:	blt	14a5c <__assert_fail@plt+0x2e98>
   148c8:	ands	r0, r0, #512	; 0x200
   148cc:	beq	14a5c <__assert_fail@plt+0x2e98>
   148d0:	mov	r0, r4
   148d4:	bl	11b70 <close@plt>
   148d8:	b	14a5c <__assert_fail@plt+0x2e98>
   148dc:	cmn	r4, #1
   148e0:	bgt	1492c <__assert_fail@plt+0x2d68>
   148e4:	ldr	r0, [sl, #48]	; 0x30
   148e8:	mov	r1, #32768	; 0x8000
   148ec:	and	r1, r1, r0, lsl #11
   148f0:	tst	r0, #512	; 0x200
   148f4:	orr	r1, r1, #18688	; 0x4900
   148f8:	orr	r2, r1, #524288	; 0x80000
   148fc:	bne	14910 <__assert_fail@plt+0x2d4c>
   14900:	mov	r0, r7
   14904:	mov	r1, r2
   14908:	bl	1b560 <lchmod@@Base+0x46b8>
   1490c:	b	1491c <__assert_fail@plt+0x2d58>
   14910:	ldr	r0, [sl, #32]
   14914:	mov	r1, r7
   14918:	bl	17570 <lchmod@@Base+0x6c8>
   1491c:	mov	r4, r0
   14920:	mov	r9, #1
   14924:	cmp	r0, #0
   14928:	blt	14a00 <__assert_fail@plt+0x2e3c>
   1492c:	ldr	r5, [sl, #48]	; 0x30
   14930:	tst	r5, #2
   14934:	bne	14978 <__assert_fail@plt+0x2db4>
   14938:	cmp	r7, #0
   1493c:	beq	14958 <__assert_fail@plt+0x2d94>
   14940:	movw	r1, #50066	; 0xc392
   14944:	mov	r0, r7
   14948:	movt	r1, #1
   1494c:	bl	117d4 <strcmp@plt>
   14950:	cmp	r0, #0
   14954:	beq	14978 <__assert_fail@plt+0x2db4>
   14958:	tst	r5, #512	; 0x200
   1495c:	bne	149d0 <__assert_fail@plt+0x2e0c>
   14960:	mov	r0, r4
   14964:	bl	11ae0 <fchdir@plt>
   14968:	mov	r5, r0
   1496c:	cmp	r9, #0
   14970:	bne	14a20 <__assert_fail@plt+0x2e5c>
   14974:	b	14a5c <__assert_fail@plt+0x2e98>
   14978:	mov	r2, sp
   1497c:	mov	r0, #3
   14980:	mov	r1, r4
   14984:	bl	118d0 <__fxstat64@plt>
   14988:	cmp	r0, #0
   1498c:	bne	14a14 <__assert_fail@plt+0x2e50>
   14990:	ldrd	r0, [r8, #64]	; 0x40
   14994:	ldm	sp, {r2, r3}
   14998:	eor	r1, r1, r3
   1499c:	eor	r0, r0, r2
   149a0:	orrs	r0, r0, r1
   149a4:	bne	14a08 <__assert_fail@plt+0x2e44>
   149a8:	ldrd	r0, [r8, #160]	; 0xa0
   149ac:	ldr	r2, [sp, #96]	; 0x60
   149b0:	ldr	r3, [sp, #100]	; 0x64
   149b4:	eor	r1, r1, r3
   149b8:	eor	r0, r0, r2
   149bc:	orrs	r0, r0, r1
   149c0:	bne	14a08 <__assert_fail@plt+0x2e44>
   149c4:	ldr	r5, [sl, #48]	; 0x30
   149c8:	tst	r5, #512	; 0x200
   149cc:	beq	14960 <__assert_fail@plt+0x2d9c>
   149d0:	ldr	r1, [sl, #32]
   149d4:	cmp	r1, r4
   149d8:	bne	149e4 <__assert_fail@plt+0x2e20>
   149dc:	cmn	r1, #100	; 0x64
   149e0:	bne	14a68 <__assert_fail@plt+0x2ea4>
   149e4:	cmp	r6, #0
   149e8:	beq	14a3c <__assert_fail@plt+0x2e78>
   149ec:	add	r0, sl, #60	; 0x3c
   149f0:	bl	16e04 <__assert_fail@plt+0x5240>
   149f4:	cmp	r0, #0
   149f8:	bge	14a50 <__assert_fail@plt+0x2e8c>
   149fc:	b	14a54 <__assert_fail@plt+0x2e90>
   14a00:	mvn	r5, #0
   14a04:	b	14a5c <__assert_fail@plt+0x2e98>
   14a08:	bl	11a08 <__errno_location@plt>
   14a0c:	mov	r1, #2
   14a10:	str	r1, [r0]
   14a14:	mvn	r5, #0
   14a18:	cmp	r9, #0
   14a1c:	beq	14a5c <__assert_fail@plt+0x2e98>
   14a20:	bl	11a08 <__errno_location@plt>
   14a24:	ldr	r7, [r0]
   14a28:	mov	r6, r0
   14a2c:	mov	r0, r4
   14a30:	bl	11b70 <close@plt>
   14a34:	str	r7, [r6]
   14a38:	b	14a5c <__assert_fail@plt+0x2e98>
   14a3c:	tst	r5, #4
   14a40:	bne	14a54 <__assert_fail@plt+0x2e90>
   14a44:	cmp	r1, #0
   14a48:	blt	14a54 <__assert_fail@plt+0x2e90>
   14a4c:	mov	r0, r1
   14a50:	bl	11b70 <close@plt>
   14a54:	str	r4, [sl, #32]
   14a58:	mov	r5, #0
   14a5c:	mov	r0, r5
   14a60:	sub	sp, fp, #28
   14a64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a68:	bl	11b64 <abort@plt>
   14a6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a70:	add	fp, sp, #28
   14a74:	sub	sp, sp, #76	; 0x4c
   14a78:	ldr	sl, [r0]
   14a7c:	mov	r8, r1
   14a80:	mov	r5, r0
   14a84:	str	r0, [sp, #44]	; 0x2c
   14a88:	ldr	r4, [sl, #12]
   14a8c:	cmp	r4, #0
   14a90:	beq	14adc <__assert_fail@plt+0x2f18>
   14a94:	mov	r0, r4
   14a98:	bl	11ad4 <dirfd@plt>
   14a9c:	cmn	r0, #1
   14aa0:	str	r0, [fp, #-32]	; 0xffffffe0
   14aa4:	ble	14b14 <__assert_fail@plt+0x2f50>
   14aa8:	mov	r1, r5
   14aac:	mvn	r2, #0
   14ab0:	str	r4, [sp, #16]
   14ab4:	str	r8, [sp, #8]
   14ab8:	mov	ip, #0
   14abc:	ldr	r0, [r1, #44]!	; 0x2c
   14ac0:	cmp	r0, #0
   14ac4:	str	r1, [sp, #52]	; 0x34
   14ac8:	add	r7, r1, #4
   14acc:	movweq	r2, #34464	; 0x86a0
   14ad0:	movteq	r2, #1
   14ad4:	str	r2, [sp, #32]
   14ad8:	b	14cf8 <__assert_fail@plt+0x3134>
   14adc:	mov	r7, r5
   14ae0:	mvn	r0, #99	; 0x63
   14ae4:	mov	r2, #0
   14ae8:	ldr	r3, [r7, #48]!	; 0x30
   14aec:	and	r1, r3, #516	; 0x204
   14af0:	cmp	r1, #512	; 0x200
   14af4:	ldr	r1, [sl, #24]
   14af8:	ldreq	r0, [r5, #32]
   14afc:	tst	r3, #16
   14b00:	beq	14b3c <__assert_fail@plt+0x2f78>
   14b04:	tst	r3, #1
   14b08:	bne	14b30 <__assert_fail@plt+0x2f6c>
   14b0c:	mov	r2, #32768	; 0x8000
   14b10:	b	14b3c <__assert_fail@plt+0x2f78>
   14b14:	ldr	r0, [sl, #12]
   14b18:	bl	11ba0 <closedir@plt>
   14b1c:	mov	r6, #0
   14b20:	str	r6, [sl, #12]
   14b24:	cmp	r8, #3
   14b28:	beq	14b80 <__assert_fail@plt+0x2fbc>
   14b2c:	b	15414 <__assert_fail@plt+0x3850>
   14b30:	ldr	r3, [sl, #48]	; 0x30
   14b34:	cmp	r3, #0
   14b38:	movne	r2, #32768	; 0x8000
   14b3c:	sub	r3, fp, #32
   14b40:	bl	175b4 <lchmod@@Base+0x70c>
   14b44:	cmp	r0, #0
   14b48:	str	r0, [sl, #12]
   14b4c:	beq	14b74 <__assert_fail@plt+0x2fb0>
   14b50:	ldrh	r0, [sl, #56]	; 0x38
   14b54:	cmp	r0, #11
   14b58:	bne	14b98 <__assert_fail@plt+0x2fd4>
   14b5c:	mov	r0, r5
   14b60:	mov	r1, sl
   14b64:	mov	r2, #0
   14b68:	bl	13bac <__assert_fail@plt+0x1fe8>
   14b6c:	strh	r0, [sl, #56]	; 0x38
   14b70:	b	14bd8 <__assert_fail@plt+0x3014>
   14b74:	mov	r6, #0
   14b78:	cmp	r8, #3
   14b7c:	bne	15414 <__assert_fail@plt+0x3850>
   14b80:	mov	r0, #4
   14b84:	strh	r0, [sl, #56]	; 0x38
   14b88:	bl	11a08 <__errno_location@plt>
   14b8c:	ldr	r0, [r0]
   14b90:	str	r0, [sl, #32]
   14b94:	b	15414 <__assert_fail@plt+0x3850>
   14b98:	ldrb	r0, [r7, #1]
   14b9c:	tst	r0, #1
   14ba0:	beq	14bd8 <__assert_fail@plt+0x3014>
   14ba4:	mov	r0, r5
   14ba8:	mov	r1, sl
   14bac:	bl	14744 <__assert_fail@plt+0x2b80>
   14bb0:	mov	r0, r5
   14bb4:	mov	r1, sl
   14bb8:	mov	r2, #0
   14bbc:	mov	r6, #0
   14bc0:	bl	13bac <__assert_fail@plt+0x1fe8>
   14bc4:	mov	r0, r5
   14bc8:	mov	r1, sl
   14bcc:	bl	155b0 <__assert_fail@plt+0x39ec>
   14bd0:	cmp	r0, #0
   14bd4:	beq	15380 <__assert_fail@plt+0x37bc>
   14bd8:	mov	r1, r5
   14bdc:	str	r8, [sp, #8]
   14be0:	str	r4, [sp, #16]
   14be4:	ldr	r0, [r1, #44]!	; 0x2c
   14be8:	str	r1, [sp, #52]	; 0x34
   14bec:	mvn	r1, #0
   14bf0:	cmp	r0, #0
   14bf4:	movweq	r1, #34464	; 0x86a0
   14bf8:	movteq	r1, #1
   14bfc:	cmp	r8, #2
   14c00:	str	r1, [sp, #32]
   14c04:	bne	14c20 <__assert_fail@plt+0x305c>
   14c08:	mov	ip, #1
   14c0c:	cmp	r8, #3
   14c10:	bne	14cf8 <__assert_fail@plt+0x3134>
   14c14:	sub	r0, r8, #3
   14c18:	mov	r5, #0
   14c1c:	b	14c40 <__assert_fail@plt+0x307c>
   14c20:	ldr	r0, [r7]
   14c24:	and	r0, r0, #56	; 0x38
   14c28:	cmp	r0, #24
   14c2c:	ldreq	r0, [sl, #84]	; 0x54
   14c30:	cmpeq	r0, #2
   14c34:	beq	154c8 <__assert_fail@plt+0x3904>
   14c38:	sub	r0, r8, #3
   14c3c:	mov	r5, #1
   14c40:	clz	r0, r0
   14c44:	lsr	r6, r0, #5
   14c48:	ldrb	r0, [r7, #1]
   14c4c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14c50:	tst	r0, #2
   14c54:	beq	14c70 <__assert_fail@plt+0x30ac>
   14c58:	mov	r0, r2
   14c5c:	movw	r1, #1030	; 0x406
   14c60:	mov	r2, #3
   14c64:	bl	1b380 <lchmod@@Base+0x44d8>
   14c68:	mov	r2, r0
   14c6c:	str	r0, [fp, #-32]	; 0xffffffe0
   14c70:	cmp	r2, #0
   14c74:	blt	14c90 <__assert_fail@plt+0x30cc>
   14c78:	ldr	r0, [sp, #44]	; 0x2c
   14c7c:	mov	r1, sl
   14c80:	mov	r3, #0
   14c84:	bl	14814 <__assert_fail@plt+0x2c50>
   14c88:	cmp	r0, #0
   14c8c:	beq	14cf0 <__assert_fail@plt+0x312c>
   14c90:	and	r0, r6, r5
   14c94:	cmp	r0, #1
   14c98:	bne	14ca8 <__assert_fail@plt+0x30e4>
   14c9c:	bl	11a08 <__errno_location@plt>
   14ca0:	ldr	r0, [r0]
   14ca4:	str	r0, [sl, #32]
   14ca8:	ldrh	r0, [sl, #58]	; 0x3a
   14cac:	orr	r0, r0, #1
   14cb0:	strh	r0, [sl, #58]	; 0x3a
   14cb4:	ldr	r0, [sl, #12]
   14cb8:	bl	11ba0 <closedir@plt>
   14cbc:	mov	r4, #0
   14cc0:	ldr	r5, [sp, #44]	; 0x2c
   14cc4:	str	r4, [sl, #12]
   14cc8:	ldr	r0, [r7]
   14ccc:	tst	r0, #512	; 0x200
   14cd0:	beq	14ce4 <__assert_fail@plt+0x3120>
   14cd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14cd8:	cmp	r0, #0
   14cdc:	blt	14ce4 <__assert_fail@plt+0x3120>
   14ce0:	bl	11b70 <close@plt>
   14ce4:	mov	ip, #1
   14ce8:	str	r4, [sl, #12]
   14cec:	b	14cf8 <__assert_fail@plt+0x3134>
   14cf0:	ldr	r5, [sp, #44]	; 0x2c
   14cf4:	mov	ip, #0
   14cf8:	ldr	r0, [sl, #40]	; 0x28
   14cfc:	ldr	r1, [sl, #28]
   14d00:	mov	r9, #0
   14d04:	sub	r2, r0, #1
   14d08:	ldrb	r1, [r1, r2]
   14d0c:	cmp	r1, #47	; 0x2f
   14d10:	ldrb	r1, [r7]
   14d14:	moveq	r0, r2
   14d18:	tst	r1, #4
   14d1c:	mov	r1, #0
   14d20:	str	r1, [sp, #40]	; 0x28
   14d24:	beq	14d3c <__assert_fail@plt+0x3178>
   14d28:	ldr	r1, [r5, #24]
   14d2c:	mov	r2, #47	; 0x2f
   14d30:	strb	r2, [r1, r0]!
   14d34:	add	r1, r1, #1
   14d38:	str	r1, [sp, #40]	; 0x28
   14d3c:	ldr	r6, [sl, #12]
   14d40:	add	r1, r0, #1
   14d44:	str	r1, [fp, #-48]	; 0xffffffd0
   14d48:	cmp	r6, #0
   14d4c:	beq	150c4 <__assert_fail@plt+0x3500>
   14d50:	ldr	r0, [sl, #48]	; 0x30
   14d54:	str	r7, [fp, #-36]	; 0xffffffdc
   14d58:	str	ip, [sp, #4]
   14d5c:	mov	r7, #0
   14d60:	add	r0, r0, #1
   14d64:	str	r0, [sp, #24]
   14d68:	ldr	r0, [r5, #36]	; 0x24
   14d6c:	sub	r0, r0, r1
   14d70:	str	r0, [fp, #-44]	; 0xffffffd4
   14d74:	bl	11a08 <__errno_location@plt>
   14d78:	str	r0, [sp, #36]	; 0x24
   14d7c:	mov	r0, #0
   14d80:	mov	r9, #0
   14d84:	mov	r4, #0
   14d88:	str	sl, [sp, #28]
   14d8c:	str	r0, [sp, #48]	; 0x30
   14d90:	mov	r0, #0
   14d94:	str	r0, [sp, #12]
   14d98:	mov	r0, #0
   14d9c:	str	r0, [sp, #20]
   14da0:	ldr	r0, [sp, #36]	; 0x24
   14da4:	str	r7, [r0]
   14da8:	mov	r0, r6
   14dac:	bl	11ab0 <readdir64@plt>
   14db0:	cmp	r0, #0
   14db4:	beq	15218 <__assert_fail@plt+0x3654>
   14db8:	mov	r8, r0
   14dbc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14dc0:	str	r4, [fp, #-40]	; 0xffffffd8
   14dc4:	add	r4, r8, #19
   14dc8:	ldrb	r0, [r0]
   14dcc:	tst	r0, #32
   14dd0:	ldrbeq	r0, [r4]
   14dd4:	cmpeq	r0, #46	; 0x2e
   14dd8:	beq	14ed4 <__assert_fail@plt+0x3310>
   14ddc:	mov	r0, r4
   14de0:	bl	119cc <strlen@plt>
   14de4:	mov	r5, r0
   14de8:	add	r0, r0, #176	; 0xb0
   14dec:	bic	r0, r0, #7
   14df0:	bl	1b064 <lchmod@@Base+0x41bc>
   14df4:	mov	r6, r0
   14df8:	cmp	r0, #0
   14dfc:	beq	153a4 <__assert_fail@plt+0x37e0>
   14e00:	add	sl, r6, #168	; 0xa8
   14e04:	mov	r1, r4
   14e08:	mov	r2, r5
   14e0c:	mov	r0, sl
   14e10:	bl	11834 <memcpy@plt>
   14e14:	ldr	r2, [sp, #44]	; 0x2c
   14e18:	mov	r0, #0
   14e1c:	mov	r1, #196608	; 0x30000
   14e20:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14e24:	strb	r0, [sl, r5]
   14e28:	str	r5, [r6, #52]	; 0x34
   14e2c:	str	r2, [r6, #44]	; 0x2c
   14e30:	add	r7, r5, r3
   14e34:	ldr	r4, [r2, #24]
   14e38:	str	r1, [r6, #58]	; 0x3a
   14e3c:	str	r0, [r6, #12]
   14e40:	str	r0, [r6, #16]
   14e44:	str	r0, [r6, #20]
   14e48:	str	r4, [r6, #28]
   14e4c:	str	r0, [r6, #32]
   14e50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e54:	cmp	r5, r0
   14e58:	bcs	14e70 <__assert_fail@plt+0x32ac>
   14e5c:	ldr	r4, [fp, #-40]	; 0xffffffd8
   14e60:	mov	r5, r2
   14e64:	cmp	r7, r3
   14e68:	bcs	14f14 <__assert_fail@plt+0x3350>
   14e6c:	b	1527c <__assert_fail@plt+0x36b8>
   14e70:	ldr	r1, [r2, #36]	; 0x24
   14e74:	movw	r0, #257	; 0x101
   14e78:	mov	r5, r2
   14e7c:	add	r0, r7, r0
   14e80:	adds	r1, r0, r1
   14e84:	bcs	15360 <__assert_fail@plt+0x379c>
   14e88:	mov	r0, r4
   14e8c:	str	r1, [r5, #36]	; 0x24
   14e90:	bl	1b094 <lchmod@@Base+0x41ec>
   14e94:	cmp	r0, #0
   14e98:	beq	15390 <__assert_fail@plt+0x37cc>
   14e9c:	cmp	r0, r4
   14ea0:	str	r0, [r5, #24]
   14ea4:	beq	14efc <__assert_fail@plt+0x3338>
   14ea8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14eac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14eb0:	ldr	r4, [fp, #-40]	; 0xffffffd8
   14eb4:	ldrb	r1, [r1]
   14eb8:	tst	r1, #4
   14ebc:	ldr	r1, [sp, #40]	; 0x28
   14ec0:	addne	r1, r0, r3
   14ec4:	mov	r0, #1
   14ec8:	str	r1, [sp, #40]	; 0x28
   14ecc:	str	r0, [sp, #20]
   14ed0:	b	14f04 <__assert_fail@plt+0x3340>
   14ed4:	ldrb	r0, [r8, #20]
   14ed8:	cmp	r0, #0
   14edc:	beq	14ef0 <__assert_fail@plt+0x332c>
   14ee0:	cmp	r0, #46	; 0x2e
   14ee4:	ldrbeq	r0, [r8, #21]
   14ee8:	cmpeq	r0, #0
   14eec:	bne	14ddc <__assert_fail@plt+0x3218>
   14ef0:	ldr	r4, [fp, #-40]	; 0xffffffd8
   14ef4:	mov	r7, #0
   14ef8:	b	150a8 <__assert_fail@plt+0x34e4>
   14efc:	ldr	r4, [fp, #-40]	; 0xffffffd8
   14f00:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14f04:	ldr	r0, [r5, #36]	; 0x24
   14f08:	sub	r0, r0, r3
   14f0c:	cmp	r7, r3
   14f10:	bcc	1527c <__assert_fail@plt+0x36b8>
   14f14:	str	r0, [fp, #-44]	; 0xffffffd4
   14f18:	ldr	r0, [sp, #24]
   14f1c:	str	r0, [r6, #48]	; 0x30
   14f20:	ldr	r0, [r5]
   14f24:	str	r7, [r6, #40]	; 0x28
   14f28:	str	r0, [r6, #4]
   14f2c:	ldrd	r0, [r8]
   14f30:	strd	r0, [r6, #160]	; 0xa0
   14f34:	ldrb	r0, [r5, #48]	; 0x30
   14f38:	tst	r0, #4
   14f3c:	bne	14f48 <__assert_fail@plt+0x3384>
   14f40:	str	sl, [r6, #24]
   14f44:	b	14f64 <__assert_fail@plt+0x33a0>
   14f48:	ldr	r0, [r6, #28]
   14f4c:	ldr	r1, [r6, #52]	; 0x34
   14f50:	str	r0, [r6, #24]
   14f54:	ldr	r0, [sp, #40]	; 0x28
   14f58:	add	r2, r1, #1
   14f5c:	mov	r1, sl
   14f60:	bl	11804 <memmove@plt>
   14f64:	ldr	r0, [sp, #52]	; 0x34
   14f68:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14f6c:	ldr	sl, [sp, #28]
   14f70:	ldr	r0, [r0]
   14f74:	ldr	r2, [r1]
   14f78:	cmp	r0, #0
   14f7c:	beq	14fa4 <__assert_fail@plt+0x33e0>
   14f80:	ands	r0, r2, #1024	; 0x400
   14f84:	bne	14fa4 <__assert_fail@plt+0x33e0>
   14f88:	mov	r0, r5
   14f8c:	mov	r1, r6
   14f90:	mov	r2, #0
   14f94:	bl	13bac <__assert_fail@plt+0x1fe8>
   14f98:	mov	r7, #0
   14f9c:	strh	r0, [r6, #56]	; 0x38
   14fa0:	b	15018 <__assert_fail@plt+0x3454>
   14fa4:	ldrb	r3, [r8, #18]
   14fa8:	mov	r0, #0
   14fac:	tst	r2, #8
   14fb0:	mov	r1, #0
   14fb4:	beq	14fd8 <__assert_fail@plt+0x3414>
   14fb8:	orr	r1, r3, #4
   14fbc:	cmp	r1, #4
   14fc0:	mov	r1, #0
   14fc4:	beq	14fd8 <__assert_fail@plt+0x3414>
   14fc8:	eor	r1, r3, #10
   14fcc:	and	r2, r2, #16
   14fd0:	orrs	r1, r2, r1
   14fd4:	movwne	r1, #1
   14fd8:	mov	r2, #11
   14fdc:	mov	r7, #0
   14fe0:	strh	r2, [r6, #56]	; 0x38
   14fe4:	sub	r2, r3, #1
   14fe8:	uxtb	r3, r2
   14fec:	cmp	r3, #11
   14ff0:	sxtbls	r0, r2
   14ff4:	movwls	r2, #50080	; 0xc3a0
   14ff8:	movtls	r2, #1
   14ffc:	ldrls	r0, [r2, r0, lsl #2]
   15000:	cmp	r1, #0
   15004:	str	r0, [r6, #80]	; 0x50
   15008:	mov	r0, #2
   1500c:	movwne	r0, #1
   15010:	str	r0, [r6, #112]	; 0x70
   15014:	str	r7, [r6, #116]	; 0x74
   15018:	cmp	r9, #0
   1501c:	str	r7, [r6, #8]
   15020:	ldrne	r0, [sp, #48]	; 0x30
   15024:	moveq	r9, r6
   15028:	strne	r6, [r0, #8]
   1502c:	movw	r0, #10000	; 0x2710
   15030:	cmp	r4, r0
   15034:	bne	15088 <__assert_fail@plt+0x34c4>
   15038:	ldr	r0, [sp, #52]	; 0x34
   1503c:	ldr	r0, [r0]
   15040:	cmp	r0, #0
   15044:	bne	15088 <__assert_fail@plt+0x34c4>
   15048:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1504c:	mov	r0, sl
   15050:	bl	15910 <__assert_fail@plt+0x3d4c>
   15054:	mov	r1, #0
   15058:	str	r1, [sp, #12]
   1505c:	movw	r1, #19778	; 0x4d42
   15060:	movt	r1, #65363	; 0xff53
   15064:	cmp	r0, r1
   15068:	movwne	r1, #26985	; 0x6969
   1506c:	cmpne	r0, r1
   15070:	beq	15088 <__assert_fail@plt+0x34c4>
   15074:	movw	r1, #6548	; 0x1994
   15078:	movt	r1, #258	; 0x102
   1507c:	cmp	r0, r1
   15080:	movne	r0, #1
   15084:	strne	r0, [sp, #12]
   15088:	ldr	r0, [sp, #32]
   1508c:	add	r4, r4, #1
   15090:	cmp	r0, r4
   15094:	mov	r0, #0
   15098:	movwls	r0, #15
   1509c:	cmp	r0, #0
   150a0:	bne	152f0 <__assert_fail@plt+0x372c>
   150a4:	str	r6, [sp, #48]	; 0x30
   150a8:	ldr	r6, [sl, #12]
   150ac:	cmp	r6, #0
   150b0:	bne	14da0 <__assert_fail@plt+0x31dc>
   150b4:	ldr	r0, [sp, #20]
   150b8:	ldr	ip, [sp, #4]
   150bc:	ldr	r6, [sp, #12]
   150c0:	b	15264 <__assert_fail@plt+0x36a0>
   150c4:	mov	r4, #0
   150c8:	mov	r6, #0
   150cc:	ldrb	r0, [r7]
   150d0:	tst	r0, #4
   150d4:	beq	15100 <__assert_fail@plt+0x353c>
   150d8:	ldr	r2, [sp, #40]	; 0x28
   150dc:	ldr	r0, [r5, #36]	; 0x24
   150e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   150e4:	cmp	r3, r0
   150e8:	sub	r1, r2, #1
   150ec:	mov	r0, #0
   150f0:	moveq	r2, r1
   150f4:	cmp	r4, #0
   150f8:	moveq	r2, r1
   150fc:	strb	r0, [r2]
   15100:	ldr	r0, [sp, #16]
   15104:	cmp	r0, #0
   15108:	movwne	r0, #1
   1510c:	orrs	r0, r0, ip
   15110:	beq	15174 <__assert_fail@plt+0x35b0>
   15114:	cmp	r4, #0
   15118:	bne	151b4 <__assert_fail@plt+0x35f0>
   1511c:	ldr	r0, [sp, #8]
   15120:	cmp	r0, #3
   15124:	bne	1513c <__assert_fail@plt+0x3578>
   15128:	ldrh	r0, [sl, #56]	; 0x38
   1512c:	cmp	r0, #4
   15130:	cmpne	r0, #7
   15134:	movne	r0, #6
   15138:	strhne	r0, [sl, #56]	; 0x38
   1513c:	mov	r6, #0
   15140:	cmp	r9, #0
   15144:	beq	15414 <__assert_fail@plt+0x3850>
   15148:	ldrd	r4, [r9, #8]
   1514c:	cmp	r5, #0
   15150:	beq	1515c <__assert_fail@plt+0x3598>
   15154:	mov	r0, r5
   15158:	bl	11ba0 <closedir@plt>
   1515c:	mov	r0, r9
   15160:	bl	136a8 <__assert_fail@plt+0x1ae4>
   15164:	cmp	r4, #0
   15168:	mov	r9, r4
   1516c:	bne	15148 <__assert_fail@plt+0x3584>
   15170:	b	15414 <__assert_fail@plt+0x3850>
   15174:	ldr	r0, [sp, #8]
   15178:	cmp	r0, #1
   1517c:	cmpne	r4, #0
   15180:	bne	151b4 <__assert_fail@plt+0x35f0>
   15184:	ldr	r0, [sl, #48]	; 0x30
   15188:	cmp	r0, #0
   1518c:	beq	15304 <__assert_fail@plt+0x3740>
   15190:	ldr	r1, [sl, #4]
   15194:	movw	r3, #50066	; 0xc392
   15198:	mov	r0, r5
   1519c:	mvn	r2, #0
   151a0:	movt	r3, #1
   151a4:	bl	14814 <__assert_fail@plt+0x2c50>
   151a8:	cmp	r0, #0
   151ac:	bne	15314 <__assert_fail@plt+0x3750>
   151b0:	b	15114 <__assert_fail@plt+0x3550>
   151b4:	tst	r6, #1
   151b8:	beq	151e8 <__assert_fail@plt+0x3624>
   151bc:	movw	r0, #22744	; 0x58d8
   151c0:	mov	r1, r9
   151c4:	mov	r2, r4
   151c8:	movt	r0, #1
   151cc:	str	r0, [r5, #44]	; 0x2c
   151d0:	mov	r0, r5
   151d4:	bl	13d44 <__assert_fail@plt+0x2180>
   151d8:	mov	r6, r0
   151dc:	mov	r0, #0
   151e0:	str	r0, [r5, #44]	; 0x2c
   151e4:	b	15414 <__assert_fail@plt+0x3850>
   151e8:	cmp	r4, #2
   151ec:	bcc	15274 <__assert_fail@plt+0x36b0>
   151f0:	ldr	r0, [sp, #52]	; 0x34
   151f4:	ldr	r0, [r0]
   151f8:	cmp	r0, #0
   151fc:	beq	15274 <__assert_fail@plt+0x36b0>
   15200:	mov	r0, r5
   15204:	mov	r1, r9
   15208:	mov	r2, r4
   1520c:	bl	13d44 <__assert_fail@plt+0x2180>
   15210:	mov	r6, r0
   15214:	b	15414 <__assert_fail@plt+0x3850>
   15218:	ldr	r0, [sp, #36]	; 0x24
   1521c:	ldr	r0, [r0]
   15220:	cmp	r0, #0
   15224:	beq	15240 <__assert_fail@plt+0x367c>
   15228:	str	r0, [sl, #32]
   1522c:	ldr	r0, [sp, #16]
   15230:	orrs	r0, r0, r4
   15234:	mov	r0, #4
   15238:	movwne	r0, #7
   1523c:	strh	r0, [sl, #56]	; 0x38
   15240:	ldr	r0, [sl, #12]
   15244:	ldr	r6, [sp, #12]
   15248:	cmp	r0, #0
   1524c:	beq	15428 <__assert_fail@plt+0x3864>
   15250:	bl	11ba0 <closedir@plt>
   15254:	mov	r0, #0
   15258:	ldr	ip, [sp, #4]
   1525c:	str	r0, [sl, #12]
   15260:	ldr	r0, [sp, #20]
   15264:	tst	r0, #1
   15268:	ldr	r7, [fp, #-36]	; 0xffffffdc
   1526c:	beq	150cc <__assert_fail@plt+0x3508>
   15270:	b	1543c <__assert_fail@plt+0x3878>
   15274:	mov	r6, r9
   15278:	b	15414 <__assert_fail@plt+0x3850>
   1527c:	mov	r0, r6
   15280:	bl	136a8 <__assert_fail@plt+0x1ae4>
   15284:	ldr	r7, [sp, #28]
   15288:	cmp	r9, #0
   1528c:	beq	152b8 <__assert_fail@plt+0x36f4>
   15290:	ldrd	r4, [r9, #8]
   15294:	cmp	r5, #0
   15298:	beq	152a4 <__assert_fail@plt+0x36e0>
   1529c:	mov	r0, r5
   152a0:	bl	11ba0 <closedir@plt>
   152a4:	mov	r0, r9
   152a8:	bl	136a8 <__assert_fail@plt+0x1ae4>
   152ac:	cmp	r4, #0
   152b0:	mov	r9, r4
   152b4:	bne	15290 <__assert_fail@plt+0x36cc>
   152b8:	ldr	r0, [r7, #12]
   152bc:	bl	11ba0 <closedir@plt>
   152c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   152c4:	mov	r6, #0
   152c8:	mov	r0, #7
   152cc:	str	r6, [r7, #12]
   152d0:	strh	r0, [r7, #56]	; 0x38
   152d4:	ldr	r0, [r1]
   152d8:	orr	r0, r0, #8192	; 0x2000
   152dc:	str	r0, [r1]
   152e0:	ldr	r1, [sp, #36]	; 0x24
   152e4:	mov	r0, #36	; 0x24
   152e8:	str	r0, [r1]
   152ec:	b	15414 <__assert_fail@plt+0x3850>
   152f0:	ldr	ip, [sp, #4]
   152f4:	cmp	r0, #15
   152f8:	bne	15420 <__assert_fail@plt+0x385c>
   152fc:	ldr	r6, [sp, #12]
   15300:	b	1542c <__assert_fail@plt+0x3868>
   15304:	mov	r0, r5
   15308:	bl	15520 <__assert_fail@plt+0x395c>
   1530c:	cmp	r0, #0
   15310:	beq	15114 <__assert_fail@plt+0x3550>
   15314:	mov	r0, #7
   15318:	mov	r6, #0
   1531c:	cmp	r9, #0
   15320:	strh	r0, [sl, #56]	; 0x38
   15324:	ldr	r0, [r7]
   15328:	orr	r0, r0, #8192	; 0x2000
   1532c:	str	r0, [r7]
   15330:	beq	15414 <__assert_fail@plt+0x3850>
   15334:	ldrd	r4, [r9, #8]
   15338:	cmp	r5, #0
   1533c:	beq	15348 <__assert_fail@plt+0x3784>
   15340:	mov	r0, r5
   15344:	bl	11ba0 <closedir@plt>
   15348:	mov	r0, r9
   1534c:	bl	136a8 <__assert_fail@plt+0x1ae4>
   15350:	cmp	r4, #0
   15354:	mov	r9, r4
   15358:	bne	15334 <__assert_fail@plt+0x3770>
   1535c:	b	15414 <__assert_fail@plt+0x3850>
   15360:	mov	r0, r4
   15364:	bl	136a8 <__assert_fail@plt+0x1ae4>
   15368:	ldr	r1, [sp, #36]	; 0x24
   1536c:	mov	r0, #0
   15370:	str	r0, [r5, #24]
   15374:	mov	r0, #36	; 0x24
   15378:	str	r0, [r1]
   1537c:	b	153a0 <__assert_fail@plt+0x37dc>
   15380:	bl	11a08 <__errno_location@plt>
   15384:	mov	r1, #12
   15388:	str	r1, [r0]
   1538c:	b	15414 <__assert_fail@plt+0x3850>
   15390:	ldr	r0, [r5, #24]
   15394:	bl	136a8 <__assert_fail@plt+0x1ae4>
   15398:	mov	r0, #0
   1539c:	str	r0, [r5, #24]
   153a0:	ldr	sl, [sp, #28]
   153a4:	ldr	r0, [sp, #36]	; 0x24
   153a8:	ldr	r4, [r0]
   153ac:	mov	r0, r6
   153b0:	bl	136a8 <__assert_fail@plt+0x1ae4>
   153b4:	cmp	r9, #0
   153b8:	beq	153e4 <__assert_fail@plt+0x3820>
   153bc:	ldrd	r6, [r9, #8]
   153c0:	cmp	r7, #0
   153c4:	beq	153d0 <__assert_fail@plt+0x380c>
   153c8:	mov	r0, r7
   153cc:	bl	11ba0 <closedir@plt>
   153d0:	mov	r0, r9
   153d4:	bl	136a8 <__assert_fail@plt+0x1ae4>
   153d8:	cmp	r6, #0
   153dc:	mov	r9, r6
   153e0:	bne	153bc <__assert_fail@plt+0x37f8>
   153e4:	ldr	r0, [sl, #12]
   153e8:	bl	11ba0 <closedir@plt>
   153ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   153f0:	mov	r6, #0
   153f4:	mov	r0, #7
   153f8:	str	r6, [sl, #12]
   153fc:	strh	r0, [sl, #56]	; 0x38
   15400:	ldr	r0, [r1]
   15404:	orr	r0, r0, #8192	; 0x2000
   15408:	str	r0, [r1]
   1540c:	ldr	r0, [sp, #36]	; 0x24
   15410:	str	r4, [r0]
   15414:	mov	r0, r6
   15418:	sub	sp, fp, #28
   1541c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15420:	mov	r6, #0
   15424:	b	15414 <__assert_fail@plt+0x3850>
   15428:	ldr	ip, [sp, #4]
   1542c:	ldr	r0, [sp, #20]
   15430:	ldr	r7, [fp, #-36]	; 0xffffffdc
   15434:	tst	r0, #1
   15438:	beq	150cc <__assert_fail@plt+0x3508>
   1543c:	ldr	r1, [r5, #4]
   15440:	ldr	r0, [r5, #24]
   15444:	cmp	r1, #0
   15448:	beq	15478 <__assert_fail@plt+0x38b4>
   1544c:	ldr	r2, [r1, #24]
   15450:	add	r3, r1, #168	; 0xa8
   15454:	cmp	r2, r3
   15458:	ldrne	r3, [r1, #28]
   1545c:	subne	r2, r2, r3
   15460:	addne	r2, r0, r2
   15464:	strne	r2, [r1, #24]
   15468:	str	r0, [r1, #28]
   1546c:	ldr	r1, [r1, #8]
   15470:	cmp	r1, #0
   15474:	bne	1544c <__assert_fail@plt+0x3888>
   15478:	ldr	r1, [r9, #48]	; 0x30
   1547c:	cmp	r1, #0
   15480:	blt	150cc <__assert_fail@plt+0x3508>
   15484:	mov	r1, r9
   15488:	ldr	r2, [r1, #24]
   1548c:	add	r3, r1, #168	; 0xa8
   15490:	cmp	r2, r3
   15494:	ldrne	r3, [r1, #28]
   15498:	subne	r2, r2, r3
   1549c:	addne	r2, r0, r2
   154a0:	strne	r2, [r1, #24]
   154a4:	str	r0, [r1, #28]
   154a8:	ldr	r2, [r1, #8]
   154ac:	cmp	r2, #0
   154b0:	ldreq	r2, [r1, #4]
   154b4:	ldr	r1, [r2, #48]	; 0x30
   154b8:	cmn	r1, #1
   154bc:	mov	r1, r2
   154c0:	bgt	15488 <__assert_fail@plt+0x38c4>
   154c4:	b	150cc <__assert_fail@plt+0x3508>
   154c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   154cc:	mov	r0, sl
   154d0:	bl	15910 <__assert_fail@plt+0x3d4c>
   154d4:	movw	r1, #26984	; 0x6968
   154d8:	cmp	r0, r1
   154dc:	ble	15508 <__assert_fail@plt+0x3944>
   154e0:	movw	r1, #26985	; 0x6969
   154e4:	cmp	r0, r1
   154e8:	movwne	r1, #16719	; 0x414f
   154ec:	movtne	r1, #21318	; 0x5346
   154f0:	cmpne	r0, r1
   154f4:	beq	14c38 <__assert_fail@plt+0x3074>
   154f8:	movw	r1, #40864	; 0x9fa0
   154fc:	cmp	r0, r1
   15500:	beq	14c38 <__assert_fail@plt+0x3074>
   15504:	b	14c08 <__assert_fail@plt+0x3044>
   15508:	movw	r1, #19778	; 0x4d42
   1550c:	movt	r1, #65363	; 0xff53
   15510:	cmp	r0, r1
   15514:	cmpne	r0, #0
   15518:	beq	14c38 <__assert_fail@plt+0x3074>
   1551c:	b	14c08 <__assert_fail@plt+0x3044>
   15520:	push	{r4, r5, fp, lr}
   15524:	add	fp, sp, #8
   15528:	mov	r5, r0
   1552c:	ldr	r0, [r0, #48]	; 0x30
   15530:	mov	r4, #0
   15534:	tst	r0, #4
   15538:	bne	1557c <__assert_fail@plt+0x39b8>
   1553c:	tst	r0, #512	; 0x200
   15540:	bne	1555c <__assert_fail@plt+0x3998>
   15544:	ldr	r0, [r5, #28]
   15548:	bl	11ae0 <fchdir@plt>
   1554c:	mov	r4, r0
   15550:	cmp	r0, #0
   15554:	movwne	r4, #1
   15558:	b	1557c <__assert_fail@plt+0x39b8>
   1555c:	ldr	r1, [r5, #32]
   15560:	add	r0, r5, #60	; 0x3c
   15564:	bl	16e04 <__assert_fail@plt+0x5240>
   15568:	cmp	r0, #0
   1556c:	blt	15574 <__assert_fail@plt+0x39b0>
   15570:	bl	11b70 <close@plt>
   15574:	mvn	r0, #99	; 0x63
   15578:	str	r0, [r5, #32]
   1557c:	add	r5, r5, #60	; 0x3c
   15580:	b	15588 <__assert_fail@plt+0x39c4>
   15584:	bl	11b70 <close@plt>
   15588:	mov	r0, r5
   1558c:	bl	16dfc <__assert_fail@plt+0x5238>
   15590:	cmp	r0, #0
   15594:	movne	r0, r4
   15598:	popne	{r4, r5, fp, pc}
   1559c:	mov	r0, r5
   155a0:	bl	16e50 <__assert_fail@plt+0x528c>
   155a4:	cmp	r0, #0
   155a8:	bge	15584 <__assert_fail@plt+0x39c0>
   155ac:	b	15588 <__assert_fail@plt+0x39c4>
   155b0:	push	{r4, r5, r6, r7, fp, lr}
   155b4:	add	fp, sp, #16
   155b8:	mov	r6, r0
   155bc:	ldrh	r0, [r0, #48]	; 0x30
   155c0:	mov	r4, r1
   155c4:	movw	r1, #258	; 0x102
   155c8:	tst	r0, r1
   155cc:	beq	15640 <__assert_fail@plt+0x3a7c>
   155d0:	mov	r0, #24
   155d4:	bl	1b064 <lchmod@@Base+0x41bc>
   155d8:	mov	r5, #0
   155dc:	cmp	r0, #0
   155e0:	beq	15660 <__assert_fail@plt+0x3a9c>
   155e4:	mov	r7, r0
   155e8:	ldrd	r0, [r4, #64]	; 0x40
   155ec:	add	r2, r7, #8
   155f0:	stm	r7, {r0, r1}
   155f4:	ldrd	r0, [r4, #160]	; 0xa0
   155f8:	stm	r2, {r0, r1, r4}
   155fc:	mov	r1, r7
   15600:	ldr	r0, [r6, #56]	; 0x38
   15604:	bl	16a44 <__assert_fail@plt+0x4e80>
   15608:	cmp	r0, r7
   1560c:	beq	15634 <__assert_fail@plt+0x3a70>
   15610:	mov	r6, r0
   15614:	mov	r0, r7
   15618:	bl	136a8 <__assert_fail@plt+0x1ae4>
   1561c:	cmp	r6, #0
   15620:	beq	15660 <__assert_fail@plt+0x3a9c>
   15624:	ldr	r0, [r6, #16]
   15628:	mov	r1, #2
   1562c:	strh	r1, [r4, #56]	; 0x38
   15630:	str	r0, [r4]
   15634:	mov	r5, #1
   15638:	mov	r0, r5
   1563c:	pop	{r4, r5, r6, r7, fp, pc}
   15640:	ldr	r0, [r6, #56]	; 0x38
   15644:	add	r1, r4, #64	; 0x40
   15648:	bl	1b20c <lchmod@@Base+0x4364>
   1564c:	cmp	r0, #0
   15650:	mov	r5, #1
   15654:	movne	r0, #2
   15658:	strhne	r0, [r4, #56]	; 0x38
   1565c:	strne	r4, [r4]
   15660:	mov	r0, r5
   15664:	pop	{r4, r5, r6, r7, fp, pc}
   15668:	cmp	r2, #5
   1566c:	movcc	r0, #0
   15670:	strhcc	r2, [r1, #60]	; 0x3c
   15674:	bxcc	lr
   15678:	push	{fp, lr}
   1567c:	mov	fp, sp
   15680:	bl	11a08 <__errno_location@plt>
   15684:	mov	r1, #22
   15688:	str	r1, [r0]
   1568c:	mov	r0, #1
   15690:	pop	{fp, pc}
   15694:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15698:	add	fp, sp, #28
   1569c:	sub	sp, sp, #4
   156a0:	mov	r9, r0
   156a4:	orr	r0, r1, #4096	; 0x1000
   156a8:	cmp	r0, #4096	; 0x1000
   156ac:	bne	156ec <__assert_fail@plt+0x3b28>
   156b0:	ldr	r8, [r9]
   156b4:	mov	r7, r1
   156b8:	bl	11a08 <__errno_location@plt>
   156bc:	mov	r5, #0
   156c0:	mov	sl, r0
   156c4:	str	r5, [r0]
   156c8:	ldrb	r0, [r9, #49]	; 0x31
   156cc:	tst	r0, #32
   156d0:	bne	156fc <__assert_fail@plt+0x3b38>
   156d4:	ldrh	r0, [r8, #56]	; 0x38
   156d8:	cmp	r0, #1
   156dc:	beq	15708 <__assert_fail@plt+0x3b44>
   156e0:	cmp	r0, #9
   156e4:	ldreq	r5, [r8, #8]
   156e8:	b	156fc <__assert_fail@plt+0x3b38>
   156ec:	bl	11a08 <__errno_location@plt>
   156f0:	mov	r1, #22
   156f4:	mov	r5, #0
   156f8:	str	r1, [r0]
   156fc:	mov	r0, r5
   15700:	sub	sp, fp, #28
   15704:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15708:	ldr	r6, [r9, #4]
   1570c:	cmp	r6, #0
   15710:	beq	15740 <__assert_fail@plt+0x3b7c>
   15714:	ldr	r4, [r6, #8]
   15718:	ldr	r1, [r6, #12]
   1571c:	cmp	r1, #0
   15720:	beq	1572c <__assert_fail@plt+0x3b68>
   15724:	mov	r0, r1
   15728:	bl	11ba0 <closedir@plt>
   1572c:	mov	r0, r6
   15730:	bl	136a8 <__assert_fail@plt+0x1ae4>
   15734:	cmp	r4, #0
   15738:	mov	r6, r4
   1573c:	bne	15714 <__assert_fail@plt+0x3b50>
   15740:	cmp	r7, #4096	; 0x1000
   15744:	mov	r4, #1
   15748:	ldreq	r0, [r9, #48]	; 0x30
   1574c:	moveq	r4, #2
   15750:	orreq	r0, r0, #4096	; 0x1000
   15754:	streq	r0, [r9, #48]	; 0x30
   15758:	ldr	r0, [r8, #48]	; 0x30
   1575c:	cmp	r0, #0
   15760:	bne	157ac <__assert_fail@plt+0x3be8>
   15764:	ldr	r0, [r8, #24]
   15768:	ldrb	r0, [r0]
   1576c:	cmp	r0, #47	; 0x2f
   15770:	beq	157ac <__assert_fail@plt+0x3be8>
   15774:	ldr	r0, [r9, #48]	; 0x30
   15778:	tst	r0, #4
   1577c:	bne	157ac <__assert_fail@plt+0x3be8>
   15780:	mov	r1, #32768	; 0x8000
   15784:	tst	r0, #512	; 0x200
   15788:	and	r1, r1, r0, lsl #11
   1578c:	orr	r1, r1, #18688	; 0x4900
   15790:	orr	r2, r1, #524288	; 0x80000
   15794:	bne	157c4 <__assert_fail@plt+0x3c00>
   15798:	movw	r0, #50067	; 0xc393
   1579c:	mov	r1, r2
   157a0:	movt	r0, #1
   157a4:	bl	1b560 <lchmod@@Base+0x46b8>
   157a8:	b	157d4 <__assert_fail@plt+0x3c10>
   157ac:	mov	r0, r9
   157b0:	mov	r1, r4
   157b4:	bl	14a6c <__assert_fail@plt+0x2ea8>
   157b8:	mov	r5, r0
   157bc:	str	r0, [r9, #4]
   157c0:	b	156fc <__assert_fail@plt+0x3b38>
   157c4:	ldr	r0, [r9, #32]
   157c8:	movw	r1, #50067	; 0xc393
   157cc:	movt	r1, #1
   157d0:	bl	17570 <lchmod@@Base+0x6c8>
   157d4:	mov	r8, r0
   157d8:	cmn	r0, #1
   157dc:	ble	15820 <__assert_fail@plt+0x3c5c>
   157e0:	mov	r0, r9
   157e4:	mov	r1, r4
   157e8:	bl	14a6c <__assert_fail@plt+0x2ea8>
   157ec:	str	r0, [r9, #4]
   157f0:	ldrb	r0, [r9, #49]	; 0x31
   157f4:	tst	r0, #2
   157f8:	bne	1582c <__assert_fail@plt+0x3c68>
   157fc:	mov	r0, r8
   15800:	bl	11ae0 <fchdir@plt>
   15804:	cmp	r0, #0
   15808:	beq	1585c <__assert_fail@plt+0x3c98>
   1580c:	ldr	r4, [sl]
   15810:	mov	r0, r8
   15814:	bl	11b70 <close@plt>
   15818:	str	r4, [sl]
   1581c:	b	156fc <__assert_fail@plt+0x3b38>
   15820:	mov	r5, #0
   15824:	str	r5, [r9, #4]
   15828:	b	156fc <__assert_fail@plt+0x3b38>
   1582c:	ldr	r1, [r9, #32]
   15830:	cmp	r1, r8
   15834:	bne	15840 <__assert_fail@plt+0x3c7c>
   15838:	cmn	r1, #100	; 0x64
   1583c:	bne	1586c <__assert_fail@plt+0x3ca8>
   15840:	add	r0, r9, #60	; 0x3c
   15844:	bl	16e04 <__assert_fail@plt+0x5240>
   15848:	cmp	r0, #0
   1584c:	blt	15854 <__assert_fail@plt+0x3c90>
   15850:	bl	11b70 <close@plt>
   15854:	str	r8, [r9, #32]
   15858:	b	15864 <__assert_fail@plt+0x3ca0>
   1585c:	mov	r0, r8
   15860:	bl	11b70 <close@plt>
   15864:	ldr	r5, [r9, #4]
   15868:	b	156fc <__assert_fail@plt+0x3b38>
   1586c:	bl	11b64 <abort@plt>
   15870:	push	{fp, lr}
   15874:	mov	fp, sp
   15878:	mov	r2, r1
   1587c:	ldrd	r0, [r0, #8]
   15880:	mov	r3, #0
   15884:	bl	1b8cc <lchmod@@Base+0x4a24>
   15888:	mov	r0, r2
   1588c:	pop	{fp, pc}
   15890:	push	{r4, r5, fp, lr}
   15894:	add	fp, sp, #8
   15898:	ldrd	r2, [r1, #8]
   1589c:	ldrd	r4, [r0, #8]
   158a0:	eor	r3, r5, r3
   158a4:	eor	r2, r4, r2
   158a8:	orrs	r2, r2, r3
   158ac:	mov	r2, #0
   158b0:	bne	158d0 <__assert_fail@plt+0x3d0c>
   158b4:	ldrd	r2, [r1]
   158b8:	ldrd	r0, [r0]
   158bc:	eor	r1, r1, r3
   158c0:	eor	r0, r0, r2
   158c4:	orr	r0, r0, r1
   158c8:	clz	r0, r0
   158cc:	lsr	r2, r0, #5
   158d0:	mov	r0, r2
   158d4:	pop	{r4, r5, fp, pc}
   158d8:	push	{r4, r5, fp, lr}
   158dc:	add	fp, sp, #8
   158e0:	ldr	r0, [r0]
   158e4:	ldrd	r2, [r0, #160]	; 0xa0
   158e8:	ldr	r0, [r1]
   158ec:	ldrd	r4, [r0, #160]	; 0xa0
   158f0:	mov	r0, #0
   158f4:	subs	r1, r4, r2
   158f8:	sbcs	r1, r5, r3
   158fc:	movwcc	r0, #1
   15900:	subs	r1, r2, r4
   15904:	sbcs	r1, r3, r5
   15908:	subcc	r0, r0, #1
   1590c:	pop	{r4, r5, fp, pc}
   15910:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15914:	add	fp, sp, #24
   15918:	sub	sp, sp, #96	; 0x60
   1591c:	ldr	r7, [r0, #44]	; 0x2c
   15920:	mov	r4, r0
   15924:	mov	r5, #0
   15928:	ldrb	r0, [r7, #49]	; 0x31
   1592c:	tst	r0, #2
   15930:	beq	15a2c <__assert_fail@plt+0x3e68>
   15934:	ldr	r6, [r7, #52]	; 0x34
   15938:	mov	r9, r1
   1593c:	cmp	r6, #0
   15940:	bne	15980 <__assert_fail@plt+0x3dbc>
   15944:	movw	r0, #13992	; 0x36a8
   15948:	movw	r2, #23096	; 0x5a38
   1594c:	movw	r3, #23128	; 0x5a58
   15950:	mov	r1, #0
   15954:	mov	r8, #0
   15958:	movt	r0, #1
   1595c:	movt	r2, #1
   15960:	movt	r3, #1
   15964:	str	r0, [sp]
   15968:	mov	r0, #13
   1596c:	bl	15f00 <__assert_fail@plt+0x433c>
   15970:	mov	r6, r0
   15974:	cmp	r0, #0
   15978:	str	r0, [r7, #52]	; 0x34
   1597c:	beq	159b8 <__assert_fail@plt+0x3df4>
   15980:	ldrd	r0, [r4, #64]	; 0x40
   15984:	str	r1, [sp, #12]
   15988:	str	r0, [sp, #8]
   1598c:	add	r1, sp, #8
   15990:	mov	r0, r6
   15994:	bl	15c50 <__assert_fail@plt+0x408c>
   15998:	cmp	r0, #0
   1599c:	beq	159a8 <__assert_fail@plt+0x3de4>
   159a0:	ldr	r5, [r0, #8]
   159a4:	b	15a2c <__assert_fail@plt+0x3e68>
   159a8:	mov	r8, #1
   159ac:	cmp	r9, #0
   159b0:	bge	159c4 <__assert_fail@plt+0x3e00>
   159b4:	b	15a2c <__assert_fail@plt+0x3e68>
   159b8:	mov	r6, #0
   159bc:	cmp	r9, #0
   159c0:	blt	15a2c <__assert_fail@plt+0x3e68>
   159c4:	add	r1, sp, #8
   159c8:	mov	r0, r9
   159cc:	bl	1178c <fstatfs64@plt>
   159d0:	cmp	r0, #0
   159d4:	bne	15a2c <__assert_fail@plt+0x3e68>
   159d8:	cmp	r8, #0
   159dc:	beq	15a28 <__assert_fail@plt+0x3e64>
   159e0:	mov	r0, #16
   159e4:	bl	1b064 <lchmod@@Base+0x41bc>
   159e8:	cmp	r0, #0
   159ec:	beq	15a28 <__assert_fail@plt+0x3e64>
   159f0:	mov	r5, r0
   159f4:	ldrd	r0, [r4, #64]	; 0x40
   159f8:	ldr	r2, [sp, #8]
   159fc:	stm	r5, {r0, r1, r2}
   15a00:	mov	r0, r6
   15a04:	mov	r1, r5
   15a08:	bl	16a44 <__assert_fail@plt+0x4e80>
   15a0c:	cmp	r0, #0
   15a10:	beq	15a20 <__assert_fail@plt+0x3e5c>
   15a14:	cmp	r0, r5
   15a18:	beq	15a28 <__assert_fail@plt+0x3e64>
   15a1c:	bl	11b64 <abort@plt>
   15a20:	mov	r0, r5
   15a24:	bl	136a8 <__assert_fail@plt+0x1ae4>
   15a28:	ldr	r5, [sp, #8]
   15a2c:	mov	r0, r5
   15a30:	sub	sp, fp, #24
   15a34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15a38:	push	{fp, lr}
   15a3c:	mov	fp, sp
   15a40:	mov	r2, r1
   15a44:	ldrd	r0, [r0]
   15a48:	mov	r3, #0
   15a4c:	bl	1b8cc <lchmod@@Base+0x4a24>
   15a50:	mov	r0, r2
   15a54:	pop	{fp, pc}
   15a58:	ldrd	r2, [r1]
   15a5c:	ldrd	r0, [r0]
   15a60:	eor	r1, r1, r3
   15a64:	eor	r0, r0, r2
   15a68:	orr	r0, r0, r1
   15a6c:	clz	r0, r0
   15a70:	lsr	r0, r0, #5
   15a74:	bx	lr
   15a78:	ldr	r0, [r0, #8]
   15a7c:	bx	lr
   15a80:	ldr	r0, [r0, #12]
   15a84:	bx	lr
   15a88:	ldr	r0, [r0, #16]
   15a8c:	bx	lr
   15a90:	ldm	r0, {r2, ip}
   15a94:	mov	r0, #0
   15a98:	cmp	r2, ip
   15a9c:	bxcs	lr
   15aa0:	mov	r0, #0
   15aa4:	ldr	r1, [r2]
   15aa8:	cmp	r1, #0
   15aac:	beq	15ad0 <__assert_fail@plt+0x3f0c>
   15ab0:	mov	r3, #0
   15ab4:	mov	r1, r2
   15ab8:	ldr	r1, [r1, #4]
   15abc:	add	r3, r3, #1
   15ac0:	cmp	r1, #0
   15ac4:	bne	15ab8 <__assert_fail@plt+0x3ef4>
   15ac8:	cmp	r3, r0
   15acc:	movhi	r0, r3
   15ad0:	add	r2, r2, #8
   15ad4:	cmp	r2, ip
   15ad8:	bcc	15aa4 <__assert_fail@plt+0x3ee0>
   15adc:	bx	lr
   15ae0:	push	{fp, lr}
   15ae4:	mov	fp, sp
   15ae8:	ldm	r0, {r3, ip}
   15aec:	mov	lr, #0
   15af0:	mov	r1, #0
   15af4:	cmp	r3, ip
   15af8:	bcs	15b34 <__assert_fail@plt+0x3f70>
   15afc:	mov	r1, #0
   15b00:	mov	lr, #0
   15b04:	ldr	r2, [r3]
   15b08:	cmp	r2, #0
   15b0c:	beq	15b28 <__assert_fail@plt+0x3f64>
   15b10:	mov	r2, r3
   15b14:	ldr	r2, [r2, #4]
   15b18:	add	r1, r1, #1
   15b1c:	cmp	r2, #0
   15b20:	bne	15b14 <__assert_fail@plt+0x3f50>
   15b24:	add	lr, lr, #1
   15b28:	add	r3, r3, #8
   15b2c:	cmp	r3, ip
   15b30:	bcc	15b04 <__assert_fail@plt+0x3f40>
   15b34:	ldr	r2, [r0, #12]
   15b38:	cmp	lr, r2
   15b3c:	bne	15b54 <__assert_fail@plt+0x3f90>
   15b40:	ldr	r2, [r0, #16]
   15b44:	mov	r0, #1
   15b48:	cmp	r1, r2
   15b4c:	movne	r0, #0
   15b50:	pop	{fp, pc}
   15b54:	mov	r0, #0
   15b58:	pop	{fp, pc}
   15b5c:	nop	{0}
   15b60:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15b64:	add	fp, sp, #24
   15b68:	sub	sp, sp, #8
   15b6c:	ldr	r6, [r0]
   15b70:	ldmib	r0, {r2, r7, r8}
   15b74:	ldr	r3, [r0, #16]
   15b78:	mov	r4, r1
   15b7c:	mov	r5, #0
   15b80:	cmp	r6, r2
   15b84:	bcs	15bc4 <__assert_fail@plt+0x4000>
   15b88:	mov	r5, #0
   15b8c:	ldr	r0, [r6]
   15b90:	cmp	r0, #0
   15b94:	beq	15bb8 <__assert_fail@plt+0x3ff4>
   15b98:	mov	r0, #0
   15b9c:	mov	r1, r6
   15ba0:	ldr	r1, [r1, #4]
   15ba4:	add	r0, r0, #1
   15ba8:	cmp	r1, #0
   15bac:	bne	15ba0 <__assert_fail@plt+0x3fdc>
   15bb0:	cmp	r0, r5
   15bb4:	movhi	r5, r0
   15bb8:	add	r6, r6, #8
   15bbc:	cmp	r6, r2
   15bc0:	bcc	15b8c <__assert_fail@plt+0x3fc8>
   15bc4:	movw	r2, #50128	; 0xc3d0
   15bc8:	mov	r0, r4
   15bcc:	mov	r1, #1
   15bd0:	movt	r2, #1
   15bd4:	bl	11a50 <__fprintf_chk@plt>
   15bd8:	movw	r2, #50152	; 0xc3e8
   15bdc:	mov	r0, r4
   15be0:	mov	r1, #1
   15be4:	mov	r3, r7
   15be8:	movt	r2, #1
   15bec:	bl	11a50 <__fprintf_chk@plt>
   15bf0:	vldr	d16, [pc, #80]	; 15c48 <__assert_fail@plt+0x4084>
   15bf4:	vmov	s0, r8
   15bf8:	movw	r2, #50176	; 0xc400
   15bfc:	mov	r0, r4
   15c00:	mov	r1, #1
   15c04:	mov	r3, r8
   15c08:	vcvt.f64.u32	d17, s0
   15c0c:	vmov	s0, r7
   15c10:	movt	r2, #1
   15c14:	vcvt.f64.u32	d18, s0
   15c18:	vmul.f64	d16, d17, d16
   15c1c:	vdiv.f64	d16, d16, d18
   15c20:	vstr	d16, [sp]
   15c24:	bl	11a50 <__fprintf_chk@plt>
   15c28:	movw	r2, #50209	; 0xc421
   15c2c:	mov	r0, r4
   15c30:	mov	r1, #1
   15c34:	mov	r3, r5
   15c38:	movt	r2, #1
   15c3c:	sub	sp, fp, #24
   15c40:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15c44:	b	11a50 <__fprintf_chk@plt>
   15c48:	andeq	r0, r0, r0
   15c4c:	subsmi	r0, r9, r0
   15c50:	push	{r4, r5, r6, r7, fp, lr}
   15c54:	add	fp, sp, #16
   15c58:	mov	r4, r1
   15c5c:	ldr	r1, [r0, #8]
   15c60:	ldr	r2, [r0, #24]
   15c64:	mov	r5, r0
   15c68:	mov	r0, r4
   15c6c:	blx	r2
   15c70:	ldr	r1, [r5, #8]
   15c74:	cmp	r0, r1
   15c78:	bcs	15ce4 <__assert_fail@plt+0x4120>
   15c7c:	ldr	r7, [r5]
   15c80:	mov	r6, #0
   15c84:	ldr	r1, [r7, r0, lsl #3]!
   15c88:	cmp	r1, #0
   15c8c:	cmpne	r7, #0
   15c90:	bne	15ca0 <__assert_fail@plt+0x40dc>
   15c94:	mov	r0, r6
   15c98:	pop	{r4, r5, r6, r7, fp, pc}
   15c9c:	ldr	r1, [r7]
   15ca0:	cmp	r1, r4
   15ca4:	beq	15ccc <__assert_fail@plt+0x4108>
   15ca8:	ldr	r2, [r5, #28]
   15cac:	mov	r0, r4
   15cb0:	blx	r2
   15cb4:	cmp	r0, #0
   15cb8:	bne	15cd8 <__assert_fail@plt+0x4114>
   15cbc:	ldr	r7, [r7, #4]
   15cc0:	cmp	r7, #0
   15cc4:	bne	15c9c <__assert_fail@plt+0x40d8>
   15cc8:	b	15c94 <__assert_fail@plt+0x40d0>
   15ccc:	mov	r6, r4
   15cd0:	mov	r0, r6
   15cd4:	pop	{r4, r5, r6, r7, fp, pc}
   15cd8:	ldr	r6, [r7]
   15cdc:	mov	r0, r6
   15ce0:	pop	{r4, r5, r6, r7, fp, pc}
   15ce4:	bl	11b64 <abort@plt>
   15ce8:	ldr	r1, [r0, #16]
   15cec:	cmp	r1, #0
   15cf0:	moveq	r0, #0
   15cf4:	bxeq	lr
   15cf8:	ldm	r0, {r1, r2}
   15cfc:	cmp	r1, r2
   15d00:	bcs	15d18 <__assert_fail@plt+0x4154>
   15d04:	ldr	r0, [r1], #8
   15d08:	cmp	r0, #0
   15d0c:	bxne	lr
   15d10:	cmp	r1, r2
   15d14:	bcc	15d04 <__assert_fail@plt+0x4140>
   15d18:	push	{fp, lr}
   15d1c:	mov	fp, sp
   15d20:	bl	11b64 <abort@plt>
   15d24:	push	{r4, r5, fp, lr}
   15d28:	add	fp, sp, #8
   15d2c:	mov	r5, r1
   15d30:	ldr	r1, [r0, #8]
   15d34:	ldr	r2, [r0, #24]
   15d38:	mov	r4, r0
   15d3c:	mov	r0, r5
   15d40:	blx	r2
   15d44:	ldr	r1, [r4, #8]
   15d48:	cmp	r0, r1
   15d4c:	bcs	15da8 <__assert_fail@plt+0x41e4>
   15d50:	ldr	r1, [r4]
   15d54:	add	r2, r1, r0, lsl #3
   15d58:	ldr	r3, [r2]
   15d5c:	ldr	r2, [r2, #4]
   15d60:	cmp	r3, r5
   15d64:	beq	15d74 <__assert_fail@plt+0x41b0>
   15d68:	cmp	r2, #0
   15d6c:	bne	15d58 <__assert_fail@plt+0x4194>
   15d70:	b	15d80 <__assert_fail@plt+0x41bc>
   15d74:	cmp	r2, #0
   15d78:	ldrne	r0, [r2]
   15d7c:	popne	{r4, r5, fp, pc}
   15d80:	ldr	r2, [r4, #4]
   15d84:	add	r0, r1, r0, lsl #3
   15d88:	add	r1, r0, #8
   15d8c:	cmp	r1, r2
   15d90:	movcs	r0, #0
   15d94:	popcs	{r4, r5, fp, pc}
   15d98:	ldr	r0, [r1], #8
   15d9c:	cmp	r0, #0
   15da0:	popne	{r4, r5, fp, pc}
   15da4:	b	15d8c <__assert_fail@plt+0x41c8>
   15da8:	bl	11b64 <abort@plt>
   15dac:	push	{r4, r5, fp, lr}
   15db0:	add	fp, sp, #8
   15db4:	ldm	r0, {r5, lr}
   15db8:	mov	ip, r0
   15dbc:	mov	r0, #0
   15dc0:	cmp	r5, lr
   15dc4:	bcs	15e10 <__assert_fail@plt+0x424c>
   15dc8:	mov	r0, #0
   15dcc:	ldr	r3, [r5]
   15dd0:	cmp	r3, #0
   15dd4:	cmpne	r5, #0
   15dd8:	beq	15e04 <__assert_fail@plt+0x4240>
   15ddc:	mov	r3, r5
   15de0:	cmp	r0, r2
   15de4:	popcs	{r4, r5, fp, pc}
   15de8:	ldr	r4, [r3]
   15dec:	str	r4, [r1, r0, lsl #2]
   15df0:	add	r0, r0, #1
   15df4:	ldr	r3, [r3, #4]
   15df8:	cmp	r3, #0
   15dfc:	bne	15de0 <__assert_fail@plt+0x421c>
   15e00:	ldr	lr, [ip, #4]
   15e04:	add	r5, r5, #8
   15e08:	cmp	r5, lr
   15e0c:	bcc	15dcc <__assert_fail@plt+0x4208>
   15e10:	pop	{r4, r5, fp, pc}
   15e14:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15e18:	add	fp, sp, #24
   15e1c:	mov	r5, r1
   15e20:	ldr	r4, [r0]
   15e24:	ldr	r1, [r0, #4]
   15e28:	mov	r6, #0
   15e2c:	cmp	r4, r1
   15e30:	bcs	15ea4 <__assert_fail@plt+0x42e0>
   15e34:	mov	r9, r2
   15e38:	mov	r8, r0
   15e3c:	mov	r6, #0
   15e40:	b	15e88 <__assert_fail@plt+0x42c4>
   15e44:	mov	r1, r9
   15e48:	blx	r5
   15e4c:	cmp	r0, #0
   15e50:	beq	15ea4 <__assert_fail@plt+0x42e0>
   15e54:	mov	r7, r4
   15e58:	ldr	r7, [r7, #4]
   15e5c:	add	r6, r6, #1
   15e60:	cmp	r7, #0
   15e64:	beq	15e80 <__assert_fail@plt+0x42bc>
   15e68:	ldr	r0, [r7]
   15e6c:	mov	r1, r9
   15e70:	blx	r5
   15e74:	cmp	r0, #0
   15e78:	bne	15e58 <__assert_fail@plt+0x4294>
   15e7c:	b	15ea4 <__assert_fail@plt+0x42e0>
   15e80:	ldr	r1, [r8, #4]
   15e84:	b	15e98 <__assert_fail@plt+0x42d4>
   15e88:	ldr	r0, [r4]
   15e8c:	cmp	r0, #0
   15e90:	cmpne	r4, #0
   15e94:	bne	15e44 <__assert_fail@plt+0x4280>
   15e98:	add	r4, r4, #8
   15e9c:	cmp	r4, r1
   15ea0:	bcc	15e88 <__assert_fail@plt+0x42c4>
   15ea4:	mov	r0, r6
   15ea8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15eac:	ldrb	r2, [r0]
   15eb0:	cmp	r2, #0
   15eb4:	moveq	r0, #0
   15eb8:	bxeq	lr
   15ebc:	add	r3, r0, #1
   15ec0:	mov	r0, #0
   15ec4:	rsb	r0, r0, r0, lsl #5
   15ec8:	uxtab	r0, r0, r2
   15ecc:	udiv	r2, r0, r1
   15ed0:	mls	r0, r2, r1, r0
   15ed4:	ldrb	r2, [r3], #1
   15ed8:	cmp	r2, #0
   15edc:	bne	15ec4 <__assert_fail@plt+0x4300>
   15ee0:	bx	lr
   15ee4:	movw	r1, #50240	; 0xc440
   15ee8:	movt	r1, #1
   15eec:	vld1.32	{d16-d17}, [r1]!
   15ef0:	ldr	r1, [r1]
   15ef4:	vst1.32	{d16-d17}, [r0]!
   15ef8:	str	r1, [r0]
   15efc:	bx	lr
   15f00:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15f04:	add	fp, sp, #24
   15f08:	movw	r9, #24872	; 0x6128
   15f0c:	movw	r5, #24852	; 0x6114
   15f10:	cmp	r3, #0
   15f14:	mov	r6, r0
   15f18:	mov	r0, #40	; 0x28
   15f1c:	mov	r7, r1
   15f20:	movt	r9, #1
   15f24:	movt	r5, #1
   15f28:	movne	r9, r3
   15f2c:	cmp	r2, #0
   15f30:	movne	r5, r2
   15f34:	bl	1b064 <lchmod@@Base+0x41bc>
   15f38:	mov	r8, #0
   15f3c:	cmp	r0, #0
   15f40:	beq	160fc <__assert_fail@plt+0x4538>
   15f44:	mov	r4, r0
   15f48:	movw	r0, #50240	; 0xc440
   15f4c:	cmp	r7, #0
   15f50:	movt	r0, #1
   15f54:	moveq	r7, r0
   15f58:	cmp	r7, r0
   15f5c:	str	r7, [r4, #20]
   15f60:	beq	15fdc <__assert_fail@plt+0x4418>
   15f64:	vldr	s2, [pc, #408]	; 16104 <__assert_fail@plt+0x4540>
   15f68:	vldr	s0, [r7, #8]
   15f6c:	vcmpe.f32	s0, s2
   15f70:	vmrs	APSR_nzcv, fpscr
   15f74:	ble	16088 <__assert_fail@plt+0x44c4>
   15f78:	vldr	s4, [pc, #392]	; 16108 <__assert_fail@plt+0x4544>
   15f7c:	vcmpe.f32	s0, s4
   15f80:	vmrs	APSR_nzcv, fpscr
   15f84:	bpl	16088 <__assert_fail@plt+0x44c4>
   15f88:	vldr	s4, [pc, #380]	; 1610c <__assert_fail@plt+0x4548>
   15f8c:	vldr	s6, [r7, #12]
   15f90:	vcmpe.f32	s6, s4
   15f94:	vmrs	APSR_nzcv, fpscr
   15f98:	ble	16088 <__assert_fail@plt+0x44c4>
   15f9c:	vldr	s4, [r7]
   15fa0:	vcmpe.f32	s4, #0.0
   15fa4:	vmrs	APSR_nzcv, fpscr
   15fa8:	blt	16088 <__assert_fail@plt+0x44c4>
   15fac:	vadd.f32	s2, s4, s2
   15fb0:	vcmpe.f32	s2, s0
   15fb4:	vmrs	APSR_nzcv, fpscr
   15fb8:	bpl	16088 <__assert_fail@plt+0x44c4>
   15fbc:	vldr	s0, [r7, #4]
   15fc0:	vmov.f32	s4, #112	; 0x3f800000  1.0
   15fc4:	vcmpe.f32	s0, s4
   15fc8:	vmrs	APSR_nzcv, fpscr
   15fcc:	bhi	16088 <__assert_fail@plt+0x44c4>
   15fd0:	vcmpe.f32	s2, s0
   15fd4:	vmrs	APSR_nzcv, fpscr
   15fd8:	bpl	16088 <__assert_fail@plt+0x44c4>
   15fdc:	ldrb	r0, [r7, #16]
   15fe0:	cmp	r0, #0
   15fe4:	bne	16010 <__assert_fail@plt+0x444c>
   15fe8:	vldr	s0, [r7, #8]
   15fec:	vldr	s4, [pc, #284]	; 16110 <__assert_fail@plt+0x454c>
   15ff0:	vmov	s2, r6
   15ff4:	vcvt.f32.u32	s2, s2
   15ff8:	vdiv.f32	s2, s2, s0
   15ffc:	vcmpe.f32	s2, s4
   16000:	vcvt.u32.f32	s0, s2
   16004:	vmrs	APSR_nzcv, fpscr
   16008:	bge	16098 <__assert_fail@plt+0x44d4>
   1600c:	vmov	r6, s0
   16010:	cmp	r6, #10
   16014:	movls	r6, #10
   16018:	orr	r0, r6, #1
   1601c:	cmn	r0, #1
   16020:	beq	16098 <__assert_fail@plt+0x44d4>
   16024:	ldr	r6, [fp, #8]
   16028:	mov	r1, #3
   1602c:	cmp	r0, #10
   16030:	bcc	16068 <__assert_fail@plt+0x44a4>
   16034:	mov	r1, #3
   16038:	mov	r3, #9
   1603c:	mov	r2, #12
   16040:	udiv	r7, r0, r1
   16044:	mls	r7, r7, r1, r0
   16048:	cmp	r7, #0
   1604c:	beq	16068 <__assert_fail@plt+0x44a4>
   16050:	add	r3, r3, r2
   16054:	add	r2, r2, #8
   16058:	add	r1, r1, #2
   1605c:	add	r3, r3, #4
   16060:	cmp	r3, r0
   16064:	bcc	16040 <__assert_fail@plt+0x447c>
   16068:	udiv	r2, r0, r1
   1606c:	mls	r1, r2, r1, r0
   16070:	cmp	r1, #0
   16074:	bne	16090 <__assert_fail@plt+0x44cc>
   16078:	add	r0, r0, #2
   1607c:	cmn	r0, #1
   16080:	bne	16028 <__assert_fail@plt+0x4464>
   16084:	b	16098 <__assert_fail@plt+0x44d4>
   16088:	str	r0, [r4, #20]
   1608c:	b	160a0 <__assert_fail@plt+0x44dc>
   16090:	cmp	r0, #536870912	; 0x20000000
   16094:	bcc	160b0 <__assert_fail@plt+0x44ec>
   16098:	mov	r0, #0
   1609c:	str	r0, [r4, #8]
   160a0:	mov	r0, r4
   160a4:	bl	136a8 <__assert_fail@plt+0x1ae4>
   160a8:	mov	r0, r8
   160ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   160b0:	cmp	r0, #0
   160b4:	str	r0, [r4, #8]
   160b8:	beq	160a0 <__assert_fail@plt+0x44dc>
   160bc:	mov	r1, #8
   160c0:	bl	1b010 <lchmod@@Base+0x4168>
   160c4:	cmp	r0, #0
   160c8:	str	r0, [r4]
   160cc:	beq	160a0 <__assert_fail@plt+0x44dc>
   160d0:	mov	r1, #0
   160d4:	mov	r8, r4
   160d8:	str	r1, [r4, #12]
   160dc:	str	r1, [r4, #16]
   160e0:	str	r5, [r4, #24]
   160e4:	str	r9, [r4, #28]
   160e8:	str	r6, [r4, #32]
   160ec:	str	r1, [r4, #36]	; 0x24
   160f0:	ldr	r1, [r4, #8]
   160f4:	add	r0, r0, r1, lsl #3
   160f8:	str	r0, [r4, #4]
   160fc:	mov	r0, r8
   16100:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16104:	stclcc	12, cr12, [ip, #820]	; 0x334
   16108:	svccc	0x00666666
   1610c:	svccc	0x008ccccd
   16110:	svcmi	0x00800000
   16114:	ror	r2, r0, #3
   16118:	udiv	r2, r2, r1
   1611c:	mul	r1, r2, r1
   16120:	rsb	r0, r1, r0, ror #3
   16124:	bx	lr
   16128:	sub	r0, r0, r1
   1612c:	clz	r0, r0
   16130:	lsr	r0, r0, #5
   16134:	bx	lr
   16138:	push	{r4, r5, r6, r7, fp, lr}
   1613c:	add	fp, sp, #16
   16140:	mov	r4, r0
   16144:	ldr	r5, [r0]
   16148:	ldr	r0, [r0, #4]
   1614c:	cmp	r5, r0
   16150:	bcs	161e8 <__assert_fail@plt+0x4624>
   16154:	mov	r6, #0
   16158:	ldr	r1, [r5]
   1615c:	cmp	r1, #0
   16160:	beq	161dc <__assert_fail@plt+0x4618>
   16164:	ldr	r1, [r4, #32]
   16168:	ldr	r7, [r5, #4]
   1616c:	cmp	r1, #0
   16170:	mov	r0, r1
   16174:	movwne	r0, #1
   16178:	cmp	r7, #0
   1617c:	beq	161c0 <__assert_fail@plt+0x45fc>
   16180:	tst	r0, #1
   16184:	beq	16194 <__assert_fail@plt+0x45d0>
   16188:	ldr	r0, [r7]
   1618c:	blx	r1
   16190:	ldr	r1, [r4, #32]
   16194:	str	r6, [r7]
   16198:	cmp	r1, #0
   1619c:	ldr	r0, [r4, #36]	; 0x24
   161a0:	ldr	r2, [r7, #4]
   161a4:	str	r0, [r7, #4]
   161a8:	mov	r0, r1
   161ac:	str	r7, [r4, #36]	; 0x24
   161b0:	mov	r7, r2
   161b4:	movwne	r0, #1
   161b8:	cmp	r2, #0
   161bc:	bne	16180 <__assert_fail@plt+0x45bc>
   161c0:	cmp	r0, #0
   161c4:	beq	161d0 <__assert_fail@plt+0x460c>
   161c8:	ldr	r0, [r5]
   161cc:	blx	r1
   161d0:	str	r6, [r5]
   161d4:	str	r6, [r5, #4]
   161d8:	ldr	r0, [r4, #4]
   161dc:	add	r5, r5, #8
   161e0:	cmp	r5, r0
   161e4:	bcc	16158 <__assert_fail@plt+0x4594>
   161e8:	mov	r0, #0
   161ec:	str	r0, [r4, #12]
   161f0:	str	r0, [r4, #16]
   161f4:	pop	{r4, r5, r6, r7, fp, pc}
   161f8:	push	{r4, r5, r6, sl, fp, lr}
   161fc:	add	fp, sp, #16
   16200:	mov	r4, r0
   16204:	ldr	r0, [r0, #32]
   16208:	cmp	r0, #0
   1620c:	ldrne	r0, [r4, #16]
   16210:	cmpne	r0, #0
   16214:	beq	1627c <__assert_fail@plt+0x46b8>
   16218:	ldr	r5, [r4]
   1621c:	ldr	r1, [r4, #4]
   16220:	cmp	r5, r1
   16224:	bcc	16238 <__assert_fail@plt+0x4674>
   16228:	b	1627c <__assert_fail@plt+0x46b8>
   1622c:	add	r5, r5, #8
   16230:	cmp	r5, r1
   16234:	bcs	1627c <__assert_fail@plt+0x46b8>
   16238:	ldr	r0, [r5]
   1623c:	cmp	r0, #0
   16240:	cmpne	r5, #0
   16244:	beq	1622c <__assert_fail@plt+0x4668>
   16248:	ldr	r1, [r4, #32]
   1624c:	blx	r1
   16250:	ldr	r6, [r5, #4]
   16254:	cmp	r6, #0
   16258:	beq	16274 <__assert_fail@plt+0x46b0>
   1625c:	ldr	r1, [r4, #32]
   16260:	ldr	r0, [r6]
   16264:	blx	r1
   16268:	ldr	r6, [r6, #4]
   1626c:	cmp	r6, #0
   16270:	bne	1625c <__assert_fail@plt+0x4698>
   16274:	ldr	r1, [r4, #4]
   16278:	b	1622c <__assert_fail@plt+0x4668>
   1627c:	ldr	r5, [r4]
   16280:	ldr	r1, [r4, #4]
   16284:	cmp	r5, r1
   16288:	bcc	1629c <__assert_fail@plt+0x46d8>
   1628c:	b	162c4 <__assert_fail@plt+0x4700>
   16290:	add	r5, r5, #8
   16294:	cmp	r5, r1
   16298:	bcs	162c4 <__assert_fail@plt+0x4700>
   1629c:	ldr	r0, [r5, #4]
   162a0:	cmp	r0, #0
   162a4:	beq	16290 <__assert_fail@plt+0x46cc>
   162a8:	ldr	r6, [r0, #4]
   162ac:	bl	136a8 <__assert_fail@plt+0x1ae4>
   162b0:	cmp	r6, #0
   162b4:	mov	r0, r6
   162b8:	bne	162a8 <__assert_fail@plt+0x46e4>
   162bc:	ldr	r1, [r4, #4]
   162c0:	b	16290 <__assert_fail@plt+0x46cc>
   162c4:	ldr	r0, [r4, #36]	; 0x24
   162c8:	cmp	r0, #0
   162cc:	beq	162e4 <__assert_fail@plt+0x4720>
   162d0:	ldr	r5, [r0, #4]
   162d4:	bl	136a8 <__assert_fail@plt+0x1ae4>
   162d8:	cmp	r5, #0
   162dc:	mov	r0, r5
   162e0:	bne	162d0 <__assert_fail@plt+0x470c>
   162e4:	ldr	r0, [r4]
   162e8:	bl	136a8 <__assert_fail@plt+0x1ae4>
   162ec:	mov	r0, r4
   162f0:	pop	{r4, r5, r6, sl, fp, lr}
   162f4:	b	136a8 <__assert_fail@plt+0x1ae4>
   162f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   162fc:	add	fp, sp, #28
   16300:	sub	sp, sp, #44	; 0x2c
   16304:	mov	r7, r0
   16308:	mov	r4, r0
   1630c:	ldr	r0, [r7, #20]!
   16310:	ldrb	r2, [r0, #16]
   16314:	cmp	r2, #0
   16318:	bne	16348 <__assert_fail@plt+0x4784>
   1631c:	vldr	s0, [r0, #8]
   16320:	vldr	s4, [pc, #560]	; 16558 <__assert_fail@plt+0x4994>
   16324:	vmov	s2, r1
   16328:	mov	r5, #0
   1632c:	vcvt.f32.u32	s2, s2
   16330:	vdiv.f32	s2, s2, s0
   16334:	vcmpe.f32	s2, s4
   16338:	vcvt.u32.f32	s0, s2
   1633c:	vmrs	APSR_nzcv, fpscr
   16340:	bge	16548 <__assert_fail@plt+0x4984>
   16344:	vmov	r1, s0
   16348:	cmp	r1, #10
   1634c:	mov	r5, #0
   16350:	movls	r1, #10
   16354:	orr	r6, r1, #1
   16358:	cmn	r6, #1
   1635c:	bne	16370 <__assert_fail@plt+0x47ac>
   16360:	b	16548 <__assert_fail@plt+0x4984>
   16364:	add	r6, r6, #2
   16368:	cmn	r6, #1
   1636c:	beq	16548 <__assert_fail@plt+0x4984>
   16370:	mov	r0, #3
   16374:	cmp	r6, #10
   16378:	bcc	163b0 <__assert_fail@plt+0x47ec>
   1637c:	mov	r0, #3
   16380:	mov	r2, #9
   16384:	mov	r1, #12
   16388:	udiv	r3, r6, r0
   1638c:	mls	r3, r3, r0, r6
   16390:	cmp	r3, #0
   16394:	beq	163b0 <__assert_fail@plt+0x47ec>
   16398:	add	r2, r2, r1
   1639c:	add	r1, r1, #8
   163a0:	add	r0, r0, #2
   163a4:	add	r2, r2, #4
   163a8:	cmp	r2, r6
   163ac:	bcc	16388 <__assert_fail@plt+0x47c4>
   163b0:	udiv	r1, r6, r0
   163b4:	mls	r0, r1, r0, r6
   163b8:	cmp	r0, #0
   163bc:	beq	16364 <__assert_fail@plt+0x47a0>
   163c0:	sub	r0, r6, #1
   163c4:	cmn	r0, #-536870910	; 0xe0000002
   163c8:	bhi	16548 <__assert_fail@plt+0x4984>
   163cc:	ldr	r0, [r4, #8]
   163d0:	cmp	r6, r0
   163d4:	bne	163e0 <__assert_fail@plt+0x481c>
   163d8:	mov	r5, #1
   163dc:	b	16548 <__assert_fail@plt+0x4984>
   163e0:	mov	r0, r6
   163e4:	mov	r1, #8
   163e8:	bl	1b010 <lchmod@@Base+0x4168>
   163ec:	cmp	r0, #0
   163f0:	str	r0, [sp, #4]
   163f4:	beq	16548 <__assert_fail@plt+0x4984>
   163f8:	mov	r1, #0
   163fc:	add	r0, r0, r6, lsl #3
   16400:	str	r6, [sp, #12]
   16404:	add	r5, sp, #4
   16408:	mov	sl, r4
   1640c:	mov	r2, #0
   16410:	str	r1, [sp, #16]
   16414:	str	r1, [sp, #20]
   16418:	str	r0, [sp, #8]
   1641c:	add	r0, r5, #20
   16420:	mov	r1, r4
   16424:	vld1.32	{d16-d17}, [r7]
   16428:	vst1.32	{d16-d17}, [r0]
   1642c:	ldr	r0, [sl, #36]!	; 0x24
   16430:	str	r0, [sp, #40]	; 0x28
   16434:	mov	r0, r5
   16438:	bl	1655c <__assert_fail@plt+0x4998>
   1643c:	cmp	r0, #0
   16440:	beq	16468 <__assert_fail@plt+0x48a4>
   16444:	ldr	r0, [r4]
   16448:	bl	136a8 <__assert_fail@plt+0x1ae4>
   1644c:	mov	r0, #36	; 0x24
   16450:	vld1.32	{d16-d17}, [r5], r0
   16454:	vst1.32	{d16-d17}, [r4], r0
   16458:	ldr	r0, [r5]
   1645c:	mov	r5, #1
   16460:	str	r0, [r4]
   16464:	b	16548 <__assert_fail@plt+0x4984>
   16468:	ldr	r0, [sp, #40]	; 0x28
   1646c:	str	r0, [sl]
   16470:	ldr	r0, [sp, #8]
   16474:	ldr	r8, [sp, #4]
   16478:	cmp	r8, r0
   1647c:	str	r0, [sp]
   16480:	bcs	16524 <__assert_fail@plt+0x4960>
   16484:	mov	r9, #0
   16488:	ldr	r0, [r8]
   1648c:	cmp	r0, #0
   16490:	beq	16514 <__assert_fail@plt+0x4950>
   16494:	ldr	r6, [r8, #4]
   16498:	cmp	r6, #0
   1649c:	beq	16510 <__assert_fail@plt+0x494c>
   164a0:	ldr	r1, [r4, #8]
   164a4:	ldr	r5, [r6]
   164a8:	ldr	r2, [r4, #24]
   164ac:	mov	r0, r5
   164b0:	blx	r2
   164b4:	ldr	r1, [r4, #8]
   164b8:	cmp	r0, r1
   164bc:	bcs	16554 <__assert_fail@plt+0x4990>
   164c0:	ldr	r3, [r4]
   164c4:	ldr	r2, [r6, #4]
   164c8:	ldr	r7, [r3, r0, lsl #3]
   164cc:	cmp	r7, #0
   164d0:	beq	164e0 <__assert_fail@plt+0x491c>
   164d4:	add	r0, r3, r0, lsl #3
   164d8:	add	r0, r0, #4
   164dc:	b	164f8 <__assert_fail@plt+0x4934>
   164e0:	str	r5, [r3, r0, lsl #3]
   164e4:	ldr	r0, [r4, #12]
   164e8:	add	r0, r0, #1
   164ec:	str	r0, [r4, #12]
   164f0:	mov	r0, sl
   164f4:	str	r9, [r6]
   164f8:	ldr	r3, [r0]
   164fc:	cmp	r2, #0
   16500:	str	r3, [r6, #4]
   16504:	str	r6, [r0]
   16508:	mov	r6, r2
   1650c:	bne	164a4 <__assert_fail@plt+0x48e0>
   16510:	str	r9, [r8, #4]
   16514:	ldr	r0, [sp]
   16518:	add	r8, r8, #8
   1651c:	cmp	r8, r0
   16520:	bcc	16488 <__assert_fail@plt+0x48c4>
   16524:	add	r1, sp, #4
   16528:	mov	r0, r4
   1652c:	mov	r2, #0
   16530:	mov	r5, #0
   16534:	bl	1655c <__assert_fail@plt+0x4998>
   16538:	cmp	r0, #0
   1653c:	beq	16554 <__assert_fail@plt+0x4990>
   16540:	ldr	r0, [sp, #4]
   16544:	bl	136a8 <__assert_fail@plt+0x1ae4>
   16548:	mov	r0, r5
   1654c:	sub	sp, fp, #28
   16550:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16554:	bl	11b64 <abort@plt>
   16558:	svcmi	0x00800000
   1655c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16560:	add	fp, sp, #28
   16564:	sub	sp, sp, #12
   16568:	ldr	sl, [r1]
   1656c:	str	r1, [sp, #8]
   16570:	ldr	r1, [r1, #4]
   16574:	mov	r7, r0
   16578:	mov	r0, #1
   1657c:	str	r2, [sp, #4]
   16580:	cmp	sl, r1
   16584:	bcs	166e0 <__assert_fail@plt+0x4b1c>
   16588:	add	r8, r7, #36	; 0x24
   1658c:	mov	r9, #0
   16590:	ldr	r4, [sl]
   16594:	cmp	r4, #0
   16598:	beq	166c8 <__assert_fail@plt+0x4b04>
   1659c:	ldr	r5, [sl, #4]
   165a0:	cmp	r5, #0
   165a4:	beq	1661c <__assert_fail@plt+0x4a58>
   165a8:	ldr	r1, [r7, #8]
   165ac:	ldr	r4, [r5]
   165b0:	ldr	r2, [r7, #24]
   165b4:	mov	r0, r4
   165b8:	blx	r2
   165bc:	ldr	r1, [r7, #8]
   165c0:	cmp	r0, r1
   165c4:	bcs	166f4 <__assert_fail@plt+0x4b30>
   165c8:	ldr	r3, [r7]
   165cc:	ldr	r2, [r5, #4]
   165d0:	ldr	r6, [r3, r0, lsl #3]
   165d4:	cmp	r6, #0
   165d8:	beq	165e8 <__assert_fail@plt+0x4a24>
   165dc:	add	r0, r3, r0, lsl #3
   165e0:	add	r0, r0, #4
   165e4:	b	16600 <__assert_fail@plt+0x4a3c>
   165e8:	str	r4, [r3, r0, lsl #3]
   165ec:	ldr	r0, [r7, #12]
   165f0:	add	r0, r0, #1
   165f4:	str	r0, [r7, #12]
   165f8:	mov	r0, r8
   165fc:	str	r9, [r5]
   16600:	ldr	r3, [r0]
   16604:	cmp	r2, #0
   16608:	str	r3, [r5, #4]
   1660c:	str	r5, [r0]
   16610:	mov	r5, r2
   16614:	bne	165ac <__assert_fail@plt+0x49e8>
   16618:	ldr	r4, [sl]
   1661c:	ldr	r0, [sp, #4]
   16620:	str	r9, [sl, #4]
   16624:	cmp	r0, #0
   16628:	bne	166c8 <__assert_fail@plt+0x4b04>
   1662c:	ldr	r1, [r7, #8]
   16630:	ldr	r2, [r7, #24]
   16634:	mov	r0, r4
   16638:	blx	r2
   1663c:	mov	r5, r0
   16640:	ldr	r0, [r7, #8]
   16644:	cmp	r5, r0
   16648:	bcs	166f4 <__assert_fail@plt+0x4b30>
   1664c:	ldr	r6, [r7]
   16650:	ldr	r0, [r6, r5, lsl #3]
   16654:	cmp	r0, #0
   16658:	beq	16678 <__assert_fail@plt+0x4ab4>
   1665c:	ldr	r0, [r8]
   16660:	cmp	r0, #0
   16664:	beq	1668c <__assert_fail@plt+0x4ac8>
   16668:	mov	r1, r0
   1666c:	ldr	r2, [r1, #4]!
   16670:	str	r2, [r8]
   16674:	b	166a0 <__assert_fail@plt+0x4adc>
   16678:	str	r4, [r6, r5, lsl #3]
   1667c:	ldr	r0, [r7, #12]
   16680:	add	r0, r0, #1
   16684:	str	r0, [r7, #12]
   16688:	b	166b4 <__assert_fail@plt+0x4af0>
   1668c:	mov	r0, #8
   16690:	bl	1b064 <lchmod@@Base+0x41bc>
   16694:	cmp	r0, #0
   16698:	beq	166e8 <__assert_fail@plt+0x4b24>
   1669c:	add	r1, r0, #4
   166a0:	str	r4, [r0]
   166a4:	add	r2, r6, r5, lsl #3
   166a8:	ldr	r3, [r2, #4]
   166ac:	str	r3, [r1]
   166b0:	str	r0, [r2, #4]
   166b4:	ldr	r1, [sp, #8]
   166b8:	str	r9, [sl]
   166bc:	ldr	r0, [r1, #12]
   166c0:	sub	r0, r0, #1
   166c4:	str	r0, [r1, #12]
   166c8:	ldr	r0, [sp, #8]
   166cc:	add	sl, sl, #8
   166d0:	ldr	r0, [r0, #4]
   166d4:	cmp	sl, r0
   166d8:	bcc	16590 <__assert_fail@plt+0x49cc>
   166dc:	mov	r0, #1
   166e0:	sub	sp, fp, #28
   166e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   166e8:	mov	r0, #0
   166ec:	sub	sp, fp, #28
   166f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   166f4:	bl	11b64 <abort@plt>
   166f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   166fc:	add	fp, sp, #28
   16700:	sub	sp, sp, #4
   16704:	cmp	r1, #0
   16708:	beq	16a2c <__assert_fail@plt+0x4e68>
   1670c:	mov	r8, r2
   16710:	mov	sl, r1
   16714:	ldr	r1, [r0, #8]
   16718:	ldr	r2, [r0, #24]
   1671c:	mov	r4, r0
   16720:	mov	r0, sl
   16724:	blx	r2
   16728:	mov	r7, r0
   1672c:	ldr	r0, [r4, #8]
   16730:	cmp	r7, r0
   16734:	bcs	16a2c <__assert_fail@plt+0x4e68>
   16738:	ldr	r5, [r4]
   1673c:	mov	r9, r5
   16740:	ldr	r1, [r9, r7, lsl #3]!
   16744:	cmp	r1, #0
   16748:	beq	167d4 <__assert_fail@plt+0x4c10>
   1674c:	cmp	r1, sl
   16750:	beq	1677c <__assert_fail@plt+0x4bb8>
   16754:	ldr	r2, [r4, #28]
   16758:	mov	r0, sl
   1675c:	blx	r2
   16760:	cmp	r0, #0
   16764:	mov	r6, r9
   16768:	beq	16790 <__assert_fail@plt+0x4bcc>
   1676c:	ldr	r0, [r6]
   16770:	cmp	r0, #0
   16774:	bne	16780 <__assert_fail@plt+0x4bbc>
   16778:	b	167d4 <__assert_fail@plt+0x4c10>
   1677c:	mov	r0, sl
   16780:	cmp	r8, #0
   16784:	mov	r7, #0
   16788:	strne	r0, [r8]
   1678c:	b	169c8 <__assert_fail@plt+0x4e04>
   16790:	add	r6, r5, r7, lsl #3
   16794:	ldr	r0, [r6, #4]!
   16798:	cmp	r0, #0
   1679c:	beq	167d4 <__assert_fail@plt+0x4c10>
   167a0:	ldr	r1, [r0]
   167a4:	cmp	r1, sl
   167a8:	beq	167c8 <__assert_fail@plt+0x4c04>
   167ac:	ldr	r2, [r4, #28]
   167b0:	mov	r0, sl
   167b4:	blx	r2
   167b8:	ldr	r6, [r6]
   167bc:	cmp	r0, #0
   167c0:	beq	16794 <__assert_fail@plt+0x4bd0>
   167c4:	b	1676c <__assert_fail@plt+0x4ba8>
   167c8:	mov	r0, sl
   167cc:	cmp	r0, #0
   167d0:	bne	16780 <__assert_fail@plt+0x4bbc>
   167d4:	vldr	s0, [r4, #8]
   167d8:	vldr	s2, [r4, #12]
   167dc:	ldr	r0, [r4, #20]
   167e0:	vcvt.f32.u32	s0, s0
   167e4:	vcvt.f32.u32	s4, s2
   167e8:	vldr	s2, [r0, #8]
   167ec:	vmul.f32	s6, s2, s0
   167f0:	vcmpe.f32	s6, s4
   167f4:	vmrs	APSR_nzcv, fpscr
   167f8:	bpl	1694c <__assert_fail@plt+0x4d88>
   167fc:	movw	r1, #50240	; 0xc440
   16800:	movt	r1, #1
   16804:	cmp	r0, r1
   16808:	beq	16894 <__assert_fail@plt+0x4cd0>
   1680c:	vldr	s6, [pc, #540]	; 16a30 <__assert_fail@plt+0x4e6c>
   16810:	vcmpe.f32	s2, s6
   16814:	vmrs	APSR_nzcv, fpscr
   16818:	ble	16880 <__assert_fail@plt+0x4cbc>
   1681c:	vldr	s8, [pc, #528]	; 16a34 <__assert_fail@plt+0x4e70>
   16820:	vcmpe.f32	s2, s8
   16824:	vmrs	APSR_nzcv, fpscr
   16828:	bpl	16880 <__assert_fail@plt+0x4cbc>
   1682c:	vldr	s8, [pc, #516]	; 16a38 <__assert_fail@plt+0x4e74>
   16830:	vldr	s10, [r0, #12]
   16834:	vcmpe.f32	s10, s8
   16838:	vmrs	APSR_nzcv, fpscr
   1683c:	ble	16880 <__assert_fail@plt+0x4cbc>
   16840:	vldr	s8, [r0]
   16844:	vcmpe.f32	s8, #0.0
   16848:	vmrs	APSR_nzcv, fpscr
   1684c:	blt	16880 <__assert_fail@plt+0x4cbc>
   16850:	vadd.f32	s6, s8, s6
   16854:	vcmpe.f32	s6, s2
   16858:	vmrs	APSR_nzcv, fpscr
   1685c:	bpl	16880 <__assert_fail@plt+0x4cbc>
   16860:	vldr	s8, [r0, #4]
   16864:	vmov.f32	s10, #112	; 0x3f800000  1.0
   16868:	vcmpe.f32	s8, s10
   1686c:	vmrs	APSR_nzcv, fpscr
   16870:	bhi	16880 <__assert_fail@plt+0x4cbc>
   16874:	vcmpe.f32	s6, s8
   16878:	vmrs	APSR_nzcv, fpscr
   1687c:	bmi	16898 <__assert_fail@plt+0x4cd4>
   16880:	vldr	s2, [pc, #436]	; 16a3c <__assert_fail@plt+0x4e78>
   16884:	movw	r0, #50240	; 0xc440
   16888:	movt	r0, #1
   1688c:	str	r0, [r4, #20]
   16890:	b	16898 <__assert_fail@plt+0x4cd4>
   16894:	mov	r0, r1
   16898:	vmul.f32	s6, s2, s0
   1689c:	vcmpe.f32	s6, s4
   168a0:	vmrs	APSR_nzcv, fpscr
   168a4:	bpl	1694c <__assert_fail@plt+0x4d88>
   168a8:	vldr	s4, [r0, #12]
   168ac:	ldrb	r0, [r0, #16]
   168b0:	mvn	r7, #0
   168b4:	vmul.f32	s0, s4, s0
   168b8:	vldr	s4, [pc, #384]	; 16a40 <__assert_fail@plt+0x4e7c>
   168bc:	cmp	r0, #0
   168c0:	vmul.f32	s2, s2, s0
   168c4:	vseleq.f32	s0, s2, s0
   168c8:	vcmpe.f32	s0, s4
   168cc:	vmrs	APSR_nzcv, fpscr
   168d0:	bge	169c8 <__assert_fail@plt+0x4e04>
   168d4:	vcvt.u32.f32	s0, s0
   168d8:	mov	r0, r4
   168dc:	vmov	r1, s0
   168e0:	bl	162f8 <__assert_fail@plt+0x4734>
   168e4:	cmp	r0, #0
   168e8:	beq	169c8 <__assert_fail@plt+0x4e04>
   168ec:	ldr	r1, [r4, #8]
   168f0:	ldr	r2, [r4, #24]
   168f4:	mov	r0, sl
   168f8:	blx	r2
   168fc:	mov	r7, r0
   16900:	ldr	r0, [r4, #8]
   16904:	cmp	r7, r0
   16908:	bcs	16a2c <__assert_fail@plt+0x4e68>
   1690c:	ldr	r5, [r4]
   16910:	mov	r9, r5
   16914:	ldr	r1, [r9, r7, lsl #3]!
   16918:	cmp	r1, #0
   1691c:	beq	16974 <__assert_fail@plt+0x4db0>
   16920:	cmp	r1, sl
   16924:	mov	r0, sl
   16928:	beq	16944 <__assert_fail@plt+0x4d80>
   1692c:	ldr	r2, [r4, #28]
   16930:	mov	r0, sl
   16934:	blx	r2
   16938:	cmp	r0, #0
   1693c:	beq	169dc <__assert_fail@plt+0x4e18>
   16940:	ldr	r0, [r9]
   16944:	cmp	r0, #0
   16948:	bne	16a2c <__assert_fail@plt+0x4e68>
   1694c:	ldr	r0, [r9]
   16950:	cmp	r0, #0
   16954:	beq	16974 <__assert_fail@plt+0x4db0>
   16958:	ldr	r0, [r4, #36]	; 0x24
   1695c:	cmp	r0, #0
   16960:	beq	16994 <__assert_fail@plt+0x4dd0>
   16964:	mov	r1, r0
   16968:	ldr	r2, [r1, #4]!
   1696c:	str	r2, [r4, #36]	; 0x24
   16970:	b	169a8 <__assert_fail@plt+0x4de4>
   16974:	str	sl, [r9]
   16978:	ldr	r0, [r4, #12]
   1697c:	ldr	r1, [r4, #16]
   16980:	add	r0, r0, #1
   16984:	add	r1, r1, #1
   16988:	str	r0, [r4, #12]
   1698c:	str	r1, [r4, #16]
   16990:	b	169c4 <__assert_fail@plt+0x4e00>
   16994:	mov	r0, #8
   16998:	bl	1b064 <lchmod@@Base+0x41bc>
   1699c:	cmp	r0, #0
   169a0:	beq	169d4 <__assert_fail@plt+0x4e10>
   169a4:	add	r1, r0, #4
   169a8:	str	sl, [r0]
   169ac:	ldr	r2, [r9, #4]
   169b0:	str	r2, [r1]
   169b4:	str	r0, [r9, #4]
   169b8:	ldr	r0, [r4, #16]
   169bc:	add	r0, r0, #1
   169c0:	str	r0, [r4, #16]
   169c4:	mov	r7, #1
   169c8:	mov	r0, r7
   169cc:	sub	sp, fp, #28
   169d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   169d4:	mvn	r7, #0
   169d8:	b	169c8 <__assert_fail@plt+0x4e04>
   169dc:	add	r6, r5, r7, lsl #3
   169e0:	ldr	r0, [r6, #4]!
   169e4:	cmp	r0, #0
   169e8:	beq	1694c <__assert_fail@plt+0x4d88>
   169ec:	ldr	r1, [r0]
   169f0:	cmp	r1, sl
   169f4:	beq	16a20 <__assert_fail@plt+0x4e5c>
   169f8:	ldr	r2, [r4, #28]
   169fc:	mov	r0, sl
   16a00:	blx	r2
   16a04:	ldr	r6, [r6]
   16a08:	cmp	r0, #0
   16a0c:	beq	169e0 <__assert_fail@plt+0x4e1c>
   16a10:	ldr	r0, [r6]
   16a14:	cmp	r0, #0
   16a18:	beq	1694c <__assert_fail@plt+0x4d88>
   16a1c:	b	16a2c <__assert_fail@plt+0x4e68>
   16a20:	mov	r0, sl
   16a24:	cmp	r0, #0
   16a28:	beq	1694c <__assert_fail@plt+0x4d88>
   16a2c:	bl	11b64 <abort@plt>
   16a30:	stclcc	12, cr12, [ip, #820]	; 0x334
   16a34:	svccc	0x00666666
   16a38:	svccc	0x008ccccd
   16a3c:	svccc	0x004ccccd
   16a40:	svcmi	0x00800000
   16a44:	push	{r4, sl, fp, lr}
   16a48:	add	fp, sp, #8
   16a4c:	sub	sp, sp, #8
   16a50:	add	r2, sp, #4
   16a54:	mov	r4, r1
   16a58:	bl	166f8 <__assert_fail@plt+0x4b34>
   16a5c:	cmn	r0, #1
   16a60:	beq	16a74 <__assert_fail@plt+0x4eb0>
   16a64:	ldr	r1, [sp, #4]
   16a68:	cmp	r0, #0
   16a6c:	moveq	r4, r1
   16a70:	b	16a78 <__assert_fail@plt+0x4eb4>
   16a74:	mov	r4, #0
   16a78:	mov	r0, r4
   16a7c:	sub	sp, fp, #8
   16a80:	pop	{r4, sl, fp, pc}
   16a84:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16a88:	add	fp, sp, #24
   16a8c:	mov	r9, r1
   16a90:	ldr	r1, [r0, #8]
   16a94:	ldr	r2, [r0, #24]
   16a98:	mov	r5, r0
   16a9c:	mov	r0, r9
   16aa0:	blx	r2
   16aa4:	mov	r7, r0
   16aa8:	ldr	r0, [r5, #8]
   16aac:	cmp	r7, r0
   16ab0:	bcs	16d10 <__assert_fail@plt+0x514c>
   16ab4:	ldr	r6, [r5]
   16ab8:	mov	r8, #0
   16abc:	mov	r4, r6
   16ac0:	ldr	r1, [r4, r7, lsl #3]!
   16ac4:	cmp	r1, #0
   16ac8:	beq	16b7c <__assert_fail@plt+0x4fb8>
   16acc:	cmp	r1, r9
   16ad0:	beq	16aec <__assert_fail@plt+0x4f28>
   16ad4:	ldr	r2, [r5, #28]
   16ad8:	mov	r0, r9
   16adc:	blx	r2
   16ae0:	cmp	r0, #0
   16ae4:	beq	16b24 <__assert_fail@plt+0x4f60>
   16ae8:	ldr	r9, [r4]
   16aec:	add	r0, r6, r7, lsl #3
   16af0:	ldr	r0, [r0, #4]
   16af4:	cmp	r0, #0
   16af8:	beq	16b6c <__assert_fail@plt+0x4fa8>
   16afc:	ldm	r0, {r1, r2}
   16b00:	stm	r4, {r1, r2}
   16b04:	mov	r1, #0
   16b08:	str	r1, [r0]
   16b0c:	ldr	r1, [r5, #36]	; 0x24
   16b10:	str	r1, [r0, #4]
   16b14:	str	r0, [r5, #36]	; 0x24
   16b18:	cmp	r9, #0
   16b1c:	bne	16bb4 <__assert_fail@plt+0x4ff0>
   16b20:	b	16b7c <__assert_fail@plt+0x4fb8>
   16b24:	add	r7, r6, r7, lsl #3
   16b28:	ldr	r0, [r7, #4]!
   16b2c:	cmp	r0, #0
   16b30:	beq	16b7c <__assert_fail@plt+0x4fb8>
   16b34:	ldr	r1, [r0]
   16b38:	cmp	r1, r9
   16b3c:	beq	16b84 <__assert_fail@plt+0x4fc0>
   16b40:	ldr	r2, [r5, #28]
   16b44:	mov	r0, r9
   16b48:	blx	r2
   16b4c:	ldr	r1, [r7]
   16b50:	cmp	r0, #0
   16b54:	bne	16b8c <__assert_fail@plt+0x4fc8>
   16b58:	ldr	r0, [r1, #4]!
   16b5c:	cmp	r0, #0
   16b60:	mov	r7, r1
   16b64:	bne	16b34 <__assert_fail@plt+0x4f70>
   16b68:	b	16b7c <__assert_fail@plt+0x4fb8>
   16b6c:	mov	r0, #0
   16b70:	str	r0, [r4]
   16b74:	cmp	r9, #0
   16b78:	bne	16bb4 <__assert_fail@plt+0x4ff0>
   16b7c:	mov	r0, r8
   16b80:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16b84:	mov	r1, r0
   16b88:	b	16b90 <__assert_fail@plt+0x4fcc>
   16b8c:	ldr	r9, [r1]
   16b90:	ldr	r0, [r1, #4]
   16b94:	str	r0, [r7]
   16b98:	mov	r0, #0
   16b9c:	str	r0, [r1]
   16ba0:	ldr	r0, [r5, #36]	; 0x24
   16ba4:	str	r0, [r1, #4]
   16ba8:	str	r1, [r5, #36]	; 0x24
   16bac:	cmp	r9, #0
   16bb0:	beq	16b7c <__assert_fail@plt+0x4fb8>
   16bb4:	ldr	r0, [r5, #16]
   16bb8:	sub	r0, r0, #1
   16bbc:	str	r0, [r5, #16]
   16bc0:	ldr	r0, [r4]
   16bc4:	cmp	r0, #0
   16bc8:	bne	16cd0 <__assert_fail@plt+0x510c>
   16bcc:	ldr	r0, [r5, #12]
   16bd0:	vldr	s0, [r5, #8]
   16bd4:	sub	r1, r0, #1
   16bd8:	str	r1, [r5, #12]
   16bdc:	vmov	s2, r1
   16be0:	ldr	r0, [r5, #20]
   16be4:	vcvt.f32.u32	s0, s0
   16be8:	vcvt.f32.u32	s2, s2
   16bec:	vldr	s4, [r0]
   16bf0:	vmul.f32	s6, s4, s0
   16bf4:	vcmpe.f32	s6, s2
   16bf8:	vmrs	APSR_nzcv, fpscr
   16bfc:	ble	16cd0 <__assert_fail@plt+0x510c>
   16c00:	movw	r1, #50240	; 0xc440
   16c04:	movt	r1, #1
   16c08:	cmp	r0, r1
   16c0c:	beq	16c64 <__assert_fail@plt+0x50a0>
   16c10:	vldr	s8, [pc, #252]	; 16d14 <__assert_fail@plt+0x5150>
   16c14:	vldr	s6, [r0, #8]
   16c18:	vcmpe.f32	s6, s8
   16c1c:	vmrs	APSR_nzcv, fpscr
   16c20:	ble	16c50 <__assert_fail@plt+0x508c>
   16c24:	vldr	s10, [pc, #236]	; 16d18 <__assert_fail@plt+0x5154>
   16c28:	vcmpe.f32	s6, s10
   16c2c:	vmrs	APSR_nzcv, fpscr
   16c30:	bpl	16c50 <__assert_fail@plt+0x508c>
   16c34:	vcmpe.f32	s4, #0.0
   16c38:	vmrs	APSR_nzcv, fpscr
   16c3c:	vldrge	s10, [r0, #12]
   16c40:	vldrge	s12, [pc, #212]	; 16d1c <__assert_fail@plt+0x5158>
   16c44:	vcmpege.f32	s10, s12
   16c48:	vmrsge	APSR_nzcv, fpscr
   16c4c:	bgt	16cdc <__assert_fail@plt+0x5118>
   16c50:	vldr	s4, [pc, #200]	; 16d20 <__assert_fail@plt+0x515c>
   16c54:	movw	r0, #50240	; 0xc440
   16c58:	movt	r0, #1
   16c5c:	str	r0, [r5, #20]
   16c60:	b	16c68 <__assert_fail@plt+0x50a4>
   16c64:	mov	r0, r1
   16c68:	vmul.f32	s4, s4, s0
   16c6c:	vcmpe.f32	s4, s2
   16c70:	vmrs	APSR_nzcv, fpscr
   16c74:	ble	16cd0 <__assert_fail@plt+0x510c>
   16c78:	ldrb	r1, [r0, #16]
   16c7c:	vldr	s2, [r0, #4]
   16c80:	cmp	r1, #0
   16c84:	vmul.f32	s0, s2, s0
   16c88:	vldreq	s2, [r0, #8]
   16c8c:	mov	r0, r5
   16c90:	vmuleq.f32	s0, s0, s2
   16c94:	vcvt.u32.f32	s0, s0
   16c98:	vmov	r1, s0
   16c9c:	bl	162f8 <__assert_fail@plt+0x4734>
   16ca0:	cmp	r0, #0
   16ca4:	bne	16cd0 <__assert_fail@plt+0x510c>
   16ca8:	ldr	r0, [r5, #36]	; 0x24
   16cac:	cmp	r0, #0
   16cb0:	beq	16cc8 <__assert_fail@plt+0x5104>
   16cb4:	ldr	r4, [r0, #4]
   16cb8:	bl	136a8 <__assert_fail@plt+0x1ae4>
   16cbc:	cmp	r4, #0
   16cc0:	mov	r0, r4
   16cc4:	bne	16cb4 <__assert_fail@plt+0x50f0>
   16cc8:	mov	r0, #0
   16ccc:	str	r0, [r5, #36]	; 0x24
   16cd0:	mov	r8, r9
   16cd4:	mov	r0, r8
   16cd8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16cdc:	vadd.f32	s8, s4, s8
   16ce0:	vcmpe.f32	s8, s6
   16ce4:	vmrs	APSR_nzcv, fpscr
   16ce8:	bpl	16c50 <__assert_fail@plt+0x508c>
   16cec:	vldr	s6, [r0, #4]
   16cf0:	vmov.f32	s10, #112	; 0x3f800000  1.0
   16cf4:	vcmpe.f32	s6, s10
   16cf8:	vmrs	APSR_nzcv, fpscr
   16cfc:	bhi	16c50 <__assert_fail@plt+0x508c>
   16d00:	vcmpe.f32	s8, s6
   16d04:	vmrs	APSR_nzcv, fpscr
   16d08:	bmi	16c68 <__assert_fail@plt+0x50a4>
   16d0c:	b	16c50 <__assert_fail@plt+0x508c>
   16d10:	bl	11b64 <abort@plt>
   16d14:	stclcc	12, cr12, [ip, #820]	; 0x334
   16d18:	svccc	0x00666666
   16d1c:	svccc	0x008ccccd
   16d20:	andeq	r0, r0, r0
   16d24:	b	16a84 <__assert_fail@plt+0x4ec0>
   16d28:	push	{r4, r5, fp, lr}
   16d2c:	add	fp, sp, #8
   16d30:	mov	r5, r0
   16d34:	ldr	r0, [r0]
   16d38:	mov	r4, r1
   16d3c:	bl	1b6a8 <lchmod@@Base+0x4800>
   16d40:	ldrd	r2, [r5, #8]
   16d44:	eor	r0, r2, r0
   16d48:	mov	r1, r3
   16d4c:	mov	r2, r4
   16d50:	mov	r3, #0
   16d54:	bl	1b8cc <lchmod@@Base+0x4a24>
   16d58:	mov	r0, r2
   16d5c:	pop	{r4, r5, fp, pc}
   16d60:	push	{r4, r5, r6, r7, fp, lr}
   16d64:	add	fp, sp, #16
   16d68:	ldrd	r2, [r1, #8]
   16d6c:	ldrd	r4, [r0, #8]
   16d70:	eor	r3, r5, r3
   16d74:	eor	r2, r4, r2
   16d78:	orrs	r2, r2, r3
   16d7c:	mov	r2, #0
   16d80:	bne	16db0 <__assert_fail@plt+0x51ec>
   16d84:	ldrd	r4, [r1, #16]
   16d88:	ldrd	r6, [r0, #16]
   16d8c:	eor	r3, r7, r5
   16d90:	eor	r7, r6, r4
   16d94:	orrs	r3, r7, r3
   16d98:	bne	16db0 <__assert_fail@plt+0x51ec>
   16d9c:	ldr	r1, [r1]
   16da0:	ldr	r0, [r0]
   16da4:	bl	117d4 <strcmp@plt>
   16da8:	clz	r0, r0
   16dac:	lsr	r2, r0, #5
   16db0:	mov	r0, r2
   16db4:	pop	{r4, r5, r6, r7, fp, pc}
   16db8:	push	{r4, sl, fp, lr}
   16dbc:	add	fp, sp, #8
   16dc0:	mov	r4, r0
   16dc4:	ldr	r0, [r0]
   16dc8:	bl	136a8 <__assert_fail@plt+0x1ae4>
   16dcc:	mov	r0, r4
   16dd0:	pop	{r4, sl, fp, lr}
   16dd4:	b	136a8 <__assert_fail@plt+0x1ae4>
   16dd8:	mov	r3, #1
   16ddc:	mov	r2, #0
   16de0:	vdup.32	q8, r1
   16de4:	strb	r3, [r0, #28]
   16de8:	str	r2, [r0, #20]
   16dec:	str	r2, [r0, #24]
   16df0:	vst1.32	{d16-d17}, [r0]!
   16df4:	str	r1, [r0]
   16df8:	bx	lr
   16dfc:	ldrb	r0, [r0, #28]
   16e00:	bx	lr
   16e04:	push	{fp, lr}
   16e08:	mov	fp, sp
   16e0c:	ldrb	r3, [r0, #28]
   16e10:	ldr	r2, [r0, #20]
   16e14:	eor	lr, r3, #1
   16e18:	add	r2, r2, lr
   16e1c:	and	r3, r2, #3
   16e20:	ldr	ip, [r0, r3, lsl #2]
   16e24:	str	r1, [r0, r3, lsl #2]
   16e28:	str	r3, [r0, #20]
   16e2c:	ldr	r1, [r0, #24]
   16e30:	cmp	r3, r1
   16e34:	addeq	r1, r2, lr
   16e38:	andeq	r1, r1, #3
   16e3c:	streq	r1, [r0, #24]
   16e40:	mov	r1, #0
   16e44:	strb	r1, [r0, #28]
   16e48:	mov	r0, ip
   16e4c:	pop	{fp, pc}
   16e50:	ldrb	r1, [r0, #28]
   16e54:	cmp	r1, #0
   16e58:	bne	16e9c <__assert_fail@plt+0x52d8>
   16e5c:	ldr	r3, [r0, #20]
   16e60:	ldr	r2, [r0, #16]
   16e64:	ldr	r1, [r0, r3, lsl #2]
   16e68:	str	r2, [r0, r3, lsl #2]
   16e6c:	ldr	r2, [r0, #20]
   16e70:	ldr	r3, [r0, #24]
   16e74:	cmp	r2, r3
   16e78:	moveq	r2, #1
   16e7c:	strbeq	r2, [r0, #28]
   16e80:	moveq	r0, r1
   16e84:	bxeq	lr
   16e88:	sub	r2, r2, #1
   16e8c:	and	r2, r2, #3
   16e90:	str	r2, [r0, #20]
   16e94:	mov	r0, r1
   16e98:	bx	lr
   16e9c:	push	{fp, lr}
   16ea0:	mov	fp, sp
   16ea4:	bl	11b64 <abort@plt>

00016ea8 <lchmod@@Base>:
   16ea8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16eac:	add	fp, sp, #24
   16eb0:	sub	sp, sp, #136	; 0x88
   16eb4:	mov	r4, r1
   16eb8:	mov	r1, #2654208	; 0x288000
   16ebc:	mov	r5, r0
   16ec0:	bl	1193c <open64@plt>
   16ec4:	mov	r6, r0
   16ec8:	cmp	r0, #0
   16ecc:	blt	16f18 <lchmod@@Base+0x70>
   16ed0:	movw	r2, #49875	; 0xc2d3
   16ed4:	mov	r0, #4096	; 0x1000
   16ed8:	add	r3, sp, #32
   16edc:	mov	r1, r6
   16ee0:	str	r0, [sp]
   16ee4:	movt	r2, #1
   16ee8:	mov	r0, #3
   16eec:	bl	118b8 <__fxstatat64@plt>
   16ef0:	cmp	r0, #0
   16ef4:	beq	16f20 <lchmod@@Base+0x78>
   16ef8:	bl	11a08 <__errno_location@plt>
   16efc:	ldr	r5, [r0]
   16f00:	mov	r4, r0
   16f04:	mov	r0, r6
   16f08:	bl	11b70 <close@plt>
   16f0c:	str	r5, [r4]
   16f10:	mvn	r7, #0
   16f14:	b	16fc0 <lchmod@@Base+0x118>
   16f18:	mov	r7, r6
   16f1c:	b	16fc0 <lchmod@@Base+0x118>
   16f20:	ldr	r0, [sp, #48]	; 0x30
   16f24:	and	r0, r0, #61440	; 0xf000
   16f28:	cmp	r0, #40960	; 0xa000
   16f2c:	bne	16f4c <lchmod@@Base+0xa4>
   16f30:	mov	r0, r6
   16f34:	bl	11b70 <close@plt>
   16f38:	bl	11a08 <__errno_location@plt>
   16f3c:	mov	r1, #95	; 0x5f
   16f40:	mvn	r7, #0
   16f44:	str	r1, [r0]
   16f48:	b	16fc0 <lchmod@@Base+0x118>
   16f4c:	movw	r3, #50260	; 0xc454
   16f50:	add	r7, sp, #6
   16f54:	mov	r1, #1
   16f58:	mov	r2, #26
   16f5c:	str	r6, [sp]
   16f60:	movt	r3, #1
   16f64:	mov	r0, r7
   16f68:	bl	11a14 <__sprintf_chk@plt>
   16f6c:	mov	r0, r7
   16f70:	mov	r1, r4
   16f74:	bl	11b34 <chmod@plt>
   16f78:	mov	r7, r0
   16f7c:	bl	11a08 <__errno_location@plt>
   16f80:	ldr	r9, [r0]
   16f84:	mov	r8, r0
   16f88:	mov	r0, r6
   16f8c:	bl	11b70 <close@plt>
   16f90:	cmp	r7, #0
   16f94:	beq	16fb4 <lchmod@@Base+0x10c>
   16f98:	cmp	r9, #2
   16f9c:	bne	16fbc <lchmod@@Base+0x114>
   16fa0:	mov	r0, r5
   16fa4:	mov	r1, r4
   16fa8:	bl	11b34 <chmod@plt>
   16fac:	mov	r7, r0
   16fb0:	b	16fc0 <lchmod@@Base+0x118>
   16fb4:	mov	r7, #0
   16fb8:	b	16fc0 <lchmod@@Base+0x118>
   16fbc:	str	r9, [r8]
   16fc0:	mov	r0, r7
   16fc4:	sub	sp, fp, #24
   16fc8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16fcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16fd0:	add	fp, sp, #28
   16fd4:	sub	sp, sp, #4
   16fd8:	ldrb	r1, [r0]
   16fdc:	mov	r4, r0
   16fe0:	and	r0, r1, #248	; 0xf8
   16fe4:	cmp	r0, #48	; 0x30
   16fe8:	bne	17034 <lchmod@@Base+0x18c>
   16fec:	mov	r0, #0
   16ff0:	mov	r5, #0
   16ff4:	mov	r2, r4
   16ff8:	lsl	r3, r5, #3
   16ffc:	uxtab	r1, r3, r1
   17000:	sub	r5, r1, #48	; 0x30
   17004:	cmp	r0, r5, lsr #12
   17008:	bne	1702c <lchmod@@Base+0x184>
   1700c:	ldrb	r1, [r2, #1]
   17010:	add	r6, r2, #1
   17014:	and	r2, r1, #248	; 0xf8
   17018:	cmp	r2, #48	; 0x30
   1701c:	mov	r2, r6
   17020:	beq	16ff8 <lchmod@@Base+0x150>
   17024:	cmp	r1, #0
   17028:	beq	170a4 <lchmod@@Base+0x1fc>
   1702c:	sub	sp, fp, #28
   17030:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17034:	movw	sl, #5
   17038:	mov	r2, #1
   1703c:	mvn	r3, #42	; 0x2a
   17040:	mov	r7, #1
   17044:	mov	r0, #1
   17048:	movt	sl, #4
   1704c:	b	1705c <lchmod@@Base+0x1b4>
   17050:	ldrb	r1, [r4, r7]
   17054:	add	r0, r6, r0
   17058:	add	r7, r7, #1
   1705c:	uxtab	r6, r3, r1
   17060:	uxtb	r1, r1
   17064:	cmp	r6, #18
   17068:	bhi	17078 <lchmod@@Base+0x1d0>
   1706c:	tst	sl, r2, lsl r6
   17070:	mov	r6, #1
   17074:	bne	17050 <lchmod@@Base+0x1a8>
   17078:	cmp	r1, #0
   1707c:	beq	17088 <lchmod@@Base+0x1e0>
   17080:	mov	r6, #0
   17084:	b	17050 <lchmod@@Base+0x1a8>
   17088:	mov	r1, #16
   1708c:	bl	19e20 <lchmod@@Base+0x2f78>
   17090:	mov	r9, #0
   17094:	mov	ip, #1
   17098:	mvn	lr, #87	; 0x57
   1709c:	mov	r8, #0
   170a0:	b	170f0 <lchmod@@Base+0x248>
   170a4:	mov	r0, #32
   170a8:	bl	19d50 <lchmod@@Base+0x2ea8>
   170ac:	movw	r1, #317	; 0x13d
   170b0:	mov	r2, #0
   170b4:	and	r3, r5, #3072	; 0xc00
   170b8:	movw	r7, #1023	; 0x3ff
   170bc:	strh	r1, [r0]
   170c0:	strb	r2, [r0, #17]
   170c4:	sub	r2, r6, r4
   170c8:	movw	r1, #4095	; 0xfff
   170cc:	cmp	r2, #5
   170d0:	str	r1, [r0, #4]
   170d4:	str	r5, [r0, #8]
   170d8:	orrlt	r1, r3, r7
   170dc:	str	r1, [r0, #12]
   170e0:	sub	sp, fp, #28
   170e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   170e8:	add	r4, r4, #1
   170ec:	mov	r8, r3
   170f0:	mov	r2, #0
   170f4:	b	17100 <lchmod@@Base+0x258>
   170f8:	orr	r2, r2, r1
   170fc:	add	r4, r4, #1
   17100:	ldrb	r6, [r4]
   17104:	sub	r3, r6, #97	; 0x61
   17108:	cmp	r3, #20
   1710c:	bhi	17188 <lchmod@@Base+0x2e0>
   17110:	add	r5, pc, #4
   17114:	mov	r1, #2496	; 0x9c0
   17118:	ldr	pc, [r5, r3, lsl #2]
   1711c:	andeq	r7, r1, r0, ror r1
   17120:	strdeq	r7, [r1], -r4
   17124:	strdeq	r7, [r1], -r4
   17128:	strdeq	r7, [r1], -r4
   1712c:	strdeq	r7, [r1], -r4
   17130:	strdeq	r7, [r1], -r4
   17134:	andeq	r7, r1, r8, ror r1
   17138:	strdeq	r7, [r1], -r4
   1713c:	strdeq	r7, [r1], -r4
   17140:	strdeq	r7, [r1], -r4
   17144:	strdeq	r7, [r1], -r4
   17148:	strdeq	r7, [r1], -r4
   1714c:	strdeq	r7, [r1], -r4
   17150:	strdeq	r7, [r1], -r4
   17154:	andeq	r7, r1, r0, lsl #3
   17158:	strdeq	r7, [r1], -r4
   1715c:	strdeq	r7, [r1], -r4
   17160:	strdeq	r7, [r1], -r4
   17164:	strdeq	r7, [r1], -r4
   17168:	strdeq	r7, [r1], -r4
   1716c:	strdeq	r7, [r1], -r8
   17170:	movw	r1, #4095	; 0xfff
   17174:	b	170f8 <lchmod@@Base+0x250>
   17178:	movw	r1, #1080	; 0x438
   1717c:	b	170f8 <lchmod@@Base+0x250>
   17180:	movw	r1, #519	; 0x207
   17184:	b	170f8 <lchmod@@Base+0x250>
   17188:	sub	r1, r6, #43	; 0x2b
   1718c:	cmp	r1, #18
   17190:	bhi	173f4 <lchmod@@Base+0x54c>
   17194:	tst	sl, ip, lsl r1
   17198:	beq	173f4 <lchmod@@Base+0x54c>
   1719c:	ldrb	r1, [r4, #1]
   171a0:	sub	r3, r1, #48	; 0x30
   171a4:	cmp	r3, #8
   171a8:	bcs	17204 <lchmod@@Base+0x35c>
   171ac:	add	r3, r4, #2
   171b0:	mov	r7, #0
   171b4:	lsl	r4, r7, #3
   171b8:	uxtab	r1, r4, r1
   171bc:	sub	r7, r1, #48	; 0x30
   171c0:	cmp	r9, r7, lsr #12
   171c4:	bne	173f4 <lchmod@@Base+0x54c>
   171c8:	ldrb	r1, [r3], #1
   171cc:	and	r4, r1, #248	; 0xf8
   171d0:	cmp	r4, #48	; 0x30
   171d4:	beq	171b4 <lchmod@@Base+0x30c>
   171d8:	cmp	r2, #0
   171dc:	bne	173f4 <lchmod@@Base+0x54c>
   171e0:	sub	r4, r3, #1
   171e4:	mov	r5, #1
   171e8:	movw	r2, #4095	; 0xfff
   171ec:	cmp	r1, #0
   171f0:	beq	17230 <lchmod@@Base+0x388>
   171f4:	cmp	r1, #44	; 0x2c
   171f8:	movw	r1, #4095	; 0xfff
   171fc:	beq	17340 <lchmod@@Base+0x498>
   17200:	b	173f4 <lchmod@@Base+0x54c>
   17204:	add	r4, r4, #2
   17208:	cmp	r1, #103	; 0x67
   1720c:	beq	17238 <lchmod@@Base+0x390>
   17210:	cmp	r1, #111	; 0x6f
   17214:	beq	17248 <lchmod@@Base+0x3a0>
   17218:	cmp	r1, #117	; 0x75
   1721c:	bne	17258 <lchmod@@Base+0x3b0>
   17220:	mov	r5, #3
   17224:	mov	r1, #0
   17228:	mov	r7, #448	; 0x1c0
   1722c:	b	17340 <lchmod@@Base+0x498>
   17230:	movw	r1, #4095	; 0xfff
   17234:	b	17340 <lchmod@@Base+0x498>
   17238:	mov	r5, #3
   1723c:	mov	r1, #0
   17240:	mov	r7, #56	; 0x38
   17244:	b	17340 <lchmod@@Base+0x498>
   17248:	mov	r5, #3
   1724c:	mov	r1, #0
   17250:	mov	r7, #7
   17254:	b	17340 <lchmod@@Base+0x498>
   17258:	mov	r3, #1
   1725c:	mov	r7, #0
   17260:	b	17268 <lchmod@@Base+0x3c0>
   17264:	ldrb	r1, [r4], #1
   17268:	uxtab	r1, lr, r1
   1726c:	mov	r5, r3
   17270:	cmp	r1, #32
   17274:	bhi	17334 <lchmod@@Base+0x48c>
   17278:	add	ip, pc, #4
   1727c:	mov	r3, #2
   17280:	ldr	pc, [ip, r1, lsl #2]
   17284:	andeq	r7, r1, r4, ror #4
   17288:	andeq	r7, r1, r4, lsr r3
   1728c:	andeq	r7, r1, r4, lsr r3
   17290:	andeq	r7, r1, r4, lsr r3
   17294:	andeq	r7, r1, r4, lsr r3
   17298:	andeq	r7, r1, r4, lsr r3
   1729c:	andeq	r7, r1, r4, lsr r3
   172a0:	andeq	r7, r1, r4, lsr r3
   172a4:	andeq	r7, r1, r4, lsr r3
   172a8:	andeq	r7, r1, r4, lsr r3
   172ac:	andeq	r7, r1, r4, lsr r3
   172b0:	andeq	r7, r1, r4, lsr r3
   172b4:	andeq	r7, r1, r4, lsr r3
   172b8:	andeq	r7, r1, r4, lsr r3
   172bc:	andeq	r7, r1, r4, lsr r3
   172c0:	andeq	r7, r1, r4, lsr r3
   172c4:	andeq	r7, r1, r4, lsr r3
   172c8:	andeq	r7, r1, r4, lsr r3
   172cc:	andeq	r7, r1, r4, lsr r3
   172d0:	andeq	r7, r1, r4, lsr r3
   172d4:	andeq	r7, r1, r4, lsr r3
   172d8:	andeq	r7, r1, r4, lsr r3
   172dc:	andeq	r7, r1, r4, lsr r3
   172e0:	andeq	r7, r1, r4, lsr r3
   172e4:	andeq	r7, r1, r4, lsr r3
   172e8:	andeq	r7, r1, r4, lsr r3
   172ec:	andeq	r7, r1, r8, lsl #6
   172f0:	andeq	r7, r1, r0, lsl r3
   172f4:	andeq	r7, r1, r8, lsl r3
   172f8:	andeq	r7, r1, r4, lsr r3
   172fc:	andeq	r7, r1, r4, lsr r3
   17300:	andeq	r7, r1, r0, lsr #6
   17304:	andeq	r7, r1, r8, lsr #6
   17308:	orr	r7, r7, #292	; 0x124
   1730c:	b	1732c <lchmod@@Base+0x484>
   17310:	orr	r7, r7, #3072	; 0xc00
   17314:	b	1732c <lchmod@@Base+0x484>
   17318:	orr	r7, r7, #512	; 0x200
   1731c:	b	1732c <lchmod@@Base+0x484>
   17320:	orr	r7, r7, #146	; 0x92
   17324:	b	1732c <lchmod@@Base+0x484>
   17328:	orr	r7, r7, #73	; 0x49
   1732c:	mov	r3, r5
   17330:	b	17264 <lchmod@@Base+0x3bc>
   17334:	sub	r4, r4, #1
   17338:	mov	r1, #0
   1733c:	mov	ip, #1
   17340:	mov	r3, r0
   17344:	cmp	r1, #0
   17348:	strb	r6, [r3, r8, lsl #4]!
   1734c:	strb	r5, [r3, #1]
   17350:	stmib	r3, {r2, r7}
   17354:	bne	17364 <lchmod@@Base+0x4bc>
   17358:	cmp	r2, #0
   1735c:	andne	r7, r7, r2
   17360:	mov	r1, r7
   17364:	add	r7, r0, r8, lsl #4
   17368:	add	r3, r8, #1
   1736c:	str	r1, [r7, #12]
   17370:	ldrb	r6, [r4]
   17374:	sub	r1, r6, #43	; 0x2b
   17378:	cmp	r1, #18
   1737c:	bhi	173d8 <lchmod@@Base+0x530>
   17380:	add	r7, pc, #4
   17384:	mov	r8, r3
   17388:	ldr	pc, [r7, r1, lsl #2]
   1738c:	muleq	r1, ip, r1
   17390:	andeq	r7, r1, r8, ror #1
   17394:	muleq	r1, ip, r1
   17398:	strdeq	r7, [r1], -r4
   1739c:	strdeq	r7, [r1], -r4
   173a0:	strdeq	r7, [r1], -r4
   173a4:	strdeq	r7, [r1], -r4
   173a8:	strdeq	r7, [r1], -r4
   173ac:	strdeq	r7, [r1], -r4
   173b0:	strdeq	r7, [r1], -r4
   173b4:	strdeq	r7, [r1], -r4
   173b8:	strdeq	r7, [r1], -r4
   173bc:	strdeq	r7, [r1], -r4
   173c0:	strdeq	r7, [r1], -r4
   173c4:	strdeq	r7, [r1], -r4
   173c8:	strdeq	r7, [r1], -r4
   173cc:	strdeq	r7, [r1], -r4
   173d0:	strdeq	r7, [r1], -r4
   173d4:	muleq	r1, ip, r1
   173d8:	cmp	r6, #0
   173dc:	bne	173f4 <lchmod@@Base+0x54c>
   173e0:	add	r1, r0, r3, lsl #4
   173e4:	mov	r2, #0
   173e8:	strb	r2, [r1, #1]
   173ec:	sub	sp, fp, #28
   173f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   173f4:	bl	136a8 <__assert_fail@plt+0x1ae4>
   173f8:	mov	r0, #0
   173fc:	sub	sp, fp, #28
   17400:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17404:	push	{r4, sl, fp, lr}
   17408:	add	fp, sp, #8
   1740c:	sub	sp, sp, #104	; 0x68
   17410:	mov	r1, r0
   17414:	mov	r2, sp
   17418:	mov	r0, #3
   1741c:	bl	11b40 <__xstat64@plt>
   17420:	mov	r1, r0
   17424:	mov	r0, #0
   17428:	cmp	r1, #0
   1742c:	beq	17438 <lchmod@@Base+0x590>
   17430:	sub	sp, fp, #8
   17434:	pop	{r4, sl, fp, pc}
   17438:	ldr	r4, [sp, #16]
   1743c:	mov	r0, #32
   17440:	bl	19d50 <lchmod@@Base+0x2ea8>
   17444:	movw	r1, #317	; 0x13d
   17448:	strh	r1, [r0]
   1744c:	movw	r1, #4095	; 0xfff
   17450:	stmib	r0, {r1, r4}
   17454:	str	r1, [r0, #12]
   17458:	mov	r1, #0
   1745c:	strb	r1, [r0, #17]
   17460:	sub	sp, fp, #8
   17464:	pop	{r4, sl, fp, pc}
   17468:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1746c:	add	fp, sp, #24
   17470:	ldrb	r4, [r3, #1]
   17474:	ldr	ip, [fp, #8]
   17478:	bfc	r0, #12, #20
   1747c:	cmp	r4, #0
   17480:	beq	17560 <lchmod@@Base+0x6b8>
   17484:	cmp	r1, #0
   17488:	mov	lr, r1
   1748c:	add	r3, r3, #8
   17490:	mov	r9, #0
   17494:	movw	r8, #4095	; 0xfff
   17498:	movwne	lr, #3072	; 0xc00
   1749c:	mov	r5, r3
   174a0:	ldr	r7, [r3, #-4]
   174a4:	ldr	r3, [r3]
   174a8:	uxtb	r4, r4
   174ac:	ldr	r6, [r5, #4]
   174b0:	cmp	r4, #2
   174b4:	bic	r6, lr, r6
   174b8:	beq	174e4 <lchmod@@Base+0x63c>
   174bc:	cmp	r4, #3
   174c0:	bne	174f0 <lchmod@@Base+0x648>
   174c4:	and	r4, r3, r0
   174c8:	tst	r4, #146	; 0x92
   174cc:	mov	r3, r4
   174d0:	orrne	r3, r3, #146	; 0x92
   174d4:	tst	r4, #292	; 0x124
   174d8:	orrne	r3, r3, #292	; 0x124
   174dc:	tst	r4, #73	; 0x49
   174e0:	b	174ec <lchmod@@Base+0x644>
   174e4:	and	r4, r0, #73	; 0x49
   174e8:	orrs	r4, r4, r1
   174ec:	orrne	r3, r3, #73	; 0x49
   174f0:	cmp	r7, #0
   174f4:	mov	r4, r7
   174f8:	mvneq	r4, r2
   174fc:	bic	r4, r4, r6
   17500:	and	r3, r4, r3
   17504:	ldrb	r4, [r5, #-8]
   17508:	cmp	r4, #43	; 0x2b
   1750c:	beq	1753c <lchmod@@Base+0x694>
   17510:	cmp	r4, #45	; 0x2d
   17514:	beq	17544 <lchmod@@Base+0x69c>
   17518:	cmp	r4, #61	; 0x3d
   1751c:	bne	1754c <lchmod@@Base+0x6a4>
   17520:	mvn	r4, r7
   17524:	cmp	r7, #0
   17528:	orrne	r6, r6, r4
   1752c:	and	r0, r6, r0
   17530:	orr	r0, r3, r0
   17534:	bic	r3, r8, r6
   17538:	b	17548 <lchmod@@Base+0x6a0>
   1753c:	orr	r0, r3, r0
   17540:	b	17548 <lchmod@@Base+0x6a0>
   17544:	bic	r0, r0, r3
   17548:	orr	r9, r3, r9
   1754c:	ldrb	r4, [r5, #9]
   17550:	add	r3, r5, #16
   17554:	cmp	r4, #0
   17558:	bne	1749c <lchmod@@Base+0x5f4>
   1755c:	b	17564 <lchmod@@Base+0x6bc>
   17560:	mov	r9, #0
   17564:	cmp	ip, #0
   17568:	strne	r9, [ip]
   1756c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17570:	sub	sp, sp, #4
   17574:	push	{fp, lr}
   17578:	mov	fp, sp
   1757c:	sub	sp, sp, #4
   17580:	str	r3, [fp, #8]
   17584:	mov	r3, #0
   17588:	tst	r2, #64	; 0x40
   1758c:	addne	r3, fp, #8
   17590:	addne	r3, r3, #4
   17594:	strne	r3, [sp]
   17598:	ldrne	r3, [fp, #8]
   1759c:	bl	119f0 <openat64@plt>
   175a0:	bl	19654 <lchmod@@Base+0x27ac>
   175a4:	mov	sp, fp
   175a8:	pop	{fp, lr}
   175ac:	add	sp, sp, #4
   175b0:	bx	lr
   175b4:	push	{r4, r5, r6, sl, fp, lr}
   175b8:	add	fp, sp, #16
   175bc:	orr	r2, r2, #18688	; 0x4900
   175c0:	mov	r4, r3
   175c4:	orr	r2, r2, #524288	; 0x80000
   175c8:	bl	17570 <lchmod@@Base+0x6c8>
   175cc:	mov	r5, r0
   175d0:	mov	r0, #0
   175d4:	cmp	r5, #0
   175d8:	poplt	{r4, r5, r6, sl, fp, pc}
   175dc:	mov	r0, r5
   175e0:	bl	11abc <fdopendir@plt>
   175e4:	cmp	r0, #0
   175e8:	strne	r5, [r4]
   175ec:	popne	{r4, r5, r6, sl, fp, pc}
   175f0:	bl	11a08 <__errno_location@plt>
   175f4:	ldr	r6, [r0]
   175f8:	mov	r4, r0
   175fc:	mov	r0, r5
   17600:	bl	11b70 <close@plt>
   17604:	mov	r0, #0
   17608:	str	r6, [r4]
   1760c:	pop	{r4, r5, r6, sl, fp, pc}
   17610:	push	{r4, r5, fp, lr}
   17614:	add	fp, sp, #8
   17618:	cmp	r0, #0
   1761c:	beq	176b0 <lchmod@@Base+0x808>
   17620:	mov	r1, #47	; 0x2f
   17624:	mov	r4, r0
   17628:	bl	11a98 <strrchr@plt>
   1762c:	cmp	r0, #0
   17630:	mov	r5, r4
   17634:	addne	r5, r0, #1
   17638:	sub	r0, r5, r4
   1763c:	cmp	r0, #7
   17640:	blt	17694 <lchmod@@Base+0x7ec>
   17644:	movw	r1, #50333	; 0xc49d
   17648:	sub	r0, r5, #7
   1764c:	mov	r2, #7
   17650:	movt	r1, #1
   17654:	bl	11b58 <strncmp@plt>
   17658:	cmp	r0, #0
   1765c:	bne	17694 <lchmod@@Base+0x7ec>
   17660:	movw	r1, #50341	; 0xc4a5
   17664:	mov	r0, r5
   17668:	mov	r2, #3
   1766c:	movt	r1, #1
   17670:	bl	11b58 <strncmp@plt>
   17674:	cmp	r0, #0
   17678:	beq	17684 <lchmod@@Base+0x7dc>
   1767c:	mov	r4, r5
   17680:	b	17694 <lchmod@@Base+0x7ec>
   17684:	movw	r0, #53712	; 0xd1d0
   17688:	add	r4, r5, #3
   1768c:	movt	r0, #2
   17690:	str	r4, [r0]
   17694:	movw	r0, #53716	; 0xd1d4
   17698:	movt	r0, #2
   1769c:	str	r4, [r0]
   176a0:	movw	r0, #53752	; 0xd1f8
   176a4:	movt	r0, #2
   176a8:	str	r4, [r0]
   176ac:	pop	{r4, r5, fp, pc}
   176b0:	movw	r0, #53728	; 0xd1e0
   176b4:	mov	r1, #55	; 0x37
   176b8:	mov	r2, #1
   176bc:	movt	r0, #2
   176c0:	ldr	r3, [r0]
   176c4:	movw	r0, #50277	; 0xc465
   176c8:	movt	r0, #1
   176cc:	bl	118e8 <fwrite@plt>
   176d0:	bl	11b64 <abort@plt>
   176d4:	push	{r4, r5, r6, sl, fp, lr}
   176d8:	add	fp, sp, #16
   176dc:	mov	r4, r0
   176e0:	movw	r0, #53760	; 0xd200
   176e4:	movt	r0, #2
   176e8:	cmp	r4, #0
   176ec:	moveq	r4, r0
   176f0:	bl	11a08 <__errno_location@plt>
   176f4:	ldr	r6, [r0]
   176f8:	mov	r5, r0
   176fc:	mov	r0, r4
   17700:	mov	r1, #48	; 0x30
   17704:	bl	1a1b0 <lchmod@@Base+0x3308>
   17708:	str	r6, [r5]
   1770c:	pop	{r4, r5, r6, sl, fp, pc}
   17710:	movw	r1, #53760	; 0xd200
   17714:	cmp	r0, #0
   17718:	movt	r1, #2
   1771c:	movne	r1, r0
   17720:	ldr	r0, [r1]
   17724:	bx	lr
   17728:	movw	r2, #53760	; 0xd200
   1772c:	cmp	r0, #0
   17730:	movt	r2, #2
   17734:	movne	r2, r0
   17738:	str	r1, [r2]
   1773c:	bx	lr
   17740:	movw	r3, #53760	; 0xd200
   17744:	cmp	r0, #0
   17748:	movt	r3, #2
   1774c:	movne	r3, r0
   17750:	ubfx	r0, r1, #5, #3
   17754:	and	r1, r1, #31
   17758:	add	r0, r3, r0, lsl #2
   1775c:	ldr	r3, [r0, #8]
   17760:	eor	r2, r2, r3, lsr r1
   17764:	and	r2, r2, #1
   17768:	eor	r2, r3, r2, lsl r1
   1776c:	str	r2, [r0, #8]
   17770:	mov	r0, #1
   17774:	and	r0, r0, r3, lsr r1
   17778:	bx	lr
   1777c:	movw	r2, #53760	; 0xd200
   17780:	cmp	r0, #0
   17784:	movt	r2, #2
   17788:	movne	r2, r0
   1778c:	ldr	r0, [r2, #4]
   17790:	str	r1, [r2, #4]
   17794:	bx	lr
   17798:	movw	r3, #53760	; 0xd200
   1779c:	cmp	r0, #0
   177a0:	movt	r3, #2
   177a4:	movne	r3, r0
   177a8:	cmp	r1, #0
   177ac:	mov	r0, #10
   177b0:	cmpne	r2, #0
   177b4:	str	r0, [r3]
   177b8:	bne	177c8 <lchmod@@Base+0x920>
   177bc:	push	{fp, lr}
   177c0:	mov	fp, sp
   177c4:	bl	11b64 <abort@plt>
   177c8:	str	r1, [r3, #40]	; 0x28
   177cc:	str	r2, [r3, #44]	; 0x2c
   177d0:	bx	lr
   177d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   177d8:	add	fp, sp, #28
   177dc:	sub	sp, sp, #20
   177e0:	mov	r7, r0
   177e4:	ldr	r0, [fp, #8]
   177e8:	movw	r5, #53760	; 0xd200
   177ec:	mov	r8, r3
   177f0:	mov	r9, r2
   177f4:	mov	sl, r1
   177f8:	movt	r5, #2
   177fc:	cmp	r0, #0
   17800:	movne	r5, r0
   17804:	bl	11a08 <__errno_location@plt>
   17808:	mov	r4, r0
   1780c:	ldm	r5, {r0, r1}
   17810:	ldr	r2, [r5, #40]	; 0x28
   17814:	ldr	r3, [r5, #44]	; 0x2c
   17818:	add	r5, r5, #8
   1781c:	ldr	r6, [r4]
   17820:	stm	sp, {r0, r1, r5}
   17824:	str	r2, [sp, #12]
   17828:	str	r3, [sp, #16]
   1782c:	mov	r0, r7
   17830:	mov	r1, sl
   17834:	mov	r2, r9
   17838:	mov	r3, r8
   1783c:	bl	1784c <lchmod@@Base+0x9a4>
   17840:	str	r6, [r4]
   17844:	sub	sp, fp, #28
   17848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1784c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17850:	add	fp, sp, #28
   17854:	sub	sp, sp, #156	; 0x9c
   17858:	str	r0, [sp, #80]	; 0x50
   1785c:	ldr	r0, [fp, #12]
   17860:	mov	r6, r1
   17864:	mov	r9, r3
   17868:	str	r2, [fp, #-84]	; 0xffffffac
   1786c:	and	r1, r0, #4
   17870:	str	r1, [sp, #32]
   17874:	and	r1, r0, #1
   17878:	str	r1, [sp, #36]	; 0x24
   1787c:	ubfx	r4, r0, #1, #1
   17880:	bl	11900 <__ctype_get_mb_cur_max@plt>
   17884:	str	r0, [sp, #40]	; 0x28
   17888:	ldr	r0, [fp, #24]
   1788c:	ldr	r7, [fp, #8]
   17890:	mov	r1, #0
   17894:	mov	r5, #1
   17898:	str	r1, [fp, #-56]	; 0xffffffc8
   1789c:	mov	r1, #0
   178a0:	str	r1, [sp, #60]	; 0x3c
   178a4:	str	r0, [sp, #76]	; 0x4c
   178a8:	ldr	r0, [fp, #20]
   178ac:	str	r0, [sp, #72]	; 0x48
   178b0:	mov	r0, #0
   178b4:	str	r0, [sp, #56]	; 0x38
   178b8:	mov	r0, #0
   178bc:	str	r0, [sp, #92]	; 0x5c
   178c0:	mov	r0, #0
   178c4:	str	r0, [fp, #-76]	; 0xffffffb4
   178c8:	mov	r0, #0
   178cc:	cmp	r7, #10
   178d0:	bhi	18850 <lchmod@@Base+0x19a8>
   178d4:	add	r1, pc, #28
   178d8:	mov	sl, r6
   178dc:	ldr	r6, [sp, #80]	; 0x50
   178e0:	ldr	ip, [fp, #-84]	; 0xffffffac
   178e4:	mov	r8, #0
   178e8:	mov	r2, #1
   178ec:	mov	r3, #0
   178f0:	mov	lr, r9
   178f4:	ldr	pc, [r1, r7, lsl #2]
   178f8:	ldrdeq	r7, [r1], -ip
   178fc:	andeq	r7, r1, r8, lsl #20
   17900:	andeq	r7, r1, ip, asr #19
   17904:	andeq	r7, r1, r4, asr #19
   17908:	strdeq	r7, [r1], -ip
   1790c:	andeq	r7, r1, r0, asr sl
   17910:	andeq	r7, r1, ip, ror #19
   17914:	andeq	r7, r1, ip, lsr #21
   17918:	andeq	r7, r1, r4, lsr #18
   1791c:	andeq	r7, r1, r4, lsr #18
   17920:	andeq	r7, r1, ip, asr #18
   17924:	movw	r0, #50423	; 0xc4f7
   17928:	mov	r1, r7
   1792c:	movt	r0, #1
   17930:	bl	1925c <lchmod@@Base+0x23b4>
   17934:	str	r0, [sp, #72]	; 0x48
   17938:	movw	r0, #50425	; 0xc4f9
   1793c:	mov	r1, r7
   17940:	movt	r0, #1
   17944:	bl	1925c <lchmod@@Base+0x23b4>
   17948:	str	r0, [sp, #76]	; 0x4c
   1794c:	str	r5, [fp, #-48]	; 0xffffffd0
   17950:	mov	r8, #0
   17954:	mov	r5, r7
   17958:	tst	r4, #1
   1795c:	bne	17994 <lchmod@@Base+0xaec>
   17960:	ldr	r0, [sp, #72]	; 0x48
   17964:	ldrb	r0, [r0]
   17968:	cmp	r0, #0
   1796c:	beq	17994 <lchmod@@Base+0xaec>
   17970:	ldr	r1, [sp, #72]	; 0x48
   17974:	mov	r8, #0
   17978:	add	r1, r1, #1
   1797c:	cmp	r8, sl
   17980:	strbcc	r0, [r6, r8]
   17984:	ldrb	r0, [r1, r8]
   17988:	add	r8, r8, #1
   1798c:	cmp	r0, #0
   17990:	bne	1797c <lchmod@@Base+0xad4>
   17994:	ldr	r7, [sp, #76]	; 0x4c
   17998:	mov	r0, r7
   1799c:	bl	119cc <strlen@plt>
   179a0:	str	r7, [sp, #92]	; 0x5c
   179a4:	mov	r7, r5
   179a8:	ldr	ip, [fp, #-84]	; 0xffffffac
   179ac:	ldr	r5, [fp, #-48]	; 0xffffffd0
   179b0:	str	r0, [fp, #-76]	; 0xffffffb4
   179b4:	mov	r2, #1
   179b8:	mov	r3, r4
   179bc:	mov	lr, r9
   179c0:	b	17aac <lchmod@@Base+0xc04>
   179c4:	mov	r0, #1
   179c8:	b	17a08 <lchmod@@Base+0xb60>
   179cc:	tst	r4, #1
   179d0:	bne	17a08 <lchmod@@Base+0xb60>
   179d4:	mov	r2, r0
   179d8:	b	17a30 <lchmod@@Base+0xb88>
   179dc:	mov	r7, #0
   179e0:	mov	r8, #0
   179e4:	mov	r2, r0
   179e8:	b	17aa8 <lchmod@@Base+0xc00>
   179ec:	mov	r0, #1
   179f0:	mov	r8, #0
   179f4:	mov	r7, #5
   179f8:	b	17a64 <lchmod@@Base+0xbbc>
   179fc:	mov	r2, #1
   17a00:	tst	r4, #1
   17a04:	beq	17a30 <lchmod@@Base+0xb88>
   17a08:	mov	r1, #1
   17a0c:	mov	r8, #0
   17a10:	mov	r7, #2
   17a14:	mov	r2, r0
   17a18:	mov	r3, #1
   17a1c:	str	r1, [fp, #-76]	; 0xffffffb4
   17a20:	movw	r1, #50425	; 0xc4f9
   17a24:	movt	r1, #1
   17a28:	str	r1, [sp, #92]	; 0x5c
   17a2c:	b	17aac <lchmod@@Base+0xc04>
   17a30:	cmp	sl, #0
   17a34:	mov	r8, #1
   17a38:	mov	r7, #2
   17a3c:	movne	r0, #39	; 0x27
   17a40:	strbne	r0, [r6]
   17a44:	movw	r0, #50425	; 0xc4f9
   17a48:	movt	r0, #1
   17a4c:	b	17a9c <lchmod@@Base+0xbf4>
   17a50:	mov	r7, #5
   17a54:	tst	r4, #1
   17a58:	beq	17a80 <lchmod@@Base+0xbd8>
   17a5c:	mov	r0, #1
   17a60:	mov	r8, #0
   17a64:	str	r0, [fp, #-76]	; 0xffffffb4
   17a68:	movw	r0, #50421	; 0xc4f5
   17a6c:	mov	r2, #1
   17a70:	mov	r3, #1
   17a74:	movt	r0, #1
   17a78:	str	r0, [sp, #92]	; 0x5c
   17a7c:	b	17aac <lchmod@@Base+0xc04>
   17a80:	cmp	sl, #0
   17a84:	mov	r8, #1
   17a88:	mov	r2, #1
   17a8c:	movne	r0, #34	; 0x22
   17a90:	strbne	r0, [r6]
   17a94:	movw	r0, #50421	; 0xc4f5
   17a98:	movt	r0, #1
   17a9c:	str	r0, [sp, #92]	; 0x5c
   17aa0:	mov	r0, #1
   17aa4:	str	r0, [fp, #-76]	; 0xffffffb4
   17aa8:	mov	r3, #0
   17aac:	ldr	r0, [fp, #16]
   17ab0:	str	r3, [fp, #-72]	; 0xffffffb8
   17ab4:	str	r7, [fp, #-64]	; 0xffffffc0
   17ab8:	str	r2, [sp, #84]	; 0x54
   17abc:	cmp	r0, #0
   17ac0:	movwne	r0, #1
   17ac4:	and	r0, r0, r3
   17ac8:	str	r0, [fp, #-88]	; 0xffffffa8
   17acc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   17ad0:	cmp	r0, #0
   17ad4:	movwne	r0, #1
   17ad8:	subs	r4, r7, #2
   17adc:	mov	r7, #0
   17ae0:	and	r1, r0, r3
   17ae4:	str	r4, [fp, #-80]	; 0xffffffb0
   17ae8:	and	r1, r2, r1
   17aec:	str	r1, [sp, #48]	; 0x30
   17af0:	clz	r1, r4
   17af4:	lsr	r1, r1, #5
   17af8:	and	r1, r1, r3
   17afc:	eor	r3, r3, #1
   17b00:	str	r1, [sp, #64]	; 0x40
   17b04:	mov	r1, r4
   17b08:	str	r3, [sp, #88]	; 0x58
   17b0c:	movwne	r1, #1
   17b10:	orr	r3, r1, r3
   17b14:	and	r1, r1, r2
   17b18:	and	r0, r0, r1
   17b1c:	str	r3, [sp, #68]	; 0x44
   17b20:	str	r1, [fp, #-68]	; 0xffffffbc
   17b24:	str	r0, [fp, #-60]	; 0xffffffc4
   17b28:	eor	r0, r2, #1
   17b2c:	str	r0, [sp, #52]	; 0x34
   17b30:	cmn	lr, #1
   17b34:	beq	17b44 <lchmod@@Base+0xc9c>
   17b38:	cmp	r7, lr
   17b3c:	bne	17b50 <lchmod@@Base+0xca8>
   17b40:	b	18678 <lchmod@@Base+0x17d0>
   17b44:	ldrb	r0, [ip, r7]
   17b48:	cmp	r0, #0
   17b4c:	beq	18680 <lchmod@@Base+0x17d8>
   17b50:	ldr	r0, [fp, #-60]	; 0xffffffc4
   17b54:	mov	r9, #0
   17b58:	str	r5, [fp, #-48]	; 0xffffffd0
   17b5c:	cmp	r0, #0
   17b60:	beq	17b94 <lchmod@@Base+0xcec>
   17b64:	ldr	r0, [fp, #-76]	; 0xffffffb4
   17b68:	add	r4, r7, r0
   17b6c:	cmp	r0, #2
   17b70:	bcc	17b8c <lchmod@@Base+0xce4>
   17b74:	cmn	lr, #1
   17b78:	bne	17b8c <lchmod@@Base+0xce4>
   17b7c:	mov	r0, ip
   17b80:	bl	119cc <strlen@plt>
   17b84:	ldr	ip, [fp, #-84]	; 0xffffffac
   17b88:	mov	lr, r0
   17b8c:	cmp	r4, lr
   17b90:	bls	17b9c <lchmod@@Base+0xcf4>
   17b94:	mov	r0, #0
   17b98:	b	17bdc <lchmod@@Base+0xd34>
   17b9c:	ldr	r1, [sp, #92]	; 0x5c
   17ba0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   17ba4:	add	r0, ip, r7
   17ba8:	mov	r4, lr
   17bac:	bl	11864 <memcmp@plt>
   17bb0:	ldr	r2, [sp, #88]	; 0x58
   17bb4:	cmp	r0, #0
   17bb8:	mov	r1, r0
   17bbc:	movwne	r1, #1
   17bc0:	orr	r1, r1, r2
   17bc4:	tst	r1, #1
   17bc8:	beq	18710 <lchmod@@Base+0x1868>
   17bcc:	ldr	ip, [fp, #-84]	; 0xffffffac
   17bd0:	clz	r0, r0
   17bd4:	mov	lr, r4
   17bd8:	lsr	r0, r0, #5
   17bdc:	str	r0, [fp, #-52]	; 0xffffffcc
   17be0:	ldrb	r5, [ip, r7]
   17be4:	cmp	r5, #126	; 0x7e
   17be8:	bhi	17fa0 <lchmod@@Base+0x10f8>
   17bec:	add	r3, pc, #16
   17bf0:	mov	r4, #1
   17bf4:	mov	r2, #110	; 0x6e
   17bf8:	mov	r0, #97	; 0x61
   17bfc:	mov	r1, #0
   17c00:	ldr	pc, [r3, r5, lsl #2]
   17c04:	muleq	r1, ip, lr
   17c08:	andeq	r7, r1, r0, lsr #31
   17c0c:	andeq	r7, r1, r0, lsr #31
   17c10:	andeq	r7, r1, r0, lsr #31
   17c14:	andeq	r7, r1, r0, lsr #31
   17c18:	andeq	r7, r1, r0, lsr #31
   17c1c:	andeq	r7, r1, r0, lsr #31
   17c20:	andeq	r8, r1, r4, asr r0
   17c24:	andeq	r7, r1, ip, ror lr
   17c28:	andeq	r7, r1, r4, ror lr
   17c2c:	andeq	r7, r1, r8, lsl #29
   17c30:	andeq	r7, r1, r8, lsl #30
   17c34:	andeq	r7, r1, ip, ror #28
   17c38:	andeq	r7, r1, r4, lsl #29
   17c3c:	andeq	r7, r1, r0, lsr #31
   17c40:	andeq	r7, r1, r0, lsr #31
   17c44:	andeq	r7, r1, r0, lsr #31
   17c48:	andeq	r7, r1, r0, lsr #31
   17c4c:	andeq	r7, r1, r0, lsr #31
   17c50:	andeq	r7, r1, r0, lsr #31
   17c54:	andeq	r7, r1, r0, lsr #31
   17c58:	andeq	r7, r1, r0, lsr #31
   17c5c:	andeq	r7, r1, r0, lsr #31
   17c60:	andeq	r7, r1, r0, lsr #31
   17c64:	andeq	r7, r1, r0, lsr #31
   17c68:	andeq	r7, r1, r0, lsr #31
   17c6c:	andeq	r7, r1, r0, lsr #31
   17c70:	andeq	r7, r1, r0, lsr #31
   17c74:	andeq	r7, r1, r0, lsr #31
   17c78:	andeq	r7, r1, r0, lsr #31
   17c7c:	andeq	r7, r1, r0, lsr #31
   17c80:	andeq	r7, r1, r0, lsr #31
   17c84:	andeq	r8, r1, ip
   17c88:	andeq	r8, r1, r0, lsl r0
   17c8c:	andeq	r8, r1, r0, lsl r0
   17c90:	andeq	r7, r1, r4, lsl lr
   17c94:	andeq	r8, r1, r0, lsl r0
   17c98:	andeq	r7, r1, r0, lsl #28
   17c9c:	andeq	r8, r1, r0, lsl r0
   17ca0:	andeq	r7, r1, r0, lsl pc
   17ca4:	andeq	r8, r1, r0, lsl r0
   17ca8:	andeq	r8, r1, r0, lsl r0
   17cac:	andeq	r8, r1, r0, lsl r0
   17cb0:	andeq	r7, r1, r0, lsl #28
   17cb4:	andeq	r7, r1, r0, lsl #28
   17cb8:	andeq	r7, r1, r0, lsl #28
   17cbc:	andeq	r7, r1, r0, lsl #28
   17cc0:	andeq	r7, r1, r0, lsl #28
   17cc4:	andeq	r7, r1, r0, lsl #28
   17cc8:	andeq	r7, r1, r0, lsl #28
   17ccc:	andeq	r7, r1, r0, lsl #28
   17cd0:	andeq	r7, r1, r0, lsl #28
   17cd4:	andeq	r7, r1, r0, lsl #28
   17cd8:	andeq	r7, r1, r0, lsl #28
   17cdc:	andeq	r7, r1, r0, lsl #28
   17ce0:	andeq	r7, r1, r0, lsl #28
   17ce4:	andeq	r7, r1, r0, lsl #28
   17ce8:	andeq	r7, r1, r0, lsl #28
   17cec:	andeq	r7, r1, r0, lsl #28
   17cf0:	andeq	r8, r1, r0, lsl r0
   17cf4:	andeq	r8, r1, r0, lsl r0
   17cf8:	andeq	r8, r1, r0, lsl r0
   17cfc:	andeq	r8, r1, r0, lsl r0
   17d00:	ldrdeq	r7, [r1], -ip
   17d04:	andeq	r7, r1, r0, lsr #31
   17d08:	andeq	r7, r1, r0, lsl #28
   17d0c:	andeq	r7, r1, r0, lsl #28
   17d10:	andeq	r7, r1, r0, lsl #28
   17d14:	andeq	r7, r1, r0, lsl #28
   17d18:	andeq	r7, r1, r0, lsl #28
   17d1c:	andeq	r7, r1, r0, lsl #28
   17d20:	andeq	r7, r1, r0, lsl #28
   17d24:	andeq	r7, r1, r0, lsl #28
   17d28:	andeq	r7, r1, r0, lsl #28
   17d2c:	andeq	r7, r1, r0, lsl #28
   17d30:	andeq	r7, r1, r0, lsl #28
   17d34:	andeq	r7, r1, r0, lsl #28
   17d38:	andeq	r7, r1, r0, lsl #28
   17d3c:	andeq	r7, r1, r0, lsl #28
   17d40:	andeq	r7, r1, r0, lsl #28
   17d44:	andeq	r7, r1, r0, lsl #28
   17d48:	andeq	r7, r1, r0, lsl #28
   17d4c:	andeq	r7, r1, r0, lsl #28
   17d50:	andeq	r7, r1, r0, lsl #28
   17d54:	andeq	r7, r1, r0, lsl #28
   17d58:	andeq	r7, r1, r0, lsl #28
   17d5c:	andeq	r7, r1, r0, lsl #28
   17d60:	andeq	r7, r1, r0, lsl #28
   17d64:	andeq	r7, r1, r0, lsl #28
   17d68:	andeq	r7, r1, r0, lsl #28
   17d6c:	andeq	r7, r1, r0, lsl #28
   17d70:	andeq	r8, r1, r0, lsl r0
   17d74:	andeq	r7, r1, r8, asr #28
   17d78:	andeq	r7, r1, r0, lsl #28
   17d7c:	andeq	r8, r1, r0, lsl r0
   17d80:	andeq	r7, r1, r0, lsl #28
   17d84:	andeq	r8, r1, r0, lsl r0
   17d88:	andeq	r7, r1, r0, lsl #28
   17d8c:	andeq	r7, r1, r0, lsl #28
   17d90:	andeq	r7, r1, r0, lsl #28
   17d94:	andeq	r7, r1, r0, lsl #28
   17d98:	andeq	r7, r1, r0, lsl #28
   17d9c:	andeq	r7, r1, r0, lsl #28
   17da0:	andeq	r7, r1, r0, lsl #28
   17da4:	andeq	r7, r1, r0, lsl #28
   17da8:	andeq	r7, r1, r0, lsl #28
   17dac:	andeq	r7, r1, r0, lsl #28
   17db0:	andeq	r7, r1, r0, lsl #28
   17db4:	andeq	r7, r1, r0, lsl #28
   17db8:	andeq	r7, r1, r0, lsl #28
   17dbc:	andeq	r7, r1, r0, lsl #28
   17dc0:	andeq	r7, r1, r0, lsl #28
   17dc4:	andeq	r7, r1, r0, lsl #28
   17dc8:	andeq	r7, r1, r0, lsl #28
   17dcc:	andeq	r7, r1, r0, lsl #28
   17dd0:	andeq	r7, r1, r0, lsl #28
   17dd4:	andeq	r7, r1, r0, lsl #28
   17dd8:	andeq	r7, r1, r0, lsl #28
   17ddc:	andeq	r7, r1, r0, lsl #28
   17de0:	andeq	r7, r1, r0, lsl #28
   17de4:	andeq	r7, r1, r0, lsl #28
   17de8:	andeq	r7, r1, r0, lsl #28
   17dec:	andeq	r7, r1, r0, lsl #28
   17df0:	andeq	r7, r1, r8, lsr #28
   17df4:	andeq	r8, r1, r0, lsl r0
   17df8:	andeq	r7, r1, r8, lsr #28
   17dfc:	andeq	r7, r1, r4, lsl lr
   17e00:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17e04:	cmp	r0, #0
   17e08:	beq	18068 <lchmod@@Base+0x11c0>
   17e0c:	ldr	r0, [fp, #16]
   17e10:	b	1806c <lchmod@@Base+0x11c4>
   17e14:	mov	r4, #0
   17e18:	cmp	r7, #0
   17e1c:	beq	1800c <lchmod@@Base+0x1164>
   17e20:	mov	r9, #0
   17e24:	b	17e00 <lchmod@@Base+0xf58>
   17e28:	mov	r4, #0
   17e2c:	cmn	lr, #1
   17e30:	beq	17ff0 <lchmod@@Base+0x1148>
   17e34:	cmp	r7, #0
   17e38:	bne	17e20 <lchmod@@Base+0xf78>
   17e3c:	cmp	lr, #1
   17e40:	beq	1800c <lchmod@@Base+0x1164>
   17e44:	b	17e20 <lchmod@@Base+0xf78>
   17e48:	ldr	r0, [fp, #-64]	; 0xffffffc0
   17e4c:	cmp	r0, #2
   17e50:	bne	18030 <lchmod@@Base+0x1188>
   17e54:	ldr	r0, [fp, #-72]	; 0xffffffb8
   17e58:	tst	r0, #1
   17e5c:	bne	1872c <lchmod@@Base+0x1884>
   17e60:	mov	r9, #0
   17e64:	mov	r0, #92	; 0x5c
   17e68:	b	18044 <lchmod@@Base+0x119c>
   17e6c:	mov	r0, #102	; 0x66
   17e70:	b	18054 <lchmod@@Base+0x11ac>
   17e74:	mov	r2, #116	; 0x74
   17e78:	b	17e88 <lchmod@@Base+0xfe0>
   17e7c:	mov	r0, #98	; 0x62
   17e80:	b	18054 <lchmod@@Base+0x11ac>
   17e84:	mov	r2, #114	; 0x72
   17e88:	ldr	r0, [sp, #68]	; 0x44
   17e8c:	tst	r0, #1
   17e90:	mov	r0, r2
   17e94:	bne	18054 <lchmod@@Base+0x11ac>
   17e98:	b	1872c <lchmod@@Base+0x1884>
   17e9c:	ldr	r0, [sp, #84]	; 0x54
   17ea0:	tst	r0, #1
   17ea4:	beq	18144 <lchmod@@Base+0x129c>
   17ea8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   17eac:	tst	r0, #1
   17eb0:	bne	1883c <lchmod@@Base+0x1994>
   17eb4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   17eb8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17ebc:	cmp	r0, #2
   17ec0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   17ec4:	movwne	r0, #1
   17ec8:	orr	r0, r0, r2
   17ecc:	tst	r0, #1
   17ed0:	beq	18514 <lchmod@@Base+0x166c>
   17ed4:	mov	r0, r8
   17ed8:	b	18548 <lchmod@@Base+0x16a0>
   17edc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   17ee0:	mov	r9, #0
   17ee4:	mov	r5, #63	; 0x3f
   17ee8:	cmp	r0, #5
   17eec:	beq	182f8 <lchmod@@Base+0x1450>
   17ef0:	cmp	r0, #2
   17ef4:	bne	1839c <lchmod@@Base+0x14f4>
   17ef8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   17efc:	tst	r0, #1
   17f00:	beq	183a0 <lchmod@@Base+0x14f8>
   17f04:	b	1872c <lchmod@@Base+0x1884>
   17f08:	mov	r0, #118	; 0x76
   17f0c:	b	18054 <lchmod@@Base+0x11ac>
   17f10:	mov	r0, #1
   17f14:	mov	r5, #39	; 0x27
   17f18:	str	r0, [sp, #60]	; 0x3c
   17f1c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   17f20:	cmp	r0, #2
   17f24:	bne	17f98 <lchmod@@Base+0x10f0>
   17f28:	ldr	r0, [fp, #-72]	; 0xffffffb8
   17f2c:	tst	r0, #1
   17f30:	bne	1872c <lchmod@@Base+0x1884>
   17f34:	ldr	r2, [sp, #56]	; 0x38
   17f38:	clz	r1, sl
   17f3c:	mov	r9, #0
   17f40:	lsr	r1, r1, #5
   17f44:	cmp	r2, #0
   17f48:	mov	r0, r2
   17f4c:	movwne	r0, #1
   17f50:	orrs	r0, r0, r1
   17f54:	moveq	r2, sl
   17f58:	moveq	sl, r0
   17f5c:	cmp	r8, sl
   17f60:	str	r2, [sp, #56]	; 0x38
   17f64:	movcc	r0, #39	; 0x27
   17f68:	strbcc	r0, [r6, r8]
   17f6c:	add	r0, r8, #1
   17f70:	cmp	r0, sl
   17f74:	movcc	r1, #92	; 0x5c
   17f78:	strbcc	r1, [r6, r0]
   17f7c:	add	r0, r8, #2
   17f80:	add	r8, r8, #3
   17f84:	cmp	r0, sl
   17f88:	movcc	r1, #39	; 0x27
   17f8c:	strbcc	r1, [r6, r0]
   17f90:	mov	r0, #0
   17f94:	str	r0, [fp, #-56]	; 0xffffffc8
   17f98:	mov	r4, #1
   17f9c:	b	17e00 <lchmod@@Base+0xf58>
   17fa0:	ldr	r0, [sp, #40]	; 0x28
   17fa4:	cmp	r0, #1
   17fa8:	bne	18170 <lchmod@@Base+0x12c8>
   17fac:	str	lr, [sp, #28]
   17fb0:	bl	1199c <__ctype_b_loc@plt>
   17fb4:	ldr	r0, [r0]
   17fb8:	ldr	ip, [fp, #-84]	; 0xffffffac
   17fbc:	mov	r1, #1
   17fc0:	add	r0, r0, r5, lsl #1
   17fc4:	ldrb	r0, [r0, #1]
   17fc8:	ubfx	r4, r0, #6, #1
   17fcc:	ldr	r0, [sp, #52]	; 0x34
   17fd0:	mov	r2, r1
   17fd4:	cmp	r1, #1
   17fd8:	orr	r0, r4, r0
   17fdc:	bhi	183a8 <lchmod@@Base+0x1500>
   17fe0:	tst	r0, #1
   17fe4:	beq	183a8 <lchmod@@Base+0x1500>
   17fe8:	ldr	lr, [sp, #28]
   17fec:	b	17e00 <lchmod@@Base+0xf58>
   17ff0:	cmp	r7, #0
   17ff4:	ldrbeq	r0, [ip, #1]
   17ff8:	cmpeq	r0, #0
   17ffc:	beq	1800c <lchmod@@Base+0x1164>
   18000:	mvn	lr, #0
   18004:	mov	r9, #0
   18008:	b	17e00 <lchmod@@Base+0xf58>
   1800c:	mov	r1, #1
   18010:	ldr	r0, [fp, #-64]	; 0xffffffc0
   18014:	cmp	r0, #2
   18018:	bne	18028 <lchmod@@Base+0x1180>
   1801c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18020:	tst	r0, #1
   18024:	bne	1872c <lchmod@@Base+0x1884>
   18028:	mov	r4, r1
   1802c:	b	17e00 <lchmod@@Base+0xf58>
   18030:	ldr	r1, [sp, #48]	; 0x30
   18034:	mov	r9, #0
   18038:	mov	r0, #92	; 0x5c
   1803c:	cmp	r1, #0
   18040:	beq	18054 <lchmod@@Base+0x11ac>
   18044:	mov	r4, #0
   18048:	cmp	r9, #0
   1804c:	beq	185e0 <lchmod@@Base+0x1738>
   18050:	b	1861c <lchmod@@Base+0x1774>
   18054:	ldr	r1, [sp, #84]	; 0x54
   18058:	mov	r4, #0
   1805c:	mov	r9, #0
   18060:	tst	r1, #1
   18064:	bne	180a4 <lchmod@@Base+0x11fc>
   18068:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1806c:	cmp	r0, #0
   18070:	mov	r0, r5
   18074:	beq	18098 <lchmod@@Base+0x11f0>
   18078:	ldr	r1, [fp, #16]
   1807c:	ubfx	r0, r5, #5, #3
   18080:	mov	r2, #1
   18084:	ldr	r0, [r1, r0, lsl #2]
   18088:	and	r1, r5, #31
   1808c:	tst	r0, r2, lsl r1
   18090:	mov	r0, r5
   18094:	bne	180a4 <lchmod@@Base+0x11fc>
   18098:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1809c:	cmp	r1, #0
   180a0:	beq	185d8 <lchmod@@Base+0x1730>
   180a4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   180a8:	tst	r1, #1
   180ac:	bne	18704 <lchmod@@Base+0x185c>
   180b0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   180b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   180b8:	cmp	r1, #2
   180bc:	ldr	r1, [fp, #-80]	; 0xffffffb0
   180c0:	movwne	r1, #1
   180c4:	orr	r1, r1, r2
   180c8:	tst	r1, #1
   180cc:	beq	180d8 <lchmod@@Base+0x1230>
   180d0:	ldr	r5, [fp, #-48]	; 0xffffffd0
   180d4:	b	18114 <lchmod@@Base+0x126c>
   180d8:	cmp	r8, sl
   180dc:	ldr	r5, [fp, #-48]	; 0xffffffd0
   180e0:	movcc	r1, #39	; 0x27
   180e4:	strbcc	r1, [r6, r8]
   180e8:	add	r1, r8, #1
   180ec:	cmp	r1, sl
   180f0:	movcc	r2, #36	; 0x24
   180f4:	strbcc	r2, [r6, r1]
   180f8:	add	r1, r8, #2
   180fc:	add	r8, r8, #3
   18100:	cmp	r1, sl
   18104:	movcc	r2, #39	; 0x27
   18108:	strbcc	r2, [r6, r1]
   1810c:	mov	r1, #1
   18110:	str	r1, [fp, #-56]	; 0xffffffc8
   18114:	cmp	r8, sl
   18118:	movcc	r1, #92	; 0x5c
   1811c:	strbcc	r1, [r6, r8]
   18120:	add	r8, r8, #1
   18124:	cmp	r8, sl
   18128:	and	r5, r5, r4
   1812c:	add	r7, r7, #1
   18130:	strbcc	r0, [r6, r8]
   18134:	add	r8, r8, #1
   18138:	cmn	lr, #1
   1813c:	bne	17b38 <lchmod@@Base+0xc90>
   18140:	b	17b44 <lchmod@@Base+0xc9c>
   18144:	ldr	r0, [sp, #36]	; 0x24
   18148:	mov	r4, #0
   1814c:	mov	r9, #0
   18150:	mov	r5, #0
   18154:	cmp	r0, #0
   18158:	beq	18068 <lchmod@@Base+0x11c0>
   1815c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   18160:	add	r7, r7, #1
   18164:	cmn	lr, #1
   18168:	bne	17b38 <lchmod@@Base+0xc90>
   1816c:	b	17b44 <lchmod@@Base+0xc9c>
   18170:	mov	r0, #0
   18174:	cmn	lr, #1
   18178:	str	r0, [fp, #-36]	; 0xffffffdc
   1817c:	str	r0, [fp, #-40]	; 0xffffffd8
   18180:	bne	18194 <lchmod@@Base+0x12ec>
   18184:	mov	r0, ip
   18188:	bl	119cc <strlen@plt>
   1818c:	ldr	ip, [fp, #-84]	; 0xffffffac
   18190:	mov	lr, r0
   18194:	add	r0, ip, r7
   18198:	mov	r4, #1
   1819c:	mov	r6, #0
   181a0:	str	lr, [sp, #28]
   181a4:	str	r0, [sp, #24]
   181a8:	sub	r0, fp, #40	; 0x28
   181ac:	mov	r3, r0
   181b0:	str	r6, [sp, #44]	; 0x2c
   181b4:	add	r6, r6, r7
   181b8:	sub	r0, fp, #44	; 0x2c
   181bc:	add	r1, ip, r6
   181c0:	sub	r2, lr, r6
   181c4:	bl	1b71c <lchmod@@Base+0x4874>
   181c8:	cmp	r0, #0
   181cc:	beq	18664 <lchmod@@Base+0x17bc>
   181d0:	cmn	r0, #1
   181d4:	beq	18624 <lchmod@@Base+0x177c>
   181d8:	ldr	lr, [sp, #28]
   181dc:	cmn	r0, #2
   181e0:	beq	1862c <lchmod@@Base+0x1784>
   181e4:	ldr	r2, [sp, #64]	; 0x40
   181e8:	cmp	r0, #2
   181ec:	mov	r1, #0
   181f0:	movwcc	r1, #1
   181f4:	eor	r2, r2, #1
   181f8:	orrs	r1, r2, r1
   181fc:	bne	182bc <lchmod@@Base+0x1414>
   18200:	ldr	r1, [sp, #44]	; 0x2c
   18204:	ldr	r2, [sp, #24]
   18208:	add	r1, r2, r1
   1820c:	mov	r2, #1
   18210:	ldrb	r3, [r1, r2]
   18214:	sub	r3, r3, #91	; 0x5b
   18218:	cmp	r3, #33	; 0x21
   1821c:	bhi	182b0 <lchmod@@Base+0x1408>
   18220:	add	r6, pc, #0
   18224:	ldr	pc, [r6, r3, lsl #2]
   18228:	andeq	r8, r1, r4, lsr #14
   1822c:	andeq	r8, r1, r4, lsr #14
   18230:			; <UNDEFINED> instruction: 0x000182b0
   18234:	andeq	r8, r1, r4, lsr #14
   18238:			; <UNDEFINED> instruction: 0x000182b0
   1823c:	andeq	r8, r1, r4, lsr #14
   18240:			; <UNDEFINED> instruction: 0x000182b0
   18244:			; <UNDEFINED> instruction: 0x000182b0
   18248:			; <UNDEFINED> instruction: 0x000182b0
   1824c:			; <UNDEFINED> instruction: 0x000182b0
   18250:			; <UNDEFINED> instruction: 0x000182b0
   18254:			; <UNDEFINED> instruction: 0x000182b0
   18258:			; <UNDEFINED> instruction: 0x000182b0
   1825c:			; <UNDEFINED> instruction: 0x000182b0
   18260:			; <UNDEFINED> instruction: 0x000182b0
   18264:			; <UNDEFINED> instruction: 0x000182b0
   18268:			; <UNDEFINED> instruction: 0x000182b0
   1826c:			; <UNDEFINED> instruction: 0x000182b0
   18270:			; <UNDEFINED> instruction: 0x000182b0
   18274:			; <UNDEFINED> instruction: 0x000182b0
   18278:			; <UNDEFINED> instruction: 0x000182b0
   1827c:			; <UNDEFINED> instruction: 0x000182b0
   18280:			; <UNDEFINED> instruction: 0x000182b0
   18284:			; <UNDEFINED> instruction: 0x000182b0
   18288:			; <UNDEFINED> instruction: 0x000182b0
   1828c:			; <UNDEFINED> instruction: 0x000182b0
   18290:			; <UNDEFINED> instruction: 0x000182b0
   18294:			; <UNDEFINED> instruction: 0x000182b0
   18298:			; <UNDEFINED> instruction: 0x000182b0
   1829c:			; <UNDEFINED> instruction: 0x000182b0
   182a0:			; <UNDEFINED> instruction: 0x000182b0
   182a4:			; <UNDEFINED> instruction: 0x000182b0
   182a8:			; <UNDEFINED> instruction: 0x000182b0
   182ac:	andeq	r8, r1, r4, lsr #14
   182b0:	add	r2, r2, #1
   182b4:	cmp	r2, r0
   182b8:	bcc	18210 <lchmod@@Base+0x1368>
   182bc:	ldr	r6, [sp, #44]	; 0x2c
   182c0:	add	r6, r0, r6
   182c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   182c8:	bl	118c4 <iswprint@plt>
   182cc:	cmp	r0, #0
   182d0:	movwne	r0, #1
   182d4:	and	r4, r4, r0
   182d8:	sub	r0, fp, #40	; 0x28
   182dc:	bl	1184c <mbsinit@plt>
   182e0:	ldr	lr, [sp, #28]
   182e4:	ldr	ip, [fp, #-84]	; 0xffffffac
   182e8:	sub	r3, fp, #40	; 0x28
   182ec:	cmp	r0, #0
   182f0:	beq	181b0 <lchmod@@Base+0x1308>
   182f4:	b	1866c <lchmod@@Base+0x17c4>
   182f8:	ldr	r0, [sp, #32]
   182fc:	cmp	r0, #0
   18300:	beq	1839c <lchmod@@Base+0x14f4>
   18304:	add	r0, r7, #2
   18308:	cmp	r0, lr
   1830c:	bcs	1839c <lchmod@@Base+0x14f4>
   18310:	add	r1, ip, r7
   18314:	ldrb	r1, [r1, #1]
   18318:	cmp	r1, #63	; 0x3f
   1831c:	bne	1839c <lchmod@@Base+0x14f4>
   18320:	ldrb	r5, [ip, r0]
   18324:	sub	r1, r5, #33	; 0x21
   18328:	cmp	r1, #29
   1832c:	bhi	1839c <lchmod@@Base+0x14f4>
   18330:	movw	r3, #20929	; 0x51c1
   18334:	mov	r2, #1
   18338:	movt	r3, #14336	; 0x3800
   1833c:	tst	r3, r2, lsl r1
   18340:	beq	1839c <lchmod@@Base+0x14f4>
   18344:	ldr	r1, [fp, #-72]	; 0xffffffb8
   18348:	tst	r1, #1
   1834c:	bne	18844 <lchmod@@Base+0x199c>
   18350:	cmp	r8, sl
   18354:	mov	r7, r0
   18358:	mov	r4, #0
   1835c:	movcc	r1, #63	; 0x3f
   18360:	strbcc	r1, [r6, r8]
   18364:	add	r1, r8, #1
   18368:	cmp	r1, sl
   1836c:	movcc	r2, #34	; 0x22
   18370:	strbcc	r2, [r6, r1]
   18374:	add	r1, r8, #2
   18378:	cmp	r1, sl
   1837c:	movcc	r2, #34	; 0x22
   18380:	strbcc	r2, [r6, r1]
   18384:	add	r1, r8, #3
   18388:	add	r8, r8, #4
   1838c:	cmp	r1, sl
   18390:	movcc	r2, #63	; 0x3f
   18394:	strbcc	r2, [r6, r1]
   18398:	b	17e00 <lchmod@@Base+0xf58>
   1839c:	mov	r5, #63	; 0x3f
   183a0:	mov	r4, #0
   183a4:	b	17e00 <lchmod@@Base+0xf58>
   183a8:	add	r1, r2, r7
   183ac:	ldr	lr, [sp, #28]
   183b0:	mov	r3, #0
   183b4:	str	r1, [sp, #44]	; 0x2c
   183b8:	add	r1, r7, #1
   183bc:	ldr	r7, [fp, #-64]	; 0xffffffc0
   183c0:	tst	r0, #1
   183c4:	bne	18498 <lchmod@@Base+0x15f0>
   183c8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   183cc:	tst	r2, #1
   183d0:	bne	1878c <lchmod@@Base+0x18e4>
   183d4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   183d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   183dc:	cmp	r7, #2
   183e0:	movwne	r3, #1
   183e4:	orr	r3, r3, r2
   183e8:	tst	r3, #1
   183ec:	bne	18428 <lchmod@@Base+0x1580>
   183f0:	cmp	r8, sl
   183f4:	add	r3, r8, #1
   183f8:	movcc	r2, #39	; 0x27
   183fc:	strbcc	r2, [r6, r8]
   18400:	cmp	r3, sl
   18404:	movcc	r2, #36	; 0x24
   18408:	strbcc	r2, [r6, r3]
   1840c:	add	r3, r8, #2
   18410:	add	r8, r8, #3
   18414:	cmp	r3, sl
   18418:	movcc	r2, #39	; 0x27
   1841c:	strbcc	r2, [r6, r3]
   18420:	mov	r2, #1
   18424:	str	r2, [fp, #-56]	; 0xffffffc8
   18428:	cmp	r8, sl
   1842c:	movcc	r3, #92	; 0x5c
   18430:	strbcc	r3, [r6, r8]
   18434:	add	r3, r8, #1
   18438:	cmp	r3, sl
   1843c:	andcc	r7, r5, #192	; 0xc0
   18440:	movcc	r2, #48	; 0x30
   18444:	orrcc	r7, r2, r7, lsr #6
   18448:	strbcc	r7, [r6, r3]
   1844c:	add	r3, r8, #2
   18450:	add	r8, r8, #3
   18454:	cmp	r3, sl
   18458:	lsrcc	r7, r5, #3
   1845c:	movcc	r2, #6
   18460:	bficc	r7, r2, #3, #29
   18464:	mov	r2, #6
   18468:	strbcc	r7, [r6, r3]
   1846c:	bfi	r5, r2, #3, #29
   18470:	mov	r3, #1
   18474:	b	184bc <lchmod@@Base+0x1614>
   18478:	cmp	r8, sl
   1847c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   18480:	strbcc	r5, [r6, r8]
   18484:	add	r8, r8, #1
   18488:	ldrb	r5, [ip, r1]
   1848c:	add	r1, r1, #1
   18490:	tst	r0, #1
   18494:	beq	183c8 <lchmod@@Base+0x1520>
   18498:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1849c:	tst	r2, #1
   184a0:	beq	184b4 <lchmod@@Base+0x160c>
   184a4:	cmp	r8, sl
   184a8:	movcc	r7, #92	; 0x5c
   184ac:	strbcc	r7, [r6, r8]
   184b0:	add	r8, r8, #1
   184b4:	mov	r2, #0
   184b8:	str	r2, [fp, #-52]	; 0xffffffcc
   184bc:	ldr	r2, [sp, #44]	; 0x2c
   184c0:	and	r9, r3, #1
   184c4:	cmp	r2, r1
   184c8:	bls	185c8 <lchmod@@Base+0x1720>
   184cc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   184d0:	cmp	r9, #0
   184d4:	movwne	r9, #1
   184d8:	mvn	r7, r2
   184dc:	orr	r7, r7, r9
   184e0:	tst	r7, #1
   184e4:	bne	18478 <lchmod@@Base+0x15d0>
   184e8:	cmp	r8, sl
   184ec:	movcc	r7, #39	; 0x27
   184f0:	strbcc	r7, [r6, r8]
   184f4:	add	r7, r8, #1
   184f8:	add	r8, r8, #2
   184fc:	cmp	r7, sl
   18500:	movcc	r2, #39	; 0x27
   18504:	strbcc	r2, [r6, r7]
   18508:	mov	r2, #0
   1850c:	str	r2, [fp, #-56]	; 0xffffffc8
   18510:	b	18478 <lchmod@@Base+0x15d0>
   18514:	cmp	r8, sl
   18518:	mov	r2, #1
   1851c:	movcc	r0, #39	; 0x27
   18520:	strbcc	r0, [r6, r8]
   18524:	add	r0, r8, #1
   18528:	cmp	r0, sl
   1852c:	movcc	r1, #36	; 0x24
   18530:	strbcc	r1, [r6, r0]
   18534:	add	r0, r8, #2
   18538:	cmp	r0, sl
   1853c:	movcc	r1, #39	; 0x27
   18540:	strbcc	r1, [r6, r0]
   18544:	add	r0, r8, #3
   18548:	cmp	r0, sl
   1854c:	add	r8, r0, #1
   18550:	str	r2, [fp, #-56]	; 0xffffffc8
   18554:	movcc	r1, #92	; 0x5c
   18558:	strbcc	r1, [r6, r0]
   1855c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   18560:	cmp	r1, #2
   18564:	beq	185b8 <lchmod@@Base+0x1710>
   18568:	add	r1, r7, #1
   1856c:	mov	r4, #0
   18570:	mov	r9, #1
   18574:	mov	r5, #48	; 0x30
   18578:	cmp	r1, lr
   1857c:	bcs	17e00 <lchmod@@Base+0xf58>
   18580:	ldrb	r1, [ip, r1]
   18584:	sub	r1, r1, #48	; 0x30
   18588:	uxtb	r1, r1
   1858c:	cmp	r1, #9
   18590:	bhi	17e00 <lchmod@@Base+0xf58>
   18594:	cmp	r8, sl
   18598:	movcc	r1, #48	; 0x30
   1859c:	strbcc	r1, [r6, r8]
   185a0:	add	r1, r0, #2
   185a4:	add	r8, r0, #3
   185a8:	cmp	r1, sl
   185ac:	movcc	r2, #48	; 0x30
   185b0:	strbcc	r2, [r6, r1]
   185b4:	b	17e00 <lchmod@@Base+0xf58>
   185b8:	mov	r0, #48	; 0x30
   185bc:	mov	r9, #1
   185c0:	mov	r4, #0
   185c4:	b	18098 <lchmod@@Base+0x11f0>
   185c8:	cmp	r9, #0
   185cc:	sub	r7, r1, #1
   185d0:	mov	r0, r5
   185d4:	movwne	r9, #1
   185d8:	cmp	r9, #0
   185dc:	bne	1861c <lchmod@@Base+0x1774>
   185e0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   185e4:	tst	r1, #1
   185e8:	beq	1861c <lchmod@@Base+0x1774>
   185ec:	cmp	r8, sl
   185f0:	ldr	r5, [fp, #-48]	; 0xffffffd0
   185f4:	movcc	r1, #39	; 0x27
   185f8:	strbcc	r1, [r6, r8]
   185fc:	add	r1, r8, #1
   18600:	add	r8, r8, #2
   18604:	cmp	r1, sl
   18608:	movcc	r2, #39	; 0x27
   1860c:	strbcc	r2, [r6, r1]
   18610:	mov	r1, #0
   18614:	str	r1, [fp, #-56]	; 0xffffffc8
   18618:	b	18124 <lchmod@@Base+0x127c>
   1861c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   18620:	b	18124 <lchmod@@Base+0x127c>
   18624:	mov	r4, #0
   18628:	b	18664 <lchmod@@Base+0x17bc>
   1862c:	mov	r4, #0
   18630:	cmp	lr, r6
   18634:	bls	18664 <lchmod@@Base+0x17bc>
   18638:	ldr	ip, [fp, #-84]	; 0xffffffac
   1863c:	ldr	r6, [sp, #44]	; 0x2c
   18640:	ldr	r0, [sp, #24]
   18644:	ldrb	r0, [r0, r6]
   18648:	cmp	r0, #0
   1864c:	beq	1866c <lchmod@@Base+0x17c4>
   18650:	add	r6, r6, #1
   18654:	add	r0, r7, r6
   18658:	cmp	r0, lr
   1865c:	bcc	18640 <lchmod@@Base+0x1798>
   18660:	b	1866c <lchmod@@Base+0x17c4>
   18664:	ldr	ip, [fp, #-84]	; 0xffffffac
   18668:	ldr	r6, [sp, #44]	; 0x2c
   1866c:	mov	r1, r6
   18670:	ldr	r6, [sp, #80]	; 0x50
   18674:	b	17fcc <lchmod@@Base+0x1124>
   18678:	mov	lr, r7
   1867c:	b	18684 <lchmod@@Base+0x17dc>
   18680:	mvn	lr, #0
   18684:	ldr	r7, [fp, #-64]	; 0xffffffc0
   18688:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1868c:	eor	r0, r7, #2
   18690:	orr	r0, r0, r8
   18694:	clz	r0, r0
   18698:	lsr	r0, r0, #5
   1869c:	tst	r1, r0
   186a0:	bne	1872c <lchmod@@Base+0x1884>
   186a4:	mov	r0, r1
   186a8:	ldr	r1, [fp, #-80]	; 0xffffffb0
   186ac:	cmp	r7, #2
   186b0:	movwne	r1, #1
   186b4:	orr	r0, r0, r1
   186b8:	tst	r0, #1
   186bc:	ldreq	r0, [sp, #60]	; 0x3c
   186c0:	eoreq	r0, r0, #1
   186c4:	tsteq	r0, #1
   186c8:	bne	187d8 <lchmod@@Base+0x1930>
   186cc:	mov	r9, lr
   186d0:	tst	r5, #1
   186d4:	bne	18794 <lchmod@@Base+0x18ec>
   186d8:	ldr	r6, [sp, #56]	; 0x38
   186dc:	mov	r4, #0
   186e0:	cmp	r6, #0
   186e4:	beq	187d0 <lchmod@@Base+0x1928>
   186e8:	ldr	r0, [sp, #84]	; 0x54
   186ec:	mov	r1, #0
   186f0:	cmp	sl, #0
   186f4:	mov	r5, #0
   186f8:	str	r1, [fp, #-72]	; 0xffffffb8
   186fc:	beq	178cc <lchmod@@Base+0xa24>
   18700:	b	187d8 <lchmod@@Base+0x1930>
   18704:	ldr	r7, [fp, #-64]	; 0xffffffc0
   18708:	ldr	r2, [sp, #84]	; 0x54
   1870c:	b	18734 <lchmod@@Base+0x188c>
   18710:	ldr	ip, [fp, #-84]	; 0xffffffac
   18714:	mov	r2, #1
   18718:	mov	lr, r4
   1871c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   18720:	b	18734 <lchmod@@Base+0x188c>
   18724:	ldr	r6, [sp, #80]	; 0x50
   18728:	ldr	ip, [fp, #-84]	; 0xffffffac
   1872c:	ldr	r2, [sp, #84]	; 0x54
   18730:	mov	r7, #2
   18734:	mov	r0, #0
   18738:	ldr	r1, [fp, #12]
   1873c:	tst	r2, #1
   18740:	mov	r2, r7
   18744:	mov	r3, lr
   18748:	str	r0, [sp, #8]
   1874c:	ldr	r0, [sp, #72]	; 0x48
   18750:	movwne	r2, #4
   18754:	cmp	r7, #2
   18758:	movne	r2, r7
   1875c:	str	r2, [sp]
   18760:	mov	r2, ip
   18764:	bic	r1, r1, #2
   18768:	str	r0, [sp, #12]
   1876c:	ldr	r0, [sp, #76]	; 0x4c
   18770:	str	r1, [sp, #4]
   18774:	mov	r1, sl
   18778:	str	r0, [sp, #16]
   1877c:	mov	r0, r6
   18780:	bl	1784c <lchmod@@Base+0x9a4>
   18784:	mov	r8, r0
   18788:	b	18830 <lchmod@@Base+0x1988>
   1878c:	ldr	r2, [sp, #84]	; 0x54
   18790:	b	18734 <lchmod@@Base+0x188c>
   18794:	mov	r0, #5
   18798:	ldr	r1, [sp, #56]	; 0x38
   1879c:	ldr	r2, [fp, #-84]	; 0xffffffac
   187a0:	mov	r3, r9
   187a4:	str	r0, [sp]
   187a8:	ldr	r0, [fp, #12]
   187ac:	str	r0, [sp, #4]
   187b0:	ldr	r0, [fp, #16]
   187b4:	str	r0, [sp, #8]
   187b8:	ldr	r0, [sp, #72]	; 0x48
   187bc:	str	r0, [sp, #12]
   187c0:	ldr	r0, [sp, #76]	; 0x4c
   187c4:	str	r0, [sp, #16]
   187c8:	ldr	r0, [sp, #80]	; 0x50
   187cc:	b	18780 <lchmod@@Base+0x18d8>
   187d0:	mov	r0, #0
   187d4:	str	r0, [fp, #-72]	; 0xffffffb8
   187d8:	ldr	r1, [sp, #92]	; 0x5c
   187dc:	cmp	r1, #0
   187e0:	beq	18820 <lchmod@@Base+0x1978>
   187e4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   187e8:	ldr	r2, [sp, #80]	; 0x50
   187ec:	tst	r0, #1
   187f0:	bne	18824 <lchmod@@Base+0x197c>
   187f4:	ldrb	r0, [r1]
   187f8:	cmp	r0, #0
   187fc:	beq	18824 <lchmod@@Base+0x197c>
   18800:	add	r1, r1, #1
   18804:	cmp	r8, sl
   18808:	strbcc	r0, [r2, r8]
   1880c:	add	r8, r8, #1
   18810:	ldrb	r0, [r1], #1
   18814:	cmp	r0, #0
   18818:	bne	18804 <lchmod@@Base+0x195c>
   1881c:	b	18824 <lchmod@@Base+0x197c>
   18820:	ldr	r2, [sp, #80]	; 0x50
   18824:	cmp	r8, sl
   18828:	movcc	r0, #0
   1882c:	strbcc	r0, [r2, r8]
   18830:	mov	r0, r8
   18834:	sub	sp, fp, #28
   18838:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1883c:	mov	r2, #1
   18840:	b	1871c <lchmod@@Base+0x1874>
   18844:	ldr	r2, [sp, #84]	; 0x54
   18848:	mov	r7, #5
   1884c:	b	18734 <lchmod@@Base+0x188c>
   18850:	bl	11b64 <abort@plt>
   18854:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18858:	add	fp, sp, #28
   1885c:	sub	sp, sp, #28
   18860:	movw	r5, #53760	; 0xd200
   18864:	cmp	r2, #0
   18868:	mov	r4, r1
   1886c:	mov	r7, r0
   18870:	str	r0, [sp, #20]
   18874:	movt	r5, #2
   18878:	movne	r5, r2
   1887c:	bl	11a08 <__errno_location@plt>
   18880:	mov	sl, r0
   18884:	ldm	r5, {r0, r1}
   18888:	ldr	r2, [r5, #40]	; 0x28
   1888c:	ldr	r3, [r5, #44]	; 0x2c
   18890:	add	r9, r5, #8
   18894:	ldr	r6, [sl]
   18898:	orr	r8, r1, #1
   1889c:	mov	r1, #0
   188a0:	str	r6, [sp, #24]
   188a4:	stm	sp, {r0, r8, r9}
   188a8:	str	r2, [sp, #12]
   188ac:	str	r3, [sp, #16]
   188b0:	mov	r0, #0
   188b4:	mov	r2, r7
   188b8:	mov	r3, r4
   188bc:	mov	r6, r4
   188c0:	bl	1784c <lchmod@@Base+0x9a4>
   188c4:	add	r7, r0, #1
   188c8:	mov	r0, r7
   188cc:	bl	19d80 <lchmod@@Base+0x2ed8>
   188d0:	mov	r4, r0
   188d4:	ldr	r0, [r5]
   188d8:	ldr	r2, [r5, #44]	; 0x2c
   188dc:	ldr	r1, [r5, #40]	; 0x28
   188e0:	mov	r3, r6
   188e4:	stm	sp, {r0, r8, r9}
   188e8:	str	r2, [sp, #16]
   188ec:	str	r1, [sp, #12]
   188f0:	mov	r0, r4
   188f4:	mov	r1, r7
   188f8:	ldr	r2, [sp, #20]
   188fc:	bl	1784c <lchmod@@Base+0x9a4>
   18900:	ldr	r0, [sp, #24]
   18904:	str	r0, [sl]
   18908:	mov	r0, r4
   1890c:	sub	sp, fp, #28
   18910:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18914:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18918:	add	fp, sp, #28
   1891c:	sub	sp, sp, #36	; 0x24
   18920:	movw	r8, #53760	; 0xd200
   18924:	cmp	r3, #0
   18928:	mov	r4, r2
   1892c:	str	r2, [sp, #24]
   18930:	mov	r5, r1
   18934:	mov	r6, r0
   18938:	str	r0, [sp, #20]
   1893c:	movt	r8, #2
   18940:	movne	r8, r3
   18944:	bl	11a08 <__errno_location@plt>
   18948:	str	r0, [sp, #28]
   1894c:	cmp	r4, #0
   18950:	add	sl, r8, #8
   18954:	ldm	r8, {r3, r9}
   18958:	ldr	r7, [r0]
   1895c:	ldr	r1, [r8, #40]	; 0x28
   18960:	ldr	r2, [r8, #44]	; 0x2c
   18964:	mov	r0, #0
   18968:	orreq	r9, r9, #1
   1896c:	str	r7, [sp, #32]
   18970:	mov	r7, r5
   18974:	stm	sp, {r3, r9, sl}
   18978:	str	r1, [sp, #12]
   1897c:	str	r2, [sp, #16]
   18980:	mov	r1, #0
   18984:	mov	r2, r6
   18988:	mov	r3, r5
   1898c:	bl	1784c <lchmod@@Base+0x9a4>
   18990:	add	r4, r0, #1
   18994:	mov	r5, r0
   18998:	mov	r0, r4
   1899c:	bl	19d80 <lchmod@@Base+0x2ed8>
   189a0:	mov	r6, r0
   189a4:	ldr	r0, [r8]
   189a8:	ldr	r2, [r8, #44]	; 0x2c
   189ac:	ldr	r1, [r8, #40]	; 0x28
   189b0:	mov	r3, r7
   189b4:	stm	sp, {r0, r9, sl}
   189b8:	str	r2, [sp, #16]
   189bc:	str	r1, [sp, #12]
   189c0:	mov	r0, r6
   189c4:	mov	r1, r4
   189c8:	ldr	r2, [sp, #20]
   189cc:	bl	1784c <lchmod@@Base+0x9a4>
   189d0:	ldr	r0, [sp, #24]
   189d4:	ldr	r1, [sp, #32]
   189d8:	ldr	r2, [sp, #28]
   189dc:	cmp	r0, #0
   189e0:	str	r1, [r2]
   189e4:	strne	r5, [r0]
   189e8:	mov	r0, r6
   189ec:	sub	sp, fp, #28
   189f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   189f4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   189f8:	add	fp, sp, #24
   189fc:	movw	r5, #53652	; 0xd194
   18a00:	movw	r8, #53648	; 0xd190
   18a04:	movt	r5, #2
   18a08:	movt	r8, #2
   18a0c:	ldr	r0, [r5]
   18a10:	ldr	r4, [r8]
   18a14:	cmp	r0, #2
   18a18:	blt	18a44 <lchmod@@Base+0x1b9c>
   18a1c:	add	r7, r4, #12
   18a20:	mov	r6, #0
   18a24:	ldr	r0, [r7, r6, lsl #3]
   18a28:	bl	136a8 <__assert_fail@plt+0x1ae4>
   18a2c:	ldr	r1, [r5]
   18a30:	add	r2, r6, #2
   18a34:	add	r0, r6, #1
   18a38:	mov	r6, r0
   18a3c:	cmp	r2, r1
   18a40:	blt	18a24 <lchmod@@Base+0x1b7c>
   18a44:	ldr	r0, [r4, #4]
   18a48:	movw	r7, #53808	; 0xd230
   18a4c:	movt	r7, #2
   18a50:	cmp	r0, r7
   18a54:	beq	18a6c <lchmod@@Base+0x1bc4>
   18a58:	bl	136a8 <__assert_fail@plt+0x1ae4>
   18a5c:	movw	r0, #53656	; 0xd198
   18a60:	mov	r6, #256	; 0x100
   18a64:	movt	r0, #2
   18a68:	strd	r6, [r0]
   18a6c:	movw	r6, #53656	; 0xd198
   18a70:	movt	r6, #2
   18a74:	cmp	r4, r6
   18a78:	beq	18a88 <lchmod@@Base+0x1be0>
   18a7c:	mov	r0, r4
   18a80:	bl	136a8 <__assert_fail@plt+0x1ae4>
   18a84:	str	r6, [r8]
   18a88:	mov	r0, #1
   18a8c:	str	r0, [r5]
   18a90:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18a94:	movw	r3, #53760	; 0xd200
   18a98:	mvn	r2, #0
   18a9c:	movt	r3, #2
   18aa0:	b	18aa4 <lchmod@@Base+0x1bfc>
   18aa4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18aa8:	add	fp, sp, #28
   18aac:	sub	sp, sp, #44	; 0x2c
   18ab0:	mov	r7, r3
   18ab4:	str	r2, [sp, #36]	; 0x24
   18ab8:	str	r1, [sp, #32]
   18abc:	mov	r5, r0
   18ac0:	bl	11a08 <__errno_location@plt>
   18ac4:	cmp	r5, #0
   18ac8:	blt	18c34 <lchmod@@Base+0x1d8c>
   18acc:	cmn	r5, #-2147483647	; 0x80000001
   18ad0:	beq	18c34 <lchmod@@Base+0x1d8c>
   18ad4:	movw	r8, #53652	; 0xd194
   18ad8:	movw	r4, #53648	; 0xd190
   18adc:	str	r0, [sp, #28]
   18ae0:	ldr	r0, [r0]
   18ae4:	movt	r8, #2
   18ae8:	movt	r4, #2
   18aec:	ldr	r1, [r8]
   18af0:	ldr	r6, [r4]
   18af4:	str	r0, [sp, #24]
   18af8:	cmp	r1, r5
   18afc:	ble	18b08 <lchmod@@Base+0x1c60>
   18b00:	mov	sl, r6
   18b04:	b	18b70 <lchmod@@Base+0x1cc8>
   18b08:	movw	r9, #53656	; 0xd198
   18b0c:	mov	r0, #8
   18b10:	add	r2, r5, #1
   18b14:	str	r1, [fp, #-32]	; 0xffffffe0
   18b18:	mvn	r3, #-2147483648	; 0x80000000
   18b1c:	movt	r9, #2
   18b20:	str	r0, [sp]
   18b24:	sub	r2, r2, r1
   18b28:	sub	r1, fp, #32
   18b2c:	subs	r0, r6, r9
   18b30:	movne	r0, r6
   18b34:	bl	19f80 <lchmod@@Base+0x30d8>
   18b38:	cmp	r6, r9
   18b3c:	mov	sl, r0
   18b40:	str	r0, [r4]
   18b44:	ldrdeq	r0, [r9]
   18b48:	stmeq	sl, {r0, r1}
   18b4c:	ldr	r1, [r8]
   18b50:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18b54:	add	r0, sl, r1, lsl #3
   18b58:	sub	r1, r2, r1
   18b5c:	lsl	r2, r1, #3
   18b60:	mov	r1, #0
   18b64:	bl	11a2c <memset@plt>
   18b68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18b6c:	str	r0, [r8]
   18b70:	mov	r9, sl
   18b74:	ldr	r6, [r9, r5, lsl #3]!
   18b78:	ldr	r4, [r9, #4]!
   18b7c:	ldm	r7, {r0, r1}
   18b80:	ldr	r2, [r7, #40]	; 0x28
   18b84:	ldr	r3, [r7, #44]	; 0x2c
   18b88:	orr	r8, r1, #1
   18b8c:	add	r1, r7, #8
   18b90:	stm	sp, {r0, r8}
   18b94:	add	r0, sp, #8
   18b98:	str	r1, [sp, #20]
   18b9c:	stm	r0, {r1, r2, r3}
   18ba0:	mov	r0, r4
   18ba4:	mov	r1, r6
   18ba8:	ldr	r2, [sp, #32]
   18bac:	ldr	r3, [sp, #36]	; 0x24
   18bb0:	bl	1784c <lchmod@@Base+0x9a4>
   18bb4:	cmp	r6, r0
   18bb8:	bhi	18c1c <lchmod@@Base+0x1d74>
   18bbc:	add	r6, r0, #1
   18bc0:	movw	r0, #53808	; 0xd230
   18bc4:	movt	r0, #2
   18bc8:	str	r6, [sl, r5, lsl #3]
   18bcc:	cmp	r4, r0
   18bd0:	beq	18bdc <lchmod@@Base+0x1d34>
   18bd4:	mov	r0, r4
   18bd8:	bl	136a8 <__assert_fail@plt+0x1ae4>
   18bdc:	mov	r0, r6
   18be0:	bl	19d80 <lchmod@@Base+0x2ed8>
   18be4:	str	r0, [r9]
   18be8:	mov	r4, r0
   18bec:	add	r3, sp, #8
   18bf0:	ldr	r0, [r7]
   18bf4:	ldr	r1, [r7, #40]	; 0x28
   18bf8:	ldr	r2, [r7, #44]	; 0x2c
   18bfc:	stm	sp, {r0, r8}
   18c00:	ldr	r0, [sp, #20]
   18c04:	stm	r3, {r0, r1, r2}
   18c08:	mov	r0, r4
   18c0c:	mov	r1, r6
   18c10:	ldr	r2, [sp, #32]
   18c14:	ldr	r3, [sp, #36]	; 0x24
   18c18:	bl	1784c <lchmod@@Base+0x9a4>
   18c1c:	ldr	r0, [sp, #28]
   18c20:	ldr	r1, [sp, #24]
   18c24:	str	r1, [r0]
   18c28:	mov	r0, r4
   18c2c:	sub	sp, fp, #28
   18c30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18c34:	bl	11b64 <abort@plt>
   18c38:	movw	r3, #53760	; 0xd200
   18c3c:	movt	r3, #2
   18c40:	b	18aa4 <lchmod@@Base+0x1bfc>
   18c44:	movw	r3, #53760	; 0xd200
   18c48:	mov	r1, r0
   18c4c:	mov	r0, #0
   18c50:	mvn	r2, #0
   18c54:	movt	r3, #2
   18c58:	b	18aa4 <lchmod@@Base+0x1bfc>
   18c5c:	movw	r3, #53760	; 0xd200
   18c60:	mov	r2, r1
   18c64:	mov	r1, r0
   18c68:	mov	r0, #0
   18c6c:	movt	r3, #2
   18c70:	b	18aa4 <lchmod@@Base+0x1bfc>
   18c74:	push	{fp, lr}
   18c78:	mov	fp, sp
   18c7c:	sub	sp, sp, #48	; 0x30
   18c80:	vmov.i32	q8, #0	; 0x00000000
   18c84:	mov	ip, #32
   18c88:	mov	r3, sp
   18c8c:	mov	lr, r2
   18c90:	cmp	r1, #10
   18c94:	add	r2, r3, #16
   18c98:	vst1.64	{d16-d17}, [r3], ip
   18c9c:	vst1.64	{d16-d17}, [r3]
   18ca0:	vst1.64	{d16-d17}, [r2]
   18ca4:	beq	18cc4 <lchmod@@Base+0x1e1c>
   18ca8:	str	r1, [sp]
   18cac:	mov	r3, sp
   18cb0:	mov	r1, lr
   18cb4:	mvn	r2, #0
   18cb8:	bl	18aa4 <lchmod@@Base+0x1bfc>
   18cbc:	mov	sp, fp
   18cc0:	pop	{fp, pc}
   18cc4:	bl	11b64 <abort@plt>
   18cc8:	push	{r4, sl, fp, lr}
   18ccc:	add	fp, sp, #8
   18cd0:	sub	sp, sp, #48	; 0x30
   18cd4:	mov	ip, r3
   18cd8:	mov	r3, sp
   18cdc:	vmov.i32	q8, #0	; 0x00000000
   18ce0:	mov	lr, #32
   18ce4:	cmp	r1, #10
   18ce8:	add	r4, r3, #16
   18cec:	vst1.64	{d16-d17}, [r3], lr
   18cf0:	vst1.64	{d16-d17}, [r3]
   18cf4:	vst1.64	{d16-d17}, [r4]
   18cf8:	beq	18d18 <lchmod@@Base+0x1e70>
   18cfc:	str	r1, [sp]
   18d00:	mov	r1, r2
   18d04:	mov	r3, sp
   18d08:	mov	r2, ip
   18d0c:	bl	18aa4 <lchmod@@Base+0x1bfc>
   18d10:	sub	sp, fp, #8
   18d14:	pop	{r4, sl, fp, pc}
   18d18:	bl	11b64 <abort@plt>
   18d1c:	push	{fp, lr}
   18d20:	mov	fp, sp
   18d24:	sub	sp, sp, #48	; 0x30
   18d28:	mov	r3, sp
   18d2c:	vmov.i32	q8, #0	; 0x00000000
   18d30:	mov	ip, #32
   18d34:	cmp	r0, #10
   18d38:	add	r2, r3, #16
   18d3c:	vst1.64	{d16-d17}, [r3], ip
   18d40:	vst1.64	{d16-d17}, [r3]
   18d44:	vst1.64	{d16-d17}, [r2]
   18d48:	beq	18d68 <lchmod@@Base+0x1ec0>
   18d4c:	str	r0, [sp]
   18d50:	mov	r3, sp
   18d54:	mov	r0, #0
   18d58:	mvn	r2, #0
   18d5c:	bl	18aa4 <lchmod@@Base+0x1bfc>
   18d60:	mov	sp, fp
   18d64:	pop	{fp, pc}
   18d68:	bl	11b64 <abort@plt>
   18d6c:	push	{fp, lr}
   18d70:	mov	fp, sp
   18d74:	sub	sp, sp, #48	; 0x30
   18d78:	mov	r3, sp
   18d7c:	vmov.i32	q8, #0	; 0x00000000
   18d80:	mov	ip, #32
   18d84:	cmp	r0, #10
   18d88:	add	lr, r3, #16
   18d8c:	vst1.64	{d16-d17}, [r3], ip
   18d90:	vst1.64	{d16-d17}, [r3]
   18d94:	vst1.64	{d16-d17}, [lr]
   18d98:	beq	18db4 <lchmod@@Base+0x1f0c>
   18d9c:	str	r0, [sp]
   18da0:	mov	r3, sp
   18da4:	mov	r0, #0
   18da8:	bl	18aa4 <lchmod@@Base+0x1bfc>
   18dac:	mov	sp, fp
   18db0:	pop	{fp, pc}
   18db4:	bl	11b64 <abort@plt>
   18db8:	push	{r4, sl, fp, lr}
   18dbc:	add	fp, sp, #8
   18dc0:	sub	sp, sp, #48	; 0x30
   18dc4:	mov	lr, r0
   18dc8:	movw	r0, #53760	; 0xd200
   18dcc:	mov	r3, #32
   18dd0:	mov	ip, r1
   18dd4:	mov	r4, #1
   18dd8:	movt	r0, #2
   18ddc:	add	r1, r0, #16
   18de0:	vld1.64	{d16-d17}, [r0], r3
   18de4:	mov	r3, sp
   18de8:	vld1.64	{d18-d19}, [r1]
   18dec:	add	r1, r3, #16
   18df0:	vld1.64	{d20-d21}, [r0]
   18df4:	add	r0, r3, #32
   18df8:	vst1.64	{d18-d19}, [r1]
   18dfc:	mov	r1, r3
   18e00:	vst1.64	{d20-d21}, [r0]
   18e04:	mov	r0, #28
   18e08:	and	r0, r0, r2, lsr #3
   18e0c:	and	r2, r2, #31
   18e10:	vst1.64	{d16-d17}, [r1], r0
   18e14:	ldr	r0, [r1, #8]
   18e18:	bic	r4, r4, r0, lsr r2
   18e1c:	eor	r0, r0, r4, lsl r2
   18e20:	mov	r2, ip
   18e24:	str	r0, [r1, #8]
   18e28:	mov	r0, #0
   18e2c:	mov	r1, lr
   18e30:	bl	18aa4 <lchmod@@Base+0x1bfc>
   18e34:	sub	sp, fp, #8
   18e38:	pop	{r4, sl, fp, pc}
   18e3c:	push	{fp, lr}
   18e40:	mov	fp, sp
   18e44:	sub	sp, sp, #48	; 0x30
   18e48:	mov	ip, r0
   18e4c:	movw	r0, #53760	; 0xd200
   18e50:	mov	r3, #32
   18e54:	movt	r0, #2
   18e58:	add	r2, r0, #16
   18e5c:	vld1.64	{d16-d17}, [r0], r3
   18e60:	mov	r3, sp
   18e64:	vld1.64	{d18-d19}, [r2]
   18e68:	add	r2, r3, #16
   18e6c:	vld1.64	{d20-d21}, [r0]
   18e70:	add	r0, r3, #32
   18e74:	vst1.64	{d18-d19}, [r2]
   18e78:	mov	r2, r3
   18e7c:	vst1.64	{d20-d21}, [r0]
   18e80:	mov	r0, #28
   18e84:	and	r0, r0, r1, lsr #3
   18e88:	and	r1, r1, #31
   18e8c:	vst1.64	{d16-d17}, [r2], r0
   18e90:	mov	r0, #1
   18e94:	ldr	lr, [r2, #8]
   18e98:	bic	r0, r0, lr, lsr r1
   18e9c:	eor	r0, lr, r0, lsl r1
   18ea0:	mov	r1, ip
   18ea4:	str	r0, [r2, #8]
   18ea8:	mov	r0, #0
   18eac:	mvn	r2, #0
   18eb0:	bl	18aa4 <lchmod@@Base+0x1bfc>
   18eb4:	mov	sp, fp
   18eb8:	pop	{fp, pc}
   18ebc:	push	{fp, lr}
   18ec0:	mov	fp, sp
   18ec4:	sub	sp, sp, #48	; 0x30
   18ec8:	movw	r2, #53760	; 0xd200
   18ecc:	mov	r3, #32
   18ed0:	mov	r1, r0
   18ed4:	movt	r2, #2
   18ed8:	add	r0, r2, #16
   18edc:	vld1.64	{d16-d17}, [r2], r3
   18ee0:	mov	r3, sp
   18ee4:	vld1.64	{d18-d19}, [r0]
   18ee8:	add	r0, r3, #16
   18eec:	vld1.64	{d20-d21}, [r2]
   18ef0:	mov	r2, r3
   18ef4:	vst1.64	{d18-d19}, [r0]
   18ef8:	add	r0, r3, #32
   18efc:	vst1.64	{d20-d21}, [r0]
   18f00:	mov	r0, #12
   18f04:	vst1.64	{d16-d17}, [r2], r0
   18f08:	ldr	r0, [r2]
   18f0c:	orr	r0, r0, #67108864	; 0x4000000
   18f10:	str	r0, [r2]
   18f14:	mov	r0, #0
   18f18:	mvn	r2, #0
   18f1c:	bl	18aa4 <lchmod@@Base+0x1bfc>
   18f20:	mov	sp, fp
   18f24:	pop	{fp, pc}
   18f28:	push	{fp, lr}
   18f2c:	mov	fp, sp
   18f30:	sub	sp, sp, #48	; 0x30
   18f34:	mov	ip, r1
   18f38:	mov	r1, r0
   18f3c:	movw	r0, #53760	; 0xd200
   18f40:	mov	r3, #32
   18f44:	movt	r0, #2
   18f48:	add	r2, r0, #16
   18f4c:	vld1.64	{d16-d17}, [r0], r3
   18f50:	mov	r3, sp
   18f54:	vld1.64	{d18-d19}, [r2]
   18f58:	add	r2, r3, #16
   18f5c:	vld1.64	{d20-d21}, [r0]
   18f60:	add	r0, r3, #32
   18f64:	vst1.64	{d18-d19}, [r2]
   18f68:	mov	r2, r3
   18f6c:	vst1.64	{d20-d21}, [r0]
   18f70:	mov	r0, #12
   18f74:	vst1.64	{d16-d17}, [r2], r0
   18f78:	ldr	r0, [r2]
   18f7c:	orr	r0, r0, #67108864	; 0x4000000
   18f80:	str	r0, [r2]
   18f84:	mov	r0, #0
   18f88:	mov	r2, ip
   18f8c:	bl	18aa4 <lchmod@@Base+0x1bfc>
   18f90:	mov	sp, fp
   18f94:	pop	{fp, pc}
   18f98:	push	{r4, sl, fp, lr}
   18f9c:	add	fp, sp, #8
   18fa0:	sub	sp, sp, #96	; 0x60
   18fa4:	mov	ip, r2
   18fa8:	mov	r2, sp
   18fac:	vmov.i32	q8, #0	; 0x00000000
   18fb0:	mov	r4, #28
   18fb4:	cmp	r1, #10
   18fb8:	mov	r3, r2
   18fbc:	add	lr, r2, #16
   18fc0:	vst1.64	{d16-d17}, [r3], r4
   18fc4:	vst1.64	{d16-d17}, [lr]
   18fc8:	vst1.32	{d16-d17}, [r3]
   18fcc:	beq	1901c <lchmod@@Base+0x2174>
   18fd0:	vld1.64	{d16-d17}, [r2], r4
   18fd4:	vld1.64	{d18-d19}, [lr]
   18fd8:	add	r3, sp, #48	; 0x30
   18fdc:	add	r4, r3, #4
   18fe0:	vld1.32	{d20-d21}, [r2]
   18fe4:	add	r2, r3, #20
   18fe8:	vst1.32	{d16-d17}, [r4]
   18fec:	vst1.32	{d18-d19}, [r2]
   18ff0:	add	r2, r3, #32
   18ff4:	vst1.32	{d20-d21}, [r2]
   18ff8:	str	r1, [sp, #48]	; 0x30
   18ffc:	mvn	r2, #0
   19000:	ldr	r1, [sp, #60]	; 0x3c
   19004:	orr	r1, r1, #67108864	; 0x4000000
   19008:	str	r1, [sp, #60]	; 0x3c
   1900c:	mov	r1, ip
   19010:	bl	18aa4 <lchmod@@Base+0x1bfc>
   19014:	sub	sp, fp, #8
   19018:	pop	{r4, sl, fp, pc}
   1901c:	bl	11b64 <abort@plt>
   19020:	push	{r4, r5, fp, lr}
   19024:	add	fp, sp, #8
   19028:	sub	sp, sp, #48	; 0x30
   1902c:	mov	ip, r3
   19030:	movw	r3, #53760	; 0xd200
   19034:	mov	lr, #32
   19038:	cmp	r1, #0
   1903c:	mov	r5, sp
   19040:	movt	r3, #2
   19044:	cmpne	r2, #0
   19048:	add	r4, r3, #16
   1904c:	vld1.64	{d16-d17}, [r3], lr
   19050:	vld1.64	{d18-d19}, [r4]
   19054:	add	r4, r5, #16
   19058:	vld1.64	{d20-d21}, [r3]
   1905c:	vst1.64	{d16-d17}, [r5], lr
   19060:	mov	r3, #10
   19064:	vst1.64	{d18-d19}, [r4]
   19068:	vst1.64	{d20-d21}, [r5]
   1906c:	str	r3, [sp]
   19070:	bne	19078 <lchmod@@Base+0x21d0>
   19074:	bl	11b64 <abort@plt>
   19078:	str	r2, [sp, #44]	; 0x2c
   1907c:	str	r1, [sp, #40]	; 0x28
   19080:	mov	r3, sp
   19084:	mov	r1, ip
   19088:	mvn	r2, #0
   1908c:	bl	18aa4 <lchmod@@Base+0x1bfc>
   19090:	sub	sp, fp, #8
   19094:	pop	{r4, r5, fp, pc}
   19098:	push	{r4, r5, fp, lr}
   1909c:	add	fp, sp, #8
   190a0:	sub	sp, sp, #48	; 0x30
   190a4:	mov	lr, r3
   190a8:	movw	r3, #53760	; 0xd200
   190ac:	mov	ip, #32
   190b0:	cmp	r1, #0
   190b4:	mov	r5, sp
   190b8:	movt	r3, #2
   190bc:	cmpne	r2, #0
   190c0:	add	r4, r3, #16
   190c4:	vld1.64	{d16-d17}, [r3], ip
   190c8:	vld1.64	{d18-d19}, [r4]
   190cc:	add	r4, r5, #16
   190d0:	vld1.64	{d20-d21}, [r3]
   190d4:	vst1.64	{d16-d17}, [r5], ip
   190d8:	mov	r3, #10
   190dc:	vst1.64	{d18-d19}, [r4]
   190e0:	vst1.64	{d20-d21}, [r5]
   190e4:	str	r3, [sp]
   190e8:	bne	190f0 <lchmod@@Base+0x2248>
   190ec:	bl	11b64 <abort@plt>
   190f0:	ldr	ip, [fp, #8]
   190f4:	str	r2, [sp, #44]	; 0x2c
   190f8:	str	r1, [sp, #40]	; 0x28
   190fc:	mov	r3, sp
   19100:	mov	r1, lr
   19104:	mov	r2, ip
   19108:	bl	18aa4 <lchmod@@Base+0x1bfc>
   1910c:	sub	sp, fp, #8
   19110:	pop	{r4, r5, fp, pc}
   19114:	push	{r4, sl, fp, lr}
   19118:	add	fp, sp, #8
   1911c:	sub	sp, sp, #48	; 0x30
   19120:	mov	ip, r2
   19124:	movw	r2, #53760	; 0xd200
   19128:	mov	lr, #32
   1912c:	cmp	r0, #0
   19130:	mov	r4, sp
   19134:	movt	r2, #2
   19138:	cmpne	r1, #0
   1913c:	add	r3, r2, #16
   19140:	vld1.64	{d16-d17}, [r2], lr
   19144:	vld1.64	{d18-d19}, [r3]
   19148:	add	r3, r4, #16
   1914c:	vld1.64	{d20-d21}, [r2]
   19150:	vst1.64	{d16-d17}, [r4], lr
   19154:	mov	r2, #10
   19158:	vst1.64	{d18-d19}, [r3]
   1915c:	vst1.64	{d20-d21}, [r4]
   19160:	str	r2, [sp]
   19164:	bne	1916c <lchmod@@Base+0x22c4>
   19168:	bl	11b64 <abort@plt>
   1916c:	str	r1, [sp, #44]	; 0x2c
   19170:	str	r0, [sp, #40]	; 0x28
   19174:	mov	r3, sp
   19178:	mov	r0, #0
   1917c:	mov	r1, ip
   19180:	mvn	r2, #0
   19184:	bl	18aa4 <lchmod@@Base+0x1bfc>
   19188:	sub	sp, fp, #8
   1918c:	pop	{r4, sl, fp, pc}
   19190:	push	{r4, r5, fp, lr}
   19194:	add	fp, sp, #8
   19198:	sub	sp, sp, #48	; 0x30
   1919c:	mov	lr, r2
   191a0:	movw	r2, #53760	; 0xd200
   191a4:	mov	ip, r3
   191a8:	mov	r3, #32
   191ac:	cmp	r0, #0
   191b0:	mov	r5, sp
   191b4:	movt	r2, #2
   191b8:	cmpne	r1, #0
   191bc:	add	r4, r2, #16
   191c0:	vld1.64	{d16-d17}, [r2], r3
   191c4:	vld1.64	{d18-d19}, [r4]
   191c8:	add	r4, r5, #16
   191cc:	vld1.64	{d20-d21}, [r2]
   191d0:	vst1.64	{d16-d17}, [r5], r3
   191d4:	mov	r2, #10
   191d8:	vst1.64	{d18-d19}, [r4]
   191dc:	vst1.64	{d20-d21}, [r5]
   191e0:	str	r2, [sp]
   191e4:	bne	191ec <lchmod@@Base+0x2344>
   191e8:	bl	11b64 <abort@plt>
   191ec:	str	r1, [sp, #44]	; 0x2c
   191f0:	str	r0, [sp, #40]	; 0x28
   191f4:	mov	r3, sp
   191f8:	mov	r0, #0
   191fc:	mov	r1, lr
   19200:	mov	r2, ip
   19204:	bl	18aa4 <lchmod@@Base+0x1bfc>
   19208:	sub	sp, fp, #8
   1920c:	pop	{r4, r5, fp, pc}
   19210:	movw	r3, #53664	; 0xd1a0
   19214:	movt	r3, #2
   19218:	b	18aa4 <lchmod@@Base+0x1bfc>
   1921c:	movw	r3, #53664	; 0xd1a0
   19220:	mov	r2, r1
   19224:	mov	r1, r0
   19228:	mov	r0, #0
   1922c:	movt	r3, #2
   19230:	b	18aa4 <lchmod@@Base+0x1bfc>
   19234:	movw	r3, #53664	; 0xd1a0
   19238:	mvn	r2, #0
   1923c:	movt	r3, #2
   19240:	b	18aa4 <lchmod@@Base+0x1bfc>
   19244:	movw	r3, #53664	; 0xd1a0
   19248:	mov	r1, r0
   1924c:	mov	r0, #0
   19250:	mvn	r2, #0
   19254:	movt	r3, #2
   19258:	b	18aa4 <lchmod@@Base+0x1bfc>
   1925c:	push	{r4, r5, fp, lr}
   19260:	add	fp, sp, #8
   19264:	mov	r5, r0
   19268:	mov	r4, r1
   1926c:	mov	r0, #0
   19270:	mov	r2, #5
   19274:	mov	r1, r5
   19278:	bl	11870 <dcgettext@plt>
   1927c:	cmp	r0, r5
   19280:	popne	{r4, r5, fp, pc}
   19284:	bl	1b6e4 <lchmod@@Base+0x483c>
   19288:	ldrb	r1, [r0]
   1928c:	and	r1, r1, #223	; 0xdf
   19290:	cmp	r1, #71	; 0x47
   19294:	beq	192fc <lchmod@@Base+0x2454>
   19298:	cmp	r1, #85	; 0x55
   1929c:	bne	19320 <lchmod@@Base+0x2478>
   192a0:	ldrb	r1, [r0, #1]
   192a4:	and	r1, r1, #223	; 0xdf
   192a8:	cmp	r1, #84	; 0x54
   192ac:	bne	19320 <lchmod@@Base+0x2478>
   192b0:	ldrb	r1, [r0, #2]
   192b4:	and	r1, r1, #223	; 0xdf
   192b8:	cmp	r1, #70	; 0x46
   192bc:	ldrbeq	r1, [r0, #3]
   192c0:	cmpeq	r1, #45	; 0x2d
   192c4:	bne	19320 <lchmod@@Base+0x2478>
   192c8:	ldrb	r1, [r0, #4]
   192cc:	cmp	r1, #56	; 0x38
   192d0:	ldrbeq	r0, [r0, #5]
   192d4:	cmpeq	r0, #0
   192d8:	bne	19320 <lchmod@@Base+0x2478>
   192dc:	ldrb	r1, [r5]
   192e0:	movw	r2, #50427	; 0xc4fb
   192e4:	movw	r0, #50431	; 0xc4ff
   192e8:	movt	r2, #1
   192ec:	movt	r0, #1
   192f0:	cmp	r1, #96	; 0x60
   192f4:	moveq	r0, r2
   192f8:	pop	{r4, r5, fp, pc}
   192fc:	ldrb	r1, [r0, #1]
   19300:	and	r1, r1, #223	; 0xdf
   19304:	cmp	r1, #66	; 0x42
   19308:	bne	19320 <lchmod@@Base+0x2478>
   1930c:	ldrb	r1, [r0, #2]
   19310:	cmp	r1, #49	; 0x31
   19314:	ldrbeq	r1, [r0, #3]
   19318:	cmpeq	r1, #56	; 0x38
   1931c:	beq	1933c <lchmod@@Base+0x2494>
   19320:	movw	r1, #50421	; 0xc4f5
   19324:	movw	r0, #50425	; 0xc4f9
   19328:	cmp	r4, #9
   1932c:	movt	r1, #1
   19330:	movt	r0, #1
   19334:	moveq	r0, r1
   19338:	pop	{r4, r5, fp, pc}
   1933c:	ldrb	r1, [r0, #4]
   19340:	cmp	r1, #48	; 0x30
   19344:	ldrbeq	r1, [r0, #5]
   19348:	cmpeq	r1, #51	; 0x33
   1934c:	bne	19320 <lchmod@@Base+0x2478>
   19350:	ldrb	r1, [r0, #6]
   19354:	cmp	r1, #48	; 0x30
   19358:	ldrbeq	r0, [r0, #7]
   1935c:	cmpeq	r0, #0
   19360:	bne	19320 <lchmod@@Base+0x2478>
   19364:	ldrb	r1, [r5]
   19368:	movw	r2, #50435	; 0xc503
   1936c:	movw	r0, #50439	; 0xc507
   19370:	movt	r2, #1
   19374:	movt	r0, #1
   19378:	b	192f0 <lchmod@@Base+0x2448>
   1937c:	push	{r4, r5, r6, sl, fp, lr}
   19380:	add	fp, sp, #16
   19384:	ldr	r4, [r0], #8
   19388:	mov	r5, r1
   1938c:	cmp	r4, r0
   19390:	beq	193b4 <lchmod@@Base+0x250c>
   19394:	mov	r0, r4
   19398:	mov	r1, r5
   1939c:	bl	1b094 <lchmod@@Base+0x41ec>
   193a0:	mov	r6, r0
   193a4:	cmp	r0, #0
   193a8:	moveq	r6, r4
   193ac:	mov	r0, r6
   193b0:	pop	{r4, r5, r6, sl, fp, pc}
   193b4:	mov	r0, r5
   193b8:	bl	1b064 <lchmod@@Base+0x41bc>
   193bc:	cmp	r0, #0
   193c0:	moveq	r6, #0
   193c4:	moveq	r0, r6
   193c8:	popeq	{r4, r5, r6, sl, fp, pc}
   193cc:	mov	r1, r4
   193d0:	mov	r2, r5
   193d4:	mov	r6, r0
   193d8:	bl	11834 <memcpy@plt>
   193dc:	mov	r0, r6
   193e0:	pop	{r4, r5, r6, sl, fp, pc}
   193e4:	push	{r4, r5, r6, sl, fp, lr}
   193e8:	add	fp, sp, #16
   193ec:	mov	r4, r0
   193f0:	add	r6, r0, #8
   193f4:	ldrd	r0, [r0]
   193f8:	lsl	r5, r1, #1
   193fc:	cmp	r0, r6
   19400:	beq	1940c <lchmod@@Base+0x2564>
   19404:	bl	136a8 <__assert_fail@plt+0x1ae4>
   19408:	ldr	r1, [r4, #4]
   1940c:	cmp	r5, r1
   19410:	bcc	19434 <lchmod@@Base+0x258c>
   19414:	mov	r0, r5
   19418:	bl	1b064 <lchmod@@Base+0x41bc>
   1941c:	cmp	r0, #0
   19420:	strne	r0, [r4]
   19424:	movne	r0, #1
   19428:	strne	r5, [r4, #4]
   1942c:	popne	{r4, r5, r6, sl, fp, pc}
   19430:	b	19440 <lchmod@@Base+0x2598>
   19434:	bl	11a08 <__errno_location@plt>
   19438:	mov	r1, #12
   1943c:	str	r1, [r0]
   19440:	mov	r0, #0
   19444:	mov	r5, #1024	; 0x400
   19448:	str	r6, [r4]
   1944c:	str	r5, [r4, #4]
   19450:	pop	{r4, r5, r6, sl, fp, pc}
   19454:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19458:	add	fp, sp, #24
   1945c:	ldrd	r8, [r0]
   19460:	add	r7, r0, #8
   19464:	mov	r4, r0
   19468:	lsl	r5, r9, #1
   1946c:	cmp	r8, r7
   19470:	beq	1949c <lchmod@@Base+0x25f4>
   19474:	cmp	r5, r9
   19478:	bcc	194d0 <lchmod@@Base+0x2628>
   1947c:	mov	r0, r8
   19480:	mov	r1, r5
   19484:	bl	1b094 <lchmod@@Base+0x41ec>
   19488:	mov	r6, r0
   1948c:	cmp	r0, #0
   19490:	bne	194c0 <lchmod@@Base+0x2618>
   19494:	ldr	r8, [r4]
   19498:	b	194dc <lchmod@@Base+0x2634>
   1949c:	mov	r0, r5
   194a0:	bl	1b064 <lchmod@@Base+0x41bc>
   194a4:	cmp	r0, #0
   194a8:	moveq	r0, #0
   194ac:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   194b0:	ldr	r2, [r4, #4]
   194b4:	mov	r1, r8
   194b8:	mov	r6, r0
   194bc:	bl	11834 <memcpy@plt>
   194c0:	mov	r0, #1
   194c4:	str	r6, [r4]
   194c8:	str	r5, [r4, #4]
   194cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   194d0:	bl	11a08 <__errno_location@plt>
   194d4:	mov	r1, #12
   194d8:	str	r1, [r0]
   194dc:	mov	r0, r8
   194e0:	bl	136a8 <__assert_fail@plt+0x1ae4>
   194e4:	mov	r0, #0
   194e8:	mov	r5, #1024	; 0x400
   194ec:	str	r7, [r4]
   194f0:	str	r5, [r4, #4]
   194f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   194f8:	push	{r4, r5, fp, lr}
   194fc:	add	fp, sp, #8
   19500:	mov	r4, r1
   19504:	bl	119c0 <getfilecon@plt>
   19508:	cmp	r0, #10
   1950c:	beq	19524 <lchmod@@Base+0x267c>
   19510:	cmp	r0, #0
   19514:	bne	19568 <lchmod@@Base+0x26c0>
   19518:	bl	11a08 <__errno_location@plt>
   1951c:	mov	r1, #95	; 0x5f
   19520:	b	19560 <lchmod@@Base+0x26b8>
   19524:	ldr	r5, [r4]
   19528:	movw	r1, #50528	; 0xc560
   1952c:	movt	r1, #1
   19530:	mov	r0, r5
   19534:	bl	117d4 <strcmp@plt>
   19538:	mov	r1, r0
   1953c:	mov	r0, #10
   19540:	cmp	r1, #0
   19544:	popne	{r4, r5, fp, pc}
   19548:	mov	r0, r5
   1954c:	bl	11af8 <freecon@plt>
   19550:	mov	r0, #0
   19554:	str	r0, [r4]
   19558:	bl	11a08 <__errno_location@plt>
   1955c:	mov	r1, #61	; 0x3d
   19560:	str	r1, [r0]
   19564:	mvn	r0, #0
   19568:	pop	{r4, r5, fp, pc}
   1956c:	push	{r4, r5, fp, lr}
   19570:	add	fp, sp, #8
   19574:	mov	r4, r1
   19578:	bl	11948 <lgetfilecon@plt>
   1957c:	cmp	r0, #10
   19580:	beq	19598 <lchmod@@Base+0x26f0>
   19584:	cmp	r0, #0
   19588:	bne	195dc <lchmod@@Base+0x2734>
   1958c:	bl	11a08 <__errno_location@plt>
   19590:	mov	r1, #95	; 0x5f
   19594:	b	195d4 <lchmod@@Base+0x272c>
   19598:	ldr	r5, [r4]
   1959c:	movw	r1, #50528	; 0xc560
   195a0:	movt	r1, #1
   195a4:	mov	r0, r5
   195a8:	bl	117d4 <strcmp@plt>
   195ac:	mov	r1, r0
   195b0:	mov	r0, #10
   195b4:	cmp	r1, #0
   195b8:	popne	{r4, r5, fp, pc}
   195bc:	mov	r0, r5
   195c0:	bl	11af8 <freecon@plt>
   195c4:	mov	r0, #0
   195c8:	str	r0, [r4]
   195cc:	bl	11a08 <__errno_location@plt>
   195d0:	mov	r1, #61	; 0x3d
   195d4:	str	r1, [r0]
   195d8:	mvn	r0, #0
   195dc:	pop	{r4, r5, fp, pc}
   195e0:	push	{r4, r5, fp, lr}
   195e4:	add	fp, sp, #8
   195e8:	mov	r4, r1
   195ec:	bl	11894 <fgetfilecon@plt>
   195f0:	cmp	r0, #10
   195f4:	beq	1960c <lchmod@@Base+0x2764>
   195f8:	cmp	r0, #0
   195fc:	bne	19650 <lchmod@@Base+0x27a8>
   19600:	bl	11a08 <__errno_location@plt>
   19604:	mov	r1, #95	; 0x5f
   19608:	b	19648 <lchmod@@Base+0x27a0>
   1960c:	ldr	r5, [r4]
   19610:	movw	r1, #50528	; 0xc560
   19614:	movt	r1, #1
   19618:	mov	r0, r5
   1961c:	bl	117d4 <strcmp@plt>
   19620:	mov	r1, r0
   19624:	mov	r0, #10
   19628:	cmp	r1, #0
   1962c:	popne	{r4, r5, fp, pc}
   19630:	mov	r0, r5
   19634:	bl	11af8 <freecon@plt>
   19638:	mov	r0, #0
   1963c:	str	r0, [r4]
   19640:	bl	11a08 <__errno_location@plt>
   19644:	mov	r1, #61	; 0x3d
   19648:	str	r1, [r0]
   1964c:	mvn	r0, #0
   19650:	pop	{r4, r5, fp, pc}
   19654:	push	{r4, r5, r6, r7, fp, lr}
   19658:	add	fp, sp, #16
   1965c:	mov	r4, r0
   19660:	cmp	r0, #2
   19664:	movhi	r0, r4
   19668:	pophi	{r4, r5, r6, r7, fp, pc}
   1966c:	mov	r0, r4
   19670:	bl	1b7b8 <lchmod@@Base+0x4910>
   19674:	mov	r5, r0
   19678:	bl	11a08 <__errno_location@plt>
   1967c:	ldr	r7, [r0]
   19680:	mov	r6, r0
   19684:	mov	r0, r4
   19688:	bl	11b70 <close@plt>
   1968c:	mov	r0, r5
   19690:	str	r7, [r6]
   19694:	pop	{r4, r5, r6, r7, fp, pc}
   19698:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1969c:	add	fp, sp, #24
   196a0:	sub	sp, sp, #32
   196a4:	ldr	r6, [fp, #12]
   196a8:	ldr	r7, [fp, #8]
   196ac:	mov	r4, r2
   196b0:	mov	r8, r0
   196b4:	cmp	r1, #0
   196b8:	beq	196e0 <lchmod@@Base+0x2838>
   196bc:	movw	r2, #50538	; 0xc56a
   196c0:	mov	r5, r1
   196c4:	str	r3, [sp, #4]
   196c8:	str	r4, [sp]
   196cc:	mov	r0, r8
   196d0:	mov	r1, #1
   196d4:	movt	r2, #1
   196d8:	mov	r3, r5
   196dc:	b	196f8 <lchmod@@Base+0x2850>
   196e0:	movw	r2, #50550	; 0xc576
   196e4:	str	r3, [sp]
   196e8:	mov	r0, r8
   196ec:	mov	r1, #1
   196f0:	mov	r3, r4
   196f4:	movt	r2, #1
   196f8:	bl	11a50 <__fprintf_chk@plt>
   196fc:	movw	r1, #50557	; 0xc57d
   19700:	mov	r0, #0
   19704:	mov	r2, #5
   19708:	movt	r1, #1
   1970c:	bl	11870 <dcgettext@plt>
   19710:	movw	r2, #51275	; 0xc84b
   19714:	mov	r3, r0
   19718:	movw	r0, #2022	; 0x7e6
   1971c:	mov	r1, #1
   19720:	str	r0, [sp]
   19724:	movt	r2, #1
   19728:	mov	r0, r8
   1972c:	bl	11a50 <__fprintf_chk@plt>
   19730:	movw	r4, #49874	; 0xc2d2
   19734:	mov	r1, r8
   19738:	movt	r4, #1
   1973c:	mov	r0, r4
   19740:	bl	117b0 <fputs_unlocked@plt>
   19744:	movw	r1, #50561	; 0xc581
   19748:	mov	r0, #0
   1974c:	mov	r2, #5
   19750:	movt	r1, #1
   19754:	bl	11870 <dcgettext@plt>
   19758:	movw	r3, #50732	; 0xc62c
   1975c:	mov	r2, r0
   19760:	mov	r0, r8
   19764:	mov	r1, #1
   19768:	movt	r3, #1
   1976c:	bl	11a50 <__fprintf_chk@plt>
   19770:	mov	r0, r4
   19774:	mov	r1, r8
   19778:	bl	117b0 <fputs_unlocked@plt>
   1977c:	cmp	r6, #9
   19780:	bhi	197bc <lchmod@@Base+0x2914>
   19784:	add	r0, pc, #0
   19788:	ldr	pc, [r0, r6, lsl #2]
   1978c:			; <UNDEFINED> instruction: 0x000197b4
   19790:	andeq	r9, r1, r8, asr #15
   19794:	strdeq	r9, [r1], -r8
   19798:	andeq	r9, r1, r0, lsr #16
   1979c:	andeq	r9, r1, r8, asr #16
   197a0:	andeq	r9, r1, r0, ror r8
   197a4:	muleq	r1, r8, r8
   197a8:	ldrdeq	r9, [r1], -r0
   197ac:	andeq	r9, r1, r0, ror r9
   197b0:	andeq	r9, r1, r8, lsl r9
   197b4:	sub	sp, fp, #24
   197b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   197bc:	movw	r1, #51085	; 0xc78d
   197c0:	movt	r1, #1
   197c4:	b	19920 <lchmod@@Base+0x2a78>
   197c8:	movw	r1, #50766	; 0xc64e
   197cc:	mov	r0, #0
   197d0:	mov	r2, #5
   197d4:	movt	r1, #1
   197d8:	bl	11870 <dcgettext@plt>
   197dc:	ldr	r3, [r7]
   197e0:	mov	r2, r0
   197e4:	mov	r0, r8
   197e8:	mov	r1, #1
   197ec:	sub	sp, fp, #24
   197f0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   197f4:	b	11a50 <__fprintf_chk@plt>
   197f8:	movw	r1, #50782	; 0xc65e
   197fc:	mov	r0, #0
   19800:	mov	r2, #5
   19804:	movt	r1, #1
   19808:	bl	11870 <dcgettext@plt>
   1980c:	mov	r2, r0
   19810:	ldr	r3, [r7]
   19814:	ldr	r0, [r7, #4]
   19818:	str	r0, [sp]
   1981c:	b	1990c <lchmod@@Base+0x2a64>
   19820:	movw	r1, #50805	; 0xc675
   19824:	mov	r0, #0
   19828:	mov	r2, #5
   1982c:	movt	r1, #1
   19830:	bl	11870 <dcgettext@plt>
   19834:	ldr	r3, [r7]
   19838:	mov	r2, r0
   1983c:	ldmib	r7, {r0, r1}
   19840:	stm	sp, {r0, r1}
   19844:	b	1990c <lchmod@@Base+0x2a64>
   19848:	movw	r1, #50833	; 0xc691
   1984c:	mov	r0, #0
   19850:	mov	r2, #5
   19854:	movt	r1, #1
   19858:	bl	11870 <dcgettext@plt>
   1985c:	ldr	r3, [r7]
   19860:	mov	r2, r0
   19864:	ldmib	r7, {r0, r1, r7}
   19868:	stm	sp, {r0, r1, r7}
   1986c:	b	1990c <lchmod@@Base+0x2a64>
   19870:	movw	r1, #50865	; 0xc6b1
   19874:	mov	r0, #0
   19878:	mov	r2, #5
   1987c:	movt	r1, #1
   19880:	bl	11870 <dcgettext@plt>
   19884:	ldr	r3, [r7]
   19888:	mov	r2, r0
   1988c:	ldmib	r7, {r0, r1, r6, r7}
   19890:	stm	sp, {r0, r1, r6, r7}
   19894:	b	1990c <lchmod@@Base+0x2a64>
   19898:	movw	r1, #50901	; 0xc6d5
   1989c:	mov	r0, #0
   198a0:	mov	r2, #5
   198a4:	movt	r1, #1
   198a8:	bl	11870 <dcgettext@plt>
   198ac:	ldr	r3, [r7]
   198b0:	mov	r2, r0
   198b4:	ldmib	r7, {r0, r1, r6}
   198b8:	ldr	r5, [r7, #16]
   198bc:	ldr	r7, [r7, #20]
   198c0:	stm	sp, {r0, r1, r6}
   198c4:	str	r5, [sp, #12]
   198c8:	str	r7, [sp, #16]
   198cc:	b	1990c <lchmod@@Base+0x2a64>
   198d0:	movw	r1, #50941	; 0xc6fd
   198d4:	mov	r0, #0
   198d8:	mov	r2, #5
   198dc:	movt	r1, #1
   198e0:	bl	11870 <dcgettext@plt>
   198e4:	ldr	r3, [r7]
   198e8:	mov	r2, r0
   198ec:	ldmib	r7, {r0, r1, r6}
   198f0:	ldr	r5, [r7, #16]
   198f4:	ldr	r4, [r7, #20]
   198f8:	ldr	r7, [r7, #24]
   198fc:	stm	sp, {r0, r1, r6}
   19900:	str	r5, [sp, #12]
   19904:	str	r4, [sp, #16]
   19908:	str	r7, [sp, #20]
   1990c:	mov	r0, r8
   19910:	mov	r1, #1
   19914:	b	199c0 <lchmod@@Base+0x2b18>
   19918:	movw	r1, #51033	; 0xc759
   1991c:	movt	r1, #1
   19920:	mov	r0, #0
   19924:	mov	r2, #5
   19928:	bl	11870 <dcgettext@plt>
   1992c:	mov	ip, r0
   19930:	ldr	r3, [r7]
   19934:	ldr	r0, [r7, #4]
   19938:	ldr	r1, [r7, #8]
   1993c:	ldr	r6, [r7, #12]
   19940:	ldr	r5, [r7, #16]
   19944:	ldr	r4, [r7, #20]
   19948:	ldr	r2, [r7, #24]
   1994c:	ldr	lr, [r7, #28]
   19950:	ldr	r7, [r7, #32]
   19954:	stm	sp, {r0, r1, r6}
   19958:	str	r5, [sp, #12]
   1995c:	str	r4, [sp, #16]
   19960:	str	r2, [sp, #20]
   19964:	str	lr, [sp, #24]
   19968:	str	r7, [sp, #28]
   1996c:	b	199b4 <lchmod@@Base+0x2b0c>
   19970:	movw	r1, #50985	; 0xc729
   19974:	mov	r0, #0
   19978:	mov	r2, #5
   1997c:	movt	r1, #1
   19980:	bl	11870 <dcgettext@plt>
   19984:	mov	ip, r0
   19988:	ldr	r3, [r7]
   1998c:	ldmib	r7, {r0, r1, r6}
   19990:	ldr	r5, [r7, #16]
   19994:	ldr	r4, [r7, #20]
   19998:	ldr	r2, [r7, #24]
   1999c:	ldr	r7, [r7, #28]
   199a0:	stm	sp, {r0, r1, r6}
   199a4:	str	r5, [sp, #12]
   199a8:	str	r4, [sp, #16]
   199ac:	str	r2, [sp, #20]
   199b0:	str	r7, [sp, #24]
   199b4:	mov	r0, r8
   199b8:	mov	r1, #1
   199bc:	mov	r2, ip
   199c0:	bl	11a50 <__fprintf_chk@plt>
   199c4:	sub	sp, fp, #24
   199c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   199cc:	push	{r4, sl, fp, lr}
   199d0:	add	fp, sp, #8
   199d4:	sub	sp, sp, #8
   199d8:	ldr	ip, [fp, #8]
   199dc:	mov	lr, #0
   199e0:	ldr	r4, [ip, lr, lsl #2]
   199e4:	add	lr, lr, #1
   199e8:	cmp	r4, #0
   199ec:	bne	199e0 <lchmod@@Base+0x2b38>
   199f0:	sub	r4, lr, #1
   199f4:	str	ip, [sp]
   199f8:	str	r4, [sp, #4]
   199fc:	bl	19698 <lchmod@@Base+0x27f0>
   19a00:	sub	sp, fp, #8
   19a04:	pop	{r4, sl, fp, pc}
   19a08:	push	{fp, lr}
   19a0c:	mov	fp, sp
   19a10:	sub	sp, sp, #48	; 0x30
   19a14:	ldr	ip, [fp, #8]
   19a18:	ldr	lr, [ip]
   19a1c:	cmp	lr, #0
   19a20:	str	lr, [sp, #8]
   19a24:	beq	19ac0 <lchmod@@Base+0x2c18>
   19a28:	ldr	lr, [ip, #4]
   19a2c:	cmp	lr, #0
   19a30:	str	lr, [sp, #12]
   19a34:	beq	19ac8 <lchmod@@Base+0x2c20>
   19a38:	ldr	lr, [ip, #8]
   19a3c:	cmp	lr, #0
   19a40:	str	lr, [sp, #16]
   19a44:	beq	19ad0 <lchmod@@Base+0x2c28>
   19a48:	ldr	lr, [ip, #12]
   19a4c:	cmp	lr, #0
   19a50:	str	lr, [sp, #20]
   19a54:	beq	19ad8 <lchmod@@Base+0x2c30>
   19a58:	ldr	lr, [ip, #16]
   19a5c:	cmp	lr, #0
   19a60:	str	lr, [sp, #24]
   19a64:	beq	19ae0 <lchmod@@Base+0x2c38>
   19a68:	ldr	lr, [ip, #20]
   19a6c:	cmp	lr, #0
   19a70:	str	lr, [sp, #28]
   19a74:	beq	19ae8 <lchmod@@Base+0x2c40>
   19a78:	ldr	lr, [ip, #24]
   19a7c:	cmp	lr, #0
   19a80:	str	lr, [sp, #32]
   19a84:	beq	19af0 <lchmod@@Base+0x2c48>
   19a88:	ldr	lr, [ip, #28]
   19a8c:	cmp	lr, #0
   19a90:	str	lr, [sp, #36]	; 0x24
   19a94:	beq	19af8 <lchmod@@Base+0x2c50>
   19a98:	ldr	lr, [ip, #32]
   19a9c:	cmp	lr, #0
   19aa0:	str	lr, [sp, #40]	; 0x28
   19aa4:	beq	19b00 <lchmod@@Base+0x2c58>
   19aa8:	ldr	lr, [ip, #36]	; 0x24
   19aac:	mov	ip, #10
   19ab0:	cmp	lr, #0
   19ab4:	str	lr, [sp, #44]	; 0x2c
   19ab8:	movweq	ip, #9
   19abc:	b	19b04 <lchmod@@Base+0x2c5c>
   19ac0:	mov	ip, #0
   19ac4:	b	19b04 <lchmod@@Base+0x2c5c>
   19ac8:	mov	ip, #1
   19acc:	b	19b04 <lchmod@@Base+0x2c5c>
   19ad0:	mov	ip, #2
   19ad4:	b	19b04 <lchmod@@Base+0x2c5c>
   19ad8:	mov	ip, #3
   19adc:	b	19b04 <lchmod@@Base+0x2c5c>
   19ae0:	mov	ip, #4
   19ae4:	b	19b04 <lchmod@@Base+0x2c5c>
   19ae8:	mov	ip, #5
   19aec:	b	19b04 <lchmod@@Base+0x2c5c>
   19af0:	mov	ip, #6
   19af4:	b	19b04 <lchmod@@Base+0x2c5c>
   19af8:	mov	ip, #7
   19afc:	b	19b04 <lchmod@@Base+0x2c5c>
   19b00:	mov	ip, #8
   19b04:	add	lr, sp, #8
   19b08:	str	ip, [sp, #4]
   19b0c:	str	lr, [sp]
   19b10:	bl	19698 <lchmod@@Base+0x27f0>
   19b14:	mov	sp, fp
   19b18:	pop	{fp, pc}
   19b1c:	push	{fp, lr}
   19b20:	mov	fp, sp
   19b24:	sub	sp, sp, #56	; 0x38
   19b28:	add	ip, fp, #8
   19b2c:	str	ip, [sp, #12]
   19b30:	ldr	lr, [fp, #8]
   19b34:	cmp	lr, #0
   19b38:	str	lr, [sp, #16]
   19b3c:	beq	19bd8 <lchmod@@Base+0x2d30>
   19b40:	ldr	lr, [ip, #4]
   19b44:	cmp	lr, #0
   19b48:	str	lr, [sp, #20]
   19b4c:	beq	19be0 <lchmod@@Base+0x2d38>
   19b50:	ldr	lr, [ip, #8]
   19b54:	cmp	lr, #0
   19b58:	str	lr, [sp, #24]
   19b5c:	beq	19be8 <lchmod@@Base+0x2d40>
   19b60:	ldr	lr, [ip, #12]
   19b64:	cmp	lr, #0
   19b68:	str	lr, [sp, #28]
   19b6c:	beq	19bf0 <lchmod@@Base+0x2d48>
   19b70:	ldr	lr, [ip, #16]
   19b74:	cmp	lr, #0
   19b78:	str	lr, [sp, #32]
   19b7c:	beq	19bf8 <lchmod@@Base+0x2d50>
   19b80:	ldr	lr, [ip, #20]
   19b84:	cmp	lr, #0
   19b88:	str	lr, [sp, #36]	; 0x24
   19b8c:	beq	19c00 <lchmod@@Base+0x2d58>
   19b90:	ldr	lr, [ip, #24]
   19b94:	cmp	lr, #0
   19b98:	str	lr, [sp, #40]	; 0x28
   19b9c:	beq	19c08 <lchmod@@Base+0x2d60>
   19ba0:	ldr	lr, [ip, #28]
   19ba4:	cmp	lr, #0
   19ba8:	str	lr, [sp, #44]	; 0x2c
   19bac:	beq	19c10 <lchmod@@Base+0x2d68>
   19bb0:	ldr	lr, [ip, #32]
   19bb4:	cmp	lr, #0
   19bb8:	str	lr, [sp, #48]	; 0x30
   19bbc:	beq	19c18 <lchmod@@Base+0x2d70>
   19bc0:	ldr	lr, [ip, #36]	; 0x24
   19bc4:	mov	ip, #10
   19bc8:	cmp	lr, #0
   19bcc:	str	lr, [sp, #52]	; 0x34
   19bd0:	movweq	ip, #9
   19bd4:	b	19c1c <lchmod@@Base+0x2d74>
   19bd8:	mov	ip, #0
   19bdc:	b	19c1c <lchmod@@Base+0x2d74>
   19be0:	mov	ip, #1
   19be4:	b	19c1c <lchmod@@Base+0x2d74>
   19be8:	mov	ip, #2
   19bec:	b	19c1c <lchmod@@Base+0x2d74>
   19bf0:	mov	ip, #3
   19bf4:	b	19c1c <lchmod@@Base+0x2d74>
   19bf8:	mov	ip, #4
   19bfc:	b	19c1c <lchmod@@Base+0x2d74>
   19c00:	mov	ip, #5
   19c04:	b	19c1c <lchmod@@Base+0x2d74>
   19c08:	mov	ip, #6
   19c0c:	b	19c1c <lchmod@@Base+0x2d74>
   19c10:	mov	ip, #7
   19c14:	b	19c1c <lchmod@@Base+0x2d74>
   19c18:	mov	ip, #8
   19c1c:	add	lr, sp, #16
   19c20:	str	ip, [sp, #4]
   19c24:	str	lr, [sp]
   19c28:	bl	19698 <lchmod@@Base+0x27f0>
   19c2c:	mov	sp, fp
   19c30:	pop	{fp, pc}
   19c34:	push	{fp, lr}
   19c38:	mov	fp, sp
   19c3c:	movw	r0, #53732	; 0xd1e4
   19c40:	movt	r0, #2
   19c44:	ldr	r1, [r0]
   19c48:	movw	r0, #49874	; 0xc2d2
   19c4c:	movt	r0, #1
   19c50:	bl	117b0 <fputs_unlocked@plt>
   19c54:	movw	r1, #51145	; 0xc7c9
   19c58:	mov	r0, #0
   19c5c:	mov	r2, #5
   19c60:	movt	r1, #1
   19c64:	bl	11870 <dcgettext@plt>
   19c68:	movw	r2, #51165	; 0xc7dd
   19c6c:	mov	r1, r0
   19c70:	mov	r0, #1
   19c74:	movt	r2, #1
   19c78:	bl	11a38 <__printf_chk@plt>
   19c7c:	movw	r1, #51187	; 0xc7f3
   19c80:	mov	r0, #0
   19c84:	mov	r2, #5
   19c88:	movt	r1, #1
   19c8c:	bl	11870 <dcgettext@plt>
   19c90:	movw	r2, #49056	; 0xbfa0
   19c94:	movw	r3, #49683	; 0xc213
   19c98:	mov	r1, r0
   19c9c:	mov	r0, #1
   19ca0:	movt	r2, #1
   19ca4:	movt	r3, #1
   19ca8:	bl	11a38 <__printf_chk@plt>
   19cac:	movw	r1, #51207	; 0xc807
   19cb0:	mov	r0, #0
   19cb4:	mov	r2, #5
   19cb8:	movt	r1, #1
   19cbc:	bl	11870 <dcgettext@plt>
   19cc0:	movw	r2, #51246	; 0xc82e
   19cc4:	mov	r1, r0
   19cc8:	mov	r0, #1
   19ccc:	movt	r2, #1
   19cd0:	pop	{fp, lr}
   19cd4:	b	11a38 <__printf_chk@plt>
   19cd8:	push	{r4, r5, r6, sl, fp, lr}
   19cdc:	add	fp, sp, #16
   19ce0:	mov	r4, r2
   19ce4:	mov	r5, r1
   19ce8:	mov	r6, r0
   19cec:	bl	1b77c <lchmod@@Base+0x48d4>
   19cf0:	cmp	r0, #0
   19cf4:	popne	{r4, r5, r6, sl, fp, pc}
   19cf8:	cmp	r6, #0
   19cfc:	beq	19d10 <lchmod@@Base+0x2e68>
   19d00:	cmp	r5, #0
   19d04:	cmpne	r4, #0
   19d08:	bne	19d10 <lchmod@@Base+0x2e68>
   19d0c:	pop	{r4, r5, r6, sl, fp, pc}
   19d10:	bl	1a2b0 <lchmod@@Base+0x3408>
   19d14:	push	{r4, r5, r6, sl, fp, lr}
   19d18:	add	fp, sp, #16
   19d1c:	mov	r4, r2
   19d20:	mov	r5, r1
   19d24:	mov	r6, r0
   19d28:	bl	1b77c <lchmod@@Base+0x48d4>
   19d2c:	cmp	r0, #0
   19d30:	popne	{r4, r5, r6, sl, fp, pc}
   19d34:	cmp	r6, #0
   19d38:	beq	19d4c <lchmod@@Base+0x2ea4>
   19d3c:	cmp	r5, #0
   19d40:	cmpne	r4, #0
   19d44:	bne	19d4c <lchmod@@Base+0x2ea4>
   19d48:	pop	{r4, r5, r6, sl, fp, pc}
   19d4c:	bl	1a2b0 <lchmod@@Base+0x3408>
   19d50:	push	{fp, lr}
   19d54:	mov	fp, sp
   19d58:	bl	1b064 <lchmod@@Base+0x41bc>
   19d5c:	cmp	r0, #0
   19d60:	popne	{fp, pc}
   19d64:	bl	1a2b0 <lchmod@@Base+0x3408>
   19d68:	push	{fp, lr}
   19d6c:	mov	fp, sp
   19d70:	bl	1b064 <lchmod@@Base+0x41bc>
   19d74:	cmp	r0, #0
   19d78:	popne	{fp, pc}
   19d7c:	bl	1a2b0 <lchmod@@Base+0x3408>
   19d80:	push	{fp, lr}
   19d84:	mov	fp, sp
   19d88:	bl	1b064 <lchmod@@Base+0x41bc>
   19d8c:	cmp	r0, #0
   19d90:	popne	{fp, pc}
   19d94:	bl	1a2b0 <lchmod@@Base+0x3408>
   19d98:	push	{r4, r5, fp, lr}
   19d9c:	add	fp, sp, #8
   19da0:	mov	r4, r1
   19da4:	mov	r5, r0
   19da8:	bl	1b094 <lchmod@@Base+0x41ec>
   19dac:	cmp	r0, #0
   19db0:	popne	{r4, r5, fp, pc}
   19db4:	cmp	r5, #0
   19db8:	beq	19dc8 <lchmod@@Base+0x2f20>
   19dbc:	cmp	r4, #0
   19dc0:	bne	19dc8 <lchmod@@Base+0x2f20>
   19dc4:	pop	{r4, r5, fp, pc}
   19dc8:	bl	1a2b0 <lchmod@@Base+0x3408>
   19dcc:	push	{fp, lr}
   19dd0:	mov	fp, sp
   19dd4:	cmp	r1, #0
   19dd8:	orreq	r1, r1, #1
   19ddc:	bl	1b094 <lchmod@@Base+0x41ec>
   19de0:	cmp	r0, #0
   19de4:	popne	{fp, pc}
   19de8:	bl	1a2b0 <lchmod@@Base+0x3408>
   19dec:	push	{fp, lr}
   19df0:	mov	fp, sp
   19df4:	clz	r3, r2
   19df8:	lsr	ip, r3, #5
   19dfc:	clz	r3, r1
   19e00:	lsr	r3, r3, #5
   19e04:	orrs	r3, r3, ip
   19e08:	movwne	r1, #1
   19e0c:	movwne	r2, #1
   19e10:	bl	1b77c <lchmod@@Base+0x48d4>
   19e14:	cmp	r0, #0
   19e18:	popne	{fp, pc}
   19e1c:	bl	1a2b0 <lchmod@@Base+0x3408>
   19e20:	push	{fp, lr}
   19e24:	mov	fp, sp
   19e28:	mov	r2, r1
   19e2c:	mov	r1, r0
   19e30:	mov	r0, #0
   19e34:	bl	1b77c <lchmod@@Base+0x48d4>
   19e38:	cmp	r0, #0
   19e3c:	popne	{fp, pc}
   19e40:	bl	1a2b0 <lchmod@@Base+0x3408>
   19e44:	push	{fp, lr}
   19e48:	mov	fp, sp
   19e4c:	mov	r2, r1
   19e50:	mov	r1, r0
   19e54:	clz	r0, r2
   19e58:	clz	r3, r1
   19e5c:	lsr	r0, r0, #5
   19e60:	lsr	r3, r3, #5
   19e64:	orrs	r0, r3, r0
   19e68:	movwne	r1, #1
   19e6c:	movwne	r2, #1
   19e70:	mov	r0, #0
   19e74:	bl	1b77c <lchmod@@Base+0x48d4>
   19e78:	cmp	r0, #0
   19e7c:	popne	{fp, pc}
   19e80:	bl	1a2b0 <lchmod@@Base+0x3408>
   19e84:	push	{r4, r5, r6, sl, fp, lr}
   19e88:	add	fp, sp, #16
   19e8c:	ldr	r5, [r1]
   19e90:	mov	r4, r1
   19e94:	mov	r6, r0
   19e98:	cmp	r0, #0
   19e9c:	beq	19eb4 <lchmod@@Base+0x300c>
   19ea0:	mov	r0, #1
   19ea4:	add	r0, r0, r5, lsr #1
   19ea8:	adds	r5, r5, r0
   19eac:	bcc	19ebc <lchmod@@Base+0x3014>
   19eb0:	b	19ef8 <lchmod@@Base+0x3050>
   19eb4:	cmp	r5, #0
   19eb8:	movweq	r5, #64	; 0x40
   19ebc:	mov	r0, r6
   19ec0:	mov	r1, r5
   19ec4:	mov	r2, #1
   19ec8:	bl	1b77c <lchmod@@Base+0x48d4>
   19ecc:	cmp	r5, #0
   19ed0:	mov	r1, r5
   19ed4:	movwne	r1, #1
   19ed8:	cmp	r0, #0
   19edc:	bne	19ef0 <lchmod@@Base+0x3048>
   19ee0:	clz	r2, r6
   19ee4:	lsr	r2, r2, #5
   19ee8:	orrs	r1, r2, r1
   19eec:	bne	19ef8 <lchmod@@Base+0x3050>
   19ef0:	str	r5, [r4]
   19ef4:	pop	{r4, r5, r6, sl, fp, pc}
   19ef8:	bl	1a2b0 <lchmod@@Base+0x3408>
   19efc:	push	{r4, r5, r6, r7, fp, lr}
   19f00:	add	fp, sp, #16
   19f04:	ldr	r5, [r1]
   19f08:	mov	r6, r2
   19f0c:	mov	r4, r1
   19f10:	mov	r7, r0
   19f14:	cmp	r0, #0
   19f18:	beq	19f30 <lchmod@@Base+0x3088>
   19f1c:	mov	r0, #1
   19f20:	add	r0, r0, r5, lsr #1
   19f24:	adds	r5, r5, r0
   19f28:	bcc	19f48 <lchmod@@Base+0x30a0>
   19f2c:	b	19f7c <lchmod@@Base+0x30d4>
   19f30:	cmp	r5, #0
   19f34:	bne	19f48 <lchmod@@Base+0x30a0>
   19f38:	mov	r0, #64	; 0x40
   19f3c:	cmp	r6, #64	; 0x40
   19f40:	udiv	r5, r0, r6
   19f44:	addhi	r5, r5, #1
   19f48:	mov	r0, r7
   19f4c:	mov	r1, r5
   19f50:	mov	r2, r6
   19f54:	bl	1b77c <lchmod@@Base+0x48d4>
   19f58:	cmp	r0, #0
   19f5c:	bne	19f74 <lchmod@@Base+0x30cc>
   19f60:	cmp	r7, #0
   19f64:	beq	19f7c <lchmod@@Base+0x30d4>
   19f68:	cmp	r6, #0
   19f6c:	cmpne	r5, #0
   19f70:	bne	19f7c <lchmod@@Base+0x30d4>
   19f74:	str	r5, [r4]
   19f78:	pop	{r4, r5, r6, r7, fp, pc}
   19f7c:	bl	1a2b0 <lchmod@@Base+0x3408>
   19f80:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   19f84:	add	fp, sp, #24
   19f88:	mov	r8, r1
   19f8c:	ldr	r1, [r1]
   19f90:	mov	r5, r0
   19f94:	add	r0, r1, r1, asr #1
   19f98:	cmp	r0, r1
   19f9c:	mvnvs	r0, #-2147483648	; 0x80000000
   19fa0:	cmp	r0, r3
   19fa4:	mov	r7, r0
   19fa8:	movgt	r7, r3
   19fac:	cmn	r3, #1
   19fb0:	movle	r7, r0
   19fb4:	ldr	r0, [fp, #8]
   19fb8:	cmn	r0, #1
   19fbc:	ble	19fe4 <lchmod@@Base+0x313c>
   19fc0:	cmp	r0, #0
   19fc4:	beq	1a038 <lchmod@@Base+0x3190>
   19fc8:	cmn	r7, #1
   19fcc:	ble	1a00c <lchmod@@Base+0x3164>
   19fd0:	mvn	r4, #-2147483648	; 0x80000000
   19fd4:	udiv	r6, r4, r0
   19fd8:	cmp	r6, r7
   19fdc:	bge	1a038 <lchmod@@Base+0x3190>
   19fe0:	b	1a048 <lchmod@@Base+0x31a0>
   19fe4:	cmn	r7, #1
   19fe8:	ble	1a028 <lchmod@@Base+0x3180>
   19fec:	cmn	r0, #1
   19ff0:	beq	1a038 <lchmod@@Base+0x3190>
   19ff4:	mov	r6, #-2147483648	; 0x80000000
   19ff8:	mvn	r4, #-2147483648	; 0x80000000
   19ffc:	sdiv	r6, r6, r0
   1a000:	cmp	r6, r7
   1a004:	bge	1a038 <lchmod@@Base+0x3190>
   1a008:	b	1a048 <lchmod@@Base+0x31a0>
   1a00c:	beq	1a038 <lchmod@@Base+0x3190>
   1a010:	mov	r6, #-2147483648	; 0x80000000
   1a014:	mvn	r4, #-2147483648	; 0x80000000
   1a018:	sdiv	r6, r6, r7
   1a01c:	cmp	r6, r0
   1a020:	bge	1a038 <lchmod@@Base+0x3190>
   1a024:	b	1a048 <lchmod@@Base+0x31a0>
   1a028:	mvn	r4, #-2147483648	; 0x80000000
   1a02c:	sdiv	r6, r4, r0
   1a030:	cmp	r7, r6
   1a034:	blt	1a048 <lchmod@@Base+0x31a0>
   1a038:	mul	r6, r7, r0
   1a03c:	mov	r4, #64	; 0x40
   1a040:	cmp	r6, #63	; 0x3f
   1a044:	bgt	1a050 <lchmod@@Base+0x31a8>
   1a048:	sdiv	r7, r4, r0
   1a04c:	mul	r6, r7, r0
   1a050:	cmp	r5, #0
   1a054:	moveq	r4, #0
   1a058:	streq	r4, [r8]
   1a05c:	sub	r4, r7, r1
   1a060:	cmp	r4, r2
   1a064:	bge	1a110 <lchmod@@Base+0x3268>
   1a068:	add	r7, r1, r2
   1a06c:	mov	r6, #0
   1a070:	mov	r2, #0
   1a074:	cmp	r7, r3
   1a078:	movwgt	r6, #1
   1a07c:	cmn	r3, #1
   1a080:	movwgt	r2, #1
   1a084:	cmp	r7, r1
   1a088:	bvs	1a144 <lchmod@@Base+0x329c>
   1a08c:	ands	r1, r2, r6
   1a090:	bne	1a144 <lchmod@@Base+0x329c>
   1a094:	cmn	r0, #1
   1a098:	ble	1a0c0 <lchmod@@Base+0x3218>
   1a09c:	cmp	r0, #0
   1a0a0:	beq	1a10c <lchmod@@Base+0x3264>
   1a0a4:	cmn	r7, #1
   1a0a8:	ble	1a0e4 <lchmod@@Base+0x323c>
   1a0ac:	mvn	r1, #-2147483648	; 0x80000000
   1a0b0:	udiv	r1, r1, r0
   1a0b4:	cmp	r1, r7
   1a0b8:	bge	1a10c <lchmod@@Base+0x3264>
   1a0bc:	b	1a144 <lchmod@@Base+0x329c>
   1a0c0:	cmn	r7, #1
   1a0c4:	ble	1a0fc <lchmod@@Base+0x3254>
   1a0c8:	cmn	r0, #1
   1a0cc:	beq	1a10c <lchmod@@Base+0x3264>
   1a0d0:	mov	r1, #-2147483648	; 0x80000000
   1a0d4:	sdiv	r1, r1, r0
   1a0d8:	cmp	r1, r7
   1a0dc:	bge	1a10c <lchmod@@Base+0x3264>
   1a0e0:	b	1a144 <lchmod@@Base+0x329c>
   1a0e4:	beq	1a10c <lchmod@@Base+0x3264>
   1a0e8:	mov	r1, #-2147483648	; 0x80000000
   1a0ec:	sdiv	r1, r1, r7
   1a0f0:	cmp	r1, r0
   1a0f4:	bge	1a10c <lchmod@@Base+0x3264>
   1a0f8:	b	1a144 <lchmod@@Base+0x329c>
   1a0fc:	mvn	r1, #-2147483648	; 0x80000000
   1a100:	sdiv	r1, r1, r0
   1a104:	cmp	r7, r1
   1a108:	blt	1a144 <lchmod@@Base+0x329c>
   1a10c:	mul	r6, r7, r0
   1a110:	mov	r0, r5
   1a114:	mov	r1, r6
   1a118:	bl	1b094 <lchmod@@Base+0x41ec>
   1a11c:	cmp	r6, #0
   1a120:	movwne	r6, #1
   1a124:	cmp	r0, #0
   1a128:	bne	1a13c <lchmod@@Base+0x3294>
   1a12c:	clz	r1, r5
   1a130:	lsr	r1, r1, #5
   1a134:	orrs	r1, r1, r6
   1a138:	bne	1a144 <lchmod@@Base+0x329c>
   1a13c:	str	r7, [r8]
   1a140:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a144:	bl	1a2b0 <lchmod@@Base+0x3408>
   1a148:	push	{fp, lr}
   1a14c:	mov	fp, sp
   1a150:	mov	r1, #1
   1a154:	bl	1b010 <lchmod@@Base+0x4168>
   1a158:	cmp	r0, #0
   1a15c:	popne	{fp, pc}
   1a160:	bl	1a2b0 <lchmod@@Base+0x3408>
   1a164:	push	{fp, lr}
   1a168:	mov	fp, sp
   1a16c:	bl	1b010 <lchmod@@Base+0x4168>
   1a170:	cmp	r0, #0
   1a174:	popne	{fp, pc}
   1a178:	bl	1a2b0 <lchmod@@Base+0x3408>
   1a17c:	push	{fp, lr}
   1a180:	mov	fp, sp
   1a184:	mov	r1, #1
   1a188:	bl	1b010 <lchmod@@Base+0x4168>
   1a18c:	cmp	r0, #0
   1a190:	popne	{fp, pc}
   1a194:	bl	1a2b0 <lchmod@@Base+0x3408>
   1a198:	push	{fp, lr}
   1a19c:	mov	fp, sp
   1a1a0:	bl	1b010 <lchmod@@Base+0x4168>
   1a1a4:	cmp	r0, #0
   1a1a8:	popne	{fp, pc}
   1a1ac:	bl	1a2b0 <lchmod@@Base+0x3408>
   1a1b0:	push	{r4, r5, r6, sl, fp, lr}
   1a1b4:	add	fp, sp, #16
   1a1b8:	mov	r5, r0
   1a1bc:	mov	r0, r1
   1a1c0:	mov	r4, r1
   1a1c4:	bl	1b064 <lchmod@@Base+0x41bc>
   1a1c8:	cmp	r0, #0
   1a1cc:	beq	1a1e8 <lchmod@@Base+0x3340>
   1a1d0:	mov	r1, r5
   1a1d4:	mov	r2, r4
   1a1d8:	mov	r6, r0
   1a1dc:	bl	11834 <memcpy@plt>
   1a1e0:	mov	r0, r6
   1a1e4:	pop	{r4, r5, r6, sl, fp, pc}
   1a1e8:	bl	1a2b0 <lchmod@@Base+0x3408>
   1a1ec:	push	{r4, r5, r6, sl, fp, lr}
   1a1f0:	add	fp, sp, #16
   1a1f4:	mov	r5, r0
   1a1f8:	mov	r0, r1
   1a1fc:	mov	r4, r1
   1a200:	bl	1b064 <lchmod@@Base+0x41bc>
   1a204:	cmp	r0, #0
   1a208:	beq	1a224 <lchmod@@Base+0x337c>
   1a20c:	mov	r1, r5
   1a210:	mov	r2, r4
   1a214:	mov	r6, r0
   1a218:	bl	11834 <memcpy@plt>
   1a21c:	mov	r0, r6
   1a220:	pop	{r4, r5, r6, sl, fp, pc}
   1a224:	bl	1a2b0 <lchmod@@Base+0x3408>
   1a228:	push	{r4, r5, r6, sl, fp, lr}
   1a22c:	add	fp, sp, #16
   1a230:	mov	r5, r0
   1a234:	add	r0, r1, #1
   1a238:	mov	r4, r1
   1a23c:	bl	1b064 <lchmod@@Base+0x41bc>
   1a240:	cmp	r0, #0
   1a244:	beq	1a26c <lchmod@@Base+0x33c4>
   1a248:	mov	r6, r0
   1a24c:	mov	r0, #0
   1a250:	mov	r1, r5
   1a254:	mov	r2, r4
   1a258:	strb	r0, [r6, r4]
   1a25c:	mov	r0, r6
   1a260:	bl	11834 <memcpy@plt>
   1a264:	mov	r0, r6
   1a268:	pop	{r4, r5, r6, sl, fp, pc}
   1a26c:	bl	1a2b0 <lchmod@@Base+0x3408>
   1a270:	push	{r4, r5, r6, sl, fp, lr}
   1a274:	add	fp, sp, #16
   1a278:	mov	r4, r0
   1a27c:	bl	119cc <strlen@plt>
   1a280:	add	r5, r0, #1
   1a284:	mov	r0, r5
   1a288:	bl	1b064 <lchmod@@Base+0x41bc>
   1a28c:	cmp	r0, #0
   1a290:	beq	1a2ac <lchmod@@Base+0x3404>
   1a294:	mov	r1, r4
   1a298:	mov	r2, r5
   1a29c:	mov	r6, r0
   1a2a0:	bl	11834 <memcpy@plt>
   1a2a4:	mov	r0, r6
   1a2a8:	pop	{r4, r5, r6, sl, fp, pc}
   1a2ac:	bl	1a2b0 <lchmod@@Base+0x3408>
   1a2b0:	push	{fp, lr}
   1a2b4:	mov	fp, sp
   1a2b8:	movw	r0, #53644	; 0xd18c
   1a2bc:	movw	r1, #51322	; 0xc87a
   1a2c0:	mov	r2, #5
   1a2c4:	movt	r0, #2
   1a2c8:	movt	r1, #1
   1a2cc:	ldr	r4, [r0]
   1a2d0:	mov	r0, #0
   1a2d4:	bl	11870 <dcgettext@plt>
   1a2d8:	movw	r2, #50063	; 0xc38f
   1a2dc:	mov	r3, r0
   1a2e0:	mov	r0, r4
   1a2e4:	mov	r1, #0
   1a2e8:	movt	r2, #1
   1a2ec:	bl	11930 <error@plt>
   1a2f0:	bl	11b64 <abort@plt>
   1a2f4:	push	{fp, lr}
   1a2f8:	mov	fp, sp
   1a2fc:	orr	r1, r1, #512	; 0x200
   1a300:	bl	136d0 <__assert_fail@plt+0x1b0c>
   1a304:	cmp	r0, #0
   1a308:	popne	{fp, pc}
   1a30c:	bl	11a08 <__errno_location@plt>
   1a310:	ldr	r0, [r0]
   1a314:	cmp	r0, #22
   1a318:	bne	1a33c <lchmod@@Base+0x3494>
   1a31c:	movw	r0, #51339	; 0xc88b
   1a320:	movw	r1, #51355	; 0xc89b
   1a324:	movw	r3, #51366	; 0xc8a6
   1a328:	mov	r2, #41	; 0x29
   1a32c:	movt	r0, #1
   1a330:	movt	r1, #1
   1a334:	movt	r3, #1
   1a338:	bl	11bc4 <__assert_fail@plt>
   1a33c:	bl	1a2b0 <lchmod@@Base+0x3408>
   1a340:	ldr	r0, [r0, #48]	; 0x30
   1a344:	and	r0, r0, #17
   1a348:	cmp	r0, #16
   1a34c:	moveq	r0, #1
   1a350:	bxeq	lr
   1a354:	cmp	r0, #17
   1a358:	movne	r0, #0
   1a35c:	bxne	lr
   1a360:	ldr	r0, [r1, #48]	; 0x30
   1a364:	cmp	r0, #0
   1a368:	movwne	r0, #1
   1a36c:	bx	lr
   1a370:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a374:	add	fp, sp, #28
   1a378:	sub	sp, sp, #44	; 0x2c
   1a37c:	cmp	r2, #37	; 0x25
   1a380:	bcs	1aff0 <lchmod@@Base+0x4148>
   1a384:	ldr	sl, [fp, #8]
   1a388:	mov	r6, r2
   1a38c:	mov	r7, r1
   1a390:	mov	r4, r0
   1a394:	str	r3, [sp, #36]	; 0x24
   1a398:	bl	11a08 <__errno_location@plt>
   1a39c:	mov	r5, r0
   1a3a0:	mov	r0, #0
   1a3a4:	str	r0, [r5]
   1a3a8:	bl	1199c <__ctype_b_loc@plt>
   1a3ac:	ldr	r1, [r0]
   1a3b0:	mov	r2, r4
   1a3b4:	ldrb	r0, [r2], #1
   1a3b8:	add	r3, r1, r0, lsl #1
   1a3bc:	ldrb	r3, [r3, #1]
   1a3c0:	tst	r3, #32
   1a3c4:	bne	1a3b4 <lchmod@@Base+0x350c>
   1a3c8:	sub	r9, fp, #32
   1a3cc:	cmp	r7, #0
   1a3d0:	mov	r8, #4
   1a3d4:	movne	r9, r7
   1a3d8:	cmp	r0, #45	; 0x2d
   1a3dc:	beq	1afe4 <lchmod@@Base+0x413c>
   1a3e0:	mov	r0, r4
   1a3e4:	mov	r1, r9
   1a3e8:	mov	r2, r6
   1a3ec:	mov	r3, #0
   1a3f0:	bl	11840 <__strtoull_internal@plt>
   1a3f4:	mov	r7, r1
   1a3f8:	ldr	r1, [r9]
   1a3fc:	cmp	r1, r4
   1a400:	beq	1a42c <lchmod@@Base+0x3584>
   1a404:	mov	r6, r0
   1a408:	ldr	r0, [r5]
   1a40c:	cmp	r0, #0
   1a410:	beq	1a468 <lchmod@@Base+0x35c0>
   1a414:	cmp	r0, #34	; 0x22
   1a418:	bne	1afe4 <lchmod@@Base+0x413c>
   1a41c:	mov	r8, #1
   1a420:	cmp	sl, #0
   1a424:	bne	1a474 <lchmod@@Base+0x35cc>
   1a428:	b	1afdc <lchmod@@Base+0x4134>
   1a42c:	cmp	sl, #0
   1a430:	beq	1afe4 <lchmod@@Base+0x413c>
   1a434:	mov	r5, r1
   1a438:	ldrb	r1, [r4]
   1a43c:	cmp	r1, #0
   1a440:	beq	1afe4 <lchmod@@Base+0x413c>
   1a444:	mov	r0, sl
   1a448:	bl	119e4 <strchr@plt>
   1a44c:	cmp	r0, #0
   1a450:	beq	1afe4 <lchmod@@Base+0x413c>
   1a454:	mov	r1, r5
   1a458:	mov	r8, #0
   1a45c:	mov	r6, #1
   1a460:	mov	r7, #0
   1a464:	b	1a474 <lchmod@@Base+0x35cc>
   1a468:	mov	r8, r0
   1a46c:	cmp	sl, #0
   1a470:	beq	1afdc <lchmod@@Base+0x4134>
   1a474:	ldrb	r4, [r1]
   1a478:	cmp	r4, #0
   1a47c:	beq	1afdc <lchmod@@Base+0x4134>
   1a480:	str	r1, [sp, #32]
   1a484:	mov	r0, sl
   1a488:	mov	r1, r4
   1a48c:	bl	119e4 <strchr@plt>
   1a490:	cmp	r0, #0
   1a494:	beq	1a75c <lchmod@@Base+0x38b4>
   1a498:	sub	r0, r4, #69	; 0x45
   1a49c:	mov	r1, #1
   1a4a0:	mov	r3, #0
   1a4a4:	mov	r5, #1024	; 0x400
   1a4a8:	cmp	r0, #47	; 0x2f
   1a4ac:	str	r1, [sp, #28]
   1a4b0:	bhi	1a5b4 <lchmod@@Base+0x370c>
   1a4b4:	add	r1, pc, #0
   1a4b8:	ldr	pc, [r1, r0, lsl #2]
   1a4bc:	andeq	sl, r1, ip, ror r5
   1a4c0:			; <UNDEFINED> instruction: 0x0001a5b4
   1a4c4:	andeq	sl, r1, ip, ror r5
   1a4c8:			; <UNDEFINED> instruction: 0x0001a5b4
   1a4cc:			; <UNDEFINED> instruction: 0x0001a5b4
   1a4d0:			; <UNDEFINED> instruction: 0x0001a5b4
   1a4d4:	andeq	sl, r1, ip, ror r5
   1a4d8:			; <UNDEFINED> instruction: 0x0001a5b4
   1a4dc:	andeq	sl, r1, ip, ror r5
   1a4e0:			; <UNDEFINED> instruction: 0x0001a5b4
   1a4e4:			; <UNDEFINED> instruction: 0x0001a5b4
   1a4e8:	andeq	sl, r1, ip, ror r5
   1a4ec:			; <UNDEFINED> instruction: 0x0001a5b4
   1a4f0:			; <UNDEFINED> instruction: 0x0001a5b4
   1a4f4:			; <UNDEFINED> instruction: 0x0001a5b4
   1a4f8:	andeq	sl, r1, ip, ror r5
   1a4fc:			; <UNDEFINED> instruction: 0x0001a5b4
   1a500:			; <UNDEFINED> instruction: 0x0001a5b4
   1a504:			; <UNDEFINED> instruction: 0x0001a5b4
   1a508:			; <UNDEFINED> instruction: 0x0001a5b4
   1a50c:	andeq	sl, r1, ip, ror r5
   1a510:	andeq	sl, r1, ip, ror r5
   1a514:			; <UNDEFINED> instruction: 0x0001a5b4
   1a518:			; <UNDEFINED> instruction: 0x0001a5b4
   1a51c:			; <UNDEFINED> instruction: 0x0001a5b4
   1a520:			; <UNDEFINED> instruction: 0x0001a5b4
   1a524:			; <UNDEFINED> instruction: 0x0001a5b4
   1a528:			; <UNDEFINED> instruction: 0x0001a5b4
   1a52c:			; <UNDEFINED> instruction: 0x0001a5b4
   1a530:			; <UNDEFINED> instruction: 0x0001a5b4
   1a534:			; <UNDEFINED> instruction: 0x0001a5b4
   1a538:			; <UNDEFINED> instruction: 0x0001a5b4
   1a53c:			; <UNDEFINED> instruction: 0x0001a5b4
   1a540:			; <UNDEFINED> instruction: 0x0001a5b4
   1a544:	andeq	sl, r1, ip, ror r5
   1a548:			; <UNDEFINED> instruction: 0x0001a5b4
   1a54c:			; <UNDEFINED> instruction: 0x0001a5b4
   1a550:			; <UNDEFINED> instruction: 0x0001a5b4
   1a554:	andeq	sl, r1, ip, ror r5
   1a558:			; <UNDEFINED> instruction: 0x0001a5b4
   1a55c:	andeq	sl, r1, ip, ror r5
   1a560:			; <UNDEFINED> instruction: 0x0001a5b4
   1a564:			; <UNDEFINED> instruction: 0x0001a5b4
   1a568:			; <UNDEFINED> instruction: 0x0001a5b4
   1a56c:			; <UNDEFINED> instruction: 0x0001a5b4
   1a570:			; <UNDEFINED> instruction: 0x0001a5b4
   1a574:			; <UNDEFINED> instruction: 0x0001a5b4
   1a578:	andeq	sl, r1, ip, ror r5
   1a57c:	mov	r0, sl
   1a580:	mov	r1, #48	; 0x30
   1a584:	bl	119e4 <strchr@plt>
   1a588:	cmp	r0, #0
   1a58c:	beq	1a5b0 <lchmod@@Base+0x3708>
   1a590:	ldr	r1, [sp, #32]
   1a594:	ldrb	r0, [r1, #1]
   1a598:	cmp	r0, #66	; 0x42
   1a59c:	cmpne	r0, #68	; 0x44
   1a5a0:	bne	1a768 <lchmod@@Base+0x38c0>
   1a5a4:	mov	r5, #1000	; 0x3e8
   1a5a8:	mov	r0, #2
   1a5ac:	str	r0, [sp, #28]
   1a5b0:	mov	r3, #0
   1a5b4:	sub	r0, r4, #66	; 0x42
   1a5b8:	cmp	r0, #53	; 0x35
   1a5bc:	bhi	1a75c <lchmod@@Base+0x38b4>
   1a5c0:	add	r1, pc, #0
   1a5c4:	ldr	pc, [r1, r0, lsl #2]
   1a5c8:	andeq	sl, r1, r4, ror #21
   1a5cc:	andeq	sl, r1, ip, asr r7
   1a5d0:	andeq	sl, r1, ip, asr r7
   1a5d4:	andeq	sl, r1, ip, lsl #22
   1a5d8:	andeq	sl, r1, ip, asr r7
   1a5dc:	andeq	sl, r1, r0, lsr #13
   1a5e0:	andeq	sl, r1, ip, asr r7
   1a5e4:	andeq	sl, r1, ip, asr r7
   1a5e8:	andeq	sl, r1, ip, asr r7
   1a5ec:	andeq	sl, r1, ip, lsl #15
   1a5f0:	andeq	sl, r1, ip, asr r7
   1a5f4:	ldrdeq	sl, [r1], -r4
   1a5f8:	andeq	sl, r1, ip, asr r7
   1a5fc:	andeq	sl, r1, ip, asr r7
   1a600:	andeq	sl, r1, r4, ror #24
   1a604:	andeq	sl, r1, ip, asr r7
   1a608:	andeq	sl, r1, ip, asr r7
   1a60c:	andeq	sl, r1, ip, asr r7
   1a610:	andeq	sl, r1, r0, ror #16
   1a614:	andeq	sl, r1, ip, asr r7
   1a618:	andeq	sl, r1, ip, asr r7
   1a61c:	andeq	sl, r1, ip, asr r7
   1a620:	andeq	sl, r1, ip, asr r7
   1a624:	andeq	sl, r1, ip, lsl #27
   1a628:	andeq	sl, r1, r8, asr #18
   1a62c:	andeq	sl, r1, ip, asr r7
   1a630:	andeq	sl, r1, ip, asr r7
   1a634:	andeq	sl, r1, ip, asr r7
   1a638:	andeq	sl, r1, ip, asr r7
   1a63c:	andeq	sl, r1, ip, asr r7
   1a640:	andeq	sl, r1, ip, asr r7
   1a644:	andeq	sl, r1, ip, asr r7
   1a648:	andeq	sl, r1, r4, ror #30
   1a64c:			; <UNDEFINED> instruction: 0x0001afbc
   1a650:	andeq	sl, r1, ip, asr r7
   1a654:	andeq	sl, r1, ip, asr r7
   1a658:	andeq	sl, r1, ip, asr r7
   1a65c:	andeq	sl, r1, r0, lsr #13
   1a660:	andeq	sl, r1, ip, asr r7
   1a664:	andeq	sl, r1, ip, asr r7
   1a668:	andeq	sl, r1, ip, asr r7
   1a66c:	andeq	sl, r1, ip, lsl #15
   1a670:	andeq	sl, r1, ip, asr r7
   1a674:	ldrdeq	sl, [r1], -r4
   1a678:	andeq	sl, r1, ip, asr r7
   1a67c:	andeq	sl, r1, ip, asr r7
   1a680:	andeq	sl, r1, ip, asr r7
   1a684:	andeq	sl, r1, ip, asr r7
   1a688:	andeq	sl, r1, ip, asr r7
   1a68c:	andeq	sl, r1, ip, asr r7
   1a690:	andeq	sl, r1, r0, ror #16
   1a694:	andeq	sl, r1, ip, asr r7
   1a698:	andeq	sl, r1, ip, asr r7
   1a69c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1a6a0:	mvn	r0, #0
   1a6a4:	mvn	r1, #0
   1a6a8:	mov	r2, r5
   1a6ac:	mov	sl, r3
   1a6b0:	bl	1b8cc <lchmod@@Base+0x4a24>
   1a6b4:	subs	r3, r0, r6
   1a6b8:	mov	lr, #0
   1a6bc:	umull	r4, r2, r6, r5
   1a6c0:	str	r1, [sp, #20]
   1a6c4:	sbcs	r3, r1, r7
   1a6c8:	mla	ip, r6, sl, r2
   1a6cc:	mov	r2, r1
   1a6d0:	movwcc	lr, #1
   1a6d4:	mla	r7, r7, r5, ip
   1a6d8:	mov	r2, #0
   1a6dc:	cmp	lr, #0
   1a6e0:	mvnne	r4, #0
   1a6e4:	mvnne	r7, #0
   1a6e8:	subs	r6, r0, r4
   1a6ec:	sbcs	r6, r1, r7
   1a6f0:	movwcc	r2, #1
   1a6f4:	umull	r3, r6, r4, r5
   1a6f8:	cmp	r2, #0
   1a6fc:	str	r6, [sp, #16]
   1a700:	mvnne	r3, #0
   1a704:	cmp	r2, #0
   1a708:	umull	r6, ip, r3, r5
   1a70c:	mla	r1, r3, sl, ip
   1a710:	ldr	ip, [sp, #16]
   1a714:	str	r1, [sp, #12]
   1a718:	mla	r4, r4, sl, ip
   1a71c:	mla	r4, r7, r5, r4
   1a720:	ldr	r7, [sp, #12]
   1a724:	mvnne	r4, #0
   1a728:	subs	r0, r0, r3
   1a72c:	ldr	r0, [sp, #20]
   1a730:	mla	r7, r4, r5, r7
   1a734:	sbcs	r0, r0, r4
   1a738:	mov	r0, #0
   1a73c:	movwcc	r0, #1
   1a740:	cmp	r0, #0
   1a744:	mov	r1, r0
   1a748:	orr	r0, lr, r2
   1a74c:	mvnne	r7, #0
   1a750:	mvnne	r6, #0
   1a754:	orr	r3, r0, r1
   1a758:	b	1afbc <lchmod@@Base+0x4114>
   1a75c:	ldr	r0, [sp, #36]	; 0x24
   1a760:	orr	r8, r8, #2
   1a764:	b	1afe0 <lchmod@@Base+0x4138>
   1a768:	cmp	r0, #105	; 0x69
   1a76c:	mov	r3, #0
   1a770:	bne	1a5b4 <lchmod@@Base+0x370c>
   1a774:	ldrb	r0, [r1, #2]
   1a778:	mov	r1, #1
   1a77c:	cmp	r0, #66	; 0x42
   1a780:	movweq	r1, #3
   1a784:	str	r1, [sp, #28]
   1a788:	b	1a5b4 <lchmod@@Base+0x370c>
   1a78c:	mvn	r0, #0
   1a790:	mvn	r1, #0
   1a794:	mov	r2, r5
   1a798:	mov	r4, r3
   1a79c:	bl	1b8cc <lchmod@@Base+0x4a24>
   1a7a0:	subs	r0, r0, r6
   1a7a4:	mov	r2, #0
   1a7a8:	sbcs	r0, r1, r7
   1a7ac:	movwcc	r2, #1
   1a7b0:	umull	r0, r1, r6, r5
   1a7b4:	mla	r1, r6, r4, r1
   1a7b8:	cmp	r2, #0
   1a7bc:	mov	r3, r2
   1a7c0:	mla	r7, r7, r5, r1
   1a7c4:	mvnne	r0, #0
   1a7c8:	mvnne	r7, #0
   1a7cc:	mov	r6, r0
   1a7d0:	b	1afbc <lchmod@@Base+0x4114>
   1a7d4:	mvn	r0, #0
   1a7d8:	mvn	r1, #0
   1a7dc:	mov	r2, r5
   1a7e0:	str	r3, [sp, #24]
   1a7e4:	bl	1b8cc <lchmod@@Base+0x4a24>
   1a7e8:	subs	r3, r0, r6
   1a7ec:	mov	ip, r0
   1a7f0:	umull	r4, r0, r6, r5
   1a7f4:	mov	sl, #0
   1a7f8:	sbcs	r3, r1, r7
   1a7fc:	str	r0, [sp, #20]
   1a800:	ldr	r0, [sp, #24]
   1a804:	mov	r3, #0
   1a808:	movwcc	r3, #1
   1a80c:	cmp	r3, #0
   1a810:	mvnne	r4, #0
   1a814:	cmp	r3, #0
   1a818:	umull	lr, r2, r4, r5
   1a81c:	mla	r2, r4, r0, r2
   1a820:	str	r2, [sp, #16]
   1a824:	ldr	r2, [sp, #20]
   1a828:	mla	r6, r6, r0, r2
   1a82c:	ldr	r0, [sp, #16]
   1a830:	mla	r6, r7, r5, r6
   1a834:	mvnne	r6, #0
   1a838:	mla	r7, r6, r5, r0
   1a83c:	subs	r0, ip, r4
   1a840:	sbcs	r0, r1, r6
   1a844:	movwcc	sl, #1
   1a848:	cmp	sl, #0
   1a84c:	orr	r3, r3, sl
   1a850:	mvnne	lr, #0
   1a854:	mvnne	r7, #0
   1a858:	mov	r6, lr
   1a85c:	b	1afbc <lchmod@@Base+0x4114>
   1a860:	mvn	r0, #0
   1a864:	mvn	r1, #0
   1a868:	mov	r2, r5
   1a86c:	mov	sl, r3
   1a870:	bl	1b8cc <lchmod@@Base+0x4a24>
   1a874:	subs	r3, r0, r6
   1a878:	mov	ip, r1
   1a87c:	umull	r2, lr, r6, r5
   1a880:	str	r0, [sp, #20]
   1a884:	sbcs	r3, r1, r7
   1a888:	mov	r1, #0
   1a88c:	mla	r6, r6, sl, lr
   1a890:	mov	lr, #0
   1a894:	str	ip, [sp, #16]
   1a898:	movwcc	r1, #1
   1a89c:	mla	r7, r7, r5, r6
   1a8a0:	cmp	r1, #0
   1a8a4:	mvnne	r2, #0
   1a8a8:	cmp	r1, #0
   1a8ac:	umull	r3, r4, r2, r5
   1a8b0:	mvnne	r7, #0
   1a8b4:	mla	r4, r2, sl, r4
   1a8b8:	subs	r2, r0, r2
   1a8bc:	sbcs	r2, ip, r7
   1a8c0:	mla	r4, r7, r5, r4
   1a8c4:	movwcc	lr, #1
   1a8c8:	mov	r2, #0
   1a8cc:	cmp	lr, #0
   1a8d0:	mvnne	r3, #0
   1a8d4:	mvnne	r4, #0
   1a8d8:	subs	r7, r0, r3
   1a8dc:	mov	r0, r5
   1a8e0:	sbcs	r7, ip, r4
   1a8e4:	movwcc	r2, #1
   1a8e8:	umull	r5, r7, r3, r5
   1a8ec:	cmp	r2, #0
   1a8f0:	mla	r3, r3, sl, r7
   1a8f4:	mvnne	r5, #0
   1a8f8:	mla	r3, r4, r0, r3
   1a8fc:	cmp	r2, #0
   1a900:	umull	r6, ip, r5, r0
   1a904:	mvnne	r3, #0
   1a908:	mla	ip, r5, sl, ip
   1a90c:	mla	r7, r3, r0, ip
   1a910:	ldr	r0, [sp, #20]
   1a914:	subs	r0, r0, r5
   1a918:	ldr	r0, [sp, #16]
   1a91c:	sbcs	r0, r0, r3
   1a920:	mov	r0, #0
   1a924:	movwcc	r0, #1
   1a928:	cmp	r0, #0
   1a92c:	mov	r3, r0
   1a930:	orr	r0, r1, lr
   1a934:	orr	r0, r0, r2
   1a938:	mvnne	r7, #0
   1a93c:	mvnne	r6, #0
   1a940:	orr	r3, r0, r3
   1a944:	b	1afbc <lchmod@@Base+0x4114>
   1a948:	mvn	r0, #0
   1a94c:	mvn	r1, #0
   1a950:	mov	r2, r5
   1a954:	mov	r4, r3
   1a958:	str	r3, [sp, #24]
   1a95c:	bl	1b8cc <lchmod@@Base+0x4a24>
   1a960:	umull	r3, r2, r6, r5
   1a964:	mla	r2, r6, r4, r2
   1a968:	subs	r6, r0, r6
   1a96c:	sbcs	r6, r1, r7
   1a970:	mla	ip, r7, r5, r2
   1a974:	ldr	r2, [sp, #24]
   1a978:	mov	r6, #0
   1a97c:	movwcc	r6, #1
   1a980:	cmp	r6, #0
   1a984:	str	r6, [sp, #20]
   1a988:	mov	r6, #0
   1a98c:	mvnne	r3, #0
   1a990:	mvnne	ip, #0
   1a994:	subs	r4, r0, r3
   1a998:	umull	r7, lr, r3, r5
   1a99c:	sbcs	r4, r1, ip
   1a9a0:	mla	r3, r3, r2, lr
   1a9a4:	movwcc	r6, #1
   1a9a8:	cmp	r6, #0
   1a9ac:	str	r6, [sp, #16]
   1a9b0:	mvnne	r7, #0
   1a9b4:	cmp	r6, #0
   1a9b8:	umull	sl, r4, r7, r5
   1a9bc:	mla	r4, r7, r2, r4
   1a9c0:	mla	r2, ip, r5, r3
   1a9c4:	mov	ip, #0
   1a9c8:	mvnne	r2, #0
   1a9cc:	subs	r3, r0, r7
   1a9d0:	mla	r6, r2, r5, r4
   1a9d4:	mov	r4, r0
   1a9d8:	sbcs	r2, r1, r2
   1a9dc:	mov	r0, #0
   1a9e0:	movwcc	r0, #1
   1a9e4:	mov	r3, r4
   1a9e8:	cmp	r0, #0
   1a9ec:	str	r0, [sp, #12]
   1a9f0:	mov	r0, r1
   1a9f4:	str	r3, [sp, #4]
   1a9f8:	mvnne	sl, #0
   1a9fc:	mvnne	r6, #0
   1aa00:	str	r0, [sp, #8]
   1aa04:	subs	r2, r4, sl
   1aa08:	ldr	r4, [sp, #24]
   1aa0c:	sbcs	r2, r1, r6
   1aa10:	movwcc	ip, #1
   1aa14:	umull	r7, r2, sl, r5
   1aa18:	cmp	ip, #0
   1aa1c:	mla	r2, sl, r4, r2
   1aa20:	mvnne	r7, #0
   1aa24:	cmp	ip, #0
   1aa28:	mov	sl, #0
   1aa2c:	umull	r1, lr, r7, r5
   1aa30:	mla	r2, r6, r5, r2
   1aa34:	mvnne	r2, #0
   1aa38:	mla	lr, r7, r4, lr
   1aa3c:	subs	r6, r3, r7
   1aa40:	mla	lr, r2, r5, lr
   1aa44:	sbcs	r2, r0, r2
   1aa48:	movwcc	sl, #1
   1aa4c:	mov	r2, #0
   1aa50:	cmp	sl, #0
   1aa54:	mvnne	r1, #0
   1aa58:	mvnne	lr, #0
   1aa5c:	subs	r6, r3, r1
   1aa60:	ldr	r3, [sp, #24]
   1aa64:	sbcs	r6, r0, lr
   1aa68:	umull	r0, r7, r1, r5
   1aa6c:	movwcc	r2, #1
   1aa70:	cmp	r2, #0
   1aa74:	mvnne	r0, #0
   1aa78:	mla	r1, r1, r3, r7
   1aa7c:	cmp	r2, #0
   1aa80:	umull	r6, r4, r0, r5
   1aa84:	mla	r1, lr, r5, r1
   1aa88:	mla	r4, r0, r3, r4
   1aa8c:	ldr	r3, [sp, #4]
   1aa90:	mvnne	r1, #0
   1aa94:	mla	r7, r1, r5, r4
   1aa98:	ldr	r5, [sp, #16]
   1aa9c:	subs	r0, r3, r0
   1aaa0:	ldr	r0, [sp, #8]
   1aaa4:	sbcs	r0, r0, r1
   1aaa8:	mov	r0, #0
   1aaac:	movwcc	r0, #1
   1aab0:	cmp	r0, #0
   1aab4:	mov	r1, r0
   1aab8:	ldr	r0, [sp, #20]
   1aabc:	mvnne	r7, #0
   1aac0:	mvnne	r6, #0
   1aac4:	orr	r0, r0, r5
   1aac8:	ldr	r5, [sp, #12]
   1aacc:	orr	r0, r0, r5
   1aad0:	orr	r0, r0, ip
   1aad4:	orr	r0, r0, sl
   1aad8:	orr	r0, r0, r2
   1aadc:	orr	r0, r0, r1
   1aae0:	b	1af5c <lchmod@@Base+0x40b4>
   1aae4:	mov	r1, #0
   1aae8:	lsl	r2, r7, #10
   1aaec:	lsl	r0, r6, #10
   1aaf0:	lsr	r3, r7, #22
   1aaf4:	cmp	r1, r7, lsr #22
   1aaf8:	orr	r2, r2, r6, lsr #22
   1aafc:	mvnne	r0, #0
   1ab00:	movwne	r3, #1
   1ab04:	cmp	r1, r7, lsr #22
   1ab08:	b	1af88 <lchmod@@Base+0x40e0>
   1ab0c:	mvn	r0, #0
   1ab10:	mvn	r1, #0
   1ab14:	mov	r2, r5
   1ab18:	mov	sl, r3
   1ab1c:	bl	1b8cc <lchmod@@Base+0x4a24>
   1ab20:	subs	r2, r0, r6
   1ab24:	mov	ip, r0
   1ab28:	mov	r0, #0
   1ab2c:	sbcs	r2, r1, r7
   1ab30:	movwcc	r0, #1
   1ab34:	umull	r4, r2, r6, r5
   1ab38:	cmp	r0, #0
   1ab3c:	mla	r2, r6, sl, r2
   1ab40:	str	r0, [sp, #20]
   1ab44:	mvnne	r4, #0
   1ab48:	cmp	r0, #0
   1ab4c:	mla	r2, r7, r5, r2
   1ab50:	mov	r0, #0
   1ab54:	umull	lr, r3, r4, r5
   1ab58:	mvnne	r2, #0
   1ab5c:	mla	r3, r4, sl, r3
   1ab60:	mla	r6, r2, r5, r3
   1ab64:	subs	r3, ip, r4
   1ab68:	sbcs	r2, r1, r2
   1ab6c:	mov	r3, r1
   1ab70:	movwcc	r0, #1
   1ab74:	str	r3, [sp, #8]
   1ab78:	cmp	r0, #0
   1ab7c:	str	r0, [sp, #16]
   1ab80:	mov	r0, ip
   1ab84:	mvnne	lr, #0
   1ab88:	mvnne	r6, #0
   1ab8c:	str	r0, [sp, #12]
   1ab90:	subs	r2, ip, lr
   1ab94:	umull	r7, r4, lr, r5
   1ab98:	sbcs	r2, r1, r6
   1ab9c:	mla	r4, lr, sl, r4
   1aba0:	mov	r2, #0
   1aba4:	mla	r6, r6, r5, r4
   1aba8:	mov	r4, #0
   1abac:	movwcc	r2, #1
   1abb0:	cmp	r2, #0
   1abb4:	mvnne	r7, #0
   1abb8:	cmp	r2, #0
   1abbc:	umull	r1, ip, r7, r5
   1abc0:	mvnne	r6, #0
   1abc4:	mla	ip, r7, sl, ip
   1abc8:	subs	r7, r0, r7
   1abcc:	mla	lr, r6, r5, ip
   1abd0:	sbcs	r7, r3, r6
   1abd4:	mov	ip, #0
   1abd8:	movwcc	ip, #1
   1abdc:	cmp	ip, #0
   1abe0:	mvnne	r1, #0
   1abe4:	mvnne	lr, #0
   1abe8:	subs	r7, r0, r1
   1abec:	sbcs	r7, r3, lr
   1abf0:	movwcc	r4, #1
   1abf4:	umull	r0, r7, r1, r5
   1abf8:	cmp	r4, #0
   1abfc:	mla	r1, r1, sl, r7
   1ac00:	mvnne	r0, #0
   1ac04:	mla	r1, lr, r5, r1
   1ac08:	cmp	r4, #0
   1ac0c:	umull	r6, r3, r0, r5
   1ac10:	mvnne	r1, #0
   1ac14:	mla	r3, r0, sl, r3
   1ac18:	mla	r7, r1, r5, r3
   1ac1c:	ldr	r3, [sp, #12]
   1ac20:	subs	r0, r3, r0
   1ac24:	ldr	r3, [sp, #16]
   1ac28:	ldr	r0, [sp, #8]
   1ac2c:	sbcs	r0, r0, r1
   1ac30:	mov	r0, #0
   1ac34:	movwcc	r0, #1
   1ac38:	cmp	r0, #0
   1ac3c:	mov	r1, r0
   1ac40:	ldr	r0, [sp, #20]
   1ac44:	mvnne	r7, #0
   1ac48:	mvnne	r6, #0
   1ac4c:	orr	r0, r0, r3
   1ac50:	orr	r0, r0, r2
   1ac54:	orr	r0, r0, ip
   1ac58:	orr	r0, r0, r4
   1ac5c:	orr	r3, r0, r1
   1ac60:	b	1afbc <lchmod@@Base+0x4114>
   1ac64:	mvn	r0, #0
   1ac68:	mvn	r1, #0
   1ac6c:	mov	r2, r5
   1ac70:	mov	sl, r3
   1ac74:	bl	1b8cc <lchmod@@Base+0x4a24>
   1ac78:	umull	r3, r2, r6, r5
   1ac7c:	mov	lr, r1
   1ac80:	mov	r1, r0
   1ac84:	mla	r2, r6, sl, r2
   1ac88:	subs	r6, r0, r6
   1ac8c:	mov	r0, #0
   1ac90:	sbcs	r6, lr, r7
   1ac94:	mla	r2, r7, r5, r2
   1ac98:	movwcc	r0, #1
   1ac9c:	cmp	r0, #0
   1aca0:	str	r0, [sp, #20]
   1aca4:	mov	r0, r1
   1aca8:	mvnne	r3, #0
   1acac:	mvnne	r2, #0
   1acb0:	str	r0, [sp, #16]
   1acb4:	subs	r4, r1, r3
   1acb8:	umull	r7, ip, r3, r5
   1acbc:	sbcs	r4, lr, r2
   1acc0:	mla	r3, r3, sl, ip
   1acc4:	mov	ip, #0
   1acc8:	mov	r4, #0
   1accc:	mla	r2, r2, r5, r3
   1acd0:	movwcc	r4, #1
   1acd4:	cmp	r4, #0
   1acd8:	mvnne	r7, #0
   1acdc:	cmp	r4, #0
   1ace0:	umull	r1, r6, r7, r5
   1ace4:	mvnne	r2, #0
   1ace8:	mla	r6, r7, sl, r6
   1acec:	mla	r3, r2, r5, r6
   1acf0:	subs	r6, r0, r7
   1acf4:	sbcs	r2, lr, r2
   1acf8:	movwcc	ip, #1
   1acfc:	mov	r2, #0
   1ad00:	cmp	ip, #0
   1ad04:	mvnne	r1, #0
   1ad08:	mvnne	r3, #0
   1ad0c:	subs	r6, r0, r1
   1ad10:	sbcs	r6, lr, r3
   1ad14:	movwcc	r2, #1
   1ad18:	umull	r0, r6, r1, r5
   1ad1c:	cmp	r2, #0
   1ad20:	str	r6, [sp, #12]
   1ad24:	mvnne	r0, #0
   1ad28:	cmp	r2, #0
   1ad2c:	umull	r6, r7, r0, r5
   1ad30:	mla	r7, r0, sl, r7
   1ad34:	str	r7, [sp, #8]
   1ad38:	ldr	r7, [sp, #12]
   1ad3c:	mla	r1, r1, sl, r7
   1ad40:	mla	r1, r3, r5, r1
   1ad44:	ldr	r3, [sp, #8]
   1ad48:	mvnne	r1, #0
   1ad4c:	mla	r7, r1, r5, r3
   1ad50:	ldr	r3, [sp, #16]
   1ad54:	subs	r0, r3, r0
   1ad58:	sbcs	r0, lr, r1
   1ad5c:	mov	r0, #0
   1ad60:	movwcc	r0, #1
   1ad64:	cmp	r0, #0
   1ad68:	mov	r1, r0
   1ad6c:	ldr	r0, [sp, #20]
   1ad70:	mvnne	r7, #0
   1ad74:	mvnne	r6, #0
   1ad78:	orr	r0, r0, r4
   1ad7c:	orr	r0, r0, ip
   1ad80:	orr	r0, r0, r2
   1ad84:	orr	r3, r0, r1
   1ad88:	b	1afbc <lchmod@@Base+0x4114>
   1ad8c:	mvn	r0, #0
   1ad90:	mvn	r1, #0
   1ad94:	mov	r2, r5
   1ad98:	mov	sl, r3
   1ad9c:	bl	1b8cc <lchmod@@Base+0x4a24>
   1ada0:	mov	lr, r0
   1ada4:	subs	r0, r0, r6
   1ada8:	mov	r2, #0
   1adac:	mov	ip, r1
   1adb0:	str	sl, [sp, #24]
   1adb4:	sbcs	r0, r1, r7
   1adb8:	umull	r3, r1, r6, r5
   1adbc:	str	lr, [sp, #4]
   1adc0:	movwcc	r2, #1
   1adc4:	mla	r6, r6, sl, r1
   1adc8:	mov	r1, #0
   1adcc:	cmp	r2, #0
   1add0:	mla	r7, r7, r5, r6
   1add4:	str	r2, [sp, #20]
   1add8:	mvnne	r3, #0
   1addc:	cmp	r2, #0
   1ade0:	mov	r2, #0
   1ade4:	umull	r0, r4, r3, r5
   1ade8:	mvnne	r7, #0
   1adec:	mla	r4, r3, sl, r4
   1adf0:	subs	r3, lr, r3
   1adf4:	sbcs	r3, ip, r7
   1adf8:	mla	r4, r7, r5, r4
   1adfc:	movwcc	r1, #1
   1ae00:	cmp	r1, #0
   1ae04:	str	r1, [sp, #16]
   1ae08:	mvnne	r0, #0
   1ae0c:	mvnne	r4, #0
   1ae10:	subs	r3, lr, r0
   1ae14:	sbcs	r3, ip, r4
   1ae18:	movwcc	r2, #1
   1ae1c:	umull	r6, r3, r0, r5
   1ae20:	cmp	r2, #0
   1ae24:	mla	r0, r0, sl, r3
   1ae28:	str	r2, [sp, #12]
   1ae2c:	mvnne	r6, #0
   1ae30:	mla	r0, r4, r5, r0
   1ae34:	cmp	r2, #0
   1ae38:	ldr	r4, [sp, #24]
   1ae3c:	umull	r1, r7, r6, r5
   1ae40:	mvnne	r0, #0
   1ae44:	subs	r3, lr, r6
   1ae48:	mla	r7, r6, sl, r7
   1ae4c:	mov	r3, ip
   1ae50:	mla	r7, r0, r5, r7
   1ae54:	sbcs	r0, ip, r0
   1ae58:	str	r3, [sp]
   1ae5c:	mov	r0, #0
   1ae60:	movwcc	r0, #1
   1ae64:	cmp	r0, #0
   1ae68:	str	r0, [sp, #8]
   1ae6c:	mvnne	r1, #0
   1ae70:	mvnne	r7, #0
   1ae74:	subs	r0, lr, r1
   1ae78:	sbcs	r0, ip, r7
   1ae7c:	mov	ip, #0
   1ae80:	movwcc	ip, #1
   1ae84:	umull	r6, r0, r1, r5
   1ae88:	cmp	ip, #0
   1ae8c:	mla	r1, r1, r4, r0
   1ae90:	mov	r0, lr
   1ae94:	mvnne	r6, #0
   1ae98:	mla	r1, r7, r5, r1
   1ae9c:	cmp	ip, #0
   1aea0:	umull	r2, sl, r6, r5
   1aea4:	mvnne	r1, #0
   1aea8:	mla	sl, r6, r4, sl
   1aeac:	subs	r6, lr, r6
   1aeb0:	mov	lr, #0
   1aeb4:	mla	r7, r1, r5, sl
   1aeb8:	sbcs	r1, r3, r1
   1aebc:	movwcc	lr, #1
   1aec0:	ldr	r1, [sp, #24]
   1aec4:	cmp	lr, #0
   1aec8:	mvnne	r2, #0
   1aecc:	mvnne	r7, #0
   1aed0:	subs	r6, r0, r2
   1aed4:	umull	r0, sl, r2, r5
   1aed8:	sbcs	r6, r3, r7
   1aedc:	mov	r3, #0
   1aee0:	mla	r2, r2, r1, sl
   1aee4:	movwcc	r3, #1
   1aee8:	mla	r2, r7, r5, r2
   1aeec:	cmp	r3, #0
   1aef0:	mvnne	r0, #0
   1aef4:	cmp	r3, #0
   1aef8:	umull	r6, r4, r0, r5
   1aefc:	mvnne	r2, #0
   1af00:	mla	r4, r0, r1, r4
   1af04:	ldr	r1, [sp, #4]
   1af08:	mla	r7, r2, r5, r4
   1af0c:	ldr	r5, [sp, #16]
   1af10:	subs	r0, r1, r0
   1af14:	ldr	r0, [sp]
   1af18:	sbcs	r0, r0, r2
   1af1c:	mov	r0, #0
   1af20:	movwcc	r0, #1
   1af24:	cmp	r0, #0
   1af28:	mov	r2, r0
   1af2c:	ldr	r0, [sp, #20]
   1af30:	mvnne	r7, #0
   1af34:	mvnne	r6, #0
   1af38:	orr	r0, r0, r5
   1af3c:	ldr	r5, [sp, #12]
   1af40:	orr	r0, r0, r5
   1af44:	ldr	r5, [sp, #8]
   1af48:	orr	r0, r0, r5
   1af4c:	orr	r0, r0, ip
   1af50:	orr	r0, r0, lr
   1af54:	orr	r0, r0, r3
   1af58:	orr	r0, r0, r2
   1af5c:	and	r3, r0, #1
   1af60:	b	1afbc <lchmod@@Base+0x4114>
   1af64:	mov	r1, #0
   1af68:	lsl	r2, r7, #9
   1af6c:	lsl	r0, r6, #9
   1af70:	lsr	r3, r7, #23
   1af74:	cmp	r1, r7, lsr #23
   1af78:	orr	r2, r2, r6, lsr #23
   1af7c:	mvnne	r0, #0
   1af80:	movwne	r3, #1
   1af84:	cmp	r1, r7, lsr #23
   1af88:	mvnne	r2, #0
   1af8c:	mov	r6, r0
   1af90:	mov	r7, r2
   1af94:	b	1afbc <lchmod@@Base+0x4114>
   1af98:	lsl	r1, r7, #1
   1af9c:	lsl	r0, r6, #1
   1afa0:	cmp	r7, #0
   1afa4:	lsr	r3, r7, #31
   1afa8:	orr	r1, r1, r6, lsr #31
   1afac:	mvnlt	r0, #0
   1afb0:	mvnlt	r1, #0
   1afb4:	mov	r6, r0
   1afb8:	mov	r7, r1
   1afbc:	ldr	r1, [sp, #32]
   1afc0:	ldr	r2, [sp, #28]
   1afc4:	orr	r8, r3, r8
   1afc8:	add	r0, r1, r2
   1afcc:	str	r0, [r9]
   1afd0:	ldrb	r0, [r1, r2]
   1afd4:	cmp	r0, #0
   1afd8:	orrne	r8, r8, #2
   1afdc:	ldr	r0, [sp, #36]	; 0x24
   1afe0:	strd	r6, [r0]
   1afe4:	mov	r0, r8
   1afe8:	sub	sp, fp, #28
   1afec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aff0:	movw	r0, #51444	; 0xc8f4
   1aff4:	movw	r1, #51482	; 0xc91a
   1aff8:	movw	r3, #51498	; 0xc92a
   1affc:	mov	r2, #85	; 0x55
   1b000:	movt	r0, #1
   1b004:	movt	r1, #1
   1b008:	movt	r3, #1
   1b00c:	bl	11bc4 <__assert_fail@plt>
   1b010:	clz	r2, r1
   1b014:	clz	r3, r0
   1b018:	lsr	r2, r2, #5
   1b01c:	lsr	r3, r3, #5
   1b020:	orrs	r2, r3, r2
   1b024:	movwne	r1, #1
   1b028:	movwne	r0, #1
   1b02c:	cmp	r1, #0
   1b030:	beq	1b060 <lchmod@@Base+0x41b8>
   1b034:	mvn	r2, #-2147483648	; 0x80000000
   1b038:	udiv	r2, r2, r1
   1b03c:	cmp	r2, r0
   1b040:	bcs	1b060 <lchmod@@Base+0x41b8>
   1b044:	push	{fp, lr}
   1b048:	mov	fp, sp
   1b04c:	bl	11a08 <__errno_location@plt>
   1b050:	mov	r1, #12
   1b054:	str	r1, [r0]
   1b058:	mov	r0, #0
   1b05c:	pop	{fp, pc}
   1b060:	b	117a4 <calloc@plt>
   1b064:	cmp	r0, #0
   1b068:	movweq	r0, #1
   1b06c:	cmn	r0, #1
   1b070:	ble	1b078 <lchmod@@Base+0x41d0>
   1b074:	b	11954 <malloc@plt>
   1b078:	push	{fp, lr}
   1b07c:	mov	fp, sp
   1b080:	bl	11a08 <__errno_location@plt>
   1b084:	mov	r1, #12
   1b088:	str	r1, [r0]
   1b08c:	mov	r0, #0
   1b090:	pop	{fp, pc}
   1b094:	push	{fp, lr}
   1b098:	mov	fp, sp
   1b09c:	cmp	r0, #0
   1b0a0:	beq	1b0bc <lchmod@@Base+0x4214>
   1b0a4:	cmp	r1, #0
   1b0a8:	beq	1b0c8 <lchmod@@Base+0x4220>
   1b0ac:	cmn	r1, #1
   1b0b0:	ble	1b0d4 <lchmod@@Base+0x422c>
   1b0b4:	pop	{fp, lr}
   1b0b8:	b	11888 <realloc@plt>
   1b0bc:	mov	r0, r1
   1b0c0:	pop	{fp, lr}
   1b0c4:	b	1b064 <lchmod@@Base+0x41bc>
   1b0c8:	bl	136a8 <__assert_fail@plt+0x1ae4>
   1b0cc:	mov	r0, #0
   1b0d0:	pop	{fp, pc}
   1b0d4:	bl	11a08 <__errno_location@plt>
   1b0d8:	mov	r1, #12
   1b0dc:	str	r1, [r0]
   1b0e0:	mov	r0, #0
   1b0e4:	pop	{fp, pc}
   1b0e8:	sub	r0, r0, #1
   1b0ec:	ldrb	r3, [r0, #1]!
   1b0f0:	cmp	r3, #47	; 0x2f
   1b0f4:	beq	1b0ec <lchmod@@Base+0x4244>
   1b0f8:	mov	r2, #0
   1b0fc:	mov	r1, r0
   1b100:	b	1b11c <lchmod@@Base+0x4274>
   1b104:	cmp	r3, #0
   1b108:	bxeq	lr
   1b10c:	tst	r2, #1
   1b110:	mov	r2, #0
   1b114:	movne	r0, r1
   1b118:	ldrb	r3, [r1, #1]!
   1b11c:	uxtb	r3, r3
   1b120:	cmp	r3, #47	; 0x2f
   1b124:	bne	1b104 <lchmod@@Base+0x425c>
   1b128:	ldrb	r3, [r1, #1]!
   1b12c:	mov	r2, #1
   1b130:	b	1b11c <lchmod@@Base+0x4274>
   1b134:	push	{r4, sl, fp, lr}
   1b138:	add	fp, sp, #8
   1b13c:	mov	r4, r0
   1b140:	bl	119cc <strlen@plt>
   1b144:	mov	r1, r0
   1b148:	sub	r2, r4, #1
   1b14c:	mov	r0, r1
   1b150:	cmp	r1, #2
   1b154:	popcc	{r4, sl, fp, pc}
   1b158:	ldrb	r3, [r2, r0]
   1b15c:	sub	r1, r0, #1
   1b160:	cmp	r3, #47	; 0x2f
   1b164:	beq	1b14c <lchmod@@Base+0x42a4>
   1b168:	pop	{r4, sl, fp, pc}
   1b16c:	push	{r4, r5, r6, sl, fp, lr}
   1b170:	add	fp, sp, #16
   1b174:	mov	r4, r0
   1b178:	bl	11918 <__fpending@plt>
   1b17c:	ldr	r6, [r4]
   1b180:	mov	r5, r0
   1b184:	mov	r0, r4
   1b188:	bl	1b2e4 <lchmod@@Base+0x443c>
   1b18c:	tst	r6, #32
   1b190:	bne	1b1c8 <lchmod@@Base+0x4320>
   1b194:	cmp	r0, #0
   1b198:	mov	r4, r0
   1b19c:	mvnne	r4, #0
   1b1a0:	cmp	r5, #0
   1b1a4:	bne	1b1d4 <lchmod@@Base+0x432c>
   1b1a8:	cmp	r0, #0
   1b1ac:	beq	1b1d4 <lchmod@@Base+0x432c>
   1b1b0:	bl	11a08 <__errno_location@plt>
   1b1b4:	ldr	r0, [r0]
   1b1b8:	subs	r4, r0, #9
   1b1bc:	mvnne	r4, #0
   1b1c0:	mov	r0, r4
   1b1c4:	pop	{r4, r5, r6, sl, fp, pc}
   1b1c8:	mvn	r4, #0
   1b1cc:	cmp	r0, #0
   1b1d0:	beq	1b1dc <lchmod@@Base+0x4334>
   1b1d4:	mov	r0, r4
   1b1d8:	pop	{r4, r5, r6, sl, fp, pc}
   1b1dc:	bl	11a08 <__errno_location@plt>
   1b1e0:	mov	r1, #0
   1b1e4:	str	r1, [r0]
   1b1e8:	mov	r0, r4
   1b1ec:	pop	{r4, r5, r6, sl, fp, pc}
   1b1f0:	movw	r2, #62998	; 0xf616
   1b1f4:	mov	r1, #0
   1b1f8:	movt	r2, #149	; 0x95
   1b1fc:	str	r1, [r0, #16]
   1b200:	str	r1, [r0, #20]
   1b204:	str	r2, [r0, #24]
   1b208:	bx	lr
   1b20c:	push	{r4, r5, r6, r7, fp, lr}
   1b210:	add	fp, sp, #16
   1b214:	ldr	r2, [r0, #24]
   1b218:	movw	r3, #62998	; 0xf616
   1b21c:	movt	r3, #149	; 0x95
   1b220:	cmp	r2, r3
   1b224:	bne	1b2c4 <lchmod@@Base+0x441c>
   1b228:	mov	r3, r0
   1b22c:	ldr	r2, [r3, #16]!
   1b230:	ldr	lr, [r3, #4]
   1b234:	orrs	r5, r2, lr
   1b238:	beq	1b270 <lchmod@@Base+0x43c8>
   1b23c:	ldrd	r4, [r0]
   1b240:	ldrd	r6, [r1, #96]	; 0x60
   1b244:	eor	r7, r7, r5
   1b248:	eor	r6, r6, r4
   1b24c:	orrs	r7, r6, r7
   1b250:	bne	1b270 <lchmod@@Base+0x43c8>
   1b254:	ldrd	r4, [r0, #8]
   1b258:	ldrd	r6, [r1]
   1b25c:	mov	ip, #1
   1b260:	eor	r7, r7, r5
   1b264:	eor	r6, r6, r4
   1b268:	orrs	r7, r6, r7
   1b26c:	beq	1b290 <lchmod@@Base+0x43e8>
   1b270:	adds	r4, r2, #1
   1b274:	mov	ip, #0
   1b278:	adc	r5, lr, #0
   1b27c:	and	r2, r4, r2
   1b280:	strd	r4, [r3]
   1b284:	and	r3, r5, lr
   1b288:	orrs	r2, r2, r3
   1b28c:	beq	1b298 <lchmod@@Base+0x43f0>
   1b290:	mov	r0, ip
   1b294:	pop	{r4, r5, r6, r7, fp, pc}
   1b298:	orrs	r2, r4, r5
   1b29c:	moveq	ip, #1
   1b2a0:	moveq	r0, ip
   1b2a4:	popeq	{r4, r5, r6, r7, fp, pc}
   1b2a8:	ldrd	r2, [r1]
   1b2ac:	str	r3, [r0, #12]
   1b2b0:	str	r2, [r0, #8]
   1b2b4:	ldrd	r2, [r1, #96]	; 0x60
   1b2b8:	stm	r0, {r2, r3}
   1b2bc:	mov	r0, ip
   1b2c0:	pop	{r4, r5, r6, r7, fp, pc}
   1b2c4:	movw	r0, #51577	; 0xc979
   1b2c8:	movw	r1, #51601	; 0xc991
   1b2cc:	movw	r3, #51619	; 0xc9a3
   1b2d0:	mov	r2, #60	; 0x3c
   1b2d4:	movt	r0, #1
   1b2d8:	movt	r1, #1
   1b2dc:	movt	r3, #1
   1b2e0:	bl	11bc4 <__assert_fail@plt>
   1b2e4:	push	{r4, r5, r6, sl, fp, lr}
   1b2e8:	add	fp, sp, #16
   1b2ec:	sub	sp, sp, #8
   1b2f0:	mov	r4, r0
   1b2f4:	bl	11a44 <fileno@plt>
   1b2f8:	cmn	r0, #1
   1b2fc:	ble	1b370 <lchmod@@Base+0x44c8>
   1b300:	mov	r0, r4
   1b304:	bl	1196c <__freading@plt>
   1b308:	cmp	r0, #0
   1b30c:	beq	1b338 <lchmod@@Base+0x4490>
   1b310:	mov	r0, r4
   1b314:	bl	11a44 <fileno@plt>
   1b318:	mov	r1, #1
   1b31c:	mov	r2, #0
   1b320:	mov	r3, #0
   1b324:	str	r1, [sp]
   1b328:	bl	118f4 <lseek64@plt>
   1b32c:	and	r0, r0, r1
   1b330:	cmn	r0, #1
   1b334:	beq	1b370 <lchmod@@Base+0x44c8>
   1b338:	mov	r0, r4
   1b33c:	bl	1b5a8 <lchmod@@Base+0x4700>
   1b340:	cmp	r0, #0
   1b344:	beq	1b370 <lchmod@@Base+0x44c8>
   1b348:	bl	11a08 <__errno_location@plt>
   1b34c:	ldr	r6, [r0]
   1b350:	mov	r5, r0
   1b354:	mov	r0, r4
   1b358:	bl	11a5c <fclose@plt>
   1b35c:	cmp	r6, #0
   1b360:	strne	r6, [r5]
   1b364:	mvnne	r0, #0
   1b368:	sub	sp, fp, #16
   1b36c:	pop	{r4, r5, r6, sl, fp, pc}
   1b370:	mov	r0, r4
   1b374:	sub	sp, fp, #16
   1b378:	pop	{r4, r5, r6, sl, fp, lr}
   1b37c:	b	11a5c <fclose@plt>
   1b380:	sub	sp, sp, #8
   1b384:	push	{r4, r5, r6, r7, fp, lr}
   1b388:	add	fp, sp, #16
   1b38c:	sub	sp, sp, #8
   1b390:	mov	r5, r0
   1b394:	add	r0, fp, #8
   1b398:	cmp	r1, #11
   1b39c:	str	r3, [fp, #12]
   1b3a0:	str	r2, [fp, #8]
   1b3a4:	str	r0, [sp, #4]
   1b3a8:	bhi	1b3e4 <lchmod@@Base+0x453c>
   1b3ac:	mov	r0, #1
   1b3b0:	movw	r2, #1300	; 0x514
   1b3b4:	tst	r2, r0, lsl r1
   1b3b8:	bne	1b4a4 <lchmod@@Base+0x45fc>
   1b3bc:	movw	r2, #2570	; 0xa0a
   1b3c0:	tst	r2, r0, lsl r1
   1b3c4:	bne	1b40c <lchmod@@Base+0x4564>
   1b3c8:	cmp	r1, #0
   1b3cc:	bne	1b3e4 <lchmod@@Base+0x453c>
   1b3d0:	ldr	r0, [sp, #4]
   1b3d4:	add	r1, r0, #4
   1b3d8:	str	r1, [sp, #4]
   1b3dc:	mov	r1, #0
   1b3e0:	b	1b4b0 <lchmod@@Base+0x4608>
   1b3e4:	sub	r0, r1, #1024	; 0x400
   1b3e8:	cmp	r0, #10
   1b3ec:	bhi	1b4a4 <lchmod@@Base+0x45fc>
   1b3f0:	mov	r2, #1
   1b3f4:	movw	r3, #645	; 0x285
   1b3f8:	tst	r3, r2, lsl r0
   1b3fc:	bne	1b4a4 <lchmod@@Base+0x45fc>
   1b400:	movw	r3, #1282	; 0x502
   1b404:	tst	r3, r2, lsl r0
   1b408:	beq	1b418 <lchmod@@Base+0x4570>
   1b40c:	mov	r0, r5
   1b410:	bl	11a74 <fcntl64@plt>
   1b414:	b	1b4bc <lchmod@@Base+0x4614>
   1b418:	cmp	r0, #6
   1b41c:	bne	1b4a4 <lchmod@@Base+0x45fc>
   1b420:	ldr	r0, [sp, #4]
   1b424:	movw	r7, #54064	; 0xd330
   1b428:	movt	r7, #2
   1b42c:	add	r1, r0, #4
   1b430:	str	r1, [sp, #4]
   1b434:	ldr	r6, [r0]
   1b438:	ldr	r0, [r7]
   1b43c:	cmp	r0, #0
   1b440:	blt	1b4e0 <lchmod@@Base+0x4638>
   1b444:	mov	r0, r5
   1b448:	movw	r1, #1030	; 0x406
   1b44c:	mov	r2, r6
   1b450:	bl	11a74 <fcntl64@plt>
   1b454:	mov	r4, r0
   1b458:	cmn	r0, #1
   1b45c:	bgt	1b4d4 <lchmod@@Base+0x462c>
   1b460:	bl	11a08 <__errno_location@plt>
   1b464:	ldr	r0, [r0]
   1b468:	cmp	r0, #22
   1b46c:	bne	1b4d4 <lchmod@@Base+0x462c>
   1b470:	mov	r0, r5
   1b474:	mov	r1, #0
   1b478:	mov	r2, r6
   1b47c:	bl	11a74 <fcntl64@plt>
   1b480:	mov	r4, r0
   1b484:	cmp	r0, #0
   1b488:	blt	1b4c0 <lchmod@@Base+0x4618>
   1b48c:	mvn	r0, #0
   1b490:	str	r0, [r7]
   1b494:	mov	r0, #1
   1b498:	cmp	r0, #0
   1b49c:	bne	1b50c <lchmod@@Base+0x4664>
   1b4a0:	b	1b4c0 <lchmod@@Base+0x4618>
   1b4a4:	ldr	r0, [sp, #4]
   1b4a8:	add	r2, r0, #4
   1b4ac:	str	r2, [sp, #4]
   1b4b0:	ldr	r2, [r0]
   1b4b4:	mov	r0, r5
   1b4b8:	bl	11a74 <fcntl64@plt>
   1b4bc:	mov	r4, r0
   1b4c0:	mov	r0, r4
   1b4c4:	sub	sp, fp, #16
   1b4c8:	pop	{r4, r5, r6, r7, fp, lr}
   1b4cc:	add	sp, sp, #8
   1b4d0:	bx	lr
   1b4d4:	mov	r0, #1
   1b4d8:	str	r0, [r7]
   1b4dc:	b	1b4c0 <lchmod@@Base+0x4618>
   1b4e0:	mov	r0, r5
   1b4e4:	mov	r1, #0
   1b4e8:	mov	r2, r6
   1b4ec:	bl	11a74 <fcntl64@plt>
   1b4f0:	mov	r4, r0
   1b4f4:	ldr	r0, [r7]
   1b4f8:	add	r0, r0, #1
   1b4fc:	clz	r0, r0
   1b500:	lsr	r0, r0, #5
   1b504:	cmp	r0, #0
   1b508:	beq	1b4c0 <lchmod@@Base+0x4618>
   1b50c:	cmp	r4, #0
   1b510:	blt	1b4c0 <lchmod@@Base+0x4618>
   1b514:	mov	r0, r4
   1b518:	mov	r1, #1
   1b51c:	bl	11a74 <fcntl64@plt>
   1b520:	cmp	r0, #0
   1b524:	blt	1b540 <lchmod@@Base+0x4698>
   1b528:	orr	r2, r0, #1
   1b52c:	mov	r0, r4
   1b530:	mov	r1, #2
   1b534:	bl	11a74 <fcntl64@plt>
   1b538:	cmn	r0, #1
   1b53c:	bne	1b4c0 <lchmod@@Base+0x4618>
   1b540:	bl	11a08 <__errno_location@plt>
   1b544:	ldr	r6, [r0]
   1b548:	mov	r5, r0
   1b54c:	mov	r0, r4
   1b550:	bl	11b70 <close@plt>
   1b554:	str	r6, [r5]
   1b558:	mvn	r4, #0
   1b55c:	b	1b4c0 <lchmod@@Base+0x4618>
   1b560:	sub	sp, sp, #8
   1b564:	push	{fp, lr}
   1b568:	mov	fp, sp
   1b56c:	sub	sp, sp, #8
   1b570:	str	r2, [fp, #8]
   1b574:	mov	r2, #0
   1b578:	tst	r1, #64	; 0x40
   1b57c:	str	r3, [fp, #12]
   1b580:	addne	r2, fp, #8
   1b584:	orrne	r2, r2, #4
   1b588:	strne	r2, [sp, #4]
   1b58c:	ldrne	r2, [fp, #8]
   1b590:	bl	1193c <open64@plt>
   1b594:	bl	19654 <lchmod@@Base+0x27ac>
   1b598:	mov	sp, fp
   1b59c:	pop	{fp, lr}
   1b5a0:	add	sp, sp, #8
   1b5a4:	bx	lr
   1b5a8:	push	{r4, sl, fp, lr}
   1b5ac:	add	fp, sp, #8
   1b5b0:	sub	sp, sp, #8
   1b5b4:	mov	r4, r0
   1b5b8:	cmp	r0, #0
   1b5bc:	beq	1b5d8 <lchmod@@Base+0x4730>
   1b5c0:	mov	r0, r4
   1b5c4:	bl	1196c <__freading@plt>
   1b5c8:	cmp	r0, #0
   1b5cc:	ldrbne	r0, [r4, #1]
   1b5d0:	tstne	r0, #1
   1b5d4:	bne	1b5e8 <lchmod@@Base+0x4740>
   1b5d8:	mov	r0, r4
   1b5dc:	sub	sp, fp, #8
   1b5e0:	pop	{r4, sl, fp, lr}
   1b5e4:	b	117ec <fflush@plt>
   1b5e8:	mov	r0, #1
   1b5ec:	mov	r2, #0
   1b5f0:	mov	r3, #0
   1b5f4:	str	r0, [sp]
   1b5f8:	mov	r0, r4
   1b5fc:	bl	1b604 <lchmod@@Base+0x475c>
   1b600:	b	1b5d8 <lchmod@@Base+0x4730>
   1b604:	push	{r4, r5, r6, r7, fp, lr}
   1b608:	add	fp, sp, #16
   1b60c:	sub	sp, sp, #8
   1b610:	mov	r4, r0
   1b614:	ldr	r0, [r0, #4]
   1b618:	mov	r5, r3
   1b61c:	mov	r6, r2
   1b620:	ldr	r1, [r4, #8]
   1b624:	cmp	r1, r0
   1b628:	bne	1b644 <lchmod@@Base+0x479c>
   1b62c:	ldrd	r0, [r4, #16]
   1b630:	cmp	r1, r0
   1b634:	bne	1b644 <lchmod@@Base+0x479c>
   1b638:	ldr	r0, [r4, #36]	; 0x24
   1b63c:	cmp	r0, #0
   1b640:	beq	1b65c <lchmod@@Base+0x47b4>
   1b644:	mov	r0, r4
   1b648:	mov	r2, r6
   1b64c:	mov	r3, r5
   1b650:	sub	sp, fp, #16
   1b654:	pop	{r4, r5, r6, r7, fp, lr}
   1b658:	b	11a68 <fseeko64@plt>
   1b65c:	ldr	r7, [fp, #8]
   1b660:	mov	r0, r4
   1b664:	bl	11a44 <fileno@plt>
   1b668:	mov	r2, r6
   1b66c:	mov	r3, r5
   1b670:	str	r7, [sp]
   1b674:	bl	118f4 <lseek64@plt>
   1b678:	and	r2, r0, r1
   1b67c:	cmn	r2, #1
   1b680:	mvneq	r0, #0
   1b684:	subeq	sp, fp, #16
   1b688:	popeq	{r4, r5, r6, r7, fp, pc}
   1b68c:	strd	r0, [r4, #80]	; 0x50
   1b690:	ldr	r0, [r4]
   1b694:	bic	r0, r0, #16
   1b698:	str	r0, [r4]
   1b69c:	mov	r0, #0
   1b6a0:	sub	sp, fp, #16
   1b6a4:	pop	{r4, r5, r6, r7, fp, pc}
   1b6a8:	ldrb	r2, [r0]
   1b6ac:	cmp	r2, #0
   1b6b0:	beq	1b6d4 <lchmod@@Base+0x482c>
   1b6b4:	add	r3, r0, #1
   1b6b8:	mov	r0, #0
   1b6bc:	ror	r0, r0, #23
   1b6c0:	uxtab	r0, r0, r2
   1b6c4:	ldrb	r2, [r3], #1
   1b6c8:	cmp	r2, #0
   1b6cc:	bne	1b6bc <lchmod@@Base+0x4814>
   1b6d0:	b	1b6d8 <lchmod@@Base+0x4830>
   1b6d4:	mov	r0, #0
   1b6d8:	udiv	r2, r0, r1
   1b6dc:	mls	r0, r2, r1, r0
   1b6e0:	bx	lr
   1b6e4:	push	{fp, lr}
   1b6e8:	mov	fp, sp
   1b6ec:	mov	r0, #14
   1b6f0:	bl	11aa4 <nl_langinfo@plt>
   1b6f4:	movw	r1, #49875	; 0xc2d3
   1b6f8:	cmp	r0, #0
   1b6fc:	movt	r1, #1
   1b700:	movne	r1, r0
   1b704:	movw	r0, #51686	; 0xc9e6
   1b708:	ldrb	r2, [r1]
   1b70c:	movt	r0, #1
   1b710:	cmp	r2, #0
   1b714:	movne	r0, r1
   1b718:	pop	{fp, pc}
   1b71c:	push	{r4, r5, r6, r7, fp, lr}
   1b720:	add	fp, sp, #16
   1b724:	sub	sp, sp, #8
   1b728:	add	r5, sp, #4
   1b72c:	cmp	r0, #0
   1b730:	mov	r7, r2
   1b734:	mov	r4, r1
   1b738:	movne	r5, r0
   1b73c:	mov	r0, r5
   1b740:	bl	11924 <mbrtowc@plt>
   1b744:	mov	r6, r0
   1b748:	cmp	r7, #0
   1b74c:	beq	1b770 <lchmod@@Base+0x48c8>
   1b750:	cmn	r6, #2
   1b754:	bcc	1b770 <lchmod@@Base+0x48c8>
   1b758:	mov	r0, #0
   1b75c:	bl	1b7c4 <lchmod@@Base+0x491c>
   1b760:	cmp	r0, #0
   1b764:	ldrbeq	r0, [r4]
   1b768:	moveq	r6, #1
   1b76c:	streq	r0, [r5]
   1b770:	mov	r0, r6
   1b774:	sub	sp, fp, #16
   1b778:	pop	{r4, r5, r6, r7, fp, pc}
   1b77c:	cmp	r2, #0
   1b780:	beq	1b7b0 <lchmod@@Base+0x4908>
   1b784:	mvn	r3, #0
   1b788:	udiv	r3, r3, r2
   1b78c:	cmp	r3, r1
   1b790:	bcs	1b7b0 <lchmod@@Base+0x4908>
   1b794:	push	{fp, lr}
   1b798:	mov	fp, sp
   1b79c:	bl	11a08 <__errno_location@plt>
   1b7a0:	mov	r1, #12
   1b7a4:	str	r1, [r0]
   1b7a8:	mov	r0, #0
   1b7ac:	pop	{fp, pc}
   1b7b0:	mul	r1, r2, r1
   1b7b4:	b	1b094 <lchmod@@Base+0x41ec>
   1b7b8:	mov	r1, #0
   1b7bc:	mov	r2, #3
   1b7c0:	b	1b380 <lchmod@@Base+0x44d8>
   1b7c4:	push	{r4, sl, fp, lr}
   1b7c8:	add	fp, sp, #8
   1b7cc:	sub	sp, sp, #264	; 0x108
   1b7d0:	add	r1, sp, #7
   1b7d4:	movw	r2, #257	; 0x101
   1b7d8:	bl	1b828 <lchmod@@Base+0x4980>
   1b7dc:	mov	r4, #0
   1b7e0:	cmp	r0, #0
   1b7e4:	bne	1b81c <lchmod@@Base+0x4974>
   1b7e8:	movw	r1, #51692	; 0xc9ec
   1b7ec:	add	r0, sp, #7
   1b7f0:	movt	r1, #1
   1b7f4:	bl	117d4 <strcmp@plt>
   1b7f8:	cmp	r0, #0
   1b7fc:	beq	1b81c <lchmod@@Base+0x4974>
   1b800:	movw	r1, #51694	; 0xc9ee
   1b804:	add	r0, sp, #7
   1b808:	movt	r1, #1
   1b80c:	bl	117d4 <strcmp@plt>
   1b810:	mov	r4, r0
   1b814:	cmp	r0, #0
   1b818:	movwne	r4, #1
   1b81c:	mov	r0, r4
   1b820:	sub	sp, fp, #8
   1b824:	pop	{r4, sl, fp, pc}
   1b828:	push	{r4, r5, r6, r7, fp, lr}
   1b82c:	add	fp, sp, #16
   1b830:	mov	r4, r1
   1b834:	mov	r1, #0
   1b838:	mov	r6, r2
   1b83c:	bl	11a80 <setlocale@plt>
   1b840:	cmp	r0, #0
   1b844:	beq	1b874 <lchmod@@Base+0x49cc>
   1b848:	mov	r7, r0
   1b84c:	bl	119cc <strlen@plt>
   1b850:	cmp	r0, r6
   1b854:	bcs	1b894 <lchmod@@Base+0x49ec>
   1b858:	add	r2, r0, #1
   1b85c:	mov	r0, r4
   1b860:	mov	r1, r7
   1b864:	bl	11834 <memcpy@plt>
   1b868:	mov	r5, #0
   1b86c:	mov	r0, r5
   1b870:	pop	{r4, r5, r6, r7, fp, pc}
   1b874:	cmp	r6, #0
   1b878:	mov	r5, #22
   1b87c:	movne	r0, #0
   1b880:	strbne	r0, [r4]
   1b884:	movne	r0, r5
   1b888:	popne	{r4, r5, r6, r7, fp, pc}
   1b88c:	mov	r0, r5
   1b890:	pop	{r4, r5, r6, r7, fp, pc}
   1b894:	mov	r5, #34	; 0x22
   1b898:	cmp	r6, #0
   1b89c:	beq	1b8bc <lchmod@@Base+0x4a14>
   1b8a0:	sub	r6, r6, #1
   1b8a4:	mov	r0, r4
   1b8a8:	mov	r1, r7
   1b8ac:	mov	r2, r6
   1b8b0:	bl	11834 <memcpy@plt>
   1b8b4:	mov	r0, #0
   1b8b8:	strb	r0, [r4, r6]
   1b8bc:	mov	r0, r5
   1b8c0:	pop	{r4, r5, r6, r7, fp, pc}
   1b8c4:	mov	r1, #0
   1b8c8:	b	11a80 <setlocale@plt>
   1b8cc:	cmp	r3, #0
   1b8d0:	cmpeq	r2, #0
   1b8d4:	bne	1b8ec <lchmod@@Base+0x4a44>
   1b8d8:	cmp	r1, #0
   1b8dc:	cmpeq	r0, #0
   1b8e0:	mvnne	r1, #0
   1b8e4:	mvnne	r0, #0
   1b8e8:	b	1b908 <lchmod@@Base+0x4a60>
   1b8ec:	sub	sp, sp, #8
   1b8f0:	push	{sp, lr}
   1b8f4:	bl	1b918 <lchmod@@Base+0x4a70>
   1b8f8:	ldr	lr, [sp, #4]
   1b8fc:	add	sp, sp, #8
   1b900:	pop	{r2, r3}
   1b904:	bx	lr
   1b908:	push	{r1, lr}
   1b90c:	mov	r0, #8
   1b910:	bl	117bc <raise@plt>
   1b914:	pop	{r1, pc}
   1b918:	cmp	r1, r3
   1b91c:	cmpeq	r0, r2
   1b920:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b924:	mov	r4, r0
   1b928:	movcc	r0, #0
   1b92c:	mov	r5, r1
   1b930:	ldr	lr, [sp, #36]	; 0x24
   1b934:	movcc	r1, r0
   1b938:	bcc	1ba34 <lchmod@@Base+0x4b8c>
   1b93c:	cmp	r3, #0
   1b940:	clzeq	ip, r2
   1b944:	clzne	ip, r3
   1b948:	addeq	ip, ip, #32
   1b94c:	cmp	r5, #0
   1b950:	clzeq	r1, r4
   1b954:	addeq	r1, r1, #32
   1b958:	clzne	r1, r5
   1b95c:	sub	ip, ip, r1
   1b960:	sub	sl, ip, #32
   1b964:	lsl	r9, r3, ip
   1b968:	rsb	fp, ip, #32
   1b96c:	orr	r9, r9, r2, lsl sl
   1b970:	orr	r9, r9, r2, lsr fp
   1b974:	lsl	r8, r2, ip
   1b978:	cmp	r5, r9
   1b97c:	cmpeq	r4, r8
   1b980:	movcc	r0, #0
   1b984:	movcc	r1, r0
   1b988:	bcc	1b9a4 <lchmod@@Base+0x4afc>
   1b98c:	mov	r0, #1
   1b990:	subs	r4, r4, r8
   1b994:	lsl	r1, r0, sl
   1b998:	orr	r1, r1, r0, lsr fp
   1b99c:	lsl	r0, r0, ip
   1b9a0:	sbc	r5, r5, r9
   1b9a4:	cmp	ip, #0
   1b9a8:	beq	1ba34 <lchmod@@Base+0x4b8c>
   1b9ac:	lsr	r6, r8, #1
   1b9b0:	orr	r6, r6, r9, lsl #31
   1b9b4:	lsr	r7, r9, #1
   1b9b8:	mov	r2, ip
   1b9bc:	b	1b9e0 <lchmod@@Base+0x4b38>
   1b9c0:	subs	r3, r4, r6
   1b9c4:	sbc	r8, r5, r7
   1b9c8:	adds	r3, r3, r3
   1b9cc:	adc	r8, r8, r8
   1b9d0:	adds	r4, r3, #1
   1b9d4:	adc	r5, r8, #0
   1b9d8:	subs	r2, r2, #1
   1b9dc:	beq	1b9fc <lchmod@@Base+0x4b54>
   1b9e0:	cmp	r5, r7
   1b9e4:	cmpeq	r4, r6
   1b9e8:	bcs	1b9c0 <lchmod@@Base+0x4b18>
   1b9ec:	adds	r4, r4, r4
   1b9f0:	adc	r5, r5, r5
   1b9f4:	subs	r2, r2, #1
   1b9f8:	bne	1b9e0 <lchmod@@Base+0x4b38>
   1b9fc:	lsr	r3, r4, ip
   1ba00:	orr	r3, r3, r5, lsl fp
   1ba04:	lsr	r2, r5, ip
   1ba08:	orr	r3, r3, r5, lsr sl
   1ba0c:	adds	r0, r0, r4
   1ba10:	mov	r4, r3
   1ba14:	lsl	r3, r2, ip
   1ba18:	orr	r3, r3, r4, lsl sl
   1ba1c:	lsl	ip, r4, ip
   1ba20:	orr	r3, r3, r4, lsr fp
   1ba24:	adc	r1, r1, r5
   1ba28:	subs	r0, r0, ip
   1ba2c:	mov	r5, r2
   1ba30:	sbc	r1, r1, r3
   1ba34:	cmp	lr, #0
   1ba38:	strdne	r4, [lr]
   1ba3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ba40:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ba44:	mov	r7, r0
   1ba48:	ldr	r6, [pc, #72]	; 1ba98 <lchmod@@Base+0x4bf0>
   1ba4c:	ldr	r5, [pc, #72]	; 1ba9c <lchmod@@Base+0x4bf4>
   1ba50:	add	r6, pc, r6
   1ba54:	add	r5, pc, r5
   1ba58:	sub	r6, r6, r5
   1ba5c:	mov	r8, r1
   1ba60:	mov	r9, r2
   1ba64:	bl	1176c <fstatfs64@plt-0x20>
   1ba68:	asrs	r6, r6, #2
   1ba6c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ba70:	mov	r4, #0
   1ba74:	add	r4, r4, #1
   1ba78:	ldr	r3, [r5], #4
   1ba7c:	mov	r2, r9
   1ba80:	mov	r1, r8
   1ba84:	mov	r0, r7
   1ba88:	blx	r3
   1ba8c:	cmp	r6, r4
   1ba90:	bne	1ba74 <lchmod@@Base+0x4bcc>
   1ba94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ba98:	andeq	r1, r1, ip, lsr #9
   1ba9c:	andeq	r1, r1, r4, lsr #9
   1baa0:	bx	lr
   1baa4:	ldr	r3, [pc, #12]	; 1bab8 <lchmod@@Base+0x4c10>
   1baa8:	mov	r1, #0
   1baac:	add	r3, pc, r3
   1bab0:	ldr	r2, [r3]
   1bab4:	b	11a20 <__cxa_atexit@plt>
   1bab8:	ldrdeq	r1, [r1], -r0

Disassembly of section .fini:

0001babc <.fini>:
   1babc:	push	{r3, lr}
   1bac0:	pop	{r3, pc}
