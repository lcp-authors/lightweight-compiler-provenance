
../repos/coreutils/src/nohup:     file format elf32-littlearm


Disassembly of section .init:

00010c88 <.init>:
   10c88:	push	{r3, lr}
   10c8c:	bl	1147c <close@plt+0x558>
   10c90:	pop	{r3, pc}

Disassembly of section .plt:

00010c94 <calloc@plt-0x14>:
   10c94:	push	{lr}		; (str lr, [sp, #-4]!)
   10c98:	ldr	lr, [pc, #4]	; 10ca4 <calloc@plt-0x4>
   10c9c:	add	lr, pc, lr
   10ca0:	ldr	pc, [lr, #8]!
   10ca4:	andeq	r5, r1, ip, asr r3

00010ca8 <calloc@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #86016	; 0x15000
   10cb0:	ldr	pc, [ip, #860]!	; 0x35c

00010cb4 <fputs_unlocked@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #86016	; 0x15000
   10cbc:	ldr	pc, [ip, #852]!	; 0x354

00010cc0 <raise@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #86016	; 0x15000
   10cc8:	ldr	pc, [ip, #844]!	; 0x34c

00010ccc <strcmp@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #86016	; 0x15000
   10cd4:	ldr	pc, [ip, #836]!	; 0x344

00010cd8 <fflush@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #86016	; 0x15000
   10ce0:	ldr	pc, [ip, #828]!	; 0x33c

00010ce4 <free@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #86016	; 0x15000
   10cec:	ldr	pc, [ip, #820]!	; 0x334

00010cf0 <_exit@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #86016	; 0x15000
   10cf8:	ldr	pc, [ip, #812]!	; 0x32c

00010cfc <memcpy@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #86016	; 0x15000
   10d04:	ldr	pc, [ip, #804]!	; 0x324

00010d08 <execvp@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #86016	; 0x15000
   10d10:	ldr	pc, [ip, #796]!	; 0x31c

00010d14 <mbsinit@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #86016	; 0x15000
   10d1c:	ldr	pc, [ip, #788]!	; 0x314

00010d20 <signal@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #86016	; 0x15000
   10d28:	ldr	pc, [ip, #780]!	; 0x30c

00010d2c <memcmp@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #86016	; 0x15000
   10d34:	ldr	pc, [ip, #772]!	; 0x304

00010d38 <fputc_unlocked@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #86016	; 0x15000
   10d40:	ldr	pc, [ip, #764]!	; 0x2fc

00010d44 <dcgettext@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #86016	; 0x15000
   10d4c:	ldr	pc, [ip, #756]!	; 0x2f4

00010d50 <dup2@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #86016	; 0x15000
   10d58:	ldr	pc, [ip, #748]!	; 0x2ec

00010d5c <realloc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #86016	; 0x15000
   10d64:	ldr	pc, [ip, #740]!	; 0x2e4

00010d68 <textdomain@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #86016	; 0x15000
   10d70:	ldr	pc, [ip, #732]!	; 0x2dc

00010d74 <iswprint@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #86016	; 0x15000
   10d7c:	ldr	pc, [ip, #724]!	; 0x2d4

00010d80 <lseek64@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #86016	; 0x15000
   10d88:	ldr	pc, [ip, #716]!	; 0x2cc

00010d8c <__ctype_get_mb_cur_max@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #86016	; 0x15000
   10d94:	ldr	pc, [ip, #708]!	; 0x2c4

00010d98 <__fpending@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #86016	; 0x15000
   10da0:	ldr	pc, [ip, #700]!	; 0x2bc

00010da4 <ferror_unlocked@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #86016	; 0x15000
   10dac:	ldr	pc, [ip, #692]!	; 0x2b4

00010db0 <mbrtowc@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #86016	; 0x15000
   10db8:	ldr	pc, [ip, #684]!	; 0x2ac

00010dbc <error@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #86016	; 0x15000
   10dc4:	ldr	pc, [ip, #676]!	; 0x2a4

00010dc8 <open64@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #86016	; 0x15000
   10dd0:	ldr	pc, [ip, #668]!	; 0x29c

00010dd4 <getenv@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #86016	; 0x15000
   10ddc:	ldr	pc, [ip, #660]!	; 0x294

00010de0 <malloc@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #86016	; 0x15000
   10de8:	ldr	pc, [ip, #652]!	; 0x28c

00010dec <__libc_start_main@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #86016	; 0x15000
   10df4:	ldr	pc, [ip, #644]!	; 0x284

00010df8 <__freading@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #86016	; 0x15000
   10e00:	ldr	pc, [ip, #636]!	; 0x27c

00010e04 <__gmon_start__@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #86016	; 0x15000
   10e0c:	ldr	pc, [ip, #628]!	; 0x274

00010e10 <mempcpy@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #86016	; 0x15000
   10e18:	ldr	pc, [ip, #620]!	; 0x26c

00010e1c <getopt_long@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #86016	; 0x15000
   10e24:	ldr	pc, [ip, #612]!	; 0x264

00010e28 <__ctype_b_loc@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #86016	; 0x15000
   10e30:	ldr	pc, [ip, #604]!	; 0x25c

00010e34 <exit@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #86016	; 0x15000
   10e3c:	ldr	pc, [ip, #596]!	; 0x254

00010e40 <strlen@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #86016	; 0x15000
   10e48:	ldr	pc, [ip, #588]!	; 0x24c

00010e4c <__errno_location@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #86016	; 0x15000
   10e54:	ldr	pc, [ip, #580]!	; 0x244

00010e58 <__cxa_atexit@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #86016	; 0x15000
   10e60:	ldr	pc, [ip, #572]!	; 0x23c

00010e64 <memset@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #86016	; 0x15000
   10e6c:	ldr	pc, [ip, #564]!	; 0x234

00010e70 <__printf_chk@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #86016	; 0x15000
   10e78:	ldr	pc, [ip, #556]!	; 0x22c

00010e7c <fileno@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #86016	; 0x15000
   10e84:	ldr	pc, [ip, #548]!	; 0x224

00010e88 <__fprintf_chk@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #86016	; 0x15000
   10e90:	ldr	pc, [ip, #540]!	; 0x21c

00010e94 <fclose@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #86016	; 0x15000
   10e9c:	ldr	pc, [ip, #532]!	; 0x214

00010ea0 <fseeko64@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #86016	; 0x15000
   10ea8:	ldr	pc, [ip, #524]!	; 0x20c

00010eac <fcntl64@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #86016	; 0x15000
   10eb4:	ldr	pc, [ip, #516]!	; 0x204

00010eb8 <setlocale@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #86016	; 0x15000
   10ec0:	ldr	pc, [ip, #508]!	; 0x1fc

00010ec4 <strrchr@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #86016	; 0x15000
   10ecc:	ldr	pc, [ip, #500]!	; 0x1f4

00010ed0 <nl_langinfo@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #86016	; 0x15000
   10ed8:	ldr	pc, [ip, #492]!	; 0x1ec

00010edc <bindtextdomain@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #86016	; 0x15000
   10ee4:	ldr	pc, [ip, #484]!	; 0x1e4

00010ee8 <umask@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #86016	; 0x15000
   10ef0:	ldr	pc, [ip, #476]!	; 0x1dc

00010ef4 <isatty@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #86016	; 0x15000
   10efc:	ldr	pc, [ip, #468]!	; 0x1d4

00010f00 <fputs@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #86016	; 0x15000
   10f08:	ldr	pc, [ip, #460]!	; 0x1cc

00010f0c <strncmp@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #86016	; 0x15000
   10f14:	ldr	pc, [ip, #452]!	; 0x1c4

00010f18 <abort@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #86016	; 0x15000
   10f20:	ldr	pc, [ip, #444]!	; 0x1bc

00010f24 <close@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #86016	; 0x15000
   10f2c:	ldr	pc, [ip, #436]!	; 0x1b4

Disassembly of section .text:

00010f30 <.text>:
   10f30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f34:	mov	r5, r0
   10f38:	sub	sp, sp, #44	; 0x2c
   10f3c:	ldr	r0, [r1]
   10f40:	mov	r8, r1
   10f44:	bl	11db0 <close@plt+0xe8c>
   10f48:	ldr	r1, [pc, #1152]	; 113d0 <close@plt+0x4ac>
   10f4c:	mov	r0, #6
   10f50:	bl	10eb8 <setlocale@plt>
   10f54:	ldr	r1, [pc, #1144]	; 113d4 <close@plt+0x4b0>
   10f58:	ldr	r0, [pc, #1144]	; 113d8 <close@plt+0x4b4>
   10f5c:	bl	10edc <bindtextdomain@plt>
   10f60:	ldr	r0, [pc, #1136]	; 113d8 <close@plt+0x4b4>
   10f64:	bl	10d68 <textdomain@plt>
   10f68:	ldr	r0, [pc, #1132]	; 113dc <close@plt+0x4b8>
   10f6c:	bl	10dd4 <getenv@plt>
   10f70:	ldr	r3, [pc, #1128]	; 113e0 <close@plt+0x4bc>
   10f74:	mov	r4, #0
   10f78:	cmp	r0, #0
   10f7c:	movne	r6, #127	; 0x7f
   10f80:	moveq	r6, #125	; 0x7d
   10f84:	ldr	r0, [pc, #1112]	; 113e4 <close@plt+0x4c0>
   10f88:	str	r6, [r3]
   10f8c:	bl	147ac <close@plt+0x3888>
   10f90:	ldr	r3, [pc, #1104]	; 113e8 <close@plt+0x4c4>
   10f94:	str	r4, [sp, #16]
   10f98:	str	r3, [sp, #12]
   10f9c:	ldr	r3, [pc, #1096]	; 113ec <close@plt+0x4c8>
   10fa0:	str	r4, [sp, #4]
   10fa4:	str	r3, [sp, #8]
   10fa8:	ldr	r3, [pc, #1088]	; 113f0 <close@plt+0x4cc>
   10fac:	ldr	r2, [pc, #1088]	; 113f4 <close@plt+0x4d0>
   10fb0:	mov	r1, r8
   10fb4:	ldr	r3, [r3]
   10fb8:	mov	r0, r5
   10fbc:	str	r3, [sp]
   10fc0:	ldr	r3, [pc, #1072]	; 113f8 <close@plt+0x4d4>
   10fc4:	bl	11ce8 <close@plt+0xdc4>
   10fc8:	ldr	r3, [pc, #1068]	; 113fc <close@plt+0x4d8>
   10fcc:	str	r3, [sp, #36]	; 0x24
   10fd0:	ldr	r2, [r3]
   10fd4:	cmp	r5, r2
   10fd8:	bgt	11004 <close@plt+0xe0>
   10fdc:	mov	r2, #5
   10fe0:	ldr	r1, [pc, #1048]	; 11400 <close@plt+0x4dc>
   10fe4:	mov	r0, r4
   10fe8:	bl	10d44 <dcgettext@plt>
   10fec:	mov	r1, r4
   10ff0:	mov	r2, r0
   10ff4:	mov	r0, r4
   10ff8:	bl	10dbc <error@plt>
   10ffc:	mov	r0, r6
   11000:	bl	11568 <close@plt+0x644>
   11004:	mov	r0, r4
   11008:	bl	10ef4 <isatty@plt>
   1100c:	str	r0, [sp, #24]
   11010:	mov	r0, #1
   11014:	bl	10ef4 <isatty@plt>
   11018:	subs	r5, r0, #0
   1101c:	strne	r4, [sp, #28]
   11020:	bne	1103c <close@plt+0x118>
   11024:	bl	10e4c <__errno_location@plt>
   11028:	ldr	r3, [r0]
   1102c:	sub	r3, r3, #9
   11030:	clz	r3, r3
   11034:	lsr	r3, r3, #5
   11038:	str	r3, [sp, #28]
   1103c:	mov	r0, #2
   11040:	bl	10ef4 <isatty@plt>
   11044:	ldr	r3, [sp, #24]
   11048:	cmp	r3, #0
   1104c:	mov	r9, r0
   11050:	beq	11224 <close@plt+0x300>
   11054:	mov	r3, #0
   11058:	mov	r2, #1
   1105c:	ldr	r1, [pc, #928]	; 11404 <close@plt+0x4e0>
   11060:	mov	r0, r3
   11064:	bl	11aa0 <close@plt+0xb7c>
   11068:	cmp	r0, #0
   1106c:	bge	11098 <close@plt+0x174>
   11070:	bl	10e4c <__errno_location@plt>
   11074:	mov	r2, #5
   11078:	ldr	r1, [pc, #904]	; 11408 <close@plt+0x4e4>
   1107c:	ldr	r4, [r0]
   11080:	mov	r0, #0
   11084:	bl	10d44 <dcgettext@plt>
   11088:	mov	r1, r4
   1108c:	mov	r2, r0
   11090:	mov	r0, r6
   11094:	bl	10dbc <error@plt>
   11098:	cmp	r5, #0
   1109c:	cmpeq	r9, #0
   110a0:	bne	11224 <close@plt+0x300>
   110a4:	mov	r2, #5
   110a8:	ldr	r1, [pc, #860]	; 1140c <close@plt+0x4e8>
   110ac:	mov	r0, #0
   110b0:	bl	10d44 <dcgettext@plt>
   110b4:	mov	r1, #0
   110b8:	mov	r2, r0
   110bc:	mov	r0, r1
   110c0:	bl	10dbc <error@plt>
   110c4:	ldr	r3, [sp, #28]
   110c8:	cmp	r9, #0
   110cc:	moveq	r3, #0
   110d0:	andne	r3, r3, #1
   110d4:	cmp	r3, #0
   110d8:	moveq	r4, #1
   110dc:	bne	1122c <close@plt+0x308>
   110e0:	cmp	r9, #0
   110e4:	moveq	r7, #2
   110e8:	beq	11188 <close@plt+0x264>
   110ec:	mov	r2, #3
   110f0:	ldr	r1, [pc, #792]	; 11410 <close@plt+0x4ec>
   110f4:	mov	r0, #2
   110f8:	bl	118dc <close@plt+0x9b8>
   110fc:	cmp	r5, #0
   11100:	mov	r7, r0
   11104:	bne	11138 <close@plt+0x214>
   11108:	ldr	r0, [sp, #24]
   1110c:	ldr	r3, [pc, #768]	; 11414 <close@plt+0x4f0>
   11110:	cmp	r0, #0
   11114:	ldr	r1, [pc, #764]	; 11418 <close@plt+0x4f4>
   11118:	mov	r2, #5
   1111c:	moveq	r1, r3
   11120:	mov	r0, r5
   11124:	bl	10d44 <dcgettext@plt>
   11128:	mov	r1, r5
   1112c:	mov	r2, r0
   11130:	mov	r0, r5
   11134:	bl	10dbc <error@plt>
   11138:	mov	r1, #2
   1113c:	mov	r0, r4
   11140:	bl	10d50 <dup2@plt>
   11144:	cmp	r0, #0
   11148:	bge	11174 <close@plt+0x250>
   1114c:	bl	10e4c <__errno_location@plt>
   11150:	mov	r2, #5
   11154:	ldr	r1, [pc, #704]	; 1141c <close@plt+0x4f8>
   11158:	ldr	r5, [r0]
   1115c:	mov	r0, #0
   11160:	bl	10d44 <dcgettext@plt>
   11164:	mov	r1, r5
   11168:	mov	r2, r0
   1116c:	mov	r0, r6
   11170:	bl	10dbc <error@plt>
   11174:	ldr	r3, [sp, #28]
   11178:	cmp	r3, #0
   1117c:	beq	11188 <close@plt+0x264>
   11180:	mov	r0, r4
   11184:	bl	10f24 <close@plt>
   11188:	ldr	r3, [pc, #656]	; 11420 <close@plt+0x4fc>
   1118c:	ldr	r0, [r3]
   11190:	bl	10da4 <ferror_unlocked@plt>
   11194:	subs	r5, r0, #0
   11198:	bne	11218 <close@plt+0x2f4>
   1119c:	mov	r1, #1
   111a0:	mov	r0, r1
   111a4:	bl	10d20 <signal@plt>
   111a8:	ldr	r3, [sp, #36]	; 0x24
   111ac:	ldr	r4, [r3]
   111b0:	add	r1, r8, r4, lsl #2
   111b4:	ldr	r0, [r8, r4, lsl #2]
   111b8:	bl	10d08 <execvp@plt>
   111bc:	bl	10e4c <__errno_location@plt>
   111c0:	mov	r1, #2
   111c4:	ldr	r9, [r0]
   111c8:	mov	r0, r7
   111cc:	cmp	r9, #2
   111d0:	moveq	r6, #127	; 0x7f
   111d4:	movne	r6, #126	; 0x7e
   111d8:	bl	10d50 <dup2@plt>
   111dc:	cmp	r0, #2
   111e0:	bne	11218 <close@plt+0x2f4>
   111e4:	mov	r2, #5
   111e8:	ldr	r1, [pc, #564]	; 11424 <close@plt+0x500>
   111ec:	mov	r0, r5
   111f0:	bl	10d44 <dcgettext@plt>
   111f4:	ldr	r1, [r8, r4, lsl #2]
   111f8:	mov	r7, r0
   111fc:	mov	r0, #4
   11200:	bl	131fc <close@plt+0x22d8>
   11204:	mov	r2, r7
   11208:	mov	r1, r9
   1120c:	mov	r3, r0
   11210:	mov	r0, #0
   11214:	bl	10dbc <error@plt>
   11218:	mov	r0, r6
   1121c:	add	sp, sp, #44	; 0x2c
   11220:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11224:	cmp	r5, #0
   11228:	beq	110c4 <close@plt+0x1a0>
   1122c:	mvn	r0, #384	; 0x180
   11230:	bl	10ee8 <umask@plt>
   11234:	cmp	r5, #0
   11238:	str	r0, [sp, #32]
   1123c:	bne	11254 <close@plt+0x330>
   11240:	mov	r2, #384	; 0x180
   11244:	ldr	r1, [pc, #476]	; 11428 <close@plt+0x504>
   11248:	ldr	r0, [pc, #476]	; 1142c <close@plt+0x508>
   1124c:	bl	10dc8 <open64@plt>
   11250:	b	11268 <close@plt+0x344>
   11254:	mov	r3, #384	; 0x180
   11258:	ldr	r2, [pc, #456]	; 11428 <close@plt+0x504>
   1125c:	ldr	r1, [pc, #456]	; 1142c <close@plt+0x508>
   11260:	mov	r0, #1
   11264:	bl	11aa0 <close@plt+0xb7c>
   11268:	cmp	r0, #0
   1126c:	mov	r4, r0
   11270:	ldrge	sl, [pc, #436]	; 1142c <close@plt+0x508>
   11274:	movge	r7, #0
   11278:	bge	1134c <close@plt+0x428>
   1127c:	bl	10e4c <__errno_location@plt>
   11280:	ldr	fp, [r0]
   11284:	mov	sl, r0
   11288:	ldr	r0, [pc, #416]	; 11430 <close@plt+0x50c>
   1128c:	bl	10dd4 <getenv@plt>
   11290:	subs	r4, r0, #0
   11294:	beq	113a4 <close@plt+0x480>
   11298:	mov	r2, #0
   1129c:	ldr	r1, [pc, #392]	; 1142c <close@plt+0x508>
   112a0:	bl	11b00 <close@plt+0xbdc>
   112a4:	cmp	r5, #0
   112a8:	mov	r7, r0
   112ac:	beq	1133c <close@plt+0x418>
   112b0:	mov	r1, r0
   112b4:	mov	r3, #384	; 0x180
   112b8:	ldr	r2, [pc, #360]	; 11428 <close@plt+0x504>
   112bc:	mov	r0, #1
   112c0:	bl	11aa0 <close@plt+0xb7c>
   112c4:	cmp	r0, #0
   112c8:	mov	r4, r0
   112cc:	movge	sl, r7
   112d0:	bge	1134c <close@plt+0x428>
   112d4:	mov	r2, #5
   112d8:	ldr	r1, [pc, #340]	; 11434 <close@plt+0x510>
   112dc:	mov	r0, #0
   112e0:	ldr	r4, [sl]
   112e4:	bl	10d44 <dcgettext@plt>
   112e8:	ldr	r1, [pc, #316]	; 1142c <close@plt+0x508>
   112ec:	mov	r5, r0
   112f0:	mov	r0, #4
   112f4:	bl	131fc <close@plt+0x22d8>
   112f8:	mov	r2, r5
   112fc:	mov	r1, fp
   11300:	mov	r3, r0
   11304:	mov	r0, #0
   11308:	bl	10dbc <error@plt>
   1130c:	mov	r2, #5
   11310:	ldr	r1, [pc, #284]	; 11434 <close@plt+0x510>
   11314:	mov	r0, #0
   11318:	bl	10d44 <dcgettext@plt>
   1131c:	mov	r1, r7
   11320:	mov	r5, r0
   11324:	mov	r0, #4
   11328:	bl	131fc <close@plt+0x22d8>
   1132c:	mov	r2, r5
   11330:	mov	r1, r4
   11334:	mov	r3, r0
   11338:	b	11210 <close@plt+0x2ec>
   1133c:	mov	r2, #384	; 0x180
   11340:	ldr	r1, [pc, #224]	; 11428 <close@plt+0x504>
   11344:	bl	10dc8 <open64@plt>
   11348:	b	112c4 <close@plt+0x3a0>
   1134c:	ldr	r0, [sp, #32]
   11350:	bl	10ee8 <umask@plt>
   11354:	ldr	r0, [sp, #24]
   11358:	ldr	r3, [pc, #216]	; 11438 <close@plt+0x514>
   1135c:	cmp	r0, #0
   11360:	mov	r2, #5
   11364:	ldr	r1, [pc, #208]	; 1143c <close@plt+0x518>
   11368:	mov	r0, #0
   1136c:	moveq	r1, r3
   11370:	bl	10d44 <dcgettext@plt>
   11374:	mov	r1, sl
   11378:	mov	fp, r0
   1137c:	mov	r0, #4
   11380:	bl	131fc <close@plt+0x22d8>
   11384:	mov	r1, #0
   11388:	mov	r2, fp
   1138c:	mov	r3, r0
   11390:	mov	r0, r1
   11394:	bl	10dbc <error@plt>
   11398:	mov	r0, r7
   1139c:	bl	11bdc <close@plt+0xcb8>
   113a0:	b	110e0 <close@plt+0x1bc>
   113a4:	mov	r2, #5
   113a8:	ldr	r1, [pc, #132]	; 11434 <close@plt+0x510>
   113ac:	bl	10d44 <dcgettext@plt>
   113b0:	ldr	r1, [pc, #116]	; 1142c <close@plt+0x508>
   113b4:	mov	r5, r0
   113b8:	mov	r0, #4
   113bc:	bl	131fc <close@plt+0x22d8>
   113c0:	mov	r2, r5
   113c4:	mov	r1, fp
   113c8:	mov	r3, r0
   113cc:	b	11210 <close@plt+0x2ec>
   113d0:	andeq	r4, r1, r9, lsl #17
   113d4:	andeq	r4, r1, r9, lsl ip
   113d8:	andeq	r4, r1, r2, lsl fp
   113dc:	andeq	r4, r1, r1, lsr ip
   113e0:	strdeq	r6, [r2], -r4
   113e4:	strdeq	r1, [r1], -r8
   113e8:	andeq	r4, r1, r1, asr #24
   113ec:	andeq	r1, r1, r8, ror #10
   113f0:	strdeq	r6, [r2], -r0
   113f4:	andeq	r4, r1, r8, lsl #16
   113f8:	andeq	r4, r1, lr, lsl #22
   113fc:	andeq	r6, r2, r0, asr #2
   11400:	andeq	r4, r1, lr, asr #24
   11404:	andeq	r4, r1, lr, asr ip
   11408:	andeq	r4, r1, r8, ror #24
   1140c:	muleq	r1, r1, ip
   11410:	andeq	r0, r0, r6, lsl #8
   11414:	strdeq	r4, [r1], -ip
   11418:	andeq	r4, r1, r9, ror #23
   1141c:	andeq	r4, r1, r5, lsr #25
   11420:	andeq	r6, r2, r8, asr #2
   11424:	andeq	r4, r1, r7, asr #25
   11428:	andeq	r0, r0, r1, asr #8
   1142c:			; <UNDEFINED> instruction: 0x00014bb5
   11430:	andeq	r4, r1, r0, lsr #25
   11434:	andeq	r4, r1, r0, ror #25
   11438:	ldrdeq	r4, [r1], -r2
   1143c:			; <UNDEFINED> instruction: 0x00014bbf
   11440:	mov	fp, #0
   11444:	mov	lr, #0
   11448:	pop	{r1}		; (ldr r1, [sp], #4)
   1144c:	mov	r2, sp
   11450:	push	{r2}		; (str r2, [sp, #-4]!)
   11454:	push	{r0}		; (str r0, [sp, #-4]!)
   11458:	ldr	ip, [pc, #16]	; 11470 <close@plt+0x54c>
   1145c:	push	{ip}		; (str ip, [sp, #-4]!)
   11460:	ldr	r0, [pc, #12]	; 11474 <close@plt+0x550>
   11464:	ldr	r3, [pc, #12]	; 11478 <close@plt+0x554>
   11468:	bl	10dec <__libc_start_main@plt>
   1146c:	bl	10f18 <abort@plt>
   11470:	andeq	r4, r1, r8, lsr #15
   11474:	andeq	r0, r1, r0, lsr pc
   11478:	andeq	r4, r1, r8, asr #14
   1147c:	ldr	r3, [pc, #20]	; 11498 <close@plt+0x574>
   11480:	ldr	r2, [pc, #20]	; 1149c <close@plt+0x578>
   11484:	add	r3, pc, r3
   11488:	ldr	r2, [r3, r2]
   1148c:	cmp	r2, #0
   11490:	bxeq	lr
   11494:	b	10e04 <__gmon_start__@plt>
   11498:	andeq	r4, r1, r4, ror fp
   1149c:	andeq	r0, r0, r4, ror #1
   114a0:	ldr	r3, [pc, #28]	; 114c4 <close@plt+0x5a0>
   114a4:	ldr	r0, [pc, #28]	; 114c8 <close@plt+0x5a4>
   114a8:	sub	r3, r3, r0
   114ac:	cmp	r3, #6
   114b0:	bxls	lr
   114b4:	ldr	r3, [pc, #16]	; 114cc <close@plt+0x5a8>
   114b8:	cmp	r3, #0
   114bc:	bxeq	lr
   114c0:	bx	r3
   114c4:	andeq	r6, r2, fp, lsr r1
   114c8:	andeq	r6, r2, r8, lsr r1
   114cc:	andeq	r0, r0, r0
   114d0:	ldr	r1, [pc, #36]	; 114fc <close@plt+0x5d8>
   114d4:	ldr	r0, [pc, #36]	; 11500 <close@plt+0x5dc>
   114d8:	sub	r1, r1, r0
   114dc:	asr	r1, r1, #2
   114e0:	add	r1, r1, r1, lsr #31
   114e4:	asrs	r1, r1, #1
   114e8:	bxeq	lr
   114ec:	ldr	r3, [pc, #16]	; 11504 <close@plt+0x5e0>
   114f0:	cmp	r3, #0
   114f4:	bxeq	lr
   114f8:	bx	r3
   114fc:	andeq	r6, r2, r8, lsr r1
   11500:	andeq	r6, r2, r8, lsr r1
   11504:	andeq	r0, r0, r0
   11508:	push	{r4, lr}
   1150c:	ldr	r4, [pc, #24]	; 1152c <close@plt+0x608>
   11510:	ldrb	r3, [r4]
   11514:	cmp	r3, #0
   11518:	popne	{r4, pc}
   1151c:	bl	114a0 <close@plt+0x57c>
   11520:	mov	r3, #1
   11524:	strb	r3, [r4]
   11528:	pop	{r4, pc}
   1152c:	andeq	r6, r2, r4, asr r1
   11530:	ldr	r0, [pc, #40]	; 11560 <close@plt+0x63c>
   11534:	ldr	r3, [r0]
   11538:	cmp	r3, #0
   1153c:	bne	11544 <close@plt+0x620>
   11540:	b	114d0 <close@plt+0x5ac>
   11544:	ldr	r3, [pc, #24]	; 11564 <close@plt+0x640>
   11548:	cmp	r3, #0
   1154c:	beq	11540 <close@plt+0x61c>
   11550:	push	{r4, lr}
   11554:	blx	r3
   11558:	pop	{r4, lr}
   1155c:	b	114d0 <close@plt+0x5ac>
   11560:	andeq	r5, r2, r4, lsl pc
   11564:	andeq	r0, r0, r0
   11568:	subs	r4, r0, #0
   1156c:	push	{r7, lr}
   11570:	sub	sp, sp, #56	; 0x38
   11574:	ldr	r6, [pc, #520]	; 11784 <close@plt+0x860>
   11578:	beq	115b0 <close@plt+0x68c>
   1157c:	ldr	r3, [pc, #516]	; 11788 <close@plt+0x864>
   11580:	mov	r2, #5
   11584:	ldr	r1, [pc, #512]	; 1178c <close@plt+0x868>
   11588:	mov	r0, #0
   1158c:	ldr	r5, [r3]
   11590:	bl	10d44 <dcgettext@plt>
   11594:	ldr	r3, [r6]
   11598:	mov	r1, #1
   1159c:	mov	r2, r0
   115a0:	mov	r0, r5
   115a4:	bl	10e88 <__fprintf_chk@plt>
   115a8:	mov	r0, r4
   115ac:	bl	10e34 <exit@plt>
   115b0:	mov	r2, #5
   115b4:	ldr	r1, [pc, #468]	; 11790 <close@plt+0x86c>
   115b8:	bl	10d44 <dcgettext@plt>
   115bc:	ldr	r3, [r6]
   115c0:	ldr	r5, [pc, #460]	; 11794 <close@plt+0x870>
   115c4:	mov	r2, r3
   115c8:	ldr	r8, [pc, #456]	; 11798 <close@plt+0x874>
   115cc:	mov	r1, r0
   115d0:	mov	r0, #1
   115d4:	bl	10e70 <__printf_chk@plt>
   115d8:	mov	r2, #5
   115dc:	ldr	r1, [pc, #440]	; 1179c <close@plt+0x878>
   115e0:	mov	r0, r4
   115e4:	bl	10d44 <dcgettext@plt>
   115e8:	ldr	r1, [r5]
   115ec:	bl	10cb4 <fputs_unlocked@plt>
   115f0:	mov	r2, #5
   115f4:	ldr	r1, [pc, #420]	; 117a0 <close@plt+0x87c>
   115f8:	mov	r0, r4
   115fc:	bl	10d44 <dcgettext@plt>
   11600:	ldr	r1, [r5]
   11604:	bl	10cb4 <fputs_unlocked@plt>
   11608:	mov	r2, #5
   1160c:	ldr	r1, [pc, #400]	; 117a4 <close@plt+0x880>
   11610:	mov	r0, r4
   11614:	bl	10d44 <dcgettext@plt>
   11618:	ldr	r1, [r5]
   1161c:	bl	10cb4 <fputs_unlocked@plt>
   11620:	mov	r2, #5
   11624:	ldr	r1, [pc, #380]	; 117a8 <close@plt+0x884>
   11628:	mov	r0, r4
   1162c:	bl	10d44 <dcgettext@plt>
   11630:	ldr	r2, [r6]
   11634:	mov	r6, r4
   11638:	mov	r1, r0
   1163c:	mov	r0, #1
   11640:	bl	10e70 <__printf_chk@plt>
   11644:	mov	r2, #5
   11648:	ldr	r1, [pc, #348]	; 117ac <close@plt+0x888>
   1164c:	mov	r0, r4
   11650:	bl	10d44 <dcgettext@plt>
   11654:	ldr	r2, [pc, #316]	; 11798 <close@plt+0x874>
   11658:	mov	r1, r0
   1165c:	mov	r0, #1
   11660:	bl	10e70 <__printf_chk@plt>
   11664:	ldr	lr, [pc, #324]	; 117b0 <close@plt+0x88c>
   11668:	mov	ip, sp
   1166c:	ldm	lr!, {r0, r1, r2, r3}
   11670:	stmia	ip!, {r0, r1, r2, r3}
   11674:	ldm	lr!, {r0, r1, r2, r3}
   11678:	stmia	ip!, {r0, r1, r2, r3}
   1167c:	ldm	lr!, {r0, r1, r2, r3}
   11680:	stmia	ip!, {r0, r1, r2, r3}
   11684:	ldm	lr, {r0, r1}
   11688:	stm	ip, {r0, r1}
   1168c:	ldr	r1, [sp, r6]
   11690:	add	r7, sp, r6
   11694:	cmp	r1, #0
   11698:	bne	1173c <close@plt+0x818>
   1169c:	ldr	r6, [r7, #4]
   116a0:	ldr	r7, [pc, #240]	; 11798 <close@plt+0x874>
   116a4:	cmp	r6, #0
   116a8:	mov	r2, #5
   116ac:	ldr	r1, [pc, #256]	; 117b4 <close@plt+0x890>
   116b0:	mov	r0, #0
   116b4:	moveq	r6, r7
   116b8:	bl	10d44 <dcgettext@plt>
   116bc:	ldr	r3, [pc, #244]	; 117b8 <close@plt+0x894>
   116c0:	ldr	r2, [pc, #244]	; 117bc <close@plt+0x898>
   116c4:	mov	r1, r0
   116c8:	mov	r0, #1
   116cc:	bl	10e70 <__printf_chk@plt>
   116d0:	mov	r1, #0
   116d4:	mov	r0, #5
   116d8:	bl	10eb8 <setlocale@plt>
   116dc:	cmp	r0, #0
   116e0:	bne	11754 <close@plt+0x830>
   116e4:	mov	r2, #5
   116e8:	ldr	r1, [pc, #208]	; 117c0 <close@plt+0x89c>
   116ec:	mov	r0, #0
   116f0:	bl	10d44 <dcgettext@plt>
   116f4:	ldr	r3, [pc, #156]	; 11798 <close@plt+0x874>
   116f8:	ldr	r2, [pc, #184]	; 117b8 <close@plt+0x894>
   116fc:	mov	r1, r0
   11700:	mov	r0, #1
   11704:	bl	10e70 <__printf_chk@plt>
   11708:	mov	r2, #5
   1170c:	ldr	r1, [pc, #176]	; 117c4 <close@plt+0x8a0>
   11710:	mov	r0, #0
   11714:	bl	10d44 <dcgettext@plt>
   11718:	ldr	r2, [pc, #168]	; 117c8 <close@plt+0x8a4>
   1171c:	cmp	r6, r7
   11720:	ldr	r3, [pc, #164]	; 117cc <close@plt+0x8a8>
   11724:	moveq	r3, r2
   11728:	mov	r2, r6
   1172c:	mov	r1, r0
   11730:	mov	r0, #1
   11734:	bl	10e70 <__printf_chk@plt>
   11738:	b	115a8 <close@plt+0x684>
   1173c:	mov	r0, r8
   11740:	bl	10ccc <strcmp@plt>
   11744:	add	r6, r6, #8
   11748:	cmp	r0, #0
   1174c:	bne	1168c <close@plt+0x768>
   11750:	b	1169c <close@plt+0x778>
   11754:	mov	r2, #3
   11758:	ldr	r1, [pc, #112]	; 117d0 <close@plt+0x8ac>
   1175c:	bl	10f0c <strncmp@plt>
   11760:	cmp	r0, #0
   11764:	beq	116e4 <close@plt+0x7c0>
   11768:	mov	r2, #5
   1176c:	ldr	r1, [pc, #96]	; 117d4 <close@plt+0x8b0>
   11770:	mov	r0, #0
   11774:	bl	10d44 <dcgettext@plt>
   11778:	ldr	r1, [r5]
   1177c:	bl	10cb4 <fputs_unlocked@plt>
   11780:	b	116e4 <close@plt+0x7c0>
   11784:	andeq	r6, r2, r4, ror #2
   11788:	andeq	r6, r2, r8, asr #2
   1178c:	andeq	r4, r1, lr, lsl #16
   11790:	andeq	r4, r1, r5, lsr r8
   11794:	andeq	r6, r2, ip, asr #2
   11798:	andeq	r4, r1, r8, lsl #16
   1179c:	andeq	r4, r1, r2, ror #16
   117a0:	andeq	r4, r1, sl, lsl #17
   117a4:			; <UNDEFINED> instruction: 0x000148b7
   117a8:	andeq	r4, r1, sp, ror #17
   117ac:	andeq	r4, r1, r0, lsl sl
   117b0:	ldrdeq	r4, [r1], -r0
   117b4:	andeq	r4, r1, pc, asr #21
   117b8:	andeq	r4, r1, r6, ror #21
   117bc:	andeq	r4, r1, lr, lsl #22
   117c0:	andeq	r4, r1, r7, ror #22
   117c4:	andeq	r4, r1, r2, lsl #23
   117c8:	andeq	r4, r1, lr, lsl #26
   117cc:	andeq	r4, r1, r9, lsl #17
   117d0:	andeq	r4, r1, ip, lsl fp
   117d4:	andeq	r4, r1, r0, lsr #22
   117d8:	ldr	r3, [pc, #4]	; 117e4 <close@plt+0x8c0>
   117dc:	str	r0, [r3]
   117e0:	bx	lr
   117e4:	andeq	r6, r2, r8, asr r1
   117e8:	ldr	r3, [pc, #4]	; 117f4 <close@plt+0x8d0>
   117ec:	strb	r0, [r3, #4]
   117f0:	bx	lr
   117f4:	andeq	r6, r2, r8, asr r1
   117f8:	ldr	r3, [pc, #192]	; 118c0 <close@plt+0x99c>
   117fc:	push	{r0, r1, r4, r5, r6, lr}
   11800:	ldr	r0, [r3]
   11804:	bl	13f40 <close@plt+0x301c>
   11808:	cmp	r0, #0
   1180c:	beq	118a4 <close@plt+0x980>
   11810:	ldr	r3, [pc, #172]	; 118c4 <close@plt+0x9a0>
   11814:	mov	r4, r3
   11818:	ldrb	r2, [r3, #4]
   1181c:	cmp	r2, #0
   11820:	beq	11834 <close@plt+0x910>
   11824:	bl	10e4c <__errno_location@plt>
   11828:	ldr	r3, [r0]
   1182c:	cmp	r3, #32
   11830:	beq	118a4 <close@plt+0x980>
   11834:	mov	r2, #5
   11838:	ldr	r1, [pc, #136]	; 118c8 <close@plt+0x9a4>
   1183c:	mov	r0, #0
   11840:	bl	10d44 <dcgettext@plt>
   11844:	ldr	r4, [r4]
   11848:	cmp	r4, #0
   1184c:	mov	r5, r0
   11850:	beq	11888 <close@plt+0x964>
   11854:	bl	10e4c <__errno_location@plt>
   11858:	ldr	r6, [r0]
   1185c:	mov	r0, r4
   11860:	bl	13290 <close@plt+0x236c>
   11864:	str	r5, [sp]
   11868:	ldr	r2, [pc, #92]	; 118cc <close@plt+0x9a8>
   1186c:	mov	r1, r6
   11870:	mov	r3, r0
   11874:	mov	r0, #0
   11878:	bl	10dbc <error@plt>
   1187c:	ldr	r3, [pc, #76]	; 118d0 <close@plt+0x9ac>
   11880:	ldr	r0, [r3]
   11884:	bl	10cf0 <_exit@plt>
   11888:	bl	10e4c <__errno_location@plt>
   1188c:	mov	r3, r5
   11890:	ldr	r2, [pc, #60]	; 118d4 <close@plt+0x9b0>
   11894:	ldr	r1, [r0]
   11898:	mov	r0, r4
   1189c:	bl	10dbc <error@plt>
   118a0:	b	1187c <close@plt+0x958>
   118a4:	ldr	r3, [pc, #44]	; 118d8 <close@plt+0x9b4>
   118a8:	ldr	r0, [r3]
   118ac:	bl	13f40 <close@plt+0x301c>
   118b0:	cmp	r0, #0
   118b4:	bne	1187c <close@plt+0x958>
   118b8:	add	sp, sp, #8
   118bc:	pop	{r4, r5, r6, pc}
   118c0:	andeq	r6, r2, ip, asr #2
   118c4:	andeq	r6, r2, r8, asr r1
   118c8:	andeq	r4, r1, r0, ror #26
   118cc:	andeq	r4, r1, ip, ror #26
   118d0:	strdeq	r6, [r2], -r4
   118d4:	andeq	r4, r1, r0, ror sp
   118d8:	andeq	r6, r2, r8, asr #2
   118dc:	push	{r1, r2, r3}
   118e0:	push	{r0, r1, r4, r5, r6, r7, lr}
   118e4:	add	r2, sp, #32
   118e8:	ldr	r1, [sp, #28]
   118ec:	str	r2, [sp, #4]
   118f0:	cmp	r1, #0
   118f4:	beq	11938 <close@plt+0xa14>
   118f8:	ldr	r3, [pc, #396]	; 11a8c <close@plt+0xb68>
   118fc:	mov	r6, r0
   11900:	cmp	r1, r3
   11904:	beq	11944 <close@plt+0xa20>
   11908:	cmp	r1, #11
   1190c:	beq	11928 <close@plt+0xa04>
   11910:	bgt	11a54 <close@plt+0xb30>
   11914:	cmp	r1, #3
   11918:	beq	11928 <close@plt+0xa04>
   1191c:	bgt	11a30 <close@plt+0xb0c>
   11920:	cmp	r1, #1
   11924:	bne	11a3c <close@plt+0xb18>
   11928:	mov	r0, r6
   1192c:	bl	10eac <fcntl64@plt>
   11930:	mov	r4, r0
   11934:	b	119f0 <close@plt+0xacc>
   11938:	ldr	r2, [sp, #32]
   1193c:	bl	10eac <fcntl64@plt>
   11940:	b	11930 <close@plt+0xa0c>
   11944:	ldr	r5, [pc, #324]	; 11a90 <close@plt+0xb6c>
   11948:	add	r3, sp, #36	; 0x24
   1194c:	str	r3, [sp, #4]
   11950:	ldr	r3, [r5]
   11954:	ldr	r7, [r2]
   11958:	cmp	r3, #0
   1195c:	mov	r2, r7
   11960:	blt	11a04 <close@plt+0xae0>
   11964:	bl	10eac <fcntl64@plt>
   11968:	subs	r4, r0, #0
   1196c:	bge	11980 <close@plt+0xa5c>
   11970:	bl	10e4c <__errno_location@plt>
   11974:	ldr	r3, [r0]
   11978:	cmp	r3, #22
   1197c:	beq	119d0 <close@plt+0xaac>
   11980:	mov	r3, #1
   11984:	str	r3, [r5]
   11988:	cmp	r4, #0
   1198c:	blt	119f0 <close@plt+0xacc>
   11990:	ldr	r5, [r5]
   11994:	cmn	r5, #1
   11998:	bne	119f0 <close@plt+0xacc>
   1199c:	mov	r1, #1
   119a0:	mov	r0, r4
   119a4:	bl	10eac <fcntl64@plt>
   119a8:	subs	r2, r0, #0
   119ac:	bge	11a14 <close@plt+0xaf0>
   119b0:	bl	10e4c <__errno_location@plt>
   119b4:	ldr	r7, [r0]
   119b8:	mov	r6, r0
   119bc:	mov	r0, r4
   119c0:	bl	10f24 <close@plt>
   119c4:	mov	r4, r5
   119c8:	str	r7, [r6]
   119cc:	b	119f0 <close@plt+0xacc>
   119d0:	mov	r2, r7
   119d4:	mov	r1, #0
   119d8:	mov	r0, r6
   119dc:	bl	10eac <fcntl64@plt>
   119e0:	subs	r4, r0, #0
   119e4:	mvnge	r3, #0
   119e8:	strge	r3, [r5]
   119ec:	bge	11990 <close@plt+0xa6c>
   119f0:	mov	r0, r4
   119f4:	add	sp, sp, #8
   119f8:	pop	{r4, r5, r6, r7, lr}
   119fc:	add	sp, sp, #12
   11a00:	bx	lr
   11a04:	mov	r1, #0
   11a08:	bl	10eac <fcntl64@plt>
   11a0c:	mov	r4, r0
   11a10:	b	11988 <close@plt+0xa64>
   11a14:	orr	r2, r2, #1
   11a18:	mov	r1, #2
   11a1c:	mov	r0, r4
   11a20:	bl	10eac <fcntl64@plt>
   11a24:	cmn	r0, #1
   11a28:	bne	119f0 <close@plt+0xacc>
   11a2c:	b	119b0 <close@plt+0xa8c>
   11a30:	cmp	r1, #8
   11a34:	beq	11a3c <close@plt+0xb18>
   11a38:	bgt	11a4c <close@plt+0xb28>
   11a3c:	ldr	r3, [sp, #4]
   11a40:	mov	r0, r6
   11a44:	ldr	r2, [r3]
   11a48:	b	1193c <close@plt+0xa18>
   11a4c:	cmp	r1, #9
   11a50:	b	11924 <close@plt+0xa00>
   11a54:	ldr	r2, [pc, #56]	; 11a94 <close@plt+0xb70>
   11a58:	cmp	r1, r2
   11a5c:	bgt	11a74 <close@plt+0xb50>
   11a60:	cmp	r1, r3
   11a64:	ldrlt	r3, [pc, #44]	; 11a98 <close@plt+0xb74>
   11a68:	bge	11a3c <close@plt+0xb18>
   11a6c:	cmp	r1, r3
   11a70:	b	11924 <close@plt+0xa00>
   11a74:	ldr	r3, [pc, #32]	; 11a9c <close@plt+0xb78>
   11a78:	cmp	r1, r3
   11a7c:	beq	11a3c <close@plt+0xb18>
   11a80:	blt	11928 <close@plt+0xa04>
   11a84:	add	r3, r3, #1
   11a88:	b	11a6c <close@plt+0xb48>
   11a8c:	andeq	r0, r0, r6, lsl #8
   11a90:	andeq	r6, r2, r0, ror #2
   11a94:	andeq	r0, r0, r7, lsl #8
   11a98:	andeq	r0, r0, r1, lsl #8
   11a9c:	andeq	r0, r0, r9, lsl #8
   11aa0:	push	{r4, r5, r6, r7, r8, lr}
   11aa4:	mov	r5, r0
   11aa8:	mov	r0, r1
   11aac:	mov	r1, r2
   11ab0:	mov	r2, r3
   11ab4:	bl	10dc8 <open64@plt>
   11ab8:	sub	r3, r5, r0
   11abc:	clz	r3, r3
   11ac0:	lsr	r3, r3, #5
   11ac4:	orrs	r3, r3, r0, lsr #31
   11ac8:	mov	r4, r0
   11acc:	bne	11af8 <close@plt+0xbd4>
   11ad0:	mov	r1, r5
   11ad4:	bl	10d50 <dup2@plt>
   11ad8:	mov	r6, r0
   11adc:	bl	10e4c <__errno_location@plt>
   11ae0:	ldr	r7, [r0]
   11ae4:	mov	r5, r0
   11ae8:	mov	r0, r4
   11aec:	mov	r4, r6
   11af0:	bl	10f24 <close@plt>
   11af4:	str	r7, [r5]
   11af8:	mov	r0, r4
   11afc:	pop	{r4, r5, r6, r7, r8, pc}
   11b00:	push	{r4, lr}
   11b04:	bl	11b14 <close@plt+0xbf0>
   11b08:	cmp	r0, #0
   11b0c:	popne	{r4, pc}
   11b10:	bl	13d8c <close@plt+0x2e68>
   11b14:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b18:	mov	r6, r1
   11b1c:	mov	r9, r2
   11b20:	mov	r7, r0
   11b24:	bl	13eb0 <close@plt+0x2f8c>
   11b28:	mov	r5, r0
   11b2c:	bl	13f10 <close@plt+0x2fec>
   11b30:	sub	r5, r5, r7
   11b34:	mov	r4, r0
   11b38:	add	r5, r5, r0
   11b3c:	mov	r0, r6
   11b40:	bl	10e40 <strlen@plt>
   11b44:	cmp	r4, #0
   11b48:	mov	r8, r0
   11b4c:	beq	11bc8 <close@plt+0xca4>
   11b50:	add	r3, r7, r5
   11b54:	ldrb	r3, [r3, #-1]
   11b58:	cmp	r3, #47	; 0x2f
   11b5c:	moveq	r4, #0
   11b60:	beq	11b74 <close@plt+0xc50>
   11b64:	ldrb	r4, [r6]
   11b68:	cmp	r4, #47	; 0x2f
   11b6c:	movne	r4, #47	; 0x2f
   11b70:	moveq	r4, #0
   11b74:	adds	fp, r4, #0
   11b78:	add	r0, r8, #1
   11b7c:	movne	fp, #1
   11b80:	add	r0, r0, r5
   11b84:	add	r0, r0, fp
   11b88:	bl	13e14 <close@plt+0x2ef0>
   11b8c:	subs	sl, r0, #0
   11b90:	beq	11bc0 <close@plt+0xc9c>
   11b94:	mov	r2, r5
   11b98:	mov	r1, r7
   11b9c:	bl	10e10 <mempcpy@plt>
   11ba0:	cmp	r9, #0
   11ba4:	mov	r2, r8
   11ba8:	mov	r1, r6
   11bac:	strb	r4, [r0], fp
   11bb0:	strne	r0, [r9]
   11bb4:	bl	10e10 <mempcpy@plt>
   11bb8:	mov	r3, #0
   11bbc:	strb	r3, [r0]
   11bc0:	mov	r0, sl
   11bc4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11bc8:	ldrb	r4, [r6]
   11bcc:	cmp	r4, #47	; 0x2f
   11bd0:	moveq	r4, #46	; 0x2e
   11bd4:	movne	r4, #0
   11bd8:	b	11b74 <close@plt+0xc50>
   11bdc:	push	{r0, r1, r2, r4, r5, lr}
   11be0:	mov	r5, r0
   11be4:	bl	10e4c <__errno_location@plt>
   11be8:	ldr	r3, [r0]
   11bec:	mov	r4, r0
   11bf0:	str	r3, [sp]
   11bf4:	str	r3, [sp, #4]
   11bf8:	mov	r3, #0
   11bfc:	str	r3, [r0]
   11c00:	mov	r0, r5
   11c04:	bl	10ce4 <free@plt>
   11c08:	ldr	r3, [r4]
   11c0c:	add	r2, sp, #8
   11c10:	cmp	r3, #0
   11c14:	moveq	r3, #4
   11c18:	movne	r3, #0
   11c1c:	add	r3, r2, r3
   11c20:	ldr	r3, [r3, #-8]
   11c24:	str	r3, [r4]
   11c28:	add	sp, sp, #12
   11c2c:	pop	{r4, r5, pc}
   11c30:	ldr	ip, [pc, #156]	; 11cd4 <close@plt+0xdb0>
   11c34:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   11c38:	cmp	r0, #2
   11c3c:	mov	r6, #0
   11c40:	ldr	r7, [ip]
   11c44:	mov	r8, ip
   11c48:	str	r6, [ip]
   11c4c:	bne	11c80 <close@plt+0xd5c>
   11c50:	mov	r5, r3
   11c54:	mov	r4, r2
   11c58:	str	r6, [sp]
   11c5c:	ldr	r3, [pc, #116]	; 11cd8 <close@plt+0xdb4>
   11c60:	ldr	r2, [pc, #116]	; 11cdc <close@plt+0xdb8>
   11c64:	bl	10e1c <getopt_long@plt>
   11c68:	cmn	r0, #1
   11c6c:	beq	11c80 <close@plt+0xd5c>
   11c70:	cmp	r0, #104	; 0x68
   11c74:	beq	11c98 <close@plt+0xd74>
   11c78:	cmp	r0, #118	; 0x76
   11c7c:	beq	11ca8 <close@plt+0xd84>
   11c80:	ldr	r3, [pc, #88]	; 11ce0 <close@plt+0xdbc>
   11c84:	mov	r2, #0
   11c88:	str	r7, [r8]
   11c8c:	str	r2, [r3]
   11c90:	add	sp, sp, #16
   11c94:	pop	{r4, r5, r6, r7, r8, pc}
   11c98:	mov	r0, r6
   11c9c:	ldr	r3, [sp, #44]	; 0x2c
   11ca0:	blx	r3
   11ca4:	b	11c80 <close@plt+0xd5c>
   11ca8:	ldr	r0, [pc, #52]	; 11ce4 <close@plt+0xdc0>
   11cac:	add	r3, sp, #48	; 0x30
   11cb0:	str	r3, [sp]
   11cb4:	str	r3, [sp, #12]
   11cb8:	ldr	r0, [r0]
   11cbc:	ldr	r3, [sp, #40]	; 0x28
   11cc0:	mov	r2, r5
   11cc4:	mov	r1, r4
   11cc8:	bl	137ec <close@plt+0x28c8>
   11ccc:	mov	r0, r6
   11cd0:	bl	10e34 <exit@plt>
   11cd4:	andeq	r6, r2, r0, asr r1
   11cd8:	andeq	r4, r1, r4, ror sp
   11cdc:	andeq	r4, r1, r4, lsr #27
   11ce0:	andeq	r6, r2, r0, asr #2
   11ce4:	andeq	r6, r2, ip, asr #2
   11ce8:	push	{r4, r5, r6, r7, r8, r9, lr}
   11cec:	sub	sp, sp, #20
   11cf0:	mov	r8, r3
   11cf4:	ldrb	lr, [sp, #52]	; 0x34
   11cf8:	ldr	r3, [pc, #152]	; 11d98 <close@plt+0xe74>
   11cfc:	mov	r4, #0
   11d00:	ldr	ip, [pc, #148]	; 11d9c <close@plt+0xe78>
   11d04:	cmp	lr, r4
   11d08:	mov	r7, r2
   11d0c:	mov	r2, #1
   11d10:	ldr	r9, [r3]
   11d14:	mov	r5, r3
   11d18:	str	r2, [r3]
   11d1c:	ldr	r2, [pc, #124]	; 11da0 <close@plt+0xe7c>
   11d20:	str	r4, [sp]
   11d24:	moveq	r2, ip
   11d28:	ldr	r3, [pc, #116]	; 11da4 <close@plt+0xe80>
   11d2c:	ldr	r6, [sp, #56]	; 0x38
   11d30:	bl	10e1c <getopt_long@plt>
   11d34:	cmn	r0, #1
   11d38:	beq	11d60 <close@plt+0xe3c>
   11d3c:	cmp	r0, #104	; 0x68
   11d40:	beq	11d58 <close@plt+0xe34>
   11d44:	cmp	r0, #118	; 0x76
   11d48:	beq	11d6c <close@plt+0xe48>
   11d4c:	ldr	r3, [pc, #84]	; 11da8 <close@plt+0xe84>
   11d50:	ldr	r0, [r3]
   11d54:	b	11d5c <close@plt+0xe38>
   11d58:	mov	r0, r4
   11d5c:	blx	r6
   11d60:	str	r9, [r5]
   11d64:	add	sp, sp, #20
   11d68:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11d6c:	ldr	r0, [pc, #56]	; 11dac <close@plt+0xe88>
   11d70:	add	r3, sp, #60	; 0x3c
   11d74:	str	r3, [sp]
   11d78:	str	r3, [sp, #12]
   11d7c:	ldr	r0, [r0]
   11d80:	ldr	r3, [sp, #48]	; 0x30
   11d84:	mov	r2, r8
   11d88:	mov	r1, r7
   11d8c:	bl	137ec <close@plt+0x28c8>
   11d90:	mov	r0, r4
   11d94:	bl	10e34 <exit@plt>
   11d98:	andeq	r6, r2, r0, asr r1
   11d9c:	andeq	r4, r1, r4, lsr #27
   11da0:	andeq	r4, r1, r9, lsl #17
   11da4:	andeq	r4, r1, r4, ror sp
   11da8:	strdeq	r6, [r2], -r4
   11dac:	andeq	r6, r2, ip, asr #2
   11db0:	push	{r4, r5, r6, lr}
   11db4:	subs	r5, r0, #0
   11db8:	bne	11dd0 <close@plt+0xeac>
   11dbc:	ldr	r3, [pc, #124]	; 11e40 <close@plt+0xf1c>
   11dc0:	ldr	r0, [pc, #124]	; 11e44 <close@plt+0xf20>
   11dc4:	ldr	r1, [r3]
   11dc8:	bl	10f00 <fputs@plt>
   11dcc:	bl	10f18 <abort@plt>
   11dd0:	mov	r1, #47	; 0x2f
   11dd4:	bl	10ec4 <strrchr@plt>
   11dd8:	cmp	r0, #0
   11ddc:	addne	r4, r0, #1
   11de0:	moveq	r4, r5
   11de4:	sub	r3, r4, r5
   11de8:	cmp	r3, #6
   11dec:	ble	11e2c <close@plt+0xf08>
   11df0:	mov	r2, #7
   11df4:	ldr	r1, [pc, #76]	; 11e48 <close@plt+0xf24>
   11df8:	sub	r0, r4, #7
   11dfc:	bl	10f0c <strncmp@plt>
   11e00:	cmp	r0, #0
   11e04:	bne	11e2c <close@plt+0xf08>
   11e08:	mov	r2, #3
   11e0c:	ldr	r1, [pc, #56]	; 11e4c <close@plt+0xf28>
   11e10:	mov	r0, r4
   11e14:	bl	10f0c <strncmp@plt>
   11e18:	cmp	r0, #0
   11e1c:	movne	r5, r4
   11e20:	ldreq	r3, [pc, #40]	; 11e50 <close@plt+0xf2c>
   11e24:	addeq	r5, r4, #3
   11e28:	streq	r5, [r3]
   11e2c:	ldr	r3, [pc, #32]	; 11e54 <close@plt+0xf30>
   11e30:	str	r5, [r3]
   11e34:	ldr	r3, [pc, #28]	; 11e58 <close@plt+0xf34>
   11e38:	str	r5, [r3]
   11e3c:	pop	{r4, r5, r6, pc}
   11e40:	andeq	r6, r2, r8, asr #2
   11e44:			; <UNDEFINED> instruction: 0x00014db3
   11e48:	andeq	r4, r1, fp, ror #27
   11e4c:	strdeq	r4, [r1], -r3
   11e50:	andeq	r6, r2, r8, lsr r1
   11e54:	andeq	r6, r2, r4, ror #2
   11e58:	andeq	r6, r2, ip, lsr r1
   11e5c:	push	{r4, r5, r6, lr}
   11e60:	mov	r2, #48	; 0x30
   11e64:	mov	r5, r1
   11e68:	mov	r1, #0
   11e6c:	mov	r4, r0
   11e70:	bl	10e64 <memset@plt>
   11e74:	cmp	r5, #10
   11e78:	bne	11e80 <close@plt+0xf5c>
   11e7c:	bl	10f18 <abort@plt>
   11e80:	str	r5, [r4]
   11e84:	mov	r0, r4
   11e88:	pop	{r4, r5, r6, pc}
   11e8c:	push	{r4, r5, r6, lr}
   11e90:	mov	r4, r0
   11e94:	mov	r5, r1
   11e98:	bl	1413c <close@plt+0x3218>
   11e9c:	ldrb	r3, [r0]
   11ea0:	bic	r3, r3, #32
   11ea4:	cmp	r3, #85	; 0x55
   11ea8:	bne	11f18 <close@plt+0xff4>
   11eac:	ldrb	r3, [r0, #1]
   11eb0:	bic	r3, r3, #32
   11eb4:	cmp	r3, #84	; 0x54
   11eb8:	bne	11ef0 <close@plt+0xfcc>
   11ebc:	ldrb	r3, [r0, #2]
   11ec0:	bic	r3, r3, #32
   11ec4:	cmp	r3, #70	; 0x46
   11ec8:	bne	11ef0 <close@plt+0xfcc>
   11ecc:	ldrb	r3, [r0, #3]
   11ed0:	cmp	r3, #45	; 0x2d
   11ed4:	bne	11ef0 <close@plt+0xfcc>
   11ed8:	ldrb	r3, [r0, #4]
   11edc:	cmp	r3, #56	; 0x38
   11ee0:	bne	11ef0 <close@plt+0xfcc>
   11ee4:	ldrb	r3, [r0, #5]
   11ee8:	cmp	r3, #0
   11eec:	beq	11f04 <close@plt+0xfe0>
   11ef0:	ldr	r1, [pc, #144]	; 11f88 <close@plt+0x1064>
   11ef4:	ldr	r0, [pc, #144]	; 11f8c <close@plt+0x1068>
   11ef8:	cmp	r5, #9
   11efc:	movne	r0, r1
   11f00:	pop	{r4, r5, r6, pc}
   11f04:	ldrb	r3, [r4]
   11f08:	ldr	r1, [pc, #128]	; 11f90 <close@plt+0x106c>
   11f0c:	ldr	r0, [pc, #128]	; 11f94 <close@plt+0x1070>
   11f10:	cmp	r3, #96	; 0x60
   11f14:	b	11efc <close@plt+0xfd8>
   11f18:	cmp	r3, #71	; 0x47
   11f1c:	bne	11ef0 <close@plt+0xfcc>
   11f20:	ldrb	r3, [r0, #1]
   11f24:	bic	r3, r3, #32
   11f28:	cmp	r3, #66	; 0x42
   11f2c:	bne	11ef0 <close@plt+0xfcc>
   11f30:	ldrb	r3, [r0, #2]
   11f34:	cmp	r3, #49	; 0x31
   11f38:	bne	11ef0 <close@plt+0xfcc>
   11f3c:	ldrb	r3, [r0, #3]
   11f40:	cmp	r3, #56	; 0x38
   11f44:	bne	11ef0 <close@plt+0xfcc>
   11f48:	ldrb	r3, [r0, #4]
   11f4c:	cmp	r3, #48	; 0x30
   11f50:	bne	11ef0 <close@plt+0xfcc>
   11f54:	ldrb	r3, [r0, #5]
   11f58:	cmp	r3, #51	; 0x33
   11f5c:	bne	11ef0 <close@plt+0xfcc>
   11f60:	ldrb	r3, [r0, #6]
   11f64:	cmp	r3, #48	; 0x30
   11f68:	bne	11ef0 <close@plt+0xfcc>
   11f6c:	ldrb	r3, [r0, #7]
   11f70:	cmp	r3, #0
   11f74:	bne	11ef0 <close@plt+0xfcc>
   11f78:	ldrb	r3, [r4]
   11f7c:	ldr	r1, [pc, #20]	; 11f98 <close@plt+0x1074>
   11f80:	ldr	r0, [pc, #20]	; 11f9c <close@plt+0x1078>
   11f84:	b	11f10 <close@plt+0xfec>
   11f88:	andeq	r4, r1, sp, asr lr
   11f8c:	andeq	r4, r1, fp, asr lr
   11f90:	andeq	r4, r1, r0, asr lr
   11f94:	andeq	r4, r1, ip, asr #28
   11f98:	andeq	r4, r1, r8, asr lr
   11f9c:	andeq	r4, r1, r4, asr lr
   11fa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11fa4:	sub	sp, sp, #108	; 0x6c
   11fa8:	mov	r8, r0
   11fac:	str	r3, [sp, #36]	; 0x24
   11fb0:	mov	r5, r1
   11fb4:	str	r2, [sp, #44]	; 0x2c
   11fb8:	ldr	sl, [sp, #144]	; 0x90
   11fbc:	bl	10d8c <__ctype_get_mb_cur_max@plt>
   11fc0:	ldr	r3, [sp, #148]	; 0x94
   11fc4:	mov	r7, #0
   11fc8:	str	r7, [sp, #48]	; 0x30
   11fcc:	lsr	r6, r3, #1
   11fd0:	and	r6, r6, #1
   11fd4:	mov	r3, #1
   11fd8:	str	r3, [sp, #72]	; 0x48
   11fdc:	str	r7, [sp, #24]
   11fe0:	str	r7, [sp, #32]
   11fe4:	str	r7, [sp, #40]	; 0x28
   11fe8:	str	r7, [sp, #60]	; 0x3c
   11fec:	str	r0, [sp, #76]	; 0x4c
   11ff0:	cmp	sl, #10
   11ff4:	ldrls	pc, [pc, sl, lsl #2]
   11ff8:	b	12234 <close@plt+0x1310>
   11ffc:	andeq	r2, r1, r8, lsr #32
   12000:			; <UNDEFINED> instruction: 0x00012cbc
   12004:	andeq	r2, r1, r0, lsl #4
   12008:	andeq	r2, r1, ip, asr #4
   1200c:	ldrdeq	r2, [r1], -ip
   12010:	andeq	r2, r1, r4, lsr r0
   12014:	muleq	r1, ip, ip
   12018:	andeq	r2, r1, r8, lsr r2
   1201c:	andeq	r2, r1, ip, lsr #2
   12020:	andeq	r2, r1, ip, lsr #2
   12024:	andeq	r2, r1, ip, lsr #2
   12028:	mov	r6, #0
   1202c:	mov	r4, #0
   12030:	b	12060 <close@plt+0x113c>
   12034:	cmp	r6, #0
   12038:	bne	1225c <close@plt+0x1338>
   1203c:	cmp	r5, #0
   12040:	movne	r3, #34	; 0x22
   12044:	strbne	r3, [r8]
   12048:	mov	r3, #1
   1204c:	str	r3, [sp, #24]
   12050:	str	r3, [sp, #32]
   12054:	mov	r4, #1
   12058:	ldr	r3, [pc, #3172]	; 12cc4 <close@plt+0x1da0>
   1205c:	str	r3, [sp, #40]	; 0x28
   12060:	mov	r9, r5
   12064:	mov	r3, #0
   12068:	str	r7, [sp, #68]	; 0x44
   1206c:	str	r3, [sp, #28]
   12070:	ldr	r3, [sp, #36]	; 0x24
   12074:	cmn	r3, #1
   12078:	bne	12c08 <close@plt+0x1ce4>
   1207c:	ldr	r3, [sp, #44]	; 0x2c
   12080:	ldr	r2, [sp, #28]
   12084:	ldrb	r3, [r3, r2]
   12088:	adds	r3, r3, #0
   1208c:	movne	r3, #1
   12090:	str	r3, [sp, #52]	; 0x34
   12094:	ldr	r3, [sp, #52]	; 0x34
   12098:	cmp	r3, #0
   1209c:	bne	12284 <close@plt+0x1360>
   120a0:	sub	r2, sl, #2
   120a4:	clz	r2, r2
   120a8:	lsr	r2, r2, #5
   120ac:	and	r3, r6, r2
   120b0:	cmp	r4, #0
   120b4:	movne	r3, #0
   120b8:	andeq	r3, r3, #1
   120bc:	cmp	r3, #0
   120c0:	bne	1244c <close@plt+0x1528>
   120c4:	eor	r3, r6, #1
   120c8:	ands	r2, r2, r3
   120cc:	beq	12c40 <close@plt+0x1d1c>
   120d0:	ldr	r3, [sp, #68]	; 0x44
   120d4:	cmp	r3, #0
   120d8:	beq	12c78 <close@plt+0x1d54>
   120dc:	ldr	r3, [sp, #72]	; 0x48
   120e0:	cmp	r3, #0
   120e4:	beq	12c1c <close@plt+0x1cf8>
   120e8:	ldr	r3, [sp, #160]	; 0xa0
   120ec:	ldr	r2, [sp, #44]	; 0x2c
   120f0:	str	r3, [sp, #16]
   120f4:	ldr	r3, [sp, #156]	; 0x9c
   120f8:	ldr	r1, [sp, #60]	; 0x3c
   120fc:	str	r3, [sp, #12]
   12100:	ldr	r3, [sp, #152]	; 0x98
   12104:	str	r3, [sp, #8]
   12108:	ldr	r3, [sp, #148]	; 0x94
   1210c:	str	r3, [sp, #4]
   12110:	mov	r3, #5
   12114:	str	r3, [sp]
   12118:	ldr	r3, [sp, #36]	; 0x24
   1211c:	mov	r0, r8
   12120:	bl	11fa0 <close@plt+0x107c>
   12124:	mov	r4, r0
   12128:	b	12c6c <close@plt+0x1d48>
   1212c:	cmp	sl, #10
   12130:	beq	1218c <close@plt+0x1268>
   12134:	ldr	r4, [pc, #2956]	; 12cc8 <close@plt+0x1da4>
   12138:	mov	r2, #5
   1213c:	mov	r1, r4
   12140:	mov	r0, #0
   12144:	bl	10d44 <dcgettext@plt>
   12148:	cmp	r0, r4
   1214c:	str	r0, [sp, #156]	; 0x9c
   12150:	bne	12160 <close@plt+0x123c>
   12154:	mov	r1, sl
   12158:	bl	11e8c <close@plt+0xf68>
   1215c:	str	r0, [sp, #156]	; 0x9c
   12160:	ldr	r4, [pc, #2916]	; 12ccc <close@plt+0x1da8>
   12164:	mov	r2, #5
   12168:	mov	r1, r4
   1216c:	mov	r0, #0
   12170:	bl	10d44 <dcgettext@plt>
   12174:	cmp	r0, r4
   12178:	str	r0, [sp, #160]	; 0xa0
   1217c:	bne	1218c <close@plt+0x1268>
   12180:	mov	r1, sl
   12184:	bl	11e8c <close@plt+0xf68>
   12188:	str	r0, [sp, #160]	; 0xa0
   1218c:	cmp	r6, #0
   12190:	moveq	r4, r6
   12194:	beq	121ac <close@plt+0x1288>
   12198:	mov	r4, #0
   1219c:	b	121bc <close@plt+0x1298>
   121a0:	cmp	r5, r4
   121a4:	strbhi	r3, [r8, r4]
   121a8:	add	r4, r4, #1
   121ac:	ldr	r3, [sp, #156]	; 0x9c
   121b0:	ldrb	r3, [r3, r4]
   121b4:	cmp	r3, #0
   121b8:	bne	121a0 <close@plt+0x127c>
   121bc:	ldr	r0, [sp, #160]	; 0xa0
   121c0:	bl	10e40 <strlen@plt>
   121c4:	ldr	r3, [sp, #160]	; 0xa0
   121c8:	str	r3, [sp, #40]	; 0x28
   121cc:	mov	r3, #1
   121d0:	str	r3, [sp, #24]
   121d4:	str	r0, [sp, #32]
   121d8:	b	12060 <close@plt+0x113c>
   121dc:	mov	r3, #1
   121e0:	cmp	r6, #0
   121e4:	streq	r3, [sp, #24]
   121e8:	beq	12208 <close@plt+0x12e4>
   121ec:	str	r3, [sp, #32]
   121f0:	ldr	r3, [pc, #2772]	; 12ccc <close@plt+0x1da8>
   121f4:	mov	r4, #0
   121f8:	str	r3, [sp, #40]	; 0x28
   121fc:	b	1222c <close@plt+0x1308>
   12200:	cmp	r6, #0
   12204:	bne	12274 <close@plt+0x1350>
   12208:	cmp	r5, #0
   1220c:	movne	r3, #39	; 0x27
   12210:	strbne	r3, [r8]
   12214:	mov	r3, #1
   12218:	str	r3, [sp, #32]
   1221c:	mov	r6, #0
   12220:	ldr	r3, [pc, #2724]	; 12ccc <close@plt+0x1da8>
   12224:	mov	r4, #1
   12228:	str	r3, [sp, #40]	; 0x28
   1222c:	mov	sl, #2
   12230:	b	12060 <close@plt+0x113c>
   12234:	bl	10f18 <abort@plt>
   12238:	mov	r6, #0
   1223c:	mov	r3, #1
   12240:	str	r3, [sp, #24]
   12244:	mov	r4, r6
   12248:	b	12060 <close@plt+0x113c>
   1224c:	mov	r6, #1
   12250:	str	r6, [sp, #24]
   12254:	str	r6, [sp, #32]
   12258:	b	121f0 <close@plt+0x12cc>
   1225c:	mov	r3, #1
   12260:	str	r3, [sp, #32]
   12264:	ldr	r3, [pc, #2648]	; 12cc4 <close@plt+0x1da0>
   12268:	str	r6, [sp, #24]
   1226c:	str	r3, [sp, #40]	; 0x28
   12270:	b	1202c <close@plt+0x1108>
   12274:	mov	r3, #1
   12278:	str	r3, [sp, #32]
   1227c:	ldr	r3, [pc, #2632]	; 12ccc <close@plt+0x1da8>
   12280:	b	1226c <close@plt+0x1348>
   12284:	ldr	r3, [sp, #32]
   12288:	ldr	fp, [sp, #24]
   1228c:	cmp	sl, #2
   12290:	moveq	fp, #0
   12294:	andne	fp, fp, #1
   12298:	adds	r5, r3, #0
   1229c:	movne	r5, #1
   122a0:	ands	r3, r5, fp
   122a4:	str	r3, [sp, #64]	; 0x40
   122a8:	beq	12378 <close@plt+0x1454>
   122ac:	ldr	r2, [sp, #32]
   122b0:	ldr	r3, [sp, #28]
   122b4:	add	r7, r3, r2
   122b8:	mov	r3, r2
   122bc:	ldr	r2, [sp, #36]	; 0x24
   122c0:	cmp	r3, #1
   122c4:	movls	r3, #0
   122c8:	movhi	r3, #1
   122cc:	cmn	r2, #1
   122d0:	movne	r3, #0
   122d4:	cmp	r3, #0
   122d8:	beq	122e8 <close@plt+0x13c4>
   122dc:	ldr	r0, [sp, #44]	; 0x2c
   122e0:	bl	10e40 <strlen@plt>
   122e4:	str	r0, [sp, #36]	; 0x24
   122e8:	ldr	r3, [sp, #36]	; 0x24
   122ec:	cmp	r3, r7
   122f0:	bcc	12370 <close@plt+0x144c>
   122f4:	ldr	r3, [sp, #44]	; 0x2c
   122f8:	ldr	r0, [sp, #28]
   122fc:	ldr	r2, [sp, #32]
   12300:	ldr	r1, [sp, #40]	; 0x28
   12304:	add	r0, r3, r0
   12308:	bl	10d2c <memcmp@plt>
   1230c:	cmp	r0, #0
   12310:	bne	12370 <close@plt+0x144c>
   12314:	cmp	r6, #0
   12318:	beq	12378 <close@plt+0x1454>
   1231c:	str	r6, [sp, #24]
   12320:	ldr	r3, [sp, #24]
   12324:	ldr	r2, [sp, #44]	; 0x2c
   12328:	cmp	sl, #2
   1232c:	movne	r3, #0
   12330:	andeq	r3, r3, #1
   12334:	cmp	r3, #0
   12338:	ldr	r3, [sp, #160]	; 0xa0
   1233c:	movne	sl, #4
   12340:	str	r3, [sp, #16]
   12344:	ldr	r3, [sp, #156]	; 0x9c
   12348:	str	sl, [sp]
   1234c:	str	r3, [sp, #12]
   12350:	mov	r3, #0
   12354:	str	r3, [sp, #8]
   12358:	ldr	r3, [sp, #148]	; 0x94
   1235c:	mov	r1, r9
   12360:	bic	r3, r3, #2
   12364:	str	r3, [sp, #4]
   12368:	ldr	r3, [sp, #36]	; 0x24
   1236c:	b	1211c <close@plt+0x11f8>
   12370:	mov	r3, #0
   12374:	str	r3, [sp, #64]	; 0x40
   12378:	ldr	r2, [sp, #28]
   1237c:	ldr	r3, [sp, #44]	; 0x2c
   12380:	add	r3, r3, r2
   12384:	str	r3, [sp, #80]	; 0x50
   12388:	ldr	r3, [sp, #44]	; 0x2c
   1238c:	ldrb	r7, [r3, r2]
   12390:	cmp	r7, #58	; 0x3a
   12394:	bhi	124fc <close@plt+0x15d8>
   12398:	cmp	r7, #43	; 0x2b
   1239c:	bcs	12550 <close@plt+0x162c>
   123a0:	cmp	r7, #32
   123a4:	beq	125a8 <close@plt+0x1684>
   123a8:	bhi	12454 <close@plt+0x1530>
   123ac:	cmp	r7, #9
   123b0:	beq	1285c <close@plt+0x1938>
   123b4:	bhi	12418 <close@plt+0x14f4>
   123b8:	cmp	r7, #7
   123bc:	beq	12908 <close@plt+0x19e4>
   123c0:	bhi	125c4 <close@plt+0x16a0>
   123c4:	cmp	r7, #0
   123c8:	beq	125e0 <close@plt+0x16bc>
   123cc:	ldr	r3, [sp, #76]	; 0x4c
   123d0:	cmp	r3, #1
   123d4:	bne	1294c <close@plt+0x1a28>
   123d8:	bl	10e28 <__ctype_b_loc@plt>
   123dc:	sxth	r3, r7
   123e0:	lsl	r3, r3, #1
   123e4:	ldr	r2, [r0]
   123e8:	ldrh	r5, [r2, r3]
   123ec:	ldr	r3, [sp, #76]	; 0x4c
   123f0:	str	r3, [sp, #56]	; 0x38
   123f4:	lsr	r5, r5, #14
   123f8:	and	r5, r5, #1
   123fc:	ldr	r3, [sp, #24]
   12400:	eor	fp, r5, #1
   12404:	and	fp, fp, r3
   12408:	ands	fp, fp, #255	; 0xff
   1240c:	beq	12794 <close@plt+0x1870>
   12410:	mov	r5, #0
   12414:	b	129f8 <close@plt+0x1ad4>
   12418:	cmp	r7, #11
   1241c:	beq	12864 <close@plt+0x1940>
   12420:	bcc	12900 <close@plt+0x19dc>
   12424:	cmp	r7, #12
   12428:	beq	12910 <close@plt+0x19ec>
   1242c:	cmp	r7, #13
   12430:	moveq	r3, #114	; 0x72
   12434:	bne	123cc <close@plt+0x14a8>
   12438:	cmp	sl, #2
   1243c:	movne	r2, #0
   12440:	andeq	r2, r6, #1
   12444:	cmp	r2, #0
   12448:	beq	125c8 <close@plt+0x16a4>
   1244c:	mov	sl, #2
   12450:	b	12320 <close@plt+0x13fc>
   12454:	cmp	r7, #37	; 0x25
   12458:	beq	12550 <close@plt+0x162c>
   1245c:	bhi	12470 <close@plt+0x154c>
   12460:	cmp	r7, #35	; 0x23
   12464:	beq	1259c <close@plt+0x1678>
   12468:	mov	r5, #0
   1246c:	b	125ac <close@plt+0x1688>
   12470:	cmp	r7, #39	; 0x27
   12474:	bne	12468 <close@plt+0x1544>
   12478:	cmp	sl, #2
   1247c:	ldrne	r5, [sp, #52]	; 0x34
   12480:	movne	r3, r5
   12484:	strne	r3, [sp, #68]	; 0x44
   12488:	bne	12554 <close@plt+0x1630>
   1248c:	cmp	r6, #0
   12490:	bne	12320 <close@plt+0x13fc>
   12494:	ldr	r2, [sp, #60]	; 0x3c
   12498:	adds	r3, r9, #0
   1249c:	movne	r3, #1
   124a0:	cmp	r2, #0
   124a4:	movne	r3, #0
   124a8:	cmp	r3, #0
   124ac:	strne	r9, [sp, #60]	; 0x3c
   124b0:	movne	r9, #0
   124b4:	bne	124c4 <close@plt+0x15a0>
   124b8:	cmp	r9, r4
   124bc:	movhi	r3, #39	; 0x27
   124c0:	strbhi	r3, [r8, r4]
   124c4:	add	r3, r4, #1
   124c8:	cmp	r3, r9
   124cc:	movcc	r2, #92	; 0x5c
   124d0:	strbcc	r2, [r8, r3]
   124d4:	add	r3, r4, #2
   124d8:	cmp	r3, r9
   124dc:	ldr	r5, [sp, #52]	; 0x34
   124e0:	movcc	r2, #39	; 0x27
   124e4:	strbcc	r2, [r8, r3]
   124e8:	add	r4, r4, #3
   124ec:	mov	fp, r6
   124f0:	str	r5, [sp, #68]	; 0x44
   124f4:	str	r6, [sp, #48]	; 0x30
   124f8:	b	12794 <close@plt+0x1870>
   124fc:	cmp	r7, #94	; 0x5e
   12500:	beq	12468 <close@plt+0x1544>
   12504:	bhi	1255c <close@plt+0x1638>
   12508:	cmp	r7, #90	; 0x5a
   1250c:	bhi	12544 <close@plt+0x1620>
   12510:	cmp	r7, #65	; 0x41
   12514:	bcs	12550 <close@plt+0x162c>
   12518:	cmp	r7, #62	; 0x3e
   1251c:	bls	12468 <close@plt+0x1544>
   12520:	cmp	r7, #63	; 0x3f
   12524:	bne	123cc <close@plt+0x14a8>
   12528:	cmp	sl, #2
   1252c:	beq	126d0 <close@plt+0x17ac>
   12530:	cmp	sl, #5
   12534:	beq	126e0 <close@plt+0x17bc>
   12538:	mov	fp, #0
   1253c:	mov	r5, fp
   12540:	b	12794 <close@plt+0x1870>
   12544:	cmp	r7, #92	; 0x5c
   12548:	beq	1286c <close@plt+0x1948>
   1254c:	bls	12468 <close@plt+0x1544>
   12550:	ldr	r5, [sp, #52]	; 0x34
   12554:	mov	fp, #0
   12558:	b	12794 <close@plt+0x1870>
   1255c:	cmp	r7, #122	; 0x7a
   12560:	bhi	12580 <close@plt+0x165c>
   12564:	cmp	r7, #97	; 0x61
   12568:	bcs	12550 <close@plt+0x162c>
   1256c:	cmp	r7, #95	; 0x5f
   12570:	beq	12550 <close@plt+0x162c>
   12574:	cmp	r7, #96	; 0x60
   12578:	bne	123cc <close@plt+0x14a8>
   1257c:	b	12468 <close@plt+0x1544>
   12580:	cmp	r7, #124	; 0x7c
   12584:	beq	12468 <close@plt+0x1544>
   12588:	bcc	12918 <close@plt+0x19f4>
   1258c:	cmp	r7, #125	; 0x7d
   12590:	beq	12918 <close@plt+0x19f4>
   12594:	cmp	r7, #126	; 0x7e
   12598:	bne	123cc <close@plt+0x14a8>
   1259c:	ldr	r3, [sp, #28]
   125a0:	cmp	r3, #0
   125a4:	bne	126d8 <close@plt+0x17b4>
   125a8:	ldr	r5, [sp, #52]	; 0x34
   125ac:	cmp	sl, #2
   125b0:	movne	fp, #0
   125b4:	andeq	fp, r6, #1
   125b8:	cmp	fp, #0
   125bc:	beq	12794 <close@plt+0x1870>
   125c0:	b	1244c <close@plt+0x1528>
   125c4:	mov	r3, #98	; 0x62
   125c8:	ldr	r2, [sp, #24]
   125cc:	cmp	r2, #0
   125d0:	beq	126d8 <close@plt+0x17b4>
   125d4:	mov	r7, r3
   125d8:	mov	r5, #0
   125dc:	b	127ec <close@plt+0x18c8>
   125e0:	ldr	r3, [sp, #24]
   125e4:	cmp	r3, #0
   125e8:	beq	126b4 <close@plt+0x1790>
   125ec:	cmp	r6, #0
   125f0:	bne	1231c <close@plt+0x13f8>
   125f4:	ldr	r3, [sp, #48]	; 0x30
   125f8:	eor	r2, r3, #1
   125fc:	cmp	sl, #2
   12600:	movne	r2, #0
   12604:	andeq	r2, r2, #1
   12608:	cmp	r2, #0
   1260c:	moveq	r3, r4
   12610:	beq	12648 <close@plt+0x1724>
   12614:	cmp	r9, r4
   12618:	movhi	r3, #39	; 0x27
   1261c:	strbhi	r3, [r8, r4]
   12620:	add	r3, r4, #1
   12624:	cmp	r9, r3
   12628:	movhi	r1, #36	; 0x24
   1262c:	strbhi	r1, [r8, r3]
   12630:	add	r3, r4, #2
   12634:	cmp	r9, r3
   12638:	movhi	r1, #39	; 0x27
   1263c:	strbhi	r1, [r8, r3]
   12640:	add	r3, r4, #3
   12644:	str	r2, [sp, #48]	; 0x30
   12648:	cmp	r9, r3
   1264c:	movhi	r2, #92	; 0x5c
   12650:	strbhi	r2, [r8, r3]
   12654:	cmp	fp, #0
   12658:	add	r4, r3, #1
   1265c:	beq	12bec <close@plt+0x1cc8>
   12660:	ldr	r2, [sp, #28]
   12664:	ldr	r1, [sp, #36]	; 0x24
   12668:	add	r2, r2, #1
   1266c:	cmp	r1, r2
   12670:	bls	126ac <close@plt+0x1788>
   12674:	ldr	r1, [sp, #44]	; 0x2c
   12678:	mov	r7, #48	; 0x30
   1267c:	ldrb	r2, [r1, r2]
   12680:	sub	r2, r2, #48	; 0x30
   12684:	cmp	r2, #9
   12688:	movhi	r5, r6
   1268c:	bhi	12794 <close@plt+0x1870>
   12690:	cmp	r9, r4
   12694:	add	r2, r3, #2
   12698:	strbhi	r7, [r8, r4]
   1269c:	cmp	r9, r2
   126a0:	add	r4, r3, #3
   126a4:	movhi	r1, #48	; 0x30
   126a8:	strbhi	r1, [r8, r2]
   126ac:	mov	r5, r6
   126b0:	b	12bf4 <close@plt+0x1cd0>
   126b4:	ldr	r3, [sp, #148]	; 0x94
   126b8:	tst	r3, #1
   126bc:	ldreq	r5, [sp, #24]
   126c0:	beq	12c00 <close@plt+0x1cdc>
   126c4:	ldr	r3, [sp, #28]
   126c8:	add	r3, r3, #1
   126cc:	b	1206c <close@plt+0x1148>
   126d0:	cmp	r6, #0
   126d4:	bne	12320 <close@plt+0x13fc>
   126d8:	mov	r5, #0
   126dc:	b	12554 <close@plt+0x1630>
   126e0:	ldr	r3, [sp, #148]	; 0x94
   126e4:	tst	r3, #4
   126e8:	beq	126d8 <close@plt+0x17b4>
   126ec:	ldr	r3, [sp, #28]
   126f0:	add	r2, r3, #2
   126f4:	ldr	r3, [sp, #36]	; 0x24
   126f8:	cmp	r3, r2
   126fc:	bls	126d8 <close@plt+0x17b4>
   12700:	ldr	r3, [sp, #44]	; 0x2c
   12704:	ldr	r1, [sp, #28]
   12708:	add	r3, r3, r1
   1270c:	ldrb	r0, [r3, #1]
   12710:	cmp	r0, #63	; 0x3f
   12714:	bne	126d8 <close@plt+0x17b4>
   12718:	ldr	r3, [sp, #44]	; 0x2c
   1271c:	ldrb	r1, [r3, r2]
   12720:	sub	r3, r1, #33	; 0x21
   12724:	uxtb	r3, r3
   12728:	cmp	r3, #29
   1272c:	bhi	12bfc <close@plt+0x1cd8>
   12730:	mov	ip, #1
   12734:	ldr	r5, [pc, #1428]	; 12cd0 <close@plt+0x1dac>
   12738:	ands	r5, r5, ip, lsl r3
   1273c:	beq	12554 <close@plt+0x1630>
   12740:	cmp	r6, #0
   12744:	bne	12320 <close@plt+0x13fc>
   12748:	add	r3, r4, #1
   1274c:	cmp	r9, r4
   12750:	strbhi	r0, [r8, r4]
   12754:	cmp	r9, r3
   12758:	movhi	r0, #34	; 0x22
   1275c:	strbhi	r0, [r8, r3]
   12760:	add	r3, r4, #2
   12764:	cmp	r9, r3
   12768:	movhi	r0, #34	; 0x22
   1276c:	strbhi	r0, [r8, r3]
   12770:	add	r3, r4, #3
   12774:	cmp	r9, r3
   12778:	add	r4, r4, #4
   1277c:	mov	r5, r6
   12780:	mov	fp, r6
   12784:	mov	r7, r1
   12788:	movhi	r0, #63	; 0x3f
   1278c:	strbhi	r0, [r8, r3]
   12790:	str	r2, [sp, #28]
   12794:	ldr	r3, [sp, #24]
   12798:	eor	r3, r3, #1
   1279c:	cmp	sl, #2
   127a0:	orreq	r3, r3, #1
   127a4:	eor	r3, r3, #1
   127a8:	orr	r3, r6, r3
   127ac:	tst	r3, #255	; 0xff
   127b0:	beq	127e0 <close@plt+0x18bc>
   127b4:	ldr	r3, [sp, #152]	; 0x98
   127b8:	cmp	r3, #0
   127bc:	beq	127e0 <close@plt+0x18bc>
   127c0:	lsr	r2, r7, #5
   127c4:	ldr	r1, [sp, #152]	; 0x98
   127c8:	uxtb	r2, r2
   127cc:	and	r3, r7, #31
   127d0:	ldr	r2, [r1, r2, lsl #2]
   127d4:	lsr	r3, r2, r3
   127d8:	tst	r3, #1
   127dc:	bne	127ec <close@plt+0x18c8>
   127e0:	ldr	r3, [sp, #64]	; 0x40
   127e4:	cmp	r3, #0
   127e8:	beq	12884 <close@plt+0x1960>
   127ec:	cmp	r6, #0
   127f0:	bne	12320 <close@plt+0x13fc>
   127f4:	ldr	r3, [sp, #48]	; 0x30
   127f8:	eor	r3, r3, #1
   127fc:	cmp	sl, #2
   12800:	movne	r3, #0
   12804:	andeq	r3, r3, #1
   12808:	cmp	r3, #0
   1280c:	beq	12844 <close@plt+0x1920>
   12810:	cmp	r9, r4
   12814:	movhi	r2, #39	; 0x27
   12818:	strbhi	r2, [r8, r4]
   1281c:	add	r2, r4, #1
   12820:	cmp	r9, r2
   12824:	movhi	r1, #36	; 0x24
   12828:	strbhi	r1, [r8, r2]
   1282c:	add	r2, r4, #2
   12830:	cmp	r9, r2
   12834:	add	r4, r4, #3
   12838:	movhi	r1, #39	; 0x27
   1283c:	strbhi	r1, [r8, r2]
   12840:	str	r3, [sp, #48]	; 0x30
   12844:	cmp	r9, r4
   12848:	movhi	r3, #92	; 0x5c
   1284c:	strbhi	r3, [r8, r4]
   12850:	ldr	fp, [sp, #52]	; 0x34
   12854:	add	r4, r4, #1
   12858:	b	12884 <close@plt+0x1960>
   1285c:	mov	r3, #116	; 0x74
   12860:	b	12438 <close@plt+0x1514>
   12864:	mov	r3, #118	; 0x76
   12868:	b	125c8 <close@plt+0x16a4>
   1286c:	cmp	sl, #2
   12870:	bne	128e0 <close@plt+0x19bc>
   12874:	cmp	r6, #0
   12878:	bne	12320 <close@plt+0x13fc>
   1287c:	mov	r5, r6
   12880:	mov	fp, r6
   12884:	ldr	r3, [sp, #48]	; 0x30
   12888:	eor	fp, fp, #1
   1288c:	and	fp, fp, r3
   12890:	tst	fp, #255	; 0xff
   12894:	beq	128c0 <close@plt+0x199c>
   12898:	cmp	r9, r4
   1289c:	movhi	r3, #39	; 0x27
   128a0:	strbhi	r3, [r8, r4]
   128a4:	add	r3, r4, #1
   128a8:	cmp	r9, r3
   128ac:	movhi	r2, #39	; 0x27
   128b0:	add	r4, r4, #2
   128b4:	strbhi	r2, [r8, r3]
   128b8:	mov	r3, #0
   128bc:	str	r3, [sp, #48]	; 0x30
   128c0:	cmp	r9, r4
   128c4:	strbhi	r7, [r8, r4]
   128c8:	ldr	r3, [sp, #72]	; 0x48
   128cc:	cmp	r5, #0
   128d0:	moveq	r3, #0
   128d4:	add	r4, r4, #1
   128d8:	str	r3, [sp, #72]	; 0x48
   128dc:	b	126c4 <close@plt+0x17a0>
   128e0:	ldr	r3, [sp, #24]
   128e4:	and	r3, r3, r6
   128e8:	tst	r5, r3
   128ec:	moveq	r3, r7
   128f0:	beq	12438 <close@plt+0x1514>
   128f4:	mov	fp, #0
   128f8:	mov	r5, fp
   128fc:	b	12884 <close@plt+0x1960>
   12900:	mov	r3, #110	; 0x6e
   12904:	b	12438 <close@plt+0x1514>
   12908:	mov	r3, #97	; 0x61
   1290c:	b	125c8 <close@plt+0x16a4>
   12910:	mov	r3, #102	; 0x66
   12914:	b	125c8 <close@plt+0x16a4>
   12918:	ldr	r3, [sp, #36]	; 0x24
   1291c:	cmn	r3, #1
   12920:	bne	12940 <close@plt+0x1a1c>
   12924:	ldr	r3, [sp, #44]	; 0x2c
   12928:	ldrb	r3, [r3, #1]
   1292c:	adds	r3, r3, #0
   12930:	movne	r3, #1
   12934:	cmp	r3, #0
   12938:	bne	126d8 <close@plt+0x17b4>
   1293c:	b	1259c <close@plt+0x1678>
   12940:	ldr	r3, [sp, #36]	; 0x24
   12944:	subs	r3, r3, #1
   12948:	b	12930 <close@plt+0x1a0c>
   1294c:	mov	r3, #0
   12950:	str	r3, [sp, #96]	; 0x60
   12954:	str	r3, [sp, #100]	; 0x64
   12958:	ldr	r3, [sp, #36]	; 0x24
   1295c:	cmn	r3, #1
   12960:	bne	12970 <close@plt+0x1a4c>
   12964:	ldr	r0, [sp, #44]	; 0x2c
   12968:	bl	10e40 <strlen@plt>
   1296c:	str	r0, [sp, #36]	; 0x24
   12970:	ldr	r5, [sp, #52]	; 0x34
   12974:	mov	r3, #0
   12978:	str	r3, [sp, #56]	; 0x38
   1297c:	ldr	r3, [sp, #28]
   12980:	ldr	r2, [sp, #56]	; 0x38
   12984:	ldr	r1, [sp, #36]	; 0x24
   12988:	add	r2, r3, r2
   1298c:	ldr	r3, [sp, #44]	; 0x2c
   12990:	add	r0, sp, #92	; 0x5c
   12994:	add	fp, r3, r2
   12998:	sub	r2, r1, r2
   1299c:	add	r3, sp, #96	; 0x60
   129a0:	mov	r1, fp
   129a4:	bl	14170 <close@plt+0x324c>
   129a8:	subs	r2, r0, #0
   129ac:	beq	129ec <close@plt+0x1ac8>
   129b0:	cmn	r2, #1
   129b4:	beq	12bc4 <close@plt+0x1ca0>
   129b8:	cmn	r2, #2
   129bc:	bne	12b34 <close@plt+0x1c10>
   129c0:	ldr	r2, [sp, #56]	; 0x38
   129c4:	ldr	r3, [sp, #28]
   129c8:	add	r3, r3, r2
   129cc:	ldr	r2, [sp, #36]	; 0x24
   129d0:	cmp	r2, r3
   129d4:	bls	12bc4 <close@plt+0x1ca0>
   129d8:	ldr	r3, [sp, #80]	; 0x50
   129dc:	ldr	r2, [sp, #56]	; 0x38
   129e0:	ldrb	r5, [r3, r2]
   129e4:	cmp	r5, #0
   129e8:	bne	12b24 <close@plt+0x1c00>
   129ec:	ldr	r3, [sp, #56]	; 0x38
   129f0:	cmp	r3, #1
   129f4:	bls	123fc <close@plt+0x14d8>
   129f8:	ldr	r2, [sp, #56]	; 0x38
   129fc:	ldr	r3, [sp, #28]
   12a00:	mov	fp, #0
   12a04:	add	r3, r3, r2
   12a08:	ldr	r2, [sp, #24]
   12a0c:	str	r3, [sp, #52]	; 0x34
   12a10:	eor	r3, r5, #1
   12a14:	and	r3, r3, r2
   12a18:	mov	ip, #92	; 0x5c
   12a1c:	uxtb	r3, r3
   12a20:	mov	r2, #39	; 0x27
   12a24:	cmp	r3, #0
   12a28:	beq	12bcc <close@plt+0x1ca8>
   12a2c:	cmp	r6, #0
   12a30:	bne	1231c <close@plt+0x13f8>
   12a34:	ldr	r1, [sp, #48]	; 0x30
   12a38:	eor	r1, r1, #1
   12a3c:	cmp	sl, #2
   12a40:	movne	r1, #0
   12a44:	andeq	r1, r1, #1
   12a48:	cmp	r1, #0
   12a4c:	beq	12a7c <close@plt+0x1b58>
   12a50:	add	r0, r4, #1
   12a54:	cmp	r9, r4
   12a58:	strbhi	r2, [r8, r4]
   12a5c:	cmp	r9, r0
   12a60:	movhi	lr, #36	; 0x24
   12a64:	strbhi	lr, [r8, r0]
   12a68:	add	r0, r4, #2
   12a6c:	add	r4, r4, #3
   12a70:	cmp	r9, r0
   12a74:	strbhi	r2, [r8, r0]
   12a78:	str	r1, [sp, #48]	; 0x30
   12a7c:	add	r0, r4, #1
   12a80:	cmp	r9, r4
   12a84:	strbhi	ip, [r8, r4]
   12a88:	cmp	r9, r0
   12a8c:	lsrhi	r1, r7, #6
   12a90:	addhi	r1, r1, #48	; 0x30
   12a94:	strbhi	r1, [r8, r0]
   12a98:	add	r0, r4, #2
   12a9c:	cmp	r9, r0
   12aa0:	lsrhi	r1, r7, #3
   12aa4:	and	r7, r7, #7
   12aa8:	andhi	r1, r1, #7
   12aac:	add	r4, r4, #3
   12ab0:	add	r7, r7, #48	; 0x30
   12ab4:	mov	fp, r3
   12ab8:	addhi	r1, r1, #48	; 0x30
   12abc:	strbhi	r1, [r8, r0]
   12ac0:	ldr	r1, [sp, #28]
   12ac4:	ldr	r0, [sp, #52]	; 0x34
   12ac8:	add	r1, r1, #1
   12acc:	cmp	r0, r1
   12ad0:	bls	12884 <close@plt+0x1960>
   12ad4:	ldr	lr, [sp, #48]	; 0x30
   12ad8:	eor	r0, fp, #1
   12adc:	and	r0, r0, lr
   12ae0:	tst	r0, #255	; 0xff
   12ae4:	beq	12b08 <close@plt+0x1be4>
   12ae8:	add	r0, r4, #1
   12aec:	cmp	r9, r4
   12af0:	strbhi	r2, [r8, r4]
   12af4:	cmp	r9, r0
   12af8:	add	r4, r4, #2
   12afc:	strbhi	r2, [r8, r0]
   12b00:	mov	r0, #0
   12b04:	str	r0, [sp, #48]	; 0x30
   12b08:	ldr	r0, [sp, #44]	; 0x2c
   12b0c:	cmp	r9, r4
   12b10:	strbhi	r7, [r8, r4]
   12b14:	str	r1, [sp, #28]
   12b18:	add	r4, r4, #1
   12b1c:	ldrb	r7, [r0, r1]
   12b20:	b	12a24 <close@plt+0x1b00>
   12b24:	ldr	r3, [sp, #56]	; 0x38
   12b28:	add	r3, r3, #1
   12b2c:	str	r3, [sp, #56]	; 0x38
   12b30:	b	129c0 <close@plt+0x1a9c>
   12b34:	cmp	sl, #2
   12b38:	movne	r3, #0
   12b3c:	andeq	r3, r6, #1
   12b40:	cmp	r3, #0
   12b44:	movne	r1, #1
   12b48:	bne	12ba4 <close@plt+0x1c80>
   12b4c:	ldr	r0, [sp, #92]	; 0x5c
   12b50:	str	r2, [sp, #84]	; 0x54
   12b54:	bl	10d74 <iswprint@plt>
   12b58:	ldr	r3, [sp, #56]	; 0x38
   12b5c:	ldr	r2, [sp, #84]	; 0x54
   12b60:	add	r3, r3, r2
   12b64:	str	r3, [sp, #56]	; 0x38
   12b68:	cmp	r0, #0
   12b6c:	add	r0, sp, #96	; 0x60
   12b70:	moveq	r5, #0
   12b74:	bl	10d14 <mbsinit@plt>
   12b78:	cmp	r0, #0
   12b7c:	beq	1297c <close@plt+0x1a58>
   12b80:	b	129ec <close@plt+0x1ac8>
   12b84:	ldrb	r3, [fp, r1]
   12b88:	cmp	r3, #94	; 0x5e
   12b8c:	beq	1244c <close@plt+0x1528>
   12b90:	bhi	12bb0 <close@plt+0x1c8c>
   12b94:	sub	r3, r3, #91	; 0x5b
   12b98:	cmp	r3, #1
   12b9c:	bls	1244c <close@plt+0x1528>
   12ba0:	add	r1, r1, #1
   12ba4:	cmp	r1, r2
   12ba8:	bne	12b84 <close@plt+0x1c60>
   12bac:	b	12b4c <close@plt+0x1c28>
   12bb0:	cmp	r3, #96	; 0x60
   12bb4:	beq	1244c <close@plt+0x1528>
   12bb8:	cmp	r3, #124	; 0x7c
   12bbc:	bne	12ba0 <close@plt+0x1c7c>
   12bc0:	b	1244c <close@plt+0x1528>
   12bc4:	mov	r5, #0
   12bc8:	b	129ec <close@plt+0x1ac8>
   12bcc:	ldr	r1, [sp, #64]	; 0x40
   12bd0:	cmp	r1, #0
   12bd4:	beq	12ac0 <close@plt+0x1b9c>
   12bd8:	cmp	r9, r4
   12bdc:	strbhi	ip, [r8, r4]
   12be0:	str	r3, [sp, #64]	; 0x40
   12be4:	add	r4, r4, #1
   12be8:	b	12ac0 <close@plt+0x1b9c>
   12bec:	mov	r5, fp
   12bf0:	ldr	fp, [sp, #24]
   12bf4:	mov	r7, #48	; 0x30
   12bf8:	b	12794 <close@plt+0x1870>
   12bfc:	mov	r5, #0
   12c00:	mov	fp, r5
   12c04:	b	12794 <close@plt+0x1870>
   12c08:	ldr	r3, [sp, #36]	; 0x24
   12c0c:	ldr	r2, [sp, #28]
   12c10:	subs	r3, r3, r2
   12c14:	movne	r3, #1
   12c18:	b	12090 <close@plt+0x116c>
   12c1c:	ldr	r3, [sp, #60]	; 0x3c
   12c20:	clz	r7, r9
   12c24:	cmp	r3, #0
   12c28:	lsr	r7, r7, #5
   12c2c:	moveq	r7, #0
   12c30:	cmp	r7, #0
   12c34:	mov	r5, r3
   12c38:	bne	11ff0 <close@plt+0x10cc>
   12c3c:	ldr	r3, [sp, #68]	; 0x44
   12c40:	ldr	r2, [sp, #40]	; 0x28
   12c44:	cmp	r2, #0
   12c48:	moveq	r3, #0
   12c4c:	andne	r3, r3, #1
   12c50:	cmp	r3, #0
   12c54:	movne	r3, r2
   12c58:	subne	r2, r3, #1
   12c5c:	bne	12c8c <close@plt+0x1d68>
   12c60:	cmp	r9, r4
   12c64:	movhi	r3, #0
   12c68:	strbhi	r3, [r8, r4]
   12c6c:	mov	r0, r4
   12c70:	add	sp, sp, #108	; 0x6c
   12c74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c78:	mov	r3, r2
   12c7c:	b	12c40 <close@plt+0x1d1c>
   12c80:	cmp	r9, r4
   12c84:	strbhi	r3, [r8, r4]
   12c88:	add	r4, r4, #1
   12c8c:	ldrb	r3, [r2, #1]!
   12c90:	cmp	r3, #0
   12c94:	bne	12c80 <close@plt+0x1d5c>
   12c98:	b	12c60 <close@plt+0x1d3c>
   12c9c:	ldr	r3, [pc, #32]	; 12cc4 <close@plt+0x1da0>
   12ca0:	mov	r6, #1
   12ca4:	str	r6, [sp, #24]
   12ca8:	str	r6, [sp, #32]
   12cac:	str	r3, [sp, #40]	; 0x28
   12cb0:	mov	r4, #0
   12cb4:	mov	sl, #5
   12cb8:	b	12060 <close@plt+0x113c>
   12cbc:	mov	r6, #1
   12cc0:	b	12254 <close@plt+0x1330>
   12cc4:	andeq	r4, r1, fp, asr lr
   12cc8:	andeq	r4, r1, pc, asr lr
   12ccc:	andeq	r4, r1, sp, asr lr
   12cd0:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12cd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12cd8:	sub	sp, sp, #52	; 0x34
   12cdc:	mov	r6, r0
   12ce0:	mov	r5, r3
   12ce4:	mov	r8, r1
   12ce8:	mov	r9, r2
   12cec:	bl	10e4c <__errno_location@plt>
   12cf0:	ldr	r7, [pc, #380]	; 12e74 <close@plt+0x1f50>
   12cf4:	cmn	r6, #-2147483647	; 0x80000001
   12cf8:	ldr	r4, [r7]
   12cfc:	ldr	r3, [r0]
   12d00:	str	r0, [sp, #24]
   12d04:	str	r3, [sp, #32]
   12d08:	movne	r3, #0
   12d0c:	moveq	r3, #1
   12d10:	orrs	r3, r3, r6, lsr #31
   12d14:	beq	12d1c <close@plt+0x1df8>
   12d18:	bl	10f18 <abort@plt>
   12d1c:	ldr	r2, [r7, #4]
   12d20:	cmp	r6, r2
   12d24:	blt	12d94 <close@plt+0x1e70>
   12d28:	add	r1, sp, #48	; 0x30
   12d2c:	add	sl, r7, #8
   12d30:	str	r2, [r1, #-4]!
   12d34:	cmp	r4, sl
   12d38:	mov	r3, #8
   12d3c:	sub	r2, r6, r2
   12d40:	movne	r0, r4
   12d44:	str	r3, [sp]
   12d48:	add	r2, r2, #1
   12d4c:	mvn	r3, #-2147483648	; 0x80000000
   12d50:	moveq	r0, #0
   12d54:	bl	13a68 <close@plt+0x2b44>
   12d58:	cmp	r4, sl
   12d5c:	ldr	r2, [sp, #44]	; 0x2c
   12d60:	mov	fp, r0
   12d64:	str	r0, [r7]
   12d68:	ldmeq	r4, {r0, r1}
   12d6c:	mov	r4, fp
   12d70:	stmeq	fp, {r0, r1}
   12d74:	ldr	r0, [r7, #4]
   12d78:	mov	r1, #0
   12d7c:	sub	r2, r2, r0
   12d80:	add	r0, fp, r0, lsl #3
   12d84:	lsl	r2, r2, #3
   12d88:	bl	10e64 <memset@plt>
   12d8c:	ldr	r3, [sp, #44]	; 0x2c
   12d90:	str	r3, [r7, #4]
   12d94:	ldr	r3, [r5, #4]
   12d98:	add	sl, r4, r6, lsl #3
   12d9c:	orr	r3, r3, #1
   12da0:	str	r3, [sp, #28]
   12da4:	add	r3, r5, #8
   12da8:	str	r3, [sp, #36]	; 0x24
   12dac:	ldr	r3, [r5, #44]	; 0x2c
   12db0:	ldr	fp, [r4, r6, lsl #3]
   12db4:	ldr	r7, [sl, #4]
   12db8:	str	r3, [sp, #16]
   12dbc:	ldr	r3, [r5, #40]	; 0x28
   12dc0:	mov	r2, r8
   12dc4:	str	r3, [sp, #12]
   12dc8:	add	r3, r5, #8
   12dcc:	str	r3, [sp, #8]
   12dd0:	ldr	r3, [sp, #28]
   12dd4:	mov	r1, fp
   12dd8:	str	r3, [sp, #4]
   12ddc:	ldr	r3, [r5]
   12de0:	mov	r0, r7
   12de4:	str	r3, [sp]
   12de8:	mov	r3, r9
   12dec:	bl	11fa0 <close@plt+0x107c>
   12df0:	cmp	fp, r0
   12df4:	bhi	12e5c <close@plt+0x1f38>
   12df8:	ldr	r3, [pc, #120]	; 12e78 <close@plt+0x1f54>
   12dfc:	add	fp, r0, #1
   12e00:	cmp	r7, r3
   12e04:	str	fp, [r4, r6, lsl #3]
   12e08:	beq	12e14 <close@plt+0x1ef0>
   12e0c:	mov	r0, r7
   12e10:	bl	11bdc <close@plt+0xcb8>
   12e14:	mov	r0, fp
   12e18:	bl	13920 <close@plt+0x29fc>
   12e1c:	ldr	r3, [r5, #44]	; 0x2c
   12e20:	mov	r2, r8
   12e24:	mov	r1, fp
   12e28:	str	r0, [sl, #4]
   12e2c:	str	r3, [sp, #16]
   12e30:	ldr	r3, [r5, #40]	; 0x28
   12e34:	mov	r7, r0
   12e38:	str	r3, [sp, #12]
   12e3c:	add	r3, r5, #8
   12e40:	str	r3, [sp, #8]
   12e44:	ldr	r3, [sp, #28]
   12e48:	str	r3, [sp, #4]
   12e4c:	ldr	r3, [r5]
   12e50:	str	r3, [sp]
   12e54:	mov	r3, r9
   12e58:	bl	11fa0 <close@plt+0x107c>
   12e5c:	ldr	r3, [sp, #24]
   12e60:	ldr	r2, [sp, #32]
   12e64:	mov	r0, r7
   12e68:	str	r2, [r3]
   12e6c:	add	sp, sp, #52	; 0x34
   12e70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e74:	strdeq	r6, [r2], -r8
   12e78:	andeq	r6, r2, r8, ror #2
   12e7c:	push	{r4, r5, r6, lr}
   12e80:	mov	r5, r0
   12e84:	bl	10e4c <__errno_location@plt>
   12e88:	cmp	r5, #0
   12e8c:	mov	r1, #48	; 0x30
   12e90:	ldr	r6, [r0]
   12e94:	mov	r4, r0
   12e98:	ldr	r0, [pc, #12]	; 12eac <close@plt+0x1f88>
   12e9c:	movne	r0, r5
   12ea0:	bl	13cfc <close@plt+0x2dd8>
   12ea4:	str	r6, [r4]
   12ea8:	pop	{r4, r5, r6, pc}
   12eac:	andeq	r6, r2, r8, ror #4
   12eb0:	ldr	r3, [pc, #12]	; 12ec4 <close@plt+0x1fa0>
   12eb4:	cmp	r0, #0
   12eb8:	moveq	r0, r3
   12ebc:	ldr	r0, [r0]
   12ec0:	bx	lr
   12ec4:	andeq	r6, r2, r8, ror #4
   12ec8:	ldr	r3, [pc, #12]	; 12edc <close@plt+0x1fb8>
   12ecc:	cmp	r0, #0
   12ed0:	moveq	r0, r3
   12ed4:	str	r1, [r0]
   12ed8:	bx	lr
   12edc:	andeq	r6, r2, r8, ror #4
   12ee0:	ldr	r3, [pc, #52]	; 12f1c <close@plt+0x1ff8>
   12ee4:	cmp	r0, #0
   12ee8:	moveq	r0, r3
   12eec:	add	r3, r0, #8
   12ef0:	push	{lr}		; (str lr, [sp, #-4]!)
   12ef4:	lsr	lr, r1, #5
   12ef8:	and	r1, r1, #31
   12efc:	ldr	ip, [r3, lr, lsl #2]
   12f00:	lsr	r0, ip, r1
   12f04:	eor	r2, r2, r0
   12f08:	and	r2, r2, #1
   12f0c:	and	r0, r0, #1
   12f10:	eor	r1, ip, r2, lsl r1
   12f14:	str	r1, [r3, lr, lsl #2]
   12f18:	pop	{pc}		; (ldr pc, [sp], #4)
   12f1c:	andeq	r6, r2, r8, ror #4
   12f20:	ldr	r3, [pc, #16]	; 12f38 <close@plt+0x2014>
   12f24:	cmp	r0, #0
   12f28:	movne	r3, r0
   12f2c:	ldr	r0, [r3, #4]
   12f30:	str	r1, [r3, #4]
   12f34:	bx	lr
   12f38:	andeq	r6, r2, r8, ror #4
   12f3c:	ldr	r3, [pc, #44]	; 12f70 <close@plt+0x204c>
   12f40:	cmp	r0, #0
   12f44:	moveq	r0, r3
   12f48:	mov	r3, #10
   12f4c:	cmp	r2, #0
   12f50:	cmpne	r1, #0
   12f54:	str	r3, [r0]
   12f58:	bne	12f64 <close@plt+0x2040>
   12f5c:	push	{r4, lr}
   12f60:	bl	10f18 <abort@plt>
   12f64:	str	r1, [r0, #40]	; 0x28
   12f68:	str	r2, [r0, #44]	; 0x2c
   12f6c:	bx	lr
   12f70:	andeq	r6, r2, r8, ror #4
   12f74:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12f78:	sub	sp, sp, #24
   12f7c:	mov	sl, r3
   12f80:	ldr	r4, [sp, #56]	; 0x38
   12f84:	ldr	r3, [pc, #100]	; 12ff0 <close@plt+0x20cc>
   12f88:	cmp	r4, #0
   12f8c:	moveq	r4, r3
   12f90:	mov	r7, r0
   12f94:	mov	r8, r1
   12f98:	mov	r9, r2
   12f9c:	bl	10e4c <__errno_location@plt>
   12fa0:	ldr	r3, [r4, #44]	; 0x2c
   12fa4:	mov	r2, r9
   12fa8:	mov	r1, r8
   12fac:	ldr	r6, [r0]
   12fb0:	str	r3, [sp, #16]
   12fb4:	ldr	r3, [r4, #40]	; 0x28
   12fb8:	mov	r5, r0
   12fbc:	str	r3, [sp, #12]
   12fc0:	add	r3, r4, #8
   12fc4:	str	r3, [sp, #8]
   12fc8:	ldr	r3, [r4, #4]
   12fcc:	mov	r0, r7
   12fd0:	str	r3, [sp, #4]
   12fd4:	ldr	r3, [r4]
   12fd8:	str	r3, [sp]
   12fdc:	mov	r3, sl
   12fe0:	bl	11fa0 <close@plt+0x107c>
   12fe4:	str	r6, [r5]
   12fe8:	add	sp, sp, #24
   12fec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12ff0:	andeq	r6, r2, r8, ror #4
   12ff4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ff8:	cmp	r3, #0
   12ffc:	sub	sp, sp, #44	; 0x2c
   13000:	ldr	r4, [pc, #188]	; 130c4 <close@plt+0x21a0>
   13004:	mov	r6, r2
   13008:	movne	r4, r3
   1300c:	mov	sl, r1
   13010:	mov	r9, r0
   13014:	bl	10e4c <__errno_location@plt>
   13018:	ldr	r5, [r4, #4]
   1301c:	add	fp, r4, #8
   13020:	cmp	r6, #0
   13024:	orreq	r5, r5, #1
   13028:	mov	r1, #0
   1302c:	mov	r2, r9
   13030:	ldr	r3, [r0]
   13034:	mov	r8, r0
   13038:	str	r3, [sp, #28]
   1303c:	ldr	r3, [r4, #44]	; 0x2c
   13040:	mov	r0, r1
   13044:	str	r3, [sp, #16]
   13048:	ldr	r3, [r4, #40]	; 0x28
   1304c:	stmib	sp, {r5, fp}
   13050:	str	r3, [sp, #12]
   13054:	ldr	r3, [r4]
   13058:	str	r3, [sp]
   1305c:	mov	r3, sl
   13060:	bl	11fa0 <close@plt+0x107c>
   13064:	add	r1, r0, #1
   13068:	mov	r7, r0
   1306c:	mov	r0, r1
   13070:	str	r1, [sp, #36]	; 0x24
   13074:	bl	13920 <close@plt+0x29fc>
   13078:	ldr	r3, [r4, #44]	; 0x2c
   1307c:	mov	r2, r9
   13080:	str	r3, [sp, #16]
   13084:	ldr	r3, [r4, #40]	; 0x28
   13088:	stmib	sp, {r5, fp}
   1308c:	str	r3, [sp, #12]
   13090:	ldr	r3, [r4]
   13094:	ldr	r1, [sp, #36]	; 0x24
   13098:	str	r3, [sp]
   1309c:	mov	r3, sl
   130a0:	str	r0, [sp, #32]
   130a4:	bl	11fa0 <close@plt+0x107c>
   130a8:	ldr	r3, [sp, #28]
   130ac:	cmp	r6, #0
   130b0:	str	r3, [r8]
   130b4:	ldr	r0, [sp, #32]
   130b8:	strne	r7, [r6]
   130bc:	add	sp, sp, #44	; 0x2c
   130c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130c4:	andeq	r6, r2, r8, ror #4
   130c8:	mov	r3, r2
   130cc:	mov	r2, #0
   130d0:	b	12ff4 <close@plt+0x20d0>
   130d4:	push	{r4, r5, r6, r7, r8, lr}
   130d8:	mov	r6, #1
   130dc:	ldr	r4, [pc, #104]	; 1314c <close@plt+0x2228>
   130e0:	ldr	r5, [r4]
   130e4:	add	r7, r5, #12
   130e8:	ldr	r3, [r4, #4]
   130ec:	add	r7, r7, #8
   130f0:	cmp	r6, r3
   130f4:	blt	1313c <close@plt+0x2218>
   130f8:	ldr	r0, [r5, #4]
   130fc:	ldr	r6, [pc, #76]	; 13150 <close@plt+0x222c>
   13100:	cmp	r0, r6
   13104:	beq	13118 <close@plt+0x21f4>
   13108:	bl	11bdc <close@plt+0xcb8>
   1310c:	mov	r3, #256	; 0x100
   13110:	str	r3, [r4, #8]
   13114:	str	r6, [r4, #12]
   13118:	ldr	r6, [pc, #52]	; 13154 <close@plt+0x2230>
   1311c:	cmp	r5, r6
   13120:	beq	13130 <close@plt+0x220c>
   13124:	mov	r0, r5
   13128:	bl	11bdc <close@plt+0xcb8>
   1312c:	str	r6, [r4]
   13130:	mov	r3, #1
   13134:	str	r3, [r4, #4]
   13138:	pop	{r4, r5, r6, r7, r8, pc}
   1313c:	ldr	r0, [r7, #-8]
   13140:	bl	11bdc <close@plt+0xcb8>
   13144:	add	r6, r6, #1
   13148:	b	130e8 <close@plt+0x21c4>
   1314c:	strdeq	r6, [r2], -r8
   13150:	andeq	r6, r2, r8, ror #2
   13154:	andeq	r6, r2, r0, lsl #2
   13158:	ldr	r3, [pc, #4]	; 13164 <close@plt+0x2240>
   1315c:	mvn	r2, #0
   13160:	b	12cd4 <close@plt+0x1db0>
   13164:	andeq	r6, r2, r8, ror #4
   13168:	ldr	r3, [pc]	; 13170 <close@plt+0x224c>
   1316c:	b	12cd4 <close@plt+0x1db0>
   13170:	andeq	r6, r2, r8, ror #4
   13174:	mov	r1, r0
   13178:	mov	r0, #0
   1317c:	b	13158 <close@plt+0x2234>
   13180:	mov	r2, r1
   13184:	mov	r1, r0
   13188:	mov	r0, #0
   1318c:	b	13168 <close@plt+0x2244>
   13190:	push	{r4, r5, lr}
   13194:	sub	sp, sp, #52	; 0x34
   13198:	mov	r5, r2
   1319c:	mov	r4, r0
   131a0:	mov	r0, sp
   131a4:	bl	11e5c <close@plt+0xf38>
   131a8:	mov	r3, sp
   131ac:	mvn	r2, #0
   131b0:	mov	r1, r5
   131b4:	mov	r0, r4
   131b8:	bl	12cd4 <close@plt+0x1db0>
   131bc:	add	sp, sp, #52	; 0x34
   131c0:	pop	{r4, r5, pc}
   131c4:	push	{r4, r5, r6, lr}
   131c8:	sub	sp, sp, #48	; 0x30
   131cc:	mov	r5, r2
   131d0:	mov	r6, r3
   131d4:	mov	r4, r0
   131d8:	mov	r0, sp
   131dc:	bl	11e5c <close@plt+0xf38>
   131e0:	mov	r3, sp
   131e4:	mov	r2, r6
   131e8:	mov	r1, r5
   131ec:	mov	r0, r4
   131f0:	bl	12cd4 <close@plt+0x1db0>
   131f4:	add	sp, sp, #48	; 0x30
   131f8:	pop	{r4, r5, r6, pc}
   131fc:	mov	r2, r1
   13200:	mov	r1, r0
   13204:	mov	r0, #0
   13208:	b	13190 <close@plt+0x226c>
   1320c:	mov	r3, r2
   13210:	mov	r2, r1
   13214:	mov	r1, r0
   13218:	mov	r0, #0
   1321c:	b	131c4 <close@plt+0x22a0>
   13220:	push	{r4, r5, r6, lr}
   13224:	mov	r4, r0
   13228:	ldr	lr, [pc, #80]	; 13280 <close@plt+0x235c>
   1322c:	mov	r5, r1
   13230:	mov	r6, r2
   13234:	ldm	lr!, {r0, r1, r2, r3}
   13238:	sub	sp, sp, #48	; 0x30
   1323c:	mov	ip, sp
   13240:	stmia	ip!, {r0, r1, r2, r3}
   13244:	ldm	lr!, {r0, r1, r2, r3}
   13248:	stmia	ip!, {r0, r1, r2, r3}
   1324c:	ldm	lr, {r0, r1, r2, r3}
   13250:	stm	ip, {r0, r1, r2, r3}
   13254:	mov	r1, r6
   13258:	mov	r2, #1
   1325c:	mov	r0, sp
   13260:	bl	12ee0 <close@plt+0x1fbc>
   13264:	mov	r3, sp
   13268:	mov	r2, r5
   1326c:	mov	r1, r4
   13270:	mov	r0, #0
   13274:	bl	12cd4 <close@plt+0x1db0>
   13278:	add	sp, sp, #48	; 0x30
   1327c:	pop	{r4, r5, r6, pc}
   13280:	andeq	r6, r2, r8, ror #4
   13284:	mov	r2, r1
   13288:	mvn	r1, #0
   1328c:	b	13220 <close@plt+0x22fc>
   13290:	mov	r1, #58	; 0x3a
   13294:	b	13284 <close@plt+0x2360>
   13298:	mov	r2, #58	; 0x3a
   1329c:	b	13220 <close@plt+0x22fc>
   132a0:	push	{r4, r5, lr}
   132a4:	sub	sp, sp, #100	; 0x64
   132a8:	mov	r4, r0
   132ac:	mov	r0, sp
   132b0:	mov	r5, r2
   132b4:	bl	11e5c <close@plt+0xf38>
   132b8:	mov	ip, sp
   132bc:	add	lr, sp, #48	; 0x30
   132c0:	ldm	ip!, {r0, r1, r2, r3}
   132c4:	stmia	lr!, {r0, r1, r2, r3}
   132c8:	ldm	ip!, {r0, r1, r2, r3}
   132cc:	stmia	lr!, {r0, r1, r2, r3}
   132d0:	ldm	ip, {r0, r1, r2, r3}
   132d4:	stm	lr, {r0, r1, r2, r3}
   132d8:	mov	r2, #1
   132dc:	mov	r1, #58	; 0x3a
   132e0:	add	r0, sp, #48	; 0x30
   132e4:	bl	12ee0 <close@plt+0x1fbc>
   132e8:	add	r3, sp, #48	; 0x30
   132ec:	mvn	r2, #0
   132f0:	mov	r1, r5
   132f4:	mov	r0, r4
   132f8:	bl	12cd4 <close@plt+0x1db0>
   132fc:	add	sp, sp, #100	; 0x64
   13300:	pop	{r4, r5, pc}
   13304:	push	{r4, r5, r6, r7, lr}
   13308:	mov	r4, r0
   1330c:	ldr	lr, [pc, #84]	; 13368 <close@plt+0x2444>
   13310:	mov	r6, r1
   13314:	mov	r7, r2
   13318:	mov	r5, r3
   1331c:	ldm	lr!, {r0, r1, r2, r3}
   13320:	sub	sp, sp, #52	; 0x34
   13324:	mov	ip, sp
   13328:	stmia	ip!, {r0, r1, r2, r3}
   1332c:	ldm	lr!, {r0, r1, r2, r3}
   13330:	stmia	ip!, {r0, r1, r2, r3}
   13334:	ldm	lr, {r0, r1, r2, r3}
   13338:	stm	ip, {r0, r1, r2, r3}
   1333c:	mov	r2, r7
   13340:	mov	r1, r6
   13344:	mov	r0, sp
   13348:	bl	12f3c <close@plt+0x2018>
   1334c:	mov	r3, sp
   13350:	ldr	r2, [sp, #72]	; 0x48
   13354:	mov	r1, r5
   13358:	mov	r0, r4
   1335c:	bl	12cd4 <close@plt+0x1db0>
   13360:	add	sp, sp, #52	; 0x34
   13364:	pop	{r4, r5, r6, r7, pc}
   13368:	andeq	r6, r2, r8, ror #4
   1336c:	mvn	ip, #0
   13370:	push	{r0, r1, r2, lr}
   13374:	str	ip, [sp]
   13378:	bl	13304 <close@plt+0x23e0>
   1337c:	add	sp, sp, #12
   13380:	pop	{pc}		; (ldr pc, [sp], #4)
   13384:	mov	r3, r2
   13388:	mov	r2, r1
   1338c:	mov	r1, r0
   13390:	mov	r0, #0
   13394:	b	1336c <close@plt+0x2448>
   13398:	push	{r0, r1, r2, lr}
   1339c:	str	r3, [sp]
   133a0:	mov	r3, r2
   133a4:	mov	r2, r1
   133a8:	mov	r1, r0
   133ac:	mov	r0, #0
   133b0:	bl	13304 <close@plt+0x23e0>
   133b4:	add	sp, sp, #12
   133b8:	pop	{pc}		; (ldr pc, [sp], #4)
   133bc:	ldr	r3, [pc]	; 133c4 <close@plt+0x24a0>
   133c0:	b	12cd4 <close@plt+0x1db0>
   133c4:	andeq	r6, r2, r8, lsl #2
   133c8:	mov	r2, r1
   133cc:	mov	r1, r0
   133d0:	mov	r0, #0
   133d4:	b	133bc <close@plt+0x2498>
   133d8:	mvn	r2, #0
   133dc:	b	133bc <close@plt+0x2498>
   133e0:	mov	r1, r0
   133e4:	mov	r0, #0
   133e8:	b	133d8 <close@plt+0x24b4>
   133ec:	push	{r4, r5, r6, lr}
   133f0:	sub	sp, sp, #32
   133f4:	cmp	r1, #0
   133f8:	mov	r5, r0
   133fc:	ldr	r4, [sp, #48]	; 0x30
   13400:	ldr	r6, [sp, #52]	; 0x34
   13404:	beq	134b8 <close@plt+0x2594>
   13408:	stm	sp, {r2, r3}
   1340c:	mov	r3, r1
   13410:	ldr	r2, [pc, #860]	; 13774 <close@plt+0x2850>
   13414:	mov	r1, #1
   13418:	bl	10e88 <__fprintf_chk@plt>
   1341c:	mov	r2, #5
   13420:	ldr	r1, [pc, #848]	; 13778 <close@plt+0x2854>
   13424:	mov	r0, #0
   13428:	bl	10d44 <dcgettext@plt>
   1342c:	ldr	r3, [pc, #840]	; 1377c <close@plt+0x2858>
   13430:	ldr	r2, [pc, #840]	; 13780 <close@plt+0x285c>
   13434:	str	r3, [sp]
   13438:	mov	r1, #1
   1343c:	mov	r3, r0
   13440:	mov	r0, r5
   13444:	bl	10e88 <__fprintf_chk@plt>
   13448:	mov	r1, r5
   1344c:	mov	r0, #10
   13450:	bl	10d38 <fputc_unlocked@plt>
   13454:	mov	r2, #5
   13458:	ldr	r1, [pc, #804]	; 13784 <close@plt+0x2860>
   1345c:	mov	r0, #0
   13460:	bl	10d44 <dcgettext@plt>
   13464:	mov	r1, #1
   13468:	ldr	r3, [pc, #792]	; 13788 <close@plt+0x2864>
   1346c:	mov	r2, r0
   13470:	mov	r0, r5
   13474:	bl	10e88 <__fprintf_chk@plt>
   13478:	mov	r1, r5
   1347c:	mov	r0, #10
   13480:	bl	10d38 <fputc_unlocked@plt>
   13484:	cmp	r6, #9
   13488:	ldrls	pc, [pc, r6, lsl #2]
   1348c:	b	13768 <close@plt+0x2844>
   13490:	andeq	r3, r1, r8, lsr #11
   13494:	ldrdeq	r3, [r1], -r0
   13498:	strdeq	r3, [r1], -ip
   1349c:	andeq	r3, r1, r0, lsr r5
   134a0:	andeq	r3, r1, ip, ror #10
   134a4:			; <UNDEFINED> instruction: 0x000135b0
   134a8:	strdeq	r3, [r1], -r8
   134ac:	andeq	r3, r1, r8, asr #12
   134b0:	andeq	r3, r1, r0, lsr #13
   134b4:	andeq	r3, r1, r0, lsl #14
   134b8:	str	r3, [sp]
   134bc:	mov	r1, #1
   134c0:	mov	r3, r2
   134c4:	ldr	r2, [pc, #704]	; 1378c <close@plt+0x2868>
   134c8:	bl	10e88 <__fprintf_chk@plt>
   134cc:	b	1341c <close@plt+0x24f8>
   134d0:	mov	r2, #5
   134d4:	ldr	r1, [pc, #692]	; 13790 <close@plt+0x286c>
   134d8:	mov	r0, #0
   134dc:	bl	10d44 <dcgettext@plt>
   134e0:	ldr	r3, [r4]
   134e4:	mov	r1, #1
   134e8:	mov	r2, r0
   134ec:	mov	r0, r5
   134f0:	add	sp, sp, #32
   134f4:	pop	{r4, r5, r6, lr}
   134f8:	b	10e88 <__fprintf_chk@plt>
   134fc:	mov	r2, #5
   13500:	ldr	r1, [pc, #652]	; 13794 <close@plt+0x2870>
   13504:	mov	r0, #0
   13508:	bl	10d44 <dcgettext@plt>
   1350c:	ldr	r3, [r4, #4]
   13510:	mov	r1, #1
   13514:	str	r3, [sp, #48]	; 0x30
   13518:	ldr	r3, [r4]
   1351c:	mov	r2, r0
   13520:	mov	r0, r5
   13524:	add	sp, sp, #32
   13528:	pop	{r4, r5, r6, lr}
   1352c:	b	10e88 <__fprintf_chk@plt>
   13530:	mov	r2, #5
   13534:	ldr	r1, [pc, #604]	; 13798 <close@plt+0x2874>
   13538:	mov	r0, #0
   1353c:	bl	10d44 <dcgettext@plt>
   13540:	ldr	r3, [r4, #8]
   13544:	mov	r1, #1
   13548:	str	r3, [sp, #52]	; 0x34
   1354c:	ldr	r3, [r4, #4]
   13550:	str	r3, [sp, #48]	; 0x30
   13554:	ldr	r3, [r4]
   13558:	mov	r2, r0
   1355c:	mov	r0, r5
   13560:	add	sp, sp, #32
   13564:	pop	{r4, r5, r6, lr}
   13568:	b	10e88 <__fprintf_chk@plt>
   1356c:	mov	r2, #5
   13570:	ldr	r1, [pc, #548]	; 1379c <close@plt+0x2878>
   13574:	mov	r0, #0
   13578:	bl	10d44 <dcgettext@plt>
   1357c:	ldr	r3, [r4, #12]
   13580:	mov	r1, #1
   13584:	str	r3, [sp, #8]
   13588:	ldr	r3, [r4, #8]
   1358c:	str	r3, [sp, #4]
   13590:	ldr	r3, [r4, #4]
   13594:	str	r3, [sp]
   13598:	ldr	r3, [r4]
   1359c:	mov	r2, r0
   135a0:	mov	r0, r5
   135a4:	bl	10e88 <__fprintf_chk@plt>
   135a8:	add	sp, sp, #32
   135ac:	pop	{r4, r5, r6, pc}
   135b0:	mov	r2, #5
   135b4:	ldr	r1, [pc, #484]	; 137a0 <close@plt+0x287c>
   135b8:	mov	r0, #0
   135bc:	bl	10d44 <dcgettext@plt>
   135c0:	ldr	r3, [r4, #16]
   135c4:	mov	r1, #1
   135c8:	str	r3, [sp, #12]
   135cc:	ldr	r3, [r4, #12]
   135d0:	str	r3, [sp, #8]
   135d4:	ldr	r3, [r4, #8]
   135d8:	str	r3, [sp, #4]
   135dc:	ldr	r3, [r4, #4]
   135e0:	str	r3, [sp]
   135e4:	ldr	r3, [r4]
   135e8:	mov	r2, r0
   135ec:	mov	r0, r5
   135f0:	bl	10e88 <__fprintf_chk@plt>
   135f4:	b	135a8 <close@plt+0x2684>
   135f8:	mov	r2, #5
   135fc:	ldr	r1, [pc, #416]	; 137a4 <close@plt+0x2880>
   13600:	mov	r0, #0
   13604:	bl	10d44 <dcgettext@plt>
   13608:	ldr	r3, [r4, #20]
   1360c:	mov	r1, #1
   13610:	str	r3, [sp, #16]
   13614:	ldr	r3, [r4, #16]
   13618:	str	r3, [sp, #12]
   1361c:	ldr	r3, [r4, #12]
   13620:	str	r3, [sp, #8]
   13624:	ldr	r3, [r4, #8]
   13628:	str	r3, [sp, #4]
   1362c:	ldr	r3, [r4, #4]
   13630:	str	r3, [sp]
   13634:	ldr	r3, [r4]
   13638:	mov	r2, r0
   1363c:	mov	r0, r5
   13640:	bl	10e88 <__fprintf_chk@plt>
   13644:	b	135a8 <close@plt+0x2684>
   13648:	mov	r2, #5
   1364c:	ldr	r1, [pc, #340]	; 137a8 <close@plt+0x2884>
   13650:	mov	r0, #0
   13654:	bl	10d44 <dcgettext@plt>
   13658:	ldr	r3, [r4, #24]
   1365c:	mov	r1, #1
   13660:	str	r3, [sp, #20]
   13664:	ldr	r3, [r4, #20]
   13668:	str	r3, [sp, #16]
   1366c:	ldr	r3, [r4, #16]
   13670:	str	r3, [sp, #12]
   13674:	ldr	r3, [r4, #12]
   13678:	str	r3, [sp, #8]
   1367c:	ldr	r3, [r4, #8]
   13680:	str	r3, [sp, #4]
   13684:	ldr	r3, [r4, #4]
   13688:	str	r3, [sp]
   1368c:	ldr	r3, [r4]
   13690:	mov	r2, r0
   13694:	mov	r0, r5
   13698:	bl	10e88 <__fprintf_chk@plt>
   1369c:	b	135a8 <close@plt+0x2684>
   136a0:	mov	r2, #5
   136a4:	ldr	r1, [pc, #256]	; 137ac <close@plt+0x2888>
   136a8:	mov	r0, #0
   136ac:	bl	10d44 <dcgettext@plt>
   136b0:	ldr	r3, [r4, #28]
   136b4:	mov	r1, #1
   136b8:	str	r3, [sp, #24]
   136bc:	ldr	r3, [r4, #24]
   136c0:	str	r3, [sp, #20]
   136c4:	ldr	r3, [r4, #20]
   136c8:	str	r3, [sp, #16]
   136cc:	ldr	r3, [r4, #16]
   136d0:	str	r3, [sp, #12]
   136d4:	ldr	r3, [r4, #12]
   136d8:	str	r3, [sp, #8]
   136dc:	ldr	r3, [r4, #8]
   136e0:	str	r3, [sp, #4]
   136e4:	ldr	r3, [r4, #4]
   136e8:	str	r3, [sp]
   136ec:	ldr	r3, [r4]
   136f0:	mov	r2, r0
   136f4:	mov	r0, r5
   136f8:	bl	10e88 <__fprintf_chk@plt>
   136fc:	b	135a8 <close@plt+0x2684>
   13700:	ldr	r1, [pc, #168]	; 137b0 <close@plt+0x288c>
   13704:	mov	r2, #5
   13708:	mov	r0, #0
   1370c:	bl	10d44 <dcgettext@plt>
   13710:	ldr	r3, [r4, #32]
   13714:	mov	r1, #1
   13718:	str	r3, [sp, #28]
   1371c:	ldr	r3, [r4, #28]
   13720:	str	r3, [sp, #24]
   13724:	ldr	r3, [r4, #24]
   13728:	str	r3, [sp, #20]
   1372c:	ldr	r3, [r4, #20]
   13730:	str	r3, [sp, #16]
   13734:	ldr	r3, [r4, #16]
   13738:	str	r3, [sp, #12]
   1373c:	ldr	r3, [r4, #12]
   13740:	str	r3, [sp, #8]
   13744:	ldr	r3, [r4, #8]
   13748:	str	r3, [sp, #4]
   1374c:	ldr	r3, [r4, #4]
   13750:	str	r3, [sp]
   13754:	ldr	r3, [r4]
   13758:	mov	r2, r0
   1375c:	mov	r0, r5
   13760:	bl	10e88 <__fprintf_chk@plt>
   13764:	b	135a8 <close@plt+0x2684>
   13768:	mov	r2, #5
   1376c:	ldr	r1, [pc, #64]	; 137b4 <close@plt+0x2890>
   13770:	b	13708 <close@plt+0x27e4>
   13774:	andeq	r4, r1, pc, lsr #29
   13778:	andeq	r4, r1, r2, asr #29
   1377c:	andeq	r0, r0, r6, ror #15
   13780:	muleq	r1, r0, r1
   13784:	andeq	r4, r1, r6, asr #29
   13788:	andeq	r4, r1, r1, ror pc
   1378c:			; <UNDEFINED> instruction: 0x00014ebb
   13790:	muleq	r1, r3, pc	; <UNPREDICTABLE>
   13794:	andeq	r4, r1, r3, lsr #31
   13798:			; <UNDEFINED> instruction: 0x00014fba
   1379c:	ldrdeq	r4, [r1], -r6
   137a0:	strdeq	r4, [r1], -r6
   137a4:	andeq	r5, r1, sl, lsl r0
   137a8:	andeq	r5, r1, r2, asr #32
   137ac:	andeq	r5, r1, lr, rrx
   137b0:	muleq	r1, lr, r0
   137b4:	ldrdeq	r5, [r1], -r2
   137b8:	push	{r0, r1, r4, lr}
   137bc:	mov	ip, #0
   137c0:	ldr	lr, [sp, #16]
   137c4:	ldr	r4, [lr, ip, lsl #2]
   137c8:	cmp	r4, #0
   137cc:	bne	137e4 <close@plt+0x28c0>
   137d0:	str	ip, [sp, #4]
   137d4:	str	lr, [sp]
   137d8:	bl	133ec <close@plt+0x24c8>
   137dc:	add	sp, sp, #8
   137e0:	pop	{r4, pc}
   137e4:	add	ip, ip, #1
   137e8:	b	137c4 <close@plt+0x28a0>
   137ec:	push	{r4, r5, lr}
   137f0:	sub	sp, sp, #52	; 0x34
   137f4:	mov	ip, #0
   137f8:	ldr	r5, [sp, #64]	; 0x40
   137fc:	add	lr, sp, #8
   13800:	ldr	r4, [r5, ip, lsl #2]
   13804:	cmp	r4, #0
   13808:	str	r4, [lr, ip, lsl #2]
   1380c:	beq	1381c <close@plt+0x28f8>
   13810:	add	ip, ip, #1
   13814:	cmp	ip, #10
   13818:	bne	13800 <close@plt+0x28dc>
   1381c:	str	ip, [sp, #4]
   13820:	str	lr, [sp]
   13824:	bl	133ec <close@plt+0x24c8>
   13828:	add	sp, sp, #52	; 0x34
   1382c:	pop	{r4, r5, pc}
   13830:	push	{r3}		; (str r3, [sp, #-4]!)
   13834:	push	{r0, r1, r2, r3, lr}
   13838:	add	r3, sp, #24
   1383c:	str	r3, [sp, #12]
   13840:	str	r3, [sp]
   13844:	ldr	r3, [sp, #20]
   13848:	bl	137ec <close@plt+0x28c8>
   1384c:	add	sp, sp, #16
   13850:	pop	{lr}		; (ldr lr, [sp], #4)
   13854:	add	sp, sp, #4
   13858:	bx	lr
   1385c:	ldr	r3, [pc, #116]	; 138d8 <close@plt+0x29b4>
   13860:	push	{r4, lr}
   13864:	mov	r0, #10
   13868:	ldr	r1, [r3]
   1386c:	bl	10d38 <fputc_unlocked@plt>
   13870:	mov	r2, #5
   13874:	ldr	r1, [pc, #96]	; 138dc <close@plt+0x29b8>
   13878:	mov	r0, #0
   1387c:	bl	10d44 <dcgettext@plt>
   13880:	ldr	r2, [pc, #88]	; 138e0 <close@plt+0x29bc>
   13884:	mov	r1, r0
   13888:	mov	r0, #1
   1388c:	bl	10e70 <__printf_chk@plt>
   13890:	mov	r2, #5
   13894:	ldr	r1, [pc, #72]	; 138e4 <close@plt+0x29c0>
   13898:	mov	r0, #0
   1389c:	bl	10d44 <dcgettext@plt>
   138a0:	ldr	r3, [pc, #64]	; 138e8 <close@plt+0x29c4>
   138a4:	ldr	r2, [pc, #64]	; 138ec <close@plt+0x29c8>
   138a8:	mov	r1, r0
   138ac:	mov	r0, #1
   138b0:	bl	10e70 <__printf_chk@plt>
   138b4:	mov	r2, #5
   138b8:	ldr	r1, [pc, #48]	; 138f0 <close@plt+0x29cc>
   138bc:	mov	r0, #0
   138c0:	bl	10d44 <dcgettext@plt>
   138c4:	ldr	r2, [pc, #40]	; 138f4 <close@plt+0x29d0>
   138c8:	pop	{r4, lr}
   138cc:	mov	r1, r0
   138d0:	mov	r0, #1
   138d4:	b	10e70 <__printf_chk@plt>
   138d8:	andeq	r6, r2, ip, asr #2
   138dc:	andeq	r5, r1, lr, lsl #2
   138e0:	andeq	r5, r1, r2, lsr #2
   138e4:	andeq	r5, r1, r8, lsr r1
   138e8:	andeq	r4, r1, r6, ror #21
   138ec:	andeq	r4, r1, lr, lsl #22
   138f0:	andeq	r5, r1, ip, asr #2
   138f4:	andeq	r5, r1, r3, ror r1
   138f8:	push	{r4, lr}
   138fc:	bl	13e14 <close@plt+0x2ef0>
   13900:	cmp	r0, #0
   13904:	popne	{r4, pc}
   13908:	bl	13d8c <close@plt+0x2e68>
   1390c:	push	{r4, lr}
   13910:	bl	13e14 <close@plt+0x2ef0>
   13914:	cmp	r0, #0
   13918:	popne	{r4, pc}
   1391c:	bl	13d8c <close@plt+0x2e68>
   13920:	b	138f8 <close@plt+0x29d4>
   13924:	push	{r4, r5, r6, lr}
   13928:	mov	r5, r0
   1392c:	mov	r4, r1
   13930:	bl	13e54 <close@plt+0x2f30>
   13934:	cmp	r0, #0
   13938:	popne	{r4, r5, r6, pc}
   1393c:	adds	r4, r4, #0
   13940:	movne	r4, #1
   13944:	cmp	r5, #0
   13948:	orreq	r4, r4, #1
   1394c:	cmp	r4, #0
   13950:	popeq	{r4, r5, r6, pc}
   13954:	bl	13d8c <close@plt+0x2e68>
   13958:	push	{r4, lr}
   1395c:	cmp	r1, #0
   13960:	orreq	r1, r1, #1
   13964:	bl	13e54 <close@plt+0x2f30>
   13968:	cmp	r0, #0
   1396c:	popne	{r4, pc}
   13970:	bl	13d8c <close@plt+0x2e68>
   13974:	push	{r4, r5, r6, lr}
   13978:	mov	r6, r0
   1397c:	mov	r5, r1
   13980:	mov	r4, r2
   13984:	bl	141c0 <close@plt+0x329c>
   13988:	cmp	r0, #0
   1398c:	popne	{r4, r5, r6, pc}
   13990:	cmp	r6, #0
   13994:	beq	139a4 <close@plt+0x2a80>
   13998:	cmp	r5, #0
   1399c:	cmpne	r4, #0
   139a0:	popeq	{r4, r5, r6, pc}
   139a4:	bl	13d8c <close@plt+0x2e68>
   139a8:	b	13974 <close@plt+0x2a50>
   139ac:	cmp	r2, #0
   139b0:	cmpne	r1, #0
   139b4:	moveq	r2, #1
   139b8:	moveq	r1, r2
   139bc:	push	{r4, lr}
   139c0:	bl	141c0 <close@plt+0x329c>
   139c4:	cmp	r0, #0
   139c8:	popne	{r4, pc}
   139cc:	bl	13d8c <close@plt+0x2e68>
   139d0:	mov	r2, r1
   139d4:	mov	r1, r0
   139d8:	mov	r0, #0
   139dc:	b	13974 <close@plt+0x2a50>
   139e0:	mov	r2, r1
   139e4:	mov	r1, r0
   139e8:	mov	r0, #0
   139ec:	b	139ac <close@plt+0x2a88>
   139f0:	push	{r4, r5, r6, r7, r8, lr}
   139f4:	subs	r7, r0, #0
   139f8:	mov	r5, r1
   139fc:	mov	r6, r2
   13a00:	ldr	r4, [r1]
   13a04:	bne	13a40 <close@plt+0x2b1c>
   13a08:	cmp	r4, #0
   13a0c:	bne	13a28 <close@plt+0x2b04>
   13a10:	mov	r1, r2
   13a14:	mov	r0, #64	; 0x40
   13a18:	bl	142ec <close@plt+0x33c8>
   13a1c:	cmp	r0, #0
   13a20:	movne	r4, r0
   13a24:	addeq	r4, r0, #1
   13a28:	mov	r2, r6
   13a2c:	mov	r1, r4
   13a30:	mov	r0, r7
   13a34:	bl	13974 <close@plt+0x2a50>
   13a38:	str	r4, [r5]
   13a3c:	pop	{r4, r5, r6, r7, r8, pc}
   13a40:	lsr	r2, r4, #1
   13a44:	add	r3, r2, #1
   13a48:	mvn	r3, r3
   13a4c:	cmp	r4, r3
   13a50:	addls	r4, r4, #1
   13a54:	addls	r4, r4, r2
   13a58:	bls	13a28 <close@plt+0x2b04>
   13a5c:	bl	13d8c <close@plt+0x2e68>
   13a60:	mov	r2, #1
   13a64:	b	139f0 <close@plt+0x2acc>
   13a68:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a6c:	mov	sl, r0
   13a70:	ldr	r8, [r1]
   13a74:	mov	fp, r1
   13a78:	mov	r5, r2
   13a7c:	asrs	r4, r8, #1
   13a80:	mov	r9, r3
   13a84:	ldr	r7, [sp, #48]	; 0x30
   13a88:	bpl	13b24 <close@plt+0x2c00>
   13a8c:	rsb	r2, r4, #-2147483648	; 0x80000000
   13a90:	cmp	r8, r2
   13a94:	movge	r2, #0
   13a98:	movlt	r2, #1
   13a9c:	mvn	r3, r9
   13aa0:	cmp	r2, #0
   13aa4:	lsr	r3, r3, #31
   13aa8:	addeq	r4, r4, r8
   13aac:	mvnne	r4, #-2147483648	; 0x80000000
   13ab0:	mov	r0, r3
   13ab4:	cmp	r9, r4
   13ab8:	movge	r0, #0
   13abc:	andlt	r0, r0, #1
   13ac0:	cmp	r0, #0
   13ac4:	str	r3, [sp, #4]
   13ac8:	bne	13c98 <close@plt+0x2d74>
   13acc:	cmp	r7, #0
   13ad0:	bge	13be4 <close@plt+0x2cc0>
   13ad4:	cmp	r4, #0
   13ad8:	bge	13b3c <close@plt+0x2c18>
   13adc:	mov	r1, r7
   13ae0:	mvn	r0, #-2147483648	; 0x80000000
   13ae4:	bl	144f8 <close@plt+0x35d4>
   13ae8:	cmp	r0, r4
   13aec:	movle	r0, #0
   13af0:	movgt	r0, #1
   13af4:	cmp	r0, #0
   13af8:	mvnne	r6, #-2147483648	; 0x80000000
   13afc:	beq	13b4c <close@plt+0x2c28>
   13b00:	mov	r1, r7
   13b04:	mov	r0, r6
   13b08:	bl	144f8 <close@plt+0x35d4>
   13b0c:	mov	r1, r7
   13b10:	mov	r4, r0
   13b14:	mov	r0, r6
   13b18:	bl	14718 <close@plt+0x37f4>
   13b1c:	sub	r1, r6, r1
   13b20:	b	13b5c <close@plt+0x2c38>
   13b24:	mvn	r2, #-2147483648	; 0x80000000
   13b28:	sub	r2, r2, r4
   13b2c:	cmp	r8, r2
   13b30:	movle	r2, #0
   13b34:	movgt	r2, #1
   13b38:	b	13a9c <close@plt+0x2b78>
   13b3c:	cmn	r7, #1
   13b40:	movne	r1, r7
   13b44:	movne	r0, #-2147483648	; 0x80000000
   13b48:	bne	13cb0 <close@plt+0x2d8c>
   13b4c:	mul	r1, r7, r4
   13b50:	cmp	r1, #63	; 0x3f
   13b54:	movle	r6, #64	; 0x40
   13b58:	ble	13b00 <close@plt+0x2bdc>
   13b5c:	cmp	sl, #0
   13b60:	sub	r2, r4, r8
   13b64:	streq	sl, [fp]
   13b68:	cmp	r2, r5
   13b6c:	bge	13c40 <close@plt+0x2d1c>
   13b70:	cmp	r5, #0
   13b74:	bge	13c0c <close@plt+0x2ce8>
   13b78:	rsb	r2, r5, #-2147483648	; 0x80000000
   13b7c:	cmp	r8, r2
   13b80:	movge	r2, #0
   13b84:	movlt	r2, #1
   13b88:	cmp	r2, #0
   13b8c:	bne	13be0 <close@plt+0x2cbc>
   13b90:	ldr	r0, [sp, #4]
   13b94:	add	r5, r8, r5
   13b98:	cmp	r9, r5
   13b9c:	movge	r0, #0
   13ba0:	andlt	r0, r0, #1
   13ba4:	cmp	r0, #0
   13ba8:	mov	r4, r5
   13bac:	bne	13be0 <close@plt+0x2cbc>
   13bb0:	cmp	r7, #0
   13bb4:	bge	13c54 <close@plt+0x2d30>
   13bb8:	cmp	r5, #0
   13bbc:	bge	13c2c <close@plt+0x2d08>
   13bc0:	mov	r1, r7
   13bc4:	mvn	r0, #-2147483648	; 0x80000000
   13bc8:	bl	144f8 <close@plt+0x35d4>
   13bcc:	cmp	r5, r0
   13bd0:	movge	r0, #0
   13bd4:	movlt	r0, #1
   13bd8:	cmp	r0, #0
   13bdc:	beq	13c3c <close@plt+0x2d18>
   13be0:	bl	13d8c <close@plt+0x2e68>
   13be4:	beq	13b4c <close@plt+0x2c28>
   13be8:	cmp	r4, #0
   13bec:	bge	13ca8 <close@plt+0x2d84>
   13bf0:	cmn	r4, #1
   13bf4:	beq	13b4c <close@plt+0x2c28>
   13bf8:	mov	r1, r4
   13bfc:	mov	r0, #-2147483648	; 0x80000000
   13c00:	bl	144f8 <close@plt+0x35d4>
   13c04:	cmp	r7, r0
   13c08:	b	13aec <close@plt+0x2bc8>
   13c0c:	cmp	r8, #0
   13c10:	blt	13b90 <close@plt+0x2c6c>
   13c14:	mvn	r2, #-2147483648	; 0x80000000
   13c18:	sub	r2, r2, r5
   13c1c:	cmp	r8, r2
   13c20:	movle	r2, #0
   13c24:	movgt	r2, #1
   13c28:	b	13b88 <close@plt+0x2c64>
   13c2c:	cmn	r7, #1
   13c30:	movne	r1, r7
   13c34:	movne	r0, #-2147483648	; 0x80000000
   13c38:	bne	13c8c <close@plt+0x2d68>
   13c3c:	mul	r1, r5, r7
   13c40:	mov	r0, sl
   13c44:	bl	13924 <close@plt+0x2a00>
   13c48:	str	r4, [fp]
   13c4c:	add	sp, sp, #12
   13c50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c54:	beq	13c3c <close@plt+0x2d18>
   13c58:	cmp	r5, #0
   13c5c:	movge	r1, r7
   13c60:	mvnge	r0, #-2147483648	; 0x80000000
   13c64:	bge	13c8c <close@plt+0x2d68>
   13c68:	cmn	r5, #1
   13c6c:	beq	13c3c <close@plt+0x2d18>
   13c70:	mov	r1, r5
   13c74:	mov	r0, #-2147483648	; 0x80000000
   13c78:	bl	144f8 <close@plt+0x35d4>
   13c7c:	cmp	r7, r0
   13c80:	movle	r0, #0
   13c84:	movgt	r0, #1
   13c88:	b	13bd8 <close@plt+0x2cb4>
   13c8c:	bl	144f8 <close@plt+0x35d4>
   13c90:	cmp	r5, r0
   13c94:	b	13c80 <close@plt+0x2d5c>
   13c98:	cmp	r7, #0
   13c9c:	mov	r4, r9
   13ca0:	blt	13b3c <close@plt+0x2c18>
   13ca4:	beq	13b4c <close@plt+0x2c28>
   13ca8:	mov	r1, r7
   13cac:	mvn	r0, #-2147483648	; 0x80000000
   13cb0:	bl	144f8 <close@plt+0x35d4>
   13cb4:	cmp	r0, r4
   13cb8:	movge	r0, #0
   13cbc:	movlt	r0, #1
   13cc0:	b	13af4 <close@plt+0x2bd0>
   13cc4:	push	{r4, lr}
   13cc8:	bl	13dcc <close@plt+0x2ea8>
   13ccc:	cmp	r0, #0
   13cd0:	popne	{r4, pc}
   13cd4:	bl	13d8c <close@plt+0x2e68>
   13cd8:	mov	r1, #1
   13cdc:	b	13cc4 <close@plt+0x2da0>
   13ce0:	push	{r4, lr}
   13ce4:	bl	13dcc <close@plt+0x2ea8>
   13ce8:	cmp	r0, #0
   13cec:	popne	{r4, pc}
   13cf0:	bl	13d8c <close@plt+0x2e68>
   13cf4:	mov	r1, #1
   13cf8:	b	13ce0 <close@plt+0x2dbc>
   13cfc:	push	{r4, r5, r6, lr}
   13d00:	mov	r4, r1
   13d04:	mov	r5, r0
   13d08:	mov	r0, r1
   13d0c:	bl	138f8 <close@plt+0x29d4>
   13d10:	mov	r2, r4
   13d14:	mov	r1, r5
   13d18:	pop	{r4, r5, r6, lr}
   13d1c:	b	10cfc <memcpy@plt>
   13d20:	push	{r4, r5, r6, lr}
   13d24:	mov	r4, r1
   13d28:	mov	r5, r0
   13d2c:	mov	r0, r1
   13d30:	bl	1390c <close@plt+0x29e8>
   13d34:	mov	r2, r4
   13d38:	mov	r1, r5
   13d3c:	pop	{r4, r5, r6, lr}
   13d40:	b	10cfc <memcpy@plt>
   13d44:	push	{r4, r5, r6, lr}
   13d48:	mov	r5, r0
   13d4c:	add	r0, r1, #1
   13d50:	mov	r4, r1
   13d54:	bl	1390c <close@plt+0x29e8>
   13d58:	mov	r2, #0
   13d5c:	mov	r1, r5
   13d60:	strb	r2, [r0, r4]
   13d64:	mov	r2, r4
   13d68:	pop	{r4, r5, r6, lr}
   13d6c:	b	10cfc <memcpy@plt>
   13d70:	push	{r4, lr}
   13d74:	mov	r4, r0
   13d78:	bl	10e40 <strlen@plt>
   13d7c:	add	r1, r0, #1
   13d80:	mov	r0, r4
   13d84:	pop	{r4, lr}
   13d88:	b	13cfc <close@plt+0x2dd8>
   13d8c:	ldr	r3, [pc, #44]	; 13dc0 <close@plt+0x2e9c>
   13d90:	push	{r4, lr}
   13d94:	mov	r2, #5
   13d98:	ldr	r1, [pc, #36]	; 13dc4 <close@plt+0x2ea0>
   13d9c:	mov	r0, #0
   13da0:	ldr	r4, [r3]
   13da4:	bl	10d44 <dcgettext@plt>
   13da8:	ldr	r2, [pc, #24]	; 13dc8 <close@plt+0x2ea4>
   13dac:	mov	r1, #0
   13db0:	mov	r3, r0
   13db4:	mov	r0, r4
   13db8:	bl	10dbc <error@plt>
   13dbc:	bl	10f18 <abort@plt>
   13dc0:	strdeq	r6, [r2], -r4
   13dc4:			; <UNDEFINED> instruction: 0x000151bf
   13dc8:	andeq	r4, r1, r0, ror sp
   13dcc:	cmp	r1, #0
   13dd0:	cmpne	r0, #0
   13dd4:	moveq	r1, #1
   13dd8:	moveq	r0, r1
   13ddc:	umull	r2, r3, r0, r1
   13de0:	adds	r3, r3, #0
   13de4:	movne	r3, #1
   13de8:	cmp	r2, #0
   13dec:	blt	13dfc <close@plt+0x2ed8>
   13df0:	cmp	r3, #0
   13df4:	bne	13dfc <close@plt+0x2ed8>
   13df8:	b	10ca8 <calloc@plt>
   13dfc:	push	{r4, lr}
   13e00:	bl	10e4c <__errno_location@plt>
   13e04:	mov	r3, #12
   13e08:	str	r3, [r0]
   13e0c:	mov	r0, #0
   13e10:	pop	{r4, pc}
   13e14:	cmp	r0, #0
   13e18:	mov	r3, #0
   13e1c:	moveq	r0, #1
   13e20:	adds	r3, r3, #0
   13e24:	movne	r3, #1
   13e28:	cmp	r0, #0
   13e2c:	blt	13e3c <close@plt+0x2f18>
   13e30:	cmp	r3, #0
   13e34:	bne	13e3c <close@plt+0x2f18>
   13e38:	b	10de0 <malloc@plt>
   13e3c:	push	{r4, lr}
   13e40:	bl	10e4c <__errno_location@plt>
   13e44:	mov	r3, #12
   13e48:	str	r3, [r0]
   13e4c:	mov	r0, #0
   13e50:	pop	{r4, pc}
   13e54:	cmp	r0, #0
   13e58:	push	{r4, lr}
   13e5c:	mov	r4, r1
   13e60:	bne	13e70 <close@plt+0x2f4c>
   13e64:	mov	r0, r1
   13e68:	pop	{r4, lr}
   13e6c:	b	13e14 <close@plt+0x2ef0>
   13e70:	cmp	r1, #0
   13e74:	bne	13e84 <close@plt+0x2f60>
   13e78:	bl	11bdc <close@plt+0xcb8>
   13e7c:	mov	r0, #0
   13e80:	pop	{r4, pc}
   13e84:	cmp	r1, #0
   13e88:	blt	13e98 <close@plt+0x2f74>
   13e8c:	mov	r3, #0
   13e90:	cmp	r3, r3
   13e94:	beq	13ea8 <close@plt+0x2f84>
   13e98:	bl	10e4c <__errno_location@plt>
   13e9c:	mov	r3, #12
   13ea0:	str	r3, [r0]
   13ea4:	b	13e7c <close@plt+0x2f58>
   13ea8:	pop	{r4, lr}
   13eac:	b	10d5c <realloc@plt>
   13eb0:	mov	r2, r0
   13eb4:	push	{r4, lr}
   13eb8:	mov	r0, r2
   13ebc:	ldrb	r3, [r2]
   13ec0:	add	r1, r2, #1
   13ec4:	cmp	r3, #47	; 0x2f
   13ec8:	beq	13eec <close@plt+0x2fc8>
   13ecc:	mov	r3, #0
   13ed0:	mov	lr, #1
   13ed4:	mov	r4, r3
   13ed8:	mov	ip, r2
   13edc:	ldrb	r1, [r2], #1
   13ee0:	cmp	r1, #0
   13ee4:	bne	13ef4 <close@plt+0x2fd0>
   13ee8:	pop	{r4, pc}
   13eec:	mov	r2, r1
   13ef0:	b	13eb8 <close@plt+0x2f94>
   13ef4:	cmp	r1, #47	; 0x2f
   13ef8:	moveq	r3, lr
   13efc:	beq	13ed8 <close@plt+0x2fb4>
   13f00:	cmp	r3, #0
   13f04:	movne	r0, ip
   13f08:	movne	r3, r4
   13f0c:	b	13ed8 <close@plt+0x2fb4>
   13f10:	push	{r4, lr}
   13f14:	mov	r4, r0
   13f18:	bl	10e40 <strlen@plt>
   13f1c:	cmp	r0, #1
   13f20:	popls	{r4, pc}
   13f24:	sub	r3, r0, #1
   13f28:	ldrb	r2, [r4, r3]
   13f2c:	cmp	r2, #47	; 0x2f
   13f30:	beq	13f38 <close@plt+0x3014>
   13f34:	pop	{r4, pc}
   13f38:	mov	r0, r3
   13f3c:	b	13f1c <close@plt+0x2ff8>
   13f40:	push	{r4, r5, r6, lr}
   13f44:	mov	r4, r0
   13f48:	bl	10d98 <__fpending@plt>
   13f4c:	mov	r5, r0
   13f50:	mov	r0, r4
   13f54:	bl	10da4 <ferror_unlocked@plt>
   13f58:	mov	r6, r0
   13f5c:	mov	r0, r4
   13f60:	bl	13fb0 <close@plt+0x308c>
   13f64:	cmp	r6, #0
   13f68:	mov	r4, r0
   13f6c:	bne	13f98 <close@plt+0x3074>
   13f70:	cmp	r0, #0
   13f74:	beq	13f90 <close@plt+0x306c>
   13f78:	cmp	r5, #0
   13f7c:	bne	13fa8 <close@plt+0x3084>
   13f80:	bl	10e4c <__errno_location@plt>
   13f84:	ldr	r4, [r0]
   13f88:	subs	r4, r4, #9
   13f8c:	mvnne	r4, #0
   13f90:	mov	r0, r4
   13f94:	pop	{r4, r5, r6, pc}
   13f98:	cmp	r0, #0
   13f9c:	bne	13fa8 <close@plt+0x3084>
   13fa0:	bl	10e4c <__errno_location@plt>
   13fa4:	str	r4, [r0]
   13fa8:	mvn	r4, #0
   13fac:	b	13f90 <close@plt+0x306c>
   13fb0:	push	{r0, r1, r2, r4, r5, lr}
   13fb4:	mov	r4, r0
   13fb8:	bl	10e7c <fileno@plt>
   13fbc:	cmp	r0, #0
   13fc0:	mov	r0, r4
   13fc4:	bge	13fd4 <close@plt+0x30b0>
   13fc8:	add	sp, sp, #12
   13fcc:	pop	{r4, r5, lr}
   13fd0:	b	10e94 <fclose@plt>
   13fd4:	bl	10df8 <__freading@plt>
   13fd8:	cmp	r0, #0
   13fdc:	bne	14018 <close@plt+0x30f4>
   13fe0:	mov	r0, r4
   13fe4:	bl	14058 <close@plt+0x3134>
   13fe8:	cmp	r0, #0
   13fec:	bne	1404c <close@plt+0x3128>
   13ff0:	mov	r5, #0
   13ff4:	mov	r0, r4
   13ff8:	bl	10e94 <fclose@plt>
   13ffc:	cmp	r5, #0
   14000:	beq	14010 <close@plt+0x30ec>
   14004:	bl	10e4c <__errno_location@plt>
   14008:	str	r5, [r0]
   1400c:	mvn	r0, #0
   14010:	add	sp, sp, #12
   14014:	pop	{r4, r5, pc}
   14018:	mov	r0, r4
   1401c:	bl	10e7c <fileno@plt>
   14020:	mov	r3, #1
   14024:	str	r3, [sp]
   14028:	mov	r2, #0
   1402c:	mov	r3, #0
   14030:	bl	10d80 <lseek64@plt>
   14034:	mvn	r3, #0
   14038:	mvn	r2, #0
   1403c:	cmp	r1, r3
   14040:	cmpeq	r0, r2
   14044:	bne	13fe0 <close@plt+0x30bc>
   14048:	b	13ff0 <close@plt+0x30cc>
   1404c:	bl	10e4c <__errno_location@plt>
   14050:	ldr	r5, [r0]
   14054:	b	13ff4 <close@plt+0x30d0>
   14058:	push	{r0, r1, r4, lr}
   1405c:	subs	r4, r0, #0
   14060:	bne	14074 <close@plt+0x3150>
   14064:	mov	r0, r4
   14068:	add	sp, sp, #8
   1406c:	pop	{r4, lr}
   14070:	b	10cd8 <fflush@plt>
   14074:	bl	10df8 <__freading@plt>
   14078:	cmp	r0, #0
   1407c:	beq	14064 <close@plt+0x3140>
   14080:	ldr	r3, [r4]
   14084:	tst	r3, #256	; 0x100
   14088:	beq	14064 <close@plt+0x3140>
   1408c:	mov	r3, #1
   14090:	str	r3, [sp]
   14094:	mov	r2, #0
   14098:	mov	r3, #0
   1409c:	mov	r0, r4
   140a0:	bl	140a8 <close@plt+0x3184>
   140a4:	b	14064 <close@plt+0x3140>
   140a8:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   140ac:	mov	r4, r0
   140b0:	ldmib	r0, {ip, lr}
   140b4:	ldr	r8, [sp, #32]
   140b8:	cmp	lr, ip
   140bc:	bne	14128 <close@plt+0x3204>
   140c0:	ldr	lr, [r0, #20]
   140c4:	ldr	ip, [r0, #16]
   140c8:	cmp	lr, ip
   140cc:	bne	14128 <close@plt+0x3204>
   140d0:	ldr	r5, [r0, #36]	; 0x24
   140d4:	cmp	r5, #0
   140d8:	bne	14128 <close@plt+0x3204>
   140dc:	mov	r6, r2
   140e0:	mov	r7, r3
   140e4:	bl	10e7c <fileno@plt>
   140e8:	mov	r2, r6
   140ec:	mov	r3, r7
   140f0:	str	r8, [sp]
   140f4:	bl	10d80 <lseek64@plt>
   140f8:	mvn	r3, #0
   140fc:	mvn	r2, #0
   14100:	cmp	r1, r3
   14104:	cmpeq	r0, r2
   14108:	mvneq	r0, #0
   1410c:	ldrne	r3, [r4]
   14110:	strdne	r0, [r4, #80]	; 0x50
   14114:	movne	r0, r5
   14118:	bicne	r3, r3, #16
   1411c:	strne	r3, [r4]
   14120:	add	sp, sp, #8
   14124:	pop	{r4, r5, r6, r7, r8, pc}
   14128:	str	r8, [sp, #32]
   1412c:	mov	r0, r4
   14130:	add	sp, sp, #8
   14134:	pop	{r4, r5, r6, r7, r8, lr}
   14138:	b	10ea0 <fseeko64@plt>
   1413c:	push	{r4, lr}
   14140:	mov	r0, #14
   14144:	bl	10ed0 <nl_langinfo@plt>
   14148:	ldr	r3, [pc, #24]	; 14168 <close@plt+0x3244>
   1414c:	cmp	r0, #0
   14150:	moveq	r0, r3
   14154:	ldr	r3, [pc, #16]	; 1416c <close@plt+0x3248>
   14158:	ldrb	r2, [r0]
   1415c:	cmp	r2, #0
   14160:	moveq	r0, r3
   14164:	pop	{r4, pc}
   14168:	andeq	r4, r1, r9, lsl #17
   1416c:	ldrdeq	r5, [r1], -r0
   14170:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   14174:	subs	r5, r0, #0
   14178:	addeq	r5, sp, #4
   1417c:	mov	r0, r5
   14180:	mov	r7, r2
   14184:	mov	r6, r1
   14188:	bl	10db0 <mbrtowc@plt>
   1418c:	cmp	r7, #0
   14190:	cmnne	r0, #3
   14194:	mov	r4, r0
   14198:	bls	141b4 <close@plt+0x3290>
   1419c:	mov	r0, #0
   141a0:	bl	1420c <close@plt+0x32e8>
   141a4:	cmp	r0, #0
   141a8:	moveq	r4, #1
   141ac:	ldrbeq	r3, [r6]
   141b0:	streq	r3, [r5]
   141b4:	mov	r0, r4
   141b8:	add	sp, sp, #12
   141bc:	pop	{r4, r5, r6, r7, pc}
   141c0:	push	{r4, r5, r6, lr}
   141c4:	subs	r4, r2, #0
   141c8:	mov	r6, r0
   141cc:	mov	r5, r1
   141d0:	beq	141e8 <close@plt+0x32c4>
   141d4:	mov	r1, r4
   141d8:	mvn	r0, #0
   141dc:	bl	142ec <close@plt+0x33c8>
   141e0:	cmp	r0, r5
   141e4:	bcc	141f8 <close@plt+0x32d4>
   141e8:	mul	r1, r5, r4
   141ec:	mov	r0, r6
   141f0:	pop	{r4, r5, r6, lr}
   141f4:	b	13e54 <close@plt+0x2f30>
   141f8:	bl	10e4c <__errno_location@plt>
   141fc:	mov	r3, #12
   14200:	str	r3, [r0]
   14204:	mov	r0, #0
   14208:	pop	{r4, r5, r6, pc}
   1420c:	push	{lr}		; (str lr, [sp, #-4]!)
   14210:	sub	sp, sp, #268	; 0x10c
   14214:	ldr	r2, [pc, #64]	; 1425c <close@plt+0x3338>
   14218:	add	r1, sp, #4
   1421c:	bl	14268 <close@plt+0x3344>
   14220:	cmp	r0, #0
   14224:	movne	r0, #0
   14228:	bne	14254 <close@plt+0x3330>
   1422c:	ldr	r1, [pc, #44]	; 14260 <close@plt+0x333c>
   14230:	add	r0, sp, #4
   14234:	bl	10ccc <strcmp@plt>
   14238:	cmp	r0, #0
   1423c:	beq	14254 <close@plt+0x3330>
   14240:	ldr	r1, [pc, #28]	; 14264 <close@plt+0x3340>
   14244:	add	r0, sp, #4
   14248:	bl	10ccc <strcmp@plt>
   1424c:	adds	r0, r0, #0
   14250:	movne	r0, #1
   14254:	add	sp, sp, #268	; 0x10c
   14258:	pop	{pc}		; (ldr pc, [sp], #4)
   1425c:	andeq	r0, r0, r1, lsl #2
   14260:	ldrdeq	r5, [r1], -r6
   14264:	ldrdeq	r5, [r1], -r8
   14268:	push	{r4, r5, r6, lr}
   1426c:	mov	r5, r1
   14270:	mov	r1, #0
   14274:	mov	r4, r2
   14278:	bl	10eb8 <setlocale@plt>
   1427c:	subs	r6, r0, #0
   14280:	bne	14294 <close@plt+0x3370>
   14284:	cmp	r4, #0
   14288:	strbne	r6, [r5]
   1428c:	mov	r0, #22
   14290:	pop	{r4, r5, r6, pc}
   14294:	bl	10e40 <strlen@plt>
   14298:	cmp	r4, r0
   1429c:	bls	142b8 <close@plt+0x3394>
   142a0:	add	r2, r0, #1
   142a4:	mov	r1, r6
   142a8:	mov	r0, r5
   142ac:	bl	10cfc <memcpy@plt>
   142b0:	mov	r0, #0
   142b4:	pop	{r4, r5, r6, pc}
   142b8:	cmp	r4, #0
   142bc:	beq	142dc <close@plt+0x33b8>
   142c0:	sub	r4, r4, #1
   142c4:	mov	r2, r4
   142c8:	mov	r1, r6
   142cc:	mov	r0, r5
   142d0:	bl	10cfc <memcpy@plt>
   142d4:	mov	r3, #0
   142d8:	strb	r3, [r5, r4]
   142dc:	mov	r0, #34	; 0x22
   142e0:	pop	{r4, r5, r6, pc}
   142e4:	mov	r1, #0
   142e8:	b	10eb8 <setlocale@plt>
   142ec:	subs	r2, r1, #1
   142f0:	bxeq	lr
   142f4:	bcc	144cc <close@plt+0x35a8>
   142f8:	cmp	r0, r1
   142fc:	bls	144b0 <close@plt+0x358c>
   14300:	tst	r1, r2
   14304:	beq	144bc <close@plt+0x3598>
   14308:	clz	r3, r0
   1430c:	clz	r2, r1
   14310:	sub	r3, r2, r3
   14314:	rsbs	r3, r3, #31
   14318:	addne	r3, r3, r3, lsl #1
   1431c:	mov	r2, #0
   14320:	addne	pc, pc, r3, lsl #2
   14324:	nop			; (mov r0, r0)
   14328:	cmp	r0, r1, lsl #31
   1432c:	adc	r2, r2, r2
   14330:	subcs	r0, r0, r1, lsl #31
   14334:	cmp	r0, r1, lsl #30
   14338:	adc	r2, r2, r2
   1433c:	subcs	r0, r0, r1, lsl #30
   14340:	cmp	r0, r1, lsl #29
   14344:	adc	r2, r2, r2
   14348:	subcs	r0, r0, r1, lsl #29
   1434c:	cmp	r0, r1, lsl #28
   14350:	adc	r2, r2, r2
   14354:	subcs	r0, r0, r1, lsl #28
   14358:	cmp	r0, r1, lsl #27
   1435c:	adc	r2, r2, r2
   14360:	subcs	r0, r0, r1, lsl #27
   14364:	cmp	r0, r1, lsl #26
   14368:	adc	r2, r2, r2
   1436c:	subcs	r0, r0, r1, lsl #26
   14370:	cmp	r0, r1, lsl #25
   14374:	adc	r2, r2, r2
   14378:	subcs	r0, r0, r1, lsl #25
   1437c:	cmp	r0, r1, lsl #24
   14380:	adc	r2, r2, r2
   14384:	subcs	r0, r0, r1, lsl #24
   14388:	cmp	r0, r1, lsl #23
   1438c:	adc	r2, r2, r2
   14390:	subcs	r0, r0, r1, lsl #23
   14394:	cmp	r0, r1, lsl #22
   14398:	adc	r2, r2, r2
   1439c:	subcs	r0, r0, r1, lsl #22
   143a0:	cmp	r0, r1, lsl #21
   143a4:	adc	r2, r2, r2
   143a8:	subcs	r0, r0, r1, lsl #21
   143ac:	cmp	r0, r1, lsl #20
   143b0:	adc	r2, r2, r2
   143b4:	subcs	r0, r0, r1, lsl #20
   143b8:	cmp	r0, r1, lsl #19
   143bc:	adc	r2, r2, r2
   143c0:	subcs	r0, r0, r1, lsl #19
   143c4:	cmp	r0, r1, lsl #18
   143c8:	adc	r2, r2, r2
   143cc:	subcs	r0, r0, r1, lsl #18
   143d0:	cmp	r0, r1, lsl #17
   143d4:	adc	r2, r2, r2
   143d8:	subcs	r0, r0, r1, lsl #17
   143dc:	cmp	r0, r1, lsl #16
   143e0:	adc	r2, r2, r2
   143e4:	subcs	r0, r0, r1, lsl #16
   143e8:	cmp	r0, r1, lsl #15
   143ec:	adc	r2, r2, r2
   143f0:	subcs	r0, r0, r1, lsl #15
   143f4:	cmp	r0, r1, lsl #14
   143f8:	adc	r2, r2, r2
   143fc:	subcs	r0, r0, r1, lsl #14
   14400:	cmp	r0, r1, lsl #13
   14404:	adc	r2, r2, r2
   14408:	subcs	r0, r0, r1, lsl #13
   1440c:	cmp	r0, r1, lsl #12
   14410:	adc	r2, r2, r2
   14414:	subcs	r0, r0, r1, lsl #12
   14418:	cmp	r0, r1, lsl #11
   1441c:	adc	r2, r2, r2
   14420:	subcs	r0, r0, r1, lsl #11
   14424:	cmp	r0, r1, lsl #10
   14428:	adc	r2, r2, r2
   1442c:	subcs	r0, r0, r1, lsl #10
   14430:	cmp	r0, r1, lsl #9
   14434:	adc	r2, r2, r2
   14438:	subcs	r0, r0, r1, lsl #9
   1443c:	cmp	r0, r1, lsl #8
   14440:	adc	r2, r2, r2
   14444:	subcs	r0, r0, r1, lsl #8
   14448:	cmp	r0, r1, lsl #7
   1444c:	adc	r2, r2, r2
   14450:	subcs	r0, r0, r1, lsl #7
   14454:	cmp	r0, r1, lsl #6
   14458:	adc	r2, r2, r2
   1445c:	subcs	r0, r0, r1, lsl #6
   14460:	cmp	r0, r1, lsl #5
   14464:	adc	r2, r2, r2
   14468:	subcs	r0, r0, r1, lsl #5
   1446c:	cmp	r0, r1, lsl #4
   14470:	adc	r2, r2, r2
   14474:	subcs	r0, r0, r1, lsl #4
   14478:	cmp	r0, r1, lsl #3
   1447c:	adc	r2, r2, r2
   14480:	subcs	r0, r0, r1, lsl #3
   14484:	cmp	r0, r1, lsl #2
   14488:	adc	r2, r2, r2
   1448c:	subcs	r0, r0, r1, lsl #2
   14490:	cmp	r0, r1, lsl #1
   14494:	adc	r2, r2, r2
   14498:	subcs	r0, r0, r1, lsl #1
   1449c:	cmp	r0, r1
   144a0:	adc	r2, r2, r2
   144a4:	subcs	r0, r0, r1
   144a8:	mov	r0, r2
   144ac:	bx	lr
   144b0:	moveq	r0, #1
   144b4:	movne	r0, #0
   144b8:	bx	lr
   144bc:	clz	r2, r1
   144c0:	rsb	r2, r2, #31
   144c4:	lsr	r0, r0, r2
   144c8:	bx	lr
   144cc:	cmp	r0, #0
   144d0:	mvnne	r0, #0
   144d4:	b	14738 <close@plt+0x3814>
   144d8:	cmp	r1, #0
   144dc:	beq	144cc <close@plt+0x35a8>
   144e0:	push	{r0, r1, lr}
   144e4:	bl	142ec <close@plt+0x33c8>
   144e8:	pop	{r1, r2, lr}
   144ec:	mul	r3, r2, r0
   144f0:	sub	r1, r1, r3
   144f4:	bx	lr
   144f8:	cmp	r1, #0
   144fc:	beq	14708 <close@plt+0x37e4>
   14500:	eor	ip, r0, r1
   14504:	rsbmi	r1, r1, #0
   14508:	subs	r2, r1, #1
   1450c:	beq	146d4 <close@plt+0x37b0>
   14510:	movs	r3, r0
   14514:	rsbmi	r3, r0, #0
   14518:	cmp	r3, r1
   1451c:	bls	146e0 <close@plt+0x37bc>
   14520:	tst	r1, r2
   14524:	beq	146f0 <close@plt+0x37cc>
   14528:	clz	r2, r3
   1452c:	clz	r0, r1
   14530:	sub	r2, r0, r2
   14534:	rsbs	r2, r2, #31
   14538:	addne	r2, r2, r2, lsl #1
   1453c:	mov	r0, #0
   14540:	addne	pc, pc, r2, lsl #2
   14544:	nop			; (mov r0, r0)
   14548:	cmp	r3, r1, lsl #31
   1454c:	adc	r0, r0, r0
   14550:	subcs	r3, r3, r1, lsl #31
   14554:	cmp	r3, r1, lsl #30
   14558:	adc	r0, r0, r0
   1455c:	subcs	r3, r3, r1, lsl #30
   14560:	cmp	r3, r1, lsl #29
   14564:	adc	r0, r0, r0
   14568:	subcs	r3, r3, r1, lsl #29
   1456c:	cmp	r3, r1, lsl #28
   14570:	adc	r0, r0, r0
   14574:	subcs	r3, r3, r1, lsl #28
   14578:	cmp	r3, r1, lsl #27
   1457c:	adc	r0, r0, r0
   14580:	subcs	r3, r3, r1, lsl #27
   14584:	cmp	r3, r1, lsl #26
   14588:	adc	r0, r0, r0
   1458c:	subcs	r3, r3, r1, lsl #26
   14590:	cmp	r3, r1, lsl #25
   14594:	adc	r0, r0, r0
   14598:	subcs	r3, r3, r1, lsl #25
   1459c:	cmp	r3, r1, lsl #24
   145a0:	adc	r0, r0, r0
   145a4:	subcs	r3, r3, r1, lsl #24
   145a8:	cmp	r3, r1, lsl #23
   145ac:	adc	r0, r0, r0
   145b0:	subcs	r3, r3, r1, lsl #23
   145b4:	cmp	r3, r1, lsl #22
   145b8:	adc	r0, r0, r0
   145bc:	subcs	r3, r3, r1, lsl #22
   145c0:	cmp	r3, r1, lsl #21
   145c4:	adc	r0, r0, r0
   145c8:	subcs	r3, r3, r1, lsl #21
   145cc:	cmp	r3, r1, lsl #20
   145d0:	adc	r0, r0, r0
   145d4:	subcs	r3, r3, r1, lsl #20
   145d8:	cmp	r3, r1, lsl #19
   145dc:	adc	r0, r0, r0
   145e0:	subcs	r3, r3, r1, lsl #19
   145e4:	cmp	r3, r1, lsl #18
   145e8:	adc	r0, r0, r0
   145ec:	subcs	r3, r3, r1, lsl #18
   145f0:	cmp	r3, r1, lsl #17
   145f4:	adc	r0, r0, r0
   145f8:	subcs	r3, r3, r1, lsl #17
   145fc:	cmp	r3, r1, lsl #16
   14600:	adc	r0, r0, r0
   14604:	subcs	r3, r3, r1, lsl #16
   14608:	cmp	r3, r1, lsl #15
   1460c:	adc	r0, r0, r0
   14610:	subcs	r3, r3, r1, lsl #15
   14614:	cmp	r3, r1, lsl #14
   14618:	adc	r0, r0, r0
   1461c:	subcs	r3, r3, r1, lsl #14
   14620:	cmp	r3, r1, lsl #13
   14624:	adc	r0, r0, r0
   14628:	subcs	r3, r3, r1, lsl #13
   1462c:	cmp	r3, r1, lsl #12
   14630:	adc	r0, r0, r0
   14634:	subcs	r3, r3, r1, lsl #12
   14638:	cmp	r3, r1, lsl #11
   1463c:	adc	r0, r0, r0
   14640:	subcs	r3, r3, r1, lsl #11
   14644:	cmp	r3, r1, lsl #10
   14648:	adc	r0, r0, r0
   1464c:	subcs	r3, r3, r1, lsl #10
   14650:	cmp	r3, r1, lsl #9
   14654:	adc	r0, r0, r0
   14658:	subcs	r3, r3, r1, lsl #9
   1465c:	cmp	r3, r1, lsl #8
   14660:	adc	r0, r0, r0
   14664:	subcs	r3, r3, r1, lsl #8
   14668:	cmp	r3, r1, lsl #7
   1466c:	adc	r0, r0, r0
   14670:	subcs	r3, r3, r1, lsl #7
   14674:	cmp	r3, r1, lsl #6
   14678:	adc	r0, r0, r0
   1467c:	subcs	r3, r3, r1, lsl #6
   14680:	cmp	r3, r1, lsl #5
   14684:	adc	r0, r0, r0
   14688:	subcs	r3, r3, r1, lsl #5
   1468c:	cmp	r3, r1, lsl #4
   14690:	adc	r0, r0, r0
   14694:	subcs	r3, r3, r1, lsl #4
   14698:	cmp	r3, r1, lsl #3
   1469c:	adc	r0, r0, r0
   146a0:	subcs	r3, r3, r1, lsl #3
   146a4:	cmp	r3, r1, lsl #2
   146a8:	adc	r0, r0, r0
   146ac:	subcs	r3, r3, r1, lsl #2
   146b0:	cmp	r3, r1, lsl #1
   146b4:	adc	r0, r0, r0
   146b8:	subcs	r3, r3, r1, lsl #1
   146bc:	cmp	r3, r1
   146c0:	adc	r0, r0, r0
   146c4:	subcs	r3, r3, r1
   146c8:	cmp	ip, #0
   146cc:	rsbmi	r0, r0, #0
   146d0:	bx	lr
   146d4:	teq	ip, r0
   146d8:	rsbmi	r0, r0, #0
   146dc:	bx	lr
   146e0:	movcc	r0, #0
   146e4:	asreq	r0, ip, #31
   146e8:	orreq	r0, r0, #1
   146ec:	bx	lr
   146f0:	clz	r2, r1
   146f4:	rsb	r2, r2, #31
   146f8:	cmp	ip, #0
   146fc:	lsr	r0, r3, r2
   14700:	rsbmi	r0, r0, #0
   14704:	bx	lr
   14708:	cmp	r0, #0
   1470c:	mvngt	r0, #-2147483648	; 0x80000000
   14710:	movlt	r0, #-2147483648	; 0x80000000
   14714:	b	14738 <close@plt+0x3814>
   14718:	cmp	r1, #0
   1471c:	beq	14708 <close@plt+0x37e4>
   14720:	push	{r0, r1, lr}
   14724:	bl	14500 <close@plt+0x35dc>
   14728:	pop	{r1, r2, lr}
   1472c:	mul	r3, r2, r0
   14730:	sub	r1, r1, r3
   14734:	bx	lr
   14738:	push	{r1, lr}
   1473c:	mov	r0, #8
   14740:	bl	10cc0 <raise@plt>
   14744:	pop	{r1, pc}
   14748:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1474c:	mov	r7, r0
   14750:	ldr	r6, [pc, #72]	; 147a0 <close@plt+0x387c>
   14754:	ldr	r5, [pc, #72]	; 147a4 <close@plt+0x3880>
   14758:	add	r6, pc, r6
   1475c:	add	r5, pc, r5
   14760:	sub	r6, r6, r5
   14764:	mov	r8, r1
   14768:	mov	r9, r2
   1476c:	bl	10c88 <calloc@plt-0x20>
   14770:	asrs	r6, r6, #2
   14774:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14778:	mov	r4, #0
   1477c:	add	r4, r4, #1
   14780:	ldr	r3, [r5], #4
   14784:	mov	r2, r9
   14788:	mov	r1, r8
   1478c:	mov	r0, r7
   14790:	blx	r3
   14794:	cmp	r6, r4
   14798:	bne	1477c <close@plt+0x3858>
   1479c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   147a0:			; <UNDEFINED> instruction: 0x000117b0
   147a4:	andeq	r1, r1, r8, lsr #15
   147a8:	bx	lr
   147ac:	ldr	r3, [pc, #12]	; 147c0 <close@plt+0x389c>
   147b0:	mov	r1, #0
   147b4:	add	r3, pc, r3
   147b8:	ldr	r2, [r3]
   147bc:	b	10e58 <__cxa_atexit@plt>
   147c0:	andeq	r1, r1, r0, lsr r9

Disassembly of section .fini:

000147c4 <.fini>:
   147c4:	push	{r3, lr}
   147c8:	pop	{r3, pc}
