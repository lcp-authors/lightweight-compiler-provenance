
../repos/myhtml/libmyhtml.so.4.0.6:     file format elf32-littlearm


Disassembly of section .init:

00010d74 <.init>:
   10d74:	push	{r3, lr}
   10d78:	bl	11cc0 <mythread_init@plt+0x14>
   10d7c:	pop	{r3, pc}

Disassembly of section .plt:

00010d80 <pthread_mutex_unlock@plt-0x14>:
   10d80:	push	{lr}		; (str lr, [sp, #-4]!)
   10d84:	ldr	lr, [pc, #4]	; 10d90 <pthread_mutex_unlock@plt-0x4>
   10d88:	add	lr, pc, lr
   10d8c:	ldr	pc, [lr, #8]!
   10d90:	andseq	fp, r0, r0, ror r2

00010d94 <pthread_mutex_unlock@plt>:
   10d94:	add	ip, pc, #1048576	; 0x100000
   10d98:	add	ip, ip, #45056	; 0xb000
   10d9c:	ldr	pc, [ip, #624]!	; 0x270

00010da0 <mycore_realloc@plt>:
   10da0:	add	ip, pc, #1048576	; 0x100000
   10da4:	add	ip, ip, #45056	; 0xb000
   10da8:	ldr	pc, [ip, #616]!	; 0x268

00010dac <calloc@plt>:
   10dac:	add	ip, pc, #1048576	; 0x100000
   10db0:	add	ip, ip, #45056	; 0xb000
   10db4:	ldr	pc, [ip, #608]!	; 0x260

00010db8 <mycore_strcmp@plt>:
   10db8:	add	ip, pc, #1048576	; 0x100000
   10dbc:	add	ip, ip, #45056	; 0xb000
   10dc0:	ldr	pc, [ip, #600]!	; 0x258

00010dc4 <myhtml_tree_node_insert_root@plt>:
   10dc4:	add	ip, pc, #1048576	; 0x100000
   10dc8:	add	ip, ip, #45056	; 0xb000
   10dcc:	ldr	pc, [ip, #592]!	; 0x250

00010dd0 <mythread_queue_list_entry_delete@plt>:
   10dd0:	add	ip, pc, #1048576	; 0x100000
   10dd4:	add	ip, ip, #45056	; 0xb000
   10dd8:	ldr	pc, [ip, #584]!	; 0x248

00010ddc <myencoding_string_append_chunk@plt>:
   10ddc:	add	ip, pc, #1048576	; 0x100000
   10de0:	add	ip, ip, #45056	; 0xb000
   10de4:	ldr	pc, [ip, #576]!	; 0x240

00010de8 <myhtml_token_release_and_check_doctype_attributes@plt>:
   10de8:	add	ip, pc, #1048576	; 0x100000
   10dec:	add	ip, ip, #45056	; 0xb000
   10df0:	ldr	pc, [ip, #568]!	; 0x238

00010df4 <myencoding_detect_unicode@plt>:
   10df4:	add	ip, pc, #1048576	; 0x100000
   10df8:	add	ip, ip, #45056	; 0xb000
   10dfc:	ldr	pc, [ip, #560]!	; 0x230

00010e00 <myhtml_tree_element_in_scope_by_node@plt>:
   10e00:	add	ip, pc, #1048576	; 0x100000
   10e04:	add	ip, ip, #45056	; 0xb000
   10e08:	ldr	pc, [ip, #552]!	; 0x228

00010e0c <mythread_nanosleep_clean@plt>:
   10e0c:	add	ip, pc, #1048576	; 0x100000
   10e10:	add	ip, ip, #45056	; 0xb000
   10e14:	ldr	pc, [ip, #544]!	; 0x220

00010e18 <myhtml_tree_node_insert_html_element@plt>:
   10e18:	add	ip, pc, #1048576	; 0x100000
   10e1c:	add	ip, ip, #45056	; 0xb000
   10e20:	ldr	pc, [ip, #536]!	; 0x218

00010e24 <mcobject_async_init@plt>:
   10e24:	add	ip, pc, #1048576	; 0x100000
   10e28:	add	ip, ip, #45056	; 0xb000
   10e2c:	ldr	pc, [ip, #528]!	; 0x210

00010e30 <myhtml_tokenizer_fragment_init@plt>:
   10e30:	add	ip, pc, #1048576	; 0x100000
   10e34:	add	ip, ip, #45056	; 0xb000
   10e38:	ldr	pc, [ip, #520]!	; 0x208

00010e3c <mythread_nanosleep_create@plt>:
   10e3c:	add	ip, pc, #1048576	; 0x100000
   10e40:	add	ip, ip, #45056	; 0xb000
   10e44:	ldr	pc, [ip, #512]!	; 0x200

00010e48 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>:
   10e48:	add	ip, pc, #1048576	; 0x100000
   10e4c:	add	ip, ip, #45056	; 0xb000
   10e50:	ldr	pc, [ip, #504]!	; 0x1f8

00010e54 <myhtml_tokenizer_state_init@plt>:
   10e54:	add	ip, pc, #1048576	; 0x100000
   10e58:	add	ip, ip, #45056	; 0xb000
   10e5c:	ldr	pc, [ip, #496]!	; 0x1f0

00010e60 <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>:
   10e60:	add	ip, pc, #1048576	; 0x100000
   10e64:	add	ip, ip, #45056	; 0xb000
   10e68:	ldr	pc, [ip, #488]!	; 0x1e8

00010e6c <mycore_ustrcasecmp_without_checks_by_secondary@plt>:
   10e6c:	add	ip, pc, #1048576	; 0x100000
   10e70:	add	ip, ip, #45056	; 0xb000
   10e74:	ldr	pc, [ip, #480]!	; 0x1e0

00010e78 <myhtml_tree_wait_for_last_done_token@plt>:
   10e78:	add	ip, pc, #1048576	; 0x100000
   10e7c:	add	ip, ip, #45056	; 0xb000
   10e80:	ldr	pc, [ip, #472]!	; 0x1d8

00010e84 <mythread_queue_get_prev_node@plt>:
   10e84:	add	ip, pc, #1048576	; 0x100000
   10e88:	add	ip, ip, #45056	; 0xb000
   10e8c:	ldr	pc, [ip, #464]!	; 0x1d0

00010e90 <setbuf@plt>:
   10e90:	add	ip, pc, #1048576	; 0x100000
   10e94:	add	ip, ip, #45056	; 0xb000
   10e98:	ldr	pc, [ip, #456]!	; 0x1c8

00010e9c <myhtml_stream_buffer_destroy@plt>:
   10e9c:	add	ip, pc, #1048576	; 0x100000
   10ea0:	add	ip, ip, #45056	; 0xb000
   10ea4:	ldr	pc, [ip, #448]!	; 0x1c0

00010ea8 <myhtml_token_attr_match_case@plt>:
   10ea8:	add	ip, pc, #1048576	; 0x100000
   10eac:	add	ip, ip, #45056	; 0xb000
   10eb0:	ldr	pc, [ip, #440]!	; 0x1b8

00010eb4 <__cxa_finalize@plt>:
   10eb4:	add	ip, pc, #1048576	; 0x100000
   10eb8:	add	ip, ip, #45056	; 0xb000
   10ebc:	ldr	pc, [ip, #432]!	; 0x1b0

00010ec0 <mcobject_async_create@plt>:
   10ec0:	add	ip, pc, #1048576	; 0x100000
   10ec4:	add	ip, ip, #45056	; 0xb000
   10ec8:	ldr	pc, [ip, #424]!	; 0x1a8

00010ecc <mythread_queue_clean@plt>:
   10ecc:	add	ip, pc, #1048576	; 0x100000
   10ed0:	add	ip, ip, #45056	; 0xb000
   10ed4:	ldr	pc, [ip, #416]!	; 0x1a0

00010ed8 <mcsync_mutex_destroy@plt>:
   10ed8:	add	ip, pc, #1048576	; 0x100000
   10edc:	add	ip, ip, #45056	; 0xb000
   10ee0:	ldr	pc, [ip, #408]!	; 0x198

00010ee4 <myhtml_parser_worker@plt>:
   10ee4:	add	ip, pc, #1048576	; 0x100000
   10ee8:	add	ip, ip, #45056	; 0xb000
   10eec:	ldr	pc, [ip, #400]!	; 0x190

00010ef0 <mythread_thread_create@plt>:
   10ef0:	add	ip, pc, #1048576	; 0x100000
   10ef4:	add	ip, ip, #45056	; 0xb000
   10ef8:	ldr	pc, [ip, #392]!	; 0x188

00010efc <mcsync_create@plt>:
   10efc:	add	ip, pc, #1048576	; 0x100000
   10f00:	add	ip, ip, #45056	; 0xb000
   10f04:	ldr	pc, [ip, #384]!	; 0x180

00010f08 <fopen@plt>:
   10f08:	add	ip, pc, #1048576	; 0x100000
   10f0c:	add	ip, ip, #45056	; 0xb000
   10f10:	ldr	pc, [ip, #376]!	; 0x178

00010f14 <mcobject_destroy@plt>:
   10f14:	add	ip, pc, #1048576	; 0x100000
   10f18:	add	ip, ip, #45056	; 0xb000
   10f1c:	ldr	pc, [ip, #368]!	; 0x170

00010f20 <pthread_attr_destroy@plt>:
   10f20:	add	ip, pc, #1048576	; 0x100000
   10f24:	add	ip, ip, #45056	; 0xb000
   10f28:	ldr	pc, [ip, #360]!	; 0x168

00010f2c <myhtml_get_nodes_by_attribute_value_recursion_by_key@plt>:
   10f2c:	add	ip, pc, #1048576	; 0x100000
   10f30:	add	ip, ip, #45056	; 0xb000
   10f34:	ldr	pc, [ip, #352]!	; 0x160

00010f38 <pthread_mutex_destroy@plt>:
   10f38:	add	ip, pc, #1048576	; 0x100000
   10f3c:	add	ip, ip, #45056	; 0xb000
   10f40:	ldr	pc, [ip, #344]!	; 0x158

00010f44 <fflush@plt>:
   10f44:	add	ip, pc, #1048576	; 0x100000
   10f48:	add	ip, ip, #45056	; 0xb000
   10f4c:	ldr	pc, [ip, #336]!	; 0x150

00010f50 <mythread_create@plt>:
   10f50:	add	ip, pc, #1048576	; 0x100000
   10f54:	add	ip, ip, #45056	; 0xb000
   10f58:	ldr	pc, [ip, #328]!	; 0x148

00010f5c <myhtml_insertion_mode_in_foreign_content@plt>:
   10f5c:	add	ip, pc, #1048576	; 0x100000
   10f60:	add	ip, ip, #45056	; 0xb000
   10f64:	ldr	pc, [ip, #320]!	; 0x140

00010f68 <myhtml_tree_generate_all_implied_end_tags@plt>:
   10f68:	add	ip, pc, #1048576	; 0x100000
   10f6c:	add	ip, ip, #45056	; 0xb000
   10f70:	ldr	pc, [ip, #312]!	; 0x138

00010f74 <myencoding_string_append_lowercase_ascii@plt>:
   10f74:	add	ip, pc, #1048576	; 0x100000
   10f78:	add	ip, ip, #45056	; 0xb000
   10f7c:	ldr	pc, [ip, #304]!	; 0x130

00010f80 <myhread_increase_id_by_entry_id@plt>:
   10f80:	add	ip, pc, #1048576	; 0x100000
   10f84:	add	ip, ip, #45056	; 0xb000
   10f88:	ldr	pc, [ip, #296]!	; 0x128

00010f8c <myhtml_tree_incomming_buffer_make_data@plt>:
   10f8c:	add	ip, pc, #1048576	; 0x100000
   10f90:	add	ip, ip, #45056	; 0xb000
   10f94:	ldr	pc, [ip, #288]!	; 0x120

00010f98 <memmove@plt>:
   10f98:	add	ip, pc, #1048576	; 0x100000
   10f9c:	add	ip, ip, #45056	; 0xb000
   10fa0:	ldr	pc, [ip, #280]!	; 0x118

00010fa4 <mythread_thread_attr_init@plt>:
   10fa4:	add	ip, pc, #1048576	; 0x100000
   10fa8:	add	ip, ip, #45056	; 0xb000
   10fac:	ldr	pc, [ip, #272]!	; 0x110

00010fb0 <myhtml_rules_tree_dispatcher@plt>:
   10fb0:	add	ip, pc, #1048576	; 0x100000
   10fb4:	add	ip, ip, #45056	; 0xb000
   10fb8:	ldr	pc, [ip, #264]!	; 0x108

00010fbc <myhtml_get_nodes_by_attribute_key_recursion@plt>:
   10fbc:	add	ip, pc, #1048576	; 0x100000
   10fc0:	add	ip, ip, #45056	; 0xb000
   10fc4:	ldr	pc, [ip, #256]!	; 0x100

00010fc8 <free@plt>:
   10fc8:	add	ip, pc, #1048576	; 0x100000
   10fcc:	add	ip, ip, #45056	; 0xb000
   10fd0:	ldr	pc, [ip, #248]!	; 0xf8

00010fd4 <mythread_function_see_opt@plt>:
   10fd4:	add	ip, pc, #1048576	; 0x100000
   10fd8:	add	ip, ip, #45056	; 0xb000
   10fdc:	ldr	pc, [ip, #240]!	; 0xf0

00010fe0 <myhtml_insertion_fix_split_for_text_begin_ws@plt>:
   10fe0:	add	ip, pc, #1048576	; 0x100000
   10fe4:	add	ip, ip, #45056	; 0xb000
   10fe8:	ldr	pc, [ip, #232]!	; 0xe8

00010fec <mcsync_mutex_unlock@plt>:
   10fec:	add	ip, pc, #1048576	; 0x100000
   10ff0:	add	ip, ip, #45056	; 0xb000
   10ff4:	ldr	pc, [ip, #224]!	; 0xe0

00010ff8 <pthread_mutex_lock@plt>:
   10ff8:	add	ip, pc, #1048576	; 0x100000
   10ffc:	add	ip, ip, #45056	; 0xb000
   11000:	ldr	pc, [ip, #216]!	; 0xd8

00011004 <mycore_calloc@plt>:
   11004:	add	ip, pc, #1048576	; 0x100000
   11008:	add	ip, ip, #45056	; 0xb000
   1100c:	ldr	pc, [ip, #208]!	; 0xd0

00011010 <nanosleep@plt>:
   11010:	add	ip, pc, #1048576	; 0x100000
   11014:	add	ip, ip, #45056	; 0xb000
   11018:	ldr	pc, [ip, #200]!	; 0xc8

0001101c <myhtml_token_node_clone@plt>:
   1101c:	add	ip, pc, #1048576	; 0x100000
   11020:	add	ip, ip, #45056	; 0xb000
   11024:	ldr	pc, [ip, #192]!	; 0xc0

00011028 <ferror@plt>:
   11028:	add	ip, pc, #1048576	; 0x100000
   1102c:	add	ip, ip, #45056	; 0xb000
   11030:	ldr	pc, [ip, #184]!	; 0xb8

00011034 <memcpy@plt>:
   11034:	add	ip, pc, #1048576	; 0x100000
   11038:	add	ip, ip, #45056	; 0xb000
   1103c:	ldr	pc, [ip, #176]!	; 0xb0

00011040 <myhtml_token_adjust_mathml_attributes@plt>:
   11040:	add	ip, pc, #1048576	; 0x100000
   11044:	add	ip, ip, #45056	; 0xb000
   11048:	ldr	pc, [ip, #168]!	; 0xa8

0001104c <mcobject_free@plt>:
   1104c:	add	ip, pc, #1048576	; 0x100000
   11050:	add	ip, ip, #45056	; 0xb000
   11054:	ldr	pc, [ip, #160]!	; 0xa0

00011058 <myhtml_tree_node_insert_text@plt>:
   11058:	add	ip, pc, #1048576	; 0x100000
   1105c:	add	ip, ip, #45056	; 0xb000
   11060:	ldr	pc, [ip, #152]!	; 0x98

00011064 <myhtml_tag_set_category@plt>:
   11064:	add	ip, pc, #1048576	; 0x100000
   11068:	add	ip, ip, #45056	; 0xb000
   1106c:	ldr	pc, [ip, #144]!	; 0x90

00011070 <mcsync_spin_destroy@plt>:
   11070:	add	ip, pc, #1048576	; 0x100000
   11074:	add	ip, ip, #45056	; 0xb000
   11078:	ldr	pc, [ip, #136]!	; 0x88

0001107c <myhtml_tree_template_insertion_append@plt>:
   1107c:	add	ip, pc, #1048576	; 0x100000
   11080:	add	ip, ip, #45056	; 0xb000
   11084:	ldr	pc, [ip, #128]!	; 0x80

00011088 <mchar_async_realloc@plt>:
   11088:	add	ip, pc, #1048576	; 0x100000
   1108c:	add	ip, ip, #45056	; 0xb000
   11090:	ldr	pc, [ip, #120]!	; 0x78

00011094 <pthread_mutex_init@plt>:
   11094:	add	ip, pc, #1048576	; 0x100000
   11098:	add	ip, ip, #45056	; 0xb000
   1109c:	ldr	pc, [ip, #112]!	; 0x70

000110a0 <myhtml_tokenizer_state_bogus_comment@plt>:
   110a0:	add	ip, pc, #1048576	; 0x100000
   110a4:	add	ip, ip, #45056	; 0xb000
   110a8:	ldr	pc, [ip, #104]!	; 0x68

000110ac <myhtml_tree_node_create@plt>:
   110ac:	add	ip, pc, #1048576	; 0x100000
   110b0:	add	ip, ip, #45056	; 0xb000
   110b4:	ldr	pc, [ip, #96]!	; 0x60

000110b8 <myhtml_tree_node_delete_recursive@plt>:
   110b8:	add	ip, pc, #1048576	; 0x100000
   110bc:	add	ip, ip, #45056	; 0xb000
   110c0:	ldr	pc, [ip, #88]!	; 0x58

000110c4 <myhtml_tag_static_get_by_id@plt>:
   110c4:	add	ip, pc, #1048576	; 0x100000
   110c8:	add	ip, ip, #45056	; 0xb000
   110cc:	ldr	pc, [ip, #80]!	; 0x50

000110d0 <myhtml_tag_add@plt>:
   110d0:	add	ip, pc, #1048576	; 0x100000
   110d4:	add	ip, ip, #45056	; 0xb000
   110d8:	ldr	pc, [ip, #72]!	; 0x48

000110dc <mcobject_create@plt>:
   110dc:	add	ip, pc, #1048576	; 0x100000
   110e0:	add	ip, ip, #45056	; 0xb000
   110e4:	ldr	pc, [ip, #64]!	; 0x40

000110e8 <myhtml_queue_add@plt>:
   110e8:	add	ip, pc, #1048576	; 0x100000
   110ec:	add	ip, ip, #45056	; 0xb000
   110f0:	ldr	pc, [ip, #56]!	; 0x38

000110f4 <pthread_mutex_trylock@plt>:
   110f4:	add	ip, pc, #1048576	; 0x100000
   110f8:	add	ip, ip, #45056	; 0xb000
   110fc:	ldr	pc, [ip, #48]!	; 0x30

00011100 <myhtml_tree_is_mathml_integration_point@plt>:
   11100:	add	ip, pc, #1048576	; 0x100000
   11104:	add	ip, ip, #45056	; 0xb000
   11108:	ldr	pc, [ip, #40]!	; 0x28

0001110c <mcobject_async_free@plt>:
   1110c:	add	ip, pc, #1048576	; 0x100000
   11110:	add	ip, ip, #45056	; 0xb000
   11114:	ldr	pc, [ip, #32]!

00011118 <myhtml_insertion_mode_in_head@plt>:
   11118:	add	ip, pc, #1048576	; 0x100000
   1111c:	add	ip, ip, #45056	; 0xb000
   11120:	ldr	pc, [ip, #24]!

00011124 <ftell@plt>:
   11124:	add	ip, pc, #1048576	; 0x100000
   11128:	add	ip, ip, #45056	; 0xb000
   1112c:	ldr	pc, [ip, #16]!

00011130 <memcmp@plt>:
   11130:	add	ip, pc, #1048576	; 0x100000
   11134:	add	ip, ip, #45056	; 0xb000
   11138:	ldr	pc, [ip, #8]!

0001113c <mycore_incoming_buffer_add@plt>:
   1113c:	add	ip, pc, #1048576	; 0x100000
   11140:	add	ip, ip, #45056	; 0xb000
   11144:	ldr	pc, [ip, #0]!

00011148 <mythread_nanosleep_sleep@plt>:
   11148:	add	ip, pc, #1048576	; 0x100000
   1114c:	add	ip, ip, #40960	; 0xa000
   11150:	ldr	pc, [ip, #4088]!	; 0xff8

00011154 <mctree_destroy@plt>:
   11154:	add	ip, pc, #1048576	; 0x100000
   11158:	add	ip, ip, #40960	; 0xa000
   1115c:	ldr	pc, [ip, #4080]!	; 0xff0

00011160 <myhtml_tokenizer_chunk@plt>:
   11160:	add	ip, pc, #1048576	; 0x100000
   11164:	add	ip, ip, #40960	; 0xa000
   11168:	ldr	pc, [ip, #4072]!	; 0xfe8

0001116c <myhtml_tree_active_formatting_append@plt>:
   1116c:	add	ip, pc, #1048576	; 0x100000
   11170:	add	ip, ip, #40960	; 0xa000
   11174:	ldr	pc, [ip, #4064]!	; 0xfe0

00011178 <mythread_suspend@plt>:
   11178:	add	ip, pc, #1048576	; 0x100000
   1117c:	add	ip, ip, #40960	; 0xa000
   11180:	ldr	pc, [ip, #4056]!	; 0xfd8

00011184 <myhtml_tokenizer_state_destroy@plt>:
   11184:	add	ip, pc, #1048576	; 0x100000
   11188:	add	ip, ip, #40960	; 0xa000
   1118c:	ldr	pc, [ip, #4048]!	; 0xfd0

00011190 <mycore_incoming_buffer_find_by_position@plt>:
   11190:	add	ip, pc, #1048576	; 0x100000
   11194:	add	ip, ip, #40960	; 0xa000
   11198:	ldr	pc, [ip, #4040]!	; 0xfc8

0001119c <mythread_queue_list_destroy@plt>:
   1119c:	add	ip, pc, #1048576	; 0x100000
   111a0:	add	ip, ip, #40960	; 0xa000
   111a4:	ldr	pc, [ip, #4032]!	; 0xfc0

000111a8 <myhtml_tree_open_elements_pop_until_by_node@plt>:
   111a8:	add	ip, pc, #1048576	; 0x100000
   111ac:	add	ip, ip, #40960	; 0xa000
   111b0:	ldr	pc, [ip, #4024]!	; 0xfb8

000111b4 <myhtml_tokenizer_begin@plt>:
   111b4:	add	ip, pc, #1048576	; 0x100000
   111b8:	add	ip, ip, #40960	; 0xa000
   111bc:	ldr	pc, [ip, #4016]!	; 0xfb0

000111c0 <mchar_async_create@plt>:
   111c0:	add	ip, pc, #1048576	; 0x100000
   111c4:	add	ip, ip, #40960	; 0xa000
   111c8:	ldr	pc, [ip, #4008]!	; 0xfa8

000111cc <mycore_string_copy@plt>:
   111cc:	add	ip, pc, #1048576	; 0x100000
   111d0:	add	ip, ip, #40960	; 0xa000
   111d4:	ldr	pc, [ip, #4000]!	; 0xfa0

000111d8 <mythread_queue_list_entry_push@plt>:
   111d8:	add	ip, pc, #1048576	; 0x100000
   111dc:	add	ip, ip, #40960	; 0xa000
   111e0:	ldr	pc, [ip, #3992]!	; 0xf98

000111e4 <mythread_queue_get_current_node@plt>:
   111e4:	add	ip, pc, #1048576	; 0x100000
   111e8:	add	ip, ip, #40960	; 0xa000
   111ec:	ldr	pc, [ip, #3984]!	; 0xf90

000111f0 <myhtml_tree_open_elements_pop@plt>:
   111f0:	add	ip, pc, #1048576	; 0x100000
   111f4:	add	ip, ip, #40960	; 0xa000
   111f8:	ldr	pc, [ip, #3976]!	; 0xf88

000111fc <mcsync_destroy@plt>:
   111fc:	add	ip, pc, #1048576	; 0x100000
   11200:	add	ip, ip, #40960	; 0xa000
   11204:	ldr	pc, [ip, #3968]!	; 0xf80

00011208 <myencoding_result_clean@plt>:
   11208:	add	ip, pc, #1048576	; 0x100000
   1120c:	add	ip, ip, #40960	; 0xa000
   11210:	ldr	pc, [ip, #3960]!	; 0xf78

00011214 <myhtml_string_append_with_preprocessing@plt>:
   11214:	add	ip, pc, #1048576	; 0x100000
   11218:	add	ip, ip, #40960	; 0xa000
   1121c:	ldr	pc, [ip, #3952]!	; 0xf70

00011220 <myhtml_token_adjust_svg_attributes@plt>:
   11220:	add	ip, pc, #1048576	; 0x100000
   11224:	add	ip, ip, #40960	; 0xa000
   11228:	ldr	pc, [ip, #3944]!	; 0xf68

0001122c <realloc@plt>:
   1122c:	add	ip, pc, #1048576	; 0x100000
   11230:	add	ip, ip, #40960	; 0xa000
   11234:	ldr	pc, [ip, #3936]!	; 0xf60

00011238 <myhtml_tree_is_html_integration_point@plt>:
   11238:	add	ip, pc, #1048576	; 0x100000
   1123c:	add	ip, ip, #40960	; 0xa000
   11240:	ldr	pc, [ip, #3928]!	; 0xf58

00011244 <myhtml_tokenizer_calc_current_namespace@plt>:
   11244:	add	ip, pc, #1048576	; 0x100000
   11248:	add	ip, ip, #40960	; 0xa000
   1124c:	ldr	pc, [ip, #3920]!	; 0xf50

00011250 <myhtml_tree_open_elements_remove@plt>:
   11250:	add	ip, pc, #1048576	; 0x100000
   11254:	add	ip, ip, #40960	; 0xa000
   11258:	ldr	pc, [ip, #3912]!	; 0xf48

0001125c <mcsimple_clean@plt>:
   1125c:	add	ip, pc, #1048576	; 0x100000
   11260:	add	ip, ip, #40960	; 0xa000
   11264:	ldr	pc, [ip, #3904]!	; 0xf40

00011268 <myhtml_tree_node_insert_comment@plt>:
   11268:	add	ip, pc, #1048576	; 0x100000
   1126c:	add	ip, ip, #40960	; 0xa000
   11270:	ldr	pc, [ip, #3896]!	; 0xf38

00011274 <myhtml_tokenizer_end@plt>:
   11274:	add	ip, pc, #1048576	; 0x100000
   11278:	add	ip, ip, #40960	; 0xa000
   1127c:	ldr	pc, [ip, #3888]!	; 0xf30

00011280 <mycore_utils_avl_tree_list_all_nodes@plt>:
   11280:	add	ip, pc, #1048576	; 0x100000
   11284:	add	ip, ip, #40960	; 0xa000
   11288:	ldr	pc, [ip, #3880]!	; 0xf28

0001128c <mchar_async_node_add@plt>:
   1128c:	add	ip, pc, #1048576	; 0x100000
   11290:	add	ip, ip, #40960	; 0xa000
   11294:	ldr	pc, [ip, #3872]!	; 0xf20

00011298 <mycore_strncasecmp@plt>:
   11298:	add	ip, pc, #1048576	; 0x100000
   1129c:	add	ip, ip, #40960	; 0xa000
   112a0:	ldr	pc, [ip, #3864]!	; 0xf18

000112a4 <mcsimple_create@plt>:
   112a4:	add	ip, pc, #1048576	; 0x100000
   112a8:	add	ip, ip, #40960	; 0xa000
   112ac:	ldr	pc, [ip, #3856]!	; 0xf10

000112b0 <mythread_queue_destroy@plt>:
   112b0:	add	ip, pc, #1048576	; 0x100000
   112b4:	add	ip, ip, #40960	; 0xa000
   112b8:	ldr	pc, [ip, #3848]!	; 0xf08

000112bc <mycore_string_raw_copy@plt>:
   112bc:	add	ip, pc, #1048576	; 0x100000
   112c0:	add	ip, ip, #40960	; 0xa000
   112c4:	ldr	pc, [ip, #3840]!	; 0xf00

000112c8 <mycore_string_stay_only_whitespace@plt>:
   112c8:	add	ip, pc, #1048576	; 0x100000
   112cc:	add	ip, ip, #40960	; 0xa000
   112d0:	ldr	pc, [ip, #3832]!	; 0xef8

000112d4 <mctree_clean@plt>:
   112d4:	add	ip, pc, #1048576	; 0x100000
   112d8:	add	ip, ip, #40960	; 0xa000
   112dc:	ldr	pc, [ip, #3824]!	; 0xef0

000112e0 <myhtml_token_set_replacement_character_for_null_token@plt>:
   112e0:	add	ip, pc, #1048576	; 0x100000
   112e4:	add	ip, ip, #40960	; 0xa000
   112e8:	ldr	pc, [ip, #3816]!	; 0xee8

000112ec <fwrite@plt>:
   112ec:	add	ip, pc, #1048576	; 0x100000
   112f0:	add	ip, ip, #40960	; 0xa000
   112f4:	ldr	pc, [ip, #3808]!	; 0xee0

000112f8 <myencoding_prescan_stream_to_determine_encoding_skip_other@plt>:
   112f8:	add	ip, pc, #1048576	; 0x100000
   112fc:	add	ip, ip, #40960	; 0xa000
   11300:	ldr	pc, [ip, #3800]!	; 0xed8

00011304 <myhtml_tree_node_insert_by_mode@plt>:
   11304:	add	ip, pc, #1048576	; 0x100000
   11308:	add	ip, ip, #40960	; 0xa000
   1130c:	ldr	pc, [ip, #3792]!	; 0xed0

00011310 <myhtml_tree_node_insert_after@plt>:
   11310:	add	ip, pc, #1048576	; 0x100000
   11314:	add	ip, ip, #40960	; 0xa000
   11318:	ldr	pc, [ip, #3784]!	; 0xec8

0001131c <mycore_string_append_with_replacement_null_characters@plt>:
   1131c:	add	ip, pc, #1048576	; 0x100000
   11320:	add	ip, ip, #40960	; 0xa000
   11324:	ldr	pc, [ip, #3776]!	; 0xec0

00011328 <myhtml_tree_clear_stack_back_table_body_context@plt>:
   11328:	add	ip, pc, #1048576	; 0x100000
   1132c:	add	ip, ip, #40960	; 0xa000
   11330:	ldr	pc, [ip, #3768]!	; 0xeb8

00011334 <mcsimple_destroy@plt>:
   11334:	add	ip, pc, #1048576	; 0x100000
   11338:	add	ip, ip, #40960	; 0xa000
   1133c:	ldr	pc, [ip, #3760]!	; 0xeb0

00011340 <__mtree_insert_to_start@plt>:
   11340:	add	ip, pc, #1048576	; 0x100000
   11344:	add	ip, ip, #40960	; 0xa000
   11348:	ldr	pc, [ip, #3752]!	; 0xea8

0001134c <fread@plt>:
   1134c:	add	ip, pc, #1048576	; 0x100000
   11350:	add	ip, ip, #40960	; 0xa000
   11354:	ldr	pc, [ip, #3744]!	; 0xea0

00011358 <pthread_create@plt>:
   11358:	add	ip, pc, #1048576	; 0x100000
   1135c:	add	ip, ip, #40960	; 0xa000
   11360:	ldr	pc, [ip, #3736]!	; 0xe98

00011364 <myencoding_prescan_stream_to_determine_encoding_check_meta@plt>:
   11364:	add	ip, pc, #1048576	; 0x100000
   11368:	add	ip, ip, #40960	; 0xa000
   1136c:	ldr	pc, [ip, #3728]!	; 0xe90

00011370 <myhtml_tree_node_insert_before@plt>:
   11370:	add	ip, pc, #1048576	; 0x100000
   11374:	add	ip, ip, #40960	; 0xa000
   11378:	ldr	pc, [ip, #3720]!	; 0xe88

0001137c <myhtml_parser_token_data_to_string_charef@plt>:
   1137c:	add	ip, pc, #1048576	; 0x100000
   11380:	add	ip, ip, #40960	; 0xa000
   11384:	ldr	pc, [ip, #3712]!	; 0xe80

00011388 <mythread_thread_attr_clean@plt>:
   11388:	add	ip, pc, #1048576	; 0x100000
   1138c:	add	ip, ip, #40960	; 0xa000
   11390:	ldr	pc, [ip, #3704]!	; 0xe78

00011394 <myhtml_tree_clear_stack_back_table_row_context@plt>:
   11394:	add	ip, pc, #1048576	; 0x100000
   11398:	add	ip, ip, #40960	; 0xa000
   1139c:	ldr	pc, [ip, #3696]!	; 0xe70

000113a0 <myhtml_tokenizer_chunk_process@plt>:
   113a0:	add	ip, pc, #1048576	; 0x100000
   113a4:	add	ip, ip, #40960	; 0xa000
   113a8:	ldr	pc, [ip, #3688]!	; 0xe68

000113ac <myhtml_tree_tags_close_p@plt>:
   113ac:	add	ip, pc, #1048576	; 0x100000
   113b0:	add	ip, ip, #40960	; 0xa000
   113b4:	ldr	pc, [ip, #3680]!	; 0xe60

000113b8 <mcsimple_init@plt>:
   113b8:	add	ip, pc, #1048576	; 0x100000
   113bc:	add	ip, ip, #40960	; 0xa000
   113c0:	ldr	pc, [ip, #3672]!	; 0xe58

000113c4 <myencoding_string_append@plt>:
   113c4:	add	ip, pc, #1048576	; 0x100000
   113c8:	add	ip, ip, #40960	; 0xa000
   113cc:	ldr	pc, [ip, #3664]!	; 0xe50

000113d0 <myhtml_stream_buffer_clean@plt>:
   113d0:	add	ip, pc, #1048576	; 0x100000
   113d4:	add	ip, ip, #40960	; 0xa000
   113d8:	ldr	pc, [ip, #3656]!	; 0xe48

000113dc <mycore_utils_avl_tree_rotate_for_delete@plt>:
   113dc:	add	ip, pc, #1048576	; 0x100000
   113e0:	add	ip, ip, #40960	; 0xa000
   113e4:	ldr	pc, [ip, #3648]!	; 0xe40

000113e8 <myhtml_token_merged_two_token_string@plt>:
   113e8:	add	ip, pc, #1048576	; 0x100000
   113ec:	add	ip, ip, #40960	; 0xa000
   113f0:	ldr	pc, [ip, #3640]!	; 0xe38

000113f4 <myhtml_attribute_value@plt>:
   113f4:	add	ip, pc, #1048576	; 0x100000
   113f8:	add	ip, ip, #40960	; 0xa000
   113fc:	ldr	pc, [ip, #3632]!	; 0xe30

00011400 <myhtml_token_strict_doctype_by_token@plt>:
   11400:	add	ip, pc, #1048576	; 0x100000
   11404:	add	ip, ip, #40960	; 0xa000
   11408:	ldr	pc, [ip, #3624]!	; 0xe28

0001140c <mchar_async_init@plt>:
   1140c:	add	ip, pc, #1048576	; 0x100000
   11410:	add	ip, ip, #40960	; 0xa000
   11414:	ldr	pc, [ip, #3616]!	; 0xe20

00011418 <mycore_string_crop_whitespace_from_begin@plt>:
   11418:	add	ip, pc, #1048576	; 0x100000
   1141c:	add	ip, ip, #40960	; 0xa000
   11420:	ldr	pc, [ip, #3608]!	; 0xe18

00011424 <mythread_resume@plt>:
   11424:	add	ip, pc, #1048576	; 0x100000
   11428:	add	ip, ip, #40960	; 0xa000
   1142c:	ldr	pc, [ip, #3600]!	; 0xe10

00011430 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>:
   11430:	add	ip, pc, #1048576	; 0x100000
   11434:	add	ip, ip, #40960	; 0xa000
   11438:	ldr	pc, [ip, #3592]!	; 0xe08

0001143c <myhtml_create_stream_and_batch@plt>:
   1143c:	add	ip, pc, #1048576	; 0x100000
   11440:	add	ip, ip, #40960	; 0xa000
   11444:	ldr	pc, [ip, #3584]!	; 0xe00

00011448 <myhtml_data_process_entry_clean@plt>:
   11448:	add	ip, pc, #1048576	; 0x100000
   1144c:	add	ip, ip, #40960	; 0xa000
   11450:	ldr	pc, [ip, #3576]!	; 0xdf8

00011454 <mcsync_spin_init@plt>:
   11454:	add	ip, pc, #1048576	; 0x100000
   11458:	add	ip, ip, #40960	; 0xa000
   1145c:	ldr	pc, [ip, #3568]!	; 0xdf0

00011460 <malloc@plt>:
   11460:	add	ip, pc, #1048576	; 0x100000
   11464:	add	ip, ip, #40960	; 0xa000
   11468:	ldr	pc, [ip, #3560]!	; 0xde8

0001146c <mythread_check_status@plt>:
   1146c:	add	ip, pc, #1048576	; 0x100000
   11470:	add	ip, ip, #40960	; 0xa000
   11474:	ldr	pc, [ip, #3552]!	; 0xde0

00011478 <mycore_strcasecmp@plt>:
   11478:	add	ip, pc, #1048576	; 0x100000
   1147c:	add	ip, ip, #40960	; 0xa000
   11480:	ldr	pc, [ip, #3544]!	; 0xdd8

00011484 <mythread_queue_node_malloc_round@plt>:
   11484:	add	ip, pc, #1048576	; 0x100000
   11488:	add	ip, ip, #40960	; 0xa000
   1148c:	ldr	pc, [ip, #3536]!	; 0xdd0

00011490 <myhtml_tree_active_formatting_reconstruction@plt>:
   11490:	add	ip, pc, #1048576	; 0x100000
   11494:	add	ip, ip, #40960	; 0xa000
   11498:	ldr	pc, [ip, #3528]!	; 0xdc8

0001149c <myhtml_token_set_done@plt>:
   1149c:	add	ip, pc, #1048576	; 0x100000
   114a0:	add	ip, ip, #40960	; 0xa000
   114a4:	ldr	pc, [ip, #3520]!	; 0xdc0

000114a8 <mcsync_spin_create@plt>:
   114a8:	add	ip, pc, #1048576	; 0x100000
   114ac:	add	ip, ip, #40960	; 0xa000
   114b0:	ldr	pc, [ip, #3512]!	; 0xdb8

000114b4 <mythread_thread_join@plt>:
   114b4:	add	ip, pc, #1048576	; 0x100000
   114b8:	add	ip, ip, #40960	; 0xa000
   114bc:	ldr	pc, [ip, #3504]!	; 0xdb0

000114c0 <myhtml_token_attr_remove@plt>:
   114c0:	add	ip, pc, #1048576	; 0x100000
   114c4:	add	ip, ip, #40960	; 0xa000
   114c8:	ldr	pc, [ip, #3496]!	; 0xda8

000114cc <mythread_quit@plt>:
   114cc:	add	ip, pc, #1048576	; 0x100000
   114d0:	add	ip, ip, #40960	; 0xa000
   114d4:	ldr	pc, [ip, #3488]!	; 0xda0

000114d8 <mcsync_spin_lock@plt>:
   114d8:	add	ip, pc, #1048576	; 0x100000
   114dc:	add	ip, ip, #40960	; 0xa000
   114e0:	ldr	pc, [ip, #3480]!	; 0xd98

000114e4 <myhtml_token_clean@plt>:
   114e4:	add	ip, pc, #1048576	; 0x100000
   114e8:	add	ip, ip, #40960	; 0xa000
   114ec:	ldr	pc, [ip, #3472]!	; 0xd90

000114f0 <mythread_queue_list_get_count@plt>:
   114f0:	add	ip, pc, #1048576	; 0x100000
   114f4:	add	ip, ip, #40960	; 0xa000
   114f8:	ldr	pc, [ip, #3464]!	; 0xd88

000114fc <__gmon_start__@plt>:
   114fc:	add	ip, pc, #1048576	; 0x100000
   11500:	add	ip, ip, #40960	; 0xa000
   11504:	ldr	pc, [ip, #3456]!	; 0xd80

00011508 <mycore_string_init@plt>:
   11508:	add	ip, pc, #1048576	; 0x100000
   1150c:	add	ip, ip, #40960	; 0xa000
   11510:	ldr	pc, [ip, #3448]!	; 0xd78

00011514 <myhtml_tree_current_node@plt>:
   11514:	add	ip, pc, #1048576	; 0x100000
   11518:	add	ip, ip, #40960	; 0xa000
   1151c:	ldr	pc, [ip, #3440]!	; 0xd70

00011520 <mythread_mutex_close@plt>:
   11520:	add	ip, pc, #1048576	; 0x100000
   11524:	add	ip, ip, #40960	; 0xa000
   11528:	ldr	pc, [ip, #3432]!	; 0xd68

0001152c <myhtml_insertion_mode_in_body@plt>:
   1152c:	add	ip, pc, #1048576	; 0x100000
   11530:	add	ip, ip, #40960	; 0xa000
   11534:	ldr	pc, [ip, #3424]!	; 0xd60

00011538 <myhtml_tree_active_formatting_between_last_marker@plt>:
   11538:	add	ip, pc, #1048576	; 0x100000
   1153c:	add	ip, ip, #40960	; 0xa000
   11540:	ldr	pc, [ip, #3416]!	; 0xd58

00011544 <mctree_create@plt>:
   11544:	add	ip, pc, #1048576	; 0x100000
   11548:	add	ip, ip, #40960	; 0xa000
   1154c:	ldr	pc, [ip, #3408]!	; 0xd50

00011550 <strlen@plt>:
   11550:	add	ip, pc, #1048576	; 0x100000
   11554:	add	ip, ip, #40960	; 0xa000
   11558:	ldr	pc, [ip, #3400]!	; 0xd48

0001155c <myhtml_token_node_wait_for_done@plt>:
   1155c:	add	ip, pc, #1048576	; 0x100000
   11560:	add	ip, ip, #40960	; 0xa000
   11564:	ldr	pc, [ip, #3392]!	; 0xd40

00011568 <mycore_string_append_lowercase@plt>:
   11568:	add	ip, pc, #1048576	; 0x100000
   1156c:	add	ip, ip, #40960	; 0xa000
   11570:	ldr	pc, [ip, #3384]!	; 0xd38

00011574 <myhtml_token_node_attr_copy_with_check@plt>:
   11574:	add	ip, pc, #1048576	; 0x100000
   11578:	add	ip, ip, #40960	; 0xa000
   1157c:	ldr	pc, [ip, #3376]!	; 0xd30

00011580 <mythread_queue_init@plt>:
   11580:	add	ip, pc, #1048576	; 0x100000
   11584:	add	ip, ip, #40960	; 0xa000
   11588:	ldr	pc, [ip, #3368]!	; 0xd28

0001158c <myhtml_tree_node_add_child@plt>:
   1158c:	add	ip, pc, #1048576	; 0x100000
   11590:	add	ip, ip, #40960	; 0xa000
   11594:	ldr	pc, [ip, #3360]!	; 0xd20

00011598 <myhtml_tree_clean@plt>:
   11598:	add	ip, pc, #1048576	; 0x100000
   1159c:	add	ip, ip, #40960	; 0xa000
   115a0:	ldr	pc, [ip, #3352]!	; 0xd18

000115a4 <myhtml_tree_generate_implied_end_tags@plt>:
   115a4:	add	ip, pc, #1048576	; 0x100000
   115a8:	add	ip, ip, #40960	; 0xa000
   115ac:	ldr	pc, [ip, #3344]!	; 0xd10

000115b0 <mchar_async_node_clean@plt>:
   115b0:	add	ip, pc, #1048576	; 0x100000
   115b4:	add	ip, ip, #40960	; 0xa000
   115b8:	ldr	pc, [ip, #3336]!	; 0xd08

000115bc <myhtml_serialization_node_callback@plt>:
   115bc:	add	ip, pc, #1048576	; 0x100000
   115c0:	add	ip, ip, #40960	; 0xa000
   115c4:	ldr	pc, [ip, #3328]!	; 0xd00

000115c8 <mchar_async_free@plt>:
   115c8:	add	ip, pc, #1048576	; 0x100000
   115cc:	add	ip, ip, #40960	; 0xa000
   115d0:	ldr	pc, [ip, #3320]!	; 0xcf8

000115d4 <myhtml_tree_reset_insertion_mode_appropriately@plt>:
   115d4:	add	ip, pc, #1048576	; 0x100000
   115d8:	add	ip, ip, #40960	; 0xa000
   115dc:	ldr	pc, [ip, #3312]!	; 0xcf0

000115e0 <mcsimple_malloc@plt>:
   115e0:	add	ip, pc, #1048576	; 0x100000
   115e4:	add	ip, ip, #40960	; 0xa000
   115e8:	ldr	pc, [ip, #3304]!	; 0xce8

000115ec <mctree_search_lowercase@plt>:
   115ec:	add	ip, pc, #1048576	; 0x100000
   115f0:	add	ip, ip, #40960	; 0xa000
   115f4:	ldr	pc, [ip, #3296]!	; 0xce0

000115f8 <myhtml_data_process@plt>:
   115f8:	add	ip, pc, #1048576	; 0x100000
   115fc:	add	ip, ip, #40960	; 0xa000
   11600:	ldr	pc, [ip, #3288]!	; 0xcd8

00011604 <myhtml_token_attr_copy@plt>:
   11604:	add	ip, pc, #1048576	; 0x100000
   11608:	add	ip, ip, #40960	; 0xa000
   1160c:	ldr	pc, [ip, #3280]!	; 0xcd0

00011610 <mcobject_init@plt>:
   11610:	add	ip, pc, #1048576	; 0x100000
   11614:	add	ip, ip, #40960	; 0xa000
   11618:	ldr	pc, [ip, #3272]!	; 0xcc8

0001161c <myhtml_token_destroy@plt>:
   1161c:	add	ip, pc, #1048576	; 0x100000
   11620:	add	ip, ip, #40960	; 0xa000
   11624:	ldr	pc, [ip, #3264]!	; 0xcc0

00011628 <pthread_attr_init@plt>:
   11628:	add	ip, pc, #1048576	; 0x100000
   1162c:	add	ip, ip, #40960	; 0xa000
   11630:	ldr	pc, [ip, #3256]!	; 0xcb8

00011634 <myhtml_charef_find_by_pos@plt>:
   11634:	add	ip, pc, #1048576	; 0x100000
   11638:	add	ip, ip, #40960	; 0xa000
   1163c:	ldr	pc, [ip, #3248]!	; 0xcb0

00011640 <mythread_queue_list_create@plt>:
   11640:	add	ip, pc, #1048576	; 0x100000
   11644:	add	ip, ip, #40960	; 0xa000
   11648:	ldr	pc, [ip, #3240]!	; 0xca8

0001164c <myhtml_token_attr_delete_all@plt>:
   1164c:	add	ip, pc, #1048576	; 0x100000
   11650:	add	ip, ip, #40960	; 0xa000
   11654:	ldr	pc, [ip, #3232]!	; 0xca0

00011658 <myhtml_token_node_attr_append_with_convert_encoding@plt>:
   11658:	add	ip, pc, #1048576	; 0x100000
   1165c:	add	ip, ip, #40960	; 0xa000
   11660:	ldr	pc, [ip, #3224]!	; 0xc98

00011664 <myhtml_tree_open_elements_find_by_tag_idx@plt>:
   11664:	add	ip, pc, #1048576	; 0x100000
   11668:	add	ip, ip, #40960	; 0xa000
   1166c:	ldr	pc, [ip, #3216]!	; 0xc90

00011670 <myhtml_tree_active_formatting_append_with_check@plt>:
   11670:	add	ip, pc, #1048576	; 0x100000
   11674:	add	ip, ip, #40960	; 0xa000
   11678:	ldr	pc, [ip, #3208]!	; 0xc88

0001167c <myencoding_get_function_by_id@plt>:
   1167c:	add	ip, pc, #1048576	; 0x100000
   11680:	add	ip, ip, #40960	; 0xa000
   11684:	ldr	pc, [ip, #3200]!	; 0xc80

00011688 <myencoding_extracting_character_encoding_from_charset_with_found@plt>:
   11688:	add	ip, pc, #1048576	; 0x100000
   1168c:	add	ip, ip, #40960	; 0xa000
   11690:	ldr	pc, [ip, #3192]!	; 0xc78

00011694 <mcsync_lock@plt>:
   11694:	add	ip, pc, #1048576	; 0x100000
   11698:	add	ip, ip, #40960	; 0xa000
   1169c:	ldr	pc, [ip, #3184]!	; 0xc70

000116a0 <mcsync_init@plt>:
   116a0:	add	ip, pc, #1048576	; 0x100000
   116a4:	add	ip, ip, #40960	; 0xa000
   116a8:	ldr	pc, [ip, #3176]!	; 0xc68

000116ac <mcobject_async_node_clean@plt>:
   116ac:	add	ip, pc, #1048576	; 0x100000
   116b0:	add	ip, ip, #40960	; 0xa000
   116b4:	ldr	pc, [ip, #3168]!	; 0xc60

000116b8 <myhtml_tree_adoption_agency_algorithm@plt>:
   116b8:	add	ip, pc, #1048576	; 0x100000
   116bc:	add	ip, ip, #40960	; 0xa000
   116c0:	ldr	pc, [ip, #3160]!	; 0xc58

000116c4 <myhtml_tree_active_formatting_remove@plt>:
   116c4:	add	ip, pc, #1048576	; 0x100000
   116c8:	add	ip, ip, #40960	; 0xa000
   116cc:	ldr	pc, [ip, #3152]!	; 0xc50

000116d0 <memset@plt>:
   116d0:	add	ip, pc, #1048576	; 0x100000
   116d4:	add	ip, ip, #40960	; 0xa000
   116d8:	ldr	pc, [ip, #3144]!	; 0xc48

000116dc <myhread_entry_create@plt>:
   116dc:	add	ip, pc, #1048576	; 0x100000
   116e0:	add	ip, ip, #40960	; 0xa000
   116e4:	ldr	pc, [ip, #3136]!	; 0xc40

000116e8 <mcsync_mutex_create@plt>:
   116e8:	add	ip, pc, #1048576	; 0x100000
   116ec:	add	ip, ip, #40960	; 0xa000
   116f0:	ldr	pc, [ip, #3128]!	; 0xc38

000116f4 <mycore_string_append@plt>:
   116f4:	add	ip, pc, #1048576	; 0x100000
   116f8:	add	ip, ip, #40960	; 0xa000
   116fc:	ldr	pc, [ip, #3120]!	; 0xc30

00011700 <mcobject_async_chunk_malloc_without_lock@plt>:
   11700:	add	ip, pc, #1048576	; 0x100000
   11704:	add	ip, ip, #40960	; 0xa000
   11708:	ldr	pc, [ip, #3112]!	; 0xc28

0001170c <strncpy@plt>:
   1170c:	add	ip, pc, #1048576	; 0x100000
   11710:	add	ip, ip, #40960	; 0xa000
   11714:	ldr	pc, [ip, #3104]!	; 0xc20

00011718 <pthread_cancel@plt>:
   11718:	add	ip, pc, #1048576	; 0x100000
   1171c:	add	ip, ip, #40960	; 0xa000
   11720:	ldr	pc, [ip, #3096]!	; 0xc18

00011724 <myhtml_token_attr_create@plt>:
   11724:	add	ip, pc, #1048576	; 0x100000
   11728:	add	ip, ip, #40960	; 0xa000
   1172c:	ldr	pc, [ip, #3088]!	; 0xc10

00011730 <mchar_async_malloc@plt>:
   11730:	add	ip, pc, #1048576	; 0x100000
   11734:	add	ip, ip, #40960	; 0xa000
   11738:	ldr	pc, [ip, #3080]!	; 0xc08

0001173c <myhtml_tag_static_search@plt>:
   1173c:	add	ip, pc, #1048576	; 0x100000
   11740:	add	ip, ip, #40960	; 0xa000
   11744:	ldr	pc, [ip, #3072]!	; 0xc00

00011748 <myhtml_data_process_end@plt>:
   11748:	add	ip, pc, #1048576	; 0x100000
   1174c:	add	ip, ip, #40960	; 0xa000
   11750:	ldr	pc, [ip, #3064]!	; 0xbf8

00011754 <myhtml_stream_buffer_add_entry@plt>:
   11754:	add	ip, pc, #1048576	; 0x100000
   11758:	add	ip, ip, #40960	; 0xa000
   1175c:	ldr	pc, [ip, #3056]!	; 0xbf0

00011760 <myhtml_tree_open_elements_pop_until@plt>:
   11760:	add	ip, pc, #1048576	; 0x100000
   11764:	add	ip, ip, #40960	; 0xa000
   11768:	ldr	pc, [ip, #3048]!	; 0xbe8

0001176c <mctree_insert@plt>:
   1176c:	add	ip, pc, #1048576	; 0x100000
   11770:	add	ip, ip, #40960	; 0xa000
   11774:	ldr	pc, [ip, #3040]!	; 0xbe0

00011778 <mycore_string_realloc@plt>:
   11778:	add	ip, pc, #1048576	; 0x100000
   1177c:	add	ip, ip, #40960	; 0xa000
   11780:	ldr	pc, [ip, #3032]!	; 0xbd8

00011784 <myhtml_tree_node_insert@plt>:
   11784:	add	ip, pc, #1048576	; 0x100000
   11788:	add	ip, ip, #40960	; 0xa000
   1178c:	ldr	pc, [ip, #3024]!	; 0xbd0

00011790 <mythread_queue_list_entry_wait_for_done@plt>:
   11790:	add	ip, pc, #1048576	; 0x100000
   11794:	add	ip, ip, #40960	; 0xa000
   11798:	ldr	pc, [ip, #3016]!	; 0xbc8

0001179c <myhtml_tree_open_elements_append@plt>:
   1179c:	add	ip, pc, #1048576	; 0x100000
   117a0:	add	ip, ip, #40960	; 0xa000
   117a4:	ldr	pc, [ip, #3008]!	; 0xbc0

000117a8 <mythread_queue_list_entry_clean@plt>:
   117a8:	add	ip, pc, #1048576	; 0x100000
   117ac:	add	ip, ip, #40960	; 0xa000
   117b0:	ldr	pc, [ip, #3000]!	; 0xbb8

000117b4 <mythread_destroy@plt>:
   117b4:	add	ip, pc, #1048576	; 0x100000
   117b8:	add	ip, ip, #40960	; 0xa000
   117bc:	ldr	pc, [ip, #2992]!	; 0xbb0

000117c0 <myhtml_tree_template_insertion_pop@plt>:
   117c0:	add	ip, pc, #1048576	; 0x100000
   117c4:	add	ip, ip, #40960	; 0xa000
   117c8:	ldr	pc, [ip, #2984]!	; 0xba8

000117cc <mythread_thread_destroy@plt>:
   117cc:	add	ip, pc, #1048576	; 0x100000
   117d0:	add	ip, ip, #40960	; 0xa000
   117d4:	ldr	pc, [ip, #2976]!	; 0xba0

000117d8 <fclose@plt>:
   117d8:	add	ip, pc, #1048576	; 0x100000
   117dc:	add	ip, ip, #40960	; 0xa000
   117e0:	ldr	pc, [ip, #2968]!	; 0xb98

000117e4 <myhtml_token_node_create@plt>:
   117e4:	add	ip, pc, #1048576	; 0x100000
   117e8:	add	ip, ip, #40960	; 0xa000
   117ec:	ldr	pc, [ip, #2960]!	; 0xb90

000117f0 <mycore_utils_avl_tree_node_balance@plt>:
   117f0:	add	ip, pc, #1048576	; 0x100000
   117f4:	add	ip, ip, #40960	; 0xa000
   117f8:	ldr	pc, [ip, #2952]!	; 0xb88

000117fc <myhtml_tag_get_by_id@plt>:
   117fc:	add	ip, pc, #1048576	; 0x100000
   11800:	add	ip, ip, #40960	; 0xa000
   11804:	ldr	pc, [ip, #2944]!	; 0xb80

00011808 <myhtml_tree_appropriate_place_inserting_in_tree@plt>:
   11808:	add	ip, pc, #1048576	; 0x100000
   1180c:	add	ip, ip, #40960	; 0xa000
   11810:	ldr	pc, [ip, #2936]!	; 0xb78

00011814 <mycore_utils_mhash_rebuld@plt>:
   11814:	add	ip, pc, #1048576	; 0x100000
   11818:	add	ip, ip, #40960	; 0xa000
   1181c:	ldr	pc, [ip, #2928]!	; 0xb70

00011820 <myhtml_charef_get_first_position@plt>:
   11820:	add	ip, pc, #1048576	; 0x100000
   11824:	add	ip, ip, #40960	; 0xa000
   11828:	ldr	pc, [ip, #2920]!	; 0xb68

0001182c <mcobject_malloc@plt>:
   1182c:	add	ip, pc, #1048576	; 0x100000
   11830:	add	ip, ip, #40960	; 0xa000
   11834:	ldr	pc, [ip, #2912]!	; 0xb60

00011838 <mcsync_spin_clean@plt>:
   11838:	add	ip, pc, #1048576	; 0x100000
   1183c:	add	ip, ip, #40960	; 0xa000
   11840:	ldr	pc, [ip, #2904]!	; 0xb58

00011844 <mythread_queue_create@plt>:
   11844:	add	ip, pc, #1048576	; 0x100000
   11848:	add	ip, ip, #40960	; 0xa000
   1184c:	ldr	pc, [ip, #2896]!	; 0xb50

00011850 <mcobject_async_node_add@plt>:
   11850:	add	ip, pc, #1048576	; 0x100000
   11854:	add	ip, ip, #40960	; 0xa000
   11858:	ldr	pc, [ip, #2888]!	; 0xb48

0001185c <myhtml_tokenizer_doctype_system_identifier_dsq@plt>:
   1185c:	add	ip, pc, #1048576	; 0x100000
   11860:	add	ip, ip, #40960	; 0xa000
   11864:	ldr	pc, [ip, #2880]!	; 0xb40

00011868 <myhtml_is_html_node@plt>:
   11868:	add	ip, pc, #1048576	; 0x100000
   1186c:	add	ip, ip, #40960	; 0xa000
   11870:	ldr	pc, [ip, #2872]!	; 0xb38

00011874 <myhtml_parser_token_data_to_string@plt>:
   11874:	add	ip, pc, #1048576	; 0x100000
   11878:	add	ip, ip, #40960	; 0xa000
   1187c:	ldr	pc, [ip, #2864]!	; 0xb30

00011880 <mythread_stop@plt>:
   11880:	add	ip, pc, #1048576	; 0x100000
   11884:	add	ip, ip, #40960	; 0xa000
   11888:	ldr	pc, [ip, #2856]!	; 0xb28

0001188c <myhtml_tag_name_by_id@plt>:
   1188c:	add	ip, pc, #1048576	; 0x100000
   11890:	add	ip, ip, #40960	; 0xa000
   11894:	ldr	pc, [ip, #2848]!	; 0xb20

00011898 <mythread_mutex_create@plt>:
   11898:	add	ip, pc, #1048576	; 0x100000
   1189c:	add	ip, ip, #40960	; 0xa000
   118a0:	ldr	pc, [ip, #2840]!	; 0xb18

000118a4 <myhtml_attribute_key@plt>:
   118a4:	add	ip, pc, #1048576	; 0x100000
   118a8:	add	ip, ip, #40960	; 0xa000
   118ac:	ldr	pc, [ip, #2832]!	; 0xb10

000118b0 <mcobject_async_destroy@plt>:
   118b0:	add	ip, pc, #1048576	; 0x100000
   118b4:	add	ip, ip, #40960	; 0xa000
   118b8:	ldr	pc, [ip, #2824]!	; 0xb08

000118bc <myhtml_token_attr_compare@plt>:
   118bc:	add	ip, pc, #1048576	; 0x100000
   118c0:	add	ip, ip, #40960	; 0xa000
   118c4:	ldr	pc, [ip, #2816]!	; 0xb00

000118c8 <mcsync_mutex_init@plt>:
   118c8:	add	ip, pc, #1048576	; 0x100000
   118cc:	add	ip, ip, #40960	; 0xa000
   118d0:	ldr	pc, [ip, #2808]!	; 0xaf8

000118d4 <myhtml_tag_init@plt>:
   118d4:	add	ip, pc, #1048576	; 0x100000
   118d8:	add	ip, ip, #40960	; 0xa000
   118dc:	ldr	pc, [ip, #2800]!	; 0xaf0

000118e0 <pthread_join@plt>:
   118e0:	add	ip, pc, #1048576	; 0x100000
   118e4:	add	ip, ip, #40960	; 0xa000
   118e8:	ldr	pc, [ip, #2792]!	; 0xae8

000118ec <myhtml_tag_get_by_name@plt>:
   118ec:	add	ip, pc, #1048576	; 0x100000
   118f0:	add	ip, ip, #40960	; 0xa000
   118f4:	ldr	pc, [ip, #2784]!	; 0xae0

000118f8 <myhtml_stream_buffer_current_entry@plt>:
   118f8:	add	ip, pc, #1048576	; 0x100000
   118fc:	add	ip, ip, #40960	; 0xa000
   11900:	ldr	pc, [ip, #2776]!	; 0xad8

00011904 <mchar_async_chunk_malloc_without_lock@plt>:
   11904:	add	ip, pc, #1048576	; 0x100000
   11908:	add	ip, ip, #40960	; 0xa000
   1190c:	ldr	pc, [ip, #2768]!	; 0xad0

00011910 <mcobject_async_malloc@plt>:
   11910:	add	ip, pc, #1048576	; 0x100000
   11914:	add	ip, ip, #40960	; 0xa000
   11918:	ldr	pc, [ip, #2760]!	; 0xac8

0001191c <mchar_async_clean@plt>:
   1191c:	add	ip, pc, #1048576	; 0x100000
   11920:	add	ip, ip, #40960	; 0xa000
   11924:	ldr	pc, [ip, #2752]!	; 0xac0

00011928 <myhtml_token_adjust_foreign_attributes@plt>:
   11928:	add	ip, pc, #1048576	; 0x100000
   1192c:	add	ip, ip, #40960	; 0xa000
   11930:	ldr	pc, [ip, #2744]!	; 0xab8

00011934 <myhtml_rules_init@plt>:
   11934:	add	ip, pc, #1048576	; 0x100000
   11938:	add	ip, ip, #40960	; 0xa000
   1193c:	ldr	pc, [ip, #2736]!	; 0xab0

00011940 <mythread_nanosleep_destroy@plt>:
   11940:	add	ip, pc, #1048576	; 0x100000
   11944:	add	ip, ip, #40960	; 0xa000
   11948:	ldr	pc, [ip, #2728]!	; 0xaa8

0001194c <myhtml_string_before_append_any_preprocessing@plt>:
   1194c:	add	ip, pc, #1048576	; 0x100000
   11950:	add	ip, ip, #40960	; 0xa000
   11954:	ldr	pc, [ip, #2720]!	; 0xaa0

00011958 <myhtml_check_tag_parser@plt>:
   11958:	add	ip, pc, #1048576	; 0x100000
   1195c:	add	ip, ip, #40960	; 0xa000
   11960:	ldr	pc, [ip, #2712]!	; 0xa98

00011964 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>:
   11964:	add	ip, pc, #1048576	; 0x100000
   11968:	add	ip, ip, #40960	; 0xa000
   1196c:	ldr	pc, [ip, #2704]!	; 0xa90

00011970 <mchar_async_node_delete@plt>:
   11970:	add	ip, pc, #1048576	; 0x100000
   11974:	add	ip, ip, #40960	; 0xa000
   11978:	ldr	pc, [ip, #2696]!	; 0xa88

0001197c <mchar_async_crop_first_chars_without_cache@plt>:
   1197c:	add	ip, pc, #1048576	; 0x100000
   11980:	add	ip, ip, #40960	; 0xa000
   11984:	ldr	pc, [ip, #2688]!	; 0xa80

00011988 <_myhtml_tokenizer_state_andata_end_tag_name@plt>:
   11988:	add	ip, pc, #1048576	; 0x100000
   1198c:	add	ip, ip, #40960	; 0xa000
   11990:	ldr	pc, [ip, #2680]!	; 0xa78

00011994 <mchar_async_cache_add@plt>:
   11994:	add	ip, pc, #1048576	; 0x100000
   11998:	add	ip, ip, #40960	; 0xa000
   1199c:	ldr	pc, [ip, #2672]!	; 0xa70

000119a0 <myencoding_string_append_chunk_lowercase_ascii@plt>:
   119a0:	add	ip, pc, #1048576	; 0x100000
   119a4:	add	ip, ip, #40960	; 0xa000
   119a8:	ldr	pc, [ip, #2664]!	; 0xa68

000119ac <mycore_malloc@plt>:
   119ac:	add	ip, pc, #1048576	; 0x100000
   119b0:	add	ip, ip, #40960	; 0xa000
   119b4:	ldr	pc, [ip, #2656]!	; 0xa60

000119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>:
   119b8:	add	ip, pc, #1048576	; 0x100000
   119bc:	add	ip, ip, #40960	; 0xa000
   119c0:	ldr	pc, [ip, #2648]!	; 0xa58

000119c4 <mythread_queue_node_malloc_limit@plt>:
   119c4:	add	ip, pc, #1048576	; 0x100000
   119c8:	add	ip, ip, #40960	; 0xa000
   119cc:	ldr	pc, [ip, #2640]!	; 0xa50

000119d0 <myhtml_tree_node_insert_by_token@plt>:
   119d0:	add	ip, pc, #1048576	; 0x100000
   119d4:	add	ip, ip, #40960	; 0xa000
   119d8:	ldr	pc, [ip, #2632]!	; 0xa48

000119dc <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>:
   119dc:	add	ip, pc, #1048576	; 0x100000
   119e0:	add	ip, ip, #40960	; 0xa000
   119e4:	ldr	pc, [ip, #2624]!	; 0xa40

000119e8 <myhtml_tree_node_free@plt>:
   119e8:	add	ip, pc, #1048576	; 0x100000
   119ec:	add	ip, ip, #40960	; 0xa000
   119f0:	ldr	pc, [ip, #2616]!	; 0xa38

000119f4 <mythread_mutex_post@plt>:
   119f4:	add	ip, pc, #1048576	; 0x100000
   119f8:	add	ip, ip, #40960	; 0xa000
   119fc:	ldr	pc, [ip, #2608]!	; 0xa30

00011a00 <mycore_string_clean@plt>:
   11a00:	add	ip, pc, #1048576	; 0x100000
   11a04:	add	ip, ip, #40960	; 0xa000
   11a08:	ldr	pc, [ip, #2600]!	; 0xa28

00011a0c <mythread_queue_list_entry_make_batch@plt>:
   11a0c:	add	ip, pc, #1048576	; 0x100000
   11a10:	add	ip, ip, #40960	; 0xa000
   11a14:	ldr	pc, [ip, #2592]!	; 0xa20

00011a18 <myhtml_tag_create@plt>:
   11a18:	add	ip, pc, #1048576	; 0x100000
   11a1c:	add	ip, ip, #40960	; 0xa000
   11a20:	ldr	pc, [ip, #2584]!	; 0xa18

00011a24 <myhtml_tree_close_cell@plt>:
   11a24:	add	ip, pc, #1048576	; 0x100000
   11a28:	add	ip, ip, #40960	; 0xa000
   11a2c:	ldr	pc, [ip, #2576]!	; 0xa10

00011a30 <myhtml_tree_adjusted_current_node@plt>:
   11a30:	add	ip, pc, #1048576	; 0x100000
   11a34:	add	ip, ip, #40960	; 0xa000
   11a38:	ldr	pc, [ip, #2568]!	; 0xa08

00011a3c <myhtml_stream_buffer_init@plt>:
   11a3c:	add	ip, pc, #1048576	; 0x100000
   11a40:	add	ip, ip, #40960	; 0xa000
   11a44:	ldr	pc, [ip, #2560]!	; 0xa00

00011a48 <mythread_queue_node_clean@plt>:
   11a48:	add	ip, pc, #1048576	; 0x100000
   11a4c:	add	ip, ip, #40960	; 0xa000
   11a50:	ldr	pc, [ip, #2552]!	; 0x9f8

00011a54 <myhtml_tree_node_insert_foreign_element@plt>:
   11a54:	add	ip, pc, #1048576	; 0x100000
   11a58:	add	ip, ip, #40960	; 0xa000
   11a5c:	ldr	pc, [ip, #2544]!	; 0x9f0

00011a60 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>:
   11a60:	add	ip, pc, #1048576	; 0x100000
   11a64:	add	ip, ip, #40960	; 0xa000
   11a68:	ldr	pc, [ip, #2536]!	; 0x9e8

00011a6c <mythread_mutex_wait@plt>:
   11a6c:	add	ip, pc, #1048576	; 0x100000
   11a70:	add	ip, ip, #40960	; 0xa000
   11a74:	ldr	pc, [ip, #2528]!	; 0x9e0

00011a78 <mchar_async_destroy@plt>:
   11a78:	add	ip, pc, #1048576	; 0x100000
   11a7c:	add	ip, ip, #40960	; 0xa000
   11a80:	ldr	pc, [ip, #2520]!	; 0x9d8

00011a84 <mycore_utils_mhash_add_with_choice@plt>:
   11a84:	add	ip, pc, #1048576	; 0x100000
   11a88:	add	ip, ip, #40960	; 0xa000
   11a8c:	ldr	pc, [ip, #2512]!	; 0x9d0

00011a90 <myhtml_tree_node_delete@plt>:
   11a90:	add	ip, pc, #1048576	; 0x100000
   11a94:	add	ip, ip, #40960	; 0xa000
   11a98:	ldr	pc, [ip, #2504]!	; 0x9c8

00011a9c <mycore_free@plt>:
   11a9c:	add	ip, pc, #1048576	; 0x100000
   11aa0:	add	ip, ip, #40960	; 0xa000
   11aa4:	ldr	pc, [ip, #2496]!	; 0x9c0

00011aa8 <mythread_queue_list_wait_for_done@plt>:
   11aa8:	add	ip, pc, #1048576	; 0x100000
   11aac:	add	ip, ip, #40960	; 0xa000
   11ab0:	ldr	pc, [ip, #2488]!	; 0x9b8

00011ab4 <mycore_string_whitespace_from_begin@plt>:
   11ab4:	add	ip, pc, #1048576	; 0x100000
   11ab8:	add	ip, ip, #40960	; 0xa000
   11abc:	ldr	pc, [ip, #2480]!	; 0x9b0

00011ac0 <myhtml_tree_node_remove@plt>:
   11ac0:	add	ip, pc, #1048576	; 0x100000
   11ac4:	add	ip, ip, #40960	; 0xa000
   11ac8:	ldr	pc, [ip, #2472]!	; 0x9a8

00011acc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>:
   11acc:	add	ip, pc, #1048576	; 0x100000
   11ad0:	add	ip, ip, #40960	; 0xa000
   11ad4:	ldr	pc, [ip, #2464]!	; 0x9a0

00011ad8 <myhtml_tree_node_insert_doctype@plt>:
   11ad8:	add	ip, pc, #1048576	; 0x100000
   11adc:	add	ip, ip, #40960	; 0xa000
   11ae0:	ldr	pc, [ip, #2456]!	; 0x998

00011ae4 <myhtml_tag_destroy@plt>:
   11ae4:	add	ip, pc, #1048576	; 0x100000
   11ae8:	add	ip, ip, #40960	; 0xa000
   11aec:	ldr	pc, [ip, #2448]!	; 0x990

00011af0 <mcsync_mutex_clean@plt>:
   11af0:	add	ip, pc, #1048576	; 0x100000
   11af4:	add	ip, ip, #40960	; 0xa000
   11af8:	ldr	pc, [ip, #2440]!	; 0x988

00011afc <myhtml_tree_active_formatting_up_to_last_marker@plt>:
   11afc:	add	ip, pc, #1048576	; 0x100000
   11b00:	add	ip, ip, #40960	; 0xa000
   11b04:	ldr	pc, [ip, #2432]!	; 0x980

00011b08 <myhtml_stream_buffer_create@plt>:
   11b08:	add	ip, pc, #1048576	; 0x100000
   11b0c:	add	ip, ip, #40960	; 0xa000
   11b10:	ldr	pc, [ip, #2424]!	; 0x978

00011b14 <myhtml_tree_appropriate_place_inserting@plt>:
   11b14:	add	ip, pc, #1048576	; 0x100000
   11b18:	add	ip, ip, #40960	; 0xa000
   11b1c:	ldr	pc, [ip, #2416]!	; 0x970

00011b20 <myencoding_codepoint_to_ascii_utf_8@plt>:
   11b20:	add	ip, pc, #1048576	; 0x100000
   11b24:	add	ip, ip, #40960	; 0xa000
   11b28:	ldr	pc, [ip, #2408]!	; 0x968

00011b2c <myhtml_token_attr_remove_by_name@plt>:
   11b2c:	add	ip, pc, #1048576	; 0x100000
   11b30:	add	ip, ip, #40960	; 0xa000
   11b34:	ldr	pc, [ip, #2400]!	; 0x960

00011b38 <myhtml_token_attr_by_name@plt>:
   11b38:	add	ip, pc, #1048576	; 0x100000
   11b3c:	add	ip, ip, #40960	; 0xa000
   11b40:	ldr	pc, [ip, #2392]!	; 0x958

00011b44 <mcsync_unlock@plt>:
   11b44:	add	ip, pc, #1048576	; 0x100000
   11b48:	add	ip, ip, #40960	; 0xa000
   11b4c:	ldr	pc, [ip, #2384]!	; 0x950

00011b50 <myhtml_tree_token_list_append@plt>:
   11b50:	add	ip, pc, #1048576	; 0x100000
   11b54:	add	ip, ip, #40960	; 0xa000
   11b58:	ldr	pc, [ip, #2376]!	; 0x948

00011b5c <mythread_queue_list_entry_make_stream@plt>:
   11b5c:	add	ip, pc, #1048576	; 0x100000
   11b60:	add	ip, ip, #40960	; 0xa000
   11b64:	ldr	pc, [ip, #2368]!	; 0x940

00011b68 <mycore_strncmp@plt>:
   11b68:	add	ip, pc, #1048576	; 0x100000
   11b6c:	add	ip, ip, #40960	; 0xa000
   11b70:	ldr	pc, [ip, #2360]!	; 0x938

00011b74 <myhtml_tree_element_in_scope@plt>:
   11b74:	add	ip, pc, #1048576	; 0x100000
   11b78:	add	ip, ip, #40960	; 0xa000
   11b7c:	ldr	pc, [ip, #2352]!	; 0x930

00011b80 <fseek@plt>:
   11b80:	add	ip, pc, #1048576	; 0x100000
   11b84:	add	ip, ip, #40960	; 0xa000
   11b88:	ldr	pc, [ip, #2344]!	; 0x928

00011b8c <myhtml_node_clone@plt>:
   11b8c:	add	ip, pc, #1048576	; 0x100000
   11b90:	add	ip, ip, #40960	; 0xa000
   11b94:	ldr	pc, [ip, #2336]!	; 0x920

00011b98 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>:
   11b98:	add	ip, pc, #1048576	; 0x100000
   11b9c:	add	ip, ip, #40960	; 0xa000
   11ba0:	ldr	pc, [ip, #2328]!	; 0x918

00011ba4 <pthread_attr_setdetachstate@plt>:
   11ba4:	add	ip, pc, #1048576	; 0x100000
   11ba8:	add	ip, ip, #40960	; 0xa000
   11bac:	ldr	pc, [ip, #2320]!	; 0x910

00011bb0 <mchar_async_cache_delete@plt>:
   11bb0:	add	ip, pc, #1048576	; 0x100000
   11bb4:	add	ip, ip, #40960	; 0xa000
   11bb8:	ldr	pc, [ip, #2312]!	; 0x908

00011bbc <mcobject_clean@plt>:
   11bbc:	add	ip, pc, #1048576	; 0x100000
   11bc0:	add	ip, ip, #40960	; 0xa000
   11bc4:	ldr	pc, [ip, #2304]!	; 0x900

00011bc8 <myhtml_token_node_clean@plt>:
   11bc8:	add	ip, pc, #1048576	; 0x100000
   11bcc:	add	ip, ip, #40960	; 0xa000
   11bd0:	ldr	pc, [ip, #2296]!	; 0x8f8

00011bd4 <myhtml_token_delete@plt>:
   11bd4:	add	ip, pc, #1048576	; 0x100000
   11bd8:	add	ip, ip, #40960	; 0xa000
   11bdc:	ldr	pc, [ip, #2288]!	; 0x8f0

00011be0 <strncmp@plt>:
   11be0:	add	ip, pc, #1048576	; 0x100000
   11be4:	add	ip, ip, #40960	; 0xa000
   11be8:	ldr	pc, [ip, #2280]!	; 0x8e8

00011bec <mcsimple_get_by_absolute_position@plt>:
   11bec:	add	ip, pc, #1048576	; 0x100000
   11bf0:	add	ip, ip, #40960	; 0xa000
   11bf4:	ldr	pc, [ip, #2272]!	; 0x8e0

00011bf8 <mcsync_mutex_try_lock@plt>:
   11bf8:	add	ip, pc, #1048576	; 0x100000
   11bfc:	add	ip, ip, #40960	; 0xa000
   11c00:	ldr	pc, [ip, #2264]!	; 0x8d8

00011c04 <myhtml_tree_clear_stack_back_table_context@plt>:
   11c04:	add	ip, pc, #1048576	; 0x100000
   11c08:	add	ip, ip, #40960	; 0xa000
   11c0c:	ldr	pc, [ip, #2256]!	; 0x8d0

00011c10 <myhtml_tree_token_list_clean@plt>:
   11c10:	add	ip, pc, #1048576	; 0x100000
   11c14:	add	ip, ip, #40960	; 0xa000
   11c18:	ldr	pc, [ip, #2248]!	; 0x8c8

00011c1c <myhtml_parser_stream@plt>:
   11c1c:	add	ip, pc, #1048576	; 0x100000
   11c20:	add	ip, ip, #40960	; 0xa000
   11c24:	ldr	pc, [ip, #2240]!	; 0x8c0

00011c28 <myhtml_token_create@plt>:
   11c28:	add	ip, pc, #1048576	; 0x100000
   11c2c:	add	ip, ip, #40960	; 0xa000
   11c30:	ldr	pc, [ip, #2232]!	; 0x8b8

00011c34 <myhtml_parser_token_data_to_string_lowercase@plt>:
   11c34:	add	ip, pc, #1048576	; 0x100000
   11c38:	add	ip, ip, #40960	; 0xa000
   11c3c:	ldr	pc, [ip, #2224]!	; 0x8b0

00011c40 <myencoding_detect_utf_8@plt>:
   11c40:	add	ip, pc, #1048576	; 0x100000
   11c44:	add	ip, ip, #40960	; 0xa000
   11c48:	ldr	pc, [ip, #2216]!	; 0x8a8

00011c4c <mcsync_spin_unlock@plt>:
   11c4c:	add	ip, pc, #1048576	; 0x100000
   11c50:	add	ip, ip, #40960	; 0xa000
   11c54:	ldr	pc, [ip, #2208]!	; 0x8a0

00011c58 <myhtml_string_append_lowercase_with_preprocessing@plt>:
   11c58:	add	ip, pc, #1048576	; 0x100000
   11c5c:	add	ip, ip, #40960	; 0xa000
   11c60:	ldr	pc, [ip, #2200]!	; 0x898

00011c64 <mcsync_mutex_lock@plt>:
   11c64:	add	ip, pc, #1048576	; 0x100000
   11c68:	add	ip, ip, #40960	; 0xa000
   11c6c:	ldr	pc, [ip, #2192]!	; 0x890

00011c70 <mcobject_async_clean@plt>:
   11c70:	add	ip, pc, #1048576	; 0x100000
   11c74:	add	ip, ip, #40960	; 0xa000
   11c78:	ldr	pc, [ip, #2184]!	; 0x888

00011c7c <myhtml_tag_clean@plt>:
   11c7c:	add	ip, pc, #1048576	; 0x100000
   11c80:	add	ip, ip, #40960	; 0xa000
   11c84:	ldr	pc, [ip, #2176]!	; 0x880

00011c88 <mythread_thread_attr_destroy@plt>:
   11c88:	add	ip, pc, #1048576	; 0x100000
   11c8c:	add	ip, ip, #40960	; 0xa000
   11c90:	ldr	pc, [ip, #2168]!	; 0x878

00011c94 <mycore_string_clean_all@plt>:
   11c94:	add	ip, pc, #1048576	; 0x100000
   11c98:	add	ip, ip, #40960	; 0xa000
   11c9c:	ldr	pc, [ip, #2160]!	; 0x870

00011ca0 <myhtml_tree_node_clean@plt>:
   11ca0:	add	ip, pc, #1048576	; 0x100000
   11ca4:	add	ip, ip, #40960	; 0xa000
   11ca8:	ldr	pc, [ip, #2152]!	; 0x868

00011cac <mythread_init@plt>:
   11cac:	add	ip, pc, #1048576	; 0x100000
   11cb0:	add	ip, ip, #40960	; 0xa000
   11cb4:	ldr	pc, [ip, #2144]!	; 0x860

Disassembly of section .text:

00011cc0 <mycore_incoming_buffer_add@@Base-0x124>:
   11cc0:	ldr	r3, [pc, #20]	; 11cdc <mythread_init@plt+0x30>
   11cc4:	ldr	r2, [pc, #20]	; 11ce0 <mythread_init@plt+0x34>
   11cc8:	add	r3, pc, r3
   11ccc:	ldr	r2, [r3, r2]
   11cd0:	cmp	r2, #0
   11cd4:	bxeq	lr
   11cd8:	b	114fc <__gmon_start__@plt>
   11cdc:	andseq	sl, r0, r0, lsr r3
   11ce0:	andeq	r0, r0, r8, lsl #13
   11ce4:	ldr	r0, [pc, #44]	; 11d18 <mythread_init@plt+0x6c>
   11ce8:	ldr	r3, [pc, #44]	; 11d1c <mythread_init@plt+0x70>
   11cec:	add	r0, pc, r0
   11cf0:	add	r3, pc, r3
   11cf4:	cmp	r3, r0
   11cf8:	ldr	r3, [pc, #32]	; 11d20 <mythread_init@plt+0x74>
   11cfc:	add	r3, pc, r3
   11d00:	bxeq	lr
   11d04:	ldr	r2, [pc, #24]	; 11d24 <mythread_init@plt+0x78>
   11d08:	ldr	r3, [r3, r2]
   11d0c:	cmp	r3, #0
   11d10:	bxeq	lr
   11d14:	bx	r3
   11d18:			; <UNDEFINED> instruction: 0x0010aaf0
   11d1c:	andseq	sl, r0, ip, ror #21
   11d20:			; <UNDEFINED> instruction: 0x0010a2fc
   11d24:	andeq	r0, r0, r4, asr r5
   11d28:	ldr	r0, [pc, #56]	; 11d68 <mythread_init@plt+0xbc>
   11d2c:	ldr	r3, [pc, #56]	; 11d6c <mythread_init@plt+0xc0>
   11d30:	add	r0, pc, r0
   11d34:	add	r3, pc, r3
   11d38:	sub	r1, r3, r0
   11d3c:	ldr	r3, [pc, #44]	; 11d70 <mythread_init@plt+0xc4>
   11d40:	asr	r1, r1, #2
   11d44:	add	r3, pc, r3
   11d48:	add	r1, r1, r1, lsr #31
   11d4c:	asrs	r1, r1, #1
   11d50:	bxeq	lr
   11d54:	ldr	r2, [pc, #24]	; 11d74 <mythread_init@plt+0xc8>
   11d58:	ldr	r3, [r3, r2]
   11d5c:	cmp	r3, #0
   11d60:	bxeq	lr
   11d64:	bx	r3
   11d68:	andseq	sl, r0, ip, lsr #21
   11d6c:	andseq	sl, r0, r8, lsr #21
   11d70:			; <UNDEFINED> instruction: 0x0010a2b4
   11d74:	muleq	r0, r8, r7
   11d78:	ldr	r3, [pc, #76]	; 11dcc <mythread_init@plt+0x120>
   11d7c:	ldr	r2, [pc, #76]	; 11dd0 <mythread_init@plt+0x124>
   11d80:	add	r3, pc, r3
   11d84:	add	r2, pc, r2
   11d88:	ldrb	r3, [r3]
   11d8c:	cmp	r3, #0
   11d90:	bxne	lr
   11d94:	ldr	r3, [pc, #56]	; 11dd4 <mythread_init@plt+0x128>
   11d98:	push	{r4, lr}
   11d9c:	ldr	r3, [r2, r3]
   11da0:	cmp	r3, #0
   11da4:	beq	11db4 <mythread_init@plt+0x108>
   11da8:	ldr	r3, [pc, #40]	; 11dd8 <mythread_init@plt+0x12c>
   11dac:	ldr	r0, [pc, r3]
   11db0:	bl	10eb4 <__cxa_finalize@plt>
   11db4:	bl	11ce4 <mythread_init@plt+0x38>
   11db8:	ldr	r3, [pc, #28]	; 11ddc <mythread_init@plt+0x130>
   11dbc:	mov	r2, #1
   11dc0:	add	r3, pc, r3
   11dc4:	strb	r2, [r3]
   11dc8:	pop	{r4, pc}
   11dcc:	andseq	sl, r0, ip, asr sl
   11dd0:	andseq	sl, r0, r4, ror r2
   11dd4:	andeq	r0, r0, r0, asr #10
   11dd8:	andseq	sl, r0, ip, lsr #20
   11ddc:	andseq	sl, r0, ip, lsl sl
   11de0:	b	11d28 <mythread_init@plt+0x7c>

00011de4 <mycore_incoming_buffer_add@@Base>:
   11de4:	push	{r4, r5, r6, r7, fp, lr}
   11de8:	add	fp, sp, #16
   11dec:	mov	r4, r0
   11df0:	mov	r0, r1
   11df4:	mov	r1, #0
   11df8:	mov	r5, r3
   11dfc:	mov	r6, r2
   11e00:	mov	r7, #0
   11e04:	bl	1182c <mcobject_malloc@plt>
   11e08:	cmp	r4, #0
   11e0c:	stm	r0, {r6, r7}
   11e10:	str	r5, [r0, #8]
   11e14:	beq	11e3c <mycore_incoming_buffer_add@@Base+0x58>
   11e18:	ldr	r1, [r4, #8]
   11e1c:	ldr	r2, [r4, #12]
   11e20:	add	r1, r1, r2
   11e24:	str	r1, [r0, #12]
   11e28:	str	r0, [r4, #20]
   11e2c:	mov	r1, #0
   11e30:	str	r4, [r0, #16]
   11e34:	str	r1, [r0, #20]
   11e38:	pop	{r4, r5, r6, r7, fp, pc}
   11e3c:	str	r7, [r0, #12]
   11e40:	mov	r1, #0
   11e44:	str	r4, [r0, #16]
   11e48:	str	r1, [r0, #20]
   11e4c:	pop	{r4, r5, r6, r7, fp, pc}

00011e50 <mycore_incoming_buffer_clean@@Base>:
   11e50:	mov	r1, #0
   11e54:	vmov.i32	q8, #0	; 0x00000000
   11e58:	mov	r2, #20
   11e5c:	str	r1, [r0, #16]
   11e60:	vst1.32	{d16-d17}, [r0], r2
   11e64:	str	r1, [r0]
   11e68:	bx	lr

00011e6c <mycore_incoming_buffer_split@@Base>:
   11e6c:	push	{r4, r5, r6, sl, fp, lr}
   11e70:	add	fp, sp, #16
   11e74:	mov	r4, r0
   11e78:	ldr	r0, [r0, #12]
   11e7c:	mov	r6, #0
   11e80:	sub	r5, r2, r0
   11e84:	mov	r0, r1
   11e88:	mov	r1, #0
   11e8c:	bl	1182c <mcobject_malloc@plt>
   11e90:	ldr	r1, [r4, #8]
   11e94:	sub	r1, r1, r5
   11e98:	str	r1, [r0, #4]
   11e9c:	str	r1, [r0, #8]
   11ea0:	ldr	r1, [r4]
   11ea4:	add	r1, r1, r5
   11ea8:	str	r1, [r0]
   11eac:	ldr	r1, [r4, #12]
   11eb0:	str	r4, [r0, #16]
   11eb4:	str	r6, [r0, #20]
   11eb8:	add	r1, r1, r5
   11ebc:	str	r1, [r0, #12]
   11ec0:	str	r0, [r4, #20]
   11ec4:	str	r5, [r4, #4]
   11ec8:	str	r5, [r4, #8]
   11ecc:	pop	{r4, r5, r6, sl, fp, pc}

00011ed0 <mycore_incoming_buffer_find_by_position@@Base>:
   11ed0:	ldr	r2, [r0, #12]
   11ed4:	cmp	r2, r1
   11ed8:	bcs	11f0c <mycore_incoming_buffer_find_by_position@@Base+0x3c>
   11edc:	ldr	r3, [r0, #8]
   11ee0:	add	r2, r3, r2
   11ee4:	cmp	r2, r1
   11ee8:	bxcs	lr
   11eec:	ldr	r0, [r0, #20]
   11ef0:	cmp	r0, #0
   11ef4:	moveq	r0, #0
   11ef8:	bxeq	lr
   11efc:	ldr	r2, [r0, #8]
   11f00:	ldr	r3, [r0, #12]
   11f04:	add	r2, r2, r3
   11f08:	b	11ee4 <mycore_incoming_buffer_find_by_position@@Base+0x14>
   11f0c:	bls	11f2c <mycore_incoming_buffer_find_by_position@@Base+0x5c>
   11f10:	ldr	r0, [r0, #16]
   11f14:	cmp	r0, #0
   11f18:	moveq	r0, #0
   11f1c:	bxeq	lr
   11f20:	ldr	r2, [r0, #12]
   11f24:	cmp	r2, r1
   11f28:	bhi	11f10 <mycore_incoming_buffer_find_by_position@@Base+0x40>
   11f2c:	bx	lr

00011f30 <mycore_incoming_buffer_data@@Base>:
   11f30:	ldr	r0, [r0]
   11f34:	bx	lr

00011f38 <mycore_incoming_buffer_length@@Base>:
   11f38:	ldr	r0, [r0, #4]
   11f3c:	bx	lr

00011f40 <mycore_incoming_buffer_size@@Base>:
   11f40:	ldr	r0, [r0, #8]
   11f44:	bx	lr

00011f48 <mycore_incoming_buffer_offset@@Base>:
   11f48:	ldr	r0, [r0, #12]
   11f4c:	bx	lr

00011f50 <mycore_incoming_buffer_relative_begin@@Base>:
   11f50:	ldr	r0, [r0, #12]
   11f54:	sub	r0, r1, r0
   11f58:	bx	lr

00011f5c <mycore_incoming_buffer_available_length@@Base>:
   11f5c:	ldr	r0, [r0, #8]
   11f60:	add	r3, r2, r1
   11f64:	cmp	r3, r0
   11f68:	subhi	r2, r0, r1
   11f6c:	mov	r0, r2
   11f70:	bx	lr

00011f74 <mycore_incoming_buffer_next@@Base>:
   11f74:	ldr	r0, [r0, #20]
   11f78:	bx	lr

00011f7c <mycore_incoming_buffer_prev@@Base>:
   11f7c:	ldr	r0, [r0, #16]
   11f80:	bx	lr

00011f84 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base>:
   11f84:	push	{r4, r5, r6, r7, fp, lr}
   11f88:	add	fp, sp, #16
   11f8c:	ldr	r3, [r0]
   11f90:	ldr	r2, [r1]
   11f94:	mov	ip, #0
   11f98:	ldr	r6, [r3, #8]
   11f9c:	cmp	r2, r6
   11fa0:	movcs	r2, #0
   11fa4:	strcs	r2, [r1]
   11fa8:	ldrcs	r3, [r3, #20]
   11fac:	cmp	r3, #0
   11fb0:	beq	12034 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xb0>
   11fb4:	ldr	lr, [r3]
   11fb8:	ldrb	r6, [lr, r2]
   11fbc:	sub	r4, r6, #48	; 0x30
   11fc0:	cmp	r4, #9
   11fc4:	bhi	12028 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xa4>
   11fc8:	ldr	r5, [pc, #116]	; 12044 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xc0>
   11fcc:	mov	ip, #0
   11fd0:	mov	r4, #1
   11fd4:	add	r5, pc, r5
   11fd8:	ldrb	r6, [r5, r6]
   11fdc:	add	r2, r2, #1
   11fe0:	str	r2, [r1]
   11fe4:	orr	ip, r6, ip, lsl #4
   11fe8:	ldr	r6, [r3, #8]
   11fec:	cmp	r2, r6
   11ff0:	bcc	12010 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x8c>
   11ff4:	ldr	r6, [r3, #20]
   11ff8:	cmp	r6, #0
   11ffc:	beq	12028 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xa4>
   12000:	mov	r2, #0
   12004:	str	r2, [r1]
   12008:	ldr	lr, [r3]
   1200c:	mov	r3, r6
   12010:	cmp	r4, #5
   12014:	ldrbls	r6, [lr, r2]
   12018:	addls	r4, r4, #1
   1201c:	subls	r7, r6, #48	; 0x30
   12020:	cmpls	r7, #10
   12024:	bcc	11fd8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x54>
   12028:	str	r3, [r0]
   1202c:	mov	r0, ip
   12030:	pop	{r4, r5, r6, r7, fp, pc}
   12034:	mov	r3, #0
   12038:	str	r3, [r0]
   1203c:	mov	r0, ip
   12040:	pop	{r4, r5, r6, r7, fp, pc}
   12044:	andeq	r3, r2, r4, ror #1

00012048 <mycore_incoming_buffer_escaped_case_cmp@@Base>:
   12048:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1204c:	add	fp, sp, #28
   12050:	sub	sp, sp, #4
   12054:	ldr	sl, [r0]
   12058:	mov	ip, r2
   1205c:	ldr	r4, [r3]
   12060:	ldr	r2, [sl, #8]
   12064:	cmp	r4, r2
   12068:	bcc	12080 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x38>
   1206c:	ldr	sl, [sl, #20]
   12070:	cmp	sl, #0
   12074:	beq	121ec <mycore_incoming_buffer_escaped_case_cmp@@Base+0x1a4>
   12078:	mov	r4, #0
   1207c:	str	r4, [r3]
   12080:	cmp	ip, #0
   12084:	str	r0, [sp]
   12088:	beq	121dc <mycore_incoming_buffer_escaped_case_cmp@@Base+0x194>
   1208c:	ldr	r7, [sl]
   12090:	ldr	r0, [pc, #352]	; 121f8 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x1b0>
   12094:	ldr	r9, [pc, #352]	; 121fc <mycore_incoming_buffer_escaped_case_cmp@@Base+0x1b4>
   12098:	mov	lr, #0
   1209c:	add	r0, pc, r0
   120a0:	add	r9, pc, r9
   120a4:	ldrb	r2, [r7, r4]
   120a8:	cmp	r2, #92	; 0x5c
   120ac:	bne	1214c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x104>
   120b0:	add	r4, r4, #1
   120b4:	str	r4, [r3]
   120b8:	ldr	r2, [sl, #8]
   120bc:	cmp	r4, r2
   120c0:	movcs	r4, #0
   120c4:	strcs	r4, [r3]
   120c8:	ldrcs	sl, [sl, #20]
   120cc:	cmp	sl, #0
   120d0:	beq	12184 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x13c>
   120d4:	ldr	r5, [sl]
   120d8:	mov	r7, #0
   120dc:	ldrb	r2, [r5, r4]
   120e0:	sub	r6, r2, #48	; 0x30
   120e4:	cmp	r6, #9
   120e8:	bhi	1218c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x144>
   120ec:	mov	r6, #1
   120f0:	ldrb	r2, [r9, r2]
   120f4:	add	r4, r4, #1
   120f8:	str	r4, [r3]
   120fc:	orr	r7, r2, r7, lsl #4
   12100:	ldr	r2, [sl, #8]
   12104:	cmp	r4, r2
   12108:	bcc	12128 <mycore_incoming_buffer_escaped_case_cmp@@Base+0xe0>
   1210c:	ldr	r2, [sl, #20]
   12110:	cmp	r2, #0
   12114:	beq	12140 <mycore_incoming_buffer_escaped_case_cmp@@Base+0xf8>
   12118:	mov	r4, #0
   1211c:	str	r4, [r3]
   12120:	ldr	r5, [sl]
   12124:	mov	sl, r2
   12128:	cmp	r6, #5
   1212c:	ldrbls	r2, [r5, r4]
   12130:	addls	r6, r6, #1
   12134:	subls	r8, r2, #48	; 0x30
   12138:	cmpls	r8, #10
   1213c:	bcc	120f0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0xa8>
   12140:	cmp	r7, #255	; 0xff
   12144:	bls	1218c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x144>
   12148:	b	121e0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x198>
   1214c:	ldrb	r5, [r1, lr]
   12150:	ldrb	r2, [r0, r2]
   12154:	ldrb	r5, [r0, r5]
   12158:	cmp	r2, r5
   1215c:	bne	121e0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x198>
   12160:	add	r4, r4, #1
   12164:	str	r4, [r3]
   12168:	ldr	r2, [sl, #8]
   1216c:	add	lr, lr, #1
   12170:	cmp	r4, r2
   12174:	bcs	121b4 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x16c>
   12178:	cmp	lr, ip
   1217c:	bcc	120a4 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x5c>
   12180:	b	121e0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x198>
   12184:	mov	sl, #0
   12188:	mov	r7, #0
   1218c:	ldrb	r5, [r1, lr]
   12190:	ldrb	r2, [r0, r7]
   12194:	ldrb	r5, [r0, r5]
   12198:	cmp	r2, r5
   1219c:	bne	121e0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x198>
   121a0:	ldr	r7, [sl]
   121a4:	ldr	r2, [sl, #8]
   121a8:	add	lr, lr, #1
   121ac:	cmp	r4, r2
   121b0:	bcc	12178 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x130>
   121b4:	ldr	r2, [sl, #20]
   121b8:	cmp	r2, #0
   121bc:	beq	121e0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x198>
   121c0:	ldr	r7, [r2]
   121c4:	mov	r4, #0
   121c8:	mov	sl, r2
   121cc:	str	r4, [r3]
   121d0:	cmp	lr, ip
   121d4:	bcc	120a4 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x5c>
   121d8:	b	121e0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x198>
   121dc:	mov	lr, #0
   121e0:	ldr	r0, [sp]
   121e4:	sub	ip, ip, lr
   121e8:	str	sl, [r0]
   121ec:	mov	r0, ip
   121f0:	sub	sp, fp, #28
   121f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121f8:	andeq	r3, r2, ip, lsl r1
   121fc:	andeq	r3, r2, r8, lsl r0

00012200 <mycore_string_init@@Base>:
   12200:	push	{r4, r5, r6, r7, fp, lr}
   12204:	add	fp, sp, #16
   12208:	mov	r5, r2
   1220c:	mov	r2, r3
   12210:	mov	r4, r3
   12214:	mov	r6, r1
   12218:	mov	r7, r0
   1221c:	bl	11730 <mchar_async_malloc@plt>
   12220:	mov	r1, #0
   12224:	stm	r5, {r0, r4}
   12228:	str	r1, [r5, #8]
   1222c:	str	r7, [r5, #12]
   12230:	str	r6, [r5, #16]
   12234:	pop	{r4, r5, r6, r7, fp, pc}

00012238 <mycore_string_clean@@Base>:
   12238:	mov	r1, #0
   1223c:	str	r1, [r0, #8]
   12240:	bx	lr

00012244 <mycore_string_clean_all@@Base>:
   12244:	vmov.i32	q8, #0	; 0x00000000
   12248:	mov	r1, #0
   1224c:	vst1.32	{d16-d17}, [r0]!
   12250:	str	r1, [r0]
   12254:	bx	lr

00012258 <mycore_string_destroy@@Base>:
   12258:	push	{r4, r5, r6, sl, fp, lr}
   1225c:	add	fp, sp, #16
   12260:	mov	r4, #0
   12264:	cmp	r0, #0
   12268:	beq	122a4 <mycore_string_destroy@@Base+0x4c>
   1226c:	ldr	r2, [r0]
   12270:	mov	r5, r0
   12274:	mov	r6, r1
   12278:	cmp	r2, #0
   1227c:	ldrne	r0, [r5, #12]
   12280:	cmpne	r0, #0
   12284:	beq	12290 <mycore_string_destroy@@Base+0x38>
   12288:	ldr	r1, [r5, #16]
   1228c:	bl	115c8 <mchar_async_free@plt>
   12290:	cmp	r6, #0
   12294:	moveq	r0, r5
   12298:	popeq	{r4, r5, r6, sl, fp, pc}
   1229c:	mov	r0, r5
   122a0:	bl	11a9c <mycore_free@plt>
   122a4:	mov	r0, r4
   122a8:	pop	{r4, r5, r6, sl, fp, pc}

000122ac <mycore_string_raw_clean@@Base>:
   122ac:	mov	r1, #0
   122b0:	str	r1, [r0, #8]
   122b4:	bx	lr

000122b8 <mycore_string_raw_clean_all@@Base>:
   122b8:	mov	r1, #0
   122bc:	str	r1, [r0]
   122c0:	str	r1, [r0, #4]
   122c4:	str	r1, [r0, #8]
   122c8:	bx	lr

000122cc <mycore_string_raw_destroy@@Base>:
   122cc:	push	{r4, r5, r6, sl, fp, lr}
   122d0:	add	fp, sp, #16
   122d4:	mov	r4, #0
   122d8:	cmp	r0, #0
   122dc:	beq	12314 <mycore_string_raw_destroy@@Base+0x48>
   122e0:	mov	r5, r0
   122e4:	ldr	r0, [r0]
   122e8:	mov	r6, r1
   122ec:	cmp	r0, #0
   122f0:	beq	12300 <mycore_string_raw_destroy@@Base+0x34>
   122f4:	bl	11a9c <mycore_free@plt>
   122f8:	mov	r0, #0
   122fc:	str	r0, [r5]
   12300:	cmp	r6, #0
   12304:	moveq	r0, r5
   12308:	popeq	{r4, r5, r6, sl, fp, pc}
   1230c:	mov	r0, r5
   12310:	bl	11a9c <mycore_free@plt>
   12314:	mov	r0, r4
   12318:	pop	{r4, r5, r6, sl, fp, pc}

0001231c <mycore_string_realloc@@Base>:
   1231c:	push	{r4, r5, r6, sl, fp, lr}
   12320:	add	fp, sp, #16
   12324:	sub	sp, sp, #8
   12328:	mov	r4, #0
   1232c:	cmp	r0, #0
   12330:	beq	12360 <mycore_string_realloc@@Base+0x44>
   12334:	mov	r6, r0
   12338:	mov	r5, r1
   1233c:	ldr	r2, [r0]
   12340:	ldr	r3, [r0, #8]
   12344:	ldr	r0, [r0, #12]
   12348:	ldr	r1, [r6, #16]
   1234c:	str	r5, [sp]
   12350:	bl	11088 <mchar_async_realloc@plt>
   12354:	cmp	r0, #0
   12358:	movne	r4, r0
   1235c:	stmne	r6, {r0, r5}
   12360:	mov	r0, r4
   12364:	sub	sp, fp, #16
   12368:	pop	{r4, r5, r6, sl, fp, pc}

0001236c <mycore_string_data_alloc@@Base>:
   1236c:	b	11730 <mchar_async_malloc@plt>

00012370 <mycore_string_data_realloc@@Base>:
   12370:	b	11088 <mchar_async_realloc@plt>

00012374 <mycore_string_data_free@@Base>:
   12374:	b	115c8 <mchar_async_free@plt>

00012378 <mycore_string_data@@Base>:
   12378:	cmp	r0, #0
   1237c:	ldrne	r0, [r0]
   12380:	moveq	r0, #0
   12384:	bx	lr

00012388 <mycore_string_length@@Base>:
   12388:	cmp	r0, #0
   1238c:	ldrne	r0, [r0, #8]
   12390:	moveq	r0, #0
   12394:	bx	lr

00012398 <mycore_string_size@@Base>:
   12398:	cmp	r0, #0
   1239c:	ldrne	r0, [r0, #4]
   123a0:	moveq	r0, #0
   123a4:	bx	lr

000123a8 <mycore_string_data_set@@Base>:
   123a8:	cmp	r0, #0
   123ac:	strne	r1, [r0]
   123b0:	moveq	r1, #0
   123b4:	mov	r0, r1
   123b8:	bx	lr

000123bc <mycore_string_size_set@@Base>:
   123bc:	cmp	r0, #0
   123c0:	strne	r1, [r0, #4]
   123c4:	moveq	r1, #0
   123c8:	mov	r0, r1
   123cc:	bx	lr

000123d0 <mycore_string_length_set@@Base>:
   123d0:	cmp	r0, #0
   123d4:	strne	r1, [r0, #8]
   123d8:	moveq	r1, #0
   123dc:	mov	r0, r1
   123e0:	bx	lr

000123e4 <mycore_string_append@@Base>:
   123e4:	push	{r4, r5, r6, r7, fp, lr}
   123e8:	add	fp, sp, #16
   123ec:	sub	sp, sp, #8
   123f0:	mov	r5, r0
   123f4:	ldr	r0, [r0, #4]
   123f8:	mov	r6, r1
   123fc:	mov	r4, r2
   12400:	ldr	r3, [r5, #8]
   12404:	add	r1, r2, r3
   12408:	add	r7, r1, #1
   1240c:	cmp	r7, r0
   12410:	bcc	12430 <mycore_string_append@@Base+0x4c>
   12414:	ldr	r2, [r5]
   12418:	ldr	r0, [r5, #12]
   1241c:	ldr	r1, [r5, #16]
   12420:	str	r7, [sp]
   12424:	bl	11088 <mchar_async_realloc@plt>
   12428:	cmp	r0, #0
   1242c:	stmne	r5, {r0, r7}
   12430:	ldr	r0, [r5]
   12434:	ldr	r1, [r5, #8]
   12438:	mov	r2, r4
   1243c:	add	r0, r0, r1
   12440:	mov	r1, r6
   12444:	bl	11034 <memcpy@plt>
   12448:	ldr	r1, [r5, #8]
   1244c:	ldr	r0, [r5]
   12450:	mov	r2, #0
   12454:	add	r1, r1, r4
   12458:	str	r1, [r5, #8]
   1245c:	strb	r2, [r0, r1]
   12460:	sub	sp, fp, #16
   12464:	pop	{r4, r5, r6, r7, fp, pc}

00012468 <mycore_string_append_one@@Base>:
   12468:	push	{r4, r5, r6, sl, fp, lr}
   1246c:	add	fp, sp, #16
   12470:	sub	sp, sp, #8
   12474:	mov	r4, r0
   12478:	ldr	r0, [r0, #4]
   1247c:	mov	r5, r1
   12480:	ldr	r3, [r4, #8]
   12484:	add	r1, r3, #2
   12488:	cmp	r1, r0
   1248c:	bcc	124b0 <mycore_string_append_one@@Base+0x48>
   12490:	ldr	r2, [r4]
   12494:	ldr	r0, [r4, #12]
   12498:	ldr	r1, [r4, #16]
   1249c:	add	r6, r3, #3
   124a0:	str	r6, [sp]
   124a4:	bl	11088 <mchar_async_realloc@plt>
   124a8:	cmp	r0, #0
   124ac:	stmne	r4, {r0, r6}
   124b0:	ldr	r0, [r4]
   124b4:	ldr	r1, [r4, #8]
   124b8:	mov	r2, #0
   124bc:	strb	r5, [r0, r1]
   124c0:	ldr	r1, [r4, #8]
   124c4:	ldr	r0, [r4]
   124c8:	add	r1, r1, #1
   124cc:	str	r1, [r4, #8]
   124d0:	strb	r2, [r0, r1]
   124d4:	sub	sp, fp, #16
   124d8:	pop	{r4, r5, r6, sl, fp, pc}

000124dc <mycore_string_append_lowercase@@Base>:
   124dc:	push	{r4, r5, r6, r7, fp, lr}
   124e0:	add	fp, sp, #16
   124e4:	sub	sp, sp, #8
   124e8:	mov	r5, r0
   124ec:	ldr	r0, [r0, #4]
   124f0:	mov	r6, r1
   124f4:	mov	r4, r2
   124f8:	ldr	r3, [r5, #8]
   124fc:	add	r1, r2, r3
   12500:	add	r7, r1, #1
   12504:	cmp	r7, r0
   12508:	bcc	12528 <mycore_string_append_lowercase@@Base+0x4c>
   1250c:	ldr	r2, [r5]
   12510:	ldr	r0, [r5, #12]
   12514:	ldr	r1, [r5, #16]
   12518:	str	r7, [sp]
   1251c:	bl	11088 <mchar_async_realloc@plt>
   12520:	cmp	r0, #0
   12524:	stmne	r5, {r0, r7}
   12528:	ldr	r0, [r5]
   1252c:	ldr	r1, [r5, #8]
   12530:	cmp	r4, #0
   12534:	add	r0, r0, r1
   12538:	beq	12560 <mycore_string_append_lowercase@@Base+0x84>
   1253c:	ldr	r1, [pc, #56]	; 1257c <mycore_string_append_lowercase@@Base+0xa0>
   12540:	mov	r2, r4
   12544:	mov	r3, r0
   12548:	add	r1, pc, r1
   1254c:	ldrb	r7, [r6], #1
   12550:	subs	r2, r2, #1
   12554:	ldrb	r7, [r1, r7]
   12558:	strb	r7, [r3], #1
   1255c:	bne	1254c <mycore_string_append_lowercase@@Base+0x70>
   12560:	mov	r1, #0
   12564:	strb	r1, [r0, r4]
   12568:	ldr	r0, [r5, #8]
   1256c:	add	r0, r0, r4
   12570:	str	r0, [r5, #8]
   12574:	sub	sp, fp, #16
   12578:	pop	{r4, r5, r6, r7, fp, pc}
   1257c:	andeq	r2, r2, r0, ror sp

00012580 <mycore_string_copy@@Base>:
   12580:	push	{r4, r5, r6, r7, fp, lr}
   12584:	add	fp, sp, #16
   12588:	sub	sp, sp, #8
   1258c:	mov	r4, r0
   12590:	ldr	r5, [r1, #8]
   12594:	ldr	r0, [r0, #4]
   12598:	ldr	r6, [r1]
   1259c:	ldr	r3, [r4, #8]
   125a0:	add	r1, r5, r3
   125a4:	add	r7, r1, #1
   125a8:	cmp	r7, r0
   125ac:	bcc	125cc <mycore_string_copy@@Base+0x4c>
   125b0:	ldr	r2, [r4]
   125b4:	ldr	r0, [r4, #12]
   125b8:	ldr	r1, [r4, #16]
   125bc:	str	r7, [sp]
   125c0:	bl	11088 <mchar_async_realloc@plt>
   125c4:	cmp	r0, #0
   125c8:	stmne	r4, {r0, r7}
   125cc:	ldr	r0, [r4]
   125d0:	ldr	r1, [r4, #8]
   125d4:	mov	r2, r5
   125d8:	add	r0, r0, r1
   125dc:	mov	r1, r6
   125e0:	bl	11034 <memcpy@plt>
   125e4:	ldr	r1, [r4, #8]
   125e8:	ldr	r0, [r4]
   125ec:	mov	r2, #0
   125f0:	add	r1, r1, r5
   125f4:	str	r1, [r4, #8]
   125f8:	strb	r2, [r0, r1]
   125fc:	sub	sp, fp, #16
   12600:	pop	{r4, r5, r6, r7, fp, pc}

00012604 <mycore_string_raw_copy@@Base>:
   12604:	mov	r3, #0
   12608:	cmp	r2, #0
   1260c:	strb	r3, [r0, r2]
   12610:	beq	12690 <mycore_string_raw_copy@@Base+0x8c>
   12614:	cmp	r2, #16
   12618:	bcc	12674 <mycore_string_raw_copy@@Base+0x70>
   1261c:	add	r3, r1, r2
   12620:	cmp	r3, r0
   12624:	addhi	r3, r0, r2
   12628:	cmphi	r3, r1
   1262c:	bhi	12674 <mycore_string_raw_copy@@Base+0x70>
   12630:	push	{r4, r5, r6, sl, fp, lr}
   12634:	add	fp, sp, #16
   12638:	sub	r3, r2, #16
   1263c:	bic	lr, r2, #15
   12640:	mvn	r5, #15
   12644:	add	ip, r1, r3
   12648:	add	r4, r0, r3
   1264c:	sub	r3, r2, lr
   12650:	mov	r6, lr
   12654:	vld1.8	{d16-d17}, [ip], r5
   12658:	subs	r6, r6, #16
   1265c:	vst1.8	{d16-d17}, [r4], r5
   12660:	bne	12654 <mycore_string_raw_copy@@Base+0x50>
   12664:	cmp	lr, r2
   12668:	pop	{r4, r5, r6, sl, fp, lr}
   1266c:	bne	12678 <mycore_string_raw_copy@@Base+0x74>
   12670:	b	12690 <mycore_string_raw_copy@@Base+0x8c>
   12674:	mov	r3, r2
   12678:	sub	r1, r1, #1
   1267c:	sub	r0, r0, #1
   12680:	ldrb	r2, [r1, r3]
   12684:	strb	r2, [r0, r3]
   12688:	subs	r3, r3, #1
   1268c:	bne	12680 <mycore_string_raw_copy@@Base+0x7c>
   12690:	mov	r0, #0
   12694:	bx	lr

00012698 <mycore_string_raw_set_replacement_character@@Base>:
   12698:	ldr	r2, [r0]
   1269c:	mov	r3, #239	; 0xef
   126a0:	strb	r3, [r2, r1]
   126a4:	mov	r3, #191	; 0xbf
   126a8:	ldr	r2, [r0]
   126ac:	add	r2, r2, r1
   126b0:	strb	r3, [r2, #1]
   126b4:	ldr	r0, [r0]
   126b8:	add	r0, r0, r1
   126bc:	mov	r1, #189	; 0xbd
   126c0:	strb	r1, [r0, #2]
   126c4:	mov	r0, #3
   126c8:	bx	lr

000126cc <mycore_string_append_with_replacement_null_characters@@Base>:
   126cc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   126d0:	add	fp, sp, #24
   126d4:	sub	sp, sp, #8
   126d8:	mov	r4, r0
   126dc:	ldr	r0, [r0, #4]
   126e0:	mov	r6, r1
   126e4:	mov	r5, r2
   126e8:	ldr	r3, [r4, #8]
   126ec:	add	r1, r2, r3
   126f0:	add	r7, r1, #1
   126f4:	cmp	r7, r0
   126f8:	bcc	12718 <mycore_string_append_with_replacement_null_characters@@Base+0x4c>
   126fc:	ldr	r2, [r4]
   12700:	ldr	r0, [r4, #12]
   12704:	ldr	r1, [r4, #16]
   12708:	str	r7, [sp]
   1270c:	bl	11088 <mchar_async_realloc@plt>
   12710:	cmp	r0, #0
   12714:	stmne	r4, {r0, r7}
   12718:	cmp	r5, #0
   1271c:	beq	127b8 <mycore_string_append_with_replacement_null_characters@@Base+0xec>
   12720:	ldr	r0, [r4]
   12724:	mov	r8, #239	; 0xef
   12728:	mov	r9, #191	; 0xbf
   1272c:	ldrb	r1, [r6]
   12730:	cmp	r1, #0
   12734:	beq	12744 <mycore_string_append_with_replacement_null_characters@@Base+0x78>
   12738:	ldr	r2, [r4, #8]
   1273c:	add	r2, r0, r2
   12740:	b	12798 <mycore_string_append_with_replacement_null_characters@@Base+0xcc>
   12744:	ldm	r4, {r2, r7}
   12748:	ldr	r3, [r4, #8]
   1274c:	ldr	r0, [r4, #12]
   12750:	ldr	r1, [r4, #16]
   12754:	add	r7, r7, #5
   12758:	str	r7, [sp]
   1275c:	bl	11088 <mchar_async_realloc@plt>
   12760:	cmp	r0, #0
   12764:	stmne	r4, {r0, r7}
   12768:	ldreq	r0, [r4]
   1276c:	ldr	r1, [r4, #8]
   12770:	strb	r8, [r0, r1]
   12774:	ldr	r1, [r4, #8]
   12778:	add	r1, r1, #1
   1277c:	str	r1, [r4, #8]
   12780:	strb	r9, [r0, r1]
   12784:	ldr	r1, [r4, #8]
   12788:	add	r1, r1, #1
   1278c:	str	r1, [r4, #8]
   12790:	add	r2, r0, r1
   12794:	mov	r1, #189	; 0xbd
   12798:	strb	r1, [r2]
   1279c:	subs	r5, r5, #1
   127a0:	add	r6, r6, #1
   127a4:	ldr	r1, [r4, #8]
   127a8:	add	r1, r1, #1
   127ac:	str	r1, [r4, #8]
   127b0:	bne	1272c <mycore_string_append_with_replacement_null_characters@@Base+0x60>
   127b4:	b	127bc <mycore_string_append_with_replacement_null_characters@@Base+0xf0>
   127b8:	ldr	r1, [r4, #8]
   127bc:	ldr	r0, [r4]
   127c0:	mov	r2, #0
   127c4:	strb	r2, [r0, r1]
   127c8:	sub	sp, fp, #24
   127cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000127d0 <mycore_string_stay_only_whitespace@@Base>:
   127d0:	push	{r4, r5, r6, sl, fp, lr}
   127d4:	add	fp, sp, #16
   127d8:	ldr	r2, [r0, #8]
   127dc:	cmp	r2, #0
   127e0:	beq	12830 <mycore_string_stay_only_whitespace@@Base+0x60>
   127e4:	ldr	ip, [r0]
   127e8:	movw	r4, #27
   127ec:	mov	r3, #0
   127f0:	mov	lr, #1
   127f4:	mov	r1, #0
   127f8:	movt	r4, #128	; 0x80
   127fc:	ldrb	r5, [ip, r3]
   12800:	sub	r6, r5, #9
   12804:	cmp	r6, #23
   12808:	bhi	1281c <mycore_string_stay_only_whitespace@@Base+0x4c>
   1280c:	tst	r4, lr, lsl r6
   12810:	strbne	r5, [ip, r1]
   12814:	addne	r1, r1, #1
   12818:	ldrne	r2, [r0, #8]
   1281c:	add	r3, r3, #1
   12820:	cmp	r3, r2
   12824:	bcc	127fc <mycore_string_stay_only_whitespace@@Base+0x2c>
   12828:	str	r1, [r0, #8]
   1282c:	pop	{r4, r5, r6, sl, fp, pc}
   12830:	mov	r1, #0
   12834:	str	r1, [r0, #8]
   12838:	pop	{r4, r5, r6, sl, fp, pc}

0001283c <mycore_string_crop_whitespace_from_begin@@Base>:
   1283c:	push	{r4, r5, r6, sl, fp, lr}
   12840:	add	fp, sp, #16
   12844:	ldr	r1, [r0, #8]
   12848:	mov	r6, r0
   1284c:	cmp	r1, #0
   12850:	beq	12890 <mycore_string_crop_whitespace_from_begin@@Base+0x54>
   12854:	ldr	r0, [r6]
   12858:	movw	r3, #27
   1285c:	mov	r5, #0
   12860:	mov	r2, #1
   12864:	movt	r3, #128	; 0x80
   12868:	ldrb	r4, [r0, r5]
   1286c:	sub	r4, r4, #9
   12870:	cmp	r4, #23
   12874:	bhi	128a8 <mycore_string_crop_whitespace_from_begin@@Base+0x6c>
   12878:	tst	r3, r2, lsl r4
   1287c:	beq	128a8 <mycore_string_crop_whitespace_from_begin@@Base+0x6c>
   12880:	add	r5, r5, #1
   12884:	cmp	r5, r1
   12888:	bcc	12868 <mycore_string_crop_whitespace_from_begin@@Base+0x2c>
   1288c:	b	128b0 <mycore_string_crop_whitespace_from_begin@@Base+0x74>
   12890:	mov	r5, #0
   12894:	mov	r1, #0
   12898:	sub	r0, r1, r5
   1289c:	str	r0, [r6, #8]
   128a0:	mov	r0, r5
   128a4:	pop	{r4, r5, r6, sl, fp, pc}
   128a8:	cmp	r5, #0
   128ac:	beq	128d0 <mycore_string_crop_whitespace_from_begin@@Base+0x94>
   128b0:	mov	r1, r5
   128b4:	bl	1197c <mchar_async_crop_first_chars_without_cache@plt>
   128b8:	str	r0, [r6]
   128bc:	ldr	r1, [r6, #8]
   128c0:	sub	r0, r1, r5
   128c4:	str	r0, [r6, #8]
   128c8:	mov	r0, r5
   128cc:	pop	{r4, r5, r6, sl, fp, pc}
   128d0:	mov	r5, #0
   128d4:	sub	r0, r1, r5
   128d8:	str	r0, [r6, #8]
   128dc:	mov	r0, r5
   128e0:	pop	{r4, r5, r6, sl, fp, pc}

000128e4 <mycore_string_whitespace_from_begin@@Base>:
   128e4:	push	{fp, lr}
   128e8:	mov	fp, sp
   128ec:	ldr	r1, [r0, #8]
   128f0:	cmp	r1, #0
   128f4:	moveq	r0, #0
   128f8:	popeq	{fp, pc}
   128fc:	ldr	r2, [r0]
   12900:	movw	lr, #27
   12904:	mov	r0, #0
   12908:	mov	ip, #1
   1290c:	movt	lr, #128	; 0x80
   12910:	ldrb	r3, [r2, r0]
   12914:	sub	r3, r3, #9
   12918:	cmp	r3, #23
   1291c:	bhi	12934 <mycore_string_whitespace_from_begin@@Base+0x50>
   12920:	tst	lr, ip, lsl r3
   12924:	popeq	{fp, pc}
   12928:	add	r0, r0, #1
   1292c:	cmp	r0, r1
   12930:	bcc	12910 <mycore_string_whitespace_from_begin@@Base+0x2c>
   12934:	pop	{fp, pc}

00012938 <mythread_create@@Base>:
   12938:	mov	r0, #1
   1293c:	mov	r1, #40	; 0x28
   12940:	b	11004 <mycore_calloc@plt>

00012944 <mythread_init@@Base>:
   12944:	push	{r4, sl, fp, lr}
   12948:	add	fp, sp, #8
   1294c:	cmp	r2, #0
   12950:	moveq	r0, #1
   12954:	popeq	{r4, sl, fp, pc}
   12958:	mov	r4, r0
   1295c:	mov	r0, #0
   12960:	stmib	r4, {r0, r2, r3}
   12964:	str	r1, [r4, #32]
   12968:	mov	r0, r2
   1296c:	mov	r1, #40	; 0x28
   12970:	bl	11004 <mycore_calloc@plt>
   12974:	cmp	r0, #0
   12978:	str	r0, [r4]
   1297c:	moveq	r0, #2
   12980:	popeq	{r4, sl, fp, pc}
   12984:	mov	r0, r4
   12988:	bl	10fa4 <mythread_thread_attr_init@plt>
   1298c:	cmp	r0, #0
   12990:	str	r0, [r4, #20]
   12994:	moveq	r0, #12
   12998:	popeq	{r4, sl, fp, pc}
   1299c:	mov	r0, r4
   129a0:	bl	10e3c <mythread_nanosleep_create@plt>
   129a4:	str	r0, [r4, #24]
   129a8:	mov	r0, #0
   129ac:	pop	{r4, sl, fp, pc}

000129b0 <mythread_clean@@Base>:
   129b0:	push	{r4, sl, fp, lr}
   129b4:	add	fp, sp, #8
   129b8:	ldr	r1, [r0, #20]
   129bc:	mov	r4, r0
   129c0:	bl	11388 <mythread_thread_attr_clean@plt>
   129c4:	ldr	r0, [r4, #24]
   129c8:	bl	10e0c <mythread_nanosleep_clean@plt>
   129cc:	mov	r0, #0
   129d0:	str	r0, [r4, #28]
   129d4:	pop	{r4, sl, fp, pc}

000129d8 <mythread_destroy@@Base>:
   129d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129dc:	add	fp, sp, #28
   129e0:	sub	sp, sp, #4
   129e4:	mov	r4, #0
   129e8:	cmp	r0, #0
   129ec:	beq	12ac8 <mythread_destroy@@Base+0xf0>
   129f0:	mov	sl, r1
   129f4:	ldr	r1, [r0]
   129f8:	mov	r8, r3
   129fc:	mov	r5, r0
   12a00:	cmp	r1, #0
   12a04:	beq	12aa4 <mythread_destroy@@Base+0xcc>
   12a08:	ldr	r0, [r5, #36]	; 0x24
   12a0c:	mov	r9, r2
   12a10:	mov	r2, #2
   12a14:	str	r2, [r5, #36]	; 0x24
   12a18:	tst	r0, #1
   12a1c:	bne	12a8c <mythread_destroy@@Base+0xb4>
   12a20:	ldr	r0, [r5, #4]
   12a24:	cmp	r0, #0
   12a28:	beq	12a8c <mythread_destroy@@Base+0xb4>
   12a2c:	mov	r7, #1
   12a30:	mov	r6, #0
   12a34:	add	r1, r1, r6
   12a38:	ldr	r2, [r1, #16]
   12a3c:	tst	r2, #4
   12a40:	beq	12a84 <mythread_destroy@@Base+0xac>
   12a44:	b	12a64 <mythread_destroy@@Base+0x8c>
   12a48:	ldr	r1, [r5]
   12a4c:	add	r6, r6, #40	; 0x28
   12a50:	add	r7, r7, #1
   12a54:	add	r1, r1, r6
   12a58:	ldr	r2, [r1, #16]
   12a5c:	tst	r2, #4
   12a60:	beq	12a84 <mythread_destroy@@Base+0xac>
   12a64:	mov	r0, #2
   12a68:	str	r0, [r1, #16]
   12a6c:	mov	r0, r5
   12a70:	ldr	r1, [r1, #24]
   12a74:	bl	119f4 <mythread_mutex_post@plt>
   12a78:	cmp	r0, #0
   12a7c:	bne	12a8c <mythread_destroy@@Base+0xb4>
   12a80:	ldr	r0, [r5, #4]
   12a84:	cmp	r7, r0
   12a88:	bcc	12a48 <mythread_destroy@@Base+0x70>
   12a8c:	mov	r0, r5
   12a90:	mov	r1, sl
   12a94:	mov	r2, r9
   12a98:	bl	114cc <mythread_quit@plt>
   12a9c:	ldr	r0, [r5]
   12aa0:	bl	11a9c <mycore_free@plt>
   12aa4:	ldr	r1, [r5, #20]
   12aa8:	mov	r0, r5
   12aac:	bl	11c88 <mythread_thread_attr_destroy@plt>
   12ab0:	ldr	r0, [r5, #24]
   12ab4:	bl	11940 <mythread_nanosleep_destroy@plt>
   12ab8:	cmp	r8, #0
   12abc:	beq	12ad4 <mythread_destroy@@Base+0xfc>
   12ac0:	mov	r0, r5
   12ac4:	bl	11a9c <mycore_free@plt>
   12ac8:	mov	r0, r4
   12acc:	sub	sp, fp, #28
   12ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ad4:	mov	r4, r5
   12ad8:	mov	r0, r4
   12adc:	sub	sp, fp, #28
   12ae0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012ae4 <mythread_resume@@Base>:
   12ae4:	push	{r4, r5, r6, r7, fp, lr}
   12ae8:	add	fp, sp, #16
   12aec:	mov	r4, r1
   12af0:	ldr	r1, [r0, #36]	; 0x24
   12af4:	mov	r5, r0
   12af8:	str	r4, [r0, #36]	; 0x24
   12afc:	mov	r0, #0
   12b00:	tst	r1, #1
   12b04:	bne	12b64 <mythread_resume@@Base+0x80>
   12b08:	ldr	r1, [r5, #4]
   12b0c:	cmp	r1, #0
   12b10:	popeq	{r4, r5, r6, r7, fp, pc}
   12b14:	mov	r6, #0
   12b18:	mov	r7, #0
   12b1c:	ldr	r0, [r5]
   12b20:	add	r0, r0, r6
   12b24:	ldr	r2, [r0, #16]
   12b28:	tst	r2, #4
   12b2c:	beq	12b50 <mythread_resume@@Base+0x6c>
   12b30:	str	r4, [r0, #16]
   12b34:	ldr	r1, [r0, #24]
   12b38:	mov	r0, r5
   12b3c:	bl	119f4 <mythread_mutex_post@plt>
   12b40:	cmp	r0, #0
   12b44:	movne	r0, #1
   12b48:	popne	{r4, r5, r6, r7, fp, pc}
   12b4c:	ldr	r1, [r5, #4]
   12b50:	add	r7, r7, #1
   12b54:	add	r6, r6, #40	; 0x28
   12b58:	cmp	r7, r1
   12b5c:	bcc	12b1c <mythread_resume@@Base+0x38>
   12b60:	mov	r0, #0
   12b64:	pop	{r4, r5, r6, r7, fp, pc}

00012b68 <mythread_quit@@Base>:
   12b68:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12b6c:	add	fp, sp, #24
   12b70:	mov	r4, r0
   12b74:	mov	r0, #2
   12b78:	str	r0, [r4, #36]	; 0x24
   12b7c:	ldr	r0, [r4, #4]
   12b80:	cmp	r0, #0
   12b84:	beq	12c50 <mythread_quit@@Base+0xe8>
   12b88:	mov	r9, r1
   12b8c:	cmp	r1, #0
   12b90:	beq	12c00 <mythread_quit@@Base+0x98>
   12b94:	mov	r8, r2
   12b98:	mov	r5, #0
   12b9c:	mov	r6, #0
   12ba0:	mov	r7, #1
   12ba4:	ldr	r0, [r4]
   12ba8:	mov	r2, r8
   12bac:	add	r1, r0, r5
   12bb0:	mov	r0, r4
   12bb4:	blx	r9
   12bb8:	ldr	r0, [r4]
   12bbc:	ldr	r1, [r0, r5]
   12bc0:	mov	r0, r4
   12bc4:	bl	114b4 <mythread_thread_join@plt>
   12bc8:	cmp	r0, #0
   12bcc:	bne	12c54 <mythread_quit@@Base+0xec>
   12bd0:	ldr	r0, [r4]
   12bd4:	ldr	r1, [r0, r5]
   12bd8:	mov	r0, r4
   12bdc:	bl	117cc <mythread_thread_destroy@plt>
   12be0:	cmp	r0, #0
   12be4:	bne	12c54 <mythread_quit@@Base+0xec>
   12be8:	ldr	r0, [r4, #4]
   12bec:	add	r6, r6, #1
   12bf0:	add	r5, r5, #40	; 0x28
   12bf4:	cmp	r6, r0
   12bf8:	bcc	12ba4 <mythread_quit@@Base+0x3c>
   12bfc:	b	12c50 <mythread_quit@@Base+0xe8>
   12c00:	mov	r5, #0
   12c04:	mov	r6, #0
   12c08:	mov	r7, #1
   12c0c:	ldr	r0, [r4]
   12c10:	ldr	r1, [r0, r5]
   12c14:	mov	r0, r4
   12c18:	bl	114b4 <mythread_thread_join@plt>
   12c1c:	cmp	r0, #0
   12c20:	bne	12c54 <mythread_quit@@Base+0xec>
   12c24:	ldr	r0, [r4]
   12c28:	ldr	r1, [r0, r5]
   12c2c:	mov	r0, r4
   12c30:	bl	117cc <mythread_thread_destroy@plt>
   12c34:	cmp	r0, #0
   12c38:	bne	12c54 <mythread_quit@@Base+0xec>
   12c3c:	ldr	r0, [r4, #4]
   12c40:	add	r6, r6, #1
   12c44:	add	r5, r5, #40	; 0x28
   12c48:	cmp	r6, r0
   12c4c:	bcc	12c0c <mythread_quit@@Base+0xa4>
   12c50:	mov	r7, #0
   12c54:	mov	r0, r7
   12c58:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012c5c <myhread_entry_create@@Base>:
   12c5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c60:	add	fp, sp, #28
   12c64:	sub	sp, sp, #4
   12c68:	mov	r8, r1
   12c6c:	mov	r1, #0
   12c70:	mov	r4, r0
   12c74:	str	r1, [r0, #28]
   12c78:	ldr	r7, [r0, #4]
   12c7c:	ldr	r5, [r0, #8]
   12c80:	mov	r0, #15
   12c84:	cmp	r7, r5
   12c88:	bcs	12d34 <myhread_entry_create@@Base+0xd8>
   12c8c:	ldr	sl, [r4]
   12c90:	add	r9, r7, r7, lsl #2
   12c94:	mov	r0, r4
   12c98:	add	r6, sl, r9, lsl #3
   12c9c:	str	r7, [r6, #4]!
   12ca0:	str	r5, [r6, #8]
   12ca4:	str	r2, [r6, #4]
   12ca8:	str	r4, [r6, #28]
   12cac:	str	r1, [r6, #16]
   12cb0:	str	r3, [r6, #12]
   12cb4:	bl	10e3c <mythread_nanosleep_create@plt>
   12cb8:	str	r0, [r6, #24]
   12cbc:	mov	r0, r4
   12cc0:	bl	11898 <mythread_mutex_create@plt>
   12cc4:	cmp	r0, #0
   12cc8:	str	r0, [r6, #20]
   12ccc:	moveq	r0, #71	; 0x47
   12cd0:	subeq	sp, fp, #28
   12cd4:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12cd8:	mov	r1, r0
   12cdc:	mov	r0, r4
   12ce0:	add	r5, r6, #20
   12ce4:	bl	11a6c <mythread_mutex_wait@plt>
   12ce8:	cmp	r0, #0
   12cec:	beq	12d08 <myhread_entry_create@@Base+0xac>
   12cf0:	ldr	r1, [r5]
   12cf4:	mov	r0, r4
   12cf8:	bl	11520 <mythread_mutex_close@plt>
   12cfc:	mov	r0, #72	; 0x48
   12d00:	sub	sp, fp, #28
   12d04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d08:	mov	r0, r4
   12d0c:	mov	r1, r8
   12d10:	mov	r2, r6
   12d14:	bl	10ef0 <mythread_thread_create@plt>
   12d18:	cmp	r0, #0
   12d1c:	str	r0, [sl, r9, lsl #3]
   12d20:	beq	12d3c <myhread_entry_create@@Base+0xe0>
   12d24:	ldr	r0, [r4, #4]
   12d28:	add	r0, r0, #1
   12d2c:	str	r0, [r4, #4]
   12d30:	mov	r0, #0
   12d34:	sub	sp, fp, #28
   12d38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d3c:	ldr	r1, [r5]
   12d40:	mov	r0, r4
   12d44:	bl	11520 <mythread_mutex_close@plt>
   12d48:	mov	r0, #1
   12d4c:	sub	sp, fp, #28
   12d50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012d54 <myhread_increase_id_by_entry_id@@Base>:
   12d54:	ldr	r0, [r0, #12]
   12d58:	add	r0, r0, r1
   12d5c:	bx	lr

00012d60 <mythread_join@@Base>:
   12d60:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12d64:	add	fp, sp, #24
   12d68:	mov	r4, r0
   12d6c:	ldr	r0, [r0, #4]
   12d70:	cmp	r0, #0
   12d74:	beq	12e08 <mythread_join@@Base+0xa8>
   12d78:	mov	r6, r1
   12d7c:	cmp	r1, #0
   12d80:	beq	12dd4 <mythread_join@@Base+0x74>
   12d84:	mov	r8, r2
   12d88:	mov	r7, #0
   12d8c:	mov	r5, #0
   12d90:	ldr	r0, [r4]
   12d94:	mov	r2, r8
   12d98:	add	r1, r0, r7
   12d9c:	mov	r0, r4
   12da0:	blx	r6
   12da4:	ldr	r0, [r4]
   12da8:	ldr	r1, [r0, r7]
   12dac:	mov	r0, r4
   12db0:	bl	114b4 <mythread_thread_join@plt>
   12db4:	cmp	r0, #0
   12db8:	bne	12e10 <mythread_join@@Base+0xb0>
   12dbc:	ldr	r0, [r4, #4]
   12dc0:	add	r5, r5, #1
   12dc4:	add	r7, r7, #40	; 0x28
   12dc8:	cmp	r5, r0
   12dcc:	bcc	12d90 <mythread_join@@Base+0x30>
   12dd0:	b	12e08 <mythread_join@@Base+0xa8>
   12dd4:	mov	r5, #0
   12dd8:	mov	r6, #0
   12ddc:	ldr	r0, [r4]
   12de0:	ldr	r1, [r0, r5]
   12de4:	mov	r0, r4
   12de8:	bl	114b4 <mythread_thread_join@plt>
   12dec:	cmp	r0, #0
   12df0:	bne	12e10 <mythread_join@@Base+0xb0>
   12df4:	ldr	r0, [r4, #4]
   12df8:	add	r6, r6, #1
   12dfc:	add	r5, r5, #40	; 0x28
   12e00:	cmp	r6, r0
   12e04:	bcc	12ddc <mythread_join@@Base+0x7c>
   12e08:	mov	r0, #0
   12e0c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12e10:	mov	r0, #1
   12e14:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012e18 <mythread_option_set@@Base>:
   12e18:	str	r1, [r0, #36]	; 0x24
   12e1c:	bx	lr

00012e20 <mythread_stop@@Base>:
   12e20:	push	{r4, r5, r6, sl, fp, lr}
   12e24:	add	fp, sp, #16
   12e28:	mov	r4, r0
   12e2c:	ldr	r0, [r0, #36]	; 0x24
   12e30:	tst	r0, #4
   12e34:	bne	12e94 <mythread_stop@@Base+0x74>
   12e38:	mov	r0, #4
   12e3c:	str	r0, [r4, #36]	; 0x24
   12e40:	ldr	r1, [r4, #4]
   12e44:	cmp	r1, #0
   12e48:	beq	12e94 <mythread_stop@@Base+0x74>
   12e4c:	ldr	r0, [r4]
   12e50:	mov	r5, #0
   12e54:	add	r6, r5, r5, lsl #2
   12e58:	add	r2, r0, r6, lsl #3
   12e5c:	ldr	r2, [r2, #16]
   12e60:	tst	r2, #4
   12e64:	bne	12e88 <mythread_stop@@Base+0x68>
   12e68:	ldr	r0, [r4, #24]
   12e6c:	bl	11148 <mythread_nanosleep_sleep@plt>
   12e70:	ldr	r0, [r4]
   12e74:	add	r1, r0, r6, lsl #3
   12e78:	ldr	r1, [r1, #16]
   12e7c:	tst	r1, #4
   12e80:	beq	12e68 <mythread_stop@@Base+0x48>
   12e84:	ldr	r1, [r4, #4]
   12e88:	add	r5, r5, #1
   12e8c:	cmp	r5, r1
   12e90:	bcc	12e54 <mythread_stop@@Base+0x34>
   12e94:	mov	r0, #0
   12e98:	pop	{r4, r5, r6, sl, fp, pc}

00012e9c <mythread_suspend@@Base>:
   12e9c:	push	{r4, r5, r6, sl, fp, lr}
   12ea0:	add	fp, sp, #16
   12ea4:	mov	r4, r0
   12ea8:	ldr	r0, [r0, #36]	; 0x24
   12eac:	tst	r0, #1
   12eb0:	bne	12f2c <mythread_suspend@@Base+0x90>
   12eb4:	mov	r0, #1
   12eb8:	str	r0, [r4, #36]	; 0x24
   12ebc:	ldr	r1, [r4, #4]
   12ec0:	cmp	r1, #0
   12ec4:	beq	12f2c <mythread_suspend@@Base+0x90>
   12ec8:	ldr	r0, [r4]
   12ecc:	mov	r5, #0
   12ed0:	add	r6, r5, r5, lsl #2
   12ed4:	add	r2, r0, r6, lsl #3
   12ed8:	ldr	r3, [r2, #16]!
   12edc:	tst	r3, #4
   12ee0:	bne	12f20 <mythread_suspend@@Base+0x84>
   12ee4:	ldr	r1, [r2]
   12ee8:	tst	r1, #1
   12eec:	beq	12f00 <mythread_suspend@@Base+0x64>
   12ef0:	b	12f1c <mythread_suspend@@Base+0x80>
   12ef4:	ldr	r1, [r1]
   12ef8:	tst	r1, #1
   12efc:	bne	12f1c <mythread_suspend@@Base+0x80>
   12f00:	ldr	r0, [r4, #24]
   12f04:	bl	11148 <mythread_nanosleep_sleep@plt>
   12f08:	ldr	r0, [r4]
   12f0c:	add	r1, r0, r6, lsl #3
   12f10:	ldr	r2, [r1, #16]!
   12f14:	tst	r2, #4
   12f18:	beq	12ef4 <mythread_suspend@@Base+0x58>
   12f1c:	ldr	r1, [r4, #4]
   12f20:	add	r5, r5, #1
   12f24:	cmp	r5, r1
   12f28:	bcc	12ed0 <mythread_suspend@@Base+0x34>
   12f2c:	mov	r0, #0
   12f30:	pop	{r4, r5, r6, sl, fp, pc}

00012f34 <mythread_check_status@@Base>:
   12f34:	ldr	r1, [r0, #4]
   12f38:	cmp	r1, #0
   12f3c:	moveq	r0, #0
   12f40:	bxeq	lr
   12f44:	ldr	r0, [r0]
   12f48:	mov	r3, #0
   12f4c:	add	r2, r0, #20
   12f50:	ldr	r0, [r2]
   12f54:	cmp	r0, #0
   12f58:	bxne	lr
   12f5c:	add	r3, r3, #1
   12f60:	add	r2, r2, #40	; 0x28
   12f64:	cmp	r3, r1
   12f68:	movcs	r0, #0
   12f6c:	bxcs	lr
   12f70:	b	12f50 <mythread_check_status@@Base+0x1c>

00012f74 <mythread_option@@Base>:
   12f74:	ldr	r0, [r0, #36]	; 0x24
   12f78:	bx	lr

00012f7c <mythread_entry_join@@Base>:
   12f7c:	push	{r4, sl, fp, lr}
   12f80:	add	fp, sp, #8
   12f84:	mov	r4, r0
   12f88:	cmp	r1, #0
   12f8c:	beq	12fa0 <mythread_entry_join@@Base+0x24>
   12f90:	ldr	r0, [r4, #32]
   12f94:	mov	r3, r1
   12f98:	mov	r1, r4
   12f9c:	blx	r3
   12fa0:	ldr	r1, [r4]
   12fa4:	ldr	r0, [r4, #32]
   12fa8:	bl	114b4 <mythread_thread_join@plt>
   12fac:	cmp	r0, #0
   12fb0:	movwne	r0, #1
   12fb4:	pop	{r4, sl, fp, pc}

00012fb8 <mythread_entry_quit@@Base>:
   12fb8:	push	{r4, sl, fp, lr}
   12fbc:	add	fp, sp, #8
   12fc0:	mov	r4, r0
   12fc4:	cmp	r1, #0
   12fc8:	beq	12fdc <mythread_entry_quit@@Base+0x24>
   12fcc:	ldr	r0, [r4, #32]
   12fd0:	mov	r3, r1
   12fd4:	mov	r1, r4
   12fd8:	blx	r3
   12fdc:	ldr	r1, [r4]
   12fe0:	ldr	r0, [r4, #32]
   12fe4:	bl	114b4 <mythread_thread_join@plt>
   12fe8:	cmp	r0, #0
   12fec:	movne	r0, #1
   12ff0:	popne	{r4, sl, fp, pc}
   12ff4:	ldr	r1, [r4]
   12ff8:	ldr	r0, [r4, #32]
   12ffc:	bl	117cc <mythread_thread_destroy@plt>
   13000:	cmp	r0, #0
   13004:	movwne	r0, #1
   13008:	pop	{r4, sl, fp, pc}

0001300c <mythread_entry_stop@@Base>:
   1300c:	push	{r4, sl, fp, lr}
   13010:	add	fp, sp, #8
   13014:	mov	r4, r0
   13018:	ldr	r0, [r0, #16]
   1301c:	tst	r0, #4
   13020:	bne	13050 <mythread_entry_stop@@Base+0x44>
   13024:	mov	r0, #4
   13028:	str	r0, [r4, #16]
   1302c:	ldr	r0, [r4, #16]
   13030:	tst	r0, #4
   13034:	bne	13050 <mythread_entry_stop@@Base+0x44>
   13038:	ldr	r0, [r4, #32]
   1303c:	ldr	r0, [r0, #24]
   13040:	bl	11148 <mythread_nanosleep_sleep@plt>
   13044:	ldr	r0, [r4, #16]
   13048:	tst	r0, #4
   1304c:	beq	13038 <mythread_entry_stop@@Base+0x2c>
   13050:	mov	r0, #0
   13054:	pop	{r4, sl, fp, pc}

00013058 <mythread_entry_suspend@@Base>:
   13058:	push	{r4, sl, fp, lr}
   1305c:	add	fp, sp, #8
   13060:	mov	r4, r0
   13064:	ldr	r0, [r0, #16]
   13068:	tst	r0, #1
   1306c:	bne	1309c <mythread_entry_suspend@@Base+0x44>
   13070:	mov	r0, #1
   13074:	str	r0, [r4, #16]
   13078:	b	13088 <mythread_entry_suspend@@Base+0x30>
   1307c:	ldr	r0, [r4, #32]
   13080:	ldr	r0, [r0, #24]
   13084:	bl	11148 <mythread_nanosleep_sleep@plt>
   13088:	ldr	r0, [r4, #16]
   1308c:	tst	r0, #4
   13090:	ldreq	r0, [r4, #16]
   13094:	tsteq	r0, #1
   13098:	beq	1307c <mythread_entry_suspend@@Base+0x24>
   1309c:	mov	r0, #0
   130a0:	pop	{r4, sl, fp, pc}

000130a4 <mythread_entry_resume@@Base>:
   130a4:	ldr	r2, [r0, #16]
   130a8:	tst	r2, #1
   130ac:	bne	130ec <mythread_entry_resume@@Base+0x48>
   130b0:	ldr	r2, [r0, #16]
   130b4:	str	r1, [r0, #16]
   130b8:	tst	r2, #4
   130bc:	beq	130f0 <mythread_entry_resume@@Base+0x4c>
   130c0:	push	{fp, lr}
   130c4:	mov	fp, sp
   130c8:	ldr	r1, [r0, #24]
   130cc:	ldr	r0, [r0, #32]
   130d0:	bl	119f4 <mythread_mutex_post@plt>
   130d4:	mov	r1, r0
   130d8:	mov	r0, #1
   130dc:	cmp	r1, #0
   130e0:	pop	{fp, lr}
   130e4:	moveq	r0, #0
   130e8:	bx	lr
   130ec:	str	r1, [r0, #16]
   130f0:	mov	r0, #0
   130f4:	bx	lr

000130f8 <mythread_entry_status@@Base>:
   130f8:	ldr	r0, [r0, #20]
   130fc:	bx	lr

00013100 <mythread_entry_mythread@@Base>:
   13100:	ldr	r0, [r0, #32]
   13104:	bx	lr

00013108 <mythread_callback_quit@@Base>:
   13108:	push	{r4, r5, fp, lr}
   1310c:	add	fp, sp, #8
   13110:	mov	r5, r0
   13114:	ldr	r0, [r1, #16]
   13118:	tst	r0, #2
   1311c:	popne	{r4, r5, fp, pc}
   13120:	mov	r4, r1
   13124:	ldr	r0, [r5, #24]
   13128:	bl	11148 <mythread_nanosleep_sleep@plt>
   1312c:	ldr	r0, [r4, #16]
   13130:	tst	r0, #2
   13134:	beq	13124 <mythread_callback_quit@@Base+0x1c>
   13138:	pop	{r4, r5, fp, pc}

0001313c <mythread_queue_create@@Base>:
   1313c:	mov	r0, #1
   13140:	mov	r1, #28
   13144:	b	11004 <mycore_calloc@plt>

00013148 <mythread_queue_init@@Base>:
   13148:	push	{r4, sl, fp, lr}
   1314c:	add	fp, sp, #8
   13150:	cmp	r1, #32
   13154:	mov	r4, r0
   13158:	mov	r0, #512	; 0x200
   1315c:	movls	r1, #32
   13160:	str	r0, [r4, #8]
   13164:	mov	r0, #512	; 0x200
   13168:	str	r1, [r4, #20]
   1316c:	mov	r1, #4
   13170:	bl	11004 <mycore_calloc@plt>
   13174:	cmp	r0, #0
   13178:	str	r0, [r4]
   1317c:	moveq	r0, #61	; 0x3d
   13180:	popeq	{r4, sl, fp, pc}
   13184:	ldr	r0, [r4, #20]
   13188:	add	r0, r0, r0, lsl #1
   1318c:	lsl	r0, r0, #2
   13190:	bl	119ac <mycore_malloc@plt>
   13194:	ldm	r4, {r1, r2}
   13198:	str	r0, [r1, r2, lsl #2]
   1319c:	mov	r0, #0
   131a0:	ldr	r1, [r4]
   131a4:	ldr	r2, [r1, r2, lsl #2]
   131a8:	cmp	r2, #0
   131ac:	popne	{r4, sl, fp, pc}
   131b0:	mov	r0, r1
   131b4:	bl	11a9c <mycore_free@plt>
   131b8:	str	r0, [r4]
   131bc:	mov	r0, #62	; 0x3e
   131c0:	pop	{r4, sl, fp, pc}

000131c4 <mythread_queue_clean@@Base>:
   131c4:	mov	r1, #0
   131c8:	str	r1, [r0, #24]
   131cc:	str	r1, [r0, #4]
   131d0:	str	r1, [r0, #12]
   131d4:	str	r1, [r0, #16]
   131d8:	bx	lr

000131dc <mythread_queue_destroy@@Base>:
   131dc:	cmp	r0, #0
   131e0:	beq	13244 <mythread_queue_destroy@@Base+0x68>
   131e4:	push	{r4, r5, fp, lr}
   131e8:	add	fp, sp, #8
   131ec:	mov	r4, r0
   131f0:	ldr	r0, [r0]
   131f4:	cmp	r0, #0
   131f8:	beq	13238 <mythread_queue_destroy@@Base+0x5c>
   131fc:	ldr	r0, [r0]
   13200:	bl	11a9c <mycore_free@plt>
   13204:	ldr	r0, [r4, #4]
   13208:	cmp	r0, #0
   1320c:	beq	13230 <mythread_queue_destroy@@Base+0x54>
   13210:	mov	r5, #1
   13214:	ldr	r0, [r4]
   13218:	ldr	r0, [r0, r5, lsl #2]
   1321c:	bl	11a9c <mycore_free@plt>
   13220:	ldr	r0, [r4, #4]
   13224:	add	r5, r5, #1
   13228:	cmp	r5, r0
   1322c:	bls	13214 <mythread_queue_destroy@@Base+0x38>
   13230:	ldr	r0, [r4]
   13234:	bl	11a9c <mycore_free@plt>
   13238:	mov	r0, r4
   1323c:	bl	11a9c <mycore_free@plt>
   13240:	pop	{r4, r5, fp, lr}
   13244:	mov	r0, #0
   13248:	bx	lr

0001324c <mythread_queue_node_clean@@Base>:
   1324c:	mov	r1, #0
   13250:	str	r1, [r0]
   13254:	str	r1, [r0, #4]
   13258:	str	r1, [r0, #8]
   1325c:	bx	lr

00013260 <mythread_queue_get_prev_node@@Base>:
   13260:	ldr	r0, [r0, #8]
   13264:	bx	lr

00013268 <mythread_queue_get_current_node@@Base>:
   13268:	ldm	r0, {r1, r2}
   1326c:	ldr	r0, [r0, #12]
   13270:	ldr	r1, [r1, r2, lsl #2]
   13274:	add	r0, r0, r0, lsl #1
   13278:	add	r0, r1, r0, lsl #2
   1327c:	bx	lr

00013280 <mythread_queue_get_first_node@@Base>:
   13280:	ldr	r0, [r0]
   13284:	ldr	r0, [r0]
   13288:	bx	lr

0001328c <mythread_queue_count_used_node@@Base>:
   1328c:	ldr	r0, [r0, #16]
   13290:	bx	lr

00013294 <mythread_queue_node_malloc@@Base>:
   13294:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13298:	add	fp, sp, #24
   1329c:	mov	r6, r0
   132a0:	ldr	r0, [r1, #12]
   132a4:	mov	r9, r1
   132a8:	ldr	r1, [r1, #20]
   132ac:	add	r0, r0, #1
   132b0:	cmp	r0, r1
   132b4:	str	r0, [r9, #12]
   132b8:	bcs	132c8 <mythread_queue_node_malloc@@Base+0x34>
   132bc:	ldr	r6, [r9]
   132c0:	ldr	r1, [r9, #4]
   132c4:	b	1340c <mythread_queue_node_malloc@@Base+0x178>
   132c8:	mov	r8, r2
   132cc:	ldmib	r9, {r0, r2}
   132d0:	add	r1, r0, #1
   132d4:	cmp	r1, r2
   132d8:	str	r1, [r9, #4]
   132dc:	bcs	132f4 <mythread_queue_node_malloc@@Base+0x60>
   132e0:	ldr	r6, [r9]
   132e4:	ldr	r0, [r6, r1, lsl #2]
   132e8:	cmp	r0, #0
   132ec:	bne	13404 <mythread_queue_node_malloc@@Base+0x170>
   132f0:	b	133d8 <mythread_queue_node_malloc@@Base+0x144>
   132f4:	cmp	r6, #0
   132f8:	beq	1338c <mythread_queue_node_malloc@@Base+0xf8>
   132fc:	ldr	r0, [r6, #16]
   13300:	cmp	r0, #0
   13304:	ldrne	r7, [r0]
   13308:	cmpne	r7, #0
   1330c:	beq	1338c <mythread_queue_node_malloc@@Base+0xf8>
   13310:	ldr	r0, [r6, #4]
   13314:	mov	r3, r0
   13318:	cmp	r3, #0
   1331c:	beq	13378 <mythread_queue_node_malloc@@Base+0xe4>
   13320:	ldm	r7, {r1, r2}
   13324:	mov	r5, #0
   13328:	ldr	r3, [r2, r5, lsl #2]
   1332c:	ldr	r4, [r1, #16]
   13330:	cmp	r3, r4
   13334:	bcs	13358 <mythread_queue_node_malloc@@Base+0xc4>
   13338:	ldr	r0, [r6, #24]
   1333c:	bl	11148 <mythread_nanosleep_sleep@plt>
   13340:	ldm	r7, {r1, r2}
   13344:	ldr	r0, [r2, r5, lsl #2]
   13348:	ldr	r3, [r1, #16]
   1334c:	cmp	r0, r3
   13350:	bcc	13338 <mythread_queue_node_malloc@@Base+0xa4>
   13354:	ldr	r0, [r6, #4]
   13358:	add	r5, r5, #1
   1335c:	mov	r3, r0
   13360:	cmp	r5, r0
   13364:	bcc	13328 <mythread_queue_node_malloc@@Base+0x94>
   13368:	ldr	r7, [r7, #12]
   1336c:	cmp	r7, #0
   13370:	bne	13318 <mythread_queue_node_malloc@@Base+0x84>
   13374:	b	13388 <mythread_queue_node_malloc@@Base+0xf4>
   13378:	mov	r3, #0
   1337c:	ldr	r7, [r7, #12]
   13380:	cmp	r7, #0
   13384:	bne	13318 <mythread_queue_node_malloc@@Base+0x84>
   13388:	ldr	r2, [r9, #8]
   1338c:	ldr	r0, [r9]
   13390:	add	r5, r2, #512	; 0x200
   13394:	lsl	r1, r5, #2
   13398:	bl	10da0 <mycore_realloc@plt>
   1339c:	cmp	r0, #0
   133a0:	beq	13428 <mythread_queue_node_malloc@@Base+0x194>
   133a4:	ldr	r1, [r9, #4]
   133a8:	mov	r6, r0
   133ac:	add	r0, r0, r1, lsl #2
   133b0:	sub	r1, r5, r1
   133b4:	lsl	r2, r1, #2
   133b8:	mov	r1, #0
   133bc:	bl	116d0 <memset@plt>
   133c0:	str	r6, [r9]
   133c4:	str	r5, [r9, #8]
   133c8:	ldr	r1, [r9, #4]
   133cc:	ldr	r0, [r6, r1, lsl #2]
   133d0:	cmp	r0, #0
   133d4:	bne	13404 <mythread_queue_node_malloc@@Base+0x170>
   133d8:	ldr	r0, [r9, #20]
   133dc:	add	r0, r0, r0, lsl #1
   133e0:	lsl	r0, r0, #2
   133e4:	bl	119ac <mycore_malloc@plt>
   133e8:	ldr	r2, [r9]
   133ec:	ldr	r1, [r9, #4]
   133f0:	str	r0, [r2, r1, lsl #2]
   133f4:	ldr	r6, [r9]
   133f8:	ldr	r0, [r6, r1, lsl #2]
   133fc:	cmp	r0, #0
   13400:	beq	13440 <mythread_queue_node_malloc@@Base+0x1ac>
   13404:	mov	r0, #0
   13408:	str	r0, [r9, #12]
   1340c:	ldr	r2, [r9, #16]
   13410:	add	r0, r0, r0, lsl #1
   13414:	add	r2, r2, #1
   13418:	str	r2, [r9, #16]
   1341c:	ldr	r1, [r6, r1, lsl #2]
   13420:	add	r0, r1, r0, lsl #2
   13424:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13428:	cmp	r8, #0
   1342c:	mov	r0, #0
   13430:	movne	r1, #61	; 0x3d
   13434:	strne	r1, [r8]
   13438:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   1343c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13440:	cmp	r8, #0
   13444:	mov	r0, #0
   13448:	movne	r1, #62	; 0x3e
   1344c:	strne	r1, [r8]
   13450:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   13454:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013458 <mythread_queue_list_wait_for_done@@Base>:
   13458:	push	{r4, r5, r6, sl, fp, lr}
   1345c:	add	fp, sp, #16
   13460:	cmp	r1, #0
   13464:	ldrne	r5, [r1]
   13468:	cmpne	r5, #0
   1346c:	bne	13474 <mythread_queue_list_wait_for_done@@Base+0x1c>
   13470:	pop	{r4, r5, r6, sl, fp, pc}
   13474:	ldr	ip, [r0, #4]
   13478:	mov	r4, r0
   1347c:	mov	r3, ip
   13480:	cmp	r3, #0
   13484:	bne	134a0 <mythread_queue_list_wait_for_done@@Base+0x48>
   13488:	b	134ec <mythread_queue_list_wait_for_done@@Base+0x94>
   1348c:	ldr	r5, [r5, #12]
   13490:	cmp	r5, #0
   13494:	popeq	{r4, r5, r6, sl, fp, pc}
   13498:	cmp	r3, #0
   1349c:	beq	134ec <mythread_queue_list_wait_for_done@@Base+0x94>
   134a0:	ldm	r5, {r1, r2}
   134a4:	mov	r6, #0
   134a8:	ldr	r3, [r2, r6, lsl #2]
   134ac:	ldr	r0, [r1, #16]
   134b0:	cmp	r3, r0
   134b4:	bcs	134d8 <mythread_queue_list_wait_for_done@@Base+0x80>
   134b8:	ldr	r0, [r4, #24]
   134bc:	bl	11148 <mythread_nanosleep_sleep@plt>
   134c0:	ldm	r5, {r1, r2}
   134c4:	ldr	r0, [r2, r6, lsl #2]
   134c8:	ldr	r3, [r1, #16]
   134cc:	cmp	r0, r3
   134d0:	bcc	134b8 <mythread_queue_list_wait_for_done@@Base+0x60>
   134d4:	ldr	ip, [r4, #4]
   134d8:	add	r6, r6, #1
   134dc:	mov	r3, ip
   134e0:	cmp	r6, ip
   134e4:	bcc	134a8 <mythread_queue_list_wait_for_done@@Base+0x50>
   134e8:	b	1348c <mythread_queue_list_wait_for_done@@Base+0x34>
   134ec:	mov	r3, #0
   134f0:	b	1348c <mythread_queue_list_wait_for_done@@Base+0x34>

000134f4 <mythread_queue_node_malloc_limit@@Base>:
   134f4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   134f8:	add	fp, sp, #24
   134fc:	mov	r5, r0
   13500:	ldr	r0, [r1, #12]
   13504:	mov	r9, r1
   13508:	ldr	r1, [r1, #16]
   1350c:	add	r0, r0, #1
   13510:	cmp	r1, r2
   13514:	str	r0, [r9, #12]
   13518:	bcs	13558 <mythread_queue_node_malloc_limit@@Base+0x64>
   1351c:	ldr	r1, [r9, #4]
   13520:	ldr	r2, [r9, #20]
   13524:	cmp	r0, r2
   13528:	bcc	1372c <mythread_queue_node_malloc_limit@@Base+0x238>
   1352c:	add	r1, r1, #1
   13530:	mov	r8, r3
   13534:	str	r1, [r9, #4]
   13538:	ldr	r2, [r9, #8]
   1353c:	cmp	r1, r2
   13540:	bcs	13614 <mythread_queue_node_malloc_limit@@Base+0x120>
   13544:	ldr	r5, [r9]
   13548:	ldr	r0, [r5, r1, lsl #2]
   1354c:	cmp	r0, #0
   13550:	bne	13724 <mythread_queue_node_malloc_limit@@Base+0x230>
   13554:	b	136f8 <mythread_queue_node_malloc_limit@@Base+0x204>
   13558:	ldr	r0, [r9, #16]
   1355c:	cmp	r5, #0
   13560:	add	r0, r0, #1
   13564:	str	r0, [r9, #16]
   13568:	beq	135f8 <mythread_queue_node_malloc_limit@@Base+0x104>
   1356c:	ldr	r0, [r5, #16]
   13570:	cmp	r0, #0
   13574:	ldrne	r6, [r0]
   13578:	cmpne	r6, #0
   1357c:	beq	135f8 <mythread_queue_node_malloc_limit@@Base+0x104>
   13580:	ldr	r0, [r5, #4]
   13584:	mov	r3, r0
   13588:	cmp	r3, #0
   1358c:	beq	135e8 <mythread_queue_node_malloc_limit@@Base+0xf4>
   13590:	ldm	r6, {r1, r2}
   13594:	mov	r7, #0
   13598:	ldr	r3, [r2, r7, lsl #2]
   1359c:	ldr	r4, [r1, #16]
   135a0:	cmp	r3, r4
   135a4:	bcs	135c8 <mythread_queue_node_malloc_limit@@Base+0xd4>
   135a8:	ldr	r0, [r5, #24]
   135ac:	bl	11148 <mythread_nanosleep_sleep@plt>
   135b0:	ldm	r6, {r1, r2}
   135b4:	ldr	r0, [r2, r7, lsl #2]
   135b8:	ldr	r3, [r1, #16]
   135bc:	cmp	r0, r3
   135c0:	bcc	135a8 <mythread_queue_node_malloc_limit@@Base+0xb4>
   135c4:	ldr	r0, [r5, #4]
   135c8:	add	r7, r7, #1
   135cc:	mov	r3, r0
   135d0:	cmp	r7, r0
   135d4:	bcc	13598 <mythread_queue_node_malloc_limit@@Base+0xa4>
   135d8:	ldr	r6, [r6, #12]
   135dc:	cmp	r6, #0
   135e0:	bne	13588 <mythread_queue_node_malloc_limit@@Base+0x94>
   135e4:	b	135f8 <mythread_queue_node_malloc_limit@@Base+0x104>
   135e8:	mov	r3, #0
   135ec:	ldr	r6, [r6, #12]
   135f0:	cmp	r6, #0
   135f4:	bne	13588 <mythread_queue_node_malloc_limit@@Base+0x94>
   135f8:	mov	r0, #0
   135fc:	mov	r1, #0
   13600:	str	r0, [r9, #24]
   13604:	str	r0, [r9, #4]
   13608:	str	r0, [r9, #12]
   1360c:	str	r0, [r9, #16]
   13610:	b	1372c <mythread_queue_node_malloc_limit@@Base+0x238>
   13614:	cmp	r5, #0
   13618:	beq	136ac <mythread_queue_node_malloc_limit@@Base+0x1b8>
   1361c:	ldr	r0, [r5, #16]
   13620:	cmp	r0, #0
   13624:	ldrne	r7, [r0]
   13628:	cmpne	r7, #0
   1362c:	beq	136ac <mythread_queue_node_malloc_limit@@Base+0x1b8>
   13630:	ldr	r0, [r5, #4]
   13634:	mov	r3, r0
   13638:	cmp	r3, #0
   1363c:	beq	13698 <mythread_queue_node_malloc_limit@@Base+0x1a4>
   13640:	ldm	r7, {r1, r2}
   13644:	mov	r6, #0
   13648:	ldr	r3, [r2, r6, lsl #2]
   1364c:	ldr	r4, [r1, #16]
   13650:	cmp	r3, r4
   13654:	bcs	13678 <mythread_queue_node_malloc_limit@@Base+0x184>
   13658:	ldr	r0, [r5, #24]
   1365c:	bl	11148 <mythread_nanosleep_sleep@plt>
   13660:	ldm	r7, {r1, r2}
   13664:	ldr	r0, [r2, r6, lsl #2]
   13668:	ldr	r3, [r1, #16]
   1366c:	cmp	r0, r3
   13670:	bcc	13658 <mythread_queue_node_malloc_limit@@Base+0x164>
   13674:	ldr	r0, [r5, #4]
   13678:	add	r6, r6, #1
   1367c:	mov	r3, r0
   13680:	cmp	r6, r0
   13684:	bcc	13648 <mythread_queue_node_malloc_limit@@Base+0x154>
   13688:	ldr	r7, [r7, #12]
   1368c:	cmp	r7, #0
   13690:	bne	13638 <mythread_queue_node_malloc_limit@@Base+0x144>
   13694:	b	136a8 <mythread_queue_node_malloc_limit@@Base+0x1b4>
   13698:	mov	r3, #0
   1369c:	ldr	r7, [r7, #12]
   136a0:	cmp	r7, #0
   136a4:	bne	13638 <mythread_queue_node_malloc_limit@@Base+0x144>
   136a8:	ldr	r2, [r9, #8]
   136ac:	ldr	r0, [r9]
   136b0:	add	r6, r2, #512	; 0x200
   136b4:	lsl	r1, r6, #2
   136b8:	bl	10da0 <mycore_realloc@plt>
   136bc:	cmp	r0, #0
   136c0:	beq	1374c <mythread_queue_node_malloc_limit@@Base+0x258>
   136c4:	ldr	r1, [r9, #4]
   136c8:	mov	r5, r0
   136cc:	add	r0, r0, r1, lsl #2
   136d0:	sub	r1, r6, r1
   136d4:	lsl	r2, r1, #2
   136d8:	mov	r1, #0
   136dc:	bl	116d0 <memset@plt>
   136e0:	str	r5, [r9]
   136e4:	str	r6, [r9, #8]
   136e8:	ldr	r1, [r9, #4]
   136ec:	ldr	r0, [r5, r1, lsl #2]
   136f0:	cmp	r0, #0
   136f4:	bne	13724 <mythread_queue_node_malloc_limit@@Base+0x230>
   136f8:	ldr	r0, [r9, #20]
   136fc:	add	r0, r0, r0, lsl #1
   13700:	lsl	r0, r0, #2
   13704:	bl	119ac <mycore_malloc@plt>
   13708:	ldr	r2, [r9]
   1370c:	ldr	r1, [r9, #4]
   13710:	str	r0, [r2, r1, lsl #2]
   13714:	ldr	r0, [r9]
   13718:	ldr	r0, [r0, r1, lsl #2]
   1371c:	cmp	r0, #0
   13720:	beq	13764 <mythread_queue_node_malloc_limit@@Base+0x270>
   13724:	mov	r0, #0
   13728:	str	r0, [r9, #12]
   1372c:	ldr	r2, [r9]
   13730:	ldr	r3, [r9, #16]
   13734:	add	r0, r0, r0, lsl #1
   13738:	add	r3, r3, #1
   1373c:	str	r3, [r9, #16]
   13740:	ldr	r1, [r2, r1, lsl #2]
   13744:	add	r0, r1, r0, lsl #2
   13748:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1374c:	cmp	r8, #0
   13750:	mov	r0, #0
   13754:	movne	r1, #61	; 0x3d
   13758:	strne	r1, [r8]
   1375c:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   13760:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13764:	cmp	r8, #0
   13768:	mov	r0, #0
   1376c:	movne	r1, #62	; 0x3e
   13770:	strne	r1, [r8]
   13774:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   13778:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001377c <mythread_queue_node_malloc_round@@Base>:
   1377c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13780:	add	fp, sp, #24
   13784:	ldr	r8, [r1]
   13788:	mov	r5, r0
   1378c:	mov	r4, r1
   13790:	ldr	r0, [r8, #12]
   13794:	add	r0, r0, #1
   13798:	str	r0, [r8, #12]
   1379c:	ldr	r1, [r8, #20]
   137a0:	ldr	r2, [r8, #16]
   137a4:	add	r2, r2, #1
   137a8:	cmp	r0, r1
   137ac:	str	r2, [r8, #16]
   137b0:	bcc	13834 <mythread_queue_node_malloc_round@@Base+0xb8>
   137b4:	cmp	r5, #0
   137b8:	mov	r0, r8
   137bc:	beq	13820 <mythread_queue_node_malloc_round@@Base+0xa4>
   137c0:	ldr	r2, [r4, #8]
   137c4:	mov	r0, r8
   137c8:	cmp	r2, #0
   137cc:	beq	13820 <mythread_queue_node_malloc_round@@Base+0xa4>
   137d0:	ldr	r1, [r4, #4]
   137d4:	mov	r7, #0
   137d8:	mov	r0, r8
   137dc:	ldr	r3, [r1, r7, lsl #2]
   137e0:	ldr	r6, [r0, #16]
   137e4:	cmp	r3, r6
   137e8:	bcs	1380c <mythread_queue_node_malloc_round@@Base+0x90>
   137ec:	ldr	r0, [r5, #24]
   137f0:	bl	11148 <mythread_nanosleep_sleep@plt>
   137f4:	ldm	r4, {r0, r1}
   137f8:	ldr	r2, [r1, r7, lsl #2]
   137fc:	ldr	r3, [r0, #16]
   13800:	cmp	r2, r3
   13804:	bcc	137ec <mythread_queue_node_malloc_round@@Base+0x70>
   13808:	ldr	r2, [r4, #8]
   1380c:	add	r7, r7, #1
   13810:	cmp	r7, r2
   13814:	bcc	137dc <mythread_queue_node_malloc_round@@Base+0x60>
   13818:	cmp	r4, #0
   1381c:	beq	13834 <mythread_queue_node_malloc_round@@Base+0xb8>
   13820:	mov	r1, #0
   13824:	str	r1, [r0, #24]
   13828:	str	r1, [r0, #4]
   1382c:	str	r1, [r0, #12]
   13830:	str	r1, [r0, #16]
   13834:	ldm	r8, {r0, r1}
   13838:	ldr	r2, [r8, #12]
   1383c:	ldr	r0, [r0, r1, lsl #2]
   13840:	add	r1, r2, r2, lsl #1
   13844:	add	r0, r0, r1, lsl #2
   13848:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001384c <mythread_queue_list_entry_wait_for_done@@Base>:
   1384c:	push	{r4, r5, r6, sl, fp, lr}
   13850:	add	fp, sp, #16
   13854:	cmp	r1, #0
   13858:	beq	138b4 <mythread_queue_list_entry_wait_for_done@@Base+0x68>
   1385c:	ldr	ip, [r1, #8]
   13860:	mov	r4, r1
   13864:	cmp	ip, #0
   13868:	popeq	{r4, r5, r6, sl, fp, pc}
   1386c:	mov	r5, r0
   13870:	ldm	r4, {r0, r1}
   13874:	mov	r6, #0
   13878:	ldr	r3, [r1, r6, lsl #2]
   1387c:	ldr	r2, [r0, #16]
   13880:	cmp	r3, r2
   13884:	bcs	138a8 <mythread_queue_list_entry_wait_for_done@@Base+0x5c>
   13888:	ldr	r0, [r5, #24]
   1388c:	bl	11148 <mythread_nanosleep_sleep@plt>
   13890:	ldm	r4, {r0, r1}
   13894:	ldr	r2, [r1, r6, lsl #2]
   13898:	ldr	r3, [r0, #16]
   1389c:	cmp	r2, r3
   138a0:	bcc	13888 <mythread_queue_list_entry_wait_for_done@@Base+0x3c>
   138a4:	ldr	ip, [r4, #8]
   138a8:	add	r6, r6, #1
   138ac:	cmp	r6, ip
   138b0:	bcc	13878 <mythread_queue_list_entry_wait_for_done@@Base+0x2c>
   138b4:	pop	{r4, r5, r6, sl, fp, pc}

000138b8 <mythread_queue_list_entry_clean@@Base>:
   138b8:	cmp	r0, #0
   138bc:	bxeq	lr
   138c0:	ldr	r0, [r0]
   138c4:	mov	r1, #0
   138c8:	str	r1, [r0, #24]
   138cc:	str	r1, [r0, #4]
   138d0:	str	r1, [r0, #12]
   138d4:	str	r1, [r0, #16]
   138d8:	bx	lr

000138dc <mythread_queue_list_create@@Base>:
   138dc:	mov	r0, #1
   138e0:	mov	r1, #12
   138e4:	b	11004 <mycore_calloc@plt>

000138e8 <mythread_queue_list_destroy@@Base>:
   138e8:	cmp	r0, #0
   138ec:	bxeq	lr
   138f0:	b	11a9c <mycore_free@plt>

000138f4 <mythread_queue_list_get_count@@Base>:
   138f4:	ldr	r0, [r0, #8]
   138f8:	bx	lr

000138fc <mythread_queue_list_see_for_done@@Base>:
   138fc:	push	{r4, r5, fp, lr}
   13900:	add	fp, sp, #8
   13904:	cmp	r1, #0
   13908:	mov	r2, r0
   1390c:	mov	r0, #1
   13910:	ldrne	r1, [r1]
   13914:	cmpne	r1, #0
   13918:	bne	13920 <mythread_queue_list_see_for_done@@Base+0x24>
   1391c:	pop	{r4, r5, fp, pc}
   13920:	ldr	ip, [r2, #4]
   13924:	cmp	ip, #0
   13928:	bne	13948 <mythread_queue_list_see_for_done@@Base+0x4c>
   1392c:	ldr	r1, [r1, #12]
   13930:	cmp	r1, #0
   13934:	bne	1392c <mythread_queue_list_see_for_done@@Base+0x30>
   13938:	b	1391c <mythread_queue_list_see_for_done@@Base+0x20>
   1393c:	ldr	r1, [r1, #12]
   13940:	cmp	r1, #0
   13944:	popeq	{r4, r5, fp, pc}
   13948:	ldr	lr, [r1]
   1394c:	ldr	r2, [r1, #4]
   13950:	mov	r3, #0
   13954:	ldr	r4, [r2, r3, lsl #2]
   13958:	ldr	r5, [lr, #16]
   1395c:	cmp	r4, r5
   13960:	movcc	r0, #0
   13964:	popcc	{r4, r5, fp, pc}
   13968:	add	r3, r3, #1
   1396c:	cmp	r3, ip
   13970:	bcc	13954 <mythread_queue_list_see_for_done@@Base+0x58>
   13974:	b	1393c <mythread_queue_list_see_for_done@@Base+0x40>

00013978 <mythread_queue_list_see_for_done_by_thread@@Base>:
   13978:	push	{fp, lr}
   1397c:	mov	fp, sp
   13980:	mov	r0, #1
   13984:	cmp	r1, #0
   13988:	beq	139bc <mythread_queue_list_see_for_done_by_thread@@Base+0x44>
   1398c:	ldr	r1, [r1]
   13990:	b	13998 <mythread_queue_list_see_for_done_by_thread@@Base+0x20>
   13994:	ldr	r1, [r1, #12]
   13998:	cmp	r1, #0
   1399c:	popeq	{fp, pc}
   139a0:	ldr	ip, [r1]
   139a4:	ldr	r3, [r1, #4]
   139a8:	ldr	lr, [r3, r2, lsl #2]
   139ac:	ldr	r3, [ip, #16]
   139b0:	cmp	lr, r3
   139b4:	bcs	13994 <mythread_queue_list_see_for_done_by_thread@@Base+0x1c>
   139b8:	mov	r0, #0
   139bc:	pop	{fp, pc}

000139c0 <mythread_queue_list_entry_push@@Base>:
   139c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   139c4:	add	fp, sp, #28
   139c8:	sub	sp, sp, #4
   139cc:	ldr	r4, [fp, #12]
   139d0:	mov	r8, r0
   139d4:	mov	sl, r1
   139d8:	mov	r1, #20
   139dc:	mov	r7, r3
   139e0:	str	r2, [sp]
   139e4:	cmp	r4, #0
   139e8:	movne	r0, #0
   139ec:	strne	r0, [r4]
   139f0:	mov	r0, #1
   139f4:	bl	11004 <mycore_calloc@plt>
   139f8:	cmp	r0, #0
   139fc:	beq	13a30 <mythread_queue_list_entry_push@@Base+0x70>
   13a00:	mov	r9, r0
   13a04:	ldr	r0, [fp, #8]
   13a08:	cmp	r0, #0
   13a0c:	str	r0, [r9, #8]
   13a10:	beq	13a4c <mythread_queue_list_entry_push@@Base+0x8c>
   13a14:	mov	r1, #4
   13a18:	bl	11004 <mycore_calloc@plt>
   13a1c:	cmp	r0, #0
   13a20:	str	r0, [r9, #4]
   13a24:	bne	13a54 <mythread_queue_list_entry_push@@Base+0x94>
   13a28:	mov	r0, r9
   13a2c:	bl	11a9c <mycore_free@plt>
   13a30:	cmp	r4, #0
   13a34:	mov	r9, #0
   13a38:	movne	r0, #60	; 0x3c
   13a3c:	strne	r0, [r4]
   13a40:	mov	r0, r9
   13a44:	sub	sp, fp, #28
   13a48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a4c:	mov	r0, #0
   13a50:	str	r0, [r9, #4]
   13a54:	cmp	sl, #0
   13a58:	str	r7, [r9]
   13a5c:	beq	13ae0 <mythread_queue_list_entry_push@@Base+0x120>
   13a60:	mov	r7, #0
   13a64:	mov	r4, #0
   13a68:	ldr	r0, [r8, r4, lsl #2]
   13a6c:	ldr	r3, [r0, #32]
   13a70:	ldr	r1, [r0, #4]
   13a74:	ldr	r2, [r0, #12]
   13a78:	cmp	r3, #1
   13a7c:	bne	13aac <mythread_queue_list_entry_push@@Base+0xec>
   13a80:	cmp	r2, r1
   13a84:	bhi	13ad0 <mythread_queue_list_entry_push@@Base+0x110>
   13a88:	ldr	r3, [r9, #4]
   13a8c:	mov	r5, #0
   13a90:	add	r3, r3, r2, lsl #2
   13a94:	str	r5, [r3, r5, lsl #2]
   13a98:	add	r5, r5, #1
   13a9c:	add	r6, r2, r5
   13aa0:	cmp	r6, r1
   13aa4:	bls	13a94 <mythread_queue_list_entry_push@@Base+0xd4>
   13aa8:	b	13ac8 <mythread_queue_list_entry_push@@Base+0x108>
   13aac:	cmp	r2, r1
   13ab0:	bhi	13ad0 <mythread_queue_list_entry_push@@Base+0x110>
   13ab4:	ldr	r3, [r9, #4]
   13ab8:	str	r7, [r3, r2, lsl #2]
   13abc:	add	r2, r2, #1
   13ac0:	cmp	r2, r1
   13ac4:	bls	13ab8 <mythread_queue_list_entry_push@@Base+0xf8>
   13ac8:	cmp	r0, #0
   13acc:	beq	13ad4 <mythread_queue_list_entry_push@@Base+0x114>
   13ad0:	bl	11178 <mythread_suspend@plt>
   13ad4:	add	r4, r4, #1
   13ad8:	cmp	r4, sl
   13adc:	bne	13a68 <mythread_queue_list_entry_push@@Base+0xa8>
   13ae0:	ldr	r2, [sp]
   13ae4:	ldr	r0, [r2]
   13ae8:	cmp	r0, #0
   13aec:	beq	13b04 <mythread_queue_list_entry_push@@Base+0x144>
   13af0:	mov	r0, r2
   13af4:	ldr	r1, [r0, #4]!
   13af8:	str	r9, [r1, #12]
   13afc:	str	r1, [r9, #16]
   13b00:	b	13b0c <mythread_queue_list_entry_push@@Base+0x14c>
   13b04:	mov	r0, r2
   13b08:	str	r9, [r0], #4
   13b0c:	str	r9, [r0]
   13b10:	cmp	sl, #0
   13b14:	ldr	r0, [r2, #8]
   13b18:	add	r0, r0, #1
   13b1c:	str	r0, [r2, #8]
   13b20:	beq	13b44 <mythread_queue_list_entry_push@@Base+0x184>
   13b24:	ldr	r0, [r8]
   13b28:	cmp	r0, #0
   13b2c:	beq	13b38 <mythread_queue_list_entry_push@@Base+0x178>
   13b30:	mov	r1, #0
   13b34:	bl	11424 <mythread_resume@plt>
   13b38:	subs	sl, sl, #1
   13b3c:	add	r8, r8, #4
   13b40:	bne	13b24 <mythread_queue_list_entry_push@@Base+0x164>
   13b44:	mov	r0, r9
   13b48:	sub	sp, fp, #28
   13b4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013b50 <mythread_queue_list_entry_make_batch@@Base>:
   13b50:	cmp	r1, #0
   13b54:	beq	13b88 <mythread_queue_list_entry_make_batch@@Base+0x38>
   13b58:	ldr	ip, [r0, #4]
   13b5c:	ldr	r0, [r0, #12]
   13b60:	cmp	r0, ip
   13b64:	bxhi	lr
   13b68:	ldr	r1, [r1, #4]
   13b6c:	mov	r3, #0
   13b70:	add	r1, r1, r0, lsl #2
   13b74:	str	r3, [r1, r3, lsl #2]
   13b78:	add	r3, r3, #1
   13b7c:	add	r2, r0, r3
   13b80:	cmp	r2, ip
   13b84:	bls	13b74 <mythread_queue_list_entry_make_batch@@Base+0x24>
   13b88:	bx	lr

00013b8c <mythread_queue_list_entry_make_stream@@Base>:
   13b8c:	cmp	r1, #0
   13b90:	beq	13bbc <mythread_queue_list_entry_make_stream@@Base+0x30>
   13b94:	ldr	r2, [r0, #4]
   13b98:	ldr	r0, [r0, #12]
   13b9c:	cmp	r0, r2
   13ba0:	bxhi	lr
   13ba4:	ldr	r1, [r1, #4]
   13ba8:	mov	r3, #0
   13bac:	str	r3, [r1, r0, lsl #2]
   13bb0:	add	r0, r0, #1
   13bb4:	cmp	r0, r2
   13bb8:	bls	13bac <mythread_queue_list_entry_make_stream@@Base+0x20>
   13bbc:	bx	lr

00013bc0 <mythread_queue_list_entry_delete@@Base>:
   13bc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13bc4:	add	fp, sp, #28
   13bc8:	sub	sp, sp, #4
   13bcc:	mov	r9, r3
   13bd0:	mov	sl, r2
   13bd4:	mov	r4, r1
   13bd8:	mov	r7, r0
   13bdc:	cmp	r1, #0
   13be0:	beq	13c08 <mythread_queue_list_entry_delete@@Base+0x48>
   13be4:	mov	r5, r4
   13be8:	mov	r6, r7
   13bec:	ldr	r0, [r6]
   13bf0:	cmp	r0, #0
   13bf4:	beq	13bfc <mythread_queue_list_entry_delete@@Base+0x3c>
   13bf8:	bl	11178 <mythread_suspend@plt>
   13bfc:	subs	r5, r5, #1
   13c00:	add	r6, r6, #4
   13c04:	bne	13bec <mythread_queue_list_entry_delete@@Base+0x2c>
   13c08:	ldr	r0, [r9, #16]
   13c0c:	ldr	r1, [r9, #12]
   13c10:	ldr	r8, [fp, #8]
   13c14:	cmp	r0, #0
   13c18:	strne	r1, [r0, #12]
   13c1c:	cmp	r1, #0
   13c20:	strne	r0, [r1, #16]
   13c24:	ldr	r2, [sl]
   13c28:	cmp	r2, r9
   13c2c:	streq	r1, [sl]
   13c30:	ldr	r1, [sl, #4]
   13c34:	cmp	r1, r9
   13c38:	streq	r0, [sl, #4]
   13c3c:	cmp	r4, #0
   13c40:	ldr	r0, [sl, #8]
   13c44:	sub	r0, r0, #1
   13c48:	str	r0, [sl, #8]
   13c4c:	beq	13c70 <mythread_queue_list_entry_delete@@Base+0xb0>
   13c50:	ldr	r0, [r7]
   13c54:	cmp	r0, #0
   13c58:	beq	13c64 <mythread_queue_list_entry_delete@@Base+0xa4>
   13c5c:	mov	r1, #0
   13c60:	bl	11424 <mythread_resume@plt>
   13c64:	subs	r4, r4, #1
   13c68:	add	r7, r7, #4
   13c6c:	bne	13c50 <mythread_queue_list_entry_delete@@Base+0x90>
   13c70:	cmp	r8, #0
   13c74:	ldrne	r5, [r9]
   13c78:	cmpne	r5, #0
   13c7c:	bne	13ca4 <mythread_queue_list_entry_delete@@Base+0xe4>
   13c80:	ldr	r0, [r9, #4]
   13c84:	cmp	r0, #0
   13c88:	beq	13c90 <mythread_queue_list_entry_delete@@Base+0xd0>
   13c8c:	bl	11a9c <mycore_free@plt>
   13c90:	mov	r0, r9
   13c94:	bl	11a9c <mycore_free@plt>
   13c98:	mov	r0, #0
   13c9c:	sub	sp, fp, #28
   13ca0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ca4:	ldr	r0, [r5]
   13ca8:	cmp	r0, #0
   13cac:	beq	13cec <mythread_queue_list_entry_delete@@Base+0x12c>
   13cb0:	ldr	r0, [r0]
   13cb4:	bl	11a9c <mycore_free@plt>
   13cb8:	ldr	r0, [r5, #4]
   13cbc:	cmp	r0, #0
   13cc0:	beq	13ce4 <mythread_queue_list_entry_delete@@Base+0x124>
   13cc4:	mov	r4, #1
   13cc8:	ldr	r0, [r5]
   13ccc:	ldr	r0, [r0, r4, lsl #2]
   13cd0:	bl	11a9c <mycore_free@plt>
   13cd4:	ldr	r0, [r5, #4]
   13cd8:	add	r4, r4, #1
   13cdc:	cmp	r4, r0
   13ce0:	bls	13cc8 <mythread_queue_list_entry_delete@@Base+0x108>
   13ce4:	ldr	r0, [r5]
   13ce8:	bl	11a9c <mycore_free@plt>
   13cec:	mov	r0, r5
   13cf0:	bl	11a9c <mycore_free@plt>
   13cf4:	ldr	r0, [r9, #4]
   13cf8:	cmp	r0, #0
   13cfc:	bne	13c8c <mythread_queue_list_entry_delete@@Base+0xcc>
   13d00:	b	13c90 <mythread_queue_list_entry_delete@@Base+0xd0>

00013d04 <mythread_queue_list_entry_see_for_done@@Base>:
   13d04:	push	{r4, sl, fp, lr}
   13d08:	add	fp, sp, #8
   13d0c:	mov	r1, r0
   13d10:	mov	r0, #1
   13d14:	cmp	r1, #0
   13d18:	ldrne	ip, [r1, #8]
   13d1c:	cmpne	ip, #0
   13d20:	bne	13d28 <mythread_queue_list_entry_see_for_done@@Base+0x24>
   13d24:	pop	{r4, sl, fp, pc}
   13d28:	ldr	lr, [r1]
   13d2c:	ldr	r1, [r1, #4]
   13d30:	mov	r2, #0
   13d34:	ldr	r3, [r1, r2, lsl #2]
   13d38:	ldr	r4, [lr, #16]
   13d3c:	cmp	r3, r4
   13d40:	bcc	13d60 <mythread_queue_list_entry_see_for_done@@Base+0x5c>
   13d44:	add	r2, r2, #1
   13d48:	cmp	r2, ip
   13d4c:	popcs	{r4, sl, fp, pc}
   13d50:	ldr	r3, [r1, r2, lsl #2]
   13d54:	ldr	r4, [lr, #16]
   13d58:	cmp	r3, r4
   13d5c:	bcs	13d44 <mythread_queue_list_entry_see_for_done@@Base+0x40>
   13d60:	mov	r0, #0
   13d64:	pop	{r4, sl, fp, pc}

00013d68 <mythread_function_see_opt@@Base>:
   13d68:	push	{r4, r5, r6, sl, fp, lr}
   13d6c:	add	fp, sp, #16
   13d70:	sub	sp, sp, #8
   13d74:	str	r1, [sp, #4]
   13d78:	mov	r4, r0
   13d7c:	mov	r6, #0
   13d80:	ldr	r0, [r0, #28]
   13d84:	ldr	r1, [r0, #16]
   13d88:	ldr	r5, [r1, #8]
   13d8c:	cmp	r5, r3
   13d90:	bne	13e28 <mythread_function_see_opt@@Base+0xc0>
   13d94:	ldr	r3, [sp, #4]
   13d98:	tst	r3, #4
   13d9c:	bne	13de8 <mythread_function_see_opt@@Base+0x80>
   13da0:	ldr	r3, [sp, #4]
   13da4:	tst	r3, #2
   13da8:	beq	13e20 <mythread_function_see_opt@@Base+0xb8>
   13dac:	cmp	r1, #0
   13db0:	beq	13e58 <mythread_function_see_opt@@Base+0xf0>
   13db4:	ldr	r1, [r1]
   13db8:	cmp	r1, #0
   13dbc:	bne	13dd0 <mythread_function_see_opt@@Base+0x68>
   13dc0:	b	13e58 <mythread_function_see_opt@@Base+0xf0>
   13dc4:	ldr	r1, [r1, #12]
   13dc8:	cmp	r1, #0
   13dcc:	beq	13e58 <mythread_function_see_opt@@Base+0xf0>
   13dd0:	ldm	r1, {r3, r5}
   13dd4:	ldr	r5, [r5, r2, lsl #2]
   13dd8:	ldr	r3, [r3, #16]
   13ddc:	cmp	r5, r3
   13de0:	bcs	13dc4 <mythread_function_see_opt@@Base+0x5c>
   13de4:	b	13e20 <mythread_function_see_opt@@Base+0xb8>
   13de8:	cmp	r1, #0
   13dec:	beq	13e34 <mythread_function_see_opt@@Base+0xcc>
   13df0:	ldr	r1, [r1]
   13df4:	cmp	r1, #0
   13df8:	bne	13e0c <mythread_function_see_opt@@Base+0xa4>
   13dfc:	b	13e34 <mythread_function_see_opt@@Base+0xcc>
   13e00:	ldr	r1, [r1, #12]
   13e04:	cmp	r1, #0
   13e08:	beq	13e34 <mythread_function_see_opt@@Base+0xcc>
   13e0c:	ldm	r1, {r3, r5}
   13e10:	ldr	r5, [r5, r2, lsl #2]
   13e14:	ldr	r3, [r3, #16]
   13e18:	cmp	r5, r3
   13e1c:	bcs	13e00 <mythread_function_see_opt@@Base+0x98>
   13e20:	ldr	r0, [fp, #8]
   13e24:	bl	11148 <mythread_nanosleep_sleep@plt>
   13e28:	mov	r0, r6
   13e2c:	sub	sp, fp, #16
   13e30:	pop	{r4, r5, r6, sl, fp, pc}
   13e34:	mov	r1, #4
   13e38:	str	r1, [r4, #12]
   13e3c:	ldr	r1, [r4, #20]
   13e40:	bl	11a6c <mythread_mutex_wait@plt>
   13e44:	mov	r6, #0
   13e48:	str	r6, [r4, #12]
   13e4c:	mov	r0, r6
   13e50:	sub	sp, fp, #16
   13e54:	pop	{r4, r5, r6, sl, fp, pc}
   13e58:	ldr	r1, [r4, #20]
   13e5c:	bl	11520 <mythread_mutex_close@plt>
   13e60:	ldr	r0, [r4, #24]
   13e64:	bl	11940 <mythread_nanosleep_destroy@plt>
   13e68:	mov	r0, #2
   13e6c:	mov	r6, #1
   13e70:	str	r0, [r4, #12]
   13e74:	mov	r0, r6
   13e78:	sub	sp, fp, #16
   13e7c:	pop	{r4, r5, r6, sl, fp, pc}

00013e80 <mythread_function_queue_batch@@Base>:
   13e80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e84:	add	fp, sp, #28
   13e88:	sub	sp, sp, #12
   13e8c:	ldr	r4, [r0, #28]
   13e90:	ldr	r1, [r0]
   13e94:	mov	r5, r0
   13e98:	ldr	r6, [r4, #16]
   13e9c:	mov	r0, r4
   13ea0:	bl	10f80 <myhread_increase_id_by_entry_id@plt>
   13ea4:	ldr	r1, [r5, #20]
   13ea8:	mov	r7, r0
   13eac:	mov	r0, r4
   13eb0:	bl	11a6c <mythread_mutex_wait@plt>
   13eb4:	str	r6, [sp, #8]
   13eb8:	ldr	r0, [r4, #36]	; 0x24
   13ebc:	tst	r0, #1
   13ec0:	beq	13ef4 <mythread_function_queue_batch@@Base+0x74>
   13ec4:	mov	r0, #1
   13ec8:	str	r0, [r5, #12]
   13ecc:	ldr	r0, [r4, #36]	; 0x24
   13ed0:	tst	r0, #1
   13ed4:	beq	13eec <mythread_function_queue_batch@@Base+0x6c>
   13ed8:	ldr	r0, [r5, #24]
   13edc:	bl	11148 <mythread_nanosleep_sleep@plt>
   13ee0:	ldr	r0, [r4, #36]	; 0x24
   13ee4:	tst	r0, #1
   13ee8:	bne	13ed8 <mythread_function_queue_batch@@Base+0x58>
   13eec:	mov	r0, #0
   13ef0:	str	r0, [r5, #12]
   13ef4:	ldr	r9, [r6]
   13ef8:	mov	r8, #0
   13efc:	cmp	r9, #0
   13f00:	bne	13f70 <mythread_function_queue_batch@@Base+0xf0>
   13f04:	b	13f94 <mythread_function_queue_batch@@Base+0x114>
   13f08:	ldr	ip, [sl, r7, lsl #2]
   13f0c:	ldr	r2, [r0, #20]
   13f10:	ldr	r3, [sl, r7, lsl #2]
   13f14:	mov	r6, r5
   13f18:	ldr	r5, [r0]
   13f1c:	ldr	r0, [r0, #20]
   13f20:	mov	r1, r7
   13f24:	mov	r7, r4
   13f28:	udiv	r4, r3, r0
   13f2c:	mls	r0, r4, r0, r3
   13f30:	mov	r4, r7
   13f34:	mov	r7, r1
   13f38:	udiv	r1, ip, r2
   13f3c:	ldr	r1, [r5, r1, lsl #2]
   13f40:	add	r0, r0, r0, lsl #1
   13f44:	mov	r5, r6
   13f48:	add	r1, r1, r0, lsl #2
   13f4c:	ldm	r6, {r0, r2}
   13f50:	blx	r2
   13f54:	ldr	r0, [r4, #4]
   13f58:	ldr	r1, [sl, r7, lsl #2]
   13f5c:	add	r0, r1, r0
   13f60:	str	r0, [sl, r7, lsl #2]
   13f64:	ldr	r9, [r9, #12]
   13f68:	cmp	r9, #0
   13f6c:	beq	13f94 <mythread_function_queue_batch@@Base+0x114>
   13f70:	ldm	r9, {r0, sl}
   13f74:	ldr	r1, [sl, r7, lsl #2]
   13f78:	ldr	r2, [r0, #16]
   13f7c:	cmp	r1, r2
   13f80:	bcc	13f08 <mythread_function_queue_batch@@Base+0x88>
   13f84:	ldr	r9, [r9, #12]
   13f88:	add	r8, r8, #1
   13f8c:	cmp	r9, #0
   13f90:	bne	13f70 <mythread_function_queue_batch@@Base+0xf0>
   13f94:	ldr	r6, [sp, #8]
   13f98:	ldr	r0, [r6, #8]
   13f9c:	cmp	r8, r0
   13fa0:	bne	13eb8 <mythread_function_queue_batch@@Base+0x38>
   13fa4:	ldr	r1, [r4, #36]	; 0x24
   13fa8:	ldr	r0, [r5, #24]
   13fac:	mov	r2, r7
   13fb0:	mov	r3, r8
   13fb4:	str	r0, [sp]
   13fb8:	mov	r0, r5
   13fbc:	bl	10fd4 <mythread_function_see_opt@plt>
   13fc0:	cmp	r0, #0
   13fc4:	beq	13eb8 <mythread_function_queue_batch@@Base+0x38>
   13fc8:	mov	r0, #0
   13fcc:	sub	sp, fp, #28
   13fd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013fd4 <mythread_function_queue_stream@@Base>:
   13fd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13fd8:	add	fp, sp, #28
   13fdc:	sub	sp, sp, #12
   13fe0:	ldr	r4, [r0, #28]
   13fe4:	ldr	r1, [r0]
   13fe8:	mov	r8, r0
   13fec:	ldr	r5, [r4, #16]
   13ff0:	mov	r0, r4
   13ff4:	bl	10f80 <myhread_increase_id_by_entry_id@plt>
   13ff8:	ldr	r1, [r8, #20]
   13ffc:	mov	r6, r0
   14000:	mov	r0, r4
   14004:	bl	11a6c <mythread_mutex_wait@plt>
   14008:	str	r4, [sp, #8]
   1400c:	str	r5, [sp, #4]
   14010:	ldr	r0, [r4, #36]	; 0x24
   14014:	tst	r0, #1
   14018:	beq	1404c <mythread_function_queue_stream@@Base+0x78>
   1401c:	mov	r0, #1
   14020:	str	r0, [r8, #12]
   14024:	ldr	r0, [r4, #36]	; 0x24
   14028:	tst	r0, #1
   1402c:	beq	14044 <mythread_function_queue_stream@@Base+0x70>
   14030:	ldr	r0, [r8, #24]
   14034:	bl	11148 <mythread_nanosleep_sleep@plt>
   14038:	ldr	r0, [r4, #36]	; 0x24
   1403c:	tst	r0, #1
   14040:	bne	14030 <mythread_function_queue_stream@@Base+0x5c>
   14044:	mov	r0, #0
   14048:	str	r0, [r8, #12]
   1404c:	ldr	r9, [r5]
   14050:	mov	r7, #0
   14054:	cmp	r9, #0
   14058:	bne	140ac <mythread_function_queue_stream@@Base+0xd8>
   1405c:	b	140d0 <mythread_function_queue_stream@@Base+0xfc>
   14060:	ldr	r1, [sl, r6, lsl #2]
   14064:	ldr	r2, [r0, #20]
   14068:	ldr	r3, [sl, r6, lsl #2]
   1406c:	ldr	r5, [r0]
   14070:	ldr	r0, [r0, #20]
   14074:	udiv	r1, r1, r2
   14078:	udiv	r4, r3, r0
   1407c:	ldr	r1, [r5, r1, lsl #2]
   14080:	mls	r0, r4, r0, r3
   14084:	add	r0, r0, r0, lsl #1
   14088:	add	r1, r1, r0, lsl #2
   1408c:	ldm	r8, {r0, r2}
   14090:	blx	r2
   14094:	ldr	r0, [sl, r6, lsl #2]
   14098:	add	r0, r0, #1
   1409c:	str	r0, [sl, r6, lsl #2]
   140a0:	ldr	r9, [r9, #12]
   140a4:	cmp	r9, #0
   140a8:	beq	140d0 <mythread_function_queue_stream@@Base+0xfc>
   140ac:	ldm	r9, {r0, sl}
   140b0:	ldr	r1, [sl, r6, lsl #2]
   140b4:	ldr	r2, [r0, #16]
   140b8:	cmp	r1, r2
   140bc:	bcc	14060 <mythread_function_queue_stream@@Base+0x8c>
   140c0:	ldr	r9, [r9, #12]
   140c4:	add	r7, r7, #1
   140c8:	cmp	r9, #0
   140cc:	bne	140ac <mythread_function_queue_stream@@Base+0xd8>
   140d0:	ldr	r5, [sp, #4]
   140d4:	ldr	r0, [r5, #8]
   140d8:	ldr	r4, [sp, #8]
   140dc:	cmp	r7, r0
   140e0:	bne	14010 <mythread_function_queue_stream@@Base+0x3c>
   140e4:	ldr	r1, [r4, #36]	; 0x24
   140e8:	ldr	r0, [r8, #24]
   140ec:	mov	r2, r6
   140f0:	mov	r3, r7
   140f4:	str	r0, [sp]
   140f8:	mov	r0, r8
   140fc:	bl	10fd4 <mythread_function_see_opt@plt>
   14100:	cmp	r0, #0
   14104:	beq	14010 <mythread_function_queue_stream@@Base+0x3c>
   14108:	mov	r0, #0
   1410c:	sub	sp, fp, #28
   14110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014114 <mythread_function@@Base>:
   14114:	push	{r4, r5, r6, sl, fp, lr}
   14118:	add	fp, sp, #16
   1411c:	ldr	r5, [r0, #28]
   14120:	ldr	r1, [r0, #20]
   14124:	mov	r4, r0
   14128:	mov	r0, r5
   1412c:	bl	11a6c <mythread_mutex_wait@plt>
   14130:	mov	r6, #0
   14134:	b	1413c <mythread_function@@Base+0x28>
   14138:	str	r6, [r4, #12]
   1413c:	ldm	r4, {r0, r2}
   14140:	mov	r1, r4
   14144:	blx	r2
   14148:	ldr	r0, [r4, #12]
   1414c:	orr	r0, r0, #8
   14150:	str	r0, [r4, #12]
   14154:	ldr	r1, [r4, #12]
   14158:	ldr	r0, [r4, #12]
   1415c:	tst	r1, #1
   14160:	bne	14188 <mythread_function@@Base+0x74>
   14164:	orr	r0, r0, #4
   14168:	str	r0, [r4, #12]
   1416c:	mov	r0, r5
   14170:	ldr	r1, [r4, #20]
   14174:	bl	11a6c <mythread_mutex_wait@plt>
   14178:	b	14190 <mythread_function@@Base+0x7c>
   1417c:	ldr	r0, [r4, #24]
   14180:	bl	11148 <mythread_nanosleep_sleep@plt>
   14184:	ldr	r0, [r4, #12]
   14188:	tst	r0, #1
   1418c:	bne	1417c <mythread_function@@Base+0x68>
   14190:	ldr	r0, [r5, #36]	; 0x24
   14194:	tst	r0, #2
   14198:	ldreq	r0, [r4, #12]
   1419c:	tsteq	r0, #2
   141a0:	beq	14138 <mythread_function@@Base+0x24>
   141a4:	ldr	r1, [r4, #20]
   141a8:	mov	r0, r5
   141ac:	bl	11520 <mythread_mutex_close@plt>
   141b0:	ldr	r0, [r4, #24]
   141b4:	bl	11940 <mythread_nanosleep_destroy@plt>
   141b8:	mov	r0, #2
   141bc:	str	r0, [r4, #12]
   141c0:	mov	r0, #0
   141c4:	pop	{r4, r5, r6, sl, fp, pc}

000141c8 <mycore_power@@Base>:
   141c8:	cmp	r1, #0
   141cc:	moveq	r0, #1
   141d0:	bxeq	lr
   141d4:	mov	r3, r0
   141d8:	mov	r0, #1
   141dc:	mov	ip, #0
   141e0:	mov	r2, r3
   141e4:	tst	r1, #1
   141e8:	mul	r3, r3, r3
   141ec:	movweq	r2, #1
   141f0:	cmp	ip, r1, lsr #1
   141f4:	mul	r0, r2, r0
   141f8:	lsr	r2, r1, #1
   141fc:	mov	r1, r2
   14200:	bne	141e0 <mycore_power@@Base+0x18>
   14204:	bx	lr

00014208 <mycore_strncasecmp@@Base>:
   14208:	push	{r4, sl, fp, lr}
   1420c:	add	fp, sp, #8
   14210:	cmp	r0, #0
   14214:	cmpne	r1, #0
   14218:	bne	14228 <mycore_strncasecmp@@Base+0x20>
   1421c:	subs	r0, r0, r1
   14220:	movwne	r0, #1
   14224:	pop	{r4, sl, fp, pc}
   14228:	cmp	r2, #0
   1422c:	beq	14264 <mycore_strncasecmp@@Base+0x5c>
   14230:	ldr	ip, [pc, #52]	; 1426c <mycore_strncasecmp@@Base+0x64>
   14234:	mov	lr, #0
   14238:	add	ip, pc, ip
   1423c:	ldrb	r3, [r1, lr]
   14240:	ldrb	r4, [r0, lr]
   14244:	ldrb	r3, [ip, r3]
   14248:	ldrb	r4, [ip, r4]
   1424c:	cmp	r4, r3
   14250:	subne	r0, r2, lr
   14254:	popne	{r4, sl, fp, pc}
   14258:	add	lr, lr, #1
   1425c:	cmp	lr, r2
   14260:	bcc	1423c <mycore_strncasecmp@@Base+0x34>
   14264:	mov	r0, #0
   14268:	pop	{r4, sl, fp, pc}
   1426c:	andeq	r1, r2, r0, lsl #3

00014270 <mycore_strcasecmp@@Base>:
   14270:	push	{r4, sl, fp, lr}
   14274:	add	fp, sp, #8
   14278:	cmp	r0, #0
   1427c:	cmpne	r1, #0
   14280:	bne	14294 <mycore_strcasecmp@@Base+0x24>
   14284:	subs	r2, r0, r1
   14288:	movwne	r2, #1
   1428c:	mov	r0, r2
   14290:	pop	{r4, sl, fp, pc}
   14294:	ldrb	r2, [r1]
   14298:	ldr	ip, [pc, #84]	; 142f4 <mycore_strcasecmp@@Base+0x84>
   1429c:	ldrb	r3, [r0]
   142a0:	add	ip, pc, ip
   142a4:	ldrb	lr, [ip, r2]
   142a8:	ldrb	r4, [ip, r3]
   142ac:	mov	r2, #1
   142b0:	cmp	r4, lr
   142b4:	bne	142e0 <mycore_strcasecmp@@Base+0x70>
   142b8:	mov	r2, #1
   142bc:	tst	r3, #255	; 0xff
   142c0:	beq	142e8 <mycore_strcasecmp@@Base+0x78>
   142c4:	ldrb	r3, [r1, r2]
   142c8:	ldrb	lr, [ip, r3]
   142cc:	ldrb	r3, [r0, r2]
   142d0:	add	r2, r2, #1
   142d4:	ldrb	r4, [ip, r3]
   142d8:	cmp	r4, lr
   142dc:	beq	142bc <mycore_strcasecmp@@Base+0x4c>
   142e0:	mov	r0, r2
   142e4:	pop	{r4, sl, fp, pc}
   142e8:	mov	r2, #0
   142ec:	mov	r0, r2
   142f0:	pop	{r4, sl, fp, pc}
   142f4:	andeq	r1, r2, r8, lsl r1

000142f8 <mycore_strncmp@@Base>:
   142f8:	push	{fp, lr}
   142fc:	mov	fp, sp
   14300:	cmp	r0, #0
   14304:	cmpne	r1, #0
   14308:	bne	14318 <mycore_strncmp@@Base+0x20>
   1430c:	subs	r0, r0, r1
   14310:	movwne	r0, #1
   14314:	pop	{fp, pc}
   14318:	cmp	r2, #0
   1431c:	beq	14344 <mycore_strncmp@@Base+0x4c>
   14320:	mov	lr, #0
   14324:	ldrb	ip, [r1, lr]
   14328:	ldrb	r3, [r0, lr]
   1432c:	cmp	r3, ip
   14330:	subne	r0, r2, lr
   14334:	popne	{fp, pc}
   14338:	add	lr, lr, #1
   1433c:	cmp	lr, r2
   14340:	bcc	14324 <mycore_strncmp@@Base+0x2c>
   14344:	mov	r0, #0
   14348:	pop	{fp, pc}

0001434c <mycore_strcmp@@Base>:
   1434c:	cmp	r0, #0
   14350:	cmpne	r1, #0
   14354:	bne	14368 <mycore_strcmp@@Base+0x1c>
   14358:	subs	r2, r0, r1
   1435c:	movwne	r2, #1
   14360:	mov	r0, r2
   14364:	bx	lr
   14368:	ldrb	r3, [r0]
   1436c:	ldrb	ip, [r1]
   14370:	mov	r2, #1
   14374:	cmp	r3, ip
   14378:	bne	1439c <mycore_strcmp@@Base+0x50>
   1437c:	mov	r2, #1
   14380:	tst	r3, #255	; 0xff
   14384:	beq	143a4 <mycore_strcmp@@Base+0x58>
   14388:	ldrb	r3, [r0, r2]
   1438c:	ldrb	ip, [r1, r2]
   14390:	add	r2, r2, #1
   14394:	cmp	r3, ip
   14398:	beq	14380 <mycore_strcmp@@Base+0x34>
   1439c:	mov	r0, r2
   143a0:	bx	lr
   143a4:	mov	r2, #0
   143a8:	mov	r0, r2
   143ac:	bx	lr

000143b0 <mycore_strcmp_ws@@Base>:
   143b0:	cmp	r0, #0
   143b4:	cmpne	r1, #0
   143b8:	bne	143cc <mycore_strcmp_ws@@Base+0x1c>
   143bc:	subs	r2, r0, r1
   143c0:	movwne	r2, #1
   143c4:	mov	r0, r2
   143c8:	bx	lr
   143cc:	ldrb	r3, [r0]
   143d0:	ldrb	ip, [r1]
   143d4:	mov	r2, #1
   143d8:	cmp	r3, ip
   143dc:	bne	14494 <mycore_strcmp_ws@@Base+0xe4>
   143e0:	mov	r2, #1
   143e4:	uxtb	r3, r3
   143e8:	cmp	r3, #32
   143ec:	bhi	14480 <mycore_strcmp_ws@@Base+0xd0>
   143f0:	add	ip, pc, #4
   143f4:	ldr	r3, [ip, r3, lsl #2]
   143f8:	add	pc, ip, r3
   143fc:	andeq	r0, r0, r0, lsr #1
   14400:	andeq	r0, r0, r4, lsl #1
   14404:	andeq	r0, r0, r4, lsl #1
   14408:	andeq	r0, r0, r4, lsl #1
   1440c:	andeq	r0, r0, r4, lsl #1
   14410:	andeq	r0, r0, r4, lsl #1
   14414:	andeq	r0, r0, r4, lsl #1
   14418:	andeq	r0, r0, r4, lsl #1
   1441c:	andeq	r0, r0, r4, lsl #1
   14420:	andeq	r0, r0, r0, lsr #1
   14424:	andeq	r0, r0, r0, lsr #1
   14428:	andeq	r0, r0, r4, lsl #1
   1442c:	andeq	r0, r0, r0, lsr #1
   14430:	andeq	r0, r0, r0, lsr #1
   14434:	andeq	r0, r0, r4, lsl #1
   14438:	andeq	r0, r0, r4, lsl #1
   1443c:	andeq	r0, r0, r4, lsl #1
   14440:	andeq	r0, r0, r4, lsl #1
   14444:	andeq	r0, r0, r4, lsl #1
   14448:	andeq	r0, r0, r4, lsl #1
   1444c:	andeq	r0, r0, r4, lsl #1
   14450:	andeq	r0, r0, r4, lsl #1
   14454:	andeq	r0, r0, r4, lsl #1
   14458:	andeq	r0, r0, r4, lsl #1
   1445c:	andeq	r0, r0, r4, lsl #1
   14460:	andeq	r0, r0, r4, lsl #1
   14464:	andeq	r0, r0, r4, lsl #1
   14468:	andeq	r0, r0, r4, lsl #1
   1446c:	andeq	r0, r0, r4, lsl #1
   14470:	andeq	r0, r0, r4, lsl #1
   14474:	andeq	r0, r0, r4, lsl #1
   14478:	andeq	r0, r0, r4, lsl #1
   1447c:	andeq	r0, r0, r0, lsr #1
   14480:	ldrb	r3, [r0, r2]
   14484:	ldrb	ip, [r1, r2]
   14488:	add	r2, r2, #1
   1448c:	cmp	r3, ip
   14490:	beq	143e4 <mycore_strcmp_ws@@Base+0x34>
   14494:	mov	r0, r2
   14498:	bx	lr
   1449c:	mov	r2, #0
   144a0:	mov	r0, r2
   144a4:	bx	lr

000144a8 <mycore_ustrcasecmp_without_checks_by_secondary@@Base>:
   144a8:	push	{fp, lr}
   144ac:	mov	fp, sp
   144b0:	ldrb	r3, [r0]
   144b4:	mov	r2, r0
   144b8:	mov	r0, #1
   144bc:	cmp	r3, #0
   144c0:	popeq	{fp, pc}
   144c4:	ldr	ip, [pc, #52]	; 14500 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x58>
   144c8:	add	r2, r2, #1
   144cc:	add	ip, pc, ip
   144d0:	uxtb	r3, r3
   144d4:	ldrb	lr, [ip, r3]
   144d8:	ldrb	r3, [r1]
   144dc:	ldrb	r3, [ip, r3]
   144e0:	cmp	lr, r3
   144e4:	movne	r0, #0
   144e8:	popne	{fp, pc}
   144ec:	ldrb	r3, [r2], #1
   144f0:	add	r1, r1, #1
   144f4:	cmp	r3, #0
   144f8:	bne	144d0 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x28>
   144fc:	pop	{fp, pc}
   14500:	andeq	r0, r2, ip, ror #29

00014504 <mycore_utils_avl_tree_create@@Base>:
   14504:	mov	r0, #1
   14508:	mov	r1, #4
   1450c:	b	11004 <mycore_calloc@plt>

00014510 <mycore_utils_avl_tree_init@@Base>:
   14510:	push	{r4, sl, fp, lr}
   14514:	add	fp, sp, #8
   14518:	mov	r4, r0
   1451c:	bl	110dc <mcobject_create@plt>
   14520:	cmp	r0, #0
   14524:	str	r0, [r4]
   14528:	moveq	r0, #2
   1452c:	popeq	{r4, sl, fp, pc}
   14530:	mov	r1, #256	; 0x100
   14534:	mov	r2, #24
   14538:	bl	11610 <mcobject_init@plt>
   1453c:	cmp	r0, #0
   14540:	movwne	r0, #1
   14544:	pop	{r4, sl, fp, pc}

00014548 <mycore_utils_avl_tree_clean@@Base>:
   14548:	ldr	r0, [r0]
   1454c:	b	11bbc <mcobject_clean@plt>

00014550 <mycore_utils_avl_tree_destroy@@Base>:
   14550:	push	{r4, r5, r6, sl, fp, lr}
   14554:	add	fp, sp, #16
   14558:	mov	r4, #0
   1455c:	cmp	r0, #0
   14560:	beq	1458c <mycore_utils_avl_tree_destroy@@Base+0x3c>
   14564:	mov	r5, r0
   14568:	ldr	r0, [r0]
   1456c:	mov	r6, r1
   14570:	mov	r1, #1
   14574:	bl	10f14 <mcobject_destroy@plt>
   14578:	cmp	r6, #0
   1457c:	moveq	r0, r5
   14580:	popeq	{r4, r5, r6, sl, fp, pc}
   14584:	mov	r0, r5
   14588:	bl	11a9c <mycore_free@plt>
   1458c:	mov	r0, r4
   14590:	pop	{r4, r5, r6, sl, fp, pc}

00014594 <mycore_utils_avl_tree_node_create_root@@Base>:
   14594:	push	{r4, r5, fp, lr}
   14598:	add	fp, sp, #8
   1459c:	ldr	r0, [r0]
   145a0:	mov	r5, r1
   145a4:	mov	r1, #0
   145a8:	mov	r4, r2
   145ac:	bl	1182c <mcobject_malloc@plt>
   145b0:	vmov.i32	q8, #0	; 0x00000000
   145b4:	add	r1, r0, #8
   145b8:	stm	r0, {r4, r5}
   145bc:	vst1.32	{d16-d17}, [r1]
   145c0:	pop	{r4, r5, fp, pc}

000145c4 <mycore_utils_avl_tree_node_clean@@Base>:
   145c4:	mov	r1, #0
   145c8:	vmov.i32	q8, #0	; 0x00000000
   145cc:	mov	r2, #20
   145d0:	str	r1, [r0, #16]
   145d4:	vst1.32	{d16-d17}, [r0], r2
   145d8:	str	r1, [r0]
   145dc:	bx	lr

000145e0 <mycore_utils_avl_tree_node_height@@Base>:
   145e0:	cmp	r0, #0
   145e4:	ldrhne	r0, [r0, #20]
   145e8:	moveq	r0, #0
   145ec:	sxth	r0, r0
   145f0:	bx	lr

000145f4 <mycore_utils_avl_tree_node_balance_factor@@Base>:
   145f4:	ldr	r3, [r0, #12]
   145f8:	ldr	r0, [r0, #8]
   145fc:	mov	r2, #0
   14600:	mov	r1, #0
   14604:	cmp	r3, #0
   14608:	ldrhne	r2, [r3, #20]
   1460c:	cmp	r0, #0
   14610:	ldrhne	r1, [r0, #20]
   14614:	sub	r0, r2, r1
   14618:	sxth	r0, r0
   1461c:	bx	lr

00014620 <mycore_utils_avl_tree_node_set_height@@Base>:
   14620:	ldr	r3, [r0, #8]
   14624:	mov	r2, #0
   14628:	mov	r1, #0
   1462c:	cmp	r3, #0
   14630:	ldrhne	r2, [r3, #20]
   14634:	ldr	r3, [r0, #12]
   14638:	cmp	r3, #0
   1463c:	ldrhne	r1, [r3, #20]
   14640:	sxth	r3, r2
   14644:	sxth	ip, r1
   14648:	cmp	r3, ip
   1464c:	movgt	r1, r2
   14650:	add	r1, r1, #1
   14654:	strh	r1, [r0, #20]
   14658:	bx	lr

0001465c <mycore_utils_avl_tree_node_rotate_right@@Base>:
   1465c:	mov	r1, r0
   14660:	ldr	r0, [r0, #8]
   14664:	ldr	r2, [r1, #16]
   14668:	str	r2, [r0, #16]
   1466c:	ldr	r2, [r0, #12]
   14670:	cmp	r2, #0
   14674:	beq	14690 <mycore_utils_avl_tree_node_rotate_right@@Base+0x34>
   14678:	str	r1, [r2, #16]
   1467c:	str	r0, [r1, #16]
   14680:	str	r2, [r1, #8]
   14684:	str	r1, [r0, #12]
   14688:	ldrh	ip, [r2, #20]
   1468c:	b	146a0 <mycore_utils_avl_tree_node_rotate_right@@Base+0x44>
   14690:	str	r0, [r1, #16]
   14694:	str	r2, [r1, #8]
   14698:	str	r1, [r0, #12]
   1469c:	mov	ip, #0
   146a0:	push	{r4, sl, fp, lr}
   146a4:	add	fp, sp, #8
   146a8:	ldr	r2, [r1, #12]
   146ac:	mov	r3, #0
   146b0:	sxth	r4, ip
   146b4:	mov	lr, #0
   146b8:	cmp	r2, #0
   146bc:	ldrhne	r3, [r2, #20]
   146c0:	sxth	r2, r3
   146c4:	cmp	r4, r2
   146c8:	movgt	r3, ip
   146cc:	add	r2, r3, #1
   146d0:	strh	r2, [r1, #20]
   146d4:	sxth	r1, r2
   146d8:	ldr	r2, [r0, #8]
   146dc:	cmp	r2, #0
   146e0:	ldrhne	lr, [r2, #20]
   146e4:	sxth	r2, lr
   146e8:	cmp	r2, r1
   146ec:	movgt	r1, lr
   146f0:	add	r1, r1, #1
   146f4:	strh	r1, [r0, #20]
   146f8:	pop	{r4, sl, fp, pc}

000146fc <mycore_utils_avl_tree_node_rotate_left@@Base>:
   146fc:	mov	r1, r0
   14700:	ldr	r0, [r0, #12]
   14704:	ldr	r2, [r1, #16]
   14708:	str	r2, [r0, #16]
   1470c:	ldr	r2, [r0, #8]
   14710:	cmp	r2, #0
   14714:	strne	r1, [r2, #16]
   14718:	push	{fp, lr}
   1471c:	mov	fp, sp
   14720:	str	r2, [r1, #12]
   14724:	str	r0, [r1, #16]
   14728:	str	r1, [r0, #8]
   1472c:	mov	ip, #0
   14730:	mov	r3, #0
   14734:	ldr	lr, [r1, #8]
   14738:	cmp	lr, #0
   1473c:	ldrhne	ip, [lr, #20]
   14740:	cmp	r2, #0
   14744:	ldrhne	r3, [r2, #20]
   14748:	sxth	r2, ip
   1474c:	sxth	lr, r3
   14750:	cmp	r2, lr
   14754:	movgt	r3, ip
   14758:	add	r2, r3, #1
   1475c:	strh	r2, [r1, #20]
   14760:	sxth	r1, r2
   14764:	ldr	r2, [r0, #12]
   14768:	cmp	r2, #0
   1476c:	pop	{fp, lr}
   14770:	ldrhne	r2, [r2, #20]
   14774:	moveq	r2, #0
   14778:	sxth	r3, r2
   1477c:	cmp	r1, r3
   14780:	movgt	r2, r1
   14784:	add	r1, r2, #1
   14788:	strh	r1, [r0, #20]
   1478c:	bx	lr

00014790 <mycore_utils_avl_tree_node_balance@@Base>:
   14790:	ldr	r3, [r0, #8]
   14794:	mov	r2, #0
   14798:	mov	ip, r0
   1479c:	mov	r0, #0
   147a0:	cmp	r3, #0
   147a4:	ldrhne	r2, [r3, #20]
   147a8:	push	{r4, r5, r6, sl, fp, lr}
   147ac:	add	fp, sp, #16
   147b0:	ldr	lr, [ip, #12]
   147b4:	sxth	r4, r2
   147b8:	cmp	lr, #0
   147bc:	ldrhne	r0, [lr, #20]
   147c0:	sxth	r5, r0
   147c4:	cmp	r5, r4
   147c8:	movlt	r0, r2
   147cc:	add	r0, r0, #1
   147d0:	strh	r0, [ip, #20]
   147d4:	sub	r0, r5, r4
   147d8:	cmn	r0, #2
   147dc:	beq	148b4 <mycore_utils_avl_tree_node_balance@@Base+0x124>
   147e0:	cmp	r0, #2
   147e4:	bne	14998 <mycore_utils_avl_tree_node_balance@@Base+0x208>
   147e8:	ldr	r0, [lr, #12]
   147ec:	mov	r2, #0
   147f0:	mov	r1, #0
   147f4:	cmp	r0, #0
   147f8:	ldrhne	r2, [r0, #20]
   147fc:	ldr	r0, [lr, #8]
   14800:	cmp	r0, #0
   14804:	ldrhne	r1, [r0, #20]
   14808:	sub	r1, r2, r1
   1480c:	sxth	r1, r1
   14810:	cmn	r1, #1
   14814:	ble	149ac <mycore_utils_avl_tree_node_balance@@Base+0x21c>
   14818:	mov	r1, r0
   1481c:	mov	r0, lr
   14820:	ldr	r2, [ip, #16]
   14824:	cmp	r2, #0
   14828:	beq	14af0 <mycore_utils_avl_tree_node_balance@@Base+0x360>
   1482c:	cmp	r1, #0
   14830:	ldr	lr, [r2, #12]
   14834:	str	r2, [r0, #16]
   14838:	mov	r4, #0
   1483c:	mov	r3, #0
   14840:	strne	ip, [r1, #16]
   14844:	str	r1, [ip, #12]
   14848:	str	r0, [ip, #16]
   1484c:	str	ip, [r0, #8]
   14850:	ldr	r5, [ip, #8]
   14854:	cmp	r5, #0
   14858:	ldrhne	r4, [r5, #20]
   1485c:	cmp	r1, #0
   14860:	ldrhne	r3, [r1, #20]
   14864:	sxth	r5, r4
   14868:	sxth	r1, r3
   1486c:	cmp	r5, r1
   14870:	movgt	r3, r4
   14874:	add	r1, r3, #1
   14878:	strh	r1, [ip, #20]
   1487c:	sxth	r1, r1
   14880:	ldr	r3, [r0, #12]
   14884:	cmp	r3, #0
   14888:	ldrhne	r3, [r3, #20]
   1488c:	moveq	r3, #0
   14890:	sxth	r4, r3
   14894:	cmp	r1, r4
   14898:	movgt	r3, r1
   1489c:	cmp	lr, ip
   148a0:	add	r1, r3, #1
   148a4:	strh	r1, [r0, #20]
   148a8:	streq	r0, [r2, #12]
   148ac:	strne	r0, [r2, #8]
   148b0:	pop	{r4, r5, r6, sl, fp, pc}
   148b4:	ldr	r0, [r3, #12]
   148b8:	ldr	r5, [r3, #8]
   148bc:	mov	r2, #0
   148c0:	mov	r1, #0
   148c4:	cmp	r0, #0
   148c8:	ldrhne	r2, [r0, #20]
   148cc:	cmp	r5, #0
   148d0:	ldrhne	r1, [r5, #20]
   148d4:	sub	r1, r2, r1
   148d8:	sxth	r1, r1
   148dc:	cmp	r1, #1
   148e0:	blt	149d8 <mycore_utils_avl_tree_node_balance@@Base+0x248>
   148e4:	ldr	r1, [r3, #16]
   148e8:	mov	r4, #0
   148ec:	mov	r2, #0
   148f0:	str	r1, [r0, #16]
   148f4:	ldr	r1, [r0, #8]
   148f8:	cmp	r1, #0
   148fc:	strne	r3, [r1, #16]
   14900:	str	r1, [r3, #12]
   14904:	str	r0, [r3, #16]
   14908:	str	r3, [r0, #8]
   1490c:	ldr	r5, [r3, #8]
   14910:	cmp	r5, #0
   14914:	ldrhne	r4, [r5, #20]
   14918:	cmp	r1, #0
   1491c:	ldrhne	r2, [r1, #20]
   14920:	sxth	r5, r4
   14924:	sxth	r1, r2
   14928:	cmp	r5, r1
   1492c:	movgt	r2, r4
   14930:	add	r1, r2, #1
   14934:	strh	r1, [r3, #20]
   14938:	sxth	r1, r1
   1493c:	ldr	r2, [r0, #12]
   14940:	cmp	r2, #0
   14944:	ldrhne	r3, [r2, #20]
   14948:	moveq	r3, #0
   1494c:	sxth	r5, r3
   14950:	cmp	r1, r5
   14954:	movgt	r3, r1
   14958:	add	r1, r3, #1
   1495c:	strh	r1, [r0, #20]
   14960:	str	r0, [ip, #8]
   14964:	ldr	r1, [ip, #16]
   14968:	cmp	r1, #0
   1496c:	beq	149ec <mycore_utils_avl_tree_node_balance@@Base+0x25c>
   14970:	ldr	lr, [r1, #12]
   14974:	cmp	r2, #0
   14978:	str	r1, [r0, #16]
   1497c:	beq	14a10 <mycore_utils_avl_tree_node_balance@@Base+0x280>
   14980:	str	ip, [r2, #16]
   14984:	str	r0, [ip, #16]
   14988:	str	r2, [ip, #8]
   1498c:	str	ip, [r0, #12]
   14990:	ldrh	r3, [r2, #20]
   14994:	b	14a20 <mycore_utils_avl_tree_node_balance@@Base+0x290>
   14998:	ldr	r0, [ip, #16]
   1499c:	cmp	r0, #0
   149a0:	streq	ip, [r1]
   149a4:	ldreq	r0, [ip, #16]
   149a8:	pop	{r4, r5, r6, sl, fp, pc}
   149ac:	ldr	r1, [lr, #16]
   149b0:	str	r1, [r0, #16]
   149b4:	ldr	r1, [r0, #12]
   149b8:	cmp	r1, #0
   149bc:	beq	14a80 <mycore_utils_avl_tree_node_balance@@Base+0x2f0>
   149c0:	str	lr, [r1, #16]
   149c4:	str	r0, [lr, #16]
   149c8:	str	r1, [lr, #8]
   149cc:	str	lr, [r0, #12]
   149d0:	ldrh	r1, [r1, #20]
   149d4:	b	14a90 <mycore_utils_avl_tree_node_balance@@Base+0x300>
   149d8:	mov	r2, r0
   149dc:	mov	r0, r3
   149e0:	ldr	r1, [ip, #16]
   149e4:	cmp	r1, #0
   149e8:	bne	14970 <mycore_utils_avl_tree_node_balance@@Base+0x1e0>
   149ec:	cmp	r2, #0
   149f0:	str	r1, [r0, #16]
   149f4:	beq	14b68 <mycore_utils_avl_tree_node_balance@@Base+0x3d8>
   149f8:	str	ip, [r2, #16]
   149fc:	str	r0, [ip, #16]
   14a00:	str	r2, [ip, #8]
   14a04:	str	ip, [r0, #12]
   14a08:	ldrh	r2, [r2, #20]
   14a0c:	b	14b78 <mycore_utils_avl_tree_node_balance@@Base+0x3e8>
   14a10:	str	r0, [ip, #16]
   14a14:	str	r2, [ip, #8]
   14a18:	str	ip, [r0, #12]
   14a1c:	mov	r3, #0
   14a20:	ldr	r5, [ip, #12]
   14a24:	mov	r4, #0
   14a28:	sxth	r6, r3
   14a2c:	mov	r2, #0
   14a30:	cmp	r5, #0
   14a34:	ldrhne	r4, [r5, #20]
   14a38:	sxth	r5, r4
   14a3c:	cmp	r6, r5
   14a40:	movgt	r4, r3
   14a44:	add	r3, r4, #1
   14a48:	strh	r3, [ip, #20]
   14a4c:	sxth	r3, r3
   14a50:	ldr	r4, [r0, #8]
   14a54:	cmp	r4, #0
   14a58:	ldrhne	r2, [r4, #20]
   14a5c:	sxth	r4, r2
   14a60:	cmp	r4, r3
   14a64:	movgt	r3, r2
   14a68:	cmp	lr, ip
   14a6c:	add	r2, r3, #1
   14a70:	strh	r2, [r0, #20]
   14a74:	streq	r0, [r1, #12]
   14a78:	strne	r0, [r1, #8]
   14a7c:	pop	{r4, r5, r6, sl, fp, pc}
   14a80:	str	r0, [lr, #16]
   14a84:	str	r1, [lr, #8]
   14a88:	str	lr, [r0, #12]
   14a8c:	mov	r1, #0
   14a90:	ldr	r4, [lr, #12]
   14a94:	mov	r2, #0
   14a98:	sxth	r5, r1
   14a9c:	mov	r3, #0
   14aa0:	cmp	r4, #0
   14aa4:	ldrhne	r2, [r4, #20]
   14aa8:	sxth	r4, r2
   14aac:	cmp	r5, r4
   14ab0:	movgt	r2, r1
   14ab4:	add	r1, r2, #1
   14ab8:	strh	r1, [lr, #20]
   14abc:	sxth	r2, r1
   14ac0:	ldr	r1, [r0, #8]
   14ac4:	cmp	r1, #0
   14ac8:	ldrhne	r3, [r1, #20]
   14acc:	sxth	r5, r3
   14ad0:	cmp	r5, r2
   14ad4:	movgt	r2, r3
   14ad8:	add	r2, r2, #1
   14adc:	strh	r2, [r0, #20]
   14ae0:	str	r0, [ip, #12]
   14ae4:	ldr	r2, [ip, #16]
   14ae8:	cmp	r2, #0
   14aec:	bne	1482c <mycore_utils_avl_tree_node_balance@@Base+0x9c>
   14af0:	cmp	r1, #0
   14af4:	str	r2, [r0, #16]
   14af8:	mov	r3, #0
   14afc:	mov	r2, #0
   14b00:	strne	ip, [r1, #16]
   14b04:	str	r1, [ip, #12]
   14b08:	str	r0, [ip, #16]
   14b0c:	str	ip, [r0, #8]
   14b10:	ldr	r5, [ip, #8]
   14b14:	cmp	r5, #0
   14b18:	ldrhne	r3, [r5, #20]
   14b1c:	cmp	r1, #0
   14b20:	ldrhne	r2, [r1, #20]
   14b24:	sxth	r5, r3
   14b28:	sxth	r1, r2
   14b2c:	cmp	r5, r1
   14b30:	movgt	r2, r3
   14b34:	add	r1, r2, #1
   14b38:	strh	r1, [ip, #20]
   14b3c:	sxth	r1, r1
   14b40:	ldr	r2, [r0, #12]
   14b44:	cmp	r2, #0
   14b48:	ldrhne	r2, [r2, #20]
   14b4c:	moveq	r2, #0
   14b50:	sxth	r3, r2
   14b54:	cmp	r1, r3
   14b58:	movgt	r2, r1
   14b5c:	add	r1, r2, #1
   14b60:	strh	r1, [r0, #20]
   14b64:	pop	{r4, r5, r6, sl, fp, pc}
   14b68:	str	r0, [ip, #16]
   14b6c:	str	r2, [ip, #8]
   14b70:	str	ip, [r0, #12]
   14b74:	mov	r2, #0
   14b78:	ldr	r5, [ip, #12]
   14b7c:	mov	r3, #0
   14b80:	mov	r1, #0
   14b84:	cmp	r5, #0
   14b88:	ldrhne	r3, [r5, #20]
   14b8c:	sxth	r5, r2
   14b90:	sxth	r6, r3
   14b94:	cmp	r5, r6
   14b98:	movgt	r3, r2
   14b9c:	add	r2, r3, #1
   14ba0:	strh	r2, [ip, #20]
   14ba4:	sxth	r2, r2
   14ba8:	ldr	r3, [r0, #8]
   14bac:	cmp	r3, #0
   14bb0:	ldrhne	r1, [r3, #20]
   14bb4:	sxth	r3, r1
   14bb8:	cmp	r3, r2
   14bbc:	movgt	r2, r1
   14bc0:	add	r1, r2, #1
   14bc4:	strh	r1, [r0, #20]
   14bc8:	pop	{r4, r5, r6, sl, fp, pc}

00014bcc <mycore_utils_avl_tree_add@@Base>:
   14bcc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14bd0:	add	fp, sp, #24
   14bd4:	ldr	r0, [r0]
   14bd8:	ldr	r7, [r1]
   14bdc:	mov	r4, r1
   14be0:	mov	r1, #0
   14be4:	mov	r8, r3
   14be8:	mov	r6, r2
   14bec:	mov	r5, #0
   14bf0:	bl	1182c <mcobject_malloc@plt>
   14bf4:	vmov.i32	q8, #0	; 0x00000000
   14bf8:	cmp	r7, #0
   14bfc:	beq	14c68 <mycore_utils_avl_tree_add@@Base+0x9c>
   14c00:	mov	r1, #20
   14c04:	mov	r2, r0
   14c08:	str	r5, [r0, #16]
   14c0c:	vst1.32	{d16-d17}, [r2], r1
   14c10:	str	r5, [r2]
   14c14:	ldr	r2, [r7, #4]
   14c18:	cmp	r2, r6
   14c1c:	bne	14c2c <mycore_utils_avl_tree_add@@Base+0x60>
   14c20:	mov	r1, r7
   14c24:	str	r8, [r1]
   14c28:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14c2c:	cmp	r2, r6
   14c30:	bls	14c44 <mycore_utils_avl_tree_add@@Base+0x78>
   14c34:	ldr	r1, [r7, #8]
   14c38:	cmp	r1, #0
   14c3c:	bne	14c50 <mycore_utils_avl_tree_add@@Base+0x84>
   14c40:	b	14c80 <mycore_utils_avl_tree_add@@Base+0xb4>
   14c44:	ldr	r1, [r7, #12]
   14c48:	cmp	r1, #0
   14c4c:	beq	14c88 <mycore_utils_avl_tree_add@@Base+0xbc>
   14c50:	ldr	r2, [r1, #4]
   14c54:	mov	r7, r1
   14c58:	cmp	r2, r6
   14c5c:	bne	14c2c <mycore_utils_avl_tree_add@@Base+0x60>
   14c60:	str	r8, [r1]
   14c64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14c68:	add	r1, r0, #8
   14c6c:	str	r8, [r0]
   14c70:	str	r6, [r0, #4]
   14c74:	vst1.32	{d16-d17}, [r1]
   14c78:	str	r0, [r4]
   14c7c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14c80:	add	r1, r7, #8
   14c84:	b	14c8c <mycore_utils_avl_tree_add@@Base+0xc0>
   14c88:	add	r1, r7, #12
   14c8c:	str	r0, [r1]
   14c90:	str	r7, [r0, #16]
   14c94:	str	r8, [r0]
   14c98:	str	r6, [r0, #4]
   14c9c:	mov	r1, r4
   14ca0:	bl	117f0 <mycore_utils_avl_tree_node_balance@plt>
   14ca4:	cmp	r0, #0
   14ca8:	bne	14c9c <mycore_utils_avl_tree_add@@Base+0xd0>
   14cac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014cb0 <mycore_utils_avl_tree_find_min@@Base>:
   14cb0:	cmp	r0, #0
   14cb4:	moveq	r1, #0
   14cb8:	moveq	r0, r1
   14cbc:	bxeq	lr
   14cc0:	mov	r1, r0
   14cc4:	ldr	r0, [r0, #12]
   14cc8:	cmp	r0, #0
   14ccc:	bne	14cc0 <mycore_utils_avl_tree_find_min@@Base+0x10>
   14cd0:	mov	r0, r1
   14cd4:	bx	lr

00014cd8 <mycore_utils_avl_tree_rotate_for_delete@@Base>:
   14cd8:	push	{r4, sl, fp, lr}
   14cdc:	add	fp, sp, #8
   14ce0:	mov	r4, r2
   14ce4:	cmp	r1, #0
   14ce8:	beq	14d60 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x88>
   14cec:	ldr	lr, [r0, #8]
   14cf0:	cmp	lr, r1
   14cf4:	beq	14d9c <mycore_utils_avl_tree_rotate_for_delete@@Base+0xc4>
   14cf8:	ldr	ip, [r1, #16]
   14cfc:	mov	r3, #0
   14d00:	str	r3, [ip, #12]
   14d04:	mov	r3, r0
   14d08:	ldr	r2, [r3, #16]!
   14d0c:	str	r2, [r1, #16]
   14d10:	ldr	r2, [r3, #-4]
   14d14:	str	lr, [r1, #8]
   14d18:	str	r2, [r1, #12]
   14d1c:	ldr	r2, [r3, #-8]
   14d20:	cmp	r2, #0
   14d24:	strne	r1, [r2, #16]
   14d28:	ldr	r2, [r0, #12]
   14d2c:	cmp	r2, #0
   14d30:	strne	r1, [r2, #16]
   14d34:	mov	r2, r1
   14d38:	ldr	lr, [r3]
   14d3c:	mov	ip, r4
   14d40:	cmp	lr, #0
   14d44:	beq	14d58 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x80>
   14d48:	ldr	r3, [lr, #8]!
   14d4c:	cmp	r3, r0
   14d50:	addne	lr, lr, #4
   14d54:	mov	ip, lr
   14d58:	str	r1, [ip]
   14d5c:	b	14d80 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xa8>
   14d60:	ldr	r2, [r0, #16]
   14d64:	cmp	r2, #0
   14d68:	beq	14ddc <mycore_utils_avl_tree_rotate_for_delete@@Base+0x104>
   14d6c:	ldr	r3, [r2, #8]
   14d70:	ldr	r1, [r0, #12]
   14d74:	cmp	r3, r0
   14d78:	streq	r1, [r2, #8]
   14d7c:	strne	r1, [r2, #12]
   14d80:	mov	r0, r2
   14d84:	mov	r1, r4
   14d88:	bl	117f0 <mycore_utils_avl_tree_node_balance@plt>
   14d8c:	mov	r2, r0
   14d90:	cmp	r0, #0
   14d94:	bne	14d80 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xa8>
   14d98:	pop	{r4, sl, fp, pc}
   14d9c:	mov	r3, r0
   14da0:	ldr	r2, [r3, #16]!
   14da4:	str	r2, [r1, #16]
   14da8:	ldr	r2, [r3, #-4]
   14dac:	str	r2, [r1, #12]
   14db0:	ldr	r2, [r1, #8]
   14db4:	ldr	ip, [r3, #-4]
   14db8:	cmp	r2, #0
   14dbc:	moveq	r2, r1
   14dc0:	cmp	ip, #0
   14dc4:	strne	r1, [ip, #16]
   14dc8:	ldr	lr, [r3]
   14dcc:	mov	ip, r4
   14dd0:	cmp	lr, #0
   14dd4:	bne	14d48 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x70>
   14dd8:	b	14d58 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x80>
   14ddc:	ldr	r0, [r0, #12]
   14de0:	str	r0, [r4]
   14de4:	pop	{r4, sl, fp, pc}

00014de8 <mycore_utils_avl_tree_delete@@Base>:
   14de8:	push	{r4, r5, r6, sl, fp, lr}
   14dec:	add	fp, sp, #16
   14df0:	ldr	r4, [r1]
   14df4:	mov	r6, #0
   14df8:	cmp	r4, #0
   14dfc:	beq	14e28 <mycore_utils_avl_tree_delete@@Base+0x40>
   14e00:	mov	r3, r1
   14e04:	mov	r5, r0
   14e08:	ldr	r0, [r4, #4]
   14e0c:	cmp	r0, r2
   14e10:	beq	14e30 <mycore_utils_avl_tree_delete@@Base+0x48>
   14e14:	mov	r0, #12
   14e18:	movwhi	r0, #8
   14e1c:	ldr	r4, [r4, r0]
   14e20:	cmp	r4, #0
   14e24:	bne	14e08 <mycore_utils_avl_tree_delete@@Base+0x20>
   14e28:	mov	r0, r6
   14e2c:	pop	{r4, r5, r6, sl, fp, pc}
   14e30:	ldr	r0, [r4, #8]
   14e34:	cmp	r0, #0
   14e38:	beq	14e50 <mycore_utils_avl_tree_delete@@Base+0x68>
   14e3c:	mov	r1, r0
   14e40:	ldr	r0, [r0, #12]
   14e44:	cmp	r0, #0
   14e48:	bne	14e3c <mycore_utils_avl_tree_delete@@Base+0x54>
   14e4c:	b	14e54 <mycore_utils_avl_tree_delete@@Base+0x6c>
   14e50:	mov	r1, #0
   14e54:	mov	r0, r4
   14e58:	mov	r2, r3
   14e5c:	bl	113dc <mycore_utils_avl_tree_rotate_for_delete@plt>
   14e60:	ldr	r0, [r5]
   14e64:	ldr	r6, [r4]
   14e68:	mov	r1, r4
   14e6c:	bl	1104c <mcobject_free@plt>
   14e70:	mov	r0, r6
   14e74:	pop	{r4, r5, r6, sl, fp, pc}

00014e78 <mycore_utils_avl_tree_search_by_type@@Base>:
   14e78:	mov	r0, #0
   14e7c:	b	14e8c <mycore_utils_avl_tree_search_by_type@@Base+0x14>
   14e80:	mov	r3, #12
   14e84:	movwhi	r3, #8
   14e88:	ldr	r1, [r1, r3]
   14e8c:	cmp	r1, #0
   14e90:	bxeq	lr
   14e94:	ldr	r3, [r1, #4]
   14e98:	cmp	r3, r2
   14e9c:	bne	14e80 <mycore_utils_avl_tree_search_by_type@@Base+0x8>
   14ea0:	mov	r0, r1
   14ea4:	bx	lr

00014ea8 <mycore_utils_avl_tree_list_all_nodes@@Base>:
   14ea8:	push	{r4, r5, r6, r7, fp, lr}
   14eac:	add	fp, sp, #16
   14eb0:	cmp	r1, #0
   14eb4:	popeq	{r4, r5, r6, r7, fp, pc}
   14eb8:	mov	r4, r3
   14ebc:	mov	r5, r2
   14ec0:	mov	r6, r1
   14ec4:	mov	r7, r0
   14ec8:	mov	r0, r6
   14ecc:	mov	r1, r4
   14ed0:	blx	r5
   14ed4:	ldr	r1, [r6, #8]
   14ed8:	mov	r0, r7
   14edc:	mov	r2, r5
   14ee0:	mov	r3, r4
   14ee4:	bl	11280 <mycore_utils_avl_tree_list_all_nodes@plt>
   14ee8:	ldr	r6, [r6, #12]
   14eec:	cmp	r6, #0
   14ef0:	bne	14ec8 <mycore_utils_avl_tree_list_all_nodes@@Base+0x20>
   14ef4:	pop	{r4, r5, r6, r7, fp, pc}
	...

00014f00 <mchar_async_create@@Base>:
   14f00:	mov	r0, #1
   14f04:	mov	r1, #84	; 0x54
   14f08:	b	11004 <mycore_calloc@plt>
   14f0c:	nop	{0}

00014f10 <mchar_async_init@@Base>:
   14f10:	push	{r4, r5, fp, lr}
   14f14:	add	fp, sp, #8
   14f18:	cmp	r2, #4096	; 0x1000
   14f1c:	str	r1, [r0, #16]
   14f20:	mov	r4, r0
   14f24:	mov	r0, #1024	; 0x400
   14f28:	mov	r1, #4
   14f2c:	str	r0, [r4, #8]
   14f30:	movls	r2, #4096	; 0x1000
   14f34:	mov	r0, #1024	; 0x400
   14f38:	str	r2, [r4]
   14f3c:	bl	11004 <mycore_calloc@plt>
   14f40:	mov	r5, #2
   14f44:	cmp	r0, #0
   14f48:	str	r0, [r4, #4]
   14f4c:	beq	15038 <mchar_async_init@@Base+0x128>
   14f50:	ldr	r0, [r4, #16]
   14f54:	mov	r1, #20
   14f58:	bl	11004 <mycore_calloc@plt>
   14f5c:	ldr	r1, [r4, #4]
   14f60:	str	r0, [r1]
   14f64:	ldr	r0, [r4, #4]
   14f68:	ldr	r1, [r0]
   14f6c:	cmp	r1, #0
   14f70:	beq	15030 <mchar_async_init@@Base+0x120>
   14f74:	add	r0, pc, #244	; 0xf4
   14f78:	vld1.64	{d16-d17}, [r0 :128]
   14f7c:	add	r0, r4, #28
   14f80:	vst1.32	{d16-d17}, [r0]
   14f84:	mov	r0, #20480	; 0x5000
   14f88:	bl	119ac <mycore_malloc@plt>
   14f8c:	cmp	r0, #0
   14f90:	str	r0, [r4, #24]
   14f94:	beq	1504c <mchar_async_init@@Base+0x13c>
   14f98:	vmov.i32	q8, #0	; 0x00000000
   14f9c:	mov	r5, #0
   14fa0:	vst1.32	{d16-d17}, [r0]
   14fa4:	ldr	r0, [r4, #28]
   14fa8:	str	r5, [r4, #48]	; 0x30
   14fac:	str	r0, [r4, #52]	; 0x34
   14fb0:	lsl	r0, r0, #2
   14fb4:	bl	119ac <mycore_malloc@plt>
   14fb8:	cmp	r0, #0
   14fbc:	str	r0, [r4, #44]	; 0x2c
   14fc0:	beq	15040 <mchar_async_init@@Base+0x130>
   14fc4:	mov	r0, #64	; 0x40
   14fc8:	str	r5, [r4, #60]	; 0x3c
   14fcc:	mov	r1, #36	; 0x24
   14fd0:	str	r0, [r4, #64]	; 0x40
   14fd4:	mov	r0, #64	; 0x40
   14fd8:	bl	11004 <mycore_calloc@plt>
   14fdc:	cmp	r0, #0
   14fe0:	str	r0, [r4, #56]	; 0x38
   14fe4:	beq	15038 <mchar_async_init@@Base+0x128>
   14fe8:	ldr	r0, [r4, #64]	; 0x40
   14fec:	mov	r5, #0
   14ff0:	str	r5, [r4, #72]	; 0x48
   14ff4:	str	r0, [r4, #76]	; 0x4c
   14ff8:	lsl	r0, r0, #2
   14ffc:	bl	119ac <mycore_malloc@plt>
   15000:	cmp	r0, #0
   15004:	str	r0, [r4, #68]	; 0x44
   15008:	beq	15038 <mchar_async_init@@Base+0x128>
   1500c:	mov	r0, r4
   15010:	bl	1191c <mchar_async_clean@plt>
   15014:	bl	10efc <mcsync_create@plt>
   15018:	cmp	r0, #0
   1501c:	mov	r5, #2
   15020:	str	r0, [r4, #80]	; 0x50
   15024:	beq	15038 <mchar_async_init@@Base+0x128>
   15028:	pop	{r4, r5, fp, lr}
   1502c:	b	116a0 <mcsync_init@plt>
   15030:	bl	11a9c <mycore_free@plt>
   15034:	str	r0, [r4, #4]
   15038:	mov	r0, r5
   1503c:	pop	{r4, r5, fp, pc}
   15040:	ldr	r0, [r4, #24]
   15044:	bl	11a9c <mycore_free@plt>
   15048:	str	r0, [r4, #24]
   1504c:	ldr	r0, [r4, #4]
   15050:	ldr	r0, [r0]
   15054:	bl	11a9c <mycore_free@plt>
   15058:	ldr	r0, [r4, #4]
   1505c:	bl	11a9c <mycore_free@plt>
   15060:	mov	r5, #2
   15064:	str	r0, [r4, #4]
   15068:	mov	r0, r5
   1506c:	pop	{r4, r5, fp, pc}
   15070:	andeq	r0, r0, r0, lsl #8
   15074:	andeq	r0, r0, r1
	...

00015080 <mchar_async_cache_init@@Base>:
   15080:	push	{r4, r5, fp, lr}
   15084:	add	fp, sp, #8
   15088:	mov	r4, r0
   1508c:	add	r0, pc, #124	; 0x7c
   15090:	vld1.64	{d16-d17}, [r0 :128]
   15094:	add	r0, r4, #4
   15098:	vst1.32	{d16-d17}, [r0]
   1509c:	mov	r0, #20480	; 0x5000
   150a0:	bl	119ac <mycore_malloc@plt>
   150a4:	mov	r5, #2
   150a8:	cmp	r0, #0
   150ac:	str	r0, [r4]
   150b0:	beq	150e8 <mchar_async_cache_init@@Base+0x68>
   150b4:	mov	r5, #0
   150b8:	str	r5, [r0]
   150bc:	str	r5, [r0, #4]
   150c0:	str	r5, [r0, #8]
   150c4:	str	r5, [r0, #12]
   150c8:	ldr	r0, [r4, #4]
   150cc:	str	r5, [r4, #24]
   150d0:	str	r0, [r4, #28]
   150d4:	lsl	r0, r0, #2
   150d8:	bl	119ac <mycore_malloc@plt>
   150dc:	cmp	r0, #0
   150e0:	str	r0, [r4, #20]
   150e4:	beq	150f0 <mchar_async_cache_init@@Base+0x70>
   150e8:	mov	r0, r5
   150ec:	pop	{r4, r5, fp, pc}
   150f0:	ldr	r0, [r4]
   150f4:	bl	11a9c <mycore_free@plt>
   150f8:	mov	r5, #2
   150fc:	str	r0, [r4]
   15100:	mov	r0, r5
   15104:	pop	{r4, r5, fp, pc}
   15108:	nop	{0}
   1510c:	nop	{0}
   15110:	andeq	r0, r0, r0, lsl #8
   15114:	andeq	r0, r0, r1
	...

00015120 <mchar_async_clean@@Base>:
   15120:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15124:	add	fp, sp, #28
   15128:	sub	sp, sp, #4
   1512c:	vpush	{d8-d9}
   15130:	mov	r1, #1
   15134:	mov	r4, r0
   15138:	str	r1, [r0, #12]
   1513c:	mov	r0, #0
   15140:	str	r0, [r4, #20]
   15144:	str	r1, [r4, #32]
   15148:	str	r0, [r4, #36]	; 0x24
   1514c:	str	r0, [r4, #40]	; 0x28
   15150:	str	r0, [r4, #48]	; 0x30
   15154:	ldr	r1, [r4, #24]
   15158:	cmp	r1, #0
   1515c:	beq	15168 <mchar_async_clean@@Base+0x48>
   15160:	vmov.i32	q8, #0	; 0x00000000
   15164:	vst1.32	{d16-d17}, [r1]
   15168:	ldr	r1, [r4, #60]	; 0x3c
   1516c:	cmp	r1, #0
   15170:	beq	151fc <mchar_async_clean@@Base+0xdc>
   15174:	mov	r9, #0
   15178:	mov	r8, #1
   1517c:	vmov.i32	q4, #0	; 0x00000000
   15180:	mov	r7, #0
   15184:	mov	r6, #0
   15188:	ldr	sl, [r4, #56]	; 0x38
   1518c:	add	r0, sl, r7
   15190:	str	r8, [r0, #12]
   15194:	str	r9, [r0, #16]
   15198:	str	r9, [r0, #20]
   1519c:	str	r9, [r0, #28]
   151a0:	ldr	r0, [r0, #4]
   151a4:	cmp	r0, #0
   151a8:	beq	151b0 <mchar_async_clean@@Base+0x90>
   151ac:	vst1.32	{d8-d9}, [r0]
   151b0:	ldr	r0, [r4, #80]	; 0x50
   151b4:	ldr	r5, [r4]
   151b8:	bl	11694 <mcsync_lock@plt>
   151bc:	mov	r0, r4
   151c0:	mov	r2, r5
   151c4:	bl	11904 <mchar_async_chunk_malloc_without_lock@plt>
   151c8:	mov	r5, r0
   151cc:	ldr	r0, [r4, #80]	; 0x50
   151d0:	bl	11b44 <mcsync_unlock@plt>
   151d4:	cmp	r5, #0
   151d8:	str	r5, [sl, r7]
   151dc:	beq	15208 <mchar_async_clean@@Base+0xe8>
   151e0:	mov	r0, #0
   151e4:	add	r6, r6, #1
   151e8:	add	r7, r7, #36	; 0x24
   151ec:	str	r0, [r5, #16]
   151f0:	ldr	r1, [r4, #60]	; 0x3c
   151f4:	cmp	r6, r1
   151f8:	bcc	15188 <mchar_async_clean@@Base+0x68>
   151fc:	vpop	{d8-d9}
   15200:	add	sp, sp, #4
   15204:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15208:	mov	r0, #2
   1520c:	vpop	{d8-d9}
   15210:	add	sp, sp, #4
   15214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015218 <mchar_async_cache_clean@@Base>:
   15218:	mov	r2, #1
   1521c:	mov	r1, #0
   15220:	str	r2, [r0, #8]
   15224:	str	r1, [r0, #12]
   15228:	str	r1, [r0, #16]
   1522c:	str	r1, [r0, #24]
   15230:	ldr	r0, [r0]
   15234:	cmp	r0, #0
   15238:	bxeq	lr
   1523c:	vmov.i32	q8, #0	; 0x00000000
   15240:	vst1.32	{d16-d17}, [r0]
   15244:	bx	lr

00015248 <mchar_async_chunk_malloc@@Base>:
   15248:	push	{r4, r5, fp, lr}
   1524c:	add	fp, sp, #8
   15250:	mov	r5, r0
   15254:	ldr	r0, [r0, #80]	; 0x50
   15258:	mov	r4, r2
   1525c:	bl	11694 <mcsync_lock@plt>
   15260:	mov	r0, r5
   15264:	mov	r2, r4
   15268:	bl	11904 <mchar_async_chunk_malloc_without_lock@plt>
   1526c:	mov	r4, r0
   15270:	ldr	r0, [r5, #80]	; 0x50
   15274:	bl	11b44 <mcsync_unlock@plt>
   15278:	mov	r0, r4
   1527c:	pop	{r4, r5, fp, pc}

00015280 <mchar_async_destroy@@Base>:
   15280:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15284:	add	fp, sp, #24
   15288:	cmp	r0, #0
   1528c:	moveq	r6, #0
   15290:	moveq	r0, r6
   15294:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   15298:	mov	r4, r0
   1529c:	ldr	r0, [r0, #56]	; 0x38
   152a0:	mov	r8, r1
   152a4:	cmp	r0, #0
   152a8:	beq	15320 <mchar_async_destroy@@Base+0xa0>
   152ac:	ldr	r1, [r4, #60]	; 0x3c
   152b0:	cmp	r1, #0
   152b4:	beq	15314 <mchar_async_destroy@@Base+0x94>
   152b8:	mov	r5, #1
   152bc:	mov	r6, #0
   152c0:	add	r7, r0, r6
   152c4:	ldr	r0, [r7, #4]
   152c8:	cmp	r0, #0
   152cc:	bne	152f0 <mchar_async_destroy@@Base+0x70>
   152d0:	b	152f4 <mchar_async_destroy@@Base+0x74>
   152d4:	ldr	r0, [r4, #56]	; 0x38
   152d8:	add	r6, r6, #36	; 0x24
   152dc:	add	r5, r5, #1
   152e0:	add	r7, r0, r6
   152e4:	ldr	r0, [r7, #4]
   152e8:	cmp	r0, #0
   152ec:	beq	152f4 <mchar_async_destroy@@Base+0x74>
   152f0:	bl	11a9c <mycore_free@plt>
   152f4:	ldr	r0, [r7, #24]
   152f8:	cmp	r0, #0
   152fc:	beq	15304 <mchar_async_destroy@@Base+0x84>
   15300:	bl	11a9c <mycore_free@plt>
   15304:	ldr	r0, [r4, #60]	; 0x3c
   15308:	cmp	r5, r0
   1530c:	bcc	152d4 <mchar_async_destroy@@Base+0x54>
   15310:	ldr	r0, [r4, #56]	; 0x38
   15314:	bl	11a9c <mycore_free@plt>
   15318:	mov	r0, #0
   1531c:	str	r0, [r4, #56]	; 0x38
   15320:	ldr	r0, [r4, #68]	; 0x44
   15324:	cmp	r0, #0
   15328:	beq	15330 <mchar_async_destroy@@Base+0xb0>
   1532c:	bl	11a9c <mycore_free@plt>
   15330:	ldr	r0, [r4, #4]
   15334:	cmp	r0, #0
   15338:	beq	153f4 <mchar_async_destroy@@Base+0x174>
   1533c:	ldr	r2, [r4, #12]
   15340:	cmp	r2, #0
   15344:	beq	153e8 <mchar_async_destroy@@Base+0x168>
   15348:	mov	r6, #0
   1534c:	mov	r1, r0
   15350:	ldr	r3, [r1, r6, lsl #2]!
   15354:	cmp	r3, #0
   15358:	bne	15374 <mchar_async_destroy@@Base+0xf4>
   1535c:	b	153d8 <mchar_async_destroy@@Base+0x158>
   15360:	ldr	r0, [r4, #4]
   15364:	mov	r1, r0
   15368:	ldr	r3, [r1, r6, lsl #2]!
   1536c:	cmp	r3, #0
   15370:	beq	153d8 <mchar_async_destroy@@Base+0x158>
   15374:	ldr	r2, [r4, #16]
   15378:	cmp	r2, #0
   1537c:	beq	153cc <mchar_async_destroy@@Base+0x14c>
   15380:	mov	r7, #1
   15384:	mov	r5, #0
   15388:	ldr	r1, [r3, r5]
   1538c:	cmp	r1, #0
   15390:	bne	153b0 <mchar_async_destroy@@Base+0x130>
   15394:	b	153c0 <mchar_async_destroy@@Base+0x140>
   15398:	ldr	r3, [r1]
   1539c:	add	r5, r5, #20
   153a0:	add	r7, r7, #1
   153a4:	ldr	r1, [r3, r5]
   153a8:	cmp	r1, #0
   153ac:	beq	153c0 <mchar_async_destroy@@Base+0x140>
   153b0:	mov	r0, r1
   153b4:	bl	11a9c <mycore_free@plt>
   153b8:	ldr	r0, [r4, #4]
   153bc:	ldr	r2, [r4, #16]
   153c0:	add	r1, r0, r6, lsl #2
   153c4:	cmp	r7, r2
   153c8:	bcc	15398 <mchar_async_destroy@@Base+0x118>
   153cc:	ldr	r0, [r1]
   153d0:	bl	11a9c <mycore_free@plt>
   153d4:	ldr	r2, [r4, #12]
   153d8:	add	r6, r6, #1
   153dc:	cmp	r6, r2
   153e0:	bcc	15360 <mchar_async_destroy@@Base+0xe0>
   153e4:	ldr	r0, [r4, #4]
   153e8:	bl	11a9c <mycore_free@plt>
   153ec:	mov	r0, #0
   153f0:	str	r0, [r4, #4]
   153f4:	ldr	r0, [r4, #24]
   153f8:	cmp	r0, #0
   153fc:	beq	15404 <mchar_async_destroy@@Base+0x184>
   15400:	bl	11a9c <mycore_free@plt>
   15404:	ldr	r0, [r4, #44]	; 0x2c
   15408:	cmp	r0, #0
   1540c:	beq	15414 <mchar_async_destroy@@Base+0x194>
   15410:	bl	11a9c <mycore_free@plt>
   15414:	ldr	r0, [r4, #80]	; 0x50
   15418:	mov	r1, #1
   1541c:	bl	111fc <mcsync_destroy@plt>
   15420:	vmov.i32	q8, #0	; 0x00000000
   15424:	add	r0, r4, #48	; 0x30
   15428:	mov	r1, r4
   1542c:	cmp	r8, #0
   15430:	mov	r6, #0
   15434:	vst1.32	{d16-d17}, [r0]
   15438:	add	r0, r4, #32
   1543c:	str	r6, [r4, #80]	; 0x50
   15440:	vst1.32	{d16-d17}, [r0]
   15444:	add	r0, r4, #16
   15448:	vst1.32	{d16-d17}, [r0]
   1544c:	mov	r0, #64	; 0x40
   15450:	vst1.32	{d16-d17}, [r1], r0
   15454:	moveq	r0, r4
   15458:	vst1.32	{d16-d17}, [r1]
   1545c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   15460:	mov	r0, r4
   15464:	bl	11a9c <mycore_free@plt>
   15468:	mov	r0, r6
   1546c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015470 <mchar_async_cache_destroy@@Base>:
   15470:	push	{r4, r5, r6, sl, fp, lr}
   15474:	add	fp, sp, #16
   15478:	mov	r4, #0
   1547c:	cmp	r0, #0
   15480:	beq	154c0 <mchar_async_cache_destroy@@Base+0x50>
   15484:	mov	r5, r0
   15488:	ldr	r0, [r0]
   1548c:	mov	r6, r1
   15490:	cmp	r0, #0
   15494:	beq	1549c <mchar_async_cache_destroy@@Base+0x2c>
   15498:	bl	11a9c <mycore_free@plt>
   1549c:	ldr	r0, [r5, #20]
   154a0:	cmp	r0, #0
   154a4:	beq	154ac <mchar_async_cache_destroy@@Base+0x3c>
   154a8:	bl	11a9c <mycore_free@plt>
   154ac:	cmp	r6, #0
   154b0:	moveq	r0, r5
   154b4:	popeq	{r4, r5, r6, sl, fp, pc}
   154b8:	mov	r0, r5
   154bc:	bl	11a9c <mycore_free@plt>
   154c0:	mov	r0, r4
   154c4:	pop	{r4, r5, r6, sl, fp, pc}

000154c8 <mchar_async_mem_malloc@@Base>:
   154c8:	cmp	r2, #0
   154cc:	bxeq	lr
   154d0:	push	{r4, r5, r6, sl, fp, lr}
   154d4:	add	fp, sp, #16
   154d8:	mov	r6, r0
   154dc:	ldr	r0, [r2]
   154e0:	mov	r5, r3
   154e4:	mov	r4, r2
   154e8:	cmp	r0, #0
   154ec:	beq	1550c <mchar_async_mem_malloc@@Base+0x44>
   154f0:	ldr	r1, [r4, #8]
   154f4:	cmp	r1, r5
   154f8:	bcs	15524 <mchar_async_mem_malloc@@Base+0x5c>
   154fc:	bl	11a9c <mycore_free@plt>
   15500:	ldr	r0, [r6]
   15504:	add	r0, r0, r5
   15508:	b	15518 <mchar_async_mem_malloc@@Base+0x50>
   1550c:	ldr	r0, [r6]
   15510:	cmp	r0, r5
   15514:	movcc	r0, r5
   15518:	str	r0, [r4, #8]
   1551c:	bl	119ac <mycore_malloc@plt>
   15520:	str	r0, [r4]
   15524:	mov	r0, #0
   15528:	str	r0, [r4, #4]
   1552c:	pop	{r4, r5, r6, sl, fp, lr}
   15530:	bx	lr

00015534 <mchar_async_chunk_malloc_without_lock@@Base>:
   15534:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15538:	add	fp, sp, #24
   1553c:	mov	r5, r0
   15540:	ldr	r0, [r0, #40]	; 0x28
   15544:	mov	r4, r2
   15548:	cmp	r0, #0
   1554c:	beq	15584 <mchar_async_chunk_malloc_without_lock@@Base+0x50>
   15550:	add	r5, r5, #24
   15554:	mov	r1, r4
   15558:	mov	r0, r5
   1555c:	bl	11bb0 <mchar_async_cache_delete@plt>
   15560:	cmp	r0, #0
   15564:	ldrne	r1, [r5]
   15568:	addne	r0, r0, r0, lsl #2
   1556c:	ldrne	r6, [r1, r0, lsl #2]
   15570:	movne	r0, r6
   15574:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   15578:	mov	r6, #0
   1557c:	mov	r0, r6
   15580:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15584:	ldr	r1, [r5, #16]
   15588:	ldr	r0, [r5, #20]
   1558c:	cmp	r0, r1
   15590:	bcc	15634 <mchar_async_chunk_malloc_without_lock@@Base+0x100>
   15594:	ldr	r8, [r5, #12]
   15598:	ldr	r1, [r5, #8]
   1559c:	mov	r7, r5
   155a0:	add	r0, r8, #1
   155a4:	cmp	r0, r1
   155a8:	str	r0, [r5, #12]
   155ac:	bcs	155c4 <mchar_async_chunk_malloc_without_lock@@Base+0x90>
   155b0:	ldr	r6, [r7, #4]!
   155b4:	ldr	r0, [r6, r8, lsl #2]
   155b8:	cmp	r0, #0
   155bc:	bne	1562c <mchar_async_chunk_malloc_without_lock@@Base+0xf8>
   155c0:	b	15610 <mchar_async_chunk_malloc_without_lock@@Base+0xdc>
   155c4:	ldr	r0, [r7, #4]!
   155c8:	lsl	r2, r1, #1
   155cc:	lsl	r1, r1, #3
   155d0:	str	r2, [r7, #4]
   155d4:	bl	10da0 <mycore_realloc@plt>
   155d8:	cmp	r0, #0
   155dc:	beq	15578 <mchar_async_chunk_malloc_without_lock@@Base+0x44>
   155e0:	ldr	r1, [r5, #8]
   155e4:	ldr	r2, [r5, #12]
   155e8:	mov	r6, r0
   155ec:	sub	r1, r1, r2
   155f0:	add	r0, r0, r2, lsl #2
   155f4:	lsl	r2, r1, #2
   155f8:	mov	r1, #0
   155fc:	bl	116d0 <memset@plt>
   15600:	str	r6, [r5, #4]
   15604:	ldr	r0, [r6, r8, lsl #2]
   15608:	cmp	r0, #0
   1560c:	bne	1562c <mchar_async_chunk_malloc_without_lock@@Base+0xf8>
   15610:	ldr	r0, [r5, #16]
   15614:	mov	r1, #20
   15618:	bl	11004 <mycore_calloc@plt>
   1561c:	cmp	r0, #0
   15620:	beq	15578 <mchar_async_chunk_malloc_without_lock@@Base+0x44>
   15624:	ldr	r1, [r7]
   15628:	str	r0, [r1, r8, lsl #2]
   1562c:	mov	r0, #0
   15630:	str	r0, [r5, #20]
   15634:	ldr	r1, [r5, #4]
   15638:	ldr	r2, [r5, #12]
   1563c:	add	r1, r1, r2, lsl #2
   15640:	add	r2, r0, #1
   15644:	add	r0, r0, r0, lsl #2
   15648:	ldr	r1, [r1, #-4]
   1564c:	str	r2, [r5, #20]
   15650:	add	r6, r1, r0, lsl #2
   15654:	cmp	r6, #0
   15658:	beq	1568c <mchar_async_chunk_malloc_without_lock@@Base+0x158>
   1565c:	ldr	r0, [r6]
   15660:	cmp	r0, #0
   15664:	beq	1569c <mchar_async_chunk_malloc_without_lock@@Base+0x168>
   15668:	mov	r7, r6
   1566c:	ldr	r1, [r7, #8]!
   15670:	cmp	r1, r4
   15674:	bcs	156b4 <mchar_async_chunk_malloc_without_lock@@Base+0x180>
   15678:	bl	11a9c <mycore_free@plt>
   1567c:	ldr	r0, [r5]
   15680:	add	r0, r0, r4
   15684:	str	r0, [r7]
   15688:	b	156ac <mchar_async_chunk_malloc_without_lock@@Base+0x178>
   1568c:	cmp	r0, #0
   15690:	moveq	r6, r0
   15694:	mov	r0, r6
   15698:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1569c:	ldr	r0, [r5]
   156a0:	cmp	r0, r4
   156a4:	movcc	r0, r4
   156a8:	str	r0, [r6, #8]
   156ac:	bl	119ac <mycore_malloc@plt>
   156b0:	str	r0, [r6]
   156b4:	mov	r1, #0
   156b8:	str	r1, [r6, #4]
   156bc:	cmp	r0, #0
   156c0:	moveq	r6, r0
   156c4:	mov	r0, r6
   156c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000156cc <mchar_async_cache_delete@@Base>:
   156cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   156d0:	add	fp, sp, #28
   156d4:	sub	sp, sp, #4
   156d8:	ldr	r2, [r0, #12]
   156dc:	mov	r8, #0
   156e0:	cmp	r2, #0
   156e4:	beq	1590c <mchar_async_cache_delete@@Base+0x240>
   156e8:	mov	sl, r0
   156ec:	ldr	r0, [r0]
   156f0:	add	r3, r2, r2, lsl #2
   156f4:	add	r3, r0, r3, lsl #2
   156f8:	ldr	r7, [r3, #4]
   156fc:	cmp	r7, r1
   15700:	bcs	15714 <mchar_async_cache_delete@@Base+0x48>
   15704:	ldr	r2, [r3, #12]
   15708:	cmp	r2, #0
   1570c:	bne	156f0 <mchar_async_cache_delete@@Base+0x24>
   15710:	b	1590c <mchar_async_cache_delete@@Base+0x240>
   15714:	mov	r6, r2
   15718:	add	r2, r2, r2, lsl #2
   1571c:	add	r5, r0, r2, lsl #2
   15720:	mov	r3, r5
   15724:	ldr	r2, [r3, #12]!
   15728:	add	r7, r2, r2, lsl #2
   1572c:	add	r7, r0, r7, lsl #2
   15730:	ldr	r4, [r7, #4]
   15734:	cmp	r4, r1
   15738:	beq	15714 <mchar_async_cache_delete@@Base+0x48>
   1573c:	ldr	lr, [r5, #16]
   15740:	cmp	lr, #0
   15744:	beq	157b4 <mchar_async_cache_delete@@Base+0xe8>
   15748:	add	r1, lr, lr, lsl #2
   1574c:	add	ip, r0, r1, lsl #2
   15750:	mov	r9, ip
   15754:	ldr	r1, [r9, #8]!
   15758:	cmp	r1, r6
   1575c:	bne	1580c <mchar_async_cache_delete@@Base+0x140>
   15760:	ldr	ip, [r5, #8]!
   15764:	cmp	r2, #0
   15768:	beq	15870 <mchar_async_cache_delete@@Base+0x1a4>
   1576c:	cmp	ip, #0
   15770:	beq	1589c <mchar_async_cache_delete@@Base+0x1d0>
   15774:	ldr	r3, [r7, #8]!
   15778:	add	r1, r3, r3, lsl #2
   1577c:	mov	r4, r3
   15780:	add	r1, r0, r1, lsl #2
   15784:	ldr	r3, [r1, #8]!
   15788:	cmp	r3, #0
   1578c:	bne	15778 <mchar_async_cache_delete@@Base+0xac>
   15790:	cmp	r4, #0
   15794:	beq	15898 <mchar_async_cache_delete@@Base+0x1cc>
   15798:	str	ip, [r1]
   1579c:	ldr	r1, [r5]
   157a0:	add	r1, r1, r1, lsl #2
   157a4:	add	r1, r0, r1, lsl #2
   157a8:	str	r4, [r1, #16]
   157ac:	str	r2, [r9]
   157b0:	b	158b0 <mchar_async_cache_delete@@Base+0x1e4>
   157b4:	ldr	r1, [r5, #8]
   157b8:	cmp	r1, #0
   157bc:	beq	15864 <mchar_async_cache_delete@@Base+0x198>
   157c0:	cmp	r2, #0
   157c4:	beq	1588c <mchar_async_cache_delete@@Base+0x1c0>
   157c8:	add	r7, r1, r1, lsl #2
   157cc:	add	ip, r0, r7, lsl #2
   157d0:	ldr	r5, [ip, #12]!
   157d4:	add	r7, r5, r5, lsl #2
   157d8:	mov	r4, r5
   157dc:	add	r7, r0, r7, lsl #2
   157e0:	ldr	r5, [r7, #12]!
   157e4:	cmp	r5, #0
   157e8:	bne	157d4 <mchar_async_cache_delete@@Base+0x108>
   157ec:	cmp	r4, #0
   157f0:	beq	15888 <mchar_async_cache_delete@@Base+0x1bc>
   157f4:	str	r2, [r7]
   157f8:	ldr	r2, [r3]
   157fc:	add	r2, r2, r2, lsl #2
   15800:	add	r2, r0, r2, lsl #2
   15804:	str	r4, [r2, #16]
   15808:	b	1588c <mchar_async_cache_delete@@Base+0x1c0>
   1580c:	ldr	r1, [r5, #8]
   15810:	cmp	r1, #0
   15814:	beq	1587c <mchar_async_cache_delete@@Base+0x1b0>
   15818:	cmp	r2, #0
   1581c:	beq	158a8 <mchar_async_cache_delete@@Base+0x1dc>
   15820:	add	r4, r1, r1, lsl #2
   15824:	add	r9, r0, r4, lsl #2
   15828:	ldr	r4, [r9, #12]!
   1582c:	mov	r7, r4
   15830:	add	r4, r4, r4, lsl #2
   15834:	add	r5, r0, r4, lsl #2
   15838:	ldr	r4, [r5, #12]!
   1583c:	cmp	r4, #0
   15840:	bne	1582c <mchar_async_cache_delete@@Base+0x160>
   15844:	cmp	r7, #0
   15848:	beq	158a4 <mchar_async_cache_delete@@Base+0x1d8>
   1584c:	str	r2, [r5]
   15850:	ldr	r2, [r3]
   15854:	add	r2, r2, r2, lsl #2
   15858:	add	r2, r0, r2, lsl #2
   1585c:	str	r7, [r2, #16]
   15860:	b	158a8 <mchar_async_cache_delete@@Base+0x1dc>
   15864:	mov	lr, #0
   15868:	str	r2, [sl, #12]
   1586c:	b	158b0 <mchar_async_cache_delete@@Base+0x1e4>
   15870:	str	ip, [r9]
   15874:	ldr	r2, [r5]
   15878:	b	158b0 <mchar_async_cache_delete@@Base+0x1e4>
   1587c:	str	r2, [ip, #12]
   15880:	ldr	r2, [r3]
   15884:	b	158b0 <mchar_async_cache_delete@@Base+0x1e4>
   15888:	str	r2, [ip]
   1588c:	str	r1, [sl, #12]
   15890:	mov	lr, #0
   15894:	b	158ac <mchar_async_cache_delete@@Base+0x1e0>
   15898:	str	ip, [r7]
   1589c:	str	r2, [r9]
   158a0:	b	158b0 <mchar_async_cache_delete@@Base+0x1e4>
   158a4:	str	r2, [r9]
   158a8:	str	r1, [ip, #12]
   158ac:	mov	r2, r1
   158b0:	add	r1, r2, r2, lsl #2
   158b4:	add	r0, r0, r1, lsl #2
   158b8:	str	lr, [r0, #16]
   158bc:	ldr	r0, [sl, #20]
   158c0:	ldr	r1, [sl, #24]
   158c4:	str	r6, [r0, r1, lsl #2]
   158c8:	ldr	r1, [sl, #24]
   158cc:	ldr	r5, [sl, #28]
   158d0:	add	r1, r1, #1
   158d4:	cmp	r1, r5
   158d8:	str	r1, [sl, #24]
   158dc:	bcc	158fc <mchar_async_cache_delete@@Base+0x230>
   158e0:	lsl	r1, r5, #3
   158e4:	bl	10da0 <mycore_realloc@plt>
   158e8:	cmp	r0, #0
   158ec:	beq	1590c <mchar_async_cache_delete@@Base+0x240>
   158f0:	str	r0, [sl, #20]
   158f4:	lsl	r0, r5, #1
   158f8:	str	r0, [sl, #28]
   158fc:	ldr	r0, [sl, #16]
   15900:	mov	r8, r6
   15904:	sub	r0, r0, #1
   15908:	str	r0, [sl, #16]
   1590c:	mov	r0, r8
   15910:	sub	sp, fp, #28
   15914:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15918:	nop	{0}
   1591c:	nop	{0}

00015920 <mchar_async_node_add@@Base>:
   15920:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15924:	add	fp, sp, #28
   15928:	sub	sp, sp, #4
   1592c:	mov	r5, r0
   15930:	ldr	r0, [r0, #80]	; 0x50
   15934:	mov	sl, r1
   15938:	bl	11694 <mcsync_lock@plt>
   1593c:	cmp	r0, #0
   15940:	beq	15960 <mchar_async_node_add@@Base+0x40>
   15944:	cmp	sl, #0
   15948:	mov	r6, #0
   1594c:	movne	r0, #96	; 0x60
   15950:	strne	r0, [sl]
   15954:	mov	r0, r6
   15958:	sub	sp, fp, #28
   1595c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15960:	ldr	r0, [r5, #72]	; 0x48
   15964:	cmp	r0, #0
   15968:	beq	15980 <mchar_async_node_add@@Base+0x60>
   1596c:	sub	r0, r0, #1
   15970:	str	r0, [r5, #72]	; 0x48
   15974:	ldr	r1, [r5, #68]	; 0x44
   15978:	ldr	r6, [r1, r0, lsl #2]
   1597c:	b	15998 <mchar_async_node_add@@Base+0x78>
   15980:	ldr	r6, [r5, #60]	; 0x3c
   15984:	ldr	r0, [r5, #64]	; 0x40
   15988:	cmp	r6, r0
   1598c:	bcs	15a34 <mchar_async_node_add@@Base+0x114>
   15990:	add	r0, r6, #1
   15994:	str	r0, [r5, #60]	; 0x3c
   15998:	ldr	r8, [r5, #56]	; 0x38
   1599c:	add	r0, pc, #220	; 0xdc
   159a0:	add	r9, r6, r6, lsl #3
   159a4:	vld1.64	{d16-d17}, [r0 :128]
   159a8:	mov	r0, #20480	; 0x5000
   159ac:	add	r7, r8, r9, lsl #2
   159b0:	add	r4, r7, #8
   159b4:	vst1.32	{d16-d17}, [r4]
   159b8:	bl	119ac <mycore_malloc@plt>
   159bc:	cmp	r0, #0
   159c0:	str	r0, [r7, #4]
   159c4:	beq	15a54 <mchar_async_node_add@@Base+0x134>
   159c8:	vmov.i32	q8, #0	; 0x00000000
   159cc:	vst1.32	{d16-d17}, [r0]
   159d0:	mov	r0, #0
   159d4:	ldr	r1, [r4]
   159d8:	str	r0, [r7, #28]
   159dc:	lsl	r0, r1, #2
   159e0:	str	r1, [r7, #32]
   159e4:	bl	119ac <mycore_malloc@plt>
   159e8:	cmp	r0, #0
   159ec:	str	r0, [r7, #24]
   159f0:	beq	15a44 <mchar_async_node_add@@Base+0x124>
   159f4:	ldr	r2, [r5]
   159f8:	mov	r0, r5
   159fc:	bl	11904 <mchar_async_chunk_malloc_without_lock@plt>
   15a00:	cmp	r0, #0
   15a04:	str	r0, [r8, r9, lsl #2]
   15a08:	beq	15a54 <mchar_async_node_add@@Base+0x134>
   15a0c:	mov	r4, #0
   15a10:	str	r4, [r0, #12]
   15a14:	str	r4, [r0, #16]
   15a18:	ldr	r0, [r5, #80]	; 0x50
   15a1c:	bl	11b44 <mcsync_unlock@plt>
   15a20:	cmp	sl, #0
   15a24:	strne	r4, [sl]
   15a28:	mov	r0, r6
   15a2c:	sub	sp, fp, #28
   15a30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a34:	cmp	sl, #0
   15a38:	beq	15a64 <mchar_async_node_add@@Base+0x144>
   15a3c:	mov	r0, #98	; 0x62
   15a40:	b	15a60 <mchar_async_node_add@@Base+0x140>
   15a44:	add	r4, r7, #4
   15a48:	ldr	r0, [r4]
   15a4c:	bl	11a9c <mycore_free@plt>
   15a50:	str	r0, [r4]
   15a54:	cmp	sl, #0
   15a58:	beq	15a64 <mchar_async_node_add@@Base+0x144>
   15a5c:	mov	r0, #2
   15a60:	str	r0, [sl]
   15a64:	ldr	r0, [r5, #80]	; 0x50
   15a68:	bl	11b44 <mcsync_unlock@plt>
   15a6c:	mov	r6, #0
   15a70:	mov	r0, r6
   15a74:	sub	sp, fp, #28
   15a78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a7c:	nop	{0}
   15a80:	andeq	r0, r0, r0, lsl #8
   15a84:	andeq	r0, r0, r1
	...

00015a90 <mchar_async_node_clean@@Base>:
   15a90:	ldr	r2, [r0, #60]	; 0x3c
   15a94:	cmp	r2, r1
   15a98:	bls	15b00 <mchar_async_node_clean@@Base+0x70>
   15a9c:	ldr	ip, [r0, #56]	; 0x38
   15aa0:	add	r1, r1, r1, lsl #3
   15aa4:	mov	r3, ip
   15aa8:	ldr	r0, [r3, r1, lsl #2]!
   15aac:	ldr	r2, [r0, #16]
   15ab0:	cmp	r2, #0
   15ab4:	beq	15acc <mchar_async_node_clean@@Base+0x3c>
   15ab8:	mov	r0, r2
   15abc:	ldr	r2, [r2, #16]
   15ac0:	cmp	r2, #0
   15ac4:	bne	15ab8 <mchar_async_node_clean@@Base+0x28>
   15ac8:	str	r0, [r3]
   15acc:	mov	r2, #0
   15ad0:	str	r2, [r0, #4]
   15ad4:	add	r0, ip, r1, lsl #2
   15ad8:	mov	r1, #1
   15adc:	str	r1, [r0, #12]
   15ae0:	str	r2, [r0, #16]
   15ae4:	str	r2, [r0, #20]
   15ae8:	str	r2, [r0, #28]
   15aec:	ldr	r0, [r0, #4]
   15af0:	cmp	r0, #0
   15af4:	bxeq	lr
   15af8:	vmov.i32	q8, #0	; 0x00000000
   15afc:	vst1.32	{d16-d17}, [r0]
   15b00:	bx	lr

00015b04 <mchar_async_node_delete@@Base>:
   15b04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b08:	add	fp, sp, #28
   15b0c:	sub	sp, sp, #4
   15b10:	mov	r4, r0
   15b14:	ldr	r0, [r0, #80]	; 0x50
   15b18:	mov	r8, r1
   15b1c:	bl	11694 <mcsync_lock@plt>
   15b20:	ldr	r0, [r4, #60]	; 0x3c
   15b24:	cmp	r0, r8
   15b28:	bls	15c08 <mchar_async_node_delete@@Base+0x104>
   15b2c:	ldr	r9, [r4, #56]	; 0x38
   15b30:	add	sl, r8, r8, lsl #3
   15b34:	mov	r5, r9
   15b38:	ldr	r0, [r5, sl, lsl #2]!
   15b3c:	mov	r6, r0
   15b40:	ldr	r0, [r0, #12]
   15b44:	cmp	r0, #0
   15b48:	bne	15b3c <mchar_async_node_delete@@Base+0x38>
   15b4c:	cmp	r6, #0
   15b50:	beq	15b74 <mchar_async_node_delete@@Base+0x70>
   15b54:	add	r7, r4, #24
   15b58:	ldr	r2, [r6, #8]
   15b5c:	mov	r0, r7
   15b60:	mov	r1, r6
   15b64:	bl	11994 <mchar_async_cache_add@plt>
   15b68:	ldr	r6, [r6, #16]
   15b6c:	cmp	r6, #0
   15b70:	bne	15b58 <mchar_async_node_delete@@Base+0x54>
   15b74:	add	r6, r9, sl, lsl #2
   15b78:	ldr	r0, [r6, #4]
   15b7c:	cmp	r0, #0
   15b80:	beq	15b98 <mchar_async_node_delete@@Base+0x94>
   15b84:	bl	11a9c <mycore_free@plt>
   15b88:	ldr	r0, [r6, #24]
   15b8c:	cmp	r0, #0
   15b90:	beq	15b98 <mchar_async_node_delete@@Base+0x94>
   15b94:	bl	11a9c <mycore_free@plt>
   15b98:	vmov.i32	q8, #0	; 0x00000000
   15b9c:	mov	r0, #32
   15ba0:	add	r1, r5, #16
   15ba4:	vst1.32	{d16-d17}, [r5], r0
   15ba8:	mov	r0, #0
   15bac:	vst1.32	{d16-d17}, [r1]
   15bb0:	str	r0, [r5]
   15bb4:	ldr	r0, [r4, #72]	; 0x48
   15bb8:	ldr	r5, [r4, #76]	; 0x4c
   15bbc:	cmp	r0, r5
   15bc0:	bcc	15be0 <mchar_async_node_delete@@Base+0xdc>
   15bc4:	ldr	r0, [r4, #68]	; 0x44
   15bc8:	lsl	r1, r5, #2
   15bcc:	bl	10da0 <mycore_realloc@plt>
   15bd0:	cmp	r0, #0
   15bd4:	strne	r0, [r4, #68]	; 0x44
   15bd8:	lslne	r0, r5, #1
   15bdc:	strne	r0, [r4, #76]	; 0x4c
   15be0:	ldr	r0, [r4, #68]	; 0x44
   15be4:	ldr	r1, [r4, #72]	; 0x48
   15be8:	str	r8, [r0, r1, lsl #2]
   15bec:	ldr	r1, [r4, #72]	; 0x48
   15bf0:	ldr	r0, [r4, #80]	; 0x50
   15bf4:	add	r1, r1, #1
   15bf8:	str	r1, [r4, #72]	; 0x48
   15bfc:	sub	sp, fp, #28
   15c00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c04:	b	11b44 <mcsync_unlock@plt>
   15c08:	ldr	r0, [r4, #80]	; 0x50
   15c0c:	sub	sp, fp, #28
   15c10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c14:	b	11b44 <mcsync_unlock@plt>

00015c18 <mchar_async_cache_add@@Base>:
   15c18:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15c1c:	add	fp, sp, #24
   15c20:	mov	r4, r0
   15c24:	mov	r6, r0
   15c28:	mov	r5, r2
   15c2c:	mov	r8, r1
   15c30:	ldr	r7, [r4, #12]!
   15c34:	ldr	r0, [r4, #4]
   15c38:	cmp	r7, #0
   15c3c:	add	r0, r0, #1
   15c40:	str	r0, [r4, #4]
   15c44:	beq	15c68 <mchar_async_cache_add@@Base+0x50>
   15c48:	ldr	r0, [r6, #24]
   15c4c:	cmp	r0, #0
   15c50:	beq	15c8c <mchar_async_cache_add@@Base+0x74>
   15c54:	sub	r0, r0, #1
   15c58:	str	r0, [r6, #24]
   15c5c:	ldr	r1, [r6, #20]
   15c60:	ldr	r1, [r1, r0, lsl #2]
   15c64:	b	15ccc <mchar_async_cache_add@@Base+0xb4>
   15c68:	ldr	r0, [r6, #24]
   15c6c:	ldr	r7, [r6]
   15c70:	cmp	r0, #0
   15c74:	beq	15da0 <mchar_async_cache_add@@Base+0x188>
   15c78:	sub	r0, r0, #1
   15c7c:	str	r0, [r6, #24]
   15c80:	ldr	r1, [r6, #20]
   15c84:	ldr	r0, [r1, r0, lsl #2]
   15c88:	b	15ddc <mchar_async_cache_add@@Base+0x1c4>
   15c8c:	ldr	r0, [r6, #8]
   15c90:	ldr	r1, [r6, #4]
   15c94:	add	r0, r0, #1
   15c98:	cmp	r0, r1
   15c9c:	str	r0, [r6, #8]
   15ca0:	bcc	15cc4 <mchar_async_cache_add@@Base+0xac>
   15ca4:	lsl	r0, r1, #1
   15ca8:	add	r1, r1, r1, lsl #2
   15cac:	str	r0, [r6, #4]
   15cb0:	lsl	r1, r1, #3
   15cb4:	ldr	r0, [r6]
   15cb8:	bl	10da0 <mycore_realloc@plt>
   15cbc:	cmp	r0, #0
   15cc0:	strne	r0, [r6]
   15cc4:	ldr	r0, [r6, #8]
   15cc8:	sub	r1, r0, #1
   15ccc:	ldr	r3, [r6]
   15cd0:	add	r2, r7, r7, lsl #2
   15cd4:	mov	r0, r7
   15cd8:	add	r2, r3, r2, lsl #2
   15cdc:	ldr	r7, [r2, #4]
   15ce0:	cmp	r7, r5
   15ce4:	beq	15d20 <mchar_async_cache_add@@Base+0x108>
   15ce8:	bhi	15d50 <mchar_async_cache_add@@Base+0x138>
   15cec:	ldr	r7, [r2, #12]!
   15cf0:	cmp	r7, #0
   15cf4:	bne	15cd0 <mchar_async_cache_add@@Base+0xb8>
   15cf8:	str	r1, [r2]
   15cfc:	add	r1, r1, r1, lsl #2
   15d00:	add	r7, r3, r1, lsl #2
   15d04:	mov	r1, #0
   15d08:	str	r5, [r7, #4]
   15d0c:	str	r1, [r7, #8]
   15d10:	str	r1, [r7, #12]
   15d14:	str	r0, [r7, #16]
   15d18:	str	r8, [r7]
   15d1c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15d20:	ldr	r4, [r2, #12]!
   15d24:	add	r7, r1, r1, lsl #2
   15d28:	add	r7, r3, r7, lsl #2
   15d2c:	add	r6, r7, #12
   15d30:	cmp	r4, #0
   15d34:	beq	15e04 <mchar_async_cache_add@@Base+0x1ec>
   15d38:	str	r4, [r6]
   15d3c:	ldr	r6, [r2]
   15d40:	add	r6, r6, r6, lsl #2
   15d44:	add	r3, r3, r6, lsl #2
   15d48:	str	r1, [r3, #16]
   15d4c:	b	15e0c <mchar_async_cache_add@@Base+0x1f4>
   15d50:	ldr	r7, [r2, #16]!
   15d54:	mov	ip, #0
   15d58:	mov	r6, #0
   15d5c:	cmp	r7, #0
   15d60:	beq	15d7c <mchar_async_cache_add@@Base+0x164>
   15d64:	add	r6, r7, r7, lsl #2
   15d68:	add	r4, r3, r6, lsl #2
   15d6c:	ldr	r6, [r4, #8]!
   15d70:	cmp	r6, r0
   15d74:	mov	r6, r7
   15d78:	addne	r4, r4, #4
   15d7c:	add	r7, r1, r1, lsl #2
   15d80:	str	r1, [r4]
   15d84:	add	r7, r3, r7, lsl #2
   15d88:	str	r6, [r7, #16]
   15d8c:	str	r1, [r2]
   15d90:	str	r0, [r7, #12]
   15d94:	stmib	r7, {r5, ip}
   15d98:	str	r8, [r7]
   15d9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15da0:	ldmib	r6, {r0, r1}
   15da4:	add	r1, r1, #1
   15da8:	cmp	r1, r0
   15dac:	str	r1, [r6, #8]
   15db0:	bcc	15dd4 <mchar_async_cache_add@@Base+0x1bc>
   15db4:	lsl	r1, r0, #1
   15db8:	add	r0, r0, r0, lsl #2
   15dbc:	str	r1, [r6, #4]
   15dc0:	lsl	r1, r0, #3
   15dc4:	mov	r0, r7
   15dc8:	bl	10da0 <mycore_realloc@plt>
   15dcc:	cmp	r0, #0
   15dd0:	strne	r0, [r6]
   15dd4:	ldr	r0, [r6, #8]
   15dd8:	sub	r0, r0, #1
   15ddc:	str	r0, [r4]
   15de0:	add	r0, r0, r0, lsl #2
   15de4:	add	r7, r7, r0, lsl #2
   15de8:	mov	r0, #0
   15dec:	str	r5, [r7, #4]
   15df0:	str	r0, [r7, #8]
   15df4:	str	r0, [r7, #12]
   15df8:	str	r0, [r7, #16]
   15dfc:	str	r8, [r7]
   15e00:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15e04:	mov	r3, #0
   15e08:	str	r3, [r6]
   15e0c:	str	r1, [r2]
   15e10:	mov	r1, #0
   15e14:	str	r0, [r7, #16]
   15e18:	str	r5, [r7, #4]
   15e1c:	str	r1, [r7, #8]
   15e20:	str	r8, [r7]
   15e24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015e28 <mchar_sync_chunk_find_by_size@@Base>:
   15e28:	ldr	r0, [r0]
   15e2c:	ldr	r0, [r0, #12]
   15e30:	cmp	r0, #0
   15e34:	bxeq	lr
   15e38:	ldr	r2, [r0, #8]
   15e3c:	cmp	r2, r1
   15e40:	bcc	15e2c <mchar_sync_chunk_find_by_size@@Base+0x4>
   15e44:	bx	lr

00015e48 <mchar_sync_chunk_insert_after@@Base>:
   15e48:	ldr	r2, [r0, #12]
   15e4c:	cmp	r2, r1
   15e50:	bxeq	lr
   15e54:	ldr	r2, [r1, #16]
   15e58:	cmp	r2, #0
   15e5c:	ldrne	r3, [r1, #12]
   15e60:	strne	r3, [r2, #12]
   15e64:	ldr	r3, [r1, #12]
   15e68:	cmp	r3, #0
   15e6c:	strne	r2, [r3, #16]
   15e70:	ldr	r2, [r0, #12]
   15e74:	cmp	r2, #0
   15e78:	strne	r1, [r2, #16]
   15e7c:	str	r2, [r1, #12]
   15e80:	str	r0, [r1, #16]
   15e84:	str	r1, [r0, #12]
   15e88:	bx	lr

00015e8c <mchar_async_malloc@@Base>:
   15e8c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15e90:	add	fp, sp, #24
   15e94:	cmp	r2, #0
   15e98:	moveq	r0, #0
   15e9c:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   15ea0:	ldr	r6, [r0, #56]	; 0x38
   15ea4:	mov	r8, r0
   15ea8:	add	r0, r1, r1, lsl #3
   15eac:	mov	r9, r2
   15eb0:	ldr	r5, [r6, r0, lsl #2]!
   15eb4:	ldr	r0, [r6, #20]
   15eb8:	add	r7, r6, #4
   15ebc:	cmp	r0, #0
   15ec0:	beq	15ee4 <mchar_async_malloc@@Base+0x58>
   15ec4:	mov	r0, r7
   15ec8:	mov	r1, r9
   15ecc:	bl	11bb0 <mchar_async_cache_delete@plt>
   15ed0:	cmp	r0, #0
   15ed4:	ldrne	r1, [r7]
   15ed8:	addne	r0, r0, r0, lsl #2
   15edc:	ldrne	r0, [r1, r0, lsl #2]
   15ee0:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   15ee4:	ldmib	r5, {r0, r2}
   15ee8:	add	r4, r9, #4
   15eec:	add	r1, r4, r0
   15ef0:	cmp	r1, r2
   15ef4:	bls	15ff0 <mchar_async_malloc@@Base+0x164>
   15ef8:	add	r1, r0, #4
   15efc:	cmp	r1, r2
   15f00:	bcs	15f2c <mchar_async_malloc@@Base+0xa0>
   15f04:	sub	r2, r2, r0
   15f08:	subs	r2, r2, #4
   15f0c:	beq	15f2c <mchar_async_malloc@@Base+0xa0>
   15f10:	ldr	r3, [r5]
   15f14:	str	r2, [r3, r0]
   15f18:	add	r1, r3, r1
   15f1c:	ldr	r0, [r5, #8]
   15f20:	str	r0, [r5, #4]
   15f24:	mov	r0, r7
   15f28:	bl	11994 <mchar_async_cache_add@plt>
   15f2c:	ldr	r5, [r6]
   15f30:	ldr	r5, [r5, #12]
   15f34:	cmp	r5, #0
   15f38:	beq	15f64 <mchar_async_malloc@@Base+0xd8>
   15f3c:	ldr	r0, [r5, #8]
   15f40:	cmp	r0, r4
   15f44:	bcc	15f30 <mchar_async_malloc@@Base+0xa4>
   15f48:	mov	r0, #0
   15f4c:	str	r0, [r5, #4]
   15f50:	ldr	r0, [r6]
   15f54:	ldr	r1, [r0, #12]
   15f58:	cmp	r1, r5
   15f5c:	bne	15fb4 <mchar_async_malloc@@Base+0x128>
   15f60:	b	15fe8 <mchar_async_malloc@@Base+0x15c>
   15f64:	ldr	r5, [r8]
   15f68:	cmp	r4, r5
   15f6c:	bls	15f84 <mchar_async_malloc@@Base+0xf8>
   15f70:	ldr	r0, [r8, #80]	; 0x50
   15f74:	bl	11694 <mcsync_lock@plt>
   15f78:	add	r2, r5, r4
   15f7c:	mov	r0, r8
   15f80:	b	15f94 <mchar_async_malloc@@Base+0x108>
   15f84:	ldr	r0, [r8, #80]	; 0x50
   15f88:	bl	11694 <mcsync_lock@plt>
   15f8c:	mov	r0, r8
   15f90:	mov	r2, r5
   15f94:	bl	11904 <mchar_async_chunk_malloc_without_lock@plt>
   15f98:	mov	r5, r0
   15f9c:	ldr	r0, [r8, #80]	; 0x50
   15fa0:	bl	11b44 <mcsync_unlock@plt>
   15fa4:	ldr	r0, [r6]
   15fa8:	ldr	r1, [r0, #12]
   15fac:	cmp	r1, r5
   15fb0:	beq	15fe8 <mchar_async_malloc@@Base+0x15c>
   15fb4:	ldr	r1, [r5, #16]
   15fb8:	cmp	r1, #0
   15fbc:	ldrne	r2, [r5, #12]
   15fc0:	strne	r2, [r1, #12]
   15fc4:	ldr	r2, [r5, #12]
   15fc8:	cmp	r2, #0
   15fcc:	strne	r1, [r2, #16]
   15fd0:	ldr	r1, [r0, #12]
   15fd4:	cmp	r1, #0
   15fd8:	strne	r5, [r1, #16]
   15fdc:	str	r1, [r5, #12]
   15fe0:	str	r0, [r5, #16]
   15fe4:	str	r5, [r0, #12]
   15fe8:	str	r5, [r6]
   15fec:	ldr	r0, [r5, #4]
   15ff0:	ldr	r1, [r5]
   15ff4:	str	r9, [r1, r0]!
   15ff8:	ldr	r0, [r5, #4]
   15ffc:	add	r0, r4, r0
   16000:	str	r0, [r5, #4]
   16004:	add	r0, r1, #4
   16008:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001600c <mchar_async_realloc@@Base>:
   1600c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16010:	add	fp, sp, #28
   16014:	sub	sp, sp, #4
   16018:	mov	r5, #0
   1601c:	cmp	r2, #0
   16020:	beq	160b4 <mchar_async_realloc@@Base+0xa8>
   16024:	mov	r4, r2
   16028:	ldr	r2, [fp, #8]
   1602c:	ldr	r7, [r4, #-4]
   16030:	cmp	r7, r2
   16034:	bcs	160c0 <mchar_async_realloc@@Base+0xb4>
   16038:	ldr	r9, [r0, #56]	; 0x38
   1603c:	add	sl, r1, r1, lsl #3
   16040:	mov	r8, r3
   16044:	str	r9, [sp]
   16048:	ldr	r6, [r9, sl, lsl #2]!
   1604c:	ldr	r3, [r6, #4]
   16050:	cmp	r3, r7
   16054:	bcc	1607c <mchar_async_realloc@@Base+0x70>
   16058:	sub	lr, r3, r7
   1605c:	ldr	r3, [r6]
   16060:	add	ip, r3, lr
   16064:	cmp	ip, r4
   16068:	bne	1607c <mchar_async_realloc@@Base+0x70>
   1606c:	ldr	r3, [r6, #8]
   16070:	add	lr, lr, r2
   16074:	cmp	lr, r3
   16078:	bls	160d0 <mchar_async_realloc@@Base+0xc4>
   1607c:	bl	11730 <mchar_async_malloc@plt>
   16080:	cmp	r0, #0
   16084:	beq	160b4 <mchar_async_realloc@@Base+0xa8>
   16088:	mov	r1, r4
   1608c:	mov	r2, r8
   16090:	mov	r6, r0
   16094:	bl	11034 <memcpy@plt>
   16098:	ldr	r0, [sp]
   1609c:	mov	r1, r4
   160a0:	mov	r2, r7
   160a4:	add	r0, r0, sl, lsl #2
   160a8:	add	r0, r0, #4
   160ac:	bl	11994 <mchar_async_cache_add@plt>
   160b0:	mov	r5, r6
   160b4:	mov	r0, r5
   160b8:	sub	sp, fp, #28
   160bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160c0:	mov	r5, r4
   160c4:	mov	r0, r5
   160c8:	sub	sp, fp, #28
   160cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160d0:	str	r2, [ip, #-4]
   160d4:	mov	r5, r4
   160d8:	ldr	r0, [r9]
   160dc:	str	lr, [r0, #4]
   160e0:	mov	r0, r5
   160e4:	sub	sp, fp, #28
   160e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000160ec <mchar_async_crop_first_chars@@Base>:
   160ec:	push	{r4, r5, fp, lr}
   160f0:	add	fp, sp, #8
   160f4:	cmp	r2, #0
   160f8:	moveq	r5, #0
   160fc:	moveq	r0, r5
   16100:	popeq	{r4, r5, fp, pc}
   16104:	ldr	r4, [r2, #-4]
   16108:	add	r5, r2, r3
   1610c:	sub	r4, r4, r3
   16110:	str	r4, [r5, #-4]
   16114:	add	r4, r3, #4
   16118:	cmp	r4, #5
   1611c:	bcc	16144 <mchar_async_crop_first_chars@@Base+0x58>
   16120:	sub	r3, r3, #4
   16124:	add	r1, r1, r1, lsl #3
   16128:	str	r3, [r2, #-4]
   1612c:	ldr	r0, [r0, #56]	; 0x38
   16130:	add	r0, r0, r1, lsl #2
   16134:	mov	r1, r2
   16138:	mov	r2, r3
   1613c:	add	r0, r0, #4
   16140:	bl	11994 <mchar_async_cache_add@plt>
   16144:	mov	r0, r5
   16148:	pop	{r4, r5, fp, pc}

0001614c <mchar_async_crop_first_chars_without_cache@@Base>:
   1614c:	cmp	r0, #0
   16150:	moveq	r0, #0
   16154:	bxeq	lr
   16158:	mov	r2, r0
   1615c:	add	r0, r0, r1
   16160:	ldr	r2, [r2, #-4]
   16164:	sub	r1, r2, r1
   16168:	str	r1, [r0, #-4]
   1616c:	bx	lr

00016170 <mchar_async_get_size_by_data@@Base>:
   16170:	cmp	r0, #0
   16174:	ldrne	r0, [r0, #-4]
   16178:	moveq	r0, #0
   1617c:	bx	lr

00016180 <mchar_async_free@@Base>:
   16180:	cmp	r2, #0
   16184:	bxeq	lr
   16188:	ldr	r0, [r0, #56]	; 0x38
   1618c:	ldr	r3, [r2, #-4]
   16190:	add	r1, r1, r1, lsl #3
   16194:	add	r0, r0, r1, lsl #2
   16198:	mov	r1, r2
   1619c:	mov	r2, r3
   161a0:	add	r0, r0, #4
   161a4:	b	15c18 <mchar_async_cache_add@@Base>

000161a8 <mchar_async_cache_malloc@@Base>:
   161a8:	push	{r4, sl, fp, lr}
   161ac:	add	fp, sp, #8
   161b0:	mov	r4, r0
   161b4:	ldr	r0, [r0, #24]
   161b8:	cmp	r0, #0
   161bc:	subne	r0, r0, #1
   161c0:	strne	r0, [r4, #24]
   161c4:	ldrne	r1, [r4, #20]
   161c8:	ldrne	r0, [r1, r0, lsl #2]
   161cc:	popne	{r4, sl, fp, pc}
   161d0:	ldr	r0, [r4, #8]
   161d4:	ldr	r1, [r4, #4]
   161d8:	add	r0, r0, #1
   161dc:	cmp	r0, r1
   161e0:	str	r0, [r4, #8]
   161e4:	bcc	16208 <mchar_async_cache_malloc@@Base+0x60>
   161e8:	lsl	r0, r1, #1
   161ec:	add	r1, r1, r1, lsl #2
   161f0:	str	r0, [r4, #4]
   161f4:	lsl	r1, r1, #3
   161f8:	ldr	r0, [r4]
   161fc:	bl	10da0 <mycore_realloc@plt>
   16200:	cmp	r0, #0
   16204:	strne	r0, [r4]
   16208:	ldr	r0, [r4, #8]
   1620c:	sub	r0, r0, #1
   16210:	pop	{r4, sl, fp, pc}

00016214 <mcobject_create@@Base>:
   16214:	mov	r0, #1
   16218:	mov	r1, #24
   1621c:	b	11004 <mycore_calloc@plt>

00016220 <mcobject_init@@Base>:
   16220:	push	{r4, r5, fp, lr}
   16224:	add	fp, sp, #8
   16228:	mov	r5, #0
   1622c:	mov	r4, r0
   16230:	str	r5, [r0]
   16234:	str	r1, [r0, #8]
   16238:	str	r5, [r0, #12]
   1623c:	str	r2, [r0, #16]
   16240:	str	r1, [r0, #20]
   16244:	lsl	r0, r1, #2
   16248:	bl	119ac <mycore_malloc@plt>
   1624c:	cmp	r0, #0
   16250:	str	r0, [r4, #4]
   16254:	movweq	r5, #85	; 0x55
   16258:	mov	r0, r5
   1625c:	pop	{r4, r5, fp, pc}

00016260 <mcobject_clean@@Base>:
   16260:	push	{r4, r5, r6, sl, fp, lr}
   16264:	add	fp, sp, #16
   16268:	mov	r4, r0
   1626c:	ldr	r0, [r0]
   16270:	cmp	r0, #0
   16274:	popeq	{r4, r5, r6, sl, fp, pc}
   16278:	mov	r5, r0
   1627c:	ldr	r0, [r0, #12]
   16280:	cmp	r0, #0
   16284:	bne	16278 <mcobject_clean@@Base+0x18>
   16288:	ldr	r0, [r5]
   1628c:	ldr	r6, [r5, #16]
   16290:	cmp	r0, #0
   16294:	beq	1629c <mcobject_clean@@Base+0x3c>
   16298:	bl	11a9c <mycore_free@plt>
   1629c:	mov	r0, r5
   162a0:	bl	11a9c <mycore_free@plt>
   162a4:	cmp	r6, #0
   162a8:	mov	r5, r6
   162ac:	bne	16288 <mcobject_clean@@Base+0x28>
   162b0:	mov	r0, #0
   162b4:	str	r0, [r4, #12]
   162b8:	str	r0, [r4]
   162bc:	pop	{r4, r5, r6, sl, fp, pc}

000162c0 <mcobject_destroy@@Base>:
   162c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   162c4:	add	fp, sp, #24
   162c8:	mov	r4, #0
   162cc:	cmp	r0, #0
   162d0:	beq	16358 <mcobject_destroy@@Base+0x98>
   162d4:	mov	r5, r0
   162d8:	ldr	r0, [r0]
   162dc:	mov	r8, r1
   162e0:	cmp	r0, #0
   162e4:	beq	1632c <mcobject_destroy@@Base+0x6c>
   162e8:	mov	r7, r0
   162ec:	ldr	r0, [r0, #12]
   162f0:	cmp	r0, #0
   162f4:	bne	162e8 <mcobject_destroy@@Base+0x28>
   162f8:	ldr	r0, [r7]
   162fc:	ldr	r6, [r7, #16]
   16300:	cmp	r0, #0
   16304:	beq	1630c <mcobject_destroy@@Base+0x4c>
   16308:	bl	11a9c <mycore_free@plt>
   1630c:	mov	r0, r7
   16310:	bl	11a9c <mycore_free@plt>
   16314:	cmp	r6, #0
   16318:	mov	r7, r6
   1631c:	bne	162f8 <mcobject_destroy@@Base+0x38>
   16320:	mov	r0, #0
   16324:	str	r0, [r5, #12]
   16328:	str	r0, [r5]
   1632c:	ldr	r0, [r5, #4]
   16330:	cmp	r0, #0
   16334:	beq	16344 <mcobject_destroy@@Base+0x84>
   16338:	bl	11a9c <mycore_free@plt>
   1633c:	mov	r0, #0
   16340:	str	r0, [r5, #4]
   16344:	cmp	r8, #0
   16348:	moveq	r0, r5
   1634c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   16350:	mov	r0, r5
   16354:	bl	11a9c <mycore_free@plt>
   16358:	mov	r0, r4
   1635c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016360 <mcobject_chunk_malloc@@Base>:
   16360:	push	{r4, r5, r6, sl, fp, lr}
   16364:	add	fp, sp, #16
   16368:	cmp	r1, #0
   1636c:	mov	r5, r0
   16370:	mov	r4, r1
   16374:	movne	r0, #0
   16378:	strne	r0, [r4]
   1637c:	ldr	r0, [r5]
   16380:	cmp	r0, #0
   16384:	ldrne	r0, [r0, #12]
   16388:	cmpne	r0, #0
   1638c:	bne	163e4 <mcobject_chunk_malloc@@Base+0x84>
   16390:	mov	r0, #1
   16394:	mov	r1, #20
   16398:	bl	11004 <mycore_calloc@plt>
   1639c:	cmp	r0, #0
   163a0:	beq	163f4 <mcobject_chunk_malloc@@Base+0x94>
   163a4:	mov	r6, r0
   163a8:	ldr	r0, [r5, #16]
   163ac:	ldr	r1, [r5, #20]
   163b0:	mul	r0, r1, r0
   163b4:	bl	119ac <mycore_malloc@plt>
   163b8:	cmp	r0, #0
   163bc:	str	r0, [r6]
   163c0:	beq	16408 <mcobject_chunk_malloc@@Base+0xa8>
   163c4:	ldr	r0, [r5, #20]
   163c8:	str	r0, [r6, #8]
   163cc:	ldr	r0, [r5]
   163d0:	cmp	r0, #0
   163d4:	strne	r0, [r6, #16]
   163d8:	strne	r6, [r0, #12]
   163dc:	str	r6, [r5]
   163e0:	pop	{r4, r5, r6, sl, fp, pc}
   163e4:	mov	r1, #0
   163e8:	str	r0, [r5]
   163ec:	str	r1, [r0, #4]
   163f0:	pop	{r4, r5, r6, sl, fp, pc}
   163f4:	cmp	r4, #0
   163f8:	movne	r0, #86	; 0x56
   163fc:	strne	r0, [r4]
   16400:	popne	{r4, r5, r6, sl, fp, pc}
   16404:	pop	{r4, r5, r6, sl, fp, pc}
   16408:	cmp	r4, #0
   1640c:	movne	r0, #87	; 0x57
   16410:	strne	r0, [r4]
   16414:	mov	r0, r6
   16418:	pop	{r4, r5, r6, sl, fp, lr}
   1641c:	b	11a9c <mycore_free@plt>

00016420 <mcobject_malloc@@Base>:
   16420:	push	{r4, r5, r6, sl, fp, lr}
   16424:	add	fp, sp, #16
   16428:	mov	r5, r0
   1642c:	ldr	r0, [r0, #12]
   16430:	mov	r4, r1
   16434:	cmp	r0, #0
   16438:	beq	16460 <mcobject_malloc@@Base+0x40>
   1643c:	cmp	r4, #0
   16440:	movne	r0, #0
   16444:	strne	r0, [r4]
   16448:	ldrne	r0, [r5, #12]
   1644c:	sub	r0, r0, #1
   16450:	str	r0, [r5, #12]
   16454:	ldr	r1, [r5, #4]
   16458:	ldr	r0, [r1, r0, lsl #2]
   1645c:	pop	{r4, r5, r6, sl, fp, pc}
   16460:	ldr	r6, [r5]
   16464:	cmp	r6, #0
   16468:	beq	16494 <mcobject_malloc@@Base+0x74>
   1646c:	ldmib	r6, {r0, r1}
   16470:	cmp	r0, r1
   16474:	bcc	164e4 <mcobject_malloc@@Base+0xc4>
   16478:	ldr	r6, [r6, #12]
   1647c:	cmp	r6, #0
   16480:	beq	16494 <mcobject_malloc@@Base+0x74>
   16484:	mov	r0, #0
   16488:	str	r6, [r5]
   1648c:	str	r0, [r6, #4]
   16490:	b	164e4 <mcobject_malloc@@Base+0xc4>
   16494:	mov	r0, #1
   16498:	mov	r1, #20
   1649c:	bl	11004 <mycore_calloc@plt>
   164a0:	cmp	r0, #0
   164a4:	beq	16508 <mcobject_malloc@@Base+0xe8>
   164a8:	mov	r6, r0
   164ac:	ldr	r0, [r5, #16]
   164b0:	ldr	r1, [r5, #20]
   164b4:	mul	r0, r1, r0
   164b8:	bl	119ac <mycore_malloc@plt>
   164bc:	cmp	r0, #0
   164c0:	str	r0, [r6]
   164c4:	beq	16510 <mcobject_malloc@@Base+0xf0>
   164c8:	ldr	r0, [r5, #20]
   164cc:	str	r0, [r6, #8]
   164d0:	ldr	r0, [r5]
   164d4:	cmp	r0, #0
   164d8:	strne	r0, [r6, #16]
   164dc:	strne	r6, [r0, #12]
   164e0:	str	r6, [r5]
   164e4:	cmp	r4, #0
   164e8:	movne	r0, #0
   164ec:	strne	r0, [r4]
   164f0:	ldm	r6, {r0, r1}
   164f4:	add	r2, r1, #1
   164f8:	str	r2, [r6, #4]
   164fc:	ldr	r2, [r5, #16]
   16500:	mla	r0, r2, r1, r0
   16504:	pop	{r4, r5, r6, sl, fp, pc}
   16508:	mov	r1, #86	; 0x56
   1650c:	b	1651c <mcobject_malloc@@Base+0xfc>
   16510:	mov	r0, r6
   16514:	bl	11a9c <mycore_free@plt>
   16518:	mov	r1, #87	; 0x57
   1651c:	cmp	r4, #0
   16520:	mov	r0, #0
   16524:	strne	r1, [r4]
   16528:	popne	{r4, r5, r6, sl, fp, pc}
   1652c:	pop	{r4, r5, r6, sl, fp, pc}

00016530 <mcobject_free@@Base>:
   16530:	push	{r4, r5, r6, sl, fp, lr}
   16534:	add	fp, sp, #16
   16538:	mov	r5, r1
   1653c:	ldr	r6, [r0, #8]
   16540:	ldr	r1, [r0, #12]
   16544:	mov	r4, r0
   16548:	cmp	r1, r6
   1654c:	bcs	16558 <mcobject_free@@Base+0x28>
   16550:	ldr	r0, [r4, #4]
   16554:	b	1657c <mcobject_free@@Base+0x4c>
   16558:	ldr	r0, [r4, #4]
   1655c:	lsl	r1, r6, #3
   16560:	bl	10da0 <mycore_realloc@plt>
   16564:	cmp	r0, #0
   16568:	moveq	r0, #88	; 0x58
   1656c:	popeq	{r4, r5, r6, sl, fp, pc}
   16570:	lsl	r1, r6, #1
   16574:	stmib	r4, {r0, r1}
   16578:	ldr	r1, [r4, #12]
   1657c:	str	r5, [r0, r1, lsl #2]
   16580:	add	r0, r1, #1
   16584:	str	r0, [r4, #12]
   16588:	mov	r0, #0
   1658c:	pop	{r4, r5, r6, sl, fp, pc}

00016590 <mcobject_async_create@@Base>:
   16590:	mov	r0, #1
   16594:	mov	r1, #72	; 0x48
   16598:	b	11004 <mycore_calloc@plt>

0001659c <mcobject_async_chunk_up@@Base>:
   1659c:	push	{r4, r5, fp, lr}
   165a0:	add	fp, sp, #8
   165a4:	mov	r4, #0
   165a8:	mov	r5, r0
   165ac:	str	r4, [r0, #40]	; 0x28
   165b0:	ldr	r0, [r0, #24]
   165b4:	ldr	r1, [r5, #32]
   165b8:	ldr	r0, [r0, r1, lsl #2]
   165bc:	cmp	r0, #0
   165c0:	beq	165cc <mcobject_async_chunk_up@@Base+0x30>
   165c4:	mov	r0, r4
   165c8:	pop	{r4, r5, fp, pc}
   165cc:	ldr	r0, [r5, #36]	; 0x24
   165d0:	mov	r1, #20
   165d4:	bl	11004 <mycore_calloc@plt>
   165d8:	ldr	r1, [r5, #24]
   165dc:	ldr	r2, [r5, #32]
   165e0:	str	r0, [r1, r2, lsl #2]
   165e4:	ldr	r0, [r5, #24]
   165e8:	ldr	r0, [r0, r2, lsl #2]
   165ec:	cmp	r0, #0
   165f0:	moveq	r4, #2
   165f4:	mov	r0, r4
   165f8:	pop	{r4, r5, fp, pc}

000165fc <mcobject_async_init@@Base>:
   165fc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16600:	add	fp, sp, #24
   16604:	mov	r4, r0
   16608:	mov	r0, #128	; 0x80
   1660c:	mov	r5, #0
   16610:	str	r0, [r4, #28]
   16614:	add	r0, r3, #4
   16618:	str	r5, [r4, #32]
   1661c:	str	r1, [r4, #36]	; 0x24
   16620:	stm	r4, {r2, r3}
   16624:	mov	r1, #4
   16628:	str	r0, [r4, #8]
   1662c:	mov	r0, #128	; 0x80
   16630:	bl	11004 <mycore_calloc@plt>
   16634:	cmp	r0, #0
   16638:	str	r0, [r4, #24]
   1663c:	moveq	r5, #2
   16640:	moveq	r0, r5
   16644:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   16648:	str	r5, [r4, #40]	; 0x28
   1664c:	ldr	r1, [r4, #32]
   16650:	ldr	r0, [r0, r1, lsl #2]
   16654:	cmp	r0, #0
   16658:	bne	16674 <mcobject_async_init@@Base+0x78>
   1665c:	ldr	r0, [r4, #36]	; 0x24
   16660:	mov	r1, #20
   16664:	bl	11004 <mycore_calloc@plt>
   16668:	ldr	r1, [r4, #24]
   1666c:	ldr	r2, [r4, #32]
   16670:	str	r0, [r1, r2, lsl #2]
   16674:	ldr	r0, [r4, #36]	; 0x24
   16678:	mov	r1, #4
   1667c:	mov	r5, #4
   16680:	str	r0, [r4, #16]
   16684:	bl	11004 <mycore_calloc@plt>
   16688:	cmp	r0, #0
   1668c:	str	r0, [r4, #12]
   16690:	moveq	r5, #3
   16694:	moveq	r0, r5
   16698:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   1669c:	mov	r6, #0
   166a0:	mov	r0, #64	; 0x40
   166a4:	mov	r1, #16
   166a8:	str	r6, [r4, #48]	; 0x30
   166ac:	str	r0, [r4, #52]	; 0x34
   166b0:	mov	r0, #64	; 0x40
   166b4:	bl	11004 <mycore_calloc@plt>
   166b8:	cmp	r0, #0
   166bc:	str	r0, [r4, #44]	; 0x2c
   166c0:	beq	1679c <mcobject_async_init@@Base+0x1a0>
   166c4:	ldr	r0, [r4, #52]	; 0x34
   166c8:	str	r6, [r4, #60]	; 0x3c
   166cc:	str	r0, [r4, #64]	; 0x40
   166d0:	lsl	r0, r0, #2
   166d4:	bl	119ac <mycore_malloc@plt>
   166d8:	cmp	r0, #0
   166dc:	str	r0, [r4, #56]	; 0x38
   166e0:	beq	1679c <mcobject_async_init@@Base+0x1a0>
   166e4:	ldr	r1, [r4, #24]
   166e8:	ldr	r0, [r4, #48]	; 0x30
   166ec:	mov	r8, #0
   166f0:	ldr	r1, [r1]
   166f4:	str	r8, [r4, #40]	; 0x28
   166f8:	str	r8, [r4, #20]
   166fc:	cmp	r1, #0
   16700:	movwne	r1, #1
   16704:	cmp	r0, #0
   16708:	str	r1, [r4, #32]
   1670c:	beq	16774 <mcobject_async_init@@Base+0x178>
   16710:	mov	r7, #0
   16714:	ldr	r5, [r4, #44]	; 0x2c
   16718:	mov	r1, r5
   1671c:	ldr	r2, [r1, r7, lsl #4]!
   16720:	cmp	r2, #0
   16724:	str	r8, [r1, #12]
   16728:	beq	16768 <mcobject_async_init@@Base+0x16c>
   1672c:	ldr	r0, [r4, #68]	; 0x44
   16730:	ldr	r9, [r4]
   16734:	bl	11694 <mcsync_lock@plt>
   16738:	mov	r6, #0
   1673c:	cmp	r0, #0
   16740:	bne	16760 <mcobject_async_init@@Base+0x164>
   16744:	mov	r0, r4
   16748:	mov	r1, r9
   1674c:	mov	r2, #0
   16750:	bl	11700 <mcobject_async_chunk_malloc_without_lock@plt>
   16754:	mov	r6, r0
   16758:	ldr	r0, [r4, #68]	; 0x44
   1675c:	bl	11b44 <mcsync_unlock@plt>
   16760:	str	r6, [r5, r7, lsl #4]
   16764:	ldr	r0, [r4, #48]	; 0x30
   16768:	add	r7, r7, #1
   1676c:	cmp	r7, r0
   16770:	bcc	16714 <mcobject_async_init@@Base+0x118>
   16774:	bl	10efc <mcsync_create@plt>
   16778:	cmp	r0, #0
   1677c:	str	r0, [r4, #68]	; 0x44
   16780:	moveq	r5, #1
   16784:	moveq	r0, r5
   16788:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   1678c:	bl	116a0 <mcsync_init@plt>
   16790:	mov	r5, r0
   16794:	cmp	r0, #0
   16798:	movwne	r5, #1
   1679c:	mov	r0, r5
   167a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000167a4 <mcobject_async_clean@@Base>:
   167a4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   167a8:	add	fp, sp, #24
   167ac:	ldr	r1, [r0, #24]
   167b0:	mov	r4, r0
   167b4:	ldr	r0, [r0, #48]	; 0x30
   167b8:	mov	r8, #0
   167bc:	ldr	r1, [r1]
   167c0:	str	r8, [r4, #40]	; 0x28
   167c4:	str	r8, [r4, #20]
   167c8:	cmp	r1, #0
   167cc:	movwne	r1, #1
   167d0:	cmp	r0, #0
   167d4:	str	r1, [r4, #32]
   167d8:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   167dc:	mov	r7, #0
   167e0:	ldr	r5, [r4, #44]	; 0x2c
   167e4:	mov	r1, r5
   167e8:	ldr	r2, [r1, r7, lsl #4]!
   167ec:	cmp	r2, #0
   167f0:	str	r8, [r1, #12]
   167f4:	beq	16834 <mcobject_async_clean@@Base+0x90>
   167f8:	ldr	r0, [r4, #68]	; 0x44
   167fc:	ldr	r9, [r4]
   16800:	bl	11694 <mcsync_lock@plt>
   16804:	mov	r6, #0
   16808:	cmp	r0, #0
   1680c:	bne	1682c <mcobject_async_clean@@Base+0x88>
   16810:	mov	r0, r4
   16814:	mov	r1, r9
   16818:	mov	r2, #0
   1681c:	bl	11700 <mcobject_async_chunk_malloc_without_lock@plt>
   16820:	mov	r6, r0
   16824:	ldr	r0, [r4, #68]	; 0x44
   16828:	bl	11b44 <mcsync_unlock@plt>
   1682c:	str	r6, [r5, r7, lsl #4]
   16830:	ldr	r0, [r4, #48]	; 0x30
   16834:	add	r7, r7, #1
   16838:	cmp	r7, r0
   1683c:	bcc	167e0 <mcobject_async_clean@@Base+0x3c>
   16840:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00016844 <mcobject_async_chunk_malloc@@Base>:
   16844:	push	{r4, r5, r6, sl, fp, lr}
   16848:	add	fp, sp, #16
   1684c:	mov	r5, r0
   16850:	ldr	r0, [r0, #68]	; 0x44
   16854:	mov	r4, r2
   16858:	mov	r6, r1
   1685c:	bl	11694 <mcsync_lock@plt>
   16860:	cmp	r0, #0
   16864:	beq	1687c <mcobject_async_chunk_malloc@@Base+0x38>
   16868:	cmp	r4, #0
   1686c:	movne	r0, #1
   16870:	strne	r0, [r4]
   16874:	mov	r0, #0
   16878:	pop	{r4, r5, r6, sl, fp, pc}
   1687c:	mov	r0, r5
   16880:	mov	r1, r6
   16884:	mov	r2, r4
   16888:	bl	11700 <mcobject_async_chunk_malloc_without_lock@plt>
   1688c:	mov	r4, r0
   16890:	ldr	r0, [r5, #68]	; 0x44
   16894:	bl	11b44 <mcsync_unlock@plt>
   16898:	mov	r0, r4
   1689c:	pop	{r4, r5, r6, sl, fp, pc}

000168a0 <mcobject_async_destroy@@Base>:
   168a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   168a4:	add	fp, sp, #24
   168a8:	cmp	r0, #0
   168ac:	moveq	r6, #0
   168b0:	moveq	r0, r6
   168b4:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   168b8:	mov	r4, r0
   168bc:	ldr	r0, [r0, #44]	; 0x2c
   168c0:	mov	r8, r1
   168c4:	cmp	r0, #0
   168c8:	beq	16920 <mcobject_async_destroy@@Base+0x80>
   168cc:	ldr	r1, [r4, #48]	; 0x30
   168d0:	cmp	r1, #0
   168d4:	beq	1691c <mcobject_async_destroy@@Base+0x7c>
   168d8:	mov	r5, #0
   168dc:	add	r0, r0, r5, lsl #4
   168e0:	ldr	r0, [r0, #4]
   168e4:	cmp	r0, #0
   168e8:	bne	16904 <mcobject_async_destroy@@Base+0x64>
   168ec:	b	1690c <mcobject_async_destroy@@Base+0x6c>
   168f0:	ldr	r0, [r4, #44]	; 0x2c
   168f4:	add	r0, r0, r5, lsl #4
   168f8:	ldr	r0, [r0, #4]
   168fc:	cmp	r0, #0
   16900:	beq	1690c <mcobject_async_destroy@@Base+0x6c>
   16904:	bl	11a9c <mycore_free@plt>
   16908:	ldr	r1, [r4, #48]	; 0x30
   1690c:	add	r5, r5, #1
   16910:	cmp	r5, r1
   16914:	bcc	168f0 <mcobject_async_destroy@@Base+0x50>
   16918:	ldr	r0, [r4, #44]	; 0x2c
   1691c:	bl	11a9c <mycore_free@plt>
   16920:	ldr	r0, [r4, #56]	; 0x38
   16924:	cmp	r0, #0
   16928:	beq	16930 <mcobject_async_destroy@@Base+0x90>
   1692c:	bl	11a9c <mycore_free@plt>
   16930:	ldr	r0, [r4, #24]
   16934:	cmp	r0, #0
   16938:	beq	169ec <mcobject_async_destroy@@Base+0x14c>
   1693c:	ldr	r2, [r4, #32]
   16940:	cmp	r2, #0
   16944:	beq	169e8 <mcobject_async_destroy@@Base+0x148>
   16948:	mov	r6, #0
   1694c:	mov	r1, r0
   16950:	ldr	r3, [r1, r6, lsl #2]!
   16954:	cmp	r3, #0
   16958:	bne	16974 <mcobject_async_destroy@@Base+0xd4>
   1695c:	b	169d8 <mcobject_async_destroy@@Base+0x138>
   16960:	ldr	r0, [r4, #24]
   16964:	mov	r1, r0
   16968:	ldr	r3, [r1, r6, lsl #2]!
   1696c:	cmp	r3, #0
   16970:	beq	169d8 <mcobject_async_destroy@@Base+0x138>
   16974:	ldr	r2, [r4, #36]	; 0x24
   16978:	cmp	r2, #0
   1697c:	beq	169cc <mcobject_async_destroy@@Base+0x12c>
   16980:	mov	r7, #1
   16984:	mov	r5, #0
   16988:	ldr	r1, [r3, r5]
   1698c:	cmp	r1, #0
   16990:	bne	169b0 <mcobject_async_destroy@@Base+0x110>
   16994:	b	169c0 <mcobject_async_destroy@@Base+0x120>
   16998:	ldr	r3, [r1]
   1699c:	add	r5, r5, #20
   169a0:	add	r7, r7, #1
   169a4:	ldr	r1, [r3, r5]
   169a8:	cmp	r1, #0
   169ac:	beq	169c0 <mcobject_async_destroy@@Base+0x120>
   169b0:	mov	r0, r1
   169b4:	bl	11a9c <mycore_free@plt>
   169b8:	ldr	r0, [r4, #24]
   169bc:	ldr	r2, [r4, #36]	; 0x24
   169c0:	add	r1, r0, r6, lsl #2
   169c4:	cmp	r7, r2
   169c8:	bcc	16998 <mcobject_async_destroy@@Base+0xf8>
   169cc:	ldr	r0, [r1]
   169d0:	bl	11a9c <mycore_free@plt>
   169d4:	ldr	r2, [r4, #32]
   169d8:	add	r6, r6, #1
   169dc:	cmp	r6, r2
   169e0:	bcc	16960 <mcobject_async_destroy@@Base+0xc0>
   169e4:	ldr	r0, [r4, #24]
   169e8:	bl	11a9c <mycore_free@plt>
   169ec:	ldr	r0, [r4, #12]
   169f0:	cmp	r0, #0
   169f4:	beq	169fc <mcobject_async_destroy@@Base+0x15c>
   169f8:	bl	11a9c <mycore_free@plt>
   169fc:	ldr	r0, [r4, #68]	; 0x44
   16a00:	mov	r1, #1
   16a04:	bl	111fc <mcsync_destroy@plt>
   16a08:	vmov.i32	q8, #0	; 0x00000000
   16a0c:	add	r0, r4, #48	; 0x30
   16a10:	mov	r1, r4
   16a14:	cmp	r8, #0
   16a18:	mov	r6, #0
   16a1c:	vst1.32	{d16-d17}, [r0]
   16a20:	add	r0, r4, #32
   16a24:	str	r6, [r4, #68]	; 0x44
   16a28:	vst1.32	{d16-d17}, [r0]
   16a2c:	add	r0, r4, #16
   16a30:	vst1.32	{d16-d17}, [r0]
   16a34:	mov	r0, #64	; 0x40
   16a38:	vst1.32	{d16-d17}, [r1], r0
   16a3c:	moveq	r0, r4
   16a40:	str	r6, [r1]
   16a44:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   16a48:	mov	r0, r4
   16a4c:	bl	11a9c <mycore_free@plt>
   16a50:	mov	r0, r6
   16a54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016a58 <mcobject_async_mem_malloc@@Base>:
   16a58:	push	{r4, r5, r6, sl, fp, lr}
   16a5c:	add	fp, sp, #16
   16a60:	mov	r5, r0
   16a64:	ldr	r0, [r1]
   16a68:	mov	r6, r2
   16a6c:	mov	r4, r1
   16a70:	cmp	r0, #0
   16a74:	beq	16a9c <mcobject_async_mem_malloc@@Base+0x44>
   16a78:	ldr	r1, [r4, #8]
   16a7c:	cmp	r1, r6
   16a80:	bcs	16abc <mcobject_async_mem_malloc@@Base+0x64>
   16a84:	bl	11a9c <mycore_free@plt>
   16a88:	ldr	r0, [r5]
   16a8c:	add	r1, r0, r6
   16a90:	str	r1, [r4, #8]
   16a94:	ldr	r0, [r5, #8]
   16a98:	b	16ab0 <mcobject_async_mem_malloc@@Base+0x58>
   16a9c:	ldr	r0, [r5]
   16aa0:	cmp	r0, r6
   16aa4:	addcc	r0, r0, r6
   16aa8:	str	r0, [r4, #8]
   16aac:	ldr	r1, [r5, #8]
   16ab0:	mul	r0, r0, r1
   16ab4:	bl	119ac <mycore_malloc@plt>
   16ab8:	str	r0, [r4]
   16abc:	clz	r0, r0
   16ac0:	mov	r1, #0
   16ac4:	lsr	r0, r0, #5
   16ac8:	str	r1, [r4, #4]
   16acc:	lsl	r0, r0, #1
   16ad0:	pop	{r4, r5, r6, sl, fp, pc}

00016ad4 <mcobject_async_chunk_malloc_without_lock@@Base>:
   16ad4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ad8:	add	fp, sp, #28
   16adc:	sub	sp, sp, #4
   16ae0:	cmp	r2, #0
   16ae4:	mov	r5, r0
   16ae8:	mov	r9, r2
   16aec:	mov	r8, r1
   16af0:	movne	r0, #0
   16af4:	strne	r0, [r9]
   16af8:	ldr	r0, [r5, #20]
   16afc:	cmp	r0, #0
   16b00:	beq	16b38 <mcobject_async_chunk_malloc_without_lock@@Base+0x64>
   16b04:	sub	r0, r0, #1
   16b08:	mov	r3, #0
   16b0c:	str	r0, [r5, #20]
   16b10:	ldr	r1, [r5, #12]
   16b14:	ldr	r2, [r1, r0, lsl #2]
   16b18:	str	r3, [r2, #12]
   16b1c:	str	r3, [r2, #4]
   16b20:	ldr	r2, [r1, r0, lsl #2]
   16b24:	str	r3, [r2, #16]
   16b28:	ldr	r7, [r1, r0, lsl #2]
   16b2c:	mov	r0, r7
   16b30:	sub	sp, fp, #28
   16b34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b38:	ldr	r1, [r5, #36]	; 0x24
   16b3c:	ldr	r0, [r5, #40]	; 0x28
   16b40:	cmp	r0, r1
   16b44:	bcs	16b54 <mcobject_async_chunk_malloc_without_lock@@Base+0x80>
   16b48:	ldr	r7, [r5, #24]
   16b4c:	ldr	r1, [r5, #32]
   16b50:	b	16bf4 <mcobject_async_chunk_malloc_without_lock@@Base+0x120>
   16b54:	ldr	r4, [r5, #28]
   16b58:	ldr	r1, [r5, #32]
   16b5c:	cmp	r1, r4
   16b60:	bcs	16b6c <mcobject_async_chunk_malloc_without_lock@@Base+0x98>
   16b64:	ldr	r7, [r5, #24]
   16b68:	b	16bac <mcobject_async_chunk_malloc_without_lock@@Base+0xd8>
   16b6c:	ldr	r0, [r5, #24]
   16b70:	lsl	r1, r4, #3
   16b74:	bl	10da0 <mycore_realloc@plt>
   16b78:	cmp	r0, #0
   16b7c:	beq	16ca0 <mcobject_async_chunk_malloc_without_lock@@Base+0x1cc>
   16b80:	ldr	r1, [r5, #32]
   16b84:	lsl	r4, r4, #1
   16b88:	mov	r7, r0
   16b8c:	add	r0, r0, r1, lsl #2
   16b90:	sub	r1, r4, r1
   16b94:	lsl	r2, r1, #2
   16b98:	mov	r1, #0
   16b9c:	bl	116d0 <memset@plt>
   16ba0:	str	r7, [r5, #24]
   16ba4:	str	r4, [r5, #28]
   16ba8:	ldr	r1, [r5, #32]
   16bac:	mov	r0, #0
   16bb0:	str	r0, [r5, #40]	; 0x28
   16bb4:	ldr	r2, [r7, r1, lsl #2]
   16bb8:	cmp	r2, #0
   16bbc:	bne	16bec <mcobject_async_chunk_malloc_without_lock@@Base+0x118>
   16bc0:	ldr	r0, [r5, #36]	; 0x24
   16bc4:	mov	r1, #20
   16bc8:	bl	11004 <mycore_calloc@plt>
   16bcc:	ldr	r2, [r5, #24]
   16bd0:	ldr	r1, [r5, #32]
   16bd4:	str	r0, [r2, r1, lsl #2]
   16bd8:	ldr	r7, [r5, #24]
   16bdc:	ldr	r0, [r7, r1, lsl #2]
   16be0:	cmp	r0, #0
   16be4:	beq	16ca0 <mcobject_async_chunk_malloc_without_lock@@Base+0x1cc>
   16be8:	ldr	r0, [r5, #40]	; 0x28
   16bec:	add	r1, r1, #1
   16bf0:	str	r1, [r5, #32]
   16bf4:	add	r1, r7, r1, lsl #2
   16bf8:	add	r4, r0, r0, lsl #2
   16bfc:	ldr	sl, [r1, #-4]
   16c00:	add	r1, r0, #1
   16c04:	str	r1, [r5, #40]	; 0x28
   16c08:	mov	r1, #0
   16c0c:	mov	r7, sl
   16c10:	ldr	r0, [r7, r4, lsl #2]!
   16c14:	cmp	r0, #0
   16c18:	str	r1, [r7, #12]
   16c1c:	str	r1, [r7, #16]
   16c20:	beq	16c4c <mcobject_async_chunk_malloc_without_lock@@Base+0x178>
   16c24:	add	r6, sl, r4, lsl #2
   16c28:	ldr	r1, [r6, #8]!
   16c2c:	cmp	r1, r8
   16c30:	bcs	16c70 <mcobject_async_chunk_malloc_without_lock@@Base+0x19c>
   16c34:	bl	11a9c <mycore_free@plt>
   16c38:	ldr	r0, [r5]
   16c3c:	add	r1, r0, r8
   16c40:	str	r1, [r6]
   16c44:	ldr	r0, [r5, #8]
   16c48:	b	16c64 <mcobject_async_chunk_malloc_without_lock@@Base+0x190>
   16c4c:	ldr	r0, [r5]
   16c50:	add	r1, sl, r4, lsl #2
   16c54:	cmp	r0, r8
   16c58:	addcc	r0, r0, r8
   16c5c:	str	r0, [r1, #8]
   16c60:	ldr	r1, [r5, #8]
   16c64:	mul	r0, r0, r1
   16c68:	bl	119ac <mycore_malloc@plt>
   16c6c:	str	r0, [r7]
   16c70:	cmp	r9, #0
   16c74:	add	r1, sl, r4, lsl #2
   16c78:	mov	r2, #0
   16c7c:	str	r2, [r1, #4]
   16c80:	beq	16c94 <mcobject_async_chunk_malloc_without_lock@@Base+0x1c0>
   16c84:	clz	r0, r0
   16c88:	lsr	r0, r0, #5
   16c8c:	lsl	r0, r0, #1
   16c90:	str	r0, [r9]
   16c94:	mov	r0, r7
   16c98:	sub	sp, fp, #28
   16c9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ca0:	mov	r7, #0
   16ca4:	cmp	r9, #0
   16ca8:	beq	16c94 <mcobject_async_chunk_malloc_without_lock@@Base+0x1c0>
   16cac:	mov	r0, #2
   16cb0:	b	16c90 <mcobject_async_chunk_malloc_without_lock@@Base+0x1bc>

00016cb4 <mcobject_async_node_add@@Base>:
   16cb4:	push	{r4, r5, r6, r7, fp, lr}
   16cb8:	add	fp, sp, #16
   16cbc:	mov	r4, r0
   16cc0:	ldr	r0, [r0, #68]	; 0x44
   16cc4:	mov	r5, r1
   16cc8:	bl	11694 <mcsync_lock@plt>
   16ccc:	cmp	r5, #0
   16cd0:	movne	r0, #0
   16cd4:	strne	r0, [r5]
   16cd8:	ldr	r0, [r4, #60]	; 0x3c
   16cdc:	cmp	r0, #0
   16ce0:	beq	16cf8 <mcobject_async_node_add@@Base+0x44>
   16ce4:	sub	r0, r0, #1
   16ce8:	str	r0, [r4, #60]	; 0x3c
   16cec:	ldr	r1, [r4, #56]	; 0x38
   16cf0:	ldr	r6, [r1, r0, lsl #2]
   16cf4:	b	16d10 <mcobject_async_node_add@@Base+0x5c>
   16cf8:	ldr	r6, [r4, #48]	; 0x30
   16cfc:	ldr	r0, [r4, #52]	; 0x34
   16d00:	cmp	r6, r0
   16d04:	bcs	16d84 <mcobject_async_node_add@@Base+0xd0>
   16d08:	add	r0, r6, #1
   16d0c:	str	r0, [r4, #48]	; 0x30
   16d10:	ldr	r1, [r4]
   16d14:	ldr	r7, [r4, #44]	; 0x2c
   16d18:	mov	r0, r4
   16d1c:	mov	r2, r5
   16d20:	bl	11700 <mcobject_async_chunk_malloc_without_lock@plt>
   16d24:	str	r0, [r7, r6, lsl #4]
   16d28:	cmp	r5, #0
   16d2c:	ldrne	r1, [r5]
   16d30:	cmpne	r1, #0
   16d34:	bne	16d84 <mcobject_async_node_add@@Base+0xd0>
   16d38:	mov	r1, #0
   16d3c:	add	r7, r7, r6, lsl #4
   16d40:	str	r1, [r0, #12]
   16d44:	str	r1, [r0, #16]
   16d48:	str	r1, [r7, #12]
   16d4c:	ldr	r0, [r4]
   16d50:	str	r0, [r7, #8]
   16d54:	lsl	r0, r0, #2
   16d58:	bl	119ac <mycore_malloc@plt>
   16d5c:	cmp	r0, #0
   16d60:	str	r0, [r7, #4]
   16d64:	beq	16d78 <mcobject_async_node_add@@Base+0xc4>
   16d68:	ldr	r0, [r4, #68]	; 0x44
   16d6c:	bl	11b44 <mcsync_unlock@plt>
   16d70:	mov	r0, r6
   16d74:	pop	{r4, r5, r6, r7, fp, pc}
   16d78:	cmp	r5, #0
   16d7c:	movne	r0, #3
   16d80:	strne	r0, [r5]
   16d84:	ldr	r0, [r4, #68]	; 0x44
   16d88:	bl	11b44 <mcsync_unlock@plt>
   16d8c:	mov	r6, #0
   16d90:	mov	r0, r6
   16d94:	pop	{r4, r5, r6, r7, fp, pc}

00016d98 <mcobject_async_node_clean@@Base>:
   16d98:	ldr	r2, [r0, #48]	; 0x30
   16d9c:	cmp	r2, r1
   16da0:	bls	16dec <mcobject_async_node_clean@@Base+0x54>
   16da4:	ldr	ip, [r0, #44]	; 0x2c
   16da8:	mov	r3, #0
   16dac:	mov	r0, ip
   16db0:	ldr	r2, [r0, r1, lsl #4]!
   16db4:	cmp	r2, #0
   16db8:	str	r3, [r0, #12]!
   16dbc:	bxeq	lr
   16dc0:	ldr	r3, [r2, #16]
   16dc4:	cmp	r3, #0
   16dc8:	beq	16de0 <mcobject_async_node_clean@@Base+0x48>
   16dcc:	mov	r2, r3
   16dd0:	ldr	r3, [r3, #16]
   16dd4:	cmp	r3, #0
   16dd8:	bne	16dcc <mcobject_async_node_clean@@Base+0x34>
   16ddc:	str	r2, [ip, r1, lsl #4]
   16de0:	mov	r1, #0
   16de4:	str	r1, [r2, #4]
   16de8:	str	r1, [r0]
   16dec:	bx	lr

00016df0 <mcobject_async_node_all_clean@@Base>:
   16df0:	push	{r4, sl, fp, lr}
   16df4:	add	fp, sp, #8
   16df8:	ldr	ip, [r0, #48]	; 0x30
   16dfc:	cmp	ip, #0
   16e00:	popeq	{r4, sl, fp, pc}
   16e04:	ldr	r1, [r0, #44]	; 0x2c
   16e08:	mov	lr, #0
   16e0c:	mov	r3, #0
   16e10:	mov	r0, r1
   16e14:	ldr	r2, [r0, r3, lsl #4]!
   16e18:	str	lr, [r0, #12]!
   16e1c:	cmp	r2, #0
   16e20:	beq	16e4c <mcobject_async_node_all_clean@@Base+0x5c>
   16e24:	ldr	r4, [r2, #16]
   16e28:	cmp	r4, #0
   16e2c:	beq	16e44 <mcobject_async_node_all_clean@@Base+0x54>
   16e30:	mov	r2, r4
   16e34:	ldr	r4, [r4, #16]
   16e38:	cmp	r4, #0
   16e3c:	bne	16e30 <mcobject_async_node_all_clean@@Base+0x40>
   16e40:	str	r2, [r1, r3, lsl #4]
   16e44:	str	lr, [r2, #4]
   16e48:	str	lr, [r0]
   16e4c:	add	r3, r3, #1
   16e50:	cmp	r3, ip
   16e54:	bcc	16e10 <mcobject_async_node_all_clean@@Base+0x20>
   16e58:	pop	{r4, sl, fp, pc}

00016e5c <mcobject_async_node_delete@@Base>:
   16e5c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16e60:	add	fp, sp, #24
   16e64:	mov	r4, r0
   16e68:	ldr	r0, [r0, #68]	; 0x44
   16e6c:	mov	r5, r1
   16e70:	bl	11694 <mcsync_lock@plt>
   16e74:	ldr	r0, [r4, #48]	; 0x30
   16e78:	cmp	r0, r5
   16e7c:	bls	16f64 <mcobject_async_node_delete@@Base+0x108>
   16e80:	ldr	r8, [r4, #44]	; 0x2c
   16e84:	mov	r9, r8
   16e88:	ldr	r0, [r9, r5, lsl #4]!
   16e8c:	mov	r7, r0
   16e90:	ldr	r0, [r0, #12]
   16e94:	cmp	r0, #0
   16e98:	bne	16e8c <mcobject_async_node_delete@@Base+0x30>
   16e9c:	cmp	r7, #0
   16ea0:	beq	16ef8 <mcobject_async_node_delete@@Base+0x9c>
   16ea4:	ldr	r1, [r4, #20]
   16ea8:	ldr	r6, [r4, #16]
   16eac:	cmp	r1, r6
   16eb0:	bcs	16ebc <mcobject_async_node_delete@@Base+0x60>
   16eb4:	ldr	r0, [r4, #12]
   16eb8:	b	16ee0 <mcobject_async_node_delete@@Base+0x84>
   16ebc:	ldr	r0, [r4, #12]
   16ec0:	lsl	r1, r6, #3
   16ec4:	bl	10da0 <mycore_realloc@plt>
   16ec8:	cmp	r0, #0
   16ecc:	beq	16f64 <mcobject_async_node_delete@@Base+0x108>
   16ed0:	lsl	r1, r6, #1
   16ed4:	str	r0, [r4, #12]
   16ed8:	str	r1, [r4, #16]
   16edc:	ldr	r1, [r4, #20]
   16ee0:	str	r7, [r0, r1, lsl #2]
   16ee4:	add	r1, r1, #1
   16ee8:	str	r1, [r4, #20]
   16eec:	ldr	r7, [r7, #16]
   16ef0:	cmp	r7, #0
   16ef4:	bne	16ea8 <mcobject_async_node_delete@@Base+0x4c>
   16ef8:	add	r0, r8, r5, lsl #4
   16efc:	ldr	r0, [r0, #4]
   16f00:	cmp	r0, #0
   16f04:	beq	16f0c <mcobject_async_node_delete@@Base+0xb0>
   16f08:	bl	11a9c <mycore_free@plt>
   16f0c:	vmov.i32	q8, #0	; 0x00000000
   16f10:	vst1.32	{d16-d17}, [r9]
   16f14:	ldr	r0, [r4, #60]	; 0x3c
   16f18:	ldr	r6, [r4, #64]	; 0x40
   16f1c:	cmp	r0, r6
   16f20:	bcc	16f40 <mcobject_async_node_delete@@Base+0xe4>
   16f24:	ldr	r0, [r4, #56]	; 0x38
   16f28:	lsl	r1, r6, #2
   16f2c:	bl	10da0 <mycore_realloc@plt>
   16f30:	cmp	r0, #0
   16f34:	strne	r0, [r4, #56]	; 0x38
   16f38:	lslne	r0, r6, #1
   16f3c:	strne	r0, [r4, #64]	; 0x40
   16f40:	ldr	r0, [r4, #56]	; 0x38
   16f44:	ldr	r1, [r4, #60]	; 0x3c
   16f48:	str	r5, [r0, r1, lsl #2]
   16f4c:	ldr	r1, [r4, #60]	; 0x3c
   16f50:	ldr	r0, [r4, #68]	; 0x44
   16f54:	add	r1, r1, #1
   16f58:	str	r1, [r4, #60]	; 0x3c
   16f5c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   16f60:	b	11b44 <mcsync_unlock@plt>
   16f64:	ldr	r0, [r4, #68]	; 0x44
   16f68:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   16f6c:	b	11b44 <mcsync_unlock@plt>

00016f70 <mcobject_async_malloc@@Base>:
   16f70:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16f74:	add	fp, sp, #24
   16f78:	sub	sp, sp, #8
   16f7c:	ldr	r7, [r0, #44]	; 0x2c
   16f80:	mov	r6, r0
   16f84:	mov	r5, r1
   16f88:	mov	r4, r2
   16f8c:	add	r0, r7, r1, lsl #4
   16f90:	mov	r1, r0
   16f94:	ldr	r2, [r1, #12]!
   16f98:	cmp	r2, #0
   16f9c:	beq	16fc8 <mcobject_async_malloc@@Base+0x58>
   16fa0:	cmp	r4, #0
   16fa4:	movne	r2, #0
   16fa8:	strne	r2, [r4]
   16fac:	ldrne	r2, [r1]
   16fb0:	sub	r2, r2, #1
   16fb4:	str	r2, [r1]
   16fb8:	ldr	r0, [r0, #4]
   16fbc:	ldr	r0, [r0, r2, lsl #2]
   16fc0:	sub	sp, fp, #24
   16fc4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16fc8:	ldr	r0, [r7, r5, lsl #4]
   16fcc:	ldmib	r0, {r1, r2}
   16fd0:	cmp	r1, r2
   16fd4:	bcc	16ff0 <mcobject_async_malloc@@Base+0x80>
   16fd8:	ldr	r0, [r0, #12]
   16fdc:	cmp	r0, #0
   16fe0:	beq	17028 <mcobject_async_malloc@@Base+0xb8>
   16fe4:	mov	r1, #0
   16fe8:	str	r0, [r7, r5, lsl #4]
   16fec:	str	r1, [r0, #4]
   16ff0:	cmp	r4, #0
   16ff4:	movne	r0, #0
   16ff8:	strne	r0, [r4]
   16ffc:	ldr	r0, [r7, r5, lsl #4]
   17000:	ldm	r0, {r1, r2}
   17004:	ldr	r3, [r6, #8]
   17008:	mul	r2, r3, r2
   1700c:	str	r5, [r1, r2]!
   17010:	ldr	r2, [r0, #4]
   17014:	add	r2, r2, #1
   17018:	str	r2, [r0, #4]
   1701c:	add	r0, r1, #4
   17020:	sub	sp, fp, #24
   17024:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17028:	ldr	r0, [r6, #68]	; 0x44
   1702c:	ldr	r8, [r6]
   17030:	bl	11694 <mcsync_lock@plt>
   17034:	cmp	r0, #0
   17038:	beq	17048 <mcobject_async_malloc@@Base+0xd8>
   1703c:	mov	r0, #1
   17040:	str	r0, [sp, #4]
   17044:	b	17070 <mcobject_async_malloc@@Base+0x100>
   17048:	add	r2, sp, #4
   1704c:	mov	r0, r6
   17050:	mov	r1, r8
   17054:	bl	11700 <mcobject_async_chunk_malloc_without_lock@plt>
   17058:	mov	r8, r0
   1705c:	ldr	r0, [r6, #68]	; 0x44
   17060:	bl	11b44 <mcsync_unlock@plt>
   17064:	ldr	r0, [sp, #4]
   17068:	cmp	r0, #0
   1706c:	beq	17084 <mcobject_async_malloc@@Base+0x114>
   17070:	cmp	r4, #0
   17074:	strne	r0, [r4]
   17078:	mov	r0, #0
   1707c:	sub	sp, fp, #24
   17080:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17084:	ldr	r0, [r7, r5, lsl #4]
   17088:	str	r0, [r8, #16]
   1708c:	str	r8, [r0, #12]
   17090:	str	r8, [r7, r5, lsl #4]
   17094:	b	16ff0 <mcobject_async_malloc@@Base+0x80>

00017098 <mcobject_async_free@@Base>:
   17098:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1709c:	add	fp, sp, #24
   170a0:	mov	r4, r1
   170a4:	ldr	r3, [r0, #48]	; 0x30
   170a8:	mov	r1, r0
   170ac:	mov	r0, #5
   170b0:	ldr	r2, [r4, #-4]
   170b4:	cmp	r2, r3
   170b8:	popcs	{r4, r5, r6, r7, r8, sl, fp, pc}
   170bc:	ldr	r0, [r1, #44]	; 0x2c
   170c0:	add	r5, r0, r2, lsl #4
   170c4:	ldr	r1, [r5, #12]!
   170c8:	mov	r7, r5
   170cc:	sub	r8, r5, #8
   170d0:	ldr	r6, [r7, #-4]!
   170d4:	cmp	r1, r6
   170d8:	bcs	170e4 <mcobject_async_free@@Base+0x4c>
   170dc:	ldr	r0, [r8]
   170e0:	b	1710c <mcobject_async_free@@Base+0x74>
   170e4:	ldr	r0, [r8]
   170e8:	lsl	r1, r6, #3
   170ec:	bl	10da0 <mycore_realloc@plt>
   170f0:	cmp	r0, #0
   170f4:	moveq	r0, #6
   170f8:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   170fc:	lsl	r1, r6, #1
   17100:	str	r0, [r8]
   17104:	str	r1, [r7]
   17108:	ldr	r1, [r5]
   1710c:	str	r4, [r0, r1, lsl #2]
   17110:	add	r0, r1, #1
   17114:	str	r0, [r5]
   17118:	mov	r0, #0
   1711c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017120 <mcsimple_create@@Base>:
   17120:	mov	r0, #1
   17124:	mov	r1, #28
   17128:	b	11004 <mycore_calloc@plt>

0001712c <mcsimple_init@@Base>:
   1712c:	push	{r4, r5, r6, sl, fp, lr}
   17130:	add	fp, sp, #16
   17134:	mov	r4, r0
   17138:	mov	r0, #0
   1713c:	mov	r5, r3
   17140:	mov	r6, r2
   17144:	str	r3, [r4]
   17148:	str	r1, [r4, #8]
   1714c:	str	r0, [r4, #12]
   17150:	str	r0, [r4, #16]
   17154:	mov	r0, r1
   17158:	mov	r1, #4
   1715c:	bl	11004 <mycore_calloc@plt>
   17160:	cmp	r0, #0
   17164:	str	r0, [r4, #4]
   17168:	beq	171ec <mcsimple_init@@Base+0xc0>
   1716c:	mul	r1, r5, r6
   17170:	str	r1, [r4, #20]
   17174:	ldr	r6, [r4, #8]
   17178:	ldr	r5, [r4, #12]
   1717c:	cmp	r5, r6
   17180:	bcc	171bc <mcsimple_init@@Base+0x90>
   17184:	lsl	r1, r6, #2
   17188:	bl	10da0 <mycore_realloc@plt>
   1718c:	cmp	r0, #0
   17190:	beq	171ec <mcsimple_init@@Base+0xc0>
   17194:	str	r0, [r4, #4]
   17198:	add	r6, r6, #128	; 0x80
   1719c:	add	r0, r0, r5, lsl #2
   171a0:	ldr	r1, [r4, #8]
   171a4:	sub	r1, r6, r1
   171a8:	lsl	r2, r1, #2
   171ac:	mov	r1, #0
   171b0:	bl	116d0 <memset@plt>
   171b4:	str	r6, [r4, #8]
   171b8:	ldr	r0, [r4, #4]
   171bc:	mov	r1, #0
   171c0:	str	r1, [r4, #24]
   171c4:	ldr	r0, [r0, r5, lsl #2]
   171c8:	cmp	r0, #0
   171cc:	popne	{r4, r5, r6, sl, fp, pc}
   171d0:	ldr	r1, [r4, #16]
   171d4:	ldr	r0, [r4, #20]
   171d8:	add	r1, r1, #1
   171dc:	str	r1, [r4, #16]
   171e0:	bl	119ac <mycore_malloc@plt>
   171e4:	ldr	r1, [r4, #4]
   171e8:	str	r0, [r1, r5, lsl #2]
   171ec:	pop	{r4, r5, r6, sl, fp, pc}

000171f0 <mcsimple_init_list_entries@@Base>:
   171f0:	push	{r4, r5, r6, sl, fp, lr}
   171f4:	add	fp, sp, #16
   171f8:	mov	r5, r0
   171fc:	ldr	r6, [r0, #8]
   17200:	ldr	r0, [r0, #12]
   17204:	mov	r4, r1
   17208:	cmp	r0, r6
   1720c:	bcc	1724c <mcsimple_init_list_entries@@Base+0x5c>
   17210:	ldr	r0, [r5, #4]
   17214:	lsl	r1, r6, #2
   17218:	bl	10da0 <mycore_realloc@plt>
   1721c:	cmp	r0, #0
   17220:	moveq	r0, #0
   17224:	popeq	{r4, r5, r6, sl, fp, pc}
   17228:	str	r0, [r5, #4]
   1722c:	add	r6, r6, #128	; 0x80
   17230:	add	r0, r0, r4, lsl #2
   17234:	ldr	r1, [r5, #8]
   17238:	sub	r1, r6, r1
   1723c:	lsl	r2, r1, #2
   17240:	mov	r1, #0
   17244:	bl	116d0 <memset@plt>
   17248:	str	r6, [r5, #8]
   1724c:	mov	r0, #0
   17250:	str	r0, [r5, #24]
   17254:	ldr	r0, [r5, #4]
   17258:	ldr	r0, [r0, r4, lsl #2]
   1725c:	cmp	r0, #0
   17260:	popne	{r4, r5, r6, sl, fp, pc}
   17264:	ldr	r1, [r5, #16]
   17268:	ldr	r0, [r5, #20]
   1726c:	add	r1, r1, #1
   17270:	str	r1, [r5, #16]
   17274:	bl	119ac <mycore_malloc@plt>
   17278:	ldr	r1, [r5, #4]
   1727c:	str	r0, [r1, r4, lsl #2]
   17280:	ldr	r0, [r5, #4]
   17284:	ldr	r0, [r0, r4, lsl #2]
   17288:	pop	{r4, r5, r6, sl, fp, pc}

0001728c <mcsimple_clean@@Base>:
   1728c:	mov	r1, #0
   17290:	str	r1, [r0, #12]
   17294:	str	r1, [r0, #24]
   17298:	bx	lr

0001729c <mcsimple_destroy@@Base>:
   1729c:	push	{r4, r5, r6, r7, fp, lr}
   172a0:	add	fp, sp, #16
   172a4:	mov	r4, #0
   172a8:	cmp	r0, #0
   172ac:	beq	17324 <mcsimple_destroy@@Base+0x88>
   172b0:	mov	r5, r0
   172b4:	ldr	r0, [r0, #4]
   172b8:	mov	r6, r1
   172bc:	cmp	r0, #0
   172c0:	beq	17310 <mcsimple_destroy@@Base+0x74>
   172c4:	ldr	r1, [r5, #16]
   172c8:	cmp	r1, #0
   172cc:	beq	1730c <mcsimple_destroy@@Base+0x70>
   172d0:	mov	r7, #0
   172d4:	ldr	r0, [r0, r7, lsl #2]
   172d8:	cmp	r0, #0
   172dc:	bne	172f4 <mcsimple_destroy@@Base+0x58>
   172e0:	b	172fc <mcsimple_destroy@@Base+0x60>
   172e4:	ldr	r0, [r5, #4]
   172e8:	ldr	r0, [r0, r7, lsl #2]
   172ec:	cmp	r0, #0
   172f0:	beq	172fc <mcsimple_destroy@@Base+0x60>
   172f4:	bl	11a9c <mycore_free@plt>
   172f8:	ldr	r1, [r5, #16]
   172fc:	add	r7, r7, #1
   17300:	cmp	r7, r1
   17304:	bcc	172e4 <mcsimple_destroy@@Base+0x48>
   17308:	ldr	r0, [r5, #4]
   1730c:	bl	11a9c <mycore_free@plt>
   17310:	cmp	r6, #0
   17314:	moveq	r0, r5
   17318:	popeq	{r4, r5, r6, r7, fp, pc}
   1731c:	mov	r0, r5
   17320:	bl	11a9c <mycore_free@plt>
   17324:	mov	r0, r4
   17328:	pop	{r4, r5, r6, r7, fp, pc}

0001732c <mcsimple_malloc@@Base>:
   1732c:	push	{r4, r5, r6, sl, fp, lr}
   17330:	add	fp, sp, #16
   17334:	mov	r4, r0
   17338:	ldr	r1, [r0, #20]
   1733c:	ldr	r0, [r0, #24]
   17340:	cmp	r0, r1
   17344:	bcs	17350 <mcsimple_malloc@@Base+0x24>
   17348:	ldr	r1, [r4, #4]
   1734c:	b	173e8 <mcsimple_malloc@@Base+0xbc>
   17350:	ldr	r0, [r4, #12]
   17354:	ldr	r6, [r4, #8]
   17358:	add	r5, r0, #1
   1735c:	cmp	r5, r6
   17360:	str	r5, [r4, #12]
   17364:	bcc	173a0 <mcsimple_malloc@@Base+0x74>
   17368:	ldr	r0, [r4, #4]
   1736c:	lsl	r1, r6, #2
   17370:	bl	10da0 <mycore_realloc@plt>
   17374:	cmp	r0, #0
   17378:	beq	17404 <mcsimple_malloc@@Base+0xd8>
   1737c:	str	r0, [r4, #4]
   17380:	add	r6, r6, #128	; 0x80
   17384:	add	r0, r0, r5, lsl #2
   17388:	ldr	r1, [r4, #8]
   1738c:	sub	r1, r6, r1
   17390:	lsl	r2, r1, #2
   17394:	mov	r1, #0
   17398:	bl	116d0 <memset@plt>
   1739c:	str	r6, [r4, #8]
   173a0:	mov	r0, #0
   173a4:	str	r0, [r4, #24]
   173a8:	ldr	r1, [r4, #4]
   173ac:	ldr	r2, [r1, r5, lsl #2]
   173b0:	cmp	r2, #0
   173b4:	bne	173e8 <mcsimple_malloc@@Base+0xbc>
   173b8:	ldr	r1, [r4, #16]
   173bc:	ldr	r0, [r4, #20]
   173c0:	add	r1, r1, #1
   173c4:	str	r1, [r4, #16]
   173c8:	bl	119ac <mycore_malloc@plt>
   173cc:	ldr	r1, [r4, #4]
   173d0:	str	r0, [r1, r5, lsl #2]
   173d4:	ldr	r1, [r4, #4]
   173d8:	ldr	r0, [r1, r5, lsl #2]
   173dc:	cmp	r0, #0
   173e0:	beq	17404 <mcsimple_malloc@@Base+0xd8>
   173e4:	ldr	r0, [r4, #24]
   173e8:	ldr	r2, [r4]
   173ec:	ldr	r3, [r4, #12]
   173f0:	add	r2, r2, r0
   173f4:	str	r2, [r4, #24]
   173f8:	ldr	r1, [r1, r3, lsl #2]
   173fc:	add	r0, r1, r0
   17400:	pop	{r4, r5, r6, sl, fp, pc}
   17404:	mov	r0, #0
   17408:	pop	{r4, r5, r6, sl, fp, pc}

0001740c <mcsimple_get_by_absolute_position@@Base>:
   1740c:	push	{fp, lr}
   17410:	mov	fp, sp
   17414:	ldr	r2, [r0]
   17418:	ldr	ip, [r0, #20]
   1741c:	ldr	lr, [r0, #16]
   17420:	mul	r2, r2, r1
   17424:	mov	r1, #0
   17428:	udiv	r3, r2, ip
   1742c:	cmp	r3, lr
   17430:	ldrcc	r0, [r0, #4]
   17434:	mlscc	r1, r3, ip, r2
   17438:	ldrcc	r0, [r0, r3, lsl #2]
   1743c:	addcc	r1, r0, r1
   17440:	mov	r0, r1
   17444:	pop	{fp, pc}

00017448 <mcsync_create@@Base>:
   17448:	mov	r0, #1
   1744c:	mov	r1, #8
   17450:	b	11004 <mycore_calloc@plt>

00017454 <mcsync_init@@Base>:
   17454:	push	{r4, r5, r6, sl, fp, lr}
   17458:	add	fp, sp, #16
   1745c:	mov	r5, r0
   17460:	bl	114a8 <mcsync_spin_create@plt>
   17464:	mov	r4, #1
   17468:	cmp	r0, #0
   1746c:	str	r0, [r5]
   17470:	beq	174cc <mcsync_init@@Base+0x78>
   17474:	bl	11454 <mcsync_spin_init@plt>
   17478:	cmp	r0, #0
   1747c:	beq	17494 <mcsync_init@@Base+0x40>
   17480:	mov	r6, r0
   17484:	ldr	r0, [r5]
   17488:	bl	11070 <mcsync_spin_destroy@plt>
   1748c:	mov	r0, r6
   17490:	pop	{r4, r5, r6, sl, fp, pc}
   17494:	bl	116e8 <mcsync_mutex_create@plt>
   17498:	cmp	r0, #0
   1749c:	str	r0, [r5, #4]
   174a0:	beq	174cc <mcsync_init@@Base+0x78>
   174a4:	bl	118c8 <mcsync_mutex_init@plt>
   174a8:	cmp	r0, #0
   174ac:	moveq	r4, #0
   174b0:	moveq	r0, r4
   174b4:	popeq	{r4, r5, r6, sl, fp, pc}
   174b8:	mov	r4, r0
   174bc:	ldr	r0, [r5]
   174c0:	bl	11070 <mcsync_spin_destroy@plt>
   174c4:	ldr	r0, [r5, #4]
   174c8:	bl	10ed8 <mcsync_mutex_destroy@plt>
   174cc:	mov	r0, r4
   174d0:	pop	{r4, r5, r6, sl, fp, pc}

000174d4 <mcsync_clean@@Base>:
   174d4:	push	{r4, sl, fp, lr}
   174d8:	add	fp, sp, #8
   174dc:	mov	r4, r0
   174e0:	ldr	r0, [r0]
   174e4:	bl	11838 <mcsync_spin_clean@plt>
   174e8:	ldr	r0, [r4, #4]
   174ec:	pop	{r4, sl, fp, lr}
   174f0:	b	11af0 <mcsync_mutex_clean@plt>

000174f4 <mcsync_destroy@@Base>:
   174f4:	push	{r4, r5, r6, sl, fp, lr}
   174f8:	add	fp, sp, #16
   174fc:	mov	r4, #0
   17500:	cmp	r0, #0
   17504:	beq	17534 <mcsync_destroy@@Base+0x40>
   17508:	mov	r5, r0
   1750c:	ldr	r0, [r0]
   17510:	mov	r6, r1
   17514:	bl	11070 <mcsync_spin_destroy@plt>
   17518:	ldr	r0, [r5, #4]
   1751c:	bl	10ed8 <mcsync_mutex_destroy@plt>
   17520:	cmp	r6, #0
   17524:	moveq	r0, r5
   17528:	popeq	{r4, r5, r6, sl, fp, pc}
   1752c:	mov	r0, r5
   17530:	bl	11a9c <mycore_free@plt>
   17534:	mov	r0, r4
   17538:	pop	{r4, r5, r6, sl, fp, pc}

0001753c <mcsync_lock@@Base>:
   1753c:	ldr	r0, [r0]
   17540:	b	114d8 <mcsync_spin_lock@plt>

00017544 <mcsync_unlock@@Base>:
   17544:	ldr	r0, [r0]
   17548:	b	11c4c <mcsync_spin_unlock@plt>

0001754c <mctree_create@@Base>:
   1754c:	push	{r4, r5, r6, sl, fp, lr}
   17550:	add	fp, sp, #16
   17554:	mov	r5, r0
   17558:	mov	r0, #16
   1755c:	bl	119ac <mycore_malloc@plt>
   17560:	mov	r4, #0
   17564:	cmp	r0, #0
   17568:	beq	1759c <mctree_create@@Base+0x50>
   1756c:	mov	r6, r0
   17570:	add	r1, r5, #1
   17574:	add	r0, r5, #512	; 0x200
   17578:	str	r1, [r6, #4]
   1757c:	mov	r1, #28
   17580:	str	r0, [r6, #8]
   17584:	bl	11004 <mycore_calloc@plt>
   17588:	cmp	r0, #0
   1758c:	str	r0, [r6]
   17590:	beq	175a4 <mctree_create@@Base+0x58>
   17594:	mov	r4, r6
   17598:	str	r5, [r6, #12]
   1759c:	mov	r0, r4
   175a0:	pop	{r4, r5, r6, sl, fp, pc}
   175a4:	mov	r0, r6
   175a8:	bl	11a9c <mycore_free@plt>
   175ac:	mov	r0, r4
   175b0:	pop	{r4, r5, r6, sl, fp, pc}

000175b4 <mctree_clean@@Base>:
   175b4:	ldr	r3, [r0, #12]
   175b8:	ldr	r2, [r0, #8]
   175bc:	ldr	r1, [r0]
   175c0:	add	r3, r3, #1
   175c4:	str	r3, [r0, #4]
   175c8:	rsb	r0, r2, r2, lsl #3
   175cc:	lsl	r2, r0, #2
   175d0:	mov	r0, r1
   175d4:	mov	r1, #0
   175d8:	b	116d0 <memset@plt>

000175dc <mctree_destroy@@Base>:
   175dc:	cmp	r0, #0
   175e0:	beq	1760c <mctree_destroy@@Base+0x30>
   175e4:	push	{r4, sl, fp, lr}
   175e8:	add	fp, sp, #8
   175ec:	mov	r4, r0
   175f0:	ldr	r0, [r0]
   175f4:	cmp	r0, #0
   175f8:	beq	17600 <mctree_destroy@@Base+0x24>
   175fc:	bl	11a9c <mycore_free@plt>
   17600:	mov	r0, r4
   17604:	bl	11a9c <mycore_free@plt>
   17608:	pop	{r4, sl, fp, lr}
   1760c:	mov	r0, #0
   17610:	bx	lr

00017614 <__mtree_search_lowercase_to_start@@Base>:
   17614:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17618:	add	fp, sp, #24
   1761c:	cmp	r1, #0
   17620:	beq	176b0 <__mtree_search_lowercase_to_start@@Base+0x9c>
   17624:	ldr	r7, [r0]
   17628:	mov	r5, r3
   1762c:	mov	r8, r2
   17630:	mov	r4, r1
   17634:	rsb	r0, r4, r4, lsl #3
   17638:	add	r6, r7, r0, lsl #2
   1763c:	ldr	r1, [r6, #4]
   17640:	cmp	r1, r5
   17644:	bne	17670 <__mtree_search_lowercase_to_start@@Base+0x5c>
   17648:	ldr	r1, [r7, r0, lsl #2]
   1764c:	mov	r0, r8
   17650:	mov	r2, r5
   17654:	bl	11298 <mycore_strncasecmp@plt>
   17658:	cmp	r0, #0
   1765c:	beq	176b4 <__mtree_search_lowercase_to_start@@Base+0xa0>
   17660:	ldr	r4, [r6, #24]
   17664:	cmp	r4, #0
   17668:	bne	17634 <__mtree_search_lowercase_to_start@@Base+0x20>
   1766c:	b	176b0 <__mtree_search_lowercase_to_start@@Base+0x9c>
   17670:	bcs	17698 <__mtree_search_lowercase_to_start@@Base+0x84>
   17674:	ldr	r4, [r6, #20]
   17678:	rsb	r0, r4, r4, lsl #3
   1767c:	add	r0, r7, r0, lsl #2
   17680:	ldr	r0, [r0, #4]
   17684:	cmp	r0, r5
   17688:	bhi	176b0 <__mtree_search_lowercase_to_start@@Base+0x9c>
   1768c:	cmp	r4, #0
   17690:	bne	17634 <__mtree_search_lowercase_to_start@@Base+0x20>
   17694:	b	176b0 <__mtree_search_lowercase_to_start@@Base+0x9c>
   17698:	ldr	r4, [r6, #16]
   1769c:	rsb	r0, r4, r4, lsl #3
   176a0:	add	r0, r7, r0, lsl #2
   176a4:	ldr	r0, [r0, #4]
   176a8:	cmp	r0, r5
   176ac:	bcs	1768c <__mtree_search_lowercase_to_start@@Base+0x78>
   176b0:	mov	r4, #0
   176b4:	mov	r0, r4
   176b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000176bc <__mtree_search_to_start@@Base>:
   176bc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   176c0:	add	fp, sp, #24
   176c4:	cmp	r1, #0
   176c8:	beq	17758 <__mtree_search_to_start@@Base+0x9c>
   176cc:	ldr	r7, [r0]
   176d0:	mov	r5, r3
   176d4:	mov	r8, r2
   176d8:	mov	r4, r1
   176dc:	rsb	r0, r4, r4, lsl #3
   176e0:	add	r6, r7, r0, lsl #2
   176e4:	ldr	r1, [r6, #4]
   176e8:	cmp	r1, r5
   176ec:	bne	17718 <__mtree_search_to_start@@Base+0x5c>
   176f0:	ldr	r1, [r7, r0, lsl #2]
   176f4:	mov	r0, r8
   176f8:	mov	r2, r5
   176fc:	bl	11130 <memcmp@plt>
   17700:	cmp	r0, #0
   17704:	beq	1775c <__mtree_search_to_start@@Base+0xa0>
   17708:	ldr	r4, [r6, #24]
   1770c:	cmp	r4, #0
   17710:	bne	176dc <__mtree_search_to_start@@Base+0x20>
   17714:	b	17758 <__mtree_search_to_start@@Base+0x9c>
   17718:	bcs	17740 <__mtree_search_to_start@@Base+0x84>
   1771c:	ldr	r4, [r6, #20]
   17720:	rsb	r0, r4, r4, lsl #3
   17724:	add	r0, r7, r0, lsl #2
   17728:	ldr	r0, [r0, #4]
   1772c:	cmp	r0, r5
   17730:	bhi	17758 <__mtree_search_to_start@@Base+0x9c>
   17734:	cmp	r4, #0
   17738:	bne	176dc <__mtree_search_to_start@@Base+0x20>
   1773c:	b	17758 <__mtree_search_to_start@@Base+0x9c>
   17740:	ldr	r4, [r6, #16]
   17744:	rsb	r0, r4, r4, lsl #3
   17748:	add	r0, r7, r0, lsl #2
   1774c:	ldr	r0, [r0, #4]
   17750:	cmp	r0, r5
   17754:	bcs	17734 <__mtree_search_to_start@@Base+0x78>
   17758:	mov	r4, #0
   1775c:	mov	r0, r4
   17760:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017764 <mctree_insert_child@@Base>:
   17764:	push	{r4, r5, fp, lr}
   17768:	add	fp, sp, #8
   1776c:	mov	r5, r0
   17770:	ldr	r0, [r0]
   17774:	rsb	r1, r1, r1, lsl #3
   17778:	ldr	r4, [r5, #4]
   1777c:	add	r1, r0, r1, lsl #2
   17780:	str	r4, [r1, #24]
   17784:	rsb	ip, r4, r4, lsl #3
   17788:	mov	r1, r0
   1778c:	str	r2, [r1, ip, lsl #2]!
   17790:	ldr	r2, [fp, #8]
   17794:	str	r3, [r1, #4]
   17798:	str	r2, [r1, #8]
   1779c:	add	r1, r4, #1
   177a0:	str	r1, [r5, #4]
   177a4:	ldr	r2, [r5, #8]
   177a8:	cmp	r1, r2
   177ac:	bcc	177d0 <mctree_insert_child@@Base+0x6c>
   177b0:	movw	r1, #4097	; 0x1001
   177b4:	add	r1, r4, r1
   177b8:	str	r1, [r5, #8]
   177bc:	rsb	r1, r1, r1, lsl #3
   177c0:	lsl	r1, r1, #2
   177c4:	bl	10da0 <mycore_realloc@plt>
   177c8:	str	r0, [r5]
   177cc:	ldr	r1, [r5, #4]
   177d0:	rsb	r1, r1, r1, lsl #3
   177d4:	mov	r2, #0
   177d8:	vmov.i32	q8, #0	; 0x00000000
   177dc:	str	r2, [r0, r1, lsl #2]!
   177e0:	str	r2, [r0, #24]
   177e4:	add	r0, r0, #8
   177e8:	vst1.32	{d16-d17}, [r0]
   177ec:	mov	r0, r4
   177f0:	pop	{r4, r5, fp, pc}

000177f4 <mctree_insert_after@@Base>:
   177f4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   177f8:	add	fp, sp, #24
   177fc:	mov	r5, r0
   17800:	ldr	r0, [r0]
   17804:	rsb	r6, r1, r1, lsl #3
   17808:	ldr	ip, [fp, #8]
   1780c:	ldr	r8, [r5, #4]
   17810:	add	r4, r0, r6, lsl #2
   17814:	ldr	r6, [r4, #20]!
   17818:	cmp	r6, #0
   1781c:	beq	17838 <mctree_insert_after@@Base+0x44>
   17820:	rsb	r7, r6, r6, lsl #3
   17824:	add	r7, r0, r7, lsl #2
   17828:	str	r8, [r7, #16]
   1782c:	rsb	r7, r8, r8, lsl #3
   17830:	add	r7, r0, r7, lsl #2
   17834:	str	r6, [r7, #20]
   17838:	rsb	r7, r8, r8, lsl #3
   1783c:	mov	r6, r0
   17840:	str	r8, [r4]
   17844:	str	r2, [r6, r7, lsl #2]!
   17848:	str	r1, [r6, #16]
   1784c:	add	r1, r8, #1
   17850:	stmib	r6, {r3, ip}
   17854:	str	r1, [r5, #4]
   17858:	ldr	r2, [r5, #8]
   1785c:	cmp	r1, r2
   17860:	bcc	17884 <mctree_insert_after@@Base+0x90>
   17864:	movw	r1, #4097	; 0x1001
   17868:	add	r1, r8, r1
   1786c:	str	r1, [r5, #8]
   17870:	rsb	r1, r1, r1, lsl #3
   17874:	lsl	r1, r1, #2
   17878:	bl	10da0 <mycore_realloc@plt>
   1787c:	str	r0, [r5]
   17880:	ldr	r1, [r5, #4]
   17884:	rsb	r1, r1, r1, lsl #3
   17888:	mov	r2, #0
   1788c:	vmov.i32	q8, #0	; 0x00000000
   17890:	str	r2, [r0, r1, lsl #2]!
   17894:	str	r2, [r0, #24]
   17898:	add	r0, r0, #8
   1789c:	vst1.32	{d16-d17}, [r0]
   178a0:	mov	r0, r8
   178a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000178a8 <mctree_insert_before@@Base>:
   178a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   178ac:	add	fp, sp, #24
   178b0:	mov	r5, r0
   178b4:	ldr	r0, [r0]
   178b8:	rsb	r6, r1, r1, lsl #3
   178bc:	ldr	ip, [fp, #8]
   178c0:	ldr	r8, [r5, #4]
   178c4:	add	r4, r0, r6, lsl #2
   178c8:	ldr	r6, [r4, #16]!
   178cc:	cmp	r6, #0
   178d0:	beq	178ec <mctree_insert_before@@Base+0x44>
   178d4:	rsb	r7, r6, r6, lsl #3
   178d8:	add	r7, r0, r7, lsl #2
   178dc:	str	r8, [r7, #20]
   178e0:	rsb	r7, r8, r8, lsl #3
   178e4:	add	r7, r0, r7, lsl #2
   178e8:	str	r6, [r7, #16]
   178ec:	rsb	r7, r8, r8, lsl #3
   178f0:	mov	r6, r0
   178f4:	str	r8, [r4]
   178f8:	str	r2, [r6, r7, lsl #2]!
   178fc:	str	r1, [r6, #20]
   17900:	add	r1, r8, #1
   17904:	stmib	r6, {r3, ip}
   17908:	str	r1, [r5, #4]
   1790c:	ldr	r2, [r5, #8]
   17910:	cmp	r1, r2
   17914:	bcc	17938 <mctree_insert_before@@Base+0x90>
   17918:	movw	r1, #4097	; 0x1001
   1791c:	add	r1, r8, r1
   17920:	str	r1, [r5, #8]
   17924:	rsb	r1, r1, r1, lsl #3
   17928:	lsl	r1, r1, #2
   1792c:	bl	10da0 <mycore_realloc@plt>
   17930:	str	r0, [r5]
   17934:	ldr	r1, [r5, #4]
   17938:	rsb	r1, r1, r1, lsl #3
   1793c:	mov	r2, #0
   17940:	vmov.i32	q8, #0	; 0x00000000
   17944:	str	r2, [r0, r1, lsl #2]!
   17948:	str	r2, [r0, #24]
   1794c:	add	r0, r0, #8
   17950:	vst1.32	{d16-d17}, [r0]
   17954:	mov	r0, r8
   17958:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001795c <__mtree_insert_to_start@@Base>:
   1795c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17960:	add	fp, sp, #28
   17964:	sub	sp, sp, #4
   17968:	cmp	r1, #0
   1796c:	beq	17a84 <__mtree_insert_to_start@@Base+0x128>
   17970:	mov	r9, r0
   17974:	ldr	r5, [r0]
   17978:	ldr	r0, [fp, #8]
   1797c:	mov	r7, r3
   17980:	mov	r4, r2
   17984:	str	r0, [sp]
   17988:	rsb	r8, r1, r1, lsl #3
   1798c:	mov	r6, r1
   17990:	add	sl, r5, r8, lsl #2
   17994:	ldr	r0, [sl, #4]
   17998:	cmp	r0, r7
   1799c:	bne	179c8 <__mtree_insert_to_start@@Base+0x6c>
   179a0:	ldr	r1, [r5, r8, lsl #2]
   179a4:	mov	r0, r4
   179a8:	mov	r2, r7
   179ac:	bl	11130 <memcmp@plt>
   179b0:	cmp	r0, #0
   179b4:	beq	17a94 <__mtree_insert_to_start@@Base+0x138>
   179b8:	ldr	r1, [sl, #24]!
   179bc:	cmp	r1, #0
   179c0:	bne	17988 <__mtree_insert_to_start@@Base+0x2c>
   179c4:	b	17b90 <__mtree_insert_to_start@@Base+0x234>
   179c8:	bcs	179f0 <__mtree_insert_to_start@@Base+0x94>
   179cc:	ldr	r1, [sl, #20]!
   179d0:	cmp	r1, #0
   179d4:	beq	17ab0 <__mtree_insert_to_start@@Base+0x154>
   179d8:	rsb	r0, r1, r1, lsl #3
   179dc:	add	r0, r5, r0, lsl #2
   179e0:	ldr	r0, [r0, #4]
   179e4:	cmp	r0, r7
   179e8:	bls	17988 <__mtree_insert_to_start@@Base+0x2c>
   179ec:	b	17ab0 <__mtree_insert_to_start@@Base+0x154>
   179f0:	ldr	r1, [sl, #16]!
   179f4:	cmp	r1, #0
   179f8:	beq	17a10 <__mtree_insert_to_start@@Base+0xb4>
   179fc:	rsb	r0, r1, r1, lsl #3
   17a00:	add	r0, r5, r0, lsl #2
   17a04:	ldr	r0, [r0, #4]
   17a08:	cmp	r0, r7
   17a0c:	bcs	17988 <__mtree_insert_to_start@@Base+0x2c>
   17a10:	ldr	r3, [fp, #12]
   17a14:	cmp	r3, #0
   17a18:	beq	17c30 <__mtree_insert_to_start@@Base+0x2d4>
   17a1c:	add	r2, fp, #8
   17a20:	mov	r0, r4
   17a24:	mov	r1, r7
   17a28:	blx	r3
   17a2c:	ldr	r5, [r9]
   17a30:	ldr	r2, [fp, #8]
   17a34:	mov	r0, r9
   17a38:	add	sl, r5, r8, lsl #2
   17a3c:	str	r2, [sp]
   17a40:	ldr	r1, [sl, #16]!
   17a44:	ldr	r9, [r0, #4]
   17a48:	cmp	r1, #0
   17a4c:	mov	r8, r0
   17a50:	beq	17a6c <__mtree_insert_to_start@@Base+0x110>
   17a54:	rsb	r0, r1, r1, lsl #3
   17a58:	add	r0, r5, r0, lsl #2
   17a5c:	str	r9, [r0, #20]
   17a60:	rsb	r0, r9, r9, lsl #3
   17a64:	add	r0, r5, r0, lsl #2
   17a68:	str	r1, [r0, #16]
   17a6c:	rsb	r0, r9, r9, lsl #3
   17a70:	mov	r1, r5
   17a74:	str	r9, [sl]
   17a78:	str	r4, [r1, r0, lsl #2]!
   17a7c:	str	r6, [r1, #20]
   17a80:	b	17b20 <__mtree_insert_to_start@@Base+0x1c4>
   17a84:	mov	r9, #0
   17a88:	mov	r0, r9
   17a8c:	sub	sp, fp, #28
   17a90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a94:	ldr	r0, [sp]
   17a98:	mov	r9, r6
   17a9c:	cmp	r0, #0
   17aa0:	strne	r0, [sl, #8]
   17aa4:	mov	r0, r9
   17aa8:	sub	sp, fp, #28
   17aac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ab0:	ldr	r3, [fp, #12]
   17ab4:	cmp	r3, #0
   17ab8:	beq	17c48 <__mtree_insert_to_start@@Base+0x2ec>
   17abc:	add	r2, fp, #8
   17ac0:	mov	r0, r4
   17ac4:	mov	r1, r7
   17ac8:	blx	r3
   17acc:	ldr	r5, [r9]
   17ad0:	ldr	r2, [fp, #8]
   17ad4:	mov	r0, r9
   17ad8:	add	sl, r5, r8, lsl #2
   17adc:	str	r2, [sp]
   17ae0:	ldr	r1, [sl, #20]!
   17ae4:	ldr	r9, [r0, #4]
   17ae8:	cmp	r1, #0
   17aec:	mov	r8, r0
   17af0:	beq	17b0c <__mtree_insert_to_start@@Base+0x1b0>
   17af4:	rsb	r0, r1, r1, lsl #3
   17af8:	add	r0, r5, r0, lsl #2
   17afc:	str	r9, [r0, #16]
   17b00:	rsb	r0, r9, r9, lsl #3
   17b04:	add	r0, r5, r0, lsl #2
   17b08:	str	r1, [r0, #20]
   17b0c:	rsb	r0, r9, r9, lsl #3
   17b10:	mov	r1, r5
   17b14:	str	r9, [sl]
   17b18:	str	r4, [r1, r0, lsl #2]!
   17b1c:	str	r6, [r1, #16]
   17b20:	str	r7, [r1, #4]
   17b24:	ldr	r0, [sp]
   17b28:	str	r0, [r1, #8]
   17b2c:	add	r0, r9, #1
   17b30:	str	r0, [r8, #4]
   17b34:	ldr	r1, [r8, #8]
   17b38:	cmp	r0, r1
   17b3c:	bcc	17b68 <__mtree_insert_to_start@@Base+0x20c>
   17b40:	movw	r0, #4097	; 0x1001
   17b44:	add	r0, r9, r0
   17b48:	str	r0, [r8, #8]
   17b4c:	rsb	r0, r0, r0, lsl #3
   17b50:	lsl	r1, r0, #2
   17b54:	mov	r0, r5
   17b58:	bl	10da0 <mycore_realloc@plt>
   17b5c:	str	r0, [r8]
   17b60:	mov	r5, r0
   17b64:	ldr	r0, [r8, #4]
   17b68:	rsb	r0, r0, r0, lsl #3
   17b6c:	mov	r1, #0
   17b70:	vmov.i32	q8, #0	; 0x00000000
   17b74:	str	r1, [r5, r0, lsl #2]!
   17b78:	add	r0, r5, #8
   17b7c:	str	r1, [r5, #24]
   17b80:	vst1.32	{d16-d17}, [r0]
   17b84:	mov	r0, r9
   17b88:	sub	sp, fp, #28
   17b8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b90:	ldr	r3, [fp, #12]
   17b94:	cmp	r3, #0
   17b98:	beq	17c60 <__mtree_insert_to_start@@Base+0x304>
   17b9c:	add	r2, fp, #8
   17ba0:	mov	r0, r4
   17ba4:	mov	r1, r7
   17ba8:	blx	r3
   17bac:	mov	r5, r9
   17bb0:	ldm	r9, {r0, r9}
   17bb4:	ldr	r2, [fp, #8]
   17bb8:	add	r1, r0, r8, lsl #2
   17bbc:	mov	r3, r0
   17bc0:	str	r9, [r1, #24]
   17bc4:	rsb	r1, r9, r9, lsl #3
   17bc8:	str	r4, [r3, r1, lsl #2]!
   17bcc:	add	r1, r9, #1
   17bd0:	str	r7, [r3, #4]
   17bd4:	str	r2, [r3, #8]
   17bd8:	str	r1, [r5, #4]
   17bdc:	ldr	r2, [r5, #8]
   17be0:	cmp	r1, r2
   17be4:	bcc	17c08 <__mtree_insert_to_start@@Base+0x2ac>
   17be8:	movw	r1, #4097	; 0x1001
   17bec:	add	r1, r9, r1
   17bf0:	str	r1, [r5, #8]
   17bf4:	rsb	r1, r1, r1, lsl #3
   17bf8:	lsl	r1, r1, #2
   17bfc:	bl	10da0 <mycore_realloc@plt>
   17c00:	str	r0, [r5]
   17c04:	ldr	r1, [r5, #4]
   17c08:	rsb	r1, r1, r1, lsl #3
   17c0c:	mov	r2, #0
   17c10:	vmov.i32	q8, #0	; 0x00000000
   17c14:	str	r2, [r0, r1, lsl #2]!
   17c18:	str	r2, [r0, #24]
   17c1c:	add	r0, r0, #8
   17c20:	vst1.32	{d16-d17}, [r0]
   17c24:	mov	r0, r9
   17c28:	sub	sp, fp, #28
   17c2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17c30:	mov	r0, r9
   17c34:	ldr	r9, [r0, #4]
   17c38:	cmp	r1, #0
   17c3c:	mov	r8, r0
   17c40:	bne	17a54 <__mtree_insert_to_start@@Base+0xf8>
   17c44:	b	17a6c <__mtree_insert_to_start@@Base+0x110>
   17c48:	mov	r0, r9
   17c4c:	ldr	r9, [r0, #4]
   17c50:	cmp	r1, #0
   17c54:	mov	r8, r0
   17c58:	bne	17af4 <__mtree_insert_to_start@@Base+0x198>
   17c5c:	b	17b0c <__mtree_insert_to_start@@Base+0x1b0>
   17c60:	mov	r6, r9
   17c64:	ldr	r9, [r9, #4]
   17c68:	mov	r1, r5
   17c6c:	rsb	r0, r9, r9, lsl #3
   17c70:	str	r9, [sl]
   17c74:	str	r4, [r1, r0, lsl #2]!
   17c78:	ldr	r0, [sp]
   17c7c:	str	r7, [r1, #4]
   17c80:	str	r0, [r1, #8]
   17c84:	add	r0, r9, #1
   17c88:	str	r0, [r6, #4]
   17c8c:	ldr	r1, [r6, #8]
   17c90:	cmp	r0, r1
   17c94:	bcc	17b68 <__mtree_insert_to_start@@Base+0x20c>
   17c98:	movw	r0, #4097	; 0x1001
   17c9c:	add	r0, r9, r0
   17ca0:	str	r0, [r6, #8]
   17ca4:	rsb	r0, r0, r0, lsl #3
   17ca8:	lsl	r1, r0, #2
   17cac:	mov	r0, r5
   17cb0:	bl	10da0 <mycore_realloc@plt>
   17cb4:	str	r0, [r6]
   17cb8:	mov	r5, r0
   17cbc:	ldr	r0, [r6, #4]
   17cc0:	b	17b68 <__mtree_insert_to_start@@Base+0x20c>

00017cc4 <mctree_insert@@Base>:
   17cc4:	push	{r4, r5, r6, r7, fp, lr}
   17cc8:	add	fp, sp, #16
   17ccc:	sub	sp, sp, #16
   17cd0:	cmp	r2, #0
   17cd4:	str	r3, [sp, #12]
   17cd8:	beq	17d50 <mctree_insert@@Base+0x8c>
   17cdc:	mov	r4, r0
   17ce0:	mov	r0, r1
   17ce4:	mov	r6, r1
   17ce8:	mov	r5, r2
   17cec:	ldr	ip, [fp, #8]
   17cf0:	ldrb	r1, [r0], r2
   17cf4:	ldr	r2, [pc, #260]	; 17e00 <mctree_insert@@Base+0x13c>
   17cf8:	ldrb	r0, [r0, #-1]
   17cfc:	add	r2, pc, r2
   17d00:	ldrb	r1, [r2, r1]
   17d04:	ldrb	r0, [r2, r0]
   17d08:	ldr	r2, [r4, #12]
   17d0c:	add	r1, r0, r1
   17d10:	ldr	r0, [r4]
   17d14:	udiv	r7, r1, r2
   17d18:	mls	r1, r7, r2, r1
   17d1c:	add	r1, r1, #1
   17d20:	rsb	r7, r1, r1, lsl #3
   17d24:	add	r2, r0, r7, lsl #2
   17d28:	ldr	r1, [r2, #24]!
   17d2c:	cmp	r1, #0
   17d30:	beq	17d60 <mctree_insert@@Base+0x9c>
   17d34:	stm	sp, {r3, ip}
   17d38:	mov	r0, r4
   17d3c:	mov	r2, r6
   17d40:	mov	r3, r5
   17d44:	bl	11340 <__mtree_insert_to_start@plt>
   17d48:	sub	sp, fp, #16
   17d4c:	pop	{r4, r5, r6, r7, fp, pc}
   17d50:	mov	r7, #0
   17d54:	mov	r0, r7
   17d58:	sub	sp, fp, #16
   17d5c:	pop	{r4, r5, r6, r7, fp, pc}
   17d60:	cmp	ip, #0
   17d64:	beq	17d88 <mctree_insert@@Base+0xc4>
   17d68:	add	r2, sp, #12
   17d6c:	mov	r0, r6
   17d70:	mov	r1, r5
   17d74:	blx	ip
   17d78:	ldr	r0, [r4]
   17d7c:	ldr	r3, [sp, #12]
   17d80:	add	r1, r0, r7, lsl #2
   17d84:	add	r2, r1, #24
   17d88:	ldr	r7, [r4, #4]
   17d8c:	str	r7, [r2]
   17d90:	rsb	r1, r7, r7, lsl #3
   17d94:	mov	r2, r0
   17d98:	str	r6, [r2, r1, lsl #2]!
   17d9c:	add	r1, r7, #1
   17da0:	str	r5, [r2, #4]
   17da4:	str	r3, [r2, #8]
   17da8:	str	r1, [r4, #4]
   17dac:	ldr	r2, [r4, #8]
   17db0:	cmp	r1, r2
   17db4:	bcc	17dd8 <mctree_insert@@Base+0x114>
   17db8:	movw	r1, #4097	; 0x1001
   17dbc:	add	r1, r7, r1
   17dc0:	str	r1, [r4, #8]
   17dc4:	rsb	r1, r1, r1, lsl #3
   17dc8:	lsl	r1, r1, #2
   17dcc:	bl	10da0 <mycore_realloc@plt>
   17dd0:	str	r0, [r4]
   17dd4:	ldr	r1, [r4, #4]
   17dd8:	rsb	r1, r1, r1, lsl #3
   17ddc:	mov	r2, #0
   17de0:	vmov.i32	q8, #0	; 0x00000000
   17de4:	str	r2, [r0, r1, lsl #2]!
   17de8:	str	r2, [r0, #24]
   17dec:	add	r0, r0, #8
   17df0:	vst1.32	{d16-d17}, [r0]
   17df4:	mov	r0, r7
   17df8:	sub	sp, fp, #16
   17dfc:	pop	{r4, r5, r6, r7, fp, pc}
   17e00:			; <UNDEFINED> instruction: 0x0001d7bc

00017e04 <mctree_search@@Base>:
   17e04:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17e08:	add	fp, sp, #24
   17e0c:	cmp	r2, #0
   17e10:	beq	17ecc <mctree_search@@Base+0xc8>
   17e14:	mov	r4, r2
   17e18:	mov	r8, r1
   17e1c:	ldrb	r2, [r1], r2
   17e20:	ldr	r3, [pc, #176]	; 17ed8 <mctree_search@@Base+0xd4>
   17e24:	ldr	r7, [r0]
   17e28:	ldr	r0, [r0, #12]
   17e2c:	ldrb	r1, [r1, #-1]
   17e30:	add	r3, pc, r3
   17e34:	ldrb	r2, [r3, r2]
   17e38:	ldrb	r1, [r3, r1]
   17e3c:	add	r1, r1, r2
   17e40:	udiv	r2, r1, r0
   17e44:	mls	r0, r2, r0, r1
   17e48:	rsb	r0, r0, r0, lsl #3
   17e4c:	add	r0, r7, r0, lsl #2
   17e50:	ldr	r6, [r0, #52]	; 0x34
   17e54:	b	17e5c <mctree_search@@Base+0x58>
   17e58:	ldr	r6, [r5, #24]
   17e5c:	cmp	r6, #0
   17e60:	beq	17ecc <mctree_search@@Base+0xc8>
   17e64:	rsb	r0, r6, r6, lsl #3
   17e68:	add	r5, r7, r0, lsl #2
   17e6c:	ldr	r1, [r5, #4]
   17e70:	cmp	r1, r4
   17e74:	bne	17e94 <mctree_search@@Base+0x90>
   17e78:	ldr	r1, [r7, r0, lsl #2]
   17e7c:	mov	r0, r8
   17e80:	mov	r2, r4
   17e84:	bl	11130 <memcmp@plt>
   17e88:	cmp	r0, #0
   17e8c:	bne	17e58 <mctree_search@@Base+0x54>
   17e90:	b	17ed0 <mctree_search@@Base+0xcc>
   17e94:	bcs	17eb4 <mctree_search@@Base+0xb0>
   17e98:	ldr	r6, [r5, #20]
   17e9c:	rsb	r0, r6, r6, lsl #3
   17ea0:	add	r0, r7, r0, lsl #2
   17ea4:	ldr	r0, [r0, #4]
   17ea8:	cmp	r0, r4
   17eac:	bls	17e5c <mctree_search@@Base+0x58>
   17eb0:	b	17ecc <mctree_search@@Base+0xc8>
   17eb4:	ldr	r6, [r5, #16]
   17eb8:	rsb	r0, r6, r6, lsl #3
   17ebc:	add	r0, r7, r0, lsl #2
   17ec0:	ldr	r0, [r0, #4]
   17ec4:	cmp	r0, r4
   17ec8:	bcs	17e5c <mctree_search@@Base+0x58>
   17ecc:	mov	r6, #0
   17ed0:	mov	r0, r6
   17ed4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17ed8:	andeq	sp, r1, r8, lsl #13

00017edc <mctree_search_lowercase@@Base>:
   17edc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17ee0:	add	fp, sp, #24
   17ee4:	cmp	r2, #0
   17ee8:	beq	17fa4 <mctree_search_lowercase@@Base+0xc8>
   17eec:	mov	r4, r2
   17ef0:	mov	r8, r1
   17ef4:	ldrb	r2, [r1], r2
   17ef8:	ldr	r3, [pc, #176]	; 17fb0 <mctree_search_lowercase@@Base+0xd4>
   17efc:	ldr	r7, [r0]
   17f00:	ldr	r0, [r0, #12]
   17f04:	ldrb	r1, [r1, #-1]
   17f08:	add	r3, pc, r3
   17f0c:	ldrb	r2, [r3, r2]
   17f10:	ldrb	r1, [r3, r1]
   17f14:	add	r1, r1, r2
   17f18:	udiv	r2, r1, r0
   17f1c:	mls	r0, r2, r0, r1
   17f20:	rsb	r0, r0, r0, lsl #3
   17f24:	add	r0, r7, r0, lsl #2
   17f28:	ldr	r6, [r0, #52]	; 0x34
   17f2c:	b	17f34 <mctree_search_lowercase@@Base+0x58>
   17f30:	ldr	r6, [r5, #24]
   17f34:	cmp	r6, #0
   17f38:	beq	17fa4 <mctree_search_lowercase@@Base+0xc8>
   17f3c:	rsb	r0, r6, r6, lsl #3
   17f40:	add	r5, r7, r0, lsl #2
   17f44:	ldr	r1, [r5, #4]
   17f48:	cmp	r1, r4
   17f4c:	bne	17f6c <mctree_search_lowercase@@Base+0x90>
   17f50:	ldr	r1, [r7, r0, lsl #2]
   17f54:	mov	r0, r8
   17f58:	mov	r2, r4
   17f5c:	bl	11298 <mycore_strncasecmp@plt>
   17f60:	cmp	r0, #0
   17f64:	bne	17f30 <mctree_search_lowercase@@Base+0x54>
   17f68:	b	17fa8 <mctree_search_lowercase@@Base+0xcc>
   17f6c:	bcs	17f8c <mctree_search_lowercase@@Base+0xb0>
   17f70:	ldr	r6, [r5, #20]
   17f74:	rsb	r0, r6, r6, lsl #3
   17f78:	add	r0, r7, r0, lsl #2
   17f7c:	ldr	r0, [r0, #4]
   17f80:	cmp	r0, r4
   17f84:	bls	17f34 <mctree_search_lowercase@@Base+0x58>
   17f88:	b	17fa4 <mctree_search_lowercase@@Base+0xc8>
   17f8c:	ldr	r6, [r5, #16]
   17f90:	rsb	r0, r6, r6, lsl #3
   17f94:	add	r0, r7, r0, lsl #2
   17f98:	ldr	r0, [r0, #4]
   17f9c:	cmp	r0, r4
   17fa0:	bcs	17f34 <mctree_search_lowercase@@Base+0x58>
   17fa4:	mov	r6, #0
   17fa8:	mov	r0, r6
   17fac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17fb0:			; <UNDEFINED> instruction: 0x0001d5b0

00017fb4 <mycore_utils_mhash_hash@@Base>:
   17fb4:	cmp	r1, #0
   17fb8:	beq	17fe0 <mycore_utils_mhash_hash@@Base+0x2c>
   17fbc:	mov	ip, #0
   17fc0:	ldrb	r3, [r0], #1
   17fc4:	subs	r1, r1, #1
   17fc8:	add	r3, ip, r3
   17fcc:	add	r3, r3, r3, lsl #10
   17fd0:	eor	ip, r3, r3, lsr #6
   17fd4:	bne	17fc0 <mycore_utils_mhash_hash@@Base+0xc>
   17fd8:	add	r0, ip, ip, lsl #3
   17fdc:	b	17fe4 <mycore_utils_mhash_hash@@Base+0x30>
   17fe0:	mov	r0, #0
   17fe4:	eor	r0, r0, r0, lsr #11
   17fe8:	add	r0, r0, r0, lsl #15
   17fec:	udiv	r1, r0, r2
   17ff0:	mls	r0, r1, r2, r0
   17ff4:	bx	lr

00017ff8 <mycore_utils_mhash_create@@Base>:
   17ff8:	mov	r0, #1
   17ffc:	mov	r1, #24
   18000:	b	11004 <mycore_calloc@plt>

00018004 <mycore_utils_mhash_init@@Base>:
   18004:	push	{r4, r5, r6, sl, fp, lr}
   18008:	add	fp, sp, #16
   1800c:	sub	sp, sp, #8
   18010:	mov	r4, r2
   18014:	mov	r6, r1
   18018:	mov	r5, r0
   1801c:	bl	111c0 <mchar_async_create@plt>
   18020:	mov	r1, r0
   18024:	str	r0, [r5]
   18028:	mov	r0, #2
   1802c:	cmp	r1, #0
   18030:	beq	180a4 <mycore_utils_mhash_init@@Base+0xa0>
   18034:	mov	r0, r1
   18038:	mov	r1, #128	; 0x80
   1803c:	mov	r2, #4096	; 0x1000
   18040:	bl	1140c <mchar_async_init@plt>
   18044:	cmp	r0, #0
   18048:	str	r0, [sp, #4]
   1804c:	bne	180a4 <mycore_utils_mhash_init@@Base+0xa0>
   18050:	ldr	r0, [r5]
   18054:	add	r1, sp, #4
   18058:	bl	1128c <mchar_async_node_add@plt>
   1805c:	str	r0, [r5, #4]
   18060:	ldr	r0, [sp, #4]
   18064:	cmp	r0, #0
   18068:	bne	180a4 <mycore_utils_mhash_init@@Base+0xa0>
   1806c:	cmp	r6, #128	; 0x80
   18070:	mov	r1, #4
   18074:	movls	r6, #128	; 0x80
   18078:	mov	r0, r6
   1807c:	bl	11004 <mycore_calloc@plt>
   18080:	str	r0, [r5, #8]
   18084:	cmp	r0, #0
   18088:	mov	r0, #2
   1808c:	beq	180a4 <mycore_utils_mhash_init@@Base+0xa0>
   18090:	cmp	r4, #0
   18094:	mov	r0, #0
   18098:	str	r6, [r5, #12]
   1809c:	movweq	r4, #1
   180a0:	str	r4, [r5, #20]
   180a4:	sub	sp, fp, #16
   180a8:	pop	{r4, r5, r6, sl, fp, pc}

000180ac <mycore_utils_mhash_clean@@Base>:
   180ac:	push	{r4, sl, fp, lr}
   180b0:	add	fp, sp, #8
   180b4:	mov	r4, r0
   180b8:	ldr	r0, [r0]
   180bc:	bl	1191c <mchar_async_clean@plt>
   180c0:	ldr	r1, [r4, #12]
   180c4:	ldr	r0, [r4, #8]
   180c8:	lsl	r2, r1, #2
   180cc:	mov	r1, #0
   180d0:	pop	{r4, sl, fp, lr}
   180d4:	b	116d0 <memset@plt>

000180d8 <mycore_utils_mhash_destroy@@Base>:
   180d8:	push	{r4, r5, fp, lr}
   180dc:	add	fp, sp, #8
   180e0:	cmp	r0, #0
   180e4:	beq	18114 <mycore_utils_mhash_destroy@@Base+0x3c>
   180e8:	mov	r4, r0
   180ec:	ldr	r0, [r0, #8]
   180f0:	mov	r5, r1
   180f4:	cmp	r0, #0
   180f8:	beq	18108 <mycore_utils_mhash_destroy@@Base+0x30>
   180fc:	bl	11a9c <mycore_free@plt>
   18100:	mov	r0, #0
   18104:	str	r0, [r4, #8]
   18108:	cmp	r5, #0
   1810c:	beq	18118 <mycore_utils_mhash_destroy@@Base+0x40>
   18110:	bl	11a9c <mycore_free@plt>
   18114:	mov	r4, #0
   18118:	mov	r0, r4
   1811c:	pop	{r4, r5, fp, pc}

00018120 <mycore_utils_mhash_create_entry@@Base>:
   18120:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18124:	add	fp, sp, #24
   18128:	mov	r5, r0
   1812c:	mov	r7, r1
   18130:	ldr	r0, [r0]
   18134:	mov	r6, r2
   18138:	mov	r2, #16
   1813c:	mov	r8, r3
   18140:	ldr	r1, [r5, #4]
   18144:	bl	11730 <mchar_async_malloc@plt>
   18148:	mov	r4, r0
   1814c:	ldm	r5, {r0, r1}
   18150:	add	r2, r6, #1
   18154:	bl	11730 <mchar_async_malloc@plt>
   18158:	cmp	r0, #0
   1815c:	str	r0, [r4]
   18160:	beq	1818c <mycore_utils_mhash_create_entry@@Base+0x6c>
   18164:	mov	r1, r7
   18168:	mov	r2, r6
   1816c:	bl	11034 <memcpy@plt>
   18170:	ldr	r0, [r4]
   18174:	mov	r1, #0
   18178:	strb	r1, [r0, r6]
   1817c:	mov	r0, r4
   18180:	stmib	r4, {r6, r8}
   18184:	str	r1, [r4, #12]
   18188:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1818c:	ldm	r5, {r0, r1}
   18190:	mov	r2, r4
   18194:	bl	115c8 <mchar_async_free@plt>
   18198:	mov	r4, #0
   1819c:	mov	r0, r4
   181a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000181a4 <mycore_utils_mhash_add_with_choice@@Base>:
   181a4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   181a8:	add	fp, sp, #24
   181ac:	cmp	r1, #0
   181b0:	mov	r9, #0
   181b4:	movne	r5, r2
   181b8:	cmpne	r2, #0
   181bc:	bne	181c8 <mycore_utils_mhash_add_with_choice@@Base+0x24>
   181c0:	mov	r0, r9
   181c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   181c8:	mov	r8, r0
   181cc:	ldr	r0, [r0, #12]
   181d0:	mov	r6, r1
   181d4:	mov	r1, #0
   181d8:	mov	r2, #0
   181dc:	ldrb	r3, [r6, r1]
   181e0:	add	r1, r1, #1
   181e4:	cmp	r5, r1
   181e8:	add	r2, r2, r3
   181ec:	add	r2, r2, r2, lsl #10
   181f0:	eor	r2, r2, r2, lsr #6
   181f4:	bne	181dc <mycore_utils_mhash_add_with_choice@@Base+0x38>
   181f8:	add	r1, r2, r2, lsl #3
   181fc:	eor	r1, r1, r1, lsr #11
   18200:	add	r1, r1, r1, lsl #15
   18204:	udiv	r2, r1, r0
   18208:	mls	r4, r2, r0, r1
   1820c:	ldr	r1, [r8, #8]
   18210:	ldr	r7, [r1, r4, lsl #2]
   18214:	cmp	r7, #0
   18218:	beq	182bc <mycore_utils_mhash_add_with_choice@@Base+0x118>
   1821c:	mov	r4, #0
   18220:	ldr	r0, [r7, #4]
   18224:	cmp	r0, r5
   18228:	bne	18260 <mycore_utils_mhash_add_with_choice@@Base+0xbc>
   1822c:	b	18244 <mycore_utils_mhash_add_with_choice@@Base+0xa0>
   18230:	add	r4, r4, #1
   18234:	mov	r7, r0
   18238:	ldr	r0, [r7, #4]
   1823c:	cmp	r0, r5
   18240:	bne	18260 <mycore_utils_mhash_add_with_choice@@Base+0xbc>
   18244:	ldr	r0, [r7]
   18248:	mov	r1, r6
   1824c:	mov	r2, r5
   18250:	bl	11be0 <strncmp@plt>
   18254:	cmp	r0, #0
   18258:	moveq	r0, r7
   1825c:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   18260:	ldr	r0, [r7, #12]
   18264:	cmp	r0, #0
   18268:	bne	18230 <mycore_utils_mhash_add_with_choice@@Base+0x8c>
   1826c:	ldm	r8, {r0, r1}
   18270:	mov	r2, #16
   18274:	bl	11730 <mchar_async_malloc@plt>
   18278:	mov	r9, r0
   1827c:	ldm	r8, {r0, r1}
   18280:	add	r2, r5, #1
   18284:	bl	11730 <mchar_async_malloc@plt>
   18288:	cmp	r0, #0
   1828c:	str	r0, [r9]
   18290:	beq	18320 <mycore_utils_mhash_add_with_choice@@Base+0x17c>
   18294:	mov	r1, r6
   18298:	mov	r2, r5
   1829c:	bl	11034 <memcpy@plt>
   182a0:	ldr	r0, [r9]
   182a4:	mov	r1, #0
   182a8:	strb	r1, [r0, r5]
   182ac:	str	r5, [r9, #4]
   182b0:	str	r1, [r9, #8]
   182b4:	str	r1, [r9, #12]
   182b8:	b	18330 <mycore_utils_mhash_add_with_choice@@Base+0x18c>
   182bc:	ldr	r1, [r8, #16]
   182c0:	sub	r0, r0, r0, lsr #2
   182c4:	cmp	r1, r0
   182c8:	movcs	r0, r8
   182cc:	blcs	11814 <mycore_utils_mhash_rebuld@plt>
   182d0:	ldm	r8, {r0, r1}
   182d4:	mov	r2, #16
   182d8:	bl	11730 <mchar_async_malloc@plt>
   182dc:	mov	r7, r0
   182e0:	ldm	r8, {r0, r1}
   182e4:	add	r2, r5, #1
   182e8:	bl	11730 <mchar_async_malloc@plt>
   182ec:	cmp	r0, #0
   182f0:	str	r0, [r7]
   182f4:	beq	1834c <mycore_utils_mhash_add_with_choice@@Base+0x1a8>
   182f8:	mov	r1, r6
   182fc:	mov	r2, r5
   18300:	bl	11034 <memcpy@plt>
   18304:	ldr	r0, [r7]
   18308:	mov	r1, #0
   1830c:	strb	r1, [r0, r5]
   18310:	str	r5, [r7, #4]
   18314:	str	r1, [r7, #8]
   18318:	str	r1, [r7, #12]
   1831c:	b	1835c <mycore_utils_mhash_add_with_choice@@Base+0x1b8>
   18320:	ldm	r8, {r0, r1}
   18324:	mov	r2, r9
   18328:	bl	115c8 <mchar_async_free@plt>
   1832c:	mov	r9, #0
   18330:	str	r9, [r7, #12]
   18334:	ldr	r0, [r8, #20]
   18338:	cmp	r4, r0
   1833c:	movhi	r0, r8
   18340:	blhi	11814 <mycore_utils_mhash_rebuld@plt>
   18344:	mov	r0, r9
   18348:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1834c:	ldm	r8, {r0, r1}
   18350:	mov	r2, r7
   18354:	bl	115c8 <mchar_async_free@plt>
   18358:	mov	r7, #0
   1835c:	ldr	r0, [r8, #8]
   18360:	str	r7, [r0, r4, lsl #2]
   18364:	ldr	r0, [r8, #8]
   18368:	ldr	r9, [r0, r4, lsl #2]
   1836c:	mov	r0, r9
   18370:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00018374 <mycore_utils_mhash_rebuld@@Base>:
   18374:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18378:	add	fp, sp, #24
   1837c:	ldr	r5, [r0, #12]
   18380:	ldr	r8, [r0, #8]
   18384:	mov	r4, r0
   18388:	mov	r1, #4
   1838c:	lsl	r0, r5, #1
   18390:	str	r0, [r4, #12]
   18394:	bl	11004 <mycore_calloc@plt>
   18398:	cmp	r0, #0
   1839c:	str	r0, [r4, #8]
   183a0:	beq	18460 <mycore_utils_mhash_rebuld@@Base+0xec>
   183a4:	ldr	r0, [r4, #12]
   183a8:	cmp	r0, #0
   183ac:	beq	18450 <mycore_utils_mhash_rebuld@@Base+0xdc>
   183b0:	mov	r1, #0
   183b4:	b	18438 <mycore_utils_mhash_rebuld@@Base+0xc4>
   183b8:	ldr	r2, [r2, #12]
   183bc:	cmp	r2, #0
   183c0:	beq	18444 <mycore_utils_mhash_rebuld@@Base+0xd0>
   183c4:	ldr	r3, [r2]
   183c8:	cmp	r3, #0
   183cc:	ldrne	r5, [r2, #4]
   183d0:	cmpne	r5, #0
   183d4:	beq	183b8 <mycore_utils_mhash_rebuld@@Base+0x44>
   183d8:	mov	r6, #0
   183dc:	str	r6, [r2, #12]
   183e0:	ldrb	r7, [r3], #1
   183e4:	subs	r5, r5, #1
   183e8:	add	r7, r6, r7
   183ec:	add	r7, r7, r7, lsl #10
   183f0:	eor	r6, r7, r7, lsr #6
   183f4:	bne	183e0 <mycore_utils_mhash_rebuld@@Base+0x6c>
   183f8:	add	r3, r6, r6, lsl #3
   183fc:	ldr	r6, [r4, #8]
   18400:	eor	r3, r3, r3, lsr #11
   18404:	add	r3, r3, r3, lsl #15
   18408:	udiv	r7, r3, r0
   1840c:	mls	r3, r7, r0, r3
   18410:	ldr	r3, [r6, r3, lsl #2]!
   18414:	cmp	r3, #0
   18418:	beq	18430 <mycore_utils_mhash_rebuld@@Base+0xbc>
   1841c:	mov	r6, r3
   18420:	ldr	r3, [r3, #12]
   18424:	cmp	r3, #0
   18428:	bne	1841c <mycore_utils_mhash_rebuld@@Base+0xa8>
   1842c:	add	r6, r6, #12
   18430:	str	r2, [r6]
   18434:	b	183b8 <mycore_utils_mhash_rebuld@@Base+0x44>
   18438:	ldr	r2, [r8, r1, lsl #2]
   1843c:	cmp	r2, #0
   18440:	bne	183c4 <mycore_utils_mhash_rebuld@@Base+0x50>
   18444:	add	r1, r1, #1
   18448:	cmp	r1, r0
   1844c:	bcc	18438 <mycore_utils_mhash_rebuld@@Base+0xc4>
   18450:	mov	r0, r8
   18454:	bl	11a9c <mycore_free@plt>
   18458:	ldr	r0, [r4, #8]
   1845c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18460:	mov	r0, #0
   18464:	str	r8, [r4, #8]
   18468:	str	r5, [r4, #12]
   1846c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00018470 <mycore_utils_mhash_add@@Base>:
   18470:	push	{r4, sl, fp, lr}
   18474:	add	fp, sp, #8
   18478:	mov	r4, r3
   1847c:	bl	11a84 <mycore_utils_mhash_add_with_choice@plt>
   18480:	cmp	r0, #0
   18484:	strne	r4, [r0, #8]
   18488:	pop	{r4, sl, fp, pc}

0001848c <mycore_utils_mhash_search@@Base>:
   1848c:	push	{r4, r5, r6, r7, fp, lr}
   18490:	add	fp, sp, #16
   18494:	cmp	r1, #0
   18498:	mov	r6, #0
   1849c:	movne	r4, r2
   184a0:	cmpne	r2, #0
   184a4:	bne	184b0 <mycore_utils_mhash_search@@Base+0x24>
   184a8:	mov	r0, r6
   184ac:	pop	{r4, r5, r6, r7, fp, pc}
   184b0:	mov	r5, r1
   184b4:	ldr	r1, [r0, #12]
   184b8:	mov	r2, #0
   184bc:	mov	r3, #0
   184c0:	ldrb	r7, [r5, r2]
   184c4:	add	r2, r2, #1
   184c8:	cmp	r4, r2
   184cc:	add	r3, r3, r7
   184d0:	add	r3, r3, r3, lsl #10
   184d4:	eor	r3, r3, r3, lsr #6
   184d8:	bne	184c0 <mycore_utils_mhash_search@@Base+0x34>
   184dc:	add	r2, r3, r3, lsl #3
   184e0:	ldr	r0, [r0, #8]
   184e4:	mov	r6, #0
   184e8:	eor	r2, r2, r2, lsr #11
   184ec:	add	r2, r2, r2, lsl #15
   184f0:	udiv	r3, r2, r1
   184f4:	mls	r1, r3, r1, r2
   184f8:	ldr	r7, [r0, r1, lsl #2]
   184fc:	cmp	r7, #0
   18500:	bne	18514 <mycore_utils_mhash_search@@Base+0x88>
   18504:	b	184a8 <mycore_utils_mhash_search@@Base+0x1c>
   18508:	ldr	r7, [r7, #12]
   1850c:	cmp	r7, #0
   18510:	beq	184a8 <mycore_utils_mhash_search@@Base+0x1c>
   18514:	ldr	r0, [r7, #4]
   18518:	cmp	r0, r4
   1851c:	bne	18508 <mycore_utils_mhash_search@@Base+0x7c>
   18520:	ldr	r0, [r7]
   18524:	mov	r1, r5
   18528:	mov	r2, r4
   1852c:	bl	11be0 <strncmp@plt>
   18530:	cmp	r0, #0
   18534:	bne	18508 <mycore_utils_mhash_search@@Base+0x7c>
   18538:	mov	r6, r7
   1853c:	mov	r0, r6
   18540:	pop	{r4, r5, r6, r7, fp, pc}

00018544 <mycore_utils_mhash_entry_by_id@@Base>:
   18544:	ldr	r3, [r0, #12]
   18548:	mov	r2, r0
   1854c:	mov	r0, #0
   18550:	cmp	r3, r1
   18554:	ldrhi	r0, [r2, #8]
   18558:	ldrhi	r0, [r0, r1, lsl #2]
   1855c:	bx	lr

00018560 <mycore_utils_mhash_get_table_size@@Base>:
   18560:	ldr	r0, [r0, #12]
   18564:	bx	lr

00018568 <mycore_utils_mhash_rebuild_add_entry@@Base>:
   18568:	cmp	r1, #0
   1856c:	mov	ip, #0
   18570:	cmpne	r2, #0
   18574:	bne	18580 <mycore_utils_mhash_rebuild_add_entry@@Base+0x18>
   18578:	mov	r0, ip
   1857c:	bx	lr
   18580:	push	{r4, sl, fp, lr}
   18584:	add	fp, sp, #8
   18588:	mov	lr, #0
   1858c:	str	lr, [r3, #12]
   18590:	ldr	ip, [r0, #12]
   18594:	ldrb	r4, [r1], #1
   18598:	subs	r2, r2, #1
   1859c:	add	r4, lr, r4
   185a0:	add	r4, r4, r4, lsl #10
   185a4:	eor	lr, r4, r4, lsr #6
   185a8:	bne	18594 <mycore_utils_mhash_rebuild_add_entry@@Base+0x2c>
   185ac:	add	r1, lr, lr, lsl #3
   185b0:	eor	r1, r1, r1, lsr #11
   185b4:	add	r1, r1, r1, lsl #15
   185b8:	udiv	r2, r1, ip
   185bc:	mls	r2, r2, ip, r1
   185c0:	ldr	r1, [r0, #8]
   185c4:	ldr	r0, [r1, r2, lsl #2]!
   185c8:	cmp	r0, #0
   185cc:	pop	{r4, sl, fp, lr}
   185d0:	beq	185e8 <mycore_utils_mhash_rebuild_add_entry@@Base+0x80>
   185d4:	mov	r1, r0
   185d8:	ldr	r0, [r0, #12]
   185dc:	cmp	r0, #0
   185e0:	bne	185d4 <mycore_utils_mhash_rebuild_add_entry@@Base+0x6c>
   185e4:	add	r1, r1, #12
   185e8:	mov	ip, r3
   185ec:	str	r3, [r1]
   185f0:	mov	r0, ip
   185f4:	bx	lr

000185f8 <myencoding_detect_by_trigram@@Base>:
   185f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   185fc:	add	fp, sp, #28
   18600:	sub	sp, sp, #20
   18604:	subs	r7, r2, #3
   18608:	mov	r5, r1
   1860c:	mov	r1, #0
   18610:	str	r3, [sp, #16]
   18614:	str	r0, [sp]
   18618:	str	r2, [sp, #4]
   1861c:	ldrne	r8, [fp, #8]
   18620:	str	r1, [r0]
   18624:	str	r1, [r0, #4]
   18628:	cmpne	r8, #0
   1862c:	beq	186d4 <myencoding_detect_by_trigram@@Base+0xdc>
   18630:	mov	r0, #0
   18634:	mov	r9, #0
   18638:	str	r0, [sp, #12]
   1863c:	mov	r0, #0
   18640:	str	r0, [sp, #8]
   18644:	mov	r6, r5
   18648:	ldrsb	r0, [r6, r9]!
   1864c:	cmn	r0, #1
   18650:	bgt	18684 <myencoding_detect_by_trigram@@Base+0x8c>
   18654:	ldr	r4, [sp, #16]
   18658:	mov	sl, #0
   1865c:	mov	r0, r4
   18660:	mov	r1, r6
   18664:	mov	r2, #3
   18668:	bl	11130 <memcmp@plt>
   1866c:	cmp	r0, #0
   18670:	beq	18694 <myencoding_detect_by_trigram@@Base+0x9c>
   18674:	add	sl, sl, #1
   18678:	add	r4, r4, #8
   1867c:	cmp	sl, r8
   18680:	bcc	1865c <myencoding_detect_by_trigram@@Base+0x64>
   18684:	add	r9, r9, #1
   18688:	cmp	r9, r7
   1868c:	bcc	18644 <myencoding_detect_by_trigram@@Base+0x4c>
   18690:	b	186d4 <myencoding_detect_by_trigram@@Base+0xdc>
   18694:	ldr	r0, [r4, #4]
   18698:	ldr	r2, [sp, #8]
   1869c:	ldr	r1, [sp, #12]
   186a0:	add	r2, r2, r0
   186a4:	ldr	r0, [sp]
   186a8:	add	r1, r1, #1
   186ac:	str	r1, [sp, #12]
   186b0:	stm	r0, {r1, r2}
   186b4:	ldr	r0, [fp, #12]
   186b8:	str	r2, [sp, #8]
   186bc:	cmp	r2, r0
   186c0:	ldr	r0, [sp, #4]
   186c4:	movcs	r9, r0
   186c8:	add	r9, r9, #1
   186cc:	cmp	r9, r7
   186d0:	bcc	18644 <myencoding_detect_by_trigram@@Base+0x4c>
   186d4:	sub	sp, fp, #28
   186d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000186dc <myencoding_detect_russian_has_end@@Base>:
   186dc:	ldr	r3, [r0, #4]
   186e0:	cmp	r3, r2
   186e4:	movcs	r0, #1
   186e8:	bxcs	lr
   186ec:	ldr	r2, [r0]
   186f0:	mov	r0, #0
   186f4:	cmp	r2, r1
   186f8:	movwcs	r0, #1
   186fc:	bx	lr

00018700 <myencoding_detect_unicode_has_end@@Base>:
   18700:	ldmib	r0, {r2, ip}
   18704:	clz	r3, ip
   18708:	cmp	r2, #0
   1870c:	mov	r0, r2
   18710:	movwne	r0, #1
   18714:	lsr	r3, r3, #5
   18718:	cmpne	ip, #0
   1871c:	orr	r0, r3, r0
   18720:	bne	18728 <myencoding_detect_unicode_has_end@@Base+0x28>
   18724:	bx	lr
   18728:	mov	r0, #100	; 0x64
   1872c:	mul	r0, ip, r0
   18730:	udiv	r2, r0, r2
   18734:	mov	r0, #0
   18738:	cmp	r2, r1
   1873c:	movwcc	r0, #1
   18740:	bx	lr

00018744 <myencoding_detect_utf_8@@Base>:
   18744:	push	{r4, r5, r6, sl, fp, lr}
   18748:	add	fp, sp, #16
   1874c:	mov	r3, #0
   18750:	cmp	r2, #0
   18754:	str	r3, [r0]
   18758:	str	r3, [r0, #4]
   1875c:	str	r3, [r0, #8]
   18760:	beq	18870 <myencoding_detect_utf_8@@Base+0x12c>
   18764:	mov	ip, #0
   18768:	mov	lr, #0
   1876c:	mov	r4, #0
   18770:	ldrb	r5, [r1, r4]
   18774:	tst	r5, #128	; 0x80
   18778:	bne	18794 <myencoding_detect_utf_8@@Base+0x50>
   1877c:	add	r3, r3, #1
   18780:	str	r3, [r0]
   18784:	add	r4, r4, #1
   18788:	cmp	r4, r2
   1878c:	bcc	18770 <myencoding_detect_utf_8@@Base+0x2c>
   18790:	b	18870 <myencoding_detect_utf_8@@Base+0x12c>
   18794:	and	r6, r5, #224	; 0xe0
   18798:	cmp	r6, #192	; 0xc0
   1879c:	bne	187c4 <myencoding_detect_utf_8@@Base+0x80>
   187a0:	add	r5, r4, #2
   187a4:	cmp	r5, r2
   187a8:	bcs	18870 <myencoding_detect_utf_8@@Base+0x12c>
   187ac:	add	r4, r1, r4
   187b0:	ldrb	r4, [r4, #1]
   187b4:	and	r4, r4, #192	; 0xc0
   187b8:	cmp	r4, #128	; 0x80
   187bc:	beq	18800 <myencoding_detect_utf_8@@Base+0xbc>
   187c0:	b	18844 <myencoding_detect_utf_8@@Base+0x100>
   187c4:	and	r6, r5, #240	; 0xf0
   187c8:	cmp	r6, #224	; 0xe0
   187cc:	bne	18818 <myencoding_detect_utf_8@@Base+0xd4>
   187d0:	add	r5, r4, #3
   187d4:	cmp	r5, r2
   187d8:	bcs	18870 <myencoding_detect_utf_8@@Base+0x12c>
   187dc:	add	r4, r1, r4
   187e0:	ldrb	r6, [r4, #2]
   187e4:	and	r6, r6, #192	; 0xc0
   187e8:	cmp	r6, #128	; 0x80
   187ec:	bne	18844 <myencoding_detect_utf_8@@Base+0x100>
   187f0:	ldrb	r4, [r4, #1]
   187f4:	and	r4, r4, #192	; 0xc0
   187f8:	cmp	r4, #128	; 0x80
   187fc:	bne	18844 <myencoding_detect_utf_8@@Base+0x100>
   18800:	add	ip, ip, #1
   18804:	mov	r4, r5
   18808:	str	ip, [r0, #4]
   1880c:	cmp	r4, r2
   18810:	bcc	18770 <myencoding_detect_utf_8@@Base+0x2c>
   18814:	b	18870 <myencoding_detect_utf_8@@Base+0x12c>
   18818:	and	r5, r5, #248	; 0xf8
   1881c:	cmp	r5, #240	; 0xf0
   18820:	bne	1885c <myencoding_detect_utf_8@@Base+0x118>
   18824:	add	r5, r4, #4
   18828:	cmp	r5, r2
   1882c:	popcs	{r4, r5, r6, sl, fp, pc}
   18830:	add	r4, r1, r4
   18834:	ldrb	r6, [r4, #3]
   18838:	and	r6, r6, #192	; 0xc0
   1883c:	cmp	r6, #128	; 0x80
   18840:	beq	187e0 <myencoding_detect_utf_8@@Base+0x9c>
   18844:	add	lr, lr, #1
   18848:	mov	r4, r5
   1884c:	str	lr, [r0, #8]
   18850:	cmp	r4, r2
   18854:	bcc	18770 <myencoding_detect_utf_8@@Base+0x2c>
   18858:	b	18870 <myencoding_detect_utf_8@@Base+0x12c>
   1885c:	add	lr, lr, #1
   18860:	str	lr, [r0, #8]
   18864:	add	r4, r4, #1
   18868:	cmp	r4, r2
   1886c:	bcc	18770 <myencoding_detect_utf_8@@Base+0x2c>
   18870:	pop	{r4, r5, r6, sl, fp, pc}

00018874 <myencoding_detect_utf_16@@Base>:
   18874:	push	{r4, sl, fp, lr}
   18878:	add	fp, sp, #8
   1887c:	mov	lr, #0
   18880:	cmp	r2, #0
   18884:	str	lr, [r0]
   18888:	str	lr, [r0, #4]
   1888c:	str	lr, [r0, #8]
   18890:	popeq	{r4, sl, fp, pc}
   18894:	mov	ip, #0
   18898:	mov	r3, #0
   1889c:	ldrb	r4, [r1, r3]
   188a0:	cmp	r4, #0
   188a4:	bne	188f4 <myencoding_detect_utf_16@@Base+0x80>
   188a8:	tst	r3, #1
   188ac:	bne	188d8 <myencoding_detect_utf_16@@Base+0x64>
   188b0:	add	r3, r3, #1
   188b4:	ldrb	r4, [r1, r3]
   188b8:	sub	r4, r4, #32
   188bc:	uxtb	r4, r4
   188c0:	cmp	r4, #94	; 0x5e
   188c4:	addls	lr, lr, #1
   188c8:	strls	lr, [r0, #8]
   188cc:	cmp	r3, r2
   188d0:	bcc	1889c <myencoding_detect_utf_16@@Base+0x28>
   188d4:	b	18900 <myencoding_detect_utf_16@@Base+0x8c>
   188d8:	add	r4, r1, r3
   188dc:	ldrb	r4, [r4, #-1]
   188e0:	sub	r4, r4, #32
   188e4:	uxtb	r4, r4
   188e8:	cmp	r4, #94	; 0x5e
   188ec:	addls	ip, ip, #1
   188f0:	strls	ip, [r0, #4]
   188f4:	add	r3, r3, #1
   188f8:	cmp	r3, r2
   188fc:	bcc	1889c <myencoding_detect_utf_16@@Base+0x28>
   18900:	pop	{r4, sl, fp, pc}

00018904 <myencoding_detect_bom@@Base>:
   18904:	mov	r3, r0
   18908:	cmp	r1, #3
   1890c:	bcc	18944 <myencoding_detect_bom@@Base+0x40>
   18910:	ldrb	r1, [r3]
   18914:	cmp	r1, #239	; 0xef
   18918:	bne	18954 <myencoding_detect_bom@@Base+0x50>
   1891c:	ldrb	r1, [r3, #1]
   18920:	mov	r0, #0
   18924:	cmp	r1, #187	; 0xbb
   18928:	ldrbeq	r1, [r3, #2]
   1892c:	cmpeq	r1, #191	; 0xbf
   18930:	bne	18970 <myencoding_detect_bom@@Base+0x6c>
   18934:	mov	r0, #0
   18938:	str	r0, [r2]
   1893c:	mov	r0, #1
   18940:	bx	lr
   18944:	mov	r0, #0
   18948:	cmp	r1, #2
   1894c:	bne	18970 <myencoding_detect_bom@@Base+0x6c>
   18950:	ldrb	r1, [r3]
   18954:	mov	r0, #0
   18958:	cmp	r1, #255	; 0xff
   1895c:	beq	18974 <myencoding_detect_bom@@Base+0x70>
   18960:	cmp	r1, #254	; 0xfe
   18964:	ldrbeq	r1, [r3, #1]
   18968:	cmpeq	r1, #255	; 0xff
   1896c:	beq	18990 <myencoding_detect_bom@@Base+0x8c>
   18970:	bx	lr
   18974:	ldrb	r1, [r3, #1]
   18978:	cmp	r1, #254	; 0xfe
   1897c:	bxne	lr
   18980:	mov	r0, #4
   18984:	str	r0, [r2]
   18988:	mov	r0, #1
   1898c:	bx	lr
   18990:	mov	r0, #5
   18994:	str	r0, [r2]
   18998:	mov	r0, #1
   1899c:	bx	lr

000189a0 <myencoding_detect_and_cut_bom@@Base>:
   189a0:	push	{r4, r5, fp, lr}
   189a4:	add	fp, sp, #8
   189a8:	cmp	r1, #3
   189ac:	bcc	189e8 <myencoding_detect_and_cut_bom@@Base+0x48>
   189b0:	ldrb	r4, [r0]
   189b4:	cmp	r4, #239	; 0xef
   189b8:	bne	189f8 <myencoding_detect_and_cut_bom@@Base+0x58>
   189bc:	ldrb	r4, [r0, #1]
   189c0:	mov	ip, #0
   189c4:	cmp	r4, #187	; 0xbb
   189c8:	bne	18a58 <myencoding_detect_and_cut_bom@@Base+0xb8>
   189cc:	ldrb	r4, [r0, #2]
   189d0:	mov	ip, #0
   189d4:	cmp	r4, #191	; 0xbf
   189d8:	bne	18a58 <myencoding_detect_and_cut_bom@@Base+0xb8>
   189dc:	mvn	lr, #2
   189e0:	mov	r4, #3
   189e4:	b	18a3c <myencoding_detect_and_cut_bom@@Base+0x9c>
   189e8:	mov	ip, #0
   189ec:	cmp	r1, #2
   189f0:	bne	18a58 <myencoding_detect_and_cut_bom@@Base+0xb8>
   189f4:	ldrb	r4, [r0]
   189f8:	mov	ip, #0
   189fc:	cmp	r4, #255	; 0xff
   18a00:	beq	18a24 <myencoding_detect_and_cut_bom@@Base+0x84>
   18a04:	cmp	r4, #254	; 0xfe
   18a08:	ldrbeq	r4, [r0, #1]
   18a0c:	cmpeq	r4, #255	; 0xff
   18a10:	bne	18a58 <myencoding_detect_and_cut_bom@@Base+0xb8>
   18a14:	mvn	lr, #1
   18a18:	mov	r4, #2
   18a1c:	mov	ip, #5
   18a20:	b	18a3c <myencoding_detect_and_cut_bom@@Base+0x9c>
   18a24:	ldrb	r4, [r0, #1]
   18a28:	cmp	r4, #254	; 0xfe
   18a2c:	bne	18a58 <myencoding_detect_and_cut_bom@@Base+0xb8>
   18a30:	mvn	lr, #1
   18a34:	mov	r4, #2
   18a38:	mov	ip, #4
   18a3c:	ldr	r5, [fp, #8]
   18a40:	add	r0, r0, r4
   18a44:	str	ip, [r2]
   18a48:	mov	ip, #1
   18a4c:	str	r0, [r3]
   18a50:	add	r0, lr, r1
   18a54:	str	r0, [r5]
   18a58:	mov	r0, ip
   18a5c:	pop	{r4, r5, fp, pc}

00018a60 <myencoding_detect_unicode@@Base>:
   18a60:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18a64:	add	fp, sp, #24
   18a68:	sub	sp, sp, #16
   18a6c:	mov	r8, r2
   18a70:	mov	r2, r1
   18a74:	mov	r1, r0
   18a78:	mov	r0, #0
   18a7c:	cmp	r2, #0
   18a80:	str	r0, [r8]
   18a84:	beq	18b4c <myencoding_detect_unicode@@Base+0xec>
   18a88:	mov	ip, #0
   18a8c:	mov	r4, #0
   18a90:	mov	r5, #0
   18a94:	mov	r6, #0
   18a98:	ldrb	r7, [r1, r6]
   18a9c:	cmp	r7, #0
   18aa0:	bne	18af8 <myencoding_detect_unicode@@Base+0x98>
   18aa4:	tst	r6, #1
   18aa8:	bne	18ad8 <myencoding_detect_unicode@@Base+0x78>
   18aac:	add	r6, r6, #1
   18ab0:	add	r3, r4, #1
   18ab4:	ldrb	r7, [r1, r6]
   18ab8:	sub	r7, r7, #32
   18abc:	uxtb	r7, r7
   18ac0:	cmp	r7, #95	; 0x5f
   18ac4:	movcc	r4, r3
   18ac8:	movcc	r0, r3
   18acc:	cmp	r6, r2
   18ad0:	bcc	18a98 <myencoding_detect_unicode@@Base+0x38>
   18ad4:	b	18b04 <myencoding_detect_unicode@@Base+0xa4>
   18ad8:	add	r3, r1, r6
   18adc:	add	r7, r5, #1
   18ae0:	ldrb	r3, [r3, #-1]
   18ae4:	sub	r3, r3, #32
   18ae8:	uxtb	r3, r3
   18aec:	cmp	r3, #95	; 0x5f
   18af0:	movcc	r5, r7
   18af4:	movcc	ip, r7
   18af8:	add	r6, r6, #1
   18afc:	cmp	r6, r2
   18b00:	bcc	18a98 <myencoding_detect_unicode@@Base+0x38>
   18b04:	cmp	r0, #0
   18b08:	beq	18b30 <myencoding_detect_unicode@@Base+0xd0>
   18b0c:	cmp	r0, #3
   18b10:	bcc	18b4c <myencoding_detect_unicode@@Base+0xec>
   18b14:	cmp	ip, #0
   18b18:	bne	18b4c <myencoding_detect_unicode@@Base+0xec>
   18b1c:	mov	r0, #5
   18b20:	str	r0, [r8]
   18b24:	mov	r0, #1
   18b28:	sub	sp, fp, #24
   18b2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18b30:	cmp	ip, #3
   18b34:	bcc	18b4c <myencoding_detect_unicode@@Base+0xec>
   18b38:	mov	r0, #4
   18b3c:	str	r0, [r8]
   18b40:	mov	r0, #1
   18b44:	sub	sp, fp, #24
   18b48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18b4c:	add	r0, sp, #4
   18b50:	bl	11c40 <myencoding_detect_utf_8@plt>
   18b54:	ldr	r1, [sp, #8]
   18b58:	ldr	r0, [sp, #12]
   18b5c:	cmp	r1, #0
   18b60:	cmpne	r0, #0
   18b64:	bne	18b84 <myencoding_detect_unicode@@Base+0x124>
   18b68:	cmp	r0, #0
   18b6c:	beq	18b9c <myencoding_detect_unicode@@Base+0x13c>
   18b70:	mov	r0, #0
   18b74:	cmp	r1, #0
   18b78:	bne	18b9c <myencoding_detect_unicode@@Base+0x13c>
   18b7c:	sub	sp, fp, #24
   18b80:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18b84:	mov	r2, #100	; 0x64
   18b88:	mul	r0, r0, r2
   18b8c:	udiv	r1, r0, r1
   18b90:	mov	r0, #0
   18b94:	cmp	r1, #10
   18b98:	bcs	18b7c <myencoding_detect_unicode@@Base+0x11c>
   18b9c:	mov	r0, #0
   18ba0:	str	r0, [r8]
   18ba4:	mov	r0, #1
   18ba8:	sub	sp, fp, #24
   18bac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00018bb0 <myencoding_detect_russian@@Base>:
   18bb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18bb4:	add	fp, sp, #28
   18bb8:	sub	sp, sp, #20
   18bbc:	mov	r4, r0
   18bc0:	mov	r0, #0
   18bc4:	str	r1, [sp, #12]
   18bc8:	subs	r9, r1, #3
   18bcc:	movw	r1, #34463	; 0x869f
   18bd0:	mov	r3, #0
   18bd4:	mov	sl, #0
   18bd8:	str	r2, [sp]
   18bdc:	str	r0, [sp, #16]
   18be0:	movt	r1, #1
   18be4:	mov	r0, #0
   18be8:	str	r3, [r2]
   18bec:	beq	18d60 <myencoding_detect_russian@@Base+0x1b0>
   18bf0:	mov	r0, #0
   18bf4:	mov	r5, #0
   18bf8:	mov	r8, #0
   18bfc:	str	r0, [sp, #16]
   18c00:	add	r0, r1, #1
   18c04:	str	r0, [sp, #8]
   18c08:	mov	r7, r4
   18c0c:	ldrsb	r0, [r7, r8]!
   18c10:	cmn	r0, #1
   18c14:	bgt	18c4c <myencoding_detect_russian@@Base+0x9c>
   18c18:	ldr	r6, [pc, #1112]	; 19078 <myencoding_detect_russian@@Base+0x4c8>
   18c1c:	mov	sl, #0
   18c20:	add	r6, pc, r6
   18c24:	mov	r0, r6
   18c28:	mov	r1, r7
   18c2c:	mov	r2, #3
   18c30:	bl	11130 <memcmp@plt>
   18c34:	cmp	r0, #0
   18c38:	beq	18c5c <myencoding_detect_russian@@Base+0xac>
   18c3c:	add	sl, sl, #1
   18c40:	add	r6, r6, #8
   18c44:	cmp	sl, #1000	; 0x3e8
   18c48:	bcc	18c24 <myencoding_detect_russian@@Base+0x74>
   18c4c:	add	r8, r8, #1
   18c50:	cmp	r8, r9
   18c54:	bcc	18c08 <myencoding_detect_russian@@Base+0x58>
   18c58:	b	18c8c <myencoding_detect_russian@@Base+0xdc>
   18c5c:	ldr	r0, [r6, #4]
   18c60:	ldr	r1, [sp, #16]
   18c64:	add	r5, r5, #1
   18c68:	add	r1, r0, r1
   18c6c:	ldr	r0, [sp, #8]
   18c70:	str	r1, [sp, #16]
   18c74:	cmp	r1, r0
   18c78:	ldr	r0, [sp, #12]
   18c7c:	movcs	r8, r0
   18c80:	add	r8, r8, #1
   18c84:	cmp	r8, r9
   18c88:	bcc	18c08 <myencoding_detect_russian@@Base+0x58>
   18c8c:	ldr	r2, [sp, #16]
   18c90:	movw	r1, #34463	; 0x869f
   18c94:	mov	r0, #1
   18c98:	mov	r3, #32
   18c9c:	movt	r1, #1
   18ca0:	cmp	r2, r1
   18ca4:	cmpls	r5, #49	; 0x31
   18ca8:	bhi	19068 <myencoding_detect_russian@@Base+0x4b8>
   18cac:	ldr	r0, [sp, #16]
   18cb0:	mov	sl, #0
   18cb4:	mov	r5, #0
   18cb8:	cmp	r0, #0
   18cbc:	ldrne	r1, [sp]
   18cc0:	movne	r0, #32
   18cc4:	strne	r0, [r1]
   18cc8:	mov	r0, #0
   18ccc:	str	r0, [sp, #4]
   18cd0:	mov	r7, r4
   18cd4:	ldrsb	r0, [r7, r5]!
   18cd8:	cmn	r0, #1
   18cdc:	bgt	18d14 <myencoding_detect_russian@@Base+0x164>
   18ce0:	ldr	r6, [pc, #916]	; 1907c <myencoding_detect_russian@@Base+0x4cc>
   18ce4:	mov	r8, #0
   18ce8:	add	r6, pc, r6
   18cec:	mov	r0, r6
   18cf0:	mov	r1, r7
   18cf4:	mov	r2, #3
   18cf8:	bl	11130 <memcmp@plt>
   18cfc:	cmp	r0, #0
   18d00:	beq	18d24 <myencoding_detect_russian@@Base+0x174>
   18d04:	add	r8, r8, #1
   18d08:	add	r6, r6, #8
   18d0c:	cmp	r8, #1000	; 0x3e8
   18d10:	bcc	18cec <myencoding_detect_russian@@Base+0x13c>
   18d14:	add	r5, r5, #1
   18d18:	cmp	r5, r9
   18d1c:	bcc	18cd0 <myencoding_detect_russian@@Base+0x120>
   18d20:	b	18d54 <myencoding_detect_russian@@Base+0x1a4>
   18d24:	ldr	r0, [r6, #4]
   18d28:	add	sl, r0, sl
   18d2c:	ldr	r0, [sp, #8]
   18d30:	cmp	sl, r0
   18d34:	ldr	r0, [sp, #12]
   18d38:	movcs	r5, r0
   18d3c:	ldr	r0, [sp, #4]
   18d40:	add	r0, r0, #1
   18d44:	str	r0, [sp, #4]
   18d48:	add	r5, r5, #1
   18d4c:	cmp	r5, r9
   18d50:	bcc	18cd0 <myencoding_detect_russian@@Base+0x120>
   18d54:	ldr	r0, [sp, #4]
   18d58:	movw	r1, #34463	; 0x869f
   18d5c:	movt	r1, #1
   18d60:	mov	r3, #27
   18d64:	cmp	sl, r1
   18d68:	bhi	19064 <myencoding_detect_russian@@Base+0x4b4>
   18d6c:	cmp	r0, #49	; 0x31
   18d70:	bhi	19064 <myencoding_detect_russian@@Base+0x4b4>
   18d74:	ldr	r0, [sp, #16]
   18d78:	mov	r5, #0
   18d7c:	cmp	r0, sl
   18d80:	ldrcc	r1, [sp]
   18d84:	movcc	r0, #27
   18d88:	strcc	sl, [sp, #16]
   18d8c:	strcc	r0, [r1]
   18d90:	cmp	r9, #0
   18d94:	beq	18e3c <myencoding_detect_russian@@Base+0x28c>
   18d98:	movw	r0, #34463	; 0x869f
   18d9c:	mov	sl, #0
   18da0:	movt	r0, #1
   18da4:	add	r0, r0, #1
   18da8:	str	r0, [sp, #4]
   18dac:	mov	r0, #0
   18db0:	str	r0, [sp, #8]
   18db4:	mov	r6, r4
   18db8:	ldrsb	r0, [r6, sl]!
   18dbc:	cmn	r0, #1
   18dc0:	bgt	18df8 <myencoding_detect_russian@@Base+0x248>
   18dc4:	ldr	r7, [pc, #692]	; 19080 <myencoding_detect_russian@@Base+0x4d0>
   18dc8:	mov	r8, #0
   18dcc:	add	r7, pc, r7
   18dd0:	mov	r0, r7
   18dd4:	mov	r1, r6
   18dd8:	mov	r2, #3
   18ddc:	bl	11130 <memcmp@plt>
   18de0:	cmp	r0, #0
   18de4:	beq	18e08 <myencoding_detect_russian@@Base+0x258>
   18de8:	add	r8, r8, #1
   18dec:	add	r7, r7, #8
   18df0:	cmp	r8, #1000	; 0x3e8
   18df4:	bcc	18dd0 <myencoding_detect_russian@@Base+0x220>
   18df8:	add	sl, sl, #1
   18dfc:	cmp	sl, r9
   18e00:	bcc	18db4 <myencoding_detect_russian@@Base+0x204>
   18e04:	b	18e44 <myencoding_detect_russian@@Base+0x294>
   18e08:	ldr	r0, [r7, #4]
   18e0c:	add	r5, r0, r5
   18e10:	ldr	r0, [sp, #4]
   18e14:	cmp	r5, r0
   18e18:	ldr	r0, [sp, #12]
   18e1c:	movcs	sl, r0
   18e20:	ldr	r0, [sp, #8]
   18e24:	add	r0, r0, #1
   18e28:	str	r0, [sp, #8]
   18e2c:	add	sl, sl, #1
   18e30:	cmp	sl, r9
   18e34:	bcc	18db4 <myencoding_detect_russian@@Base+0x204>
   18e38:	b	18e44 <myencoding_detect_russian@@Base+0x294>
   18e3c:	mov	r0, #0
   18e40:	str	r0, [sp, #8]
   18e44:	movw	r1, #34463	; 0x869f
   18e48:	mov	r3, #22
   18e4c:	movt	r1, #1
   18e50:	cmp	r5, r1
   18e54:	bhi	19064 <myencoding_detect_russian@@Base+0x4b4>
   18e58:	ldr	r0, [sp, #8]
   18e5c:	cmp	r0, #49	; 0x31
   18e60:	mov	r0, #1
   18e64:	bhi	19068 <myencoding_detect_russian@@Base+0x4b8>
   18e68:	ldr	r0, [sp, #16]
   18e6c:	cmp	r0, r5
   18e70:	ldrcc	r1, [sp]
   18e74:	movcc	r0, #22
   18e78:	strcc	r5, [sp, #16]
   18e7c:	mov	r5, #0
   18e80:	strcc	r0, [r1]
   18e84:	cmp	r9, #0
   18e88:	beq	18f30 <myencoding_detect_russian@@Base+0x380>
   18e8c:	movw	r0, #34463	; 0x869f
   18e90:	mov	sl, #0
   18e94:	movt	r0, #1
   18e98:	add	r0, r0, #1
   18e9c:	str	r0, [sp, #4]
   18ea0:	mov	r0, #0
   18ea4:	str	r0, [sp, #8]
   18ea8:	mov	r6, r4
   18eac:	ldrsb	r0, [r6, sl]!
   18eb0:	cmn	r0, #1
   18eb4:	bgt	18eec <myencoding_detect_russian@@Base+0x33c>
   18eb8:	ldr	r7, [pc, #452]	; 19084 <myencoding_detect_russian@@Base+0x4d4>
   18ebc:	mov	r8, #0
   18ec0:	add	r7, pc, r7
   18ec4:	mov	r0, r7
   18ec8:	mov	r1, r6
   18ecc:	mov	r2, #3
   18ed0:	bl	11130 <memcmp@plt>
   18ed4:	cmp	r0, #0
   18ed8:	beq	18efc <myencoding_detect_russian@@Base+0x34c>
   18edc:	add	r8, r8, #1
   18ee0:	add	r7, r7, #8
   18ee4:	cmp	r8, #1000	; 0x3e8
   18ee8:	bcc	18ec4 <myencoding_detect_russian@@Base+0x314>
   18eec:	add	sl, sl, #1
   18ef0:	cmp	sl, r9
   18ef4:	bcc	18ea8 <myencoding_detect_russian@@Base+0x2f8>
   18ef8:	b	18f38 <myencoding_detect_russian@@Base+0x388>
   18efc:	ldr	r0, [r7, #4]
   18f00:	add	r5, r0, r5
   18f04:	ldr	r0, [sp, #4]
   18f08:	cmp	r5, r0
   18f0c:	ldr	r0, [sp, #12]
   18f10:	movcs	sl, r0
   18f14:	ldr	r0, [sp, #8]
   18f18:	add	r0, r0, #1
   18f1c:	str	r0, [sp, #8]
   18f20:	add	sl, sl, #1
   18f24:	cmp	sl, r9
   18f28:	bcc	18ea8 <myencoding_detect_russian@@Base+0x2f8>
   18f2c:	b	18f38 <myencoding_detect_russian@@Base+0x388>
   18f30:	mov	r0, #0
   18f34:	str	r0, [sp, #8]
   18f38:	movw	r1, #34463	; 0x869f
   18f3c:	mov	r3, #41	; 0x29
   18f40:	movt	r1, #1
   18f44:	cmp	r5, r1
   18f48:	bhi	19064 <myencoding_detect_russian@@Base+0x4b4>
   18f4c:	ldr	r0, [sp, #8]
   18f50:	cmp	r0, #49	; 0x31
   18f54:	mov	r0, #1
   18f58:	bhi	19068 <myencoding_detect_russian@@Base+0x4b8>
   18f5c:	ldr	r0, [sp, #16]
   18f60:	cmp	r0, r5
   18f64:	ldrcc	r1, [sp]
   18f68:	movcc	r0, #41	; 0x29
   18f6c:	strcc	r5, [sp, #16]
   18f70:	mov	r5, #0
   18f74:	strcc	r0, [r1]
   18f78:	cmp	r9, #0
   18f7c:	beq	19024 <myencoding_detect_russian@@Base+0x474>
   18f80:	movw	r0, #34463	; 0x869f
   18f84:	mov	sl, #0
   18f88:	movt	r0, #1
   18f8c:	add	r0, r0, #1
   18f90:	str	r0, [sp, #4]
   18f94:	mov	r0, #0
   18f98:	str	r0, [sp, #8]
   18f9c:	mov	r6, r4
   18fa0:	ldrsb	r0, [r6, sl]!
   18fa4:	cmn	r0, #1
   18fa8:	bgt	18fe0 <myencoding_detect_russian@@Base+0x430>
   18fac:	ldr	r7, [pc, #212]	; 19088 <myencoding_detect_russian@@Base+0x4d8>
   18fb0:	mov	r8, #0
   18fb4:	add	r7, pc, r7
   18fb8:	mov	r0, r7
   18fbc:	mov	r1, r6
   18fc0:	mov	r2, #3
   18fc4:	bl	11130 <memcmp@plt>
   18fc8:	cmp	r0, #0
   18fcc:	beq	18ff0 <myencoding_detect_russian@@Base+0x440>
   18fd0:	add	r8, r8, #1
   18fd4:	add	r7, r7, #8
   18fd8:	cmp	r8, #1000	; 0x3e8
   18fdc:	bcc	18fb8 <myencoding_detect_russian@@Base+0x408>
   18fe0:	add	sl, sl, #1
   18fe4:	cmp	sl, r9
   18fe8:	bcc	18f9c <myencoding_detect_russian@@Base+0x3ec>
   18fec:	b	1902c <myencoding_detect_russian@@Base+0x47c>
   18ff0:	ldr	r0, [r7, #4]
   18ff4:	add	r5, r0, r5
   18ff8:	ldr	r0, [sp, #4]
   18ffc:	cmp	r5, r0
   19000:	ldr	r0, [sp, #12]
   19004:	movcs	sl, r0
   19008:	ldr	r0, [sp, #8]
   1900c:	add	r0, r0, #1
   19010:	str	r0, [sp, #8]
   19014:	add	sl, sl, #1
   19018:	cmp	sl, r9
   1901c:	bcc	18f9c <myencoding_detect_russian@@Base+0x3ec>
   19020:	b	1902c <myencoding_detect_russian@@Base+0x47c>
   19024:	mov	r0, #0
   19028:	str	r0, [sp, #8]
   1902c:	movw	r1, #34463	; 0x869f
   19030:	mov	r3, #12
   19034:	movt	r1, #1
   19038:	cmp	r5, r1
   1903c:	bhi	19064 <myencoding_detect_russian@@Base+0x4b4>
   19040:	ldr	r0, [sp, #8]
   19044:	cmp	r0, #49	; 0x31
   19048:	mov	r0, #1
   1904c:	bhi	19068 <myencoding_detect_russian@@Base+0x4b8>
   19050:	ldr	r1, [sp, #16]
   19054:	mov	r0, #0
   19058:	cmp	r1, r5
   1905c:	bcc	19068 <myencoding_detect_russian@@Base+0x4b8>
   19060:	b	19070 <myencoding_detect_russian@@Base+0x4c0>
   19064:	mov	r0, #1
   19068:	ldr	r1, [sp]
   1906c:	str	r3, [r1]
   19070:	sub	sp, fp, #28
   19074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19078:	muleq	r1, r8, r9
   1907c:	andeq	lr, r1, r0, asr #16
   19080:	andeq	r0, r2, ip, asr #13
   19084:	andeq	r2, r2, r8, asr #10
   19088:	andeq	r4, r2, r4, asr #7

0001908c <myencoding_detect@@Base>:
   1908c:	push	{r4, r5, r6, sl, fp, lr}
   19090:	add	fp, sp, #16
   19094:	mov	r6, r0
   19098:	mov	r0, #0
   1909c:	mov	r4, r2
   190a0:	mov	r5, r1
   190a4:	str	r0, [r2]
   190a8:	mov	r0, r6
   190ac:	bl	10df4 <myencoding_detect_unicode@plt>
   190b0:	cmp	r0, #0
   190b4:	movne	r0, #1
   190b8:	popne	{r4, r5, r6, sl, fp, pc}
   190bc:	mov	r0, r6
   190c0:	mov	r1, r5
   190c4:	mov	r2, r4
   190c8:	pop	{r4, r5, r6, sl, fp, lr}
   190cc:	b	18bb0 <myencoding_detect_russian@@Base>

000190d0 <myencoding_name_entry_by_name@@Base>:
   190d0:	push	{r4, r5, r6, r7, fp, lr}
   190d4:	add	fp, sp, #16
   190d8:	mov	r4, r1
   190dc:	mov	r5, r0
   190e0:	ldrb	r1, [r0], r1
   190e4:	ldrb	r0, [r0, #-1]
   190e8:	ldr	r2, [pc, #184]	; 191a8 <myencoding_name_entry_by_name@@Base+0xd8>
   190ec:	ldr	r7, [pc, #184]	; 191ac <myencoding_name_entry_by_name@@Base+0xdc>
   190f0:	add	r2, pc, r2
   190f4:	add	r7, pc, r7
   190f8:	ldrb	r1, [r2, r1]
   190fc:	ldrb	r0, [r2, r0]
   19100:	mul	r1, r1, r4
   19104:	mul	r0, r1, r0
   19108:	movw	r1, #11575	; 0x2d37
   1910c:	movt	r1, #14546	; 0x38d2
   19110:	umull	r1, r2, r0, r1
   19114:	sub	r1, r0, r2
   19118:	add	r1, r2, r1, lsr #1
   1911c:	movw	r2, #419	; 0x1a3
   19120:	lsr	r1, r1, #8
   19124:	mls	r0, r1, r2, r0
   19128:	add	r1, r0, #1
   1912c:	rsb	r0, r1, r1, lsl #3
   19130:	add	r0, r7, r0, lsl #2
   19134:	ldr	r0, [r0, #8]
   19138:	cmp	r0, #0
   1913c:	bne	19158 <myencoding_name_entry_by_name@@Base+0x88>
   19140:	b	1919c <myencoding_name_entry_by_name@@Base+0xcc>
   19144:	rsb	r0, r1, r1, lsl #3
   19148:	add	r0, r7, r0, lsl #2
   1914c:	ldr	r0, [r0, #8]
   19150:	cmp	r0, #0
   19154:	beq	1919c <myencoding_name_entry_by_name@@Base+0xcc>
   19158:	rsb	r1, r1, r1, lsl #3
   1915c:	add	r6, r7, r1, lsl #2
   19160:	ldr	r1, [r6, #12]
   19164:	cmp	r1, r4
   19168:	bne	19190 <myencoding_name_entry_by_name@@Base+0xc0>
   1916c:	mov	r1, r5
   19170:	mov	r2, r4
   19174:	bl	11298 <mycore_strncasecmp@plt>
   19178:	cmp	r0, #0
   1917c:	beq	191a0 <myencoding_name_entry_by_name@@Base+0xd0>
   19180:	ldr	r1, [r6, #20]
   19184:	cmp	r1, #0
   19188:	bne	19144 <myencoding_name_entry_by_name@@Base+0x74>
   1918c:	b	1919c <myencoding_name_entry_by_name@@Base+0xcc>
   19190:	bhi	1919c <myencoding_name_entry_by_name@@Base+0xcc>
   19194:	ldr	r1, [r6, #20]
   19198:	b	19144 <myencoding_name_entry_by_name@@Base+0x74>
   1919c:	mov	r6, #0
   191a0:	mov	r0, r6
   191a4:	pop	{r4, r5, r6, r7, fp, pc}
   191a8:	strdeq	r6, [r2], -r8
   191ac:	andeq	sl, pc, r8, ror #21

000191b0 <myencoding_by_name@@Base>:
   191b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   191b4:	add	fp, sp, #24
   191b8:	mov	r6, r1
   191bc:	mov	r7, r0
   191c0:	ldrb	r1, [r0], r1
   191c4:	mov	r8, r2
   191c8:	mov	r9, #0
   191cc:	ldrb	r0, [r0, #-1]
   191d0:	ldr	r2, [pc, #196]	; 1929c <myencoding_by_name@@Base+0xec>
   191d4:	ldr	r4, [pc, #196]	; 192a0 <myencoding_by_name@@Base+0xf0>
   191d8:	add	r2, pc, r2
   191dc:	add	r4, pc, r4
   191e0:	ldrb	r1, [r2, r1]
   191e4:	ldrb	r0, [r2, r0]
   191e8:	mul	r1, r1, r6
   191ec:	mul	r0, r1, r0
   191f0:	movw	r1, #11575	; 0x2d37
   191f4:	movt	r1, #14546	; 0x38d2
   191f8:	umull	r1, r2, r0, r1
   191fc:	sub	r1, r0, r2
   19200:	add	r1, r2, r1, lsr #1
   19204:	movw	r2, #419	; 0x1a3
   19208:	lsr	r1, r1, #8
   1920c:	mls	r0, r1, r2, r0
   19210:	add	r1, r0, #1
   19214:	rsb	r0, r1, r1, lsl #3
   19218:	add	r0, r4, r0, lsl #2
   1921c:	ldr	r0, [r0, #8]
   19220:	cmp	r0, #0
   19224:	bne	19240 <myencoding_by_name@@Base+0x90>
   19228:	b	19294 <myencoding_by_name@@Base+0xe4>
   1922c:	rsb	r0, r1, r1, lsl #3
   19230:	add	r0, r4, r0, lsl #2
   19234:	ldr	r0, [r0, #8]
   19238:	cmp	r0, #0
   1923c:	beq	19294 <myencoding_by_name@@Base+0xe4>
   19240:	rsb	r1, r1, r1, lsl #3
   19244:	add	r5, r4, r1, lsl #2
   19248:	ldr	r1, [r5, #12]
   1924c:	cmp	r1, r6
   19250:	bne	19278 <myencoding_by_name@@Base+0xc8>
   19254:	mov	r1, r7
   19258:	mov	r2, r6
   1925c:	bl	11298 <mycore_strncasecmp@plt>
   19260:	cmp	r0, #0
   19264:	beq	19284 <myencoding_by_name@@Base+0xd4>
   19268:	ldr	r1, [r5, #20]
   1926c:	cmp	r1, #0
   19270:	bne	1922c <myencoding_by_name@@Base+0x7c>
   19274:	b	19294 <myencoding_by_name@@Base+0xe4>
   19278:	bhi	19294 <myencoding_by_name@@Base+0xe4>
   1927c:	ldr	r1, [r5, #20]
   19280:	b	1922c <myencoding_by_name@@Base+0x7c>
   19284:	cmp	r8, #0
   19288:	mov	r9, #1
   1928c:	ldrne	r0, [r5, #16]
   19290:	strne	r0, [r8]
   19294:	mov	r0, r9
   19298:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1929c:	andeq	r6, r2, r0, lsl r1
   192a0:	andeq	sl, pc, r0, lsl #20

000192a4 <myencoding_name_by_id@@Base>:
   192a4:	cmp	r0, #42	; 0x2a
   192a8:	bcc	192c0 <myencoding_name_by_id@@Base+0x1c>
   192ac:	mov	r0, #0
   192b0:	cmp	r1, #0
   192b4:	strne	r0, [r1]
   192b8:	bxne	lr
   192bc:	bx	lr
   192c0:	cmp	r1, #0
   192c4:	ldrne	r2, [pc, #28]	; 192e8 <myencoding_name_by_id@@Base+0x44>
   192c8:	addne	r2, pc, r2
   192cc:	addne	r2, r2, r0, lsl #3
   192d0:	ldrne	r2, [r2, #4]
   192d4:	strne	r2, [r1]
   192d8:	ldr	r1, [pc, #12]	; 192ec <myencoding_name_by_id@@Base+0x48>
   192dc:	add	r1, pc, r1
   192e0:	ldr	r0, [r1, r0, lsl #3]
   192e4:	bx	lr
   192e8:	andeq	sp, pc, ip, lsl pc	; <UNPREDICTABLE>
   192ec:	andeq	sp, pc, r8, lsl #30

000192f0 <myencoding_extracting_character_encoding_from_charset@@Base>:
   192f0:	push	{fp, lr}
   192f4:	mov	fp, sp
   192f8:	sub	sp, sp, #8
   192fc:	mov	r3, #0
   19300:	str	r3, [sp]
   19304:	mov	r3, #0
   19308:	bl	11688 <myencoding_extracting_character_encoding_from_charset_with_found@plt>
   1930c:	mov	sp, fp
   19310:	pop	{fp, pc}

00019314 <myencoding_extracting_character_encoding_from_charset_with_found@@Base>:
   19314:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19318:	add	fp, sp, #28
   1931c:	sub	sp, sp, #12
   19320:	mov	r7, r1
   19324:	ldr	r1, [fp, #8]
   19328:	mov	r4, r0
   1932c:	mov	r0, #2
   19330:	cmp	r3, #0
   19334:	mov	r6, #0
   19338:	str	r2, [sp, #8]
   1933c:	str	r0, [r2]
   19340:	movne	r0, #0
   19344:	strne	r0, [r3]
   19348:	cmp	r1, #0
   1934c:	movne	r0, #0
   19350:	strne	r0, [r1]
   19354:	cmp	r7, #8
   19358:	bcc	19450 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x13c>
   1935c:	str	r3, [sp, #4]
   19360:	movw	sl, #27
   19364:	mov	r9, #0
   19368:	mov	r8, #7
   1936c:	mov	r6, #1
   19370:	ldr	r5, [pc, #1580]	; 199a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x690>
   19374:	movt	sl, #128	; 0x80
   19378:	add	r5, pc, r5
   1937c:	add	r1, r4, r9
   19380:	mov	r0, r5
   19384:	bl	10e6c <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   19388:	cmp	r0, #0
   1938c:	bne	193a8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x94>
   19390:	add	r8, r9, #8
   19394:	add	r9, r9, #1
   19398:	cmp	r8, r7
   1939c:	bcc	1937c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x68>
   193a0:	b	193e8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xd4>
   193a4:	add	r8, r8, #1
   193a8:	cmp	r8, r7
   193ac:	bcs	193c8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb4>
   193b0:	ldrb	r0, [r4, r8]
   193b4:	sub	r0, r0, #9
   193b8:	cmp	r0, #23
   193bc:	bhi	193c8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb4>
   193c0:	tst	sl, r6, lsl r0
   193c4:	bne	193a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x90>
   193c8:	ldrb	r0, [r4, r8]
   193cc:	cmp	r0, #61	; 0x3d
   193d0:	beq	193f8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xe4>
   193d4:	mov	r9, r8
   193d8:	add	r8, r9, #8
   193dc:	add	r9, r9, #1
   193e0:	cmp	r8, r7
   193e4:	bcc	1937c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x68>
   193e8:	mov	r6, #0
   193ec:	mov	r0, r6
   193f0:	sub	sp, fp, #28
   193f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   193f8:	ldr	ip, [fp, #8]
   193fc:	ldr	lr, [sp, #4]
   19400:	add	r0, r8, #1
   19404:	mov	r6, #0
   19408:	cmp	r0, r7
   1940c:	bcs	19450 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x13c>
   19410:	add	r1, r4, r8
   19414:	mov	r0, #0
   19418:	mov	r2, #1
   1941c:	add	r4, r1, r0
   19420:	ldrb	r3, [r4, #1]
   19424:	sub	r6, r3, #9
   19428:	cmp	r6, #30
   1942c:	bhi	194fc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1e8>
   19430:	tst	sl, r2, lsl r6
   19434:	beq	1945c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x148>
   19438:	add	r0, r0, #1
   1943c:	add	r3, r8, r0
   19440:	add	r3, r3, #1
   19444:	cmp	r3, r7
   19448:	bcc	1941c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x108>
   1944c:	mov	r6, #0
   19450:	mov	r0, r6
   19454:	sub	sp, fp, #28
   19458:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1945c:	cmp	r6, #25
   19460:	beq	194b4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1a0>
   19464:	cmp	r6, #30
   19468:	bne	194fc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1e8>
   1946c:	add	r2, r8, r0
   19470:	mov	r6, #0
   19474:	add	r3, r2, #2
   19478:	cmp	r3, r7
   1947c:	bcs	19450 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x13c>
   19480:	mov	r5, #0
   19484:	add	r3, r1, r5
   19488:	add	r3, r3, r0
   1948c:	ldrb	r6, [r3, #2]
   19490:	cmp	r6, #39	; 0x27
   19494:	beq	1955c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x248>
   19498:	add	r3, r2, r5
   1949c:	add	r5, r5, #1
   194a0:	mov	r6, #0
   194a4:	add	r3, r3, #3
   194a8:	cmp	r3, r7
   194ac:	bcc	19484 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x170>
   194b0:	b	19450 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x13c>
   194b4:	add	r2, r8, r0
   194b8:	mov	r6, #0
   194bc:	add	r3, r2, #2
   194c0:	cmp	r3, r7
   194c4:	bcs	19450 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x13c>
   194c8:	mov	r5, #0
   194cc:	add	r3, r1, r5
   194d0:	add	r3, r3, r0
   194d4:	ldrb	r6, [r3, #2]
   194d8:	cmp	r6, #34	; 0x22
   194dc:	beq	19630 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x31c>
   194e0:	add	r3, r2, r5
   194e4:	add	r5, r5, #1
   194e8:	mov	r6, #0
   194ec:	add	r3, r3, #3
   194f0:	cmp	r3, r7
   194f4:	bcc	194cc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1b8>
   194f8:	b	19450 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x13c>
   194fc:	add	r2, r8, r0
   19500:	mov	r6, #0
   19504:	add	r2, r2, #1
   19508:	cmp	r2, r7
   1950c:	bcs	19450 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x13c>
   19510:	mvn	r2, #8
   19514:	mov	r5, #1
   19518:	uxtab	r4, r2, r3
   1951c:	cmp	r4, #23
   19520:	bls	19540 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x22c>
   19524:	b	19704 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x3f0>
   19528:	add	r3, r1, r0
   1952c:	add	r0, r0, #1
   19530:	ldrb	r3, [r3, #2]
   19534:	uxtab	r4, r2, r3
   19538:	cmp	r4, #23
   1953c:	bhi	19704 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x3f0>
   19540:	tst	sl, r5, lsl r4
   19544:	beq	19704 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x3f0>
   19548:	add	r3, r8, r0
   1954c:	add	r3, r3, #2
   19550:	cmp	r3, r7
   19554:	bcc	19528 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x214>
   19558:	b	19450 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x13c>
   1955c:	cmp	lr, #0
   19560:	mov	r6, #0
   19564:	addne	r0, r4, #2
   19568:	strne	r0, [lr]
   1956c:	cmp	ip, #0
   19570:	strne	r5, [ip]
   19574:	ldrb	r0, [r3, #1]
   19578:	ldr	r1, [pc, #1080]	; 199b8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x6a4>
   1957c:	ldrb	r2, [r4, #2]!
   19580:	ldr	r8, [pc, #1076]	; 199bc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x6a8>
   19584:	add	r1, pc, r1
   19588:	add	r8, pc, r8
   1958c:	ldrb	r0, [r1, r0]
   19590:	ldrb	r1, [r1, r2]
   19594:	mul	r1, r5, r1
   19598:	mul	r0, r1, r0
   1959c:	movw	r1, #11575	; 0x2d37
   195a0:	movt	r1, #14546	; 0x38d2
   195a4:	umull	r1, r2, r0, r1
   195a8:	sub	r1, r0, r2
   195ac:	add	r1, r2, r1, lsr #1
   195b0:	movw	r2, #419	; 0x1a3
   195b4:	lsr	r1, r1, #8
   195b8:	mls	r0, r1, r2, r0
   195bc:	add	r1, r0, #1
   195c0:	rsb	r0, r1, r1, lsl #3
   195c4:	add	r0, r8, r0, lsl #2
   195c8:	ldr	r0, [r0, #8]
   195cc:	cmp	r0, #0
   195d0:	bne	195ec <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2d8>
   195d4:	b	19450 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x13c>
   195d8:	rsb	r0, r1, r1, lsl #3
   195dc:	add	r0, r8, r0, lsl #2
   195e0:	ldr	r0, [r0, #8]
   195e4:	cmp	r0, #0
   195e8:	beq	19450 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x13c>
   195ec:	rsb	r1, r1, r1, lsl #3
   195f0:	add	r7, r8, r1, lsl #2
   195f4:	ldr	r1, [r7, #12]
   195f8:	cmp	r1, r5
   195fc:	bne	19624 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x310>
   19600:	mov	r1, r4
   19604:	mov	r2, r5
   19608:	bl	11298 <mycore_strncasecmp@plt>
   1960c:	cmp	r0, #0
   19610:	beq	19730 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x41c>
   19614:	ldr	r1, [r7, #20]
   19618:	cmp	r1, #0
   1961c:	bne	195d8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2c4>
   19620:	b	19450 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x13c>
   19624:	bhi	19450 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x13c>
   19628:	ldr	r1, [r7, #20]
   1962c:	b	195d8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2c4>
   19630:	cmp	lr, #0
   19634:	mov	r6, #0
   19638:	addne	r0, r4, #2
   1963c:	strne	r0, [lr]
   19640:	cmp	ip, #0
   19644:	strne	r5, [ip]
   19648:	ldrb	r0, [r3, #1]
   1964c:	ldr	r1, [pc, #860]	; 199b0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x69c>
   19650:	ldrb	r2, [r4, #2]!
   19654:	ldr	r8, [pc, #856]	; 199b4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x6a0>
   19658:	add	r1, pc, r1
   1965c:	add	r8, pc, r8
   19660:	ldrb	r0, [r1, r0]
   19664:	ldrb	r1, [r1, r2]
   19668:	mul	r1, r5, r1
   1966c:	mul	r0, r1, r0
   19670:	movw	r1, #11575	; 0x2d37
   19674:	movt	r1, #14546	; 0x38d2
   19678:	umull	r1, r2, r0, r1
   1967c:	sub	r1, r0, r2
   19680:	add	r1, r2, r1, lsr #1
   19684:	movw	r2, #419	; 0x1a3
   19688:	lsr	r1, r1, #8
   1968c:	mls	r0, r1, r2, r0
   19690:	add	r1, r0, #1
   19694:	rsb	r0, r1, r1, lsl #3
   19698:	add	r0, r8, r0, lsl #2
   1969c:	ldr	r0, [r0, #8]
   196a0:	cmp	r0, #0
   196a4:	bne	196c0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x3ac>
   196a8:	b	19450 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x13c>
   196ac:	rsb	r0, r1, r1, lsl #3
   196b0:	add	r0, r8, r0, lsl #2
   196b4:	ldr	r0, [r0, #8]
   196b8:	cmp	r0, #0
   196bc:	beq	19450 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x13c>
   196c0:	rsb	r1, r1, r1, lsl #3
   196c4:	add	r7, r8, r1, lsl #2
   196c8:	ldr	r1, [r7, #12]
   196cc:	cmp	r1, r5
   196d0:	bne	196f8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x3e4>
   196d4:	mov	r1, r4
   196d8:	mov	r2, r5
   196dc:	bl	11298 <mycore_strncasecmp@plt>
   196e0:	cmp	r0, #0
   196e4:	beq	19730 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x41c>
   196e8:	ldr	r1, [r7, #20]
   196ec:	cmp	r1, #0
   196f0:	bne	196ac <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x398>
   196f4:	b	19450 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x13c>
   196f8:	bhi	19450 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x13c>
   196fc:	ldr	r1, [r7, #20]
   19700:	b	196ac <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x398>
   19704:	add	sl, r8, r0
   19708:	add	r1, r1, r0
   1970c:	add	r2, sl, #1
   19710:	add	r4, r1, #1
   19714:	cmp	r2, r7
   19718:	bcs	1986c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x558>
   1971c:	uxtb	r3, r3
   19720:	cmp	r3, #59	; 0x3b
   19724:	bne	19750 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x43c>
   19728:	mov	r1, r2
   1972c:	b	19770 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x45c>
   19730:	ldr	r1, [sp, #8]
   19734:	mov	r6, #1
   19738:	cmp	r1, #0
   1973c:	ldrne	r0, [r7, #16]
   19740:	strne	r0, [r1]
   19744:	mov	r0, r6
   19748:	sub	sp, fp, #28
   1974c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19750:	add	r3, r1, #2
   19754:	add	r1, r2, #1
   19758:	cmp	r1, r7
   1975c:	bcs	19868 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x554>
   19760:	ldrb	r2, [r3], #1
   19764:	cmp	r2, #59	; 0x3b
   19768:	mov	r2, r1
   1976c:	bne	19754 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x440>
   19770:	mvn	r2, r8
   19774:	cmp	lr, #0
   19778:	add	r2, r1, r2
   1977c:	strne	r4, [lr]
   19780:	cmp	ip, #0
   19784:	sub	r9, r2, r0
   19788:	mvn	r2, #1
   1978c:	sub	r2, r2, r8
   19790:	strne	r9, [ip]
   19794:	add	r2, r1, r2
   19798:	sub	r0, r2, r0
   1979c:	ldrb	r0, [r4, r0]
   197a0:	ldr	r2, [pc, #512]	; 199a8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x694>
   197a4:	ldrb	r3, [r4]
   197a8:	ldr	r7, [pc, #508]	; 199ac <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x698>
   197ac:	add	r2, pc, r2
   197b0:	add	r7, pc, r7
   197b4:	ldrb	r0, [r2, r0]
   197b8:	ldrb	r2, [r2, r3]
   197bc:	mul	r2, r9, r2
   197c0:	mul	r0, r2, r0
   197c4:	movw	r2, #11575	; 0x2d37
   197c8:	movt	r2, #14546	; 0x38d2
   197cc:	umull	r2, r3, r0, r2
   197d0:	sub	r2, r0, r3
   197d4:	add	r2, r3, r2, lsr #1
   197d8:	movw	r3, #419	; 0x1a3
   197dc:	lsr	r2, r2, #8
   197e0:	mls	r0, r2, r3, r0
   197e4:	add	r2, r0, #1
   197e8:	rsb	r0, r2, r2, lsl #3
   197ec:	add	r0, r7, r0, lsl #2
   197f0:	ldr	r0, [r0, #8]
   197f4:	cmp	r0, #0
   197f8:	beq	19450 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x13c>
   197fc:	mov	r8, r4
   19800:	rsb	r5, r1, #0
   19804:	rsb	r1, r2, r2, lsl #3
   19808:	add	r4, r7, r1, lsl #2
   1980c:	ldr	r1, [r4, #12]
   19810:	add	r2, r5, r1
   19814:	add	r2, sl, r2
   19818:	cmn	r2, #1
   1981c:	beq	19830 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x51c>
   19820:	cmp	r1, r9
   19824:	bhi	19450 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x13c>
   19828:	ldr	r2, [r4, #20]
   1982c:	b	19850 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x53c>
   19830:	mov	r1, r8
   19834:	mov	r2, r9
   19838:	bl	11298 <mycore_strncasecmp@plt>
   1983c:	cmp	r0, #0
   19840:	beq	19984 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x670>
   19844:	ldr	r2, [r4, #20]
   19848:	cmp	r2, #0
   1984c:	beq	19450 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x13c>
   19850:	rsb	r0, r2, r2, lsl #3
   19854:	add	r0, r7, r0, lsl #2
   19858:	ldr	r0, [r0, #8]
   1985c:	cmp	r0, #0
   19860:	bne	19804 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x4f0>
   19864:	b	19450 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x13c>
   19868:	add	r2, r2, #1
   1986c:	mvn	r1, r8
   19870:	cmp	lr, #0
   19874:	add	r1, r2, r1
   19878:	strne	r4, [lr]
   1987c:	cmp	ip, #0
   19880:	sub	r9, r1, r0
   19884:	mvn	r1, #1
   19888:	sub	r1, r1, r8
   1988c:	strne	r9, [ip]
   19890:	add	r1, r2, r1
   19894:	sub	r0, r1, r0
   19898:	ldrb	r0, [r4, r0]
   1989c:	ldr	r1, [pc, #284]	; 199c0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x6ac>
   198a0:	ldrb	r3, [r4]
   198a4:	ldr	r7, [pc, #280]	; 199c4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x6b0>
   198a8:	add	r1, pc, r1
   198ac:	add	r7, pc, r7
   198b0:	ldrb	r0, [r1, r0]
   198b4:	ldrb	r1, [r1, r3]
   198b8:	mul	r1, r9, r1
   198bc:	mul	r0, r1, r0
   198c0:	movw	r1, #11575	; 0x2d37
   198c4:	movt	r1, #14546	; 0x38d2
   198c8:	umull	r1, r3, r0, r1
   198cc:	sub	r1, r0, r3
   198d0:	add	r1, r3, r1, lsr #1
   198d4:	movw	r3, #419	; 0x1a3
   198d8:	lsr	r1, r1, #8
   198dc:	mls	r0, r1, r3, r0
   198e0:	add	r1, r0, #1
   198e4:	rsb	r0, r1, r1, lsl #3
   198e8:	add	r0, r7, r0, lsl #2
   198ec:	ldr	r0, [r0, #8]
   198f0:	cmp	r0, #0
   198f4:	beq	19450 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x13c>
   198f8:	mov	r8, r4
   198fc:	rsb	r4, r2, #0
   19900:	rsb	r1, r1, r1, lsl #3
   19904:	add	r5, r7, r1, lsl #2
   19908:	ldr	r1, [r5, #12]
   1990c:	add	r2, r4, r1
   19910:	add	r2, sl, r2
   19914:	cmn	r2, #1
   19918:	beq	1992c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x618>
   1991c:	cmp	r1, r9
   19920:	bhi	19450 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x13c>
   19924:	ldr	r1, [r5, #20]
   19928:	b	1994c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x638>
   1992c:	mov	r1, r8
   19930:	mov	r2, r9
   19934:	bl	11298 <mycore_strncasecmp@plt>
   19938:	cmp	r0, #0
   1993c:	beq	19964 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x650>
   19940:	ldr	r1, [r5, #20]
   19944:	cmp	r1, #0
   19948:	beq	19450 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x13c>
   1994c:	rsb	r0, r1, r1, lsl #3
   19950:	add	r0, r7, r0, lsl #2
   19954:	ldr	r0, [r0, #8]
   19958:	cmp	r0, #0
   1995c:	bne	19900 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x5ec>
   19960:	b	19450 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x13c>
   19964:	ldr	r1, [sp, #8]
   19968:	mov	r6, #1
   1996c:	cmp	r1, #0
   19970:	ldrne	r0, [r5, #16]
   19974:	strne	r0, [r1]
   19978:	mov	r0, r6
   1997c:	sub	sp, fp, #28
   19980:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19984:	ldr	r1, [sp, #8]
   19988:	mov	r6, #1
   1998c:	cmp	r1, #0
   19990:	ldrne	r0, [r4, #16]
   19994:	strne	r0, [r1]
   19998:	mov	r0, r6
   1999c:	sub	sp, fp, #28
   199a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   199a4:	andeq	r6, r2, r0, ror r1
   199a8:	andeq	r5, r2, ip, lsr fp
   199ac:	andeq	sl, pc, ip, lsr #8
   199b0:	muleq	r2, r0, ip
   199b4:	andeq	sl, pc, r0, lsl #11
   199b8:	andeq	r5, r2, r4, ror #26
   199bc:	andeq	sl, pc, r4, asr r6	; <UNPREDICTABLE>
   199c0:	andeq	r5, r2, r0, asr #20
   199c4:	andeq	sl, pc, r0, lsr r3	; <UNPREDICTABLE>

000199c8 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base>:
   199c8:	push	{r4, sl, fp, lr}
   199cc:	add	fp, sp, #8
   199d0:	mov	ip, r0
   199d4:	ldr	r0, [r3]
   199d8:	ldr	lr, [r1]
   199dc:	sub	r0, lr, r0
   199e0:	str	r0, [r3, #4]
   199e4:	mov	r0, #0
   199e8:	cmp	lr, r2
   199ec:	bcc	19a00 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x38>
   199f0:	b	19af8 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x130>
   199f4:	add	lr, lr, #1
   199f8:	cmp	lr, r2
   199fc:	bcs	19af8 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x130>
   19a00:	ldrb	r3, [ip, lr]
   19a04:	sub	r3, r3, #9
   19a08:	cmp	r3, #52	; 0x34
   19a0c:	bhi	19af8 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x130>
   19a10:	add	r4, pc, #4
   19a14:	ldr	r3, [r4, r3, lsl #2]
   19a18:	add	pc, r4, r3
   19a1c:			; <UNDEFINED> instruction: 0xffffffd8
   19a20:			; <UNDEFINED> instruction: 0xffffffd8
   19a24:	ldrdeq	r0, [r0], -ip
   19a28:			; <UNDEFINED> instruction: 0xffffffd8
   19a2c:			; <UNDEFINED> instruction: 0xffffffd8
   19a30:	ldrdeq	r0, [r0], -ip
   19a34:	ldrdeq	r0, [r0], -ip
   19a38:	ldrdeq	r0, [r0], -ip
   19a3c:	ldrdeq	r0, [r0], -ip
   19a40:	ldrdeq	r0, [r0], -ip
   19a44:	ldrdeq	r0, [r0], -ip
   19a48:	ldrdeq	r0, [r0], -ip
   19a4c:	ldrdeq	r0, [r0], -ip
   19a50:	ldrdeq	r0, [r0], -ip
   19a54:	ldrdeq	r0, [r0], -ip
   19a58:	ldrdeq	r0, [r0], -ip
   19a5c:	ldrdeq	r0, [r0], -ip
   19a60:	ldrdeq	r0, [r0], -ip
   19a64:	ldrdeq	r0, [r0], -ip
   19a68:	ldrdeq	r0, [r0], -ip
   19a6c:	ldrdeq	r0, [r0], -ip
   19a70:	ldrdeq	r0, [r0], -ip
   19a74:	ldrdeq	r0, [r0], -ip
   19a78:			; <UNDEFINED> instruction: 0xffffffd8
   19a7c:	ldrdeq	r0, [r0], -ip
   19a80:	ldrdeq	r0, [r0], -ip
   19a84:	ldrdeq	r0, [r0], -ip
   19a88:	ldrdeq	r0, [r0], -ip
   19a8c:	ldrdeq	r0, [r0], -ip
   19a90:	ldrdeq	r0, [r0], -ip
   19a94:	ldrdeq	r0, [r0], -ip
   19a98:	ldrdeq	r0, [r0], -ip
   19a9c:	ldrdeq	r0, [r0], -ip
   19aa0:	ldrdeq	r0, [r0], -ip
   19aa4:	ldrdeq	r0, [r0], -ip
   19aa8:	ldrdeq	r0, [r0], -ip
   19aac:	ldrdeq	r0, [r0], -ip
   19ab0:	ldrdeq	r0, [r0], -ip
   19ab4:			; <UNDEFINED> instruction: 0xffffffd8
   19ab8:	ldrdeq	r0, [r0], -ip
   19abc:	ldrdeq	r0, [r0], -ip
   19ac0:	ldrdeq	r0, [r0], -ip
   19ac4:	ldrdeq	r0, [r0], -ip
   19ac8:	ldrdeq	r0, [r0], -ip
   19acc:	ldrdeq	r0, [r0], -ip
   19ad0:	ldrdeq	r0, [r0], -ip
   19ad4:	ldrdeq	r0, [r0], -ip
   19ad8:	ldrdeq	r0, [r0], -ip
   19adc:	ldrdeq	r0, [r0], -ip
   19ae0:	ldrdeq	r0, [r0], -ip
   19ae4:	ldrdeq	r0, [r0], -ip
   19ae8:	ldrdeq	r0, [r0], -ip
   19aec:	ldrdeq	r0, [r0], -r4
   19af0:	add	lr, lr, #1
   19af4:	mov	r0, #1
   19af8:	str	lr, [r1]
   19afc:	pop	{r4, sl, fp, pc}

00019b00 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base>:
   19b00:	push	{r4, r5, fp, lr}
   19b04:	add	fp, sp, #8
   19b08:	ldr	lr, [fp, #8]
   19b0c:	cmp	r1, r2
   19b10:	bcs	19c28 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x128>
   19b14:	add	r4, r1, #2
   19b18:	add	ip, r0, r4
   19b1c:	ldrb	r1, [ip, #-2]
   19b20:	sub	r1, r1, #9
   19b24:	cmp	r1, #53	; 0x35
   19b28:	bhi	19c38 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x138>
   19b2c:	add	r5, pc, #4
   19b30:	ldr	r1, [r5, r1, lsl #2]
   19b34:	add	pc, r5, r1
   19b38:	ldrdeq	r0, [r0], -r8
   19b3c:	ldrdeq	r0, [r0], -r8
   19b40:	andeq	r0, r0, r0, lsl #2
   19b44:	ldrdeq	r0, [r0], -r8
   19b48:	ldrdeq	r0, [r0], -r8
   19b4c:	andeq	r0, r0, r0, lsl #2
   19b50:	andeq	r0, r0, r0, lsl #2
   19b54:	andeq	r0, r0, r0, lsl #2
   19b58:	andeq	r0, r0, r0, lsl #2
   19b5c:	andeq	r0, r0, r0, lsl #2
   19b60:	andeq	r0, r0, r0, lsl #2
   19b64:	andeq	r0, r0, r0, lsl #2
   19b68:	andeq	r0, r0, r0, lsl #2
   19b6c:	andeq	r0, r0, r0, lsl #2
   19b70:	andeq	r0, r0, r0, lsl #2
   19b74:	andeq	r0, r0, r0, lsl #2
   19b78:	andeq	r0, r0, r0, lsl #2
   19b7c:	andeq	r0, r0, r0, lsl #2
   19b80:	andeq	r0, r0, r0, lsl #2
   19b84:	andeq	r0, r0, r0, lsl #2
   19b88:	andeq	r0, r0, r0, lsl #2
   19b8c:	andeq	r0, r0, r0, lsl #2
   19b90:	andeq	r0, r0, r0, lsl #2
   19b94:	ldrdeq	r0, [r0], -r8
   19b98:	andeq	r0, r0, r0, lsl #2
   19b9c:	andeq	r0, r0, r8, lsr r2
   19ba0:	andeq	r0, r0, r0, lsl #2
   19ba4:	andeq	r0, r0, r0, lsl #2
   19ba8:	andeq	r0, r0, r0, lsl #2
   19bac:	andeq	r0, r0, r0, lsl #2
   19bb0:	andeq	r0, r0, r0, ror r2
   19bb4:	andeq	r0, r0, r0, lsl #2
   19bb8:	andeq	r0, r0, r0, lsl #2
   19bbc:	andeq	r0, r0, r0, lsl #2
   19bc0:	andeq	r0, r0, r0, lsl #2
   19bc4:	andeq	r0, r0, r0, lsl #2
   19bc8:	andeq	r0, r0, r0, lsl #2
   19bcc:	andeq	r0, r0, r0, lsl #2
   19bd0:	andeq	r0, r0, r0, lsl #2
   19bd4:	andeq	r0, r0, r0, lsl #2
   19bd8:	andeq	r0, r0, r0, lsl #2
   19bdc:	andeq	r0, r0, r0, lsl #2
   19be0:	andeq	r0, r0, r0, lsl #2
   19be4:	andeq	r0, r0, r0, lsl #2
   19be8:	andeq	r0, r0, r0, lsl #2
   19bec:	andeq	r0, r0, r0, lsl #2
   19bf0:	andeq	r0, r0, r0, lsl #2
   19bf4:	andeq	r0, r0, r0, lsl #2
   19bf8:	andeq	r0, r0, r0, lsl #2
   19bfc:	andeq	r0, r0, r0, lsl #2
   19c00:	andeq	r0, r0, r0, lsl #2
   19c04:	andeq	r0, r0, r0, lsl #2
   19c08:	andeq	r0, r0, r0, lsl #2
   19c0c:			; <UNDEFINED> instruction: 0x000002bc
   19c10:	sub	r5, r4, #1
   19c14:	add	r1, r4, #1
   19c18:	cmp	r5, r2
   19c1c:	mov	r4, r1
   19c20:	bcc	19b18 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x18>
   19c24:	sub	r1, r1, #2
   19c28:	mov	r0, #1
   19c2c:	strb	r0, [lr]
   19c30:	mov	r0, r1
   19c34:	pop	{r4, r5, fp, pc}
   19c38:	sub	lr, r4, #2
   19c3c:	cmp	lr, r2
   19c40:	str	lr, [r3, #8]
   19c44:	bcs	19e08 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x308>
   19c48:	mov	r0, #0
   19c4c:	add	r1, ip, r0
   19c50:	ldrb	r1, [r1, #-2]
   19c54:	sub	r1, r1, #9
   19c58:	cmp	r1, #53	; 0x35
   19c5c:	bhi	19d44 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x244>
   19c60:	add	r5, pc, #4
   19c64:	ldr	r1, [r5, r1, lsl #2]
   19c68:	add	pc, r5, r1
   19c6c:	andeq	r0, r0, r8, ror #3
   19c70:	andeq	r0, r0, r8, ror #3
   19c74:	ldrdeq	r0, [r0], -r8
   19c78:	andeq	r0, r0, r8, ror #3
   19c7c:	andeq	r0, r0, r8, ror #3
   19c80:	ldrdeq	r0, [r0], -r8
   19c84:	ldrdeq	r0, [r0], -r8
   19c88:	ldrdeq	r0, [r0], -r8
   19c8c:	ldrdeq	r0, [r0], -r8
   19c90:	ldrdeq	r0, [r0], -r8
   19c94:	ldrdeq	r0, [r0], -r8
   19c98:	ldrdeq	r0, [r0], -r8
   19c9c:	ldrdeq	r0, [r0], -r8
   19ca0:	ldrdeq	r0, [r0], -r8
   19ca4:	ldrdeq	r0, [r0], -r8
   19ca8:	ldrdeq	r0, [r0], -r8
   19cac:	ldrdeq	r0, [r0], -r8
   19cb0:	ldrdeq	r0, [r0], -r8
   19cb4:	ldrdeq	r0, [r0], -r8
   19cb8:	ldrdeq	r0, [r0], -r8
   19cbc:	ldrdeq	r0, [r0], -r8
   19cc0:	ldrdeq	r0, [r0], -r8
   19cc4:	ldrdeq	r0, [r0], -r8
   19cc8:	andeq	r0, r0, r8, ror #3
   19ccc:	ldrdeq	r0, [r0], -r8
   19cd0:	ldrdeq	r0, [r0], -r8
   19cd4:	ldrdeq	r0, [r0], -r8
   19cd8:	ldrdeq	r0, [r0], -r8
   19cdc:	ldrdeq	r0, [r0], -r8
   19ce0:	ldrdeq	r0, [r0], -r8
   19ce4:	ldrdeq	r0, [r0], -r8
   19ce8:	ldrdeq	r0, [r0], -r8
   19cec:	ldrdeq	r0, [r0], -r8
   19cf0:	ldrdeq	r0, [r0], -r8
   19cf4:	ldrdeq	r0, [r0], -r8
   19cf8:	ldrdeq	r0, [r0], -r8
   19cfc:	ldrdeq	r0, [r0], -r8
   19d00:	ldrdeq	r0, [r0], -r8
   19d04:	ldrdeq	r0, [r0], -r8
   19d08:	ldrdeq	r0, [r0], -r8
   19d0c:	ldrdeq	r0, [r0], -r8
   19d10:	ldrdeq	r0, [r0], -r8
   19d14:	ldrdeq	r0, [r0], -r8
   19d18:	ldrdeq	r0, [r0], -r8
   19d1c:	ldrdeq	r0, [r0], -r8
   19d20:	ldrdeq	r0, [r0], -r8
   19d24:	ldrdeq	r0, [r0], -r8
   19d28:	ldrdeq	r0, [r0], -r8
   19d2c:	ldrdeq	r0, [r0], -r8
   19d30:	ldrdeq	r0, [r0], -r8
   19d34:	ldrdeq	r0, [r0], -r8
   19d38:	ldrdeq	r0, [r0], -r8
   19d3c:	ldrdeq	r0, [r0], -r8
   19d40:	andeq	r0, r0, r8, ror #3
   19d44:	add	r1, r4, r0
   19d48:	add	r0, r0, #1
   19d4c:	sub	r1, r1, #1
   19d50:	cmp	r1, r2
   19d54:	bcc	19c4c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x14c>
   19d58:	add	r0, r4, r0
   19d5c:	sub	r1, r0, #2
   19d60:	sub	r0, r1, lr
   19d64:	str	r0, [r3, #12]
   19d68:	mov	r0, r1
   19d6c:	pop	{r4, r5, fp, pc}
   19d70:	sub	lr, r4, #1
   19d74:	cmp	lr, r2
   19d78:	str	lr, [r3, #8]
   19d7c:	bcs	19e1c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x31c>
   19d80:	mov	r0, #0
   19d84:	add	r1, ip, r0
   19d88:	ldrb	r1, [r1, #-1]
   19d8c:	cmp	r1, #34	; 0x22
   19d90:	beq	19e44 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x344>
   19d94:	add	r1, r4, r0
   19d98:	add	r0, r0, #1
   19d9c:	cmp	r1, r2
   19da0:	bcc	19d84 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x284>
   19da4:	b	19ddc <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x2dc>
   19da8:	sub	lr, r4, #1
   19dac:	cmp	lr, r2
   19db0:	str	lr, [r3, #8]
   19db4:	bcs	19e30 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x330>
   19db8:	mov	r0, #0
   19dbc:	add	r1, ip, r0
   19dc0:	ldrb	r1, [r1, #-1]
   19dc4:	cmp	r1, #39	; 0x27
   19dc8:	beq	19e44 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x344>
   19dcc:	add	r1, r4, r0
   19dd0:	add	r0, r0, #1
   19dd4:	cmp	r1, r2
   19dd8:	bcc	19dbc <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x2bc>
   19ddc:	add	r0, r4, r0
   19de0:	sub	r1, r0, #1
   19de4:	sub	r0, r1, lr
   19de8:	str	r0, [r3, #12]
   19dec:	mov	r0, r1
   19df0:	pop	{r4, r5, fp, pc}
   19df4:	mov	r0, #1
   19df8:	sub	r1, r4, #1
   19dfc:	strb	r0, [lr]
   19e00:	mov	r0, r1
   19e04:	pop	{r4, r5, fp, pc}
   19e08:	mov	r1, lr
   19e0c:	sub	r0, r1, lr
   19e10:	str	r0, [r3, #12]
   19e14:	mov	r0, r1
   19e18:	pop	{r4, r5, fp, pc}
   19e1c:	mov	r1, lr
   19e20:	sub	r0, r1, lr
   19e24:	str	r0, [r3, #12]
   19e28:	mov	r0, r1
   19e2c:	pop	{r4, r5, fp, pc}
   19e30:	mov	r1, lr
   19e34:	sub	r0, r1, lr
   19e38:	str	r0, [r3, #12]
   19e3c:	mov	r0, r1
   19e40:	pop	{r4, r5, fp, pc}
   19e44:	add	r1, r4, r0
   19e48:	str	r0, [r3, #12]
   19e4c:	mov	r0, r1
   19e50:	pop	{r4, r5, fp, pc}
   19e54:	str	r0, [r3, #12]
   19e58:	add	r0, r4, r0
   19e5c:	sub	r1, r0, #1
   19e60:	mov	r0, r1
   19e64:	pop	{r4, r5, fp, pc}

00019e68 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base>:
   19e68:	push	{r4, r5, r6, r7, fp, lr}
   19e6c:	add	fp, sp, #16
   19e70:	vmov.i32	q8, #0	; 0x00000000
   19e74:	mov	r6, r3
   19e78:	mov	r5, #0
   19e7c:	vst1.32	{d16-d17}, [r6]!
   19e80:	str	r5, [r6]
   19e84:	ldr	ip, [fp, #8]
   19e88:	cmp	r1, r2
   19e8c:	bcc	19ea0 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x38>
   19e90:	b	1a230 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x3c8>
   19e94:	add	r1, r1, #1
   19e98:	cmp	r1, r2
   19e9c:	bcs	1a230 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x3c8>
   19ea0:	ldrb	r6, [r0, r1]
   19ea4:	sub	r5, r6, #9
   19ea8:	cmp	r5, #53	; 0x35
   19eac:	bhi	19fa8 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x140>
   19eb0:	add	r6, pc, #4
   19eb4:	ldr	r5, [r6, r5, lsl #2]
   19eb8:	add	pc, r6, r5
   19ebc:			; <UNDEFINED> instruction: 0xffffffd8
   19ec0:			; <UNDEFINED> instruction: 0xffffffd8
   19ec4:	andeq	r0, r0, ip, ror #1
   19ec8:			; <UNDEFINED> instruction: 0xffffffd8
   19ecc:			; <UNDEFINED> instruction: 0xffffffd8
   19ed0:	andeq	r0, r0, ip, ror #1
   19ed4:	andeq	r0, r0, ip, ror #1
   19ed8:	andeq	r0, r0, ip, ror #1
   19edc:	andeq	r0, r0, ip, ror #1
   19ee0:	andeq	r0, r0, ip, ror #1
   19ee4:	andeq	r0, r0, ip, ror #1
   19ee8:	andeq	r0, r0, ip, ror #1
   19eec:	andeq	r0, r0, ip, ror #1
   19ef0:	andeq	r0, r0, ip, ror #1
   19ef4:	andeq	r0, r0, ip, ror #1
   19ef8:	andeq	r0, r0, ip, ror #1
   19efc:	andeq	r0, r0, ip, ror #1
   19f00:	andeq	r0, r0, ip, ror #1
   19f04:	andeq	r0, r0, ip, ror #1
   19f08:	andeq	r0, r0, ip, ror #1
   19f0c:	andeq	r0, r0, ip, ror #1
   19f10:	andeq	r0, r0, ip, ror #1
   19f14:	andeq	r0, r0, ip, ror #1
   19f18:			; <UNDEFINED> instruction: 0xffffffd8
   19f1c:	andeq	r0, r0, ip, ror #1
   19f20:	andeq	r0, r0, ip, ror #1
   19f24:	andeq	r0, r0, ip, ror #1
   19f28:	andeq	r0, r0, ip, ror #1
   19f2c:	andeq	r0, r0, ip, ror #1
   19f30:	andeq	r0, r0, ip, ror #1
   19f34:	andeq	r0, r0, ip, ror #1
   19f38:	andeq	r0, r0, ip, ror #1
   19f3c:	andeq	r0, r0, ip, ror #1
   19f40:	andeq	r0, r0, ip, ror #1
   19f44:	andeq	r0, r0, ip, ror #1
   19f48:	andeq	r0, r0, ip, ror #1
   19f4c:	andeq	r0, r0, ip, ror #1
   19f50:	andeq	r0, r0, ip, ror #1
   19f54:			; <UNDEFINED> instruction: 0xffffffd8
   19f58:	andeq	r0, r0, ip, ror #1
   19f5c:	andeq	r0, r0, ip, ror #1
   19f60:	andeq	r0, r0, ip, ror #1
   19f64:	andeq	r0, r0, ip, ror #1
   19f68:	andeq	r0, r0, ip, ror #1
   19f6c:	andeq	r0, r0, ip, ror #1
   19f70:	andeq	r0, r0, ip, ror #1
   19f74:	andeq	r0, r0, ip, ror #1
   19f78:	andeq	r0, r0, ip, ror #1
   19f7c:	andeq	r0, r0, ip, ror #1
   19f80:	andeq	r0, r0, ip, ror #1
   19f84:	andeq	r0, r0, ip, ror #1
   19f88:	andeq	r0, r0, ip, ror #1
   19f8c:	andeq	r0, r0, ip, ror #1
   19f90:	ldrdeq	r0, [r0], -r8
   19f94:	mov	r0, #1
   19f98:	add	r1, r1, #1
   19f9c:	strb	r0, [ip]
   19fa0:	mov	r0, r1
   19fa4:	pop	{r4, r5, r6, r7, fp, pc}
   19fa8:	cmp	r1, r2
   19fac:	mov	r5, r1
   19fb0:	str	r1, [r3]
   19fb4:	bcs	1a0c4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x25c>
   19fb8:	add	r4, r0, r1
   19fbc:	mov	lr, #0
   19fc0:	ldrb	r5, [r4, lr]
   19fc4:	sub	r5, r5, #9
   19fc8:	cmp	r5, #53	; 0x35
   19fcc:	bhi	1a0b4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x24c>
   19fd0:	add	r6, pc, #4
   19fd4:	ldr	r5, [r6, r5, lsl #2]
   19fd8:	add	pc, r6, r5
   19fdc:	andeq	r0, r0, r4, lsr #2
   19fe0:	andeq	r0, r0, r4, lsr #2
   19fe4:	ldrdeq	r0, [r0], -r8
   19fe8:	andeq	r0, r0, r4, lsr #2
   19fec:	andeq	r0, r0, r4, lsr #2
   19ff0:	ldrdeq	r0, [r0], -r8
   19ff4:	ldrdeq	r0, [r0], -r8
   19ff8:	ldrdeq	r0, [r0], -r8
   19ffc:	ldrdeq	r0, [r0], -r8
   1a000:	ldrdeq	r0, [r0], -r8
   1a004:	ldrdeq	r0, [r0], -r8
   1a008:	ldrdeq	r0, [r0], -r8
   1a00c:	ldrdeq	r0, [r0], -r8
   1a010:	ldrdeq	r0, [r0], -r8
   1a014:	ldrdeq	r0, [r0], -r8
   1a018:	ldrdeq	r0, [r0], -r8
   1a01c:	ldrdeq	r0, [r0], -r8
   1a020:	ldrdeq	r0, [r0], -r8
   1a024:	ldrdeq	r0, [r0], -r8
   1a028:	ldrdeq	r0, [r0], -r8
   1a02c:	ldrdeq	r0, [r0], -r8
   1a030:	ldrdeq	r0, [r0], -r8
   1a034:	ldrdeq	r0, [r0], -r8
   1a038:	andeq	r0, r0, r4, lsr #2
   1a03c:	ldrdeq	r0, [r0], -r8
   1a040:	ldrdeq	r0, [r0], -r8
   1a044:	ldrdeq	r0, [r0], -r8
   1a048:	ldrdeq	r0, [r0], -r8
   1a04c:	ldrdeq	r0, [r0], -r8
   1a050:	ldrdeq	r0, [r0], -r8
   1a054:	ldrdeq	r0, [r0], -r8
   1a058:	ldrdeq	r0, [r0], -r8
   1a05c:	ldrdeq	r0, [r0], -r8
   1a060:	ldrdeq	r0, [r0], -r8
   1a064:	ldrdeq	r0, [r0], -r8
   1a068:	ldrdeq	r0, [r0], -r8
   1a06c:	ldrdeq	r0, [r0], -r8
   1a070:	ldrdeq	r0, [r0], -r8
   1a074:	andeq	r0, r0, r0, lsl #2
   1a078:	ldrdeq	r0, [r0], -r8
   1a07c:	ldrdeq	r0, [r0], -r8
   1a080:	ldrdeq	r0, [r0], -r8
   1a084:	ldrdeq	r0, [r0], -r8
   1a088:	ldrdeq	r0, [r0], -r8
   1a08c:	ldrdeq	r0, [r0], -r8
   1a090:	ldrdeq	r0, [r0], -r8
   1a094:	ldrdeq	r0, [r0], -r8
   1a098:	ldrdeq	r0, [r0], -r8
   1a09c:	ldrdeq	r0, [r0], -r8
   1a0a0:	ldrdeq	r0, [r0], -r8
   1a0a4:	ldrdeq	r0, [r0], -r8
   1a0a8:	ldrdeq	r0, [r0], -r8
   1a0ac:	andeq	r0, r0, ip, lsl r1
   1a0b0:	andeq	r0, r0, r0, lsl #2
   1a0b4:	add	lr, lr, #1
   1a0b8:	add	r5, r1, lr
   1a0bc:	cmp	r5, r2
   1a0c0:	bcc	19fc0 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x158>
   1a0c4:	sub	r0, r5, r1
   1a0c8:	str	r0, [r3, #4]
   1a0cc:	mov	r0, #1
   1a0d0:	strb	r0, [ip]
   1a0d4:	mov	r0, r5
   1a0d8:	pop	{r4, r5, r6, r7, fp, pc}
   1a0dc:	mov	r0, #1
   1a0e0:	strb	r0, [ip]
   1a0e4:	add	r0, r1, lr
   1a0e8:	str	lr, [r3, #4]
   1a0ec:	add	r1, r0, #1
   1a0f0:	mov	r0, r1
   1a0f4:	pop	{r4, r5, r6, r7, fp, pc}
   1a0f8:	cmp	lr, #1
   1a0fc:	bne	1a250 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x3e8>
   1a100:	add	r5, lr, #1
   1a104:	str	r5, [r3, #4]
   1a108:	add	r5, r1, lr
   1a10c:	add	r1, r5, #1
   1a110:	cmp	r1, r2
   1a114:	bcs	1a230 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x3c8>
   1a118:	mov	r1, #0
   1a11c:	add	r6, r4, r1
   1a120:	add	r6, r6, lr
   1a124:	ldrb	r6, [r6, #1]
   1a128:	sub	r6, r6, #9
   1a12c:	cmp	r6, #52	; 0x34
   1a130:	bhi	1a228 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x3c0>
   1a134:	add	r7, pc, #4
   1a138:	ldr	r6, [r7, r6, lsl #2]
   1a13c:	add	pc, r7, r6
   1a140:	ldrdeq	r0, [r0], -r4
   1a144:	ldrdeq	r0, [r0], -r4
   1a148:	andeq	r0, r0, r8, ror #1
   1a14c:	ldrdeq	r0, [r0], -r4
   1a150:	ldrdeq	r0, [r0], -r4
   1a154:	andeq	r0, r0, r8, ror #1
   1a158:	andeq	r0, r0, r8, ror #1
   1a15c:	andeq	r0, r0, r8, ror #1
   1a160:	andeq	r0, r0, r8, ror #1
   1a164:	andeq	r0, r0, r8, ror #1
   1a168:	andeq	r0, r0, r8, ror #1
   1a16c:	andeq	r0, r0, r8, ror #1
   1a170:	andeq	r0, r0, r8, ror #1
   1a174:	andeq	r0, r0, r8, ror #1
   1a178:	andeq	r0, r0, r8, ror #1
   1a17c:	andeq	r0, r0, r8, ror #1
   1a180:	andeq	r0, r0, r8, ror #1
   1a184:	andeq	r0, r0, r8, ror #1
   1a188:	andeq	r0, r0, r8, ror #1
   1a18c:	andeq	r0, r0, r8, ror #1
   1a190:	andeq	r0, r0, r8, ror #1
   1a194:	andeq	r0, r0, r8, ror #1
   1a198:	andeq	r0, r0, r8, ror #1
   1a19c:	ldrdeq	r0, [r0], -r4
   1a1a0:	andeq	r0, r0, r8, ror #1
   1a1a4:	andeq	r0, r0, r8, ror #1
   1a1a8:	andeq	r0, r0, r8, ror #1
   1a1ac:	andeq	r0, r0, r8, ror #1
   1a1b0:	andeq	r0, r0, r8, ror #1
   1a1b4:	andeq	r0, r0, r8, ror #1
   1a1b8:	andeq	r0, r0, r8, ror #1
   1a1bc:	andeq	r0, r0, r8, ror #1
   1a1c0:	andeq	r0, r0, r8, ror #1
   1a1c4:	andeq	r0, r0, r8, ror #1
   1a1c8:	andeq	r0, r0, r8, ror #1
   1a1cc:	andeq	r0, r0, r8, ror #1
   1a1d0:	andeq	r0, r0, r8, ror #1
   1a1d4:	andeq	r0, r0, r8, ror #1
   1a1d8:	ldrdeq	r0, [r0], -r4
   1a1dc:	andeq	r0, r0, r8, ror #1
   1a1e0:	andeq	r0, r0, r8, ror #1
   1a1e4:	andeq	r0, r0, r8, ror #1
   1a1e8:	andeq	r0, r0, r8, ror #1
   1a1ec:	andeq	r0, r0, r8, ror #1
   1a1f0:	andeq	r0, r0, r8, ror #1
   1a1f4:	andeq	r0, r0, r8, ror #1
   1a1f8:	andeq	r0, r0, r8, ror #1
   1a1fc:	andeq	r0, r0, r8, ror #1
   1a200:	andeq	r0, r0, r8, ror #1
   1a204:	andeq	r0, r0, r8, ror #1
   1a208:	andeq	r0, r0, r8, ror #1
   1a20c:	andeq	r0, r0, r8, ror #1
   1a210:	andeq	r0, r0, r0, lsl #2
   1a214:	add	r6, r5, r1
   1a218:	add	r1, r1, #1
   1a21c:	add	r6, r6, #2
   1a220:	cmp	r6, r2
   1a224:	bcc	1a11c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2b4>
   1a228:	add	r0, r5, r1
   1a22c:	add	r1, r0, #1
   1a230:	mov	r0, #1
   1a234:	strb	r0, [ip]
   1a238:	mov	r0, r1
   1a23c:	pop	{r4, r5, r6, r7, fp, pc}
   1a240:	add	r1, r5, r1
   1a244:	add	r1, r1, #2
   1a248:	pop	{r4, r5, r6, r7, fp, lr}
   1a24c:	b	19b00 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base>
   1a250:	add	r1, r1, lr
   1a254:	str	lr, [r3, #4]
   1a258:	add	r1, r1, #1
   1a25c:	pop	{r4, r5, r6, r7, fp, lr}
   1a260:	b	19b00 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base>

0001a264 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base>:
   1a264:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a268:	add	fp, sp, #28
   1a26c:	sub	sp, sp, #44	; 0x2c
   1a270:	mov	r8, r0
   1a274:	mov	sl, #0
   1a278:	mov	r0, #0
   1a27c:	mov	r9, r3
   1a280:	mov	r5, r2
   1a284:	mov	r6, r1
   1a288:	add	r7, sp, #23
   1a28c:	mov	r4, #0
   1a290:	strb	sl, [sp, #23]
   1a294:	str	r0, [sp, #16]
   1a298:	ldr	r1, [r6]
   1a29c:	cmp	r1, r5
   1a2a0:	bcs	1a534 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2d0>
   1a2a4:	mov	r0, r8
   1a2a8:	mov	r2, r5
   1a2ac:	add	r3, sp, #24
   1a2b0:	str	r7, [sp]
   1a2b4:	bl	119dc <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   1a2b8:	str	r0, [r6]
   1a2bc:	ldr	r0, [sp, #28]
   1a2c0:	cmp	r0, #7
   1a2c4:	beq	1a32c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xc8>
   1a2c8:	cmp	r0, #10
   1a2cc:	bne	1a4d4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x270>
   1a2d0:	ldr	r0, [sp, #24]
   1a2d4:	add	r1, r8, r0
   1a2d8:	ldr	r0, [pc, #688]	; 1a590 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x32c>
   1a2dc:	add	r0, pc, r0
   1a2e0:	bl	10e6c <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   1a2e4:	tst	r4, #1
   1a2e8:	bne	1a4d4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x270>
   1a2ec:	cmp	r0, #0
   1a2f0:	beq	1a4d4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x270>
   1a2f4:	ldr	r0, [sp, #36]	; 0x24
   1a2f8:	orr	r4, r4, #1
   1a2fc:	cmp	r0, #12
   1a300:	bne	1a4d4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x270>
   1a304:	ldr	r0, [sp, #32]
   1a308:	add	r1, r8, r0
   1a30c:	ldr	r0, [pc, #640]	; 1a594 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x330>
   1a310:	add	r0, pc, r0
   1a314:	bl	10e6c <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   1a318:	orr	sl, sl, r0
   1a31c:	ldrb	r0, [sp, #23]
   1a320:	cmp	r0, #0
   1a324:	beq	1a298 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x34>
   1a328:	b	1a534 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2d0>
   1a32c:	ldr	r0, [sp, #24]
   1a330:	add	r7, r8, r0
   1a334:	ldr	r0, [pc, #604]	; 1a598 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x334>
   1a338:	mov	r1, r7
   1a33c:	add	r0, pc, r0
   1a340:	bl	10e6c <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   1a344:	cmp	r0, #0
   1a348:	beq	1a39c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x138>
   1a34c:	tst	r4, #2
   1a350:	bne	1a4e4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x280>
   1a354:	ldr	r0, [sp, #32]
   1a358:	ldr	r2, [fp, #12]
   1a35c:	ldr	r1, [sp, #36]	; 0x24
   1a360:	ldr	r3, [fp, #8]
   1a364:	str	r2, [sp]
   1a368:	add	r0, r8, r0
   1a36c:	mov	r2, r9
   1a370:	bl	11688 <myencoding_extracting_character_encoding_from_charset_with_found@plt>
   1a374:	cmp	r0, #0
   1a378:	ldr	r0, [sp, #16]
   1a37c:	orr	r4, r4, #2
   1a380:	add	r7, sp, #23
   1a384:	movwne	r0, #2
   1a388:	str	r0, [sp, #16]
   1a38c:	ldrb	r0, [sp, #23]
   1a390:	cmp	r0, #0
   1a394:	beq	1a298 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x34>
   1a398:	b	1a534 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2d0>
   1a39c:	ldr	r0, [pc, #504]	; 1a59c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x338>
   1a3a0:	mov	r1, r7
   1a3a4:	add	r0, pc, r0
   1a3a8:	bl	10e6c <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   1a3ac:	tst	r4, #4
   1a3b0:	bne	1a4f8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x294>
   1a3b4:	ldr	r1, [fp, #12]
   1a3b8:	cmp	r0, #0
   1a3bc:	add	r7, sp, #23
   1a3c0:	beq	1a4d4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x270>
   1a3c4:	ldr	r2, [fp, #8]
   1a3c8:	str	sl, [sp, #12]
   1a3cc:	mov	r7, r8
   1a3d0:	orr	r4, r4, #4
   1a3d4:	cmp	r2, #0
   1a3d8:	ldrne	r0, [sp, #32]
   1a3dc:	addne	r0, r8, r0
   1a3e0:	strne	r0, [r2]
   1a3e4:	cmp	r1, #0
   1a3e8:	ldr	sl, [sp, #36]	; 0x24
   1a3ec:	strne	sl, [r1]
   1a3f0:	ldr	r0, [sp, #32]
   1a3f4:	ldrb	r0, [r7, r0]!
   1a3f8:	add	r1, r7, sl
   1a3fc:	ldrb	r1, [r1, #-1]
   1a400:	ldr	r2, [pc, #408]	; 1a5a0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x33c>
   1a404:	add	r2, pc, r2
   1a408:	ldrb	r0, [r2, r0]
   1a40c:	ldrb	r1, [r2, r1]
   1a410:	mul	r0, sl, r0
   1a414:	mul	r0, r0, r1
   1a418:	movw	r1, #11575	; 0x2d37
   1a41c:	movt	r1, #14546	; 0x38d2
   1a420:	umull	r1, r2, r0, r1
   1a424:	sub	r1, r0, r2
   1a428:	add	r1, r2, r1, lsr #1
   1a42c:	movw	r2, #419	; 0x1a3
   1a430:	lsr	r1, r1, #8
   1a434:	mls	r0, r1, r2, r0
   1a438:	ldr	r2, [pc, #356]	; 1a5a4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x340>
   1a43c:	add	r1, r0, #1
   1a440:	rsb	r0, r1, r1, lsl #3
   1a444:	add	r2, pc, r2
   1a448:	add	r0, r2, r0, lsl #2
   1a44c:	mov	r2, #1
   1a450:	ldr	r0, [r0, #8]
   1a454:	str	r2, [sp, #16]
   1a458:	cmp	r0, #0
   1a45c:	beq	1a4cc <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x268>
   1a460:	str	r9, [sp, #8]
   1a464:	ldr	r2, [pc, #316]	; 1a5a8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x344>
   1a468:	add	r2, pc, r2
   1a46c:	rsb	r1, r1, r1, lsl #3
   1a470:	add	r9, r2, r1, lsl #2
   1a474:	ldr	r1, [r9, #12]
   1a478:	cmp	r1, sl
   1a47c:	bne	1a4a4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x240>
   1a480:	mov	r1, r7
   1a484:	mov	r2, sl
   1a488:	bl	11298 <mycore_strncasecmp@plt>
   1a48c:	cmp	r0, #0
   1a490:	beq	1a50c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2a8>
   1a494:	ldr	r1, [r9, #20]
   1a498:	cmp	r1, #0
   1a49c:	bne	1a4ac <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x248>
   1a4a0:	b	1a4c8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x264>
   1a4a4:	bhi	1a4c8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x264>
   1a4a8:	ldr	r1, [r9, #20]
   1a4ac:	ldr	r2, [pc, #248]	; 1a5ac <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x348>
   1a4b0:	rsb	r0, r1, r1, lsl #3
   1a4b4:	add	r2, pc, r2
   1a4b8:	add	r0, r2, r0, lsl #2
   1a4bc:	ldr	r0, [r0, #8]
   1a4c0:	cmp	r0, #0
   1a4c4:	bne	1a46c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x208>
   1a4c8:	ldr	r9, [sp, #8]
   1a4cc:	ldr	sl, [sp, #12]
   1a4d0:	add	r7, sp, #23
   1a4d4:	ldrb	r0, [sp, #23]
   1a4d8:	cmp	r0, #0
   1a4dc:	beq	1a298 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x34>
   1a4e0:	b	1a534 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2d0>
   1a4e4:	add	r7, sp, #23
   1a4e8:	ldrb	r0, [sp, #23]
   1a4ec:	cmp	r0, #0
   1a4f0:	beq	1a298 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x34>
   1a4f4:	b	1a534 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2d0>
   1a4f8:	add	r7, sp, #23
   1a4fc:	ldrb	r0, [sp, #23]
   1a500:	cmp	r0, #0
   1a504:	beq	1a298 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x34>
   1a508:	b	1a534 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2d0>
   1a50c:	ldr	r1, [sp, #8]
   1a510:	ldr	sl, [sp, #12]
   1a514:	add	r7, sp, #23
   1a518:	cmp	r1, #0
   1a51c:	ldrne	r0, [r9, #16]
   1a520:	mov	r9, r1
   1a524:	strne	r0, [r1]
   1a528:	ldrb	r0, [sp, #23]
   1a52c:	cmp	r0, #0
   1a530:	beq	1a298 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x34>
   1a534:	ldr	r2, [sp, #16]
   1a538:	mov	r0, #0
   1a53c:	mov	r1, #2
   1a540:	cmp	r2, #0
   1a544:	beq	1a56c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x308>
   1a548:	cmp	r2, #2
   1a54c:	tsteq	sl, #1
   1a550:	beq	1a56c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x308>
   1a554:	ldr	r2, [r9]
   1a558:	bic	r0, r2, #1
   1a55c:	cmp	r0, #4
   1a560:	bne	1a578 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x314>
   1a564:	mov	r0, #1
   1a568:	mov	r1, #0
   1a56c:	str	r1, [r9]
   1a570:	sub	sp, fp, #28
   1a574:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a578:	mov	r1, #33	; 0x21
   1a57c:	cmp	r2, #6
   1a580:	mov	r0, #1
   1a584:	streq	r1, [r9]
   1a588:	sub	sp, fp, #28
   1a58c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a590:	andeq	r5, r2, r4, lsl r2
   1a594:	andeq	r5, r2, fp, ror #3
   1a598:	andeq	r5, r2, ip, asr #3
   1a59c:	andeq	r5, r2, r4, asr #2
   1a5a0:	andeq	r4, r2, r4, ror #29
   1a5a4:	muleq	pc, r8, r7	; <UNPREDICTABLE>
   1a5a8:	andeq	r9, pc, r4, ror r7	; <UNPREDICTABLE>
   1a5ac:	andeq	r9, pc, r8, lsr #14

0001a5b0 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base>:
   1a5b0:	push	{r4, r5, r6, r7, fp, lr}
   1a5b4:	add	fp, sp, #16
   1a5b8:	sub	sp, sp, #32
   1a5bc:	cmp	r1, r2
   1a5c0:	bcs	1a70c <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x15c>
   1a5c4:	mov	r4, r2
   1a5c8:	mov	r5, r0
   1a5cc:	ldrb	r0, [r5, r1]
   1a5d0:	sub	r0, r0, #9
   1a5d4:	cmp	r0, #53	; 0x35
   1a5d8:	bhi	1a6d0 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x120>
   1a5dc:	add	r2, pc, #4
   1a5e0:	ldr	r0, [r2, r0, lsl #2]
   1a5e4:	add	pc, r2, r0
   1a5e8:	ldrdeq	r0, [r0], -r8
   1a5ec:	ldrdeq	r0, [r0], -r8
   1a5f0:	andeq	r0, r0, r8, ror #1
   1a5f4:	ldrdeq	r0, [r0], -r8
   1a5f8:	ldrdeq	r0, [r0], -r8
   1a5fc:	andeq	r0, r0, r8, ror #1
   1a600:	andeq	r0, r0, r8, ror #1
   1a604:	andeq	r0, r0, r8, ror #1
   1a608:	andeq	r0, r0, r8, ror #1
   1a60c:	andeq	r0, r0, r8, ror #1
   1a610:	andeq	r0, r0, r8, ror #1
   1a614:	andeq	r0, r0, r8, ror #1
   1a618:	andeq	r0, r0, r8, ror #1
   1a61c:	andeq	r0, r0, r8, ror #1
   1a620:	andeq	r0, r0, r8, ror #1
   1a624:	andeq	r0, r0, r8, ror #1
   1a628:	andeq	r0, r0, r8, ror #1
   1a62c:	andeq	r0, r0, r8, ror #1
   1a630:	andeq	r0, r0, r8, ror #1
   1a634:	andeq	r0, r0, r8, ror #1
   1a638:	andeq	r0, r0, r8, ror #1
   1a63c:	andeq	r0, r0, r8, ror #1
   1a640:	andeq	r0, r0, r8, ror #1
   1a644:	ldrdeq	r0, [r0], -r8
   1a648:	andeq	r0, r0, r8, ror #1
   1a64c:	andeq	r0, r0, r8, ror #1
   1a650:	andeq	r0, r0, r8, ror #1
   1a654:	andeq	r0, r0, r8, ror #1
   1a658:	andeq	r0, r0, r8, ror #1
   1a65c:	andeq	r0, r0, r8, ror #1
   1a660:	andeq	r0, r0, r8, ror #1
   1a664:	andeq	r0, r0, r8, ror #1
   1a668:	andeq	r0, r0, r8, ror #1
   1a66c:	andeq	r0, r0, r8, ror #1
   1a670:	andeq	r0, r0, r8, ror #1
   1a674:	andeq	r0, r0, r8, ror #1
   1a678:	andeq	r0, r0, r8, ror #1
   1a67c:	andeq	r0, r0, r8, ror #1
   1a680:	andeq	r0, r0, r8, ror #1
   1a684:	andeq	r0, r0, r8, ror #1
   1a688:	andeq	r0, r0, r8, ror #1
   1a68c:	andeq	r0, r0, r8, ror #1
   1a690:	andeq	r0, r0, r8, ror #1
   1a694:	andeq	r0, r0, r8, ror #1
   1a698:	andeq	r0, r0, r8, ror #1
   1a69c:	andeq	r0, r0, r8, ror #1
   1a6a0:	andeq	r0, r0, r8, ror #1
   1a6a4:	andeq	r0, r0, r8, ror #1
   1a6a8:	andeq	r0, r0, r8, ror #1
   1a6ac:	andeq	r0, r0, r8, ror #1
   1a6b0:	andeq	r0, r0, r8, ror #1
   1a6b4:	andeq	r0, r0, r8, ror #1
   1a6b8:	andeq	r0, r0, r8, ror #1
   1a6bc:	andeq	r0, r0, r0, lsr r1
   1a6c0:	add	r1, r1, #1
   1a6c4:	cmp	r1, r4
   1a6c8:	bcc	1a5cc <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x1c>
   1a6cc:	b	1a70c <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x15c>
   1a6d0:	mov	r0, #0
   1a6d4:	add	r7, sp, #11
   1a6d8:	add	r6, sp, #12
   1a6dc:	strb	r0, [sp, #11]
   1a6e0:	cmp	r1, r4
   1a6e4:	bcs	1a70c <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x15c>
   1a6e8:	mov	r0, r5
   1a6ec:	mov	r2, r4
   1a6f0:	mov	r3, r6
   1a6f4:	str	r7, [sp]
   1a6f8:	bl	119dc <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   1a6fc:	mov	r1, r0
   1a700:	ldrb	r0, [sp, #11]
   1a704:	cmp	r0, #0
   1a708:	beq	1a6e0 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x130>
   1a70c:	mov	r0, r1
   1a710:	sub	sp, fp, #16
   1a714:	pop	{r4, r5, r6, r7, fp, pc}
   1a718:	add	r1, r1, #1
   1a71c:	mov	r0, r1
   1a720:	sub	sp, fp, #16
   1a724:	pop	{r4, r5, r6, r7, fp, pc}

0001a728 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base>:
   1a728:	push	{r4, r5, r6, r7, fp, lr}
   1a72c:	add	fp, sp, #16
   1a730:	sub	sp, sp, #32
   1a734:	mov	r5, r0
   1a738:	ldrb	r0, [r0, r1]
   1a73c:	mov	r4, r2
   1a740:	cmp	r0, #33	; 0x21
   1a744:	beq	1a8d4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1ac>
   1a748:	cmp	r0, #63	; 0x3f
   1a74c:	beq	1a8b4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x18c>
   1a750:	cmp	r0, #47	; 0x2f
   1a754:	bne	1a97c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x254>
   1a758:	add	r2, r1, #1
   1a75c:	cmp	r2, r4
   1a760:	bcs	1aaa4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x37c>
   1a764:	ldrb	r3, [r5, r2]
   1a768:	ldr	r0, [pc, #992]	; 1ab50 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x428>
   1a76c:	add	r0, pc, r0
   1a770:	ldrb	r0, [r0, r3]
   1a774:	cmp	r0, #1
   1a778:	bne	1a794 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x6c>
   1a77c:	add	r2, r1, #2
   1a780:	mvn	r0, #8
   1a784:	uxtab	r1, r0, r3
   1a788:	cmp	r1, #53	; 0x35
   1a78c:	bls	1a7c4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x9c>
   1a790:	b	1aaf8 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x3d0>
   1a794:	cmp	r2, r4
   1a798:	bcs	1aaa4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x37c>
   1a79c:	ldrb	r0, [r5, r2]
   1a7a0:	add	r2, r2, #1
   1a7a4:	cmp	r0, #62	; 0x3e
   1a7a8:	beq	1a794 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x6c>
   1a7ac:	b	1aaa4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x37c>
   1a7b0:	ldrb	r3, [r5, r2]
   1a7b4:	add	r2, r2, #1
   1a7b8:	uxtab	r1, r0, r3
   1a7bc:	cmp	r1, #53	; 0x35
   1a7c0:	bhi	1aaf8 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x3d0>
   1a7c4:	add	r3, pc, #4
   1a7c8:	ldr	r1, [r3, r1, lsl #2]
   1a7cc:	add	pc, r3, r1
   1a7d0:	ldrdeq	r0, [r0], -r8
   1a7d4:	ldrdeq	r0, [r0], -r8
   1a7d8:	andeq	r0, r0, r8, lsr #6
   1a7dc:	ldrdeq	r0, [r0], -r8
   1a7e0:	ldrdeq	r0, [r0], -r8
   1a7e4:	andeq	r0, r0, r8, lsr #6
   1a7e8:	andeq	r0, r0, r8, lsr #6
   1a7ec:	andeq	r0, r0, r8, lsr #6
   1a7f0:	andeq	r0, r0, r8, lsr #6
   1a7f4:	andeq	r0, r0, r8, lsr #6
   1a7f8:	andeq	r0, r0, r8, lsr #6
   1a7fc:	andeq	r0, r0, r8, lsr #6
   1a800:	andeq	r0, r0, r8, lsr #6
   1a804:	andeq	r0, r0, r8, lsr #6
   1a808:	andeq	r0, r0, r8, lsr #6
   1a80c:	andeq	r0, r0, r8, lsr #6
   1a810:	andeq	r0, r0, r8, lsr #6
   1a814:	andeq	r0, r0, r8, lsr #6
   1a818:	andeq	r0, r0, r8, lsr #6
   1a81c:	andeq	r0, r0, r8, lsr #6
   1a820:	andeq	r0, r0, r8, lsr #6
   1a824:	andeq	r0, r0, r8, lsr #6
   1a828:	andeq	r0, r0, r8, lsr #6
   1a82c:	ldrdeq	r0, [r0], -r8
   1a830:	andeq	r0, r0, r8, lsr #6
   1a834:	andeq	r0, r0, r8, lsr #6
   1a838:	andeq	r0, r0, r8, lsr #6
   1a83c:	andeq	r0, r0, r8, lsr #6
   1a840:	andeq	r0, r0, r8, lsr #6
   1a844:	andeq	r0, r0, r8, lsr #6
   1a848:	andeq	r0, r0, r8, lsr #6
   1a84c:	andeq	r0, r0, r8, lsr #6
   1a850:	andeq	r0, r0, r8, lsr #6
   1a854:	andeq	r0, r0, r8, lsr #6
   1a858:	andeq	r0, r0, r8, lsr #6
   1a85c:	andeq	r0, r0, r8, lsr #6
   1a860:	andeq	r0, r0, r8, lsr #6
   1a864:	andeq	r0, r0, r8, lsr #6
   1a868:	andeq	r0, r0, r8, lsr #6
   1a86c:	andeq	r0, r0, r8, lsr #6
   1a870:	andeq	r0, r0, r8, lsr #6
   1a874:	andeq	r0, r0, r8, lsr #6
   1a878:	andeq	r0, r0, r8, lsr #6
   1a87c:	andeq	r0, r0, r8, lsr #6
   1a880:	andeq	r0, r0, r8, lsr #6
   1a884:	andeq	r0, r0, r8, lsr #6
   1a888:	andeq	r0, r0, r8, lsr #6
   1a88c:	andeq	r0, r0, r8, lsr #6
   1a890:	andeq	r0, r0, r8, lsr #6
   1a894:	andeq	r0, r0, r8, lsr #6
   1a898:	andeq	r0, r0, r8, lsr #6
   1a89c:	andeq	r0, r0, r8, lsr #6
   1a8a0:	andeq	r0, r0, r8, lsr #6
   1a8a4:	ldrdeq	r0, [r0], -r4
   1a8a8:	cmp	r2, r4
   1a8ac:	bcc	1a7b0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x88>
   1a8b0:	b	1aaa4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x37c>
   1a8b4:	add	r2, r1, #1
   1a8b8:	cmp	r2, r4
   1a8bc:	bcs	1aaa4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x37c>
   1a8c0:	ldrb	r0, [r5, r2]
   1a8c4:	add	r2, r2, #1
   1a8c8:	cmp	r0, #62	; 0x3e
   1a8cc:	beq	1a8b8 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x190>
   1a8d0:	b	1aaa4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x37c>
   1a8d4:	add	r0, r1, #3
   1a8d8:	add	r2, r1, #1
   1a8dc:	cmp	r0, r4
   1a8e0:	bcs	1a91c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1f4>
   1a8e4:	ldrb	r0, [r5, r2]
   1a8e8:	cmp	r0, #45	; 0x2d
   1a8ec:	bne	1a91c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1f4>
   1a8f0:	add	r0, r5, r1
   1a8f4:	ldrb	r0, [r0, #2]
   1a8f8:	cmp	r0, #45	; 0x2d
   1a8fc:	bne	1a91c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1f4>
   1a900:	cmp	r2, r4
   1a904:	bcs	1aaa4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x37c>
   1a908:	mov	r0, #45	; 0x2d
   1a90c:	uxtb	r0, r0
   1a910:	cmp	r0, #62	; 0x3e
   1a914:	beq	1a96c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x244>
   1a918:	b	1a950 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x228>
   1a91c:	cmp	r2, r4
   1a920:	bcs	1aaa4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x37c>
   1a924:	ldrb	r0, [r5, r2]
   1a928:	add	r2, r2, #1
   1a92c:	cmp	r0, #62	; 0x3e
   1a930:	beq	1a91c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1f4>
   1a934:	b	1aaa4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x37c>
   1a938:	add	r0, r5, r1
   1a93c:	add	r1, r1, #1
   1a940:	ldrb	r0, [r0, #2]
   1a944:	uxtb	r0, r0
   1a948:	cmp	r0, #62	; 0x3e
   1a94c:	beq	1a96c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x244>
   1a950:	ldrb	r0, [r5, r1]
   1a954:	cmp	r0, #45	; 0x2d
   1a958:	bne	1a96c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x244>
   1a95c:	add	r0, r5, r1
   1a960:	ldrb	r0, [r0, #-1]
   1a964:	cmp	r0, #45	; 0x2d
   1a968:	beq	1ab40 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x418>
   1a96c:	add	r2, r1, #2
   1a970:	cmp	r2, r4
   1a974:	bcc	1a938 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x210>
   1a978:	b	1aaa4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x37c>
   1a97c:	cmp	r1, r4
   1a980:	bcs	1aaa0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x378>
   1a984:	add	r2, r1, #1
   1a988:	mvn	r1, #8
   1a98c:	uxtab	r0, r1, r0
   1a990:	cmp	r0, #53	; 0x35
   1a994:	bls	1a9b0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x288>
   1a998:	b	1aab0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x388>
   1a99c:	ldrb	r0, [r5, r2]
   1a9a0:	add	r2, r2, #1
   1a9a4:	uxtab	r0, r1, r0
   1a9a8:	cmp	r0, #53	; 0x35
   1a9ac:	bhi	1aab0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x388>
   1a9b0:	add	r3, pc, #4
   1a9b4:	ldr	r0, [r3, r0, lsl #2]
   1a9b8:	add	pc, r3, r0
   1a9bc:	ldrdeq	r0, [r0], -r8
   1a9c0:	ldrdeq	r0, [r0], -r8
   1a9c4:	strdeq	r0, [r0], -r4
   1a9c8:	ldrdeq	r0, [r0], -r8
   1a9cc:	ldrdeq	r0, [r0], -r8
   1a9d0:	strdeq	r0, [r0], -r4
   1a9d4:	strdeq	r0, [r0], -r4
   1a9d8:	strdeq	r0, [r0], -r4
   1a9dc:	strdeq	r0, [r0], -r4
   1a9e0:	strdeq	r0, [r0], -r4
   1a9e4:	strdeq	r0, [r0], -r4
   1a9e8:	strdeq	r0, [r0], -r4
   1a9ec:	strdeq	r0, [r0], -r4
   1a9f0:	strdeq	r0, [r0], -r4
   1a9f4:	strdeq	r0, [r0], -r4
   1a9f8:	strdeq	r0, [r0], -r4
   1a9fc:	strdeq	r0, [r0], -r4
   1aa00:	strdeq	r0, [r0], -r4
   1aa04:	strdeq	r0, [r0], -r4
   1aa08:	strdeq	r0, [r0], -r4
   1aa0c:	strdeq	r0, [r0], -r4
   1aa10:	strdeq	r0, [r0], -r4
   1aa14:	strdeq	r0, [r0], -r4
   1aa18:	ldrdeq	r0, [r0], -r8
   1aa1c:	strdeq	r0, [r0], -r4
   1aa20:	strdeq	r0, [r0], -r4
   1aa24:	strdeq	r0, [r0], -r4
   1aa28:	strdeq	r0, [r0], -r4
   1aa2c:	strdeq	r0, [r0], -r4
   1aa30:	strdeq	r0, [r0], -r4
   1aa34:	strdeq	r0, [r0], -r4
   1aa38:	strdeq	r0, [r0], -r4
   1aa3c:	strdeq	r0, [r0], -r4
   1aa40:	strdeq	r0, [r0], -r4
   1aa44:	strdeq	r0, [r0], -r4
   1aa48:	strdeq	r0, [r0], -r4
   1aa4c:	strdeq	r0, [r0], -r4
   1aa50:	strdeq	r0, [r0], -r4
   1aa54:	strdeq	r0, [r0], -r4
   1aa58:	strdeq	r0, [r0], -r4
   1aa5c:	strdeq	r0, [r0], -r4
   1aa60:	strdeq	r0, [r0], -r4
   1aa64:	strdeq	r0, [r0], -r4
   1aa68:	strdeq	r0, [r0], -r4
   1aa6c:	strdeq	r0, [r0], -r4
   1aa70:	strdeq	r0, [r0], -r4
   1aa74:	strdeq	r0, [r0], -r4
   1aa78:	strdeq	r0, [r0], -r4
   1aa7c:	strdeq	r0, [r0], -r4
   1aa80:	strdeq	r0, [r0], -r4
   1aa84:	strdeq	r0, [r0], -r4
   1aa88:	strdeq	r0, [r0], -r4
   1aa8c:	strdeq	r0, [r0], -r4
   1aa90:	andeq	r0, r0, r8, ror #1
   1aa94:	cmp	r2, r4
   1aa98:	bcc	1a99c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x274>
   1aa9c:	b	1aaa4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x37c>
   1aaa0:	mov	r2, r1
   1aaa4:	mov	r0, r2
   1aaa8:	sub	sp, fp, #16
   1aaac:	pop	{r4, r5, r6, r7, fp, pc}
   1aab0:	mov	r0, #0
   1aab4:	sub	r2, r2, #1
   1aab8:	add	r7, sp, #11
   1aabc:	add	r6, sp, #12
   1aac0:	strb	r0, [sp, #11]
   1aac4:	cmp	r2, r4
   1aac8:	bcs	1aaa4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x37c>
   1aacc:	mov	r1, r2
   1aad0:	mov	r0, r5
   1aad4:	mov	r2, r4
   1aad8:	mov	r3, r6
   1aadc:	str	r7, [sp]
   1aae0:	bl	119dc <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   1aae4:	mov	r2, r0
   1aae8:	ldrb	r0, [sp, #11]
   1aaec:	cmp	r0, #0
   1aaf0:	beq	1aac4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x39c>
   1aaf4:	b	1aaa4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x37c>
   1aaf8:	mov	r0, #0
   1aafc:	sub	r2, r2, #1
   1ab00:	add	r7, sp, #11
   1ab04:	add	r6, sp, #12
   1ab08:	strb	r0, [sp, #11]
   1ab0c:	cmp	r2, r4
   1ab10:	bcs	1aaa4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x37c>
   1ab14:	mov	r1, r2
   1ab18:	mov	r0, r5
   1ab1c:	mov	r2, r4
   1ab20:	mov	r3, r6
   1ab24:	str	r7, [sp]
   1ab28:	bl	119dc <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   1ab2c:	mov	r2, r0
   1ab30:	ldrb	r0, [sp, #11]
   1ab34:	cmp	r0, #0
   1ab38:	beq	1ab0c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x3e4>
   1ab3c:	b	1aaa4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x37c>
   1ab40:	add	r2, r1, #2
   1ab44:	mov	r0, r2
   1ab48:	sub	sp, fp, #16
   1ab4c:	pop	{r4, r5, r6, r7, fp, pc}
   1ab50:	andeq	r4, r2, ip, ror ip

0001ab54 <myencoding_prescan_stream_to_determine_encoding@@Base>:
   1ab54:	mov	r2, #0
   1ab58:	mov	r3, #0
   1ab5c:	b	1ab60 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base>

0001ab60 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base>:
   1ab60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ab64:	add	fp, sp, #28
   1ab68:	sub	sp, sp, #20
   1ab6c:	mov	r7, r0
   1ab70:	mov	r0, #2
   1ab74:	cmp	r2, #0
   1ab78:	mov	r4, r3
   1ab7c:	mov	r5, r2
   1ab80:	mov	r6, r1
   1ab84:	mov	r9, #0
   1ab88:	str	r0, [sp, #16]
   1ab8c:	movne	r0, #0
   1ab90:	strne	r0, [r5]
   1ab94:	cmp	r4, #0
   1ab98:	movne	r0, #0
   1ab9c:	strne	r0, [r4]
   1aba0:	cmp	r6, #0
   1aba4:	str	r9, [sp, #12]
   1aba8:	moveq	r0, #2
   1abac:	subeq	sp, fp, #28
   1abb0:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1abb4:	ldrb	r0, [r7, r9]
   1abb8:	mov	sl, r9
   1abbc:	cmp	r0, #60	; 0x3c
   1abc0:	bne	1acfc <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x19c>
   1abc4:	add	r8, sl, #5
   1abc8:	cmp	r8, r6
   1abcc:	bcs	1ad40 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1e0>
   1abd0:	add	r9, sl, #1
   1abd4:	mov	r1, r7
   1abd8:	str	r9, [sp, #12]
   1abdc:	ldrb	r0, [r1, r9]!
   1abe0:	orr	r0, r0, #32
   1abe4:	cmp	r0, #109	; 0x6d
   1abe8:	bne	1ad10 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1b0>
   1abec:	ldr	r0, [pc, #344]	; 1ad4c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1ec>
   1abf0:	add	r0, pc, r0
   1abf4:	bl	10e6c <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   1abf8:	cmp	r0, #0
   1abfc:	beq	1acf0 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x190>
   1ac00:	str	r8, [sp, #12]
   1ac04:	ldrb	r0, [r7, r8]
   1ac08:	sub	r0, r0, #9
   1ac0c:	cmp	r0, #38	; 0x26
   1ac10:	bhi	1ad34 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1d4>
   1ac14:	add	r1, pc, #8
   1ac18:	mov	r9, r8
   1ac1c:	ldr	r0, [r1, r0, lsl #2]
   1ac20:	add	pc, r1, r0
   1ac24:	muleq	r0, ip, r0
   1ac28:	muleq	r0, ip, r0
   1ac2c:	andeq	r0, r0, ip, asr #1
   1ac30:	muleq	r0, ip, r0
   1ac34:	muleq	r0, ip, r0
   1ac38:	andeq	r0, r0, ip, asr #1
   1ac3c:	andeq	r0, r0, ip, asr #1
   1ac40:	andeq	r0, r0, ip, asr #1
   1ac44:	andeq	r0, r0, ip, asr #1
   1ac48:	andeq	r0, r0, ip, asr #1
   1ac4c:	andeq	r0, r0, ip, asr #1
   1ac50:	andeq	r0, r0, ip, asr #1
   1ac54:	andeq	r0, r0, ip, asr #1
   1ac58:	andeq	r0, r0, ip, asr #1
   1ac5c:	andeq	r0, r0, ip, asr #1
   1ac60:	andeq	r0, r0, ip, asr #1
   1ac64:	andeq	r0, r0, ip, asr #1
   1ac68:	andeq	r0, r0, ip, asr #1
   1ac6c:	andeq	r0, r0, ip, asr #1
   1ac70:	andeq	r0, r0, ip, asr #1
   1ac74:	andeq	r0, r0, ip, asr #1
   1ac78:	andeq	r0, r0, ip, asr #1
   1ac7c:	andeq	r0, r0, ip, asr #1
   1ac80:	muleq	r0, ip, r0
   1ac84:	andeq	r0, r0, ip, asr #1
   1ac88:	andeq	r0, r0, ip, asr #1
   1ac8c:	andeq	r0, r0, ip, asr #1
   1ac90:	andeq	r0, r0, ip, asr #1
   1ac94:	andeq	r0, r0, ip, asr #1
   1ac98:	andeq	r0, r0, ip, asr #1
   1ac9c:	andeq	r0, r0, ip, asr #1
   1aca0:	andeq	r0, r0, ip, asr #1
   1aca4:	andeq	r0, r0, ip, asr #1
   1aca8:	andeq	r0, r0, ip, asr #1
   1acac:	andeq	r0, r0, ip, asr #1
   1acb0:	andeq	r0, r0, ip, asr #1
   1acb4:	andeq	r0, r0, ip, asr #1
   1acb8:	andeq	r0, r0, ip, asr #1
   1acbc:	muleq	r0, ip, r0
   1acc0:	add	r0, sl, #6
   1acc4:	add	r1, sp, #12
   1acc8:	mov	r2, r6
   1accc:	add	r3, sp, #16
   1acd0:	str	r5, [sp]
   1acd4:	str	r4, [sp, #4]
   1acd8:	str	r0, [sp, #12]
   1acdc:	mov	r0, r7
   1ace0:	bl	11364 <myencoding_prescan_stream_to_determine_encoding_check_meta@plt>
   1ace4:	cmp	r0, #0
   1ace8:	bne	1ad40 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1e0>
   1acec:	ldr	r9, [sp, #12]
   1acf0:	cmp	r9, r6
   1acf4:	bcc	1abb4 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x54>
   1acf8:	b	1ad40 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1e0>
   1acfc:	add	r9, sl, #1
   1ad00:	str	r9, [sp, #12]
   1ad04:	cmp	r9, r6
   1ad08:	bcc	1abb4 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x54>
   1ad0c:	b	1ad40 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1e0>
   1ad10:	mov	r0, r7
   1ad14:	mov	r1, r9
   1ad18:	mov	r2, r6
   1ad1c:	bl	112f8 <myencoding_prescan_stream_to_determine_encoding_skip_other@plt>
   1ad20:	mov	r9, r0
   1ad24:	str	r0, [sp, #12]
   1ad28:	cmp	r9, r6
   1ad2c:	bcc	1abb4 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x54>
   1ad30:	b	1ad40 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1e0>
   1ad34:	mov	r9, r8
   1ad38:	cmp	r9, r6
   1ad3c:	bcc	1abb4 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x54>
   1ad40:	ldr	r0, [sp, #16]
   1ad44:	sub	sp, fp, #28
   1ad48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ad4c:	andeq	r4, r2, r0, lsr #18

0001ad50 <myencoding_get_function_by_id@@Base>:
   1ad50:	ldr	r1, [pc, #8]	; 1ad60 <myencoding_get_function_by_id@@Base+0x10>
   1ad54:	add	r1, pc, r1
   1ad58:	ldr	r0, [r1, r0, lsl #2]
   1ad5c:	bx	lr
   1ad60:	andeq	ip, pc, r8, ror #11
   1ad64:	nop	{0}
   1ad68:	nop	{0}
   1ad6c:	nop	{0}

0001ad70 <myencoding_decode_utf_8@@Base>:
   1ad70:	ldr	r2, [r1, #20]
   1ad74:	cmp	r2, #0
   1ad78:	beq	1ae08 <myencoding_decode_utf_8@@Base+0x98>
   1ad7c:	ldr	r3, [r1]
   1ad80:	cmp	r3, r0
   1ad84:	bls	1adb8 <myencoding_decode_utf_8@@Base+0x48>
   1ad88:	ldr	r3, [r1, #4]
   1ad8c:	cmp	r3, r0
   1ad90:	bcs	1adb8 <myencoding_decode_utf_8@@Base+0x48>
   1ad94:	add	r0, pc, #324	; 0x144
   1ad98:	mov	r2, #5
   1ad9c:	vld1.64	{d16-d17}, [r0 :128]
   1ada0:	mov	r0, #20
   1ada4:	vst1.32	{d16-d17}, [r1], r0
   1ada8:	mov	r0, #0
   1adac:	str	r0, [r1]
   1adb0:	mov	r0, r2
   1adb4:	bx	lr
   1adb8:	mov	r3, #191	; 0xbf
   1adbc:	sub	r0, r0, #128	; 0x80
   1adc0:	str	r3, [r1, #4]
   1adc4:	mov	r3, #128	; 0x80
   1adc8:	str	r3, [r1]
   1adcc:	ldr	r3, [r1, #8]
   1add0:	ldr	ip, [r1, #12]
   1add4:	add	r3, r3, #1
   1add8:	subs	r2, r2, r3
   1addc:	str	r3, [r1, #8]
   1ade0:	add	r2, r2, r2, lsl #1
   1ade4:	lsl	r2, r2, #1
   1ade8:	add	r0, ip, r0, lsl r2
   1adec:	mov	r2, #2
   1adf0:	moveq	r2, #0
   1adf4:	str	r0, [r1, #12]
   1adf8:	streq	r2, [r1, #8]
   1adfc:	streq	r2, [r1, #20]
   1ae00:	mov	r0, r2
   1ae04:	bx	lr
   1ae08:	sxtb	r2, r0
   1ae0c:	cmp	r2, #0
   1ae10:	movge	r2, #0
   1ae14:	strge	r0, [r1, #12]
   1ae18:	movge	r0, r2
   1ae1c:	bxge	lr
   1ae20:	add	r2, r0, #62	; 0x3e
   1ae24:	uxtb	r2, r2
   1ae28:	cmp	r2, #29
   1ae2c:	bhi	1ae48 <myencoding_decode_utf_8@@Base+0xd8>
   1ae30:	sub	r0, r0, #192	; 0xc0
   1ae34:	mov	r2, #1
   1ae38:	str	r0, [r1, #12]!
   1ae3c:	str	r2, [r1, #8]
   1ae40:	mov	r2, #6
   1ae44:	b	1aecc <myencoding_decode_utf_8@@Base+0x15c>
   1ae48:	and	r2, r0, #240	; 0xf0
   1ae4c:	cmp	r2, #224	; 0xe0
   1ae50:	bne	1ae74 <myencoding_decode_utf_8@@Base+0x104>
   1ae54:	cmp	r0, #237	; 0xed
   1ae58:	beq	1aea0 <myencoding_decode_utf_8@@Base+0x130>
   1ae5c:	cmp	r0, #224	; 0xe0
   1ae60:	bne	1aea8 <myencoding_decode_utf_8@@Base+0x138>
   1ae64:	mov	r2, #160	; 0xa0
   1ae68:	sub	r0, r0, #224	; 0xe0
   1ae6c:	str	r2, [r1]
   1ae70:	b	1aebc <myencoding_decode_utf_8@@Base+0x14c>
   1ae74:	add	r2, r0, #16
   1ae78:	uxtb	r3, r2
   1ae7c:	mov	r2, #1
   1ae80:	cmp	r3, #4
   1ae84:	bhi	1ae00 <myencoding_decode_utf_8@@Base+0x90>
   1ae88:	cmp	r0, #244	; 0xf4
   1ae8c:	beq	1aeb0 <myencoding_decode_utf_8@@Base+0x140>
   1ae90:	cmp	r0, #240	; 0xf0
   1ae94:	moveq	r2, #144	; 0x90
   1ae98:	streq	r2, [r1]
   1ae9c:	b	1aeb8 <myencoding_decode_utf_8@@Base+0x148>
   1aea0:	mov	r2, #159	; 0x9f
   1aea4:	str	r2, [r1, #4]
   1aea8:	sub	r0, r0, #224	; 0xe0
   1aeac:	b	1aebc <myencoding_decode_utf_8@@Base+0x14c>
   1aeb0:	mov	r2, #143	; 0x8f
   1aeb4:	str	r2, [r1, #4]
   1aeb8:	sub	r0, r0, #240	; 0xf0
   1aebc:	str	r0, [r1, #12]!
   1aec0:	mov	r2, #2
   1aec4:	str	r2, [r1, #8]
   1aec8:	mov	r2, #12
   1aecc:	lsl	r0, r0, r2
   1aed0:	mov	r2, #2
   1aed4:	str	r0, [r1]
   1aed8:	mov	r0, r2
   1aedc:	bx	lr
   1aee0:	andeq	r0, r0, r0, lsl #1
   1aee4:	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
	...

0001aef0 <myencoding_decode_ibm866@@Base>:
   1aef0:	sxtb	r2, r0
   1aef4:	cmn	r2, #1
   1aef8:	ble	1af08 <myencoding_decode_ibm866@@Base+0x18>
   1aefc:	str	r0, [r1, #12]
   1af00:	mov	r0, #0
   1af04:	bx	lr
   1af08:	ldr	r2, [pc, #20]	; 1af24 <myencoding_decode_ibm866@@Base+0x34>
   1af0c:	add	r2, pc, r2
   1af10:	add	r0, r2, r0, lsl #2
   1af14:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1af18:	str	r0, [r1, #12]
   1af1c:	mov	r0, #0
   1af20:	bx	lr
   1af24:	andeq	r4, r2, r0, asr pc

0001af28 <myencoding_decode_iso_8859_2@@Base>:
   1af28:	sxtb	r2, r0
   1af2c:	cmn	r2, #1
   1af30:	ble	1af40 <myencoding_decode_iso_8859_2@@Base+0x18>
   1af34:	str	r0, [r1, #12]
   1af38:	mov	r0, #0
   1af3c:	bx	lr
   1af40:	ldr	r2, [pc, #20]	; 1af5c <myencoding_decode_iso_8859_2@@Base+0x34>
   1af44:	add	r2, pc, r2
   1af48:	add	r0, r2, r0, lsl #2
   1af4c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1af50:	str	r0, [r1, #12]
   1af54:	mov	r0, #0
   1af58:	bx	lr
   1af5c:	andeq	r5, r2, r8, lsl r1

0001af60 <myencoding_decode_iso_8859_3@@Base>:
   1af60:	sxtb	r2, r0
   1af64:	cmn	r2, #1
   1af68:	ble	1af78 <myencoding_decode_iso_8859_3@@Base+0x18>
   1af6c:	str	r0, [r1, #12]
   1af70:	mov	r0, #0
   1af74:	bx	lr
   1af78:	ldr	r2, [pc, #20]	; 1af94 <myencoding_decode_iso_8859_3@@Base+0x34>
   1af7c:	add	r2, pc, r2
   1af80:	add	r0, r2, r0, lsl #2
   1af84:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1af88:	str	r0, [r1, #12]
   1af8c:	mov	r0, #0
   1af90:	bx	lr
   1af94:	andeq	r5, r2, r0, ror #5

0001af98 <myencoding_decode_iso_8859_4@@Base>:
   1af98:	sxtb	r2, r0
   1af9c:	cmn	r2, #1
   1afa0:	ble	1afb0 <myencoding_decode_iso_8859_4@@Base+0x18>
   1afa4:	str	r0, [r1, #12]
   1afa8:	mov	r0, #0
   1afac:	bx	lr
   1afb0:	ldr	r2, [pc, #20]	; 1afcc <myencoding_decode_iso_8859_4@@Base+0x34>
   1afb4:	add	r2, pc, r2
   1afb8:	add	r0, r2, r0, lsl #2
   1afbc:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1afc0:	str	r0, [r1, #12]
   1afc4:	mov	r0, #0
   1afc8:	bx	lr
   1afcc:	andeq	r5, r2, r8, lsr #9

0001afd0 <myencoding_decode_iso_8859_5@@Base>:
   1afd0:	sxtb	r2, r0
   1afd4:	cmn	r2, #1
   1afd8:	ble	1afe8 <myencoding_decode_iso_8859_5@@Base+0x18>
   1afdc:	str	r0, [r1, #12]
   1afe0:	mov	r0, #0
   1afe4:	bx	lr
   1afe8:	ldr	r2, [pc, #20]	; 1b004 <myencoding_decode_iso_8859_5@@Base+0x34>
   1afec:	add	r2, pc, r2
   1aff0:	add	r0, r2, r0, lsl #2
   1aff4:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1aff8:	str	r0, [r1, #12]
   1affc:	mov	r0, #0
   1b000:	bx	lr
   1b004:	andeq	r5, r2, r0, ror r6

0001b008 <myencoding_decode_iso_8859_6@@Base>:
   1b008:	sxtb	r2, r0
   1b00c:	cmn	r2, #1
   1b010:	ble	1b020 <myencoding_decode_iso_8859_6@@Base+0x18>
   1b014:	str	r0, [r1, #12]
   1b018:	mov	r0, #0
   1b01c:	bx	lr
   1b020:	ldr	r2, [pc, #20]	; 1b03c <myencoding_decode_iso_8859_6@@Base+0x34>
   1b024:	add	r2, pc, r2
   1b028:	add	r0, r2, r0, lsl #2
   1b02c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b030:	str	r0, [r1, #12]
   1b034:	mov	r0, #0
   1b038:	bx	lr
   1b03c:	ldrdeq	r3, [r5], -r8

0001b040 <myencoding_decode_iso_8859_7@@Base>:
   1b040:	sxtb	r2, r0
   1b044:	cmn	r2, #1
   1b048:	ble	1b058 <myencoding_decode_iso_8859_7@@Base+0x18>
   1b04c:	str	r0, [r1, #12]
   1b050:	mov	r0, #0
   1b054:	bx	lr
   1b058:	ldr	r2, [pc, #20]	; 1b074 <myencoding_decode_iso_8859_7@@Base+0x34>
   1b05c:	add	r2, pc, r2
   1b060:	add	r0, r2, r0, lsl #2
   1b064:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b068:	str	r0, [r1, #12]
   1b06c:	mov	r0, #0
   1b070:	bx	lr
   1b074:	andeq	r5, r2, r0, lsl #16

0001b078 <myencoding_decode_iso_8859_8@@Base>:
   1b078:	sxtb	r2, r0
   1b07c:	cmn	r2, #1
   1b080:	ble	1b090 <myencoding_decode_iso_8859_8@@Base+0x18>
   1b084:	str	r0, [r1, #12]
   1b088:	mov	r0, #0
   1b08c:	bx	lr
   1b090:	ldr	r2, [pc, #20]	; 1b0ac <myencoding_decode_iso_8859_8@@Base+0x34>
   1b094:	add	r2, pc, r2
   1b098:	add	r0, r2, r0, lsl #2
   1b09c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b0a0:	str	r0, [r1, #12]
   1b0a4:	mov	r0, #0
   1b0a8:	bx	lr
   1b0ac:	andeq	r5, r2, r8, asr #19

0001b0b0 <myencoding_decode_iso_8859_8_i@@Base>:
   1b0b0:	sxtb	r2, r0
   1b0b4:	cmn	r2, #1
   1b0b8:	ble	1b0c8 <myencoding_decode_iso_8859_8_i@@Base+0x18>
   1b0bc:	str	r0, [r1, #12]
   1b0c0:	mov	r0, #0
   1b0c4:	bx	lr
   1b0c8:	ldr	r2, [pc, #20]	; 1b0e4 <myencoding_decode_iso_8859_8_i@@Base+0x34>
   1b0cc:	add	r2, pc, r2
   1b0d0:	add	r0, r2, r0, lsl #2
   1b0d4:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b0d8:	str	r0, [r1, #12]
   1b0dc:	mov	r0, #0
   1b0e0:	bx	lr
   1b0e4:	muleq	r2, r0, r9

0001b0e8 <myencoding_decode_iso_8859_10@@Base>:
   1b0e8:	sxtb	r2, r0
   1b0ec:	cmn	r2, #1
   1b0f0:	ble	1b100 <myencoding_decode_iso_8859_10@@Base+0x18>
   1b0f4:	str	r0, [r1, #12]
   1b0f8:	mov	r0, #0
   1b0fc:	bx	lr
   1b100:	ldr	r2, [pc, #20]	; 1b11c <myencoding_decode_iso_8859_10@@Base+0x34>
   1b104:	add	r2, pc, r2
   1b108:	add	r0, r2, r0, lsl #2
   1b10c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b110:	str	r0, [r1, #12]
   1b114:	mov	r0, #0
   1b118:	bx	lr
   1b11c:	andeq	r5, r2, r8, asr fp

0001b120 <myencoding_decode_iso_8859_13@@Base>:
   1b120:	sxtb	r2, r0
   1b124:	cmn	r2, #1
   1b128:	ble	1b138 <myencoding_decode_iso_8859_13@@Base+0x18>
   1b12c:	str	r0, [r1, #12]
   1b130:	mov	r0, #0
   1b134:	bx	lr
   1b138:	ldr	r2, [pc, #20]	; 1b154 <myencoding_decode_iso_8859_13@@Base+0x34>
   1b13c:	add	r2, pc, r2
   1b140:	add	r0, r2, r0, lsl #2
   1b144:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b148:	str	r0, [r1, #12]
   1b14c:	mov	r0, #0
   1b150:	bx	lr
   1b154:	andeq	r5, r2, r0, lsr #26

0001b158 <myencoding_decode_iso_8859_14@@Base>:
   1b158:	sxtb	r2, r0
   1b15c:	cmn	r2, #1
   1b160:	ble	1b170 <myencoding_decode_iso_8859_14@@Base+0x18>
   1b164:	str	r0, [r1, #12]
   1b168:	mov	r0, #0
   1b16c:	bx	lr
   1b170:	ldr	r2, [pc, #20]	; 1b18c <myencoding_decode_iso_8859_14@@Base+0x34>
   1b174:	add	r2, pc, r2
   1b178:	add	r0, r2, r0, lsl #2
   1b17c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b180:	str	r0, [r1, #12]
   1b184:	mov	r0, #0
   1b188:	bx	lr
   1b18c:	andeq	r5, r2, r8, ror #29

0001b190 <myencoding_decode_iso_8859_15@@Base>:
   1b190:	sxtb	r2, r0
   1b194:	cmn	r2, #1
   1b198:	ble	1b1a8 <myencoding_decode_iso_8859_15@@Base+0x18>
   1b19c:	str	r0, [r1, #12]
   1b1a0:	mov	r0, #0
   1b1a4:	bx	lr
   1b1a8:	ldr	r2, [pc, #20]	; 1b1c4 <myencoding_decode_iso_8859_15@@Base+0x34>
   1b1ac:	add	r2, pc, r2
   1b1b0:	add	r0, r2, r0, lsl #2
   1b1b4:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b1b8:	str	r0, [r1, #12]
   1b1bc:	mov	r0, #0
   1b1c0:	bx	lr
   1b1c4:	strheq	r6, [r2], -r0

0001b1c8 <myencoding_decode_iso_8859_16@@Base>:
   1b1c8:	sxtb	r2, r0
   1b1cc:	cmn	r2, #1
   1b1d0:	ble	1b1e0 <myencoding_decode_iso_8859_16@@Base+0x18>
   1b1d4:	str	r0, [r1, #12]
   1b1d8:	mov	r0, #0
   1b1dc:	bx	lr
   1b1e0:	ldr	r2, [pc, #20]	; 1b1fc <myencoding_decode_iso_8859_16@@Base+0x34>
   1b1e4:	add	r2, pc, r2
   1b1e8:	add	r0, r2, r0, lsl #2
   1b1ec:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b1f0:	str	r0, [r1, #12]
   1b1f4:	mov	r0, #0
   1b1f8:	bx	lr
   1b1fc:	andeq	r6, r2, r8, ror r2

0001b200 <myencoding_decode_koi8_r@@Base>:
   1b200:	sxtb	r2, r0
   1b204:	cmn	r2, #1
   1b208:	ble	1b218 <myencoding_decode_koi8_r@@Base+0x18>
   1b20c:	str	r0, [r1, #12]
   1b210:	mov	r0, #0
   1b214:	bx	lr
   1b218:	ldr	r2, [pc, #20]	; 1b234 <myencoding_decode_koi8_r@@Base+0x34>
   1b21c:	add	r2, pc, r2
   1b220:	add	r0, r2, r0, lsl #2
   1b224:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b228:	str	r0, [r1, #12]
   1b22c:	mov	r0, #0
   1b230:	bx	lr
   1b234:	andeq	r6, r2, r0, asr #8

0001b238 <myencoding_decode_koi8_u@@Base>:
   1b238:	sxtb	r2, r0
   1b23c:	cmn	r2, #1
   1b240:	ble	1b250 <myencoding_decode_koi8_u@@Base+0x18>
   1b244:	str	r0, [r1, #12]
   1b248:	mov	r0, #0
   1b24c:	bx	lr
   1b250:	ldr	r2, [pc, #20]	; 1b26c <myencoding_decode_koi8_u@@Base+0x34>
   1b254:	add	r2, pc, r2
   1b258:	add	r0, r2, r0, lsl #2
   1b25c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b260:	str	r0, [r1, #12]
   1b264:	mov	r0, #0
   1b268:	bx	lr
   1b26c:	andeq	r6, r2, r8, lsl #12

0001b270 <myencoding_decode_macintosh@@Base>:
   1b270:	sxtb	r2, r0
   1b274:	cmn	r2, #1
   1b278:	ble	1b288 <myencoding_decode_macintosh@@Base+0x18>
   1b27c:	str	r0, [r1, #12]
   1b280:	mov	r0, #0
   1b284:	bx	lr
   1b288:	ldr	r2, [pc, #20]	; 1b2a4 <myencoding_decode_macintosh@@Base+0x34>
   1b28c:	add	r2, pc, r2
   1b290:	add	r0, r2, r0, lsl #2
   1b294:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b298:	str	r0, [r1, #12]
   1b29c:	mov	r0, #0
   1b2a0:	bx	lr
   1b2a4:	ldrdeq	r6, [r2], -r0

0001b2a8 <myencoding_decode_windows_874@@Base>:
   1b2a8:	sxtb	r2, r0
   1b2ac:	cmn	r2, #1
   1b2b0:	ble	1b2c0 <myencoding_decode_windows_874@@Base+0x18>
   1b2b4:	str	r0, [r1, #12]
   1b2b8:	mov	r0, #0
   1b2bc:	bx	lr
   1b2c0:	ldr	r2, [pc, #20]	; 1b2dc <myencoding_decode_windows_874@@Base+0x34>
   1b2c4:	add	r2, pc, r2
   1b2c8:	add	r0, r2, r0, lsl #2
   1b2cc:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b2d0:	str	r0, [r1, #12]
   1b2d4:	mov	r0, #0
   1b2d8:	bx	lr
   1b2dc:	muleq	r2, r8, r9

0001b2e0 <myencoding_decode_windows_1250@@Base>:
   1b2e0:	sxtb	r2, r0
   1b2e4:	cmn	r2, #1
   1b2e8:	ble	1b2f8 <myencoding_decode_windows_1250@@Base+0x18>
   1b2ec:	str	r0, [r1, #12]
   1b2f0:	mov	r0, #0
   1b2f4:	bx	lr
   1b2f8:	ldr	r2, [pc, #20]	; 1b314 <myencoding_decode_windows_1250@@Base+0x34>
   1b2fc:	add	r2, pc, r2
   1b300:	add	r0, r2, r0, lsl #2
   1b304:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b308:	str	r0, [r1, #12]
   1b30c:	mov	r0, #0
   1b310:	bx	lr
   1b314:	andeq	r6, r2, r0, ror #22

0001b318 <myencoding_decode_windows_1251@@Base>:
   1b318:	sxtb	r2, r0
   1b31c:	cmn	r2, #1
   1b320:	ble	1b330 <myencoding_decode_windows_1251@@Base+0x18>
   1b324:	str	r0, [r1, #12]
   1b328:	mov	r0, #0
   1b32c:	bx	lr
   1b330:	ldr	r2, [pc, #20]	; 1b34c <myencoding_decode_windows_1251@@Base+0x34>
   1b334:	add	r2, pc, r2
   1b338:	add	r0, r2, r0, lsl #2
   1b33c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b340:	str	r0, [r1, #12]
   1b344:	mov	r0, #0
   1b348:	bx	lr
   1b34c:	andeq	r6, r2, r8, lsr #26

0001b350 <myencoding_decode_windows_1252@@Base>:
   1b350:	sxtb	r2, r0
   1b354:	cmn	r2, #1
   1b358:	ble	1b368 <myencoding_decode_windows_1252@@Base+0x18>
   1b35c:	str	r0, [r1, #12]
   1b360:	mov	r0, #0
   1b364:	bx	lr
   1b368:	ldr	r2, [pc, #20]	; 1b384 <myencoding_decode_windows_1252@@Base+0x34>
   1b36c:	add	r2, pc, r2
   1b370:	add	r0, r2, r0, lsl #2
   1b374:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b378:	str	r0, [r1, #12]
   1b37c:	mov	r0, #0
   1b380:	bx	lr
   1b384:	strdeq	r6, [r2], -r0

0001b388 <myencoding_decode_windows_1253@@Base>:
   1b388:	sxtb	r2, r0
   1b38c:	cmn	r2, #1
   1b390:	ble	1b3a0 <myencoding_decode_windows_1253@@Base+0x18>
   1b394:	str	r0, [r1, #12]
   1b398:	mov	r0, #0
   1b39c:	bx	lr
   1b3a0:	ldr	r2, [pc, #20]	; 1b3bc <myencoding_decode_windows_1253@@Base+0x34>
   1b3a4:	add	r2, pc, r2
   1b3a8:	add	r0, r2, r0, lsl #2
   1b3ac:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b3b0:	str	r0, [r1, #12]
   1b3b4:	mov	r0, #0
   1b3b8:	bx	lr
   1b3bc:	strheq	r7, [r2], -r8

0001b3c0 <myencoding_decode_windows_1254@@Base>:
   1b3c0:	sxtb	r2, r0
   1b3c4:	cmn	r2, #1
   1b3c8:	ble	1b3d8 <myencoding_decode_windows_1254@@Base+0x18>
   1b3cc:	str	r0, [r1, #12]
   1b3d0:	mov	r0, #0
   1b3d4:	bx	lr
   1b3d8:	ldr	r2, [pc, #20]	; 1b3f4 <myencoding_decode_windows_1254@@Base+0x34>
   1b3dc:	add	r2, pc, r2
   1b3e0:	add	r0, r2, r0, lsl #2
   1b3e4:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b3e8:	str	r0, [r1, #12]
   1b3ec:	mov	r0, #0
   1b3f0:	bx	lr
   1b3f4:	andeq	r7, r2, r0, lsl #5

0001b3f8 <myencoding_decode_windows_1255@@Base>:
   1b3f8:	sxtb	r2, r0
   1b3fc:	cmn	r2, #1
   1b400:	ble	1b410 <myencoding_decode_windows_1255@@Base+0x18>
   1b404:	str	r0, [r1, #12]
   1b408:	mov	r0, #0
   1b40c:	bx	lr
   1b410:	ldr	r2, [pc, #20]	; 1b42c <myencoding_decode_windows_1255@@Base+0x34>
   1b414:	add	r2, pc, r2
   1b418:	add	r0, r2, r0, lsl #2
   1b41c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b420:	str	r0, [r1, #12]
   1b424:	mov	r0, #0
   1b428:	bx	lr
   1b42c:	andeq	r7, r2, r8, asr #8

0001b430 <myencoding_decode_windows_1256@@Base>:
   1b430:	sxtb	r2, r0
   1b434:	cmn	r2, #1
   1b438:	ble	1b448 <myencoding_decode_windows_1256@@Base+0x18>
   1b43c:	str	r0, [r1, #12]
   1b440:	mov	r0, #0
   1b444:	bx	lr
   1b448:	ldr	r2, [pc, #20]	; 1b464 <myencoding_decode_windows_1256@@Base+0x34>
   1b44c:	add	r2, pc, r2
   1b450:	add	r0, r2, r0, lsl #2
   1b454:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b458:	str	r0, [r1, #12]
   1b45c:	mov	r0, #0
   1b460:	bx	lr
   1b464:	andeq	r7, r2, r0, lsl r6

0001b468 <myencoding_decode_windows_1257@@Base>:
   1b468:	sxtb	r2, r0
   1b46c:	cmn	r2, #1
   1b470:	ble	1b480 <myencoding_decode_windows_1257@@Base+0x18>
   1b474:	str	r0, [r1, #12]
   1b478:	mov	r0, #0
   1b47c:	bx	lr
   1b480:	ldr	r2, [pc, #20]	; 1b49c <myencoding_decode_windows_1257@@Base+0x34>
   1b484:	add	r2, pc, r2
   1b488:	add	r0, r2, r0, lsl #2
   1b48c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b490:	str	r0, [r1, #12]
   1b494:	mov	r0, #0
   1b498:	bx	lr
   1b49c:	ldrdeq	r7, [r2], -r8

0001b4a0 <myencoding_decode_windows_1258@@Base>:
   1b4a0:	sxtb	r2, r0
   1b4a4:	cmn	r2, #1
   1b4a8:	ble	1b4b8 <myencoding_decode_windows_1258@@Base+0x18>
   1b4ac:	str	r0, [r1, #12]
   1b4b0:	mov	r0, #0
   1b4b4:	bx	lr
   1b4b8:	ldr	r2, [pc, #20]	; 1b4d4 <myencoding_decode_windows_1258@@Base+0x34>
   1b4bc:	add	r2, pc, r2
   1b4c0:	add	r0, r2, r0, lsl #2
   1b4c4:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b4c8:	str	r0, [r1, #12]
   1b4cc:	mov	r0, #0
   1b4d0:	bx	lr
   1b4d4:	andeq	r7, r2, r0, lsr #19

0001b4d8 <myencoding_decode_x_mac_cyrillic@@Base>:
   1b4d8:	sxtb	r2, r0
   1b4dc:	cmn	r2, #1
   1b4e0:	ble	1b4f0 <myencoding_decode_x_mac_cyrillic@@Base+0x18>
   1b4e4:	str	r0, [r1, #12]
   1b4e8:	mov	r0, #0
   1b4ec:	bx	lr
   1b4f0:	ldr	r2, [pc, #20]	; 1b50c <myencoding_decode_x_mac_cyrillic@@Base+0x34>
   1b4f4:	add	r2, pc, r2
   1b4f8:	add	r0, r2, r0, lsl #2
   1b4fc:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b500:	str	r0, [r1, #12]
   1b504:	mov	r0, #0
   1b508:	bx	lr
   1b50c:	andeq	r7, r2, r8, ror #22

0001b510 <myencoding_decode_gbk@@Base>:
   1b510:	b	1b514 <myencoding_decode_gb18030@@Base>

0001b514 <myencoding_decode_gb18030@@Base>:
   1b514:	push	{fp, lr}
   1b518:	mov	fp, sp
   1b51c:	ldr	r2, [r1, #8]
   1b520:	cmp	r2, #0
   1b524:	beq	1b5d0 <myencoding_decode_gb18030@@Base+0xbc>
   1b528:	sub	r3, r0, #48	; 0x30
   1b52c:	uxtb	r3, r3
   1b530:	cmp	r3, #10
   1b534:	bcs	1b5f4 <myencoding_decode_gb18030@@Base+0xe0>
   1b538:	ldm	r1, {r3, ip}
   1b53c:	add	r3, r3, r3, lsl #2
   1b540:	add	r3, ip, r3, lsl #1
   1b544:	rsb	r3, r3, r3, lsl #6
   1b548:	add	r2, r2, r3, lsl #1
   1b54c:	movw	r3, #57927	; 0xe247
   1b550:	add	r2, r2, r2, lsl #2
   1b554:	movt	r3, #18
   1b558:	add	ip, r0, r2, lsl #1
   1b55c:	movw	r0, #16718	; 0x414e
   1b560:	mov	r2, #0
   1b564:	movt	r0, #65510	; 0xffe6
   1b568:	add	lr, ip, r0
   1b56c:	cmp	lr, r3
   1b570:	bhi	1b6e8 <myencoding_decode_gb18030@@Base+0x1d4>
   1b574:	movw	r3, #42834	; 0xa752
   1b578:	movt	r3, #65509	; 0xffe5
   1b57c:	add	ip, ip, r3
   1b580:	movw	r3, #18508	; 0x484c
   1b584:	movt	r3, #2
   1b588:	cmp	ip, r3
   1b58c:	bcc	1b6e8 <myencoding_decode_gb18030@@Base+0x1d4>
   1b590:	movw	r3, #7457	; 0x1d21
   1b594:	movw	r2, #59335	; 0xe7c7
   1b598:	cmp	lr, r3
   1b59c:	beq	1b6e8 <myencoding_decode_gb18030@@Base+0x1d4>
   1b5a0:	ldr	r2, [pc, #364]	; 1b714 <myencoding_decode_gb18030@@Base+0x200>
   1b5a4:	add	r2, pc, r2
   1b5a8:	add	r3, r2, #1648	; 0x670
   1b5ac:	mvn	r2, #206	; 0xce
   1b5b0:	cmp	r2, #0
   1b5b4:	beq	1b6d8 <myencoding_decode_gb18030@@Base+0x1c4>
   1b5b8:	ldr	r0, [r3], #-8
   1b5bc:	add	r2, r2, #1
   1b5c0:	cmp	r0, lr
   1b5c4:	bhi	1b5b0 <myencoding_decode_gb18030@@Base+0x9c>
   1b5c8:	ldr	r3, [r3, #12]
   1b5cc:	b	1b6e0 <myencoding_decode_gb18030@@Base+0x1cc>
   1b5d0:	ldr	r2, [r1, #4]
   1b5d4:	cmp	r2, #0
   1b5d8:	beq	1b5fc <myencoding_decode_gb18030@@Base+0xe8>
   1b5dc:	cmp	r0, #129	; 0x81
   1b5e0:	bcc	1b628 <myencoding_decode_gb18030@@Base+0x114>
   1b5e4:	cmp	r0, #255	; 0xff
   1b5e8:	beq	1b628 <myencoding_decode_gb18030@@Base+0x114>
   1b5ec:	str	r0, [r1, #8]
   1b5f0:	b	1b61c <myencoding_decode_gb18030@@Base+0x108>
   1b5f4:	ldr	r2, [r1, #12]
   1b5f8:	b	1b6ec <myencoding_decode_gb18030@@Base+0x1d8>
   1b5fc:	ldr	lr, [r1]
   1b600:	cmp	lr, #0
   1b604:	beq	1b640 <myencoding_decode_gb18030@@Base+0x12c>
   1b608:	sub	r2, r0, #48	; 0x30
   1b60c:	uxtb	r2, r2
   1b610:	cmp	r2, #9
   1b614:	bhi	1b670 <myencoding_decode_gb18030@@Base+0x15c>
   1b618:	str	r0, [r1, #4]
   1b61c:	mov	r2, #2
   1b620:	mov	r0, r2
   1b624:	pop	{fp, pc}
   1b628:	mov	r0, #0
   1b62c:	str	r0, [r1]
   1b630:	str	r0, [r1, #4]
   1b634:	mov	r2, #1
   1b638:	mov	r0, r2
   1b63c:	pop	{fp, pc}
   1b640:	sxtb	r2, r0
   1b644:	cmp	r2, #0
   1b648:	bge	1b6c8 <myencoding_decode_gb18030@@Base+0x1b4>
   1b64c:	cmp	r0, #255	; 0xff
   1b650:	beq	1b634 <myencoding_decode_gb18030@@Base+0x120>
   1b654:	cmp	r0, #128	; 0x80
   1b658:	bne	1b70c <myencoding_decode_gb18030@@Base+0x1f8>
   1b65c:	movw	r0, #8364	; 0x20ac
   1b660:	mov	r2, #0
   1b664:	str	r0, [r1, #12]
   1b668:	mov	r0, r2
   1b66c:	pop	{fp, pc}
   1b670:	mov	r2, #0
   1b674:	str	r2, [r1]
   1b678:	sxtb	r2, r0
   1b67c:	cmn	r2, #1
   1b680:	blt	1b698 <myencoding_decode_gb18030@@Base+0x184>
   1b684:	sub	ip, r0, #64	; 0x40
   1b688:	mov	r2, #1
   1b68c:	uxtb	r3, ip
   1b690:	cmp	r3, #62	; 0x3e
   1b694:	bhi	1b620 <myencoding_decode_gb18030@@Base+0x10c>
   1b698:	mvn	r2, #64	; 0x40
   1b69c:	cmp	r0, #127	; 0x7f
   1b6a0:	mvncc	r2, #63	; 0x3f
   1b6a4:	add	r0, r0, r2
   1b6a8:	mov	r2, #190	; 0xbe
   1b6ac:	mla	r0, lr, r2, r0
   1b6b0:	ldr	r2, [pc, #96]	; 1b718 <myencoding_decode_gb18030@@Base+0x204>
   1b6b4:	add	r2, pc, r2
   1b6b8:	add	r0, r2, r0, lsl #2
   1b6bc:	movw	r2, #33032	; 0x8108
   1b6c0:	movt	r2, #65534	; 0xfffe
   1b6c4:	ldr	r0, [r0, r2]
   1b6c8:	mov	r2, #0
   1b6cc:	str	r0, [r1, #12]
   1b6d0:	mov	r0, r2
   1b6d4:	pop	{fp, pc}
   1b6d8:	mov	r2, #0
   1b6dc:	mov	r3, #0
   1b6e0:	add	r0, r2, lr
   1b6e4:	add	r2, r0, r3
   1b6e8:	str	r2, [r1, #12]
   1b6ec:	mov	r0, #0
   1b6f0:	str	r0, [r1]
   1b6f4:	str	r0, [r1, #4]
   1b6f8:	str	r0, [r1, #8]
   1b6fc:	clz	r0, r2
   1b700:	lsr	r2, r0, #5
   1b704:	mov	r0, r2
   1b708:	pop	{fp, pc}
   1b70c:	str	r0, [r1]
   1b710:	b	1b61c <myencoding_decode_gb18030@@Base+0x108>
   1b714:			; <UNDEFINED> instruction: 0x00027cb8
   1b718:	andeq	r8, r2, r0, lsr #4

0001b71c <myencoding_index_gb18030_ranges_code_point@@Base>:
   1b71c:	movw	r2, #57927	; 0xe247
   1b720:	mov	r1, #0
   1b724:	movt	r2, #18
   1b728:	cmp	r0, r2
   1b72c:	bhi	1b798 <myencoding_index_gb18030_ranges_code_point@@Base+0x7c>
   1b730:	movw	r2, #39420	; 0x99fc
   1b734:	movw	r3, #18508	; 0x484c
   1b738:	sub	r2, r0, r2
   1b73c:	movt	r3, #2
   1b740:	cmp	r2, r3
   1b744:	bcc	1b798 <myencoding_index_gb18030_ranges_code_point@@Base+0x7c>
   1b748:	movw	r2, #7457	; 0x1d21
   1b74c:	movw	r1, #59335	; 0xe7c7
   1b750:	cmp	r0, r2
   1b754:	beq	1b798 <myencoding_index_gb18030_ranges_code_point@@Base+0x7c>
   1b758:	ldr	r1, [pc, #64]	; 1b7a0 <myencoding_index_gb18030_ranges_code_point@@Base+0x84>
   1b75c:	add	r1, pc, r1
   1b760:	add	r2, r1, #1648	; 0x670
   1b764:	mvn	r1, #206	; 0xce
   1b768:	cmp	r1, #0
   1b76c:	beq	1b788 <myencoding_index_gb18030_ranges_code_point@@Base+0x6c>
   1b770:	ldr	r3, [r2], #-8
   1b774:	add	r1, r1, #1
   1b778:	cmp	r3, r0
   1b77c:	bhi	1b768 <myencoding_index_gb18030_ranges_code_point@@Base+0x4c>
   1b780:	ldr	r2, [r2, #12]
   1b784:	b	1b790 <myencoding_index_gb18030_ranges_code_point@@Base+0x74>
   1b788:	mov	r1, #0
   1b78c:	mov	r2, #0
   1b790:	add	r0, r1, r0
   1b794:	add	r1, r0, r2
   1b798:	mov	r0, r1
   1b79c:	bx	lr
   1b7a0:	andeq	r7, r2, r0, lsl #22

0001b7a4 <myencoding_decode_big5@@Base>:
   1b7a4:	ldr	ip, [r1]
   1b7a8:	mov	r2, r0
   1b7ac:	cmp	ip, #0
   1b7b0:	beq	1b8ac <myencoding_decode_big5@@Base+0x108>
   1b7b4:	mov	r0, #0
   1b7b8:	mov	r3, #98	; 0x62
   1b7bc:	cmp	r2, #127	; 0x7f
   1b7c0:	str	r0, [r1]
   1b7c4:	sub	r0, r2, #64	; 0x40
   1b7c8:	movwcc	r3, #64	; 0x40
   1b7cc:	uxtb	r0, r0
   1b7d0:	cmp	r0, #63	; 0x3f
   1b7d4:	bcc	1b7ec <myencoding_decode_big5@@Base+0x48>
   1b7d8:	mov	r0, #1
   1b7dc:	cmp	r2, #161	; 0xa1
   1b7e0:	bcc	1b8d4 <myencoding_decode_big5@@Base+0x130>
   1b7e4:	cmp	r2, #255	; 0xff
   1b7e8:	beq	1b8d4 <myencoding_decode_big5@@Base+0x130>
   1b7ec:	sub	r0, r2, r3
   1b7f0:	mov	r2, #157	; 0x9d
   1b7f4:	movw	r3, #21386	; 0x538a
   1b7f8:	mla	r0, ip, r2, r0
   1b7fc:	movw	r2, #20253	; 0x4f1d
   1b800:	sub	r2, r0, r2
   1b804:	sub	r0, r0, r3
   1b808:	cmp	r0, #33	; 0x21
   1b80c:	bhi	1b8d8 <myencoding_decode_big5@@Base+0x134>
   1b810:	add	r3, pc, #4
   1b814:	ldr	r0, [r3, r0, lsl #2]
   1b818:	add	pc, r3, r0
   1b81c:	andeq	r0, r0, r8, lsl #1
   1b820:	andeq	r0, r0, r8, asr #1
   1b824:	andeq	r0, r0, r4, ror #1
   1b828:	andeq	r0, r0, r8, asr #1
   1b82c:	andeq	r0, r0, r8, asr #1
   1b830:	andeq	r0, r0, r8, asr #1
   1b834:	andeq	r0, r0, r8, asr #1
   1b838:	andeq	r0, r0, r8, asr #1
   1b83c:	andeq	r0, r0, r8, asr #1
   1b840:	andeq	r0, r0, r8, asr #1
   1b844:	andeq	r0, r0, r8, asr #1
   1b848:	andeq	r0, r0, r8, asr #1
   1b84c:	andeq	r0, r0, r8, asr #1
   1b850:	andeq	r0, r0, r8, asr #1
   1b854:	andeq	r0, r0, r8, asr #1
   1b858:	andeq	r0, r0, r8, asr #1
   1b85c:	andeq	r0, r0, r8, asr #1
   1b860:	andeq	r0, r0, r8, asr #1
   1b864:	andeq	r0, r0, r8, asr #1
   1b868:	andeq	r0, r0, r8, asr #1
   1b86c:	andeq	r0, r0, r8, asr #1
   1b870:	andeq	r0, r0, r8, asr #1
   1b874:	andeq	r0, r0, r8, asr #1
   1b878:	andeq	r0, r0, r8, asr #1
   1b87c:	andeq	r0, r0, r8, asr #1
   1b880:	andeq	r0, r0, r8, asr #1
   1b884:	andeq	r0, r0, r8, asr #1
   1b888:	andeq	r0, r0, r8, asr #1
   1b88c:	andeq	r0, r0, r8, asr #1
   1b890:	andeq	r0, r0, r8, asr #1
   1b894:	andeq	r0, r0, r8, asr #1
   1b898:	strdeq	r0, [r0], -ip
   1b89c:	andeq	r0, r0, r8, asr #1
   1b8a0:	andeq	r0, r0, r4, lsl r1
   1b8a4:	mov	r0, #772	; 0x304
   1b8a8:	b	1b904 <myencoding_decode_big5@@Base+0x160>
   1b8ac:	sxtb	r0, r2
   1b8b0:	cmp	r0, #0
   1b8b4:	movge	r0, #0
   1b8b8:	strge	r2, [r1, #12]
   1b8bc:	bxge	lr
   1b8c0:	cmp	r2, #128	; 0x80
   1b8c4:	mov	r0, #1
   1b8c8:	cmpne	r2, #255	; 0xff
   1b8cc:	movne	r0, #2
   1b8d0:	strne	r2, [r1]
   1b8d4:	bx	lr
   1b8d8:	mov	r0, #1
   1b8dc:	cmp	r2, #0
   1b8e0:	bxeq	lr
   1b8e4:	mov	r0, #0
   1b8e8:	str	r0, [r1, #16]
   1b8ec:	ldr	r3, [pc, #84]	; 1b948 <myencoding_decode_big5@@Base+0x1a4>
   1b8f0:	add	r3, pc, r3
   1b8f4:	ldr	r2, [r3, r2, lsl #2]
   1b8f8:	str	r2, [r1, #12]
   1b8fc:	bx	lr
   1b900:	mov	r0, #780	; 0x30c
   1b904:	mov	r2, #202	; 0xca
   1b908:	str	r2, [r1, #12]
   1b90c:	str	r0, [r1, #16]
   1b910:	mov	r0, #0
   1b914:	bx	lr
   1b918:	mov	r0, #772	; 0x304
   1b91c:	mov	r2, #234	; 0xea
   1b920:	str	r2, [r1, #12]
   1b924:	str	r0, [r1, #16]
   1b928:	mov	r0, #0
   1b92c:	bx	lr
   1b930:	mov	r0, #780	; 0x30c
   1b934:	mov	r2, #234	; 0xea
   1b938:	str	r2, [r1, #12]
   1b93c:	str	r0, [r1, #16]
   1b940:	mov	r0, #0
   1b944:	bx	lr
   1b948:	strdeq	pc, [r3], -r4

0001b94c <myencoding_decode_euc_jp@@Base>:
   1b94c:	ldr	r2, [r1]
   1b950:	cmp	r2, #0
   1b954:	beq	1ba34 <myencoding_decode_euc_jp@@Base+0xe8>
   1b958:	cmp	r2, #143	; 0x8f
   1b95c:	beq	1b994 <myencoding_decode_euc_jp@@Base+0x48>
   1b960:	cmp	r2, #142	; 0x8e
   1b964:	bne	1b9b4 <myencoding_decode_euc_jp@@Base+0x68>
   1b968:	add	r2, r0, #95	; 0x5f
   1b96c:	uxtb	r2, r2
   1b970:	cmp	r2, #62	; 0x3e
   1b974:	bhi	1ba2c <myencoding_decode_euc_jp@@Base+0xe0>
   1b978:	movw	r3, #65216	; 0xfec0
   1b97c:	mov	r2, #0
   1b980:	add	r0, r0, r3
   1b984:	str	r2, [r1]
   1b988:	str	r0, [r1, #12]
   1b98c:	mov	r0, r2
   1b990:	bx	lr
   1b994:	cmp	r0, #161	; 0xa1
   1b998:	bcc	1ba2c <myencoding_decode_euc_jp@@Base+0xe0>
   1b99c:	cmp	r0, #255	; 0xff
   1b9a0:	beq	1ba2c <myencoding_decode_euc_jp@@Base+0xe0>
   1b9a4:	str	r0, [r1]
   1b9a8:	mov	r0, #1
   1b9ac:	str	r0, [r1, #20]
   1b9b0:	b	1ba70 <myencoding_decode_euc_jp@@Base+0x124>
   1b9b4:	mov	r3, #0
   1b9b8:	str	r3, [r1]
   1b9bc:	sub	r3, r2, #161	; 0xa1
   1b9c0:	cmp	r3, #93	; 0x5d
   1b9c4:	bhi	1ba34 <myencoding_decode_euc_jp@@Base+0xe8>
   1b9c8:	cmp	r0, #161	; 0xa1
   1b9cc:	bcc	1ba34 <myencoding_decode_euc_jp@@Base+0xe8>
   1b9d0:	cmp	r0, #255	; 0xff
   1b9d4:	beq	1ba34 <myencoding_decode_euc_jp@@Base+0xe8>
   1b9d8:	mov	r3, #0
   1b9dc:	ldr	ip, [r1, #20]
   1b9e0:	str	r3, [r1, #20]
   1b9e4:	mov	r3, #94	; 0x5e
   1b9e8:	mla	r0, r2, r3, r0
   1b9ec:	movw	r2, #4356	; 0x1104
   1b9f0:	movt	r2, #65535	; 0xffff
   1b9f4:	add	r0, r2, r0, lsl #2
   1b9f8:	ldr	r2, [pc, #124]	; 1ba7c <myencoding_decode_euc_jp@@Base+0x130>
   1b9fc:	ldr	r3, [pc, #124]	; 1ba80 <myencoding_decode_euc_jp@@Base+0x134>
   1ba00:	cmp	ip, #0
   1ba04:	add	r3, pc, r3
   1ba08:	add	r2, pc, r2
   1ba0c:	add	r3, r3, r0
   1ba10:	addeq	r3, r2, r0
   1ba14:	ldr	r0, [r3]
   1ba18:	str	r0, [r1, #12]
   1ba1c:	clz	r0, r0
   1ba20:	lsr	r2, r0, #5
   1ba24:	mov	r0, r2
   1ba28:	bx	lr
   1ba2c:	mov	r2, #0
   1ba30:	str	r2, [r1]
   1ba34:	sxtb	r2, r0
   1ba38:	cmp	r2, #0
   1ba3c:	movge	r2, #0
   1ba40:	strge	r0, [r1, #12]
   1ba44:	movge	r0, r2
   1ba48:	bxge	lr
   1ba4c:	and	r2, r0, #254	; 0xfe
   1ba50:	cmp	r2, #142	; 0x8e
   1ba54:	beq	1ba6c <myencoding_decode_euc_jp@@Base+0x120>
   1ba58:	mov	r2, #1
   1ba5c:	cmp	r0, #161	; 0xa1
   1ba60:	bcc	1ba74 <myencoding_decode_euc_jp@@Base+0x128>
   1ba64:	cmp	r0, #255	; 0xff
   1ba68:	beq	1ba74 <myencoding_decode_euc_jp@@Base+0x128>
   1ba6c:	str	r0, [r1]
   1ba70:	mov	r2, #2
   1ba74:	mov	r0, r2
   1ba78:	bx	lr
   1ba7c:	andeq	fp, r5, r4, lsl #14
   1ba80:	strdeq	r2, [r5], -r8

0001ba84 <myencoding_decode_iso_2022_jp@@Base>:
   1ba84:	ldr	r3, [r1, #4]
   1ba88:	mov	ip, #0
   1ba8c:	cmp	r3, #7
   1ba90:	bhi	1bcdc <myencoding_decode_iso_2022_jp@@Base+0x258>
   1ba94:	add	r2, pc, #4
   1ba98:	ldr	r3, [r2, r3, lsl #2]
   1ba9c:	add	pc, r2, r3
   1baa0:	andeq	r0, r0, r0, lsr #32
   1baa4:	andeq	r0, r0, r4, asr r0
   1baa8:	andeq	r0, r0, ip, lsr r2
   1baac:	strheq	r0, [r0], -r8
   1bab0:	strdeq	r0, [r0], -r4
   1bab4:	andeq	r0, r0, r0, lsl r1
   1bab8:	andeq	r0, r0, ip, lsr #2
   1babc:	andeq	r0, r0, r0, asr #2
   1bac0:	cmp	r0, #27
   1bac4:	beq	1bb9c <myencoding_decode_iso_2022_jp@@Base+0x118>
   1bac8:	sxtb	r2, r0
   1bacc:	cmp	r2, #0
   1bad0:	blt	1bb44 <myencoding_decode_iso_2022_jp@@Base+0xc0>
   1bad4:	cmp	r0, #27
   1bad8:	bhi	1bd14 <myencoding_decode_iso_2022_jp@@Base+0x290>
   1badc:	movw	r3, #49152	; 0xc000
   1bae0:	mov	r2, #1
   1bae4:	movt	r3, #2048	; 0x800
   1bae8:	tst	r3, r2, lsl r0
   1baec:	bne	1bb44 <myencoding_decode_iso_2022_jp@@Base+0xc0>
   1baf0:	b	1bd14 <myencoding_decode_iso_2022_jp@@Base+0x290>
   1baf4:	cmp	r0, #126	; 0x7e
   1baf8:	beq	1bd08 <myencoding_decode_iso_2022_jp@@Base+0x284>
   1bafc:	cmp	r0, #92	; 0x5c
   1bb00:	beq	1bd10 <myencoding_decode_iso_2022_jp@@Base+0x28c>
   1bb04:	cmp	r0, #27
   1bb08:	beq	1bb9c <myencoding_decode_iso_2022_jp@@Base+0x118>
   1bb0c:	sxtb	r2, r0
   1bb10:	cmp	r2, #0
   1bb14:	blt	1bb44 <myencoding_decode_iso_2022_jp@@Base+0xc0>
   1bb18:	cmp	r0, #27
   1bb1c:	bhi	1bb34 <myencoding_decode_iso_2022_jp@@Base+0xb0>
   1bb20:	movw	r3, #49152	; 0xc000
   1bb24:	mov	r2, #1
   1bb28:	movt	r3, #2048	; 0x800
   1bb2c:	tst	r3, r2, lsl r0
   1bb30:	bne	1bb44 <myencoding_decode_iso_2022_jp@@Base+0xc0>
   1bb34:	cmp	r0, #92	; 0x5c
   1bb38:	beq	1bb44 <myencoding_decode_iso_2022_jp@@Base+0xc0>
   1bb3c:	cmp	r0, #126	; 0x7e
   1bb40:	bne	1bd14 <myencoding_decode_iso_2022_jp@@Base+0x290>
   1bb44:	mov	r0, #0
   1bb48:	str	r0, [r1, #20]
   1bb4c:	mov	ip, #1
   1bb50:	mov	r0, ip
   1bb54:	bx	lr
   1bb58:	cmp	r0, #27
   1bb5c:	beq	1bb9c <myencoding_decode_iso_2022_jp@@Base+0x118>
   1bb60:	mov	r2, #0
   1bb64:	mov	ip, #1
   1bb68:	str	r2, [r1, #20]
   1bb6c:	sub	r2, r0, #33	; 0x21
   1bb70:	uxtb	r2, r2
   1bb74:	cmp	r2, #62	; 0x3e
   1bb78:	bhi	1bcdc <myencoding_decode_iso_2022_jp@@Base+0x258>
   1bb7c:	movw	r2, #65344	; 0xff40
   1bb80:	mov	ip, #0
   1bb84:	add	r0, r0, r2
   1bb88:	str	r0, [r1, #12]
   1bb8c:	mov	r0, ip
   1bb90:	bx	lr
   1bb94:	cmp	r0, #27
   1bb98:	bne	1bc54 <myencoding_decode_iso_2022_jp@@Base+0x1d0>
   1bb9c:	mov	r0, #6
   1bba0:	str	r0, [r1, #4]
   1bba4:	mov	ip, #2
   1bba8:	mov	r0, ip
   1bbac:	bx	lr
   1bbb0:	cmp	r0, #27
   1bbb4:	bne	1bc88 <myencoding_decode_iso_2022_jp@@Base+0x204>
   1bbb8:	mov	r0, #6
   1bbbc:	mov	ip, #3
   1bbc0:	str	r0, [r1, #4]
   1bbc4:	mov	r0, ip
   1bbc8:	bx	lr
   1bbcc:	cmp	r0, #40	; 0x28
   1bbd0:	cmpne	r0, #36	; 0x24
   1bbd4:	bne	1bcec <myencoding_decode_iso_2022_jp@@Base+0x268>
   1bbd8:	mov	r2, #7
   1bbdc:	b	1bc74 <myencoding_decode_iso_2022_jp@@Base+0x1f0>
   1bbe0:	mov	r3, #0
   1bbe4:	cmp	r0, #66	; 0x42
   1bbe8:	str	r3, [r1, #4]
   1bbec:	ldr	r2, [r1]
   1bbf0:	str	r3, [r1]
   1bbf4:	cmpeq	r2, #40	; 0x28
   1bbf8:	beq	1bce4 <myencoding_decode_iso_2022_jp@@Base+0x260>
   1bbfc:	cmp	r0, #74	; 0x4a
   1bc00:	moveq	r3, #1
   1bc04:	cmpeq	r2, #40	; 0x28
   1bc08:	beq	1bc34 <myencoding_decode_iso_2022_jp@@Base+0x1b0>
   1bc0c:	cmp	r0, #73	; 0x49
   1bc10:	moveq	r3, #2
   1bc14:	cmpeq	r2, #40	; 0x28
   1bc18:	beq	1bc34 <myencoding_decode_iso_2022_jp@@Base+0x1b0>
   1bc1c:	cmp	r2, #36	; 0x24
   1bc20:	bne	1bcec <myencoding_decode_iso_2022_jp@@Base+0x268>
   1bc24:	orr	r0, r0, #2
   1bc28:	mov	r3, #4
   1bc2c:	cmp	r0, #66	; 0x42
   1bc30:	bne	1bcec <myencoding_decode_iso_2022_jp@@Base+0x268>
   1bc34:	str	r3, [r1, #4]
   1bc38:	str	r3, [r1, #8]
   1bc3c:	mov	ip, #1
   1bc40:	ldr	r0, [r1, #20]
   1bc44:	str	ip, [r1, #20]
   1bc48:	cmp	r0, #0
   1bc4c:	movweq	ip, #2
   1bc50:	b	1bcdc <myencoding_decode_iso_2022_jp@@Base+0x258>
   1bc54:	mov	r2, #0
   1bc58:	mov	ip, #1
   1bc5c:	str	r2, [r1, #20]
   1bc60:	sub	r2, r0, #33	; 0x21
   1bc64:	uxtb	r2, r2
   1bc68:	cmp	r2, #93	; 0x5d
   1bc6c:	bhi	1bcdc <myencoding_decode_iso_2022_jp@@Base+0x258>
   1bc70:	mov	r2, #5
   1bc74:	str	r0, [r1]
   1bc78:	str	r2, [r1, #4]
   1bc7c:	mov	ip, #2
   1bc80:	mov	r0, ip
   1bc84:	bx	lr
   1bc88:	mov	r2, #4
   1bc8c:	mov	ip, #1
   1bc90:	str	r2, [r1, #4]
   1bc94:	sub	r2, r0, #33	; 0x21
   1bc98:	uxtb	r2, r2
   1bc9c:	cmp	r2, #93	; 0x5d
   1bca0:	bhi	1bcdc <myencoding_decode_iso_2022_jp@@Base+0x258>
   1bca4:	ldr	r2, [r1]
   1bca8:	mov	r3, #94	; 0x5e
   1bcac:	mla	r0, r2, r3, r0
   1bcb0:	ldr	r2, [pc, #112]	; 1bd28 <myencoding_decode_iso_2022_jp@@Base+0x2a4>
   1bcb4:	add	r2, pc, r2
   1bcb8:	add	r0, r2, r0, lsl #2
   1bcbc:	movw	r2, #52996	; 0xcf04
   1bcc0:	movt	r2, #65535	; 0xffff
   1bcc4:	ldr	r0, [r0, r2]
   1bcc8:	str	r0, [r1, #12]
   1bccc:	clz	r0, r0
   1bcd0:	lsr	ip, r0, #5
   1bcd4:	mov	r0, ip
   1bcd8:	bx	lr
   1bcdc:	mov	r0, ip
   1bce0:	bx	lr
   1bce4:	mov	r0, #0
   1bce8:	str	r0, [r1, #4]
   1bcec:	mov	r0, #0
   1bcf0:	str	r0, [r1, #20]
   1bcf4:	ldr	r0, [r1, #8]
   1bcf8:	str	r0, [r1, #4]
   1bcfc:	mov	ip, #1
   1bd00:	mov	r0, ip
   1bd04:	bx	lr
   1bd08:	movw	r0, #8254	; 0x203e
   1bd0c:	b	1bd14 <myencoding_decode_iso_2022_jp@@Base+0x290>
   1bd10:	mov	r0, #165	; 0xa5
   1bd14:	mov	ip, #0
   1bd18:	str	r0, [r1, #12]
   1bd1c:	mov	r0, ip
   1bd20:	str	ip, [r1, #20]
   1bd24:	bx	lr
   1bd28:	andeq	fp, r5, r8, asr r4

0001bd2c <myencoding_decode_shift_jis@@Base>:
   1bd2c:	ldr	r2, [r1]
   1bd30:	cmp	r2, #0
   1bd34:	beq	1bdc4 <myencoding_decode_shift_jis@@Base+0x98>
   1bd38:	sub	r3, r0, #64	; 0x40
   1bd3c:	mov	ip, #193	; 0xc1
   1bd40:	cmp	r2, #160	; 0xa0
   1bd44:	uxtb	r3, r3
   1bd48:	movwcc	ip, #129	; 0x81
   1bd4c:	cmp	r3, #63	; 0x3f
   1bd50:	bcc	1bd68 <myencoding_decode_shift_jis@@Base+0x3c>
   1bd54:	sxtb	r3, r0
   1bd58:	cmn	r3, #1
   1bd5c:	bgt	1be00 <myencoding_decode_shift_jis@@Base+0xd4>
   1bd60:	cmp	r0, #252	; 0xfc
   1bd64:	bhi	1be00 <myencoding_decode_shift_jis@@Base+0xd4>
   1bd68:	mvn	r3, #64	; 0x40
   1bd6c:	cmp	r0, #127	; 0x7f
   1bd70:	sub	r2, r2, ip
   1bd74:	mvncc	r3, #63	; 0x3f
   1bd78:	add	r0, r3, r0
   1bd7c:	mov	r3, #188	; 0xbc
   1bd80:	mla	r2, r2, r3, r0
   1bd84:	cmp	r2, #0
   1bd88:	beq	1be00 <myencoding_decode_shift_jis@@Base+0xd4>
   1bd8c:	ldr	r0, [pc, #172]	; 1be40 <myencoding_decode_shift_jis@@Base+0x114>
   1bd90:	movw	r3, #8836	; 0x2284
   1bd94:	sub	ip, r2, r3
   1bd98:	movw	r3, #1692	; 0x69c
   1bd9c:	cmp	ip, r3
   1bda0:	add	r0, pc, r0
   1bda4:	ldr	r0, [r0, r2, lsl #2]
   1bda8:	str	r0, [r1, #12]
   1bdac:	bhi	1be08 <myencoding_decode_shift_jis@@Base+0xdc>
   1bdb0:	cmp	r0, #0
   1bdb4:	bne	1be08 <myencoding_decode_shift_jis@@Base+0xdc>
   1bdb8:	movw	r0, #48508	; 0xbd7c
   1bdbc:	add	r0, r2, r0
   1bdc0:	b	1be04 <myencoding_decode_shift_jis@@Base+0xd8>
   1bdc4:	sxtb	r2, r0
   1bdc8:	cmn	r2, #1
   1bdcc:	bgt	1bdf0 <myencoding_decode_shift_jis@@Base+0xc4>
   1bdd0:	cmp	r0, #128	; 0x80
   1bdd4:	beq	1bdf0 <myencoding_decode_shift_jis@@Base+0xc4>
   1bdd8:	add	r2, r0, #95	; 0x5f
   1bddc:	uxtb	r2, r2
   1bde0:	cmp	r2, #62	; 0x3e
   1bde4:	bhi	1be18 <myencoding_decode_shift_jis@@Base+0xec>
   1bde8:	movw	r2, #65216	; 0xfec0
   1bdec:	add	r0, r0, r2
   1bdf0:	mov	r2, #0
   1bdf4:	str	r0, [r1, #12]
   1bdf8:	mov	r0, r2
   1bdfc:	bx	lr
   1be00:	mov	r0, #0
   1be04:	str	r0, [r1, #12]
   1be08:	clz	r0, r0
   1be0c:	lsr	r2, r0, #5
   1be10:	mov	r0, r2
   1be14:	bx	lr
   1be18:	cmp	r0, #160	; 0xa0
   1be1c:	addcs	r3, r0, #32
   1be20:	movcs	r2, #1
   1be24:	uxtbcs	r3, r3
   1be28:	cmpcs	r3, #28
   1be2c:	bhi	1be38 <myencoding_decode_shift_jis@@Base+0x10c>
   1be30:	mov	r2, #2
   1be34:	str	r0, [r1]
   1be38:	mov	r0, r2
   1be3c:	bx	lr
   1be40:	andeq	fp, r5, ip, ror #6

0001be44 <myencoding_decode_euc_kr@@Base>:
   1be44:	ldr	r2, [r1]
   1be48:	cmp	r2, #0
   1be4c:	beq	1be98 <myencoding_decode_euc_kr@@Base+0x54>
   1be50:	mov	r3, #0
   1be54:	cmp	r0, #65	; 0x41
   1be58:	str	r3, [r1]
   1be5c:	bcc	1be84 <myencoding_decode_euc_kr@@Base+0x40>
   1be60:	cmp	r0, #255	; 0xff
   1be64:	movne	r3, #190	; 0xbe
   1be68:	mlane	r0, r2, r3, r0
   1be6c:	movwne	r2, #24575	; 0x5fff
   1be70:	subsne	r0, r0, r2
   1be74:	ldrne	r2, [pc, #80]	; 1becc <myencoding_decode_euc_kr@@Base+0x88>
   1be78:	addne	r2, pc, r2
   1be7c:	ldrne	r0, [r2, r0, lsl #2]
   1be80:	strne	r0, [r1, #12]
   1be84:	ldr	r0, [r1, #12]
   1be88:	clz	r0, r0
   1be8c:	lsr	r2, r0, #5
   1be90:	mov	r0, r2
   1be94:	bx	lr
   1be98:	sxtb	r2, r0
   1be9c:	cmp	r2, #0
   1bea0:	movge	r2, #0
   1bea4:	strge	r0, [r1, #12]
   1bea8:	movge	r0, r2
   1beac:	bxge	lr
   1beb0:	cmp	r0, #128	; 0x80
   1beb4:	mov	r2, #1
   1beb8:	cmpne	r0, #255	; 0xff
   1bebc:	movne	r2, #2
   1bec0:	strne	r0, [r1]
   1bec4:	mov	r0, r2
   1bec8:	bx	lr
   1becc:	ldrdeq	r6, [r6], -r4

0001bed0 <myencoding_decode_shared_utf_16@@Base>:
   1bed0:	push	{fp, lr}
   1bed4:	mov	fp, sp
   1bed8:	ldr	r3, [r1]
   1bedc:	cmp	r3, #0
   1bee0:	streq	r0, [r1]
   1bee4:	moveq	r0, #2
   1bee8:	popeq	{fp, pc}
   1beec:	ldr	r2, [r1, #20]
   1bef0:	mov	ip, #0
   1bef4:	str	ip, [r1]
   1bef8:	cmp	r2, #0
   1befc:	addeq	lr, r3, r0, lsl #8
   1bf00:	orrne	lr, r0, r3, lsl #8
   1bf04:	ldr	r3, [r1, #4]
   1bf08:	cmp	r3, #0
   1bf0c:	beq	1bf3c <myencoding_decode_shared_utf_16@@Base+0x6c>
   1bf10:	mov	r0, lr
   1bf14:	str	ip, [r1, #4]
   1bf18:	bfc	r0, #0, #10
   1bf1c:	cmp	r0, #56320	; 0xdc00
   1bf20:	bne	1bf6c <myencoding_decode_shared_utf_16@@Base+0x9c>
   1bf24:	add	r0, lr, r3, lsl #10
   1bf28:	sub	r0, r0, #252928	; 0x3dc00
   1bf2c:	sub	r0, r0, #56360960	; 0x35c0000
   1bf30:	str	r0, [r1, #12]
   1bf34:	mov	r0, #0
   1bf38:	pop	{fp, pc}
   1bf3c:	mov	r2, lr
   1bf40:	bfc	r2, #0, #10
   1bf44:	cmp	r2, #56320	; 0xdc00
   1bf48:	moveq	r0, #1
   1bf4c:	popeq	{fp, pc}
   1bf50:	cmp	r2, #55296	; 0xd800
   1bf54:	moveq	r0, #2
   1bf58:	streq	lr, [r1, #4]
   1bf5c:	popeq	{fp, pc}
   1bf60:	mov	r0, #0
   1bf64:	str	lr, [r1, #12]
   1bf68:	pop	{fp, pc}
   1bf6c:	lsr	r3, lr, #8
   1bf70:	cmp	r2, #0
   1bf74:	beq	1bf90 <myencoding_decode_shared_utf_16@@Base+0xc0>
   1bf78:	uxtb	r0, lr
   1bf7c:	uxtb	r2, r3
   1bf80:	str	r2, [r1, #12]
   1bf84:	str	r0, [r1, #16]
   1bf88:	mov	r0, #5
   1bf8c:	pop	{fp, pc}
   1bf90:	uxtb	r0, r3
   1bf94:	uxtb	r2, lr
   1bf98:	str	r2, [r1, #12]
   1bf9c:	str	r0, [r1, #16]
   1bfa0:	mov	r0, #5
   1bfa4:	pop	{fp, pc}

0001bfa8 <myencoding_decode_utf_16be@@Base>:
   1bfa8:	ldr	r2, [r1, #20]
   1bfac:	cmp	r2, #0
   1bfb0:	moveq	r2, #1
   1bfb4:	streq	r2, [r1, #20]
   1bfb8:	push	{r4, sl, fp, lr}
   1bfbc:	add	fp, sp, #8
   1bfc0:	ldr	r3, [r1]
   1bfc4:	cmp	r3, #0
   1bfc8:	streq	r0, [r1]
   1bfcc:	moveq	r0, #2
   1bfd0:	popeq	{r4, sl, fp, pc}
   1bfd4:	mov	lr, #0
   1bfd8:	orr	ip, r0, r3, lsl #8
   1bfdc:	str	lr, [r1]
   1bfe0:	ldr	r4, [r1, #4]
   1bfe4:	cmp	r4, #0
   1bfe8:	beq	1c01c <myencoding_decode_utf_16be@@Base+0x74>
   1bfec:	movw	r2, #65532	; 0xfffc
   1bff0:	str	lr, [r1, #4]
   1bff4:	movt	r2, #255	; 0xff
   1bff8:	and	r2, r3, r2
   1bffc:	cmp	r2, #220	; 0xdc
   1c000:	bne	1c04c <myencoding_decode_utf_16be@@Base+0xa4>
   1c004:	add	r0, ip, r4, lsl #10
   1c008:	sub	r0, r0, #252928	; 0x3dc00
   1c00c:	sub	r0, r0, #56360960	; 0x35c0000
   1c010:	str	r0, [r1, #12]
   1c014:	mov	r0, #0
   1c018:	pop	{r4, sl, fp, pc}
   1c01c:	lsl	r0, r3, #8
   1c020:	bfc	r0, #0, #10
   1c024:	cmp	r0, #56320	; 0xdc00
   1c028:	moveq	r0, #1
   1c02c:	popeq	{r4, sl, fp, pc}
   1c030:	cmp	r0, #55296	; 0xd800
   1c034:	moveq	r0, #2
   1c038:	streq	ip, [r1, #4]
   1c03c:	popeq	{r4, sl, fp, pc}
   1c040:	mov	r0, #0
   1c044:	str	ip, [r1, #12]
   1c048:	pop	{r4, sl, fp, pc}
   1c04c:	uxtb	r2, r3
   1c050:	str	r2, [r1, #12]
   1c054:	str	r0, [r1, #16]
   1c058:	mov	r0, #5
   1c05c:	pop	{r4, sl, fp, pc}

0001c060 <myencoding_decode_utf_16le@@Base>:
   1c060:	ldr	r2, [r1, #20]
   1c064:	cmp	r2, #0
   1c068:	movne	r2, #0
   1c06c:	strne	r2, [r1, #20]
   1c070:	ldr	r2, [r1]
   1c074:	cmp	r2, #0
   1c078:	streq	r0, [r1]
   1c07c:	moveq	r0, #2
   1c080:	bxeq	lr
   1c084:	mov	r3, #0
   1c088:	add	r0, r2, r0, lsl #8
   1c08c:	str	r3, [r1]
   1c090:	ldr	r2, [r1, #4]
   1c094:	cmp	r2, #0
   1c098:	beq	1c0c8 <myencoding_decode_utf_16le@@Base+0x68>
   1c09c:	str	r3, [r1, #4]
   1c0a0:	mov	r3, r0
   1c0a4:	bfc	r3, #0, #10
   1c0a8:	cmp	r3, #56320	; 0xdc00
   1c0ac:	bne	1c0f8 <myencoding_decode_utf_16le@@Base+0x98>
   1c0b0:	add	r0, r0, r2, lsl #10
   1c0b4:	sub	r0, r0, #252928	; 0x3dc00
   1c0b8:	sub	r0, r0, #56360960	; 0x35c0000
   1c0bc:	str	r0, [r1, #12]
   1c0c0:	mov	r0, #0
   1c0c4:	bx	lr
   1c0c8:	mov	r2, r0
   1c0cc:	bfc	r2, #0, #10
   1c0d0:	cmp	r2, #56320	; 0xdc00
   1c0d4:	moveq	r0, #1
   1c0d8:	bxeq	lr
   1c0dc:	cmp	r2, #55296	; 0xd800
   1c0e0:	streq	r0, [r1, #4]
   1c0e4:	moveq	r0, #2
   1c0e8:	bxeq	lr
   1c0ec:	str	r0, [r1, #12]
   1c0f0:	mov	r0, #0
   1c0f4:	bx	lr
   1c0f8:	ubfx	r2, r0, #8, #8
   1c0fc:	uxtb	r0, r0
   1c100:	str	r0, [r1, #12]
   1c104:	mov	r0, #5
   1c108:	str	r2, [r1, #16]
   1c10c:	bx	lr

0001c110 <myencoding_decode_x_user_defined@@Base>:
   1c110:	sxtb	r2, r0
   1c114:	cmn	r2, #1
   1c118:	orrle	r0, r0, #63232	; 0xf700
   1c11c:	str	r0, [r1, #12]
   1c120:	mov	r0, #0
   1c124:	bx	lr

0001c128 <myencoding_result_clean@@Base>:
   1c128:	mov	r1, #0
   1c12c:	vmov.i32	q8, #0	; 0x00000000
   1c130:	mov	r2, #20
   1c134:	str	r1, [r0, #16]
   1c138:	vst1.32	{d16-d17}, [r0], r2
   1c13c:	str	r1, [r0]
   1c140:	bx	lr

0001c144 <myencoding_codepoint_ascii_length@@Base>:
   1c144:	mov	r1, #1
   1c148:	cmp	r0, #128	; 0x80
   1c14c:	bcc	1c164 <myencoding_codepoint_ascii_length@@Base+0x20>
   1c150:	mov	r1, #2
   1c154:	cmp	r0, #2048	; 0x800
   1c158:	movcs	r1, #3
   1c15c:	cmpcs	r0, #65536	; 0x10000
   1c160:	bcs	1c16c <myencoding_codepoint_ascii_length@@Base+0x28>
   1c164:	mov	r0, r1
   1c168:	bx	lr
   1c16c:	mov	r1, #4
   1c170:	cmp	r0, #2097152	; 0x200000
   1c174:	movcs	r1, #5
   1c178:	cmpcs	r0, #67108864	; 0x4000000
   1c17c:	bcc	1c164 <myencoding_codepoint_ascii_length@@Base+0x20>
   1c180:	mov	r1, #0
   1c184:	cmn	r0, #1
   1c188:	movwgt	r1, #6
   1c18c:	mov	r0, r1
   1c190:	bx	lr

0001c194 <myencoding_ascii_utf_8_length@@Base>:
   1c194:	sxtb	r2, r0
   1c198:	mov	r1, #1
   1c19c:	cmn	r2, #1
   1c1a0:	bgt	1c1f0 <myencoding_ascii_utf_8_length@@Base+0x5c>
   1c1a4:	and	r2, r0, #224	; 0xe0
   1c1a8:	mov	r1, #2
   1c1ac:	cmp	r2, #192	; 0xc0
   1c1b0:	beq	1c1f0 <myencoding_ascii_utf_8_length@@Base+0x5c>
   1c1b4:	and	r2, r0, #240	; 0xf0
   1c1b8:	mov	r1, #3
   1c1bc:	cmp	r2, #224	; 0xe0
   1c1c0:	beq	1c1f0 <myencoding_ascii_utf_8_length@@Base+0x5c>
   1c1c4:	and	r2, r0, #248	; 0xf8
   1c1c8:	mov	r1, #4
   1c1cc:	cmp	r2, #240	; 0xf0
   1c1d0:	beq	1c1f0 <myencoding_ascii_utf_8_length@@Base+0x5c>
   1c1d4:	and	r2, r0, #252	; 0xfc
   1c1d8:	mov	r1, #5
   1c1dc:	cmp	r2, #248	; 0xf8
   1c1e0:	beq	1c1f0 <myencoding_ascii_utf_8_length@@Base+0x5c>
   1c1e4:	mov	r1, #0
   1c1e8:	cmp	r0, #252	; 0xfc
   1c1ec:	movweq	r1, #6
   1c1f0:	mov	r0, r1
   1c1f4:	bx	lr

0001c1f8 <myencoding_codepoint_to_ascii_utf_8@@Base>:
   1c1f8:	cmp	r0, #127	; 0x7f
   1c1fc:	movls	r2, #1
   1c200:	strbls	r0, [r1]
   1c204:	movls	r0, r2
   1c208:	bxls	lr
   1c20c:	mov	r2, #0
   1c210:	cmp	r2, r0, lsr #11
   1c214:	bne	1c23c <myencoding_codepoint_to_ascii_utf_8@@Base+0x44>
   1c218:	mov	r2, #2
   1c21c:	mov	r3, r0
   1c220:	bfi	r3, r2, #6, #26
   1c224:	strb	r3, [r1, #1]
   1c228:	mov	r3, #192	; 0xc0
   1c22c:	orr	r0, r3, r0, lsr #6
   1c230:	strb	r0, [r1]
   1c234:	mov	r0, r2
   1c238:	bx	lr
   1c23c:	cmp	r2, r0, lsr #16
   1c240:	bne	1c274 <myencoding_codepoint_to_ascii_utf_8@@Base+0x7c>
   1c244:	mov	r2, #224	; 0xe0
   1c248:	lsr	r3, r0, #6
   1c24c:	orr	r2, r2, r0, lsr #12
   1c250:	strb	r2, [r1]
   1c254:	mov	r2, #2
   1c258:	bfi	r0, r2, #6, #26
   1c25c:	bfi	r3, r2, #6, #26
   1c260:	mov	r2, #3
   1c264:	strb	r0, [r1, #2]
   1c268:	mov	r0, r2
   1c26c:	strb	r3, [r1, #1]
   1c270:	bx	lr
   1c274:	mov	r2, #0
   1c278:	cmp	r2, r0, lsr #21
   1c27c:	bne	1c2b8 <myencoding_codepoint_to_ascii_utf_8@@Base+0xc0>
   1c280:	mov	r2, #240	; 0xf0
   1c284:	mov	r3, r0
   1c288:	orr	r2, r2, r0, lsr #18
   1c28c:	strb	r2, [r1]
   1c290:	mov	r2, #2
   1c294:	bfi	r3, r2, #6, #26
   1c298:	strb	r3, [r1, #3]
   1c29c:	lsr	r3, r0, #12
   1c2a0:	lsr	r0, r0, #6
   1c2a4:	bfi	r3, r2, #6, #26
   1c2a8:	bfi	r0, r2, #6, #26
   1c2ac:	mov	r2, #4
   1c2b0:	strb	r3, [r1, #1]
   1c2b4:	strb	r0, [r1, #2]
   1c2b8:	mov	r0, r2
   1c2bc:	bx	lr

0001c2c0 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base>:
   1c2c0:	cmp	r0, #127	; 0x7f
   1c2c4:	bhi	1c2e4 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x24>
   1c2c8:	ldr	r2, [pc, #200]	; 1c398 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xd8>
   1c2cc:	add	r2, pc, r2
   1c2d0:	ldrb	r0, [r2, r0]
   1c2d4:	mov	r2, #1
   1c2d8:	strb	r0, [r1]
   1c2dc:	mov	r0, r2
   1c2e0:	bx	lr
   1c2e4:	mov	r2, #0
   1c2e8:	cmp	r2, r0, lsr #11
   1c2ec:	bne	1c314 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x54>
   1c2f0:	mov	r2, #2
   1c2f4:	mov	r3, r0
   1c2f8:	bfi	r3, r2, #6, #26
   1c2fc:	strb	r3, [r1, #1]
   1c300:	mov	r3, #192	; 0xc0
   1c304:	orr	r0, r3, r0, lsr #6
   1c308:	strb	r0, [r1]
   1c30c:	mov	r0, r2
   1c310:	bx	lr
   1c314:	cmp	r2, r0, lsr #16
   1c318:	bne	1c34c <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x8c>
   1c31c:	mov	r2, #224	; 0xe0
   1c320:	lsr	r3, r0, #6
   1c324:	orr	r2, r2, r0, lsr #12
   1c328:	strb	r2, [r1]
   1c32c:	mov	r2, #2
   1c330:	bfi	r0, r2, #6, #26
   1c334:	bfi	r3, r2, #6, #26
   1c338:	mov	r2, #3
   1c33c:	strb	r0, [r1, #2]
   1c340:	mov	r0, r2
   1c344:	strb	r3, [r1, #1]
   1c348:	bx	lr
   1c34c:	mov	r2, #0
   1c350:	cmp	r2, r0, lsr #21
   1c354:	bne	1c390 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xd0>
   1c358:	mov	r2, #240	; 0xf0
   1c35c:	mov	r3, r0
   1c360:	orr	r2, r2, r0, lsr #18
   1c364:	strb	r2, [r1]
   1c368:	mov	r2, #2
   1c36c:	bfi	r3, r2, #6, #26
   1c370:	strb	r3, [r1, #3]
   1c374:	lsr	r3, r0, #12
   1c378:	lsr	r0, r0, #6
   1c37c:	bfi	r3, r2, #6, #26
   1c380:	bfi	r0, r2, #6, #26
   1c384:	mov	r2, #4
   1c388:	strb	r3, [r1, #1]
   1c38c:	strb	r0, [r1, #2]
   1c390:	mov	r0, r2
   1c394:	bx	lr
   1c398:	andeq	r2, r5, r0, lsr r1

0001c39c <myencoding_ascii_utf_8_to_codepoint@@Base>:
   1c39c:	ldrsb	r2, [r0]
   1c3a0:	uxtb	r3, r2
   1c3a4:	cmn	r2, #1
   1c3a8:	ble	1c3b4 <myencoding_ascii_utf_8_to_codepoint@@Base+0x18>
   1c3ac:	mov	r2, #1
   1c3b0:	b	1c454 <myencoding_ascii_utf_8_to_codepoint@@Base+0xb8>
   1c3b4:	and	r2, r3, #224	; 0xe0
   1c3b8:	cmp	r2, #192	; 0xc0
   1c3bc:	bne	1c3d4 <myencoding_ascii_utf_8_to_codepoint@@Base+0x38>
   1c3c0:	mov	r2, #4032	; 0xfc0
   1c3c4:	mov	ip, #1
   1c3c8:	and	r3, r2, r3, lsl #6
   1c3cc:	mov	r2, #2
   1c3d0:	b	1c444 <myencoding_ascii_utf_8_to_codepoint@@Base+0xa8>
   1c3d4:	and	r2, r3, #240	; 0xf0
   1c3d8:	cmp	r2, #224	; 0xe0
   1c3dc:	bne	1c404 <myencoding_ascii_utf_8_to_codepoint@@Base+0x68>
   1c3e0:	mov	r2, #126976	; 0x1f000
   1c3e4:	mov	ip, #2
   1c3e8:	and	r2, r2, r3, lsl #12
   1c3ec:	str	r2, [r1]
   1c3f0:	ldrb	r3, [r0, #1]
   1c3f4:	and	r3, r3, #127	; 0x7f
   1c3f8:	orr	r3, r2, r3, lsl #6
   1c3fc:	mov	r2, #3
   1c400:	b	1c444 <myencoding_ascii_utf_8_to_codepoint@@Base+0xa8>
   1c404:	and	ip, r3, #248	; 0xf8
   1c408:	mov	r2, #0
   1c40c:	cmp	ip, #240	; 0xf0
   1c410:	bne	1c458 <myencoding_ascii_utf_8_to_codepoint@@Base+0xbc>
   1c414:	mov	r2, #3932160	; 0x3c0000
   1c418:	mov	ip, #3
   1c41c:	and	r2, r2, r3, lsl #18
   1c420:	str	r2, [r1]
   1c424:	ldrb	r3, [r0, #1]
   1c428:	and	r3, r3, #127	; 0x7f
   1c42c:	orr	r2, r2, r3, lsl #12
   1c430:	str	r2, [r1]
   1c434:	ldrb	r3, [r0, #2]
   1c438:	and	r3, r3, #127	; 0x7f
   1c43c:	orr	r3, r2, r3, lsl #6
   1c440:	mov	r2, #4
   1c444:	str	r3, [r1]
   1c448:	ldrb	r0, [r0, ip]
   1c44c:	and	r0, r0, #127	; 0x7f
   1c450:	orr	r3, r3, r0
   1c454:	str	r3, [r1]
   1c458:	mov	r0, r2
   1c45c:	bx	lr

0001c460 <myencoding_codepoint_to_ascii_utf_16@@Base>:
   1c460:	cmp	r0, #65536	; 0x10000
   1c464:	bcc	1c4a0 <myencoding_codepoint_to_ascii_utf_16@@Base+0x40>
   1c468:	sub	r0, r0, #65536	; 0x10000
   1c46c:	mov	r2, #216	; 0xd8
   1c470:	mov	r3, #55	; 0x37
   1c474:	orr	r2, r2, r0, lsr #18
   1c478:	strb	r0, [r1, #3]
   1c47c:	strb	r2, [r1]
   1c480:	lsr	r2, r0, #8
   1c484:	lsr	r0, r0, #10
   1c488:	bfi	r2, r3, #2, #30
   1c48c:	strb	r2, [r1, #2]
   1c490:	mov	r2, #4
   1c494:	strb	r0, [r1, #1]
   1c498:	mov	r0, r2
   1c49c:	bx	lr
   1c4a0:	lsr	r2, r0, #8
   1c4a4:	strb	r2, [r1]
   1c4a8:	mov	r2, #2
   1c4ac:	strb	r0, [r1, #1]
   1c4b0:	mov	r0, r2
   1c4b4:	bx	lr

0001c4b8 <myencoding_convert_to_ascii_utf_8@@Base>:
   1c4b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c4bc:	add	fp, sp, #28
   1c4c0:	sub	sp, sp, #36	; 0x24
   1c4c4:	mov	r6, r0
   1c4c8:	ldr	r0, [r0]
   1c4cc:	mov	r8, r3
   1c4d0:	mov	sl, r2
   1c4d4:	mov	r9, r1
   1c4d8:	cmp	r0, #0
   1c4dc:	bne	1c4fc <myencoding_convert_to_ascii_utf_8@@Base+0x44>
   1c4e0:	add	r0, sl, #1
   1c4e4:	mov	r7, #0
   1c4e8:	stmib	r6, {r0, r7}
   1c4ec:	bl	119ac <mycore_malloc@plt>
   1c4f0:	cmp	r0, #0
   1c4f4:	str	r0, [r6]
   1c4f8:	beq	1c684 <myencoding_convert_to_ascii_utf_8@@Base+0x1cc>
   1c4fc:	vmov.i32	q8, #0	; 0x00000000
   1c500:	mov	r0, #20
   1c504:	add	r1, sp, #8
   1c508:	mov	r7, #0
   1c50c:	cmp	sl, #0
   1c510:	vst1.64	{d16-d17}, [r1], r0
   1c514:	str	r7, [sp, #24]
   1c518:	str	r7, [r1]
   1c51c:	beq	1c684 <myencoding_convert_to_ascii_utf_8@@Base+0x1cc>
   1c520:	ldr	r0, [pc, #376]	; 1c6a0 <myencoding_convert_to_ascii_utf_8@@Base+0x1e8>
   1c524:	mov	r5, #0
   1c528:	mov	r7, #0
   1c52c:	add	r0, pc, r0
   1c530:	ldr	r4, [r0, r8, lsl #2]
   1c534:	lsr	r0, sl, #1
   1c538:	add	r8, sp, #8
   1c53c:	str	r0, [sp, #4]
   1c540:	ldrb	r0, [r9, r7]
   1c544:	mov	r1, r8
   1c548:	blx	r4
   1c54c:	cmp	r0, #0
   1c550:	beq	1c564 <myencoding_convert_to_ascii_utf_8@@Base+0xac>
   1c554:	add	r7, r7, #1
   1c558:	cmp	r7, sl
   1c55c:	bcc	1c540 <myencoding_convert_to_ascii_utf_8@@Base+0x88>
   1c560:	b	1c684 <myencoding_convert_to_ascii_utf_8@@Base+0x1cc>
   1c564:	ldr	r1, [r6, #8]
   1c568:	ldr	r2, [r6, #4]
   1c56c:	add	r0, r1, #6
   1c570:	cmp	r0, r2
   1c574:	bcs	1c598 <myencoding_convert_to_ascii_utf_8@@Base+0xe0>
   1c578:	ldr	r0, [r6]
   1c57c:	add	r0, r0, r1
   1c580:	ldr	r1, [sp, #20]
   1c584:	cmp	r1, #127	; 0x7f
   1c588:	bhi	1c5d0 <myencoding_convert_to_ascii_utf_8@@Base+0x118>
   1c58c:	strb	r1, [r0]
   1c590:	mov	r2, #1
   1c594:	b	1c66c <myencoding_convert_to_ascii_utf_8@@Base+0x1b4>
   1c598:	ldr	r1, [sp, #4]
   1c59c:	add	r5, r0, r1
   1c5a0:	ldr	r0, [r6]
   1c5a4:	mov	r1, r5
   1c5a8:	bl	10da0 <mycore_realloc@plt>
   1c5ac:	cmp	r0, #0
   1c5b0:	beq	1c690 <myencoding_convert_to_ascii_utf_8@@Base+0x1d8>
   1c5b4:	stm	r6, {r0, r5}
   1c5b8:	mov	r5, #0
   1c5bc:	ldr	r1, [r6, #8]
   1c5c0:	add	r0, r0, r1
   1c5c4:	ldr	r1, [sp, #20]
   1c5c8:	cmp	r1, #127	; 0x7f
   1c5cc:	bls	1c58c <myencoding_convert_to_ascii_utf_8@@Base+0xd4>
   1c5d0:	cmp	r5, r1, lsr #11
   1c5d4:	bne	1c5f4 <myencoding_convert_to_ascii_utf_8@@Base+0x13c>
   1c5d8:	mov	r3, #192	; 0xc0
   1c5dc:	mov	r2, #2
   1c5e0:	orr	r3, r3, r1, lsr #6
   1c5e4:	bfi	r1, r2, #6, #26
   1c5e8:	strb	r1, [r0, #1]
   1c5ec:	strb	r3, [r0]
   1c5f0:	b	1c66c <myencoding_convert_to_ascii_utf_8@@Base+0x1b4>
   1c5f4:	cmp	r5, r1, lsr #16
   1c5f8:	bne	1c628 <myencoding_convert_to_ascii_utf_8@@Base+0x170>
   1c5fc:	mov	r2, #224	; 0xe0
   1c600:	mov	r3, #2
   1c604:	orr	r2, r2, r1, lsr #12
   1c608:	strb	r2, [r0]
   1c60c:	lsr	r2, r1, #6
   1c610:	bfi	r1, r3, #6, #26
   1c614:	bfi	r2, r3, #6, #26
   1c618:	strb	r1, [r0, #2]
   1c61c:	strb	r2, [r0, #1]
   1c620:	mov	r2, #3
   1c624:	b	1c66c <myencoding_convert_to_ascii_utf_8@@Base+0x1b4>
   1c628:	mov	r2, #0
   1c62c:	cmp	r2, r1, lsr #21
   1c630:	bne	1c66c <myencoding_convert_to_ascii_utf_8@@Base+0x1b4>
   1c634:	mov	r2, #240	; 0xf0
   1c638:	mov	r3, #2
   1c63c:	orr	r2, r2, r1, lsr #18
   1c640:	strb	r2, [r0]
   1c644:	mov	r2, r1
   1c648:	bfi	r2, r3, #6, #26
   1c64c:	strb	r2, [r0, #3]
   1c650:	lsr	r2, r1, #12
   1c654:	lsr	r1, r1, #6
   1c658:	bfi	r2, r3, #6, #26
   1c65c:	bfi	r1, r3, #6, #26
   1c660:	strb	r2, [r0, #1]
   1c664:	mov	r2, #4
   1c668:	strb	r1, [r0, #2]
   1c66c:	ldr	r0, [r6, #8]
   1c670:	add	r0, r0, r2
   1c674:	str	r0, [r6, #8]
   1c678:	add	r7, r7, #1
   1c67c:	cmp	r7, sl
   1c680:	bcc	1c540 <myencoding_convert_to_ascii_utf_8@@Base+0x88>
   1c684:	mov	r0, r7
   1c688:	sub	sp, fp, #28
   1c68c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c690:	mov	r7, #0
   1c694:	mov	r0, r7
   1c698:	sub	sp, fp, #28
   1c69c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c6a0:	andeq	sl, pc, r0, lsl lr	; <UNPREDICTABLE>

0001c6a4 <myencoding_string_append@@Base>:
   1c6a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c6a8:	add	fp, sp, #24
   1c6ac:	sub	sp, sp, #32
   1c6b0:	add	r8, sp, #8
   1c6b4:	mov	r7, r0
   1c6b8:	mov	r4, r3
   1c6bc:	mov	r5, r2
   1c6c0:	mov	r6, r1
   1c6c4:	mov	r0, r8
   1c6c8:	bl	11208 <myencoding_result_clean@plt>
   1c6cc:	mov	r0, r7
   1c6d0:	mov	r1, r8
   1c6d4:	mov	r2, r6
   1c6d8:	mov	r3, r5
   1c6dc:	str	r4, [sp]
   1c6e0:	bl	10ddc <myencoding_string_append_chunk@plt>
   1c6e4:	sub	sp, fp, #24
   1c6e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001c6ec <myencoding_string_append_chunk@@Base>:
   1c6ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c6f0:	add	fp, sp, #24
   1c6f4:	mov	r4, r0
   1c6f8:	ldr	r0, [fp, #8]
   1c6fc:	mov	r5, r3
   1c700:	mov	r6, r2
   1c704:	mov	r7, r1
   1c708:	bl	1167c <myencoding_get_function_by_id@plt>
   1c70c:	cmp	r5, #0
   1c710:	beq	1c784 <myencoding_string_append_chunk@@Base+0x98>
   1c714:	mov	r8, r0
   1c718:	ldrb	r0, [r6]
   1c71c:	mov	r1, r7
   1c720:	blx	r8
   1c724:	cmp	r0, #0
   1c728:	beq	1c73c <myencoding_string_append_chunk@@Base+0x50>
   1c72c:	subs	r5, r5, #1
   1c730:	add	r6, r6, #1
   1c734:	bne	1c718 <myencoding_string_append_chunk@@Base+0x2c>
   1c738:	b	1c784 <myencoding_string_append_chunk@@Base+0x98>
   1c73c:	ldr	r0, [r4, #8]
   1c740:	ldr	r2, [r4, #4]
   1c744:	add	r1, r0, #5
   1c748:	cmp	r1, r2
   1c74c:	bcc	1c75c <myencoding_string_append_chunk@@Base+0x70>
   1c750:	mov	r0, r4
   1c754:	bl	11778 <mycore_string_realloc@plt>
   1c758:	ldr	r0, [r4, #8]
   1c75c:	ldr	r1, [r4]
   1c760:	add	r1, r1, r0
   1c764:	ldr	r0, [r7, #12]
   1c768:	bl	11b20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1c76c:	ldr	r1, [r4, #8]
   1c770:	add	r0, r1, r0
   1c774:	str	r0, [r4, #8]
   1c778:	subs	r5, r5, #1
   1c77c:	add	r6, r6, #1
   1c780:	bne	1c718 <myencoding_string_append_chunk@@Base+0x2c>
   1c784:	ldr	r1, [r4, #4]
   1c788:	ldr	r0, [r4, #8]
   1c78c:	cmp	r0, r1
   1c790:	bcc	1c7a4 <myencoding_string_append_chunk@@Base+0xb8>
   1c794:	add	r1, r0, #1
   1c798:	mov	r0, r4
   1c79c:	bl	11778 <mycore_string_realloc@plt>
   1c7a0:	ldr	r0, [r4, #8]
   1c7a4:	ldr	r1, [r4]
   1c7a8:	mov	r2, #0
   1c7ac:	strb	r2, [r1, r0]
   1c7b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001c7b4 <myencoding_string_append_one@@Base>:
   1c7b4:	push	{r4, r5, r6, sl, fp, lr}
   1c7b8:	add	fp, sp, #16
   1c7bc:	mov	r4, r0
   1c7c0:	mov	r0, r3
   1c7c4:	mov	r6, r2
   1c7c8:	mov	r5, r1
   1c7cc:	bl	1167c <myencoding_get_function_by_id@plt>
   1c7d0:	mov	r2, r0
   1c7d4:	mov	r0, r6
   1c7d8:	mov	r1, r5
   1c7dc:	blx	r2
   1c7e0:	cmp	r0, #0
   1c7e4:	popne	{r4, r5, r6, sl, fp, pc}
   1c7e8:	ldr	r0, [r4, #8]
   1c7ec:	ldr	r2, [r4, #4]
   1c7f0:	add	r1, r0, #5
   1c7f4:	cmp	r1, r2
   1c7f8:	bcc	1c808 <myencoding_string_append_one@@Base+0x54>
   1c7fc:	mov	r0, r4
   1c800:	bl	11778 <mycore_string_realloc@plt>
   1c804:	ldr	r0, [r4, #8]
   1c808:	ldr	r1, [r4]
   1c80c:	add	r1, r1, r0
   1c810:	ldr	r0, [r5, #12]
   1c814:	bl	11b20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1c818:	ldr	r2, [r4, #8]
   1c81c:	ldr	r1, [r4]
   1c820:	add	r0, r2, r0
   1c824:	mov	r2, #0
   1c828:	str	r0, [r4, #8]
   1c82c:	strb	r2, [r1, r0]
   1c830:	pop	{r4, r5, r6, sl, fp, pc}

0001c834 <myencoding_string_append_lowercase_ascii@@Base>:
   1c834:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c838:	add	fp, sp, #24
   1c83c:	sub	sp, sp, #32
   1c840:	add	r8, sp, #8
   1c844:	mov	r7, r0
   1c848:	mov	r4, r3
   1c84c:	mov	r5, r2
   1c850:	mov	r6, r1
   1c854:	mov	r0, r8
   1c858:	bl	11208 <myencoding_result_clean@plt>
   1c85c:	mov	r0, r7
   1c860:	mov	r1, r8
   1c864:	mov	r2, r6
   1c868:	mov	r3, r5
   1c86c:	str	r4, [sp]
   1c870:	bl	119a0 <myencoding_string_append_chunk_lowercase_ascii@plt>
   1c874:	sub	sp, fp, #24
   1c878:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001c87c <myencoding_string_append_chunk_lowercase_ascii@@Base>:
   1c87c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1c880:	add	fp, sp, #24
   1c884:	mov	r4, r0
   1c888:	ldr	r0, [fp, #8]
   1c88c:	mov	r5, r3
   1c890:	mov	r6, r2
   1c894:	mov	r7, r1
   1c898:	bl	1167c <myencoding_get_function_by_id@plt>
   1c89c:	cmp	r5, #0
   1c8a0:	beq	1c93c <myencoding_string_append_chunk_lowercase_ascii@@Base+0xc0>
   1c8a4:	ldr	r9, [pc, #192]	; 1c96c <myencoding_string_append_chunk_lowercase_ascii@@Base+0xf0>
   1c8a8:	mov	r8, r0
   1c8ac:	add	r9, pc, r9
   1c8b0:	ldrb	r0, [r6]
   1c8b4:	mov	r1, r7
   1c8b8:	blx	r8
   1c8bc:	cmp	r0, #0
   1c8c0:	beq	1c8d4 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x58>
   1c8c4:	subs	r5, r5, #1
   1c8c8:	add	r6, r6, #1
   1c8cc:	bne	1c8b0 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x34>
   1c8d0:	b	1c93c <myencoding_string_append_chunk_lowercase_ascii@@Base+0xc0>
   1c8d4:	ldr	r0, [r4, #8]
   1c8d8:	ldr	r1, [r4, #4]
   1c8dc:	add	r2, r0, #5
   1c8e0:	cmp	r2, r1
   1c8e4:	bcc	1c8f8 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x7c>
   1c8e8:	add	r1, r0, #6
   1c8ec:	mov	r0, r4
   1c8f0:	bl	11778 <mycore_string_realloc@plt>
   1c8f4:	ldr	r0, [r4, #8]
   1c8f8:	ldr	r1, [r4]
   1c8fc:	add	r1, r1, r0
   1c900:	ldr	r0, [r7, #12]
   1c904:	bl	11b20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1c908:	cmp	r0, #1
   1c90c:	bne	1c924 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xa8>
   1c910:	ldrb	r1, [r6]
   1c914:	ldr	r2, [r4]
   1c918:	ldr	r3, [r4, #8]
   1c91c:	ldrb	r1, [r9, r1]
   1c920:	strb	r1, [r2, r3]
   1c924:	ldr	r1, [r4, #8]
   1c928:	add	r0, r1, r0
   1c92c:	str	r0, [r4, #8]
   1c930:	subs	r5, r5, #1
   1c934:	add	r6, r6, #1
   1c938:	bne	1c8b0 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x34>
   1c93c:	ldr	r1, [r4, #4]
   1c940:	ldr	r0, [r4, #8]
   1c944:	cmp	r0, r1
   1c948:	bcc	1c95c <myencoding_string_append_chunk_lowercase_ascii@@Base+0xe0>
   1c94c:	add	r1, r0, #1
   1c950:	mov	r0, r4
   1c954:	bl	11778 <mycore_string_realloc@plt>
   1c958:	ldr	r0, [r4, #8]
   1c95c:	ldr	r1, [r4]
   1c960:	mov	r2, #0
   1c964:	strb	r2, [r1, r0]
   1c968:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1c96c:			; <UNDEFINED> instruction: 0x0007ceb0

0001c970 <myhtml_callback_before_token_done@@Base>:
   1c970:	ldr	r0, [r0, #220]	; 0xdc
   1c974:	bx	lr

0001c978 <myhtml_callback_after_token_done@@Base>:
   1c978:	ldr	r0, [r0, #224]	; 0xe0
   1c97c:	bx	lr

0001c980 <myhtml_callback_before_token_done_set@@Base>:
   1c980:	str	r2, [r0, #228]	; 0xe4
   1c984:	str	r1, [r0, #220]	; 0xdc
   1c988:	bx	lr

0001c98c <myhtml_callback_after_token_done_set@@Base>:
   1c98c:	str	r2, [r0, #232]	; 0xe8
   1c990:	str	r1, [r0, #224]	; 0xe0
   1c994:	bx	lr

0001c998 <myhtml_callback_tree_node_insert@@Base>:
   1c998:	ldr	r0, [r0, #236]	; 0xec
   1c99c:	bx	lr

0001c9a0 <myhtml_callback_tree_node_remove@@Base>:
   1c9a0:	ldr	r0, [r0, #240]	; 0xf0
   1c9a4:	bx	lr

0001c9a8 <myhtml_callback_tree_node_insert_set@@Base>:
   1c9a8:	str	r2, [r0, #244]	; 0xf4
   1c9ac:	str	r1, [r0, #236]	; 0xec
   1c9b0:	bx	lr

0001c9b4 <myhtml_callback_tree_node_remove_set@@Base>:
   1c9b4:	str	r2, [r0, #248]	; 0xf8
   1c9b8:	str	r1, [r0, #240]	; 0xf0
   1c9bc:	bx	lr

0001c9c0 <myhtml_charef_find@@Base>:
   1c9c0:	push	{r4, r5, r6, r7, fp, lr}
   1c9c4:	add	fp, sp, #16
   1c9c8:	ldrb	r4, [r0]
   1c9cc:	ldr	lr, [pc, #160]	; 1ca74 <myhtml_charef_find@@Base+0xb4>
   1c9d0:	mov	ip, r0
   1c9d4:	add	lr, pc, lr
   1c9d8:	add	r5, r4, r4, lsl #1
   1c9dc:	mov	r0, lr
   1c9e0:	ldrb	r6, [r0, r5, lsl #3]!
   1c9e4:	cmp	r6, #0
   1c9e8:	beq	1ca48 <myhtml_charef_find@@Base+0x88>
   1c9ec:	ldr	r5, [r1]
   1c9f0:	ldrb	r7, [ip, r5]
   1c9f4:	uxtb	r6, r6
   1c9f8:	cmp	r6, r7
   1c9fc:	bne	1ca28 <myhtml_charef_find@@Base+0x68>
   1ca00:	add	r5, r5, #1
   1ca04:	add	r4, r4, r4, lsl #1
   1ca08:	add	r6, lr, r4, lsl #3
   1ca0c:	cmp	r5, r2
   1ca10:	str	r5, [r1]
   1ca14:	bcs	1ca64 <myhtml_charef_find@@Base+0xa4>
   1ca18:	ldr	r4, [r6, #4]
   1ca1c:	cmp	r4, #0
   1ca20:	bne	1ca34 <myhtml_charef_find@@Base+0x74>
   1ca24:	b	1ca64 <myhtml_charef_find@@Base+0xa4>
   1ca28:	cmp	r7, r6
   1ca2c:	bls	1ca48 <myhtml_charef_find@@Base+0x88>
   1ca30:	add	r4, r4, #1
   1ca34:	add	r6, r4, r4, lsl #1
   1ca38:	mov	r0, lr
   1ca3c:	ldrb	r6, [r0, r6, lsl #3]!
   1ca40:	cmp	r6, #0
   1ca44:	bne	1c9f0 <myhtml_charef_find@@Base+0x30>
   1ca48:	cmp	r3, #0
   1ca4c:	popeq	{r4, r5, r6, r7, fp, pc}
   1ca50:	add	r1, r4, r4, lsl #1
   1ca54:	add	r1, lr, r1, lsl #3
   1ca58:	ldr	r1, [r1, #20]
   1ca5c:	str	r1, [r3]
   1ca60:	pop	{r4, r5, r6, r7, fp, pc}
   1ca64:	cmp	r3, #0
   1ca68:	beq	1ca60 <myhtml_charef_find@@Base+0xa0>
   1ca6c:	ldr	r1, [r6, #20]
   1ca70:	b	1ca5c <myhtml_charef_find@@Base+0x9c>
   1ca74:	andeq	ip, r7, r8, lsl #29

0001ca78 <myhtml_charef_get_first_position@@Base>:
   1ca78:	ldr	r1, [pc, #12]	; 1ca8c <myhtml_charef_get_first_position@@Base+0x14>
   1ca7c:	add	r0, r0, r0, lsl #1
   1ca80:	add	r1, pc, r1
   1ca84:	add	r0, r1, r0, lsl #3
   1ca88:	bx	lr
   1ca8c:	ldrdeq	ip, [r7], -ip	; <UNPREDICTABLE>

0001ca90 <myhtml_charef_find_by_pos@@Base>:
   1ca90:	push	{r4, r5, r6, r7, fp, lr}
   1ca94:	add	fp, sp, #16
   1ca98:	mov	ip, r0
   1ca9c:	ldr	r0, [r2]
   1caa0:	ldr	lr, [fp, #8]
   1caa4:	ldrb	r0, [r1, r0]
   1caa8:	cmp	r0, #38	; 0x26
   1caac:	bne	1cae4 <myhtml_charef_find_by_pos@@Base+0x54>
   1cab0:	mov	r0, #1
   1cab4:	str	r0, [lr, #12]
   1cab8:	ldr	r0, [lr]
   1cabc:	ldr	r1, [r0, #20]
   1cac0:	cmp	r1, #0
   1cac4:	popne	{r4, r5, r6, r7, fp, pc}
   1cac8:	ldr	r0, [lr, #4]
   1cacc:	cmp	r0, #0
   1cad0:	ldreq	r0, [pc, #308]	; 1cc0c <myhtml_charef_find_by_pos@@Base+0x17c>
   1cad4:	ldrne	r1, [lr, #8]
   1cad8:	addeq	r0, pc, r0
   1cadc:	strne	r1, [r2]
   1cae0:	pop	{r4, r5, r6, r7, fp, pc}
   1cae4:	mov	r0, #0
   1cae8:	add	r5, ip, ip, lsl #1
   1caec:	str	r0, [lr, #12]
   1caf0:	ldr	r4, [pc, #280]	; 1cc10 <myhtml_charef_find_by_pos@@Base+0x180>
   1caf4:	add	r4, pc, r4
   1caf8:	mov	r0, r4
   1cafc:	ldrb	r5, [r0, r5, lsl #3]!
   1cb00:	cmp	r5, #0
   1cb04:	bne	1cb20 <myhtml_charef_find_by_pos@@Base+0x90>
   1cb08:	b	1cba4 <myhtml_charef_find_by_pos@@Base+0x114>
   1cb0c:	add	r5, ip, ip, lsl #1
   1cb10:	mov	r0, r4
   1cb14:	ldrb	r5, [r0, r5, lsl #3]!
   1cb18:	cmp	r5, #0
   1cb1c:	beq	1cba4 <myhtml_charef_find_by_pos@@Base+0x114>
   1cb20:	ldr	r6, [r2]
   1cb24:	uxtb	r5, r5
   1cb28:	ldrb	r7, [r1, r6]
   1cb2c:	cmp	r5, r7
   1cb30:	bne	1cb94 <myhtml_charef_find_by_pos@@Base+0x104>
   1cb34:	cmp	r5, #59	; 0x3b
   1cb38:	beq	1cbc8 <myhtml_charef_find_by_pos@@Base+0x138>
   1cb3c:	add	r7, ip, ip, lsl #1
   1cb40:	add	r5, r6, #1
   1cb44:	add	r6, r4, r7, lsl #3
   1cb48:	str	r5, [r2]
   1cb4c:	ldr	ip, [r6, #4]
   1cb50:	cmp	ip, #0
   1cb54:	beq	1cbcc <myhtml_charef_find_by_pos@@Base+0x13c>
   1cb58:	cmp	r5, r3
   1cb5c:	bcs	1cbd8 <myhtml_charef_find_by_pos@@Base+0x148>
   1cb60:	ldrb	r7, [r1, r5]
   1cb64:	cmp	r7, #38	; 0x26
   1cb68:	beq	1cbf0 <myhtml_charef_find_by_pos@@Base+0x160>
   1cb6c:	ldr	r6, [r6, #20]
   1cb70:	cmp	r6, #0
   1cb74:	beq	1cb0c <myhtml_charef_find_by_pos@@Base+0x7c>
   1cb78:	stmib	lr, {r0, r5}
   1cb7c:	add	r5, ip, ip, lsl #1
   1cb80:	mov	r0, r4
   1cb84:	ldrb	r5, [r0, r5, lsl #3]!
   1cb88:	cmp	r5, #0
   1cb8c:	bne	1cb20 <myhtml_charef_find_by_pos@@Base+0x90>
   1cb90:	b	1cba4 <myhtml_charef_find_by_pos@@Base+0x114>
   1cb94:	cmp	r7, r5
   1cb98:	bls	1cba4 <myhtml_charef_find_by_pos@@Base+0x114>
   1cb9c:	add	ip, ip, #1
   1cba0:	b	1cb0c <myhtml_charef_find_by_pos@@Base+0x7c>
   1cba4:	mov	r0, #1
   1cba8:	str	r0, [lr, #12]
   1cbac:	ldr	r1, [lr, #4]
   1cbb0:	mov	r0, r4
   1cbb4:	cmp	r1, #0
   1cbb8:	ldrne	r0, [lr, #8]
   1cbbc:	strne	r0, [r2]
   1cbc0:	movne	r0, r1
   1cbc4:	pop	{r4, r5, r6, r7, fp, pc}
   1cbc8:	str	r0, [lr]
   1cbcc:	mov	r1, #1
   1cbd0:	str	r1, [lr, #12]
   1cbd4:	pop	{r4, r5, r6, r7, fp, pc}
   1cbd8:	ldr	r1, [r6, #20]
   1cbdc:	str	r0, [lr]
   1cbe0:	cmp	r1, #0
   1cbe4:	stmibne	lr, {r0, r5}
   1cbe8:	popne	{r4, r5, r6, r7, fp, pc}
   1cbec:	pop	{r4, r5, r6, r7, fp, pc}
   1cbf0:	mov	r1, #1
   1cbf4:	str	r0, [lr]
   1cbf8:	str	r1, [lr, #12]
   1cbfc:	ldr	r1, [r6, #20]
   1cc00:	cmp	r1, #0
   1cc04:	bne	1cbc4 <myhtml_charef_find_by_pos@@Base+0x134>
   1cc08:	b	1cbac <myhtml_charef_find_by_pos@@Base+0x11c>
   1cc0c:	andeq	ip, r7, r4, lsl #27
   1cc10:	andeq	ip, r7, r8, ror #26

0001cc14 <myhtml_data_process_entry_clean@@Base>:
   1cc14:	vmov.i32	q8, #0	; 0x00000000
   1cc18:	add	r1, r0, #48	; 0x30
   1cc1c:	vst1.32	{d16-d17}, [r1]
   1cc20:	add	r1, r0, #36	; 0x24
   1cc24:	vst1.32	{d16-d17}, [r1]
   1cc28:	add	r1, r0, #4
   1cc2c:	vst1.32	{d16-d17}, [r1]
   1cc30:	ldr	r1, [pc, #12]	; 1cc44 <myhtml_data_process_entry_clean@@Base+0x30>
   1cc34:	ldr	r1, [pc, r1]
   1cc38:	str	r1, [r0], #20
   1cc3c:	vst1.32	{d16-d17}, [r0]
   1cc40:	bx	lr
   1cc44:	andeq	pc, pc, r8, lsl #23

0001cc48 <myhtml_data_process_state_data@@Base>:
   1cc48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cc4c:	add	fp, sp, #28
   1cc50:	sub	sp, sp, #12
   1cc54:	mov	sl, r0
   1cc58:	ldr	r0, [fp, #8]
   1cc5c:	mov	r5, r3
   1cc60:	mov	r9, r2
   1cc64:	mov	r8, r1
   1cc68:	mov	r6, r3
   1cc6c:	cmp	r3, r0
   1cc70:	bcs	1cc98 <myhtml_data_process_state_data@@Base+0x50>
   1cc74:	add	r4, r9, r5
   1cc78:	mov	r7, #0
   1cc7c:	ldrb	r1, [r4, r7]
   1cc80:	cmp	r1, #38	; 0x26
   1cc84:	beq	1cce4 <myhtml_data_process_state_data@@Base+0x9c>
   1cc88:	add	r7, r7, #1
   1cc8c:	add	r6, r5, r7
   1cc90:	cmp	r6, r0
   1cc94:	bcc	1cc7c <myhtml_data_process_state_data@@Base+0x34>
   1cc98:	ldr	r3, [sl, #32]
   1cc9c:	add	r1, r9, r5
   1cca0:	sub	r2, r6, r5
   1cca4:	mov	r0, r8
   1cca8:	bl	1194c <myhtml_string_before_append_any_preprocessing@plt>
   1ccac:	add	r0, r0, r5
   1ccb0:	cmp	r6, r0
   1ccb4:	beq	1cd54 <myhtml_data_process_state_data@@Base+0x10c>
   1ccb8:	ldr	r1, [sl, #4]
   1ccbc:	cmp	r1, #0
   1ccc0:	beq	1cd3c <myhtml_data_process_state_data@@Base+0xf4>
   1ccc4:	ldrb	r2, [sl, #61]	; 0x3d
   1ccc8:	sub	r3, r6, r0
   1cccc:	stm	sp, {r1, r2}
   1ccd0:	add	r2, r9, r0
   1ccd4:	add	r1, sl, #8
   1ccd8:	mov	r0, r8
   1ccdc:	bl	11acc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1cce0:	b	1cd50 <myhtml_data_process_state_data@@Base+0x108>
   1cce4:	ldr	r3, [sl, #32]
   1cce8:	mov	r0, r8
   1ccec:	mov	r1, r4
   1ccf0:	mov	r2, r7
   1ccf4:	bl	1194c <myhtml_string_before_append_any_preprocessing@plt>
   1ccf8:	subs	r3, r7, r0
   1ccfc:	beq	1cd7c <myhtml_data_process_state_data@@Base+0x134>
   1cd00:	ldr	r1, [sl, #4]
   1cd04:	add	r0, r0, r5
   1cd08:	cmp	r1, #0
   1cd0c:	beq	1cd60 <myhtml_data_process_state_data@@Base+0x118>
   1cd10:	ldrb	r2, [sl, #61]	; 0x3d
   1cd14:	add	r6, sl, #8
   1cd18:	stm	sp, {r1, r2}
   1cd1c:	add	r2, r9, r0
   1cd20:	mov	r0, r8
   1cd24:	mov	r1, r6
   1cd28:	bl	11acc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1cd2c:	str	r0, [sl, #32]
   1cd30:	mov	r0, r6
   1cd34:	bl	11208 <myencoding_result_clean@plt>
   1cd38:	b	1cd7c <myhtml_data_process_state_data@@Base+0x134>
   1cd3c:	ldrb	r3, [sl, #61]	; 0x3d
   1cd40:	add	r1, r9, r0
   1cd44:	sub	r2, r6, r0
   1cd48:	mov	r0, r8
   1cd4c:	bl	11214 <myhtml_string_append_with_preprocessing@plt>
   1cd50:	str	r0, [sl, #32]
   1cd54:	mov	r0, r6
   1cd58:	sub	sp, fp, #28
   1cd5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cd60:	ldrb	r6, [sl, #61]	; 0x3d
   1cd64:	add	r1, r9, r0
   1cd68:	mov	r2, r3
   1cd6c:	mov	r0, r8
   1cd70:	mov	r3, r6
   1cd74:	bl	11214 <myhtml_string_append_with_preprocessing@plt>
   1cd78:	str	r0, [sl, #32]
   1cd7c:	ldr	r0, [r8, #8]
   1cd80:	ldr	r1, [pc, #92]	; 1cde4 <myhtml_data_process_state_data@@Base+0x19c>
   1cd84:	ldr	r1, [pc, r1]
   1cd88:	str	r1, [sl]
   1cd8c:	str	r0, [sl, #36]	; 0x24
   1cd90:	add	r1, r0, #2
   1cd94:	ldr	r2, [r8, #4]
   1cd98:	ldrb	r4, [r4, r7]
   1cd9c:	cmp	r1, r2
   1cda0:	bcc	1cdb0 <myhtml_data_process_state_data@@Base+0x168>
   1cda4:	mov	r0, r8
   1cda8:	bl	11778 <mycore_string_realloc@plt>
   1cdac:	ldr	r0, [r8, #8]
   1cdb0:	ldr	r1, [r8]
   1cdb4:	mov	r2, #0
   1cdb8:	strb	r4, [r1, r0]
   1cdbc:	ldr	r1, [r8, #8]
   1cdc0:	ldr	r0, [r8]
   1cdc4:	add	r1, r1, #1
   1cdc8:	str	r1, [r8, #8]
   1cdcc:	strb	r2, [r0, r1]
   1cdd0:	add	r0, r5, r7
   1cdd4:	add	r6, r0, #1
   1cdd8:	mov	r0, r6
   1cddc:	sub	sp, fp, #28
   1cde0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cde4:	strdeq	pc, [pc], -ip

0001cde8 <myhtml_data_process_string_append_char@@Base>:
   1cde8:	push	{r4, r5, fp, lr}
   1cdec:	add	fp, sp, #8
   1cdf0:	mov	r4, r0
   1cdf4:	ldr	r2, [r0, #4]
   1cdf8:	ldr	r0, [r0, #8]
   1cdfc:	mov	r5, r1
   1ce00:	add	r1, r0, #2
   1ce04:	cmp	r1, r2
   1ce08:	bcc	1ce18 <myhtml_data_process_string_append_char@@Base+0x30>
   1ce0c:	mov	r0, r4
   1ce10:	bl	11778 <mycore_string_realloc@plt>
   1ce14:	ldr	r0, [r4, #8]
   1ce18:	ldr	r1, [r4]
   1ce1c:	mov	r2, #0
   1ce20:	strb	r5, [r1, r0]
   1ce24:	ldr	r1, [r4, #8]
   1ce28:	ldr	r0, [r4]
   1ce2c:	add	r1, r1, #1
   1ce30:	str	r1, [r4, #8]
   1ce34:	strb	r2, [r0, r1]
   1ce38:	pop	{r4, r5, fp, pc}

0001ce3c <myhtml_data_process_state_ampersand@@Base>:
   1ce3c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ce40:	add	fp, sp, #24
   1ce44:	mov	r6, r0
   1ce48:	ldrb	r0, [r2, r3]
   1ce4c:	mov	r4, r3
   1ce50:	mov	r7, r2
   1ce54:	mov	r5, r1
   1ce58:	cmp	r0, #35	; 0x23
   1ce5c:	bne	1cf28 <myhtml_data_process_state_ampersand@@Base+0xec>
   1ce60:	ldr	r0, [r5, #8]
   1ce64:	ldr	r2, [r5, #4]
   1ce68:	ldr	r8, [fp, #8]
   1ce6c:	add	r1, r0, #2
   1ce70:	cmp	r1, r2
   1ce74:	bcc	1ce84 <myhtml_data_process_state_ampersand@@Base+0x48>
   1ce78:	mov	r0, r5
   1ce7c:	bl	11778 <mycore_string_realloc@plt>
   1ce80:	ldr	r0, [r5, #8]
   1ce84:	ldr	r1, [r5]
   1ce88:	mov	r2, #35	; 0x23
   1ce8c:	strb	r2, [r1, r0]
   1ce90:	mov	r2, #0
   1ce94:	ldr	r1, [r5, #8]
   1ce98:	ldr	r0, [r5]
   1ce9c:	add	r1, r1, #1
   1cea0:	str	r1, [r5, #8]
   1cea4:	strb	r2, [r0, r1]
   1cea8:	add	r0, r4, #1
   1ceac:	str	r2, [r6, #40]	; 0x28
   1ceb0:	cmp	r0, r8
   1ceb4:	ldrcs	r1, [pc, #264]	; 1cfc4 <myhtml_data_process_state_ampersand@@Base+0x188>
   1ceb8:	ldrcs	r1, [pc, r1]
   1cebc:	strcs	r1, [r6]
   1cec0:	popcs	{r4, r5, r6, r7, r8, sl, fp, pc}
   1cec4:	ldrb	r7, [r7, r0]
   1cec8:	orr	r1, r7, #32
   1cecc:	cmp	r1, #120	; 0x78
   1ced0:	bne	1cfb4 <myhtml_data_process_state_ampersand@@Base+0x178>
   1ced4:	ldr	r0, [r5, #8]
   1ced8:	ldr	r2, [r5, #4]
   1cedc:	add	r1, r0, #2
   1cee0:	cmp	r1, r2
   1cee4:	bcc	1cef4 <myhtml_data_process_state_ampersand@@Base+0xb8>
   1cee8:	mov	r0, r5
   1ceec:	bl	11778 <mycore_string_realloc@plt>
   1cef0:	ldr	r0, [r5, #8]
   1cef4:	ldr	r1, [r5]
   1cef8:	mov	r2, #0
   1cefc:	strb	r7, [r1, r0]
   1cf00:	ldr	r1, [r5, #8]
   1cf04:	ldr	r0, [r5]
   1cf08:	add	r1, r1, #1
   1cf0c:	str	r1, [r5, #8]
   1cf10:	strb	r2, [r0, r1]
   1cf14:	ldr	r0, [pc, #172]	; 1cfc8 <myhtml_data_process_state_ampersand@@Base+0x18c>
   1cf18:	ldr	r0, [pc, r0]
   1cf1c:	str	r0, [r6]
   1cf20:	add	r0, r4, #2
   1cf24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1cf28:	mov	r0, #0
   1cf2c:	str	r0, [r6, #48]	; 0x30
   1cf30:	ldrb	r0, [r7, r4]
   1cf34:	bl	11820 <myhtml_charef_get_first_position@plt>
   1cf38:	str	r0, [r6, #44]	; 0x2c
   1cf3c:	ldrb	r0, [r0]
   1cf40:	cmp	r0, #0
   1cf44:	beq	1cfa0 <myhtml_data_process_state_ampersand@@Base+0x164>
   1cf48:	ldr	r0, [pc, #132]	; 1cfd4 <myhtml_data_process_state_ampersand@@Base+0x198>
   1cf4c:	ldr	r0, [pc, r0]
   1cf50:	str	r0, [r6]
   1cf54:	ldr	r0, [r5, #8]
   1cf58:	ldr	r2, [r5, #4]
   1cf5c:	ldrb	r6, [r7, r4]
   1cf60:	add	r1, r0, #2
   1cf64:	cmp	r1, r2
   1cf68:	bcc	1cf78 <myhtml_data_process_state_ampersand@@Base+0x13c>
   1cf6c:	mov	r0, r5
   1cf70:	bl	11778 <mycore_string_realloc@plt>
   1cf74:	ldr	r0, [r5, #8]
   1cf78:	ldr	r1, [r5]
   1cf7c:	mov	r2, #0
   1cf80:	strb	r6, [r1, r0]
   1cf84:	ldr	r1, [r5, #8]
   1cf88:	ldr	r0, [r5]
   1cf8c:	add	r1, r1, #1
   1cf90:	str	r1, [r5, #8]
   1cf94:	strb	r2, [r0, r1]
   1cf98:	add	r0, r4, #1
   1cf9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1cfa0:	ldr	r0, [pc, #40]	; 1cfd0 <myhtml_data_process_state_ampersand@@Base+0x194>
   1cfa4:	ldr	r0, [pc, r0]
   1cfa8:	str	r0, [r6]
   1cfac:	mov	r0, r4
   1cfb0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1cfb4:	ldr	r1, [pc, #16]	; 1cfcc <myhtml_data_process_state_ampersand@@Base+0x190>
   1cfb8:	ldr	r1, [pc, r1]
   1cfbc:	str	r1, [r6]
   1cfc0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1cfc4:	andeq	pc, pc, r0, asr #13
   1cfc8:	andeq	pc, pc, r8, ror #12
   1cfcc:	andeq	pc, pc, ip, ror #15
   1cfd0:	andeq	pc, pc, r8, lsl r8	; <UNPREDICTABLE>
   1cfd4:	andeq	pc, pc, r8, lsl #14

0001cfd8 <myhtml_data_process_state_ampersand_hash@@Base>:
   1cfd8:	push	{r4, r5, r6, r7, fp, lr}
   1cfdc:	add	fp, sp, #16
   1cfe0:	ldrb	r7, [r2, r3]
   1cfe4:	mov	r5, r0
   1cfe8:	mov	r4, r3
   1cfec:	orr	r0, r7, #32
   1cff0:	cmp	r0, #120	; 0x78
   1cff4:	bne	1d054 <myhtml_data_process_state_ampersand_hash@@Base+0x7c>
   1cff8:	ldr	r0, [r1, #8]
   1cffc:	ldr	r2, [r1, #4]
   1d000:	mov	r6, r1
   1d004:	add	r1, r0, #2
   1d008:	cmp	r1, r2
   1d00c:	bcc	1d01c <myhtml_data_process_state_ampersand_hash@@Base+0x44>
   1d010:	mov	r0, r6
   1d014:	bl	11778 <mycore_string_realloc@plt>
   1d018:	ldr	r0, [r6, #8]
   1d01c:	ldr	r1, [r6]
   1d020:	mov	r2, #0
   1d024:	add	r4, r4, #1
   1d028:	strb	r7, [r1, r0]
   1d02c:	ldr	r1, [r6, #8]
   1d030:	ldr	r0, [r6]
   1d034:	add	r1, r1, #1
   1d038:	str	r1, [r6, #8]
   1d03c:	strb	r2, [r0, r1]
   1d040:	ldr	r0, [pc, #36]	; 1d06c <myhtml_data_process_state_ampersand_hash@@Base+0x94>
   1d044:	ldr	r0, [pc, r0]
   1d048:	str	r0, [r5]
   1d04c:	mov	r0, r4
   1d050:	pop	{r4, r5, r6, r7, fp, pc}
   1d054:	ldr	r0, [pc, #12]	; 1d068 <myhtml_data_process_state_ampersand_hash@@Base+0x90>
   1d058:	ldr	r0, [pc, r0]
   1d05c:	str	r0, [r5]
   1d060:	mov	r0, r4
   1d064:	pop	{r4, r5, r6, r7, fp, pc}
   1d068:	andeq	pc, pc, ip, asr #14
   1d06c:	andeq	pc, pc, ip, lsr r5	; <UNPREDICTABLE>

0001d070 <myhtml_data_process_state_ampersand_hash_x_data@@Base>:
   1d070:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1d074:	add	fp, sp, #24
   1d078:	sub	sp, sp, #8
   1d07c:	mov	r4, r0
   1d080:	ldr	r0, [fp, #8]
   1d084:	mov	r7, r3
   1d088:	mov	r9, r2
   1d08c:	mov	r8, r1
   1d090:	mov	r6, r3
   1d094:	cmp	r3, r0
   1d098:	bcs	1d0f4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x84>
   1d09c:	ldr	r2, [pc, #452]	; 1d268 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1f8>
   1d0a0:	add	r1, r9, r7
   1d0a4:	mov	r5, #0
   1d0a8:	add	r2, pc, r2
   1d0ac:	ldrb	r3, [r1, r5]
   1d0b0:	ldrb	r3, [r2, r3]
   1d0b4:	cmp	r3, #255	; 0xff
   1d0b8:	beq	1d14c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xdc>
   1d0bc:	ldr	r3, [r4, #40]	; 0x28
   1d0c0:	lsr	r6, r3, #16
   1d0c4:	cmp	r6, #16
   1d0c8:	bhi	1d0e4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x74>
   1d0cc:	lsl	r6, r3, #4
   1d0d0:	str	r6, [r4, #40]	; 0x28
   1d0d4:	ldrb	r6, [r1, r5]
   1d0d8:	ldrb	r6, [r2, r6]
   1d0dc:	orr	r3, r6, r3, lsl #4
   1d0e0:	str	r3, [r4, #40]	; 0x28
   1d0e4:	add	r5, r5, #1
   1d0e8:	add	r6, r7, r5
   1d0ec:	cmp	r6, r0
   1d0f0:	bcc	1d0ac <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x3c>
   1d0f4:	ldr	r3, [r4, #32]
   1d0f8:	add	r1, r9, r7
   1d0fc:	sub	r2, r6, r7
   1d100:	mov	r0, r8
   1d104:	bl	1194c <myhtml_string_before_append_any_preprocessing@plt>
   1d108:	add	r0, r0, r7
   1d10c:	cmp	r6, r0
   1d110:	beq	1d244 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1d4>
   1d114:	ldr	r1, [r4, #4]
   1d118:	cmp	r1, #0
   1d11c:	beq	1d1a0 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x130>
   1d120:	ldrb	r2, [r4, #61]	; 0x3d
   1d124:	sub	r3, r6, r0
   1d128:	stm	sp, {r1, r2}
   1d12c:	add	r2, r9, r0
   1d130:	add	r1, r4, #8
   1d134:	mov	r0, r8
   1d138:	bl	11acc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1d13c:	str	r0, [r4, #32]
   1d140:	mov	r0, r6
   1d144:	sub	sp, fp, #24
   1d148:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1d14c:	ldr	r0, [pc, #280]	; 1d26c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1fc>
   1d150:	cmp	r5, #0
   1d154:	ldr	r0, [pc, r0]
   1d158:	str	r0, [r4]
   1d15c:	beq	1d1c4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x154>
   1d160:	ldrb	r0, [r1, r5]
   1d164:	cmp	r0, #59	; 0x3b
   1d168:	ldmib	r8, {r0, r1}
   1d16c:	addeq	r7, r7, #1
   1d170:	add	r1, r1, #5
   1d174:	cmp	r1, r0
   1d178:	bcc	1d184 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x114>
   1d17c:	mov	r0, r8
   1d180:	bl	11778 <mycore_string_realloc@plt>
   1d184:	ldr	r0, [r4, #40]	; 0x28
   1d188:	cmp	r0, #159	; 0x9f
   1d18c:	bhi	1d1f8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x188>
   1d190:	ldr	r1, [pc, #216]	; 1d270 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x200>
   1d194:	add	r1, pc, r1
   1d198:	ldr	r1, [r1, r0, lsl #2]
   1d19c:	b	1d214 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1a4>
   1d1a0:	ldrb	r3, [r4, #61]	; 0x3d
   1d1a4:	add	r1, r9, r0
   1d1a8:	sub	r2, r6, r0
   1d1ac:	mov	r0, r8
   1d1b0:	bl	11214 <myhtml_string_append_with_preprocessing@plt>
   1d1b4:	str	r0, [r4, #32]
   1d1b8:	mov	r0, r6
   1d1bc:	sub	sp, fp, #24
   1d1c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1d1c4:	ldr	r3, [r4, #32]
   1d1c8:	mov	r0, r8
   1d1cc:	mov	r2, #0
   1d1d0:	add	r6, r7, r5
   1d1d4:	bl	1194c <myhtml_string_before_append_any_preprocessing@plt>
   1d1d8:	subs	r3, r5, r0
   1d1dc:	beq	1d244 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1d4>
   1d1e0:	ldr	r1, [r4, #4]
   1d1e4:	add	r0, r0, r7
   1d1e8:	cmp	r1, #0
   1d1ec:	beq	1d250 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1e0>
   1d1f0:	ldrb	r2, [r4, #61]	; 0x3d
   1d1f4:	b	1d128 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xb8>
   1d1f8:	mov	r2, r0
   1d1fc:	movw	r1, #65533	; 0xfffd
   1d200:	bfc	r2, #0, #11
   1d204:	cmp	r2, #55296	; 0xd800
   1d208:	beq	1d214 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1a4>
   1d20c:	cmp	r0, #1114112	; 0x110000
   1d210:	bcc	1d21c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1ac>
   1d214:	mov	r0, r1
   1d218:	str	r1, [r4, #40]	; 0x28
   1d21c:	ldr	r4, [r4, #36]	; 0x24
   1d220:	ldr	r1, [r8]
   1d224:	add	r6, r7, r5
   1d228:	add	r1, r1, r4
   1d22c:	bl	11b20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1d230:	add	r0, r0, r4
   1d234:	mov	r2, #0
   1d238:	str	r0, [r8, #8]
   1d23c:	ldr	r1, [r8]
   1d240:	strb	r2, [r1, r0]
   1d244:	mov	r0, r6
   1d248:	sub	sp, fp, #24
   1d24c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1d250:	ldrb	r7, [r4, #61]	; 0x3d
   1d254:	add	r1, r9, r0
   1d258:	mov	r2, r3
   1d25c:	mov	r0, r8
   1d260:	mov	r3, r7
   1d264:	b	1d1b0 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x140>
   1d268:	andeq	r5, lr, r4, lsr #32
   1d26c:	andeq	pc, pc, r8, ror #12
   1d270:	andeq	r5, lr, r8, lsr r0

0001d274 <myhtml_data_process_state_ampersand_hash_data@@Base>:
   1d274:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1d278:	add	fp, sp, #24
   1d27c:	sub	sp, sp, #8
   1d280:	mov	r4, r0
   1d284:	ldr	r0, [fp, #8]
   1d288:	mov	r7, r3
   1d28c:	mov	r9, r2
   1d290:	mov	r8, r1
   1d294:	mov	r6, r3
   1d298:	cmp	r3, r0
   1d29c:	bcs	1d2ec <myhtml_data_process_state_ampersand_hash_data@@Base+0x78>
   1d2a0:	ldr	ip, [pc, #440]	; 1d460 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1ec>
   1d2a4:	add	r1, r9, r7
   1d2a8:	mov	r5, #0
   1d2ac:	add	ip, pc, ip
   1d2b0:	ldrb	r3, [r1, r5]
   1d2b4:	sub	r6, r3, #48	; 0x30
   1d2b8:	cmp	r6, #10
   1d2bc:	bcs	1d344 <myhtml_data_process_state_ampersand_hash_data@@Base+0xd0>
   1d2c0:	ldr	r6, [r4, #40]	; 0x28
   1d2c4:	add	r5, r5, #1
   1d2c8:	lsr	r2, r6, #16
   1d2cc:	cmp	r2, #16
   1d2d0:	ldrbls	r2, [ip, r3]
   1d2d4:	addls	r3, r6, r6, lsl #2
   1d2d8:	add	r6, r7, r5
   1d2dc:	addls	r2, r2, r3, lsl #1
   1d2e0:	strls	r2, [r4, #40]	; 0x28
   1d2e4:	cmp	r6, r0
   1d2e8:	bcc	1d2b0 <myhtml_data_process_state_ampersand_hash_data@@Base+0x3c>
   1d2ec:	ldr	r3, [r4, #32]
   1d2f0:	add	r1, r9, r7
   1d2f4:	sub	r2, r6, r7
   1d2f8:	mov	r0, r8
   1d2fc:	bl	1194c <myhtml_string_before_append_any_preprocessing@plt>
   1d300:	add	r0, r0, r7
   1d304:	cmp	r6, r0
   1d308:	beq	1d43c <myhtml_data_process_state_ampersand_hash_data@@Base+0x1c8>
   1d30c:	ldr	r1, [r4, #4]
   1d310:	cmp	r1, #0
   1d314:	beq	1d398 <myhtml_data_process_state_ampersand_hash_data@@Base+0x124>
   1d318:	ldrb	r2, [r4, #61]	; 0x3d
   1d31c:	sub	r3, r6, r0
   1d320:	stm	sp, {r1, r2}
   1d324:	add	r2, r9, r0
   1d328:	add	r1, r4, #8
   1d32c:	mov	r0, r8
   1d330:	bl	11acc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1d334:	str	r0, [r4, #32]
   1d338:	mov	r0, r6
   1d33c:	sub	sp, fp, #24
   1d340:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1d344:	ldr	r0, [pc, #280]	; 1d464 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1f0>
   1d348:	cmp	r5, #0
   1d34c:	ldr	r0, [pc, r0]
   1d350:	str	r0, [r4]
   1d354:	beq	1d3bc <myhtml_data_process_state_ampersand_hash_data@@Base+0x148>
   1d358:	ldrb	r0, [r1, r5]
   1d35c:	cmp	r0, #59	; 0x3b
   1d360:	ldmib	r8, {r0, r1}
   1d364:	addeq	r7, r7, #1
   1d368:	add	r1, r1, #5
   1d36c:	cmp	r1, r0
   1d370:	bcc	1d37c <myhtml_data_process_state_ampersand_hash_data@@Base+0x108>
   1d374:	mov	r0, r8
   1d378:	bl	11778 <mycore_string_realloc@plt>
   1d37c:	ldr	r0, [r4, #40]	; 0x28
   1d380:	cmp	r0, #159	; 0x9f
   1d384:	bhi	1d3f0 <myhtml_data_process_state_ampersand_hash_data@@Base+0x17c>
   1d388:	ldr	r1, [pc, #216]	; 1d468 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1f4>
   1d38c:	add	r1, pc, r1
   1d390:	ldr	r1, [r1, r0, lsl #2]
   1d394:	b	1d40c <myhtml_data_process_state_ampersand_hash_data@@Base+0x198>
   1d398:	ldrb	r3, [r4, #61]	; 0x3d
   1d39c:	add	r1, r9, r0
   1d3a0:	sub	r2, r6, r0
   1d3a4:	mov	r0, r8
   1d3a8:	bl	11214 <myhtml_string_append_with_preprocessing@plt>
   1d3ac:	str	r0, [r4, #32]
   1d3b0:	mov	r0, r6
   1d3b4:	sub	sp, fp, #24
   1d3b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1d3bc:	ldr	r3, [r4, #32]
   1d3c0:	mov	r0, r8
   1d3c4:	mov	r2, #0
   1d3c8:	add	r6, r7, r5
   1d3cc:	bl	1194c <myhtml_string_before_append_any_preprocessing@plt>
   1d3d0:	subs	r3, r5, r0
   1d3d4:	beq	1d43c <myhtml_data_process_state_ampersand_hash_data@@Base+0x1c8>
   1d3d8:	ldr	r1, [r4, #4]
   1d3dc:	add	r0, r0, r7
   1d3e0:	cmp	r1, #0
   1d3e4:	beq	1d448 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1d4>
   1d3e8:	ldrb	r2, [r4, #61]	; 0x3d
   1d3ec:	b	1d320 <myhtml_data_process_state_ampersand_hash_data@@Base+0xac>
   1d3f0:	mov	r2, r0
   1d3f4:	movw	r1, #65533	; 0xfffd
   1d3f8:	bfc	r2, #0, #11
   1d3fc:	cmp	r2, #55296	; 0xd800
   1d400:	beq	1d40c <myhtml_data_process_state_ampersand_hash_data@@Base+0x198>
   1d404:	cmp	r0, #1114112	; 0x110000
   1d408:	bcc	1d414 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1a0>
   1d40c:	mov	r0, r1
   1d410:	str	r1, [r4, #40]	; 0x28
   1d414:	ldr	r4, [r4, #36]	; 0x24
   1d418:	ldr	r1, [r8]
   1d41c:	add	r6, r7, r5
   1d420:	add	r1, r1, r4
   1d424:	bl	11b20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1d428:	add	r0, r0, r4
   1d42c:	mov	r2, #0
   1d430:	str	r0, [r8, #8]
   1d434:	ldr	r1, [r8]
   1d438:	strb	r2, [r1, r0]
   1d43c:	mov	r0, r6
   1d440:	sub	sp, fp, #24
   1d444:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1d448:	ldrb	r7, [r4, #61]	; 0x3d
   1d44c:	add	r1, r9, r0
   1d450:	mov	r2, r3
   1d454:	mov	r0, r8
   1d458:	mov	r3, r7
   1d45c:	b	1d3a8 <myhtml_data_process_state_ampersand_hash_data@@Base+0x134>
   1d460:	andeq	r4, lr, r0, lsr #26
   1d464:	andeq	pc, pc, r0, ror r4	; <UNPREDICTABLE>
   1d468:	andeq	r4, lr, r0, asr #28

0001d46c <myhtml_data_process_state_ampersand_data@@Base>:
   1d46c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1d470:	add	fp, sp, #24
   1d474:	sub	sp, sp, #16
   1d478:	str	r3, [sp, #12]
   1d47c:	mov	r6, r0
   1d480:	mov	r4, r0
   1d484:	mov	r7, r3
   1d488:	ldr	r3, [fp, #8]
   1d48c:	mov	r8, r2
   1d490:	mov	r5, r1
   1d494:	add	r2, sp, #12
   1d498:	ldr	r0, [r6, #44]!	; 0x2c
   1d49c:	mov	r1, r8
   1d4a0:	ldr	r0, [r0, #4]
   1d4a4:	str	r6, [sp]
   1d4a8:	bl	11634 <myhtml_charef_find_by_pos@plt>
   1d4ac:	mov	r9, r0
   1d4b0:	ldr	r0, [r6, #12]
   1d4b4:	cmp	r0, #0
   1d4b8:	beq	1d53c <myhtml_data_process_state_ampersand_data@@Base+0xd0>
   1d4bc:	ldr	r0, [pc, #440]	; 1d67c <myhtml_data_process_state_ampersand_data@@Base+0x210>
   1d4c0:	ldr	r0, [pc, r0]
   1d4c4:	str	r0, [r4]
   1d4c8:	ldr	r0, [sp, #12]
   1d4cc:	ldrb	r1, [r8, r0]
   1d4d0:	cmp	r1, #59	; 0x3b
   1d4d4:	bne	1d544 <myhtml_data_process_state_ampersand_data@@Base+0xd8>
   1d4d8:	add	r0, r0, #1
   1d4dc:	str	r0, [sp, #12]
   1d4e0:	ldr	r1, [r9, #20]
   1d4e4:	cmp	r1, #0
   1d4e8:	bne	1d578 <myhtml_data_process_state_ampersand_data@@Base+0x10c>
   1d4ec:	ldr	r3, [r4, #32]
   1d4f0:	sub	r2, r0, r7
   1d4f4:	add	r1, r8, r7
   1d4f8:	mov	r0, r5
   1d4fc:	bl	1194c <myhtml_string_before_append_any_preprocessing@plt>
   1d500:	ldr	r3, [sp, #12]
   1d504:	add	r0, r0, r7
   1d508:	cmp	r3, r0
   1d50c:	beq	1d668 <myhtml_data_process_state_ampersand_data@@Base+0x1fc>
   1d510:	ldr	r1, [r4, #4]
   1d514:	cmp	r1, #0
   1d518:	beq	1d650 <myhtml_data_process_state_ampersand_data@@Base+0x1e4>
   1d51c:	ldrb	r2, [r4, #61]	; 0x3d
   1d520:	sub	r3, r3, r0
   1d524:	stm	sp, {r1, r2}
   1d528:	add	r2, r8, r0
   1d52c:	add	r1, r4, #8
   1d530:	mov	r0, r5
   1d534:	bl	11acc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1d538:	b	1d664 <myhtml_data_process_state_ampersand_data@@Base+0x1f8>
   1d53c:	ldr	r0, [sp, #12]
   1d540:	b	1d5dc <myhtml_data_process_state_ampersand_data@@Base+0x170>
   1d544:	ldrb	r2, [r4, #60]	; 0x3c
   1d548:	cmp	r2, #0
   1d54c:	beq	1d56c <myhtml_data_process_state_ampersand_data@@Base+0x100>
   1d550:	cmp	r1, #61	; 0x3d
   1d554:	beq	1d5dc <myhtml_data_process_state_ampersand_data@@Base+0x170>
   1d558:	ldr	r2, [pc, #288]	; 1d680 <myhtml_data_process_state_ampersand_data@@Base+0x214>
   1d55c:	add	r2, pc, r2
   1d560:	ldr	r1, [r2, r1, lsl #2]
   1d564:	cmp	r1, #255	; 0xff
   1d568:	bne	1d5dc <myhtml_data_process_state_ampersand_data@@Base+0x170>
   1d56c:	ldr	r1, [r9, #20]
   1d570:	cmp	r1, #0
   1d574:	beq	1d4ec <myhtml_data_process_state_ampersand_data@@Base+0x80>
   1d578:	add	r7, r9, #12
   1d57c:	mov	r6, #0
   1d580:	ldmib	r5, {r0, r1}
   1d584:	add	r1, r1, #5
   1d588:	cmp	r1, r0
   1d58c:	bcc	1d598 <myhtml_data_process_state_ampersand_data@@Base+0x12c>
   1d590:	mov	r0, r5
   1d594:	bl	11778 <mycore_string_realloc@plt>
   1d598:	ldr	r1, [r4, #36]	; 0x24
   1d59c:	ldr	r2, [r5]
   1d5a0:	ldr	r0, [r7, r6, lsl #2]
   1d5a4:	add	r1, r2, r1
   1d5a8:	bl	11b20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1d5ac:	ldr	r1, [r4, #36]	; 0x24
   1d5b0:	add	r6, r6, #1
   1d5b4:	add	r0, r1, r0
   1d5b8:	str	r0, [r4, #36]	; 0x24
   1d5bc:	ldr	r1, [r9, #20]
   1d5c0:	cmp	r6, r1
   1d5c4:	bcc	1d580 <myhtml_data_process_state_ampersand_data@@Base+0x114>
   1d5c8:	str	r0, [r5, #8]
   1d5cc:	mov	r2, #0
   1d5d0:	ldr	r1, [r5]
   1d5d4:	strb	r2, [r1, r0]
   1d5d8:	b	1d668 <myhtml_data_process_state_ampersand_data@@Base+0x1fc>
   1d5dc:	add	r1, r8, r7
   1d5e0:	ldr	r3, [r4, #32]
   1d5e4:	sub	r2, r0, r7
   1d5e8:	mov	r0, r5
   1d5ec:	bl	1194c <myhtml_string_before_append_any_preprocessing@plt>
   1d5f0:	ldr	r3, [sp, #12]
   1d5f4:	add	r0, r0, r7
   1d5f8:	cmp	r3, r0
   1d5fc:	beq	1d644 <myhtml_data_process_state_ampersand_data@@Base+0x1d8>
   1d600:	ldr	r1, [r4, #4]
   1d604:	cmp	r1, #0
   1d608:	beq	1d62c <myhtml_data_process_state_ampersand_data@@Base+0x1c0>
   1d60c:	ldrb	r2, [r4, #61]	; 0x3d
   1d610:	sub	r3, r3, r0
   1d614:	stm	sp, {r1, r2}
   1d618:	add	r2, r8, r0
   1d61c:	add	r1, r4, #8
   1d620:	mov	r0, r5
   1d624:	bl	11acc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1d628:	b	1d640 <myhtml_data_process_state_ampersand_data@@Base+0x1d4>
   1d62c:	sub	r2, r3, r0
   1d630:	ldrb	r3, [r4, #61]	; 0x3d
   1d634:	add	r1, r8, r0
   1d638:	mov	r0, r5
   1d63c:	bl	11214 <myhtml_string_append_with_preprocessing@plt>
   1d640:	str	r0, [r4, #32]
   1d644:	ldr	r0, [sp, #12]
   1d648:	sub	sp, fp, #24
   1d64c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1d650:	sub	r2, r3, r0
   1d654:	ldrb	r3, [r4, #61]	; 0x3d
   1d658:	add	r1, r8, r0
   1d65c:	mov	r0, r5
   1d660:	bl	11214 <myhtml_string_append_with_preprocessing@plt>
   1d664:	str	r0, [r4, #32]
   1d668:	mov	r0, #0
   1d66c:	str	r0, [r4, #48]	; 0x30
   1d670:	ldr	r0, [sp, #12]
   1d674:	sub	sp, fp, #24
   1d678:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1d67c:	strdeq	pc, [pc], -ip
   1d680:	andeq	r4, lr, r0, ror r6

0001d684 <myhtml_data_process_state_end@@Base>:
   1d684:	push	{r4, r5, fp, lr}
   1d688:	add	fp, sp, #8
   1d68c:	mov	r4, r1
   1d690:	mov	r5, r0
   1d694:	ldmib	r1, {r0, r1}
   1d698:	add	r1, r1, #5
   1d69c:	cmp	r1, r0
   1d6a0:	bcc	1d6ac <myhtml_data_process_state_end@@Base+0x28>
   1d6a4:	mov	r0, r4
   1d6a8:	bl	11778 <mycore_string_realloc@plt>
   1d6ac:	ldr	r0, [r5, #40]	; 0x28
   1d6b0:	cmp	r0, #159	; 0x9f
   1d6b4:	bhi	1d6d0 <myhtml_data_process_state_end@@Base+0x4c>
   1d6b8:	ldr	r1, [pc, #84]	; 1d714 <myhtml_data_process_state_end@@Base+0x90>
   1d6bc:	add	r1, pc, r1
   1d6c0:	ldr	r1, [r1, r0, lsl #2]
   1d6c4:	mov	r0, r1
   1d6c8:	str	r1, [r5, #40]	; 0x28
   1d6cc:	b	1d6ec <myhtml_data_process_state_end@@Base+0x68>
   1d6d0:	mov	r2, r0
   1d6d4:	movw	r1, #65533	; 0xfffd
   1d6d8:	bfc	r2, #0, #11
   1d6dc:	cmp	r2, #55296	; 0xd800
   1d6e0:	beq	1d6c4 <myhtml_data_process_state_end@@Base+0x40>
   1d6e4:	cmp	r0, #1114112	; 0x110000
   1d6e8:	bcs	1d6c4 <myhtml_data_process_state_end@@Base+0x40>
   1d6ec:	ldr	r5, [r5, #36]	; 0x24
   1d6f0:	ldr	r1, [r4]
   1d6f4:	add	r1, r1, r5
   1d6f8:	bl	11b20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1d6fc:	add	r0, r0, r5
   1d700:	mov	r2, #0
   1d704:	str	r0, [r4, #8]
   1d708:	ldr	r1, [r4]
   1d70c:	strb	r2, [r1, r0]
   1d710:	pop	{r4, r5, fp, pc}
   1d714:	andeq	r4, lr, r0, lsl fp

0001d718 <myhtml_data_process@@Base>:
   1d718:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d71c:	add	fp, sp, #24
   1d720:	sub	sp, sp, #8
   1d724:	cmp	r3, #0
   1d728:	beq	1d764 <myhtml_data_process@@Base+0x4c>
   1d72c:	mov	r4, r3
   1d730:	mov	r8, r2
   1d734:	mov	r6, r1
   1d738:	mov	r7, r0
   1d73c:	mov	r3, #0
   1d740:	ldr	r5, [r7]
   1d744:	mov	r0, r7
   1d748:	mov	r1, r6
   1d74c:	mov	r2, r8
   1d750:	str	r4, [sp]
   1d754:	blx	r5
   1d758:	mov	r3, r0
   1d75c:	cmp	r0, r4
   1d760:	bcc	1d740 <myhtml_data_process@@Base+0x28>
   1d764:	sub	sp, fp, #24
   1d768:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001d76c <myhtml_data_process_end@@Base>:
   1d76c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d770:	add	fp, sp, #24
   1d774:	mov	r5, r0
   1d778:	mov	r4, r1
   1d77c:	ldr	r0, [r0]
   1d780:	ldr	r1, [pc, #336]	; 1d8d8 <myhtml_data_process_end@@Base+0x16c>
   1d784:	ldr	r1, [pc, r1]
   1d788:	cmp	r0, r1
   1d78c:	beq	1d7f8 <myhtml_data_process_end@@Base+0x8c>
   1d790:	ldr	r1, [pc, #324]	; 1d8dc <myhtml_data_process_end@@Base+0x170>
   1d794:	ldr	r1, [pc, r1]
   1d798:	cmp	r0, r1
   1d79c:	beq	1d864 <myhtml_data_process_end@@Base+0xf8>
   1d7a0:	ldr	r1, [pc, #316]	; 1d8e4 <myhtml_data_process_end@@Base+0x178>
   1d7a4:	ldr	r1, [pc, r1]
   1d7a8:	cmp	r0, r1
   1d7ac:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d7b0:	ldr	r1, [r5, #36]	; 0x24
   1d7b4:	ldr	r0, [r4, #8]
   1d7b8:	add	r1, r1, #3
   1d7bc:	cmp	r0, r1
   1d7c0:	beq	1d878 <myhtml_data_process_end@@Base+0x10c>
   1d7c4:	ldr	r2, [r4, #4]
   1d7c8:	add	r1, r0, #5
   1d7cc:	cmp	r1, r2
   1d7d0:	bcc	1d7dc <myhtml_data_process_end@@Base+0x70>
   1d7d4:	mov	r0, r4
   1d7d8:	bl	11778 <mycore_string_realloc@plt>
   1d7dc:	ldr	r0, [r5, #40]	; 0x28
   1d7e0:	cmp	r0, #159	; 0x9f
   1d7e4:	bhi	1d87c <myhtml_data_process_end@@Base+0x110>
   1d7e8:	ldr	r1, [pc, #240]	; 1d8e0 <myhtml_data_process_end@@Base+0x174>
   1d7ec:	add	r1, pc, r1
   1d7f0:	ldr	r1, [r1, r0, lsl #2]
   1d7f4:	b	1d8a0 <myhtml_data_process_end@@Base+0x134>
   1d7f8:	ldr	r6, [r5, #48]	; 0x30
   1d7fc:	cmp	r6, #0
   1d800:	beq	1d878 <myhtml_data_process_end@@Base+0x10c>
   1d804:	ldr	r0, [r6, #20]
   1d808:	cmp	r0, #0
   1d80c:	beq	1d8c0 <myhtml_data_process_end@@Base+0x154>
   1d810:	add	r8, r6, #12
   1d814:	mov	r7, #0
   1d818:	ldmib	r4, {r0, r1}
   1d81c:	add	r1, r1, #5
   1d820:	cmp	r1, r0
   1d824:	bcc	1d830 <myhtml_data_process_end@@Base+0xc4>
   1d828:	mov	r0, r4
   1d82c:	bl	11778 <mycore_string_realloc@plt>
   1d830:	ldr	r1, [r5, #36]	; 0x24
   1d834:	ldr	r2, [r4]
   1d838:	ldr	r0, [r8, r7, lsl #2]
   1d83c:	add	r1, r2, r1
   1d840:	bl	11b20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1d844:	ldr	r1, [r5, #36]	; 0x24
   1d848:	add	r7, r7, #1
   1d84c:	add	r0, r1, r0
   1d850:	str	r0, [r5, #36]	; 0x24
   1d854:	ldr	r1, [r6, #20]
   1d858:	cmp	r7, r1
   1d85c:	bcc	1d818 <myhtml_data_process_end@@Base+0xac>
   1d860:	b	1d8c4 <myhtml_data_process_end@@Base+0x158>
   1d864:	ldr	r1, [r5, #36]	; 0x24
   1d868:	ldr	r0, [r4, #8]
   1d86c:	add	r1, r1, #2
   1d870:	cmp	r0, r1
   1d874:	bne	1d7c4 <myhtml_data_process_end@@Base+0x58>
   1d878:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d87c:	mov	r2, r0
   1d880:	movw	r1, #65533	; 0xfffd
   1d884:	bfc	r2, #0, #11
   1d888:	cmp	r2, #55296	; 0xd800
   1d88c:	beq	1d8a0 <myhtml_data_process_end@@Base+0x134>
   1d890:	movw	r2, #65535	; 0xffff
   1d894:	movt	r2, #16
   1d898:	cmp	r0, r2
   1d89c:	bls	1d8a8 <myhtml_data_process_end@@Base+0x13c>
   1d8a0:	mov	r0, r1
   1d8a4:	str	r1, [r5, #40]	; 0x28
   1d8a8:	ldr	r5, [r5, #36]	; 0x24
   1d8ac:	ldr	r1, [r4]
   1d8b0:	add	r1, r1, r5
   1d8b4:	bl	11b20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1d8b8:	add	r0, r0, r5
   1d8bc:	b	1d8c4 <myhtml_data_process_end@@Base+0x158>
   1d8c0:	ldr	r0, [r5, #36]	; 0x24
   1d8c4:	str	r0, [r4, #8]
   1d8c8:	mov	r2, #0
   1d8cc:	ldr	r1, [r4]
   1d8d0:	strb	r2, [r1, r0]
   1d8d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d8d8:	ldrdeq	lr, [pc], -r0
   1d8dc:	andeq	pc, pc, r0, lsl r0	; <UNPREDICTABLE>
   1d8e0:	andeq	r4, lr, r0, ror #19
   1d8e4:	ldrdeq	lr, [pc], -ip

0001d8e8 <myhtml_init_marker@@Base>:
   1d8e8:	push	{r4, sl, fp, lr}
   1d8ec:	add	fp, sp, #8
   1d8f0:	mov	r4, r0
   1d8f4:	mov	r0, #44	; 0x2c
   1d8f8:	bl	119ac <mycore_malloc@plt>
   1d8fc:	cmp	r0, #0
   1d900:	str	r0, [r4, #36]	; 0x24
   1d904:	popeq	{r4, sl, fp, pc}
   1d908:	pop	{r4, sl, fp, lr}
   1d90c:	b	11ca0 <myhtml_tree_node_clean@plt>

0001d910 <myhtml_destroy_marker@@Base>:
   1d910:	ldr	r0, [r0, #36]	; 0x24
   1d914:	cmp	r0, #0
   1d918:	bxeq	lr
   1d91c:	b	11a9c <mycore_free@plt>

0001d920 <myhtml_stream_create@@Base>:
   1d920:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d924:	add	fp, sp, #24
   1d928:	mov	r4, r1
   1d92c:	mov	r5, r0
   1d930:	cmp	r2, #0
   1d934:	beq	1d998 <myhtml_stream_create@@Base+0x78>
   1d938:	mov	r8, r3
   1d93c:	mov	r7, r2
   1d940:	bl	10f50 <mythread_create@plt>
   1d944:	cmp	r0, #0
   1d948:	str	r0, [r5]
   1d94c:	mov	r2, r7
   1d950:	mov	r3, r8
   1d954:	mov	r6, #0
   1d958:	moveq	r1, #9
   1d95c:	streq	r1, [r4]
   1d960:	mov	r1, #0
   1d964:	bl	11cac <mythread_init@plt>
   1d968:	cmp	r0, #0
   1d96c:	str	r0, [r4]
   1d970:	beq	1d990 <myhtml_stream_create@@Base+0x70>
   1d974:	ldr	r0, [r5]
   1d978:	mov	r1, #0
   1d97c:	mov	r2, #0
   1d980:	mov	r3, #1
   1d984:	bl	117b4 <mythread_destroy@plt>
   1d988:	str	r0, [r5]
   1d98c:	ldr	r6, [r4]
   1d990:	mov	r0, r6
   1d994:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d998:	mov	r6, #0
   1d99c:	mov	r0, r6
   1d9a0:	str	r6, [r5]
   1d9a4:	str	r6, [r4]
   1d9a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001d9ac <myhtml_batch_create@@Base>:
   1d9ac:	push	{r4, r5, r6, r7, fp, lr}
   1d9b0:	add	fp, sp, #16
   1d9b4:	mov	r4, r1
   1d9b8:	mov	r5, r0
   1d9bc:	cmp	r2, #0
   1d9c0:	beq	1da44 <myhtml_batch_create@@Base+0x98>
   1d9c4:	mov	r6, r3
   1d9c8:	mov	r7, r2
   1d9cc:	bl	10f50 <mythread_create@plt>
   1d9d0:	str	r0, [r5, #4]
   1d9d4:	ldr	r1, [r5]
   1d9d8:	cmp	r1, #0
   1d9dc:	bne	1da04 <myhtml_batch_create@@Base+0x58>
   1d9e0:	mov	r0, #0
   1d9e4:	mov	r1, #0
   1d9e8:	mov	r2, #0
   1d9ec:	mov	r3, #1
   1d9f0:	bl	117b4 <mythread_destroy@plt>
   1d9f4:	str	r0, [r5]
   1d9f8:	mov	r0, #9
   1d9fc:	str	r0, [r4]
   1da00:	ldr	r0, [r5, #4]
   1da04:	mov	r1, #1
   1da08:	mov	r2, r7
   1da0c:	mov	r3, r6
   1da10:	bl	11cac <mythread_init@plt>
   1da14:	cmp	r0, #0
   1da18:	str	r0, [r4]
   1da1c:	moveq	r0, #0
   1da20:	popeq	{r4, r5, r6, r7, fp, pc}
   1da24:	ldr	r0, [r5, #4]
   1da28:	mov	r1, #0
   1da2c:	mov	r2, #0
   1da30:	mov	r3, #1
   1da34:	bl	117b4 <mythread_destroy@plt>
   1da38:	str	r0, [r5, #4]
   1da3c:	ldr	r0, [r4]
   1da40:	pop	{r4, r5, r6, r7, fp, pc}
   1da44:	mov	r0, #0
   1da48:	str	r0, [r5, #4]
   1da4c:	str	r0, [r4]
   1da50:	pop	{r4, r5, r6, r7, fp, pc}

0001da54 <myhtml_create_stream_and_batch@@Base>:
   1da54:	push	{r4, r5, r6, r7, fp, lr}
   1da58:	add	fp, sp, #16
   1da5c:	mov	r6, r2
   1da60:	mov	r5, r1
   1da64:	mov	r4, r0
   1da68:	cmp	r1, #0
   1da6c:	beq	1da98 <myhtml_create_stream_and_batch@@Base+0x44>
   1da70:	bl	10f50 <mythread_create@plt>
   1da74:	mov	r1, #0
   1da78:	mov	r2, r5
   1da7c:	mov	r3, #0
   1da80:	str	r0, [r4]
   1da84:	bl	11cac <mythread_init@plt>
   1da88:	cmp	r0, #0
   1da8c:	beq	1daa0 <myhtml_create_stream_and_batch@@Base+0x4c>
   1da90:	mov	r7, r0
   1da94:	b	1db14 <myhtml_create_stream_and_batch@@Base+0xc0>
   1da98:	mov	r0, #0
   1da9c:	str	r0, [r4]
   1daa0:	cmp	r6, #0
   1daa4:	beq	1db34 <myhtml_create_stream_and_batch@@Base+0xe0>
   1daa8:	bl	10f50 <mythread_create@plt>
   1daac:	str	r0, [r4, #4]
   1dab0:	ldr	r1, [r4]
   1dab4:	cmp	r1, #0
   1dab8:	bne	1dad8 <myhtml_create_stream_and_batch@@Base+0x84>
   1dabc:	mov	r0, #0
   1dac0:	mov	r1, #0
   1dac4:	mov	r2, #0
   1dac8:	mov	r3, #1
   1dacc:	bl	117b4 <mythread_destroy@plt>
   1dad0:	str	r0, [r4]
   1dad4:	ldr	r0, [r4, #4]
   1dad8:	mov	r1, #1
   1dadc:	mov	r2, r6
   1dae0:	mov	r3, r5
   1dae4:	bl	11cac <mythread_init@plt>
   1dae8:	cmp	r0, #0
   1daec:	moveq	r7, #0
   1daf0:	moveq	r0, r7
   1daf4:	popeq	{r4, r5, r6, r7, fp, pc}
   1daf8:	mov	r7, r0
   1dafc:	ldr	r0, [r4, #4]
   1db00:	mov	r1, #0
   1db04:	mov	r2, #0
   1db08:	mov	r3, #1
   1db0c:	bl	117b4 <mythread_destroy@plt>
   1db10:	str	r0, [r4, #4]
   1db14:	ldr	r0, [r4]
   1db18:	mov	r1, #0
   1db1c:	mov	r2, #0
   1db20:	mov	r3, #1
   1db24:	bl	117b4 <mythread_destroy@plt>
   1db28:	str	r0, [r4]
   1db2c:	mov	r0, r7
   1db30:	pop	{r4, r5, r6, r7, fp, pc}
   1db34:	mov	r7, #0
   1db38:	mov	r0, r7
   1db3c:	str	r7, [r4, #4]
   1db40:	pop	{r4, r5, r6, r7, fp, pc}

0001db44 <myhtml_create@@Base>:
   1db44:	mov	r0, #1
   1db48:	mov	r1, #40	; 0x28
   1db4c:	b	11004 <mycore_calloc@plt>

0001db50 <myhtml_init@@Base>:
   1db50:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1db54:	add	fp, sp, #24
   1db58:	sub	sp, sp, #8
   1db5c:	mov	r4, r0
   1db60:	str	r1, [r0, #32]
   1db64:	mov	r0, #44	; 0x2c
   1db68:	mov	r5, r2
   1db6c:	mov	r7, r1
   1db70:	bl	119ac <mycore_malloc@plt>
   1db74:	cmp	r0, #0
   1db78:	str	r0, [r4, #36]	; 0x24
   1db7c:	beq	1db84 <myhtml_init@@Base+0x34>
   1db80:	bl	11ca0 <myhtml_tree_node_clean@plt>
   1db84:	mov	r0, r4
   1db88:	bl	10e54 <myhtml_tokenizer_state_init@plt>
   1db8c:	mov	r6, r0
   1db90:	cmp	r0, #0
   1db94:	str	r0, [sp, #4]
   1db98:	bne	1dd50 <myhtml_init@@Base+0x200>
   1db9c:	mov	r0, r4
   1dba0:	bl	11934 <myhtml_rules_init@plt>
   1dba4:	mov	r6, r0
   1dba8:	cmp	r0, #0
   1dbac:	str	r0, [sp, #4]
   1dbb0:	bne	1dd50 <myhtml_init@@Base+0x200>
   1dbb4:	cmp	r5, #0
   1dbb8:	movweq	r5, #1
   1dbbc:	cmp	r7, #2
   1dbc0:	beq	1dbe4 <myhtml_init@@Base+0x94>
   1dbc4:	cmp	r7, #1
   1dbc8:	bne	1dc34 <myhtml_init@@Base+0xe4>
   1dbcc:	mov	r6, #0
   1dbd0:	mov	r0, #0
   1dbd4:	str	r6, [r4]
   1dbd8:	str	r6, [r4, #4]
   1dbdc:	str	r6, [sp, #4]
   1dbe0:	b	1dd3c <myhtml_init@@Base+0x1ec>
   1dbe4:	bl	10f50 <mythread_create@plt>
   1dbe8:	mov	r1, #0
   1dbec:	mov	r2, #1
   1dbf0:	mov	r3, #0
   1dbf4:	str	r0, [r4]
   1dbf8:	mov	r7, #0
   1dbfc:	bl	11cac <mythread_init@plt>
   1dc00:	cmp	r0, #0
   1dc04:	beq	1dcfc <myhtml_init@@Base+0x1ac>
   1dc08:	mov	r6, r0
   1dc0c:	ldr	r0, [r4]
   1dc10:	mov	r1, #0
   1dc14:	mov	r2, #0
   1dc18:	mov	r3, #1
   1dc1c:	bl	117b4 <mythread_destroy@plt>
   1dc20:	str	r0, [r4]
   1dc24:	str	r6, [sp, #4]
   1dc28:	mov	r0, r6
   1dc2c:	sub	sp, fp, #24
   1dc30:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1dc34:	cmp	r5, #2
   1dc38:	mov	r0, r4
   1dc3c:	mov	r1, #1
   1dc40:	movls	r5, #2
   1dc44:	sub	r2, r5, #1
   1dc48:	bl	1143c <myhtml_create_stream_and_batch@plt>
   1dc4c:	mov	r6, r0
   1dc50:	cmp	r0, #0
   1dc54:	str	r0, [sp, #4]
   1dc58:	bne	1dd50 <myhtml_init@@Base+0x200>
   1dc5c:	add	r0, sp, #4
   1dc60:	bl	11640 <mythread_queue_list_create@plt>
   1dc64:	ldr	r3, [r4]
   1dc68:	str	r0, [r3, #16]
   1dc6c:	ldr	r1, [r4, #4]
   1dc70:	str	r0, [r1, #16]
   1dc74:	mov	r0, r3
   1dc78:	mov	r3, #4
   1dc7c:	ldr	r1, [pc, #240]	; 1dd74 <myhtml_init@@Base+0x224>
   1dc80:	ldr	r1, [pc, r1]
   1dc84:	ldr	r2, [pc, #236]	; 1dd78 <myhtml_init@@Base+0x228>
   1dc88:	ldr	r2, [pc, r2]
   1dc8c:	bl	116dc <myhread_entry_create@plt>
   1dc90:	mov	r6, r0
   1dc94:	cmp	r0, #0
   1dc98:	str	r0, [sp, #4]
   1dc9c:	bne	1dd50 <myhtml_init@@Base+0x200>
   1dca0:	ldr	r0, [r4, #4]
   1dca4:	ldr	r1, [r0, #8]
   1dca8:	cmp	r1, #0
   1dcac:	beq	1dcf4 <myhtml_init@@Base+0x1a4>
   1dcb0:	ldr	r8, [pc, #196]	; 1dd7c <myhtml_init@@Base+0x22c>
   1dcb4:	mov	r7, #0
   1dcb8:	ldr	r8, [pc, r8]
   1dcbc:	ldr	r9, [pc, #188]	; 1dd80 <myhtml_init@@Base+0x230>
   1dcc0:	ldr	r9, [pc, r9]
   1dcc4:	mov	r1, r8
   1dcc8:	mov	r2, r9
   1dccc:	mov	r3, #4
   1dcd0:	bl	116dc <myhread_entry_create@plt>
   1dcd4:	cmp	r0, #0
   1dcd8:	str	r0, [sp, #4]
   1dcdc:	bne	1dd5c <myhtml_init@@Base+0x20c>
   1dce0:	ldr	r0, [r4, #4]
   1dce4:	add	r7, r7, #1
   1dce8:	ldr	r1, [r0, #8]
   1dcec:	cmp	r7, r1
   1dcf0:	bcc	1dcc4 <myhtml_init@@Base+0x174>
   1dcf4:	mov	r6, #0
   1dcf8:	b	1dd3c <myhtml_init@@Base+0x1ec>
   1dcfc:	add	r0, sp, #4
   1dd00:	str	r7, [r4, #4]
   1dd04:	str	r7, [sp, #4]
   1dd08:	bl	11640 <mythread_queue_list_create@plt>
   1dd0c:	ldr	r3, [r4]
   1dd10:	str	r0, [r3, #16]
   1dd14:	mov	r0, r3
   1dd18:	mov	r3, #4
   1dd1c:	ldr	r1, [pc, #72]	; 1dd6c <myhtml_init@@Base+0x21c>
   1dd20:	ldr	r1, [pc, r1]
   1dd24:	ldr	r2, [pc, #68]	; 1dd70 <myhtml_init@@Base+0x220>
   1dd28:	ldr	r2, [pc, r2]
   1dd2c:	bl	116dc <myhread_entry_create@plt>
   1dd30:	str	r0, [sp, #4]
   1dd34:	mov	r6, r0
   1dd38:	ldr	r0, [r4, #4]
   1dd3c:	ldr	r2, [r4]
   1dd40:	mov	r1, #0
   1dd44:	str	r2, [r4, #8]
   1dd48:	add	r2, r4, #12
   1dd4c:	stm	r2, {r0, r1, r5}
   1dd50:	mov	r0, r6
   1dd54:	sub	sp, fp, #24
   1dd58:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1dd5c:	mov	r6, r0
   1dd60:	mov	r0, r6
   1dd64:	sub	sp, fp, #24
   1dd68:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1dd6c:	andeq	lr, pc, r8, lsr #16
   1dd70:	andeq	lr, pc, ip, lsr #16
   1dd74:	andeq	lr, pc, r8, asr #17
   1dd78:	andeq	lr, pc, r8, asr #22
   1dd7c:	andeq	lr, pc, r4, lsl #17
   1dd80:	muleq	pc, ip, r8	; <UNPREDICTABLE>

0001dd84 <myhtml_clean@@Base>:
   1dd84:	bx	lr

0001dd88 <myhtml_destroy@@Base>:
   1dd88:	cmp	r0, #0
   1dd8c:	beq	1de40 <myhtml_destroy@@Base+0xb8>
   1dd90:	push	{r4, r5, fp, lr}
   1dd94:	add	fp, sp, #8
   1dd98:	mov	r4, r0
   1dd9c:	ldr	r0, [r0, #36]	; 0x24
   1dda0:	cmp	r0, #0
   1dda4:	beq	1ddac <myhtml_destroy@@Base+0x24>
   1dda8:	bl	11a9c <mycore_free@plt>
   1ddac:	ldr	r0, [r4]
   1ddb0:	cmp	r0, #0
   1ddb4:	beq	1de1c <myhtml_destroy@@Base+0x94>
   1ddb8:	ldr	r5, [r0, #16]
   1ddbc:	cmp	r5, #0
   1ddc0:	beq	1ddd0 <myhtml_destroy@@Base+0x48>
   1ddc4:	mov	r1, r5
   1ddc8:	bl	11aa8 <mythread_queue_list_wait_for_done@plt>
   1ddcc:	ldr	r0, [r4]
   1ddd0:	ldr	r1, [pc, #112]	; 1de48 <myhtml_destroy@@Base+0xc0>
   1ddd4:	mov	r2, #0
   1ddd8:	mov	r3, #1
   1dddc:	ldr	r1, [pc, r1]
   1dde0:	bl	117b4 <mythread_destroy@plt>
   1dde4:	str	r0, [r4]
   1dde8:	ldr	r0, [r4, #4]
   1ddec:	cmp	r0, #0
   1ddf0:	beq	1de0c <myhtml_destroy@@Base+0x84>
   1ddf4:	ldr	r1, [pc, #80]	; 1de4c <myhtml_destroy@@Base+0xc4>
   1ddf8:	mov	r2, #0
   1ddfc:	mov	r3, #1
   1de00:	ldr	r1, [pc, r1]
   1de04:	bl	117b4 <mythread_destroy@plt>
   1de08:	str	r0, [r4, #4]
   1de0c:	cmp	r5, #0
   1de10:	beq	1de1c <myhtml_destroy@@Base+0x94>
   1de14:	mov	r0, r5
   1de18:	bl	1119c <mythread_queue_list_destroy@plt>
   1de1c:	mov	r0, r4
   1de20:	bl	11184 <myhtml_tokenizer_state_destroy@plt>
   1de24:	ldr	r0, [r4, #28]
   1de28:	cmp	r0, #0
   1de2c:	beq	1de34 <myhtml_destroy@@Base+0xac>
   1de30:	bl	11a9c <mycore_free@plt>
   1de34:	mov	r0, r4
   1de38:	bl	11a9c <mycore_free@plt>
   1de3c:	pop	{r4, r5, fp, lr}
   1de40:	mov	r0, #0
   1de44:	bx	lr
   1de48:	muleq	pc, r4, r8	; <UNPREDICTABLE>
   1de4c:	andeq	lr, pc, r0, ror r8	; <UNPREDICTABLE>

0001de50 <myhtml_parse@@Base>:
   1de50:	push	{r4, r5, r6, r7, fp, lr}
   1de54:	add	fp, sp, #16
   1de58:	mov	r4, r0
   1de5c:	ldr	r0, [r0, #180]	; 0xb4
   1de60:	mov	r5, r3
   1de64:	mov	r6, r2
   1de68:	mov	r7, r1
   1de6c:	tst	r0, #32
   1de70:	beq	1de7c <myhtml_parse@@Base+0x2c>
   1de74:	mov	r0, r4
   1de78:	bl	11598 <myhtml_tree_clean@plt>
   1de7c:	cmp	r7, #41	; 0x29
   1de80:	mov	r0, r4
   1de84:	mov	r1, r6
   1de88:	mov	r2, r5
   1de8c:	strls	r7, [r4, #200]	; 0xc8
   1de90:	strls	r7, [r4, #204]	; 0xcc
   1de94:	bl	111b4 <myhtml_tokenizer_begin@plt>
   1de98:	cmp	r0, #0
   1de9c:	popne	{r4, r5, r6, r7, fp, pc}
   1dea0:	mov	r0, r4
   1dea4:	pop	{r4, r5, r6, r7, fp, lr}
   1dea8:	b	11274 <myhtml_tokenizer_end@plt>

0001deac <myhtml_encoding_set@@Base>:
   1deac:	cmp	r1, #41	; 0x29
   1deb0:	strls	r1, [r0, #200]	; 0xc8
   1deb4:	strls	r1, [r0, #204]	; 0xcc
   1deb8:	bx	lr

0001debc <myhtml_parse_fragment@@Base>:
   1debc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1dec0:	add	fp, sp, #24
   1dec4:	mov	r4, r0
   1dec8:	ldr	r0, [r0, #180]	; 0xb4
   1decc:	ldr	r5, [fp, #12]
   1ded0:	ldr	r6, [fp, #8]
   1ded4:	mov	r8, r3
   1ded8:	mov	r9, r2
   1dedc:	mov	r7, r1
   1dee0:	tst	r0, #32
   1dee4:	beq	1def0 <myhtml_parse_fragment@@Base+0x34>
   1dee8:	mov	r0, r4
   1deec:	bl	11598 <myhtml_tree_clean@plt>
   1def0:	cmp	r6, #0
   1def4:	mov	r0, r4
   1def8:	movweq	r6, #42	; 0x2a
   1defc:	cmp	r5, #0
   1df00:	movweq	r5, #1
   1df04:	mov	r1, r6
   1df08:	mov	r2, r5
   1df0c:	bl	10e30 <myhtml_tokenizer_fragment_init@plt>
   1df10:	cmp	r0, #0
   1df14:	beq	1df48 <myhtml_parse_fragment@@Base+0x8c>
   1df18:	cmp	r7, #41	; 0x29
   1df1c:	mov	r0, r4
   1df20:	mov	r1, r9
   1df24:	mov	r2, r8
   1df28:	strls	r7, [r4, #200]	; 0xc8
   1df2c:	strls	r7, [r4, #204]	; 0xcc
   1df30:	bl	111b4 <myhtml_tokenizer_begin@plt>
   1df34:	cmp	r0, #0
   1df38:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   1df3c:	mov	r0, r4
   1df40:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   1df44:	b	11274 <myhtml_tokenizer_end@plt>
   1df48:	movw	r0, #37165	; 0x912d
   1df4c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001df50 <myhtml_parse_single@@Base>:
   1df50:	push	{r4, r5, r6, r7, fp, lr}
   1df54:	add	fp, sp, #16
   1df58:	mov	r4, r0
   1df5c:	ldr	r0, [r0, #180]	; 0xb4
   1df60:	mov	r5, r3
   1df64:	mov	r6, r2
   1df68:	mov	r7, r1
   1df6c:	tst	r0, #32
   1df70:	beq	1df7c <myhtml_parse_single@@Base+0x2c>
   1df74:	mov	r0, r4
   1df78:	bl	11598 <myhtml_tree_clean@plt>
   1df7c:	ldr	r0, [r4, #180]	; 0xb4
   1df80:	cmp	r7, #41	; 0x29
   1df84:	mov	r1, r6
   1df88:	mov	r2, r5
   1df8c:	orr	r0, r0, #16
   1df90:	str	r0, [r4, #180]	; 0xb4
   1df94:	mov	r0, r4
   1df98:	strls	r7, [r4, #200]	; 0xc8
   1df9c:	strls	r7, [r4, #204]	; 0xcc
   1dfa0:	bl	111b4 <myhtml_tokenizer_begin@plt>
   1dfa4:	cmp	r0, #0
   1dfa8:	popne	{r4, r5, r6, r7, fp, pc}
   1dfac:	mov	r0, r4
   1dfb0:	pop	{r4, r5, r6, r7, fp, lr}
   1dfb4:	b	11274 <myhtml_tokenizer_end@plt>

0001dfb8 <myhtml_parse_fragment_single@@Base>:
   1dfb8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1dfbc:	add	fp, sp, #24
   1dfc0:	mov	r4, r0
   1dfc4:	ldr	r0, [r0, #180]	; 0xb4
   1dfc8:	ldr	r5, [fp, #12]
   1dfcc:	ldr	r6, [fp, #8]
   1dfd0:	mov	r8, r3
   1dfd4:	mov	r9, r2
   1dfd8:	mov	r7, r1
   1dfdc:	tst	r0, #32
   1dfe0:	beq	1dfec <myhtml_parse_fragment_single@@Base+0x34>
   1dfe4:	mov	r0, r4
   1dfe8:	bl	11598 <myhtml_tree_clean@plt>
   1dfec:	ldr	r0, [r4, #180]	; 0xb4
   1dff0:	cmp	r6, #0
   1dff4:	movweq	r6, #42	; 0x2a
   1dff8:	cmp	r5, #0
   1dffc:	movweq	r5, #1
   1e000:	mov	r1, r6
   1e004:	mov	r2, r5
   1e008:	orr	r0, r0, #16
   1e00c:	str	r0, [r4, #180]	; 0xb4
   1e010:	mov	r0, r4
   1e014:	bl	10e30 <myhtml_tokenizer_fragment_init@plt>
   1e018:	cmp	r0, #0
   1e01c:	beq	1e050 <myhtml_parse_fragment_single@@Base+0x98>
   1e020:	cmp	r7, #41	; 0x29
   1e024:	mov	r0, r4
   1e028:	mov	r1, r9
   1e02c:	mov	r2, r8
   1e030:	strls	r7, [r4, #200]	; 0xc8
   1e034:	strls	r7, [r4, #204]	; 0xcc
   1e038:	bl	111b4 <myhtml_tokenizer_begin@plt>
   1e03c:	cmp	r0, #0
   1e040:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e044:	mov	r0, r4
   1e048:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e04c:	b	11274 <myhtml_tokenizer_end@plt>
   1e050:	movw	r0, #37165	; 0x912d
   1e054:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001e058 <myhtml_parse_chunk@@Base>:
   1e058:	push	{r4, r5, r6, sl, fp, lr}
   1e05c:	add	fp, sp, #16
   1e060:	mov	r6, r0
   1e064:	ldr	r0, [r0, #180]	; 0xb4
   1e068:	mov	r4, r2
   1e06c:	mov	r5, r1
   1e070:	tst	r0, #32
   1e074:	beq	1e080 <myhtml_parse_chunk@@Base+0x28>
   1e078:	mov	r0, r6
   1e07c:	bl	11598 <myhtml_tree_clean@plt>
   1e080:	mov	r0, r6
   1e084:	mov	r1, r5
   1e088:	mov	r2, r4
   1e08c:	pop	{r4, r5, r6, sl, fp, lr}
   1e090:	b	11160 <myhtml_tokenizer_chunk@plt>

0001e094 <myhtml_parse_chunk_fragment@@Base>:
   1e094:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1e098:	add	fp, sp, #24
   1e09c:	mov	r6, r0
   1e0a0:	ldr	r0, [r0, #180]	; 0xb4
   1e0a4:	ldr	r4, [fp, #8]
   1e0a8:	mov	r7, r3
   1e0ac:	mov	r8, r2
   1e0b0:	mov	r5, r1
   1e0b4:	tst	r0, #32
   1e0b8:	beq	1e0c4 <myhtml_parse_chunk_fragment@@Base+0x30>
   1e0bc:	mov	r0, r6
   1e0c0:	bl	11598 <myhtml_tree_clean@plt>
   1e0c4:	cmp	r7, #0
   1e0c8:	mov	r0, r6
   1e0cc:	movweq	r7, #42	; 0x2a
   1e0d0:	cmp	r4, #0
   1e0d4:	movweq	r4, #1
   1e0d8:	mov	r1, r7
   1e0dc:	mov	r2, r4
   1e0e0:	bl	10e30 <myhtml_tokenizer_fragment_init@plt>
   1e0e4:	cmp	r0, #0
   1e0e8:	movweq	r0, #37165	; 0x912d
   1e0ec:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   1e0f0:	mov	r0, r6
   1e0f4:	mov	r1, r5
   1e0f8:	mov	r2, r8
   1e0fc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1e100:	b	11160 <myhtml_tokenizer_chunk@plt>

0001e104 <myhtml_parse_chunk_single@@Base>:
   1e104:	push	{r4, r5, r6, sl, fp, lr}
   1e108:	add	fp, sp, #16
   1e10c:	mov	r6, r0
   1e110:	ldr	r0, [r0, #180]	; 0xb4
   1e114:	mov	r4, r2
   1e118:	mov	r5, r1
   1e11c:	tst	r0, #16
   1e120:	ldreq	r0, [r6, #180]	; 0xb4
   1e124:	orreq	r0, r0, #16
   1e128:	streq	r0, [r6, #180]	; 0xb4
   1e12c:	ldr	r0, [r6, #180]	; 0xb4
   1e130:	tst	r0, #32
   1e134:	beq	1e140 <myhtml_parse_chunk_single@@Base+0x3c>
   1e138:	mov	r0, r6
   1e13c:	bl	11598 <myhtml_tree_clean@plt>
   1e140:	mov	r0, r6
   1e144:	mov	r1, r5
   1e148:	mov	r2, r4
   1e14c:	pop	{r4, r5, r6, sl, fp, lr}
   1e150:	b	11160 <myhtml_tokenizer_chunk@plt>

0001e154 <myhtml_parse_chunk_fragment_single@@Base>:
   1e154:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1e158:	add	fp, sp, #24
   1e15c:	mov	r6, r0
   1e160:	ldr	r0, [r0, #180]	; 0xb4
   1e164:	ldr	r4, [fp, #8]
   1e168:	mov	r7, r3
   1e16c:	mov	r8, r2
   1e170:	mov	r5, r1
   1e174:	tst	r0, #16
   1e178:	ldreq	r0, [r6, #180]	; 0xb4
   1e17c:	orreq	r0, r0, #16
   1e180:	streq	r0, [r6, #180]	; 0xb4
   1e184:	ldr	r0, [r6, #180]	; 0xb4
   1e188:	tst	r0, #32
   1e18c:	beq	1e198 <myhtml_parse_chunk_fragment_single@@Base+0x44>
   1e190:	mov	r0, r6
   1e194:	bl	11598 <myhtml_tree_clean@plt>
   1e198:	cmp	r7, #0
   1e19c:	mov	r0, r6
   1e1a0:	movweq	r7, #42	; 0x2a
   1e1a4:	cmp	r4, #0
   1e1a8:	movweq	r4, #1
   1e1ac:	mov	r1, r7
   1e1b0:	mov	r2, r4
   1e1b4:	bl	10e30 <myhtml_tokenizer_fragment_init@plt>
   1e1b8:	cmp	r0, #0
   1e1bc:	movweq	r0, #37165	; 0x912d
   1e1c0:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   1e1c4:	mov	r0, r6
   1e1c8:	mov	r1, r5
   1e1cc:	mov	r2, r8
   1e1d0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1e1d4:	b	11160 <myhtml_tokenizer_chunk@plt>

0001e1d8 <myhtml_parse_chunk_end@@Base>:
   1e1d8:	b	11274 <myhtml_tokenizer_end@plt>

0001e1dc <myhtml_encoding_get@@Base>:
   1e1dc:	ldr	r0, [r0, #200]	; 0xc8
   1e1e0:	bx	lr

0001e1e4 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base>:
   1e1e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e1e8:	add	fp, sp, #28
   1e1ec:	sub	sp, sp, #4
   1e1f0:	mov	r8, #0
   1e1f4:	cmp	r0, #0
   1e1f8:	beq	1e298 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0xb4>
   1e1fc:	mov	r5, r2
   1e200:	mov	r6, r1
   1e204:	mov	r7, r0
   1e208:	movw	sl, #1025	; 0x401
   1e20c:	movw	r9, #1026	; 0x402
   1e210:	b	1e240 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x5c>
   1e214:	add	r4, r0, r9
   1e218:	ldr	r0, [r6]
   1e21c:	lsl	r1, r4, #2
   1e220:	bl	10da0 <mycore_realloc@plt>
   1e224:	cmp	r0, #0
   1e228:	beq	1e2a4 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0xc0>
   1e22c:	stm	r6, {r0, r4}
   1e230:	ldr	r0, [r7, #20]
   1e234:	cmp	r0, #0
   1e238:	bne	1e280 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x9c>
   1e23c:	b	1e28c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0xa8>
   1e240:	ldr	r0, [r7, #4]
   1e244:	cmp	r0, r5
   1e248:	bne	1e274 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x90>
   1e24c:	ldr	r0, [r6, #8]
   1e250:	ldr	r1, [r6]
   1e254:	add	r2, r0, #1
   1e258:	str	r7, [r1, r0, lsl #2]
   1e25c:	str	r2, [r6, #8]
   1e260:	ldr	r1, [r6, #4]
   1e264:	cmp	r2, r1
   1e268:	addcs	r2, r0, sl
   1e26c:	cmpcs	r2, r1
   1e270:	bcs	1e214 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x30>
   1e274:	ldr	r0, [r7, #20]
   1e278:	cmp	r0, #0
   1e27c:	beq	1e28c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0xa8>
   1e280:	mov	r1, r6
   1e284:	mov	r2, r5
   1e288:	bl	11964 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>
   1e28c:	ldr	r7, [r7, #16]
   1e290:	cmp	r7, #0
   1e294:	bne	1e240 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x5c>
   1e298:	mov	r0, r8
   1e29c:	sub	sp, fp, #28
   1e2a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e2a4:	mov	r8, #2
   1e2a8:	mov	r0, r8
   1e2ac:	sub	sp, fp, #28
   1e2b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001e2b4 <myhtml_collection_check_size@@Base>:
   1e2b4:	push	{r4, r5, r6, sl, fp, lr}
   1e2b8:	add	fp, sp, #16
   1e2bc:	mov	r5, r0
   1e2c0:	ldr	r3, [r0, #4]
   1e2c4:	ldr	r0, [r0, #8]
   1e2c8:	mov	r4, #0
   1e2cc:	add	r0, r0, r1
   1e2d0:	cmp	r0, r3
   1e2d4:	bcc	1e300 <myhtml_collection_check_size@@Base+0x4c>
   1e2d8:	add	r0, r2, r0
   1e2dc:	add	r6, r0, #1
   1e2e0:	ldr	r0, [r5]
   1e2e4:	lsl	r1, r6, #2
   1e2e8:	bl	10da0 <mycore_realloc@plt>
   1e2ec:	cmp	r0, #0
   1e2f0:	moveq	r4, #2
   1e2f4:	moveq	r0, r4
   1e2f8:	popeq	{r4, r5, r6, sl, fp, pc}
   1e2fc:	stm	r5, {r0, r6}
   1e300:	mov	r0, r4
   1e304:	pop	{r4, r5, r6, sl, fp, pc}

0001e308 <myhtml_get_nodes_by_tag_id_in_scope@@Base>:
   1e308:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1e30c:	add	fp, sp, #24
   1e310:	mov	r5, #0
   1e314:	cmp	r2, #0
   1e318:	beq	1e370 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x68>
   1e31c:	ldr	r8, [fp, #8]
   1e320:	mov	r6, r3
   1e324:	mov	r7, r2
   1e328:	mov	r4, r1
   1e32c:	cmp	r1, #0
   1e330:	beq	1e378 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x70>
   1e334:	ldr	r1, [r7, #20]
   1e338:	mov	r5, #0
   1e33c:	mov	r0, #0
   1e340:	cmp	r1, #0
   1e344:	beq	1e358 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x50>
   1e348:	mov	r0, r1
   1e34c:	mov	r1, r4
   1e350:	mov	r2, r6
   1e354:	bl	11964 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>
   1e358:	ldr	r1, [r4]
   1e35c:	ldr	r2, [r4, #8]
   1e360:	cmp	r8, #0
   1e364:	str	r5, [r1, r2, lsl #2]
   1e368:	mov	r5, r4
   1e36c:	strne	r0, [r8]
   1e370:	mov	r0, r5
   1e374:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1e378:	mov	r0, #12
   1e37c:	bl	119ac <mycore_malloc@plt>
   1e380:	cmp	r0, #0
   1e384:	beq	1e3b8 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0xb0>
   1e388:	mov	r4, r0
   1e38c:	mov	r1, #1024	; 0x400
   1e390:	mov	r0, #0
   1e394:	str	r1, [r4, #4]
   1e398:	str	r0, [r4, #8]
   1e39c:	mov	r0, #4096	; 0x1000
   1e3a0:	bl	119ac <mycore_malloc@plt>
   1e3a4:	cmp	r0, #0
   1e3a8:	str	r0, [r4]
   1e3ac:	bne	1e334 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x2c>
   1e3b0:	mov	r0, r4
   1e3b4:	bl	11a9c <mycore_free@plt>
   1e3b8:	cmp	r8, #0
   1e3bc:	movne	r0, #2
   1e3c0:	strne	r0, [r8]
   1e3c4:	movne	r0, r5
   1e3c8:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   1e3cc:	mov	r0, r5
   1e3d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001e3d4 <myhtml_collection_create@@Base>:
   1e3d4:	push	{r4, r5, r6, r7, fp, lr}
   1e3d8:	add	fp, sp, #16
   1e3dc:	mov	r7, r0
   1e3e0:	mov	r0, #12
   1e3e4:	mov	r4, r1
   1e3e8:	bl	119ac <mycore_malloc@plt>
   1e3ec:	cmp	r0, #0
   1e3f0:	beq	1e430 <myhtml_collection_create@@Base+0x5c>
   1e3f4:	mov	r5, #0
   1e3f8:	str	r7, [r0, #4]
   1e3fc:	mov	r6, r0
   1e400:	str	r5, [r0, #8]
   1e404:	lsl	r0, r7, #2
   1e408:	bl	119ac <mycore_malloc@plt>
   1e40c:	cmp	r0, #0
   1e410:	str	r0, [r6]
   1e414:	beq	1e438 <myhtml_collection_create@@Base+0x64>
   1e418:	cmp	r4, #0
   1e41c:	mov	r5, r6
   1e420:	movne	r0, #0
   1e424:	strne	r0, [r4]
   1e428:	mov	r0, r5
   1e42c:	pop	{r4, r5, r6, r7, fp, pc}
   1e430:	mov	r5, #0
   1e434:	b	1e440 <myhtml_collection_create@@Base+0x6c>
   1e438:	mov	r0, r6
   1e43c:	bl	11a9c <mycore_free@plt>
   1e440:	cmp	r4, #0
   1e444:	movne	r0, #2
   1e448:	strne	r0, [r4]
   1e44c:	movne	r0, r5
   1e450:	popne	{r4, r5, r6, r7, fp, pc}
   1e454:	mov	r0, r5
   1e458:	pop	{r4, r5, r6, r7, fp, pc}

0001e45c <myhtml_get_nodes_by_name_in_scope@@Base>:
   1e45c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1e460:	add	fp, sp, #24
   1e464:	mov	r6, r2
   1e468:	ldr	r0, [r0, #28]
   1e46c:	ldr	r2, [fp, #8]
   1e470:	mov	r4, r1
   1e474:	mov	r1, r3
   1e478:	bl	118ec <myhtml_tag_get_by_name@plt>
   1e47c:	cmp	r0, #0
   1e480:	mov	r5, #0
   1e484:	cmpne	r6, #0
   1e488:	bne	1e494 <myhtml_get_nodes_by_name_in_scope@@Base+0x38>
   1e48c:	mov	r0, r5
   1e490:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1e494:	ldr	r8, [fp, #12]
   1e498:	ldr	r7, [r0]
   1e49c:	cmp	r4, #0
   1e4a0:	beq	1e4e8 <myhtml_get_nodes_by_name_in_scope@@Base+0x8c>
   1e4a4:	ldr	r1, [r6, #20]
   1e4a8:	mov	r5, #0
   1e4ac:	mov	r0, #0
   1e4b0:	cmp	r1, #0
   1e4b4:	beq	1e4c8 <myhtml_get_nodes_by_name_in_scope@@Base+0x6c>
   1e4b8:	mov	r0, r1
   1e4bc:	mov	r1, r4
   1e4c0:	mov	r2, r7
   1e4c4:	bl	11964 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>
   1e4c8:	ldr	r1, [r4]
   1e4cc:	ldr	r2, [r4, #8]
   1e4d0:	cmp	r8, #0
   1e4d4:	str	r5, [r1, r2, lsl #2]
   1e4d8:	mov	r5, r4
   1e4dc:	strne	r0, [r8]
   1e4e0:	mov	r0, r5
   1e4e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1e4e8:	mov	r0, #12
   1e4ec:	bl	119ac <mycore_malloc@plt>
   1e4f0:	cmp	r0, #0
   1e4f4:	beq	1e528 <myhtml_get_nodes_by_name_in_scope@@Base+0xcc>
   1e4f8:	mov	r4, r0
   1e4fc:	mov	r1, #1024	; 0x400
   1e500:	mov	r0, #0
   1e504:	str	r1, [r4, #4]
   1e508:	str	r0, [r4, #8]
   1e50c:	mov	r0, #4096	; 0x1000
   1e510:	bl	119ac <mycore_malloc@plt>
   1e514:	cmp	r0, #0
   1e518:	str	r0, [r4]
   1e51c:	bne	1e4a4 <myhtml_get_nodes_by_name_in_scope@@Base+0x48>
   1e520:	mov	r0, r4
   1e524:	bl	11a9c <mycore_free@plt>
   1e528:	cmp	r8, #0
   1e52c:	movne	r0, #2
   1e530:	strne	r0, [r8]
   1e534:	movne	r0, r5
   1e538:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   1e53c:	mov	r0, r5
   1e540:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001e544 <myhtml_get_nodes_by_tag_id@@Base>:
   1e544:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e548:	add	fp, sp, #28
   1e54c:	sub	sp, sp, #4
   1e550:	mov	r9, r3
   1e554:	mov	r6, r2
   1e558:	mov	r4, r1
   1e55c:	mov	sl, r0
   1e560:	cmp	r1, #0
   1e564:	beq	1e618 <myhtml_get_nodes_by_tag_id@@Base+0xd4>
   1e568:	ldr	r1, [sl, #96]	; 0x60
   1e56c:	cmp	r1, #0
   1e570:	beq	1e600 <myhtml_get_nodes_by_tag_id@@Base+0xbc>
   1e574:	movw	r8, #1026	; 0x402
   1e578:	b	1e594 <myhtml_get_nodes_by_tag_id@@Base+0x50>
   1e57c:	ldr	r5, [r5, #24]
   1e580:	cmp	r5, r0
   1e584:	beq	1e600 <myhtml_get_nodes_by_tag_id@@Base+0xbc>
   1e588:	ldr	r1, [r5, #16]
   1e58c:	cmp	r1, #0
   1e590:	beq	1e57c <myhtml_get_nodes_by_tag_id@@Base+0x38>
   1e594:	ldr	r0, [r1, #4]
   1e598:	mov	r5, r1
   1e59c:	cmp	r0, r6
   1e5a0:	bne	1e5e8 <myhtml_get_nodes_by_tag_id@@Base+0xa4>
   1e5a4:	ldmib	r4, {r0, r1}
   1e5a8:	add	r2, r1, #1
   1e5ac:	cmp	r2, r0
   1e5b0:	bcs	1e5bc <myhtml_get_nodes_by_tag_id@@Base+0x78>
   1e5b4:	ldr	r0, [r4]
   1e5b8:	b	1e5e0 <myhtml_get_nodes_by_tag_id@@Base+0x9c>
   1e5bc:	ldr	r0, [r4]
   1e5c0:	add	r7, r1, r8
   1e5c4:	lsl	r1, r7, #2
   1e5c8:	bl	10da0 <mycore_realloc@plt>
   1e5cc:	cmp	r0, #0
   1e5d0:	beq	1e6a0 <myhtml_get_nodes_by_tag_id@@Base+0x15c>
   1e5d4:	stm	r4, {r0, r7}
   1e5d8:	ldr	r1, [r4, #8]
   1e5dc:	add	r2, r1, #1
   1e5e0:	str	r5, [r0, r1, lsl #2]
   1e5e4:	str	r2, [r4, #8]
   1e5e8:	ldr	r1, [r5, #20]
   1e5ec:	cmp	r1, #0
   1e5f0:	bne	1e594 <myhtml_get_nodes_by_tag_id@@Base+0x50>
   1e5f4:	ldr	r0, [sl, #96]	; 0x60
   1e5f8:	cmp	r5, r0
   1e5fc:	bne	1e588 <myhtml_get_nodes_by_tag_id@@Base+0x44>
   1e600:	ldmib	r4, {r0, r1}
   1e604:	add	r2, r1, #1
   1e608:	cmp	r2, r0
   1e60c:	bcs	1e668 <myhtml_get_nodes_by_tag_id@@Base+0x124>
   1e610:	ldr	r0, [r4]
   1e614:	b	1e68c <myhtml_get_nodes_by_tag_id@@Base+0x148>
   1e618:	mov	r0, #12
   1e61c:	bl	119ac <mycore_malloc@plt>
   1e620:	cmp	r0, #0
   1e624:	beq	1e6b8 <myhtml_get_nodes_by_tag_id@@Base+0x174>
   1e628:	mov	r4, r0
   1e62c:	mov	r1, #1024	; 0x400
   1e630:	mov	r0, #0
   1e634:	str	r1, [r4, #4]
   1e638:	str	r0, [r4, #8]
   1e63c:	mov	r0, #4096	; 0x1000
   1e640:	bl	119ac <mycore_malloc@plt>
   1e644:	cmp	r0, #0
   1e648:	str	r0, [r4]
   1e64c:	bne	1e568 <myhtml_get_nodes_by_tag_id@@Base+0x24>
   1e650:	mov	r0, r4
   1e654:	bl	11a9c <mycore_free@plt>
   1e658:	mov	r4, #0
   1e65c:	mov	r0, r4
   1e660:	sub	sp, fp, #28
   1e664:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e668:	movw	r0, #1026	; 0x402
   1e66c:	add	r5, r1, r0
   1e670:	ldr	r0, [r4]
   1e674:	lsl	r1, r5, #2
   1e678:	bl	10da0 <mycore_realloc@plt>
   1e67c:	cmp	r0, #0
   1e680:	beq	1e6a0 <myhtml_get_nodes_by_tag_id@@Base+0x15c>
   1e684:	stm	r4, {r0, r5}
   1e688:	ldr	r1, [r4, #8]
   1e68c:	mov	r2, #0
   1e690:	str	r2, [r0, r1, lsl #2]
   1e694:	mov	r0, r4
   1e698:	sub	sp, fp, #28
   1e69c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e6a0:	cmp	r9, #0
   1e6a4:	movne	r0, #2
   1e6a8:	strne	r0, [r9]
   1e6ac:	mov	r0, r4
   1e6b0:	sub	sp, fp, #28
   1e6b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e6b8:	mov	r4, #0
   1e6bc:	mov	r0, r4
   1e6c0:	sub	sp, fp, #28
   1e6c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001e6c8 <myhtml_get_nodes_by_name@@Base>:
   1e6c8:	push	{r4, r5, fp, lr}
   1e6cc:	add	fp, sp, #8
   1e6d0:	mov	r5, r0
   1e6d4:	ldr	r0, [r0, #28]
   1e6d8:	mov	r4, r1
   1e6dc:	mov	r1, r2
   1e6e0:	mov	r2, r3
   1e6e4:	bl	118ec <myhtml_tag_get_by_name@plt>
   1e6e8:	cmp	r0, #0
   1e6ec:	moveq	r0, #0
   1e6f0:	popeq	{r4, r5, fp, pc}
   1e6f4:	ldr	r2, [r0]
   1e6f8:	ldr	r3, [fp, #8]
   1e6fc:	mov	r0, r5
   1e700:	mov	r1, r4
   1e704:	pop	{r4, r5, fp, lr}
   1e708:	b	1e544 <myhtml_get_nodes_by_tag_id@@Base>

0001e70c <myhtml_node_first@@Base>:
   1e70c:	ldr	r1, [r0, #84]	; 0x54
   1e710:	ldr	r0, [r0, #88]	; 0x58
   1e714:	cmp	r0, #0
   1e718:	beq	1e734 <myhtml_node_first@@Base+0x28>
   1e71c:	cmp	r1, #0
   1e720:	mov	r0, #0
   1e724:	ldrne	r1, [r1, #20]
   1e728:	cmpne	r1, #0
   1e72c:	bne	1e73c <myhtml_node_first@@Base+0x30>
   1e730:	bx	lr
   1e734:	cmp	r1, #0
   1e738:	beq	1e744 <myhtml_node_first@@Base+0x38>
   1e73c:	ldr	r0, [r1, #20]
   1e740:	bx	lr
   1e744:	mov	r0, #0
   1e748:	bx	lr

0001e74c <myhtml_node_next@@Base>:
   1e74c:	ldr	r0, [r0, #16]
   1e750:	bx	lr

0001e754 <myhtml_node_prev@@Base>:
   1e754:	ldr	r0, [r0, #12]
   1e758:	bx	lr

0001e75c <myhtml_node_parent@@Base>:
   1e75c:	ldr	r0, [r0, #24]
   1e760:	bx	lr

0001e764 <myhtml_node_child@@Base>:
   1e764:	ldr	r0, [r0, #20]
   1e768:	bx	lr

0001e76c <myhtml_node_last_child@@Base>:
   1e76c:	ldr	r0, [r0, #28]
   1e770:	bx	lr

0001e774 <myhtml_node_create@@Base>:
   1e774:	push	{r4, r5, fp, lr}
   1e778:	add	fp, sp, #8
   1e77c:	mov	r4, r2
   1e780:	mov	r5, r1
   1e784:	bl	110ac <myhtml_tree_node_create@plt>
   1e788:	str	r5, [r0, #4]
   1e78c:	str	r4, [r0, #8]
   1e790:	pop	{r4, r5, fp, pc}

0001e794 <myhtml_node_remove@@Base>:
   1e794:	b	11ac0 <myhtml_tree_node_remove@plt>

0001e798 <myhtml_node_delete@@Base>:
   1e798:	b	11a90 <myhtml_tree_node_delete@plt>

0001e79c <myhtml_node_delete_recursive@@Base>:
   1e79c:	b	110b8 <myhtml_tree_node_delete_recursive@plt>

0001e7a0 <myhtml_node_free@@Base>:
   1e7a0:	b	119e8 <myhtml_tree_node_free@plt>

0001e7a4 <myhtml_node_insert_before@@Base>:
   1e7a4:	push	{r4, sl, fp, lr}
   1e7a8:	add	fp, sp, #8
   1e7ac:	mov	r4, r1
   1e7b0:	mov	r1, r0
   1e7b4:	mov	r0, #0
   1e7b8:	cmp	r1, #0
   1e7bc:	cmpne	r4, #0
   1e7c0:	bne	1e7c8 <myhtml_node_insert_before@@Base+0x24>
   1e7c4:	pop	{r4, sl, fp, pc}
   1e7c8:	mov	r0, r1
   1e7cc:	mov	r1, r4
   1e7d0:	bl	11370 <myhtml_tree_node_insert_before@plt>
   1e7d4:	mov	r0, r4
   1e7d8:	pop	{r4, sl, fp, pc}

0001e7dc <myhtml_node_insert_after@@Base>:
   1e7dc:	push	{r4, sl, fp, lr}
   1e7e0:	add	fp, sp, #8
   1e7e4:	mov	r4, r1
   1e7e8:	mov	r1, r0
   1e7ec:	mov	r0, #0
   1e7f0:	cmp	r1, #0
   1e7f4:	cmpne	r4, #0
   1e7f8:	bne	1e800 <myhtml_node_insert_after@@Base+0x24>
   1e7fc:	pop	{r4, sl, fp, pc}
   1e800:	mov	r0, r1
   1e804:	mov	r1, r4
   1e808:	bl	11310 <myhtml_tree_node_insert_after@plt>
   1e80c:	mov	r0, r4
   1e810:	pop	{r4, sl, fp, pc}

0001e814 <myhtml_node_append_child@@Base>:
   1e814:	push	{r4, sl, fp, lr}
   1e818:	add	fp, sp, #8
   1e81c:	mov	r4, r1
   1e820:	mov	r1, r0
   1e824:	mov	r0, #0
   1e828:	cmp	r1, #0
   1e82c:	cmpne	r4, #0
   1e830:	bne	1e838 <myhtml_node_append_child@@Base+0x24>
   1e834:	pop	{r4, sl, fp, pc}
   1e838:	mov	r0, r1
   1e83c:	mov	r1, r4
   1e840:	bl	1158c <myhtml_tree_node_add_child@plt>
   1e844:	mov	r0, r4
   1e848:	pop	{r4, sl, fp, pc}

0001e84c <myhtml_node_insert_to_appropriate_place@@Base>:
   1e84c:	push	{r4, sl, fp, lr}
   1e850:	add	fp, sp, #8
   1e854:	sub	sp, sp, #8
   1e858:	mov	r4, r1
   1e85c:	cmp	r0, #0
   1e860:	mov	r1, #0
   1e864:	cmpne	r4, #0
   1e868:	bne	1e878 <myhtml_node_insert_to_appropriate_place@@Base+0x2c>
   1e86c:	mov	r0, r1
   1e870:	sub	sp, fp, #8
   1e874:	pop	{r4, sl, fp, pc}
   1e878:	ldr	r1, [r0, #40]	; 0x28
   1e87c:	mov	r2, #1
   1e880:	strb	r2, [r1, #188]	; 0xbc
   1e884:	add	r1, sp, #4
   1e888:	bl	11808 <myhtml_tree_appropriate_place_inserting_in_tree@plt>
   1e88c:	ldr	r1, [r0, #40]	; 0x28
   1e890:	mov	r2, #0
   1e894:	strb	r2, [r1, #188]	; 0xbc
   1e898:	mov	r1, r4
   1e89c:	ldr	r2, [sp, #4]
   1e8a0:	bl	11304 <myhtml_tree_node_insert_by_mode@plt>
   1e8a4:	mov	r1, r4
   1e8a8:	mov	r0, r1
   1e8ac:	sub	sp, fp, #8
   1e8b0:	pop	{r4, sl, fp, pc}

0001e8b4 <myhtml_node_text_set@@Base>:
   1e8b4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e8b8:	add	fp, sp, #24
   1e8bc:	mov	r7, #0
   1e8c0:	cmp	r0, #0
   1e8c4:	beq	1e9c4 <myhtml_node_text_set@@Base+0x110>
   1e8c8:	mov	r6, r3
   1e8cc:	cmp	r3, #41	; 0x29
   1e8d0:	bhi	1e9c4 <myhtml_node_text_set@@Base+0x110>
   1e8d4:	mov	r4, r0
   1e8d8:	ldr	r0, [r0, #32]
   1e8dc:	mov	r9, r2
   1e8e0:	mov	r8, r1
   1e8e4:	ldr	r5, [r4, #40]	; 0x28
   1e8e8:	cmp	r0, #0
   1e8ec:	beq	1e934 <myhtml_node_text_set@@Base+0x80>
   1e8f0:	mov	r7, r0
   1e8f4:	ldr	r2, [r7, #4]!
   1e8f8:	cmp	r2, #0
   1e8fc:	beq	1e968 <myhtml_node_text_set@@Base+0xb4>
   1e900:	ldr	r1, [r0, #8]
   1e904:	cmp	r1, r9
   1e908:	bcs	1e980 <myhtml_node_text_set@@Base+0xcc>
   1e90c:	ldr	r1, [r0, #20]
   1e910:	ldr	r0, [r5, #4]
   1e914:	bl	115c8 <mchar_async_free@plt>
   1e918:	ldr	r2, [r4, #32]
   1e91c:	ldr	r0, [r5, #4]
   1e920:	ldr	r1, [r5, #52]	; 0x34
   1e924:	mov	r3, r9
   1e928:	add	r2, r2, #4
   1e92c:	bl	11508 <mycore_string_init@plt>
   1e930:	b	1e988 <myhtml_node_text_set@@Base+0xd4>
   1e934:	ldr	r0, [r5, #8]
   1e938:	ldr	r1, [r5, #40]	; 0x28
   1e93c:	bl	117e4 <myhtml_token_node_create@plt>
   1e940:	cmp	r0, #0
   1e944:	str	r0, [r4, #32]
   1e948:	beq	1e9c4 <myhtml_node_text_set@@Base+0x110>
   1e94c:	ldr	r1, [r0, #48]	; 0x30
   1e950:	orr	r1, r1, #4
   1e954:	str	r1, [r0, #48]	; 0x30
   1e958:	mov	r7, r0
   1e95c:	ldr	r2, [r7, #4]!
   1e960:	cmp	r2, #0
   1e964:	bne	1e900 <myhtml_node_text_set@@Base+0x4c>
   1e968:	ldr	r0, [r5, #4]
   1e96c:	ldr	r1, [r5, #52]	; 0x34
   1e970:	add	r3, r9, #2
   1e974:	mov	r2, r7
   1e978:	bl	11508 <mycore_string_init@plt>
   1e97c:	b	1e988 <myhtml_node_text_set@@Base+0xd4>
   1e980:	mov	r1, #0
   1e984:	str	r1, [r0, #12]
   1e988:	ldr	r0, [r4, #32]
   1e98c:	mov	r1, r8
   1e990:	mov	r2, r9
   1e994:	cmp	r6, #0
   1e998:	add	r0, r0, #4
   1e99c:	beq	1e9ac <myhtml_node_text_set@@Base+0xf8>
   1e9a0:	mov	r3, r6
   1e9a4:	bl	113c4 <myencoding_string_append@plt>
   1e9a8:	b	1e9b0 <myhtml_node_text_set@@Base+0xfc>
   1e9ac:	bl	116f4 <mycore_string_append@plt>
   1e9b0:	ldr	r0, [r4, #32]
   1e9b4:	mov	r1, #0
   1e9b8:	add	r7, r0, #4
   1e9bc:	str	r1, [r0, #24]
   1e9c0:	str	r1, [r0, #28]
   1e9c4:	mov	r0, r7
   1e9c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001e9cc <myhtml_node_text_set_with_charef@@Base>:
   1e9cc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e9d0:	add	fp, sp, #24
   1e9d4:	sub	sp, sp, #64	; 0x40
   1e9d8:	mov	r6, #0
   1e9dc:	cmp	r0, #0
   1e9e0:	beq	1eaf8 <myhtml_node_text_set_with_charef@@Base+0x12c>
   1e9e4:	mov	r7, r3
   1e9e8:	cmp	r3, #41	; 0x29
   1e9ec:	bhi	1eaf8 <myhtml_node_text_set_with_charef@@Base+0x12c>
   1e9f0:	mov	r4, r0
   1e9f4:	ldr	r0, [r0, #32]
   1e9f8:	mov	r9, r2
   1e9fc:	mov	r8, r1
   1ea00:	ldr	r5, [r4, #40]	; 0x28
   1ea04:	cmp	r0, #0
   1ea08:	beq	1ea50 <myhtml_node_text_set_with_charef@@Base+0x84>
   1ea0c:	mov	r6, r0
   1ea10:	ldr	r2, [r6, #4]!
   1ea14:	cmp	r2, #0
   1ea18:	beq	1ea84 <myhtml_node_text_set_with_charef@@Base+0xb8>
   1ea1c:	ldr	r1, [r0, #8]
   1ea20:	cmp	r1, r9
   1ea24:	bcs	1ea9c <myhtml_node_text_set_with_charef@@Base+0xd0>
   1ea28:	ldr	r1, [r0, #20]
   1ea2c:	ldr	r0, [r5, #4]
   1ea30:	bl	115c8 <mchar_async_free@plt>
   1ea34:	ldr	r2, [r4, #32]
   1ea38:	ldr	r0, [r5, #4]
   1ea3c:	ldr	r1, [r5, #52]	; 0x34
   1ea40:	mov	r3, r9
   1ea44:	add	r2, r2, #4
   1ea48:	bl	11508 <mycore_string_init@plt>
   1ea4c:	b	1eaa4 <myhtml_node_text_set_with_charef@@Base+0xd8>
   1ea50:	ldr	r0, [r5, #8]
   1ea54:	ldr	r1, [r5, #40]	; 0x28
   1ea58:	bl	117e4 <myhtml_token_node_create@plt>
   1ea5c:	cmp	r0, #0
   1ea60:	str	r0, [r4, #32]
   1ea64:	beq	1eaf8 <myhtml_node_text_set_with_charef@@Base+0x12c>
   1ea68:	ldr	r1, [r0, #48]	; 0x30
   1ea6c:	orr	r1, r1, #4
   1ea70:	str	r1, [r0, #48]	; 0x30
   1ea74:	mov	r6, r0
   1ea78:	ldr	r2, [r6, #4]!
   1ea7c:	cmp	r2, #0
   1ea80:	bne	1ea1c <myhtml_node_text_set_with_charef@@Base+0x50>
   1ea84:	ldr	r0, [r5, #4]
   1ea88:	ldr	r1, [r5, #52]	; 0x34
   1ea8c:	add	r3, r9, #2
   1ea90:	mov	r2, r6
   1ea94:	bl	11508 <mycore_string_init@plt>
   1ea98:	b	1eaa4 <myhtml_node_text_set_with_charef@@Base+0xd8>
   1ea9c:	mov	r1, #0
   1eaa0:	str	r1, [r0, #12]
   1eaa4:	mov	r6, sp
   1eaa8:	mov	r0, r6
   1eaac:	bl	11448 <myhtml_data_process_entry_clean@plt>
   1eab0:	add	r0, r6, #8
   1eab4:	str	r7, [sp, #4]
   1eab8:	bl	11208 <myencoding_result_clean@plt>
   1eabc:	ldr	r0, [r4, #32]
   1eac0:	mov	r2, r8
   1eac4:	mov	r3, r9
   1eac8:	add	r1, r0, #4
   1eacc:	mov	r0, r6
   1ead0:	bl	115f8 <myhtml_data_process@plt>
   1ead4:	ldr	r0, [r4, #32]
   1ead8:	add	r1, r0, #4
   1eadc:	mov	r0, r6
   1eae0:	bl	11748 <myhtml_data_process_end@plt>
   1eae4:	ldr	r0, [r4, #32]
   1eae8:	mov	r1, #0
   1eaec:	add	r6, r0, #4
   1eaf0:	str	r1, [r0, #24]
   1eaf4:	str	r1, [r0, #28]
   1eaf8:	mov	r0, r6
   1eafc:	sub	sp, fp, #24
   1eb00:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001eb04 <myhtml_node_token@@Base>:
   1eb04:	ldr	r0, [r0, #32]
   1eb08:	bx	lr

0001eb0c <myhtml_node_namespace@@Base>:
   1eb0c:	ldr	r0, [r0, #8]
   1eb10:	bx	lr

0001eb14 <myhtml_node_namespace_set@@Base>:
   1eb14:	str	r1, [r0, #8]
   1eb18:	bx	lr

0001eb1c <myhtml_node_tag_id@@Base>:
   1eb1c:	ldr	r0, [r0, #4]
   1eb20:	bx	lr

0001eb24 <myhtml_tag_name_by_id@@Base>:
   1eb24:	push	{r4, r5, fp, lr}
   1eb28:	add	fp, sp, #8
   1eb2c:	cmp	r2, #0
   1eb30:	mov	r4, r2
   1eb34:	mov	r5, #0
   1eb38:	movne	r2, #0
   1eb3c:	strne	r2, [r4]
   1eb40:	cmp	r0, #0
   1eb44:	ldrne	r0, [r0, #28]
   1eb48:	cmpne	r0, #0
   1eb4c:	bne	1eb58 <myhtml_tag_name_by_id@@Base+0x34>
   1eb50:	mov	r0, r5
   1eb54:	pop	{r4, r5, fp, pc}
   1eb58:	bl	117fc <myhtml_tag_get_by_id@plt>
   1eb5c:	cmp	r0, #0
   1eb60:	beq	1eb50 <myhtml_tag_name_by_id@@Base+0x2c>
   1eb64:	cmp	r4, #0
   1eb68:	ldrne	r1, [r0, #8]
   1eb6c:	strne	r1, [r4]
   1eb70:	ldr	r5, [r0, #4]
   1eb74:	mov	r0, r5
   1eb78:	pop	{r4, r5, fp, pc}

0001eb7c <myhtml_tag_id_by_name@@Base>:
   1eb7c:	push	{r4, sl, fp, lr}
   1eb80:	add	fp, sp, #8
   1eb84:	cmp	r0, #0
   1eb88:	mov	r4, #0
   1eb8c:	ldrne	r0, [r0, #28]
   1eb90:	cmpne	r0, #0
   1eb94:	bne	1eba0 <myhtml_tag_id_by_name@@Base+0x24>
   1eb98:	mov	r0, r4
   1eb9c:	pop	{r4, sl, fp, pc}
   1eba0:	bl	118ec <myhtml_tag_get_by_name@plt>
   1eba4:	cmp	r0, #0
   1eba8:	ldrne	r4, [r0]
   1ebac:	mov	r0, r4
   1ebb0:	pop	{r4, sl, fp, pc}

0001ebb4 <myhtml_node_is_close_self@@Base>:
   1ebb4:	ldr	r0, [r0, #32]
   1ebb8:	cmp	r0, #0
   1ebbc:	moveq	r0, #0
   1ebc0:	ldrne	r0, [r0, #48]	; 0x30
   1ebc4:	ubfxne	r0, r0, #1, #1
   1ebc8:	bx	lr

0001ebcc <myhtml_node_is_void_element@@Base>:
   1ebcc:	ldr	r0, [r0, #4]
   1ebd0:	sub	r1, r0, #10
   1ebd4:	cmp	r1, #132	; 0x84
   1ebd8:	bhi	1ee04 <myhtml_node_is_void_element@@Base+0x238>
   1ebdc:	add	r2, pc, #8
   1ebe0:	mov	r0, #1
   1ebe4:	ldr	r1, [r2, r1, lsl #2]
   1ebe8:	add	pc, r2, r1
   1ebec:	andeq	r0, r0, r4, lsl r2
   1ebf0:	andeq	r0, r0, r8, lsl r2
   1ebf4:	andeq	r0, r0, r8, lsl r2
   1ebf8:	andeq	r0, r0, r8, lsl r2
   1ebfc:	andeq	r0, r0, r8, lsl r2
   1ec00:	andeq	r0, r0, r4, lsl r2
   1ec04:	andeq	r0, r0, r8, lsl r2
   1ec08:	andeq	r0, r0, r8, lsl r2
   1ec0c:	andeq	r0, r0, r8, lsl r2
   1ec10:	andeq	r0, r0, r8, lsl r2
   1ec14:	andeq	r0, r0, r8, lsl r2
   1ec18:	andeq	r0, r0, r8, lsl r2
   1ec1c:	andeq	r0, r0, r8, lsl r2
   1ec20:	andeq	r0, r0, r8, lsl r2
   1ec24:	andeq	r0, r0, r4, lsl r2
   1ec28:	andeq	r0, r0, r8, lsl r2
   1ec2c:	andeq	r0, r0, r8, lsl r2
   1ec30:	andeq	r0, r0, r8, lsl r2
   1ec34:	andeq	r0, r0, r8, lsl r2
   1ec38:	andeq	r0, r0, r8, lsl r2
   1ec3c:	andeq	r0, r0, r8, lsl r2
   1ec40:	andeq	r0, r0, r4, lsl r2
   1ec44:	andeq	r0, r0, r8, lsl r2
   1ec48:	andeq	r0, r0, r4, lsl r2
   1ec4c:	andeq	r0, r0, r8, lsl r2
   1ec50:	andeq	r0, r0, r8, lsl r2
   1ec54:	andeq	r0, r0, r8, lsl r2
   1ec58:	andeq	r0, r0, r8, lsl r2
   1ec5c:	andeq	r0, r0, r8, lsl r2
   1ec60:	andeq	r0, r0, r8, lsl r2
   1ec64:	andeq	r0, r0, r8, lsl r2
   1ec68:	andeq	r0, r0, r8, lsl r2
   1ec6c:	andeq	r0, r0, r8, lsl r2
   1ec70:	andeq	r0, r0, r8, lsl r2
   1ec74:	andeq	r0, r0, r8, lsl r2
   1ec78:	andeq	r0, r0, r8, lsl r2
   1ec7c:	andeq	r0, r0, r4, lsl r2
   1ec80:	andeq	r0, r0, r8, lsl r2
   1ec84:	andeq	r0, r0, r8, lsl r2
   1ec88:	andeq	r0, r0, r8, lsl r2
   1ec8c:	andeq	r0, r0, r8, lsl r2
   1ec90:	andeq	r0, r0, r8, lsl r2
   1ec94:	andeq	r0, r0, r8, lsl r2
   1ec98:	andeq	r0, r0, r8, lsl r2
   1ec9c:	andeq	r0, r0, r8, lsl r2
   1eca0:	andeq	r0, r0, r8, lsl r2
   1eca4:	andeq	r0, r0, r8, lsl r2
   1eca8:	andeq	r0, r0, r8, lsl r2
   1ecac:	andeq	r0, r0, r8, lsl r2
   1ecb0:	andeq	r0, r0, r8, lsl r2
   1ecb4:	andeq	r0, r0, r8, lsl r2
   1ecb8:	andeq	r0, r0, r8, lsl r2
   1ecbc:	andeq	r0, r0, r8, lsl r2
   1ecc0:	andeq	r0, r0, r8, lsl r2
   1ecc4:	andeq	r0, r0, r4, lsl r2
   1ecc8:	andeq	r0, r0, r8, lsl r2
   1eccc:	andeq	r0, r0, r8, lsl r2
   1ecd0:	andeq	r0, r0, r8, lsl r2
   1ecd4:	andeq	r0, r0, r8, lsl r2
   1ecd8:	andeq	r0, r0, r4, lsl r2
   1ecdc:	andeq	r0, r0, r4, lsl r2
   1ece0:	andeq	r0, r0, r8, lsl r2
   1ece4:	andeq	r0, r0, r8, lsl r2
   1ece8:	andeq	r0, r0, r8, lsl r2
   1ecec:	andeq	r0, r0, r4, lsl r2
   1ecf0:	andeq	r0, r0, r8, lsl r2
   1ecf4:	andeq	r0, r0, r8, lsl r2
   1ecf8:	andeq	r0, r0, r8, lsl r2
   1ecfc:	andeq	r0, r0, r4, lsl r2
   1ed00:	andeq	r0, r0, r8, lsl r2
   1ed04:	andeq	r0, r0, r8, lsl r2
   1ed08:	andeq	r0, r0, r8, lsl r2
   1ed0c:	andeq	r0, r0, r8, lsl r2
   1ed10:	andeq	r0, r0, r8, lsl r2
   1ed14:	andeq	r0, r0, r8, lsl r2
   1ed18:	andeq	r0, r0, r8, lsl r2
   1ed1c:	andeq	r0, r0, r4, lsl r2
   1ed20:	andeq	r0, r0, r8, lsl r2
   1ed24:	andeq	r0, r0, r8, lsl r2
   1ed28:	andeq	r0, r0, r8, lsl r2
   1ed2c:	andeq	r0, r0, r8, lsl r2
   1ed30:	andeq	r0, r0, r8, lsl r2
   1ed34:	andeq	r0, r0, r8, lsl r2
   1ed38:	andeq	r0, r0, r8, lsl r2
   1ed3c:	andeq	r0, r0, r8, lsl r2
   1ed40:	andeq	r0, r0, r8, lsl r2
   1ed44:	andeq	r0, r0, r8, lsl r2
   1ed48:	andeq	r0, r0, r8, lsl r2
   1ed4c:	andeq	r0, r0, r8, lsl r2
   1ed50:	andeq	r0, r0, r8, lsl r2
   1ed54:	andeq	r0, r0, r4, lsl r2
   1ed58:	andeq	r0, r0, r8, lsl r2
   1ed5c:	andeq	r0, r0, r8, lsl r2
   1ed60:	andeq	r0, r0, r8, lsl r2
   1ed64:	andeq	r0, r0, r8, lsl r2
   1ed68:	andeq	r0, r0, r8, lsl r2
   1ed6c:	andeq	r0, r0, r8, lsl r2
   1ed70:	andeq	r0, r0, r8, lsl r2
   1ed74:	andeq	r0, r0, r8, lsl r2
   1ed78:	andeq	r0, r0, r8, lsl r2
   1ed7c:	andeq	r0, r0, r8, lsl r2
   1ed80:	andeq	r0, r0, r8, lsl r2
   1ed84:	andeq	r0, r0, r8, lsl r2
   1ed88:	andeq	r0, r0, r8, lsl r2
   1ed8c:	andeq	r0, r0, r8, lsl r2
   1ed90:	andeq	r0, r0, r8, lsl r2
   1ed94:	andeq	r0, r0, r4, lsl r2
   1ed98:	andeq	r0, r0, r8, lsl r2
   1ed9c:	andeq	r0, r0, r8, lsl r2
   1eda0:	andeq	r0, r0, r8, lsl r2
   1eda4:	andeq	r0, r0, r8, lsl r2
   1eda8:	andeq	r0, r0, r8, lsl r2
   1edac:	andeq	r0, r0, r8, lsl r2
   1edb0:	andeq	r0, r0, r8, lsl r2
   1edb4:	andeq	r0, r0, r8, lsl r2
   1edb8:	andeq	r0, r0, r8, lsl r2
   1edbc:	andeq	r0, r0, r8, lsl r2
   1edc0:	andeq	r0, r0, r8, lsl r2
   1edc4:	andeq	r0, r0, r8, lsl r2
   1edc8:	andeq	r0, r0, r8, lsl r2
   1edcc:	andeq	r0, r0, r8, lsl r2
   1edd0:	andeq	r0, r0, r8, lsl r2
   1edd4:	andeq	r0, r0, r8, lsl r2
   1edd8:	andeq	r0, r0, r8, lsl r2
   1eddc:	andeq	r0, r0, r8, lsl r2
   1ede0:	andeq	r0, r0, r8, lsl r2
   1ede4:	andeq	r0, r0, r4, lsl r2
   1ede8:	andeq	r0, r0, r8, lsl r2
   1edec:	andeq	r0, r0, r8, lsl r2
   1edf0:	andeq	r0, r0, r8, lsl r2
   1edf4:	andeq	r0, r0, r8, lsl r2
   1edf8:	andeq	r0, r0, r8, lsl r2
   1edfc:	andeq	r0, r0, r4, lsl r2
   1ee00:	bx	lr
   1ee04:	mov	r0, #0
   1ee08:	bx	lr

0001ee0c <myhtml_node_attribute_first@@Base>:
   1ee0c:	ldr	r0, [r0, #32]
   1ee10:	cmp	r0, #0
   1ee14:	ldrne	r0, [r0, #40]	; 0x28
   1ee18:	moveq	r0, #0
   1ee1c:	bx	lr

0001ee20 <myhtml_node_attribute_last@@Base>:
   1ee20:	ldr	r0, [r0, #32]
   1ee24:	cmp	r0, #0
   1ee28:	ldrne	r0, [r0, #44]	; 0x2c
   1ee2c:	moveq	r0, #0
   1ee30:	bx	lr

0001ee34 <myhtml_node_text@@Base>:
   1ee34:	ldr	r0, [r0, #32]
   1ee38:	cmp	r0, #0
   1ee3c:	beq	1ee54 <myhtml_node_text@@Base+0x20>
   1ee40:	ldr	r2, [r0, #12]
   1ee44:	cmp	r2, #0
   1ee48:	ldrne	r0, [r0, #4]
   1ee4c:	cmpne	r0, #0
   1ee50:	bne	1ee64 <myhtml_node_text@@Base+0x30>
   1ee54:	mov	r0, #0
   1ee58:	cmp	r1, #0
   1ee5c:	strne	r0, [r1]
   1ee60:	bx	lr
   1ee64:	cmp	r1, #0
   1ee68:	strne	r2, [r1]
   1ee6c:	bxne	lr
   1ee70:	bx	lr

0001ee74 <myhtml_node_string@@Base>:
   1ee74:	cmp	r0, #0
   1ee78:	moveq	r0, #0
   1ee7c:	bxeq	lr
   1ee80:	ldr	r0, [r0, #32]
   1ee84:	cmp	r0, #0
   1ee88:	addne	r0, r0, #4
   1ee8c:	bx	lr

0001ee90 <myhtml_node_raw_position@@Base>:
   1ee90:	cmp	r1, #0
   1ee94:	ldrne	r1, [r1, #32]
   1ee98:	cmpne	r1, #0
   1ee9c:	bne	1eeb0 <myhtml_node_raw_position@@Base+0x20>
   1eea0:	mov	r1, #0
   1eea4:	str	r1, [r0]
   1eea8:	str	r1, [r0, #4]
   1eeac:	bx	lr
   1eeb0:	ldr	r2, [r1, #24]
   1eeb4:	ldr	r1, [r1, #28]
   1eeb8:	str	r2, [r0]
   1eebc:	str	r1, [r0, #4]
   1eec0:	bx	lr

0001eec4 <myhtml_node_element_position@@Base>:
   1eec4:	cmp	r1, #0
   1eec8:	ldrne	r1, [r1, #32]
   1eecc:	cmpne	r1, #0
   1eed0:	bne	1eee4 <myhtml_node_element_position@@Base+0x20>
   1eed4:	mov	r1, #0
   1eed8:	str	r1, [r0]
   1eedc:	str	r1, [r0, #4]
   1eee0:	bx	lr
   1eee4:	ldr	r2, [r1, #32]
   1eee8:	ldr	r1, [r1, #36]	; 0x24
   1eeec:	str	r2, [r0]
   1eef0:	str	r1, [r0, #4]
   1eef4:	bx	lr

0001eef8 <myhtml_node_set_data@@Base>:
   1eef8:	str	r1, [r0, #36]	; 0x24
   1eefc:	bx	lr

0001ef00 <myhtml_node_get_data@@Base>:
   1ef00:	ldr	r0, [r0, #36]	; 0x24
   1ef04:	bx	lr

0001ef08 <myhtml_node_tree@@Base>:
   1ef08:	ldr	r0, [r0, #40]	; 0x28
   1ef0c:	bx	lr

0001ef10 <myhtml_get_nodes_by_attribute_key_recursion@@Base>:
   1ef10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ef14:	add	fp, sp, #28
   1ef18:	sub	sp, sp, #4
   1ef1c:	mov	r4, r0
   1ef20:	mov	r0, #0
   1ef24:	cmp	r4, #0
   1ef28:	beq	1f004 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xf4>
   1ef2c:	mov	r5, r3
   1ef30:	mov	r6, r2
   1ef34:	mov	r7, r1
   1ef38:	mov	r0, r4
   1ef3c:	mov	sl, r0
   1ef40:	ldr	r0, [r0, #32]
   1ef44:	cmp	r0, #0
   1ef48:	beq	1efdc <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xcc>
   1ef4c:	ldr	r8, [r0, #40]	; 0x28
   1ef50:	cmp	r8, #0
   1ef54:	bne	1ef68 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x58>
   1ef58:	b	1efdc <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xcc>
   1ef5c:	ldr	r8, [r8]
   1ef60:	cmp	r8, #0
   1ef64:	beq	1efdc <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xcc>
   1ef68:	ldr	r0, [r8, #16]
   1ef6c:	cmp	r0, r5
   1ef70:	bne	1ef5c <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x4c>
   1ef74:	ldr	r0, [r8, #8]
   1ef78:	mov	r1, r6
   1ef7c:	mov	r2, r5
   1ef80:	bl	11298 <mycore_strncasecmp@plt>
   1ef84:	cmp	r0, #0
   1ef88:	bne	1ef5c <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x4c>
   1ef8c:	ldr	r0, [r7, #8]
   1ef90:	ldr	r1, [r7]
   1ef94:	add	r2, r0, #1
   1ef98:	str	sl, [r1, r0, lsl #2]
   1ef9c:	str	r2, [r7, #8]
   1efa0:	ldr	r1, [r7, #4]
   1efa4:	cmp	r2, r1
   1efa8:	movwcs	r2, #1025	; 0x401
   1efac:	addcs	r2, r0, r2
   1efb0:	cmpcs	r2, r1
   1efb4:	bcc	1ef5c <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x4c>
   1efb8:	movw	r1, #1026	; 0x402
   1efbc:	add	r9, r0, r1
   1efc0:	ldr	r0, [r7]
   1efc4:	lsl	r1, r9, #2
   1efc8:	bl	10da0 <mycore_realloc@plt>
   1efcc:	cmp	r0, #0
   1efd0:	beq	1f00c <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xfc>
   1efd4:	stm	r7, {r0, r9}
   1efd8:	b	1ef5c <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x4c>
   1efdc:	ldr	r0, [sl, #20]
   1efe0:	cmp	r0, #0
   1efe4:	bne	1ef3c <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x2c>
   1efe8:	ldr	r0, [sl, #16]
   1efec:	cmp	r0, #0
   1eff0:	bne	1ef3c <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x2c>
   1eff4:	ldr	sl, [sl, #24]
   1eff8:	cmp	sl, r4
   1effc:	bne	1efe8 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xd8>
   1f000:	mov	r0, #0
   1f004:	sub	sp, fp, #28
   1f008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f00c:	mov	r0, #2
   1f010:	sub	sp, fp, #28
   1f014:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001f018 <myhtml_get_nodes_by_attribute_key@@Base>:
   1f018:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1f01c:	add	fp, sp, #24
   1f020:	ldr	r9, [fp, #12]
   1f024:	mov	r5, r3
   1f028:	mov	r6, r2
   1f02c:	mov	r4, r1
   1f030:	mov	r8, r0
   1f034:	cmp	r1, #0
   1f038:	beq	1f070 <myhtml_get_nodes_by_attribute_key@@Base+0x58>
   1f03c:	cmp	r6, #0
   1f040:	ldr	r3, [fp, #8]
   1f044:	mov	r1, r4
   1f048:	mov	r2, r5
   1f04c:	ldreq	r6, [r8, #96]	; 0x60
   1f050:	mov	r0, r6
   1f054:	bl	10fbc <myhtml_get_nodes_by_attribute_key_recursion@plt>
   1f058:	cmp	r9, #0
   1f05c:	mov	r7, r4
   1f060:	cmpne	r0, #0
   1f064:	strne	r0, [r9]
   1f068:	mov	r0, r7
   1f06c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1f070:	mov	r0, #12
   1f074:	bl	119ac <mycore_malloc@plt>
   1f078:	cmp	r0, #0
   1f07c:	beq	1f0b4 <myhtml_get_nodes_by_attribute_key@@Base+0x9c>
   1f080:	mov	r4, r0
   1f084:	mov	r7, #0
   1f088:	mov	r0, #1024	; 0x400
   1f08c:	stmib	r4, {r0, r7}
   1f090:	mov	r0, #4096	; 0x1000
   1f094:	bl	119ac <mycore_malloc@plt>
   1f098:	cmp	r0, #0
   1f09c:	str	r0, [r4]
   1f0a0:	beq	1f0bc <myhtml_get_nodes_by_attribute_key@@Base+0xa4>
   1f0a4:	cmp	r9, #0
   1f0a8:	movne	r0, #0
   1f0ac:	strne	r0, [r9]
   1f0b0:	b	1f03c <myhtml_get_nodes_by_attribute_key@@Base+0x24>
   1f0b4:	mov	r7, #0
   1f0b8:	b	1f0c4 <myhtml_get_nodes_by_attribute_key@@Base+0xac>
   1f0bc:	mov	r0, r4
   1f0c0:	bl	11a9c <mycore_free@plt>
   1f0c4:	cmp	r9, #0
   1f0c8:	movne	r0, #2
   1f0cc:	strne	r0, [r9]
   1f0d0:	movne	r0, r7
   1f0d4:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   1f0d8:	mov	r0, r7
   1f0dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001f0e0 <myhtml_get_nodes_by_attribute_value_recursion_eq@@Base>:
   1f0e0:	ldr	ip, [r0, #8]
   1f0e4:	mov	r3, r0
   1f0e8:	mov	r0, #0
   1f0ec:	cmp	ip, r2
   1f0f0:	bxne	lr
   1f0f4:	push	{fp, lr}
   1f0f8:	mov	fp, sp
   1f0fc:	ldr	r0, [r3]
   1f100:	bl	11b68 <mycore_strncmp@plt>
   1f104:	clz	r0, r0
   1f108:	lsr	r0, r0, #5
   1f10c:	pop	{fp, lr}
   1f110:	bx	lr

0001f114 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base>:
   1f114:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f118:	add	fp, sp, #28
   1f11c:	sub	sp, sp, #4
   1f120:	mov	r6, r0
   1f124:	ldr	r0, [r0, #8]
   1f128:	cmp	r0, r2
   1f12c:	bcc	1f238 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x124>
   1f130:	ldr	r7, [r6]
   1f134:	mov	r4, r2
   1f138:	mov	sl, r1
   1f13c:	mov	r0, r7
   1f140:	bl	11b68 <mycore_strncmp@plt>
   1f144:	ldr	r1, [r6, #8]
   1f148:	cmp	r0, #0
   1f14c:	bne	1f188 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x74>
   1f150:	cmp	r1, r4
   1f154:	bls	1f244 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x130>
   1f158:	ldrb	r0, [r7, r4]
   1f15c:	sub	r0, r0, #9
   1f160:	uxtb	r2, r0
   1f164:	cmp	r2, #24
   1f168:	bcs	1f244 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x130>
   1f16c:	movw	r3, #27
   1f170:	mov	r0, #1
   1f174:	movt	r3, #128	; 0x80
   1f178:	tst	r0, r3, lsr r2
   1f17c:	bne	1f250 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x13c>
   1f180:	cmp	r1, r4
   1f184:	beq	1f250 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x13c>
   1f188:	sub	r0, r1, #1
   1f18c:	cmp	r0, r4
   1f190:	bcc	1f238 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x124>
   1f194:	movw	r9, #27
   1f198:	mov	r8, #1
   1f19c:	mov	r5, #1
   1f1a0:	movt	r9, #128	; 0x80
   1f1a4:	add	r0, r7, r5
   1f1a8:	ldrb	r2, [r0, #-1]
   1f1ac:	sub	r2, r2, #9
   1f1b0:	cmp	r2, #23
   1f1b4:	bhi	1f228 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x114>
   1f1b8:	tst	r9, r8, lsl r2
   1f1bc:	beq	1f228 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x114>
   1f1c0:	mov	r1, sl
   1f1c4:	mov	r2, r4
   1f1c8:	bl	11b68 <mycore_strncmp@plt>
   1f1cc:	cmp	r0, #0
   1f1d0:	beq	1f1ec <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xd8>
   1f1d4:	ldr	r1, [r6, #8]
   1f1d8:	add	r5, r5, #1
   1f1dc:	sub	r0, r1, r5
   1f1e0:	cmp	r0, r4
   1f1e4:	bcs	1f1a4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x90>
   1f1e8:	b	1f238 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x124>
   1f1ec:	cmp	r5, r4
   1f1f0:	bls	1f218 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x104>
   1f1f4:	add	r0, r5, r4
   1f1f8:	ldrb	r0, [r7, r0]
   1f1fc:	sub	r0, r0, #9
   1f200:	uxtb	r1, r0
   1f204:	cmp	r1, #24
   1f208:	bcs	1f218 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x104>
   1f20c:	mov	r0, #1
   1f210:	tst	r0, r9, lsr r1
   1f214:	bne	1f250 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x13c>
   1f218:	ldr	r1, [r6, #8]
   1f21c:	sub	r0, r1, r5
   1f220:	cmp	r0, r4
   1f224:	beq	1f258 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x144>
   1f228:	add	r5, r5, #1
   1f22c:	sub	r0, r1, r5
   1f230:	cmp	r0, r4
   1f234:	bcs	1f1a4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x90>
   1f238:	mov	r0, #0
   1f23c:	sub	sp, fp, #28
   1f240:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f244:	mov	r0, #1
   1f248:	cmp	r1, r4
   1f24c:	bne	1f188 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x74>
   1f250:	sub	sp, fp, #28
   1f254:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f258:	mov	r0, #1
   1f25c:	sub	sp, fp, #28
   1f260:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001f264 <myhtml_get_nodes_by_attribute_value_recursion_begin@@Base>:
   1f264:	ldr	ip, [r0, #8]
   1f268:	mov	r3, r0
   1f26c:	mov	r0, #0
   1f270:	cmp	ip, r2
   1f274:	bxcc	lr
   1f278:	push	{fp, lr}
   1f27c:	mov	fp, sp
   1f280:	ldr	r0, [r3]
   1f284:	bl	11b68 <mycore_strncmp@plt>
   1f288:	clz	r0, r0
   1f28c:	lsr	r0, r0, #5
   1f290:	pop	{fp, lr}
   1f294:	bx	lr

0001f298 <myhtml_get_nodes_by_attribute_value_recursion_end@@Base>:
   1f298:	ldr	r3, [r0, #8]
   1f29c:	mov	ip, #0
   1f2a0:	cmp	r3, r2
   1f2a4:	bcc	1f2cc <myhtml_get_nodes_by_attribute_value_recursion_end@@Base+0x34>
   1f2a8:	push	{fp, lr}
   1f2ac:	mov	fp, sp
   1f2b0:	ldr	r0, [r0]
   1f2b4:	sub	r3, r3, r2
   1f2b8:	add	r0, r0, r3
   1f2bc:	bl	11b68 <mycore_strncmp@plt>
   1f2c0:	clz	r0, r0
   1f2c4:	lsr	ip, r0, #5
   1f2c8:	pop	{fp, lr}
   1f2cc:	mov	r0, ip
   1f2d0:	bx	lr

0001f2d4 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base>:
   1f2d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1f2d8:	add	fp, sp, #24
   1f2dc:	mov	r8, r1
   1f2e0:	ldr	r1, [r0, #8]
   1f2e4:	mov	r6, r0
   1f2e8:	mov	r0, #0
   1f2ec:	cmp	r1, r2
   1f2f0:	popcc	{r4, r5, r6, r7, r8, sl, fp, pc}
   1f2f4:	ldr	r7, [r6]
   1f2f8:	mov	r4, r2
   1f2fc:	mov	r5, #0
   1f300:	b	1f320 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x4c>
   1f304:	ldr	r0, [r6, #8]
   1f308:	sub	r5, r5, #1
   1f30c:	add	r7, r7, #1
   1f310:	add	r0, r0, r5
   1f314:	cmp	r0, r4
   1f318:	movcc	r0, #0
   1f31c:	popcc	{r4, r5, r6, r7, r8, sl, fp, pc}
   1f320:	mov	r0, r7
   1f324:	mov	r1, r8
   1f328:	mov	r2, r4
   1f32c:	bl	11b68 <mycore_strncmp@plt>
   1f330:	cmp	r0, #0
   1f334:	bne	1f304 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x30>
   1f338:	mov	r0, #1
   1f33c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001f340 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base>:
   1f340:	push	{r4, r5, r6, sl, fp, lr}
   1f344:	add	fp, sp, #16
   1f348:	mov	r4, r2
   1f34c:	ldr	r2, [r0, #8]
   1f350:	mov	r6, r1
   1f354:	mov	r1, r0
   1f358:	mov	r0, #0
   1f35c:	cmp	r2, r4
   1f360:	popcc	{r4, r5, r6, sl, fp, pc}
   1f364:	ldr	r5, [r1]
   1f368:	bne	1f388 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x48>
   1f36c:	mov	r0, r5
   1f370:	mov	r1, r6
   1f374:	mov	r2, r4
   1f378:	bl	11b68 <mycore_strncmp@plt>
   1f37c:	cmp	r0, #0
   1f380:	moveq	r0, #1
   1f384:	popeq	{r4, r5, r6, sl, fp, pc}
   1f388:	mov	r0, r5
   1f38c:	mov	r1, r6
   1f390:	mov	r2, r4
   1f394:	bl	11b68 <mycore_strncmp@plt>
   1f398:	cmp	r0, #0
   1f39c:	beq	1f3a8 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x68>
   1f3a0:	mov	r0, #0
   1f3a4:	pop	{r4, r5, r6, sl, fp, pc}
   1f3a8:	ldrb	r1, [r5, r4]
   1f3ac:	mov	r0, #1
   1f3b0:	cmp	r1, #45	; 0x2d
   1f3b4:	movne	r0, #0
   1f3b8:	pop	{r4, r5, r6, sl, fp, pc}

0001f3bc <myhtml_get_nodes_by_attribute_value_recursion_eq_i@@Base>:
   1f3bc:	ldr	ip, [r0, #8]
   1f3c0:	mov	r3, r0
   1f3c4:	mov	r0, #0
   1f3c8:	cmp	ip, r2
   1f3cc:	bxne	lr
   1f3d0:	push	{fp, lr}
   1f3d4:	mov	fp, sp
   1f3d8:	ldr	r0, [r3]
   1f3dc:	bl	11298 <mycore_strncasecmp@plt>
   1f3e0:	clz	r0, r0
   1f3e4:	lsr	r0, r0, #5
   1f3e8:	pop	{fp, lr}
   1f3ec:	bx	lr

0001f3f0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base>:
   1f3f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f3f4:	add	fp, sp, #28
   1f3f8:	sub	sp, sp, #4
   1f3fc:	mov	r6, r0
   1f400:	ldr	r0, [r0, #8]
   1f404:	cmp	r0, r2
   1f408:	bcc	1f514 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x124>
   1f40c:	ldr	r7, [r6]
   1f410:	mov	r4, r2
   1f414:	mov	sl, r1
   1f418:	mov	r0, r7
   1f41c:	bl	11298 <mycore_strncasecmp@plt>
   1f420:	ldr	r1, [r6, #8]
   1f424:	cmp	r0, #0
   1f428:	bne	1f464 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x74>
   1f42c:	cmp	r1, r4
   1f430:	bls	1f520 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x130>
   1f434:	ldrb	r0, [r7, r4]
   1f438:	sub	r0, r0, #9
   1f43c:	uxtb	r2, r0
   1f440:	cmp	r2, #24
   1f444:	bcs	1f520 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x130>
   1f448:	movw	r3, #27
   1f44c:	mov	r0, #1
   1f450:	movt	r3, #128	; 0x80
   1f454:	tst	r0, r3, lsr r2
   1f458:	bne	1f52c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x13c>
   1f45c:	cmp	r1, r4
   1f460:	beq	1f52c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x13c>
   1f464:	sub	r0, r1, #1
   1f468:	cmp	r0, r4
   1f46c:	bcc	1f514 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x124>
   1f470:	movw	r9, #27
   1f474:	mov	r8, #1
   1f478:	mov	r5, #1
   1f47c:	movt	r9, #128	; 0x80
   1f480:	add	r0, r7, r5
   1f484:	ldrb	r2, [r0, #-1]
   1f488:	sub	r2, r2, #9
   1f48c:	cmp	r2, #23
   1f490:	bhi	1f504 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x114>
   1f494:	tst	r9, r8, lsl r2
   1f498:	beq	1f504 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x114>
   1f49c:	mov	r1, sl
   1f4a0:	mov	r2, r4
   1f4a4:	bl	11298 <mycore_strncasecmp@plt>
   1f4a8:	cmp	r0, #0
   1f4ac:	beq	1f4c8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xd8>
   1f4b0:	ldr	r1, [r6, #8]
   1f4b4:	add	r5, r5, #1
   1f4b8:	sub	r0, r1, r5
   1f4bc:	cmp	r0, r4
   1f4c0:	bcs	1f480 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x90>
   1f4c4:	b	1f514 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x124>
   1f4c8:	cmp	r5, r4
   1f4cc:	bls	1f4f4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x104>
   1f4d0:	add	r0, r5, r4
   1f4d4:	ldrb	r0, [r7, r0]
   1f4d8:	sub	r0, r0, #9
   1f4dc:	uxtb	r1, r0
   1f4e0:	cmp	r1, #24
   1f4e4:	bcs	1f4f4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x104>
   1f4e8:	mov	r0, #1
   1f4ec:	tst	r0, r9, lsr r1
   1f4f0:	bne	1f52c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x13c>
   1f4f4:	ldr	r1, [r6, #8]
   1f4f8:	sub	r0, r1, r5
   1f4fc:	cmp	r0, r4
   1f500:	beq	1f534 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x144>
   1f504:	add	r5, r5, #1
   1f508:	sub	r0, r1, r5
   1f50c:	cmp	r0, r4
   1f510:	bcs	1f480 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x90>
   1f514:	mov	r0, #0
   1f518:	sub	sp, fp, #28
   1f51c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f520:	mov	r0, #1
   1f524:	cmp	r1, r4
   1f528:	bne	1f464 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x74>
   1f52c:	sub	sp, fp, #28
   1f530:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f534:	mov	r0, #1
   1f538:	sub	sp, fp, #28
   1f53c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001f540 <myhtml_get_nodes_by_attribute_value_recursion_begin_i@@Base>:
   1f540:	ldr	ip, [r0, #8]
   1f544:	mov	r3, r0
   1f548:	mov	r0, #0
   1f54c:	cmp	ip, r2
   1f550:	bxcc	lr
   1f554:	push	{fp, lr}
   1f558:	mov	fp, sp
   1f55c:	ldr	r0, [r3]
   1f560:	bl	11298 <mycore_strncasecmp@plt>
   1f564:	clz	r0, r0
   1f568:	lsr	r0, r0, #5
   1f56c:	pop	{fp, lr}
   1f570:	bx	lr

0001f574 <myhtml_get_nodes_by_attribute_value_recursion_end_i@@Base>:
   1f574:	ldr	r3, [r0, #8]
   1f578:	mov	ip, #0
   1f57c:	cmp	r3, r2
   1f580:	bcc	1f5a8 <myhtml_get_nodes_by_attribute_value_recursion_end_i@@Base+0x34>
   1f584:	push	{fp, lr}
   1f588:	mov	fp, sp
   1f58c:	ldr	r0, [r0]
   1f590:	sub	r3, r3, r2
   1f594:	add	r0, r0, r3
   1f598:	bl	11298 <mycore_strncasecmp@plt>
   1f59c:	clz	r0, r0
   1f5a0:	lsr	ip, r0, #5
   1f5a4:	pop	{fp, lr}
   1f5a8:	mov	r0, ip
   1f5ac:	bx	lr

0001f5b0 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base>:
   1f5b0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1f5b4:	add	fp, sp, #24
   1f5b8:	mov	r8, r1
   1f5bc:	ldr	r1, [r0, #8]
   1f5c0:	mov	r6, r0
   1f5c4:	mov	r0, #0
   1f5c8:	cmp	r1, r2
   1f5cc:	popcc	{r4, r5, r6, r7, r8, sl, fp, pc}
   1f5d0:	ldr	r7, [r6]
   1f5d4:	mov	r4, r2
   1f5d8:	mov	r5, #0
   1f5dc:	b	1f5fc <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x4c>
   1f5e0:	ldr	r0, [r6, #8]
   1f5e4:	sub	r5, r5, #1
   1f5e8:	add	r7, r7, #1
   1f5ec:	add	r0, r0, r5
   1f5f0:	cmp	r0, r4
   1f5f4:	movcc	r0, #0
   1f5f8:	popcc	{r4, r5, r6, r7, r8, sl, fp, pc}
   1f5fc:	mov	r0, r7
   1f600:	mov	r1, r8
   1f604:	mov	r2, r4
   1f608:	bl	11298 <mycore_strncasecmp@plt>
   1f60c:	cmp	r0, #0
   1f610:	bne	1f5e0 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x30>
   1f614:	mov	r0, #1
   1f618:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001f61c <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base>:
   1f61c:	push	{r4, r5, r6, sl, fp, lr}
   1f620:	add	fp, sp, #16
   1f624:	mov	r4, r2
   1f628:	ldr	r2, [r0, #8]
   1f62c:	mov	r6, r1
   1f630:	mov	r1, r0
   1f634:	mov	r0, #0
   1f638:	cmp	r2, r4
   1f63c:	popcc	{r4, r5, r6, sl, fp, pc}
   1f640:	ldr	r5, [r1]
   1f644:	bne	1f664 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x48>
   1f648:	mov	r0, r5
   1f64c:	mov	r1, r6
   1f650:	mov	r2, r4
   1f654:	bl	11298 <mycore_strncasecmp@plt>
   1f658:	cmp	r0, #0
   1f65c:	moveq	r0, #1
   1f660:	popeq	{r4, r5, r6, sl, fp, pc}
   1f664:	mov	r0, r5
   1f668:	mov	r1, r6
   1f66c:	mov	r2, r4
   1f670:	bl	11298 <mycore_strncasecmp@plt>
   1f674:	cmp	r0, #0
   1f678:	beq	1f684 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x68>
   1f67c:	mov	r0, #0
   1f680:	pop	{r4, r5, r6, sl, fp, pc}
   1f684:	ldrb	r1, [r5, r4]
   1f688:	mov	r0, #1
   1f68c:	cmp	r1, #45	; 0x2d
   1f690:	movne	r0, #0
   1f694:	pop	{r4, r5, r6, sl, fp, pc}

0001f698 <myhtml_get_nodes_by_attribute_value_recursion@@Base>:
   1f698:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f69c:	add	fp, sp, #28
   1f6a0:	sub	sp, sp, #4
   1f6a4:	mov	r7, r1
   1f6a8:	mov	r1, r0
   1f6ac:	mov	r0, #0
   1f6b0:	cmp	r1, #0
   1f6b4:	beq	1f78c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xf4>
   1f6b8:	ldr	r4, [fp, #8]
   1f6bc:	mov	r5, r3
   1f6c0:	mov	r6, r2
   1f6c4:	mov	r0, r1
   1f6c8:	str	r1, [sp]
   1f6cc:	mov	r8, r0
   1f6d0:	ldr	r0, [r0, #32]
   1f6d4:	cmp	r0, #0
   1f6d8:	beq	1f760 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xc8>
   1f6dc:	ldr	sl, [r0, #40]	; 0x28
   1f6e0:	cmp	sl, #0
   1f6e4:	bne	1f6f8 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x60>
   1f6e8:	b	1f760 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xc8>
   1f6ec:	ldr	sl, [sl]
   1f6f0:	cmp	sl, #0
   1f6f4:	beq	1f760 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xc8>
   1f6f8:	add	r0, sl, #28
   1f6fc:	mov	r1, r5
   1f700:	mov	r2, r4
   1f704:	blx	r6
   1f708:	cmp	r0, #0
   1f70c:	beq	1f6ec <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x54>
   1f710:	ldr	r0, [r7, #8]
   1f714:	ldr	r1, [r7]
   1f718:	add	r2, r0, #1
   1f71c:	str	r8, [r1, r0, lsl #2]
   1f720:	str	r2, [r7, #8]
   1f724:	ldr	r1, [r7, #4]
   1f728:	cmp	r2, r1
   1f72c:	movwcs	r2, #1025	; 0x401
   1f730:	addcs	r2, r0, r2
   1f734:	cmpcs	r2, r1
   1f738:	bcc	1f6ec <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x54>
   1f73c:	movw	r1, #1026	; 0x402
   1f740:	add	r9, r0, r1
   1f744:	ldr	r0, [r7]
   1f748:	lsl	r1, r9, #2
   1f74c:	bl	10da0 <mycore_realloc@plt>
   1f750:	cmp	r0, #0
   1f754:	beq	1f794 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xfc>
   1f758:	stm	r7, {r0, r9}
   1f75c:	b	1f6ec <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x54>
   1f760:	ldr	r0, [r8, #20]
   1f764:	ldr	r1, [sp]
   1f768:	cmp	r0, #0
   1f76c:	bne	1f6cc <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x34>
   1f770:	ldr	r0, [r8, #16]
   1f774:	cmp	r0, #0
   1f778:	bne	1f6cc <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x34>
   1f77c:	ldr	r8, [r8, #24]
   1f780:	cmp	r8, r1
   1f784:	bne	1f770 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xd8>
   1f788:	mov	r0, #0
   1f78c:	sub	sp, fp, #28
   1f790:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f794:	mov	r0, #2
   1f798:	sub	sp, fp, #28
   1f79c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001f7a0 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base>:
   1f7a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f7a4:	add	fp, sp, #28
   1f7a8:	sub	sp, sp, #4
   1f7ac:	mov	r4, r0
   1f7b0:	mov	r0, #0
   1f7b4:	cmp	r4, #0
   1f7b8:	beq	1f8c0 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x120>
   1f7bc:	ldr	r8, [fp, #8]
   1f7c0:	mov	r5, r3
   1f7c4:	mov	r6, r2
   1f7c8:	mov	r7, r1
   1f7cc:	mov	r0, r4
   1f7d0:	str	r3, [sp]
   1f7d4:	mov	r9, r0
   1f7d8:	ldr	r0, [r0, #32]
   1f7dc:	cmp	r0, #0
   1f7e0:	beq	1f898 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xf8>
   1f7e4:	ldr	sl, [r0, #40]	; 0x28
   1f7e8:	cmp	sl, #0
   1f7ec:	bne	1f800 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x60>
   1f7f0:	b	1f898 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xf8>
   1f7f4:	ldr	sl, [sl]
   1f7f8:	cmp	sl, #0
   1f7fc:	beq	1f898 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xf8>
   1f800:	ldr	r0, [sl, #16]
   1f804:	cmp	r0, r8
   1f808:	bne	1f7f4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x54>
   1f80c:	ldr	r0, [sl, #8]
   1f810:	mov	r1, r5
   1f814:	mov	r2, r8
   1f818:	bl	11298 <mycore_strncasecmp@plt>
   1f81c:	cmp	r0, #0
   1f820:	bne	1f7f4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x54>
   1f824:	ldr	r1, [fp, #12]
   1f828:	ldr	r2, [fp, #16]
   1f82c:	add	r0, sl, #28
   1f830:	blx	r6
   1f834:	cmp	r0, #0
   1f838:	beq	1f7f4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x54>
   1f83c:	ldr	r0, [r7, #8]
   1f840:	ldr	r1, [r7]
   1f844:	add	r2, r0, #1
   1f848:	str	r9, [r1, r0, lsl #2]
   1f84c:	str	r2, [r7, #8]
   1f850:	ldr	r1, [r7, #4]
   1f854:	cmp	r2, r1
   1f858:	movwcs	r2, #1025	; 0x401
   1f85c:	addcs	r2, r0, r2
   1f860:	cmpcs	r2, r1
   1f864:	bcc	1f7f4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x54>
   1f868:	movw	r1, #1026	; 0x402
   1f86c:	mov	r5, r6
   1f870:	add	r6, r0, r1
   1f874:	ldr	r0, [r7]
   1f878:	lsl	r1, r6, #2
   1f87c:	bl	10da0 <mycore_realloc@plt>
   1f880:	cmp	r0, #0
   1f884:	beq	1f8c8 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x128>
   1f888:	stm	r7, {r0, r6}
   1f88c:	mov	r6, r5
   1f890:	ldr	r5, [sp]
   1f894:	b	1f7f4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x54>
   1f898:	ldr	r0, [r9, #20]
   1f89c:	cmp	r0, #0
   1f8a0:	bne	1f7d4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x34>
   1f8a4:	ldr	r0, [r9, #16]
   1f8a8:	cmp	r0, #0
   1f8ac:	bne	1f7d4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x34>
   1f8b0:	ldr	r9, [r9, #24]
   1f8b4:	cmp	r9, r4
   1f8b8:	bne	1f8a4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x104>
   1f8bc:	mov	r0, #0
   1f8c0:	sub	sp, fp, #28
   1f8c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f8c8:	mov	r0, #2
   1f8cc:	sub	sp, fp, #28
   1f8d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001f8d4 <_myhtml_get_nodes_by_attribute_value@@Base>:
   1f8d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f8d8:	add	fp, sp, #28
   1f8dc:	sub	sp, sp, #20
   1f8e0:	ldr	r9, [fp, #24]
   1f8e4:	mov	r5, r2
   1f8e8:	mov	r4, r1
   1f8ec:	mov	r8, r0
   1f8f0:	cmp	r1, #0
   1f8f4:	str	r3, [sp, #16]
   1f8f8:	beq	1f9f0 <_myhtml_get_nodes_by_attribute_value@@Base+0x11c>
   1f8fc:	ldr	r3, [fp, #8]
   1f900:	cmp	r5, #0
   1f904:	ldr	r7, [fp, #20]
   1f908:	ldr	r6, [fp, #16]
   1f90c:	ldreq	r5, [r8, #96]	; 0x60
   1f910:	cmp	r3, #0
   1f914:	ldrne	r0, [fp, #12]
   1f918:	cmpne	r0, #0
   1f91c:	bne	1fa34 <_myhtml_get_nodes_by_attribute_value@@Base+0x160>
   1f920:	cmp	r5, #0
   1f924:	beq	1fa58 <_myhtml_get_nodes_by_attribute_value@@Base+0x184>
   1f928:	ldr	r8, [sp, #16]
   1f92c:	mov	r0, r5
   1f930:	mov	r9, r0
   1f934:	ldr	r0, [r0, #32]
   1f938:	cmp	r0, #0
   1f93c:	beq	1f9c8 <_myhtml_get_nodes_by_attribute_value@@Base+0xf4>
   1f940:	ldr	sl, [r0, #40]	; 0x28
   1f944:	cmp	sl, #0
   1f948:	bne	1f95c <_myhtml_get_nodes_by_attribute_value@@Base+0x88>
   1f94c:	b	1f9c8 <_myhtml_get_nodes_by_attribute_value@@Base+0xf4>
   1f950:	ldr	sl, [sl]
   1f954:	cmp	sl, #0
   1f958:	beq	1f9c8 <_myhtml_get_nodes_by_attribute_value@@Base+0xf4>
   1f95c:	add	r0, sl, #28
   1f960:	mov	r1, r6
   1f964:	mov	r2, r7
   1f968:	blx	r8
   1f96c:	cmp	r0, #0
   1f970:	beq	1f950 <_myhtml_get_nodes_by_attribute_value@@Base+0x7c>
   1f974:	ldr	r0, [r4, #8]
   1f978:	ldr	r1, [r4]
   1f97c:	add	r2, r0, #1
   1f980:	str	r9, [r1, r0, lsl #2]
   1f984:	str	r2, [r4, #8]
   1f988:	ldr	r1, [r4, #4]
   1f98c:	cmp	r2, r1
   1f990:	movwcs	r2, #1025	; 0x401
   1f994:	addcs	r2, r0, r2
   1f998:	cmpcs	r2, r1
   1f99c:	bcc	1f950 <_myhtml_get_nodes_by_attribute_value@@Base+0x7c>
   1f9a0:	movw	r1, #1026	; 0x402
   1f9a4:	add	r8, r0, r1
   1f9a8:	ldr	r0, [r4]
   1f9ac:	lsl	r1, r8, #2
   1f9b0:	bl	10da0 <mycore_realloc@plt>
   1f9b4:	cmp	r0, #0
   1f9b8:	beq	1fa90 <_myhtml_get_nodes_by_attribute_value@@Base+0x1bc>
   1f9bc:	stm	r4, {r0, r8}
   1f9c0:	ldr	r8, [sp, #16]
   1f9c4:	b	1f950 <_myhtml_get_nodes_by_attribute_value@@Base+0x7c>
   1f9c8:	ldr	r0, [r9, #20]
   1f9cc:	cmp	r0, #0
   1f9d0:	bne	1f930 <_myhtml_get_nodes_by_attribute_value@@Base+0x5c>
   1f9d4:	ldr	r0, [r9, #16]
   1f9d8:	cmp	r0, #0
   1f9dc:	bne	1f930 <_myhtml_get_nodes_by_attribute_value@@Base+0x5c>
   1f9e0:	ldr	r9, [r9, #24]
   1f9e4:	cmp	r9, r5
   1f9e8:	bne	1f9d4 <_myhtml_get_nodes_by_attribute_value@@Base+0x100>
   1f9ec:	b	1fa58 <_myhtml_get_nodes_by_attribute_value@@Base+0x184>
   1f9f0:	mov	r0, #12
   1f9f4:	bl	119ac <mycore_malloc@plt>
   1f9f8:	cmp	r0, #0
   1f9fc:	beq	1fa68 <_myhtml_get_nodes_by_attribute_value@@Base+0x194>
   1fa00:	mov	r4, r0
   1fa04:	mov	r7, #0
   1fa08:	mov	r0, #1024	; 0x400
   1fa0c:	stmib	r4, {r0, r7}
   1fa10:	mov	r0, #4096	; 0x1000
   1fa14:	bl	119ac <mycore_malloc@plt>
   1fa18:	cmp	r0, #0
   1fa1c:	str	r0, [r4]
   1fa20:	beq	1fa70 <_myhtml_get_nodes_by_attribute_value@@Base+0x19c>
   1fa24:	cmp	r9, #0
   1fa28:	movne	r0, #0
   1fa2c:	strne	r0, [r9]
   1fa30:	b	1f8fc <_myhtml_get_nodes_by_attribute_value@@Base+0x28>
   1fa34:	stm	sp, {r0, r6, r7}
   1fa38:	mov	r0, r5
   1fa3c:	mov	r1, r4
   1fa40:	ldr	r2, [sp, #16]
   1fa44:	bl	10f2c <myhtml_get_nodes_by_attribute_value_recursion_by_key@plt>
   1fa48:	cmp	r9, #0
   1fa4c:	beq	1fa58 <_myhtml_get_nodes_by_attribute_value@@Base+0x184>
   1fa50:	cmp	r0, #0
   1fa54:	strne	r0, [r9]
   1fa58:	mov	r7, r4
   1fa5c:	mov	r0, r7
   1fa60:	sub	sp, fp, #28
   1fa64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fa68:	mov	r7, #0
   1fa6c:	b	1fa78 <_myhtml_get_nodes_by_attribute_value@@Base+0x1a4>
   1fa70:	mov	r0, r4
   1fa74:	bl	11a9c <mycore_free@plt>
   1fa78:	cmp	r9, #0
   1fa7c:	movne	r0, #2
   1fa80:	strne	r0, [r9]
   1fa84:	mov	r0, r7
   1fa88:	sub	sp, fp, #28
   1fa8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fa90:	ldr	r9, [fp, #24]
   1fa94:	mov	r0, #2
   1fa98:	cmp	r9, #0
   1fa9c:	bne	1fa50 <_myhtml_get_nodes_by_attribute_value@@Base+0x17c>
   1faa0:	b	1fa58 <_myhtml_get_nodes_by_attribute_value@@Base+0x184>

0001faa4 <myhtml_get_nodes_by_attribute_value@@Base>:
   1faa4:	push	{fp, lr}
   1faa8:	mov	fp, sp
   1faac:	ldr	lr, [pc, #28]	; 1fad0 <myhtml_get_nodes_by_attribute_value@@Base+0x2c>
   1fab0:	cmp	r3, #0
   1fab4:	ldr	lr, [pc, lr]
   1fab8:	ldr	ip, [pc, #20]	; 1fad4 <myhtml_get_nodes_by_attribute_value@@Base+0x30>
   1fabc:	ldr	ip, [pc, ip]
   1fac0:	movne	ip, lr
   1fac4:	mov	r3, ip
   1fac8:	pop	{fp, lr}
   1facc:	b	1f8d4 <_myhtml_get_nodes_by_attribute_value@@Base>
   1fad0:	ldrdeq	ip, [pc], -r8
   1fad4:	strdeq	ip, [pc], -r8

0001fad8 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base>:
   1fad8:	push	{fp, lr}
   1fadc:	mov	fp, sp
   1fae0:	ldr	lr, [pc, #28]	; 1fb04 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x2c>
   1fae4:	cmp	r3, #0
   1fae8:	ldr	lr, [pc, lr]
   1faec:	ldr	ip, [pc, #20]	; 1fb08 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x30>
   1faf0:	ldr	ip, [pc, ip]
   1faf4:	movne	ip, lr
   1faf8:	mov	r3, ip
   1fafc:	pop	{fp, lr}
   1fb00:	b	1f8d4 <_myhtml_get_nodes_by_attribute_value@@Base>
   1fb04:	andeq	ip, pc, r8, lsr sl	; <UNPREDICTABLE>
   1fb08:	andeq	ip, pc, r0, asr #24

0001fb0c <myhtml_get_nodes_by_attribute_value_begin@@Base>:
   1fb0c:	push	{fp, lr}
   1fb10:	mov	fp, sp
   1fb14:	ldr	lr, [pc, #28]	; 1fb38 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x2c>
   1fb18:	cmp	r3, #0
   1fb1c:	ldr	lr, [pc, lr]
   1fb20:	ldr	ip, [pc, #20]	; 1fb3c <myhtml_get_nodes_by_attribute_value_begin@@Base+0x30>
   1fb24:	ldr	ip, [pc, ip]
   1fb28:	movne	ip, lr
   1fb2c:	mov	r3, ip
   1fb30:	pop	{fp, lr}
   1fb34:	b	1f8d4 <_myhtml_get_nodes_by_attribute_value@@Base>
   1fb38:	andeq	ip, pc, r0, ror #20
   1fb3c:	andeq	ip, pc, r8, asr #20

0001fb40 <myhtml_get_nodes_by_attribute_value_end@@Base>:
   1fb40:	push	{fp, lr}
   1fb44:	mov	fp, sp
   1fb48:	ldr	lr, [pc, #28]	; 1fb6c <myhtml_get_nodes_by_attribute_value_end@@Base+0x2c>
   1fb4c:	cmp	r3, #0
   1fb50:	ldr	lr, [pc, lr]
   1fb54:	ldr	ip, [pc, #20]	; 1fb70 <myhtml_get_nodes_by_attribute_value_end@@Base+0x30>
   1fb58:	ldr	ip, [pc, ip]
   1fb5c:	movne	ip, lr
   1fb60:	mov	r3, ip
   1fb64:	pop	{fp, lr}
   1fb68:	b	1f8d4 <_myhtml_get_nodes_by_attribute_value@@Base>
   1fb6c:	andeq	ip, pc, r8, lsr ip	; <UNPREDICTABLE>
   1fb70:	andeq	ip, pc, r4, lsr #21

0001fb74 <myhtml_get_nodes_by_attribute_value_contain@@Base>:
   1fb74:	push	{fp, lr}
   1fb78:	mov	fp, sp
   1fb7c:	ldr	lr, [pc, #28]	; 1fba0 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x2c>
   1fb80:	cmp	r3, #0
   1fb84:	ldr	lr, [pc, lr]
   1fb88:	ldr	ip, [pc, #20]	; 1fba4 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x30>
   1fb8c:	ldr	ip, [pc, ip]
   1fb90:	movne	ip, lr
   1fb94:	mov	r3, ip
   1fb98:	pop	{fp, lr}
   1fb9c:	b	1f8d4 <_myhtml_get_nodes_by_attribute_value@@Base>
   1fba0:	andeq	ip, pc, ip, ror #19
   1fba4:	andeq	ip, pc, r4, lsl #22

0001fba8 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base>:
   1fba8:	push	{fp, lr}
   1fbac:	mov	fp, sp
   1fbb0:	ldr	lr, [pc, #28]	; 1fbd4 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x2c>
   1fbb4:	cmp	r3, #0
   1fbb8:	ldr	lr, [pc, lr]
   1fbbc:	ldr	ip, [pc, #20]	; 1fbd8 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x30>
   1fbc0:	ldr	ip, [pc, ip]
   1fbc4:	movne	ip, lr
   1fbc8:	mov	r3, ip
   1fbcc:	pop	{fp, lr}
   1fbd0:	b	1f8d4 <_myhtml_get_nodes_by_attribute_value@@Base>
   1fbd4:	andeq	ip, pc, r4, asr sl	; <UNPREDICTABLE>
   1fbd8:			; <UNDEFINED> instruction: 0x000fcab8

0001fbdc <myhtml_attribute_next@@Base>:
   1fbdc:	ldr	r0, [r0]
   1fbe0:	bx	lr

0001fbe4 <myhtml_attribute_prev@@Base>:
   1fbe4:	ldr	r0, [r0, #4]
   1fbe8:	bx	lr

0001fbec <myhtml_attribute_namespace@@Base>:
   1fbec:	ldr	r0, [r0, #64]	; 0x40
   1fbf0:	bx	lr

0001fbf4 <myhtml_attribute_namespace_set@@Base>:
   1fbf4:	str	r1, [r0, #64]	; 0x40
   1fbf8:	bx	lr

0001fbfc <myhtml_attribute_key@@Base>:
   1fbfc:	mov	r2, r0
   1fc00:	ldr	r0, [r0, #8]
   1fc04:	cmp	r0, #0
   1fc08:	ldrne	r2, [r2, #16]
   1fc0c:	cmpne	r2, #0
   1fc10:	bne	1fc24 <myhtml_attribute_key@@Base+0x28>
   1fc14:	mov	r0, #0
   1fc18:	cmp	r1, #0
   1fc1c:	strne	r0, [r1]
   1fc20:	bx	lr
   1fc24:	cmp	r1, #0
   1fc28:	strne	r2, [r1]
   1fc2c:	bxne	lr
   1fc30:	bx	lr

0001fc34 <myhtml_attribute_value@@Base>:
   1fc34:	mov	r2, r0
   1fc38:	ldr	r0, [r0, #28]
   1fc3c:	cmp	r0, #0
   1fc40:	ldrne	r2, [r2, #36]	; 0x24
   1fc44:	cmpne	r2, #0
   1fc48:	bne	1fc5c <myhtml_attribute_value@@Base+0x28>
   1fc4c:	mov	r0, #0
   1fc50:	cmp	r1, #0
   1fc54:	strne	r0, [r1]
   1fc58:	bx	lr
   1fc5c:	cmp	r1, #0
   1fc60:	strne	r2, [r1]
   1fc64:	bxne	lr
   1fc68:	bx	lr

0001fc6c <myhtml_attribute_key_string@@Base>:
   1fc6c:	cmp	r0, #0
   1fc70:	addne	r0, r0, #8
   1fc74:	bx	lr

0001fc78 <myhtml_attribute_value_string@@Base>:
   1fc78:	cmp	r0, #0
   1fc7c:	addne	r0, r0, #28
   1fc80:	bx	lr

0001fc84 <myhtml_attribute_by_key@@Base>:
   1fc84:	cmp	r0, #0
   1fc88:	ldrne	r0, [r0, #32]
   1fc8c:	cmpne	r0, #0
   1fc90:	bne	1fc9c <myhtml_attribute_by_key@@Base+0x18>
   1fc94:	mov	r0, #0
   1fc98:	bx	lr
   1fc9c:	b	11b38 <myhtml_token_attr_by_name@plt>

0001fca0 <myhtml_attribute_add@@Base>:
   1fca0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1fca4:	add	fp, sp, #24
   1fca8:	sub	sp, sp, #16
   1fcac:	cmp	r0, #0
   1fcb0:	beq	1fd2c <myhtml_attribute_add@@Base+0x8c>
   1fcb4:	mov	r5, r1
   1fcb8:	ldr	r1, [r0, #32]
   1fcbc:	ldr	r4, [r0, #40]	; 0x28
   1fcc0:	mov	r6, r3
   1fcc4:	mov	r8, r2
   1fcc8:	mov	r7, r0
   1fccc:	cmp	r1, #0
   1fcd0:	bne	1fcfc <myhtml_attribute_add@@Base+0x5c>
   1fcd4:	ldr	r0, [r4, #8]
   1fcd8:	ldr	r1, [r4, #40]	; 0x28
   1fcdc:	bl	117e4 <myhtml_token_node_create@plt>
   1fce0:	cmp	r0, #0
   1fce4:	str	r0, [r7, #32]
   1fce8:	beq	1fd2c <myhtml_attribute_add@@Base+0x8c>
   1fcec:	mov	r1, r0
   1fcf0:	ldr	r0, [r0, #48]	; 0x30
   1fcf4:	orr	r0, r0, #4
   1fcf8:	str	r0, [r1, #48]	; 0x30
   1fcfc:	ldr	r2, [fp, #12]
   1fd00:	ldr	r3, [fp, #8]
   1fd04:	ldr	r7, [r4, #40]	; 0x28
   1fd08:	ldr	r0, [r4, #8]
   1fd0c:	str	r6, [sp]
   1fd10:	stmib	sp, {r3, r7}
   1fd14:	str	r2, [sp, #12]
   1fd18:	mov	r2, r5
   1fd1c:	mov	r3, r8
   1fd20:	bl	11658 <myhtml_token_node_attr_append_with_convert_encoding@plt>
   1fd24:	sub	sp, fp, #24
   1fd28:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1fd2c:	mov	r0, #0
   1fd30:	sub	sp, fp, #24
   1fd34:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001fd38 <myhtml_attribute_remove@@Base>:
   1fd38:	cmp	r0, #0
   1fd3c:	ldrne	r0, [r0, #32]
   1fd40:	cmpne	r0, #0
   1fd44:	bne	1fd50 <myhtml_attribute_remove@@Base+0x18>
   1fd48:	mov	r0, #0
   1fd4c:	bx	lr
   1fd50:	b	114c0 <myhtml_token_attr_remove@plt>

0001fd54 <myhtml_attribute_remove_by_key@@Base>:
   1fd54:	cmp	r0, #0
   1fd58:	ldrne	r0, [r0, #32]
   1fd5c:	cmpne	r0, #0
   1fd60:	bne	1fd6c <myhtml_attribute_remove_by_key@@Base+0x18>
   1fd64:	mov	r0, #0
   1fd68:	bx	lr
   1fd6c:	b	11b2c <myhtml_token_attr_remove_by_name@plt>

0001fd70 <myhtml_attribute_delete@@Base>:
   1fd70:	push	{r4, r5, fp, lr}
   1fd74:	add	fp, sp, #8
   1fd78:	cmp	r1, #0
   1fd7c:	beq	1fde0 <myhtml_attribute_delete@@Base+0x70>
   1fd80:	mov	r5, r0
   1fd84:	ldr	r0, [r1, #32]
   1fd88:	cmp	r0, #0
   1fd8c:	popeq	{r4, r5, fp, pc}
   1fd90:	mov	r1, r2
   1fd94:	mov	r4, r2
   1fd98:	bl	114c0 <myhtml_token_attr_remove@plt>
   1fd9c:	ldr	r2, [r4, #8]
   1fda0:	cmp	r2, #0
   1fda4:	beq	1fdb4 <myhtml_attribute_delete@@Base+0x44>
   1fda8:	ldr	r0, [r4, #20]
   1fdac:	ldr	r1, [r4, #24]
   1fdb0:	bl	115c8 <mchar_async_free@plt>
   1fdb4:	ldr	r2, [r4, #28]
   1fdb8:	cmp	r2, #0
   1fdbc:	beq	1fdcc <myhtml_attribute_delete@@Base+0x5c>
   1fdc0:	ldr	r0, [r4, #40]	; 0x28
   1fdc4:	ldr	r1, [r4, #44]	; 0x2c
   1fdc8:	bl	115c8 <mchar_async_free@plt>
   1fdcc:	ldr	r0, [r5, #8]
   1fdd0:	mov	r1, r4
   1fdd4:	ldr	r0, [r0, #8]
   1fdd8:	pop	{r4, r5, fp, lr}
   1fddc:	b	1110c <mcobject_async_free@plt>
   1fde0:	pop	{r4, r5, fp, pc}

0001fde4 <myhtml_attribute_free@@Base>:
   1fde4:	push	{r4, r5, fp, lr}
   1fde8:	add	fp, sp, #8
   1fdec:	ldr	r2, [r1, #8]
   1fdf0:	mov	r4, r1
   1fdf4:	mov	r5, r0
   1fdf8:	cmp	r2, #0
   1fdfc:	beq	1fe0c <myhtml_attribute_free@@Base+0x28>
   1fe00:	ldr	r0, [r4, #20]
   1fe04:	ldr	r1, [r4, #24]
   1fe08:	bl	115c8 <mchar_async_free@plt>
   1fe0c:	ldr	r2, [r4, #28]
   1fe10:	cmp	r2, #0
   1fe14:	beq	1fe24 <myhtml_attribute_free@@Base+0x40>
   1fe18:	ldr	r0, [r4, #40]	; 0x28
   1fe1c:	ldr	r1, [r4, #44]	; 0x2c
   1fe20:	bl	115c8 <mchar_async_free@plt>
   1fe24:	ldr	r0, [r5, #8]
   1fe28:	mov	r1, r4
   1fe2c:	ldr	r0, [r0, #8]
   1fe30:	pop	{r4, r5, fp, lr}
   1fe34:	b	1110c <mcobject_async_free@plt>

0001fe38 <myhtml_attribute_key_raw_position@@Base>:
   1fe38:	cmp	r1, #0
   1fe3c:	ldrne	r2, [r1, #48]	; 0x30
   1fe40:	ldrne	r1, [r1, #52]	; 0x34
   1fe44:	strne	r2, [r0]
   1fe48:	strne	r1, [r0, #4]
   1fe4c:	bxne	lr
   1fe50:	mov	r1, #0
   1fe54:	str	r1, [r0]
   1fe58:	str	r1, [r0, #4]
   1fe5c:	bx	lr

0001fe60 <myhtml_attribute_value_raw_position@@Base>:
   1fe60:	cmp	r1, #0
   1fe64:	ldrne	r2, [r1, #56]	; 0x38
   1fe68:	ldrne	r1, [r1, #60]	; 0x3c
   1fe6c:	strne	r2, [r0]
   1fe70:	strne	r1, [r0, #4]
   1fe74:	bxne	lr
   1fe78:	mov	r1, #0
   1fe7c:	str	r1, [r0]
   1fe80:	str	r1, [r0, #4]
   1fe84:	bx	lr

0001fe88 <myhtml_collection_clean@@Base>:
   1fe88:	cmp	r0, #0
   1fe8c:	movne	r1, #0
   1fe90:	strne	r1, [r0, #8]
   1fe94:	bx	lr

0001fe98 <myhtml_collection_destroy@@Base>:
   1fe98:	cmp	r0, #0
   1fe9c:	beq	1fec8 <myhtml_collection_destroy@@Base+0x30>
   1fea0:	push	{r4, sl, fp, lr}
   1fea4:	add	fp, sp, #8
   1fea8:	mov	r4, r0
   1feac:	ldr	r0, [r0]
   1feb0:	cmp	r0, #0
   1feb4:	beq	1febc <myhtml_collection_destroy@@Base+0x24>
   1feb8:	bl	11a9c <mycore_free@plt>
   1febc:	mov	r0, r4
   1fec0:	bl	11a9c <mycore_free@plt>
   1fec4:	pop	{r4, sl, fp, lr}
   1fec8:	mov	r0, #0
   1fecc:	bx	lr

0001fed0 <myhtml_queue_add@@Base>:
   1fed0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1fed4:	add	fp, sp, #24
   1fed8:	mov	r5, r0
   1fedc:	ldr	r7, [r0, #68]	; 0x44
   1fee0:	ldr	r0, [r0, #184]	; 0xb8
   1fee4:	cmp	r2, #0
   1fee8:	mov	r6, r2
   1feec:	mov	r8, r1
   1fef0:	andsne	r0, r0, #4
   1fef4:	bne	20000 <myhtml_queue_add@@Base+0x130>
   1fef8:	ldr	r0, [r5, #180]	; 0xb4
   1fefc:	tst	r0, #16
   1ff00:	bne	1ff64 <myhtml_queue_add@@Base+0x94>
   1ff04:	cmp	r7, #0
   1ff08:	strne	r6, [r7, #4]
   1ff0c:	ldr	r0, [r5]
   1ff10:	ldr	r1, [r5, #20]
   1ff14:	ldr	r0, [r0]
   1ff18:	bl	11484 <mythread_queue_node_malloc_round@plt>
   1ff1c:	str	r0, [r5, #68]	; 0x44
   1ff20:	ldr	r1, [r5, #20]
   1ff24:	ldr	r2, [r1]
   1ff28:	ldr	r2, [r2, #12]
   1ff2c:	cmp	r2, #0
   1ff30:	bne	1ffa8 <myhtml_queue_add@@Base+0xd8>
   1ff34:	ldr	r0, [r5]
   1ff38:	ldr	r0, [r0, #4]
   1ff3c:	bl	11a0c <mythread_queue_list_entry_make_batch@plt>
   1ff40:	ldr	r0, [r5]
   1ff44:	ldr	r1, [r5, #20]
   1ff48:	ldr	r0, [r0]
   1ff4c:	bl	11b5c <mythread_queue_list_entry_make_stream@plt>
   1ff50:	ldr	r0, [r5, #68]	; 0x44
   1ff54:	mov	r4, #2
   1ff58:	cmp	r0, #0
   1ff5c:	bne	1ffb4 <myhtml_queue_add@@Base+0xe4>
   1ff60:	b	20034 <myhtml_queue_add@@Base+0x164>
   1ff64:	cmp	r6, #0
   1ff68:	cmpne	r7, #0
   1ff6c:	beq	1ff8c <myhtml_queue_add@@Base+0xbc>
   1ff70:	mov	r0, #0
   1ff74:	mov	r1, r7
   1ff78:	str	r6, [r7, #4]
   1ff7c:	bl	10ee4 <myhtml_parser_worker@plt>
   1ff80:	mov	r0, #0
   1ff84:	mov	r1, r7
   1ff88:	bl	11c1c <myhtml_parser_stream@plt>
   1ff8c:	ldr	r0, [r5]
   1ff90:	ldr	r1, [r5, #24]
   1ff94:	mov	r2, #4
   1ff98:	mov	r3, #0
   1ff9c:	ldr	r0, [r0]
   1ffa0:	bl	119c4 <mythread_queue_node_malloc_limit@plt>
   1ffa4:	str	r0, [r5, #68]	; 0x44
   1ffa8:	mov	r4, #2
   1ffac:	cmp	r0, #0
   1ffb0:	beq	20034 <myhtml_queue_add@@Base+0x164>
   1ffb4:	cmp	r6, #0
   1ffb8:	str	r7, [r0, #8]
   1ffbc:	str	r5, [r0]
   1ffc0:	cmpne	r7, #0
   1ffc4:	beq	1ffd4 <myhtml_queue_add@@Base+0x104>
   1ffc8:	mov	r0, r5
   1ffcc:	mov	r1, r6
   1ffd0:	bl	11244 <myhtml_tokenizer_calc_current_namespace@plt>
   1ffd4:	ldr	r0, [r5, #8]
   1ffd8:	ldr	r1, [r0, #12]
   1ffdc:	bl	117e4 <myhtml_token_node_create@plt>
   1ffe0:	cmp	r0, #0
   1ffe4:	str	r0, [r5, #64]	; 0x40
   1ffe8:	beq	20034 <myhtml_queue_add@@Base+0x164>
   1ffec:	ldr	r1, [r5, #192]	; 0xc0
   1fff0:	add	r1, r1, r8
   1fff4:	str	r1, [r0, #24]
   1fff8:	str	r1, [r0, #32]
   1fffc:	b	20030 <myhtml_queue_add@@Base+0x160>
   20000:	ldr	r0, [r6]
   20004:	cmp	r0, #1
   20008:	bne	1fef8 <myhtml_queue_add@@Base+0x28>
   2000c:	ldr	r0, [r6, #48]	; 0x30
   20010:	tst	r0, #8
   20014:	beq	1fef8 <myhtml_queue_add@@Base+0x28>
   20018:	mov	r0, r6
   2001c:	bl	11bc8 <myhtml_token_node_clean@plt>
   20020:	ldr	r0, [r5, #192]	; 0xc0
   20024:	add	r0, r0, r8
   20028:	str	r0, [r6, #24]
   2002c:	str	r0, [r6, #32]
   20030:	mov	r4, #0
   20034:	mov	r0, r4
   20038:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002003c <myhtml_utils_strcmp@@Base>:
   2003c:	push	{fp, lr}
   20040:	mov	fp, sp
   20044:	mov	ip, r0
   20048:	mov	r0, #1
   2004c:	cmp	r2, #0
   20050:	bne	20068 <myhtml_utils_strcmp@@Base+0x2c>
   20054:	pop	{fp, pc}
   20058:	subs	r2, r2, #1
   2005c:	add	ip, ip, #1
   20060:	add	r1, r1, #1
   20064:	popeq	{fp, pc}
   20068:	ldrb	lr, [r1]
   2006c:	sub	r3, lr, #65	; 0x41
   20070:	uxtb	r3, r3
   20074:	cmp	r3, #26
   20078:	ldrb	r3, [ip]
   2007c:	orrcc	lr, lr, #96	; 0x60
   20080:	uxtb	lr, lr
   20084:	cmp	lr, r3
   20088:	beq	20058 <myhtml_utils_strcmp@@Base+0x1c>
   2008c:	mov	r0, #0
   20090:	pop	{fp, pc}

00020094 <myhtml_is_html_node@@Base>:
   20094:	mov	r2, r0
   20098:	mov	r0, #0
   2009c:	cmp	r2, #0
   200a0:	bxeq	lr
   200a4:	ldr	r3, [r2, #4]
   200a8:	cmp	r3, r1
   200ac:	ldreq	r0, [r2, #8]
   200b0:	subeq	r0, r0, #1
   200b4:	clzeq	r0, r0
   200b8:	lsreq	r0, r0, #5
   200bc:	bx	lr

000200c0 <myhtml_version@@Base>:
   200c0:	mov	r2, #4
   200c4:	mov	r1, #0
   200c8:	mov	r3, #5
   200cc:	str	r2, [r0]
   200d0:	stmib	r0, {r1, r3}
   200d4:	bx	lr

000200d8 <myhtml_node_clone@@Base>:
   200d8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   200dc:	add	fp, sp, #24
   200e0:	sub	sp, sp, #8
   200e4:	mov	r5, r1
   200e8:	mov	r6, r0
   200ec:	bl	110ac <myhtml_tree_node_create@plt>
   200f0:	ldr	r7, [r5, #4]
   200f4:	mov	r4, r0
   200f8:	cmp	r7, #252	; 0xfc
   200fc:	bcc	2016c <myhtml_node_clone@@Base+0x94>
   20100:	ldr	r0, [r6, #28]
   20104:	mov	r1, r7
   20108:	bl	117fc <myhtml_tag_get_by_id@plt>
   2010c:	mov	r9, r0
   20110:	ldr	r0, [r5, #40]	; 0x28
   20114:	ldr	r1, [r5, #4]
   20118:	ldr	r0, [r0, #28]
   2011c:	bl	117fc <myhtml_tag_get_by_id@plt>
   20120:	mov	r8, r0
   20124:	cmp	r9, #0
   20128:	beq	20150 <myhtml_node_clone@@Base+0x78>
   2012c:	ldr	r2, [r9, #8]
   20130:	ldr	r0, [r8, #8]
   20134:	cmp	r2, r0
   20138:	bne	20150 <myhtml_node_clone@@Base+0x78>
   2013c:	ldr	r1, [r8, #4]
   20140:	ldr	r0, [r9, #4]
   20144:	bl	11b68 <mycore_strncmp@plt>
   20148:	cmp	r0, #0
   2014c:	beq	2016c <myhtml_node_clone@@Base+0x94>
   20150:	ldmib	r8, {r1, r2}
   20154:	ldr	r0, [r6, #28]
   20158:	mov	r3, #1
   2015c:	str	r3, [sp]
   20160:	mov	r3, #0
   20164:	bl	110d0 <myhtml_tag_add@plt>
   20168:	mov	r7, r0
   2016c:	ldr	r1, [r5, #32]
   20170:	ldr	r0, [r6, #8]
   20174:	ldr	r2, [r6, #40]	; 0x28
   20178:	ldr	r3, [r6, #44]	; 0x2c
   2017c:	bl	1101c <myhtml_token_node_clone@plt>
   20180:	str	r0, [r4, #32]
   20184:	str	r7, [r4, #4]
   20188:	cmp	r0, #0
   2018c:	ldr	r1, [r5, #8]
   20190:	str	r1, [r4, #8]
   20194:	strne	r7, [r0]
   20198:	ldrne	r1, [r0, #48]	; 0x30
   2019c:	orrne	r1, r1, #4
   201a0:	strne	r1, [r0, #48]	; 0x30
   201a4:	mov	r0, r4
   201a8:	sub	sp, fp, #24
   201ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000201b0 <myhtml_node_clone_deep@@Base>:
   201b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   201b4:	add	fp, sp, #28
   201b8:	sub	sp, sp, #4
   201bc:	mov	r5, r1
   201c0:	mov	r9, r0
   201c4:	mov	r7, #0
   201c8:	cmp	r1, #0
   201cc:	mov	r4, #0
   201d0:	beq	201f4 <myhtml_node_clone_deep@@Base+0x44>
   201d4:	ldr	r0, [r5, #40]	; 0x28
   201d8:	mov	r4, r5
   201dc:	cmp	r0, #0
   201e0:	beq	201f4 <myhtml_node_clone_deep@@Base+0x44>
   201e4:	ldr	r0, [r0, #84]	; 0x54
   201e8:	mov	r4, r5
   201ec:	cmp	r0, r5
   201f0:	ldreq	r4, [r5, #20]
   201f4:	mov	r0, r9
   201f8:	mov	r1, r4
   201fc:	bl	11b8c <myhtml_node_clone@plt>
   20200:	cmp	r0, #0
   20204:	beq	20294 <myhtml_node_clone_deep@@Base+0xe4>
   20208:	ldr	r4, [r4, #20]
   2020c:	mov	sl, r0
   20210:	cmp	r4, #0
   20214:	beq	202a0 <myhtml_node_clone_deep@@Base+0xf0>
   20218:	mov	r0, r9
   2021c:	mov	r1, r4
   20220:	bl	11b8c <myhtml_node_clone@plt>
   20224:	cmp	r0, #0
   20228:	beq	20294 <myhtml_node_clone_deep@@Base+0xe4>
   2022c:	mov	r6, r0
   20230:	mov	r7, sl
   20234:	mov	r0, r7
   20238:	mov	r1, r6
   2023c:	bl	1158c <myhtml_tree_node_add_child@plt>
   20240:	ldr	r8, [r4, #20]
   20244:	cmp	r8, #0
   20248:	bne	20270 <myhtml_node_clone_deep@@Base+0xc0>
   2024c:	b	20258 <myhtml_node_clone_deep@@Base+0xa8>
   20250:	ldr	r4, [r4, #24]
   20254:	ldr	r7, [r7, #24]
   20258:	cmp	r4, r5
   2025c:	beq	202a0 <myhtml_node_clone_deep@@Base+0xf0>
   20260:	ldr	r8, [r4, #16]
   20264:	cmp	r8, #0
   20268:	beq	20250 <myhtml_node_clone_deep@@Base+0xa0>
   2026c:	mov	r6, r7
   20270:	mov	r0, r9
   20274:	mov	r1, r8
   20278:	mov	r7, r6
   2027c:	bl	11b8c <myhtml_node_clone@plt>
   20280:	mov	r6, r0
   20284:	cmp	r0, #0
   20288:	mov	r4, r8
   2028c:	bne	20234 <myhtml_node_clone_deep@@Base+0x84>
   20290:	mov	r7, #0
   20294:	mov	r0, r7
   20298:	sub	sp, fp, #28
   2029c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   202a0:	mov	r7, sl
   202a4:	mov	r0, r7
   202a8:	sub	sp, fp, #28
   202ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000202b0 <myhtml_namespace_name_entry_by_name@@Base>:
   202b0:	push	{r4, sl, fp, lr}
   202b4:	add	fp, sp, #8
   202b8:	mov	r2, r1
   202bc:	mov	ip, r0
   202c0:	ldrb	r1, [r0], r1
   202c4:	ldrb	r0, [r0, #-1]
   202c8:	ldr	r3, [pc, #172]	; 2037c <myhtml_namespace_name_entry_by_name@@Base+0xcc>
   202cc:	ldr	lr, [pc, #172]	; 20380 <myhtml_namespace_name_entry_by_name@@Base+0xd0>
   202d0:	add	r3, pc, r3
   202d4:	add	lr, pc, lr
   202d8:	ldrb	r1, [r3, r1]
   202dc:	ldrb	r0, [r3, r0]
   202e0:	mul	r1, r1, r2
   202e4:	mul	r0, r1, r0
   202e8:	movw	r1, #27595	; 0x6bcb
   202ec:	movt	r1, #44840	; 0xaf28
   202f0:	umull	r1, r3, r0, r1
   202f4:	sub	r1, r0, r3
   202f8:	add	r1, r3, r1, lsr #1
   202fc:	mov	r3, #19
   20300:	lsr	r1, r1, #4
   20304:	mls	r0, r1, r3, r0
   20308:	add	r1, r0, #1
   2030c:	add	r3, r1, r1, lsl #2
   20310:	mov	r4, lr
   20314:	ldr	r0, [r4, r3, lsl #2]!
   20318:	cmp	r0, #0
   2031c:	bne	20344 <myhtml_namespace_name_entry_by_name@@Base+0x94>
   20320:	b	2035c <myhtml_namespace_name_entry_by_name@@Base+0xac>
   20324:	add	r0, r1, r1, lsl #2
   20328:	add	r0, lr, r0, lsl #2
   2032c:	ldr	r1, [r0, #12]
   20330:	add	r3, r1, r1, lsl #2
   20334:	mov	r4, lr
   20338:	ldr	r0, [r4, r3, lsl #2]!
   2033c:	cmp	r0, #0
   20340:	beq	2035c <myhtml_namespace_name_entry_by_name@@Base+0xac>
   20344:	add	r3, lr, r3, lsl #2
   20348:	ldr	r3, [r3, #4]
   2034c:	cmp	r3, r2
   20350:	beq	20364 <myhtml_namespace_name_entry_by_name@@Base+0xb4>
   20354:	cmp	r3, r2
   20358:	bls	20324 <myhtml_namespace_name_entry_by_name@@Base+0x74>
   2035c:	mov	r0, #0
   20360:	pop	{r4, sl, fp, pc}
   20364:	mov	r1, ip
   20368:	bl	11298 <mycore_strncasecmp@plt>
   2036c:	cmp	r0, #0
   20370:	movne	r4, #0
   20374:	mov	r0, r4
   20378:	pop	{r4, sl, fp, pc}
   2037c:	andeq	r2, lr, ip, ror r1
   20380:	andeq	r7, pc, r4, lsl r1	; <UNPREDICTABLE>

00020384 <myhtml_namespace_id_by_name@@Base>:
   20384:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   20388:	add	fp, sp, #24
   2038c:	mov	r8, r2
   20390:	mov	r2, r1
   20394:	mov	r1, r0
   20398:	mov	r9, #0
   2039c:	ldrb	r3, [r0], r2
   203a0:	ldrb	r0, [r0, #-1]
   203a4:	ldr	r7, [pc, #184]	; 20464 <myhtml_namespace_id_by_name@@Base+0xe0>
   203a8:	add	r7, pc, r7
   203ac:	ldrb	r3, [r7, r3]
   203b0:	ldrb	r0, [r7, r0]
   203b4:	mul	r3, r3, r2
   203b8:	mul	r0, r3, r0
   203bc:	movw	r3, #27595	; 0x6bcb
   203c0:	movt	r3, #44840	; 0xaf28
   203c4:	umull	r3, r7, r0, r3
   203c8:	sub	r3, r0, r7
   203cc:	add	r3, r7, r3, lsr #1
   203d0:	mov	r7, #19
   203d4:	lsr	r3, r3, #4
   203d8:	mls	r3, r3, r7, r0
   203dc:	movw	r7, #58783	; 0xe59f
   203e0:	mov	r0, #1
   203e4:	movt	r7, #3
   203e8:	tst	r0, r7, lsr r3
   203ec:	bne	2043c <myhtml_namespace_id_by_name@@Base+0xb8>
   203f0:	add	r6, r3, #1
   203f4:	ldr	r3, [pc, #108]	; 20468 <myhtml_namespace_id_by_name@@Base+0xe4>
   203f8:	movw	r4, #52031	; 0xcb3f
   203fc:	movt	r4, #7
   20400:	add	r3, pc, r3
   20404:	add	r7, r6, r6, lsl #2
   20408:	add	r6, r3, r7, lsl #2
   2040c:	ldr	r5, [r6, #4]
   20410:	cmp	r5, r2
   20414:	beq	2042c <myhtml_namespace_id_by_name@@Base+0xa8>
   20418:	bhi	2043c <myhtml_namespace_id_by_name@@Base+0xb8>
   2041c:	ldr	r6, [r6, #12]
   20420:	tst	r0, r4, lsr r6
   20424:	beq	20404 <myhtml_namespace_id_by_name@@Base+0x80>
   20428:	b	2043c <myhtml_namespace_id_by_name@@Base+0xb8>
   2042c:	ldr	r0, [r3, r7, lsl #2]
   20430:	bl	11298 <mycore_strncasecmp@plt>
   20434:	cmp	r0, #0
   20438:	beq	20444 <myhtml_namespace_id_by_name@@Base+0xc0>
   2043c:	mov	r0, r9
   20440:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   20444:	cmp	r8, #0
   20448:	mov	r9, #1
   2044c:	ldrne	r0, [r6, #8]
   20450:	strne	r0, [r8]
   20454:	movne	r0, r9
   20458:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   2045c:	mov	r0, r9
   20460:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   20464:	andeq	r2, lr, r4, lsr #1
   20468:	andeq	r6, pc, r8, ror #31

0002046c <myhtml_namespace_name_by_id@@Base>:
   2046c:	push	{r4, r5, fp, lr}
   20470:	add	fp, sp, #8
   20474:	mov	r5, r1
   20478:	cmp	r0, #8
   2047c:	bcc	2049c <myhtml_namespace_name_by_id@@Base+0x30>
   20480:	mov	r4, #0
   20484:	cmp	r5, #0
   20488:	movne	r0, r4
   2048c:	strne	r4, [r5]
   20490:	popne	{r4, r5, fp, pc}
   20494:	mov	r0, r4
   20498:	pop	{r4, r5, fp, pc}
   2049c:	ldr	r1, [pc, #32]	; 204c4 <myhtml_namespace_name_by_id@@Base+0x58>
   204a0:	cmp	r5, #0
   204a4:	add	r1, pc, r1
   204a8:	add	r4, r1, r0, lsl #3
   204ac:	beq	204bc <myhtml_namespace_name_by_id@@Base+0x50>
   204b0:	mov	r0, r4
   204b4:	bl	11550 <strlen@plt>
   204b8:	str	r0, [r5]
   204bc:	mov	r0, r4
   204c0:	pop	{r4, r5, fp, pc}
   204c4:	andeq	r2, lr, r8, lsr #1

000204c8 <myhtml_namespace_url_by_id@@Base>:
   204c8:	cmp	r0, #8
   204cc:	bcc	204e4 <myhtml_namespace_url_by_id@@Base+0x1c>
   204d0:	mov	r0, #0
   204d4:	cmp	r1, #0
   204d8:	strne	r0, [r1]
   204dc:	bxne	lr
   204e0:	bx	lr
   204e4:	cmp	r1, #0
   204e8:	beq	20504 <myhtml_namespace_url_by_id@@Base+0x3c>
   204ec:	ldr	r3, [pc, #36]	; 20518 <myhtml_namespace_url_by_id@@Base+0x50>
   204f0:	add	r2, r0, r0, lsl #1
   204f4:	add	r3, pc, r3
   204f8:	add	r2, r3, r2, lsl #2
   204fc:	ldr	r2, [r2, #4]
   20500:	str	r2, [r1]
   20504:	ldr	r1, [pc, #16]	; 2051c <myhtml_namespace_url_by_id@@Base+0x54>
   20508:	add	r0, r0, r0, lsl #1
   2050c:	add	r1, pc, r1
   20510:	ldr	r0, [r1, r0, lsl #2]
   20514:	bx	lr
   20518:	andeq	r7, pc, r4, lsl #1
   2051c:	andeq	r7, pc, ip, rrx

00020520 <myhtml_namespace_id_by_url@@Base>:
   20520:	mov	r0, #0
   20524:	bx	lr

00020528 <myhtml_string_append_with_preprocessing@@Base>:
   20528:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2052c:	add	fp, sp, #28
   20530:	sub	sp, sp, #4
   20534:	mov	r4, r0
   20538:	mov	r6, r1
   2053c:	ldr	r0, [r0, #4]
   20540:	mov	r7, r3
   20544:	mov	r5, r2
   20548:	ldr	r1, [r4, #8]
   2054c:	add	r1, r2, r1
   20550:	add	r1, r1, #1
   20554:	cmp	r1, r0
   20558:	bcc	20564 <myhtml_string_append_with_preprocessing@@Base+0x3c>
   2055c:	mov	r0, r4
   20560:	bl	11778 <mycore_string_realloc@plt>
   20564:	cmp	r5, #0
   20568:	beq	205d0 <myhtml_string_append_with_preprocessing@@Base+0xa8>
   2056c:	ldr	r0, [r4]
   20570:	cmp	r7, #0
   20574:	beq	205d8 <myhtml_string_append_with_preprocessing@@Base+0xb0>
   20578:	ldr	r2, [r4, #8]
   2057c:	mov	r1, #0
   20580:	mov	r3, #10
   20584:	ldrb	r7, [r6, r1]
   20588:	cmp	r7, #13
   2058c:	bne	205b0 <myhtml_string_append_with_preprocessing@@Base+0x88>
   20590:	strb	r3, [r0, r2]
   20594:	add	r2, r1, #1
   20598:	cmp	r2, r5
   2059c:	bcs	20698 <myhtml_string_append_with_preprocessing@@Base+0x170>
   205a0:	ldrb	r7, [r6, r2]
   205a4:	cmp	r7, #10
   205a8:	moveq	r1, r2
   205ac:	b	205b4 <myhtml_string_append_with_preprocessing@@Base+0x8c>
   205b0:	strb	r7, [r0, r2]
   205b4:	ldr	r2, [r4, #8]
   205b8:	add	r1, r1, #1
   205bc:	cmp	r1, r5
   205c0:	add	r2, r2, #1
   205c4:	str	r2, [r4, #8]
   205c8:	bcc	20584 <myhtml_string_append_with_preprocessing@@Base+0x5c>
   205cc:	b	20684 <myhtml_string_append_with_preprocessing@@Base+0x15c>
   205d0:	ldr	r2, [r4, #8]
   205d4:	b	20684 <myhtml_string_append_with_preprocessing@@Base+0x15c>
   205d8:	mov	r7, #0
   205dc:	mov	r9, #191	; 0xbf
   205e0:	mov	sl, #189	; 0xbd
   205e4:	mov	r8, #10
   205e8:	ldrb	r1, [r6, r7]
   205ec:	cmp	r1, #0
   205f0:	beq	20620 <myhtml_string_append_with_preprocessing@@Base+0xf8>
   205f4:	cmp	r1, #13
   205f8:	bne	20664 <myhtml_string_append_with_preprocessing@@Base+0x13c>
   205fc:	ldr	r1, [r4, #8]
   20600:	strb	r8, [r0, r1]
   20604:	add	r1, r7, #1
   20608:	cmp	r1, r5
   2060c:	bcs	20698 <myhtml_string_append_with_preprocessing@@Base+0x170>
   20610:	ldrb	r2, [r6, r1]
   20614:	cmp	r2, #10
   20618:	moveq	r7, r1
   2061c:	b	2066c <myhtml_string_append_with_preprocessing@@Base+0x144>
   20620:	ldr	r0, [r4, #4]
   20624:	add	r1, r0, #5
   20628:	mov	r0, r4
   2062c:	bl	11778 <mycore_string_realloc@plt>
   20630:	ldr	r0, [r4]
   20634:	ldr	r1, [r4, #8]
   20638:	mov	r2, #239	; 0xef
   2063c:	strb	r2, [r0, r1]
   20640:	ldr	r1, [r4, #8]
   20644:	add	r1, r1, #1
   20648:	str	r1, [r4, #8]
   2064c:	strb	r9, [r0, r1]
   20650:	ldr	r1, [r4, #8]
   20654:	add	r1, r1, #1
   20658:	str	r1, [r4, #8]
   2065c:	strb	sl, [r0, r1]
   20660:	b	2066c <myhtml_string_append_with_preprocessing@@Base+0x144>
   20664:	ldr	r2, [r4, #8]
   20668:	strb	r1, [r0, r2]
   2066c:	ldr	r1, [r4, #8]
   20670:	add	r7, r7, #1
   20674:	cmp	r7, r5
   20678:	add	r2, r1, #1
   2067c:	str	r2, [r4, #8]
   20680:	bcc	205e8 <myhtml_string_append_with_preprocessing@@Base+0xc0>
   20684:	ldr	r1, [r4]
   20688:	mov	r0, #0
   2068c:	strb	r0, [r1, r2]
   20690:	sub	sp, fp, #28
   20694:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20698:	ldr	r1, [r4, #8]
   2069c:	ldr	r2, [r4, #4]
   206a0:	add	r0, r1, #1
   206a4:	cmp	r0, r2
   206a8:	str	r0, [r4, #8]
   206ac:	bcc	206c0 <myhtml_string_append_with_preprocessing@@Base+0x198>
   206b0:	add	r1, r1, #3
   206b4:	mov	r0, r4
   206b8:	bl	11778 <mycore_string_realloc@plt>
   206bc:	ldr	r0, [r4, #8]
   206c0:	ldr	r1, [r4]
   206c4:	mov	r2, #0
   206c8:	strb	r2, [r1, r0]
   206cc:	ldr	r0, [r4, #8]
   206d0:	sub	sp, fp, #28
   206d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000206d8 <myhtml_string_append_lowercase_with_preprocessing@@Base>:
   206d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   206dc:	add	fp, sp, #28
   206e0:	sub	sp, sp, #4
   206e4:	mov	r4, r0
   206e8:	mov	r6, r1
   206ec:	ldr	r0, [r0, #4]
   206f0:	mov	r7, r3
   206f4:	mov	r5, r2
   206f8:	ldr	r1, [r4, #8]
   206fc:	add	r1, r2, r1
   20700:	add	r1, r1, #1
   20704:	cmp	r1, r0
   20708:	bcc	20714 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x3c>
   2070c:	mov	r0, r4
   20710:	bl	11778 <mycore_string_realloc@plt>
   20714:	cmp	r5, #0
   20718:	beq	20790 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xb8>
   2071c:	ldr	r0, [r4]
   20720:	cmp	r7, #0
   20724:	beq	20798 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xc0>
   20728:	ldr	r3, [pc, #376]	; 208a8 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x1d0>
   2072c:	mov	r1, #0
   20730:	mov	ip, #10
   20734:	add	r3, pc, r3
   20738:	ldrb	r2, [r6, r1]
   2073c:	cmp	r2, #13
   20740:	bne	20768 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x90>
   20744:	ldr	r2, [r4, #8]
   20748:	strb	ip, [r0, r2]
   2074c:	add	r2, r1, #1
   20750:	cmp	r2, r5
   20754:	bcs	20864 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x18c>
   20758:	ldrb	r7, [r6, r2]
   2075c:	cmp	r7, #10
   20760:	moveq	r1, r2
   20764:	b	20774 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x9c>
   20768:	ldrb	r2, [r3, r2]
   2076c:	ldr	r7, [r4, #8]
   20770:	strb	r2, [r0, r7]
   20774:	ldr	r2, [r4, #8]
   20778:	add	r1, r1, #1
   2077c:	cmp	r1, r5
   20780:	add	r2, r2, #1
   20784:	str	r2, [r4, #8]
   20788:	bcc	20738 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x60>
   2078c:	b	20850 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x178>
   20790:	ldr	r2, [r4, #8]
   20794:	b	20850 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x178>
   20798:	ldr	r9, [pc, #260]	; 208a4 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x1cc>
   2079c:	mov	r7, #0
   207a0:	mov	sl, #189	; 0xbd
   207a4:	mov	r8, #10
   207a8:	add	r9, pc, r9
   207ac:	ldrb	r1, [r6, r7]
   207b0:	cmp	r1, #0
   207b4:	beq	207e4 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x10c>
   207b8:	cmp	r1, #13
   207bc:	bne	2082c <myhtml_string_append_lowercase_with_preprocessing@@Base+0x154>
   207c0:	ldr	r1, [r4, #8]
   207c4:	strb	r8, [r0, r1]
   207c8:	add	r1, r7, #1
   207cc:	cmp	r1, r5
   207d0:	bcs	20864 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x18c>
   207d4:	ldrb	r2, [r6, r1]
   207d8:	cmp	r2, #10
   207dc:	moveq	r7, r1
   207e0:	b	20838 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x160>
   207e4:	ldr	r0, [r4, #4]
   207e8:	add	r1, r0, #5
   207ec:	mov	r0, r4
   207f0:	bl	11778 <mycore_string_realloc@plt>
   207f4:	ldr	r0, [r4]
   207f8:	ldr	r1, [r4, #8]
   207fc:	mov	r2, #239	; 0xef
   20800:	strb	r2, [r0, r1]
   20804:	mov	r2, #191	; 0xbf
   20808:	ldr	r1, [r4, #8]
   2080c:	add	r1, r1, #1
   20810:	str	r1, [r4, #8]
   20814:	strb	r2, [r0, r1]
   20818:	ldr	r1, [r4, #8]
   2081c:	add	r1, r1, #1
   20820:	str	r1, [r4, #8]
   20824:	strb	sl, [r0, r1]
   20828:	b	20838 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x160>
   2082c:	ldrb	r1, [r9, r1]
   20830:	ldr	r2, [r4, #8]
   20834:	strb	r1, [r0, r2]
   20838:	ldr	r1, [r4, #8]
   2083c:	add	r7, r7, #1
   20840:	cmp	r7, r5
   20844:	add	r2, r1, #1
   20848:	str	r2, [r4, #8]
   2084c:	bcc	207ac <myhtml_string_append_lowercase_with_preprocessing@@Base+0xd4>
   20850:	ldr	r1, [r4]
   20854:	mov	r0, #0
   20858:	strb	r0, [r1, r2]
   2085c:	sub	sp, fp, #28
   20860:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20864:	ldr	r1, [r4, #8]
   20868:	ldr	r2, [r4, #4]
   2086c:	add	r0, r1, #1
   20870:	cmp	r0, r2
   20874:	str	r0, [r4, #8]
   20878:	bcc	2088c <myhtml_string_append_lowercase_with_preprocessing@@Base+0x1b4>
   2087c:	add	r1, r1, #3
   20880:	mov	r0, r4
   20884:	bl	11778 <mycore_string_realloc@plt>
   20888:	ldr	r0, [r4, #8]
   2088c:	ldr	r1, [r4]
   20890:	mov	r2, #0
   20894:	strb	r2, [r1, r0]
   20898:	ldr	r0, [r4, #8]
   2089c:	sub	sp, fp, #28
   208a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   208a4:			; <UNDEFINED> instruction: 0x000e1ebf
   208a8:	andeq	r1, lr, r3, lsr pc

000208ac <myhtml_string_before_append_any_preprocessing@@Base>:
   208ac:	cmp	r2, #0
   208b0:	mov	r0, #0
   208b4:	cmpne	r3, #0
   208b8:	ldrbne	r0, [r1]
   208bc:	subne	r0, r0, #10
   208c0:	clzne	r0, r0
   208c4:	lsrne	r0, r0, #5
   208c8:	bx	lr

000208cc <myhtml_string_append_with_convert_encoding_with_preprocessing@@Base>:
   208cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   208d0:	add	fp, sp, #24
   208d4:	sub	sp, sp, #32
   208d8:	add	r8, sp, #8
   208dc:	mov	r7, r0
   208e0:	mov	r4, r3
   208e4:	mov	r5, r2
   208e8:	mov	r6, r1
   208ec:	mov	r0, r8
   208f0:	bl	11208 <myencoding_result_clean@plt>
   208f4:	ldr	r0, [fp, #8]
   208f8:	mov	r1, r8
   208fc:	mov	r2, r6
   20900:	mov	r3, r5
   20904:	str	r4, [sp]
   20908:	str	r0, [sp, #4]
   2090c:	mov	r0, r7
   20910:	bl	11acc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   20914:	sub	sp, fp, #24
   20918:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002091c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base>:
   2091c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20920:	add	fp, sp, #28
   20924:	sub	sp, sp, #4
   20928:	mov	r4, r0
   2092c:	mov	r7, r1
   20930:	ldr	r0, [r0, #4]
   20934:	ldr	r6, [fp, #8]
   20938:	mov	sl, r3
   2093c:	mov	r8, r2
   20940:	ldr	r1, [r4, #8]
   20944:	add	r1, r3, r1
   20948:	add	r1, r1, #1
   2094c:	cmp	r1, r0
   20950:	bcc	2095c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x40>
   20954:	mov	r0, r4
   20958:	bl	11778 <mycore_string_realloc@plt>
   2095c:	mov	r0, r6
   20960:	bl	1167c <myencoding_get_function_by_id@plt>
   20964:	cmp	sl, #0
   20968:	beq	20b3c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x220>
   2096c:	mov	r9, r0
   20970:	ldr	r0, [fp, #12]
   20974:	mov	r5, #0
   20978:	cmp	r0, #0
   2097c:	beq	20a30 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x114>
   20980:	mov	r6, #10
   20984:	ldrb	r0, [r8, r5]
   20988:	mov	r1, r7
   2098c:	blx	r9
   20990:	cmp	r0, #0
   20994:	beq	209a8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x8c>
   20998:	add	r5, r5, #1
   2099c:	cmp	r5, sl
   209a0:	bcc	20984 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x68>
   209a4:	b	20b3c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x220>
   209a8:	ldr	r0, [r4, #8]
   209ac:	ldr	r1, [r4, #4]
   209b0:	add	r2, r0, #5
   209b4:	cmp	r2, r1
   209b8:	bcc	209cc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0xb0>
   209bc:	add	r1, r0, #6
   209c0:	mov	r0, r4
   209c4:	bl	11778 <mycore_string_realloc@plt>
   209c8:	ldr	r0, [r4, #8]
   209cc:	ldr	r1, [r4]
   209d0:	add	r1, r1, r0
   209d4:	ldr	r0, [r7, #12]
   209d8:	bl	11b20 <myencoding_codepoint_to_ascii_utf_8@plt>
   209dc:	cmp	r0, #1
   209e0:	bne	20a14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0xf8>
   209e4:	ldr	r1, [r4]
   209e8:	ldr	r2, [r4, #8]
   209ec:	ldrb	r3, [r1, r2]
   209f0:	cmp	r3, #13
   209f4:	bne	20a14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0xf8>
   209f8:	strb	r6, [r1, r2]
   209fc:	add	r1, r5, #1
   20a00:	cmp	r1, sl
   20a04:	bcs	20b6c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x250>
   20a08:	ldrb	r2, [r8, r1]
   20a0c:	cmp	r2, #10
   20a10:	moveq	r5, r1
   20a14:	ldr	r1, [r4, #8]
   20a18:	add	r0, r1, r0
   20a1c:	str	r0, [r4, #8]
   20a20:	add	r5, r5, #1
   20a24:	cmp	r5, sl
   20a28:	bcc	20984 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x68>
   20a2c:	b	20b3c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x220>
   20a30:	ldrb	r0, [r8, r5]
   20a34:	mov	r1, r7
   20a38:	blx	r9
   20a3c:	cmp	r0, #0
   20a40:	beq	20a54 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x138>
   20a44:	add	r5, r5, #1
   20a48:	cmp	r5, sl
   20a4c:	bcc	20a30 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x114>
   20a50:	b	20b3c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x220>
   20a54:	ldr	r0, [r4, #8]
   20a58:	ldr	r1, [r4, #4]
   20a5c:	add	r2, r0, #5
   20a60:	cmp	r2, r1
   20a64:	bcc	20a78 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x15c>
   20a68:	add	r1, r0, #6
   20a6c:	mov	r0, r4
   20a70:	bl	11778 <mycore_string_realloc@plt>
   20a74:	ldr	r0, [r4, #8]
   20a78:	ldr	r1, [r4]
   20a7c:	add	r1, r1, r0
   20a80:	ldr	r0, [r7, #12]
   20a84:	bl	11b20 <myencoding_codepoint_to_ascii_utf_8@plt>
   20a88:	mov	r6, r0
   20a8c:	cmp	r0, #1
   20a90:	bne	20b24 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x208>
   20a94:	ldr	r0, [r4]
   20a98:	ldr	r1, [r4, #8]
   20a9c:	ldrb	r2, [r0, r1]
   20aa0:	cmp	r2, #0
   20aa4:	beq	20ad4 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1b8>
   20aa8:	cmp	r2, #13
   20aac:	bne	20b24 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x208>
   20ab0:	mov	r2, #10
   20ab4:	strb	r2, [r0, r1]
   20ab8:	add	r0, r5, #1
   20abc:	cmp	r0, sl
   20ac0:	bcs	20b6c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x250>
   20ac4:	ldrb	r1, [r8, r0]
   20ac8:	cmp	r1, #10
   20acc:	moveq	r5, r0
   20ad0:	b	20b24 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x208>
   20ad4:	ldr	r0, [r4, #4]
   20ad8:	add	r1, r0, #5
   20adc:	mov	r0, r4
   20ae0:	bl	11778 <mycore_string_realloc@plt>
   20ae4:	ldr	r0, [r4]
   20ae8:	ldr	r1, [r4, #8]
   20aec:	mov	r2, #239	; 0xef
   20af0:	strb	r2, [r0, r1]
   20af4:	mov	r2, #191	; 0xbf
   20af8:	ldr	r1, [r4, #8]
   20afc:	ldr	r0, [r4]
   20b00:	add	r1, r1, #1
   20b04:	str	r1, [r4, #8]
   20b08:	strb	r2, [r0, r1]
   20b0c:	mov	r2, #189	; 0xbd
   20b10:	ldr	r1, [r4, #8]
   20b14:	ldr	r0, [r4]
   20b18:	add	r1, r1, #1
   20b1c:	str	r1, [r4, #8]
   20b20:	strb	r2, [r0, r1]
   20b24:	ldr	r0, [r4, #8]
   20b28:	add	r0, r0, r6
   20b2c:	str	r0, [r4, #8]
   20b30:	add	r5, r5, #1
   20b34:	cmp	r5, sl
   20b38:	bcc	20a30 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x114>
   20b3c:	ldmib	r4, {r0, r1}
   20b40:	cmp	r1, r0
   20b44:	bcc	20b58 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x23c>
   20b48:	add	r1, r1, #1
   20b4c:	mov	r0, r4
   20b50:	bl	11778 <mycore_string_realloc@plt>
   20b54:	ldr	r1, [r4, #8]
   20b58:	ldr	r2, [r4]
   20b5c:	mov	r0, #0
   20b60:	strb	r0, [r2, r1]
   20b64:	sub	sp, fp, #28
   20b68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20b6c:	ldr	r1, [r4, #8]
   20b70:	ldr	r2, [r4, #4]
   20b74:	add	r0, r1, #1
   20b78:	cmp	r0, r2
   20b7c:	str	r0, [r4, #8]
   20b80:	bcc	20b94 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x278>
   20b84:	add	r1, r1, #3
   20b88:	mov	r0, r4
   20b8c:	bl	11778 <mycore_string_realloc@plt>
   20b90:	ldr	r0, [r4, #8]
   20b94:	ldr	r1, [r4]
   20b98:	mov	r2, #0
   20b9c:	strb	r2, [r1, r0]
   20ba0:	ldr	r0, [r4, #8]
   20ba4:	sub	sp, fp, #28
   20ba8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00020bac <myhtml_string_append_lowercase_with_convert_encoding_with_preprocessing@@Base>:
   20bac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   20bb0:	add	fp, sp, #24
   20bb4:	sub	sp, sp, #32
   20bb8:	add	r8, sp, #8
   20bbc:	mov	r7, r0
   20bc0:	mov	r4, r3
   20bc4:	mov	r5, r2
   20bc8:	mov	r6, r1
   20bcc:	mov	r0, r8
   20bd0:	bl	11208 <myencoding_result_clean@plt>
   20bd4:	ldr	r0, [fp, #8]
   20bd8:	mov	r1, r8
   20bdc:	mov	r2, r6
   20be0:	mov	r3, r5
   20be4:	str	r4, [sp]
   20be8:	str	r0, [sp, #4]
   20bec:	mov	r0, r7
   20bf0:	bl	11a60 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   20bf4:	sub	sp, fp, #24
   20bf8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00020bfc <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base>:
   20bfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20c00:	add	fp, sp, #28
   20c04:	sub	sp, sp, #4
   20c08:	mov	r4, r0
   20c0c:	mov	r7, r1
   20c10:	ldr	r0, [r0, #4]
   20c14:	ldr	r6, [fp, #8]
   20c18:	mov	sl, r3
   20c1c:	mov	r8, r2
   20c20:	ldr	r1, [r4, #8]
   20c24:	add	r1, r3, r1
   20c28:	add	r1, r1, #1
   20c2c:	cmp	r1, r0
   20c30:	bcc	20c3c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x40>
   20c34:	mov	r0, r4
   20c38:	bl	11778 <mycore_string_realloc@plt>
   20c3c:	mov	r0, r6
   20c40:	bl	1167c <myencoding_get_function_by_id@plt>
   20c44:	cmp	sl, #0
   20c48:	beq	20e1c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x220>
   20c4c:	mov	r9, r0
   20c50:	ldr	r0, [fp, #12]
   20c54:	mov	r5, #0
   20c58:	cmp	r0, #0
   20c5c:	beq	20d10 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x114>
   20c60:	mov	r6, #10
   20c64:	ldrb	r0, [r8, r5]
   20c68:	mov	r1, r7
   20c6c:	blx	r9
   20c70:	cmp	r0, #0
   20c74:	beq	20c88 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x8c>
   20c78:	add	r5, r5, #1
   20c7c:	cmp	r5, sl
   20c80:	bcc	20c64 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x68>
   20c84:	b	20e1c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x220>
   20c88:	ldr	r0, [r4, #8]
   20c8c:	ldr	r1, [r4, #4]
   20c90:	add	r2, r0, #5
   20c94:	cmp	r2, r1
   20c98:	bcc	20cac <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0xb0>
   20c9c:	add	r1, r0, #6
   20ca0:	mov	r0, r4
   20ca4:	bl	11778 <mycore_string_realloc@plt>
   20ca8:	ldr	r0, [r4, #8]
   20cac:	ldr	r1, [r4]
   20cb0:	add	r1, r1, r0
   20cb4:	ldr	r0, [r7, #12]
   20cb8:	bl	10e60 <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>
   20cbc:	cmp	r0, #1
   20cc0:	bne	20cf4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0xf8>
   20cc4:	ldr	r1, [r4]
   20cc8:	ldr	r2, [r4, #8]
   20ccc:	ldrb	r3, [r1, r2]
   20cd0:	cmp	r3, #13
   20cd4:	bne	20cf4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0xf8>
   20cd8:	strb	r6, [r1, r2]
   20cdc:	add	r1, r5, #1
   20ce0:	cmp	r1, sl
   20ce4:	bcs	20e4c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x250>
   20ce8:	ldrb	r2, [r8, r1]
   20cec:	cmp	r2, #10
   20cf0:	moveq	r5, r1
   20cf4:	ldr	r1, [r4, #8]
   20cf8:	add	r0, r1, r0
   20cfc:	str	r0, [r4, #8]
   20d00:	add	r5, r5, #1
   20d04:	cmp	r5, sl
   20d08:	bcc	20c64 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x68>
   20d0c:	b	20e1c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x220>
   20d10:	ldrb	r0, [r8, r5]
   20d14:	mov	r1, r7
   20d18:	blx	r9
   20d1c:	cmp	r0, #0
   20d20:	beq	20d34 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x138>
   20d24:	add	r5, r5, #1
   20d28:	cmp	r5, sl
   20d2c:	bcc	20d10 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x114>
   20d30:	b	20e1c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x220>
   20d34:	ldr	r0, [r4, #8]
   20d38:	ldr	r1, [r4, #4]
   20d3c:	add	r2, r0, #5
   20d40:	cmp	r2, r1
   20d44:	bcc	20d58 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x15c>
   20d48:	add	r1, r0, #6
   20d4c:	mov	r0, r4
   20d50:	bl	11778 <mycore_string_realloc@plt>
   20d54:	ldr	r0, [r4, #8]
   20d58:	ldr	r1, [r4]
   20d5c:	add	r1, r1, r0
   20d60:	ldr	r0, [r7, #12]
   20d64:	bl	10e60 <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>
   20d68:	mov	r6, r0
   20d6c:	cmp	r0, #1
   20d70:	bne	20e04 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x208>
   20d74:	ldr	r0, [r4]
   20d78:	ldr	r1, [r4, #8]
   20d7c:	ldrb	r2, [r0, r1]
   20d80:	cmp	r2, #0
   20d84:	beq	20db4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1b8>
   20d88:	cmp	r2, #13
   20d8c:	bne	20e04 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x208>
   20d90:	mov	r2, #10
   20d94:	strb	r2, [r0, r1]
   20d98:	add	r0, r5, #1
   20d9c:	cmp	r0, sl
   20da0:	bcs	20e4c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x250>
   20da4:	ldrb	r1, [r8, r0]
   20da8:	cmp	r1, #10
   20dac:	moveq	r5, r0
   20db0:	b	20e04 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x208>
   20db4:	ldr	r0, [r4, #4]
   20db8:	add	r1, r0, #5
   20dbc:	mov	r0, r4
   20dc0:	bl	11778 <mycore_string_realloc@plt>
   20dc4:	ldr	r0, [r4]
   20dc8:	ldr	r1, [r4, #8]
   20dcc:	mov	r2, #239	; 0xef
   20dd0:	strb	r2, [r0, r1]
   20dd4:	mov	r2, #191	; 0xbf
   20dd8:	ldr	r1, [r4, #8]
   20ddc:	ldr	r0, [r4]
   20de0:	add	r1, r1, #1
   20de4:	str	r1, [r4, #8]
   20de8:	strb	r2, [r0, r1]
   20dec:	mov	r2, #189	; 0xbd
   20df0:	ldr	r1, [r4, #8]
   20df4:	ldr	r0, [r4]
   20df8:	add	r1, r1, #1
   20dfc:	str	r1, [r4, #8]
   20e00:	strb	r2, [r0, r1]
   20e04:	ldr	r0, [r4, #8]
   20e08:	add	r0, r0, r6
   20e0c:	str	r0, [r4, #8]
   20e10:	add	r5, r5, #1
   20e14:	cmp	r5, sl
   20e18:	bcc	20d10 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x114>
   20e1c:	ldmib	r4, {r0, r1}
   20e20:	cmp	r1, r0
   20e24:	bcc	20e38 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x23c>
   20e28:	add	r1, r1, #1
   20e2c:	mov	r0, r4
   20e30:	bl	11778 <mycore_string_realloc@plt>
   20e34:	ldr	r1, [r4, #8]
   20e38:	ldr	r2, [r4]
   20e3c:	mov	r0, #0
   20e40:	strb	r0, [r2, r1]
   20e44:	sub	sp, fp, #28
   20e48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20e4c:	ldr	r1, [r4, #8]
   20e50:	ldr	r2, [r4, #4]
   20e54:	add	r0, r1, #1
   20e58:	cmp	r0, r2
   20e5c:	str	r0, [r4, #8]
   20e60:	bcc	20e74 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x278>
   20e64:	add	r1, r1, #3
   20e68:	mov	r0, r4
   20e6c:	bl	11778 <mycore_string_realloc@plt>
   20e70:	ldr	r0, [r4, #8]
   20e74:	ldr	r1, [r4]
   20e78:	mov	r2, #0
   20e7c:	strb	r2, [r1, r0]
   20e80:	ldr	r0, [r4, #8]
   20e84:	sub	sp, fp, #28
   20e88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00020e8c <myhtml_parser_stream@@Base>:
   20e8c:	push	{r4, sl, fp, lr}
   20e90:	add	fp, sp, #8
   20e94:	ldr	r0, [r1]
   20e98:	mov	r4, r1
   20e9c:	ldr	r1, [r0, #184]	; 0xb8
   20ea0:	tst	r1, #1
   20ea4:	beq	20eb0 <myhtml_parser_stream@@Base+0x24>
   20ea8:	pop	{r4, sl, fp, pc}
   20eac:	ldr	r0, [r4]
   20eb0:	ldr	r1, [r4, #4]
   20eb4:	bl	10fb0 <myhtml_rules_tree_dispatcher@plt>
   20eb8:	cmp	r0, #0
   20ebc:	popeq	{r4, sl, fp, pc}
   20ec0:	b	20eac <myhtml_parser_stream@@Base+0x20>

00020ec4 <myhtml_parser_token_data_to_string_lowercase@@Base>:
   20ec4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20ec8:	add	fp, sp, #28
   20ecc:	sub	sp, sp, #20
   20ed0:	mov	r4, r0
   20ed4:	ldr	r0, [r0, #80]	; 0x50
   20ed8:	mov	sl, r1
   20edc:	mov	r1, r3
   20ee0:	mov	r5, r3
   20ee4:	str	r2, [sp, #16]
   20ee8:	bl	11190 <mycore_incoming_buffer_find_by_position@plt>
   20eec:	mov	r7, r0
   20ef0:	ldr	r6, [fp, #8]
   20ef4:	ldr	r0, [r0, #8]
   20ef8:	ldr	r1, [r7, #12]
   20efc:	sub	r8, r5, r1
   20f00:	add	r1, r8, r6
   20f04:	cmp	r1, r0
   20f08:	bls	21028 <myhtml_parser_token_data_to_string_lowercase@@Base+0x164>
   20f0c:	cmp	r7, #0
   20f10:	beq	2105c <myhtml_parser_token_data_to_string_lowercase@@Base+0x198>
   20f14:	ldr	r2, [sp, #16]
   20f18:	mov	r5, #0
   20f1c:	cmp	r1, r0
   20f20:	add	r2, r2, #8
   20f24:	str	r2, [sp, #12]
   20f28:	bls	20fd0 <myhtml_parser_token_data_to_string_lowercase@@Base+0x10c>
   20f2c:	mov	r5, #0
   20f30:	sub	r9, r0, r8
   20f34:	ldr	r0, [r7]
   20f38:	mov	r3, r5
   20f3c:	mov	r2, r9
   20f40:	add	r1, r0, r8
   20f44:	mov	r0, sl
   20f48:	bl	1194c <myhtml_string_before_append_any_preprocessing@plt>
   20f4c:	cmp	r9, #0
   20f50:	beq	20fb0 <myhtml_parser_token_data_to_string_lowercase@@Base+0xec>
   20f54:	ldr	r1, [r7]
   20f58:	sub	r3, r9, r0
   20f5c:	add	r0, r0, r8
   20f60:	add	r2, r1, r0
   20f64:	ldr	r0, [r4, #200]	; 0xc8
   20f68:	cmp	r0, #0
   20f6c:	beq	20f90 <myhtml_parser_token_data_to_string_lowercase@@Base+0xcc>
   20f70:	ldr	r1, [sp, #16]
   20f74:	ldr	r0, [r1, #4]
   20f78:	ldrb	r1, [r1, #61]	; 0x3d
   20f7c:	stm	sp, {r0, r1}
   20f80:	mov	r0, sl
   20f84:	ldr	r1, [sp, #12]
   20f88:	bl	11a60 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   20f8c:	b	20fac <myhtml_parser_token_data_to_string_lowercase@@Base+0xe8>
   20f90:	ldr	r0, [sp, #16]
   20f94:	mov	r1, r2
   20f98:	mov	r2, r3
   20f9c:	ldrb	r5, [r0, #61]	; 0x3d
   20fa0:	mov	r0, sl
   20fa4:	mov	r3, r5
   20fa8:	bl	11c58 <myhtml_string_append_lowercase_with_preprocessing@plt>
   20fac:	mov	r5, r0
   20fb0:	ldr	r7, [r7, #20]
   20fb4:	cmp	r7, #0
   20fb8:	beq	2105c <myhtml_parser_token_data_to_string_lowercase@@Base+0x198>
   20fbc:	ldr	r0, [r7, #8]
   20fc0:	sub	r6, r6, r9
   20fc4:	mov	r8, #0
   20fc8:	cmp	r6, r0
   20fcc:	bhi	20f30 <myhtml_parser_token_data_to_string_lowercase@@Base+0x6c>
   20fd0:	ldr	r0, [r7]
   20fd4:	mov	r2, r6
   20fd8:	mov	r3, r5
   20fdc:	add	r1, r0, r8
   20fe0:	mov	r0, sl
   20fe4:	bl	1194c <myhtml_string_before_append_any_preprocessing@plt>
   20fe8:	cmp	r6, #0
   20fec:	beq	2105c <myhtml_parser_token_data_to_string_lowercase@@Base+0x198>
   20ff0:	ldr	r1, [r7]
   20ff4:	sub	r3, r6, r0
   20ff8:	add	r0, r0, r8
   20ffc:	add	r2, r1, r0
   21000:	ldr	r0, [r4, #200]	; 0xc8
   21004:	cmp	r0, #0
   21008:	beq	21090 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1cc>
   2100c:	ldr	r1, [sp, #16]
   21010:	ldr	r0, [r1, #4]
   21014:	ldrb	r1, [r1, #61]	; 0x3d
   21018:	stm	sp, {r0, r1}
   2101c:	mov	r0, sl
   21020:	ldr	r1, [sp, #12]
   21024:	b	21058 <myhtml_parser_token_data_to_string_lowercase@@Base+0x194>
   21028:	ldr	r0, [r4, #200]	; 0xc8
   2102c:	cmp	r0, #0
   21030:	beq	21068 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1a4>
   21034:	ldr	r3, [sp, #16]
   21038:	ldr	r0, [r7]
   2103c:	ldr	r1, [r3, #4]
   21040:	ldrb	r2, [r3, #61]	; 0x3d
   21044:	stm	sp, {r1, r2}
   21048:	add	r2, r0, r8
   2104c:	add	r1, r3, #8
   21050:	mov	r0, sl
   21054:	mov	r3, r6
   21058:	bl	11a60 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   2105c:	ldr	r0, [sl, #8]
   21060:	sub	sp, fp, #28
   21064:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21068:	ldr	r0, [r7]
   2106c:	mov	r2, r6
   21070:	add	r1, r0, r8
   21074:	ldr	r0, [sp, #16]
   21078:	ldrb	r3, [r0, #61]	; 0x3d
   2107c:	mov	r0, sl
   21080:	bl	11c58 <myhtml_string_append_lowercase_with_preprocessing@plt>
   21084:	ldr	r0, [sl, #8]
   21088:	sub	sp, fp, #28
   2108c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21090:	ldr	r0, [sp, #16]
   21094:	mov	r1, r2
   21098:	mov	r2, r3
   2109c:	ldrb	r7, [r0, #61]	; 0x3d
   210a0:	mov	r0, sl
   210a4:	mov	r3, r7
   210a8:	bl	11c58 <myhtml_string_append_lowercase_with_preprocessing@plt>
   210ac:	ldr	r0, [sl, #8]
   210b0:	sub	sp, fp, #28
   210b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000210b8 <myhtml_parser_token_data_to_string@@Base>:
   210b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   210bc:	add	fp, sp, #28
   210c0:	sub	sp, sp, #20
   210c4:	mov	r4, r0
   210c8:	ldr	r0, [r0, #80]	; 0x50
   210cc:	mov	sl, r1
   210d0:	mov	r1, r3
   210d4:	mov	r5, r3
   210d8:	str	r2, [sp, #16]
   210dc:	bl	11190 <mycore_incoming_buffer_find_by_position@plt>
   210e0:	mov	r7, r0
   210e4:	ldr	r6, [fp, #8]
   210e8:	ldr	r0, [r0, #8]
   210ec:	ldr	r1, [r7, #12]
   210f0:	sub	r8, r5, r1
   210f4:	add	r1, r8, r6
   210f8:	cmp	r1, r0
   210fc:	bls	2121c <myhtml_parser_token_data_to_string@@Base+0x164>
   21100:	cmp	r7, #0
   21104:	beq	21250 <myhtml_parser_token_data_to_string@@Base+0x198>
   21108:	ldr	r2, [sp, #16]
   2110c:	mov	r5, #0
   21110:	cmp	r1, r0
   21114:	add	r2, r2, #8
   21118:	str	r2, [sp, #12]
   2111c:	bls	211c4 <myhtml_parser_token_data_to_string@@Base+0x10c>
   21120:	mov	r5, #0
   21124:	sub	r9, r0, r8
   21128:	ldr	r0, [r7]
   2112c:	mov	r3, r5
   21130:	mov	r2, r9
   21134:	add	r1, r0, r8
   21138:	mov	r0, sl
   2113c:	bl	1194c <myhtml_string_before_append_any_preprocessing@plt>
   21140:	cmp	r9, #0
   21144:	beq	211a4 <myhtml_parser_token_data_to_string@@Base+0xec>
   21148:	ldr	r1, [r7]
   2114c:	sub	r3, r9, r0
   21150:	add	r0, r0, r8
   21154:	add	r2, r1, r0
   21158:	ldr	r0, [r4, #200]	; 0xc8
   2115c:	cmp	r0, #0
   21160:	beq	21184 <myhtml_parser_token_data_to_string@@Base+0xcc>
   21164:	ldr	r1, [sp, #16]
   21168:	ldr	r0, [r1, #4]
   2116c:	ldrb	r1, [r1, #61]	; 0x3d
   21170:	stm	sp, {r0, r1}
   21174:	mov	r0, sl
   21178:	ldr	r1, [sp, #12]
   2117c:	bl	11acc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   21180:	b	211a0 <myhtml_parser_token_data_to_string@@Base+0xe8>
   21184:	ldr	r0, [sp, #16]
   21188:	mov	r1, r2
   2118c:	mov	r2, r3
   21190:	ldrb	r5, [r0, #61]	; 0x3d
   21194:	mov	r0, sl
   21198:	mov	r3, r5
   2119c:	bl	11214 <myhtml_string_append_with_preprocessing@plt>
   211a0:	mov	r5, r0
   211a4:	ldr	r7, [r7, #20]
   211a8:	cmp	r7, #0
   211ac:	beq	21250 <myhtml_parser_token_data_to_string@@Base+0x198>
   211b0:	ldr	r0, [r7, #8]
   211b4:	sub	r6, r6, r9
   211b8:	mov	r8, #0
   211bc:	cmp	r6, r0
   211c0:	bhi	21124 <myhtml_parser_token_data_to_string@@Base+0x6c>
   211c4:	ldr	r0, [r7]
   211c8:	mov	r2, r6
   211cc:	mov	r3, r5
   211d0:	add	r1, r0, r8
   211d4:	mov	r0, sl
   211d8:	bl	1194c <myhtml_string_before_append_any_preprocessing@plt>
   211dc:	cmp	r6, #0
   211e0:	beq	21250 <myhtml_parser_token_data_to_string@@Base+0x198>
   211e4:	ldr	r1, [r7]
   211e8:	sub	r3, r6, r0
   211ec:	add	r0, r0, r8
   211f0:	add	r2, r1, r0
   211f4:	ldr	r0, [r4, #200]	; 0xc8
   211f8:	cmp	r0, #0
   211fc:	beq	21284 <myhtml_parser_token_data_to_string@@Base+0x1cc>
   21200:	ldr	r1, [sp, #16]
   21204:	ldr	r0, [r1, #4]
   21208:	ldrb	r1, [r1, #61]	; 0x3d
   2120c:	stm	sp, {r0, r1}
   21210:	mov	r0, sl
   21214:	ldr	r1, [sp, #12]
   21218:	b	2124c <myhtml_parser_token_data_to_string@@Base+0x194>
   2121c:	ldr	r0, [r4, #200]	; 0xc8
   21220:	cmp	r0, #0
   21224:	beq	2125c <myhtml_parser_token_data_to_string@@Base+0x1a4>
   21228:	ldr	r3, [sp, #16]
   2122c:	ldr	r0, [r7]
   21230:	ldr	r1, [r3, #4]
   21234:	ldrb	r2, [r3, #61]	; 0x3d
   21238:	stm	sp, {r1, r2}
   2123c:	add	r2, r0, r8
   21240:	add	r1, r3, #8
   21244:	mov	r0, sl
   21248:	mov	r3, r6
   2124c:	bl	11acc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   21250:	ldr	r0, [sl, #8]
   21254:	sub	sp, fp, #28
   21258:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2125c:	ldr	r0, [r7]
   21260:	mov	r2, r6
   21264:	add	r1, r0, r8
   21268:	ldr	r0, [sp, #16]
   2126c:	ldrb	r3, [r0, #61]	; 0x3d
   21270:	mov	r0, sl
   21274:	bl	11214 <myhtml_string_append_with_preprocessing@plt>
   21278:	ldr	r0, [sl, #8]
   2127c:	sub	sp, fp, #28
   21280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21284:	ldr	r0, [sp, #16]
   21288:	mov	r1, r2
   2128c:	mov	r2, r3
   21290:	ldrb	r7, [r0, #61]	; 0x3d
   21294:	mov	r0, sl
   21298:	mov	r3, r7
   2129c:	bl	11214 <myhtml_string_append_with_preprocessing@plt>
   212a0:	ldr	r0, [sl, #8]
   212a4:	sub	sp, fp, #28
   212a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000212ac <myhtml_parser_token_data_to_string_charef@@Base>:
   212ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   212b0:	add	fp, sp, #24
   212b4:	ldr	r0, [r0, #80]	; 0x50
   212b8:	mov	r4, r1
   212bc:	mov	r1, r3
   212c0:	mov	r5, r3
   212c4:	mov	r8, r2
   212c8:	bl	11190 <mycore_incoming_buffer_find_by_position@plt>
   212cc:	mov	r7, r0
   212d0:	ldr	r1, [r0, #8]
   212d4:	ldr	r0, [r0, #12]
   212d8:	ldr	r6, [fp, #8]
   212dc:	sub	r0, r5, r0
   212e0:	add	r2, r0, r6
   212e4:	cmp	r2, r1
   212e8:	bls	21338 <myhtml_parser_token_data_to_string_charef@@Base+0x8c>
   212ec:	cmp	r7, #0
   212f0:	beq	21350 <myhtml_parser_token_data_to_string_charef@@Base+0xa4>
   212f4:	cmp	r2, r1
   212f8:	bls	21338 <myhtml_parser_token_data_to_string_charef@@Base+0x8c>
   212fc:	sub	r5, r1, r0
   21300:	ldr	r1, [r7]
   21304:	mov	r3, r5
   21308:	add	r2, r1, r0
   2130c:	mov	r0, r8
   21310:	mov	r1, r4
   21314:	bl	115f8 <myhtml_data_process@plt>
   21318:	ldr	r7, [r7, #20]
   2131c:	cmp	r7, #0
   21320:	beq	21350 <myhtml_parser_token_data_to_string_charef@@Base+0xa4>
   21324:	ldr	r1, [r7, #8]
   21328:	sub	r6, r6, r5
   2132c:	mov	r0, #0
   21330:	cmp	r6, r1
   21334:	bhi	212fc <myhtml_parser_token_data_to_string_charef@@Base+0x50>
   21338:	ldr	r1, [r7]
   2133c:	mov	r3, r6
   21340:	add	r2, r1, r0
   21344:	mov	r0, r8
   21348:	mov	r1, r4
   2134c:	bl	115f8 <myhtml_data_process@plt>
   21350:	mov	r0, r8
   21354:	mov	r1, r4
   21358:	bl	11748 <myhtml_data_process_end@plt>
   2135c:	ldr	r0, [r4, #8]
   21360:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00021364 <myhtml_parser_worker@@Base>:
   21364:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21368:	add	fp, sp, #28
   2136c:	sub	sp, sp, #68	; 0x44
   21370:	ldm	r1, {r4, r8}
   21374:	ldr	r1, [r4, #184]	; 0xb8
   21378:	tst	r1, #3
   2137c:	ldrne	r1, [r4, #184]	; 0xb8
   21380:	tstne	r1, #2
   21384:	bne	2155c <myhtml_parser_worker@@Base+0x1f8>
   21388:	ldr	r2, [r4]
   2138c:	ldr	r1, [r4, #144]	; 0x90
   21390:	ldr	r3, [r4, #220]	; 0xdc
   21394:	ldr	r2, [r2, #4]
   21398:	cmp	r2, #0
   2139c:	ldrne	r2, [r2, #12]
   213a0:	addne	r0, r2, r0
   213a4:	cmp	r3, #0
   213a8:	ldr	r9, [r1, r0, lsl #2]
   213ac:	beq	213c4 <myhtml_parser_worker@@Base+0x60>
   213b0:	ldr	r2, [r4, #228]	; 0xe4
   213b4:	mov	r0, r4
   213b8:	mov	r1, r8
   213bc:	blx	r3
   213c0:	str	r0, [r4, #228]	; 0xe4
   213c4:	ldr	r0, [r8]
   213c8:	sub	r0, r0, #1
   213cc:	cmp	r0, #1
   213d0:	bhi	2144c <myhtml_parser_worker@@Base+0xe8>
   213d4:	ldr	r1, [r8, #28]
   213d8:	ldr	r0, [r4, #4]
   213dc:	add	r7, r8, #4
   213e0:	mov	r2, r7
   213e4:	add	r3, r1, #1
   213e8:	mov	r1, r9
   213ec:	bl	11508 <mycore_string_init@plt>
   213f0:	mov	r0, #0
   213f4:	str	r0, [r8, #40]	; 0x28
   213f8:	str	r0, [r8, #44]	; 0x2c
   213fc:	add	r0, sp, #4
   21400:	bl	11448 <myhtml_data_process_entry_clean@plt>
   21404:	ldr	r0, [r4, #200]	; 0xc8
   21408:	str	r0, [sp, #8]
   2140c:	ldr	r0, [r8, #48]	; 0x30
   21410:	tst	r0, #512	; 0x200
   21414:	bne	21580 <myhtml_parser_worker@@Base+0x21c>
   21418:	ldr	r0, [r8, #48]	; 0x30
   2141c:	tst	r0, #16
   21420:	ldreq	r0, [r8, #48]	; 0x30
   21424:	tsteq	r0, #256	; 0x100
   21428:	bne	21588 <myhtml_parser_worker@@Base+0x224>
   2142c:	ldr	r0, [r8, #28]
   21430:	ldr	r3, [r8, #24]
   21434:	add	r2, sp, #4
   21438:	mov	r1, r7
   2143c:	str	r0, [sp]
   21440:	mov	r0, r4
   21444:	bl	11874 <myhtml_parser_token_data_to_string@plt>
   21448:	b	215bc <myhtml_parser_worker@@Base+0x258>
   2144c:	ldr	r0, [r8, #40]	; 0x28
   21450:	cmp	r0, #0
   21454:	beq	215a8 <myhtml_parser_worker@@Base+0x244>
   21458:	add	r0, r8, #4
   2145c:	bl	11c94 <mycore_string_clean_all@plt>
   21460:	ldr	r6, [r8, #40]	; 0x28
   21464:	cmp	r6, #0
   21468:	beq	215bc <myhtml_parser_worker@@Base+0x258>
   2146c:	add	r7, sp, #4
   21470:	mov	sl, #1
   21474:	ldr	r0, [r6, #52]	; 0x34
   21478:	cmp	r0, #0
   2147c:	beq	21530 <myhtml_parser_worker@@Base+0x1cc>
   21480:	mov	r0, r7
   21484:	bl	11448 <myhtml_data_process_entry_clean@plt>
   21488:	ldr	r0, [r4, #200]	; 0xc8
   2148c:	add	r5, r6, #8
   21490:	mov	r2, r5
   21494:	str	r0, [sp, #8]
   21498:	ldr	r1, [r6, #52]	; 0x34
   2149c:	ldr	r0, [r4, #4]
   214a0:	add	r3, r1, #1
   214a4:	mov	r1, r9
   214a8:	bl	11508 <mycore_string_init@plt>
   214ac:	ldr	r0, [r6, #52]	; 0x34
   214b0:	ldr	r3, [r6, #48]	; 0x30
   214b4:	mov	r1, r5
   214b8:	mov	r2, r7
   214bc:	str	r0, [sp]
   214c0:	mov	r0, r4
   214c4:	bl	11c34 <myhtml_parser_token_data_to_string_lowercase@plt>
   214c8:	ldr	r0, [r6, #60]	; 0x3c
   214cc:	cmp	r0, #0
   214d0:	beq	21544 <myhtml_parser_worker@@Base+0x1e0>
   214d4:	mov	r0, r7
   214d8:	bl	11448 <myhtml_data_process_entry_clean@plt>
   214dc:	ldr	r0, [r4, #200]	; 0xc8
   214e0:	strb	sl, [sp, #64]	; 0x40
   214e4:	add	r5, r6, #28
   214e8:	mov	r2, r5
   214ec:	str	r0, [sp, #8]
   214f0:	ldr	r1, [r6, #60]	; 0x3c
   214f4:	ldr	r0, [r4, #4]
   214f8:	add	r3, r1, #1
   214fc:	mov	r1, r9
   21500:	bl	11508 <mycore_string_init@plt>
   21504:	ldr	r0, [r6, #60]	; 0x3c
   21508:	ldr	r3, [r6, #56]	; 0x38
   2150c:	mov	r1, r5
   21510:	mov	r2, r7
   21514:	str	r0, [sp]
   21518:	mov	r0, r4
   2151c:	bl	1137c <myhtml_parser_token_data_to_string_charef@plt>
   21520:	ldr	r6, [r6]
   21524:	cmp	r6, #0
   21528:	bne	21474 <myhtml_parser_worker@@Base+0x110>
   2152c:	b	215bc <myhtml_parser_worker@@Base+0x258>
   21530:	add	r0, r6, #8
   21534:	bl	11c94 <mycore_string_clean_all@plt>
   21538:	ldr	r0, [r6, #60]	; 0x3c
   2153c:	cmp	r0, #0
   21540:	bne	214d4 <myhtml_parser_worker@@Base+0x170>
   21544:	add	r0, r6, #28
   21548:	bl	11c94 <mycore_string_clean_all@plt>
   2154c:	ldr	r6, [r6]
   21550:	cmp	r6, #0
   21554:	bne	21474 <myhtml_parser_worker@@Base+0x110>
   21558:	b	215bc <myhtml_parser_worker@@Base+0x258>
   2155c:	ldr	r3, [r4, #220]	; 0xdc
   21560:	cmp	r3, #0
   21564:	beq	215bc <myhtml_parser_worker@@Base+0x258>
   21568:	ldr	r2, [r4, #228]	; 0xe4
   2156c:	mov	r0, r4
   21570:	mov	r1, r8
   21574:	blx	r3
   21578:	str	r0, [r4, #228]	; 0xe4
   2157c:	b	215bc <myhtml_parser_worker@@Base+0x258>
   21580:	mov	r0, #1
   21584:	strb	r0, [sp, #65]	; 0x41
   21588:	ldr	r0, [r8, #28]
   2158c:	ldr	r3, [r8, #24]
   21590:	add	r2, sp, #4
   21594:	mov	r1, r7
   21598:	str	r0, [sp]
   2159c:	mov	r0, r4
   215a0:	bl	1137c <myhtml_parser_token_data_to_string_charef@plt>
   215a4:	b	215bc <myhtml_parser_worker@@Base+0x258>
   215a8:	mov	r0, #0
   215ac:	str	r0, [r8, #40]	; 0x28
   215b0:	str	r0, [r8, #44]	; 0x2c
   215b4:	add	r0, r8, #4
   215b8:	bl	11c94 <mycore_string_clean_all@plt>
   215bc:	ldr	r0, [r8, #48]	; 0x30
   215c0:	orr	r0, r0, #4
   215c4:	str	r0, [r8, #48]	; 0x30
   215c8:	ldr	r3, [r4, #224]	; 0xe0
   215cc:	cmp	r3, #0
   215d0:	beq	215e8 <myhtml_parser_worker@@Base+0x284>
   215d4:	ldr	r2, [r4, #232]	; 0xe8
   215d8:	mov	r0, r4
   215dc:	mov	r1, r8
   215e0:	blx	r3
   215e4:	str	r0, [r4, #232]	; 0xe8
   215e8:	sub	sp, fp, #28
   215ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000215f0 <myhtml_parser_worker_stream@@Base>:
   215f0:	push	{r4, sl, fp, lr}
   215f4:	add	fp, sp, #8
   215f8:	mov	r4, r1
   215fc:	bl	10ee4 <myhtml_parser_worker@plt>
   21600:	ldr	r0, [r4]
   21604:	ldr	r1, [r0, #184]	; 0xb8
   21608:	tst	r1, #1
   2160c:	beq	21618 <myhtml_parser_worker_stream@@Base+0x28>
   21610:	pop	{r4, sl, fp, pc}
   21614:	ldr	r0, [r4]
   21618:	ldr	r1, [r4, #4]
   2161c:	bl	10fb0 <myhtml_rules_tree_dispatcher@plt>
   21620:	cmp	r0, #0
   21624:	popeq	{r4, sl, fp, pc}
   21628:	b	21614 <myhtml_parser_worker_stream@@Base+0x24>

0002162c <myhtml_insertion_fix_emit_for_text_begin_ws@@Base>:
   2162c:	push	{r4, sl, fp, lr}
   21630:	add	fp, sp, #8
   21634:	mov	r4, r1
   21638:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   2163c:	add	r0, r4, #4
   21640:	pop	{r4, sl, fp, lr}
   21644:	b	11418 <mycore_string_crop_whitespace_from_begin@plt>

00021648 <myhtml_insertion_fix_split_for_text_begin_ws@@Base>:
   21648:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2164c:	add	fp, sp, #24
   21650:	mov	r7, r0
   21654:	ldr	r0, [r0, #8]
   21658:	mov	r4, r1
   2165c:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   21660:	add	r0, r4, #4
   21664:	bl	11ab4 <mycore_string_whitespace_from_begin@plt>
   21668:	mov	r6, #0
   2166c:	cmp	r0, #0
   21670:	beq	216e4 <myhtml_insertion_fix_split_for_text_begin_ws@@Base+0x9c>
   21674:	mov	r5, r0
   21678:	ldr	r0, [r7, #8]
   2167c:	ldr	r1, [r7, #40]	; 0x28
   21680:	bl	117e4 <myhtml_token_node_create@plt>
   21684:	cmp	r0, #0
   21688:	beq	216e4 <myhtml_insertion_fix_split_for_text_begin_ws@@Base+0x9c>
   2168c:	mov	r8, r0
   21690:	ldr	r0, [r7, #4]
   21694:	ldr	r1, [r7, #52]	; 0x34
   21698:	add	r3, r5, #2
   2169c:	add	r6, r8, #4
   216a0:	mov	r2, r6
   216a4:	bl	11508 <mycore_string_init@plt>
   216a8:	ldr	r1, [r4, #4]
   216ac:	mov	r0, r6
   216b0:	mov	r2, r5
   216b4:	bl	116f4 <mycore_string_append@plt>
   216b8:	ldr	r0, [r8, #48]	; 0x30
   216bc:	mov	r1, r5
   216c0:	orr	r0, r0, #4
   216c4:	str	r0, [r8, #48]	; 0x30
   216c8:	ldr	r0, [r4, #4]
   216cc:	bl	1197c <mchar_async_crop_first_chars_without_cache@plt>
   216d0:	str	r0, [r4, #4]
   216d4:	mov	r6, r8
   216d8:	ldr	r0, [r4, #12]
   216dc:	sub	r0, r0, r5
   216e0:	str	r0, [r4, #12]
   216e4:	mov	r0, r6
   216e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000216ec <myhtml_insertion_fix_for_null_char_drop_all@@Base>:
   216ec:	push	{r4, r5, r6, r7, fp, lr}
   216f0:	add	fp, sp, #16
   216f4:	ldr	r0, [r0, #8]
   216f8:	mov	r4, r1
   216fc:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   21700:	ldr	r5, [r4, #12]
   21704:	cmp	r5, #0
   21708:	popeq	{r4, r5, r6, r7, fp, pc}
   2170c:	mov	r0, #0
   21710:	mov	r6, #0
   21714:	ldr	r3, [r4, #4]
   21718:	ldrb	r1, [r3, r0]
   2171c:	cmp	r1, #0
   21720:	beq	21734 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x48>
   21724:	add	r0, r0, #1
   21728:	cmp	r0, r5
   2172c:	bcc	21714 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x28>
   21730:	b	217c0 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xd4>
   21734:	cmp	r0, r5
   21738:	mov	r2, r0
   2173c:	bcs	21760 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x74>
   21740:	add	r1, r0, #1
   21744:	mov	r2, r1
   21748:	cmp	r1, r5
   2174c:	bcs	21760 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x74>
   21750:	ldrb	r7, [r3, r2]
   21754:	add	r1, r2, #1
   21758:	cmp	r7, #0
   2175c:	beq	21744 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x58>
   21760:	ldr	r7, [r4, #12]
   21764:	sub	r1, r0, r2
   21768:	cmp	r2, r5
   2176c:	add	r1, r1, r7
   21770:	mov	r7, r2
   21774:	str	r1, [r4, #12]
   21778:	bcs	21798 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xac>
   2177c:	mov	r7, r2
   21780:	ldrb	r1, [r3, r7]
   21784:	cmp	r1, #0
   21788:	beq	21798 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xac>
   2178c:	add	r7, r7, #1
   21790:	cmp	r7, r5
   21794:	bcc	21780 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x94>
   21798:	sub	r0, r0, r6
   2179c:	add	r1, r3, r2
   217a0:	sub	r2, r7, r2
   217a4:	add	r0, r3, r0
   217a8:	bl	10f98 <memmove@plt>
   217ac:	add	r6, r6, #1
   217b0:	sub	r0, r7, #1
   217b4:	add	r0, r0, #1
   217b8:	cmp	r0, r5
   217bc:	bcc	21714 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x28>
   217c0:	pop	{r4, r5, r6, r7, fp, pc}

000217c4 <myhtml_insertion_mode_initial@@Base>:
   217c4:	push	{r4, r5, r6, sl, fp, lr}
   217c8:	add	fp, sp, #16
   217cc:	mov	r4, r0
   217d0:	ldr	r0, [r1]
   217d4:	mov	r5, r1
   217d8:	cmp	r0, #3
   217dc:	beq	21824 <myhtml_insertion_mode_initial@@Base+0x60>
   217e0:	cmp	r0, #2
   217e4:	beq	21894 <myhtml_insertion_mode_initial@@Base+0xd0>
   217e8:	cmp	r0, #1
   217ec:	bne	218ac <myhtml_insertion_mode_initial@@Base+0xe8>
   217f0:	ldr	r1, [r5, #48]	; 0x30
   217f4:	mov	r0, #0
   217f8:	tst	r1, #8
   217fc:	popne	{r4, r5, r6, sl, fp, pc}
   21800:	ldr	r0, [r4, #8]
   21804:	mov	r1, r5
   21808:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   2180c:	add	r0, r5, #4
   21810:	bl	11418 <mycore_string_crop_whitespace_from_begin@plt>
   21814:	mov	r0, #1
   21818:	str	r0, [r4, #176]	; 0xb0
   2181c:	str	r0, [r4, #168]	; 0xa8
   21820:	pop	{r4, r5, r6, sl, fp, pc}
   21824:	ldr	r0, [r4, #8]
   21828:	mov	r1, r5
   2182c:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   21830:	ldr	r0, [r4, #8]
   21834:	add	r6, r4, #108	; 0x6c
   21838:	mov	r1, r5
   2183c:	mov	r2, r6
   21840:	bl	10de8 <myhtml_token_release_and_check_doctype_attributes@plt>
   21844:	ldr	r0, [r4, #184]	; 0xb8
   21848:	tst	r0, #8
   2184c:	bne	2185c <myhtml_insertion_mode_initial@@Base+0x98>
   21850:	mov	r0, r4
   21854:	mov	r1, r5
   21858:	bl	11ad8 <myhtml_tree_node_insert_doctype@plt>
   2185c:	ldrb	r0, [r6]
   21860:	cmp	r0, #0
   21864:	bne	21884 <myhtml_insertion_mode_initial@@Base+0xc0>
   21868:	ldr	r0, [r4, #116]	; 0x74
   2186c:	cmp	r0, #0
   21870:	ldrne	r0, [r4, #120]	; 0x78
   21874:	cmpne	r0, #0
   21878:	bne	21884 <myhtml_insertion_mode_initial@@Base+0xc0>
   2187c:	mov	r0, #1
   21880:	str	r0, [r4, #176]	; 0xb0
   21884:	mov	r0, #1
   21888:	str	r0, [r4, #168]	; 0xa8
   2188c:	mov	r0, #0
   21890:	pop	{r4, r5, r6, sl, fp, pc}
   21894:	ldr	r2, [r4, #84]	; 0x54
   21898:	mov	r0, r4
   2189c:	mov	r1, r5
   218a0:	bl	11268 <myhtml_tree_node_insert_comment@plt>
   218a4:	mov	r0, #0
   218a8:	pop	{r4, r5, r6, sl, fp, pc}
   218ac:	mov	r0, #1
   218b0:	str	r0, [r4, #168]	; 0xa8
   218b4:	str	r0, [r4, #176]	; 0xb0
   218b8:	pop	{r4, r5, r6, sl, fp, pc}

000218bc <myhtml_insertion_mode_before_html@@Base>:
   218bc:	push	{r4, r5, r6, sl, fp, lr}
   218c0:	add	fp, sp, #16
   218c4:	mov	r4, r0
   218c8:	mov	r6, r1
   218cc:	ldr	r0, [r1]
   218d0:	ldr	r1, [r1, #48]	; 0x30
   218d4:	tst	r1, #1
   218d8:	bne	21910 <myhtml_insertion_mode_before_html@@Base+0x54>
   218dc:	mov	r5, #0
   218e0:	cmp	r0, #2
   218e4:	bgt	21934 <myhtml_insertion_mode_before_html@@Base+0x78>
   218e8:	cmp	r0, #1
   218ec:	beq	21950 <myhtml_insertion_mode_before_html@@Base+0x94>
   218f0:	cmp	r0, #2
   218f4:	bne	21970 <myhtml_insertion_mode_before_html@@Base+0xb4>
   218f8:	ldr	r2, [r4, #84]	; 0x54
   218fc:	mov	r0, r4
   21900:	mov	r1, r6
   21904:	bl	11268 <myhtml_tree_node_insert_comment@plt>
   21908:	mov	r0, r5
   2190c:	pop	{r4, r5, r6, sl, fp, pc}
   21910:	sub	r1, r0, #23
   21914:	cmp	r1, #2
   21918:	bcc	21970 <myhtml_insertion_mode_before_html@@Base+0xb4>
   2191c:	cmp	r0, #65	; 0x41
   21920:	beq	21970 <myhtml_insertion_mode_before_html@@Base+0xb4>
   21924:	mov	r5, #0
   21928:	cmp	r0, #61	; 0x3d
   2192c:	beq	21970 <myhtml_insertion_mode_before_html@@Base+0xb4>
   21930:	b	2198c <myhtml_insertion_mode_before_html@@Base+0xd0>
   21934:	cmp	r0, #3
   21938:	beq	2198c <myhtml_insertion_mode_before_html@@Base+0xd0>
   2193c:	cmp	r0, #65	; 0x41
   21940:	bne	21970 <myhtml_insertion_mode_before_html@@Base+0xb4>
   21944:	mov	r0, r4
   21948:	mov	r1, r6
   2194c:	b	2197c <myhtml_insertion_mode_before_html@@Base+0xc0>
   21950:	ldr	r0, [r6, #48]	; 0x30
   21954:	tst	r0, #8
   21958:	bne	2198c <myhtml_insertion_mode_before_html@@Base+0xd0>
   2195c:	ldr	r0, [r4, #8]
   21960:	mov	r1, r6
   21964:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   21968:	add	r0, r6, #4
   2196c:	bl	11418 <mycore_string_crop_whitespace_from_begin@plt>
   21970:	mov	r5, #1
   21974:	mov	r0, r4
   21978:	mov	r1, #0
   2197c:	mov	r2, #1
   21980:	bl	10dc4 <myhtml_tree_node_insert_root@plt>
   21984:	mov	r0, #2
   21988:	str	r0, [r4, #168]	; 0xa8
   2198c:	mov	r0, r5
   21990:	pop	{r4, r5, r6, sl, fp, pc}

00021994 <myhtml_insertion_mode_before_head@@Base>:
   21994:	push	{r4, r5, r6, sl, fp, lr}
   21998:	add	fp, sp, #16
   2199c:	mov	r4, r0
   219a0:	mov	r6, r1
   219a4:	ldr	r0, [r1]
   219a8:	ldr	r1, [r1, #48]	; 0x30
   219ac:	tst	r1, #1
   219b0:	bne	219e8 <myhtml_insertion_mode_before_head@@Base+0x54>
   219b4:	mov	r5, #0
   219b8:	cmp	r0, #2
   219bc:	ble	21a0c <myhtml_insertion_mode_before_head@@Base+0x78>
   219c0:	cmp	r0, #3
   219c4:	beq	21a88 <myhtml_insertion_mode_before_head@@Base+0xf4>
   219c8:	cmp	r0, #61	; 0x3d
   219cc:	beq	21a38 <myhtml_insertion_mode_before_head@@Base+0xa4>
   219d0:	cmp	r0, #65	; 0x41
   219d4:	bne	21a68 <myhtml_insertion_mode_before_head@@Base+0xd4>
   219d8:	mov	r0, r4
   219dc:	mov	r1, r6
   219e0:	pop	{r4, r5, r6, sl, fp, lr}
   219e4:	b	21a90 <myhtml_insertion_mode_in_body@@Base>
   219e8:	sub	r1, r0, #23
   219ec:	cmp	r1, #2
   219f0:	bcc	21a68 <myhtml_insertion_mode_before_head@@Base+0xd4>
   219f4:	cmp	r0, #65	; 0x41
   219f8:	beq	21a68 <myhtml_insertion_mode_before_head@@Base+0xd4>
   219fc:	mov	r5, #0
   21a00:	cmp	r0, #61	; 0x3d
   21a04:	beq	21a68 <myhtml_insertion_mode_before_head@@Base+0xd4>
   21a08:	b	21a88 <myhtml_insertion_mode_before_head@@Base+0xf4>
   21a0c:	cmp	r0, #1
   21a10:	beq	21a48 <myhtml_insertion_mode_before_head@@Base+0xb4>
   21a14:	cmp	r0, #2
   21a18:	bne	21a68 <myhtml_insertion_mode_before_head@@Base+0xd4>
   21a1c:	mov	r0, r4
   21a20:	mov	r1, r6
   21a24:	mov	r2, #0
   21a28:	mov	r5, #0
   21a2c:	bl	11268 <myhtml_tree_node_insert_comment@plt>
   21a30:	mov	r0, r5
   21a34:	pop	{r4, r5, r6, sl, fp, pc}
   21a38:	mov	r0, r4
   21a3c:	mov	r1, r6
   21a40:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   21a44:	b	21a7c <myhtml_insertion_mode_before_head@@Base+0xe8>
   21a48:	ldr	r0, [r6, #48]	; 0x30
   21a4c:	tst	r0, #8
   21a50:	bne	21a88 <myhtml_insertion_mode_before_head@@Base+0xf4>
   21a54:	ldr	r0, [r4, #8]
   21a58:	mov	r1, r6
   21a5c:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   21a60:	add	r0, r6, #4
   21a64:	bl	11418 <mycore_string_crop_whitespace_from_begin@plt>
   21a68:	mov	r0, r4
   21a6c:	mov	r1, #61	; 0x3d
   21a70:	mov	r2, #1
   21a74:	mov	r5, #1
   21a78:	bl	11784 <myhtml_tree_node_insert@plt>
   21a7c:	str	r0, [r4, #92]	; 0x5c
   21a80:	mov	r0, #3
   21a84:	str	r0, [r4, #168]	; 0xa8
   21a88:	mov	r0, r5
   21a8c:	pop	{r4, r5, r6, sl, fp, pc}

00021a90 <myhtml_insertion_mode_in_body@@Base>:
   21a90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21a94:	add	fp, sp, #28
   21a98:	sub	sp, sp, #12
   21a9c:	mov	r5, r0
   21aa0:	ldr	r2, [r1]
   21aa4:	ldr	r0, [r1, #48]	; 0x30
   21aa8:	mov	r6, r1
   21aac:	tst	r0, #1
   21ab0:	bne	21ee8 <myhtml_insertion_mode_in_body@@Base+0x458>
   21ab4:	sub	r0, r2, #1
   21ab8:	mov	r8, #0
   21abc:	cmp	r0, #250	; 0xfa
   21ac0:	bhi	22e90 <myhtml_insertion_mode_in_body@@Base+0x1400>
   21ac4:	add	r1, pc, #4
   21ac8:	ldr	r0, [r1, r0, lsl #2]
   21acc:	add	pc, r1, r0
   21ad0:	andeq	r0, r0, ip, lsr sp
   21ad4:	andeq	r0, r0, r8, lsr lr
   21ad8:	ldrdeq	r1, [r0], -r4
   21adc:	andeq	r0, r0, r8, asr lr
   21ae0:	andeq	r1, r0, r0, asr #7
   21ae4:	andeq	r1, r0, r0, asr #7
   21ae8:	andeq	r0, r0, ip, ror #7
   21aec:	andeq	r1, r0, r0, asr #7
   21af0:	andeq	r0, r0, r8, lsr #18
   21af4:	andeq	r0, r0, ip, asr #14
   21af8:	andeq	r0, r0, ip, ror #7
   21afc:	andeq	r0, r0, ip, ror #7
   21b00:	andeq	r1, r0, r0, asr #7
   21b04:	andeq	r1, r0, r8, lsl #7
   21b08:	andeq	r0, r0, ip, asr #13
   21b0c:	andeq	r0, r0, ip, asr #13
   21b10:	andeq	r1, r0, r0, asr #7
   21b14:	andeq	r1, r0, r0, asr #7
   21b18:	andeq	r0, r0, ip, asr #13
   21b1c:	andeq	r1, r0, r8, lsl #7
   21b20:	andeq	r1, r0, r0, asr #7
   21b24:	andeq	r0, r0, ip, ror #7
   21b28:			; <UNDEFINED> instruction: 0x00000ebc
   21b2c:	andeq	r0, r0, ip, asr #14
   21b30:	andeq	r0, r0, r0, asr pc
   21b34:	andeq	r1, r0, r0, asr #7
   21b38:	ldrdeq	r1, [r0], -r4
   21b3c:	andeq	r0, r0, ip, ror #7
   21b40:	andeq	r1, r0, r0, asr #7
   21b44:	andeq	r1, r0, r8, lsl #7
   21b48:	ldrdeq	r1, [r0], -r4
   21b4c:	ldrdeq	r1, [r0], -r4
   21b50:	andeq	r1, r0, r0, asr #7
   21b54:	andeq	r1, r0, r0, asr #7
   21b58:	andeq	r1, r0, r0, asr #7
   21b5c:	andeq	r0, r0, r0, ror #18
   21b60:	andeq	r1, r0, r0, asr #7
   21b64:	andeq	r0, r0, ip, ror #7
   21b68:	andeq	r1, r0, r0, asr #7
   21b6c:	andeq	r0, r0, ip, ror #7
   21b70:	andeq	r0, r0, ip, ror #7
   21b74:	andeq	r0, r0, ip, ror #7
   21b78:	andeq	r0, r0, ip, ror #7
   21b7c:	andeq	r0, r0, r0, ror #18
   21b80:	andeq	r1, r0, r8, lsl #7
   21b84:	andeq	r0, r0, ip, asr #14
   21b88:	andeq	r0, r0, ip, ror #7
   21b8c:	andeq	r0, r0, ip, ror #7
   21b90:	andeq	r0, r0, ip, ror #7
   21b94:	andeq	r1, r0, r8, lsl #7
   21b98:	andeq	r0, r0, ip, ror #7
   21b9c:	andeq	r0, r0, r8, lsr #31
   21ba0:	ldrdeq	r1, [r0], -r4
   21ba4:	andeq	r1, r0, r0, lsr #32
   21ba8:	andeq	r0, r0, r8, asr r7
   21bac:	andeq	r0, r0, r8, asr r7
   21bb0:	andeq	r0, r0, r8, asr r7
   21bb4:	andeq	r0, r0, r8, asr r7
   21bb8:	andeq	r0, r0, r8, asr r7
   21bbc:	andeq	r0, r0, r8, asr r7
   21bc0:	ldrdeq	r1, [r0], -r4
   21bc4:	andeq	r0, r0, ip, ror #7
   21bc8:	andeq	r0, r0, ip, ror #7
   21bcc:	muleq	r0, r0, r0
   21bd0:	andeq	r1, r0, ip, lsl #2
   21bd4:	andeq	r1, r0, r8, lsl #7
   21bd8:	andeq	r1, r0, r4, ror r5
   21bdc:	andeq	r1, r0, r8, lsl #3
   21be0:	andeq	r0, r0, ip, asr #14
   21be4:	andeq	r1, r0, r0, lsr #3
   21be8:	andeq	r1, r0, r0, asr #7
   21bec:	andeq	r1, r0, r0, asr #7
   21bf0:	andeq	r1, r0, r0, asr #7
   21bf4:	andeq	r0, r0, ip, asr #14
   21bf8:	andeq	r1, r0, r0, asr #7
   21bfc:	andeq	r1, r0, r0, asr #7
   21c00:	andeq	r1, r0, r0, lsl #4
   21c04:	andeq	r0, r0, ip, asr #13
   21c08:	andeq	r0, r0, r8, asr sl
   21c0c:	andeq	r0, r0, ip, ror #7
   21c10:	andeq	r1, r0, r0, asr #7
   21c14:	andeq	r1, r0, r0, asr #7
   21c18:	andeq	r0, r0, r8, lsr #18
   21c1c:	andeq	r1, r0, r4, ror #5
   21c20:	andeq	r1, r0, r0, lsr r3
   21c24:	andeq	r0, r0, ip, asr #13
   21c28:	andeq	r1, r0, r0, asr #7
   21c2c:	andeq	r1, r0, r0, asr #7
   21c30:	andeq	r0, r0, ip, ror #7
   21c34:	andeq	r1, r0, r4, asr r3
   21c38:	andeq	r1, r0, r0, ror #7
   21c3c:	andeq	r0, r0, ip, asr #13
   21c40:			; <UNDEFINED> instruction: 0x000013b4
   21c44:	andeq	r0, r0, r8, lsr #18
   21c48:	andeq	r0, r0, ip, ror #7
   21c4c:	muleq	r0, ip, sl
   21c50:	muleq	r0, ip, sl
   21c54:	andeq	r1, r0, r0, asr #7
   21c58:	andeq	r0, r0, ip, ror #7
   21c5c:	andeq	r0, r0, r0, asr r9
   21c60:	andeq	r1, r0, ip, ror #7
   21c64:	andeq	r0, r0, r8, asr sl
   21c68:	andeq	r1, r0, r0, asr #7
   21c6c:	andeq	r1, r0, r0, asr #7
   21c70:			; <UNDEFINED> instruction: 0x00000ab8
   21c74:	andeq	r0, r0, r4, ror #21
   21c78:	andeq	r0, r0, r4, ror #21
   21c7c:			; <UNDEFINED> instruction: 0x00000ab8
   21c80:	andeq	r1, r0, r0, asr #7
   21c84:	andeq	r1, r0, r8, lsl #7
   21c88:	andeq	r1, r0, r0, asr #7
   21c8c:	andeq	r0, r0, ip, asr #13
   21c90:	andeq	r0, r0, ip, ror #7
   21c94:	andeq	r1, r0, r4, lsr r4
   21c98:	andeq	r1, r0, r8, lsl #7
   21c9c:	andeq	r0, r0, r0, asr r9
   21ca0:	andeq	r1, r0, r0, asr #7
   21ca4:	andeq	r1, r0, r8, lsl #7
   21ca8:	andeq	r1, r0, r8, lsl #7
   21cac:	andeq	r0, r0, ip, asr #13
   21cb0:	andeq	r1, r0, r0, asr #7
   21cb4:	andeq	r0, r0, ip, ror #7
   21cb8:	andeq	r1, r0, r0, asr #7
   21cbc:	andeq	r1, r0, ip, lsl #9
   21cc0:	andeq	r1, r0, r4, asr #9
   21cc4:	ldrdeq	r1, [r0], -r4
   21cc8:	ldrdeq	r1, [r0], -r4
   21ccc:	andeq	r0, r0, ip, asr #13
   21cd0:	andeq	r1, r0, r0, lsl r5
   21cd4:	ldrdeq	r1, [r0], -r4
   21cd8:	ldrdeq	r1, [r0], -r4
   21cdc:	ldrdeq	r1, [r0], -r4
   21ce0:	andeq	r1, r0, r0, asr #7
   21ce4:	andeq	r0, r0, ip, asr #13
   21ce8:	ldrdeq	r1, [r0], -r4
   21cec:	andeq	r0, r0, r0, asr r9
   21cf0:	andeq	r1, r0, r8, lsl #7
   21cf4:	andeq	r1, r0, r8, lsl #7
   21cf8:	andeq	r0, r0, ip, ror #7
   21cfc:	andeq	r1, r0, r0, asr #7
   21d00:	andeq	r1, r0, r0, asr #7
   21d04:	andeq	r0, r0, ip, asr #14
   21d08:	andeq	r1, r0, r4, asr #10
   21d0c:	andeq	r1, r0, r0, asr #7
   21d10:	andeq	r1, r0, r0, asr #7
   21d14:	andeq	r1, r0, r0, asr #7
   21d18:	andeq	r1, r0, r0, asr #7
   21d1c:	andeq	r1, r0, r0, asr #7
   21d20:	andeq	r1, r0, r0, asr #7
   21d24:	andeq	r1, r0, r0, asr #7
   21d28:	andeq	r1, r0, r0, asr #7
   21d2c:	andeq	r1, r0, r0, asr #7
   21d30:	andeq	r1, r0, r0, asr #7
   21d34:	andeq	r1, r0, r0, asr #7
   21d38:	andeq	r1, r0, r0, asr #7
   21d3c:	andeq	r1, r0, r0, asr #7
   21d40:	andeq	r1, r0, r0, asr #7
   21d44:	andeq	r1, r0, r0, asr #7
   21d48:	andeq	r1, r0, r0, asr #7
   21d4c:	andeq	r1, r0, r0, asr #7
   21d50:	andeq	r1, r0, r0, asr #7
   21d54:	andeq	r1, r0, r0, asr #7
   21d58:	andeq	r1, r0, r0, asr #7
   21d5c:	andeq	r1, r0, r0, asr #7
   21d60:	andeq	r1, r0, r0, asr #7
   21d64:	andeq	r1, r0, r0, asr #7
   21d68:	andeq	r1, r0, r0, asr #7
   21d6c:	andeq	r1, r0, r0, asr #7
   21d70:	andeq	r1, r0, r0, asr #7
   21d74:	andeq	r1, r0, r0, asr #7
   21d78:	andeq	r1, r0, r0, asr #7
   21d7c:	andeq	r1, r0, r0, asr #7
   21d80:	andeq	r1, r0, r0, asr #7
   21d84:	andeq	r1, r0, r0, asr #7
   21d88:	andeq	r1, r0, r0, asr #7
   21d8c:	andeq	r1, r0, r0, asr #7
   21d90:	andeq	r1, r0, r0, asr #7
   21d94:	andeq	r1, r0, r0, asr #7
   21d98:	andeq	r1, r0, r0, asr #7
   21d9c:	andeq	r1, r0, r0, asr #7
   21da0:	andeq	r1, r0, r0, asr #7
   21da4:	andeq	r1, r0, r0, asr #7
   21da8:	andeq	r1, r0, r0, asr #7
   21dac:	andeq	r1, r0, r0, asr #7
   21db0:	andeq	r1, r0, r0, asr #7
   21db4:	andeq	r1, r0, r0, asr #7
   21db8:	andeq	r1, r0, r0, asr #7
   21dbc:	andeq	r1, r0, r0, asr #7
   21dc0:	andeq	r1, r0, r0, asr #7
   21dc4:	andeq	r1, r0, r0, asr #7
   21dc8:	andeq	r1, r0, r0, asr #7
   21dcc:	andeq	r1, r0, r0, asr #7
   21dd0:	andeq	r1, r0, r0, asr #7
   21dd4:	andeq	r1, r0, r0, asr #7
   21dd8:	andeq	r1, r0, r0, asr #7
   21ddc:	andeq	r1, r0, r0, asr #7
   21de0:	andeq	r1, r0, r0, asr #7
   21de4:	andeq	r1, r0, r0, asr #7
   21de8:	andeq	r1, r0, r0, asr #7
   21dec:	andeq	r1, r0, r0, asr #7
   21df0:	andeq	r1, r0, r0, asr #7
   21df4:	andeq	r1, r0, r0, asr #7
   21df8:	andeq	r1, r0, r0, asr #7
   21dfc:	andeq	r1, r0, r0, asr #7
   21e00:	andeq	r1, r0, r0, asr #7
   21e04:	andeq	r1, r0, r0, asr #7
   21e08:	andeq	r1, r0, r0, asr #7
   21e0c:	andeq	r1, r0, r0, asr #7
   21e10:	andeq	r1, r0, r0, asr #7
   21e14:	andeq	r1, r0, r0, asr #7
   21e18:	andeq	r1, r0, r0, asr #7
   21e1c:	andeq	r1, r0, r0, asr #7
   21e20:	andeq	r1, r0, r0, asr #7
   21e24:	andeq	r1, r0, r0, asr #7
   21e28:	andeq	r1, r0, r0, asr #7
   21e2c:	andeq	r1, r0, r0, asr #7
   21e30:	andeq	r1, r0, r0, asr #7
   21e34:	andeq	r1, r0, r8, lsr #11
   21e38:	andeq	r1, r0, r0, asr #7
   21e3c:	andeq	r1, r0, r0, asr #7
   21e40:	andeq	r1, r0, r0, asr #7
   21e44:	andeq	r1, r0, r0, asr #7
   21e48:	andeq	r1, r0, r0, asr #7
   21e4c:	andeq	r1, r0, r0, asr #7
   21e50:	andeq	r1, r0, r0, asr #7
   21e54:	andeq	r1, r0, r0, asr #7
   21e58:	andeq	r1, r0, r0, asr #7
   21e5c:	andeq	r1, r0, r0, asr #7
   21e60:	andeq	r1, r0, r0, asr #7
   21e64:	andeq	r1, r0, r0, asr #7
   21e68:	andeq	r1, r0, r0, asr #7
   21e6c:	andeq	r1, r0, r0, asr #7
   21e70:	andeq	r1, r0, r0, asr #7
   21e74:	andeq	r1, r0, r0, asr #7
   21e78:	andeq	r1, r0, r0, asr #7
   21e7c:	andeq	r1, r0, r0, asr #7
   21e80:	andeq	r1, r0, r0, asr #7
   21e84:	andeq	r1, r0, r0, asr #7
   21e88:	andeq	r1, r0, r0, asr #7
   21e8c:	andeq	r1, r0, r0, asr #7
   21e90:	andeq	r1, r0, r0, asr #7
   21e94:	andeq	r1, r0, r0, asr #7
   21e98:	andeq	r1, r0, r0, asr #7
   21e9c:	andeq	r1, r0, r0, asr #7
   21ea0:	andeq	r1, r0, r0, asr #7
   21ea4:	andeq	r1, r0, r0, asr #7
   21ea8:	andeq	r1, r0, r0, asr #7
   21eac:	andeq	r1, r0, r0, asr #7
   21eb0:	andeq	r1, r0, r0, asr #7
   21eb4:	andeq	r1, r0, r0, asr #7
   21eb8:	andeq	r1, r0, r0, lsl #12
   21ebc:	mov	r0, r5
   21ec0:	mov	r1, #99	; 0x63
   21ec4:	mov	r2, #1
   21ec8:	mov	r3, #32
   21ecc:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   21ed0:	cmp	r0, #0
   21ed4:	beq	22e98 <myhtml_insertion_mode_in_body@@Base+0x1408>
   21ed8:	mov	r0, r5
   21edc:	mov	r1, r6
   21ee0:	bl	113ac <myhtml_tree_tags_close_p@plt>
   21ee4:	b	22e98 <myhtml_insertion_mode_in_body@@Base+0x1408>
   21ee8:	sub	r0, r2, #4
   21eec:	cmp	r0, #135	; 0x87
   21ef0:	bhi	225ec <myhtml_insertion_mode_in_body@@Base+0xb5c>
   21ef4:	add	r1, pc, #4
   21ef8:	ldr	r0, [r1, r0, lsl #2]
   21efc:	add	pc, r1, r0
   21f00:	andeq	r0, r0, r0, lsl #5
   21f04:	andeq	r0, r0, ip, ror #13
   21f08:	andeq	r0, r0, ip, ror #13
   21f0c:	andeq	r0, r0, r0, lsr #4
   21f10:	andeq	r0, r0, ip, ror #13
   21f14:	andeq	r0, r0, r8, ror r3
   21f18:	andeq	r0, r0, ip, ror #13
   21f1c:	andeq	r0, r0, r0, lsr #4
   21f20:	andeq	r0, r0, r0, lsr #4
   21f24:	andeq	r0, r0, ip, ror #13
   21f28:	andeq	r0, r0, r0, lsl #5
   21f2c:	andeq	r0, r0, ip, ror #13
   21f30:	andeq	r0, r0, ip, ror #13
   21f34:	andeq	r0, r0, ip, ror #13
   21f38:	andeq	r0, r0, ip, ror #13
   21f3c:	andeq	r0, r0, ip, ror #13
   21f40:	andeq	r0, r0, r0, lsl #5
   21f44:	andeq	r0, r0, ip, ror #13
   21f48:	andeq	r0, r0, r0, lsr #4
   21f4c:	andeq	r0, r0, ip, asr #14
   21f50:	muleq	r0, r8, r7
   21f54:	andeq	r0, r0, r0, lsr #4
   21f58:	andeq	r0, r0, ip, ror #13
   21f5c:	andeq	r0, r0, ip, ror #13
   21f60:	andeq	r0, r0, r0, lsr #4
   21f64:	andeq	r0, r0, ip, ror #13
   21f68:	andeq	r0, r0, r0, lsl #5
   21f6c:	andeq	r0, r0, ip, ror #13
   21f70:	andeq	r0, r0, ip, ror #13
   21f74:	andeq	r0, r0, ip, ror #13
   21f78:	andeq	r0, r0, ip, ror #13
   21f7c:	andeq	r0, r0, ip, ror #13
   21f80:	andeq	r0, r0, r0, ror #7
   21f84:	andeq	r0, r0, ip, ror #13
   21f88:	andeq	r0, r0, r0, lsr #4
   21f8c:	andeq	r0, r0, ip, ror #13
   21f90:	andeq	r0, r0, r0, lsr #4
   21f94:	andeq	r0, r0, r0, lsr #4
   21f98:	andeq	r0, r0, r0, lsr #4
   21f9c:	andeq	r0, r0, r0, lsr #4
   21fa0:	andeq	r0, r0, r0, ror #7
   21fa4:	andeq	r0, r0, r0, lsl #5
   21fa8:	andeq	r0, r0, ip, ror #13
   21fac:	andeq	r0, r0, r0, lsr #4
   21fb0:	andeq	r0, r0, r0, lsr #4
   21fb4:	andeq	r0, r0, r0, lsr #4
   21fb8:	andeq	r0, r0, r0, lsl #5
   21fbc:	andeq	r0, r0, r0, lsr #4
   21fc0:	andeq	r0, r0, ip, asr #15
   21fc4:	andeq	r0, r0, ip, ror #13
   21fc8:	andeq	r0, r0, ip, ror #13
   21fcc:			; <UNDEFINED> instruction: 0x000002b0
   21fd0:			; <UNDEFINED> instruction: 0x000002b0
   21fd4:			; <UNDEFINED> instruction: 0x000002b0
   21fd8:			; <UNDEFINED> instruction: 0x000002b0
   21fdc:			; <UNDEFINED> instruction: 0x000002b0
   21fe0:			; <UNDEFINED> instruction: 0x000002b0
   21fe4:	andeq	r0, r0, ip, ror #13
   21fe8:	andeq	r0, r0, r0, lsr #4
   21fec:	andeq	r0, r0, r0, lsr #4
   21ff0:	andeq	r0, r0, ip, ror #13
   21ff4:	andeq	r0, r0, r8, lsr r8
   21ff8:	andeq	r0, r0, r0, lsl #5
   21ffc:	andeq	r0, r0, ip, ror #13
   22000:	andeq	r0, r0, ip, ror #13
   22004:	andeq	r0, r0, ip, ror #13
   22008:	andeq	r0, r0, ip, ror #13
   2200c:	andeq	r0, r0, ip, ror #13
   22010:	andeq	r0, r0, ip, ror #13
   22014:	andeq	r0, r0, ip, ror #13
   22018:	andeq	r0, r0, ip, ror #13
   2201c:	andeq	r0, r0, ip, ror #13
   22020:	andeq	r0, r0, ip, ror #13
   22024:	andeq	r0, r0, r4, lsl #17
   22028:	andeq	r0, r0, ip, ror #13
   2202c:	andeq	r0, r0, r0, lsr #4
   22030:	andeq	r0, r0, r0, lsr #4
   22034:	andeq	r0, r0, ip, ror #13
   22038:	andeq	r0, r0, ip, ror #13
   2203c:	andeq	r0, r0, r8, ror r3
   22040:	andeq	r0, r0, r0, lsr #4
   22044:	andeq	r0, r0, ip, ror #13
   22048:	andeq	r0, r0, ip, ror #13
   2204c:	andeq	r0, r0, ip, ror #13
   22050:	andeq	r0, r0, ip, ror #13
   22054:	andeq	r0, r0, r0, lsr #4
   22058:	andeq	r0, r0, r0, lsl #5
   2205c:	andeq	r0, r0, ip, ror #13
   22060:	andeq	r0, r0, ip, ror #13
   22064:	andeq	r0, r0, ip, ror #13
   22068:	andeq	r0, r0, r8, ror r3
   2206c:	andeq	r0, r0, r0, lsr #4
   22070:	andeq	r0, r0, ip, ror #13
   22074:	andeq	r0, r0, ip, ror #13
   22078:	andeq	r0, r0, ip, ror #13
   2207c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22080:	andeq	r0, r0, ip, ror #13
   22084:	andeq	r0, r0, ip, ror #13
   22088:	andeq	r0, r0, r0, lsr #4
   2208c:	andeq	r0, r0, ip, ror #13
   22090:	andeq	r0, r0, ip, ror #13
   22094:	andeq	r0, r0, ip, ror #13
   22098:	andeq	r0, r0, ip, ror #13
   2209c:	andeq	r0, r0, ip, ror #13
   220a0:	andeq	r0, r0, ip, ror #13
   220a4:	andeq	r0, r0, ip, ror #13
   220a8:	andeq	r0, r0, r0, lsl #5
   220ac:	andeq	r0, r0, ip, ror #13
   220b0:	andeq	r0, r0, ip, ror #13
   220b4:	andeq	r0, r0, r0, lsr #4
   220b8:	andeq	r0, r0, ip, ror #13
   220bc:	andeq	r0, r0, r0, lsl #5
   220c0:	andeq	r0, r0, ip, ror #13
   220c4:	andeq	r0, r0, ip, ror #13
   220c8:	andeq	r0, r0, r0, lsl #5
   220cc:	andeq	r0, r0, r0, lsl #5
   220d0:	andeq	r0, r0, ip, ror #13
   220d4:	andeq	r0, r0, ip, ror #13
   220d8:	andeq	r0, r0, r0, lsr #4
   220dc:	andeq	r0, r0, ip, ror #13
   220e0:	andeq	r0, r0, ip, ror #13
   220e4:	andeq	r0, r0, ip, ror #13
   220e8:	andeq	r0, r0, ip, ror #13
   220ec:	andeq	r0, r0, ip, ror #13
   220f0:	muleq	r0, ip, r2
   220f4:	andeq	r0, r0, ip, ror #13
   220f8:	andeq	r0, r0, ip, ror #13
   220fc:	andeq	r0, r0, ip, ror #13
   22100:	andeq	r0, r0, ip, ror #13
   22104:	andeq	r0, r0, ip, ror #13
   22108:	andeq	r0, r0, ip, ror #13
   2210c:	andeq	r0, r0, ip, ror #13
   22110:	andeq	r0, r0, ip, ror #13
   22114:	andeq	r0, r0, r0, lsl #5
   22118:	andeq	r0, r0, r0, lsl #5
   2211c:	andeq	r0, r0, r0, lsr #4
   22120:	mov	r1, r2
   22124:	mov	r0, r5
   22128:	mov	r2, #1
   2212c:	mov	r3, #8
   22130:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   22134:	mov	r8, #0
   22138:	cmp	r0, #0
   2213c:	beq	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   22140:	mov	r0, r5
   22144:	mov	r1, #0
   22148:	mov	r2, #0
   2214c:	bl	115a4 <myhtml_tree_generate_implied_end_tags@plt>
   22150:	mov	r0, r5
   22154:	bl	11514 <myhtml_tree_current_node@plt>
   22158:	ldr	r1, [r6]
   2215c:	bl	11868 <myhtml_is_html_node@plt>
   22160:	ldr	r1, [r6]
   22164:	mov	r0, r5
   22168:	mov	r2, #1
   2216c:	mov	r3, #0
   22170:	bl	11760 <myhtml_tree_open_elements_pop_until@plt>
   22174:	mov	r0, r8
   22178:	sub	sp, fp, #28
   2217c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22180:	mov	r0, r5
   22184:	mov	r1, r6
   22188:	bl	116b8 <myhtml_tree_adoption_agency_algorithm@plt>
   2218c:	mov	r8, #0
   22190:	mov	r0, r8
   22194:	sub	sp, fp, #28
   22198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2219c:	mov	r0, r5
   221a0:	mov	r1, r6
   221a4:	sub	sp, fp, #28
   221a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   221ac:	b	2325c <myhtml_insertion_mode_in_head@@Base>
   221b0:	ldr	r1, [r5, #128]	; 0x80
   221b4:	mov	r8, #0
   221b8:	ldr	r0, [r1, #4]
   221bc:	cmp	r0, #0
   221c0:	beq	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   221c4:	ldr	r4, [r1]
   221c8:	rsb	r7, r0, #1
   221cc:	ldr	r0, [r4, -r7, lsl #2]
   221d0:	ldr	r1, [r0, #4]
   221d4:	ldr	r0, [r5, #28]
   221d8:	bl	117fc <myhtml_tag_get_by_id@plt>
   221dc:	ldr	r1, [r4, -r7, lsl #2]
   221e0:	ldr	r2, [r1, #4]
   221e4:	ldr	r1, [r1, #8]
   221e8:	sub	r2, r2, #55	; 0x37
   221ec:	cmp	r2, #5
   221f0:	bhi	221fc <myhtml_insertion_mode_in_body@@Base+0x76c>
   221f4:	cmp	r1, #1
   221f8:	beq	22328 <myhtml_insertion_mode_in_body@@Base+0x898>
   221fc:	cmp	r7, #0
   22200:	beq	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   22204:	add	r0, r0, r1, lsl #2
   22208:	add	r7, r7, #1
   2220c:	ldr	r0, [r0, #16]
   22210:	ands	r0, r0, #8
   22214:	beq	221cc <myhtml_insertion_mode_in_body@@Base+0x73c>
   22218:	b	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   2221c:	mov	r0, r5
   22220:	bl	11490 <myhtml_tree_active_formatting_reconstruction@plt>
   22224:	b	22ba8 <myhtml_insertion_mode_in_body@@Base+0x1118>
   22228:	mov	r0, r5
   2222c:	mov	r1, #99	; 0x63
   22230:	mov	r2, #1
   22234:	mov	r3, #32
   22238:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   2223c:	cmp	r0, #0
   22240:	beq	22250 <myhtml_insertion_mode_in_body@@Base+0x7c0>
   22244:	mov	r0, r5
   22248:	mov	r1, r6
   2224c:	bl	113ac <myhtml_tree_tags_close_p@plt>
   22250:	mov	r0, r5
   22254:	bl	11514 <myhtml_tree_current_node@plt>
   22258:	ldr	r1, [r0, #4]
   2225c:	sub	r1, r1, #55	; 0x37
   22260:	cmp	r1, #5
   22264:	bhi	22e98 <myhtml_insertion_mode_in_body@@Base+0x1408>
   22268:	ldr	r0, [r0, #8]
   2226c:	cmp	r0, #1
   22270:	beq	22df4 <myhtml_insertion_mode_in_body@@Base+0x1364>
   22274:	b	22e98 <myhtml_insertion_mode_in_body@@Base+0x1408>
   22278:	mov	r1, r2
   2227c:	mov	r0, r5
   22280:	mov	r2, #1
   22284:	mov	r3, #8
   22288:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   2228c:	mov	r8, #0
   22290:	cmp	r0, #0
   22294:	beq	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   22298:	mov	r0, r5
   2229c:	mov	r1, #0
   222a0:	mov	r2, #0
   222a4:	bl	115a4 <myhtml_tree_generate_implied_end_tags@plt>
   222a8:	mov	r0, r5
   222ac:	bl	11514 <myhtml_tree_current_node@plt>
   222b0:	ldr	r1, [r6]
   222b4:	bl	11868 <myhtml_is_html_node@plt>
   222b8:	ldr	r1, [r6]
   222bc:	mov	r0, r5
   222c0:	mov	r2, #1
   222c4:	mov	r3, #0
   222c8:	bl	11760 <myhtml_tree_open_elements_pop_until@plt>
   222cc:	mov	r0, r5
   222d0:	bl	11afc <myhtml_tree_active_formatting_up_to_last_marker@plt>
   222d4:	mov	r0, r8
   222d8:	sub	sp, fp, #28
   222dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   222e0:	mov	r1, r2
   222e4:	mov	r0, r5
   222e8:	mov	r2, #1
   222ec:	mov	r3, #8
   222f0:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   222f4:	cmp	r0, #0
   222f8:	beq	2218c <myhtml_insertion_mode_in_body@@Base+0x6fc>
   222fc:	ldr	r1, [r6]
   22300:	mov	r0, r5
   22304:	mov	r2, #1
   22308:	bl	115a4 <myhtml_tree_generate_implied_end_tags@plt>
   2230c:	mov	r0, r5
   22310:	bl	11514 <myhtml_tree_current_node@plt>
   22314:	ldr	r1, [r6]
   22318:	bl	11868 <myhtml_is_html_node@plt>
   2231c:	ldr	r1, [r6]
   22320:	mov	r8, #0
   22324:	b	22164 <myhtml_insertion_mode_in_body@@Base+0x6d4>
   22328:	mov	r0, r5
   2232c:	mov	r1, #0
   22330:	mov	r2, #0
   22334:	mov	r8, #0
   22338:	bl	115a4 <myhtml_tree_generate_implied_end_tags@plt>
   2233c:	mov	r0, r5
   22340:	bl	11514 <myhtml_tree_current_node@plt>
   22344:	ldr	r1, [r6]
   22348:	bl	11868 <myhtml_is_html_node@plt>
   2234c:	ldr	r0, [r5, #128]	; 0x80
   22350:	ldr	r1, [r0, #4]
   22354:	cmp	r1, #0
   22358:	beq	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   2235c:	ldr	r1, [r0, #4]
   22360:	sub	r1, r1, #1
   22364:	str	r1, [r0, #4]
   22368:	ldr	r1, [r0, #4]
   2236c:	ldr	r1, [r4, r1, lsl #2]
   22370:	ldr	r1, [r1, #4]
   22374:	cmp	r1, #55	; 0x37
   22378:	beq	223e0 <myhtml_insertion_mode_in_body@@Base+0x950>
   2237c:	ldr	r1, [r0, #4]
   22380:	ldr	r1, [r4, r1, lsl #2]
   22384:	ldr	r1, [r1, #4]
   22388:	cmp	r1, #56	; 0x38
   2238c:	beq	223e0 <myhtml_insertion_mode_in_body@@Base+0x950>
   22390:	ldr	r1, [r0, #4]
   22394:	ldr	r1, [r4, r1, lsl #2]
   22398:	ldr	r1, [r1, #4]
   2239c:	cmp	r1, #57	; 0x39
   223a0:	beq	223e0 <myhtml_insertion_mode_in_body@@Base+0x950>
   223a4:	ldr	r1, [r0, #4]
   223a8:	ldr	r1, [r4, r1, lsl #2]
   223ac:	ldr	r1, [r1, #4]
   223b0:	cmp	r1, #58	; 0x3a
   223b4:	beq	223e0 <myhtml_insertion_mode_in_body@@Base+0x950>
   223b8:	ldr	r1, [r0, #4]
   223bc:	ldr	r1, [r4, r1, lsl #2]
   223c0:	ldr	r1, [r1, #4]
   223c4:	cmp	r1, #59	; 0x3b
   223c8:	beq	223e0 <myhtml_insertion_mode_in_body@@Base+0x950>
   223cc:	ldr	r1, [r0, #4]
   223d0:	ldr	r1, [r4, r1, lsl #2]
   223d4:	ldr	r1, [r1, #4]
   223d8:	cmp	r1, #60	; 0x3c
   223dc:	bne	22350 <myhtml_insertion_mode_in_body@@Base+0x8c0>
   223e0:	ldr	r1, [r0, #4]
   223e4:	ldr	r1, [r4, r1, lsl #2]
   223e8:	ldr	r1, [r1, #8]
   223ec:	cmp	r1, #1
   223f0:	bne	22350 <myhtml_insertion_mode_in_body@@Base+0x8c0>
   223f4:	b	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   223f8:	mov	r0, r5
   223fc:	bl	11490 <myhtml_tree_active_formatting_reconstruction@plt>
   22400:	mov	r0, r5
   22404:	mov	r1, r6
   22408:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   2240c:	ldr	r0, [r5]
   22410:	ldr	r1, [r0, #36]	; 0x24
   22414:	mov	r0, r5
   22418:	bl	1116c <myhtml_tree_active_formatting_append@plt>
   2241c:	b	22bbc <myhtml_insertion_mode_in_body@@Base+0x112c>
   22420:	mov	r0, r5
   22424:	mov	r1, r6
   22428:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   2242c:	b	230bc <myhtml_insertion_mode_in_body@@Base+0x162c>
   22430:	ldr	r0, [r5, #128]	; 0x80
   22434:	ldr	r1, [r5, #180]	; 0xb4
   22438:	ldr	r2, [r5, #180]	; 0xb4
   2243c:	and	r1, r1, #2
   22440:	eor	r1, r2, r1
   22444:	str	r1, [r5, #180]	; 0xb4
   22448:	ldr	sl, [r0, #4]
   2244c:	cmp	sl, #0
   22450:	beq	21ebc <myhtml_insertion_mode_in_body@@Base+0x42c>
   22454:	ldr	r0, [r0]
   22458:	add	r0, r0, sl, lsl #2
   2245c:	ldr	r4, [r0, #-4]
   22460:	ldr	r0, [r5, #28]
   22464:	mov	r7, r4
   22468:	ldr	r1, [r7, #4]!
   2246c:	bl	117fc <myhtml_tag_get_by_id@plt>
   22470:	mov	r9, r0
   22474:	mov	r0, r4
   22478:	mov	r1, #36	; 0x24
   2247c:	bl	11868 <myhtml_is_html_node@plt>
   22480:	cmp	r0, #0
   22484:	bne	230f4 <myhtml_insertion_mode_in_body@@Base+0x1664>
   22488:	rsb	sl, sl, #2
   2248c:	mov	r0, r4
   22490:	mov	r1, #44	; 0x2c
   22494:	bl	11868 <myhtml_is_html_node@plt>
   22498:	cmp	r0, #0
   2249c:	bne	231f8 <myhtml_insertion_mode_in_body@@Base+0x1768>
   224a0:	ldr	r0, [r4, #8]
   224a4:	add	r1, r9, r0, lsl #2
   224a8:	ldrb	r1, [r1, #16]
   224ac:	tst	r1, #2
   224b0:	bne	224c0 <myhtml_insertion_mode_in_body@@Base+0xa30>
   224b4:	cmp	sl, #1
   224b8:	bne	224e0 <myhtml_insertion_mode_in_body@@Base+0xa50>
   224bc:	b	21ebc <myhtml_insertion_mode_in_body@@Base+0x42c>
   224c0:	ldr	r1, [r7]
   224c4:	cmp	r1, #7
   224c8:	cmpne	r1, #99	; 0x63
   224cc:	bne	2251c <myhtml_insertion_mode_in_body@@Base+0xa8c>
   224d0:	cmp	sl, #1
   224d4:	beq	21ebc <myhtml_insertion_mode_in_body@@Base+0x42c>
   224d8:	cmp	r0, #1
   224dc:	bne	21ebc <myhtml_insertion_mode_in_body@@Base+0x42c>
   224e0:	ldr	r1, [r5, #128]	; 0x80
   224e4:	ldr	r0, [r5, #28]
   224e8:	ldr	r1, [r1]
   224ec:	ldr	r4, [r1, -sl, lsl #2]
   224f0:	mov	r7, r4
   224f4:	ldr	r1, [r7, #4]!
   224f8:	bl	117fc <myhtml_tag_get_by_id@plt>
   224fc:	mov	r9, r0
   22500:	mov	r0, r4
   22504:	mov	r1, #36	; 0x24
   22508:	bl	11868 <myhtml_is_html_node@plt>
   2250c:	add	sl, sl, #1
   22510:	cmp	r0, #0
   22514:	beq	2248c <myhtml_insertion_mode_in_body@@Base+0x9fc>
   22518:	b	230f4 <myhtml_insertion_mode_in_body@@Base+0x1664>
   2251c:	cmp	r1, #42	; 0x2a
   22520:	beq	224d0 <myhtml_insertion_mode_in_body@@Base+0xa40>
   22524:	b	21ebc <myhtml_insertion_mode_in_body@@Base+0x42c>
   22528:	mov	r0, r5
   2252c:	mov	r1, #99	; 0x63
   22530:	mov	r2, #1
   22534:	mov	r3, #32
   22538:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   2253c:	cmp	r0, #0
   22540:	beq	22550 <myhtml_insertion_mode_in_body@@Base+0xac0>
   22544:	mov	r0, r5
   22548:	mov	r1, r6
   2254c:	bl	113ac <myhtml_tree_tags_close_p@plt>
   22550:	mov	r0, r5
   22554:	mov	r1, r6
   22558:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   2255c:	ldr	r0, [r5, #180]	; 0xb4
   22560:	orr	r0, r0, #192	; 0xc0
   22564:	str	r0, [r5, #180]	; 0xb4
   22568:	b	22bbc <myhtml_insertion_mode_in_body@@Base+0x112c>
   2256c:	mov	r0, r5
   22570:	bl	11514 <myhtml_tree_current_node@plt>
   22574:	mov	r1, #97	; 0x61
   22578:	bl	11868 <myhtml_is_html_node@plt>
   2257c:	cmp	r0, #0
   22580:	bne	22e18 <myhtml_insertion_mode_in_body@@Base+0x1388>
   22584:	b	22e90 <myhtml_insertion_mode_in_body@@Base+0x1400>
   22588:	mov	r0, r5
   2258c:	mov	r1, #109	; 0x6d
   22590:	mov	r2, #1
   22594:	mov	r3, #8
   22598:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   2259c:	cmp	r0, #0
   225a0:	beq	225e0 <myhtml_insertion_mode_in_body@@Base+0xb50>
   225a4:	mov	r0, r5
   225a8:	mov	r1, #0
   225ac:	mov	r2, #0
   225b0:	b	225dc <myhtml_insertion_mode_in_body@@Base+0xb4c>
   225b4:	mov	r0, r5
   225b8:	mov	r1, #109	; 0x6d
   225bc:	mov	r2, #1
   225c0:	mov	r3, #8
   225c4:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   225c8:	cmp	r0, #0
   225cc:	beq	225e0 <myhtml_insertion_mode_in_body@@Base+0xb50>
   225d0:	mov	r0, r5
   225d4:	mov	r1, #108	; 0x6c
   225d8:	mov	r2, #1
   225dc:	bl	115a4 <myhtml_tree_generate_implied_end_tags@plt>
   225e0:	mov	r0, r5
   225e4:	bl	11514 <myhtml_tree_current_node@plt>
   225e8:	b	22e98 <myhtml_insertion_mode_in_body@@Base+0x1408>
   225ec:	ldr	r0, [r5, #128]	; 0x80
   225f0:	mov	r8, #0
   225f4:	ldr	r0, [r0, #4]
   225f8:	rsb	r7, r0, #1
   225fc:	cmp	r7, #1
   22600:	beq	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   22604:	ldr	r0, [r5, #128]	; 0x80
   22608:	ldr	r0, [r0]
   2260c:	ldr	r4, [r0, -r7, lsl #2]
   22610:	ldr	r0, [r6]
   22614:	ldr	r1, [r4, #4]
   22618:	cmp	r1, r0
   2261c:	ldreq	r0, [r4, #8]
   22620:	cmpeq	r0, #1
   22624:	beq	231c4 <myhtml_insertion_mode_in_body@@Base+0x1734>
   22628:	ldr	r0, [r5, #28]
   2262c:	bl	117fc <myhtml_tag_get_by_id@plt>
   22630:	ldr	r1, [r4, #8]
   22634:	add	r7, r7, #1
   22638:	add	r0, r0, r1, lsl #2
   2263c:	ldrb	r0, [r0, #16]
   22640:	tst	r0, #2
   22644:	beq	225fc <myhtml_insertion_mode_in_body@@Base+0xb6c>
   22648:	b	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   2264c:	mov	r0, r5
   22650:	mov	r1, #23
   22654:	mov	r2, #1
   22658:	mov	r3, #8
   2265c:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   22660:	mov	r8, #0
   22664:	cmp	r0, #0
   22668:	beq	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   2266c:	ldr	r0, [r5, #128]	; 0x80
   22670:	mvn	r1, #0
   22674:	ldr	r2, [r0, #4]
   22678:	add	r1, r1, #1
   2267c:	cmp	r1, r2
   22680:	bcc	22674 <myhtml_insertion_mode_in_body@@Base+0xbe4>
   22684:	mov	r0, #18
   22688:	str	r0, [r5, #168]	; 0xa8
   2268c:	mov	r0, r8
   22690:	sub	sp, fp, #28
   22694:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22698:	ldr	r0, [r6, #40]	; 0x28
   2269c:	cmp	r0, #0
   226a0:	movne	r0, #0
   226a4:	strne	r0, [r6, #40]	; 0x28
   226a8:	ldr	r0, [r6, #44]	; 0x2c
   226ac:	cmp	r0, #0
   226b0:	movne	r0, #0
   226b4:	strne	r0, [r6, #44]	; 0x2c
   226b8:	mov	r0, r5
   226bc:	bl	11490 <myhtml_tree_active_formatting_reconstruction@plt>
   226c0:	mov	r8, #0
   226c4:	str	r8, [r6, #48]	; 0x30
   226c8:	b	22ba8 <myhtml_insertion_mode_in_body@@Base+0x1118>
   226cc:	mov	r0, r5
   226d0:	mov	r1, #128	; 0x80
   226d4:	mov	r2, #1
   226d8:	mov	r3, #0
   226dc:	mov	r8, #0
   226e0:	bl	11664 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   226e4:	cmp	r0, #0
   226e8:	beq	23120 <myhtml_insertion_mode_in_body@@Base+0x1690>
   226ec:	mov	r0, r5
   226f0:	mov	r1, #52	; 0x34
   226f4:	mov	r2, #1
   226f8:	mov	r3, #8
   226fc:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   22700:	cmp	r0, #0
   22704:	beq	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   22708:	mov	r0, r5
   2270c:	mov	r1, #0
   22710:	mov	r2, #0
   22714:	mov	r8, #0
   22718:	bl	115a4 <myhtml_tree_generate_implied_end_tags@plt>
   2271c:	mov	r0, r5
   22720:	bl	11514 <myhtml_tree_current_node@plt>
   22724:	mov	r1, #52	; 0x34
   22728:	bl	11868 <myhtml_is_html_node@plt>
   2272c:	mov	r0, r5
   22730:	mov	r1, #52	; 0x34
   22734:	b	22168 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   22738:	mov	r0, r5
   2273c:	mov	r1, #23
   22740:	mov	r2, #1
   22744:	mov	r3, #8
   22748:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   2274c:	cmp	r0, #0
   22750:	beq	2218c <myhtml_insertion_mode_in_body@@Base+0x6fc>
   22754:	ldr	r0, [r5, #128]	; 0x80
   22758:	mvn	r1, #0
   2275c:	ldr	r2, [r0, #4]
   22760:	add	r1, r1, #1
   22764:	cmp	r1, r2
   22768:	bcc	2275c <myhtml_insertion_mode_in_body@@Base+0xccc>
   2276c:	mov	r0, #18
   22770:	mov	r8, #1
   22774:	str	r0, [r5, #168]	; 0xa8
   22778:	mov	r0, r8
   2277c:	sub	sp, fp, #28
   22780:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22784:	mov	r0, r5
   22788:	mov	r1, #77	; 0x4d
   2278c:	mov	r2, #1
   22790:	mov	r3, #16
   22794:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   22798:	cmp	r0, #0
   2279c:	beq	2218c <myhtml_insertion_mode_in_body@@Base+0x6fc>
   227a0:	mov	r0, r5
   227a4:	mov	r1, #77	; 0x4d
   227a8:	mov	r2, #1
   227ac:	bl	115a4 <myhtml_tree_generate_implied_end_tags@plt>
   227b0:	mov	r0, r5
   227b4:	bl	11514 <myhtml_tree_current_node@plt>
   227b8:	mov	r1, #77	; 0x4d
   227bc:	bl	11868 <myhtml_is_html_node@plt>
   227c0:	mov	r8, #0
   227c4:	mov	r0, r5
   227c8:	mov	r1, #77	; 0x4d
   227cc:	b	22168 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   227d0:	mov	r0, r5
   227d4:	mov	r1, #99	; 0x63
   227d8:	mov	r2, #1
   227dc:	mov	r3, #32
   227e0:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   227e4:	cmp	r0, #0
   227e8:	bne	227fc <myhtml_insertion_mode_in_body@@Base+0xd6c>
   227ec:	mov	r0, r5
   227f0:	mov	r1, #99	; 0x63
   227f4:	mov	r2, #1
   227f8:	bl	11784 <myhtml_tree_node_insert@plt>
   227fc:	mov	r0, r5
   22800:	mov	r1, r6
   22804:	bl	113ac <myhtml_tree_tags_close_p@plt>
   22808:	b	2218c <myhtml_insertion_mode_in_body@@Base+0x6fc>
   2280c:	ldr	r0, [r6, #48]	; 0x30
   22810:	tst	r0, #2048	; 0x800
   22814:	beq	228e4 <myhtml_insertion_mode_in_body@@Base+0xe54>
   22818:	ldr	r0, [r5, #8]
   2281c:	mov	r1, r6
   22820:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   22824:	ldr	r4, [r6, #12]
   22828:	cmp	r4, #0
   2282c:	beq	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   22830:	mov	r0, #0
   22834:	mov	r8, #0
   22838:	ldr	r3, [r6, #4]
   2283c:	ldrb	r1, [r3, r0]
   22840:	cmp	r1, #0
   22844:	bne	228c8 <myhtml_insertion_mode_in_body@@Base+0xe38>
   22848:	cmp	r0, r4
   2284c:	mov	r2, r0
   22850:	bcs	22874 <myhtml_insertion_mode_in_body@@Base+0xde4>
   22854:	add	r1, r0, #1
   22858:	mov	r2, r1
   2285c:	cmp	r1, r4
   22860:	bcs	22874 <myhtml_insertion_mode_in_body@@Base+0xde4>
   22864:	ldrb	r7, [r3, r2]
   22868:	add	r1, r2, #1
   2286c:	cmp	r7, #0
   22870:	beq	22858 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   22874:	ldr	r7, [r6, #12]
   22878:	sub	r1, r0, r2
   2287c:	cmp	r2, r4
   22880:	add	r1, r1, r7
   22884:	mov	r7, r2
   22888:	str	r1, [r6, #12]
   2288c:	bcs	228ac <myhtml_insertion_mode_in_body@@Base+0xe1c>
   22890:	mov	r7, r2
   22894:	ldrb	r1, [r3, r7]
   22898:	cmp	r1, #0
   2289c:	beq	228ac <myhtml_insertion_mode_in_body@@Base+0xe1c>
   228a0:	add	r7, r7, #1
   228a4:	cmp	r7, r4
   228a8:	bcc	22894 <myhtml_insertion_mode_in_body@@Base+0xe04>
   228ac:	sub	r0, r0, r8
   228b0:	add	r1, r3, r2
   228b4:	sub	r2, r7, r2
   228b8:	add	r0, r3, r0
   228bc:	bl	10f98 <memmove@plt>
   228c0:	add	r8, r8, #1
   228c4:	sub	r0, r7, #1
   228c8:	add	r0, r0, #1
   228cc:	cmp	r0, r4
   228d0:	bcc	22838 <myhtml_insertion_mode_in_body@@Base+0xda8>
   228d4:	ldr	r0, [r6, #12]
   228d8:	mov	r8, #0
   228dc:	cmp	r0, #0
   228e0:	beq	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   228e4:	mov	r0, r5
   228e8:	bl	11490 <myhtml_tree_active_formatting_reconstruction@plt>
   228ec:	mov	r0, r5
   228f0:	mov	r1, r6
   228f4:	bl	11058 <myhtml_tree_node_insert_text@plt>
   228f8:	ldr	r0, [r6, #48]	; 0x30
   228fc:	tst	r0, #8
   22900:	beq	22bbc <myhtml_insertion_mode_in_body@@Base+0x112c>
   22904:	b	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   22908:	mov	r0, r5
   2290c:	mov	r1, r6
   22910:	mov	r2, #0
   22914:	mov	r8, #0
   22918:	bl	11268 <myhtml_tree_node_insert_comment@plt>
   2291c:	mov	r0, r8
   22920:	sub	sp, fp, #28
   22924:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22928:	mov	r0, r5
   2292c:	mov	r1, #4
   22930:	mov	r2, #0
   22934:	mov	r8, #0
   22938:	bl	11538 <myhtml_tree_active_formatting_between_last_marker@plt>
   2293c:	cmp	r0, #0
   22940:	beq	22e58 <myhtml_insertion_mode_in_body@@Base+0x13c8>
   22944:	mov	r0, r5
   22948:	mov	r1, r6
   2294c:	mov	r2, #4
   22950:	bl	116b8 <myhtml_tree_adoption_agency_algorithm@plt>
   22954:	mov	r0, r5
   22958:	mov	r1, #4
   2295c:	mov	r2, #0
   22960:	bl	11538 <myhtml_tree_active_formatting_between_last_marker@plt>
   22964:	cmp	r0, #0
   22968:	beq	22e58 <myhtml_insertion_mode_in_body@@Base+0x13c8>
   2296c:	mov	r4, r0
   22970:	mov	r0, r5
   22974:	mov	r1, r4
   22978:	bl	11250 <myhtml_tree_open_elements_remove@plt>
   2297c:	mov	r0, r5
   22980:	mov	r1, r4
   22984:	bl	116c4 <myhtml_tree_active_formatting_remove@plt>
   22988:	b	22e58 <myhtml_insertion_mode_in_body@@Base+0x13c8>
   2298c:	ldr	r0, [r5, #128]	; 0x80
   22990:	ldr	r1, [r0, #4]
   22994:	cmp	r1, #2
   22998:	bcc	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   2299c:	ldr	r0, [r0]
   229a0:	ldr	r0, [r0, #4]
   229a4:	ldr	r1, [r0, #4]
   229a8:	cmp	r1, #23
   229ac:	ldreq	r0, [r0, #8]
   229b0:	cmpeq	r0, #1
   229b4:	bne	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   229b8:	mov	r0, r5
   229bc:	mov	r1, #128	; 0x80
   229c0:	mov	r2, #1
   229c4:	mov	r3, #0
   229c8:	mov	r8, #0
   229cc:	bl	11664 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   229d0:	cmp	r0, #0
   229d4:	bne	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   229d8:	ldr	r0, [r5, #128]	; 0x80
   229dc:	ldr	r1, [r5, #180]	; 0xb4
   229e0:	ldr	r2, [r5, #180]	; 0xb4
   229e4:	and	r1, r1, #2
   229e8:	eor	r1, r2, r1
   229ec:	str	r1, [r5, #180]	; 0xb4
   229f0:	ldr	r1, [r0, #4]
   229f4:	cmp	r1, #2
   229f8:	bcc	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   229fc:	ldr	r0, [r0]
   22a00:	ldr	r4, [r0, #4]
   22a04:	ldr	r0, [r4, #32]
   22a08:	cmp	r0, #0
   22a0c:	bne	22c20 <myhtml_insertion_mode_in_body@@Base+0x1190>
   22a10:	str	r6, [r4, #32]
   22a14:	mov	r0, r8
   22a18:	sub	sp, fp, #28
   22a1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22a20:	mov	r0, r5
   22a24:	mov	r1, #25
   22a28:	mov	r2, #1
   22a2c:	mov	r3, #8
   22a30:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   22a34:	cmp	r0, #0
   22a38:	beq	22a60 <myhtml_insertion_mode_in_body@@Base+0xfd0>
   22a3c:	mov	r0, r5
   22a40:	mov	r1, #0
   22a44:	mov	r2, #0
   22a48:	bl	115a4 <myhtml_tree_generate_implied_end_tags@plt>
   22a4c:	mov	r0, r5
   22a50:	mov	r1, #25
   22a54:	mov	r2, #1
   22a58:	mov	r3, #0
   22a5c:	bl	11760 <myhtml_tree_open_elements_pop_until@plt>
   22a60:	mov	r0, r5
   22a64:	bl	11490 <myhtml_tree_active_formatting_reconstruction@plt>
   22a68:	mov	r0, r5
   22a6c:	mov	r1, r6
   22a70:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   22a74:	b	22bbc <myhtml_insertion_mode_in_body@@Base+0x112c>
   22a78:	mov	r0, r5
   22a7c:	mov	r1, #128	; 0x80
   22a80:	mov	r2, #1
   22a84:	mov	r3, #0
   22a88:	mov	r8, #0
   22a8c:	bl	11664 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   22a90:	mov	r4, r0
   22a94:	cmp	r0, #0
   22a98:	bne	22aa8 <myhtml_insertion_mode_in_body@@Base+0x1018>
   22a9c:	ldr	r0, [r5, #104]	; 0x68
   22aa0:	cmp	r0, #0
   22aa4:	bne	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   22aa8:	mov	r0, r5
   22aac:	mov	r1, #99	; 0x63
   22ab0:	mov	r2, #1
   22ab4:	mov	r3, #32
   22ab8:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   22abc:	cmp	r0, #0
   22ac0:	beq	22ad0 <myhtml_insertion_mode_in_body@@Base+0x1040>
   22ac4:	mov	r0, r5
   22ac8:	mov	r1, r6
   22acc:	bl	113ac <myhtml_tree_tags_close_p@plt>
   22ad0:	mov	r0, r5
   22ad4:	mov	r1, r6
   22ad8:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   22adc:	cmp	r4, #0
   22ae0:	streq	r0, [r5, #104]	; 0x68
   22ae4:	mov	r0, r8
   22ae8:	sub	sp, fp, #28
   22aec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22af0:	ldr	r0, [r5, #128]	; 0x80
   22af4:	ldr	r1, [r0, #4]
   22af8:	cmp	r1, #2
   22afc:	bcc	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   22b00:	ldr	r0, [r0]
   22b04:	ldr	r0, [r0, #4]
   22b08:	ldr	r1, [r0, #4]
   22b0c:	cmp	r1, #23
   22b10:	ldreq	r1, [r0, #8]
   22b14:	cmpeq	r1, #1
   22b18:	bne	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   22b1c:	ldr	r1, [r5, #180]	; 0xb4
   22b20:	tst	r1, #2
   22b24:	beq	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   22b28:	bl	11ac0 <myhtml_tree_node_remove@plt>
   22b2c:	mov	r0, r5
   22b30:	mov	r1, #65	; 0x41
   22b34:	mov	r2, #1
   22b38:	mov	r3, #1
   22b3c:	bl	11760 <myhtml_tree_open_elements_pop_until@plt>
   22b40:	mov	r0, r5
   22b44:	mov	r1, r6
   22b48:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   22b4c:	mov	r0, #19
   22b50:	str	r0, [r5, #168]	; 0xa8
   22b54:	mov	r0, r8
   22b58:	sub	sp, fp, #28
   22b5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22b60:	mov	r0, r5
   22b64:	mov	r1, #99	; 0x63
   22b68:	mov	r2, #1
   22b6c:	mov	r3, #32
   22b70:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   22b74:	cmp	r0, #0
   22b78:	beq	22b88 <myhtml_insertion_mode_in_body@@Base+0x10f8>
   22b7c:	mov	r0, r5
   22b80:	mov	r1, r6
   22b84:	bl	113ac <myhtml_tree_tags_close_p@plt>
   22b88:	mov	r0, r5
   22b8c:	bl	11514 <myhtml_tree_current_node@plt>
   22b90:	mov	r1, #85	; 0x55
   22b94:	bl	11868 <myhtml_is_html_node@plt>
   22b98:	cmp	r0, #0
   22b9c:	beq	22ba8 <myhtml_insertion_mode_in_body@@Base+0x1118>
   22ba0:	mov	r0, r5
   22ba4:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   22ba8:	mov	r0, r5
   22bac:	mov	r1, r6
   22bb0:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   22bb4:	mov	r0, r5
   22bb8:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   22bbc:	ldr	r0, [r5, #180]	; 0xb4
   22bc0:	ldr	r1, [r5, #180]	; 0xb4
   22bc4:	and	r0, r0, #2
   22bc8:	eor	r0, r1, r0
   22bcc:	str	r0, [r5, #180]	; 0xb4
   22bd0:	mov	r0, r8
   22bd4:	sub	sp, fp, #28
   22bd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22bdc:	mov	r0, r5
   22be0:	mov	r1, #128	; 0x80
   22be4:	mov	r2, #1
   22be8:	mov	r3, #0
   22bec:	mov	r8, #0
   22bf0:	bl	11664 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   22bf4:	cmp	r0, #0
   22bf8:	bne	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   22bfc:	ldr	r0, [r5, #128]	; 0x80
   22c00:	ldr	r1, [r0, #4]
   22c04:	cmp	r1, #0
   22c08:	beq	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   22c0c:	ldr	r0, [r0]
   22c10:	ldr	r4, [r0]
   22c14:	ldr	r0, [r4, #32]
   22c18:	cmp	r0, #0
   22c1c:	beq	23244 <myhtml_insertion_mode_in_body@@Base+0x17b4>
   22c20:	ldr	r0, [r5, #8]
   22c24:	mov	r1, r6
   22c28:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   22c2c:	ldr	r1, [r4, #32]
   22c30:	ldr	r0, [r5, #8]
   22c34:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   22c38:	ldr	r2, [r4, #32]
   22c3c:	ldr	r0, [r5, #8]
   22c40:	ldr	r3, [r5, #44]	; 0x2c
   22c44:	mov	r1, r6
   22c48:	bl	11574 <myhtml_token_node_attr_copy_with_check@plt>
   22c4c:	mov	r0, r8
   22c50:	sub	sp, fp, #28
   22c54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22c58:	mov	r0, #69	; 0x45
   22c5c:	mov	r8, #1
   22c60:	str	r0, [r6]
   22c64:	mov	r0, r8
   22c68:	sub	sp, fp, #28
   22c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22c70:	mov	r0, r5
   22c74:	bl	11490 <myhtml_tree_active_formatting_reconstruction@plt>
   22c78:	mov	r0, r5
   22c7c:	mov	r1, r6
   22c80:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   22c84:	mov	r0, r5
   22c88:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   22c8c:	ldr	r0, [r5, #8]
   22c90:	mov	r1, r6
   22c94:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   22c98:	ldr	r0, [r5, #8]
   22c9c:	ldr	r2, [pc, #1456]	; 23254 <myhtml_insertion_mode_in_body@@Base+0x17c4>
   22ca0:	mov	r1, #6
   22ca4:	mov	r3, #4
   22ca8:	str	r1, [sp, #4]
   22cac:	mov	r1, r6
   22cb0:	add	r2, pc, r2
   22cb4:	str	r2, [sp]
   22cb8:	ldr	r2, [pc, #1432]	; 23258 <myhtml_insertion_mode_in_body@@Base+0x17c8>
   22cbc:	add	r2, pc, r2
   22cc0:	bl	10ea8 <myhtml_token_attr_match_case@plt>
   22cc4:	cmp	r0, #0
   22cc8:	bne	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   22ccc:	b	22bbc <myhtml_insertion_mode_in_body@@Base+0x112c>
   22cd0:	ldr	r0, [r5, #128]	; 0x80
   22cd4:	ldr	r1, [r5, #180]	; 0xb4
   22cd8:	ldr	r2, [r5, #180]	; 0xb4
   22cdc:	and	r1, r1, #2
   22ce0:	eor	r1, r2, r1
   22ce4:	str	r1, [r5, #180]	; 0xb4
   22ce8:	ldr	r4, [r0, #4]
   22cec:	cmp	r4, #0
   22cf0:	beq	21ebc <myhtml_insertion_mode_in_body@@Base+0x42c>
   22cf4:	ldr	r0, [r0]
   22cf8:	add	r0, r0, r4, lsl #2
   22cfc:	ldr	sl, [r0, #-4]
   22d00:	ldr	r0, [r5, #28]
   22d04:	mov	r7, sl
   22d08:	ldr	r1, [r7, #4]!
   22d0c:	bl	117fc <myhtml_tag_get_by_id@plt>
   22d10:	mov	r9, r0
   22d14:	mov	r0, sl
   22d18:	mov	r1, #77	; 0x4d
   22d1c:	bl	11868 <myhtml_is_html_node@plt>
   22d20:	cmp	r0, #0
   22d24:	bne	2317c <myhtml_insertion_mode_in_body@@Base+0x16ec>
   22d28:	rsb	r4, r4, #2
   22d2c:	ldr	r0, [sl, #8]
   22d30:	add	r1, r9, r0, lsl #2
   22d34:	ldrb	r1, [r1, #16]
   22d38:	tst	r1, #2
   22d3c:	bne	22d4c <myhtml_insertion_mode_in_body@@Base+0x12bc>
   22d40:	cmp	r4, #1
   22d44:	bne	22d6c <myhtml_insertion_mode_in_body@@Base+0x12dc>
   22d48:	b	21ebc <myhtml_insertion_mode_in_body@@Base+0x42c>
   22d4c:	ldr	r1, [r7]
   22d50:	cmp	r1, #7
   22d54:	cmpne	r1, #99	; 0x63
   22d58:	bne	22da8 <myhtml_insertion_mode_in_body@@Base+0x1318>
   22d5c:	cmp	r4, #1
   22d60:	beq	21ebc <myhtml_insertion_mode_in_body@@Base+0x42c>
   22d64:	cmp	r0, #1
   22d68:	bne	21ebc <myhtml_insertion_mode_in_body@@Base+0x42c>
   22d6c:	ldr	r1, [r5, #128]	; 0x80
   22d70:	ldr	r0, [r5, #28]
   22d74:	ldr	r1, [r1]
   22d78:	ldr	sl, [r1, -r4, lsl #2]
   22d7c:	mov	r7, sl
   22d80:	ldr	r1, [r7, #4]!
   22d84:	bl	117fc <myhtml_tag_get_by_id@plt>
   22d88:	mov	r9, r0
   22d8c:	mov	r0, sl
   22d90:	mov	r1, #77	; 0x4d
   22d94:	bl	11868 <myhtml_is_html_node@plt>
   22d98:	add	r4, r4, #1
   22d9c:	cmp	r0, #0
   22da0:	beq	22d2c <myhtml_insertion_mode_in_body@@Base+0x129c>
   22da4:	b	2317c <myhtml_insertion_mode_in_body@@Base+0x16ec>
   22da8:	cmp	r1, #42	; 0x2a
   22dac:	beq	22d5c <myhtml_insertion_mode_in_body@@Base+0x12cc>
   22db0:	b	21ebc <myhtml_insertion_mode_in_body@@Base+0x42c>
   22db4:	mov	r0, r5
   22db8:	mov	r1, #99	; 0x63
   22dbc:	mov	r2, #1
   22dc0:	mov	r3, #32
   22dc4:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   22dc8:	cmp	r0, #0
   22dcc:	beq	22ddc <myhtml_insertion_mode_in_body@@Base+0x134c>
   22dd0:	mov	r0, r5
   22dd4:	mov	r1, r6
   22dd8:	bl	113ac <myhtml_tree_tags_close_p@plt>
   22ddc:	mov	r0, r5
   22de0:	bl	11514 <myhtml_tree_current_node@plt>
   22de4:	mov	r1, #85	; 0x55
   22de8:	bl	11868 <myhtml_is_html_node@plt>
   22dec:	cmp	r0, #0
   22df0:	beq	22e98 <myhtml_insertion_mode_in_body@@Base+0x1408>
   22df4:	mov	r0, r5
   22df8:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   22dfc:	b	22e98 <myhtml_insertion_mode_in_body@@Base+0x1408>
   22e00:	mov	r0, r5
   22e04:	bl	11514 <myhtml_tree_current_node@plt>
   22e08:	mov	r1, #85	; 0x55
   22e0c:	bl	11868 <myhtml_is_html_node@plt>
   22e10:	cmp	r0, #0
   22e14:	beq	22e90 <myhtml_insertion_mode_in_body@@Base+0x1400>
   22e18:	mov	r0, r5
   22e1c:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   22e20:	b	22e90 <myhtml_insertion_mode_in_body@@Base+0x1400>
   22e24:	mov	r0, r5
   22e28:	bl	11490 <myhtml_tree_active_formatting_reconstruction@plt>
   22e2c:	mov	r0, r5
   22e30:	mov	r1, #90	; 0x5a
   22e34:	mov	r2, #1
   22e38:	mov	r3, #8
   22e3c:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   22e40:	cmp	r0, #0
   22e44:	beq	22e60 <myhtml_insertion_mode_in_body@@Base+0x13d0>
   22e48:	mov	r0, r5
   22e4c:	mov	r1, r6
   22e50:	mov	r2, #90	; 0x5a
   22e54:	bl	116b8 <myhtml_tree_adoption_agency_algorithm@plt>
   22e58:	mov	r0, r5
   22e5c:	bl	11490 <myhtml_tree_active_formatting_reconstruction@plt>
   22e60:	mov	r0, r5
   22e64:	mov	r1, r6
   22e68:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   22e6c:	mov	r1, r0
   22e70:	mov	r0, r5
   22e74:	bl	11670 <myhtml_tree_active_formatting_append_with_check@plt>
   22e78:	mov	r0, r8
   22e7c:	sub	sp, fp, #28
   22e80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22e84:	ldr	r0, [r5, #180]	; 0xb4
   22e88:	tst	r0, #1
   22e8c:	bne	22eb0 <myhtml_insertion_mode_in_body@@Base+0x1420>
   22e90:	mov	r0, r5
   22e94:	bl	11490 <myhtml_tree_active_formatting_reconstruction@plt>
   22e98:	mov	r0, r5
   22e9c:	mov	r1, r6
   22ea0:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   22ea4:	mov	r0, r8
   22ea8:	sub	sp, fp, #28
   22eac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22eb0:	mov	r0, #4
   22eb4:	str	r0, [r5, #164]	; 0xa4
   22eb8:	b	23060 <myhtml_insertion_mode_in_body@@Base+0x15d0>
   22ebc:	mov	r0, r5
   22ec0:	mov	r1, #99	; 0x63
   22ec4:	mov	r2, #1
   22ec8:	mov	r3, #32
   22ecc:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   22ed0:	cmp	r0, #0
   22ed4:	beq	22ee4 <myhtml_insertion_mode_in_body@@Base+0x1454>
   22ed8:	mov	r0, r5
   22edc:	mov	r1, r6
   22ee0:	bl	113ac <myhtml_tree_tags_close_p@plt>
   22ee4:	mov	r0, r5
   22ee8:	mov	r1, r6
   22eec:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   22ef0:	mov	r0, #6
   22ef4:	str	r0, [r5, #164]	; 0xa4
   22ef8:	mov	r0, r8
   22efc:	sub	sp, fp, #28
   22f00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22f04:	mov	r0, r5
   22f08:	bl	11490 <myhtml_tree_active_formatting_reconstruction@plt>
   22f0c:	mov	r0, r5
   22f10:	mov	r1, r6
   22f14:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   22f18:	ldr	r0, [r5, #168]	; 0xa8
   22f1c:	ldr	r1, [r5, #180]	; 0xb4
   22f20:	ldr	r2, [r5, #180]	; 0xb4
   22f24:	and	r1, r1, #2
   22f28:	cmp	r0, #14
   22f2c:	eor	r1, r2, r1
   22f30:	str	r1, [r5, #180]	; 0xb4
   22f34:	bhi	23230 <myhtml_insertion_mode_in_body@@Base+0x17a0>
   22f38:	mov	r1, #1
   22f3c:	mov	r2, #29952	; 0x7500
   22f40:	tst	r2, r1, lsl r0
   22f44:	beq	23230 <myhtml_insertion_mode_in_body@@Base+0x17a0>
   22f48:	mov	r0, #16
   22f4c:	str	r0, [r5, #168]	; 0xa8
   22f50:	mov	r0, r8
   22f54:	sub	sp, fp, #28
   22f58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22f5c:	mov	r0, r5
   22f60:	bl	11490 <myhtml_tree_active_formatting_reconstruction@plt>
   22f64:	ldr	r0, [r5, #8]
   22f68:	mov	r1, r6
   22f6c:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   22f70:	mov	r0, r6
   22f74:	bl	11220 <myhtml_token_adjust_svg_attributes@plt>
   22f78:	mov	r0, r6
   22f7c:	bl	11928 <myhtml_token_adjust_foreign_attributes@plt>
   22f80:	mov	r0, r5
   22f84:	mov	r1, r6
   22f88:	bl	11a54 <myhtml_tree_node_insert_foreign_element@plt>
   22f8c:	mov	r1, #3
   22f90:	b	230ac <myhtml_insertion_mode_in_body@@Base+0x161c>
   22f94:	ldrb	r0, [r5, #176]	; 0xb0
   22f98:	tst	r0, #1
   22f9c:	bne	22fc8 <myhtml_insertion_mode_in_body@@Base+0x1538>
   22fa0:	mov	r0, r5
   22fa4:	mov	r1, #99	; 0x63
   22fa8:	mov	r2, #1
   22fac:	mov	r3, #32
   22fb0:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   22fb4:	cmp	r0, #0
   22fb8:	beq	22fc8 <myhtml_insertion_mode_in_body@@Base+0x1538>
   22fbc:	mov	r0, r5
   22fc0:	mov	r1, r6
   22fc4:	bl	113ac <myhtml_tree_tags_close_p@plt>
   22fc8:	mov	r0, r5
   22fcc:	mov	r1, r6
   22fd0:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   22fd4:	mov	r0, #8
   22fd8:	str	r0, [r5, #168]	; 0xa8
   22fdc:	b	22bbc <myhtml_insertion_mode_in_body@@Base+0x112c>
   22fe0:	mov	r0, r5
   22fe4:	mov	r1, r6
   22fe8:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   22fec:	ldr	r0, [r5, #168]	; 0xa8
   22ff0:	ldr	r1, [r5, #180]	; 0xb4
   22ff4:	mov	r2, #7
   22ff8:	orr	r1, r1, #192	; 0xc0
   22ffc:	str	r1, [r5, #180]	; 0xb4
   23000:	mov	r1, #2
   23004:	str	r1, [r5, #164]	; 0xa4
   23008:	str	r2, [r5, #168]	; 0xa8
   2300c:	str	r0, [r5, #172]	; 0xac
   23010:	b	22bbc <myhtml_insertion_mode_in_body@@Base+0x112c>
   23014:	mov	r0, r5
   23018:	mov	r1, #99	; 0x63
   2301c:	mov	r2, #1
   23020:	mov	r3, #32
   23024:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   23028:	cmp	r0, #0
   2302c:	beq	2303c <myhtml_insertion_mode_in_body@@Base+0x15ac>
   23030:	mov	r0, r5
   23034:	mov	r1, r6
   23038:	bl	113ac <myhtml_tree_tags_close_p@plt>
   2303c:	mov	r0, r5
   23040:	bl	11490 <myhtml_tree_active_formatting_reconstruction@plt>
   23044:	mov	r0, #4
   23048:	str	r0, [r5, #164]	; 0xa4
   2304c:	ldr	r0, [r5, #180]	; 0xb4
   23050:	ldr	r1, [r5, #180]	; 0xb4
   23054:	and	r0, r0, #2
   23058:	eor	r0, r1, r0
   2305c:	str	r0, [r5, #180]	; 0xb4
   23060:	mov	r0, r5
   23064:	mov	r1, r6
   23068:	bl	11b98 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>
   2306c:	mov	r0, r8
   23070:	sub	sp, fp, #28
   23074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23078:	mov	r0, r5
   2307c:	bl	11490 <myhtml_tree_active_formatting_reconstruction@plt>
   23080:	ldr	r0, [r5, #8]
   23084:	mov	r1, r6
   23088:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   2308c:	mov	r0, r6
   23090:	bl	11040 <myhtml_token_adjust_mathml_attributes@plt>
   23094:	mov	r0, r6
   23098:	bl	11928 <myhtml_token_adjust_foreign_attributes@plt>
   2309c:	mov	r0, r5
   230a0:	mov	r1, r6
   230a4:	bl	11a54 <myhtml_tree_node_insert_foreign_element@plt>
   230a8:	mov	r1, #2
   230ac:	str	r1, [r0, #8]
   230b0:	ldr	r0, [r6, #48]	; 0x30
   230b4:	tst	r0, #2
   230b8:	beq	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   230bc:	mov	r0, r5
   230c0:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   230c4:	mov	r0, r8
   230c8:	sub	sp, fp, #28
   230cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   230d0:	ldr	r0, [r5, #140]	; 0x8c
   230d4:	ldr	r0, [r0, #4]
   230d8:	cmp	r0, #0
   230dc:	beq	231a8 <myhtml_insertion_mode_in_body@@Base+0x1718>
   230e0:	mov	r0, r5
   230e4:	mov	r1, r6
   230e8:	sub	sp, fp, #28
   230ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   230f0:	b	23e08 <myhtml_insertion_mode_in_template@@Base>
   230f4:	mov	r0, r5
   230f8:	mov	r1, #36	; 0x24
   230fc:	mov	r2, #1
   23100:	bl	115a4 <myhtml_tree_generate_implied_end_tags@plt>
   23104:	mov	r0, r5
   23108:	bl	11514 <myhtml_tree_current_node@plt>
   2310c:	mov	r1, #36	; 0x24
   23110:	bl	11868 <myhtml_is_html_node@plt>
   23114:	mov	r0, r5
   23118:	mov	r1, #36	; 0x24
   2311c:	b	23220 <myhtml_insertion_mode_in_body@@Base+0x1790>
   23120:	ldr	r4, [r5, #104]	; 0x68
   23124:	mov	r8, #0
   23128:	str	r8, [r5, #104]	; 0x68
   2312c:	cmp	r4, #0
   23130:	beq	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   23134:	mov	r0, r4
   23138:	mov	r1, #8
   2313c:	bl	10e00 <myhtml_tree_element_in_scope_by_node@plt>
   23140:	cmp	r0, #0
   23144:	beq	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   23148:	mov	r0, r5
   2314c:	mov	r1, #0
   23150:	mov	r2, #0
   23154:	mov	r8, #0
   23158:	bl	115a4 <myhtml_tree_generate_implied_end_tags@plt>
   2315c:	mov	r0, r5
   23160:	bl	11514 <myhtml_tree_current_node@plt>
   23164:	mov	r0, r5
   23168:	mov	r1, r4
   2316c:	bl	11250 <myhtml_tree_open_elements_remove@plt>
   23170:	mov	r0, r8
   23174:	sub	sp, fp, #28
   23178:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2317c:	mov	r0, r5
   23180:	mov	r1, #77	; 0x4d
   23184:	mov	r2, #1
   23188:	bl	115a4 <myhtml_tree_generate_implied_end_tags@plt>
   2318c:	mov	r0, r5
   23190:	bl	11514 <myhtml_tree_current_node@plt>
   23194:	mov	r1, #77	; 0x4d
   23198:	bl	11868 <myhtml_is_html_node@plt>
   2319c:	mov	r0, r5
   231a0:	mov	r1, #77	; 0x4d
   231a4:	b	23220 <myhtml_insertion_mode_in_body@@Base+0x1790>
   231a8:	ldr	r0, [r5, #128]	; 0x80
   231ac:	mvn	r1, #0
   231b0:	ldr	r2, [r0, #4]
   231b4:	add	r1, r1, #1
   231b8:	cmp	r1, r2
   231bc:	bcc	231b0 <myhtml_insertion_mode_in_body@@Base+0x1720>
   231c0:	b	22ea4 <myhtml_insertion_mode_in_body@@Base+0x1414>
   231c4:	mov	r0, r5
   231c8:	mov	r2, #1
   231cc:	bl	115a4 <myhtml_tree_generate_implied_end_tags@plt>
   231d0:	mov	r0, r5
   231d4:	bl	11514 <myhtml_tree_current_node@plt>
   231d8:	mov	r0, r5
   231dc:	mov	r1, r4
   231e0:	mov	r2, #0
   231e4:	mov	r8, #0
   231e8:	bl	111a8 <myhtml_tree_open_elements_pop_until_by_node@plt>
   231ec:	mov	r0, r8
   231f0:	sub	sp, fp, #28
   231f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   231f8:	mov	r0, r5
   231fc:	mov	r1, #44	; 0x2c
   23200:	mov	r2, #1
   23204:	bl	115a4 <myhtml_tree_generate_implied_end_tags@plt>
   23208:	mov	r0, r5
   2320c:	bl	11514 <myhtml_tree_current_node@plt>
   23210:	mov	r1, #44	; 0x2c
   23214:	bl	11868 <myhtml_is_html_node@plt>
   23218:	mov	r0, r5
   2321c:	mov	r1, #44	; 0x2c
   23220:	mov	r2, #1
   23224:	mov	r3, #0
   23228:	bl	11760 <myhtml_tree_open_elements_pop_until@plt>
   2322c:	b	21ebc <myhtml_insertion_mode_in_body@@Base+0x42c>
   23230:	mov	r0, #15
   23234:	str	r0, [r5, #168]	; 0xa8
   23238:	mov	r0, r8
   2323c:	sub	sp, fp, #28
   23240:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23244:	str	r6, [r4, #32]
   23248:	mov	r0, r8
   2324c:	sub	sp, fp, #28
   23250:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23254:			; <UNDEFINED> instruction: 0x000dfab7
   23258:	andeq	ip, r1, r7, asr #16

0002325c <myhtml_insertion_mode_in_head@@Base>:
   2325c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   23260:	add	fp, sp, #24
   23264:	sub	sp, sp, #8
   23268:	mov	r5, r0
   2326c:	mov	r6, r1
   23270:	ldr	r0, [r1]
   23274:	ldr	r1, [r1, #48]	; 0x30
   23278:	tst	r1, #1
   2327c:	bne	234d4 <myhtml_insertion_mode_in_head@@Base+0x278>
   23280:	sub	r0, r0, #1
   23284:	cmp	r0, #133	; 0x85
   23288:	bhi	235d4 <myhtml_insertion_mode_in_head@@Base+0x378>
   2328c:	add	r1, pc, #8
   23290:	mov	r4, #0
   23294:	ldr	r0, [r1, r0, lsl #2]
   23298:	add	pc, r1, r0
   2329c:	andeq	r0, r0, ip, lsl #6
   232a0:	andeq	r0, r0, r8, asr r3
   232a4:	andeq	r0, r0, ip, ror #5
   232a8:	andeq	r0, r0, r8, lsr r3
   232ac:	andeq	r0, r0, r8, lsr r3
   232b0:	andeq	r0, r0, r8, lsr r3
   232b4:	andeq	r0, r0, r8, lsr r3
   232b8:	andeq	r0, r0, r8, lsr r3
   232bc:	andeq	r0, r0, r8, lsr r3
   232c0:	andeq	r0, r0, r8, lsr r3
   232c4:	andeq	r0, r0, r8, lsr r3
   232c8:	andeq	r0, r0, r8, lsr r3
   232cc:	andeq	r0, r0, r8, lsr r3
   232d0:	andeq	r0, r0, r8, lsr r3
   232d4:	andeq	r0, r0, r8, lsl r2
   232d8:	andeq	r0, r0, r8, lsl r2
   232dc:	andeq	r0, r0, r8, lsr r3
   232e0:	andeq	r0, r0, r8, lsr r3
   232e4:	andeq	r0, r0, r8, lsl r2
   232e8:	andeq	r0, r0, r8, lsr r3
   232ec:	andeq	r0, r0, r8, lsr r3
   232f0:	andeq	r0, r0, r8, lsr r3
   232f4:	andeq	r0, r0, r8, lsr r3
   232f8:	andeq	r0, r0, r8, lsr r3
   232fc:	andeq	r0, r0, r8, lsr r3
   23300:	andeq	r0, r0, r8, lsr r3
   23304:	andeq	r0, r0, r8, lsr r3
   23308:	andeq	r0, r0, r8, lsr r3
   2330c:	andeq	r0, r0, r8, lsr r3
   23310:	andeq	r0, r0, r8, lsr r3
   23314:	andeq	r0, r0, r8, lsr r3
   23318:	andeq	r0, r0, r8, lsr r3
   2331c:	andeq	r0, r0, r8, lsr r3
   23320:	andeq	r0, r0, r8, lsr r3
   23324:	andeq	r0, r0, r8, lsr r3
   23328:	andeq	r0, r0, r8, lsr r3
   2332c:	andeq	r0, r0, r8, lsr r3
   23330:	andeq	r0, r0, r8, lsr r3
   23334:	andeq	r0, r0, r8, lsr r3
   23338:	andeq	r0, r0, r8, lsr r3
   2333c:	andeq	r0, r0, r8, lsr r3
   23340:	andeq	r0, r0, r8, lsr r3
   23344:	andeq	r0, r0, r8, lsr r3
   23348:	andeq	r0, r0, r8, lsr r3
   2334c:	andeq	r0, r0, r8, lsr r3
   23350:	andeq	r0, r0, r8, lsr r3
   23354:	andeq	r0, r0, r8, lsr r3
   23358:	andeq	r0, r0, r8, lsr r3
   2335c:	andeq	r0, r0, r8, lsr r3
   23360:	andeq	r0, r0, r8, lsr r3
   23364:	andeq	r0, r0, r8, lsr r3
   23368:	andeq	r0, r0, r8, lsr r3
   2336c:	andeq	r0, r0, r8, lsr r3
   23370:	andeq	r0, r0, r8, lsr r3
   23374:	andeq	r0, r0, r8, lsr r3
   23378:	andeq	r0, r0, r8, lsr r3
   2337c:	andeq	r0, r0, r8, lsr r3
   23380:	andeq	r0, r0, r8, lsr r3
   23384:	andeq	r0, r0, r8, lsr r3
   23388:	andeq	r0, r0, r8, lsr r3
   2338c:	andeq	r0, r0, ip, ror #5
   23390:	andeq	r0, r0, r8, lsr r3
   23394:	andeq	r0, r0, r8, lsr r3
   23398:	andeq	r0, r0, r8, lsr r3
   2339c:	andeq	r0, r0, r8, ror r3
   233a0:	andeq	r0, r0, r8, lsr r3
   233a4:	andeq	r0, r0, r8, lsr r3
   233a8:	andeq	r0, r0, r8, lsr r3
   233ac:	andeq	r0, r0, r8, lsr r3
   233b0:	andeq	r0, r0, r8, lsr r3
   233b4:	andeq	r0, r0, r8, lsr r3
   233b8:	andeq	r0, r0, r8, lsr r3
   233bc:	andeq	r0, r0, r8, lsr r3
   233c0:	andeq	r0, r0, r8, lsr r3
   233c4:	andeq	r0, r0, r8, lsr r3
   233c8:	andeq	r0, r0, r8, lsr r3
   233cc:	andeq	r0, r0, r8, lsr r3
   233d0:	andeq	r0, r0, r8, lsl r2
   233d4:	andeq	r0, r0, r8, lsr r3
   233d8:	andeq	r0, r0, r8, lsr r3
   233dc:	andeq	r0, r0, r8, lsr r3
   233e0:	andeq	r0, r0, r8, lsr r3
   233e4:	andeq	r0, r0, r8, lsr r3
   233e8:	andeq	r0, r0, r8, lsr r3
   233ec:	andeq	r0, r0, r8, lsr r3
   233f0:	andeq	r0, r0, r8, lsl r2
   233f4:	andeq	r0, r0, r8, lsr r3
   233f8:	andeq	r0, r0, r8, lsr r3
   233fc:	andeq	r0, r0, r8, lsr r3
   23400:	andeq	r0, r0, r8, lsr r3
   23404:	andeq	r0, r0, r8, lsr r3
   23408:	strdeq	r0, [r0], -r8
   2340c:	andeq	r0, r0, ip, lsl #7
   23410:	andeq	r0, r0, r8, lsr r3
   23414:	andeq	r0, r0, r8, lsr r3
   23418:	andeq	r0, r0, r8, lsr r3
   2341c:	andeq	r0, r0, r8, lsr r3
   23420:	andeq	r0, r0, r8, lsr r3
   23424:	andeq	r0, r0, r8, lsr r3
   23428:	andeq	r0, r0, r8, lsr r3
   2342c:	andeq	r0, r0, r8, lsr r3
   23430:	andeq	r0, r0, r8, lsr r3
   23434:	andeq	r0, r0, r8, lsr r3
   23438:	andeq	r0, r0, r8, lsr r3
   2343c:	andeq	r0, r0, r8, lsr r3
   23440:	andeq	r0, r0, r8, lsr r3
   23444:	andeq	r0, r0, r8, lsr r3
   23448:	andeq	r0, r0, r8, lsr r3
   2344c:	andeq	r0, r0, r8, lsr r3
   23450:	andeq	r0, r0, r8, lsr r3
   23454:	andeq	r0, r0, r8, lsr r3
   23458:			; <UNDEFINED> instruction: 0x000003b8
   2345c:	andeq	r0, r0, r8, lsr r3
   23460:	andeq	r0, r0, r8, lsr r3
   23464:	andeq	r0, r0, r8, lsr r3
   23468:	andeq	r0, r0, r8, lsr r3
   2346c:	andeq	r0, r0, r8, lsr r3
   23470:	andeq	r0, r0, r8, lsr r3
   23474:	andeq	r0, r0, r8, lsr r3
   23478:	strdeq	r0, [r0], -r8
   2347c:	andeq	r0, r0, r8, lsr r3
   23480:	andeq	r0, r0, r8, lsr r3
   23484:	andeq	r0, r0, r8, lsr r3
   23488:	andeq	r0, r0, r8, lsr r3
   2348c:	andeq	r0, r0, r8, lsr r3
   23490:	andeq	r0, r0, r8, lsr r3
   23494:	andeq	r0, r0, r8, lsr r3
   23498:	andeq	r0, r0, r8, lsl r4
   2349c:	andeq	r0, r0, r8, lsr r3
   234a0:	andeq	r0, r0, r8, lsr r3
   234a4:	andeq	r0, r0, r8, lsr r3
   234a8:	andeq	r0, r0, r8, lsr r3
   234ac:	andeq	r0, r0, r8, lsr r3
   234b0:	andeq	r0, r0, r8, ror #8
   234b4:	mov	r0, r5
   234b8:	mov	r1, r6
   234bc:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   234c0:	mov	r0, r5
   234c4:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   234c8:	mov	r0, r4
   234cc:	sub	sp, fp, #24
   234d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   234d4:	mov	r4, #0
   234d8:	cmp	r0, #64	; 0x40
   234dc:	bgt	23510 <myhtml_insertion_mode_in_head@@Base+0x2b4>
   234e0:	sub	r1, r0, #23
   234e4:	cmp	r1, #2
   234e8:	bcc	235d4 <myhtml_insertion_mode_in_head@@Base+0x378>
   234ec:	cmp	r0, #61	; 0x3d
   234f0:	bne	23588 <myhtml_insertion_mode_in_head@@Base+0x32c>
   234f4:	mov	r0, r5
   234f8:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   234fc:	mov	r0, #5
   23500:	str	r0, [r5, #168]	; 0xa8
   23504:	mov	r0, r4
   23508:	sub	sp, fp, #24
   2350c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23510:	cmp	r0, #65	; 0x41
   23514:	beq	235d4 <myhtml_insertion_mode_in_head@@Base+0x378>
   23518:	cmp	r0, #128	; 0x80
   2351c:	bne	23588 <myhtml_insertion_mode_in_head@@Base+0x32c>
   23520:	mov	r0, r5
   23524:	mov	r1, #128	; 0x80
   23528:	mov	r2, #1
   2352c:	mov	r3, #0
   23530:	mov	r4, #0
   23534:	bl	10e48 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   23538:	cmp	r0, #0
   2353c:	beq	23588 <myhtml_insertion_mode_in_head@@Base+0x32c>
   23540:	mov	r0, r5
   23544:	mov	r1, #0
   23548:	mov	r2, #0
   2354c:	mov	r4, #0
   23550:	bl	10f68 <myhtml_tree_generate_all_implied_end_tags@plt>
   23554:	mov	r0, r5
   23558:	bl	11514 <myhtml_tree_current_node@plt>
   2355c:	mov	r0, r5
   23560:	mov	r1, #128	; 0x80
   23564:	mov	r2, #1
   23568:	mov	r3, #0
   2356c:	bl	11760 <myhtml_tree_open_elements_pop_until@plt>
   23570:	mov	r0, r5
   23574:	bl	11afc <myhtml_tree_active_formatting_up_to_last_marker@plt>
   23578:	mov	r0, r5
   2357c:	bl	117c0 <myhtml_tree_template_insertion_pop@plt>
   23580:	mov	r0, r5
   23584:	bl	115d4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   23588:	mov	r0, r4
   2358c:	sub	sp, fp, #24
   23590:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23594:	mov	r0, r5
   23598:	mov	r1, r6
   2359c:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   235a0:	mov	r0, #4
   235a4:	b	23714 <myhtml_insertion_mode_in_head@@Base+0x4b8>
   235a8:	ldr	r0, [r6, #48]	; 0x30
   235ac:	tst	r0, #8
   235b0:	bne	23734 <myhtml_insertion_mode_in_head@@Base+0x4d8>
   235b4:	mov	r0, r5
   235b8:	mov	r1, r6
   235bc:	bl	10fe0 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   235c0:	cmp	r0, #0
   235c4:	beq	235d4 <myhtml_insertion_mode_in_head@@Base+0x378>
   235c8:	mov	r1, r0
   235cc:	mov	r0, r5
   235d0:	bl	11058 <myhtml_tree_node_insert_text@plt>
   235d4:	mov	r0, r5
   235d8:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   235dc:	mov	r0, #5
   235e0:	mov	r4, #1
   235e4:	str	r0, [r5, #168]	; 0xa8
   235e8:	mov	r0, r4
   235ec:	sub	sp, fp, #24
   235f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   235f4:	mov	r0, r5
   235f8:	mov	r1, r6
   235fc:	mov	r2, #0
   23600:	mov	r4, #0
   23604:	bl	11268 <myhtml_tree_node_insert_comment@plt>
   23608:	mov	r0, r4
   2360c:	sub	sp, fp, #24
   23610:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23614:	mov	r0, r5
   23618:	mov	r1, r6
   2361c:	sub	sp, fp, #24
   23620:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   23624:	b	21a90 <myhtml_insertion_mode_in_body@@Base>
   23628:	ldr	r7, [r5, #180]	; 0xb4
   2362c:	mov	r0, r5
   23630:	mov	r1, r6
   23634:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   23638:	tst	r7, #1
   2363c:	bne	235a0 <myhtml_insertion_mode_in_head@@Base+0x344>
   23640:	mov	r0, #4
   23644:	str	r0, [r5, #168]	; 0xa8
   23648:	mov	r0, r4
   2364c:	sub	sp, fp, #24
   23650:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23654:	add	r2, sp, #4
   23658:	mov	r0, r5
   2365c:	mov	r1, #0
   23660:	mov	r4, #0
   23664:	bl	11b14 <myhtml_tree_appropriate_place_inserting@plt>
   23668:	mov	r8, r0
   2366c:	mov	r0, r5
   23670:	bl	110ac <myhtml_tree_node_create@plt>
   23674:	mov	r7, r0
   23678:	mov	r0, #112	; 0x70
   2367c:	mov	r1, #1
   23680:	mov	r2, #3
   23684:	str	r6, [r7, #32]
   23688:	str	r2, [r7]
   2368c:	stmib	r7, {r0, r1}
   23690:	mov	r0, r8
   23694:	mov	r1, r7
   23698:	ldr	r2, [sp, #4]
   2369c:	bl	11304 <myhtml_tree_node_insert_by_mode@plt>
   236a0:	mov	r0, r5
   236a4:	mov	r1, r7
   236a8:	bl	1179c <myhtml_tree_open_elements_append@plt>
   236ac:	mov	r0, #5
   236b0:	b	23714 <myhtml_insertion_mode_in_head@@Base+0x4b8>
   236b4:	mov	r0, r5
   236b8:	mov	r1, r6
   236bc:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   236c0:	ldr	r0, [r5]
   236c4:	ldr	r1, [r0, #36]	; 0x24
   236c8:	mov	r0, r5
   236cc:	bl	1116c <myhtml_tree_active_formatting_append@plt>
   236d0:	mov	r0, #17
   236d4:	str	r0, [r5, #168]	; 0xa8
   236d8:	ldr	r0, [r5, #180]	; 0xb4
   236dc:	ldr	r1, [r5, #180]	; 0xb4
   236e0:	and	r0, r0, #2
   236e4:	eor	r0, r1, r0
   236e8:	mov	r1, #17
   236ec:	str	r0, [r5, #180]	; 0xb4
   236f0:	mov	r0, r5
   236f4:	bl	1107c <myhtml_tree_template_insertion_append@plt>
   236f8:	mov	r0, r4
   236fc:	sub	sp, fp, #24
   23700:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23704:	mov	r0, r5
   23708:	mov	r1, r6
   2370c:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   23710:	mov	r0, #2
   23714:	str	r0, [r5, #164]	; 0xa4
   23718:	mov	r1, #7
   2371c:	ldr	r0, [r5, #168]	; 0xa8
   23720:	str	r1, [r5, #168]	; 0xa8
   23724:	str	r0, [r5, #172]	; 0xac
   23728:	mov	r0, r4
   2372c:	sub	sp, fp, #24
   23730:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23734:	mov	r0, r5
   23738:	mov	r1, r6
   2373c:	bl	11058 <myhtml_tree_node_insert_text@plt>
   23740:	mov	r0, r4
   23744:	sub	sp, fp, #24
   23748:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002374c <myhtml_insertion_mode_in_head_noscript@@Base>:
   2374c:	push	{r4, r5, fp, lr}
   23750:	add	fp, sp, #8
   23754:	mov	r4, r0
   23758:	ldr	r0, [r1]
   2375c:	ldr	r2, [r1, #48]	; 0x30
   23760:	tst	r2, #1
   23764:	bne	23970 <myhtml_insertion_mode_in_head_noscript@@Base+0x224>
   23768:	sub	r0, r0, #1
   2376c:	cmp	r0, #119	; 0x77
   23770:	bhi	239a8 <myhtml_insertion_mode_in_head_noscript@@Base+0x25c>
   23774:	add	r2, pc, #8
   23778:	mov	r5, #0
   2377c:	ldr	r0, [r2, r0, lsl #2]
   23780:	add	pc, r2, r0
   23784:	andeq	r0, r0, r8, lsl r2
   23788:	andeq	r0, r0, r0, ror #3
   2378c:	andeq	r0, r0, r8, lsr r2
   23790:	andeq	r0, r0, r4, lsr #4
   23794:	andeq	r0, r0, r4, lsr #4
   23798:	andeq	r0, r0, r4, lsr #4
   2379c:	andeq	r0, r0, r4, lsr #4
   237a0:	andeq	r0, r0, r4, lsr #4
   237a4:	andeq	r0, r0, r4, lsr #4
   237a8:	andeq	r0, r0, r4, lsr #4
   237ac:	andeq	r0, r0, r4, lsr #4
   237b0:	andeq	r0, r0, r4, lsr #4
   237b4:	andeq	r0, r0, r4, lsr #4
   237b8:	andeq	r0, r0, r4, lsr #4
   237bc:	andeq	r0, r0, r4, lsr #4
   237c0:	andeq	r0, r0, r0, ror #3
   237c4:	andeq	r0, r0, r4, lsr #4
   237c8:	andeq	r0, r0, r4, lsr #4
   237cc:	andeq	r0, r0, r0, ror #3
   237d0:	andeq	r0, r0, r4, lsr #4
   237d4:	andeq	r0, r0, r4, lsr #4
   237d8:	andeq	r0, r0, r4, lsr #4
   237dc:	andeq	r0, r0, r4, lsr #4
   237e0:	andeq	r0, r0, r4, lsr #4
   237e4:	andeq	r0, r0, r4, lsr #4
   237e8:	andeq	r0, r0, r4, lsr #4
   237ec:	andeq	r0, r0, r4, lsr #4
   237f0:	andeq	r0, r0, r4, lsr #4
   237f4:	andeq	r0, r0, r4, lsr #4
   237f8:	andeq	r0, r0, r4, lsr #4
   237fc:	andeq	r0, r0, r4, lsr #4
   23800:	andeq	r0, r0, r4, lsr #4
   23804:	andeq	r0, r0, r4, lsr #4
   23808:	andeq	r0, r0, r4, lsr #4
   2380c:	andeq	r0, r0, r4, lsr #4
   23810:	andeq	r0, r0, r4, lsr #4
   23814:	andeq	r0, r0, r4, lsr #4
   23818:	andeq	r0, r0, r4, lsr #4
   2381c:	andeq	r0, r0, r4, lsr #4
   23820:	andeq	r0, r0, r4, lsr #4
   23824:	andeq	r0, r0, r4, lsr #4
   23828:	andeq	r0, r0, r4, lsr #4
   2382c:	andeq	r0, r0, r4, lsr #4
   23830:	andeq	r0, r0, r4, lsr #4
   23834:	andeq	r0, r0, r4, lsr #4
   23838:	andeq	r0, r0, r4, lsr #4
   2383c:	andeq	r0, r0, r4, lsr #4
   23840:	andeq	r0, r0, r4, lsr #4
   23844:	andeq	r0, r0, r4, lsr #4
   23848:	andeq	r0, r0, r4, lsr #4
   2384c:	andeq	r0, r0, r4, lsr #4
   23850:	andeq	r0, r0, r4, lsr #4
   23854:	andeq	r0, r0, r4, lsr #4
   23858:	andeq	r0, r0, r4, lsr #4
   2385c:	andeq	r0, r0, r4, lsr #4
   23860:	andeq	r0, r0, r4, lsr #4
   23864:	andeq	r0, r0, r4, lsr #4
   23868:	andeq	r0, r0, r4, lsr #4
   2386c:	andeq	r0, r0, r4, lsr #4
   23870:	andeq	r0, r0, r4, lsr #4
   23874:	andeq	r0, r0, r8, lsr r2
   23878:	andeq	r0, r0, r4, lsr #4
   2387c:	andeq	r0, r0, r4, lsr #4
   23880:	andeq	r0, r0, r4, lsr #4
   23884:	andeq	r0, r0, r0, asr #4
   23888:	andeq	r0, r0, r4, lsr #4
   2388c:	andeq	r0, r0, r4, lsr #4
   23890:	andeq	r0, r0, r4, lsr #4
   23894:	andeq	r0, r0, r4, lsr #4
   23898:	andeq	r0, r0, r4, lsr #4
   2389c:	andeq	r0, r0, r4, lsr #4
   238a0:	andeq	r0, r0, r4, lsr #4
   238a4:	andeq	r0, r0, r4, lsr #4
   238a8:	andeq	r0, r0, r4, lsr #4
   238ac:	andeq	r0, r0, r4, lsr #4
   238b0:	andeq	r0, r0, r4, lsr #4
   238b4:	andeq	r0, r0, r4, lsr #4
   238b8:	andeq	r0, r0, r0, ror #3
   238bc:	andeq	r0, r0, r4, lsr #4
   238c0:	andeq	r0, r0, r4, lsr #4
   238c4:	andeq	r0, r0, r4, lsr #4
   238c8:	andeq	r0, r0, r4, lsr #4
   238cc:	andeq	r0, r0, r4, lsr #4
   238d0:	andeq	r0, r0, r4, lsr #4
   238d4:	andeq	r0, r0, r4, lsr #4
   238d8:	andeq	r0, r0, r0, ror #3
   238dc:	andeq	r0, r0, r4, lsr #4
   238e0:	andeq	r0, r0, r4, lsr #4
   238e4:	andeq	r0, r0, r4, lsr #4
   238e8:	andeq	r0, r0, r4, lsr #4
   238ec:	andeq	r0, r0, r4, lsr #4
   238f0:	andeq	r0, r0, r0, ror #3
   238f4:	andeq	r0, r0, r8, lsr r2
   238f8:	andeq	r0, r0, r4, lsr #4
   238fc:	andeq	r0, r0, r4, lsr #4
   23900:	andeq	r0, r0, r4, lsr #4
   23904:	andeq	r0, r0, r4, lsr #4
   23908:	andeq	r0, r0, r4, lsr #4
   2390c:	andeq	r0, r0, r4, lsr #4
   23910:	andeq	r0, r0, r4, lsr #4
   23914:	andeq	r0, r0, r4, lsr #4
   23918:	andeq	r0, r0, r4, lsr #4
   2391c:	andeq	r0, r0, r4, lsr #4
   23920:	andeq	r0, r0, r4, lsr #4
   23924:	andeq	r0, r0, r4, lsr #4
   23928:	andeq	r0, r0, r4, lsr #4
   2392c:	andeq	r0, r0, r4, lsr #4
   23930:	andeq	r0, r0, r4, lsr #4
   23934:	andeq	r0, r0, r4, lsr #4
   23938:	andeq	r0, r0, r4, lsr #4
   2393c:	andeq	r0, r0, r4, lsr #4
   23940:	andeq	r0, r0, r4, lsr #4
   23944:	andeq	r0, r0, r4, lsr #4
   23948:	andeq	r0, r0, r4, lsr #4
   2394c:	andeq	r0, r0, r4, lsr #4
   23950:	andeq	r0, r0, r4, lsr #4
   23954:	andeq	r0, r0, r4, lsr #4
   23958:	andeq	r0, r0, r4, lsr #4
   2395c:	andeq	r0, r0, r4, lsr #4
   23960:	andeq	r0, r0, r0, ror #3
   23964:	mov	r0, r4
   23968:	pop	{r4, r5, fp, lr}
   2396c:	b	2325c <myhtml_insertion_mode_in_head@@Base>
   23970:	cmp	r0, #24
   23974:	beq	239a8 <myhtml_insertion_mode_in_head_noscript@@Base+0x25c>
   23978:	mov	r5, #0
   2397c:	cmp	r0, #93	; 0x5d
   23980:	bne	239bc <myhtml_insertion_mode_in_head_noscript@@Base+0x270>
   23984:	mov	r0, r4
   23988:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   2398c:	mov	r0, #3
   23990:	str	r0, [r4, #168]	; 0xa8
   23994:	mov	r0, r5
   23998:	pop	{r4, r5, fp, pc}
   2399c:	ldr	r0, [r1, #48]	; 0x30
   239a0:	tst	r0, #8
   239a4:	bne	23964 <myhtml_insertion_mode_in_head_noscript@@Base+0x218>
   239a8:	mov	r0, r4
   239ac:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   239b0:	mov	r0, #3
   239b4:	mov	r5, #1
   239b8:	str	r0, [r4, #168]	; 0xa8
   239bc:	mov	r0, r5
   239c0:	pop	{r4, r5, fp, pc}
   239c4:	mov	r0, r4
   239c8:	pop	{r4, r5, fp, lr}
   239cc:	b	21a90 <myhtml_insertion_mode_in_body@@Base>

000239d0 <myhtml_insertion_mode_after_head@@Base>:
   239d0:	push	{r4, r5, r6, sl, fp, lr}
   239d4:	add	fp, sp, #16
   239d8:	mov	r4, r0
   239dc:	mov	r6, r1
   239e0:	ldr	r0, [r1]
   239e4:	ldr	r1, [r1, #48]	; 0x30
   239e8:	tst	r1, #1
   239ec:	bne	23c4c <myhtml_insertion_mode_after_head@@Base+0x27c>
   239f0:	sub	r0, r0, #1
   239f4:	cmp	r0, #133	; 0x85
   239f8:	bhi	23c6c <myhtml_insertion_mode_after_head@@Base+0x29c>
   239fc:	add	r1, pc, #8
   23a00:	mov	r5, #0
   23a04:	ldr	r0, [r1, r0, lsl #2]
   23a08:	add	pc, r1, r0
   23a0c:	andeq	r0, r0, r0, lsr #5
   23a10:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   23a14:	andeq	r0, r0, r8, lsl #5
   23a18:	andeq	r0, r0, r0, ror #4
   23a1c:	andeq	r0, r0, r0, ror #4
   23a20:	andeq	r0, r0, r0, ror #4
   23a24:	andeq	r0, r0, r0, ror #4
   23a28:	andeq	r0, r0, r0, ror #4
   23a2c:	andeq	r0, r0, r0, ror #4
   23a30:	andeq	r0, r0, r0, ror #4
   23a34:	andeq	r0, r0, r0, ror #4
   23a38:	andeq	r0, r0, r0, ror #4
   23a3c:	andeq	r0, r0, r0, ror #4
   23a40:	andeq	r0, r0, r0, ror #4
   23a44:	andeq	r0, r0, r8, lsl r2
   23a48:	andeq	r0, r0, r8, lsl r2
   23a4c:	andeq	r0, r0, r0, ror #4
   23a50:	andeq	r0, r0, r0, ror #4
   23a54:	andeq	r0, r0, r8, lsl r2
   23a58:	andeq	r0, r0, r0, ror #4
   23a5c:	andeq	r0, r0, r0, ror #4
   23a60:	andeq	r0, r0, r0, ror #4
   23a64:	andeq	r0, r0, ip, ror #5
   23a68:	andeq	r0, r0, r0, ror #4
   23a6c:	andeq	r0, r0, r0, ror #4
   23a70:	andeq	r0, r0, r0, ror #4
   23a74:	andeq	r0, r0, r0, ror #4
   23a78:	andeq	r0, r0, r0, ror #4
   23a7c:	andeq	r0, r0, r0, ror #4
   23a80:	andeq	r0, r0, r0, ror #4
   23a84:	andeq	r0, r0, r0, ror #4
   23a88:	andeq	r0, r0, r0, ror #4
   23a8c:	andeq	r0, r0, r0, ror #4
   23a90:	andeq	r0, r0, r0, ror #4
   23a94:	andeq	r0, r0, r0, ror #4
   23a98:	andeq	r0, r0, r0, ror #4
   23a9c:	andeq	r0, r0, r0, ror #4
   23aa0:	andeq	r0, r0, r0, ror #4
   23aa4:	andeq	r0, r0, r0, ror #4
   23aa8:	andeq	r0, r0, r0, ror #4
   23aac:	andeq	r0, r0, r0, ror #4
   23ab0:	andeq	r0, r0, r0, ror #4
   23ab4:	andeq	r0, r0, r0, ror #4
   23ab8:	andeq	r0, r0, r0, ror #4
   23abc:	andeq	r0, r0, r0, ror #4
   23ac0:	andeq	r0, r0, r0, ror #4
   23ac4:	andeq	r0, r0, r0, ror #4
   23ac8:	andeq	r0, r0, r0, ror #4
   23acc:	andeq	r0, r0, r0, ror #4
   23ad0:	andeq	r0, r0, r0, ror #4
   23ad4:	andeq	r0, r0, r0, ror #4
   23ad8:	andeq	r0, r0, r0, ror #4
   23adc:	andeq	r0, r0, r0, ror #4
   23ae0:	andeq	r0, r0, r0, lsr #6
   23ae4:	andeq	r0, r0, r0, ror #4
   23ae8:	andeq	r0, r0, r0, ror #4
   23aec:	andeq	r0, r0, r0, ror #4
   23af0:	andeq	r0, r0, r0, ror #4
   23af4:	andeq	r0, r0, r0, ror #4
   23af8:	andeq	r0, r0, r0, ror #4
   23afc:	andeq	r0, r0, r8, lsl #5
   23b00:	andeq	r0, r0, r0, ror #4
   23b04:	andeq	r0, r0, r0, ror #4
   23b08:	andeq	r0, r0, r0, ror #4
   23b0c:	andeq	r0, r0, ip, lsr r3
   23b10:	andeq	r0, r0, r0, ror #4
   23b14:	andeq	r0, r0, r0, ror #4
   23b18:	andeq	r0, r0, r0, ror #4
   23b1c:	andeq	r0, r0, r0, ror #4
   23b20:	andeq	r0, r0, r0, ror #4
   23b24:	andeq	r0, r0, r0, ror #4
   23b28:	andeq	r0, r0, r0, ror #4
   23b2c:	andeq	r0, r0, r0, ror #4
   23b30:	andeq	r0, r0, r0, ror #4
   23b34:	andeq	r0, r0, r0, ror #4
   23b38:	andeq	r0, r0, r0, ror #4
   23b3c:	andeq	r0, r0, r0, ror #4
   23b40:	andeq	r0, r0, r8, lsl r2
   23b44:	andeq	r0, r0, r0, ror #4
   23b48:	andeq	r0, r0, r0, ror #4
   23b4c:	andeq	r0, r0, r0, ror #4
   23b50:	andeq	r0, r0, r0, ror #4
   23b54:	andeq	r0, r0, r0, ror #4
   23b58:	andeq	r0, r0, r0, ror #4
   23b5c:	andeq	r0, r0, r0, ror #4
   23b60:	andeq	r0, r0, r8, lsl r2
   23b64:	andeq	r0, r0, r0, ror #4
   23b68:	andeq	r0, r0, r0, ror #4
   23b6c:	andeq	r0, r0, r0, ror #4
   23b70:	andeq	r0, r0, r0, ror #4
   23b74:	andeq	r0, r0, r0, ror #4
   23b78:	andeq	r0, r0, r8, lsl r2
   23b7c:	andeq	r0, r0, r0, ror #4
   23b80:	andeq	r0, r0, r0, ror #4
   23b84:	andeq	r0, r0, r0, ror #4
   23b88:	andeq	r0, r0, r0, ror #4
   23b8c:	andeq	r0, r0, r0, ror #4
   23b90:	andeq	r0, r0, r0, ror #4
   23b94:	andeq	r0, r0, r0, ror #4
   23b98:	andeq	r0, r0, r0, ror #4
   23b9c:	andeq	r0, r0, r0, ror #4
   23ba0:	andeq	r0, r0, r0, ror #4
   23ba4:	andeq	r0, r0, r0, ror #4
   23ba8:	andeq	r0, r0, r0, ror #4
   23bac:	andeq	r0, r0, r0, ror #4
   23bb0:	andeq	r0, r0, r0, ror #4
   23bb4:	andeq	r0, r0, r0, ror #4
   23bb8:	andeq	r0, r0, r0, ror #4
   23bbc:	andeq	r0, r0, r0, ror #4
   23bc0:	andeq	r0, r0, r0, ror #4
   23bc4:	andeq	r0, r0, r0, ror #4
   23bc8:	andeq	r0, r0, r8, lsl r2
   23bcc:	andeq	r0, r0, r0, ror #4
   23bd0:	andeq	r0, r0, r0, ror #4
   23bd4:	andeq	r0, r0, r0, ror #4
   23bd8:	andeq	r0, r0, r0, ror #4
   23bdc:	andeq	r0, r0, r0, ror #4
   23be0:	andeq	r0, r0, r0, ror #4
   23be4:	andeq	r0, r0, r0, ror #4
   23be8:	andeq	r0, r0, r8, lsl r2
   23bec:	andeq	r0, r0, r0, ror #4
   23bf0:	andeq	r0, r0, r0, ror #4
   23bf4:	andeq	r0, r0, r0, ror #4
   23bf8:	andeq	r0, r0, r0, ror #4
   23bfc:	andeq	r0, r0, r0, ror #4
   23c00:	andeq	r0, r0, r0, ror #4
   23c04:	andeq	r0, r0, r0, ror #4
   23c08:	andeq	r0, r0, r8, lsl r2
   23c0c:	andeq	r0, r0, r0, ror #4
   23c10:	andeq	r0, r0, r0, ror #4
   23c14:	andeq	r0, r0, r0, ror #4
   23c18:	andeq	r0, r0, r0, ror #4
   23c1c:	andeq	r0, r0, r0, ror #4
   23c20:	andeq	r0, r0, r8, lsl r2
   23c24:	ldr	r1, [r4, #92]	; 0x5c
   23c28:	mov	r0, r4
   23c2c:	bl	1179c <myhtml_tree_open_elements_append@plt>
   23c30:	mov	r0, r4
   23c34:	mov	r1, r6
   23c38:	bl	11118 <myhtml_insertion_mode_in_head@plt>
   23c3c:	ldr	r1, [r4, #92]	; 0x5c
   23c40:	mov	r0, r4
   23c44:	bl	11250 <myhtml_tree_open_elements_remove@plt>
   23c48:	b	23c94 <myhtml_insertion_mode_after_head@@Base+0x2c4>
   23c4c:	sub	r1, r0, #23
   23c50:	cmp	r1, #2
   23c54:	bcc	23c6c <myhtml_insertion_mode_after_head@@Base+0x29c>
   23c58:	cmp	r0, #128	; 0x80
   23c5c:	beq	23c9c <myhtml_insertion_mode_after_head@@Base+0x2cc>
   23c60:	mov	r5, #0
   23c64:	cmp	r0, #65	; 0x41
   23c68:	bne	23c94 <myhtml_insertion_mode_after_head@@Base+0x2c4>
   23c6c:	mov	r0, r4
   23c70:	mov	r1, #23
   23c74:	mov	r2, #1
   23c78:	mov	r5, #1
   23c7c:	bl	11784 <myhtml_tree_node_insert@plt>
   23c80:	str	r0, [r4, #100]	; 0x64
   23c84:	mov	r0, #6
   23c88:	str	r0, [r4, #168]	; 0xa8
   23c8c:	mov	r0, r5
   23c90:	pop	{r4, r5, r6, sl, fp, pc}
   23c94:	mov	r0, r5
   23c98:	pop	{r4, r5, r6, sl, fp, pc}
   23c9c:	mov	r0, r4
   23ca0:	mov	r1, r6
   23ca4:	pop	{r4, r5, r6, sl, fp, lr}
   23ca8:	b	2325c <myhtml_insertion_mode_in_head@@Base>
   23cac:	ldr	r0, [r6, #48]	; 0x30
   23cb0:	tst	r0, #8
   23cb4:	bne	23d58 <myhtml_insertion_mode_after_head@@Base+0x388>
   23cb8:	mov	r0, r4
   23cbc:	mov	r1, r6
   23cc0:	bl	10fe0 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   23cc4:	cmp	r0, #0
   23cc8:	beq	23c6c <myhtml_insertion_mode_after_head@@Base+0x29c>
   23ccc:	mov	r1, r0
   23cd0:	mov	r0, r4
   23cd4:	bl	11058 <myhtml_tree_node_insert_text@plt>
   23cd8:	b	23c6c <myhtml_insertion_mode_after_head@@Base+0x29c>
   23cdc:	mov	r0, r4
   23ce0:	mov	r1, r6
   23ce4:	mov	r2, #0
   23ce8:	mov	r5, #0
   23cec:	bl	11268 <myhtml_tree_node_insert_comment@plt>
   23cf0:	mov	r0, r5
   23cf4:	pop	{r4, r5, r6, sl, fp, pc}
   23cf8:	mov	r0, r4
   23cfc:	mov	r1, r6
   23d00:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   23d04:	str	r0, [r4, #100]	; 0x64
   23d08:	mov	r0, #6
   23d0c:	str	r0, [r4, #168]	; 0xa8
   23d10:	ldr	r0, [r4, #180]	; 0xb4
   23d14:	ldr	r1, [r4, #180]	; 0xb4
   23d18:	and	r0, r0, #2
   23d1c:	eor	r0, r1, r0
   23d20:	str	r0, [r4, #180]	; 0xb4
   23d24:	mov	r0, r5
   23d28:	pop	{r4, r5, r6, sl, fp, pc}
   23d2c:	mov	r0, r4
   23d30:	mov	r1, r6
   23d34:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   23d38:	mov	r0, #19
   23d3c:	str	r0, [r4, #168]	; 0xa8
   23d40:	mov	r0, r5
   23d44:	pop	{r4, r5, r6, sl, fp, pc}
   23d48:	mov	r0, r4
   23d4c:	mov	r1, r6
   23d50:	pop	{r4, r5, r6, sl, fp, lr}
   23d54:	b	21a90 <myhtml_insertion_mode_in_body@@Base>
   23d58:	mov	r0, r4
   23d5c:	mov	r1, r6
   23d60:	bl	11058 <myhtml_tree_node_insert_text@plt>
   23d64:	mov	r0, r5
   23d68:	pop	{r4, r5, r6, sl, fp, pc}

00023d6c <myhtml_insertion_mode_in_body_other_end_tag@@Base>:
   23d6c:	push	{r4, r5, r6, r7, fp, lr}
   23d70:	add	fp, sp, #16
   23d74:	mov	r4, r0
   23d78:	ldr	r0, [r0, #128]	; 0x80
   23d7c:	mov	r5, r1
   23d80:	ldr	r0, [r0, #4]
   23d84:	rsb	r7, r0, #1
   23d88:	cmp	r7, #1
   23d8c:	beq	23dd4 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x68>
   23d90:	ldr	r0, [r4, #128]	; 0x80
   23d94:	ldr	r0, [r0]
   23d98:	ldr	r6, [r0, -r7, lsl #2]
   23d9c:	ldr	r0, [r5]
   23da0:	ldr	r1, [r6, #4]
   23da4:	cmp	r1, r0
   23da8:	ldreq	r0, [r6, #8]
   23dac:	cmpeq	r0, #1
   23db0:	beq	23ddc <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x70>
   23db4:	ldr	r0, [r4, #28]
   23db8:	bl	117fc <myhtml_tag_get_by_id@plt>
   23dbc:	ldr	r1, [r6, #8]
   23dc0:	add	r7, r7, #1
   23dc4:	add	r0, r0, r1, lsl #2
   23dc8:	ldrb	r0, [r0, #16]
   23dcc:	tst	r0, #2
   23dd0:	beq	23d88 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x1c>
   23dd4:	mov	r0, #0
   23dd8:	pop	{r4, r5, r6, r7, fp, pc}
   23ddc:	mov	r0, r4
   23de0:	mov	r2, #1
   23de4:	bl	115a4 <myhtml_tree_generate_implied_end_tags@plt>
   23de8:	mov	r0, r4
   23dec:	bl	11514 <myhtml_tree_current_node@plt>
   23df0:	mov	r0, r4
   23df4:	mov	r1, r6
   23df8:	mov	r2, #0
   23dfc:	bl	111a8 <myhtml_tree_open_elements_pop_until_by_node@plt>
   23e00:	mov	r0, #0
   23e04:	pop	{r4, r5, r6, r7, fp, pc}

00023e08 <myhtml_insertion_mode_in_template@@Base>:
   23e08:	push	{r4, r5, fp, lr}
   23e0c:	add	fp, sp, #8
   23e10:	mov	r4, r0
   23e14:	ldr	r0, [r1]
   23e18:	ldr	r2, [r1, #48]	; 0x30
   23e1c:	tst	r2, #1
   23e20:	bne	24064 <myhtml_insertion_mode_in_template@@Base+0x25c>
   23e24:	sub	r2, r0, #1
   23e28:	cmp	r2, #134	; 0x86
   23e2c:	bhi	240ac <myhtml_insertion_mode_in_template@@Base+0x2a4>
   23e30:	add	r0, pc, #4
   23e34:	ldr	r2, [r0, r2, lsl #2]
   23e38:	add	pc, r0, r2
   23e3c:	andeq	r0, r0, r4, lsr r2
   23e40:	andeq	r0, r0, r4, lsr r2
   23e44:	andeq	r0, r0, r4, lsr r2
   23e48:	andeq	r0, r0, r4, asr #5
   23e4c:	andeq	r0, r0, r4, asr #5
   23e50:	andeq	r0, r0, r4, asr #5
   23e54:	andeq	r0, r0, r4, asr #5
   23e58:	andeq	r0, r0, r4, asr #5
   23e5c:	andeq	r0, r0, r4, asr #5
   23e60:	andeq	r0, r0, r4, asr #5
   23e64:	andeq	r0, r0, r4, asr #5
   23e68:	andeq	r0, r0, r4, asr #5
   23e6c:	andeq	r0, r0, r4, asr #5
   23e70:	andeq	r0, r0, r4, asr #5
   23e74:	andeq	r0, r0, ip, lsl r2
   23e78:	andeq	r0, r0, ip, lsl r2
   23e7c:	andeq	r0, r0, r4, asr #5
   23e80:	andeq	r0, r0, r4, asr #5
   23e84:	andeq	r0, r0, ip, lsl r2
   23e88:	andeq	r0, r0, r4, asr #5
   23e8c:	andeq	r0, r0, r4, asr #5
   23e90:	andeq	r0, r0, r4, asr #5
   23e94:	andeq	r0, r0, r4, asr #5
   23e98:	andeq	r0, r0, r4, asr #5
   23e9c:	andeq	r0, r0, r4, asr #5
   23ea0:	andeq	r0, r0, r4, asr #5
   23ea4:	andeq	r0, r0, r0, asr #4
   23ea8:	andeq	r0, r0, r4, asr #5
   23eac:	andeq	r0, r0, r4, asr #5
   23eb0:	andeq	r0, r0, r4, asr #5
   23eb4:	ldrdeq	r0, [r0], -ip
   23eb8:	andeq	r0, r0, r0, asr #4
   23ebc:	andeq	r0, r0, r4, asr #5
   23ec0:	andeq	r0, r0, r4, asr #5
   23ec4:	andeq	r0, r0, r4, asr #5
   23ec8:	andeq	r0, r0, r4, asr #5
   23ecc:	andeq	r0, r0, r4, asr #5
   23ed0:	andeq	r0, r0, r4, asr #5
   23ed4:	andeq	r0, r0, r4, asr #5
   23ed8:	andeq	r0, r0, r4, asr #5
   23edc:	andeq	r0, r0, r4, asr #5
   23ee0:	andeq	r0, r0, r4, asr #5
   23ee4:	andeq	r0, r0, r4, asr #5
   23ee8:	andeq	r0, r0, r4, asr #5
   23eec:	andeq	r0, r0, r4, asr #5
   23ef0:	andeq	r0, r0, r4, asr #5
   23ef4:	andeq	r0, r0, r4, asr #5
   23ef8:	andeq	r0, r0, r4, asr #5
   23efc:	andeq	r0, r0, r4, asr #5
   23f00:	andeq	r0, r0, r4, asr #5
   23f04:	andeq	r0, r0, r4, asr #5
   23f08:	andeq	r0, r0, r4, asr #5
   23f0c:	andeq	r0, r0, r4, asr #5
   23f10:	andeq	r0, r0, r4, asr #5
   23f14:	andeq	r0, r0, r4, asr #5
   23f18:	andeq	r0, r0, r4, asr #5
   23f1c:	andeq	r0, r0, r4, asr #5
   23f20:	andeq	r0, r0, r4, asr #5
   23f24:	andeq	r0, r0, r4, asr #5
   23f28:	andeq	r0, r0, r4, asr #5
   23f2c:	andeq	r0, r0, r4, asr #5
   23f30:	andeq	r0, r0, r4, asr #5
   23f34:	andeq	r0, r0, r4, asr #5
   23f38:	andeq	r0, r0, r4, asr #5
   23f3c:	andeq	r0, r0, r4, asr #5
   23f40:	andeq	r0, r0, r4, asr #5
   23f44:	andeq	r0, r0, r4, asr #5
   23f48:	andeq	r0, r0, r4, asr #5
   23f4c:	andeq	r0, r0, r4, asr #5
   23f50:	andeq	r0, r0, r4, asr #5
   23f54:	andeq	r0, r0, r4, asr #5
   23f58:	andeq	r0, r0, r4, asr #5
   23f5c:	andeq	r0, r0, r4, asr #5
   23f60:	andeq	r0, r0, r4, asr #5
   23f64:	andeq	r0, r0, r4, asr #5
   23f68:	andeq	r0, r0, r4, asr #5
   23f6c:	andeq	r0, r0, r4, asr #5
   23f70:	andeq	r0, r0, ip, lsl r2
   23f74:	andeq	r0, r0, r4, asr #5
   23f78:	andeq	r0, r0, r4, asr #5
   23f7c:	andeq	r0, r0, r4, asr #5
   23f80:	andeq	r0, r0, r4, asr #5
   23f84:	andeq	r0, r0, r4, asr #5
   23f88:	andeq	r0, r0, r4, asr #5
   23f8c:	andeq	r0, r0, r4, asr #5
   23f90:	andeq	r0, r0, ip, lsl r2
   23f94:	andeq	r0, r0, r4, asr #5
   23f98:	andeq	r0, r0, r4, asr #5
   23f9c:	andeq	r0, r0, r4, asr #5
   23fa0:	andeq	r0, r0, r4, asr #5
   23fa4:	andeq	r0, r0, r4, asr #5
   23fa8:	andeq	r0, r0, ip, lsl r2
   23fac:	andeq	r0, r0, r4, asr #5
   23fb0:	andeq	r0, r0, r4, asr #5
   23fb4:	andeq	r0, r0, r4, asr #5
   23fb8:	andeq	r0, r0, r4, asr #5
   23fbc:	andeq	r0, r0, r4, asr #5
   23fc0:	andeq	r0, r0, r4, asr #5
   23fc4:	andeq	r0, r0, r4, asr #5
   23fc8:	andeq	r0, r0, r4, asr #5
   23fcc:	andeq	r0, r0, r4, asr #5
   23fd0:	andeq	r0, r0, r4, asr #5
   23fd4:	andeq	r0, r0, r4, asr #5
   23fd8:	andeq	r0, r0, r4, asr #5
   23fdc:	andeq	r0, r0, r4, asr #5
   23fe0:	andeq	r0, r0, r4, asr #5
   23fe4:	andeq	r0, r0, r4, asr #5
   23fe8:	andeq	r0, r0, r4, asr #5
   23fec:	andeq	r0, r0, r4, asr #5
   23ff0:	andeq	r0, r0, r4, asr #5
   23ff4:	andeq	r0, r0, r4, asr #5
   23ff8:	andeq	r0, r0, ip, lsl r2
   23ffc:	andeq	r0, r0, r4, asr #5
   24000:	andeq	r0, r0, r4, asr #5
   24004:	andeq	r0, r0, r4, asr #5
   24008:	andeq	r0, r0, r4, asr #5
   2400c:	andeq	r0, r0, r4, asr #5
   24010:	andeq	r0, r0, r4, asr #5
   24014:	andeq	r0, r0, r4, asr #5
   24018:	andeq	r0, r0, ip, lsl r2
   2401c:	andeq	r0, r0, r4, asr #5
   24020:	andeq	r0, r0, r4, asr #5
   24024:	andeq	r0, r0, r4, asr #5
   24028:	andeq	r0, r0, r4, asr #5
   2402c:	andeq	r0, r0, r4, asr #5
   24030:	andeq	r0, r0, r0, asr #4
   24034:	andeq	r0, r0, r8, asr r2
   24038:	andeq	r0, r0, ip, lsl r2
   2403c:	andeq	r0, r0, r4, asr #5
   24040:	andeq	r0, r0, r0, asr #4
   24044:	andeq	r0, r0, r8, asr r2
   24048:	andeq	r0, r0, r0, asr #4
   2404c:	andeq	r0, r0, r4, asr #5
   24050:	andeq	r0, r0, ip, lsl r2
   24054:	strdeq	r0, [r0], -r4
   24058:	mov	r0, r4
   2405c:	pop	{r4, r5, fp, lr}
   24060:	b	2325c <myhtml_insertion_mode_in_head@@Base>
   24064:	mov	r5, #0
   24068:	cmp	r0, #128	; 0x80
   2406c:	bne	24150 <myhtml_insertion_mode_in_template@@Base+0x348>
   24070:	mov	r0, r4
   24074:	pop	{r4, r5, fp, lr}
   24078:	b	21a90 <myhtml_insertion_mode_in_body@@Base>
   2407c:	mov	r0, r4
   24080:	bl	117c0 <myhtml_tree_template_insertion_pop@plt>
   24084:	mov	r5, #8
   24088:	mov	r0, r4
   2408c:	mov	r1, #8
   24090:	b	24144 <myhtml_insertion_mode_in_template@@Base+0x33c>
   24094:	mov	r0, r4
   24098:	bl	117c0 <myhtml_tree_template_insertion_pop@plt>
   2409c:	mov	r5, #13
   240a0:	mov	r0, r4
   240a4:	mov	r1, #13
   240a8:	b	24144 <myhtml_insertion_mode_in_template@@Base+0x33c>
   240ac:	cmp	r0, #251	; 0xfb
   240b0:	bne	24100 <myhtml_insertion_mode_in_template@@Base+0x2f8>
   240b4:	mov	r0, r4
   240b8:	mov	r1, #128	; 0x80
   240bc:	mov	r2, #1
   240c0:	mov	r3, #0
   240c4:	mov	r5, #0
   240c8:	bl	11664 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   240cc:	cmp	r0, #0
   240d0:	beq	24150 <myhtml_insertion_mode_in_template@@Base+0x348>
   240d4:	mov	r1, r0
   240d8:	mov	r0, r4
   240dc:	mov	r2, #0
   240e0:	bl	111a8 <myhtml_tree_open_elements_pop_until_by_node@plt>
   240e4:	mov	r0, r4
   240e8:	bl	11afc <myhtml_tree_active_formatting_up_to_last_marker@plt>
   240ec:	mov	r0, r4
   240f0:	bl	117c0 <myhtml_tree_template_insertion_pop@plt>
   240f4:	mov	r0, r4
   240f8:	bl	115d4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   240fc:	b	2414c <myhtml_insertion_mode_in_template@@Base+0x344>
   24100:	mov	r0, r4
   24104:	bl	117c0 <myhtml_tree_template_insertion_pop@plt>
   24108:	mov	r5, #6
   2410c:	mov	r0, r4
   24110:	mov	r1, #6
   24114:	b	24144 <myhtml_insertion_mode_in_template@@Base+0x33c>
   24118:	mov	r0, r4
   2411c:	bl	117c0 <myhtml_tree_template_insertion_pop@plt>
   24120:	mov	r5, #11
   24124:	mov	r0, r4
   24128:	mov	r1, #11
   2412c:	b	24144 <myhtml_insertion_mode_in_template@@Base+0x33c>
   24130:	mov	r0, r4
   24134:	bl	117c0 <myhtml_tree_template_insertion_pop@plt>
   24138:	mov	r5, #12
   2413c:	mov	r0, r4
   24140:	mov	r1, #12
   24144:	bl	1107c <myhtml_tree_template_insertion_append@plt>
   24148:	str	r5, [r4, #168]	; 0xa8
   2414c:	mov	r5, #1
   24150:	mov	r0, r5
   24154:	pop	{r4, r5, fp, pc}

00024158 <myhtml_rules_stop_parsing@@Base>:
   24158:	bx	lr

0002415c <myhtml_insertion_mode_text@@Base>:
   2415c:	push	{r4, sl, fp, lr}
   24160:	add	fp, sp, #8
   24164:	mov	r4, r0
   24168:	ldr	r0, [r1, #48]	; 0x30
   2416c:	tst	r0, #1
   24170:	bne	241b4 <myhtml_insertion_mode_text@@Base+0x58>
   24174:	ldr	r0, [r1]
   24178:	cmp	r0, #251	; 0xfb
   2417c:	bne	241cc <myhtml_insertion_mode_text@@Base+0x70>
   24180:	mov	r0, r4
   24184:	bl	11514 <myhtml_tree_current_node@plt>
   24188:	ldr	r1, [r0, #4]
   2418c:	cmp	r1, #112	; 0x70
   24190:	ldreq	r1, [r0]
   24194:	orreq	r1, r1, #8
   24198:	streq	r1, [r0]
   2419c:	mov	r0, r4
   241a0:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   241a4:	ldr	r0, [r4, #172]	; 0xac
   241a8:	str	r0, [r4, #168]	; 0xa8
   241ac:	mov	r0, #1
   241b0:	pop	{r4, sl, fp, pc}
   241b4:	mov	r0, r4
   241b8:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   241bc:	ldr	r0, [r4, #172]	; 0xac
   241c0:	str	r0, [r4, #168]	; 0xa8
   241c4:	mov	r0, #0
   241c8:	pop	{r4, sl, fp, pc}
   241cc:	mov	r0, r4
   241d0:	bl	11058 <myhtml_tree_node_insert_text@plt>
   241d4:	mov	r0, #0
   241d8:	pop	{r4, sl, fp, pc}

000241dc <myhtml_insertion_mode_in_table@@Base>:
   241dc:	push	{r4, r5, r6, sl, fp, lr}
   241e0:	add	fp, sp, #16
   241e4:	sub	sp, sp, #8
   241e8:	mov	r4, r0
   241ec:	mov	r6, r1
   241f0:	ldr	r0, [r1]
   241f4:	ldr	r1, [r1, #48]	; 0x30
   241f8:	tst	r1, #1
   241fc:	bne	24450 <myhtml_insertion_mode_in_table@@Base+0x274>
   24200:	sub	r1, r0, #1
   24204:	cmp	r1, #134	; 0x86
   24208:	bhi	246b8 <myhtml_insertion_mode_in_table@@Base+0x4dc>
   2420c:	add	r0, pc, #8
   24210:	mov	r5, #0
   24214:	ldr	r1, [r0, r1, lsl #2]
   24218:	add	pc, r0, r1
   2421c:	andeq	r0, r0, r8, lsr #9
   24220:	andeq	r0, r0, r4, lsl #10
   24224:	andeq	r0, r0, ip, ror r6
   24228:	andeq	r0, r0, r0, ror #12
   2422c:	andeq	r0, r0, r0, ror #12
   24230:	andeq	r0, r0, r0, ror #12
   24234:	andeq	r0, r0, r0, ror #12
   24238:	andeq	r0, r0, r0, ror #12
   2423c:	andeq	r0, r0, r0, ror #12
   24240:	andeq	r0, r0, r0, ror #12
   24244:	andeq	r0, r0, r0, ror #12
   24248:	andeq	r0, r0, r0, ror #12
   2424c:	andeq	r0, r0, r0, ror #12
   24250:	andeq	r0, r0, r0, ror #12
   24254:	andeq	r0, r0, r0, ror #12
   24258:	andeq	r0, r0, r0, ror #12
   2425c:	andeq	r0, r0, r0, ror #12
   24260:	andeq	r0, r0, r0, ror #12
   24264:	andeq	r0, r0, r0, ror #12
   24268:	andeq	r0, r0, r0, ror #12
   2426c:	andeq	r0, r0, r0, ror #12
   24270:	andeq	r0, r0, r0, ror #12
   24274:	andeq	r0, r0, r0, ror #12
   24278:	andeq	r0, r0, r0, ror #12
   2427c:	andeq	r0, r0, r0, ror #12
   24280:	andeq	r0, r0, r0, ror #12
   24284:	andeq	r0, r0, r4, lsr #10
   24288:	andeq	r0, r0, r0, ror #12
   2428c:	andeq	r0, r0, r0, ror #12
   24290:	andeq	r0, r0, r0, ror #12
   24294:	andeq	r0, r0, ip, asr r5
   24298:	andeq	r0, r0, ip, ror r5
   2429c:	andeq	r0, r0, r0, ror #12
   242a0:	andeq	r0, r0, r0, ror #12
   242a4:	andeq	r0, r0, r0, ror #12
   242a8:	andeq	r0, r0, r0, ror #12
   242ac:	andeq	r0, r0, r0, ror #12
   242b0:	andeq	r0, r0, r0, ror #12
   242b4:	andeq	r0, r0, r0, ror #12
   242b8:	andeq	r0, r0, r0, ror #12
   242bc:	andeq	r0, r0, r0, ror #12
   242c0:	andeq	r0, r0, r0, ror #12
   242c4:	andeq	r0, r0, r0, ror #12
   242c8:	andeq	r0, r0, r0, ror #12
   242cc:	andeq	r0, r0, r0, ror #12
   242d0:	andeq	r0, r0, r0, ror #12
   242d4:	andeq	r0, r0, r0, ror #12
   242d8:	andeq	r0, r0, r0, ror #12
   242dc:	andeq	r0, r0, r0, ror #12
   242e0:	andeq	r0, r0, r0, ror #12
   242e4:	andeq	r0, r0, r0, ror #12
   242e8:	andeq	r0, r0, r4, lsr #11
   242ec:	andeq	r0, r0, r0, ror #12
   242f0:	andeq	r0, r0, r0, ror #12
   242f4:	andeq	r0, r0, r0, ror #12
   242f8:	andeq	r0, r0, r0, ror #12
   242fc:	andeq	r0, r0, r0, ror #12
   24300:	andeq	r0, r0, r0, ror #12
   24304:	andeq	r0, r0, r0, ror #12
   24308:	andeq	r0, r0, r0, ror #12
   2430c:	andeq	r0, r0, r0, ror #12
   24310:	andeq	r0, r0, r0, ror #12
   24314:	andeq	r0, r0, r0, ror #12
   24318:	andeq	r0, r0, r0, ror #12
   2431c:	andeq	r0, r0, r0, ror #12
   24320:	andeq	r0, r0, r0, ror #12
   24324:	andeq	r0, r0, r0, ror #12
   24328:	andeq	r0, r0, r0, ror #12
   2432c:	andeq	r0, r0, r0, ror #12
   24330:	strdeq	r0, [r0], -r4
   24334:	andeq	r0, r0, r0, ror #12
   24338:	andeq	r0, r0, r0, ror #12
   2433c:	andeq	r0, r0, r0, ror #12
   24340:	andeq	r0, r0, r0, ror #12
   24344:	andeq	r0, r0, r0, ror #12
   24348:	andeq	r0, r0, r0, ror #12
   2434c:	andeq	r0, r0, r0, ror #12
   24350:	andeq	r0, r0, r0, ror #12
   24354:	andeq	r0, r0, r0, ror #12
   24358:	andeq	r0, r0, r0, ror #12
   2435c:	andeq	r0, r0, r0, ror #12
   24360:	andeq	r0, r0, r0, ror #12
   24364:	andeq	r0, r0, r0, ror #12
   24368:	andeq	r0, r0, r0, ror #12
   2436c:	andeq	r0, r0, r0, ror #12
   24370:	andeq	r0, r0, r0, ror #12
   24374:	andeq	r0, r0, r0, ror #12
   24378:	andeq	r0, r0, r0, ror #12
   2437c:	andeq	r0, r0, r0, ror #12
   24380:	andeq	r0, r0, r0, ror #12
   24384:	andeq	r0, r0, r0, ror #12
   24388:	andeq	r0, r0, r0, ror #12
   2438c:	andeq	r0, r0, r0, ror #12
   24390:	andeq	r0, r0, r0, ror #12
   24394:	andeq	r0, r0, r0, ror #12
   24398:	andeq	r0, r0, r0, ror #12
   2439c:	andeq	r0, r0, r0, ror #12
   243a0:	andeq	r0, r0, r0, ror #12
   243a4:	andeq	r0, r0, r0, ror #12
   243a8:	andeq	r0, r0, r0, ror #12
   243ac:	andeq	r0, r0, r0, ror #12
   243b0:	andeq	r0, r0, r0, ror #12
   243b4:	andeq	r0, r0, r0, ror #12
   243b8:	andeq	r0, r0, r0, ror #12
   243bc:	andeq	r0, r0, r0, ror #12
   243c0:	andeq	r0, r0, r0, ror #12
   243c4:	andeq	r0, r0, r0, ror #12
   243c8:	andeq	r0, r0, r0, ror #12
   243cc:	andeq	r0, r0, r0, ror #12
   243d0:	andeq	r0, r0, r0, ror #12
   243d4:	andeq	r0, r0, r0, ror #12
   243d8:	andeq	r0, r0, r8, asr r4
   243dc:	andeq	r0, r0, r0, ror #12
   243e0:	andeq	r0, r0, r0, ror #12
   243e4:	andeq	r0, r0, r0, ror #12
   243e8:	andeq	r0, r0, r0, ror #12
   243ec:	andeq	r0, r0, r0, ror #12
   243f0:	andeq	r0, r0, r0, ror #12
   243f4:	andeq	r0, r0, r0, ror #12
   243f8:	andeq	r0, r0, r8, asr r4
   243fc:	andeq	r0, r0, r0, ror #12
   24400:	andeq	r0, r0, r0, ror #12
   24404:	andeq	r0, r0, r0, ror #12
   24408:	andeq	r0, r0, r0, ror #12
   2440c:	andeq	r0, r0, r8, lsl #13
   24410:	andeq	r0, r0, ip, lsl r2
   24414:	andeq	r0, r0, ip, ror #8
   24418:	andeq	r0, r0, r8, asr r4
   2441c:	andeq	r0, r0, r0, ror #12
   24420:	andeq	r0, r0, ip, lsl r2
   24424:	andeq	r0, r0, ip, ror #8
   24428:	andeq	r0, r0, ip, lsl r2
   2442c:	andeq	r0, r0, r0, ror #12
   24430:	andeq	r0, r0, r0, ror #12
   24434:	andeq	r0, r0, ip, ror #8
   24438:	mov	r0, r4
   2443c:	bl	11c04 <myhtml_tree_clear_stack_back_table_context@plt>
   24440:	mov	r0, r4
   24444:	mov	r1, r6
   24448:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   2444c:	b	246a4 <myhtml_insertion_mode_in_table@@Base+0x4c8>
   24450:	sub	r0, r0, #23
   24454:	cmp	r0, #112	; 0x70
   24458:	bhi	2487c <myhtml_insertion_mode_in_table@@Base+0x6a0>
   2445c:	add	r1, pc, #8
   24460:	mov	r5, #0
   24464:	ldr	r0, [r1, r0, lsl #2]
   24468:	add	pc, r1, r0
   2446c:	andeq	r0, r0, ip, lsr #8
   24470:	andeq	r0, r0, r0, lsl r4
   24474:	andeq	r0, r0, r0, lsl r4
   24478:	andeq	r0, r0, r0, lsl r4
   2447c:	andeq	r0, r0, ip, lsr #8
   24480:	andeq	r0, r0, r0, lsl r4
   24484:	andeq	r0, r0, r0, lsl r4
   24488:	andeq	r0, r0, r0, lsl r4
   2448c:	andeq	r0, r0, ip, lsr #8
   24490:	andeq	r0, r0, ip, lsr #8
   24494:	andeq	r0, r0, r0, lsl r4
   24498:	andeq	r0, r0, r0, lsl r4
   2449c:	andeq	r0, r0, r0, lsl r4
   244a0:	andeq	r0, r0, r0, lsl r4
   244a4:	andeq	r0, r0, r0, lsl r4
   244a8:	andeq	r0, r0, r0, lsl r4
   244ac:	andeq	r0, r0, r0, lsl r4
   244b0:	andeq	r0, r0, r0, lsl r4
   244b4:	andeq	r0, r0, r0, lsl r4
   244b8:	andeq	r0, r0, r0, lsl r4
   244bc:	andeq	r0, r0, r0, lsl r4
   244c0:	andeq	r0, r0, r0, lsl r4
   244c4:	andeq	r0, r0, r0, lsl r4
   244c8:	andeq	r0, r0, r0, lsl r4
   244cc:	andeq	r0, r0, r0, lsl r4
   244d0:	andeq	r0, r0, r0, lsl r4
   244d4:	andeq	r0, r0, r0, lsl r4
   244d8:	andeq	r0, r0, r0, lsl r4
   244dc:	andeq	r0, r0, r0, lsl r4
   244e0:	andeq	r0, r0, r0, lsl r4
   244e4:	andeq	r0, r0, r0, lsl r4
   244e8:	andeq	r0, r0, r0, lsl r4
   244ec:	andeq	r0, r0, r0, lsl r4
   244f0:	andeq	r0, r0, r0, lsl r4
   244f4:	andeq	r0, r0, r0, lsl r4
   244f8:	andeq	r0, r0, r0, lsl r4
   244fc:	andeq	r0, r0, r0, lsl r4
   24500:	andeq	r0, r0, r0, lsl r4
   24504:	andeq	r0, r0, r0, lsl r4
   24508:	andeq	r0, r0, r0, lsl r4
   2450c:	andeq	r0, r0, r0, lsl r4
   24510:	andeq	r0, r0, r0, lsl r4
   24514:	andeq	r0, r0, ip, lsr #8
   24518:	andeq	r0, r0, r0, lsl r4
   2451c:	andeq	r0, r0, r0, lsl r4
   24520:	andeq	r0, r0, r0, lsl r4
   24524:	andeq	r0, r0, r0, lsl r4
   24528:	andeq	r0, r0, r0, lsl r4
   2452c:	andeq	r0, r0, r0, lsl r4
   24530:	andeq	r0, r0, r0, lsl r4
   24534:	andeq	r0, r0, r0, lsl r4
   24538:	andeq	r0, r0, r0, lsl r4
   2453c:	andeq	r0, r0, r0, lsl r4
   24540:	andeq	r0, r0, r0, lsl r4
   24544:	andeq	r0, r0, r0, lsl r4
   24548:	andeq	r0, r0, r0, lsl r4
   2454c:	andeq	r0, r0, r0, lsl r4
   24550:	andeq	r0, r0, r0, lsl r4
   24554:	andeq	r0, r0, r0, lsl r4
   24558:	andeq	r0, r0, r0, lsl r4
   2455c:	andeq	r0, r0, r0, lsl r4
   24560:	andeq	r0, r0, r0, lsl r4
   24564:	andeq	r0, r0, r0, lsl r4
   24568:	andeq	r0, r0, r0, lsl r4
   2456c:	andeq	r0, r0, r0, lsl r4
   24570:	andeq	r0, r0, r0, lsl r4
   24574:	andeq	r0, r0, r0, lsl r4
   24578:	andeq	r0, r0, r0, lsl r4
   2457c:	andeq	r0, r0, r0, lsl r4
   24580:	andeq	r0, r0, r0, lsl r4
   24584:	andeq	r0, r0, r0, lsl r4
   24588:	andeq	r0, r0, r0, lsl r4
   2458c:	andeq	r0, r0, r0, lsl r4
   24590:	andeq	r0, r0, r0, lsl r4
   24594:	andeq	r0, r0, r0, lsl r4
   24598:	andeq	r0, r0, r0, lsl r4
   2459c:	andeq	r0, r0, r0, lsl r4
   245a0:	andeq	r0, r0, r0, lsl r4
   245a4:	andeq	r0, r0, r0, lsl r4
   245a8:	andeq	r0, r0, r0, lsl r4
   245ac:	andeq	r0, r0, r0, lsl r4
   245b0:	andeq	r0, r0, r0, lsl r4
   245b4:	andeq	r0, r0, r0, lsl r4
   245b8:	andeq	r0, r0, r0, lsl r4
   245bc:	andeq	r0, r0, r0, lsl r4
   245c0:	andeq	r0, r0, r0, lsl r4
   245c4:	andeq	r0, r0, r0, lsl r4
   245c8:	andeq	r0, r0, r0, lsl r4
   245cc:	andeq	r0, r0, r0, lsl r4
   245d0:	andeq	r0, r0, r0, lsl r4
   245d4:	andeq	r0, r0, r0, lsl r4
   245d8:	andeq	r0, r0, r0, lsl r4
   245dc:	andeq	r0, r0, r0, lsl r4
   245e0:	andeq	r0, r0, r0, lsl r4
   245e4:	andeq	r0, r0, r0, lsl r4
   245e8:	andeq	r0, r0, r0, lsl r4
   245ec:	andeq	r0, r0, r0, lsl r4
   245f0:	andeq	r0, r0, r0, lsl r4
   245f4:	andeq	r0, r0, r0, lsl r4
   245f8:	andeq	r0, r0, r0, lsl r4
   245fc:	andeq	r0, r0, r0, lsl r4
   24600:	andeq	r0, r0, r0, lsl r4
   24604:	andeq	r0, r0, r4, asr #3
   24608:	andeq	r0, r0, ip, lsr #8
   2460c:	andeq	r0, r0, ip, lsr #8
   24610:	andeq	r0, r0, r8, lsl #4
   24614:	andeq	r0, r0, r0, lsl r4
   24618:	andeq	r0, r0, ip, lsr #8
   2461c:	andeq	r0, r0, ip, lsr #8
   24620:	andeq	r0, r0, ip, lsr #8
   24624:	andeq	r0, r0, r0, lsl r4
   24628:	andeq	r0, r0, r0, lsl r4
   2462c:	andeq	r0, r0, ip, lsr #8
   24630:	mov	r0, r4
   24634:	mov	r1, #125	; 0x7d
   24638:	mov	r2, #1
   2463c:	mov	r3, #64	; 0x40
   24640:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   24644:	cmp	r0, #0
   24648:	beq	24898 <myhtml_insertion_mode_in_table@@Base+0x6bc>
   2464c:	mov	r1, r0
   24650:	mov	r0, r4
   24654:	mov	r2, #0
   24658:	mov	r5, #0
   2465c:	bl	111a8 <myhtml_tree_open_elements_pop_until_by_node@plt>
   24660:	mov	r0, r4
   24664:	bl	115d4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   24668:	mov	r0, r5
   2466c:	sub	sp, fp, #16
   24670:	pop	{r4, r5, r6, sl, fp, pc}
   24674:	mov	r0, r4
   24678:	mov	r1, r6
   2467c:	sub	sp, fp, #16
   24680:	pop	{r4, r5, r6, sl, fp, lr}
   24684:	b	2325c <myhtml_insertion_mode_in_head@@Base>
   24688:	mov	r0, r4
   2468c:	bl	11c04 <myhtml_tree_clear_stack_back_table_context@plt>
   24690:	mov	r0, r4
   24694:	mov	r1, #126	; 0x7e
   24698:	mov	r2, #1
   2469c:	mov	r5, #1
   246a0:	bl	11784 <myhtml_tree_node_insert@plt>
   246a4:	mov	r0, #12
   246a8:	str	r0, [r4, #168]	; 0xa8
   246ac:	mov	r0, r5
   246b0:	sub	sp, fp, #16
   246b4:	pop	{r4, r5, r6, sl, fp, pc}
   246b8:	cmp	r0, #251	; 0xfb
   246bc:	beq	247fc <myhtml_insertion_mode_in_table@@Base+0x620>
   246c0:	b	2487c <myhtml_insertion_mode_in_table@@Base+0x6a0>
   246c4:	mov	r0, r4
   246c8:	bl	11514 <myhtml_tree_current_node@plt>
   246cc:	ldr	r1, [r0, #4]
   246d0:	sub	r1, r1, #125	; 0x7d
   246d4:	cmp	r1, #10
   246d8:	bhi	2487c <myhtml_insertion_mode_in_table@@Base+0x6a0>
   246dc:	mov	r2, #1
   246e0:	movw	r3, #1187	; 0x4a3
   246e4:	tst	r3, r2, lsl r1
   246e8:	beq	2487c <myhtml_insertion_mode_in_table@@Base+0x6a0>
   246ec:	ldr	r0, [r0, #8]
   246f0:	cmp	r0, #1
   246f4:	bne	2487c <myhtml_insertion_mode_in_table@@Base+0x6a0>
   246f8:	ldr	r0, [r4, #136]	; 0x88
   246fc:	bl	11c10 <myhtml_tree_token_list_clean@plt>
   24700:	ldr	r0, [r4, #168]	; 0xa8
   24704:	mov	r1, #9
   24708:	mov	r5, #1
   2470c:	str	r1, [r4, #168]	; 0xa8
   24710:	str	r0, [r4, #172]	; 0xac
   24714:	mov	r0, r5
   24718:	sub	sp, fp, #16
   2471c:	pop	{r4, r5, r6, sl, fp, pc}
   24720:	mov	r0, r4
   24724:	mov	r1, r6
   24728:	mov	r2, #0
   2472c:	mov	r5, #0
   24730:	bl	11268 <myhtml_tree_node_insert_comment@plt>
   24734:	mov	r0, r5
   24738:	sub	sp, fp, #16
   2473c:	pop	{r4, r5, r6, sl, fp, pc}
   24740:	mov	r0, r4
   24744:	bl	11c04 <myhtml_tree_clear_stack_back_table_context@plt>
   24748:	mov	r0, r4
   2474c:	mov	r1, r6
   24750:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   24754:	ldr	r0, [r4]
   24758:	ldr	r1, [r0, #36]	; 0x24
   2475c:	mov	r0, r4
   24760:	bl	1116c <myhtml_tree_active_formatting_append@plt>
   24764:	mov	r0, #10
   24768:	str	r0, [r4, #168]	; 0xa8
   2476c:	mov	r0, r5
   24770:	sub	sp, fp, #16
   24774:	pop	{r4, r5, r6, sl, fp, pc}
   24778:	mov	r0, r4
   2477c:	bl	11c04 <myhtml_tree_clear_stack_back_table_context@plt>
   24780:	mov	r0, r4
   24784:	mov	r1, #32
   24788:	mov	r2, #1
   2478c:	mov	r5, #1
   24790:	bl	11784 <myhtml_tree_node_insert@plt>
   24794:	b	247ac <myhtml_insertion_mode_in_table@@Base+0x5d0>
   24798:	mov	r0, r4
   2479c:	bl	11c04 <myhtml_tree_clear_stack_back_table_context@plt>
   247a0:	mov	r0, r4
   247a4:	mov	r1, r6
   247a8:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   247ac:	mov	r0, #11
   247b0:	str	r0, [r4, #168]	; 0xa8
   247b4:	mov	r0, r5
   247b8:	sub	sp, fp, #16
   247bc:	pop	{r4, r5, r6, sl, fp, pc}
   247c0:	mov	r0, r4
   247c4:	mov	r1, #128	; 0x80
   247c8:	mov	r2, #1
   247cc:	mov	r3, #0
   247d0:	mov	r5, #0
   247d4:	bl	11664 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   247d8:	ldr	r1, [r4, #104]	; 0x68
   247dc:	orrs	r0, r0, r1
   247e0:	bne	24898 <myhtml_insertion_mode_in_table@@Base+0x6bc>
   247e4:	mov	r0, r4
   247e8:	mov	r1, r6
   247ec:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   247f0:	str	r0, [r4, #104]	; 0x68
   247f4:	mov	r0, r4
   247f8:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   247fc:	mov	r0, r4
   24800:	mov	r1, r6
   24804:	sub	sp, fp, #16
   24808:	pop	{r4, r5, r6, sl, fp, lr}
   2480c:	b	21a90 <myhtml_insertion_mode_in_body@@Base>
   24810:	ldr	r0, [r4, #8]
   24814:	mov	r1, r6
   24818:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   2481c:	ldr	r0, [r4, #8]
   24820:	ldr	r2, [pc, #196]	; 248ec <myhtml_insertion_mode_in_table@@Base+0x710>
   24824:	mov	r1, #6
   24828:	mov	r3, #4
   2482c:	str	r1, [sp, #4]
   24830:	mov	r1, r6
   24834:	add	r2, pc, r2
   24838:	str	r2, [sp]
   2483c:	ldr	r2, [pc, #172]	; 248f0 <myhtml_insertion_mode_in_table@@Base+0x714>
   24840:	add	r2, pc, r2
   24844:	bl	10ea8 <myhtml_token_attr_match_case@plt>
   24848:	cmp	r0, #0
   2484c:	beq	2487c <myhtml_insertion_mode_in_table@@Base+0x6a0>
   24850:	mov	r0, r4
   24854:	mov	r1, r6
   24858:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   2485c:	mov	r0, r4
   24860:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   24864:	ldr	r0, [r6, #48]	; 0x30
   24868:	orr	r0, r0, #2
   2486c:	str	r0, [r6, #48]	; 0x30
   24870:	mov	r0, r5
   24874:	sub	sp, fp, #16
   24878:	pop	{r4, r5, r6, sl, fp, pc}
   2487c:	mov	r0, #1
   24880:	mov	r1, r6
   24884:	strb	r0, [r4, #188]	; 0xbc
   24888:	mov	r0, r4
   2488c:	bl	1152c <myhtml_insertion_mode_in_body@plt>
   24890:	mov	r5, #0
   24894:	strb	r5, [r4, #188]	; 0xbc
   24898:	mov	r0, r5
   2489c:	sub	sp, fp, #16
   248a0:	pop	{r4, r5, r6, sl, fp, pc}
   248a4:	mov	r0, r4
   248a8:	mov	r1, #125	; 0x7d
   248ac:	mov	r2, #1
   248b0:	mov	r3, #64	; 0x40
   248b4:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   248b8:	cmp	r0, #0
   248bc:	beq	24898 <myhtml_insertion_mode_in_table@@Base+0x6bc>
   248c0:	mov	r0, r4
   248c4:	mov	r1, #125	; 0x7d
   248c8:	mov	r2, #1
   248cc:	mov	r3, #0
   248d0:	bl	11760 <myhtml_tree_open_elements_pop_until@plt>
   248d4:	mov	r0, r4
   248d8:	bl	115d4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   248dc:	mov	r5, #1
   248e0:	mov	r0, r5
   248e4:	sub	sp, fp, #16
   248e8:	pop	{r4, r5, r6, sl, fp, pc}
   248ec:	andeq	sp, sp, r3, lsr pc
   248f0:	andeq	sl, r1, r3, asr #25

000248f4 <myhtml_insertion_mode_in_table_text@@Base>:
   248f4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   248f8:	add	fp, sp, #24
   248fc:	mov	r4, r0
   24900:	ldr	r0, [r1]
   24904:	cmp	r0, #1
   24908:	bne	2492c <myhtml_insertion_mode_in_table_text@@Base+0x38>
   2490c:	ldr	r0, [r1, #48]	; 0x30
   24910:	mov	r5, r1
   24914:	tst	r0, #2048	; 0x800
   24918:	bne	24988 <myhtml_insertion_mode_in_table_text@@Base+0x94>
   2491c:	ldr	r0, [r4, #136]	; 0x88
   24920:	mov	r1, r5
   24924:	bl	11b50 <myhtml_tree_token_list_append@plt>
   24928:	b	24a78 <myhtml_insertion_mode_in_table_text@@Base+0x184>
   2492c:	ldr	r5, [r4, #136]	; 0x88
   24930:	ldr	r0, [r5, #4]
   24934:	cmp	r0, #0
   24938:	beq	24ad8 <myhtml_insertion_mode_in_table_text@@Base+0x1e4>
   2493c:	ldr	r1, [r5]
   24940:	mov	r2, #0
   24944:	ldr	r3, [r1, r2, lsl #2]
   24948:	ldr	r3, [r3, #48]	; 0x30
   2494c:	tst	r3, #8
   24950:	beq	24a84 <myhtml_insertion_mode_in_table_text@@Base+0x190>
   24954:	add	r2, r2, #1
   24958:	cmp	r2, r0
   2495c:	bcc	24944 <myhtml_insertion_mode_in_table_text@@Base+0x50>
   24960:	mov	r6, #0
   24964:	ldr	r0, [r5]
   24968:	ldr	r1, [r0, r6, lsl #2]
   2496c:	mov	r0, r4
   24970:	bl	11058 <myhtml_tree_node_insert_text@plt>
   24974:	ldr	r0, [r5, #4]
   24978:	add	r6, r6, #1
   2497c:	cmp	r6, r0
   24980:	bcc	24964 <myhtml_insertion_mode_in_table_text@@Base+0x70>
   24984:	b	24ad8 <myhtml_insertion_mode_in_table_text@@Base+0x1e4>
   24988:	ldr	r0, [r4, #8]
   2498c:	mov	r1, r5
   24990:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   24994:	ldr	r6, [r5, #12]
   24998:	cmp	r6, #0
   2499c:	beq	24a78 <myhtml_insertion_mode_in_table_text@@Base+0x184>
   249a0:	mov	r0, #0
   249a4:	mov	r8, #0
   249a8:	ldr	r3, [r5, #4]
   249ac:	ldrb	r1, [r3, r0]
   249b0:	cmp	r1, #0
   249b4:	beq	249c8 <myhtml_insertion_mode_in_table_text@@Base+0xd4>
   249b8:	add	r0, r0, #1
   249bc:	cmp	r0, r6
   249c0:	bcc	249a8 <myhtml_insertion_mode_in_table_text@@Base+0xb4>
   249c4:	b	24a54 <myhtml_insertion_mode_in_table_text@@Base+0x160>
   249c8:	cmp	r0, r6
   249cc:	mov	r2, r0
   249d0:	bcs	249f4 <myhtml_insertion_mode_in_table_text@@Base+0x100>
   249d4:	add	r1, r0, #1
   249d8:	mov	r2, r1
   249dc:	cmp	r1, r6
   249e0:	bcs	249f4 <myhtml_insertion_mode_in_table_text@@Base+0x100>
   249e4:	ldrb	r7, [r3, r2]
   249e8:	add	r1, r2, #1
   249ec:	cmp	r7, #0
   249f0:	beq	249d8 <myhtml_insertion_mode_in_table_text@@Base+0xe4>
   249f4:	ldr	r7, [r5, #12]
   249f8:	sub	r1, r0, r2
   249fc:	cmp	r2, r6
   24a00:	add	r1, r1, r7
   24a04:	mov	r7, r2
   24a08:	str	r1, [r5, #12]
   24a0c:	bcs	24a2c <myhtml_insertion_mode_in_table_text@@Base+0x138>
   24a10:	mov	r7, r2
   24a14:	ldrb	r1, [r3, r7]
   24a18:	cmp	r1, #0
   24a1c:	beq	24a2c <myhtml_insertion_mode_in_table_text@@Base+0x138>
   24a20:	add	r7, r7, #1
   24a24:	cmp	r7, r6
   24a28:	bcc	24a14 <myhtml_insertion_mode_in_table_text@@Base+0x120>
   24a2c:	sub	r0, r0, r8
   24a30:	add	r1, r3, r2
   24a34:	sub	r2, r7, r2
   24a38:	add	r0, r3, r0
   24a3c:	bl	10f98 <memmove@plt>
   24a40:	add	r8, r8, #1
   24a44:	sub	r0, r7, #1
   24a48:	add	r0, r0, #1
   24a4c:	cmp	r0, r6
   24a50:	bcc	249a8 <myhtml_insertion_mode_in_table_text@@Base+0xb4>
   24a54:	ldr	r0, [r5, #12]
   24a58:	mov	r6, #0
   24a5c:	cmp	r0, #0
   24a60:	beq	24ae4 <myhtml_insertion_mode_in_table_text@@Base+0x1f0>
   24a64:	ldr	r0, [r4, #136]	; 0x88
   24a68:	mov	r1, r5
   24a6c:	bl	11b50 <myhtml_tree_token_list_append@plt>
   24a70:	mov	r0, r6
   24a74:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   24a78:	mov	r6, #0
   24a7c:	mov	r0, r6
   24a80:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   24a84:	mov	r8, #1
   24a88:	mov	r0, r4
   24a8c:	strb	r8, [r4, #188]	; 0xbc
   24a90:	ldr	r1, [r1]
   24a94:	bl	1152c <myhtml_insertion_mode_in_body@plt>
   24a98:	mov	r7, #0
   24a9c:	strb	r7, [r4, #188]	; 0xbc
   24aa0:	ldr	r0, [r5, #4]
   24aa4:	cmp	r0, #2
   24aa8:	bcc	24ad8 <myhtml_insertion_mode_in_table_text@@Base+0x1e4>
   24aac:	mov	r6, #1
   24ab0:	ldr	r0, [r5]
   24ab4:	strb	r8, [r4, #188]	; 0xbc
   24ab8:	ldr	r1, [r0, r6, lsl #2]
   24abc:	mov	r0, r4
   24ac0:	bl	1152c <myhtml_insertion_mode_in_body@plt>
   24ac4:	strb	r7, [r4, #188]	; 0xbc
   24ac8:	add	r6, r6, #1
   24acc:	ldr	r0, [r5, #4]
   24ad0:	cmp	r6, r0
   24ad4:	bcc	24ab0 <myhtml_insertion_mode_in_table_text@@Base+0x1bc>
   24ad8:	ldr	r0, [r4, #172]	; 0xac
   24adc:	mov	r6, #1
   24ae0:	str	r0, [r4, #168]	; 0xa8
   24ae4:	mov	r0, r6
   24ae8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00024aec <myhtml_insertion_mode_in_caption@@Base>:
   24aec:	push	{r4, r5, fp, lr}
   24af0:	add	fp, sp, #8
   24af4:	mov	r4, r0
   24af8:	ldr	r0, [r1]
   24afc:	ldr	r2, [r1, #48]	; 0x30
   24b00:	tst	r2, #1
   24b04:	bne	24bac <myhtml_insertion_mode_in_caption@@Base+0xc0>
   24b08:	sub	r2, r0, #126	; 0x7e
   24b0c:	cmp	r2, #9
   24b10:	bhi	24b24 <myhtml_insertion_mode_in_caption@@Base+0x38>
   24b14:	mov	r3, #1
   24b18:	movw	r5, #627	; 0x273
   24b1c:	tst	r5, r3, lsl r2
   24b20:	bne	24b40 <myhtml_insertion_mode_in_caption@@Base+0x54>
   24b24:	sub	r0, r0, #27
   24b28:	cmp	r0, #5
   24b2c:	bhi	24dbc <myhtml_insertion_mode_in_caption@@Base+0x2d0>
   24b30:	mov	r2, #1
   24b34:	mov	r3, #49	; 0x31
   24b38:	tst	r3, r2, lsl r0
   24b3c:	beq	24dbc <myhtml_insertion_mode_in_caption@@Base+0x2d0>
   24b40:	mov	r0, r4
   24b44:	mov	r1, #27
   24b48:	mov	r2, #1
   24b4c:	mov	r3, #64	; 0x40
   24b50:	mov	r5, #1
   24b54:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   24b58:	cmp	r0, #0
   24b5c:	beq	24db0 <myhtml_insertion_mode_in_caption@@Base+0x2c4>
   24b60:	mov	r0, r4
   24b64:	mov	r1, #0
   24b68:	mov	r2, #0
   24b6c:	bl	115a4 <myhtml_tree_generate_implied_end_tags@plt>
   24b70:	mov	r0, r4
   24b74:	bl	11514 <myhtml_tree_current_node@plt>
   24b78:	mov	r1, #27
   24b7c:	bl	11868 <myhtml_is_html_node@plt>
   24b80:	mov	r0, r4
   24b84:	mov	r1, #27
   24b88:	mov	r2, #1
   24b8c:	mov	r3, #0
   24b90:	bl	11760 <myhtml_tree_open_elements_pop_until@plt>
   24b94:	mov	r0, r4
   24b98:	bl	11afc <myhtml_tree_active_formatting_up_to_last_marker@plt>
   24b9c:	mov	r0, #8
   24ba0:	str	r0, [r4, #168]	; 0xa8
   24ba4:	mov	r0, r5
   24ba8:	pop	{r4, r5, fp, pc}
   24bac:	sub	r0, r0, #23
   24bb0:	cmp	r0, #112	; 0x70
   24bb4:	bhi	24dbc <myhtml_insertion_mode_in_caption@@Base+0x2d0>
   24bb8:	add	r2, pc, #8
   24bbc:	mov	r5, #0
   24bc0:	ldr	r0, [r2, r0, lsl #2]
   24bc4:	add	pc, r2, r0
   24bc8:	andeq	r0, r0, ip, ror #3
   24bcc:	strdeq	r0, [r0], -r4
   24bd0:	strdeq	r0, [r0], -r4
   24bd4:	strdeq	r0, [r0], -r4
   24bd8:	andeq	r0, r0, r4, asr #3
   24bdc:	strdeq	r0, [r0], -r4
   24be0:	strdeq	r0, [r0], -r4
   24be4:	strdeq	r0, [r0], -r4
   24be8:	andeq	r0, r0, ip, ror #3
   24bec:	andeq	r0, r0, ip, ror #3
   24bf0:	strdeq	r0, [r0], -r4
   24bf4:	strdeq	r0, [r0], -r4
   24bf8:	strdeq	r0, [r0], -r4
   24bfc:	strdeq	r0, [r0], -r4
   24c00:	strdeq	r0, [r0], -r4
   24c04:	strdeq	r0, [r0], -r4
   24c08:	strdeq	r0, [r0], -r4
   24c0c:	strdeq	r0, [r0], -r4
   24c10:	strdeq	r0, [r0], -r4
   24c14:	strdeq	r0, [r0], -r4
   24c18:	strdeq	r0, [r0], -r4
   24c1c:	strdeq	r0, [r0], -r4
   24c20:	strdeq	r0, [r0], -r4
   24c24:	strdeq	r0, [r0], -r4
   24c28:	strdeq	r0, [r0], -r4
   24c2c:	strdeq	r0, [r0], -r4
   24c30:	strdeq	r0, [r0], -r4
   24c34:	strdeq	r0, [r0], -r4
   24c38:	strdeq	r0, [r0], -r4
   24c3c:	strdeq	r0, [r0], -r4
   24c40:	strdeq	r0, [r0], -r4
   24c44:	strdeq	r0, [r0], -r4
   24c48:	strdeq	r0, [r0], -r4
   24c4c:	strdeq	r0, [r0], -r4
   24c50:	strdeq	r0, [r0], -r4
   24c54:	strdeq	r0, [r0], -r4
   24c58:	strdeq	r0, [r0], -r4
   24c5c:	strdeq	r0, [r0], -r4
   24c60:	strdeq	r0, [r0], -r4
   24c64:	strdeq	r0, [r0], -r4
   24c68:	strdeq	r0, [r0], -r4
   24c6c:	strdeq	r0, [r0], -r4
   24c70:	andeq	r0, r0, ip, ror #3
   24c74:	strdeq	r0, [r0], -r4
   24c78:	strdeq	r0, [r0], -r4
   24c7c:	strdeq	r0, [r0], -r4
   24c80:	strdeq	r0, [r0], -r4
   24c84:	strdeq	r0, [r0], -r4
   24c88:	strdeq	r0, [r0], -r4
   24c8c:	strdeq	r0, [r0], -r4
   24c90:	strdeq	r0, [r0], -r4
   24c94:	strdeq	r0, [r0], -r4
   24c98:	strdeq	r0, [r0], -r4
   24c9c:	strdeq	r0, [r0], -r4
   24ca0:	strdeq	r0, [r0], -r4
   24ca4:	strdeq	r0, [r0], -r4
   24ca8:	strdeq	r0, [r0], -r4
   24cac:	strdeq	r0, [r0], -r4
   24cb0:	strdeq	r0, [r0], -r4
   24cb4:	strdeq	r0, [r0], -r4
   24cb8:	strdeq	r0, [r0], -r4
   24cbc:	strdeq	r0, [r0], -r4
   24cc0:	strdeq	r0, [r0], -r4
   24cc4:	strdeq	r0, [r0], -r4
   24cc8:	strdeq	r0, [r0], -r4
   24ccc:	strdeq	r0, [r0], -r4
   24cd0:	strdeq	r0, [r0], -r4
   24cd4:	strdeq	r0, [r0], -r4
   24cd8:	strdeq	r0, [r0], -r4
   24cdc:	strdeq	r0, [r0], -r4
   24ce0:	strdeq	r0, [r0], -r4
   24ce4:	strdeq	r0, [r0], -r4
   24ce8:	strdeq	r0, [r0], -r4
   24cec:	strdeq	r0, [r0], -r4
   24cf0:	strdeq	r0, [r0], -r4
   24cf4:	strdeq	r0, [r0], -r4
   24cf8:	strdeq	r0, [r0], -r4
   24cfc:	strdeq	r0, [r0], -r4
   24d00:	strdeq	r0, [r0], -r4
   24d04:	strdeq	r0, [r0], -r4
   24d08:	strdeq	r0, [r0], -r4
   24d0c:	strdeq	r0, [r0], -r4
   24d10:	strdeq	r0, [r0], -r4
   24d14:	strdeq	r0, [r0], -r4
   24d18:	strdeq	r0, [r0], -r4
   24d1c:	strdeq	r0, [r0], -r4
   24d20:	strdeq	r0, [r0], -r4
   24d24:	strdeq	r0, [r0], -r4
   24d28:	strdeq	r0, [r0], -r4
   24d2c:	strdeq	r0, [r0], -r4
   24d30:	strdeq	r0, [r0], -r4
   24d34:	strdeq	r0, [r0], -r4
   24d38:	strdeq	r0, [r0], -r4
   24d3c:	strdeq	r0, [r0], -r4
   24d40:	strdeq	r0, [r0], -r4
   24d44:	strdeq	r0, [r0], -r4
   24d48:	strdeq	r0, [r0], -r4
   24d4c:	strdeq	r0, [r0], -r4
   24d50:	strdeq	r0, [r0], -r4
   24d54:	strdeq	r0, [r0], -r4
   24d58:	strdeq	r0, [r0], -r4
   24d5c:	strdeq	r0, [r0], -r4
   24d60:	andeq	r0, r0, r0, lsl #4
   24d64:	andeq	r0, r0, ip, ror #3
   24d68:	andeq	r0, r0, ip, ror #3
   24d6c:	strdeq	r0, [r0], -r4
   24d70:	strdeq	r0, [r0], -r4
   24d74:	andeq	r0, r0, ip, ror #3
   24d78:	andeq	r0, r0, ip, ror #3
   24d7c:	andeq	r0, r0, ip, ror #3
   24d80:	strdeq	r0, [r0], -r4
   24d84:	strdeq	r0, [r0], -r4
   24d88:	andeq	r0, r0, ip, ror #3
   24d8c:	mov	r0, r4
   24d90:	mov	r1, #27
   24d94:	mov	r2, #1
   24d98:	mov	r3, #64	; 0x40
   24d9c:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   24da0:	cmp	r0, #0
   24da4:	beq	24db4 <myhtml_insertion_mode_in_caption@@Base+0x2c8>
   24da8:	mov	r5, #0
   24dac:	b	24b60 <myhtml_insertion_mode_in_caption@@Base+0x74>
   24db0:	mov	r5, #0
   24db4:	mov	r0, r5
   24db8:	pop	{r4, r5, fp, pc}
   24dbc:	mov	r0, r4
   24dc0:	pop	{r4, r5, fp, lr}
   24dc4:	b	21a90 <myhtml_insertion_mode_in_body@@Base>
   24dc8:	mov	r0, r4
   24dcc:	mov	r1, #27
   24dd0:	mov	r2, #1
   24dd4:	mov	r3, #64	; 0x40
   24dd8:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   24ddc:	cmp	r0, #0
   24de0:	beq	24db4 <myhtml_insertion_mode_in_caption@@Base+0x2c8>
   24de4:	mov	r0, r4
   24de8:	mov	r1, #0
   24dec:	mov	r2, #0
   24df0:	bl	115a4 <myhtml_tree_generate_implied_end_tags@plt>
   24df4:	mov	r0, r4
   24df8:	bl	11514 <myhtml_tree_current_node@plt>
   24dfc:	mov	r1, #27
   24e00:	bl	11868 <myhtml_is_html_node@plt>
   24e04:	mov	r0, r4
   24e08:	mov	r1, #27
   24e0c:	mov	r2, #1
   24e10:	mov	r3, #0
   24e14:	bl	11760 <myhtml_tree_open_elements_pop_until@plt>
   24e18:	mov	r0, r4
   24e1c:	bl	11afc <myhtml_tree_active_formatting_up_to_last_marker@plt>
   24e20:	mov	r0, #8
   24e24:	mov	r5, #1
   24e28:	str	r0, [r4, #168]	; 0xa8
   24e2c:	mov	r0, r5
   24e30:	pop	{r4, r5, fp, pc}

00024e34 <myhtml_insertion_mode_in_column_group@@Base>:
   24e34:	push	{r4, r5, fp, lr}
   24e38:	add	fp, sp, #8
   24e3c:	mov	r5, r0
   24e40:	ldr	r0, [r1]
   24e44:	ldr	r2, [r1, #48]	; 0x30
   24e48:	mov	r4, #0
   24e4c:	tst	r2, #1
   24e50:	bne	24f1c <myhtml_insertion_mode_in_column_group@@Base+0xe8>
   24e54:	cmp	r0, #64	; 0x40
   24e58:	bgt	24f68 <myhtml_insertion_mode_in_column_group@@Base+0x134>
   24e5c:	sub	r0, r0, #1
   24e60:	cmp	r0, #30
   24e64:	bhi	24f8c <myhtml_insertion_mode_in_column_group@@Base+0x158>
   24e68:	add	r2, pc, #4
   24e6c:	ldr	r0, [r2, r0, lsl #2]
   24e70:	add	pc, r2, r0
   24e74:	andeq	r0, r0, ip, ror r0
   24e78:	andeq	r0, r0, r8, ror #2
   24e7c:	andeq	r0, r0, r4, asr r1
   24e80:	andeq	r0, r0, r8, lsl r1
   24e84:	andeq	r0, r0, r8, lsl r1
   24e88:	andeq	r0, r0, r8, lsl r1
   24e8c:	andeq	r0, r0, r8, lsl r1
   24e90:	andeq	r0, r0, r8, lsl r1
   24e94:	andeq	r0, r0, r8, lsl r1
   24e98:	andeq	r0, r0, r8, lsl r1
   24e9c:	andeq	r0, r0, r8, lsl r1
   24ea0:	andeq	r0, r0, r8, lsl r1
   24ea4:	andeq	r0, r0, r8, lsl r1
   24ea8:	andeq	r0, r0, r8, lsl r1
   24eac:	andeq	r0, r0, r8, lsl r1
   24eb0:	andeq	r0, r0, r8, lsl r1
   24eb4:	andeq	r0, r0, r8, lsl r1
   24eb8:	andeq	r0, r0, r8, lsl r1
   24ebc:	andeq	r0, r0, r8, lsl r1
   24ec0:	andeq	r0, r0, r8, lsl r1
   24ec4:	andeq	r0, r0, r8, lsl r1
   24ec8:	andeq	r0, r0, r8, lsl r1
   24ecc:	andeq	r0, r0, r8, lsl r1
   24ed0:	andeq	r0, r0, r8, lsl r1
   24ed4:	andeq	r0, r0, r8, lsl r1
   24ed8:	andeq	r0, r0, r8, lsl r1
   24edc:	andeq	r0, r0, r8, lsl r1
   24ee0:	andeq	r0, r0, r8, lsl r1
   24ee4:	andeq	r0, r0, r8, lsl r1
   24ee8:	andeq	r0, r0, r8, lsl r1
   24eec:	andeq	r0, r0, r0, lsl #3
   24ef0:	ldr	r0, [r1, #48]	; 0x30
   24ef4:	tst	r0, #8
   24ef8:	bne	2500c <myhtml_insertion_mode_in_column_group@@Base+0x1d8>
   24efc:	mov	r0, r5
   24f00:	bl	10fe0 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   24f04:	cmp	r0, #0
   24f08:	beq	24f8c <myhtml_insertion_mode_in_column_group@@Base+0x158>
   24f0c:	mov	r1, r0
   24f10:	mov	r0, r5
   24f14:	bl	11058 <myhtml_tree_node_insert_text@plt>
   24f18:	b	24f8c <myhtml_insertion_mode_in_column_group@@Base+0x158>
   24f1c:	cmp	r0, #31
   24f20:	beq	24fc8 <myhtml_insertion_mode_in_column_group@@Base+0x194>
   24f24:	cmp	r0, #128	; 0x80
   24f28:	beq	24fd0 <myhtml_insertion_mode_in_column_group@@Base+0x19c>
   24f2c:	cmp	r0, #32
   24f30:	bne	24f8c <myhtml_insertion_mode_in_column_group@@Base+0x158>
   24f34:	mov	r0, r5
   24f38:	bl	11514 <myhtml_tree_current_node@plt>
   24f3c:	cmp	r0, #0
   24f40:	beq	24fc8 <myhtml_insertion_mode_in_column_group@@Base+0x194>
   24f44:	mov	r1, #32
   24f48:	bl	11868 <myhtml_is_html_node@plt>
   24f4c:	cmp	r0, #0
   24f50:	beq	24fc8 <myhtml_insertion_mode_in_column_group@@Base+0x194>
   24f54:	mov	r0, r5
   24f58:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   24f5c:	mov	r0, #8
   24f60:	str	r0, [r5, #168]	; 0xa8
   24f64:	b	24fc8 <myhtml_insertion_mode_in_column_group@@Base+0x194>
   24f68:	cmp	r0, #65	; 0x41
   24f6c:	beq	24f80 <myhtml_insertion_mode_in_column_group@@Base+0x14c>
   24f70:	cmp	r0, #128	; 0x80
   24f74:	beq	24fd0 <myhtml_insertion_mode_in_column_group@@Base+0x19c>
   24f78:	cmp	r0, #251	; 0xfb
   24f7c:	bne	24f8c <myhtml_insertion_mode_in_column_group@@Base+0x158>
   24f80:	mov	r0, r5
   24f84:	pop	{r4, r5, fp, lr}
   24f88:	b	21a90 <myhtml_insertion_mode_in_body@@Base>
   24f8c:	mov	r0, r5
   24f90:	bl	11514 <myhtml_tree_current_node@plt>
   24f94:	cmp	r0, #0
   24f98:	beq	24fc8 <myhtml_insertion_mode_in_column_group@@Base+0x194>
   24f9c:	mov	r1, #32
   24fa0:	bl	11868 <myhtml_is_html_node@plt>
   24fa4:	cmp	r0, #0
   24fa8:	beq	24fc8 <myhtml_insertion_mode_in_column_group@@Base+0x194>
   24fac:	mov	r0, r5
   24fb0:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   24fb4:	mov	r0, #8
   24fb8:	mov	r4, #1
   24fbc:	str	r0, [r5, #168]	; 0xa8
   24fc0:	mov	r0, r4
   24fc4:	pop	{r4, r5, fp, pc}
   24fc8:	mov	r0, r4
   24fcc:	pop	{r4, r5, fp, pc}
   24fd0:	mov	r0, r5
   24fd4:	pop	{r4, r5, fp, lr}
   24fd8:	b	2325c <myhtml_insertion_mode_in_head@@Base>
   24fdc:	mov	r0, r5
   24fe0:	mov	r2, #0
   24fe4:	mov	r4, #0
   24fe8:	bl	11268 <myhtml_tree_node_insert_comment@plt>
   24fec:	mov	r0, r4
   24ff0:	pop	{r4, r5, fp, pc}
   24ff4:	mov	r0, r5
   24ff8:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   24ffc:	mov	r0, r5
   25000:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   25004:	mov	r0, r4
   25008:	pop	{r4, r5, fp, pc}
   2500c:	mov	r0, r5
   25010:	bl	11058 <myhtml_tree_node_insert_text@plt>
   25014:	mov	r0, r4
   25018:	pop	{r4, r5, fp, pc}

0002501c <myhtml_insertion_mode_in_table_body@@Base>:
   2501c:	push	{r4, r5, r6, r7, fp, lr}
   25020:	add	fp, sp, #16
   25024:	mov	r6, r1
   25028:	mov	r4, r0
   2502c:	ldr	r1, [r1]
   25030:	ldr	r0, [r6, #48]	; 0x30
   25034:	tst	r0, #1
   25038:	bne	25088 <myhtml_insertion_mode_in_table_body@@Base+0x6c>
   2503c:	sub	r0, r1, #126	; 0x7e
   25040:	cmp	r0, #9
   25044:	bhi	252d0 <myhtml_insertion_mode_in_table_body@@Base+0x2b4>
   25048:	mov	r2, #1
   2504c:	mov	r3, #81	; 0x51
   25050:	tst	r3, r2, lsl r0
   25054:	bne	252ec <myhtml_insertion_mode_in_table_body@@Base+0x2d0>
   25058:	mov	r3, #34	; 0x22
   2505c:	tst	r3, r2, lsl r0
   25060:	beq	252a0 <myhtml_insertion_mode_in_table_body@@Base+0x284>
   25064:	mov	r0, r4
   25068:	bl	11328 <myhtml_tree_clear_stack_back_table_body_context@plt>
   2506c:	mov	r0, r4
   25070:	mov	r1, #135	; 0x87
   25074:	mov	r2, #1
   25078:	mov	r5, #1
   2507c:	bl	11784 <myhtml_tree_node_insert@plt>
   25080:	mov	r0, #13
   25084:	b	25294 <myhtml_insertion_mode_in_table_body@@Base+0x278>
   25088:	sub	r0, r1, #23
   2508c:	cmp	r0, #112	; 0x70
   25090:	bhi	25374 <myhtml_insertion_mode_in_table_body@@Base+0x358>
   25094:	add	r2, pc, #8
   25098:	mov	r5, #0
   2509c:	ldr	r0, [r2, r0, lsl #2]
   250a0:	add	pc, r2, r0
   250a4:	andeq	r0, r0, r8, asr #5
   250a8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   250ac:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   250b0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   250b4:	andeq	r0, r0, r8, asr #5
   250b8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   250bc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   250c0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   250c4:	andeq	r0, r0, r8, asr #5
   250c8:	andeq	r0, r0, r8, asr #5
   250cc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   250d0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   250d4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   250d8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   250dc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   250e0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   250e4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   250e8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   250ec:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   250f0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   250f4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   250f8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   250fc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25100:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25104:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25108:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2510c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25110:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25114:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25118:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2511c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25120:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25124:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25128:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2512c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25130:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25134:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25138:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2513c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25140:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25144:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25148:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2514c:	andeq	r0, r0, r8, asr #5
   25150:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25154:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25158:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2515c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25160:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25164:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25168:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2516c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25170:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25174:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25178:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2517c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25180:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25184:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25188:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2518c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25190:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25194:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25198:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2519c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   251a0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   251a4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   251a8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   251ac:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   251b0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   251b4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   251b8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   251bc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   251c0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   251c4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   251c8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   251cc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   251d0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   251d4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   251d8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   251dc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   251e0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   251e4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   251e8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   251ec:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   251f0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   251f4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   251f8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   251fc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25200:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25204:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25208:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2520c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25210:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25214:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25218:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2521c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25220:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25224:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25228:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2522c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25230:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25234:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25238:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2523c:	andeq	r0, r0, r0, ror #5
   25240:	andeq	r0, r0, r4, asr #3
   25244:	andeq	r0, r0, r8, asr #5
   25248:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2524c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25250:	andeq	r0, r0, r4, asr #3
   25254:	andeq	r0, r0, r8, asr #5
   25258:	andeq	r0, r0, r4, asr #3
   2525c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25260:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25264:	andeq	r0, r0, r8, asr #5
   25268:	mov	r0, r4
   2526c:	mov	r2, #1
   25270:	mov	r3, #64	; 0x40
   25274:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   25278:	cmp	r0, #0
   2527c:	beq	2536c <myhtml_insertion_mode_in_table_body@@Base+0x350>
   25280:	mov	r0, r4
   25284:	bl	11328 <myhtml_tree_clear_stack_back_table_body_context@plt>
   25288:	mov	r0, r4
   2528c:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   25290:	mov	r0, #8
   25294:	str	r0, [r4, #168]	; 0xa8
   25298:	mov	r0, r5
   2529c:	pop	{r4, r5, r6, r7, fp, pc}
   252a0:	cmp	r0, #9
   252a4:	bne	252d0 <myhtml_insertion_mode_in_table_body@@Base+0x2b4>
   252a8:	mov	r0, r4
   252ac:	bl	11328 <myhtml_tree_clear_stack_back_table_body_context@plt>
   252b0:	mov	r0, r4
   252b4:	mov	r1, r6
   252b8:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   252bc:	mov	r0, #13
   252c0:	mov	r5, #0
   252c4:	str	r0, [r4, #168]	; 0xa8
   252c8:	mov	r0, r5
   252cc:	pop	{r4, r5, r6, r7, fp, pc}
   252d0:	sub	r0, r1, #27
   252d4:	cmp	r0, #5
   252d8:	bhi	25374 <myhtml_insertion_mode_in_table_body@@Base+0x358>
   252dc:	mov	r1, #1
   252e0:	mov	r2, #49	; 0x31
   252e4:	tst	r2, r1, lsl r0
   252e8:	beq	25374 <myhtml_insertion_mode_in_table_body@@Base+0x358>
   252ec:	mov	r0, r4
   252f0:	mov	r1, #126	; 0x7e
   252f4:	mov	r2, #1
   252f8:	mov	r3, #64	; 0x40
   252fc:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   25300:	mov	r6, r0
   25304:	mov	r0, r4
   25308:	mov	r1, #130	; 0x82
   2530c:	mov	r2, #1
   25310:	mov	r3, #64	; 0x40
   25314:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   25318:	mov	r5, r0
   2531c:	mov	r0, r4
   25320:	mov	r1, #132	; 0x84
   25324:	mov	r2, #1
   25328:	mov	r3, #64	; 0x40
   2532c:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   25330:	cmp	r6, #0
   25334:	cmpeq	r5, #0
   25338:	beq	25360 <myhtml_insertion_mode_in_table_body@@Base+0x344>
   2533c:	mov	r0, r4
   25340:	bl	11328 <myhtml_tree_clear_stack_back_table_body_context@plt>
   25344:	mov	r0, r4
   25348:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   2534c:	mov	r0, #8
   25350:	mov	r5, #1
   25354:	str	r0, [r4, #168]	; 0xa8
   25358:	mov	r0, r5
   2535c:	pop	{r4, r5, r6, r7, fp, pc}
   25360:	mov	r5, #0
   25364:	cmp	r0, #0
   25368:	bne	2533c <myhtml_insertion_mode_in_table_body@@Base+0x320>
   2536c:	mov	r0, r5
   25370:	pop	{r4, r5, r6, r7, fp, pc}
   25374:	mov	r0, r4
   25378:	mov	r1, r6
   2537c:	pop	{r4, r5, r6, r7, fp, lr}
   25380:	b	241dc <myhtml_insertion_mode_in_table@@Base>
   25384:	mov	r0, r4
   25388:	mov	r1, #126	; 0x7e
   2538c:	mov	r2, #1
   25390:	mov	r3, #64	; 0x40
   25394:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   25398:	mov	r7, r0
   2539c:	mov	r0, r4
   253a0:	mov	r1, #130	; 0x82
   253a4:	mov	r2, #1
   253a8:	mov	r3, #64	; 0x40
   253ac:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   253b0:	mov	r6, r0
   253b4:	mov	r0, r4
   253b8:	mov	r1, #132	; 0x84
   253bc:	mov	r2, #1
   253c0:	mov	r3, #64	; 0x40
   253c4:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   253c8:	cmp	r7, #0
   253cc:	cmpeq	r6, #0
   253d0:	bne	2533c <myhtml_insertion_mode_in_table_body@@Base+0x320>
   253d4:	b	25364 <myhtml_insertion_mode_in_table_body@@Base+0x348>

000253d8 <myhtml_insertion_mode_in_row@@Base>:
   253d8:	push	{r4, r5, r6, sl, fp, lr}
   253dc:	add	fp, sp, #16
   253e0:	mov	r6, r1
   253e4:	mov	r4, r0
   253e8:	ldr	r1, [r1]
   253ec:	ldr	r0, [r6, #48]	; 0x30
   253f0:	tst	r0, #1
   253f4:	bne	25450 <myhtml_insertion_mode_in_row@@Base+0x78>
   253f8:	sub	r0, r1, #126	; 0x7e
   253fc:	cmp	r0, #9
   25400:	bhi	25688 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   25404:	mov	r2, #1
   25408:	movw	r3, #593	; 0x251
   2540c:	tst	r3, r2, lsl r0
   25410:	bne	256a4 <myhtml_insertion_mode_in_row@@Base+0x2cc>
   25414:	mov	r3, #34	; 0x22
   25418:	tst	r3, r2, lsl r0
   2541c:	beq	25688 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   25420:	mov	r0, r4
   25424:	bl	11394 <myhtml_tree_clear_stack_back_table_row_context@plt>
   25428:	mov	r0, r4
   2542c:	mov	r1, r6
   25430:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   25434:	ldr	r0, [r4]
   25438:	ldr	r1, [r0, #36]	; 0x24
   2543c:	mov	r0, r4
   25440:	bl	1116c <myhtml_tree_active_formatting_append@plt>
   25444:	mov	r0, #14
   25448:	str	r0, [r4, #168]	; 0xa8
   2544c:	b	256e4 <myhtml_insertion_mode_in_row@@Base+0x30c>
   25450:	sub	r0, r1, #23
   25454:	cmp	r0, #112	; 0x70
   25458:	bhi	256f0 <myhtml_insertion_mode_in_row@@Base+0x318>
   2545c:	add	r2, pc, #8
   25460:	mov	r5, #0
   25464:	ldr	r0, [r2, r0, lsl #2]
   25468:	add	pc, r2, r0
   2546c:	andeq	r0, r0, ip, ror r2
   25470:	andeq	r0, r0, r4, lsl #5
   25474:	andeq	r0, r0, r4, lsl #5
   25478:	andeq	r0, r0, r4, lsl #5
   2547c:	andeq	r0, r0, ip, ror r2
   25480:	andeq	r0, r0, r4, lsl #5
   25484:	andeq	r0, r0, r4, lsl #5
   25488:	andeq	r0, r0, r4, lsl #5
   2548c:	andeq	r0, r0, ip, ror r2
   25490:	andeq	r0, r0, ip, ror r2
   25494:	andeq	r0, r0, r4, lsl #5
   25498:	andeq	r0, r0, r4, lsl #5
   2549c:	andeq	r0, r0, r4, lsl #5
   254a0:	andeq	r0, r0, r4, lsl #5
   254a4:	andeq	r0, r0, r4, lsl #5
   254a8:	andeq	r0, r0, r4, lsl #5
   254ac:	andeq	r0, r0, r4, lsl #5
   254b0:	andeq	r0, r0, r4, lsl #5
   254b4:	andeq	r0, r0, r4, lsl #5
   254b8:	andeq	r0, r0, r4, lsl #5
   254bc:	andeq	r0, r0, r4, lsl #5
   254c0:	andeq	r0, r0, r4, lsl #5
   254c4:	andeq	r0, r0, r4, lsl #5
   254c8:	andeq	r0, r0, r4, lsl #5
   254cc:	andeq	r0, r0, r4, lsl #5
   254d0:	andeq	r0, r0, r4, lsl #5
   254d4:	andeq	r0, r0, r4, lsl #5
   254d8:	andeq	r0, r0, r4, lsl #5
   254dc:	andeq	r0, r0, r4, lsl #5
   254e0:	andeq	r0, r0, r4, lsl #5
   254e4:	andeq	r0, r0, r4, lsl #5
   254e8:	andeq	r0, r0, r4, lsl #5
   254ec:	andeq	r0, r0, r4, lsl #5
   254f0:	andeq	r0, r0, r4, lsl #5
   254f4:	andeq	r0, r0, r4, lsl #5
   254f8:	andeq	r0, r0, r4, lsl #5
   254fc:	andeq	r0, r0, r4, lsl #5
   25500:	andeq	r0, r0, r4, lsl #5
   25504:	andeq	r0, r0, r4, lsl #5
   25508:	andeq	r0, r0, r4, lsl #5
   2550c:	andeq	r0, r0, r4, lsl #5
   25510:	andeq	r0, r0, r4, lsl #5
   25514:	andeq	r0, r0, ip, ror r2
   25518:	andeq	r0, r0, r4, lsl #5
   2551c:	andeq	r0, r0, r4, lsl #5
   25520:	andeq	r0, r0, r4, lsl #5
   25524:	andeq	r0, r0, r4, lsl #5
   25528:	andeq	r0, r0, r4, lsl #5
   2552c:	andeq	r0, r0, r4, lsl #5
   25530:	andeq	r0, r0, r4, lsl #5
   25534:	andeq	r0, r0, r4, lsl #5
   25538:	andeq	r0, r0, r4, lsl #5
   2553c:	andeq	r0, r0, r4, lsl #5
   25540:	andeq	r0, r0, r4, lsl #5
   25544:	andeq	r0, r0, r4, lsl #5
   25548:	andeq	r0, r0, r4, lsl #5
   2554c:	andeq	r0, r0, r4, lsl #5
   25550:	andeq	r0, r0, r4, lsl #5
   25554:	andeq	r0, r0, r4, lsl #5
   25558:	andeq	r0, r0, r4, lsl #5
   2555c:	andeq	r0, r0, r4, lsl #5
   25560:	andeq	r0, r0, r4, lsl #5
   25564:	andeq	r0, r0, r4, lsl #5
   25568:	andeq	r0, r0, r4, lsl #5
   2556c:	andeq	r0, r0, r4, lsl #5
   25570:	andeq	r0, r0, r4, lsl #5
   25574:	andeq	r0, r0, r4, lsl #5
   25578:	andeq	r0, r0, r4, lsl #5
   2557c:	andeq	r0, r0, r4, lsl #5
   25580:	andeq	r0, r0, r4, lsl #5
   25584:	andeq	r0, r0, r4, lsl #5
   25588:	andeq	r0, r0, r4, lsl #5
   2558c:	andeq	r0, r0, r4, lsl #5
   25590:	andeq	r0, r0, r4, lsl #5
   25594:	andeq	r0, r0, r4, lsl #5
   25598:	andeq	r0, r0, r4, lsl #5
   2559c:	andeq	r0, r0, r4, lsl #5
   255a0:	andeq	r0, r0, r4, lsl #5
   255a4:	andeq	r0, r0, r4, lsl #5
   255a8:	andeq	r0, r0, r4, lsl #5
   255ac:	andeq	r0, r0, r4, lsl #5
   255b0:	andeq	r0, r0, r4, lsl #5
   255b4:	andeq	r0, r0, r4, lsl #5
   255b8:	andeq	r0, r0, r4, lsl #5
   255bc:	andeq	r0, r0, r4, lsl #5
   255c0:	andeq	r0, r0, r4, lsl #5
   255c4:	andeq	r0, r0, r4, lsl #5
   255c8:	andeq	r0, r0, r4, lsl #5
   255cc:	andeq	r0, r0, r4, lsl #5
   255d0:	andeq	r0, r0, r4, lsl #5
   255d4:	andeq	r0, r0, r4, lsl #5
   255d8:	andeq	r0, r0, r4, lsl #5
   255dc:	andeq	r0, r0, r4, lsl #5
   255e0:	andeq	r0, r0, r4, lsl #5
   255e4:	andeq	r0, r0, r4, lsl #5
   255e8:	andeq	r0, r0, r4, lsl #5
   255ec:	andeq	r0, r0, r4, lsl #5
   255f0:	andeq	r0, r0, r4, lsl #5
   255f4:	andeq	r0, r0, r4, lsl #5
   255f8:	andeq	r0, r0, r4, lsl #5
   255fc:	andeq	r0, r0, r4, lsl #5
   25600:	andeq	r0, r0, r4, lsl #5
   25604:	ldrdeq	r0, [r0], -ip
   25608:	andeq	r0, r0, r4, asr #3
   2560c:	andeq	r0, r0, ip, ror r2
   25610:	andeq	r0, r0, r4, lsl #5
   25614:	andeq	r0, r0, r4, lsl #5
   25618:	andeq	r0, r0, r4, asr #3
   2561c:	andeq	r0, r0, ip, ror r2
   25620:	andeq	r0, r0, r4, asr #3
   25624:	andeq	r0, r0, r4, lsl #5
   25628:	andeq	r0, r0, r4, lsl #5
   2562c:	muleq	r0, r4, r2
   25630:	mov	r0, r4
   25634:	mov	r2, #1
   25638:	mov	r3, #64	; 0x40
   2563c:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   25640:	cmp	r0, #0
   25644:	beq	256e8 <myhtml_insertion_mode_in_row@@Base+0x310>
   25648:	mov	r0, r4
   2564c:	mov	r1, #135	; 0x87
   25650:	mov	r2, #1
   25654:	mov	r3, #64	; 0x40
   25658:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   2565c:	cmp	r0, #0
   25660:	beq	256e8 <myhtml_insertion_mode_in_row@@Base+0x310>
   25664:	mov	r0, r4
   25668:	bl	11394 <myhtml_tree_clear_stack_back_table_row_context@plt>
   2566c:	mov	r0, r4
   25670:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   25674:	mov	r0, #12
   25678:	mov	r5, #1
   2567c:	str	r0, [r4, #168]	; 0xa8
   25680:	mov	r0, r5
   25684:	pop	{r4, r5, r6, sl, fp, pc}
   25688:	sub	r0, r1, #27
   2568c:	cmp	r0, #5
   25690:	bhi	256f0 <myhtml_insertion_mode_in_row@@Base+0x318>
   25694:	mov	r1, #1
   25698:	mov	r2, #49	; 0x31
   2569c:	tst	r2, r1, lsl r0
   256a0:	beq	256f0 <myhtml_insertion_mode_in_row@@Base+0x318>
   256a4:	mov	r0, r4
   256a8:	mov	r1, #135	; 0x87
   256ac:	mov	r2, #1
   256b0:	mov	r3, #64	; 0x40
   256b4:	mov	r5, #1
   256b8:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   256bc:	cmp	r0, #0
   256c0:	beq	256e4 <myhtml_insertion_mode_in_row@@Base+0x30c>
   256c4:	mov	r0, r4
   256c8:	bl	11394 <myhtml_tree_clear_stack_back_table_row_context@plt>
   256cc:	mov	r0, r4
   256d0:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   256d4:	mov	r0, #12
   256d8:	str	r0, [r4, #168]	; 0xa8
   256dc:	mov	r0, r5
   256e0:	pop	{r4, r5, r6, sl, fp, pc}
   256e4:	mov	r5, #0
   256e8:	mov	r0, r5
   256ec:	pop	{r4, r5, r6, sl, fp, pc}
   256f0:	mov	r0, r4
   256f4:	mov	r1, r6
   256f8:	pop	{r4, r5, r6, sl, fp, lr}
   256fc:	b	241dc <myhtml_insertion_mode_in_table@@Base>
   25700:	mov	r0, r4
   25704:	mov	r1, #135	; 0x87
   25708:	mov	r2, #1
   2570c:	mov	r3, #64	; 0x40
   25710:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   25714:	cmp	r0, #0
   25718:	bne	256c4 <myhtml_insertion_mode_in_row@@Base+0x2ec>
   2571c:	b	256e8 <myhtml_insertion_mode_in_row@@Base+0x310>

00025720 <myhtml_insertion_mode_in_cell@@Base>:
   25720:	push	{r4, r5, r6, r7, fp, lr}
   25724:	add	fp, sp, #16
   25728:	mov	r5, r1
   2572c:	mov	r4, r0
   25730:	ldr	r1, [r1]
   25734:	ldr	r0, [r5, #48]	; 0x30
   25738:	tst	r0, #1
   2573c:	bne	257d0 <myhtml_insertion_mode_in_cell@@Base+0xb0>
   25740:	sub	r0, r1, #126	; 0x7e
   25744:	cmp	r0, #9
   25748:	bhi	2575c <myhtml_insertion_mode_in_cell@@Base+0x3c>
   2574c:	mov	r2, #1
   25750:	movw	r3, #627	; 0x273
   25754:	tst	r3, r2, lsl r0
   25758:	bne	25778 <myhtml_insertion_mode_in_cell@@Base+0x58>
   2575c:	sub	r0, r1, #27
   25760:	cmp	r0, #5
   25764:	bhi	25a90 <myhtml_insertion_mode_in_cell@@Base+0x370>
   25768:	mov	r1, #1
   2576c:	mov	r2, #49	; 0x31
   25770:	tst	r2, r1, lsl r0
   25774:	beq	25a90 <myhtml_insertion_mode_in_cell@@Base+0x370>
   25778:	mov	r0, r4
   2577c:	mov	r1, #127	; 0x7f
   25780:	mov	r2, #1
   25784:	mov	r3, #64	; 0x40
   25788:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   2578c:	mov	r7, r0
   25790:	mov	r0, r4
   25794:	mov	r1, #131	; 0x83
   25798:	mov	r2, #1
   2579c:	mov	r3, #64	; 0x40
   257a0:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   257a4:	mov	r1, r0
   257a8:	orrs	r0, r7, r0
   257ac:	mov	r6, #0
   257b0:	beq	25a88 <myhtml_insertion_mode_in_cell@@Base+0x368>
   257b4:	cmp	r7, #0
   257b8:	mov	r0, r4
   257bc:	mov	r2, r5
   257c0:	movne	r1, r7
   257c4:	bl	11a24 <myhtml_tree_close_cell@plt>
   257c8:	mov	r6, #1
   257cc:	b	25a88 <myhtml_insertion_mode_in_cell@@Base+0x368>
   257d0:	sub	r0, r1, #23
   257d4:	cmp	r0, #112	; 0x70
   257d8:	bhi	25aa0 <myhtml_insertion_mode_in_cell@@Base+0x380>
   257dc:	add	r2, pc, #8
   257e0:	mov	r6, #0
   257e4:	ldr	r0, [r2, r0, lsl #2]
   257e8:	add	pc, r2, r0
   257ec:	muleq	r0, ip, r2
   257f0:			; <UNDEFINED> instruction: 0x000002b4
   257f4:			; <UNDEFINED> instruction: 0x000002b4
   257f8:			; <UNDEFINED> instruction: 0x000002b4
   257fc:	muleq	r0, ip, r2
   25800:			; <UNDEFINED> instruction: 0x000002b4
   25804:			; <UNDEFINED> instruction: 0x000002b4
   25808:			; <UNDEFINED> instruction: 0x000002b4
   2580c:	muleq	r0, ip, r2
   25810:	muleq	r0, ip, r2
   25814:			; <UNDEFINED> instruction: 0x000002b4
   25818:			; <UNDEFINED> instruction: 0x000002b4
   2581c:			; <UNDEFINED> instruction: 0x000002b4
   25820:			; <UNDEFINED> instruction: 0x000002b4
   25824:			; <UNDEFINED> instruction: 0x000002b4
   25828:			; <UNDEFINED> instruction: 0x000002b4
   2582c:			; <UNDEFINED> instruction: 0x000002b4
   25830:			; <UNDEFINED> instruction: 0x000002b4
   25834:			; <UNDEFINED> instruction: 0x000002b4
   25838:			; <UNDEFINED> instruction: 0x000002b4
   2583c:			; <UNDEFINED> instruction: 0x000002b4
   25840:			; <UNDEFINED> instruction: 0x000002b4
   25844:			; <UNDEFINED> instruction: 0x000002b4
   25848:			; <UNDEFINED> instruction: 0x000002b4
   2584c:			; <UNDEFINED> instruction: 0x000002b4
   25850:			; <UNDEFINED> instruction: 0x000002b4
   25854:			; <UNDEFINED> instruction: 0x000002b4
   25858:			; <UNDEFINED> instruction: 0x000002b4
   2585c:			; <UNDEFINED> instruction: 0x000002b4
   25860:			; <UNDEFINED> instruction: 0x000002b4
   25864:			; <UNDEFINED> instruction: 0x000002b4
   25868:			; <UNDEFINED> instruction: 0x000002b4
   2586c:			; <UNDEFINED> instruction: 0x000002b4
   25870:			; <UNDEFINED> instruction: 0x000002b4
   25874:			; <UNDEFINED> instruction: 0x000002b4
   25878:			; <UNDEFINED> instruction: 0x000002b4
   2587c:			; <UNDEFINED> instruction: 0x000002b4
   25880:			; <UNDEFINED> instruction: 0x000002b4
   25884:			; <UNDEFINED> instruction: 0x000002b4
   25888:			; <UNDEFINED> instruction: 0x000002b4
   2588c:			; <UNDEFINED> instruction: 0x000002b4
   25890:			; <UNDEFINED> instruction: 0x000002b4
   25894:	muleq	r0, ip, r2
   25898:			; <UNDEFINED> instruction: 0x000002b4
   2589c:			; <UNDEFINED> instruction: 0x000002b4
   258a0:			; <UNDEFINED> instruction: 0x000002b4
   258a4:			; <UNDEFINED> instruction: 0x000002b4
   258a8:			; <UNDEFINED> instruction: 0x000002b4
   258ac:			; <UNDEFINED> instruction: 0x000002b4
   258b0:			; <UNDEFINED> instruction: 0x000002b4
   258b4:			; <UNDEFINED> instruction: 0x000002b4
   258b8:			; <UNDEFINED> instruction: 0x000002b4
   258bc:			; <UNDEFINED> instruction: 0x000002b4
   258c0:			; <UNDEFINED> instruction: 0x000002b4
   258c4:			; <UNDEFINED> instruction: 0x000002b4
   258c8:			; <UNDEFINED> instruction: 0x000002b4
   258cc:			; <UNDEFINED> instruction: 0x000002b4
   258d0:			; <UNDEFINED> instruction: 0x000002b4
   258d4:			; <UNDEFINED> instruction: 0x000002b4
   258d8:			; <UNDEFINED> instruction: 0x000002b4
   258dc:			; <UNDEFINED> instruction: 0x000002b4
   258e0:			; <UNDEFINED> instruction: 0x000002b4
   258e4:			; <UNDEFINED> instruction: 0x000002b4
   258e8:			; <UNDEFINED> instruction: 0x000002b4
   258ec:			; <UNDEFINED> instruction: 0x000002b4
   258f0:			; <UNDEFINED> instruction: 0x000002b4
   258f4:			; <UNDEFINED> instruction: 0x000002b4
   258f8:			; <UNDEFINED> instruction: 0x000002b4
   258fc:			; <UNDEFINED> instruction: 0x000002b4
   25900:			; <UNDEFINED> instruction: 0x000002b4
   25904:			; <UNDEFINED> instruction: 0x000002b4
   25908:			; <UNDEFINED> instruction: 0x000002b4
   2590c:			; <UNDEFINED> instruction: 0x000002b4
   25910:			; <UNDEFINED> instruction: 0x000002b4
   25914:			; <UNDEFINED> instruction: 0x000002b4
   25918:			; <UNDEFINED> instruction: 0x000002b4
   2591c:			; <UNDEFINED> instruction: 0x000002b4
   25920:			; <UNDEFINED> instruction: 0x000002b4
   25924:			; <UNDEFINED> instruction: 0x000002b4
   25928:			; <UNDEFINED> instruction: 0x000002b4
   2592c:			; <UNDEFINED> instruction: 0x000002b4
   25930:			; <UNDEFINED> instruction: 0x000002b4
   25934:			; <UNDEFINED> instruction: 0x000002b4
   25938:			; <UNDEFINED> instruction: 0x000002b4
   2593c:			; <UNDEFINED> instruction: 0x000002b4
   25940:			; <UNDEFINED> instruction: 0x000002b4
   25944:			; <UNDEFINED> instruction: 0x000002b4
   25948:			; <UNDEFINED> instruction: 0x000002b4
   2594c:			; <UNDEFINED> instruction: 0x000002b4
   25950:			; <UNDEFINED> instruction: 0x000002b4
   25954:			; <UNDEFINED> instruction: 0x000002b4
   25958:			; <UNDEFINED> instruction: 0x000002b4
   2595c:			; <UNDEFINED> instruction: 0x000002b4
   25960:			; <UNDEFINED> instruction: 0x000002b4
   25964:			; <UNDEFINED> instruction: 0x000002b4
   25968:			; <UNDEFINED> instruction: 0x000002b4
   2596c:			; <UNDEFINED> instruction: 0x000002b4
   25970:			; <UNDEFINED> instruction: 0x000002b4
   25974:			; <UNDEFINED> instruction: 0x000002b4
   25978:			; <UNDEFINED> instruction: 0x000002b4
   2597c:			; <UNDEFINED> instruction: 0x000002b4
   25980:			; <UNDEFINED> instruction: 0x000002b4
   25984:	andeq	r0, r0, r4, asr #3
   25988:	andeq	r0, r0, r4, asr #3
   2598c:	andeq	r0, r0, r4, lsr r2
   25990:			; <UNDEFINED> instruction: 0x000002b4
   25994:			; <UNDEFINED> instruction: 0x000002b4
   25998:	andeq	r0, r0, r4, asr #3
   2599c:	andeq	r0, r0, r4, lsr r2
   259a0:	andeq	r0, r0, r4, asr #3
   259a4:			; <UNDEFINED> instruction: 0x000002b4
   259a8:			; <UNDEFINED> instruction: 0x000002b4
   259ac:	andeq	r0, r0, r4, asr #3
   259b0:	mov	r0, r4
   259b4:	mov	r2, #1
   259b8:	mov	r3, #64	; 0x40
   259bc:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   259c0:	cmp	r0, #0
   259c4:	beq	25a88 <myhtml_insertion_mode_in_cell@@Base+0x368>
   259c8:	mov	r0, r4
   259cc:	mov	r1, #127	; 0x7f
   259d0:	mov	r2, #1
   259d4:	mov	r3, #64	; 0x40
   259d8:	mov	r6, #1
   259dc:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   259e0:	cmp	r0, #0
   259e4:	bne	25a08 <myhtml_insertion_mode_in_cell@@Base+0x2e8>
   259e8:	mov	r0, r4
   259ec:	mov	r1, #131	; 0x83
   259f0:	mov	r2, #1
   259f4:	mov	r3, #64	; 0x40
   259f8:	mov	r6, #1
   259fc:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   25a00:	cmp	r0, #0
   25a04:	beq	25a88 <myhtml_insertion_mode_in_cell@@Base+0x368>
   25a08:	mov	r1, r0
   25a0c:	mov	r0, r4
   25a10:	mov	r2, r5
   25a14:	bl	11a24 <myhtml_tree_close_cell@plt>
   25a18:	mov	r0, r6
   25a1c:	pop	{r4, r5, r6, r7, fp, pc}
   25a20:	mov	r0, r4
   25a24:	mov	r2, #1
   25a28:	mov	r3, #64	; 0x40
   25a2c:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   25a30:	cmp	r0, #0
   25a34:	beq	25a88 <myhtml_insertion_mode_in_cell@@Base+0x368>
   25a38:	mov	r0, r4
   25a3c:	mov	r1, #0
   25a40:	mov	r2, #0
   25a44:	mov	r6, #0
   25a48:	bl	115a4 <myhtml_tree_generate_implied_end_tags@plt>
   25a4c:	mov	r0, r4
   25a50:	bl	11514 <myhtml_tree_current_node@plt>
   25a54:	ldr	r1, [r5]
   25a58:	bl	11868 <myhtml_is_html_node@plt>
   25a5c:	ldr	r1, [r5]
   25a60:	mov	r0, r4
   25a64:	mov	r2, #1
   25a68:	mov	r3, #0
   25a6c:	bl	11760 <myhtml_tree_open_elements_pop_until@plt>
   25a70:	mov	r0, r4
   25a74:	bl	11afc <myhtml_tree_active_formatting_up_to_last_marker@plt>
   25a78:	mov	r0, #13
   25a7c:	str	r0, [r4, #168]	; 0xa8
   25a80:	mov	r0, r6
   25a84:	pop	{r4, r5, r6, r7, fp, pc}
   25a88:	mov	r0, r6
   25a8c:	pop	{r4, r5, r6, r7, fp, pc}
   25a90:	mov	r0, r4
   25a94:	mov	r1, r5
   25a98:	pop	{r4, r5, r6, r7, fp, lr}
   25a9c:	b	21a90 <myhtml_insertion_mode_in_body@@Base>
   25aa0:	mov	r0, r4
   25aa4:	mov	r1, r5
   25aa8:	pop	{r4, r5, r6, r7, fp, lr}
   25aac:	b	241dc <myhtml_insertion_mode_in_table@@Base>

00025ab0 <myhtml_insertion_mode_in_select@@Base>:
   25ab0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   25ab4:	add	fp, sp, #24
   25ab8:	mov	r4, r0
   25abc:	mov	r6, r1
   25ac0:	ldr	r0, [r1]
   25ac4:	ldr	r1, [r1, #48]	; 0x30
   25ac8:	tst	r1, #1
   25acc:	bne	25c38 <myhtml_insertion_mode_in_select@@Base+0x188>
   25ad0:	mov	r5, #0
   25ad4:	cmp	r0, #64	; 0x40
   25ad8:	ble	25db8 <myhtml_insertion_mode_in_select@@Base+0x308>
   25adc:	sub	r1, r0, #65	; 0x41
   25ae0:	cmp	r1, #64	; 0x40
   25ae4:	bhi	25de4 <myhtml_insertion_mode_in_select@@Base+0x334>
   25ae8:	add	r0, pc, #4
   25aec:	ldr	r1, [r0, r1, lsl #2]
   25af0:	add	pc, r0, r1
   25af4:	strdeq	r0, [r0], -r8
   25af8:	andeq	r0, r0, ip, ror r4
   25afc:	andeq	r0, r0, ip, ror r4
   25b00:	andeq	r0, r0, ip, ror r4
   25b04:	andeq	r0, r0, ip, ror r4
   25b08:	andeq	r0, r0, r4, lsl #2
   25b0c:	andeq	r0, r0, ip, ror r4
   25b10:	andeq	r0, r0, ip, ror r4
   25b14:	andeq	r0, r0, ip, ror r4
   25b18:	andeq	r0, r0, r4, lsl #2
   25b1c:	andeq	r0, r0, ip, ror r4
   25b20:	andeq	r0, r0, ip, ror r4
   25b24:	andeq	r0, r0, ip, ror r4
   25b28:	andeq	r0, r0, ip, ror r4
   25b2c:	andeq	r0, r0, ip, ror r4
   25b30:	andeq	r0, r0, ip, ror r4
   25b34:	andeq	r0, r0, ip, ror r4
   25b38:	andeq	r0, r0, ip, ror r4
   25b3c:	andeq	r0, r0, ip, ror r4
   25b40:	andeq	r0, r0, ip, ror r4
   25b44:	andeq	r0, r0, ip, ror r4
   25b48:	andeq	r0, r0, ip, ror r4
   25b4c:	andeq	r0, r0, ip, ror r4
   25b50:	andeq	r0, r0, ip, ror r4
   25b54:	andeq	r0, r0, ip, ror r4
   25b58:	andeq	r0, r0, ip, ror r4
   25b5c:	andeq	r0, r0, ip, ror r4
   25b60:	andeq	r0, r0, ip, ror r4
   25b64:	andeq	r0, r0, ip, ror r4
   25b68:	andeq	r0, r0, ip, ror r4
   25b6c:	andeq	r0, r0, ip, ror r4
   25b70:	andeq	r0, r0, r8, lsl #6
   25b74:	andeq	r0, r0, ip, asr #6
   25b78:	andeq	r0, r0, ip, ror r4
   25b7c:	andeq	r0, r0, ip, ror r4
   25b80:	andeq	r0, r0, ip, ror r4
   25b84:	andeq	r0, r0, ip, ror r4
   25b88:	andeq	r0, r0, ip, ror r4
   25b8c:	andeq	r0, r0, ip, ror r4
   25b90:	andeq	r0, r0, ip, ror r4
   25b94:	andeq	r0, r0, ip, ror r4
   25b98:	andeq	r0, r0, ip, ror r4
   25b9c:	andeq	r0, r0, ip, ror r4
   25ba0:	andeq	r0, r0, ip, ror r4
   25ba4:	andeq	r0, r0, ip, ror r4
   25ba8:	andeq	r0, r0, ip, ror r4
   25bac:	andeq	r0, r0, ip, ror r4
   25bb0:	andeq	r0, r0, ip, asr r2
   25bb4:	andeq	r0, r0, ip, ror r4
   25bb8:	andeq	r0, r0, ip, ror #4
   25bbc:	andeq	r0, r0, ip, ror r4
   25bc0:	andeq	r0, r0, ip, ror r4
   25bc4:	andeq	r0, r0, ip, ror r4
   25bc8:	andeq	r0, r0, ip, ror r4
   25bcc:	andeq	r0, r0, ip, ror r4
   25bd0:	andeq	r0, r0, ip, ror r4
   25bd4:	andeq	r0, r0, ip, ror r4
   25bd8:	andeq	r0, r0, ip, ror r4
   25bdc:	andeq	r0, r0, ip, ror r4
   25be0:	andeq	r0, r0, ip, ror r4
   25be4:	andeq	r0, r0, ip, ror r4
   25be8:	andeq	r0, r0, ip, ror r4
   25bec:	andeq	r0, r0, ip, ror r4
   25bf0:	andeq	r0, r0, ip, asr r2
   25bf4:	andeq	r0, r0, r4, lsl #2
   25bf8:	mov	r0, r4
   25bfc:	mov	r1, #114	; 0x72
   25c00:	mov	r2, #1
   25c04:	mov	r3, #128	; 0x80
   25c08:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   25c0c:	cmp	r0, #0
   25c10:	beq	25f70 <myhtml_insertion_mode_in_select@@Base+0x4c0>
   25c14:	mov	r1, r0
   25c18:	mov	r0, r4
   25c1c:	mov	r2, #0
   25c20:	bl	111a8 <myhtml_tree_open_elements_pop_until_by_node@plt>
   25c24:	mov	r0, r4
   25c28:	bl	115d4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   25c2c:	mov	r5, #1
   25c30:	mov	r0, r5
   25c34:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   25c38:	sub	r0, r0, #96	; 0x60
   25c3c:	mov	r5, #0
   25c40:	cmp	r0, #32
   25c44:	bhi	25f70 <myhtml_insertion_mode_in_select@@Base+0x4c0>
   25c48:	add	r1, pc, #4
   25c4c:	ldr	r0, [r1, r0, lsl #2]
   25c50:	add	pc, r1, r0
   25c54:	andeq	r0, r0, r4, lsl #1
   25c58:	andeq	r0, r0, r8, asr #2
   25c5c:	andeq	r0, r0, ip, lsl r3
   25c60:	andeq	r0, r0, ip, lsl r3
   25c64:	andeq	r0, r0, ip, lsl r3
   25c68:	andeq	r0, r0, ip, lsl r3
   25c6c:	andeq	r0, r0, ip, lsl r3
   25c70:	andeq	r0, r0, ip, lsl r3
   25c74:	andeq	r0, r0, ip, lsl r3
   25c78:	andeq	r0, r0, ip, lsl r3
   25c7c:	andeq	r0, r0, ip, lsl r3
   25c80:	andeq	r0, r0, ip, lsl r3
   25c84:	andeq	r0, r0, ip, lsl r3
   25c88:	andeq	r0, r0, ip, lsl r3
   25c8c:	andeq	r0, r0, ip, lsl r3
   25c90:	andeq	r0, r0, ip, lsl r3
   25c94:	andeq	r0, r0, ip, lsl r3
   25c98:	andeq	r0, r0, ip, lsl r3
   25c9c:	andeq	r0, r0, ip, lsl #2
   25ca0:	andeq	r0, r0, ip, lsl r3
   25ca4:	andeq	r0, r0, ip, lsl r3
   25ca8:	andeq	r0, r0, ip, lsl r3
   25cac:	andeq	r0, r0, ip, lsl r3
   25cb0:	andeq	r0, r0, ip, lsl r3
   25cb4:	andeq	r0, r0, ip, lsl r3
   25cb8:	andeq	r0, r0, ip, lsl r3
   25cbc:	andeq	r0, r0, ip, lsl r3
   25cc0:	andeq	r0, r0, ip, lsl r3
   25cc4:	andeq	r0, r0, ip, lsl r3
   25cc8:	andeq	r0, r0, ip, lsl r3
   25ccc:	andeq	r0, r0, ip, lsl r3
   25cd0:	andeq	r0, r0, ip, lsl r3
   25cd4:	strdeq	r0, [r0], -ip
   25cd8:	mov	r0, r4
   25cdc:	bl	11514 <myhtml_tree_current_node@plt>
   25ce0:	mov	r1, #97	; 0x61
   25ce4:	bl	11868 <myhtml_is_html_node@plt>
   25ce8:	cmp	r0, #0
   25cec:	beq	25d28 <myhtml_insertion_mode_in_select@@Base+0x278>
   25cf0:	ldr	r0, [r4, #128]	; 0x80
   25cf4:	ldr	r1, [r0, #4]
   25cf8:	cmp	r1, #2
   25cfc:	bcc	25d28 <myhtml_insertion_mode_in_select@@Base+0x278>
   25d00:	ldr	r1, [r0]
   25d04:	ldr	r0, [r0, #4]
   25d08:	add	r0, r1, r0, lsl #2
   25d0c:	mov	r1, #96	; 0x60
   25d10:	ldr	r0, [r0, #-8]
   25d14:	bl	11868 <myhtml_is_html_node@plt>
   25d18:	cmp	r0, #0
   25d1c:	beq	25d28 <myhtml_insertion_mode_in_select@@Base+0x278>
   25d20:	mov	r0, r4
   25d24:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   25d28:	mov	r0, r4
   25d2c:	bl	11514 <myhtml_tree_current_node@plt>
   25d30:	mov	r1, #96	; 0x60
   25d34:	bl	11868 <myhtml_is_html_node@plt>
   25d38:	cmp	r0, #0
   25d3c:	beq	25f70 <myhtml_insertion_mode_in_select@@Base+0x4c0>
   25d40:	mov	r0, r4
   25d44:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   25d48:	mov	r0, r5
   25d4c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   25d50:	mov	r0, r4
   25d54:	mov	r1, r6
   25d58:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   25d5c:	b	2325c <myhtml_insertion_mode_in_head@@Base>
   25d60:	mov	r0, r4
   25d64:	mov	r1, #114	; 0x72
   25d68:	mov	r2, #1
   25d6c:	mov	r3, #128	; 0x80
   25d70:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   25d74:	cmp	r0, #0
   25d78:	beq	25f70 <myhtml_insertion_mode_in_select@@Base+0x4c0>
   25d7c:	mov	r1, r0
   25d80:	mov	r0, r4
   25d84:	mov	r2, #0
   25d88:	mov	r5, #0
   25d8c:	bl	111a8 <myhtml_tree_open_elements_pop_until_by_node@plt>
   25d90:	mov	r0, r4
   25d94:	bl	115d4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   25d98:	b	25f70 <myhtml_insertion_mode_in_select@@Base+0x4c0>
   25d9c:	mov	r0, r4
   25da0:	bl	11514 <myhtml_tree_current_node@plt>
   25da4:	mov	r1, #97	; 0x61
   25da8:	bl	11868 <myhtml_is_html_node@plt>
   25dac:	cmp	r0, #0
   25db0:	bne	25d40 <myhtml_insertion_mode_in_select@@Base+0x290>
   25db4:	b	25f70 <myhtml_insertion_mode_in_select@@Base+0x4c0>
   25db8:	cmp	r0, #1
   25dbc:	beq	25e74 <myhtml_insertion_mode_in_select@@Base+0x3c4>
   25dc0:	cmp	r0, #2
   25dc4:	bne	25f70 <myhtml_insertion_mode_in_select@@Base+0x4c0>
   25dc8:	mov	r0, r4
   25dcc:	mov	r1, r6
   25dd0:	mov	r2, #0
   25dd4:	mov	r5, #0
   25dd8:	bl	11268 <myhtml_tree_node_insert_comment@plt>
   25ddc:	mov	r0, r5
   25de0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   25de4:	cmp	r0, #251	; 0xfb
   25de8:	bne	25f70 <myhtml_insertion_mode_in_select@@Base+0x4c0>
   25dec:	mov	r0, r4
   25df0:	mov	r1, r6
   25df4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   25df8:	b	21a90 <myhtml_insertion_mode_in_body@@Base>
   25dfc:	mov	r0, r4
   25e00:	bl	11514 <myhtml_tree_current_node@plt>
   25e04:	ldr	r1, [r0, #4]
   25e08:	cmp	r1, #97	; 0x61
   25e0c:	ldreq	r0, [r0, #8]
   25e10:	cmpeq	r0, #1
   25e14:	beq	25f78 <myhtml_insertion_mode_in_select@@Base+0x4c8>
   25e18:	mov	r0, r4
   25e1c:	bl	11514 <myhtml_tree_current_node@plt>
   25e20:	ldr	r1, [r6]
   25e24:	ldr	r2, [r0, #4]
   25e28:	cmp	r2, r1
   25e2c:	bne	25e60 <myhtml_insertion_mode_in_select@@Base+0x3b0>
   25e30:	ldr	r0, [r0, #8]
   25e34:	cmp	r0, #1
   25e38:	beq	25e58 <myhtml_insertion_mode_in_select@@Base+0x3a8>
   25e3c:	b	25e60 <myhtml_insertion_mode_in_select@@Base+0x3b0>
   25e40:	mov	r0, r4
   25e44:	bl	11514 <myhtml_tree_current_node@plt>
   25e48:	ldr	r1, [r6]
   25e4c:	bl	11868 <myhtml_is_html_node@plt>
   25e50:	cmp	r0, #0
   25e54:	beq	25e60 <myhtml_insertion_mode_in_select@@Base+0x3b0>
   25e58:	mov	r0, r4
   25e5c:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   25e60:	mov	r0, r4
   25e64:	mov	r1, r6
   25e68:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   25e6c:	mov	r0, r5
   25e70:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   25e74:	ldr	r0, [r6, #48]	; 0x30
   25e78:	tst	r0, #2048	; 0x800
   25e7c:	beq	25f5c <myhtml_insertion_mode_in_select@@Base+0x4ac>
   25e80:	ldr	r0, [r4, #8]
   25e84:	mov	r1, r6
   25e88:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   25e8c:	ldr	r7, [r6, #12]
   25e90:	cmp	r7, #0
   25e94:	beq	25f70 <myhtml_insertion_mode_in_select@@Base+0x4c0>
   25e98:	mov	r0, #0
   25e9c:	mov	r8, #0
   25ea0:	ldr	r3, [r6, #4]
   25ea4:	ldrb	r1, [r3, r0]
   25ea8:	cmp	r1, #0
   25eac:	beq	25ec0 <myhtml_insertion_mode_in_select@@Base+0x410>
   25eb0:	add	r0, r0, #1
   25eb4:	cmp	r0, r7
   25eb8:	bcc	25ea0 <myhtml_insertion_mode_in_select@@Base+0x3f0>
   25ebc:	b	25f4c <myhtml_insertion_mode_in_select@@Base+0x49c>
   25ec0:	cmp	r0, r7
   25ec4:	mov	r2, r0
   25ec8:	bcs	25eec <myhtml_insertion_mode_in_select@@Base+0x43c>
   25ecc:	add	r1, r0, #1
   25ed0:	mov	r2, r1
   25ed4:	cmp	r1, r7
   25ed8:	bcs	25eec <myhtml_insertion_mode_in_select@@Base+0x43c>
   25edc:	ldrb	r5, [r3, r2]
   25ee0:	add	r1, r2, #1
   25ee4:	cmp	r5, #0
   25ee8:	beq	25ed0 <myhtml_insertion_mode_in_select@@Base+0x420>
   25eec:	ldr	r5, [r6, #12]
   25ef0:	sub	r1, r0, r2
   25ef4:	cmp	r2, r7
   25ef8:	add	r1, r1, r5
   25efc:	mov	r5, r2
   25f00:	str	r1, [r6, #12]
   25f04:	bcs	25f24 <myhtml_insertion_mode_in_select@@Base+0x474>
   25f08:	mov	r5, r2
   25f0c:	ldrb	r1, [r3, r5]
   25f10:	cmp	r1, #0
   25f14:	beq	25f24 <myhtml_insertion_mode_in_select@@Base+0x474>
   25f18:	add	r5, r5, #1
   25f1c:	cmp	r5, r7
   25f20:	bcc	25f0c <myhtml_insertion_mode_in_select@@Base+0x45c>
   25f24:	sub	r0, r0, r8
   25f28:	add	r1, r3, r2
   25f2c:	sub	r2, r5, r2
   25f30:	add	r0, r3, r0
   25f34:	bl	10f98 <memmove@plt>
   25f38:	add	r8, r8, #1
   25f3c:	sub	r0, r5, #1
   25f40:	add	r0, r0, #1
   25f44:	cmp	r0, r7
   25f48:	bcc	25ea0 <myhtml_insertion_mode_in_select@@Base+0x3f0>
   25f4c:	ldr	r0, [r6, #12]
   25f50:	mov	r5, #0
   25f54:	cmp	r0, #0
   25f58:	beq	25f70 <myhtml_insertion_mode_in_select@@Base+0x4c0>
   25f5c:	mov	r0, r4
   25f60:	mov	r1, r6
   25f64:	bl	11058 <myhtml_tree_node_insert_text@plt>
   25f68:	mov	r0, r5
   25f6c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   25f70:	mov	r0, r5
   25f74:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   25f78:	mov	r0, r4
   25f7c:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   25f80:	b	25e18 <myhtml_insertion_mode_in_select@@Base+0x368>

00025f84 <myhtml_insertion_mode_in_select_in_table@@Base>:
   25f84:	push	{r4, r5, fp, lr}
   25f88:	add	fp, sp, #8
   25f8c:	mov	r4, r0
   25f90:	ldr	r2, [r1]
   25f94:	ldr	r0, [r1, #48]	; 0x30
   25f98:	tst	r0, #1
   25f9c:	bne	25fc4 <myhtml_insertion_mode_in_select_in_table@@Base+0x40>
   25fa0:	sub	r0, r2, #125	; 0x7d
   25fa4:	cmp	r0, #10
   25fa8:	bhi	2602c <myhtml_insertion_mode_in_select_in_table@@Base+0xa8>
   25fac:	mov	r3, #1
   25fb0:	movw	r5, #1255	; 0x4e7
   25fb4:	tst	r5, r3, lsl r0
   25fb8:	beq	2602c <myhtml_insertion_mode_in_select_in_table@@Base+0xa8>
   25fbc:	mov	r5, #1
   25fc0:	b	26008 <myhtml_insertion_mode_in_select_in_table@@Base+0x84>
   25fc4:	sub	r0, r2, #125	; 0x7d
   25fc8:	cmp	r0, #10
   25fcc:	bhi	26038 <myhtml_insertion_mode_in_select_in_table@@Base+0xb4>
   25fd0:	mov	r3, #1
   25fd4:	movw	r5, #1255	; 0x4e7
   25fd8:	tst	r5, r3, lsl r0
   25fdc:	beq	26038 <myhtml_insertion_mode_in_select_in_table@@Base+0xb4>
   25fe0:	mov	r1, r2
   25fe4:	mov	r0, r4
   25fe8:	mov	r2, #1
   25fec:	mov	r3, #64	; 0x40
   25ff0:	mov	r5, #1
   25ff4:	bl	11b74 <myhtml_tree_element_in_scope@plt>
   25ff8:	cmp	r0, #0
   25ffc:	moveq	r5, #0
   26000:	moveq	r0, r5
   26004:	popeq	{r4, r5, fp, pc}
   26008:	mov	r0, r4
   2600c:	mov	r1, #114	; 0x72
   26010:	mov	r2, #1
   26014:	mov	r3, #0
   26018:	bl	11760 <myhtml_tree_open_elements_pop_until@plt>
   2601c:	mov	r0, r4
   26020:	bl	115d4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   26024:	mov	r0, r5
   26028:	pop	{r4, r5, fp, pc}
   2602c:	cmp	r2, #27
   26030:	beq	25fbc <myhtml_insertion_mode_in_select_in_table@@Base+0x38>
   26034:	b	26040 <myhtml_insertion_mode_in_select_in_table@@Base+0xbc>
   26038:	cmp	r2, #27
   2603c:	beq	25fe0 <myhtml_insertion_mode_in_select_in_table@@Base+0x5c>
   26040:	mov	r0, r4
   26044:	pop	{r4, r5, fp, lr}
   26048:	b	25ab0 <myhtml_insertion_mode_in_select@@Base>

0002604c <myhtml_insertion_mode_after_body@@Base>:
   2604c:	push	{r4, r5, r6, sl, fp, lr}
   26050:	add	fp, sp, #16
   26054:	mov	r5, r1
   26058:	ldr	r1, [r1]
   2605c:	ldr	r2, [r5, #48]	; 0x30
   26060:	tst	r2, #1
   26064:	bne	26090 <myhtml_insertion_mode_after_body@@Base+0x44>
   26068:	mov	r4, #0
   2606c:	cmp	r1, #2
   26070:	ble	260b8 <myhtml_insertion_mode_after_body@@Base+0x6c>
   26074:	cmp	r1, #3
   26078:	beq	26124 <myhtml_insertion_mode_after_body@@Base+0xd8>
   2607c:	cmp	r1, #65	; 0x41
   26080:	beq	2612c <myhtml_insertion_mode_after_body@@Base+0xe0>
   26084:	cmp	r1, #251	; 0xfb
   26088:	beq	26124 <myhtml_insertion_mode_after_body@@Base+0xd8>
   2608c:	b	26118 <myhtml_insertion_mode_after_body@@Base+0xcc>
   26090:	cmp	r1, #65	; 0x41
   26094:	bne	26118 <myhtml_insertion_mode_after_body@@Base+0xcc>
   26098:	ldr	r1, [r0, #88]	; 0x58
   2609c:	mov	r4, #0
   260a0:	cmp	r1, #0
   260a4:	bne	26124 <myhtml_insertion_mode_after_body@@Base+0xd8>
   260a8:	mov	r1, #21
   260ac:	str	r1, [r0, #168]	; 0xa8
   260b0:	mov	r0, r4
   260b4:	pop	{r4, r5, r6, sl, fp, pc}
   260b8:	cmp	r1, #1
   260bc:	beq	2610c <myhtml_insertion_mode_after_body@@Base+0xc0>
   260c0:	cmp	r1, #2
   260c4:	bne	26118 <myhtml_insertion_mode_after_body@@Base+0xcc>
   260c8:	ldr	r1, [r0, #128]	; 0x80
   260cc:	ldr	r2, [r1, #4]
   260d0:	cmp	r2, #0
   260d4:	beq	26124 <myhtml_insertion_mode_after_body@@Base+0xd8>
   260d8:	ldr	r1, [r1]
   260dc:	ldr	r6, [r1]
   260e0:	bl	110ac <myhtml_tree_node_create@plt>
   260e4:	mov	r1, r0
   260e8:	mov	r0, #2
   260ec:	str	r0, [r1, #4]
   260f0:	str	r5, [r1, #32]
   260f4:	ldr	r0, [r6, #8]
   260f8:	str	r0, [r1, #8]
   260fc:	mov	r0, r6
   26100:	bl	1158c <myhtml_tree_node_add_child@plt>
   26104:	mov	r0, r4
   26108:	pop	{r4, r5, r6, sl, fp, pc}
   2610c:	ldr	r1, [r5, #48]	; 0x30
   26110:	tst	r1, #8
   26114:	bne	2612c <myhtml_insertion_mode_after_body@@Base+0xe0>
   26118:	mov	r1, #6
   2611c:	mov	r4, #1
   26120:	str	r1, [r0, #168]	; 0xa8
   26124:	mov	r0, r4
   26128:	pop	{r4, r5, r6, sl, fp, pc}
   2612c:	mov	r1, r5
   26130:	pop	{r4, r5, r6, sl, fp, lr}
   26134:	b	21a90 <myhtml_insertion_mode_in_body@@Base>

00026138 <myhtml_insertion_mode_in_frameset@@Base>:
   26138:	push	{r4, r5, fp, lr}
   2613c:	add	fp, sp, #8
   26140:	mov	r4, r0
   26144:	mov	r5, r1
   26148:	ldr	r0, [r1]
   2614c:	ldr	r1, [r1, #48]	; 0x30
   26150:	tst	r1, #1
   26154:	bne	26234 <myhtml_insertion_mode_in_frameset@@Base+0xfc>
   26158:	cmp	r0, #52	; 0x34
   2615c:	ble	26290 <myhtml_insertion_mode_in_frameset@@Base+0x158>
   26160:	sub	r1, r0, #53	; 0x35
   26164:	cmp	r1, #39	; 0x27
   26168:	bhi	262b8 <myhtml_insertion_mode_in_frameset@@Base+0x180>
   2616c:	add	r0, pc, #4
   26170:	ldr	r1, [r0, r1, lsl #2]
   26174:	add	pc, r0, r1
   26178:	andeq	r0, r0, r0, lsr #1
   2617c:	andeq	r0, r0, r8, asr r1
   26180:	andeq	r0, r0, ip, asr #3
   26184:	andeq	r0, r0, ip, asr #3
   26188:	andeq	r0, r0, ip, asr #3
   2618c:	andeq	r0, r0, ip, asr #3
   26190:	andeq	r0, r0, ip, asr #3
   26194:	andeq	r0, r0, ip, asr #3
   26198:	andeq	r0, r0, ip, asr #3
   2619c:	andeq	r0, r0, ip, asr #3
   261a0:	andeq	r0, r0, ip, asr #3
   261a4:	andeq	r0, r0, ip, asr #3
   261a8:	andeq	r0, r0, ip, ror #2
   261ac:	andeq	r0, r0, ip, asr #3
   261b0:	andeq	r0, r0, ip, asr #3
   261b4:	andeq	r0, r0, ip, asr #3
   261b8:	andeq	r0, r0, ip, asr #3
   261bc:	andeq	r0, r0, ip, asr #3
   261c0:	andeq	r0, r0, ip, asr #3
   261c4:	andeq	r0, r0, ip, asr #3
   261c8:	andeq	r0, r0, ip, asr #3
   261cc:	andeq	r0, r0, ip, asr #3
   261d0:	andeq	r0, r0, ip, asr #3
   261d4:	andeq	r0, r0, ip, asr #3
   261d8:	andeq	r0, r0, ip, asr #3
   261dc:	andeq	r0, r0, ip, asr #3
   261e0:	andeq	r0, r0, ip, asr #3
   261e4:	andeq	r0, r0, ip, asr #3
   261e8:	andeq	r0, r0, ip, asr #3
   261ec:	andeq	r0, r0, ip, asr #3
   261f0:	andeq	r0, r0, ip, asr #3
   261f4:	andeq	r0, r0, ip, asr #3
   261f8:	andeq	r0, r0, ip, asr #3
   261fc:	andeq	r0, r0, ip, asr #3
   26200:	andeq	r0, r0, ip, asr #3
   26204:	andeq	r0, r0, ip, asr #3
   26208:	andeq	r0, r0, ip, asr #3
   2620c:	andeq	r0, r0, ip, asr #3
   26210:	andeq	r0, r0, ip, asr #3
   26214:	andeq	r0, r0, ip, ror r1
   26218:	mov	r0, r4
   2621c:	mov	r1, r5
   26220:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   26224:	mov	r0, r4
   26228:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   2622c:	mov	r0, #0
   26230:	pop	{r4, r5, fp, pc}
   26234:	cmp	r0, #54	; 0x36
   26238:	bne	26344 <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   2623c:	mov	r0, r4
   26240:	bl	11514 <myhtml_tree_current_node@plt>
   26244:	ldr	r1, [r4, #84]	; 0x54
   26248:	ldr	r1, [r1, #20]
   2624c:	cmp	r0, r1
   26250:	beq	26344 <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   26254:	mov	r0, r4
   26258:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   2625c:	mov	r0, r4
   26260:	bl	11514 <myhtml_tree_current_node@plt>
   26264:	ldr	r1, [r4, #88]	; 0x58
   26268:	cmp	r1, #0
   2626c:	bne	26344 <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   26270:	ldr	r1, [r0, #4]
   26274:	cmp	r1, #54	; 0x36
   26278:	ldreq	r0, [r0, #8]
   2627c:	cmpeq	r0, #1
   26280:	beq	26344 <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   26284:	mov	r0, #20
   26288:	str	r0, [r4, #168]	; 0xa8
   2628c:	b	26344 <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   26290:	cmp	r0, #1
   26294:	beq	26304 <myhtml_insertion_mode_in_frameset@@Base+0x1cc>
   26298:	cmp	r0, #2
   2629c:	bne	26344 <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   262a0:	mov	r0, r4
   262a4:	mov	r1, r5
   262a8:	mov	r2, #0
   262ac:	bl	11268 <myhtml_tree_node_insert_comment@plt>
   262b0:	mov	r0, #0
   262b4:	pop	{r4, r5, fp, pc}
   262b8:	cmp	r0, #251	; 0xfb
   262bc:	bne	26344 <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   262c0:	mov	r0, r4
   262c4:	bl	11514 <myhtml_tree_current_node@plt>
   262c8:	mov	r0, #0
   262cc:	pop	{r4, r5, fp, pc}
   262d0:	mov	r0, r4
   262d4:	mov	r1, r5
   262d8:	bl	10e18 <myhtml_tree_node_insert_html_element@plt>
   262dc:	mov	r0, #0
   262e0:	pop	{r4, r5, fp, pc}
   262e4:	mov	r0, r4
   262e8:	mov	r1, r5
   262ec:	pop	{r4, r5, fp, lr}
   262f0:	b	21a90 <myhtml_insertion_mode_in_body@@Base>
   262f4:	mov	r0, r4
   262f8:	mov	r1, r5
   262fc:	pop	{r4, r5, fp, lr}
   26300:	b	2325c <myhtml_insertion_mode_in_head@@Base>
   26304:	ldr	r0, [r5, #48]	; 0x30
   26308:	tst	r0, #8
   2630c:	bne	26330 <myhtml_insertion_mode_in_frameset@@Base+0x1f8>
   26310:	ldr	r0, [r4, #8]
   26314:	mov	r1, r5
   26318:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   2631c:	add	r0, r5, #4
   26320:	bl	112c8 <mycore_string_stay_only_whitespace@plt>
   26324:	ldr	r0, [r5, #12]
   26328:	cmp	r0, #0
   2632c:	beq	26344 <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   26330:	mov	r0, r4
   26334:	mov	r1, r5
   26338:	bl	11058 <myhtml_tree_node_insert_text@plt>
   2633c:	mov	r0, #0
   26340:	pop	{r4, r5, fp, pc}
   26344:	mov	r0, #0
   26348:	pop	{r4, r5, fp, pc}

0002634c <myhtml_insertion_mode_after_frameset@@Base>:
   2634c:	push	{r4, r5, fp, lr}
   26350:	add	fp, sp, #8
   26354:	mov	r4, r0
   26358:	mov	r5, r1
   2635c:	ldr	r0, [r1]
   26360:	ldr	r1, [r1, #48]	; 0x30
   26364:	tst	r1, #1
   26368:	bne	2639c <myhtml_insertion_mode_after_frameset@@Base+0x50>
   2636c:	cmp	r0, #64	; 0x40
   26370:	bgt	263b0 <myhtml_insertion_mode_after_frameset@@Base+0x64>
   26374:	cmp	r0, #1
   26378:	beq	263d0 <myhtml_insertion_mode_after_frameset@@Base+0x84>
   2637c:	cmp	r0, #2
   26380:	bne	263a8 <myhtml_insertion_mode_after_frameset@@Base+0x5c>
   26384:	mov	r0, r4
   26388:	mov	r1, r5
   2638c:	mov	r2, #0
   26390:	bl	11268 <myhtml_tree_node_insert_comment@plt>
   26394:	mov	r0, #0
   26398:	pop	{r4, r5, fp, pc}
   2639c:	cmp	r0, #65	; 0x41
   263a0:	moveq	r0, #22
   263a4:	streq	r0, [r4, #168]	; 0xa8
   263a8:	mov	r0, #0
   263ac:	pop	{r4, r5, fp, pc}
   263b0:	cmp	r0, #65	; 0x41
   263b4:	beq	26410 <myhtml_insertion_mode_after_frameset@@Base+0xc4>
   263b8:	cmp	r0, #92	; 0x5c
   263bc:	bne	263a8 <myhtml_insertion_mode_after_frameset@@Base+0x5c>
   263c0:	mov	r0, r4
   263c4:	mov	r1, r5
   263c8:	pop	{r4, r5, fp, lr}
   263cc:	b	2325c <myhtml_insertion_mode_in_head@@Base>
   263d0:	ldr	r0, [r5, #48]	; 0x30
   263d4:	tst	r0, #8
   263d8:	bne	263fc <myhtml_insertion_mode_after_frameset@@Base+0xb0>
   263dc:	ldr	r0, [r4, #8]
   263e0:	mov	r1, r5
   263e4:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   263e8:	add	r0, r5, #4
   263ec:	bl	112c8 <mycore_string_stay_only_whitespace@plt>
   263f0:	ldr	r0, [r5, #12]
   263f4:	cmp	r0, #0
   263f8:	beq	263a8 <myhtml_insertion_mode_after_frameset@@Base+0x5c>
   263fc:	mov	r0, r4
   26400:	mov	r1, r5
   26404:	bl	11058 <myhtml_tree_node_insert_text@plt>
   26408:	mov	r0, #0
   2640c:	pop	{r4, r5, fp, pc}
   26410:	mov	r0, r4
   26414:	mov	r1, r5
   26418:	pop	{r4, r5, fp, lr}
   2641c:	b	21a90 <myhtml_insertion_mode_in_body@@Base>

00026420 <myhtml_insertion_mode_after_after_body@@Base>:
   26420:	push	{r4, r5, r6, sl, fp, lr}
   26424:	add	fp, sp, #16
   26428:	mov	r5, r1
   2642c:	ldr	r1, [r1, #48]	; 0x30
   26430:	tst	r1, #1
   26434:	bne	264bc <myhtml_insertion_mode_after_after_body@@Base+0x9c>
   26438:	ldr	r1, [r5]
   2643c:	mov	r4, #0
   26440:	cmp	r1, #2
   26444:	ble	26460 <myhtml_insertion_mode_after_after_body@@Base+0x40>
   26448:	cmp	r1, #3
   2644c:	cmpne	r1, #65	; 0x41
   26450:	bne	264a0 <myhtml_insertion_mode_after_after_body@@Base+0x80>
   26454:	mov	r1, r5
   26458:	pop	{r4, r5, r6, sl, fp, lr}
   2645c:	b	21a90 <myhtml_insertion_mode_in_body@@Base>
   26460:	cmp	r1, #1
   26464:	beq	264b0 <myhtml_insertion_mode_after_after_body@@Base+0x90>
   26468:	cmp	r1, #2
   2646c:	bne	264bc <myhtml_insertion_mode_after_after_body@@Base+0x9c>
   26470:	ldr	r6, [r0, #84]	; 0x54
   26474:	bl	110ac <myhtml_tree_node_create@plt>
   26478:	mov	r1, r0
   2647c:	mov	r0, #2
   26480:	str	r0, [r1, #4]
   26484:	str	r5, [r1, #32]
   26488:	ldr	r0, [r6, #8]
   2648c:	str	r0, [r1, #8]
   26490:	mov	r0, r6
   26494:	bl	1158c <myhtml_tree_node_add_child@plt>
   26498:	mov	r0, r4
   2649c:	pop	{r4, r5, r6, sl, fp, pc}
   264a0:	cmp	r1, #251	; 0xfb
   264a4:	bne	264bc <myhtml_insertion_mode_after_after_body@@Base+0x9c>
   264a8:	mov	r0, r4
   264ac:	pop	{r4, r5, r6, sl, fp, pc}
   264b0:	ldr	r1, [r5, #48]	; 0x30
   264b4:	tst	r1, #8
   264b8:	bne	26454 <myhtml_insertion_mode_after_after_body@@Base+0x34>
   264bc:	mov	r1, #6
   264c0:	mov	r4, #1
   264c4:	str	r1, [r0, #168]	; 0xa8
   264c8:	mov	r0, r4
   264cc:	pop	{r4, r5, r6, sl, fp, pc}

000264d0 <myhtml_insertion_mode_after_after_frameset@@Base>:
   264d0:	push	{r4, r5, r6, sl, fp, lr}
   264d4:	add	fp, sp, #16
   264d8:	mov	r5, r0
   264dc:	ldr	r0, [r1, #48]	; 0x30
   264e0:	tst	r0, #1
   264e4:	bne	2659c <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   264e8:	ldr	r0, [r1]
   264ec:	mov	r4, r1
   264f0:	cmp	r0, #2
   264f4:	ble	26514 <myhtml_insertion_mode_after_after_frameset@@Base+0x44>
   264f8:	cmp	r0, #3
   264fc:	cmpne	r0, #65	; 0x41
   26500:	bne	26554 <myhtml_insertion_mode_after_after_frameset@@Base+0x84>
   26504:	mov	r0, r5
   26508:	mov	r1, r4
   2650c:	pop	{r4, r5, r6, sl, fp, lr}
   26510:	b	21a90 <myhtml_insertion_mode_in_body@@Base>
   26514:	cmp	r0, #1
   26518:	beq	2656c <myhtml_insertion_mode_after_after_frameset@@Base+0x9c>
   2651c:	cmp	r0, #2
   26520:	bne	2659c <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   26524:	ldr	r6, [r5, #84]	; 0x54
   26528:	mov	r0, r5
   2652c:	bl	110ac <myhtml_tree_node_create@plt>
   26530:	mov	r1, r0
   26534:	mov	r0, #2
   26538:	str	r0, [r1, #4]
   2653c:	str	r4, [r1, #32]
   26540:	ldr	r0, [r6, #8]
   26544:	str	r0, [r1, #8]
   26548:	mov	r0, r6
   2654c:	bl	1158c <myhtml_tree_node_add_child@plt>
   26550:	b	2659c <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   26554:	cmp	r0, #92	; 0x5c
   26558:	bne	2659c <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   2655c:	mov	r0, r5
   26560:	mov	r1, r4
   26564:	pop	{r4, r5, r6, sl, fp, lr}
   26568:	b	2325c <myhtml_insertion_mode_in_head@@Base>
   2656c:	ldr	r0, [r4, #48]	; 0x30
   26570:	tst	r0, #8
   26574:	bne	26504 <myhtml_insertion_mode_after_after_frameset@@Base+0x34>
   26578:	mov	r0, r5
   2657c:	mov	r1, r4
   26580:	bl	10fe0 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   26584:	cmp	r0, #0
   26588:	beq	2659c <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   2658c:	mov	r1, r0
   26590:	mov	r0, r5
   26594:	pop	{r4, r5, r6, sl, fp, lr}
   26598:	b	21a90 <myhtml_insertion_mode_in_body@@Base>
   2659c:	mov	r0, #0
   265a0:	pop	{r4, r5, r6, sl, fp, pc}

000265a4 <myhtml_insertion_mode_in_foreign_content_end_other@@Base>:
   265a4:	push	{r4, sl, fp, lr}
   265a8:	add	fp, sp, #8
   265ac:	ldr	r1, [r0, #128]	; 0x80
   265b0:	ldr	r3, [r1, #4]
   265b4:	cmp	r3, #0
   265b8:	ldrne	ip, [r1]
   265bc:	ldrne	r3, [r1, #4]
   265c0:	subsne	r1, r3, #1
   265c4:	bne	265e4 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x40>
   265c8:	ldr	r1, [r0]
   265cc:	ldr	r3, [r0, #168]	; 0xa8
   265d0:	ldr	r1, [r1, #28]
   265d4:	ldr	r3, [r1, r3, lsl #2]
   265d8:	mov	r1, r2
   265dc:	pop	{r4, sl, fp, lr}
   265e0:	bx	r3
   265e4:	ldr	r1, [ip, r1, lsl #2]
   265e8:	ldr	lr, [r2]
   265ec:	rsb	r3, r3, #2
   265f0:	ldr	r4, [r1, #4]
   265f4:	cmp	r4, lr
   265f8:	beq	26618 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x74>
   265fc:	cmp	r3, #0
   26600:	ldrne	r1, [ip, -r3, lsl #2]
   26604:	addne	r3, r3, #1
   26608:	ldrne	r4, [r1, #8]
   2660c:	cmpne	r4, #1
   26610:	bne	265f0 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x4c>
   26614:	b	265c8 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x24>
   26618:	mov	r2, #0
   2661c:	bl	111a8 <myhtml_tree_open_elements_pop_until_by_node@plt>
   26620:	mov	r0, #0
   26624:	pop	{r4, sl, fp, pc}

00026628 <myhtml_insertion_mode_in_foreign_content_start_other@@Base>:
   26628:	push	{r4, r5, r6, sl, fp, lr}
   2662c:	add	fp, sp, #16
   26630:	mov	r5, r1
   26634:	mov	r4, r0
   26638:	bl	11a30 <myhtml_tree_adjusted_current_node@plt>
   2663c:	mov	r6, r0
   26640:	ldr	r0, [r4, #8]
   26644:	mov	r1, r5
   26648:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   2664c:	ldr	r0, [r6, #8]
   26650:	cmp	r0, #3
   26654:	beq	2666c <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x44>
   26658:	cmp	r0, #2
   2665c:	bne	26674 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x4c>
   26660:	mov	r0, r5
   26664:	bl	11040 <myhtml_token_adjust_mathml_attributes@plt>
   26668:	b	26674 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x4c>
   2666c:	mov	r0, r5
   26670:	bl	11220 <myhtml_token_adjust_svg_attributes@plt>
   26674:	mov	r0, r5
   26678:	bl	11928 <myhtml_token_adjust_foreign_attributes@plt>
   2667c:	mov	r0, r4
   26680:	mov	r1, r5
   26684:	bl	11a54 <myhtml_tree_node_insert_foreign_element@plt>
   26688:	ldr	r1, [r6, #8]
   2668c:	str	r1, [r0, #8]
   26690:	ldr	r0, [r5, #48]	; 0x30
   26694:	tst	r0, #2
   26698:	beq	266b4 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x8c>
   2669c:	cmp	r1, #3
   266a0:	ldreq	r0, [r5]
   266a4:	cmpeq	r0, #112	; 0x70
   266a8:	beq	266bc <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x94>
   266ac:	mov	r0, r4
   266b0:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   266b4:	mov	r0, #0
   266b8:	pop	{r4, r5, r6, sl, fp, pc}
   266bc:	mov	r0, r4
   266c0:	bl	11514 <myhtml_tree_current_node@plt>
   266c4:	ldr	r1, [r4, #128]	; 0x80
   266c8:	ldr	r0, [r1, #4]
   266cc:	cmp	r0, #0
   266d0:	ldrne	r0, [r1]
   266d4:	ldrne	r2, [r1, #4]
   266d8:	subsne	r1, r2, #1
   266dc:	bne	26700 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0xd8>
   266e0:	ldr	r0, [r4]
   266e4:	ldr	r1, [r4, #168]	; 0xa8
   266e8:	ldr	r0, [r0, #28]
   266ec:	ldr	r2, [r0, r1, lsl #2]
   266f0:	mov	r0, r4
   266f4:	mov	r1, r5
   266f8:	pop	{r4, r5, r6, sl, fp, lr}
   266fc:	bx	r2
   26700:	ldr	r1, [r0, r1, lsl #2]
   26704:	ldr	r3, [r5]
   26708:	rsb	r2, r2, #2
   2670c:	ldr	r6, [r1, #4]
   26710:	cmp	r6, r3
   26714:	beq	26734 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x10c>
   26718:	cmp	r2, #0
   2671c:	ldrne	r1, [r0, -r2, lsl #2]
   26720:	addne	r2, r2, #1
   26724:	ldrne	r6, [r1, #8]
   26728:	cmpne	r6, #1
   2672c:	bne	2670c <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0xe4>
   26730:	b	266e0 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0xb8>
   26734:	mov	r0, r4
   26738:	mov	r2, #0
   2673c:	bl	111a8 <myhtml_tree_open_elements_pop_until_by_node@plt>
   26740:	mov	r0, #0
   26744:	pop	{r4, r5, r6, sl, fp, pc}

00026748 <myhtml_insertion_mode_in_foreign_content@@Base>:
   26748:	push	{r4, r5, r6, sl, fp, lr}
   2674c:	add	fp, sp, #16
   26750:	mov	r4, r0
   26754:	ldr	r0, [r1, #48]	; 0x30
   26758:	mov	r5, r1
   2675c:	tst	r0, #1
   26760:	bne	269d0 <myhtml_insertion_mode_in_foreign_content@@Base+0x288>
   26764:	ldr	r0, [r5]
   26768:	sub	r0, r0, #1
   2676c:	cmp	r0, #139	; 0x8b
   26770:	bhi	269c0 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   26774:	add	r1, pc, #8
   26778:	mov	r6, #0
   2677c:	ldr	r0, [r1, r0, lsl #2]
   26780:	add	pc, r1, r0
   26784:	andeq	r0, r0, r8, ror #6
   26788:	andeq	r0, r0, r0, asr #7
   2678c:	strdeq	r0, [r0], -r8
   26790:	andeq	r0, r0, ip, lsr r2
   26794:	andeq	r0, r0, ip, lsr r2
   26798:	andeq	r0, r0, ip, lsr r2
   2679c:	andeq	r0, r0, ip, lsr r2
   267a0:	andeq	r0, r0, ip, lsr r2
   267a4:	andeq	r0, r0, ip, lsr r2
   267a8:	andeq	r0, r0, ip, lsr r2
   267ac:	andeq	r0, r0, ip, lsr r2
   267b0:	andeq	r0, r0, ip, lsr r2
   267b4:	andeq	r0, r0, ip, lsr r2
   267b8:	andeq	r0, r0, r0, lsr r2
   267bc:	andeq	r0, r0, ip, lsr r2
   267c0:	andeq	r0, r0, ip, lsr r2
   267c4:	andeq	r0, r0, ip, lsr r2
   267c8:	andeq	r0, r0, ip, lsr r2
   267cc:	andeq	r0, r0, ip, lsr r2
   267d0:	andeq	r0, r0, r0, lsr r2
   267d4:	andeq	r0, r0, ip, lsr r2
   267d8:	andeq	r0, r0, r0, lsr r2
   267dc:	andeq	r0, r0, r0, lsr r2
   267e0:	andeq	r0, r0, r0, lsr r2
   267e4:	andeq	r0, r0, ip, lsr r2
   267e8:	andeq	r0, r0, ip, lsr r2
   267ec:	andeq	r0, r0, ip, lsr r2
   267f0:	andeq	r0, r0, r0, lsr r2
   267f4:	andeq	r0, r0, ip, lsr r2
   267f8:	andeq	r0, r0, r0, lsr r2
   267fc:	andeq	r0, r0, ip, lsr r2
   26800:	andeq	r0, r0, ip, lsr r2
   26804:	andeq	r0, r0, ip, lsr r2
   26808:	andeq	r0, r0, ip, lsr r2
   2680c:	andeq	r0, r0, ip, lsr r2
   26810:	andeq	r0, r0, r0, lsr r2
   26814:	andeq	r0, r0, ip, lsr r2
   26818:	andeq	r0, r0, ip, lsr r2
   2681c:	andeq	r0, r0, ip, lsr r2
   26820:	andeq	r0, r0, ip, lsr r2
   26824:	andeq	r0, r0, ip, lsr r2
   26828:	andeq	r0, r0, r0, lsr r2
   2682c:	andeq	r0, r0, r0, lsr r2
   26830:	andeq	r0, r0, r0, lsr r2
   26834:	andeq	r0, r0, r0, lsr r2
   26838:	andeq	r0, r0, r0, lsr r2
   2683c:	andeq	r0, r0, ip, lsr r2
   26840:	andeq	r0, r0, ip, lsr r2
   26844:	andeq	r0, r0, ip, lsr r2
   26848:	ldrdeq	r0, [r0], -ip
   2684c:	andeq	r0, r0, ip, lsr r2
   26850:	andeq	r0, r0, ip, lsr r2
   26854:	andeq	r0, r0, ip, lsr r2
   26858:	andeq	r0, r0, ip, lsr r2
   2685c:	andeq	r0, r0, r0, lsr r2
   26860:	andeq	r0, r0, r0, lsr r2
   26864:	andeq	r0, r0, r0, lsr r2
   26868:	andeq	r0, r0, r0, lsr r2
   2686c:	andeq	r0, r0, r0, lsr r2
   26870:	andeq	r0, r0, r0, lsr r2
   26874:	andeq	r0, r0, r0, lsr r2
   26878:	andeq	r0, r0, ip, lsr r2
   2687c:	andeq	r0, r0, ip, lsr r2
   26880:	andeq	r0, r0, r0, lsr r2
   26884:	andeq	r0, r0, ip, lsr r2
   26888:	andeq	r0, r0, r0, lsr r2
   2688c:	andeq	r0, r0, ip, lsr r2
   26890:	andeq	r0, r0, ip, lsr r2
   26894:	andeq	r0, r0, r0, lsr r2
   26898:	andeq	r0, r0, ip, lsr r2
   2689c:	andeq	r0, r0, ip, lsr r2
   268a0:	andeq	r0, r0, ip, lsr r2
   268a4:	andeq	r0, r0, ip, lsr r2
   268a8:	andeq	r0, r0, ip, lsr r2
   268ac:	andeq	r0, r0, ip, lsr r2
   268b0:	andeq	r0, r0, ip, lsr r2
   268b4:	andeq	r0, r0, r0, lsr r2
   268b8:	andeq	r0, r0, ip, lsr r2
   268bc:	andeq	r0, r0, r0, lsr r2
   268c0:	andeq	r0, r0, ip, lsr r2
   268c4:	andeq	r0, r0, ip, lsr r2
   268c8:	andeq	r0, r0, ip, lsr r2
   268cc:	andeq	r0, r0, ip, lsr r2
   268d0:	andeq	r0, r0, r0, lsr r2
   268d4:	andeq	r0, r0, ip, lsr r2
   268d8:	andeq	r0, r0, r0, lsr r2
   268dc:	andeq	r0, r0, ip, lsr r2
   268e0:	andeq	r0, r0, ip, lsr r2
   268e4:	andeq	r0, r0, ip, lsr r2
   268e8:	andeq	r0, r0, r0, lsr r2
   268ec:	andeq	r0, r0, ip, lsr r2
   268f0:	andeq	r0, r0, ip, lsr r2
   268f4:	andeq	r0, r0, ip, lsr r2
   268f8:	andeq	r0, r0, ip, lsr r2
   268fc:	andeq	r0, r0, r0, lsr r2
   26900:	andeq	r0, r0, ip, lsr r2
   26904:	andeq	r0, r0, ip, lsr r2
   26908:	andeq	r0, r0, ip, lsr r2
   2690c:	andeq	r0, r0, r0, lsr r2
   26910:	andeq	r0, r0, ip, lsr r2
   26914:	andeq	r0, r0, ip, lsr r2
   26918:	andeq	r0, r0, r0, lsr r2
   2691c:	andeq	r0, r0, ip, lsr r2
   26920:	andeq	r0, r0, ip, lsr r2
   26924:	andeq	r0, r0, ip, lsr r2
   26928:	andeq	r0, r0, ip, lsr r2
   2692c:	andeq	r0, r0, ip, lsr r2
   26930:	andeq	r0, r0, ip, lsr r2
   26934:	andeq	r0, r0, r0, lsr r2
   26938:	andeq	r0, r0, r0, lsr r2
   2693c:	andeq	r0, r0, ip, lsr r2
   26940:	andeq	r0, r0, ip, lsr r2
   26944:	andeq	r0, r0, ip, lsr r2
   26948:	andeq	r0, r0, ip, lsr r2
   2694c:	andeq	r0, r0, r0, lsr r2
   26950:	andeq	r0, r0, ip, lsr r2
   26954:	andeq	r0, r0, r0, lsr r2
   26958:	andeq	r0, r0, r0, lsr r2
   2695c:	andeq	r0, r0, r0, lsr r2
   26960:	andeq	r0, r0, ip, lsr r2
   26964:	andeq	r0, r0, r0, lsr r2
   26968:	andeq	r0, r0, ip, lsr r2
   2696c:	andeq	r0, r0, r0, lsr r2
   26970:	andeq	r0, r0, ip, lsr r2
   26974:	andeq	r0, r0, r0, lsr r2
   26978:	andeq	r0, r0, ip, lsr r2
   2697c:	andeq	r0, r0, ip, lsr r2
   26980:	andeq	r0, r0, ip, lsr r2
   26984:	andeq	r0, r0, ip, lsr r2
   26988:	andeq	r0, r0, ip, lsr r2
   2698c:	andeq	r0, r0, ip, lsr r2
   26990:	andeq	r0, r0, ip, lsr r2
   26994:	andeq	r0, r0, ip, lsr r2
   26998:	andeq	r0, r0, ip, lsr r2
   2699c:	andeq	r0, r0, ip, lsr r2
   269a0:	andeq	r0, r0, ip, lsr r2
   269a4:	andeq	r0, r0, r0, lsr r2
   269a8:	andeq	r0, r0, r0, lsr r2
   269ac:	andeq	r0, r0, r0, lsr r2
   269b0:	andeq	r0, r0, r0, lsr r2
   269b4:	ldr	r0, [r4, #88]	; 0x58
   269b8:	cmp	r0, #0
   269bc:	beq	26a28 <myhtml_insertion_mode_in_foreign_content@@Base+0x2e0>
   269c0:	mov	r0, r4
   269c4:	mov	r1, r5
   269c8:	pop	{r4, r5, r6, sl, fp, lr}
   269cc:	b	26628 <myhtml_insertion_mode_in_foreign_content_start_other@@Base>
   269d0:	mov	r0, r4
   269d4:	bl	11514 <myhtml_tree_current_node@plt>
   269d8:	ldr	r2, [r5]
   269dc:	cmp	r2, #112	; 0x70
   269e0:	ldreq	r1, [r0, #4]
   269e4:	cmpeq	r1, #112	; 0x70
   269e8:	beq	26ab4 <myhtml_insertion_mode_in_foreign_content@@Base+0x36c>
   269ec:	ldr	r1, [r4, #128]	; 0x80
   269f0:	ldr	r0, [r1, #4]
   269f4:	cmp	r0, #0
   269f8:	ldrne	r0, [r1]
   269fc:	ldrne	r3, [r1, #4]
   26a00:	subsne	r1, r3, #1
   26a04:	bne	26a84 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   26a08:	ldr	r0, [r4]
   26a0c:	ldr	r1, [r4, #168]	; 0xa8
   26a10:	ldr	r0, [r0, #28]
   26a14:	ldr	r2, [r0, r1, lsl #2]
   26a18:	mov	r0, r4
   26a1c:	mov	r1, r5
   26a20:	pop	{r4, r5, r6, sl, fp, lr}
   26a24:	bx	r2
   26a28:	mov	r6, #1
   26a2c:	mov	r0, r4
   26a30:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   26a34:	mov	r0, r4
   26a38:	bl	11514 <myhtml_tree_current_node@plt>
   26a3c:	cmp	r0, #0
   26a40:	beq	26a7c <myhtml_insertion_mode_in_foreign_content@@Base+0x334>
   26a44:	mov	r5, r0
   26a48:	mov	r0, r4
   26a4c:	mov	r1, r5
   26a50:	bl	11100 <myhtml_tree_is_mathml_integration_point@plt>
   26a54:	cmp	r0, #0
   26a58:	bne	26a7c <myhtml_insertion_mode_in_foreign_content@@Base+0x334>
   26a5c:	mov	r0, r4
   26a60:	mov	r1, r5
   26a64:	bl	11238 <myhtml_tree_is_html_integration_point@plt>
   26a68:	cmp	r0, #0
   26a6c:	bne	26a7c <myhtml_insertion_mode_in_foreign_content@@Base+0x334>
   26a70:	ldr	r0, [r5, #8]
   26a74:	cmp	r0, #1
   26a78:	bne	26a2c <myhtml_insertion_mode_in_foreign_content@@Base+0x2e4>
   26a7c:	mov	r0, r6
   26a80:	pop	{r4, r5, r6, sl, fp, pc}
   26a84:	ldr	r1, [r0, r1, lsl #2]
   26a88:	rsb	r3, r3, #2
   26a8c:	ldr	r6, [r1, #4]
   26a90:	cmp	r6, r2
   26a94:	beq	26ad4 <myhtml_insertion_mode_in_foreign_content@@Base+0x38c>
   26a98:	cmp	r3, #0
   26a9c:	ldrne	r1, [r0, -r3, lsl #2]
   26aa0:	addne	r3, r3, #1
   26aa4:	ldrne	r6, [r1, #8]
   26aa8:	cmpne	r6, #1
   26aac:	bne	26a8c <myhtml_insertion_mode_in_foreign_content@@Base+0x344>
   26ab0:	b	26a08 <myhtml_insertion_mode_in_foreign_content@@Base+0x2c0>
   26ab4:	ldr	r0, [r0, #8]
   26ab8:	cmp	r0, #3
   26abc:	bne	269ec <myhtml_insertion_mode_in_foreign_content@@Base+0x2a4>
   26ac0:	mov	r0, r4
   26ac4:	bl	111f0 <myhtml_tree_open_elements_pop@plt>
   26ac8:	mov	r6, #0
   26acc:	mov	r0, r6
   26ad0:	pop	{r4, r5, r6, sl, fp, pc}
   26ad4:	mov	r0, r4
   26ad8:	mov	r2, #0
   26adc:	mov	r6, #0
   26ae0:	bl	111a8 <myhtml_tree_open_elements_pop_until_by_node@plt>
   26ae4:	mov	r0, r6
   26ae8:	pop	{r4, r5, r6, sl, fp, pc}
   26aec:	ldr	r0, [r5, #48]	; 0x30
   26af0:	tst	r0, #2048	; 0x800
   26af4:	beq	26b10 <myhtml_insertion_mode_in_foreign_content@@Base+0x3c8>
   26af8:	ldr	r0, [r4, #8]
   26afc:	mov	r1, r5
   26b00:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   26b04:	mov	r0, r4
   26b08:	mov	r1, r5
   26b0c:	bl	112e0 <myhtml_token_set_replacement_character_for_null_token@plt>
   26b10:	mov	r0, r4
   26b14:	mov	r1, r5
   26b18:	bl	11058 <myhtml_tree_node_insert_text@plt>
   26b1c:	ldr	r0, [r5, #48]	; 0x30
   26b20:	tst	r0, #8
   26b24:	bne	26a7c <myhtml_insertion_mode_in_foreign_content@@Base+0x334>
   26b28:	ldr	r0, [r4, #180]	; 0xb4
   26b2c:	ldr	r1, [r4, #180]	; 0xb4
   26b30:	and	r0, r0, #2
   26b34:	eor	r0, r1, r0
   26b38:	str	r0, [r4, #180]	; 0xb4
   26b3c:	mov	r0, r6
   26b40:	pop	{r4, r5, r6, sl, fp, pc}
   26b44:	mov	r0, r4
   26b48:	mov	r1, r5
   26b4c:	mov	r2, #0
   26b50:	mov	r6, #0
   26b54:	bl	11268 <myhtml_tree_node_insert_comment@plt>
   26b58:	mov	r0, r6
   26b5c:	pop	{r4, r5, r6, sl, fp, pc}
   26b60:	ldr	r0, [r4, #8]
   26b64:	mov	r1, r5
   26b68:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   26b6c:	ldr	r1, [pc, #80]	; 26bc4 <myhtml_insertion_mode_in_foreign_content@@Base+0x47c>
   26b70:	mov	r0, r5
   26b74:	mov	r2, #5
   26b78:	add	r1, pc, r1
   26b7c:	bl	11b38 <myhtml_token_attr_by_name@plt>
   26b80:	cmp	r0, #0
   26b84:	bne	269b4 <myhtml_insertion_mode_in_foreign_content@@Base+0x26c>
   26b88:	ldr	r1, [pc, #56]	; 26bc8 <myhtml_insertion_mode_in_foreign_content@@Base+0x480>
   26b8c:	mov	r0, r5
   26b90:	mov	r2, #4
   26b94:	add	r1, pc, r1
   26b98:	bl	11b38 <myhtml_token_attr_by_name@plt>
   26b9c:	cmp	r0, #0
   26ba0:	bne	269b4 <myhtml_insertion_mode_in_foreign_content@@Base+0x26c>
   26ba4:	ldr	r1, [pc, #32]	; 26bcc <myhtml_insertion_mode_in_foreign_content@@Base+0x484>
   26ba8:	mov	r0, r5
   26bac:	mov	r2, #4
   26bb0:	add	r1, pc, r1
   26bb4:	bl	11b38 <myhtml_token_attr_by_name@plt>
   26bb8:	cmp	r0, #0
   26bbc:	bne	269b4 <myhtml_insertion_mode_in_foreign_content@@Base+0x26c>
   26bc0:	b	269c0 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   26bc4:	strdeq	fp, [sp], -r6
   26bc8:			; <UNDEFINED> instruction: 0x000dc1bf
   26bcc:	andeq	fp, sp, r4, asr #23

00026bd0 <myhtml_rules_check_for_first_newline@@Base>:
   26bd0:	push	{r4, r5, r6, sl, fp, lr}
   26bd4:	add	fp, sp, #16
   26bd8:	mov	r5, r0
   26bdc:	ldr	r0, [r0, #180]	; 0xb4
   26be0:	mov	r4, #0
   26be4:	tst	r0, #64	; 0x40
   26be8:	beq	26c60 <myhtml_rules_check_for_first_newline@@Base+0x90>
   26bec:	ldr	r0, [r5, #180]	; 0xb4
   26bf0:	tst	r0, #128	; 0x80
   26bf4:	beq	26c4c <myhtml_rules_check_for_first_newline@@Base+0x7c>
   26bf8:	ldr	r0, [r1]
   26bfc:	mov	r6, r1
   26c00:	cmp	r0, #1
   26c04:	bne	26c4c <myhtml_rules_check_for_first_newline@@Base+0x7c>
   26c08:	ldr	r0, [r5, #8]
   26c0c:	mov	r1, r6
   26c10:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   26c14:	ldr	r0, [r6, #12]
   26c18:	cmp	r0, #0
   26c1c:	beq	26c7c <myhtml_rules_check_for_first_newline@@Base+0xac>
   26c20:	ldr	r0, [r6, #4]
   26c24:	ldrb	r1, [r0]
   26c28:	cmp	r1, #10
   26c2c:	bne	26c4c <myhtml_rules_check_for_first_newline@@Base+0x7c>
   26c30:	mov	r1, #1
   26c34:	bl	1197c <mchar_async_crop_first_chars_without_cache@plt>
   26c38:	str	r0, [r6, #4]
   26c3c:	ldr	r0, [r6, #12]
   26c40:	subs	r0, r0, #1
   26c44:	str	r0, [r6, #12]
   26c48:	beq	26c68 <myhtml_rules_check_for_first_newline@@Base+0x98>
   26c4c:	ldr	r0, [r5, #180]	; 0xb4
   26c50:	ldr	r1, [r5, #180]	; 0xb4
   26c54:	and	r0, r0, #64	; 0x40
   26c58:	eor	r0, r1, r0
   26c5c:	str	r0, [r5, #180]	; 0xb4
   26c60:	mov	r0, r4
   26c64:	pop	{r4, r5, r6, sl, fp, pc}
   26c68:	ldr	r0, [r5, #180]	; 0xb4
   26c6c:	ldr	r1, [r5, #180]	; 0xb4
   26c70:	and	r0, r0, #64	; 0x40
   26c74:	eor	r0, r1, r0
   26c78:	str	r0, [r5, #180]	; 0xb4
   26c7c:	mov	r4, #1
   26c80:	mov	r0, r4
   26c84:	pop	{r4, r5, r6, sl, fp, pc}

00026c88 <myhtml_rules_tree_dispatcher@@Base>:
   26c88:	push	{r4, r5, r6, sl, fp, lr}
   26c8c:	add	fp, sp, #16
   26c90:	mov	r5, r0
   26c94:	ldr	r0, [r0, #180]	; 0xb4
   26c98:	mov	r4, r1
   26c9c:	tst	r0, #64	; 0x40
   26ca0:	beq	26d14 <myhtml_rules_tree_dispatcher@@Base+0x8c>
   26ca4:	ldr	r0, [r5, #180]	; 0xb4
   26ca8:	tst	r0, #128	; 0x80
   26cac:	beq	26d00 <myhtml_rules_tree_dispatcher@@Base+0x78>
   26cb0:	ldr	r0, [r4]
   26cb4:	cmp	r0, #1
   26cb8:	bne	26d00 <myhtml_rules_tree_dispatcher@@Base+0x78>
   26cbc:	ldr	r0, [r5, #8]
   26cc0:	mov	r1, r4
   26cc4:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   26cc8:	ldr	r0, [r4, #12]
   26ccc:	cmp	r0, #0
   26cd0:	beq	26d74 <myhtml_rules_tree_dispatcher@@Base+0xec>
   26cd4:	ldr	r0, [r4, #4]
   26cd8:	ldrb	r1, [r0]
   26cdc:	cmp	r1, #10
   26ce0:	bne	26d00 <myhtml_rules_tree_dispatcher@@Base+0x78>
   26ce4:	mov	r1, #1
   26ce8:	bl	1197c <mchar_async_crop_first_chars_without_cache@plt>
   26cec:	str	r0, [r4, #4]
   26cf0:	ldr	r0, [r4, #12]
   26cf4:	subs	r0, r0, #1
   26cf8:	str	r0, [r4, #12]
   26cfc:	beq	26e2c <myhtml_rules_tree_dispatcher@@Base+0x1a4>
   26d00:	ldr	r0, [r5, #180]	; 0xb4
   26d04:	ldr	r1, [r5, #180]	; 0xb4
   26d08:	and	r0, r0, #64	; 0x40
   26d0c:	eor	r0, r1, r0
   26d10:	str	r0, [r5, #180]	; 0xb4
   26d14:	ldr	r0, [r5, #164]	; 0xa4
   26d18:	cmp	r0, #0
   26d1c:	movne	r0, #0
   26d20:	strne	r0, [r5, #164]	; 0xa4
   26d24:	mov	r0, r5
   26d28:	bl	11a30 <myhtml_tree_adjusted_current_node@plt>
   26d2c:	mov	r6, r0
   26d30:	ldr	r0, [r5, #128]	; 0x80
   26d34:	ldr	r0, [r0, #4]
   26d38:	cmp	r0, #0
   26d3c:	ldrne	r0, [r6, #8]
   26d40:	cmpne	r0, #1
   26d44:	bne	26d80 <myhtml_rules_tree_dispatcher@@Base+0xf8>
   26d48:	ldr	r0, [r5]
   26d4c:	ldr	r1, [r5, #168]	; 0xa8
   26d50:	ldr	r0, [r0, #28]
   26d54:	ldr	r2, [r0, r1, lsl #2]
   26d58:	mov	r0, r5
   26d5c:	mov	r1, r4
   26d60:	blx	r2
   26d64:	mov	r1, r0
   26d68:	mov	r0, #1
   26d6c:	cmp	r1, #0
   26d70:	popne	{r4, r5, r6, sl, fp, pc}
   26d74:	mov	r0, #0
   26d78:	str	r4, [r5, #152]	; 0x98
   26d7c:	pop	{r4, r5, r6, sl, fp, pc}
   26d80:	mov	r0, r5
   26d84:	mov	r1, r6
   26d88:	bl	11100 <myhtml_tree_is_mathml_integration_point@plt>
   26d8c:	cmp	r0, #0
   26d90:	beq	26da4 <myhtml_rules_tree_dispatcher@@Base+0x11c>
   26d94:	ldr	r0, [r4]
   26d98:	cmp	r0, #221	; 0xdd
   26d9c:	cmpne	r0, #226	; 0xe2
   26da0:	bne	26e0c <myhtml_rules_tree_dispatcher@@Base+0x184>
   26da4:	ldr	r0, [r6, #4]
   26da8:	cmp	r0, #8
   26dac:	bne	26dc4 <myhtml_rules_tree_dispatcher@@Base+0x13c>
   26db0:	ldr	r0, [r6, #8]
   26db4:	cmp	r0, #2
   26db8:	ldreq	r0, [r4]
   26dbc:	cmpeq	r0, #124	; 0x7c
   26dc0:	beq	26e1c <myhtml_rules_tree_dispatcher@@Base+0x194>
   26dc4:	mov	r0, r5
   26dc8:	mov	r1, r6
   26dcc:	bl	11238 <myhtml_tree_is_html_integration_point@plt>
   26dd0:	cmp	r0, #0
   26dd4:	beq	26df0 <myhtml_rules_tree_dispatcher@@Base+0x168>
   26dd8:	ldr	r0, [r4, #48]	; 0x30
   26ddc:	tst	r0, #1
   26de0:	ldrne	r0, [r4]
   26de4:	cmpne	r0, #1
   26de8:	beq	26d48 <myhtml_rules_tree_dispatcher@@Base+0xc0>
   26dec:	b	26df4 <myhtml_rules_tree_dispatcher@@Base+0x16c>
   26df0:	ldr	r0, [r4]
   26df4:	cmp	r0, #251	; 0xfb
   26df8:	beq	26d48 <myhtml_rules_tree_dispatcher@@Base+0xc0>
   26dfc:	mov	r0, r5
   26e00:	mov	r1, r4
   26e04:	bl	10f5c <myhtml_insertion_mode_in_foreign_content@plt>
   26e08:	b	26d64 <myhtml_rules_tree_dispatcher@@Base+0xdc>
   26e0c:	ldr	r0, [r4, #48]	; 0x30
   26e10:	tst	r0, #1
   26e14:	beq	26d48 <myhtml_rules_tree_dispatcher@@Base+0xc0>
   26e18:	b	26da4 <myhtml_rules_tree_dispatcher@@Base+0x11c>
   26e1c:	ldr	r0, [r4, #48]	; 0x30
   26e20:	tst	r0, #1
   26e24:	beq	26d48 <myhtml_rules_tree_dispatcher@@Base+0xc0>
   26e28:	b	26dc4 <myhtml_rules_tree_dispatcher@@Base+0x13c>
   26e2c:	ldr	r0, [r5, #180]	; 0xb4
   26e30:	ldr	r1, [r5, #180]	; 0xb4
   26e34:	and	r0, r0, #64	; 0x40
   26e38:	eor	r0, r1, r0
   26e3c:	str	r0, [r5, #180]	; 0xb4
   26e40:	mov	r0, #0
   26e44:	str	r4, [r5, #152]	; 0x98
   26e48:	pop	{r4, r5, r6, sl, fp, pc}

00026e4c <myhtml_rules_init@@Base>:
   26e4c:	push	{r4, sl, fp, lr}
   26e50:	add	fp, sp, #8
   26e54:	mov	r4, r0
   26e58:	mov	r0, #92	; 0x5c
   26e5c:	bl	119ac <mycore_malloc@plt>
   26e60:	cmp	r0, #0
   26e64:	str	r0, [r4, #28]!
   26e68:	movweq	r0, #36964	; 0x9064
   26e6c:	popeq	{r4, sl, fp, pc}
   26e70:	ldr	r1, [pc, #364]	; 26fe4 <myhtml_rules_init@@Base+0x198>
   26e74:	ldr	r1, [pc, r1]
   26e78:	str	r1, [r0]
   26e7c:	ldr	r0, [r4]
   26e80:	ldr	r1, [pc, #352]	; 26fe8 <myhtml_rules_init@@Base+0x19c>
   26e84:	ldr	r1, [pc, r1]
   26e88:	str	r1, [r0, #4]
   26e8c:	ldr	r0, [r4]
   26e90:	ldr	r1, [pc, #340]	; 26fec <myhtml_rules_init@@Base+0x1a0>
   26e94:	ldr	r1, [pc, r1]
   26e98:	str	r1, [r0, #8]
   26e9c:	ldr	r0, [r4]
   26ea0:	ldr	r1, [pc, #328]	; 26ff0 <myhtml_rules_init@@Base+0x1a4>
   26ea4:	ldr	r1, [pc, r1]
   26ea8:	str	r1, [r0, #12]
   26eac:	ldr	r0, [r4]
   26eb0:	ldr	r1, [pc, #316]	; 26ff4 <myhtml_rules_init@@Base+0x1a8>
   26eb4:	ldr	r1, [pc, r1]
   26eb8:	str	r1, [r0, #16]
   26ebc:	ldr	r0, [r4]
   26ec0:	ldr	r1, [pc, #304]	; 26ff8 <myhtml_rules_init@@Base+0x1ac>
   26ec4:	ldr	r1, [pc, r1]
   26ec8:	str	r1, [r0, #20]
   26ecc:	ldr	r0, [r4]
   26ed0:	ldr	r1, [pc, #292]	; 26ffc <myhtml_rules_init@@Base+0x1b0>
   26ed4:	ldr	r1, [pc, r1]
   26ed8:	str	r1, [r0, #24]
   26edc:	ldr	r0, [r4]
   26ee0:	ldr	r1, [pc, #280]	; 27000 <myhtml_rules_init@@Base+0x1b4>
   26ee4:	ldr	r1, [pc, r1]
   26ee8:	str	r1, [r0, #28]
   26eec:	ldr	r0, [r4]
   26ef0:	ldr	r1, [pc, #268]	; 27004 <myhtml_rules_init@@Base+0x1b8>
   26ef4:	ldr	r1, [pc, r1]
   26ef8:	str	r1, [r0, #32]
   26efc:	ldr	r0, [r4]
   26f00:	ldr	r1, [pc, #256]	; 27008 <myhtml_rules_init@@Base+0x1bc>
   26f04:	ldr	r1, [pc, r1]
   26f08:	str	r1, [r0, #36]	; 0x24
   26f0c:	ldr	r0, [r4]
   26f10:	ldr	r1, [pc, #244]	; 2700c <myhtml_rules_init@@Base+0x1c0>
   26f14:	ldr	r1, [pc, r1]
   26f18:	str	r1, [r0, #40]	; 0x28
   26f1c:	ldr	r0, [r4]
   26f20:	ldr	r1, [pc, #232]	; 27010 <myhtml_rules_init@@Base+0x1c4>
   26f24:	ldr	r1, [pc, r1]
   26f28:	str	r1, [r0, #44]	; 0x2c
   26f2c:	ldr	r0, [r4]
   26f30:	ldr	r1, [pc, #220]	; 27014 <myhtml_rules_init@@Base+0x1c8>
   26f34:	ldr	r1, [pc, r1]
   26f38:	str	r1, [r0, #48]	; 0x30
   26f3c:	ldr	r0, [r4]
   26f40:	ldr	r1, [pc, #208]	; 27018 <myhtml_rules_init@@Base+0x1cc>
   26f44:	ldr	r1, [pc, r1]
   26f48:	str	r1, [r0, #52]	; 0x34
   26f4c:	ldr	r0, [r4]
   26f50:	ldr	r1, [pc, #196]	; 2701c <myhtml_rules_init@@Base+0x1d0>
   26f54:	ldr	r1, [pc, r1]
   26f58:	str	r1, [r0, #56]	; 0x38
   26f5c:	ldr	r0, [r4]
   26f60:	ldr	r1, [pc, #184]	; 27020 <myhtml_rules_init@@Base+0x1d4>
   26f64:	ldr	r1, [pc, r1]
   26f68:	str	r1, [r0, #60]	; 0x3c
   26f6c:	ldr	r0, [r4]
   26f70:	ldr	r1, [pc, #172]	; 27024 <myhtml_rules_init@@Base+0x1d8>
   26f74:	ldr	r1, [pc, r1]
   26f78:	str	r1, [r0, #64]	; 0x40
   26f7c:	ldr	r0, [r4]
   26f80:	ldr	r1, [pc, #160]	; 27028 <myhtml_rules_init@@Base+0x1dc>
   26f84:	ldr	r1, [pc, r1]
   26f88:	str	r1, [r0, #68]	; 0x44
   26f8c:	ldr	r0, [r4]
   26f90:	ldr	r1, [pc, #148]	; 2702c <myhtml_rules_init@@Base+0x1e0>
   26f94:	ldr	r1, [pc, r1]
   26f98:	str	r1, [r0, #72]	; 0x48
   26f9c:	ldr	r0, [r4]
   26fa0:	ldr	r1, [pc, #136]	; 27030 <myhtml_rules_init@@Base+0x1e4>
   26fa4:	ldr	r1, [pc, r1]
   26fa8:	str	r1, [r0, #76]	; 0x4c
   26fac:	ldr	r0, [r4]
   26fb0:	ldr	r1, [pc, #124]	; 27034 <myhtml_rules_init@@Base+0x1e8>
   26fb4:	ldr	r1, [pc, r1]
   26fb8:	str	r1, [r0, #80]	; 0x50
   26fbc:	ldr	r0, [r4]
   26fc0:	ldr	r1, [pc, #112]	; 27038 <myhtml_rules_init@@Base+0x1ec>
   26fc4:	ldr	r1, [pc, r1]
   26fc8:	str	r1, [r0, #84]	; 0x54
   26fcc:	ldr	r0, [r4]
   26fd0:	ldr	r1, [pc, #100]	; 2703c <myhtml_rules_init@@Base+0x1f0>
   26fd4:	ldr	r1, [pc, r1]
   26fd8:	str	r1, [r0, #88]	; 0x58
   26fdc:	mov	r0, #0
   26fe0:	pop	{r4, sl, fp, pc}
   26fe4:			; <UNDEFINED> instruction: 0x000f57bc
   26fe8:	ldrdeq	r5, [pc], -r8
   26fec:	ldrdeq	r5, [pc], -r4
   26ff0:	andeq	r5, pc, r0, lsl r7	; <UNPREDICTABLE>
   26ff4:	andeq	r5, pc, r4, asr r8	; <UNPREDICTABLE>
   26ff8:	andeq	r5, pc, r0, ror r8	; <UNPREDICTABLE>
   26ffc:	andeq	r5, pc, ip, asr #15
   27000:	andeq	r5, pc, r4, lsr #14
   27004:	strdeq	r5, [pc], -r0
   27008:	andeq	r5, pc, r8, ror #15
   2700c:	andeq	r5, pc, r8, lsl r8	; <UNPREDICTABLE>
   27010:	strdeq	r5, [pc], -r8
   27014:	strdeq	r5, [pc], -r0
   27018:	andeq	r5, pc, ip, ror #12
   2701c:	andeq	r5, pc, r8, asr r8	; <UNPREDICTABLE>
   27020:	ldrdeq	r5, [pc], -ip
   27024:	andeq	r5, pc, r0, lsr r7	; <UNPREDICTABLE>
   27028:	andeq	r5, pc, r4, ror #11
   2702c:	andeq	r5, pc, r0, asr #16
   27030:	ldrdeq	r5, [pc], -r4
   27034:	andeq	r5, pc, r8, ror r5	; <UNPREDICTABLE>
   27038:	andeq	r5, pc, r4, ror #10
   2703c:	andeq	r5, pc, r4, asr r6	; <UNPREDICTABLE>

00027040 <myhtml_serialization@@Base>:
   27040:	push	{r4, r5, r6, sl, fp, lr}
   27044:	add	fp, sp, #16
   27048:	cmp	r1, #0
   2704c:	moveq	r0, #0
   27050:	popeq	{r4, r5, r6, sl, fp, pc}
   27054:	mov	r5, r0
   27058:	ldr	r0, [r1]
   2705c:	mov	r4, r1
   27060:	cmp	r0, #0
   27064:	bne	27090 <myhtml_serialization@@Base+0x50>
   27068:	mov	r6, #0
   2706c:	movw	r0, #20490	; 0x500a
   27070:	stmib	r4, {r0, r6}
   27074:	movw	r0, #20490	; 0x500a
   27078:	bl	119ac <mycore_malloc@plt>
   2707c:	cmp	r0, #0
   27080:	str	r0, [r4]
   27084:	moveq	r0, #2
   27088:	streq	r6, [r4, #4]
   2708c:	popeq	{r4, r5, r6, sl, fp, pc}
   27090:	ldr	r1, [pc, #16]	; 270a8 <myhtml_serialization@@Base+0x68>
   27094:	mov	r0, r5
   27098:	mov	r2, r4
   2709c:	ldr	r1, [pc, r1]
   270a0:	pop	{r4, r5, r6, sl, fp, lr}
   270a4:	b	271f0 <myhtml_serialization_tree_callback@@Base>
   270a8:	andeq	r5, pc, r4, lsl r6	; <UNPREDICTABLE>

000270ac <myhtml_serialization_tree_buffer@@Base>:
   270ac:	push	{r4, r5, r6, sl, fp, lr}
   270b0:	add	fp, sp, #16
   270b4:	cmp	r1, #0
   270b8:	moveq	r0, #0
   270bc:	popeq	{r4, r5, r6, sl, fp, pc}
   270c0:	mov	r5, r0
   270c4:	ldr	r0, [r1]
   270c8:	mov	r4, r1
   270cc:	cmp	r0, #0
   270d0:	bne	270fc <myhtml_serialization_tree_buffer@@Base+0x50>
   270d4:	mov	r6, #0
   270d8:	movw	r0, #20490	; 0x500a
   270dc:	stmib	r4, {r0, r6}
   270e0:	movw	r0, #20490	; 0x500a
   270e4:	bl	119ac <mycore_malloc@plt>
   270e8:	cmp	r0, #0
   270ec:	str	r0, [r4]
   270f0:	moveq	r0, #2
   270f4:	streq	r6, [r4, #4]
   270f8:	popeq	{r4, r5, r6, sl, fp, pc}
   270fc:	ldr	r1, [pc, #16]	; 27114 <myhtml_serialization_tree_buffer@@Base+0x68>
   27100:	mov	r0, r5
   27104:	mov	r2, r4
   27108:	ldr	r1, [pc, r1]
   2710c:	pop	{r4, r5, r6, sl, fp, lr}
   27110:	b	271f0 <myhtml_serialization_tree_callback@@Base>
   27114:	andeq	r5, pc, r8, lsr #11

00027118 <myhtml_serialization_node@@Base>:
   27118:	push	{r4, r5, r6, sl, fp, lr}
   2711c:	add	fp, sp, #16
   27120:	cmp	r1, #0
   27124:	beq	27178 <myhtml_serialization_node@@Base+0x60>
   27128:	mov	r5, r0
   2712c:	ldr	r0, [r1]
   27130:	mov	r4, r1
   27134:	cmp	r0, #0
   27138:	bne	2715c <myhtml_serialization_node@@Base+0x44>
   2713c:	mov	r6, #0
   27140:	mov	r0, #2048	; 0x800
   27144:	stmib	r4, {r0, r6}
   27148:	mov	r0, #2048	; 0x800
   2714c:	bl	119ac <mycore_malloc@plt>
   27150:	cmp	r0, #0
   27154:	str	r0, [r4]
   27158:	beq	27174 <myhtml_serialization_node@@Base+0x5c>
   2715c:	ldr	r1, [pc, #28]	; 27180 <myhtml_serialization_node@@Base+0x68>
   27160:	mov	r0, r5
   27164:	mov	r2, r4
   27168:	ldr	r1, [pc, r1]
   2716c:	pop	{r4, r5, r6, sl, fp, lr}
   27170:	b	272fc <myhtml_serialization_node_callback@@Base>
   27174:	str	r6, [r4, #4]
   27178:	mov	r0, #0
   2717c:	pop	{r4, r5, r6, sl, fp, pc}
   27180:	andeq	r5, pc, r8, asr #10

00027184 <myhtml_serialization_node_buffer@@Base>:
   27184:	push	{r4, r5, r6, sl, fp, lr}
   27188:	add	fp, sp, #16
   2718c:	cmp	r1, #0
   27190:	beq	271e4 <myhtml_serialization_node_buffer@@Base+0x60>
   27194:	mov	r5, r0
   27198:	ldr	r0, [r1]
   2719c:	mov	r4, r1
   271a0:	cmp	r0, #0
   271a4:	bne	271c8 <myhtml_serialization_node_buffer@@Base+0x44>
   271a8:	mov	r6, #0
   271ac:	mov	r0, #2048	; 0x800
   271b0:	stmib	r4, {r0, r6}
   271b4:	mov	r0, #2048	; 0x800
   271b8:	bl	119ac <mycore_malloc@plt>
   271bc:	cmp	r0, #0
   271c0:	str	r0, [r4]
   271c4:	beq	271e0 <myhtml_serialization_node_buffer@@Base+0x5c>
   271c8:	ldr	r1, [pc, #28]	; 271ec <myhtml_serialization_node_buffer@@Base+0x68>
   271cc:	mov	r0, r5
   271d0:	mov	r2, r4
   271d4:	ldr	r1, [pc, r1]
   271d8:	pop	{r4, r5, r6, sl, fp, lr}
   271dc:	b	272fc <myhtml_serialization_node_callback@@Base>
   271e0:	str	r6, [r4, #4]
   271e4:	mov	r0, #0
   271e8:	pop	{r4, r5, r6, sl, fp, pc}
   271ec:	ldrdeq	r5, [pc], -ip

000271f0 <myhtml_serialization_tree_callback@@Base>:
   271f0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   271f4:	add	fp, sp, #24
   271f8:	cmp	r0, #0
   271fc:	beq	272f0 <myhtml_serialization_tree_callback@@Base+0x100>
   27200:	mov	r7, r0
   27204:	ldr	r0, [r0, #40]	; 0x28
   27208:	mov	r9, r2
   2720c:	mov	r5, r1
   27210:	mov	r6, r7
   27214:	cmp	r0, #0
   27218:	beq	27238 <myhtml_serialization_tree_callback@@Base+0x48>
   2721c:	ldr	r0, [r0, #84]	; 0x54
   27220:	mov	r6, r7
   27224:	cmp	r0, r7
   27228:	bne	27238 <myhtml_serialization_tree_callback@@Base+0x48>
   2722c:	ldr	r6, [r7, #20]
   27230:	cmp	r6, #0
   27234:	beq	272f0 <myhtml_serialization_tree_callback@@Base+0x100>
   27238:	mov	r8, #2
   2723c:	mov	r0, r6
   27240:	mov	r1, r5
   27244:	mov	r2, r9
   27248:	bl	115bc <myhtml_serialization_node_callback@plt>
   2724c:	cmp	r0, #0
   27250:	bne	272e8 <myhtml_serialization_tree_callback@@Base+0xf8>
   27254:	ldr	r0, [r6, #20]
   27258:	cmp	r0, #0
   2725c:	beq	27274 <myhtml_serialization_tree_callback@@Base+0x84>
   27260:	cmp	r0, #0
   27264:	mov	r6, r0
   27268:	bne	2723c <myhtml_serialization_tree_callback@@Base+0x4c>
   2726c:	b	272f0 <myhtml_serialization_tree_callback@@Base+0x100>
   27270:	ldr	r6, [r6, #24]
   27274:	cmp	r6, r7
   27278:	beq	272c0 <myhtml_serialization_tree_callback@@Base+0xd0>
   2727c:	ldr	r4, [r6, #16]
   27280:	mov	r0, r6
   27284:	mov	r1, r5
   27288:	mov	r2, r9
   2728c:	bl	27a5c <myhtml_serialization_node_callback@@Base+0x760>
   27290:	cmp	r4, #0
   27294:	bne	272a4 <myhtml_serialization_tree_callback@@Base+0xb4>
   27298:	cmp	r0, #0
   2729c:	beq	27270 <myhtml_serialization_tree_callback@@Base+0x80>
   272a0:	b	272e8 <myhtml_serialization_tree_callback@@Base+0xf8>
   272a4:	cmp	r0, #0
   272a8:	bne	272e8 <myhtml_serialization_tree_callback@@Base+0xf8>
   272ac:	ldr	r0, [r6, #16]
   272b0:	cmp	r0, #0
   272b4:	mov	r6, r0
   272b8:	bne	2723c <myhtml_serialization_tree_callback@@Base+0x4c>
   272bc:	b	272f0 <myhtml_serialization_tree_callback@@Base+0x100>
   272c0:	ldr	r0, [r7, #40]	; 0x28
   272c4:	ldr	r0, [r0, #84]	; 0x54
   272c8:	cmp	r0, r7
   272cc:	beq	272f0 <myhtml_serialization_tree_callback@@Base+0x100>
   272d0:	mov	r0, r7
   272d4:	mov	r1, r5
   272d8:	mov	r2, r9
   272dc:	bl	27a5c <myhtml_serialization_node_callback@@Base+0x760>
   272e0:	cmp	r0, #0
   272e4:	moveq	r8, #0
   272e8:	mov	r0, r8
   272ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   272f0:	mov	r8, #0
   272f4:	mov	r0, r8
   272f8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000272fc <myhtml_serialization_node_callback@@Base>:
   272fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27300:	add	fp, sp, #28
   27304:	sub	sp, sp, #12
   27308:	mov	r4, r1
   2730c:	ldr	r1, [r0, #4]
   27310:	mov	r5, r2
   27314:	mov	r7, r0
   27318:	cmp	r1, #3
   2731c:	beq	27448 <myhtml_serialization_node_callback@@Base+0x14c>
   27320:	cmp	r1, #2
   27324:	beq	274d8 <myhtml_serialization_node_callback@@Base+0x1dc>
   27328:	cmp	r1, #1
   2732c:	bne	2752c <myhtml_serialization_node_callback@@Base+0x230>
   27330:	ldr	r1, [r7, #32]
   27334:	cmp	r1, #0
   27338:	ldrne	r0, [r1, #4]
   2733c:	cmpne	r0, #0
   27340:	beq	27858 <myhtml_serialization_node_callback@@Base+0x55c>
   27344:	ldr	r2, [r7, #24]
   27348:	cmp	r2, #0
   2734c:	beq	2783c <myhtml_serialization_node_callback@@Base+0x540>
   27350:	ldr	r2, [r2, #4]
   27354:	sub	r3, r2, #91	; 0x5b
   27358:	cmp	r3, #52	; 0x34
   2735c:	bhi	27834 <myhtml_serialization_node_callback@@Base+0x538>
   27360:	add	r2, pc, #4
   27364:	ldr	r3, [r2, r3, lsl #2]
   27368:	add	pc, r2, r3
   2736c:	ldrdeq	r0, [r0], -r4
   27370:	ldrdeq	r0, [r0], -r4
   27374:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   27378:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2737c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   27380:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   27384:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   27388:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2738c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   27390:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   27394:	ldrdeq	r0, [r0], -r4
   27398:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2739c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   273a0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   273a4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   273a8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   273ac:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   273b0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   273b4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   273b8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   273bc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   273c0:	ldrdeq	r0, [r0], -r4
   273c4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   273c8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   273cc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   273d0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   273d4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   273d8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   273dc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   273e0:	ldrdeq	r0, [r0], -r4
   273e4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   273e8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   273ec:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   273f0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   273f4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   273f8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   273fc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   27400:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   27404:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   27408:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2740c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   27410:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   27414:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   27418:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2741c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   27420:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   27424:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   27428:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2742c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   27430:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   27434:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   27438:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2743c:	ldrdeq	r0, [r0], -r4
   27440:	ldr	r1, [r1, #12]
   27444:	b	275a0 <myhtml_serialization_node_callback@@Base+0x2a4>
   27448:	ldr	r0, [pc, #1460]	; 27a04 <myhtml_serialization_node_callback@@Base+0x708>
   2744c:	mov	r1, #9
   27450:	mov	r2, r5
   27454:	add	r0, pc, r0
   27458:	blx	r4
   2745c:	mov	r6, #2
   27460:	cmp	r0, #0
   27464:	bne	2785c <myhtml_serialization_node_callback@@Base+0x560>
   27468:	ldr	r0, [pc, #1432]	; 27a08 <myhtml_serialization_node_callback@@Base+0x70c>
   2746c:	mov	r1, #1
   27470:	mov	r2, r5
   27474:	add	r0, pc, r0
   27478:	blx	r4
   2747c:	cmp	r0, #0
   27480:	bne	2785c <myhtml_serialization_node_callback@@Base+0x560>
   27484:	ldr	r0, [r7, #32]
   27488:	cmp	r0, #0
   2748c:	ldrne	r7, [r0, #40]	; 0x28
   27490:	cmpne	r7, #0
   27494:	beq	274ac <myhtml_serialization_node_callback@@Base+0x1b0>
   27498:	ldr	r0, [r7, #8]
   2749c:	cmp	r0, #0
   274a0:	ldrne	r1, [r7, #16]
   274a4:	cmpne	r1, #0
   274a8:	bne	27868 <myhtml_serialization_node_callback@@Base+0x56c>
   274ac:	ldr	r0, [pc, #1396]	; 27a28 <myhtml_serialization_node_callback@@Base+0x72c>
   274b0:	mov	r1, #1
   274b4:	mov	r2, r5
   274b8:	add	r0, pc, r0
   274bc:	blx	r4
   274c0:	cmp	r0, #0
   274c4:	mov	r6, #2
   274c8:	moveq	r6, #0
   274cc:	mov	r0, r6
   274d0:	sub	sp, fp, #28
   274d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   274d8:	ldr	r0, [pc, #1308]	; 279fc <myhtml_serialization_node_callback@@Base+0x700>
   274dc:	mov	r1, #4
   274e0:	mov	r2, r5
   274e4:	add	r0, pc, r0
   274e8:	blx	r4
   274ec:	mov	r6, #2
   274f0:	cmp	r0, #0
   274f4:	bne	2785c <myhtml_serialization_node_callback@@Base+0x560>
   274f8:	ldr	r1, [r7, #32]
   274fc:	cmp	r1, #0
   27500:	ldrne	r0, [r1, #4]
   27504:	cmpne	r0, #0
   27508:	bne	275b8 <myhtml_serialization_node_callback@@Base+0x2bc>
   2750c:	ldr	r0, [pc, #1260]	; 27a00 <myhtml_serialization_node_callback@@Base+0x704>
   27510:	mov	r1, #3
   27514:	mov	r2, r5
   27518:	add	r0, pc, r0
   2751c:	blx	r4
   27520:	cmp	r0, #0
   27524:	bne	2785c <myhtml_serialization_node_callback@@Base+0x560>
   27528:	b	27858 <myhtml_serialization_node_callback@@Base+0x55c>
   2752c:	ldr	r0, [r7, #40]	; 0x28
   27530:	add	r2, sp, #4
   27534:	bl	1188c <myhtml_tag_name_by_id@plt>
   27538:	mov	r6, r0
   2753c:	ldr	r0, [pc, #1256]	; 27a2c <myhtml_serialization_node_callback@@Base+0x730>
   27540:	mov	r1, #1
   27544:	mov	r2, r5
   27548:	add	r0, pc, r0
   2754c:	blx	r4
   27550:	cmp	r0, #0
   27554:	bne	27570 <myhtml_serialization_node_callback@@Base+0x274>
   27558:	ldr	r1, [sp, #4]
   2755c:	mov	r0, r6
   27560:	mov	r2, r5
   27564:	blx	r4
   27568:	cmp	r0, #0
   2756c:	beq	27580 <myhtml_serialization_node_callback@@Base+0x284>
   27570:	mov	r6, #2
   27574:	mov	r0, r6
   27578:	sub	sp, fp, #28
   2757c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27580:	ldr	r0, [r7, #32]
   27584:	cmp	r0, #0
   27588:	ldrne	r6, [r0, #40]	; 0x28
   2758c:	cmpne	r6, #0
   27590:	bne	275d0 <myhtml_serialization_node_callback@@Base+0x2d4>
   27594:	ldr	r0, [pc, #1212]	; 27a58 <myhtml_serialization_node_callback@@Base+0x75c>
   27598:	mov	r1, #1
   2759c:	add	r0, pc, r0
   275a0:	mov	r2, r5
   275a4:	blx	r4
   275a8:	mov	r6, #2
   275ac:	cmp	r0, #0
   275b0:	bne	2785c <myhtml_serialization_node_callback@@Base+0x560>
   275b4:	b	27858 <myhtml_serialization_node_callback@@Base+0x55c>
   275b8:	ldr	r1, [r1, #12]
   275bc:	mov	r2, r5
   275c0:	blx	r4
   275c4:	cmp	r0, #0
   275c8:	bne	2785c <myhtml_serialization_node_callback@@Base+0x560>
   275cc:	b	2750c <myhtml_serialization_node_callback@@Base+0x210>
   275d0:	add	r7, sp, #8
   275d4:	ldr	r0, [pc, #1108]	; 27a30 <myhtml_serialization_node_callback@@Base+0x734>
   275d8:	mov	r1, #1
   275dc:	mov	r2, r5
   275e0:	add	r0, pc, r0
   275e4:	blx	r4
   275e8:	cmp	r0, #0
   275ec:	bne	27570 <myhtml_serialization_node_callback@@Base+0x274>
   275f0:	ldr	r0, [r6, #64]	; 0x40
   275f4:	cmp	r0, #4
   275f8:	beq	2762c <myhtml_serialization_node_callback@@Base+0x330>
   275fc:	cmp	r0, #6
   27600:	beq	2764c <myhtml_serialization_node_callback@@Base+0x350>
   27604:	cmp	r0, #5
   27608:	bne	27684 <myhtml_serialization_node_callback@@Base+0x388>
   2760c:	ldr	r0, [pc, #1056]	; 27a34 <myhtml_serialization_node_callback@@Base+0x738>
   27610:	mov	r1, #4
   27614:	add	r0, pc, r0
   27618:	mov	r2, r5
   2761c:	blx	r4
   27620:	cmp	r0, #0
   27624:	beq	27684 <myhtml_serialization_node_callback@@Base+0x388>
   27628:	b	27570 <myhtml_serialization_node_callback@@Base+0x274>
   2762c:	ldr	r0, [pc, #1036]	; 27a40 <myhtml_serialization_node_callback@@Base+0x744>
   27630:	add	r0, pc, r0
   27634:	mov	r1, #6
   27638:	mov	r2, r5
   2763c:	blx	r4
   27640:	cmp	r0, #0
   27644:	beq	27684 <myhtml_serialization_node_callback@@Base+0x388>
   27648:	b	27570 <myhtml_serialization_node_callback@@Base+0x274>
   2764c:	ldr	r0, [r6, #8]
   27650:	cmp	r0, #0
   27654:	beq	27684 <myhtml_serialization_node_callback@@Base+0x388>
   27658:	ldr	r1, [r6, #16]
   2765c:	cmp	r1, #5
   27660:	bne	27684 <myhtml_serialization_node_callback@@Base+0x388>
   27664:	ldr	r1, [pc, #972]	; 27a38 <myhtml_serialization_node_callback@@Base+0x73c>
   27668:	add	r1, pc, r1
   2766c:	bl	10db8 <mycore_strcmp@plt>
   27670:	cmp	r0, #0
   27674:	beq	27684 <myhtml_serialization_node_callback@@Base+0x388>
   27678:	ldr	r0, [pc, #956]	; 27a3c <myhtml_serialization_node_callback@@Base+0x740>
   2767c:	add	r0, pc, r0
   27680:	b	27634 <myhtml_serialization_node_callback@@Base+0x338>
   27684:	mov	r0, r6
   27688:	mov	r1, r7
   2768c:	bl	118a4 <myhtml_attribute_key@plt>
   27690:	cmp	r0, #0
   27694:	beq	276ac <myhtml_serialization_node_callback@@Base+0x3b0>
   27698:	ldr	r1, [sp, #8]
   2769c:	mov	r2, r5
   276a0:	blx	r4
   276a4:	cmp	r0, #0
   276a8:	bne	27570 <myhtml_serialization_node_callback@@Base+0x274>
   276ac:	ldr	r0, [pc, #912]	; 27a44 <myhtml_serialization_node_callback@@Base+0x748>
   276b0:	mov	r1, #2
   276b4:	mov	r2, r5
   276b8:	add	r0, pc, r0
   276bc:	blx	r4
   276c0:	cmp	r0, #0
   276c4:	bne	27570 <myhtml_serialization_node_callback@@Base+0x274>
   276c8:	mov	r0, r6
   276cc:	mov	r1, r7
   276d0:	bl	113f4 <myhtml_attribute_value@plt>
   276d4:	cmp	r0, #0
   276d8:	ldrne	r8, [sp, #8]
   276dc:	cmpne	r8, #0
   276e0:	bne	27710 <myhtml_serialization_node_callback@@Base+0x414>
   276e4:	ldr	r0, [pc, #872]	; 27a54 <myhtml_serialization_node_callback@@Base+0x758>
   276e8:	mov	r1, #1
   276ec:	mov	r2, r5
   276f0:	add	r0, pc, r0
   276f4:	blx	r4
   276f8:	cmp	r0, #0
   276fc:	bne	27570 <myhtml_serialization_node_callback@@Base+0x274>
   27700:	ldr	r6, [r6]
   27704:	cmp	r6, #0
   27708:	bne	275d4 <myhtml_serialization_node_callback@@Base+0x2d8>
   2770c:	b	27594 <myhtml_serialization_node_callback@@Base+0x298>
   27710:	mov	r9, r0
   27714:	mov	sl, #0
   27718:	mov	r1, #0
   2771c:	ldrb	r0, [r9, sl]
   27720:	cmp	r0, #34	; 0x22
   27724:	beq	27768 <myhtml_serialization_node_callback@@Base+0x46c>
   27728:	cmp	r0, #160	; 0xa0
   2772c:	beq	27794 <myhtml_serialization_node_callback@@Base+0x498>
   27730:	cmp	r0, #38	; 0x26
   27734:	bne	27800 <myhtml_serialization_node_callback@@Base+0x504>
   27738:	cmp	r1, #0
   2773c:	beq	27758 <myhtml_serialization_node_callback@@Base+0x45c>
   27740:	sub	r0, sl, r1
   27744:	mov	r2, r5
   27748:	add	r0, r9, r0
   2774c:	blx	r4
   27750:	cmp	r0, #0
   27754:	bne	27570 <myhtml_serialization_node_callback@@Base+0x274>
   27758:	ldr	r0, [pc, #744]	; 27a48 <myhtml_serialization_node_callback@@Base+0x74c>
   2775c:	mov	r1, #5
   27760:	add	r0, pc, r0
   27764:	b	277dc <myhtml_serialization_node_callback@@Base+0x4e0>
   27768:	cmp	r1, #0
   2776c:	beq	27788 <myhtml_serialization_node_callback@@Base+0x48c>
   27770:	sub	r0, sl, r1
   27774:	mov	r2, r5
   27778:	add	r0, r9, r0
   2777c:	blx	r4
   27780:	cmp	r0, #0
   27784:	bne	27570 <myhtml_serialization_node_callback@@Base+0x274>
   27788:	ldr	r0, [pc, #700]	; 27a4c <myhtml_serialization_node_callback@@Base+0x750>
   2778c:	add	r0, pc, r0
   27790:	b	277d8 <myhtml_serialization_node_callback@@Base+0x4dc>
   27794:	cmp	sl, #0
   27798:	beq	27800 <myhtml_serialization_node_callback@@Base+0x504>
   2779c:	add	r0, r9, sl
   277a0:	ldrb	r0, [r0, #-1]
   277a4:	cmp	r0, #194	; 0xc2
   277a8:	bne	27800 <myhtml_serialization_node_callback@@Base+0x504>
   277ac:	cmp	r1, #0
   277b0:	beq	277d0 <myhtml_serialization_node_callback@@Base+0x4d4>
   277b4:	sub	r0, sl, r1
   277b8:	sub	r1, r1, #1
   277bc:	mov	r2, r5
   277c0:	add	r0, r9, r0
   277c4:	blx	r4
   277c8:	cmp	r0, #0
   277cc:	bne	27570 <myhtml_serialization_node_callback@@Base+0x274>
   277d0:	ldr	r0, [pc, #632]	; 27a50 <myhtml_serialization_node_callback@@Base+0x754>
   277d4:	add	r0, pc, r0
   277d8:	mov	r1, #6
   277dc:	mov	r2, r5
   277e0:	blx	r4
   277e4:	mov	r1, #0
   277e8:	cmp	r0, #0
   277ec:	bne	27570 <myhtml_serialization_node_callback@@Base+0x274>
   277f0:	add	sl, sl, #1
   277f4:	cmp	sl, r8
   277f8:	bcc	2771c <myhtml_serialization_node_callback@@Base+0x420>
   277fc:	b	27810 <myhtml_serialization_node_callback@@Base+0x514>
   27800:	add	r1, r1, #1
   27804:	add	sl, sl, #1
   27808:	cmp	sl, r8
   2780c:	bcc	2771c <myhtml_serialization_node_callback@@Base+0x420>
   27810:	cmp	r1, #0
   27814:	beq	276e4 <myhtml_serialization_node_callback@@Base+0x3e8>
   27818:	add	r0, r9, r8
   2781c:	mov	r2, r5
   27820:	sub	r0, r0, r1
   27824:	blx	r4
   27828:	cmp	r0, #0
   2782c:	beq	276e4 <myhtml_serialization_node_callback@@Base+0x3e8>
   27830:	b	27570 <myhtml_serialization_node_callback@@Base+0x274>
   27834:	cmp	r2, #67	; 0x43
   27838:	beq	27440 <myhtml_serialization_node_callback@@Base+0x144>
   2783c:	ldr	r1, [r1, #12]
   27840:	mov	r2, r4
   27844:	mov	r3, r5
   27848:	bl	27e2c <myhtml_serialization_concatenate@@Base+0x90>
   2784c:	mov	r6, #2
   27850:	cmp	r0, #0
   27854:	bne	2785c <myhtml_serialization_node_callback@@Base+0x560>
   27858:	mov	r6, #0
   2785c:	mov	r0, r6
   27860:	sub	sp, fp, #28
   27864:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27868:	mov	r2, r5
   2786c:	blx	r4
   27870:	cmp	r0, #0
   27874:	bne	2785c <myhtml_serialization_node_callback@@Base+0x560>
   27878:	ldr	r7, [r7]
   2787c:	cmp	r7, #0
   27880:	beq	274ac <myhtml_serialization_node_callback@@Base+0x1b0>
   27884:	ldr	r0, [r7, #36]	; 0x24
   27888:	cmp	r0, #6
   2788c:	bne	274ac <myhtml_serialization_node_callback@@Base+0x1b0>
   27890:	ldr	r0, [r7, #28]
   27894:	ldr	r1, [pc, #368]	; 27a0c <myhtml_serialization_node_callback@@Base+0x710>
   27898:	add	r1, pc, r1
   2789c:	bl	11478 <mycore_strcasecmp@plt>
   278a0:	cmp	r0, #0
   278a4:	beq	27934 <myhtml_serialization_node_callback@@Base+0x638>
   278a8:	ldr	r0, [r7, #28]
   278ac:	ldr	r1, [pc, #348]	; 27a10 <myhtml_serialization_node_callback@@Base+0x714>
   278b0:	add	r1, pc, r1
   278b4:	bl	11478 <mycore_strcasecmp@plt>
   278b8:	cmp	r0, #0
   278bc:	bne	274ac <myhtml_serialization_node_callback@@Base+0x1b0>
   278c0:	ldr	r7, [r7]
   278c4:	cmp	r7, #0
   278c8:	beq	274ac <myhtml_serialization_node_callback@@Base+0x1b0>
   278cc:	ldr	r0, [r7, #36]	; 0x24
   278d0:	ldr	r8, [r7]
   278d4:	cmp	r0, #0
   278d8:	beq	279d0 <myhtml_serialization_node_callback@@Base+0x6d4>
   278dc:	ldr	r0, [pc, #304]	; 27a14 <myhtml_serialization_node_callback@@Base+0x718>
   278e0:	mov	r1, #9
   278e4:	mov	r2, r5
   278e8:	add	r0, pc, r0
   278ec:	blx	r4
   278f0:	cmp	r0, #0
   278f4:	bne	2785c <myhtml_serialization_node_callback@@Base+0x560>
   278f8:	ldr	r0, [r7, #28]
   278fc:	ldr	r1, [r7, #36]	; 0x24
   27900:	mov	r2, r5
   27904:	blx	r4
   27908:	cmp	r0, #0
   2790c:	bne	2785c <myhtml_serialization_node_callback@@Base+0x560>
   27910:	ldr	r0, [pc, #256]	; 27a18 <myhtml_serialization_node_callback@@Base+0x71c>
   27914:	mov	r1, #1
   27918:	mov	r2, r5
   2791c:	mov	r9, #1
   27920:	add	r0, pc, r0
   27924:	blx	r4
   27928:	cmp	r0, #0
   2792c:	bne	2785c <myhtml_serialization_node_callback@@Base+0x560>
   27930:	b	27940 <myhtml_serialization_node_callback@@Base+0x644>
   27934:	ldr	r8, [r7]
   27938:	mov	r9, #0
   2793c:	mov	r7, #0
   27940:	cmp	r8, #0
   27944:	ldrne	r0, [r8, #36]	; 0x24
   27948:	cmpne	r0, #0
   2794c:	beq	274ac <myhtml_serialization_node_callback@@Base+0x1b0>
   27950:	cmp	r9, #0
   27954:	ldrne	r0, [r7, #36]	; 0x24
   27958:	cmpne	r0, #0
   2795c:	bne	2797c <myhtml_serialization_node_callback@@Base+0x680>
   27960:	ldr	r0, [pc, #180]	; 27a1c <myhtml_serialization_node_callback@@Base+0x720>
   27964:	mov	r1, #7
   27968:	mov	r2, r5
   2796c:	add	r0, pc, r0
   27970:	blx	r4
   27974:	cmp	r0, #0
   27978:	bne	2785c <myhtml_serialization_node_callback@@Base+0x560>
   2797c:	ldr	r0, [pc, #156]	; 27a20 <myhtml_serialization_node_callback@@Base+0x724>
   27980:	mov	r1, #2
   27984:	mov	r2, r5
   27988:	mov	r6, #2
   2798c:	add	r0, pc, r0
   27990:	blx	r4
   27994:	cmp	r0, #0
   27998:	bne	2785c <myhtml_serialization_node_callback@@Base+0x560>
   2799c:	ldr	r0, [r8, #28]
   279a0:	cmp	r0, #0
   279a4:	ldrne	r1, [r8, #36]	; 0x24
   279a8:	cmpne	r1, #0
   279ac:	bne	279e8 <myhtml_serialization_node_callback@@Base+0x6ec>
   279b0:	ldr	r0, [pc, #108]	; 27a24 <myhtml_serialization_node_callback@@Base+0x728>
   279b4:	mov	r1, #1
   279b8:	mov	r2, r5
   279bc:	add	r0, pc, r0
   279c0:	blx	r4
   279c4:	cmp	r0, #0
   279c8:	bne	2785c <myhtml_serialization_node_callback@@Base+0x560>
   279cc:	b	274ac <myhtml_serialization_node_callback@@Base+0x1b0>
   279d0:	mov	r9, #1
   279d4:	cmp	r8, #0
   279d8:	ldrne	r0, [r8, #36]	; 0x24
   279dc:	cmpne	r0, #0
   279e0:	beq	274ac <myhtml_serialization_node_callback@@Base+0x1b0>
   279e4:	b	27950 <myhtml_serialization_node_callback@@Base+0x654>
   279e8:	mov	r2, r5
   279ec:	blx	r4
   279f0:	cmp	r0, #0
   279f4:	bne	2785c <myhtml_serialization_node_callback@@Base+0x560>
   279f8:	b	279b0 <myhtml_serialization_node_callback@@Base+0x6b4>
   279fc:	muleq	sp, r5, r2
   27a00:	andeq	fp, sp, r6, ror #4
   27a04:	andeq	fp, sp, lr, lsr #6
   27a08:	andeq	fp, sp, r8, lsl r3
   27a0c:	andeq	sl, sp, r8, lsl #30
   27a10:	ldrdeq	sl, [sp], -lr
   27a14:	andeq	sl, sp, sp, lsr #29
   27a18:	andeq	sl, sp, sp, ror lr
   27a1c:	andeq	sl, sp, r3, lsr lr
   27a20:	andeq	sl, sp, r0, lsl lr
   27a24:	andeq	sl, sp, r1, ror #27
   27a28:	andeq	fp, sp, r8, asr #5
   27a2c:	andeq	fp, sp, pc, asr r2
   27a30:	andeq	fp, sp, ip, lsr #3
   27a34:	muleq	sp, r5, r1
   27a38:	andeq	fp, sp, r6, asr #2
   27a3c:	andeq	fp, sp, r8, lsr r1
   27a40:	andeq	fp, sp, fp, lsl #3
   27a44:	andeq	fp, sp, sl, lsl #2
   27a48:	andeq	fp, sp, r5, rrx
   27a4c:	andeq	fp, sp, pc, lsr r0
   27a50:	strdeq	sl, [sp], -lr
   27a54:	andeq	fp, sp, sp, lsr #1
   27a58:	andeq	fp, sp, r4, ror #3
   27a5c:	push	{r4, r5, r6, r7, fp, lr}
   27a60:	add	fp, sp, #16
   27a64:	sub	sp, sp, #8
   27a68:	mov	r4, r1
   27a6c:	ldr	r1, [r0, #4]
   27a70:	mov	r5, r2
   27a74:	sub	r2, r1, #1
   27a78:	cmp	r2, #141	; 0x8d
   27a7c:	bhi	27cd4 <myhtml_serialization_node_callback@@Base+0x9d8>
   27a80:	add	r3, pc, #8
   27a84:	mov	r6, #0
   27a88:	ldr	r2, [r3, r2, lsl #2]
   27a8c:	add	pc, r3, r2
   27a90:	andeq	r0, r0, ip, lsl #5
   27a94:	andeq	r0, r0, ip, lsl #5
   27a98:	andeq	r0, r0, ip, lsl #5
   27a9c:	andeq	r0, r0, r4, asr #4
   27aa0:	andeq	r0, r0, r4, asr #4
   27aa4:	andeq	r0, r0, r4, asr #4
   27aa8:	andeq	r0, r0, r4, asr #4
   27aac:	andeq	r0, r0, r4, asr #4
   27ab0:	andeq	r0, r0, r4, asr #4
   27ab4:	andeq	r0, r0, r8, lsr r2
   27ab8:	andeq	r0, r0, r4, asr #4
   27abc:	andeq	r0, r0, r4, asr #4
   27ac0:	andeq	r0, r0, r4, asr #4
   27ac4:	andeq	r0, r0, r4, asr #4
   27ac8:	andeq	r0, r0, r8, lsr r2
   27acc:	andeq	r0, r0, r4, asr #4
   27ad0:	andeq	r0, r0, r4, asr #4
   27ad4:	andeq	r0, r0, r4, asr #4
   27ad8:	andeq	r0, r0, r8, lsr r2
   27adc:	andeq	r0, r0, r4, asr #4
   27ae0:	andeq	r0, r0, r4, asr #4
   27ae4:	andeq	r0, r0, r4, asr #4
   27ae8:	andeq	r0, r0, r4, asr #4
   27aec:	andeq	r0, r0, r8, lsr r2
   27af0:	andeq	r0, r0, r4, asr #4
   27af4:	andeq	r0, r0, r4, asr #4
   27af8:	andeq	r0, r0, r4, asr #4
   27afc:	andeq	r0, r0, r4, asr #4
   27b00:	andeq	r0, r0, r4, asr #4
   27b04:	andeq	r0, r0, r4, asr #4
   27b08:	andeq	r0, r0, r8, lsr r2
   27b0c:	andeq	r0, r0, r4, asr #4
   27b10:	andeq	r0, r0, r4, asr #4
   27b14:	andeq	r0, r0, r4, asr #4
   27b18:	andeq	r0, r0, r4, asr #4
   27b1c:	andeq	r0, r0, r4, asr #4
   27b20:	andeq	r0, r0, r4, asr #4
   27b24:	andeq	r0, r0, r4, asr #4
   27b28:	andeq	r0, r0, r4, asr #4
   27b2c:	andeq	r0, r0, r4, asr #4
   27b30:	andeq	r0, r0, r4, asr #4
   27b34:	andeq	r0, r0, r4, asr #4
   27b38:	andeq	r0, r0, r4, asr #4
   27b3c:	andeq	r0, r0, r4, asr #4
   27b40:	andeq	r0, r0, r4, asr #4
   27b44:	andeq	r0, r0, r8, lsr r2
   27b48:	andeq	r0, r0, r4, asr #4
   27b4c:	andeq	r0, r0, r4, asr #4
   27b50:	andeq	r0, r0, r4, asr #4
   27b54:	andeq	r0, r0, r4, asr #4
   27b58:	andeq	r0, r0, r4, asr #4
   27b5c:	andeq	r0, r0, r4, asr #4
   27b60:	andeq	r0, r0, r8, lsr r2
   27b64:	andeq	r0, r0, r4, asr #4
   27b68:	andeq	r0, r0, r4, asr #4
   27b6c:	andeq	r0, r0, r4, asr #4
   27b70:	andeq	r0, r0, r4, asr #4
   27b74:	andeq	r0, r0, r4, asr #4
   27b78:	andeq	r0, r0, r4, asr #4
   27b7c:	andeq	r0, r0, r4, asr #4
   27b80:	andeq	r0, r0, r4, asr #4
   27b84:	andeq	r0, r0, r4, asr #4
   27b88:	andeq	r0, r0, r4, asr #4
   27b8c:	andeq	r0, r0, r8, lsr r2
   27b90:	andeq	r0, r0, r4, asr #4
   27b94:	andeq	r0, r0, r4, asr #4
   27b98:	andeq	r0, r0, r4, asr #4
   27b9c:	andeq	r0, r0, r4, asr #4
   27ba0:	andeq	r0, r0, r8, lsr r2
   27ba4:	andeq	r0, r0, r8, lsr r2
   27ba8:	andeq	r0, r0, r4, asr #4
   27bac:	andeq	r0, r0, r4, asr #4
   27bb0:	andeq	r0, r0, r4, asr #4
   27bb4:	andeq	r0, r0, r8, lsr r2
   27bb8:	andeq	r0, r0, r4, asr #4
   27bbc:	andeq	r0, r0, r4, asr #4
   27bc0:	andeq	r0, r0, r4, asr #4
   27bc4:	andeq	r0, r0, r8, lsr r2
   27bc8:	andeq	r0, r0, r4, asr #4
   27bcc:	andeq	r0, r0, r4, asr #4
   27bd0:	andeq	r0, r0, r4, asr #4
   27bd4:	andeq	r0, r0, r4, asr #4
   27bd8:	andeq	r0, r0, r4, asr #4
   27bdc:	andeq	r0, r0, r4, asr #4
   27be0:	andeq	r0, r0, r4, asr #4
   27be4:	andeq	r0, r0, r8, lsr r2
   27be8:	andeq	r0, r0, r4, asr #4
   27bec:	andeq	r0, r0, r4, asr #4
   27bf0:	andeq	r0, r0, r4, asr #4
   27bf4:	andeq	r0, r0, r4, asr #4
   27bf8:	andeq	r0, r0, r4, asr #4
   27bfc:	andeq	r0, r0, r4, asr #4
   27c00:	andeq	r0, r0, r4, asr #4
   27c04:	andeq	r0, r0, r4, asr #4
   27c08:	andeq	r0, r0, r4, asr #4
   27c0c:	andeq	r0, r0, r4, asr #4
   27c10:	andeq	r0, r0, r4, asr #4
   27c14:	andeq	r0, r0, r4, asr #4
   27c18:	andeq	r0, r0, r4, asr #4
   27c1c:	andeq	r0, r0, r8, lsr r2
   27c20:	andeq	r0, r0, r4, asr #4
   27c24:	andeq	r0, r0, r4, asr #4
   27c28:	andeq	r0, r0, r4, asr #4
   27c2c:	andeq	r0, r0, r4, asr #4
   27c30:	andeq	r0, r0, r4, asr #4
   27c34:	andeq	r0, r0, r4, asr #4
   27c38:	andeq	r0, r0, r4, asr #4
   27c3c:	andeq	r0, r0, r4, asr #4
   27c40:	andeq	r0, r0, r4, asr #4
   27c44:	andeq	r0, r0, r4, asr #4
   27c48:	andeq	r0, r0, r4, asr #4
   27c4c:	andeq	r0, r0, r4, asr #4
   27c50:	andeq	r0, r0, r4, asr #4
   27c54:	andeq	r0, r0, r4, asr #4
   27c58:	andeq	r0, r0, r4, asr #4
   27c5c:	andeq	r0, r0, r8, lsr r2
   27c60:	andeq	r0, r0, r4, asr #4
   27c64:	andeq	r0, r0, r4, asr #4
   27c68:	andeq	r0, r0, r4, asr #4
   27c6c:	andeq	r0, r0, r4, asr #4
   27c70:	andeq	r0, r0, r4, asr #4
   27c74:	andeq	r0, r0, r4, asr #4
   27c78:	andeq	r0, r0, r4, asr #4
   27c7c:	andeq	r0, r0, r4, asr #4
   27c80:	andeq	r0, r0, r4, asr #4
   27c84:	andeq	r0, r0, r4, asr #4
   27c88:	andeq	r0, r0, r4, asr #4
   27c8c:	andeq	r0, r0, r4, asr #4
   27c90:	andeq	r0, r0, r4, asr #4
   27c94:	andeq	r0, r0, r4, asr #4
   27c98:	andeq	r0, r0, r4, asr #4
   27c9c:	andeq	r0, r0, r4, asr #4
   27ca0:	andeq	r0, r0, r4, asr #4
   27ca4:	andeq	r0, r0, r4, asr #4
   27ca8:	andeq	r0, r0, r4, asr #4
   27cac:	andeq	r0, r0, r8, lsr r2
   27cb0:	andeq	r0, r0, r4, asr #4
   27cb4:	andeq	r0, r0, r4, asr #4
   27cb8:	andeq	r0, r0, r4, asr #4
   27cbc:	andeq	r0, r0, r4, asr #4
   27cc0:	andeq	r0, r0, r4, asr #4
   27cc4:	andeq	r0, r0, r8, lsr r2
   27cc8:	ldr	r2, [r0, #8]
   27ccc:	cmp	r2, #1
   27cd0:	beq	27d1c <myhtml_serialization_node_callback@@Base+0xa20>
   27cd4:	ldr	r0, [r0, #40]	; 0x28
   27cd8:	add	r2, sp, #4
   27cdc:	bl	1188c <myhtml_tag_name_by_id@plt>
   27ce0:	mov	r7, r0
   27ce4:	ldr	r0, [pc, #104]	; 27d54 <myhtml_serialization_node_callback@@Base+0xa58>
   27ce8:	mov	r1, #2
   27cec:	mov	r2, r5
   27cf0:	mov	r6, #2
   27cf4:	add	r0, pc, r0
   27cf8:	blx	r4
   27cfc:	cmp	r0, #0
   27d00:	bne	27d1c <myhtml_serialization_node_callback@@Base+0xa20>
   27d04:	ldr	r1, [sp, #4]
   27d08:	mov	r0, r7
   27d0c:	mov	r2, r5
   27d10:	blx	r4
   27d14:	cmp	r0, #0
   27d18:	beq	27d28 <myhtml_serialization_node_callback@@Base+0xa2c>
   27d1c:	mov	r0, r6
   27d20:	sub	sp, fp, #16
   27d24:	pop	{r4, r5, r6, r7, fp, pc}
   27d28:	ldr	r0, [pc, #40]	; 27d58 <myhtml_serialization_node_callback@@Base+0xa5c>
   27d2c:	mov	r1, #1
   27d30:	mov	r2, r5
   27d34:	add	r0, pc, r0
   27d38:	blx	r4
   27d3c:	mov	r6, r0
   27d40:	cmp	r0, #0
   27d44:	movwne	r6, #2
   27d48:	mov	r0, r6
   27d4c:	sub	sp, fp, #16
   27d50:	pop	{r4, r5, r6, r7, fp, pc}
   27d54:	andeq	sl, sp, r5, ror #21
   27d58:	andeq	sl, sp, ip, asr #20

00027d5c <myhtml_serialization_reallocate@@Base>:
   27d5c:	push	{r4, r5, fp, lr}
   27d60:	add	fp, sp, #8
   27d64:	mov	r4, r0
   27d68:	ldr	r0, [r0]
   27d6c:	mov	r5, r1
   27d70:	bl	10da0 <mycore_realloc@plt>
   27d74:	cmp	r0, #0
   27d78:	stmne	r4, {r0, r5}
   27d7c:	movne	r0, #0
   27d80:	popne	{r4, r5, fp, pc}
   27d84:	mov	r0, #0
   27d88:	str	r0, [r4]
   27d8c:	str	r0, [r4, #4]
   27d90:	str	r0, [r4, #8]
   27d94:	mov	r0, #2
   27d98:	pop	{r4, r5, fp, pc}

00027d9c <myhtml_serialization_concatenate@@Base>:
   27d9c:	push	{r4, r5, r6, r7, fp, lr}
   27da0:	add	fp, sp, #16
   27da4:	mov	r5, r1
   27da8:	mov	r6, r0
   27dac:	ldmib	r2, {r0, r1}
   27db0:	mov	r4, r2
   27db4:	add	r2, r1, r5
   27db8:	cmp	r2, r0
   27dbc:	bcs	27dc8 <myhtml_serialization_concatenate@@Base+0x2c>
   27dc0:	ldr	r0, [r4]
   27dc4:	b	27de8 <myhtml_serialization_concatenate@@Base+0x4c>
   27dc8:	ldr	r0, [r4]
   27dcc:	add	r7, r2, #4096	; 0x1000
   27dd0:	mov	r1, r7
   27dd4:	bl	10da0 <mycore_realloc@plt>
   27dd8:	cmp	r0, #0
   27ddc:	beq	27e14 <myhtml_serialization_concatenate@@Base+0x78>
   27de0:	stm	r4, {r0, r7}
   27de4:	ldr	r1, [r4, #8]
   27de8:	add	r0, r0, r1
   27dec:	mov	r1, r6
   27df0:	mov	r2, r5
   27df4:	bl	1170c <strncpy@plt>
   27df8:	ldr	r0, [r4, #8]
   27dfc:	ldr	r1, [r4]
   27e00:	add	r2, r0, r5
   27e04:	mov	r0, #0
   27e08:	str	r2, [r4, #8]
   27e0c:	strb	r0, [r1, r2]
   27e10:	pop	{r4, r5, r6, r7, fp, pc}
   27e14:	mov	r0, #0
   27e18:	str	r0, [r4]
   27e1c:	str	r0, [r4, #4]
   27e20:	str	r0, [r4, #8]
   27e24:	mov	r0, #2
   27e28:	pop	{r4, r5, r6, r7, fp, pc}
   27e2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27e30:	add	fp, sp, #28
   27e34:	sub	sp, sp, #4
   27e38:	cmp	r1, #0
   27e3c:	beq	27fc4 <myhtml_serialization_concatenate@@Base+0x228>
   27e40:	ldr	r9, [pc, #404]	; 27fdc <myhtml_serialization_concatenate@@Base+0x240>
   27e44:	ldr	sl, [pc, #404]	; 27fe0 <myhtml_serialization_concatenate@@Base+0x244>
   27e48:	mov	r6, r1
   27e4c:	mov	r5, r3
   27e50:	mov	r4, r2
   27e54:	mov	r7, r0
   27e58:	mov	r8, #0
   27e5c:	mov	r1, #0
   27e60:	add	r9, pc, r9
   27e64:	add	sl, pc, sl
   27e68:	ldrb	r0, [r7, r8]
   27e6c:	cmp	r0, #61	; 0x3d
   27e70:	bgt	27eac <myhtml_serialization_concatenate@@Base+0x110>
   27e74:	cmp	r0, #38	; 0x26
   27e78:	beq	27f1c <myhtml_serialization_concatenate@@Base+0x180>
   27e7c:	cmp	r0, #60	; 0x3c
   27e80:	bne	27f08 <myhtml_serialization_concatenate@@Base+0x16c>
   27e84:	cmp	r1, #0
   27e88:	beq	27ea4 <myhtml_serialization_concatenate@@Base+0x108>
   27e8c:	sub	r0, r8, r1
   27e90:	mov	r2, r5
   27e94:	add	r0, r7, r0
   27e98:	blx	r4
   27e9c:	cmp	r0, #0
   27ea0:	bne	27fd0 <myhtml_serialization_concatenate@@Base+0x234>
   27ea4:	mov	r0, r9
   27ea8:	b	27f70 <myhtml_serialization_concatenate@@Base+0x1d4>
   27eac:	cmp	r0, #62	; 0x3e
   27eb0:	beq	27f4c <myhtml_serialization_concatenate@@Base+0x1b0>
   27eb4:	cmp	r0, #160	; 0xa0
   27eb8:	bne	27f08 <myhtml_serialization_concatenate@@Base+0x16c>
   27ebc:	cmp	r8, #0
   27ec0:	beq	27f08 <myhtml_serialization_concatenate@@Base+0x16c>
   27ec4:	add	r0, r7, r8
   27ec8:	ldrb	r0, [r0, #-1]
   27ecc:	cmp	r0, #194	; 0xc2
   27ed0:	bne	27f08 <myhtml_serialization_concatenate@@Base+0x16c>
   27ed4:	cmp	r1, #0
   27ed8:	beq	27ef8 <myhtml_serialization_concatenate@@Base+0x15c>
   27edc:	sub	r0, r8, r1
   27ee0:	sub	r1, r1, #1
   27ee4:	mov	r2, r5
   27ee8:	add	r0, r7, r0
   27eec:	blx	r4
   27ef0:	cmp	r0, #0
   27ef4:	bne	27fd0 <myhtml_serialization_concatenate@@Base+0x234>
   27ef8:	ldr	r0, [pc, #232]	; 27fe8 <myhtml_serialization_concatenate@@Base+0x24c>
   27efc:	mov	r1, #6
   27f00:	add	r0, pc, r0
   27f04:	b	27f74 <myhtml_serialization_concatenate@@Base+0x1d8>
   27f08:	add	r1, r1, #1
   27f0c:	add	r8, r8, #1
   27f10:	cmp	r8, r6
   27f14:	bcc	27e68 <myhtml_serialization_concatenate@@Base+0xcc>
   27f18:	b	27f94 <myhtml_serialization_concatenate@@Base+0x1f8>
   27f1c:	cmp	r1, #0
   27f20:	beq	27f3c <myhtml_serialization_concatenate@@Base+0x1a0>
   27f24:	sub	r0, r8, r1
   27f28:	mov	r2, r5
   27f2c:	add	r0, r7, r0
   27f30:	blx	r4
   27f34:	cmp	r0, #0
   27f38:	bne	27fd0 <myhtml_serialization_concatenate@@Base+0x234>
   27f3c:	ldr	r0, [pc, #160]	; 27fe4 <myhtml_serialization_concatenate@@Base+0x248>
   27f40:	mov	r1, #5
   27f44:	add	r0, pc, r0
   27f48:	b	27f74 <myhtml_serialization_concatenate@@Base+0x1d8>
   27f4c:	cmp	r1, #0
   27f50:	beq	27f6c <myhtml_serialization_concatenate@@Base+0x1d0>
   27f54:	sub	r0, r8, r1
   27f58:	mov	r2, r5
   27f5c:	add	r0, r7, r0
   27f60:	blx	r4
   27f64:	cmp	r0, #0
   27f68:	bne	27fd0 <myhtml_serialization_concatenate@@Base+0x234>
   27f6c:	mov	r0, sl
   27f70:	mov	r1, #4
   27f74:	mov	r2, r5
   27f78:	blx	r4
   27f7c:	mov	r1, #0
   27f80:	cmp	r0, #0
   27f84:	bne	27fd0 <myhtml_serialization_concatenate@@Base+0x234>
   27f88:	add	r8, r8, #1
   27f8c:	cmp	r8, r6
   27f90:	bcc	27e68 <myhtml_serialization_concatenate@@Base+0xcc>
   27f94:	cmp	r1, #0
   27f98:	beq	27fc4 <myhtml_serialization_concatenate@@Base+0x228>
   27f9c:	add	r0, r7, r6
   27fa0:	mov	r2, r5
   27fa4:	sub	r0, r0, r1
   27fa8:	blx	r4
   27fac:	mov	r1, r0
   27fb0:	mov	r0, #2
   27fb4:	cmp	r1, #0
   27fb8:	moveq	r0, #0
   27fbc:	sub	sp, fp, #28
   27fc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27fc4:	mov	r0, #0
   27fc8:	sub	sp, fp, #28
   27fcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27fd0:	mov	r0, #2
   27fd4:	sub	sp, fp, #28
   27fd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27fdc:	andeq	sl, sp, ip, ror r9
   27fe0:	andeq	sl, sp, sp, ror r9
   27fe4:	andeq	sl, sp, r1, lsl #17
   27fe8:	ldrdeq	sl, [sp], -r2

00027fec <myhtml_stream_buffer_create@@Base>:
   27fec:	mov	r0, #1
   27ff0:	mov	r1, #36	; 0x24
   27ff4:	b	11004 <mycore_calloc@plt>

00027ff8 <myhtml_stream_buffer_init@@Base>:
   27ff8:	push	{r4, r5, fp, lr}
   27ffc:	add	fp, sp, #8
   28000:	mov	r5, #0
   28004:	mov	r4, r0
   28008:	str	r5, [r0, #4]
   2800c:	str	r1, [r0, #8]
   28010:	mov	r0, r1
   28014:	mov	r1, #12
   28018:	bl	11004 <mycore_calloc@plt>
   2801c:	cmp	r0, #0
   28020:	str	r0, [r4]
   28024:	movweq	r5, #37633	; 0x9301
   28028:	mov	r0, r5
   2802c:	pop	{r4, r5, fp, pc}

00028030 <myhtml_stream_buffer_entry_init@@Base>:
   28030:	push	{r4, r5, r6, sl, fp, lr}
   28034:	add	fp, sp, #16
   28038:	mov	r4, r0
   2803c:	ldr	r0, [r0]
   28040:	mov	r5, r1
   28044:	cmp	r0, #0
   28048:	beq	28060 <myhtml_stream_buffer_entry_init@@Base+0x30>
   2804c:	ldr	r1, [r4, #8]
   28050:	mov	r6, #0
   28054:	cmp	r1, r5
   28058:	bcs	28080 <myhtml_stream_buffer_entry_init@@Base+0x50>
   2805c:	bl	11a9c <mycore_free@plt>
   28060:	mov	r6, #0
   28064:	mov	r0, r5
   28068:	str	r6, [r4, #4]
   2806c:	str	r5, [r4, #8]
   28070:	bl	119ac <mycore_malloc@plt>
   28074:	cmp	r0, #0
   28078:	str	r0, [r4]
   2807c:	movweq	r6, #37635	; 0x9303
   28080:	mov	r0, r6
   28084:	pop	{r4, r5, r6, sl, fp, pc}

00028088 <myhtml_stream_buffer_entry_clean@@Base>:
   28088:	cmp	r0, #0
   2808c:	movne	r1, #0
   28090:	strne	r1, [r0, #4]
   28094:	bx	lr

00028098 <myhtml_stream_buffer_entry_destroy@@Base>:
   28098:	push	{r4, r5, r6, sl, fp, lr}
   2809c:	add	fp, sp, #16
   280a0:	mov	r4, #0
   280a4:	cmp	r0, #0
   280a8:	beq	280d8 <myhtml_stream_buffer_entry_destroy@@Base+0x40>
   280ac:	mov	r5, r0
   280b0:	ldr	r0, [r0]
   280b4:	mov	r6, r1
   280b8:	cmp	r0, #0
   280bc:	beq	280c4 <myhtml_stream_buffer_entry_destroy@@Base+0x2c>
   280c0:	bl	11a9c <mycore_free@plt>
   280c4:	cmp	r6, #0
   280c8:	moveq	r0, r5
   280cc:	popeq	{r4, r5, r6, sl, fp, pc}
   280d0:	mov	r0, r5
   280d4:	bl	11a9c <mycore_free@plt>
   280d8:	mov	r0, r4
   280dc:	pop	{r4, r5, r6, sl, fp, pc}

000280e0 <myhtml_stream_buffer_clean@@Base>:
   280e0:	cmp	r0, #0
   280e4:	movne	r1, #0
   280e8:	strne	r1, [r0, #4]
   280ec:	bx	lr

000280f0 <myhtml_stream_buffer_destroy@@Base>:
   280f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   280f4:	add	fp, sp, #24
   280f8:	mov	r4, #0
   280fc:	cmp	r0, #0
   28100:	beq	28194 <myhtml_stream_buffer_destroy@@Base+0xa4>
   28104:	mov	r5, r0
   28108:	ldr	r0, [r0]
   2810c:	mov	r8, r1
   28110:	cmp	r0, #0
   28114:	beq	28180 <myhtml_stream_buffer_destroy@@Base+0x90>
   28118:	ldr	r1, [r5, #4]
   2811c:	cmp	r1, #0
   28120:	beq	2817c <myhtml_stream_buffer_destroy@@Base+0x8c>
   28124:	mov	r7, #0
   28128:	mov	r6, #1
   2812c:	cmp	r0, r7
   28130:	ldrne	r0, [r0, -r7]
   28134:	cmpne	r0, #0
   28138:	beq	2815c <myhtml_stream_buffer_destroy@@Base+0x6c>
   2813c:	b	28168 <myhtml_stream_buffer_destroy@@Base+0x78>
   28140:	ldr	r0, [r5]
   28144:	add	r6, r6, #1
   28148:	sub	r7, r7, #12
   2814c:	cmp	r0, r7
   28150:	ldrne	r0, [r0, -r7]
   28154:	cmpne	r0, #0
   28158:	bne	28168 <myhtml_stream_buffer_destroy@@Base+0x78>
   2815c:	cmp	r6, r1
   28160:	bcc	28140 <myhtml_stream_buffer_destroy@@Base+0x50>
   28164:	b	28178 <myhtml_stream_buffer_destroy@@Base+0x88>
   28168:	bl	11a9c <mycore_free@plt>
   2816c:	ldr	r1, [r5, #4]
   28170:	cmp	r6, r1
   28174:	bcc	28140 <myhtml_stream_buffer_destroy@@Base+0x50>
   28178:	ldr	r0, [r5]
   2817c:	bl	11a9c <mycore_free@plt>
   28180:	cmp	r8, #0
   28184:	moveq	r0, r5
   28188:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2818c:	mov	r0, r5
   28190:	bl	11a9c <mycore_free@plt>
   28194:	mov	r0, r4
   28198:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002819c <myhtml_stream_buffer_add_entry@@Base>:
   2819c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   281a0:	add	fp, sp, #24
   281a4:	mov	r8, r1
   281a8:	ldmib	r0, {r1, r5}
   281ac:	mov	r4, r0
   281b0:	cmp	r1, r5
   281b4:	bcs	281c0 <myhtml_stream_buffer_add_entry@@Base+0x24>
   281b8:	ldr	r6, [r4]
   281bc:	b	2820c <myhtml_stream_buffer_add_entry@@Base+0x70>
   281c0:	add	r0, r5, r5, lsl #1
   281c4:	lsl	r1, r0, #3
   281c8:	mov	r0, r4
   281cc:	bl	10da0 <mycore_realloc@plt>
   281d0:	cmp	r0, #0
   281d4:	moveq	r6, #0
   281d8:	moveq	r0, r6
   281dc:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   281e0:	mov	r6, r0
   281e4:	ldr	r0, [r4, #8]
   281e8:	lsl	r5, r5, #1
   281ec:	mov	r1, #0
   281f0:	sub	r2, r5, r0
   281f4:	add	r0, r0, r0, lsl #1
   281f8:	add	r0, r6, r0, lsl #2
   281fc:	bl	116d0 <memset@plt>
   28200:	str	r6, [r4]
   28204:	str	r5, [r4, #8]
   28208:	ldr	r1, [r4, #4]
   2820c:	add	r5, r1, r1, lsl #1
   28210:	mov	r7, r6
   28214:	ldr	r0, [r7, r5, lsl #2]!
   28218:	add	r9, r7, #8
   2821c:	cmp	r0, #0
   28220:	beq	28234 <myhtml_stream_buffer_add_entry@@Base+0x98>
   28224:	ldr	r2, [r9]
   28228:	cmp	r2, r8
   2822c:	bcs	2825c <myhtml_stream_buffer_add_entry@@Base+0xc0>
   28230:	bl	11a9c <mycore_free@plt>
   28234:	add	r0, r6, r5, lsl #2
   28238:	mov	r6, #0
   2823c:	str	r6, [r0, #4]
   28240:	mov	r0, r8
   28244:	str	r8, [r9]
   28248:	bl	119ac <mycore_malloc@plt>
   2824c:	cmp	r0, #0
   28250:	str	r0, [r7]
   28254:	beq	28268 <myhtml_stream_buffer_add_entry@@Base+0xcc>
   28258:	ldr	r1, [r4, #4]
   2825c:	add	r0, r1, #1
   28260:	mov	r6, r7
   28264:	str	r0, [r4, #4]
   28268:	mov	r0, r6
   2826c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00028270 <myhtml_stream_buffer_current_entry@@Base>:
   28270:	ldr	r1, [r0, #4]
   28274:	cmp	r1, #0
   28278:	ldrne	r0, [r0]
   2827c:	addne	r1, r1, r1, lsl #1
   28280:	addne	r0, r0, r1, lsl #2
   28284:	subne	r0, r0, #12
   28288:	bxne	lr
   2828c:	mov	r0, #0
   28290:	bx	lr

00028294 <myhtml_tag_create@@Base>:
   28294:	mov	r0, #20
   28298:	b	119ac <mycore_malloc@plt>

0002829c <myhtml_tag_init@@Base>:
   2829c:	push	{r4, r5, fp, lr}
   282a0:	add	fp, sp, #8
   282a4:	sub	sp, sp, #8
   282a8:	mov	r4, r1
   282ac:	mov	r5, r0
   282b0:	bl	112a4 <mcsimple_create@plt>
   282b4:	cmp	r0, #0
   282b8:	str	r0, [r4, #4]
   282bc:	movweq	r0, #37264	; 0x9190
   282c0:	subeq	sp, fp, #8
   282c4:	popeq	{r4, r5, fp, pc}
   282c8:	mov	r1, #128	; 0x80
   282cc:	mov	r2, #1024	; 0x400
   282d0:	mov	r3, #44	; 0x2c
   282d4:	bl	113b8 <mcsimple_init@plt>
   282d8:	ldr	r0, [r5, #4]
   282dc:	add	r1, sp, #4
   282e0:	bl	1128c <mchar_async_node_add@plt>
   282e4:	str	r0, [r4, #12]
   282e8:	mov	r0, #2
   282ec:	bl	11544 <mctree_create@plt>
   282f0:	str	r0, [r4]
   282f4:	mov	r1, r0
   282f8:	mov	r2, #252	; 0xfc
   282fc:	ldr	r0, [r5, #4]
   28300:	str	r2, [r4, #8]
   28304:	str	r0, [r4, #16]
   28308:	ldr	r0, [sp, #4]
   2830c:	cmp	r0, #0
   28310:	bne	28348 <myhtml_tag_init@@Base+0xac>
   28314:	cmp	r1, #0
   28318:	mov	r0, #2
   2831c:	beq	28348 <myhtml_tag_init@@Base+0xac>
   28320:	mov	r0, #252	; 0xfc
   28324:	str	r0, [r4, #8]
   28328:	ldr	r0, [r4, #4]
   2832c:	bl	1125c <mcsimple_clean@plt>
   28330:	ldr	r1, [r4, #12]
   28334:	ldr	r0, [r4, #16]
   28338:	bl	115b0 <mchar_async_node_clean@plt>
   2833c:	ldr	r0, [r4]
   28340:	bl	112d4 <mctree_clean@plt>
   28344:	mov	r0, #0
   28348:	sub	sp, fp, #8
   2834c:	pop	{r4, r5, fp, pc}

00028350 <myhtml_tag_clean@@Base>:
   28350:	push	{r4, sl, fp, lr}
   28354:	add	fp, sp, #8
   28358:	mov	r4, r0
   2835c:	mov	r0, #252	; 0xfc
   28360:	str	r0, [r4, #8]
   28364:	ldr	r0, [r4, #4]
   28368:	bl	1125c <mcsimple_clean@plt>
   2836c:	ldr	r1, [r4, #12]
   28370:	ldr	r0, [r4, #16]
   28374:	bl	115b0 <mchar_async_node_clean@plt>
   28378:	ldr	r0, [r4]
   2837c:	pop	{r4, sl, fp, lr}
   28380:	b	112d4 <mctree_clean@plt>

00028384 <myhtml_tag_destroy@@Base>:
   28384:	cmp	r0, #0
   28388:	beq	283cc <myhtml_tag_destroy@@Base+0x48>
   2838c:	push	{r4, sl, fp, lr}
   28390:	add	fp, sp, #8
   28394:	mov	r4, r0
   28398:	ldr	r0, [r0]
   2839c:	bl	11154 <mctree_destroy@plt>
   283a0:	str	r0, [r4]
   283a4:	mov	r1, #1
   283a8:	ldr	r0, [r4, #4]
   283ac:	bl	11334 <mcsimple_destroy@plt>
   283b0:	str	r0, [r4, #4]
   283b4:	ldr	r1, [r4, #12]
   283b8:	ldr	r0, [r4, #16]
   283bc:	bl	11970 <mchar_async_node_delete@plt>
   283c0:	mov	r0, r4
   283c4:	bl	11a9c <mycore_free@plt>
   283c8:	pop	{r4, sl, fp, lr}
   283cc:	mov	r0, #0
   283d0:	bx	lr

000283d4 <myhtml_tag_add@@Base>:
   283d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   283d8:	add	fp, sp, #24
   283dc:	sub	sp, sp, #8
   283e0:	mov	r4, r1
   283e4:	mov	r5, r0
   283e8:	ldr	r1, [r0, #12]
   283ec:	ldr	r0, [r0, #16]
   283f0:	mov	r6, r2
   283f4:	add	r2, r2, #1
   283f8:	mov	r8, r3
   283fc:	bl	11730 <mchar_async_malloc@plt>
   28400:	mov	r9, r0
   28404:	ldr	r0, [fp, #8]
   28408:	cmp	r0, #0
   2840c:	beq	284b0 <myhtml_tag_add@@Base+0xdc>
   28410:	cmp	r6, #0
   28414:	beq	284c0 <myhtml_tag_add@@Base+0xec>
   28418:	mov	r0, #0
   2841c:	cmp	r6, #16
   28420:	bcc	28480 <myhtml_tag_add@@Base+0xac>
   28424:	add	r1, r4, r6
   28428:	cmp	r9, r1
   2842c:	bcs	2843c <myhtml_tag_add@@Base+0x68>
   28430:	add	r1, r9, r6
   28434:	cmp	r1, r4
   28438:	bhi	28480 <myhtml_tag_add@@Base+0xac>
   2843c:	bic	r0, r6, #15
   28440:	vmov.i8	q8, #191	; 0xbf
   28444:	vmov.i8	q9, #96	; 0x60
   28448:	vmov.i8	q10, #26	; 0x1a
   2844c:	mov	r2, r9
   28450:	mov	r3, r4
   28454:	mov	r1, r0
   28458:	vld1.8	{d22-d23}, [r3]!
   2845c:	subs	r1, r1, #16
   28460:	vadd.i8	q12, q11, q8
   28464:	vorr	q13, q11, q9
   28468:	vcgt.u8	q12, q10, q12
   2846c:	vbsl	q12, q13, q11
   28470:	vst1.8	{d24-d25}, [r2]!
   28474:	bne	28458 <myhtml_tag_add@@Base+0x84>
   28478:	cmp	r0, r6
   2847c:	beq	284c0 <myhtml_tag_add@@Base+0xec>
   28480:	sub	r1, r6, r0
   28484:	add	r2, r9, r0
   28488:	add	r0, r4, r0
   2848c:	ldrb	r3, [r0], #1
   28490:	sub	r4, r3, #65	; 0x41
   28494:	uxtb	r4, r4
   28498:	cmp	r4, #26
   2849c:	orrcc	r3, r3, #96	; 0x60
   284a0:	subs	r1, r1, #1
   284a4:	strb	r3, [r2], #1
   284a8:	bne	2848c <myhtml_tag_add@@Base+0xb8>
   284ac:	b	284c0 <myhtml_tag_add@@Base+0xec>
   284b0:	mov	r0, r9
   284b4:	mov	r1, r4
   284b8:	mov	r2, r6
   284bc:	bl	1170c <strncpy@plt>
   284c0:	mov	r7, #0
   284c4:	strb	r7, [r9, r6]
   284c8:	ldr	r0, [r5, #4]
   284cc:	bl	115e0 <mcsimple_malloc@plt>
   284d0:	mov	r4, r0
   284d4:	ldr	r0, [r5]
   284d8:	mov	r1, r9
   284dc:	mov	r2, r6
   284e0:	str	r7, [sp]
   284e4:	mov	r3, r4
   284e8:	bl	1176c <mctree_insert@plt>
   284ec:	ldr	r0, [r5, #8]
   284f0:	vmov.i32	q8, #0	; 0x00000000
   284f4:	add	r1, r0, #1
   284f8:	stm	r4, {r0, r9}
   284fc:	str	r6, [r4, #8]
   28500:	str	r8, [r4, #12]
   28504:	str	r1, [r5, #8]
   28508:	add	r1, r4, #28
   2850c:	vst1.32	{d16-d17}, [r1]
   28510:	add	r1, r4, #16
   28514:	vst1.32	{d16-d17}, [r1]
   28518:	sub	sp, fp, #24
   2851c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00028520 <myhtml_tag_set_category@@Base>:
   28520:	cmp	r1, #252	; 0xfc
   28524:	bxcc	lr
   28528:	push	{r4, r5, fp, lr}
   2852c:	add	fp, sp, #8
   28530:	ldr	r0, [r0, #4]
   28534:	sub	r1, r1, #252	; 0xfc
   28538:	mov	r4, r3
   2853c:	mov	r5, r2
   28540:	bl	11bec <mcsimple_get_by_absolute_position@plt>
   28544:	add	r0, r0, r5, lsl #2
   28548:	str	r4, [r0, #16]
   2854c:	pop	{r4, r5, fp, lr}
   28550:	bx	lr

00028554 <myhtml_tag_get_by_id@@Base>:
   28554:	cmp	r1, #252	; 0xfc
   28558:	bcc	28568 <myhtml_tag_get_by_id@@Base+0x14>
   2855c:	ldr	r0, [r0, #4]
   28560:	sub	r1, r1, #252	; 0xfc
   28564:	b	11bec <mcsimple_get_by_absolute_position@plt>
   28568:	mov	r0, r1
   2856c:	b	110c4 <myhtml_tag_static_get_by_id@plt>

00028570 <myhtml_tag_get_by_name@@Base>:
   28570:	push	{r4, r5, r6, sl, fp, lr}
   28574:	add	fp, sp, #16
   28578:	mov	r4, r0
   2857c:	mov	r6, r1
   28580:	mov	r0, r1
   28584:	mov	r1, r2
   28588:	mov	r5, r2
   2858c:	bl	1173c <myhtml_tag_static_search@plt>
   28590:	cmp	r0, #0
   28594:	popne	{r4, r5, r6, sl, fp, pc}
   28598:	ldr	r0, [r4]
   2859c:	mov	r1, r6
   285a0:	mov	r2, r5
   285a4:	bl	115ec <mctree_search_lowercase@plt>
   285a8:	ldr	r1, [r4]
   285ac:	rsb	r0, r0, r0, lsl #3
   285b0:	ldr	r1, [r1]
   285b4:	add	r0, r1, r0, lsl #2
   285b8:	ldr	r0, [r0, #8]
   285bc:	pop	{r4, r5, r6, sl, fp, pc}

000285c0 <myhtml_tag_static_search@@Base>:
   285c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   285c4:	add	fp, sp, #24
   285c8:	mov	r4, r1
   285cc:	mov	r8, r0
   285d0:	ldrb	r1, [r0], r1
   285d4:	ldrb	r0, [r0, #-1]
   285d8:	ldr	r2, [pc, #188]	; 2869c <myhtml_tag_static_search@@Base+0xdc>
   285dc:	ldr	r7, [pc, #188]	; 286a0 <myhtml_tag_static_search@@Base+0xe0>
   285e0:	add	r2, pc, r2
   285e4:	add	r7, pc, r7
   285e8:	ldrb	r1, [r2, r1]
   285ec:	ldrb	r0, [r2, r0]
   285f0:	mul	r1, r1, r4
   285f4:	mul	r0, r1, r0
   285f8:	movw	r1, #411	; 0x19b
   285fc:	movt	r1, #4515	; 0x11a3
   28600:	umull	r1, r2, r0, r1
   28604:	sub	r1, r0, r2
   28608:	add	r1, r2, r1, lsr #1
   2860c:	movw	r2, #479	; 0x1df
   28610:	lsr	r1, r1, #8
   28614:	mls	r0, r1, r2, r0
   28618:	add	r5, r0, #1
   2861c:	add	r0, r5, r5, lsl #1
   28620:	ldr	r6, [r7, r0, lsl #2]
   28624:	cmp	r6, #0
   28628:	bne	28640 <myhtml_tag_static_search@@Base+0x80>
   2862c:	b	28690 <myhtml_tag_static_search@@Base+0xd0>
   28630:	add	r0, r5, r5, lsl #1
   28634:	ldr	r6, [r7, r0, lsl #2]
   28638:	cmp	r6, #0
   2863c:	beq	28690 <myhtml_tag_static_search@@Base+0xd0>
   28640:	ldr	r0, [r6, #8]
   28644:	cmp	r0, r4
   28648:	bne	2867c <myhtml_tag_static_search@@Base+0xbc>
   2864c:	ldr	r0, [r6, #4]
   28650:	mov	r1, r8
   28654:	mov	r2, r4
   28658:	bl	11298 <mycore_strncasecmp@plt>
   2865c:	cmp	r0, #0
   28660:	beq	28694 <myhtml_tag_static_search@@Base+0xd4>
   28664:	add	r0, r5, r5, lsl #1
   28668:	add	r0, r7, r0, lsl #2
   2866c:	ldr	r5, [r0, #4]
   28670:	cmp	r5, #0
   28674:	bne	28630 <myhtml_tag_static_search@@Base+0x70>
   28678:	b	28690 <myhtml_tag_static_search@@Base+0xd0>
   2867c:	bhi	28690 <myhtml_tag_static_search@@Base+0xd0>
   28680:	add	r0, r5, r5, lsl #1
   28684:	add	r0, r7, r0, lsl #2
   28688:	ldr	r5, [r0, #4]
   2868c:	b	28630 <myhtml_tag_static_search@@Base+0x70>
   28690:	mov	r6, #0
   28694:	mov	r0, r6
   28698:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2869c:	andeq	sl, sp, r6, lsl #4
   286a0:	strdeq	lr, [lr], -r4

000286a4 <myhtml_tag_static_get_by_id@@Base>:
   286a4:	ldr	r1, [pc, #12]	; 286b8 <myhtml_tag_static_get_by_id@@Base+0x14>
   286a8:	mov	r2, #44	; 0x2c
   286ac:	add	r1, pc, r1
   286b0:	mla	r0, r0, r2, r1
   286b4:	bx	lr
   286b8:	andeq	r0, pc, r8, lsl #17

000286bc <myhtml_token_create@@Base>:
   286bc:	push	{r4, r5, r6, r7, fp, lr}
   286c0:	add	fp, sp, #16
   286c4:	mov	r5, r0
   286c8:	mov	r0, #24
   286cc:	mov	r6, r1
   286d0:	cmp	r1, #0
   286d4:	movweq	r6, #4096	; 0x1000
   286d8:	bl	119ac <mycore_malloc@plt>
   286dc:	mov	r7, #0
   286e0:	cmp	r0, #0
   286e4:	beq	28760 <myhtml_token_create@@Base+0xa4>
   286e8:	mov	r4, r0
   286ec:	bl	10ec0 <mcobject_async_create@plt>
   286f0:	cmp	r0, #0
   286f4:	str	r0, [r4, #4]
   286f8:	beq	2876c <myhtml_token_create@@Base+0xb0>
   286fc:	bl	10ec0 <mcobject_async_create@plt>
   28700:	str	r0, [r4, #8]
   28704:	mov	r1, r0
   28708:	ldr	r0, [r4, #4]
   2870c:	cmp	r1, #0
   28710:	beq	28768 <myhtml_token_create@@Base+0xac>
   28714:	mov	r1, #128	; 0x80
   28718:	mov	r2, r6
   2871c:	mov	r3, #52	; 0x34
   28720:	bl	10e24 <mcobject_async_init@plt>
   28724:	ldr	r0, [r4, #8]
   28728:	mov	r1, #128	; 0x80
   2872c:	mov	r2, r6
   28730:	mov	r3, #68	; 0x44
   28734:	bl	10e24 <mcobject_async_init@plt>
   28738:	ldr	r0, [r4, #4]
   2873c:	mov	r1, #0
   28740:	bl	11850 <mcobject_async_node_add@plt>
   28744:	str	r0, [r4, #12]
   28748:	mov	r1, #0
   2874c:	ldr	r0, [r4, #8]
   28750:	bl	11850 <mcobject_async_node_add@plt>
   28754:	mov	r7, r4
   28758:	str	r0, [r4, #16]
   2875c:	str	r5, [r4]
   28760:	mov	r0, r7
   28764:	pop	{r4, r5, r6, r7, fp, pc}
   28768:	bl	11a9c <mycore_free@plt>
   2876c:	mov	r0, r4
   28770:	bl	11a9c <mycore_free@plt>
   28774:	mov	r0, r7
   28778:	pop	{r4, r5, r6, r7, fp, pc}

0002877c <myhtml_token_clean@@Base>:
   2877c:	push	{r4, sl, fp, lr}
   28780:	add	fp, sp, #8
   28784:	mov	r4, r0
   28788:	ldr	r0, [r0, #4]
   2878c:	ldr	r1, [r4, #12]
   28790:	bl	116ac <mcobject_async_node_clean@plt>
   28794:	ldr	r0, [r4, #8]
   28798:	ldr	r1, [r4, #16]
   2879c:	pop	{r4, sl, fp, lr}
   287a0:	b	116ac <mcobject_async_node_clean@plt>

000287a4 <myhtml_token_clean_all@@Base>:
   287a4:	push	{r4, sl, fp, lr}
   287a8:	add	fp, sp, #8
   287ac:	mov	r4, r0
   287b0:	ldr	r0, [r0, #4]
   287b4:	bl	11c70 <mcobject_async_clean@plt>
   287b8:	ldr	r0, [r4, #8]
   287bc:	pop	{r4, sl, fp, lr}
   287c0:	b	11c70 <mcobject_async_clean@plt>

000287c4 <myhtml_token_destroy@@Base>:
   287c4:	cmp	r0, #0
   287c8:	beq	28814 <myhtml_token_destroy@@Base+0x50>
   287cc:	push	{r4, sl, fp, lr}
   287d0:	add	fp, sp, #8
   287d4:	mov	r4, r0
   287d8:	ldr	r0, [r0, #4]
   287dc:	cmp	r0, #0
   287e0:	beq	287f0 <myhtml_token_destroy@@Base+0x2c>
   287e4:	mov	r1, #1
   287e8:	bl	118b0 <mcobject_async_destroy@plt>
   287ec:	str	r0, [r4, #4]
   287f0:	ldr	r0, [r4, #8]
   287f4:	cmp	r0, #0
   287f8:	beq	28808 <myhtml_token_destroy@@Base+0x44>
   287fc:	mov	r1, #1
   28800:	bl	118b0 <mcobject_async_destroy@plt>
   28804:	str	r0, [r4, #8]
   28808:	mov	r0, r4
   2880c:	bl	11a9c <mycore_free@plt>
   28810:	pop	{r4, sl, fp, lr}
   28814:	mov	r0, #0
   28818:	bx	lr

0002881c <myhtml_token_node_create@@Base>:
   2881c:	push	{r4, r5, fp, lr}
   28820:	add	fp, sp, #8
   28824:	ldr	r0, [r0, #4]
   28828:	mov	r2, #0
   2882c:	mov	r5, #0
   28830:	bl	11910 <mcobject_async_malloc@plt>
   28834:	cmp	r0, #0
   28838:	beq	28878 <myhtml_token_node_create@@Base+0x5c>
   2883c:	mov	r4, r0
   28840:	mov	r0, #0
   28844:	vmov.i32	q8, #0	; 0x00000000
   28848:	mov	r1, #4
   2884c:	str	r0, [r4, #48]	; 0x30
   28850:	add	r0, r4, #32
   28854:	vst1.32	{d16-d17}, [r0]
   28858:	add	r0, r4, #16
   2885c:	vst1.32	{d16-d17}, [r0]
   28860:	mov	r0, #8
   28864:	str	r0, [r4, #48]	; 0x30
   28868:	mov	r0, r4
   2886c:	vst1.32	{d16-d17}, [r0], r1
   28870:	bl	11c94 <mycore_string_clean_all@plt>
   28874:	mov	r5, r4
   28878:	mov	r0, r5
   2887c:	pop	{r4, r5, fp, pc}

00028880 <myhtml_token_node_clean@@Base>:
   28880:	mov	r1, #0
   28884:	vmov.i32	q8, #0	; 0x00000000
   28888:	str	r1, [r0, #48]	; 0x30
   2888c:	add	r1, r0, #32
   28890:	vst1.32	{d16-d17}, [r1]
   28894:	add	r1, r0, #16
   28898:	vst1.32	{d16-d17}, [r1]
   2889c:	mov	r1, #8
   288a0:	str	r1, [r0, #48]	; 0x30
   288a4:	mov	r1, #4
   288a8:	vst1.32	{d16-d17}, [r0], r1
   288ac:	b	11c94 <mycore_string_clean_all@plt>

000288b0 <myhtml_token_attr_create@@Base>:
   288b0:	push	{r4, r5, fp, lr}
   288b4:	add	fp, sp, #8
   288b8:	ldr	r0, [r0, #8]
   288bc:	mov	r2, #0
   288c0:	mov	r5, #0
   288c4:	bl	11910 <mcobject_async_malloc@plt>
   288c8:	cmp	r0, #0
   288cc:	beq	28918 <myhtml_token_attr_create@@Base+0x68>
   288d0:	mov	r4, r0
   288d4:	mov	r0, #1
   288d8:	vmov.i32	q8, #0	; 0x00000000
   288dc:	str	r0, [r4, #64]	; 0x40
   288e0:	add	r0, r4, #48	; 0x30
   288e4:	mov	r5, r4
   288e8:	vst1.32	{d16-d17}, [r0]
   288ec:	add	r0, r4, #32
   288f0:	vst1.32	{d16-d17}, [r0]
   288f4:	add	r0, r4, #16
   288f8:	vst1.32	{d16-d17}, [r0]
   288fc:	mov	r0, #28
   28900:	vst1.32	{d16-d17}, [r5], r0
   28904:	add	r0, r4, #8
   28908:	bl	11c94 <mycore_string_clean_all@plt>
   2890c:	mov	r0, r5
   28910:	bl	11c94 <mycore_string_clean_all@plt>
   28914:	mov	r5, r4
   28918:	mov	r0, r5
   2891c:	pop	{r4, r5, fp, pc}

00028920 <myhtml_token_attr_clean@@Base>:
   28920:	push	{r4, sl, fp, lr}
   28924:	add	fp, sp, #8
   28928:	mov	r1, #1
   2892c:	vmov.i32	q8, #0	; 0x00000000
   28930:	mov	r4, r0
   28934:	str	r1, [r0, #64]	; 0x40
   28938:	add	r1, r0, #48	; 0x30
   2893c:	vst1.32	{d16-d17}, [r1]
   28940:	add	r1, r0, #32
   28944:	vst1.32	{d16-d17}, [r1]
   28948:	add	r1, r0, #16
   2894c:	add	r0, r0, #8
   28950:	vst1.32	{d16-d17}, [r1]
   28954:	mov	r1, #28
   28958:	vst1.32	{d16-d17}, [r4], r1
   2895c:	bl	11c94 <mycore_string_clean_all@plt>
   28960:	mov	r0, r4
   28964:	pop	{r4, sl, fp, lr}
   28968:	b	11c94 <mycore_string_clean_all@plt>

0002896c <myhtml_token_node_tag_id@@Base>:
   2896c:	ldr	r0, [r0]
   28970:	bx	lr

00028974 <myhtml_token_node_raw_position@@Base>:
   28974:	cmp	r1, #0
   28978:	ldrne	r2, [r1, #24]
   2897c:	ldrne	r1, [r1, #28]
   28980:	strne	r2, [r0]
   28984:	strne	r1, [r0, #4]
   28988:	bxne	lr
   2898c:	mov	r1, #0
   28990:	str	r1, [r0]
   28994:	str	r1, [r0, #4]
   28998:	bx	lr

0002899c <myhtml_token_node_element_position@@Base>:
   2899c:	cmp	r1, #0
   289a0:	ldrne	r2, [r1, #32]
   289a4:	ldrne	r1, [r1, #36]	; 0x24
   289a8:	strne	r2, [r0]
   289ac:	strne	r1, [r0, #4]
   289b0:	bxne	lr
   289b4:	mov	r1, #0
   289b8:	str	r1, [r0]
   289bc:	str	r1, [r0, #4]
   289c0:	bx	lr

000289c4 <myhtml_token_node_attribute_first@@Base>:
   289c4:	ldr	r0, [r0, #40]	; 0x28
   289c8:	bx	lr

000289cc <myhtml_token_node_attribute_last@@Base>:
   289cc:	ldr	r0, [r0, #44]	; 0x2c
   289d0:	bx	lr

000289d4 <myhtml_token_node_text@@Base>:
   289d4:	cmp	r1, #0
   289d8:	ldrne	r2, [r0, #12]
   289dc:	strne	r2, [r1]
   289e0:	ldr	r0, [r0, #4]
   289e4:	bx	lr

000289e8 <myhtml_token_node_string@@Base>:
   289e8:	add	r0, r0, #4
   289ec:	bx	lr

000289f0 <myhtml_token_node_is_close@@Base>:
   289f0:	ldr	r0, [r0, #48]	; 0x30
   289f4:	and	r0, r0, #1
   289f8:	bx	lr

000289fc <myhtml_token_node_is_close_self@@Base>:
   289fc:	ldr	r0, [r0, #48]	; 0x30
   28a00:	ubfx	r0, r0, #1, #1
   28a04:	bx	lr

00028a08 <myhtml_token_node_wait_for_done@@Base>:
   28a08:	push	{r4, r5, fp, lr}
   28a0c:	add	fp, sp, #8
   28a10:	mov	r5, r0
   28a14:	ldr	r0, [r1, #48]	; 0x30
   28a18:	tst	r0, #4
   28a1c:	popne	{r4, r5, fp, pc}
   28a20:	mov	r4, r1
   28a24:	ldr	r0, [r5]
   28a28:	ldr	r0, [r0]
   28a2c:	ldr	r0, [r0]
   28a30:	ldr	r0, [r0, #24]
   28a34:	bl	11148 <mythread_nanosleep_sleep@plt>
   28a38:	ldr	r0, [r4, #48]	; 0x30
   28a3c:	tst	r0, #4
   28a40:	beq	28a24 <myhtml_token_node_wait_for_done@@Base+0x1c>
   28a44:	pop	{r4, r5, fp, pc}

00028a48 <myhtml_token_set_done@@Base>:
   28a48:	ldr	r1, [r0, #48]	; 0x30
   28a4c:	orr	r1, r1, #4
   28a50:	str	r1, [r0, #48]	; 0x30
   28a54:	bx	lr

00028a58 <myhtml_token_node_clone@@Base>:
   28a58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28a5c:	add	fp, sp, #28
   28a60:	sub	sp, sp, #4
   28a64:	cmp	r1, #0
   28a68:	beq	28b64 <myhtml_token_node_clone@@Base+0x10c>
   28a6c:	mov	r5, r0
   28a70:	ldr	r8, [r0]
   28a74:	ldr	r0, [r0, #4]
   28a78:	mov	r9, r1
   28a7c:	mov	r1, r2
   28a80:	mov	r2, #0
   28a84:	mov	r4, r3
   28a88:	mov	r7, #0
   28a8c:	bl	11910 <mcobject_async_malloc@plt>
   28a90:	cmp	r0, #0
   28a94:	beq	28b68 <myhtml_token_node_clone@@Base+0x110>
   28a98:	mov	r7, #0
   28a9c:	mov	r6, r0
   28aa0:	vmov.i32	q8, #0	; 0x00000000
   28aa4:	str	r8, [sp]
   28aa8:	str	r7, [r0, #48]	; 0x30
   28aac:	add	r0, r0, #32
   28ab0:	mov	sl, r6
   28ab4:	add	r8, r6, #4
   28ab8:	vst1.32	{d16-d17}, [r0]
   28abc:	add	r0, r6, #16
   28ac0:	vst1.32	{d16-d17}, [r0]
   28ac4:	mov	r0, #8
   28ac8:	str	r0, [r6, #48]	; 0x30
   28acc:	mov	r0, #24
   28ad0:	vst1.32	{d16-d17}, [sl], r0
   28ad4:	mov	r0, r8
   28ad8:	bl	11c94 <mycore_string_clean_all@plt>
   28adc:	ldr	r0, [r9]
   28ae0:	str	r0, [r6]
   28ae4:	ldr	r0, [r9, #48]	; 0x30
   28ae8:	str	r7, [r6, #40]	; 0x28
   28aec:	str	r7, [r6, #44]	; 0x2c
   28af0:	str	r0, [r6, #48]	; 0x30
   28af4:	add	r0, r9, #24
   28af8:	vld1.32	{d16-d17}, [r0]
   28afc:	vst1.32	{d16-d17}, [sl]
   28b00:	ldr	r2, [r9, #12]
   28b04:	cmp	r2, #0
   28b08:	beq	28b74 <myhtml_token_node_clone@@Base+0x11c>
   28b0c:	ldr	r1, [sp]
   28b10:	add	r3, r2, #1
   28b14:	mov	r2, r8
   28b18:	ldr	r0, [r1, #4]
   28b1c:	ldr	r1, [r1, #52]	; 0x34
   28b20:	bl	11508 <mycore_string_init@plt>
   28b24:	ldr	r1, [r9, #4]
   28b28:	ldr	r2, [r9, #12]
   28b2c:	mov	r0, r8
   28b30:	bl	116f4 <mycore_string_append@plt>
   28b34:	ldr	r7, [r9, #40]	; 0x28
   28b38:	cmp	r7, #0
   28b3c:	beq	28ba8 <myhtml_token_node_clone@@Base+0x150>
   28b40:	mov	r0, r5
   28b44:	mov	r1, r7
   28b48:	mov	r2, r6
   28b4c:	mov	r3, r4
   28b50:	bl	11604 <myhtml_token_attr_copy@plt>
   28b54:	ldr	r7, [r7]
   28b58:	cmp	r7, #0
   28b5c:	bne	28b40 <myhtml_token_node_clone@@Base+0xe8>
   28b60:	b	28ba8 <myhtml_token_node_clone@@Base+0x150>
   28b64:	mov	r7, #0
   28b68:	mov	r0, r7
   28b6c:	sub	sp, fp, #28
   28b70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28b74:	mov	r0, r8
   28b78:	bl	11c94 <mycore_string_clean_all@plt>
   28b7c:	ldr	r7, [r9, #40]	; 0x28
   28b80:	cmp	r7, #0
   28b84:	beq	28ba8 <myhtml_token_node_clone@@Base+0x150>
   28b88:	mov	r0, r5
   28b8c:	mov	r1, r7
   28b90:	mov	r2, r6
   28b94:	mov	r3, r4
   28b98:	bl	11604 <myhtml_token_attr_copy@plt>
   28b9c:	ldr	r7, [r7]
   28ba0:	cmp	r7, #0
   28ba4:	bne	28b88 <myhtml_token_node_clone@@Base+0x130>
   28ba8:	mov	r7, r6
   28bac:	mov	r0, r7
   28bb0:	sub	sp, fp, #28
   28bb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00028bb8 <myhtml_token_node_attr_copy@@Base>:
   28bb8:	push	{r4, r5, r6, r7, fp, lr}
   28bbc:	add	fp, sp, #16
   28bc0:	ldr	r7, [r1, #40]	; 0x28
   28bc4:	cmp	r7, #0
   28bc8:	popeq	{r4, r5, r6, r7, fp, pc}
   28bcc:	mov	r4, r3
   28bd0:	mov	r5, r2
   28bd4:	mov	r6, r0
   28bd8:	mov	r0, r6
   28bdc:	mov	r1, r7
   28be0:	mov	r2, r5
   28be4:	mov	r3, r4
   28be8:	bl	11604 <myhtml_token_attr_copy@plt>
   28bec:	ldr	r7, [r7]
   28bf0:	cmp	r7, #0
   28bf4:	bne	28bd8 <myhtml_token_node_attr_copy@@Base+0x20>
   28bf8:	pop	{r4, r5, r6, r7, fp, pc}

00028bfc <myhtml_token_node_text_append@@Base>:
   28bfc:	push	{r4, r5, r6, sl, fp, lr}
   28c00:	add	fp, sp, #16
   28c04:	mov	r5, r2
   28c08:	ldr	r2, [r0]
   28c0c:	add	r6, r1, #4
   28c10:	mov	r4, r3
   28c14:	add	r3, r3, #2
   28c18:	ldr	r0, [r2, #4]
   28c1c:	ldr	r2, [r2, #52]	; 0x34
   28c20:	mov	r1, r2
   28c24:	mov	r2, r6
   28c28:	bl	11508 <mycore_string_init@plt>
   28c2c:	mov	r0, r6
   28c30:	mov	r1, r5
   28c34:	mov	r2, r4
   28c38:	pop	{r4, r5, r6, sl, fp, lr}
   28c3c:	b	116f4 <mycore_string_append@plt>

00028c40 <myhtml_token_node_attr_append@@Base>:
   28c40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28c44:	add	fp, sp, #28
   28c48:	sub	sp, sp, #4
   28c4c:	mov	r4, r1
   28c50:	mov	sl, r0
   28c54:	ldr	r0, [r0, #8]
   28c58:	ldr	r1, [fp, #16]
   28c5c:	mov	r9, r2
   28c60:	mov	r2, #0
   28c64:	mov	r6, r3
   28c68:	mov	r7, #0
   28c6c:	bl	11910 <mcobject_async_malloc@plt>
   28c70:	ldr	r8, [fp, #12]
   28c74:	mov	r5, r0
   28c78:	cmp	r6, #0
   28c7c:	str	r7, [r0]
   28c80:	beq	28d04 <myhtml_token_node_attr_append@@Base+0xc4>
   28c84:	ldr	r1, [sl]
   28c88:	add	r7, r5, #8
   28c8c:	add	r3, r6, #1
   28c90:	mov	r2, r7
   28c94:	ldr	r0, [r1, #4]
   28c98:	ldr	r1, [r1, #52]	; 0x34
   28c9c:	bl	11508 <mycore_string_init@plt>
   28ca0:	mov	r0, r7
   28ca4:	mov	r1, r9
   28ca8:	mov	r2, r6
   28cac:	bl	11568 <mycore_string_append_lowercase@plt>
   28cb0:	cmp	r8, #0
   28cb4:	beq	28d14 <myhtml_token_node_attr_append@@Base+0xd4>
   28cb8:	ldr	r1, [sl]
   28cbc:	ldr	r6, [fp, #8]
   28cc0:	add	r7, r5, #28
   28cc4:	add	r3, r8, #1
   28cc8:	mov	r2, r7
   28ccc:	ldr	r0, [r1, #4]
   28cd0:	ldr	r1, [r1, #52]	; 0x34
   28cd4:	bl	11508 <mycore_string_init@plt>
   28cd8:	mov	r0, r7
   28cdc:	mov	r1, r6
   28ce0:	mov	r2, r8
   28ce4:	bl	116f4 <mycore_string_append@plt>
   28ce8:	ldr	r0, [r4, #40]	; 0x28
   28cec:	cmp	r0, #0
   28cf0:	beq	28d28 <myhtml_token_node_attr_append@@Base+0xe8>
   28cf4:	ldr	r0, [r4, #44]!	; 0x2c
   28cf8:	str	r5, [r0]
   28cfc:	str	r0, [r5, #4]
   28d00:	b	28d38 <myhtml_token_node_attr_append@@Base+0xf8>
   28d04:	add	r0, r5, #8
   28d08:	bl	11c94 <mycore_string_clean_all@plt>
   28d0c:	cmp	r8, #0
   28d10:	bne	28cb8 <myhtml_token_node_attr_append@@Base+0x78>
   28d14:	add	r0, r5, #28
   28d18:	bl	11c94 <mycore_string_clean_all@plt>
   28d1c:	ldr	r0, [r4, #40]	; 0x28
   28d20:	cmp	r0, #0
   28d24:	bne	28cf4 <myhtml_token_node_attr_append@@Base+0xb4>
   28d28:	mov	r0, #0
   28d2c:	str	r0, [r5, #4]
   28d30:	str	r5, [r4, #40]	; 0x28
   28d34:	add	r4, r4, #44	; 0x2c
   28d38:	mov	r0, #1
   28d3c:	str	r5, [r4]
   28d40:	str	r0, [r5, #64]	; 0x40
   28d44:	mov	r0, r5
   28d48:	sub	sp, fp, #28
   28d4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00028d50 <myhtml_token_node_attr_append_with_convert_encoding@@Base>:
   28d50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28d54:	add	fp, sp, #28
   28d58:	sub	sp, sp, #4
   28d5c:	mov	r9, r1
   28d60:	mov	sl, r0
   28d64:	ldr	r0, [r0, #8]
   28d68:	ldr	r1, [fp, #16]
   28d6c:	str	r2, [sp]
   28d70:	mov	r2, #0
   28d74:	mov	r6, r3
   28d78:	mov	r8, #0
   28d7c:	bl	11910 <mcobject_async_malloc@plt>
   28d80:	ldr	r4, [fp, #20]
   28d84:	ldr	r7, [fp, #12]
   28d88:	mov	r5, r0
   28d8c:	cmp	r6, #0
   28d90:	str	r8, [r0]
   28d94:	beq	28e30 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xe0>
   28d98:	ldr	r1, [sl]
   28d9c:	add	r8, r5, #8
   28da0:	add	r3, r6, #1
   28da4:	mov	r2, r8
   28da8:	ldr	r0, [r1, #4]
   28dac:	ldr	r1, [r1, #52]	; 0x34
   28db0:	bl	11508 <mycore_string_init@plt>
   28db4:	mov	r0, r8
   28db8:	cmp	r4, #0
   28dbc:	beq	28e7c <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x12c>
   28dc0:	ldr	r1, [sp]
   28dc4:	mov	r2, r6
   28dc8:	mov	r3, r4
   28dcc:	bl	10f74 <myencoding_string_append_lowercase_ascii@plt>
   28dd0:	cmp	r7, #0
   28dd4:	beq	28e40 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xf0>
   28dd8:	ldr	r1, [sl]
   28ddc:	ldr	r8, [fp, #8]
   28de0:	add	r6, r5, #28
   28de4:	add	r3, r7, #1
   28de8:	mov	r2, r6
   28dec:	ldr	r0, [r1, #4]
   28df0:	ldr	r1, [r1, #52]	; 0x34
   28df4:	bl	11508 <mycore_string_init@plt>
   28df8:	mov	r0, r6
   28dfc:	mov	r1, r8
   28e00:	mov	r2, r7
   28e04:	cmp	r4, #0
   28e08:	beq	28e94 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x144>
   28e0c:	mov	r3, r4
   28e10:	bl	113c4 <myencoding_string_append@plt>
   28e14:	ldr	r0, [r9, #40]	; 0x28
   28e18:	cmp	r0, #0
   28e1c:	beq	28e54 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x104>
   28e20:	ldr	r0, [r9, #44]!	; 0x2c
   28e24:	str	r5, [r0]
   28e28:	str	r0, [r5, #4]
   28e2c:	b	28e64 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x114>
   28e30:	add	r0, r5, #8
   28e34:	bl	11c94 <mycore_string_clean_all@plt>
   28e38:	cmp	r7, #0
   28e3c:	bne	28dd8 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x88>
   28e40:	add	r0, r5, #28
   28e44:	bl	11c94 <mycore_string_clean_all@plt>
   28e48:	ldr	r0, [r9, #40]	; 0x28
   28e4c:	cmp	r0, #0
   28e50:	bne	28e20 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xd0>
   28e54:	mov	r0, #0
   28e58:	str	r0, [r5, #4]
   28e5c:	str	r5, [r9, #40]	; 0x28
   28e60:	add	r9, r9, #44	; 0x2c
   28e64:	mov	r0, #1
   28e68:	str	r5, [r9]
   28e6c:	str	r0, [r5, #64]	; 0x40
   28e70:	mov	r0, r5
   28e74:	sub	sp, fp, #28
   28e78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28e7c:	ldr	r1, [sp]
   28e80:	mov	r2, r6
   28e84:	bl	11568 <mycore_string_append_lowercase@plt>
   28e88:	cmp	r7, #0
   28e8c:	bne	28dd8 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x88>
   28e90:	b	28e40 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xf0>
   28e94:	bl	116f4 <mycore_string_append@plt>
   28e98:	ldr	r0, [r9, #40]	; 0x28
   28e9c:	cmp	r0, #0
   28ea0:	bne	28e20 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xd0>
   28ea4:	b	28e54 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x104>

00028ea8 <myhtml_token_node_attr_copy_with_check@@Base>:
   28ea8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28eac:	add	fp, sp, #28
   28eb0:	sub	sp, sp, #4
   28eb4:	ldr	r7, [r1, #40]	; 0x28
   28eb8:	cmp	r7, #0
   28ebc:	beq	28f34 <myhtml_token_node_attr_copy_with_check@@Base+0x8c>
   28ec0:	mov	r8, r3
   28ec4:	mov	sl, r2
   28ec8:	mov	r9, r0
   28ecc:	ldr	r6, [r7, #16]
   28ed0:	cmp	r6, #0
   28ed4:	beq	28f28 <myhtml_token_node_attr_copy_with_check@@Base+0x80>
   28ed8:	ldr	r5, [sl, #40]	; 0x28
   28edc:	cmp	r5, #0
   28ee0:	beq	28f14 <myhtml_token_node_attr_copy_with_check@@Base+0x6c>
   28ee4:	ldr	r4, [r7, #8]
   28ee8:	ldr	r0, [r5, #16]
   28eec:	cmp	r0, r6
   28ef0:	bne	28f08 <myhtml_token_node_attr_copy_with_check@@Base+0x60>
   28ef4:	ldr	r0, [r5, #8]
   28ef8:	mov	r1, r4
   28efc:	bl	10db8 <mycore_strcmp@plt>
   28f00:	cmp	r0, #0
   28f04:	beq	28f28 <myhtml_token_node_attr_copy_with_check@@Base+0x80>
   28f08:	ldr	r5, [r5]
   28f0c:	cmp	r5, #0
   28f10:	bne	28ee8 <myhtml_token_node_attr_copy_with_check@@Base+0x40>
   28f14:	mov	r0, r9
   28f18:	mov	r1, r7
   28f1c:	mov	r2, sl
   28f20:	mov	r3, r8
   28f24:	bl	11604 <myhtml_token_attr_copy@plt>
   28f28:	ldr	r7, [r7]
   28f2c:	cmp	r7, #0
   28f30:	bne	28ecc <myhtml_token_node_attr_copy_with_check@@Base+0x24>
   28f34:	sub	sp, fp, #28
   28f38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00028f3c <myhtml_token_attr_by_name@@Base>:
   28f3c:	push	{r4, r5, r6, r7, fp, lr}
   28f40:	add	fp, sp, #16
   28f44:	ldr	r7, [r0, #40]	; 0x28
   28f48:	mov	r4, #0
   28f4c:	cmp	r7, #0
   28f50:	beq	28f8c <myhtml_token_attr_by_name@@Base+0x50>
   28f54:	mov	r5, r2
   28f58:	mov	r6, r1
   28f5c:	ldr	r0, [r7, #16]
   28f60:	cmp	r0, r5
   28f64:	bne	28f80 <myhtml_token_attr_by_name@@Base+0x44>
   28f68:	ldr	r0, [r7, #8]
   28f6c:	mov	r1, r6
   28f70:	bl	10db8 <mycore_strcmp@plt>
   28f74:	cmp	r0, #0
   28f78:	moveq	r0, r7
   28f7c:	popeq	{r4, r5, r6, r7, fp, pc}
   28f80:	ldr	r7, [r7]
   28f84:	cmp	r7, #0
   28f88:	bne	28f5c <myhtml_token_attr_by_name@@Base+0x20>
   28f8c:	mov	r0, r4
   28f90:	pop	{r4, r5, r6, r7, fp, pc}

00028f94 <myhtml_token_attr_copy@@Base>:
   28f94:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   28f98:	add	fp, sp, #24
   28f9c:	mov	r7, r0
   28fa0:	ldr	r0, [r0, #8]
   28fa4:	mov	r8, r2
   28fa8:	mov	r4, r1
   28fac:	mov	r1, r3
   28fb0:	mov	r2, #0
   28fb4:	mov	r5, #0
   28fb8:	bl	11910 <mcobject_async_malloc@plt>
   28fbc:	str	r5, [r0]
   28fc0:	mov	r6, r0
   28fc4:	ldr	r2, [r4, #16]
   28fc8:	cmp	r2, #0
   28fcc:	beq	29050 <myhtml_token_attr_copy@@Base+0xbc>
   28fd0:	ldr	r1, [r7]
   28fd4:	add	r5, r6, #8
   28fd8:	add	r3, r2, #1
   28fdc:	mov	r2, r5
   28fe0:	ldr	r0, [r1, #4]
   28fe4:	ldr	r1, [r1, #52]	; 0x34
   28fe8:	bl	11508 <mycore_string_init@plt>
   28fec:	ldr	r1, [r4, #8]
   28ff0:	ldr	r2, [r4, #16]
   28ff4:	mov	r0, r5
   28ff8:	bl	11568 <mycore_string_append_lowercase@plt>
   28ffc:	ldr	r2, [r4, #36]	; 0x24
   29000:	cmp	r2, #0
   29004:	beq	29064 <myhtml_token_attr_copy@@Base+0xd0>
   29008:	ldr	r1, [r7]
   2900c:	add	r5, r6, #28
   29010:	add	r3, r2, #1
   29014:	mov	r2, r5
   29018:	ldr	r0, [r1, #4]
   2901c:	ldr	r1, [r1, #52]	; 0x34
   29020:	bl	11508 <mycore_string_init@plt>
   29024:	ldr	r1, [r4, #28]
   29028:	ldr	r2, [r4, #36]	; 0x24
   2902c:	mov	r0, r5
   29030:	bl	116f4 <mycore_string_append@plt>
   29034:	ldr	r0, [r8, #40]	; 0x28
   29038:	cmp	r0, #0
   2903c:	beq	29078 <myhtml_token_attr_copy@@Base+0xe4>
   29040:	ldr	r0, [r8, #44]!	; 0x2c
   29044:	str	r6, [r0]
   29048:	str	r0, [r6, #4]
   2904c:	b	29088 <myhtml_token_attr_copy@@Base+0xf4>
   29050:	add	r0, r6, #8
   29054:	bl	11c94 <mycore_string_clean_all@plt>
   29058:	ldr	r2, [r4, #36]	; 0x24
   2905c:	cmp	r2, #0
   29060:	bne	29008 <myhtml_token_attr_copy@@Base+0x74>
   29064:	add	r0, r6, #28
   29068:	bl	11c94 <mycore_string_clean_all@plt>
   2906c:	ldr	r0, [r8, #40]	; 0x28
   29070:	cmp	r0, #0
   29074:	bne	29040 <myhtml_token_attr_copy@@Base+0xac>
   29078:	mov	r0, #0
   2907c:	str	r0, [r6, #4]
   29080:	str	r6, [r8, #40]	; 0x28
   29084:	add	r8, r8, #44	; 0x2c
   29088:	str	r6, [r8]
   2908c:	ldr	r0, [r4, #64]	; 0x40
   29090:	str	r0, [r6, #64]	; 0x40
   29094:	mov	r0, #1
   29098:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002909c <myhtml_token_attr_match@@Base>:
   2909c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   290a0:	add	fp, sp, #24
   290a4:	ldr	r4, [r1, #40]	; 0x28
   290a8:	cmp	r4, #0
   290ac:	beq	29114 <myhtml_token_attr_match@@Base+0x78>
   290b0:	ldr	r7, [fp, #12]
   290b4:	ldr	r8, [fp, #8]
   290b8:	mov	r5, r3
   290bc:	mov	r6, r2
   290c0:	ldr	r0, [r4, #16]
   290c4:	cmp	r0, r5
   290c8:	ldreq	r0, [r4, #36]	; 0x24
   290cc:	cmpeq	r0, r7
   290d0:	beq	290e4 <myhtml_token_attr_match@@Base+0x48>
   290d4:	ldr	r4, [r4]
   290d8:	cmp	r4, #0
   290dc:	bne	290c0 <myhtml_token_attr_match@@Base+0x24>
   290e0:	b	29114 <myhtml_token_attr_match@@Base+0x78>
   290e4:	ldr	r0, [r4, #8]
   290e8:	mov	r1, r6
   290ec:	bl	10db8 <mycore_strcmp@plt>
   290f0:	cmp	r0, #0
   290f4:	bne	290d4 <myhtml_token_attr_match@@Base+0x38>
   290f8:	ldr	r0, [r4, #28]
   290fc:	mov	r1, r8
   29100:	bl	10db8 <mycore_strcmp@plt>
   29104:	cmp	r0, #0
   29108:	movne	r4, #0
   2910c:	mov	r0, r4
   29110:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   29114:	mov	r4, #0
   29118:	mov	r0, r4
   2911c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00029120 <myhtml_token_attr_match_case@@Base>:
   29120:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29124:	add	fp, sp, #24
   29128:	ldr	r4, [r1, #40]	; 0x28
   2912c:	cmp	r4, #0
   29130:	beq	29198 <myhtml_token_attr_match_case@@Base+0x78>
   29134:	ldr	r7, [fp, #12]
   29138:	ldr	r8, [fp, #8]
   2913c:	mov	r5, r3
   29140:	mov	r6, r2
   29144:	ldr	r0, [r4, #16]
   29148:	cmp	r0, r5
   2914c:	ldreq	r0, [r4, #36]	; 0x24
   29150:	cmpeq	r0, r7
   29154:	beq	29168 <myhtml_token_attr_match_case@@Base+0x48>
   29158:	ldr	r4, [r4]
   2915c:	cmp	r4, #0
   29160:	bne	29144 <myhtml_token_attr_match_case@@Base+0x24>
   29164:	b	29198 <myhtml_token_attr_match_case@@Base+0x78>
   29168:	ldr	r0, [r4, #8]
   2916c:	mov	r1, r6
   29170:	bl	10db8 <mycore_strcmp@plt>
   29174:	cmp	r0, #0
   29178:	bne	29158 <myhtml_token_attr_match_case@@Base+0x38>
   2917c:	ldr	r0, [r4, #28]
   29180:	mov	r1, r8
   29184:	bl	11478 <mycore_strcasecmp@plt>
   29188:	cmp	r0, #0
   2918c:	movne	r4, #0
   29190:	mov	r0, r4
   29194:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   29198:	mov	r4, #0
   2919c:	mov	r0, r4
   291a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000291a4 <myhtml_token_adjust_mathml_attributes@@Base>:
   291a4:	push	{r4, r5, fp, lr}
   291a8:	add	fp, sp, #8
   291ac:	ldr	r5, [r0, #40]	; 0x28
   291b0:	cmp	r5, #0
   291b4:	popeq	{r4, r5, fp, pc}
   291b8:	ldr	r4, [pc, #88]	; 29218 <myhtml_token_adjust_mathml_attributes@@Base+0x74>
   291bc:	add	r4, pc, r4
   291c0:	ldr	r0, [r5, #16]
   291c4:	cmp	r0, #13
   291c8:	bne	291e0 <myhtml_token_adjust_mathml_attributes@@Base+0x3c>
   291cc:	ldr	r0, [r5, #8]
   291d0:	mov	r1, r4
   291d4:	bl	10db8 <mycore_strcmp@plt>
   291d8:	cmp	r0, #0
   291dc:	beq	291f0 <myhtml_token_adjust_mathml_attributes@@Base+0x4c>
   291e0:	ldr	r5, [r5]
   291e4:	cmp	r5, #0
   291e8:	bne	291c0 <myhtml_token_adjust_mathml_attributes@@Base+0x1c>
   291ec:	pop	{r4, r5, fp, pc}
   291f0:	ldr	r0, [r5, #8]
   291f4:	ldr	r1, [pc, #32]	; 2921c <myhtml_token_adjust_mathml_attributes@@Base+0x78>
   291f8:	add	r1, pc, r1
   291fc:	vldr	d16, [r1]
   29200:	add	r1, r1, #5
   29204:	vld1.8	{d17}, [r1]
   29208:	vst1.8	{d16}, [r0]
   2920c:	add	r0, r0, #5
   29210:	vst1.8	{d17}, [r0]
   29214:	pop	{r4, r5, fp, pc}
   29218:	andeq	r9, sp, sl, lsl #27
   2921c:	andeq	sl, sp, r8, asr #9

00029220 <_myhtml_token_create_copy_srt@@Base>:
   29220:	push	{r4, r5, r6, sl, fp, lr}
   29224:	add	fp, sp, #16
   29228:	mov	r6, r1
   2922c:	ldr	r1, [r0]
   29230:	mov	r5, r2
   29234:	add	r2, r2, #2
   29238:	mov	r4, r3
   2923c:	ldr	r0, [r1, #4]
   29240:	ldr	r1, [r1, #52]	; 0x34
   29244:	bl	11730 <mchar_async_malloc@plt>
   29248:	str	r0, [r4]
   2924c:	mov	r1, r6
   29250:	mov	r2, r5
   29254:	pop	{r4, r5, r6, sl, fp, lr}
   29258:	b	112bc <mycore_string_raw_copy@plt>

0002925c <myhtml_token_strict_doctype_by_token@@Base>:
   2925c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29260:	add	fp, sp, #24
   29264:	ldr	r5, [r1, #40]	; 0x28
   29268:	mov	r4, r2
   2926c:	mov	r8, r0
   29270:	cmp	r5, #0
   29274:	ldrne	r6, [r5, #16]
   29278:	cmpne	r6, #0
   2927c:	bne	292e0 <myhtml_token_strict_doctype_by_token@@Base+0x84>
   29280:	mov	r5, #0
   29284:	mov	r2, #3
   29288:	strb	r5, [r4]
   2928c:	ldr	r1, [r8]
   29290:	ldr	r0, [r1, #4]
   29294:	ldr	r1, [r1, #52]	; 0x34
   29298:	bl	11730 <mchar_async_malloc@plt>
   2929c:	str	r0, [r4, #4]
   292a0:	mov	r2, #1
   292a4:	ldr	r1, [pc, #544]	; 294cc <myhtml_token_strict_doctype_by_token@@Base+0x270>
   292a8:	add	r1, pc, r1
   292ac:	bl	112bc <mycore_string_raw_copy@plt>
   292b0:	ldr	r0, [r4, #8]
   292b4:	cmp	r0, #0
   292b8:	beq	292c0 <myhtml_token_strict_doctype_by_token@@Base+0x64>
   292bc:	bl	11a9c <mycore_free@plt>
   292c0:	str	r5, [r4, #8]
   292c4:	ldr	r0, [r4, #12]
   292c8:	cmp	r0, #0
   292cc:	beq	292d4 <myhtml_token_strict_doctype_by_token@@Base+0x78>
   292d0:	bl	11a9c <mycore_free@plt>
   292d4:	mov	r0, #0
   292d8:	str	r0, [r4, #12]
   292dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   292e0:	ldr	r1, [r8]
   292e4:	ldr	r7, [r5, #8]
   292e8:	add	r2, r6, #2
   292ec:	ldr	r0, [r1, #4]
   292f0:	ldr	r1, [r1, #52]	; 0x34
   292f4:	bl	11730 <mchar_async_malloc@plt>
   292f8:	mov	r1, r7
   292fc:	mov	r2, r6
   29300:	str	r0, [r4, #4]
   29304:	bl	112bc <mycore_string_raw_copy@plt>
   29308:	ldr	r1, [r4, #4]
   2930c:	ldr	r0, [pc, #432]	; 294c4 <myhtml_token_strict_doctype_by_token@@Base+0x268>
   29310:	add	r0, pc, r0
   29314:	bl	10db8 <mycore_strcmp@plt>
   29318:	clz	r0, r0
   2931c:	lsr	r0, r0, #5
   29320:	strb	r0, [r4]
   29324:	ldr	r5, [r5]
   29328:	cmp	r5, #0
   2932c:	ldrne	r0, [r5, #36]	; 0x24
   29330:	cmpne	r0, #0
   29334:	bne	2933c <myhtml_token_strict_doctype_by_token@@Base+0xe0>
   29338:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2933c:	ldr	r0, [r5, #28]
   29340:	ldr	r1, [pc, #384]	; 294c8 <myhtml_token_strict_doctype_by_token@@Base+0x26c>
   29344:	add	r1, pc, r1
   29348:	bl	11478 <mycore_strcasecmp@plt>
   2934c:	cmp	r0, #0
   29350:	beq	293dc <myhtml_token_strict_doctype_by_token@@Base+0x180>
   29354:	ldr	r0, [r5, #28]
   29358:	ldr	r2, [r5, #36]	; 0x24
   2935c:	ldr	r1, [pc, #368]	; 294d4 <myhtml_token_strict_doctype_by_token@@Base+0x278>
   29360:	add	r1, pc, r1
   29364:	bl	11298 <mycore_strncasecmp@plt>
   29368:	cmp	r0, #0
   2936c:	bne	293f0 <myhtml_token_strict_doctype_by_token@@Base+0x194>
   29370:	ldr	r6, [r5]
   29374:	cmp	r6, #0
   29378:	ldrne	r0, [r6, #36]	; 0x24
   2937c:	cmpne	r0, #0
   29380:	beq	293f0 <myhtml_token_strict_doctype_by_token@@Base+0x194>
   29384:	ldr	r1, [r8]
   29388:	mov	r2, #3
   2938c:	ldr	r0, [r1, #4]
   29390:	ldr	r1, [r1, #52]	; 0x34
   29394:	bl	11730 <mchar_async_malloc@plt>
   29398:	str	r0, [r4, #8]
   2939c:	mov	r2, #1
   293a0:	ldr	r1, [pc, #304]	; 294d8 <myhtml_token_strict_doctype_by_token@@Base+0x27c>
   293a4:	add	r1, pc, r1
   293a8:	bl	112bc <mycore_string_raw_copy@plt>
   293ac:	ldr	r1, [r8]
   293b0:	ldr	r5, [r6, #28]
   293b4:	ldr	r6, [r6, #36]	; 0x24
   293b8:	ldr	r0, [r1, #4]
   293bc:	ldr	r1, [r1, #52]	; 0x34
   293c0:	add	r2, r6, #2
   293c4:	bl	11730 <mchar_async_malloc@plt>
   293c8:	str	r0, [r4, #12]
   293cc:	mov	r1, r5
   293d0:	mov	r2, r6
   293d4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   293d8:	b	112bc <mycore_string_raw_copy@plt>
   293dc:	ldr	r5, [r5]
   293e0:	cmp	r5, #0
   293e4:	ldrne	r6, [r5, #36]	; 0x24
   293e8:	cmpne	r6, #0
   293ec:	bne	29420 <myhtml_token_strict_doctype_by_token@@Base+0x1c4>
   293f0:	ldr	r0, [r4, #8]
   293f4:	cmp	r0, #0
   293f8:	beq	29400 <myhtml_token_strict_doctype_by_token@@Base+0x1a4>
   293fc:	bl	11a9c <mycore_free@plt>
   29400:	mov	r5, #0
   29404:	str	r5, [r4, #8]
   29408:	ldr	r0, [r4, #12]
   2940c:	cmp	r0, #0
   29410:	beq	29418 <myhtml_token_strict_doctype_by_token@@Base+0x1bc>
   29414:	bl	11a9c <mycore_free@plt>
   29418:	str	r5, [r4, #12]
   2941c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   29420:	ldr	r1, [r8]
   29424:	ldr	r7, [r5, #28]
   29428:	add	r2, r6, #2
   2942c:	ldr	r0, [r1, #4]
   29430:	ldr	r1, [r1, #52]	; 0x34
   29434:	bl	11730 <mchar_async_malloc@plt>
   29438:	mov	r1, r7
   2943c:	mov	r2, r6
   29440:	str	r0, [r4, #8]
   29444:	bl	112bc <mycore_string_raw_copy@plt>
   29448:	ldr	r0, [r5]
   2944c:	cmp	r0, #0
   29450:	ldrne	r6, [r0, #36]	; 0x24
   29454:	cmpne	r6, #0
   29458:	bne	29498 <myhtml_token_strict_doctype_by_token@@Base+0x23c>
   2945c:	ldr	r0, [r4, #12]
   29460:	cmp	r0, #0
   29464:	beq	2946c <myhtml_token_strict_doctype_by_token@@Base+0x210>
   29468:	bl	11a9c <mycore_free@plt>
   2946c:	ldr	r1, [r8]
   29470:	mov	r2, #3
   29474:	ldr	r0, [r1, #4]
   29478:	ldr	r1, [r1, #52]	; 0x34
   2947c:	bl	11730 <mchar_async_malloc@plt>
   29480:	str	r0, [r4, #12]
   29484:	mov	r2, #1
   29488:	ldr	r1, [pc, #64]	; 294d0 <myhtml_token_strict_doctype_by_token@@Base+0x274>
   2948c:	add	r1, pc, r1
   29490:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   29494:	b	112bc <mycore_string_raw_copy@plt>
   29498:	ldr	r1, [r8]
   2949c:	ldr	r7, [r0, #28]
   294a0:	add	r2, r6, #2
   294a4:	ldr	r0, [r1, #4]
   294a8:	ldr	r1, [r1, #52]	; 0x34
   294ac:	bl	11730 <mchar_async_malloc@plt>
   294b0:	mov	r1, r7
   294b4:	str	r0, [r4, #12]
   294b8:	mov	r2, r6
   294bc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   294c0:	b	112bc <mycore_string_raw_copy@plt>
   294c4:	ldrdeq	sl, [sp], -r8
   294c8:	andeq	r9, sp, sl, asr #8
   294cc:	andeq	sl, sp, r8, lsr #8
   294d0:	andeq	sl, sp, r4, asr #4
   294d4:	andeq	r9, sp, r0, asr #8
   294d8:	andeq	sl, sp, ip, lsr #6

000294dc <myhtml_token_doctype_check_html_4_0@@Base>:
   294dc:	push	{r4, sl, fp, lr}
   294e0:	add	fp, sp, #8
   294e4:	mov	r4, r0
   294e8:	ldr	r0, [r0, #8]
   294ec:	ldr	r1, [pc, #56]	; 2952c <myhtml_token_doctype_check_html_4_0@@Base+0x50>
   294f0:	add	r1, pc, r1
   294f4:	bl	10db8 <mycore_strcmp@plt>
   294f8:	cmp	r0, #0
   294fc:	moveq	r0, #0
   29500:	popeq	{r4, sl, fp, pc}
   29504:	ldr	r0, [r4, #12]
   29508:	cmp	r0, #0
   2950c:	moveq	r0, #1
   29510:	popeq	{r4, sl, fp, pc}
   29514:	ldr	r1, [pc, #20]	; 29530 <myhtml_token_doctype_check_html_4_0@@Base+0x54>
   29518:	add	r1, pc, r1
   2951c:	bl	10db8 <mycore_strcmp@plt>
   29520:	cmp	r0, #0
   29524:	movwne	r0, #1
   29528:	pop	{r4, sl, fp, pc}
   2952c:	andeq	r9, sp, r4, ror #20
   29530:	andeq	r9, sp, r5, asr sl

00029534 <myhtml_token_doctype_check_html_4_01@@Base>:
   29534:	push	{r4, sl, fp, lr}
   29538:	add	fp, sp, #8
   2953c:	mov	r4, r0
   29540:	ldr	r0, [r0, #8]
   29544:	ldr	r1, [pc, #56]	; 29584 <myhtml_token_doctype_check_html_4_01@@Base+0x50>
   29548:	add	r1, pc, r1
   2954c:	bl	10db8 <mycore_strcmp@plt>
   29550:	cmp	r0, #0
   29554:	moveq	r0, #0
   29558:	popeq	{r4, sl, fp, pc}
   2955c:	ldr	r0, [r4, #12]
   29560:	cmp	r0, #0
   29564:	moveq	r0, #1
   29568:	popeq	{r4, sl, fp, pc}
   2956c:	ldr	r1, [pc, #20]	; 29588 <myhtml_token_doctype_check_html_4_01@@Base+0x54>
   29570:	add	r1, pc, r1
   29574:	bl	10db8 <mycore_strcmp@plt>
   29578:	cmp	r0, #0
   2957c:	movwne	r0, #1
   29580:	pop	{r4, sl, fp, pc}
   29584:	andeq	r9, sp, r0, asr sl
   29588:	andeq	r9, sp, r2, asr #20

0002958c <myhtml_token_doctype_check_xhtml_1_0@@Base>:
   2958c:	push	{r4, sl, fp, lr}
   29590:	add	fp, sp, #8
   29594:	mov	r4, r0
   29598:	ldr	r0, [r0, #12]
   2959c:	cmp	r0, #0
   295a0:	moveq	r0, #1
   295a4:	popeq	{r4, sl, fp, pc}
   295a8:	ldr	r0, [r4, #8]
   295ac:	ldr	r1, [pc, #44]	; 295e0 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x54>
   295b0:	add	r1, pc, r1
   295b4:	bl	10db8 <mycore_strcmp@plt>
   295b8:	cmp	r0, #0
   295bc:	moveq	r0, #0
   295c0:	popeq	{r4, sl, fp, pc}
   295c4:	ldr	r0, [r4, #12]
   295c8:	ldr	r1, [pc, #20]	; 295e4 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x58>
   295cc:	add	r1, pc, r1
   295d0:	bl	10db8 <mycore_strcmp@plt>
   295d4:	cmp	r0, #0
   295d8:	movwne	r0, #1
   295dc:	pop	{r4, sl, fp, pc}
   295e0:	andeq	r9, sp, r8, lsr #20
   295e4:	andeq	r9, sp, sp, lsr #20

000295e8 <myhtml_token_doctype_check_xhtml_1_1@@Base>:
   295e8:	push	{r4, sl, fp, lr}
   295ec:	add	fp, sp, #8
   295f0:	mov	r4, r0
   295f4:	ldr	r0, [r0, #12]
   295f8:	cmp	r0, #0
   295fc:	moveq	r0, #1
   29600:	popeq	{r4, sl, fp, pc}
   29604:	ldr	r0, [r4, #8]
   29608:	ldr	r1, [pc, #44]	; 2963c <myhtml_token_doctype_check_xhtml_1_1@@Base+0x54>
   2960c:	add	r1, pc, r1
   29610:	bl	10db8 <mycore_strcmp@plt>
   29614:	cmp	r0, #0
   29618:	moveq	r0, #0
   2961c:	popeq	{r4, sl, fp, pc}
   29620:	ldr	r0, [r4, #12]
   29624:	ldr	r1, [pc, #20]	; 29640 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x58>
   29628:	add	r1, pc, r1
   2962c:	bl	10db8 <mycore_strcmp@plt>
   29630:	cmp	r0, #0
   29634:	movwne	r0, #1
   29638:	pop	{r4, sl, fp, pc}
   2963c:	andeq	r9, sp, pc, lsl sl
   29640:	andeq	r9, sp, sp, lsl sl

00029644 <myhtml_token_release_and_check_doctype_attributes@@Base>:
   29644:	push	{r4, r5, fp, lr}
   29648:	add	fp, sp, #8
   2964c:	mov	r4, #0
   29650:	cmp	r2, #0
   29654:	beq	297b0 <myhtml_token_release_and_check_doctype_attributes@@Base+0x16c>
   29658:	mov	r5, r2
   2965c:	bl	11400 <myhtml_token_strict_doctype_by_token@plt>
   29660:	ldr	r0, [r5, #4]
   29664:	cmp	r0, #0
   29668:	beq	297b0 <myhtml_token_release_and_check_doctype_attributes@@Base+0x16c>
   2966c:	ldrb	r0, [r5]
   29670:	cmp	r0, #0
   29674:	beq	29688 <myhtml_token_release_and_check_doctype_attributes@@Base+0x44>
   29678:	ldr	r0, [r5, #8]
   2967c:	cmp	r0, #0
   29680:	bne	29694 <myhtml_token_release_and_check_doctype_attributes@@Base+0x50>
   29684:	b	297b0 <myhtml_token_release_and_check_doctype_attributes@@Base+0x16c>
   29688:	ldr	r0, [r5, #8]
   2968c:	cmp	r0, #0
   29690:	beq	2978c <myhtml_token_release_and_check_doctype_attributes@@Base+0x148>
   29694:	ldrb	r1, [r5]
   29698:	cmp	r1, #0
   2969c:	beq	297ac <myhtml_token_release_and_check_doctype_attributes@@Base+0x168>
   296a0:	ldr	r1, [pc, #276]	; 297bc <myhtml_token_release_and_check_doctype_attributes@@Base+0x178>
   296a4:	add	r1, pc, r1
   296a8:	bl	10db8 <mycore_strcmp@plt>
   296ac:	cmp	r0, #0
   296b0:	beq	297ac <myhtml_token_release_and_check_doctype_attributes@@Base+0x168>
   296b4:	ldr	r0, [r5, #12]
   296b8:	cmp	r0, #0
   296bc:	beq	296d4 <myhtml_token_release_and_check_doctype_attributes@@Base+0x90>
   296c0:	ldr	r1, [pc, #248]	; 297c0 <myhtml_token_release_and_check_doctype_attributes@@Base+0x17c>
   296c4:	add	r1, pc, r1
   296c8:	bl	10db8 <mycore_strcmp@plt>
   296cc:	cmp	r0, #0
   296d0:	beq	297ac <myhtml_token_release_and_check_doctype_attributes@@Base+0x168>
   296d4:	ldr	r0, [r5, #8]
   296d8:	ldr	r1, [pc, #228]	; 297c4 <myhtml_token_release_and_check_doctype_attributes@@Base+0x180>
   296dc:	add	r1, pc, r1
   296e0:	bl	10db8 <mycore_strcmp@plt>
   296e4:	cmp	r0, #0
   296e8:	beq	297ac <myhtml_token_release_and_check_doctype_attributes@@Base+0x168>
   296ec:	ldr	r0, [r5, #12]
   296f0:	cmp	r0, #0
   296f4:	beq	297b0 <myhtml_token_release_and_check_doctype_attributes@@Base+0x16c>
   296f8:	ldr	r1, [pc, #200]	; 297c8 <myhtml_token_release_and_check_doctype_attributes@@Base+0x184>
   296fc:	add	r1, pc, r1
   29700:	bl	10db8 <mycore_strcmp@plt>
   29704:	cmp	r0, #0
   29708:	beq	297ac <myhtml_token_release_and_check_doctype_attributes@@Base+0x168>
   2970c:	ldr	r0, [r5, #12]
   29710:	cmp	r0, #0
   29714:	beq	297b0 <myhtml_token_release_and_check_doctype_attributes@@Base+0x16c>
   29718:	ldr	r0, [r5, #8]
   2971c:	ldr	r1, [pc, #168]	; 297cc <myhtml_token_release_and_check_doctype_attributes@@Base+0x188>
   29720:	add	r1, pc, r1
   29724:	bl	10db8 <mycore_strcmp@plt>
   29728:	cmp	r0, #0
   2972c:	beq	297ac <myhtml_token_release_and_check_doctype_attributes@@Base+0x168>
   29730:	ldr	r0, [r5, #12]
   29734:	ldr	r1, [pc, #148]	; 297d0 <myhtml_token_release_and_check_doctype_attributes@@Base+0x18c>
   29738:	add	r1, pc, r1
   2973c:	bl	10db8 <mycore_strcmp@plt>
   29740:	cmp	r0, #0
   29744:	beq	297ac <myhtml_token_release_and_check_doctype_attributes@@Base+0x168>
   29748:	ldr	r0, [r5, #12]
   2974c:	cmp	r0, #0
   29750:	beq	297b0 <myhtml_token_release_and_check_doctype_attributes@@Base+0x16c>
   29754:	ldr	r0, [r5, #8]
   29758:	ldr	r1, [pc, #116]	; 297d4 <myhtml_token_release_and_check_doctype_attributes@@Base+0x190>
   2975c:	add	r1, pc, r1
   29760:	bl	10db8 <mycore_strcmp@plt>
   29764:	cmp	r0, #0
   29768:	beq	297ac <myhtml_token_release_and_check_doctype_attributes@@Base+0x168>
   2976c:	ldr	r0, [r5, #12]
   29770:	ldr	r1, [pc, #96]	; 297d8 <myhtml_token_release_and_check_doctype_attributes@@Base+0x194>
   29774:	add	r1, pc, r1
   29778:	bl	10db8 <mycore_strcmp@plt>
   2977c:	cmp	r0, #0
   29780:	moveq	r4, #1
   29784:	mov	r0, r4
   29788:	pop	{r4, r5, fp, pc}
   2978c:	ldr	r0, [r5, #12]
   29790:	cmp	r0, #0
   29794:	beq	297ac <myhtml_token_release_and_check_doctype_attributes@@Base+0x168>
   29798:	ldr	r1, [pc, #24]	; 297b8 <myhtml_token_release_and_check_doctype_attributes@@Base+0x174>
   2979c:	add	r1, pc, r1
   297a0:	bl	10db8 <mycore_strcmp@plt>
   297a4:	cmp	r0, #0
   297a8:	bne	29678 <myhtml_token_release_and_check_doctype_attributes@@Base+0x34>
   297ac:	mov	r4, #1
   297b0:	mov	r0, r4
   297b4:	pop	{r4, r5, fp, pc}
   297b8:	ldrdeq	r9, [sp], -r6
   297bc:			; <UNDEFINED> instruction: 0x000d98b0
   297c0:	andeq	r9, sp, r9, lsr #17
   297c4:			; <UNDEFINED> instruction: 0x000d98bc
   297c8:			; <UNDEFINED> instruction: 0x000d98b6
   297cc:			; <UNDEFINED> instruction: 0x000d98b8
   297d0:	andeq	r9, sp, r1, asr #17
   297d4:	andeq	r9, sp, pc, asr #17
   297d8:	ldrdeq	r9, [sp], -r1

000297dc <myhtml_token_adjust_svg_attributes@@Base>:
   297dc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   297e0:	add	fp, sp, #24
   297e4:	ldr	r8, [pc, #140]	; 29878 <myhtml_token_adjust_svg_attributes@@Base+0x9c>
   297e8:	mov	r9, r0
   297ec:	mov	r6, #0
   297f0:	add	r8, pc, r8
   297f4:	ldr	r7, [r9, #40]	; 0x28
   297f8:	cmp	r7, #0
   297fc:	bne	29818 <myhtml_token_adjust_svg_attributes@@Base+0x3c>
   29800:	add	r6, r6, #1
   29804:	cmp	r6, #58	; 0x3a
   29808:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   2980c:	ldr	r7, [r9, #40]	; 0x28
   29810:	cmp	r7, #0
   29814:	beq	29800 <myhtml_token_adjust_svg_attributes@@Base+0x24>
   29818:	mov	r0, r8
   2981c:	ldr	r5, [r0, r6, lsl #4]!
   29820:	ldr	r4, [r0, #4]
   29824:	ldr	r0, [r7, #16]
   29828:	cmp	r0, r4
   2982c:	bne	29844 <myhtml_token_adjust_svg_attributes@@Base+0x68>
   29830:	ldr	r0, [r7, #8]
   29834:	mov	r1, r5
   29838:	bl	10db8 <mycore_strcmp@plt>
   2983c:	cmp	r0, #0
   29840:	beq	29854 <myhtml_token_adjust_svg_attributes@@Base+0x78>
   29844:	ldr	r7, [r7]
   29848:	cmp	r7, #0
   2984c:	bne	29824 <myhtml_token_adjust_svg_attributes@@Base+0x48>
   29850:	b	29800 <myhtml_token_adjust_svg_attributes@@Base+0x24>
   29854:	add	r5, r7, #8
   29858:	mov	r0, r5
   2985c:	bl	11a00 <mycore_string_clean@plt>
   29860:	add	r0, r8, r6, lsl #4
   29864:	ldr	r1, [r0, #8]
   29868:	ldr	r2, [r0, #12]
   2986c:	mov	r0, r5
   29870:	bl	116f4 <mycore_string_append@plt>
   29874:	b	29800 <myhtml_token_adjust_svg_attributes@@Base+0x24>
   29878:	muleq	pc, r4, r2	; <UNPREDICTABLE>

0002987c <myhtml_token_adjust_foreign_attributes@@Base>:
   2987c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29880:	add	fp, sp, #28
   29884:	sub	sp, sp, #4
   29888:	ldr	r8, [pc, #152]	; 29928 <myhtml_token_adjust_foreign_attributes@@Base+0xac>
   2988c:	mov	r9, r0
   29890:	mov	r6, #0
   29894:	add	r8, pc, r8
   29898:	ldr	r7, [r9, #40]	; 0x28
   2989c:	cmp	r7, #0
   298a0:	bne	298c0 <myhtml_token_adjust_foreign_attributes@@Base+0x44>
   298a4:	add	r6, r6, #1
   298a8:	cmp	r6, #11
   298ac:	subeq	sp, fp, #28
   298b0:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   298b4:	ldr	r7, [r9, #40]	; 0x28
   298b8:	cmp	r7, #0
   298bc:	beq	298a4 <myhtml_token_adjust_foreign_attributes@@Base+0x28>
   298c0:	add	sl, r6, r6, lsl #2
   298c4:	mov	r0, r8
   298c8:	ldr	r5, [r0, sl, lsl #2]!
   298cc:	ldr	r4, [r0, #4]
   298d0:	ldr	r0, [r7, #16]
   298d4:	cmp	r0, r4
   298d8:	bne	298f0 <myhtml_token_adjust_foreign_attributes@@Base+0x74>
   298dc:	ldr	r0, [r7, #8]
   298e0:	mov	r1, r5
   298e4:	bl	10db8 <mycore_strcmp@plt>
   298e8:	cmp	r0, #0
   298ec:	beq	29900 <myhtml_token_adjust_foreign_attributes@@Base+0x84>
   298f0:	ldr	r7, [r7]
   298f4:	cmp	r7, #0
   298f8:	bne	298d0 <myhtml_token_adjust_foreign_attributes@@Base+0x54>
   298fc:	b	298a4 <myhtml_token_adjust_foreign_attributes@@Base+0x28>
   29900:	add	r5, r7, #8
   29904:	mov	r0, r5
   29908:	bl	11a00 <mycore_string_clean@plt>
   2990c:	add	r0, r8, sl, lsl #2
   29910:	add	r4, r0, #8
   29914:	mov	r0, r5
   29918:	ldm	r4, {r1, r2, r4}
   2991c:	bl	116f4 <mycore_string_append@plt>
   29920:	str	r4, [r7, #64]	; 0x40
   29924:	b	298a4 <myhtml_token_adjust_foreign_attributes@@Base+0x28>
   29928:	muleq	pc, r0, r5	; <UNPREDICTABLE>

0002992c <myhtml_token_attr_compare@@Base>:
   2992c:	mov	r2, r0
   29930:	mov	r0, #0
   29934:	cmp	r2, #0
   29938:	cmpne	r1, #0
   2993c:	bne	29944 <myhtml_token_attr_compare@@Base+0x18>
   29940:	bx	lr
   29944:	push	{r4, r5, fp, lr}
   29948:	add	fp, sp, #8
   2994c:	ldr	r4, [r2, #40]	; 0x28
   29950:	ldr	r5, [r1, #40]	; 0x28
   29954:	cmp	r5, #0
   29958:	cmpne	r4, #0
   2995c:	beq	299bc <myhtml_token_attr_compare@@Base+0x90>
   29960:	b	29978 <myhtml_token_attr_compare@@Base+0x4c>
   29964:	ldr	r4, [r4]
   29968:	ldr	r5, [r5]
   2996c:	cmp	r5, #0
   29970:	cmpne	r4, #0
   29974:	beq	299bc <myhtml_token_attr_compare@@Base+0x90>
   29978:	ldr	r0, [r5, #16]
   2997c:	ldr	r1, [r4, #16]
   29980:	cmp	r1, r0
   29984:	ldreq	r0, [r5, #36]	; 0x24
   29988:	ldreq	r1, [r4, #36]	; 0x24
   2998c:	cmpeq	r1, r0
   29990:	bne	299bc <myhtml_token_attr_compare@@Base+0x90>
   29994:	ldr	r1, [r5, #8]
   29998:	ldr	r0, [r4, #8]
   2999c:	bl	10db8 <mycore_strcmp@plt>
   299a0:	cmp	r0, #0
   299a4:	bne	299bc <myhtml_token_attr_compare@@Base+0x90>
   299a8:	ldr	r1, [r5, #28]
   299ac:	ldr	r0, [r4, #28]
   299b0:	bl	11478 <mycore_strcasecmp@plt>
   299b4:	cmp	r0, #0
   299b8:	beq	29964 <myhtml_token_attr_compare@@Base+0x38>
   299bc:	orr	r0, r5, r4
   299c0:	clz	r0, r0
   299c4:	lsr	r0, r0, #5
   299c8:	pop	{r4, r5, fp, lr}
   299cc:	bx	lr

000299d0 <myhtml_token_delete@@Base>:
   299d0:	push	{r4, r5, fp, lr}
   299d4:	add	fp, sp, #8
   299d8:	ldr	r2, [r1, #4]
   299dc:	mov	r4, r1
   299e0:	mov	r5, r0
   299e4:	cmp	r2, #0
   299e8:	ldrne	r0, [r4, #16]
   299ec:	cmpne	r0, #0
   299f0:	bne	29a04 <myhtml_token_delete@@Base+0x34>
   299f4:	ldr	r0, [r5, #4]
   299f8:	mov	r1, r4
   299fc:	pop	{r4, r5, fp, lr}
   29a00:	b	1110c <mcobject_async_free@plt>
   29a04:	ldr	r1, [r4, #20]
   29a08:	bl	115c8 <mchar_async_free@plt>
   29a0c:	ldr	r0, [r5, #4]
   29a10:	mov	r1, r4
   29a14:	pop	{r4, r5, fp, lr}
   29a18:	b	1110c <mcobject_async_free@plt>

00029a1c <myhtml_token_attr_delete_all@@Base>:
   29a1c:	push	{r4, sl, fp, lr}
   29a20:	add	fp, sp, #8
   29a24:	ldr	r4, [r1, #40]	; 0x28
   29a28:	b	29a30 <myhtml_token_attr_delete_all@@Base+0x14>
   29a2c:	ldr	r4, [r4]
   29a30:	cmp	r4, #0
   29a34:	popeq	{r4, sl, fp, pc}
   29a38:	ldr	r2, [r4, #8]
   29a3c:	cmp	r2, #0
   29a40:	ldrne	r0, [r4, #20]
   29a44:	cmpne	r0, #0
   29a48:	beq	29a54 <myhtml_token_attr_delete_all@@Base+0x38>
   29a4c:	ldr	r1, [r4, #24]
   29a50:	bl	115c8 <mchar_async_free@plt>
   29a54:	ldr	r2, [r4, #28]
   29a58:	cmp	r2, #0
   29a5c:	ldrne	r0, [r4, #40]	; 0x28
   29a60:	cmpne	r0, #0
   29a64:	beq	29a2c <myhtml_token_attr_delete_all@@Base+0x10>
   29a68:	ldr	r1, [r4, #44]	; 0x2c
   29a6c:	bl	115c8 <mchar_async_free@plt>
   29a70:	b	29a2c <myhtml_token_attr_delete_all@@Base+0x10>

00029a74 <myhtml_token_attr_remove@@Base>:
   29a74:	cmp	r1, #0
   29a78:	beq	29aac <myhtml_token_attr_remove@@Base+0x38>
   29a7c:	ldm	r1, {r3, ip}
   29a80:	cmp	ip, #0
   29a84:	streq	r3, [r0, #40]	; 0x28
   29a88:	strne	r3, [ip]
   29a8c:	ldrne	r3, [r1]
   29a90:	add	r2, r3, #4
   29a94:	cmp	r3, #0
   29a98:	addeq	r2, r0, #44	; 0x2c
   29a9c:	mov	r0, #0
   29aa0:	str	ip, [r2]
   29aa4:	str	r0, [r1]
   29aa8:	str	r0, [r1, #4]
   29aac:	mov	r0, r1
   29ab0:	bx	lr

00029ab4 <myhtml_token_attr_remove_by_name@@Base>:
   29ab4:	push	{r4, r5, r6, r7, fp, lr}
   29ab8:	add	fp, sp, #16
   29abc:	ldr	r4, [r0, #40]	; 0x28
   29ac0:	cmp	r4, #0
   29ac4:	beq	29b00 <myhtml_token_attr_remove_by_name@@Base+0x4c>
   29ac8:	mov	r6, r2
   29acc:	mov	r7, r1
   29ad0:	mov	r5, r0
   29ad4:	ldr	r0, [r4, #16]
   29ad8:	cmp	r0, r6
   29adc:	bne	29af4 <myhtml_token_attr_remove_by_name@@Base+0x40>
   29ae0:	ldr	r0, [r4, #8]
   29ae4:	mov	r1, r7
   29ae8:	bl	10db8 <mycore_strcmp@plt>
   29aec:	cmp	r0, #0
   29af0:	beq	29b0c <myhtml_token_attr_remove_by_name@@Base+0x58>
   29af4:	ldr	r4, [r4]
   29af8:	cmp	r4, #0
   29afc:	bne	29ad4 <myhtml_token_attr_remove_by_name@@Base+0x20>
   29b00:	mov	r4, #0
   29b04:	mov	r0, r4
   29b08:	pop	{r4, r5, r6, r7, fp, pc}
   29b0c:	ldr	r0, [r4, #4]
   29b10:	ldr	r1, [r4]
   29b14:	cmp	r0, #0
   29b18:	streq	r1, [r5, #40]	; 0x28
   29b1c:	strne	r1, [r0]
   29b20:	ldrne	r1, [r4]
   29b24:	add	r2, r1, #4
   29b28:	cmp	r1, #0
   29b2c:	addeq	r2, r5, #44	; 0x2c
   29b30:	str	r0, [r2]
   29b34:	mov	r0, #0
   29b38:	str	r0, [r4]
   29b3c:	str	r0, [r4, #4]
   29b40:	mov	r0, r4
   29b44:	pop	{r4, r5, r6, r7, fp, pc}

00029b48 <myhtml_token_merged_two_token_string@@Base>:
   29b48:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   29b4c:	add	fp, sp, #24
   29b50:	sub	sp, sp, #24
   29b54:	mov	r6, r0
   29b58:	ldr	r7, [r0, #8]
   29b5c:	ldr	r0, [r1, #48]	; 0x30
   29b60:	mov	r8, r3
   29b64:	mov	r5, r2
   29b68:	mov	r4, r1
   29b6c:	tst	r0, #4
   29b70:	bne	29bb8 <myhtml_token_merged_two_token_string@@Base+0x70>
   29b74:	ldr	r0, [r7]
   29b78:	ldr	r0, [r0]
   29b7c:	ldr	r0, [r0]
   29b80:	ldr	r0, [r0, #24]
   29b84:	bl	11148 <mythread_nanosleep_sleep@plt>
   29b88:	ldr	r0, [r4, #48]	; 0x30
   29b8c:	tst	r0, #4
   29b90:	beq	29b74 <myhtml_token_merged_two_token_string@@Base+0x2c>
   29b94:	ldr	r7, [r6, #8]
   29b98:	ldr	r0, [r5, #48]	; 0x30
   29b9c:	tst	r0, #4
   29ba0:	bne	29bc4 <myhtml_token_merged_two_token_string@@Base+0x7c>
   29ba4:	ldr	r0, [r7]
   29ba8:	ldr	r0, [r0]
   29bac:	ldr	r0, [r0]
   29bb0:	ldr	r0, [r0, #24]
   29bb4:	bl	11148 <mythread_nanosleep_sleep@plt>
   29bb8:	ldr	r0, [r5, #48]	; 0x30
   29bbc:	tst	r0, #4
   29bc0:	beq	29ba4 <myhtml_token_merged_two_token_string@@Base+0x5c>
   29bc4:	mov	r0, #0
   29bc8:	add	r9, r5, #4
   29bcc:	add	r7, r4, #4
   29bd0:	str	r0, [r4, #24]
   29bd4:	str	r0, [r4, #28]
   29bd8:	ldr	r1, [r6, #52]	; 0x34
   29bdc:	ldr	r0, [r4, #20]
   29be0:	cmp	r0, r1
   29be4:	bne	29c08 <myhtml_token_merged_two_token_string@@Base+0xc0>
   29be8:	cmp	r8, #0
   29bec:	bne	29bfc <myhtml_token_merged_two_token_string@@Base+0xb4>
   29bf0:	mov	r0, r7
   29bf4:	mov	r1, r9
   29bf8:	bl	111cc <mycore_string_copy@plt>
   29bfc:	mov	r0, r4
   29c00:	sub	sp, fp, #24
   29c04:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   29c08:	ldr	r0, [r5, #20]
   29c0c:	cmp	r0, r1
   29c10:	bne	29c28 <myhtml_token_merged_two_token_string@@Base+0xe0>
   29c14:	cmp	r8, #0
   29c18:	beq	29c6c <myhtml_token_merged_two_token_string@@Base+0x124>
   29c1c:	mov	r0, r9
   29c20:	mov	r1, r7
   29c24:	b	29c74 <myhtml_token_merged_two_token_string@@Base+0x12c>
   29c28:	ldr	r0, [r5, #12]
   29c2c:	ldr	r2, [r4, #12]
   29c30:	mov	r5, sp
   29c34:	add	r0, r2, r0
   29c38:	mov	r2, r5
   29c3c:	add	r3, r0, #2
   29c40:	ldr	r0, [r6, #4]
   29c44:	bl	11508 <mycore_string_init@plt>
   29c48:	mov	r6, sp
   29c4c:	cmp	r8, #0
   29c50:	mov	r0, r6
   29c54:	beq	29c88 <myhtml_token_merged_two_token_string@@Base+0x140>
   29c58:	mov	r1, r9
   29c5c:	bl	111cc <mycore_string_copy@plt>
   29c60:	mov	r0, r6
   29c64:	mov	r1, r7
   29c68:	b	29c98 <myhtml_token_merged_two_token_string@@Base+0x150>
   29c6c:	mov	r0, r7
   29c70:	mov	r1, r9
   29c74:	bl	111cc <mycore_string_copy@plt>
   29c78:	mov	r4, r5
   29c7c:	mov	r0, r4
   29c80:	sub	sp, fp, #24
   29c84:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   29c88:	mov	r1, r7
   29c8c:	bl	111cc <mycore_string_copy@plt>
   29c90:	mov	r0, r6
   29c94:	mov	r1, r9
   29c98:	bl	111cc <mycore_string_copy@plt>
   29c9c:	vld1.32	{d16-d17}, [r5]!
   29ca0:	vst1.32	{d16-d17}, [r7]!
   29ca4:	ldr	r0, [r5]
   29ca8:	str	r0, [r7]
   29cac:	mov	r0, r4
   29cb0:	sub	sp, fp, #24
   29cb4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00029cb8 <myhtml_token_set_replacement_character_for_null_token@@Base>:
   29cb8:	push	{r4, r5, r6, sl, fp, lr}
   29cbc:	add	fp, sp, #16
   29cc0:	sub	sp, sp, #24
   29cc4:	mov	r5, r0
   29cc8:	ldr	r6, [r0, #8]
   29ccc:	ldr	r0, [r1, #48]	; 0x30
   29cd0:	mov	r4, r1
   29cd4:	tst	r0, #4
   29cd8:	bne	29cfc <myhtml_token_set_replacement_character_for_null_token@@Base+0x44>
   29cdc:	ldr	r0, [r6]
   29ce0:	ldr	r0, [r0]
   29ce4:	ldr	r0, [r0]
   29ce8:	ldr	r0, [r0, #24]
   29cec:	bl	11148 <mythread_nanosleep_sleep@plt>
   29cf0:	ldr	r0, [r4, #48]	; 0x30
   29cf4:	tst	r0, #4
   29cf8:	beq	29cdc <myhtml_token_set_replacement_character_for_null_token@@Base+0x24>
   29cfc:	ldr	r2, [r4, #12]
   29d00:	ldr	r0, [r5, #4]
   29d04:	ldr	r1, [r5, #52]	; 0x34
   29d08:	mov	r5, sp
   29d0c:	add	r3, r2, #2
   29d10:	mov	r2, r5
   29d14:	bl	11508 <mycore_string_init@plt>
   29d18:	mov	r6, r4
   29d1c:	ldr	r2, [r4, #12]
   29d20:	mov	r0, r5
   29d24:	ldr	r1, [r6, #4]!
   29d28:	bl	1131c <mycore_string_append_with_replacement_null_characters@plt>
   29d2c:	vld1.64	{d16-d17}, [r5]!
   29d30:	vst1.32	{d16-d17}, [r6]
   29d34:	ldr	r0, [r5]
   29d38:	str	r0, [r6, #16]
   29d3c:	sub	sp, fp, #16
   29d40:	pop	{r4, r5, r6, sl, fp, pc}

00029d44 <myhtml_tokenizer_set_first_settings@@Base>:
   29d44:	push	{r4, sl, fp, lr}
   29d48:	add	fp, sp, #8
   29d4c:	mov	r4, r0
   29d50:	ldr	r0, [r0, #24]
   29d54:	bl	111e4 <mythread_queue_get_current_node@plt>
   29d58:	str	r0, [r4, #68]	; 0x44
   29d5c:	bl	11a48 <mythread_queue_node_clean@plt>
   29d60:	ldr	r0, [r4, #68]	; 0x44
   29d64:	str	r4, [r0]
   29d68:	ldr	r0, [r4, #8]
   29d6c:	ldr	r1, [r0, #12]
   29d70:	bl	117e4 <myhtml_token_node_create@plt>
   29d74:	cmp	r0, #0
   29d78:	str	r0, [r4, #64]	; 0x40
   29d7c:	moveq	r0, #2
   29d80:	ldrne	r0, [r4, #76]	; 0x4c
   29d84:	strne	r0, [r4, #80]	; 0x50
   29d88:	movne	r0, #0
   29d8c:	pop	{r4, sl, fp, pc}

00029d90 <myhtml_tokenizer_begin@@Base>:
   29d90:	ldr	r3, [r0, #204]	; 0xcc
   29d94:	bic	r3, r3, #1
   29d98:	cmp	r3, #4
   29d9c:	bne	29da4 <myhtml_tokenizer_begin@@Base+0x14>
   29da0:	b	29f80 <myhtml_tokenizer_chunk_with_stream_buffer@@Base>
   29da4:	b	29dc0 <myhtml_tokenizer_chunk_process@@Base>

00029da8 <myhtml_tokenizer_chunk@@Base>:
   29da8:	ldr	r3, [r0, #204]	; 0xcc
   29dac:	bic	r3, r3, #1
   29db0:	cmp	r3, #4
   29db4:	bne	29dbc <myhtml_tokenizer_chunk@@Base+0x14>
   29db8:	b	29f80 <myhtml_tokenizer_chunk_with_stream_buffer@@Base>
   29dbc:	b	29dc0 <myhtml_tokenizer_chunk_process@@Base>

00029dc0 <myhtml_tokenizer_chunk_process@@Base>:
   29dc0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   29dc4:	add	fp, sp, #24
   29dc8:	sub	sp, sp, #16
   29dcc:	ldr	r8, [r0]
   29dd0:	mov	r6, r1
   29dd4:	mov	r5, r0
   29dd8:	ldr	r1, [r0, #72]	; 0x48
   29ddc:	ldr	r0, [r0, #76]	; 0x4c
   29de0:	mov	r4, r2
   29de4:	mov	r2, r6
   29de8:	mov	r3, r4
   29dec:	ldr	r9, [r8, #24]
   29df0:	bl	1113c <mycore_incoming_buffer_add@plt>
   29df4:	str	r0, [r5, #76]	; 0x4c
   29df8:	ldrb	r0, [r8, #32]
   29dfc:	tst	r0, #1
   29e00:	ldrne	r0, [r5, #180]	; 0xb4
   29e04:	orrne	r0, r0, #16
   29e08:	strne	r0, [r5, #180]	; 0xb4
   29e0c:	ldr	r0, [r5, #180]	; 0xb4
   29e10:	tst	r0, #16
   29e14:	bne	29e9c <myhtml_tokenizer_chunk_process@@Base+0xdc>
   29e18:	ldr	r0, [r5, #20]
   29e1c:	cmp	r0, #0
   29e20:	bne	29e6c <myhtml_tokenizer_chunk_process@@Base+0xac>
   29e24:	mov	r0, #0
   29e28:	str	r0, [sp, #12]
   29e2c:	ldr	r0, [r8]
   29e30:	ldr	r1, [r8, #20]
   29e34:	ldr	r3, [r5, #24]
   29e38:	ldr	r2, [r0, #16]
   29e3c:	add	r0, sp, #12
   29e40:	str	r1, [sp]
   29e44:	mov	r1, #2
   29e48:	str	r0, [sp, #4]
   29e4c:	add	r0, r8, #8
   29e50:	bl	111d8 <mythread_queue_list_entry_push@plt>
   29e54:	str	r0, [r5, #20]
   29e58:	ldr	r0, [sp, #12]
   29e5c:	cmp	r0, #0
   29e60:	beq	29e6c <myhtml_tokenizer_chunk_process@@Base+0xac>
   29e64:	sub	sp, fp, #24
   29e68:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   29e6c:	ldr	r1, [r5]
   29e70:	ldr	r0, [r1]
   29e74:	cmp	r0, #0
   29e78:	beq	29e88 <myhtml_tokenizer_chunk_process@@Base+0xc8>
   29e7c:	mov	r1, #0
   29e80:	bl	11424 <mythread_resume@plt>
   29e84:	ldr	r1, [r5]
   29e88:	ldr	r0, [r1, #4]
   29e8c:	cmp	r0, #0
   29e90:	beq	29e9c <myhtml_tokenizer_chunk_process@@Base+0xdc>
   29e94:	mov	r1, #0
   29e98:	bl	11424 <mythread_resume@plt>
   29e9c:	ldr	r0, [r5, #68]	; 0x44
   29ea0:	cmp	r0, #0
   29ea4:	beq	29eb4 <myhtml_tokenizer_chunk_process@@Base+0xf4>
   29ea8:	cmp	r4, #0
   29eac:	bne	29efc <myhtml_tokenizer_chunk_process@@Base+0x13c>
   29eb0:	b	29f28 <myhtml_tokenizer_chunk_process@@Base+0x168>
   29eb4:	ldr	r0, [r5, #24]
   29eb8:	bl	111e4 <mythread_queue_get_current_node@plt>
   29ebc:	str	r0, [r5, #68]	; 0x44
   29ec0:	bl	11a48 <mythread_queue_node_clean@plt>
   29ec4:	ldr	r0, [r5, #68]	; 0x44
   29ec8:	str	r5, [r0]
   29ecc:	ldr	r0, [r5, #8]
   29ed0:	ldr	r1, [r0, #12]
   29ed4:	bl	117e4 <myhtml_token_node_create@plt>
   29ed8:	cmp	r0, #0
   29edc:	str	r0, [r5, #64]	; 0x40
   29ee0:	moveq	r0, #2
   29ee4:	subeq	sp, fp, #24
   29ee8:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   29eec:	ldr	r0, [r5, #76]	; 0x4c
   29ef0:	str	r0, [r5, #80]	; 0x50
   29ef4:	cmp	r4, #0
   29ef8:	beq	29f28 <myhtml_tokenizer_chunk_process@@Base+0x168>
   29efc:	mov	r3, #0
   29f00:	ldr	r0, [r5, #160]	; 0xa0
   29f04:	ldr	r1, [r5, #64]	; 0x40
   29f08:	mov	r2, r6
   29f0c:	ldr	r7, [r9, r0, lsl #2]
   29f10:	mov	r0, r5
   29f14:	str	r4, [sp]
   29f18:	blx	r7
   29f1c:	mov	r3, r0
   29f20:	cmp	r0, r4
   29f24:	bcc	29f00 <myhtml_tokenizer_chunk_process@@Base+0x140>
   29f28:	ldr	r0, [r5, #192]	; 0xc0
   29f2c:	add	r0, r0, r4
   29f30:	str	r0, [r5, #192]	; 0xc0
   29f34:	mov	r0, #0
   29f38:	sub	sp, fp, #24
   29f3c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00029f40 <myhtml_tokenizer_post@@Base>:
   29f40:	push	{r4, sl, fp, lr}
   29f44:	add	fp, sp, #8
   29f48:	ldr	r1, [r0]
   29f4c:	mov	r4, r0
   29f50:	ldr	r0, [r1]
   29f54:	cmp	r0, #0
   29f58:	beq	29f68 <myhtml_tokenizer_post@@Base+0x28>
   29f5c:	mov	r1, #0
   29f60:	bl	11424 <mythread_resume@plt>
   29f64:	ldr	r1, [r4]
   29f68:	ldr	r0, [r1, #4]
   29f6c:	cmp	r0, #0
   29f70:	popeq	{r4, sl, fp, pc}
   29f74:	mov	r1, #0
   29f78:	pop	{r4, sl, fp, lr}
   29f7c:	b	11424 <mythread_resume@plt>

00029f80 <myhtml_tokenizer_chunk_with_stream_buffer@@Base>:
   29f80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29f84:	add	fp, sp, #28
   29f88:	sub	sp, sp, #12
   29f8c:	mov	r4, r0
   29f90:	ldr	r0, [r0, #200]	; 0xc8
   29f94:	mov	r5, r2
   29f98:	str	r1, [sp, #8]
   29f9c:	bl	1167c <myencoding_get_function_by_id@plt>
   29fa0:	ldr	sl, [r4, #148]	; 0x94
   29fa4:	mov	r7, r0
   29fa8:	cmp	sl, #0
   29fac:	beq	2a0ac <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x12c>
   29fb0:	mov	r0, sl
   29fb4:	bl	118f8 <myhtml_stream_buffer_current_entry@plt>
   29fb8:	cmp	r5, #0
   29fbc:	beq	2a114 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x194>
   29fc0:	ldr	r9, [r0, #4]
   29fc4:	str	r4, [sp, #4]
   29fc8:	mov	r6, r0
   29fcc:	add	r4, sl, #12
   29fd0:	mov	r8, #0
   29fd4:	ldr	r0, [sp, #8]
   29fd8:	mov	r1, r4
   29fdc:	ldrb	r0, [r0, r8]
   29fe0:	blx	r7
   29fe4:	cmp	r0, #0
   29fe8:	beq	29ffc <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x7c>
   29fec:	add	r8, r8, #1
   29ff0:	cmp	r8, r5
   29ff4:	bcc	29fd4 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x54>
   29ff8:	b	2a074 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xf4>
   29ffc:	ldr	r3, [r6, #4]
   2a000:	ldr	r1, [r6, #8]
   2a004:	add	r2, r3, #4
   2a008:	cmp	r2, r1
   2a00c:	bcc	2a04c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xcc>
   2a010:	ldr	r0, [sp, #4]
   2a014:	mov	r1, #0
   2a018:	sub	r2, r3, r9
   2a01c:	str	r1, [r0, #200]	; 0xc8
   2a020:	ldr	r1, [r6]
   2a024:	add	r1, r1, r9
   2a028:	bl	113a0 <myhtml_tokenizer_chunk_process@plt>
   2a02c:	mov	r0, sl
   2a030:	mov	r1, #16384	; 0x4000
   2a034:	bl	11754 <myhtml_stream_buffer_add_entry@plt>
   2a038:	cmp	r0, #0
   2a03c:	beq	2a124 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x1a4>
   2a040:	ldr	r3, [r0, #4]
   2a044:	mov	r6, r0
   2a048:	mov	r9, r3
   2a04c:	ldr	r1, [r6]
   2a050:	ldr	r0, [sl, #24]
   2a054:	add	r1, r1, r3
   2a058:	bl	11b20 <myencoding_codepoint_to_ascii_utf_8@plt>
   2a05c:	ldr	r1, [r6, #4]
   2a060:	add	r0, r1, r0
   2a064:	str	r0, [r6, #4]
   2a068:	add	r8, r8, #1
   2a06c:	cmp	r8, r5
   2a070:	bcc	29fd4 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x54>
   2a074:	ldr	r1, [r6, #4]
   2a078:	ldr	r0, [sp, #4]
   2a07c:	mov	r8, #0
   2a080:	cmp	r1, r9
   2a084:	beq	2a0d0 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x150>
   2a088:	mov	r8, #0
   2a08c:	sub	r2, r1, r9
   2a090:	str	r8, [r0, #200]	; 0xc8
   2a094:	ldr	r1, [r6]
   2a098:	add	r1, r1, r9
   2a09c:	bl	113a0 <myhtml_tokenizer_chunk_process@plt>
   2a0a0:	mov	r0, r8
   2a0a4:	sub	sp, fp, #28
   2a0a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a0ac:	bl	11b08 <myhtml_stream_buffer_create@plt>
   2a0b0:	cmp	r0, #0
   2a0b4:	str	r0, [r4, #148]	; 0x94
   2a0b8:	beq	2a0dc <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x15c>
   2a0bc:	mov	r1, #1024	; 0x400
   2a0c0:	bl	11a3c <myhtml_stream_buffer_init@plt>
   2a0c4:	mov	r8, r0
   2a0c8:	cmp	r0, #0
   2a0cc:	beq	2a0ec <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x16c>
   2a0d0:	mov	r0, r8
   2a0d4:	sub	sp, fp, #28
   2a0d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a0dc:	mov	r8, #37632	; 0x9300
   2a0e0:	mov	r0, r8
   2a0e4:	sub	sp, fp, #28
   2a0e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a0ec:	ldr	r0, [r4, #148]	; 0x94
   2a0f0:	mov	r1, #16384	; 0x4000
   2a0f4:	bl	11754 <myhtml_stream_buffer_add_entry@plt>
   2a0f8:	cmp	r0, #0
   2a0fc:	beq	2a134 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x1b4>
   2a100:	ldr	sl, [r4, #148]	; 0x94
   2a104:	mov	r0, sl
   2a108:	bl	118f8 <myhtml_stream_buffer_current_entry@plt>
   2a10c:	cmp	r5, #0
   2a110:	bne	29fc0 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x40>
   2a114:	mov	r8, #0
   2a118:	mov	r0, r8
   2a11c:	sub	sp, fp, #28
   2a120:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a124:	movw	r8, #37636	; 0x9304
   2a128:	mov	r0, r8
   2a12c:	sub	sp, fp, #28
   2a130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a134:	movw	r8, #37636	; 0x9304
   2a138:	mov	r0, r8
   2a13c:	sub	sp, fp, #28
   2a140:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002a144 <myhtml_tokenizer_end@@Base>:
   2a144:	push	{r4, r5, fp, lr}
   2a148:	add	fp, sp, #8
   2a14c:	sub	sp, sp, #8
   2a150:	mov	r4, r0
   2a154:	ldr	r0, [r0, #76]	; 0x4c
   2a158:	cmp	r0, #0
   2a15c:	beq	2a198 <myhtml_tokenizer_end@@Base+0x54>
   2a160:	ldr	r3, [r0, #8]
   2a164:	ldr	r2, [r4, #192]	; 0xc0
   2a168:	ldr	ip, [r4]
   2a16c:	ldr	r1, [r4, #64]	; 0x40
   2a170:	ldr	r5, [r4, #160]	; 0xa0
   2a174:	sub	r2, r2, r3
   2a178:	str	r2, [r4, #192]	; 0xc0
   2a17c:	ldr	r2, [ip, #24]
   2a180:	add	r2, r2, r5, lsl #2
   2a184:	ldr	r5, [r2, #280]	; 0x118
   2a188:	ldr	r2, [r0]
   2a18c:	mov	r0, r4
   2a190:	str	r3, [sp]
   2a194:	blx	r5
   2a198:	ldr	r2, [r4, #64]	; 0x40
   2a19c:	mov	r0, #251	; 0xfb
   2a1a0:	mov	r1, #0
   2a1a4:	str	r0, [r2]
   2a1a8:	mov	r0, r4
   2a1ac:	bl	110e8 <myhtml_queue_add@plt>
   2a1b0:	cmp	r0, #0
   2a1b4:	movne	r5, #2
   2a1b8:	strne	r5, [r4, #196]	; 0xc4
   2a1bc:	ldreq	r5, [r4, #196]	; 0xc4
   2a1c0:	ldr	r0, [r4, #180]	; 0xb4
   2a1c4:	tst	r0, #16
   2a1c8:	bne	2a258 <myhtml_tokenizer_end@@Base+0x114>
   2a1cc:	ldr	r0, [r4]
   2a1d0:	ldr	r1, [r4, #20]
   2a1d4:	ldr	r0, [r0]
   2a1d8:	bl	11790 <mythread_queue_list_entry_wait_for_done@plt>
   2a1dc:	ldr	r0, [r4]
   2a1e0:	ldr	r3, [r4, #20]
   2a1e4:	ldr	r1, [r0], #8
   2a1e8:	ldr	r2, [r1, #16]
   2a1ec:	mov	r1, #0
   2a1f0:	str	r1, [sp]
   2a1f4:	mov	r1, #2
   2a1f8:	bl	10dd0 <mythread_queue_list_entry_delete@plt>
   2a1fc:	str	r0, [r4, #20]
   2a200:	ldr	r0, [r4]
   2a204:	ldr	r0, [r0]
   2a208:	ldr	r0, [r0, #16]
   2a20c:	bl	114f0 <mythread_queue_list_get_count@plt>
   2a210:	cmp	r0, #0
   2a214:	bne	2a240 <myhtml_tokenizer_end@@Base+0xfc>
   2a218:	ldr	r1, [r4]
   2a21c:	ldr	r0, [r1]
   2a220:	cmp	r0, #0
   2a224:	beq	2a230 <myhtml_tokenizer_end@@Base+0xec>
   2a228:	bl	11880 <mythread_stop@plt>
   2a22c:	ldr	r1, [r4]
   2a230:	ldr	r0, [r1, #4]
   2a234:	cmp	r0, #0
   2a238:	beq	2a240 <myhtml_tokenizer_end@@Base+0xfc>
   2a23c:	bl	11880 <mythread_stop@plt>
   2a240:	cmp	r5, #0
   2a244:	bne	2a258 <myhtml_tokenizer_end@@Base+0x114>
   2a248:	ldr	r0, [r4]
   2a24c:	ldr	r0, [r0]
   2a250:	bl	1146c <mythread_check_status@plt>
   2a254:	mov	r5, r0
   2a258:	ldr	r0, [r4, #180]	; 0xb4
   2a25c:	orr	r0, r0, #32
   2a260:	str	r0, [r4, #180]	; 0xb4
   2a264:	mov	r0, r5
   2a268:	sub	sp, fp, #8
   2a26c:	pop	{r4, r5, fp, pc}

0002a270 <myhtml_tokenizer_pause@@Base>:
   2a270:	push	{r4, sl, fp, lr}
   2a274:	add	fp, sp, #8
   2a278:	ldr	r1, [r0]
   2a27c:	mov	r4, r0
   2a280:	ldr	r0, [r1]
   2a284:	cmp	r0, #0
   2a288:	beq	2a294 <myhtml_tokenizer_pause@@Base+0x24>
   2a28c:	bl	11880 <mythread_stop@plt>
   2a290:	ldr	r1, [r4]
   2a294:	ldr	r0, [r1, #4]
   2a298:	cmp	r0, #0
   2a29c:	popeq	{r4, sl, fp, pc}
   2a2a0:	pop	{r4, sl, fp, lr}
   2a2a4:	b	11880 <mythread_stop@plt>

0002a2a8 <myhtml_tokenizer_fragment_init@@Base>:
   2a2a8:	push	{r4, r5, r6, sl, fp, lr}
   2a2ac:	add	fp, sp, #16
   2a2b0:	mov	r6, r2
   2a2b4:	mov	r5, r1
   2a2b8:	mov	r4, r0
   2a2bc:	bl	110ac <myhtml_tree_node_create@plt>
   2a2c0:	cmp	r6, #1
   2a2c4:	str	r0, [r4, #88]	; 0x58
   2a2c8:	stmib	r0, {r5, r6}
   2a2cc:	bne	2a300 <myhtml_tokenizer_fragment_init@@Base+0x58>
   2a2d0:	cmp	r5, #93	; 0x5d
   2a2d4:	bne	2a2ec <myhtml_tokenizer_fragment_init@@Base+0x44>
   2a2d8:	ldr	r0, [r4, #180]	; 0xb4
   2a2dc:	tst	r0, #1
   2a2e0:	moveq	r0, #0
   2a2e4:	movne	r0, #4
   2a2e8:	b	2a2fc <myhtml_tokenizer_fragment_init@@Base+0x54>
   2a2ec:	ldr	r0, [r4, #28]
   2a2f0:	mov	r1, r5
   2a2f4:	bl	117fc <myhtml_tag_get_by_id@plt>
   2a2f8:	ldr	r0, [r0, #12]
   2a2fc:	str	r0, [r4, #160]	; 0xa0
   2a300:	ldr	r0, [r4, #8]
   2a304:	ldr	r1, [r0, #12]
   2a308:	bl	117e4 <myhtml_token_node_create@plt>
   2a30c:	ldr	r1, [r4, #88]	; 0x58
   2a310:	cmp	r0, #0
   2a314:	moveq	r6, #0
   2a318:	str	r0, [r1, #32]
   2a31c:	moveq	r0, r6
   2a320:	popeq	{r4, r5, r6, sl, fp, pc}
   2a324:	bl	1149c <myhtml_token_set_done@plt>
   2a328:	ldr	r0, [r4, #88]	; 0x58
   2a32c:	mov	r1, #0
   2a330:	mov	r2, #1
   2a334:	ldr	r0, [r0, #32]
   2a338:	str	r0, [r4, #156]	; 0x9c
   2a33c:	mov	r0, r4
   2a340:	bl	10dc4 <myhtml_tree_node_insert_root@plt>
   2a344:	mov	r6, r0
   2a348:	cmp	r5, #128	; 0x80
   2a34c:	bne	2a35c <myhtml_tokenizer_fragment_init@@Base+0xb4>
   2a350:	mov	r0, r4
   2a354:	mov	r1, #17
   2a358:	bl	1107c <myhtml_tree_template_insertion_append@plt>
   2a35c:	mov	r0, r4
   2a360:	bl	115d4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   2a364:	mov	r0, r6
   2a368:	pop	{r4, r5, r6, sl, fp, pc}

0002a36c <myhtml_tokenizer_wait@@Base>:
   2a36c:	ldr	r1, [r0]
   2a370:	ldr	r2, [r1]
   2a374:	cmp	r2, #0
   2a378:	bxeq	lr
   2a37c:	ldr	r1, [r0, #20]
   2a380:	mov	r0, r2
   2a384:	b	11790 <mythread_queue_list_entry_wait_for_done@plt>

0002a388 <myhtml_tokenizer_calc_current_namespace@@Base>:
   2a388:	push	{r4, r5, fp, lr}
   2a38c:	add	fp, sp, #8
   2a390:	mov	r4, r0
   2a394:	ldr	r0, [r0, #184]	; 0xb8
   2a398:	tst	r0, #1
   2a39c:	bne	2a410 <myhtml_tokenizer_calc_current_namespace@@Base+0x88>
   2a3a0:	ldr	r0, [r4, #180]	; 0xb4
   2a3a4:	tst	r0, #16
   2a3a8:	bne	2a408 <myhtml_tokenizer_calc_current_namespace@@Base+0x80>
   2a3ac:	mov	r5, r1
   2a3b0:	ldr	r1, [r1]
   2a3b4:	cmp	r1, #54	; 0x36
   2a3b8:	beq	2a3c8 <myhtml_tokenizer_calc_current_namespace@@Base+0x40>
   2a3bc:	cmp	r1, #218	; 0xda
   2a3c0:	cmpne	r1, #124	; 0x7c
   2a3c4:	bne	2a3d0 <myhtml_tokenizer_calc_current_namespace@@Base+0x48>
   2a3c8:	str	r5, [r4, #156]	; 0x9c
   2a3cc:	pop	{r4, r5, fp, pc}
   2a3d0:	ldr	r0, [r4, #156]	; 0x9c
   2a3d4:	cmp	r0, #0
   2a3d8:	beq	2a410 <myhtml_tokenizer_calc_current_namespace@@Base+0x88>
   2a3dc:	ldr	r0, [r5, #48]	; 0x30
   2a3e0:	tst	r0, #1
   2a3e4:	bne	2a410 <myhtml_tokenizer_calc_current_namespace@@Base+0x88>
   2a3e8:	ldr	r0, [r4, #28]
   2a3ec:	bl	117fc <myhtml_tag_get_by_id@plt>
   2a3f0:	ldr	r0, [r0, #12]
   2a3f4:	cmp	r0, #0
   2a3f8:	popeq	{r4, r5, fp, pc}
   2a3fc:	mov	r0, r4
   2a400:	mov	r1, r5
   2a404:	bl	10e78 <myhtml_tree_wait_for_last_done_token@plt>
   2a408:	ldr	r0, [r4, #164]	; 0xa4
   2a40c:	str	r0, [r4, #160]	; 0xa0
   2a410:	pop	{r4, r5, fp, pc}

0002a414 <myhtml_check_tag_parser@@Base>:
   2a414:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2a418:	add	fp, sp, #24
   2a41c:	sub	sp, sp, #8
   2a420:	mov	r4, r1
   2a424:	mov	r8, r2
   2a428:	ldr	r1, [r1, #24]
   2a42c:	ldr	r5, [r0, #28]
   2a430:	mov	r6, r3
   2a434:	mov	r7, r0
   2a438:	ldr	r2, [r4, #28]
   2a43c:	cmp	r2, r3
   2a440:	bls	2a458 <myhtml_check_tag_parser@@Base+0x44>
   2a444:	mov	r0, r7
   2a448:	bl	10f8c <myhtml_tree_incomming_buffer_make_data@plt>
   2a44c:	ldr	r2, [r4, #28]
   2a450:	mov	r1, r0
   2a454:	b	2a464 <myhtml_check_tag_parser@@Base+0x50>
   2a458:	ldr	r0, [r7, #192]	; 0xc0
   2a45c:	sub	r0, r1, r0
   2a460:	add	r1, r8, r0
   2a464:	mov	r0, r5
   2a468:	bl	118ec <myhtml_tag_get_by_name@plt>
   2a46c:	cmp	r0, #0
   2a470:	ldrne	r0, [r0]
   2a474:	strne	r0, [r4]
   2a478:	subne	sp, fp, #24
   2a47c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   2a480:	ldr	r2, [r4, #28]
   2a484:	ldr	r1, [r4, #24]
   2a488:	cmp	r2, r6
   2a48c:	bls	2a4ac <myhtml_check_tag_parser@@Base+0x98>
   2a490:	mov	r0, r7
   2a494:	bl	10f8c <myhtml_tree_incomming_buffer_make_data@plt>
   2a498:	ldr	r2, [r4, #28]
   2a49c:	mov	r1, r0
   2a4a0:	mov	r0, #1
   2a4a4:	str	r0, [sp]
   2a4a8:	b	2a4c0 <myhtml_check_tag_parser@@Base+0xac>
   2a4ac:	ldr	r0, [r7, #192]	; 0xc0
   2a4b0:	mov	r3, #1
   2a4b4:	str	r3, [sp]
   2a4b8:	sub	r0, r1, r0
   2a4bc:	add	r1, r8, r0
   2a4c0:	mov	r0, r5
   2a4c4:	mov	r3, #0
   2a4c8:	bl	110d0 <myhtml_tag_add@plt>
   2a4cc:	mov	r1, r0
   2a4d0:	str	r0, [r4]
   2a4d4:	mov	r0, r5
   2a4d8:	mov	r2, #1
   2a4dc:	mov	r3, #1
   2a4e0:	sub	sp, fp, #24
   2a4e4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   2a4e8:	b	11064 <myhtml_tag_set_category@plt>

0002a4ec <myhtml_tokenizer_queue_create_text_node_if_need@@Base>:
   2a4ec:	push	{r4, sl, fp, lr}
   2a4f0:	add	fp, sp, #8
   2a4f4:	mov	r4, r0
   2a4f8:	ldr	r0, [r1]
   2a4fc:	mov	r2, r1
   2a500:	cmp	r0, #0
   2a504:	bne	2a554 <myhtml_tokenizer_queue_create_text_node_if_need@@Base+0x68>
   2a508:	ldr	r0, [r2, #24]
   2a50c:	cmp	r0, r3
   2a510:	bcs	2a554 <myhtml_tokenizer_queue_create_text_node_if_need@@Base+0x68>
   2a514:	mov	r1, #1
   2a518:	ldr	ip, [fp, #8]
   2a51c:	sub	r3, r3, r0
   2a520:	str	r1, [r2]
   2a524:	ldr	r1, [r2, #32]
   2a528:	ldr	lr, [r2, #48]	; 0x30
   2a52c:	str	r3, [r2, #28]
   2a530:	str	r0, [r2, #32]
   2a534:	str	r3, [r2, #36]	; 0x24
   2a538:	orr	r0, lr, ip
   2a53c:	str	r0, [r2, #48]	; 0x30
   2a540:	mov	r0, r4
   2a544:	bl	110e8 <myhtml_queue_add@plt>
   2a548:	mov	r2, #0
   2a54c:	cmp	r0, #0
   2a550:	ldreq	r2, [r4, #64]	; 0x40
   2a554:	mov	r0, r2
   2a558:	pop	{r4, sl, fp, pc}

0002a55c <myhtml_tokenizer_set_state@@Base>:
   2a55c:	push	{r4, sl, fp, lr}
   2a560:	add	fp, sp, #8
   2a564:	ldr	r2, [r1, #48]	; 0x30
   2a568:	mov	r4, r0
   2a56c:	mov	r0, #0
   2a570:	tst	r2, #1
   2a574:	bne	2a598 <myhtml_tokenizer_set_state@@Base+0x3c>
   2a578:	ldr	r1, [r1]
   2a57c:	cmp	r1, #93	; 0x5d
   2a580:	ldreq	r2, [r4, #180]	; 0xb4
   2a584:	tsteq	r2, #1
   2a588:	beq	2a598 <myhtml_tokenizer_set_state@@Base+0x3c>
   2a58c:	ldr	r0, [r4, #28]
   2a590:	bl	117fc <myhtml_tag_get_by_id@plt>
   2a594:	ldr	r0, [r0, #12]
   2a598:	str	r0, [r4, #160]	; 0xa0
   2a59c:	pop	{r4, sl, fp, pc}

0002a5a0 <myhtml_tokenizer_state_rcdata@@Base>:
   2a5a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2a5a4:	add	fp, sp, #24
   2a5a8:	mov	r5, r0
   2a5ac:	ldr	r0, [r0, #60]	; 0x3c
   2a5b0:	ldr	r6, [fp, #8]
   2a5b4:	mov	r4, r3
   2a5b8:	mov	r7, r2
   2a5bc:	mov	r8, r1
   2a5c0:	cmp	r0, #0
   2a5c4:	bne	2a624 <myhtml_tokenizer_state_rcdata@@Base+0x84>
   2a5c8:	ldr	r0, [r5, #192]	; 0xc0
   2a5cc:	add	r0, r0, r4
   2a5d0:	str	r0, [r8, #24]
   2a5d4:	ldr	r0, [r5, #68]	; 0x44
   2a5d8:	bl	10e84 <mythread_queue_get_prev_node@plt>
   2a5dc:	cmp	r0, #0
   2a5e0:	ldrne	r0, [r0, #4]
   2a5e4:	cmpne	r0, #0
   2a5e8:	bne	2a60c <myhtml_tokenizer_state_rcdata@@Base+0x6c>
   2a5ec:	ldr	r0, [r5, #88]	; 0x58
   2a5f0:	cmp	r0, #0
   2a5f4:	beq	2a624 <myhtml_tokenizer_state_rcdata@@Base+0x84>
   2a5f8:	ldr	r0, [r0, #4]
   2a5fc:	str	r0, [r5, #60]	; 0x3c
   2a600:	cmp	r4, r6
   2a604:	bcc	2a62c <myhtml_tokenizer_state_rcdata@@Base+0x8c>
   2a608:	b	2a650 <myhtml_tokenizer_state_rcdata@@Base+0xb0>
   2a60c:	ldr	r0, [r0]
   2a610:	str	r0, [r5, #60]	; 0x3c
   2a614:	cmp	r4, r6
   2a618:	bcc	2a62c <myhtml_tokenizer_state_rcdata@@Base+0x8c>
   2a61c:	b	2a650 <myhtml_tokenizer_state_rcdata@@Base+0xb0>
   2a620:	add	r4, r4, #1
   2a624:	cmp	r4, r6
   2a628:	bcs	2a650 <myhtml_tokenizer_state_rcdata@@Base+0xb0>
   2a62c:	ldrb	r0, [r7, r4]
   2a630:	cmp	r0, #60	; 0x3c
   2a634:	bne	2a620 <myhtml_tokenizer_state_rcdata@@Base+0x80>
   2a638:	ldr	r0, [r5, #192]	; 0xc0
   2a63c:	add	r0, r0, r4
   2a640:	add	r4, r4, #1
   2a644:	str	r0, [r8, #32]
   2a648:	mov	r0, #10
   2a64c:	str	r0, [r5, #160]	; 0xa0
   2a650:	mov	r0, r4
   2a654:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002a658 <myhtml_tokenizer_state_rcdata_less_than_sign@@Base>:
   2a658:	ldrb	r1, [r2, r3]
   2a65c:	mov	r2, #2
   2a660:	cmp	r1, #47	; 0x2f
   2a664:	movweq	r2, #11
   2a668:	addeq	r3, r3, #1
   2a66c:	str	r2, [r0, #160]	; 0xa0
   2a670:	mov	r0, r3
   2a674:	bx	lr

0002a678 <myhtml_tokenizer_state_rcdata_end_tag_open@@Base>:
   2a678:	ldrb	r1, [r2, r3]
   2a67c:	ldr	r2, [pc, #28]	; 2a6a0 <myhtml_tokenizer_state_rcdata_end_tag_open@@Base+0x28>
   2a680:	add	r2, pc, r2
   2a684:	ldrb	r1, [r2, r1]
   2a688:	mov	r2, #2
   2a68c:	cmp	r1, #1
   2a690:	movweq	r2, #12
   2a694:	str	r2, [r0, #160]	; 0xa0
   2a698:	mov	r0, r3
   2a69c:	bx	lr
   2a6a0:	andeq	r9, sp, sl, asr r0

0002a6a4 <_myhtml_tokenizer_state_andata_end_tag_name@@Base>:
   2a6a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2a6a8:	add	fp, sp, #24
   2a6ac:	mov	r5, r0
   2a6b0:	mov	r6, r1
   2a6b4:	ldr	r0, [r3]
   2a6b8:	mov	r4, r3
   2a6bc:	ldr	r1, [r5, #192]	; 0xc0
   2a6c0:	add	r0, r1, r0
   2a6c4:	ldr	r1, [r6, #24]
   2a6c8:	sub	r0, r0, r1
   2a6cc:	mov	r1, r6
   2a6d0:	str	r0, [r6, #28]
   2a6d4:	mov	r0, r5
   2a6d8:	ldr	r3, [r3]
   2a6dc:	bl	11958 <myhtml_check_tag_parser@plt>
   2a6e0:	ldr	r0, [r6]
   2a6e4:	ldr	r2, [r5, #60]	; 0x3c
   2a6e8:	ldr	r1, [fp, #8]
   2a6ec:	cmp	r0, r2
   2a6f0:	bne	2a794 <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0xf0>
   2a6f4:	ldr	r7, [r6, #24]
   2a6f8:	sub	r2, r7, #2
   2a6fc:	cmp	r2, r1
   2a700:	bls	2a768 <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0xc4>
   2a704:	ldr	r8, [r6, #32]
   2a708:	ldr	r0, [fp, #12]
   2a70c:	ldr	r3, [r6, #48]	; 0x30
   2a710:	orr	r0, r3, r0
   2a714:	str	r0, [r6, #48]	; 0x30
   2a718:	mov	r0, #1
   2a71c:	str	r0, [r6]
   2a720:	sub	r0, r2, r1
   2a724:	str	r1, [r6, #24]
   2a728:	mov	r2, r6
   2a72c:	str	r0, [r6, #28]
   2a730:	str	r1, [r6, #32]
   2a734:	str	r0, [r6, #36]	; 0x24
   2a738:	ldr	r0, [r6, #48]	; 0x30
   2a73c:	ldr	r1, [r6, #48]	; 0x30
   2a740:	and	r0, r0, #8
   2a744:	eor	r0, r1, r0
   2a748:	str	r0, [r6, #48]	; 0x30
   2a74c:	mov	r0, r5
   2a750:	ldr	r1, [r4]
   2a754:	bl	110e8 <myhtml_queue_add@plt>
   2a758:	ldr	r6, [r5, #64]	; 0x40
   2a75c:	str	r7, [r6, #24]
   2a760:	str	r8, [r6, #32]
   2a764:	ldr	r0, [r5, #60]	; 0x3c
   2a768:	str	r0, [r6]
   2a76c:	ldr	r0, [r6, #48]	; 0x30
   2a770:	orr	r0, r0, #1
   2a774:	str	r0, [r6, #48]	; 0x30
   2a778:	ldr	r0, [r5, #192]	; 0xc0
   2a77c:	ldr	r1, [r4]
   2a780:	add	r0, r1, r0
   2a784:	sub	r0, r0, r7
   2a788:	str	r0, [r6, #28]
   2a78c:	mov	r0, #1
   2a790:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2a794:	mov	r0, #0
   2a798:	str	r1, [r6, #24]
   2a79c:	mov	r1, #2
   2a7a0:	str	r0, [r6, #28]
   2a7a4:	str	r1, [r5, #160]	; 0xa0
   2a7a8:	ldr	r1, [r4]
   2a7ac:	add	r1, r1, #1
   2a7b0:	str	r1, [r4]
   2a7b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002a7b8 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base>:
   2a7b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2a7bc:	add	fp, sp, #24
   2a7c0:	sub	sp, sp, #16
   2a7c4:	str	r3, [sp, #12]
   2a7c8:	mov	r4, r0
   2a7cc:	mov	r5, r1
   2a7d0:	ldr	r0, [r0, #192]	; 0xc0
   2a7d4:	ldr	r8, [r1, #24]
   2a7d8:	add	r0, r0, r3
   2a7dc:	str	r0, [r1, #24]
   2a7e0:	ldr	r0, [fp, #8]
   2a7e4:	cmp	r3, r0
   2a7e8:	bcs	2a904 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x14c>
   2a7ec:	ldr	r1, [pc, #316]	; 2a930 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x178>
   2a7f0:	add	r1, pc, r1
   2a7f4:	ldrb	r7, [r2, r3]
   2a7f8:	ldrb	r6, [r1, r7]
   2a7fc:	cmp	r6, #2
   2a800:	cmpne	r7, #47	; 0x2f
   2a804:	beq	2a82c <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x74>
   2a808:	cmp	r7, #62	; 0x3e
   2a80c:	beq	2a88c <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xd4>
   2a810:	cmp	r6, #1
   2a814:	bne	2a87c <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xc4>
   2a818:	add	r3, r3, #1
   2a81c:	cmp	r3, r0
   2a820:	bcc	2a7f4 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x3c>
   2a824:	str	r3, [sp, #12]
   2a828:	b	2a904 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x14c>
   2a82c:	mov	r0, #16
   2a830:	str	r3, [sp, #12]
   2a834:	add	r3, sp, #12
   2a838:	mov	r1, r5
   2a83c:	str	r8, [sp]
   2a840:	str	r0, [sp, #4]
   2a844:	mov	r0, r4
   2a848:	bl	11988 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   2a84c:	cmp	r0, #0
   2a850:	beq	2a904 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x14c>
   2a854:	mov	r0, #0
   2a858:	str	r0, [r4, #60]	; 0x3c
   2a85c:	mov	r0, #33	; 0x21
   2a860:	str	r0, [r4, #160]	; 0xa0
   2a864:	ldr	r0, [sp, #12]
   2a868:	add	r5, r0, #1
   2a86c:	str	r5, [sp, #12]
   2a870:	mov	r0, r5
   2a874:	sub	sp, fp, #24
   2a878:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2a87c:	mov	r0, #2
   2a880:	str	r3, [sp, #12]
   2a884:	str	r0, [r4, #160]	; 0xa0
   2a888:	b	2a904 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x14c>
   2a88c:	mov	r0, #16
   2a890:	str	r3, [sp, #12]
   2a894:	add	r3, sp, #12
   2a898:	mov	r1, r5
   2a89c:	str	r8, [sp]
   2a8a0:	str	r0, [sp, #4]
   2a8a4:	mov	r0, r4
   2a8a8:	bl	11988 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   2a8ac:	cmp	r0, #0
   2a8b0:	beq	2a904 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x14c>
   2a8b4:	ldr	r0, [sp, #12]
   2a8b8:	add	r5, r0, #1
   2a8bc:	str	r5, [sp, #12]
   2a8c0:	ldr	r2, [r4, #64]	; 0x40
   2a8c4:	ldr	r0, [r4, #192]	; 0xc0
   2a8c8:	ldr	r1, [r2, #32]
   2a8cc:	add	r0, r0, r5
   2a8d0:	sub	r0, r0, r1
   2a8d4:	mov	r1, r5
   2a8d8:	str	r0, [r2, #36]	; 0x24
   2a8dc:	mov	r0, r4
   2a8e0:	bl	110e8 <myhtml_queue_add@plt>
   2a8e4:	cmp	r0, #0
   2a8e8:	beq	2a918 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x160>
   2a8ec:	mov	r0, #69	; 0x45
   2a8f0:	mov	r5, #0
   2a8f4:	str	r0, [r4, #160]	; 0xa0
   2a8f8:	mov	r0, r5
   2a8fc:	sub	sp, fp, #24
   2a900:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2a904:	str	r8, [r5, #24]
   2a908:	ldr	r5, [sp, #12]
   2a90c:	mov	r0, r5
   2a910:	sub	sp, fp, #24
   2a914:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2a918:	mov	r0, #0
   2a91c:	str	r0, [r4, #160]	; 0xa0
   2a920:	str	r0, [r4, #60]	; 0x3c
   2a924:	mov	r0, r5
   2a928:	sub	sp, fp, #24
   2a92c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2a930:	andeq	r8, sp, sl, ror #29

0002a934 <myhtml_tokenizer_state_rawtext@@Base>:
   2a934:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2a938:	add	fp, sp, #24
   2a93c:	mov	r5, r0
   2a940:	ldr	r0, [r0, #60]	; 0x3c
   2a944:	ldr	r6, [fp, #8]
   2a948:	mov	r4, r3
   2a94c:	mov	r7, r2
   2a950:	mov	r8, r1
   2a954:	cmp	r0, #0
   2a958:	bne	2a9b8 <myhtml_tokenizer_state_rawtext@@Base+0x84>
   2a95c:	ldr	r0, [r5, #192]	; 0xc0
   2a960:	add	r0, r0, r4
   2a964:	str	r0, [r8, #24]
   2a968:	ldr	r0, [r5, #68]	; 0x44
   2a96c:	bl	10e84 <mythread_queue_get_prev_node@plt>
   2a970:	cmp	r0, #0
   2a974:	ldrne	r0, [r0, #4]
   2a978:	cmpne	r0, #0
   2a97c:	bne	2a9a0 <myhtml_tokenizer_state_rawtext@@Base+0x6c>
   2a980:	ldr	r0, [r5, #88]	; 0x58
   2a984:	cmp	r0, #0
   2a988:	beq	2a9b8 <myhtml_tokenizer_state_rawtext@@Base+0x84>
   2a98c:	ldr	r0, [r0, #4]
   2a990:	str	r0, [r5, #60]	; 0x3c
   2a994:	cmp	r4, r6
   2a998:	bcc	2a9c0 <myhtml_tokenizer_state_rawtext@@Base+0x8c>
   2a99c:	b	2a9e4 <myhtml_tokenizer_state_rawtext@@Base+0xb0>
   2a9a0:	ldr	r0, [r0]
   2a9a4:	str	r0, [r5, #60]	; 0x3c
   2a9a8:	cmp	r4, r6
   2a9ac:	bcc	2a9c0 <myhtml_tokenizer_state_rawtext@@Base+0x8c>
   2a9b0:	b	2a9e4 <myhtml_tokenizer_state_rawtext@@Base+0xb0>
   2a9b4:	add	r4, r4, #1
   2a9b8:	cmp	r4, r6
   2a9bc:	bcs	2a9e4 <myhtml_tokenizer_state_rawtext@@Base+0xb0>
   2a9c0:	ldrb	r0, [r7, r4]
   2a9c4:	cmp	r0, #60	; 0x3c
   2a9c8:	bne	2a9b4 <myhtml_tokenizer_state_rawtext@@Base+0x80>
   2a9cc:	ldr	r0, [r5, #192]	; 0xc0
   2a9d0:	add	r0, r0, r4
   2a9d4:	add	r4, r4, #1
   2a9d8:	str	r0, [r8, #32]
   2a9dc:	mov	r0, #13
   2a9e0:	str	r0, [r5, #160]	; 0xa0
   2a9e4:	mov	r0, r4
   2a9e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002a9ec <myhtml_tokenizer_state_rawtext_less_than_sign@@Base>:
   2a9ec:	ldrb	r1, [r2, r3]
   2a9f0:	mov	r2, #4
   2a9f4:	cmp	r1, #47	; 0x2f
   2a9f8:	movweq	r2, #14
   2a9fc:	addeq	r3, r3, #1
   2aa00:	str	r2, [r0, #160]	; 0xa0
   2aa04:	mov	r0, r3
   2aa08:	bx	lr

0002aa0c <myhtml_tokenizer_state_rawtext_end_tag_open@@Base>:
   2aa0c:	ldrb	r1, [r2, r3]
   2aa10:	ldr	r2, [pc, #28]	; 2aa34 <myhtml_tokenizer_state_rawtext_end_tag_open@@Base+0x28>
   2aa14:	add	r2, pc, r2
   2aa18:	ldrb	r1, [r2, r1]
   2aa1c:	mov	r2, #4
   2aa20:	cmp	r1, #1
   2aa24:	movweq	r2, #15
   2aa28:	str	r2, [r0, #160]	; 0xa0
   2aa2c:	mov	r0, r3
   2aa30:	bx	lr
   2aa34:	andeq	r8, sp, r6, asr #25

0002aa38 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base>:
   2aa38:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2aa3c:	add	fp, sp, #24
   2aa40:	sub	sp, sp, #16
   2aa44:	str	r3, [sp, #12]
   2aa48:	mov	r8, r0
   2aa4c:	mov	r5, r3
   2aa50:	ldr	r0, [r0, #192]	; 0xc0
   2aa54:	add	r3, r0, r3
   2aa58:	ldr	r0, [r1, #24]
   2aa5c:	str	r3, [r1, #24]
   2aa60:	ldr	r3, [fp, #8]
   2aa64:	cmp	r5, r3
   2aa68:	bcs	2aaac <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x74>
   2aa6c:	ldr	r4, [pc, #372]	; 2abe8 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x1b0>
   2aa70:	add	r4, pc, r4
   2aa74:	ldrb	r7, [r2, r5]
   2aa78:	ldrb	r6, [r4, r7]
   2aa7c:	cmp	r6, #2
   2aa80:	beq	2aabc <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x84>
   2aa84:	cmp	r7, #47	; 0x2f
   2aa88:	beq	2ab08 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xd0>
   2aa8c:	cmp	r7, #62	; 0x3e
   2aa90:	beq	2ab50 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x118>
   2aa94:	cmp	r6, #1
   2aa98:	bne	2aaec <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xb4>
   2aa9c:	add	r5, r5, #1
   2aaa0:	cmp	r5, r3
   2aaa4:	bcc	2aa74 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x3c>
   2aaa8:	str	r5, [sp, #12]
   2aaac:	str	r0, [r1, #24]
   2aab0:	mov	r0, r5
   2aab4:	sub	sp, fp, #24
   2aab8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2aabc:	mov	r3, #32
   2aac0:	str	r5, [sp, #12]
   2aac4:	stm	sp, {r0, r3}
   2aac8:	add	r3, sp, #12
   2aacc:	mov	r0, r8
   2aad0:	bl	11988 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   2aad4:	cmp	r0, #0
   2aad8:	bne	2ab28 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xf0>
   2aadc:	ldr	r5, [sp, #12]
   2aae0:	mov	r0, r5
   2aae4:	sub	sp, fp, #24
   2aae8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2aaec:	str	r5, [sp, #12]
   2aaf0:	str	r0, [r1, #24]
   2aaf4:	mov	r0, #4
   2aaf8:	str	r0, [r8, #160]	; 0xa0
   2aafc:	mov	r0, r5
   2ab00:	sub	sp, fp, #24
   2ab04:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ab08:	mov	r3, #32
   2ab0c:	str	r5, [sp, #12]
   2ab10:	stm	sp, {r0, r3}
   2ab14:	add	r3, sp, #12
   2ab18:	mov	r0, r8
   2ab1c:	bl	11988 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   2ab20:	cmp	r0, #0
   2ab24:	beq	2abc0 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x188>
   2ab28:	mov	r0, #0
   2ab2c:	str	r0, [r8, #60]	; 0x3c
   2ab30:	mov	r0, #33	; 0x21
   2ab34:	str	r0, [r8, #160]	; 0xa0
   2ab38:	ldr	r0, [sp, #12]
   2ab3c:	add	r5, r0, #1
   2ab40:	str	r5, [sp, #12]
   2ab44:	mov	r0, r5
   2ab48:	sub	sp, fp, #24
   2ab4c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ab50:	mov	r3, #32
   2ab54:	str	r5, [sp, #12]
   2ab58:	stm	sp, {r0, r3}
   2ab5c:	add	r3, sp, #12
   2ab60:	mov	r0, r8
   2ab64:	bl	11988 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   2ab68:	ldr	r5, [sp, #12]
   2ab6c:	cmp	r0, #0
   2ab70:	beq	2aab0 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x78>
   2ab74:	add	r5, r5, #1
   2ab78:	str	r5, [sp, #12]
   2ab7c:	ldr	r2, [r8, #64]	; 0x40
   2ab80:	ldr	r0, [r8, #192]	; 0xc0
   2ab84:	ldr	r1, [r2, #32]
   2ab88:	add	r0, r0, r5
   2ab8c:	sub	r0, r0, r1
   2ab90:	mov	r1, r5
   2ab94:	str	r0, [r2, #36]	; 0x24
   2ab98:	mov	r0, r8
   2ab9c:	bl	110e8 <myhtml_queue_add@plt>
   2aba0:	cmp	r0, #0
   2aba4:	beq	2abd0 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x198>
   2aba8:	mov	r0, #69	; 0x45
   2abac:	mov	r5, #0
   2abb0:	str	r0, [r8, #160]	; 0xa0
   2abb4:	mov	r0, r5
   2abb8:	sub	sp, fp, #24
   2abbc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2abc0:	ldr	r5, [sp, #12]
   2abc4:	mov	r0, r5
   2abc8:	sub	sp, fp, #24
   2abcc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2abd0:	mov	r0, #0
   2abd4:	str	r0, [r8, #160]	; 0xa0
   2abd8:	str	r0, [r8, #60]	; 0x3c
   2abdc:	mov	r0, r5
   2abe0:	sub	sp, fp, #24
   2abe4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2abe8:	andeq	r8, sp, sl, ror #24

0002abec <myhtml_tokenizer_state_plaintext@@Base>:
   2abec:	push	{r4, r5, fp, lr}
   2abf0:	add	fp, sp, #8
   2abf4:	mov	r4, r0
   2abf8:	ldr	r0, [r1, #48]	; 0x30
   2abfc:	mov	r2, r1
   2ac00:	ldr	r5, [fp, #8]
   2ac04:	tst	r0, #128	; 0x80
   2ac08:	ldreq	r0, [r2, #48]	; 0x30
   2ac0c:	orreq	r0, r0, #128	; 0x80
   2ac10:	streq	r0, [r2, #48]	; 0x30
   2ac14:	ldr	r0, [r2, #48]	; 0x30
   2ac18:	ldr	r1, [r2, #48]	; 0x30
   2ac1c:	and	r0, r0, #8
   2ac20:	eor	r0, r1, r0
   2ac24:	mov	r1, #1
   2ac28:	str	r0, [r2, #48]	; 0x30
   2ac2c:	ldr	r0, [r4, #192]	; 0xc0
   2ac30:	str	r1, [r2]
   2ac34:	add	r1, r0, r3
   2ac38:	add	r0, r0, r5
   2ac3c:	sub	r0, r0, r1
   2ac40:	str	r0, [r2, #36]	; 0x24
   2ac44:	str	r1, [r2, #24]
   2ac48:	str	r0, [r2, #28]
   2ac4c:	mov	r0, #0
   2ac50:	mov	r1, r5
   2ac54:	str	r0, [r4, #160]	; 0xa0
   2ac58:	mov	r0, r4
   2ac5c:	bl	110e8 <myhtml_queue_add@plt>
   2ac60:	cmp	r0, #0
   2ac64:	movne	r0, #69	; 0x45
   2ac68:	movne	r5, #0
   2ac6c:	strne	r0, [r4, #160]	; 0xa0
   2ac70:	mov	r0, r5
   2ac74:	pop	{r4, r5, fp, pc}

0002ac78 <myhtml_tokenizer_state_cdata_section@@Base>:
   2ac78:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ac7c:	add	fp, sp, #24
   2ac80:	mov	r5, r0
   2ac84:	ldr	r0, [r1, #48]	; 0x30
   2ac88:	mov	r8, r1
   2ac8c:	ldr	r6, [fp, #8]
   2ac90:	mov	r4, r3
   2ac94:	mov	r7, r2
   2ac98:	tst	r0, #256	; 0x100
   2ac9c:	ldreq	r0, [r8, #48]	; 0x30
   2aca0:	orreq	r0, r0, #256	; 0x100
   2aca4:	streq	r0, [r8, #48]	; 0x30
   2aca8:	cmp	r4, r6
   2acac:	bcs	2ad18 <myhtml_tokenizer_state_cdata_section@@Base+0xa0>
   2acb0:	add	r0, r4, #1
   2acb4:	mov	r4, r0
   2acb8:	add	r0, r7, r0
   2acbc:	ldrb	r1, [r0, #-1]
   2acc0:	cmp	r1, #62	; 0x3e
   2acc4:	bne	2ad08 <myhtml_tokenizer_state_cdata_section@@Base+0x90>
   2acc8:	sub	r1, r4, #1
   2accc:	cmp	r1, #1
   2acd0:	bhi	2acf0 <myhtml_tokenizer_state_cdata_section@@Base+0x78>
   2acd4:	ldr	r0, [r5, #192]	; 0xc0
   2acd8:	mov	r2, #2
   2acdc:	add	r0, r4, r0
   2ace0:	sub	r1, r0, #3
   2ace4:	mov	r0, r5
   2ace8:	bl	10f8c <myhtml_tree_incomming_buffer_make_data@plt>
   2acec:	b	2acf4 <myhtml_tokenizer_state_cdata_section@@Base+0x7c>
   2acf0:	sub	r0, r0, #3
   2acf4:	ldrb	r1, [r0]
   2acf8:	cmp	r1, #93	; 0x5d
   2acfc:	ldrbeq	r0, [r0, #1]
   2ad00:	cmpeq	r0, #93	; 0x5d
   2ad04:	beq	2ad20 <myhtml_tokenizer_state_cdata_section@@Base+0xa8>
   2ad08:	add	r0, r4, #1
   2ad0c:	cmp	r4, r6
   2ad10:	bcc	2acb4 <myhtml_tokenizer_state_cdata_section@@Base+0x3c>
   2ad14:	sub	r4, r0, #1
   2ad18:	mov	r0, r4
   2ad1c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ad20:	ldr	r1, [r8, #24]
   2ad24:	ldr	r0, [r5, #192]	; 0xc0
   2ad28:	sub	r1, r0, r1
   2ad2c:	add	r1, r1, r4
   2ad30:	subs	r1, r1, #3
   2ad34:	str	r1, [r8, #28]
   2ad38:	bne	2ad54 <myhtml_tokenizer_state_cdata_section@@Base+0xdc>
   2ad3c:	add	r0, r0, r4
   2ad40:	str	r0, [r8, #24]
   2ad44:	mov	r0, #0
   2ad48:	str	r0, [r5, #160]	; 0xa0
   2ad4c:	mov	r0, r4
   2ad50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ad54:	ldr	r1, [r8, #32]
   2ad58:	mov	r2, r8
   2ad5c:	sub	r0, r0, r1
   2ad60:	mov	r1, r4
   2ad64:	add	r0, r0, r4
   2ad68:	str	r0, [r8, #36]	; 0x24
   2ad6c:	mov	r0, r5
   2ad70:	bl	110e8 <myhtml_queue_add@plt>
   2ad74:	cmp	r0, #0
   2ad78:	movne	r0, #69	; 0x45
   2ad7c:	movne	r4, #0
   2ad80:	strne	r0, [r5, #160]	; 0xa0
   2ad84:	movne	r0, r4
   2ad88:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ad8c:	mov	r0, #0
   2ad90:	str	r0, [r5, #160]	; 0xa0
   2ad94:	mov	r0, r4
   2ad98:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002ad9c <myhtml_tokenizer_state_data@@Base>:
   2ad9c:	push	{r4, r5, fp, lr}
   2ada0:	add	fp, sp, #8
   2ada4:	ldr	ip, [fp, #8]
   2ada8:	cmp	r3, ip
   2adac:	bcs	2ae48 <myhtml_tokenizer_state_data@@Base+0xac>
   2adb0:	ldr	lr, [pc, #184]	; 2ae70 <myhtml_tokenizer_state_data@@Base+0xd4>
   2adb4:	add	lr, pc, lr
   2adb8:	ldrb	r4, [r2, r3]
   2adbc:	cmp	r4, #0
   2adc0:	beq	2add0 <myhtml_tokenizer_state_data@@Base+0x34>
   2adc4:	cmp	r4, #60	; 0x3c
   2adc8:	bne	2adf8 <myhtml_tokenizer_state_data@@Base+0x5c>
   2adcc:	b	2ae50 <myhtml_tokenizer_state_data@@Base+0xb4>
   2add0:	ldr	r5, [r1, #48]	; 0x30
   2add4:	tst	r5, #2048	; 0x800
   2add8:	bne	2adf8 <myhtml_tokenizer_state_data@@Base+0x5c>
   2addc:	ldr	r4, [r1, #48]	; 0x30
   2ade0:	orr	r4, r4, #2048	; 0x800
   2ade4:	str	r4, [r1, #48]	; 0x30
   2ade8:	add	r3, r3, #1
   2adec:	cmp	r3, ip
   2adf0:	bcc	2adb8 <myhtml_tokenizer_state_data@@Base+0x1c>
   2adf4:	b	2ae48 <myhtml_tokenizer_state_data@@Base+0xac>
   2adf8:	ldr	r5, [r1, #48]	; 0x30
   2adfc:	tst	r5, #8
   2ae00:	ldrbne	r4, [lr, r4]
   2ae04:	cmpne	r4, #2
   2ae08:	bne	2ae1c <myhtml_tokenizer_state_data@@Base+0x80>
   2ae0c:	add	r3, r3, #1
   2ae10:	cmp	r3, ip
   2ae14:	bcc	2adb8 <myhtml_tokenizer_state_data@@Base+0x1c>
   2ae18:	b	2ae48 <myhtml_tokenizer_state_data@@Base+0xac>
   2ae1c:	ldr	r4, [r1, #48]	; 0x30
   2ae20:	ldr	r5, [r1, #48]	; 0x30
   2ae24:	and	r4, r4, #8
   2ae28:	eor	r4, r5, r4
   2ae2c:	str	r4, [r1, #48]	; 0x30
   2ae30:	ldr	r4, [r1, #48]	; 0x30
   2ae34:	orr	r4, r4, #512	; 0x200
   2ae38:	str	r4, [r1, #48]	; 0x30
   2ae3c:	add	r3, r3, #1
   2ae40:	cmp	r3, ip
   2ae44:	bcc	2adb8 <myhtml_tokenizer_state_data@@Base+0x1c>
   2ae48:	mov	r0, r3
   2ae4c:	pop	{r4, r5, fp, pc}
   2ae50:	ldr	r2, [r0, #192]	; 0xc0
   2ae54:	add	r2, r2, r3
   2ae58:	add	r3, r3, #1
   2ae5c:	str	r2, [r1, #32]
   2ae60:	mov	r1, #7
   2ae64:	str	r1, [r0, #160]	; 0xa0
   2ae68:	mov	r0, r3
   2ae6c:	pop	{r4, r5, fp, pc}
   2ae70:	andeq	r8, sp, r6, lsr #18

0002ae74 <myhtml_tokenizer_state_tag_open@@Base>:
   2ae74:	push	{r4, r5, r6, sl, fp, lr}
   2ae78:	add	fp, sp, #16
   2ae7c:	mov	r5, r3
   2ae80:	mov	r6, r0
   2ae84:	mov	r3, r1
   2ae88:	ldrb	r0, [r2, r5]
   2ae8c:	ldr	r1, [pc, #516]	; 2b098 <myhtml_tokenizer_state_tag_open@@Base+0x224>
   2ae90:	add	r1, pc, r1
   2ae94:	ldrb	r1, [r1, r0]
   2ae98:	cmp	r1, #1
   2ae9c:	bne	2af2c <myhtml_tokenizer_state_tag_open@@Base+0xb8>
   2aea0:	ldr	r1, [r3]
   2aea4:	ldr	r0, [r6, #192]	; 0xc0
   2aea8:	cmp	r1, #0
   2aeac:	bne	2af1c <myhtml_tokenizer_state_tag_open@@Base+0xa8>
   2aeb0:	ldr	r2, [r3, #24]
   2aeb4:	add	r1, r5, r0
   2aeb8:	sub	r4, r1, #1
   2aebc:	cmp	r4, r2
   2aec0:	bls	2af1c <myhtml_tokenizer_state_tag_open@@Base+0xa8>
   2aec4:	mov	r0, #1
   2aec8:	sub	r4, r4, r2
   2aecc:	str	r0, [r3]
   2aed0:	ldr	r1, [r3, #32]
   2aed4:	ldr	r0, [r3, #48]	; 0x30
   2aed8:	str	r4, [r3, #28]
   2aedc:	str	r2, [r3, #32]
   2aee0:	str	r4, [r3, #36]	; 0x24
   2aee4:	mov	r2, r3
   2aee8:	orr	r0, r0, #512	; 0x200
   2aeec:	str	r0, [r3, #48]	; 0x30
   2aef0:	mov	r0, r6
   2aef4:	bl	110e8 <myhtml_queue_add@plt>
   2aef8:	mov	r1, r0
   2aefc:	mov	r0, #0
   2af00:	mov	r2, #69	; 0x45
   2af04:	cmp	r1, #0
   2af08:	bne	2b090 <myhtml_tokenizer_state_tag_open@@Base+0x21c>
   2af0c:	ldr	r3, [r6, #64]	; 0x40
   2af10:	cmp	r3, #0
   2af14:	beq	2b090 <myhtml_tokenizer_state_tag_open@@Base+0x21c>
   2af18:	ldr	r0, [r6, #192]	; 0xc0
   2af1c:	add	r0, r0, r5
   2af20:	mov	r2, #9
   2af24:	str	r0, [r3, #24]
   2af28:	b	2b08c <myhtml_tokenizer_state_tag_open@@Base+0x218>
   2af2c:	cmp	r0, #63	; 0x3f
   2af30:	beq	2afd8 <myhtml_tokenizer_state_tag_open@@Base+0x164>
   2af34:	cmp	r0, #47	; 0x2f
   2af38:	beq	2b064 <myhtml_tokenizer_state_tag_open@@Base+0x1f0>
   2af3c:	cmp	r0, #33	; 0x21
   2af40:	bne	2b074 <myhtml_tokenizer_state_tag_open@@Base+0x200>
   2af44:	ldr	r0, [r3]
   2af48:	ldr	r1, [r6, #192]	; 0xc0
   2af4c:	cmp	r0, #0
   2af50:	bne	2afc0 <myhtml_tokenizer_state_tag_open@@Base+0x14c>
   2af54:	add	r0, r5, r1
   2af58:	sub	r2, r0, #1
   2af5c:	ldr	r0, [r3, #24]
   2af60:	cmp	r2, r0
   2af64:	bls	2afc0 <myhtml_tokenizer_state_tag_open@@Base+0x14c>
   2af68:	mov	r1, #1
   2af6c:	sub	r2, r2, r0
   2af70:	str	r1, [r3]
   2af74:	ldr	r1, [r3, #32]
   2af78:	ldr	r4, [r3, #48]	; 0x30
   2af7c:	str	r2, [r3, #28]
   2af80:	str	r0, [r3, #32]
   2af84:	str	r2, [r3, #36]	; 0x24
   2af88:	mov	r2, r3
   2af8c:	orr	r0, r4, #512	; 0x200
   2af90:	str	r0, [r3, #48]	; 0x30
   2af94:	mov	r0, r6
   2af98:	bl	110e8 <myhtml_queue_add@plt>
   2af9c:	mov	r1, r0
   2afa0:	mov	r0, #0
   2afa4:	mov	r2, #69	; 0x45
   2afa8:	cmp	r1, #0
   2afac:	bne	2b090 <myhtml_tokenizer_state_tag_open@@Base+0x21c>
   2afb0:	ldr	r3, [r6, #64]	; 0x40
   2afb4:	cmp	r3, #0
   2afb8:	beq	2b090 <myhtml_tokenizer_state_tag_open@@Base+0x21c>
   2afbc:	ldr	r1, [r6, #192]	; 0xc0
   2afc0:	add	r0, r5, #1
   2afc4:	mov	r2, #44	; 0x2c
   2afc8:	add	r1, r1, r0
   2afcc:	str	r1, [r3, #24]
   2afd0:	str	r2, [r6, #160]	; 0xa0
   2afd4:	pop	{r4, r5, r6, sl, fp, pc}
   2afd8:	ldr	r1, [r3]
   2afdc:	ldr	r0, [r6, #192]	; 0xc0
   2afe0:	cmp	r1, #0
   2afe4:	bne	2b054 <myhtml_tokenizer_state_tag_open@@Base+0x1e0>
   2afe8:	ldr	r2, [r3, #24]
   2afec:	add	r1, r5, r0
   2aff0:	sub	r4, r1, #1
   2aff4:	cmp	r4, r2
   2aff8:	bls	2b054 <myhtml_tokenizer_state_tag_open@@Base+0x1e0>
   2affc:	mov	r0, #1
   2b000:	sub	r4, r4, r2
   2b004:	str	r0, [r3]
   2b008:	ldr	r1, [r3, #32]
   2b00c:	ldr	r0, [r3, #48]	; 0x30
   2b010:	str	r4, [r3, #28]
   2b014:	str	r2, [r3, #32]
   2b018:	str	r4, [r3, #36]	; 0x24
   2b01c:	mov	r2, r3
   2b020:	orr	r0, r0, #512	; 0x200
   2b024:	str	r0, [r3, #48]	; 0x30
   2b028:	mov	r0, r6
   2b02c:	bl	110e8 <myhtml_queue_add@plt>
   2b030:	mov	r1, r0
   2b034:	mov	r0, #0
   2b038:	mov	r2, #69	; 0x45
   2b03c:	cmp	r1, #0
   2b040:	bne	2b090 <myhtml_tokenizer_state_tag_open@@Base+0x21c>
   2b044:	ldr	r3, [r6, #64]	; 0x40
   2b048:	cmp	r3, #0
   2b04c:	beq	2b090 <myhtml_tokenizer_state_tag_open@@Base+0x21c>
   2b050:	ldr	r0, [r6, #192]	; 0xc0
   2b054:	add	r0, r0, r5
   2b058:	mov	r2, #43	; 0x2b
   2b05c:	str	r0, [r3, #24]
   2b060:	b	2b08c <myhtml_tokenizer_state_tag_open@@Base+0x218>
   2b064:	add	r0, r5, #1
   2b068:	mov	r2, #8
   2b06c:	str	r2, [r6, #160]	; 0xa0
   2b070:	pop	{r4, r5, r6, sl, fp, pc}
   2b074:	ldr	r0, [r3, #48]	; 0x30
   2b078:	ldr	r1, [r3, #48]	; 0x30
   2b07c:	mov	r2, #0
   2b080:	and	r0, r0, #8
   2b084:	eor	r0, r1, r0
   2b088:	str	r0, [r3, #48]	; 0x30
   2b08c:	mov	r0, r5
   2b090:	str	r2, [r6, #160]	; 0xa0
   2b094:	pop	{r4, r5, r6, sl, fp, pc}
   2b098:	andeq	r8, sp, sl, asr #16

0002b09c <myhtml_tokenizer_state_end_tag_open@@Base>:
   2b09c:	push	{r4, r5, fp, lr}
   2b0a0:	add	fp, sp, #8
   2b0a4:	mov	r5, r3
   2b0a8:	mov	r4, r0
   2b0ac:	mov	r3, r1
   2b0b0:	ldrb	r0, [r2, r5]
   2b0b4:	ldr	r1, [pc, #324]	; 2b200 <myhtml_tokenizer_state_end_tag_open@@Base+0x164>
   2b0b8:	add	r1, pc, r1
   2b0bc:	ldrb	r1, [r1, r0]
   2b0c0:	cmp	r1, #1
   2b0c4:	bne	2b158 <myhtml_tokenizer_state_end_tag_open@@Base+0xbc>
   2b0c8:	ldr	r1, [r3]
   2b0cc:	ldr	r0, [r4, #192]	; 0xc0
   2b0d0:	cmp	r1, #0
   2b0d4:	bne	2b144 <myhtml_tokenizer_state_end_tag_open@@Base+0xa8>
   2b0d8:	ldr	r2, [r3, #24]
   2b0dc:	add	r1, r5, r0
   2b0e0:	sub	ip, r1, #2
   2b0e4:	cmp	ip, r2
   2b0e8:	bls	2b144 <myhtml_tokenizer_state_end_tag_open@@Base+0xa8>
   2b0ec:	mov	r0, #1
   2b0f0:	str	r0, [r3]
   2b0f4:	sub	r0, ip, r2
   2b0f8:	ldr	r1, [r3, #32]
   2b0fc:	ldr	lr, [r3, #48]	; 0x30
   2b100:	str	r0, [r3, #28]
   2b104:	str	r2, [r3, #32]
   2b108:	str	r0, [r3, #36]	; 0x24
   2b10c:	mov	r2, r3
   2b110:	orr	r0, lr, #512	; 0x200
   2b114:	str	r0, [r3, #48]	; 0x30
   2b118:	mov	r0, r4
   2b11c:	bl	110e8 <myhtml_queue_add@plt>
   2b120:	mov	r1, r0
   2b124:	mov	r0, #0
   2b128:	mov	r2, #69	; 0x45
   2b12c:	cmp	r1, #0
   2b130:	bne	2b1f8 <myhtml_tokenizer_state_end_tag_open@@Base+0x15c>
   2b134:	ldr	r3, [r4, #64]	; 0x40
   2b138:	cmp	r3, #0
   2b13c:	beq	2b1f8 <myhtml_tokenizer_state_end_tag_open@@Base+0x15c>
   2b140:	ldr	r0, [r4, #192]	; 0xc0
   2b144:	mov	r1, #1
   2b148:	add	r0, r0, r5
   2b14c:	mov	r2, #9
   2b150:	str	r1, [r3, #48]	; 0x30
   2b154:	b	2b1f0 <myhtml_tokenizer_state_end_tag_open@@Base+0x154>
   2b158:	cmp	r0, #62	; 0x3e
   2b15c:	addeq	r0, r5, #1
   2b160:	moveq	r2, #0
   2b164:	streq	r2, [r4, #160]	; 0xa0
   2b168:	popeq	{r4, r5, fp, pc}
   2b16c:	ldr	r1, [r3]
   2b170:	ldr	r0, [r4, #192]	; 0xc0
   2b174:	cmp	r1, #0
   2b178:	bne	2b1e8 <myhtml_tokenizer_state_end_tag_open@@Base+0x14c>
   2b17c:	ldr	r2, [r3, #24]
   2b180:	add	r1, r5, r0
   2b184:	sub	ip, r1, #2
   2b188:	cmp	ip, r2
   2b18c:	bls	2b1e8 <myhtml_tokenizer_state_end_tag_open@@Base+0x14c>
   2b190:	mov	r0, #1
   2b194:	str	r0, [r3]
   2b198:	sub	r0, ip, r2
   2b19c:	ldr	r1, [r3, #32]
   2b1a0:	ldr	lr, [r3, #48]	; 0x30
   2b1a4:	str	r0, [r3, #28]
   2b1a8:	str	r2, [r3, #32]
   2b1ac:	str	r0, [r3, #36]	; 0x24
   2b1b0:	mov	r2, r3
   2b1b4:	orr	r0, lr, #512	; 0x200
   2b1b8:	str	r0, [r3, #48]	; 0x30
   2b1bc:	mov	r0, r4
   2b1c0:	bl	110e8 <myhtml_queue_add@plt>
   2b1c4:	mov	r1, r0
   2b1c8:	mov	r0, #0
   2b1cc:	mov	r2, #69	; 0x45
   2b1d0:	cmp	r1, #0
   2b1d4:	bne	2b1f8 <myhtml_tokenizer_state_end_tag_open@@Base+0x15c>
   2b1d8:	ldr	r3, [r4, #64]	; 0x40
   2b1dc:	cmp	r3, #0
   2b1e0:	beq	2b1f8 <myhtml_tokenizer_state_end_tag_open@@Base+0x15c>
   2b1e4:	ldr	r0, [r4, #192]	; 0xc0
   2b1e8:	add	r0, r0, r5
   2b1ec:	mov	r2, #43	; 0x2b
   2b1f0:	str	r0, [r3, #24]
   2b1f4:	mov	r0, r5
   2b1f8:	str	r2, [r4, #160]	; 0xa0
   2b1fc:	pop	{r4, r5, fp, pc}
   2b200:	andeq	r8, sp, r2, lsr #12

0002b204 <myhtml_tokenizer_state_markup_declaration_open@@Base>:
   2b204:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b208:	add	fp, sp, #24
   2b20c:	mov	r4, r1
   2b210:	mov	r6, r0
   2b214:	ldr	r1, [r1, #24]
   2b218:	ldr	r0, [r0, #192]	; 0xc0
   2b21c:	ldr	r7, [fp, #8]
   2b220:	mov	r5, r3
   2b224:	add	r0, r0, r7
   2b228:	add	r2, r1, #2
   2b22c:	cmp	r2, r0
   2b230:	bhi	2b26c <myhtml_tokenizer_state_markup_declaration_open@@Base+0x68>
   2b234:	mov	r0, r6
   2b238:	mov	r2, #2
   2b23c:	bl	10f8c <myhtml_tree_incomming_buffer_make_data@plt>
   2b240:	ldrb	r1, [r0]
   2b244:	cmp	r1, #45	; 0x2d
   2b248:	ldrbeq	r0, [r0, #1]
   2b24c:	cmpeq	r0, #45	; 0x2d
   2b250:	beq	2b314 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x110>
   2b254:	ldr	r0, [r6, #192]	; 0xc0
   2b258:	ldr	r1, [r4, #24]
   2b25c:	add	r0, r0, r7
   2b260:	add	r2, r1, #7
   2b264:	cmp	r2, r0
   2b268:	bls	2b27c <myhtml_tokenizer_state_markup_declaration_open@@Base+0x78>
   2b26c:	ldr	r0, [r6, #76]	; 0x4c
   2b270:	str	r5, [r0, #4]
   2b274:	mov	r0, r7
   2b278:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b27c:	mov	r0, r6
   2b280:	mov	r2, #7
   2b284:	mov	r8, #7
   2b288:	bl	10f8c <myhtml_tree_incomming_buffer_make_data@plt>
   2b28c:	ldr	r1, [pc, #292]	; 2b3b8 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1b4>
   2b290:	mov	r2, #7
   2b294:	mov	r7, r0
   2b298:	add	r1, pc, r1
   2b29c:	bl	11298 <mycore_strncasecmp@plt>
   2b2a0:	cmp	r0, #0
   2b2a4:	beq	2b33c <myhtml_tokenizer_state_markup_declaration_open@@Base+0x138>
   2b2a8:	ldr	r1, [pc, #268]	; 2b3bc <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1b8>
   2b2ac:	mov	r0, r7
   2b2b0:	mov	r2, #7
   2b2b4:	add	r1, pc, r1
   2b2b8:	bl	11be0 <strncmp@plt>
   2b2bc:	cmp	r0, #0
   2b2c0:	bne	2b2fc <myhtml_tokenizer_state_markup_declaration_open@@Base+0xf8>
   2b2c4:	ldr	r0, [r6, #68]	; 0x44
   2b2c8:	ldr	r0, [r0, #8]
   2b2cc:	cmp	r0, #0
   2b2d0:	ldrne	r1, [r0, #4]
   2b2d4:	cmpne	r1, #0
   2b2d8:	beq	2b2fc <myhtml_tokenizer_state_markup_declaration_open@@Base+0xf8>
   2b2dc:	mov	r0, r6
   2b2e0:	bl	10e78 <myhtml_tree_wait_for_last_done_token@plt>
   2b2e4:	mov	r0, r6
   2b2e8:	bl	11a30 <myhtml_tree_adjusted_current_node@plt>
   2b2ec:	cmp	r0, #0
   2b2f0:	ldrne	r0, [r0, #8]
   2b2f4:	cmpne	r0, #1
   2b2f8:	bne	2b36c <myhtml_tokenizer_state_markup_declaration_open@@Base+0x168>
   2b2fc:	mov	r0, #0
   2b300:	str	r0, [r4, #28]
   2b304:	mov	r0, #43	; 0x2b
   2b308:	str	r0, [r6, #160]	; 0xa0
   2b30c:	mov	r0, r5
   2b310:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b314:	mov	r0, #45	; 0x2d
   2b318:	add	r5, r5, #2
   2b31c:	mov	r1, #0
   2b320:	str	r0, [r6, #160]	; 0xa0
   2b324:	ldr	r0, [r6, #192]	; 0xc0
   2b328:	add	r0, r0, r5
   2b32c:	str	r0, [r4, #24]
   2b330:	mov	r0, r5
   2b334:	str	r1, [r4, #28]
   2b338:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b33c:	mov	r0, #51	; 0x33
   2b340:	mov	r1, #3
   2b344:	str	r0, [r6, #160]	; 0xa0
   2b348:	ldr	r0, [r6, #76]	; 0x4c
   2b34c:	ldr	r0, [r0, #12]
   2b350:	str	r8, [r4, #28]
   2b354:	str	r1, [r4]
   2b358:	ldr	r1, [r4, #24]
   2b35c:	add	r1, r1, #7
   2b360:	sub	r5, r1, r0
   2b364:	mov	r0, r5
   2b368:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b36c:	mov	r0, #67	; 0x43
   2b370:	mov	r1, #0
   2b374:	str	r0, [r6, #160]	; 0xa0
   2b378:	ldr	r0, [r6, #76]	; 0x4c
   2b37c:	ldr	r0, [r0, #12]
   2b380:	str	r1, [r4, #28]
   2b384:	mov	r1, #1
   2b388:	str	r1, [r4]
   2b38c:	ldr	r1, [r4, #24]
   2b390:	add	r1, r1, #7
   2b394:	str	r1, [r4, #24]
   2b398:	ldr	r2, [r4, #48]	; 0x30
   2b39c:	ldr	r3, [r4, #48]	; 0x30
   2b3a0:	and	r2, r2, #8
   2b3a4:	eor	r2, r3, r2
   2b3a8:	str	r2, [r4, #48]	; 0x30
   2b3ac:	sub	r5, r1, r0
   2b3b0:	mov	r0, r5
   2b3b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b3b8:	andeq	r7, sp, ip, ror #9
   2b3bc:	andeq	r8, sp, lr, lsl r4

0002b3c0 <myhtml_tokenizer_state_tag_name@@Base>:
   2b3c0:	push	{r4, r5, r6, r7, fp, lr}
   2b3c4:	add	fp, sp, #16
   2b3c8:	mov	r7, r0
   2b3cc:	ldr	r0, [fp, #8]
   2b3d0:	mov	r4, r3
   2b3d4:	cmp	r3, r0
   2b3d8:	bcs	2b414 <myhtml_tokenizer_state_tag_name@@Base+0x54>
   2b3dc:	mov	r6, r1
   2b3e0:	ldr	r1, [pc, #328]	; 2b530 <myhtml_tokenizer_state_tag_name@@Base+0x170>
   2b3e4:	add	r1, pc, r1
   2b3e8:	ldrb	r3, [r2, r4]
   2b3ec:	ldrb	r5, [r1, r3]
   2b3f0:	cmp	r5, #2
   2b3f4:	beq	2b41c <myhtml_tokenizer_state_tag_name@@Base+0x5c>
   2b3f8:	cmp	r3, #62	; 0x3e
   2b3fc:	beq	2b454 <myhtml_tokenizer_state_tag_name@@Base+0x94>
   2b400:	cmp	r3, #47	; 0x2f
   2b404:	beq	2b4f8 <myhtml_tokenizer_state_tag_name@@Base+0x138>
   2b408:	add	r4, r4, #1
   2b40c:	cmp	r4, r0
   2b410:	bcc	2b3e8 <myhtml_tokenizer_state_tag_name@@Base+0x28>
   2b414:	mov	r0, r4
   2b418:	pop	{r4, r5, r6, r7, fp, pc}
   2b41c:	ldr	r0, [r6, #24]
   2b420:	ldr	r1, [r7, #192]	; 0xc0
   2b424:	mov	r3, r4
   2b428:	sub	r0, r1, r0
   2b42c:	mov	r1, r6
   2b430:	add	r0, r0, r4
   2b434:	str	r0, [r6, #28]
   2b438:	mov	r0, r7
   2b43c:	bl	11958 <myhtml_check_tag_parser@plt>
   2b440:	mov	r0, #33	; 0x21
   2b444:	add	r4, r4, #1
   2b448:	str	r0, [r7, #160]	; 0xa0
   2b44c:	mov	r0, r4
   2b450:	pop	{r4, r5, r6, r7, fp, pc}
   2b454:	ldr	r0, [r6, #24]
   2b458:	ldr	r1, [r7, #192]	; 0xc0
   2b45c:	mov	r3, r4
   2b460:	sub	r0, r1, r0
   2b464:	mov	r1, r6
   2b468:	add	r0, r0, r4
   2b46c:	str	r0, [r6, #28]
   2b470:	mov	r0, r7
   2b474:	bl	11958 <myhtml_check_tag_parser@plt>
   2b478:	ldr	r1, [r6, #48]	; 0x30
   2b47c:	mov	r0, #0
   2b480:	tst	r1, #1
   2b484:	bne	2b4a8 <myhtml_tokenizer_state_tag_name@@Base+0xe8>
   2b488:	ldr	r1, [r6]
   2b48c:	cmp	r1, #93	; 0x5d
   2b490:	ldreq	r2, [r7, #180]	; 0xb4
   2b494:	tsteq	r2, #1
   2b498:	beq	2b4a8 <myhtml_tokenizer_state_tag_name@@Base+0xe8>
   2b49c:	ldr	r0, [r7, #28]
   2b4a0:	bl	117fc <myhtml_tag_get_by_id@plt>
   2b4a4:	ldr	r0, [r0, #12]
   2b4a8:	str	r0, [r7, #160]	; 0xa0
   2b4ac:	mov	r2, r6
   2b4b0:	ldr	r0, [r7, #192]	; 0xc0
   2b4b4:	ldr	r1, [r6, #32]
   2b4b8:	sub	r0, r0, r1
   2b4bc:	add	r0, r0, r4
   2b4c0:	add	r4, r4, #1
   2b4c4:	add	r0, r0, #1
   2b4c8:	mov	r1, r4
   2b4cc:	str	r0, [r6, #36]	; 0x24
   2b4d0:	mov	r0, r7
   2b4d4:	bl	110e8 <myhtml_queue_add@plt>
   2b4d8:	cmp	r0, #0
   2b4dc:	movne	r0, #69	; 0x45
   2b4e0:	movne	r4, #0
   2b4e4:	strne	r0, [r7, #160]	; 0xa0
   2b4e8:	movne	r0, r4
   2b4ec:	popne	{r4, r5, r6, r7, fp, pc}
   2b4f0:	mov	r0, r4
   2b4f4:	pop	{r4, r5, r6, r7, fp, pc}
   2b4f8:	ldr	r0, [r6, #24]
   2b4fc:	ldr	r1, [r7, #192]	; 0xc0
   2b500:	mov	r3, r4
   2b504:	sub	r0, r1, r0
   2b508:	mov	r1, r6
   2b50c:	add	r0, r0, r4
   2b510:	str	r0, [r6, #28]
   2b514:	mov	r0, r7
   2b518:	bl	11958 <myhtml_check_tag_parser@plt>
   2b51c:	mov	r0, #42	; 0x2a
   2b520:	add	r4, r4, #1
   2b524:	str	r0, [r7, #160]	; 0xa0
   2b528:	mov	r0, r4
   2b52c:	pop	{r4, r5, r6, r7, fp, pc}
   2b530:	strdeq	r8, [sp], -r6

0002b534 <myhtml_tokenizer_state_self_closing_start_tag@@Base>:
   2b534:	push	{r4, r5, r6, r7, fp, lr}
   2b538:	add	fp, sp, #16
   2b53c:	mov	r4, r0
   2b540:	ldrb	r0, [r2, r3]
   2b544:	mov	r5, r1
   2b548:	mov	r6, r3
   2b54c:	mov	r1, #33	; 0x21
   2b550:	cmp	r0, #62	; 0x3e
   2b554:	bne	2b5e0 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0xac>
   2b558:	ldr	r0, [r5, #48]	; 0x30
   2b55c:	mov	r7, #0
   2b560:	orr	r0, r0, #2
   2b564:	str	r0, [r5, #48]	; 0x30
   2b568:	ldr	r0, [r5, #48]	; 0x30
   2b56c:	tst	r0, #1
   2b570:	mov	r0, #0
   2b574:	bne	2b5a0 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0x6c>
   2b578:	ldr	r1, [r5]
   2b57c:	cmp	r1, #93	; 0x5d
   2b580:	bne	2b594 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0x60>
   2b584:	ldr	r0, [r4, #180]	; 0xb4
   2b588:	tst	r0, #1
   2b58c:	mov	r0, #0
   2b590:	beq	2b5a0 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0x6c>
   2b594:	ldr	r0, [r4, #28]
   2b598:	bl	117fc <myhtml_tag_get_by_id@plt>
   2b59c:	ldr	r0, [r0, #12]
   2b5a0:	str	r0, [r4, #160]	; 0xa0
   2b5a4:	add	r6, r6, #1
   2b5a8:	mov	r2, r5
   2b5ac:	ldr	r0, [r4, #192]	; 0xc0
   2b5b0:	ldr	r1, [r5, #32]
   2b5b4:	add	r0, r0, r6
   2b5b8:	sub	r0, r0, r1
   2b5bc:	mov	r1, r6
   2b5c0:	str	r0, [r5, #36]	; 0x24
   2b5c4:	mov	r0, r4
   2b5c8:	bl	110e8 <myhtml_queue_add@plt>
   2b5cc:	mov	r1, #69	; 0x45
   2b5d0:	cmp	r0, #0
   2b5d4:	bne	2b5e4 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0xb0>
   2b5d8:	mov	r0, r6
   2b5dc:	pop	{r4, r5, r6, r7, fp, pc}
   2b5e0:	mov	r7, r6
   2b5e4:	mov	r6, r7
   2b5e8:	str	r1, [r4, #160]	; 0xa0
   2b5ec:	mov	r0, r6
   2b5f0:	pop	{r4, r5, r6, r7, fp, pc}

0002b5f4 <myhtml_tokenizer_state_before_attribute_name@@Base>:
   2b5f4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b5f8:	add	fp, sp, #24
   2b5fc:	mov	r4, r3
   2b600:	ldrb	r3, [r2, r3]
   2b604:	mov	r8, r0
   2b608:	ldr	r0, [fp, #8]
   2b60c:	mov	r6, r1
   2b610:	sub	r7, r3, #9
   2b614:	cmp	r7, #23
   2b618:	bhi	2b678 <myhtml_tokenizer_state_before_attribute_name@@Base+0x84>
   2b61c:	movw	r1, #27
   2b620:	mov	r5, #1
   2b624:	movt	r1, #128	; 0x80
   2b628:	tst	r1, r5, lsl r7
   2b62c:	beq	2b678 <myhtml_tokenizer_state_before_attribute_name@@Base+0x84>
   2b630:	cmp	r4, r0
   2b634:	bcs	2b678 <myhtml_tokenizer_state_before_attribute_name@@Base+0x84>
   2b638:	add	r4, r4, #1
   2b63c:	mvn	r5, #8
   2b640:	mov	r7, #1
   2b644:	uxtab	r3, r5, r3
   2b648:	cmp	r3, #23
   2b64c:	bls	2b668 <myhtml_tokenizer_state_before_attribute_name@@Base+0x74>
   2b650:	b	2b710 <myhtml_tokenizer_state_before_attribute_name@@Base+0x11c>
   2b654:	ldrb	r3, [r2, r4]
   2b658:	add	r4, r4, #1
   2b65c:	uxtab	r3, r5, r3
   2b660:	cmp	r3, #23
   2b664:	bhi	2b710 <myhtml_tokenizer_state_before_attribute_name@@Base+0x11c>
   2b668:	tst	r1, r7, lsl r3
   2b66c:	beq	2b710 <myhtml_tokenizer_state_before_attribute_name@@Base+0x11c>
   2b670:	cmp	r4, r0
   2b674:	bcc	2b654 <myhtml_tokenizer_state_before_attribute_name@@Base+0x60>
   2b678:	cmp	r4, r0
   2b67c:	bcs	2b71c <myhtml_tokenizer_state_before_attribute_name@@Base+0x128>
   2b680:	ldrb	r0, [r2, r4]
   2b684:	cmp	r0, #47	; 0x2f
   2b688:	beq	2b724 <myhtml_tokenizer_state_before_attribute_name@@Base+0x130>
   2b68c:	cmp	r0, #62	; 0x3e
   2b690:	bne	2b73c <myhtml_tokenizer_state_before_attribute_name@@Base+0x148>
   2b694:	ldr	r1, [r6, #48]	; 0x30
   2b698:	mov	r0, #0
   2b69c:	tst	r1, #1
   2b6a0:	bne	2b6c4 <myhtml_tokenizer_state_before_attribute_name@@Base+0xd0>
   2b6a4:	ldr	r1, [r6]
   2b6a8:	cmp	r1, #93	; 0x5d
   2b6ac:	ldreq	r2, [r8, #180]	; 0xb4
   2b6b0:	tsteq	r2, #1
   2b6b4:	beq	2b6c4 <myhtml_tokenizer_state_before_attribute_name@@Base+0xd0>
   2b6b8:	ldr	r0, [r8, #28]
   2b6bc:	bl	117fc <myhtml_tag_get_by_id@plt>
   2b6c0:	ldr	r0, [r0, #12]
   2b6c4:	str	r0, [r8, #160]	; 0xa0
   2b6c8:	add	r4, r4, #1
   2b6cc:	mov	r2, r6
   2b6d0:	ldr	r0, [r8, #192]	; 0xc0
   2b6d4:	ldr	r1, [r6, #32]
   2b6d8:	add	r0, r0, r4
   2b6dc:	sub	r0, r0, r1
   2b6e0:	mov	r1, r4
   2b6e4:	str	r0, [r6, #36]	; 0x24
   2b6e8:	mov	r0, r8
   2b6ec:	bl	110e8 <myhtml_queue_add@plt>
   2b6f0:	cmp	r0, #0
   2b6f4:	movne	r0, #69	; 0x45
   2b6f8:	movne	r4, #0
   2b6fc:	strne	r0, [r8, #160]	; 0xa0
   2b700:	movne	r0, r4
   2b704:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b708:	mov	r0, r4
   2b70c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b710:	sub	r4, r4, #1
   2b714:	cmp	r4, r0
   2b718:	bcc	2b680 <myhtml_tokenizer_state_before_attribute_name@@Base+0x8c>
   2b71c:	mov	r0, r4
   2b720:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b724:	ldr	r0, [r6, #48]	; 0x30
   2b728:	add	r4, r4, #1
   2b72c:	orr	r0, r0, #2
   2b730:	str	r0, [r6, #48]	; 0x30
   2b734:	mov	r0, r4
   2b738:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b73c:	ldr	r1, [r6, #40]	; 0x28
   2b740:	ldr	r0, [r8, #56]	; 0x38
   2b744:	cmp	r1, #0
   2b748:	beq	2b760 <myhtml_tokenizer_state_before_attribute_name@@Base+0x16c>
   2b74c:	ldr	r1, [r6, #44]	; 0x2c
   2b750:	str	r0, [r1]
   2b754:	str	r0, [r6, #44]	; 0x2c
   2b758:	str	r0, [r8, #56]	; 0x38
   2b75c:	b	2b76c <myhtml_tokenizer_state_before_attribute_name@@Base+0x178>
   2b760:	str	r0, [r6, #40]	; 0x28
   2b764:	str	r0, [r6, #44]	; 0x2c
   2b768:	mov	r1, #0
   2b76c:	mov	r3, #0
   2b770:	str	r3, [r0]
   2b774:	str	r1, [r0, #4]
   2b778:	ldr	r1, [r8, #192]	; 0xc0
   2b77c:	ldr	r0, [r8, #56]	; 0x38
   2b780:	add	r1, r1, r4
   2b784:	str	r1, [r0, #48]	; 0x30
   2b788:	str	r3, [r0, #52]	; 0x34
   2b78c:	str	r3, [r0, #56]	; 0x38
   2b790:	str	r3, [r0, #60]	; 0x3c
   2b794:	mov	r1, #34	; 0x22
   2b798:	ldrb	r0, [r2, r4]
   2b79c:	str	r1, [r8, #160]	; 0xa0
   2b7a0:	cmp	r0, #61	; 0x3d
   2b7a4:	addeq	r4, r4, #1
   2b7a8:	mov	r0, r4
   2b7ac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002b7b0 <myhtml_tokenizer_state_attribute_name@@Base>:
   2b7b0:	push	{r4, r5, r6, sl, fp, lr}
   2b7b4:	add	fp, sp, #16
   2b7b8:	mov	r5, r0
   2b7bc:	ldr	r0, [fp, #8]
   2b7c0:	mov	r4, r3
   2b7c4:	cmp	r3, r0
   2b7c8:	bcs	2b8d0 <myhtml_tokenizer_state_attribute_name@@Base+0x120>
   2b7cc:	mov	r6, r1
   2b7d0:	ldrb	r1, [r2, r4]
   2b7d4:	sub	r1, r1, #9
   2b7d8:	cmp	r1, #53	; 0x35
   2b7dc:	bhi	2b8c4 <myhtml_tokenizer_state_attribute_name@@Base+0x114>
   2b7e0:	add	r3, pc, #4
   2b7e4:	ldr	r1, [r3, r1, lsl #2]
   2b7e8:	add	pc, r3, r1
   2b7ec:	andeq	r0, r0, ip, ror #1
   2b7f0:	andeq	r0, r0, ip, ror #1
   2b7f4:	ldrdeq	r0, [r0], -r8
   2b7f8:	andeq	r0, r0, ip, ror #1
   2b7fc:	andeq	r0, r0, ip, ror #1
   2b800:	ldrdeq	r0, [r0], -r8
   2b804:	ldrdeq	r0, [r0], -r8
   2b808:	ldrdeq	r0, [r0], -r8
   2b80c:	ldrdeq	r0, [r0], -r8
   2b810:	ldrdeq	r0, [r0], -r8
   2b814:	ldrdeq	r0, [r0], -r8
   2b818:	ldrdeq	r0, [r0], -r8
   2b81c:	ldrdeq	r0, [r0], -r8
   2b820:	ldrdeq	r0, [r0], -r8
   2b824:	ldrdeq	r0, [r0], -r8
   2b828:	ldrdeq	r0, [r0], -r8
   2b82c:	ldrdeq	r0, [r0], -r8
   2b830:	ldrdeq	r0, [r0], -r8
   2b834:	ldrdeq	r0, [r0], -r8
   2b838:	ldrdeq	r0, [r0], -r8
   2b83c:	ldrdeq	r0, [r0], -r8
   2b840:	ldrdeq	r0, [r0], -r8
   2b844:	ldrdeq	r0, [r0], -r8
   2b848:	andeq	r0, r0, ip, ror #1
   2b84c:	ldrdeq	r0, [r0], -r8
   2b850:	ldrdeq	r0, [r0], -r8
   2b854:	ldrdeq	r0, [r0], -r8
   2b858:	ldrdeq	r0, [r0], -r8
   2b85c:	ldrdeq	r0, [r0], -r8
   2b860:	ldrdeq	r0, [r0], -r8
   2b864:	ldrdeq	r0, [r0], -r8
   2b868:	ldrdeq	r0, [r0], -r8
   2b86c:	ldrdeq	r0, [r0], -r8
   2b870:	ldrdeq	r0, [r0], -r8
   2b874:	ldrdeq	r0, [r0], -r8
   2b878:	ldrdeq	r0, [r0], -r8
   2b87c:	ldrdeq	r0, [r0], -r8
   2b880:	ldrdeq	r0, [r0], -r8
   2b884:	andeq	r0, r0, r8, lsl r1
   2b888:	ldrdeq	r0, [r0], -r8
   2b88c:	ldrdeq	r0, [r0], -r8
   2b890:	ldrdeq	r0, [r0], -r8
   2b894:	ldrdeq	r0, [r0], -r8
   2b898:	ldrdeq	r0, [r0], -r8
   2b89c:	ldrdeq	r0, [r0], -r8
   2b8a0:	ldrdeq	r0, [r0], -r8
   2b8a4:	ldrdeq	r0, [r0], -r8
   2b8a8:	ldrdeq	r0, [r0], -r8
   2b8ac:	ldrdeq	r0, [r0], -r8
   2b8b0:	ldrdeq	r0, [r0], -r8
   2b8b4:	ldrdeq	r0, [r0], -r8
   2b8b8:	ldrdeq	r0, [r0], -r8
   2b8bc:	andeq	r0, r0, r0, ror #2
   2b8c0:	andeq	r0, r0, r0, lsl #3
   2b8c4:	add	r4, r4, #1
   2b8c8:	cmp	r4, r0
   2b8cc:	bcc	2b7d0 <myhtml_tokenizer_state_attribute_name@@Base+0x20>
   2b8d0:	mov	r0, r4
   2b8d4:	pop	{r4, r5, r6, sl, fp, pc}
   2b8d8:	ldr	r0, [r5, #56]	; 0x38
   2b8dc:	ldr	r1, [r5, #192]	; 0xc0
   2b8e0:	ldr	r2, [r0, #48]	; 0x30
   2b8e4:	sub	r1, r1, r2
   2b8e8:	add	r1, r1, r4
   2b8ec:	str	r1, [r0, #52]	; 0x34
   2b8f0:	mov	r0, #35	; 0x23
   2b8f4:	str	r0, [r5, #160]	; 0xa0
   2b8f8:	add	r4, r4, #1
   2b8fc:	mov	r0, r4
   2b900:	pop	{r4, r5, r6, sl, fp, pc}
   2b904:	ldr	r0, [r5, #56]	; 0x38
   2b908:	ldr	r1, [r5, #192]	; 0xc0
   2b90c:	ldr	r2, [r0, #48]	; 0x30
   2b910:	sub	r1, r1, r2
   2b914:	add	r1, r1, r4
   2b918:	str	r1, [r0, #52]	; 0x34
   2b91c:	ldr	r0, [r6, #48]	; 0x30
   2b920:	orr	r0, r0, #2
   2b924:	str	r0, [r6, #48]	; 0x30
   2b928:	mov	r0, #33	; 0x21
   2b92c:	str	r0, [r5, #160]	; 0xa0
   2b930:	ldr	r0, [r5, #8]
   2b934:	ldr	r1, [r0, #16]
   2b938:	bl	11724 <myhtml_token_attr_create@plt>
   2b93c:	cmp	r0, #0
   2b940:	str	r0, [r5, #56]	; 0x38
   2b944:	bne	2b8f8 <myhtml_tokenizer_state_attribute_name@@Base+0x148>
   2b948:	b	2ba0c <myhtml_tokenizer_state_attribute_name@@Base+0x25c>
   2b94c:	ldr	r0, [r5, #56]	; 0x38
   2b950:	ldr	r1, [r5, #192]	; 0xc0
   2b954:	ldr	r2, [r0, #48]	; 0x30
   2b958:	sub	r1, r1, r2
   2b95c:	add	r1, r1, r4
   2b960:	str	r1, [r0, #52]	; 0x34
   2b964:	mov	r0, #36	; 0x24
   2b968:	b	2b8f4 <myhtml_tokenizer_state_attribute_name@@Base+0x144>
   2b96c:	ldr	r1, [r5, #56]	; 0x38
   2b970:	ldr	r0, [r5, #192]	; 0xc0
   2b974:	ldr	r2, [r1, #48]	; 0x30
   2b978:	sub	r2, r0, r2
   2b97c:	add	r2, r2, r4
   2b980:	str	r2, [r1, #52]	; 0x34
   2b984:	ldr	r1, [r6, #48]	; 0x30
   2b988:	tst	r1, #1
   2b98c:	bne	2b9bc <myhtml_tokenizer_state_attribute_name@@Base+0x20c>
   2b990:	ldr	r1, [r6]
   2b994:	cmp	r1, #93	; 0x5d
   2b998:	ldreq	r2, [r5, #180]	; 0xb4
   2b99c:	tsteq	r2, #1
   2b9a0:	beq	2b9bc <myhtml_tokenizer_state_attribute_name@@Base+0x20c>
   2b9a4:	ldr	r0, [r5, #28]
   2b9a8:	bl	117fc <myhtml_tag_get_by_id@plt>
   2b9ac:	ldr	r0, [r0, #12]
   2b9b0:	str	r0, [r5, #160]	; 0xa0
   2b9b4:	ldr	r0, [r5, #192]	; 0xc0
   2b9b8:	b	2b9c4 <myhtml_tokenizer_state_attribute_name@@Base+0x214>
   2b9bc:	mov	r1, #0
   2b9c0:	str	r1, [r5, #160]	; 0xa0
   2b9c4:	ldr	r1, [r6, #32]
   2b9c8:	mov	r2, r6
   2b9cc:	sub	r0, r0, r1
   2b9d0:	add	r0, r0, r4
   2b9d4:	add	r4, r4, #1
   2b9d8:	add	r0, r0, #1
   2b9dc:	mov	r1, r4
   2b9e0:	str	r0, [r6, #36]	; 0x24
   2b9e4:	mov	r0, r5
   2b9e8:	bl	110e8 <myhtml_queue_add@plt>
   2b9ec:	cmp	r0, #0
   2b9f0:	bne	2ba0c <myhtml_tokenizer_state_attribute_name@@Base+0x25c>
   2b9f4:	ldr	r0, [r5, #8]
   2b9f8:	ldr	r1, [r0, #16]
   2b9fc:	bl	11724 <myhtml_token_attr_create@plt>
   2ba00:	cmp	r0, #0
   2ba04:	str	r0, [r5, #56]	; 0x38
   2ba08:	bne	2b8d0 <myhtml_tokenizer_state_attribute_name@@Base+0x120>
   2ba0c:	mov	r0, #69	; 0x45
   2ba10:	mov	r4, #0
   2ba14:	str	r0, [r5, #160]	; 0xa0
   2ba18:	mov	r0, r4
   2ba1c:	pop	{r4, r5, r6, sl, fp, pc}

0002ba20 <myhtml_tokenizer_state_after_attribute_name@@Base>:
   2ba20:	push	{r4, r5, r6, sl, fp, lr}
   2ba24:	add	fp, sp, #16
   2ba28:	mov	r5, r0
   2ba2c:	ldr	r0, [fp, #8]
   2ba30:	mov	r4, r3
   2ba34:	cmp	r3, r0
   2ba38:	bcs	2bb40 <myhtml_tokenizer_state_after_attribute_name@@Base+0x120>
   2ba3c:	mov	r6, r1
   2ba40:	ldrb	r1, [r2, r4]
   2ba44:	sub	r1, r1, #9
   2ba48:	cmp	r1, #53	; 0x35
   2ba4c:	bhi	2bb48 <myhtml_tokenizer_state_after_attribute_name@@Base+0x128>
   2ba50:	add	r3, pc, #4
   2ba54:	ldr	r1, [r3, r1, lsl #2]
   2ba58:	add	pc, r3, r1
   2ba5c:	ldrdeq	r0, [r0], -r8
   2ba60:	ldrdeq	r0, [r0], -r8
   2ba64:	andeq	r0, r0, ip, ror #1
   2ba68:	ldrdeq	r0, [r0], -r8
   2ba6c:	ldrdeq	r0, [r0], -r8
   2ba70:	andeq	r0, r0, ip, ror #1
   2ba74:	andeq	r0, r0, ip, ror #1
   2ba78:	andeq	r0, r0, ip, ror #1
   2ba7c:	andeq	r0, r0, ip, ror #1
   2ba80:	andeq	r0, r0, ip, ror #1
   2ba84:	andeq	r0, r0, ip, ror #1
   2ba88:	andeq	r0, r0, ip, ror #1
   2ba8c:	andeq	r0, r0, ip, ror #1
   2ba90:	andeq	r0, r0, ip, ror #1
   2ba94:	andeq	r0, r0, ip, ror #1
   2ba98:	andeq	r0, r0, ip, ror #1
   2ba9c:	andeq	r0, r0, ip, ror #1
   2baa0:	andeq	r0, r0, ip, ror #1
   2baa4:	andeq	r0, r0, ip, ror #1
   2baa8:	andeq	r0, r0, ip, ror #1
   2baac:	andeq	r0, r0, ip, ror #1
   2bab0:	andeq	r0, r0, ip, ror #1
   2bab4:	andeq	r0, r0, ip, ror #1
   2bab8:	ldrdeq	r0, [r0], -r8
   2babc:	andeq	r0, r0, ip, ror #1
   2bac0:	andeq	r0, r0, ip, ror #1
   2bac4:	andeq	r0, r0, ip, ror #1
   2bac8:	andeq	r0, r0, ip, ror #1
   2bacc:	andeq	r0, r0, ip, ror #1
   2bad0:	andeq	r0, r0, ip, ror #1
   2bad4:	andeq	r0, r0, ip, ror #1
   2bad8:	andeq	r0, r0, ip, ror #1
   2badc:	andeq	r0, r0, ip, ror #1
   2bae0:	andeq	r0, r0, ip, ror #1
   2bae4:	andeq	r0, r0, ip, ror #1
   2bae8:	andeq	r0, r0, ip, ror #1
   2baec:	andeq	r0, r0, ip, ror #1
   2baf0:	andeq	r0, r0, ip, ror #1
   2baf4:	andeq	r0, r0, ip, ror #1
   2baf8:	andeq	r0, r0, ip, ror #1
   2bafc:	andeq	r0, r0, ip, ror #1
   2bb00:	andeq	r0, r0, ip, ror #1
   2bb04:	andeq	r0, r0, ip, ror #1
   2bb08:	andeq	r0, r0, ip, ror #1
   2bb0c:	andeq	r0, r0, ip, ror #1
   2bb10:	andeq	r0, r0, ip, ror #1
   2bb14:	andeq	r0, r0, ip, ror #1
   2bb18:	andeq	r0, r0, ip, ror #1
   2bb1c:	andeq	r0, r0, ip, ror #1
   2bb20:	andeq	r0, r0, ip, ror #1
   2bb24:	andeq	r0, r0, ip, ror #1
   2bb28:	andeq	r0, r0, ip, ror #1
   2bb2c:	andeq	r0, r0, r4, lsr #2
   2bb30:	andeq	r0, r0, r8, lsr r1
   2bb34:	add	r4, r4, #1
   2bb38:	cmp	r4, r0
   2bb3c:	bcc	2ba40 <myhtml_tokenizer_state_after_attribute_name@@Base+0x20>
   2bb40:	mov	r0, r4
   2bb44:	pop	{r4, r5, r6, sl, fp, pc}
   2bb48:	ldr	r0, [r5, #8]
   2bb4c:	ldr	r1, [r0, #16]
   2bb50:	bl	11724 <myhtml_token_attr_create@plt>
   2bb54:	cmp	r0, #0
   2bb58:	str	r0, [r5, #56]	; 0x38
   2bb5c:	beq	2bc14 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1f4>
   2bb60:	ldr	r1, [r6, #40]	; 0x28
   2bb64:	cmp	r1, #0
   2bb68:	beq	2bc28 <myhtml_tokenizer_state_after_attribute_name@@Base+0x208>
   2bb6c:	ldr	r1, [r6, #44]	; 0x2c
   2bb70:	str	r0, [r1]
   2bb74:	str	r0, [r6, #44]	; 0x2c
   2bb78:	str	r0, [r5, #56]	; 0x38
   2bb7c:	b	2bc38 <myhtml_tokenizer_state_after_attribute_name@@Base+0x218>
   2bb80:	mov	r0, #36	; 0x24
   2bb84:	add	r4, r4, #1
   2bb88:	str	r0, [r5, #160]	; 0xa0
   2bb8c:	mov	r0, r4
   2bb90:	pop	{r4, r5, r6, sl, fp, pc}
   2bb94:	ldr	r1, [r6, #48]	; 0x30
   2bb98:	mov	r0, #0
   2bb9c:	tst	r1, #1
   2bba0:	bne	2bbc4 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1a4>
   2bba4:	ldr	r1, [r6]
   2bba8:	cmp	r1, #93	; 0x5d
   2bbac:	ldreq	r2, [r5, #180]	; 0xb4
   2bbb0:	tsteq	r2, #1
   2bbb4:	beq	2bbc4 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1a4>
   2bbb8:	ldr	r0, [r5, #28]
   2bbbc:	bl	117fc <myhtml_tag_get_by_id@plt>
   2bbc0:	ldr	r0, [r0, #12]
   2bbc4:	str	r0, [r5, #160]	; 0xa0
   2bbc8:	mov	r2, r6
   2bbcc:	ldr	r0, [r5, #192]	; 0xc0
   2bbd0:	ldr	r1, [r6, #32]
   2bbd4:	sub	r0, r0, r1
   2bbd8:	add	r0, r0, r4
   2bbdc:	add	r4, r4, #1
   2bbe0:	add	r0, r0, #1
   2bbe4:	mov	r1, r4
   2bbe8:	str	r0, [r6, #36]	; 0x24
   2bbec:	mov	r0, r5
   2bbf0:	bl	110e8 <myhtml_queue_add@plt>
   2bbf4:	cmp	r0, #0
   2bbf8:	bne	2bc14 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1f4>
   2bbfc:	ldr	r0, [r5, #8]
   2bc00:	ldr	r1, [r0, #16]
   2bc04:	bl	11724 <myhtml_token_attr_create@plt>
   2bc08:	cmp	r0, #0
   2bc0c:	str	r0, [r5, #56]	; 0x38
   2bc10:	bne	2bb40 <myhtml_tokenizer_state_after_attribute_name@@Base+0x120>
   2bc14:	mov	r0, #69	; 0x45
   2bc18:	mov	r4, #0
   2bc1c:	str	r0, [r5, #160]	; 0xa0
   2bc20:	mov	r0, r4
   2bc24:	pop	{r4, r5, r6, sl, fp, pc}
   2bc28:	str	r0, [r6, #40]	; 0x28
   2bc2c:	str	r0, [r6, #44]	; 0x2c
   2bc30:	str	r0, [r5, #56]	; 0x38
   2bc34:	mov	r1, #0
   2bc38:	mov	r2, #0
   2bc3c:	str	r2, [r0]
   2bc40:	str	r1, [r0, #4]
   2bc44:	ldr	r1, [r5, #192]	; 0xc0
   2bc48:	ldr	r0, [r5, #56]	; 0x38
   2bc4c:	add	r1, r1, r4
   2bc50:	str	r1, [r0, #48]	; 0x30
   2bc54:	str	r2, [r0, #52]	; 0x34
   2bc58:	str	r2, [r0, #56]	; 0x38
   2bc5c:	str	r2, [r0, #60]	; 0x3c
   2bc60:	mov	r0, #34	; 0x22
   2bc64:	str	r0, [r5, #160]	; 0xa0
   2bc68:	mov	r0, r4
   2bc6c:	pop	{r4, r5, r6, sl, fp, pc}

0002bc70 <myhtml_tokenizer_state_before_attribute_value@@Base>:
   2bc70:	push	{r4, r5, r6, sl, fp, lr}
   2bc74:	add	fp, sp, #16
   2bc78:	mov	r5, r0
   2bc7c:	ldr	r0, [fp, #8]
   2bc80:	mov	r4, r3
   2bc84:	cmp	r3, r0
   2bc88:	bcs	2bd90 <myhtml_tokenizer_state_before_attribute_value@@Base+0x120>
   2bc8c:	mov	r6, r1
   2bc90:	ldrb	r1, [r2, r4]
   2bc94:	sub	r1, r1, #9
   2bc98:	cmp	r1, #53	; 0x35
   2bc9c:	bhi	2bd98 <myhtml_tokenizer_state_before_attribute_value@@Base+0x128>
   2bca0:	add	r3, pc, #4
   2bca4:	ldr	r1, [r3, r1, lsl #2]
   2bca8:	add	pc, r3, r1
   2bcac:	ldrdeq	r0, [r0], -r8
   2bcb0:	ldrdeq	r0, [r0], -r8
   2bcb4:	andeq	r0, r0, ip, ror #1
   2bcb8:	ldrdeq	r0, [r0], -r8
   2bcbc:	ldrdeq	r0, [r0], -r8
   2bcc0:	andeq	r0, r0, ip, ror #1
   2bcc4:	andeq	r0, r0, ip, ror #1
   2bcc8:	andeq	r0, r0, ip, ror #1
   2bccc:	andeq	r0, r0, ip, ror #1
   2bcd0:	andeq	r0, r0, ip, ror #1
   2bcd4:	andeq	r0, r0, ip, ror #1
   2bcd8:	andeq	r0, r0, ip, ror #1
   2bcdc:	andeq	r0, r0, ip, ror #1
   2bce0:	andeq	r0, r0, ip, ror #1
   2bce4:	andeq	r0, r0, ip, ror #1
   2bce8:	andeq	r0, r0, ip, ror #1
   2bcec:	andeq	r0, r0, ip, ror #1
   2bcf0:	andeq	r0, r0, ip, ror #1
   2bcf4:	andeq	r0, r0, ip, ror #1
   2bcf8:	andeq	r0, r0, ip, ror #1
   2bcfc:	andeq	r0, r0, ip, ror #1
   2bd00:	andeq	r0, r0, ip, ror #1
   2bd04:	andeq	r0, r0, ip, ror #1
   2bd08:	ldrdeq	r0, [r0], -r8
   2bd0c:	andeq	r0, r0, ip, ror #1
   2bd10:	strdeq	r0, [r0], -r4
   2bd14:	andeq	r0, r0, ip, ror #1
   2bd18:	andeq	r0, r0, ip, ror #1
   2bd1c:	andeq	r0, r0, ip, ror #1
   2bd20:	andeq	r0, r0, ip, ror #1
   2bd24:	andeq	r0, r0, r0, lsl #2
   2bd28:	andeq	r0, r0, ip, ror #1
   2bd2c:	andeq	r0, r0, ip, ror #1
   2bd30:	andeq	r0, r0, ip, ror #1
   2bd34:	andeq	r0, r0, ip, ror #1
   2bd38:	andeq	r0, r0, ip, ror #1
   2bd3c:	andeq	r0, r0, ip, ror #1
   2bd40:	andeq	r0, r0, ip, ror #1
   2bd44:	andeq	r0, r0, ip, ror #1
   2bd48:	andeq	r0, r0, ip, ror #1
   2bd4c:	andeq	r0, r0, ip, ror #1
   2bd50:	andeq	r0, r0, ip, ror #1
   2bd54:	andeq	r0, r0, ip, ror #1
   2bd58:	andeq	r0, r0, ip, ror #1
   2bd5c:	andeq	r0, r0, ip, ror #1
   2bd60:	andeq	r0, r0, ip, ror #1
   2bd64:	andeq	r0, r0, ip, ror #1
   2bd68:	andeq	r0, r0, ip, ror #1
   2bd6c:	andeq	r0, r0, ip, ror #1
   2bd70:	andeq	r0, r0, ip, ror #1
   2bd74:	andeq	r0, r0, ip, ror #1
   2bd78:	andeq	r0, r0, ip, ror #1
   2bd7c:	andeq	r0, r0, ip, ror #1
   2bd80:	andeq	r0, r0, r4, lsr #2
   2bd84:	add	r4, r4, #1
   2bd88:	cmp	r4, r0
   2bd8c:	bcc	2bc90 <myhtml_tokenizer_state_before_attribute_value@@Base+0x20>
   2bd90:	mov	r0, r4
   2bd94:	pop	{r4, r5, r6, sl, fp, pc}
   2bd98:	mov	r0, #39	; 0x27
   2bd9c:	b	2bdb4 <myhtml_tokenizer_state_before_attribute_value@@Base+0x144>
   2bda0:	add	r4, r4, #1
   2bda4:	mov	r0, #37	; 0x25
   2bda8:	b	2bdb4 <myhtml_tokenizer_state_before_attribute_value@@Base+0x144>
   2bdac:	add	r4, r4, #1
   2bdb0:	mov	r0, #38	; 0x26
   2bdb4:	str	r0, [r5, #160]	; 0xa0
   2bdb8:	ldr	r1, [r5, #192]	; 0xc0
   2bdbc:	ldr	r0, [r5, #56]	; 0x38
   2bdc0:	add	r1, r1, r4
   2bdc4:	str	r1, [r0, #56]	; 0x38
   2bdc8:	mov	r0, r4
   2bdcc:	pop	{r4, r5, r6, sl, fp, pc}
   2bdd0:	ldr	r1, [r6, #48]	; 0x30
   2bdd4:	mov	r0, #0
   2bdd8:	tst	r1, #1
   2bddc:	bne	2be00 <myhtml_tokenizer_state_before_attribute_value@@Base+0x190>
   2bde0:	ldr	r1, [r6]
   2bde4:	cmp	r1, #93	; 0x5d
   2bde8:	ldreq	r2, [r5, #180]	; 0xb4
   2bdec:	tsteq	r2, #1
   2bdf0:	beq	2be00 <myhtml_tokenizer_state_before_attribute_value@@Base+0x190>
   2bdf4:	ldr	r0, [r5, #28]
   2bdf8:	bl	117fc <myhtml_tag_get_by_id@plt>
   2bdfc:	ldr	r0, [r0, #12]
   2be00:	str	r0, [r5, #160]	; 0xa0
   2be04:	mov	r2, r6
   2be08:	ldr	r0, [r5, #192]	; 0xc0
   2be0c:	ldr	r1, [r6, #32]
   2be10:	sub	r0, r0, r1
   2be14:	add	r0, r0, r4
   2be18:	add	r4, r4, #1
   2be1c:	add	r0, r0, #1
   2be20:	mov	r1, r4
   2be24:	str	r0, [r6, #36]	; 0x24
   2be28:	mov	r0, r5
   2be2c:	bl	110e8 <myhtml_queue_add@plt>
   2be30:	cmp	r0, #0
   2be34:	bne	2be50 <myhtml_tokenizer_state_before_attribute_value@@Base+0x1e0>
   2be38:	ldr	r0, [r5, #8]
   2be3c:	ldr	r1, [r0, #16]
   2be40:	bl	11724 <myhtml_token_attr_create@plt>
   2be44:	cmp	r0, #0
   2be48:	str	r0, [r5, #56]	; 0x38
   2be4c:	bne	2bd90 <myhtml_tokenizer_state_before_attribute_value@@Base+0x120>
   2be50:	mov	r0, #69	; 0x45
   2be54:	mov	r4, #0
   2be58:	str	r0, [r5, #160]	; 0xa0
   2be5c:	mov	r0, r4
   2be60:	pop	{r4, r5, r6, sl, fp, pc}

0002be64 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base>:
   2be64:	push	{r4, r5, fp, lr}
   2be68:	add	fp, sp, #8
   2be6c:	mov	r5, r0
   2be70:	ldr	r0, [fp, #8]
   2be74:	mov	r4, r3
   2be78:	cmp	r3, r0
   2be7c:	bcs	2be98 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x34>
   2be80:	ldrb	r1, [r2, r4]
   2be84:	cmp	r1, #34	; 0x22
   2be88:	beq	2bea0 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x3c>
   2be8c:	add	r4, r4, #1
   2be90:	cmp	r4, r0
   2be94:	bcc	2be80 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x1c>
   2be98:	mov	r0, r4
   2be9c:	pop	{r4, r5, fp, pc}
   2bea0:	ldr	r0, [r5, #56]	; 0x38
   2bea4:	ldr	r1, [r5, #192]	; 0xc0
   2bea8:	ldr	r2, [r0, #56]	; 0x38
   2beac:	sub	r1, r1, r2
   2beb0:	add	r1, r1, r4
   2beb4:	str	r1, [r0, #60]	; 0x3c
   2beb8:	ldr	r0, [r5, #8]
   2bebc:	ldr	r1, [r0, #16]
   2bec0:	bl	11724 <myhtml_token_attr_create@plt>
   2bec4:	cmp	r0, #0
   2bec8:	str	r0, [r5, #56]	; 0x38
   2becc:	movne	r0, #41	; 0x29
   2bed0:	addne	r4, r4, #1
   2bed4:	strne	r0, [r5, #160]	; 0xa0
   2bed8:	movne	r0, r4
   2bedc:	popne	{r4, r5, fp, pc}
   2bee0:	mov	r0, #69	; 0x45
   2bee4:	mov	r4, #0
   2bee8:	str	r0, [r5, #160]	; 0xa0
   2beec:	mov	r0, r4
   2bef0:	pop	{r4, r5, fp, pc}

0002bef4 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base>:
   2bef4:	push	{r4, r5, fp, lr}
   2bef8:	add	fp, sp, #8
   2befc:	mov	r5, r0
   2bf00:	ldr	r0, [fp, #8]
   2bf04:	mov	r4, r3
   2bf08:	cmp	r3, r0
   2bf0c:	bcs	2bf28 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x34>
   2bf10:	ldrb	r1, [r2, r4]
   2bf14:	cmp	r1, #39	; 0x27
   2bf18:	beq	2bf30 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x3c>
   2bf1c:	add	r4, r4, #1
   2bf20:	cmp	r4, r0
   2bf24:	bcc	2bf10 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x1c>
   2bf28:	mov	r0, r4
   2bf2c:	pop	{r4, r5, fp, pc}
   2bf30:	ldr	r0, [r5, #56]	; 0x38
   2bf34:	ldr	r1, [r5, #192]	; 0xc0
   2bf38:	ldr	r2, [r0, #56]	; 0x38
   2bf3c:	sub	r1, r1, r2
   2bf40:	add	r1, r1, r4
   2bf44:	str	r1, [r0, #60]	; 0x3c
   2bf48:	ldr	r0, [r5, #8]
   2bf4c:	ldr	r1, [r0, #16]
   2bf50:	bl	11724 <myhtml_token_attr_create@plt>
   2bf54:	cmp	r0, #0
   2bf58:	str	r0, [r5, #56]	; 0x38
   2bf5c:	movne	r0, #41	; 0x29
   2bf60:	addne	r4, r4, #1
   2bf64:	strne	r0, [r5, #160]	; 0xa0
   2bf68:	movne	r0, r4
   2bf6c:	popne	{r4, r5, fp, pc}
   2bf70:	mov	r0, #69	; 0x45
   2bf74:	mov	r4, #0
   2bf78:	str	r0, [r5, #160]	; 0xa0
   2bf7c:	mov	r0, r4
   2bf80:	pop	{r4, r5, fp, pc}

0002bf84 <myhtml_tokenizer_state_attribute_value_unquoted@@Base>:
   2bf84:	push	{r4, r5, r6, sl, fp, lr}
   2bf88:	add	fp, sp, #16
   2bf8c:	mov	r5, r0
   2bf90:	ldr	r0, [fp, #8]
   2bf94:	mov	r4, r3
   2bf98:	cmp	r3, r0
   2bf9c:	bcs	2c0a4 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x120>
   2bfa0:	mov	r6, r1
   2bfa4:	ldrb	r1, [r2, r4]
   2bfa8:	sub	r1, r1, #9
   2bfac:	cmp	r1, #53	; 0x35
   2bfb0:	bhi	2c098 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x114>
   2bfb4:	add	r3, pc, #4
   2bfb8:	ldr	r1, [r3, r1, lsl #2]
   2bfbc:	add	pc, r3, r1
   2bfc0:	andeq	r0, r0, ip, ror #1
   2bfc4:	andeq	r0, r0, ip, ror #1
   2bfc8:	ldrdeq	r0, [r0], -r8
   2bfcc:	andeq	r0, r0, ip, ror #1
   2bfd0:	andeq	r0, r0, ip, ror #1
   2bfd4:	ldrdeq	r0, [r0], -r8
   2bfd8:	ldrdeq	r0, [r0], -r8
   2bfdc:	ldrdeq	r0, [r0], -r8
   2bfe0:	ldrdeq	r0, [r0], -r8
   2bfe4:	ldrdeq	r0, [r0], -r8
   2bfe8:	ldrdeq	r0, [r0], -r8
   2bfec:	ldrdeq	r0, [r0], -r8
   2bff0:	ldrdeq	r0, [r0], -r8
   2bff4:	ldrdeq	r0, [r0], -r8
   2bff8:	ldrdeq	r0, [r0], -r8
   2bffc:	ldrdeq	r0, [r0], -r8
   2c000:	ldrdeq	r0, [r0], -r8
   2c004:	ldrdeq	r0, [r0], -r8
   2c008:	ldrdeq	r0, [r0], -r8
   2c00c:	ldrdeq	r0, [r0], -r8
   2c010:	ldrdeq	r0, [r0], -r8
   2c014:	ldrdeq	r0, [r0], -r8
   2c018:	ldrdeq	r0, [r0], -r8
   2c01c:	andeq	r0, r0, ip, ror #1
   2c020:	ldrdeq	r0, [r0], -r8
   2c024:	ldrdeq	r0, [r0], -r8
   2c028:	ldrdeq	r0, [r0], -r8
   2c02c:	ldrdeq	r0, [r0], -r8
   2c030:	ldrdeq	r0, [r0], -r8
   2c034:	ldrdeq	r0, [r0], -r8
   2c038:	ldrdeq	r0, [r0], -r8
   2c03c:	ldrdeq	r0, [r0], -r8
   2c040:	ldrdeq	r0, [r0], -r8
   2c044:	ldrdeq	r0, [r0], -r8
   2c048:	ldrdeq	r0, [r0], -r8
   2c04c:	ldrdeq	r0, [r0], -r8
   2c050:	ldrdeq	r0, [r0], -r8
   2c054:	ldrdeq	r0, [r0], -r8
   2c058:	ldrdeq	r0, [r0], -r8
   2c05c:	ldrdeq	r0, [r0], -r8
   2c060:	ldrdeq	r0, [r0], -r8
   2c064:	ldrdeq	r0, [r0], -r8
   2c068:	ldrdeq	r0, [r0], -r8
   2c06c:	ldrdeq	r0, [r0], -r8
   2c070:	ldrdeq	r0, [r0], -r8
   2c074:	ldrdeq	r0, [r0], -r8
   2c078:	ldrdeq	r0, [r0], -r8
   2c07c:	ldrdeq	r0, [r0], -r8
   2c080:	ldrdeq	r0, [r0], -r8
   2c084:	ldrdeq	r0, [r0], -r8
   2c088:	ldrdeq	r0, [r0], -r8
   2c08c:	ldrdeq	r0, [r0], -r8
   2c090:	ldrdeq	r0, [r0], -r8
   2c094:	andeq	r0, r0, r0, lsr r1
   2c098:	add	r4, r4, #1
   2c09c:	cmp	r4, r0
   2c0a0:	bcc	2bfa4 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x20>
   2c0a4:	mov	r0, r4
   2c0a8:	pop	{r4, r5, r6, sl, fp, pc}
   2c0ac:	mov	r0, #33	; 0x21
   2c0b0:	str	r0, [r5, #160]	; 0xa0
   2c0b4:	ldr	r0, [r5, #56]	; 0x38
   2c0b8:	ldr	r1, [r5, #192]	; 0xc0
   2c0bc:	ldr	r2, [r0, #56]	; 0x38
   2c0c0:	sub	r1, r1, r2
   2c0c4:	add	r1, r1, r4
   2c0c8:	str	r1, [r0, #60]	; 0x3c
   2c0cc:	ldr	r0, [r5, #8]
   2c0d0:	ldr	r1, [r0, #16]
   2c0d4:	bl	11724 <myhtml_token_attr_create@plt>
   2c0d8:	cmp	r0, #0
   2c0dc:	str	r0, [r5, #56]	; 0x38
   2c0e0:	addne	r4, r4, #1
   2c0e4:	movne	r0, r4
   2c0e8:	popne	{r4, r5, r6, sl, fp, pc}
   2c0ec:	b	2c190 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x20c>
   2c0f0:	ldr	r1, [r5, #56]	; 0x38
   2c0f4:	ldr	r0, [r5, #192]	; 0xc0
   2c0f8:	ldr	r2, [r1, #56]	; 0x38
   2c0fc:	sub	r2, r0, r2
   2c100:	add	r2, r2, r4
   2c104:	str	r2, [r1, #60]	; 0x3c
   2c108:	ldr	r1, [r6, #48]	; 0x30
   2c10c:	tst	r1, #1
   2c110:	bne	2c140 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x1bc>
   2c114:	ldr	r1, [r6]
   2c118:	cmp	r1, #93	; 0x5d
   2c11c:	ldreq	r2, [r5, #180]	; 0xb4
   2c120:	tsteq	r2, #1
   2c124:	beq	2c140 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x1bc>
   2c128:	ldr	r0, [r5, #28]
   2c12c:	bl	117fc <myhtml_tag_get_by_id@plt>
   2c130:	ldr	r0, [r0, #12]
   2c134:	str	r0, [r5, #160]	; 0xa0
   2c138:	ldr	r0, [r5, #192]	; 0xc0
   2c13c:	b	2c148 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x1c4>
   2c140:	mov	r1, #0
   2c144:	str	r1, [r5, #160]	; 0xa0
   2c148:	ldr	r1, [r6, #32]
   2c14c:	mov	r2, r6
   2c150:	sub	r0, r0, r1
   2c154:	add	r0, r0, r4
   2c158:	add	r4, r4, #1
   2c15c:	add	r0, r0, #1
   2c160:	mov	r1, r4
   2c164:	str	r0, [r6, #36]	; 0x24
   2c168:	mov	r0, r5
   2c16c:	bl	110e8 <myhtml_queue_add@plt>
   2c170:	cmp	r0, #0
   2c174:	bne	2c190 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x20c>
   2c178:	ldr	r0, [r5, #8]
   2c17c:	ldr	r1, [r0, #16]
   2c180:	bl	11724 <myhtml_token_attr_create@plt>
   2c184:	cmp	r0, #0
   2c188:	str	r0, [r5, #56]	; 0x38
   2c18c:	bne	2c0a4 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x120>
   2c190:	mov	r0, #69	; 0x45
   2c194:	mov	r4, #0
   2c198:	str	r0, [r5, #160]	; 0xa0
   2c19c:	mov	r0, r4
   2c1a0:	pop	{r4, r5, r6, sl, fp, pc}

0002c1a4 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base>:
   2c1a4:	push	{r4, r5, r6, sl, fp, lr}
   2c1a8:	add	fp, sp, #16
   2c1ac:	mov	r5, r0
   2c1b0:	ldrb	r0, [r2, r3]
   2c1b4:	mov	r4, r3
   2c1b8:	sub	r0, r0, #9
   2c1bc:	cmp	r0, #53	; 0x35
   2c1c0:	bhi	2c2c0 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x11c>
   2c1c4:	mov	r6, r1
   2c1c8:	add	r1, pc, #4
   2c1cc:	ldr	r0, [r1, r0, lsl #2]
   2c1d0:	add	pc, r1, r0
   2c1d4:	ldrdeq	r0, [r0], -r8
   2c1d8:	ldrdeq	r0, [r0], -r8
   2c1dc:	andeq	r0, r0, ip, ror #1
   2c1e0:	ldrdeq	r0, [r0], -r8
   2c1e4:	ldrdeq	r0, [r0], -r8
   2c1e8:	andeq	r0, r0, ip, ror #1
   2c1ec:	andeq	r0, r0, ip, ror #1
   2c1f0:	andeq	r0, r0, ip, ror #1
   2c1f4:	andeq	r0, r0, ip, ror #1
   2c1f8:	andeq	r0, r0, ip, ror #1
   2c1fc:	andeq	r0, r0, ip, ror #1
   2c200:	andeq	r0, r0, ip, ror #1
   2c204:	andeq	r0, r0, ip, ror #1
   2c208:	andeq	r0, r0, ip, ror #1
   2c20c:	andeq	r0, r0, ip, ror #1
   2c210:	andeq	r0, r0, ip, ror #1
   2c214:	andeq	r0, r0, ip, ror #1
   2c218:	andeq	r0, r0, ip, ror #1
   2c21c:	andeq	r0, r0, ip, ror #1
   2c220:	andeq	r0, r0, ip, ror #1
   2c224:	andeq	r0, r0, ip, ror #1
   2c228:	andeq	r0, r0, ip, ror #1
   2c22c:	andeq	r0, r0, ip, ror #1
   2c230:	ldrdeq	r0, [r0], -r8
   2c234:	andeq	r0, r0, ip, ror #1
   2c238:	andeq	r0, r0, ip, ror #1
   2c23c:	andeq	r0, r0, ip, ror #1
   2c240:	andeq	r0, r0, ip, ror #1
   2c244:	andeq	r0, r0, ip, ror #1
   2c248:	andeq	r0, r0, ip, ror #1
   2c24c:	andeq	r0, r0, ip, ror #1
   2c250:	andeq	r0, r0, ip, ror #1
   2c254:	andeq	r0, r0, ip, ror #1
   2c258:	andeq	r0, r0, ip, ror #1
   2c25c:	andeq	r0, r0, ip, ror #1
   2c260:	andeq	r0, r0, ip, ror #1
   2c264:	andeq	r0, r0, ip, ror #1
   2c268:	andeq	r0, r0, ip, ror #1
   2c26c:	strdeq	r0, [r0], -ip
   2c270:	andeq	r0, r0, ip, ror #1
   2c274:	andeq	r0, r0, ip, ror #1
   2c278:	andeq	r0, r0, ip, ror #1
   2c27c:	andeq	r0, r0, ip, ror #1
   2c280:	andeq	r0, r0, ip, ror #1
   2c284:	andeq	r0, r0, ip, ror #1
   2c288:	andeq	r0, r0, ip, ror #1
   2c28c:	andeq	r0, r0, ip, ror #1
   2c290:	andeq	r0, r0, ip, ror #1
   2c294:	andeq	r0, r0, ip, ror #1
   2c298:	andeq	r0, r0, ip, ror #1
   2c29c:	andeq	r0, r0, ip, ror #1
   2c2a0:	andeq	r0, r0, ip, ror #1
   2c2a4:	andeq	r0, r0, ip, ror #1
   2c2a8:	andeq	r0, r0, r0, lsl r1
   2c2ac:	mov	r0, #33	; 0x21
   2c2b0:	add	r4, r4, #1
   2c2b4:	str	r0, [r5, #160]	; 0xa0
   2c2b8:	mov	r0, r4
   2c2bc:	pop	{r4, r5, r6, sl, fp, pc}
   2c2c0:	mov	r0, #33	; 0x21
   2c2c4:	str	r0, [r5, #160]	; 0xa0
   2c2c8:	mov	r0, r4
   2c2cc:	pop	{r4, r5, r6, sl, fp, pc}
   2c2d0:	mov	r0, #42	; 0x2a
   2c2d4:	add	r4, r4, #1
   2c2d8:	str	r0, [r5, #160]	; 0xa0
   2c2dc:	mov	r0, r4
   2c2e0:	pop	{r4, r5, r6, sl, fp, pc}
   2c2e4:	ldr	r1, [r6, #48]	; 0x30
   2c2e8:	mov	r0, #0
   2c2ec:	tst	r1, #1
   2c2f0:	bne	2c314 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x170>
   2c2f4:	ldr	r1, [r6]
   2c2f8:	cmp	r1, #93	; 0x5d
   2c2fc:	ldreq	r2, [r5, #180]	; 0xb4
   2c300:	tsteq	r2, #1
   2c304:	beq	2c314 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x170>
   2c308:	ldr	r0, [r5, #28]
   2c30c:	bl	117fc <myhtml_tag_get_by_id@plt>
   2c310:	ldr	r0, [r0, #12]
   2c314:	str	r0, [r5, #160]	; 0xa0
   2c318:	add	r4, r4, #1
   2c31c:	mov	r2, r6
   2c320:	ldr	r0, [r5, #192]	; 0xc0
   2c324:	ldr	r1, [r6, #32]
   2c328:	add	r0, r0, r4
   2c32c:	sub	r0, r0, r1
   2c330:	mov	r1, r4
   2c334:	str	r0, [r6, #36]	; 0x24
   2c338:	mov	r0, r5
   2c33c:	bl	110e8 <myhtml_queue_add@plt>
   2c340:	cmp	r0, #0
   2c344:	movne	r0, #69	; 0x45
   2c348:	movne	r4, #0
   2c34c:	strne	r0, [r5, #160]	; 0xa0
   2c350:	movne	r0, r4
   2c354:	popne	{r4, r5, r6, sl, fp, pc}
   2c358:	mov	r0, r4
   2c35c:	pop	{r4, r5, r6, sl, fp, pc}

0002c360 <myhtml_tokenizer_state_comment_start@@Base>:
   2c360:	push	{r4, r5, r6, r7, fp, lr}
   2c364:	add	fp, sp, #16
   2c368:	mov	r4, r0
   2c36c:	mov	r0, #2
   2c370:	str	r0, [r1]
   2c374:	ldrb	r0, [r2, r3]
   2c378:	cmp	r0, #45	; 0x2d
   2c37c:	beq	2c3e0 <myhtml_tokenizer_state_comment_start@@Base+0x80>
   2c380:	cmp	r0, #62	; 0x3e
   2c384:	bne	2c3f4 <myhtml_tokenizer_state_comment_start@@Base+0x94>
   2c388:	mov	r5, #0
   2c38c:	ldr	r0, [r4, #192]	; 0xc0
   2c390:	mov	r6, r1
   2c394:	add	r7, r3, #1
   2c398:	str	r5, [r1, #28]
   2c39c:	mov	r2, r6
   2c3a0:	ldr	r1, [r1, #32]
   2c3a4:	add	r0, r0, r7
   2c3a8:	sub	r0, r0, r1
   2c3ac:	mov	r1, r7
   2c3b0:	str	r0, [r6, #36]	; 0x24
   2c3b4:	mov	r0, r4
   2c3b8:	bl	110e8 <myhtml_queue_add@plt>
   2c3bc:	cmp	r0, #0
   2c3c0:	movne	r0, #69	; 0x45
   2c3c4:	strne	r0, [r4, #160]	; 0xa0
   2c3c8:	movne	r0, r5
   2c3cc:	popne	{r4, r5, r6, r7, fp, pc}
   2c3d0:	mov	r0, #0
   2c3d4:	str	r0, [r4, #160]	; 0xa0
   2c3d8:	mov	r0, r7
   2c3dc:	pop	{r4, r5, r6, r7, fp, pc}
   2c3e0:	mov	r0, #46	; 0x2e
   2c3e4:	add	r5, r3, #1
   2c3e8:	str	r0, [r4, #160]	; 0xa0
   2c3ec:	mov	r0, r5
   2c3f0:	pop	{r4, r5, r6, r7, fp, pc}
   2c3f4:	mov	r0, #47	; 0x2f
   2c3f8:	add	r5, r3, #1
   2c3fc:	str	r0, [r4, #160]	; 0xa0
   2c400:	mov	r0, r5
   2c404:	pop	{r4, r5, r6, r7, fp, pc}

0002c408 <myhtml_tokenizer_state_comment_start_dash@@Base>:
   2c408:	push	{r4, r5, r6, r7, fp, lr}
   2c40c:	add	fp, sp, #16
   2c410:	mov	r4, r0
   2c414:	mov	r0, #2
   2c418:	str	r0, [r1]
   2c41c:	ldrb	r0, [r2, r3]
   2c420:	cmp	r0, #45	; 0x2d
   2c424:	beq	2c488 <myhtml_tokenizer_state_comment_start_dash@@Base+0x80>
   2c428:	cmp	r0, #62	; 0x3e
   2c42c:	bne	2c49c <myhtml_tokenizer_state_comment_start_dash@@Base+0x94>
   2c430:	mov	r5, #0
   2c434:	ldr	r0, [r4, #192]	; 0xc0
   2c438:	mov	r6, r1
   2c43c:	add	r7, r3, #1
   2c440:	str	r5, [r1, #28]
   2c444:	mov	r2, r6
   2c448:	ldr	r1, [r1, #32]
   2c44c:	add	r0, r0, r7
   2c450:	sub	r0, r0, r1
   2c454:	mov	r1, r7
   2c458:	str	r0, [r6, #36]	; 0x24
   2c45c:	mov	r0, r4
   2c460:	bl	110e8 <myhtml_queue_add@plt>
   2c464:	cmp	r0, #0
   2c468:	movne	r0, #69	; 0x45
   2c46c:	strne	r0, [r4, #160]	; 0xa0
   2c470:	movne	r0, r5
   2c474:	popne	{r4, r5, r6, r7, fp, pc}
   2c478:	mov	r0, #0
   2c47c:	str	r0, [r4, #160]	; 0xa0
   2c480:	mov	r0, r7
   2c484:	pop	{r4, r5, r6, r7, fp, pc}
   2c488:	mov	r0, #49	; 0x31
   2c48c:	add	r5, r3, #1
   2c490:	str	r0, [r4, #160]	; 0xa0
   2c494:	mov	r0, r5
   2c498:	pop	{r4, r5, r6, r7, fp, pc}
   2c49c:	mov	r0, #47	; 0x2f
   2c4a0:	add	r5, r3, #1
   2c4a4:	str	r0, [r4, #160]	; 0xa0
   2c4a8:	mov	r0, r5
   2c4ac:	pop	{r4, r5, r6, r7, fp, pc}

0002c4b0 <myhtml_tokenizer_state_comment@@Base>:
   2c4b0:	mov	ip, r3
   2c4b4:	mov	r3, #2
   2c4b8:	str	r3, [r1]
   2c4bc:	ldr	r1, [sp]
   2c4c0:	cmp	ip, r1
   2c4c4:	bcc	2c4dc <myhtml_tokenizer_state_comment@@Base+0x2c>
   2c4c8:	mov	r0, ip
   2c4cc:	bx	lr
   2c4d0:	add	ip, ip, #1
   2c4d4:	cmp	ip, r1
   2c4d8:	bcs	2c4c8 <myhtml_tokenizer_state_comment@@Base+0x18>
   2c4dc:	ldrb	r3, [r2, ip]
   2c4e0:	cmp	r3, #45	; 0x2d
   2c4e4:	bne	2c4d0 <myhtml_tokenizer_state_comment@@Base+0x20>
   2c4e8:	mov	r1, #48	; 0x30
   2c4ec:	add	ip, ip, #1
   2c4f0:	str	r1, [r0, #160]	; 0xa0
   2c4f4:	mov	r0, ip
   2c4f8:	bx	lr

0002c4fc <myhtml_tokenizer_state_comment_end_dash@@Base>:
   2c4fc:	ldrb	r1, [r2, r3]
   2c500:	mov	r2, #47	; 0x2f
   2c504:	cmp	r1, #45	; 0x2d
   2c508:	movweq	r2, #49	; 0x31
   2c50c:	str	r2, [r0, #160]	; 0xa0
   2c510:	add	r0, r3, #1
   2c514:	bx	lr

0002c518 <myhtml_tokenizer_state_comment_end@@Base>:
   2c518:	push	{r4, r5, r6, r7, fp, lr}
   2c51c:	add	fp, sp, #16
   2c520:	mov	r4, r0
   2c524:	ldrb	r0, [r2, r3]
   2c528:	cmp	r0, #33	; 0x21
   2c52c:	beq	2c594 <myhtml_tokenizer_state_comment_end@@Base+0x7c>
   2c530:	cmp	r0, #62	; 0x3e
   2c534:	bne	2c5a8 <myhtml_tokenizer_state_comment_end@@Base+0x90>
   2c538:	mov	r6, r1
   2c53c:	ldr	r0, [r4, #192]	; 0xc0
   2c540:	add	r7, r3, #1
   2c544:	ldr	r2, [r6, #24]
   2c548:	ldr	r5, [r6, #32]
   2c54c:	add	r1, r0, r7
   2c550:	add	r0, r0, r3
   2c554:	sub	r1, r1, r5
   2c558:	sub	r0, r0, r2
   2c55c:	mov	r2, r6
   2c560:	mov	r5, #0
   2c564:	str	r1, [r6, #36]	; 0x24
   2c568:	cmp	r0, #1
   2c56c:	mov	r1, #0
   2c570:	subhi	r1, r0, #2
   2c574:	mov	r0, r4
   2c578:	str	r1, [r6, #28]
   2c57c:	mov	r1, r7
   2c580:	bl	110e8 <myhtml_queue_add@plt>
   2c584:	cmp	r0, #0
   2c588:	beq	2c5c4 <myhtml_tokenizer_state_comment_end@@Base+0xac>
   2c58c:	mov	r0, #69	; 0x45
   2c590:	b	2c5b8 <myhtml_tokenizer_state_comment_end@@Base+0xa0>
   2c594:	mov	r0, #50	; 0x32
   2c598:	add	r5, r3, #1
   2c59c:	str	r0, [r4, #160]	; 0xa0
   2c5a0:	mov	r0, r5
   2c5a4:	pop	{r4, r5, r6, r7, fp, pc}
   2c5a8:	add	r5, r3, #1
   2c5ac:	cmp	r0, #45	; 0x2d
   2c5b0:	beq	2c5bc <myhtml_tokenizer_state_comment_end@@Base+0xa4>
   2c5b4:	mov	r0, #47	; 0x2f
   2c5b8:	str	r0, [r4, #160]	; 0xa0
   2c5bc:	mov	r0, r5
   2c5c0:	pop	{r4, r5, r6, r7, fp, pc}
   2c5c4:	mov	r0, #0
   2c5c8:	str	r0, [r4, #160]	; 0xa0
   2c5cc:	mov	r0, r7
   2c5d0:	pop	{r4, r5, r6, r7, fp, pc}

0002c5d4 <myhtml_tokenizer_state_comment_end_bang@@Base>:
   2c5d4:	push	{r4, r5, r6, sl, fp, lr}
   2c5d8:	add	fp, sp, #16
   2c5dc:	mov	r6, r0
   2c5e0:	ldrb	r0, [r2, r3]
   2c5e4:	cmp	r0, #62	; 0x3e
   2c5e8:	bne	2c610 <myhtml_tokenizer_state_comment_end_bang@@Base+0x3c>
   2c5ec:	ldr	r0, [r6, #192]	; 0xc0
   2c5f0:	mov	r4, r1
   2c5f4:	ldr	r2, [r4, #24]
   2c5f8:	add	r1, r0, r3
   2c5fc:	sub	r5, r1, #3
   2c600:	cmp	r5, r2
   2c604:	bcs	2c62c <myhtml_tokenizer_state_comment_end_bang@@Base+0x58>
   2c608:	mov	r1, #0
   2c60c:	b	2c638 <myhtml_tokenizer_state_comment_end_bang@@Base+0x64>
   2c610:	cmp	r0, #45	; 0x2d
   2c614:	add	r5, r3, #1
   2c618:	movne	r0, #47	; 0x2f
   2c61c:	moveq	r0, #48	; 0x30
   2c620:	str	r0, [r6, #160]	; 0xa0
   2c624:	mov	r0, r5
   2c628:	pop	{r4, r5, r6, sl, fp, pc}
   2c62c:	mvn	r5, #2
   2c630:	sub	r2, r5, r2
   2c634:	add	r1, r2, r1
   2c638:	str	r1, [r4, #28]
   2c63c:	add	r5, r3, #1
   2c640:	mov	r2, r4
   2c644:	ldr	r1, [r4, #32]
   2c648:	add	r0, r0, r5
   2c64c:	sub	r0, r0, r1
   2c650:	mov	r1, r5
   2c654:	str	r0, [r4, #36]	; 0x24
   2c658:	mov	r0, r6
   2c65c:	bl	110e8 <myhtml_queue_add@plt>
   2c660:	cmp	r0, #0
   2c664:	movne	r0, #69	; 0x45
   2c668:	movne	r5, #0
   2c66c:	strne	r0, [r6, #160]	; 0xa0
   2c670:	movne	r0, r5
   2c674:	popne	{r4, r5, r6, sl, fp, pc}
   2c678:	mov	r0, #0
   2c67c:	str	r0, [r6, #160]	; 0xa0
   2c680:	mov	r0, r5
   2c684:	pop	{r4, r5, r6, sl, fp, pc}

0002c688 <myhtml_tokenizer_state_bogus_comment@@Base>:
   2c688:	push	{r4, r5, fp, lr}
   2c68c:	add	fp, sp, #8
   2c690:	mov	r5, r0
   2c694:	mov	r0, #2
   2c698:	mov	r4, r3
   2c69c:	str	r0, [r1]
   2c6a0:	ldr	r0, [r1, #48]	; 0x30
   2c6a4:	orr	r0, r0, #1024	; 0x400
   2c6a8:	str	r0, [r1, #48]	; 0x30
   2c6ac:	ldr	r0, [fp, #8]
   2c6b0:	cmp	r3, r0
   2c6b4:	bcs	2c6d4 <myhtml_tokenizer_state_bogus_comment@@Base+0x4c>
   2c6b8:	mov	r3, r1
   2c6bc:	ldrb	r1, [r2, r4]
   2c6c0:	cmp	r1, #62	; 0x3e
   2c6c4:	beq	2c6dc <myhtml_tokenizer_state_bogus_comment@@Base+0x54>
   2c6c8:	add	r4, r4, #1
   2c6cc:	cmp	r4, r0
   2c6d0:	bcc	2c6bc <myhtml_tokenizer_state_bogus_comment@@Base+0x34>
   2c6d4:	mov	r0, r4
   2c6d8:	pop	{r4, r5, fp, pc}
   2c6dc:	ldr	r0, [r3, #24]
   2c6e0:	ldr	r2, [r5, #192]	; 0xc0
   2c6e4:	ldr	r1, [r3, #32]
   2c6e8:	sub	r0, r2, r0
   2c6ec:	add	r0, r0, r4
   2c6f0:	str	r0, [r3, #28]
   2c6f4:	sub	r0, r2, r1
   2c6f8:	mov	r2, r3
   2c6fc:	add	r0, r0, r4
   2c700:	add	r4, r4, #1
   2c704:	add	r0, r0, #1
   2c708:	mov	r1, r4
   2c70c:	str	r0, [r3, #36]	; 0x24
   2c710:	mov	r0, r5
   2c714:	bl	110e8 <myhtml_queue_add@plt>
   2c718:	cmp	r0, #0
   2c71c:	movne	r0, #69	; 0x45
   2c720:	movne	r4, #0
   2c724:	strne	r0, [r5, #160]	; 0xa0
   2c728:	movne	r0, r4
   2c72c:	popne	{r4, r5, fp, pc}
   2c730:	mov	r0, #0
   2c734:	str	r0, [r5, #160]	; 0xa0
   2c738:	mov	r0, r4
   2c73c:	pop	{r4, r5, fp, pc}

0002c740 <myhtml_tokenizer_state_parse_error_stop@@Base>:
   2c740:	movw	r1, #37164	; 0x912c
   2c744:	str	r1, [r0, #196]	; 0xc4
   2c748:	ldr	r0, [sp]
   2c74c:	bx	lr

0002c750 <myhtml_tokenizer_state_init@@Base>:
   2c750:	push	{r4, sl, fp, lr}
   2c754:	add	fp, sp, #8
   2c758:	mov	r4, r0
   2c75c:	movw	r0, #19604	; 0x4c94
   2c760:	bl	119ac <mycore_malloc@plt>
   2c764:	cmp	r0, #0
   2c768:	str	r0, [r4, #24]!
   2c76c:	movweq	r0, #37164	; 0x912c
   2c770:	popeq	{r4, sl, fp, pc}
   2c774:	ldr	r1, [pc, #2012]	; 2cf58 <myhtml_tokenizer_state_init@@Base+0x808>
   2c778:	ldr	r1, [pc, r1]
   2c77c:	str	r1, [r0]
   2c780:	ldr	r0, [r4]
   2c784:	ldr	r1, [pc, #2000]	; 2cf5c <myhtml_tokenizer_state_init@@Base+0x80c>
   2c788:	ldr	r1, [pc, r1]
   2c78c:	str	r1, [r0, #28]
   2c790:	ldr	r0, [r4]
   2c794:	ldr	r1, [pc, #1988]	; 2cf60 <myhtml_tokenizer_state_init@@Base+0x810>
   2c798:	ldr	r1, [pc, r1]
   2c79c:	str	r1, [r0, #36]	; 0x24
   2c7a0:	ldr	r0, [r4]
   2c7a4:	ldr	r1, [pc, #1976]	; 2cf64 <myhtml_tokenizer_state_init@@Base+0x814>
   2c7a8:	ldr	r1, [pc, r1]
   2c7ac:	str	r1, [r0, #32]
   2c7b0:	ldr	r0, [r4]
   2c7b4:	ldr	r1, [pc, #1964]	; 2cf68 <myhtml_tokenizer_state_init@@Base+0x818>
   2c7b8:	ldr	r1, [pc, r1]
   2c7bc:	str	r1, [r0, #168]	; 0xa8
   2c7c0:	ldr	r0, [r4]
   2c7c4:	ldr	r1, [pc, #1952]	; 2cf6c <myhtml_tokenizer_state_init@@Base+0x81c>
   2c7c8:	ldr	r1, [pc, r1]
   2c7cc:	str	r1, [r0, #176]	; 0xb0
   2c7d0:	ldr	r0, [r4]
   2c7d4:	ldr	r1, [pc, #1940]	; 2cf70 <myhtml_tokenizer_state_init@@Base+0x820>
   2c7d8:	ldr	r1, [pc, r1]
   2c7dc:	str	r1, [r0, #132]	; 0x84
   2c7e0:	ldr	r0, [r4]
   2c7e4:	ldr	r1, [pc, #1928]	; 2cf74 <myhtml_tokenizer_state_init@@Base+0x824>
   2c7e8:	ldr	r1, [pc, r1]
   2c7ec:	str	r1, [r0, #136]	; 0x88
   2c7f0:	ldr	r0, [r4]
   2c7f4:	ldr	r1, [pc, #1916]	; 2cf78 <myhtml_tokenizer_state_init@@Base+0x828>
   2c7f8:	ldr	r1, [pc, r1]
   2c7fc:	str	r1, [r0, #140]	; 0x8c
   2c800:	ldr	r0, [r4]
   2c804:	ldr	r1, [pc, #1904]	; 2cf7c <myhtml_tokenizer_state_init@@Base+0x82c>
   2c808:	ldr	r1, [pc, r1]
   2c80c:	str	r1, [r0, #144]	; 0x90
   2c810:	ldr	r0, [r4]
   2c814:	ldr	r1, [pc, #1892]	; 2cf80 <myhtml_tokenizer_state_init@@Base+0x830>
   2c818:	ldr	r1, [pc, r1]
   2c81c:	str	r1, [r0, #164]	; 0xa4
   2c820:	ldr	r0, [r4]
   2c824:	ldr	r1, [pc, #1880]	; 2cf84 <myhtml_tokenizer_state_init@@Base+0x834>
   2c828:	ldr	r1, [pc, r1]
   2c82c:	str	r1, [r0, #148]	; 0x94
   2c830:	ldr	r0, [r4]
   2c834:	ldr	r1, [pc, #1868]	; 2cf88 <myhtml_tokenizer_state_init@@Base+0x838>
   2c838:	ldr	r1, [pc, r1]
   2c83c:	str	r1, [r0, #152]	; 0x98
   2c840:	ldr	r0, [r4]
   2c844:	ldr	r1, [pc, #1856]	; 2cf8c <myhtml_tokenizer_state_init@@Base+0x83c>
   2c848:	ldr	r1, [pc, r1]
   2c84c:	str	r1, [r0, #156]	; 0x9c
   2c850:	ldr	r0, [r4]
   2c854:	ldr	r1, [pc, #1844]	; 2cf90 <myhtml_tokenizer_state_init@@Base+0x840>
   2c858:	ldr	r1, [pc, r1]
   2c85c:	str	r1, [r0, #180]	; 0xb4
   2c860:	ldr	r0, [r4]
   2c864:	ldr	r1, [pc, #1832]	; 2cf94 <myhtml_tokenizer_state_init@@Base+0x844>
   2c868:	ldr	r1, [pc, r1]
   2c86c:	str	r1, [r0, #184]	; 0xb8
   2c870:	ldr	r0, [r4]
   2c874:	ldr	r1, [pc, #1820]	; 2cf98 <myhtml_tokenizer_state_init@@Base+0x848>
   2c878:	ldr	r1, [pc, r1]
   2c87c:	str	r1, [r0, #188]	; 0xbc
   2c880:	ldr	r0, [r4]
   2c884:	ldr	r1, [pc, #1808]	; 2cf9c <myhtml_tokenizer_state_init@@Base+0x84c>
   2c888:	ldr	r1, [pc, r1]
   2c88c:	str	r1, [r0, #196]	; 0xc4
   2c890:	ldr	r0, [r4]
   2c894:	ldr	r1, [pc, #1796]	; 2cfa0 <myhtml_tokenizer_state_init@@Base+0x850>
   2c898:	ldr	r1, [pc, r1]
   2c89c:	str	r1, [r0, #192]	; 0xc0
   2c8a0:	ldr	r0, [r4]
   2c8a4:	ldr	r1, [pc, #1784]	; 2cfa4 <myhtml_tokenizer_state_init@@Base+0x854>
   2c8a8:	ldr	r1, [pc, r1]
   2c8ac:	str	r1, [r0, #200]	; 0xc8
   2c8b0:	ldr	r0, [r4]
   2c8b4:	ldr	r1, [pc, #1772]	; 2cfa8 <myhtml_tokenizer_state_init@@Base+0x858>
   2c8b8:	ldr	r1, [pc, r1]
   2c8bc:	str	r1, [r0, #172]	; 0xac
   2c8c0:	ldr	r0, [r4]
   2c8c4:	ldr	r1, [pc, #1760]	; 2cfac <myhtml_tokenizer_state_init@@Base+0x85c>
   2c8c8:	ldr	r1, [pc, r1]
   2c8cc:	str	r1, [r0, #268]	; 0x10c
   2c8d0:	ldr	r0, [r4]
   2c8d4:	ldr	r1, [pc, #1748]	; 2cfb0 <myhtml_tokenizer_state_init@@Base+0x860>
   2c8d8:	ldr	r1, [pc, r1]
   2c8dc:	str	r1, [r0, #8]
   2c8e0:	ldr	r0, [r4]
   2c8e4:	ldr	r1, [pc, #1736]	; 2cfb4 <myhtml_tokenizer_state_init@@Base+0x864>
   2c8e8:	ldr	r1, [pc, r1]
   2c8ec:	str	r1, [r0, #40]	; 0x28
   2c8f0:	ldr	r0, [r4]
   2c8f4:	ldr	r1, [pc, #1724]	; 2cfb8 <myhtml_tokenizer_state_init@@Base+0x868>
   2c8f8:	ldr	r1, [pc, r1]
   2c8fc:	str	r1, [r0, #44]	; 0x2c
   2c900:	ldr	r0, [r4]
   2c904:	ldr	r1, [pc, #1712]	; 2cfbc <myhtml_tokenizer_state_init@@Base+0x86c>
   2c908:	ldr	r1, [pc, r1]
   2c90c:	str	r1, [r0, #48]	; 0x30
   2c910:	ldr	r0, [r4]
   2c914:	ldr	r1, [pc, #1700]	; 2cfc0 <myhtml_tokenizer_state_init@@Base+0x870>
   2c918:	ldr	r1, [pc, r1]
   2c91c:	str	r1, [r0, #16]
   2c920:	ldr	r0, [r4]
   2c924:	ldr	r1, [pc, #1688]	; 2cfc4 <myhtml_tokenizer_state_init@@Base+0x874>
   2c928:	ldr	r1, [pc, r1]
   2c92c:	str	r1, [r0, #52]	; 0x34
   2c930:	ldr	r0, [r4]
   2c934:	ldr	r1, [pc, #1676]	; 2cfc8 <myhtml_tokenizer_state_init@@Base+0x878>
   2c938:	ldr	r1, [pc, r1]
   2c93c:	str	r1, [r0, #56]	; 0x38
   2c940:	ldr	r0, [r4]
   2c944:	ldr	r1, [pc, #1664]	; 2cfcc <myhtml_tokenizer_state_init@@Base+0x87c>
   2c948:	ldr	r1, [pc, r1]
   2c94c:	str	r1, [r0, #60]	; 0x3c
   2c950:	ldr	r0, [r4]
   2c954:	ldr	r1, [pc, #1652]	; 2cfd0 <myhtml_tokenizer_state_init@@Base+0x880>
   2c958:	ldr	r1, [pc, r1]
   2c95c:	str	r1, [r0, #24]
   2c960:	ldr	r0, [r4]
   2c964:	ldr	r1, [pc, #1640]	; 2cfd4 <myhtml_tokenizer_state_init@@Base+0x884>
   2c968:	ldr	r1, [pc, r1]
   2c96c:	str	r1, [r0, #204]	; 0xcc
   2c970:	ldr	r0, [r4]
   2c974:	ldr	r1, [pc, #1628]	; 2cfd8 <myhtml_tokenizer_state_init@@Base+0x888>
   2c978:	ldr	r1, [pc, r1]
   2c97c:	str	r1, [r0, #208]	; 0xd0
   2c980:	ldr	r0, [r4]
   2c984:	ldr	r1, [pc, #1616]	; 2cfdc <myhtml_tokenizer_state_init@@Base+0x88c>
   2c988:	ldr	r1, [pc, r1]
   2c98c:	str	r1, [r0, #212]	; 0xd4
   2c990:	ldr	r0, [r4]
   2c994:	ldr	r1, [pc, #1604]	; 2cfe0 <myhtml_tokenizer_state_init@@Base+0x890>
   2c998:	ldr	r1, [pc, r1]
   2c99c:	str	r1, [r0, #216]	; 0xd8
   2c9a0:	ldr	r0, [r4]
   2c9a4:	ldr	r1, [pc, #1592]	; 2cfe4 <myhtml_tokenizer_state_init@@Base+0x894>
   2c9a8:	ldr	r1, [pc, r1]
   2c9ac:	str	r1, [r0, #272]	; 0x110
   2c9b0:	ldr	r0, [r4]
   2c9b4:	ldr	r1, [pc, #1580]	; 2cfe8 <myhtml_tokenizer_state_init@@Base+0x898>
   2c9b8:	ldr	r1, [pc, r1]
   2c9bc:	str	r1, [r0, #224]	; 0xe0
   2c9c0:	ldr	r0, [r4]
   2c9c4:	ldr	r1, [pc, #1568]	; 2cfec <myhtml_tokenizer_state_init@@Base+0x89c>
   2c9c8:	ldr	r1, [pc, r1]
   2c9cc:	str	r1, [r0, #228]	; 0xe4
   2c9d0:	ldr	r0, [r4]
   2c9d4:	ldr	r1, [pc, #1556]	; 2cff0 <myhtml_tokenizer_state_init@@Base+0x8a0>
   2c9d8:	ldr	r1, [pc, r1]
   2c9dc:	str	r1, [r0, #232]	; 0xe8
   2c9e0:	ldr	r0, [r4]
   2c9e4:	ldr	r1, [pc, #1544]	; 2cff4 <myhtml_tokenizer_state_init@@Base+0x8a4>
   2c9e8:	ldr	r1, [pc, r1]
   2c9ec:	str	r1, [r0, #236]	; 0xec
   2c9f0:	ldr	r0, [r4]
   2c9f4:	ldr	r1, [pc, #1532]	; 2cff8 <myhtml_tokenizer_state_init@@Base+0x8a8>
   2c9f8:	ldr	r1, [pc, r1]
   2c9fc:	str	r1, [r0, #252]	; 0xfc
   2ca00:	ldr	r0, [r4]
   2ca04:	ldr	r1, [pc, #1520]	; 2cffc <myhtml_tokenizer_state_init@@Base+0x8ac>
   2ca08:	ldr	r1, [pc, r1]
   2ca0c:	str	r1, [r0, #256]	; 0x100
   2ca10:	ldr	r0, [r4]
   2ca14:	ldr	r1, [pc, #1508]	; 2d000 <myhtml_tokenizer_state_init@@Base+0x8b0>
   2ca18:	ldr	r1, [pc, r1]
   2ca1c:	str	r1, [r0, #260]	; 0x104
   2ca20:	ldr	r0, [r4]
   2ca24:	ldr	r1, [pc, #1496]	; 2d004 <myhtml_tokenizer_state_init@@Base+0x8b4>
   2ca28:	ldr	r1, [pc, r1]
   2ca2c:	str	r1, [r0, #264]	; 0x108
   2ca30:	ldr	r0, [r4]
   2ca34:	ldr	r1, [pc, #1484]	; 2d008 <myhtml_tokenizer_state_init@@Base+0x8b8>
   2ca38:	ldr	r1, [pc, r1]
   2ca3c:	str	r1, [r0, #20]
   2ca40:	ldr	r0, [r4]
   2ca44:	ldr	r1, [pc, #1472]	; 2d00c <myhtml_tokenizer_state_init@@Base+0x8bc>
   2ca48:	ldr	r1, [pc, r1]
   2ca4c:	str	r1, [r0, #64]	; 0x40
   2ca50:	ldr	r0, [r4]
   2ca54:	ldr	r1, [pc, #1460]	; 2d010 <myhtml_tokenizer_state_init@@Base+0x8c0>
   2ca58:	ldr	r1, [pc, r1]
   2ca5c:	str	r1, [r0, #68]	; 0x44
   2ca60:	ldr	r0, [r4]
   2ca64:	ldr	r1, [pc, #1448]	; 2d014 <myhtml_tokenizer_state_init@@Base+0x8c4>
   2ca68:	ldr	r1, [pc, r1]
   2ca6c:	str	r1, [r0, #72]	; 0x48
   2ca70:	ldr	r0, [r4]
   2ca74:	ldr	r1, [pc, #1436]	; 2d018 <myhtml_tokenizer_state_init@@Base+0x8c8>
   2ca78:	ldr	r1, [pc, r1]
   2ca7c:	str	r1, [r0, #76]	; 0x4c
   2ca80:	ldr	r0, [r4]
   2ca84:	ldr	r1, [pc, #1424]	; 2d01c <myhtml_tokenizer_state_init@@Base+0x8cc>
   2ca88:	ldr	r1, [pc, r1]
   2ca8c:	str	r1, [r0, #80]	; 0x50
   2ca90:	ldr	r0, [r4]
   2ca94:	ldr	r1, [pc, #1412]	; 2d020 <myhtml_tokenizer_state_init@@Base+0x8d0>
   2ca98:	ldr	r1, [pc, r1]
   2ca9c:	str	r1, [r0, #84]	; 0x54
   2caa0:	ldr	r0, [r4]
   2caa4:	ldr	r1, [pc, #1400]	; 2d024 <myhtml_tokenizer_state_init@@Base+0x8d4>
   2caa8:	ldr	r1, [pc, r1]
   2caac:	str	r1, [r0, #88]	; 0x58
   2cab0:	ldr	r0, [r4]
   2cab4:	ldr	r1, [pc, #1388]	; 2d028 <myhtml_tokenizer_state_init@@Base+0x8d8>
   2cab8:	ldr	r1, [pc, r1]
   2cabc:	str	r1, [r0, #92]	; 0x5c
   2cac0:	ldr	r0, [r4]
   2cac4:	ldr	r1, [pc, #1376]	; 2d02c <myhtml_tokenizer_state_init@@Base+0x8dc>
   2cac8:	ldr	r1, [pc, r1]
   2cacc:	str	r1, [r0, #96]	; 0x60
   2cad0:	ldr	r0, [r4]
   2cad4:	ldr	r1, [pc, #1364]	; 2d030 <myhtml_tokenizer_state_init@@Base+0x8e0>
   2cad8:	ldr	r1, [pc, r1]
   2cadc:	str	r1, [r0, #100]	; 0x64
   2cae0:	ldr	r0, [r4]
   2cae4:	ldr	r1, [pc, #1352]	; 2d034 <myhtml_tokenizer_state_init@@Base+0x8e4>
   2cae8:	ldr	r1, [pc, r1]
   2caec:	str	r1, [r0, #104]	; 0x68
   2caf0:	ldr	r0, [r4]
   2caf4:	ldr	r1, [pc, #1340]	; 2d038 <myhtml_tokenizer_state_init@@Base+0x8e8>
   2caf8:	ldr	r1, [pc, r1]
   2cafc:	str	r1, [r0, #108]	; 0x6c
   2cb00:	ldr	r0, [r4]
   2cb04:	ldr	r1, [pc, #1328]	; 2d03c <myhtml_tokenizer_state_init@@Base+0x8ec>
   2cb08:	ldr	r1, [pc, r1]
   2cb0c:	str	r1, [r0, #112]	; 0x70
   2cb10:	ldr	r0, [r4]
   2cb14:	ldr	r1, [pc, #1316]	; 2d040 <myhtml_tokenizer_state_init@@Base+0x8f0>
   2cb18:	ldr	r1, [pc, r1]
   2cb1c:	str	r1, [r0, #116]	; 0x74
   2cb20:	ldr	r0, [r4]
   2cb24:	ldr	r1, [pc, #1304]	; 2d044 <myhtml_tokenizer_state_init@@Base+0x8f4>
   2cb28:	ldr	r1, [pc, r1]
   2cb2c:	str	r1, [r0, #120]	; 0x78
   2cb30:	ldr	r0, [r4]
   2cb34:	ldr	r1, [pc, #1292]	; 2d048 <myhtml_tokenizer_state_init@@Base+0x8f8>
   2cb38:	ldr	r1, [pc, r1]
   2cb3c:	str	r1, [r0, #124]	; 0x7c
   2cb40:	ldr	r0, [r4]
   2cb44:	ldr	r1, [pc, #1280]	; 2d04c <myhtml_tokenizer_state_init@@Base+0x8fc>
   2cb48:	ldr	r1, [pc, r1]
   2cb4c:	str	r1, [r0, #128]	; 0x80
   2cb50:	ldr	r0, [r4]
   2cb54:	ldr	r1, [pc, #1268]	; 2d050 <myhtml_tokenizer_state_init@@Base+0x900>
   2cb58:	ldr	r1, [pc, r1]
   2cb5c:	str	r1, [r0, #276]	; 0x114
   2cb60:	ldr	r0, [r4]
   2cb64:	ldr	r1, [pc, #1256]	; 2d054 <myhtml_tokenizer_state_init@@Base+0x904>
   2cb68:	ldr	r1, [pc, r1]
   2cb6c:	str	r1, [r0, #280]	; 0x118
   2cb70:	ldr	r0, [r4]
   2cb74:	ldr	r1, [pc, #1244]	; 2d058 <myhtml_tokenizer_state_init@@Base+0x908>
   2cb78:	ldr	r1, [pc, r1]
   2cb7c:	str	r1, [r0, #308]	; 0x134
   2cb80:	ldr	r0, [r4]
   2cb84:	ldr	r1, [pc, #1232]	; 2d05c <myhtml_tokenizer_state_init@@Base+0x90c>
   2cb88:	ldr	r1, [pc, r1]
   2cb8c:	str	r1, [r0, #316]	; 0x13c
   2cb90:	ldr	r0, [r4]
   2cb94:	ldr	r1, [pc, #1220]	; 2d060 <myhtml_tokenizer_state_init@@Base+0x910>
   2cb98:	ldr	r1, [pc, r1]
   2cb9c:	str	r1, [r0, #312]	; 0x138
   2cba0:	ldr	r0, [r4]
   2cba4:	ldr	r1, [pc, #1208]	; 2d064 <myhtml_tokenizer_state_init@@Base+0x914>
   2cba8:	ldr	r1, [pc, r1]
   2cbac:	str	r1, [r0, #448]	; 0x1c0
   2cbb0:	ldr	r0, [r4]
   2cbb4:	ldr	r1, [pc, #1196]	; 2d068 <myhtml_tokenizer_state_init@@Base+0x918>
   2cbb8:	ldr	r1, [pc, r1]
   2cbbc:	str	r1, [r0, #456]	; 0x1c8
   2cbc0:	ldr	r0, [r4]
   2cbc4:	ldr	r1, [pc, #1184]	; 2d06c <myhtml_tokenizer_state_init@@Base+0x91c>
   2cbc8:	ldr	r1, [pc, r1]
   2cbcc:	str	r1, [r0, #412]	; 0x19c
   2cbd0:	ldr	r0, [r4]
   2cbd4:	ldr	r1, [pc, #1172]	; 2d070 <myhtml_tokenizer_state_init@@Base+0x920>
   2cbd8:	ldr	r1, [pc, r1]
   2cbdc:	str	r1, [r0, #416]	; 0x1a0
   2cbe0:	ldr	r0, [r4]
   2cbe4:	ldr	r1, [pc, #1160]	; 2d074 <myhtml_tokenizer_state_init@@Base+0x924>
   2cbe8:	ldr	r1, [pc, r1]
   2cbec:	str	r1, [r0, #420]	; 0x1a4
   2cbf0:	ldr	r0, [r4]
   2cbf4:	ldr	r1, [pc, #1148]	; 2d078 <myhtml_tokenizer_state_init@@Base+0x928>
   2cbf8:	ldr	r1, [pc, r1]
   2cbfc:	str	r1, [r0, #424]	; 0x1a8
   2cc00:	ldr	r0, [r4]
   2cc04:	ldr	r1, [pc, #1136]	; 2d07c <myhtml_tokenizer_state_init@@Base+0x92c>
   2cc08:	ldr	r1, [pc, r1]
   2cc0c:	str	r1, [r0, #428]	; 0x1ac
   2cc10:	ldr	r0, [r4]
   2cc14:	ldr	r1, [pc, #1124]	; 2d080 <myhtml_tokenizer_state_init@@Base+0x930>
   2cc18:	ldr	r1, [pc, r1]
   2cc1c:	str	r1, [r0, #432]	; 0x1b0
   2cc20:	ldr	r0, [r4]
   2cc24:	ldr	r1, [pc, #1112]	; 2d084 <myhtml_tokenizer_state_init@@Base+0x934>
   2cc28:	ldr	r1, [pc, r1]
   2cc2c:	str	r1, [r0, #436]	; 0x1b4
   2cc30:	ldr	r0, [r4]
   2cc34:	ldr	r1, [pc, #1100]	; 2d088 <myhtml_tokenizer_state_init@@Base+0x938>
   2cc38:	ldr	r1, [pc, r1]
   2cc3c:	str	r1, [r0, #444]	; 0x1bc
   2cc40:	ldr	r0, [r4]
   2cc44:	ldr	r1, [pc, #1088]	; 2d08c <myhtml_tokenizer_state_init@@Base+0x93c>
   2cc48:	ldr	r1, [pc, r1]
   2cc4c:	str	r1, [r0, #460]	; 0x1cc
   2cc50:	ldr	r0, [r4]
   2cc54:	ldr	r1, [pc, #1076]	; 2d090 <myhtml_tokenizer_state_init@@Base+0x940>
   2cc58:	ldr	r1, [pc, r1]
   2cc5c:	str	r1, [r0, #464]	; 0x1d0
   2cc60:	ldr	r0, [r4]
   2cc64:	ldr	r1, [pc, #1064]	; 2d094 <myhtml_tokenizer_state_init@@Base+0x944>
   2cc68:	ldr	r1, [pc, r1]
   2cc6c:	str	r1, [r0, #468]	; 0x1d4
   2cc70:	ldr	r0, [r4]
   2cc74:	ldr	r1, [pc, #1052]	; 2d098 <myhtml_tokenizer_state_init@@Base+0x948>
   2cc78:	ldr	r1, [pc, r1]
   2cc7c:	str	r1, [r0, #476]	; 0x1dc
   2cc80:	ldr	r0, [r4]
   2cc84:	ldr	r1, [pc, #1040]	; 2d09c <myhtml_tokenizer_state_init@@Base+0x94c>
   2cc88:	ldr	r1, [pc, r1]
   2cc8c:	str	r1, [r0, #472]	; 0x1d8
   2cc90:	ldr	r0, [r4]
   2cc94:	ldr	r1, [pc, #1028]	; 2d0a0 <myhtml_tokenizer_state_init@@Base+0x950>
   2cc98:	ldr	r1, [pc, r1]
   2cc9c:	str	r1, [r0, #480]	; 0x1e0
   2cca0:	ldr	r0, [r4]
   2cca4:	ldr	r1, [pc, #1016]	; 2d0a4 <myhtml_tokenizer_state_init@@Base+0x954>
   2cca8:	ldr	r1, [pc, r1]
   2ccac:	str	r1, [r0, #452]	; 0x1c4
   2ccb0:	ldr	r0, [r4]
   2ccb4:	ldr	r1, [pc, #1004]	; 2d0a8 <myhtml_tokenizer_state_init@@Base+0x958>
   2ccb8:	ldr	r1, [pc, r1]
   2ccbc:	str	r1, [r0, #548]	; 0x224
   2ccc0:	ldr	r0, [r4]
   2ccc4:	ldr	r1, [pc, #992]	; 2d0ac <myhtml_tokenizer_state_init@@Base+0x95c>
   2ccc8:	ldr	r1, [pc, r1]
   2cccc:	str	r1, [r0, #288]	; 0x120
   2ccd0:	ldr	r0, [r4]
   2ccd4:	ldr	r1, [pc, #980]	; 2d0b0 <myhtml_tokenizer_state_init@@Base+0x960>
   2ccd8:	ldr	r1, [pc, r1]
   2ccdc:	str	r1, [r0, #320]	; 0x140
   2cce0:	ldr	r0, [r4]
   2cce4:	ldr	r1, [pc, #968]	; 2d0b4 <myhtml_tokenizer_state_init@@Base+0x964>
   2cce8:	ldr	r1, [pc, r1]
   2ccec:	str	r1, [r0, #324]	; 0x144
   2ccf0:	ldr	r0, [r4]
   2ccf4:	ldr	r1, [pc, #956]	; 2d0b8 <myhtml_tokenizer_state_init@@Base+0x968>
   2ccf8:	ldr	r1, [pc, r1]
   2ccfc:	str	r1, [r0, #328]	; 0x148
   2cd00:	ldr	r0, [r4]
   2cd04:	ldr	r1, [pc, #944]	; 2d0bc <myhtml_tokenizer_state_init@@Base+0x96c>
   2cd08:	ldr	r1, [pc, r1]
   2cd0c:	str	r1, [r0, #296]	; 0x128
   2cd10:	ldr	r0, [r4]
   2cd14:	ldr	r1, [pc, #932]	; 2d0c0 <myhtml_tokenizer_state_init@@Base+0x970>
   2cd18:	ldr	r1, [pc, r1]
   2cd1c:	str	r1, [r0, #332]	; 0x14c
   2cd20:	ldr	r0, [r4]
   2cd24:	ldr	r1, [pc, #920]	; 2d0c4 <myhtml_tokenizer_state_init@@Base+0x974>
   2cd28:	ldr	r1, [pc, r1]
   2cd2c:	str	r1, [r0, #336]	; 0x150
   2cd30:	ldr	r0, [r4]
   2cd34:	ldr	r1, [pc, #908]	; 2d0c8 <myhtml_tokenizer_state_init@@Base+0x978>
   2cd38:	ldr	r1, [pc, r1]
   2cd3c:	str	r1, [r0, #340]	; 0x154
   2cd40:	ldr	r0, [r4]
   2cd44:	ldr	r1, [pc, #896]	; 2d0cc <myhtml_tokenizer_state_init@@Base+0x97c>
   2cd48:	ldr	r1, [pc, r1]
   2cd4c:	str	r1, [r0, #304]	; 0x130
   2cd50:	ldr	r0, [r4]
   2cd54:	ldr	r1, [pc, #884]	; 2d0d0 <myhtml_tokenizer_state_init@@Base+0x980>
   2cd58:	ldr	r1, [pc, r1]
   2cd5c:	str	r1, [r0, #484]	; 0x1e4
   2cd60:	ldr	r0, [r4]
   2cd64:	ldr	r1, [pc, #872]	; 2d0d4 <myhtml_tokenizer_state_init@@Base+0x984>
   2cd68:	ldr	r1, [pc, r1]
   2cd6c:	str	r1, [r0, #488]	; 0x1e8
   2cd70:	ldr	r0, [r4]
   2cd74:	ldr	r1, [pc, #860]	; 2d0d8 <myhtml_tokenizer_state_init@@Base+0x988>
   2cd78:	ldr	r1, [pc, r1]
   2cd7c:	str	r1, [r0, #492]	; 0x1ec
   2cd80:	ldr	r0, [r4]
   2cd84:	ldr	r1, [pc, #848]	; 2d0dc <myhtml_tokenizer_state_init@@Base+0x98c>
   2cd88:	ldr	r1, [pc, r1]
   2cd8c:	str	r1, [r0, #496]	; 0x1f0
   2cd90:	ldr	r0, [r4]
   2cd94:	ldr	r1, [pc, #836]	; 2d0e0 <myhtml_tokenizer_state_init@@Base+0x990>
   2cd98:	ldr	r1, [pc, r1]
   2cd9c:	str	r1, [r0, #552]	; 0x228
   2cda0:	ldr	r0, [r4]
   2cda4:	ldr	r1, [pc, #824]	; 2d0e4 <myhtml_tokenizer_state_init@@Base+0x994>
   2cda8:	ldr	r1, [pc, r1]
   2cdac:	str	r1, [r0, #504]	; 0x1f8
   2cdb0:	ldr	r0, [r4]
   2cdb4:	ldr	r1, [pc, #812]	; 2d0e8 <myhtml_tokenizer_state_init@@Base+0x998>
   2cdb8:	ldr	r1, [pc, r1]
   2cdbc:	str	r1, [r0, #508]	; 0x1fc
   2cdc0:	ldr	r0, [r4]
   2cdc4:	ldr	r1, [pc, #800]	; 2d0ec <myhtml_tokenizer_state_init@@Base+0x99c>
   2cdc8:	ldr	r1, [pc, r1]
   2cdcc:	str	r1, [r0, #512]	; 0x200
   2cdd0:	ldr	r0, [r4]
   2cdd4:	ldr	r1, [pc, #788]	; 2d0f0 <myhtml_tokenizer_state_init@@Base+0x9a0>
   2cdd8:	ldr	r1, [pc, r1]
   2cddc:	str	r1, [r0, #516]	; 0x204
   2cde0:	ldr	r0, [r4]
   2cde4:	ldr	r1, [pc, #776]	; 2d0f4 <myhtml_tokenizer_state_init@@Base+0x9a4>
   2cde8:	ldr	r1, [pc, r1]
   2cdec:	str	r1, [r0, #532]	; 0x214
   2cdf0:	ldr	r0, [r4]
   2cdf4:	ldr	r1, [pc, #764]	; 2d0f8 <myhtml_tokenizer_state_init@@Base+0x9a8>
   2cdf8:	ldr	r1, [pc, r1]
   2cdfc:	str	r1, [r0, #536]	; 0x218
   2ce00:	ldr	r0, [r4]
   2ce04:	ldr	r1, [pc, #752]	; 2d0fc <myhtml_tokenizer_state_init@@Base+0x9ac>
   2ce08:	ldr	r1, [pc, r1]
   2ce0c:	str	r1, [r0, #540]	; 0x21c
   2ce10:	ldr	r0, [r4]
   2ce14:	ldr	r1, [pc, #740]	; 2d100 <myhtml_tokenizer_state_init@@Base+0x9b0>
   2ce18:	ldr	r1, [pc, r1]
   2ce1c:	str	r1, [r0, #544]	; 0x220
   2ce20:	ldr	r0, [r4]
   2ce24:	ldr	r1, [pc, #728]	; 2d104 <myhtml_tokenizer_state_init@@Base+0x9b4>
   2ce28:	ldr	r1, [pc, r1]
   2ce2c:	str	r1, [r0, #300]	; 0x12c
   2ce30:	ldr	r0, [r4]
   2ce34:	ldr	r1, [pc, #716]	; 2d108 <myhtml_tokenizer_state_init@@Base+0x9b8>
   2ce38:	ldr	r1, [pc, r1]
   2ce3c:	str	r1, [r0, #344]	; 0x158
   2ce40:	ldr	r0, [r4]
   2ce44:	ldr	r1, [pc, #704]	; 2d10c <myhtml_tokenizer_state_init@@Base+0x9bc>
   2ce48:	ldr	r1, [pc, r1]
   2ce4c:	str	r1, [r0, #348]	; 0x15c
   2ce50:	ldr	r0, [r4]
   2ce54:	ldr	r1, [pc, #692]	; 2d110 <myhtml_tokenizer_state_init@@Base+0x9c0>
   2ce58:	ldr	r1, [pc, r1]
   2ce5c:	str	r1, [r0, #352]	; 0x160
   2ce60:	ldr	r0, [r4]
   2ce64:	ldr	r1, [pc, #680]	; 2d114 <myhtml_tokenizer_state_init@@Base+0x9c4>
   2ce68:	ldr	r1, [pc, r1]
   2ce6c:	str	r1, [r0, #356]	; 0x164
   2ce70:	ldr	r0, [r4]
   2ce74:	ldr	r1, [pc, #668]	; 2d118 <myhtml_tokenizer_state_init@@Base+0x9c8>
   2ce78:	ldr	r1, [pc, r1]
   2ce7c:	str	r1, [r0, #360]	; 0x168
   2ce80:	ldr	r0, [r4]
   2ce84:	ldr	r1, [pc, #656]	; 2d11c <myhtml_tokenizer_state_init@@Base+0x9cc>
   2ce88:	ldr	r1, [pc, r1]
   2ce8c:	str	r1, [r0, #364]	; 0x16c
   2ce90:	ldr	r0, [r4]
   2ce94:	ldr	r1, [pc, #644]	; 2d120 <myhtml_tokenizer_state_init@@Base+0x9d0>
   2ce98:	ldr	r1, [pc, r1]
   2ce9c:	str	r1, [r0, #368]	; 0x170
   2cea0:	ldr	r0, [r4]
   2cea4:	ldr	r1, [pc, #632]	; 2d124 <myhtml_tokenizer_state_init@@Base+0x9d4>
   2cea8:	ldr	r1, [pc, r1]
   2ceac:	str	r1, [r0, #372]	; 0x174
   2ceb0:	ldr	r0, [r4]
   2ceb4:	ldr	r1, [pc, #620]	; 2d128 <myhtml_tokenizer_state_init@@Base+0x9d8>
   2ceb8:	ldr	r1, [pc, r1]
   2cebc:	str	r1, [r0, #376]	; 0x178
   2cec0:	ldr	r0, [r4]
   2cec4:	ldr	r1, [pc, #608]	; 2d12c <myhtml_tokenizer_state_init@@Base+0x9dc>
   2cec8:	ldr	r1, [pc, r1]
   2cecc:	str	r1, [r0, #380]	; 0x17c
   2ced0:	ldr	r0, [r4]
   2ced4:	ldr	r1, [pc, #596]	; 2d130 <myhtml_tokenizer_state_init@@Base+0x9e0>
   2ced8:	ldr	r1, [pc, r1]
   2cedc:	str	r1, [r0, #384]	; 0x180
   2cee0:	ldr	r0, [r4]
   2cee4:	ldr	r1, [pc, #584]	; 2d134 <myhtml_tokenizer_state_init@@Base+0x9e4>
   2cee8:	ldr	r1, [pc, r1]
   2ceec:	str	r1, [r0, #388]	; 0x184
   2cef0:	ldr	r0, [r4]
   2cef4:	ldr	r1, [pc, #572]	; 2d138 <myhtml_tokenizer_state_init@@Base+0x9e8>
   2cef8:	ldr	r1, [pc, r1]
   2cefc:	str	r1, [r0, #392]	; 0x188
   2cf00:	ldr	r0, [r4]
   2cf04:	ldr	r1, [pc, #560]	; 2d13c <myhtml_tokenizer_state_init@@Base+0x9ec>
   2cf08:	ldr	r1, [pc, r1]
   2cf0c:	str	r1, [r0, #396]	; 0x18c
   2cf10:	ldr	r0, [r4]
   2cf14:	ldr	r1, [pc, #548]	; 2d140 <myhtml_tokenizer_state_init@@Base+0x9f0>
   2cf18:	ldr	r1, [pc, r1]
   2cf1c:	str	r1, [r0, #400]	; 0x190
   2cf20:	ldr	r0, [r4]
   2cf24:	ldr	r1, [pc, #536]	; 2d144 <myhtml_tokenizer_state_init@@Base+0x9f4>
   2cf28:	ldr	r1, [pc, r1]
   2cf2c:	str	r1, [r0, #404]	; 0x194
   2cf30:	ldr	r0, [r4]
   2cf34:	ldr	r1, [pc, #524]	; 2d148 <myhtml_tokenizer_state_init@@Base+0x9f8>
   2cf38:	ldr	r1, [pc, r1]
   2cf3c:	str	r1, [r0, #408]	; 0x198
   2cf40:	ldr	r0, [r4]
   2cf44:	ldr	r1, [pc, #512]	; 2d14c <myhtml_tokenizer_state_init@@Base+0x9fc>
   2cf48:	ldr	r1, [pc, r1]
   2cf4c:	str	r1, [r0, #556]	; 0x22c
   2cf50:	mov	r0, #0
   2cf54:	pop	{r4, sl, fp, pc}
   2cf58:	andeq	pc, lr, r0, lsr #28
   2cf5c:			; <UNDEFINED> instruction: 0x000effb0
   2cf60:	andeq	pc, lr, ip, asr pc	; <UNPREDICTABLE>
   2cf64:			; <UNDEFINED> instruction: 0x000effb8
   2cf68:	ldrdeq	pc, [lr], -r0
   2cf6c:	andeq	pc, lr, r0, lsr lr	; <UNPREDICTABLE>
   2cf70:	strdeq	pc, [lr], -ip
   2cf74:	andeq	pc, lr, r8, lsr #26
   2cf78:	andeq	pc, lr, r8, asr #30
   2cf7c:	andeq	pc, lr, r4, ror pc	; <UNPREDICTABLE>
   2cf80:	andeq	pc, lr, r0, lsl pc	; <UNPREDICTABLE>
   2cf84:	andeq	pc, lr, ip, ror #29
   2cf88:	andeq	pc, lr, r0, lsr #30
   2cf8c:	strdeq	pc, [lr], -ip
   2cf90:	andeq	pc, lr, r8, lsl pc	; <UNPREDICTABLE>
   2cf94:	strdeq	pc, [lr], -ip
   2cf98:	muleq	lr, r8, lr
   2cf9c:	andeq	pc, lr, ip, lsl #25
   2cfa0:	andeq	pc, lr, r0, lsr #26
   2cfa4:	strdeq	pc, [lr], -r4
   2cfa8:	andeq	pc, lr, r8, ror #25
   2cfac:	andeq	pc, lr, r4, lsl #30
   2cfb0:	ldrdeq	pc, [lr], -r4
   2cfb4:	andeq	pc, lr, r8, ror #25
   2cfb8:	andeq	pc, lr, ip, lsr ip	; <UNPREDICTABLE>
   2cfbc:	andeq	pc, lr, ip, asr #25
   2cfc0:	andeq	pc, lr, ip, ror #24
   2cfc4:	andeq	pc, lr, ip, asr #25
   2cfc8:	andeq	pc, lr, r8, lsr #24
   2cfcc:	andeq	pc, lr, ip, lsl lr	; <UNPREDICTABLE>
   2cfd0:	andeq	pc, lr, ip, asr lr	; <UNPREDICTABLE>
   2cfd4:	andeq	pc, lr, ip, lsr #25
   2cfd8:	andeq	pc, lr, r4, lsr #23
   2cfdc:	ldrdeq	pc, [lr], -r4
   2cfe0:	strdeq	pc, [lr], -ip
   2cfe4:	ldrdeq	pc, [lr], -ip
   2cfe8:	andeq	pc, lr, r4, lsl #24
   2cfec:	andeq	pc, lr, ip, lsr #25
   2cff0:			; <UNDEFINED> instruction: 0x000efcb0
   2cff4:	ldrdeq	pc, [lr], -ip
   2cff8:	andeq	pc, lr, ip, ror fp	; <UNPREDICTABLE>
   2cffc:	andeq	pc, lr, ip, lsl ip	; <UNPREDICTABLE>
   2d000:			; <UNDEFINED> instruction: 0x000efbb0
   2d004:	andeq	pc, lr, ip, lsl #24
   2d008:	andeq	pc, lr, ip, lsl #23
   2d00c:	andeq	pc, lr, r4, ror #23
   2d010:	muleq	lr, r0, fp
   2d014:	andeq	pc, lr, r4, lsl #26
   2d018:	andeq	pc, lr, ip, lsl #23
   2d01c:	ldrdeq	pc, [lr], -r8
   2d020:	andeq	pc, lr, r4, ror ip	; <UNPREDICTABLE>
   2d024:	muleq	lr, r0, fp
   2d028:	andeq	pc, lr, r0, lsr #23
   2d02c:	ldrdeq	pc, [lr], -r8
   2d030:	andeq	pc, lr, r4, asr #21
   2d034:	andeq	pc, lr, r0, asr #21
   2d038:	andeq	pc, lr, r8, lsr #22
   2d03c:	andeq	pc, lr, r8, asr #24
   2d040:	andeq	pc, lr, r8, lsr #20
   2d044:			; <UNDEFINED> instruction: 0x000efab0
   2d048:	muleq	lr, r4, sl
   2d04c:	ldrdeq	pc, [lr], -r0
   2d050:	andeq	pc, lr, r4, asr sl	; <UNPREDICTABLE>
   2d054:	andeq	pc, lr, r8, lsl #21
   2d058:	andeq	pc, lr, r0, lsr #21
   2d05c:	andeq	pc, lr, r0, lsl ip	; <UNPREDICTABLE>
   2d060:	andeq	pc, lr, r4, lsl #24
   2d064:	andeq	pc, lr, r4, lsr fp	; <UNPREDICTABLE>
   2d068:	andeq	pc, lr, r0, asr #22
   2d06c:	andeq	pc, lr, r4, lsr fp	; <UNPREDICTABLE>
   2d070:	andeq	pc, lr, ip, ror #22
   2d074:	andeq	pc, lr, ip, ror r9	; <UNPREDICTABLE>
   2d078:	andeq	pc, lr, r0, asr #21
   2d07c:	andeq	pc, lr, r4, lsr sl	; <UNPREDICTABLE>
   2d080:	andeq	pc, lr, ip, ror #21
   2d084:	andeq	pc, lr, r4, asr #19
   2d088:	muleq	lr, r4, sl
   2d08c:	andeq	pc, lr, ip, lsr #22
   2d090:	andeq	pc, lr, r8, lsl #19
   2d094:	andeq	pc, lr, r0, asr #20
   2d098:	andeq	pc, lr, ip, lsl r9	; <UNPREDICTABLE>
   2d09c:	andeq	pc, lr, r8, lsr #22
   2d0a0:	strdeq	pc, [lr], -r4
   2d0a4:	andeq	pc, lr, r4, asr #19
   2d0a8:	andeq	pc, lr, r8, asr #18
   2d0ac:	andeq	pc, lr, ip, lsl #21
   2d0b0:	andeq	pc, lr, ip, asr #17
   2d0b4:	andeq	pc, lr, r0, lsl #20
   2d0b8:	andeq	pc, lr, ip, asr #19
   2d0bc:	andeq	pc, lr, r4, ror r9	; <UNPREDICTABLE>
   2d0c0:			; <UNDEFINED> instruction: 0x000efab0
   2d0c4:	andeq	pc, lr, r8, asr #19
   2d0c8:	andeq	pc, lr, r4, lsl #19
   2d0cc:	andeq	pc, lr, r8, lsl #18
   2d0d0:	andeq	pc, lr, ip, asr #15
   2d0d4:			; <UNDEFINED> instruction: 0x000ef9b8
   2d0d8:			; <UNDEFINED> instruction: 0x000ef7b8
   2d0dc:			; <UNDEFINED> instruction: 0x000ef7bc
   2d0e0:			; <UNDEFINED> instruction: 0x000ef7b8
   2d0e4:	andeq	pc, lr, ip, ror #17
   2d0e8:	muleq	lr, r4, r9
   2d0ec:	andeq	pc, lr, r8, asr #15
   2d0f0:	andeq	pc, lr, r0, ror #19
   2d0f4:	andeq	pc, lr, r4, lsr #19
   2d0f8:	andeq	pc, lr, r8, asr #17
   2d0fc:	andeq	pc, lr, ip, ror r9	; <UNPREDICTABLE>
   2d100:	andeq	pc, lr, r0, asr r8	; <UNPREDICTABLE>
   2d104:	muleq	lr, r8, r7
   2d108:	andeq	pc, lr, r0, ror #16
   2d10c:	muleq	lr, ip, r8
   2d110:	andeq	pc, lr, r8, lsl #17
   2d114:	ldrdeq	pc, [lr], -r4
   2d118:	andeq	pc, lr, r4, lsr #15
   2d11c:	muleq	lr, r0, r6
   2d120:	andeq	pc, lr, r0, lsl r9	; <UNPREDICTABLE>
   2d124:	andeq	pc, lr, r0, lsr r8	; <UNPREDICTABLE>
   2d128:	andeq	pc, lr, r8, lsl #18
   2d12c:	muleq	lr, r0, r6
   2d130:	strdeq	pc, [lr], -r8
   2d134:	andeq	pc, lr, r8, lsl r8	; <UNPREDICTABLE>
   2d138:	andeq	pc, lr, r4, asr r7	; <UNPREDICTABLE>
   2d13c:	andeq	pc, lr, r0, asr #16
   2d140:	andeq	pc, lr, r0, lsr r7	; <UNPREDICTABLE>
   2d144:	andeq	pc, lr, r0, lsr #15
   2d148:	andeq	pc, lr, r4, lsr #13
   2d14c:	andeq	pc, lr, r8, asr #13

0002d150 <myhtml_tokenizer_state_destroy@@Base>:
   2d150:	ldr	r0, [r0, #24]
   2d154:	cmp	r0, #0
   2d158:	bxeq	lr
   2d15c:	b	11a9c <mycore_free@plt>

0002d160 <myhtml_tokenizer_state_doctype@@Base>:
   2d160:	mov	r1, #52	; 0x34
   2d164:	str	r1, [r0, #160]	; 0xa0
   2d168:	mov	r0, r3
   2d16c:	bx	lr

0002d170 <myhtml_tokenizer_state_before_doctype_name@@Base>:
   2d170:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2d174:	add	fp, sp, #24
   2d178:	mov	r4, r3
   2d17c:	mov	r8, r0
   2d180:	ldr	r0, [fp, #8]
   2d184:	mov	r3, r1
   2d188:	ldrb	r5, [r2, r4]
   2d18c:	sub	r7, r5, #9
   2d190:	cmp	r7, #23
   2d194:	bhi	2d1f4 <myhtml_tokenizer_state_before_doctype_name@@Base+0x84>
   2d198:	movw	r1, #27
   2d19c:	mov	r6, #1
   2d1a0:	movt	r1, #128	; 0x80
   2d1a4:	tst	r1, r6, lsl r7
   2d1a8:	beq	2d1f4 <myhtml_tokenizer_state_before_doctype_name@@Base+0x84>
   2d1ac:	cmp	r4, r0
   2d1b0:	bcs	2d1f4 <myhtml_tokenizer_state_before_doctype_name@@Base+0x84>
   2d1b4:	add	r4, r4, #1
   2d1b8:	mvn	r6, #8
   2d1bc:	mov	r7, #1
   2d1c0:	uxtab	r5, r6, r5
   2d1c4:	cmp	r5, #23
   2d1c8:	bls	2d1e4 <myhtml_tokenizer_state_before_doctype_name@@Base+0x74>
   2d1cc:	b	2d278 <myhtml_tokenizer_state_before_doctype_name@@Base+0x108>
   2d1d0:	ldrb	r5, [r2, r4]
   2d1d4:	add	r4, r4, #1
   2d1d8:	uxtab	r5, r6, r5
   2d1dc:	cmp	r5, #23
   2d1e0:	bhi	2d278 <myhtml_tokenizer_state_before_doctype_name@@Base+0x108>
   2d1e4:	tst	r1, r7, lsl r5
   2d1e8:	beq	2d278 <myhtml_tokenizer_state_before_doctype_name@@Base+0x108>
   2d1ec:	cmp	r4, r0
   2d1f0:	bcc	2d1d0 <myhtml_tokenizer_state_before_doctype_name@@Base+0x60>
   2d1f4:	cmp	r4, r0
   2d1f8:	bcs	2d284 <myhtml_tokenizer_state_before_doctype_name@@Base+0x114>
   2d1fc:	ldrb	r0, [r2, r4]
   2d200:	cmp	r0, #62	; 0x3e
   2d204:	bne	2d254 <myhtml_tokenizer_state_before_doctype_name@@Base+0xe4>
   2d208:	mov	r0, #1
   2d20c:	add	r4, r4, #1
   2d210:	mov	r2, r3
   2d214:	str	r0, [r8, #176]	; 0xb0
   2d218:	ldr	r0, [r8, #192]	; 0xc0
   2d21c:	ldr	r1, [r3, #32]
   2d220:	add	r0, r0, r4
   2d224:	sub	r0, r0, r1
   2d228:	mov	r1, r4
   2d22c:	str	r0, [r3, #36]	; 0x24
   2d230:	mov	r0, r8
   2d234:	bl	110e8 <myhtml_queue_add@plt>
   2d238:	cmp	r0, #0
   2d23c:	beq	2d28c <myhtml_tokenizer_state_before_doctype_name@@Base+0x11c>
   2d240:	mov	r0, #69	; 0x45
   2d244:	mov	r4, #0
   2d248:	str	r0, [r8, #160]	; 0xa0
   2d24c:	mov	r0, r4
   2d250:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d254:	ldr	r1, [r3, #40]	; 0x28
   2d258:	ldr	r0, [r8, #56]	; 0x38
   2d25c:	cmp	r1, #0
   2d260:	beq	2d2b4 <myhtml_tokenizer_state_before_doctype_name@@Base+0x144>
   2d264:	ldr	r1, [r3, #44]	; 0x2c
   2d268:	str	r0, [r1]
   2d26c:	str	r0, [r3, #44]	; 0x2c
   2d270:	str	r0, [r8, #56]	; 0x38
   2d274:	b	2d2c0 <myhtml_tokenizer_state_before_doctype_name@@Base+0x150>
   2d278:	sub	r4, r4, #1
   2d27c:	cmp	r4, r0
   2d280:	bcc	2d1fc <myhtml_tokenizer_state_before_doctype_name@@Base+0x8c>
   2d284:	mov	r0, r4
   2d288:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d28c:	ldr	r0, [r8, #8]
   2d290:	ldr	r1, [r0, #16]
   2d294:	bl	11724 <myhtml_token_attr_create@plt>
   2d298:	cmp	r0, #0
   2d29c:	str	r0, [r8, #56]	; 0x38
   2d2a0:	beq	2d240 <myhtml_tokenizer_state_before_doctype_name@@Base+0xd0>
   2d2a4:	mov	r0, #0
   2d2a8:	str	r0, [r8, #160]	; 0xa0
   2d2ac:	mov	r0, r4
   2d2b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d2b4:	str	r0, [r3, #40]	; 0x28
   2d2b8:	str	r0, [r3, #44]	; 0x2c
   2d2bc:	mov	r1, #0
   2d2c0:	mov	r2, #0
   2d2c4:	str	r2, [r0]
   2d2c8:	str	r1, [r0, #4]
   2d2cc:	ldr	r1, [r8, #192]	; 0xc0
   2d2d0:	ldr	r0, [r8, #56]	; 0x38
   2d2d4:	add	r1, r1, r4
   2d2d8:	str	r1, [r0, #48]	; 0x30
   2d2dc:	mov	r0, #53	; 0x35
   2d2e0:	str	r0, [r8, #160]	; 0xa0
   2d2e4:	mov	r0, r4
   2d2e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002d2ec <myhtml_tokenizer_state_doctype_name@@Base>:
   2d2ec:	push	{r4, r5, fp, lr}
   2d2f0:	add	fp, sp, #8
   2d2f4:	mov	r5, r0
   2d2f8:	ldr	r0, [fp, #8]
   2d2fc:	mov	r4, r3
   2d300:	cmp	r3, r0
   2d304:	bcs	2d40c <myhtml_tokenizer_state_doctype_name@@Base+0x120>
   2d308:	mov	ip, r1
   2d30c:	ldrb	r1, [r2, r4]
   2d310:	sub	r1, r1, #9
   2d314:	cmp	r1, #53	; 0x35
   2d318:	bhi	2d400 <myhtml_tokenizer_state_doctype_name@@Base+0x114>
   2d31c:	add	r3, pc, #4
   2d320:	ldr	r1, [r3, r1, lsl #2]
   2d324:	add	pc, r3, r1
   2d328:	andeq	r0, r0, ip, ror #1
   2d32c:	andeq	r0, r0, ip, ror #1
   2d330:	ldrdeq	r0, [r0], -r8
   2d334:	andeq	r0, r0, ip, ror #1
   2d338:	andeq	r0, r0, ip, ror #1
   2d33c:	ldrdeq	r0, [r0], -r8
   2d340:	ldrdeq	r0, [r0], -r8
   2d344:	ldrdeq	r0, [r0], -r8
   2d348:	ldrdeq	r0, [r0], -r8
   2d34c:	ldrdeq	r0, [r0], -r8
   2d350:	ldrdeq	r0, [r0], -r8
   2d354:	ldrdeq	r0, [r0], -r8
   2d358:	ldrdeq	r0, [r0], -r8
   2d35c:	ldrdeq	r0, [r0], -r8
   2d360:	ldrdeq	r0, [r0], -r8
   2d364:	ldrdeq	r0, [r0], -r8
   2d368:	ldrdeq	r0, [r0], -r8
   2d36c:	ldrdeq	r0, [r0], -r8
   2d370:	ldrdeq	r0, [r0], -r8
   2d374:	ldrdeq	r0, [r0], -r8
   2d378:	ldrdeq	r0, [r0], -r8
   2d37c:	ldrdeq	r0, [r0], -r8
   2d380:	ldrdeq	r0, [r0], -r8
   2d384:	andeq	r0, r0, ip, ror #1
   2d388:	ldrdeq	r0, [r0], -r8
   2d38c:	ldrdeq	r0, [r0], -r8
   2d390:	ldrdeq	r0, [r0], -r8
   2d394:	ldrdeq	r0, [r0], -r8
   2d398:	ldrdeq	r0, [r0], -r8
   2d39c:	ldrdeq	r0, [r0], -r8
   2d3a0:	ldrdeq	r0, [r0], -r8
   2d3a4:	ldrdeq	r0, [r0], -r8
   2d3a8:	ldrdeq	r0, [r0], -r8
   2d3ac:	ldrdeq	r0, [r0], -r8
   2d3b0:	ldrdeq	r0, [r0], -r8
   2d3b4:	ldrdeq	r0, [r0], -r8
   2d3b8:	ldrdeq	r0, [r0], -r8
   2d3bc:	ldrdeq	r0, [r0], -r8
   2d3c0:	ldrdeq	r0, [r0], -r8
   2d3c4:	ldrdeq	r0, [r0], -r8
   2d3c8:	ldrdeq	r0, [r0], -r8
   2d3cc:	ldrdeq	r0, [r0], -r8
   2d3d0:	ldrdeq	r0, [r0], -r8
   2d3d4:	ldrdeq	r0, [r0], -r8
   2d3d8:	ldrdeq	r0, [r0], -r8
   2d3dc:	ldrdeq	r0, [r0], -r8
   2d3e0:	ldrdeq	r0, [r0], -r8
   2d3e4:	ldrdeq	r0, [r0], -r8
   2d3e8:	ldrdeq	r0, [r0], -r8
   2d3ec:	ldrdeq	r0, [r0], -r8
   2d3f0:	ldrdeq	r0, [r0], -r8
   2d3f4:	ldrdeq	r0, [r0], -r8
   2d3f8:	ldrdeq	r0, [r0], -r8
   2d3fc:	andeq	r0, r0, r0, lsr r1
   2d400:	add	r4, r4, #1
   2d404:	cmp	r4, r0
   2d408:	bcc	2d30c <myhtml_tokenizer_state_doctype_name@@Base+0x20>
   2d40c:	mov	r0, r4
   2d410:	pop	{r4, r5, fp, pc}
   2d414:	ldr	r0, [r5, #56]	; 0x38
   2d418:	ldr	r1, [r5, #192]	; 0xc0
   2d41c:	ldr	r2, [r0, #48]	; 0x30
   2d420:	sub	r1, r1, r2
   2d424:	add	r1, r1, r4
   2d428:	str	r1, [r0, #52]	; 0x34
   2d42c:	ldr	r0, [r5, #8]
   2d430:	ldr	r1, [r0, #16]
   2d434:	bl	11724 <myhtml_token_attr_create@plt>
   2d438:	cmp	r0, #0
   2d43c:	str	r0, [r5, #56]	; 0x38
   2d440:	movne	r0, #54	; 0x36
   2d444:	addne	r4, r4, #1
   2d448:	strne	r0, [r5, #160]	; 0xa0
   2d44c:	movne	r0, r4
   2d450:	popne	{r4, r5, fp, pc}
   2d454:	b	2d4a0 <myhtml_tokenizer_state_doctype_name@@Base+0x1b4>
   2d458:	ldr	r0, [r5, #56]	; 0x38
   2d45c:	ldr	r1, [r5, #192]	; 0xc0
   2d460:	ldr	r2, [r0, #48]	; 0x30
   2d464:	sub	r2, r1, r2
   2d468:	add	r2, r2, r4
   2d46c:	str	r2, [r0, #52]	; 0x34
   2d470:	mov	r2, ip
   2d474:	ldr	r0, [ip, #32]
   2d478:	sub	r0, r1, r0
   2d47c:	add	r0, r0, r4
   2d480:	add	r4, r4, #1
   2d484:	add	r0, r0, #1
   2d488:	mov	r1, r4
   2d48c:	str	r0, [ip, #36]	; 0x24
   2d490:	mov	r0, r5
   2d494:	bl	110e8 <myhtml_queue_add@plt>
   2d498:	cmp	r0, #0
   2d49c:	beq	2d4b4 <myhtml_tokenizer_state_doctype_name@@Base+0x1c8>
   2d4a0:	mov	r0, #69	; 0x45
   2d4a4:	mov	r4, #0
   2d4a8:	str	r0, [r5, #160]	; 0xa0
   2d4ac:	mov	r0, r4
   2d4b0:	pop	{r4, r5, fp, pc}
   2d4b4:	ldr	r0, [r5, #8]
   2d4b8:	ldr	r1, [r0, #16]
   2d4bc:	bl	11724 <myhtml_token_attr_create@plt>
   2d4c0:	cmp	r0, #0
   2d4c4:	str	r0, [r5, #56]	; 0x38
   2d4c8:	movne	r0, #0
   2d4cc:	b	2d448 <myhtml_tokenizer_state_doctype_name@@Base+0x15c>

0002d4d0 <myhtml_tokenizer_state_after_doctype_name@@Base>:
   2d4d0:	push	{r4, r5, r6, r7, fp, lr}
   2d4d4:	add	fp, sp, #16
   2d4d8:	mov	r4, r3
   2d4dc:	ldrb	r3, [r2, r3]
   2d4e0:	mov	r7, r0
   2d4e4:	ldr	r0, [fp, #8]
   2d4e8:	mov	ip, r1
   2d4ec:	sub	r6, r3, #9
   2d4f0:	cmp	r6, #23
   2d4f4:	bhi	2d554 <myhtml_tokenizer_state_after_doctype_name@@Base+0x84>
   2d4f8:	movw	r1, #27
   2d4fc:	mov	r5, #1
   2d500:	movt	r1, #128	; 0x80
   2d504:	tst	r1, r5, lsl r6
   2d508:	beq	2d554 <myhtml_tokenizer_state_after_doctype_name@@Base+0x84>
   2d50c:	cmp	r4, r0
   2d510:	bcs	2d554 <myhtml_tokenizer_state_after_doctype_name@@Base+0x84>
   2d514:	add	r4, r4, #1
   2d518:	mvn	r5, #8
   2d51c:	mov	r6, #1
   2d520:	uxtab	r3, r5, r3
   2d524:	cmp	r3, #23
   2d528:	bls	2d544 <myhtml_tokenizer_state_after_doctype_name@@Base+0x74>
   2d52c:	b	2d5cc <myhtml_tokenizer_state_after_doctype_name@@Base+0xfc>
   2d530:	ldrb	r3, [r2, r4]
   2d534:	add	r4, r4, #1
   2d538:	uxtab	r3, r5, r3
   2d53c:	cmp	r3, #23
   2d540:	bhi	2d5cc <myhtml_tokenizer_state_after_doctype_name@@Base+0xfc>
   2d544:	tst	r1, r6, lsl r3
   2d548:	beq	2d5cc <myhtml_tokenizer_state_after_doctype_name@@Base+0xfc>
   2d54c:	cmp	r4, r0
   2d550:	bcc	2d530 <myhtml_tokenizer_state_after_doctype_name@@Base+0x60>
   2d554:	cmp	r4, r0
   2d558:	bcs	2d5c4 <myhtml_tokenizer_state_after_doctype_name@@Base+0xf4>
   2d55c:	ldrb	r0, [r2, r4]
   2d560:	cmp	r0, #62	; 0x3e
   2d564:	bne	2d5b0 <myhtml_tokenizer_state_after_doctype_name@@Base+0xe0>
   2d568:	ldr	r0, [r7, #192]	; 0xc0
   2d56c:	ldr	r1, [ip, #32]
   2d570:	add	r4, r4, #1
   2d574:	mov	r2, ip
   2d578:	add	r0, r0, r4
   2d57c:	sub	r0, r0, r1
   2d580:	mov	r1, r4
   2d584:	str	r0, [ip, #36]	; 0x24
   2d588:	mov	r0, r7
   2d58c:	bl	110e8 <myhtml_queue_add@plt>
   2d590:	cmp	r0, #0
   2d594:	movne	r0, #69	; 0x45
   2d598:	movne	r4, #0
   2d59c:	strne	r0, [r7, #160]	; 0xa0
   2d5a0:	movne	r0, r4
   2d5a4:	popne	{r4, r5, r6, r7, fp, pc}
   2d5a8:	mov	r0, #0
   2d5ac:	b	2d5c0 <myhtml_tokenizer_state_after_doctype_name@@Base+0xf0>
   2d5b0:	ldr	r0, [r7, #192]	; 0xc0
   2d5b4:	add	r0, r0, r4
   2d5b8:	str	r0, [ip, #12]
   2d5bc:	mov	r0, #68	; 0x44
   2d5c0:	str	r0, [r7, #160]	; 0xa0
   2d5c4:	mov	r0, r4
   2d5c8:	pop	{r4, r5, r6, r7, fp, pc}
   2d5cc:	sub	r4, r4, #1
   2d5d0:	cmp	r4, r0
   2d5d4:	bcc	2d55c <myhtml_tokenizer_state_after_doctype_name@@Base+0x8c>
   2d5d8:	b	2d5c4 <myhtml_tokenizer_state_after_doctype_name@@Base+0xf4>

0002d5dc <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base>:
   2d5dc:	push	{r4, r5, r6, r7, fp, lr}
   2d5e0:	add	fp, sp, #16
   2d5e4:	mov	r5, r1
   2d5e8:	mov	r4, r0
   2d5ec:	ldr	r1, [r1, #12]
   2d5f0:	ldr	r0, [r0, #192]	; 0xc0
   2d5f4:	ldr	r6, [fp, #8]
   2d5f8:	add	r0, r0, r6
   2d5fc:	add	r2, r1, #6
   2d600:	cmp	r2, r0
   2d604:	bhi	2d664 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x88>
   2d608:	mov	r0, r4
   2d60c:	mov	r2, #6
   2d610:	mov	r7, r3
   2d614:	bl	10f8c <myhtml_tree_incomming_buffer_make_data@plt>
   2d618:	ldr	r1, [pc, #344]	; 2d778 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x19c>
   2d61c:	mov	r2, #6
   2d620:	mov	r6, r0
   2d624:	add	r1, pc, r1
   2d628:	bl	11298 <mycore_strncasecmp@plt>
   2d62c:	cmp	r0, #0
   2d630:	beq	2d66c <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x90>
   2d634:	ldr	r1, [pc, #320]	; 2d77c <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x1a0>
   2d638:	mov	r0, r6
   2d63c:	mov	r2, #6
   2d640:	add	r1, pc, r1
   2d644:	bl	11298 <mycore_strncasecmp@plt>
   2d648:	cmp	r0, #0
   2d64c:	beq	2d690 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xb4>
   2d650:	mov	r0, #66	; 0x42
   2d654:	mov	r6, r7
   2d658:	str	r0, [r4, #160]	; 0xa0
   2d65c:	mov	r0, #1
   2d660:	str	r0, [r4, #176]	; 0xb0
   2d664:	mov	r0, r6
   2d668:	pop	{r4, r5, r6, r7, fp, pc}
   2d66c:	ldr	r1, [r5, #40]	; 0x28
   2d670:	ldr	r0, [r4, #56]	; 0x38
   2d674:	cmp	r1, #0
   2d678:	beq	2d6b4 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xd8>
   2d67c:	ldr	r1, [r5, #44]	; 0x2c
   2d680:	str	r0, [r1]
   2d684:	str	r0, [r5, #44]	; 0x2c
   2d688:	str	r0, [r4, #56]	; 0x38
   2d68c:	b	2d6c0 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xe4>
   2d690:	ldr	r1, [r5, #40]	; 0x28
   2d694:	ldr	r0, [r4, #56]	; 0x38
   2d698:	cmp	r1, #0
   2d69c:	beq	2d700 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x124>
   2d6a0:	ldr	r1, [r5, #44]	; 0x2c
   2d6a4:	str	r0, [r1]
   2d6a8:	str	r0, [r5, #44]	; 0x2c
   2d6ac:	str	r0, [r4, #56]	; 0x38
   2d6b0:	b	2d70c <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x130>
   2d6b4:	str	r0, [r5, #40]	; 0x28
   2d6b8:	str	r0, [r5, #44]	; 0x2c
   2d6bc:	mov	r1, #0
   2d6c0:	mov	r6, #0
   2d6c4:	mov	r2, #6
   2d6c8:	str	r6, [r0]
   2d6cc:	str	r1, [r0, #4]
   2d6d0:	ldr	r0, [r5, #12]
   2d6d4:	ldr	r1, [r4, #56]	; 0x38
   2d6d8:	str	r0, [r1, #56]	; 0x38
   2d6dc:	str	r2, [r1, #60]	; 0x3c
   2d6e0:	ldr	r0, [r4, #8]
   2d6e4:	ldr	r1, [r0, #16]
   2d6e8:	bl	11724 <myhtml_token_attr_create@plt>
   2d6ec:	cmp	r0, #0
   2d6f0:	str	r0, [r4, #56]	; 0x38
   2d6f4:	beq	2d768 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x18c>
   2d6f8:	mov	r0, #56	; 0x38
   2d6fc:	b	2d748 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x16c>
   2d700:	str	r0, [r5, #40]	; 0x28
   2d704:	str	r0, [r5, #44]	; 0x2c
   2d708:	mov	r1, #0
   2d70c:	mov	r6, #0
   2d710:	mov	r2, #6
   2d714:	str	r6, [r0]
   2d718:	str	r1, [r0, #4]
   2d71c:	ldr	r0, [r5, #12]
   2d720:	ldr	r1, [r4, #56]	; 0x38
   2d724:	str	r0, [r1, #56]	; 0x38
   2d728:	str	r2, [r1, #60]	; 0x3c
   2d72c:	ldr	r0, [r4, #8]
   2d730:	ldr	r1, [r0, #16]
   2d734:	bl	11724 <myhtml_token_attr_create@plt>
   2d738:	cmp	r0, #0
   2d73c:	str	r0, [r4, #56]	; 0x38
   2d740:	beq	2d768 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x18c>
   2d744:	mov	r0, #59	; 0x3b
   2d748:	str	r0, [r4, #160]	; 0xa0
   2d74c:	ldr	r0, [r4, #76]	; 0x4c
   2d750:	ldr	r1, [r5, #12]
   2d754:	ldr	r0, [r0, #12]
   2d758:	add	r1, r1, #6
   2d75c:	sub	r6, r1, r0
   2d760:	mov	r0, r6
   2d764:	pop	{r4, r5, r6, r7, fp, pc}
   2d768:	mov	r0, #69	; 0x45
   2d76c:	str	r0, [r4, #160]	; 0xa0
   2d770:	mov	r0, r6
   2d774:	pop	{r4, r5, r6, r7, fp, pc}
   2d778:	andeq	r5, sp, sl, ror #2
   2d77c:	andeq	r5, sp, r0, ror #2

0002d780 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base>:
   2d780:	push	{r4, r5, r6, r7, fp, lr}
   2d784:	add	fp, sp, #16
   2d788:	mov	r4, r3
   2d78c:	ldrb	r3, [r2, r3]
   2d790:	mov	r7, r0
   2d794:	ldr	r0, [fp, #8]
   2d798:	mov	ip, r1
   2d79c:	sub	r6, r3, #9
   2d7a0:	cmp	r6, #23
   2d7a4:	bhi	2d804 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x84>
   2d7a8:	movw	r1, #27
   2d7ac:	mov	r5, #1
   2d7b0:	movt	r1, #128	; 0x80
   2d7b4:	tst	r1, r5, lsl r6
   2d7b8:	beq	2d804 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x84>
   2d7bc:	cmp	r4, r0
   2d7c0:	bcs	2d804 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x84>
   2d7c4:	add	r4, r4, #1
   2d7c8:	mvn	r5, #8
   2d7cc:	mov	r6, #1
   2d7d0:	uxtab	r3, r5, r3
   2d7d4:	cmp	r3, #23
   2d7d8:	bls	2d7f4 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x74>
   2d7dc:	b	2d84c <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xcc>
   2d7e0:	ldrb	r3, [r2, r4]
   2d7e4:	add	r4, r4, #1
   2d7e8:	uxtab	r3, r5, r3
   2d7ec:	cmp	r3, #23
   2d7f0:	bhi	2d84c <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xcc>
   2d7f4:	tst	r1, r6, lsl r3
   2d7f8:	beq	2d84c <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xcc>
   2d7fc:	cmp	r4, r0
   2d800:	bcc	2d7e0 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x60>
   2d804:	cmp	r4, r0
   2d808:	bcs	2d858 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xd8>
   2d80c:	ldrb	r0, [r2, r4]
   2d810:	cmp	r0, #39	; 0x27
   2d814:	beq	2d860 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xe0>
   2d818:	cmp	r0, #34	; 0x22
   2d81c:	bne	2d88c <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x10c>
   2d820:	ldr	r1, [r7, #192]	; 0xc0
   2d824:	ldr	r0, [r7, #56]	; 0x38
   2d828:	add	r4, r4, #1
   2d82c:	mov	r2, #0
   2d830:	add	r1, r4, r1
   2d834:	str	r1, [r0, #56]	; 0x38
   2d838:	str	r2, [r0, #60]	; 0x3c
   2d83c:	mov	r0, #57	; 0x39
   2d840:	str	r0, [r7, #160]	; 0xa0
   2d844:	mov	r0, r4
   2d848:	pop	{r4, r5, r6, r7, fp, pc}
   2d84c:	sub	r4, r4, #1
   2d850:	cmp	r4, r0
   2d854:	bcc	2d80c <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x8c>
   2d858:	mov	r0, r4
   2d85c:	pop	{r4, r5, r6, r7, fp, pc}
   2d860:	ldr	r1, [r7, #192]	; 0xc0
   2d864:	ldr	r0, [r7, #56]	; 0x38
   2d868:	add	r4, r4, #1
   2d86c:	mov	r2, #0
   2d870:	add	r1, r4, r1
   2d874:	str	r1, [r0, #56]	; 0x38
   2d878:	str	r2, [r0, #60]	; 0x3c
   2d87c:	mov	r0, #58	; 0x3a
   2d880:	str	r0, [r7, #160]	; 0xa0
   2d884:	mov	r0, r4
   2d888:	pop	{r4, r5, r6, r7, fp, pc}
   2d88c:	mov	r1, #1
   2d890:	cmp	r0, #62	; 0x3e
   2d894:	str	r1, [r7, #176]	; 0xb0
   2d898:	bne	2d8ec <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x16c>
   2d89c:	ldr	r0, [r7, #192]	; 0xc0
   2d8a0:	ldr	r1, [ip, #32]
   2d8a4:	add	r4, r4, #1
   2d8a8:	mov	r2, ip
   2d8ac:	add	r0, r0, r4
   2d8b0:	sub	r0, r0, r1
   2d8b4:	mov	r1, r4
   2d8b8:	str	r0, [ip, #36]	; 0x24
   2d8bc:	mov	r0, r7
   2d8c0:	bl	110e8 <myhtml_queue_add@plt>
   2d8c4:	cmp	r0, #0
   2d8c8:	movne	r0, #69	; 0x45
   2d8cc:	movne	r4, #0
   2d8d0:	strne	r0, [r7, #160]	; 0xa0
   2d8d4:	movne	r0, r4
   2d8d8:	popne	{r4, r5, r6, r7, fp, pc}
   2d8dc:	mov	r0, #0
   2d8e0:	str	r0, [r7, #160]	; 0xa0
   2d8e4:	mov	r0, r4
   2d8e8:	pop	{r4, r5, r6, r7, fp, pc}
   2d8ec:	mov	r0, #66	; 0x42
   2d8f0:	add	r4, r4, #1
   2d8f4:	str	r0, [r7, #160]	; 0xa0
   2d8f8:	mov	r0, r4
   2d8fc:	pop	{r4, r5, r6, r7, fp, pc}

0002d900 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base>:
   2d900:	push	{r4, r5, r6, sl, fp, lr}
   2d904:	add	fp, sp, #16
   2d908:	mov	r5, r0
   2d90c:	ldr	r0, [fp, #8]
   2d910:	mov	r4, r3
   2d914:	cmp	r3, r0
   2d918:	bcs	2d944 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x44>
   2d91c:	mov	r6, r1
   2d920:	ldr	r1, [fp, #12]
   2d924:	ldrb	r3, [r2, r4]
   2d928:	cmp	r3, r1
   2d92c:	beq	2d94c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x4c>
   2d930:	cmp	r3, #62	; 0x3e
   2d934:	beq	2d984 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x84>
   2d938:	add	r4, r4, #1
   2d93c:	cmp	r4, r0
   2d940:	bcc	2d924 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x24>
   2d944:	mov	r0, r4
   2d948:	pop	{r4, r5, r6, sl, fp, pc}
   2d94c:	ldr	r0, [r5, #56]	; 0x38
   2d950:	ldr	r1, [r5, #192]	; 0xc0
   2d954:	ldr	r2, [r0, #56]	; 0x38
   2d958:	sub	r1, r1, r2
   2d95c:	add	r1, r1, r4
   2d960:	str	r1, [r0, #60]	; 0x3c
   2d964:	ldr	r1, [r6, #40]	; 0x28
   2d968:	cmp	r1, #0
   2d96c:	beq	2d9d0 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xd0>
   2d970:	ldr	r1, [r6, #44]	; 0x2c
   2d974:	str	r0, [r1]
   2d978:	str	r0, [r6, #44]	; 0x2c
   2d97c:	str	r0, [r5, #56]	; 0x38
   2d980:	b	2d9dc <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xdc>
   2d984:	mov	r0, #1
   2d988:	str	r0, [r5, #176]	; 0xb0
   2d98c:	ldr	r0, [r5, #56]	; 0x38
   2d990:	ldr	r1, [r5, #192]	; 0xc0
   2d994:	ldr	r2, [r0, #56]	; 0x38
   2d998:	add	r3, r1, r4
   2d99c:	cmp	r3, r2
   2d9a0:	bls	2da48 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x148>
   2d9a4:	sub	r1, r1, r2
   2d9a8:	add	r1, r1, r4
   2d9ac:	str	r1, [r0, #60]	; 0x3c
   2d9b0:	ldr	r1, [r6, #40]	; 0x28
   2d9b4:	cmp	r1, #0
   2d9b8:	beq	2da14 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x114>
   2d9bc:	ldr	r1, [r6, #44]	; 0x2c
   2d9c0:	str	r0, [r1]
   2d9c4:	str	r0, [r6, #44]	; 0x2c
   2d9c8:	str	r0, [r5, #56]	; 0x38
   2d9cc:	b	2da20 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x120>
   2d9d0:	str	r0, [r6, #40]	; 0x28
   2d9d4:	str	r0, [r6, #44]	; 0x2c
   2d9d8:	mov	r1, #0
   2d9dc:	mov	r2, #0
   2d9e0:	str	r2, [r0]
   2d9e4:	str	r1, [r0, #4]
   2d9e8:	ldr	r0, [r5, #8]
   2d9ec:	ldr	r1, [r0, #16]
   2d9f0:	bl	11724 <myhtml_token_attr_create@plt>
   2d9f4:	cmp	r0, #0
   2d9f8:	str	r0, [r5, #56]	; 0x38
   2d9fc:	movne	r0, #59	; 0x3b
   2da00:	addne	r4, r4, #1
   2da04:	strne	r0, [r5, #160]	; 0xa0
   2da08:	movne	r0, r4
   2da0c:	popne	{r4, r5, r6, sl, fp, pc}
   2da10:	b	2da78 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x178>
   2da14:	str	r0, [r6, #40]	; 0x28
   2da18:	str	r0, [r6, #44]	; 0x2c
   2da1c:	mov	r1, #0
   2da20:	mov	r2, #0
   2da24:	str	r2, [r0]
   2da28:	str	r1, [r0, #4]
   2da2c:	ldr	r0, [r5, #8]
   2da30:	ldr	r1, [r0, #16]
   2da34:	bl	11724 <myhtml_token_attr_create@plt>
   2da38:	cmp	r0, #0
   2da3c:	str	r0, [r5, #56]	; 0x38
   2da40:	beq	2da78 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x178>
   2da44:	ldr	r1, [r5, #192]	; 0xc0
   2da48:	ldr	r0, [r6, #32]
   2da4c:	mov	r2, r6
   2da50:	sub	r0, r1, r0
   2da54:	add	r0, r0, r4
   2da58:	add	r4, r4, #1
   2da5c:	add	r0, r0, #1
   2da60:	mov	r1, r4
   2da64:	str	r0, [r6, #36]	; 0x24
   2da68:	mov	r0, r5
   2da6c:	bl	110e8 <myhtml_queue_add@plt>
   2da70:	cmp	r0, #0
   2da74:	beq	2da8c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x18c>
   2da78:	mov	r0, #69	; 0x45
   2da7c:	mov	r4, #0
   2da80:	str	r0, [r5, #160]	; 0xa0
   2da84:	mov	r0, r4
   2da88:	pop	{r4, r5, r6, sl, fp, pc}
   2da8c:	mov	r0, #0
   2da90:	str	r0, [r5, #160]	; 0xa0
   2da94:	mov	r0, r4
   2da98:	pop	{r4, r5, r6, sl, fp, pc}

0002da9c <myhtml_tokenizer_state_doctype_public_identifier_double_quoted@@Base>:
   2da9c:	push	{fp, lr}
   2daa0:	mov	fp, sp
   2daa4:	sub	sp, sp, #8
   2daa8:	mov	ip, #34	; 0x22
   2daac:	str	ip, [sp, #4]
   2dab0:	ldr	ip, [fp, #8]
   2dab4:	str	ip, [sp]
   2dab8:	bl	11430 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>
   2dabc:	mov	sp, fp
   2dac0:	pop	{fp, pc}

0002dac4 <myhtml_tokenizer_state_doctype_public_identifier_single_quoted@@Base>:
   2dac4:	push	{fp, lr}
   2dac8:	mov	fp, sp
   2dacc:	sub	sp, sp, #8
   2dad0:	mov	ip, #39	; 0x27
   2dad4:	str	ip, [sp, #4]
   2dad8:	ldr	ip, [fp, #8]
   2dadc:	str	ip, [sp]
   2dae0:	bl	11430 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>
   2dae4:	mov	sp, fp
   2dae8:	pop	{fp, pc}

0002daec <myhtml_tokenizer_state_after_doctype_public_identifier@@Base>:
   2daec:	push	{r4, r5, r6, r7, fp, lr}
   2daf0:	add	fp, sp, #16
   2daf4:	mov	r4, r3
   2daf8:	ldrb	r3, [r2, r3]
   2dafc:	mov	r7, r0
   2db00:	ldr	r0, [fp, #8]
   2db04:	mov	ip, r1
   2db08:	sub	r6, r3, #9
   2db0c:	cmp	r6, #23
   2db10:	bhi	2db70 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x84>
   2db14:	movw	r1, #27
   2db18:	mov	r5, #1
   2db1c:	movt	r1, #128	; 0x80
   2db20:	tst	r1, r5, lsl r6
   2db24:	beq	2db70 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x84>
   2db28:	cmp	r4, r0
   2db2c:	bcs	2db70 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x84>
   2db30:	add	r4, r4, #1
   2db34:	mvn	r5, #8
   2db38:	mov	r6, #1
   2db3c:	uxtab	r3, r5, r3
   2db40:	cmp	r3, #23
   2db44:	bls	2db60 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x74>
   2db48:	b	2dbc0 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xd4>
   2db4c:	ldrb	r3, [r2, r4]
   2db50:	add	r4, r4, #1
   2db54:	uxtab	r3, r5, r3
   2db58:	cmp	r3, #23
   2db5c:	bhi	2dbc0 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xd4>
   2db60:	tst	r1, r6, lsl r3
   2db64:	beq	2dbc0 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xd4>
   2db68:	cmp	r4, r0
   2db6c:	bcc	2db4c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x60>
   2db70:	cmp	r4, r0
   2db74:	bcs	2dbcc <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xe0>
   2db78:	ldrb	r0, [r2, r4]
   2db7c:	cmp	r0, #62	; 0x3e
   2db80:	beq	2dbd4 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xe8>
   2db84:	cmp	r0, #39	; 0x27
   2db88:	beq	2dc24 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x138>
   2db8c:	cmp	r0, #34	; 0x22
   2db90:	bne	2dc50 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x164>
   2db94:	ldr	r1, [r7, #192]	; 0xc0
   2db98:	ldr	r0, [r7, #56]	; 0x38
   2db9c:	add	r4, r4, #1
   2dba0:	mov	r2, #0
   2dba4:	add	r1, r4, r1
   2dba8:	str	r1, [r0, #56]	; 0x38
   2dbac:	str	r2, [r0, #60]	; 0x3c
   2dbb0:	mov	r0, #63	; 0x3f
   2dbb4:	str	r0, [r7, #160]	; 0xa0
   2dbb8:	mov	r0, r4
   2dbbc:	pop	{r4, r5, r6, r7, fp, pc}
   2dbc0:	sub	r4, r4, #1
   2dbc4:	cmp	r4, r0
   2dbc8:	bcc	2db78 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x8c>
   2dbcc:	mov	r0, r4
   2dbd0:	pop	{r4, r5, r6, r7, fp, pc}
   2dbd4:	ldr	r0, [r7, #192]	; 0xc0
   2dbd8:	ldr	r1, [ip, #32]
   2dbdc:	add	r4, r4, #1
   2dbe0:	mov	r2, ip
   2dbe4:	add	r0, r0, r4
   2dbe8:	sub	r0, r0, r1
   2dbec:	mov	r1, r4
   2dbf0:	str	r0, [ip, #36]	; 0x24
   2dbf4:	mov	r0, r7
   2dbf8:	bl	110e8 <myhtml_queue_add@plt>
   2dbfc:	cmp	r0, #0
   2dc00:	movne	r0, #69	; 0x45
   2dc04:	movne	r4, #0
   2dc08:	strne	r0, [r7, #160]	; 0xa0
   2dc0c:	movne	r0, r4
   2dc10:	popne	{r4, r5, r6, r7, fp, pc}
   2dc14:	mov	r0, #0
   2dc18:	str	r0, [r7, #160]	; 0xa0
   2dc1c:	mov	r0, r4
   2dc20:	pop	{r4, r5, r6, r7, fp, pc}
   2dc24:	ldr	r1, [r7, #192]	; 0xc0
   2dc28:	ldr	r0, [r7, #56]	; 0x38
   2dc2c:	add	r4, r4, #1
   2dc30:	mov	r2, #0
   2dc34:	add	r1, r4, r1
   2dc38:	str	r1, [r0, #56]	; 0x38
   2dc3c:	str	r2, [r0, #60]	; 0x3c
   2dc40:	mov	r0, #64	; 0x40
   2dc44:	str	r0, [r7, #160]	; 0xa0
   2dc48:	mov	r0, r4
   2dc4c:	pop	{r4, r5, r6, r7, fp, pc}
   2dc50:	mov	r0, #66	; 0x42
   2dc54:	str	r0, [r7, #160]	; 0xa0
   2dc58:	mov	r0, #1
   2dc5c:	str	r0, [r7, #176]	; 0xb0
   2dc60:	mov	r0, r4
   2dc64:	pop	{r4, r5, r6, r7, fp, pc}

0002dc68 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base>:
   2dc68:	push	{r4, r5, r6, sl, fp, lr}
   2dc6c:	add	fp, sp, #16
   2dc70:	mov	r5, r0
   2dc74:	ldr	r0, [fp, #8]
   2dc78:	mov	r4, r3
   2dc7c:	cmp	r3, r0
   2dc80:	bcs	2dcac <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x44>
   2dc84:	mov	r6, r1
   2dc88:	ldr	r1, [fp, #12]
   2dc8c:	ldrb	r3, [r2, r4]
   2dc90:	cmp	r3, r1
   2dc94:	beq	2dcb4 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x4c>
   2dc98:	cmp	r3, #62	; 0x3e
   2dc9c:	beq	2dcec <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x84>
   2dca0:	add	r4, r4, #1
   2dca4:	cmp	r4, r0
   2dca8:	bcc	2dc8c <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x24>
   2dcac:	mov	r0, r4
   2dcb0:	pop	{r4, r5, r6, sl, fp, pc}
   2dcb4:	ldr	r0, [r5, #56]	; 0x38
   2dcb8:	ldr	r1, [r5, #192]	; 0xc0
   2dcbc:	ldr	r2, [r0, #56]	; 0x38
   2dcc0:	sub	r1, r1, r2
   2dcc4:	add	r1, r1, r4
   2dcc8:	str	r1, [r0, #60]	; 0x3c
   2dccc:	ldr	r1, [r6, #40]	; 0x28
   2dcd0:	cmp	r1, #0
   2dcd4:	beq	2dd38 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xd0>
   2dcd8:	ldr	r1, [r6, #44]	; 0x2c
   2dcdc:	str	r0, [r1]
   2dce0:	str	r0, [r6, #44]	; 0x2c
   2dce4:	str	r0, [r5, #56]	; 0x38
   2dce8:	b	2dd44 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xdc>
   2dcec:	mov	r0, #1
   2dcf0:	str	r0, [r5, #176]	; 0xb0
   2dcf4:	ldr	r0, [r5, #56]	; 0x38
   2dcf8:	ldr	r1, [r5, #192]	; 0xc0
   2dcfc:	ldr	r2, [r0, #56]	; 0x38
   2dd00:	add	r3, r1, r4
   2dd04:	cmp	r3, r2
   2dd08:	bls	2ddb0 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x148>
   2dd0c:	sub	r1, r1, r2
   2dd10:	add	r1, r1, r4
   2dd14:	str	r1, [r0, #60]	; 0x3c
   2dd18:	ldr	r1, [r6, #40]	; 0x28
   2dd1c:	cmp	r1, #0
   2dd20:	beq	2dd7c <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x114>
   2dd24:	ldr	r1, [r6, #44]	; 0x2c
   2dd28:	str	r0, [r1]
   2dd2c:	str	r0, [r6, #44]	; 0x2c
   2dd30:	str	r0, [r5, #56]	; 0x38
   2dd34:	b	2dd88 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x120>
   2dd38:	str	r0, [r6, #40]	; 0x28
   2dd3c:	str	r0, [r6, #44]	; 0x2c
   2dd40:	mov	r1, #0
   2dd44:	mov	r2, #0
   2dd48:	str	r2, [r0]
   2dd4c:	str	r1, [r0, #4]
   2dd50:	ldr	r0, [r5, #8]
   2dd54:	ldr	r1, [r0, #16]
   2dd58:	bl	11724 <myhtml_token_attr_create@plt>
   2dd5c:	cmp	r0, #0
   2dd60:	str	r0, [r5, #56]	; 0x38
   2dd64:	movne	r0, #65	; 0x41
   2dd68:	addne	r4, r4, #1
   2dd6c:	strne	r0, [r5, #160]	; 0xa0
   2dd70:	movne	r0, r4
   2dd74:	popne	{r4, r5, r6, sl, fp, pc}
   2dd78:	b	2dde0 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x178>
   2dd7c:	str	r0, [r6, #40]	; 0x28
   2dd80:	str	r0, [r6, #44]	; 0x2c
   2dd84:	mov	r1, #0
   2dd88:	mov	r2, #0
   2dd8c:	str	r2, [r0]
   2dd90:	str	r1, [r0, #4]
   2dd94:	ldr	r0, [r5, #8]
   2dd98:	ldr	r1, [r0, #16]
   2dd9c:	bl	11724 <myhtml_token_attr_create@plt>
   2dda0:	cmp	r0, #0
   2dda4:	str	r0, [r5, #56]	; 0x38
   2dda8:	beq	2dde0 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x178>
   2ddac:	ldr	r1, [r5, #192]	; 0xc0
   2ddb0:	ldr	r0, [r6, #32]
   2ddb4:	mov	r2, r6
   2ddb8:	sub	r0, r1, r0
   2ddbc:	add	r0, r0, r4
   2ddc0:	add	r4, r4, #1
   2ddc4:	add	r0, r0, #1
   2ddc8:	mov	r1, r4
   2ddcc:	str	r0, [r6, #36]	; 0x24
   2ddd0:	mov	r0, r5
   2ddd4:	bl	110e8 <myhtml_queue_add@plt>
   2ddd8:	cmp	r0, #0
   2dddc:	beq	2ddf4 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x18c>
   2dde0:	mov	r0, #69	; 0x45
   2dde4:	mov	r4, #0
   2dde8:	str	r0, [r5, #160]	; 0xa0
   2ddec:	mov	r0, r4
   2ddf0:	pop	{r4, r5, r6, sl, fp, pc}
   2ddf4:	mov	r0, #0
   2ddf8:	str	r0, [r5, #160]	; 0xa0
   2ddfc:	mov	r0, r4
   2de00:	pop	{r4, r5, r6, sl, fp, pc}

0002de04 <myhtml_tokenizer_state_doctype_system_identifier_double_quoted@@Base>:
   2de04:	push	{fp, lr}
   2de08:	mov	fp, sp
   2de0c:	sub	sp, sp, #8
   2de10:	mov	ip, #34	; 0x22
   2de14:	str	ip, [sp, #4]
   2de18:	ldr	ip, [fp, #8]
   2de1c:	str	ip, [sp]
   2de20:	bl	1185c <myhtml_tokenizer_doctype_system_identifier_dsq@plt>
   2de24:	mov	sp, fp
   2de28:	pop	{fp, pc}

0002de2c <myhtml_tokenizer_state_doctype_system_identifier_single_quoted@@Base>:
   2de2c:	push	{fp, lr}
   2de30:	mov	fp, sp
   2de34:	sub	sp, sp, #8
   2de38:	mov	ip, #39	; 0x27
   2de3c:	str	ip, [sp, #4]
   2de40:	ldr	ip, [fp, #8]
   2de44:	str	ip, [sp]
   2de48:	bl	1185c <myhtml_tokenizer_doctype_system_identifier_dsq@plt>
   2de4c:	mov	sp, fp
   2de50:	pop	{fp, pc}

0002de54 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base>:
   2de54:	push	{r4, r5, r6, r7, fp, lr}
   2de58:	add	fp, sp, #16
   2de5c:	mov	r4, r3
   2de60:	ldrb	r3, [r2, r3]
   2de64:	mov	r7, r0
   2de68:	ldr	r0, [fp, #8]
   2de6c:	mov	ip, r1
   2de70:	sub	r6, r3, #9
   2de74:	cmp	r6, #23
   2de78:	bhi	2ded8 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x84>
   2de7c:	movw	r1, #27
   2de80:	mov	r5, #1
   2de84:	movt	r1, #128	; 0x80
   2de88:	tst	r1, r5, lsl r6
   2de8c:	beq	2ded8 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x84>
   2de90:	cmp	r4, r0
   2de94:	bcs	2ded8 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x84>
   2de98:	add	r4, r4, #1
   2de9c:	mvn	r5, #8
   2dea0:	mov	r6, #1
   2dea4:	uxtab	r3, r5, r3
   2dea8:	cmp	r3, #23
   2deac:	bls	2dec8 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x74>
   2deb0:	b	2df44 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xf0>
   2deb4:	ldrb	r3, [r2, r4]
   2deb8:	add	r4, r4, #1
   2debc:	uxtab	r3, r5, r3
   2dec0:	cmp	r3, #23
   2dec4:	bhi	2df44 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xf0>
   2dec8:	tst	r1, r6, lsl r3
   2decc:	beq	2df44 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xf0>
   2ded0:	cmp	r4, r0
   2ded4:	bcc	2deb4 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x60>
   2ded8:	cmp	r4, r0
   2dedc:	bcs	2df3c <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xe8>
   2dee0:	ldrb	r0, [r2, r4]
   2dee4:	cmp	r0, #62	; 0x3e
   2dee8:	bne	2df34 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xe0>
   2deec:	ldr	r0, [r7, #192]	; 0xc0
   2def0:	ldr	r1, [ip, #32]
   2def4:	add	r4, r4, #1
   2def8:	mov	r2, ip
   2defc:	add	r0, r0, r4
   2df00:	sub	r0, r0, r1
   2df04:	mov	r1, r4
   2df08:	str	r0, [ip, #36]	; 0x24
   2df0c:	mov	r0, r7
   2df10:	bl	110e8 <myhtml_queue_add@plt>
   2df14:	cmp	r0, #0
   2df18:	movne	r0, #69	; 0x45
   2df1c:	movne	r4, #0
   2df20:	strne	r0, [r7, #160]	; 0xa0
   2df24:	movne	r0, r4
   2df28:	popne	{r4, r5, r6, r7, fp, pc}
   2df2c:	mov	r0, #0
   2df30:	b	2df38 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xe4>
   2df34:	mov	r0, #66	; 0x42
   2df38:	str	r0, [r7, #160]	; 0xa0
   2df3c:	mov	r0, r4
   2df40:	pop	{r4, r5, r6, r7, fp, pc}
   2df44:	sub	r4, r4, #1
   2df48:	cmp	r4, r0
   2df4c:	bcc	2dee0 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x8c>
   2df50:	b	2df3c <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xe8>

0002df54 <myhtml_tokenizer_state_bogus_doctype@@Base>:
   2df54:	push	{r4, r5, fp, lr}
   2df58:	add	fp, sp, #8
   2df5c:	mov	r5, r0
   2df60:	ldr	r0, [fp, #8]
   2df64:	mov	r4, r3
   2df68:	mov	r3, r1
   2df6c:	cmp	r4, r0
   2df70:	bcs	2dfb8 <myhtml_tokenizer_state_bogus_doctype@@Base+0x64>
   2df74:	ldrb	r1, [r2, r4]
   2df78:	add	r4, r4, #1
   2df7c:	cmp	r1, #62	; 0x3e
   2df80:	bne	2df6c <myhtml_tokenizer_state_bogus_doctype@@Base+0x18>
   2df84:	ldr	r0, [r3, #32]
   2df88:	ldr	r1, [r5, #192]	; 0xc0
   2df8c:	mov	r2, r3
   2df90:	sub	r0, r1, r0
   2df94:	mov	r1, r4
   2df98:	add	r0, r0, r4
   2df9c:	str	r0, [r3, #36]	; 0x24
   2dfa0:	mov	r0, r5
   2dfa4:	bl	110e8 <myhtml_queue_add@plt>
   2dfa8:	cmp	r0, #0
   2dfac:	movwne	r0, #69	; 0x45
   2dfb0:	movne	r4, #0
   2dfb4:	str	r0, [r5, #160]	; 0xa0
   2dfb8:	mov	r0, r4
   2dfbc:	pop	{r4, r5, fp, pc}

0002dfc0 <myhtml_tokenizer_end_state_data@@Base>:
   2dfc0:	push	{r4, r5, fp, lr}
   2dfc4:	add	fp, sp, #8
   2dfc8:	sub	sp, sp, #8
   2dfcc:	mov	r5, r3
   2dfd0:	ldr	r3, [r0, #192]	; 0xc0
   2dfd4:	ldr	r4, [fp, #8]
   2dfd8:	add	r3, r3, r4
   2dfdc:	ldr	r4, [r1, #32]
   2dfe0:	sub	r4, r3, r4
   2dfe4:	str	r4, [r1, #36]	; 0x24
   2dfe8:	mov	r4, #512	; 0x200
   2dfec:	str	r4, [sp]
   2dff0:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2dff4:	mov	r0, r5
   2dff8:	sub	sp, fp, #8
   2dffc:	pop	{r4, r5, fp, pc}

0002e000 <myhtml_tokenizer_end_state_tag_open@@Base>:
   2e000:	push	{r4, r5, r6, r7, fp, lr}
   2e004:	add	fp, sp, #16
   2e008:	sub	sp, sp, #8
   2e00c:	mov	r6, r1
   2e010:	mov	r5, r0
   2e014:	ldr	r0, [r0, #192]	; 0xc0
   2e018:	ldr	r1, [fp, #8]
   2e01c:	mov	r7, r3
   2e020:	ldr	r4, [r6, #32]
   2e024:	add	r3, r0, r1
   2e028:	ldr	r1, [r6, #24]
   2e02c:	sub	r4, r3, r4
   2e030:	str	r4, [r6, #36]	; 0x24
   2e034:	cmp	r1, r3
   2e038:	bcs	2e080 <myhtml_tokenizer_end_state_tag_open@@Base+0x80>
   2e03c:	cmp	r1, #0
   2e040:	beq	2e08c <myhtml_tokenizer_end_state_tag_open@@Base+0x8c>
   2e044:	add	r0, r0, r7
   2e048:	mov	r3, r7
   2e04c:	sub	r0, r0, r1
   2e050:	mov	r1, r6
   2e054:	str	r0, [r6, #28]
   2e058:	mov	r0, r5
   2e05c:	bl	11958 <myhtml_check_tag_parser@plt>
   2e060:	mov	r0, r5
   2e064:	mov	r1, r7
   2e068:	mov	r2, r6
   2e06c:	bl	110e8 <myhtml_queue_add@plt>
   2e070:	cmp	r0, #0
   2e074:	movne	r0, #69	; 0x45
   2e078:	movne	r7, #0
   2e07c:	strne	r0, [r5, #160]	; 0xa0
   2e080:	mov	r0, r7
   2e084:	sub	sp, fp, #16
   2e088:	pop	{r4, r5, r6, r7, fp, pc}
   2e08c:	ldr	r0, [r6, #48]	; 0x30
   2e090:	ldr	r1, [r6, #48]	; 0x30
   2e094:	and	r0, r0, #8
   2e098:	eor	r0, r1, r0
   2e09c:	mov	r1, r6
   2e0a0:	str	r0, [r6, #48]	; 0x30
   2e0a4:	mov	r0, #512	; 0x200
   2e0a8:	str	r0, [sp]
   2e0ac:	mov	r0, r5
   2e0b0:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e0b4:	mov	r0, r7
   2e0b8:	sub	sp, fp, #16
   2e0bc:	pop	{r4, r5, r6, r7, fp, pc}

0002e0c0 <myhtml_tokenizer_end_state_tag_name@@Base>:
   2e0c0:	push	{r4, r5, fp, lr}
   2e0c4:	add	fp, sp, #8
   2e0c8:	sub	sp, sp, #8
   2e0cc:	mov	r5, r3
   2e0d0:	ldr	r3, [r0, #192]	; 0xc0
   2e0d4:	ldr	r4, [fp, #8]
   2e0d8:	add	r3, r3, r4
   2e0dc:	ldr	r4, [r1, #32]
   2e0e0:	sub	r4, r3, r4
   2e0e4:	str	r4, [r1, #36]	; 0x24
   2e0e8:	mov	r4, #512	; 0x200
   2e0ec:	str	r4, [sp]
   2e0f0:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e0f4:	mov	r0, r5
   2e0f8:	sub	sp, fp, #8
   2e0fc:	pop	{r4, r5, fp, pc}

0002e100 <myhtml_tokenizer_end_state_end_tag_open@@Base>:
   2e100:	push	{r4, r5, r6, r7, fp, lr}
   2e104:	add	fp, sp, #16
   2e108:	sub	sp, sp, #8
   2e10c:	mov	r7, r3
   2e110:	ldr	r4, [r0, #192]	; 0xc0
   2e114:	ldr	r3, [fp, #8]
   2e118:	ldr	r5, [r1, #24]
   2e11c:	ldr	r6, [r1, #32]
   2e120:	add	r3, r4, r3
   2e124:	sub	r6, r3, r6
   2e128:	cmp	r5, r3
   2e12c:	str	r6, [r1, #36]	; 0x24
   2e130:	bcs	2e160 <myhtml_tokenizer_end_state_end_tag_open@@Base+0x60>
   2e134:	add	r6, r4, r7
   2e138:	sub	r6, r6, r5
   2e13c:	str	r6, [r1, #28]
   2e140:	ldr	r6, [r1, #48]	; 0x30
   2e144:	ldr	r5, [r1, #48]	; 0x30
   2e148:	and	r6, r6, #8
   2e14c:	eor	r6, r5, r6
   2e150:	str	r6, [r1, #48]	; 0x30
   2e154:	mov	r6, #512	; 0x200
   2e158:	str	r6, [sp]
   2e15c:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e160:	mov	r0, r7
   2e164:	sub	sp, fp, #16
   2e168:	pop	{r4, r5, r6, r7, fp, pc}

0002e16c <myhtml_tokenizer_end_state_self_closing_start_tag@@Base>:
   2e16c:	push	{r4, r5, fp, lr}
   2e170:	add	fp, sp, #8
   2e174:	sub	sp, sp, #8
   2e178:	mov	r5, r3
   2e17c:	ldr	r3, [r0, #192]	; 0xc0
   2e180:	ldr	r4, [fp, #8]
   2e184:	add	r3, r3, r4
   2e188:	ldr	r4, [r1, #32]
   2e18c:	sub	r4, r3, r4
   2e190:	str	r4, [r1, #36]	; 0x24
   2e194:	mov	r4, #512	; 0x200
   2e198:	str	r4, [sp]
   2e19c:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e1a0:	mov	r0, r5
   2e1a4:	sub	sp, fp, #8
   2e1a8:	pop	{r4, r5, fp, pc}

0002e1ac <myhtml_tokenizer_end_state_markup_declaration_open@@Base>:
   2e1ac:	push	{r4, r5, r6, r7, fp, lr}
   2e1b0:	add	fp, sp, #16
   2e1b4:	sub	sp, sp, #8
   2e1b8:	mov	r5, r0
   2e1bc:	ldr	r0, [r0, #192]	; 0xc0
   2e1c0:	ldr	r7, [fp, #8]
   2e1c4:	mov	r4, r3
   2e1c8:	ldr	r3, [r1, #24]
   2e1cc:	mov	r6, r1
   2e1d0:	ldr	r1, [r1, #32]
   2e1d4:	add	r0, r0, r7
   2e1d8:	cmp	r3, #2
   2e1dc:	sub	r0, r0, r1
   2e1e0:	str	r0, [r6, #36]	; 0x24
   2e1e4:	bcc	2e2b4 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x108>
   2e1e8:	mov	r0, r5
   2e1ec:	mov	r1, r6
   2e1f0:	str	r7, [sp]
   2e1f4:	bl	110a0 <myhtml_tokenizer_state_bogus_comment@plt>
   2e1f8:	ldr	r1, [r5, #76]	; 0x4c
   2e1fc:	str	r0, [r1, #4]
   2e200:	ldr	r2, [r5, #64]	; 0x40
   2e204:	cmp	r2, r6
   2e208:	beq	2e258 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0xac>
   2e20c:	ldr	r0, [r5, #192]	; 0xc0
   2e210:	ldr	r1, [r2, #24]
   2e214:	add	r0, r0, r7
   2e218:	subs	r0, r0, r1
   2e21c:	str	r0, [r2, #28]
   2e220:	beq	2e2b4 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x108>
   2e224:	ldr	r1, [r2, #48]	; 0x30
   2e228:	ldr	r3, [r2, #48]	; 0x30
   2e22c:	and	r1, r1, #8
   2e230:	eor	r1, r3, r1
   2e234:	str	r1, [r2, #48]	; 0x30
   2e238:	mov	r1, #1
   2e23c:	str	r1, [r2]
   2e240:	str	r0, [r2, #28]
   2e244:	mov	r1, r4
   2e248:	ldr	r0, [r2, #48]	; 0x30
   2e24c:	orr	r0, r0, #512	; 0x200
   2e250:	str	r0, [r2, #48]	; 0x30
   2e254:	b	2e29c <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0xf0>
   2e258:	ldr	r0, [r6, #24]
   2e25c:	ldr	r1, [r6, #48]	; 0x30
   2e260:	ldr	r2, [r6, #48]	; 0x30
   2e264:	and	r1, r1, #8
   2e268:	eor	r1, r2, r1
   2e26c:	mov	r2, r6
   2e270:	str	r1, [r6, #48]	; 0x30
   2e274:	mov	r1, #2
   2e278:	str	r1, [r6]
   2e27c:	ldr	r1, [r6, #48]	; 0x30
   2e280:	orr	r1, r1, #1024	; 0x400
   2e284:	str	r1, [r6, #48]	; 0x30
   2e288:	ldr	r1, [r5, #192]	; 0xc0
   2e28c:	add	r1, r1, r7
   2e290:	sub	r0, r1, r0
   2e294:	mov	r1, r4
   2e298:	str	r0, [r6, #28]
   2e29c:	mov	r0, r5
   2e2a0:	bl	110e8 <myhtml_queue_add@plt>
   2e2a4:	cmp	r0, #0
   2e2a8:	movne	r0, #69	; 0x45
   2e2ac:	movne	r4, #0
   2e2b0:	strne	r0, [r5, #160]	; 0xa0
   2e2b4:	mov	r0, r4
   2e2b8:	sub	sp, fp, #16
   2e2bc:	pop	{r4, r5, r6, r7, fp, pc}

0002e2c0 <myhtml_tokenizer_end_state_before_attribute_name@@Base>:
   2e2c0:	push	{r4, r5, fp, lr}
   2e2c4:	add	fp, sp, #8
   2e2c8:	mov	r2, r1
   2e2cc:	mov	r5, r0
   2e2d0:	ldr	r0, [r0, #192]	; 0xc0
   2e2d4:	ldr	r1, [fp, #8]
   2e2d8:	mov	r4, r3
   2e2dc:	add	r0, r0, r1
   2e2e0:	ldr	r1, [r2, #32]
   2e2e4:	sub	r0, r0, r1
   2e2e8:	mov	r1, r3
   2e2ec:	str	r0, [r2, #36]	; 0x24
   2e2f0:	mov	r0, r5
   2e2f4:	bl	110e8 <myhtml_queue_add@plt>
   2e2f8:	cmp	r0, #0
   2e2fc:	movne	r0, #69	; 0x45
   2e300:	movne	r4, #0
   2e304:	strne	r0, [r5, #160]	; 0xa0
   2e308:	mov	r0, r4
   2e30c:	pop	{r4, r5, fp, pc}

0002e310 <myhtml_tokenizer_end_state_attribute_name@@Base>:
   2e310:	push	{r4, r5, fp, lr}
   2e314:	add	fp, sp, #8
   2e318:	mov	r2, r1
   2e31c:	mov	r5, r0
   2e320:	ldr	r0, [r0, #192]	; 0xc0
   2e324:	ldr	r1, [fp, #8]
   2e328:	mov	r4, r3
   2e32c:	ldr	r3, [r2, #32]
   2e330:	add	r1, r0, r1
   2e334:	add	r0, r0, r4
   2e338:	sub	r1, r1, r3
   2e33c:	str	r1, [r2, #36]	; 0x24
   2e340:	ldr	r1, [r5, #56]	; 0x38
   2e344:	ldr	r3, [r1, #48]	; 0x30
   2e348:	sub	r0, r0, r3
   2e34c:	str	r0, [r1, #52]	; 0x34
   2e350:	mov	r0, r5
   2e354:	mov	r1, r4
   2e358:	bl	110e8 <myhtml_queue_add@plt>
   2e35c:	cmp	r0, #0
   2e360:	movne	r0, #69	; 0x45
   2e364:	movne	r4, #0
   2e368:	strne	r0, [r5, #160]	; 0xa0
   2e36c:	mov	r0, r4
   2e370:	pop	{r4, r5, fp, pc}

0002e374 <myhtml_tokenizer_end_state_after_attribute_name@@Base>:
   2e374:	push	{r4, r5, fp, lr}
   2e378:	add	fp, sp, #8
   2e37c:	mov	r2, r1
   2e380:	mov	r5, r0
   2e384:	ldr	r0, [r0, #192]	; 0xc0
   2e388:	ldr	r1, [fp, #8]
   2e38c:	mov	r4, r3
   2e390:	add	r0, r0, r1
   2e394:	ldr	r1, [r2, #32]
   2e398:	sub	r0, r0, r1
   2e39c:	mov	r1, r3
   2e3a0:	str	r0, [r2, #36]	; 0x24
   2e3a4:	mov	r0, r5
   2e3a8:	bl	110e8 <myhtml_queue_add@plt>
   2e3ac:	cmp	r0, #0
   2e3b0:	movne	r0, #69	; 0x45
   2e3b4:	movne	r4, #0
   2e3b8:	strne	r0, [r5, #160]	; 0xa0
   2e3bc:	mov	r0, r4
   2e3c0:	pop	{r4, r5, fp, pc}

0002e3c4 <myhtml_tokenizer_end_state_before_attribute_value@@Base>:
   2e3c4:	push	{r4, r5, fp, lr}
   2e3c8:	add	fp, sp, #8
   2e3cc:	mov	r2, r1
   2e3d0:	mov	r5, r0
   2e3d4:	ldr	r0, [r0, #192]	; 0xc0
   2e3d8:	ldr	r1, [fp, #8]
   2e3dc:	mov	r4, r3
   2e3e0:	add	r0, r0, r1
   2e3e4:	ldr	r1, [r2, #32]
   2e3e8:	sub	r0, r0, r1
   2e3ec:	mov	r1, r3
   2e3f0:	str	r0, [r2, #36]	; 0x24
   2e3f4:	mov	r0, r5
   2e3f8:	bl	110e8 <myhtml_queue_add@plt>
   2e3fc:	cmp	r0, #0
   2e400:	bne	2e424 <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x60>
   2e404:	ldr	r0, [r5, #8]
   2e408:	ldr	r1, [r0, #16]
   2e40c:	bl	11724 <myhtml_token_attr_create@plt>
   2e410:	cmp	r0, #0
   2e414:	str	r0, [r5, #56]	; 0x38
   2e418:	beq	2e424 <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x60>
   2e41c:	mov	r0, r4
   2e420:	pop	{r4, r5, fp, pc}
   2e424:	mov	r0, #69	; 0x45
   2e428:	mov	r4, #0
   2e42c:	str	r0, [r5, #160]	; 0xa0
   2e430:	mov	r0, r4
   2e434:	pop	{r4, r5, fp, pc}

0002e438 <myhtml_tokenizer_end_state_attribute_value_double_quoted@@Base>:
   2e438:	ldr	r0, [r0, #192]	; 0xc0
   2e43c:	ldr	r2, [sp]
   2e440:	add	r0, r0, r2
   2e444:	ldr	r2, [r1, #32]
   2e448:	sub	r0, r0, r2
   2e44c:	str	r0, [r1, #36]	; 0x24
   2e450:	mov	r0, r3
   2e454:	bx	lr

0002e458 <myhtml_tokenizer_end_state_attribute_value_single_quoted@@Base>:
   2e458:	ldr	r0, [r0, #192]	; 0xc0
   2e45c:	ldr	r2, [sp]
   2e460:	add	r0, r0, r2
   2e464:	ldr	r2, [r1, #32]
   2e468:	sub	r0, r0, r2
   2e46c:	str	r0, [r1, #36]	; 0x24
   2e470:	mov	r0, r3
   2e474:	bx	lr

0002e478 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base>:
   2e478:	push	{r4, r5, fp, lr}
   2e47c:	add	fp, sp, #8
   2e480:	mov	r2, r1
   2e484:	mov	r5, r0
   2e488:	ldr	r0, [r0, #192]	; 0xc0
   2e48c:	ldr	r1, [fp, #8]
   2e490:	mov	r4, r3
   2e494:	ldr	r3, [r2, #32]
   2e498:	add	r1, r0, r1
   2e49c:	add	r0, r0, r4
   2e4a0:	sub	r1, r1, r3
   2e4a4:	str	r1, [r2, #36]	; 0x24
   2e4a8:	ldr	r1, [r5, #56]	; 0x38
   2e4ac:	ldr	r3, [r1, #56]	; 0x38
   2e4b0:	sub	r0, r0, r3
   2e4b4:	str	r0, [r1, #60]	; 0x3c
   2e4b8:	mov	r0, r5
   2e4bc:	mov	r1, r4
   2e4c0:	bl	110e8 <myhtml_queue_add@plt>
   2e4c4:	cmp	r0, #0
   2e4c8:	bne	2e4ec <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x74>
   2e4cc:	ldr	r0, [r5, #8]
   2e4d0:	ldr	r1, [r0, #16]
   2e4d4:	bl	11724 <myhtml_token_attr_create@plt>
   2e4d8:	cmp	r0, #0
   2e4dc:	str	r0, [r5, #56]	; 0x38
   2e4e0:	beq	2e4ec <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x74>
   2e4e4:	mov	r0, r4
   2e4e8:	pop	{r4, r5, fp, pc}
   2e4ec:	mov	r0, #69	; 0x45
   2e4f0:	mov	r4, #0
   2e4f4:	str	r0, [r5, #160]	; 0xa0
   2e4f8:	mov	r0, r4
   2e4fc:	pop	{r4, r5, fp, pc}

0002e500 <myhtml_tokenizer_end_state_after_attribute_value_quoted@@Base>:
   2e500:	push	{r4, r5, fp, lr}
   2e504:	add	fp, sp, #8
   2e508:	mov	r2, r1
   2e50c:	mov	r5, r0
   2e510:	ldr	r0, [r0, #192]	; 0xc0
   2e514:	ldr	r1, [fp, #8]
   2e518:	mov	r4, r3
   2e51c:	ldr	ip, [r2, #24]
   2e520:	ldr	r3, [r2, #32]
   2e524:	add	r1, r0, r1
   2e528:	add	r0, r0, r4
   2e52c:	sub	r1, r1, r3
   2e530:	sub	r0, r0, ip
   2e534:	str	r1, [r2, #36]	; 0x24
   2e538:	str	r0, [r2, #28]
   2e53c:	mov	r0, r5
   2e540:	mov	r1, r4
   2e544:	bl	110e8 <myhtml_queue_add@plt>
   2e548:	cmp	r0, #0
   2e54c:	movne	r0, #69	; 0x45
   2e550:	movne	r4, #0
   2e554:	strne	r0, [r5, #160]	; 0xa0
   2e558:	mov	r0, r4
   2e55c:	pop	{r4, r5, fp, pc}

0002e560 <myhtml_tokenizer_end_state_comment_start@@Base>:
   2e560:	push	{r4, r5, fp, lr}
   2e564:	add	fp, sp, #8
   2e568:	mov	r2, r1
   2e56c:	mov	r5, r0
   2e570:	ldr	r0, [r0, #192]	; 0xc0
   2e574:	ldr	r1, [fp, #8]
   2e578:	mov	r4, r3
   2e57c:	ldr	ip, [r2, #24]
   2e580:	ldr	r3, [r2, #32]
   2e584:	add	r1, r0, r1
   2e588:	add	r0, r0, r4
   2e58c:	sub	r1, r1, r3
   2e590:	sub	r0, r0, ip
   2e594:	str	r1, [r2, #36]	; 0x24
   2e598:	str	r0, [r2, #28]
   2e59c:	mov	r0, r5
   2e5a0:	mov	r1, r4
   2e5a4:	bl	110e8 <myhtml_queue_add@plt>
   2e5a8:	cmp	r0, #0
   2e5ac:	movne	r0, #69	; 0x45
   2e5b0:	movne	r4, #0
   2e5b4:	strne	r0, [r5, #160]	; 0xa0
   2e5b8:	mov	r0, r4
   2e5bc:	pop	{r4, r5, fp, pc}

0002e5c0 <myhtml_tokenizer_end_state_comment_start_dash@@Base>:
   2e5c0:	push	{r4, r5, fp, lr}
   2e5c4:	add	fp, sp, #8
   2e5c8:	mov	r2, r1
   2e5cc:	mov	r5, r0
   2e5d0:	ldr	r0, [r0, #192]	; 0xc0
   2e5d4:	ldr	r1, [fp, #8]
   2e5d8:	mov	r4, r3
   2e5dc:	ldr	ip, [r2, #24]
   2e5e0:	ldr	r3, [r2, #32]
   2e5e4:	add	r1, r0, r1
   2e5e8:	add	r0, r0, r4
   2e5ec:	sub	r1, r1, r3
   2e5f0:	sub	r0, r0, ip
   2e5f4:	str	r1, [r2, #36]	; 0x24
   2e5f8:	str	r0, [r2, #28]
   2e5fc:	mov	r0, r5
   2e600:	mov	r1, r4
   2e604:	bl	110e8 <myhtml_queue_add@plt>
   2e608:	cmp	r0, #0
   2e60c:	movne	r0, #69	; 0x45
   2e610:	movne	r4, #0
   2e614:	strne	r0, [r5, #160]	; 0xa0
   2e618:	mov	r0, r4
   2e61c:	pop	{r4, r5, fp, pc}

0002e620 <myhtml_tokenizer_end_state_comment@@Base>:
   2e620:	push	{r4, r5, fp, lr}
   2e624:	add	fp, sp, #8
   2e628:	mov	r2, r1
   2e62c:	mov	r5, r0
   2e630:	ldr	r0, [r0, #192]	; 0xc0
   2e634:	ldr	r1, [fp, #8]
   2e638:	mov	r4, r3
   2e63c:	ldr	ip, [r2, #24]
   2e640:	ldr	r3, [r2, #32]
   2e644:	add	r1, r0, r1
   2e648:	add	r0, r0, r4
   2e64c:	sub	r1, r1, r3
   2e650:	sub	r0, r0, ip
   2e654:	str	r1, [r2, #36]	; 0x24
   2e658:	str	r0, [r2, #28]
   2e65c:	mov	r0, r5
   2e660:	mov	r1, r4
   2e664:	bl	110e8 <myhtml_queue_add@plt>
   2e668:	cmp	r0, #0
   2e66c:	movne	r0, #69	; 0x45
   2e670:	movne	r4, #0
   2e674:	strne	r0, [r5, #160]	; 0xa0
   2e678:	mov	r0, r4
   2e67c:	pop	{r4, r5, fp, pc}

0002e680 <myhtml_tokenizer_end_state_comment_end@@Base>:
   2e680:	push	{r4, r5, r6, sl, fp, lr}
   2e684:	add	fp, sp, #16
   2e688:	mov	r2, r1
   2e68c:	mov	r6, r0
   2e690:	ldr	r0, [r0, #192]	; 0xc0
   2e694:	ldr	r1, [fp, #8]
   2e698:	mov	r4, r3
   2e69c:	ldr	r3, [r2, #24]
   2e6a0:	ldr	r5, [r2, #32]
   2e6a4:	add	r1, r0, r1
   2e6a8:	add	r0, r0, r4
   2e6ac:	sub	r0, r0, r3
   2e6b0:	sub	r1, r1, r5
   2e6b4:	cmp	r0, #3
   2e6b8:	str	r1, [r2, #36]	; 0x24
   2e6bc:	str	r0, [r2, #28]
   2e6c0:	bcc	2e6e8 <myhtml_tokenizer_end_state_comment_end@@Base+0x68>
   2e6c4:	sub	r0, r0, #2
   2e6c8:	mov	r1, r4
   2e6cc:	str	r0, [r2, #28]
   2e6d0:	mov	r0, r6
   2e6d4:	bl	110e8 <myhtml_queue_add@plt>
   2e6d8:	cmp	r0, #0
   2e6dc:	movne	r0, #69	; 0x45
   2e6e0:	movne	r4, #0
   2e6e4:	strne	r0, [r6, #160]	; 0xa0
   2e6e8:	mov	r0, r4
   2e6ec:	pop	{r4, r5, r6, sl, fp, pc}

0002e6f0 <myhtml_tokenizer_end_state_comment_end_dash@@Base>:
   2e6f0:	push	{r4, r5, fp, lr}
   2e6f4:	add	fp, sp, #8
   2e6f8:	mov	r2, r1
   2e6fc:	mov	r5, r0
   2e700:	ldr	r0, [r0, #192]	; 0xc0
   2e704:	ldr	r1, [fp, #8]
   2e708:	mov	r4, r3
   2e70c:	ldr	ip, [r2, #24]
   2e710:	ldr	r3, [r2, #32]
   2e714:	add	r1, r0, r1
   2e718:	add	r0, r0, r4
   2e71c:	sub	r1, r1, r3
   2e720:	sub	r0, r0, ip
   2e724:	str	r1, [r2, #36]	; 0x24
   2e728:	str	r0, [r2, #28]
   2e72c:	mov	r0, r5
   2e730:	mov	r1, r4
   2e734:	bl	110e8 <myhtml_queue_add@plt>
   2e738:	cmp	r0, #0
   2e73c:	movne	r0, #69	; 0x45
   2e740:	movne	r4, #0
   2e744:	strne	r0, [r5, #160]	; 0xa0
   2e748:	mov	r0, r4
   2e74c:	pop	{r4, r5, fp, pc}

0002e750 <myhtml_tokenizer_end_state_comment_end_bang@@Base>:
   2e750:	push	{r4, r5, fp, lr}
   2e754:	add	fp, sp, #8
   2e758:	mov	r2, r1
   2e75c:	mov	r5, r0
   2e760:	ldr	r0, [r0, #192]	; 0xc0
   2e764:	ldr	r1, [fp, #8]
   2e768:	mov	r4, r3
   2e76c:	ldr	ip, [r2, #24]
   2e770:	ldr	r3, [r2, #32]
   2e774:	add	r1, r0, r1
   2e778:	add	r0, r0, r4
   2e77c:	sub	r1, r1, r3
   2e780:	sub	r0, r0, ip
   2e784:	str	r1, [r2, #36]	; 0x24
   2e788:	str	r0, [r2, #28]
   2e78c:	mov	r0, r5
   2e790:	mov	r1, r4
   2e794:	bl	110e8 <myhtml_queue_add@plt>
   2e798:	cmp	r0, #0
   2e79c:	movne	r0, #69	; 0x45
   2e7a0:	movne	r4, #0
   2e7a4:	strne	r0, [r5, #160]	; 0xa0
   2e7a8:	mov	r0, r4
   2e7ac:	pop	{r4, r5, fp, pc}

0002e7b0 <myhtml_tokenizer_end_state_bogus_comment@@Base>:
   2e7b0:	push	{r4, r5, fp, lr}
   2e7b4:	add	fp, sp, #8
   2e7b8:	mov	r2, r1
   2e7bc:	mov	r5, r0
   2e7c0:	ldr	r0, [r0, #192]	; 0xc0
   2e7c4:	ldr	r1, [fp, #8]
   2e7c8:	mov	r4, r3
   2e7cc:	ldr	ip, [r2, #24]
   2e7d0:	ldr	r3, [r2, #32]
   2e7d4:	add	r1, r0, r1
   2e7d8:	add	r0, r0, r4
   2e7dc:	sub	r1, r1, r3
   2e7e0:	sub	r0, r0, ip
   2e7e4:	str	r1, [r2, #36]	; 0x24
   2e7e8:	str	r0, [r2, #28]
   2e7ec:	mov	r0, r5
   2e7f0:	mov	r1, r4
   2e7f4:	bl	110e8 <myhtml_queue_add@plt>
   2e7f8:	cmp	r0, #0
   2e7fc:	movne	r0, #69	; 0x45
   2e800:	movne	r4, #0
   2e804:	strne	r0, [r5, #160]	; 0xa0
   2e808:	mov	r0, r4
   2e80c:	pop	{r4, r5, fp, pc}

0002e810 <myhtml_tokenizer_end_state_cdata_section@@Base>:
   2e810:	push	{r4, r5, r6, sl, fp, lr}
   2e814:	add	fp, sp, #16
   2e818:	mov	r2, r1
   2e81c:	mov	r6, r0
   2e820:	ldr	r0, [r0, #192]	; 0xc0
   2e824:	ldr	r1, [fp, #8]
   2e828:	mov	r4, r3
   2e82c:	ldr	r3, [r2, #24]
   2e830:	ldr	r5, [r2, #32]
   2e834:	add	r1, r0, r1
   2e838:	add	r0, r0, r4
   2e83c:	sub	r1, r1, r5
   2e840:	subs	r0, r0, r3
   2e844:	str	r1, [r2, #36]	; 0x24
   2e848:	str	r0, [r2, #28]
   2e84c:	beq	2e86c <myhtml_tokenizer_end_state_cdata_section@@Base+0x5c>
   2e850:	mov	r0, r6
   2e854:	mov	r1, r4
   2e858:	bl	110e8 <myhtml_queue_add@plt>
   2e85c:	cmp	r0, #0
   2e860:	movne	r0, #69	; 0x45
   2e864:	movne	r4, #0
   2e868:	strne	r0, [r6, #160]	; 0xa0
   2e86c:	mov	r0, r4
   2e870:	pop	{r4, r5, r6, sl, fp, pc}

0002e874 <myhtml_tokenizer_end_state_rcdata@@Base>:
   2e874:	push	{r4, r5, fp, lr}
   2e878:	add	fp, sp, #8
   2e87c:	mov	r2, r1
   2e880:	mov	r5, r0
   2e884:	ldr	r0, [r0, #192]	; 0xc0
   2e888:	ldr	r1, [fp, #8]
   2e88c:	mov	r4, r3
   2e890:	ldr	r3, [r2, #32]
   2e894:	add	r0, r0, r1
   2e898:	ldr	r1, [r2, #24]
   2e89c:	sub	r3, r0, r3
   2e8a0:	str	r3, [r2, #36]	; 0x24
   2e8a4:	cmp	r0, r1
   2e8a8:	bls	2e8e4 <myhtml_tokenizer_end_state_rcdata@@Base+0x70>
   2e8ac:	mov	r3, #1
   2e8b0:	sub	r0, r0, r1
   2e8b4:	mov	r1, #0
   2e8b8:	str	r3, [r2]
   2e8bc:	str	r0, [r2, #28]
   2e8c0:	ldr	r0, [r2, #48]	; 0x30
   2e8c4:	orr	r0, r0, #16
   2e8c8:	str	r0, [r2, #48]	; 0x30
   2e8cc:	mov	r0, r5
   2e8d0:	bl	110e8 <myhtml_queue_add@plt>
   2e8d4:	cmp	r0, #0
   2e8d8:	movne	r0, #69	; 0x45
   2e8dc:	movne	r4, #0
   2e8e0:	strne	r0, [r5, #160]	; 0xa0
   2e8e4:	mov	r0, r4
   2e8e8:	pop	{r4, r5, fp, pc}

0002e8ec <myhtml_tokenizer_end_state_rcdata_less_than_sign@@Base>:
   2e8ec:	push	{r4, r5, r6, sl, fp, lr}
   2e8f0:	add	fp, sp, #16
   2e8f4:	sub	sp, sp, #8
   2e8f8:	mov	r6, r3
   2e8fc:	ldr	r3, [r0, #192]	; 0xc0
   2e900:	ldr	r4, [fp, #8]
   2e904:	ldr	r5, [r1, #32]
   2e908:	add	r4, r3, r4
   2e90c:	add	r3, r3, r6
   2e910:	sub	r5, r4, r5
   2e914:	str	r5, [r1, #36]	; 0x24
   2e918:	mov	r5, #16
   2e91c:	str	r5, [sp]
   2e920:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e924:	mov	r0, r6
   2e928:	sub	sp, fp, #16
   2e92c:	pop	{r4, r5, r6, sl, fp, pc}

0002e930 <myhtml_tokenizer_end_state_rcdata_end_tag_open@@Base>:
   2e930:	push	{r4, r5, r6, sl, fp, lr}
   2e934:	add	fp, sp, #16
   2e938:	sub	sp, sp, #8
   2e93c:	mov	r6, r3
   2e940:	ldr	r3, [r0, #192]	; 0xc0
   2e944:	ldr	r4, [fp, #8]
   2e948:	ldr	r5, [r1, #32]
   2e94c:	add	r4, r3, r4
   2e950:	add	r3, r3, r6
   2e954:	sub	r5, r4, r5
   2e958:	str	r5, [r1, #36]	; 0x24
   2e95c:	mov	r5, #16
   2e960:	str	r5, [sp]
   2e964:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e968:	mov	r0, r6
   2e96c:	sub	sp, fp, #16
   2e970:	pop	{r4, r5, r6, sl, fp, pc}

0002e974 <myhtml_tokenizer_end_state_rcdata_end_tag_name@@Base>:
   2e974:	push	{r4, r5, r6, sl, fp, lr}
   2e978:	add	fp, sp, #16
   2e97c:	sub	sp, sp, #8
   2e980:	mov	r6, r3
   2e984:	ldr	r3, [r0, #192]	; 0xc0
   2e988:	ldr	r4, [fp, #8]
   2e98c:	ldr	r5, [r1, #32]
   2e990:	add	r4, r3, r4
   2e994:	add	r3, r3, r6
   2e998:	sub	r5, r4, r5
   2e99c:	str	r5, [r1, #36]	; 0x24
   2e9a0:	mov	r5, #16
   2e9a4:	str	r5, [sp]
   2e9a8:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e9ac:	mov	r0, r6
   2e9b0:	sub	sp, fp, #16
   2e9b4:	pop	{r4, r5, r6, sl, fp, pc}

0002e9b8 <myhtml_tokenizer_end_state_rawtext@@Base>:
   2e9b8:	push	{r4, r5, r6, sl, fp, lr}
   2e9bc:	add	fp, sp, #16
   2e9c0:	sub	sp, sp, #8
   2e9c4:	mov	r6, r3
   2e9c8:	ldr	r3, [r0, #192]	; 0xc0
   2e9cc:	ldr	r4, [fp, #8]
   2e9d0:	ldr	r5, [r1, #32]
   2e9d4:	add	r4, r3, r4
   2e9d8:	add	r3, r3, r6
   2e9dc:	sub	r5, r4, r5
   2e9e0:	str	r5, [r1, #36]	; 0x24
   2e9e4:	mov	r5, #32
   2e9e8:	str	r5, [sp]
   2e9ec:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e9f0:	mov	r0, r6
   2e9f4:	sub	sp, fp, #16
   2e9f8:	pop	{r4, r5, r6, sl, fp, pc}

0002e9fc <myhtml_tokenizer_end_state_rawtext_less_than_sign@@Base>:
   2e9fc:	push	{r4, r5, r6, sl, fp, lr}
   2ea00:	add	fp, sp, #16
   2ea04:	sub	sp, sp, #8
   2ea08:	mov	r6, r3
   2ea0c:	ldr	r3, [r0, #192]	; 0xc0
   2ea10:	ldr	r4, [fp, #8]
   2ea14:	ldr	r5, [r1, #32]
   2ea18:	add	r4, r3, r4
   2ea1c:	add	r3, r3, r6
   2ea20:	sub	r5, r4, r5
   2ea24:	str	r5, [r1, #36]	; 0x24
   2ea28:	mov	r5, #32
   2ea2c:	str	r5, [sp]
   2ea30:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ea34:	mov	r0, r6
   2ea38:	sub	sp, fp, #16
   2ea3c:	pop	{r4, r5, r6, sl, fp, pc}

0002ea40 <myhtml_tokenizer_end_state_rawtext_end_tag_open@@Base>:
   2ea40:	push	{r4, r5, r6, sl, fp, lr}
   2ea44:	add	fp, sp, #16
   2ea48:	sub	sp, sp, #8
   2ea4c:	mov	r6, r3
   2ea50:	ldr	r3, [r0, #192]	; 0xc0
   2ea54:	ldr	r4, [fp, #8]
   2ea58:	ldr	r5, [r1, #32]
   2ea5c:	add	r4, r3, r4
   2ea60:	add	r3, r3, r6
   2ea64:	sub	r5, r4, r5
   2ea68:	str	r5, [r1, #36]	; 0x24
   2ea6c:	mov	r5, #32
   2ea70:	str	r5, [sp]
   2ea74:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ea78:	mov	r0, r6
   2ea7c:	sub	sp, fp, #16
   2ea80:	pop	{r4, r5, r6, sl, fp, pc}

0002ea84 <myhtml_tokenizer_end_state_rawtext_end_tag_name@@Base>:
   2ea84:	push	{r4, r5, r6, sl, fp, lr}
   2ea88:	add	fp, sp, #16
   2ea8c:	sub	sp, sp, #8
   2ea90:	mov	r6, r3
   2ea94:	ldr	r3, [r0, #192]	; 0xc0
   2ea98:	ldr	r4, [fp, #8]
   2ea9c:	ldr	r5, [r1, #32]
   2eaa0:	add	r4, r3, r4
   2eaa4:	add	r3, r3, r6
   2eaa8:	sub	r5, r4, r5
   2eaac:	str	r5, [r1, #36]	; 0x24
   2eab0:	mov	r5, #32
   2eab4:	str	r5, [sp]
   2eab8:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2eabc:	mov	r0, r6
   2eac0:	sub	sp, fp, #16
   2eac4:	pop	{r4, r5, r6, sl, fp, pc}

0002eac8 <myhtml_tokenizer_end_state_plaintext@@Base>:
   2eac8:	ldr	r0, [r0, #192]	; 0xc0
   2eacc:	ldr	r2, [sp]
   2ead0:	add	r0, r0, r2
   2ead4:	ldr	r2, [r1, #32]
   2ead8:	sub	r0, r0, r2
   2eadc:	str	r0, [r1, #36]	; 0x24
   2eae0:	mov	r0, r3
   2eae4:	bx	lr

0002eae8 <myhtml_tokenizer_end_state_doctype@@Base>:
   2eae8:	push	{r4, r5, r6, sl, fp, lr}
   2eaec:	add	fp, sp, #16
   2eaf0:	sub	sp, sp, #8
   2eaf4:	mov	r6, r3
   2eaf8:	ldr	r3, [r0, #192]	; 0xc0
   2eafc:	ldr	r4, [fp, #8]
   2eb00:	ldr	r5, [r1, #32]
   2eb04:	add	r4, r3, r4
   2eb08:	add	r3, r3, r6
   2eb0c:	sub	r5, r4, r5
   2eb10:	str	r5, [r1, #36]	; 0x24
   2eb14:	mov	r5, #32
   2eb18:	str	r5, [sp]
   2eb1c:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2eb20:	mov	r0, r6
   2eb24:	sub	sp, fp, #16
   2eb28:	pop	{r4, r5, r6, sl, fp, pc}

0002eb2c <myhtml_tokenizer_end_state_before_doctype_name@@Base>:
   2eb2c:	push	{r4, r5, fp, lr}
   2eb30:	add	fp, sp, #8
   2eb34:	mov	r2, r1
   2eb38:	mov	r5, r0
   2eb3c:	ldr	r0, [r0, #192]	; 0xc0
   2eb40:	ldr	r1, [fp, #8]
   2eb44:	mov	r4, r3
   2eb48:	add	r0, r0, r1
   2eb4c:	ldr	r1, [r2, #32]
   2eb50:	sub	r0, r0, r1
   2eb54:	mov	r1, r3
   2eb58:	str	r0, [r2, #36]	; 0x24
   2eb5c:	mov	r0, #1
   2eb60:	str	r0, [r5, #176]	; 0xb0
   2eb64:	mov	r0, r5
   2eb68:	bl	110e8 <myhtml_queue_add@plt>
   2eb6c:	cmp	r0, #0
   2eb70:	movne	r0, #69	; 0x45
   2eb74:	movne	r4, #0
   2eb78:	strne	r0, [r5, #160]	; 0xa0
   2eb7c:	mov	r0, r4
   2eb80:	pop	{r4, r5, fp, pc}

0002eb84 <myhtml_tokenizer_end_state_doctype_name@@Base>:
   2eb84:	push	{r4, r5, fp, lr}
   2eb88:	add	fp, sp, #8
   2eb8c:	mov	r2, r1
   2eb90:	mov	r5, r0
   2eb94:	ldr	r0, [r0, #192]	; 0xc0
   2eb98:	ldr	r1, [fp, #8]
   2eb9c:	mov	r4, r3
   2eba0:	ldr	r3, [r2, #32]
   2eba4:	add	r1, r0, r1
   2eba8:	add	r0, r0, r4
   2ebac:	sub	r1, r1, r3
   2ebb0:	str	r1, [r2, #36]	; 0x24
   2ebb4:	ldr	r1, [r5, #56]	; 0x38
   2ebb8:	ldr	r3, [r1, #48]	; 0x30
   2ebbc:	sub	r0, r0, r3
   2ebc0:	str	r0, [r1, #52]	; 0x34
   2ebc4:	mov	r0, r5
   2ebc8:	mov	r1, r4
   2ebcc:	bl	110e8 <myhtml_queue_add@plt>
   2ebd0:	cmp	r0, #0
   2ebd4:	movne	r0, #69	; 0x45
   2ebd8:	movne	r4, #0
   2ebdc:	strne	r0, [r5, #160]	; 0xa0
   2ebe0:	mov	r0, r4
   2ebe4:	pop	{r4, r5, fp, pc}

0002ebe8 <myhtml_tokenizer_end_state_after_doctype_name@@Base>:
   2ebe8:	push	{r4, r5, fp, lr}
   2ebec:	add	fp, sp, #8
   2ebf0:	mov	r2, r1
   2ebf4:	mov	r5, r0
   2ebf8:	ldr	r0, [r0, #192]	; 0xc0
   2ebfc:	ldr	r1, [fp, #8]
   2ec00:	mov	r4, r3
   2ec04:	add	r0, r0, r1
   2ec08:	ldr	r1, [r2, #32]
   2ec0c:	sub	r0, r0, r1
   2ec10:	mov	r1, r3
   2ec14:	str	r0, [r2, #36]	; 0x24
   2ec18:	mov	r0, r5
   2ec1c:	bl	110e8 <myhtml_queue_add@plt>
   2ec20:	cmp	r0, #0
   2ec24:	movne	r0, #69	; 0x45
   2ec28:	movne	r4, #0
   2ec2c:	strne	r0, [r5, #160]	; 0xa0
   2ec30:	mov	r0, r4
   2ec34:	pop	{r4, r5, fp, pc}

0002ec38 <myhtml_tokenizer_end_state_custom_after_doctype_name_a_z@@Base>:
   2ec38:	push	{r4, r5, fp, lr}
   2ec3c:	add	fp, sp, #8
   2ec40:	mov	r2, r1
   2ec44:	mov	r5, r0
   2ec48:	ldr	r0, [r0, #192]	; 0xc0
   2ec4c:	ldr	r1, [fp, #8]
   2ec50:	mov	r4, r3
   2ec54:	add	r0, r0, r1
   2ec58:	ldr	r1, [r2, #32]
   2ec5c:	sub	r0, r0, r1
   2ec60:	mov	r1, r3
   2ec64:	str	r0, [r2, #36]	; 0x24
   2ec68:	mov	r0, r5
   2ec6c:	bl	110e8 <myhtml_queue_add@plt>
   2ec70:	cmp	r0, #0
   2ec74:	movne	r0, #69	; 0x45
   2ec78:	movne	r4, #0
   2ec7c:	strne	r0, [r5, #160]	; 0xa0
   2ec80:	mov	r0, r4
   2ec84:	pop	{r4, r5, fp, pc}

0002ec88 <myhtml_tokenizer_end_state_before_doctype_public_identifier@@Base>:
   2ec88:	push	{r4, r5, fp, lr}
   2ec8c:	add	fp, sp, #8
   2ec90:	mov	r2, r1
   2ec94:	mov	r5, r0
   2ec98:	ldr	r0, [r0, #192]	; 0xc0
   2ec9c:	ldr	r1, [fp, #8]
   2eca0:	mov	r4, r3
   2eca4:	add	r0, r0, r1
   2eca8:	ldr	r1, [r2, #32]
   2ecac:	sub	r0, r0, r1
   2ecb0:	mov	r1, r3
   2ecb4:	str	r0, [r2, #36]	; 0x24
   2ecb8:	mov	r0, #1
   2ecbc:	str	r0, [r5, #176]	; 0xb0
   2ecc0:	mov	r0, r5
   2ecc4:	bl	110e8 <myhtml_queue_add@plt>
   2ecc8:	cmp	r0, #0
   2eccc:	movne	r0, #69	; 0x45
   2ecd0:	movne	r4, #0
   2ecd4:	strne	r0, [r5, #160]	; 0xa0
   2ecd8:	mov	r0, r4
   2ecdc:	pop	{r4, r5, fp, pc}

0002ece0 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@@Base>:
   2ece0:	push	{r4, r5, fp, lr}
   2ece4:	add	fp, sp, #8
   2ece8:	mov	r5, r0
   2ecec:	ldr	ip, [fp, #8]
   2ecf0:	ldr	r0, [r0, #192]	; 0xc0
   2ecf4:	mov	r2, r1
   2ecf8:	ldr	r1, [r1, #32]
   2ecfc:	mov	r4, r3
   2ed00:	add	r3, r0, ip
   2ed04:	cmp	ip, #0
   2ed08:	sub	r1, r3, r1
   2ed0c:	str	r1, [r2, #36]	; 0x24
   2ed10:	mov	r1, #1
   2ed14:	str	r1, [r5, #176]	; 0xb0
   2ed18:	ldrne	r1, [r5, #56]	; 0x38
   2ed1c:	ldrne	r3, [r1, #48]	; 0x30
   2ed20:	cmpne	r3, #0
   2ed24:	addne	r0, r0, r4
   2ed28:	subne	r0, r0, r3
   2ed2c:	strne	r0, [r1, #52]	; 0x34
   2ed30:	mov	r0, r5
   2ed34:	mov	r1, r4
   2ed38:	bl	110e8 <myhtml_queue_add@plt>
   2ed3c:	cmp	r0, #0
   2ed40:	movne	r0, #69	; 0x45
   2ed44:	movne	r4, #0
   2ed48:	strne	r0, [r5, #160]	; 0xa0
   2ed4c:	mov	r0, r4
   2ed50:	pop	{r4, r5, fp, pc}

0002ed54 <myhtml_tokenizer_end_state_doctype_public_identifier_single_quoted@@Base>:
   2ed54:	push	{r4, r5, r6, sl, fp, lr}
   2ed58:	add	fp, sp, #16
   2ed5c:	mov	r6, r3
   2ed60:	mov	r2, r1
   2ed64:	mov	r5, r0
   2ed68:	ldr	r3, [fp, #8]
   2ed6c:	ldr	r0, [r0, #192]	; 0xc0
   2ed70:	ldr	r4, [r2, #32]
   2ed74:	add	r1, r0, r3
   2ed78:	cmp	r3, #0
   2ed7c:	sub	r1, r1, r4
   2ed80:	str	r1, [r2, #36]	; 0x24
   2ed84:	mov	r1, #1
   2ed88:	str	r1, [r5, #176]	; 0xb0
   2ed8c:	add	r1, r0, r6
   2ed90:	ldrne	r3, [r5, #56]	; 0x38
   2ed94:	ldrne	r4, [r3, #48]	; 0x30
   2ed98:	cmpne	r4, #0
   2ed9c:	addne	r0, r1, r0
   2eda0:	subne	r0, r0, r4
   2eda4:	strne	r0, [r3, #52]	; 0x34
   2eda8:	mov	r0, r5
   2edac:	bl	110e8 <myhtml_queue_add@plt>
   2edb0:	cmp	r0, #0
   2edb4:	movne	r0, #69	; 0x45
   2edb8:	strne	r0, [r5, #160]	; 0xa0
   2edbc:	mov	r0, r6
   2edc0:	pop	{r4, r5, r6, sl, fp, pc}

0002edc4 <myhtml_tokenizer_end_state_after_doctype_public_identifier@@Base>:
   2edc4:	push	{r4, r5, fp, lr}
   2edc8:	add	fp, sp, #8
   2edcc:	mov	r2, r1
   2edd0:	mov	r5, r0
   2edd4:	ldr	r0, [r0, #192]	; 0xc0
   2edd8:	ldr	r1, [fp, #8]
   2eddc:	mov	r4, r3
   2ede0:	add	r0, r0, r1
   2ede4:	ldr	r1, [r2, #32]
   2ede8:	sub	r0, r0, r1
   2edec:	mov	r1, r3
   2edf0:	str	r0, [r2, #36]	; 0x24
   2edf4:	mov	r0, r5
   2edf8:	bl	110e8 <myhtml_queue_add@plt>
   2edfc:	cmp	r0, #0
   2ee00:	movne	r0, #69	; 0x45
   2ee04:	movne	r4, #0
   2ee08:	strne	r0, [r5, #160]	; 0xa0
   2ee0c:	mov	r0, r4
   2ee10:	pop	{r4, r5, fp, pc}

0002ee14 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@@Base>:
   2ee14:	push	{r4, r5, fp, lr}
   2ee18:	add	fp, sp, #8
   2ee1c:	mov	r5, r0
   2ee20:	ldr	ip, [fp, #8]
   2ee24:	ldr	r0, [r0, #192]	; 0xc0
   2ee28:	mov	r2, r1
   2ee2c:	ldr	r1, [r1, #32]
   2ee30:	mov	r4, r3
   2ee34:	add	r3, r0, ip
   2ee38:	cmp	ip, #0
   2ee3c:	sub	r1, r3, r1
   2ee40:	str	r1, [r2, #36]	; 0x24
   2ee44:	mov	r1, #1
   2ee48:	str	r1, [r5, #176]	; 0xb0
   2ee4c:	ldrne	r1, [r5, #56]	; 0x38
   2ee50:	ldrne	r3, [r1, #48]	; 0x30
   2ee54:	cmpne	r3, #0
   2ee58:	addne	r0, r0, r4
   2ee5c:	subne	r0, r0, r3
   2ee60:	strne	r0, [r1, #52]	; 0x34
   2ee64:	mov	r0, r5
   2ee68:	mov	r1, r4
   2ee6c:	bl	110e8 <myhtml_queue_add@plt>
   2ee70:	cmp	r0, #0
   2ee74:	movne	r0, #69	; 0x45
   2ee78:	movne	r4, #0
   2ee7c:	strne	r0, [r5, #160]	; 0xa0
   2ee80:	mov	r0, r4
   2ee84:	pop	{r4, r5, fp, pc}

0002ee88 <myhtml_tokenizer_end_state_doctype_system_identifier_single_quoted@@Base>:
   2ee88:	push	{r4, r5, r6, sl, fp, lr}
   2ee8c:	add	fp, sp, #16
   2ee90:	mov	r6, r3
   2ee94:	mov	r2, r1
   2ee98:	mov	r5, r0
   2ee9c:	ldr	r3, [fp, #8]
   2eea0:	ldr	r0, [r0, #192]	; 0xc0
   2eea4:	ldr	r4, [r2, #32]
   2eea8:	add	r1, r0, r3
   2eeac:	cmp	r3, #0
   2eeb0:	sub	r1, r1, r4
   2eeb4:	str	r1, [r2, #36]	; 0x24
   2eeb8:	mov	r1, #1
   2eebc:	str	r1, [r5, #176]	; 0xb0
   2eec0:	add	r1, r0, r6
   2eec4:	ldrne	r3, [r5, #56]	; 0x38
   2eec8:	ldrne	r4, [r3, #48]	; 0x30
   2eecc:	cmpne	r4, #0
   2eed0:	addne	r0, r1, r0
   2eed4:	subne	r0, r0, r4
   2eed8:	strne	r0, [r3, #52]	; 0x34
   2eedc:	mov	r0, r5
   2eee0:	bl	110e8 <myhtml_queue_add@plt>
   2eee4:	cmp	r0, #0
   2eee8:	movne	r0, #69	; 0x45
   2eeec:	strne	r0, [r5, #160]	; 0xa0
   2eef0:	mov	r0, r6
   2eef4:	pop	{r4, r5, r6, sl, fp, pc}

0002eef8 <myhtml_tokenizer_end_state_after_doctype_system_identifier@@Base>:
   2eef8:	push	{r4, r5, fp, lr}
   2eefc:	add	fp, sp, #8
   2ef00:	mov	r2, r1
   2ef04:	mov	r5, r0
   2ef08:	ldr	r0, [r0, #192]	; 0xc0
   2ef0c:	ldr	r1, [fp, #8]
   2ef10:	mov	r4, r3
   2ef14:	add	r0, r0, r1
   2ef18:	ldr	r1, [r2, #32]
   2ef1c:	sub	r0, r0, r1
   2ef20:	mov	r1, r3
   2ef24:	str	r0, [r2, #36]	; 0x24
   2ef28:	mov	r0, r5
   2ef2c:	bl	110e8 <myhtml_queue_add@plt>
   2ef30:	cmp	r0, #0
   2ef34:	movne	r0, #69	; 0x45
   2ef38:	movne	r4, #0
   2ef3c:	strne	r0, [r5, #160]	; 0xa0
   2ef40:	mov	r0, r4
   2ef44:	pop	{r4, r5, fp, pc}

0002ef48 <myhtml_tokenizer_end_state_bogus_doctype@@Base>:
   2ef48:	push	{r4, r5, fp, lr}
   2ef4c:	add	fp, sp, #8
   2ef50:	mov	r2, r1
   2ef54:	mov	r5, r0
   2ef58:	ldr	r0, [r0, #192]	; 0xc0
   2ef5c:	ldr	r1, [fp, #8]
   2ef60:	mov	r4, r3
   2ef64:	add	r0, r0, r1
   2ef68:	ldr	r1, [r2, #32]
   2ef6c:	sub	r0, r0, r1
   2ef70:	mov	r1, r3
   2ef74:	str	r0, [r2, #36]	; 0x24
   2ef78:	mov	r0, r5
   2ef7c:	bl	110e8 <myhtml_queue_add@plt>
   2ef80:	cmp	r0, #0
   2ef84:	movne	r0, #69	; 0x45
   2ef88:	movne	r4, #0
   2ef8c:	strne	r0, [r5, #160]	; 0xa0
   2ef90:	mov	r0, r4
   2ef94:	pop	{r4, r5, fp, pc}

0002ef98 <myhtml_tokenizer_end_state_script_data@@Base>:
   2ef98:	push	{r4, r5, r6, sl, fp, lr}
   2ef9c:	add	fp, sp, #16
   2efa0:	sub	sp, sp, #8
   2efa4:	mov	r6, r3
   2efa8:	ldr	r3, [r0, #192]	; 0xc0
   2efac:	ldr	r4, [fp, #8]
   2efb0:	ldr	r5, [r1, #32]
   2efb4:	add	r4, r3, r4
   2efb8:	add	r3, r3, r6
   2efbc:	sub	r5, r4, r5
   2efc0:	str	r5, [r1, #36]	; 0x24
   2efc4:	mov	r5, #64	; 0x40
   2efc8:	str	r5, [sp]
   2efcc:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2efd0:	mov	r0, r6
   2efd4:	sub	sp, fp, #16
   2efd8:	pop	{r4, r5, r6, sl, fp, pc}

0002efdc <myhtml_tokenizer_end_state_script_data_less_than_sign@@Base>:
   2efdc:	push	{r4, r5, r6, sl, fp, lr}
   2efe0:	add	fp, sp, #16
   2efe4:	sub	sp, sp, #8
   2efe8:	mov	r6, r3
   2efec:	ldr	r3, [r0, #192]	; 0xc0
   2eff0:	ldr	r4, [fp, #8]
   2eff4:	ldr	r5, [r1, #32]
   2eff8:	add	r4, r3, r4
   2effc:	add	r3, r3, r6
   2f000:	sub	r5, r4, r5
   2f004:	str	r5, [r1, #36]	; 0x24
   2f008:	mov	r5, #64	; 0x40
   2f00c:	str	r5, [sp]
   2f010:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f014:	mov	r0, r6
   2f018:	sub	sp, fp, #16
   2f01c:	pop	{r4, r5, r6, sl, fp, pc}

0002f020 <myhtml_tokenizer_end_state_script_data_end_tag_open@@Base>:
   2f020:	push	{r4, r5, r6, sl, fp, lr}
   2f024:	add	fp, sp, #16
   2f028:	sub	sp, sp, #8
   2f02c:	mov	r6, r3
   2f030:	ldr	r3, [r0, #192]	; 0xc0
   2f034:	ldr	r4, [fp, #8]
   2f038:	ldr	r5, [r1, #32]
   2f03c:	add	r4, r3, r4
   2f040:	add	r3, r3, r6
   2f044:	sub	r5, r4, r5
   2f048:	str	r5, [r1, #36]	; 0x24
   2f04c:	mov	r5, #64	; 0x40
   2f050:	str	r5, [sp]
   2f054:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f058:	mov	r0, r6
   2f05c:	sub	sp, fp, #16
   2f060:	pop	{r4, r5, r6, sl, fp, pc}

0002f064 <myhtml_tokenizer_end_state_script_data_end_tag_name@@Base>:
   2f064:	push	{r4, r5, r6, sl, fp, lr}
   2f068:	add	fp, sp, #16
   2f06c:	sub	sp, sp, #8
   2f070:	mov	r6, r3
   2f074:	ldr	r3, [r0, #192]	; 0xc0
   2f078:	ldr	r4, [fp, #8]
   2f07c:	ldr	r5, [r1, #32]
   2f080:	add	r4, r3, r4
   2f084:	add	r3, r3, r6
   2f088:	sub	r5, r4, r5
   2f08c:	str	r5, [r1, #36]	; 0x24
   2f090:	mov	r5, #64	; 0x40
   2f094:	str	r5, [sp]
   2f098:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f09c:	mov	r0, r6
   2f0a0:	sub	sp, fp, #16
   2f0a4:	pop	{r4, r5, r6, sl, fp, pc}

0002f0a8 <myhtml_tokenizer_end_state_script_data_escape_start@@Base>:
   2f0a8:	push	{r4, r5, r6, sl, fp, lr}
   2f0ac:	add	fp, sp, #16
   2f0b0:	sub	sp, sp, #8
   2f0b4:	mov	r6, r3
   2f0b8:	ldr	r3, [r0, #192]	; 0xc0
   2f0bc:	ldr	r4, [fp, #8]
   2f0c0:	ldr	r5, [r1, #32]
   2f0c4:	add	r4, r3, r4
   2f0c8:	add	r3, r3, r6
   2f0cc:	sub	r5, r4, r5
   2f0d0:	str	r5, [r1, #36]	; 0x24
   2f0d4:	mov	r5, #64	; 0x40
   2f0d8:	str	r5, [sp]
   2f0dc:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f0e0:	mov	r0, r6
   2f0e4:	sub	sp, fp, #16
   2f0e8:	pop	{r4, r5, r6, sl, fp, pc}

0002f0ec <myhtml_tokenizer_end_state_script_data_escape_start_dash@@Base>:
   2f0ec:	push	{r4, r5, r6, sl, fp, lr}
   2f0f0:	add	fp, sp, #16
   2f0f4:	sub	sp, sp, #8
   2f0f8:	mov	r6, r3
   2f0fc:	ldr	r3, [r0, #192]	; 0xc0
   2f100:	ldr	r4, [fp, #8]
   2f104:	ldr	r5, [r1, #32]
   2f108:	add	r4, r3, r4
   2f10c:	add	r3, r3, r6
   2f110:	sub	r5, r4, r5
   2f114:	str	r5, [r1, #36]	; 0x24
   2f118:	mov	r5, #64	; 0x40
   2f11c:	str	r5, [sp]
   2f120:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f124:	mov	r0, r6
   2f128:	sub	sp, fp, #16
   2f12c:	pop	{r4, r5, r6, sl, fp, pc}

0002f130 <myhtml_tokenizer_end_state_script_data_escaped@@Base>:
   2f130:	push	{r4, r5, r6, sl, fp, lr}
   2f134:	add	fp, sp, #16
   2f138:	sub	sp, sp, #8
   2f13c:	mov	r6, r3
   2f140:	ldr	r3, [r0, #192]	; 0xc0
   2f144:	ldr	r4, [fp, #8]
   2f148:	ldr	r5, [r1, #32]
   2f14c:	add	r4, r3, r4
   2f150:	add	r3, r3, r6
   2f154:	sub	r5, r4, r5
   2f158:	str	r5, [r1, #36]	; 0x24
   2f15c:	mov	r5, #64	; 0x40
   2f160:	str	r5, [sp]
   2f164:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f168:	mov	r0, r6
   2f16c:	sub	sp, fp, #16
   2f170:	pop	{r4, r5, r6, sl, fp, pc}

0002f174 <myhtml_tokenizer_end_state_script_data_escaped_dash@@Base>:
   2f174:	push	{r4, r5, r6, sl, fp, lr}
   2f178:	add	fp, sp, #16
   2f17c:	sub	sp, sp, #8
   2f180:	mov	r6, r3
   2f184:	ldr	r3, [r0, #192]	; 0xc0
   2f188:	ldr	r4, [fp, #8]
   2f18c:	ldr	r5, [r1, #32]
   2f190:	add	r4, r3, r4
   2f194:	add	r3, r3, r6
   2f198:	sub	r5, r4, r5
   2f19c:	str	r5, [r1, #36]	; 0x24
   2f1a0:	mov	r5, #64	; 0x40
   2f1a4:	str	r5, [sp]
   2f1a8:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f1ac:	mov	r0, r6
   2f1b0:	sub	sp, fp, #16
   2f1b4:	pop	{r4, r5, r6, sl, fp, pc}

0002f1b8 <myhtml_tokenizer_end_state_script_data_escaped_dash_dash@@Base>:
   2f1b8:	push	{r4, r5, r6, sl, fp, lr}
   2f1bc:	add	fp, sp, #16
   2f1c0:	sub	sp, sp, #8
   2f1c4:	mov	r6, r3
   2f1c8:	ldr	r3, [r0, #192]	; 0xc0
   2f1cc:	ldr	r4, [fp, #8]
   2f1d0:	ldr	r5, [r1, #32]
   2f1d4:	add	r4, r3, r4
   2f1d8:	add	r3, r3, r6
   2f1dc:	sub	r5, r4, r5
   2f1e0:	str	r5, [r1, #36]	; 0x24
   2f1e4:	mov	r5, #64	; 0x40
   2f1e8:	str	r5, [sp]
   2f1ec:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f1f0:	mov	r0, r6
   2f1f4:	sub	sp, fp, #16
   2f1f8:	pop	{r4, r5, r6, sl, fp, pc}

0002f1fc <myhtml_tokenizer_end_state_script_data_escaped_less_than_sign@@Base>:
   2f1fc:	push	{r4, r5, r6, sl, fp, lr}
   2f200:	add	fp, sp, #16
   2f204:	sub	sp, sp, #8
   2f208:	mov	r6, r3
   2f20c:	ldr	r3, [r0, #192]	; 0xc0
   2f210:	ldr	r4, [fp, #8]
   2f214:	ldr	r5, [r1, #32]
   2f218:	add	r4, r3, r4
   2f21c:	add	r3, r3, r6
   2f220:	sub	r5, r4, r5
   2f224:	str	r5, [r1, #36]	; 0x24
   2f228:	mov	r5, #64	; 0x40
   2f22c:	str	r5, [sp]
   2f230:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f234:	mov	r0, r6
   2f238:	sub	sp, fp, #16
   2f23c:	pop	{r4, r5, r6, sl, fp, pc}

0002f240 <myhtml_tokenizer_end_state_script_data_escaped_end_tag_open@@Base>:
   2f240:	push	{r4, r5, r6, sl, fp, lr}
   2f244:	add	fp, sp, #16
   2f248:	sub	sp, sp, #8
   2f24c:	mov	r6, r3
   2f250:	ldr	r3, [r0, #192]	; 0xc0
   2f254:	ldr	r4, [fp, #8]
   2f258:	ldr	r5, [r1, #32]
   2f25c:	add	r4, r3, r4
   2f260:	add	r3, r3, r6
   2f264:	sub	r5, r4, r5
   2f268:	str	r5, [r1, #36]	; 0x24
   2f26c:	mov	r5, #64	; 0x40
   2f270:	str	r5, [sp]
   2f274:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f278:	mov	r0, r6
   2f27c:	sub	sp, fp, #16
   2f280:	pop	{r4, r5, r6, sl, fp, pc}

0002f284 <myhtml_tokenizer_end_state_script_data_escaped_end_tag_name@@Base>:
   2f284:	push	{r4, r5, r6, sl, fp, lr}
   2f288:	add	fp, sp, #16
   2f28c:	sub	sp, sp, #8
   2f290:	mov	r6, r3
   2f294:	ldr	r3, [r0, #192]	; 0xc0
   2f298:	ldr	r4, [fp, #8]
   2f29c:	ldr	r5, [r1, #32]
   2f2a0:	add	r4, r3, r4
   2f2a4:	add	r3, r3, r6
   2f2a8:	sub	r5, r4, r5
   2f2ac:	str	r5, [r1, #36]	; 0x24
   2f2b0:	mov	r5, #64	; 0x40
   2f2b4:	str	r5, [sp]
   2f2b8:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f2bc:	mov	r0, r6
   2f2c0:	sub	sp, fp, #16
   2f2c4:	pop	{r4, r5, r6, sl, fp, pc}

0002f2c8 <myhtml_tokenizer_end_state_script_data_double_escape_start@@Base>:
   2f2c8:	push	{r4, r5, r6, sl, fp, lr}
   2f2cc:	add	fp, sp, #16
   2f2d0:	sub	sp, sp, #8
   2f2d4:	mov	r6, r3
   2f2d8:	ldr	r3, [r0, #192]	; 0xc0
   2f2dc:	ldr	r4, [fp, #8]
   2f2e0:	ldr	r5, [r1, #32]
   2f2e4:	add	r4, r3, r4
   2f2e8:	add	r3, r3, r6
   2f2ec:	sub	r5, r4, r5
   2f2f0:	str	r5, [r1, #36]	; 0x24
   2f2f4:	mov	r5, #64	; 0x40
   2f2f8:	str	r5, [sp]
   2f2fc:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f300:	mov	r0, r6
   2f304:	sub	sp, fp, #16
   2f308:	pop	{r4, r5, r6, sl, fp, pc}

0002f30c <myhtml_tokenizer_end_state_script_data_double_escaped@@Base>:
   2f30c:	push	{r4, r5, r6, sl, fp, lr}
   2f310:	add	fp, sp, #16
   2f314:	sub	sp, sp, #8
   2f318:	mov	r6, r3
   2f31c:	ldr	r3, [r0, #192]	; 0xc0
   2f320:	ldr	r4, [fp, #8]
   2f324:	ldr	r5, [r1, #32]
   2f328:	add	r4, r3, r4
   2f32c:	add	r3, r3, r6
   2f330:	sub	r5, r4, r5
   2f334:	str	r5, [r1, #36]	; 0x24
   2f338:	mov	r5, #64	; 0x40
   2f33c:	str	r5, [sp]
   2f340:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f344:	mov	r0, r6
   2f348:	sub	sp, fp, #16
   2f34c:	pop	{r4, r5, r6, sl, fp, pc}

0002f350 <myhtml_tokenizer_end_state_script_data_double_escaped_dash@@Base>:
   2f350:	push	{r4, r5, r6, sl, fp, lr}
   2f354:	add	fp, sp, #16
   2f358:	sub	sp, sp, #8
   2f35c:	mov	r6, r3
   2f360:	ldr	r3, [r0, #192]	; 0xc0
   2f364:	ldr	r4, [fp, #8]
   2f368:	ldr	r5, [r1, #32]
   2f36c:	add	r4, r3, r4
   2f370:	add	r3, r3, r6
   2f374:	sub	r5, r4, r5
   2f378:	str	r5, [r1, #36]	; 0x24
   2f37c:	mov	r5, #64	; 0x40
   2f380:	str	r5, [sp]
   2f384:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f388:	mov	r0, r6
   2f38c:	sub	sp, fp, #16
   2f390:	pop	{r4, r5, r6, sl, fp, pc}

0002f394 <myhtml_tokenizer_end_state_script_data_double_escaped_dash_dash@@Base>:
   2f394:	push	{r4, r5, r6, sl, fp, lr}
   2f398:	add	fp, sp, #16
   2f39c:	sub	sp, sp, #8
   2f3a0:	mov	r6, r3
   2f3a4:	ldr	r3, [r0, #192]	; 0xc0
   2f3a8:	ldr	r4, [fp, #8]
   2f3ac:	ldr	r5, [r1, #32]
   2f3b0:	add	r4, r3, r4
   2f3b4:	add	r3, r3, r6
   2f3b8:	sub	r5, r4, r5
   2f3bc:	str	r5, [r1, #36]	; 0x24
   2f3c0:	mov	r5, #64	; 0x40
   2f3c4:	str	r5, [sp]
   2f3c8:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f3cc:	mov	r0, r6
   2f3d0:	sub	sp, fp, #16
   2f3d4:	pop	{r4, r5, r6, sl, fp, pc}

0002f3d8 <myhtml_tokenizer_end_state_script_data_double_escaped_less_than_sign@@Base>:
   2f3d8:	push	{r4, r5, r6, sl, fp, lr}
   2f3dc:	add	fp, sp, #16
   2f3e0:	sub	sp, sp, #8
   2f3e4:	mov	r6, r3
   2f3e8:	ldr	r3, [r0, #192]	; 0xc0
   2f3ec:	ldr	r4, [fp, #8]
   2f3f0:	ldr	r5, [r1, #32]
   2f3f4:	add	r4, r3, r4
   2f3f8:	add	r3, r3, r6
   2f3fc:	sub	r5, r4, r5
   2f400:	str	r5, [r1, #36]	; 0x24
   2f404:	mov	r5, #64	; 0x40
   2f408:	str	r5, [sp]
   2f40c:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f410:	mov	r0, r6
   2f414:	sub	sp, fp, #16
   2f418:	pop	{r4, r5, r6, sl, fp, pc}

0002f41c <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>:
   2f41c:	push	{r4, r5, r6, sl, fp, lr}
   2f420:	add	fp, sp, #16
   2f424:	sub	sp, sp, #8
   2f428:	mov	r6, r3
   2f42c:	ldr	r3, [r0, #192]	; 0xc0
   2f430:	ldr	r4, [fp, #8]
   2f434:	ldr	r5, [r1, #32]
   2f438:	add	r4, r3, r4
   2f43c:	add	r3, r3, r6
   2f440:	sub	r5, r4, r5
   2f444:	str	r5, [r1, #36]	; 0x24
   2f448:	mov	r5, #64	; 0x40
   2f44c:	str	r5, [sp]
   2f450:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f454:	mov	r0, r6
   2f458:	sub	sp, fp, #16
   2f45c:	pop	{r4, r5, r6, sl, fp, pc}

0002f460 <myhtml_tokenizer_end_state_parse_error_stop@@Base>:
   2f460:	ldr	r0, [sp]
   2f464:	bx	lr

0002f468 <myhtml_tokenizer_state_script_data@@Base>:
   2f468:	push	{fp, lr}
   2f46c:	mov	fp, sp
   2f470:	ldr	ip, [fp, #8]
   2f474:	mov	lr, r3
   2f478:	cmp	r3, ip
   2f47c:	bcs	2f498 <myhtml_tokenizer_state_script_data@@Base+0x30>
   2f480:	ldrb	r3, [r2, lr]
   2f484:	cmp	r3, #60	; 0x3c
   2f488:	beq	2f4a0 <myhtml_tokenizer_state_script_data@@Base+0x38>
   2f48c:	add	lr, lr, #1
   2f490:	cmp	lr, ip
   2f494:	bcc	2f480 <myhtml_tokenizer_state_script_data@@Base+0x18>
   2f498:	mov	r0, lr
   2f49c:	pop	{fp, pc}
   2f4a0:	ldr	r2, [r0, #192]	; 0xc0
   2f4a4:	add	r2, r2, lr
   2f4a8:	add	lr, lr, #1
   2f4ac:	str	r2, [r1, #32]
   2f4b0:	mov	r1, #16
   2f4b4:	str	r1, [r0, #160]	; 0xa0
   2f4b8:	mov	r0, lr
   2f4bc:	pop	{fp, pc}

0002f4c0 <myhtml_tokenizer_state_script_data_less_than_sign@@Base>:
   2f4c0:	ldrb	r2, [r2, r3]
   2f4c4:	cmp	r2, #33	; 0x21
   2f4c8:	beq	2f4e8 <myhtml_tokenizer_state_script_data_less_than_sign@@Base+0x28>
   2f4cc:	cmp	r2, #47	; 0x2f
   2f4d0:	mov	r1, #5
   2f4d4:	addeq	r3, r3, #1
   2f4d8:	moveq	r1, #17
   2f4dc:	str	r1, [r0, #160]	; 0xa0
   2f4e0:	mov	r0, r3
   2f4e4:	bx	lr
   2f4e8:	add	r3, r3, #1
   2f4ec:	mov	r1, #19
   2f4f0:	str	r1, [r0, #160]	; 0xa0
   2f4f4:	mov	r0, r3
   2f4f8:	bx	lr

0002f4fc <myhtml_tokenizer_state_script_data_escape_start@@Base>:
   2f4fc:	ldrb	r1, [r2, r3]
   2f500:	mov	r2, #5
   2f504:	cmp	r1, #45	; 0x2d
   2f508:	movweq	r2, #20
   2f50c:	addeq	r3, r3, #1
   2f510:	str	r2, [r0, #160]	; 0xa0
   2f514:	mov	r0, r3
   2f518:	bx	lr

0002f51c <myhtml_tokenizer_state_script_data_escape_start_dash@@Base>:
   2f51c:	ldrb	r1, [r2, r3]
   2f520:	mov	r2, #5
   2f524:	cmp	r1, #45	; 0x2d
   2f528:	movweq	r2, #23
   2f52c:	addeq	r3, r3, #1
   2f530:	str	r2, [r0, #160]	; 0xa0
   2f534:	mov	r0, r3
   2f538:	bx	lr

0002f53c <myhtml_tokenizer_state_script_data_end_tag_open@@Base>:
   2f53c:	ldrb	r2, [r2, r3]
   2f540:	mov	ip, #5
   2f544:	and	r2, r2, #223	; 0xdf
   2f548:	sub	r2, r2, #65	; 0x41
   2f54c:	uxtb	r2, r2
   2f550:	cmp	r2, #25
   2f554:	ldrls	r2, [r0, #192]	; 0xc0
   2f558:	movls	ip, #18
   2f55c:	addls	r2, r2, r3
   2f560:	strls	r2, [r1, #12]
   2f564:	str	ip, [r0, #160]	; 0xa0
   2f568:	mov	r0, r3
   2f56c:	bx	lr

0002f570 <myhtml_tokenizer_state_script_data_end_tag_name@@Base>:
   2f570:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2f574:	add	fp, sp, #24
   2f578:	sub	sp, sp, #8
   2f57c:	mov	r5, r0
   2f580:	ldr	r0, [fp, #8]
   2f584:	mov	r4, r3
   2f588:	cmp	r3, r0
   2f58c:	bcs	2f6c8 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x158>
   2f590:	mov	r6, r2
   2f594:	mov	r7, r1
   2f598:	add	r4, r4, #1
   2f59c:	add	r1, r6, r4
   2f5a0:	ldrb	r1, [r1, #-1]
   2f5a4:	sub	r2, r1, #9
   2f5a8:	cmp	r2, #53	; 0x35
   2f5ac:	bhi	2f694 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x124>
   2f5b0:	add	r3, pc, #4
   2f5b4:	ldr	r2, [r3, r2, lsl #2]
   2f5b8:	add	pc, r3, r2
   2f5bc:	andeq	r0, r0, r0, lsr r1
   2f5c0:	andeq	r0, r0, r0, lsr r1
   2f5c4:	ldrdeq	r0, [r0], -r8
   2f5c8:	andeq	r0, r0, r0, lsr r1
   2f5cc:	andeq	r0, r0, r0, lsr r1
   2f5d0:	ldrdeq	r0, [r0], -r8
   2f5d4:	ldrdeq	r0, [r0], -r8
   2f5d8:	ldrdeq	r0, [r0], -r8
   2f5dc:	ldrdeq	r0, [r0], -r8
   2f5e0:	ldrdeq	r0, [r0], -r8
   2f5e4:	ldrdeq	r0, [r0], -r8
   2f5e8:	ldrdeq	r0, [r0], -r8
   2f5ec:	ldrdeq	r0, [r0], -r8
   2f5f0:	ldrdeq	r0, [r0], -r8
   2f5f4:	ldrdeq	r0, [r0], -r8
   2f5f8:	ldrdeq	r0, [r0], -r8
   2f5fc:	ldrdeq	r0, [r0], -r8
   2f600:	ldrdeq	r0, [r0], -r8
   2f604:	ldrdeq	r0, [r0], -r8
   2f608:	ldrdeq	r0, [r0], -r8
   2f60c:	ldrdeq	r0, [r0], -r8
   2f610:	ldrdeq	r0, [r0], -r8
   2f614:	ldrdeq	r0, [r0], -r8
   2f618:	andeq	r0, r0, r0, lsr r1
   2f61c:	ldrdeq	r0, [r0], -r8
   2f620:	ldrdeq	r0, [r0], -r8
   2f624:	ldrdeq	r0, [r0], -r8
   2f628:	ldrdeq	r0, [r0], -r8
   2f62c:	ldrdeq	r0, [r0], -r8
   2f630:	ldrdeq	r0, [r0], -r8
   2f634:	ldrdeq	r0, [r0], -r8
   2f638:	ldrdeq	r0, [r0], -r8
   2f63c:	ldrdeq	r0, [r0], -r8
   2f640:	ldrdeq	r0, [r0], -r8
   2f644:	ldrdeq	r0, [r0], -r8
   2f648:	ldrdeq	r0, [r0], -r8
   2f64c:	ldrdeq	r0, [r0], -r8
   2f650:	ldrdeq	r0, [r0], -r8
   2f654:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2f658:	ldrdeq	r0, [r0], -r8
   2f65c:	ldrdeq	r0, [r0], -r8
   2f660:	ldrdeq	r0, [r0], -r8
   2f664:	ldrdeq	r0, [r0], -r8
   2f668:	ldrdeq	r0, [r0], -r8
   2f66c:	ldrdeq	r0, [r0], -r8
   2f670:	ldrdeq	r0, [r0], -r8
   2f674:	ldrdeq	r0, [r0], -r8
   2f678:	ldrdeq	r0, [r0], -r8
   2f67c:	ldrdeq	r0, [r0], -r8
   2f680:	ldrdeq	r0, [r0], -r8
   2f684:	ldrdeq	r0, [r0], -r8
   2f688:	ldrdeq	r0, [r0], -r8
   2f68c:	ldrdeq	r0, [r0], -r8
   2f690:	andeq	r0, r0, r0, ror r2
   2f694:	sub	r2, r1, #97	; 0x61
   2f698:	uxtb	r2, r2
   2f69c:	cmp	r2, #26
   2f6a0:	bcc	2f6b4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x144>
   2f6a4:	sub	r1, r1, #65	; 0x41
   2f6a8:	uxtb	r1, r1
   2f6ac:	cmp	r1, #26
   2f6b0:	bcs	2f6d4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x164>
   2f6b4:	add	r1, r4, #1
   2f6b8:	cmp	r4, r0
   2f6bc:	mov	r4, r1
   2f6c0:	bcc	2f59c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2c>
   2f6c4:	sub	r4, r1, #1
   2f6c8:	mov	r0, r4
   2f6cc:	sub	sp, fp, #24
   2f6d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f6d4:	mov	r0, #5
   2f6d8:	sub	r4, r4, #1
   2f6dc:	str	r0, [r5, #160]	; 0xa0
   2f6e0:	mov	r0, r4
   2f6e4:	sub	sp, fp, #24
   2f6e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f6ec:	ldr	r8, [r7, #12]
   2f6f0:	ldr	r0, [r5, #192]	; 0xc0
   2f6f4:	sub	r0, r0, r8
   2f6f8:	add	r0, r0, r4
   2f6fc:	cmp	r0, #7
   2f700:	bne	2f86c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2fc>
   2f704:	mov	r0, r5
   2f708:	mov	r1, r8
   2f70c:	mov	r2, #6
   2f710:	bl	10f8c <myhtml_tree_incomming_buffer_make_data@plt>
   2f714:	ldr	r1, [pc, #516]	; 2f920 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x3b0>
   2f718:	mov	r2, #6
   2f71c:	add	r1, pc, r1
   2f720:	bl	11298 <mycore_strncasecmp@plt>
   2f724:	mov	r1, #5
   2f728:	cmp	r0, #0
   2f72c:	bne	2f77c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x20c>
   2f730:	ldr	r0, [r5, #192]	; 0xc0
   2f734:	mov	r1, #64	; 0x40
   2f738:	mov	r2, r6
   2f73c:	str	r1, [sp]
   2f740:	mov	r1, r7
   2f744:	add	r0, r0, r4
   2f748:	sub	r3, r0, #9
   2f74c:	mov	r0, r5
   2f750:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f754:	cmp	r0, #0
   2f758:	beq	2f8f4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x384>
   2f75c:	mov	r1, #6
   2f760:	str	r8, [r0, #24]
   2f764:	str	r1, [r0, #28]
   2f768:	mov	r1, #112	; 0x70
   2f76c:	str	r1, [r0]
   2f770:	mov	r1, #1
   2f774:	str	r1, [r0, #48]	; 0x30
   2f778:	mov	r1, #33	; 0x21
   2f77c:	str	r1, [r5, #160]	; 0xa0
   2f780:	mov	r0, r4
   2f784:	sub	sp, fp, #24
   2f788:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f78c:	ldr	r8, [r7, #12]
   2f790:	ldr	r0, [r5, #192]	; 0xc0
   2f794:	sub	r0, r0, r8
   2f798:	add	r0, r0, r4
   2f79c:	cmp	r0, #7
   2f7a0:	bne	2f86c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2fc>
   2f7a4:	mov	r0, r5
   2f7a8:	mov	r1, r8
   2f7ac:	mov	r2, #6
   2f7b0:	bl	10f8c <myhtml_tree_incomming_buffer_make_data@plt>
   2f7b4:	ldr	r1, [pc, #360]	; 2f924 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x3b4>
   2f7b8:	mov	r2, #6
   2f7bc:	add	r1, pc, r1
   2f7c0:	bl	11298 <mycore_strncasecmp@plt>
   2f7c4:	mov	r1, #5
   2f7c8:	cmp	r0, #0
   2f7cc:	bne	2f81c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2ac>
   2f7d0:	ldr	r0, [r5, #192]	; 0xc0
   2f7d4:	mov	r1, #64	; 0x40
   2f7d8:	mov	r2, r6
   2f7dc:	str	r1, [sp]
   2f7e0:	mov	r1, r7
   2f7e4:	add	r0, r0, r4
   2f7e8:	sub	r3, r0, #9
   2f7ec:	mov	r0, r5
   2f7f0:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f7f4:	cmp	r0, #0
   2f7f8:	beq	2f8f4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x384>
   2f7fc:	mov	r1, #6
   2f800:	str	r8, [r0, #24]
   2f804:	str	r1, [r0, #28]
   2f808:	mov	r1, #112	; 0x70
   2f80c:	str	r1, [r0]
   2f810:	mov	r1, #3
   2f814:	str	r1, [r0, #48]	; 0x30
   2f818:	mov	r1, #33	; 0x21
   2f81c:	str	r1, [r5, #160]	; 0xa0
   2f820:	mov	r0, r4
   2f824:	sub	sp, fp, #24
   2f828:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f82c:	ldr	r8, [r7, #12]
   2f830:	ldr	r0, [r5, #192]	; 0xc0
   2f834:	sub	r0, r0, r8
   2f838:	add	r0, r0, r4
   2f83c:	cmp	r0, #7
   2f840:	bne	2f86c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2fc>
   2f844:	mov	r0, r5
   2f848:	mov	r1, r8
   2f84c:	mov	r2, #6
   2f850:	bl	10f8c <myhtml_tree_incomming_buffer_make_data@plt>
   2f854:	ldr	r1, [pc, #204]	; 2f928 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x3b8>
   2f858:	mov	r2, #6
   2f85c:	add	r1, pc, r1
   2f860:	bl	11298 <mycore_strncasecmp@plt>
   2f864:	cmp	r0, #0
   2f868:	beq	2f880 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x310>
   2f86c:	mov	r0, #5
   2f870:	str	r0, [r5, #160]	; 0xa0
   2f874:	mov	r0, r4
   2f878:	sub	sp, fp, #24
   2f87c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f880:	ldr	r0, [r5, #192]	; 0xc0
   2f884:	mov	r1, #64	; 0x40
   2f888:	mov	r2, r6
   2f88c:	str	r1, [sp]
   2f890:	mov	r1, r7
   2f894:	add	r0, r0, r4
   2f898:	sub	r3, r0, #9
   2f89c:	mov	r0, r5
   2f8a0:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f8a4:	cmp	r0, #0
   2f8a8:	beq	2f8f4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x384>
   2f8ac:	mov	r2, r0
   2f8b0:	mov	r0, #6
   2f8b4:	str	r8, [r2, #24]
   2f8b8:	str	r0, [r2, #28]
   2f8bc:	mov	r0, #112	; 0x70
   2f8c0:	str	r0, [r2]
   2f8c4:	mov	r0, #1
   2f8c8:	str	r0, [r2, #48]	; 0x30
   2f8cc:	ldr	r0, [r2, #32]
   2f8d0:	ldr	r1, [r5, #192]	; 0xc0
   2f8d4:	sub	r0, r1, r0
   2f8d8:	mov	r1, r4
   2f8dc:	add	r0, r0, r4
   2f8e0:	str	r0, [r2, #36]	; 0x24
   2f8e4:	mov	r0, r5
   2f8e8:	bl	110e8 <myhtml_queue_add@plt>
   2f8ec:	cmp	r0, #0
   2f8f0:	beq	2f90c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x39c>
   2f8f4:	mov	r0, #69	; 0x45
   2f8f8:	mov	r4, #0
   2f8fc:	str	r0, [r5, #160]	; 0xa0
   2f900:	mov	r0, r4
   2f904:	sub	sp, fp, #24
   2f908:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f90c:	mov	r0, #0
   2f910:	str	r0, [r5, #160]	; 0xa0
   2f914:	mov	r0, r4
   2f918:	sub	sp, fp, #24
   2f91c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f920:	muleq	sp, r7, r3
   2f924:	strdeq	r3, [sp], -r7
   2f928:	andeq	r3, sp, r7, asr r2

0002f92c <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base>:
   2f92c:	ldrb	r1, [r2, r3]
   2f930:	cmp	r1, #45	; 0x2d
   2f934:	beq	2f958 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x2c>
   2f938:	cmp	r1, #60	; 0x3c
   2f93c:	bne	2f948 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x1c>
   2f940:	mov	r1, #24
   2f944:	b	2f954 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x28>
   2f948:	cmp	r1, #62	; 0x3e
   2f94c:	movne	r1, #21
   2f950:	moveq	r1, #5
   2f954:	str	r1, [r0, #160]	; 0xa0
   2f958:	add	r0, r3, #1
   2f95c:	bx	lr

0002f960 <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base>:
   2f960:	ldrb	r2, [r2, r3]
   2f964:	cmp	r2, #47	; 0x2f
   2f968:	bne	2f980 <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base+0x20>
   2f96c:	mov	r1, #25
   2f970:	add	r3, r3, #1
   2f974:	str	r1, [r0, #160]	; 0xa0
   2f978:	mov	r0, r3
   2f97c:	bx	lr
   2f980:	and	r2, r2, #223	; 0xdf
   2f984:	sub	r2, r2, #65	; 0x41
   2f988:	uxtb	r2, r2
   2f98c:	cmp	r2, #25
   2f990:	bhi	2f9b0 <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base+0x50>
   2f994:	ldr	r2, [r0, #192]	; 0xc0
   2f998:	add	r2, r2, r3
   2f99c:	str	r2, [r1, #12]
   2f9a0:	mov	r1, #27
   2f9a4:	str	r1, [r0, #160]	; 0xa0
   2f9a8:	mov	r0, r3
   2f9ac:	bx	lr
   2f9b0:	mov	r1, #21
   2f9b4:	str	r1, [r0, #160]	; 0xa0
   2f9b8:	mov	r0, r3
   2f9bc:	bx	lr

0002f9c0 <myhtml_tokenizer_state_script_data_escaped_end_tag_open@@Base>:
   2f9c0:	ldrb	r2, [r2, r3]
   2f9c4:	mov	ip, #21
   2f9c8:	and	r2, r2, #223	; 0xdf
   2f9cc:	sub	r2, r2, #65	; 0x41
   2f9d0:	uxtb	r2, r2
   2f9d4:	cmp	r2, #25
   2f9d8:	ldrls	r2, [r0, #192]	; 0xc0
   2f9dc:	movls	ip, #26
   2f9e0:	addls	r2, r2, r3
   2f9e4:	strls	r2, [r1, #12]
   2f9e8:	str	ip, [r0, #160]	; 0xa0
   2f9ec:	mov	r0, r3
   2f9f0:	bx	lr

0002f9f4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base>:
   2f9f4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2f9f8:	add	fp, sp, #24
   2f9fc:	sub	sp, sp, #8
   2fa00:	mov	r5, r0
   2fa04:	ldr	r0, [fp, #8]
   2fa08:	mov	r4, r3
   2fa0c:	cmp	r3, r0
   2fa10:	bcs	2fcf8 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x304>
   2fa14:	mov	r6, r2
   2fa18:	mov	r7, r1
   2fa1c:	add	r4, r4, #1
   2fa20:	add	r1, r6, r4
   2fa24:	ldrb	r1, [r1, #-1]
   2fa28:	sub	r2, r1, #9
   2fa2c:	cmp	r2, #53	; 0x35
   2fa30:	bhi	2fb18 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x124>
   2fa34:	add	r3, pc, #4
   2fa38:	ldr	r2, [r3, r2, lsl #2]
   2fa3c:	add	pc, r3, r2
   2fa40:	andeq	r0, r0, r0, lsr r1
   2fa44:	andeq	r0, r0, r0, lsr r1
   2fa48:	ldrdeq	r0, [r0], -r8
   2fa4c:	andeq	r0, r0, r0, lsr r1
   2fa50:	andeq	r0, r0, r0, lsr r1
   2fa54:	ldrdeq	r0, [r0], -r8
   2fa58:	ldrdeq	r0, [r0], -r8
   2fa5c:	ldrdeq	r0, [r0], -r8
   2fa60:	ldrdeq	r0, [r0], -r8
   2fa64:	ldrdeq	r0, [r0], -r8
   2fa68:	ldrdeq	r0, [r0], -r8
   2fa6c:	ldrdeq	r0, [r0], -r8
   2fa70:	ldrdeq	r0, [r0], -r8
   2fa74:	ldrdeq	r0, [r0], -r8
   2fa78:	ldrdeq	r0, [r0], -r8
   2fa7c:	ldrdeq	r0, [r0], -r8
   2fa80:	ldrdeq	r0, [r0], -r8
   2fa84:	ldrdeq	r0, [r0], -r8
   2fa88:	ldrdeq	r0, [r0], -r8
   2fa8c:	ldrdeq	r0, [r0], -r8
   2fa90:	ldrdeq	r0, [r0], -r8
   2fa94:	ldrdeq	r0, [r0], -r8
   2fa98:	ldrdeq	r0, [r0], -r8
   2fa9c:	andeq	r0, r0, r0, lsr r1
   2faa0:	ldrdeq	r0, [r0], -r8
   2faa4:	ldrdeq	r0, [r0], -r8
   2faa8:	ldrdeq	r0, [r0], -r8
   2faac:	ldrdeq	r0, [r0], -r8
   2fab0:	ldrdeq	r0, [r0], -r8
   2fab4:	ldrdeq	r0, [r0], -r8
   2fab8:	ldrdeq	r0, [r0], -r8
   2fabc:	ldrdeq	r0, [r0], -r8
   2fac0:	ldrdeq	r0, [r0], -r8
   2fac4:	ldrdeq	r0, [r0], -r8
   2fac8:	ldrdeq	r0, [r0], -r8
   2facc:	ldrdeq	r0, [r0], -r8
   2fad0:	ldrdeq	r0, [r0], -r8
   2fad4:	ldrdeq	r0, [r0], -r8
   2fad8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2fadc:	ldrdeq	r0, [r0], -r8
   2fae0:	ldrdeq	r0, [r0], -r8
   2fae4:	ldrdeq	r0, [r0], -r8
   2fae8:	ldrdeq	r0, [r0], -r8
   2faec:	ldrdeq	r0, [r0], -r8
   2faf0:	ldrdeq	r0, [r0], -r8
   2faf4:	ldrdeq	r0, [r0], -r8
   2faf8:	ldrdeq	r0, [r0], -r8
   2fafc:	ldrdeq	r0, [r0], -r8
   2fb00:	ldrdeq	r0, [r0], -r8
   2fb04:	ldrdeq	r0, [r0], -r8
   2fb08:	ldrdeq	r0, [r0], -r8
   2fb0c:	ldrdeq	r0, [r0], -r8
   2fb10:	ldrdeq	r0, [r0], -r8
   2fb14:	andeq	r0, r0, r0, ror r2
   2fb18:	sub	r2, r1, #97	; 0x61
   2fb1c:	uxtb	r2, r2
   2fb20:	cmp	r2, #26
   2fb24:	bcc	2fb38 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x144>
   2fb28:	sub	r1, r1, #65	; 0x41
   2fb2c:	uxtb	r1, r1
   2fb30:	cmp	r1, #26
   2fb34:	bcs	2fb58 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x164>
   2fb38:	add	r1, r4, #1
   2fb3c:	cmp	r4, r0
   2fb40:	mov	r4, r1
   2fb44:	bcc	2fa20 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2c>
   2fb48:	sub	r4, r1, #1
   2fb4c:	mov	r0, r4
   2fb50:	sub	sp, fp, #24
   2fb54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2fb58:	mov	r0, #21
   2fb5c:	sub	r4, r4, #1
   2fb60:	str	r0, [r5, #160]	; 0xa0
   2fb64:	mov	r0, r4
   2fb68:	sub	sp, fp, #24
   2fb6c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2fb70:	ldr	r8, [r7, #12]
   2fb74:	ldr	r0, [r5, #192]	; 0xc0
   2fb78:	sub	r0, r0, r8
   2fb7c:	add	r0, r0, r4
   2fb80:	cmp	r0, #7
   2fb84:	bne	2fcf0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2fc>
   2fb88:	mov	r0, r5
   2fb8c:	mov	r1, r8
   2fb90:	mov	r2, #6
   2fb94:	bl	10f8c <myhtml_tree_incomming_buffer_make_data@plt>
   2fb98:	ldr	r1, [pc, #504]	; 2fd98 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x3a4>
   2fb9c:	mov	r2, #6
   2fba0:	add	r1, pc, r1
   2fba4:	bl	11298 <mycore_strncasecmp@plt>
   2fba8:	mov	r1, #21
   2fbac:	cmp	r0, #0
   2fbb0:	bne	2fc00 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x20c>
   2fbb4:	ldr	r0, [r5, #192]	; 0xc0
   2fbb8:	mov	r1, #64	; 0x40
   2fbbc:	mov	r2, r6
   2fbc0:	str	r1, [sp]
   2fbc4:	mov	r1, r7
   2fbc8:	add	r0, r0, r4
   2fbcc:	sub	r3, r0, #9
   2fbd0:	mov	r0, r5
   2fbd4:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2fbd8:	cmp	r0, #0
   2fbdc:	beq	2fd80 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x38c>
   2fbe0:	mov	r1, #6
   2fbe4:	str	r8, [r0, #24]
   2fbe8:	str	r1, [r0, #28]
   2fbec:	mov	r1, #112	; 0x70
   2fbf0:	str	r1, [r0]
   2fbf4:	mov	r1, #1
   2fbf8:	str	r1, [r0, #48]	; 0x30
   2fbfc:	mov	r1, #33	; 0x21
   2fc00:	str	r1, [r5, #160]	; 0xa0
   2fc04:	mov	r0, r4
   2fc08:	sub	sp, fp, #24
   2fc0c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2fc10:	ldr	r8, [r7, #12]
   2fc14:	ldr	r0, [r5, #192]	; 0xc0
   2fc18:	sub	r0, r0, r8
   2fc1c:	add	r0, r0, r4
   2fc20:	cmp	r0, #7
   2fc24:	bne	2fcf0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2fc>
   2fc28:	mov	r0, r5
   2fc2c:	mov	r1, r8
   2fc30:	mov	r2, #6
   2fc34:	bl	10f8c <myhtml_tree_incomming_buffer_make_data@plt>
   2fc38:	ldr	r1, [pc, #348]	; 2fd9c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x3a8>
   2fc3c:	mov	r2, #6
   2fc40:	add	r1, pc, r1
   2fc44:	bl	11298 <mycore_strncasecmp@plt>
   2fc48:	mov	r1, #21
   2fc4c:	cmp	r0, #0
   2fc50:	bne	2fca0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2ac>
   2fc54:	ldr	r0, [r5, #192]	; 0xc0
   2fc58:	mov	r1, #64	; 0x40
   2fc5c:	mov	r2, r6
   2fc60:	str	r1, [sp]
   2fc64:	mov	r1, r7
   2fc68:	add	r0, r0, r4
   2fc6c:	sub	r3, r0, #9
   2fc70:	mov	r0, r5
   2fc74:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2fc78:	cmp	r0, #0
   2fc7c:	beq	2fd80 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x38c>
   2fc80:	mov	r1, #6
   2fc84:	str	r8, [r0, #24]
   2fc88:	str	r1, [r0, #28]
   2fc8c:	mov	r1, #112	; 0x70
   2fc90:	str	r1, [r0]
   2fc94:	mov	r1, #3
   2fc98:	str	r1, [r0, #48]	; 0x30
   2fc9c:	mov	r1, #33	; 0x21
   2fca0:	str	r1, [r5, #160]	; 0xa0
   2fca4:	mov	r0, r4
   2fca8:	sub	sp, fp, #24
   2fcac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2fcb0:	ldr	r8, [r7, #12]
   2fcb4:	ldr	r0, [r5, #192]	; 0xc0
   2fcb8:	sub	r0, r0, r8
   2fcbc:	add	r0, r0, r4
   2fcc0:	cmp	r0, #7
   2fcc4:	bne	2fcf0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2fc>
   2fcc8:	mov	r0, r5
   2fccc:	mov	r1, r8
   2fcd0:	mov	r2, #6
   2fcd4:	bl	10f8c <myhtml_tree_incomming_buffer_make_data@plt>
   2fcd8:	ldr	r1, [pc, #192]	; 2fda0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x3ac>
   2fcdc:	mov	r2, #6
   2fce0:	add	r1, pc, r1
   2fce4:	bl	11298 <mycore_strncasecmp@plt>
   2fce8:	cmp	r0, #0
   2fcec:	beq	2fd04 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x310>
   2fcf0:	mov	r0, #21
   2fcf4:	str	r0, [r5, #160]	; 0xa0
   2fcf8:	mov	r0, r4
   2fcfc:	sub	sp, fp, #24
   2fd00:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2fd04:	ldr	r0, [r5, #192]	; 0xc0
   2fd08:	mov	r1, #64	; 0x40
   2fd0c:	mov	r2, r6
   2fd10:	str	r1, [sp]
   2fd14:	mov	r1, r7
   2fd18:	add	r0, r0, r4
   2fd1c:	sub	r3, r0, #9
   2fd20:	mov	r0, r5
   2fd24:	bl	119b8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2fd28:	cmp	r0, #0
   2fd2c:	beq	2fd80 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x38c>
   2fd30:	mov	r2, r0
   2fd34:	mov	r0, #6
   2fd38:	str	r8, [r2, #24]
   2fd3c:	str	r0, [r2, #28]
   2fd40:	mov	r0, #112	; 0x70
   2fd44:	str	r0, [r2]
   2fd48:	mov	r0, #1
   2fd4c:	str	r0, [r2, #48]	; 0x30
   2fd50:	mov	r0, #0
   2fd54:	str	r0, [r5, #160]	; 0xa0
   2fd58:	ldr	r0, [r5, #192]	; 0xc0
   2fd5c:	ldr	r1, [r2, #32]
   2fd60:	sub	r0, r0, r1
   2fd64:	mov	r1, r4
   2fd68:	add	r0, r0, r4
   2fd6c:	str	r0, [r2, #36]	; 0x24
   2fd70:	mov	r0, r5
   2fd74:	bl	110e8 <myhtml_queue_add@plt>
   2fd78:	cmp	r0, #0
   2fd7c:	beq	2fcf8 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x304>
   2fd80:	mov	r0, #69	; 0x45
   2fd84:	mov	r4, #0
   2fd88:	str	r0, [r5, #160]	; 0xa0
   2fd8c:	mov	r0, r4
   2fd90:	sub	sp, fp, #24
   2fd94:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2fd98:	andeq	r2, sp, r3, lsl pc
   2fd9c:	andeq	r2, sp, r3, ror lr
   2fda0:	ldrdeq	r2, [sp], -r3

0002fda4 <myhtml_tokenizer_state_script_data_escaped@@Base>:
   2fda4:	ldr	ip, [sp]
   2fda8:	cmp	r3, ip
   2fdac:	bcc	2fdc4 <myhtml_tokenizer_state_script_data_escaped@@Base+0x20>
   2fdb0:	mov	r0, r3
   2fdb4:	bx	lr
   2fdb8:	add	r3, r3, #1
   2fdbc:	cmp	r3, ip
   2fdc0:	bcs	2fdb0 <myhtml_tokenizer_state_script_data_escaped@@Base+0xc>
   2fdc4:	ldrb	r1, [r2, r3]
   2fdc8:	cmp	r1, #60	; 0x3c
   2fdcc:	beq	2fdec <myhtml_tokenizer_state_script_data_escaped@@Base+0x48>
   2fdd0:	cmp	r1, #45	; 0x2d
   2fdd4:	bne	2fdb8 <myhtml_tokenizer_state_script_data_escaped@@Base+0x14>
   2fdd8:	mov	r1, #22
   2fddc:	add	r3, r3, #1
   2fde0:	str	r1, [r0, #160]	; 0xa0
   2fde4:	mov	r0, r3
   2fde8:	bx	lr
   2fdec:	mov	r1, #24
   2fdf0:	add	r3, r3, #1
   2fdf4:	str	r1, [r0, #160]	; 0xa0
   2fdf8:	mov	r0, r3
   2fdfc:	bx	lr

0002fe00 <myhtml_tokenizer_state_script_data_escaped_dash@@Base>:
   2fe00:	ldrb	r1, [r2, r3]
   2fe04:	cmp	r1, #60	; 0x3c
   2fe08:	beq	2fe28 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x28>
   2fe0c:	cmp	r1, #45	; 0x2d
   2fe10:	bne	2fe38 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x38>
   2fe14:	mov	r1, #23
   2fe18:	add	r3, r3, #1
   2fe1c:	str	r1, [r0, #160]	; 0xa0
   2fe20:	mov	r0, r3
   2fe24:	bx	lr
   2fe28:	mov	r1, #24
   2fe2c:	str	r1, [r0, #160]	; 0xa0
   2fe30:	mov	r0, r3
   2fe34:	bx	lr
   2fe38:	cmp	r1, #0
   2fe3c:	mov	r2, #21
   2fe40:	addne	r3, r3, #1
   2fe44:	str	r2, [r0, #160]	; 0xa0
   2fe48:	mov	r0, r3
   2fe4c:	bx	lr

0002fe50 <myhtml_tokenizer_state_script_data_double_escape_start@@Base>:
   2fe50:	push	{r4, r5, r6, r7, fp, lr}
   2fe54:	add	fp, sp, #16
   2fe58:	mov	r7, r0
   2fe5c:	ldr	r0, [fp, #8]
   2fe60:	mov	r4, r3
   2fe64:	cmp	r3, r0
   2fe68:	bcs	2ff8c <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x13c>
   2fe6c:	ldrb	r3, [r2, r4]
   2fe70:	sub	r5, r3, #9
   2fe74:	cmp	r5, #53	; 0x35
   2fe78:	bhi	2ff60 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x110>
   2fe7c:	add	r6, pc, #4
   2fe80:	ldr	r5, [r6, r5, lsl #2]
   2fe84:	add	pc, r6, r5
   2fe88:	andeq	r0, r0, ip, lsl #2
   2fe8c:	andeq	r0, r0, ip, lsl #2
   2fe90:	ldrdeq	r0, [r0], -r8
   2fe94:	andeq	r0, r0, ip, lsl #2
   2fe98:	andeq	r0, r0, ip, lsl #2
   2fe9c:	ldrdeq	r0, [r0], -r8
   2fea0:	ldrdeq	r0, [r0], -r8
   2fea4:	ldrdeq	r0, [r0], -r8
   2fea8:	ldrdeq	r0, [r0], -r8
   2feac:	ldrdeq	r0, [r0], -r8
   2feb0:	ldrdeq	r0, [r0], -r8
   2feb4:	ldrdeq	r0, [r0], -r8
   2feb8:	ldrdeq	r0, [r0], -r8
   2febc:	ldrdeq	r0, [r0], -r8
   2fec0:	ldrdeq	r0, [r0], -r8
   2fec4:	ldrdeq	r0, [r0], -r8
   2fec8:	ldrdeq	r0, [r0], -r8
   2fecc:	ldrdeq	r0, [r0], -r8
   2fed0:	ldrdeq	r0, [r0], -r8
   2fed4:	ldrdeq	r0, [r0], -r8
   2fed8:	ldrdeq	r0, [r0], -r8
   2fedc:	ldrdeq	r0, [r0], -r8
   2fee0:	ldrdeq	r0, [r0], -r8
   2fee4:	andeq	r0, r0, ip, lsl #2
   2fee8:	ldrdeq	r0, [r0], -r8
   2feec:	ldrdeq	r0, [r0], -r8
   2fef0:	ldrdeq	r0, [r0], -r8
   2fef4:	ldrdeq	r0, [r0], -r8
   2fef8:	ldrdeq	r0, [r0], -r8
   2fefc:	ldrdeq	r0, [r0], -r8
   2ff00:	ldrdeq	r0, [r0], -r8
   2ff04:	ldrdeq	r0, [r0], -r8
   2ff08:	ldrdeq	r0, [r0], -r8
   2ff0c:	ldrdeq	r0, [r0], -r8
   2ff10:	ldrdeq	r0, [r0], -r8
   2ff14:	ldrdeq	r0, [r0], -r8
   2ff18:	ldrdeq	r0, [r0], -r8
   2ff1c:	ldrdeq	r0, [r0], -r8
   2ff20:	andeq	r0, r0, ip, lsl #2
   2ff24:	ldrdeq	r0, [r0], -r8
   2ff28:	ldrdeq	r0, [r0], -r8
   2ff2c:	ldrdeq	r0, [r0], -r8
   2ff30:	ldrdeq	r0, [r0], -r8
   2ff34:	ldrdeq	r0, [r0], -r8
   2ff38:	ldrdeq	r0, [r0], -r8
   2ff3c:	ldrdeq	r0, [r0], -r8
   2ff40:	ldrdeq	r0, [r0], -r8
   2ff44:	ldrdeq	r0, [r0], -r8
   2ff48:	ldrdeq	r0, [r0], -r8
   2ff4c:	ldrdeq	r0, [r0], -r8
   2ff50:	ldrdeq	r0, [r0], -r8
   2ff54:	ldrdeq	r0, [r0], -r8
   2ff58:	ldrdeq	r0, [r0], -r8
   2ff5c:	andeq	r0, r0, ip, lsl #2
   2ff60:	sub	r6, r3, #97	; 0x61
   2ff64:	uxtb	r6, r6
   2ff68:	cmp	r6, #26
   2ff6c:	bcc	2ff80 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x130>
   2ff70:	sub	r3, r3, #65	; 0x41
   2ff74:	uxtb	r3, r3
   2ff78:	cmp	r3, #26
   2ff7c:	bcs	2ffe4 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x194>
   2ff80:	add	r4, r4, #1
   2ff84:	cmp	r4, r0
   2ff88:	bcc	2fe6c <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x1c>
   2ff8c:	mov	r0, r4
   2ff90:	pop	{r4, r5, r6, r7, fp, pc}
   2ff94:	ldr	r0, [r7, #192]	; 0xc0
   2ff98:	ldr	r1, [r1, #12]
   2ff9c:	sub	r0, r1, r0
   2ffa0:	add	r0, r0, #6
   2ffa4:	cmp	r0, r4
   2ffa8:	bne	2fff4 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x1a4>
   2ffac:	mov	r0, r7
   2ffb0:	mov	r2, #6
   2ffb4:	bl	10f8c <myhtml_tree_incomming_buffer_make_data@plt>
   2ffb8:	ldr	r1, [pc, #72]	; 30008 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x1b8>
   2ffbc:	mov	r2, #6
   2ffc0:	add	r1, pc, r1
   2ffc4:	bl	11298 <mycore_strncasecmp@plt>
   2ffc8:	mov	r1, #21
   2ffcc:	cmp	r0, #0
   2ffd0:	movweq	r1, #28
   2ffd4:	str	r1, [r7, #160]	; 0xa0
   2ffd8:	add	r4, r4, #1
   2ffdc:	mov	r0, r4
   2ffe0:	pop	{r4, r5, r6, r7, fp, pc}
   2ffe4:	mov	r0, #21
   2ffe8:	str	r0, [r7, #160]	; 0xa0
   2ffec:	mov	r0, r4
   2fff0:	pop	{r4, r5, r6, r7, fp, pc}
   2fff4:	mov	r0, #21
   2fff8:	str	r0, [r7, #160]	; 0xa0
   2fffc:	add	r4, r4, #1
   30000:	mov	r0, r4
   30004:	pop	{r4, r5, r6, r7, fp, pc}
   30008:	strdeq	r2, [sp], -r3

0003000c <myhtml_tokenizer_state_script_data_double_escaped@@Base>:
   3000c:	ldr	ip, [sp]
   30010:	cmp	r3, ip
   30014:	bcc	3002c <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x20>
   30018:	mov	r0, r3
   3001c:	bx	lr
   30020:	add	r3, r3, #1
   30024:	cmp	r3, ip
   30028:	bcs	30018 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0xc>
   3002c:	ldrb	r1, [r2, r3]
   30030:	cmp	r1, #60	; 0x3c
   30034:	beq	30054 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x48>
   30038:	cmp	r1, #45	; 0x2d
   3003c:	bne	30020 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x14>
   30040:	mov	r1, #29
   30044:	add	r3, r3, #1
   30048:	str	r1, [r0, #160]	; 0xa0
   3004c:	mov	r0, r3
   30050:	bx	lr
   30054:	mov	r1, #31
   30058:	add	r3, r3, #1
   3005c:	str	r1, [r0, #160]	; 0xa0
   30060:	mov	r0, r3
   30064:	bx	lr

00030068 <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base>:
   30068:	ldrb	r1, [r2, r3]
   3006c:	cmp	r1, #45	; 0x2d
   30070:	bne	30084 <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base+0x1c>
   30074:	mov	r1, #30
   30078:	str	r1, [r0, #160]	; 0xa0
   3007c:	add	r0, r3, #1
   30080:	bx	lr
   30084:	cmp	r1, #60	; 0x3c
   30088:	movne	r1, #28
   3008c:	moveq	r1, #31
   30090:	str	r1, [r0, #160]	; 0xa0
   30094:	add	r0, r3, #1
   30098:	bx	lr

0003009c <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base>:
   3009c:	ldrb	r1, [r2, r3]
   300a0:	cmp	r1, #45	; 0x2d
   300a4:	beq	300c8 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x2c>
   300a8:	cmp	r1, #60	; 0x3c
   300ac:	bne	300b8 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x1c>
   300b0:	mov	r1, #31
   300b4:	b	300c4 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x28>
   300b8:	cmp	r1, #62	; 0x3e
   300bc:	movne	r1, #28
   300c0:	moveq	r1, #5
   300c4:	str	r1, [r0, #160]	; 0xa0
   300c8:	add	r0, r3, #1
   300cc:	bx	lr

000300d0 <myhtml_tokenizer_state_script_data_double_escaped_less_than_sign@@Base>:
   300d0:	ldrb	r2, [r2, r3]
   300d4:	cmp	r2, #47	; 0x2f
   300d8:	movne	r1, #28
   300dc:	strne	r1, [r0, #160]	; 0xa0
   300e0:	movne	r0, r3
   300e4:	bxne	lr
   300e8:	mov	r2, #32
   300ec:	add	r3, r3, #1
   300f0:	str	r2, [r0, #160]	; 0xa0
   300f4:	ldr	r0, [r0, #192]	; 0xc0
   300f8:	add	r0, r0, r3
   300fc:	str	r0, [r1, #12]
   30100:	mov	r0, r3
   30104:	bx	lr

00030108 <myhtml_tokenizer_state_script_data_double_escape_end@@Base>:
   30108:	push	{r4, r5, r6, r7, fp, lr}
   3010c:	add	fp, sp, #16
   30110:	mov	r7, r0
   30114:	ldr	r0, [fp, #8]
   30118:	mov	r4, r3
   3011c:	cmp	r3, r0
   30120:	bcs	30244 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x13c>
   30124:	ldrb	r3, [r2, r4]
   30128:	sub	r5, r3, #9
   3012c:	cmp	r5, #53	; 0x35
   30130:	bhi	30218 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x110>
   30134:	add	r6, pc, #4
   30138:	ldr	r5, [r6, r5, lsl #2]
   3013c:	add	pc, r6, r5
   30140:	andeq	r0, r0, ip, lsl #2
   30144:	andeq	r0, r0, ip, lsl #2
   30148:	ldrdeq	r0, [r0], -r8
   3014c:	andeq	r0, r0, ip, lsl #2
   30150:	andeq	r0, r0, ip, lsl #2
   30154:	ldrdeq	r0, [r0], -r8
   30158:	ldrdeq	r0, [r0], -r8
   3015c:	ldrdeq	r0, [r0], -r8
   30160:	ldrdeq	r0, [r0], -r8
   30164:	ldrdeq	r0, [r0], -r8
   30168:	ldrdeq	r0, [r0], -r8
   3016c:	ldrdeq	r0, [r0], -r8
   30170:	ldrdeq	r0, [r0], -r8
   30174:	ldrdeq	r0, [r0], -r8
   30178:	ldrdeq	r0, [r0], -r8
   3017c:	ldrdeq	r0, [r0], -r8
   30180:	ldrdeq	r0, [r0], -r8
   30184:	ldrdeq	r0, [r0], -r8
   30188:	ldrdeq	r0, [r0], -r8
   3018c:	ldrdeq	r0, [r0], -r8
   30190:	ldrdeq	r0, [r0], -r8
   30194:	ldrdeq	r0, [r0], -r8
   30198:	ldrdeq	r0, [r0], -r8
   3019c:	andeq	r0, r0, ip, lsl #2
   301a0:	ldrdeq	r0, [r0], -r8
   301a4:	ldrdeq	r0, [r0], -r8
   301a8:	ldrdeq	r0, [r0], -r8
   301ac:	ldrdeq	r0, [r0], -r8
   301b0:	ldrdeq	r0, [r0], -r8
   301b4:	ldrdeq	r0, [r0], -r8
   301b8:	ldrdeq	r0, [r0], -r8
   301bc:	ldrdeq	r0, [r0], -r8
   301c0:	ldrdeq	r0, [r0], -r8
   301c4:	ldrdeq	r0, [r0], -r8
   301c8:	ldrdeq	r0, [r0], -r8
   301cc:	ldrdeq	r0, [r0], -r8
   301d0:	ldrdeq	r0, [r0], -r8
   301d4:	ldrdeq	r0, [r0], -r8
   301d8:	andeq	r0, r0, ip, lsl #2
   301dc:	ldrdeq	r0, [r0], -r8
   301e0:	ldrdeq	r0, [r0], -r8
   301e4:	ldrdeq	r0, [r0], -r8
   301e8:	ldrdeq	r0, [r0], -r8
   301ec:	ldrdeq	r0, [r0], -r8
   301f0:	ldrdeq	r0, [r0], -r8
   301f4:	ldrdeq	r0, [r0], -r8
   301f8:	ldrdeq	r0, [r0], -r8
   301fc:	ldrdeq	r0, [r0], -r8
   30200:	ldrdeq	r0, [r0], -r8
   30204:	ldrdeq	r0, [r0], -r8
   30208:	ldrdeq	r0, [r0], -r8
   3020c:	ldrdeq	r0, [r0], -r8
   30210:	ldrdeq	r0, [r0], -r8
   30214:	andeq	r0, r0, ip, lsl #2
   30218:	sub	r6, r3, #97	; 0x61
   3021c:	uxtb	r6, r6
   30220:	cmp	r6, #26
   30224:	bcc	30238 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x130>
   30228:	sub	r3, r3, #65	; 0x41
   3022c:	uxtb	r3, r3
   30230:	cmp	r3, #26
   30234:	bcs	3029c <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x194>
   30238:	add	r4, r4, #1
   3023c:	cmp	r4, r0
   30240:	bcc	30124 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x1c>
   30244:	mov	r0, r4
   30248:	pop	{r4, r5, r6, r7, fp, pc}
   3024c:	ldr	r0, [r7, #192]	; 0xc0
   30250:	ldr	r1, [r1, #12]
   30254:	sub	r0, r1, r0
   30258:	add	r0, r0, #6
   3025c:	cmp	r0, r4
   30260:	bne	302ac <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x1a4>
   30264:	mov	r0, r7
   30268:	mov	r2, #6
   3026c:	bl	10f8c <myhtml_tree_incomming_buffer_make_data@plt>
   30270:	ldr	r1, [pc, #72]	; 302c0 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x1b8>
   30274:	mov	r2, #6
   30278:	add	r1, pc, r1
   3027c:	bl	11298 <mycore_strncasecmp@plt>
   30280:	mov	r1, #28
   30284:	cmp	r0, #0
   30288:	movweq	r1, #21
   3028c:	str	r1, [r7, #160]	; 0xa0
   30290:	add	r4, r4, #1
   30294:	mov	r0, r4
   30298:	pop	{r4, r5, r6, r7, fp, pc}
   3029c:	mov	r0, #28
   302a0:	str	r0, [r7, #160]	; 0xa0
   302a4:	mov	r0, r4
   302a8:	pop	{r4, r5, r6, r7, fp, pc}
   302ac:	mov	r0, #28
   302b0:	str	r0, [r7, #160]	; 0xa0
   302b4:	add	r4, r4, #1
   302b8:	mov	r0, r4
   302bc:	pop	{r4, r5, r6, r7, fp, pc}
   302c0:	andeq	r2, sp, fp, lsr r8

000302c4 <myhtml_tree_create@@Base>:
   302c4:	mov	r0, #1
   302c8:	mov	r1, #252	; 0xfc
   302cc:	b	11004 <mycore_calloc@plt>

000302d0 <myhtml_tree_init@@Base>:
   302d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   302d4:	add	fp, sp, #24
   302d8:	sub	sp, sp, #8
   302dc:	mov	r6, #0
   302e0:	mov	r5, r1
   302e4:	mov	r4, r0
   302e8:	str	r6, [sp, #4]
   302ec:	str	r1, [r0]
   302f0:	mov	r1, #512	; 0x200
   302f4:	bl	11c28 <myhtml_token_create@plt>
   302f8:	cmp	r0, #0
   302fc:	str	r0, [r4, #8]
   30300:	beq	305b4 <myhtml_tree_init@@Base+0x2e4>
   30304:	vmov.i32	q8, #0	; 0x00000000
   30308:	add	r0, r4, #236	; 0xec
   3030c:	str	r6, [r4, #148]	; 0x94
   30310:	str	r6, [r4, #208]	; 0xd0
   30314:	str	r6, [r4, #184]	; 0xb8
   30318:	str	r6, [r4, #36]	; 0x24
   3031c:	vst1.32	{d16-d17}, [r0]
   30320:	add	r0, r4, #220	; 0xdc
   30324:	vst1.32	{d16-d17}, [r0]
   30328:	bl	11844 <mythread_queue_create@plt>
   3032c:	cmp	r0, #0
   30330:	str	r0, [r4, #24]
   30334:	beq	305c4 <myhtml_tree_init@@Base+0x2f4>
   30338:	movw	r1, #9182	; 0x23de
   3033c:	bl	11580 <mythread_queue_init@plt>
   30340:	mov	r6, r0
   30344:	cmp	r0, #0
   30348:	str	r0, [sp, #4]
   3034c:	bne	305b8 <myhtml_tree_init@@Base+0x2e8>
   30350:	bl	110dc <mcobject_create@plt>
   30354:	cmp	r0, #0
   30358:	str	r0, [r4, #72]	; 0x48
   3035c:	beq	305d4 <myhtml_tree_init@@Base+0x304>
   30360:	mov	r1, #256	; 0x100
   30364:	mov	r2, #24
   30368:	bl	11610 <mcobject_init@plt>
   3036c:	mov	r6, r0
   30370:	cmp	r0, #0
   30374:	str	r0, [sp, #4]
   30378:	bne	305b8 <myhtml_tree_init@@Base+0x2e8>
   3037c:	bl	10ec0 <mcobject_async_create@plt>
   30380:	cmp	r0, #0
   30384:	str	r0, [r4, #12]
   30388:	beq	305e4 <myhtml_tree_init@@Base+0x314>
   3038c:	mov	r1, #128	; 0x80
   30390:	mov	r2, #1024	; 0x400
   30394:	mov	r3, #44	; 0x2c
   30398:	mov	r8, #1024	; 0x400
   3039c:	bl	10e24 <mcobject_async_init@plt>
   303a0:	movw	r6, #37366	; 0x91f6
   303a4:	cmp	r0, #0
   303a8:	str	r0, [sp]
   303ac:	bne	305b8 <myhtml_tree_init@@Base+0x2e8>
   303b0:	bl	111c0 <mchar_async_create@plt>
   303b4:	str	r0, [r4, #4]
   303b8:	mov	r0, #12
   303bc:	bl	119ac <mycore_malloc@plt>
   303c0:	mov	r9, #0
   303c4:	mov	r7, #4096	; 0x1000
   303c8:	mov	r6, r0
   303cc:	str	r9, [r0, #4]
   303d0:	str	r7, [r0, #8]
   303d4:	mov	r0, #16384	; 0x4000
   303d8:	bl	119ac <mycore_malloc@plt>
   303dc:	str	r0, [r6]
   303e0:	mov	r0, #12
   303e4:	str	r6, [r4, #124]	; 0x7c
   303e8:	bl	119ac <mycore_malloc@plt>
   303ec:	str	r9, [r0, #4]
   303f0:	mov	r6, r0
   303f4:	str	r7, [r0, #8]
   303f8:	mov	r0, #16384	; 0x4000
   303fc:	bl	119ac <mycore_malloc@plt>
   30400:	str	r0, [r6]
   30404:	mov	r0, #12
   30408:	str	r6, [r4, #128]	; 0x80
   3040c:	bl	119ac <mycore_malloc@plt>
   30410:	str	r9, [r0, #4]
   30414:	mov	r6, r0
   30418:	str	r7, [r0, #8]
   3041c:	mov	r0, #16384	; 0x4000
   30420:	bl	119ac <mycore_malloc@plt>
   30424:	str	r0, [r6]
   30428:	mov	r0, #12
   3042c:	str	r6, [r4, #132]	; 0x84
   30430:	bl	119ac <mycore_malloc@plt>
   30434:	str	r9, [r0, #4]
   30438:	mov	r6, r0
   3043c:	str	r7, [r0, #8]
   30440:	mov	r0, #16384	; 0x4000
   30444:	bl	119ac <mycore_malloc@plt>
   30448:	str	r0, [r6]
   3044c:	mov	r0, #12
   30450:	str	r6, [r4, #136]	; 0x88
   30454:	bl	119ac <mycore_malloc@plt>
   30458:	str	r9, [r0, #4]
   3045c:	mov	r6, r0
   30460:	str	r8, [r0, #8]
   30464:	mov	r0, #4096	; 0x1000
   30468:	bl	119ac <mycore_malloc@plt>
   3046c:	str	r0, [r6]
   30470:	str	r6, [r4, #140]	; 0x8c
   30474:	ldr	r0, [r4, #4]
   30478:	cmp	r0, #0
   3047c:	beq	305f4 <myhtml_tree_init@@Base+0x324>
   30480:	mov	r1, #128	; 0x80
   30484:	mov	r2, #20480	; 0x5000
   30488:	bl	1140c <mchar_async_init@plt>
   3048c:	mov	r6, r0
   30490:	cmp	r0, #0
   30494:	str	r0, [sp, #4]
   30498:	bne	305b8 <myhtml_tree_init@@Base+0x2e8>
   3049c:	ldr	r0, [r4, #12]
   304a0:	mov	r1, sp
   304a4:	bl	11850 <mcobject_async_node_add@plt>
   304a8:	str	r0, [r4, #48]	; 0x30
   304ac:	movw	r6, #37367	; 0x91f7
   304b0:	ldr	r0, [sp]
   304b4:	cmp	r0, #0
   304b8:	bne	305b8 <myhtml_tree_init@@Base+0x2e8>
   304bc:	ldr	r0, [r4, #8]
   304c0:	mov	r1, sp
   304c4:	ldr	r0, [r0, #4]
   304c8:	bl	11850 <mcobject_async_node_add@plt>
   304cc:	str	r0, [r4, #40]	; 0x28
   304d0:	ldr	r0, [sp]
   304d4:	cmp	r0, #0
   304d8:	bne	305b8 <myhtml_tree_init@@Base+0x2e8>
   304dc:	ldr	r0, [r4, #8]
   304e0:	mov	r1, sp
   304e4:	ldr	r0, [r0, #8]
   304e8:	bl	11850 <mcobject_async_node_add@plt>
   304ec:	str	r0, [r4, #44]	; 0x2c
   304f0:	ldr	r0, [sp]
   304f4:	cmp	r0, #0
   304f8:	bne	305b8 <myhtml_tree_init@@Base+0x2e8>
   304fc:	ldr	r0, [r5, #20]
   30500:	mov	r1, #4
   30504:	bl	11004 <mycore_calloc@plt>
   30508:	cmp	r0, #0
   3050c:	str	r0, [r4, #144]	; 0x90
   30510:	beq	30604 <myhtml_tree_init@@Base+0x334>
   30514:	ldr	r1, [r5, #20]
   30518:	cmp	r1, #0
   3051c:	beq	3055c <myhtml_tree_init@@Base+0x28c>
   30520:	mov	r7, #0
   30524:	add	r8, sp, #4
   30528:	ldr	r0, [r4, #4]
   3052c:	mov	r1, r8
   30530:	bl	1128c <mchar_async_node_add@plt>
   30534:	mov	r1, r0
   30538:	ldr	r0, [r4, #144]	; 0x90
   3053c:	str	r1, [r0, r7, lsl #2]
   30540:	ldr	r6, [sp, #4]
   30544:	cmp	r6, #0
   30548:	bne	305b8 <myhtml_tree_init@@Base+0x2e8>
   3054c:	ldr	r1, [r5, #20]
   30550:	add	r7, r7, #1
   30554:	cmp	r7, r1
   30558:	bcc	30528 <myhtml_tree_init@@Base+0x258>
   3055c:	ldr	r0, [r0]
   30560:	str	r0, [r4, #52]	; 0x34
   30564:	bl	10efc <mcsync_create@plt>
   30568:	cmp	r0, #0
   3056c:	str	r0, [r4, #16]
   30570:	beq	30614 <myhtml_tree_init@@Base+0x344>
   30574:	bl	116a0 <mcsync_init@plt>
   30578:	cmp	r0, #0
   3057c:	mov	r6, #2
   30580:	bne	305b8 <myhtml_tree_init@@Base+0x2e8>
   30584:	bl	11a18 <myhtml_tag_create@plt>
   30588:	mov	r1, r0
   3058c:	str	r0, [r4, #28]
   30590:	mov	r0, r4
   30594:	bl	118d4 <myhtml_tag_init@plt>
   30598:	str	r0, [sp, #4]
   3059c:	mov	r0, r4
   305a0:	bl	11598 <myhtml_tree_clean@plt>
   305a4:	ldr	r6, [sp, #4]
   305a8:	mov	r0, r6
   305ac:	sub	sp, fp, #24
   305b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   305b4:	movw	r6, #37164	; 0x912c
   305b8:	mov	r0, r6
   305bc:	sub	sp, fp, #24
   305c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   305c4:	mov	r6, #2
   305c8:	mov	r0, r6
   305cc:	sub	sp, fp, #24
   305d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   305d4:	movw	r6, #37368	; 0x91f8
   305d8:	mov	r0, r6
   305dc:	sub	sp, fp, #24
   305e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   305e4:	movw	r6, #37365	; 0x91f5
   305e8:	mov	r0, r6
   305ec:	sub	sp, fp, #24
   305f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   305f4:	mov	r6, #2
   305f8:	mov	r0, r6
   305fc:	sub	sp, fp, #24
   30600:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30604:	mov	r6, #2
   30608:	mov	r0, r6
   3060c:	sub	sp, fp, #24
   30610:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30614:	mov	r6, #2
   30618:	mov	r0, r6
   3061c:	sub	sp, fp, #24
   30620:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00030624 <myhtml_tree_active_formatting_init@@Base>:
   30624:	push	{r4, sl, fp, lr}
   30628:	add	fp, sp, #8
   3062c:	mov	r0, #12
   30630:	bl	119ac <mycore_malloc@plt>
   30634:	mov	r4, r0
   30638:	mov	r0, #0
   3063c:	str	r0, [r4, #4]
   30640:	mov	r0, #4096	; 0x1000
   30644:	str	r0, [r4, #8]
   30648:	mov	r0, #16384	; 0x4000
   3064c:	bl	119ac <mycore_malloc@plt>
   30650:	str	r0, [r4]
   30654:	mov	r0, r4
   30658:	pop	{r4, sl, fp, pc}

0003065c <myhtml_tree_open_elements_init@@Base>:
   3065c:	push	{r4, sl, fp, lr}
   30660:	add	fp, sp, #8
   30664:	mov	r0, #12
   30668:	bl	119ac <mycore_malloc@plt>
   3066c:	mov	r4, r0
   30670:	mov	r0, #0
   30674:	str	r0, [r4, #4]
   30678:	mov	r0, #4096	; 0x1000
   3067c:	str	r0, [r4, #8]
   30680:	mov	r0, #16384	; 0x4000
   30684:	bl	119ac <mycore_malloc@plt>
   30688:	str	r0, [r4]
   3068c:	mov	r0, r4
   30690:	pop	{r4, sl, fp, pc}

00030694 <myhtml_tree_list_init@@Base>:
   30694:	push	{r4, sl, fp, lr}
   30698:	add	fp, sp, #8
   3069c:	mov	r0, #12
   306a0:	bl	119ac <mycore_malloc@plt>
   306a4:	mov	r4, r0
   306a8:	mov	r0, #0
   306ac:	str	r0, [r4, #4]
   306b0:	mov	r0, #4096	; 0x1000
   306b4:	str	r0, [r4, #8]
   306b8:	mov	r0, #16384	; 0x4000
   306bc:	bl	119ac <mycore_malloc@plt>
   306c0:	str	r0, [r4]
   306c4:	mov	r0, r4
   306c8:	pop	{r4, sl, fp, pc}

000306cc <myhtml_tree_token_list_init@@Base>:
   306cc:	push	{r4, sl, fp, lr}
   306d0:	add	fp, sp, #8
   306d4:	mov	r0, #12
   306d8:	bl	119ac <mycore_malloc@plt>
   306dc:	mov	r4, r0
   306e0:	mov	r0, #0
   306e4:	mov	r1, #4096	; 0x1000
   306e8:	stmib	r4, {r0, r1}
   306ec:	mov	r0, #16384	; 0x4000
   306f0:	bl	119ac <mycore_malloc@plt>
   306f4:	str	r0, [r4]
   306f8:	mov	r0, r4
   306fc:	pop	{r4, sl, fp, pc}

00030700 <myhtml_tree_template_insertion_init@@Base>:
   30700:	push	{r4, r5, fp, lr}
   30704:	add	fp, sp, #8
   30708:	mov	r4, r0
   3070c:	mov	r0, #12
   30710:	bl	119ac <mycore_malloc@plt>
   30714:	mov	r5, r0
   30718:	mov	r0, #0
   3071c:	mov	r1, #1024	; 0x400
   30720:	stmib	r5, {r0, r1}
   30724:	mov	r0, #4096	; 0x1000
   30728:	bl	119ac <mycore_malloc@plt>
   3072c:	str	r0, [r5]
   30730:	mov	r0, r5
   30734:	str	r5, [r4, #140]	; 0x8c
   30738:	pop	{r4, r5, fp, pc}

0003073c <myhtml_tree_clean@@Base>:
   3073c:	push	{r4, r5, r6, r7, fp, lr}
   30740:	add	fp, sp, #16
   30744:	vpush	{d8-d9}
   30748:	ldr	r5, [r0]
   3074c:	mov	r4, r0
   30750:	ldr	r0, [r5, #20]
   30754:	cmp	r0, #0
   30758:	beq	30780 <myhtml_tree_clean@@Base+0x44>
   3075c:	mov	r6, #0
   30760:	ldr	r1, [r4, #144]	; 0x90
   30764:	ldr	r0, [r4, #4]
   30768:	ldr	r1, [r1, r6, lsl #2]
   3076c:	bl	115b0 <mchar_async_node_clean@plt>
   30770:	ldr	r0, [r5, #20]
   30774:	add	r6, r6, #1
   30778:	cmp	r6, r0
   3077c:	bcc	30760 <myhtml_tree_clean@@Base+0x24>
   30780:	ldr	r0, [r4, #12]
   30784:	ldr	r1, [r4, #48]	; 0x30
   30788:	bl	116ac <mcobject_async_node_clean@plt>
   3078c:	ldr	r0, [r4, #8]
   30790:	ldr	r1, [r4, #40]	; 0x28
   30794:	ldr	r0, [r0, #4]
   30798:	bl	116ac <mcobject_async_node_clean@plt>
   3079c:	ldr	r0, [r4, #8]
   307a0:	ldr	r1, [r4, #44]	; 0x2c
   307a4:	ldr	r0, [r0, #8]
   307a8:	bl	116ac <mcobject_async_node_clean@plt>
   307ac:	ldr	r0, [r4, #20]
   307b0:	bl	117a8 <mythread_queue_list_entry_clean@plt>
   307b4:	ldr	r0, [r4]
   307b8:	ldr	r1, [r4, #20]
   307bc:	ldr	r0, [r0, #4]
   307c0:	bl	11a0c <mythread_queue_list_entry_make_batch@plt>
   307c4:	ldr	r0, [r4]
   307c8:	ldr	r1, [r4, #20]
   307cc:	ldr	r0, [r0]
   307d0:	bl	11b5c <mythread_queue_list_entry_make_stream@plt>
   307d4:	ldr	r0, [r4, #8]
   307d8:	bl	114e4 <myhtml_token_clean@plt>
   307dc:	ldr	r0, [r4, #12]
   307e0:	ldr	r1, [r4, #48]	; 0x30
   307e4:	mov	r2, #0
   307e8:	mov	r5, #0
   307ec:	bl	11910 <mcobject_async_malloc@plt>
   307f0:	vmov.i32	q4, #0	; 0x00000000
   307f4:	mov	r6, #36	; 0x24
   307f8:	mov	r1, r0
   307fc:	mov	r7, #1
   30800:	str	r5, [r0, #32]
   30804:	str	r4, [r0, #40]	; 0x28
   30808:	mov	r2, #0
   3080c:	vst1.32	{d8-d9}, [r1], r6
   30810:	str	r7, [r0, #8]
   30814:	add	r0, r0, #16
   30818:	vst1.32	{d8-d9}, [r0]
   3081c:	str	r5, [r1]
   30820:	ldr	r0, [r4, #12]
   30824:	ldr	r1, [r4, #48]	; 0x30
   30828:	bl	11910 <mcobject_async_malloc@plt>
   3082c:	add	r1, r0, #16
   30830:	str	r5, [r0, #32]
   30834:	str	r4, [r0, #40]	; 0x28
   30838:	vst1.32	{d8-d9}, [r1]
   3083c:	mov	r1, r0
   30840:	vst1.32	{d8-d9}, [r1], r6
   30844:	str	r5, [r1]
   30848:	mov	r1, #2
   3084c:	str	r7, [r0, #8]
   30850:	str	r1, [r4, #180]	; 0xb4
   30854:	str	r5, [r4, #156]	; 0x9c
   30858:	str	r5, [r4, #76]	; 0x4c
   3085c:	str	r5, [r4, #80]	; 0x50
   30860:	str	r0, [r4, #84]	; 0x54
   30864:	add	r0, r4, #88	; 0x58
   30868:	str	r5, [r4, #192]	; 0xc0
   3086c:	str	r5, [r4, #68]	; 0x44
   30870:	str	r5, [r4, #112]	; 0x70
   30874:	str	r5, [r4, #116]	; 0x74
   30878:	str	r5, [r4, #120]	; 0x78
   3087c:	str	r5, [r4, #60]	; 0x3c
   30880:	str	r5, [r4, #105]	; 0x69
   30884:	vst1.32	{d8-d9}, [r0]
   30888:	add	r0, r4, #160	; 0xa0
   3088c:	str	r5, [r4, #101]	; 0x65
   30890:	strb	r5, [r4, #188]	; 0xbc
   30894:	str	r5, [r4, #176]	; 0xb0
   30898:	vst1.32	{d8-d9}, [r0]
   3089c:	str	r5, [r4, #152]	; 0x98
   308a0:	str	r5, [r4, #200]	; 0xc8
   308a4:	str	r5, [r4, #196]	; 0xc4
   308a8:	str	r5, [r4, #204]	; 0xcc
   308ac:	ldr	r0, [r4, #148]	; 0x94
   308b0:	bl	113d0 <myhtml_stream_buffer_clean@plt>
   308b4:	ldr	r0, [r4, #124]	; 0x7c
   308b8:	str	r5, [r0, #4]
   308bc:	ldr	r0, [r4, #128]	; 0x80
   308c0:	str	r5, [r0, #4]
   308c4:	ldr	r0, [r4, #132]	; 0x84
   308c8:	str	r5, [r0, #4]
   308cc:	ldr	r0, [r4, #136]	; 0x88
   308d0:	str	r5, [r0, #4]
   308d4:	ldr	r0, [r4, #140]	; 0x8c
   308d8:	str	r5, [r0, #4]
   308dc:	ldr	r0, [r4, #72]	; 0x48
   308e0:	bl	11bbc <mcobject_clean@plt>
   308e4:	ldr	r0, [r4, #28]
   308e8:	bl	11c7c <myhtml_tag_clean@plt>
   308ec:	ldr	r0, [r4, #24]
   308f0:	bl	10ecc <mythread_queue_clean@plt>
   308f4:	ldr	r0, [r4, #8]
   308f8:	ldr	r1, [r0, #16]
   308fc:	bl	11724 <myhtml_token_attr_create@plt>
   30900:	str	r0, [r4, #56]	; 0x38
   30904:	vpop	{d8-d9}
   30908:	pop	{r4, r5, r6, r7, fp, pc}

0003090c <myhtml_tree_node_create@@Base>:
   3090c:	push	{r4, r5, fp, lr}
   30910:	add	fp, sp, #8
   30914:	mov	r4, r0
   30918:	ldr	r0, [r0, #12]
   3091c:	mov	r2, #0
   30920:	mov	r5, #0
   30924:	ldr	r1, [r4, #48]	; 0x30
   30928:	bl	11910 <mcobject_async_malloc@plt>
   3092c:	vmov.i32	q8, #0	; 0x00000000
   30930:	mov	r1, #36	; 0x24
   30934:	mov	r2, r0
   30938:	str	r5, [r0, #32]
   3093c:	str	r4, [r0, #40]	; 0x28
   30940:	vst1.32	{d16-d17}, [r2], r1
   30944:	mov	r1, #1
   30948:	str	r1, [r0, #8]
   3094c:	add	r1, r0, #16
   30950:	str	r5, [r2]
   30954:	vst1.32	{d16-d17}, [r1]
   30958:	pop	{r4, r5, fp, pc}

0003095c <myhtml_tree_active_formatting_clean@@Base>:
   3095c:	ldr	r0, [r0, #124]	; 0x7c
   30960:	mov	r1, #0
   30964:	str	r1, [r0, #4]
   30968:	bx	lr

0003096c <myhtml_tree_open_elements_clean@@Base>:
   3096c:	ldr	r0, [r0, #128]	; 0x80
   30970:	mov	r1, #0
   30974:	str	r1, [r0, #4]
   30978:	bx	lr

0003097c <myhtml_tree_list_clean@@Base>:
   3097c:	mov	r1, #0
   30980:	str	r1, [r0, #4]
   30984:	bx	lr

00030988 <myhtml_tree_token_list_clean@@Base>:
   30988:	mov	r1, #0
   3098c:	str	r1, [r0, #4]
   30990:	bx	lr

00030994 <myhtml_tree_template_insertion_clean@@Base>:
   30994:	ldr	r0, [r0, #140]	; 0x8c
   30998:	mov	r1, #0
   3099c:	str	r1, [r0, #4]
   309a0:	bx	lr

000309a4 <myhtml_tree_clean_all@@Base>:
   309a4:	push	{r4, r5, r6, r7, fp, lr}
   309a8:	add	fp, sp, #16
   309ac:	vpush	{d8-d9}
   309b0:	mov	r4, r0
   309b4:	ldr	r0, [r0, #12]
   309b8:	bl	11c70 <mcobject_async_clean@plt>
   309bc:	ldr	r0, [r4, #8]
   309c0:	bl	114e4 <myhtml_token_clean@plt>
   309c4:	ldr	r0, [r4, #4]
   309c8:	bl	1191c <mchar_async_clean@plt>
   309cc:	ldr	r0, [r4, #12]
   309d0:	ldr	r1, [r4, #48]	; 0x30
   309d4:	mov	r2, #0
   309d8:	mov	r5, #0
   309dc:	bl	11910 <mcobject_async_malloc@plt>
   309e0:	vmov.i32	q4, #0	; 0x00000000
   309e4:	mov	r6, #36	; 0x24
   309e8:	mov	r1, r0
   309ec:	mov	r7, #1
   309f0:	str	r5, [r0, #32]
   309f4:	str	r4, [r0, #40]	; 0x28
   309f8:	mov	r2, #0
   309fc:	vst1.32	{d8-d9}, [r1], r6
   30a00:	str	r7, [r0, #8]
   30a04:	add	r0, r0, #16
   30a08:	vst1.32	{d8-d9}, [r0]
   30a0c:	str	r5, [r1]
   30a10:	ldr	r0, [r4, #12]
   30a14:	ldr	r1, [r4, #48]	; 0x30
   30a18:	bl	11910 <mcobject_async_malloc@plt>
   30a1c:	add	r1, r0, #16
   30a20:	str	r5, [r0, #32]
   30a24:	str	r4, [r0, #40]	; 0x28
   30a28:	vst1.32	{d8-d9}, [r1]
   30a2c:	mov	r1, r0
   30a30:	vst1.32	{d8-d9}, [r1], r6
   30a34:	str	r5, [r1]
   30a38:	mov	r1, #2
   30a3c:	str	r7, [r0, #8]
   30a40:	str	r1, [r4, #180]	; 0xb4
   30a44:	str	r5, [r4, #156]	; 0x9c
   30a48:	str	r5, [r4, #76]	; 0x4c
   30a4c:	str	r5, [r4, #80]	; 0x50
   30a50:	str	r0, [r4, #84]	; 0x54
   30a54:	add	r0, r4, #88	; 0x58
   30a58:	str	r5, [r4, #192]	; 0xc0
   30a5c:	str	r5, [r4, #68]	; 0x44
   30a60:	str	r5, [r4, #112]	; 0x70
   30a64:	str	r5, [r4, #116]	; 0x74
   30a68:	str	r5, [r4, #120]	; 0x78
   30a6c:	str	r5, [r4, #60]	; 0x3c
   30a70:	str	r5, [r4, #105]	; 0x69
   30a74:	vst1.32	{d8-d9}, [r0]
   30a78:	add	r0, r4, #160	; 0xa0
   30a7c:	str	r5, [r4, #101]	; 0x65
   30a80:	strb	r5, [r4, #188]	; 0xbc
   30a84:	str	r5, [r4, #176]	; 0xb0
   30a88:	vst1.32	{d8-d9}, [r0]
   30a8c:	str	r5, [r4, #152]	; 0x98
   30a90:	str	r5, [r4, #200]	; 0xc8
   30a94:	str	r5, [r4, #196]	; 0xc4
   30a98:	str	r5, [r4, #204]	; 0xcc
   30a9c:	ldr	r0, [r4, #148]	; 0x94
   30aa0:	bl	113d0 <myhtml_stream_buffer_clean@plt>
   30aa4:	ldr	r0, [r4, #124]	; 0x7c
   30aa8:	str	r5, [r0, #4]
   30aac:	ldr	r0, [r4, #128]	; 0x80
   30ab0:	str	r5, [r0, #4]
   30ab4:	ldr	r0, [r4, #132]	; 0x84
   30ab8:	str	r5, [r0, #4]
   30abc:	ldr	r0, [r4, #136]	; 0x88
   30ac0:	str	r5, [r0, #4]
   30ac4:	ldr	r0, [r4, #140]	; 0x8c
   30ac8:	str	r5, [r0, #4]
   30acc:	ldr	r0, [r4, #72]	; 0x48
   30ad0:	bl	11bbc <mcobject_clean@plt>
   30ad4:	ldr	r0, [r4, #28]
   30ad8:	bl	11c7c <myhtml_tag_clean@plt>
   30adc:	ldr	r0, [r4, #20]
   30ae0:	bl	117a8 <mythread_queue_list_entry_clean@plt>
   30ae4:	ldr	r0, [r4]
   30ae8:	ldr	r1, [r4, #20]
   30aec:	ldr	r0, [r0, #4]
   30af0:	bl	11a0c <mythread_queue_list_entry_make_batch@plt>
   30af4:	ldr	r0, [r4]
   30af8:	ldr	r1, [r4, #20]
   30afc:	ldr	r0, [r0]
   30b00:	bl	11b5c <mythread_queue_list_entry_make_stream@plt>
   30b04:	ldr	r0, [r4, #8]
   30b08:	ldr	r1, [r0, #16]
   30b0c:	bl	11724 <myhtml_token_attr_create@plt>
   30b10:	str	r0, [r4, #56]	; 0x38
   30b14:	vpop	{d8-d9}
   30b18:	pop	{r4, r5, r6, r7, fp, pc}

00030b1c <myhtml_tree_destroy@@Base>:
   30b1c:	cmp	r0, #0
   30b20:	beq	30cac <myhtml_tree_destroy@@Base+0x190>
   30b24:	push	{r4, r5, r6, sl, fp, lr}
   30b28:	add	fp, sp, #16
   30b2c:	mov	r4, r0
   30b30:	ldr	r0, [r0, #28]
   30b34:	bl	11ae4 <myhtml_tag_destroy@plt>
   30b38:	str	r0, [r4, #28]
   30b3c:	ldr	r5, [r4, #124]	; 0x7c
   30b40:	cmp	r5, #0
   30b44:	beq	30b60 <myhtml_tree_destroy@@Base+0x44>
   30b48:	ldr	r0, [r5]
   30b4c:	cmp	r0, #0
   30b50:	beq	30b58 <myhtml_tree_destroy@@Base+0x3c>
   30b54:	bl	11a9c <mycore_free@plt>
   30b58:	mov	r0, r5
   30b5c:	bl	11a9c <mycore_free@plt>
   30b60:	mov	r6, #0
   30b64:	str	r6, [r4, #124]	; 0x7c
   30b68:	ldr	r5, [r4, #128]	; 0x80
   30b6c:	cmp	r5, #0
   30b70:	beq	30b8c <myhtml_tree_destroy@@Base+0x70>
   30b74:	ldr	r0, [r5]
   30b78:	cmp	r0, #0
   30b7c:	beq	30b84 <myhtml_tree_destroy@@Base+0x68>
   30b80:	bl	11a9c <mycore_free@plt>
   30b84:	mov	r0, r5
   30b88:	bl	11a9c <mycore_free@plt>
   30b8c:	str	r6, [r4, #128]	; 0x80
   30b90:	ldr	r5, [r4, #132]	; 0x84
   30b94:	cmp	r5, #0
   30b98:	beq	30bb4 <myhtml_tree_destroy@@Base+0x98>
   30b9c:	ldr	r0, [r5]
   30ba0:	cmp	r0, #0
   30ba4:	beq	30bac <myhtml_tree_destroy@@Base+0x90>
   30ba8:	bl	11a9c <mycore_free@plt>
   30bac:	mov	r0, r5
   30bb0:	bl	11a9c <mycore_free@plt>
   30bb4:	mov	r6, #0
   30bb8:	str	r6, [r4, #132]	; 0x84
   30bbc:	ldr	r5, [r4, #136]	; 0x88
   30bc0:	cmp	r5, #0
   30bc4:	beq	30be0 <myhtml_tree_destroy@@Base+0xc4>
   30bc8:	ldr	r0, [r5]
   30bcc:	cmp	r0, #0
   30bd0:	beq	30bd8 <myhtml_tree_destroy@@Base+0xbc>
   30bd4:	bl	11a9c <mycore_free@plt>
   30bd8:	mov	r0, r5
   30bdc:	bl	11a9c <mycore_free@plt>
   30be0:	str	r6, [r4, #136]	; 0x88
   30be4:	ldr	r0, [r4, #140]	; 0x8c
   30be8:	cmp	r0, #0
   30bec:	beq	30c14 <myhtml_tree_destroy@@Base+0xf8>
   30bf0:	ldr	r1, [r0]
   30bf4:	cmp	r1, #0
   30bf8:	beq	30c10 <myhtml_tree_destroy@@Base+0xf4>
   30bfc:	mov	r0, r1
   30c00:	bl	11a9c <mycore_free@plt>
   30c04:	ldr	r0, [r4, #140]	; 0x8c
   30c08:	cmp	r0, #0
   30c0c:	beq	30c14 <myhtml_tree_destroy@@Base+0xf8>
   30c10:	bl	11a9c <mycore_free@plt>
   30c14:	mov	r5, #0
   30c18:	mov	r1, #1
   30c1c:	str	r5, [r4, #140]	; 0x8c
   30c20:	ldr	r0, [r4, #16]
   30c24:	bl	111fc <mcsync_destroy@plt>
   30c28:	str	r0, [r4, #16]
   30c2c:	mov	r1, #1
   30c30:	ldr	r0, [r4, #12]
   30c34:	bl	118b0 <mcobject_async_destroy@plt>
   30c38:	str	r0, [r4, #12]
   30c3c:	ldr	r0, [r4, #8]
   30c40:	bl	1161c <myhtml_token_destroy@plt>
   30c44:	str	r0, [r4, #8]
   30c48:	mov	r1, #1
   30c4c:	ldr	r0, [r4, #4]
   30c50:	bl	11a78 <mchar_async_destroy@plt>
   30c54:	str	r0, [r4, #4]
   30c58:	mov	r1, #1
   30c5c:	ldr	r0, [r4, #148]	; 0x94
   30c60:	bl	10e9c <myhtml_stream_buffer_destroy@plt>
   30c64:	str	r0, [r4, #148]	; 0x94
   30c68:	ldr	r0, [r4, #24]
   30c6c:	bl	112b0 <mythread_queue_destroy@plt>
   30c70:	str	r0, [r4, #24]
   30c74:	mov	r1, #1
   30c78:	ldr	r0, [r4, #72]	; 0x48
   30c7c:	bl	10f14 <mcobject_destroy@plt>
   30c80:	str	r0, [r4, #72]	; 0x48
   30c84:	ldr	r0, [r4, #208]	; 0xd0
   30c88:	cmp	r0, #0
   30c8c:	beq	30c98 <myhtml_tree_destroy@@Base+0x17c>
   30c90:	bl	11a9c <mycore_free@plt>
   30c94:	str	r5, [r4, #208]	; 0xd0
   30c98:	ldr	r0, [r4, #144]	; 0x90
   30c9c:	bl	11a9c <mycore_free@plt>
   30ca0:	mov	r0, r4
   30ca4:	bl	11a9c <mycore_free@plt>
   30ca8:	pop	{r4, r5, r6, sl, fp, lr}
   30cac:	mov	r0, #0
   30cb0:	bx	lr

00030cb4 <myhtml_tree_active_formatting_destroy@@Base>:
   30cb4:	push	{r4, sl, fp, lr}
   30cb8:	add	fp, sp, #8
   30cbc:	ldr	r4, [r0, #124]	; 0x7c
   30cc0:	cmp	r4, #0
   30cc4:	beq	30ce0 <myhtml_tree_active_formatting_destroy@@Base+0x2c>
   30cc8:	ldr	r0, [r4]
   30ccc:	cmp	r0, #0
   30cd0:	beq	30cd8 <myhtml_tree_active_formatting_destroy@@Base+0x24>
   30cd4:	bl	11a9c <mycore_free@plt>
   30cd8:	mov	r0, r4
   30cdc:	bl	11a9c <mycore_free@plt>
   30ce0:	mov	r0, #0
   30ce4:	pop	{r4, sl, fp, pc}

00030ce8 <myhtml_tree_open_elements_destroy@@Base>:
   30ce8:	push	{r4, sl, fp, lr}
   30cec:	add	fp, sp, #8
   30cf0:	ldr	r4, [r0, #128]	; 0x80
   30cf4:	cmp	r4, #0
   30cf8:	beq	30d14 <myhtml_tree_open_elements_destroy@@Base+0x2c>
   30cfc:	ldr	r0, [r4]
   30d00:	cmp	r0, #0
   30d04:	beq	30d0c <myhtml_tree_open_elements_destroy@@Base+0x24>
   30d08:	bl	11a9c <mycore_free@plt>
   30d0c:	mov	r0, r4
   30d10:	bl	11a9c <mycore_free@plt>
   30d14:	mov	r0, #0
   30d18:	pop	{r4, sl, fp, pc}

00030d1c <myhtml_tree_list_destroy@@Base>:
   30d1c:	push	{r4, r5, r6, sl, fp, lr}
   30d20:	add	fp, sp, #16
   30d24:	mov	r4, #0
   30d28:	cmp	r0, #0
   30d2c:	beq	30d5c <myhtml_tree_list_destroy@@Base+0x40>
   30d30:	mov	r5, r0
   30d34:	ldr	r0, [r0]
   30d38:	mov	r6, r1
   30d3c:	cmp	r0, #0
   30d40:	beq	30d48 <myhtml_tree_list_destroy@@Base+0x2c>
   30d44:	bl	11a9c <mycore_free@plt>
   30d48:	cmp	r6, #0
   30d4c:	moveq	r0, r5
   30d50:	popeq	{r4, r5, r6, sl, fp, pc}
   30d54:	mov	r0, r5
   30d58:	bl	11a9c <mycore_free@plt>
   30d5c:	mov	r0, r4
   30d60:	pop	{r4, r5, r6, sl, fp, pc}

00030d64 <myhtml_tree_token_list_destroy@@Base>:
   30d64:	push	{r4, r5, r6, sl, fp, lr}
   30d68:	add	fp, sp, #16
   30d6c:	mov	r4, #0
   30d70:	cmp	r0, #0
   30d74:	beq	30da4 <myhtml_tree_token_list_destroy@@Base+0x40>
   30d78:	mov	r5, r0
   30d7c:	ldr	r0, [r0]
   30d80:	mov	r6, r1
   30d84:	cmp	r0, #0
   30d88:	beq	30d90 <myhtml_tree_token_list_destroy@@Base+0x2c>
   30d8c:	bl	11a9c <mycore_free@plt>
   30d90:	cmp	r6, #0
   30d94:	moveq	r0, r5
   30d98:	popeq	{r4, r5, r6, sl, fp, pc}
   30d9c:	mov	r0, r5
   30da0:	bl	11a9c <mycore_free@plt>
   30da4:	mov	r0, r4
   30da8:	pop	{r4, r5, r6, sl, fp, pc}

00030dac <myhtml_tree_template_insertion_destroy@@Base>:
   30dac:	push	{r4, sl, fp, lr}
   30db0:	add	fp, sp, #8
   30db4:	mov	r4, r0
   30db8:	ldr	r0, [r0, #140]	; 0x8c
   30dbc:	cmp	r0, #0
   30dc0:	beq	30de8 <myhtml_tree_template_insertion_destroy@@Base+0x3c>
   30dc4:	ldr	r1, [r0]
   30dc8:	cmp	r1, #0
   30dcc:	beq	30de4 <myhtml_tree_template_insertion_destroy@@Base+0x38>
   30dd0:	mov	r0, r1
   30dd4:	bl	11a9c <mycore_free@plt>
   30dd8:	ldr	r0, [r4, #140]	; 0x8c
   30ddc:	cmp	r0, #0
   30de0:	beq	30de8 <myhtml_tree_template_insertion_destroy@@Base+0x3c>
   30de4:	bl	11a9c <mycore_free@plt>
   30de8:	mov	r0, #0
   30dec:	pop	{r4, sl, fp, pc}

00030df0 <myhtml_tree_temp_tag_name_destroy@@Base>:
   30df0:	push	{r4, r5, r6, sl, fp, lr}
   30df4:	add	fp, sp, #16
   30df8:	mov	r4, #0
   30dfc:	cmp	r0, #0
   30e00:	beq	30e38 <myhtml_tree_temp_tag_name_destroy@@Base+0x48>
   30e04:	mov	r5, r0
   30e08:	ldr	r0, [r0]
   30e0c:	mov	r6, r1
   30e10:	cmp	r0, #0
   30e14:	beq	30e24 <myhtml_tree_temp_tag_name_destroy@@Base+0x34>
   30e18:	bl	11a9c <mycore_free@plt>
   30e1c:	mov	r0, #0
   30e20:	str	r0, [r5]
   30e24:	cmp	r6, #0
   30e28:	moveq	r0, r5
   30e2c:	popeq	{r4, r5, r6, sl, fp, pc}
   30e30:	mov	r0, r5
   30e34:	bl	11a9c <mycore_free@plt>
   30e38:	mov	r0, r4
   30e3c:	pop	{r4, r5, r6, sl, fp, pc}

00030e40 <myhtml_tree_node_clean@@Base>:
   30e40:	vmov.i32	q8, #0	; 0x00000000
   30e44:	add	r1, r0, #28
   30e48:	vst1.32	{d16-d17}, [r1]
   30e4c:	add	r1, r0, #16
   30e50:	vst1.32	{d16-d17}, [r1]
   30e54:	mov	r1, #8
   30e58:	vst1.32	{d16-d17}, [r0], r1
   30e5c:	mov	r1, #1
   30e60:	str	r1, [r0]
   30e64:	bx	lr

00030e68 <myhtml_tree_parse_flags@@Base>:
   30e68:	ldr	r0, [r0, #184]	; 0xb8
   30e6c:	bx	lr

00030e70 <myhtml_tree_parse_flags_set@@Base>:
   30e70:	str	r1, [r0, #184]	; 0xb8
   30e74:	bx	lr

00030e78 <myhtml_tree_get_myhtml@@Base>:
   30e78:	cmp	r0, #0
   30e7c:	ldrne	r0, [r0]
   30e80:	moveq	r0, #0
   30e84:	bx	lr

00030e88 <myhtml_tree_get_tag@@Base>:
   30e88:	cmp	r0, #0
   30e8c:	ldrne	r0, [r0, #28]
   30e90:	moveq	r0, #0
   30e94:	bx	lr

00030e98 <myhtml_tree_get_document@@Base>:
   30e98:	ldr	r0, [r0, #84]	; 0x54
   30e9c:	bx	lr

00030ea0 <myhtml_tree_get_node_html@@Base>:
   30ea0:	ldr	r0, [r0, #96]	; 0x60
   30ea4:	bx	lr

00030ea8 <myhtml_tree_get_node_body@@Base>:
   30ea8:	ldr	r0, [r0, #100]	; 0x64
   30eac:	bx	lr

00030eb0 <myhtml_tree_get_node_head@@Base>:
   30eb0:	ldr	r0, [r0, #92]	; 0x5c
   30eb4:	bx	lr

00030eb8 <myhtml_tree_get_mchar@@Base>:
   30eb8:	ldr	r0, [r0, #4]
   30ebc:	bx	lr

00030ec0 <myhtml_tree_get_mchar_node_id@@Base>:
   30ec0:	ldr	r0, [r0, #52]	; 0x34
   30ec4:	bx	lr

00030ec8 <myhtml_tree_node_add_child@@Base>:
   30ec8:	ldr	r2, [r0, #28]
   30ecc:	cmp	r2, #0
   30ed0:	streq	r1, [r0, #20]
   30ed4:	strne	r1, [r2, #16]
   30ed8:	strne	r2, [r1, #12]
   30edc:	str	r0, [r1, #24]
   30ee0:	str	r1, [r0, #28]
   30ee4:	ldr	r0, [r1, #40]	; 0x28
   30ee8:	ldr	r3, [r0, #236]	; 0xec
   30eec:	cmp	r3, #0
   30ef0:	bxeq	lr
   30ef4:	ldr	r2, [r0, #244]	; 0xf4
   30ef8:	bx	r3

00030efc <myhtml_tree_node_insert_before@@Base>:
   30efc:	ldr	r2, [r0, #12]
   30f00:	cmp	r2, #0
   30f04:	beq	30f18 <myhtml_tree_node_insert_before@@Base+0x1c>
   30f08:	str	r1, [r2, #16]
   30f0c:	str	r2, [r1, #12]
   30f10:	ldr	r2, [r0, #24]
   30f14:	b	30f20 <myhtml_tree_node_insert_before@@Base+0x24>
   30f18:	ldr	r2, [r0, #24]
   30f1c:	str	r1, [r2, #20]
   30f20:	str	r0, [r1, #16]
   30f24:	str	r2, [r1, #24]
   30f28:	str	r1, [r0, #12]
   30f2c:	ldr	r0, [r1, #40]	; 0x28
   30f30:	ldr	r3, [r0, #236]	; 0xec
   30f34:	cmp	r3, #0
   30f38:	bxeq	lr
   30f3c:	ldr	r2, [r0, #244]	; 0xf4
   30f40:	bx	r3

00030f44 <myhtml_tree_node_insert_after@@Base>:
   30f44:	ldr	r2, [r0, #16]
   30f48:	cmp	r2, #0
   30f4c:	beq	30f60 <myhtml_tree_node_insert_after@@Base+0x1c>
   30f50:	str	r1, [r2, #12]
   30f54:	str	r2, [r1, #16]
   30f58:	ldr	r2, [r0, #24]
   30f5c:	b	30f68 <myhtml_tree_node_insert_after@@Base+0x24>
   30f60:	ldr	r2, [r0, #24]
   30f64:	str	r1, [r2, #28]
   30f68:	str	r0, [r1, #12]
   30f6c:	str	r2, [r1, #24]
   30f70:	str	r1, [r0, #16]
   30f74:	ldr	r0, [r1, #40]	; 0x28
   30f78:	ldr	r3, [r0, #236]	; 0xec
   30f7c:	cmp	r3, #0
   30f80:	bxeq	lr
   30f84:	ldr	r2, [r0, #244]	; 0xf4
   30f88:	bx	r3

00030f8c <myhtml_tree_node_find_parent_by_tag_id@@Base>:
   30f8c:	ldr	r0, [r0, #24]
   30f90:	cmp	r0, #0
   30f94:	ldrne	r2, [r0, #4]
   30f98:	cmpne	r2, r1
   30f9c:	bne	30f8c <myhtml_tree_node_find_parent_by_tag_id@@Base>
   30fa0:	bx	lr

00030fa4 <myhtml_tree_node_remove@@Base>:
   30fa4:	push	{r4, sl, fp, lr}
   30fa8:	add	fp, sp, #8
   30fac:	mov	r4, r0
   30fb0:	ldr	r0, [r0, #16]
   30fb4:	cmp	r0, #0
   30fb8:	beq	30fc8 <myhtml_tree_node_remove@@Base+0x24>
   30fbc:	add	r2, r0, #12
   30fc0:	add	r1, r4, #12
   30fc4:	b	30fdc <myhtml_tree_node_remove@@Base+0x38>
   30fc8:	ldr	r2, [r4, #24]
   30fcc:	add	r1, r4, #12
   30fd0:	cmp	r2, #0
   30fd4:	beq	30fe4 <myhtml_tree_node_remove@@Base+0x40>
   30fd8:	add	r2, r2, #28
   30fdc:	ldr	r3, [r1]
   30fe0:	str	r3, [r2]
   30fe4:	ldr	r1, [r1]
   30fe8:	cmp	r1, #0
   30fec:	beq	30ff8 <myhtml_tree_node_remove@@Base+0x54>
   30ff0:	add	r1, r1, #16
   30ff4:	b	31008 <myhtml_tree_node_remove@@Base+0x64>
   30ff8:	ldr	r1, [r4, #24]
   30ffc:	cmp	r1, #0
   31000:	beq	3100c <myhtml_tree_node_remove@@Base+0x68>
   31004:	add	r1, r1, #20
   31008:	str	r0, [r1]
   3100c:	ldr	r0, [r4, #40]	; 0x28
   31010:	ldr	r3, [r0, #240]	; 0xf0
   31014:	cmp	r3, #0
   31018:	beq	31028 <myhtml_tree_node_remove@@Base+0x84>
   3101c:	ldr	r2, [r0, #248]	; 0xf8
   31020:	mov	r1, r4
   31024:	blx	r3
   31028:	mov	r0, #0
   3102c:	str	r0, [r4, #12]
   31030:	str	r0, [r4, #16]
   31034:	str	r0, [r4, #24]
   31038:	mov	r0, r4
   3103c:	pop	{r4, sl, fp, pc}

00031040 <myhtml_tree_node_free@@Base>:
   31040:	cmp	r0, #0
   31044:	bxeq	lr
   31048:	push	{r4, sl, fp, lr}
   3104c:	add	fp, sp, #8
   31050:	ldr	r1, [r0, #32]
   31054:	mov	r4, r0
   31058:	cmp	r1, #0
   3105c:	beq	3107c <myhtml_tree_node_free@@Base+0x3c>
   31060:	ldr	r0, [r4, #40]	; 0x28
   31064:	ldr	r0, [r0, #8]
   31068:	bl	1164c <myhtml_token_attr_delete_all@plt>
   3106c:	ldr	r0, [r4, #40]	; 0x28
   31070:	ldr	r1, [r4, #32]
   31074:	ldr	r0, [r0, #8]
   31078:	bl	11bd4 <myhtml_token_delete@plt>
   3107c:	ldr	r0, [r4, #40]	; 0x28
   31080:	mov	r1, r4
   31084:	ldr	r0, [r0, #12]
   31088:	pop	{r4, sl, fp, lr}
   3108c:	b	1110c <mcobject_async_free@plt>

00031090 <myhtml_tree_node_delete@@Base>:
   31090:	cmp	r0, #0
   31094:	bxeq	lr
   31098:	push	{r4, sl, fp, lr}
   3109c:	add	fp, sp, #8
   310a0:	mov	r4, r0
   310a4:	ldr	r0, [r0, #16]
   310a8:	cmp	r0, #0
   310ac:	beq	310bc <myhtml_tree_node_delete@@Base+0x2c>
   310b0:	add	r2, r0, #12
   310b4:	add	r1, r4, #12
   310b8:	b	310d0 <myhtml_tree_node_delete@@Base+0x40>
   310bc:	ldr	r2, [r4, #24]
   310c0:	add	r1, r4, #12
   310c4:	cmp	r2, #0
   310c8:	beq	310d8 <myhtml_tree_node_delete@@Base+0x48>
   310cc:	add	r2, r2, #28
   310d0:	ldr	r3, [r1]
   310d4:	str	r3, [r2]
   310d8:	ldr	r1, [r1]
   310dc:	cmp	r1, #0
   310e0:	beq	310ec <myhtml_tree_node_delete@@Base+0x5c>
   310e4:	add	r1, r1, #16
   310e8:	b	310fc <myhtml_tree_node_delete@@Base+0x6c>
   310ec:	ldr	r1, [r4, #24]
   310f0:	cmp	r1, #0
   310f4:	beq	31100 <myhtml_tree_node_delete@@Base+0x70>
   310f8:	add	r1, r1, #20
   310fc:	str	r0, [r1]
   31100:	ldr	r0, [r4, #40]	; 0x28
   31104:	ldr	r3, [r0, #240]	; 0xf0
   31108:	cmp	r3, #0
   3110c:	beq	3111c <myhtml_tree_node_delete@@Base+0x8c>
   31110:	ldr	r2, [r0, #248]	; 0xf8
   31114:	mov	r1, r4
   31118:	blx	r3
   3111c:	mov	r0, #0
   31120:	str	r0, [r4, #12]
   31124:	str	r0, [r4, #16]
   31128:	str	r0, [r4, #24]
   3112c:	ldr	r1, [r4, #32]
   31130:	cmp	r1, #0
   31134:	beq	31154 <myhtml_tree_node_delete@@Base+0xc4>
   31138:	ldr	r0, [r4, #40]	; 0x28
   3113c:	ldr	r0, [r0, #8]
   31140:	bl	1164c <myhtml_token_attr_delete_all@plt>
   31144:	ldr	r0, [r4, #40]	; 0x28
   31148:	ldr	r1, [r4, #32]
   3114c:	ldr	r0, [r0, #8]
   31150:	bl	11bd4 <myhtml_token_delete@plt>
   31154:	ldr	r0, [r4, #40]	; 0x28
   31158:	mov	r1, r4
   3115c:	ldr	r0, [r0, #12]
   31160:	pop	{r4, sl, fp, lr}
   31164:	b	1110c <mcobject_async_free@plt>

00031168 <myhtml_tree_node_delete_recursive@@Base>:
   31168:	push	{r4, sl, fp, lr}
   3116c:	add	fp, sp, #8
   31170:	cmp	r0, #0
   31174:	popeq	{r4, sl, fp, pc}
   31178:	mov	r4, r0
   3117c:	ldr	r0, [r0, #20]
   31180:	cmp	r0, #0
   31184:	blne	31194 <myhtml_tree_node_delete_recursive@@Base+0x2c>
   31188:	mov	r0, r4
   3118c:	pop	{r4, sl, fp, lr}
   31190:	b	31090 <myhtml_tree_node_delete@@Base>
   31194:	push	{r4, sl, fp, lr}
   31198:	add	fp, sp, #8
   3119c:	cmp	r0, #0
   311a0:	popeq	{r4, sl, fp, pc}
   311a4:	mov	r4, r0
   311a8:	ldr	r0, [r4, #20]
   311ac:	cmp	r0, #0
   311b0:	blne	31194 <myhtml_tree_node_delete_recursive@@Base+0x2c>
   311b4:	ldr	r4, [r4, #16]
   311b8:	mov	r0, r4
   311bc:	bl	11a90 <myhtml_tree_node_delete@plt>
   311c0:	cmp	r4, #0
   311c4:	bne	311a8 <myhtml_tree_node_delete_recursive@@Base+0x40>
   311c8:	pop	{r4, sl, fp, pc}

000311cc <myhtml_tree_node_clone@@Base>:
   311cc:	push	{r4, r5, r6, r7, fp, lr}
   311d0:	add	fp, sp, #16
   311d4:	ldr	r7, [r0, #40]	; 0x28
   311d8:	mov	r5, r0
   311dc:	mov	r2, #0
   311e0:	mov	r6, #0
   311e4:	ldr	r0, [r7, #12]
   311e8:	ldr	r1, [r7, #48]	; 0x30
   311ec:	bl	11910 <mcobject_async_malloc@plt>
   311f0:	mov	r4, r0
   311f4:	vmov.i32	q8, #0	; 0x00000000
   311f8:	mov	r0, #36	; 0x24
   311fc:	mov	r1, r4
   31200:	vst1.32	{d16-d17}, [r1], r0
   31204:	mov	r0, #1
   31208:	str	r0, [r4, #8]
   3120c:	add	r0, r4, #16
   31210:	str	r6, [r4, #32]
   31214:	str	r7, [r4, #40]	; 0x28
   31218:	str	r6, [r1]
   3121c:	vst1.32	{d16-d17}, [r0]
   31220:	ldr	r1, [r5, #32]
   31224:	cmp	r1, #0
   31228:	beq	3123c <myhtml_tree_node_clone@@Base+0x70>
   3122c:	ldr	r0, [r5, #40]	; 0x28
   31230:	ldr	r0, [r0, #8]
   31234:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   31238:	ldr	r6, [r5, #32]
   3123c:	ldr	r1, [r5, #40]	; 0x28
   31240:	ldr	r0, [r1, #8]
   31244:	ldr	r2, [r1, #40]	; 0x28
   31248:	ldr	r3, [r1, #44]	; 0x2c
   3124c:	mov	r1, r6
   31250:	bl	1101c <myhtml_token_node_clone@plt>
   31254:	str	r0, [r4, #32]
   31258:	cmp	r0, #0
   3125c:	ldr	r1, [r5, #4]
   31260:	str	r1, [r4, #4]
   31264:	ldr	r1, [r5, #8]
   31268:	str	r1, [r4, #8]
   3126c:	ldrne	r1, [r0, #48]	; 0x30
   31270:	orrne	r1, r1, #4
   31274:	strne	r1, [r0, #48]	; 0x30
   31278:	mov	r0, r4
   3127c:	pop	{r4, r5, r6, r7, fp, pc}

00031280 <myhtml_tree_node_insert_by_mode@@Base>:
   31280:	cmp	r2, #1
   31284:	beq	312c4 <myhtml_tree_node_insert_by_mode@@Base+0x44>
   31288:	cmp	r2, #0
   3128c:	bne	312e0 <myhtml_tree_node_insert_by_mode@@Base+0x60>
   31290:	ldr	r2, [r0, #28]
   31294:	cmp	r2, #0
   31298:	streq	r1, [r0, #20]
   3129c:	strne	r1, [r2, #16]
   312a0:	strne	r2, [r1, #12]
   312a4:	str	r0, [r1, #24]
   312a8:	str	r1, [r0, #28]
   312ac:	ldr	r0, [r1, #40]	; 0x28
   312b0:	ldr	r3, [r0, #236]	; 0xec
   312b4:	cmp	r3, #0
   312b8:	beq	31354 <myhtml_tree_node_insert_by_mode@@Base+0xd4>
   312bc:	ldr	r2, [r0, #244]	; 0xf4
   312c0:	bx	r3
   312c4:	ldr	r2, [r0, #12]
   312c8:	cmp	r2, #0
   312cc:	beq	312fc <myhtml_tree_node_insert_by_mode@@Base+0x7c>
   312d0:	str	r1, [r2, #16]
   312d4:	str	r2, [r1, #12]
   312d8:	ldr	r2, [r0, #24]
   312dc:	b	31304 <myhtml_tree_node_insert_by_mode@@Base+0x84>
   312e0:	ldr	r2, [r0, #16]
   312e4:	cmp	r2, #0
   312e8:	beq	31328 <myhtml_tree_node_insert_by_mode@@Base+0xa8>
   312ec:	str	r1, [r2, #12]
   312f0:	str	r2, [r1, #16]
   312f4:	ldr	r2, [r0, #24]
   312f8:	b	31330 <myhtml_tree_node_insert_by_mode@@Base+0xb0>
   312fc:	ldr	r2, [r0, #24]
   31300:	str	r1, [r2, #20]
   31304:	str	r0, [r1, #16]
   31308:	str	r2, [r1, #24]
   3130c:	str	r1, [r0, #12]
   31310:	ldr	r0, [r1, #40]	; 0x28
   31314:	ldr	r3, [r0, #236]	; 0xec
   31318:	cmp	r3, #0
   3131c:	bxeq	lr
   31320:	ldr	r2, [r0, #244]	; 0xf4
   31324:	bx	r3
   31328:	ldr	r2, [r0, #24]
   3132c:	str	r1, [r2, #28]
   31330:	str	r0, [r1, #12]
   31334:	str	r2, [r1, #24]
   31338:	str	r1, [r0, #16]
   3133c:	ldr	r0, [r1, #40]	; 0x28
   31340:	ldr	r3, [r0, #236]	; 0xec
   31344:	cmp	r3, #0
   31348:	beq	31354 <myhtml_tree_node_insert_by_mode@@Base+0xd4>
   3134c:	ldr	r2, [r0, #244]	; 0xf4
   31350:	bx	r3
   31354:	bx	lr

00031358 <myhtml_tree_node_insert_by_token@@Base>:
   31358:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3135c:	add	fp, sp, #24
   31360:	sub	sp, sp, #8
   31364:	mov	r5, r0
   31368:	mov	r7, r1
   3136c:	ldr	r0, [r0, #12]
   31370:	mov	r6, r2
   31374:	mov	r2, #0
   31378:	mov	r8, #0
   3137c:	ldr	r1, [r5, #48]	; 0x30
   31380:	bl	11910 <mcobject_async_malloc@plt>
   31384:	mov	r4, r0
   31388:	str	r8, [r0, #32]
   3138c:	str	r5, [r0, #40]	; 0x28
   31390:	vmov.i32	q8, #0	; 0x00000000
   31394:	mov	r0, #36	; 0x24
   31398:	add	r2, sp, #4
   3139c:	mov	r1, r4
   313a0:	vst1.32	{d16-d17}, [r1], r0
   313a4:	add	r0, r4, #16
   313a8:	str	r8, [r1]
   313ac:	vst1.32	{d16-d17}, [r0]
   313b0:	mov	r1, #0
   313b4:	ldr	r0, [r7]
   313b8:	str	r7, [r4, #32]
   313bc:	stmib	r4, {r0, r6}
   313c0:	mov	r0, r5
   313c4:	bl	11b14 <myhtml_tree_appropriate_place_inserting@plt>
   313c8:	ldr	r2, [sp, #4]
   313cc:	mov	r1, r4
   313d0:	bl	11304 <myhtml_tree_node_insert_by_mode@plt>
   313d4:	ldr	r5, [r5, #128]	; 0x80
   313d8:	ldr	r1, [r5, #8]
   313dc:	ldr	r0, [r5, #4]
   313e0:	cmp	r0, r1
   313e4:	bcc	31404 <myhtml_tree_node_insert_by_token@@Base+0xac>
   313e8:	lsl	r0, r1, #1
   313ec:	lsl	r1, r1, #3
   313f0:	str	r0, [r5, #8]
   313f4:	ldr	r0, [r5]
   313f8:	bl	10da0 <mycore_realloc@plt>
   313fc:	cmp	r0, #0
   31400:	strne	r0, [r5]
   31404:	ldr	r0, [r5]
   31408:	ldr	r1, [r5, #4]
   3140c:	str	r4, [r0, r1, lsl #2]
   31410:	ldr	r0, [r5, #4]
   31414:	add	r0, r0, #1
   31418:	str	r0, [r5, #4]
   3141c:	mov	r0, r4
   31420:	sub	sp, fp, #24
   31424:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00031428 <myhtml_tree_appropriate_place_inserting@@Base>:
   31428:	mov	r3, #0
   3142c:	cmp	r1, #0
   31430:	str	r3, [r2]
   31434:	bne	31458 <myhtml_tree_appropriate_place_inserting@@Base+0x30>
   31438:	ldr	r3, [r0, #128]	; 0x80
   3143c:	ldr	r1, [r3, #4]
   31440:	cmp	r1, #0
   31444:	mov	r1, #0
   31448:	ldrne	r1, [r3]
   3144c:	ldrne	r3, [r3, #4]
   31450:	addne	r1, r1, r3, lsl #2
   31454:	ldrne	r1, [r1, #-4]
   31458:	push	{r4, sl, fp, lr}
   3145c:	add	fp, sp, #8
   31460:	ldrb	r3, [r0, #188]	; 0xbc
   31464:	cmp	r3, #0
   31468:	beq	31590 <myhtml_tree_appropriate_place_inserting@@Base+0x168>
   3146c:	ldr	r3, [r1, #8]
   31470:	cmp	r3, #1
   31474:	bne	31590 <myhtml_tree_appropriate_place_inserting@@Base+0x168>
   31478:	ldr	r3, [r1, #4]
   3147c:	sub	lr, r3, #125	; 0x7d
   31480:	cmp	lr, #10
   31484:	bhi	31590 <myhtml_tree_appropriate_place_inserting@@Base+0x168>
   31488:	mov	ip, #1
   3148c:	movw	r3, #1187	; 0x4a3
   31490:	tst	r3, ip, lsl lr
   31494:	beq	31590 <myhtml_tree_appropriate_place_inserting@@Base+0x168>
   31498:	ldr	r3, [r0, #128]	; 0x80
   3149c:	mov	lr, #0
   314a0:	ldr	r0, [r3, #4]
   314a4:	ldr	ip, [r3]
   314a8:	cmp	r0, #0
   314ac:	beq	314e0 <myhtml_tree_appropriate_place_inserting@@Base+0xb8>
   314b0:	sub	r0, r0, #1
   314b4:	ldr	r1, [ip, r0, lsl #2]
   314b8:	ldr	r4, [r1, #4]
   314bc:	cmp	r4, #128	; 0x80
   314c0:	ldreq	r4, [r1, #8]
   314c4:	cmpeq	r4, #1
   314c8:	beq	314e4 <myhtml_tree_appropriate_place_inserting@@Base+0xbc>
   314cc:	sub	r0, r0, #1
   314d0:	cmn	r0, #1
   314d4:	bne	314b4 <myhtml_tree_appropriate_place_inserting@@Base+0x8c>
   314d8:	mov	r0, #0
   314dc:	b	314e0 <myhtml_tree_appropriate_place_inserting@@Base+0xb8>
   314e0:	mov	r1, #0
   314e4:	ldr	r3, [r3, #4]
   314e8:	cmp	r3, #0
   314ec:	beq	31564 <myhtml_tree_appropriate_place_inserting@@Base+0x13c>
   314f0:	sub	r3, r3, #1
   314f4:	ldr	lr, [ip, r3, lsl #2]
   314f8:	ldr	r4, [lr, #4]
   314fc:	cmp	r4, #125	; 0x7d
   31500:	ldreq	r4, [lr, #8]
   31504:	cmpeq	r4, #1
   31508:	beq	31520 <myhtml_tree_appropriate_place_inserting@@Base+0xf8>
   3150c:	sub	r3, r3, #1
   31510:	cmn	r3, #1
   31514:	bne	314f4 <myhtml_tree_appropriate_place_inserting@@Base+0xcc>
   31518:	mov	r3, #0
   3151c:	mov	lr, #0
   31520:	cmp	r1, #0
   31524:	beq	3156c <myhtml_tree_appropriate_place_inserting@@Base+0x144>
   31528:	cmp	r0, r3
   3152c:	bhi	31590 <myhtml_tree_appropriate_place_inserting@@Base+0x168>
   31530:	cmp	lr, #0
   31534:	beq	31590 <myhtml_tree_appropriate_place_inserting@@Base+0x168>
   31538:	ldr	r0, [lr, #24]
   3153c:	cmp	r0, #0
   31540:	beq	31588 <myhtml_tree_appropriate_place_inserting@@Base+0x160>
   31544:	ldr	r1, [lr, #12]
   31548:	mov	r0, #2
   3154c:	cmp	r1, #0
   31550:	movweq	r0, #1
   31554:	moveq	r1, lr
   31558:	str	r0, [r2]
   3155c:	mov	r0, r1
   31560:	pop	{r4, sl, fp, pc}
   31564:	cmp	r1, #0
   31568:	bne	31528 <myhtml_tree_appropriate_place_inserting@@Base+0x100>
   3156c:	cmp	lr, #0
   31570:	ldreq	r1, [ip]
   31574:	moveq	r0, r1
   31578:	popeq	{r4, sl, fp, pc}
   3157c:	ldr	r0, [lr, #24]
   31580:	cmp	r0, #0
   31584:	bne	31544 <myhtml_tree_appropriate_place_inserting@@Base+0x11c>
   31588:	add	r0, ip, r3, lsl #2
   3158c:	ldr	r1, [r0, #-4]
   31590:	mov	r0, r1
   31594:	pop	{r4, sl, fp, pc}

00031598 <myhtml_tree_open_elements_append@@Base>:
   31598:	push	{r4, r5, fp, lr}
   3159c:	add	fp, sp, #8
   315a0:	ldr	r5, [r0, #128]	; 0x80
   315a4:	mov	r4, r1
   315a8:	ldr	r1, [r5, #8]
   315ac:	ldr	r0, [r5, #4]
   315b0:	cmp	r0, r1
   315b4:	bcc	315d4 <myhtml_tree_open_elements_append@@Base+0x3c>
   315b8:	lsl	r0, r1, #1
   315bc:	lsl	r1, r1, #3
   315c0:	str	r0, [r5, #8]
   315c4:	ldr	r0, [r5]
   315c8:	bl	10da0 <mycore_realloc@plt>
   315cc:	cmp	r0, #0
   315d0:	strne	r0, [r5]
   315d4:	ldr	r0, [r5]
   315d8:	ldr	r1, [r5, #4]
   315dc:	str	r4, [r0, r1, lsl #2]
   315e0:	ldr	r0, [r5, #4]
   315e4:	add	r0, r0, #1
   315e8:	str	r0, [r5, #4]
   315ec:	pop	{r4, r5, fp, pc}

000315f0 <myhtml_tree_node_insert@@Base>:
   315f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   315f4:	add	fp, sp, #24
   315f8:	sub	sp, sp, #8
   315fc:	mov	r5, r0
   31600:	mov	r7, r1
   31604:	ldr	r0, [r0, #12]
   31608:	mov	r6, r2
   3160c:	mov	r2, #0
   31610:	mov	r8, #0
   31614:	ldr	r1, [r5, #48]	; 0x30
   31618:	bl	11910 <mcobject_async_malloc@plt>
   3161c:	mov	r4, r0
   31620:	vmov.i32	q8, #0	; 0x00000000
   31624:	mov	r0, #36	; 0x24
   31628:	add	r2, sp, #4
   3162c:	mov	r1, r4
   31630:	vst1.32	{d16-d17}, [r1], r0
   31634:	add	r0, r4, #16
   31638:	str	r7, [r4, #4]
   3163c:	str	r6, [r4, #8]
   31640:	str	r8, [r4, #32]
   31644:	str	r5, [r4, #40]	; 0x28
   31648:	vst1.32	{d16-d17}, [r0]
   3164c:	str	r8, [r1]
   31650:	mov	r0, r5
   31654:	mov	r1, #0
   31658:	bl	11b14 <myhtml_tree_appropriate_place_inserting@plt>
   3165c:	ldr	r2, [sp, #4]
   31660:	mov	r1, r4
   31664:	bl	11304 <myhtml_tree_node_insert_by_mode@plt>
   31668:	ldr	r5, [r5, #128]	; 0x80
   3166c:	ldr	r1, [r5, #8]
   31670:	ldr	r0, [r5, #4]
   31674:	cmp	r0, r1
   31678:	bcc	31698 <myhtml_tree_node_insert@@Base+0xa8>
   3167c:	lsl	r0, r1, #1
   31680:	lsl	r1, r1, #3
   31684:	str	r0, [r5, #8]
   31688:	ldr	r0, [r5]
   3168c:	bl	10da0 <mycore_realloc@plt>
   31690:	cmp	r0, #0
   31694:	strne	r0, [r5]
   31698:	ldr	r0, [r5]
   3169c:	ldr	r1, [r5, #4]
   316a0:	str	r4, [r0, r1, lsl #2]
   316a4:	ldr	r0, [r5, #4]
   316a8:	add	r0, r0, #1
   316ac:	str	r0, [r5, #4]
   316b0:	mov	r0, r4
   316b4:	sub	sp, fp, #24
   316b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000316bc <myhtml_tree_node_insert_comment@@Base>:
   316bc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   316c0:	add	fp, sp, #24
   316c4:	sub	sp, sp, #8
   316c8:	mov	r7, r0
   316cc:	mov	r8, r1
   316d0:	ldr	r0, [r0, #12]
   316d4:	mov	r4, r2
   316d8:	mov	r2, #0
   316dc:	mov	r6, #0
   316e0:	ldr	r1, [r7, #48]	; 0x30
   316e4:	bl	11910 <mcobject_async_malloc@plt>
   316e8:	mov	r5, r0
   316ec:	vmov.i32	q8, #0	; 0x00000000
   316f0:	mov	r0, #36	; 0x24
   316f4:	mov	r2, #2
   316f8:	cmp	r4, #0
   316fc:	mov	r1, r5
   31700:	vst1.32	{d16-d17}, [r1], r0
   31704:	mov	r0, #1
   31708:	str	r2, [r5, #4]
   3170c:	str	r0, [r5, #8]
   31710:	add	r0, r5, #16
   31714:	str	r8, [r5, #32]
   31718:	str	r7, [r5, #40]	; 0x28
   3171c:	str	r6, [r1]
   31720:	vst1.32	{d16-d17}, [r0]
   31724:	str	r6, [sp, #4]
   31728:	bne	31744 <myhtml_tree_node_insert_comment@@Base+0x88>
   3172c:	add	r2, sp, #4
   31730:	mov	r0, r7
   31734:	mov	r1, #0
   31738:	bl	11b14 <myhtml_tree_appropriate_place_inserting@plt>
   3173c:	ldr	r6, [sp, #4]
   31740:	mov	r4, r0
   31744:	mov	r0, r4
   31748:	mov	r1, r5
   3174c:	mov	r2, r6
   31750:	bl	11304 <myhtml_tree_node_insert_by_mode@plt>
   31754:	ldr	r0, [r4, #8]
   31758:	str	r0, [r5, #8]
   3175c:	mov	r0, r5
   31760:	sub	sp, fp, #24
   31764:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00031768 <myhtml_tree_node_insert_doctype@@Base>:
   31768:	push	{r4, r5, r6, r7, fp, lr}
   3176c:	add	fp, sp, #16
   31770:	mov	r4, r0
   31774:	mov	r6, r1
   31778:	ldr	r0, [r0, #12]
   3177c:	mov	r2, #0
   31780:	mov	r7, #0
   31784:	ldr	r1, [r4, #48]	; 0x30
   31788:	bl	11910 <mcobject_async_malloc@plt>
   3178c:	mov	r5, r0
   31790:	vmov.i32	q8, #0	; 0x00000000
   31794:	mov	r0, #36	; 0x24
   31798:	mov	r2, #3
   3179c:	mov	r1, r5
   317a0:	vst1.32	{d16-d17}, [r1], r0
   317a4:	mov	r0, #1
   317a8:	str	r2, [r5, #4]
   317ac:	str	r0, [r5, #8]
   317b0:	add	r0, r5, #16
   317b4:	str	r6, [r5, #32]
   317b8:	str	r4, [r5, #40]	; 0x28
   317bc:	str	r7, [r1]
   317c0:	vst1.32	{d16-d17}, [r0]
   317c4:	ldr	r0, [r4, #84]	; 0x54
   317c8:	ldr	r1, [r0, #28]
   317cc:	cmp	r1, #0
   317d0:	streq	r5, [r0, #20]
   317d4:	strne	r5, [r1, #16]
   317d8:	strne	r1, [r5, #12]
   317dc:	str	r0, [r5, #24]
   317e0:	str	r5, [r0, #28]
   317e4:	ldr	r3, [r4, #236]	; 0xec
   317e8:	cmp	r3, #0
   317ec:	beq	31800 <myhtml_tree_node_insert_doctype@@Base+0x98>
   317f0:	ldr	r2, [r4, #244]	; 0xf4
   317f4:	mov	r0, r4
   317f8:	mov	r1, r5
   317fc:	blx	r3
   31800:	mov	r0, r5
   31804:	pop	{r4, r5, r6, r7, fp, pc}

00031808 <myhtml_tree_node_insert_root@@Base>:
   31808:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3180c:	add	fp, sp, #24
   31810:	mov	r4, r0
   31814:	mov	r7, r1
   31818:	ldr	r0, [r0, #12]
   3181c:	mov	r8, r2
   31820:	mov	r2, #0
   31824:	mov	r6, #0
   31828:	ldr	r1, [r4, #48]	; 0x30
   3182c:	bl	11910 <mcobject_async_malloc@plt>
   31830:	mov	r5, r0
   31834:	str	r6, [r0, #32]
   31838:	str	r4, [r0, #40]	; 0x28
   3183c:	vmov.i32	q8, #0	; 0x00000000
   31840:	mov	r0, #36	; 0x24
   31844:	cmp	r7, #0
   31848:	mov	r1, r5
   3184c:	vst1.32	{d16-d17}, [r1], r0
   31850:	mov	r0, #1
   31854:	str	r0, [r5, #8]
   31858:	add	r0, r5, #16
   3185c:	str	r6, [r1]
   31860:	vst1.32	{d16-d17}, [r0]
   31864:	ldrne	r0, [r7]
   31868:	str	r7, [r5, #32]
   3186c:	moveq	r0, #65	; 0x41
   31870:	stmib	r5, {r0, r8}
   31874:	ldr	r0, [r4, #84]	; 0x54
   31878:	ldr	r1, [r0, #28]
   3187c:	cmp	r1, #0
   31880:	streq	r5, [r0, #20]
   31884:	strne	r5, [r1, #16]
   31888:	strne	r1, [r5, #12]
   3188c:	str	r0, [r5, #24]
   31890:	str	r5, [r0, #28]
   31894:	ldr	r3, [r4, #236]	; 0xec
   31898:	cmp	r3, #0
   3189c:	beq	318b0 <myhtml_tree_node_insert_root@@Base+0xa8>
   318a0:	ldr	r2, [r4, #244]	; 0xf4
   318a4:	mov	r0, r4
   318a8:	mov	r1, r5
   318ac:	blx	r3
   318b0:	ldr	r6, [r4, #128]	; 0x80
   318b4:	ldr	r1, [r6, #8]
   318b8:	ldr	r0, [r6, #4]
   318bc:	cmp	r0, r1
   318c0:	bcc	318e0 <myhtml_tree_node_insert_root@@Base+0xd8>
   318c4:	lsl	r0, r1, #1
   318c8:	lsl	r1, r1, #3
   318cc:	str	r0, [r6, #8]
   318d0:	ldr	r0, [r6]
   318d4:	bl	10da0 <mycore_realloc@plt>
   318d8:	cmp	r0, #0
   318dc:	strne	r0, [r6]
   318e0:	ldr	r0, [r6]
   318e4:	ldr	r1, [r6, #4]
   318e8:	str	r5, [r0, r1, lsl #2]
   318ec:	ldr	r0, [r6, #4]
   318f0:	add	r0, r0, #1
   318f4:	str	r0, [r6, #4]
   318f8:	mov	r0, r5
   318fc:	str	r5, [r4, #96]	; 0x60
   31900:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00031904 <myhtml_tree_node_insert_text@@Base>:
   31904:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   31908:	add	fp, sp, #24
   3190c:	sub	sp, sp, #8
   31910:	mov	r8, r1
   31914:	add	r2, sp, #4
   31918:	mov	r1, #0
   3191c:	mov	r6, r0
   31920:	mov	r4, #0
   31924:	bl	11b14 <myhtml_tree_appropriate_place_inserting@plt>
   31928:	mov	r5, r0
   3192c:	ldr	r0, [r6, #84]	; 0x54
   31930:	cmp	r5, r0
   31934:	beq	319a0 <myhtml_tree_node_insert_text@@Base+0x9c>
   31938:	ldr	r7, [sp, #4]
   3193c:	cmp	r7, #1
   31940:	beq	31974 <myhtml_tree_node_insert_text@@Base+0x70>
   31944:	cmp	r7, #2
   31948:	bne	319ac <myhtml_tree_node_insert_text@@Base+0xa8>
   3194c:	ldr	r0, [r5, #4]
   31950:	cmp	r0, #1
   31954:	bne	319f0 <myhtml_tree_node_insert_text@@Base+0xec>
   31958:	ldr	r1, [r5, #32]
   3195c:	cmp	r1, #0
   31960:	beq	319f0 <myhtml_tree_node_insert_text@@Base+0xec>
   31964:	mov	r0, r6
   31968:	mov	r2, r8
   3196c:	mov	r3, #0
   31970:	b	31998 <myhtml_tree_node_insert_text@@Base+0x94>
   31974:	ldr	r0, [r5, #4]
   31978:	cmp	r0, #1
   3197c:	bne	319f0 <myhtml_tree_node_insert_text@@Base+0xec>
   31980:	ldr	r2, [r5, #32]
   31984:	cmp	r2, #0
   31988:	beq	319f0 <myhtml_tree_node_insert_text@@Base+0xec>
   3198c:	mov	r0, r6
   31990:	mov	r1, r8
   31994:	mov	r3, #1
   31998:	bl	113e8 <myhtml_token_merged_two_token_string@plt>
   3199c:	mov	r4, r5
   319a0:	mov	r0, r4
   319a4:	sub	sp, fp, #24
   319a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   319ac:	ldr	r0, [r5, #28]
   319b0:	cmp	r0, #0
   319b4:	beq	319f0 <myhtml_tree_node_insert_text@@Base+0xec>
   319b8:	ldr	r1, [r0, #4]
   319bc:	cmp	r1, #1
   319c0:	bne	319f0 <myhtml_tree_node_insert_text@@Base+0xec>
   319c4:	ldr	r1, [r0, #32]
   319c8:	cmp	r1, #0
   319cc:	beq	319f0 <myhtml_tree_node_insert_text@@Base+0xec>
   319d0:	mov	r0, r6
   319d4:	mov	r2, r8
   319d8:	mov	r3, #0
   319dc:	bl	113e8 <myhtml_token_merged_two_token_string@plt>
   319e0:	ldr	r4, [r5, #28]
   319e4:	mov	r0, r4
   319e8:	sub	sp, fp, #24
   319ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   319f0:	ldr	r0, [r6, #12]
   319f4:	ldr	r1, [r6, #48]	; 0x30
   319f8:	mov	r2, #0
   319fc:	mov	r9, #0
   31a00:	bl	11910 <mcobject_async_malloc@plt>
   31a04:	mov	r4, r0
   31a08:	vmov.i32	q8, #0	; 0x00000000
   31a0c:	mov	r0, #36	; 0x24
   31a10:	mov	r2, r7
   31a14:	mov	r1, r4
   31a18:	vst1.32	{d16-d17}, [r1], r0
   31a1c:	mov	r0, #1
   31a20:	str	r0, [r4, #4]
   31a24:	str	r0, [r4, #8]
   31a28:	add	r0, r4, #16
   31a2c:	str	r8, [r4, #32]
   31a30:	str	r6, [r4, #40]	; 0x28
   31a34:	str	r9, [r1]
   31a38:	mov	r1, r4
   31a3c:	vst1.32	{d16-d17}, [r0]
   31a40:	ldr	r0, [r5, #8]
   31a44:	str	r0, [r4, #8]
   31a48:	mov	r0, r5
   31a4c:	bl	11304 <myhtml_tree_node_insert_by_mode@plt>
   31a50:	mov	r0, r4
   31a54:	sub	sp, fp, #24
   31a58:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00031a5c <myhtml_tree_node_insert_by_node@@Base>:
   31a5c:	push	{r4, r5, fp, lr}
   31a60:	add	fp, sp, #8
   31a64:	sub	sp, sp, #8
   31a68:	mov	r4, r1
   31a6c:	add	r2, sp, #4
   31a70:	mov	r1, #0
   31a74:	mov	r5, r0
   31a78:	bl	11b14 <myhtml_tree_appropriate_place_inserting@plt>
   31a7c:	ldr	r2, [sp, #4]
   31a80:	mov	r1, r4
   31a84:	bl	11304 <myhtml_tree_node_insert_by_mode@plt>
   31a88:	ldr	r5, [r5, #128]	; 0x80
   31a8c:	ldr	r1, [r5, #8]
   31a90:	ldr	r0, [r5, #4]
   31a94:	cmp	r0, r1
   31a98:	bcc	31ab8 <myhtml_tree_node_insert_by_node@@Base+0x5c>
   31a9c:	lsl	r0, r1, #1
   31aa0:	lsl	r1, r1, #3
   31aa4:	str	r0, [r5, #8]
   31aa8:	ldr	r0, [r5]
   31aac:	bl	10da0 <mycore_realloc@plt>
   31ab0:	cmp	r0, #0
   31ab4:	strne	r0, [r5]
   31ab8:	ldr	r0, [r5]
   31abc:	ldr	r1, [r5, #4]
   31ac0:	str	r4, [r0, r1, lsl #2]
   31ac4:	ldr	r0, [r5, #4]
   31ac8:	add	r0, r0, #1
   31acc:	str	r0, [r5, #4]
   31ad0:	mov	r0, r4
   31ad4:	sub	sp, fp, #8
   31ad8:	pop	{r4, r5, fp, pc}

00031adc <myhtml_tree_node_insert_foreign_element@@Base>:
   31adc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   31ae0:	add	fp, sp, #24
   31ae4:	sub	sp, sp, #8
   31ae8:	mov	r6, r1
   31aec:	add	r2, sp, #4
   31af0:	mov	r1, #0
   31af4:	mov	r5, r0
   31af8:	mov	r8, #0
   31afc:	bl	11b14 <myhtml_tree_appropriate_place_inserting@plt>
   31b00:	mov	r7, r0
   31b04:	ldr	r0, [r5, #12]
   31b08:	ldr	r1, [r5, #48]	; 0x30
   31b0c:	mov	r2, #0
   31b10:	bl	11910 <mcobject_async_malloc@plt>
   31b14:	mov	r4, r0
   31b18:	str	r8, [r0, #32]
   31b1c:	str	r5, [r0, #40]	; 0x28
   31b20:	vmov.i32	q8, #0	; 0x00000000
   31b24:	mov	r0, #36	; 0x24
   31b28:	mov	r1, r4
   31b2c:	vst1.32	{d16-d17}, [r1], r0
   31b30:	mov	r0, #1
   31b34:	str	r0, [r4, #8]
   31b38:	add	r0, r4, #16
   31b3c:	str	r8, [r1]
   31b40:	mov	r1, r4
   31b44:	vst1.32	{d16-d17}, [r0]
   31b48:	ldr	r0, [r6]
   31b4c:	str	r0, [r4, #4]
   31b50:	str	r6, [r4, #32]
   31b54:	ldr	r0, [r7, #8]
   31b58:	str	r0, [r4, #8]
   31b5c:	mov	r0, r7
   31b60:	ldr	r2, [sp, #4]
   31b64:	bl	11304 <myhtml_tree_node_insert_by_mode@plt>
   31b68:	ldr	r5, [r5, #128]	; 0x80
   31b6c:	ldr	r1, [r5, #8]
   31b70:	ldr	r0, [r5, #4]
   31b74:	cmp	r0, r1
   31b78:	bcc	31b98 <myhtml_tree_node_insert_foreign_element@@Base+0xbc>
   31b7c:	lsl	r0, r1, #1
   31b80:	lsl	r1, r1, #3
   31b84:	str	r0, [r5, #8]
   31b88:	ldr	r0, [r5]
   31b8c:	bl	10da0 <mycore_realloc@plt>
   31b90:	cmp	r0, #0
   31b94:	strne	r0, [r5]
   31b98:	ldr	r0, [r5]
   31b9c:	ldr	r1, [r5, #4]
   31ba0:	str	r4, [r0, r1, lsl #2]
   31ba4:	ldr	r0, [r5, #4]
   31ba8:	add	r0, r0, #1
   31bac:	str	r0, [r5, #4]
   31bb0:	mov	r0, r4
   31bb4:	sub	sp, fp, #24
   31bb8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00031bbc <myhtml_tree_node_insert_html_element@@Base>:
   31bbc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   31bc0:	add	fp, sp, #24
   31bc4:	sub	sp, sp, #8
   31bc8:	mov	r6, r1
   31bcc:	add	r2, sp, #4
   31bd0:	mov	r1, #0
   31bd4:	mov	r5, r0
   31bd8:	mov	r8, #0
   31bdc:	bl	11b14 <myhtml_tree_appropriate_place_inserting@plt>
   31be0:	mov	r7, r0
   31be4:	ldr	r0, [r5, #12]
   31be8:	ldr	r1, [r5, #48]	; 0x30
   31bec:	mov	r2, #0
   31bf0:	bl	11910 <mcobject_async_malloc@plt>
   31bf4:	mov	r4, r0
   31bf8:	str	r8, [r0, #32]
   31bfc:	str	r5, [r0, #40]	; 0x28
   31c00:	vmov.i32	q8, #0	; 0x00000000
   31c04:	mov	r0, #36	; 0x24
   31c08:	mov	r1, r4
   31c0c:	vst1.32	{d16-d17}, [r1], r0
   31c10:	add	r0, r4, #16
   31c14:	str	r8, [r1]
   31c18:	vst1.32	{d16-d17}, [r0]
   31c1c:	mov	r1, #1
   31c20:	ldr	r0, [r6]
   31c24:	str	r6, [r4, #32]
   31c28:	stmib	r4, {r0, r1}
   31c2c:	mov	r0, r7
   31c30:	mov	r1, r4
   31c34:	ldr	r2, [sp, #4]
   31c38:	bl	11304 <myhtml_tree_node_insert_by_mode@plt>
   31c3c:	ldr	r5, [r5, #128]	; 0x80
   31c40:	ldr	r1, [r5, #8]
   31c44:	ldr	r0, [r5, #4]
   31c48:	cmp	r0, r1
   31c4c:	bcc	31c6c <myhtml_tree_node_insert_html_element@@Base+0xb0>
   31c50:	lsl	r0, r1, #1
   31c54:	lsl	r1, r1, #3
   31c58:	str	r0, [r5, #8]
   31c5c:	ldr	r0, [r5]
   31c60:	bl	10da0 <mycore_realloc@plt>
   31c64:	cmp	r0, #0
   31c68:	strne	r0, [r5]
   31c6c:	ldr	r0, [r5]
   31c70:	ldr	r1, [r5, #4]
   31c74:	str	r4, [r0, r1, lsl #2]
   31c78:	ldr	r0, [r5, #4]
   31c7c:	add	r0, r0, #1
   31c80:	str	r0, [r5, #4]
   31c84:	mov	r0, r4
   31c88:	sub	sp, fp, #24
   31c8c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00031c90 <myhtml_tree_element_in_scope@@Base>:
   31c90:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   31c94:	add	fp, sp, #24
   31c98:	mov	r4, r1
   31c9c:	ldr	r1, [r0, #128]	; 0x80
   31ca0:	mov	r5, r0
   31ca4:	ldr	r0, [r1, #4]
   31ca8:	cmp	r0, #0
   31cac:	beq	31e0c <myhtml_tree_element_in_scope@@Base+0x17c>
   31cb0:	ldr	r6, [r1]
   31cb4:	mov	r9, r3
   31cb8:	mov	r8, r2
   31cbc:	rsb	r7, r0, #1
   31cc0:	cmp	r2, #0
   31cc4:	beq	31d70 <myhtml_tree_element_in_scope@@Base+0xe0>
   31cc8:	cmp	r9, #128	; 0x80
   31ccc:	bne	31d20 <myhtml_tree_element_in_scope@@Base+0x90>
   31cd0:	ldr	r0, [r6, -r7, lsl #2]
   31cd4:	ldr	r1, [r0, #4]
   31cd8:	ldr	r0, [r5, #28]
   31cdc:	bl	117fc <myhtml_tag_get_by_id@plt>
   31ce0:	mov	r1, r0
   31ce4:	ldr	r0, [r6, -r7, lsl #2]
   31ce8:	ldr	r3, [r0, #4]
   31cec:	ldr	r2, [r0, #8]
   31cf0:	cmp	r3, r4
   31cf4:	cmpeq	r2, r8
   31cf8:	beq	31e10 <myhtml_tree_element_in_scope@@Base+0x180>
   31cfc:	add	r0, r1, r2, lsl #2
   31d00:	ldr	r0, [r0, #16]
   31d04:	tst	r0, #128	; 0x80
   31d08:	beq	31e0c <myhtml_tree_element_in_scope@@Base+0x17c>
   31d0c:	add	r0, r7, #1
   31d10:	cmp	r7, #0
   31d14:	mov	r7, r0
   31d18:	bne	31cd0 <myhtml_tree_element_in_scope@@Base+0x40>
   31d1c:	b	31e0c <myhtml_tree_element_in_scope@@Base+0x17c>
   31d20:	ldr	r0, [r6, -r7, lsl #2]
   31d24:	ldr	r1, [r0, #4]
   31d28:	ldr	r0, [r5, #28]
   31d2c:	bl	117fc <myhtml_tag_get_by_id@plt>
   31d30:	mov	r1, r0
   31d34:	ldr	r0, [r6, -r7, lsl #2]
   31d38:	ldr	r3, [r0, #4]
   31d3c:	ldr	r2, [r0, #8]
   31d40:	cmp	r3, r4
   31d44:	cmpeq	r2, r8
   31d48:	beq	31e10 <myhtml_tree_element_in_scope@@Base+0x180>
   31d4c:	add	r0, r1, r2, lsl #2
   31d50:	ldr	r0, [r0, #16]
   31d54:	tst	r0, r9
   31d58:	bne	31e0c <myhtml_tree_element_in_scope@@Base+0x17c>
   31d5c:	add	r0, r7, #1
   31d60:	cmp	r7, #0
   31d64:	mov	r7, r0
   31d68:	bne	31d20 <myhtml_tree_element_in_scope@@Base+0x90>
   31d6c:	b	31e0c <myhtml_tree_element_in_scope@@Base+0x17c>
   31d70:	cmp	r9, #128	; 0x80
   31d74:	bne	31dc4 <myhtml_tree_element_in_scope@@Base+0x134>
   31d78:	ldr	r0, [r6, -r7, lsl #2]
   31d7c:	ldr	r1, [r0, #4]
   31d80:	ldr	r0, [r5, #28]
   31d84:	bl	117fc <myhtml_tag_get_by_id@plt>
   31d88:	mov	r1, r0
   31d8c:	ldr	r0, [r6, -r7, lsl #2]
   31d90:	ldr	r2, [r0, #4]
   31d94:	cmp	r2, r4
   31d98:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   31d9c:	ldr	r0, [r0, #8]
   31da0:	add	r0, r1, r0, lsl #2
   31da4:	ldr	r0, [r0, #16]
   31da8:	tst	r0, #128	; 0x80
   31dac:	beq	31e0c <myhtml_tree_element_in_scope@@Base+0x17c>
   31db0:	add	r0, r7, #1
   31db4:	cmp	r7, #0
   31db8:	mov	r7, r0
   31dbc:	bne	31d78 <myhtml_tree_element_in_scope@@Base+0xe8>
   31dc0:	b	31e0c <myhtml_tree_element_in_scope@@Base+0x17c>
   31dc4:	ldr	r0, [r6, -r7, lsl #2]
   31dc8:	ldr	r1, [r0, #4]
   31dcc:	ldr	r0, [r5, #28]
   31dd0:	bl	117fc <myhtml_tag_get_by_id@plt>
   31dd4:	mov	r1, r0
   31dd8:	ldr	r0, [r6, -r7, lsl #2]
   31ddc:	ldr	r2, [r0, #4]
   31de0:	cmp	r2, r4
   31de4:	beq	31e10 <myhtml_tree_element_in_scope@@Base+0x180>
   31de8:	ldr	r0, [r0, #8]
   31dec:	add	r0, r1, r0, lsl #2
   31df0:	ldr	r0, [r0, #16]
   31df4:	tst	r0, r9
   31df8:	bne	31e0c <myhtml_tree_element_in_scope@@Base+0x17c>
   31dfc:	add	r0, r7, #1
   31e00:	cmp	r7, #0
   31e04:	mov	r7, r0
   31e08:	bne	31dc4 <myhtml_tree_element_in_scope@@Base+0x134>
   31e0c:	mov	r0, #0
   31e10:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00031e14 <myhtml_tree_element_in_scope_by_node@@Base>:
   31e14:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   31e18:	add	fp, sp, #24
   31e1c:	ldr	r7, [r0, #40]	; 0x28
   31e20:	mov	r9, r1
   31e24:	mov	r5, r0
   31e28:	mov	r8, #0
   31e2c:	ldr	r1, [r7, #128]	; 0x80
   31e30:	ldr	r0, [r1, #4]
   31e34:	cmp	r0, #0
   31e38:	beq	31ed0 <myhtml_tree_element_in_scope_by_node@@Base+0xbc>
   31e3c:	ldr	r4, [r1]
   31e40:	rsb	r6, r0, #1
   31e44:	cmp	r9, #128	; 0x80
   31e48:	bne	31e90 <myhtml_tree_element_in_scope_by_node@@Base+0x7c>
   31e4c:	ldr	r0, [r4, -r6, lsl #2]
   31e50:	ldr	r1, [r0, #4]
   31e54:	ldr	r0, [r7, #28]
   31e58:	bl	117fc <myhtml_tag_get_by_id@plt>
   31e5c:	ldr	r1, [r4, -r6, lsl #2]
   31e60:	cmp	r1, r5
   31e64:	beq	31ed8 <myhtml_tree_element_in_scope_by_node@@Base+0xc4>
   31e68:	ldr	r1, [r1, #8]
   31e6c:	add	r0, r0, r1, lsl #2
   31e70:	ldr	r0, [r0, #16]
   31e74:	tst	r0, #128	; 0x80
   31e78:	beq	31ed0 <myhtml_tree_element_in_scope_by_node@@Base+0xbc>
   31e7c:	add	r0, r6, #1
   31e80:	cmp	r6, #0
   31e84:	mov	r6, r0
   31e88:	bne	31e4c <myhtml_tree_element_in_scope_by_node@@Base+0x38>
   31e8c:	b	31ed0 <myhtml_tree_element_in_scope_by_node@@Base+0xbc>
   31e90:	ldr	r0, [r4, -r6, lsl #2]
   31e94:	ldr	r1, [r0, #4]
   31e98:	ldr	r0, [r7, #28]
   31e9c:	bl	117fc <myhtml_tag_get_by_id@plt>
   31ea0:	ldr	r1, [r4, -r6, lsl #2]
   31ea4:	cmp	r1, r5
   31ea8:	beq	31ed8 <myhtml_tree_element_in_scope_by_node@@Base+0xc4>
   31eac:	ldr	r1, [r1, #8]
   31eb0:	add	r0, r0, r1, lsl #2
   31eb4:	ldr	r0, [r0, #16]
   31eb8:	tst	r0, r9
   31ebc:	bne	31ed0 <myhtml_tree_element_in_scope_by_node@@Base+0xbc>
   31ec0:	add	r0, r6, #1
   31ec4:	cmp	r6, #0
   31ec8:	mov	r6, r0
   31ecc:	bne	31e90 <myhtml_tree_element_in_scope_by_node@@Base+0x7c>
   31ed0:	mov	r0, r8
   31ed4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   31ed8:	mov	r8, #1
   31edc:	mov	r0, r8
   31ee0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00031ee4 <myhtml_tree_list_append@@Base>:
   31ee4:	push	{r4, r5, fp, lr}
   31ee8:	add	fp, sp, #8
   31eec:	mov	r4, r0
   31ef0:	mov	r5, r1
   31ef4:	ldr	r0, [r0, #4]
   31ef8:	ldr	r1, [r4, #8]
   31efc:	cmp	r0, r1
   31f00:	bcc	31f20 <myhtml_tree_list_append@@Base+0x3c>
   31f04:	lsl	r0, r1, #1
   31f08:	lsl	r1, r1, #3
   31f0c:	str	r0, [r4, #8]
   31f10:	ldr	r0, [r4]
   31f14:	bl	10da0 <mycore_realloc@plt>
   31f18:	cmp	r0, #0
   31f1c:	strne	r0, [r4]
   31f20:	ldr	r0, [r4]
   31f24:	ldr	r1, [r4, #4]
   31f28:	str	r5, [r0, r1, lsl #2]
   31f2c:	ldr	r0, [r4, #4]
   31f30:	add	r0, r0, #1
   31f34:	str	r0, [r4, #4]
   31f38:	pop	{r4, r5, fp, pc}

00031f3c <myhtml_tree_list_append_after_index@@Base>:
   31f3c:	push	{r4, r5, r6, r7, fp, lr}
   31f40:	add	fp, sp, #16
   31f44:	mov	r4, r0
   31f48:	mov	r5, r1
   31f4c:	ldr	r0, [r0, #4]
   31f50:	mov	r6, r2
   31f54:	add	r7, r2, #1
   31f58:	ldr	r1, [r4, #8]
   31f5c:	cmp	r0, r1
   31f60:	bcc	31f80 <myhtml_tree_list_append_after_index@@Base+0x44>
   31f64:	lsl	r0, r1, #1
   31f68:	lsl	r1, r1, #3
   31f6c:	str	r0, [r4, #8]
   31f70:	ldr	r0, [r4]
   31f74:	bl	10da0 <mycore_realloc@plt>
   31f78:	cmp	r0, #0
   31f7c:	strne	r0, [r4]
   31f80:	ldr	r0, [r4]
   31f84:	ldr	r2, [r4, #4]
   31f88:	sub	r2, r2, r7
   31f8c:	add	r1, r0, r7, lsl #2
   31f90:	add	r0, r0, r6, lsl #2
   31f94:	add	r0, r0, #8
   31f98:	lsl	r2, r2, #2
   31f9c:	bl	10f98 <memmove@plt>
   31fa0:	ldr	r0, [r4]
   31fa4:	str	r5, [r0, r7, lsl #2]
   31fa8:	ldr	r0, [r4, #4]
   31fac:	add	r0, r0, #1
   31fb0:	str	r0, [r4, #4]
   31fb4:	pop	{r4, r5, r6, r7, fp, pc}

00031fb8 <myhtml_tree_list_insert_by_index@@Base>:
   31fb8:	push	{r4, r5, r6, sl, fp, lr}
   31fbc:	add	fp, sp, #16
   31fc0:	mov	r4, r0
   31fc4:	mov	r6, r1
   31fc8:	ldr	r0, [r0, #4]
   31fcc:	mov	r5, r2
   31fd0:	ldr	r1, [r4, #8]
   31fd4:	cmp	r0, r1
   31fd8:	bcc	31ff8 <myhtml_tree_list_insert_by_index@@Base+0x40>
   31fdc:	lsl	r0, r1, #1
   31fe0:	lsl	r1, r1, #3
   31fe4:	str	r0, [r4, #8]
   31fe8:	ldr	r0, [r4]
   31fec:	bl	10da0 <mycore_realloc@plt>
   31ff0:	cmp	r0, #0
   31ff4:	strne	r0, [r4]
   31ff8:	ldr	r0, [r4]
   31ffc:	ldr	r2, [r4, #4]
   32000:	add	r1, r0, r5, lsl #2
   32004:	sub	r2, r2, r5
   32008:	add	r0, r1, #4
   3200c:	lsl	r2, r2, #2
   32010:	bl	10f98 <memmove@plt>
   32014:	ldr	r0, [r4]
   32018:	str	r6, [r0, r5, lsl #2]
   3201c:	ldr	r0, [r4, #4]
   32020:	add	r0, r0, #1
   32024:	str	r0, [r4, #4]
   32028:	pop	{r4, r5, r6, sl, fp, pc}

0003202c <myhtml_tree_list_current_node@@Base>:
   3202c:	ldr	r1, [r0, #4]
   32030:	cmp	r1, #0
   32034:	ldrne	r1, [r0]
   32038:	ldrne	r0, [r0, #4]
   3203c:	addne	r0, r1, r0, lsl #2
   32040:	ldrne	r0, [r0, #-4]
   32044:	bxne	lr
   32048:	mov	r0, #0
   3204c:	bx	lr

00032050 <myhtml_tree_current_node@@Base>:
   32050:	ldr	r0, [r0, #128]	; 0x80
   32054:	ldr	r1, [r0, #4]
   32058:	cmp	r1, #0
   3205c:	ldrne	r1, [r0]
   32060:	ldrne	r0, [r0, #4]
   32064:	addne	r0, r1, r0, lsl #2
   32068:	ldrne	r0, [r0, #-4]
   3206c:	bxne	lr
   32070:	mov	r0, #0
   32074:	bx	lr

00032078 <myhtml_tree_adjusted_current_node@@Base>:
   32078:	ldr	r1, [r0, #128]	; 0x80
   3207c:	ldr	r2, [r1, #4]
   32080:	cmp	r2, #1
   32084:	bne	32094 <myhtml_tree_adjusted_current_node@@Base+0x1c>
   32088:	ldr	r0, [r0, #88]	; 0x58
   3208c:	cmp	r0, #0
   32090:	bxne	lr
   32094:	ldr	r0, [r1, #4]
   32098:	cmp	r0, #0
   3209c:	moveq	r0, #0
   320a0:	bxeq	lr
   320a4:	ldr	r0, [r1]
   320a8:	ldr	r1, [r1, #4]
   320ac:	add	r0, r0, r1, lsl #2
   320b0:	ldr	r0, [r0, #-4]
   320b4:	bx	lr

000320b8 <myhtml_tree_open_elements_append_after_index@@Base>:
   320b8:	push	{r4, r5, r6, r7, fp, lr}
   320bc:	add	fp, sp, #16
   320c0:	ldr	r6, [r0, #128]	; 0x80
   320c4:	mov	r4, r1
   320c8:	mov	r5, r2
   320cc:	add	r7, r2, #1
   320d0:	ldr	r1, [r6, #8]
   320d4:	ldr	r0, [r6, #4]
   320d8:	cmp	r0, r1
   320dc:	bcc	320fc <myhtml_tree_open_elements_append_after_index@@Base+0x44>
   320e0:	lsl	r0, r1, #1
   320e4:	lsl	r1, r1, #3
   320e8:	str	r0, [r6, #8]
   320ec:	ldr	r0, [r6]
   320f0:	bl	10da0 <mycore_realloc@plt>
   320f4:	cmp	r0, #0
   320f8:	strne	r0, [r6]
   320fc:	ldr	r0, [r6]
   32100:	ldr	r2, [r6, #4]
   32104:	sub	r2, r2, r7
   32108:	add	r1, r0, r7, lsl #2
   3210c:	add	r0, r0, r5, lsl #2
   32110:	add	r0, r0, #8
   32114:	lsl	r2, r2, #2
   32118:	bl	10f98 <memmove@plt>
   3211c:	ldr	r0, [r6]
   32120:	str	r4, [r0, r7, lsl #2]
   32124:	ldr	r0, [r6, #4]
   32128:	add	r0, r0, #1
   3212c:	str	r0, [r6, #4]
   32130:	pop	{r4, r5, r6, r7, fp, pc}

00032134 <myhtml_tree_open_elements_pop@@Base>:
   32134:	ldr	r0, [r0, #128]	; 0x80
   32138:	ldr	r1, [r0, #4]
   3213c:	cmp	r1, #0
   32140:	ldrne	r1, [r0, #4]
   32144:	subne	r1, r1, #1
   32148:	strne	r1, [r0, #4]
   3214c:	bx	lr

00032150 <myhtml_tree_open_elements_remove@@Base>:
   32150:	push	{r4, r5, fp, lr}
   32154:	add	fp, sp, #8
   32158:	mov	r5, r0
   3215c:	ldr	r0, [r0, #128]	; 0x80
   32160:	ldr	r2, [r0, #4]
   32164:	ldr	r3, [r0]
   32168:	add	r3, r3, r2, lsl #2
   3216c:	add	r3, r3, #4
   32170:	cmp	r2, #0
   32174:	popeq	{r4, r5, fp, pc}
   32178:	sub	r4, r3, #4
   3217c:	ldr	r3, [r3, #-8]
   32180:	sub	r2, r2, #1
   32184:	cmp	r3, r1
   32188:	mov	r3, r4
   3218c:	bne	32170 <myhtml_tree_open_elements_remove@@Base+0x20>
   32190:	ldr	r0, [r0, #4]
   32194:	mov	r1, r4
   32198:	sub	r0, r0, r2
   3219c:	lsl	r2, r0, #2
   321a0:	sub	r0, r4, #4
   321a4:	bl	10f98 <memmove@plt>
   321a8:	ldr	r0, [r5, #128]	; 0x80
   321ac:	ldr	r1, [r0, #4]
   321b0:	sub	r1, r1, #1
   321b4:	str	r1, [r0, #4]
   321b8:	pop	{r4, r5, fp, pc}

000321bc <myhtml_tree_open_elements_pop_until@@Base>:
   321bc:	push	{fp, lr}
   321c0:	mov	fp, sp
   321c4:	ldr	lr, [r0, #128]	; 0x80
   321c8:	ldr	ip, [lr]
   321cc:	ldr	r0, [lr, #4]
   321d0:	cmp	r0, #0
   321d4:	popeq	{fp, pc}
   321d8:	cmp	r2, #0
   321dc:	beq	32224 <myhtml_tree_open_elements_pop_until@@Base+0x68>
   321e0:	ldr	r0, [lr, #4]
   321e4:	sub	r0, r0, #1
   321e8:	str	r0, [lr, #4]
   321ec:	ldr	r0, [lr, #4]
   321f0:	ldr	r0, [ip, r0, lsl #2]
   321f4:	ldr	r0, [r0, #4]
   321f8:	cmp	r0, r1
   321fc:	bne	32214 <myhtml_tree_open_elements_pop_until@@Base+0x58>
   32200:	ldr	r0, [lr, #4]
   32204:	ldr	r0, [ip, r0, lsl #2]
   32208:	ldr	r0, [r0, #8]
   3220c:	cmp	r0, r2
   32210:	beq	32254 <myhtml_tree_open_elements_pop_until@@Base+0x98>
   32214:	ldr	r0, [lr, #4]
   32218:	cmp	r0, #0
   3221c:	bne	321e0 <myhtml_tree_open_elements_pop_until@@Base+0x24>
   32220:	b	32250 <myhtml_tree_open_elements_pop_until@@Base+0x94>
   32224:	ldr	r0, [lr, #4]
   32228:	sub	r0, r0, #1
   3222c:	str	r0, [lr, #4]
   32230:	ldr	r0, [lr, #4]
   32234:	ldr	r0, [ip, r0, lsl #2]
   32238:	ldr	r0, [r0, #4]
   3223c:	cmp	r0, r1
   32240:	beq	32254 <myhtml_tree_open_elements_pop_until@@Base+0x98>
   32244:	ldr	r0, [lr, #4]
   32248:	cmp	r0, #0
   3224c:	bne	32224 <myhtml_tree_open_elements_pop_until@@Base+0x68>
   32250:	pop	{fp, pc}
   32254:	cmp	r3, #0
   32258:	ldrne	r0, [lr, #4]
   3225c:	addne	r0, r0, #1
   32260:	strne	r0, [lr, #4]
   32264:	popne	{fp, pc}
   32268:	pop	{fp, pc}

0003226c <myhtml_tree_open_elements_pop_until_by_node@@Base>:
   3226c:	ldr	r0, [r0, #128]	; 0x80
   32270:	ldr	ip, [r0]
   32274:	ldr	r3, [r0, #4]
   32278:	cmp	r3, #0
   3227c:	bxeq	lr
   32280:	ldr	r3, [r0, #4]
   32284:	sub	r3, r3, #1
   32288:	str	r3, [r0, #4]
   3228c:	ldr	r3, [r0, #4]
   32290:	ldr	r3, [ip, r3, lsl #2]
   32294:	cmp	r3, r1
   32298:	bne	32274 <myhtml_tree_open_elements_pop_until_by_node@@Base+0x8>
   3229c:	cmp	r2, #0
   322a0:	ldrne	r1, [r0, #4]
   322a4:	addne	r1, r1, #1
   322a8:	strne	r1, [r0, #4]
   322ac:	bx	lr

000322b0 <myhtml_tree_open_elements_pop_until_by_index@@Base>:
   322b0:	ldr	r0, [r0, #128]	; 0x80
   322b4:	ldr	r3, [r0, #4]
   322b8:	cmp	r3, #0
   322bc:	bxeq	lr
   322c0:	ldr	r3, [r0, #4]
   322c4:	sub	r3, r3, #1
   322c8:	str	r3, [r0, #4]
   322cc:	ldr	r3, [r0, #4]
   322d0:	cmp	r3, r1
   322d4:	bne	322b4 <myhtml_tree_open_elements_pop_until_by_index@@Base+0x4>
   322d8:	cmp	r2, #0
   322dc:	ldrne	r1, [r0, #4]
   322e0:	addne	r1, r1, #1
   322e4:	strne	r1, [r0, #4]
   322e8:	bx	lr

000322ec <myhtml_tree_open_elements_find_reverse@@Base>:
   322ec:	ldr	r0, [r0, #128]	; 0x80
   322f0:	ldr	r3, [r0, #4]
   322f4:	ldr	r0, [r0]
   322f8:	sub	ip, r0, #4
   322fc:	cmp	r3, #0
   32300:	moveq	r0, #0
   32304:	bxeq	lr
   32308:	ldr	r0, [ip, r3, lsl #2]
   3230c:	sub	r3, r3, #1
   32310:	cmp	r0, r1
   32314:	bne	322fc <myhtml_tree_open_elements_find_reverse@@Base+0x10>
   32318:	mov	r0, #1
   3231c:	cmp	r2, #0
   32320:	strne	r3, [r2]
   32324:	bx	lr

00032328 <myhtml_tree_open_elements_find@@Base>:
   32328:	push	{fp, lr}
   3232c:	mov	fp, sp
   32330:	ldr	lr, [r0, #128]	; 0x80
   32334:	ldr	ip, [lr]
   32338:	ldr	r3, [lr, #4]
   3233c:	cmp	r3, #0
   32340:	beq	32364 <myhtml_tree_open_elements_find@@Base+0x3c>
   32344:	mov	r3, #0
   32348:	ldr	r0, [ip, r3, lsl #2]
   3234c:	cmp	r0, r1
   32350:	beq	3236c <myhtml_tree_open_elements_find@@Base+0x44>
   32354:	ldr	r0, [lr, #4]
   32358:	add	r3, r3, #1
   3235c:	cmp	r3, r0
   32360:	bcc	32348 <myhtml_tree_open_elements_find@@Base+0x20>
   32364:	mov	r0, #0
   32368:	pop	{fp, pc}
   3236c:	cmp	r2, #0
   32370:	mov	r0, #1
   32374:	strne	r3, [r2]
   32378:	popne	{fp, pc}
   3237c:	pop	{fp, pc}

00032380 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base>:
   32380:	push	{r4, sl, fp, lr}
   32384:	add	fp, sp, #8
   32388:	ldr	r0, [r0, #128]	; 0x80
   3238c:	ldr	lr, [r0, #4]
   32390:	cmp	lr, #0
   32394:	beq	323ec <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x6c>
   32398:	ldr	ip, [r0]
   3239c:	rsb	lr, lr, #1
   323a0:	cmp	r2, #0
   323a4:	beq	323d0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x50>
   323a8:	ldr	r0, [ip, -lr, lsl #2]
   323ac:	ldr	r4, [r0, #4]
   323b0:	cmp	r4, r1
   323b4:	ldreq	r4, [r0, #8]
   323b8:	cmpeq	r4, r2
   323bc:	beq	323f4 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x74>
   323c0:	add	lr, lr, #1
   323c4:	cmp	lr, #1
   323c8:	bne	323a8 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x28>
   323cc:	b	323ec <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x6c>
   323d0:	ldr	r0, [ip, -lr, lsl #2]
   323d4:	ldr	r2, [r0, #4]
   323d8:	cmp	r2, r1
   323dc:	beq	323f4 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x74>
   323e0:	add	lr, lr, #1
   323e4:	cmp	lr, #1
   323e8:	bne	323d0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x50>
   323ec:	mov	r0, #0
   323f0:	pop	{r4, sl, fp, pc}
   323f4:	cmp	r3, #0
   323f8:	rsb	r1, lr, #0
   323fc:	strne	r1, [r3]
   32400:	popne	{r4, sl, fp, pc}
   32404:	pop	{r4, sl, fp, pc}

00032408 <myhtml_tree_open_elements_find_by_tag_idx@@Base>:
   32408:	push	{r4, r5, fp, lr}
   3240c:	add	fp, sp, #8
   32410:	ldr	lr, [r0, #128]	; 0x80
   32414:	ldr	r4, [lr]
   32418:	ldr	r0, [lr, #4]
   3241c:	cmp	r0, #0
   32420:	beq	3247c <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x74>
   32424:	mov	ip, #0
   32428:	cmp	r2, #0
   3242c:	beq	3245c <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x54>
   32430:	ldr	r0, [r4, ip, lsl #2]
   32434:	ldr	r5, [r0, #4]
   32438:	cmp	r5, r1
   3243c:	ldreq	r5, [r0, #8]
   32440:	cmpeq	r5, r2
   32444:	beq	32484 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x7c>
   32448:	ldr	r0, [lr, #4]
   3244c:	add	ip, ip, #1
   32450:	cmp	ip, r0
   32454:	bcc	32430 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x28>
   32458:	b	3247c <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x74>
   3245c:	ldr	r0, [r4, ip, lsl #2]
   32460:	ldr	r2, [r0, #4]
   32464:	cmp	r2, r1
   32468:	beq	32484 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x7c>
   3246c:	ldr	r0, [lr, #4]
   32470:	add	ip, ip, #1
   32474:	cmp	ip, r0
   32478:	bcc	3245c <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x54>
   3247c:	mov	r0, #0
   32480:	pop	{r4, r5, fp, pc}
   32484:	cmp	r3, #0
   32488:	strne	ip, [r3]
   3248c:	popne	{r4, r5, fp, pc}
   32490:	pop	{r4, r5, fp, pc}

00032494 <myhtml_tree_generate_implied_end_tags@@Base>:
   32494:	push	{r4, sl, fp, lr}
   32498:	add	fp, sp, #8
   3249c:	ldr	lr, [r0, #128]	; 0x80
   324a0:	ldr	r0, [lr, #4]
   324a4:	cmp	r0, #0
   324a8:	ldrne	r0, [lr, #4]
   324ac:	cmpne	r0, #0
   324b0:	bne	324b8 <myhtml_tree_generate_implied_end_tags@@Base+0x24>
   324b4:	pop	{r4, sl, fp, pc}
   324b8:	cmp	r2, #0
   324bc:	beq	32658 <myhtml_tree_generate_implied_end_tags@@Base+0x1c4>
   324c0:	ldr	r0, [lr, #4]
   324c4:	cmp	r0, #0
   324c8:	beq	324e0 <myhtml_tree_generate_implied_end_tags@@Base+0x4c>
   324cc:	ldr	r0, [lr]
   324d0:	ldr	r3, [lr, #4]
   324d4:	add	r0, r0, r3, lsl #2
   324d8:	ldr	ip, [r0, #-4]
   324dc:	b	324e4 <myhtml_tree_generate_implied_end_tags@@Base+0x50>
   324e0:	mov	ip, #0
   324e4:	ldr	r3, [ip, #4]
   324e8:	sub	r0, r3, #36	; 0x24
   324ec:	cmp	r0, #72	; 0x48
   324f0:	pophi	{r4, sl, fp, pc}
   324f4:	add	r4, pc, #4
   324f8:	ldr	r0, [r4, r0, lsl #2]
   324fc:	add	pc, r4, r0
   32500:	andeq	r0, r0, r4, lsr #2
   32504:			; <UNDEFINED> instruction: 0xffffffb4
   32508:			; <UNDEFINED> instruction: 0xffffffb4
   3250c:			; <UNDEFINED> instruction: 0xffffffb4
   32510:			; <UNDEFINED> instruction: 0xffffffb4
   32514:			; <UNDEFINED> instruction: 0xffffffb4
   32518:			; <UNDEFINED> instruction: 0xffffffb4
   3251c:			; <UNDEFINED> instruction: 0xffffffb4
   32520:	andeq	r0, r0, r4, lsr #2
   32524:			; <UNDEFINED> instruction: 0xffffffb4
   32528:			; <UNDEFINED> instruction: 0xffffffb4
   3252c:			; <UNDEFINED> instruction: 0xffffffb4
   32530:			; <UNDEFINED> instruction: 0xffffffb4
   32534:			; <UNDEFINED> instruction: 0xffffffb4
   32538:			; <UNDEFINED> instruction: 0xffffffb4
   3253c:			; <UNDEFINED> instruction: 0xffffffb4
   32540:			; <UNDEFINED> instruction: 0xffffffb4
   32544:			; <UNDEFINED> instruction: 0xffffffb4
   32548:			; <UNDEFINED> instruction: 0xffffffb4
   3254c:			; <UNDEFINED> instruction: 0xffffffb4
   32550:			; <UNDEFINED> instruction: 0xffffffb4
   32554:			; <UNDEFINED> instruction: 0xffffffb4
   32558:			; <UNDEFINED> instruction: 0xffffffb4
   3255c:			; <UNDEFINED> instruction: 0xffffffb4
   32560:			; <UNDEFINED> instruction: 0xffffffb4
   32564:			; <UNDEFINED> instruction: 0xffffffb4
   32568:			; <UNDEFINED> instruction: 0xffffffb4
   3256c:			; <UNDEFINED> instruction: 0xffffffb4
   32570:			; <UNDEFINED> instruction: 0xffffffb4
   32574:			; <UNDEFINED> instruction: 0xffffffb4
   32578:			; <UNDEFINED> instruction: 0xffffffb4
   3257c:			; <UNDEFINED> instruction: 0xffffffb4
   32580:			; <UNDEFINED> instruction: 0xffffffb4
   32584:			; <UNDEFINED> instruction: 0xffffffb4
   32588:			; <UNDEFINED> instruction: 0xffffffb4
   3258c:			; <UNDEFINED> instruction: 0xffffffb4
   32590:			; <UNDEFINED> instruction: 0xffffffb4
   32594:			; <UNDEFINED> instruction: 0xffffffb4
   32598:			; <UNDEFINED> instruction: 0xffffffb4
   3259c:			; <UNDEFINED> instruction: 0xffffffb4
   325a0:			; <UNDEFINED> instruction: 0xffffffb4
   325a4:	andeq	r0, r0, r4, lsr #2
   325a8:			; <UNDEFINED> instruction: 0xffffffb4
   325ac:			; <UNDEFINED> instruction: 0xffffffb4
   325b0:			; <UNDEFINED> instruction: 0xffffffb4
   325b4:			; <UNDEFINED> instruction: 0xffffffb4
   325b8:			; <UNDEFINED> instruction: 0xffffffb4
   325bc:			; <UNDEFINED> instruction: 0xffffffb4
   325c0:			; <UNDEFINED> instruction: 0xffffffb4
   325c4:	andeq	r0, r0, r4, lsr #2
   325c8:			; <UNDEFINED> instruction: 0xffffffb4
   325cc:			; <UNDEFINED> instruction: 0xffffffb4
   325d0:			; <UNDEFINED> instruction: 0xffffffb4
   325d4:			; <UNDEFINED> instruction: 0xffffffb4
   325d8:			; <UNDEFINED> instruction: 0xffffffb4
   325dc:			; <UNDEFINED> instruction: 0xffffffb4
   325e0:			; <UNDEFINED> instruction: 0xffffffb4
   325e4:			; <UNDEFINED> instruction: 0xffffffb4
   325e8:			; <UNDEFINED> instruction: 0xffffffb4
   325ec:			; <UNDEFINED> instruction: 0xffffffb4
   325f0:	andeq	r0, r0, r4, lsr #2
   325f4:	andeq	r0, r0, r4, lsr #2
   325f8:			; <UNDEFINED> instruction: 0xffffffb4
   325fc:	andeq	r0, r0, r4, lsr #2
   32600:			; <UNDEFINED> instruction: 0xffffffb4
   32604:			; <UNDEFINED> instruction: 0xffffffb4
   32608:			; <UNDEFINED> instruction: 0xffffffb4
   3260c:			; <UNDEFINED> instruction: 0xffffffb4
   32610:			; <UNDEFINED> instruction: 0xffffffb4
   32614:	andeq	r0, r0, r4, lsr #2
   32618:	andeq	r0, r0, r4, lsr #2
   3261c:	andeq	r0, r0, r4, lsr #2
   32620:	andeq	r0, r0, r4, lsr #2
   32624:	cmp	r3, r1
   32628:	ldreq	r0, [ip, #8]
   3262c:	cmpeq	r0, r2
   32630:	beq	324b4 <myhtml_tree_generate_implied_end_tags@@Base+0x20>
   32634:	ldr	r0, [lr, #4]
   32638:	cmp	r0, #0
   3263c:	ldrne	r0, [lr, #4]
   32640:	subne	r0, r0, #1
   32644:	strne	r0, [lr, #4]
   32648:	ldr	r0, [lr, #4]
   3264c:	cmp	r0, #0
   32650:	bne	324c0 <myhtml_tree_generate_implied_end_tags@@Base+0x2c>
   32654:	b	324b4 <myhtml_tree_generate_implied_end_tags@@Base+0x20>
   32658:	ldr	ip, [lr]
   3265c:	ldr	r0, [lr, #4]
   32660:	ldr	r0, [lr, #4]
   32664:	add	r0, ip, r0, lsl #2
   32668:	ldr	r0, [r0, #-4]
   3266c:	ldr	r3, [r0, #4]
   32670:	sub	r0, r3, #36	; 0x24
   32674:	cmp	r0, #72	; 0x48
   32678:	bhi	324b4 <myhtml_tree_generate_implied_end_tags@@Base+0x20>
   3267c:	add	r2, pc, #4
   32680:	ldr	r0, [r2, r0, lsl #2]
   32684:	add	pc, r2, r0
   32688:	andeq	r0, r0, r4, lsr #2
   3268c:			; <UNDEFINED> instruction: 0xfffffe2c
   32690:			; <UNDEFINED> instruction: 0xfffffe2c
   32694:			; <UNDEFINED> instruction: 0xfffffe2c
   32698:			; <UNDEFINED> instruction: 0xfffffe2c
   3269c:			; <UNDEFINED> instruction: 0xfffffe2c
   326a0:			; <UNDEFINED> instruction: 0xfffffe2c
   326a4:			; <UNDEFINED> instruction: 0xfffffe2c
   326a8:	andeq	r0, r0, r4, lsr #2
   326ac:			; <UNDEFINED> instruction: 0xfffffe2c
   326b0:			; <UNDEFINED> instruction: 0xfffffe2c
   326b4:			; <UNDEFINED> instruction: 0xfffffe2c
   326b8:			; <UNDEFINED> instruction: 0xfffffe2c
   326bc:			; <UNDEFINED> instruction: 0xfffffe2c
   326c0:			; <UNDEFINED> instruction: 0xfffffe2c
   326c4:			; <UNDEFINED> instruction: 0xfffffe2c
   326c8:			; <UNDEFINED> instruction: 0xfffffe2c
   326cc:			; <UNDEFINED> instruction: 0xfffffe2c
   326d0:			; <UNDEFINED> instruction: 0xfffffe2c
   326d4:			; <UNDEFINED> instruction: 0xfffffe2c
   326d8:			; <UNDEFINED> instruction: 0xfffffe2c
   326dc:			; <UNDEFINED> instruction: 0xfffffe2c
   326e0:			; <UNDEFINED> instruction: 0xfffffe2c
   326e4:			; <UNDEFINED> instruction: 0xfffffe2c
   326e8:			; <UNDEFINED> instruction: 0xfffffe2c
   326ec:			; <UNDEFINED> instruction: 0xfffffe2c
   326f0:			; <UNDEFINED> instruction: 0xfffffe2c
   326f4:			; <UNDEFINED> instruction: 0xfffffe2c
   326f8:			; <UNDEFINED> instruction: 0xfffffe2c
   326fc:			; <UNDEFINED> instruction: 0xfffffe2c
   32700:			; <UNDEFINED> instruction: 0xfffffe2c
   32704:			; <UNDEFINED> instruction: 0xfffffe2c
   32708:			; <UNDEFINED> instruction: 0xfffffe2c
   3270c:			; <UNDEFINED> instruction: 0xfffffe2c
   32710:			; <UNDEFINED> instruction: 0xfffffe2c
   32714:			; <UNDEFINED> instruction: 0xfffffe2c
   32718:			; <UNDEFINED> instruction: 0xfffffe2c
   3271c:			; <UNDEFINED> instruction: 0xfffffe2c
   32720:			; <UNDEFINED> instruction: 0xfffffe2c
   32724:			; <UNDEFINED> instruction: 0xfffffe2c
   32728:			; <UNDEFINED> instruction: 0xfffffe2c
   3272c:	andeq	r0, r0, r4, lsr #2
   32730:			; <UNDEFINED> instruction: 0xfffffe2c
   32734:			; <UNDEFINED> instruction: 0xfffffe2c
   32738:			; <UNDEFINED> instruction: 0xfffffe2c
   3273c:			; <UNDEFINED> instruction: 0xfffffe2c
   32740:			; <UNDEFINED> instruction: 0xfffffe2c
   32744:			; <UNDEFINED> instruction: 0xfffffe2c
   32748:			; <UNDEFINED> instruction: 0xfffffe2c
   3274c:	andeq	r0, r0, r4, lsr #2
   32750:			; <UNDEFINED> instruction: 0xfffffe2c
   32754:			; <UNDEFINED> instruction: 0xfffffe2c
   32758:			; <UNDEFINED> instruction: 0xfffffe2c
   3275c:			; <UNDEFINED> instruction: 0xfffffe2c
   32760:			; <UNDEFINED> instruction: 0xfffffe2c
   32764:			; <UNDEFINED> instruction: 0xfffffe2c
   32768:			; <UNDEFINED> instruction: 0xfffffe2c
   3276c:			; <UNDEFINED> instruction: 0xfffffe2c
   32770:			; <UNDEFINED> instruction: 0xfffffe2c
   32774:			; <UNDEFINED> instruction: 0xfffffe2c
   32778:	andeq	r0, r0, r4, lsr #2
   3277c:	andeq	r0, r0, r4, lsr #2
   32780:			; <UNDEFINED> instruction: 0xfffffe2c
   32784:	andeq	r0, r0, r4, lsr #2
   32788:			; <UNDEFINED> instruction: 0xfffffe2c
   3278c:			; <UNDEFINED> instruction: 0xfffffe2c
   32790:			; <UNDEFINED> instruction: 0xfffffe2c
   32794:			; <UNDEFINED> instruction: 0xfffffe2c
   32798:			; <UNDEFINED> instruction: 0xfffffe2c
   3279c:	andeq	r0, r0, r4, lsr #2
   327a0:	andeq	r0, r0, r4, lsr #2
   327a4:	andeq	r0, r0, r4, lsr #2
   327a8:	andeq	r0, r0, r4, lsr #2
   327ac:	cmp	r3, r1
   327b0:	beq	324b4 <myhtml_tree_generate_implied_end_tags@@Base+0x20>
   327b4:	ldr	r0, [lr, #4]
   327b8:	cmp	r0, #0
   327bc:	ldrne	r0, [lr, #4]
   327c0:	subne	r0, r0, #1
   327c4:	strne	r0, [lr, #4]
   327c8:	ldr	r0, [lr, #4]
   327cc:	cmp	r0, #0
   327d0:	bne	3265c <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   327d4:	b	324b4 <myhtml_tree_generate_implied_end_tags@@Base+0x20>

000327d8 <myhtml_tree_generate_all_implied_end_tags@@Base>:
   327d8:	push	{r4, sl, fp, lr}
   327dc:	add	fp, sp, #8
   327e0:	ldr	lr, [r0, #128]	; 0x80
   327e4:	ldr	r0, [lr, #4]
   327e8:	cmp	r0, #0
   327ec:	ldrne	r0, [lr, #4]
   327f0:	cmpne	r0, #0
   327f4:	bne	327fc <myhtml_tree_generate_all_implied_end_tags@@Base+0x24>
   327f8:	pop	{r4, sl, fp, pc}
   327fc:	cmp	r2, #0
   32800:	beq	32a2c <myhtml_tree_generate_all_implied_end_tags@@Base+0x254>
   32804:	ldr	r0, [lr, #4]
   32808:	cmp	r0, #0
   3280c:	beq	32824 <myhtml_tree_generate_all_implied_end_tags@@Base+0x4c>
   32810:	ldr	r0, [lr]
   32814:	ldr	r3, [lr, #4]
   32818:	add	r0, r0, r3, lsl #2
   3281c:	ldr	ip, [r0, #-4]
   32820:	b	32828 <myhtml_tree_generate_all_implied_end_tags@@Base+0x50>
   32824:	mov	ip, #0
   32828:	ldr	r3, [ip, #4]
   3282c:	sub	r0, r3, #27
   32830:	cmp	r0, #108	; 0x6c
   32834:	pophi	{r4, sl, fp, pc}
   32838:	add	r4, pc, #4
   3283c:	ldr	r0, [r4, r0, lsl #2]
   32840:	add	pc, r4, r0
   32844:			; <UNDEFINED> instruction: 0x000001b4
   32848:			; <UNDEFINED> instruction: 0xffffffb4
   3284c:			; <UNDEFINED> instruction: 0xffffffb4
   32850:			; <UNDEFINED> instruction: 0xffffffb4
   32854:			; <UNDEFINED> instruction: 0xffffffb4
   32858:			; <UNDEFINED> instruction: 0x000001b4
   3285c:			; <UNDEFINED> instruction: 0xffffffb4
   32860:			; <UNDEFINED> instruction: 0xffffffb4
   32864:			; <UNDEFINED> instruction: 0xffffffb4
   32868:			; <UNDEFINED> instruction: 0x000001b4
   3286c:			; <UNDEFINED> instruction: 0xffffffb4
   32870:			; <UNDEFINED> instruction: 0xffffffb4
   32874:			; <UNDEFINED> instruction: 0xffffffb4
   32878:			; <UNDEFINED> instruction: 0xffffffb4
   3287c:			; <UNDEFINED> instruction: 0xffffffb4
   32880:			; <UNDEFINED> instruction: 0xffffffb4
   32884:			; <UNDEFINED> instruction: 0xffffffb4
   32888:			; <UNDEFINED> instruction: 0x000001b4
   3288c:			; <UNDEFINED> instruction: 0xffffffb4
   32890:			; <UNDEFINED> instruction: 0xffffffb4
   32894:			; <UNDEFINED> instruction: 0xffffffb4
   32898:			; <UNDEFINED> instruction: 0xffffffb4
   3289c:			; <UNDEFINED> instruction: 0xffffffb4
   328a0:			; <UNDEFINED> instruction: 0xffffffb4
   328a4:			; <UNDEFINED> instruction: 0xffffffb4
   328a8:			; <UNDEFINED> instruction: 0xffffffb4
   328ac:			; <UNDEFINED> instruction: 0xffffffb4
   328b0:			; <UNDEFINED> instruction: 0xffffffb4
   328b4:			; <UNDEFINED> instruction: 0xffffffb4
   328b8:			; <UNDEFINED> instruction: 0xffffffb4
   328bc:			; <UNDEFINED> instruction: 0xffffffb4
   328c0:			; <UNDEFINED> instruction: 0xffffffb4
   328c4:			; <UNDEFINED> instruction: 0xffffffb4
   328c8:			; <UNDEFINED> instruction: 0xffffffb4
   328cc:			; <UNDEFINED> instruction: 0xffffffb4
   328d0:			; <UNDEFINED> instruction: 0xffffffb4
   328d4:			; <UNDEFINED> instruction: 0xffffffb4
   328d8:			; <UNDEFINED> instruction: 0xffffffb4
   328dc:			; <UNDEFINED> instruction: 0xffffffb4
   328e0:			; <UNDEFINED> instruction: 0xffffffb4
   328e4:			; <UNDEFINED> instruction: 0xffffffb4
   328e8:			; <UNDEFINED> instruction: 0xffffffb4
   328ec:			; <UNDEFINED> instruction: 0xffffffb4
   328f0:			; <UNDEFINED> instruction: 0xffffffb4
   328f4:			; <UNDEFINED> instruction: 0xffffffb4
   328f8:			; <UNDEFINED> instruction: 0xffffffb4
   328fc:			; <UNDEFINED> instruction: 0xffffffb4
   32900:			; <UNDEFINED> instruction: 0xffffffb4
   32904:			; <UNDEFINED> instruction: 0xffffffb4
   32908:			; <UNDEFINED> instruction: 0xffffffb4
   3290c:			; <UNDEFINED> instruction: 0x000001b4
   32910:			; <UNDEFINED> instruction: 0xffffffb4
   32914:			; <UNDEFINED> instruction: 0xffffffb4
   32918:			; <UNDEFINED> instruction: 0xffffffb4
   3291c:			; <UNDEFINED> instruction: 0xffffffb4
   32920:			; <UNDEFINED> instruction: 0xffffffb4
   32924:			; <UNDEFINED> instruction: 0xffffffb4
   32928:			; <UNDEFINED> instruction: 0xffffffb4
   3292c:			; <UNDEFINED> instruction: 0xffffffb4
   32930:			; <UNDEFINED> instruction: 0xffffffb4
   32934:			; <UNDEFINED> instruction: 0xffffffb4
   32938:			; <UNDEFINED> instruction: 0xffffffb4
   3293c:			; <UNDEFINED> instruction: 0xffffffb4
   32940:			; <UNDEFINED> instruction: 0xffffffb4
   32944:			; <UNDEFINED> instruction: 0xffffffb4
   32948:			; <UNDEFINED> instruction: 0xffffffb4
   3294c:			; <UNDEFINED> instruction: 0xffffffb4
   32950:			; <UNDEFINED> instruction: 0xffffffb4
   32954:			; <UNDEFINED> instruction: 0xffffffb4
   32958:			; <UNDEFINED> instruction: 0x000001b4
   3295c:			; <UNDEFINED> instruction: 0x000001b4
   32960:			; <UNDEFINED> instruction: 0xffffffb4
   32964:			; <UNDEFINED> instruction: 0x000001b4
   32968:			; <UNDEFINED> instruction: 0xffffffb4
   3296c:			; <UNDEFINED> instruction: 0xffffffb4
   32970:			; <UNDEFINED> instruction: 0xffffffb4
   32974:			; <UNDEFINED> instruction: 0xffffffb4
   32978:			; <UNDEFINED> instruction: 0xffffffb4
   3297c:			; <UNDEFINED> instruction: 0x000001b4
   32980:			; <UNDEFINED> instruction: 0x000001b4
   32984:			; <UNDEFINED> instruction: 0x000001b4
   32988:			; <UNDEFINED> instruction: 0x000001b4
   3298c:			; <UNDEFINED> instruction: 0xffffffb4
   32990:			; <UNDEFINED> instruction: 0xffffffb4
   32994:			; <UNDEFINED> instruction: 0xffffffb4
   32998:			; <UNDEFINED> instruction: 0xffffffb4
   3299c:			; <UNDEFINED> instruction: 0xffffffb4
   329a0:			; <UNDEFINED> instruction: 0xffffffb4
   329a4:			; <UNDEFINED> instruction: 0xffffffb4
   329a8:			; <UNDEFINED> instruction: 0xffffffb4
   329ac:			; <UNDEFINED> instruction: 0xffffffb4
   329b0:			; <UNDEFINED> instruction: 0xffffffb4
   329b4:			; <UNDEFINED> instruction: 0xffffffb4
   329b8:			; <UNDEFINED> instruction: 0xffffffb4
   329bc:			; <UNDEFINED> instruction: 0xffffffb4
   329c0:			; <UNDEFINED> instruction: 0xffffffb4
   329c4:			; <UNDEFINED> instruction: 0xffffffb4
   329c8:			; <UNDEFINED> instruction: 0xffffffb4
   329cc:			; <UNDEFINED> instruction: 0xffffffb4
   329d0:			; <UNDEFINED> instruction: 0x000001b4
   329d4:			; <UNDEFINED> instruction: 0x000001b4
   329d8:			; <UNDEFINED> instruction: 0xffffffb4
   329dc:			; <UNDEFINED> instruction: 0xffffffb4
   329e0:			; <UNDEFINED> instruction: 0x000001b4
   329e4:			; <UNDEFINED> instruction: 0x000001b4
   329e8:			; <UNDEFINED> instruction: 0x000001b4
   329ec:			; <UNDEFINED> instruction: 0xffffffb4
   329f0:			; <UNDEFINED> instruction: 0xffffffb4
   329f4:			; <UNDEFINED> instruction: 0x000001b4
   329f8:	cmp	r3, r1
   329fc:	ldreq	r0, [ip, #8]
   32a00:	cmpeq	r0, r2
   32a04:	beq	327f8 <myhtml_tree_generate_all_implied_end_tags@@Base+0x20>
   32a08:	ldr	r0, [lr, #4]
   32a0c:	cmp	r0, #0
   32a10:	ldrne	r0, [lr, #4]
   32a14:	subne	r0, r0, #1
   32a18:	strne	r0, [lr, #4]
   32a1c:	ldr	r0, [lr, #4]
   32a20:	cmp	r0, #0
   32a24:	bne	32804 <myhtml_tree_generate_all_implied_end_tags@@Base+0x2c>
   32a28:	b	327f8 <myhtml_tree_generate_all_implied_end_tags@@Base+0x20>
   32a2c:	ldr	ip, [lr]
   32a30:	ldr	r0, [lr, #4]
   32a34:	ldr	r0, [lr, #4]
   32a38:	add	r0, ip, r0, lsl #2
   32a3c:	ldr	r0, [r0, #-4]
   32a40:	ldr	r3, [r0, #4]
   32a44:	sub	r0, r3, #27
   32a48:	cmp	r0, #108	; 0x6c
   32a4c:	bhi	327f8 <myhtml_tree_generate_all_implied_end_tags@@Base+0x20>
   32a50:	add	r2, pc, #4
   32a54:	ldr	r0, [r2, r0, lsl #2]
   32a58:	add	pc, r2, r0
   32a5c:			; <UNDEFINED> instruction: 0x000001b4
   32a60:			; <UNDEFINED> instruction: 0xfffffd9c
   32a64:			; <UNDEFINED> instruction: 0xfffffd9c
   32a68:			; <UNDEFINED> instruction: 0xfffffd9c
   32a6c:			; <UNDEFINED> instruction: 0xfffffd9c
   32a70:			; <UNDEFINED> instruction: 0x000001b4
   32a74:			; <UNDEFINED> instruction: 0xfffffd9c
   32a78:			; <UNDEFINED> instruction: 0xfffffd9c
   32a7c:			; <UNDEFINED> instruction: 0xfffffd9c
   32a80:			; <UNDEFINED> instruction: 0x000001b4
   32a84:			; <UNDEFINED> instruction: 0xfffffd9c
   32a88:			; <UNDEFINED> instruction: 0xfffffd9c
   32a8c:			; <UNDEFINED> instruction: 0xfffffd9c
   32a90:			; <UNDEFINED> instruction: 0xfffffd9c
   32a94:			; <UNDEFINED> instruction: 0xfffffd9c
   32a98:			; <UNDEFINED> instruction: 0xfffffd9c
   32a9c:			; <UNDEFINED> instruction: 0xfffffd9c
   32aa0:			; <UNDEFINED> instruction: 0x000001b4
   32aa4:			; <UNDEFINED> instruction: 0xfffffd9c
   32aa8:			; <UNDEFINED> instruction: 0xfffffd9c
   32aac:			; <UNDEFINED> instruction: 0xfffffd9c
   32ab0:			; <UNDEFINED> instruction: 0xfffffd9c
   32ab4:			; <UNDEFINED> instruction: 0xfffffd9c
   32ab8:			; <UNDEFINED> instruction: 0xfffffd9c
   32abc:			; <UNDEFINED> instruction: 0xfffffd9c
   32ac0:			; <UNDEFINED> instruction: 0xfffffd9c
   32ac4:			; <UNDEFINED> instruction: 0xfffffd9c
   32ac8:			; <UNDEFINED> instruction: 0xfffffd9c
   32acc:			; <UNDEFINED> instruction: 0xfffffd9c
   32ad0:			; <UNDEFINED> instruction: 0xfffffd9c
   32ad4:			; <UNDEFINED> instruction: 0xfffffd9c
   32ad8:			; <UNDEFINED> instruction: 0xfffffd9c
   32adc:			; <UNDEFINED> instruction: 0xfffffd9c
   32ae0:			; <UNDEFINED> instruction: 0xfffffd9c
   32ae4:			; <UNDEFINED> instruction: 0xfffffd9c
   32ae8:			; <UNDEFINED> instruction: 0xfffffd9c
   32aec:			; <UNDEFINED> instruction: 0xfffffd9c
   32af0:			; <UNDEFINED> instruction: 0xfffffd9c
   32af4:			; <UNDEFINED> instruction: 0xfffffd9c
   32af8:			; <UNDEFINED> instruction: 0xfffffd9c
   32afc:			; <UNDEFINED> instruction: 0xfffffd9c
   32b00:			; <UNDEFINED> instruction: 0xfffffd9c
   32b04:			; <UNDEFINED> instruction: 0xfffffd9c
   32b08:			; <UNDEFINED> instruction: 0xfffffd9c
   32b0c:			; <UNDEFINED> instruction: 0xfffffd9c
   32b10:			; <UNDEFINED> instruction: 0xfffffd9c
   32b14:			; <UNDEFINED> instruction: 0xfffffd9c
   32b18:			; <UNDEFINED> instruction: 0xfffffd9c
   32b1c:			; <UNDEFINED> instruction: 0xfffffd9c
   32b20:			; <UNDEFINED> instruction: 0xfffffd9c
   32b24:			; <UNDEFINED> instruction: 0x000001b4
   32b28:			; <UNDEFINED> instruction: 0xfffffd9c
   32b2c:			; <UNDEFINED> instruction: 0xfffffd9c
   32b30:			; <UNDEFINED> instruction: 0xfffffd9c
   32b34:			; <UNDEFINED> instruction: 0xfffffd9c
   32b38:			; <UNDEFINED> instruction: 0xfffffd9c
   32b3c:			; <UNDEFINED> instruction: 0xfffffd9c
   32b40:			; <UNDEFINED> instruction: 0xfffffd9c
   32b44:			; <UNDEFINED> instruction: 0xfffffd9c
   32b48:			; <UNDEFINED> instruction: 0xfffffd9c
   32b4c:			; <UNDEFINED> instruction: 0xfffffd9c
   32b50:			; <UNDEFINED> instruction: 0xfffffd9c
   32b54:			; <UNDEFINED> instruction: 0xfffffd9c
   32b58:			; <UNDEFINED> instruction: 0xfffffd9c
   32b5c:			; <UNDEFINED> instruction: 0xfffffd9c
   32b60:			; <UNDEFINED> instruction: 0xfffffd9c
   32b64:			; <UNDEFINED> instruction: 0xfffffd9c
   32b68:			; <UNDEFINED> instruction: 0xfffffd9c
   32b6c:			; <UNDEFINED> instruction: 0xfffffd9c
   32b70:			; <UNDEFINED> instruction: 0x000001b4
   32b74:			; <UNDEFINED> instruction: 0x000001b4
   32b78:			; <UNDEFINED> instruction: 0xfffffd9c
   32b7c:			; <UNDEFINED> instruction: 0x000001b4
   32b80:			; <UNDEFINED> instruction: 0xfffffd9c
   32b84:			; <UNDEFINED> instruction: 0xfffffd9c
   32b88:			; <UNDEFINED> instruction: 0xfffffd9c
   32b8c:			; <UNDEFINED> instruction: 0xfffffd9c
   32b90:			; <UNDEFINED> instruction: 0xfffffd9c
   32b94:			; <UNDEFINED> instruction: 0x000001b4
   32b98:			; <UNDEFINED> instruction: 0x000001b4
   32b9c:			; <UNDEFINED> instruction: 0x000001b4
   32ba0:			; <UNDEFINED> instruction: 0x000001b4
   32ba4:			; <UNDEFINED> instruction: 0xfffffd9c
   32ba8:			; <UNDEFINED> instruction: 0xfffffd9c
   32bac:			; <UNDEFINED> instruction: 0xfffffd9c
   32bb0:			; <UNDEFINED> instruction: 0xfffffd9c
   32bb4:			; <UNDEFINED> instruction: 0xfffffd9c
   32bb8:			; <UNDEFINED> instruction: 0xfffffd9c
   32bbc:			; <UNDEFINED> instruction: 0xfffffd9c
   32bc0:			; <UNDEFINED> instruction: 0xfffffd9c
   32bc4:			; <UNDEFINED> instruction: 0xfffffd9c
   32bc8:			; <UNDEFINED> instruction: 0xfffffd9c
   32bcc:			; <UNDEFINED> instruction: 0xfffffd9c
   32bd0:			; <UNDEFINED> instruction: 0xfffffd9c
   32bd4:			; <UNDEFINED> instruction: 0xfffffd9c
   32bd8:			; <UNDEFINED> instruction: 0xfffffd9c
   32bdc:			; <UNDEFINED> instruction: 0xfffffd9c
   32be0:			; <UNDEFINED> instruction: 0xfffffd9c
   32be4:			; <UNDEFINED> instruction: 0xfffffd9c
   32be8:			; <UNDEFINED> instruction: 0x000001b4
   32bec:			; <UNDEFINED> instruction: 0x000001b4
   32bf0:			; <UNDEFINED> instruction: 0xfffffd9c
   32bf4:			; <UNDEFINED> instruction: 0xfffffd9c
   32bf8:			; <UNDEFINED> instruction: 0x000001b4
   32bfc:			; <UNDEFINED> instruction: 0x000001b4
   32c00:			; <UNDEFINED> instruction: 0x000001b4
   32c04:			; <UNDEFINED> instruction: 0xfffffd9c
   32c08:			; <UNDEFINED> instruction: 0xfffffd9c
   32c0c:			; <UNDEFINED> instruction: 0x000001b4
   32c10:	cmp	r3, r1
   32c14:	beq	327f8 <myhtml_tree_generate_all_implied_end_tags@@Base+0x20>
   32c18:	ldr	r0, [lr, #4]
   32c1c:	cmp	r0, #0
   32c20:	ldrne	r0, [lr, #4]
   32c24:	subne	r0, r0, #1
   32c28:	strne	r0, [lr, #4]
   32c2c:	ldr	r0, [lr, #4]
   32c30:	cmp	r0, #0
   32c34:	bne	32a30 <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   32c38:	b	327f8 <myhtml_tree_generate_all_implied_end_tags@@Base+0x20>

00032c3c <myhtml_tree_reset_insertion_mode_appropriately@@Base>:
   32c3c:	push	{r4, sl, fp, lr}
   32c40:	add	fp, sp, #8
   32c44:	ldr	r1, [r0, #128]	; 0x80
   32c48:	ldr	r2, [r1, #4]
   32c4c:	cmp	r2, #0
   32c50:	popeq	{r4, sl, fp, pc}
   32c54:	ldr	ip, [r1]
   32c58:	ldr	r2, [r1, #4]
   32c5c:	cmp	r2, #0
   32c60:	beq	32e84 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x248>
   32c64:	sub	lr, ip, #4
   32c68:	ldr	r3, [lr, r2, lsl #2]
   32c6c:	mov	r1, #0
   32c70:	cmp	r2, #1
   32c74:	bne	32c88 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x4c>
   32c78:	ldr	r1, [r0, #88]	; 0x58
   32c7c:	cmp	r1, #0
   32c80:	movne	r3, r1
   32c84:	mov	r1, #1
   32c88:	ldr	r4, [r3, #8]
   32c8c:	cmp	r4, #1
   32c90:	bne	32e74 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x238>
   32c94:	ldr	r3, [r3, #4]
   32c98:	sub	r3, r3, #23
   32c9c:	cmp	r3, #112	; 0x70
   32ca0:	bhi	32e74 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x238>
   32ca4:	add	r4, pc, #4
   32ca8:	ldr	r3, [r4, r3, lsl #2]
   32cac:	add	pc, r4, r3
   32cb0:	andeq	r0, r0, ip, lsr #4
   32cb4:	andeq	r0, r0, r4, asr #3
   32cb8:	andeq	r0, r0, r4, asr #3
   32cbc:	andeq	r0, r0, r4, asr #3
   32cc0:	andeq	r0, r0, r0, lsl #4
   32cc4:	andeq	r0, r0, r4, asr #3
   32cc8:	andeq	r0, r0, r4, asr #3
   32ccc:	andeq	r0, r0, r4, asr #3
   32cd0:	andeq	r0, r0, r4, asr #3
   32cd4:	andeq	r0, r0, ip, lsl #4
   32cd8:	andeq	r0, r0, r4, asr #3
   32cdc:	andeq	r0, r0, r4, asr #3
   32ce0:	andeq	r0, r0, r4, asr #3
   32ce4:	andeq	r0, r0, r4, asr #3
   32ce8:	andeq	r0, r0, r4, asr #3
   32cec:	andeq	r0, r0, r4, asr #3
   32cf0:	andeq	r0, r0, r4, asr #3
   32cf4:	andeq	r0, r0, r4, asr #3
   32cf8:	andeq	r0, r0, r4, asr #3
   32cfc:	andeq	r0, r0, r4, asr #3
   32d00:	andeq	r0, r0, r4, asr #3
   32d04:	andeq	r0, r0, r4, asr #3
   32d08:	andeq	r0, r0, r4, asr #3
   32d0c:	andeq	r0, r0, r4, asr #3
   32d10:	andeq	r0, r0, r4, asr #3
   32d14:	andeq	r0, r0, r4, asr #3
   32d18:	andeq	r0, r0, r4, asr #3
   32d1c:	andeq	r0, r0, r4, asr #3
   32d20:	andeq	r0, r0, r4, asr #3
   32d24:	andeq	r0, r0, r4, asr #3
   32d28:	andeq	r0, r0, r4, asr #3
   32d2c:	andeq	r0, r0, r8, lsl r2
   32d30:	andeq	r0, r0, r4, asr #3
   32d34:	andeq	r0, r0, r4, asr #3
   32d38:	andeq	r0, r0, r4, asr #3
   32d3c:	andeq	r0, r0, r4, asr #3
   32d40:	andeq	r0, r0, r4, asr #3
   32d44:	andeq	r0, r0, r4, asr #3
   32d48:	andeq	r0, r0, r4, lsr #4
   32d4c:	andeq	r0, r0, r4, asr #3
   32d50:	andeq	r0, r0, r4, asr #3
   32d54:	andeq	r0, r0, r4, asr #3
   32d58:	andeq	r0, r0, r8, lsr r2
   32d5c:	andeq	r0, r0, r4, asr #3
   32d60:	andeq	r0, r0, r4, asr #3
   32d64:	andeq	r0, r0, r4, asr #3
   32d68:	andeq	r0, r0, r4, asr #3
   32d6c:	andeq	r0, r0, r4, asr #3
   32d70:	andeq	r0, r0, r4, asr #3
   32d74:	andeq	r0, r0, r4, asr #3
   32d78:	andeq	r0, r0, r4, asr #3
   32d7c:	andeq	r0, r0, r4, asr #3
   32d80:	andeq	r0, r0, r4, asr #3
   32d84:	andeq	r0, r0, r4, asr #3
   32d88:	andeq	r0, r0, r4, asr #3
   32d8c:	andeq	r0, r0, r4, asr #3
   32d90:	andeq	r0, r0, r4, asr #3
   32d94:	andeq	r0, r0, r4, asr #3
   32d98:	andeq	r0, r0, r4, asr #3
   32d9c:	andeq	r0, r0, r4, asr #3
   32da0:	andeq	r0, r0, r4, asr #3
   32da4:	andeq	r0, r0, r4, asr #3
   32da8:	andeq	r0, r0, r4, asr #3
   32dac:	andeq	r0, r0, r4, asr #3
   32db0:	andeq	r0, r0, r4, asr #3
   32db4:	andeq	r0, r0, r4, asr #3
   32db8:	andeq	r0, r0, r4, asr #3
   32dbc:	andeq	r0, r0, r4, asr #3
   32dc0:	andeq	r0, r0, r4, asr #3
   32dc4:	andeq	r0, r0, r4, asr #3
   32dc8:	andeq	r0, r0, r4, asr #3
   32dcc:	andeq	r0, r0, r4, asr #3
   32dd0:	andeq	r0, r0, r4, asr #3
   32dd4:	andeq	r0, r0, r4, asr #3
   32dd8:	andeq	r0, r0, r4, asr #3
   32ddc:	andeq	r0, r0, r4, asr #3
   32de0:	andeq	r0, r0, r4, asr #3
   32de4:	andeq	r0, r0, r4, asr #3
   32de8:	andeq	r0, r0, r4, asr #3
   32dec:	andeq	r0, r0, r4, asr #3
   32df0:	andeq	r0, r0, r4, asr #3
   32df4:	andeq	r0, r0, r4, asr #3
   32df8:	andeq	r0, r0, r4, asr #3
   32dfc:	andeq	r0, r0, r4, asr #3
   32e00:	andeq	r0, r0, r4, asr #3
   32e04:	andeq	r0, r0, r4, asr #3
   32e08:	andeq	r0, r0, r4, asr #3
   32e0c:	andeq	r0, r0, r4, asr #3
   32e10:	andeq	r0, r0, r4, asr #3
   32e14:	andeq	r0, r0, r4, asr #3
   32e18:	andeq	r0, r0, r4, asr #3
   32e1c:	andeq	r0, r0, r0, asr r2
   32e20:	andeq	r0, r0, r4, asr #3
   32e24:	andeq	r0, r0, r4, asr #3
   32e28:	andeq	r0, r0, r4, asr #3
   32e2c:	andeq	r0, r0, r4, asr #3
   32e30:	andeq	r0, r0, r4, asr #3
   32e34:	andeq	r0, r0, r4, asr #3
   32e38:	andeq	r0, r0, r4, asr #3
   32e3c:	andeq	r0, r0, r4, asr #3
   32e40:	andeq	r0, r0, r4, asr #3
   32e44:	andeq	r0, r0, r4, asr #3
   32e48:	andeq	r0, r0, ip, lsl #5
   32e4c:	andeq	r0, r0, r0, ror #3
   32e50:	andeq	r0, r0, ip, ror #3
   32e54:	muleq	r0, r8, r2
   32e58:	andeq	r0, r0, r4, asr #3
   32e5c:	andeq	r0, r0, r0, ror #3
   32e60:	andeq	r0, r0, ip, ror #3
   32e64:	andeq	r0, r0, r0, ror #3
   32e68:	andeq	r0, r0, r4, asr #3
   32e6c:	andeq	r0, r0, r4, asr #3
   32e70:			; <UNDEFINED> instruction: 0x000002b4
   32e74:	cmp	r1, #0
   32e78:	bne	32edc <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2a0>
   32e7c:	subs	r2, r2, #1
   32e80:	bne	32c68 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2c>
   32e84:	mov	r1, #0
   32e88:	str	r1, [r0, #168]	; 0xa8
   32e8c:	pop	{r4, sl, fp, pc}
   32e90:	mov	r1, #12
   32e94:	str	r1, [r0, #168]	; 0xa8
   32e98:	pop	{r4, sl, fp, pc}
   32e9c:	cmp	r1, #0
   32ea0:	bne	32edc <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2a0>
   32ea4:	mov	r1, #14
   32ea8:	str	r1, [r0, #168]	; 0xa8
   32eac:	pop	{r4, sl, fp, pc}
   32eb0:	mov	r1, #10
   32eb4:	str	r1, [r0, #168]	; 0xa8
   32eb8:	pop	{r4, sl, fp, pc}
   32ebc:	mov	r1, #11
   32ec0:	str	r1, [r0, #168]	; 0xa8
   32ec4:	pop	{r4, sl, fp, pc}
   32ec8:	mov	r1, #19
   32ecc:	str	r1, [r0, #168]	; 0xa8
   32ed0:	pop	{r4, sl, fp, pc}
   32ed4:	cmp	r1, #0
   32ed8:	beq	32f70 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x334>
   32edc:	mov	r1, #6
   32ee0:	str	r1, [r0, #168]	; 0xa8
   32ee4:	pop	{r4, sl, fp, pc}
   32ee8:	ldr	r1, [r0, #92]	; 0x5c
   32eec:	cmp	r1, #0
   32ef0:	moveq	r1, #2
   32ef4:	movne	r1, #5
   32ef8:	str	r1, [r0, #168]	; 0xa8
   32efc:	pop	{r4, sl, fp, pc}
   32f00:	cmp	r1, #0
   32f04:	bne	32f30 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2f4>
   32f08:	rsb	r1, r2, #2
   32f0c:	cmp	r1, #1
   32f10:	beq	32f30 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2f4>
   32f14:	ldr	r2, [ip, -r1, lsl #2]
   32f18:	ldr	r2, [r2, #4]
   32f1c:	cmp	r2, #125	; 0x7d
   32f20:	beq	32f7c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x340>
   32f24:	add	r1, r1, #1
   32f28:	cmp	r2, #128	; 0x80
   32f2c:	bne	32f0c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2d0>
   32f30:	mov	r1, #15
   32f34:	str	r1, [r0, #168]	; 0xa8
   32f38:	pop	{r4, sl, fp, pc}
   32f3c:	mov	r1, #8
   32f40:	str	r1, [r0, #168]	; 0xa8
   32f44:	pop	{r4, sl, fp, pc}
   32f48:	ldr	r1, [r0, #140]	; 0x8c
   32f4c:	ldr	r2, [r1]
   32f50:	ldr	r1, [r1, #4]
   32f54:	add	r1, r2, r1, lsl #2
   32f58:	ldr	r1, [r1, #-4]
   32f5c:	str	r1, [r0, #168]	; 0xa8
   32f60:	pop	{r4, sl, fp, pc}
   32f64:	mov	r1, #13
   32f68:	str	r1, [r0, #168]	; 0xa8
   32f6c:	pop	{r4, sl, fp, pc}
   32f70:	mov	r1, #3
   32f74:	str	r1, [r0, #168]	; 0xa8
   32f78:	pop	{r4, sl, fp, pc}
   32f7c:	mov	r1, #16
   32f80:	str	r1, [r0, #168]	; 0xa8
   32f84:	pop	{r4, sl, fp, pc}

00032f88 <myhtml_tree_active_formatting_is_marker@@Base>:
   32f88:	ldr	r0, [r0]
   32f8c:	ldr	r2, [r0, #36]	; 0x24
   32f90:	mov	r0, #1
   32f94:	cmp	r2, r1
   32f98:	bxeq	lr
   32f9c:	ldr	r1, [r1, #4]
   32fa0:	cmp	r1, #82	; 0x52
   32fa4:	ble	32fc4 <myhtml_tree_active_formatting_is_marker@@Base+0x3c>
   32fa8:	cmp	r1, #126	; 0x7e
   32fac:	bgt	32fe4 <myhtml_tree_active_formatting_is_marker@@Base+0x5c>
   32fb0:	cmp	r1, #83	; 0x53
   32fb4:	beq	32fe0 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   32fb8:	cmp	r1, #94	; 0x5e
   32fbc:	movne	r0, #0
   32fc0:	bx	lr
   32fc4:	cmp	r1, #27
   32fc8:	bhi	32ff0 <myhtml_tree_active_formatting_is_marker@@Base+0x68>
   32fcc:	movw	r3, #512	; 0x200
   32fd0:	mov	r2, #1
   32fd4:	movt	r3, #2560	; 0xa00
   32fd8:	tst	r3, r2, lsl r1
   32fdc:	beq	32ff0 <myhtml_tree_active_formatting_is_marker@@Base+0x68>
   32fe0:	bx	lr
   32fe4:	cmp	r1, #127	; 0x7f
   32fe8:	cmpne	r1, #131	; 0x83
   32fec:	beq	32fe0 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   32ff0:	mov	r0, #0
   32ff4:	bx	lr

00032ff8 <myhtml_tree_active_formatting_append@@Base>:
   32ff8:	push	{r4, r5, fp, lr}
   32ffc:	add	fp, sp, #8
   33000:	ldr	r5, [r0, #124]	; 0x7c
   33004:	mov	r4, r1
   33008:	ldr	r1, [r5, #8]
   3300c:	ldr	r0, [r5, #4]
   33010:	cmp	r0, r1
   33014:	bcc	33034 <myhtml_tree_active_formatting_append@@Base+0x3c>
   33018:	lsl	r0, r1, #1
   3301c:	lsl	r1, r1, #3
   33020:	str	r0, [r5, #8]
   33024:	ldr	r0, [r5]
   33028:	bl	10da0 <mycore_realloc@plt>
   3302c:	cmp	r0, #0
   33030:	strne	r0, [r5]
   33034:	ldr	r0, [r5]
   33038:	ldr	r1, [r5, #4]
   3303c:	str	r4, [r0, r1, lsl #2]
   33040:	ldr	r0, [r5, #4]
   33044:	add	r0, r0, #1
   33048:	str	r0, [r5, #4]
   3304c:	pop	{r4, r5, fp, pc}

00033050 <myhtml_tree_active_formatting_pop@@Base>:
   33050:	ldr	r0, [r0, #124]	; 0x7c
   33054:	ldr	r1, [r0, #4]
   33058:	cmp	r1, #0
   3305c:	ldrne	r1, [r0, #4]
   33060:	subne	r1, r1, #1
   33064:	strne	r1, [r0, #4]
   33068:	bx	lr

0003306c <myhtml_tree_active_formatting_remove@@Base>:
   3306c:	push	{r4, r5, fp, lr}
   33070:	add	fp, sp, #8
   33074:	mov	r5, r0
   33078:	ldr	r0, [r0, #124]	; 0x7c
   3307c:	ldr	r2, [r0, #4]
   33080:	ldr	r3, [r0]
   33084:	add	r3, r3, r2, lsl #2
   33088:	add	r3, r3, #4
   3308c:	cmp	r2, #0
   33090:	popeq	{r4, r5, fp, pc}
   33094:	sub	r4, r3, #4
   33098:	ldr	r3, [r3, #-8]
   3309c:	sub	r2, r2, #1
   330a0:	cmp	r3, r1
   330a4:	mov	r3, r4
   330a8:	bne	3308c <myhtml_tree_active_formatting_remove@@Base+0x20>
   330ac:	ldr	r0, [r0, #4]
   330b0:	mov	r1, r4
   330b4:	sub	r0, r0, r2
   330b8:	lsl	r2, r0, #2
   330bc:	sub	r0, r4, #4
   330c0:	bl	10f98 <memmove@plt>
   330c4:	ldr	r0, [r5, #124]	; 0x7c
   330c8:	ldr	r1, [r0, #4]
   330cc:	sub	r1, r1, #1
   330d0:	str	r1, [r0, #4]
   330d4:	pop	{r4, r5, fp, pc}

000330d8 <myhtml_tree_active_formatting_remove_by_index@@Base>:
   330d8:	push	{r4, sl, fp, lr}
   330dc:	add	fp, sp, #8
   330e0:	ldr	r2, [r0, #124]	; 0x7c
   330e4:	mov	r4, r0
   330e8:	ldr	r0, [r2]
   330ec:	ldr	r2, [r2, #4]
   330f0:	add	r0, r0, r1, lsl #2
   330f4:	sub	r1, r2, r1
   330f8:	add	r3, r0, #4
   330fc:	lsl	r2, r1, #2
   33100:	mov	r1, r3
   33104:	bl	10f98 <memmove@plt>
   33108:	ldr	r0, [r4, #124]	; 0x7c
   3310c:	ldr	r1, [r0, #4]
   33110:	sub	r1, r1, #1
   33114:	str	r1, [r0, #4]
   33118:	pop	{r4, sl, fp, pc}

0003311c <myhtml_tree_active_formatting_append_with_check@@Base>:
   3311c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33120:	add	fp, sp, #28
   33124:	sub	sp, sp, #4
   33128:	mov	r4, r1
   3312c:	ldr	r1, [r0, #124]	; 0x7c
   33130:	mov	r5, r0
   33134:	ldr	r0, [r1, #4]
   33138:	cmp	r0, #0
   3313c:	beq	33288 <myhtml_tree_active_formatting_append_with_check@@Base+0x16c>
   33140:	ldr	r6, [r1]
   33144:	movw	sl, #512	; 0x200
   33148:	sub	r7, r0, #1
   3314c:	mov	r9, #0
   33150:	movt	sl, #2560	; 0xa00
   33154:	mov	r8, r7
   33158:	ldr	r1, [r5]
   3315c:	ldr	r0, [r6, r7, lsl #2]
   33160:	ldr	r1, [r1, #36]	; 0x24
   33164:	cmp	r1, r0
   33168:	beq	33238 <myhtml_tree_active_formatting_append_with_check@@Base+0x11c>
   3316c:	ldr	r1, [r0, #4]
   33170:	cmp	r1, #82	; 0x52
   33174:	ble	33194 <myhtml_tree_active_formatting_append_with_check@@Base+0x78>
   33178:	cmp	r1, #126	; 0x7e
   3317c:	bgt	331ac <myhtml_tree_active_formatting_append_with_check@@Base+0x90>
   33180:	cmp	r1, #83	; 0x53
   33184:	beq	33238 <myhtml_tree_active_formatting_append_with_check@@Base+0x11c>
   33188:	cmp	r1, #94	; 0x5e
   3318c:	bne	331b8 <myhtml_tree_active_formatting_append_with_check@@Base+0x9c>
   33190:	b	33238 <myhtml_tree_active_formatting_append_with_check@@Base+0x11c>
   33194:	cmp	r1, #27
   33198:	bhi	331b8 <myhtml_tree_active_formatting_append_with_check@@Base+0x9c>
   3319c:	mov	r2, #1
   331a0:	tst	sl, r2, lsl r1
   331a4:	beq	331b8 <myhtml_tree_active_formatting_append_with_check@@Base+0x9c>
   331a8:	b	33238 <myhtml_tree_active_formatting_append_with_check@@Base+0x11c>
   331ac:	cmp	r1, #127	; 0x7f
   331b0:	cmpne	r1, #131	; 0x83
   331b4:	beq	33238 <myhtml_tree_active_formatting_append_with_check@@Base+0x11c>
   331b8:	ldr	r1, [r0, #32]
   331bc:	cmp	r1, #0
   331c0:	ldrne	r0, [r4, #32]
   331c4:	cmpne	r0, #0
   331c8:	bne	331dc <myhtml_tree_active_formatting_append_with_check@@Base+0xc0>
   331cc:	sub	r7, r7, #1
   331d0:	cmn	r7, #1
   331d4:	bne	33158 <myhtml_tree_active_formatting_append_with_check@@Base+0x3c>
   331d8:	b	33238 <myhtml_tree_active_formatting_append_with_check@@Base+0x11c>
   331dc:	ldr	r0, [r5, #8]
   331e0:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   331e4:	ldr	r1, [r4, #32]
   331e8:	ldr	r0, [r5, #8]
   331ec:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   331f0:	ldr	r0, [r6, r7, lsl #2]
   331f4:	ldr	r2, [r4, #8]
   331f8:	ldr	r1, [r0, #8]
   331fc:	cmp	r1, r2
   33200:	bne	331cc <myhtml_tree_active_formatting_append_with_check@@Base+0xb0>
   33204:	ldr	r1, [r4, #4]
   33208:	ldr	r2, [r0, #4]
   3320c:	cmp	r2, r1
   33210:	bne	331cc <myhtml_tree_active_formatting_append_with_check@@Base+0xb0>
   33214:	ldr	r1, [r4, #32]
   33218:	ldr	r0, [r0, #32]
   3321c:	bl	118bc <myhtml_token_attr_compare@plt>
   33220:	cmp	r0, #0
   33224:	add	r9, r9, r0
   33228:	movne	r8, r7
   3322c:	sub	r7, r7, #1
   33230:	cmn	r7, #1
   33234:	bne	33158 <myhtml_tree_active_formatting_append_with_check@@Base+0x3c>
   33238:	cmp	r9, #2
   3323c:	bls	33288 <myhtml_tree_active_formatting_append_with_check@@Base+0x16c>
   33240:	ldr	r2, [r5, #124]	; 0x7c
   33244:	ldr	r0, [r2]
   33248:	ldr	r2, [r2, #4]
   3324c:	sub	r2, r2, r8
   33250:	add	r0, r0, r8, lsl #2
   33254:	add	r1, r0, #4
   33258:	lsl	r2, r2, #2
   3325c:	bl	10f98 <memmove@plt>
   33260:	ldr	r6, [r5, #124]	; 0x7c
   33264:	mov	r5, r6
   33268:	ldr	r0, [r5, #4]!
   3326c:	sub	r0, r0, #1
   33270:	str	r0, [r5]
   33274:	ldr	r0, [r6, #4]
   33278:	ldr	r1, [r6, #8]
   3327c:	cmp	r0, r1
   33280:	bcs	332a0 <myhtml_tree_active_formatting_append_with_check@@Base+0x184>
   33284:	b	332bc <myhtml_tree_active_formatting_append_with_check@@Base+0x1a0>
   33288:	ldr	r6, [r5, #124]	; 0x7c
   3328c:	add	r5, r6, #4
   33290:	ldr	r0, [r6, #4]
   33294:	ldr	r1, [r6, #8]
   33298:	cmp	r0, r1
   3329c:	bcc	332bc <myhtml_tree_active_formatting_append_with_check@@Base+0x1a0>
   332a0:	lsl	r0, r1, #1
   332a4:	lsl	r1, r1, #3
   332a8:	str	r0, [r6, #8]
   332ac:	ldr	r0, [r6]
   332b0:	bl	10da0 <mycore_realloc@plt>
   332b4:	cmp	r0, #0
   332b8:	strne	r0, [r6]
   332bc:	ldr	r0, [r6]
   332c0:	ldr	r1, [r5]
   332c4:	str	r4, [r0, r1, lsl #2]
   332c8:	ldr	r0, [r5]
   332cc:	add	r0, r0, #1
   332d0:	str	r0, [r5]
   332d4:	sub	sp, fp, #28
   332d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000332dc <myhtml_tree_active_formatting_current_node@@Base>:
   332dc:	ldr	r0, [r0, #124]	; 0x7c
   332e0:	ldr	r1, [r0, #4]
   332e4:	cmp	r1, #0
   332e8:	ldrne	r1, [r0]
   332ec:	ldrne	r0, [r0, #4]
   332f0:	addne	r0, r1, r0, lsl #2
   332f4:	ldrne	r0, [r0, #-4]
   332f8:	bxne	lr
   332fc:	mov	r0, #0
   33300:	bx	lr

00033304 <myhtml_tree_active_formatting_find@@Base>:
   33304:	ldr	r0, [r0, #124]	; 0x7c
   33308:	ldr	r3, [r0, #4]
   3330c:	ldr	r0, [r0]
   33310:	sub	ip, r0, #4
   33314:	cmp	r3, #0
   33318:	moveq	r0, #0
   3331c:	bxeq	lr
   33320:	ldr	r0, [ip, r3, lsl #2]
   33324:	sub	r3, r3, #1
   33328:	cmp	r0, r1
   3332c:	bne	33314 <myhtml_tree_active_formatting_find@@Base+0x10>
   33330:	mov	r0, #1
   33334:	cmp	r2, #0
   33338:	strne	r3, [r2]
   3333c:	bx	lr

00033340 <myhtml_tree_active_formatting_up_to_last_marker@@Base>:
   33340:	push	{r4, sl, fp, lr}
   33344:	add	fp, sp, #8
   33348:	ldr	r1, [r0, #124]	; 0x7c
   3334c:	ldr	r2, [r1]
   33350:	ldr	r3, [r1, #4]
   33354:	cmp	r3, #0
   33358:	beq	333dc <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x9c>
   3335c:	movw	lr, #512	; 0x200
   33360:	mov	ip, #1
   33364:	movt	lr, #2560	; 0xa00
   33368:	ldr	r3, [r1, #4]
   3336c:	cmp	r3, #0
   33370:	ldrne	r3, [r1, #4]
   33374:	subne	r3, r3, #1
   33378:	strne	r3, [r1, #4]
   3337c:	ldrne	r3, [r1, #4]
   33380:	ldrne	r4, [r0]
   33384:	ldrne	r3, [r2, r3, lsl #2]
   33388:	ldrne	r4, [r4, #36]	; 0x24
   3338c:	cmpne	r4, r3
   33390:	beq	333dc <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x9c>
   33394:	ldr	r3, [r3, #4]
   33398:	cmp	r3, #82	; 0x52
   3339c:	ble	333bc <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x7c>
   333a0:	cmp	r3, #126	; 0x7e
   333a4:	bgt	333d0 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x90>
   333a8:	cmp	r3, #83	; 0x53
   333ac:	popeq	{r4, sl, fp, pc}
   333b0:	cmp	r3, #94	; 0x5e
   333b4:	bne	33368 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x28>
   333b8:	b	333dc <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x9c>
   333bc:	cmp	r3, #27
   333c0:	bhi	33368 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x28>
   333c4:	tst	lr, ip, lsl r3
   333c8:	beq	33368 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x28>
   333cc:	b	333dc <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x9c>
   333d0:	cmp	r3, #131	; 0x83
   333d4:	cmpne	r3, #127	; 0x7f
   333d8:	bne	33368 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x28>
   333dc:	pop	{r4, sl, fp, pc}

000333e0 <myhtml_tree_active_formatting_between_last_marker@@Base>:
   333e0:	push	{r4, r5, r6, sl, fp, lr}
   333e4:	add	fp, sp, #16
   333e8:	ldr	r6, [r0, #124]	; 0x7c
   333ec:	ldr	r3, [r6, #4]
   333f0:	cmp	r3, #0
   333f4:	beq	33484 <myhtml_tree_active_formatting_between_last_marker@@Base+0xa4>
   333f8:	ldr	r0, [r0]
   333fc:	ldr	ip, [r6]
   33400:	movw	r5, #512	; 0x200
   33404:	rsb	r3, r3, #1
   33408:	mov	r4, #1
   3340c:	movt	r5, #2560	; 0xa00
   33410:	ldr	lr, [r0, #36]	; 0x24
   33414:	ldr	r0, [ip, -r3, lsl #2]
   33418:	cmp	lr, r0
   3341c:	beq	33484 <myhtml_tree_active_formatting_between_last_marker@@Base+0xa4>
   33420:	ldr	r6, [r0, #4]
   33424:	cmp	r6, #82	; 0x52
   33428:	ble	33448 <myhtml_tree_active_formatting_between_last_marker@@Base+0x68>
   3342c:	cmp	r6, #126	; 0x7e
   33430:	bgt	3345c <myhtml_tree_active_formatting_between_last_marker@@Base+0x7c>
   33434:	cmp	r6, #83	; 0x53
   33438:	beq	33484 <myhtml_tree_active_formatting_between_last_marker@@Base+0xa4>
   3343c:	cmp	r6, #94	; 0x5e
   33440:	bne	33468 <myhtml_tree_active_formatting_between_last_marker@@Base+0x88>
   33444:	b	33484 <myhtml_tree_active_formatting_between_last_marker@@Base+0xa4>
   33448:	cmp	r6, #27
   3344c:	bhi	33468 <myhtml_tree_active_formatting_between_last_marker@@Base+0x88>
   33450:	tst	r5, r4, lsl r6
   33454:	beq	33468 <myhtml_tree_active_formatting_between_last_marker@@Base+0x88>
   33458:	b	33484 <myhtml_tree_active_formatting_between_last_marker@@Base+0xa4>
   3345c:	cmp	r6, #127	; 0x7f
   33460:	cmpne	r6, #131	; 0x83
   33464:	beq	33484 <myhtml_tree_active_formatting_between_last_marker@@Base+0xa4>
   33468:	cmp	r6, r1
   3346c:	ldreq	r6, [r0, #8]
   33470:	cmpeq	r6, #1
   33474:	beq	3348c <myhtml_tree_active_formatting_between_last_marker@@Base+0xac>
   33478:	add	r3, r3, #1
   3347c:	cmp	r3, #1
   33480:	bne	33414 <myhtml_tree_active_formatting_between_last_marker@@Base+0x34>
   33484:	mov	r0, #0
   33488:	pop	{r4, r5, r6, sl, fp, pc}
   3348c:	cmp	r2, #0
   33490:	rsbne	r1, r3, #0
   33494:	strne	r1, [r2]
   33498:	popne	{r4, r5, r6, sl, fp, pc}
   3349c:	pop	{r4, r5, r6, sl, fp, pc}

000334a0 <myhtml_tree_active_formatting_reconstruction@@Base>:
   334a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   334a4:	add	fp, sp, #28
   334a8:	sub	sp, sp, #4
   334ac:	vpush	{d8-d9}
   334b0:	sub	sp, sp, #8
   334b4:	ldr	r7, [r0, #124]	; 0x7c
   334b8:	mov	sl, r0
   334bc:	ldr	r9, [r7]
   334c0:	ldr	r0, [r7, #4]
   334c4:	cmp	r0, #0
   334c8:	beq	3353c <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   334cc:	ldr	r0, [r7, #4]
   334d0:	ldr	r1, [sl]
   334d4:	sub	r0, r0, #1
   334d8:	ldr	lr, [r1, #36]	; 0x24
   334dc:	ldr	r6, [r9, r0, lsl #2]
   334e0:	cmp	lr, r6
   334e4:	beq	3353c <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   334e8:	ldr	r2, [r6, #4]
   334ec:	cmp	r2, #82	; 0x52
   334f0:	ble	33510 <myhtml_tree_active_formatting_reconstruction@@Base+0x70>
   334f4:	cmp	r2, #126	; 0x7e
   334f8:	bgt	33530 <myhtml_tree_active_formatting_reconstruction@@Base+0x90>
   334fc:	cmp	r2, #83	; 0x53
   33500:	beq	3353c <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   33504:	cmp	r2, #94	; 0x5e
   33508:	beq	3353c <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   3350c:	b	3354c <myhtml_tree_active_formatting_reconstruction@@Base+0xac>
   33510:	cmp	r2, #27
   33514:	bhi	3354c <myhtml_tree_active_formatting_reconstruction@@Base+0xac>
   33518:	movw	r5, #512	; 0x200
   3351c:	mov	r3, #1
   33520:	movt	r5, #2560	; 0xa00
   33524:	tst	r5, r3, lsl r2
   33528:	bne	3353c <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   3352c:	b	3354c <myhtml_tree_active_formatting_reconstruction@@Base+0xac>
   33530:	cmp	r2, #127	; 0x7f
   33534:	cmpne	r2, #131	; 0x83
   33538:	bne	3354c <myhtml_tree_active_formatting_reconstruction@@Base+0xac>
   3353c:	sub	sp, fp, #48	; 0x30
   33540:	vpop	{d8-d9}
   33544:	add	sp, sp, #4
   33548:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3354c:	ldr	r2, [sl, #128]	; 0x80
   33550:	ldr	r3, [r2]
   33554:	ldr	r5, [r2, #4]
   33558:	cmp	r5, #0
   3355c:	beq	33580 <myhtml_tree_active_formatting_reconstruction@@Base+0xe0>
   33560:	mov	r5, #0
   33564:	ldr	r4, [r3, r5, lsl #2]
   33568:	cmp	r4, r6
   3356c:	beq	3353c <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   33570:	ldr	r4, [r2, #4]
   33574:	add	r5, r5, #1
   33578:	cmp	r5, r4
   3357c:	bcc	33564 <myhtml_tree_active_formatting_reconstruction@@Base+0xc4>
   33580:	mov	r5, #0
   33584:	cmp	r0, #0
   33588:	beq	33634 <myhtml_tree_active_formatting_reconstruction@@Base+0x194>
   3358c:	sub	r8, r0, #1
   33590:	ldr	r6, [r9, r8, lsl #2]
   33594:	cmp	lr, r6
   33598:	beq	33760 <myhtml_tree_active_formatting_reconstruction@@Base+0x2c0>
   3359c:	ldr	ip, [r6, #4]
   335a0:	cmp	ip, #82	; 0x52
   335a4:	ble	335c4 <myhtml_tree_active_formatting_reconstruction@@Base+0x124>
   335a8:	cmp	ip, #126	; 0x7e
   335ac:	bgt	335e4 <myhtml_tree_active_formatting_reconstruction@@Base+0x144>
   335b0:	cmp	ip, #83	; 0x53
   335b4:	beq	33760 <myhtml_tree_active_formatting_reconstruction@@Base+0x2c0>
   335b8:	cmp	ip, #94	; 0x5e
   335bc:	bne	335f4 <myhtml_tree_active_formatting_reconstruction@@Base+0x154>
   335c0:	b	33760 <myhtml_tree_active_formatting_reconstruction@@Base+0x2c0>
   335c4:	cmp	ip, #27
   335c8:	bhi	335f4 <myhtml_tree_active_formatting_reconstruction@@Base+0x154>
   335cc:	movw	r4, #512	; 0x200
   335d0:	mov	r1, #1
   335d4:	movt	r4, #2560	; 0xa00
   335d8:	tst	r4, r1, lsl ip
   335dc:	beq	335f4 <myhtml_tree_active_formatting_reconstruction@@Base+0x154>
   335e0:	b	33760 <myhtml_tree_active_formatting_reconstruction@@Base+0x2c0>
   335e4:	cmp	ip, #127	; 0x7f
   335e8:	beq	33760 <myhtml_tree_active_formatting_reconstruction@@Base+0x2c0>
   335ec:	cmp	ip, #131	; 0x83
   335f0:	beq	33760 <myhtml_tree_active_formatting_reconstruction@@Base+0x2c0>
   335f4:	ldr	r4, [r2, #4]
   335f8:	cmp	r4, #0
   335fc:	beq	33620 <myhtml_tree_active_formatting_reconstruction@@Base+0x180>
   33600:	mov	r4, #0
   33604:	ldr	ip, [r3, r4, lsl #2]
   33608:	cmp	ip, r6
   3360c:	beq	33630 <myhtml_tree_active_formatting_reconstruction@@Base+0x190>
   33610:	ldr	r1, [r2, #4]
   33614:	add	r4, r4, #1
   33618:	cmp	r4, r1
   3361c:	bcc	33604 <myhtml_tree_active_formatting_reconstruction@@Base+0x164>
   33620:	cmp	r8, #0
   33624:	mov	r0, r8
   33628:	bne	3358c <myhtml_tree_active_formatting_reconstruction@@Base+0xec>
   3362c:	b	33634 <myhtml_tree_active_formatting_reconstruction@@Base+0x194>
   33630:	mov	r5, r0
   33634:	ldr	r0, [r7, #4]
   33638:	cmp	r5, r0
   3363c:	bcs	3353c <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   33640:	vmov.i32	q4, #0	; 0x00000000
   33644:	ldr	r8, [r9, r5, lsl #2]
   33648:	mov	r2, #0
   3364c:	ldr	r4, [r8, #40]	; 0x28
   33650:	ldr	r0, [r4, #12]
   33654:	ldr	r1, [r4, #48]	; 0x30
   33658:	bl	11910 <mcobject_async_malloc@plt>
   3365c:	mov	r1, #36	; 0x24
   33660:	mov	r6, r0
   33664:	vst1.32	{d8-d9}, [r0], r1
   33668:	mov	r1, #1
   3366c:	str	r1, [r6, #8]
   33670:	mov	r1, #0
   33674:	str	r1, [r6, #32]
   33678:	str	r4, [r6, #40]	; 0x28
   3367c:	str	r1, [r0]
   33680:	add	r0, r6, #16
   33684:	mov	r1, #0
   33688:	vst1.32	{d8-d9}, [r0]
   3368c:	ldr	r2, [r8, #32]
   33690:	cmp	r2, #0
   33694:	beq	336ac <myhtml_tree_active_formatting_reconstruction@@Base+0x20c>
   33698:	ldr	r0, [r8, #40]	; 0x28
   3369c:	mov	r1, r2
   336a0:	ldr	r0, [r0, #8]
   336a4:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   336a8:	ldr	r1, [r8, #32]
   336ac:	ldr	r3, [r8, #40]	; 0x28
   336b0:	ldr	r0, [r3, #8]
   336b4:	ldr	r2, [r3, #40]	; 0x28
   336b8:	ldr	r3, [r3, #44]	; 0x2c
   336bc:	bl	1101c <myhtml_token_node_clone@plt>
   336c0:	str	r0, [r6, #32]
   336c4:	cmp	r0, #0
   336c8:	add	r2, sp, #4
   336cc:	ldr	r1, [r8, #4]
   336d0:	str	r1, [r6, #4]
   336d4:	ldr	r1, [r8, #8]
   336d8:	str	r1, [r6, #8]
   336dc:	ldrne	r1, [r0, #48]	; 0x30
   336e0:	orrne	r1, r1, #4
   336e4:	strne	r1, [r0, #48]	; 0x30
   336e8:	mov	r0, sl
   336ec:	mov	r1, #0
   336f0:	bl	11b14 <myhtml_tree_appropriate_place_inserting@plt>
   336f4:	ldr	r2, [sp, #4]
   336f8:	mov	r1, r6
   336fc:	bl	11304 <myhtml_tree_node_insert_by_mode@plt>
   33700:	ldr	r4, [sl, #128]	; 0x80
   33704:	ldr	r1, [r4, #8]
   33708:	ldr	r0, [r4, #4]
   3370c:	cmp	r0, r1
   33710:	bcc	33730 <myhtml_tree_active_formatting_reconstruction@@Base+0x290>
   33714:	lsl	r0, r1, #1
   33718:	lsl	r1, r1, #3
   3371c:	str	r0, [r4, #8]
   33720:	ldr	r0, [r4]
   33724:	bl	10da0 <mycore_realloc@plt>
   33728:	cmp	r0, #0
   3372c:	strne	r0, [r4]
   33730:	ldr	r0, [r4]
   33734:	ldr	r1, [r4, #4]
   33738:	str	r6, [r0, r1, lsl #2]
   3373c:	ldr	r0, [r4, #4]
   33740:	add	r0, r0, #1
   33744:	str	r0, [r4, #4]
   33748:	str	r6, [r9, r5, lsl #2]
   3374c:	add	r5, r5, #1
   33750:	ldr	r0, [r7, #4]
   33754:	cmp	r5, r0
   33758:	bcc	33644 <myhtml_tree_active_formatting_reconstruction@@Base+0x1a4>
   3375c:	b	3353c <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   33760:	mov	r5, r0
   33764:	ldr	r0, [r7, #4]
   33768:	cmp	r5, r0
   3376c:	bcc	33640 <myhtml_tree_active_formatting_reconstruction@@Base+0x1a0>
   33770:	b	3353c <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>

00033774 <myhtml_tree_adoption_agency_algorithm@@Base>:
   33774:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33778:	add	fp, sp, #28
   3377c:	sub	sp, sp, #4
   33780:	vpush	{d8-d9}
   33784:	sub	sp, sp, #48	; 0x30
   33788:	ldr	r1, [r0, #128]	; 0x80
   3378c:	mov	r4, r0
   33790:	mov	r7, #0
   33794:	ldr	r0, [r1, #4]
   33798:	cmp	r0, #0
   3379c:	beq	340f8 <myhtml_tree_adoption_agency_algorithm@@Base+0x984>
   337a0:	mov	sl, r2
   337a4:	ldr	r0, [r1]
   337a8:	ldr	r2, [r1, #4]
   337ac:	ldr	ip, [r4, #124]	; 0x7c
   337b0:	add	r2, r0, r2, lsl #2
   337b4:	ldr	lr, [ip]
   337b8:	ldr	r2, [r2, #-4]
   337bc:	ldr	r3, [r2, #8]
   337c0:	cmp	r3, #1
   337c4:	ldreq	r3, [r2, #4]
   337c8:	cmpeq	r3, sl
   337cc:	beq	337ec <myhtml_tree_adoption_agency_algorithm@@Base+0x78>
   337d0:	sub	r1, r0, #4
   337d4:	mov	r5, #1
   337d8:	vmov.i32	q4, #0	; 0x00000000
   337dc:	mov	r2, #0
   337e0:	str	r1, [sp, #36]	; 0x24
   337e4:	mov	r1, lr
   337e8:	b	33840 <myhtml_tree_adoption_agency_algorithm@@Base+0xcc>
   337ec:	ldr	r6, [ip, #4]
   337f0:	sub	r3, lr, #4
   337f4:	cmp	r6, #0
   337f8:	beq	33810 <myhtml_tree_adoption_agency_algorithm@@Base+0x9c>
   337fc:	ldr	r5, [r3, r6, lsl #2]
   33800:	sub	r6, r6, #1
   33804:	cmp	r5, r2
   33808:	bne	337f4 <myhtml_tree_adoption_agency_algorithm@@Base+0x80>
   3380c:	b	337d0 <myhtml_tree_adoption_agency_algorithm@@Base+0x5c>
   33810:	ldr	r0, [r1, #4]
   33814:	cmp	r0, #0
   33818:	ldrne	r0, [r1, #4]
   3381c:	subne	r0, r0, #1
   33820:	strne	r0, [r1, #4]
   33824:	b	340f8 <myhtml_tree_adoption_agency_algorithm@@Base+0x984>
   33828:	ldr	ip, [r4, #124]	; 0x7c
   3382c:	ldr	sl, [sp, #4]
   33830:	ldr	r0, [sp, #32]
   33834:	ldr	lr, [sp, #16]
   33838:	mov	r5, #1
   3383c:	ldr	r1, [ip]
   33840:	add	r2, r2, #1
   33844:	sub	r3, r1, #4
   33848:	str	r2, [sp, #24]
   3384c:	ldr	r2, [ip, #4]
   33850:	cmp	r2, #0
   33854:	beq	340f4 <myhtml_tree_adoption_agency_algorithm@@Base+0x980>
   33858:	ldr	r7, [r4]
   3385c:	ldr	r9, [r3, r2, lsl #2]
   33860:	ldr	r6, [r7, #36]	; 0x24
   33864:	mov	r7, #0
   33868:	cmp	r6, r9
   3386c:	beq	340f8 <myhtml_tree_adoption_agency_algorithm@@Base+0x984>
   33870:	ldr	r6, [r9, #4]
   33874:	cmp	r6, #82	; 0x52
   33878:	ble	33898 <myhtml_tree_adoption_agency_algorithm@@Base+0x124>
   3387c:	cmp	r6, #126	; 0x7e
   33880:	bgt	338c0 <myhtml_tree_adoption_agency_algorithm@@Base+0x14c>
   33884:	cmp	r6, #83	; 0x53
   33888:	beq	340f8 <myhtml_tree_adoption_agency_algorithm@@Base+0x984>
   3388c:	cmp	r6, #94	; 0x5e
   33890:	bne	338b0 <myhtml_tree_adoption_agency_algorithm@@Base+0x13c>
   33894:	b	340f8 <myhtml_tree_adoption_agency_algorithm@@Base+0x984>
   33898:	cmp	r6, #27
   3389c:	bhi	338b0 <myhtml_tree_adoption_agency_algorithm@@Base+0x13c>
   338a0:	movw	r8, #512	; 0x200
   338a4:	movt	r8, #2560	; 0xa00
   338a8:	tst	r8, r5, lsl r6
   338ac:	bne	340f8 <myhtml_tree_adoption_agency_algorithm@@Base+0x984>
   338b0:	sub	r2, r2, #1
   338b4:	cmp	r6, sl
   338b8:	bne	33850 <myhtml_tree_adoption_agency_algorithm@@Base+0xdc>
   338bc:	b	338d0 <myhtml_tree_adoption_agency_algorithm@@Base+0x15c>
   338c0:	cmp	r6, #127	; 0x7f
   338c4:	cmpne	r6, #131	; 0x83
   338c8:	beq	340f8 <myhtml_tree_adoption_agency_algorithm@@Base+0x984>
   338cc:	b	338b0 <myhtml_tree_adoption_agency_algorithm@@Base+0x13c>
   338d0:	ldr	r3, [r4, #128]	; 0x80
   338d4:	ldr	r5, [r3]
   338d8:	ldr	r6, [r3, #4]
   338dc:	cmp	r6, #0
   338e0:	beq	3410c <myhtml_tree_adoption_agency_algorithm@@Base+0x998>
   338e4:	add	r2, r2, #1
   338e8:	mov	r6, #0
   338ec:	str	r2, [sp, #40]	; 0x28
   338f0:	ldr	r2, [r5, r6, lsl #2]
   338f4:	cmp	r2, r9
   338f8:	beq	33910 <myhtml_tree_adoption_agency_algorithm@@Base+0x19c>
   338fc:	ldr	r2, [r3, #4]
   33900:	add	r6, r6, #1
   33904:	cmp	r6, r2
   33908:	bcc	338f0 <myhtml_tree_adoption_agency_algorithm@@Base+0x17c>
   3390c:	b	3410c <myhtml_tree_adoption_agency_algorithm@@Base+0x998>
   33910:	ldr	r8, [r9, #40]	; 0x28
   33914:	str	lr, [sp, #16]
   33918:	str	r0, [sp, #32]
   3391c:	mov	r7, #0
   33920:	ldr	r1, [r8, #128]	; 0x80
   33924:	ldr	r0, [r1, #4]
   33928:	cmp	r0, #0
   3392c:	beq	340f8 <myhtml_tree_adoption_agency_algorithm@@Base+0x984>
   33930:	str	r4, [sp, #28]
   33934:	ldr	r4, [r1]
   33938:	rsb	r5, r0, #1
   3393c:	ldr	r0, [r4, -r5, lsl #2]
   33940:	ldr	r1, [r0, #4]
   33944:	ldr	r0, [r8, #28]
   33948:	bl	117fc <myhtml_tag_get_by_id@plt>
   3394c:	ldr	r1, [r4, -r5, lsl #2]
   33950:	cmp	r1, r9
   33954:	beq	3397c <myhtml_tree_adoption_agency_algorithm@@Base+0x208>
   33958:	cmp	r5, #0
   3395c:	beq	340f8 <myhtml_tree_adoption_agency_algorithm@@Base+0x984>
   33960:	ldr	r1, [r1, #8]
   33964:	add	r5, r5, #1
   33968:	add	r0, r0, r1, lsl #2
   3396c:	ldr	r0, [r0, #16]
   33970:	ands	r0, r0, #8
   33974:	beq	3393c <myhtml_tree_adoption_agency_algorithm@@Base+0x1c8>
   33978:	b	340f8 <myhtml_tree_adoption_agency_algorithm@@Base+0x984>
   3397c:	ldr	r4, [sp, #28]
   33980:	ldr	r0, [r4, #128]	; 0x80
   33984:	ldr	r1, [r0, #4]
   33988:	cmp	r1, #0
   3398c:	ldrne	r1, [r0, #4]
   33990:	ldr	r0, [r0, #4]
   33994:	ldr	r5, [sp, #32]
   33998:	cmp	r6, r0
   3399c:	bcs	34160 <myhtml_tree_adoption_agency_algorithm@@Base+0x9ec>
   339a0:	mov	r7, r6
   339a4:	ldr	r0, [r5, r7, lsl #2]
   339a8:	ldr	r1, [r0, #4]
   339ac:	ldr	r0, [r4, #28]
   339b0:	bl	117fc <myhtml_tag_get_by_id@plt>
   339b4:	ldr	r3, [r5, r7, lsl #2]
   339b8:	ldr	r1, [r3, #8]
   339bc:	add	r0, r0, r1, lsl #2
   339c0:	ldrb	r0, [r0, #16]
   339c4:	tst	r0, #2
   339c8:	bne	339e4 <myhtml_tree_adoption_agency_algorithm@@Base+0x270>
   339cc:	ldr	r0, [r4, #128]	; 0x80
   339d0:	add	r7, r7, #1
   339d4:	ldr	r0, [r0, #4]
   339d8:	cmp	r7, r0
   339dc:	bcc	339a4 <myhtml_tree_adoption_agency_algorithm@@Base+0x230>
   339e0:	mov	r3, #0
   339e4:	cmp	r3, #0
   339e8:	beq	34160 <myhtml_tree_adoption_agency_algorithm@@Base+0x9ec>
   339ec:	ldr	r0, [sp, #36]	; 0x24
   339f0:	mov	r2, #0
   339f4:	str	sl, [sp, #4]
   339f8:	str	r3, [sp, #20]
   339fc:	ldr	r0, [r0, r6, lsl #2]
   33a00:	str	r0, [sp, #8]
   33a04:	b	33a20 <myhtml_tree_adoption_agency_algorithm@@Base+0x2ac>
   33a08:	ldr	r2, [r0, #244]	; 0xf4
   33a0c:	mov	r1, sl
   33a10:	mov	r8, ip
   33a14:	blx	r6
   33a18:	ldr	r3, [sp]
   33a1c:	mov	r2, r8
   33a20:	mov	sl, r3
   33a24:	str	r3, [sp, #12]
   33a28:	b	33a6c <myhtml_tree_adoption_agency_algorithm@@Base+0x2f8>
   33a2c:	ldr	r0, [r5, #4]
   33a30:	sub	r0, r0, r8
   33a34:	lsl	r2, r0, #2
   33a38:	sub	r0, r1, #4
   33a3c:	bl	10f98 <memmove@plt>
   33a40:	ldr	r4, [sp, #28]
   33a44:	mov	r2, r6
   33a48:	ldr	r0, [r4, #124]	; 0x7c
   33a4c:	ldr	r1, [r0, #4]
   33a50:	sub	r1, r1, #1
   33a54:	str	r1, [r0, #4]
   33a58:	ldr	r0, [sp, #40]	; 0x28
   33a5c:	ldr	r5, [sp, #32]
   33a60:	cmp	r8, r0
   33a64:	subcc	r0, r0, #1
   33a68:	str	r0, [sp, #40]	; 0x28
   33a6c:	ldr	r0, [r4, #128]	; 0x80
   33a70:	ldr	r3, [r0]
   33a74:	ldr	r1, [r0, #4]
   33a78:	cmp	r1, #0
   33a7c:	beq	33aa8 <myhtml_tree_adoption_agency_algorithm@@Base+0x334>
   33a80:	mov	r1, #0
   33a84:	ldr	r6, [r3, r1, lsl #2]
   33a88:	cmp	r6, sl
   33a8c:	beq	33aa4 <myhtml_tree_adoption_agency_algorithm@@Base+0x330>
   33a90:	ldr	r6, [r0, #4]
   33a94:	add	r1, r1, #1
   33a98:	cmp	r1, r6
   33a9c:	bcc	33a84 <myhtml_tree_adoption_agency_algorithm@@Base+0x310>
   33aa0:	b	33aa8 <myhtml_tree_adoption_agency_algorithm@@Base+0x334>
   33aa4:	mov	r7, r1
   33aa8:	cmp	r7, #0
   33aac:	beq	340ec <myhtml_tree_adoption_agency_algorithm@@Base+0x978>
   33ab0:	sub	r7, r7, #1
   33ab4:	ldr	sl, [r5, r7, lsl #2]
   33ab8:	cmp	sl, r9
   33abc:	beq	33cec <myhtml_tree_adoption_agency_algorithm@@Base+0x578>
   33ac0:	ldr	r5, [r4, #124]	; 0x7c
   33ac4:	add	ip, r2, #1
   33ac8:	ldr	r8, [r5, #4]
   33acc:	ldr	r4, [r5]
   33ad0:	add	r1, r4, r8, lsl #2
   33ad4:	sub	r4, r4, #4
   33ad8:	add	r1, r1, #4
   33adc:	cmp	r8, #0
   33ae0:	beq	33b08 <myhtml_tree_adoption_agency_algorithm@@Base+0x394>
   33ae4:	ldr	r6, [r4, r8, lsl #2]
   33ae8:	sub	r1, r1, #4
   33aec:	sub	r8, r8, #1
   33af0:	cmp	r6, sl
   33af4:	bne	33adc <myhtml_tree_adoption_agency_algorithm@@Base+0x368>
   33af8:	mov	r6, ip
   33afc:	cmp	r2, #3
   33b00:	bcs	33a2c <myhtml_tree_adoption_agency_algorithm@@Base+0x2b8>
   33b04:	b	33b74 <myhtml_tree_adoption_agency_algorithm@@Base+0x400>
   33b08:	ldr	r2, [r0, #4]
   33b0c:	ldr	r4, [sp, #28]
   33b10:	ldr	r5, [sp, #32]
   33b14:	add	r1, r3, r2, lsl #2
   33b18:	add	r3, r1, #4
   33b1c:	cmp	r2, #0
   33b20:	beq	33b6c <myhtml_tree_adoption_agency_algorithm@@Base+0x3f8>
   33b24:	sub	r1, r3, #4
   33b28:	ldr	r3, [r3, #-8]
   33b2c:	sub	r2, r2, #1
   33b30:	cmp	r3, sl
   33b34:	mov	r3, r1
   33b38:	bne	33b1c <myhtml_tree_adoption_agency_algorithm@@Base+0x3a8>
   33b3c:	ldr	r0, [r0, #4]
   33b40:	mov	r6, ip
   33b44:	sub	r0, r0, r2
   33b48:	lsl	r2, r0, #2
   33b4c:	sub	r0, r1, #4
   33b50:	bl	10f98 <memmove@plt>
   33b54:	ldr	r0, [r4, #128]	; 0x80
   33b58:	mov	r2, r6
   33b5c:	ldr	r1, [r0, #4]
   33b60:	sub	r1, r1, #1
   33b64:	str	r1, [r0, #4]
   33b68:	b	33a6c <myhtml_tree_adoption_agency_algorithm@@Base+0x2f8>
   33b6c:	mov	r2, ip
   33b70:	b	33a6c <myhtml_tree_adoption_agency_algorithm@@Base+0x2f8>
   33b74:	ldr	r4, [sl, #40]	; 0x28
   33b78:	mov	r2, #0
   33b7c:	mov	r5, #0
   33b80:	ldr	r0, [r4, #12]
   33b84:	ldr	r1, [r4, #48]	; 0x30
   33b88:	bl	11910 <mcobject_async_malloc@plt>
   33b8c:	mov	r2, r0
   33b90:	mov	r1, #36	; 0x24
   33b94:	str	r0, [sp]
   33b98:	vst1.32	{d8-d9}, [r2], r1
   33b9c:	mov	r1, #1
   33ba0:	str	r1, [r0, #8]
   33ba4:	str	r5, [r0, #32]
   33ba8:	str	r4, [r0, #40]	; 0x28
   33bac:	add	r0, r0, #16
   33bb0:	str	r5, [r2]
   33bb4:	vst1.32	{d8-d9}, [r0]
   33bb8:	ldr	r1, [sl, #32]
   33bbc:	cmp	r1, #0
   33bc0:	beq	33bd4 <myhtml_tree_adoption_agency_algorithm@@Base+0x460>
   33bc4:	ldr	r0, [sl, #40]	; 0x28
   33bc8:	ldr	r0, [r0, #8]
   33bcc:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   33bd0:	ldr	r5, [sl, #32]
   33bd4:	ldr	r1, [sl, #40]	; 0x28
   33bd8:	ldr	r0, [r1, #8]
   33bdc:	ldr	r2, [r1, #40]	; 0x28
   33be0:	ldr	r3, [r1, #44]	; 0x2c
   33be4:	mov	r1, r5
   33be8:	bl	1101c <myhtml_token_node_clone@plt>
   33bec:	ldr	r3, [sp]
   33bf0:	cmp	r0, #0
   33bf4:	mov	ip, r6
   33bf8:	str	r0, [r3, #32]
   33bfc:	ldr	r1, [sl, #4]
   33c00:	str	r1, [r3, #4]
   33c04:	ldr	r1, [sl, #8]
   33c08:	str	r1, [r3, #8]
   33c0c:	ldrne	r1, [r0, #48]	; 0x30
   33c10:	orrne	r1, r1, #4
   33c14:	strne	r1, [r0, #48]	; 0x30
   33c18:	mov	r0, #1
   33c1c:	str	r0, [r3, #8]
   33c20:	ldr	r0, [sp, #16]
   33c24:	ldr	sl, [sp, #12]
   33c28:	ldr	r4, [sp, #28]
   33c2c:	str	r3, [r0, r8, lsl #2]
   33c30:	ldr	r0, [sp, #32]
   33c34:	str	r3, [r0, r7, lsl #2]
   33c38:	ldr	r0, [sp, #20]
   33c3c:	cmp	sl, r0
   33c40:	ldr	r0, [sp, #40]	; 0x28
   33c44:	addeq	r0, r8, #1
   33c48:	str	r0, [sp, #40]	; 0x28
   33c4c:	ldr	r0, [sl, #24]
   33c50:	cmp	r0, #0
   33c54:	beq	33cb4 <myhtml_tree_adoption_agency_algorithm@@Base+0x540>
   33c58:	ldr	r1, [sl, #16]
   33c5c:	ldr	r2, [sl, #12]
   33c60:	cmp	r1, #0
   33c64:	streq	r2, [r0, #28]
   33c68:	strne	r2, [r1, #12]
   33c6c:	ldrne	r2, [sl, #12]
   33c70:	add	r5, r2, #16
   33c74:	cmp	r2, #0
   33c78:	addeq	r5, r0, #20
   33c7c:	str	r1, [r5]
   33c80:	ldr	r0, [sl, #40]	; 0x28
   33c84:	ldr	r5, [r0, #240]	; 0xf0
   33c88:	cmp	r5, #0
   33c8c:	beq	33ca4 <myhtml_tree_adoption_agency_algorithm@@Base+0x530>
   33c90:	ldr	r2, [r0, #248]	; 0xf8
   33c94:	mov	r1, sl
   33c98:	blx	r5
   33c9c:	ldr	r3, [sp]
   33ca0:	mov	ip, r6
   33ca4:	mov	r0, #0
   33ca8:	str	r0, [sl, #12]
   33cac:	str	r0, [sl, #16]
   33cb0:	str	r0, [sl, #24]
   33cb4:	ldr	r0, [r3, #28]
   33cb8:	ldr	r5, [sp, #32]
   33cbc:	mov	r2, ip
   33cc0:	cmp	r0, #0
   33cc4:	streq	sl, [r3, #20]
   33cc8:	strne	sl, [r0, #16]
   33ccc:	strne	r0, [sl, #12]
   33cd0:	str	r3, [sl, #24]
   33cd4:	str	sl, [r3, #28]
   33cd8:	ldr	r0, [sl, #40]	; 0x28
   33cdc:	ldr	r6, [r0, #236]	; 0xec
   33ce0:	cmp	r6, #0
   33ce4:	beq	33a20 <myhtml_tree_adoption_agency_algorithm@@Base+0x2ac>
   33ce8:	b	33a08 <myhtml_tree_adoption_agency_algorithm@@Base+0x294>
   33cec:	ldr	r6, [sp, #12]
   33cf0:	mov	r7, #1
   33cf4:	ldr	r0, [r6, #24]
   33cf8:	cmp	r0, #0
   33cfc:	beq	33d54 <myhtml_tree_adoption_agency_algorithm@@Base+0x5e0>
   33d00:	ldr	r1, [r6, #16]
   33d04:	ldr	r2, [r6, #12]
   33d08:	cmp	r1, #0
   33d0c:	streq	r2, [r0, #28]
   33d10:	strne	r2, [r1, #12]
   33d14:	ldrne	r2, [r6, #12]
   33d18:	add	r3, r2, #16
   33d1c:	cmp	r2, #0
   33d20:	addeq	r3, r0, #20
   33d24:	str	r1, [r3]
   33d28:	ldr	r0, [r6, #40]	; 0x28
   33d2c:	ldr	r3, [r0, #240]	; 0xf0
   33d30:	cmp	r3, #0
   33d34:	beq	33d44 <myhtml_tree_adoption_agency_algorithm@@Base+0x5d0>
   33d38:	ldr	r2, [r0, #248]	; 0xf8
   33d3c:	mov	r1, r6
   33d40:	blx	r3
   33d44:	mov	r0, #0
   33d48:	str	r0, [r6, #12]
   33d4c:	str	r0, [r6, #16]
   33d50:	str	r0, [r6, #24]
   33d54:	ldr	r1, [sp, #8]
   33d58:	mov	r0, r4
   33d5c:	add	r2, sp, #44	; 0x2c
   33d60:	bl	11b14 <myhtml_tree_appropriate_place_inserting@plt>
   33d64:	ldr	r2, [sp, #44]	; 0x2c
   33d68:	mov	r1, r6
   33d6c:	bl	11304 <myhtml_tree_node_insert_by_mode@plt>
   33d70:	ldr	r4, [r9, #40]	; 0x28
   33d74:	mov	r2, #0
   33d78:	mov	r6, #0
   33d7c:	ldr	r0, [r4, #12]
   33d80:	ldr	r1, [r4, #48]	; 0x30
   33d84:	bl	11910 <mcobject_async_malloc@plt>
   33d88:	mov	r1, #36	; 0x24
   33d8c:	mov	sl, r0
   33d90:	vst1.32	{d8-d9}, [r0], r1
   33d94:	str	r7, [sl, #8]
   33d98:	str	r6, [sl, #32]
   33d9c:	str	r4, [sl, #40]	; 0x28
   33da0:	str	r6, [r0]
   33da4:	add	r0, sl, #16
   33da8:	vst1.32	{d8-d9}, [r0]
   33dac:	ldr	r1, [r9, #32]
   33db0:	cmp	r1, #0
   33db4:	beq	33dc8 <myhtml_tree_adoption_agency_algorithm@@Base+0x654>
   33db8:	ldr	r0, [r9, #40]	; 0x28
   33dbc:	ldr	r0, [r0, #8]
   33dc0:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   33dc4:	ldr	r6, [r9, #32]
   33dc8:	ldr	r1, [r9, #40]	; 0x28
   33dcc:	ldr	r0, [r1, #8]
   33dd0:	ldr	r2, [r1, #40]	; 0x28
   33dd4:	ldr	r3, [r1, #44]	; 0x2c
   33dd8:	mov	r1, r6
   33ddc:	bl	1101c <myhtml_token_node_clone@plt>
   33de0:	str	r0, [sl, #32]
   33de4:	cmp	r0, #0
   33de8:	ldr	r1, [r9, #4]
   33dec:	str	r1, [sl, #4]
   33df0:	ldr	r1, [r9, #8]
   33df4:	str	r1, [sl, #8]
   33df8:	ldrne	r1, [r0, #48]	; 0x30
   33dfc:	orrne	r1, r1, #4
   33e00:	strne	r1, [r0, #48]	; 0x30
   33e04:	str	r7, [sl, #8]
   33e08:	ldr	r1, [sp, #20]
   33e0c:	ldr	r4, [sp, #28]
   33e10:	ldr	r6, [r1, #20]
   33e14:	cmp	r6, #0
   33e18:	beq	33eec <myhtml_tree_adoption_agency_algorithm@@Base+0x778>
   33e1c:	ldr	r7, [r6, #16]
   33e20:	cmp	r7, #0
   33e24:	beq	33e34 <myhtml_tree_adoption_agency_algorithm@@Base+0x6c0>
   33e28:	add	r1, r7, #12
   33e2c:	add	r0, r6, #12
   33e30:	b	33e48 <myhtml_tree_adoption_agency_algorithm@@Base+0x6d4>
   33e34:	ldr	r1, [r6, #24]
   33e38:	add	r0, r6, #12
   33e3c:	cmp	r1, #0
   33e40:	beq	33e50 <myhtml_tree_adoption_agency_algorithm@@Base+0x6dc>
   33e44:	add	r1, r1, #28
   33e48:	ldr	r2, [r0]
   33e4c:	str	r2, [r1]
   33e50:	ldr	r0, [r0]
   33e54:	cmp	r0, #0
   33e58:	beq	33e64 <myhtml_tree_adoption_agency_algorithm@@Base+0x6f0>
   33e5c:	add	r0, r0, #16
   33e60:	b	33e74 <myhtml_tree_adoption_agency_algorithm@@Base+0x700>
   33e64:	ldr	r0, [r6, #24]
   33e68:	cmp	r0, #0
   33e6c:	beq	33e78 <myhtml_tree_adoption_agency_algorithm@@Base+0x704>
   33e70:	add	r0, r0, #20
   33e74:	str	r7, [r0]
   33e78:	ldr	r0, [r6, #40]	; 0x28
   33e7c:	ldr	r3, [r0, #240]	; 0xf0
   33e80:	cmp	r3, #0
   33e84:	beq	33e94 <myhtml_tree_adoption_agency_algorithm@@Base+0x720>
   33e88:	ldr	r2, [r0, #248]	; 0xf8
   33e8c:	mov	r1, r6
   33e90:	blx	r3
   33e94:	mov	r0, #0
   33e98:	str	r0, [r6, #12]
   33e9c:	str	r0, [r6, #16]
   33ea0:	str	r0, [r6, #24]
   33ea4:	ldr	r0, [sl, #28]
   33ea8:	cmp	r0, #0
   33eac:	streq	r6, [sl, #20]
   33eb0:	strne	r6, [r0, #16]
   33eb4:	strne	r0, [r6, #12]
   33eb8:	str	sl, [r6, #24]
   33ebc:	str	r6, [sl, #28]
   33ec0:	ldr	r0, [r6, #40]	; 0x28
   33ec4:	ldr	r3, [r0, #236]	; 0xec
   33ec8:	cmp	r3, #0
   33ecc:	beq	33edc <myhtml_tree_adoption_agency_algorithm@@Base+0x768>
   33ed0:	ldr	r2, [r0, #244]	; 0xf4
   33ed4:	mov	r1, r6
   33ed8:	blx	r3
   33edc:	ldr	r1, [sp, #20]
   33ee0:	cmp	r7, #0
   33ee4:	mov	r6, r7
   33ee8:	bne	33e1c <myhtml_tree_adoption_agency_algorithm@@Base+0x6a8>
   33eec:	ldr	r0, [r1, #28]
   33ef0:	cmp	r0, #0
   33ef4:	streq	sl, [r1, #20]
   33ef8:	strne	sl, [r0, #16]
   33efc:	strne	r0, [sl, #12]
   33f00:	str	r1, [sl, #24]
   33f04:	str	sl, [r1, #28]
   33f08:	ldr	r0, [sl, #40]	; 0x28
   33f0c:	ldr	r3, [r0, #236]	; 0xec
   33f10:	cmp	r3, #0
   33f14:	beq	33f24 <myhtml_tree_adoption_agency_algorithm@@Base+0x7b0>
   33f18:	ldr	r2, [r0, #244]	; 0xf4
   33f1c:	mov	r1, sl
   33f20:	blx	r3
   33f24:	ldr	r0, [r4, #124]	; 0x7c
   33f28:	ldr	r7, [r0, #4]
   33f2c:	ldr	r1, [r0]
   33f30:	add	r1, r1, r7, lsl #2
   33f34:	add	r2, r1, #4
   33f38:	cmp	r7, #0
   33f3c:	beq	340ec <myhtml_tree_adoption_agency_algorithm@@Base+0x978>
   33f40:	sub	r1, r2, #4
   33f44:	ldr	r2, [r2, #-8]
   33f48:	sub	r7, r7, #1
   33f4c:	cmp	r2, r9
   33f50:	mov	r2, r1
   33f54:	bne	33f38 <myhtml_tree_adoption_agency_algorithm@@Base+0x7c4>
   33f58:	ldr	r0, [r0, #4]
   33f5c:	sub	r0, r0, r7
   33f60:	lsl	r2, r0, #2
   33f64:	sub	r0, r1, #4
   33f68:	bl	10f98 <memmove@plt>
   33f6c:	ldr	r6, [r4, #124]	; 0x7c
   33f70:	ldr	r0, [r6, #4]
   33f74:	sub	r0, r0, #1
   33f78:	str	r0, [r6, #4]
   33f7c:	ldr	r5, [sp, #40]	; 0x28
   33f80:	ldr	r1, [r6, #8]
   33f84:	ldr	r0, [r6, #4]
   33f88:	cmp	r7, r5
   33f8c:	subcc	r5, r5, #1
   33f90:	cmp	r0, r1
   33f94:	bcc	33fb4 <myhtml_tree_adoption_agency_algorithm@@Base+0x840>
   33f98:	lsl	r0, r1, #1
   33f9c:	lsl	r1, r1, #3
   33fa0:	str	r0, [r6, #8]
   33fa4:	ldr	r0, [r6]
   33fa8:	bl	10da0 <mycore_realloc@plt>
   33fac:	cmp	r0, #0
   33fb0:	strne	r0, [r6]
   33fb4:	ldr	r0, [r6]
   33fb8:	ldr	r2, [r6, #4]
   33fbc:	add	r1, r0, r5, lsl #2
   33fc0:	sub	r2, r2, r5
   33fc4:	add	r0, r1, #4
   33fc8:	lsl	r2, r2, #2
   33fcc:	bl	10f98 <memmove@plt>
   33fd0:	ldr	r0, [r6]
   33fd4:	str	sl, [r0, r5, lsl #2]
   33fd8:	ldr	r0, [r6, #4]
   33fdc:	add	r0, r0, #1
   33fe0:	str	r0, [r6, #4]
   33fe4:	ldr	r5, [r4, #128]	; 0x80
   33fe8:	mov	r6, r5
   33fec:	ldr	r2, [r6, #4]!
   33ff0:	ldr	r0, [r5]
   33ff4:	add	r1, r0, r2, lsl #2
   33ff8:	add	r3, r1, #4
   33ffc:	cmp	r2, #0
   34000:	beq	34048 <myhtml_tree_adoption_agency_algorithm@@Base+0x8d4>
   34004:	sub	r1, r3, #4
   34008:	ldr	r3, [r3, #-8]
   3400c:	sub	r2, r2, #1
   34010:	cmp	r3, r9
   34014:	mov	r3, r1
   34018:	bne	33ffc <myhtml_tree_adoption_agency_algorithm@@Base+0x888>
   3401c:	ldr	r0, [r6]
   34020:	sub	r0, r0, r2
   34024:	lsl	r2, r0, #2
   34028:	sub	r0, r1, #4
   3402c:	bl	10f98 <memmove@plt>
   34030:	ldr	r5, [r4, #128]	; 0x80
   34034:	mov	r6, r5
   34038:	ldr	r0, [r6, #4]!
   3403c:	sub	r0, r0, #1
   34040:	str	r0, [r6]
   34044:	ldr	r0, [r5]
   34048:	ldr	r1, [r5, #4]
   3404c:	ldr	r3, [sp, #20]
   34050:	cmp	r1, #0
   34054:	beq	340e0 <myhtml_tree_adoption_agency_algorithm@@Base+0x96c>
   34058:	mov	r7, #0
   3405c:	ldr	r1, [r0, r7, lsl #2]
   34060:	ldr	r2, [r6]
   34064:	cmp	r1, r3
   34068:	beq	3407c <myhtml_tree_adoption_agency_algorithm@@Base+0x908>
   3406c:	add	r7, r7, #1
   34070:	cmp	r7, r2
   34074:	bcc	3405c <myhtml_tree_adoption_agency_algorithm@@Base+0x8e8>
   34078:	b	340e0 <myhtml_tree_adoption_agency_algorithm@@Base+0x96c>
   3407c:	ldr	r1, [r5, #8]
   34080:	cmp	r2, r1
   34084:	bcc	340a8 <myhtml_tree_adoption_agency_algorithm@@Base+0x934>
   34088:	lsl	r0, r1, #1
   3408c:	lsl	r1, r1, #3
   34090:	str	r0, [r5, #8]
   34094:	ldr	r0, [r5]
   34098:	bl	10da0 <mycore_realloc@plt>
   3409c:	cmp	r0, #0
   340a0:	strne	r0, [r5]
   340a4:	ldreq	r0, [r5]
   340a8:	ldr	r2, [r6]
   340ac:	add	r1, r0, r7, lsl #2
   340b0:	add	r0, r1, #8
   340b4:	add	r1, r1, #4
   340b8:	sub	r2, r2, #1
   340bc:	sub	r2, r2, r7
   340c0:	lsl	r2, r2, #2
   340c4:	bl	10f98 <memmove@plt>
   340c8:	ldr	r0, [r5]
   340cc:	add	r0, r0, r7, lsl #2
   340d0:	str	sl, [r0, #4]
   340d4:	ldr	r0, [r6]
   340d8:	add	r0, r0, #1
   340dc:	str	r0, [r6]
   340e0:	ldr	r2, [sp, #24]
   340e4:	cmp	r2, #7
   340e8:	bls	33828 <myhtml_tree_adoption_agency_algorithm@@Base+0xb4>
   340ec:	mov	r7, #0
   340f0:	b	340f8 <myhtml_tree_adoption_agency_algorithm@@Base+0x984>
   340f4:	mov	r7, #1
   340f8:	mov	r0, r7
   340fc:	sub	sp, fp, #48	; 0x30
   34100:	vpop	{d8-d9}
   34104:	add	sp, sp, #4
   34108:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3410c:	ldr	r2, [ip, #4]
   34110:	add	r1, r1, r2, lsl #2
   34114:	add	r3, r1, #4
   34118:	cmp	r2, #0
   3411c:	beq	340f8 <myhtml_tree_adoption_agency_algorithm@@Base+0x984>
   34120:	sub	r1, r3, #4
   34124:	ldr	r3, [r3, #-8]
   34128:	sub	r2, r2, #1
   3412c:	cmp	r3, r9
   34130:	mov	r3, r1
   34134:	bne	34118 <myhtml_tree_adoption_agency_algorithm@@Base+0x9a4>
   34138:	ldr	r0, [ip, #4]
   3413c:	sub	r0, r0, r2
   34140:	lsl	r2, r0, #2
   34144:	sub	r0, r1, #4
   34148:	bl	10f98 <memmove@plt>
   3414c:	ldr	r0, [r4, #124]	; 0x7c
   34150:	ldr	r1, [r0, #4]
   34154:	sub	r1, r1, #1
   34158:	str	r1, [r0, #4]
   3415c:	b	340f8 <myhtml_tree_adoption_agency_algorithm@@Base+0x984>
   34160:	ldr	r0, [r4, #128]	; 0x80
   34164:	ldr	r1, [r0, #4]
   34168:	cmp	r1, #0
   3416c:	beq	34184 <myhtml_tree_adoption_agency_algorithm@@Base+0xa10>
   34170:	ldr	r1, [r0]
   34174:	ldr	r2, [r0, #4]
   34178:	add	r1, r1, r2, lsl #2
   3417c:	ldr	r1, [r1, #-4]
   34180:	b	34188 <myhtml_tree_adoption_agency_algorithm@@Base+0xa14>
   34184:	mov	r1, #0
   34188:	ldr	r2, [r0, #4]
   3418c:	cmp	r2, #0
   34190:	ldrne	r2, [r0, #4]
   34194:	subne	r2, r2, #1
   34198:	strne	r2, [r0, #4]
   3419c:	cmp	r1, r9
   341a0:	bne	34164 <myhtml_tree_adoption_agency_algorithm@@Base+0x9f0>
   341a4:	ldr	r0, [r4, #124]	; 0x7c
   341a8:	mov	r7, #0
   341ac:	ldr	r2, [r0, #4]
   341b0:	ldr	r1, [r0]
   341b4:	add	r1, r1, r2, lsl #2
   341b8:	add	r3, r1, #4
   341bc:	cmp	r2, #0
   341c0:	beq	340f8 <myhtml_tree_adoption_agency_algorithm@@Base+0x984>
   341c4:	sub	r1, r3, #4
   341c8:	ldr	r3, [r3, #-8]
   341cc:	sub	r2, r2, #1
   341d0:	cmp	r3, r9
   341d4:	mov	r3, r1
   341d8:	bne	341bc <myhtml_tree_adoption_agency_algorithm@@Base+0xa48>
   341dc:	ldr	r0, [r0, #4]
   341e0:	b	3413c <myhtml_tree_adoption_agency_algorithm@@Base+0x9c8>

000341e4 <myhtml_tree_appropriate_place_inserting_in_tree@@Base>:
   341e4:	push	{r4, sl, fp, lr}
   341e8:	add	fp, sp, #8
   341ec:	mov	r2, #1
   341f0:	str	r2, [r1]
   341f4:	ldr	r2, [r0, #40]	; 0x28
   341f8:	ldrb	r2, [r2, #188]	; 0xbc
   341fc:	cmp	r2, #0
   34200:	beq	34274 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x90>
   34204:	ldr	r2, [r0, #8]
   34208:	cmp	r2, #1
   3420c:	bne	3427c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x98>
   34210:	ldr	r2, [r0, #4]
   34214:	sub	r2, r2, #125	; 0x7d
   34218:	cmp	r2, #10
   3421c:	bhi	34274 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x90>
   34220:	mov	ip, #1
   34224:	movw	r3, #1187	; 0x4a3
   34228:	tst	r3, ip, lsl r2
   3422c:	beq	34274 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x90>
   34230:	mov	lr, r0
   34234:	ldr	lr, [lr, #24]
   34238:	cmp	lr, #0
   3423c:	ldrne	r2, [lr, #4]
   34240:	cmpne	r2, #128	; 0x80
   34244:	bne	34234 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x50>
   34248:	mov	r3, r0
   3424c:	ldr	r3, [r3, #24]
   34250:	cmp	r3, #0
   34254:	beq	34288 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xa4>
   34258:	ldr	r2, [r3, #4]
   3425c:	cmp	r2, #125	; 0x7d
   34260:	bne	3424c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x68>
   34264:	mov	ip, #0
   34268:	cmp	lr, #0
   3426c:	bne	34294 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xb0>
   34270:	b	342bc <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xd8>
   34274:	mov	r2, #0
   34278:	str	r2, [r1]
   3427c:	mov	lr, r0
   34280:	mov	r0, lr
   34284:	pop	{r4, sl, fp, pc}
   34288:	mov	ip, #1
   3428c:	cmp	lr, #0
   34290:	beq	342bc <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xd8>
   34294:	mov	r2, lr
   34298:	ldr	r2, [r2, #24]
   3429c:	cmp	r2, #0
   342a0:	ldrne	r4, [r2, #4]
   342a4:	cmpne	r4, #125	; 0x7d
   342a8:	bne	34298 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xb4>
   342ac:	cmp	r3, #0
   342b0:	beq	342ec <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x108>
   342b4:	cmp	r3, r2
   342b8:	bne	342ec <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x108>
   342bc:	cmp	ip, #0
   342c0:	bne	3427c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x98>
   342c4:	ldr	r2, [r3, #24]
   342c8:	mov	lr, r0
   342cc:	cmp	r2, #0
   342d0:	beq	34280 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x9c>
   342d4:	ldr	r0, [r3, #12]
   342d8:	mov	lr, r3
   342dc:	cmp	r0, #0
   342e0:	beq	34280 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x9c>
   342e4:	mov	r2, #2
   342e8:	b	34278 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x94>
   342ec:	mov	r0, #0
   342f0:	str	r0, [r1]
   342f4:	mov	r0, lr
   342f8:	pop	{r4, sl, fp, pc}

000342fc <myhtml_tree_template_insertion_append@@Base>:
   342fc:	push	{r4, r5, fp, lr}
   34300:	add	fp, sp, #8
   34304:	ldr	r5, [r0, #140]	; 0x8c
   34308:	mov	r4, r1
   3430c:	ldmib	r5, {r0, r1}
   34310:	cmp	r0, r1
   34314:	bcc	34334 <myhtml_tree_template_insertion_append@@Base+0x38>
   34318:	lsl	r0, r1, #1
   3431c:	lsl	r1, r1, #3
   34320:	str	r0, [r5, #8]
   34324:	ldr	r0, [r5]
   34328:	bl	10da0 <mycore_realloc@plt>
   3432c:	cmp	r0, #0
   34330:	strne	r0, [r5]
   34334:	ldm	r5, {r0, r1}
   34338:	str	r4, [r0, r1, lsl #2]
   3433c:	ldr	r0, [r5, #4]
   34340:	add	r0, r0, #1
   34344:	str	r0, [r5, #4]
   34348:	pop	{r4, r5, fp, pc}

0003434c <myhtml_tree_template_insertion_pop@@Base>:
   3434c:	ldr	r0, [r0, #140]	; 0x8c
   34350:	ldr	r1, [r0, #4]
   34354:	cmp	r1, #0
   34358:	subne	r1, r1, #1
   3435c:	strne	r1, [r0, #4]
   34360:	bx	lr

00034364 <myhtml_tree_template_insertion_length@@Base>:
   34364:	ldr	r0, [r0, #140]	; 0x8c
   34368:	ldr	r0, [r0, #4]
   3436c:	bx	lr

00034370 <myhtml_tree_token_list_append@@Base>:
   34370:	push	{r4, r5, fp, lr}
   34374:	add	fp, sp, #8
   34378:	mov	r4, r0
   3437c:	mov	r5, r1
   34380:	ldr	r0, [r0, #4]
   34384:	ldr	r1, [r4, #8]
   34388:	cmp	r0, r1
   3438c:	bcc	343ac <myhtml_tree_token_list_append@@Base+0x3c>
   34390:	lsl	r0, r1, #1
   34394:	lsl	r1, r1, #3
   34398:	str	r0, [r4, #8]
   3439c:	ldr	r0, [r4]
   343a0:	bl	10da0 <mycore_realloc@plt>
   343a4:	cmp	r0, #0
   343a8:	strne	r0, [r4]
   343ac:	ldm	r4, {r0, r1}
   343b0:	str	r5, [r0, r1, lsl #2]
   343b4:	add	r0, r1, #1
   343b8:	str	r0, [r4, #4]
   343bc:	pop	{r4, r5, fp, pc}

000343c0 <myhtml_tree_token_list_append_after_index@@Base>:
   343c0:	push	{r4, r5, r6, r7, fp, lr}
   343c4:	add	fp, sp, #16
   343c8:	mov	r4, r0
   343cc:	mov	r7, r1
   343d0:	ldr	r0, [r0, #4]
   343d4:	mov	r6, r2
   343d8:	ldr	r1, [r4, #8]
   343dc:	cmp	r0, r1
   343e0:	bcc	34400 <myhtml_tree_token_list_append_after_index@@Base+0x40>
   343e4:	lsl	r0, r1, #1
   343e8:	lsl	r1, r1, #3
   343ec:	str	r0, [r4, #8]
   343f0:	ldr	r0, [r4]
   343f4:	bl	10da0 <mycore_realloc@plt>
   343f8:	cmp	r0, #0
   343fc:	strne	r0, [r4]
   34400:	ldr	r0, [r4, #4]
   34404:	ldr	r1, [r4]
   34408:	cmp	r0, r6
   3440c:	bcs	34430 <myhtml_tree_token_list_append_after_index@@Base+0x70>
   34410:	ldr	r2, [r1, r6, lsl #2]
   34414:	mov	r3, r6
   34418:	add	r5, r1, r3, lsl #2
   3441c:	add	r3, r3, #1
   34420:	cmp	r3, r0
   34424:	str	r2, [r5, #4]
   34428:	bhi	34418 <myhtml_tree_token_list_append_after_index@@Base+0x58>
   3442c:	ldr	r1, [r4]
   34430:	add	r1, r1, r6, lsl #2
   34434:	add	r0, r0, #1
   34438:	str	r7, [r1, #4]
   3443c:	str	r0, [r4, #4]
   34440:	pop	{r4, r5, r6, r7, fp, pc}

00034444 <myhtml_tree_token_list_current_node@@Base>:
   34444:	ldr	r1, [r0, #4]
   34448:	cmp	r1, #0
   3444c:	moveq	r0, #0
   34450:	ldrne	r0, [r0]
   34454:	addne	r0, r0, r1, lsl #2
   34458:	ldrne	r0, [r0, #-4]
   3445c:	bx	lr

00034460 <myhtml_tree_tags_close_p@@Base>:
   34460:	push	{r4, sl, fp, lr}
   34464:	add	fp, sp, #8
   34468:	mov	r1, #99	; 0x63
   3446c:	mov	r2, #1
   34470:	mov	r4, r0
   34474:	bl	115a4 <myhtml_tree_generate_implied_end_tags@plt>
   34478:	ldr	r0, [r4, #128]	; 0x80
   3447c:	ldr	r1, [r0, #4]
   34480:	cmp	r1, #0
   34484:	beq	3449c <myhtml_tree_tags_close_p@@Base+0x3c>
   34488:	ldr	r1, [r0]
   3448c:	ldr	r0, [r0, #4]
   34490:	add	r0, r1, r0, lsl #2
   34494:	ldr	r0, [r0, #-4]
   34498:	b	344a0 <myhtml_tree_tags_close_p@@Base+0x40>
   3449c:	mov	r0, #0
   344a0:	mov	r1, #99	; 0x63
   344a4:	bl	11868 <myhtml_is_html_node@plt>
   344a8:	ldr	r0, [r4, #128]	; 0x80
   344ac:	ldr	r1, [r0]
   344b0:	ldr	r2, [r0, #4]
   344b4:	cmp	r2, #0
   344b8:	popeq	{r4, sl, fp, pc}
   344bc:	ldr	r2, [r0, #4]
   344c0:	sub	r2, r2, #1
   344c4:	str	r2, [r0, #4]
   344c8:	ldr	r2, [r0, #4]
   344cc:	ldr	r2, [r1, r2, lsl #2]
   344d0:	ldr	r2, [r2, #4]
   344d4:	cmp	r2, #99	; 0x63
   344d8:	bne	344b0 <myhtml_tree_tags_close_p@@Base+0x50>
   344dc:	ldr	r2, [r0, #4]
   344e0:	ldr	r2, [r1, r2, lsl #2]
   344e4:	ldr	r2, [r2, #8]
   344e8:	cmp	r2, #1
   344ec:	bne	344b0 <myhtml_tree_tags_close_p@@Base+0x50>
   344f0:	pop	{r4, sl, fp, pc}

000344f4 <myhtml_tree_generic_raw_text_element_parsing_algorithm@@Base>:
   344f4:	push	{r4, sl, fp, lr}
   344f8:	add	fp, sp, #8
   344fc:	mov	r2, #1
   34500:	mov	r4, r0
   34504:	bl	119d0 <myhtml_tree_node_insert_by_token@plt>
   34508:	ldr	r1, [r4, #168]	; 0xa8
   3450c:	mov	r2, #7
   34510:	str	r2, [r4, #168]	; 0xa8
   34514:	str	r1, [r4, #172]	; 0xac
   34518:	pop	{r4, sl, fp, pc}

0003451c <myhtml_tree_clear_stack_back_table_context@@Base>:
   3451c:	ldr	r0, [r0, #128]	; 0x80
   34520:	ldr	r1, [r0, #4]
   34524:	cmp	r1, #0
   34528:	bne	34534 <myhtml_tree_clear_stack_back_table_context@@Base+0x18>
   3452c:	mov	r1, #0
   34530:	b	34554 <myhtml_tree_clear_stack_back_table_context@@Base+0x38>
   34534:	ldr	r1, [r0]
   34538:	ldr	r2, [r0, #4]
   3453c:	add	r1, r1, r2, lsl #2
   34540:	ldr	r1, [r1, #-4]
   34544:	b	34554 <myhtml_tree_clear_stack_back_table_context@@Base+0x38>
   34548:	cmp	r2, #125	; 0x7d
   3454c:	beq	34564 <myhtml_tree_clear_stack_back_table_context@@Base+0x48>
   34550:	b	34570 <myhtml_tree_clear_stack_back_table_context@@Base+0x54>
   34554:	ldr	r2, [r1, #4]
   34558:	cmp	r2, #65	; 0x41
   3455c:	cmpne	r2, #128	; 0x80
   34560:	bne	34548 <myhtml_tree_clear_stack_back_table_context@@Base+0x2c>
   34564:	ldr	r1, [r1, #8]
   34568:	cmp	r1, #1
   3456c:	bxeq	lr
   34570:	ldr	r1, [r0, #4]
   34574:	cmp	r1, #0
   34578:	ldrne	r1, [r0, #4]
   3457c:	subne	r1, r1, #1
   34580:	strne	r1, [r0, #4]
   34584:	mov	r1, #0
   34588:	ldr	r2, [r0, #4]
   3458c:	cmp	r2, #0
   34590:	bne	34534 <myhtml_tree_clear_stack_back_table_context@@Base+0x18>
   34594:	b	34554 <myhtml_tree_clear_stack_back_table_context@@Base+0x38>

00034598 <myhtml_tree_clear_stack_back_table_body_context@@Base>:
   34598:	ldr	r0, [r0, #128]	; 0x80
   3459c:	ldr	r1, [r0, #4]
   345a0:	cmp	r1, #0
   345a4:	beq	345bc <myhtml_tree_clear_stack_back_table_body_context@@Base+0x24>
   345a8:	ldr	r1, [r0]
   345ac:	ldr	r2, [r0, #4]
   345b0:	add	r1, r1, r2, lsl #2
   345b4:	ldr	r3, [r1, #-4]
   345b8:	b	345c0 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x28>
   345bc:	mov	r3, #0
   345c0:	push	{fp, lr}
   345c4:	mov	fp, sp
   345c8:	mov	ip, #1
   345cc:	mov	lr, #85	; 0x55
   345d0:	b	345e4 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x4c>
   345d4:	ldr	r1, [r0]
   345d8:	ldr	r2, [r0, #4]
   345dc:	add	r1, r1, r2, lsl #2
   345e0:	ldr	r3, [r1, #-4]
   345e4:	ldr	r1, [r3, #4]
   345e8:	sub	r2, r1, #126	; 0x7e
   345ec:	cmp	r2, #6
   345f0:	bhi	345fc <myhtml_tree_clear_stack_back_table_body_context@@Base+0x64>
   345f4:	tst	lr, ip, lsl r2
   345f8:	bne	34604 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x6c>
   345fc:	cmp	r1, #65	; 0x41
   34600:	bne	34610 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x78>
   34604:	ldr	r1, [r3, #8]
   34608:	cmp	r1, #1
   3460c:	popeq	{fp, pc}
   34610:	ldr	r1, [r0, #4]
   34614:	mov	r3, #0
   34618:	cmp	r1, #0
   3461c:	ldrne	r1, [r0, #4]
   34620:	subne	r1, r1, #1
   34624:	strne	r1, [r0, #4]
   34628:	ldr	r1, [r0, #4]
   3462c:	cmp	r1, #0
   34630:	beq	345e4 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x4c>
   34634:	b	345d4 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x3c>

00034638 <myhtml_tree_clear_stack_back_table_row_context@@Base>:
   34638:	ldr	r0, [r0, #128]	; 0x80
   3463c:	ldr	r1, [r0, #4]
   34640:	cmp	r1, #0
   34644:	bne	34650 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x18>
   34648:	mov	r1, #0
   3464c:	b	34670 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x38>
   34650:	ldr	r1, [r0]
   34654:	ldr	r2, [r0, #4]
   34658:	add	r1, r1, r2, lsl #2
   3465c:	ldr	r1, [r1, #-4]
   34660:	b	34670 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x38>
   34664:	cmp	r2, #128	; 0x80
   34668:	beq	34680 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x48>
   3466c:	b	3468c <myhtml_tree_clear_stack_back_table_row_context@@Base+0x54>
   34670:	ldr	r2, [r1, #4]
   34674:	cmp	r2, #65	; 0x41
   34678:	cmpne	r2, #135	; 0x87
   3467c:	bne	34664 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x2c>
   34680:	ldr	r1, [r1, #8]
   34684:	cmp	r1, #1
   34688:	bxeq	lr
   3468c:	ldr	r1, [r0, #4]
   34690:	cmp	r1, #0
   34694:	ldrne	r1, [r0, #4]
   34698:	subne	r1, r1, #1
   3469c:	strne	r1, [r0, #4]
   346a0:	mov	r1, #0
   346a4:	ldr	r2, [r0, #4]
   346a8:	cmp	r2, #0
   346ac:	bne	34650 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x18>
   346b0:	b	34670 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x38>

000346b4 <myhtml_tree_close_cell@@Base>:
   346b4:	push	{r4, r5, fp, lr}
   346b8:	add	fp, sp, #8
   346bc:	mov	r5, r1
   346c0:	mov	r1, #0
   346c4:	mov	r2, #0
   346c8:	mov	r4, r0
   346cc:	bl	115a4 <myhtml_tree_generate_implied_end_tags@plt>
   346d0:	ldr	r0, [r4, #128]	; 0x80
   346d4:	ldr	r1, [r0, #4]
   346d8:	cmp	r1, #0
   346dc:	ldrne	r1, [r0, #4]
   346e0:	ldmib	r5, {r1, r3}
   346e4:	ldr	r2, [r0]
   346e8:	ldr	r5, [r0, #4]
   346ec:	cmp	r5, #0
   346f0:	beq	3476c <myhtml_tree_close_cell@@Base+0xb8>
   346f4:	cmp	r3, #0
   346f8:	beq	34740 <myhtml_tree_close_cell@@Base+0x8c>
   346fc:	ldr	r5, [r0, #4]
   34700:	sub	r5, r5, #1
   34704:	str	r5, [r0, #4]
   34708:	ldr	r5, [r0, #4]
   3470c:	ldr	r5, [r2, r5, lsl #2]
   34710:	ldr	r5, [r5, #4]
   34714:	cmp	r5, r1
   34718:	bne	34730 <myhtml_tree_close_cell@@Base+0x7c>
   3471c:	ldr	r5, [r0, #4]
   34720:	ldr	r5, [r2, r5, lsl #2]
   34724:	ldr	r5, [r5, #8]
   34728:	cmp	r5, r3
   3472c:	beq	3476c <myhtml_tree_close_cell@@Base+0xb8>
   34730:	ldr	r5, [r0, #4]
   34734:	cmp	r5, #0
   34738:	bne	346fc <myhtml_tree_close_cell@@Base+0x48>
   3473c:	b	3476c <myhtml_tree_close_cell@@Base+0xb8>
   34740:	ldr	r3, [r0, #4]
   34744:	sub	r3, r3, #1
   34748:	str	r3, [r0, #4]
   3474c:	ldr	r3, [r0, #4]
   34750:	ldr	r3, [r2, r3, lsl #2]
   34754:	ldr	r3, [r3, #4]
   34758:	cmp	r3, r1
   3475c:	beq	3476c <myhtml_tree_close_cell@@Base+0xb8>
   34760:	ldr	r3, [r0, #4]
   34764:	cmp	r3, #0
   34768:	bne	34740 <myhtml_tree_close_cell@@Base+0x8c>
   3476c:	ldr	r0, [r4, #124]	; 0x7c
   34770:	ldr	r1, [r0]
   34774:	ldr	r2, [r0, #4]
   34778:	cmp	r2, #0
   3477c:	beq	34800 <myhtml_tree_close_cell@@Base+0x14c>
   34780:	movw	r3, #512	; 0x200
   34784:	mov	ip, #1
   34788:	movt	r3, #2560	; 0xa00
   3478c:	ldr	r5, [r0, #4]
   34790:	cmp	r5, #0
   34794:	ldrne	r5, [r0, #4]
   34798:	subne	r5, r5, #1
   3479c:	strne	r5, [r0, #4]
   347a0:	ldrne	r5, [r0, #4]
   347a4:	ldrne	r2, [r4]
   347a8:	ldrne	r5, [r1, r5, lsl #2]
   347ac:	ldrne	r2, [r2, #36]	; 0x24
   347b0:	cmpne	r2, r5
   347b4:	beq	34800 <myhtml_tree_close_cell@@Base+0x14c>
   347b8:	ldr	r5, [r5, #4]
   347bc:	cmp	r5, #82	; 0x52
   347c0:	ble	347e0 <myhtml_tree_close_cell@@Base+0x12c>
   347c4:	cmp	r5, #126	; 0x7e
   347c8:	bgt	347f4 <myhtml_tree_close_cell@@Base+0x140>
   347cc:	cmp	r5, #83	; 0x53
   347d0:	beq	34800 <myhtml_tree_close_cell@@Base+0x14c>
   347d4:	cmp	r5, #94	; 0x5e
   347d8:	bne	3478c <myhtml_tree_close_cell@@Base+0xd8>
   347dc:	b	34800 <myhtml_tree_close_cell@@Base+0x14c>
   347e0:	cmp	r5, #27
   347e4:	bhi	3478c <myhtml_tree_close_cell@@Base+0xd8>
   347e8:	tst	r3, ip, lsl r5
   347ec:	beq	3478c <myhtml_tree_close_cell@@Base+0xd8>
   347f0:	b	34800 <myhtml_tree_close_cell@@Base+0x14c>
   347f4:	cmp	r5, #131	; 0x83
   347f8:	cmpne	r5, #127	; 0x7f
   347fc:	bne	3478c <myhtml_tree_close_cell@@Base+0xd8>
   34800:	mov	r0, #13
   34804:	str	r0, [r4, #168]	; 0xa8
   34808:	pop	{r4, r5, fp, pc}

0003480c <myhtml_tree_is_mathml_integration_point@@Base>:
   3480c:	ldr	r0, [r1, #8]
   34810:	cmp	r0, #2
   34814:	bne	34848 <myhtml_tree_is_mathml_integration_point@@Base+0x3c>
   34818:	ldr	r1, [r1, #4]
   3481c:	mov	r0, #1
   34820:	sub	r2, r1, #227	; 0xe3
   34824:	cmp	r2, #11
   34828:	bhi	34840 <myhtml_tree_is_mathml_integration_point@@Base+0x34>
   3482c:	mov	ip, #1
   34830:	movw	r3, #2097	; 0x831
   34834:	tst	r3, ip, lsl r2
   34838:	beq	34840 <myhtml_tree_is_mathml_integration_point@@Base+0x34>
   3483c:	bx	lr
   34840:	cmp	r1, #88	; 0x58
   34844:	bxeq	lr
   34848:	mov	r0, #0
   3484c:	bx	lr

00034850 <myhtml_tree_is_html_integration_point@@Base>:
   34850:	push	{r4, r5, r6, sl, fp, lr}
   34854:	add	fp, sp, #16
   34858:	sub	sp, sp, #8
   3485c:	mov	r5, r0
   34860:	ldr	r0, [r1, #8]
   34864:	mov	r4, r1
   34868:	cmp	r0, #2
   3486c:	beq	348a0 <myhtml_tree_is_html_integration_point@@Base+0x50>
   34870:	cmp	r0, #3
   34874:	bne	34938 <myhtml_tree_is_html_integration_point@@Base+0xe8>
   34878:	ldr	r0, [r4, #4]
   3487c:	mov	r6, #1
   34880:	cmp	r0, #134	; 0x86
   34884:	cmpne	r0, #156	; 0x9c
   34888:	beq	3493c <myhtml_tree_is_html_integration_point@@Base+0xec>
   3488c:	cmp	r0, #189	; 0xbd
   34890:	movne	r6, #0
   34894:	mov	r0, r6
   34898:	sub	sp, fp, #16
   3489c:	pop	{r4, r5, r6, sl, fp, pc}
   348a0:	ldr	r0, [r4, #4]
   348a4:	cmp	r0, #8
   348a8:	bne	34938 <myhtml_tree_is_html_integration_point@@Base+0xe8>
   348ac:	ldr	r1, [r4, #32]
   348b0:	cmp	r1, #0
   348b4:	beq	34938 <myhtml_tree_is_html_integration_point@@Base+0xe8>
   348b8:	ldr	r0, [r1, #48]	; 0x30
   348bc:	tst	r0, #1
   348c0:	bne	34938 <myhtml_tree_is_html_integration_point@@Base+0xe8>
   348c4:	ldr	r0, [r5, #8]
   348c8:	bl	1155c <myhtml_token_node_wait_for_done@plt>
   348cc:	ldr	r1, [r4, #32]
   348d0:	ldr	r0, [r5, #8]
   348d4:	ldr	r3, [pc, #108]	; 34948 <myhtml_tree_is_html_integration_point@@Base+0xf8>
   348d8:	mov	r2, #9
   348dc:	str	r2, [sp, #4]
   348e0:	add	r3, pc, r3
   348e4:	str	r3, [sp]
   348e8:	mov	r3, #8
   348ec:	ldr	r2, [pc, #88]	; 3494c <myhtml_tree_is_html_integration_point@@Base+0xfc>
   348f0:	add	r2, pc, r2
   348f4:	bl	10ea8 <myhtml_token_attr_match_case@plt>
   348f8:	mov	r6, #1
   348fc:	cmp	r0, #0
   34900:	bne	3493c <myhtml_tree_is_html_integration_point@@Base+0xec>
   34904:	ldr	r1, [r4, #32]
   34908:	ldr	r0, [r5, #8]
   3490c:	ldr	r3, [pc, #60]	; 34950 <myhtml_tree_is_html_integration_point@@Base+0x100>
   34910:	mov	r2, #21
   34914:	str	r2, [sp, #4]
   34918:	add	r3, pc, r3
   3491c:	str	r3, [sp]
   34920:	mov	r3, #8
   34924:	ldr	r2, [pc, #40]	; 34954 <myhtml_tree_is_html_integration_point@@Base+0x104>
   34928:	add	r2, pc, r2
   3492c:	bl	10ea8 <myhtml_token_attr_match_case@plt>
   34930:	cmp	r0, #0
   34934:	bne	3493c <myhtml_tree_is_html_integration_point@@Base+0xec>
   34938:	mov	r6, #0
   3493c:	mov	r0, r6
   34940:	sub	sp, fp, #16
   34944:	pop	{r4, r5, r6, sl, fp, pc}
   34948:	andeq	lr, ip, r3, lsl #30
   3494c:	andeq	lr, ip, sl, ror #29
   34950:	ldrdeq	lr, [ip], -r5
   34954:			; <UNDEFINED> instruction: 0x000ceeb2

00034958 <myhtml_tree_temp_tag_name_init@@Base>:
   34958:	push	{r4, sl, fp, lr}
   3495c:	add	fp, sp, #8
   34960:	mov	r4, r0
   34964:	mov	r0, #0
   34968:	mov	r1, #1024	; 0x400
   3496c:	stmib	r4, {r0, r1}
   34970:	mov	r0, #1024	; 0x400
   34974:	bl	119ac <mycore_malloc@plt>
   34978:	str	r0, [r4]
   3497c:	clz	r0, r0
   34980:	lsr	r0, r0, #5
   34984:	lsl	r0, r0, #1
   34988:	pop	{r4, sl, fp, pc}

0003498c <myhtml_tree_temp_tag_name_clean@@Base>:
   3498c:	mov	r1, #0
   34990:	str	r1, [r0, #4]
   34994:	bx	lr

00034998 <myhtml_tree_temp_tag_name_append_one@@Base>:
   34998:	push	{r4, r5, r6, sl, fp, lr}
   3499c:	add	fp, sp, #16
   349a0:	mov	r5, r1
   349a4:	ldmib	r0, {r1, r2}
   349a8:	mov	r4, r0
   349ac:	cmp	r1, r2
   349b0:	bcs	349bc <myhtml_tree_temp_tag_name_append_one@@Base+0x24>
   349b4:	ldr	r0, [r4]
   349b8:	b	349e4 <myhtml_tree_temp_tag_name_append_one@@Base+0x4c>
   349bc:	ldr	r0, [r4]
   349c0:	lsl	r6, r2, #1
   349c4:	mov	r1, r6
   349c8:	bl	10da0 <mycore_realloc@plt>
   349cc:	cmp	r0, #0
   349d0:	moveq	r0, #2
   349d4:	popeq	{r4, r5, r6, sl, fp, pc}
   349d8:	str	r0, [r4]
   349dc:	str	r6, [r4, #8]
   349e0:	ldr	r1, [r4, #4]
   349e4:	strb	r5, [r0, r1]
   349e8:	ldr	r0, [r4, #4]
   349ec:	add	r0, r0, #1
   349f0:	str	r0, [r4, #4]
   349f4:	mov	r0, #0
   349f8:	pop	{r4, r5, r6, sl, fp, pc}

000349fc <myhtml_tree_temp_tag_name_append@@Base>:
   349fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   34a00:	add	fp, sp, #24
   34a04:	cmp	r2, #0
   34a08:	mov	r4, #0
   34a0c:	movne	r6, r0
   34a10:	ldrne	r0, [r0]
   34a14:	cmpne	r0, #0
   34a18:	bne	34a24 <myhtml_tree_temp_tag_name_append@@Base+0x28>
   34a1c:	mov	r0, r4
   34a20:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   34a24:	mov	r5, r2
   34a28:	mov	r7, r1
   34a2c:	ldmib	r6, {r1, r2}
   34a30:	add	r3, r1, r5
   34a34:	cmp	r3, r2
   34a38:	bcc	34a64 <myhtml_tree_temp_tag_name_append@@Base+0x68>
   34a3c:	add	r8, r5, r2, lsl #1
   34a40:	mov	r1, r8
   34a44:	bl	10da0 <mycore_realloc@plt>
   34a48:	cmp	r0, #0
   34a4c:	moveq	r4, #2
   34a50:	moveq	r0, r4
   34a54:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   34a58:	str	r0, [r6]
   34a5c:	str	r8, [r6, #8]
   34a60:	ldr	r1, [r6, #4]
   34a64:	add	r0, r0, r1
   34a68:	mov	r1, r7
   34a6c:	mov	r2, r5
   34a70:	bl	11034 <memcpy@plt>
   34a74:	ldr	r0, [r6, #4]
   34a78:	add	r0, r0, r5
   34a7c:	str	r0, [r6, #4]
   34a80:	mov	r0, r4
   34a84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00034a88 <myhtml_tree_wait_for_last_done_token@@Base>:
   34a88:	push	{r4, r5, fp, lr}
   34a8c:	add	fp, sp, #8
   34a90:	mov	r5, r0
   34a94:	ldr	r0, [r0, #152]	; 0x98
   34a98:	cmp	r0, r1
   34a9c:	popeq	{r4, r5, fp, pc}
   34aa0:	mov	r4, r1
   34aa4:	ldr	r0, [r5]
   34aa8:	ldr	r0, [r0]
   34aac:	ldr	r0, [r0, #24]
   34ab0:	bl	11148 <mythread_nanosleep_sleep@plt>
   34ab4:	ldr	r0, [r5, #152]	; 0x98
   34ab8:	cmp	r0, r4
   34abc:	bne	34aa4 <myhtml_tree_wait_for_last_done_token@@Base+0x1c>
   34ac0:	pop	{r4, r5, fp, pc}

00034ac4 <myhtml_tree_special_list_init@@Base>:
   34ac4:	push	{r4, sl, fp, lr}
   34ac8:	add	fp, sp, #8
   34acc:	mov	r4, r0
   34ad0:	mov	r0, #0
   34ad4:	mov	r1, #1024	; 0x400
   34ad8:	stmib	r4, {r0, r1}
   34adc:	mov	r0, #8192	; 0x2000
   34ae0:	bl	119ac <mycore_malloc@plt>
   34ae4:	str	r0, [r4]
   34ae8:	clz	r0, r0
   34aec:	lsr	r0, r0, #5
   34af0:	lsl	r0, r0, #1
   34af4:	pop	{r4, sl, fp, pc}

00034af8 <myhtml_tree_special_list_clean@@Base>:
   34af8:	mov	r1, #0
   34afc:	str	r1, [r0, #4]
   34b00:	bx	lr

00034b04 <myhtml_tree_special_list_destroy@@Base>:
   34b04:	push	{r4, r5, r6, sl, fp, lr}
   34b08:	add	fp, sp, #16
   34b0c:	mov	r4, #0
   34b10:	cmp	r0, #0
   34b14:	beq	34b4c <myhtml_tree_special_list_destroy@@Base+0x48>
   34b18:	mov	r5, r0
   34b1c:	ldr	r0, [r0]
   34b20:	mov	r6, r1
   34b24:	cmp	r0, #0
   34b28:	beq	34b38 <myhtml_tree_special_list_destroy@@Base+0x34>
   34b2c:	bl	11a9c <mycore_free@plt>
   34b30:	mov	r0, #0
   34b34:	str	r0, [r5]
   34b38:	cmp	r6, #0
   34b3c:	moveq	r0, r5
   34b40:	popeq	{r4, r5, r6, sl, fp, pc}
   34b44:	mov	r0, r5
   34b48:	bl	11a9c <mycore_free@plt>
   34b4c:	mov	r0, r4
   34b50:	pop	{r4, r5, r6, sl, fp, pc}

00034b54 <myhtml_tree_special_list_append@@Base>:
   34b54:	push	{r4, r5, r6, r7, fp, lr}
   34b58:	add	fp, sp, #16
   34b5c:	mov	r6, r1
   34b60:	ldmib	r0, {r1, r7}
   34b64:	mov	r5, r2
   34b68:	mov	r4, r0
   34b6c:	cmp	r1, r7
   34b70:	bcs	34b7c <myhtml_tree_special_list_append@@Base+0x28>
   34b74:	ldr	r0, [r4]
   34b78:	b	34ba4 <myhtml_tree_special_list_append@@Base+0x50>
   34b7c:	ldr	r0, [r4]
   34b80:	lsl	r1, r7, #4
   34b84:	bl	10da0 <mycore_realloc@plt>
   34b88:	cmp	r0, #0
   34b8c:	moveq	r0, #2
   34b90:	popeq	{r4, r5, r6, r7, fp, pc}
   34b94:	lsl	r1, r7, #1
   34b98:	str	r0, [r4]
   34b9c:	str	r1, [r4, #8]
   34ba0:	ldr	r1, [r4, #4]
   34ba4:	str	r6, [r0, r1, lsl #3]!
   34ba8:	str	r5, [r0, #4]
   34bac:	add	r0, r1, #1
   34bb0:	str	r0, [r4, #4]
   34bb4:	mov	r0, #0
   34bb8:	pop	{r4, r5, r6, r7, fp, pc}

00034bbc <myhtml_tree_special_list_length@@Base>:
   34bbc:	ldr	r0, [r0, #4]
   34bc0:	bx	lr

00034bc4 <myhtml_tree_special_list_pop@@Base>:
   34bc4:	mov	r1, r0
   34bc8:	ldr	r0, [r0, #4]
   34bcc:	cmp	r0, #0
   34bd0:	moveq	r0, #0
   34bd4:	subne	r0, r0, #1
   34bd8:	strne	r0, [r1, #4]
   34bdc:	bx	lr

00034be0 <myhtml_tree_special_list_get_last@@Base>:
   34be0:	ldr	r1, [r0, #4]
   34be4:	cmp	r1, #0
   34be8:	moveq	r0, #0
   34bec:	ldrne	r0, [r0]
   34bf0:	addne	r0, r0, r1, lsl #3
   34bf4:	bx	lr

00034bf8 <myhtml_tree_incoming_buffer_first@@Base>:
   34bf8:	ldr	r0, [r0, #80]	; 0x50
   34bfc:	bx	lr

00034c00 <myhtml_tree_incomming_buffer_make_data@@Base>:
   34c00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34c04:	add	fp, sp, #28
   34c08:	sub	sp, sp, #4
   34c0c:	mov	r9, r0
   34c10:	ldr	r0, [r0, #80]	; 0x50
   34c14:	mov	r5, r2
   34c18:	mov	r7, r1
   34c1c:	bl	11190 <mycore_incoming_buffer_find_by_position@plt>
   34c20:	mov	r6, r0
   34c24:	ldr	r0, [r0, #8]
   34c28:	ldr	r1, [r6, #12]
   34c2c:	sub	r4, r7, r1
   34c30:	add	r1, r4, r5
   34c34:	cmp	r1, r0
   34c38:	ldrls	r0, [r6]
   34c3c:	addls	r0, r0, r4
   34c40:	subls	sp, fp, #28
   34c44:	popls	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34c48:	ldr	r0, [r9, #208]	; 0xd0
   34c4c:	cmp	r0, #0
   34c50:	beq	34c68 <myhtml_tree_incomming_buffer_make_data@@Base+0x68>
   34c54:	mov	r0, #0
   34c58:	str	r0, [r9, #212]	; 0xd4
   34c5c:	cmp	r6, #0
   34c60:	bne	34ca4 <myhtml_tree_incomming_buffer_make_data@@Base+0xa4>
   34c64:	b	34d80 <myhtml_tree_incomming_buffer_make_data@@Base+0x180>
   34c68:	mov	r0, #0
   34c6c:	mov	r1, #1024	; 0x400
   34c70:	str	r0, [r9, #212]	; 0xd4
   34c74:	mov	r0, #1024	; 0x400
   34c78:	str	r1, [r9, #216]	; 0xd8
   34c7c:	bl	119ac <mycore_malloc@plt>
   34c80:	str	r0, [r9, #208]	; 0xd0
   34c84:	cmp	r6, #0
   34c88:	bne	34ca4 <myhtml_tree_incomming_buffer_make_data@@Base+0xa4>
   34c8c:	b	34d80 <myhtml_tree_incomming_buffer_make_data@@Base+0x180>
   34c90:	ldr	r6, [r6, #20]
   34c94:	sub	r5, r5, r7
   34c98:	mov	r4, #0
   34c9c:	cmp	r6, #0
   34ca0:	beq	34d80 <myhtml_tree_incomming_buffer_make_data@@Base+0x180>
   34ca4:	ldr	r0, [r6, #8]
   34ca8:	add	r1, r4, r5
   34cac:	cmp	r1, r0
   34cb0:	bls	34d1c <myhtml_tree_incomming_buffer_make_data@@Base+0x11c>
   34cb4:	subs	r7, r0, r4
   34cb8:	ldrne	r0, [r9, #208]	; 0xd0
   34cbc:	cmpne	r0, #0
   34cc0:	beq	34c90 <myhtml_tree_incomming_buffer_make_data@@Base+0x90>
   34cc4:	ldr	r2, [r9, #212]	; 0xd4
   34cc8:	ldr	r1, [r9, #216]	; 0xd8
   34ccc:	ldr	sl, [r6]
   34cd0:	add	r3, r2, r7
   34cd4:	cmp	r3, r1
   34cd8:	bcc	34cfc <myhtml_tree_incomming_buffer_make_data@@Base+0xfc>
   34cdc:	add	r8, r7, r1, lsl #1
   34ce0:	mov	r1, r8
   34ce4:	bl	10da0 <mycore_realloc@plt>
   34ce8:	cmp	r0, #0
   34cec:	beq	34c90 <myhtml_tree_incomming_buffer_make_data@@Base+0x90>
   34cf0:	str	r0, [r9, #208]	; 0xd0
   34cf4:	str	r8, [r9, #216]	; 0xd8
   34cf8:	ldr	r2, [r9, #212]	; 0xd4
   34cfc:	add	r0, r0, r2
   34d00:	add	r1, sl, r4
   34d04:	mov	r2, r7
   34d08:	bl	11034 <memcpy@plt>
   34d0c:	ldr	r0, [r9, #212]	; 0xd4
   34d10:	add	r0, r0, r7
   34d14:	str	r0, [r9, #212]	; 0xd4
   34d18:	b	34c90 <myhtml_tree_incomming_buffer_make_data@@Base+0x90>
   34d1c:	cmp	r5, #0
   34d20:	ldrne	r0, [r9, #208]	; 0xd0
   34d24:	cmpne	r0, #0
   34d28:	beq	34d80 <myhtml_tree_incomming_buffer_make_data@@Base+0x180>
   34d2c:	ldr	r2, [r9, #212]	; 0xd4
   34d30:	ldr	r1, [r9, #216]	; 0xd8
   34d34:	ldr	r7, [r6]
   34d38:	add	r3, r2, r5
   34d3c:	cmp	r3, r1
   34d40:	bcc	34d64 <myhtml_tree_incomming_buffer_make_data@@Base+0x164>
   34d44:	add	r6, r5, r1, lsl #1
   34d48:	mov	r1, r6
   34d4c:	bl	10da0 <mycore_realloc@plt>
   34d50:	cmp	r0, #0
   34d54:	beq	34d80 <myhtml_tree_incomming_buffer_make_data@@Base+0x180>
   34d58:	str	r0, [r9, #208]	; 0xd0
   34d5c:	str	r6, [r9, #216]	; 0xd8
   34d60:	ldr	r2, [r9, #212]	; 0xd4
   34d64:	add	r0, r0, r2
   34d68:	add	r1, r7, r4
   34d6c:	mov	r2, r5
   34d70:	bl	11034 <memcpy@plt>
   34d74:	ldr	r0, [r9, #212]	; 0xd4
   34d78:	add	r0, r0, r5
   34d7c:	str	r0, [r9, #212]	; 0xd4
   34d80:	ldr	r0, [r9, #208]	; 0xd0
   34d84:	sub	sp, fp, #28
   34d88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00034d8c <mycore_fopen@@Base>:
   34d8c:	b	10f08 <fopen@plt>

00034d90 <mycore_fclose@@Base>:
   34d90:	b	117d8 <fclose@plt>

00034d94 <mycore_fread@@Base>:
   34d94:	b	1134c <fread@plt>

00034d98 <mycore_fwrite@@Base>:
   34d98:	b	112ec <fwrite@plt>

00034d9c <mycore_fflush@@Base>:
   34d9c:	b	10f44 <fflush@plt>

00034da0 <mycore_fseek@@Base>:
   34da0:	b	11b80 <fseek@plt>

00034da4 <mycore_ftell@@Base>:
   34da4:	b	11124 <ftell@plt>

00034da8 <mycore_ferror@@Base>:
   34da8:	b	11028 <ferror@plt>

00034dac <mycore_setbuf@@Base>:
   34dac:	b	10e90 <setbuf@plt>

00034db0 <mycore_malloc@@Base>:
   34db0:	b	11460 <malloc@plt>

00034db4 <mycore_realloc@@Base>:
   34db4:	b	1122c <realloc@plt>

00034db8 <mycore_calloc@@Base>:
   34db8:	b	10dac <calloc@plt>

00034dbc <mycore_free@@Base>:
   34dbc:	push	{fp, lr}
   34dc0:	mov	fp, sp
   34dc4:	bl	10fc8 <free@plt>
   34dc8:	mov	r0, #0
   34dcc:	pop	{fp, pc}

00034dd0 <mythread_thread_create@@Base>:
   34dd0:	push	{r4, r5, r6, r7, fp, lr}
   34dd4:	add	fp, sp, #16
   34dd8:	mov	r6, r1
   34ddc:	mov	r7, r0
   34de0:	mov	r0, #1
   34de4:	mov	r1, #4
   34de8:	mov	r5, r2
   34dec:	bl	11004 <mycore_calloc@plt>
   34df0:	cmp	r0, #0
   34df4:	moveq	r4, #0
   34df8:	moveq	r0, r4
   34dfc:	popeq	{r4, r5, r6, r7, fp, pc}
   34e00:	ldr	r1, [r7, #20]
   34e04:	mov	r2, r6
   34e08:	mov	r3, r5
   34e0c:	mov	r4, r0
   34e10:	bl	11358 <pthread_create@plt>
   34e14:	cmp	r0, #0
   34e18:	movne	r4, #0
   34e1c:	mov	r0, r4
   34e20:	pop	{r4, r5, r6, r7, fp, pc}

00034e24 <mythread_thread_join@@Base>:
   34e24:	push	{fp, lr}
   34e28:	mov	fp, sp
   34e2c:	ldr	r0, [r1]
   34e30:	mov	r1, #0
   34e34:	bl	118e0 <pthread_join@plt>
   34e38:	cmp	r0, #0
   34e3c:	movwne	r0, #1
   34e40:	pop	{fp, pc}

00034e44 <mythread_thread_cancel@@Base>:
   34e44:	push	{fp, lr}
   34e48:	mov	fp, sp
   34e4c:	ldr	r0, [r1]
   34e50:	bl	11718 <pthread_cancel@plt>
   34e54:	cmp	r0, #0
   34e58:	movwne	r0, #1
   34e5c:	pop	{fp, pc}

00034e60 <mythread_thread_destroy@@Base>:
   34e60:	push	{fp, lr}
   34e64:	mov	fp, sp
   34e68:	mov	r0, r1
   34e6c:	bl	11a9c <mycore_free@plt>
   34e70:	mov	r0, #0
   34e74:	pop	{fp, pc}

00034e78 <mythread_thread_attr_init@@Base>:
   34e78:	push	{r4, r5, r6, sl, fp, lr}
   34e7c:	add	fp, sp, #16
   34e80:	mov	r6, r0
   34e84:	mov	r0, #1
   34e88:	mov	r1, #36	; 0x24
   34e8c:	bl	11004 <mycore_calloc@plt>
   34e90:	mov	r4, #0
   34e94:	cmp	r0, #0
   34e98:	beq	34ed8 <mythread_thread_attr_init@@Base+0x60>
   34e9c:	mov	r5, r0
   34ea0:	bl	11628 <pthread_attr_init@plt>
   34ea4:	cmp	r0, #0
   34ea8:	str	r0, [r6, #28]
   34eac:	bne	34ed0 <mythread_thread_attr_init@@Base+0x58>
   34eb0:	mov	r0, r5
   34eb4:	mov	r1, #0
   34eb8:	mov	r4, #0
   34ebc:	bl	11ba4 <pthread_attr_setdetachstate@plt>
   34ec0:	cmp	r0, #0
   34ec4:	str	r0, [r6, #28]
   34ec8:	moveq	r0, r5
   34ecc:	popeq	{r4, r5, r6, sl, fp, pc}
   34ed0:	mov	r0, r5
   34ed4:	bl	11a9c <mycore_free@plt>
   34ed8:	mov	r0, r4
   34edc:	pop	{r4, r5, r6, sl, fp, pc}

00034ee0 <mythread_thread_attr_clean@@Base>:
   34ee0:	bx	lr

00034ee4 <mythread_thread_attr_destroy@@Base>:
   34ee4:	cmp	r1, #0
   34ee8:	bxeq	lr
   34eec:	push	{r4, r5, fp, lr}
   34ef0:	add	fp, sp, #8
   34ef4:	mov	r5, r0
   34ef8:	mov	r0, r1
   34efc:	mov	r4, r1
   34f00:	bl	10f20 <pthread_attr_destroy@plt>
   34f04:	str	r0, [r5, #28]
   34f08:	mov	r0, r4
   34f0c:	pop	{r4, r5, fp, lr}
   34f10:	b	11a9c <mycore_free@plt>

00034f14 <mythread_mutex_create@@Base>:
   34f14:	push	{r4, r5, fp, lr}
   34f18:	add	fp, sp, #8
   34f1c:	bl	116e8 <mcsync_mutex_create@plt>
   34f20:	mov	r4, #0
   34f24:	cmp	r0, #0
   34f28:	beq	34f48 <mythread_mutex_create@@Base+0x34>
   34f2c:	mov	r5, r0
   34f30:	bl	118c8 <mcsync_mutex_init@plt>
   34f34:	cmp	r0, #0
   34f38:	moveq	r0, r5
   34f3c:	popeq	{r4, r5, fp, pc}
   34f40:	mov	r0, r5
   34f44:	bl	11a9c <mycore_free@plt>
   34f48:	mov	r0, r4
   34f4c:	pop	{r4, r5, fp, pc}

00034f50 <mythread_mutex_post@@Base>:
   34f50:	mov	r0, r1
   34f54:	b	10fec <mcsync_mutex_unlock@plt>

00034f58 <mythread_mutex_wait@@Base>:
   34f58:	mov	r0, r1
   34f5c:	b	11c64 <mcsync_mutex_lock@plt>

00034f60 <mythread_mutex_try_wait@@Base>:
   34f60:	mov	r0, r1
   34f64:	b	11bf8 <mcsync_mutex_try_lock@plt>

00034f68 <mythread_mutex_close@@Base>:
   34f68:	mov	r0, r1
   34f6c:	b	10ed8 <mcsync_mutex_destroy@plt>

00034f70 <mythread_nanosleep_create@@Base>:
   34f70:	mov	r0, #1
   34f74:	mov	r1, #8
   34f78:	b	11004 <mycore_calloc@plt>

00034f7c <mythread_nanosleep_clean@@Base>:
   34f7c:	mov	r1, #0
   34f80:	str	r1, [r0, #4]
   34f84:	str	r1, [r0]
   34f88:	bx	lr

00034f8c <mythread_nanosleep_destroy@@Base>:
   34f8c:	b	11a9c <mycore_free@plt>

00034f90 <mythread_nanosleep_sleep@@Base>:
   34f90:	push	{fp, lr}
   34f94:	mov	fp, sp
   34f98:	mov	r1, #0
   34f9c:	bl	11010 <nanosleep@plt>
   34fa0:	cmp	r0, #0
   34fa4:	movwne	r0, #1
   34fa8:	pop	{fp, pc}

00034fac <mcsync_spin_create@@Base>:
   34fac:	mov	r0, #1
   34fb0:	mov	r1, #4
   34fb4:	b	11004 <mycore_calloc@plt>

00034fb8 <mcsync_spin_init@@Base>:
   34fb8:	mov	r0, #0
   34fbc:	bx	lr

00034fc0 <mcsync_spin_clean@@Base>:
   34fc0:	mov	r1, #0
   34fc4:	str	r1, [r0]
   34fc8:	bx	lr

00034fcc <mcsync_spin_destroy@@Base>:
   34fcc:	b	11a9c <mycore_free@plt>

00034fd0 <mcsync_spin_lock@@Base>:
   34fd0:	mov	r2, #0
   34fd4:	mov	r1, #1
   34fd8:	ldaex	r3, [r0]
   34fdc:	cmp	r3, r2
   34fe0:	bne	35000 <mcsync_spin_lock@@Base+0x30>
   34fe4:	stlex	r3, r1, [r0]
   34fe8:	cmp	r3, #0
   34fec:	moveq	r0, #0
   34ff0:	bxeq	lr
   34ff4:	ldaex	r3, [r0]
   34ff8:	cmp	r3, r2
   34ffc:	beq	34fe4 <mcsync_spin_lock@@Base+0x14>
   35000:	clrex
   35004:	mov	r2, r3
   35008:	ldaex	r3, [r0]
   3500c:	cmp	r3, r2
   35010:	beq	34fe4 <mcsync_spin_lock@@Base+0x14>
   35014:	b	35000 <mcsync_spin_lock@@Base+0x30>

00035018 <mcsync_spin_unlock@@Base>:
   35018:	mov	r1, #0
   3501c:	stl	r1, [r0]
   35020:	mov	r0, #0
   35024:	bx	lr

00035028 <mcsync_mutex_create@@Base>:
   35028:	mov	r0, #1
   3502c:	mov	r1, #24
   35030:	b	11004 <mycore_calloc@plt>

00035034 <mcsync_mutex_init@@Base>:
   35034:	push	{fp, lr}
   35038:	mov	fp, sp
   3503c:	mov	r1, #0
   35040:	bl	11094 <pthread_mutex_init@plt>
   35044:	cmp	r0, #0
   35048:	movwne	r0, #1
   3504c:	pop	{fp, pc}

00035050 <mcsync_mutex_clean@@Base>:
   35050:	bx	lr

00035054 <mcsync_mutex_destroy@@Base>:
   35054:	push	{r4, sl, fp, lr}
   35058:	add	fp, sp, #8
   3505c:	mov	r4, r0
   35060:	bl	10f38 <pthread_mutex_destroy@plt>
   35064:	mov	r0, r4
   35068:	pop	{r4, sl, fp, lr}
   3506c:	b	11a9c <mycore_free@plt>

00035070 <mcsync_mutex_lock@@Base>:
   35070:	push	{fp, lr}
   35074:	mov	fp, sp
   35078:	bl	10ff8 <pthread_mutex_lock@plt>
   3507c:	cmp	r0, #0
   35080:	movwne	r0, #1
   35084:	pop	{fp, pc}

00035088 <mcsync_mutex_try_lock@@Base>:
   35088:	push	{fp, lr}
   3508c:	mov	fp, sp
   35090:	bl	110f4 <pthread_mutex_trylock@plt>
   35094:	cmp	r0, #0
   35098:	movwne	r0, #1
   3509c:	pop	{fp, pc}

000350a0 <mcsync_mutex_unlock@@Base>:
   350a0:	push	{fp, lr}
   350a4:	mov	fp, sp
   350a8:	bl	10d94 <pthread_mutex_unlock@plt>
   350ac:	cmp	r0, #0
   350b0:	movwne	r0, #1
   350b4:	pop	{fp, pc}

Disassembly of section .fini:

000350b8 <.fini>:
   350b8:	push	{r3, lr}
   350bc:	pop	{r3, pc}
