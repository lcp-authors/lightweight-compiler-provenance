
../repos/sgerbino-table-2fdd8d0/bin/table_sort_test:     file format elf32-littlearm


Disassembly of section .init:

00011f5c <.init>:
   11f5c:	push	{r3, lr}
   11f60:	bl	12084 <_start@@Base+0x3c>
   11f64:	pop	{r3, pc}

Disassembly of section .plt:

00011f68 <calloc@plt-0x14>:
   11f68:	push	{lr}		; (str lr, [sp, #-4]!)
   11f6c:	ldr	lr, [pc, #4]	; 11f78 <calloc@plt-0x4>
   11f70:	add	lr, pc, lr
   11f74:	ldr	pc, [lr, #8]!
   11f78:	andeq	r5, r1, r8, lsl #1

00011f7c <calloc@plt>:
   11f7c:	add	ip, pc, #0, 12
   11f80:	add	ip, ip, #86016	; 0x15000
   11f84:	ldr	pc, [ip, #136]!	; 0x88

00011f88 <strcmp@plt>:
   11f88:	add	ip, pc, #0, 12
   11f8c:	add	ip, ip, #86016	; 0x15000
   11f90:	ldr	pc, [ip, #128]!	; 0x80

00011f94 <printf@plt>:
   11f94:	add	ip, pc, #0, 12
   11f98:	add	ip, ip, #86016	; 0x15000
   11f9c:	ldr	pc, [ip, #120]!	; 0x78

00011fa0 <free@plt>:
   11fa0:	add	ip, pc, #0, 12
   11fa4:	add	ip, ip, #86016	; 0x15000
   11fa8:	ldr	pc, [ip, #112]!	; 0x70

00011fac <time@plt>:
   11fac:	add	ip, pc, #0, 12
   11fb0:	add	ip, ip, #86016	; 0x15000
   11fb4:	ldr	pc, [ip, #104]!	; 0x68

00011fb8 <realloc@plt>:
   11fb8:	add	ip, pc, #0, 12
   11fbc:	add	ip, ip, #86016	; 0x15000
   11fc0:	ldr	pc, [ip, #96]!	; 0x60

00011fc4 <strcpy@plt>:
   11fc4:	add	ip, pc, #0, 12
   11fc8:	add	ip, ip, #86016	; 0x15000
   11fcc:	ldr	pc, [ip, #88]!	; 0x58

00011fd0 <puts@plt>:
   11fd0:	add	ip, pc, #0, 12
   11fd4:	add	ip, ip, #86016	; 0x15000
   11fd8:	ldr	pc, [ip, #80]!	; 0x50

00011fdc <malloc@plt>:
   11fdc:	add	ip, pc, #0, 12
   11fe0:	add	ip, ip, #86016	; 0x15000
   11fe4:	ldr	pc, [ip, #72]!	; 0x48

00011fe8 <__libc_start_main@plt>:
   11fe8:	add	ip, pc, #0, 12
   11fec:	add	ip, ip, #86016	; 0x15000
   11ff0:	ldr	pc, [ip, #64]!	; 0x40

00011ff4 <__gmon_start__@plt>:
   11ff4:	add	ip, pc, #0, 12
   11ff8:	add	ip, ip, #86016	; 0x15000
   11ffc:	ldr	pc, [ip, #56]!	; 0x38

00012000 <strlen@plt>:
   12000:	add	ip, pc, #0, 12
   12004:	add	ip, ip, #86016	; 0x15000
   12008:	ldr	pc, [ip, #48]!	; 0x30

0001200c <srand@plt>:
   1200c:	add	ip, pc, #0, 12
   12010:	add	ip, ip, #86016	; 0x15000
   12014:	ldr	pc, [ip, #40]!	; 0x28

00012018 <snprintf@plt>:
   12018:	add	ip, pc, #0, 12
   1201c:	add	ip, ip, #86016	; 0x15000
   12020:	ldr	pc, [ip, #32]!

00012024 <__isoc99_sscanf@plt>:
   12024:	add	ip, pc, #0, 12
   12028:	add	ip, ip, #86016	; 0x15000
   1202c:	ldr	pc, [ip, #24]!

00012030 <rand@plt>:
   12030:	add	ip, pc, #0, 12
   12034:	add	ip, ip, #86016	; 0x15000
   12038:	ldr	pc, [ip, #16]!

0001203c <abort@plt>:
   1203c:	add	ip, pc, #0, 12
   12040:	add	ip, ip, #86016	; 0x15000
   12044:	ldr	pc, [ip, #8]!

Disassembly of section .text:

00012048 <_start@@Base>:
   12048:	mov	fp, #0
   1204c:	mov	lr, #0
   12050:	pop	{r1}		; (ldr r1, [sp], #4)
   12054:	mov	r2, sp
   12058:	push	{r2}		; (str r2, [sp, #-4]!)
   1205c:	push	{r0}		; (str r0, [sp, #-4]!)
   12060:	ldr	ip, [pc, #16]	; 12078 <_start@@Base+0x30>
   12064:	push	{ip}		; (str ip, [sp, #-4]!)
   12068:	ldr	r0, [pc, #12]	; 1207c <_start@@Base+0x34>
   1206c:	ldr	r3, [pc, #12]	; 12080 <_start@@Base+0x38>
   12070:	bl	11fe8 <__libc_start_main@plt>
   12074:	bl	1203c <abort@plt>
   12078:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1207c:	andeq	r2, r1, r8, lsr r1
   12080:	andeq	r5, r1, r4, lsr pc
   12084:	ldr	r3, [pc, #20]	; 120a0 <_start@@Base+0x58>
   12088:	ldr	r2, [pc, #20]	; 120a4 <_start@@Base+0x5c>
   1208c:	add	r3, pc, r3
   12090:	ldr	r2, [r3, r2]
   12094:	cmp	r2, #0
   12098:	bxeq	lr
   1209c:	b	11ff4 <__gmon_start__@plt>
   120a0:	andeq	r4, r1, ip, ror #30
   120a4:	andeq	r0, r0, r0, asr r0
   120a8:	ldr	r0, [pc, #24]	; 120c8 <_start@@Base+0x80>
   120ac:	ldr	r3, [pc, #24]	; 120cc <_start@@Base+0x84>
   120b0:	cmp	r3, r0
   120b4:	bxeq	lr
   120b8:	ldr	r3, [pc, #16]	; 120d0 <_start@@Base+0x88>
   120bc:	cmp	r3, #0
   120c0:	bxeq	lr
   120c4:	bx	r3
   120c8:	andeq	r7, r2, ip, asr r0
   120cc:	andeq	r7, r2, ip, asr r0
   120d0:	andeq	r0, r0, r0
   120d4:	ldr	r0, [pc, #36]	; 12100 <_start@@Base+0xb8>
   120d8:	ldr	r1, [pc, #36]	; 12104 <_start@@Base+0xbc>
   120dc:	sub	r1, r1, r0
   120e0:	asr	r1, r1, #2
   120e4:	add	r1, r1, r1, lsr #31
   120e8:	asrs	r1, r1, #1
   120ec:	bxeq	lr
   120f0:	ldr	r3, [pc, #16]	; 12108 <_start@@Base+0xc0>
   120f4:	cmp	r3, #0
   120f8:	bxeq	lr
   120fc:	bx	r3
   12100:	andeq	r7, r2, ip, asr r0
   12104:	andeq	r7, r2, ip, asr r0
   12108:	andeq	r0, r0, r0
   1210c:	push	{r4, lr}
   12110:	ldr	r4, [pc, #24]	; 12130 <_start@@Base+0xe8>
   12114:	ldrb	r3, [r4]
   12118:	cmp	r3, #0
   1211c:	popne	{r4, pc}
   12120:	bl	120a8 <_start@@Base+0x60>
   12124:	mov	r3, #1
   12128:	strb	r3, [r4]
   1212c:	pop	{r4, pc}
   12130:	andeq	r7, r2, ip, asr r0
   12134:	b	120d4 <_start@@Base+0x8c>

00012138 <main@@Base>:
   12138:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1213c:	add	fp, sp, #28
   12140:	sub	sp, sp, #348	; 0x15c
   12144:	sub	r0, fp, #92	; 0x5c
   12148:	bl	11fac <time@plt>
   1214c:	bl	1200c <srand@plt>
   12150:	bl	12030 <rand@plt>
   12154:	sub	r4, fp, #88	; 0x58
   12158:	mov	r5, r0
   1215c:	mov	r0, r4
   12160:	bl	125dc <table_init@@Base>
   12164:	movw	r0, #34079	; 0x851f
   12168:	mov	r6, #0
   1216c:	movt	r0, #20971	; 0x51eb
   12170:	umull	r0, r1, r5, r0
   12174:	lsr	r0, r1, #5
   12178:	mov	r1, #100	; 0x64
   1217c:	mls	r0, r0, r1, r5
   12180:	add	r5, r0, #100	; 0x64
   12184:	mov	r0, r4
   12188:	bl	14954 <table_add_row@@Base>
   1218c:	add	r6, r6, #1
   12190:	cmp	r6, r5
   12194:	bcc	12184 <main@@Base+0x4c>
   12198:	sub	r8, fp, #88	; 0x58
   1219c:	mov	r0, r8
   121a0:	bl	1494c <table_get_row_length@@Base>
   121a4:	mov	r9, r0
   121a8:	bl	12030 <rand@plt>
   121ac:	movw	r1, #52429	; 0xcccd
   121b0:	movw	r4, #24484	; 0x5fa4
   121b4:	mov	r5, #0
   121b8:	add	r7, sp, #29
   121bc:	movt	r1, #52428	; 0xcccc
   121c0:	movt	r4, #1
   121c4:	umull	r1, r2, r0, r1
   121c8:	lsr	r1, r2, #2
   121cc:	add	r1, r1, r1, lsl #2
   121d0:	sub	r0, r0, r1
   121d4:	add	r6, r0, #2
   121d8:	mov	r0, r7
   121dc:	mov	r1, #255	; 0xff
   121e0:	mov	r2, r4
   121e4:	mov	r3, r5
   121e8:	bl	12018 <snprintf@plt>
   121ec:	mov	r0, r8
   121f0:	mov	r1, r7
   121f4:	mov	r2, #0
   121f8:	bl	13c0c <table_add_column@@Base>
   121fc:	add	r5, r5, #1
   12200:	cmp	r5, r6
   12204:	bcc	121d8 <main@@Base+0xa0>
   12208:	sub	r0, fp, #88	; 0x58
   1220c:	bl	13b74 <table_get_column_length@@Base>
   12210:	cmp	r0, #1
   12214:	mov	r8, r0
   12218:	cmpge	r9, #1
   1221c:	blt	12274 <main@@Base+0x13c>
   12220:	movw	r6, #26215	; 0x6667
   12224:	mov	r4, #0
   12228:	sub	r5, fp, #88	; 0x58
   1222c:	movt	r6, #26214	; 0x6666
   12230:	mov	r7, #0
   12234:	bl	12030 <rand@plt>
   12238:	smmul	r1, r0, r6
   1223c:	asr	r2, r1, #3
   12240:	add	r1, r2, r1, lsr #31
   12244:	mov	r2, r4
   12248:	add	r1, r1, r1, lsl #2
   1224c:	sub	r3, r0, r1, lsl #2
   12250:	mov	r0, r5
   12254:	mov	r1, r7
   12258:	bl	14f00 <table_set_int@@Base>
   1225c:	add	r7, r7, #1
   12260:	cmp	r9, r7
   12264:	bne	12234 <main@@Base+0xfc>
   12268:	add	r4, r4, #1
   1226c:	cmp	r4, r8
   12270:	bne	12230 <main@@Base+0xf8>
   12274:	mov	r0, r8
   12278:	mov	r1, #4
   1227c:	bl	11f7c <calloc@plt>
   12280:	mov	r5, r0
   12284:	mov	r0, r8
   12288:	mov	r1, #4
   1228c:	bl	11f7c <calloc@plt>
   12290:	mov	r6, r0
   12294:	cmp	r8, #1
   12298:	blt	122c4 <main@@Base+0x18c>
   1229c:	mov	r4, #0
   122a0:	str	r4, [r5, r4, lsl #2]
   122a4:	bl	12030 <rand@plt>
   122a8:	add	r1, r0, r0, lsr #31
   122ac:	bic	r1, r1, #1
   122b0:	sub	r0, r0, r1
   122b4:	str	r0, [r6, r4, lsl #2]
   122b8:	add	r4, r4, #1
   122bc:	cmp	r8, r4
   122c0:	bne	122a0 <main@@Base+0x168>
   122c4:	sub	r0, fp, #88	; 0x58
   122c8:	mov	r1, r5
   122cc:	mov	r2, r6
   122d0:	mov	r3, r8
   122d4:	bl	15aa0 <table_column_sort@@Base>
   122d8:	cmp	r9, #1
   122dc:	mov	r4, #0
   122e0:	cmpge	r8, #1
   122e4:	blt	12568 <main@@Base+0x430>
   122e8:	mvn	r0, #0
   122ec:	str	r8, [sp, #16]
   122f0:	mov	r4, #0
   122f4:	sub	r8, fp, #88	; 0x58
   122f8:	str	r5, [sp, #4]
   122fc:	str	r9, [sp, #12]
   12300:	str	r0, [sp, #20]
   12304:	mov	r0, #0
   12308:	str	r0, [sp, #8]
   1230c:	mvn	r0, #0
   12310:	str	r0, [sp, #24]
   12314:	cmp	r4, #0
   12318:	bne	12334 <main@@Base+0x1fc>
   1231c:	ldr	r0, [sp, #12]
   12320:	add	r4, r4, #1
   12324:	cmp	r4, r0
   12328:	beq	12410 <main@@Base+0x2d8>
   1232c:	cmp	r4, #0
   12330:	beq	1231c <main@@Base+0x1e4>
   12334:	sub	r9, r4, #1
   12338:	mov	sl, #0
   1233c:	cmp	sl, #0
   12340:	beq	12380 <main@@Base+0x248>
   12344:	mov	r5, sl
   12348:	subs	r5, r5, #1
   1234c:	blt	12380 <main@@Base+0x248>
   12350:	mov	r0, r8
   12354:	mov	r1, r4
   12358:	mov	r2, r5
   1235c:	bl	146a0 <table_get_int@@Base>
   12360:	mov	r7, r0
   12364:	mov	r0, r8
   12368:	mov	r1, r9
   1236c:	mov	r2, r5
   12370:	bl	146a0 <table_get_int@@Base>
   12374:	cmp	r7, r0
   12378:	beq	12348 <main@@Base+0x210>
   1237c:	b	1231c <main@@Base+0x1e4>
   12380:	mov	r7, r6
   12384:	ldr	r6, [r6, sl, lsl #2]
   12388:	mov	r0, r8
   1238c:	mov	r1, r9
   12390:	mov	r2, sl
   12394:	bl	146a0 <table_get_int@@Base>
   12398:	mov	r5, r0
   1239c:	mov	r0, r8
   123a0:	mov	r1, r4
   123a4:	mov	r2, sl
   123a8:	bl	146a0 <table_get_int@@Base>
   123ac:	cmp	r6, #0
   123b0:	beq	123cc <main@@Base+0x294>
   123b4:	cmp	r5, r0
   123b8:	mov	r6, r7
   123bc:	bge	123fc <main@@Base+0x2c4>
   123c0:	movw	r0, #24563	; 0x5ff3
   123c4:	movt	r0, #1
   123c8:	b	123e0 <main@@Base+0x2a8>
   123cc:	cmp	r5, r0
   123d0:	mov	r6, r7
   123d4:	ble	123fc <main@@Base+0x2c4>
   123d8:	movw	r0, #24491	; 0x5fab
   123dc:	movt	r0, #1
   123e0:	mov	r1, r4
   123e4:	mov	r2, sl
   123e8:	bl	11f94 <printf@plt>
   123ec:	mvn	r0, #0
   123f0:	str	r4, [sp, #24]
   123f4:	str	sl, [sp, #20]
   123f8:	str	r0, [sp, #8]
   123fc:	ldr	r0, [sp, #16]
   12400:	add	sl, sl, #1
   12404:	cmp	sl, r0
   12408:	bne	1233c <main@@Base+0x204>
   1240c:	b	1231c <main@@Base+0x1e4>
   12410:	ldr	r0, [sp, #24]
   12414:	cmn	r0, #1
   12418:	beq	12560 <main@@Base+0x428>
   1241c:	sub	r4, fp, #88	; 0x58
   12420:	str	r6, [sp, #12]
   12424:	mov	r0, r4
   12428:	bl	1494c <table_get_row_length@@Base>
   1242c:	mov	r0, r4
   12430:	bl	1494c <table_get_row_length@@Base>
   12434:	mov	r4, r0
   12438:	movw	r0, #24646	; 0x6046
   1243c:	movt	r0, #1
   12440:	bl	11fd0 <puts@plt>
   12444:	cmp	r4, #1
   12448:	str	r4, [sp, #16]
   1244c:	blt	12554 <main@@Base+0x41c>
   12450:	movw	r9, #24636	; 0x603c
   12454:	movw	sl, #24641	; 0x6041
   12458:	mov	r7, #0
   1245c:	sub	r6, fp, #88	; 0x58
   12460:	mov	r8, #255	; 0xff
   12464:	add	r4, sp, #29
   12468:	movt	r9, #1
   1246c:	movt	sl, #1
   12470:	mov	r0, r6
   12474:	bl	13b74 <table_get_column_length@@Base>
   12478:	cmp	r0, #1
   1247c:	bge	124c0 <main@@Base+0x388>
   12480:	ldr	r0, [sp, #24]
   12484:	movw	r1, #24645	; 0x6045
   12488:	movt	r1, #1
   1248c:	cmp	r0, r7
   12490:	movw	r0, #24646	; 0x6046
   12494:	movt	r0, #1
   12498:	moveq	r0, r1
   1249c:	bl	11fd0 <puts@plt>
   124a0:	ldr	r0, [sp, #16]
   124a4:	add	r7, r7, #1
   124a8:	cmp	r7, r0
   124ac:	beq	12554 <main@@Base+0x41c>
   124b0:	mov	r0, r6
   124b4:	bl	13b74 <table_get_column_length@@Base>
   124b8:	cmp	r0, #1
   124bc:	blt	12480 <main@@Base+0x348>
   124c0:	ldr	r0, [sp, #24]
   124c4:	mov	r5, #0
   124c8:	cmp	r0, r7
   124cc:	bne	12518 <main@@Base+0x3e0>
   124d0:	ldr	r1, [sp, #24]
   124d4:	mov	r0, r6
   124d8:	mov	r2, r5
   124dc:	mov	r3, r4
   124e0:	str	r8, [sp]
   124e4:	bl	13118 <table_cell_to_buffer@@Base>
   124e8:	ldr	r0, [sp, #20]
   124ec:	mov	r1, r4
   124f0:	cmp	r0, r5
   124f4:	mov	r0, sl
   124f8:	moveq	r0, r9
   124fc:	bl	11f94 <printf@plt>
   12500:	mov	r0, r6
   12504:	add	r5, r5, #1
   12508:	bl	13b74 <table_get_column_length@@Base>
   1250c:	cmp	r5, r0
   12510:	blt	124d0 <main@@Base+0x398>
   12514:	b	12480 <main@@Base+0x348>
   12518:	mov	r0, r6
   1251c:	mov	r1, r7
   12520:	mov	r2, r5
   12524:	mov	r3, r4
   12528:	str	r8, [sp]
   1252c:	bl	13118 <table_cell_to_buffer@@Base>
   12530:	mov	r0, sl
   12534:	mov	r1, r4
   12538:	bl	11f94 <printf@plt>
   1253c:	mov	r0, r6
   12540:	add	r5, r5, #1
   12544:	bl	13b74 <table_get_column_length@@Base>
   12548:	cmp	r5, r0
   1254c:	blt	12518 <main@@Base+0x3e0>
   12550:	b	12480 <main@@Base+0x348>
   12554:	ldr	r5, [sp, #4]
   12558:	ldr	r6, [sp, #12]
   1255c:	b	12564 <main@@Base+0x42c>
   12560:	ldr	r5, [sp, #4]
   12564:	ldr	r4, [sp, #8]
   12568:	sub	r0, fp, #88	; 0x58
   1256c:	bl	12638 <table_destroy@@Base>
   12570:	mov	r0, r5
   12574:	bl	11fa0 <free@plt>
   12578:	mov	r0, r6
   1257c:	bl	11fa0 <free@plt>
   12580:	mov	r0, r4
   12584:	sub	sp, fp, #28
   12588:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001258c <table_new@@Base>:
   1258c:	push	{fp, lr}
   12590:	mov	fp, sp
   12594:	mov	r0, #56	; 0x38
   12598:	bl	11fdc <malloc@plt>
   1259c:	vmov.i32	q8, #0	; 0x00000000
   125a0:	mov	r1, #0
   125a4:	mov	r2, #10
   125a8:	mov	r3, #20
   125ac:	str	r1, [r0]
   125b0:	stmib	r0, {r1, r2}
   125b4:	str	r1, [r0, #12]
   125b8:	str	r1, [r0, #16]
   125bc:	str	r1, [r0, #20]
   125c0:	str	r3, [r0, #24]
   125c4:	str	r1, [r0, #28]
   125c8:	str	r2, [r0, #48]	; 0x30
   125cc:	str	r1, [r0, #52]	; 0x34
   125d0:	add	r1, r0, #32
   125d4:	vst1.32	{d16-d17}, [r1]
   125d8:	pop	{fp, pc}

000125dc <table_init@@Base>:
   125dc:	vmov.i32	q8, #0	; 0x00000000
   125e0:	mov	r1, #0
   125e4:	mov	r2, #10
   125e8:	mov	r3, #20
   125ec:	str	r1, [r0]
   125f0:	stmib	r0, {r1, r2}
   125f4:	str	r1, [r0, #12]
   125f8:	str	r1, [r0, #16]
   125fc:	str	r1, [r0, #20]
   12600:	str	r3, [r0, #24]
   12604:	str	r1, [r0, #28]
   12608:	str	r2, [r0, #48]	; 0x30
   1260c:	str	r1, [r0, #52]	; 0x34
   12610:	add	r0, r0, #32
   12614:	vst1.32	{d16-d17}, [r0]
   12618:	bx	lr

0001261c <table_delete@@Base>:
   1261c:	push	{r4, sl, fp, lr}
   12620:	add	fp, sp, #8
   12624:	mov	r4, r0
   12628:	bl	12638 <table_destroy@@Base>
   1262c:	mov	r0, r4
   12630:	pop	{r4, sl, fp, lr}
   12634:	b	11fa0 <free@plt>

00012638 <table_destroy@@Base>:
   12638:	cmp	r0, #0
   1263c:	bxeq	lr
   12640:	push	{r4, r5, r6, sl, fp, lr}
   12644:	add	fp, sp, #16
   12648:	mvn	r1, #0
   1264c:	mvn	r2, #0
   12650:	mov	r3, #64	; 0x40
   12654:	mov	r4, r0
   12658:	bl	12ff8 <table_notify@@Base>
   1265c:	mov	r0, r4
   12660:	bl	1494c <table_get_row_length@@Base>
   12664:	cmp	r0, #1
   12668:	blt	1268c <table_destroy@@Base+0x54>
   1266c:	mov	r5, r0
   12670:	mov	r6, #0
   12674:	mov	r0, r4
   12678:	mov	r1, r6
   1267c:	bl	148f0 <table_row_destroy@@Base>
   12680:	add	r6, r6, #1
   12684:	cmp	r5, r6
   12688:	bne	12674 <table_destroy@@Base+0x3c>
   1268c:	ldr	r0, [r4, #16]
   12690:	cmp	r0, #0
   12694:	beq	1269c <table_destroy@@Base+0x64>
   12698:	bl	11fa0 <free@plt>
   1269c:	mov	r0, r4
   126a0:	bl	13b74 <table_get_column_length@@Base>
   126a4:	cmp	r0, #1
   126a8:	blt	126cc <table_destroy@@Base+0x94>
   126ac:	mov	r5, r0
   126b0:	mov	r6, #0
   126b4:	mov	r0, r4
   126b8:	mov	r1, r6
   126bc:	bl	13b5c <table_column_destroy@@Base>
   126c0:	add	r6, r6, #1
   126c4:	cmp	r5, r6
   126c8:	bne	126b4 <table_destroy@@Base+0x7c>
   126cc:	ldr	r0, [r4]
   126d0:	cmp	r0, #0
   126d4:	beq	126dc <table_destroy@@Base+0xa4>
   126d8:	bl	11fa0 <free@plt>
   126dc:	ldr	r0, [r4, #36]	; 0x24
   126e0:	cmp	r0, #0
   126e4:	beq	126ec <table_destroy@@Base+0xb4>
   126e8:	bl	11fa0 <free@plt>
   126ec:	ldr	r0, [r4, #40]	; 0x28
   126f0:	cmp	r0, #0
   126f4:	beq	126fc <table_destroy@@Base+0xc4>
   126f8:	bl	11fa0 <free@plt>
   126fc:	ldr	r0, [r4, #44]	; 0x2c
   12700:	cmp	r0, #0
   12704:	pop	{r4, r5, r6, sl, fp, lr}
   12708:	beq	12710 <table_destroy@@Base+0xd8>
   1270c:	b	11fa0 <free@plt>
   12710:	bx	lr

00012714 <table_dupe@@Base>:
   12714:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12718:	add	fp, sp, #28
   1271c:	sub	sp, sp, #12
   12720:	mov	r4, r0
   12724:	bl	1494c <table_get_row_length@@Base>
   12728:	mov	r8, r0
   1272c:	mov	r0, r4
   12730:	bl	13b74 <table_get_column_length@@Base>
   12734:	mov	r6, r0
   12738:	mov	r0, #56	; 0x38
   1273c:	bl	11fdc <malloc@plt>
   12740:	vmov.i32	q8, #0	; 0x00000000
   12744:	mov	sl, r0
   12748:	mov	r5, #0
   1274c:	mov	r0, #10
   12750:	mov	r1, #20
   12754:	cmp	r6, #1
   12758:	str	r5, [sl]
   1275c:	str	r5, [sl, #4]
   12760:	str	r0, [sl, #8]
   12764:	str	r5, [sl, #12]
   12768:	str	r5, [sl, #16]
   1276c:	str	r5, [sl, #20]
   12770:	str	r1, [sl, #24]
   12774:	str	r5, [sl, #28]
   12778:	str	r0, [sl, #48]	; 0x30
   1277c:	add	r0, sl, #32
   12780:	str	r5, [sl, #52]	; 0x34
   12784:	vst1.32	{d16-d17}, [r0]
   12788:	blt	127c4 <table_dupe@@Base+0xb0>
   1278c:	mov	r0, r4
   12790:	mov	r1, r5
   12794:	bl	13be8 <table_get_column_name@@Base>
   12798:	mov	r7, r0
   1279c:	mov	r0, r4
   127a0:	mov	r1, r5
   127a4:	bl	13bf8 <table_get_column_data_type@@Base>
   127a8:	mov	r2, r0
   127ac:	mov	r0, sl
   127b0:	mov	r1, r7
   127b4:	bl	13c0c <table_add_column@@Base>
   127b8:	add	r5, r5, #1
   127bc:	cmp	r6, r5
   127c0:	bne	1278c <table_dupe@@Base+0x78>
   127c4:	cmp	r8, #1
   127c8:	blt	12d58 <table_dupe@@Base+0x644>
   127cc:	mov	r5, #0
   127d0:	add	r9, sp, #8
   127d4:	mov	r0, sl
   127d8:	bl	14954 <table_add_row@@Base>
   127dc:	cmp	r6, #1
   127e0:	bge	12800 <table_dupe@@Base+0xec>
   127e4:	add	r5, r5, #1
   127e8:	cmp	r5, r8
   127ec:	beq	12d58 <table_dupe@@Base+0x644>
   127f0:	mov	r0, sl
   127f4:	bl	14954 <table_add_row@@Base>
   127f8:	cmp	r6, #1
   127fc:	blt	127e4 <table_dupe@@Base+0xd0>
   12800:	mov	r7, #0
   12804:	b	1283c <table_dupe@@Base+0x128>
   12808:	mov	r0, r4
   1280c:	mov	r1, r5
   12810:	mov	r2, r7
   12814:	bl	148ac <table_get_ptr@@Base>
   12818:	str	r0, [sp, #8]
   1281c:	mov	r0, sl
   12820:	mov	r1, r5
   12824:	mov	r2, r7
   12828:	mov	r3, r9
   1282c:	bl	15a44 <table_set_ptr@@Base>
   12830:	add	r7, r7, #1
   12834:	cmp	r6, r7
   12838:	beq	127e4 <table_dupe@@Base+0xd0>
   1283c:	mov	r0, r4
   12840:	mov	r1, r7
   12844:	bl	13bf8 <table_get_column_data_type@@Base>
   12848:	cmp	r0, #23
   1284c:	bhi	12830 <table_dupe@@Base+0x11c>
   12850:	add	r1, pc, #0
   12854:	ldr	pc, [r1, r0, lsl #2]
   12858:			; <UNDEFINED> instruction: 0x000128b8
   1285c:	andeq	r2, r1, ip, ror #17
   12860:	andeq	r2, r1, r0, lsr #18
   12864:	andeq	r2, r1, r4, asr r9
   12868:	andeq	r2, r1, r8, lsl #19
   1286c:			; <UNDEFINED> instruction: 0x000129bc
   12870:	strdeq	r2, [r1], -r0
   12874:	andeq	r2, r1, r4, lsr #20
   12878:	andeq	r2, r1, r8, asr sl
   1287c:	andeq	r2, r1, ip, lsl #21
   12880:	andeq	r2, r1, r0, asr #21
   12884:	strdeq	r2, [r1], -r4
   12888:	andeq	r2, r1, r8, lsr #22
   1288c:	andeq	r2, r1, ip, asr fp
   12890:	muleq	r1, r0, fp
   12894:	andeq	r2, r1, r4, asr #23
   12898:	strdeq	r2, [r1], -r8
   1289c:	andeq	r2, r1, r8, lsr #24
   128a0:	andeq	r2, r1, r8, asr ip
   128a4:	andeq	r2, r1, r8, lsl #25
   128a8:			; <UNDEFINED> instruction: 0x00012cbc
   128ac:	strdeq	r2, [r1], -r0
   128b0:	andeq	r2, r1, r4, lsr #26
   128b4:	andeq	r2, r1, r8, lsl #16
   128b8:	mov	r0, r4
   128bc:	mov	r1, r5
   128c0:	mov	r2, r7
   128c4:	bl	146a0 <table_get_int@@Base>
   128c8:	mov	r3, r0
   128cc:	mov	r0, sl
   128d0:	mov	r1, r5
   128d4:	mov	r2, r7
   128d8:	bl	14f00 <table_set_int@@Base>
   128dc:	add	r7, r7, #1
   128e0:	cmp	r6, r7
   128e4:	bne	1283c <table_dupe@@Base+0x128>
   128e8:	b	127e4 <table_dupe@@Base+0xd0>
   128ec:	mov	r0, r4
   128f0:	mov	r1, r5
   128f4:	mov	r2, r7
   128f8:	bl	146b8 <table_get_uint@@Base>
   128fc:	mov	r3, r0
   12900:	mov	r0, sl
   12904:	mov	r1, r5
   12908:	mov	r2, r7
   1290c:	bl	14f80 <table_set_uint@@Base>
   12910:	add	r7, r7, #1
   12914:	cmp	r6, r7
   12918:	bne	1283c <table_dupe@@Base+0x128>
   1291c:	b	127e4 <table_dupe@@Base+0xd0>
   12920:	mov	r0, r4
   12924:	mov	r1, r5
   12928:	mov	r2, r7
   1292c:	bl	146d0 <table_get_int8@@Base>
   12930:	mov	r3, r0
   12934:	mov	r0, sl
   12938:	mov	r1, r5
   1293c:	mov	r2, r7
   12940:	bl	15000 <table_set_int8@@Base>
   12944:	add	r7, r7, #1
   12948:	cmp	r6, r7
   1294c:	bne	1283c <table_dupe@@Base+0x128>
   12950:	b	127e4 <table_dupe@@Base+0xd0>
   12954:	mov	r0, r4
   12958:	mov	r1, r5
   1295c:	mov	r2, r7
   12960:	bl	146e8 <table_get_uint8@@Base>
   12964:	mov	r3, r0
   12968:	mov	r0, sl
   1296c:	mov	r1, r5
   12970:	mov	r2, r7
   12974:	bl	15080 <table_set_uint8@@Base>
   12978:	add	r7, r7, #1
   1297c:	cmp	r6, r7
   12980:	bne	1283c <table_dupe@@Base+0x128>
   12984:	b	127e4 <table_dupe@@Base+0xd0>
   12988:	mov	r0, r4
   1298c:	mov	r1, r5
   12990:	mov	r2, r7
   12994:	bl	14700 <table_get_int16@@Base>
   12998:	mov	r3, r0
   1299c:	mov	r0, sl
   129a0:	mov	r1, r5
   129a4:	mov	r2, r7
   129a8:	bl	15100 <table_set_int16@@Base>
   129ac:	add	r7, r7, #1
   129b0:	cmp	r6, r7
   129b4:	bne	1283c <table_dupe@@Base+0x128>
   129b8:	b	127e4 <table_dupe@@Base+0xd0>
   129bc:	mov	r0, r4
   129c0:	mov	r1, r5
   129c4:	mov	r2, r7
   129c8:	bl	14718 <table_get_uint16@@Base>
   129cc:	mov	r3, r0
   129d0:	mov	r0, sl
   129d4:	mov	r1, r5
   129d8:	mov	r2, r7
   129dc:	bl	15180 <table_set_uint16@@Base>
   129e0:	add	r7, r7, #1
   129e4:	cmp	r6, r7
   129e8:	bne	1283c <table_dupe@@Base+0x128>
   129ec:	b	127e4 <table_dupe@@Base+0xd0>
   129f0:	mov	r0, r4
   129f4:	mov	r1, r5
   129f8:	mov	r2, r7
   129fc:	bl	14730 <table_get_int32@@Base>
   12a00:	mov	r3, r0
   12a04:	mov	r0, sl
   12a08:	mov	r1, r5
   12a0c:	mov	r2, r7
   12a10:	bl	15200 <table_set_int32@@Base>
   12a14:	add	r7, r7, #1
   12a18:	cmp	r6, r7
   12a1c:	bne	1283c <table_dupe@@Base+0x128>
   12a20:	b	127e4 <table_dupe@@Base+0xd0>
   12a24:	mov	r0, r4
   12a28:	mov	r1, r5
   12a2c:	mov	r2, r7
   12a30:	bl	14748 <table_get_uint32@@Base>
   12a34:	mov	r3, r0
   12a38:	mov	r0, sl
   12a3c:	mov	r1, r5
   12a40:	mov	r2, r7
   12a44:	bl	15280 <table_set_uint32@@Base>
   12a48:	add	r7, r7, #1
   12a4c:	cmp	r6, r7
   12a50:	bne	1283c <table_dupe@@Base+0x128>
   12a54:	b	127e4 <table_dupe@@Base+0xd0>
   12a58:	mov	r0, r4
   12a5c:	mov	r1, r5
   12a60:	mov	r2, r7
   12a64:	bl	14760 <table_get_int64@@Base>
   12a68:	stm	sp, {r0, r1}
   12a6c:	mov	r0, sl
   12a70:	mov	r1, r5
   12a74:	mov	r2, r7
   12a78:	bl	15300 <table_set_int64@@Base>
   12a7c:	add	r7, r7, #1
   12a80:	cmp	r6, r7
   12a84:	bne	1283c <table_dupe@@Base+0x128>
   12a88:	b	127e4 <table_dupe@@Base+0xd0>
   12a8c:	mov	r0, r4
   12a90:	mov	r1, r5
   12a94:	mov	r2, r7
   12a98:	bl	14778 <table_get_uint64@@Base>
   12a9c:	stm	sp, {r0, r1}
   12aa0:	mov	r0, sl
   12aa4:	mov	r1, r5
   12aa8:	mov	r2, r7
   12aac:	bl	15388 <table_set_uint64@@Base>
   12ab0:	add	r7, r7, #1
   12ab4:	cmp	r6, r7
   12ab8:	bne	1283c <table_dupe@@Base+0x128>
   12abc:	b	127e4 <table_dupe@@Base+0xd0>
   12ac0:	mov	r0, r4
   12ac4:	mov	r1, r5
   12ac8:	mov	r2, r7
   12acc:	bl	14790 <table_get_short@@Base>
   12ad0:	mov	r3, r0
   12ad4:	mov	r0, sl
   12ad8:	mov	r1, r5
   12adc:	mov	r2, r7
   12ae0:	bl	15410 <table_set_short@@Base>
   12ae4:	add	r7, r7, #1
   12ae8:	cmp	r6, r7
   12aec:	bne	1283c <table_dupe@@Base+0x128>
   12af0:	b	127e4 <table_dupe@@Base+0xd0>
   12af4:	mov	r0, r4
   12af8:	mov	r1, r5
   12afc:	mov	r2, r7
   12b00:	bl	147a8 <table_get_ushort@@Base>
   12b04:	mov	r3, r0
   12b08:	mov	r0, sl
   12b0c:	mov	r1, r5
   12b10:	mov	r2, r7
   12b14:	bl	15490 <table_set_ushort@@Base>
   12b18:	add	r7, r7, #1
   12b1c:	cmp	r6, r7
   12b20:	bne	1283c <table_dupe@@Base+0x128>
   12b24:	b	127e4 <table_dupe@@Base+0xd0>
   12b28:	mov	r0, r4
   12b2c:	mov	r1, r5
   12b30:	mov	r2, r7
   12b34:	bl	147c0 <table_get_long@@Base>
   12b38:	mov	r3, r0
   12b3c:	mov	r0, sl
   12b40:	mov	r1, r5
   12b44:	mov	r2, r7
   12b48:	bl	15510 <table_set_long@@Base>
   12b4c:	add	r7, r7, #1
   12b50:	cmp	r6, r7
   12b54:	bne	1283c <table_dupe@@Base+0x128>
   12b58:	b	127e4 <table_dupe@@Base+0xd0>
   12b5c:	mov	r0, r4
   12b60:	mov	r1, r5
   12b64:	mov	r2, r7
   12b68:	bl	147d8 <table_get_ulong@@Base>
   12b6c:	mov	r3, r0
   12b70:	mov	r0, sl
   12b74:	mov	r1, r5
   12b78:	mov	r2, r7
   12b7c:	bl	15590 <table_set_ulong@@Base>
   12b80:	add	r7, r7, #1
   12b84:	cmp	r6, r7
   12b88:	bne	1283c <table_dupe@@Base+0x128>
   12b8c:	b	127e4 <table_dupe@@Base+0xd0>
   12b90:	mov	r0, r4
   12b94:	mov	r1, r5
   12b98:	mov	r2, r7
   12b9c:	bl	147f0 <table_get_llong@@Base>
   12ba0:	stm	sp, {r0, r1}
   12ba4:	mov	r0, sl
   12ba8:	mov	r1, r5
   12bac:	mov	r2, r7
   12bb0:	bl	15610 <table_set_llong@@Base>
   12bb4:	add	r7, r7, #1
   12bb8:	cmp	r6, r7
   12bbc:	bne	1283c <table_dupe@@Base+0x128>
   12bc0:	b	127e4 <table_dupe@@Base+0xd0>
   12bc4:	mov	r0, r4
   12bc8:	mov	r1, r5
   12bcc:	mov	r2, r7
   12bd0:	bl	14808 <table_get_ullong@@Base>
   12bd4:	stm	sp, {r0, r1}
   12bd8:	mov	r0, sl
   12bdc:	mov	r1, r5
   12be0:	mov	r2, r7
   12be4:	bl	15698 <table_set_ullong@@Base>
   12be8:	add	r7, r7, #1
   12bec:	cmp	r6, r7
   12bf0:	bne	1283c <table_dupe@@Base+0x128>
   12bf4:	b	127e4 <table_dupe@@Base+0xd0>
   12bf8:	mov	r0, r4
   12bfc:	mov	r1, r5
   12c00:	mov	r2, r7
   12c04:	bl	14820 <table_get_float@@Base>
   12c08:	mov	r0, sl
   12c0c:	mov	r1, r5
   12c10:	mov	r2, r7
   12c14:	bl	15720 <table_set_float@@Base>
   12c18:	add	r7, r7, #1
   12c1c:	cmp	r6, r7
   12c20:	bne	1283c <table_dupe@@Base+0x128>
   12c24:	b	127e4 <table_dupe@@Base+0xd0>
   12c28:	mov	r0, r4
   12c2c:	mov	r1, r5
   12c30:	mov	r2, r7
   12c34:	bl	14838 <table_get_double@@Base>
   12c38:	mov	r0, sl
   12c3c:	mov	r1, r5
   12c40:	mov	r2, r7
   12c44:	bl	157ac <table_set_double@@Base>
   12c48:	add	r7, r7, #1
   12c4c:	cmp	r6, r7
   12c50:	bne	1283c <table_dupe@@Base+0x128>
   12c54:	b	127e4 <table_dupe@@Base+0xd0>
   12c58:	mov	r0, r4
   12c5c:	mov	r1, r5
   12c60:	mov	r2, r7
   12c64:	bl	14850 <table_get_ldouble@@Base>
   12c68:	mov	r0, sl
   12c6c:	mov	r1, r5
   12c70:	mov	r2, r7
   12c74:	bl	15834 <table_set_ldouble@@Base>
   12c78:	add	r7, r7, #1
   12c7c:	cmp	r6, r7
   12c80:	bne	1283c <table_dupe@@Base+0x128>
   12c84:	b	127e4 <table_dupe@@Base+0xd0>
   12c88:	mov	r0, r4
   12c8c:	mov	r1, r5
   12c90:	mov	r2, r7
   12c94:	bl	14868 <table_get_char@@Base>
   12c98:	mov	r3, r0
   12c9c:	mov	r0, sl
   12ca0:	mov	r1, r5
   12ca4:	mov	r2, r7
   12ca8:	bl	15944 <table_set_char@@Base>
   12cac:	add	r7, r7, #1
   12cb0:	cmp	r6, r7
   12cb4:	bne	1283c <table_dupe@@Base+0x128>
   12cb8:	b	127e4 <table_dupe@@Base+0xd0>
   12cbc:	mov	r0, r4
   12cc0:	mov	r1, r5
   12cc4:	mov	r2, r7
   12cc8:	bl	14880 <table_get_uchar@@Base>
   12ccc:	mov	r3, r0
   12cd0:	mov	r0, sl
   12cd4:	mov	r1, r5
   12cd8:	mov	r2, r7
   12cdc:	bl	159c4 <table_set_uchar@@Base>
   12ce0:	add	r7, r7, #1
   12ce4:	cmp	r6, r7
   12ce8:	bne	1283c <table_dupe@@Base+0x128>
   12cec:	b	127e4 <table_dupe@@Base+0xd0>
   12cf0:	mov	r0, r4
   12cf4:	mov	r1, r5
   12cf8:	mov	r2, r7
   12cfc:	bl	14898 <table_get_string@@Base>
   12d00:	mov	r3, r0
   12d04:	mov	r0, sl
   12d08:	mov	r1, r5
   12d0c:	mov	r2, r7
   12d10:	bl	158bc <table_set_string@@Base>
   12d14:	add	r7, r7, #1
   12d18:	cmp	r6, r7
   12d1c:	bne	1283c <table_dupe@@Base+0x128>
   12d20:	b	127e4 <table_dupe@@Base+0xd0>
   12d24:	mov	r0, r4
   12d28:	mov	r1, r5
   12d2c:	mov	r2, r7
   12d30:	bl	14688 <table_get_bool@@Base>
   12d34:	mov	r3, r0
   12d38:	mov	r0, sl
   12d3c:	mov	r1, r5
   12d40:	mov	r2, r7
   12d44:	bl	14e80 <table_set_bool@@Base>
   12d48:	add	r7, r7, #1
   12d4c:	cmp	r6, r7
   12d50:	bne	1283c <table_dupe@@Base+0x128>
   12d54:	b	127e4 <table_dupe@@Base+0xd0>
   12d58:	mov	r0, sl
   12d5c:	sub	sp, fp, #28
   12d60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012d64 <table_get_major_version@@Base>:
   12d64:	mov	r0, #0
   12d68:	bx	lr

00012d6c <table_get_minor_version@@Base>:
   12d6c:	mov	r0, #0
   12d70:	bx	lr

00012d74 <table_get_patch_version@@Base>:
   12d74:	mov	r0, #0
   12d78:	bx	lr

00012d7c <table_get_version@@Base>:
   12d7c:	movw	r0, #24640	; 0x6040
   12d80:	movt	r0, #1
   12d84:	bx	lr

00012d88 <table_get_callback_length@@Base>:
   12d88:	ldr	r0, [r0, #32]
   12d8c:	bx	lr

00012d90 <table_register_callback@@Base>:
   12d90:	push	{r4, r5, r6, r7, fp, lr}
   12d94:	add	fp, sp, #16
   12d98:	mov	r5, r0
   12d9c:	ldr	r0, [r0, #32]
   12da0:	mov	r4, r3
   12da4:	mov	r6, r2
   12da8:	mov	r7, r1
   12dac:	cmp	r0, #1
   12db0:	blt	12e0c <table_register_callback@@Base+0x7c>
   12db4:	ldr	r2, [r5, #36]	; 0x24
   12db8:	mov	r1, #0
   12dbc:	ldr	r3, [r2, r1, lsl #2]
   12dc0:	cmp	r3, r7
   12dc4:	beq	12de0 <table_register_callback@@Base+0x50>
   12dc8:	add	r1, r1, #1
   12dcc:	cmp	r0, r1
   12dd0:	beq	12e0c <table_register_callback@@Base+0x7c>
   12dd4:	ldr	r3, [r2, r1, lsl #2]
   12dd8:	cmp	r3, r7
   12ddc:	bne	12dc8 <table_register_callback@@Base+0x38>
   12de0:	ldr	r3, [r5, #40]	; 0x28
   12de4:	ldr	r3, [r3, r1, lsl #2]
   12de8:	cmp	r3, r6
   12dec:	bne	12dc8 <table_register_callback@@Base+0x38>
   12df0:	cmp	r1, #0
   12df4:	beq	12e0c <table_register_callback@@Base+0x7c>
   12df8:	ldr	r0, [r5, #44]	; 0x2c
   12dfc:	ldr	r2, [r0, r1, lsl #2]
   12e00:	orr	r2, r2, r4
   12e04:	str	r2, [r0, r1, lsl #2]
   12e08:	pop	{r4, r5, r6, r7, fp, pc}
   12e0c:	ldr	r1, [r5, #48]	; 0x30
   12e10:	udiv	r2, r0, r1
   12e14:	mls	r2, r2, r1, r0
   12e18:	cmp	r2, #0
   12e1c:	bne	12e68 <table_register_callback@@Base+0xd8>
   12e20:	ldr	r2, [r5, #52]	; 0x34
   12e24:	ldr	r0, [r5, #36]	; 0x24
   12e28:	add	r1, r2, r1
   12e2c:	str	r1, [r5, #52]	; 0x34
   12e30:	lsl	r1, r1, #2
   12e34:	bl	11fb8 <realloc@plt>
   12e38:	str	r0, [r5, #36]	; 0x24
   12e3c:	ldr	r1, [r5, #52]	; 0x34
   12e40:	ldr	r0, [r5, #40]	; 0x28
   12e44:	lsl	r1, r1, #2
   12e48:	bl	11fb8 <realloc@plt>
   12e4c:	str	r0, [r5, #40]	; 0x28
   12e50:	ldr	r1, [r5, #52]	; 0x34
   12e54:	ldr	r0, [r5, #44]	; 0x2c
   12e58:	lsl	r1, r1, #2
   12e5c:	bl	11fb8 <realloc@plt>
   12e60:	str	r0, [r5, #44]	; 0x2c
   12e64:	ldr	r0, [r5, #32]
   12e68:	ldr	r1, [r5, #36]	; 0x24
   12e6c:	str	r7, [r1, r0, lsl #2]
   12e70:	ldr	r1, [r5, #40]	; 0x28
   12e74:	str	r6, [r1, r0, lsl #2]
   12e78:	ldr	r1, [r5, #44]	; 0x2c
   12e7c:	str	r4, [r1, r0, lsl #2]
   12e80:	ldr	r0, [r5, #32]
   12e84:	add	r0, r0, #1
   12e88:	str	r0, [r5, #32]
   12e8c:	pop	{r4, r5, r6, r7, fp, pc}

00012e90 <table_unregister_callback@@Base>:
   12e90:	push	{r4, r5, r6, sl, fp, lr}
   12e94:	add	fp, sp, #16
   12e98:	ldr	r4, [r0, #32]
   12e9c:	cmp	r4, #1
   12ea0:	blt	12ff4 <table_unregister_callback@@Base+0x164>
   12ea4:	ldr	r3, [r0, #36]	; 0x24
   12ea8:	mov	r6, r0
   12eac:	mov	r0, #0
   12eb0:	ldr	r5, [r3, r0, lsl #2]
   12eb4:	cmp	r5, r1
   12eb8:	beq	12ed4 <table_unregister_callback@@Base+0x44>
   12ebc:	add	r0, r0, #1
   12ec0:	cmp	r0, r4
   12ec4:	beq	12ff4 <table_unregister_callback@@Base+0x164>
   12ec8:	ldr	r5, [r3, r0, lsl #2]
   12ecc:	cmp	r5, r1
   12ed0:	bne	12ebc <table_unregister_callback@@Base+0x2c>
   12ed4:	ldr	r5, [r6, #40]	; 0x28
   12ed8:	ldr	r5, [r5, r0, lsl #2]
   12edc:	cmp	r5, r2
   12ee0:	bne	12ebc <table_unregister_callback@@Base+0x2c>
   12ee4:	sub	r1, r4, #1
   12ee8:	cmp	r0, r1
   12eec:	bge	12f70 <table_unregister_callback@@Base+0xe0>
   12ef0:	add	r2, r0, #1
   12ef4:	ldr	r1, [r3, r2, lsl #2]
   12ef8:	str	r1, [r3, r0, lsl #2]
   12efc:	ldr	r1, [r6, #40]	; 0x28
   12f00:	ldr	r3, [r1, r2, lsl #2]
   12f04:	str	r3, [r1, r0, lsl #2]
   12f08:	ldr	r1, [r6, #44]	; 0x2c
   12f0c:	ldr	r3, [r1, r2, lsl #2]
   12f10:	str	r3, [r1, r0, lsl #2]
   12f14:	ldr	r1, [r6, #32]
   12f18:	sub	r1, r1, #1
   12f1c:	cmp	r2, r1
   12f20:	bge	12f70 <table_unregister_callback@@Base+0xe0>
   12f24:	ldr	r1, [r6, #36]	; 0x24
   12f28:	add	r1, r1, r0, lsl #2
   12f2c:	ldr	r2, [r1, #8]
   12f30:	str	r2, [r1, #4]
   12f34:	ldr	r1, [r6, #40]	; 0x28
   12f38:	add	r1, r1, r0, lsl #2
   12f3c:	ldr	r2, [r1, #8]
   12f40:	str	r2, [r1, #4]
   12f44:	ldr	r1, [r6, #44]	; 0x2c
   12f48:	add	r1, r1, r0, lsl #2
   12f4c:	ldr	r2, [r1, #8]
   12f50:	str	r2, [r1, #4]
   12f54:	add	r2, r0, #1
   12f58:	add	r0, r0, #2
   12f5c:	ldr	r1, [r6, #32]
   12f60:	sub	r1, r1, #1
   12f64:	cmp	r0, r1
   12f68:	mov	r0, r2
   12f6c:	blt	12f24 <table_unregister_callback@@Base+0x94>
   12f70:	str	r1, [r6, #32]
   12f74:	ldr	r2, [r6, #48]	; 0x30
   12f78:	udiv	r0, r1, r2
   12f7c:	mls	r0, r0, r2, r1
   12f80:	cmp	r0, #0
   12f84:	popne	{r4, r5, r6, sl, fp, pc}
   12f88:	ldr	r1, [r6, #52]	; 0x34
   12f8c:	ldr	r0, [r6, #36]	; 0x24
   12f90:	subs	r1, r1, r2
   12f94:	str	r1, [r6, #52]	; 0x34
   12f98:	beq	12fd0 <table_unregister_callback@@Base+0x140>
   12f9c:	lsl	r1, r1, #2
   12fa0:	bl	11fb8 <realloc@plt>
   12fa4:	str	r0, [r6, #36]	; 0x24
   12fa8:	ldr	r1, [r6, #52]	; 0x34
   12fac:	ldr	r0, [r6, #40]	; 0x28
   12fb0:	lsl	r1, r1, #2
   12fb4:	bl	11fb8 <realloc@plt>
   12fb8:	str	r0, [r6, #40]	; 0x28
   12fbc:	ldr	r1, [r6, #52]	; 0x34
   12fc0:	ldr	r0, [r6, #44]	; 0x2c
   12fc4:	lsl	r1, r1, #2
   12fc8:	bl	11fb8 <realloc@plt>
   12fcc:	b	12ff0 <table_unregister_callback@@Base+0x160>
   12fd0:	bl	11fa0 <free@plt>
   12fd4:	ldr	r0, [r6, #40]	; 0x28
   12fd8:	bl	11fa0 <free@plt>
   12fdc:	ldr	r0, [r6, #44]	; 0x2c
   12fe0:	bl	11fa0 <free@plt>
   12fe4:	mov	r0, #0
   12fe8:	str	r0, [r6, #36]	; 0x24
   12fec:	str	r0, [r6, #40]	; 0x28
   12ff0:	str	r0, [r6, #44]	; 0x2c
   12ff4:	pop	{r4, r5, r6, sl, fp, pc}

00012ff8 <table_notify@@Base>:
   12ff8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12ffc:	add	fp, sp, #24
   13000:	sub	sp, sp, #8
   13004:	mov	r7, r0
   13008:	ldr	r0, [r0, #32]
   1300c:	cmp	r0, #1
   13010:	blt	13088 <table_notify@@Base+0x90>
   13014:	mov	r4, r3
   13018:	mov	r8, r2
   1301c:	mov	r9, r1
   13020:	mov	r5, #0
   13024:	ldr	r1, [r7, #44]	; 0x2c
   13028:	ldr	r1, [r1, r5, lsl #2]
   1302c:	tst	r1, r4
   13030:	bne	13050 <table_notify@@Base+0x58>
   13034:	add	r5, r5, #1
   13038:	cmp	r5, r0
   1303c:	bge	13088 <table_notify@@Base+0x90>
   13040:	ldr	r1, [r7, #44]	; 0x2c
   13044:	ldr	r1, [r1, r5, lsl #2]
   13048:	tst	r1, r4
   1304c:	beq	13034 <table_notify@@Base+0x3c>
   13050:	ldr	r0, [r7, #36]	; 0x24
   13054:	ldr	r1, [r7, #40]	; 0x28
   13058:	mov	r2, r8
   1305c:	mov	r3, r4
   13060:	ldr	r6, [r0, r5, lsl #2]
   13064:	ldr	r0, [r1, r5, lsl #2]
   13068:	mov	r1, r9
   1306c:	str	r0, [sp]
   13070:	mov	r0, r7
   13074:	blx	r6
   13078:	ldr	r0, [r7, #32]
   1307c:	add	r5, r5, #1
   13080:	cmp	r5, r0
   13084:	blt	13040 <table_notify@@Base+0x48>
   13088:	sub	sp, fp, #24
   1308c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013090 <table_cell_init@@Base>:
   13090:	push	{r4, sl, fp, lr}
   13094:	add	fp, sp, #8
   13098:	mov	r4, r2
   1309c:	bl	148e4 <table_get_row_ptr@@Base>
   130a0:	ldr	r0, [r0]
   130a4:	mov	r1, #0
   130a8:	str	r1, [r0, r4, lsl #2]
   130ac:	pop	{r4, sl, fp, pc}

000130b0 <table_get_cell_ptr@@Base>:
   130b0:	push	{r4, sl, fp, lr}
   130b4:	add	fp, sp, #8
   130b8:	mov	r4, r2
   130bc:	bl	148e4 <table_get_row_ptr@@Base>
   130c0:	ldr	r0, [r0]
   130c4:	add	r0, r0, r4, lsl #2
   130c8:	pop	{r4, sl, fp, pc}

000130cc <table_cell_destroy@@Base>:
   130cc:	push	{r4, r5, r6, sl, fp, lr}
   130d0:	add	fp, sp, #16
   130d4:	mov	r5, r1
   130d8:	mov	r1, r2
   130dc:	mov	r4, r2
   130e0:	mov	r6, r0
   130e4:	bl	13bf8 <table_get_column_data_type@@Base>
   130e8:	cmp	r0, #23
   130ec:	popeq	{r4, r5, r6, sl, fp, pc}
   130f0:	mov	r0, r6
   130f4:	mov	r1, r5
   130f8:	bl	148e4 <table_get_row_ptr@@Base>
   130fc:	ldr	r0, [r0]
   13100:	ldr	r0, [r0, r4, lsl #2]
   13104:	cmp	r0, #0
   13108:	beq	13114 <table_cell_destroy@@Base+0x48>
   1310c:	pop	{r4, r5, r6, sl, fp, lr}
   13110:	b	11fa0 <free@plt>
   13114:	pop	{r4, r5, r6, sl, fp, pc}

00013118 <table_cell_to_buffer@@Base>:
   13118:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1311c:	add	fp, sp, #24
   13120:	sub	sp, sp, #8
   13124:	mov	r7, r1
   13128:	mov	r1, r2
   1312c:	mov	r5, r3
   13130:	mov	r6, r2
   13134:	mov	r4, r0
   13138:	bl	13bf8 <table_get_column_data_type@@Base>
   1313c:	cmp	r0, #23
   13140:	bhi	133b0 <table_cell_to_buffer@@Base+0x298>
   13144:	ldr	r8, [fp, #8]
   13148:	add	r1, pc, #0
   1314c:	ldr	pc, [r1, r0, lsl #2]
   13150:			; <UNDEFINED> instruction: 0x000131b0
   13154:	andeq	r3, r1, r4, asr #3
   13158:	ldrdeq	r3, [r1], -r8
   1315c:	andeq	r3, r1, ip, ror #3
   13160:	andeq	r3, r1, r0, lsl #4
   13164:	andeq	r3, r1, r4, lsl r2
   13168:	andeq	r3, r1, r8, lsr #4
   1316c:	andeq	r3, r1, ip, lsr r2
   13170:	andeq	r3, r1, ip, asr r2
   13174:	andeq	r3, r1, r0, ror r2
   13178:	andeq	r3, r1, r4, lsl #5
   1317c:	andeq	r3, r1, r4, lsr #5
   13180:	andeq	r3, r1, r4, asr #5
   13184:	andeq	r3, r1, r4, ror #5
   13188:	andeq	r3, r1, r4, lsl #6
   1318c:	andeq	r3, r1, r4, lsr #6
   13190:	andeq	r3, r1, r4, asr #6
   13194:	andeq	r3, r1, r8, ror #6
   13198:	andeq	r3, r1, r8, lsl #7
   1319c:			; <UNDEFINED> instruction: 0x000133bc
   131a0:	ldrdeq	r3, [r1], -r0
   131a4:	strdeq	r3, [r1], -r0
   131a8:	andeq	r3, r1, r0, lsl r4
   131ac:	andeq	r3, r1, r4, asr #8
   131b0:	mov	r0, r4
   131b4:	mov	r1, r7
   131b8:	mov	r2, r6
   131bc:	bl	146a0 <table_get_int@@Base>
   131c0:	b	13420 <table_cell_to_buffer@@Base+0x308>
   131c4:	mov	r0, r4
   131c8:	mov	r1, r7
   131cc:	mov	r2, r6
   131d0:	bl	146b8 <table_get_uint@@Base>
   131d4:	b	1324c <table_cell_to_buffer@@Base+0x134>
   131d8:	mov	r0, r4
   131dc:	mov	r1, r7
   131e0:	mov	r2, r6
   131e4:	bl	146d0 <table_get_int8@@Base>
   131e8:	b	13420 <table_cell_to_buffer@@Base+0x308>
   131ec:	mov	r0, r4
   131f0:	mov	r1, r7
   131f4:	mov	r2, r6
   131f8:	bl	146e8 <table_get_uint8@@Base>
   131fc:	b	1324c <table_cell_to_buffer@@Base+0x134>
   13200:	mov	r0, r4
   13204:	mov	r1, r7
   13208:	mov	r2, r6
   1320c:	bl	14700 <table_get_int16@@Base>
   13210:	b	13420 <table_cell_to_buffer@@Base+0x308>
   13214:	mov	r0, r4
   13218:	mov	r1, r7
   1321c:	mov	r2, r6
   13220:	bl	14718 <table_get_uint16@@Base>
   13224:	b	1324c <table_cell_to_buffer@@Base+0x134>
   13228:	mov	r0, r4
   1322c:	mov	r1, r7
   13230:	mov	r2, r6
   13234:	bl	14730 <table_get_int32@@Base>
   13238:	b	13420 <table_cell_to_buffer@@Base+0x308>
   1323c:	mov	r0, r4
   13240:	mov	r1, r7
   13244:	mov	r2, r6
   13248:	bl	14748 <table_get_uint32@@Base>
   1324c:	movw	r2, #24648	; 0x6048
   13250:	mov	r3, r0
   13254:	movt	r2, #1
   13258:	b	1342c <table_cell_to_buffer@@Base+0x314>
   1325c:	mov	r0, r4
   13260:	mov	r1, r7
   13264:	mov	r2, r6
   13268:	bl	14760 <table_get_int64@@Base>
   1326c:	b	13314 <table_cell_to_buffer@@Base+0x1fc>
   13270:	mov	r0, r4
   13274:	mov	r1, r7
   13278:	mov	r2, r6
   1327c:	bl	14778 <table_get_uint64@@Base>
   13280:	b	13334 <table_cell_to_buffer@@Base+0x21c>
   13284:	mov	r0, r4
   13288:	mov	r1, r7
   1328c:	mov	r2, r6
   13290:	bl	14790 <table_get_short@@Base>
   13294:	movw	r2, #24661	; 0x6055
   13298:	mov	r3, r0
   1329c:	movt	r2, #1
   132a0:	b	1342c <table_cell_to_buffer@@Base+0x314>
   132a4:	mov	r0, r4
   132a8:	mov	r1, r7
   132ac:	mov	r2, r6
   132b0:	bl	147a8 <table_get_ushort@@Base>
   132b4:	movw	r2, #24665	; 0x6059
   132b8:	mov	r3, r0
   132bc:	movt	r2, #1
   132c0:	b	1342c <table_cell_to_buffer@@Base+0x314>
   132c4:	mov	r0, r4
   132c8:	mov	r1, r7
   132cc:	mov	r2, r6
   132d0:	bl	147c0 <table_get_long@@Base>
   132d4:	movw	r2, #24669	; 0x605d
   132d8:	mov	r3, r0
   132dc:	movt	r2, #1
   132e0:	b	1342c <table_cell_to_buffer@@Base+0x314>
   132e4:	mov	r0, r4
   132e8:	mov	r1, r7
   132ec:	mov	r2, r6
   132f0:	bl	147d8 <table_get_ulong@@Base>
   132f4:	movw	r2, #24673	; 0x6061
   132f8:	mov	r3, r0
   132fc:	movt	r2, #1
   13300:	b	1342c <table_cell_to_buffer@@Base+0x314>
   13304:	mov	r0, r4
   13308:	mov	r1, r7
   1330c:	mov	r2, r6
   13310:	bl	147f0 <table_get_llong@@Base>
   13314:	movw	r2, #24651	; 0x604b
   13318:	stm	sp, {r0, r1}
   1331c:	movt	r2, #1
   13320:	b	133a4 <table_cell_to_buffer@@Base+0x28c>
   13324:	mov	r0, r4
   13328:	mov	r1, r7
   1332c:	mov	r2, r6
   13330:	bl	14808 <table_get_ullong@@Base>
   13334:	movw	r2, #24656	; 0x6050
   13338:	stm	sp, {r0, r1}
   1333c:	movt	r2, #1
   13340:	b	133a4 <table_cell_to_buffer@@Base+0x28c>
   13344:	mov	r0, r4
   13348:	mov	r1, r7
   1334c:	mov	r2, r6
   13350:	bl	14820 <table_get_float@@Base>
   13354:	vcvt.f64.f32	d16, s0
   13358:	movw	r2, #24680	; 0x6068
   1335c:	movt	r2, #1
   13360:	vstr	d16, [sp]
   13364:	b	133a4 <table_cell_to_buffer@@Base+0x28c>
   13368:	mov	r0, r4
   1336c:	mov	r1, r7
   13370:	mov	r2, r6
   13374:	bl	14838 <table_get_double@@Base>
   13378:	movw	r2, #24683	; 0x606b
   1337c:	vstr	d0, [sp]
   13380:	movt	r2, #1
   13384:	b	133a4 <table_cell_to_buffer@@Base+0x28c>
   13388:	mov	r0, r4
   1338c:	mov	r1, r7
   13390:	mov	r2, r6
   13394:	bl	14850 <table_get_ldouble@@Base>
   13398:	movw	r2, #24687	; 0x606f
   1339c:	vstr	d0, [sp]
   133a0:	movt	r2, #1
   133a4:	mov	r0, r5
   133a8:	mov	r1, r8
   133ac:	bl	12018 <snprintf@plt>
   133b0:	mov	r0, #0
   133b4:	sub	sp, fp, #24
   133b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   133bc:	mov	r0, r4
   133c0:	mov	r1, r7
   133c4:	mov	r2, r6
   133c8:	bl	14868 <table_get_char@@Base>
   133cc:	b	133e0 <table_cell_to_buffer@@Base+0x2c8>
   133d0:	mov	r0, r4
   133d4:	mov	r1, r7
   133d8:	mov	r2, r6
   133dc:	bl	14880 <table_get_uchar@@Base>
   133e0:	movw	r2, #24691	; 0x6073
   133e4:	mov	r3, r0
   133e8:	movt	r2, #1
   133ec:	b	1342c <table_cell_to_buffer@@Base+0x314>
   133f0:	mov	r0, r4
   133f4:	mov	r1, r7
   133f8:	mov	r2, r6
   133fc:	bl	14898 <table_get_string@@Base>
   13400:	movw	r2, #24677	; 0x6065
   13404:	mov	r3, r0
   13408:	movt	r2, #1
   1340c:	b	1342c <table_cell_to_buffer@@Base+0x314>
   13410:	mov	r0, r4
   13414:	mov	r1, r7
   13418:	mov	r2, r6
   1341c:	bl	14688 <table_get_bool@@Base>
   13420:	movw	r2, #24488	; 0x5fa8
   13424:	mov	r3, r0
   13428:	movt	r2, #1
   1342c:	mov	r0, r5
   13430:	mov	r1, r8
   13434:	bl	12018 <snprintf@plt>
   13438:	mov	r0, #0
   1343c:	sub	sp, fp, #24
   13440:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13444:	mov	r0, r4
   13448:	mov	r1, r7
   1344c:	mov	r2, r6
   13450:	bl	148ac <table_get_ptr@@Base>
   13454:	movw	r2, #24694	; 0x6076
   13458:	mov	r3, r0
   1345c:	movt	r2, #1
   13460:	b	1342c <table_cell_to_buffer@@Base+0x314>

00013464 <table_cell_from_buffer@@Base>:
   13464:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13468:	add	fp, sp, #24
   1346c:	sub	sp, sp, #264	; 0x108
   13470:	mov	r5, r1
   13474:	mov	r1, r2
   13478:	mov	r7, r3
   1347c:	mov	r4, r2
   13480:	mov	r6, r0
   13484:	bl	13bf8 <table_get_column_data_type@@Base>
   13488:	cmp	r0, #23
   1348c:	bhi	13abc <table_cell_from_buffer@@Base+0x658>
   13490:	add	r1, pc, #0
   13494:	ldr	pc, [r1, r0, lsl #2]
   13498:	strdeq	r3, [r1], -r8
   1349c:	andeq	r3, r1, r4, lsr r5
   134a0:	andeq	r3, r1, r0, ror r5
   134a4:	andeq	r3, r1, ip, lsr #11
   134a8:	andeq	r3, r1, r8, ror #11
   134ac:	andeq	r3, r1, r4, lsr #12
   134b0:	andeq	r3, r1, r0, ror #12
   134b4:	muleq	r1, ip, r6
   134b8:	ldrdeq	r3, [r1], -r8
   134bc:	andeq	r3, r1, ip, lsl r7
   134c0:	andeq	r3, r1, r0, ror #14
   134c4:	muleq	r1, ip, r7
   134c8:	ldrdeq	r3, [r1], -r8
   134cc:	andeq	r3, r1, r4, lsl r8
   134d0:	andeq	r3, r1, r0, asr r8
   134d4:	muleq	r1, r4, r8
   134d8:	ldrdeq	r3, [r1], -r8
   134dc:	andeq	r3, r1, r4, lsl r9
   134e0:	andeq	r3, r1, r0, asr r9
   134e4:	andeq	r3, r1, ip, lsl #19
   134e8:	andeq	r3, r1, r8, asr #19
   134ec:	andeq	r3, r1, r4, lsl #20
   134f0:	andeq	r3, r1, r0, asr #20
   134f4:	andeq	r3, r1, r4, lsl #21
   134f8:	movw	r1, #24488	; 0x5fa8
   134fc:	add	r2, sp, #8
   13500:	mov	r0, r7
   13504:	movt	r1, #1
   13508:	bl	12024 <__isoc99_sscanf@plt>
   1350c:	mov	r1, r0
   13510:	mvn	r0, #0
   13514:	cmp	r1, #1
   13518:	bne	13ac0 <table_cell_from_buffer@@Base+0x65c>
   1351c:	ldr	r3, [sp, #8]
   13520:	mov	r0, r6
   13524:	mov	r1, r5
   13528:	mov	r2, r4
   1352c:	bl	14f00 <table_set_int@@Base>
   13530:	b	13abc <table_cell_from_buffer@@Base+0x658>
   13534:	movw	r1, #24648	; 0x6048
   13538:	add	r2, sp, #8
   1353c:	mov	r0, r7
   13540:	movt	r1, #1
   13544:	bl	12024 <__isoc99_sscanf@plt>
   13548:	mov	r1, r0
   1354c:	mvn	r0, #0
   13550:	cmp	r1, #1
   13554:	bne	13ac0 <table_cell_from_buffer@@Base+0x65c>
   13558:	ldr	r3, [sp, #8]
   1355c:	mov	r0, r6
   13560:	mov	r1, r5
   13564:	mov	r2, r4
   13568:	bl	14f80 <table_set_uint@@Base>
   1356c:	b	13abc <table_cell_from_buffer@@Base+0x658>
   13570:	movw	r1, #24697	; 0x6079
   13574:	add	r2, sp, #8
   13578:	mov	r0, r7
   1357c:	movt	r1, #1
   13580:	bl	12024 <__isoc99_sscanf@plt>
   13584:	mov	r1, r0
   13588:	mvn	r0, #0
   1358c:	cmp	r1, #1
   13590:	bne	13ac0 <table_cell_from_buffer@@Base+0x65c>
   13594:	ldrsb	r3, [sp, #8]
   13598:	mov	r0, r6
   1359c:	mov	r1, r5
   135a0:	mov	r2, r4
   135a4:	bl	15000 <table_set_int8@@Base>
   135a8:	b	13abc <table_cell_from_buffer@@Base+0x658>
   135ac:	movw	r1, #24702	; 0x607e
   135b0:	add	r2, sp, #8
   135b4:	mov	r0, r7
   135b8:	movt	r1, #1
   135bc:	bl	12024 <__isoc99_sscanf@plt>
   135c0:	mov	r1, r0
   135c4:	mvn	r0, #0
   135c8:	cmp	r1, #1
   135cc:	bne	13ac0 <table_cell_from_buffer@@Base+0x65c>
   135d0:	ldrb	r3, [sp, #8]
   135d4:	mov	r0, r6
   135d8:	mov	r1, r5
   135dc:	mov	r2, r4
   135e0:	bl	15080 <table_set_uint8@@Base>
   135e4:	b	13abc <table_cell_from_buffer@@Base+0x658>
   135e8:	movw	r1, #24661	; 0x6055
   135ec:	add	r2, sp, #8
   135f0:	mov	r0, r7
   135f4:	movt	r1, #1
   135f8:	bl	12024 <__isoc99_sscanf@plt>
   135fc:	mov	r1, r0
   13600:	mvn	r0, #0
   13604:	cmp	r1, #1
   13608:	bne	13ac0 <table_cell_from_buffer@@Base+0x65c>
   1360c:	ldrsh	r3, [sp, #8]
   13610:	mov	r0, r6
   13614:	mov	r1, r5
   13618:	mov	r2, r4
   1361c:	bl	15100 <table_set_int16@@Base>
   13620:	b	13abc <table_cell_from_buffer@@Base+0x658>
   13624:	movw	r1, #24665	; 0x6059
   13628:	add	r2, sp, #8
   1362c:	mov	r0, r7
   13630:	movt	r1, #1
   13634:	bl	12024 <__isoc99_sscanf@plt>
   13638:	mov	r1, r0
   1363c:	mvn	r0, #0
   13640:	cmp	r1, #1
   13644:	bne	13ac0 <table_cell_from_buffer@@Base+0x65c>
   13648:	ldrh	r3, [sp, #8]
   1364c:	mov	r0, r6
   13650:	mov	r1, r5
   13654:	mov	r2, r4
   13658:	bl	15180 <table_set_uint16@@Base>
   1365c:	b	13abc <table_cell_from_buffer@@Base+0x658>
   13660:	movw	r1, #24488	; 0x5fa8
   13664:	add	r2, sp, #8
   13668:	mov	r0, r7
   1366c:	movt	r1, #1
   13670:	bl	12024 <__isoc99_sscanf@plt>
   13674:	mov	r1, r0
   13678:	mvn	r0, #0
   1367c:	cmp	r1, #1
   13680:	bne	13ac0 <table_cell_from_buffer@@Base+0x65c>
   13684:	ldr	r3, [sp, #8]
   13688:	mov	r0, r6
   1368c:	mov	r1, r5
   13690:	mov	r2, r4
   13694:	bl	15200 <table_set_int32@@Base>
   13698:	b	13abc <table_cell_from_buffer@@Base+0x658>
   1369c:	movw	r1, #24648	; 0x6048
   136a0:	add	r2, sp, #8
   136a4:	mov	r0, r7
   136a8:	movt	r1, #1
   136ac:	bl	12024 <__isoc99_sscanf@plt>
   136b0:	mov	r1, r0
   136b4:	mvn	r0, #0
   136b8:	cmp	r1, #1
   136bc:	bne	13ac0 <table_cell_from_buffer@@Base+0x65c>
   136c0:	ldr	r3, [sp, #8]
   136c4:	mov	r0, r6
   136c8:	mov	r1, r5
   136cc:	mov	r2, r4
   136d0:	bl	15280 <table_set_uint32@@Base>
   136d4:	b	13abc <table_cell_from_buffer@@Base+0x658>
   136d8:	movw	r1, #24651	; 0x604b
   136dc:	add	r2, sp, #8
   136e0:	mov	r0, r7
   136e4:	movt	r1, #1
   136e8:	bl	12024 <__isoc99_sscanf@plt>
   136ec:	mov	r1, r0
   136f0:	mvn	r0, #0
   136f4:	cmp	r1, #1
   136f8:	bne	13ac0 <table_cell_from_buffer@@Base+0x65c>
   136fc:	ldr	r0, [sp, #8]
   13700:	ldr	r1, [sp, #12]
   13704:	mov	r2, r4
   13708:	stm	sp, {r0, r1}
   1370c:	mov	r0, r6
   13710:	mov	r1, r5
   13714:	bl	15300 <table_set_int64@@Base>
   13718:	b	13abc <table_cell_from_buffer@@Base+0x658>
   1371c:	movw	r1, #24656	; 0x6050
   13720:	add	r2, sp, #8
   13724:	mov	r0, r7
   13728:	movt	r1, #1
   1372c:	bl	12024 <__isoc99_sscanf@plt>
   13730:	mov	r1, r0
   13734:	mvn	r0, #0
   13738:	cmp	r1, #1
   1373c:	bne	13ac0 <table_cell_from_buffer@@Base+0x65c>
   13740:	ldr	r0, [sp, #8]
   13744:	ldr	r1, [sp, #12]
   13748:	mov	r2, r4
   1374c:	stm	sp, {r0, r1}
   13750:	mov	r0, r6
   13754:	mov	r1, r5
   13758:	bl	15388 <table_set_uint64@@Base>
   1375c:	b	13abc <table_cell_from_buffer@@Base+0x658>
   13760:	movw	r1, #24661	; 0x6055
   13764:	add	r2, sp, #8
   13768:	mov	r0, r7
   1376c:	movt	r1, #1
   13770:	bl	12024 <__isoc99_sscanf@plt>
   13774:	mov	r1, r0
   13778:	mvn	r0, #0
   1377c:	cmp	r1, #1
   13780:	bne	13ac0 <table_cell_from_buffer@@Base+0x65c>
   13784:	ldrsh	r3, [sp, #8]
   13788:	mov	r0, r6
   1378c:	mov	r1, r5
   13790:	mov	r2, r4
   13794:	bl	15410 <table_set_short@@Base>
   13798:	b	13abc <table_cell_from_buffer@@Base+0x658>
   1379c:	movw	r1, #24665	; 0x6059
   137a0:	add	r2, sp, #8
   137a4:	mov	r0, r7
   137a8:	movt	r1, #1
   137ac:	bl	12024 <__isoc99_sscanf@plt>
   137b0:	mov	r1, r0
   137b4:	mvn	r0, #0
   137b8:	cmp	r1, #1
   137bc:	bne	13ac0 <table_cell_from_buffer@@Base+0x65c>
   137c0:	ldrh	r3, [sp, #8]
   137c4:	mov	r0, r6
   137c8:	mov	r1, r5
   137cc:	mov	r2, r4
   137d0:	bl	15490 <table_set_ushort@@Base>
   137d4:	b	13abc <table_cell_from_buffer@@Base+0x658>
   137d8:	movw	r1, #24669	; 0x605d
   137dc:	add	r2, sp, #8
   137e0:	mov	r0, r7
   137e4:	movt	r1, #1
   137e8:	bl	12024 <__isoc99_sscanf@plt>
   137ec:	mov	r1, r0
   137f0:	mvn	r0, #0
   137f4:	cmp	r1, #1
   137f8:	bne	13ac0 <table_cell_from_buffer@@Base+0x65c>
   137fc:	ldr	r3, [sp, #8]
   13800:	mov	r0, r6
   13804:	mov	r1, r5
   13808:	mov	r2, r4
   1380c:	bl	15510 <table_set_long@@Base>
   13810:	b	13abc <table_cell_from_buffer@@Base+0x658>
   13814:	movw	r1, #24673	; 0x6061
   13818:	add	r2, sp, #8
   1381c:	mov	r0, r7
   13820:	movt	r1, #1
   13824:	bl	12024 <__isoc99_sscanf@plt>
   13828:	mov	r1, r0
   1382c:	mvn	r0, #0
   13830:	cmp	r1, #1
   13834:	bne	13ac0 <table_cell_from_buffer@@Base+0x65c>
   13838:	ldr	r3, [sp, #8]
   1383c:	mov	r0, r6
   13840:	mov	r1, r5
   13844:	mov	r2, r4
   13848:	bl	15590 <table_set_ulong@@Base>
   1384c:	b	13abc <table_cell_from_buffer@@Base+0x658>
   13850:	movw	r1, #24651	; 0x604b
   13854:	add	r2, sp, #8
   13858:	mov	r0, r7
   1385c:	movt	r1, #1
   13860:	bl	12024 <__isoc99_sscanf@plt>
   13864:	mov	r1, r0
   13868:	mvn	r0, #0
   1386c:	cmp	r1, #1
   13870:	bne	13ac0 <table_cell_from_buffer@@Base+0x65c>
   13874:	ldr	r0, [sp, #8]
   13878:	ldr	r1, [sp, #12]
   1387c:	mov	r2, r4
   13880:	stm	sp, {r0, r1}
   13884:	mov	r0, r6
   13888:	mov	r1, r5
   1388c:	bl	15610 <table_set_llong@@Base>
   13890:	b	13abc <table_cell_from_buffer@@Base+0x658>
   13894:	movw	r1, #24656	; 0x6050
   13898:	add	r2, sp, #8
   1389c:	mov	r0, r7
   138a0:	movt	r1, #1
   138a4:	bl	12024 <__isoc99_sscanf@plt>
   138a8:	mov	r1, r0
   138ac:	mvn	r0, #0
   138b0:	cmp	r1, #1
   138b4:	bne	13ac0 <table_cell_from_buffer@@Base+0x65c>
   138b8:	ldr	r0, [sp, #8]
   138bc:	ldr	r1, [sp, #12]
   138c0:	mov	r2, r4
   138c4:	stm	sp, {r0, r1}
   138c8:	mov	r0, r6
   138cc:	mov	r1, r5
   138d0:	bl	15698 <table_set_ullong@@Base>
   138d4:	b	13abc <table_cell_from_buffer@@Base+0x658>
   138d8:	movw	r1, #24680	; 0x6068
   138dc:	add	r2, sp, #8
   138e0:	mov	r0, r7
   138e4:	movt	r1, #1
   138e8:	bl	12024 <__isoc99_sscanf@plt>
   138ec:	mov	r1, r0
   138f0:	mvn	r0, #0
   138f4:	cmp	r1, #1
   138f8:	bne	13ac0 <table_cell_from_buffer@@Base+0x65c>
   138fc:	vldr	s0, [sp, #8]
   13900:	mov	r0, r6
   13904:	mov	r1, r5
   13908:	mov	r2, r4
   1390c:	bl	15720 <table_set_float@@Base>
   13910:	b	13abc <table_cell_from_buffer@@Base+0x658>
   13914:	movw	r1, #24683	; 0x606b
   13918:	add	r2, sp, #8
   1391c:	mov	r0, r7
   13920:	movt	r1, #1
   13924:	bl	12024 <__isoc99_sscanf@plt>
   13928:	mov	r1, r0
   1392c:	mvn	r0, #0
   13930:	cmp	r1, #1
   13934:	bne	13ac0 <table_cell_from_buffer@@Base+0x65c>
   13938:	vldr	d0, [sp, #8]
   1393c:	mov	r0, r6
   13940:	mov	r1, r5
   13944:	mov	r2, r4
   13948:	bl	157ac <table_set_double@@Base>
   1394c:	b	13abc <table_cell_from_buffer@@Base+0x658>
   13950:	movw	r1, #24687	; 0x606f
   13954:	add	r2, sp, #8
   13958:	mov	r0, r7
   1395c:	movt	r1, #1
   13960:	bl	12024 <__isoc99_sscanf@plt>
   13964:	mov	r1, r0
   13968:	mvn	r0, #0
   1396c:	cmp	r1, #1
   13970:	bne	13ac0 <table_cell_from_buffer@@Base+0x65c>
   13974:	vldr	d0, [sp, #8]
   13978:	mov	r0, r6
   1397c:	mov	r1, r5
   13980:	mov	r2, r4
   13984:	bl	15834 <table_set_ldouble@@Base>
   13988:	b	13abc <table_cell_from_buffer@@Base+0x658>
   1398c:	movw	r1, #24691	; 0x6073
   13990:	add	r2, sp, #8
   13994:	mov	r0, r7
   13998:	movt	r1, #1
   1399c:	bl	12024 <__isoc99_sscanf@plt>
   139a0:	mov	r1, r0
   139a4:	mvn	r0, #0
   139a8:	cmp	r1, #1
   139ac:	bne	13ac0 <table_cell_from_buffer@@Base+0x65c>
   139b0:	ldrb	r3, [sp, #8]
   139b4:	mov	r0, r6
   139b8:	mov	r1, r5
   139bc:	mov	r2, r4
   139c0:	bl	15944 <table_set_char@@Base>
   139c4:	b	13abc <table_cell_from_buffer@@Base+0x658>
   139c8:	movw	r1, #24691	; 0x6073
   139cc:	add	r2, sp, #8
   139d0:	mov	r0, r7
   139d4:	movt	r1, #1
   139d8:	bl	12024 <__isoc99_sscanf@plt>
   139dc:	mov	r1, r0
   139e0:	mvn	r0, #0
   139e4:	cmp	r1, #1
   139e8:	bne	13ac0 <table_cell_from_buffer@@Base+0x65c>
   139ec:	ldrb	r3, [sp, #8]
   139f0:	mov	r0, r6
   139f4:	mov	r1, r5
   139f8:	mov	r2, r4
   139fc:	bl	159c4 <table_set_uchar@@Base>
   13a00:	b	13abc <table_cell_from_buffer@@Base+0x658>
   13a04:	movw	r1, #24677	; 0x6065
   13a08:	add	r2, sp, #8
   13a0c:	mov	r0, r7
   13a10:	movt	r1, #1
   13a14:	bl	12024 <__isoc99_sscanf@plt>
   13a18:	mov	r1, r0
   13a1c:	mvn	r0, #0
   13a20:	cmp	r1, #1
   13a24:	bne	13ac0 <table_cell_from_buffer@@Base+0x65c>
   13a28:	add	r3, sp, #8
   13a2c:	mov	r0, r6
   13a30:	mov	r1, r5
   13a34:	mov	r2, r4
   13a38:	bl	158bc <table_set_string@@Base>
   13a3c:	b	13abc <table_cell_from_buffer@@Base+0x658>
   13a40:	movw	r1, #24488	; 0x5fa8
   13a44:	add	r2, sp, #8
   13a48:	mov	r0, r7
   13a4c:	movt	r1, #1
   13a50:	bl	12024 <__isoc99_sscanf@plt>
   13a54:	mov	r1, r0
   13a58:	mvn	r0, #0
   13a5c:	cmp	r1, #1
   13a60:	bne	13ac0 <table_cell_from_buffer@@Base+0x65c>
   13a64:	ldr	r3, [sp, #8]
   13a68:	mov	r0, r6
   13a6c:	mov	r1, r5
   13a70:	mov	r2, r4
   13a74:	cmp	r3, #0
   13a78:	movwne	r3, #1
   13a7c:	bl	14e80 <table_set_bool@@Base>
   13a80:	b	13abc <table_cell_from_buffer@@Base+0x658>
   13a84:	movw	r1, #24694	; 0x6076
   13a88:	add	r2, sp, #8
   13a8c:	mov	r0, r7
   13a90:	movt	r1, #1
   13a94:	bl	12024 <__isoc99_sscanf@plt>
   13a98:	mov	r1, r0
   13a9c:	mvn	r0, #0
   13aa0:	cmp	r1, #1
   13aa4:	bne	13ac0 <table_cell_from_buffer@@Base+0x65c>
   13aa8:	ldr	r3, [sp, #8]
   13aac:	mov	r0, r6
   13ab0:	mov	r1, r5
   13ab4:	mov	r2, r4
   13ab8:	bl	15a44 <table_set_ptr@@Base>
   13abc:	mov	r0, #0
   13ac0:	sub	sp, fp, #24
   13ac4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013ac8 <table_cell_nullify@@Base>:
   13ac8:	push	{r4, r5, fp, lr}
   13acc:	add	fp, sp, #8
   13ad0:	mov	r4, r2
   13ad4:	bl	148e4 <table_get_row_ptr@@Base>
   13ad8:	ldr	r5, [r0]
   13adc:	ldr	r0, [r5, r4, lsl #2]
   13ae0:	cmp	r0, #0
   13ae4:	beq	13af4 <table_cell_nullify@@Base+0x2c>
   13ae8:	bl	11fa0 <free@plt>
   13aec:	mov	r0, #0
   13af0:	str	r0, [r5, r4, lsl #2]
   13af4:	mov	r0, #0
   13af8:	pop	{r4, r5, fp, pc}

00013afc <table_column_init@@Base>:
   13afc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13b00:	add	fp, sp, #24
   13b04:	ldr	r7, [r0]
   13b08:	mov	r0, r2
   13b0c:	mov	r4, r3
   13b10:	mov	r5, r2
   13b14:	mov	r6, r1
   13b18:	bl	12000 <strlen@plt>
   13b1c:	add	r0, r0, #1
   13b20:	bl	11fdc <malloc@plt>
   13b24:	ldr	r8, [fp, #8]
   13b28:	add	r6, r6, r6, lsl #1
   13b2c:	cmp	r0, #0
   13b30:	str	r0, [r7, r6, lsl #2]
   13b34:	beq	13b40 <table_column_init@@Base+0x44>
   13b38:	mov	r1, r5
   13b3c:	bl	11fc4 <strcpy@plt>
   13b40:	add	r0, r7, r6, lsl #2
   13b44:	stmib	r0, {r4, r8}
   13b48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013b4c <table_get_col_ptr@@Base>:
   13b4c:	ldr	r0, [r0]
   13b50:	add	r1, r1, r1, lsl #1
   13b54:	add	r0, r0, r1, lsl #2
   13b58:	bx	lr

00013b5c <table_column_destroy@@Base>:
   13b5c:	ldr	r0, [r0]
   13b60:	add	r1, r1, r1, lsl #1
   13b64:	ldr	r0, [r0, r1, lsl #2]
   13b68:	cmp	r0, #0
   13b6c:	bxeq	lr
   13b70:	b	11fa0 <free@plt>

00013b74 <table_get_column_length@@Base>:
   13b74:	ldr	r0, [r0, #4]
   13b78:	bx	lr

00013b7c <table_get_column@@Base>:
   13b7c:	push	{r4, r5, r6, r7, fp, lr}
   13b80:	add	fp, sp, #16
   13b84:	ldr	r6, [r0, #4]
   13b88:	cmp	r6, #1
   13b8c:	blt	13bd4 <table_get_column@@Base+0x58>
   13b90:	ldr	r7, [r0]
   13b94:	mov	r5, r1
   13b98:	mov	r4, #0
   13b9c:	ldr	r0, [r7]
   13ba0:	mov	r1, r5
   13ba4:	bl	11f88 <strcmp@plt>
   13ba8:	cmp	r0, #0
   13bac:	beq	13bc4 <table_get_column@@Base+0x48>
   13bb0:	add	r4, r4, #1
   13bb4:	add	r7, r7, #12
   13bb8:	cmp	r6, r4
   13bbc:	bne	13b9c <table_get_column@@Base+0x20>
   13bc0:	mov	r4, r6
   13bc4:	cmp	r4, r6
   13bc8:	mvneq	r4, #0
   13bcc:	mov	r0, r4
   13bd0:	pop	{r4, r5, r6, r7, fp, pc}
   13bd4:	mov	r4, #0
   13bd8:	cmp	r4, r6
   13bdc:	mvneq	r4, #0
   13be0:	mov	r0, r4
   13be4:	pop	{r4, r5, r6, r7, fp, pc}

00013be8 <table_get_column_name@@Base>:
   13be8:	ldr	r0, [r0]
   13bec:	add	r1, r1, r1, lsl #1
   13bf0:	ldr	r0, [r0, r1, lsl #2]
   13bf4:	bx	lr

00013bf8 <table_get_column_data_type@@Base>:
   13bf8:	ldr	r0, [r0]
   13bfc:	add	r1, r1, r1, lsl #1
   13c00:	add	r0, r0, r1, lsl #2
   13c04:	ldr	r0, [r0, #4]
   13c08:	bx	lr

00013c0c <table_add_column@@Base>:
   13c0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c10:	add	fp, sp, #28
   13c14:	sub	sp, sp, #4
   13c18:	mov	r4, r0
   13c1c:	mov	r8, r1
   13c20:	ldr	r0, [r0, #4]
   13c24:	mov	r9, r2
   13c28:	ldr	r1, [r4, #8]
   13c2c:	udiv	r2, r0, r1
   13c30:	mls	r0, r2, r1, r0
   13c34:	cmp	r0, #0
   13c38:	bne	13ca4 <table_add_column@@Base+0x98>
   13c3c:	ldr	r2, [r4, #12]
   13c40:	ldr	r0, [r4]
   13c44:	add	r1, r2, r1
   13c48:	str	r1, [r4, #12]
   13c4c:	add	r1, r1, r1, lsl #1
   13c50:	lsl	r1, r1, #2
   13c54:	bl	11fb8 <realloc@plt>
   13c58:	str	r0, [r4]
   13c5c:	mov	r0, r4
   13c60:	bl	1494c <table_get_row_length@@Base>
   13c64:	cmp	r0, #1
   13c68:	blt	13ca4 <table_add_column@@Base+0x98>
   13c6c:	mov	r6, r0
   13c70:	mov	r5, #0
   13c74:	mov	r0, r4
   13c78:	mov	r1, r5
   13c7c:	bl	148e4 <table_get_row_ptr@@Base>
   13c80:	ldr	r1, [r4, #12]
   13c84:	mov	r7, r0
   13c88:	ldr	r0, [r0]
   13c8c:	lsl	r1, r1, #2
   13c90:	bl	11fb8 <realloc@plt>
   13c94:	add	r5, r5, #1
   13c98:	str	r0, [r7]
   13c9c:	cmp	r6, r5
   13ca0:	bne	13c74 <table_add_column@@Base+0x68>
   13ca4:	mov	r0, r4
   13ca8:	bl	1494c <table_get_row_length@@Base>
   13cac:	ldr	r6, [r4, #4]
   13cb0:	mov	r7, r0
   13cb4:	mov	r0, r9
   13cb8:	bl	14658 <table_get_default_compare_function_for_data_type@@Base>
   13cbc:	ldr	r5, [r4]
   13cc0:	mov	sl, r0
   13cc4:	mov	r0, r8
   13cc8:	bl	12000 <strlen@plt>
   13ccc:	add	r0, r0, #1
   13cd0:	bl	11fdc <malloc@plt>
   13cd4:	mov	r1, r8
   13cd8:	add	r8, r6, r6, lsl #1
   13cdc:	cmp	r0, #0
   13ce0:	str	r0, [r5, r8, lsl #2]
   13ce4:	beq	13cec <table_add_column@@Base+0xe0>
   13ce8:	bl	11fc4 <strcpy@plt>
   13cec:	add	r0, r5, r8, lsl #2
   13cf0:	cmp	r7, #1
   13cf4:	stmib	r0, {r9, sl}
   13cf8:	blt	13d1c <table_add_column@@Base+0x110>
   13cfc:	mov	r5, #0
   13d00:	mov	r0, r4
   13d04:	mov	r1, r5
   13d08:	mov	r2, r6
   13d0c:	bl	13090 <table_cell_init@@Base>
   13d10:	add	r5, r5, #1
   13d14:	cmp	r7, r5
   13d18:	bne	13d00 <table_add_column@@Base+0xf4>
   13d1c:	ldr	r2, [r4, #4]
   13d20:	mov	r0, r4
   13d24:	mvn	r1, #0
   13d28:	mov	r3, #8
   13d2c:	bl	12ff8 <table_notify@@Base>
   13d30:	ldr	r0, [r4, #4]
   13d34:	add	r1, r0, #1
   13d38:	str	r1, [r4, #4]
   13d3c:	sub	sp, fp, #28
   13d40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013d44 <table_remove_column@@Base>:
   13d44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d48:	add	fp, sp, #28
   13d4c:	sub	sp, sp, #12
   13d50:	mov	r5, r0
   13d54:	ldr	r0, [r0]
   13d58:	add	r6, r1, r1, lsl #1
   13d5c:	mov	r4, r1
   13d60:	ldr	r0, [r0, r6, lsl #2]
   13d64:	cmp	r0, #0
   13d68:	beq	13d70 <table_remove_column@@Base+0x2c>
   13d6c:	bl	11fa0 <free@plt>
   13d70:	ldr	r7, [r5, #4]
   13d74:	sub	r0, r7, #1
   13d78:	cmp	r0, r4
   13d7c:	str	r0, [sp, #8]
   13d80:	ble	13db4 <table_remove_column@@Base+0x70>
   13d84:	mvn	r0, r4
   13d88:	lsl	r1, r6, #2
   13d8c:	add	r0, r0, r7
   13d90:	ldr	r2, [r5]
   13d94:	subs	r0, r0, #1
   13d98:	add	r2, r2, r1
   13d9c:	add	r1, r1, #12
   13da0:	vldr	d16, [r2, #12]
   13da4:	ldr	r3, [r2, #20]
   13da8:	str	r3, [r2, #8]
   13dac:	vstr	d16, [r2]
   13db0:	bne	13d90 <table_remove_column@@Base+0x4c>
   13db4:	mov	r0, r5
   13db8:	bl	1494c <table_get_row_length@@Base>
   13dbc:	cmp	r0, #1
   13dc0:	blt	13eac <table_remove_column@@Base+0x168>
   13dc4:	mov	sl, r0
   13dc8:	ldr	r0, [sp, #8]
   13dcc:	cmp	r0, r4
   13dd0:	ble	13e80 <table_remove_column@@Base+0x13c>
   13dd4:	mvn	r0, r4
   13dd8:	sub	r8, r7, #2
   13ddc:	add	r0, r7, r0
   13de0:	mov	r7, #0
   13de4:	and	r9, r0, #1
   13de8:	add	r0, r4, #1
   13dec:	str	r0, [sp, #4]
   13df0:	b	13e00 <table_remove_column@@Base+0xbc>
   13df4:	add	r7, r7, #1
   13df8:	cmp	r7, sl
   13dfc:	beq	13eac <table_remove_column@@Base+0x168>
   13e00:	mov	r0, r5
   13e04:	mov	r1, r7
   13e08:	mov	r2, r4
   13e0c:	bl	130cc <table_cell_destroy@@Base>
   13e10:	mov	r0, r5
   13e14:	mov	r1, r7
   13e18:	bl	148e4 <table_get_row_ptr@@Base>
   13e1c:	cmp	r9, #0
   13e20:	mov	r2, r4
   13e24:	beq	13e3c <table_remove_column@@Base+0xf8>
   13e28:	ldr	r1, [r0]
   13e2c:	add	r2, r1, r4, lsl #2
   13e30:	ldr	r2, [r2, #4]
   13e34:	str	r2, [r1, r4, lsl #2]
   13e38:	ldr	r2, [sp, #4]
   13e3c:	cmp	r8, r4
   13e40:	beq	13df4 <table_remove_column@@Base+0xb0>
   13e44:	ldr	r1, [sp, #8]
   13e48:	sub	r1, r1, r2
   13e4c:	lsl	r2, r2, #2
   13e50:	ldr	r3, [r0]
   13e54:	subs	r1, r1, #2
   13e58:	add	r6, r3, r2
   13e5c:	ldr	r6, [r6, #4]
   13e60:	str	r6, [r3, r2]
   13e64:	ldr	r3, [r0]
   13e68:	add	r3, r3, r2
   13e6c:	add	r2, r2, #8
   13e70:	ldr	r6, [r3, #8]
   13e74:	str	r6, [r3, #4]
   13e78:	bne	13e50 <table_remove_column@@Base+0x10c>
   13e7c:	b	13df4 <table_remove_column@@Base+0xb0>
   13e80:	mov	r7, #0
   13e84:	mov	r0, r5
   13e88:	mov	r1, r7
   13e8c:	mov	r2, r4
   13e90:	bl	130cc <table_cell_destroy@@Base>
   13e94:	mov	r0, r5
   13e98:	mov	r1, r7
   13e9c:	bl	148e4 <table_get_row_ptr@@Base>
   13ea0:	add	r7, r7, #1
   13ea4:	cmp	sl, r7
   13ea8:	bne	13e84 <table_remove_column@@Base+0x140>
   13eac:	ldmib	r5, {r0, r1}
   13eb0:	sub	r0, r0, #1
   13eb4:	udiv	r2, r0, r1
   13eb8:	str	r0, [r5, #4]
   13ebc:	mls	r0, r2, r1, r0
   13ec0:	cmp	r0, #0
   13ec4:	bne	13f30 <table_remove_column@@Base+0x1ec>
   13ec8:	ldr	r2, [r5, #12]
   13ecc:	ldr	r0, [r5]
   13ed0:	sub	r1, r2, r1
   13ed4:	str	r1, [r5, #12]
   13ed8:	add	r1, r1, r1, lsl #1
   13edc:	lsl	r1, r1, #2
   13ee0:	bl	11fb8 <realloc@plt>
   13ee4:	str	r0, [r5]
   13ee8:	mov	r0, r5
   13eec:	bl	1494c <table_get_row_length@@Base>
   13ef0:	cmp	r0, #1
   13ef4:	blt	13f30 <table_remove_column@@Base+0x1ec>
   13ef8:	mov	r8, r0
   13efc:	mov	r7, #0
   13f00:	mov	r0, r5
   13f04:	mov	r1, r7
   13f08:	bl	148e4 <table_get_row_ptr@@Base>
   13f0c:	ldr	r1, [r5, #12]
   13f10:	mov	r6, r0
   13f14:	ldr	r0, [r0]
   13f18:	lsl	r1, r1, #2
   13f1c:	bl	11fb8 <realloc@plt>
   13f20:	add	r7, r7, #1
   13f24:	str	r0, [r6]
   13f28:	cmp	r8, r7
   13f2c:	bne	13f00 <table_remove_column@@Base+0x1bc>
   13f30:	mov	r0, r5
   13f34:	mvn	r1, #0
   13f38:	mov	r2, r4
   13f3c:	mov	r3, #16
   13f40:	bl	12ff8 <table_notify@@Base>
   13f44:	mov	r0, #0
   13f48:	sub	sp, fp, #28
   13f4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013f50 <table_get_column_compare_function@@Base>:
   13f50:	ldr	r0, [r0]
   13f54:	add	r1, r1, r1, lsl #1
   13f58:	add	r0, r0, r1, lsl #2
   13f5c:	ldr	r0, [r0, #8]
   13f60:	bx	lr

00013f64 <table_set_column_compare_function@@Base>:
   13f64:	ldr	r0, [r0]
   13f68:	add	r1, r1, r1, lsl #1
   13f6c:	add	r0, r0, r1, lsl #2
   13f70:	str	r2, [r0, #8]
   13f74:	bx	lr

00013f78 <table_compare_bool@@Base>:
   13f78:	cmp	r0, #0
   13f7c:	beq	13fb0 <table_compare_bool@@Base+0x38>
   13f80:	cmp	r1, #0
   13f84:	moveq	r1, #1
   13f88:	moveq	r0, r1
   13f8c:	bxeq	lr
   13f90:	ldrb	r2, [r1]
   13f94:	ldrb	r0, [r0]
   13f98:	mov	r1, #0
   13f9c:	cmp	r0, r2
   13fa0:	mvncc	r1, #0
   13fa4:	movwhi	r1, #1
   13fa8:	mov	r0, r1
   13fac:	bx	lr
   13fb0:	cmp	r1, #0
   13fb4:	mvnne	r1, #0
   13fb8:	mov	r0, r1
   13fbc:	bx	lr

00013fc0 <table_compare_int@@Base>:
   13fc0:	cmp	r0, #0
   13fc4:	beq	13ff8 <table_compare_int@@Base+0x38>
   13fc8:	cmp	r1, #0
   13fcc:	moveq	r1, #1
   13fd0:	moveq	r0, r1
   13fd4:	bxeq	lr
   13fd8:	ldr	r2, [r1]
   13fdc:	ldr	r0, [r0]
   13fe0:	mov	r1, #0
   13fe4:	cmp	r0, r2
   13fe8:	mvnlt	r1, #0
   13fec:	movwgt	r1, #1
   13ff0:	mov	r0, r1
   13ff4:	bx	lr
   13ff8:	cmp	r1, #0
   13ffc:	mvnne	r1, #0
   14000:	mov	r0, r1
   14004:	bx	lr

00014008 <table_compare_uint@@Base>:
   14008:	cmp	r0, #0
   1400c:	beq	14040 <table_compare_uint@@Base+0x38>
   14010:	cmp	r1, #0
   14014:	moveq	r1, #1
   14018:	moveq	r0, r1
   1401c:	bxeq	lr
   14020:	ldr	r2, [r1]
   14024:	ldr	r0, [r0]
   14028:	mov	r1, #0
   1402c:	cmp	r0, r2
   14030:	mvncc	r1, #0
   14034:	movwhi	r1, #1
   14038:	mov	r0, r1
   1403c:	bx	lr
   14040:	cmp	r1, #0
   14044:	mvnne	r1, #0
   14048:	mov	r0, r1
   1404c:	bx	lr

00014050 <table_compare_int8@@Base>:
   14050:	cmp	r0, #0
   14054:	beq	14088 <table_compare_int8@@Base+0x38>
   14058:	cmp	r1, #0
   1405c:	moveq	r1, #1
   14060:	moveq	r0, r1
   14064:	bxeq	lr
   14068:	ldrsb	r2, [r1]
   1406c:	ldrsb	r0, [r0]
   14070:	mov	r1, #0
   14074:	cmp	r0, r2
   14078:	mvnlt	r1, #0
   1407c:	movwgt	r1, #1
   14080:	mov	r0, r1
   14084:	bx	lr
   14088:	cmp	r1, #0
   1408c:	mvnne	r1, #0
   14090:	mov	r0, r1
   14094:	bx	lr

00014098 <table_compare_uint8@@Base>:
   14098:	cmp	r0, #0
   1409c:	beq	140d0 <table_compare_uint8@@Base+0x38>
   140a0:	cmp	r1, #0
   140a4:	moveq	r1, #1
   140a8:	moveq	r0, r1
   140ac:	bxeq	lr
   140b0:	ldrb	r2, [r1]
   140b4:	ldrb	r0, [r0]
   140b8:	mov	r1, #0
   140bc:	cmp	r0, r2
   140c0:	mvncc	r1, #0
   140c4:	movwhi	r1, #1
   140c8:	mov	r0, r1
   140cc:	bx	lr
   140d0:	cmp	r1, #0
   140d4:	mvnne	r1, #0
   140d8:	mov	r0, r1
   140dc:	bx	lr

000140e0 <table_compare_int16@@Base>:
   140e0:	cmp	r0, #0
   140e4:	beq	14118 <table_compare_int16@@Base+0x38>
   140e8:	cmp	r1, #0
   140ec:	moveq	r1, #1
   140f0:	moveq	r0, r1
   140f4:	bxeq	lr
   140f8:	ldrsh	r2, [r1]
   140fc:	ldrsh	r0, [r0]
   14100:	mov	r1, #0
   14104:	cmp	r0, r2
   14108:	mvnlt	r1, #0
   1410c:	movwgt	r1, #1
   14110:	mov	r0, r1
   14114:	bx	lr
   14118:	cmp	r1, #0
   1411c:	mvnne	r1, #0
   14120:	mov	r0, r1
   14124:	bx	lr

00014128 <table_compare_uint16@@Base>:
   14128:	cmp	r0, #0
   1412c:	beq	14160 <table_compare_uint16@@Base+0x38>
   14130:	cmp	r1, #0
   14134:	moveq	r1, #1
   14138:	moveq	r0, r1
   1413c:	bxeq	lr
   14140:	ldrh	r2, [r1]
   14144:	ldrh	r0, [r0]
   14148:	mov	r1, #0
   1414c:	cmp	r0, r2
   14150:	mvncc	r1, #0
   14154:	movwhi	r1, #1
   14158:	mov	r0, r1
   1415c:	bx	lr
   14160:	cmp	r1, #0
   14164:	mvnne	r1, #0
   14168:	mov	r0, r1
   1416c:	bx	lr

00014170 <table_compare_int32@@Base>:
   14170:	cmp	r0, #0
   14174:	beq	141a8 <table_compare_int32@@Base+0x38>
   14178:	cmp	r1, #0
   1417c:	moveq	r1, #1
   14180:	moveq	r0, r1
   14184:	bxeq	lr
   14188:	ldr	r2, [r1]
   1418c:	ldr	r0, [r0]
   14190:	mov	r1, #0
   14194:	cmp	r0, r2
   14198:	mvnlt	r1, #0
   1419c:	movwgt	r1, #1
   141a0:	mov	r0, r1
   141a4:	bx	lr
   141a8:	cmp	r1, #0
   141ac:	mvnne	r1, #0
   141b0:	mov	r0, r1
   141b4:	bx	lr

000141b8 <table_compare_uint32@@Base>:
   141b8:	cmp	r0, #0
   141bc:	beq	141f0 <table_compare_uint32@@Base+0x38>
   141c0:	cmp	r1, #0
   141c4:	moveq	r1, #1
   141c8:	moveq	r0, r1
   141cc:	bxeq	lr
   141d0:	ldr	r2, [r1]
   141d4:	ldr	r0, [r0]
   141d8:	mov	r1, #0
   141dc:	cmp	r0, r2
   141e0:	mvncc	r1, #0
   141e4:	movwhi	r1, #1
   141e8:	mov	r0, r1
   141ec:	bx	lr
   141f0:	cmp	r1, #0
   141f4:	mvnne	r1, #0
   141f8:	mov	r0, r1
   141fc:	bx	lr

00014200 <table_compare_int64@@Base>:
   14200:	cmp	r0, #0
   14204:	beq	14258 <table_compare_int64@@Base+0x58>
   14208:	cmp	r1, #0
   1420c:	moveq	r1, #1
   14210:	moveq	r0, r1
   14214:	bxeq	lr
   14218:	push	{r5, r7, fp, lr}
   1421c:	add	fp, sp, #8
   14220:	ldm	r0, {r0, r5}
   14224:	ldm	r1, {r2, r7}
   14228:	mov	r1, #0
   1422c:	subs	r3, r0, r2
   14230:	sbcs	r3, r5, r7
   14234:	movwlt	r1, #1
   14238:	cmp	r1, #0
   1423c:	mvnne	r1, #0
   14240:	subs	r0, r2, r0
   14244:	sbcs	r0, r7, r5
   14248:	movwlt	r1, #1
   1424c:	pop	{r5, r7, fp, lr}
   14250:	mov	r0, r1
   14254:	bx	lr
   14258:	cmp	r1, #0
   1425c:	mvnne	r1, #0
   14260:	mov	r0, r1
   14264:	bx	lr

00014268 <table_compare_uint64@@Base>:
   14268:	cmp	r0, #0
   1426c:	beq	142c0 <table_compare_uint64@@Base+0x58>
   14270:	cmp	r1, #0
   14274:	moveq	r1, #1
   14278:	moveq	r0, r1
   1427c:	bxeq	lr
   14280:	push	{r5, r7, fp, lr}
   14284:	add	fp, sp, #8
   14288:	ldm	r0, {r0, r5}
   1428c:	ldm	r1, {r2, r7}
   14290:	mov	r1, #0
   14294:	subs	r3, r0, r2
   14298:	sbcs	r3, r5, r7
   1429c:	movwcc	r1, #1
   142a0:	cmp	r1, #0
   142a4:	mvnne	r1, #0
   142a8:	subs	r0, r2, r0
   142ac:	sbcs	r0, r7, r5
   142b0:	movwcc	r1, #1
   142b4:	pop	{r5, r7, fp, lr}
   142b8:	mov	r0, r1
   142bc:	bx	lr
   142c0:	cmp	r1, #0
   142c4:	mvnne	r1, #0
   142c8:	mov	r0, r1
   142cc:	bx	lr

000142d0 <table_compare_short@@Base>:
   142d0:	cmp	r0, #0
   142d4:	beq	14308 <table_compare_short@@Base+0x38>
   142d8:	cmp	r1, #0
   142dc:	moveq	r1, #1
   142e0:	moveq	r0, r1
   142e4:	bxeq	lr
   142e8:	ldrsh	r2, [r1]
   142ec:	ldrsh	r0, [r0]
   142f0:	mov	r1, #0
   142f4:	cmp	r0, r2
   142f8:	mvnlt	r1, #0
   142fc:	movwgt	r1, #1
   14300:	mov	r0, r1
   14304:	bx	lr
   14308:	cmp	r1, #0
   1430c:	mvnne	r1, #0
   14310:	mov	r0, r1
   14314:	bx	lr

00014318 <table_compare_ushort@@Base>:
   14318:	cmp	r0, #0
   1431c:	beq	14350 <table_compare_ushort@@Base+0x38>
   14320:	cmp	r1, #0
   14324:	moveq	r1, #1
   14328:	moveq	r0, r1
   1432c:	bxeq	lr
   14330:	ldrh	r2, [r1]
   14334:	ldrh	r0, [r0]
   14338:	mov	r1, #0
   1433c:	cmp	r0, r2
   14340:	mvncc	r1, #0
   14344:	movwhi	r1, #1
   14348:	mov	r0, r1
   1434c:	bx	lr
   14350:	cmp	r1, #0
   14354:	mvnne	r1, #0
   14358:	mov	r0, r1
   1435c:	bx	lr

00014360 <table_compare_long@@Base>:
   14360:	cmp	r0, #0
   14364:	beq	14398 <table_compare_long@@Base+0x38>
   14368:	cmp	r1, #0
   1436c:	moveq	r1, #1
   14370:	moveq	r0, r1
   14374:	bxeq	lr
   14378:	ldr	r2, [r1]
   1437c:	ldr	r0, [r0]
   14380:	mov	r1, #0
   14384:	cmp	r0, r2
   14388:	mvnlt	r1, #0
   1438c:	movwgt	r1, #1
   14390:	mov	r0, r1
   14394:	bx	lr
   14398:	cmp	r1, #0
   1439c:	mvnne	r1, #0
   143a0:	mov	r0, r1
   143a4:	bx	lr

000143a8 <table_compare_ulong@@Base>:
   143a8:	cmp	r0, #0
   143ac:	beq	143e0 <table_compare_ulong@@Base+0x38>
   143b0:	cmp	r1, #0
   143b4:	moveq	r1, #1
   143b8:	moveq	r0, r1
   143bc:	bxeq	lr
   143c0:	ldr	r2, [r1]
   143c4:	ldr	r0, [r0]
   143c8:	mov	r1, #0
   143cc:	cmp	r0, r2
   143d0:	mvncc	r1, #0
   143d4:	movwhi	r1, #1
   143d8:	mov	r0, r1
   143dc:	bx	lr
   143e0:	cmp	r1, #0
   143e4:	mvnne	r1, #0
   143e8:	mov	r0, r1
   143ec:	bx	lr

000143f0 <table_compare_llong@@Base>:
   143f0:	cmp	r0, #0
   143f4:	beq	14448 <table_compare_llong@@Base+0x58>
   143f8:	cmp	r1, #0
   143fc:	moveq	r1, #1
   14400:	moveq	r0, r1
   14404:	bxeq	lr
   14408:	push	{r5, r7, fp, lr}
   1440c:	add	fp, sp, #8
   14410:	ldm	r0, {r0, r5}
   14414:	ldm	r1, {r2, r7}
   14418:	mov	r1, #0
   1441c:	subs	r3, r0, r2
   14420:	sbcs	r3, r5, r7
   14424:	movwlt	r1, #1
   14428:	cmp	r1, #0
   1442c:	mvnne	r1, #0
   14430:	subs	r0, r2, r0
   14434:	sbcs	r0, r7, r5
   14438:	movwlt	r1, #1
   1443c:	pop	{r5, r7, fp, lr}
   14440:	mov	r0, r1
   14444:	bx	lr
   14448:	cmp	r1, #0
   1444c:	mvnne	r1, #0
   14450:	mov	r0, r1
   14454:	bx	lr

00014458 <table_compare_ullong@@Base>:
   14458:	cmp	r0, #0
   1445c:	beq	14490 <table_compare_ullong@@Base+0x38>
   14460:	cmp	r1, #0
   14464:	moveq	r1, #1
   14468:	moveq	r0, r1
   1446c:	bxeq	lr
   14470:	ldr	r2, [r1]
   14474:	ldr	r0, [r0]
   14478:	mov	r1, #0
   1447c:	cmp	r0, r2
   14480:	mvncc	r1, #0
   14484:	movwhi	r1, #1
   14488:	mov	r0, r1
   1448c:	bx	lr
   14490:	cmp	r1, #0
   14494:	mvnne	r1, #0
   14498:	mov	r0, r1
   1449c:	bx	lr

000144a0 <table_compare_float@@Base>:
   144a0:	cmp	r0, #0
   144a4:	beq	144dc <table_compare_float@@Base+0x3c>
   144a8:	cmp	r1, #0
   144ac:	moveq	r1, #1
   144b0:	moveq	r0, r1
   144b4:	bxeq	lr
   144b8:	vldr	s0, [r1]
   144bc:	vldr	s2, [r0]
   144c0:	mov	r1, #0
   144c4:	vcmpe.f32	s2, s0
   144c8:	vmrs	APSR_nzcv, fpscr
   144cc:	mvnmi	r1, #0
   144d0:	movwgt	r1, #1
   144d4:	mov	r0, r1
   144d8:	bx	lr
   144dc:	cmp	r1, #0
   144e0:	mvnne	r1, #0
   144e4:	mov	r0, r1
   144e8:	bx	lr

000144ec <table_compare_double@@Base>:
   144ec:	cmp	r0, #0
   144f0:	beq	14528 <table_compare_double@@Base+0x3c>
   144f4:	cmp	r1, #0
   144f8:	moveq	r1, #1
   144fc:	moveq	r0, r1
   14500:	bxeq	lr
   14504:	vldr	d16, [r1]
   14508:	vldr	d17, [r0]
   1450c:	mov	r1, #0
   14510:	vcmpe.f64	d17, d16
   14514:	vmrs	APSR_nzcv, fpscr
   14518:	mvnmi	r1, #0
   1451c:	movwgt	r1, #1
   14520:	mov	r0, r1
   14524:	bx	lr
   14528:	cmp	r1, #0
   1452c:	mvnne	r1, #0
   14530:	mov	r0, r1
   14534:	bx	lr

00014538 <table_compare_ldouble@@Base>:
   14538:	cmp	r0, #0
   1453c:	beq	14574 <table_compare_ldouble@@Base+0x3c>
   14540:	cmp	r1, #0
   14544:	moveq	r1, #1
   14548:	moveq	r0, r1
   1454c:	bxeq	lr
   14550:	vldr	d16, [r1]
   14554:	vldr	d17, [r0]
   14558:	mov	r1, #0
   1455c:	vcmpe.f64	d17, d16
   14560:	vmrs	APSR_nzcv, fpscr
   14564:	mvnmi	r1, #0
   14568:	movwgt	r1, #1
   1456c:	mov	r0, r1
   14570:	bx	lr
   14574:	cmp	r1, #0
   14578:	mvnne	r1, #0
   1457c:	mov	r0, r1
   14580:	bx	lr

00014584 <table_compare_char@@Base>:
   14584:	cmp	r0, #0
   14588:	beq	145bc <table_compare_char@@Base+0x38>
   1458c:	cmp	r1, #0
   14590:	moveq	r1, #1
   14594:	moveq	r0, r1
   14598:	bxeq	lr
   1459c:	ldrb	r2, [r1]
   145a0:	ldrb	r0, [r0]
   145a4:	mov	r1, #0
   145a8:	cmp	r0, r2
   145ac:	mvncc	r1, #0
   145b0:	movwhi	r1, #1
   145b4:	mov	r0, r1
   145b8:	bx	lr
   145bc:	cmp	r1, #0
   145c0:	mvnne	r1, #0
   145c4:	mov	r0, r1
   145c8:	bx	lr

000145cc <table_compare_uchar@@Base>:
   145cc:	cmp	r0, #0
   145d0:	beq	14604 <table_compare_uchar@@Base+0x38>
   145d4:	cmp	r1, #0
   145d8:	moveq	r1, #1
   145dc:	moveq	r0, r1
   145e0:	bxeq	lr
   145e4:	ldrb	r2, [r1]
   145e8:	ldrb	r0, [r0]
   145ec:	mov	r1, #0
   145f0:	cmp	r0, r2
   145f4:	mvncc	r1, #0
   145f8:	movwhi	r1, #1
   145fc:	mov	r0, r1
   14600:	bx	lr
   14604:	cmp	r1, #0
   14608:	mvnne	r1, #0
   1460c:	mov	r0, r1
   14610:	bx	lr

00014614 <table_compare_string@@Base>:
   14614:	cmp	r0, #0
   14618:	beq	14630 <table_compare_string@@Base+0x1c>
   1461c:	cmp	r1, #0
   14620:	moveq	r1, #1
   14624:	moveq	r0, r1
   14628:	bxeq	lr
   1462c:	b	11f88 <strcmp@plt>
   14630:	cmp	r1, #0
   14634:	mvnne	r1, #0
   14638:	mov	r0, r1
   1463c:	bx	lr

00014640 <table_compare_ptr@@Base>:
   14640:	cmp	r0, r1
   14644:	mov	r2, #0
   14648:	mvncc	r2, #0
   1464c:	movwhi	r2, #1
   14650:	mov	r0, r2
   14654:	bx	lr

00014658 <table_get_default_compare_function_for_data_type@@Base>:
   14658:	cmp	r0, #23
   1465c:	movhi	r0, #0
   14660:	bxhi	lr
   14664:	movw	r1, #24708	; 0x6084
   14668:	movt	r1, #1
   1466c:	ldr	r0, [r1, r0, lsl #2]
   14670:	bx	lr

00014674 <table_get@@Base>:
   14674:	push	{fp, lr}
   14678:	mov	fp, sp
   1467c:	bl	130b0 <table_get_cell_ptr@@Base>
   14680:	ldr	r0, [r0]
   14684:	pop	{fp, pc}

00014688 <table_get_bool@@Base>:
   14688:	push	{fp, lr}
   1468c:	mov	fp, sp
   14690:	bl	130b0 <table_get_cell_ptr@@Base>
   14694:	ldr	r0, [r0]
   14698:	ldrb	r0, [r0]
   1469c:	pop	{fp, pc}

000146a0 <table_get_int@@Base>:
   146a0:	push	{fp, lr}
   146a4:	mov	fp, sp
   146a8:	bl	130b0 <table_get_cell_ptr@@Base>
   146ac:	ldr	r0, [r0]
   146b0:	ldr	r0, [r0]
   146b4:	pop	{fp, pc}

000146b8 <table_get_uint@@Base>:
   146b8:	push	{fp, lr}
   146bc:	mov	fp, sp
   146c0:	bl	130b0 <table_get_cell_ptr@@Base>
   146c4:	ldr	r0, [r0]
   146c8:	ldr	r0, [r0]
   146cc:	pop	{fp, pc}

000146d0 <table_get_int8@@Base>:
   146d0:	push	{fp, lr}
   146d4:	mov	fp, sp
   146d8:	bl	130b0 <table_get_cell_ptr@@Base>
   146dc:	ldr	r0, [r0]
   146e0:	ldrsb	r0, [r0]
   146e4:	pop	{fp, pc}

000146e8 <table_get_uint8@@Base>:
   146e8:	push	{fp, lr}
   146ec:	mov	fp, sp
   146f0:	bl	130b0 <table_get_cell_ptr@@Base>
   146f4:	ldr	r0, [r0]
   146f8:	ldrb	r0, [r0]
   146fc:	pop	{fp, pc}

00014700 <table_get_int16@@Base>:
   14700:	push	{fp, lr}
   14704:	mov	fp, sp
   14708:	bl	130b0 <table_get_cell_ptr@@Base>
   1470c:	ldr	r0, [r0]
   14710:	ldrsh	r0, [r0]
   14714:	pop	{fp, pc}

00014718 <table_get_uint16@@Base>:
   14718:	push	{fp, lr}
   1471c:	mov	fp, sp
   14720:	bl	130b0 <table_get_cell_ptr@@Base>
   14724:	ldr	r0, [r0]
   14728:	ldrh	r0, [r0]
   1472c:	pop	{fp, pc}

00014730 <table_get_int32@@Base>:
   14730:	push	{fp, lr}
   14734:	mov	fp, sp
   14738:	bl	130b0 <table_get_cell_ptr@@Base>
   1473c:	ldr	r0, [r0]
   14740:	ldr	r0, [r0]
   14744:	pop	{fp, pc}

00014748 <table_get_uint32@@Base>:
   14748:	push	{fp, lr}
   1474c:	mov	fp, sp
   14750:	bl	130b0 <table_get_cell_ptr@@Base>
   14754:	ldr	r0, [r0]
   14758:	ldr	r0, [r0]
   1475c:	pop	{fp, pc}

00014760 <table_get_int64@@Base>:
   14760:	push	{fp, lr}
   14764:	mov	fp, sp
   14768:	bl	130b0 <table_get_cell_ptr@@Base>
   1476c:	ldr	r0, [r0]
   14770:	ldrd	r0, [r0]
   14774:	pop	{fp, pc}

00014778 <table_get_uint64@@Base>:
   14778:	push	{fp, lr}
   1477c:	mov	fp, sp
   14780:	bl	130b0 <table_get_cell_ptr@@Base>
   14784:	ldr	r0, [r0]
   14788:	ldrd	r0, [r0]
   1478c:	pop	{fp, pc}

00014790 <table_get_short@@Base>:
   14790:	push	{fp, lr}
   14794:	mov	fp, sp
   14798:	bl	130b0 <table_get_cell_ptr@@Base>
   1479c:	ldr	r0, [r0]
   147a0:	ldrsh	r0, [r0]
   147a4:	pop	{fp, pc}

000147a8 <table_get_ushort@@Base>:
   147a8:	push	{fp, lr}
   147ac:	mov	fp, sp
   147b0:	bl	130b0 <table_get_cell_ptr@@Base>
   147b4:	ldr	r0, [r0]
   147b8:	ldrh	r0, [r0]
   147bc:	pop	{fp, pc}

000147c0 <table_get_long@@Base>:
   147c0:	push	{fp, lr}
   147c4:	mov	fp, sp
   147c8:	bl	130b0 <table_get_cell_ptr@@Base>
   147cc:	ldr	r0, [r0]
   147d0:	ldr	r0, [r0]
   147d4:	pop	{fp, pc}

000147d8 <table_get_ulong@@Base>:
   147d8:	push	{fp, lr}
   147dc:	mov	fp, sp
   147e0:	bl	130b0 <table_get_cell_ptr@@Base>
   147e4:	ldr	r0, [r0]
   147e8:	ldr	r0, [r0]
   147ec:	pop	{fp, pc}

000147f0 <table_get_llong@@Base>:
   147f0:	push	{fp, lr}
   147f4:	mov	fp, sp
   147f8:	bl	130b0 <table_get_cell_ptr@@Base>
   147fc:	ldr	r0, [r0]
   14800:	ldrd	r0, [r0]
   14804:	pop	{fp, pc}

00014808 <table_get_ullong@@Base>:
   14808:	push	{fp, lr}
   1480c:	mov	fp, sp
   14810:	bl	130b0 <table_get_cell_ptr@@Base>
   14814:	ldr	r0, [r0]
   14818:	ldrd	r0, [r0]
   1481c:	pop	{fp, pc}

00014820 <table_get_float@@Base>:
   14820:	push	{fp, lr}
   14824:	mov	fp, sp
   14828:	bl	130b0 <table_get_cell_ptr@@Base>
   1482c:	ldr	r0, [r0]
   14830:	vldr	s0, [r0]
   14834:	pop	{fp, pc}

00014838 <table_get_double@@Base>:
   14838:	push	{fp, lr}
   1483c:	mov	fp, sp
   14840:	bl	130b0 <table_get_cell_ptr@@Base>
   14844:	ldr	r0, [r0]
   14848:	vldr	d0, [r0]
   1484c:	pop	{fp, pc}

00014850 <table_get_ldouble@@Base>:
   14850:	push	{fp, lr}
   14854:	mov	fp, sp
   14858:	bl	130b0 <table_get_cell_ptr@@Base>
   1485c:	ldr	r0, [r0]
   14860:	vldr	d0, [r0]
   14864:	pop	{fp, pc}

00014868 <table_get_char@@Base>:
   14868:	push	{fp, lr}
   1486c:	mov	fp, sp
   14870:	bl	130b0 <table_get_cell_ptr@@Base>
   14874:	ldr	r0, [r0]
   14878:	ldrb	r0, [r0]
   1487c:	pop	{fp, pc}

00014880 <table_get_uchar@@Base>:
   14880:	push	{fp, lr}
   14884:	mov	fp, sp
   14888:	bl	130b0 <table_get_cell_ptr@@Base>
   1488c:	ldr	r0, [r0]
   14890:	ldrb	r0, [r0]
   14894:	pop	{fp, pc}

00014898 <table_get_string@@Base>:
   14898:	push	{fp, lr}
   1489c:	mov	fp, sp
   148a0:	bl	130b0 <table_get_cell_ptr@@Base>
   148a4:	ldr	r0, [r0]
   148a8:	pop	{fp, pc}

000148ac <table_get_ptr@@Base>:
   148ac:	push	{fp, lr}
   148b0:	mov	fp, sp
   148b4:	bl	130b0 <table_get_cell_ptr@@Base>
   148b8:	ldr	r0, [r0]
   148bc:	pop	{fp, pc}

000148c0 <table_row_init@@Base>:
   148c0:	push	{r4, r5, fp, lr}
   148c4:	add	fp, sp, #8
   148c8:	mov	r4, r1
   148cc:	ldr	r1, [r0, #12]
   148d0:	ldr	r5, [r0, #16]
   148d4:	lsl	r0, r1, #2
   148d8:	bl	11fdc <malloc@plt>
   148dc:	str	r0, [r5, r4, lsl #2]
   148e0:	pop	{r4, r5, fp, pc}

000148e4 <table_get_row_ptr@@Base>:
   148e4:	ldr	r0, [r0, #16]
   148e8:	add	r0, r0, r1, lsl #2
   148ec:	bx	lr

000148f0 <table_row_destroy@@Base>:
   148f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   148f4:	add	fp, sp, #24
   148f8:	mov	r4, r1
   148fc:	mov	r5, r0
   14900:	bl	13b74 <table_get_column_length@@Base>
   14904:	ldr	r8, [r5, #16]
   14908:	cmp	r0, #1
   1490c:	blt	14934 <table_row_destroy@@Base+0x44>
   14910:	mov	r6, r0
   14914:	mov	r7, #0
   14918:	mov	r0, r5
   1491c:	mov	r1, r4
   14920:	mov	r2, r7
   14924:	bl	130cc <table_cell_destroy@@Base>
   14928:	add	r7, r7, #1
   1492c:	cmp	r6, r7
   14930:	bne	14918 <table_row_destroy@@Base+0x28>
   14934:	ldr	r0, [r8, r4, lsl #2]
   14938:	cmp	r0, #0
   1493c:	beq	14948 <table_row_destroy@@Base+0x58>
   14940:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14944:	b	11fa0 <free@plt>
   14948:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001494c <table_get_row_length@@Base>:
   1494c:	ldr	r0, [r0, #20]
   14950:	bx	lr

00014954 <table_add_row@@Base>:
   14954:	push	{r4, r5, r6, r7, fp, lr}
   14958:	add	fp, sp, #16
   1495c:	ldr	r5, [r0, #20]
   14960:	ldr	r1, [r0, #24]
   14964:	mov	r4, r0
   14968:	udiv	r0, r5, r1
   1496c:	mls	r0, r0, r1, r5
   14970:	cmp	r0, #0
   14974:	bne	14998 <table_add_row@@Base+0x44>
   14978:	ldr	r2, [r4, #28]
   1497c:	ldr	r0, [r4, #16]
   14980:	add	r1, r2, r1
   14984:	str	r1, [r4, #28]
   14988:	lsl	r1, r1, #2
   1498c:	bl	11fb8 <realloc@plt>
   14990:	str	r0, [r4, #16]
   14994:	ldr	r5, [r4, #20]
   14998:	mov	r0, r4
   1499c:	bl	13b74 <table_get_column_length@@Base>
   149a0:	mov	r6, r0
   149a4:	ldr	r0, [r4, #12]
   149a8:	ldr	r7, [r4, #16]
   149ac:	lsl	r0, r0, #2
   149b0:	bl	11fdc <malloc@plt>
   149b4:	cmp	r6, #1
   149b8:	str	r0, [r7, r5, lsl #2]
   149bc:	blt	149e0 <table_add_row@@Base+0x8c>
   149c0:	mov	r7, #0
   149c4:	mov	r0, r4
   149c8:	mov	r1, r5
   149cc:	mov	r2, r7
   149d0:	bl	13090 <table_cell_init@@Base>
   149d4:	add	r7, r7, #1
   149d8:	cmp	r6, r7
   149dc:	bne	149c4 <table_add_row@@Base+0x70>
   149e0:	ldr	r1, [r4, #20]
   149e4:	mov	r0, r4
   149e8:	mvn	r2, #0
   149ec:	mov	r3, #2
   149f0:	bl	12ff8 <table_notify@@Base>
   149f4:	ldr	r0, [r4, #20]
   149f8:	add	r1, r0, #1
   149fc:	str	r1, [r4, #20]
   14a00:	pop	{r4, r5, r6, r7, fp, pc}

00014a04 <table_remove_row@@Base>:
   14a04:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14a08:	add	fp, sp, #24
   14a0c:	ldr	r8, [r0, #20]
   14a10:	mov	r4, r1
   14a14:	mov	r5, r0
   14a18:	bl	13b74 <table_get_column_length@@Base>
   14a1c:	cmp	r0, #1
   14a20:	blt	14a74 <table_remove_row@@Base+0x70>
   14a24:	mov	r6, r0
   14a28:	mov	r7, #0
   14a2c:	b	14a3c <table_remove_row@@Base+0x38>
   14a30:	add	r7, r7, #1
   14a34:	cmp	r6, r7
   14a38:	beq	14a74 <table_remove_row@@Base+0x70>
   14a3c:	mov	r0, r5
   14a40:	mov	r1, r7
   14a44:	bl	13bf8 <table_get_column_data_type@@Base>
   14a48:	cmp	r0, #23
   14a4c:	beq	14a30 <table_remove_row@@Base+0x2c>
   14a50:	mov	r0, r5
   14a54:	mov	r1, r4
   14a58:	mov	r2, r7
   14a5c:	bl	130b0 <table_get_cell_ptr@@Base>
   14a60:	ldr	r0, [r0]
   14a64:	cmp	r0, #0
   14a68:	beq	14a30 <table_remove_row@@Base+0x2c>
   14a6c:	bl	11fa0 <free@plt>
   14a70:	b	14a30 <table_remove_row@@Base+0x2c>
   14a74:	ldr	r0, [r5, #16]
   14a78:	ldr	r0, [r0, r4, lsl #2]
   14a7c:	cmp	r0, #0
   14a80:	beq	14a88 <table_remove_row@@Base+0x84>
   14a84:	bl	11fa0 <free@plt>
   14a88:	sub	r0, r8, #1
   14a8c:	cmp	r0, r4
   14a90:	ble	14b00 <table_remove_row@@Base+0xfc>
   14a94:	mvn	r0, r4
   14a98:	add	r1, r8, r0
   14a9c:	sub	r0, r8, #2
   14aa0:	tst	r1, #1
   14aa4:	mov	r1, r4
   14aa8:	beq	14ac0 <table_remove_row@@Base+0xbc>
   14aac:	ldr	r1, [r5, #16]
   14ab0:	add	r2, r1, r4, lsl #2
   14ab4:	ldr	r2, [r2, #4]
   14ab8:	str	r2, [r1, r4, lsl #2]
   14abc:	add	r1, r4, #1
   14ac0:	cmp	r0, r4
   14ac4:	beq	14b00 <table_remove_row@@Base+0xfc>
   14ac8:	mvn	r0, r1
   14acc:	lsl	r1, r1, #2
   14ad0:	add	r0, r0, r8
   14ad4:	ldr	r2, [r5, #16]
   14ad8:	subs	r0, r0, #2
   14adc:	add	r3, r2, r1
   14ae0:	ldr	r3, [r3, #4]
   14ae4:	str	r3, [r2, r1]
   14ae8:	ldr	r2, [r5, #16]
   14aec:	add	r2, r2, r1
   14af0:	add	r1, r1, #8
   14af4:	ldr	r3, [r2, #8]
   14af8:	str	r3, [r2, #4]
   14afc:	bne	14ad4 <table_remove_row@@Base+0xd0>
   14b00:	ldr	r0, [r5, #20]
   14b04:	ldr	r1, [r5, #24]
   14b08:	sub	r0, r0, #1
   14b0c:	udiv	r2, r0, r1
   14b10:	str	r0, [r5, #20]
   14b14:	mls	r0, r2, r1, r0
   14b18:	cmp	r0, #0
   14b1c:	bne	14b3c <table_remove_row@@Base+0x138>
   14b20:	ldr	r2, [r5, #28]
   14b24:	ldr	r0, [r5, #16]
   14b28:	sub	r1, r2, r1
   14b2c:	str	r1, [r5, #28]
   14b30:	lsl	r1, r1, #2
   14b34:	bl	11fb8 <realloc@plt>
   14b38:	str	r0, [r5, #16]
   14b3c:	mov	r0, r5
   14b40:	mov	r1, r4
   14b44:	mvn	r2, #0
   14b48:	mov	r3, #4
   14b4c:	bl	12ff8 <table_notify@@Base>
   14b50:	mov	r0, #0
   14b54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014b58 <table_set_row_ptr@@Base>:
   14b58:	ldr	r2, [r2]
   14b5c:	ldr	r0, [r0, #16]
   14b60:	str	r2, [r0, r1, lsl #2]
   14b64:	bx	lr

00014b68 <table_set@@Base>:
   14b68:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14b6c:	add	fp, sp, #24
   14b70:	mov	r8, r3
   14b74:	mov	r4, r2
   14b78:	mov	r9, r1
   14b7c:	mov	r6, r0
   14b80:	bl	130b0 <table_get_cell_ptr@@Base>
   14b84:	mov	r5, r0
   14b88:	mov	r0, r6
   14b8c:	mov	r1, r4
   14b90:	bl	13b4c <table_get_col_ptr@@Base>
   14b94:	ldr	r1, [fp, #8]
   14b98:	mvn	r7, #0
   14b9c:	cmp	r1, #23
   14ba0:	bhi	14e64 <table_set@@Base+0x2fc>
   14ba4:	add	r2, pc, #0
   14ba8:	ldr	pc, [r2, r1, lsl #2]
   14bac:	andeq	r4, r1, ip, lsl #24
   14bb0:	andeq	r4, r1, ip, lsl ip
   14bb4:	andeq	r4, r1, ip, lsr #24
   14bb8:	andeq	r4, r1, ip, lsr ip
   14bbc:	andeq	r4, r1, ip, asr #24
   14bc0:	andeq	r4, r1, ip, asr ip
   14bc4:	andeq	r4, r1, ip, ror #24
   14bc8:	andeq	r4, r1, ip, ror ip
   14bcc:	andeq	r4, r1, ip, lsl #25
   14bd0:	muleq	r1, ip, ip
   14bd4:	andeq	r4, r1, ip, lsr #25
   14bd8:			; <UNDEFINED> instruction: 0x00014cbc
   14bdc:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14be0:	andeq	r4, r1, r4, lsl #26
   14be4:	andeq	r4, r1, r4, lsl sp
   14be8:	andeq	r4, r1, r4, lsr #26
   14bec:	andeq	r4, r1, r4, lsr sp
   14bf0:	andeq	r4, r1, ip, ror #26
   14bf4:	andeq	r4, r1, ip, ror sp
   14bf8:			; <UNDEFINED> instruction: 0x00014dbc
   14bfc:	andeq	r4, r1, ip, asr #27
   14c00:	ldrdeq	r4, [r1], -ip
   14c04:	andeq	r4, r1, r8, lsl lr
   14c08:	andeq	r4, r1, ip, ror #28
   14c0c:	ldr	r0, [r0, #4]
   14c10:	cmp	r0, #0
   14c14:	bne	14e64 <table_set@@Base+0x2fc>
   14c18:	b	14d40 <table_set@@Base+0x1d8>
   14c1c:	ldr	r0, [r0, #4]
   14c20:	cmp	r0, #1
   14c24:	beq	14d40 <table_set@@Base+0x1d8>
   14c28:	b	14e64 <table_set@@Base+0x2fc>
   14c2c:	ldr	r0, [r0, #4]
   14c30:	cmp	r0, #2
   14c34:	beq	14e24 <table_set@@Base+0x2bc>
   14c38:	b	14e64 <table_set@@Base+0x2fc>
   14c3c:	ldr	r0, [r0, #4]
   14c40:	cmp	r0, #3
   14c44:	beq	14e24 <table_set@@Base+0x2bc>
   14c48:	b	14e64 <table_set@@Base+0x2fc>
   14c4c:	ldr	r0, [r0, #4]
   14c50:	cmp	r0, #4
   14c54:	beq	14cc8 <table_set@@Base+0x160>
   14c58:	b	14e64 <table_set@@Base+0x2fc>
   14c5c:	ldr	r0, [r0, #4]
   14c60:	cmp	r0, #5
   14c64:	beq	14cc8 <table_set@@Base+0x160>
   14c68:	b	14e64 <table_set@@Base+0x2fc>
   14c6c:	ldr	r0, [r0, #4]
   14c70:	cmp	r0, #6
   14c74:	beq	14d40 <table_set@@Base+0x1d8>
   14c78:	b	14e64 <table_set@@Base+0x2fc>
   14c7c:	ldr	r0, [r0, #4]
   14c80:	cmp	r0, #7
   14c84:	beq	14d40 <table_set@@Base+0x1d8>
   14c88:	b	14e64 <table_set@@Base+0x2fc>
   14c8c:	ldr	r0, [r0, #4]
   14c90:	cmp	r0, #8
   14c94:	beq	14d88 <table_set@@Base+0x220>
   14c98:	b	14e64 <table_set@@Base+0x2fc>
   14c9c:	ldr	r0, [r0, #4]
   14ca0:	cmp	r0, #9
   14ca4:	beq	14d88 <table_set@@Base+0x220>
   14ca8:	b	14e64 <table_set@@Base+0x2fc>
   14cac:	ldr	r0, [r0, #4]
   14cb0:	cmp	r0, #10
   14cb4:	beq	14cc8 <table_set@@Base+0x160>
   14cb8:	b	14e64 <table_set@@Base+0x2fc>
   14cbc:	ldr	r0, [r0, #4]
   14cc0:	cmp	r0, #11
   14cc4:	bne	14e64 <table_set@@Base+0x2fc>
   14cc8:	ldr	r0, [r5]
   14ccc:	cmp	r0, #0
   14cd0:	bne	14ce8 <table_set@@Base+0x180>
   14cd4:	mov	r0, #2
   14cd8:	bl	11fdc <malloc@plt>
   14cdc:	cmp	r0, #0
   14ce0:	str	r0, [r5]
   14ce4:	beq	14e64 <table_set@@Base+0x2fc>
   14ce8:	ldrh	r1, [r8]
   14cec:	strh	r1, [r0]
   14cf0:	b	14e4c <table_set@@Base+0x2e4>
   14cf4:	ldr	r0, [r0, #4]
   14cf8:	cmp	r0, #12
   14cfc:	beq	14d40 <table_set@@Base+0x1d8>
   14d00:	b	14e64 <table_set@@Base+0x2fc>
   14d04:	ldr	r0, [r0, #4]
   14d08:	cmp	r0, #13
   14d0c:	beq	14d40 <table_set@@Base+0x1d8>
   14d10:	b	14e64 <table_set@@Base+0x2fc>
   14d14:	ldr	r0, [r0, #4]
   14d18:	cmp	r0, #14
   14d1c:	beq	14d88 <table_set@@Base+0x220>
   14d20:	b	14e64 <table_set@@Base+0x2fc>
   14d24:	ldr	r0, [r0, #4]
   14d28:	cmp	r0, #15
   14d2c:	beq	14d88 <table_set@@Base+0x220>
   14d30:	b	14e64 <table_set@@Base+0x2fc>
   14d34:	ldr	r0, [r0, #4]
   14d38:	cmp	r0, #16
   14d3c:	bne	14e64 <table_set@@Base+0x2fc>
   14d40:	ldr	r0, [r5]
   14d44:	cmp	r0, #0
   14d48:	bne	14d60 <table_set@@Base+0x1f8>
   14d4c:	mov	r0, #4
   14d50:	bl	11fdc <malloc@plt>
   14d54:	cmp	r0, #0
   14d58:	str	r0, [r5]
   14d5c:	beq	14e64 <table_set@@Base+0x2fc>
   14d60:	ldr	r1, [r8]
   14d64:	str	r1, [r0]
   14d68:	b	14e4c <table_set@@Base+0x2e4>
   14d6c:	ldr	r0, [r0, #4]
   14d70:	cmp	r0, #17
   14d74:	beq	14d88 <table_set@@Base+0x220>
   14d78:	b	14e64 <table_set@@Base+0x2fc>
   14d7c:	ldr	r0, [r0, #4]
   14d80:	cmp	r0, #18
   14d84:	bne	14e64 <table_set@@Base+0x2fc>
   14d88:	ldr	r0, [r5]
   14d8c:	cmp	r0, #0
   14d90:	bne	14da8 <table_set@@Base+0x240>
   14d94:	mov	r0, #8
   14d98:	bl	11fdc <malloc@plt>
   14d9c:	cmp	r0, #0
   14da0:	str	r0, [r5]
   14da4:	beq	14e64 <table_set@@Base+0x2fc>
   14da8:	ldr	r1, [r8]
   14dac:	ldr	r2, [r8, #4]
   14db0:	str	r2, [r0, #4]
   14db4:	str	r1, [r0]
   14db8:	b	14e4c <table_set@@Base+0x2e4>
   14dbc:	ldr	r0, [r0, #4]
   14dc0:	cmp	r0, #19
   14dc4:	beq	14e24 <table_set@@Base+0x2bc>
   14dc8:	b	14e64 <table_set@@Base+0x2fc>
   14dcc:	ldr	r0, [r0, #4]
   14dd0:	cmp	r0, #20
   14dd4:	beq	14e24 <table_set@@Base+0x2bc>
   14dd8:	b	14e64 <table_set@@Base+0x2fc>
   14ddc:	ldr	r0, [r0, #4]
   14de0:	cmp	r0, #21
   14de4:	bne	14e64 <table_set@@Base+0x2fc>
   14de8:	mov	r0, r8
   14dec:	bl	12000 <strlen@plt>
   14df0:	ldr	r2, [r5]
   14df4:	add	r1, r0, #1
   14df8:	mov	r0, r2
   14dfc:	bl	11fb8 <realloc@plt>
   14e00:	cmp	r0, #0
   14e04:	str	r0, [r5]
   14e08:	beq	14e64 <table_set@@Base+0x2fc>
   14e0c:	mov	r1, r8
   14e10:	bl	11fc4 <strcpy@plt>
   14e14:	b	14e4c <table_set@@Base+0x2e4>
   14e18:	ldr	r0, [r0, #4]
   14e1c:	cmp	r0, #22
   14e20:	bne	14e64 <table_set@@Base+0x2fc>
   14e24:	ldr	r0, [r5]
   14e28:	cmp	r0, #0
   14e2c:	bne	14e44 <table_set@@Base+0x2dc>
   14e30:	mov	r0, #1
   14e34:	bl	11fdc <malloc@plt>
   14e38:	cmp	r0, #0
   14e3c:	str	r0, [r5]
   14e40:	beq	14e64 <table_set@@Base+0x2fc>
   14e44:	ldrb	r1, [r8]
   14e48:	strb	r1, [r0]
   14e4c:	mov	r0, r6
   14e50:	mov	r1, r9
   14e54:	mov	r2, r4
   14e58:	mov	r3, #1
   14e5c:	bl	12ff8 <table_notify@@Base>
   14e60:	mov	r7, #0
   14e64:	mov	r0, r7
   14e68:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14e6c:	ldr	r0, [r0, #4]
   14e70:	cmp	r0, #23
   14e74:	bne	14e64 <table_set@@Base+0x2fc>
   14e78:	str	r8, [r5]
   14e7c:	b	14e4c <table_set@@Base+0x2e4>

00014e80 <table_set_bool@@Base>:
   14e80:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14e84:	add	fp, sp, #24
   14e88:	mov	r8, r3
   14e8c:	mov	r4, r2
   14e90:	mov	r9, r1
   14e94:	mov	r6, r0
   14e98:	bl	130b0 <table_get_cell_ptr@@Base>
   14e9c:	mov	r5, r0
   14ea0:	mov	r0, r6
   14ea4:	mov	r1, r4
   14ea8:	bl	13b4c <table_get_col_ptr@@Base>
   14eac:	ldr	r0, [r0, #4]
   14eb0:	mvn	r7, #0
   14eb4:	cmp	r0, #22
   14eb8:	bne	14ef8 <table_set_bool@@Base+0x78>
   14ebc:	ldr	r0, [r5]
   14ec0:	cmp	r0, #0
   14ec4:	bne	14edc <table_set_bool@@Base+0x5c>
   14ec8:	mov	r0, #1
   14ecc:	bl	11fdc <malloc@plt>
   14ed0:	cmp	r0, #0
   14ed4:	str	r0, [r5]
   14ed8:	beq	14ef8 <table_set_bool@@Base+0x78>
   14edc:	strb	r8, [r0]
   14ee0:	mov	r0, r6
   14ee4:	mov	r1, r9
   14ee8:	mov	r2, r4
   14eec:	mov	r3, #1
   14ef0:	bl	12ff8 <table_notify@@Base>
   14ef4:	mov	r7, #0
   14ef8:	mov	r0, r7
   14efc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014f00 <table_set_int@@Base>:
   14f00:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14f04:	add	fp, sp, #24
   14f08:	mov	r8, r3
   14f0c:	mov	r4, r2
   14f10:	mov	r5, r1
   14f14:	mov	r6, r0
   14f18:	bl	130b0 <table_get_cell_ptr@@Base>
   14f1c:	mov	r9, r0
   14f20:	mov	r0, r6
   14f24:	mov	r1, r4
   14f28:	bl	13b4c <table_get_col_ptr@@Base>
   14f2c:	ldr	r0, [r0, #4]
   14f30:	mvn	r7, #0
   14f34:	cmp	r0, #0
   14f38:	bne	14f78 <table_set_int@@Base+0x78>
   14f3c:	ldr	r0, [r9]
   14f40:	cmp	r0, #0
   14f44:	bne	14f5c <table_set_int@@Base+0x5c>
   14f48:	mov	r0, #4
   14f4c:	bl	11fdc <malloc@plt>
   14f50:	cmp	r0, #0
   14f54:	str	r0, [r9]
   14f58:	beq	14f78 <table_set_int@@Base+0x78>
   14f5c:	str	r8, [r0]
   14f60:	mov	r0, r6
   14f64:	mov	r1, r5
   14f68:	mov	r2, r4
   14f6c:	mov	r3, #1
   14f70:	bl	12ff8 <table_notify@@Base>
   14f74:	mov	r7, #0
   14f78:	mov	r0, r7
   14f7c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014f80 <table_set_uint@@Base>:
   14f80:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14f84:	add	fp, sp, #24
   14f88:	mov	r8, r3
   14f8c:	mov	r4, r2
   14f90:	mov	r5, r1
   14f94:	mov	r6, r0
   14f98:	bl	130b0 <table_get_cell_ptr@@Base>
   14f9c:	mov	r9, r0
   14fa0:	mov	r0, r6
   14fa4:	mov	r1, r4
   14fa8:	bl	13b4c <table_get_col_ptr@@Base>
   14fac:	ldr	r0, [r0, #4]
   14fb0:	mvn	r7, #0
   14fb4:	cmp	r0, #1
   14fb8:	bne	14ff8 <table_set_uint@@Base+0x78>
   14fbc:	ldr	r0, [r9]
   14fc0:	cmp	r0, #0
   14fc4:	bne	14fdc <table_set_uint@@Base+0x5c>
   14fc8:	mov	r0, #4
   14fcc:	bl	11fdc <malloc@plt>
   14fd0:	cmp	r0, #0
   14fd4:	str	r0, [r9]
   14fd8:	beq	14ff8 <table_set_uint@@Base+0x78>
   14fdc:	str	r8, [r0]
   14fe0:	mov	r0, r6
   14fe4:	mov	r1, r5
   14fe8:	mov	r2, r4
   14fec:	mov	r3, #1
   14ff0:	bl	12ff8 <table_notify@@Base>
   14ff4:	mov	r7, #0
   14ff8:	mov	r0, r7
   14ffc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015000 <table_set_int8@@Base>:
   15000:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15004:	add	fp, sp, #24
   15008:	mov	r8, r3
   1500c:	mov	r4, r2
   15010:	mov	r9, r1
   15014:	mov	r6, r0
   15018:	bl	130b0 <table_get_cell_ptr@@Base>
   1501c:	mov	r5, r0
   15020:	mov	r0, r6
   15024:	mov	r1, r4
   15028:	bl	13b4c <table_get_col_ptr@@Base>
   1502c:	ldr	r0, [r0, #4]
   15030:	mvn	r7, #0
   15034:	cmp	r0, #2
   15038:	bne	15078 <table_set_int8@@Base+0x78>
   1503c:	ldr	r0, [r5]
   15040:	cmp	r0, #0
   15044:	bne	1505c <table_set_int8@@Base+0x5c>
   15048:	mov	r0, #1
   1504c:	bl	11fdc <malloc@plt>
   15050:	cmp	r0, #0
   15054:	str	r0, [r5]
   15058:	beq	15078 <table_set_int8@@Base+0x78>
   1505c:	strb	r8, [r0]
   15060:	mov	r0, r6
   15064:	mov	r1, r9
   15068:	mov	r2, r4
   1506c:	mov	r3, #1
   15070:	bl	12ff8 <table_notify@@Base>
   15074:	mov	r7, #0
   15078:	mov	r0, r7
   1507c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015080 <table_set_uint8@@Base>:
   15080:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15084:	add	fp, sp, #24
   15088:	mov	r8, r3
   1508c:	mov	r4, r2
   15090:	mov	r9, r1
   15094:	mov	r6, r0
   15098:	bl	130b0 <table_get_cell_ptr@@Base>
   1509c:	mov	r5, r0
   150a0:	mov	r0, r6
   150a4:	mov	r1, r4
   150a8:	bl	13b4c <table_get_col_ptr@@Base>
   150ac:	ldr	r0, [r0, #4]
   150b0:	mvn	r7, #0
   150b4:	cmp	r0, #3
   150b8:	bne	150f8 <table_set_uint8@@Base+0x78>
   150bc:	ldr	r0, [r5]
   150c0:	cmp	r0, #0
   150c4:	bne	150dc <table_set_uint8@@Base+0x5c>
   150c8:	mov	r0, #1
   150cc:	bl	11fdc <malloc@plt>
   150d0:	cmp	r0, #0
   150d4:	str	r0, [r5]
   150d8:	beq	150f8 <table_set_uint8@@Base+0x78>
   150dc:	strb	r8, [r0]
   150e0:	mov	r0, r6
   150e4:	mov	r1, r9
   150e8:	mov	r2, r4
   150ec:	mov	r3, #1
   150f0:	bl	12ff8 <table_notify@@Base>
   150f4:	mov	r7, #0
   150f8:	mov	r0, r7
   150fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015100 <table_set_int16@@Base>:
   15100:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15104:	add	fp, sp, #24
   15108:	mov	r8, r3
   1510c:	mov	r4, r2
   15110:	mov	r9, r1
   15114:	mov	r6, r0
   15118:	bl	130b0 <table_get_cell_ptr@@Base>
   1511c:	mov	r5, r0
   15120:	mov	r0, r6
   15124:	mov	r1, r4
   15128:	bl	13b4c <table_get_col_ptr@@Base>
   1512c:	ldr	r0, [r0, #4]
   15130:	mvn	r7, #0
   15134:	cmp	r0, #4
   15138:	bne	15178 <table_set_int16@@Base+0x78>
   1513c:	ldr	r0, [r5]
   15140:	cmp	r0, #0
   15144:	bne	1515c <table_set_int16@@Base+0x5c>
   15148:	mov	r0, #2
   1514c:	bl	11fdc <malloc@plt>
   15150:	cmp	r0, #0
   15154:	str	r0, [r5]
   15158:	beq	15178 <table_set_int16@@Base+0x78>
   1515c:	strh	r8, [r0]
   15160:	mov	r0, r6
   15164:	mov	r1, r9
   15168:	mov	r2, r4
   1516c:	mov	r3, #1
   15170:	bl	12ff8 <table_notify@@Base>
   15174:	mov	r7, #0
   15178:	mov	r0, r7
   1517c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015180 <table_set_uint16@@Base>:
   15180:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15184:	add	fp, sp, #24
   15188:	mov	r8, r3
   1518c:	mov	r4, r2
   15190:	mov	r9, r1
   15194:	mov	r6, r0
   15198:	bl	130b0 <table_get_cell_ptr@@Base>
   1519c:	mov	r5, r0
   151a0:	mov	r0, r6
   151a4:	mov	r1, r4
   151a8:	bl	13b4c <table_get_col_ptr@@Base>
   151ac:	ldr	r0, [r0, #4]
   151b0:	mvn	r7, #0
   151b4:	cmp	r0, #5
   151b8:	bne	151f8 <table_set_uint16@@Base+0x78>
   151bc:	ldr	r0, [r5]
   151c0:	cmp	r0, #0
   151c4:	bne	151dc <table_set_uint16@@Base+0x5c>
   151c8:	mov	r0, #2
   151cc:	bl	11fdc <malloc@plt>
   151d0:	cmp	r0, #0
   151d4:	str	r0, [r5]
   151d8:	beq	151f8 <table_set_uint16@@Base+0x78>
   151dc:	strh	r8, [r0]
   151e0:	mov	r0, r6
   151e4:	mov	r1, r9
   151e8:	mov	r2, r4
   151ec:	mov	r3, #1
   151f0:	bl	12ff8 <table_notify@@Base>
   151f4:	mov	r7, #0
   151f8:	mov	r0, r7
   151fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015200 <table_set_int32@@Base>:
   15200:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15204:	add	fp, sp, #24
   15208:	mov	r8, r3
   1520c:	mov	r4, r2
   15210:	mov	r5, r1
   15214:	mov	r6, r0
   15218:	bl	130b0 <table_get_cell_ptr@@Base>
   1521c:	mov	r9, r0
   15220:	mov	r0, r6
   15224:	mov	r1, r4
   15228:	bl	13b4c <table_get_col_ptr@@Base>
   1522c:	ldr	r0, [r0, #4]
   15230:	mvn	r7, #0
   15234:	cmp	r0, #6
   15238:	bne	15278 <table_set_int32@@Base+0x78>
   1523c:	ldr	r0, [r9]
   15240:	cmp	r0, #0
   15244:	bne	1525c <table_set_int32@@Base+0x5c>
   15248:	mov	r0, #4
   1524c:	bl	11fdc <malloc@plt>
   15250:	cmp	r0, #0
   15254:	str	r0, [r9]
   15258:	beq	15278 <table_set_int32@@Base+0x78>
   1525c:	str	r8, [r0]
   15260:	mov	r0, r6
   15264:	mov	r1, r5
   15268:	mov	r2, r4
   1526c:	mov	r3, #1
   15270:	bl	12ff8 <table_notify@@Base>
   15274:	mov	r7, #0
   15278:	mov	r0, r7
   1527c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015280 <table_set_uint32@@Base>:
   15280:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15284:	add	fp, sp, #24
   15288:	mov	r8, r3
   1528c:	mov	r4, r2
   15290:	mov	r5, r1
   15294:	mov	r6, r0
   15298:	bl	130b0 <table_get_cell_ptr@@Base>
   1529c:	mov	r9, r0
   152a0:	mov	r0, r6
   152a4:	mov	r1, r4
   152a8:	bl	13b4c <table_get_col_ptr@@Base>
   152ac:	ldr	r0, [r0, #4]
   152b0:	mvn	r7, #0
   152b4:	cmp	r0, #7
   152b8:	bne	152f8 <table_set_uint32@@Base+0x78>
   152bc:	ldr	r0, [r9]
   152c0:	cmp	r0, #0
   152c4:	bne	152dc <table_set_uint32@@Base+0x5c>
   152c8:	mov	r0, #4
   152cc:	bl	11fdc <malloc@plt>
   152d0:	cmp	r0, #0
   152d4:	str	r0, [r9]
   152d8:	beq	152f8 <table_set_uint32@@Base+0x78>
   152dc:	str	r8, [r0]
   152e0:	mov	r0, r6
   152e4:	mov	r1, r5
   152e8:	mov	r2, r4
   152ec:	mov	r3, #1
   152f0:	bl	12ff8 <table_notify@@Base>
   152f4:	mov	r7, #0
   152f8:	mov	r0, r7
   152fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015300 <table_set_int64@@Base>:
   15300:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15304:	add	fp, sp, #24
   15308:	mov	r4, r2
   1530c:	mov	r8, r1
   15310:	mov	r6, r0
   15314:	bl	130b0 <table_get_cell_ptr@@Base>
   15318:	mov	r5, r0
   1531c:	mov	r0, r6
   15320:	mov	r1, r4
   15324:	bl	13b4c <table_get_col_ptr@@Base>
   15328:	ldr	r0, [r0, #4]
   1532c:	mvn	r7, #0
   15330:	cmp	r0, #8
   15334:	bne	15380 <table_set_int64@@Base+0x80>
   15338:	ldr	r0, [r5]
   1533c:	cmp	r0, #0
   15340:	bne	15358 <table_set_int64@@Base+0x58>
   15344:	mov	r0, #8
   15348:	bl	11fdc <malloc@plt>
   1534c:	cmp	r0, #0
   15350:	str	r0, [r5]
   15354:	beq	15380 <table_set_int64@@Base+0x80>
   15358:	ldr	r1, [fp, #12]
   1535c:	ldr	r2, [fp, #8]
   15360:	mov	r3, #1
   15364:	str	r2, [r0]
   15368:	str	r1, [r0, #4]
   1536c:	mov	r0, r6
   15370:	mov	r1, r8
   15374:	mov	r2, r4
   15378:	bl	12ff8 <table_notify@@Base>
   1537c:	mov	r7, #0
   15380:	mov	r0, r7
   15384:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015388 <table_set_uint64@@Base>:
   15388:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1538c:	add	fp, sp, #24
   15390:	mov	r4, r2
   15394:	mov	r8, r1
   15398:	mov	r6, r0
   1539c:	bl	130b0 <table_get_cell_ptr@@Base>
   153a0:	mov	r5, r0
   153a4:	mov	r0, r6
   153a8:	mov	r1, r4
   153ac:	bl	13b4c <table_get_col_ptr@@Base>
   153b0:	ldr	r0, [r0, #4]
   153b4:	mvn	r7, #0
   153b8:	cmp	r0, #9
   153bc:	bne	15408 <table_set_uint64@@Base+0x80>
   153c0:	ldr	r0, [r5]
   153c4:	cmp	r0, #0
   153c8:	bne	153e0 <table_set_uint64@@Base+0x58>
   153cc:	mov	r0, #8
   153d0:	bl	11fdc <malloc@plt>
   153d4:	cmp	r0, #0
   153d8:	str	r0, [r5]
   153dc:	beq	15408 <table_set_uint64@@Base+0x80>
   153e0:	ldr	r1, [fp, #12]
   153e4:	ldr	r2, [fp, #8]
   153e8:	mov	r3, #1
   153ec:	str	r2, [r0]
   153f0:	str	r1, [r0, #4]
   153f4:	mov	r0, r6
   153f8:	mov	r1, r8
   153fc:	mov	r2, r4
   15400:	bl	12ff8 <table_notify@@Base>
   15404:	mov	r7, #0
   15408:	mov	r0, r7
   1540c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015410 <table_set_short@@Base>:
   15410:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15414:	add	fp, sp, #24
   15418:	mov	r8, r3
   1541c:	mov	r4, r2
   15420:	mov	r9, r1
   15424:	mov	r6, r0
   15428:	bl	130b0 <table_get_cell_ptr@@Base>
   1542c:	mov	r5, r0
   15430:	mov	r0, r6
   15434:	mov	r1, r4
   15438:	bl	13b4c <table_get_col_ptr@@Base>
   1543c:	ldr	r0, [r0, #4]
   15440:	mvn	r7, #0
   15444:	cmp	r0, #10
   15448:	bne	15488 <table_set_short@@Base+0x78>
   1544c:	ldr	r0, [r5]
   15450:	cmp	r0, #0
   15454:	bne	1546c <table_set_short@@Base+0x5c>
   15458:	mov	r0, #2
   1545c:	bl	11fdc <malloc@plt>
   15460:	cmp	r0, #0
   15464:	str	r0, [r5]
   15468:	beq	15488 <table_set_short@@Base+0x78>
   1546c:	strh	r8, [r0]
   15470:	mov	r0, r6
   15474:	mov	r1, r9
   15478:	mov	r2, r4
   1547c:	mov	r3, #1
   15480:	bl	12ff8 <table_notify@@Base>
   15484:	mov	r7, #0
   15488:	mov	r0, r7
   1548c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015490 <table_set_ushort@@Base>:
   15490:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15494:	add	fp, sp, #24
   15498:	mov	r8, r3
   1549c:	mov	r4, r2
   154a0:	mov	r9, r1
   154a4:	mov	r6, r0
   154a8:	bl	130b0 <table_get_cell_ptr@@Base>
   154ac:	mov	r5, r0
   154b0:	mov	r0, r6
   154b4:	mov	r1, r4
   154b8:	bl	13b4c <table_get_col_ptr@@Base>
   154bc:	ldr	r0, [r0, #4]
   154c0:	mvn	r7, #0
   154c4:	cmp	r0, #11
   154c8:	bne	15508 <table_set_ushort@@Base+0x78>
   154cc:	ldr	r0, [r5]
   154d0:	cmp	r0, #0
   154d4:	bne	154ec <table_set_ushort@@Base+0x5c>
   154d8:	mov	r0, #2
   154dc:	bl	11fdc <malloc@plt>
   154e0:	cmp	r0, #0
   154e4:	str	r0, [r5]
   154e8:	beq	15508 <table_set_ushort@@Base+0x78>
   154ec:	strh	r8, [r0]
   154f0:	mov	r0, r6
   154f4:	mov	r1, r9
   154f8:	mov	r2, r4
   154fc:	mov	r3, #1
   15500:	bl	12ff8 <table_notify@@Base>
   15504:	mov	r7, #0
   15508:	mov	r0, r7
   1550c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015510 <table_set_long@@Base>:
   15510:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15514:	add	fp, sp, #24
   15518:	mov	r8, r3
   1551c:	mov	r4, r2
   15520:	mov	r5, r1
   15524:	mov	r6, r0
   15528:	bl	130b0 <table_get_cell_ptr@@Base>
   1552c:	mov	r9, r0
   15530:	mov	r0, r6
   15534:	mov	r1, r4
   15538:	bl	13b4c <table_get_col_ptr@@Base>
   1553c:	ldr	r0, [r0, #4]
   15540:	mvn	r7, #0
   15544:	cmp	r0, #12
   15548:	bne	15588 <table_set_long@@Base+0x78>
   1554c:	ldr	r0, [r9]
   15550:	cmp	r0, #0
   15554:	bne	1556c <table_set_long@@Base+0x5c>
   15558:	mov	r0, #4
   1555c:	bl	11fdc <malloc@plt>
   15560:	cmp	r0, #0
   15564:	str	r0, [r9]
   15568:	beq	15588 <table_set_long@@Base+0x78>
   1556c:	str	r8, [r0]
   15570:	mov	r0, r6
   15574:	mov	r1, r5
   15578:	mov	r2, r4
   1557c:	mov	r3, #1
   15580:	bl	12ff8 <table_notify@@Base>
   15584:	mov	r7, #0
   15588:	mov	r0, r7
   1558c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015590 <table_set_ulong@@Base>:
   15590:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15594:	add	fp, sp, #24
   15598:	mov	r8, r3
   1559c:	mov	r4, r2
   155a0:	mov	r5, r1
   155a4:	mov	r6, r0
   155a8:	bl	130b0 <table_get_cell_ptr@@Base>
   155ac:	mov	r9, r0
   155b0:	mov	r0, r6
   155b4:	mov	r1, r4
   155b8:	bl	13b4c <table_get_col_ptr@@Base>
   155bc:	ldr	r0, [r0, #4]
   155c0:	mvn	r7, #0
   155c4:	cmp	r0, #13
   155c8:	bne	15608 <table_set_ulong@@Base+0x78>
   155cc:	ldr	r0, [r9]
   155d0:	cmp	r0, #0
   155d4:	bne	155ec <table_set_ulong@@Base+0x5c>
   155d8:	mov	r0, #4
   155dc:	bl	11fdc <malloc@plt>
   155e0:	cmp	r0, #0
   155e4:	str	r0, [r9]
   155e8:	beq	15608 <table_set_ulong@@Base+0x78>
   155ec:	str	r8, [r0]
   155f0:	mov	r0, r6
   155f4:	mov	r1, r5
   155f8:	mov	r2, r4
   155fc:	mov	r3, #1
   15600:	bl	12ff8 <table_notify@@Base>
   15604:	mov	r7, #0
   15608:	mov	r0, r7
   1560c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015610 <table_set_llong@@Base>:
   15610:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15614:	add	fp, sp, #24
   15618:	mov	r4, r2
   1561c:	mov	r8, r1
   15620:	mov	r6, r0
   15624:	bl	130b0 <table_get_cell_ptr@@Base>
   15628:	mov	r5, r0
   1562c:	mov	r0, r6
   15630:	mov	r1, r4
   15634:	bl	13b4c <table_get_col_ptr@@Base>
   15638:	ldr	r0, [r0, #4]
   1563c:	mvn	r7, #0
   15640:	cmp	r0, #14
   15644:	bne	15690 <table_set_llong@@Base+0x80>
   15648:	ldr	r0, [r5]
   1564c:	cmp	r0, #0
   15650:	bne	15668 <table_set_llong@@Base+0x58>
   15654:	mov	r0, #8
   15658:	bl	11fdc <malloc@plt>
   1565c:	cmp	r0, #0
   15660:	str	r0, [r5]
   15664:	beq	15690 <table_set_llong@@Base+0x80>
   15668:	ldr	r1, [fp, #12]
   1566c:	ldr	r2, [fp, #8]
   15670:	mov	r3, #1
   15674:	str	r2, [r0]
   15678:	str	r1, [r0, #4]
   1567c:	mov	r0, r6
   15680:	mov	r1, r8
   15684:	mov	r2, r4
   15688:	bl	12ff8 <table_notify@@Base>
   1568c:	mov	r7, #0
   15690:	mov	r0, r7
   15694:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015698 <table_set_ullong@@Base>:
   15698:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1569c:	add	fp, sp, #24
   156a0:	mov	r4, r2
   156a4:	mov	r8, r1
   156a8:	mov	r6, r0
   156ac:	bl	130b0 <table_get_cell_ptr@@Base>
   156b0:	mov	r5, r0
   156b4:	mov	r0, r6
   156b8:	mov	r1, r4
   156bc:	bl	13b4c <table_get_col_ptr@@Base>
   156c0:	ldr	r0, [r0, #4]
   156c4:	mvn	r7, #0
   156c8:	cmp	r0, #15
   156cc:	bne	15718 <table_set_ullong@@Base+0x80>
   156d0:	ldr	r0, [r5]
   156d4:	cmp	r0, #0
   156d8:	bne	156f0 <table_set_ullong@@Base+0x58>
   156dc:	mov	r0, #8
   156e0:	bl	11fdc <malloc@plt>
   156e4:	cmp	r0, #0
   156e8:	str	r0, [r5]
   156ec:	beq	15718 <table_set_ullong@@Base+0x80>
   156f0:	ldr	r1, [fp, #12]
   156f4:	ldr	r2, [fp, #8]
   156f8:	mov	r3, #1
   156fc:	str	r2, [r0]
   15700:	str	r1, [r0, #4]
   15704:	mov	r0, r6
   15708:	mov	r1, r8
   1570c:	mov	r2, r4
   15710:	bl	12ff8 <table_notify@@Base>
   15714:	mov	r7, #0
   15718:	mov	r0, r7
   1571c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015720 <table_set_float@@Base>:
   15720:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15724:	add	fp, sp, #24
   15728:	vpush	{d8}
   1572c:	vmov.f32	s16, s0
   15730:	mov	r4, r2
   15734:	mov	r8, r1
   15738:	mov	r6, r0
   1573c:	bl	130b0 <table_get_cell_ptr@@Base>
   15740:	mov	r5, r0
   15744:	mov	r0, r6
   15748:	mov	r1, r4
   1574c:	bl	13b4c <table_get_col_ptr@@Base>
   15750:	ldr	r0, [r0, #4]
   15754:	mvn	r7, #0
   15758:	cmp	r0, #16
   1575c:	bne	157a0 <table_set_float@@Base+0x80>
   15760:	ldr	r0, [r5]
   15764:	cmp	r0, #0
   15768:	bne	15780 <table_set_float@@Base+0x60>
   1576c:	mov	r0, #4
   15770:	bl	11fdc <malloc@plt>
   15774:	cmp	r0, #0
   15778:	str	r0, [r5]
   1577c:	beq	157a0 <table_set_float@@Base+0x80>
   15780:	vmov	r1, s16
   15784:	mov	r2, r4
   15788:	mov	r3, #1
   1578c:	str	r1, [r0]
   15790:	mov	r0, r6
   15794:	mov	r1, r8
   15798:	bl	12ff8 <table_notify@@Base>
   1579c:	mov	r7, #0
   157a0:	mov	r0, r7
   157a4:	vpop	{d8}
   157a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000157ac <table_set_double@@Base>:
   157ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   157b0:	add	fp, sp, #24
   157b4:	vpush	{d8}
   157b8:	vorr	d8, d0, d0
   157bc:	mov	r4, r2
   157c0:	mov	r5, r1
   157c4:	mov	r6, r0
   157c8:	bl	130b0 <table_get_cell_ptr@@Base>
   157cc:	mov	r8, r0
   157d0:	mov	r0, r6
   157d4:	mov	r1, r4
   157d8:	bl	13b4c <table_get_col_ptr@@Base>
   157dc:	ldr	r0, [r0, #4]
   157e0:	mvn	r7, #0
   157e4:	cmp	r0, #17
   157e8:	bne	15828 <table_set_double@@Base+0x7c>
   157ec:	ldr	r0, [r8]
   157f0:	cmp	r0, #0
   157f4:	bne	1580c <table_set_double@@Base+0x60>
   157f8:	mov	r0, #8
   157fc:	bl	11fdc <malloc@plt>
   15800:	cmp	r0, #0
   15804:	str	r0, [r8]
   15808:	beq	15828 <table_set_double@@Base+0x7c>
   1580c:	vst1.8	{d8}, [r0]
   15810:	mov	r0, r6
   15814:	mov	r1, r5
   15818:	mov	r2, r4
   1581c:	mov	r3, #1
   15820:	bl	12ff8 <table_notify@@Base>
   15824:	mov	r7, #0
   15828:	mov	r0, r7
   1582c:	vpop	{d8}
   15830:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015834 <table_set_ldouble@@Base>:
   15834:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15838:	add	fp, sp, #24
   1583c:	vpush	{d8}
   15840:	vorr	d8, d0, d0
   15844:	mov	r4, r2
   15848:	mov	r5, r1
   1584c:	mov	r6, r0
   15850:	bl	130b0 <table_get_cell_ptr@@Base>
   15854:	mov	r8, r0
   15858:	mov	r0, r6
   1585c:	mov	r1, r4
   15860:	bl	13b4c <table_get_col_ptr@@Base>
   15864:	ldr	r0, [r0, #4]
   15868:	mvn	r7, #0
   1586c:	cmp	r0, #18
   15870:	bne	158b0 <table_set_ldouble@@Base+0x7c>
   15874:	ldr	r0, [r8]
   15878:	cmp	r0, #0
   1587c:	bne	15894 <table_set_ldouble@@Base+0x60>
   15880:	mov	r0, #8
   15884:	bl	11fdc <malloc@plt>
   15888:	cmp	r0, #0
   1588c:	str	r0, [r8]
   15890:	beq	158b0 <table_set_ldouble@@Base+0x7c>
   15894:	vst1.8	{d8}, [r0]
   15898:	mov	r0, r6
   1589c:	mov	r1, r5
   158a0:	mov	r2, r4
   158a4:	mov	r3, #1
   158a8:	bl	12ff8 <table_notify@@Base>
   158ac:	mov	r7, #0
   158b0:	mov	r0, r7
   158b4:	vpop	{d8}
   158b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000158bc <table_set_string@@Base>:
   158bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   158c0:	add	fp, sp, #24
   158c4:	mov	r8, r3
   158c8:	mov	r4, r2
   158cc:	mov	r9, r1
   158d0:	mov	r6, r0
   158d4:	bl	130b0 <table_get_cell_ptr@@Base>
   158d8:	mov	r5, r0
   158dc:	mov	r0, r6
   158e0:	mov	r1, r4
   158e4:	bl	13b4c <table_get_col_ptr@@Base>
   158e8:	ldr	r0, [r0, #4]
   158ec:	mvn	r7, #0
   158f0:	cmp	r0, #21
   158f4:	bne	1593c <table_set_string@@Base+0x80>
   158f8:	mov	r0, r8
   158fc:	bl	12000 <strlen@plt>
   15900:	ldr	r2, [r5]
   15904:	add	r1, r0, #1
   15908:	mov	r0, r2
   1590c:	bl	11fb8 <realloc@plt>
   15910:	cmp	r0, #0
   15914:	str	r0, [r5]
   15918:	beq	1593c <table_set_string@@Base+0x80>
   1591c:	mov	r1, r8
   15920:	bl	11fc4 <strcpy@plt>
   15924:	mov	r0, r6
   15928:	mov	r1, r9
   1592c:	mov	r2, r4
   15930:	mov	r3, #1
   15934:	bl	12ff8 <table_notify@@Base>
   15938:	mov	r7, #0
   1593c:	mov	r0, r7
   15940:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015944 <table_set_char@@Base>:
   15944:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15948:	add	fp, sp, #24
   1594c:	mov	r8, r3
   15950:	mov	r4, r2
   15954:	mov	r9, r1
   15958:	mov	r6, r0
   1595c:	bl	130b0 <table_get_cell_ptr@@Base>
   15960:	mov	r5, r0
   15964:	mov	r0, r6
   15968:	mov	r1, r4
   1596c:	bl	13b4c <table_get_col_ptr@@Base>
   15970:	ldr	r0, [r0, #4]
   15974:	mvn	r7, #0
   15978:	cmp	r0, #19
   1597c:	bne	159bc <table_set_char@@Base+0x78>
   15980:	ldr	r0, [r5]
   15984:	cmp	r0, #0
   15988:	bne	159a0 <table_set_char@@Base+0x5c>
   1598c:	mov	r0, #1
   15990:	bl	11fdc <malloc@plt>
   15994:	cmp	r0, #0
   15998:	str	r0, [r5]
   1599c:	beq	159bc <table_set_char@@Base+0x78>
   159a0:	strb	r8, [r0]
   159a4:	mov	r0, r6
   159a8:	mov	r1, r9
   159ac:	mov	r2, r4
   159b0:	mov	r3, #1
   159b4:	bl	12ff8 <table_notify@@Base>
   159b8:	mov	r7, #0
   159bc:	mov	r0, r7
   159c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000159c4 <table_set_uchar@@Base>:
   159c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   159c8:	add	fp, sp, #24
   159cc:	mov	r8, r3
   159d0:	mov	r4, r2
   159d4:	mov	r9, r1
   159d8:	mov	r6, r0
   159dc:	bl	130b0 <table_get_cell_ptr@@Base>
   159e0:	mov	r5, r0
   159e4:	mov	r0, r6
   159e8:	mov	r1, r4
   159ec:	bl	13b4c <table_get_col_ptr@@Base>
   159f0:	ldr	r0, [r0, #4]
   159f4:	mvn	r7, #0
   159f8:	cmp	r0, #20
   159fc:	bne	15a3c <table_set_uchar@@Base+0x78>
   15a00:	ldr	r0, [r5]
   15a04:	cmp	r0, #0
   15a08:	bne	15a20 <table_set_uchar@@Base+0x5c>
   15a0c:	mov	r0, #1
   15a10:	bl	11fdc <malloc@plt>
   15a14:	cmp	r0, #0
   15a18:	str	r0, [r5]
   15a1c:	beq	15a3c <table_set_uchar@@Base+0x78>
   15a20:	strb	r8, [r0]
   15a24:	mov	r0, r6
   15a28:	mov	r1, r9
   15a2c:	mov	r2, r4
   15a30:	mov	r3, #1
   15a34:	bl	12ff8 <table_notify@@Base>
   15a38:	mov	r7, #0
   15a3c:	mov	r0, r7
   15a40:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015a44 <table_set_ptr@@Base>:
   15a44:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15a48:	add	fp, sp, #24
   15a4c:	mov	r8, r3
   15a50:	mov	r4, r2
   15a54:	mov	r5, r1
   15a58:	mov	r6, r0
   15a5c:	bl	130b0 <table_get_cell_ptr@@Base>
   15a60:	mov	r7, r0
   15a64:	mov	r0, r6
   15a68:	mov	r1, r4
   15a6c:	bl	13b4c <table_get_col_ptr@@Base>
   15a70:	ldr	r1, [r0, #4]
   15a74:	mvn	r0, #0
   15a78:	cmp	r1, #23
   15a7c:	bne	15a9c <table_set_ptr@@Base+0x58>
   15a80:	mov	r0, r6
   15a84:	mov	r1, r5
   15a88:	mov	r2, r4
   15a8c:	mov	r3, #1
   15a90:	str	r8, [r7]
   15a94:	bl	12ff8 <table_notify@@Base>
   15a98:	mov	r0, #0
   15a9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015aa0 <table_column_sort@@Base>:
   15aa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15aa4:	add	fp, sp, #28
   15aa8:	sub	sp, sp, #44	; 0x2c
   15aac:	mov	r4, r0
   15ab0:	cmp	r3, #1
   15ab4:	str	r2, [sp, #16]
   15ab8:	str	r1, [sp, #20]
   15abc:	str	r3, [sp, #12]
   15ac0:	blt	15cd0 <table_column_sort@@Base+0x230>
   15ac4:	ldr	r0, [sp, #20]
   15ac8:	mov	r9, #0
   15acc:	sub	sl, r0, #4
   15ad0:	b	15b28 <table_column_sort@@Base+0x88>
   15ad4:	ldr	r0, [sp, #20]
   15ad8:	mov	r1, #4
   15adc:	ldr	r8, [r0]
   15ae0:	ldr	r0, [sp, #16]
   15ae4:	ldr	r6, [r0]
   15ae8:	mov	r0, r5
   15aec:	bl	11f7c <calloc@plt>
   15af0:	mov	r7, r0
   15af4:	sub	r0, r5, #1
   15af8:	mov	r2, r8
   15afc:	mov	r3, #0
   15b00:	stm	sp, {r0, r6}
   15b04:	mov	r0, r4
   15b08:	mov	r1, r7
   15b0c:	bl	15cec <table_column_sort@@Base+0x24c>
   15b10:	mov	r0, r7
   15b14:	bl	11fa0 <free@plt>
   15b18:	ldr	r0, [sp, #12]
   15b1c:	add	r9, r9, #1
   15b20:	cmp	r9, r0
   15b24:	beq	15cd0 <table_column_sort@@Base+0x230>
   15b28:	mov	r0, r4
   15b2c:	bl	1494c <table_get_row_length@@Base>
   15b30:	mov	r5, r0
   15b34:	cmp	r9, #0
   15b38:	beq	15ad4 <table_column_sort@@Base+0x34>
   15b3c:	ldr	r0, [sp, #20]
   15b40:	add	r0, r0, r9, lsl #2
   15b44:	ldr	r1, [r0, #-4]
   15b48:	mov	r0, r4
   15b4c:	bl	13f50 <table_get_column_compare_function@@Base>
   15b50:	cmp	r5, #1
   15b54:	blt	15b18 <table_column_sort@@Base+0x78>
   15b58:	mov	r6, r0
   15b5c:	sub	r0, r5, #1
   15b60:	mov	r7, #0
   15b64:	mvn	r2, #0
   15b68:	mvn	r8, #0
   15b6c:	str	r0, [sp, #24]
   15b70:	str	r9, [fp, #-32]	; 0xffffffe0
   15b74:	str	r5, [sp, #32]
   15b78:	cmp	r7, #0
   15b7c:	bne	15b9c <table_column_sort@@Base+0xfc>
   15b80:	b	15c08 <table_column_sort@@Base+0x168>
   15b84:	mvn	r8, #0
   15b88:	add	r7, r7, #1
   15b8c:	cmp	r7, r5
   15b90:	beq	15b18 <table_column_sort@@Base+0x78>
   15b94:	cmp	r7, #0
   15b98:	beq	15c08 <table_column_sort@@Base+0x168>
   15b9c:	str	r8, [sp, #36]	; 0x24
   15ba0:	str	r2, [sp, #28]
   15ba4:	sub	r8, r7, #1
   15ba8:	mov	r5, r9
   15bac:	ldr	r2, [sl, r5, lsl #2]
   15bb0:	mov	r0, r4
   15bb4:	mov	r1, r7
   15bb8:	bl	14674 <table_get@@Base>
   15bbc:	ldr	r2, [sl, r5, lsl #2]
   15bc0:	mov	r9, r0
   15bc4:	mov	r0, r4
   15bc8:	mov	r1, r8
   15bcc:	bl	14674 <table_get@@Base>
   15bd0:	mov	r1, r0
   15bd4:	mov	r0, r9
   15bd8:	blx	r6
   15bdc:	cmp	r0, #0
   15be0:	bne	15c38 <table_column_sort@@Base+0x198>
   15be4:	sub	r5, r5, #1
   15be8:	cmp	r5, #1
   15bec:	bge	15bac <table_column_sort@@Base+0x10c>
   15bf0:	ldr	r0, [sp, #36]	; 0x24
   15bf4:	ldr	r9, [fp, #-32]	; 0xffffffe0
   15bf8:	ldr	r5, [sp, #32]
   15bfc:	mov	r2, r7
   15c00:	cmn	r0, #1
   15c04:	movne	r8, r0
   15c08:	cmn	r8, #1
   15c0c:	beq	15b84 <table_column_sort@@Base+0xe4>
   15c10:	cmp	r2, r7
   15c14:	bne	15c54 <table_column_sort@@Base+0x1b4>
   15c18:	ldr	r0, [sp, #24]
   15c1c:	cmp	r2, r0
   15c20:	beq	15c54 <table_column_sort@@Base+0x1b4>
   15c24:	mov	r2, r7
   15c28:	add	r7, r7, #1
   15c2c:	cmp	r7, r5
   15c30:	bne	15b94 <table_column_sort@@Base+0xf4>
   15c34:	b	15b18 <table_column_sort@@Base+0x78>
   15c38:	ldr	r8, [sp, #36]	; 0x24
   15c3c:	ldr	r9, [fp, #-32]	; 0xffffffe0
   15c40:	ldr	r5, [sp, #32]
   15c44:	ldr	r2, [sp, #28]
   15c48:	cmn	r8, #1
   15c4c:	bne	15c10 <table_column_sort@@Base+0x170>
   15c50:	b	15b84 <table_column_sort@@Base+0xe4>
   15c54:	ldr	r0, [sp, #20]
   15c58:	ldr	r0, [r0, r9, lsl #2]
   15c5c:	mov	r9, r2
   15c60:	str	r0, [sp, #36]	; 0x24
   15c64:	ldr	r0, [sp, #16]
   15c68:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15c6c:	ldr	r0, [r0, r1, lsl #2]
   15c70:	mov	r1, #4
   15c74:	str	r0, [sp, #28]
   15c78:	sub	r0, r2, r8
   15c7c:	add	r0, r0, #1
   15c80:	bl	11f7c <calloc@plt>
   15c84:	str	r9, [sp]
   15c88:	mov	r5, r0
   15c8c:	mov	r3, r8
   15c90:	ldr	r0, [sp, #28]
   15c94:	mov	r1, r5
   15c98:	str	r0, [sp, #4]
   15c9c:	mov	r0, r4
   15ca0:	ldr	r2, [sp, #36]	; 0x24
   15ca4:	ldr	r9, [fp, #-32]	; 0xffffffe0
   15ca8:	bl	15cec <table_column_sort@@Base+0x24c>
   15cac:	mov	r0, r5
   15cb0:	ldr	r5, [sp, #32]
   15cb4:	bl	11fa0 <free@plt>
   15cb8:	mvn	r8, #0
   15cbc:	mvn	r2, #0
   15cc0:	add	r7, r7, #1
   15cc4:	cmp	r7, r5
   15cc8:	bne	15b94 <table_column_sort@@Base+0xf4>
   15ccc:	b	15b18 <table_column_sort@@Base+0x78>
   15cd0:	mov	r0, r4
   15cd4:	mvn	r1, #0
   15cd8:	mvn	r2, #0
   15cdc:	mov	r3, #32
   15ce0:	sub	sp, fp, #28
   15ce4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ce8:	b	12ff8 <table_notify@@Base>
   15cec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15cf0:	add	fp, sp, #28
   15cf4:	sub	sp, sp, #28
   15cf8:	mov	sl, r0
   15cfc:	ldr	r0, [fp, #8]
   15d00:	cmp	r0, r3
   15d04:	ble	15f2c <table_column_sort@@Base+0x48c>
   15d08:	ldr	r0, [fp, #8]
   15d0c:	ldr	r8, [fp, #12]
   15d10:	mov	r4, r3
   15d14:	mov	r5, r2
   15d18:	mov	r9, r1
   15d1c:	mov	r7, r0
   15d20:	add	r0, r0, r3
   15d24:	add	r6, r0, r0, lsr #31
   15d28:	asr	r0, r6, #1
   15d2c:	str	r0, [sp, #20]
   15d30:	stm	sp, {r0, r8}
   15d34:	mov	r0, sl
   15d38:	bl	15cec <table_column_sort@@Base+0x24c>
   15d3c:	mov	r0, #1
   15d40:	mov	r1, r9
   15d44:	mov	r2, r5
   15d48:	stm	sp, {r7, r8}
   15d4c:	add	r3, r0, r6, asr #1
   15d50:	mov	r0, sl
   15d54:	str	r3, [sp, #24]
   15d58:	bl	15cec <table_column_sort@@Base+0x24c>
   15d5c:	mov	r0, sl
   15d60:	mov	r1, r5
   15d64:	str	r5, [sp, #12]
   15d68:	bl	13f50 <table_get_column_compare_function@@Base>
   15d6c:	cmp	r8, #0
   15d70:	str	r0, [sp, #8]
   15d74:	beq	15e40 <table_column_sort@@Base+0x3a0>
   15d78:	sub	r8, r4, #1
   15d7c:	mov	r5, r9
   15d80:	mov	r6, r4
   15d84:	ldr	r0, [sp, #20]
   15d88:	cmp	r6, r0
   15d8c:	ble	15dd0 <table_column_sort@@Base+0x330>
   15d90:	ldr	r7, [sp, #24]
   15d94:	mov	r0, sl
   15d98:	mov	r1, r7
   15d9c:	bl	148e4 <table_get_row_ptr@@Base>
   15da0:	ldr	r0, [r0]
   15da4:	add	r7, r7, #1
   15da8:	str	r7, [sp, #24]
   15dac:	str	r0, [r5]
   15db0:	ldr	r0, [fp, #8]
   15db4:	add	r8, r8, #1
   15db8:	add	r5, r5, #4
   15dbc:	cmp	r0, r8
   15dc0:	beq	15f04 <table_column_sort@@Base+0x464>
   15dc4:	ldr	r0, [sp, #20]
   15dc8:	cmp	r6, r0
   15dcc:	bgt	15d90 <table_column_sort@@Base+0x2f0>
   15dd0:	ldr	r0, [sp, #24]
   15dd4:	ldr	r1, [fp, #8]
   15dd8:	cmp	r0, r1
   15ddc:	bgt	15e28 <table_column_sort@@Base+0x388>
   15de0:	mov	r0, sl
   15de4:	mov	r7, sl
   15de8:	ldr	sl, [sp, #12]
   15dec:	mov	r1, r6
   15df0:	mov	r2, sl
   15df4:	bl	14674 <table_get@@Base>
   15df8:	ldr	r1, [sp, #24]
   15dfc:	str	r0, [sp, #16]
   15e00:	mov	r2, sl
   15e04:	mov	r0, r7
   15e08:	mov	sl, r7
   15e0c:	bl	14674 <table_get@@Base>
   15e10:	mov	r1, r0
   15e14:	ldr	r0, [sp, #16]
   15e18:	ldr	r2, [sp, #8]
   15e1c:	blx	r2
   15e20:	cmp	r0, #1
   15e24:	blt	15d90 <table_column_sort@@Base+0x2f0>
   15e28:	mov	r0, sl
   15e2c:	mov	r1, r6
   15e30:	bl	148e4 <table_get_row_ptr@@Base>
   15e34:	ldr	r0, [r0]
   15e38:	add	r6, r6, #1
   15e3c:	b	15dac <table_column_sort@@Base+0x30c>
   15e40:	sub	r6, r4, #1
   15e44:	mov	r5, r9
   15e48:	mov	r7, r4
   15e4c:	ldr	r0, [sp, #20]
   15e50:	cmp	r7, r0
   15e54:	bgt	15e9c <table_column_sort@@Base+0x3fc>
   15e58:	b	15edc <table_column_sort@@Base+0x43c>
   15e5c:	ldr	r8, [sp, #12]
   15e60:	mov	r0, sl
   15e64:	mov	r1, r7
   15e68:	mov	r2, r8
   15e6c:	bl	14674 <table_get@@Base>
   15e70:	ldr	r1, [sp, #24]
   15e74:	str	r0, [sp, #16]
   15e78:	mov	r0, sl
   15e7c:	mov	r2, r8
   15e80:	bl	14674 <table_get@@Base>
   15e84:	mov	r1, r0
   15e88:	ldr	r0, [sp, #16]
   15e8c:	ldr	r2, [sp, #8]
   15e90:	blx	r2
   15e94:	cmp	r0, #0
   15e98:	bmi	15eec <table_column_sort@@Base+0x44c>
   15e9c:	ldr	r8, [sp, #24]
   15ea0:	mov	r0, sl
   15ea4:	mov	r1, r8
   15ea8:	bl	148e4 <table_get_row_ptr@@Base>
   15eac:	ldr	r0, [r0]
   15eb0:	add	r8, r8, #1
   15eb4:	str	r8, [sp, #24]
   15eb8:	str	r0, [r5]
   15ebc:	ldr	r0, [fp, #8]
   15ec0:	add	r6, r6, #1
   15ec4:	add	r5, r5, #4
   15ec8:	cmp	r0, r6
   15ecc:	beq	15f04 <table_column_sort@@Base+0x464>
   15ed0:	ldr	r0, [sp, #20]
   15ed4:	cmp	r7, r0
   15ed8:	bgt	15e9c <table_column_sort@@Base+0x3fc>
   15edc:	ldr	r0, [sp, #24]
   15ee0:	ldr	r1, [fp, #8]
   15ee4:	cmp	r0, r1
   15ee8:	ble	15e5c <table_column_sort@@Base+0x3bc>
   15eec:	mov	r0, sl
   15ef0:	mov	r1, r7
   15ef4:	bl	148e4 <table_get_row_ptr@@Base>
   15ef8:	ldr	r0, [r0]
   15efc:	add	r7, r7, #1
   15f00:	b	15eb8 <table_column_sort@@Base+0x418>
   15f04:	ldr	r0, [fp, #8]
   15f08:	add	r5, r0, #1
   15f0c:	mov	r0, sl
   15f10:	mov	r1, r4
   15f14:	mov	r2, r9
   15f18:	bl	14b58 <table_set_row_ptr@@Base>
   15f1c:	add	r4, r4, #1
   15f20:	add	r9, r9, #4
   15f24:	cmp	r5, r4
   15f28:	bne	15f0c <table_column_sort@@Base+0x46c>
   15f2c:	sub	sp, fp, #28
   15f30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015f34 <__libc_csu_init@@Base>:
   15f34:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15f38:	mov	r7, r0
   15f3c:	ldr	r6, [pc, #72]	; 15f8c <__libc_csu_init@@Base+0x58>
   15f40:	ldr	r5, [pc, #72]	; 15f90 <__libc_csu_init@@Base+0x5c>
   15f44:	add	r6, pc, r6
   15f48:	add	r5, pc, r5
   15f4c:	sub	r6, r6, r5
   15f50:	mov	r8, r1
   15f54:	mov	r9, r2
   15f58:	bl	11f5c <calloc@plt-0x20>
   15f5c:	asrs	r6, r6, #2
   15f60:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15f64:	mov	r4, #0
   15f68:	add	r4, r4, #1
   15f6c:	ldr	r3, [r5], #4
   15f70:	mov	r2, r9
   15f74:	mov	r1, r8
   15f78:	mov	r0, r7
   15f7c:	blx	r3
   15f80:	cmp	r6, r4
   15f84:	bne	15f68 <__libc_csu_init@@Base+0x34>
   15f88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15f8c:	andeq	r0, r1, r0, asr #31
   15f90:			; <UNDEFINED> instruction: 0x00010fb8

00015f94 <__libc_csu_fini@@Base>:
   15f94:	bx	lr

Disassembly of section .fini:

00015f98 <.fini>:
   15f98:	push	{r3, lr}
   15f9c:	pop	{r3, pc}
