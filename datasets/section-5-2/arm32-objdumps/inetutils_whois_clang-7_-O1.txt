
../repos/inetutils/whois/whois:     file format elf32-littlearm


Disassembly of section .init:

000112e0 <.init>:
   112e0:	push	{r3, lr}
   112e4:	bl	11630 <putc_unlocked@plt+0x48>
   112e8:	pop	{r3, pc}

Disassembly of section .plt:

000112ec <fdopen@plt-0x14>:
   112ec:	push	{lr}		; (str lr, [sp, #-4]!)
   112f0:	ldr	lr, [pc, #4]	; 112fc <fdopen@plt-0x4>
   112f4:	add	lr, pc, lr
   112f8:	ldr	pc, [lr, #8]!
   112fc:	andeq	r9, r1, r4, lsl #26

00011300 <fdopen@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #102400	; 0x19000
   11308:	ldr	pc, [ip, #3332]!	; 0xd04

0001130c <calloc@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #102400	; 0x19000
   11314:	ldr	pc, [ip, #3324]!	; 0xcfc

00011318 <fputs_unlocked@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #102400	; 0x19000
   11320:	ldr	pc, [ip, #3316]!	; 0xcf4

00011324 <inet_aton@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #102400	; 0x19000
   1132c:	ldr	pc, [ip, #3308]!	; 0xcec

00011330 <strcmp@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #102400	; 0x19000
   11338:	ldr	pc, [ip, #3300]!	; 0xce4

0001133c <printf@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #102400	; 0x19000
   11344:	ldr	pc, [ip, #3292]!	; 0xcdc

00011348 <memmove@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #102400	; 0x19000
   11350:	ldr	pc, [ip, #3284]!	; 0xcd4

00011354 <strchrnul@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #102400	; 0x19000
   1135c:	ldr	pc, [ip, #3276]!	; 0xccc

00011360 <free@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #102400	; 0x19000
   11368:	ldr	pc, [ip, #3268]!	; 0xcc4

0001136c <gai_strerror@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #102400	; 0x19000
   11374:	ldr	pc, [ip, #3260]!	; 0xcbc

00011378 <fgets@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #102400	; 0x19000
   11380:	ldr	pc, [ip, #3252]!	; 0xcb4

00011384 <ferror@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #102400	; 0x19000
   1138c:	ldr	pc, [ip, #3244]!	; 0xcac

00011390 <strndup@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #102400	; 0x19000
   11398:	ldr	pc, [ip, #3236]!	; 0xca4

0001139c <memcpy@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #102400	; 0x19000
   113a4:	ldr	pc, [ip, #3228]!	; 0xc9c

000113a8 <signal@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #102400	; 0x19000
   113b0:	ldr	pc, [ip, #3220]!	; 0xc94

000113b4 <fwrite_unlocked@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #102400	; 0x19000
   113bc:	ldr	pc, [ip, #3212]!	; 0xc8c

000113c0 <sleep@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #102400	; 0x19000
   113c8:	ldr	pc, [ip, #3204]!	; 0xc84

000113cc <realloc@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #102400	; 0x19000
   113d4:	ldr	pc, [ip, #3196]!	; 0xc7c

000113d8 <strcasecmp@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #102400	; 0x19000
   113e0:	ldr	pc, [ip, #3188]!	; 0xc74

000113e4 <funlockfile@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #102400	; 0x19000
   113ec:	ldr	pc, [ip, #3180]!	; 0xc6c

000113f0 <fwrite@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #102400	; 0x19000
   113f8:	ldr	pc, [ip, #3172]!	; 0xc64

000113fc <strcat@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #102400	; 0x19000
   11404:	ldr	pc, [ip, #3164]!	; 0xc5c

00011408 <strcpy@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #102400	; 0x19000
   11410:	ldr	pc, [ip, #3156]!	; 0xc54

00011414 <error@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #102400	; 0x19000
   1141c:	ldr	pc, [ip, #3148]!	; 0xc4c

00011420 <getenv@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #102400	; 0x19000
   11428:	ldr	pc, [ip, #3140]!	; 0xc44

0001142c <puts@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #102400	; 0x19000
   11434:	ldr	pc, [ip, #3132]!	; 0xc3c

00011438 <malloc@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #102400	; 0x19000
   11440:	ldr	pc, [ip, #3124]!	; 0xc34

00011444 <__libc_start_main@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #102400	; 0x19000
   1144c:	ldr	pc, [ip, #3116]!	; 0xc2c

00011450 <strerror@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #102400	; 0x19000
   11458:	ldr	pc, [ip, #3108]!	; 0xc24

0001145c <__ctype_tolower_loc@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #102400	; 0x19000
   11464:	ldr	pc, [ip, #3100]!	; 0xc1c

00011468 <__gmon_start__@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #102400	; 0x19000
   11470:	ldr	pc, [ip, #3092]!	; 0xc14

00011474 <__ctype_b_loc@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #102400	; 0x19000
   1147c:	ldr	pc, [ip, #3084]!	; 0xc0c

00011480 <exit@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #102400	; 0x19000
   11488:	ldr	pc, [ip, #3076]!	; 0xc04

0001148c <strlen@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #102400	; 0x19000
   11494:	ldr	pc, [ip, #3068]!	; 0xbfc

00011498 <strchr@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #102400	; 0x19000
   114a0:	ldr	pc, [ip, #3060]!	; 0xbf4

000114a4 <fprintf@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #102400	; 0x19000
   114ac:	ldr	pc, [ip, #3052]!	; 0xbec

000114b0 <__errno_location@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #102400	; 0x19000
   114b8:	ldr	pc, [ip, #3044]!	; 0xbe4

000114bc <strncasecmp@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #102400	; 0x19000
   114c4:	ldr	pc, [ip, #3036]!	; 0xbdc

000114c8 <strerror_r@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #102400	; 0x19000
   114d0:	ldr	pc, [ip, #3028]!	; 0xbd4

000114d4 <memset@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #102400	; 0x19000
   114dc:	ldr	pc, [ip, #3020]!	; 0xbcc

000114e0 <write@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #102400	; 0x19000
   114e8:	ldr	pc, [ip, #3012]!	; 0xbc4

000114ec <memchr@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #102400	; 0x19000
   114f4:	ldr	pc, [ip, #3004]!	; 0xbbc

000114f8 <strrchr@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #102400	; 0x19000
   11500:	ldr	pc, [ip, #2996]!	; 0xbb4

00011504 <vfprintf@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #102400	; 0x19000
   1150c:	ldr	pc, [ip, #2988]!	; 0xbac

00011510 <fputc@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #102400	; 0x19000
   11518:	ldr	pc, [ip, #2980]!	; 0xba4

0001151c <sscanf@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #102400	; 0x19000
   11524:	ldr	pc, [ip, #2972]!	; 0xb9c

00011528 <sprintf@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #102400	; 0x19000
   11530:	ldr	pc, [ip, #2964]!	; 0xb94

00011534 <flockfile@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #102400	; 0x19000
   1153c:	ldr	pc, [ip, #2956]!	; 0xb8c

00011540 <vsnprintf@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #102400	; 0x19000
   11548:	ldr	pc, [ip, #2948]!	; 0xb84

0001154c <atoi@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #102400	; 0x19000
   11554:	ldr	pc, [ip, #2940]!	; 0xb7c

00011558 <qsort@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #102400	; 0x19000
   11560:	ldr	pc, [ip, #2932]!	; 0xb74

00011564 <strpbrk@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #102400	; 0x19000
   1156c:	ldr	pc, [ip, #2924]!	; 0xb6c

00011570 <freeaddrinfo@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #102400	; 0x19000
   11578:	ldr	pc, [ip, #2916]!	; 0xb64

0001157c <getaddrinfo@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #102400	; 0x19000
   11584:	ldr	pc, [ip, #2908]!	; 0xb5c

00011588 <socket@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #102400	; 0x19000
   11590:	ldr	pc, [ip, #2900]!	; 0xb54

00011594 <gethostbyname@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #102400	; 0x19000
   1159c:	ldr	pc, [ip, #2892]!	; 0xb4c

000115a0 <fputs@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #102400	; 0x19000
   115a8:	ldr	pc, [ip, #2884]!	; 0xb44

000115ac <strncmp@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #102400	; 0x19000
   115b4:	ldr	pc, [ip, #2876]!	; 0xb3c

000115b8 <abort@plt>:
   115b8:	add	ip, pc, #0, 12
   115bc:	add	ip, ip, #102400	; 0x19000
   115c0:	ldr	pc, [ip, #2868]!	; 0xb34

000115c4 <close@plt>:
   115c4:	add	ip, pc, #0, 12
   115c8:	add	ip, ip, #102400	; 0x19000
   115cc:	ldr	pc, [ip, #2860]!	; 0xb2c

000115d0 <connect@plt>:
   115d0:	add	ip, pc, #0, 12
   115d4:	add	ip, ip, #102400	; 0x19000
   115d8:	ldr	pc, [ip, #2852]!	; 0xb24

000115dc <__assert_fail@plt>:
   115dc:	add	ip, pc, #0, 12
   115e0:	add	ip, ip, #102400	; 0x19000
   115e4:	ldr	pc, [ip, #2844]!	; 0xb1c

000115e8 <putc_unlocked@plt>:
   115e8:	add	ip, pc, #0, 12
   115ec:	add	ip, ip, #102400	; 0x19000
   115f0:	ldr	pc, [ip, #2836]!	; 0xb14

Disassembly of section .text:

000115f4 <argp_parse@@Base-0x162c>:
   115f4:	mov	fp, #0
   115f8:	mov	lr, #0
   115fc:	pop	{r1}		; (ldr r1, [sp], #4)
   11600:	mov	r2, sp
   11604:	push	{r2}		; (str r2, [sp, #-4]!)
   11608:	push	{r0}		; (str r0, [sp, #-4]!)
   1160c:	ldr	ip, [pc, #16]	; 11624 <putc_unlocked@plt+0x3c>
   11610:	push	{ip}		; (str ip, [sp, #-4]!)
   11614:	ldr	r0, [pc, #12]	; 11628 <putc_unlocked@plt+0x40>
   11618:	ldr	r3, [pc, #12]	; 1162c <putc_unlocked@plt+0x44>
   1161c:	bl	11444 <__libc_start_main@plt>
   11620:	bl	115b8 <abort@plt>
   11624:	andeq	r8, r1, r4, lsr #14
   11628:	andeq	r1, r1, r4, ror #13
   1162c:	andeq	r8, r1, r4, asr #13
   11630:	ldr	r3, [pc, #20]	; 1164c <putc_unlocked@plt+0x64>
   11634:	ldr	r2, [pc, #20]	; 11650 <putc_unlocked@plt+0x68>
   11638:	add	r3, pc, r3
   1163c:	ldr	r2, [r3, r2]
   11640:	cmp	r2, #0
   11644:	bxeq	lr
   11648:	b	11468 <__gmon_start__@plt>
   1164c:	andeq	r9, r1, r0, asr #19
   11650:	andeq	r0, r0, r8, lsl #2
   11654:	ldr	r0, [pc, #24]	; 11674 <putc_unlocked@plt+0x8c>
   11658:	ldr	r3, [pc, #24]	; 11678 <putc_unlocked@plt+0x90>
   1165c:	cmp	r3, r0
   11660:	bxeq	lr
   11664:	ldr	r3, [pc, #16]	; 1167c <putc_unlocked@plt+0x94>
   11668:	cmp	r3, #0
   1166c:	bxeq	lr
   11670:	bx	r3
   11674:	andeq	lr, r2, ip, lsr #17
   11678:	andeq	lr, r2, ip, lsr #17
   1167c:	andeq	r0, r0, r0
   11680:	ldr	r0, [pc, #36]	; 116ac <putc_unlocked@plt+0xc4>
   11684:	ldr	r1, [pc, #36]	; 116b0 <putc_unlocked@plt+0xc8>
   11688:	sub	r1, r1, r0
   1168c:	asr	r1, r1, #2
   11690:	add	r1, r1, r1, lsr #31
   11694:	asrs	r1, r1, #1
   11698:	bxeq	lr
   1169c:	ldr	r3, [pc, #16]	; 116b4 <putc_unlocked@plt+0xcc>
   116a0:	cmp	r3, #0
   116a4:	bxeq	lr
   116a8:	bx	r3
   116ac:	andeq	lr, r2, ip, lsr #17
   116b0:	andeq	lr, r2, ip, lsr #17
   116b4:	andeq	r0, r0, r0
   116b8:	push	{r4, lr}
   116bc:	ldr	r4, [pc, #24]	; 116dc <putc_unlocked@plt+0xf4>
   116c0:	ldrb	r3, [r4]
   116c4:	cmp	r3, #0
   116c8:	popne	{r4, pc}
   116cc:	bl	11654 <putc_unlocked@plt+0x6c>
   116d0:	mov	r3, #1
   116d4:	strb	r3, [r4]
   116d8:	pop	{r4, pc}
   116dc:	andeq	lr, r2, r0, asr #17
   116e0:	b	11680 <putc_unlocked@plt+0x98>
   116e4:	push	{fp, lr}
   116e8:	mov	fp, sp
   116ec:	sub	sp, sp, #16
   116f0:	mov	r7, r1
   116f4:	mov	sl, r0
   116f8:	ldr	r0, [r1]
   116fc:	bl	1428c <_obstack_memory_used@@Base+0x60>
   11700:	movw	r0, #15944	; 0x3e48
   11704:	movt	r0, #1
   11708:	str	r0, [sp]
   1170c:	movw	r9, #59660	; 0xe90c
   11710:	movt	r9, #2
   11714:	mov	r4, #0
   11718:	movw	r3, #19252	; 0x4b34
   1171c:	movt	r3, #1
   11720:	mov	r0, r9
   11724:	mov	r1, #0
   11728:	mov	r2, #0
   1172c:	bl	13f38 <_obstack_begin@@Base>
   11730:	movw	r0, #59708	; 0xe93c
   11734:	movt	r0, #2
   11738:	movw	r1, #39179	; 0x990b
   1173c:	movt	r1, #1
   11740:	str	r1, [r0]
   11744:	movw	r0, #38902	; 0x97f6
   11748:	movt	r0, #1
   1174c:	movw	r1, #58912	; 0xe620
   11750:	movt	r1, #2
   11754:	bl	13d50 <argp_usage@@Base+0x94>
   11758:	sub	r0, fp, #4
   1175c:	stm	sp, {r0, r4}
   11760:	movw	r0, #58920	; 0xe628
   11764:	movt	r0, #2
   11768:	mov	r1, sl
   1176c:	mov	r2, r7
   11770:	mov	r3, #8
   11774:	bl	12c20 <argp_parse@@Base>
   11778:	ldr	r0, [r9, #12]
   1177c:	ldr	r1, [r9, #16]
   11780:	cmp	r1, r0
   11784:	bne	11798 <putc_unlocked@plt+0x1b0>
   11788:	movw	r0, #59660	; 0xe90c
   1178c:	movt	r0, #2
   11790:	mov	r1, #1
   11794:	bl	14020 <_obstack_newchunk@@Base>
   11798:	ldr	r0, [r9, #12]
   1179c:	add	r1, r0, #1
   117a0:	str	r1, [r9, #12]
   117a4:	strb	r4, [r0]
   117a8:	ldr	r8, [r9, #8]
   117ac:	ldr	r0, [r9, #12]
   117b0:	cmp	r0, r8
   117b4:	ldrbeq	r0, [r9, #40]	; 0x28
   117b8:	orreq	r0, r0, #2
   117bc:	strbeq	r0, [r9, #40]	; 0x28
   117c0:	ldr	r0, [r9, #4]
   117c4:	ldr	r1, [r9, #12]
   117c8:	ldr	r2, [r9, #16]
   117cc:	ldr	r3, [r9, #24]
   117d0:	add	r1, r3, r1
   117d4:	bic	r1, r1, r3
   117d8:	sub	r3, r1, r0
   117dc:	sub	r0, r2, r0
   117e0:	cmp	r3, r0
   117e4:	movhi	r1, r2
   117e8:	str	r1, [r9, #8]
   117ec:	str	r1, [r9, #12]
   117f0:	ldr	r5, [fp, #-4]
   117f4:	sub	r4, sl, r5
   117f8:	movw	r6, #59600	; 0xe8d0
   117fc:	movt	r6, #2
   11800:	ldr	r0, [r6]
   11804:	orrs	r1, r4, r0
   11808:	bne	11824 <putc_unlocked@plt+0x23c>
   1180c:	movw	r2, #39203	; 0x9923
   11810:	movt	r2, #1
   11814:	mov	r0, #1
   11818:	mov	r1, #0
   1181c:	bl	11414 <error@plt>
   11820:	ldr	r0, [r6]
   11824:	cmp	r0, #0
   11828:	bne	118cc <putc_unlocked@plt+0x2e4>
   1182c:	cmp	r4, #0
   11830:	beq	118cc <putc_unlocked@plt+0x2e4>
   11834:	add	r4, r7, r5, lsl #2
   11838:	add	r0, r5, #1
   1183c:	sub	r5, r0, sl
   11840:	mov	sl, #32
   11844:	b	1185c <putc_unlocked@plt+0x274>
   11848:	ldr	r0, [r9, #12]
   1184c:	add	r1, r0, #1
   11850:	str	r1, [r9, #12]
   11854:	strb	sl, [r0]
   11858:	add	r5, r5, #1
   1185c:	ldr	r6, [r4], #4
   11860:	mov	r0, r6
   11864:	bl	1148c <strlen@plt>
   11868:	mov	r7, r0
   1186c:	ldr	r0, [r9, #12]
   11870:	ldr	r1, [r9, #16]
   11874:	sub	r0, r1, r0
   11878:	cmp	r0, r7
   1187c:	bcs	1188c <putc_unlocked@plt+0x2a4>
   11880:	mov	r0, r9
   11884:	mov	r1, r7
   11888:	bl	14020 <_obstack_newchunk@@Base>
   1188c:	ldr	r0, [r9, #12]
   11890:	mov	r1, r6
   11894:	mov	r2, r7
   11898:	bl	1139c <memcpy@plt>
   1189c:	ldr	r0, [r9, #12]
   118a0:	add	r0, r0, r7
   118a4:	str	r0, [r9, #12]
   118a8:	cmp	r5, #0
   118ac:	beq	118cc <putc_unlocked@plt+0x2e4>
   118b0:	ldr	r1, [r9, #16]
   118b4:	cmp	r1, r0
   118b8:	bne	11848 <putc_unlocked@plt+0x260>
   118bc:	mov	r0, r9
   118c0:	mov	r1, #1
   118c4:	bl	14020 <_obstack_newchunk@@Base>
   118c8:	b	11848 <putc_unlocked@plt+0x260>
   118cc:	ldr	r0, [r9, #12]
   118d0:	ldr	r1, [r9, #16]
   118d4:	cmp	r1, r0
   118d8:	bne	118ec <putc_unlocked@plt+0x304>
   118dc:	movw	r0, #59660	; 0xe90c
   118e0:	movt	r0, #2
   118e4:	mov	r1, #1
   118e8:	bl	14020 <_obstack_newchunk@@Base>
   118ec:	ldr	r0, [r9, #12]
   118f0:	add	r1, r0, #1
   118f4:	str	r1, [r9, #12]
   118f8:	mov	r1, #0
   118fc:	strb	r1, [r0]
   11900:	ldr	r6, [r9, #8]
   11904:	ldr	r0, [r9, #12]
   11908:	cmp	r0, r6
   1190c:	ldrbeq	r0, [r9, #40]	; 0x28
   11910:	orreq	r0, r0, #2
   11914:	strbeq	r0, [r9, #40]	; 0x28
   11918:	ldr	r0, [r9, #4]
   1191c:	ldr	r1, [r9, #12]
   11920:	ldr	r2, [r9, #16]
   11924:	ldr	r3, [r9, #24]
   11928:	add	r1, r3, r1
   1192c:	bic	r1, r1, r3
   11930:	sub	r3, r1, r0
   11934:	sub	r0, r2, r0
   11938:	cmp	r3, r0
   1193c:	movhi	r1, r2
   11940:	str	r1, [r9, #8]
   11944:	str	r1, [r9, #12]
   11948:	movw	r7, #59592	; 0xe8c8
   1194c:	movt	r7, #2
   11950:	ldr	r0, [r7]
   11954:	cmp	r0, #0
   11958:	bne	11aa8 <putc_unlocked@plt+0x4c0>
   1195c:	movw	r1, #45428	; 0xb174
   11960:	movt	r1, #2
   11964:	mov	r0, r6
   11968:	bl	11b74 <putc_unlocked@plt+0x58c>
   1196c:	cmp	r0, #0
   11970:	beq	119e8 <putc_unlocked@plt+0x400>
   11974:	movw	r0, #59588	; 0xe8c4
   11978:	movt	r0, #2
   1197c:	ldr	r0, [r0]
   11980:	cmp	r0, #0
   11984:	beq	11994 <putc_unlocked@plt+0x3ac>
   11988:	movw	r0, #39224	; 0x9938
   1198c:	movt	r0, #1
   11990:	bl	1142c <puts@plt>
   11994:	movw	r0, #39258	; 0x995a
   11998:	movt	r0, #1
   1199c:	mov	r1, #0
   119a0:	bl	11bc8 <putc_unlocked@plt+0x5e0>
   119a4:	movw	r4, #59704	; 0xe938
   119a8:	movt	r4, #2
   119ac:	str	r0, [r4]
   119b0:	mov	r1, r6
   119b4:	bl	11ce8 <putc_unlocked@plt+0x700>
   119b8:	str	r0, [r7]
   119bc:	ldr	r0, [r4]
   119c0:	bl	11e90 <putc_unlocked@plt+0x8a8>
   119c4:	ldr	r1, [r7]
   119c8:	cmp	r1, #0
   119cc:	beq	11b6c <putc_unlocked@plt+0x584>
   119d0:	movw	r0, #39277	; 0x996d
   119d4:	movt	r0, #1
   119d8:	bl	1133c <printf@plt>
   119dc:	ldr	r0, [r7]
   119e0:	cmp	r0, #0
   119e4:	bne	11aa8 <putc_unlocked@plt+0x4c0>
   119e8:	mov	r0, r6
   119ec:	bl	11e94 <putc_unlocked@plt+0x8ac>
   119f0:	mov	r1, r0
   119f4:	str	r0, [r7]
   119f8:	ldrb	r0, [r0]
   119fc:	cmp	r0, #3
   11a00:	bhi	11a88 <putc_unlocked@plt+0x4a0>
   11a04:	add	r1, pc, #0
   11a08:	ldr	pc, [r1, r0, lsl #2]
   11a0c:	andeq	r1, r1, ip, lsl sl
   11a10:	andeq	r1, r1, ip, asr sl
   11a14:	andeq	r1, r1, r8, ror #20
   11a18:	andeq	r1, r1, r4, ror sl
   11a1c:	movw	r0, #39311	; 0x998f
   11a20:	movt	r0, #1
   11a24:	bl	11420 <getenv@plt>
   11a28:	movw	r1, #39258	; 0x995a
   11a2c:	movt	r1, #1
   11a30:	cmp	r0, #0
   11a34:	movne	r1, r0
   11a38:	str	r1, [r7]
   11a3c:	movw	r0, #59588	; 0xe8c4
   11a40:	movt	r0, #2
   11a44:	ldr	r0, [r0]
   11a48:	cmp	r0, #0
   11a4c:	beq	11aa8 <putc_unlocked@plt+0x4c0>
   11a50:	movw	r0, #39324	; 0x999c
   11a54:	movt	r0, #1
   11a58:	b	11aa4 <putc_unlocked@plt+0x4bc>
   11a5c:	movw	r0, #39350	; 0x99b6
   11a60:	movt	r0, #1
   11a64:	bl	1142c <puts@plt>
   11a68:	ldr	r0, [r7]
   11a6c:	add	r0, r0, #1
   11a70:	b	11a7c <putc_unlocked@plt+0x494>
   11a74:	movw	r0, #39421	; 0x99fd
   11a78:	movt	r0, #1
   11a7c:	bl	1142c <puts@plt>
   11a80:	mov	r0, #0
   11a84:	bl	11480 <exit@plt>
   11a88:	movw	r0, #59588	; 0xe8c4
   11a8c:	movt	r0, #2
   11a90:	ldr	r0, [r0]
   11a94:	cmp	r0, #0
   11a98:	beq	11aa8 <putc_unlocked@plt+0x4c0>
   11a9c:	movw	r0, #39451	; 0x9a1b
   11aa0:	movt	r0, #1
   11aa4:	bl	1133c <printf@plt>
   11aa8:	movw	r0, #39469	; 0x9a2d
   11aac:	movt	r0, #1
   11ab0:	bl	11420 <getenv@plt>
   11ab4:	cmp	r0, #0
   11ab8:	movwne	r0, #58848	; 0xe5e0
   11abc:	movtne	r0, #2
   11ac0:	movne	r1, #0
   11ac4:	strne	r1, [r0]
   11ac8:	ldr	r0, [r7]
   11acc:	mov	r1, r8
   11ad0:	mov	r2, r6
   11ad4:	bl	121f4 <putc_unlocked@plt+0xc0c>
   11ad8:	mov	r4, r0
   11adc:	movw	r0, #59588	; 0xe8c4
   11ae0:	movt	r0, #2
   11ae4:	ldr	r0, [r0]
   11ae8:	cmp	r0, #0
   11aec:	beq	11b00 <putc_unlocked@plt+0x518>
   11af0:	movw	r0, #39480	; 0x9a38
   11af4:	movt	r0, #1
   11af8:	mov	r1, r4
   11afc:	bl	1133c <printf@plt>
   11b00:	mov	r0, r4
   11b04:	bl	1148c <strlen@plt>
   11b08:	movw	r1, #2573	; 0xa0d
   11b0c:	mov	r2, r4
   11b10:	strh	r1, [r2, r0]!
   11b14:	mov	r0, #0
   11b18:	strb	r0, [r2, #2]
   11b1c:	movw	r5, #9264	; 0x2430
   11b20:	movt	r5, #1
   11b24:	mov	r0, #15
   11b28:	mov	r1, r5
   11b2c:	bl	113a8 <signal@plt>
   11b30:	mov	r0, #2
   11b34:	mov	r1, r5
   11b38:	bl	113a8 <signal@plt>
   11b3c:	ldr	r0, [r7]
   11b40:	movw	r1, #59596	; 0xe8cc
   11b44:	movt	r1, #2
   11b48:	ldr	r1, [r1]
   11b4c:	bl	11bc8 <putc_unlocked@plt+0x5e0>
   11b50:	movw	r5, #59704	; 0xe938
   11b54:	movt	r5, #2
   11b58:	str	r0, [r5]
   11b5c:	mov	r1, r4
   11b60:	bl	1245c <putc_unlocked@plt+0xe74>
   11b64:	ldr	r0, [r5]
   11b68:	bl	11e90 <putc_unlocked@plt+0x8a8>
   11b6c:	mov	r0, #0
   11b70:	bl	11480 <exit@plt>
   11b74:	push	{r4, r5, r6, sl, fp, lr}
   11b78:	add	fp, sp, #16
   11b7c:	mov	r2, r1
   11b80:	ldr	r1, [r1]
   11b84:	mov	r4, #0
   11b88:	cmp	r1, #0
   11b8c:	beq	11bb4 <putc_unlocked@plt+0x5cc>
   11b90:	mov	r5, r0
   11b94:	add	r6, r2, #4
   11b98:	mov	r0, r5
   11b9c:	bl	12808 <putc_unlocked@plt+0x1220>
   11ba0:	cmp	r0, #0
   11ba4:	bne	11bbc <putc_unlocked@plt+0x5d4>
   11ba8:	ldr	r1, [r6], #4
   11bac:	cmp	r1, #0
   11bb0:	bne	11b98 <putc_unlocked@plt+0x5b0>
   11bb4:	mov	r0, r4
   11bb8:	pop	{r4, r5, r6, sl, fp, pc}
   11bbc:	mov	r4, #1
   11bc0:	mov	r0, r4
   11bc4:	pop	{r4, r5, r6, sl, fp, pc}
   11bc8:	push	{r4, r5, fp, lr}
   11bcc:	add	fp, sp, #8
   11bd0:	sub	sp, sp, #40	; 0x28
   11bd4:	mov	r5, r1
   11bd8:	mov	r4, r0
   11bdc:	vmov.i32	q8, #0	; 0x00000000
   11be0:	add	r2, sp, #8
   11be4:	mov	r0, r2
   11be8:	vst1.64	{d16-d17}, [r0]!
   11bec:	vst1.64	{d16-d17}, [r0]
   11bf0:	mov	r0, #1
   11bf4:	str	r0, [sp, #16]
   11bf8:	movw	r1, #38902	; 0x97f6
   11bfc:	movt	r1, #1
   11c00:	cmp	r5, #0
   11c04:	movne	r1, r5
   11c08:	add	r3, sp, #4
   11c0c:	mov	r0, r4
   11c10:	bl	1157c <getaddrinfo@plt>
   11c14:	cmp	r0, #0
   11c18:	beq	11c44 <putc_unlocked@plt+0x65c>
   11c1c:	movw	r1, #40202	; 0x9d0a
   11c20:	movt	r1, #1
   11c24:	cmp	r5, #0
   11c28:	movne	r1, r5
   11c2c:	add	r2, sp, #8
   11c30:	add	r3, sp, #4
   11c34:	mov	r0, r4
   11c38:	bl	1157c <getaddrinfo@plt>
   11c3c:	cmp	r0, #0
   11c40:	bne	11cd4 <putc_unlocked@plt+0x6ec>
   11c44:	ldr	r4, [sp, #4]
   11c48:	cmp	r4, #0
   11c4c:	beq	11cc8 <putc_unlocked@plt+0x6e0>
   11c50:	mov	r2, r4
   11c54:	ldmib	r2, {r0, r1, r2}
   11c58:	bl	11588 <socket@plt>
   11c5c:	mov	r5, r0
   11c60:	cmp	r0, #0
   11c64:	blt	11c8c <putc_unlocked@plt+0x6a4>
   11c68:	ldr	r0, [sp, #4]
   11c6c:	ldr	r2, [r0, #16]
   11c70:	ldr	r1, [r0, #20]
   11c74:	mov	r0, r5
   11c78:	bl	115d0 <connect@plt>
   11c7c:	cmp	r0, #0
   11c80:	beq	11cbc <putc_unlocked@plt+0x6d4>
   11c84:	mov	r0, r5
   11c88:	bl	115c4 <close@plt>
   11c8c:	ldr	r0, [sp, #4]
   11c90:	ldr	r2, [r0, #28]
   11c94:	str	r2, [sp, #4]
   11c98:	cmp	r2, #0
   11c9c:	bne	11c54 <putc_unlocked@plt+0x66c>
   11ca0:	cmp	r2, #0
   11ca4:	beq	11cc8 <putc_unlocked@plt+0x6e0>
   11ca8:	mov	r0, r4
   11cac:	bl	11570 <freeaddrinfo@plt>
   11cb0:	mov	r0, r5
   11cb4:	sub	sp, fp, #8
   11cb8:	pop	{r4, r5, fp, pc}
   11cbc:	ldr	r2, [sp, #4]
   11cc0:	cmp	r2, #0
   11cc4:	bne	11ca8 <putc_unlocked@plt+0x6c0>
   11cc8:	movw	r0, #40226	; 0x9d22
   11ccc:	movt	r0, #1
   11cd0:	bl	1294c <putc_unlocked@plt+0x1364>
   11cd4:	bl	1136c <gai_strerror@plt>
   11cd8:	mov	r1, r0
   11cdc:	movw	r0, #40210	; 0x9d12
   11ce0:	movt	r0, #1
   11ce4:	bl	129b0 <putc_unlocked@plt+0x13c8>
   11ce8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11cec:	add	fp, sp, #28
   11cf0:	sub	sp, sp, #108	; 0x6c
   11cf4:	mov	r5, r1
   11cf8:	mov	r4, r0
   11cfc:	mov	r0, r1
   11d00:	bl	1148c <strlen@plt>
   11d04:	add	r0, r0, #4
   11d08:	bl	14700 <_obstack_memory_used@@Base+0x4d4>
   11d0c:	mov	r6, r0
   11d10:	mov	r1, #61	; 0x3d
   11d14:	strb	r1, [r0], #1
   11d18:	mov	r1, r5
   11d1c:	bl	11408 <strcpy@plt>
   11d20:	mov	r0, r6
   11d24:	bl	1148c <strlen@plt>
   11d28:	movw	r1, #2573	; 0xa0d
   11d2c:	mov	r2, r6
   11d30:	strh	r1, [r2, r0]!
   11d34:	mov	r7, #0
   11d38:	strb	r7, [r2, #2]
   11d3c:	movw	r1, #35999	; 0x8c9f
   11d40:	movt	r1, #1
   11d44:	mov	r0, r4
   11d48:	bl	11300 <fdopen@plt>
   11d4c:	mov	r5, r0
   11d50:	mov	r0, r6
   11d54:	bl	1148c <strlen@plt>
   11d58:	mov	r2, r0
   11d5c:	mov	r0, r4
   11d60:	str	r6, [sp, #4]
   11d64:	mov	r1, r6
   11d68:	bl	114e0 <write@plt>
   11d6c:	cmp	r0, #0
   11d70:	blt	11e78 <putc_unlocked@plt+0x890>
   11d74:	add	r6, sp, #8
   11d78:	mov	r0, r6
   11d7c:	mov	r1, #100	; 0x64
   11d80:	mov	r2, r5
   11d84:	bl	11378 <fgets@plt>
   11d88:	cmp	r0, #0
   11d8c:	beq	11e54 <putc_unlocked@plt+0x86c>
   11d90:	add	r4, r6, #1
   11d94:	movw	r9, #40185	; 0x9cf9
   11d98:	movt	r9, #1
   11d9c:	movw	r8, #59580	; 0xe8bc
   11da0:	movt	r8, #2
   11da4:	mov	r7, #0
   11da8:	mov	r0, r6
   11dac:	mov	r1, r9
   11db0:	mov	r2, #16
   11db4:	bl	115ac <strncmp@plt>
   11db8:	cmp	r7, #0
   11dbc:	cmpeq	r0, #0
   11dc0:	bne	11e30 <putc_unlocked@plt+0x848>
   11dc4:	mov	r1, r4
   11dc8:	mov	r2, r6
   11dcc:	mov	r0, r2
   11dd0:	mov	sl, r1
   11dd4:	add	r1, r1, #1
   11dd8:	ldrb	r3, [r2], #1
   11ddc:	cmp	r3, #58	; 0x3a
   11de0:	bne	11dcc <putc_unlocked@plt+0x7e4>
   11de4:	add	sl, sl, #1
   11de8:	ldrb	r1, [r0, #1]!
   11dec:	cmp	r1, #32
   11df0:	beq	11de4 <putc_unlocked@plt+0x7fc>
   11df4:	bl	1148c <strlen@plt>
   11df8:	add	r0, r0, #1
   11dfc:	bl	14700 <_obstack_memory_used@@Base+0x4d4>
   11e00:	mov	r7, r0
   11e04:	mov	r0, #0
   11e08:	b	11e14 <putc_unlocked@plt+0x82c>
   11e0c:	strb	r1, [r7, r0]
   11e10:	add	r0, r0, #1
   11e14:	add	r1, sl, r0
   11e18:	ldrb	r1, [r1, #-1]
   11e1c:	cmp	r1, #10
   11e20:	cmpne	r1, #13
   11e24:	bne	11e0c <putc_unlocked@plt+0x824>
   11e28:	mov	r1, #0
   11e2c:	strb	r1, [r7, r0]
   11e30:	ldr	r1, [r8]
   11e34:	mov	r0, r6
   11e38:	bl	115a0 <fputs@plt>
   11e3c:	mov	r0, r6
   11e40:	mov	r1, #100	; 0x64
   11e44:	mov	r2, r5
   11e48:	bl	11378 <fgets@plt>
   11e4c:	cmp	r0, #0
   11e50:	bne	11da8 <putc_unlocked@plt+0x7c0>
   11e54:	mov	r0, r5
   11e58:	bl	11384 <ferror@plt>
   11e5c:	cmp	r0, #0
   11e60:	bne	11e84 <putc_unlocked@plt+0x89c>
   11e64:	ldr	r0, [sp, #4]
   11e68:	bl	13e48 <argp_usage@@Base+0x18c>
   11e6c:	mov	r0, r7
   11e70:	sub	sp, fp, #28
   11e74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e78:	movw	r0, #40000	; 0x9c40
   11e7c:	movt	r0, #1
   11e80:	bl	1294c <putc_unlocked@plt+0x1364>
   11e84:	movw	r0, #40095	; 0x9c9f
   11e88:	movt	r0, #1
   11e8c:	bl	1294c <putc_unlocked@plt+0x1364>
   11e90:	b	115c4 <close@plt>
   11e94:	push	{r4, r5, r6, sl, fp, lr}
   11e98:	add	fp, sp, #16
   11e9c:	sub	sp, sp, #8
   11ea0:	ldrb	r1, [r0]
   11ea4:	movw	r4, #34612	; 0x8734
   11ea8:	movt	r4, #1
   11eac:	cmp	r1, #0
   11eb0:	beq	11ef4 <putc_unlocked@plt+0x90c>
   11eb4:	add	r6, r0, #2
   11eb8:	ldrb	r0, [r6, #-1]
   11ebc:	cmp	r0, #32
   11ec0:	bne	11ed4 <putc_unlocked@plt+0x8ec>
   11ec4:	ldrb	r0, [r6], #2
   11ec8:	cmp	r0, #0
   11ecc:	bne	11eb8 <putc_unlocked@plt+0x8d0>
   11ed0:	b	11ef4 <putc_unlocked@plt+0x90c>
   11ed4:	sub	r5, r6, #2
   11ed8:	mov	r0, r5
   11edc:	mov	r1, #64	; 0x40
   11ee0:	bl	11498 <strchr@plt>
   11ee4:	movw	r4, #35780	; 0x8bc4
   11ee8:	movt	r4, #1
   11eec:	cmp	r0, #0
   11ef0:	beq	11f00 <putc_unlocked@plt+0x918>
   11ef4:	mov	r0, r4
   11ef8:	sub	sp, fp, #16
   11efc:	pop	{r4, r5, r6, sl, fp, pc}
   11f00:	movw	r1, #39504	; 0x9a50
   11f04:	movt	r1, #1
   11f08:	mov	r0, r5
   11f0c:	bl	11564 <strpbrk@plt>
   11f10:	cmp	r0, #0
   11f14:	beq	11fb0 <putc_unlocked@plt+0x9c8>
   11f18:	mov	r0, r5
   11f1c:	mov	r1, #58	; 0x3a
   11f20:	bl	11498 <strchr@plt>
   11f24:	cmp	r0, #0
   11f28:	beq	1204c <putc_unlocked@plt+0xa64>
   11f2c:	mov	r0, #0
   11f30:	str	r0, [sp, #4]
   11f34:	str	r0, [sp]
   11f38:	movw	r1, #39524	; 0x9a64
   11f3c:	movt	r1, #1
   11f40:	add	r2, sp, #4
   11f44:	mov	r3, sp
   11f48:	mov	r0, r5
   11f4c:	bl	1151c <sscanf@plt>
   11f50:	cmp	r0, #0
   11f54:	beq	120a8 <putc_unlocked@plt+0xac0>
   11f58:	movw	r1, #56336	; 0xdc10
   11f5c:	movt	r1, #2
   11f60:	ldr	r4, [r1, #8]
   11f64:	cmp	r4, #0
   11f68:	beq	120b4 <putc_unlocked@plt+0xacc>
   11f6c:	ldr	r0, [sp, #4]
   11f70:	ldrh	r2, [sp]
   11f74:	orr	r0, r2, r0, lsl #16
   11f78:	ldm	r1, {r2, r3}
   11f7c:	and	r3, r3, r0
   11f80:	cmp	r3, r2
   11f84:	beq	11ef4 <putc_unlocked@plt+0x90c>
   11f88:	add	r1, r1, #12
   11f8c:	ldr	r4, [r1, #8]
   11f90:	cmp	r4, #0
   11f94:	beq	120b4 <putc_unlocked@plt+0xacc>
   11f98:	ldm	r1, {r2, r3}
   11f9c:	and	r3, r3, r0
   11fa0:	add	r1, r1, #12
   11fa4:	cmp	r3, r2
   11fa8:	bne	11f8c <putc_unlocked@plt+0x9a4>
   11fac:	b	11ef4 <putc_unlocked@plt+0x90c>
   11fb0:	sub	r4, r6, #5
   11fb4:	ldrb	r0, [r4, #3]
   11fb8:	add	r4, r4, #1
   11fbc:	cmp	r0, #0
   11fc0:	bne	11fb4 <putc_unlocked@plt+0x9cc>
   11fc4:	movw	r1, #36052	; 0x8cd4
   11fc8:	movt	r1, #1
   11fcc:	mov	r0, r5
   11fd0:	mov	r2, #2
   11fd4:	bl	114bc <strncasecmp@plt>
   11fd8:	cmp	r0, #0
   11fdc:	bne	12014 <putc_unlocked@plt+0xa2c>
   11fe0:	ldrb	r0, [r6]
   11fe4:	cmp	r0, #32
   11fe8:	subne	r0, r0, #48	; 0x30
   11fec:	uxtbne	r0, r0
   11ff0:	cmpne	r0, #9
   11ff4:	bhi	12014 <putc_unlocked@plt+0xa2c>
   11ff8:	mov	r0, r6
   11ffc:	bl	1154c <atoi@plt>
   12000:	movw	r1, #56624	; 0xdd30
   12004:	movt	r1, #2
   12008:	sub	sp, fp, #16
   1200c:	pop	{r4, r5, r6, sl, fp, lr}
   12010:	b	12728 <putc_unlocked@plt+0x1140>
   12014:	movw	r1, #39521	; 0x9a61
   12018:	movt	r1, #1
   1201c:	mov	r0, r4
   12020:	mov	r2, #2
   12024:	bl	114bc <strncasecmp@plt>
   12028:	movw	r2, #39508	; 0x9a54
   1202c:	movt	r2, #1
   12030:	movw	r1, #35780	; 0x8bc4
   12034:	movt	r1, #1
   12038:	cmp	r0, #0
   1203c:	moveq	r1, r2
   12040:	mov	r0, r1
   12044:	sub	sp, fp, #16
   12048:	pop	{r4, r5, r6, sl, fp, pc}
   1204c:	mov	r0, r5
   12050:	bl	12798 <putc_unlocked@plt+0x11b0>
   12054:	cmp	r0, #0
   12058:	beq	120dc <putc_unlocked@plt+0xaf4>
   1205c:	movw	r1, #45620	; 0xb234
   12060:	movt	r1, #2
   12064:	ldr	r4, [r1, #8]
   12068:	cmp	r4, #0
   1206c:	beq	1214c <putc_unlocked@plt+0xb64>
   12070:	ldm	r1, {r2, r3}
   12074:	and	r3, r3, r0
   12078:	cmp	r3, r2
   1207c:	beq	11ef4 <putc_unlocked@plt+0x90c>
   12080:	add	r1, r1, #12
   12084:	ldr	r4, [r1, #8]
   12088:	cmp	r4, #0
   1208c:	beq	1214c <putc_unlocked@plt+0xb64>
   12090:	ldm	r1, {r2, r3}
   12094:	and	r3, r3, r0
   12098:	add	r1, r1, #12
   1209c:	cmp	r3, r2
   120a0:	bne	12084 <putc_unlocked@plt+0xa9c>
   120a4:	b	11ef4 <putc_unlocked@plt+0x90c>
   120a8:	movw	r4, #35780	; 0x8bc4
   120ac:	movt	r4, #1
   120b0:	b	11ef4 <putc_unlocked@plt+0x90c>
   120b4:	movw	r0, #59588	; 0xe8c4
   120b8:	movt	r0, #2
   120bc:	ldr	r0, [r0]
   120c0:	movw	r4, #35440	; 0x8a70
   120c4:	movt	r4, #1
   120c8:	cmp	r0, #0
   120cc:	beq	11ef4 <putc_unlocked@plt+0x90c>
   120d0:	movw	r0, #39531	; 0x9a6b
   120d4:	movt	r0, #1
   120d8:	b	12170 <putc_unlocked@plt+0xb88>
   120dc:	movw	r0, #56848	; 0xde10
   120e0:	movt	r0, #2
   120e4:	ldr	r1, [r0]
   120e8:	cmp	r1, #0
   120ec:	beq	12118 <putc_unlocked@plt+0xb30>
   120f0:	add	r6, r0, #4
   120f4:	mov	r0, r5
   120f8:	bl	12808 <putc_unlocked@plt+0x1220>
   120fc:	cmp	r0, #0
   12100:	bne	121ec <putc_unlocked@plt+0xc04>
   12104:	add	r0, r6, #8
   12108:	ldr	r1, [r6, #4]
   1210c:	cmp	r1, #0
   12110:	mov	r6, r0
   12114:	bne	120f4 <putc_unlocked@plt+0xb0c>
   12118:	mov	r0, r5
   1211c:	mov	r1, #46	; 0x2e
   12120:	bl	11498 <strchr@plt>
   12124:	cmp	r0, #0
   12128:	beq	12178 <putc_unlocked@plt+0xb90>
   1212c:	movw	r0, #59588	; 0xe8c4
   12130:	movt	r0, #2
   12134:	ldr	r0, [r0]
   12138:	cmp	r0, #0
   1213c:	beq	11ef4 <putc_unlocked@plt+0x90c>
   12140:	movw	r0, #39774	; 0x9b5e
   12144:	movt	r0, #1
   12148:	b	12170 <putc_unlocked@plt+0xb88>
   1214c:	movw	r0, #59588	; 0xe8c4
   12150:	movt	r0, #2
   12154:	ldr	r0, [r0]
   12158:	movw	r4, #35440	; 0x8a70
   1215c:	movt	r4, #1
   12160:	cmp	r0, #0
   12164:	beq	11ef4 <putc_unlocked@plt+0x90c>
   12168:	movw	r0, #39621	; 0x9ac5
   1216c:	movt	r0, #1
   12170:	bl	1142c <puts@plt>
   12174:	b	11ef4 <putc_unlocked@plt+0x90c>
   12178:	movw	r0, #45548	; 0xb1ec
   1217c:	movt	r0, #2
   12180:	ldr	r4, [r0]
   12184:	cmp	r4, #0
   12188:	beq	121c4 <putc_unlocked@plt+0xbdc>
   1218c:	add	r6, r0, #4
   12190:	mov	r0, r4
   12194:	bl	1148c <strlen@plt>
   12198:	mov	r2, r0
   1219c:	mov	r0, r5
   121a0:	mov	r1, r4
   121a4:	bl	114bc <strncasecmp@plt>
   121a8:	cmp	r0, #0
   121ac:	beq	121ec <putc_unlocked@plt+0xc04>
   121b0:	add	r0, r6, #8
   121b4:	ldr	r4, [r6, #4]
   121b8:	cmp	r4, #0
   121bc:	mov	r6, r0
   121c0:	bne	12190 <putc_unlocked@plt+0xba8>
   121c4:	movw	r0, #59588	; 0xe8c4
   121c8:	movt	r0, #2
   121cc:	ldr	r0, [r0]
   121d0:	movw	r4, #35440	; 0x8a70
   121d4:	movt	r4, #1
   121d8:	cmp	r0, #0
   121dc:	beq	11ef4 <putc_unlocked@plt+0x90c>
   121e0:	movw	r0, #39707	; 0x9b1b
   121e4:	movt	r0, #1
   121e8:	b	12170 <putc_unlocked@plt+0xb88>
   121ec:	ldr	r4, [r6]
   121f0:	b	11ef4 <putc_unlocked@plt+0x90c>
   121f4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   121f8:	add	fp, sp, #24
   121fc:	mov	r8, r2
   12200:	mov	r7, r1
   12204:	mov	r6, r0
   12208:	mov	r0, r1
   1220c:	bl	1148c <strlen@plt>
   12210:	mov	r4, r0
   12214:	mov	r0, r8
   12218:	bl	1148c <strlen@plt>
   1221c:	add	r0, r4, r0
   12220:	add	r0, r0, #13
   12224:	bl	14700 <_obstack_memory_used@@Base+0x4d4>
   12228:	mov	r4, r0
   1222c:	mov	r5, #0
   12230:	strb	r5, [r0]
   12234:	movw	r0, #45336	; 0xb118
   12238:	movt	r0, #2
   1223c:	mov	r1, r6
   12240:	bl	1289c <putc_unlocked@plt+0x12b4>
   12244:	cmp	r0, #0
   12248:	bne	12264 <putc_unlocked@plt+0xc7c>
   1224c:	movw	r0, #45396	; 0xb154
   12250:	movt	r0, #2
   12254:	mov	r1, r6
   12258:	bl	1289c <putc_unlocked@plt+0x12b4>
   1225c:	cmp	r0, #0
   12260:	beq	12288 <putc_unlocked@plt+0xca0>
   12264:	mov	r0, r4
   12268:	bl	1148c <strlen@plt>
   1226c:	movw	r1, #41152	; 0xa0c0
   12270:	movt	r1, #1
   12274:	vldr	d16, [r1]
   12278:	add	r0, r4, r0
   1227c:	strb	r5, [r0, #8]
   12280:	vst1.8	{d16}, [r0]
   12284:	mov	r5, #1
   12288:	ldrb	r0, [r7]
   1228c:	cmp	r0, #0
   12290:	beq	122ac <putc_unlocked@plt+0xcc4>
   12294:	cmp	r5, #0
   12298:	beq	122b8 <putc_unlocked@plt+0xcd0>
   1229c:	mov	r0, r4
   122a0:	mov	r1, r7
   122a4:	bl	113fc <strcat@plt>
   122a8:	b	123bc <putc_unlocked@plt+0xdd4>
   122ac:	cmp	r5, #0
   122b0:	beq	122ec <putc_unlocked@plt+0xd04>
   122b4:	b	123bc <putc_unlocked@plt+0xdd4>
   122b8:	movw	r1, #35483	; 0x8a9b
   122bc:	movt	r1, #1
   122c0:	mov	r0, r6
   122c4:	bl	11330 <strcmp@plt>
   122c8:	cmp	r0, #0
   122cc:	beq	122e0 <putc_unlocked@plt+0xcf8>
   122d0:	movw	r0, #39882	; 0x9bca
   122d4:	movt	r0, #1
   122d8:	bl	1142c <puts@plt>
   122dc:	b	122ec <putc_unlocked@plt+0xd04>
   122e0:	mov	r0, r4
   122e4:	mov	r1, r7
   122e8:	bl	113fc <strcat@plt>
   122ec:	movw	r1, #35440	; 0x8a70
   122f0:	movt	r1, #1
   122f4:	mov	r0, r6
   122f8:	bl	11330 <strcmp@plt>
   122fc:	cmp	r0, #0
   12300:	beq	1231c <putc_unlocked@plt+0xd34>
   12304:	movw	r1, #35748	; 0x8ba4
   12308:	movt	r1, #1
   1230c:	mov	r0, r6
   12310:	bl	11330 <strcmp@plt>
   12314:	cmp	r0, #0
   12318:	bne	12360 <putc_unlocked@plt+0xd78>
   1231c:	movw	r1, #39936	; 0x9c00
   12320:	movt	r1, #1
   12324:	mov	r0, r8
   12328:	mov	r2, #2
   1232c:	bl	114bc <strncasecmp@plt>
   12330:	cmp	r0, #0
   12334:	bne	12360 <putc_unlocked@plt+0xd78>
   12338:	mov	r2, r8
   1233c:	ldrb	r0, [r2, #2]!
   12340:	sub	r0, r0, #48	; 0x30
   12344:	uxtb	r0, r0
   12348:	cmp	r0, #9
   1234c:	bhi	12360 <putc_unlocked@plt+0xd78>
   12350:	movw	r1, #39939	; 0x9c03
   12354:	movt	r1, #1
   12358:	mov	r0, r4
   1235c:	b	12424 <putc_unlocked@plt+0xe3c>
   12360:	movw	r1, #35483	; 0x8a9b
   12364:	movt	r1, #1
   12368:	mov	r0, r6
   1236c:	bl	11330 <strcmp@plt>
   12370:	cmp	r0, #0
   12374:	beq	123d0 <putc_unlocked@plt+0xde8>
   12378:	movw	r1, #39957	; 0x9c15
   1237c:	movt	r1, #1
   12380:	mov	r0, r6
   12384:	bl	11330 <strcmp@plt>
   12388:	cmp	r0, #0
   1238c:	bne	123a4 <putc_unlocked@plt+0xdbc>
   12390:	mov	r0, r8
   12394:	mov	r1, #32
   12398:	bl	11498 <strchr@plt>
   1239c:	cmp	r0, #0
   123a0:	beq	12414 <putc_unlocked@plt+0xe2c>
   123a4:	movw	r1, #39508	; 0x9a54
   123a8:	movt	r1, #1
   123ac:	mov	r0, r6
   123b0:	bl	11330 <strcmp@plt>
   123b4:	cmp	r0, #0
   123b8:	beq	123dc <putc_unlocked@plt+0xdf4>
   123bc:	mov	r0, r4
   123c0:	mov	r1, r8
   123c4:	bl	113fc <strcat@plt>
   123c8:	mov	r0, r4
   123cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   123d0:	movw	r1, #39944	; 0x9c08
   123d4:	movt	r1, #1
   123d8:	b	1241c <putc_unlocked@plt+0xe34>
   123dc:	movw	r0, #39987	; 0x9c33
   123e0:	movt	r0, #1
   123e4:	bl	11420 <getenv@plt>
   123e8:	cmp	r0, #0
   123ec:	beq	12408 <putc_unlocked@plt+0xe20>
   123f0:	movw	r1, #39992	; 0x9c38
   123f4:	movt	r1, #1
   123f8:	mov	r2, #2
   123fc:	bl	115ac <strncmp@plt>
   12400:	cmp	r0, #0
   12404:	beq	123bc <putc_unlocked@plt+0xdd4>
   12408:	movw	r1, #39995	; 0x9c3b
   1240c:	movt	r1, #1
   12410:	b	1241c <putc_unlocked@plt+0xe34>
   12414:	movw	r1, #39977	; 0x9c29
   12418:	movt	r1, #1
   1241c:	mov	r0, r4
   12420:	mov	r2, r8
   12424:	bl	11528 <sprintf@plt>
   12428:	mov	r0, r4
   1242c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12430:	push	{fp, lr}
   12434:	mov	fp, sp
   12438:	mov	r4, r0
   1243c:	movw	r0, #59704	; 0xe938
   12440:	movt	r0, #2
   12444:	ldr	r0, [r0]
   12448:	bl	11e90 <putc_unlocked@plt+0x8a8>
   1244c:	movw	r0, #40234	; 0x9d2a
   12450:	movt	r0, #1
   12454:	mov	r1, r4
   12458:	bl	129b0 <putc_unlocked@plt+0x13c8>
   1245c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12460:	add	fp, sp, #28
   12464:	sub	sp, sp, #484	; 0x1e4
   12468:	sub	sp, sp, #1024	; 0x400
   1246c:	mov	r4, r1
   12470:	mov	r6, r0
   12474:	movw	r0, #58848	; 0xe5e0
   12478:	movt	r0, #2
   1247c:	ldr	r8, [r0]
   12480:	movw	r1, #35999	; 0x8c9f
   12484:	movt	r1, #1
   12488:	mov	r0, r6
   1248c:	bl	11300 <fdopen@plt>
   12490:	mov	sl, r0
   12494:	mov	r0, r4
   12498:	bl	1148c <strlen@plt>
   1249c:	mov	r2, r0
   124a0:	mov	r0, r6
   124a4:	mov	r1, r4
   124a8:	bl	114e0 <write@plt>
   124ac:	cmp	r0, #0
   124b0:	blt	12710 <putc_unlocked@plt+0x1128>
   124b4:	sub	r5, fp, #232	; 0xe8
   124b8:	mov	r0, r5
   124bc:	mov	r1, #200	; 0xc8
   124c0:	mov	r2, sl
   124c4:	bl	11378 <fgets@plt>
   124c8:	cmp	r0, #0
   124cc:	beq	126e4 <putc_unlocked@plt+0x10fc>
   124d0:	mov	r9, #0
   124d4:	add	r4, r9, #1
   124d8:	mov	r7, r8
   124dc:	cmp	r7, #1
   124e0:	bne	1252c <putc_unlocked@plt+0xf44>
   124e4:	movw	r0, #45444	; 0xb184
   124e8:	movt	r0, #2
   124ec:	ldr	r6, [r0, r4, lsl #2]
   124f0:	mov	r0, r6
   124f4:	bl	1148c <strlen@plt>
   124f8:	mov	r2, r0
   124fc:	mov	r0, r5
   12500:	mov	r1, r6
   12504:	bl	115ac <strncmp@plt>
   12508:	cmp	r0, #0
   1250c:	moveq	r7, r0
   12510:	mov	r0, r5
   12514:	mov	r1, #200	; 0xc8
   12518:	mov	r2, sl
   1251c:	bl	11378 <fgets@plt>
   12520:	cmp	r0, #0
   12524:	bne	124dc <putc_unlocked@plt+0xef4>
   12528:	b	126e8 <putc_unlocked@plt+0x1100>
   1252c:	cmp	r7, #0
   12530:	bne	125b4 <putc_unlocked@plt+0xfcc>
   12534:	mov	r4, r5
   12538:	mov	r5, sl
   1253c:	movw	r0, #45444	; 0xb184
   12540:	movt	r0, #2
   12544:	ldr	sl, [r0]
   12548:	mov	r9, #0
   1254c:	cmp	sl, #0
   12550:	beq	125a8 <putc_unlocked@plt+0xfc0>
   12554:	mov	r0, sl
   12558:	bl	1148c <strlen@plt>
   1255c:	mov	r2, r0
   12560:	mov	r0, r4
   12564:	mov	r1, sl
   12568:	bl	115ac <strncmp@plt>
   1256c:	mov	r8, #1
   12570:	cmp	r0, #0
   12574:	beq	126bc <putc_unlocked@plt+0x10d4>
   12578:	movw	r0, #45444	; 0xb184
   1257c:	movt	r0, #2
   12580:	add	r0, r0, r9, lsl #2
   12584:	ldr	sl, [r0, #8]
   12588:	add	r9, r9, #2
   1258c:	cmp	sl, #0
   12590:	bne	12554 <putc_unlocked@plt+0xf6c>
   12594:	cmp	r7, #1
   12598:	mov	sl, r5
   1259c:	mov	r5, r4
   125a0:	bne	125b4 <putc_unlocked@plt+0xfcc>
   125a4:	b	126c4 <putc_unlocked@plt+0x10dc>
   125a8:	mov	r7, #0
   125ac:	mov	sl, r5
   125b0:	mov	r5, r4
   125b4:	mov	r0, r5
   125b8:	movw	r1, #40006	; 0x9c46
   125bc:	movt	r1, #1
   125c0:	mov	r2, #10
   125c4:	bl	115ac <strncmp@plt>
   125c8:	cmp	r0, #0
   125cc:	add	r4, sp, #8
   125d0:	sub	r6, fp, #488	; 0x1e8
   125d4:	bne	12668 <putc_unlocked@plt+0x1080>
   125d8:	str	r4, [sp]
   125dc:	mov	r0, r5
   125e0:	movw	r1, #40017	; 0x9c51
   125e4:	movt	r1, #1
   125e8:	mov	r2, r6
   125ec:	sub	r3, fp, #504	; 0x1f8
   125f0:	bl	1151c <sscanf@plt>
   125f4:	cmp	r0, #3
   125f8:	bne	12668 <putc_unlocked@plt+0x1080>
   125fc:	movw	r0, #59588	; 0xe8c4
   12600:	movt	r0, #2
   12604:	ldr	r0, [r0]
   12608:	cmp	r0, #0
   1260c:	beq	12624 <putc_unlocked@plt+0x103c>
   12610:	movw	r0, #40063	; 0x9c7f
   12614:	movt	r0, #1
   12618:	mov	r1, r4
   1261c:	mov	r2, r6
   12620:	bl	1133c <printf@plt>
   12624:	mov	r0, r4
   12628:	bl	1148c <strlen@plt>
   1262c:	add	r0, r4, r0
   12630:	mov	r1, #0
   12634:	strb	r1, [r0, #2]
   12638:	movw	r1, #2573	; 0xa0d
   1263c:	strh	r1, [r0]
   12640:	mov	r0, r6
   12644:	sub	r1, fp, #504	; 0x1f8
   12648:	bl	11bc8 <putc_unlocked@plt+0x5e0>
   1264c:	mov	r6, r0
   12650:	mov	r1, r4
   12654:	bl	1245c <putc_unlocked@plt+0xe74>
   12658:	mov	r0, r6
   1265c:	bl	11e90 <putc_unlocked@plt+0x8a8>
   12660:	mov	r8, r7
   12664:	b	126c4 <putc_unlocked@plt+0x10dc>
   12668:	mov	r0, r5
   1266c:	mov	r2, #1
   12670:	movw	r3, #9217	; 0x2401
   12674:	b	1267c <putc_unlocked@plt+0x1094>
   12678:	add	r0, r0, #1
   1267c:	ldrb	r1, [r0]
   12680:	cmp	r1, #13
   12684:	bhi	12678 <putc_unlocked@plt+0x1090>
   12688:	tst	r3, r2, lsl r1
   1268c:	beq	12678 <putc_unlocked@plt+0x1090>
   12690:	mov	r1, #0
   12694:	strb	r1, [r0]
   12698:	movw	r0, #59580	; 0xe8bc
   1269c:	movt	r0, #2
   126a0:	ldr	r0, [r0]
   126a4:	movw	r1, #41824	; 0xa360
   126a8:	movt	r1, #1
   126ac:	mov	r2, r5
   126b0:	bl	114a4 <fprintf@plt>
   126b4:	mov	r8, r7
   126b8:	b	126c4 <putc_unlocked@plt+0x10dc>
   126bc:	mov	sl, r5
   126c0:	mov	r5, r4
   126c4:	mov	r0, r5
   126c8:	mov	r1, #200	; 0xc8
   126cc:	mov	r2, sl
   126d0:	bl	11378 <fgets@plt>
   126d4:	cmp	r0, #0
   126d8:	mov	r7, r8
   126dc:	bne	124d4 <putc_unlocked@plt+0xeec>
   126e0:	b	126e8 <putc_unlocked@plt+0x1100>
   126e4:	mov	r7, r8
   126e8:	mov	r0, sl
   126ec:	bl	11384 <ferror@plt>
   126f0:	cmp	r0, #0
   126f4:	bne	1271c <putc_unlocked@plt+0x1134>
   126f8:	cmp	r7, #1
   126fc:	subne	sp, fp, #28
   12700:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12704:	movw	r0, #40101	; 0x9ca5
   12708:	movt	r0, #1
   1270c:	bl	129b0 <putc_unlocked@plt+0x13c8>
   12710:	movw	r0, #40000	; 0x9c40
   12714:	movt	r0, #1
   12718:	bl	1294c <putc_unlocked@plt+0x1364>
   1271c:	movw	r0, #40095	; 0x9c9f
   12720:	movt	r0, #1
   12724:	bl	1294c <putc_unlocked@plt+0x1364>
   12728:	push	{r4, r5, fp, lr}
   1272c:	add	fp, sp, #8
   12730:	mov	r5, r1
   12734:	mov	r4, r0
   12738:	movw	r0, #5072	; 0x13d0
   1273c:	movt	r0, #6
   12740:	cmp	r4, r0
   12744:	blt	12754 <putc_unlocked@plt+0x116c>
   12748:	movw	r0, #39834	; 0x9b9a
   1274c:	movt	r0, #1
   12750:	bl	1142c <puts@plt>
   12754:	ldr	r0, [r5, #4]
   12758:	movw	r1, #35440	; 0x8a70
   1275c:	movt	r1, #1
   12760:	cmp	r0, #0
   12764:	beq	12790 <putc_unlocked@plt+0x11a8>
   12768:	add	r2, r5, #12
   1276c:	ldrh	r3, [r2, #-12]
   12770:	cmp	r3, r4
   12774:	bgt	12784 <putc_unlocked@plt+0x119c>
   12778:	ldrh	r3, [r2, #-10]
   1277c:	cmp	r3, r4
   12780:	popge	{r4, r5, fp, pc}
   12784:	ldr	r0, [r2], #8
   12788:	cmp	r0, #0
   1278c:	bne	1276c <putc_unlocked@plt+0x1184>
   12790:	mov	r0, r1
   12794:	pop	{r4, r5, fp, pc}
   12798:	push	{r4, sl, fp, lr}
   1279c:	add	fp, sp, #8
   127a0:	sub	sp, sp, #24
   127a4:	mov	r4, #0
   127a8:	cmp	r0, #0
   127ac:	beq	127fc <putc_unlocked@plt+0x1214>
   127b0:	add	r1, sp, #8
   127b4:	add	r2, sp, #12
   127b8:	str	r2, [sp]
   127bc:	str	r1, [sp, #4]
   127c0:	movw	r1, #40262	; 0x9d46
   127c4:	movt	r1, #1
   127c8:	sub	r2, fp, #12
   127cc:	add	r3, sp, #16
   127d0:	bl	1151c <sscanf@plt>
   127d4:	cmp	r0, #4
   127d8:	bne	127fc <putc_unlocked@plt+0x1214>
   127dc:	ldr	r0, [sp, #16]
   127e0:	lsl	r0, r0, #16
   127e4:	ldr	r1, [fp, #-12]
   127e8:	add	r0, r0, r1, lsl #24
   127ec:	ldr	r1, [sp, #12]
   127f0:	add	r0, r0, r1, lsl #8
   127f4:	ldr	r1, [sp, #8]
   127f8:	add	r4, r0, r1
   127fc:	mov	r0, r4
   12800:	sub	sp, fp, #8
   12804:	pop	{r4, sl, fp, pc}
   12808:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1280c:	add	fp, sp, #28
   12810:	sub	sp, sp, #4
   12814:	mov	r9, r1
   12818:	mov	r8, r0
   1281c:	mov	r7, r0
   12820:	ldrb	r0, [r7], #1
   12824:	cmp	r0, #0
   12828:	bne	12820 <putc_unlocked@plt+0x1238>
   1282c:	mov	r0, #0
   12830:	mov	r4, r9
   12834:	mov	r5, r0
   12838:	sub	r0, r0, #1
   1283c:	ldrb	r1, [r4], #1
   12840:	cmp	r1, #0
   12844:	bne	12834 <putc_unlocked@plt+0x124c>
   12848:	mvn	r6, #1
   1284c:	mov	sl, #0
   12850:	add	r0, r4, r6
   12854:	cmp	r0, r9
   12858:	addcs	r0, r7, r6
   1285c:	cmpcs	r0, r8
   12860:	bcc	12890 <putc_unlocked@plt+0x12a8>
   12864:	bl	1145c <__ctype_tolower_loc@plt>
   12868:	ldrb	r1, [r4, r6]
   1286c:	ldrb	r2, [r7, r6]
   12870:	ldr	r0, [r0]
   12874:	ldr	r0, [r0, r2, lsl #2]
   12878:	cmp	r0, r1
   1287c:	bne	12890 <putc_unlocked@plt+0x12a8>
   12880:	adds	r5, r5, #1
   12884:	sub	r6, r6, #1
   12888:	bne	12850 <putc_unlocked@plt+0x1268>
   1288c:	mov	sl, #1
   12890:	mov	r0, sl
   12894:	sub	sp, fp, #28
   12898:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1289c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   128a0:	add	fp, sp, #24
   128a4:	sub	sp, sp, #8
   128a8:	mov	r5, r1
   128ac:	mov	r6, r0
   128b0:	add	r1, sp, #4
   128b4:	mov	r0, r5
   128b8:	bl	11324 <inet_aton@plt>
   128bc:	ldr	r4, [r6]
   128c0:	mov	r8, #0
   128c4:	cmp	r4, #0
   128c8:	beq	12940 <putc_unlocked@plt+0x1358>
   128cc:	mov	r7, r0
   128d0:	mov	r0, r4
   128d4:	mov	r1, r5
   128d8:	bl	11330 <strcmp@plt>
   128dc:	cmp	r0, #0
   128e0:	beq	1293c <putc_unlocked@plt+0x1354>
   128e4:	cmp	r7, #0
   128e8:	beq	1292c <putc_unlocked@plt+0x1344>
   128ec:	mov	r0, r4
   128f0:	bl	11594 <gethostbyname@plt>
   128f4:	cmp	r0, #0
   128f8:	beq	1292c <putc_unlocked@plt+0x1344>
   128fc:	ldr	r0, [r0, #16]
   12900:	ldr	r1, [r0]
   12904:	cmp	r1, #0
   12908:	beq	1292c <putc_unlocked@plt+0x1344>
   1290c:	add	r0, r0, #4
   12910:	ldr	r2, [sp, #4]
   12914:	ldr	r1, [r1]
   12918:	cmp	r1, r2
   1291c:	beq	1293c <putc_unlocked@plt+0x1354>
   12920:	ldr	r1, [r0], #4
   12924:	cmp	r1, #0
   12928:	bne	12914 <putc_unlocked@plt+0x132c>
   1292c:	ldr	r4, [r6, #4]!
   12930:	cmp	r4, #0
   12934:	bne	128d0 <putc_unlocked@plt+0x12e8>
   12938:	b	12940 <putc_unlocked@plt+0x1358>
   1293c:	mov	r8, #1
   12940:	mov	r0, r8
   12944:	sub	sp, fp, #24
   12948:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1294c:	sub	sp, sp, #12
   12950:	push	{fp, lr}
   12954:	mov	fp, sp
   12958:	sub	sp, sp, #4
   1295c:	mov	ip, r0
   12960:	add	r0, fp, #8
   12964:	stm	r0, {r1, r2, r3}
   12968:	add	r2, fp, #8
   1296c:	str	r2, [sp]
   12970:	movw	r4, #59576	; 0xe8b8
   12974:	movt	r4, #2
   12978:	ldr	r0, [r4]
   1297c:	mov	r1, ip
   12980:	bl	11504 <vfprintf@plt>
   12984:	ldr	r4, [r4]
   12988:	bl	114b0 <__errno_location@plt>
   1298c:	ldr	r0, [r0]
   12990:	bl	11450 <strerror@plt>
   12994:	mov	r2, r0
   12998:	movw	r1, #42437	; 0xa5c5
   1299c:	movt	r1, #1
   129a0:	mov	r0, r4
   129a4:	bl	114a4 <fprintf@plt>
   129a8:	mov	r0, #1
   129ac:	bl	11480 <exit@plt>
   129b0:	sub	sp, sp, #12
   129b4:	push	{fp, lr}
   129b8:	mov	fp, sp
   129bc:	sub	sp, sp, #4
   129c0:	mov	ip, r0
   129c4:	add	r0, fp, #8
   129c8:	stm	r0, {r1, r2, r3}
   129cc:	add	r2, fp, #8
   129d0:	str	r2, [sp]
   129d4:	movw	r4, #59576	; 0xe8b8
   129d8:	movt	r4, #2
   129dc:	ldr	r0, [r4]
   129e0:	mov	r1, ip
   129e4:	bl	11504 <vfprintf@plt>
   129e8:	ldr	r1, [r4]
   129ec:	mov	r0, #10
   129f0:	bl	11510 <fputc@plt>
   129f4:	mov	r0, #1
   129f8:	bl	11480 <exit@plt>
   129fc:	push	{r4, r5, r6, r7, fp, lr}
   12a00:	add	fp, sp, #16
   12a04:	mov	r5, #7
   12a08:	cmp	r0, #1
   12a0c:	blt	12b3c <putc_unlocked@plt+0x1554>
   12a10:	mov	r6, r0
   12a14:	cmp	r0, #127	; 0x7f
   12a18:	bhi	12b3c <putc_unlocked@plt+0x1554>
   12a1c:	mov	r4, r1
   12a20:	sub	r1, r6, #113	; 0x71
   12a24:	cmp	r1, #5
   12a28:	bhi	12a44 <putc_unlocked@plt+0x145c>
   12a2c:	mov	r0, #1
   12a30:	mov	r2, #41	; 0x29
   12a34:	tst	r2, r0, lsl r1
   12a38:	movwne	r1, #59600	; 0xe8d0
   12a3c:	movtne	r1, #2
   12a40:	strne	r0, [r1]
   12a44:	movw	r7, #59660	; 0xe90c
   12a48:	movt	r7, #2
   12a4c:	ldr	r0, [r7, #12]
   12a50:	ldr	r1, [r7, #16]
   12a54:	cmp	r1, r0
   12a58:	bne	12a6c <putc_unlocked@plt+0x1484>
   12a5c:	movw	r0, #59660	; 0xe90c
   12a60:	movt	r0, #2
   12a64:	mov	r1, #1
   12a68:	bl	14020 <_obstack_newchunk@@Base>
   12a6c:	ldr	r0, [r7, #12]
   12a70:	add	r1, r0, #1
   12a74:	str	r1, [r7, #12]
   12a78:	mov	r1, #45	; 0x2d
   12a7c:	strb	r1, [r0]
   12a80:	ldr	r0, [r7, #12]
   12a84:	ldr	r1, [r7, #16]
   12a88:	cmp	r1, r0
   12a8c:	bne	12aa0 <putc_unlocked@plt+0x14b8>
   12a90:	movw	r0, #59660	; 0xe90c
   12a94:	movt	r0, #2
   12a98:	mov	r1, #1
   12a9c:	bl	14020 <_obstack_newchunk@@Base>
   12aa0:	ldr	r0, [r7, #12]
   12aa4:	add	r1, r0, #1
   12aa8:	str	r1, [r7, #12]
   12aac:	strb	r6, [r0]
   12ab0:	mov	r5, #0
   12ab4:	cmp	r4, #0
   12ab8:	beq	12b3c <putc_unlocked@plt+0x1554>
   12abc:	ldr	r0, [r7, #12]
   12ac0:	ldr	r1, [r7, #16]
   12ac4:	cmp	r1, r0
   12ac8:	bne	12adc <putc_unlocked@plt+0x14f4>
   12acc:	movw	r0, #59660	; 0xe90c
   12ad0:	movt	r0, #2
   12ad4:	mov	r1, #1
   12ad8:	bl	14020 <_obstack_newchunk@@Base>
   12adc:	ldr	r0, [r7, #12]
   12ae0:	add	r1, r0, #1
   12ae4:	str	r1, [r7, #12]
   12ae8:	mov	r1, #32
   12aec:	strb	r1, [r0]
   12af0:	mov	r0, r4
   12af4:	bl	1148c <strlen@plt>
   12af8:	mov	r6, r0
   12afc:	ldr	r0, [r7, #12]
   12b00:	ldr	r1, [r7, #16]
   12b04:	sub	r0, r1, r0
   12b08:	cmp	r0, r6
   12b0c:	bcs	12b20 <putc_unlocked@plt+0x1538>
   12b10:	movw	r0, #59660	; 0xe90c
   12b14:	movt	r0, #2
   12b18:	mov	r1, r6
   12b1c:	bl	14020 <_obstack_newchunk@@Base>
   12b20:	ldr	r0, [r7, #12]
   12b24:	mov	r1, r4
   12b28:	mov	r2, r6
   12b2c:	bl	1139c <memcpy@plt>
   12b30:	ldr	r0, [r7, #12]
   12b34:	add	r0, r0, r6
   12b38:	str	r0, [r7, #12]
   12b3c:	mov	r0, r5
   12b40:	pop	{r4, r5, r6, r7, fp, pc}
   12b44:	push	{r4, r5, r6, sl, fp, lr}
   12b48:	add	fp, sp, #16
   12b4c:	mov	r5, r1
   12b50:	mov	r1, r0
   12b54:	mov	r0, #7
   12b58:	cmp	r1, #103	; 0x67
   12b5c:	bgt	12b84 <putc_unlocked@plt+0x159c>
   12b60:	cmp	r1, #72	; 0x48
   12b64:	beq	12bf8 <putc_unlocked@plt+0x1610>
   12b68:	cmp	r1, #86	; 0x56
   12b6c:	bne	12c1c <putc_unlocked@plt+0x1634>
   12b70:	movw	r0, #59588	; 0xe8c4
   12b74:	movt	r0, #2
   12b78:	mov	r1, #1
   12b7c:	str	r1, [r0]
   12b80:	b	12c18 <putc_unlocked@plt+0x1630>
   12b84:	cmp	r1, #112	; 0x70
   12b88:	beq	12c0c <putc_unlocked@plt+0x1624>
   12b8c:	cmp	r1, #104	; 0x68
   12b90:	popne	{r4, r5, r6, sl, fp, pc}
   12b94:	mov	r0, r5
   12b98:	bl	1148c <strlen@plt>
   12b9c:	add	r0, r0, #1
   12ba0:	bl	14700 <_obstack_memory_used@@Base+0x4d4>
   12ba4:	mov	r4, r0
   12ba8:	movw	r0, #59592	; 0xe8c8
   12bac:	movt	r0, #2
   12bb0:	str	r4, [r0]
   12bb4:	b	12bc8 <putc_unlocked@plt+0x15e0>
   12bb8:	bl	1145c <__ctype_tolower_loc@plt>
   12bbc:	ldr	r0, [r0]
   12bc0:	ldr	r0, [r0, r6, lsl #2]
   12bc4:	strb	r0, [r4], #1
   12bc8:	add	r5, r5, #1
   12bcc:	ldrb	r6, [r5, #-1]
   12bd0:	cmp	r6, #0
   12bd4:	beq	12bec <putc_unlocked@plt+0x1604>
   12bd8:	cmp	r6, #58	; 0x3a
   12bdc:	bne	12bb8 <putc_unlocked@plt+0x15d0>
   12be0:	movw	r0, #59596	; 0xe8cc
   12be4:	movt	r0, #2
   12be8:	str	r5, [r0]
   12bec:	mov	r0, #0
   12bf0:	strb	r0, [r4]
   12bf4:	pop	{r4, r5, r6, sl, fp, pc}
   12bf8:	movw	r1, #58848	; 0xe5e0
   12bfc:	movt	r1, #2
   12c00:	mov	r0, #0
   12c04:	str	r0, [r1]
   12c08:	pop	{r4, r5, r6, sl, fp, pc}
   12c0c:	movw	r0, #59596	; 0xe8cc
   12c10:	movt	r0, #2
   12c14:	str	r5, [r0]
   12c18:	mov	r0, #0
   12c1c:	pop	{r4, r5, r6, sl, fp, pc}

00012c20 <argp_parse@@Base>:
   12c20:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12c24:	add	fp, sp, #24
   12c28:	sub	sp, sp, #128	; 0x80
   12c2c:	mov	r6, r3
   12c30:	mov	r4, r2
   12c34:	mov	r8, r1
   12c38:	mov	r7, r0
   12c3c:	mov	r0, #0
   12c40:	str	r0, [fp, #-152]	; 0xffffff68
   12c44:	tst	r3, #1
   12c48:	bne	12c84 <argp_parse@@Base+0x64>
   12c4c:	movw	r0, #59572	; 0xe8b4
   12c50:	movt	r0, #2
   12c54:	ldr	r1, [r0]
   12c58:	cmp	r1, #0
   12c5c:	ldreq	r1, [r4]
   12c60:	streq	r1, [r0]
   12c64:	movw	r5, #59568	; 0xe8b0
   12c68:	movt	r5, #2
   12c6c:	ldr	r0, [r5]
   12c70:	cmp	r0, #0
   12c74:	bne	12c84 <argp_parse@@Base+0x64>
   12c78:	ldr	r0, [r4]
   12c7c:	bl	13dc4 <argp_usage@@Base+0x108>
   12c80:	str	r0, [r5]
   12c84:	ldr	ip, [fp, #12]
   12c88:	tst	r6, #16
   12c8c:	bne	12d38 <argp_parse@@Base+0x118>
   12c90:	mov	r3, sp
   12c94:	sub	r0, r3, #64	; 0x40
   12c98:	mov	sp, r0
   12c9c:	mov	r5, sp
   12ca0:	sub	r1, r5, #32
   12ca4:	mov	sp, r1
   12ca8:	vmov.i32	q8, #0	; 0x00000000
   12cac:	sub	r5, r5, #20
   12cb0:	vst1.32	{d16-d17}, [r5]
   12cb4:	mov	r5, r1
   12cb8:	vst1.64	{d16-d17}, [r5]!
   12cbc:	str	r0, [r5]
   12cc0:	sub	r5, r3, #32
   12cc4:	vst1.64	{d16-d17}, [r5]
   12cc8:	sub	r3, r3, #48	; 0x30
   12ccc:	vst1.64	{d16-d17}, [r3]
   12cd0:	mov	r3, #48	; 0x30
   12cd4:	mov	r2, r0
   12cd8:	vst1.64	{d16-d17}, [r2], r3
   12cdc:	vst1.64	{d16-d17}, [r2]
   12ce0:	cmp	r7, #0
   12ce4:	strne	r7, [r0], #16
   12ce8:	movw	r2, #41168	; 0xa0d0
   12cec:	movt	r2, #1
   12cf0:	mov	r3, r0
   12cf4:	str	r2, [r3], #16
   12cf8:	movw	r2, #59712	; 0xe940
   12cfc:	movt	r2, #2
   12d00:	ldr	r2, [r2]
   12d04:	cmp	r2, #0
   12d08:	movweq	r2, #59608	; 0xe8d8
   12d0c:	movteq	r2, #2
   12d10:	ldreq	r2, [r2]
   12d14:	cmpeq	r2, #0
   12d18:	beq	12d2c <argp_parse@@Base+0x10c>
   12d1c:	movw	r0, #41196	; 0xa0ec
   12d20:	movt	r0, #1
   12d24:	str	r0, [r3]
   12d28:	mov	r0, r3
   12d2c:	mov	r2, #0
   12d30:	str	r2, [r0, #16]
   12d34:	b	12d3c <argp_parse@@Base+0x11c>
   12d38:	mov	r1, r7
   12d3c:	push	{r6, ip}
   12d40:	sub	r0, fp, #148	; 0x94
   12d44:	mov	r2, r8
   12d48:	mov	r3, r4
   12d4c:	bl	12da0 <argp_parse@@Base+0x180>
   12d50:	add	sp, sp, #8
   12d54:	cmp	r0, #0
   12d58:	beq	12d64 <argp_parse@@Base+0x144>
   12d5c:	sub	sp, fp, #24
   12d60:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12d64:	ldr	r4, [fp, #8]
   12d68:	sub	r5, fp, #148	; 0x94
   12d6c:	sub	r6, fp, #152	; 0x98
   12d70:	mov	r0, r5
   12d74:	mov	r1, r6
   12d78:	bl	13044 <argp_parse@@Base+0x424>
   12d7c:	cmp	r0, #0
   12d80:	beq	12d70 <argp_parse@@Base+0x150>
   12d84:	mov	r1, r0
   12d88:	ldr	r2, [fp, #-152]	; 0xffffff68
   12d8c:	sub	r0, fp, #148	; 0x94
   12d90:	mov	r3, r4
   12d94:	bl	131b4 <argp_parse@@Base+0x594>
   12d98:	sub	sp, fp, #24
   12d9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12da0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12da4:	add	fp, sp, #28
   12da8:	sub	sp, sp, #60	; 0x3c
   12dac:	str	r3, [sp, #12]
   12db0:	str	r2, [sp, #8]
   12db4:	mov	r7, r1
   12db8:	mov	r4, r0
   12dbc:	vmov.i32	q8, #0	; 0x00000000
   12dc0:	mov	r5, #12
   12dc4:	add	r6, sp, #16
   12dc8:	mov	r0, r6
   12dcc:	vst1.64	{d16-d17}, [r0], r5
   12dd0:	vst1.32	{d16-d17}, [r0]
   12dd4:	mov	r0, #0
   12dd8:	str	r0, [sp, #48]	; 0x30
   12ddc:	str	r0, [sp, #52]	; 0x34
   12de0:	str	r0, [sp, #56]	; 0x38
   12de4:	ldr	r1, [fp, #8]
   12de8:	mov	r0, #1
   12dec:	bic	r0, r0, r1, lsr #2
   12df0:	str	r0, [sp, #44]	; 0x2c
   12df4:	cmp	r7, #0
   12df8:	beq	12e08 <argp_parse@@Base+0x1e8>
   12dfc:	add	r1, sp, #44	; 0x2c
   12e00:	mov	r0, r7
   12e04:	bl	135fc <argp_parse@@Base+0x9dc>
   12e08:	str	r7, [sp, #4]
   12e0c:	add	r7, sp, #44	; 0x2c
   12e10:	ldm	r7, {r0, r1, r2, r7}
   12e14:	add	r2, r2, r2, lsl #3
   12e18:	mov	r3, #36	; 0x24
   12e1c:	add	r9, r3, r2, lsl #2
   12e20:	add	r8, r9, r7, lsl #2
   12e24:	add	r1, r8, r1, lsl #4
   12e28:	add	sl, r1, #16
   12e2c:	add	r0, r0, sl
   12e30:	add	r0, r0, #1
   12e34:	bl	14b34 <_obstack_memory_used@@Base+0x908>
   12e38:	str	r0, [r4, #120]	; 0x78
   12e3c:	cmp	r0, #0
   12e40:	beq	13038 <argp_parse@@Base+0x418>
   12e44:	lsl	r2, r7, #2
   12e48:	str	r0, [r4, #48]	; 0x30
   12e4c:	add	r1, r0, r9
   12e50:	str	r1, [r4, #56]	; 0x38
   12e54:	add	r3, r0, r8
   12e58:	add	r0, r0, sl
   12e5c:	stmib	r4, {r0, r3}
   12e60:	mov	r0, #1
   12e64:	str	r0, [r4, #12]
   12e68:	str	r0, [r4, #16]
   12e6c:	mov	r8, #1
   12e70:	mov	r0, #12
   12e74:	vld1.64	{d16-d17}, [r6], r0
   12e78:	add	r0, r4, #20
   12e7c:	vld1.32	{d18-d19}, [r6]
   12e80:	vst1.32	{d16-d17}, [r0]
   12e84:	add	r0, r4, #32
   12e88:	vst1.32	{d18-d19}, [r0]
   12e8c:	mov	r6, #0
   12e90:	mov	r0, r1
   12e94:	mov	r1, #0
   12e98:	bl	114d4 <memset@plt>
   12e9c:	mov	r0, r4
   12ea0:	ldr	r1, [sp, #4]
   12ea4:	ldr	r5, [fp, #8]
   12ea8:	mov	r2, r5
   12eac:	bl	136c8 <argp_parse@@Base+0xaa8>
   12eb0:	vmov.i32	q8, #0	; 0x00000000
   12eb4:	add	r0, r4, #84	; 0x54
   12eb8:	vst1.32	{d16-d17}, [r0]
   12ebc:	ldr	r0, [r4]
   12ec0:	ldr	r7, [r4, #48]	; 0x30
   12ec4:	ldr	r1, [r4, #52]	; 0x34
   12ec8:	movw	r2, #59576	; 0xe8b8
   12ecc:	movt	r2, #2
   12ed0:	ldr	r2, [r2]
   12ed4:	movw	r3, #59580	; 0xe8bc
   12ed8:	movt	r3, #2
   12edc:	ldr	r3, [r3]
   12ee0:	str	r8, [r4, #60]	; 0x3c
   12ee4:	str	r0, [r4, #64]	; 0x40
   12ee8:	ldr	r0, [sp, #8]
   12eec:	str	r0, [r4, #68]	; 0x44
   12ef0:	ldr	r0, [sp, #12]
   12ef4:	str	r0, [r4, #72]	; 0x48
   12ef8:	str	r6, [r4, #76]	; 0x4c
   12efc:	str	r5, [r4, #80]	; 0x50
   12f00:	str	r6, [r4, #100]	; 0x64
   12f04:	str	r6, [r4, #104]	; 0x68
   12f08:	add	r0, r4, #108	; 0x6c
   12f0c:	stm	r0, {r2, r3, r4}
   12f10:	cmp	r7, r1
   12f14:	ldrcc	r0, [fp, #12]
   12f18:	strcc	r0, [r7, #24]
   12f1c:	ldr	r0, [r4, #52]	; 0x34
   12f20:	cmp	r7, r0
   12f24:	bcs	12fbc <argp_parse@@Base+0x39c>
   12f28:	add	r6, r4, #64	; 0x40
   12f2c:	mov	r5, #0
   12f30:	movw	r9, #3
   12f34:	movt	r9, #256	; 0x100
   12f38:	cmp	r5, #7
   12f3c:	cmpne	r5, #0
   12f40:	bne	13038 <argp_parse@@Base+0x418>
   12f44:	ldr	r0, [r7, #16]
   12f48:	cmp	r0, #0
   12f4c:	ldrne	r1, [r7, #20]
   12f50:	ldrne	r0, [r0, #28]
   12f54:	ldrne	r0, [r0, r1, lsl #2]
   12f58:	strne	r0, [r7, #24]
   12f5c:	ldr	r0, [r7]
   12f60:	cmp	r0, #0
   12f64:	bne	12f88 <argp_parse@@Base+0x368>
   12f68:	ldr	r0, [r7, #4]
   12f6c:	ldr	r0, [r0, #16]
   12f70:	cmp	r0, #0
   12f74:	ldrne	r0, [r0]
   12f78:	cmpne	r0, #0
   12f7c:	ldrne	r0, [r7, #24]
   12f80:	ldrne	r1, [r7, #28]
   12f84:	strne	r0, [r1]
   12f88:	mov	r0, r7
   12f8c:	mov	r1, r6
   12f90:	mov	r2, r9
   12f94:	mov	r3, #0
   12f98:	bl	1377c <argp_parse@@Base+0xb5c>
   12f9c:	mov	r5, r0
   12fa0:	add	r7, r7, #36	; 0x24
   12fa4:	ldr	r0, [r4, #52]	; 0x34
   12fa8:	cmp	r7, r0
   12fac:	bcc	12f38 <argp_parse@@Base+0x318>
   12fb0:	cmp	r5, #7
   12fb4:	cmpne	r5, #0
   12fb8:	bne	13038 <argp_parse@@Base+0x418>
   12fbc:	ldr	r0, [r4, #80]	; 0x50
   12fc0:	tst	r0, #2
   12fc4:	bne	12fd8 <argp_parse@@Base+0x3b8>
   12fc8:	mov	r0, #1
   12fcc:	str	r0, [r4, #16]
   12fd0:	ldr	r2, [sp, #12]
   12fd4:	b	13004 <argp_parse@@Base+0x3e4>
   12fd8:	mov	r1, #0
   12fdc:	str	r1, [r4, #16]
   12fe0:	tst	r0, #1
   12fe4:	ldr	r2, [sp, #12]
   12fe8:	beq	13004 <argp_parse@@Base+0x3e4>
   12fec:	ldr	r0, [r4, #68]	; 0x44
   12ff0:	ldr	r1, [r4, #72]	; 0x48
   12ff4:	sub	r1, r1, #4
   12ff8:	add	r0, r0, #1
   12ffc:	str	r0, [r4, #68]	; 0x44
   13000:	str	r1, [r4, #72]	; 0x48
   13004:	ldr	r0, [r4, #72]	; 0x48
   13008:	cmp	r0, r2
   1300c:	beq	13020 <argp_parse@@Base+0x400>
   13010:	movw	r0, #59568	; 0xe8b0
   13014:	movt	r0, #2
   13018:	ldr	r0, [r0]
   1301c:	b	13030 <argp_parse@@Base+0x410>
   13020:	ldr	r0, [r2]
   13024:	cmp	r0, #0
   13028:	beq	13010 <argp_parse@@Base+0x3f0>
   1302c:	bl	13dc4 <argp_usage@@Base+0x108>
   13030:	str	r0, [r4, #104]	; 0x68
   13034:	mov	r5, #0
   13038:	mov	r0, r5
   1303c:	sub	sp, fp, #28
   13040:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13044:	push	{r4, r5, r6, r7, fp, lr}
   13048:	add	fp, sp, #16
   1304c:	sub	sp, sp, #8
   13050:	mov	r7, r1
   13054:	mov	r5, r0
   13058:	ldr	r0, [r0, #88]	; 0x58
   1305c:	cmp	r0, #0
   13060:	beq	13074 <argp_parse@@Base+0x454>
   13064:	ldr	r1, [r5, #76]	; 0x4c
   13068:	cmp	r1, r0
   1306c:	movlt	r0, #0
   13070:	strlt	r0, [r5, #88]	; 0x58
   13074:	ldr	r0, [r5, #60]	; 0x3c
   13078:	cmp	r0, #0
   1307c:	beq	1308c <argp_parse@@Base+0x46c>
   13080:	ldr	r0, [r5, #88]	; 0x58
   13084:	cmp	r0, #0
   13088:	beq	130c4 <argp_parse@@Base+0x4a4>
   1308c:	ldr	r1, [r5, #68]	; 0x44
   13090:	ldr	r0, [r5, #76]	; 0x4c
   13094:	mov	r2, #1
   13098:	cmp	r0, r1
   1309c:	bge	131a4 <argp_parse@@Base+0x584>
   130a0:	ldrb	r1, [r5, #80]	; 0x50
   130a4:	tst	r1, #4
   130a8:	bne	131a4 <argp_parse@@Base+0x584>
   130ac:	add	r1, r0, #1
   130b0:	str	r1, [r5, #76]	; 0x4c
   130b4:	ldr	r1, [r5, #72]	; 0x48
   130b8:	ldr	r0, [r1, r0, lsl #2]
   130bc:	str	r0, [r5, #24]
   130c0:	b	13160 <argp_parse@@Base+0x540>
   130c4:	mvn	r0, #0
   130c8:	str	r0, [r5, #20]
   130cc:	add	r2, r5, #68	; 0x44
   130d0:	ldm	r2, {r0, r1, r2}
   130d4:	str	r2, [r5, #12]
   130d8:	add	r6, r5, #12
   130dc:	ldmib	r5, {r2, r3}
   130e0:	ldrb	r4, [r5, #80]	; 0x50
   130e4:	tst	r4, #64	; 0x40
   130e8:	bne	130fc <argp_parse@@Base+0x4dc>
   130ec:	mov	r4, #0
   130f0:	stm	sp, {r4, r6}
   130f4:	bl	13e9c <argp_usage@@Base+0x1e0>
   130f8:	b	13108 <argp_parse@@Base+0x4e8>
   130fc:	mov	r4, #0
   13100:	stm	sp, {r4, r6}
   13104:	bl	13f00 <argp_usage@@Base+0x244>
   13108:	mov	r1, r0
   1310c:	ldr	r6, [r5, #12]
   13110:	str	r6, [r5, #76]	; 0x4c
   13114:	cmp	r0, #63	; 0x3f
   13118:	beq	13180 <argp_parse@@Base+0x560>
   1311c:	cmp	r1, #1
   13120:	beq	13160 <argp_parse@@Base+0x540>
   13124:	cmn	r1, #1
   13128:	bne	13190 <argp_parse@@Base+0x570>
   1312c:	mov	r0, #0
   13130:	str	r0, [r5, #60]	; 0x3c
   13134:	cmp	r6, #2
   13138:	blt	1308c <argp_parse@@Base+0x46c>
   1313c:	ldr	r0, [r5, #72]	; 0x48
   13140:	add	r0, r0, r6, lsl #2
   13144:	ldr	r0, [r0, #-4]
   13148:	movw	r1, #41656	; 0xa2b8
   1314c:	movt	r1, #1
   13150:	bl	11330 <strcmp@plt>
   13154:	cmp	r0, #0
   13158:	streq	r6, [r5, #88]	; 0x58
   1315c:	b	1308c <argp_parse@@Base+0x46c>
   13160:	ldr	r1, [r5, #24]
   13164:	mov	r0, r5
   13168:	bl	13a84 <argp_parse@@Base+0xe64>
   1316c:	mov	r2, #1
   13170:	cmp	r0, #7
   13174:	beq	131a4 <argp_parse@@Base+0x584>
   13178:	sub	sp, fp, #16
   1317c:	pop	{r4, r5, r6, r7, fp, pc}
   13180:	ldr	r0, [r5, #20]
   13184:	mov	r2, #0
   13188:	cmn	r0, #1
   1318c:	bne	131a4 <argp_parse@@Base+0x584>
   13190:	mov	r0, r5
   13194:	bl	13b84 <argp_parse@@Base+0xf64>
   13198:	mov	r2, #0
   1319c:	cmp	r0, #7
   131a0:	bne	13178 <argp_parse@@Base+0x558>
   131a4:	str	r2, [r7]
   131a8:	mov	r0, #7
   131ac:	sub	sp, fp, #16
   131b0:	pop	{r4, r5, r6, r7, fp, pc}
   131b4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   131b8:	add	fp, sp, #24
   131bc:	mov	r4, r0
   131c0:	cmp	r2, #0
   131c4:	mov	r9, r1
   131c8:	movwne	r9, #0
   131cc:	cmp	r1, #7
   131d0:	movne	r9, r1
   131d4:	movw	r8, #1
   131d8:	movt	r8, #256	; 0x100
   131dc:	cmp	r9, #0
   131e0:	beq	13248 <argp_parse@@Base+0x628>
   131e4:	cmp	r9, #0
   131e8:	beq	13358 <argp_parse@@Base+0x738>
   131ec:	cmp	r9, #7
   131f0:	bne	13208 <argp_parse@@Base+0x5e8>
   131f4:	ldr	r1, [r4, #108]	; 0x6c
   131f8:	add	r0, r4, #64	; 0x40
   131fc:	mov	r2, #260	; 0x104
   13200:	bl	14f1c <argp_state_help@@Base>
   13204:	mov	r9, #7
   13208:	ldr	r5, [r4, #48]	; 0x30
   1320c:	ldr	r0, [r4, #52]	; 0x34
   13210:	cmp	r5, r0
   13214:	bcs	133bc <argp_parse@@Base+0x79c>
   13218:	add	r6, r4, #64	; 0x40
   1321c:	add	r7, r8, #4
   13220:	mov	r0, r5
   13224:	mov	r1, r6
   13228:	mov	r2, r7
   1322c:	mov	r3, #0
   13230:	bl	1377c <argp_parse@@Base+0xb5c>
   13234:	add	r5, r5, #36	; 0x24
   13238:	ldr	r0, [r4, #52]	; 0x34
   1323c:	cmp	r5, r0
   13240:	bcc	13220 <argp_parse@@Base+0x600>
   13244:	b	133bc <argp_parse@@Base+0x79c>
   13248:	mov	r6, r3
   1324c:	ldr	r1, [r4, #68]	; 0x44
   13250:	ldr	r0, [r4, #76]	; 0x4c
   13254:	cmp	r0, r1
   13258:	bne	13304 <argp_parse@@Base+0x6e4>
   1325c:	add	r7, r4, #64	; 0x40
   13260:	ldr	r5, [r4, #48]	; 0x30
   13264:	ldr	r1, [r4, #52]	; 0x34
   13268:	mov	r0, #0
   1326c:	cmp	r5, r1
   13270:	bcs	132b8 <argp_parse@@Base+0x698>
   13274:	mov	r0, #0
   13278:	add	r9, r8, #1
   1327c:	cmp	r0, #7
   13280:	cmpne	r0, #0
   13284:	bne	132b8 <argp_parse@@Base+0x698>
   13288:	ldr	r1, [r5, #12]
   1328c:	cmp	r1, #0
   13290:	bne	132a8 <argp_parse@@Base+0x688>
   13294:	mov	r0, r5
   13298:	mov	r1, r7
   1329c:	mov	r2, r9
   132a0:	mov	r3, #0
   132a4:	bl	1377c <argp_parse@@Base+0xb5c>
   132a8:	add	r5, r5, #36	; 0x24
   132ac:	ldr	r1, [r4, #52]	; 0x34
   132b0:	cmp	r5, r1
   132b4:	bcc	1327c <argp_parse@@Base+0x65c>
   132b8:	ldr	r2, [r4, #48]	; 0x30
   132bc:	sub	r5, r1, #36	; 0x24
   132c0:	cmp	r5, r2
   132c4:	bcc	132f8 <argp_parse@@Base+0x6d8>
   132c8:	cmp	r0, #7
   132cc:	cmpne	r0, #0
   132d0:	bne	13340 <argp_parse@@Base+0x720>
   132d4:	mov	r0, r5
   132d8:	mov	r1, r7
   132dc:	mov	r2, r8
   132e0:	mov	r3, #0
   132e4:	bl	1377c <argp_parse@@Base+0xb5c>
   132e8:	sub	r5, r5, #36	; 0x24
   132ec:	ldr	r1, [r4, #48]	; 0x30
   132f0:	cmp	r5, r1
   132f4:	bcs	132c8 <argp_parse@@Base+0x6a8>
   132f8:	subs	r9, r0, #7
   132fc:	movne	r9, r0
   13300:	b	13344 <argp_parse@@Base+0x724>
   13304:	cmp	r6, #0
   13308:	beq	13314 <argp_parse@@Base+0x6f4>
   1330c:	str	r0, [r6]
   13310:	b	13358 <argp_parse@@Base+0x738>
   13314:	ldrb	r0, [r4, #80]	; 0x50
   13318:	tst	r0, #2
   1331c:	bne	131f4 <argp_parse@@Base+0x5d4>
   13320:	ldr	r0, [r4, #108]	; 0x6c
   13324:	cmp	r0, #0
   13328:	beq	131f4 <argp_parse@@Base+0x5d4>
   1332c:	ldr	r2, [r4, #104]	; 0x68
   13330:	movw	r1, #41680	; 0xa2d0
   13334:	movt	r1, #1
   13338:	bl	114a4 <fprintf@plt>
   1333c:	b	131f4 <argp_parse@@Base+0x5d4>
   13340:	mov	r9, r0
   13344:	cmp	r6, #0
   13348:	ldrne	r0, [r4, #76]	; 0x4c
   1334c:	strne	r0, [r6]
   13350:	cmp	r9, #0
   13354:	bne	131ec <argp_parse@@Base+0x5cc>
   13358:	ldr	r0, [r4, #48]	; 0x30
   1335c:	ldr	r1, [r4, #52]	; 0x34
   13360:	sub	r5, r1, #36	; 0x24
   13364:	mov	r9, #0
   13368:	cmp	r5, r0
   1336c:	bcc	133bc <argp_parse@@Base+0x79c>
   13370:	add	r6, r4, #64	; 0x40
   13374:	mov	r0, #0
   13378:	add	r7, r8, #3
   1337c:	cmp	r0, #7
   13380:	cmpne	r0, #0
   13384:	bne	133b8 <argp_parse@@Base+0x798>
   13388:	mov	r0, r5
   1338c:	mov	r1, r6
   13390:	mov	r2, r7
   13394:	mov	r3, #0
   13398:	bl	1377c <argp_parse@@Base+0xb5c>
   1339c:	sub	r5, r5, #36	; 0x24
   133a0:	ldr	r1, [r4, #48]	; 0x30
   133a4:	cmp	r5, r1
   133a8:	bcs	1337c <argp_parse@@Base+0x75c>
   133ac:	subs	r9, r0, #7
   133b0:	movne	r9, r0
   133b4:	b	133bc <argp_parse@@Base+0x79c>
   133b8:	mov	r9, r0
   133bc:	ldr	r0, [r4, #48]	; 0x30
   133c0:	ldr	r1, [r4, #52]	; 0x34
   133c4:	sub	r5, r1, #36	; 0x24
   133c8:	cmp	r5, r0
   133cc:	bcc	133fc <argp_parse@@Base+0x7dc>
   133d0:	add	r6, r4, #64	; 0x40
   133d4:	add	r7, r8, #6
   133d8:	mov	r0, r5
   133dc:	mov	r1, r6
   133e0:	mov	r2, r7
   133e4:	mov	r3, #0
   133e8:	bl	1377c <argp_parse@@Base+0xb5c>
   133ec:	sub	r5, r5, #36	; 0x24
   133f0:	ldr	r0, [r4, #48]	; 0x30
   133f4:	cmp	r5, r0
   133f8:	bcs	133d8 <argp_parse@@Base+0x7b8>
   133fc:	ldr	r0, [r4, #120]	; 0x78
   13400:	bl	13e48 <argp_usage@@Base+0x18c>
   13404:	cmp	r9, #7
   13408:	movweq	r9, #22
   1340c:	mov	r0, r9
   13410:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13414:	mov	ip, r0
   13418:	mov	r0, #0
   1341c:	cmp	r1, #0
   13420:	beq	13450 <argp_parse@@Base+0x830>
   13424:	ldr	r3, [r1, #52]	; 0x34
   13428:	ldr	r1, [r3, #48]	; 0x30
   1342c:	b	13434 <argp_parse@@Base+0x814>
   13430:	add	r1, r1, #36	; 0x24
   13434:	ldr	r2, [r3, #52]	; 0x34
   13438:	cmp	r1, r2
   1343c:	bxcs	lr
   13440:	ldr	r2, [r1, #4]
   13444:	cmp	r2, ip
   13448:	bne	13430 <argp_parse@@Base+0x810>
   1344c:	ldr	r0, [r1, #24]
   13450:	bx	lr
   13454:	push	{r4, r5, r6, sl, fp, lr}
   13458:	add	fp, sp, #16
   1345c:	mov	r5, r2
   13460:	mov	r6, r1
   13464:	mov	r4, #7
   13468:	cmn	r0, #3
   1346c:	bgt	13490 <argp_parse@@Base+0x870>
   13470:	cmn	r0, #4
   13474:	beq	134bc <argp_parse@@Base+0x89c>
   13478:	cmn	r0, #3
   1347c:	bne	1350c <argp_parse@@Base+0x8ec>
   13480:	ldr	r1, [r5, #48]	; 0x30
   13484:	mov	r0, r5
   13488:	movw	r2, #513	; 0x201
   1348c:	b	134ac <argp_parse@@Base+0x88c>
   13490:	cmn	r0, #2
   13494:	beq	13514 <argp_parse@@Base+0x8f4>
   13498:	cmp	r0, #63	; 0x3f
   1349c:	bne	1350c <argp_parse@@Base+0x8ec>
   134a0:	ldr	r1, [r5, #48]	; 0x30
   134a4:	mov	r0, r5
   134a8:	movw	r2, #634	; 0x27a
   134ac:	bl	14f1c <argp_state_help@@Base>
   134b0:	mov	r4, #0
   134b4:	mov	r0, r4
   134b8:	pop	{r4, r5, r6, sl, fp, pc}
   134bc:	movw	r0, #41594	; 0xa27a
   134c0:	movt	r0, #1
   134c4:	cmp	r6, #0
   134c8:	movne	r0, r6
   134cc:	bl	1154c <atoi@plt>
   134d0:	movw	r5, #59604	; 0xe8d4
   134d4:	movt	r5, #2
   134d8:	str	r0, [r5]
   134dc:	ldr	r0, [r5]
   134e0:	subs	r0, r0, #1
   134e4:	str	r0, [r5]
   134e8:	mov	r4, #0
   134ec:	blt	1350c <argp_parse@@Base+0x8ec>
   134f0:	mov	r0, #1
   134f4:	bl	113c0 <sleep@plt>
   134f8:	ldr	r0, [r5]
   134fc:	sub	r1, r0, #1
   13500:	str	r1, [r5]
   13504:	cmp	r0, #0
   13508:	bgt	134f0 <argp_parse@@Base+0x8d0>
   1350c:	mov	r0, r4
   13510:	pop	{r4, r5, r6, sl, fp, pc}
   13514:	movw	r0, #59572	; 0xe8b4
   13518:	movt	r0, #2
   1351c:	str	r6, [r0]
   13520:	mov	r0, r6
   13524:	bl	13dc4 <argp_usage@@Base+0x108>
   13528:	str	r0, [r5, #40]	; 0x28
   1352c:	movw	r1, #59568	; 0xe8b0
   13530:	movt	r1, #2
   13534:	str	r0, [r1]
   13538:	ldr	r0, [r5, #16]
   1353c:	and	r0, r0, #3
   13540:	mov	r4, #0
   13544:	cmp	r0, #1
   13548:	ldreq	r0, [r5, #8]
   1354c:	streq	r6, [r0]
   13550:	moveq	r0, r4
   13554:	popeq	{r4, r5, r6, sl, fp, pc}
   13558:	mov	r0, r4
   1355c:	pop	{r4, r5, r6, sl, fp, pc}
   13560:	push	{r4, sl, fp, lr}
   13564:	add	fp, sp, #8
   13568:	mov	r1, r0
   1356c:	mov	r0, #7
   13570:	cmp	r1, #86	; 0x56
   13574:	popne	{r4, sl, fp, pc}
   13578:	mov	r4, r2
   1357c:	movw	r0, #59608	; 0xe8d8
   13580:	movt	r0, #2
   13584:	ldr	r2, [r0]
   13588:	cmp	r2, #0
   1358c:	beq	135a0 <argp_parse@@Base+0x980>
   13590:	ldr	r0, [r4, #48]	; 0x30
   13594:	mov	r1, r4
   13598:	blx	r2
   1359c:	b	135e0 <argp_parse@@Base+0x9c0>
   135a0:	movw	r0, #59712	; 0xe940
   135a4:	movt	r0, #2
   135a8:	ldr	r2, [r0]
   135ac:	cmp	r2, #0
   135b0:	beq	135c8 <argp_parse@@Base+0x9a8>
   135b4:	ldr	r0, [r4, #48]	; 0x30
   135b8:	movw	r1, #41824	; 0xa360
   135bc:	movt	r1, #1
   135c0:	bl	114a4 <fprintf@plt>
   135c4:	b	135e0 <argp_parse@@Base+0x9c0>
   135c8:	movw	r1, #42893	; 0xa78d
   135cc:	movt	r1, #1
   135d0:	movw	r2, #41621	; 0xa295
   135d4:	movt	r2, #1
   135d8:	mov	r0, r4
   135dc:	bl	14fdc <argp_error@@Base>
   135e0:	ldrb	r1, [r4, #16]
   135e4:	mov	r0, #0
   135e8:	tst	r1, #32
   135ec:	beq	135f4 <argp_parse@@Base+0x9d4>
   135f0:	pop	{r4, sl, fp, pc}
   135f4:	mov	r0, #0
   135f8:	bl	11480 <exit@plt>
   135fc:	push	{r4, r5, r6, r7, fp, lr}
   13600:	add	fp, sp, #16
   13604:	mov	r4, r1
   13608:	ldr	r5, [r0]
   1360c:	ldr	r6, [r0, #16]
   13610:	cmp	r5, #0
   13614:	beq	13670 <argp_parse@@Base+0xa50>
   13618:	ldr	r0, [r4, #8]
   1361c:	add	r0, r0, #1
   13620:	str	r0, [r4, #8]
   13624:	mov	r0, r5
   13628:	bl	13d14 <argp_usage@@Base+0x58>
   1362c:	mov	r7, #0
   13630:	cmp	r0, #0
   13634:	bne	13658 <argp_parse@@Base+0xa38>
   13638:	add	r5, r5, #24
   1363c:	mov	r7, #0
   13640:	add	r7, r7, #1
   13644:	mov	r0, r5
   13648:	bl	13d14 <argp_usage@@Base+0x58>
   1364c:	add	r5, r5, #24
   13650:	cmp	r0, #0
   13654:	beq	13640 <argp_parse@@Base+0xa20>
   13658:	ldr	r0, [r4]
   1365c:	add	r1, r7, r7, lsl #1
   13660:	add	r1, r0, r1
   13664:	mov	r0, r4
   13668:	str	r1, [r0], #4
   1366c:	b	13684 <argp_parse@@Base+0xa64>
   13670:	ldr	r0, [r0, #4]
   13674:	cmp	r0, #0
   13678:	beq	13690 <argp_parse@@Base+0xa70>
   1367c:	add	r0, r4, #8
   13680:	mov	r7, #1
   13684:	ldr	r1, [r0]
   13688:	add	r1, r1, r7
   1368c:	str	r1, [r0]
   13690:	cmp	r6, #0
   13694:	ldrne	r0, [r6]
   13698:	cmpne	r0, #0
   1369c:	beq	136c4 <argp_parse@@Base+0xaa4>
   136a0:	add	r5, r6, #16
   136a4:	mov	r1, r4
   136a8:	bl	135fc <argp_parse@@Base+0x9dc>
   136ac:	ldr	r0, [r4, #12]
   136b0:	add	r0, r0, #1
   136b4:	str	r0, [r4, #12]
   136b8:	ldr	r0, [r5], #16
   136bc:	cmp	r0, #0
   136c0:	bne	136a4 <argp_parse@@Base+0xa84>
   136c4:	pop	{r4, r5, r6, r7, fp, pc}
   136c8:	push	{r4, sl, fp, lr}
   136cc:	add	fp, sp, #8
   136d0:	sub	sp, sp, #24
   136d4:	mov	r4, r0
   136d8:	str	r0, [sp, #8]
   136dc:	ldr	r0, [r0, #4]
   136e0:	ldr	r3, [r4, #8]
   136e4:	str	r0, [sp, #12]
   136e8:	str	r3, [sp, #16]
   136ec:	ldr	r0, [r4, #56]	; 0x38
   136f0:	str	r0, [sp, #20]
   136f4:	tst	r2, #8
   136f8:	bne	13718 <argp_parse@@Base+0xaf8>
   136fc:	tst	r2, #4
   13700:	beq	1372c <argp_parse@@Base+0xb0c>
   13704:	ldr	r0, [sp, #12]
   13708:	add	r2, r0, #1
   1370c:	str	r2, [sp, #12]
   13710:	mov	r2, #43	; 0x2b
   13714:	b	13728 <argp_parse@@Base+0xb08>
   13718:	ldr	r0, [sp, #12]
   1371c:	add	r2, r0, #1
   13720:	str	r2, [sp, #12]
   13724:	mov	r2, #45	; 0x2d
   13728:	strb	r2, [r0]
   1372c:	ldr	r0, [sp, #12]
   13730:	mov	r2, #0
   13734:	strb	r2, [r0]
   13738:	ldr	r0, [sp, #16]
   1373c:	str	r2, [r0]
   13740:	str	r1, [r4]
   13744:	cmp	r1, #0
   13748:	beq	1376c <argp_parse@@Base+0xb4c>
   1374c:	ldr	r3, [r4, #48]	; 0x30
   13750:	add	r0, sp, #8
   13754:	str	r0, [sp]
   13758:	mov	r0, r1
   1375c:	mov	r1, #0
   13760:	mov	r2, #0
   13764:	bl	137d8 <argp_parse@@Base+0xbb8>
   13768:	b	13770 <argp_parse@@Base+0xb50>
   1376c:	ldr	r0, [r4, #48]	; 0x30
   13770:	str	r0, [r4, #52]	; 0x34
   13774:	sub	sp, fp, #8
   13778:	pop	{r4, sl, fp, pc}
   1377c:	ldr	ip, [r0]
   13780:	cmp	ip, #0
   13784:	moveq	r0, #7
   13788:	bxeq	lr
   1378c:	push	{r4, r5, fp, lr}
   13790:	add	fp, sp, #8
   13794:	mov	r5, r1
   13798:	mov	r4, r0
   1379c:	ldr	r0, [r0, #32]
   137a0:	str	r0, [r1, #36]	; 0x24
   137a4:	ldr	r0, [r4, #24]
   137a8:	str	r0, [r1, #28]
   137ac:	ldr	r0, [r4, #28]
   137b0:	str	r0, [r1, #32]
   137b4:	ldr	r0, [r4, #12]
   137b8:	str	r0, [r1, #20]
   137bc:	mov	r0, r2
   137c0:	mov	r1, r3
   137c4:	mov	r2, r5
   137c8:	blx	ip
   137cc:	ldr	r1, [r5, #36]	; 0x24
   137d0:	str	r1, [r4, #32]
   137d4:	pop	{r4, r5, fp, pc}
   137d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137dc:	add	fp, sp, #28
   137e0:	sub	sp, sp, #20
   137e4:	mov	r4, r3
   137e8:	str	r2, [sp, #16]
   137ec:	str	r1, [sp, #12]
   137f0:	ldr	r5, [r0]
   137f4:	ldr	r7, [r0, #16]
   137f8:	ldr	r6, [fp, #8]
   137fc:	cmp	r5, #0
   13800:	str	r0, [sp, #8]
   13804:	beq	13958 <argp_parse@@Base+0xd38>
   13808:	mov	r0, r5
   1380c:	bl	13d14 <argp_usage@@Base+0x58>
   13810:	cmp	r0, #0
   13814:	bne	13964 <argp_parse@@Base+0xd44>
   13818:	mov	sl, #0
   1381c:	mov	r9, r5
   13820:	ldrb	r0, [r5, #12]
   13824:	tst	r0, #4
   13828:	moveq	r9, r5
   1382c:	ldrb	r0, [r9, #12]
   13830:	tst	r0, #8
   13834:	bne	13940 <argp_parse@@Base+0xd20>
   13838:	mov	r0, r5
   1383c:	bl	13cd0 <argp_usage@@Base+0x14>
   13840:	cmp	r0, #0
   13844:	beq	138a4 <argp_parse@@Base+0xc84>
   13848:	ldr	r0, [r5, #4]
   1384c:	ldr	r1, [r6, #4]
   13850:	add	r2, r1, #1
   13854:	str	r2, [r6, #4]
   13858:	strb	r0, [r1]
   1385c:	ldr	r0, [r9, #8]
   13860:	cmp	r0, #0
   13864:	beq	1389c <argp_parse@@Base+0xc7c>
   13868:	ldr	r0, [r6, #4]
   1386c:	add	r1, r0, #1
   13870:	str	r1, [r6, #4]
   13874:	mov	r1, #58	; 0x3a
   13878:	strb	r1, [r0]
   1387c:	ldrb	r0, [r9, #12]
   13880:	tst	r0, #1
   13884:	beq	1389c <argp_parse@@Base+0xc7c>
   13888:	ldr	r0, [r6, #4]
   1388c:	add	r1, r0, #1
   13890:	str	r1, [r6, #4]
   13894:	mov	r1, #58	; 0x3a
   13898:	strb	r1, [r0]
   1389c:	ldr	r0, [r6, #4]
   138a0:	strb	sl, [r0]
   138a4:	ldr	r1, [r5]
   138a8:	cmp	r1, #0
   138ac:	beq	13940 <argp_parse@@Base+0xd20>
   138b0:	ldr	r8, [r6]
   138b4:	ldr	r0, [r8, #8]
   138b8:	bl	13a24 <argp_parse@@Base+0xe04>
   138bc:	cmn	r0, #1
   138c0:	bgt	13940 <argp_parse@@Base+0xd20>
   138c4:	ldr	r0, [r6, #8]
   138c8:	ldr	r1, [r5]
   138cc:	str	r1, [r0]
   138d0:	ldr	r0, [r9, #8]
   138d4:	cmp	r0, #0
   138d8:	beq	138f0 <argp_parse@@Base+0xcd0>
   138dc:	ldrb	r0, [r9, #12]
   138e0:	tst	r0, #1
   138e4:	mov	r1, #2
   138e8:	movweq	r1, #1
   138ec:	b	138f4 <argp_parse@@Base+0xcd4>
   138f0:	mov	r1, #0
   138f4:	mov	ip, #0
   138f8:	ldr	r0, [r6, #8]
   138fc:	stmib	r0, {r1, ip}
   13900:	ldr	r1, [r5, #4]
   13904:	cmp	r1, #0
   13908:	ldreq	r1, [r9, #4]
   1390c:	ldr	r2, [r8, #48]	; 0x30
   13910:	sub	r2, r4, r2
   13914:	lsr	r2, r2, #2
   13918:	mov	r3, #956301312	; 0x39000000
   1391c:	mul	r2, r2, r3
   13920:	add	r2, r2, #16777216	; 0x1000000
   13924:	bic	r1, r1, #-16777216	; 0xff000000
   13928:	orr	r1, r2, r1
   1392c:	str	r1, [r0, #12]
   13930:	add	r1, r0, #16
   13934:	str	r1, [r6, #8]
   13938:	mov	sl, #0
   1393c:	str	ip, [r0, #16]
   13940:	add	r5, r5, #24
   13944:	mov	r0, r5
   13948:	bl	13d14 <argp_usage@@Base+0x58>
   1394c:	cmp	r0, #0
   13950:	beq	13820 <argp_parse@@Base+0xc00>
   13954:	b	13964 <argp_parse@@Base+0xd44>
   13958:	ldr	r0, [r0, #4]
   1395c:	cmp	r0, #0
   13960:	beq	13a18 <argp_parse@@Base+0xdf8>
   13964:	ldr	r1, [sp, #8]
   13968:	ldr	r0, [r1, #4]
   1396c:	stm	r4, {r0, r1}
   13970:	ldr	r1, [r6, #4]
   13974:	mov	r0, #0
   13978:	str	r0, [r4, #12]
   1397c:	ldr	r2, [sp, #12]
   13980:	str	r2, [r4, #16]
   13984:	ldr	r2, [sp, #16]
   13988:	str	r2, [r4, #20]
   1398c:	str	r0, [r4, #24]
   13990:	str	r0, [r4, #32]
   13994:	str	r0, [r4, #28]
   13998:	str	r1, [r4, #8]
   1399c:	cmp	r7, #0
   139a0:	beq	139cc <argp_parse@@Base+0xdac>
   139a4:	ldr	r1, [r7, r0, lsl #2]
   139a8:	add	r0, r0, #4
   139ac:	cmp	r1, #0
   139b0:	bne	139a4 <argp_parse@@Base+0xd84>
   139b4:	ldr	r1, [r6, #12]
   139b8:	str	r1, [r4, #28]
   139bc:	ldr	r1, [r6, #12]
   139c0:	add	r0, r1, r0
   139c4:	sub	r0, r0, #4
   139c8:	str	r0, [r6, #12]
   139cc:	add	r3, r4, #36	; 0x24
   139d0:	cmp	r7, #0
   139d4:	ldrne	r0, [r7]
   139d8:	cmpne	r0, #0
   139dc:	beq	13a0c <argp_parse@@Base+0xdec>
   139e0:	add	r7, r7, #16
   139e4:	mov	r5, #0
   139e8:	str	r6, [sp]
   139ec:	mov	r1, r4
   139f0:	mov	r2, r5
   139f4:	bl	137d8 <argp_parse@@Base+0xbb8>
   139f8:	mov	r3, r0
   139fc:	ldr	r0, [r7, r5, lsl #4]
   13a00:	add	r5, r5, #1
   13a04:	cmp	r0, #0
   13a08:	bne	139e8 <argp_parse@@Base+0xdc8>
   13a0c:	mov	r0, r3
   13a10:	sub	sp, fp, #28
   13a14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a18:	mov	r3, r4
   13a1c:	mov	r4, #0
   13a20:	b	139d0 <argp_parse@@Base+0xdb0>
   13a24:	push	{r4, r5, r6, sl, fp, lr}
   13a28:	add	fp, sp, #16
   13a2c:	mov	r5, r1
   13a30:	mov	r4, r0
   13a34:	ldr	r0, [r0]
   13a38:	cmp	r0, #0
   13a3c:	mov	r6, r4
   13a40:	beq	13a6c <argp_parse@@Base+0xe4c>
   13a44:	mov	r6, r4
   13a48:	cmp	r5, #0
   13a4c:	beq	13a60 <argp_parse@@Base+0xe40>
   13a50:	mov	r1, r5
   13a54:	bl	11330 <strcmp@plt>
   13a58:	cmp	r0, #0
   13a5c:	beq	13a78 <argp_parse@@Base+0xe58>
   13a60:	ldr	r0, [r6, #16]!
   13a64:	cmp	r0, #0
   13a68:	bne	13a48 <argp_parse@@Base+0xe28>
   13a6c:	mvn	r0, #0
   13a70:	cmp	r5, #0
   13a74:	popne	{r4, r5, r6, sl, fp, pc}
   13a78:	sub	r0, r6, r4
   13a7c:	asr	r0, r0, #4
   13a80:	pop	{r4, r5, r6, sl, fp, pc}
   13a84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a88:	add	fp, sp, #28
   13a8c:	sub	sp, sp, #4
   13a90:	mov	r7, r1
   13a94:	mov	r4, r0
   13a98:	ldr	r1, [r0, #48]	; 0x30
   13a9c:	ldr	r2, [r0, #52]	; 0x34
   13aa0:	ldr	r9, [r0, #76]	; 0x4c
   13aa4:	sub	r0, r9, #1
   13aa8:	str	r0, [r4, #76]	; 0x4c
   13aac:	mov	r0, #7
   13ab0:	cmp	r1, r2
   13ab4:	bcs	13b38 <argp_parse@@Base+0xf18>
   13ab8:	add	r6, r4, #64	; 0x40
   13abc:	movw	r8, #6
   13ac0:	movt	r8, #256	; 0x100
   13ac4:	mov	sl, #0
   13ac8:	mov	r5, r1
   13acc:	ldr	r0, [r4, #76]	; 0x4c
   13ad0:	add	r0, r0, #1
   13ad4:	str	r0, [r4, #76]	; 0x4c
   13ad8:	mov	r0, r1
   13adc:	mov	r1, r6
   13ae0:	mov	r2, #0
   13ae4:	mov	r3, r7
   13ae8:	bl	1377c <argp_parse@@Base+0xb5c>
   13aec:	cmp	r0, #7
   13af0:	bne	13b30 <argp_parse@@Base+0xf10>
   13af4:	ldr	r0, [r4, #76]	; 0x4c
   13af8:	sub	r0, r0, #1
   13afc:	str	r0, [r4, #76]	; 0x4c
   13b00:	mov	r0, r5
   13b04:	mov	r1, r6
   13b08:	mov	r2, r8
   13b0c:	mov	r3, #0
   13b10:	bl	1377c <argp_parse@@Base+0xb5c>
   13b14:	cmp	r0, #7
   13b18:	bne	13b2c <argp_parse@@Base+0xf0c>
   13b1c:	add	r1, r5, #36	; 0x24
   13b20:	ldr	r2, [r4, #52]	; 0x34
   13b24:	cmp	r1, r2
   13b28:	bcc	13ac8 <argp_parse@@Base+0xea8>
   13b2c:	mov	sl, r8
   13b30:	cmp	r0, #0
   13b34:	beq	13b40 <argp_parse@@Base+0xf20>
   13b38:	sub	sp, fp, #28
   13b3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b40:	cmp	sl, r8
   13b44:	ldreq	r0, [r4, #68]	; 0x44
   13b48:	streq	r0, [r4, #76]	; 0x4c
   13b4c:	ldr	r0, [r4, #76]	; 0x4c
   13b50:	cmp	r0, r9
   13b54:	bge	13b64 <argp_parse@@Base+0xf44>
   13b58:	mov	r0, #1
   13b5c:	str	r0, [r4, #60]	; 0x3c
   13b60:	b	13b78 <argp_parse@@Base+0xf58>
   13b64:	rsb	r1, r9, #1
   13b68:	add	r0, r0, r1
   13b6c:	ldr	r1, [r5, #12]
   13b70:	add	r0, r0, r1
   13b74:	str	r0, [r5, #12]
   13b78:	mov	r0, #0
   13b7c:	sub	sp, fp, #28
   13b80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b84:	push	{r4, r5, r6, sl, fp, lr}
   13b88:	add	fp, sp, #16
   13b8c:	mov	r5, r1
   13b90:	mov	r4, r0
   13b94:	asr	r6, r1, #24
   13b98:	mov	r0, #0
   13b9c:	cmp	r0, r1, asr #24
   13ba0:	beq	13c10 <argp_parse@@Base+0xff0>
   13ba4:	bic	r2, r5, #-16777216	; 0xff000000
   13ba8:	tst	r5, #8388608	; 0x800000
   13bac:	orrne	r2, r2, #-16777216	; 0xff000000
   13bb0:	ldr	r3, [r4, #24]
   13bb4:	ldr	r0, [r4, #48]	; 0x30
   13bb8:	add	r1, r6, r6, lsl #3
   13bbc:	add	r0, r0, r1, lsl #2
   13bc0:	sub	r0, r0, #36	; 0x24
   13bc4:	add	r1, r4, #64	; 0x40
   13bc8:	bl	1377c <argp_parse@@Base+0xb5c>
   13bcc:	cmp	r0, #7
   13bd0:	popne	{r4, r5, r6, sl, fp, pc}
   13bd4:	cmp	r6, #0
   13bd8:	beq	13c54 <argp_parse@@Base+0x1034>
   13bdc:	ldr	r0, [r4, #8]
   13be0:	ldr	r1, [r0, #12]
   13be4:	cmp	r1, r5
   13be8:	beq	13c70 <argp_parse@@Base+0x1050>
   13bec:	ldr	r1, [r0]
   13bf0:	cmp	r1, #0
   13bf4:	beq	13c70 <argp_parse@@Base+0x1050>
   13bf8:	add	r1, r0, #16
   13bfc:	ldr	r0, [r0, #28]
   13c00:	cmp	r0, r5
   13c04:	mov	r0, r1
   13c08:	bne	13bec <argp_parse@@Base+0xfcc>
   13c0c:	b	13c74 <argp_parse@@Base+0x1054>
   13c10:	ldr	r0, [r4, #4]
   13c14:	mov	r1, r5
   13c18:	bl	11498 <strchr@plt>
   13c1c:	cmp	r0, #0
   13c20:	beq	13c54 <argp_parse@@Base+0x1034>
   13c24:	ldr	r2, [r4, #48]	; 0x30
   13c28:	ldr	r1, [r4, #52]	; 0x34
   13c2c:	cmp	r2, r1
   13c30:	bcs	13c54 <argp_parse@@Base+0x1034>
   13c34:	ldr	r1, [r2, #8]
   13c38:	cmp	r1, r0
   13c3c:	bhi	13ca8 <argp_parse@@Base+0x1088>
   13c40:	ldr	r1, [r4, #52]	; 0x34
   13c44:	add	r2, r2, #36	; 0x24
   13c48:	cmp	r2, r1
   13c4c:	bcc	13c34 <argp_parse@@Base+0x1014>
   13c50:	b	13bd4 <argp_parse@@Base+0xfb4>
   13c54:	add	r0, r4, #64	; 0x40
   13c58:	movw	r1, #41659	; 0xa2bb
   13c5c:	movt	r1, #1
   13c60:	movw	r3, #41392	; 0xa1b0
   13c64:	movt	r3, #1
   13c68:	mov	r2, r5
   13c6c:	b	13c9c <argp_parse@@Base+0x107c>
   13c70:	mov	r1, r0
   13c74:	ldr	r0, [r1]
   13c78:	movw	r2, #41676	; 0xa2cc
   13c7c:	movt	r2, #1
   13c80:	cmp	r0, #0
   13c84:	movne	r2, r0
   13c88:	add	r0, r4, #64	; 0x40
   13c8c:	movw	r1, #41667	; 0xa2c3
   13c90:	movt	r1, #1
   13c94:	movw	r3, #41392	; 0xa1b0
   13c98:	movt	r3, #1
   13c9c:	bl	14fdc <argp_error@@Base>
   13ca0:	mov	r0, #7
   13ca4:	pop	{r4, r5, r6, sl, fp, pc}
   13ca8:	ldr	r3, [r4, #24]
   13cac:	add	r1, r4, #64	; 0x40
   13cb0:	mov	r0, r2
   13cb4:	mov	r2, r5
   13cb8:	b	13bc8 <argp_parse@@Base+0xfa8>

00013cbc <argp_usage@@Base>:
   13cbc:	movw	r1, #59576	; 0xe8b8
   13cc0:	movt	r1, #2
   13cc4:	ldr	r1, [r1]
   13cc8:	movw	r2, #262	; 0x106
   13ccc:	b	14f1c <argp_state_help@@Base>
   13cd0:	push	{r4, sl, fp, lr}
   13cd4:	add	fp, sp, #8
   13cd8:	mov	r1, r0
   13cdc:	ldrb	r2, [r0, #12]
   13ce0:	mov	r0, #0
   13ce4:	tst	r2, #8
   13ce8:	bne	13d10 <argp_usage@@Base+0x54>
   13cec:	ldr	r4, [r1, #4]
   13cf0:	sub	r1, r4, #1
   13cf4:	cmp	r1, #254	; 0xfe
   13cf8:	pophi	{r4, sl, fp, pc}
   13cfc:	bl	11474 <__ctype_b_loc@plt>
   13d00:	ldr	r0, [r0]
   13d04:	add	r0, r0, r4, lsl #1
   13d08:	ldrh	r0, [r0]
   13d0c:	ubfx	r0, r0, #14, #1
   13d10:	pop	{r4, sl, fp, pc}
   13d14:	mov	r1, r0
   13d18:	ldr	r2, [r0, #4]
   13d1c:	mov	r0, #0
   13d20:	cmp	r2, #0
   13d24:	bxne	lr
   13d28:	ldr	r2, [r1]
   13d2c:	cmp	r2, #0
   13d30:	beq	13d38 <argp_usage@@Base+0x7c>
   13d34:	bx	lr
   13d38:	ldr	r2, [r1, #16]
   13d3c:	cmp	r2, #0
   13d40:	ldreq	r0, [r1, #20]
   13d44:	clzeq	r0, r0
   13d48:	lsreq	r0, r0, #5
   13d4c:	bx	lr
   13d50:	movw	r2, #59612	; 0xe8dc
   13d54:	movt	r2, #2
   13d58:	str	r0, [r2]
   13d5c:	movw	r0, #59608	; 0xe8d8
   13d60:	movt	r0, #2
   13d64:	movw	r2, #15744	; 0x3d80
   13d68:	movt	r2, #1
   13d6c:	str	r2, [r0]
   13d70:	movw	r0, #59616	; 0xe8e0
   13d74:	movt	r0, #2
   13d78:	str	r1, [r0]
   13d7c:	bx	lr
   13d80:	push	{fp, lr}
   13d84:	mov	fp, sp
   13d88:	sub	sp, sp, #8
   13d8c:	movw	r1, #59612	; 0xe8dc
   13d90:	movt	r1, #2
   13d94:	ldr	r1, [r1]
   13d98:	movw	r2, #59616	; 0xe8e0
   13d9c:	movt	r2, #2
   13da0:	ldr	r2, [r2]
   13da4:	str	r2, [sp]
   13da8:	movw	r2, #41704	; 0xa2e8
   13dac:	movt	r2, #1
   13db0:	movw	r3, #41718	; 0xa2f6
   13db4:	movt	r3, #1
   13db8:	bl	145b0 <_obstack_memory_used@@Base+0x384>
   13dbc:	mov	sp, fp
   13dc0:	pop	{fp, pc}
   13dc4:	sub	r0, r0, #1
   13dc8:	ldrb	r3, [r0, #1]!
   13dcc:	cmp	r3, #47	; 0x2f
   13dd0:	beq	13dc8 <argp_usage@@Base+0x10c>
   13dd4:	mov	r2, #0
   13dd8:	mov	r1, r0
   13ddc:	b	13df8 <argp_usage@@Base+0x13c>
   13de0:	cmp	r3, #0
   13de4:	bxeq	lr
   13de8:	tst	r2, #1
   13dec:	movne	r0, r1
   13df0:	mov	r2, #0
   13df4:	ldrb	r3, [r1, #1]!
   13df8:	uxtb	r3, r3
   13dfc:	cmp	r3, #47	; 0x2f
   13e00:	bne	13de0 <argp_usage@@Base+0x124>
   13e04:	mov	r2, #1
   13e08:	ldrb	r3, [r1, #1]!
   13e0c:	b	13df8 <argp_usage@@Base+0x13c>
   13e10:	push	{r4, sl, fp, lr}
   13e14:	add	fp, sp, #8
   13e18:	mov	r4, r0
   13e1c:	bl	1148c <strlen@plt>
   13e20:	mov	r1, r0
   13e24:	sub	r2, r4, #1
   13e28:	mov	r0, r1
   13e2c:	cmp	r1, #2
   13e30:	popcc	{r4, sl, fp, pc}
   13e34:	ldrb	r3, [r2, r0]
   13e38:	sub	r1, r0, #1
   13e3c:	cmp	r3, #47	; 0x2f
   13e40:	beq	13e28 <argp_usage@@Base+0x16c>
   13e44:	pop	{r4, sl, fp, pc}
   13e48:	push	{r4, r5, r6, sl, fp, lr}
   13e4c:	add	fp, sp, #16
   13e50:	mov	r4, r0
   13e54:	bl	114b0 <__errno_location@plt>
   13e58:	mov	r5, r0
   13e5c:	ldr	r6, [r0]
   13e60:	mov	r0, r4
   13e64:	bl	11360 <free@plt>
   13e68:	str	r6, [r5]
   13e6c:	pop	{r4, r5, r6, sl, fp, pc}
   13e70:	push	{fp, lr}
   13e74:	mov	fp, sp
   13e78:	sub	sp, sp, #16
   13e7c:	mov	ip, #0
   13e80:	str	ip, [sp, #8]
   13e84:	str	ip, [sp, #4]
   13e88:	ldr	ip, [fp, #8]
   13e8c:	str	ip, [sp]
   13e90:	bl	17cbc <argp_failure@@Base+0x2c08>
   13e94:	mov	sp, fp
   13e98:	pop	{fp, pc}
   13e9c:	push	{fp, lr}
   13ea0:	mov	fp, sp
   13ea4:	sub	sp, sp, #16
   13ea8:	mov	ip, #0
   13eac:	str	ip, [sp, #12]
   13eb0:	str	ip, [sp, #4]
   13eb4:	ldr	ip, [fp, #12]
   13eb8:	str	ip, [sp, #8]
   13ebc:	ldr	ip, [fp, #8]
   13ec0:	str	ip, [sp]
   13ec4:	bl	17104 <argp_failure@@Base+0x2050>
   13ec8:	mov	sp, fp
   13ecc:	pop	{fp, pc}
   13ed0:	push	{fp, lr}
   13ed4:	mov	fp, sp
   13ed8:	sub	sp, sp, #16
   13edc:	mov	ip, #0
   13ee0:	str	ip, [sp, #8]
   13ee4:	mov	ip, #1
   13ee8:	str	ip, [sp, #4]
   13eec:	ldr	ip, [fp, #8]
   13ef0:	str	ip, [sp]
   13ef4:	bl	17cbc <argp_failure@@Base+0x2c08>
   13ef8:	mov	sp, fp
   13efc:	pop	{fp, pc}
   13f00:	push	{fp, lr}
   13f04:	mov	fp, sp
   13f08:	sub	sp, sp, #16
   13f0c:	mov	ip, #0
   13f10:	str	ip, [sp, #12]
   13f14:	mov	ip, #1
   13f18:	str	ip, [sp, #4]
   13f1c:	ldr	ip, [fp, #12]
   13f20:	str	ip, [sp, #8]
   13f24:	ldr	ip, [fp, #8]
   13f28:	str	ip, [sp]
   13f2c:	bl	17104 <argp_failure@@Base+0x2050>
   13f30:	mov	sp, fp
   13f34:	pop	{fp, pc}

00013f38 <_obstack_begin@@Base>:
   13f38:	push	{fp, lr}
   13f3c:	mov	fp, sp
   13f40:	str	r3, [r0, #28]
   13f44:	ldr	r3, [fp, #8]
   13f48:	str	r3, [r0, #32]
   13f4c:	ldrb	r3, [r0, #40]	; 0x28
   13f50:	and	r3, r3, #254	; 0xfe
   13f54:	strb	r3, [r0, #40]	; 0x28
   13f58:	bl	13f64 <_obstack_begin@@Base+0x2c>
   13f5c:	mov	r0, #1
   13f60:	pop	{fp, pc}
   13f64:	push	{r4, r5, r6, sl, fp, lr}
   13f68:	add	fp, sp, #16
   13f6c:	mov	r5, r2
   13f70:	mov	r4, r0
   13f74:	cmp	r1, #0
   13f78:	movweq	r1, #4072	; 0xfe8
   13f7c:	str	r1, [r0]
   13f80:	cmp	r2, #0
   13f84:	movweq	r5, #8
   13f88:	sub	r6, r5, #1
   13f8c:	str	r6, [r0, #24]
   13f90:	bl	14138 <_obstack_newchunk@@Base+0x118>
   13f94:	str	r0, [r4, #4]
   13f98:	cmp	r0, #0
   13f9c:	addne	r1, r6, r0
   13fa0:	addne	r1, r1, #8
   13fa4:	rsbne	r2, r5, #0
   13fa8:	andne	r1, r1, r2
   13fac:	strne	r1, [r4, #12]
   13fb0:	strne	r1, [r4, #8]
   13fb4:	ldrne	r1, [r4]
   13fb8:	addne	r1, r0, r1
   13fbc:	strne	r1, [r0]
   13fc0:	strne	r1, [r4, #16]
   13fc4:	movne	r1, #0
   13fc8:	strne	r1, [r0, #4]
   13fcc:	ldrbne	r0, [r4, #40]	; 0x28
   13fd0:	andne	r0, r0, #249	; 0xf9
   13fd4:	strbne	r0, [r4, #40]	; 0x28
   13fd8:	popne	{r4, r5, r6, sl, fp, pc}
   13fdc:	movw	r0, #59500	; 0xe86c
   13fe0:	movt	r0, #2
   13fe4:	ldr	r0, [r0]
   13fe8:	blx	r0

00013fec <_obstack_begin_1@@Base>:
   13fec:	push	{fp, lr}
   13ff0:	mov	fp, sp
   13ff4:	str	r3, [r0, #28]
   13ff8:	ldr	r3, [fp, #8]
   13ffc:	str	r3, [r0, #32]
   14000:	ldr	r3, [fp, #12]
   14004:	str	r3, [r0, #36]	; 0x24
   14008:	ldrb	r3, [r0, #40]	; 0x28
   1400c:	orr	r3, r3, #1
   14010:	strb	r3, [r0, #40]	; 0x28
   14014:	bl	13f64 <_obstack_begin@@Base+0x2c>
   14018:	mov	r0, #1
   1401c:	pop	{fp, pc}

00014020 <_obstack_newchunk@@Base>:
   14020:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14024:	add	fp, sp, #28
   14028:	sub	sp, sp, #4
   1402c:	mov	r4, r0
   14030:	ldr	r2, [r0]
   14034:	ldr	r0, [r0, #8]
   14038:	ldr	r3, [r4, #12]
   1403c:	sub	sl, r3, r0
   14040:	add	r1, sl, r1
   14044:	ldr	r0, [r4, #24]
   14048:	mov	r3, #0
   1404c:	adds	r7, r1, r0
   14050:	adc	r0, r3, #0
   14054:	mov	r3, #100	; 0x64
   14058:	add	r3, r3, sl, lsr #3
   1405c:	adds	r6, r3, r7
   14060:	movcs	r6, r7
   14064:	cmp	r6, r2
   14068:	movcc	r6, r2
   1406c:	cmp	r1, sl
   14070:	bcc	14128 <_obstack_newchunk@@Base+0x108>
   14074:	cmp	r0, #0
   14078:	bne	14128 <_obstack_newchunk@@Base+0x108>
   1407c:	ldr	r8, [r4, #4]
   14080:	mov	r0, r4
   14084:	mov	r1, r6
   14088:	bl	14138 <_obstack_newchunk@@Base+0x118>
   1408c:	cmp	r0, #0
   14090:	beq	14128 <_obstack_newchunk@@Base+0x108>
   14094:	mov	r7, r0
   14098:	str	r0, [r4, #4]
   1409c:	str	r8, [r0, #4]
   140a0:	add	r0, r0, r6
   140a4:	str	r0, [r4, #16]
   140a8:	str	r0, [r7]
   140ac:	ldr	r9, [r4, #8]
   140b0:	ldr	r5, [r4, #24]
   140b4:	add	r0, r5, r7
   140b8:	add	r0, r0, #8
   140bc:	bic	r6, r0, r5
   140c0:	mov	r0, r6
   140c4:	mov	r1, r9
   140c8:	mov	r2, sl
   140cc:	bl	1139c <memcpy@plt>
   140d0:	ldrb	r0, [r4, #40]	; 0x28
   140d4:	tst	r0, #2
   140d8:	bne	14108 <_obstack_newchunk@@Base+0xe8>
   140dc:	mvn	r0, r5
   140e0:	add	r1, r5, r8
   140e4:	add	r1, r1, #8
   140e8:	and	r0, r1, r0
   140ec:	cmp	r9, r0
   140f0:	bne	14108 <_obstack_newchunk@@Base+0xe8>
   140f4:	ldr	r0, [r8, #4]
   140f8:	str	r0, [r7, #4]
   140fc:	mov	r0, r4
   14100:	mov	r1, r8
   14104:	bl	1415c <_obstack_newchunk@@Base+0x13c>
   14108:	add	r0, r6, sl
   1410c:	str	r6, [r4, #8]
   14110:	str	r0, [r4, #12]
   14114:	ldrb	r0, [r4, #40]	; 0x28
   14118:	and	r0, r0, #253	; 0xfd
   1411c:	strb	r0, [r4, #40]	; 0x28
   14120:	sub	sp, fp, #28
   14124:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14128:	movw	r0, #59500	; 0xe86c
   1412c:	movt	r0, #2
   14130:	ldr	r0, [r0]
   14134:	blx	r0
   14138:	ldrb	r2, [r0, #40]	; 0x28
   1413c:	tst	r2, #1
   14140:	bne	14150 <_obstack_newchunk@@Base+0x130>
   14144:	ldr	r2, [r0, #28]
   14148:	mov	r0, r1
   1414c:	bx	r2
   14150:	ldr	r2, [r0, #28]
   14154:	ldr	r0, [r0, #36]	; 0x24
   14158:	bx	r2
   1415c:	ldrb	r2, [r0, #40]	; 0x28
   14160:	tst	r2, #1
   14164:	bne	14174 <_obstack_newchunk@@Base+0x154>
   14168:	ldr	r2, [r0, #32]
   1416c:	mov	r0, r1
   14170:	bx	r2
   14174:	ldr	r2, [r0, #32]
   14178:	ldr	r0, [r0, #36]	; 0x24
   1417c:	bx	r2

00014180 <_obstack_allocated_p@@Base>:
   14180:	ldr	r2, [r0, #4]
   14184:	mov	r0, #0
   14188:	b	14190 <_obstack_allocated_p@@Base+0x10>
   1418c:	ldr	r2, [r2, #4]
   14190:	cmp	r2, #0
   14194:	bxeq	lr
   14198:	cmp	r2, r1
   1419c:	bcs	1418c <_obstack_allocated_p@@Base+0xc>
   141a0:	ldr	r3, [r2]
   141a4:	cmp	r3, r1
   141a8:	bcc	1418c <_obstack_allocated_p@@Base+0xc>
   141ac:	mov	r0, #1
   141b0:	bx	lr

000141b4 <_obstack_free@@Base>:
   141b4:	push	{r4, r5, r6, sl, fp, lr}
   141b8:	add	fp, sp, #16
   141bc:	mov	r5, r1
   141c0:	ldr	r1, [r0, #4]
   141c4:	cmp	r1, #0
   141c8:	beq	14208 <_obstack_free@@Base+0x54>
   141cc:	mov	r4, r0
   141d0:	cmp	r1, r5
   141d4:	bcs	141e4 <_obstack_free@@Base+0x30>
   141d8:	ldr	r0, [r1]
   141dc:	cmp	r0, r5
   141e0:	bcs	14214 <_obstack_free@@Base+0x60>
   141e4:	ldr	r6, [r1, #4]
   141e8:	mov	r0, r4
   141ec:	bl	1415c <_obstack_newchunk@@Base+0x13c>
   141f0:	ldrb	r0, [r4, #40]	; 0x28
   141f4:	orr	r0, r0, #2
   141f8:	strb	r0, [r4, #40]	; 0x28
   141fc:	cmp	r6, #0
   14200:	mov	r1, r6
   14204:	bne	141d0 <_obstack_free@@Base+0x1c>
   14208:	cmp	r5, #0
   1420c:	popeq	{r4, r5, r6, sl, fp, pc}
   14210:	bl	115b8 <abort@plt>
   14214:	str	r5, [r4, #8]
   14218:	str	r5, [r4, #12]
   1421c:	ldr	r0, [r1]
   14220:	str	r1, [r4, #4]
   14224:	str	r0, [r4, #16]
   14228:	pop	{r4, r5, r6, sl, fp, pc}

0001422c <_obstack_memory_used@@Base>:
   1422c:	ldr	r1, [r0, #4]
   14230:	mov	r0, #0
   14234:	b	14248 <_obstack_memory_used@@Base+0x1c>
   14238:	sub	r0, r0, r1
   1423c:	ldr	r2, [r1]
   14240:	ldr	r1, [r1, #4]
   14244:	add	r0, r0, r2
   14248:	cmp	r1, #0
   1424c:	bxeq	lr
   14250:	b	14238 <_obstack_memory_used@@Base+0xc>
   14254:	push	{fp, lr}
   14258:	mov	fp, sp
   1425c:	movw	r0, #59576	; 0xe8b8
   14260:	movt	r0, #2
   14264:	ldr	r0, [r0]
   14268:	movw	r1, #41824	; 0xa360
   1426c:	movt	r1, #1
   14270:	movw	r2, #41731	; 0xa303
   14274:	movt	r2, #1
   14278:	bl	114a4 <fprintf@plt>
   1427c:	movw	r0, #59544	; 0xe898
   14280:	movt	r0, #2
   14284:	ldr	r0, [r0]
   14288:	bl	11480 <exit@plt>
   1428c:	push	{r4, r5, fp, lr}
   14290:	add	fp, sp, #8
   14294:	cmp	r0, #0
   14298:	beq	1432c <_obstack_memory_used@@Base+0x100>
   1429c:	mov	r4, r0
   142a0:	mov	r1, #47	; 0x2f
   142a4:	bl	114f8 <strrchr@plt>
   142a8:	cmp	r0, #0
   142ac:	mov	r5, r4
   142b0:	addne	r5, r0, #1
   142b4:	sub	r0, r5, r4
   142b8:	cmp	r0, #7
   142bc:	blt	14310 <_obstack_memory_used@@Base+0xe4>
   142c0:	sub	r0, r5, #7
   142c4:	movw	r1, #41804	; 0xa34c
   142c8:	movt	r1, #1
   142cc:	mov	r2, #7
   142d0:	bl	115ac <strncmp@plt>
   142d4:	cmp	r0, #0
   142d8:	bne	14310 <_obstack_memory_used@@Base+0xe4>
   142dc:	movw	r1, #41812	; 0xa354
   142e0:	movt	r1, #1
   142e4:	mov	r0, r5
   142e8:	mov	r2, #3
   142ec:	bl	115ac <strncmp@plt>
   142f0:	cmp	r0, #0
   142f4:	beq	14300 <_obstack_memory_used@@Base+0xd4>
   142f8:	mov	r4, r5
   142fc:	b	14310 <_obstack_memory_used@@Base+0xe4>
   14300:	add	r4, r5, #3
   14304:	movw	r0, #59568	; 0xe8b0
   14308:	movt	r0, #2
   1430c:	str	r4, [r0]
   14310:	movw	r0, #59572	; 0xe8b4
   14314:	movt	r0, #2
   14318:	str	r4, [r0]
   1431c:	movw	r0, #59620	; 0xe8e4
   14320:	movt	r0, #2
   14324:	str	r4, [r0]
   14328:	pop	{r4, r5, fp, pc}
   1432c:	movw	r0, #59576	; 0xe8b8
   14330:	movt	r0, #2
   14334:	ldr	r3, [r0]
   14338:	movw	r0, #41748	; 0xa314
   1433c:	movt	r0, #1
   14340:	mov	r1, #55	; 0x37
   14344:	mov	r2, #1
   14348:	bl	113f0 <fwrite@plt>
   1434c:	bl	115b8 <abort@plt>
   14350:	push	{r4, r5, r6, r7, fp, lr}
   14354:	add	fp, sp, #16
   14358:	sub	sp, sp, #32
   1435c:	mov	r4, r2
   14360:	mov	r5, r0
   14364:	ldr	r7, [fp, #12]
   14368:	ldr	r6, [fp, #8]
   1436c:	cmp	r1, #0
   14370:	beq	14390 <_obstack_memory_used@@Base+0x164>
   14374:	mov	r2, r1
   14378:	str	r3, [sp]
   1437c:	movw	r1, #41816	; 0xa358
   14380:	movt	r1, #1
   14384:	mov	r0, r5
   14388:	mov	r3, r4
   1438c:	b	143a0 <_obstack_memory_used@@Base+0x174>
   14390:	movw	r1, #41828	; 0xa364
   14394:	movt	r1, #1
   14398:	mov	r0, r5
   1439c:	mov	r2, r4
   143a0:	bl	114a4 <fprintf@plt>
   143a4:	movw	r1, #42592	; 0xa660
   143a8:	movt	r1, #1
   143ac:	movw	r2, #41835	; 0xa36b
   143b0:	movt	r2, #1
   143b4:	mov	r0, r5
   143b8:	movw	r3, #2022	; 0x7e6
   143bc:	bl	114a4 <fprintf@plt>
   143c0:	mov	r0, #10
   143c4:	mov	r1, r5
   143c8:	bl	11510 <fputc@plt>
   143cc:	movw	r1, #41839	; 0xa36f
   143d0:	movt	r1, #1
   143d4:	movw	r2, #42010	; 0xa41a
   143d8:	movt	r2, #1
   143dc:	mov	r0, r5
   143e0:	bl	114a4 <fprintf@plt>
   143e4:	mov	r0, #10
   143e8:	mov	r1, r5
   143ec:	bl	11510 <fputc@plt>
   143f0:	cmp	r7, #9
   143f4:	bhi	14430 <_obstack_memory_used@@Base+0x204>
   143f8:	add	r0, pc, #0
   143fc:	ldr	pc, [r0, r7, lsl #2]
   14400:	andeq	r4, r1, r8, lsr #8
   14404:	andeq	r4, r1, r4, ror #8
   14408:	andeq	r4, r1, r0, lsl #9
   1440c:	muleq	r1, ip, r4
   14410:			; <UNDEFINED> instruction: 0x000144b4
   14414:	ldrdeq	r4, [r1], -r0
   14418:	andeq	r4, r1, ip, ror #9
   1441c:	andeq	r4, r1, r0, lsl r5
   14420:	andeq	r4, r1, r0, ror r5
   14424:	andeq	r4, r1, ip, lsr r5
   14428:	sub	sp, fp, #16
   1442c:	pop	{r4, r5, r6, r7, fp, pc}
   14430:	ldm	r6, {r2, r3}
   14434:	add	r7, r6, #8
   14438:	ldm	r7, {r0, r1, r7}
   1443c:	add	lr, r6, #20
   14440:	ldm	lr, {r4, ip, lr}
   14444:	ldr	r6, [r6, #32]
   14448:	stm	sp, {r0, r1, r7}
   1444c:	add	r0, sp, #12
   14450:	stm	r0, {r4, ip, lr}
   14454:	str	r6, [sp, #24]
   14458:	movw	r1, #42363	; 0xa57b
   1445c:	movt	r1, #1
   14460:	b	145a0 <_obstack_memory_used@@Base+0x374>
   14464:	ldr	r2, [r6]
   14468:	movw	r1, #42044	; 0xa43c
   1446c:	movt	r1, #1
   14470:	mov	r0, r5
   14474:	sub	sp, fp, #16
   14478:	pop	{r4, r5, r6, r7, fp, lr}
   1447c:	b	114a4 <fprintf@plt>
   14480:	ldm	r6, {r2, r3}
   14484:	movw	r1, #42060	; 0xa44c
   14488:	movt	r1, #1
   1448c:	mov	r0, r5
   14490:	sub	sp, fp, #16
   14494:	pop	{r4, r5, r6, r7, fp, lr}
   14498:	b	114a4 <fprintf@plt>
   1449c:	ldm	r6, {r2, r3}
   144a0:	ldr	r0, [r6, #8]
   144a4:	str	r0, [sp]
   144a8:	movw	r1, #42083	; 0xa463
   144ac:	movt	r1, #1
   144b0:	b	145a0 <_obstack_memory_used@@Base+0x374>
   144b4:	ldm	r6, {r2, r3}
   144b8:	ldr	r0, [r6, #8]
   144bc:	ldr	r1, [r6, #12]
   144c0:	stm	sp, {r0, r1}
   144c4:	movw	r1, #42111	; 0xa47f
   144c8:	movt	r1, #1
   144cc:	b	145a0 <_obstack_memory_used@@Base+0x374>
   144d0:	ldm	r6, {r2, r3}
   144d4:	add	r7, r6, #8
   144d8:	ldm	r7, {r0, r1, r7}
   144dc:	stm	sp, {r0, r1, r7}
   144e0:	movw	r1, #42143	; 0xa49f
   144e4:	movt	r1, #1
   144e8:	b	145a0 <_obstack_memory_used@@Base+0x374>
   144ec:	ldm	r6, {r2, r3}
   144f0:	add	r7, r6, #8
   144f4:	ldm	r7, {r0, r1, r7}
   144f8:	ldr	r6, [r6, #20]
   144fc:	stm	sp, {r0, r1, r7}
   14500:	str	r6, [sp, #12]
   14504:	movw	r1, #42179	; 0xa4c3
   14508:	movt	r1, #1
   1450c:	b	145a0 <_obstack_memory_used@@Base+0x374>
   14510:	ldm	r6, {r2, r3}
   14514:	add	r7, r6, #8
   14518:	ldm	r7, {r0, r1, r7}
   1451c:	ldr	r4, [r6, #20]
   14520:	ldr	r6, [r6, #24]
   14524:	stm	sp, {r0, r1, r7}
   14528:	str	r4, [sp, #12]
   1452c:	str	r6, [sp, #16]
   14530:	movw	r1, #42219	; 0xa4eb
   14534:	movt	r1, #1
   14538:	b	145a0 <_obstack_memory_used@@Base+0x374>
   1453c:	ldm	r6, {r2, r3}
   14540:	add	r7, r6, #8
   14544:	ldm	r7, {r0, r1, r7}
   14548:	add	lr, r6, #20
   1454c:	ldm	lr, {r4, ip, lr}
   14550:	ldr	r6, [r6, #32]
   14554:	stm	sp, {r0, r1, r7}
   14558:	add	r0, sp, #12
   1455c:	stm	r0, {r4, ip, lr}
   14560:	str	r6, [sp, #24]
   14564:	movw	r1, #42311	; 0xa547
   14568:	movt	r1, #1
   1456c:	b	145a0 <_obstack_memory_used@@Base+0x374>
   14570:	ldm	r6, {r2, r3}
   14574:	add	r7, r6, #8
   14578:	ldm	r7, {r0, r1, r7}
   1457c:	ldr	r4, [r6, #20]
   14580:	ldr	ip, [r6, #24]
   14584:	ldr	r6, [r6, #28]
   14588:	stm	sp, {r0, r1, r7}
   1458c:	str	r4, [sp, #12]
   14590:	str	ip, [sp, #16]
   14594:	str	r6, [sp, #20]
   14598:	movw	r1, #42263	; 0xa517
   1459c:	movt	r1, #1
   145a0:	mov	r0, r5
   145a4:	bl	114a4 <fprintf@plt>
   145a8:	sub	sp, fp, #16
   145ac:	pop	{r4, r5, r6, r7, fp, pc}
   145b0:	push	{r4, sl, fp, lr}
   145b4:	add	fp, sp, #8
   145b8:	sub	sp, sp, #8
   145bc:	mov	lr, #0
   145c0:	ldr	ip, [fp, #8]
   145c4:	ldr	r4, [ip, lr, lsl #2]
   145c8:	add	lr, lr, #1
   145cc:	cmp	r4, #0
   145d0:	bne	145c4 <_obstack_memory_used@@Base+0x398>
   145d4:	sub	r4, lr, #1
   145d8:	str	ip, [sp]
   145dc:	str	r4, [sp, #4]
   145e0:	bl	14350 <_obstack_memory_used@@Base+0x124>
   145e4:	sub	sp, fp, #8
   145e8:	pop	{r4, sl, fp, pc}
   145ec:	push	{r4, r5, fp, lr}
   145f0:	add	fp, sp, #8
   145f4:	sub	sp, sp, #48	; 0x30
   145f8:	mov	ip, #0
   145fc:	ldr	r4, [fp, #8]
   14600:	add	lr, sp, #8
   14604:	ldr	r5, [r4]
   14608:	str	r5, [lr, ip, lsl #2]
   1460c:	cmp	r5, #0
   14610:	beq	14624 <_obstack_memory_used@@Base+0x3f8>
   14614:	add	ip, ip, #1
   14618:	add	r4, r4, #4
   1461c:	cmp	ip, #10
   14620:	bcc	14604 <_obstack_memory_used@@Base+0x3d8>
   14624:	str	lr, [sp]
   14628:	str	ip, [sp, #4]
   1462c:	bl	14350 <_obstack_memory_used@@Base+0x124>
   14630:	sub	sp, fp, #8
   14634:	pop	{r4, r5, fp, pc}
   14638:	push	{fp, lr}
   1463c:	mov	fp, sp
   14640:	sub	sp, sp, #8
   14644:	add	ip, fp, #8
   14648:	str	ip, [sp, #4]
   1464c:	str	ip, [sp]
   14650:	bl	145ec <_obstack_memory_used@@Base+0x3c0>
   14654:	mov	sp, fp
   14658:	pop	{fp, pc}
   1465c:	push	{fp, lr}
   14660:	mov	fp, sp
   14664:	movw	r0, #59580	; 0xe8bc
   14668:	movt	r0, #2
   1466c:	ldr	r1, [r0]
   14670:	mov	r0, #10
   14674:	bl	11510 <fputc@plt>
   14678:	movw	r0, #42423	; 0xa5b7
   1467c:	movt	r0, #1
   14680:	movw	r1, #42443	; 0xa5cb
   14684:	movt	r1, #1
   14688:	bl	1133c <printf@plt>
   1468c:	movw	r0, #42465	; 0xa5e1
   14690:	movt	r0, #1
   14694:	movw	r1, #41704	; 0xa2e8
   14698:	movt	r1, #1
   1469c:	movw	r2, #42485	; 0xa5f5
   146a0:	movt	r2, #1
   146a4:	bl	1133c <printf@plt>
   146a8:	movw	r0, #42524	; 0xa61c
   146ac:	movt	r0, #1
   146b0:	movw	r1, #42563	; 0xa643
   146b4:	movt	r1, #1
   146b8:	pop	{fp, lr}
   146bc:	b	1133c <printf@plt>
   146c0:	b	146c4 <_obstack_memory_used@@Base+0x498>
   146c4:	push	{r4, r5, r6, sl, fp, lr}
   146c8:	add	fp, sp, #16
   146cc:	mov	r4, r2
   146d0:	mov	r5, r1
   146d4:	mov	r6, r0
   146d8:	bl	17db8 <argp_failure@@Base+0x2d04>
   146dc:	cmp	r0, #0
   146e0:	popne	{r4, r5, r6, sl, fp, pc}
   146e4:	cmp	r6, #0
   146e8:	beq	146fc <_obstack_memory_used@@Base+0x4d0>
   146ec:	cmp	r5, #0
   146f0:	cmpne	r4, #0
   146f4:	bne	146fc <_obstack_memory_used@@Base+0x4d0>
   146f8:	pop	{r4, r5, r6, sl, fp, pc}
   146fc:	bl	14ab0 <_obstack_memory_used@@Base+0x884>
   14700:	push	{fp, lr}
   14704:	mov	fp, sp
   14708:	bl	14b34 <_obstack_memory_used@@Base+0x908>
   1470c:	bl	14714 <_obstack_memory_used@@Base+0x4e8>
   14710:	pop	{fp, pc}
   14714:	cmp	r0, #0
   14718:	bxne	lr
   1471c:	push	{fp, lr}
   14720:	mov	fp, sp
   14724:	bl	14ab0 <_obstack_memory_used@@Base+0x884>
   14728:	push	{fp, lr}
   1472c:	mov	fp, sp
   14730:	bl	17d84 <argp_failure@@Base+0x2cd0>
   14734:	bl	14714 <_obstack_memory_used@@Base+0x4e8>
   14738:	pop	{fp, pc}
   1473c:	b	14700 <_obstack_memory_used@@Base+0x4d4>
   14740:	push	{r4, r5, fp, lr}
   14744:	add	fp, sp, #8
   14748:	mov	r4, r1
   1474c:	mov	r5, r0
   14750:	bl	14b64 <_obstack_memory_used@@Base+0x938>
   14754:	cmp	r0, #0
   14758:	popne	{r4, r5, fp, pc}
   1475c:	cmp	r5, #0
   14760:	beq	14770 <_obstack_memory_used@@Base+0x544>
   14764:	cmp	r4, #0
   14768:	bne	14770 <_obstack_memory_used@@Base+0x544>
   1476c:	pop	{r4, r5, fp, pc}
   14770:	bl	14ab0 <_obstack_memory_used@@Base+0x884>
   14774:	push	{fp, lr}
   14778:	mov	fp, sp
   1477c:	bl	17d88 <argp_failure@@Base+0x2cd4>
   14780:	bl	14714 <_obstack_memory_used@@Base+0x4e8>
   14784:	pop	{fp, pc}
   14788:	push	{fp, lr}
   1478c:	mov	fp, sp
   14790:	bl	17d98 <argp_failure@@Base+0x2ce4>
   14794:	bl	14714 <_obstack_memory_used@@Base+0x4e8>
   14798:	pop	{fp, pc}
   1479c:	push	{fp, lr}
   147a0:	mov	fp, sp
   147a4:	mov	r2, r1
   147a8:	mov	r1, r0
   147ac:	mov	r0, #0
   147b0:	bl	146c4 <_obstack_memory_used@@Base+0x498>
   147b4:	pop	{fp, pc}
   147b8:	mov	r2, r1
   147bc:	mov	r1, r0
   147c0:	mov	r0, #0
   147c4:	b	14788 <_obstack_memory_used@@Base+0x55c>
   147c8:	mov	r2, #1
   147cc:	b	147d0 <_obstack_memory_used@@Base+0x5a4>
   147d0:	push	{r4, r5, fp, lr}
   147d4:	add	fp, sp, #8
   147d8:	mov	r4, r1
   147dc:	ldr	r5, [r1]
   147e0:	cmp	r0, #0
   147e4:	beq	147fc <_obstack_memory_used@@Base+0x5d0>
   147e8:	mov	r1, #1
   147ec:	add	r1, r1, r5, lsr #1
   147f0:	adds	r5, r5, r1
   147f4:	bcc	14814 <_obstack_memory_used@@Base+0x5e8>
   147f8:	bl	14ab0 <_obstack_memory_used@@Base+0x884>
   147fc:	cmp	r5, #0
   14800:	bne	14814 <_obstack_memory_used@@Base+0x5e8>
   14804:	mov	r1, #64	; 0x40
   14808:	udiv	r5, r1, r2
   1480c:	cmp	r2, #64	; 0x40
   14810:	addhi	r5, r5, #1
   14814:	mov	r1, r5
   14818:	bl	146c4 <_obstack_memory_used@@Base+0x498>
   1481c:	str	r5, [r4]
   14820:	pop	{r4, r5, fp, pc}
   14824:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14828:	add	fp, sp, #24
   1482c:	mov	r8, r1
   14830:	ldr	r6, [r1]
   14834:	add	r1, r6, r6, asr #1
   14838:	cmp	r1, r6
   1483c:	mvnvs	r1, #-2147483648	; 0x80000000
   14840:	cmp	r1, r3
   14844:	mov	r5, r1
   14848:	movgt	r5, r3
   1484c:	cmn	r3, #1
   14850:	movle	r5, r1
   14854:	ldr	r4, [fp, #8]
   14858:	cmn	r4, #1
   1485c:	ble	14884 <_obstack_memory_used@@Base+0x658>
   14860:	cmp	r4, #0
   14864:	beq	148d8 <_obstack_memory_used@@Base+0x6ac>
   14868:	cmn	r5, #1
   1486c:	ble	148ac <_obstack_memory_used@@Base+0x680>
   14870:	mvn	r7, #-2147483648	; 0x80000000
   14874:	udiv	r1, r7, r4
   14878:	cmp	r1, r5
   1487c:	bge	148d8 <_obstack_memory_used@@Base+0x6ac>
   14880:	b	148e8 <_obstack_memory_used@@Base+0x6bc>
   14884:	cmn	r5, #1
   14888:	ble	148c8 <_obstack_memory_used@@Base+0x69c>
   1488c:	cmn	r4, #1
   14890:	beq	148d8 <_obstack_memory_used@@Base+0x6ac>
   14894:	mov	r1, #-2147483648	; 0x80000000
   14898:	sdiv	r1, r1, r4
   1489c:	mvn	r7, #-2147483648	; 0x80000000
   148a0:	cmp	r1, r5
   148a4:	bge	148d8 <_obstack_memory_used@@Base+0x6ac>
   148a8:	b	148e8 <_obstack_memory_used@@Base+0x6bc>
   148ac:	beq	148d8 <_obstack_memory_used@@Base+0x6ac>
   148b0:	mov	r1, #-2147483648	; 0x80000000
   148b4:	sdiv	r1, r1, r5
   148b8:	mvn	r7, #-2147483648	; 0x80000000
   148bc:	cmp	r1, r4
   148c0:	bge	148d8 <_obstack_memory_used@@Base+0x6ac>
   148c4:	b	148e8 <_obstack_memory_used@@Base+0x6bc>
   148c8:	mvn	r7, #-2147483648	; 0x80000000
   148cc:	sdiv	r1, r7, r4
   148d0:	cmp	r5, r1
   148d4:	blt	148e8 <_obstack_memory_used@@Base+0x6bc>
   148d8:	mul	r1, r5, r4
   148dc:	mov	r7, #64	; 0x40
   148e0:	cmp	r1, #63	; 0x3f
   148e4:	bgt	148f0 <_obstack_memory_used@@Base+0x6c4>
   148e8:	sdiv	r5, r7, r4
   148ec:	mul	r1, r5, r4
   148f0:	cmp	r0, #0
   148f4:	moveq	r7, #0
   148f8:	streq	r7, [r8]
   148fc:	sub	r7, r5, r6
   14900:	cmp	r7, r2
   14904:	bge	149b0 <_obstack_memory_used@@Base+0x784>
   14908:	add	r5, r6, r2
   1490c:	mov	r1, #0
   14910:	cmp	r5, r3
   14914:	mov	r2, #0
   14918:	movwgt	r2, #1
   1491c:	cmn	r3, #1
   14920:	movwgt	r1, #1
   14924:	cmp	r5, r6
   14928:	bvs	14998 <_obstack_memory_used@@Base+0x76c>
   1492c:	ands	r1, r1, r2
   14930:	bne	14998 <_obstack_memory_used@@Base+0x76c>
   14934:	cmn	r4, #1
   14938:	ble	14960 <_obstack_memory_used@@Base+0x734>
   1493c:	cmp	r4, #0
   14940:	beq	149ac <_obstack_memory_used@@Base+0x780>
   14944:	cmn	r5, #1
   14948:	ble	14984 <_obstack_memory_used@@Base+0x758>
   1494c:	mvn	r1, #-2147483648	; 0x80000000
   14950:	udiv	r1, r1, r4
   14954:	cmp	r1, r5
   14958:	bge	149ac <_obstack_memory_used@@Base+0x780>
   1495c:	b	14998 <_obstack_memory_used@@Base+0x76c>
   14960:	cmn	r5, #1
   14964:	ble	1499c <_obstack_memory_used@@Base+0x770>
   14968:	cmn	r4, #1
   1496c:	beq	149ac <_obstack_memory_used@@Base+0x780>
   14970:	mov	r1, #-2147483648	; 0x80000000
   14974:	sdiv	r1, r1, r4
   14978:	cmp	r1, r5
   1497c:	bge	149ac <_obstack_memory_used@@Base+0x780>
   14980:	b	14998 <_obstack_memory_used@@Base+0x76c>
   14984:	beq	149ac <_obstack_memory_used@@Base+0x780>
   14988:	mov	r1, #-2147483648	; 0x80000000
   1498c:	sdiv	r1, r1, r5
   14990:	cmp	r1, r4
   14994:	bge	149ac <_obstack_memory_used@@Base+0x780>
   14998:	bl	14ab0 <_obstack_memory_used@@Base+0x884>
   1499c:	mvn	r1, #-2147483648	; 0x80000000
   149a0:	sdiv	r1, r1, r4
   149a4:	cmp	r5, r1
   149a8:	blt	14998 <_obstack_memory_used@@Base+0x76c>
   149ac:	mul	r1, r5, r4
   149b0:	bl	14740 <_obstack_memory_used@@Base+0x514>
   149b4:	str	r5, [r8]
   149b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   149bc:	mov	r1, #1
   149c0:	b	149c4 <_obstack_memory_used@@Base+0x798>
   149c4:	push	{fp, lr}
   149c8:	mov	fp, sp
   149cc:	bl	14ae0 <_obstack_memory_used@@Base+0x8b4>
   149d0:	bl	14714 <_obstack_memory_used@@Base+0x4e8>
   149d4:	pop	{fp, pc}
   149d8:	mov	r1, #1
   149dc:	b	149e0 <_obstack_memory_used@@Base+0x7b4>
   149e0:	push	{fp, lr}
   149e4:	mov	fp, sp
   149e8:	bl	17d94 <argp_failure@@Base+0x2ce0>
   149ec:	bl	14714 <_obstack_memory_used@@Base+0x4e8>
   149f0:	pop	{fp, pc}
   149f4:	push	{r4, r5, r6, sl, fp, lr}
   149f8:	add	fp, sp, #16
   149fc:	mov	r4, r1
   14a00:	mov	r5, r0
   14a04:	mov	r0, r1
   14a08:	bl	14700 <_obstack_memory_used@@Base+0x4d4>
   14a0c:	mov	r6, r0
   14a10:	mov	r1, r5
   14a14:	mov	r2, r4
   14a18:	bl	1139c <memcpy@plt>
   14a1c:	mov	r0, r6
   14a20:	pop	{r4, r5, r6, sl, fp, pc}
   14a24:	push	{r4, r5, r6, sl, fp, lr}
   14a28:	add	fp, sp, #16
   14a2c:	mov	r4, r1
   14a30:	mov	r5, r0
   14a34:	mov	r0, r1
   14a38:	bl	14728 <_obstack_memory_used@@Base+0x4fc>
   14a3c:	mov	r6, r0
   14a40:	mov	r1, r5
   14a44:	mov	r2, r4
   14a48:	bl	1139c <memcpy@plt>
   14a4c:	mov	r0, r6
   14a50:	pop	{r4, r5, r6, sl, fp, pc}
   14a54:	push	{r4, r5, r6, sl, fp, lr}
   14a58:	add	fp, sp, #16
   14a5c:	mov	r4, r1
   14a60:	mov	r5, r0
   14a64:	add	r0, r1, #1
   14a68:	bl	14728 <_obstack_memory_used@@Base+0x4fc>
   14a6c:	mov	r6, r0
   14a70:	mov	r0, #0
   14a74:	strb	r0, [r6, r4]
   14a78:	mov	r0, r6
   14a7c:	mov	r1, r5
   14a80:	mov	r2, r4
   14a84:	bl	1139c <memcpy@plt>
   14a88:	mov	r0, r6
   14a8c:	pop	{r4, r5, r6, sl, fp, pc}
   14a90:	push	{r4, sl, fp, lr}
   14a94:	add	fp, sp, #8
   14a98:	mov	r4, r0
   14a9c:	bl	1148c <strlen@plt>
   14aa0:	add	r1, r0, #1
   14aa4:	mov	r0, r4
   14aa8:	pop	{r4, sl, fp, lr}
   14aac:	b	149f4 <_obstack_memory_used@@Base+0x7c8>
   14ab0:	push	{fp, lr}
   14ab4:	mov	fp, sp
   14ab8:	movw	r0, #59544	; 0xe898
   14abc:	movt	r0, #2
   14ac0:	ldr	r0, [r0]
   14ac4:	movw	r2, #42893	; 0xa78d
   14ac8:	movt	r2, #1
   14acc:	movw	r3, #41731	; 0xa303
   14ad0:	movt	r3, #1
   14ad4:	mov	r1, #0
   14ad8:	bl	11414 <error@plt>
   14adc:	bl	115b8 <abort@plt>
   14ae0:	clz	r2, r1
   14ae4:	lsr	r2, r2, #5
   14ae8:	clz	r3, r0
   14aec:	lsr	r3, r3, #5
   14af0:	orrs	r2, r3, r2
   14af4:	movwne	r1, #1
   14af8:	movwne	r0, #1
   14afc:	cmp	r1, #0
   14b00:	beq	14b30 <_obstack_memory_used@@Base+0x904>
   14b04:	mvn	r2, #-2147483648	; 0x80000000
   14b08:	udiv	r2, r2, r1
   14b0c:	cmp	r2, r0
   14b10:	bcs	14b30 <_obstack_memory_used@@Base+0x904>
   14b14:	push	{fp, lr}
   14b18:	mov	fp, sp
   14b1c:	bl	114b0 <__errno_location@plt>
   14b20:	mov	r1, #12
   14b24:	str	r1, [r0]
   14b28:	mov	r0, #0
   14b2c:	pop	{fp, pc}
   14b30:	b	1130c <calloc@plt>
   14b34:	cmp	r0, #0
   14b38:	movweq	r0, #1
   14b3c:	cmn	r0, #1
   14b40:	ble	14b48 <_obstack_memory_used@@Base+0x91c>
   14b44:	b	11438 <malloc@plt>
   14b48:	push	{fp, lr}
   14b4c:	mov	fp, sp
   14b50:	bl	114b0 <__errno_location@plt>
   14b54:	mov	r1, #12
   14b58:	str	r1, [r0]
   14b5c:	mov	r0, #0
   14b60:	pop	{fp, pc}
   14b64:	push	{fp, lr}
   14b68:	mov	fp, sp
   14b6c:	cmp	r0, #0
   14b70:	beq	14b8c <_obstack_memory_used@@Base+0x960>
   14b74:	cmp	r1, #0
   14b78:	beq	14b98 <_obstack_memory_used@@Base+0x96c>
   14b7c:	cmn	r1, #1
   14b80:	ble	14ba4 <_obstack_memory_used@@Base+0x978>
   14b84:	pop	{fp, lr}
   14b88:	b	113cc <realloc@plt>
   14b8c:	mov	r0, r1
   14b90:	pop	{fp, lr}
   14b94:	b	14b34 <_obstack_memory_used@@Base+0x908>
   14b98:	bl	13e48 <argp_usage@@Base+0x18c>
   14b9c:	mov	r0, #0
   14ba0:	pop	{fp, pc}
   14ba4:	bl	114b0 <__errno_location@plt>
   14ba8:	mov	r1, #12
   14bac:	str	r1, [r0]
   14bb0:	mov	r0, #0
   14bb4:	pop	{fp, pc}

00014bb8 <argp_help@@Base>:
   14bb8:	push	{fp, lr}
   14bbc:	mov	fp, sp
   14bc0:	sub	sp, sp, #8
   14bc4:	mov	ip, r2
   14bc8:	mov	r2, r1
   14bcc:	str	r3, [sp]
   14bd0:	mov	r1, #0
   14bd4:	mov	r3, ip
   14bd8:	bl	14be4 <argp_help@@Base+0x2c>
   14bdc:	mov	sp, fp
   14be0:	pop	{fp, pc}
   14be4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14be8:	add	fp, sp, #28
   14bec:	sub	sp, sp, #36	; 0x24
   14bf0:	str	r1, [fp, #-44]	; 0xffffffd4
   14bf4:	str	r0, [fp, #-40]	; 0xffffffd8
   14bf8:	cmp	r2, #0
   14bfc:	beq	14ec0 <argp_help@@Base+0x308>
   14c00:	mov	r7, r3
   14c04:	mov	r4, r2
   14c08:	ldr	r0, [fp, #8]
   14c0c:	str	r0, [fp, #-48]	; 0xffffffd0
   14c10:	mov	r0, r2
   14c14:	bl	11534 <flockfile@plt>
   14c18:	movw	r5, #59504	; 0xe870
   14c1c:	movt	r5, #2
   14c20:	ldr	r0, [r5, #36]	; 0x24
   14c24:	cmp	r0, #0
   14c28:	bne	14c34 <argp_help@@Base+0x7c>
   14c2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c30:	bl	151f4 <argp_failure@@Base+0x140>
   14c34:	ldr	r2, [r5, #32]
   14c38:	mov	r6, #0
   14c3c:	mov	r0, r4
   14c40:	mov	r1, #0
   14c44:	mov	r3, #0
   14c48:	bl	17df4 <argp_failure@@Base+0x2d40>
   14c4c:	cmp	r0, #0
   14c50:	beq	14ec8 <argp_help@@Base+0x310>
   14c54:	mov	r8, r0
   14c58:	tst	r7, #11
   14c5c:	beq	14c94 <argp_help@@Base+0xdc>
   14c60:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14c64:	mov	r1, #0
   14c68:	bl	154d4 <argp_failure@@Base+0x420>
   14c6c:	mov	r6, r0
   14c70:	movw	r1, #41450	; 0xa1ea
   14c74:	movt	r1, #1
   14c78:	bl	1557c <argp_failure@@Base+0x4c8>
   14c7c:	movw	r1, #41613	; 0xa28d
   14c80:	movt	r1, #1
   14c84:	mov	r0, r6
   14c88:	bl	1557c <argp_failure@@Base+0x4c8>
   14c8c:	mov	r0, r6
   14c90:	bl	15598 <argp_failure@@Base+0x4e4>
   14c94:	str	r6, [fp, #-52]	; 0xffffffcc
   14c98:	tst	r7, #3
   14c9c:	str	r4, [fp, #-60]	; 0xffffffc4
   14ca0:	beq	14ed8 <argp_help@@Base+0x320>
   14ca4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14ca8:	bl	155d4 <argp_failure@@Base+0x520>
   14cac:	mov	r2, r0
   14cb0:	add	r0, r0, #7
   14cb4:	bic	r0, r0, #7
   14cb8:	sub	r0, sp, r0
   14cbc:	mov	sp, r0
   14cc0:	str	r0, [fp, #-56]	; 0xffffffc8
   14cc4:	mov	r1, #0
   14cc8:	bl	114d4 <memset@plt>
   14ccc:	mov	r4, #1
   14cd0:	mov	r9, #1
   14cd4:	mov	r5, r7
   14cd8:	movw	r7, #59504	; 0xe870
   14cdc:	movt	r7, #2
   14ce0:	ldr	r1, [r7, #28]
   14ce4:	mov	r0, r8
   14ce8:	bl	18650 <argp_failure@@Base+0x359c>
   14cec:	mov	sl, r0
   14cf0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14cf4:	str	r0, [fp, #-36]	; 0xffffffdc
   14cf8:	mov	r0, r8
   14cfc:	movw	r1, #42660	; 0xa6a4
   14d00:	movt	r1, #1
   14d04:	tst	r4, #1
   14d08:	beq	14d18 <argp_help@@Base+0x160>
   14d0c:	movw	r2, #42666	; 0xa6aa
   14d10:	movt	r2, #1
   14d14:	b	14d20 <argp_help@@Base+0x168>
   14d18:	movw	r2, #42673	; 0xa6b1
   14d1c:	movt	r2, #1
   14d20:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14d24:	bl	18450 <argp_failure@@Base+0x339c>
   14d28:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14d2c:	ldr	r1, [r7, #28]
   14d30:	mov	r0, r8
   14d34:	bl	185d8 <argp_failure@@Base+0x3524>
   14d38:	mov	r4, r0
   14d3c:	mov	r7, r5
   14d40:	tst	r5, #2
   14d44:	bne	14d5c <argp_help@@Base+0x1a4>
   14d48:	mov	r0, r6
   14d4c:	mov	r1, r8
   14d50:	bl	1563c <argp_failure@@Base+0x588>
   14d54:	orr	r7, r7, #2
   14d58:	b	14d78 <argp_help@@Base+0x1c0>
   14d5c:	ldr	r0, [r6, #4]
   14d60:	cmp	r0, #0
   14d64:	beq	14d78 <argp_help@@Base+0x1c0>
   14d68:	mov	r0, r8
   14d6c:	movw	r1, #42680	; 0xa6b8
   14d70:	movt	r1, #1
   14d74:	bl	18544 <argp_failure@@Base+0x3490>
   14d78:	sub	sp, sp, #8
   14d7c:	str	r8, [sp]
   14d80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14d84:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14d88:	sub	r2, fp, #36	; 0x24
   14d8c:	mov	r3, #1
   14d90:	bl	157ac <argp_failure@@Base+0x6f8>
   14d94:	add	sp, sp, #8
   14d98:	mov	r6, r0
   14d9c:	mov	r0, r8
   14da0:	mov	r1, sl
   14da4:	bl	18650 <argp_failure@@Base+0x359c>
   14da8:	mov	r0, r8
   14dac:	mov	r1, r4
   14db0:	bl	185d8 <argp_failure@@Base+0x3524>
   14db4:	mov	r0, r8
   14db8:	mov	r1, #10
   14dbc:	bl	18588 <argp_failure@@Base+0x34d4>
   14dc0:	mov	r4, #0
   14dc4:	cmp	r6, #0
   14dc8:	bne	14cd4 <argp_help@@Base+0x11c>
   14dcc:	tst	r7, #16
   14dd0:	beq	14dfc <argp_help@@Base+0x244>
   14dd4:	sub	sp, sp, #8
   14dd8:	mov	r0, #1
   14ddc:	stm	sp, {r0, r8}
   14de0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14de4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14de8:	mov	r2, #0
   14dec:	mov	r3, #0
   14df0:	bl	15974 <argp_failure@@Base+0x8c0>
   14df4:	add	sp, sp, #8
   14df8:	orr	r9, r0, r9
   14dfc:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14e00:	tst	r7, #4
   14e04:	beq	14e24 <argp_help@@Base+0x26c>
   14e08:	movw	r1, #42693	; 0xa6c5
   14e0c:	movt	r1, #1
   14e10:	mov	r0, r8
   14e14:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14e18:	mov	r3, r2
   14e1c:	bl	18450 <argp_failure@@Base+0x339c>
   14e20:	mov	r9, #1
   14e24:	tst	r7, #8
   14e28:	ldrne	r0, [r6, #4]
   14e2c:	cmpne	r0, #0
   14e30:	bne	14ee8 <argp_help@@Base+0x330>
   14e34:	tst	r7, #32
   14e38:	beq	14e64 <argp_help@@Base+0x2ac>
   14e3c:	sub	sp, sp, #8
   14e40:	mov	r0, #0
   14e44:	stm	sp, {r0, r8}
   14e48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14e4c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14e50:	mov	r2, #1
   14e54:	mov	r3, r9
   14e58:	bl	15974 <argp_failure@@Base+0x8c0>
   14e5c:	add	sp, sp, #8
   14e60:	orr	r9, r0, r9
   14e64:	tst	r7, #64	; 0x40
   14e68:	movwne	r4, #59708	; 0xe93c
   14e6c:	movtne	r4, #2
   14e70:	ldrne	r0, [r4]
   14e74:	cmpne	r0, #0
   14e78:	beq	14ea4 <argp_help@@Base+0x2ec>
   14e7c:	cmp	r9, #0
   14e80:	beq	14e90 <argp_help@@Base+0x2d8>
   14e84:	mov	r0, r8
   14e88:	mov	r1, #10
   14e8c:	bl	18588 <argp_failure@@Base+0x34d4>
   14e90:	ldr	r2, [r4]
   14e94:	movw	r1, #42748	; 0xa6fc
   14e98:	movt	r1, #1
   14e9c:	mov	r0, r8
   14ea0:	bl	18450 <argp_failure@@Base+0x339c>
   14ea4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14ea8:	bl	113e4 <funlockfile@plt>
   14eac:	cmp	r6, #0
   14eb0:	movne	r0, r6
   14eb4:	blne	15d18 <argp_failure@@Base+0xc64>
   14eb8:	mov	r0, r8
   14ebc:	bl	17e74 <argp_failure@@Base+0x2dc0>
   14ec0:	sub	sp, fp, #28
   14ec4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ec8:	mov	r0, r4
   14ecc:	sub	sp, fp, #28
   14ed0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ed4:	b	113e4 <funlockfile@plt>
   14ed8:	mov	r9, #0
   14edc:	tst	r7, #16
   14ee0:	bne	14dd4 <argp_help@@Base+0x21c>
   14ee4:	b	14dfc <argp_help@@Base+0x244>
   14ee8:	cmp	r9, #0
   14eec:	beq	14efc <argp_help@@Base+0x344>
   14ef0:	mov	r0, r8
   14ef4:	mov	r1, #10
   14ef8:	bl	18588 <argp_failure@@Base+0x34d4>
   14efc:	mov	r0, r6
   14f00:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14f04:	mov	r2, r8
   14f08:	bl	15c20 <argp_failure@@Base+0xb6c>
   14f0c:	mov	r9, #1
   14f10:	tst	r7, #32
   14f14:	bne	14e3c <argp_help@@Base+0x284>
   14f18:	b	14e64 <argp_help@@Base+0x2ac>

00014f1c <argp_state_help@@Base>:
   14f1c:	push	{r4, r5, fp, lr}
   14f20:	add	fp, sp, #8
   14f24:	sub	sp, sp, #8
   14f28:	mov	r4, r2
   14f2c:	mov	r2, r1
   14f30:	mov	r5, r0
   14f34:	cmp	r0, #0
   14f38:	beq	14f84 <argp_state_help@@Base+0x68>
   14f3c:	cmp	r2, #0
   14f40:	beq	14fbc <argp_state_help@@Base+0xa0>
   14f44:	ldr	r0, [r5, #16]
   14f48:	ands	r0, r0, #2
   14f4c:	bne	14fbc <argp_state_help@@Base+0xa0>
   14f50:	ldr	r0, [r5]
   14f54:	ldr	r1, [r5, #16]
   14f58:	ldr	r3, [r5, #40]	; 0x28
   14f5c:	str	r3, [sp]
   14f60:	and	r1, r1, #64	; 0x40
   14f64:	orr	r4, r4, r1, lsl #1
   14f68:	mov	r1, r5
   14f6c:	mov	r3, r4
   14f70:	bl	14be4 <argp_help@@Base+0x2c>
   14f74:	ldrb	r0, [r5, #16]
   14f78:	tst	r0, #32
   14f7c:	beq	14fac <argp_state_help@@Base+0x90>
   14f80:	b	14fbc <argp_state_help@@Base+0xa0>
   14f84:	cmp	r2, #0
   14f88:	beq	14fbc <argp_state_help@@Base+0xa0>
   14f8c:	movw	r0, #59568	; 0xe8b0
   14f90:	movt	r0, #2
   14f94:	ldr	r0, [r0]
   14f98:	str	r0, [sp]
   14f9c:	mov	r0, #0
   14fa0:	mov	r1, r5
   14fa4:	mov	r3, r4
   14fa8:	bl	14be4 <argp_help@@Base+0x2c>
   14fac:	tst	r4, #256	; 0x100
   14fb0:	bne	14fc4 <argp_state_help@@Base+0xa8>
   14fb4:	tst	r4, #512	; 0x200
   14fb8:	bne	14fd4 <argp_state_help@@Base+0xb8>
   14fbc:	sub	sp, fp, #8
   14fc0:	pop	{r4, r5, fp, pc}
   14fc4:	movw	r0, #59560	; 0xe8a8
   14fc8:	movt	r0, #2
   14fcc:	ldr	r0, [r0]
   14fd0:	bl	11480 <exit@plt>
   14fd4:	mov	r0, #0
   14fd8:	bl	11480 <exit@plt>

00014fdc <argp_error@@Base>:
   14fdc:	sub	sp, sp, #8
   14fe0:	push	{r4, r5, r6, sl, fp, lr}
   14fe4:	add	fp, sp, #16
   14fe8:	sub	sp, sp, #8
   14fec:	mov	r5, r1
   14ff0:	mov	r4, r0
   14ff4:	str	r3, [fp, #12]
   14ff8:	str	r2, [fp, #8]
   14ffc:	cmp	r0, #0
   15000:	beq	15018 <argp_error@@Base+0x3c>
   15004:	ldrb	r0, [r4, #16]
   15008:	tst	r0, #2
   1500c:	bne	150a4 <argp_error@@Base+0xc8>
   15010:	add	r0, r4, #44	; 0x2c
   15014:	b	15020 <argp_error@@Base+0x44>
   15018:	movw	r0, #59576	; 0xe8b8
   1501c:	movt	r0, #2
   15020:	ldr	r6, [r0]
   15024:	cmp	r6, #0
   15028:	beq	150a4 <argp_error@@Base+0xc8>
   1502c:	mov	r0, r6
   15030:	bl	11534 <flockfile@plt>
   15034:	add	r0, fp, #8
   15038:	str	r0, [sp, #4]
   1503c:	movw	r0, #59568	; 0xe8b0
   15040:	movt	r0, #2
   15044:	cmp	r4, #0
   15048:	addne	r0, r4, #40	; 0x28
   1504c:	ldr	r0, [r0]
   15050:	mov	r1, r6
   15054:	bl	11318 <fputs_unlocked@plt>
   15058:	mov	r0, #58	; 0x3a
   1505c:	mov	r1, r6
   15060:	bl	115e8 <putc_unlocked@plt>
   15064:	mov	r0, #32
   15068:	mov	r1, r6
   1506c:	bl	115e8 <putc_unlocked@plt>
   15070:	ldr	r2, [sp, #4]
   15074:	mov	r0, r6
   15078:	mov	r1, r5
   1507c:	bl	11504 <vfprintf@plt>
   15080:	mov	r0, #10
   15084:	mov	r1, r6
   15088:	bl	115e8 <putc_unlocked@plt>
   1508c:	mov	r0, r4
   15090:	mov	r1, r6
   15094:	mov	r2, #260	; 0x104
   15098:	bl	14f1c <argp_state_help@@Base>
   1509c:	mov	r0, r6
   150a0:	bl	113e4 <funlockfile@plt>
   150a4:	sub	sp, fp, #16
   150a8:	pop	{r4, r5, r6, sl, fp, lr}
   150ac:	add	sp, sp, #8
   150b0:	bx	lr

000150b4 <argp_failure@@Base>:
   150b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   150b8:	add	fp, sp, #24
   150bc:	sub	sp, sp, #200	; 0xc8
   150c0:	mov	r4, r3
   150c4:	mov	r7, r2
   150c8:	mov	r8, r1
   150cc:	mov	r5, r0
   150d0:	cmp	r0, #0
   150d4:	beq	150ec <argp_failure@@Base+0x38>
   150d8:	ldrb	r0, [r5, #16]
   150dc:	tst	r0, #2
   150e0:	bne	151ec <argp_failure@@Base+0x138>
   150e4:	add	r0, r5, #44	; 0x2c
   150e8:	b	150f4 <argp_failure@@Base+0x40>
   150ec:	movw	r0, #59576	; 0xe8b8
   150f0:	movt	r0, #2
   150f4:	ldr	r6, [r0]
   150f8:	cmp	r6, #0
   150fc:	beq	151ec <argp_failure@@Base+0x138>
   15100:	mov	r0, r6
   15104:	bl	11534 <flockfile@plt>
   15108:	movw	r0, #59568	; 0xe8b0
   1510c:	movt	r0, #2
   15110:	cmp	r5, #0
   15114:	addne	r0, r5, #40	; 0x28
   15118:	ldr	r0, [r0]
   1511c:	mov	r1, r6
   15120:	bl	11318 <fputs_unlocked@plt>
   15124:	cmp	r4, #0
   15128:	beq	1515c <argp_failure@@Base+0xa8>
   1512c:	add	r0, fp, #8
   15130:	str	r0, [sp]
   15134:	mov	r0, #58	; 0x3a
   15138:	mov	r1, r6
   1513c:	bl	115e8 <putc_unlocked@plt>
   15140:	mov	r0, #32
   15144:	mov	r1, r6
   15148:	bl	115e8 <putc_unlocked@plt>
   1514c:	ldr	r2, [sp]
   15150:	mov	r0, r6
   15154:	mov	r1, r4
   15158:	bl	11504 <vfprintf@plt>
   1515c:	cmp	r7, #0
   15160:	beq	151b8 <argp_failure@@Base+0x104>
   15164:	mov	r0, #58	; 0x3a
   15168:	mov	r1, r6
   1516c:	bl	115e8 <putc_unlocked@plt>
   15170:	mov	r0, #32
   15174:	mov	r1, r6
   15178:	bl	115e8 <putc_unlocked@plt>
   1517c:	mov	r1, sp
   15180:	mov	r0, r7
   15184:	mov	r2, #200	; 0xc8
   15188:	bl	114c8 <strerror_r@plt>
   1518c:	cmp	r0, #0
   15190:	bne	151b0 <argp_failure@@Base+0xfc>
   15194:	mov	r0, r7
   15198:	bl	11450 <strerror@plt>
   1519c:	mov	r1, r0
   151a0:	movw	r0, #42639	; 0xa68f
   151a4:	movt	r0, #1
   151a8:	cmp	r1, #0
   151ac:	movne	r0, r1
   151b0:	mov	r1, r6
   151b4:	bl	11318 <fputs_unlocked@plt>
   151b8:	mov	r0, #10
   151bc:	mov	r1, r6
   151c0:	bl	115e8 <putc_unlocked@plt>
   151c4:	mov	r0, r6
   151c8:	bl	113e4 <funlockfile@plt>
   151cc:	cmp	r8, #0
   151d0:	beq	151ec <argp_failure@@Base+0x138>
   151d4:	cmp	r5, #0
   151d8:	ldrbne	r0, [r5, #16]
   151dc:	tstne	r0, #32
   151e0:	bne	151ec <argp_failure@@Base+0x138>
   151e4:	mov	r0, r8
   151e8:	bl	11480 <exit@plt>
   151ec:	sub	sp, fp, #24
   151f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   151f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151f8:	add	fp, sp, #28
   151fc:	sub	sp, sp, #60	; 0x3c
   15200:	str	r0, [sp, #8]
   15204:	movw	r0, #42768	; 0xa710
   15208:	movt	r0, #1
   1520c:	bl	11420 <getenv@plt>
   15210:	mov	r7, r0
   15214:	movw	r0, #59504	; 0xe870
   15218:	movt	r0, #2
   1521c:	add	r1, r0, #16
   15220:	mov	r2, #32
   15224:	vld1.64	{d16-d17}, [r0], r2
   15228:	add	r3, sp, #16
   1522c:	vld1.64	{d18-d19}, [r1]
   15230:	add	r1, r3, #16
   15234:	vldr	d20, [r0]
   15238:	vst1.64	{d18-d19}, [r1]
   1523c:	mov	r0, r3
   15240:	vst1.64	{d16-d17}, [r0], r2
   15244:	vstr	d20, [r0]
   15248:	cmp	r7, #0
   1524c:	beq	154cc <argp_failure@@Base+0x418>
   15250:	ldrb	r4, [r7]
   15254:	cmp	r4, #0
   15258:	beq	154c0 <argp_failure@@Base+0x40c>
   1525c:	bl	11474 <__ctype_b_loc@plt>
   15260:	movw	sl, #43415	; 0xa997
   15264:	movt	sl, #1
   15268:	str	r0, [sp, #12]
   1526c:	b	15294 <argp_failure@@Base+0x1e0>
   15270:	str	r8, [sp]
   15274:	str	r7, [sp, #4]
   15278:	ldr	r0, [sp, #8]
   1527c:	mov	r1, #0
   15280:	mov	r2, #0
   15284:	movw	r3, #42782	; 0xa71e
   15288:	movt	r3, #1
   1528c:	bl	150b4 <argp_failure@@Base>
   15290:	b	15454 <argp_failure@@Base+0x3a0>
   15294:	ldr	r6, [r0]
   15298:	uxtb	r1, r4
   1529c:	add	r1, r6, r1, lsl #1
   152a0:	ldrh	r1, [r1]
   152a4:	tst	r1, #8192	; 0x2000
   152a8:	beq	152c4 <argp_failure@@Base+0x210>
   152ac:	ldr	r6, [r0]
   152b0:	ldrb	r4, [r7, #1]!
   152b4:	add	r1, r6, r4, lsl #1
   152b8:	ldrh	r1, [r1]
   152bc:	tst	r1, #8192	; 0x2000
   152c0:	bne	152b0 <argp_failure@@Base+0x1fc>
   152c4:	tst	r1, #1024	; 0x400
   152c8:	bne	152d8 <argp_failure@@Base+0x224>
   152cc:	tst	r4, #255	; 0xff
   152d0:	beq	15494 <argp_failure@@Base+0x3e0>
   152d4:	b	154a4 <argp_failure@@Base+0x3f0>
   152d8:	sub	r5, r7, #1
   152dc:	mov	r0, r7
   152e0:	b	152ec <argp_failure@@Base+0x238>
   152e4:	add	r5, r5, #1
   152e8:	add	r0, r0, #1
   152ec:	ldrb	r1, [r0]
   152f0:	ldrb	r2, [r6, r1, lsl #1]
   152f4:	tst	r2, #8
   152f8:	bne	152e4 <argp_failure@@Base+0x230>
   152fc:	cmp	r1, #95	; 0x5f
   15300:	cmpne	r1, #45	; 0x2d
   15304:	beq	152e4 <argp_failure@@Base+0x230>
   15308:	ldrb	r1, [r5, #1]!
   1530c:	add	r2, r6, r1, lsl #1
   15310:	ldrb	r2, [r2, #1]
   15314:	tst	r2, #32
   15318:	bne	15308 <argp_failure@@Base+0x254>
   1531c:	sub	r8, r0, r7
   15320:	cmp	r1, #0
   15324:	cmpne	r1, #44	; 0x2c
   15328:	bne	15378 <argp_failure@@Base+0x2c4>
   1532c:	uxtb	r0, r4
   15330:	mov	r4, #1
   15334:	cmp	r0, #110	; 0x6e
   15338:	bne	15370 <argp_failure@@Base+0x2bc>
   1533c:	ldrb	r0, [r7, #1]
   15340:	mov	r4, #1
   15344:	cmp	r0, #111	; 0x6f
   15348:	bne	15370 <argp_failure@@Base+0x2bc>
   1534c:	ldrb	r0, [r7, #2]
   15350:	mov	r4, #1
   15354:	cmp	r0, #45	; 0x2d
   15358:	bne	15370 <argp_failure@@Base+0x2bc>
   1535c:	sub	r8, r8, #3
   15360:	add	r7, r7, #3
   15364:	mov	r6, #0
   15368:	mov	r4, #1
   1536c:	b	153f4 <argp_failure@@Base+0x340>
   15370:	mov	r6, #1
   15374:	b	153f4 <argp_failure@@Base+0x340>
   15378:	cmp	r1, #61	; 0x3d
   1537c:	bne	15394 <argp_failure@@Base+0x2e0>
   15380:	ldrb	r0, [r5, #1]!
   15384:	add	r0, r6, r0, lsl #1
   15388:	ldrb	r0, [r0, #1]
   1538c:	tst	r0, #32
   15390:	bne	15380 <argp_failure@@Base+0x2cc>
   15394:	ldrb	r0, [r5]
   15398:	add	r0, r6, r0, lsl #1
   1539c:	ldrb	r0, [r0, #1]
   153a0:	mov	r4, #0
   153a4:	tst	r0, #8
   153a8:	bne	153b4 <argp_failure@@Base+0x300>
   153ac:	mov	r6, #0
   153b0:	b	153f4 <argp_failure@@Base+0x340>
   153b4:	mov	r0, r5
   153b8:	bl	1154c <atoi@plt>
   153bc:	sub	r2, r5, #1
   153c0:	mov	r5, r2
   153c4:	ldrb	r1, [r2, #1]!
   153c8:	add	r1, r6, r1, lsl #1
   153cc:	ldrb	r1, [r1, #1]
   153d0:	tst	r1, #8
   153d4:	bne	153c0 <argp_failure@@Base+0x30c>
   153d8:	ldrb	r1, [r5, #1]!
   153dc:	add	r1, r6, r1, lsl #1
   153e0:	ldrb	r1, [r1, #1]
   153e4:	tst	r1, #32
   153e8:	bne	153d8 <argp_failure@@Base+0x324>
   153ec:	mov	r4, #0
   153f0:	mov	r6, r0
   153f4:	mov	r9, sl
   153f8:	mov	r0, r9
   153fc:	bl	1148c <strlen@plt>
   15400:	cmp	r0, r8
   15404:	bne	15420 <argp_failure@@Base+0x36c>
   15408:	mov	r0, r7
   1540c:	mov	r1, r9
   15410:	mov	r2, r8
   15414:	bl	115ac <strncmp@plt>
   15418:	cmp	r0, #0
   1541c:	beq	15434 <argp_failure@@Base+0x380>
   15420:	add	r9, r9, #16
   15424:	add	r0, sl, #144	; 0x90
   15428:	cmp	r9, r0
   1542c:	bcc	153f8 <argp_failure@@Base+0x344>
   15430:	b	15454 <argp_failure@@Base+0x3a0>
   15434:	cmp	r4, #0
   15438:	beq	15448 <argp_failure@@Base+0x394>
   1543c:	ldrb	r0, [r9, #14]
   15440:	cmp	r0, #0
   15444:	beq	15270 <argp_failure@@Base+0x1bc>
   15448:	ldrb	r0, [r9, #15]
   1544c:	add	r1, sp, #16
   15450:	str	r6, [r1, r0]
   15454:	add	r0, sl, #144	; 0x90
   15458:	cmp	r9, r0
   1545c:	bne	15480 <argp_failure@@Base+0x3cc>
   15460:	str	r8, [sp]
   15464:	str	r7, [sp, #4]
   15468:	ldr	r0, [sp, #8]
   1546c:	mov	r1, #0
   15470:	mov	r2, #0
   15474:	movw	r3, #42829	; 0xa74d
   15478:	movt	r3, #1
   1547c:	bl	150b4 <argp_failure@@Base>
   15480:	mov	r7, r5
   15484:	ldrb	r0, [r7], #1
   15488:	cmp	r0, #44	; 0x2c
   1548c:	movne	r7, r5
   15490:	ldr	r0, [sp, #12]
   15494:	ldrb	r4, [r7]
   15498:	cmp	r4, #0
   1549c:	bne	15294 <argp_failure@@Base+0x1e0>
   154a0:	b	154c0 <argp_failure@@Base+0x40c>
   154a4:	str	r7, [sp]
   154a8:	movw	r3, #42867	; 0xa773
   154ac:	movt	r3, #1
   154b0:	ldr	r0, [sp, #8]
   154b4:	mov	r1, #0
   154b8:	mov	r2, #0
   154bc:	bl	150b4 <argp_failure@@Base>
   154c0:	add	r1, sp, #16
   154c4:	ldr	r0, [sp, #8]
   154c8:	bl	15d6c <argp_failure@@Base+0xcb8>
   154cc:	sub	sp, fp, #28
   154d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154d4:	push	{r4, r5, r6, r7, fp, lr}
   154d8:	add	fp, sp, #16
   154dc:	sub	sp, sp, #8
   154e0:	mov	r4, r1
   154e4:	mov	r5, r0
   154e8:	ldr	r7, [r0, #16]
   154ec:	bl	15e24 <argp_failure@@Base+0xd70>
   154f0:	mov	r6, r0
   154f4:	cmp	r7, #0
   154f8:	beq	15570 <argp_failure@@Base+0x4bc>
   154fc:	ldr	r0, [r7]
   15500:	cmp	r0, #0
   15504:	bne	15530 <argp_failure@@Base+0x47c>
   15508:	b	15570 <argp_failure@@Base+0x4bc>
   1550c:	ldr	r0, [r7]
   15510:	mov	r1, r2
   15514:	bl	154d4 <argp_failure@@Base+0x420>
   15518:	mov	r1, r0
   1551c:	mov	r0, r6
   15520:	bl	160d0 <argp_failure@@Base+0x101c>
   15524:	ldr	r0, [r7, #16]!
   15528:	cmp	r0, #0
   1552c:	beq	15570 <argp_failure@@Base+0x4bc>
   15530:	ldr	r1, [r7, #12]
   15534:	cmp	r1, #0
   15538:	bne	1554c <argp_failure@@Base+0x498>
   1553c:	ldr	r0, [r7, #8]
   15540:	cmp	r0, #0
   15544:	mov	r2, r4
   15548:	beq	1550c <argp_failure@@Base+0x458>
   1554c:	ldr	r2, [r7, #8]
   15550:	ldr	r0, [r5, #16]
   15554:	stm	sp, {r4, r5}
   15558:	sub	r0, r7, r0
   1555c:	asr	r3, r0, #4
   15560:	mov	r0, r6
   15564:	bl	1606c <argp_failure@@Base+0xfb8>
   15568:	mov	r2, r0
   1556c:	b	1550c <argp_failure@@Base+0x458>
   15570:	mov	r0, r6
   15574:	sub	sp, fp, #16
   15578:	pop	{r4, r5, r6, r7, fp, pc}
   1557c:	push	{fp, lr}
   15580:	mov	fp, sp
   15584:	bl	16368 <argp_failure@@Base+0x12b4>
   15588:	cmp	r0, #0
   1558c:	mvnne	r1, #0
   15590:	strne	r1, [r0, #12]
   15594:	pop	{fp, pc}
   15598:	ldr	r1, [r0, #4]
   1559c:	cmp	r1, #0
   155a0:	bxeq	lr
   155a4:	ldr	r2, [r0]
   155a8:	add	r2, r2, #24
   155ac:	mov	r3, #0
   155b0:	str	r3, [r2], #28
   155b4:	add	r3, r3, #1
   155b8:	cmp	r1, r3
   155bc:	bne	155b0 <argp_failure@@Base+0x4fc>
   155c0:	ldr	r0, [r0]
   155c4:	movw	r3, #25576	; 0x63e8
   155c8:	movt	r3, #1
   155cc:	mov	r2, #28
   155d0:	b	11558 <qsort@plt>
   155d4:	push	{r4, r5, fp, lr}
   155d8:	add	fp, sp, #8
   155dc:	mov	r1, r0
   155e0:	ldr	r0, [r0, #8]
   155e4:	ldr	r5, [r1, #16]
   155e8:	cmp	r0, #0
   155ec:	beq	15608 <argp_failure@@Base+0x554>
   155f0:	mov	r1, #10
   155f4:	bl	11498 <strchr@plt>
   155f8:	mov	r4, r0
   155fc:	cmp	r0, #0
   15600:	movwne	r4, #1
   15604:	b	1560c <argp_failure@@Base+0x558>
   15608:	mov	r4, #0
   1560c:	cmp	r5, #0
   15610:	ldrne	r0, [r5]
   15614:	cmpne	r0, #0
   15618:	beq	15634 <argp_failure@@Base+0x580>
   1561c:	add	r5, r5, #16
   15620:	bl	155d4 <argp_failure@@Base+0x520>
   15624:	add	r4, r0, r4
   15628:	ldr	r0, [r5], #16
   1562c:	cmp	r0, #0
   15630:	bne	15620 <argp_failure@@Base+0x56c>
   15634:	mov	r0, r4
   15638:	pop	{r4, r5, fp, pc}
   1563c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15640:	add	fp, sp, #28
   15644:	sub	sp, sp, #12
   15648:	ldr	r4, [r0, #4]
   1564c:	cmp	r4, #0
   15650:	beq	157a4 <argp_failure@@Base+0x6f0>
   15654:	mov	sl, r1
   15658:	mov	r8, r0
   1565c:	ldr	r0, [r0, #8]
   15660:	bl	1148c <strlen@plt>
   15664:	add	r0, r0, #8
   15668:	bic	r0, r0, #7
   1566c:	sub	r9, sp, r0
   15670:	mov	sp, r9
   15674:	str	r9, [fp, #-36]	; 0xffffffdc
   15678:	ldr	r7, [r8]
   1567c:	movw	r5, #26900	; 0x6914
   15680:	movt	r5, #1
   15684:	sub	r6, fp, #36	; 0x24
   15688:	ldr	r0, [r7, #20]
   1568c:	ldr	r2, [r0, #24]
   15690:	mov	r0, r7
   15694:	mov	r1, r5
   15698:	mov	r3, r6
   1569c:	bl	16840 <argp_failure@@Base+0x178c>
   156a0:	subs	r4, r4, #1
   156a4:	add	r7, r7, #28
   156a8:	bne	15688 <argp_failure@@Base+0x5d4>
   156ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   156b0:	cmp	r0, r9
   156b4:	bls	156dc <argp_failure@@Base+0x628>
   156b8:	add	r1, r0, #1
   156bc:	str	r1, [fp, #-36]	; 0xffffffdc
   156c0:	mov	r1, #0
   156c4:	strb	r1, [r0]
   156c8:	movw	r1, #43213	; 0xa8cd
   156cc:	movt	r1, #1
   156d0:	mov	r0, sl
   156d4:	mov	r2, r9
   156d8:	bl	18450 <argp_failure@@Base+0x339c>
   156dc:	ldr	r4, [r8, #4]
   156e0:	cmp	r4, #0
   156e4:	beq	157a4 <argp_failure@@Base+0x6f0>
   156e8:	ldr	r5, [r8]
   156ec:	movw	r6, #26972	; 0x695c
   156f0:	movt	r6, #1
   156f4:	ldr	r0, [r5, #20]
   156f8:	ldr	r2, [r0, #24]
   156fc:	mov	r0, r5
   15700:	mov	r1, r6
   15704:	mov	r3, sl
   15708:	bl	16840 <argp_failure@@Base+0x178c>
   1570c:	subs	r4, r4, #1
   15710:	add	r5, r5, #28
   15714:	bne	156f4 <argp_failure@@Base+0x640>
   15718:	ldr	r9, [r8, #4]
   1571c:	cmp	r9, #0
   15720:	beq	157a4 <argp_failure@@Base+0x6f0>
   15724:	ldr	r8, [r8]
   15728:	ldr	r0, [r8, #4]
   1572c:	cmp	r0, #0
   15730:	beq	15798 <argp_failure@@Base+0x6e4>
   15734:	ldr	r5, [r8]
   15738:	ldr	r1, [r8, #20]
   1573c:	ldr	r6, [r1, #24]
   15740:	rsb	r4, r0, #1
   15744:	mov	r7, r5
   15748:	ldr	r1, [r7]
   1574c:	mov	r0, #0
   15750:	cmp	r1, #0
   15754:	beq	15780 <argp_failure@@Base+0x6cc>
   15758:	ldr	r1, [r7, #12]
   1575c:	tst	r1, #4
   15760:	moveq	r5, r7
   15764:	tst	r1, #2
   15768:	bne	15780 <argp_failure@@Base+0x6cc>
   1576c:	mov	r0, r7
   15770:	mov	r1, r5
   15774:	mov	r2, r6
   15778:	mov	r3, sl
   1577c:	bl	169e0 <argp_failure@@Base+0x192c>
   15780:	cmp	r4, #0
   15784:	beq	15798 <argp_failure@@Base+0x6e4>
   15788:	add	r4, r4, #1
   1578c:	add	r7, r7, #24
   15790:	cmp	r0, #0
   15794:	beq	15748 <argp_failure@@Base+0x694>
   15798:	subs	r9, r9, #1
   1579c:	add	r8, r8, #28
   157a0:	bne	15728 <argp_failure@@Base+0x674>
   157a4:	sub	sp, fp, #28
   157a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   157ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157b0:	add	fp, sp, #28
   157b4:	sub	sp, sp, #28
   157b8:	mov	r4, r3
   157bc:	mov	r9, r2
   157c0:	mov	sl, r1
   157c4:	mov	r2, r0
   157c8:	ldr	r8, [r9]
   157cc:	ldr	r7, [r0, #8]
   157d0:	ldr	r6, [r0, #16]
   157d4:	movw	r1, #6
   157d8:	movt	r1, #512	; 0x200
   157dc:	mov	r0, r7
   157e0:	mov	r3, sl
   157e4:	bl	16a94 <argp_failure@@Base+0x19e0>
   157e8:	ldr	r5, [fp, #8]
   157ec:	cmp	r0, #0
   157f0:	beq	15860 <argp_failure@@Base+0x7ac>
   157f4:	str	r8, [sp, #20]
   157f8:	str	r7, [sp, #16]
   157fc:	mov	r8, r0
   15800:	mov	r1, #10
   15804:	bl	11354 <strchrnul@plt>
   15808:	mov	r7, r0
   1580c:	ldrb	r0, [r0]
   15810:	cmp	r0, #0
   15814:	str	sl, [sp, #12]
   15818:	str	r6, [sp, #8]
   1581c:	beq	15870 <argp_failure@@Base+0x7bc>
   15820:	str	r8, [sp, #4]
   15824:	ldr	r1, [sp, #20]
   15828:	ldrb	r0, [r1]
   1582c:	cmp	r0, #0
   15830:	beq	15880 <argp_failure@@Base+0x7cc>
   15834:	ldrb	r6, [r1]
   15838:	mov	r8, #0
   1583c:	add	sl, r7, #1
   15840:	mov	r0, sl
   15844:	mov	r1, #10
   15848:	bl	11354 <strchrnul@plt>
   1584c:	mov	r7, r0
   15850:	add	r8, r8, #1
   15854:	cmp	r8, r6
   15858:	bcc	1583c <argp_failure@@Base+0x788>
   1585c:	b	15884 <argp_failure@@Base+0x7d0>
   15860:	mov	r7, #0
   15864:	mov	r0, #0
   15868:	str	r0, [sp, #24]
   1586c:	b	158e4 <argp_failure@@Base+0x830>
   15870:	mov	r0, #0
   15874:	str	r0, [sp, #24]
   15878:	mov	sl, r8
   1587c:	b	1589c <argp_failure@@Base+0x7e8>
   15880:	ldr	sl, [sp, #4]
   15884:	ldr	r0, [r9]
   15888:	add	r0, r0, #1
   1588c:	str	r0, [r9]
   15890:	mov	r0, #1
   15894:	str	r0, [sp, #24]
   15898:	ldr	r8, [sp, #4]
   1589c:	add	r0, r7, #1
   158a0:	sub	r1, r0, sl
   158a4:	mov	r6, r5
   158a8:	mov	r0, r5
   158ac:	bl	16a60 <argp_failure@@Base+0x19ac>
   158b0:	sub	r2, r7, sl
   158b4:	mov	r0, r5
   158b8:	mov	r1, sl
   158bc:	bl	184dc <argp_failure@@Base+0x3428>
   158c0:	ldr	r0, [sp, #16]
   158c4:	cmp	r8, r0
   158c8:	cmpne	r8, #0
   158cc:	beq	158d8 <argp_failure@@Base+0x824>
   158d0:	mov	r0, r8
   158d4:	bl	13e48 <argp_usage@@Base+0x18c>
   158d8:	ldr	sl, [sp, #12]
   158dc:	ldr	r6, [sp, #8]
   158e0:	ldr	r8, [sp, #20]
   158e4:	cmp	r6, #0
   158e8:	ldrne	r0, [r6]
   158ec:	cmpne	r0, #0
   158f0:	beq	15924 <argp_failure@@Base+0x870>
   158f4:	add	r6, r6, #16
   158f8:	str	r5, [sp]
   158fc:	mov	r1, sl
   15900:	mov	r2, r9
   15904:	mov	r3, r4
   15908:	bl	157ac <argp_failure@@Base+0x6f8>
   1590c:	clz	r1, r0
   15910:	lsr	r4, r1, #5
   15914:	ldr	r0, [r6], #16
   15918:	cmp	r0, #0
   1591c:	bne	158f8 <argp_failure@@Base+0x844>
   15920:	lsr	r4, r1, #5
   15924:	ldr	r0, [sp, #24]
   15928:	cmp	r0, #0
   1592c:	cmpne	r4, #0
   15930:	bne	15944 <argp_failure@@Base+0x890>
   15934:	clz	r0, r4
   15938:	lsr	r0, r0, #5
   1593c:	sub	sp, fp, #28
   15940:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15944:	ldrb	r0, [r8]
   15948:	ldrb	r1, [r7]
   1594c:	cmp	r1, #0
   15950:	beq	15964 <argp_failure@@Base+0x8b0>
   15954:	add	r0, r0, #1
   15958:	strb	r0, [r8]
   1595c:	mov	r4, #0
   15960:	b	15934 <argp_failure@@Base+0x880>
   15964:	cmp	r0, #0
   15968:	movne	r0, #0
   1596c:	strbne	r0, [r8]
   15970:	b	15934 <argp_failure@@Base+0x880>
   15974:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15978:	add	fp, sp, #28
   1597c:	sub	sp, sp, #28
   15980:	mov	r8, r3
   15984:	mov	r7, r2
   15988:	mov	sl, r1
   1598c:	mov	r5, r0
   15990:	ldr	r4, [r0, #12]
   15994:	ldr	r0, [r0, #16]
   15998:	cmp	r4, #0
   1599c:	str	r0, [sp, #16]
   159a0:	mov	r1, #0
   159a4:	beq	159e4 <argp_failure@@Base+0x930>
   159a8:	str	r1, [sp, #20]
   159ac:	mov	r0, r4
   159b0:	mov	r1, #11
   159b4:	bl	11498 <strchr@plt>
   159b8:	mov	r6, r0
   159bc:	cmp	r0, #0
   159c0:	mov	r9, r0
   159c4:	subne	r9, r9, r4
   159c8:	cmp	r7, #0
   159cc:	movne	r9, #0
   159d0:	cmp	r0, #0
   159d4:	addne	r6, r6, #1
   159d8:	cmp	r7, #0
   159dc:	moveq	r6, r4
   159e0:	b	159f0 <argp_failure@@Base+0x93c>
   159e4:	str	r1, [sp, #20]
   159e8:	mov	r9, #0
   159ec:	mov	r6, #0
   159f0:	ldr	r0, [r5, #20]
   159f4:	cmp	r0, #0
   159f8:	str	sl, [sp, #12]
   159fc:	str	r7, [sp, #8]
   15a00:	str	r5, [sp, #24]
   15a04:	mov	r4, r8
   15a08:	beq	15a9c <argp_failure@@Base+0x9e8>
   15a0c:	cmp	r9, #0
   15a10:	beq	15a24 <argp_failure@@Base+0x970>
   15a14:	mov	r0, r6
   15a18:	mov	r1, r9
   15a1c:	bl	11390 <strndup@plt>
   15a20:	mov	r6, r0
   15a24:	mov	r0, r5
   15a28:	mov	r1, sl
   15a2c:	bl	13414 <argp_parse@@Base+0x7f4>
   15a30:	mov	r2, r0
   15a34:	cmp	r7, #0
   15a38:	movw	r0, #1
   15a3c:	movt	r0, #512	; 0x200
   15a40:	addne	r0, r0, #1
   15a44:	ldr	r3, [r5, #20]
   15a48:	mov	r1, r6
   15a4c:	str	r2, [sp, #20]
   15a50:	blx	r3
   15a54:	mov	sl, r0
   15a58:	cmp	sl, #0
   15a5c:	beq	15aa8 <argp_failure@@Base+0x9f4>
   15a60:	cmp	r4, #0
   15a64:	beq	15a74 <argp_failure@@Base+0x9c0>
   15a68:	ldr	r0, [fp, #12]
   15a6c:	mov	r1, #10
   15a70:	bl	18588 <argp_failure@@Base+0x34d4>
   15a74:	cmp	r9, #0
   15a78:	beq	15ab0 <argp_failure@@Base+0x9fc>
   15a7c:	cmp	sl, r6
   15a80:	bne	15ab0 <argp_failure@@Base+0x9fc>
   15a84:	ldr	r5, [fp, #12]
   15a88:	mov	r0, r5
   15a8c:	mov	r1, r6
   15a90:	mov	r2, r9
   15a94:	bl	184dc <argp_failure@@Base+0x3428>
   15a98:	b	15ac0 <argp_failure@@Base+0xa0c>
   15a9c:	mov	sl, r6
   15aa0:	cmp	sl, #0
   15aa4:	bne	15a60 <argp_failure@@Base+0x9ac>
   15aa8:	mov	r8, #0
   15aac:	b	15af8 <argp_failure@@Base+0xa44>
   15ab0:	ldr	r5, [fp, #12]
   15ab4:	mov	r0, r5
   15ab8:	mov	r1, sl
   15abc:	bl	18544 <argp_failure@@Base+0x3490>
   15ac0:	mov	r0, r5
   15ac4:	bl	1868c <argp_failure@@Base+0x35d8>
   15ac8:	ldr	r1, [r5, #4]
   15acc:	cmp	r0, r1
   15ad0:	bls	15ae0 <argp_failure@@Base+0xa2c>
   15ad4:	ldr	r0, [fp, #12]
   15ad8:	mov	r1, #10
   15adc:	bl	18588 <argp_failure@@Base+0x34d4>
   15ae0:	mov	r8, #1
   15ae4:	cmp	sl, r6
   15ae8:	cmpne	sl, #0
   15aec:	beq	15af8 <argp_failure@@Base+0xa44>
   15af0:	mov	r0, sl
   15af4:	bl	13e48 <argp_usage@@Base+0x18c>
   15af8:	mov	r7, r4
   15afc:	ldr	sl, [sp, #12]
   15b00:	ldr	r5, [sp, #8]
   15b04:	cmp	r9, #0
   15b08:	cmpne	r6, #0
   15b0c:	bne	15bc4 <argp_failure@@Base+0xb10>
   15b10:	cmp	r5, #0
   15b14:	ldr	r9, [fp, #12]
   15b18:	beq	15ba4 <argp_failure@@Base+0xaf0>
   15b1c:	ldr	r0, [sp, #24]
   15b20:	ldr	r3, [r0, #20]
   15b24:	cmp	r3, #0
   15b28:	beq	15ba4 <argp_failure@@Base+0xaf0>
   15b2c:	movw	r0, #1
   15b30:	movt	r0, #512	; 0x200
   15b34:	add	r0, r0, #3
   15b38:	mov	r1, #0
   15b3c:	ldr	r2, [sp, #20]
   15b40:	blx	r3
   15b44:	cmp	r0, #0
   15b48:	ldr	r6, [sp, #16]
   15b4c:	beq	15ba8 <argp_failure@@Base+0xaf4>
   15b50:	mov	r4, r0
   15b54:	orrs	r0, r8, r7
   15b58:	beq	15b68 <argp_failure@@Base+0xab4>
   15b5c:	mov	r0, r9
   15b60:	mov	r1, #10
   15b64:	bl	18588 <argp_failure@@Base+0x34d4>
   15b68:	mov	r0, r9
   15b6c:	mov	r1, r4
   15b70:	bl	18544 <argp_failure@@Base+0x3490>
   15b74:	mov	r0, r4
   15b78:	bl	13e48 <argp_usage@@Base+0x18c>
   15b7c:	mov	r0, r9
   15b80:	bl	1868c <argp_failure@@Base+0x35d8>
   15b84:	ldr	r1, [r9, #4]
   15b88:	mov	r8, #1
   15b8c:	cmp	r0, r1
   15b90:	bls	15ba8 <argp_failure@@Base+0xaf4>
   15b94:	mov	r0, r9
   15b98:	mov	r1, #10
   15b9c:	bl	18588 <argp_failure@@Base+0x34d4>
   15ba0:	b	15ba8 <argp_failure@@Base+0xaf4>
   15ba4:	ldr	r6, [sp, #16]
   15ba8:	cmp	r6, #0
   15bac:	ldrne	r0, [r6]
   15bb0:	cmpne	r0, #0
   15bb4:	bne	15be0 <argp_failure@@Base+0xb2c>
   15bb8:	mov	r0, r8
   15bbc:	sub	sp, fp, #28
   15bc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15bc4:	ldr	r0, [sp, #24]
   15bc8:	ldr	r0, [r0, #20]
   15bcc:	cmp	r0, #0
   15bd0:	beq	15b10 <argp_failure@@Base+0xa5c>
   15bd4:	mov	r0, r6
   15bd8:	bl	13e48 <argp_usage@@Base+0x18c>
   15bdc:	b	15b10 <argp_failure@@Base+0xa5c>
   15be0:	ldr	r4, [fp, #8]
   15be4:	add	r6, r6, #16
   15be8:	cmp	r4, #0
   15bec:	cmpne	r8, #0
   15bf0:	bne	15bb8 <argp_failure@@Base+0xb04>
   15bf4:	stm	sp, {r4, r9}
   15bf8:	orrs	r3, r8, r7
   15bfc:	movwne	r3, #1
   15c00:	mov	r1, sl
   15c04:	mov	r2, r5
   15c08:	bl	15974 <argp_failure@@Base+0x8c0>
   15c0c:	orr	r8, r0, r8
   15c10:	ldr	r0, [r6], #16
   15c14:	cmp	r0, #0
   15c18:	bne	15be8 <argp_failure@@Base+0xb34>
   15c1c:	b	15bb8 <argp_failure@@Base+0xb04>
   15c20:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15c24:	add	fp, sp, #24
   15c28:	sub	sp, sp, #16
   15c2c:	mov	r8, r2
   15c30:	mov	r5, r1
   15c34:	mov	r1, #0
   15c38:	str	r1, [sp, #4]
   15c3c:	str	r1, [sp]
   15c40:	str	r1, [sp, #8]
   15c44:	ldr	r4, [r0, #4]
   15c48:	cmp	r4, #0
   15c4c:	beq	15c78 <argp_failure@@Base+0xbc4>
   15c50:	ldr	r6, [r0]
   15c54:	mov	r7, sp
   15c58:	mov	r0, r6
   15c5c:	mov	r1, r5
   15c60:	mov	r2, r8
   15c64:	mov	r3, r7
   15c68:	bl	16ae8 <argp_failure@@Base+0x1a34>
   15c6c:	subs	r4, r4, #1
   15c70:	add	r6, r6, #28
   15c74:	bne	15c58 <argp_failure@@Base+0xba4>
   15c78:	ldr	r0, [sp, #8]
   15c7c:	cmp	r0, #0
   15c80:	movwne	r0, #59504	; 0xe870
   15c84:	movtne	r0, #2
   15c88:	ldrne	r0, [r0, #4]
   15c8c:	cmpne	r0, #0
   15c90:	bne	15c9c <argp_failure@@Base+0xbe8>
   15c94:	sub	sp, fp, #24
   15c98:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15c9c:	cmp	r5, #0
   15ca0:	ldrne	r2, [r5]
   15ca4:	moveq	r2, #0
   15ca8:	movw	r6, #43272	; 0xa908
   15cac:	movt	r6, #1
   15cb0:	movw	r1, #5
   15cb4:	movt	r1, #512	; 0x200
   15cb8:	mov	r0, r6
   15cbc:	mov	r3, r5
   15cc0:	bl	16a94 <argp_failure@@Base+0x19e0>
   15cc4:	cmp	r0, #0
   15cc8:	beq	15c94 <argp_failure@@Base+0xbe0>
   15ccc:	mov	r5, r0
   15cd0:	ldrb	r0, [r0]
   15cd4:	cmp	r0, #0
   15cd8:	beq	15d00 <argp_failure@@Base+0xc4c>
   15cdc:	mov	r0, r8
   15ce0:	mov	r1, #10
   15ce4:	bl	18588 <argp_failure@@Base+0x34d4>
   15ce8:	mov	r0, r8
   15cec:	mov	r1, r5
   15cf0:	bl	18544 <argp_failure@@Base+0x3490>
   15cf4:	mov	r0, r8
   15cf8:	mov	r1, #10
   15cfc:	bl	18588 <argp_failure@@Base+0x34d4>
   15d00:	cmp	r5, r6
   15d04:	beq	15c94 <argp_failure@@Base+0xbe0>
   15d08:	mov	r0, r5
   15d0c:	bl	13e48 <argp_usage@@Base+0x18c>
   15d10:	sub	sp, fp, #24
   15d14:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15d18:	push	{r4, r5, fp, lr}
   15d1c:	add	fp, sp, #8
   15d20:	mov	r4, r0
   15d24:	ldr	r0, [r0, #12]
   15d28:	cmp	r0, #0
   15d2c:	beq	15d44 <argp_failure@@Base+0xc90>
   15d30:	ldr	r5, [r0, #24]
   15d34:	bl	13e48 <argp_usage@@Base+0x18c>
   15d38:	cmp	r5, #0
   15d3c:	mov	r0, r5
   15d40:	bne	15d30 <argp_failure@@Base+0xc7c>
   15d44:	ldr	r0, [r4, #4]
   15d48:	cmp	r0, #0
   15d4c:	beq	15d60 <argp_failure@@Base+0xcac>
   15d50:	ldr	r0, [r4]
   15d54:	bl	13e48 <argp_usage@@Base+0x18c>
   15d58:	ldr	r0, [r4, #8]
   15d5c:	bl	13e48 <argp_usage@@Base+0x18c>
   15d60:	mov	r0, r4
   15d64:	pop	{r4, r5, fp, lr}
   15d68:	b	13e48 <argp_usage@@Base+0x18c>
   15d6c:	push	{fp, lr}
   15d70:	mov	fp, sp
   15d74:	sub	sp, sp, #8
   15d78:	movw	r2, #43415	; 0xa997
   15d7c:	movt	r2, #1
   15d80:	add	ip, r2, #144	; 0x90
   15d84:	ldrb	r3, [r2, #14]
   15d88:	cmp	r3, #0
   15d8c:	bne	15dac <argp_failure@@Base+0xcf8>
   15d90:	ldrb	r3, [r2, #15]
   15d94:	cmp	r3, #32
   15d98:	beq	15dac <argp_failure@@Base+0xcf8>
   15d9c:	ldr	lr, [r1, r3]
   15da0:	ldr	r3, [r1, #32]
   15da4:	cmp	lr, r3
   15da8:	bge	15dfc <argp_failure@@Base+0xd48>
   15dac:	add	r2, r2, #16
   15db0:	cmp	r2, ip
   15db4:	bcc	15d84 <argp_failure@@Base+0xcd0>
   15db8:	add	r0, r1, #16
   15dbc:	vld1.32	{d16-d17}, [r0]
   15dc0:	movw	r0, #59504	; 0xe870
   15dc4:	movt	r0, #2
   15dc8:	mov	r2, #32
   15dcc:	vld1.32	{d18-d19}, [r1], r2
   15dd0:	add	r2, r0, #16
   15dd4:	vst1.64	{d16-d17}, [r2]
   15dd8:	ldr	r1, [r1]
   15ddc:	mov	r2, #36	; 0x24
   15de0:	mov	r3, r0
   15de4:	vst1.64	{d18-d19}, [r3], r2
   15de8:	mov	r2, #1
   15dec:	str	r2, [r3]
   15df0:	str	r1, [r0, #32]
   15df4:	mov	sp, fp
   15df8:	pop	{fp, pc}
   15dfc:	movw	r1, #42948	; 0xa7c4
   15e00:	movt	r1, #1
   15e04:	stm	sp, {r1, r2}
   15e08:	movw	r3, #42896	; 0xa790
   15e0c:	movt	r3, #1
   15e10:	mov	r1, #0
   15e14:	mov	r2, #0
   15e18:	bl	150b4 <argp_failure@@Base>
   15e1c:	mov	sp, fp
   15e20:	pop	{fp, pc}
   15e24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e28:	add	fp, sp, #28
   15e2c:	push	{r1}		; (str r1, [sp, #-4]!)
   15e30:	mov	r9, r0
   15e34:	ldr	r4, [r0]
   15e38:	mov	r0, #16
   15e3c:	bl	14b34 <_obstack_memory_used@@Base+0x908>
   15e40:	cmp	r0, #0
   15e44:	beq	1600c <argp_failure@@Base+0xf58>
   15e48:	mov	sl, r0
   15e4c:	mov	r0, #0
   15e50:	str	r0, [sl, #12]
   15e54:	str	r0, [sl, #4]
   15e58:	cmp	r4, #0
   15e5c:	beq	16000 <argp_failure@@Base+0xf4c>
   15e60:	ldrb	r0, [r4, #12]
   15e64:	tst	r0, #4
   15e68:	bne	1602c <argp_failure@@Base+0xf78>
   15e6c:	mov	r0, r4
   15e70:	bl	13d14 <argp_usage@@Base+0x58>
   15e74:	mov	r5, #1
   15e78:	cmp	r0, #0
   15e7c:	bne	15ec4 <argp_failure@@Base+0xe10>
   15e80:	mov	r6, #0
   15e84:	mov	r5, r4
   15e88:	ldrb	r0, [r5, #12]
   15e8c:	tst	r0, #4
   15e90:	ldreq	r0, [sl, #4]
   15e94:	addeq	r0, r0, #1
   15e98:	streq	r0, [sl, #4]
   15e9c:	mov	r0, r5
   15ea0:	bl	13cd0 <argp_usage@@Base+0x14>
   15ea4:	cmp	r0, #0
   15ea8:	addne	r6, r6, #1
   15eac:	add	r5, r5, #24
   15eb0:	mov	r0, r5
   15eb4:	bl	13d14 <argp_usage@@Base+0x58>
   15eb8:	cmp	r0, #0
   15ebc:	beq	15e88 <argp_failure@@Base+0xdd4>
   15ec0:	add	r5, r6, #1
   15ec4:	ldr	r7, [sl, #4]
   15ec8:	rsb	r0, r7, r7, lsl #3
   15ecc:	lsl	r0, r0, #2
   15ed0:	bl	14b34 <_obstack_memory_used@@Base+0x908>
   15ed4:	mov	r6, r0
   15ed8:	str	r0, [sl]
   15edc:	mov	r0, r5
   15ee0:	bl	14b34 <_obstack_memory_used@@Base+0x908>
   15ee4:	str	r0, [sl, #8]
   15ee8:	cmp	r6, #0
   15eec:	movne	r5, r0
   15ef0:	cmpne	r0, #0
   15ef4:	bne	15f18 <argp_failure@@Base+0xe64>
   15ef8:	movw	r0, #43052	; 0xa82c
   15efc:	movt	r0, #1
   15f00:	movw	r1, #42960	; 0xa7d0
   15f04:	movt	r1, #1
   15f08:	movw	r3, #42972	; 0xa7dc
   15f0c:	movt	r3, #1
   15f10:	movw	r2, #474	; 0x1da
   15f14:	bl	115dc <__assert_fail@plt>
   15f18:	movw	r0, #37449	; 0x9249
   15f1c:	movt	r0, #2340	; 0x924
   15f20:	cmp	r7, r0
   15f24:	bhi	1604c <argp_failure@@Base+0xf98>
   15f28:	mov	r0, r4
   15f2c:	bl	13d14 <argp_usage@@Base+0x58>
   15f30:	cmp	r0, #0
   15f34:	bne	15ff8 <argp_failure@@Base+0xf44>
   15f38:	mov	r0, #0
   15f3c:	str	r4, [r6]
   15f40:	mov	r1, #0
   15f44:	stmib	r6, {r1, r5}
   15f48:	ldr	r8, [r4, #20]
   15f4c:	cmp	r8, #0
   15f50:	bne	15f70 <argp_failure@@Base+0xebc>
   15f54:	ldr	r1, [r4]
   15f58:	cmp	r1, #0
   15f5c:	bne	15f6c <argp_failure@@Base+0xeb8>
   15f60:	ldr	r1, [r4, #4]
   15f64:	cmp	r1, #0
   15f68:	addeq	r0, r0, #1
   15f6c:	mov	r8, r0
   15f70:	str	r8, [r6, #12]
   15f74:	ldr	r0, [sp]
   15f78:	str	r0, [r6, #16]
   15f7c:	str	r9, [r6, #20]
   15f80:	mov	r7, r4
   15f84:	ldr	r0, [r6, #4]
   15f88:	add	r0, r0, #1
   15f8c:	str	r0, [r6, #4]
   15f90:	mov	r0, r4
   15f94:	bl	13cd0 <argp_usage@@Base+0x14>
   15f98:	cmp	r0, #0
   15f9c:	beq	15fbc <argp_failure@@Base+0xf08>
   15fa0:	ldr	r1, [sl, #8]
   15fa4:	ldr	r4, [r7, #4]
   15fa8:	uxtb	r0, r4
   15fac:	mov	r2, r5
   15fb0:	bl	16344 <argp_failure@@Base+0x1290>
   15fb4:	cmp	r0, #0
   15fb8:	strbeq	r4, [r5], #1
   15fbc:	add	r4, r7, #24
   15fc0:	mov	r0, r4
   15fc4:	bl	13d14 <argp_usage@@Base+0x58>
   15fc8:	cmp	r0, #0
   15fcc:	bne	15fdc <argp_failure@@Base+0xf28>
   15fd0:	ldrb	r0, [r7, #36]	; 0x24
   15fd4:	tst	r0, #4
   15fd8:	bne	15f80 <argp_failure@@Base+0xecc>
   15fdc:	add	r6, r6, #28
   15fe0:	add	r4, r7, #24
   15fe4:	mov	r0, r4
   15fe8:	bl	13d14 <argp_usage@@Base+0x58>
   15fec:	cmp	r0, #0
   15ff0:	mov	r0, r8
   15ff4:	beq	15f3c <argp_failure@@Base+0xe88>
   15ff8:	mov	r0, #0
   15ffc:	strb	r0, [r5]
   16000:	mov	r0, sl
   16004:	sub	sp, fp, #28
   16008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1600c:	movw	r0, #42956	; 0xa7cc
   16010:	movt	r0, #1
   16014:	movw	r1, #42960	; 0xa7d0
   16018:	movt	r1, #1
   1601c:	movw	r3, #42972	; 0xa7dc
   16020:	movt	r3, #1
   16024:	movw	r2, #450	; 0x1c2
   16028:	bl	115dc <__assert_fail@plt>
   1602c:	movw	r0, #43036	; 0xa81c
   16030:	movt	r0, #1
   16034:	movw	r1, #42960	; 0xa7d0
   16038:	movt	r1, #1
   1603c:	movw	r3, #42972	; 0xa7dc
   16040:	movt	r3, #1
   16044:	mov	r2, #460	; 0x1cc
   16048:	bl	115dc <__assert_fail@plt>
   1604c:	movw	r0, #43087	; 0xa84f
   16050:	movt	r0, #1
   16054:	movw	r1, #42960	; 0xa7d0
   16058:	movt	r1, #1
   1605c:	movw	r3, #42972	; 0xa7dc
   16060:	movt	r3, #1
   16064:	mov	r2, #476	; 0x1dc
   16068:	bl	115dc <__assert_fail@plt>
   1606c:	push	{r4, r5, r6, r7, fp, lr}
   16070:	add	fp, sp, #16
   16074:	mov	r5, r3
   16078:	mov	r7, r2
   1607c:	mov	r6, r1
   16080:	mov	r4, r0
   16084:	mov	r0, #28
   16088:	bl	14b34 <_obstack_memory_used@@Base+0x908>
   1608c:	cmp	r0, #0
   16090:	popeq	{r4, r5, r6, r7, fp, pc}
   16094:	ldr	r2, [fp, #12]
   16098:	ldr	r1, [fp, #8]
   1609c:	str	r7, [r0]
   160a0:	stmib	r0, {r5, r6}
   160a4:	str	r1, [r0, #12]
   160a8:	str	r2, [r0, #16]
   160ac:	cmp	r1, #0
   160b0:	ldrne	r1, [r1, #20]
   160b4:	addne	r1, r1, #1
   160b8:	moveq	r1, #0
   160bc:	ldr	r2, [r4, #12]
   160c0:	str	r1, [r0, #20]
   160c4:	str	r2, [r0, #24]
   160c8:	str	r0, [r4, #12]
   160cc:	pop	{r4, r5, r6, r7, fp, pc}
   160d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160d4:	add	fp, sp, #28
   160d8:	sub	sp, sp, #28
   160dc:	mov	r5, r1
   160e0:	mov	r7, r0
   160e4:	add	r1, r0, #12
   160e8:	mov	r0, r1
   160ec:	ldr	r2, [r1]
   160f0:	add	r1, r2, #24
   160f4:	cmp	r2, #0
   160f8:	bne	160e8 <argp_failure@@Base+0x1034>
   160fc:	ldr	r1, [r5, #12]
   16100:	str	r1, [r0]
   16104:	mov	r0, #0
   16108:	str	r0, [r5, #12]
   1610c:	ldr	r0, [r5, #4]
   16110:	cmp	r0, #0
   16114:	beq	16314 <argp_failure@@Base+0x1260>
   16118:	ldr	r1, [r7, #4]
   1611c:	cmp	r1, #0
   16120:	beq	16184 <argp_failure@@Base+0x10d0>
   16124:	add	r9, r1, r0
   16128:	rsb	r0, r9, r9, lsl #3
   1612c:	lsl	r0, r0, #2
   16130:	bl	14b34 <_obstack_memory_used@@Base+0x908>
   16134:	mov	r6, r0
   16138:	ldr	r0, [r7, #8]
   1613c:	bl	1148c <strlen@plt>
   16140:	mov	sl, r0
   16144:	ldr	r0, [r5, #8]
   16148:	bl	1148c <strlen@plt>
   1614c:	add	r0, sl, r0
   16150:	add	r0, r0, #1
   16154:	bl	14b34 <_obstack_memory_used@@Base+0x908>
   16158:	cmp	r6, #0
   1615c:	cmpne	r0, #0
   16160:	bne	161a4 <argp_failure@@Base+0x10f0>
   16164:	movw	r0, #43144	; 0xa888
   16168:	movt	r0, #1
   1616c:	movw	r1, #42960	; 0xa7d0
   16170:	movt	r1, #1
   16174:	movw	r3, #43169	; 0xa8a1
   16178:	movt	r3, #1
   1617c:	movw	r2, #970	; 0x3ca
   16180:	bl	115dc <__assert_fail@plt>
   16184:	str	r0, [r7, #4]
   16188:	ldr	r0, [r5]
   1618c:	str	r0, [r7]
   16190:	ldr	r0, [r5, #8]
   16194:	str	r0, [r7, #8]
   16198:	mov	r0, #0
   1619c:	str	r0, [r5, #4]
   161a0:	b	16314 <argp_failure@@Base+0x1260>
   161a4:	str	r0, [sp, #24]
   161a8:	movw	r0, #37450	; 0x924a
   161ac:	movt	r0, #2340	; 0x924
   161b0:	cmp	r9, r0
   161b4:	bcs	16324 <argp_failure@@Base+0x1270>
   161b8:	ldr	r1, [r7]
   161bc:	ldr	r0, [r7, #4]
   161c0:	rsb	r4, r0, r0, lsl #3
   161c4:	lsl	r2, r4, #2
   161c8:	mov	r0, r6
   161cc:	bl	1139c <memcpy@plt>
   161d0:	add	r0, r6, r4, lsl #2
   161d4:	ldm	r5, {r1, r2}
   161d8:	rsb	r2, r2, r2, lsl #3
   161dc:	lsl	r2, r2, #2
   161e0:	bl	1139c <memcpy@plt>
   161e4:	ldr	r1, [r7, #8]
   161e8:	ldr	r4, [sp, #24]
   161ec:	mov	r0, r4
   161f0:	mov	r2, sl
   161f4:	bl	1139c <memcpy@plt>
   161f8:	ldr	r0, [r7, #4]
   161fc:	cmp	r0, #0
   16200:	str	r7, [sp, #12]
   16204:	str	r9, [sp, #8]
   16208:	beq	16238 <argp_failure@@Base+0x1184>
   1620c:	rsb	r1, r0, r0, lsl #3
   16210:	add	r8, r6, r1, lsl #2
   16214:	add	r1, r6, #8
   16218:	ldr	r2, [r7, #8]
   1621c:	ldr	r3, [r1]
   16220:	sub	r3, r3, r2
   16224:	add	r3, r4, r3
   16228:	str	r3, [r1], #28
   1622c:	subs	r0, r0, #1
   16230:	bne	1621c <argp_failure@@Base+0x1168>
   16234:	b	1623c <argp_failure@@Base+0x1188>
   16238:	mov	r8, r6
   1623c:	str	r6, [sp, #4]
   16240:	add	r6, r4, sl
   16244:	ldr	r9, [r5, #4]
   16248:	cmp	r9, #0
   1624c:	str	r5, [sp, #16]
   16250:	beq	162d4 <argp_failure@@Base+0x1220>
   16254:	ldr	r7, [r5, #8]
   16258:	str	r6, [sp, #20]
   1625c:	ldr	r0, [sp, #20]
   16260:	str	r0, [r8, #8]
   16264:	ldr	sl, [r8, #4]
   16268:	cmp	sl, #0
   1626c:	beq	162c4 <argp_failure@@Base+0x1210>
   16270:	ldr	r4, [r8]
   16274:	ldrb	r5, [r7]
   16278:	mov	r0, r4
   1627c:	bl	13cd0 <argp_usage@@Base+0x14>
   16280:	cmp	r0, #0
   16284:	beq	162b8 <argp_failure@@Base+0x1204>
   16288:	ldr	r0, [r4, #4]
   1628c:	cmp	r0, r5
   16290:	bne	162b8 <argp_failure@@Base+0x1204>
   16294:	mov	r0, r5
   16298:	ldr	r1, [sp, #24]
   1629c:	mov	r2, r6
   162a0:	bl	16344 <argp_failure@@Base+0x1290>
   162a4:	cmp	r0, #0
   162a8:	ldreq	r0, [sp, #20]
   162ac:	strbeq	r5, [r0], #1
   162b0:	streq	r0, [sp, #20]
   162b4:	add	r7, r7, #1
   162b8:	subs	sl, sl, #1
   162bc:	add	r4, r4, #24
   162c0:	bne	16274 <argp_failure@@Base+0x11c0>
   162c4:	subs	r9, r9, #1
   162c8:	add	r8, r8, #28
   162cc:	bne	1625c <argp_failure@@Base+0x11a8>
   162d0:	b	162d8 <argp_failure@@Base+0x1224>
   162d4:	str	r6, [sp, #20]
   162d8:	mov	r0, #0
   162dc:	ldr	r1, [sp, #20]
   162e0:	strb	r0, [r1]
   162e4:	ldr	r4, [sp, #12]
   162e8:	ldr	r0, [r4]
   162ec:	bl	13e48 <argp_usage@@Base+0x18c>
   162f0:	ldr	r0, [r4, #8]
   162f4:	bl	13e48 <argp_usage@@Base+0x18c>
   162f8:	ldr	r0, [sp, #4]
   162fc:	str	r0, [r4]
   16300:	ldr	r0, [sp, #8]
   16304:	str	r0, [r4, #4]
   16308:	ldr	r0, [sp, #24]
   1630c:	str	r0, [r4, #8]
   16310:	ldr	r5, [sp, #16]
   16314:	mov	r0, r5
   16318:	sub	sp, fp, #28
   1631c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16320:	b	15d18 <argp_failure@@Base+0xc64>
   16324:	movw	r0, #43092	; 0xa854
   16328:	movt	r0, #1
   1632c:	movw	r1, #42960	; 0xa7d0
   16330:	movt	r1, #1
   16334:	movw	r3, #43169	; 0xa8a1
   16338:	movt	r3, #1
   1633c:	mov	r2, #972	; 0x3cc
   16340:	bl	115dc <__assert_fail@plt>
   16344:	mov	ip, r0
   16348:	mov	r0, #0
   1634c:	cmp	r1, r2
   16350:	bxcs	lr
   16354:	ldrb	r3, [r1], #1
   16358:	cmp	r3, ip
   1635c:	bne	1634c <argp_failure@@Base+0x1298>
   16360:	mov	r0, #1
   16364:	bx	lr
   16368:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1636c:	add	fp, sp, #24
   16370:	ldr	r6, [r0, #4]
   16374:	mov	r8, #0
   16378:	cmp	r6, #0
   1637c:	beq	163e0 <argp_failure@@Base+0x132c>
   16380:	mov	r9, r1
   16384:	ldr	r7, [r0]
   16388:	ldr	r4, [r7, #4]
   1638c:	cmp	r4, #0
   16390:	beq	163d4 <argp_failure@@Base+0x1320>
   16394:	ldr	r0, [r7]
   16398:	add	r5, r0, #12
   1639c:	ldr	r0, [r5, #-12]
   163a0:	cmp	r0, #0
   163a4:	beq	163c8 <argp_failure@@Base+0x1314>
   163a8:	ldrb	r1, [r5]
   163ac:	tst	r1, #2
   163b0:	bne	163c8 <argp_failure@@Base+0x1314>
   163b4:	mov	r1, r9
   163b8:	bl	11330 <strcmp@plt>
   163bc:	cmp	r0, #0
   163c0:	moveq	r0, r7
   163c4:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   163c8:	subs	r4, r4, #1
   163cc:	add	r5, r5, #24
   163d0:	bne	1639c <argp_failure@@Base+0x12e8>
   163d4:	subs	r6, r6, #1
   163d8:	add	r7, r7, #28
   163dc:	bne	16388 <argp_failure@@Base+0x12d4>
   163e0:	mov	r0, r8
   163e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   163e8:	b	163ec <argp_failure@@Base+0x1338>
   163ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   163f0:	add	fp, sp, #24
   163f4:	sub	sp, sp, #8
   163f8:	mov	r9, r1
   163fc:	mov	r5, r0
   16400:	ldr	r6, [r0, #16]
   16404:	cmp	r6, #0
   16408:	beq	1641c <argp_failure@@Base+0x1368>
   1640c:	mov	r0, r6
   16410:	bl	16614 <argp_failure@@Base+0x1560>
   16414:	add	r0, r0, #8
   16418:	b	16420 <argp_failure@@Base+0x136c>
   1641c:	add	r0, r5, #12
   16420:	ldr	r7, [r9, #16]
   16424:	ldr	r4, [r0]
   16428:	cmp	r7, #0
   1642c:	beq	16440 <argp_failure@@Base+0x138c>
   16430:	mov	r0, r7
   16434:	bl	16614 <argp_failure@@Base+0x1560>
   16438:	add	r0, r0, #8
   1643c:	b	16444 <argp_failure@@Base+0x1390>
   16440:	add	r0, r9, #12
   16444:	ldr	r1, [r0]
   16448:	mov	r0, r4
   1644c:	bl	1662c <argp_failure@@Base+0x1578>
   16450:	cmp	r0, #0
   16454:	bne	16474 <argp_failure@@Base+0x13c0>
   16458:	cmp	r6, #0
   1645c:	mov	r0, r6
   16460:	movwne	r0, #1
   16464:	cmp	r7, #0
   16468:	subne	r0, r0, #1
   1646c:	cmp	r0, #0
   16470:	beq	1647c <argp_failure@@Base+0x13c8>
   16474:	sub	sp, fp, #24
   16478:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1647c:	cmp	r6, #0
   16480:	beq	16498 <argp_failure@@Base+0x13e4>
   16484:	mov	r0, r6
   16488:	mov	r1, r7
   1648c:	bl	16654 <argp_failure@@Base+0x15a0>
   16490:	cmp	r0, #0
   16494:	bne	16474 <argp_failure@@Base+0x13c0>
   16498:	ldr	r1, [r9, #12]
   1649c:	ldr	r0, [r5, #12]
   164a0:	bl	1662c <argp_failure@@Base+0x1578>
   164a4:	cmp	r0, #0
   164a8:	bne	16474 <argp_failure@@Base+0x13c0>
   164ac:	mov	r0, r5
   164b0:	bl	166b8 <argp_failure@@Base+0x1604>
   164b4:	mov	r4, r0
   164b8:	str	r0, [sp, #4]
   164bc:	mov	r0, r9
   164c0:	bl	166b8 <argp_failure@@Base+0x1604>
   164c4:	mov	r8, r0
   164c8:	str	r0, [sp]
   164cc:	mov	r6, #0
   164d0:	cmp	r4, #0
   164d4:	mov	r7, #0
   164d8:	beq	16504 <argp_failure@@Base+0x1450>
   164dc:	ldr	r0, [r5]
   164e0:	ldr	r0, [r0, #12]
   164e4:	ands	r0, r0, #8
   164e8:	mov	r7, #0
   164ec:	beq	16504 <argp_failure@@Base+0x1450>
   164f0:	add	r0, sp, #4
   164f4:	bl	166f8 <argp_failure@@Base+0x1644>
   164f8:	mov	r7, r0
   164fc:	cmp	r0, #0
   16500:	movwne	r7, #1
   16504:	cmp	r8, #0
   16508:	ldrne	r0, [r9]
   1650c:	ldrne	r0, [r0, #12]
   16510:	andsne	r0, r0, #8
   16514:	beq	1652c <argp_failure@@Base+0x1478>
   16518:	mov	r0, sp
   1651c:	bl	166f8 <argp_failure@@Base+0x1644>
   16520:	mov	r6, r0
   16524:	cmp	r0, #0
   16528:	movwne	r6, #1
   1652c:	subs	r0, r7, r6
   16530:	bne	16474 <argp_failure@@Base+0x13c0>
   16534:	mov	r0, r5
   16538:	bl	1678c <argp_failure@@Base+0x16d8>
   1653c:	mov	r5, r0
   16540:	mov	r0, r9
   16544:	bl	1678c <argp_failure@@Base+0x16d8>
   16548:	mov	r4, r0
   1654c:	cmp	r5, #0
   16550:	mov	r6, r5
   16554:	bne	16568 <argp_failure@@Base+0x14b4>
   16558:	ldr	r0, [sp, #4]
   1655c:	cmp	r0, #0
   16560:	ldrbne	r6, [r0]
   16564:	moveq	r6, #0
   16568:	cmp	r4, #0
   1656c:	mov	r7, r4
   16570:	bne	16584 <argp_failure@@Base+0x14d0>
   16574:	ldr	r0, [sp]
   16578:	cmp	r0, #0
   1657c:	ldrbne	r7, [r0]
   16580:	moveq	r7, #0
   16584:	bl	1145c <__ctype_tolower_loc@plt>
   16588:	ldr	r0, [r0]
   1658c:	ldr	r1, [r0, r7, lsl #2]
   16590:	ldr	r0, [r0, r6, lsl #2]
   16594:	subs	r0, r0, r1
   16598:	subseq	r0, r7, r6
   1659c:	bne	16474 <argp_failure@@Base+0x13c0>
   165a0:	cmp	r5, #0
   165a4:	mov	r0, r5
   165a8:	movwne	r0, #1
   165ac:	cmp	r4, #0
   165b0:	subne	r0, r0, #1
   165b4:	cmp	r0, #0
   165b8:	bne	16474 <argp_failure@@Base+0x13c0>
   165bc:	cmp	r5, #0
   165c0:	beq	165d0 <argp_failure@@Base+0x151c>
   165c4:	mov	r0, #0
   165c8:	sub	sp, fp, #24
   165cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   165d0:	ldr	r2, [sp, #4]
   165d4:	cmp	r2, #0
   165d8:	mov	r0, r2
   165dc:	movwne	r0, #1
   165e0:	ldr	r1, [sp]
   165e4:	cmp	r1, #0
   165e8:	subne	r0, r0, #1
   165ec:	cmp	r0, #0
   165f0:	bne	16474 <argp_failure@@Base+0x13c0>
   165f4:	cmp	r2, #0
   165f8:	beq	165c4 <argp_failure@@Base+0x1510>
   165fc:	mov	r0, r2
   16600:	bl	113d8 <strcasecmp@plt>
   16604:	cmp	r0, #0
   16608:	moveq	r0, #0
   1660c:	sub	sp, fp, #24
   16610:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16614:	mov	r1, r0
   16618:	ldr	r0, [r0, #12]
   1661c:	cmp	r0, #0
   16620:	bne	16614 <argp_failure@@Base+0x1560>
   16624:	mov	r0, r1
   16628:	bx	lr
   1662c:	orr	r2, r1, r0
   16630:	sub	r3, r0, r1
   16634:	cmn	r2, #1
   16638:	mov	r2, r3
   1663c:	suble	r2, r1, r0
   16640:	and	r0, r1, r0
   16644:	cmp	r0, #0
   16648:	movlt	r2, r3
   1664c:	mov	r0, r2
   16650:	bx	lr
   16654:	push	{fp, lr}
   16658:	mov	fp, sp
   1665c:	ldr	r3, [r1, #20]
   16660:	ldr	r2, [r0, #20]
   16664:	cmp	r2, r3
   16668:	ble	1668c <argp_failure@@Base+0x15d8>
   1666c:	ldr	r0, [r0, #12]
   16670:	ldr	r2, [r0, #20]
   16674:	cmp	r2, r3
   16678:	bgt	1666c <argp_failure@@Base+0x15b8>
   1667c:	bl	167b4 <argp_failure@@Base+0x1700>
   16680:	cmp	r0, #0
   16684:	movweq	r0, #1
   16688:	pop	{fp, pc}
   1668c:	bge	166b0 <argp_failure@@Base+0x15fc>
   16690:	ldr	r1, [r1, #12]
   16694:	ldr	r3, [r1, #20]
   16698:	cmp	r2, r3
   1669c:	blt	16690 <argp_failure@@Base+0x15dc>
   166a0:	bl	167b4 <argp_failure@@Base+0x1700>
   166a4:	cmp	r0, #0
   166a8:	mvneq	r0, #0
   166ac:	pop	{fp, pc}
   166b0:	pop	{fp, lr}
   166b4:	b	167b4 <argp_failure@@Base+0x1700>
   166b8:	ldr	r1, [r0, #4]
   166bc:	cmp	r1, #0
   166c0:	beq	166f0 <argp_failure@@Base+0x163c>
   166c4:	ldr	r0, [r0]
   166c8:	add	r2, r0, #12
   166cc:	ldr	r0, [r2, #-12]
   166d0:	cmp	r0, #0
   166d4:	beq	166e4 <argp_failure@@Base+0x1630>
   166d8:	ldrb	r3, [r2]
   166dc:	tst	r3, #2
   166e0:	bxeq	lr
   166e4:	add	r2, r2, #24
   166e8:	subs	r1, r1, #1
   166ec:	bne	166cc <argp_failure@@Base+0x1618>
   166f0:	mov	r0, #0
   166f4:	bx	lr
   166f8:	push	{r4, sl, fp, lr}
   166fc:	add	fp, sp, #8
   16700:	mov	r4, r0
   16704:	bl	11474 <__ctype_b_loc@plt>
   16708:	ldr	r3, [r0]
   1670c:	ldr	r2, [r4]
   16710:	ldrb	r1, [r2]
   16714:	add	r3, r3, r1, lsl #1
   16718:	ldrb	r3, [r3, #1]
   1671c:	tst	r3, #32
   16720:	beq	16744 <argp_failure@@Base+0x1690>
   16724:	add	r2, r2, #1
   16728:	str	r2, [r4]
   1672c:	ldrb	r1, [r2], #1
   16730:	ldr	r3, [r0]
   16734:	add	r3, r3, r1, lsl #1
   16738:	ldrb	r3, [r3, #1]
   1673c:	tst	r3, #32
   16740:	bne	16728 <argp_failure@@Base+0x1674>
   16744:	subs	ip, r1, #45	; 0x2d
   16748:	movwne	ip, #1
   1674c:	ldr	r2, [r4]
   16750:	ldrb	r3, [r2]
   16754:	cmp	r3, #0
   16758:	beq	16784 <argp_failure@@Base+0x16d0>
   1675c:	add	r2, r2, #1
   16760:	ldr	r1, [r0]
   16764:	uxtb	r3, r3
   16768:	ldrb	r1, [r1, r3, lsl #1]
   1676c:	tst	r1, #8
   16770:	bne	16784 <argp_failure@@Base+0x16d0>
   16774:	str	r2, [r4]
   16778:	ldrb	r3, [r2], #1
   1677c:	cmp	r3, #0
   16780:	bne	16760 <argp_failure@@Base+0x16ac>
   16784:	mov	r0, ip
   16788:	pop	{r4, sl, fp, pc}
   1678c:	push	{fp, lr}
   16790:	mov	fp, sp
   16794:	ldr	r1, [r0, #20]
   16798:	ldr	r2, [r1, #24]
   1679c:	movw	r1, #26868	; 0x68f4
   167a0:	movt	r1, #1
   167a4:	mov	r3, #0
   167a8:	bl	16840 <argp_failure@@Base+0x178c>
   167ac:	uxtb	r0, r0
   167b0:	pop	{fp, pc}
   167b4:	push	{r4, r5, fp, lr}
   167b8:	add	fp, sp, #8
   167bc:	mov	r4, r1
   167c0:	mov	r5, r0
   167c4:	ldr	r1, [r1, #12]
   167c8:	ldr	r0, [r0, #12]
   167cc:	cmp	r0, r1
   167d0:	beq	16800 <argp_failure@@Base+0x174c>
   167d4:	bl	167b4 <argp_failure@@Base+0x1700>
   167d8:	cmp	r0, #0
   167dc:	popne	{r4, r5, fp, pc}
   167e0:	ldr	r1, [r4, #8]
   167e4:	ldr	r0, [r5, #8]
   167e8:	bl	1662c <argp_failure@@Base+0x1578>
   167ec:	cmp	r0, #0
   167f0:	ldreq	r0, [r5, #4]
   167f4:	ldreq	r1, [r4, #4]
   167f8:	subeq	r0, r1, r0
   167fc:	pop	{r4, r5, fp, pc}
   16800:	mov	r0, r5
   16804:	mov	r1, r4
   16808:	pop	{r4, r5, fp, lr}
   1680c:	b	16810 <argp_failure@@Base+0x175c>
   16810:	push	{r4, r5, fp, lr}
   16814:	add	fp, sp, #8
   16818:	mov	r4, r1
   1681c:	mov	r5, r0
   16820:	ldr	r1, [r1, #8]
   16824:	ldr	r0, [r0, #8]
   16828:	bl	1662c <argp_failure@@Base+0x1578>
   1682c:	cmp	r0, #0
   16830:	ldreq	r0, [r5, #4]
   16834:	ldreq	r1, [r4, #4]
   16838:	subeq	r0, r1, r0
   1683c:	pop	{r4, r5, fp, pc}
   16840:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16844:	add	fp, sp, #28
   16848:	sub	sp, sp, #4
   1684c:	mov	sl, r1
   16850:	ldr	r1, [r0, #4]
   16854:	cmp	r1, #0
   16858:	moveq	r0, #0
   1685c:	subeq	sp, fp, #28
   16860:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16864:	mov	r8, r3
   16868:	mov	r9, r2
   1686c:	ldr	r4, [r0]
   16870:	rsb	r5, r1, #1
   16874:	ldr	r6, [r0, #8]
   16878:	mov	r7, r4
   1687c:	mov	r0, r7
   16880:	bl	13cd0 <argp_usage@@Base+0x14>
   16884:	mov	r1, r0
   16888:	mov	r0, #0
   1688c:	cmp	r1, #0
   16890:	beq	168d4 <argp_failure@@Base+0x1820>
   16894:	ldrb	r1, [r6]
   16898:	ldr	r2, [r7, #4]
   1689c:	cmp	r2, r1
   168a0:	bne	168d4 <argp_failure@@Base+0x1820>
   168a4:	ldr	r1, [r7, #12]
   168a8:	tst	r1, #4
   168ac:	moveq	r4, r7
   168b0:	mov	r0, #0
   168b4:	tst	r1, #2
   168b8:	bne	168d0 <argp_failure@@Base+0x181c>
   168bc:	mov	r0, r7
   168c0:	mov	r1, r4
   168c4:	mov	r2, r9
   168c8:	mov	r3, r8
   168cc:	blx	sl
   168d0:	add	r6, r6, #1
   168d4:	cmp	r5, #0
   168d8:	beq	168ec <argp_failure@@Base+0x1838>
   168dc:	add	r5, r5, #1
   168e0:	add	r7, r7, #24
   168e4:	cmp	r0, #0
   168e8:	beq	1687c <argp_failure@@Base+0x17c8>
   168ec:	sub	sp, fp, #28
   168f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168f4:	push	{r4, sl, fp, lr}
   168f8:	add	fp, sp, #8
   168fc:	mov	r4, r0
   16900:	bl	13cd0 <argp_usage@@Base+0x14>
   16904:	cmp	r0, #0
   16908:	ldrne	r0, [r4, #4]
   1690c:	moveq	r0, #0
   16910:	pop	{r4, sl, fp, pc}
   16914:	ldr	r2, [r0, #8]
   16918:	cmp	r2, #0
   1691c:	bne	16954 <argp_failure@@Base+0x18a0>
   16920:	ldr	r2, [r1, #8]
   16924:	cmp	r2, #0
   16928:	bne	16954 <argp_failure@@Base+0x18a0>
   1692c:	ldr	r2, [r0, #12]
   16930:	ldr	r1, [r1, #12]
   16934:	orr	r1, r1, r2
   16938:	tst	r1, #16
   1693c:	bne	16954 <argp_failure@@Base+0x18a0>
   16940:	ldr	r0, [r0, #4]
   16944:	ldr	r1, [r3]
   16948:	add	r2, r1, #1
   1694c:	str	r2, [r3]
   16950:	strb	r0, [r1]
   16954:	mov	r0, #0
   16958:	bx	lr
   1695c:	push	{r4, r5, r6, sl, fp, lr}
   16960:	add	fp, sp, #16
   16964:	mov	r5, r3
   16968:	mov	r6, r0
   1696c:	ldr	r4, [r0, #8]
   16970:	ldr	r0, [r0, #12]
   16974:	ldr	r2, [r1, #12]
   16978:	orr	r0, r2, r0
   1697c:	cmp	r4, #0
   16980:	ldreq	r4, [r1, #8]
   16984:	tst	r0, #16
   16988:	bne	169d8 <argp_failure@@Base+0x1924>
   1698c:	cmp	r4, #0
   16990:	beq	169d8 <argp_failure@@Base+0x1924>
   16994:	tst	r0, #1
   16998:	bne	169c0 <argp_failure@@Base+0x190c>
   1699c:	mov	r0, r4
   169a0:	bl	1148c <strlen@plt>
   169a4:	add	r1, r0, #6
   169a8:	mov	r0, r5
   169ac:	bl	16a60 <argp_failure@@Base+0x19ac>
   169b0:	ldr	r2, [r6, #4]
   169b4:	movw	r1, #43231	; 0xa8df
   169b8:	movt	r1, #1
   169bc:	b	169cc <argp_failure@@Base+0x1918>
   169c0:	ldr	r2, [r6, #4]
   169c4:	movw	r1, #43220	; 0xa8d4
   169c8:	movt	r1, #1
   169cc:	mov	r0, r5
   169d0:	mov	r3, r4
   169d4:	bl	18450 <argp_failure@@Base+0x339c>
   169d8:	mov	r0, #0
   169dc:	pop	{r4, r5, r6, sl, fp, pc}
   169e0:	push	{fp, lr}
   169e4:	mov	fp, sp
   169e8:	ldr	ip, [r0, #8]
   169ec:	ldr	lr, [r0, #12]
   169f0:	ldr	r2, [r1, #12]
   169f4:	orr	lr, r2, lr
   169f8:	cmp	ip, #0
   169fc:	ldreq	ip, [r1, #8]
   16a00:	tst	lr, #16
   16a04:	bne	16a3c <argp_failure@@Base+0x1988>
   16a08:	cmp	ip, #0
   16a0c:	beq	16a28 <argp_failure@@Base+0x1974>
   16a10:	ldr	r2, [r0]
   16a14:	tst	lr, #1
   16a18:	bne	16a44 <argp_failure@@Base+0x1990>
   16a1c:	movw	r1, #43253	; 0xa8f5
   16a20:	movt	r1, #1
   16a24:	b	16a4c <argp_failure@@Base+0x1998>
   16a28:	ldr	r2, [r0]
   16a2c:	movw	r1, #43264	; 0xa900
   16a30:	movt	r1, #1
   16a34:	mov	r0, r3
   16a38:	bl	18450 <argp_failure@@Base+0x339c>
   16a3c:	mov	r0, #0
   16a40:	pop	{fp, pc}
   16a44:	movw	r1, #43240	; 0xa8e8
   16a48:	movt	r1, #1
   16a4c:	mov	r0, r3
   16a50:	mov	r3, ip
   16a54:	bl	18450 <argp_failure@@Base+0x339c>
   16a58:	mov	r0, #0
   16a5c:	pop	{fp, pc}
   16a60:	push	{r4, r5, fp, lr}
   16a64:	add	fp, sp, #8
   16a68:	mov	r5, r1
   16a6c:	mov	r4, r0
   16a70:	bl	1868c <argp_failure@@Base+0x35d8>
   16a74:	add	r0, r0, r5
   16a78:	ldr	r1, [r4, #8]
   16a7c:	cmp	r0, r1
   16a80:	mov	r0, r4
   16a84:	movcc	r1, #32
   16a88:	movcs	r1, #10
   16a8c:	pop	{r4, r5, fp, lr}
   16a90:	b	18588 <argp_failure@@Base+0x34d4>
   16a94:	push	{r4, r5, r6, sl, fp, lr}
   16a98:	add	fp, sp, #16
   16a9c:	mov	r4, r0
   16aa0:	cmp	r2, #0
   16aa4:	beq	16ae0 <argp_failure@@Base+0x1a2c>
   16aa8:	mov	r6, r2
   16aac:	ldr	r0, [r2, #20]
   16ab0:	cmp	r0, #0
   16ab4:	beq	16ae0 <argp_failure@@Base+0x1a2c>
   16ab8:	mov	r5, r1
   16abc:	mov	r0, r6
   16ac0:	mov	r1, r3
   16ac4:	bl	13414 <argp_parse@@Base+0x7f4>
   16ac8:	mov	r2, r0
   16acc:	ldr	r3, [r6, #20]
   16ad0:	mov	r0, r5
   16ad4:	mov	r1, r4
   16ad8:	pop	{r4, r5, r6, sl, fp, lr}
   16adc:	bx	r3
   16ae0:	mov	r0, r4
   16ae4:	pop	{r4, r5, r6, sl, fp, pc}
   16ae8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16aec:	add	fp, sp, #28
   16af0:	sub	sp, sp, #44	; 0x2c
   16af4:	mov	r7, r3
   16af8:	mov	r4, r2
   16afc:	mov	r8, r1
   16b00:	mov	r5, r0
   16b04:	ldr	r9, [r0]
   16b08:	ldr	r6, [r0, #8]
   16b0c:	mov	sl, #0
   16b10:	mov	r0, r2
   16b14:	mov	r1, #0
   16b18:	bl	185d8 <argp_failure@@Base+0x3524>
   16b1c:	str	r0, [sp, #8]
   16b20:	ldr	r3, [r4, #12]
   16b24:	str	r4, [sp, #28]
   16b28:	str	r5, [sp, #24]
   16b2c:	str	r7, [sp, #16]
   16b30:	str	r7, [sp, #32]
   16b34:	mov	r0, #1
   16b38:	str	r0, [sp, #36]	; 0x24
   16b3c:	str	r8, [sp, #40]	; 0x28
   16b40:	ldrb	r0, [r9, #12]
   16b44:	tst	r0, #8
   16b48:	str	r3, [sp, #12]
   16b4c:	str	r8, [sp, #4]
   16b50:	bne	16b90 <argp_failure@@Base+0x1adc>
   16b54:	ldr	r0, [r5, #4]
   16b58:	cmp	r0, #0
   16b5c:	beq	16b90 <argp_failure@@Base+0x1adc>
   16b60:	add	r1, r9, #12
   16b64:	ldr	r2, [r1, #-12]
   16b68:	cmp	r2, #0
   16b6c:	beq	16b7c <argp_failure@@Base+0x1ac8>
   16b70:	ldrb	r2, [r1]
   16b74:	tst	r2, #2
   16b78:	beq	16b8c <argp_failure@@Base+0x1ad8>
   16b7c:	add	r1, r1, #24
   16b80:	subs	r0, r0, #1
   16b84:	bne	16b64 <argp_failure@@Base+0x1ab0>
   16b88:	b	16b90 <argp_failure@@Base+0x1adc>
   16b8c:	mov	sl, #1
   16b90:	movw	r7, #59504	; 0xe870
   16b94:	movt	r7, #2
   16b98:	ldr	r1, [r7, #8]
   16b9c:	mov	r0, r4
   16ba0:	bl	18650 <argp_failure@@Base+0x359c>
   16ba4:	str	r5, [sp, #20]
   16ba8:	ldr	r8, [r5, #4]
   16bac:	mov	r5, r7
   16bb0:	cmp	r8, #0
   16bb4:	beq	16c64 <argp_failure@@Base+0x1bb0>
   16bb8:	mov	r7, r9
   16bbc:	mov	r0, r7
   16bc0:	bl	13cd0 <argp_usage@@Base+0x14>
   16bc4:	cmp	r0, #0
   16bc8:	beq	16c58 <argp_failure@@Base+0x1ba4>
   16bcc:	ldrb	r0, [r6]
   16bd0:	ldr	r1, [r7, #4]
   16bd4:	cmp	r1, r0
   16bd8:	bne	16c58 <argp_failure@@Base+0x1ba4>
   16bdc:	ldrb	r0, [r7, #12]
   16be0:	tst	r0, #2
   16be4:	bne	16c54 <argp_failure@@Base+0x1ba0>
   16be8:	ldr	r0, [r5, #8]
   16bec:	add	r1, sp, #24
   16bf0:	bl	16eac <argp_failure@@Base+0x1df8>
   16bf4:	mov	r0, r4
   16bf8:	mov	r1, #45	; 0x2d
   16bfc:	bl	18588 <argp_failure@@Base+0x34d4>
   16c00:	ldrb	r1, [r6]
   16c04:	mov	r0, r4
   16c08:	bl	18588 <argp_failure@@Base+0x34d4>
   16c0c:	cmp	sl, #0
   16c10:	beq	16c38 <argp_failure@@Base+0x1b84>
   16c14:	ldr	r0, [r5]
   16c18:	cmp	r0, #0
   16c1c:	bne	16c38 <argp_failure@@Base+0x1b84>
   16c20:	ldr	r0, [r9, #8]
   16c24:	cmp	r0, #0
   16c28:	ldrne	r0, [sp, #16]
   16c2c:	movne	r1, #1
   16c30:	strne	r1, [r0, #8]
   16c34:	b	16c54 <argp_failure@@Base+0x1ba0>
   16c38:	mov	r0, r9
   16c3c:	movw	r1, #42892	; 0xa78c
   16c40:	movt	r1, #1
   16c44:	movw	r2, #43388	; 0xa97c
   16c48:	movt	r2, #1
   16c4c:	mov	r3, r4
   16c50:	bl	16fa4 <argp_failure@@Base+0x1ef0>
   16c54:	add	r6, r6, #1
   16c58:	subs	r8, r8, #1
   16c5c:	add	r7, r7, #24
   16c60:	bne	16bbc <argp_failure@@Base+0x1b08>
   16c64:	ldrb	r0, [r9, #12]
   16c68:	tst	r0, #8
   16c6c:	bne	16cfc <argp_failure@@Base+0x1c48>
   16c70:	ldr	r1, [r5, #12]
   16c74:	mov	r0, r4
   16c78:	bl	18650 <argp_failure@@Base+0x359c>
   16c7c:	ldr	r0, [sp, #20]
   16c80:	ldr	r8, [r0, #4]
   16c84:	cmp	r8, #0
   16c88:	beq	16d5c <argp_failure@@Base+0x1ca8>
   16c8c:	add	sl, r9, #12
   16c90:	movw	r7, #43398	; 0xa986
   16c94:	movt	r7, #1
   16c98:	movw	r6, #43402	; 0xa98a
   16c9c:	movt	r6, #1
   16ca0:	ldr	r0, [sl, #-12]
   16ca4:	cmp	r0, #0
   16ca8:	beq	16cec <argp_failure@@Base+0x1c38>
   16cac:	ldrb	r0, [sl]
   16cb0:	tst	r0, #2
   16cb4:	bne	16cec <argp_failure@@Base+0x1c38>
   16cb8:	ldr	r0, [r5, #12]
   16cbc:	add	r1, sp, #24
   16cc0:	bl	16eac <argp_failure@@Base+0x1df8>
   16cc4:	ldr	r2, [sl, #-12]
   16cc8:	mov	r0, r4
   16ccc:	movw	r1, #43393	; 0xa981
   16cd0:	movt	r1, #1
   16cd4:	bl	18450 <argp_failure@@Base+0x339c>
   16cd8:	mov	r0, r9
   16cdc:	mov	r1, r7
   16ce0:	mov	r2, r6
   16ce4:	mov	r3, r4
   16ce8:	bl	16fa4 <argp_failure@@Base+0x1ef0>
   16cec:	add	sl, sl, #24
   16cf0:	subs	r8, r8, #1
   16cf4:	bne	16ca0 <argp_failure@@Base+0x1bec>
   16cf8:	b	16d5c <argp_failure@@Base+0x1ca8>
   16cfc:	ldr	r1, [r5, #16]
   16d00:	mov	r0, r4
   16d04:	bl	18650 <argp_failure@@Base+0x359c>
   16d08:	ldr	r0, [sp, #20]
   16d0c:	ldr	r7, [r0, #4]
   16d10:	cmp	r7, #0
   16d14:	beq	16d5c <argp_failure@@Base+0x1ca8>
   16d18:	add	r6, r9, #12
   16d1c:	add	r8, sp, #24
   16d20:	ldr	r0, [r6, #-12]
   16d24:	cmp	r0, #0
   16d28:	beq	16d50 <argp_failure@@Base+0x1c9c>
   16d2c:	ldrb	r0, [r6]
   16d30:	tst	r0, #2
   16d34:	bne	16d50 <argp_failure@@Base+0x1c9c>
   16d38:	ldr	r0, [r5, #16]
   16d3c:	mov	r1, r8
   16d40:	bl	16eac <argp_failure@@Base+0x1df8>
   16d44:	ldr	r1, [r6, #-12]
   16d48:	mov	r0, r4
   16d4c:	bl	18544 <argp_failure@@Base+0x3490>
   16d50:	add	r6, r6, #24
   16d54:	subs	r7, r7, #1
   16d58:	bne	16d20 <argp_failure@@Base+0x1c6c>
   16d5c:	mov	r0, r4
   16d60:	mov	r1, #0
   16d64:	bl	185d8 <argp_failure@@Base+0x3524>
   16d68:	ldr	r0, [sp, #36]	; 0x24
   16d6c:	cmp	r0, #0
   16d70:	beq	16dac <argp_failure@@Base+0x1cf8>
   16d74:	mov	r0, r9
   16d78:	bl	13cd0 <argp_usage@@Base+0x14>
   16d7c:	cmp	r0, #0
   16d80:	ldr	r5, [sp, #8]
   16d84:	bne	16e8c <argp_failure@@Base+0x1dd8>
   16d88:	ldr	r0, [r9]
   16d8c:	cmp	r0, #0
   16d90:	bne	16e8c <argp_failure@@Base+0x1dd8>
   16d94:	ldr	r6, [sp, #20]
   16d98:	ldr	r1, [r6, #20]
   16d9c:	ldr	r0, [r9, #16]
   16da0:	add	r2, sp, #24
   16da4:	bl	16fd4 <argp_failure@@Base+0x1f20>
   16da8:	b	16e84 <argp_failure@@Base+0x1dd0>
   16dac:	mov	sl, r5
   16db0:	ldr	r6, [sp, #20]
   16db4:	ldr	r2, [r6, #20]
   16db8:	ldr	r1, [r9, #4]
   16dbc:	ldr	r5, [r9, #16]
   16dc0:	mov	r0, r5
   16dc4:	ldr	r3, [sp, #4]
   16dc8:	bl	16a94 <argp_failure@@Base+0x19e0>
   16dcc:	cmp	r0, #0
   16dd0:	beq	16e68 <argp_failure@@Base+0x1db4>
   16dd4:	mov	r7, r0
   16dd8:	ldrb	r0, [r0]
   16ddc:	cmp	r0, #0
   16de0:	beq	16e58 <argp_failure@@Base+0x1da4>
   16de4:	mov	r0, r4
   16de8:	bl	1868c <argp_failure@@Base+0x35d8>
   16dec:	mov	r8, r0
   16df0:	ldr	r1, [sl, #20]
   16df4:	mov	r0, r4
   16df8:	bl	185d8 <argp_failure@@Base+0x3524>
   16dfc:	ldr	r1, [sl, #20]
   16e00:	mov	r0, r4
   16e04:	bl	18650 <argp_failure@@Base+0x359c>
   16e08:	ldr	r1, [sl, #20]
   16e0c:	add	r0, r1, #3
   16e10:	cmp	r8, r0
   16e14:	bls	16e28 <argp_failure@@Base+0x1d74>
   16e18:	mov	r0, r4
   16e1c:	mov	r1, #10
   16e20:	bl	18588 <argp_failure@@Base+0x34d4>
   16e24:	b	16e4c <argp_failure@@Base+0x1d98>
   16e28:	cmp	r8, r1
   16e2c:	bcs	16e3c <argp_failure@@Base+0x1d88>
   16e30:	mov	r0, r4
   16e34:	bl	1709c <argp_failure@@Base+0x1fe8>
   16e38:	b	16e4c <argp_failure@@Base+0x1d98>
   16e3c:	movw	r1, #43408	; 0xa990
   16e40:	movt	r1, #1
   16e44:	mov	r0, r4
   16e48:	bl	18544 <argp_failure@@Base+0x3490>
   16e4c:	mov	r0, r4
   16e50:	mov	r1, r7
   16e54:	bl	18544 <argp_failure@@Base+0x3490>
   16e58:	cmp	r7, r5
   16e5c:	beq	16e68 <argp_failure@@Base+0x1db4>
   16e60:	mov	r0, r7
   16e64:	bl	13e48 <argp_usage@@Base+0x18c>
   16e68:	mov	r0, r4
   16e6c:	mov	r1, #0
   16e70:	bl	185d8 <argp_failure@@Base+0x3524>
   16e74:	mov	r0, r4
   16e78:	mov	r1, #10
   16e7c:	bl	18588 <argp_failure@@Base+0x34d4>
   16e80:	ldr	r5, [sp, #8]
   16e84:	ldr	r0, [sp, #16]
   16e88:	str	r6, [r0]
   16e8c:	mov	r0, r4
   16e90:	mov	r1, r5
   16e94:	bl	185d8 <argp_failure@@Base+0x3524>
   16e98:	mov	r0, r4
   16e9c:	ldr	r1, [sp, #12]
   16ea0:	bl	18650 <argp_failure@@Base+0x359c>
   16ea4:	sub	sp, fp, #28
   16ea8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16eac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16eb0:	add	fp, sp, #24
   16eb4:	mov	r5, r1
   16eb8:	mov	r9, r0
   16ebc:	ldr	r0, [r1, #12]
   16ec0:	cmp	r0, #0
   16ec4:	beq	16f10 <argp_failure@@Base+0x1e5c>
   16ec8:	ldr	r0, [r5]
   16ecc:	ldr	r1, [r5, #8]
   16ed0:	ldr	r4, [r1]
   16ed4:	ldr	r6, [r0, #16]
   16ed8:	cmp	r4, #0
   16edc:	ldrne	r1, [r1, #4]
   16ee0:	cmpne	r1, #0
   16ee4:	bne	16f30 <argp_failure@@Base+0x1e7c>
   16ee8:	cmp	r6, #0
   16eec:	beq	16f04 <argp_failure@@Base+0x1e50>
   16ef0:	ldr	r7, [r6]
   16ef4:	cmp	r7, #0
   16ef8:	ldrbne	r0, [r7]
   16efc:	cmpne	r0, #0
   16f00:	bne	16f58 <argp_failure@@Base+0x1ea4>
   16f04:	mov	r0, #0
   16f08:	str	r0, [r5, #12]
   16f0c:	b	16f20 <argp_failure@@Base+0x1e6c>
   16f10:	ldr	r0, [r5, #4]
   16f14:	movw	r1, #43412	; 0xa994
   16f18:	movt	r1, #1
   16f1c:	bl	18544 <argp_failure@@Base+0x3490>
   16f20:	ldr	r0, [r5, #4]
   16f24:	mov	r1, r9
   16f28:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   16f2c:	b	1709c <argp_failure@@Base+0x1fe8>
   16f30:	ldr	r1, [r4, #12]
   16f34:	ldr	r0, [r0, #12]
   16f38:	cmp	r0, r1
   16f3c:	beq	16ee8 <argp_failure@@Base+0x1e34>
   16f40:	ldr	r0, [r5, #4]
   16f44:	mov	r1, #10
   16f48:	bl	18588 <argp_failure@@Base+0x34d4>
   16f4c:	cmp	r6, #0
   16f50:	bne	16ef0 <argp_failure@@Base+0x1e3c>
   16f54:	b	16f04 <argp_failure@@Base+0x1e50>
   16f58:	cmp	r4, #0
   16f5c:	beq	16f7c <argp_failure@@Base+0x1ec8>
   16f60:	ldr	r0, [r4, #16]
   16f64:	cmp	r0, r6
   16f68:	beq	16f04 <argp_failure@@Base+0x1e50>
   16f6c:	mov	r1, r6
   16f70:	bl	170e0 <argp_failure@@Base+0x202c>
   16f74:	cmp	r0, #0
   16f78:	bne	16f04 <argp_failure@@Base+0x1e50>
   16f7c:	ldr	r0, [r5, #4]
   16f80:	ldr	r8, [r0, #12]
   16f84:	ldr	r1, [r6, #16]
   16f88:	mov	r0, r7
   16f8c:	mov	r2, r5
   16f90:	bl	16fd4 <argp_failure@@Base+0x1f20>
   16f94:	ldr	r0, [r5, #4]
   16f98:	mov	r1, r8
   16f9c:	bl	18650 <argp_failure@@Base+0x359c>
   16fa0:	b	16f04 <argp_failure@@Base+0x1e50>
   16fa4:	mov	ip, r2
   16fa8:	ldr	r2, [r0, #8]
   16fac:	cmp	r2, #0
   16fb0:	bxeq	lr
   16fb4:	ldrb	r0, [r0, #12]
   16fb8:	tst	r0, #1
   16fbc:	bne	16fc8 <argp_failure@@Base+0x1f14>
   16fc0:	mov	r0, r3
   16fc4:	b	18450 <argp_failure@@Base+0x339c>
   16fc8:	mov	r0, r3
   16fcc:	mov	r1, ip
   16fd0:	b	18450 <argp_failure@@Base+0x339c>
   16fd4:	push	{r4, r5, r6, r7, fp, lr}
   16fd8:	add	fp, sp, #16
   16fdc:	mov	r5, r2
   16fe0:	mov	r2, r1
   16fe4:	mov	r4, r0
   16fe8:	ldr	r3, [r5, #16]
   16fec:	movw	r1, #3
   16ff0:	movt	r1, #512	; 0x200
   16ff4:	bl	16a94 <argp_failure@@Base+0x19e0>
   16ff8:	mov	r6, r0
   16ffc:	cmp	r0, #0
   17000:	beq	17088 <argp_failure@@Base+0x1fd4>
   17004:	ldrb	r0, [r6]
   17008:	cmp	r0, #0
   1700c:	beq	1707c <argp_failure@@Base+0x1fc8>
   17010:	ldr	r0, [r5, #8]
   17014:	ldr	r0, [r0]
   17018:	cmp	r0, #0
   1701c:	beq	1702c <argp_failure@@Base+0x1f78>
   17020:	ldr	r0, [r5, #4]
   17024:	mov	r1, #10
   17028:	bl	18588 <argp_failure@@Base+0x34d4>
   1702c:	movw	r7, #59504	; 0xe870
   17030:	movt	r7, #2
   17034:	ldr	r1, [r7, #24]
   17038:	ldr	r0, [r5, #4]
   1703c:	bl	1709c <argp_failure@@Base+0x1fe8>
   17040:	ldr	r1, [r7, #24]
   17044:	ldr	r0, [r5, #4]
   17048:	bl	185d8 <argp_failure@@Base+0x3524>
   1704c:	ldr	r0, [r5, #4]
   17050:	ldr	r1, [r7, #24]
   17054:	bl	18650 <argp_failure@@Base+0x359c>
   17058:	ldr	r0, [r5, #4]
   1705c:	mov	r1, r6
   17060:	bl	18544 <argp_failure@@Base+0x3490>
   17064:	ldr	r0, [r5, #4]
   17068:	mov	r1, #0
   1706c:	bl	185d8 <argp_failure@@Base+0x3524>
   17070:	ldr	r0, [r5, #4]
   17074:	mov	r1, #10
   17078:	bl	18588 <argp_failure@@Base+0x34d4>
   1707c:	ldr	r0, [r5, #8]
   17080:	mov	r1, #1
   17084:	str	r1, [r0, #4]
   17088:	cmp	r6, r4
   1708c:	popeq	{r4, r5, r6, r7, fp, pc}
   17090:	mov	r0, r6
   17094:	pop	{r4, r5, r6, r7, fp, lr}
   17098:	b	13e48 <argp_usage@@Base+0x18c>
   1709c:	push	{r4, r5, fp, lr}
   170a0:	add	fp, sp, #8
   170a4:	mov	r5, r1
   170a8:	mov	r4, r0
   170ac:	bl	1868c <argp_failure@@Base+0x35d8>
   170b0:	sub	r1, r5, r0
   170b4:	cmp	r1, #1
   170b8:	poplt	{r4, r5, fp, pc}
   170bc:	add	r1, r5, #1
   170c0:	sub	r5, r1, r0
   170c4:	mov	r0, r4
   170c8:	mov	r1, #32
   170cc:	bl	18588 <argp_failure@@Base+0x34d4>
   170d0:	sub	r5, r5, #1
   170d4:	cmp	r5, #1
   170d8:	bgt	170c4 <argp_failure@@Base+0x2010>
   170dc:	pop	{r4, r5, fp, pc}
   170e0:	b	170e8 <argp_failure@@Base+0x2034>
   170e4:	ldr	r0, [r0, #12]
   170e8:	cmp	r0, r1
   170ec:	cmpne	r0, #0
   170f0:	bne	170e4 <argp_failure@@Base+0x2030>
   170f4:	sub	r0, r0, r1
   170f8:	clz	r0, r0
   170fc:	lsr	r0, r0, #5
   17100:	bx	lr
   17104:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17108:	add	fp, sp, #28
   1710c:	sub	sp, sp, #28
   17110:	mvn	r8, #0
   17114:	cmp	r0, #1
   17118:	blt	17580 <argp_failure@@Base+0x24cc>
   1711c:	mov	r9, r3
   17120:	mov	sl, r2
   17124:	mov	r7, r1
   17128:	mov	r5, r0
   1712c:	ldr	r4, [fp, #16]
   17130:	ldm	r4, {r0, r6}
   17134:	mov	r1, #0
   17138:	str	r1, [r4, #12]
   1713c:	cmp	r0, #0
   17140:	ldrne	r0, [r4, #16]
   17144:	cmpne	r0, #0
   17148:	bne	17164 <argp_failure@@Base+0x20b0>
   1714c:	ldr	r2, [fp, #20]
   17150:	mov	r0, sl
   17154:	mov	r1, r4
   17158:	bl	175d4 <argp_failure@@Base+0x2520>
   1715c:	mov	sl, r0
   17160:	b	17174 <argp_failure@@Base+0x20c0>
   17164:	ldrb	r0, [sl]
   17168:	cmp	r0, #45	; 0x2d
   1716c:	cmpne	r0, #43	; 0x2b
   17170:	addeq	sl, sl, #1
   17174:	ldrb	r0, [sl]
   17178:	subs	r0, r0, #58	; 0x3a
   1717c:	movne	r0, r6
   17180:	str	r0, [sp, #24]
   17184:	ldr	r0, [r4, #20]
   17188:	cmp	r0, #0
   1718c:	ldrbne	r0, [r0]
   17190:	cmpne	r0, #0
   17194:	bne	173bc <argp_failure@@Base+0x2308>
   17198:	ldr	r0, [r4]
   1719c:	ldr	r1, [r4, #32]
   171a0:	cmp	r1, r0
   171a4:	strgt	r0, [r4, #32]
   171a8:	ldr	r1, [r4, #28]
   171ac:	cmp	r1, r0
   171b0:	strgt	r0, [r4, #28]
   171b4:	ldr	r1, [r4, #24]
   171b8:	cmp	r1, #1
   171bc:	bne	1722c <argp_failure@@Base+0x2178>
   171c0:	ldr	r2, [r4, #28]
   171c4:	ldr	r1, [r4, #32]
   171c8:	cmp	r2, r1
   171cc:	cmpne	r1, r0
   171d0:	bne	171e0 <argp_failure@@Base+0x212c>
   171d4:	cmp	r1, r0
   171d8:	strne	r0, [r4, #28]
   171dc:	b	171ec <argp_failure@@Base+0x2138>
   171e0:	mov	r0, r7
   171e4:	mov	r1, r4
   171e8:	bl	17668 <argp_failure@@Base+0x25b4>
   171ec:	ldr	r0, [r4]
   171f0:	cmp	r0, r5
   171f4:	blt	1720c <argp_failure@@Base+0x2158>
   171f8:	b	17228 <argp_failure@@Base+0x2174>
   171fc:	add	r0, r0, #1
   17200:	str	r0, [r4]
   17204:	cmp	r0, r5
   17208:	bge	17228 <argp_failure@@Base+0x2174>
   1720c:	ldr	r1, [r7, r0, lsl #2]
   17210:	ldrb	r2, [r1]
   17214:	cmp	r2, #45	; 0x2d
   17218:	bne	171fc <argp_failure@@Base+0x2148>
   1721c:	ldrb	r1, [r1, #1]
   17220:	cmp	r1, #0
   17224:	beq	171fc <argp_failure@@Base+0x2148>
   17228:	str	r0, [r4, #32]
   1722c:	ldr	r6, [r4]
   17230:	cmp	r6, r5
   17234:	beq	1728c <argp_failure@@Base+0x21d8>
   17238:	ldr	r0, [r7, r6, lsl #2]
   1723c:	movw	r1, #41656	; 0xa2b8
   17240:	movt	r1, #1
   17244:	bl	11330 <strcmp@plt>
   17248:	cmp	r0, #0
   1724c:	bne	1728c <argp_failure@@Base+0x21d8>
   17250:	add	r0, r6, #1
   17254:	str	r0, [r4]
   17258:	ldr	r1, [r4, #28]
   1725c:	ldr	r2, [r4, #32]
   17260:	cmp	r1, r2
   17264:	cmpne	r2, r0
   17268:	bne	17278 <argp_failure@@Base+0x21c4>
   1726c:	cmp	r1, r2
   17270:	streq	r0, [r4, #28]
   17274:	b	17284 <argp_failure@@Base+0x21d0>
   17278:	mov	r0, r7
   1727c:	mov	r1, r4
   17280:	bl	17668 <argp_failure@@Base+0x25b4>
   17284:	str	r5, [r4]
   17288:	str	r5, [r4, #32]
   1728c:	ldr	r2, [r4]
   17290:	cmp	r2, r5
   17294:	bne	172ac <argp_failure@@Base+0x21f8>
   17298:	ldr	r0, [r4, #28]
   1729c:	ldr	r1, [r4, #32]
   172a0:	cmp	r0, r1
   172a4:	strne	r0, [r4]
   172a8:	b	17580 <argp_failure@@Base+0x24cc>
   172ac:	ldr	r0, [r7, r2, lsl #2]
   172b0:	ldrb	r1, [r0]
   172b4:	cmp	r1, #45	; 0x2d
   172b8:	bne	1731c <argp_failure@@Base+0x2268>
   172bc:	mov	r6, r0
   172c0:	ldrb	r1, [r6, #1]!
   172c4:	cmp	r1, #0
   172c8:	beq	1731c <argp_failure@@Base+0x2268>
   172cc:	cmp	r9, #0
   172d0:	beq	173ac <argp_failure@@Base+0x22f8>
   172d4:	ldr	r8, [fp, #12]
   172d8:	cmp	r1, #45	; 0x2d
   172dc:	bne	17340 <argp_failure@@Base+0x228c>
   172e0:	add	r0, r0, #2
   172e4:	str	r0, [r4, #20]
   172e8:	movw	r0, #41656	; 0xa2b8
   172ec:	movt	r0, #1
   172f0:	ldr	r1, [fp, #8]
   172f4:	stm	sp, {r1, r8}
   172f8:	str	r4, [sp, #8]
   172fc:	ldr	r1, [sp, #24]
   17300:	str	r1, [sp, #12]
   17304:	str	r0, [sp, #16]
   17308:	mov	r0, r5
   1730c:	mov	r1, r7
   17310:	mov	r2, sl
   17314:	mov	r3, r9
   17318:	b	1755c <argp_failure@@Base+0x24a8>
   1731c:	ldr	r0, [r4, #24]
   17320:	cmp	r0, #0
   17324:	beq	17580 <argp_failure@@Base+0x24cc>
   17328:	add	r0, r2, #1
   1732c:	str	r0, [r4]
   17330:	ldr	r0, [r7, r2, lsl #2]
   17334:	str	r0, [r4, #12]
   17338:	mov	r8, #1
   1733c:	b	17580 <argp_failure@@Base+0x24cc>
   17340:	cmp	r8, #0
   17344:	beq	173ac <argp_failure@@Base+0x22f8>
   17348:	ldrb	r0, [r0, #2]
   1734c:	cmp	r0, #0
   17350:	beq	1739c <argp_failure@@Base+0x22e8>
   17354:	str	r6, [r4, #20]
   17358:	movw	r0, #41657	; 0xa2b9
   1735c:	movt	r0, #1
   17360:	ldr	r1, [fp, #8]
   17364:	stm	sp, {r1, r8}
   17368:	str	r4, [sp, #8]
   1736c:	ldr	r1, [sp, #24]
   17370:	str	r1, [sp, #12]
   17374:	str	r0, [sp, #16]
   17378:	mov	r0, r5
   1737c:	mov	r1, r7
   17380:	mov	r2, sl
   17384:	mov	r3, r9
   17388:	bl	17744 <argp_failure@@Base+0x2690>
   1738c:	mov	r8, r0
   17390:	cmn	r0, #1
   17394:	bne	17580 <argp_failure@@Base+0x24cc>
   17398:	b	173ac <argp_failure@@Base+0x22f8>
   1739c:	mov	r0, sl
   173a0:	bl	11498 <strchr@plt>
   173a4:	cmp	r0, #0
   173a8:	beq	17354 <argp_failure@@Base+0x22a0>
   173ac:	ldr	r0, [r4]
   173b0:	ldr	r0, [r7, r0, lsl #2]
   173b4:	add	r0, r0, #1
   173b8:	str	r0, [r4, #20]
   173bc:	str	r9, [sp, #20]
   173c0:	ldr	r6, [r4, #20]
   173c4:	add	r9, r6, #1
   173c8:	str	r9, [r4, #20]
   173cc:	ldrb	r8, [r6]
   173d0:	mov	r0, sl
   173d4:	mov	r1, r8
   173d8:	bl	11498 <strchr@plt>
   173dc:	ldrb	r1, [r6, #1]
   173e0:	cmp	r1, #0
   173e4:	ldreq	r1, [r4]
   173e8:	addeq	r1, r1, #1
   173ec:	streq	r1, [r4]
   173f0:	orr	r1, r8, #1
   173f4:	cmp	r1, #59	; 0x3b
   173f8:	cmpne	r0, #0
   173fc:	bne	17418 <argp_failure@@Base+0x2364>
   17400:	ldr	r0, [sp, #24]
   17404:	cmp	r0, #0
   17408:	bne	174f0 <argp_failure@@Base+0x243c>
   1740c:	str	r8, [r4, #8]
   17410:	mov	r8, #63	; 0x3f
   17414:	b	17580 <argp_failure@@Base+0x24cc>
   17418:	ldrb	r1, [r0]
   1741c:	cmp	r1, #87	; 0x57
   17420:	bne	17450 <argp_failure@@Base+0x239c>
   17424:	ldr	r1, [sp, #20]
   17428:	cmp	r1, #0
   1742c:	beq	17450 <argp_failure@@Base+0x239c>
   17430:	ldrb	r1, [r0, #1]
   17434:	cmp	r1, #59	; 0x3b
   17438:	bne	17450 <argp_failure@@Base+0x239c>
   1743c:	ldrb	r0, [r9]
   17440:	cmp	r0, #0
   17444:	beq	17498 <argp_failure@@Base+0x23e4>
   17448:	str	r9, [r4, #12]
   1744c:	b	1751c <argp_failure@@Base+0x2468>
   17450:	ldrb	r1, [r0, #1]
   17454:	cmp	r1, #58	; 0x3a
   17458:	bne	17580 <argp_failure@@Base+0x24cc>
   1745c:	ldrb	r1, [r9]
   17460:	ldrb	r0, [r0, #2]
   17464:	cmp	r0, #58	; 0x3a
   17468:	bne	1747c <argp_failure@@Base+0x23c8>
   1746c:	cmp	r1, #0
   17470:	bne	17484 <argp_failure@@Base+0x23d0>
   17474:	mov	r0, #0
   17478:	b	17574 <argp_failure@@Base+0x24c0>
   1747c:	cmp	r1, #0
   17480:	beq	174c4 <argp_failure@@Base+0x2410>
   17484:	str	r9, [r4, #12]
   17488:	ldr	r0, [r4]
   1748c:	add	r0, r0, #1
   17490:	str	r0, [r4]
   17494:	b	17578 <argp_failure@@Base+0x24c4>
   17498:	ldr	r0, [r4]
   1749c:	cmp	r0, r5
   174a0:	bne	17514 <argp_failure@@Base+0x2460>
   174a4:	ldr	r0, [sp, #24]
   174a8:	cmp	r0, #0
   174ac:	bne	1758c <argp_failure@@Base+0x24d8>
   174b0:	str	r8, [r4, #8]
   174b4:	ldrb	r8, [sl]
   174b8:	cmp	r8, #58	; 0x3a
   174bc:	movwne	r8, #63	; 0x3f
   174c0:	b	17580 <argp_failure@@Base+0x24cc>
   174c4:	ldr	r0, [r4]
   174c8:	cmp	r0, r5
   174cc:	bne	17568 <argp_failure@@Base+0x24b4>
   174d0:	ldr	r0, [sp, #24]
   174d4:	cmp	r0, #0
   174d8:	bne	175b0 <argp_failure@@Base+0x24fc>
   174dc:	str	r8, [r4, #8]
   174e0:	ldrb	r8, [sl]
   174e4:	cmp	r8, #58	; 0x3a
   174e8:	movwne	r8, #63	; 0x3f
   174ec:	b	17578 <argp_failure@@Base+0x24c4>
   174f0:	ldr	r2, [r7]
   174f4:	movw	r0, #59576	; 0xe8b8
   174f8:	movt	r0, #2
   174fc:	ldr	r0, [r0]
   17500:	movw	r1, #43559	; 0xaa27
   17504:	movt	r1, #1
   17508:	mov	r3, r8
   1750c:	bl	114a4 <fprintf@plt>
   17510:	b	1740c <argp_failure@@Base+0x2358>
   17514:	ldr	r0, [r7, r0, lsl #2]
   17518:	str	r0, [r4, #12]
   1751c:	ldr	r0, [r4, #12]
   17520:	mov	r1, #0
   17524:	str	r1, [r4, #12]
   17528:	str	r0, [r4, #20]
   1752c:	movw	r0, #43628	; 0xaa6c
   17530:	movt	r0, #1
   17534:	ldr	r2, [fp, #8]
   17538:	str	r2, [sp]
   1753c:	stmib	sp, {r1, r4}
   17540:	ldr	r1, [sp, #24]
   17544:	str	r1, [sp, #12]
   17548:	str	r0, [sp, #16]
   1754c:	mov	r0, r5
   17550:	mov	r1, r7
   17554:	mov	r2, sl
   17558:	ldr	r3, [sp, #20]
   1755c:	bl	17744 <argp_failure@@Base+0x2690>
   17560:	sub	sp, fp, #28
   17564:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17568:	add	r1, r0, #1
   1756c:	str	r1, [r4]
   17570:	ldr	r0, [r7, r0, lsl #2]
   17574:	str	r0, [r4, #12]
   17578:	mov	r0, #0
   1757c:	str	r0, [r4, #20]
   17580:	mov	r0, r8
   17584:	sub	sp, fp, #28
   17588:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1758c:	ldr	r2, [r7]
   17590:	movw	r0, #59576	; 0xe8b8
   17594:	movt	r0, #2
   17598:	ldr	r0, [r0]
   1759c:	movw	r1, #43587	; 0xaa43
   175a0:	movt	r1, #1
   175a4:	mov	r3, r8
   175a8:	bl	114a4 <fprintf@plt>
   175ac:	b	174b0 <argp_failure@@Base+0x23fc>
   175b0:	ldr	r2, [r7]
   175b4:	movw	r0, #59576	; 0xe8b8
   175b8:	movt	r0, #2
   175bc:	ldr	r0, [r0]
   175c0:	movw	r1, #43587	; 0xaa43
   175c4:	movt	r1, #1
   175c8:	mov	r3, r8
   175cc:	bl	114a4 <fprintf@plt>
   175d0:	b	174dc <argp_failure@@Base+0x2428>
   175d4:	push	{r4, r5, fp, lr}
   175d8:	add	fp, sp, #8
   175dc:	mov	r4, r1
   175e0:	mov	r5, r0
   175e4:	ldr	r0, [r1]
   175e8:	cmp	r0, #0
   175ec:	moveq	r0, #1
   175f0:	streq	r0, [r4]
   175f4:	mov	r0, #0
   175f8:	str	r0, [r4, #20]
   175fc:	ldr	r1, [r4]
   17600:	str	r1, [r4, #28]
   17604:	str	r1, [r4, #32]
   17608:	ldrb	r1, [r5]
   1760c:	cmp	r1, #43	; 0x2b
   17610:	beq	17620 <argp_failure@@Base+0x256c>
   17614:	cmp	r1, #45	; 0x2d
   17618:	bne	1762c <argp_failure@@Base+0x2578>
   1761c:	mov	r0, #2
   17620:	str	r0, [r4, #24]
   17624:	add	r5, r5, #1
   17628:	b	17650 <argp_failure@@Base+0x259c>
   1762c:	cmp	r2, #0
   17630:	bne	17648 <argp_failure@@Base+0x2594>
   17634:	movw	r0, #43632	; 0xaa70
   17638:	movt	r0, #1
   1763c:	bl	11420 <getenv@plt>
   17640:	cmp	r0, #0
   17644:	beq	17660 <argp_failure@@Base+0x25ac>
   17648:	mov	r0, #0
   1764c:	str	r0, [r4, #24]
   17650:	mov	r0, #1
   17654:	str	r0, [r4, #16]
   17658:	mov	r0, r5
   1765c:	pop	{r4, r5, fp, pc}
   17660:	mov	r0, #1
   17664:	b	1764c <argp_failure@@Base+0x2598>
   17668:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1766c:	add	fp, sp, #28
   17670:	sub	sp, sp, #8
   17674:	ldr	r2, [r1]
   17678:	ldr	r3, [r1, #28]
   1767c:	str	r3, [sp, #4]
   17680:	ldr	lr, [r1, #32]
   17684:	str	r2, [sp]
   17688:	cmp	r2, lr
   1768c:	ble	17724 <argp_failure@@Base+0x2670>
   17690:	ldr	r2, [sp, #4]
   17694:	cmp	r2, lr
   17698:	bge	17724 <argp_failure@@Base+0x2670>
   1769c:	add	r8, r0, lr, lsl #2
   176a0:	ldm	sp, {r9, sl}
   176a4:	sub	r7, lr, sl
   176a8:	sub	r5, r9, lr
   176ac:	cmp	r5, r7
   176b0:	ble	176e8 <argp_failure@@Base+0x2634>
   176b4:	cmp	r7, #1
   176b8:	blt	176e0 <argp_failure@@Base+0x262c>
   176bc:	add	r2, r0, sl, lsl #2
   176c0:	add	r5, r0, r9, lsl #2
   176c4:	mov	r6, r7
   176c8:	ldr	r4, [r5, -r6, lsl #2]
   176cc:	ldr	ip, [r2]
   176d0:	str	r4, [r2], #4
   176d4:	str	ip, [r5, -r6, lsl #2]
   176d8:	subs	r6, r6, #1
   176dc:	bne	176c8 <argp_failure@@Base+0x2614>
   176e0:	sub	r9, r9, r7
   176e4:	b	17718 <argp_failure@@Base+0x2664>
   176e8:	cmp	r5, #1
   176ec:	blt	17714 <argp_failure@@Base+0x2660>
   176f0:	add	r7, r0, sl, lsl #2
   176f4:	mov	r2, r8
   176f8:	mov	r6, r5
   176fc:	ldr	r4, [r7]
   17700:	ldr	r3, [r2]
   17704:	str	r3, [r7], #4
   17708:	str	r4, [r2], #4
   1770c:	subs	r6, r6, #1
   17710:	bne	176fc <argp_failure@@Base+0x2648>
   17714:	add	sl, sl, r5
   17718:	cmp	r9, lr
   1771c:	cmpgt	lr, sl
   17720:	bgt	176a4 <argp_failure@@Base+0x25f0>
   17724:	ldr	r0, [sp, #4]
   17728:	sub	r0, r0, lr
   1772c:	ldr	r2, [sp]
   17730:	add	r0, r0, r2
   17734:	str	r0, [r1, #28]
   17738:	str	r2, [r1, #32]
   1773c:	sub	sp, fp, #28
   17740:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17744:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17748:	add	fp, sp, #28
   1774c:	sub	sp, sp, #36	; 0x24
   17750:	mov	r6, r3
   17754:	str	r1, [sp, #12]
   17758:	stmib	sp, {r0, r2}
   1775c:	ldr	r1, [fp, #16]
   17760:	ldr	sl, [r1, #20]
   17764:	mov	r5, sl
   17768:	b	17770 <argp_failure@@Base+0x26bc>
   1776c:	add	r5, r5, #1
   17770:	ldrb	r0, [r5]
   17774:	cmp	r0, #0
   17778:	cmpne	r0, #61	; 0x3d
   1777c:	bne	1776c <argp_failure@@Base+0x26b8>
   17780:	ldr	r0, [r1, #20]
   17784:	sub	r8, r5, r0
   17788:	ldr	r9, [r6]
   1778c:	mov	r0, #0
   17790:	str	r0, [sp, #32]
   17794:	cmp	r9, #0
   17798:	mov	r4, #0
   1779c:	beq	177e0 <argp_failure@@Base+0x272c>
   177a0:	mov	r4, #0
   177a4:	mov	r7, r6
   177a8:	mov	r0, r9
   177ac:	mov	r1, sl
   177b0:	mov	r2, r8
   177b4:	bl	115ac <strncmp@plt>
   177b8:	cmp	r0, #0
   177bc:	bne	177d0 <argp_failure@@Base+0x271c>
   177c0:	mov	r0, r9
   177c4:	bl	1148c <strlen@plt>
   177c8:	cmp	r8, r0
   177cc:	beq	17a70 <argp_failure@@Base+0x29bc>
   177d0:	add	r4, r4, #1
   177d4:	ldr	r9, [r7, #16]!
   177d8:	cmp	r9, #0
   177dc:	bne	177a8 <argp_failure@@Base+0x26f4>
   177e0:	ldr	r0, [r6]
   177e4:	cmp	r0, #0
   177e8:	beq	17978 <argp_failure@@Base+0x28c4>
   177ec:	mov	sl, #0
   177f0:	mvn	r1, #0
   177f4:	str	r1, [sp, #20]
   177f8:	mov	r1, #0
   177fc:	str	r1, [sp, #28]
   17800:	mov	r1, #0
   17804:	str	r1, [sp, #16]
   17808:	mov	r1, #0
   1780c:	str	r1, [sp, #24]
   17810:	mov	r9, #0
   17814:	mov	r1, #0
   17818:	str	r1, [sp, #32]
   1781c:	ldr	r7, [fp, #16]
   17820:	b	17948 <argp_failure@@Base+0x2894>
   17824:	ldr	r0, [sp, #32]
   17828:	cmp	r0, #0
   1782c:	beq	178dc <argp_failure@@Base+0x2828>
   17830:	ldr	r0, [fp, #12]
   17834:	cmp	r0, #0
   17838:	bne	17868 <argp_failure@@Base+0x27b4>
   1783c:	add	r0, r6, r9, lsl #4
   17840:	ldr	r1, [r0, #4]
   17844:	ldr	r2, [sp, #32]
   17848:	ldr	r2, [r2, #4]
   1784c:	cmp	r2, r1
   17850:	bne	17868 <argp_failure@@Base+0x27b4>
   17854:	ldr	r1, [r0, #8]
   17858:	ldr	r2, [sp, #32]
   1785c:	ldr	r2, [r2, #8]
   17860:	cmp	r2, r1
   17864:	beq	17910 <argp_failure@@Base+0x285c>
   17868:	ldr	r0, [sp, #28]
   1786c:	cmp	r0, #0
   17870:	bne	1795c <argp_failure@@Base+0x28a8>
   17874:	ldr	r0, [fp, #20]
   17878:	cmp	r0, #0
   1787c:	beq	178ec <argp_failure@@Base+0x2838>
   17880:	mov	r0, #0
   17884:	str	r0, [sp, #28]
   17888:	ldr	r0, [sp, #24]
   1788c:	cmp	r0, #0
   17890:	bne	17900 <argp_failure@@Base+0x284c>
   17894:	mov	r0, r4
   17898:	bl	14b34 <_obstack_memory_used@@Base+0x908>
   1789c:	cmp	r0, #0
   178a0:	beq	17934 <argp_failure@@Base+0x2880>
   178a4:	mov	r1, #0
   178a8:	str	r1, [sp, #28]
   178ac:	str	r0, [sp, #24]
   178b0:	ldr	r0, [sp, #24]
   178b4:	mov	r1, #0
   178b8:	mov	r2, r4
   178bc:	bl	114d4 <memset@plt>
   178c0:	ldr	r0, [sp, #24]
   178c4:	mov	r2, #1
   178c8:	mov	r1, #1
   178cc:	str	r1, [sp, #16]
   178d0:	ldr	r1, [sp, #20]
   178d4:	strb	r2, [r0, r1]
   178d8:	b	17900 <argp_failure@@Base+0x284c>
   178dc:	add	r0, r6, sl
   178e0:	str	r0, [sp, #32]
   178e4:	str	r9, [sp, #20]
   178e8:	b	1795c <argp_failure@@Base+0x28a8>
   178ec:	mov	r0, #1
   178f0:	str	r0, [sp, #28]
   178f4:	ldr	r0, [sp, #24]
   178f8:	cmp	r0, #0
   178fc:	beq	1793c <argp_failure@@Base+0x2888>
   17900:	str	r0, [sp, #24]
   17904:	mov	r1, #1
   17908:	strb	r1, [r0, r9]
   1790c:	b	1795c <argp_failure@@Base+0x28a8>
   17910:	ldr	r1, [sp, #28]
   17914:	cmp	r1, #0
   17918:	bne	1795c <argp_failure@@Base+0x28a8>
   1791c:	ldr	r0, [r0, #12]
   17920:	ldr	r1, [sp, #32]
   17924:	ldr	r1, [r1, #12]
   17928:	cmp	r1, r0
   1792c:	bne	17874 <argp_failure@@Base+0x27c0>
   17930:	b	1795c <argp_failure@@Base+0x28a8>
   17934:	mov	r0, #1
   17938:	str	r0, [sp, #28]
   1793c:	mov	r0, #0
   17940:	str	r0, [sp, #24]
   17944:	b	1795c <argp_failure@@Base+0x28a8>
   17948:	ldr	r1, [r7, #20]
   1794c:	mov	r2, r8
   17950:	bl	115ac <strncmp@plt>
   17954:	cmp	r0, #0
   17958:	beq	17824 <argp_failure@@Base+0x2770>
   1795c:	add	r0, r6, r9, lsl #4
   17960:	ldr	r0, [r0, #16]
   17964:	add	sl, sl, #16
   17968:	add	r9, r9, #1
   1796c:	cmp	r0, #0
   17970:	bne	17948 <argp_failure@@Base+0x2894>
   17974:	b	1799c <argp_failure@@Base+0x28e8>
   17978:	mvn	r0, #0
   1797c:	str	r0, [sp, #20]
   17980:	mov	r0, #0
   17984:	str	r0, [sp, #24]
   17988:	mov	r0, #0
   1798c:	str	r0, [sp, #16]
   17990:	mov	r0, #0
   17994:	str	r0, [sp, #28]
   17998:	ldr	r7, [fp, #16]
   1799c:	ldr	r0, [sp, #24]
   179a0:	cmp	r0, #0
   179a4:	ldreq	r0, [sp, #28]
   179a8:	cmpeq	r0, #0
   179ac:	beq	179f0 <argp_failure@@Base+0x293c>
   179b0:	ldr	r0, [fp, #20]
   179b4:	cmp	r0, #0
   179b8:	bne	17b5c <argp_failure@@Base+0x2aa8>
   179bc:	ldr	r0, [sp, #16]
   179c0:	cmp	r0, #0
   179c4:	beq	179d0 <argp_failure@@Base+0x291c>
   179c8:	ldr	r0, [sp, #24]
   179cc:	bl	13e48 <argp_usage@@Base+0x18c>
   179d0:	ldr	r4, [r7, #20]
   179d4:	mov	r0, r4
   179d8:	bl	1148c <strlen@plt>
   179dc:	mov	r1, #0
   179e0:	str	r1, [r7, #8]
   179e4:	add	r0, r4, r0
   179e8:	str	r0, [r7, #20]
   179ec:	b	17a58 <argp_failure@@Base+0x29a4>
   179f0:	ldr	r0, [sp, #32]
   179f4:	cmp	r0, #0
   179f8:	bne	17a7c <argp_failure@@Base+0x29c8>
   179fc:	ldr	r0, [fp, #12]
   17a00:	cmp	r0, #0
   17a04:	beq	17a40 <argp_failure@@Base+0x298c>
   17a08:	ldr	r0, [r7]
   17a0c:	ldr	r1, [sp, #12]
   17a10:	ldr	r0, [r1, r0, lsl #2]
   17a14:	ldrb	r0, [r0, #1]
   17a18:	cmp	r0, #45	; 0x2d
   17a1c:	beq	17a40 <argp_failure@@Base+0x298c>
   17a20:	ldr	r0, [r7, #20]
   17a24:	ldrb	r1, [r0]
   17a28:	ldr	r0, [sp, #8]
   17a2c:	bl	11498 <strchr@plt>
   17a30:	mov	r1, r0
   17a34:	mvn	r0, #0
   17a38:	cmp	r1, #0
   17a3c:	bne	17b10 <argp_failure@@Base+0x2a5c>
   17a40:	ldr	r0, [fp, #20]
   17a44:	cmp	r0, #0
   17a48:	bne	17c2c <argp_failure@@Base+0x2b78>
   17a4c:	mov	r0, #0
   17a50:	str	r0, [r7, #20]
   17a54:	str	r0, [r7, #8]
   17a58:	ldr	r0, [r7]
   17a5c:	add	r0, r0, #1
   17a60:	str	r0, [r7]
   17a64:	mov	r0, #63	; 0x3f
   17a68:	sub	sp, fp, #28
   17a6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a70:	str	r4, [sp, #20]
   17a74:	mov	r0, r7
   17a78:	ldr	r7, [fp, #16]
   17a7c:	mov	r2, r0
   17a80:	mov	r0, #0
   17a84:	str	r0, [r7, #20]
   17a88:	ldr	r1, [r7]
   17a8c:	add	r0, r1, #1
   17a90:	str	r0, [r7]
   17a94:	mov	r4, r2
   17a98:	ldr	r2, [r2, #4]
   17a9c:	ldrb	r3, [r5]
   17aa0:	cmp	r3, #0
   17aa4:	beq	17abc <argp_failure@@Base+0x2a08>
   17aa8:	cmp	r2, #0
   17aac:	beq	17b18 <argp_failure@@Base+0x2a64>
   17ab0:	add	r0, r5, #1
   17ab4:	str	r0, [r7, #12]
   17ab8:	b	17ae4 <argp_failure@@Base+0x2a30>
   17abc:	cmp	r2, #1
   17ac0:	bne	17ae4 <argp_failure@@Base+0x2a30>
   17ac4:	ldr	r2, [sp, #4]
   17ac8:	cmp	r0, r2
   17acc:	bge	17b30 <argp_failure@@Base+0x2a7c>
   17ad0:	add	r1, r1, #2
   17ad4:	str	r1, [r7]
   17ad8:	ldr	r1, [sp, #12]
   17adc:	ldr	r0, [r1, r0, lsl #2]
   17ae0:	b	17ab4 <argp_failure@@Base+0x2a00>
   17ae4:	ldr	r0, [fp, #8]
   17ae8:	cmp	r0, #0
   17aec:	ldrne	r1, [sp, #20]
   17af0:	strne	r1, [r0]
   17af4:	ldr	r1, [r4, #8]
   17af8:	ldr	r0, [r4, #12]
   17afc:	cmp	r1, #0
   17b00:	strne	r0, [r1]
   17b04:	movne	r0, #0
   17b08:	subne	sp, fp, #28
   17b0c:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b10:	sub	sp, fp, #28
   17b14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b18:	ldr	r0, [fp, #20]
   17b1c:	cmp	r0, #0
   17b20:	bne	17c5c <argp_failure@@Base+0x2ba8>
   17b24:	ldr	r0, [r4, #12]
   17b28:	str	r0, [r7, #8]
   17b2c:	b	17a64 <argp_failure@@Base+0x29b0>
   17b30:	ldr	r0, [fp, #20]
   17b34:	cmp	r0, #0
   17b38:	bne	17c8c <argp_failure@@Base+0x2bd8>
   17b3c:	ldr	r0, [r4, #12]
   17b40:	str	r0, [r7, #8]
   17b44:	ldr	r0, [sp, #8]
   17b48:	ldrb	r0, [r0]
   17b4c:	cmp	r0, #58	; 0x3a
   17b50:	movwne	r0, #63	; 0x3f
   17b54:	sub	sp, fp, #28
   17b58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b5c:	movw	r5, #59576	; 0xe8b8
   17b60:	movt	r5, #2
   17b64:	ldr	r0, [r5]
   17b68:	ldr	r1, [sp, #28]
   17b6c:	cmp	r1, #0
   17b70:	beq	17b98 <argp_failure@@Base+0x2ae4>
   17b74:	ldr	r1, [sp, #12]
   17b78:	ldr	r2, [r1]
   17b7c:	ldr	r1, [r7, #20]
   17b80:	str	r1, [sp]
   17b84:	movw	r1, #43648	; 0xaa80
   17b88:	movt	r1, #1
   17b8c:	ldr	r3, [fp, #24]
   17b90:	bl	114a4 <fprintf@plt>
   17b94:	b	179bc <argp_failure@@Base+0x2908>
   17b98:	bl	11534 <flockfile@plt>
   17b9c:	ldr	r0, [sp, #12]
   17ba0:	ldr	r2, [r0]
   17ba4:	ldr	r0, [r5]
   17ba8:	ldr	r1, [r7, #20]
   17bac:	str	r1, [sp]
   17bb0:	movw	r1, #43680	; 0xaaa0
   17bb4:	movt	r1, #1
   17bb8:	ldr	r9, [fp, #24]
   17bbc:	mov	r3, r9
   17bc0:	bl	114a4 <fprintf@plt>
   17bc4:	cmp	r4, #0
   17bc8:	beq	17c10 <argp_failure@@Base+0x2b5c>
   17bcc:	movw	r8, #43727	; 0xaacf
   17bd0:	movt	r8, #1
   17bd4:	ldr	r7, [sp, #24]
   17bd8:	b	17bf4 <argp_failure@@Base+0x2b40>
   17bdc:	ldr	r3, [r6]
   17be0:	ldr	r0, [r5]
   17be4:	mov	r1, r8
   17be8:	mov	r2, r9
   17bec:	bl	114a4 <fprintf@plt>
   17bf0:	b	17c00 <argp_failure@@Base+0x2b4c>
   17bf4:	ldrb	r0, [r7]
   17bf8:	cmp	r0, #0
   17bfc:	bne	17bdc <argp_failure@@Base+0x2b28>
   17c00:	add	r6, r6, #16
   17c04:	add	r7, r7, #1
   17c08:	subs	r4, r4, #1
   17c0c:	bne	17bf4 <argp_failure@@Base+0x2b40>
   17c10:	ldr	r1, [r5]
   17c14:	mov	r0, #10
   17c18:	bl	11510 <fputc@plt>
   17c1c:	ldr	r0, [r5]
   17c20:	bl	113e4 <funlockfile@plt>
   17c24:	ldr	r7, [fp, #16]
   17c28:	b	179bc <argp_failure@@Base+0x2908>
   17c2c:	ldr	r0, [sp, #12]
   17c30:	ldr	r2, [r0]
   17c34:	movw	r0, #59576	; 0xe8b8
   17c38:	movt	r0, #2
   17c3c:	ldr	r0, [r0]
   17c40:	ldr	r1, [r7, #20]
   17c44:	str	r1, [sp]
   17c48:	movw	r1, #43735	; 0xaad7
   17c4c:	movt	r1, #1
   17c50:	ldr	r3, [fp, #24]
   17c54:	bl	114a4 <fprintf@plt>
   17c58:	b	17a4c <argp_failure@@Base+0x2998>
   17c5c:	ldr	r0, [sp, #12]
   17c60:	ldr	r2, [r0]
   17c64:	movw	r0, #59576	; 0xe8b8
   17c68:	movt	r0, #2
   17c6c:	ldr	r0, [r0]
   17c70:	ldr	r1, [r4]
   17c74:	str	r1, [sp]
   17c78:	movw	r1, #43767	; 0xaaf7
   17c7c:	movt	r1, #1
   17c80:	ldr	r3, [fp, #24]
   17c84:	bl	114a4 <fprintf@plt>
   17c88:	b	17b24 <argp_failure@@Base+0x2a70>
   17c8c:	ldr	r0, [sp, #12]
   17c90:	ldr	r2, [r0]
   17c94:	movw	r0, #59576	; 0xe8b8
   17c98:	movt	r0, #2
   17c9c:	ldr	r0, [r0]
   17ca0:	ldr	r1, [r4]
   17ca4:	str	r1, [sp]
   17ca8:	movw	r1, #43812	; 0xab24
   17cac:	movt	r1, #1
   17cb0:	ldr	r3, [fp, #24]
   17cb4:	bl	114a4 <fprintf@plt>
   17cb8:	b	17b3c <argp_failure@@Base+0x2a88>
   17cbc:	push	{r4, r5, r6, r7, fp, lr}
   17cc0:	add	fp, sp, #16
   17cc4:	sub	sp, sp, #16
   17cc8:	movw	r7, #59548	; 0xe89c
   17ccc:	movt	r7, #2
   17cd0:	ldr	r4, [r7]
   17cd4:	movw	r6, #59624	; 0xe8e8
   17cd8:	movt	r6, #2
   17cdc:	movw	r5, #59552	; 0xe8a0
   17ce0:	movt	r5, #2
   17ce4:	ldr	r5, [r5]
   17ce8:	stm	r6, {r4, r5}
   17cec:	ldr	r5, [fp, #16]
   17cf0:	str	r5, [sp, #12]
   17cf4:	str	r6, [sp, #8]
   17cf8:	ldr	r5, [fp, #12]
   17cfc:	str	r5, [sp, #4]
   17d00:	ldr	r5, [fp, #8]
   17d04:	str	r5, [sp]
   17d08:	bl	17104 <argp_failure@@Base+0x2050>
   17d0c:	ldr	r1, [r6]
   17d10:	ldr	r2, [r6, #8]
   17d14:	ldr	r3, [r6, #12]
   17d18:	str	r1, [r7]
   17d1c:	movw	r1, #59716	; 0xe944
   17d20:	movt	r1, #2
   17d24:	str	r3, [r1]
   17d28:	movw	r1, #59556	; 0xe8a4
   17d2c:	movt	r1, #2
   17d30:	str	r2, [r1]
   17d34:	sub	sp, fp, #16
   17d38:	pop	{r4, r5, r6, r7, fp, pc}
   17d3c:	push	{fp, lr}
   17d40:	mov	fp, sp
   17d44:	sub	sp, sp, #16
   17d48:	mov	ip, #1
   17d4c:	mov	r3, #0
   17d50:	str	r3, [sp]
   17d54:	stmib	sp, {r3, ip}
   17d58:	mov	r3, #0
   17d5c:	bl	17cbc <argp_failure@@Base+0x2c08>
   17d60:	mov	sp, fp
   17d64:	pop	{fp, pc}
   17d68:	push	{fp, lr}
   17d6c:	mov	fp, sp
   17d70:	bl	114b0 <__errno_location@plt>
   17d74:	mov	r1, #12
   17d78:	str	r1, [r0]
   17d7c:	mov	r0, #0
   17d80:	pop	{fp, pc}
   17d84:	b	14b34 <_obstack_memory_used@@Base+0x908>
   17d88:	cmp	r1, #0
   17d8c:	orreq	r1, r1, #1
   17d90:	b	14b64 <_obstack_memory_used@@Base+0x938>
   17d94:	b	14ae0 <_obstack_memory_used@@Base+0x8b4>
   17d98:	clz	r3, r2
   17d9c:	lsr	ip, r3, #5
   17da0:	clz	r3, r1
   17da4:	lsr	r3, r3, #5
   17da8:	orrs	r3, r3, ip
   17dac:	movwne	r1, #1
   17db0:	movwne	r2, #1
   17db4:	b	17db8 <argp_failure@@Base+0x2d04>
   17db8:	cmp	r2, #0
   17dbc:	beq	17dec <argp_failure@@Base+0x2d38>
   17dc0:	mvn	r3, #0
   17dc4:	udiv	r3, r3, r2
   17dc8:	cmp	r3, r1
   17dcc:	bcs	17dec <argp_failure@@Base+0x2d38>
   17dd0:	push	{fp, lr}
   17dd4:	mov	fp, sp
   17dd8:	bl	114b0 <__errno_location@plt>
   17ddc:	mov	r1, #12
   17de0:	str	r1, [r0]
   17de4:	mov	r0, #0
   17de8:	pop	{fp, pc}
   17dec:	mul	r1, r2, r1
   17df0:	b	14b64 <_obstack_memory_used@@Base+0x938>
   17df4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17df8:	add	fp, sp, #24
   17dfc:	mov	r8, r3
   17e00:	mov	r6, r2
   17e04:	mov	r7, r1
   17e08:	mov	r5, r0
   17e0c:	mov	r0, #36	; 0x24
   17e10:	bl	14b34 <_obstack_memory_used@@Base+0x908>
   17e14:	mov	r4, r0
   17e18:	cmp	r0, #0
   17e1c:	beq	17e58 <argp_failure@@Base+0x2da4>
   17e20:	mov	r0, #0
   17e24:	stm	r4, {r5, r7}
   17e28:	str	r6, [r4, #8]
   17e2c:	str	r8, [r4, #12]
   17e30:	str	r0, [r4, #16]
   17e34:	str	r0, [r4, #20]
   17e38:	mov	r0, #200	; 0xc8
   17e3c:	bl	14b34 <_obstack_memory_used@@Base+0x908>
   17e40:	str	r0, [r4, #24]
   17e44:	cmp	r0, #0
   17e48:	beq	17e60 <argp_failure@@Base+0x2dac>
   17e4c:	add	r1, r0, #200	; 0xc8
   17e50:	str	r0, [r4, #28]
   17e54:	str	r1, [r4, #32]
   17e58:	mov	r0, r4
   17e5c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17e60:	mov	r0, r4
   17e64:	bl	13e48 <argp_usage@@Base+0x18c>
   17e68:	mov	r4, #0
   17e6c:	mov	r0, r4
   17e70:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17e74:	push	{r4, sl, fp, lr}
   17e78:	add	fp, sp, #8
   17e7c:	mov	r4, r0
   17e80:	bl	17eb8 <argp_failure@@Base+0x2e04>
   17e84:	ldr	r0, [r4, #24]
   17e88:	ldr	r1, [r4, #28]
   17e8c:	cmp	r1, r0
   17e90:	bls	17ea4 <argp_failure@@Base+0x2df0>
   17e94:	sub	r2, r1, r0
   17e98:	ldr	r3, [r4]
   17e9c:	mov	r1, #1
   17ea0:	bl	113b4 <fwrite_unlocked@plt>
   17ea4:	ldr	r0, [r4, #24]
   17ea8:	bl	13e48 <argp_usage@@Base+0x18c>
   17eac:	mov	r0, r4
   17eb0:	pop	{r4, sl, fp, lr}
   17eb4:	b	13e48 <argp_usage@@Base+0x18c>
   17eb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ebc:	add	fp, sp, #28
   17ec0:	sub	sp, sp, #12
   17ec4:	mov	r4, r0
   17ec8:	ldr	r1, [r0, #16]
   17ecc:	ldr	r2, [r0, #24]
   17ed0:	ldr	r0, [r0, #28]
   17ed4:	add	r9, r2, r1
   17ed8:	cmp	r9, r0
   17edc:	bcs	1834c <argp_failure@@Base+0x3298>
   17ee0:	mov	sl, #0
   17ee4:	ldr	r6, [r4, #20]
   17ee8:	cmp	r6, #0
   17eec:	beq	17f3c <argp_failure@@Base+0x2e88>
   17ef0:	mov	r8, r9
   17ef4:	ldr	r9, [r4, #28]
   17ef8:	sub	r5, r9, r8
   17efc:	mov	r0, r8
   17f00:	mov	r1, #10
   17f04:	mov	r2, r5
   17f08:	bl	114ec <memchr@plt>
   17f0c:	mov	r7, r0
   17f10:	cmn	r6, #1
   17f14:	strle	sl, [r4, #20]
   17f18:	ldr	r0, [r4, #20]
   17f1c:	cmp	r7, #0
   17f20:	beq	17fb4 <argp_failure@@Base+0x2f00>
   17f24:	sub	r1, r7, r8
   17f28:	add	r1, r1, r0
   17f2c:	ldr	r2, [r4, #8]
   17f30:	cmp	r1, r2
   17f34:	bge	17fc8 <argp_failure@@Base+0x2f14>
   17f38:	b	182ac <argp_failure@@Base+0x31f8>
   17f3c:	ldr	r6, [r4, #4]
   17f40:	cmp	r6, #0
   17f44:	beq	18078 <argp_failure@@Base+0x2fc4>
   17f48:	add	r1, r0, r6
   17f4c:	ldr	r2, [r4, #32]
   17f50:	cmp	r1, r2
   17f54:	mov	r5, r6
   17f58:	bcs	17f94 <argp_failure@@Base+0x2ee0>
   17f5c:	add	r8, r9, r6
   17f60:	sub	r2, r0, r9
   17f64:	mov	r0, r8
   17f68:	mov	r1, r9
   17f6c:	bl	11348 <memmove@plt>
   17f70:	ldr	r0, [r4, #28]
   17f74:	add	r0, r0, r6
   17f78:	str	r0, [r4, #28]
   17f7c:	mov	r0, r9
   17f80:	mov	r1, #32
   17f84:	mov	r2, r6
   17f88:	bl	114d4 <memset@plt>
   17f8c:	str	r6, [r4, #20]
   17f90:	b	17ef4 <argp_failure@@Base+0x2e40>
   17f94:	ldr	r1, [r4]
   17f98:	mov	r0, #32
   17f9c:	bl	115e8 <putc_unlocked@plt>
   17fa0:	subs	r5, r5, #1
   17fa4:	bne	17f94 <argp_failure@@Base+0x2ee0>
   17fa8:	mov	r8, r9
   17fac:	str	r6, [r4, #20]
   17fb0:	b	17ef4 <argp_failure@@Base+0x2e40>
   17fb4:	add	r1, r0, r5
   17fb8:	ldr	r2, [r4, #8]
   17fbc:	cmp	r1, r2
   17fc0:	mov	r7, r9
   17fc4:	bcc	1832c <argp_failure@@Base+0x3278>
   17fc8:	str	r5, [sp, #8]
   17fcc:	ldr	r5, [r4, #8]
   17fd0:	ldr	r6, [r4, #12]
   17fd4:	cmn	r6, #1
   17fd8:	ble	18028 <argp_failure@@Base+0x2f74>
   17fdc:	str	r9, [sp, #4]
   17fe0:	sub	sl, r5, r0
   17fe4:	add	r9, r8, sl
   17fe8:	mov	r0, #0
   17fec:	cmp	sl, #0
   17ff0:	str	r6, [sp]
   17ff4:	blt	18070 <argp_failure@@Base+0x2fbc>
   17ff8:	bl	11474 <__ctype_b_loc@plt>
   17ffc:	ldr	r0, [r0]
   18000:	mov	r5, r9
   18004:	ldrb	r1, [r5]
   18008:	ldrb	r1, [r0, r1, lsl #1]
   1800c:	tst	r1, #1
   18010:	bne	18080 <argp_failure@@Base+0x2fcc>
   18014:	sub	r5, r5, #1
   18018:	cmp	r5, r8
   1801c:	bcs	18004 <argp_failure@@Base+0x2f50>
   18020:	mov	r0, #0
   18024:	b	18084 <argp_failure@@Base+0x2fd0>
   18028:	sub	r6, r5, #1
   1802c:	cmp	r7, r9
   18030:	bcs	18334 <argp_failure@@Base+0x3280>
   18034:	sub	r2, r9, r7
   18038:	sub	r0, r6, r0
   1803c:	add	r0, r8, r0
   18040:	mov	r1, r7
   18044:	bl	11348 <memmove@plt>
   18048:	ldr	r0, [r4, #20]
   1804c:	ldr	r1, [r4, #28]
   18050:	str	sl, [r4, #20]
   18054:	sub	r0, r6, r0
   18058:	add	r0, r8, r0
   1805c:	sub	r0, r7, r0
   18060:	add	r0, r1, r0
   18064:	str	r0, [r4, #28]
   18068:	add	r9, r8, r5
   1806c:	b	1831c <argp_failure@@Base+0x3268>
   18070:	mov	r5, r9
   18074:	b	18084 <argp_failure@@Base+0x2fd0>
   18078:	ldr	r6, [r4, #20]
   1807c:	b	17ef0 <argp_failure@@Base+0x2e3c>
   18080:	mov	r0, #1
   18084:	add	r6, r5, #1
   18088:	cmp	r6, r8
   1808c:	bls	180d0 <argp_failure@@Base+0x301c>
   18090:	cmp	r0, #0
   18094:	beq	1813c <argp_failure@@Base+0x3088>
   18098:	sub	r1, r5, #1
   1809c:	mov	r7, #32
   180a0:	mov	sl, #0
   180a4:	mov	r5, r1
   180a8:	cmp	r1, r8
   180ac:	bcc	18144 <argp_failure@@Base+0x3090>
   180b0:	bl	11474 <__ctype_b_loc@plt>
   180b4:	mov	r1, r5
   180b8:	ldrb	r2, [r1], #-1
   180bc:	ldr	r0, [r0]
   180c0:	ldrb	r0, [r0, r2, lsl #1]
   180c4:	tst	r0, #1
   180c8:	bne	180a4 <argp_failure@@Base+0x2ff0>
   180cc:	b	18144 <argp_failure@@Base+0x3090>
   180d0:	cmp	r9, r7
   180d4:	ldr	r5, [sp, #8]
   180d8:	bcs	1810c <argp_failure@@Base+0x3058>
   180dc:	add	r0, r8, sl
   180e0:	add	r1, r0, #1
   180e4:	mov	r9, r1
   180e8:	cmp	r1, r7
   180ec:	bcs	1810c <argp_failure@@Base+0x3058>
   180f0:	bl	11474 <__ctype_b_loc@plt>
   180f4:	mov	r1, r9
   180f8:	ldrb	r2, [r1], #1
   180fc:	ldr	r0, [r0]
   18100:	ldrb	r0, [r0, r2, lsl #1]
   18104:	tst	r0, #1
   18108:	beq	180e4 <argp_failure@@Base+0x3030>
   1810c:	cmp	r9, r7
   18110:	beq	182a8 <argp_failure@@Base+0x31f4>
   18114:	bl	11474 <__ctype_b_loc@plt>
   18118:	ldr	r0, [r0]
   1811c:	mov	r6, r9
   18120:	mov	r7, #32
   18124:	mov	sl, #0
   18128:	ldrb	r1, [r6, #1]!
   1812c:	ldrb	r1, [r0, r1, lsl #1]
   18130:	tst	r1, #1
   18134:	bne	18128 <argp_failure@@Base+0x3074>
   18138:	b	1814c <argp_failure@@Base+0x3098>
   1813c:	mov	r7, #32
   18140:	mov	sl, #0
   18144:	add	r9, r5, #1
   18148:	ldr	r5, [sp, #8]
   1814c:	ldr	r1, [sp, #4]
   18150:	add	r0, r1, #1
   18154:	cmp	r6, r0
   18158:	beq	1817c <argp_failure@@Base+0x30c8>
   1815c:	cmp	r1, r6
   18160:	bls	181f4 <argp_failure@@Base+0x3140>
   18164:	add	r0, r9, #1
   18168:	sub	r0, r6, r0
   1816c:	ldr	r1, [sp]
   18170:	cmp	r0, r1
   18174:	blt	18198 <argp_failure@@Base+0x30e4>
   18178:	b	181f4 <argp_failure@@Base+0x3140>
   1817c:	cmp	r1, r6
   18180:	bls	181f4 <argp_failure@@Base+0x3140>
   18184:	ldr	r0, [r4, #32]
   18188:	sub	r0, r0, r9
   1818c:	ldr	r1, [sp]
   18190:	cmp	r0, r1
   18194:	bgt	181f4 <argp_failure@@Base+0x3140>
   18198:	ldr	r0, [r4, #32]
   1819c:	ldr	r2, [sp, #4]
   181a0:	sub	r0, r0, r2
   181a4:	ldr	r3, [sp]
   181a8:	add	r1, r3, #1
   181ac:	cmp	r0, r1
   181b0:	ble	18200 <argp_failure@@Base+0x314c>
   181b4:	sub	sl, r2, r6
   181b8:	add	r5, r9, #1
   181bc:	add	r0, r5, r3
   181c0:	mov	r1, r6
   181c4:	mov	r2, sl
   181c8:	bl	11348 <memmove@plt>
   181cc:	ldr	r0, [r4, #12]
   181d0:	mov	r1, #10
   181d4:	strb	r1, [r9]
   181d8:	add	r6, r5, r0
   181dc:	add	r0, r6, sl
   181e0:	mov	sl, #0
   181e4:	sub	r0, r0, r8
   181e8:	mov	r9, r5
   181ec:	mov	r5, r0
   181f0:	b	18238 <argp_failure@@Base+0x3184>
   181f4:	mov	r0, #10
   181f8:	strb	r0, [r9], #1
   181fc:	b	18238 <argp_failure@@Base+0x3184>
   18200:	ldr	r0, [r4, #24]
   18204:	cmp	r9, r0
   18208:	bls	1821c <argp_failure@@Base+0x3168>
   1820c:	sub	r2, r9, r0
   18210:	ldr	r3, [r4]
   18214:	mov	r1, #1
   18218:	bl	113b4 <fwrite_unlocked@plt>
   1821c:	ldr	r1, [r4]
   18220:	mov	r0, #10
   18224:	bl	115e8 <putc_unlocked@plt>
   18228:	ldr	r9, [r4, #24]
   1822c:	ldr	r0, [sp, #4]
   18230:	sub	r5, r0, r9
   18234:	mov	r8, r9
   18238:	sub	r1, r6, r9
   1823c:	ldr	r0, [r4, #12]
   18240:	cmp	r1, r0
   18244:	bge	182bc <argp_failure@@Base+0x3208>
   18248:	add	r1, r8, r5
   1824c:	add	r1, r1, #1
   18250:	cmp	r6, r1
   18254:	bne	18268 <argp_failure@@Base+0x31b4>
   18258:	ldr	r1, [r4, #32]
   1825c:	sub	r1, r1, r6
   18260:	cmp	r1, r0
   18264:	bge	182b8 <argp_failure@@Base+0x3204>
   18268:	ldr	r0, [r4, #12]
   1826c:	cmp	r0, #1
   18270:	blt	182e0 <argp_failure@@Base+0x322c>
   18274:	mov	r7, r5
   18278:	mov	r5, #0
   1827c:	ldr	r1, [r4]
   18280:	mov	r0, #32
   18284:	bl	115e8 <putc_unlocked@plt>
   18288:	add	r5, r5, #1
   1828c:	ldr	r0, [r4, #12]
   18290:	cmp	r5, r0
   18294:	blt	1827c <argp_failure@@Base+0x31c8>
   18298:	mov	r5, r7
   1829c:	cmp	r9, r6
   182a0:	bcc	182e8 <argp_failure@@Base+0x3234>
   182a4:	b	182fc <argp_failure@@Base+0x3248>
   182a8:	mov	sl, #0
   182ac:	str	sl, [r4, #20]
   182b0:	add	r9, r7, #1
   182b4:	b	1831c <argp_failure@@Base+0x3268>
   182b8:	ldr	r0, [r4, #12]
   182bc:	cmp	r0, #1
   182c0:	blt	182e0 <argp_failure@@Base+0x322c>
   182c4:	mov	r0, #0
   182c8:	strb	r7, [r9, r0]
   182cc:	add	r0, r0, #1
   182d0:	ldr	r1, [r4, #12]
   182d4:	cmp	r0, r1
   182d8:	blt	182c8 <argp_failure@@Base+0x3214>
   182dc:	add	r9, r9, r0
   182e0:	cmp	r9, r6
   182e4:	bcs	182fc <argp_failure@@Base+0x3248>
   182e8:	add	r0, r8, r5
   182ec:	sub	r2, r0, r6
   182f0:	mov	r0, r9
   182f4:	mov	r1, r6
   182f8:	bl	11348 <memmove@plt>
   182fc:	sub	r0, r5, r6
   18300:	add	r0, r0, r8
   18304:	add	r0, r9, r0
   18308:	str	r0, [r4, #28]
   1830c:	ldr	r0, [r4, #12]
   18310:	cmp	r0, #0
   18314:	mvneq	r0, #0
   18318:	str	r0, [r4, #20]
   1831c:	ldr	r0, [r4, #28]
   18320:	cmp	r9, r0
   18324:	bcc	17ee4 <argp_failure@@Base+0x2e30>
   18328:	b	1834c <argp_failure@@Base+0x3298>
   1832c:	str	r1, [r4, #20]
   18330:	b	1834c <argp_failure@@Base+0x3298>
   18334:	ldr	r1, [sp, #8]
   18338:	add	r0, r0, r1
   1833c:	str	r0, [r4, #20]
   18340:	sub	r0, r6, r0
   18344:	add	r0, r9, r0
   18348:	str	r0, [r4, #28]
   1834c:	ldr	r0, [r4, #24]
   18350:	ldr	r1, [r4, #28]
   18354:	sub	r0, r1, r0
   18358:	str	r0, [r4, #16]
   1835c:	sub	sp, fp, #28
   18360:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18364:	push	{r4, r5, r6, sl, fp, lr}
   18368:	add	fp, sp, #16
   1836c:	mov	r6, r1
   18370:	mov	r4, r0
   18374:	ldr	r0, [r0, #28]
   18378:	ldr	r1, [r4, #32]
   1837c:	sub	r0, r1, r0
   18380:	mov	r5, #1
   18384:	cmp	r0, r6
   18388:	bcs	18448 <argp_failure@@Base+0x3394>
   1838c:	mov	r0, r4
   18390:	bl	17eb8 <argp_failure@@Base+0x2e04>
   18394:	ldr	r3, [r4]
   18398:	ldr	r0, [r4, #24]
   1839c:	ldr	r1, [r4, #28]
   183a0:	sub	r2, r1, r0
   183a4:	mov	r5, #1
   183a8:	mov	r1, #1
   183ac:	bl	113b4 <fwrite_unlocked@plt>
   183b0:	mov	r1, r0
   183b4:	ldr	r0, [r4, #24]
   183b8:	ldr	r2, [r4, #28]
   183bc:	sub	r3, r2, r0
   183c0:	cmp	r1, r3
   183c4:	bne	18414 <argp_failure@@Base+0x3360>
   183c8:	mov	r1, #0
   183cc:	str	r1, [r4, #16]
   183d0:	str	r0, [r4, #28]
   183d4:	ldr	r1, [r4, #32]
   183d8:	sub	r1, r1, r0
   183dc:	cmp	r1, r6
   183e0:	bcs	18448 <argp_failure@@Base+0x3394>
   183e4:	adds	r6, r1, r6
   183e8:	bcs	18438 <argp_failure@@Base+0x3384>
   183ec:	mov	r1, r6
   183f0:	bl	14b64 <_obstack_memory_used@@Base+0x938>
   183f4:	cmp	r0, #0
   183f8:	beq	18438 <argp_failure@@Base+0x3384>
   183fc:	add	r1, r0, r6
   18400:	str	r0, [r4, #24]
   18404:	str	r0, [r4, #28]
   18408:	str	r1, [r4, #32]
   1840c:	mov	r0, r5
   18410:	pop	{r4, r5, r6, sl, fp, pc}
   18414:	sub	r2, r2, r1
   18418:	str	r2, [r4, #28]
   1841c:	ldr	r3, [r4, #16]
   18420:	sub	r3, r3, r1
   18424:	str	r3, [r4, #16]
   18428:	add	r1, r0, r1
   1842c:	sub	r2, r2, r0
   18430:	bl	11348 <memmove@plt>
   18434:	b	18444 <argp_failure@@Base+0x3390>
   18438:	bl	114b0 <__errno_location@plt>
   1843c:	mov	r1, #12
   18440:	str	r1, [r0]
   18444:	mov	r5, #0
   18448:	mov	r0, r5
   1844c:	pop	{r4, r5, r6, sl, fp, pc}
   18450:	sub	sp, sp, #8
   18454:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18458:	add	fp, sp, #24
   1845c:	sub	sp, sp, #8
   18460:	mov	r8, r1
   18464:	mov	r4, r0
   18468:	str	r3, [fp, #12]
   1846c:	str	r2, [fp, #8]
   18470:	mov	r6, #150	; 0x96
   18474:	add	r7, fp, #8
   18478:	mov	r0, r4
   1847c:	mov	r1, r6
   18480:	bl	18364 <argp_failure@@Base+0x32b0>
   18484:	cmp	r0, #0
   18488:	beq	184c8 <argp_failure@@Base+0x3414>
   1848c:	str	r7, [sp, #4]
   18490:	ldr	r0, [r4, #28]
   18494:	ldr	r1, [r4, #32]
   18498:	sub	r5, r1, r0
   1849c:	mov	r1, r5
   184a0:	mov	r2, r8
   184a4:	mov	r3, r7
   184a8:	bl	11540 <vsnprintf@plt>
   184ac:	cmp	r0, r5
   184b0:	addcs	r6, r0, #1
   184b4:	bcs	18478 <argp_failure@@Base+0x33c4>
   184b8:	ldr	r1, [r4, #28]
   184bc:	add	r1, r1, r0
   184c0:	str	r1, [r4, #28]
   184c4:	b	184cc <argp_failure@@Base+0x3418>
   184c8:	mvn	r0, #0
   184cc:	sub	sp, fp, #24
   184d0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   184d4:	add	sp, sp, #8
   184d8:	bx	lr
   184dc:	push	{r4, r5, r6, sl, fp, lr}
   184e0:	add	fp, sp, #16
   184e4:	mov	r4, r2
   184e8:	mov	r6, r1
   184ec:	mov	r5, r0
   184f0:	ldr	r0, [r0, #28]
   184f4:	ldr	r1, [r5, #32]
   184f8:	add	r0, r0, r2
   184fc:	cmp	r0, r1
   18500:	bls	18520 <argp_failure@@Base+0x346c>
   18504:	mov	r0, r5
   18508:	mov	r1, r4
   1850c:	bl	18364 <argp_failure@@Base+0x32b0>
   18510:	cmp	r0, #0
   18514:	moveq	r4, #0
   18518:	moveq	r0, r4
   1851c:	popeq	{r4, r5, r6, sl, fp, pc}
   18520:	ldr	r0, [r5, #28]
   18524:	mov	r1, r6
   18528:	mov	r2, r4
   1852c:	bl	1139c <memcpy@plt>
   18530:	ldr	r0, [r5, #28]
   18534:	add	r0, r0, r4
   18538:	str	r0, [r5, #28]
   1853c:	mov	r0, r4
   18540:	pop	{r4, r5, r6, sl, fp, pc}
   18544:	push	{r4, r5, r6, sl, fp, lr}
   18548:	add	fp, sp, #16
   1854c:	mov	r4, r1
   18550:	mov	r6, r0
   18554:	mov	r0, r1
   18558:	bl	1148c <strlen@plt>
   1855c:	cmp	r0, #0
   18560:	moveq	r0, #0
   18564:	popeq	{r4, r5, r6, sl, fp, pc}
   18568:	mov	r5, r0
   1856c:	mov	r0, r6
   18570:	mov	r1, r4
   18574:	mov	r2, r5
   18578:	bl	184dc <argp_failure@@Base+0x3428>
   1857c:	subs	r0, r0, r5
   18580:	mvnne	r0, #0
   18584:	pop	{r4, r5, r6, sl, fp, pc}
   18588:	push	{r4, r5, fp, lr}
   1858c:	add	fp, sp, #8
   18590:	mov	r4, r1
   18594:	mov	r5, r0
   18598:	ldr	r0, [r0, #28]
   1859c:	ldr	r1, [r5, #32]
   185a0:	cmp	r0, r1
   185a4:	bcc	185c0 <argp_failure@@Base+0x350c>
   185a8:	mov	r0, r5
   185ac:	mov	r1, #1
   185b0:	bl	18364 <argp_failure@@Base+0x32b0>
   185b4:	cmp	r0, #0
   185b8:	mvneq	r0, #0
   185bc:	popeq	{r4, r5, fp, pc}
   185c0:	ldr	r0, [r5, #28]
   185c4:	add	r1, r0, #1
   185c8:	str	r1, [r5, #28]
   185cc:	strb	r4, [r0]
   185d0:	uxtb	r0, r4
   185d4:	pop	{r4, r5, fp, pc}
   185d8:	push	{r4, r5, fp, lr}
   185dc:	add	fp, sp, #8
   185e0:	mov	r4, r1
   185e4:	mov	r5, r0
   185e8:	ldr	r0, [r0, #16]
   185ec:	ldr	r1, [r5, #24]
   185f0:	ldr	r2, [r5, #28]
   185f4:	sub	r1, r2, r1
   185f8:	cmp	r1, r0
   185fc:	bls	18608 <argp_failure@@Base+0x3554>
   18600:	mov	r0, r5
   18604:	bl	17eb8 <argp_failure@@Base+0x2e04>
   18608:	ldr	r0, [r5, #4]
   1860c:	str	r4, [r5, #4]
   18610:	pop	{r4, r5, fp, pc}
   18614:	push	{r4, r5, fp, lr}
   18618:	add	fp, sp, #8
   1861c:	mov	r4, r1
   18620:	mov	r5, r0
   18624:	ldr	r0, [r0, #16]
   18628:	ldr	r1, [r5, #24]
   1862c:	ldr	r2, [r5, #28]
   18630:	sub	r1, r2, r1
   18634:	cmp	r1, r0
   18638:	bls	18644 <argp_failure@@Base+0x3590>
   1863c:	mov	r0, r5
   18640:	bl	17eb8 <argp_failure@@Base+0x2e04>
   18644:	ldr	r0, [r5, #8]
   18648:	str	r4, [r5, #8]
   1864c:	pop	{r4, r5, fp, pc}
   18650:	push	{r4, r5, fp, lr}
   18654:	add	fp, sp, #8
   18658:	mov	r4, r1
   1865c:	mov	r5, r0
   18660:	ldr	r0, [r0, #16]
   18664:	ldr	r1, [r5, #24]
   18668:	ldr	r2, [r5, #28]
   1866c:	sub	r1, r2, r1
   18670:	cmp	r1, r0
   18674:	bls	18680 <argp_failure@@Base+0x35cc>
   18678:	mov	r0, r5
   1867c:	bl	17eb8 <argp_failure@@Base+0x2e04>
   18680:	ldr	r0, [r5, #12]
   18684:	str	r4, [r5, #12]
   18688:	pop	{r4, r5, fp, pc}
   1868c:	push	{r4, sl, fp, lr}
   18690:	add	fp, sp, #8
   18694:	mov	r4, r0
   18698:	ldr	r0, [r0, #16]
   1869c:	ldr	r1, [r4, #24]
   186a0:	ldr	r2, [r4, #28]
   186a4:	sub	r1, r2, r1
   186a8:	cmp	r1, r0
   186ac:	bls	186b8 <argp_failure@@Base+0x3604>
   186b0:	mov	r0, r4
   186b4:	bl	17eb8 <argp_failure@@Base+0x2e04>
   186b8:	ldr	r0, [r4, #20]
   186bc:	bic	r0, r0, r0, asr #31
   186c0:	pop	{r4, sl, fp, pc}
   186c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   186c8:	mov	r7, r0
   186cc:	ldr	r6, [pc, #72]	; 1871c <argp_failure@@Base+0x3668>
   186d0:	ldr	r5, [pc, #72]	; 18720 <argp_failure@@Base+0x366c>
   186d4:	add	r6, pc, r6
   186d8:	add	r5, pc, r5
   186dc:	sub	r6, r6, r5
   186e0:	mov	r8, r1
   186e4:	mov	r9, r2
   186e8:	bl	112e0 <fdopen@plt-0x20>
   186ec:	asrs	r6, r6, #2
   186f0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   186f4:	mov	r4, #0
   186f8:	add	r4, r4, #1
   186fc:	ldr	r3, [r5], #4
   18700:	mov	r2, r9
   18704:	mov	r1, r8
   18708:	mov	r0, r7
   1870c:	blx	r3
   18710:	cmp	r6, r4
   18714:	bne	186f8 <argp_failure@@Base+0x3644>
   18718:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1871c:	andeq	r2, r1, r0, lsr r8
   18720:	andeq	r2, r1, r8, lsr #16
   18724:	bx	lr

Disassembly of section .fini:

00018728 <.fini>:
   18728:	push	{r3, lr}
   1872c:	pop	{r3, pc}
