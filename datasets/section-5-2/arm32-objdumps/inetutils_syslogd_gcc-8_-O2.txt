
../repos/inetutils/src/syslogd:     file format elf32-littlearm


Disassembly of section .init:

00011610 <.init>:
   11610:	push	{r3, lr}
   11614:	bl	1287c <__assert_fail@plt+0xd9c>
   11618:	pop	{r3, pc}

Disassembly of section .plt:

0001161c <calloc@plt-0x14>:
   1161c:	push	{lr}		; (str lr, [sp, #-4]!)
   11620:	ldr	lr, [pc, #4]	; 1162c <calloc@plt-0x4>
   11624:	add	lr, pc, lr
   11628:	ldr	pc, [lr, #8]!
   1162c:	ldrdeq	sp, [r1], -r4

00011630 <calloc@plt>:
   11630:	add	ip, pc, #0, 12
   11634:	add	ip, ip, #118784	; 0x1d000
   11638:	ldr	pc, [ip, #2516]!	; 0x9d4

0001163c <fputs_unlocked@plt>:
   1163c:	add	ip, pc, #0, 12
   11640:	add	ip, ip, #118784	; 0x1d000
   11644:	ldr	pc, [ip, #2508]!	; 0x9cc

00011648 <fsync@plt>:
   11648:	add	ip, pc, #0, 12
   1164c:	add	ip, ip, #118784	; 0x1d000
   11650:	ldr	pc, [ip, #2500]!	; 0x9c4

00011654 <strcmp@plt>:
   11654:	add	ip, pc, #0, 12
   11658:	add	ip, ip, #118784	; 0x1d000
   1165c:	ldr	pc, [ip, #2492]!	; 0x9bc

00011660 <strtol@plt>:
   11660:	add	ip, pc, #0, 12
   11664:	add	ip, ip, #118784	; 0x1d000
   11668:	ldr	pc, [ip, #2484]!	; 0x9b4

0001166c <setsockopt@plt>:
   1166c:	add	ip, pc, #0, 12
   11670:	add	ip, ip, #118784	; 0x1d000
   11674:	ldr	pc, [ip, #2476]!	; 0x9ac

00011678 <pause@plt>:
   11678:	add	ip, pc, #0, 12
   1167c:	add	ip, ip, #118784	; 0x1d000
   11680:	ldr	pc, [ip, #2468]!	; 0x9a4

00011684 <printf@plt>:
   11684:	add	ip, pc, #0, 12
   11688:	add	ip, ip, #118784	; 0x1d000
   1168c:	ldr	pc, [ip, #2460]!	; 0x99c

00011690 <read@plt>:
   11690:	add	ip, pc, #0, 12
   11694:	add	ip, ip, #118784	; 0x1d000
   11698:	ldr	pc, [ip, #2452]!	; 0x994

0001169c <fflush@plt>:
   1169c:	add	ip, pc, #0, 12
   116a0:	add	ip, ip, #118784	; 0x1d000
   116a4:	ldr	pc, [ip, #2444]!	; 0x98c

000116a8 <utmpxname@plt>:
   116a8:	add	ip, pc, #0, 12
   116ac:	add	ip, ip, #118784	; 0x1d000
   116b0:	ldr	pc, [ip, #2436]!	; 0x984

000116b4 <sigprocmask@plt>:
   116b4:	add	ip, pc, #0, 12
   116b8:	add	ip, ip, #118784	; 0x1d000
   116bc:	ldr	pc, [ip, #2428]!	; 0x97c

000116c0 <memmove@plt>:
   116c0:	add	ip, pc, #0, 12
   116c4:	add	ip, ip, #118784	; 0x1d000
   116c8:	ldr	pc, [ip, #2420]!	; 0x974

000116cc <strchrnul@plt>:
   116cc:	add	ip, pc, #0, 12
   116d0:	add	ip, ip, #118784	; 0x1d000
   116d4:	ldr	pc, [ip, #2412]!	; 0x96c

000116d8 <free@plt>:
   116d8:	add	ip, pc, #0, 12
   116dc:	add	ip, ip, #118784	; 0x1d000
   116e0:	ldr	pc, [ip, #2404]!	; 0x964

000116e4 <gai_strerror@plt>:
   116e4:	add	ip, pc, #0, 12
   116e8:	add	ip, ip, #118784	; 0x1d000
   116ec:	ldr	pc, [ip, #2396]!	; 0x95c

000116f0 <fgets@plt>:
   116f0:	add	ip, pc, #0, 12
   116f4:	add	ip, ip, #118784	; 0x1d000
   116f8:	ldr	pc, [ip, #2388]!	; 0x954

000116fc <strndup@plt>:
   116fc:	add	ip, pc, #0, 12
   11700:	add	ip, ip, #118784	; 0x1d000
   11704:	ldr	pc, [ip, #2380]!	; 0x94c

00011708 <_exit@plt>:
   11708:	add	ip, pc, #0, 12
   1170c:	add	ip, ip, #118784	; 0x1d000
   11710:	ldr	pc, [ip, #2372]!	; 0x944

00011714 <memcpy@plt>:
   11714:	add	ip, pc, #0, 12
   11718:	add	ip, ip, #118784	; 0x1d000
   1171c:	ldr	pc, [ip, #2364]!	; 0x93c

00011720 <signal@plt>:
   11720:	add	ip, pc, #0, 12
   11724:	add	ip, ip, #118784	; 0x1d000
   11728:	ldr	pc, [ip, #2356]!	; 0x934

0001172c <time@plt>:
   1172c:	add	ip, pc, #0, 12
   11730:	add	ip, ip, #118784	; 0x1d000
   11734:	ldr	pc, [ip, #2348]!	; 0x92c

00011738 <fwrite_unlocked@plt>:
   11738:	add	ip, pc, #0, 12
   1173c:	add	ip, ip, #118784	; 0x1d000
   11740:	ldr	pc, [ip, #2340]!	; 0x924

00011744 <sleep@plt>:
   11744:	add	ip, pc, #0, 12
   11748:	add	ip, ip, #118784	; 0x1d000
   1174c:	ldr	pc, [ip, #2332]!	; 0x91c

00011750 <stpcpy@plt>:
   11750:	add	ip, pc, #0, 12
   11754:	add	ip, ip, #118784	; 0x1d000
   11758:	ldr	pc, [ip, #2324]!	; 0x914

0001175c <ctime@plt>:
   1175c:	add	ip, pc, #0, 12
   11760:	add	ip, ip, #118784	; 0x1d000
   11764:	ldr	pc, [ip, #2316]!	; 0x90c

00011768 <recvfrom@plt>:
   11768:	add	ip, pc, #0, 12
   1176c:	add	ip, ip, #118784	; 0x1d000
   11770:	ldr	pc, [ip, #2308]!	; 0x904

00011774 <strdup@plt>:
   11774:	add	ip, pc, #0, 12
   11778:	add	ip, ip, #118784	; 0x1d000
   1177c:	ldr	pc, [ip, #2300]!	; 0x8fc

00011780 <setutxent@plt>:
   11780:	add	ip, pc, #0, 12
   11784:	add	ip, ip, #118784	; 0x1d000
   11788:	ldr	pc, [ip, #2292]!	; 0x8f4

0001178c <alarm@plt>:
   1178c:	add	ip, pc, #0, 12
   11790:	add	ip, ip, #118784	; 0x1d000
   11794:	ldr	pc, [ip, #2284]!	; 0x8ec

00011798 <sysconf@plt>:
   11798:	add	ip, pc, #0, 12
   1179c:	add	ip, ip, #118784	; 0x1d000
   117a0:	ldr	pc, [ip, #2276]!	; 0x8e4

000117a4 <unlink@plt>:
   117a4:	add	ip, pc, #0, 12
   117a8:	add	ip, ip, #118784	; 0x1d000
   117ac:	ldr	pc, [ip, #2268]!	; 0x8dc

000117b0 <dup2@plt>:
   117b0:	add	ip, pc, #0, 12
   117b4:	add	ip, ip, #118784	; 0x1d000
   117b8:	ldr	pc, [ip, #2260]!	; 0x8d4

000117bc <realloc@plt>:
   117bc:	add	ip, pc, #0, 12
   117c0:	add	ip, ip, #118784	; 0x1d000
   117c4:	ldr	pc, [ip, #2252]!	; 0x8cc

000117c8 <chdir@plt>:
   117c8:	add	ip, pc, #0, 12
   117cc:	add	ip, ip, #118784	; 0x1d000
   117d0:	ldr	pc, [ip, #2244]!	; 0x8c4

000117d4 <strcasecmp@plt>:
   117d4:	add	ip, pc, #0, 12
   117d8:	add	ip, ip, #118784	; 0x1d000
   117dc:	ldr	pc, [ip, #2236]!	; 0x8bc

000117e0 <funlockfile@plt>:
   117e0:	add	ip, pc, #0, 12
   117e4:	add	ip, ip, #118784	; 0x1d000
   117e8:	ldr	pc, [ip, #2228]!	; 0x8b4

000117ec <poll@plt>:
   117ec:	add	ip, pc, #0, 12
   117f0:	add	ip, ip, #118784	; 0x1d000
   117f4:	ldr	pc, [ip, #2220]!	; 0x8ac

000117f8 <sigaction@plt>:
   117f8:	add	ip, pc, #0, 12
   117fc:	add	ip, ip, #118784	; 0x1d000
   11800:	ldr	pc, [ip, #2212]!	; 0x8a4

00011804 <fwrite@plt>:
   11804:	add	ip, pc, #0, 12
   11808:	add	ip, ip, #118784	; 0x1d000
   1180c:	ldr	pc, [ip, #2204]!	; 0x89c

00011810 <waitpid@plt>:
   11810:	add	ip, pc, #0, 12
   11814:	add	ip, ip, #118784	; 0x1d000
   11818:	ldr	pc, [ip, #2196]!	; 0x894

0001181c <strcpy@plt>:
   1181c:	add	ip, pc, #0, 12
   11820:	add	ip, ip, #118784	; 0x1d000
   11824:	ldr	pc, [ip, #2188]!	; 0x88c

00011828 <error@plt>:
   11828:	add	ip, pc, #0, 12
   1182c:	add	ip, ip, #118784	; 0x1d000
   11830:	ldr	pc, [ip, #2180]!	; 0x884

00011834 <gethostname@plt>:
   11834:	add	ip, pc, #0, 12
   11838:	add	ip, ip, #118784	; 0x1d000
   1183c:	ldr	pc, [ip, #2172]!	; 0x87c

00011840 <opendir@plt>:
   11840:	add	ip, pc, #0, 12
   11844:	add	ip, ip, #118784	; 0x1d000
   11848:	ldr	pc, [ip, #2164]!	; 0x874

0001184c <open64@plt>:
   1184c:	add	ip, pc, #0, 12
   11850:	add	ip, ip, #118784	; 0x1d000
   11854:	ldr	pc, [ip, #2156]!	; 0x86c

00011858 <getenv@plt>:
   11858:	add	ip, pc, #0, 12
   1185c:	add	ip, ip, #118784	; 0x1d000
   11860:	ldr	pc, [ip, #2148]!	; 0x864

00011864 <malloc@plt>:
   11864:	add	ip, pc, #0, 12
   11868:	add	ip, ip, #118784	; 0x1d000
   1186c:	ldr	pc, [ip, #2140]!	; 0x85c

00011870 <sigaddset@plt>:
   11870:	add	ip, pc, #0, 12
   11874:	add	ip, ip, #118784	; 0x1d000
   11878:	ldr	pc, [ip, #2132]!	; 0x854

0001187c <__libc_start_main@plt>:
   1187c:	add	ip, pc, #0, 12
   11880:	add	ip, ip, #118784	; 0x1d000
   11884:	ldr	pc, [ip, #2124]!	; 0x84c

00011888 <strerror@plt>:
   11888:	add	ip, pc, #0, 12
   1188c:	add	ip, ip, #118784	; 0x1d000
   11890:	ldr	pc, [ip, #2116]!	; 0x844

00011894 <__ctype_tolower_loc@plt>:
   11894:	add	ip, pc, #0, 12
   11898:	add	ip, ip, #118784	; 0x1d000
   1189c:	ldr	pc, [ip, #2108]!	; 0x83c

000118a0 <__gmon_start__@plt>:
   118a0:	add	ip, pc, #0, 12
   118a4:	add	ip, ip, #118784	; 0x1d000
   118a8:	ldr	pc, [ip, #2100]!	; 0x834

000118ac <mempcpy@plt>:
   118ac:	add	ip, pc, #0, 12
   118b0:	add	ip, ip, #118784	; 0x1d000
   118b4:	ldr	pc, [ip, #2092]!	; 0x82c

000118b8 <kill@plt>:
   118b8:	add	ip, pc, #0, 12
   118bc:	add	ip, ip, #118784	; 0x1d000
   118c0:	ldr	pc, [ip, #2084]!	; 0x824

000118c4 <__ctype_b_loc@plt>:
   118c4:	add	ip, pc, #0, 12
   118c8:	add	ip, ip, #118784	; 0x1d000
   118cc:	ldr	pc, [ip, #2076]!	; 0x81c

000118d0 <getpid@plt>:
   118d0:	add	ip, pc, #0, 12
   118d4:	add	ip, ip, #118784	; 0x1d000
   118d8:	ldr	pc, [ip, #2068]!	; 0x814

000118dc <exit@plt>:
   118dc:	add	ip, pc, #0, 12
   118e0:	add	ip, ip, #118784	; 0x1d000
   118e4:	ldr	pc, [ip, #2060]!	; 0x80c

000118e8 <strlen@plt>:
   118e8:	add	ip, pc, #0, 12
   118ec:	add	ip, ip, #118784	; 0x1d000
   118f0:	ldr	pc, [ip, #2052]!	; 0x804

000118f4 <setsid@plt>:
   118f4:	add	ip, pc, #0, 12
   118f8:	add	ip, ip, #118784	; 0x1d000
   118fc:	ldr	pc, [ip, #2044]!	; 0x7fc

00011900 <strchr@plt>:
   11900:	add	ip, pc, #0, 12
   11904:	add	ip, ip, #118784	; 0x1d000
   11908:	ldr	pc, [ip, #2036]!	; 0x7f4

0001190c <fprintf@plt>:
   1190c:	add	ip, pc, #0, 12
   11910:	add	ip, ip, #118784	; 0x1d000
   11914:	ldr	pc, [ip, #2028]!	; 0x7ec

00011918 <__errno_location@plt>:
   11918:	add	ip, pc, #0, 12
   1191c:	add	ip, ip, #118784	; 0x1d000
   11920:	ldr	pc, [ip, #2020]!	; 0x7e4

00011924 <snprintf@plt>:
   11924:	add	ip, pc, #0, 12
   11928:	add	ip, ip, #118784	; 0x1d000
   1192c:	ldr	pc, [ip, #2012]!	; 0x7dc

00011930 <strerror_r@plt>:
   11930:	add	ip, pc, #0, 12
   11934:	add	ip, ip, #118784	; 0x1d000
   11938:	ldr	pc, [ip, #2004]!	; 0x7d4

0001193c <bind@plt>:
   1193c:	add	ip, pc, #0, 12
   11940:	add	ip, ip, #118784	; 0x1d000
   11944:	ldr	pc, [ip, #1996]!	; 0x7cc

00011948 <setvbuf@plt>:
   11948:	add	ip, pc, #0, 12
   1194c:	add	ip, ip, #118784	; 0x1d000
   11950:	ldr	pc, [ip, #1988]!	; 0x7c4

00011954 <memset@plt>:
   11954:	add	ip, pc, #0, 12
   11958:	add	ip, ip, #118784	; 0x1d000
   1195c:	ldr	pc, [ip, #1980]!	; 0x7bc

00011960 <strncpy@plt>:
   11960:	add	ip, pc, #0, 12
   11964:	add	ip, ip, #118784	; 0x1d000
   11968:	ldr	pc, [ip, #1972]!	; 0x7b4

0001196c <asprintf@plt>:
   1196c:	add	ip, pc, #0, 12
   11970:	add	ip, ip, #118784	; 0x1d000
   11974:	ldr	pc, [ip, #1964]!	; 0x7ac

00011978 <memchr@plt>:
   11978:	add	ip, pc, #0, 12
   1197c:	add	ip, ip, #118784	; 0x1d000
   11980:	ldr	pc, [ip, #1956]!	; 0x7a4

00011984 <writev@plt>:
   11984:	add	ip, pc, #0, 12
   11988:	add	ip, ip, #118784	; 0x1d000
   1198c:	ldr	pc, [ip, #1948]!	; 0x79c

00011990 <fclose@plt>:
   11990:	add	ip, pc, #0, 12
   11994:	add	ip, ip, #118784	; 0x1d000
   11998:	ldr	pc, [ip, #1940]!	; 0x794

0001199c <fcntl64@plt>:
   1199c:	add	ip, pc, #0, 12
   119a0:	add	ip, ip, #118784	; 0x1d000
   119a4:	ldr	pc, [ip, #1932]!	; 0x78c

000119a8 <sendto@plt>:
   119a8:	add	ip, pc, #0, 12
   119ac:	add	ip, ip, #118784	; 0x1d000
   119b0:	ldr	pc, [ip, #1924]!	; 0x784

000119b4 <endutxent@plt>:
   119b4:	add	ip, pc, #0, 12
   119b8:	add	ip, ip, #118784	; 0x1d000
   119bc:	ldr	pc, [ip, #1916]!	; 0x77c

000119c0 <__overflow@plt>:
   119c0:	add	ip, pc, #0, 12
   119c4:	add	ip, ip, #118784	; 0x1d000
   119c8:	ldr	pc, [ip, #1908]!	; 0x774

000119cc <sigemptyset@plt>:
   119cc:	add	ip, pc, #0, 12
   119d0:	add	ip, ip, #118784	; 0x1d000
   119d4:	ldr	pc, [ip, #1900]!	; 0x76c

000119d8 <fork@plt>:
   119d8:	add	ip, pc, #0, 12
   119dc:	add	ip, ip, #118784	; 0x1d000
   119e0:	ldr	pc, [ip, #1892]!	; 0x764

000119e4 <getnameinfo@plt>:
   119e4:	add	ip, pc, #0, 12
   119e8:	add	ip, ip, #118784	; 0x1d000
   119ec:	ldr	pc, [ip, #1884]!	; 0x75c

000119f0 <strrchr@plt>:
   119f0:	add	ip, pc, #0, 12
   119f4:	add	ip, ip, #118784	; 0x1d000
   119f8:	ldr	pc, [ip, #1876]!	; 0x754

000119fc <vfprintf@plt>:
   119fc:	add	ip, pc, #0, 12
   11a00:	add	ip, ip, #118784	; 0x1d000
   11a04:	ldr	pc, [ip, #1868]!	; 0x74c

00011a08 <fputc@plt>:
   11a08:	add	ip, pc, #0, 12
   11a0c:	add	ip, ip, #118784	; 0x1d000
   11a10:	ldr	pc, [ip, #1860]!	; 0x744

00011a14 <readdir64@plt>:
   11a14:	add	ip, pc, #0, 12
   11a18:	add	ip, ip, #118784	; 0x1d000
   11a1c:	ldr	pc, [ip, #1852]!	; 0x73c

00011a20 <flockfile@plt>:
   11a20:	add	ip, pc, #0, 12
   11a24:	add	ip, ip, #118784	; 0x1d000
   11a28:	ldr	pc, [ip, #1844]!	; 0x734

00011a2c <vsnprintf@plt>:
   11a2c:	add	ip, pc, #0, 12
   11a30:	add	ip, ip, #118784	; 0x1d000
   11a34:	ldr	pc, [ip, #1836]!	; 0x72c

00011a38 <fopen64@plt>:
   11a38:	add	ip, pc, #0, 12
   11a3c:	add	ip, ip, #118784	; 0x1d000
   11a40:	ldr	pc, [ip, #1828]!	; 0x724

00011a44 <qsort@plt>:
   11a44:	add	ip, pc, #0, 12
   11a48:	add	ip, ip, #118784	; 0x1d000
   11a4c:	ldr	pc, [ip, #1820]!	; 0x71c

00011a50 <strpbrk@plt>:
   11a50:	add	ip, pc, #0, 12
   11a54:	add	ip, ip, #118784	; 0x1d000
   11a58:	ldr	pc, [ip, #1812]!	; 0x714

00011a5c <freeaddrinfo@plt>:
   11a5c:	add	ip, pc, #0, 12
   11a60:	add	ip, ip, #118784	; 0x1d000
   11a64:	ldr	pc, [ip, #1804]!	; 0x70c

00011a68 <getaddrinfo@plt>:
   11a68:	add	ip, pc, #0, 12
   11a6c:	add	ip, ip, #118784	; 0x1d000
   11a70:	ldr	pc, [ip, #1796]!	; 0x704

00011a74 <socket@plt>:
   11a74:	add	ip, pc, #0, 12
   11a78:	add	ip, ip, #118784	; 0x1d000
   11a7c:	ldr	pc, [ip, #1788]!	; 0x6fc

00011a80 <chmod@plt>:
   11a80:	add	ip, pc, #0, 12
   11a84:	add	ip, ip, #118784	; 0x1d000
   11a88:	ldr	pc, [ip, #1780]!	; 0x6f4

00011a8c <__xstat64@plt>:
   11a8c:	add	ip, pc, #0, 12
   11a90:	add	ip, ip, #118784	; 0x1d000
   11a94:	ldr	pc, [ip, #1772]!	; 0x6ec

00011a98 <isatty@plt>:
   11a98:	add	ip, pc, #0, 12
   11a9c:	add	ip, ip, #118784	; 0x1d000
   11aa0:	ldr	pc, [ip, #1764]!	; 0x6e4

00011aa4 <strncmp@plt>:
   11aa4:	add	ip, pc, #0, 12
   11aa8:	add	ip, ip, #118784	; 0x1d000
   11aac:	ldr	pc, [ip, #1756]!	; 0x6dc

00011ab0 <abort@plt>:
   11ab0:	add	ip, pc, #0, 12
   11ab4:	add	ip, ip, #118784	; 0x1d000
   11ab8:	ldr	pc, [ip, #1748]!	; 0x6d4

00011abc <getutxent@plt>:
   11abc:	add	ip, pc, #0, 12
   11ac0:	add	ip, ip, #118784	; 0x1d000
   11ac4:	ldr	pc, [ip, #1740]!	; 0x6cc

00011ac8 <close@plt>:
   11ac8:	add	ip, pc, #0, 12
   11acc:	add	ip, ip, #118784	; 0x1d000
   11ad0:	ldr	pc, [ip, #1732]!	; 0x6c4

00011ad4 <closedir@plt>:
   11ad4:	add	ip, pc, #0, 12
   11ad8:	add	ip, ip, #118784	; 0x1d000
   11adc:	ldr	pc, [ip, #1724]!	; 0x6bc

00011ae0 <__assert_fail@plt>:
   11ae0:	add	ip, pc, #0, 12
   11ae4:	add	ip, ip, #118784	; 0x1d000
   11ae8:	ldr	pc, [ip, #1716]!	; 0x6b4

Disassembly of section .text:

00011aec <daemon@@Base-0x4168>:
   11aec:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11af0:	mov	r5, r0
   11af4:	mov	r4, r1
   11af8:	ldr	r0, [r1]
   11afc:	strd	r6, [sp, #8]
   11b00:	movw	r6, #62924	; 0xf5cc
   11b04:	movt	r6, #2
   11b08:	strd	r8, [sp, #16]
   11b0c:	movw	r9, #64572	; 0xfc3c
   11b10:	movt	r9, #2
   11b14:	strd	sl, [sp, #24]
   11b18:	str	lr, [sp, #32]
   11b1c:	sub	sp, sp, #2384	; 0x950
   11b20:	sub	sp, sp, #12
   11b24:	str	r6, [sp, #16]
   11b28:	bl	1b0e8 <argp_parse@@Base+0x12f8>
   11b2c:	movw	r0, #57472	; 0xe080
   11b30:	movt	r0, #1
   11b34:	bl	12944 <__assert_fail@plt+0xe64>
   11b38:	movw	r3, #140	; 0x8c
   11b3c:	movt	r3, #3
   11b40:	movw	r0, #55596	; 0xd92c
   11b44:	movt	r0, #1
   11b48:	movw	r1, #62836	; 0xf574
   11b4c:	movt	r1, #2
   11b50:	str	r0, [r3]
   11b54:	movw	r0, #55620	; 0xd944
   11b58:	movt	r0, #1
   11b5c:	bl	1acf8 <argp_parse@@Base+0xf08>
   11b60:	mov	ip, #0
   11b64:	mov	r2, r4
   11b68:	ldr	r0, [pc, #3272]	; 12838 <__assert_fail@plt+0xd58>
   11b6c:	mov	r1, r5
   11b70:	mov	r3, ip
   11b74:	str	ip, [sp]
   11b78:	str	ip, [sp, #4]
   11b7c:	bl	19df0 <argp_parse@@Base>
   11b80:	ldr	r0, [r6, #12]
   11b84:	bl	15988 <__assert_fail@plt+0x3ea8>
   11b88:	ldr	r4, [r9]
   11b8c:	cmp	r4, #0
   11b90:	beq	12344 <__assert_fail@plt+0x864>
   11b94:	movw	r3, #64548	; 0xfc24
   11b98:	movt	r3, #2
   11b9c:	ldr	r3, [r3]
   11ba0:	cmp	r3, #0
   11ba4:	bne	1260c <__assert_fail@plt+0xb2c>
   11ba8:	mov	r3, #0
   11bac:	movw	r1, #62916	; 0xf5c4
   11bb0:	movt	r1, #2
   11bb4:	mov	r2, #1
   11bb8:	ldr	r0, [r1]
   11bbc:	mov	r1, r3
   11bc0:	str	r3, [sp, #20]
   11bc4:	bl	11948 <setvbuf@plt>
   11bc8:	bl	15c80 <daemon@@Base+0x2c>
   11bcc:	movw	r3, #64568	; 0xfc38
   11bd0:	movt	r3, #2
   11bd4:	cmp	r0, #0
   11bd8:	mov	r4, r0
   11bdc:	str	r0, [r3]
   11be0:	str	r3, [sp, #40]	; 0x28
   11be4:	beq	1261c <__assert_fail@plt+0xb3c>
   11be8:	mov	r1, #46	; 0x2e
   11bec:	mov	r0, r4
   11bf0:	bl	11900 <strchr@plt>
   11bf4:	subs	ip, r0, #0
   11bf8:	beq	12640 <__assert_fail@plt+0xb60>
   11bfc:	mov	r2, #0
   11c00:	movw	r3, #64564	; 0xfc34
   11c04:	movt	r3, #2
   11c08:	add	r7, sp, #1360	; 0x550
   11c0c:	add	r7, r7, #4
   11c10:	strb	r2, [ip], #1
   11c14:	add	r2, sp, #344	; 0x158
   11c18:	str	ip, [r3]
   11c1c:	add	r3, sp, #336	; 0x150
   11c20:	str	r3, [sp, #28]
   11c24:	str	r2, [sp, #32]
   11c28:	mov	r5, #3
   11c2c:	movw	r6, #64076	; 0xfa4c
   11c30:	movt	r6, #2
   11c34:	movw	r8, #64544	; 0xfc20
   11c38:	movt	r8, #2
   11c3c:	ldr	r0, [pc, #3064]	; 1283c <__assert_fail@plt+0xd5c>
   11c40:	movw	r4, #18304	; 0x4780
   11c44:	movt	r4, #1
   11c48:	strh	r5, [r6, #4]
   11c4c:	str	r8, [sp, #12]
   11c50:	bl	11774 <strdup@plt>
   11c54:	mov	r1, r4
   11c58:	str	r0, [r6, #40]	; 0x28
   11c5c:	mov	r0, #15
   11c60:	bl	11720 <signal@plt>
   11c64:	ldr	r3, [r9]
   11c68:	mov	r0, #2
   11c6c:	cmp	r3, #0
   11c70:	movne	r1, r4
   11c74:	moveq	r1, #1
   11c78:	bl	11720 <signal@plt>
   11c7c:	ldr	r3, [r9]
   11c80:	mov	r0, r5
   11c84:	cmp	r3, #0
   11c88:	movne	r1, r4
   11c8c:	moveq	r1, #1
   11c90:	bl	11720 <signal@plt>
   11c94:	add	r0, sp, #200	; 0xc8
   11c98:	mov	r3, #268435456	; 0x10000000
   11c9c:	sub	r2, r0, #4
   11ca0:	str	r2, [sp, #24]
   11ca4:	str	r3, [sp, #328]	; 0x148
   11ca8:	bl	119cc <sigemptyset@plt>
   11cac:	movw	r3, #17976	; 0x4638
   11cb0:	movt	r3, #1
   11cb4:	ldr	r1, [sp, #24]
   11cb8:	mov	r2, #0
   11cbc:	mov	r0, #14
   11cc0:	str	r3, [sp, #196]	; 0xc4
   11cc4:	bl	117f8 <sigaction@plt>
   11cc8:	ldr	ip, [r9]
   11ccc:	mov	r2, #0
   11cd0:	movw	r3, #10828	; 0x2a4c
   11cd4:	movt	r3, #1
   11cd8:	mov	r0, #10
   11cdc:	ldr	r1, [sp, #24]
   11ce0:	cmp	ip, r2
   11ce4:	moveq	r3, #1
   11ce8:	str	r3, [sp, #196]	; 0xc4
   11cec:	bl	117f8 <sigaction@plt>
   11cf0:	mov	r0, #30
   11cf4:	bl	1178c <alarm@plt>
   11cf8:	ldr	r0, [r8]
   11cfc:	add	r0, r0, r5
   11d00:	lsl	r0, r0, r5
   11d04:	bl	1bcfc <argp_parse@@Base+0x1f0c>
   11d08:	subs	r3, r0, #0
   11d0c:	str	r3, [sp, #8]
   11d10:	beq	126c8 <__assert_fail@plt+0xbe8>
   11d14:	mov	r0, #0
   11d18:	bl	15564 <__assert_fail@plt+0x3a84>
   11d1c:	movw	r3, #64060	; 0xfa3c
   11d20:	movt	r3, #2
   11d24:	ldr	fp, [r3]
   11d28:	cmp	fp, #0
   11d2c:	movwne	r8, #61868	; 0xf1ac
   11d30:	movne	fp, #0
   11d34:	movtne	r8, #2
   11d38:	beq	124e8 <__assert_fail@plt+0xa08>
   11d3c:	movw	r3, #64552	; 0xfc28
   11d40:	movt	r3, #2
   11d44:	ldr	r3, [r3]
   11d48:	cmp	r3, #0
   11d4c:	bne	11edc <__assert_fail@plt+0x3fc>
   11d50:	ldr	r2, [sp, #12]
   11d54:	ldr	r2, [r2]
   11d58:	cmp	r2, #0
   11d5c:	beq	11edc <__assert_fail@plt+0x3fc>
   11d60:	movw	r2, #55784	; 0xd9e8
   11d64:	movt	r2, #1
   11d68:	movw	r6, #64640	; 0xfc80
   11d6c:	movt	r6, #2
   11d70:	str	r2, [sp, #44]	; 0x2c
   11d74:	movw	r2, #55804	; 0xd9fc
   11d78:	movt	r2, #1
   11d7c:	str	r9, [sp, #56]	; 0x38
   11d80:	str	r2, [sp, #48]	; 0x30
   11d84:	movw	r2, #55752	; 0xd9c8
   11d88:	movt	r2, #1
   11d8c:	str	r8, [sp, #60]	; 0x3c
   11d90:	mov	r8, r3
   11d94:	str	r2, [sp, #52]	; 0x34
   11d98:	b	11dd8 <__assert_fail@plt+0x2f8>
   11d9c:	ldr	r0, [sp, #8]
   11da0:	mov	ip, #3
   11da4:	add	r2, r0, fp, lsl #3
   11da8:	str	r1, [r0, fp, lsl #3]
   11dac:	movw	r0, #55828	; 0xda14
   11db0:	movt	r0, #1
   11db4:	ldr	r1, [r3, r9]
   11db8:	add	fp, fp, #1
   11dbc:	strh	ip, [r2, #4]
   11dc0:	bl	129d0 <__assert_fail@plt+0xef0>
   11dc4:	ldr	r3, [sp, #12]
   11dc8:	add	r8, r8, #1
   11dcc:	ldr	r3, [r3]
   11dd0:	cmp	r3, r8
   11dd4:	bls	11ed4 <__assert_fail@plt+0x3f4>
   11dd8:	ldr	r3, [r6]
   11ddc:	lsl	r9, r8, #3
   11de0:	ldr	r4, [r3, r8, lsl #3]
   11de4:	add	r3, r3, r9
   11de8:	str	r3, [sp, #36]	; 0x24
   11dec:	ldrb	r3, [r4]
   11df0:	cmp	r3, #0
   11df4:	beq	1280c <__assert_fail@plt+0xd2c>
   11df8:	mov	r0, r4
   11dfc:	bl	118e8 <strlen@plt>
   11e00:	cmp	r0, #107	; 0x6b
   11e04:	bhi	12814 <__assert_fail@plt+0xd34>
   11e08:	ldr	r3, [sp, #32]
   11e0c:	mov	r0, r4
   11e10:	mov	r5, #1
   11e14:	sub	sl, r3, #6
   11e18:	bl	117a4 <unlink@plt>
   11e1c:	mov	r2, #108	; 0x6c
   11e20:	mov	r1, #0
   11e24:	mov	r0, sl
   11e28:	bl	11954 <memset@plt>
   11e2c:	ldr	r3, [sp, #28]
   11e30:	mov	r2, #107	; 0x6b
   11e34:	mov	r1, r4
   11e38:	mov	r0, sl
   11e3c:	strh	r5, [r3]
   11e40:	bl	11960 <strncpy@plt>
   11e44:	mov	r0, r5
   11e48:	mov	r2, #0
   11e4c:	mov	r1, #2
   11e50:	bl	11a74 <socket@plt>
   11e54:	subs	r5, r0, #0
   11e58:	blt	125c4 <__assert_fail@plt+0xae4>
   11e5c:	mov	r0, sl
   11e60:	bl	118e8 <strlen@plt>
   11e64:	add	r2, r0, #2
   11e68:	mov	r0, r5
   11e6c:	ldr	r1, [sp, #28]
   11e70:	bl	1193c <bind@plt>
   11e74:	cmp	r0, #0
   11e78:	blt	125c4 <__assert_fail@plt+0xae4>
   11e7c:	movw	r1, #438	; 0x1b6
   11e80:	mov	r0, r4
   11e84:	bl	11a80 <chmod@plt>
   11e88:	cmp	r0, #0
   11e8c:	blt	125c4 <__assert_fail@plt+0xae4>
   11e90:	ldr	r3, [r6]
   11e94:	ldr	r2, [sp, #36]	; 0x24
   11e98:	str	r5, [r2, #4]
   11e9c:	add	r2, r3, r9
   11ea0:	ldr	r1, [r2, #4]
   11ea4:	cmp	r1, #0
   11ea8:	bge	11d9c <__assert_fail@plt+0x2bc>
   11eac:	ldr	r4, [r3, r9]
   11eb0:	bl	11918 <__errno_location@plt>
   11eb4:	ldr	r0, [r0]
   11eb8:	bl	11888 <strerror@plt>
   11ebc:	mov	r2, r0
   11ec0:	movw	r0, #55732	; 0xd9b4
   11ec4:	movt	r0, #1
   11ec8:	mov	r1, r4
   11ecc:	bl	129d0 <__assert_fail@plt+0xef0>
   11ed0:	b	11dc4 <__assert_fail@plt+0x2e4>
   11ed4:	ldr	r9, [sp, #56]	; 0x38
   11ed8:	ldr	r8, [sp, #60]	; 0x3c
   11edc:	movw	r3, #64064	; 0xfa40
   11ee0:	movt	r3, #2
   11ee4:	ldr	r3, [r3]
   11ee8:	cmp	r3, #0
   11eec:	bne	123c8 <__assert_fail@plt+0x8e8>
   11ef0:	add	r3, sp, #68	; 0x44
   11ef4:	str	r3, [sp, #12]
   11ef8:	movw	r1, #56084	; 0xdb14
   11efc:	movt	r1, #1
   11f00:	ldr	r0, [r8, #12]
   11f04:	bl	11a38 <fopen64@plt>
   11f08:	subs	r4, r0, #0
   11f0c:	beq	11f30 <__assert_fail@plt+0x450>
   11f10:	bl	118d0 <getpid@plt>
   11f14:	mov	r2, r0
   11f18:	movw	r1, #56088	; 0xdb18
   11f1c:	movt	r1, #1
   11f20:	mov	r0, r4
   11f24:	bl	1190c <fprintf@plt>
   11f28:	mov	r0, r4
   11f2c:	bl	11990 <fclose@plt>
   11f30:	movw	r0, #56092	; 0xdb1c
   11f34:	movt	r0, #1
   11f38:	bl	129d0 <__assert_fail@plt+0xef0>
   11f3c:	movw	r3, #10544	; 0x2930
   11f40:	movt	r3, #1
   11f44:	ldr	r1, [sp, #24]
   11f48:	mov	r2, #0
   11f4c:	mov	r0, #1
   11f50:	str	r3, [sp, #196]	; 0xc4
   11f54:	bl	117f8 <sigaction@plt>
   11f58:	ldr	r3, [r9]
   11f5c:	cmp	r3, #0
   11f60:	bne	1239c <__assert_fail@plt+0x8bc>
   11f64:	ldr	r3, [sp, #20]
   11f68:	cmp	r3, #0
   11f6c:	bne	1238c <__assert_fail@plt+0x8ac>
   11f70:	ldr	r3, [sp, #8]
   11f74:	mov	r4, #0
   11f78:	add	r9, r3, fp, lsl #3
   11f7c:	movw	r3, #56224	; 0xdba0
   11f80:	movt	r3, #1
   11f84:	str	r3, [sp, #44]	; 0x2c
   11f88:	movw	r3, #56296	; 0xdbe8
   11f8c:	movt	r3, #1
   11f90:	str	r3, [sp, #36]	; 0x24
   11f94:	movw	r3, #56284	; 0xdbdc
   11f98:	movt	r3, #1
   11f9c:	str	r3, [sp, #32]
   11fa0:	mvn	r2, #0
   11fa4:	mov	r1, fp
   11fa8:	ldr	r0, [sp, #8]
   11fac:	bl	117ec <poll@plt>
   11fb0:	cmp	r0, #0
   11fb4:	beq	11fa0 <__assert_fail@plt+0x4c0>
   11fb8:	ldr	r3, [sp, #16]
   11fbc:	ldr	r3, [r3]
   11fc0:	cmp	r3, #0
   11fc4:	bne	1219c <__assert_fail@plt+0x6bc>
   11fc8:	cmp	r0, #0
   11fcc:	blt	12120 <__assert_fail@plt+0x640>
   11fd0:	cmp	fp, #0
   11fd4:	beq	11fa0 <__assert_fail@plt+0x4c0>
   11fd8:	movw	r3, #56272	; 0xdbd0
   11fdc:	movt	r3, #1
   11fe0:	ldr	r5, [sp, #8]
   11fe4:	str	r3, [sp, #20]
   11fe8:	str	fp, [sp, #24]
   11fec:	ldr	sl, [sp, #28]
   11ff0:	b	12068 <__assert_fail@plt+0x588>
   11ff4:	ldr	r6, [r5]
   11ff8:	cmn	r6, #1
   11ffc:	beq	1205c <__assert_fail@plt+0x57c>
   12000:	ldr	r3, [r8, #384]	; 0x180
   12004:	cmp	r6, r3
   12008:	beq	121c0 <__assert_fail@plt+0x6e0>
   1200c:	ldr	r3, [r8, #312]	; 0x138
   12010:	cmp	r6, r3
   12014:	beq	120a8 <__assert_fail@plt+0x5c8>
   12018:	ldr	r3, [r8, #316]	; 0x13c
   1201c:	cmp	r6, r3
   12020:	beq	120a8 <__assert_fail@plt+0x5c8>
   12024:	ldr	r3, [sp, #12]
   12028:	add	r1, sp, #64	; 0x40
   1202c:	mov	ip, #110	; 0x6e
   12030:	mov	r0, r6
   12034:	mov	r2, #1024	; 0x400
   12038:	str	r3, [sp]
   1203c:	mov	r3, #0
   12040:	str	r1, [sp, #4]
   12044:	mov	r1, sl
   12048:	str	ip, [sp, #64]	; 0x40
   1204c:	bl	11768 <recvfrom@plt>
   12050:	cmp	r0, #0
   12054:	bgt	12174 <__assert_fail@plt+0x694>
   12058:	bne	122f4 <__assert_fail@plt+0x814>
   1205c:	add	r5, r5, #8
   12060:	cmp	r5, r9
   12064:	beq	120a0 <__assert_fail@plt+0x5c0>
   12068:	ldrh	r3, [r5, #6]
   1206c:	tst	r3, #3
   12070:	bne	11ff4 <__assert_fail@plt+0x514>
   12074:	tst	r3, #32
   12078:	bne	1210c <__assert_fail@plt+0x62c>
   1207c:	tst	r3, #8
   12080:	bne	1213c <__assert_fail@plt+0x65c>
   12084:	tst	r3, #16
   12088:	beq	1205c <__assert_fail@plt+0x57c>
   1208c:	add	r5, r5, #8
   12090:	ldr	r0, [sp, #36]	; 0x24
   12094:	bl	134fc <__assert_fail@plt+0x1a1c>
   12098:	cmp	r5, r9
   1209c:	bne	12068 <__assert_fail@plt+0x588>
   120a0:	ldr	fp, [sp, #24]
   120a4:	b	11fa0 <__assert_fail@plt+0x4c0>
   120a8:	mov	r3, #128	; 0x80
   120ac:	movw	r2, #1025	; 0x401
   120b0:	mov	r1, #0
   120b4:	mov	r0, sl
   120b8:	str	r3, [sp, #64]	; 0x40
   120bc:	bl	11954 <memset@plt>
   120c0:	mov	r0, r6
   120c4:	ldr	r6, [sp, #12]
   120c8:	add	ip, sp, #64	; 0x40
   120cc:	mov	r3, #0
   120d0:	mov	r2, #1024	; 0x400
   120d4:	mov	r1, sl
   120d8:	stm	sp, {r6, ip}
   120dc:	bl	11768 <recvfrom@plt>
   120e0:	cmp	r0, #0
   120e4:	bgt	12148 <__assert_fail@plt+0x668>
   120e8:	beq	1205c <__assert_fail@plt+0x57c>
   120ec:	bl	11918 <__errno_location@plt>
   120f0:	ldr	r3, [r0]
   120f4:	cmp	r3, #4
   120f8:	beq	1205c <__assert_fail@plt+0x57c>
   120fc:	movw	r0, #56240	; 0xdbb0
   12100:	movt	r0, #1
   12104:	bl	134fc <__assert_fail@plt+0x1a1c>
   12108:	b	1205c <__assert_fail@plt+0x57c>
   1210c:	ldr	r0, [sp, #20]
   12110:	bl	134fc <__assert_fail@plt+0x1a1c>
   12114:	mvn	r3, #0
   12118:	str	r3, [r5]
   1211c:	b	1205c <__assert_fail@plt+0x57c>
   12120:	bl	11918 <__errno_location@plt>
   12124:	ldr	r3, [r0]
   12128:	cmp	r3, #4
   1212c:	beq	11fa0 <__assert_fail@plt+0x4c0>
   12130:	ldr	r0, [sp, #44]	; 0x2c
   12134:	bl	134fc <__assert_fail@plt+0x1a1c>
   12138:	b	11fa0 <__assert_fail@plt+0x4c0>
   1213c:	ldr	r0, [sp, #32]
   12140:	bl	134fc <__assert_fail@plt+0x1a1c>
   12144:	b	1205c <__assert_fail@plt+0x57c>
   12148:	add	r3, sp, #2384	; 0x950
   1214c:	mov	r2, #0
   12150:	ldr	r1, [sp, #64]	; 0x40
   12154:	add	r3, r3, #8
   12158:	add	r3, r3, r0
   1215c:	mov	r0, r6
   12160:	strb	r2, [r3, #-2056]	; 0xfffff7f8
   12164:	bl	1334c <__assert_fail@plt+0x186c>
   12168:	mov	r1, sl
   1216c:	bl	14384 <__assert_fail@plt+0x28a4>
   12170:	b	1205c <__assert_fail@plt+0x57c>
   12174:	ldr	r1, [sp, #40]	; 0x28
   12178:	add	r3, sp, #2384	; 0x950
   1217c:	mov	r2, #0
   12180:	add	r3, r3, #8
   12184:	add	r3, r3, r0
   12188:	strb	r2, [r3, #-2056]	; 0xfffff7f8
   1218c:	ldr	r0, [r1]
   12190:	mov	r1, sl
   12194:	bl	14384 <__assert_fail@plt+0x28a4>
   12198:	b	1205c <__assert_fail@plt+0x57c>
   1219c:	movw	r0, #56184	; 0xdb78
   121a0:	movt	r0, #1
   121a4:	bl	129d0 <__assert_fail@plt+0xef0>
   121a8:	mov	r0, #0
   121ac:	bl	15564 <__assert_fail@plt+0x3a84>
   121b0:	ldr	r2, [sp, #16]
   121b4:	mov	r3, #0
   121b8:	str	r3, [r2]
   121bc:	b	11fa0 <__assert_fail@plt+0x4c0>
   121c0:	mov	r0, r6
   121c4:	rsb	r2, r4, #1024	; 0x400
   121c8:	add	r1, r7, r4
   121cc:	bl	11690 <read@plt>
   121d0:	cmp	r0, #0
   121d4:	ble	12314 <__assert_fail@plt+0x834>
   121d8:	add	r4, r4, r0
   121dc:	mov	r6, #0
   121e0:	add	r3, sp, #2384	; 0x950
   121e4:	mov	r1, #10
   121e8:	add	r3, r3, #8
   121ec:	mov	r0, r7
   121f0:	add	r3, r3, r4
   121f4:	strb	r6, [r3, #-1028]	; 0xfffffbfc
   121f8:	bl	11900 <strchr@plt>
   121fc:	cmp	r0, #0
   12200:	beq	122ec <__assert_fail@plt+0x80c>
   12204:	mov	r3, r7
   12208:	mov	fp, r0
   1220c:	mov	r0, r3
   12210:	strb	r6, [fp], #1
   12214:	sub	r3, fp, r3
   12218:	sub	r4, r4, r3
   1221c:	bl	144ec <__assert_fail@plt+0x2a0c>
   12220:	mov	r0, fp
   12224:	mov	r1, #10
   12228:	bl	11900 <strchr@plt>
   1222c:	cmp	r0, #0
   12230:	mov	r3, fp
   12234:	bne	12208 <__assert_fail@plt+0x728>
   12238:	cmp	r4, #0
   1223c:	beq	1205c <__assert_fail@plt+0x57c>
   12240:	ldrb	r3, [fp]
   12244:	cmp	r3, #0
   12248:	bne	12280 <__assert_fail@plt+0x7a0>
   1224c:	add	r2, fp, r4
   12250:	add	r3, fp, #1
   12254:	b	12268 <__assert_fail@plt+0x788>
   12258:	ldrb	r1, [r3]
   1225c:	add	r3, r3, #1
   12260:	cmp	r1, #0
   12264:	bne	12280 <__assert_fail@plt+0x7a0>
   12268:	cmp	r2, r3
   1226c:	mov	fp, r3
   12270:	sub	r4, r2, r3
   12274:	bne	12258 <__assert_fail@plt+0x778>
   12278:	mov	r4, #0
   1227c:	b	1205c <__assert_fail@plt+0x57c>
   12280:	cmp	fp, r7
   12284:	beq	1229c <__assert_fail@plt+0x7bc>
   12288:	mov	r1, fp
   1228c:	mov	r2, r4
   12290:	mov	r0, r7
   12294:	bl	116c0 <memmove@plt>
   12298:	b	121e0 <__assert_fail@plt+0x700>
   1229c:	cmp	r4, #1024	; 0x400
   122a0:	blt	1205c <__assert_fail@plt+0x57c>
   122a4:	mov	r0, r7
   122a8:	bl	144ec <__assert_fail@plt+0x2a0c>
   122ac:	ldrb	r3, [sp, #1364]	; 0x554
   122b0:	cmp	r3, #60	; 0x3c
   122b4:	movne	r4, #0
   122b8:	bne	121e0 <__assert_fail@plt+0x700>
   122bc:	bl	118c4 <__ctype_b_loc@plt>
   122c0:	ldrb	r3, [sp, #1365]	; 0x555
   122c4:	ldr	r2, [r0]
   122c8:	lsl	r3, r3, #1
   122cc:	ldrh	r3, [r2, r3]
   122d0:	ands	r4, r3, #2048	; 0x800
   122d4:	beq	121e0 <__assert_fail@plt+0x700>
   122d8:	ldrb	r3, [sp, #1366]	; 0x556
   122dc:	cmp	r3, #62	; 0x3e
   122e0:	movne	r4, #0
   122e4:	moveq	r4, #3
   122e8:	b	121e0 <__assert_fail@plt+0x700>
   122ec:	mov	fp, r7
   122f0:	b	12238 <__assert_fail@plt+0x758>
   122f4:	bl	11918 <__errno_location@plt>
   122f8:	ldr	r3, [r0]
   122fc:	cmp	r3, #4
   12300:	beq	1205c <__assert_fail@plt+0x57c>
   12304:	movw	r0, #56256	; 0xdbc0
   12308:	movt	r0, #1
   1230c:	bl	134fc <__assert_fail@plt+0x1a1c>
   12310:	b	1205c <__assert_fail@plt+0x57c>
   12314:	beq	121dc <__assert_fail@plt+0x6fc>
   12318:	bl	11918 <__errno_location@plt>
   1231c:	ldr	r3, [r0]
   12320:	cmp	r3, #4
   12324:	beq	121dc <__assert_fail@plt+0x6fc>
   12328:	movw	r0, #56232	; 0xdba8
   1232c:	movt	r0, #1
   12330:	bl	134fc <__assert_fail@plt+0x1a1c>
   12334:	mvn	r3, #0
   12338:	str	r3, [r5]
   1233c:	str	r3, [r8, #384]	; 0x180
   12340:	b	121dc <__assert_fail@plt+0x6fc>
   12344:	movw	r1, #10924	; 0x2aac
   12348:	movt	r1, #1
   1234c:	mov	r0, #15
   12350:	bl	11720 <signal@plt>
   12354:	mov	r2, #30
   12358:	mov	r1, r4
   1235c:	mov	r0, r4
   12360:	bl	15af0 <__assert_fail@plt+0x4010>
   12364:	subs	r3, r0, #0
   12368:	str	r3, [sp, #20]
   1236c:	bge	11bc8 <__assert_fail@plt+0xe8>
   12370:	bl	11918 <__errno_location@plt>
   12374:	movw	r2, #55628	; 0xd94c
   12378:	movt	r2, #1
   1237c:	ldr	r1, [r0]
   12380:	mov	r0, #1
   12384:	bl	11828 <error@plt>
   12388:	b	11bc8 <__assert_fail@plt+0xe8>
   1238c:	mov	r0, r3
   12390:	mov	r1, #15
   12394:	bl	118b8 <kill@plt>
   12398:	b	11f70 <__assert_fail@plt+0x490>
   1239c:	ldr	r4, [sp, #16]
   123a0:	mov	r3, #1
   123a4:	str	r3, [r4, #4]
   123a8:	bl	118d0 <getpid@plt>
   123ac:	mov	r1, r0
   123b0:	movw	r0, #56112	; 0xdb30
   123b4:	movt	r0, #1
   123b8:	bl	129d0 <__assert_fail@plt+0xef0>
   123bc:	mov	r3, #0
   123c0:	str	r3, [r4, #4]
   123c4:	b	11f64 <__assert_fail@plt+0x484>
   123c8:	ldr	r3, [sp, #16]
   123cc:	ldr	r1, [r3, #48]	; 0x30
   123d0:	mvn	r3, #0
   123d4:	str	r3, [r8, #312]	; 0x138
   123d8:	str	r3, [r8, #316]	; 0x13c
   123dc:	ldr	r3, [r8, #4]
   123e0:	cmp	r1, #0
   123e4:	beq	127f4 <__assert_fail@plt+0xd14>
   123e8:	ldr	r2, [sp, #16]
   123ec:	mov	ip, #0
   123f0:	mov	r4, #1
   123f4:	str	r3, [sp, #1368]	; 0x558
   123f8:	add	r3, sp, #68	; 0x44
   123fc:	str	r3, [sp, #12]
   12400:	ldr	r0, [r2, #8]
   12404:	mov	r2, #2
   12408:	str	r4, [sp, #1364]	; 0x554
   1240c:	str	r2, [sp, #1372]	; 0x55c
   12410:	mov	r2, r7
   12414:	str	ip, [sp, #1376]	; 0x560
   12418:	str	ip, [sp, #1380]	; 0x564
   1241c:	str	ip, [sp, #1384]	; 0x568
   12420:	str	ip, [sp, #1388]	; 0x56c
   12424:	str	ip, [sp, #1392]	; 0x570
   12428:	bl	11a68 <getaddrinfo@plt>
   1242c:	cmp	r0, #0
   12430:	bne	127e4 <__assert_fail@plt+0xd04>
   12434:	ldr	r5, [sp, #68]	; 0x44
   12438:	cmp	r5, #0
   1243c:	beq	1253c <__assert_fail@plt+0xa5c>
   12440:	movw	r6, #55932	; 0xda7c
   12444:	movt	r6, #1
   12448:	mov	sl, r4
   1244c:	b	12470 <__assert_fail@plt+0x990>
   12450:	cmp	r3, #10
   12454:	bne	12464 <__assert_fail@plt+0x984>
   12458:	ldr	r3, [r8, #316]	; 0x13c
   1245c:	cmp	r3, #0
   12460:	strlt	r4, [r8, #316]	; 0x13c
   12464:	ldr	r5, [r5, #28]
   12468:	cmp	r5, #0
   1246c:	beq	1253c <__assert_fail@plt+0xa5c>
   12470:	str	sl, [sp, #336]	; 0x150
   12474:	ldrd	r0, [r5, #4]
   12478:	ldr	r2, [r5, #12]
   1247c:	bl	11a74 <socket@plt>
   12480:	subs	r4, r0, #0
   12484:	blt	12464 <__assert_fail@plt+0x984>
   12488:	mov	r1, #4
   1248c:	mov	r2, #2
   12490:	ldr	r3, [sp, #28]
   12494:	str	r1, [sp]
   12498:	mov	r1, #1
   1249c:	bl	1166c <setsockopt@plt>
   124a0:	cmp	r0, #0
   124a4:	blt	127ac <__assert_fail@plt+0xccc>
   124a8:	ldr	r3, [r5, #4]
   124ac:	cmp	r3, #10
   124b0:	beq	127c4 <__assert_fail@plt+0xce4>
   124b4:	mov	r0, r4
   124b8:	ldr	r2, [r5, #16]
   124bc:	ldr	r1, [r5, #20]
   124c0:	bl	1193c <bind@plt>
   124c4:	cmp	r0, #0
   124c8:	blt	127b8 <__assert_fail@plt+0xcd8>
   124cc:	ldr	r3, [r5, #4]
   124d0:	cmp	r3, #2
   124d4:	bne	12450 <__assert_fail@plt+0x970>
   124d8:	ldr	r3, [r8, #312]	; 0x138
   124dc:	cmp	r3, #0
   124e0:	strlt	r4, [r8, #312]	; 0x138
   124e4:	b	12464 <__assert_fail@plt+0x984>
   124e8:	movw	r0, #55704	; 0xd998
   124ec:	movt	r0, #1
   124f0:	mov	r2, fp
   124f4:	mov	r1, fp
   124f8:	bl	1184c <open64@plt>
   124fc:	movw	r8, #61868	; 0xf1ac
   12500:	movt	r8, #2
   12504:	cmp	r0, #0
   12508:	str	r0, [r8, #384]	; 0x180
   1250c:	blt	12784 <__assert_fail@plt+0xca4>
   12510:	ldr	r2, [sp, #8]
   12514:	mov	r3, #3
   12518:	movw	r1, #55704	; 0xd998
   1251c:	movt	r1, #1
   12520:	mov	fp, #1
   12524:	str	r0, [r2]
   12528:	movw	r0, #55716	; 0xd9a4
   1252c:	movt	r0, #1
   12530:	strh	r3, [r2, #4]
   12534:	bl	129d0 <__assert_fail@plt+0xef0>
   12538:	b	11d3c <__assert_fail@plt+0x25c>
   1253c:	ldr	r0, [sp, #68]	; 0x44
   12540:	bl	11a5c <freeaddrinfo@plt>
   12544:	ldr	r3, [r8, #312]	; 0x138
   12548:	cmp	r3, #0
   1254c:	blt	12768 <__assert_fail@plt+0xc88>
   12550:	ldr	r2, [r8, #312]	; 0x138
   12554:	cmp	r2, #0
   12558:	bge	12728 <__assert_fail@plt+0xc48>
   1255c:	ldr	r3, [r8, #316]	; 0x13c
   12560:	cmp	r3, #0
   12564:	blt	125a4 <__assert_fail@plt+0xac4>
   12568:	ldr	r0, [sp, #8]
   1256c:	mov	r1, #3
   12570:	add	r2, r0, fp, lsl #3
   12574:	str	r3, [r0, fp, lsl #3]
   12578:	movw	r0, #56024	; 0xdad8
   1257c:	movt	r0, #1
   12580:	add	fp, fp, #1
   12584:	strh	r1, [r2, #4]
   12588:	bl	129d0 <__assert_fail@plt+0xef0>
   1258c:	ldr	r3, [r8, #312]	; 0x138
   12590:	cmp	r3, #0
   12594:	bge	11ef8 <__assert_fail@plt+0x418>
   12598:	ldr	r3, [r8, #316]	; 0x13c
   1259c:	cmp	r3, #0
   125a0:	bge	11ef8 <__assert_fail@plt+0x418>
   125a4:	bl	11918 <__errno_location@plt>
   125a8:	ldr	r0, [r0]
   125ac:	bl	11888 <strerror@plt>
   125b0:	mov	r1, r0
   125b4:	movw	r0, #56056	; 0xdaf8
   125b8:	movt	r0, #1
   125bc:	bl	129d0 <__assert_fail@plt+0xef0>
   125c0:	b	11ef8 <__assert_fail@plt+0x418>
   125c4:	mov	r3, r4
   125c8:	movw	r1, #1025	; 0x401
   125cc:	ldr	r2, [sp, #44]	; 0x2c
   125d0:	mov	r0, r7
   125d4:	bl	11924 <snprintf@plt>
   125d8:	mov	r0, r7
   125dc:	bl	134fc <__assert_fail@plt+0x1a1c>
   125e0:	bl	11918 <__errno_location@plt>
   125e4:	ldr	r0, [r0]
   125e8:	bl	11888 <strerror@plt>
   125ec:	mov	r2, r0
   125f0:	mov	r1, r4
   125f4:	ldr	r0, [sp, #48]	; 0x30
   125f8:	bl	129d0 <__assert_fail@plt+0xef0>
   125fc:	mov	r0, r5
   12600:	mvn	r5, #0
   12604:	bl	11ac8 <close@plt>
   12608:	b	11e90 <__assert_fail@plt+0x3b0>
   1260c:	ldr	r2, [sp, #16]
   12610:	mov	r3, #1
   12614:	str	r3, [r2, #4]
   12618:	b	11ba8 <__assert_fail@plt+0xc8>
   1261c:	bl	11918 <__errno_location@plt>
   12620:	movw	r2, #55652	; 0xd964
   12624:	movt	r2, #1
   12628:	ldr	r1, [r0]
   1262c:	mov	r0, #1
   12630:	bl	11828 <error@plt>
   12634:	ldr	r3, [sp, #40]	; 0x28
   12638:	ldr	r4, [r3]
   1263c:	b	11be8 <__assert_fail@plt+0x108>
   12640:	add	r3, sp, #344	; 0x158
   12644:	add	r2, sp, #1360	; 0x550
   12648:	add	r2, r2, #8
   1264c:	mov	r0, r4
   12650:	str	r3, [sp, #32]
   12654:	add	r3, sp, #336	; 0x150
   12658:	sub	r7, r2, #4
   1265c:	mov	lr, r3
   12660:	mov	r3, #2
   12664:	mov	r1, ip
   12668:	mov	r2, r7
   1266c:	str	lr, [sp, #28]
   12670:	str	r3, [sp, #1364]	; 0x554
   12674:	mov	r3, lr
   12678:	str	ip, [sp, #1368]	; 0x558
   1267c:	str	ip, [sp, #1372]	; 0x55c
   12680:	str	ip, [sp, #1376]	; 0x560
   12684:	str	ip, [sp, #1380]	; 0x564
   12688:	str	ip, [sp, #1384]	; 0x568
   1268c:	str	ip, [sp, #1388]	; 0x56c
   12690:	str	ip, [sp, #1392]	; 0x570
   12694:	bl	11a68 <getaddrinfo@plt>
   12698:	subs	r6, r0, #0
   1269c:	beq	126e4 <__assert_fail@plt+0xc04>
   126a0:	movw	r4, #64564	; 0xfc34
   126a4:	movt	r4, #2
   126a8:	ldr	r3, [r4]
   126ac:	cmp	r3, #0
   126b0:	bne	11c28 <__assert_fail@plt+0x148>
   126b4:	movw	r0, #60936	; 0xee08
   126b8:	movt	r0, #1
   126bc:	bl	11774 <strdup@plt>
   126c0:	str	r0, [r4]
   126c4:	b	11c28 <__assert_fail@plt+0x148>
   126c8:	bl	11918 <__errno_location@plt>
   126cc:	movw	r2, #55680	; 0xd980
   126d0:	movt	r2, #1
   126d4:	ldr	r1, [r0]
   126d8:	mov	r0, #1
   126dc:	bl	11828 <error@plt>
   126e0:	b	11d14 <__assert_fail@plt+0x234>
   126e4:	ldr	r4, [sp, #40]	; 0x28
   126e8:	ldr	r0, [r4]
   126ec:	bl	1afbc <argp_parse@@Base+0x11cc>
   126f0:	ldr	r5, [sp, #336]	; 0x150
   126f4:	ldr	r0, [r5, #24]
   126f8:	bl	11774 <strdup@plt>
   126fc:	mov	r1, #46	; 0x2e
   12700:	str	r0, [r4]
   12704:	movw	r4, #64564	; 0xfc34
   12708:	movt	r4, #2
   1270c:	bl	11900 <strchr@plt>
   12710:	subs	r3, r0, #0
   12714:	mov	r0, r5
   12718:	strbne	r6, [r3], #1
   1271c:	strne	r3, [r4]
   12720:	bl	11a5c <freeaddrinfo@plt>
   12724:	b	126a8 <__assert_fail@plt+0xbc8>
   12728:	ldr	r0, [sp, #8]
   1272c:	mov	r1, #3
   12730:	add	r3, r0, fp, lsl #3
   12734:	str	r2, [r0, fp, lsl #3]
   12738:	movw	r0, #55992	; 0xdab8
   1273c:	movt	r0, #1
   12740:	add	fp, fp, #1
   12744:	strh	r1, [r3, #4]
   12748:	bl	129d0 <__assert_fail@plt+0xef0>
   1274c:	ldr	r3, [r8, #316]	; 0x13c
   12750:	cmp	r3, #0
   12754:	bge	12568 <__assert_fail@plt+0xa88>
   12758:	ldr	r3, [r8, #312]	; 0x138
   1275c:	cmp	r3, #0
   12760:	bge	11ef8 <__assert_fail@plt+0x418>
   12764:	b	125a4 <__assert_fail@plt+0xac4>
   12768:	ldr	r3, [r8, #316]	; 0x13c
   1276c:	cmp	r3, #0
   12770:	bge	12550 <__assert_fail@plt+0xa70>
   12774:	movw	r0, #55960	; 0xda98
   12778:	movt	r0, #1
   1277c:	bl	134fc <__assert_fail@plt+0x1a1c>
   12780:	b	12550 <__assert_fail@plt+0xa70>
   12784:	bl	11918 <__errno_location@plt>
   12788:	ldr	r0, [r0]
   1278c:	bl	11888 <strerror@plt>
   12790:	mov	r2, r0
   12794:	movw	r1, #55704	; 0xd998
   12798:	movt	r1, #1
   1279c:	movw	r0, #55732	; 0xd9b4
   127a0:	movt	r0, #1
   127a4:	bl	129d0 <__assert_fail@plt+0xef0>
   127a8:	b	11d3c <__assert_fail@plt+0x25c>
   127ac:	mov	r0, r6
   127b0:	bl	134fc <__assert_fail@plt+0x1a1c>
   127b4:	b	124a8 <__assert_fail@plt+0x9c8>
   127b8:	mov	r0, r4
   127bc:	bl	11ac8 <close@plt>
   127c0:	b	12464 <__assert_fail@plt+0x984>
   127c4:	mov	r1, #4
   127c8:	mov	r2, #26
   127cc:	ldr	r3, [sp, #28]
   127d0:	mov	r0, r4
   127d4:	str	r1, [sp]
   127d8:	mov	r1, #41	; 0x29
   127dc:	bl	1166c <setsockopt@plt>
   127e0:	b	124b4 <__assert_fail@plt+0x9d4>
   127e4:	movw	r0, #55892	; 0xda54
   127e8:	movt	r0, #1
   127ec:	bl	134fc <__assert_fail@plt+0x1a1c>
   127f0:	b	12550 <__assert_fail@plt+0xa70>
   127f4:	movw	r0, #55856	; 0xda30
   127f8:	movt	r0, #1
   127fc:	bl	129d0 <__assert_fail@plt+0xef0>
   12800:	add	r3, sp, #68	; 0x44
   12804:	str	r3, [sp, #12]
   12808:	b	12550 <__assert_fail@plt+0xa70>
   1280c:	mvn	r5, #0
   12810:	b	11e90 <__assert_fail@plt+0x3b0>
   12814:	mov	r3, r4
   12818:	movw	r1, #1025	; 0x401
   1281c:	ldr	r2, [sp, #52]	; 0x34
   12820:	mov	r0, r7
   12824:	mvn	r5, #0
   12828:	bl	11924 <snprintf@plt>
   1282c:	mov	r0, r7
   12830:	bl	134fc <__assert_fail@plt+0x1a1c>
   12834:	b	11e90 <__assert_fail@plt+0x3b0>
   12838:	andeq	pc, r2, r0, lsr r3	; <UNPREDICTABLE>
   1283c:	andeq	pc, r2, r4, lsl r3	; <UNPREDICTABLE>
   12840:	mov	fp, #0
   12844:	mov	lr, #0
   12848:	pop	{r1}		; (ldr r1, [sp], #4)
   1284c:	mov	r2, sp
   12850:	push	{r2}		; (str r2, [sp, #-4]!)
   12854:	push	{r0}		; (str r0, [sp, #-4]!)
   12858:	ldr	ip, [pc, #16]	; 12870 <__assert_fail@plt+0xd90>
   1285c:	push	{ip}		; (str ip, [sp, #-4]!)
   12860:	ldr	r0, [pc, #12]	; 12874 <__assert_fail@plt+0xd94>
   12864:	ldr	r3, [pc, #12]	; 12878 <__assert_fail@plt+0xd98>
   12868:	bl	1187c <__libc_start_main@plt>
   1286c:	bl	11ab0 <abort@plt>
   12870:	andeq	sp, r1, r8, ror #4
   12874:	andeq	r1, r1, ip, ror #21
   12878:	andeq	sp, r1, r8, lsl #4
   1287c:	ldr	r3, [pc, #20]	; 12898 <__assert_fail@plt+0xdb8>
   12880:	ldr	r2, [pc, #20]	; 1289c <__assert_fail@plt+0xdbc>
   12884:	add	r3, pc, r3
   12888:	ldr	r2, [r3, r2]
   1288c:	cmp	r2, #0
   12890:	bxeq	lr
   12894:	b	118a0 <__gmon_start__@plt>
   12898:	andeq	ip, r1, r4, ror r7
   1289c:	andeq	r0, r0, r0, lsr #3
   128a0:	ldr	r0, [pc, #24]	; 128c0 <__assert_fail@plt+0xde0>
   128a4:	ldr	r3, [pc, #24]	; 128c4 <__assert_fail@plt+0xde4>
   128a8:	cmp	r3, r0
   128ac:	bxeq	lr
   128b0:	ldr	r3, [pc, #16]	; 128c8 <__assert_fail@plt+0xde8>
   128b4:	cmp	r3, #0
   128b8:	bxeq	lr
   128bc:	bx	r3
   128c0:			; <UNDEFINED> instruction: 0x0002f5b8
   128c4:			; <UNDEFINED> instruction: 0x0002f5b8
   128c8:	andeq	r0, r0, r0
   128cc:	ldr	r0, [pc, #36]	; 128f8 <__assert_fail@plt+0xe18>
   128d0:	ldr	r1, [pc, #36]	; 128fc <__assert_fail@plt+0xe1c>
   128d4:	sub	r1, r1, r0
   128d8:	asr	r1, r1, #2
   128dc:	add	r1, r1, r1, lsr #31
   128e0:	asrs	r1, r1, #1
   128e4:	bxeq	lr
   128e8:	ldr	r3, [pc, #16]	; 12900 <__assert_fail@plt+0xe20>
   128ec:	cmp	r3, #0
   128f0:	bxeq	lr
   128f4:	bx	r3
   128f8:			; <UNDEFINED> instruction: 0x0002f5b8
   128fc:			; <UNDEFINED> instruction: 0x0002f5b8
   12900:	andeq	r0, r0, r0
   12904:	push	{r4, lr}
   12908:	ldr	r4, [pc, #24]	; 12928 <__assert_fail@plt+0xe48>
   1290c:	ldrb	r3, [r4]
   12910:	cmp	r3, #0
   12914:	popne	{r4, pc}
   12918:	bl	128a0 <__assert_fail@plt+0xdc0>
   1291c:	mov	r3, #1
   12920:	strb	r3, [r4]
   12924:	pop	{r4, pc}
   12928:	andeq	pc, r2, r8, asr #11
   1292c:	b	128cc <__assert_fail@plt+0xdec>
   12930:	movw	r3, #62924	; 0xf5cc
   12934:	movt	r3, #2
   12938:	mov	r2, #1
   1293c:	str	r2, [r3]
   12940:	bx	lr
   12944:	strd	r4, [sp, #-16]!
   12948:	movw	r4, #64544	; 0xfc20
   1294c:	movt	r4, #2
   12950:	ldr	r1, [r4]
   12954:	movw	r5, #64640	; 0xfc80
   12958:	movt	r5, #2
   1295c:	str	r6, [sp, #8]
   12960:	mov	r6, r0
   12964:	ldr	r0, [r5]
   12968:	str	lr, [sp, #12]
   1296c:	add	r1, r1, #1
   12970:	lsl	r1, r1, #3
   12974:	bl	1bd38 <argp_parse@@Base+0x1f48>
   12978:	cmp	r0, #0
   1297c:	str	r0, [r5]
   12980:	beq	129b0 <__assert_fail@plt+0xed0>
   12984:	ldr	r3, [r4]
   12988:	mvn	r1, #0
   1298c:	add	r2, r0, r3, lsl #3
   12990:	str	r6, [r0, r3, lsl #3]
   12994:	add	r3, r3, #1
   12998:	ldr	r6, [sp, #8]
   1299c:	str	r3, [r4]
   129a0:	ldrd	r4, [sp]
   129a4:	add	sp, sp, #12
   129a8:	str	r1, [r2, #4]
   129ac:	pop	{pc}		; (ldr pc, [sp], #4)
   129b0:	bl	11918 <__errno_location@plt>
   129b4:	movw	r2, #53908	; 0xd294
   129b8:	movt	r2, #1
   129bc:	ldr	r1, [r0]
   129c0:	mov	r0, #1
   129c4:	bl	11828 <error@plt>
   129c8:	ldr	r0, [r5]
   129cc:	b	12984 <__assert_fail@plt+0xea4>
   129d0:	push	{r0, r1, r2, r3}
   129d4:	movw	r3, #64572	; 0xfc3c
   129d8:	movt	r3, #2
   129dc:	ldr	r3, [r3]
   129e0:	str	r4, [sp, #-8]!
   129e4:	str	lr, [sp, #4]
   129e8:	sub	sp, sp, #8
   129ec:	cmp	r3, #0
   129f0:	beq	12a08 <__assert_fail@plt+0xf28>
   129f4:	movw	r3, #62924	; 0xf5cc
   129f8:	movt	r3, #2
   129fc:	ldr	r3, [r3, #4]
   12a00:	cmp	r3, #0
   12a04:	bne	12a20 <__assert_fail@plt+0xf40>
   12a08:	add	sp, sp, #8
   12a0c:	ldr	r4, [sp]
   12a10:	ldr	lr, [sp, #4]
   12a14:	add	sp, sp, #8
   12a18:	add	sp, sp, #16
   12a1c:	bx	lr
   12a20:	add	r3, sp, #20
   12a24:	movw	r4, #62916	; 0xf5c4
   12a28:	movt	r4, #2
   12a2c:	mov	r2, r3
   12a30:	ldr	r1, [sp, #16]
   12a34:	str	r3, [sp, #4]
   12a38:	ldr	r0, [r4]
   12a3c:	bl	119fc <vfprintf@plt>
   12a40:	ldr	r0, [r4]
   12a44:	bl	1169c <fflush@plt>
   12a48:	b	12a08 <__assert_fail@plt+0xf28>
   12a4c:	strd	r4, [sp, #-16]!
   12a50:	movw	r5, #62924	; 0xf5cc
   12a54:	movt	r5, #2
   12a58:	ldr	r4, [r5, #4]
   12a5c:	mov	r2, #1
   12a60:	movw	r3, #53956	; 0xd2c4
   12a64:	movt	r3, #1
   12a68:	movw	r1, #53948	; 0xd2bc
   12a6c:	movt	r1, #1
   12a70:	movw	r0, #53964	; 0xd2cc
   12a74:	movt	r0, #1
   12a78:	str	r2, [r5, #4]
   12a7c:	str	r6, [sp, #8]
   12a80:	cmp	r4, #0
   12a84:	str	lr, [sp, #12]
   12a88:	movne	r1, r3
   12a8c:	bl	129d0 <__assert_fail@plt+0xef0>
   12a90:	clz	r3, r4
   12a94:	ldr	r6, [sp, #8]
   12a98:	lsr	r3, r3, #5
   12a9c:	str	r3, [r5, #4]
   12aa0:	ldrd	r4, [sp]
   12aa4:	add	sp, sp, #12
   12aa8:	pop	{pc}		; (ldr pc, [sp], #4)
   12aac:	mov	r0, #0
   12ab0:	str	r4, [sp, #-8]!
   12ab4:	str	lr, [sp, #4]
   12ab8:	bl	11708 <_exit@plt>
   12abc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12ac0:	mov	r4, r1
   12ac4:	mov	r5, #0
   12ac8:	strd	r6, [sp, #8]
   12acc:	strd	r8, [sp, #16]
   12ad0:	mov	r9, r0
   12ad4:	strd	sl, [sp, #24]
   12ad8:	str	lr, [sp, #32]
   12adc:	sub	sp, sp, #4
   12ae0:	b	12ae8 <__assert_fail@plt+0x1008>
   12ae4:	strb	r5, [r4, r0]
   12ae8:	mov	r0, r4
   12aec:	bl	118e8 <strlen@plt>
   12af0:	sub	r0, r0, #1
   12af4:	ldrb	r3, [r4, r0]
   12af8:	cmp	r3, #58	; 0x3a
   12afc:	beq	12ae4 <__assert_fail@plt+0x1004>
   12b00:	ldrb	r3, [r4]
   12b04:	cmp	r3, #58	; 0x3a
   12b08:	bne	12b18 <__assert_fail@plt+0x1038>
   12b0c:	ldrb	r3, [r4, #1]!
   12b10:	cmp	r3, #58	; 0x3a
   12b14:	beq	12b0c <__assert_fail@plt+0x102c>
   12b18:	cmp	r3, #0
   12b1c:	beq	12c48 <__assert_fail@plt+0x1168>
   12b20:	ldrb	r3, [r4]
   12b24:	cmp	r3, #0
   12b28:	beq	12cb8 <__assert_fail@plt+0x11d8>
   12b2c:	mov	r2, r4
   12b30:	mov	r1, #1
   12b34:	cmp	r3, #58	; 0x3a
   12b38:	ldrb	r3, [r2, #1]!
   12b3c:	addeq	r1, r1, #1
   12b40:	cmp	r3, #0
   12b44:	bne	12b34 <__assert_fail@plt+0x1054>
   12b48:	cmp	r9, #0
   12b4c:	beq	12cc0 <__assert_fail@plt+0x11e0>
   12b50:	ldr	r6, [r9]
   12b54:	cmp	r6, #0
   12b58:	beq	12b78 <__assert_fail@plt+0x1098>
   12b5c:	mov	r3, r9
   12b60:	mov	r6, #0
   12b64:	ldr	r2, [r3, #4]!
   12b68:	add	r6, r6, #1
   12b6c:	cmp	r2, #0
   12b70:	bne	12b64 <__assert_fail@plt+0x1084>
   12b74:	add	r1, r1, r6
   12b78:	add	r1, r1, #1
   12b7c:	mov	r0, r9
   12b80:	lsl	r1, r1, #2
   12b84:	bl	1bd38 <argp_parse@@Base+0x1f48>
   12b88:	subs	r9, r0, #0
   12b8c:	beq	12c9c <__assert_fail@plt+0x11bc>
   12b90:	movw	fp, #53996	; 0xd2ec
   12b94:	movt	fp, #1
   12b98:	add	r7, r9, r6, lsl #2
   12b9c:	b	12bc0 <__assert_fail@plt+0x10e0>
   12ba0:	mov	r1, r4
   12ba4:	mov	r2, r8
   12ba8:	bl	11960 <strncpy@plt>
   12bac:	ldr	r3, [sl]
   12bb0:	mov	r2, #0
   12bb4:	add	r7, r7, #4
   12bb8:	add	r4, r5, #1
   12bbc:	strb	r2, [r3, r8]
   12bc0:	mov	r1, #58	; 0x3a
   12bc4:	mov	r0, r4
   12bc8:	bl	11900 <strchr@plt>
   12bcc:	subs	r5, r0, #0
   12bd0:	mov	sl, r7
   12bd4:	sub	r8, r5, r4
   12bd8:	beq	12c10 <__assert_fail@plt+0x1130>
   12bdc:	add	r0, r8, #1
   12be0:	add	r6, r6, #1
   12be4:	bl	1bcfc <argp_parse@@Base+0x1f0c>
   12be8:	cmp	r0, #0
   12bec:	str	r0, [r7]
   12bf0:	bne	12ba0 <__assert_fail@plt+0x10c0>
   12bf4:	bl	11918 <__errno_location@plt>
   12bf8:	mov	r2, fp
   12bfc:	ldr	r1, [r0]
   12c00:	mov	r0, #1
   12c04:	bl	11828 <error@plt>
   12c08:	ldr	r0, [r7]
   12c0c:	b	12ba0 <__assert_fail@plt+0x10c0>
   12c10:	mov	r0, r4
   12c14:	add	r6, r6, #1
   12c18:	bl	118e8 <strlen@plt>
   12c1c:	add	r0, r0, #1
   12c20:	bl	1b7e0 <argp_parse@@Base+0x19f0>
   12c24:	mov	r1, r4
   12c28:	str	r0, [r7]
   12c2c:	bl	1181c <strcpy@plt>
   12c30:	movw	r3, #64548	; 0xfc24
   12c34:	movt	r3, #2
   12c38:	ldr	r3, [r3]
   12c3c:	str	r5, [r9, r6, lsl #2]
   12c40:	cmp	r3, #0
   12c44:	bne	12c68 <__assert_fail@plt+0x1188>
   12c48:	mov	r0, r9
   12c4c:	add	sp, sp, #4
   12c50:	ldrd	r4, [sp]
   12c54:	ldrd	r6, [sp, #8]
   12c58:	ldrd	r8, [sp, #16]
   12c5c:	ldrd	sl, [sp, #24]
   12c60:	add	sp, sp, #32
   12c64:	pop	{pc}		; (ldr pc, [sp], #4)
   12c68:	ldr	r2, [r9]
   12c6c:	cmp	r2, #0
   12c70:	beq	12c48 <__assert_fail@plt+0x1168>
   12c74:	movw	r4, #54020	; 0xd304
   12c78:	movt	r4, #1
   12c7c:	mov	r1, r5
   12c80:	mov	r0, r4
   12c84:	add	r5, r5, #1
   12c88:	bl	11684 <printf@plt>
   12c8c:	ldr	r2, [r9, r5, lsl #2]
   12c90:	cmp	r2, #0
   12c94:	bne	12c7c <__assert_fail@plt+0x119c>
   12c98:	b	12c48 <__assert_fail@plt+0x1168>
   12c9c:	bl	11918 <__errno_location@plt>
   12ca0:	movw	r2, #53996	; 0xd2ec
   12ca4:	movt	r2, #1
   12ca8:	ldr	r1, [r0]
   12cac:	mov	r0, #1
   12cb0:	bl	11828 <error@plt>
   12cb4:	b	12b90 <__assert_fail@plt+0x10b0>
   12cb8:	mov	r1, #1
   12cbc:	b	12b48 <__assert_fail@plt+0x1068>
   12cc0:	mov	r6, r9
   12cc4:	b	12b78 <__assert_fail@plt+0x1098>
   12cc8:	sub	r0, r0, #52	; 0x34
   12ccc:	strd	r4, [sp, #-16]!
   12cd0:	mov	r4, r1
   12cd4:	str	r6, [sp, #8]
   12cd8:	str	lr, [sp, #12]
   12cdc:	sub	sp, sp, #8
   12ce0:	cmp	r0, #207	; 0xcf
   12ce4:	ldrls	pc, [pc, r0, lsl #2]
   12ce8:	b	13270 <__assert_fail@plt+0x1790>
   12cec:	andeq	r3, r1, r8, asr r2
   12cf0:	andeq	r3, r1, r0, ror r2
   12cf4:	andeq	r3, r1, r0, asr #4
   12cf8:	andeq	r3, r1, r0, ror r2
   12cfc:	andeq	r3, r1, r0, ror r2
   12d00:	andeq	r3, r1, r0, ror r2
   12d04:	andeq	r3, r1, r0, ror r2
   12d08:	andeq	r3, r1, r0, ror r2
   12d0c:	andeq	r3, r1, r0, ror r2
   12d10:	andeq	r3, r1, r0, ror r2
   12d14:	andeq	r3, r1, r0, ror r2
   12d18:	andeq	r3, r1, r0, ror r2
   12d1c:	andeq	r3, r1, r0, ror r2
   12d20:	andeq	r3, r1, r0, ror r2
   12d24:	andeq	r3, r1, ip, lsr #4
   12d28:	andeq	r3, r1, r0, ror r2
   12d2c:	andeq	r3, r1, r8, lsl r2
   12d30:	andeq	r3, r1, r0, ror r2
   12d34:	andeq	r3, r1, r0, ror r2
   12d38:	andeq	r3, r1, r0, ror r2
   12d3c:	andeq	r3, r1, r0, ror r2
   12d40:	andeq	r3, r1, r0, ror r2
   12d44:	andeq	r3, r1, r0, ror r2
   12d48:	andeq	r3, r1, r0, ror r2
   12d4c:	andeq	r3, r1, r0, ror r2
   12d50:	andeq	r3, r1, r0, ror r2
   12d54:	andeq	r3, r1, r0, ror r2
   12d58:	andeq	r3, r1, r0, ror r2
   12d5c:	andeq	r3, r1, r4, lsl #4
   12d60:	andeq	r3, r1, r0, ror r2
   12d64:	andeq	r3, r1, r0, ror r2
   12d68:	andeq	r3, r1, ip, ror #3
   12d6c:	ldrdeq	r3, [r1], -r4
   12d70:	andeq	r3, r1, r0, ror r2
   12d74:	andeq	r3, r1, r0, ror r2
   12d78:	andeq	r3, r1, r0, ror r2
   12d7c:	andeq	r3, r1, r0, ror r2
   12d80:	andeq	r3, r1, r0, ror r2
   12d84:	andeq	r3, r1, r0, ror r2
   12d88:	andeq	r3, r1, r0, ror r2
   12d8c:	andeq	r3, r1, r0, ror r2
   12d90:	andeq	r3, r1, r0, ror r2
   12d94:	andeq	r3, r1, r0, ror r2
   12d98:	andeq	r3, r1, r0, ror r2
   12d9c:	andeq	r3, r1, r0, ror r2
   12da0:	andeq	r3, r1, r4, asr #3
   12da4:			; <UNDEFINED> instruction: 0x000131b0
   12da8:	andeq	r3, r1, r0, ror r2
   12dac:	andeq	r3, r1, ip, lsl #3
   12db0:	andeq	r3, r1, r0, ror r2
   12db4:	andeq	r3, r1, r8, ror r1
   12db8:	andeq	r3, r1, r0, ror r2
   12dbc:	andeq	r3, r1, r0, ror #2
   12dc0:	andeq	r3, r1, r0, ror r2
   12dc4:	andeq	r3, r1, r0, ror r2
   12dc8:	andeq	r3, r1, r0, ror r2
   12dcc:	andeq	r3, r1, r4, asr r1
   12dd0:	andeq	r3, r1, r0, lsl r1
   12dd4:	strdeq	r3, [r1], -r8
   12dd8:	andeq	r3, r1, r0, ror r2
   12ddc:	ldrdeq	r3, [r1], -r8
   12de0:	andeq	r3, r1, r0, ror r2
   12de4:	andeq	r3, r1, r0, asr #1
   12de8:	andeq	r3, r1, r0, lsr #1
   12dec:	andeq	r3, r1, r0, ror r2
   12df0:	andeq	r3, r1, r0, ror r2
   12df4:	andeq	r3, r1, r0, ror r2
   12df8:	andeq	r3, r1, r0, ror r2
   12dfc:	andeq	r3, r1, r0, ror r2
   12e00:	andeq	r3, r1, r0, ror r2
   12e04:	andeq	r3, r1, r0, ror r2
   12e08:	andeq	r3, r1, r0, ror r2
   12e0c:	andeq	r3, r1, r0, ror r2
   12e10:	andeq	r3, r1, r0, ror r2
   12e14:	andeq	r3, r1, r0, ror r2
   12e18:	andeq	r3, r1, r0, ror r2
   12e1c:	andeq	r3, r1, r0, ror r2
   12e20:	andeq	r3, r1, r0, ror r2
   12e24:	andeq	r3, r1, r0, ror r2
   12e28:	andeq	r3, r1, r0, ror r2
   12e2c:	andeq	r3, r1, r0, ror r2
   12e30:	andeq	r3, r1, r0, ror r2
   12e34:	andeq	r3, r1, r0, ror r2
   12e38:	andeq	r3, r1, r0, ror r2
   12e3c:	andeq	r3, r1, r0, ror r2
   12e40:	andeq	r3, r1, r0, ror r2
   12e44:	andeq	r3, r1, r0, ror r2
   12e48:	andeq	r3, r1, r0, ror r2
   12e4c:	andeq	r3, r1, r0, ror r2
   12e50:	andeq	r3, r1, r0, ror r2
   12e54:	andeq	r3, r1, r0, ror r2
   12e58:	andeq	r3, r1, r0, ror r2
   12e5c:	andeq	r3, r1, r0, ror r2
   12e60:	andeq	r3, r1, r0, ror r2
   12e64:	andeq	r3, r1, r0, ror r2
   12e68:	andeq	r3, r1, r0, ror r2
   12e6c:	andeq	r3, r1, r0, ror r2
   12e70:	andeq	r3, r1, r0, ror r2
   12e74:	andeq	r3, r1, r0, ror r2
   12e78:	andeq	r3, r1, r0, ror r2
   12e7c:	andeq	r3, r1, r0, ror r2
   12e80:	andeq	r3, r1, r0, ror r2
   12e84:	andeq	r3, r1, r0, ror r2
   12e88:	andeq	r3, r1, r0, ror r2
   12e8c:	andeq	r3, r1, r0, ror r2
   12e90:	andeq	r3, r1, r0, ror r2
   12e94:	andeq	r3, r1, r0, ror r2
   12e98:	andeq	r3, r1, r0, ror r2
   12e9c:	andeq	r3, r1, r0, ror r2
   12ea0:	andeq	r3, r1, r0, ror r2
   12ea4:	andeq	r3, r1, r0, ror r2
   12ea8:	andeq	r3, r1, r0, ror r2
   12eac:	andeq	r3, r1, r0, ror r2
   12eb0:	andeq	r3, r1, r0, ror r2
   12eb4:	andeq	r3, r1, r0, ror r2
   12eb8:	andeq	r3, r1, r0, ror r2
   12ebc:	andeq	r3, r1, r0, ror r2
   12ec0:	andeq	r3, r1, r0, ror r2
   12ec4:	andeq	r3, r1, r0, ror r2
   12ec8:	andeq	r3, r1, r0, ror r2
   12ecc:	andeq	r3, r1, r0, ror r2
   12ed0:	andeq	r3, r1, r0, ror r2
   12ed4:	andeq	r3, r1, r0, ror r2
   12ed8:	andeq	r3, r1, r0, ror r2
   12edc:	andeq	r3, r1, r0, ror r2
   12ee0:	andeq	r3, r1, r0, ror r2
   12ee4:	andeq	r3, r1, r0, ror r2
   12ee8:	andeq	r3, r1, r0, ror r2
   12eec:	andeq	r3, r1, r0, ror r2
   12ef0:	andeq	r3, r1, r0, ror r2
   12ef4:	andeq	r3, r1, r0, ror r2
   12ef8:	andeq	r3, r1, r0, ror r2
   12efc:	andeq	r3, r1, r0, ror r2
   12f00:	andeq	r3, r1, r0, ror r2
   12f04:	andeq	r3, r1, r0, ror r2
   12f08:	andeq	r3, r1, r0, ror r2
   12f0c:	andeq	r3, r1, r0, ror r2
   12f10:	andeq	r3, r1, r0, ror r2
   12f14:	andeq	r3, r1, r0, ror r2
   12f18:	andeq	r3, r1, r0, ror r2
   12f1c:	andeq	r3, r1, r0, ror r2
   12f20:	andeq	r3, r1, r0, ror r2
   12f24:	andeq	r3, r1, r0, ror r2
   12f28:	andeq	r3, r1, r0, ror r2
   12f2c:	andeq	r3, r1, r0, ror r2
   12f30:	andeq	r3, r1, r0, ror r2
   12f34:	andeq	r3, r1, r0, ror r2
   12f38:	andeq	r3, r1, r0, ror r2
   12f3c:	andeq	r3, r1, r0, ror r2
   12f40:	andeq	r3, r1, r0, ror r2
   12f44:	andeq	r3, r1, r0, ror r2
   12f48:	andeq	r3, r1, r0, ror r2
   12f4c:	andeq	r3, r1, r0, ror r2
   12f50:	andeq	r3, r1, r0, ror r2
   12f54:	andeq	r3, r1, r0, ror r2
   12f58:	andeq	r3, r1, r0, ror r2
   12f5c:	andeq	r3, r1, r0, ror r2
   12f60:	andeq	r3, r1, r0, ror r2
   12f64:	andeq	r3, r1, r0, ror r2
   12f68:	andeq	r3, r1, r0, ror r2
   12f6c:	andeq	r3, r1, r0, ror r2
   12f70:	andeq	r3, r1, r0, ror r2
   12f74:	andeq	r3, r1, r0, ror r2
   12f78:	andeq	r3, r1, r0, ror r2
   12f7c:	andeq	r3, r1, r0, ror r2
   12f80:	andeq	r3, r1, r0, ror r2
   12f84:	andeq	r3, r1, r0, ror r2
   12f88:	andeq	r3, r1, r0, ror r2
   12f8c:	andeq	r3, r1, r0, ror r2
   12f90:	andeq	r3, r1, r0, ror r2
   12f94:	andeq	r3, r1, r0, ror r2
   12f98:	andeq	r3, r1, r0, ror r2
   12f9c:	andeq	r3, r1, r0, ror r2
   12fa0:	andeq	r3, r1, r0, ror r2
   12fa4:	andeq	r3, r1, r0, ror r2
   12fa8:	andeq	r3, r1, r0, ror r2
   12fac:	andeq	r3, r1, r0, ror r2
   12fb0:	andeq	r3, r1, r0, ror r2
   12fb4:	andeq	r3, r1, r0, ror r2
   12fb8:	andeq	r3, r1, r0, ror r2
   12fbc:	andeq	r3, r1, r0, ror r2
   12fc0:	andeq	r3, r1, r0, ror r2
   12fc4:	andeq	r3, r1, r0, ror r2
   12fc8:	andeq	r3, r1, r0, ror r2
   12fcc:	andeq	r3, r1, r0, ror r2
   12fd0:	andeq	r3, r1, r0, ror r2
   12fd4:	andeq	r3, r1, r0, ror r2
   12fd8:	andeq	r3, r1, r0, ror r2
   12fdc:	andeq	r3, r1, r0, ror r2
   12fe0:	andeq	r3, r1, r0, ror r2
   12fe4:	andeq	r3, r1, r0, ror r2
   12fe8:	andeq	r3, r1, r0, ror r2
   12fec:	andeq	r3, r1, r0, ror r2
   12ff0:	andeq	r3, r1, r0, ror r2
   12ff4:	andeq	r3, r1, r0, ror r2
   12ff8:	andeq	r3, r1, r0, ror r2
   12ffc:	andeq	r3, r1, r0, ror r2
   13000:	andeq	r3, r1, r0, ror r2
   13004:	andeq	r3, r1, r0, ror r2
   13008:	andeq	r3, r1, r0, ror r2
   1300c:	andeq	r3, r1, r0, ror r2
   13010:	andeq	r3, r1, r0, ror r2
   13014:	andeq	r3, r1, r0, ror r2
   13018:	andeq	r3, r1, r0, ror r2
   1301c:	andeq	r3, r1, r8, lsl #1
   13020:	andeq	r3, r1, r0, ror r0
   13024:	andeq	r3, r1, r8, asr r0
   13028:	andeq	r3, r1, ip, lsr #32
   1302c:	mov	r1, #0
   13030:	movw	r2, #61868	; 0xf1ac
   13034:	movt	r2, #2
   13038:	mov	r3, r1
   1303c:	str	r1, [r2, #4]
   13040:	mov	r0, r3
   13044:	add	sp, sp, #8
   13048:	ldrd	r4, [sp]
   1304c:	ldr	r6, [sp, #8]
   13050:	add	sp, sp, #12
   13054:	pop	{pc}		; (ldr pc, [sp], #4)
   13058:	movw	r2, #64552	; 0xfc28
   1305c:	movt	r2, #2
   13060:	mov	r1, #1
   13064:	mov	r3, #0
   13068:	str	r1, [r2]
   1306c:	b	13040 <__assert_fail@plt+0x1560>
   13070:	movw	r2, #64060	; 0xfa3c
   13074:	movt	r2, #2
   13078:	mov	r1, #1
   1307c:	mov	r3, #0
   13080:	str	r1, [r2]
   13084:	b	13040 <__assert_fail@plt+0x1560>
   13088:	movw	r2, #64636	; 0xfc7c
   1308c:	movt	r2, #2
   13090:	mov	r1, #1
   13094:	mov	r3, #0
   13098:	str	r1, [r2]
   1309c:	b	13040 <__assert_fail@plt+0x1560>
   130a0:	movw	r5, #64540	; 0xfc1c
   130a4:	movt	r5, #2
   130a8:	mov	r1, r4
   130ac:	ldr	r0, [r5]
   130b0:	bl	12abc <__assert_fail@plt+0xfdc>
   130b4:	mov	r3, #0
   130b8:	str	r0, [r5]
   130bc:	b	13040 <__assert_fail@plt+0x1560>
   130c0:	movw	r2, #64064	; 0xfa40
   130c4:	movt	r2, #2
   130c8:	mov	r1, #1
   130cc:	mov	r3, #0
   130d0:	str	r1, [r2]
   130d4:	b	13040 <__assert_fail@plt+0x1560>
   130d8:	movw	r3, #64640	; 0xfc80
   130dc:	movt	r3, #2
   130e0:	ldr	r2, [r3]
   130e4:	mvn	r1, #0
   130e8:	mov	r3, #0
   130ec:	str	r4, [r2]
   130f0:	str	r1, [r2, #4]
   130f4:	b	13040 <__assert_fail@plt+0x1560>
   130f8:	movw	r2, #64572	; 0xfc3c
   130fc:	movt	r2, #2
   13100:	mov	r1, #1
   13104:	mov	r3, #0
   13108:	str	r1, [r2]
   1310c:	b	13040 <__assert_fail@plt+0x1560>
   13110:	mov	r5, r2
   13114:	add	r1, sp, #4
   13118:	mov	r2, #10
   1311c:	mov	r0, r4
   13120:	bl	11660 <strtol@plt>
   13124:	ldr	r3, [sp, #4]
   13128:	mov	r6, r0
   1312c:	ldrb	r2, [r3]
   13130:	cmp	r2, #0
   13134:	bne	13278 <__assert_fail@plt+0x1798>
   13138:	rsb	r6, r6, r6, lsl #4
   1313c:	movw	r2, #61868	; 0xf1ac
   13140:	movt	r2, #2
   13144:	mov	r3, #0
   13148:	lsl	r6, r6, #2
   1314c:	str	r6, [r2, #8]
   13150:	b	13040 <__assert_fail@plt+0x1560>
   13154:	movw	r5, #64580	; 0xfc44
   13158:	movt	r5, #2
   1315c:	b	130a8 <__assert_fail@plt+0x15c8>
   13160:	mov	r1, #0
   13164:	movw	r2, #61868	; 0xf1ac
   13168:	movt	r2, #2
   1316c:	mov	r3, r1
   13170:	str	r1, [r2]
   13174:	b	13040 <__assert_fail@plt+0x1560>
   13178:	movw	r2, #61868	; 0xf1ac
   1317c:	movt	r2, #2
   13180:	mov	r3, #0
   13184:	str	r1, [r2, #16]
   13188:	b	13040 <__assert_fail@plt+0x1560>
   1318c:	mov	r0, #1
   13190:	movw	r1, #64548	; 0xfc24
   13194:	movt	r1, #2
   13198:	movw	r2, #64572	; 0xfc3c
   1319c:	movt	r2, #2
   131a0:	mov	r3, #0
   131a4:	str	r0, [r1]
   131a8:	str	r0, [r2]
   131ac:	b	13040 <__assert_fail@plt+0x1560>
   131b0:	movw	r2, #62924	; 0xf5cc
   131b4:	movt	r2, #2
   131b8:	mov	r3, #0
   131bc:	str	r1, [r2, #8]
   131c0:	b	13040 <__assert_fail@plt+0x1560>
   131c4:	mov	r0, r1
   131c8:	bl	12944 <__assert_fail@plt+0xe64>
   131cc:	mov	r3, #0
   131d0:	b	13040 <__assert_fail@plt+0x1560>
   131d4:	movw	r2, #62924	; 0xf5cc
   131d8:	movt	r2, #2
   131dc:	mov	r1, #1
   131e0:	mov	r3, #0
   131e4:	str	r1, [r2, #16]
   131e8:	b	13040 <__assert_fail@plt+0x1560>
   131ec:	movw	r2, #64556	; 0xfc2c
   131f0:	movt	r2, #2
   131f4:	mov	r1, #1
   131f8:	mov	r3, #0
   131fc:	str	r1, [r2]
   13200:	b	13040 <__assert_fail@plt+0x1560>
   13204:	movw	r2, #61868	; 0xf1ac
   13208:	movt	r2, #2
   1320c:	mov	r3, #0
   13210:	str	r1, [r2, #12]
   13214:	b	13040 <__assert_fail@plt+0x1560>
   13218:	movw	r2, #61868	; 0xf1ac
   1321c:	movt	r2, #2
   13220:	mov	r3, #0
   13224:	str	r1, [r2, #20]
   13228:	b	13040 <__assert_fail@plt+0x1560>
   1322c:	movw	r2, #62924	; 0xf5cc
   13230:	movt	r2, #2
   13234:	mov	r3, #0
   13238:	str	r1, [r2, #12]
   1323c:	b	13040 <__assert_fail@plt+0x1560>
   13240:	movw	r2, #61868	; 0xf1ac
   13244:	movt	r2, #2
   13248:	mov	r1, #10
   1324c:	mov	r3, #0
   13250:	str	r1, [r2, #4]
   13254:	b	13040 <__assert_fail@plt+0x1560>
   13258:	movw	r2, #61868	; 0xf1ac
   1325c:	movt	r2, #2
   13260:	mov	r1, #2
   13264:	mov	r3, #0
   13268:	str	r1, [r2, #4]
   1326c:	b	13040 <__assert_fail@plt+0x1560>
   13270:	mov	r3, #7
   13274:	b	13040 <__assert_fail@plt+0x1560>
   13278:	mov	r2, r4
   1327c:	mov	r0, r5
   13280:	movw	r1, #54032	; 0xd310
   13284:	movt	r1, #1
   13288:	bl	196d8 <argp_error@@Base>
   1328c:	b	13138 <__assert_fail@plt+0x1658>
   13290:	push	{lr}		; (str lr, [sp, #-4]!)
   13294:	movw	lr, #61868	; 0xf1ac
   13298:	movt	lr, #2
   1329c:	ldr	r3, [lr, #24]
   132a0:	sub	sp, sp, #12
   132a4:	cmp	r3, #0
   132a8:	beq	132e0 <__assert_fail@plt+0x1800>
   132ac:	ldr	r2, [lr, #28]
   132b0:	and	ip, r0, #1016	; 0x3f8
   132b4:	cmp	r2, ip
   132b8:	beq	132e0 <__assert_fail@plt+0x1800>
   132bc:	add	r2, lr, #24
   132c0:	b	132d0 <__assert_fail@plt+0x17f0>
   132c4:	ldr	r1, [r2, #4]
   132c8:	cmp	r1, ip
   132cc:	beq	132e0 <__assert_fail@plt+0x1800>
   132d0:	ldr	r3, [r2, #8]
   132d4:	add	r2, r2, #8
   132d8:	cmp	r3, #0
   132dc:	bne	132c4 <__assert_fail@plt+0x17e4>
   132e0:	ldr	ip, [lr, #208]	; 0xd0
   132e4:	cmp	ip, #0
   132e8:	beq	13320 <__assert_fail@plt+0x1840>
   132ec:	ldr	r2, [lr, #212]	; 0xd4
   132f0:	and	r0, r0, #7
   132f4:	cmp	r0, r2
   132f8:	ldrne	r2, [pc, #68]	; 13344 <__assert_fail@plt+0x1864>
   132fc:	bne	13310 <__assert_fail@plt+0x1830>
   13300:	b	13320 <__assert_fail@plt+0x1840>
   13304:	ldr	r1, [r2, #4]
   13308:	cmp	r1, r0
   1330c:	beq	13320 <__assert_fail@plt+0x1840>
   13310:	ldr	ip, [r2, #8]
   13314:	add	r2, r2, #8
   13318:	cmp	ip, #0
   1331c:	bne	13304 <__assert_fail@plt+0x1824>
   13320:	mov	r1, #20
   13324:	movw	r2, #54064	; 0xd330
   13328:	movt	r2, #1
   1332c:	ldr	r0, [pc, #20]	; 13348 <__assert_fail@plt+0x1868>
   13330:	str	ip, [sp]
   13334:	bl	11924 <snprintf@plt>
   13338:	ldr	r0, [pc, #8]	; 13348 <__assert_fail@plt+0x1868>
   1333c:	add	sp, sp, #12
   13340:	pop	{pc}		; (ldr pc, [sp], #4)
   13344:	andeq	pc, r2, ip, ror r2	; <UNPREDICTABLE>
   13348:	andeq	pc, r2, r0, ror #11
   1334c:	mov	ip, #0
   13350:	strd	r4, [sp, #-16]!
   13354:	movw	r2, #64584	; 0xfc48
   13358:	movt	r2, #2
   1335c:	str	r6, [sp, #8]
   13360:	mov	r3, #46	; 0x2e
   13364:	str	lr, [sp, #12]
   13368:	sub	sp, sp, #16
   1336c:	mov	lr, #1
   13370:	mov	r5, r0
   13374:	mov	r6, r1
   13378:	str	ip, [sp]
   1337c:	stmib	sp, {ip, lr}
   13380:	bl	119e4 <getnameinfo@plt>
   13384:	subs	r4, r0, #0
   13388:	bne	13470 <__assert_fail@plt+0x1990>
   1338c:	movw	r1, #64584	; 0xfc48
   13390:	movt	r1, #2
   13394:	movw	r0, #54108	; 0xd35c
   13398:	movt	r0, #1
   1339c:	bl	129d0 <__assert_fail@plt+0xef0>
   133a0:	mov	ip, #8
   133a4:	mov	r1, r6
   133a8:	str	r4, [sp]
   133ac:	mov	r0, r5
   133b0:	movw	r2, #64648	; 0xfc88
   133b4:	movt	r2, #2
   133b8:	movw	r3, #1025	; 0x401
   133bc:	stmib	sp, {r4, ip}
   133c0:	bl	119e4 <getnameinfo@plt>
   133c4:	cmp	r0, #0
   133c8:	bne	13490 <__assert_fail@plt+0x19b0>
   133cc:	movw	r0, #64648	; 0xfc88
   133d0:	movt	r0, #2
   133d4:	mov	r1, #46	; 0x2e
   133d8:	bl	11900 <strchr@plt>
   133dc:	subs	r5, r0, #0
   133e0:	beq	13464 <__assert_fail@plt+0x1984>
   133e4:	movw	r3, #64564	; 0xfc34
   133e8:	movt	r3, #2
   133ec:	add	r6, r5, #1
   133f0:	ldr	r1, [r3]
   133f4:	mov	r0, r6
   133f8:	bl	117d4 <strcasecmp@plt>
   133fc:	subs	r3, r0, #0
   13400:	beq	13444 <__assert_fail@plt+0x1964>
   13404:	movw	r3, #64540	; 0xfc1c
   13408:	movt	r3, #2
   1340c:	ldr	r4, [r3]
   13410:	cmp	r4, #0
   13414:	beq	134b0 <__assert_fail@plt+0x19d0>
   13418:	ldr	r1, [r4]
   1341c:	cmp	r1, #0
   13420:	bne	13434 <__assert_fail@plt+0x1954>
   13424:	b	134b0 <__assert_fail@plt+0x19d0>
   13428:	ldr	r1, [r4, #4]!
   1342c:	cmp	r1, #0
   13430:	beq	134b0 <__assert_fail@plt+0x19d0>
   13434:	mov	r0, r6
   13438:	bl	117d4 <strcasecmp@plt>
   1343c:	subs	r3, r0, #0
   13440:	bne	13428 <__assert_fail@plt+0x1948>
   13444:	movw	r0, #64648	; 0xfc88
   13448:	movt	r0, #2
   1344c:	strb	r3, [r5]
   13450:	add	sp, sp, #16
   13454:	ldrd	r4, [sp]
   13458:	ldr	r6, [sp, #8]
   1345c:	add	sp, sp, #12
   13460:	pop	{pc}		; (ldr pc, [sp], #4)
   13464:	movw	r0, #64648	; 0xfc88
   13468:	movt	r0, #2
   1346c:	b	13450 <__assert_fail@plt+0x1970>
   13470:	bl	116e4 <gai_strerror@plt>
   13474:	mov	r1, r0
   13478:	movw	r0, #54076	; 0xd33c
   1347c:	movt	r0, #1
   13480:	bl	129d0 <__assert_fail@plt+0xef0>
   13484:	movw	r0, #54072	; 0xd338
   13488:	movt	r0, #1
   1348c:	b	13450 <__assert_fail@plt+0x1970>
   13490:	movw	r1, #64584	; 0xfc48
   13494:	movt	r1, #2
   13498:	movw	r0, #54124	; 0xd36c
   1349c:	movt	r0, #1
   134a0:	bl	129d0 <__assert_fail@plt+0xef0>
   134a4:	movw	r0, #64584	; 0xfc48
   134a8:	movt	r0, #2
   134ac:	b	13450 <__assert_fail@plt+0x1970>
   134b0:	movw	r3, #64580	; 0xfc44
   134b4:	movt	r3, #2
   134b8:	ldr	r4, [r3]
   134bc:	cmp	r4, #0
   134c0:	beq	13464 <__assert_fail@plt+0x1984>
   134c4:	ldr	r1, [r4]
   134c8:	cmp	r1, #0
   134cc:	beq	13464 <__assert_fail@plt+0x1984>
   134d0:	movw	r6, #64648	; 0xfc88
   134d4:	movt	r6, #2
   134d8:	b	134e8 <__assert_fail@plt+0x1a08>
   134dc:	ldr	r1, [r4, #4]!
   134e0:	cmp	r1, #0
   134e4:	beq	13464 <__assert_fail@plt+0x1984>
   134e8:	mov	r0, r6
   134ec:	bl	117d4 <strcasecmp@plt>
   134f0:	subs	r3, r0, #0
   134f4:	bne	134dc <__assert_fail@plt+0x19fc>
   134f8:	b	13444 <__assert_fail@plt+0x1964>
   134fc:	strd	r4, [sp, #-16]!
   13500:	str	r6, [sp, #8]
   13504:	mov	r6, r0
   13508:	str	lr, [sp, #12]
   1350c:	sub	sp, sp, #112	; 0x70
   13510:	bl	11918 <__errno_location@plt>
   13514:	mov	r5, r0
   13518:	ldr	r0, [r0]
   1351c:	add	r4, sp, #12
   13520:	cmp	r0, #0
   13524:	beq	13590 <__assert_fail@plt+0x1ab0>
   13528:	bl	11888 <strerror@plt>
   1352c:	movw	r2, #54168	; 0xd398
   13530:	movt	r2, #1
   13534:	str	r0, [sp]
   13538:	mov	r3, r6
   1353c:	mov	r1, #100	; 0x64
   13540:	mov	r0, r4
   13544:	bl	11924 <snprintf@plt>
   13548:	mov	r3, #0
   1354c:	mov	r1, r4
   13550:	movw	r0, #59792	; 0xe990
   13554:	movt	r0, #1
   13558:	str	r3, [r5]
   1355c:	bl	129d0 <__assert_fail@plt+0xef0>
   13560:	movw	r2, #64568	; 0xfc38
   13564:	movt	r2, #2
   13568:	ldr	r2, [r2]
   1356c:	mov	r1, r4
   13570:	mov	r3, #4
   13574:	mov	r0, #43	; 0x2b
   13578:	bl	13ebc <__assert_fail@plt+0x23dc>
   1357c:	add	sp, sp, #112	; 0x70
   13580:	ldrd	r4, [sp]
   13584:	ldr	r6, [sp, #8]
   13588:	add	sp, sp, #12
   1358c:	pop	{pc}		; (ldr pc, [sp], #4)
   13590:	mov	r3, r6
   13594:	mov	r0, r4
   13598:	movw	r2, #54184	; 0xd3a8
   1359c:	movt	r2, #1
   135a0:	mov	r1, #100	; 0x64
   135a4:	bl	11924 <snprintf@plt>
   135a8:	b	13548 <__assert_fail@plt+0x1a68>
   135ac:	strd	r4, [sp, #-36]!	; 0xffffffdc
   135b0:	strd	r6, [sp, #8]
   135b4:	strd	sl, [sp, #24]
   135b8:	movw	fp, #62924	; 0xf5cc
   135bc:	movt	fp, #2
   135c0:	ldr	sl, [fp, #40]	; 0x28
   135c4:	strd	r8, [sp, #16]
   135c8:	str	lr, [sp, #32]
   135cc:	sub	sp, sp, #60	; 0x3c
   135d0:	add	r3, sl, #1
   135d4:	cmp	sl, #0
   135d8:	str	r3, [fp, #40]	; 0x28
   135dc:	beq	135fc <__assert_fail@plt+0x1b1c>
   135e0:	add	sp, sp, #60	; 0x3c
   135e4:	ldrd	r4, [sp]
   135e8:	ldrd	r6, [sp, #8]
   135ec:	ldrd	r8, [sp, #16]
   135f0:	ldrd	sl, [sp, #24]
   135f4:	add	sp, sp, #32
   135f8:	pop	{pc}		; (ldr pc, [sp], #4)
   135fc:	mov	r9, r0
   13600:	mov	r3, #3
   13604:	str	r1, [sp, #4]
   13608:	movw	r0, #54196	; 0xd3b4
   1360c:	movt	r0, #1
   13610:	add	r2, sp, #12
   13614:	add	r1, sp, #16
   13618:	bl	1b238 <argp_parse@@Base+0x1448>
   1361c:	cmp	r0, #0
   13620:	blt	13730 <__assert_fail@plt+0x1c50>
   13624:	ldr	r8, [sp, #12]
   13628:	ldr	r3, [sp, #16]
   1362c:	add	r3, r3, r3, lsl #1
   13630:	add	r3, r8, r3, lsl #7
   13634:	cmp	r8, r3
   13638:	bcs	13740 <__assert_fail@plt+0x1c60>
   1363c:	str	sl, [sp]
   13640:	add	r1, r8, #8
   13644:	mov	r2, #32
   13648:	add	r0, sp, #20
   1364c:	bl	11960 <strncpy@plt>
   13650:	ldrsh	r1, [r9, #4]
   13654:	ldr	r3, [sp]
   13658:	cmp	r1, #6
   1365c:	strb	r3, [sp, #52]	; 0x34
   13660:	beq	13700 <__assert_fail@plt+0x1c20>
   13664:	ldr	r5, [r9, #40]	; 0x28
   13668:	cmp	r5, #0
   1366c:	ble	136d4 <__assert_fail@plt+0x1bf4>
   13670:	ldr	r3, [r9, #44]	; 0x2c
   13674:	add	r6, r8, #44	; 0x2c
   13678:	mov	r4, #0
   1367c:	sub	sl, r3, #4
   13680:	b	1368c <__assert_fail@plt+0x1bac>
   13684:	cmp	r4, r5
   13688:	beq	136d4 <__assert_fail@plt+0x1bf4>
   1368c:	mov	r2, #32
   13690:	mov	r1, r6
   13694:	ldr	r0, [sl, #4]!
   13698:	bl	11aa4 <strncmp@plt>
   1369c:	subs	r7, r0, #0
   136a0:	add	r4, r4, #1
   136a4:	bne	13684 <__assert_fail@plt+0x1ba4>
   136a8:	mov	r3, #10
   136ac:	add	r2, sp, #20
   136b0:	ldr	r0, [sp, #4]
   136b4:	mov	r1, #6
   136b8:	bl	15de4 <daemon@@Base+0x190>
   136bc:	subs	r4, r0, #0
   136c0:	beq	136d4 <__assert_fail@plt+0x1bf4>
   136c4:	bl	11918 <__errno_location@plt>
   136c8:	str	r7, [r0]
   136cc:	mov	r0, r4
   136d0:	bl	134fc <__assert_fail@plt+0x1a1c>
   136d4:	ldr	r0, [sp, #12]
   136d8:	add	r8, r8, #384	; 0x180
   136dc:	ldr	r3, [sp, #16]
   136e0:	add	r3, r3, r3, lsl #1
   136e4:	add	r3, r0, r3, lsl #7
   136e8:	cmp	r8, r3
   136ec:	bcc	13640 <__assert_fail@plt+0x1b60>
   136f0:	bl	1afbc <argp_parse@@Base+0x11cc>
   136f4:	mov	r3, #0
   136f8:	str	r3, [fp, #40]	; 0x28
   136fc:	b	135e0 <__assert_fail@plt+0x1b00>
   13700:	mov	r3, #10
   13704:	add	r2, sp, #20
   13708:	ldr	r0, [sp, #4]
   1370c:	bl	15de4 <daemon@@Base+0x190>
   13710:	subs	r4, r0, #0
   13714:	beq	136d4 <__assert_fail@plt+0x1bf4>
   13718:	bl	11918 <__errno_location@plt>
   1371c:	ldr	r3, [sp]
   13720:	str	r3, [r0]
   13724:	mov	r0, r4
   13728:	bl	134fc <__assert_fail@plt+0x1a1c>
   1372c:	b	136d4 <__assert_fail@plt+0x1bf4>
   13730:	movw	r0, #54212	; 0xd3c4
   13734:	movt	r0, #1
   13738:	bl	134fc <__assert_fail@plt+0x1a1c>
   1373c:	b	135e0 <__assert_fail@plt+0x1b00>
   13740:	mov	r0, r8
   13744:	b	136f0 <__assert_fail@plt+0x1c10>
   13748:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1374c:	mov	r4, r0
   13750:	ldrsh	r0, [r0, #4]
   13754:	ldr	r5, [r4, #432]	; 0x1b0
   13758:	strd	r6, [sp, #8]
   1375c:	mov	r6, r2
   13760:	strd	r8, [sp, #16]
   13764:	mov	r8, #0
   13768:	mov	r9, #0
   1376c:	strd	sl, [sp, #24]
   13770:	cmp	r0, #6
   13774:	mov	sl, r1
   13778:	str	lr, [sp, #32]
   1377c:	sub	sp, sp, #1360	; 0x550
   13780:	mov	fp, r3
   13784:	sub	sp, sp, #12
   13788:	strd	r8, [sp, #12]
   1378c:	strd	r8, [sp, #20]
   13790:	strd	r8, [sp, #28]
   13794:	strd	r8, [sp, #36]	; 0x24
   13798:	strd	r8, [sp, #44]	; 0x2c
   1379c:	strd	r8, [sp, #52]	; 0x34
   137a0:	beq	138d0 <__assert_fail@plt+0x1df0>
   137a4:	movw	r7, #54276	; 0xd404
   137a8:	movt	r7, #1
   137ac:	add	r1, r4, #416	; 0x1a0
   137b0:	mov	r2, #15
   137b4:	mov	r3, #1
   137b8:	str	r1, [sp, #12]
   137bc:	str	r2, [sp, #16]
   137c0:	str	r7, [sp, #20]
   137c4:	str	r3, [sp, #24]
   137c8:	cmp	r5, #0
   137cc:	addeq	r5, sp, #28
   137d0:	beq	137e8 <__assert_fail@plt+0x1d08>
   137d4:	mov	r0, r5
   137d8:	str	r5, [sp, #28]
   137dc:	add	r5, sp, #36	; 0x24
   137e0:	bl	118e8 <strlen@plt>
   137e4:	str	r0, [sp, #32]
   137e8:	mov	r3, #1
   137ec:	cmp	fp, #0
   137f0:	str	r7, [r5]
   137f4:	str	r3, [r5, #4]
   137f8:	beq	138b4 <__assert_fail@plt+0x1dd4>
   137fc:	mov	r0, fp
   13800:	str	fp, [r5, #8]
   13804:	bl	118e8 <strlen@plt>
   13808:	str	r0, [r5, #12]
   1380c:	ldrsh	r3, [r4, #4]
   13810:	movw	r7, #61868	; 0xf1ac
   13814:	movt	r7, #2
   13818:	movw	r0, #54312	; 0xd428
   1381c:	movt	r0, #1
   13820:	add	r3, r7, r3, lsl #2
   13824:	ldr	r1, [r3, #320]	; 0x140
   13828:	bl	129d0 <__assert_fail@plt+0xef0>
   1382c:	ldrsh	r3, [r4, #4]
   13830:	cmp	r3, #9
   13834:	ldrls	pc, [pc, r3, lsl #2]
   13838:	b	1388c <__assert_fail@plt+0x1dac>
   1383c:	andeq	r3, r1, r4, ror #16
   13840:	andeq	r3, r1, r8, lsr #22
   13844:	andeq	r3, r1, r8, lsr #22
   13848:	andeq	r3, r1, r8, lsr sl
   1384c:	andeq	r3, r1, r4, asr #18
   13850:	andeq	r3, r1, r8, lsr fp
   13854:	andeq	r3, r1, r8, lsr fp
   13858:	andeq	r3, r1, ip, ror fp
   1385c:			; <UNDEFINED> instruction: 0x00013bbc
   13860:	andeq	r3, r1, r8, lsr #22
   13864:	movw	r3, #64632	; 0xfc78
   13868:	movt	r3, #2
   1386c:	ldr	r3, [r3]
   13870:	movw	r0, #54272	; 0xd400
   13874:	movt	r0, #1
   13878:	str	r3, [r4, #8]
   1387c:	bl	129d0 <__assert_fail@plt+0xef0>
   13880:	ldrsh	r3, [r4, #4]
   13884:	cmp	r3, #8
   13888:	beq	13894 <__assert_fail@plt+0x1db4>
   1388c:	mov	r3, #0
   13890:	str	r3, [r4, #452]	; 0x1c4
   13894:	add	sp, sp, #1360	; 0x550
   13898:	add	sp, sp, #12
   1389c:	ldrd	r4, [sp]
   138a0:	ldrd	r6, [sp, #8]
   138a4:	ldrd	r8, [sp, #16]
   138a8:	ldrd	sl, [sp, #24]
   138ac:	add	sp, sp, #32
   138b0:	pop	{pc}		; (ldr pc, [sp], #4)
   138b4:	ldr	r3, [r4, #452]	; 0x1c4
   138b8:	cmp	r3, #1
   138bc:	bgt	13c8c <__assert_fail@plt+0x21ac>
   138c0:	ldr	r3, [r4, #448]	; 0x1c0
   138c4:	add	r2, r4, #176	; 0xb0
   138c8:	strd	r2, [r5, #8]
   138cc:	b	1380c <__assert_fail@plt+0x1d2c>
   138d0:	add	r8, sp, #140	; 0x8c
   138d4:	movw	r0, #64632	; 0xfc78
   138d8:	movt	r0, #2
   138dc:	movw	r7, #54276	; 0xd404
   138e0:	movt	r7, #1
   138e4:	str	r8, [sp, #12]
   138e8:	bl	1175c <ctime@plt>
   138ec:	mov	r3, r5
   138f0:	mov	r1, #200	; 0xc8
   138f4:	str	r0, [sp]
   138f8:	movw	r2, #54232	; 0xd3d8
   138fc:	movt	r2, #1
   13900:	mov	r0, r8
   13904:	bl	11924 <snprintf@plt>
   13908:	mov	r0, r8
   1390c:	bl	118e8 <strlen@plt>
   13910:	movw	r3, #60936	; 0xee08
   13914:	movt	r3, #1
   13918:	str	r0, [sp, #16]
   1391c:	mov	r2, #0
   13920:	ldr	r5, [r4, #432]	; 0x1b0
   13924:	str	r3, [sp, #20]
   13928:	str	r2, [sp, #24]
   1392c:	b	137c8 <__assert_fail@plt+0x1ce8>
   13930:	movw	r0, #54328	; 0xd438
   13934:	movt	r0, #1
   13938:	bl	129d0 <__assert_fail@plt+0xef0>
   1393c:	mov	r3, #4
   13940:	strh	r3, [r4, #4]
   13944:	movw	r0, #54024	; 0xd308
   13948:	movt	r0, #1
   1394c:	ldr	r1, [r4, #40]	; 0x28
   13950:	bl	129d0 <__assert_fail@plt+0xef0>
   13954:	movw	r3, #64568	; 0xfc38
   13958:	movt	r3, #2
   1395c:	mov	r0, sl
   13960:	ldr	r1, [r3]
   13964:	bl	117d4 <strcasecmp@plt>
   13968:	cmp	r0, #0
   1396c:	beq	1397c <__assert_fail@plt+0x1e9c>
   13970:	ldr	r3, [r7]
   13974:	cmp	r3, #0
   13978:	bne	13e30 <__assert_fail@plt+0x2350>
   1397c:	movw	r3, #64636	; 0xfc7c
   13980:	movt	r3, #2
   13984:	ldr	r3, [r3]
   13988:	cmp	r3, #0
   1398c:	bne	13d10 <__assert_fail@plt+0x2230>
   13990:	ldrh	r3, [r4, #44]	; 0x2c
   13994:	cmp	r3, #2
   13998:	ldreq	r6, [r7, #312]	; 0x138
   1399c:	ldrne	r6, [r7, #316]	; 0x13c
   139a0:	ldreq	r8, [pc, #1292]	; 13eb4 <__assert_fail@plt+0x23d4>
   139a4:	ldrne	r8, [pc, #1292]	; 13eb8 <__assert_fail@plt+0x23d8>
   139a8:	cmp	r6, #0
   139ac:	addge	r5, sp, #340	; 0x154
   139b0:	blt	13db0 <__assert_fail@plt+0x22d0>
   139b4:	movw	r3, #64632	; 0xfc78
   139b8:	movt	r3, #2
   139bc:	ldr	r0, [sp, #12]
   139c0:	movw	r1, #1025	; 0x401
   139c4:	movw	r2, #54728	; 0xd5c8
   139c8:	movt	r2, #1
   139cc:	ldr	ip, [r3]
   139d0:	ldr	lr, [sp, #44]	; 0x2c
   139d4:	stm	sp, {r0, lr}
   139d8:	mov	r0, r5
   139dc:	str	ip, [r4, #8]
   139e0:	ldr	r3, [r4, #444]	; 0x1bc
   139e4:	bl	11924 <snprintf@plt>
   139e8:	mov	r0, r5
   139ec:	bl	118e8 <strlen@plt>
   139f0:	ldr	ip, [r4, #172]	; 0xac
   139f4:	add	r3, r4, #44	; 0x2c
   139f8:	mov	r7, r0
   139fc:	mov	r2, r0
   13a00:	mov	r1, r5
   13a04:	mov	r0, r6
   13a08:	stm	sp, {r3, ip}
   13a0c:	mov	r3, #0
   13a10:	bl	119a8 <sendto@plt>
   13a14:	cmp	r0, r7
   13a18:	bne	13d24 <__assert_fail@plt+0x2244>
   13a1c:	ldr	r3, [r8]
   13a20:	cmp	r3, #0
   13a24:	bge	13b74 <__assert_fail@plt+0x2094>
   13a28:	mov	r0, r6
   13a2c:	bl	11ac8 <close@plt>
   13a30:	ldrsh	r3, [r4, #4]
   13a34:	b	13884 <__assert_fail@plt+0x1da4>
   13a38:	movw	r3, #64632	; 0xfc78
   13a3c:	movt	r3, #2
   13a40:	ldr	r3, [r3]
   13a44:	tst	r6, #1
   13a48:	str	r3, [r4, #8]
   13a4c:	bne	13e1c <__assert_fail@plt+0x233c>
   13a50:	movw	r0, #54024	; 0xd308
   13a54:	movt	r0, #1
   13a58:	str	r3, [r4, #8]
   13a5c:	ldr	r1, [r4, #40]	; 0x28
   13a60:	bl	129d0 <__assert_fail@plt+0xef0>
   13a64:	ldrh	r3, [r4, #4]
   13a68:	sub	r3, r3, #2
   13a6c:	cmp	r3, #1
   13a70:	bls	13ce0 <__assert_fail@plt+0x2200>
   13a74:	movw	r3, #54272	; 0xd400
   13a78:	movt	r3, #1
   13a7c:	mov	r2, #1
   13a80:	str	r3, [r5, #16]
   13a84:	str	r2, [r5, #20]
   13a88:	ldrsh	r0, [r4, #6]
   13a8c:	b	13af0 <__assert_fail@plt+0x2010>
   13a90:	bl	11918 <__errno_location@plt>
   13a94:	ldrsh	r3, [r4, #4]
   13a98:	mov	r8, r0
   13a9c:	ldr	r7, [r0]
   13aa0:	cmp	r3, #9
   13aa4:	cmpeq	r7, #11
   13aa8:	beq	1388c <__assert_fail@plt+0x1dac>
   13aac:	ldrsh	r0, [r4, #6]
   13ab0:	bl	11ac8 <close@plt>
   13ab4:	sub	r2, r7, #5
   13ab8:	movw	r1, #1025	; 0x401
   13abc:	bics	r5, r2, #4
   13ac0:	mov	r2, r5
   13ac4:	bne	13cb8 <__assert_fail@plt+0x21d8>
   13ac8:	ldrh	r3, [r4, #4]
   13acc:	sub	r3, r3, #2
   13ad0:	cmp	r3, #1
   13ad4:	bhi	13cb8 <__assert_fail@plt+0x21d8>
   13ad8:	ldr	r0, [r4, #40]	; 0x28
   13adc:	bl	1184c <open64@plt>
   13ae0:	sxth	r0, r0
   13ae4:	cmp	r0, #0
   13ae8:	strh	r0, [r4, #6]
   13aec:	blt	13da8 <__assert_fail@plt+0x22c8>
   13af0:	mov	r2, #6
   13af4:	add	r1, sp, #12
   13af8:	bl	11984 <writev@plt>
   13afc:	cmp	r0, #0
   13b00:	blt	13a90 <__assert_fail@plt+0x1fb0>
   13b04:	tst	r6, #2
   13b08:	beq	13b74 <__assert_fail@plt+0x2094>
   13b0c:	ldr	r3, [r4, #460]	; 0x1cc
   13b10:	tst	r3, #1
   13b14:	bne	13b74 <__assert_fail@plt+0x2094>
   13b18:	ldrsh	r0, [r4, #6]
   13b1c:	bl	11648 <fsync@plt>
   13b20:	ldrsh	r3, [r4, #4]
   13b24:	b	13884 <__assert_fail@plt+0x1da4>
   13b28:	movw	r3, #64632	; 0xfc78
   13b2c:	movt	r3, #2
   13b30:	ldr	r3, [r3]
   13b34:	b	13a50 <__assert_fail@plt+0x1f70>
   13b38:	movw	r3, #64632	; 0xfc78
   13b3c:	movt	r3, #2
   13b40:	ldr	r3, [r3]
   13b44:	movw	r0, #54272	; 0xd400
   13b48:	movt	r0, #1
   13b4c:	str	r3, [r4, #8]
   13b50:	bl	129d0 <__assert_fail@plt+0xef0>
   13b54:	movw	r3, #54796	; 0xd60c
   13b58:	movt	r3, #1
   13b5c:	mov	r2, #2
   13b60:	add	r1, sp, #12
   13b64:	mov	r0, r4
   13b68:	str	r3, [r5, #16]
   13b6c:	str	r2, [r5, #20]
   13b70:	bl	135ac <__assert_fail@plt+0x1acc>
   13b74:	ldrsh	r3, [r4, #4]
   13b78:	b	13884 <__assert_fail@plt+0x1da4>
   13b7c:	mov	r0, #0
   13b80:	bl	1172c <time@plt>
   13b84:	ldr	r5, [r4, #8]
   13b88:	sub	r5, r0, r5
   13b8c:	cmp	r5, #179	; 0xb3
   13b90:	bgt	13930 <__assert_fail@plt+0x1e50>
   13b94:	movw	r0, #54024	; 0xd308
   13b98:	movt	r0, #1
   13b9c:	ldr	r1, [r4, #40]	; 0x28
   13ba0:	bl	129d0 <__assert_fail@plt+0xef0>
   13ba4:	rsb	r1, r5, #180	; 0xb4
   13ba8:	movw	r0, #54372	; 0xd464
   13bac:	movt	r0, #1
   13bb0:	bl	129d0 <__assert_fail@plt+0xef0>
   13bb4:	ldrsh	r3, [r4, #4]
   13bb8:	b	13884 <__assert_fail@plt+0x1da4>
   13bbc:	movw	r0, #54024	; 0xd308
   13bc0:	movt	r0, #1
   13bc4:	ldr	r1, [r4, #40]	; 0x28
   13bc8:	bl	129d0 <__assert_fail@plt+0xef0>
   13bcc:	mov	r0, #0
   13bd0:	bl	1172c <time@plt>
   13bd4:	ldr	r1, [r4, #8]
   13bd8:	sub	r1, r0, r1
   13bdc:	cmp	r1, #179	; 0xb3
   13be0:	ble	13cf8 <__assert_fail@plt+0x2218>
   13be4:	ldr	r1, [r7, #4]
   13be8:	mov	r3, #0
   13bec:	mov	r2, #0
   13bf0:	add	r5, sp, #340	; 0x154
   13bf4:	add	r0, sp, #344	; 0x158
   13bf8:	strd	r2, [r0, #-4]
   13bfc:	strd	r2, [r5, #8]
   13c00:	cmp	r1, #0
   13c04:	strd	r2, [r5, #16]
   13c08:	strd	r2, [r5, #24]
   13c0c:	moveq	r3, #32
   13c10:	mov	r2, r5
   13c14:	str	r1, [sp, #344]	; 0x158
   13c18:	movw	r1, #62924	; 0xf5cc
   13c1c:	movt	r1, #2
   13c20:	streq	r3, [sp, #340]	; 0x154
   13c24:	add	r3, sp, #8
   13c28:	ldr	r0, [r4, #40]	; 0x28
   13c2c:	ldr	r1, [r1, #44]	; 0x2c
   13c30:	bl	11a68 <getaddrinfo@plt>
   13c34:	subs	r5, r0, #0
   13c38:	beq	13d68 <__assert_fail@plt+0x2288>
   13c3c:	bl	116e4 <gai_strerror@plt>
   13c40:	mov	r1, r0
   13c44:	movw	r0, #54420	; 0xd494
   13c48:	movt	r0, #1
   13c4c:	bl	129d0 <__assert_fail@plt+0xef0>
   13c50:	movw	r0, #54436	; 0xd4a4
   13c54:	movt	r0, #1
   13c58:	ldr	r1, [r4, #452]	; 0x1c4
   13c5c:	bl	129d0 <__assert_fail@plt+0xef0>
   13c60:	ldr	r3, [r4, #452]	; 0x1c4
   13c64:	sub	r3, r3, #1
   13c68:	cmp	r3, #0
   13c6c:	str	r3, [r4, #452]	; 0x1c4
   13c70:	bge	13b74 <__assert_fail@plt+0x2094>
   13c74:	mov	r5, #0
   13c78:	ldr	r0, [r4, #40]	; 0x28
   13c7c:	strh	r5, [r4, #4]
   13c80:	bl	1afbc <argp_parse@@Base+0x11cc>
   13c84:	str	r5, [r4, #40]	; 0x28
   13c88:	b	13b74 <__assert_fail@plt+0x2094>
   13c8c:	add	r7, sp, #60	; 0x3c
   13c90:	mov	r1, #80	; 0x50
   13c94:	mov	r0, r7
   13c98:	movw	r2, #54280	; 0xd408
   13c9c:	movt	r2, #1
   13ca0:	str	r7, [r5, #8]
   13ca4:	bl	11924 <snprintf@plt>
   13ca8:	mov	r0, r7
   13cac:	bl	118e8 <strlen@plt>
   13cb0:	str	r0, [r5, #12]
   13cb4:	b	1380c <__assert_fail@plt+0x1d2c>
   13cb8:	mov	r5, #0
   13cbc:	strh	r5, [r4, #4]
   13cc0:	str	r7, [r8]
   13cc4:	ldr	r0, [r4, #40]	; 0x28
   13cc8:	bl	134fc <__assert_fail@plt+0x1a1c>
   13ccc:	ldr	r0, [r4, #40]	; 0x28
   13cd0:	bl	1afbc <argp_parse@@Base+0x11cc>
   13cd4:	ldrsh	r3, [r4, #4]
   13cd8:	str	r5, [r4, #40]	; 0x28
   13cdc:	b	13884 <__assert_fail@plt+0x1da4>
   13ce0:	movw	r3, #54796	; 0xd60c
   13ce4:	movt	r3, #1
   13ce8:	mov	r2, #2
   13cec:	str	r3, [r5, #16]
   13cf0:	str	r2, [r5, #20]
   13cf4:	b	13a88 <__assert_fail@plt+0x1fa8>
   13cf8:	rsb	r1, r1, #180	; 0xb4
   13cfc:	movw	r0, #54476	; 0xd4cc
   13d00:	movt	r0, #1
   13d04:	bl	129d0 <__assert_fail@plt+0xef0>
   13d08:	ldrsh	r3, [r4, #4]
   13d0c:	b	13884 <__assert_fail@plt+0x1da4>
   13d10:	movw	r0, #54556	; 0xd51c
   13d14:	movt	r0, #1
   13d18:	bl	129d0 <__assert_fail@plt+0xef0>
   13d1c:	ldrsh	r3, [r4, #4]
   13d20:	b	13884 <__assert_fail@plt+0x1da4>
   13d24:	bl	11918 <__errno_location@plt>
   13d28:	ldr	r5, [r0]
   13d2c:	mov	r7, r0
   13d30:	mov	r0, r5
   13d34:	bl	11888 <strerror@plt>
   13d38:	mov	r2, r0
   13d3c:	mov	r1, r5
   13d40:	movw	r0, #54744	; 0xd5d8
   13d44:	movt	r0, #1
   13d48:	bl	129d0 <__assert_fail@plt+0xef0>
   13d4c:	mov	r3, #7
   13d50:	movw	r0, #54776	; 0xd5f8
   13d54:	movt	r0, #1
   13d58:	strh	r3, [r4, #4]
   13d5c:	str	r5, [r7]
   13d60:	bl	134fc <__assert_fail@plt+0x1a1c>
   13d64:	b	13a1c <__assert_fail@plt+0x1f3c>
   13d68:	movw	r0, #54452	; 0xd4b4
   13d6c:	movt	r0, #1
   13d70:	ldr	r1, [r4, #40]	; 0x28
   13d74:	bl	129d0 <__assert_fail@plt+0xef0>
   13d78:	ldr	r6, [sp, #8]
   13d7c:	add	r0, r4, #44	; 0x2c
   13d80:	ldr	r2, [r6, #16]
   13d84:	ldr	r1, [r6, #20]
   13d88:	str	r2, [r4, #172]	; 0xac
   13d8c:	bl	11714 <memcpy@plt>
   13d90:	mov	r0, r6
   13d94:	bl	11a5c <freeaddrinfo@plt>
   13d98:	mov	r3, #4
   13d9c:	strh	r3, [r4, #4]
   13da0:	str	r5, [r4, #452]	; 0x1c4
   13da4:	b	13944 <__assert_fail@plt+0x1e64>
   13da8:	strh	r5, [r4, #4]
   13dac:	b	13cc4 <__assert_fail@plt+0x21e4>
   13db0:	mov	r0, #2
   13db4:	str	r3, [sp, #344]	; 0x158
   13db8:	mov	r3, #1
   13dbc:	mov	ip, #0
   13dc0:	movw	r2, #62924	; 0xf5cc
   13dc4:	movt	r2, #2
   13dc8:	add	r5, sp, #340	; 0x154
   13dcc:	str	r3, [sp, #340]	; 0x154
   13dd0:	add	r3, sp, #8
   13dd4:	str	r0, [sp, #348]	; 0x15c
   13dd8:	mov	r0, ip
   13ddc:	ldr	r1, [r2, #44]	; 0x2c
   13de0:	mov	r2, r5
   13de4:	str	ip, [sp, #352]	; 0x160
   13de8:	str	ip, [sp, #356]	; 0x164
   13dec:	str	ip, [sp, #360]	; 0x168
   13df0:	str	ip, [sp, #364]	; 0x16c
   13df4:	str	ip, [sp, #368]	; 0x170
   13df8:	bl	11a68 <getaddrinfo@plt>
   13dfc:	cmp	r0, #0
   13e00:	beq	13e44 <__assert_fail@plt+0x2364>
   13e04:	bl	116e4 <gai_strerror@plt>
   13e08:	mov	r1, r0
   13e0c:	movw	r0, #54604	; 0xd54c
   13e10:	movt	r0, #1
   13e14:	bl	129d0 <__assert_fail@plt+0xef0>
   13e18:	b	13b74 <__assert_fail@plt+0x2094>
   13e1c:	movw	r0, #54784	; 0xd600
   13e20:	movt	r0, #1
   13e24:	bl	129d0 <__assert_fail@plt+0xef0>
   13e28:	ldrsh	r3, [r4, #4]
   13e2c:	b	13884 <__assert_fail@plt+0x1da4>
   13e30:	movw	r0, #54524	; 0xd4fc
   13e34:	movt	r0, #1
   13e38:	bl	129d0 <__assert_fail@plt+0xef0>
   13e3c:	ldrsh	r3, [r4, #4]
   13e40:	b	13884 <__assert_fail@plt+0x1da4>
   13e44:	ldr	r3, [sp, #8]
   13e48:	ldmib	r3, {r0, r1, r2}
   13e4c:	bl	11a74 <socket@plt>
   13e50:	subs	r6, r0, #0
   13e54:	blt	13e9c <__assert_fail@plt+0x23bc>
   13e58:	ldr	r3, [sp, #8]
   13e5c:	ldr	r2, [r3, #16]
   13e60:	ldr	r1, [r3, #20]
   13e64:	bl	1193c <bind@plt>
   13e68:	mov	r7, r0
   13e6c:	ldr	r0, [sp, #8]
   13e70:	bl	11a5c <freeaddrinfo@plt>
   13e74:	cmp	r7, #0
   13e78:	beq	139b4 <__assert_fail@plt+0x1ed4>
   13e7c:	bl	11918 <__errno_location@plt>
   13e80:	ldr	r0, [r0]
   13e84:	bl	11888 <strerror@plt>
   13e88:	mov	r1, r0
   13e8c:	movw	r0, #54688	; 0xd5a0
   13e90:	movt	r0, #1
   13e94:	bl	129d0 <__assert_fail@plt+0xef0>
   13e98:	b	13b74 <__assert_fail@plt+0x2094>
   13e9c:	movw	r0, #54648	; 0xd578
   13ea0:	movt	r0, #1
   13ea4:	bl	129d0 <__assert_fail@plt+0xef0>
   13ea8:	ldr	r0, [sp, #8]
   13eac:	bl	11a5c <freeaddrinfo@plt>
   13eb0:	b	13b74 <__assert_fail@plt+0x2094>
   13eb4:	andeq	pc, r2, r4, ror #5
   13eb8:	andeq	pc, r2, r8, ror #5
   13ebc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13ec0:	mov	r5, r1
   13ec4:	mov	r4, r2
   13ec8:	strd	r6, [sp, #8]
   13ecc:	mov	r6, r3
   13ed0:	mov	r7, r0
   13ed4:	strd	r8, [sp, #16]
   13ed8:	strd	sl, [sp, #24]
   13edc:	str	lr, [sp, #32]
   13ee0:	sub	sp, sp, #300	; 0x12c
   13ee4:	str	r2, [sp, #8]
   13ee8:	str	r0, [sp, #24]
   13eec:	bl	13290 <__assert_fail@plt+0x17b0>
   13ef0:	mov	r1, r0
   13ef4:	mov	r3, r6
   13ef8:	strd	r4, [sp]
   13efc:	mov	r2, r7
   13f00:	movw	r0, #54800	; 0xd610
   13f04:	movt	r0, #1
   13f08:	bl	129d0 <__assert_fail@plt+0xef0>
   13f0c:	add	r0, sp, #40	; 0x28
   13f10:	bl	119cc <sigemptyset@plt>
   13f14:	mov	r1, #1
   13f18:	add	r0, sp, #40	; 0x28
   13f1c:	bl	11870 <sigaddset@plt>
   13f20:	mov	r1, #14
   13f24:	add	r0, sp, #40	; 0x28
   13f28:	bl	11870 <sigaddset@plt>
   13f2c:	add	r1, sp, #40	; 0x28
   13f30:	add	r2, sp, #168	; 0xa8
   13f34:	mov	r0, #0
   13f38:	bl	116b4 <sigprocmask@plt>
   13f3c:	mov	r0, r5
   13f40:	bl	118e8 <strlen@plt>
   13f44:	cmp	r0, #15
   13f48:	str	r0, [sp, #12]
   13f4c:	bls	13f5c <__assert_fail@plt+0x247c>
   13f50:	ldrb	r3, [r5, #3]
   13f54:	cmp	r3, #32
   13f58:	beq	142f8 <__assert_fail@plt+0x2818>
   13f5c:	movw	r0, #64632	; 0xfc78
   13f60:	movt	r0, #2
   13f64:	orr	r6, r6, #4
   13f68:	bl	1172c <time@plt>
   13f6c:	movw	r0, #64632	; 0xfc78
   13f70:	movt	r0, #2
   13f74:	bl	1175c <ctime@plt>
   13f78:	add	r3, r0, #4
   13f7c:	str	r3, [sp, #28]
   13f80:	ands	r3, r6, #8
   13f84:	mov	r1, r3
   13f88:	ldreq	r3, [sp, #24]
   13f8c:	movne	r8, #24
   13f90:	ubfxeq	r8, r3, #3, #7
   13f94:	movw	r3, #64560	; 0xfc30
   13f98:	movt	r3, #2
   13f9c:	ldr	r2, [r3]
   13fa0:	cmp	r2, #0
   13fa4:	beq	142a0 <__assert_fail@plt+0x27c0>
   13fa8:	movw	r3, #64072	; 0xfa48
   13fac:	movt	r3, #2
   13fb0:	ldr	r4, [r3]
   13fb4:	cmp	r4, #0
   13fb8:	beq	14134 <__assert_fail@plt+0x2654>
   13fbc:	ldr	r3, [sp, #24]
   13fc0:	mov	r7, #1
   13fc4:	movw	r9, #61868	; 0xf1ac
   13fc8:	movt	r9, #2
   13fcc:	movw	fp, #64632	; 0xfc78
   13fd0:	movt	fp, #2
   13fd4:	mov	sl, r1
   13fd8:	str	r6, [sp, #16]
   13fdc:	and	r3, r3, #7
   13fe0:	lsl	r7, r7, r3
   13fe4:	movw	r3, #54848	; 0xd640
   13fe8:	movt	r3, #1
   13fec:	str	r3, [sp, #32]
   13ff0:	b	14070 <__assert_fail@plt+0x2590>
   13ff4:	ldr	r3, [r9, #8]
   13ff8:	ldr	r2, [fp]
   13ffc:	ldr	r1, [r4, #8]
   14000:	add	r3, r3, r3, lsr #31
   14004:	sub	r2, r2, r1
   14008:	cmp	r2, r3, asr #1
   1400c:	blt	14064 <__assert_fail@plt+0x2584>
   14010:	ldr	r1, [r4, #436]	; 0x1b4
   14014:	cmp	r1, #0
   14018:	beq	141c4 <__assert_fail@plt+0x26e4>
   1401c:	ldr	r6, [r4, #440]	; 0x1b8
   14020:	mov	r0, r5
   14024:	mov	r2, r6
   14028:	bl	11aa4 <strncmp@plt>
   1402c:	cmp	r0, #0
   14030:	bne	14064 <__assert_fail@plt+0x2584>
   14034:	bl	118c4 <__ctype_b_loc@plt>
   14038:	ldrb	r3, [r5, r6]
   1403c:	ldr	r1, [r0]
   14040:	lsl	r2, r3, #1
   14044:	cmp	r3, #45	; 0x2d
   14048:	cmpne	r3, #95	; 0x5f
   1404c:	moveq	r3, #1
   14050:	movne	r3, #0
   14054:	ldrh	r2, [r1, r2]
   14058:	ubfx	r2, r2, #3, #1
   1405c:	orrs	r3, r2, r3
   14060:	beq	14190 <__assert_fail@plt+0x26b0>
   14064:	ldr	r4, [r4]
   14068:	cmp	r4, #0
   1406c:	beq	14134 <__assert_fail@plt+0x2654>
   14070:	add	r3, r4, r8
   14074:	ldrb	r3, [r3, #12]
   14078:	tst	r3, r7
   1407c:	beq	14064 <__assert_fail@plt+0x2584>
   14080:	ldrsh	r3, [r4, #4]
   14084:	cmp	r3, #3
   14088:	beq	14160 <__assert_fail@plt+0x2680>
   1408c:	cmp	sl, #0
   14090:	bne	13ff4 <__assert_fail@plt+0x2514>
   14094:	ldr	r1, [r4, #436]	; 0x1b4
   14098:	cmp	r1, #0
   1409c:	bne	1401c <__assert_fail@plt+0x253c>
   140a0:	add	r3, r4, #416	; 0x1a0
   140a4:	str	r3, [sp, #20]
   140a8:	ldr	r3, [r4, #452]	; 0x1c4
   140ac:	ldr	r1, [sp, #12]
   140b0:	ldr	r2, [r4, #448]	; 0x1c0
   140b4:	cmp	r2, r1
   140b8:	beq	141d4 <__assert_fail@plt+0x26f4>
   140bc:	cmp	r3, #0
   140c0:	bne	141ac <__assert_fail@plt+0x26cc>
   140c4:	mov	r6, #0
   140c8:	mov	r2, #15
   140cc:	ldr	r0, [sp, #20]
   140d0:	str	r6, [r4, #456]	; 0x1c8
   140d4:	ldr	r1, [sp, #28]
   140d8:	bl	11960 <strncpy@plt>
   140dc:	ldr	r0, [r4, #432]	; 0x1b0
   140e0:	bl	1afbc <argp_parse@@Base+0x11cc>
   140e4:	ldr	r0, [sp, #8]
   140e8:	bl	11774 <strdup@plt>
   140ec:	ldr	r3, [sp, #12]
   140f0:	str	r0, [r4, #432]	; 0x1b0
   140f4:	cmp	r3, #239	; 0xef
   140f8:	bgt	14170 <__assert_fail@plt+0x2690>
   140fc:	ldr	r2, [sp, #24]
   14100:	mov	r1, r5
   14104:	add	r0, r4, #176	; 0xb0
   14108:	str	r2, [r4, #444]	; 0x1bc
   1410c:	str	r3, [r4, #448]	; 0x1c0
   14110:	bl	1181c <strcpy@plt>
   14114:	mov	r0, r4
   14118:	mov	r3, r6
   1411c:	ldr	r1, [sp, #8]
   14120:	ldr	r2, [sp, #16]
   14124:	bl	13748 <__assert_fail@plt+0x1c68>
   14128:	ldr	r4, [r4]
   1412c:	cmp	r4, #0
   14130:	bne	14070 <__assert_fail@plt+0x2590>
   14134:	add	r1, sp, #168	; 0xa8
   14138:	mov	r2, #0
   1413c:	mov	r0, #2
   14140:	bl	116b4 <sigprocmask@plt>
   14144:	add	sp, sp, #300	; 0x12c
   14148:	ldrd	r4, [sp]
   1414c:	ldrd	r6, [sp, #8]
   14150:	ldrd	r8, [sp, #16]
   14154:	ldrd	sl, [sp, #24]
   14158:	add	sp, sp, #32
   1415c:	pop	{pc}		; (ldr pc, [sp], #4)
   14160:	ldr	r3, [sp, #16]
   14164:	tst	r3, #1
   14168:	beq	1408c <__assert_fail@plt+0x25ac>
   1416c:	b	14064 <__assert_fail@plt+0x2584>
   14170:	mov	r3, r5
   14174:	mov	r0, r4
   14178:	strb	r6, [r4, #176]	; 0xb0
   1417c:	str	r6, [r4, #448]	; 0x1c0
   14180:	ldr	r1, [sp, #8]
   14184:	ldr	r2, [sp, #16]
   14188:	bl	13748 <__assert_fail@plt+0x1c68>
   1418c:	b	14064 <__assert_fail@plt+0x2584>
   14190:	add	r3, r4, #416	; 0x1a0
   14194:	cmp	sl, #0
   14198:	str	r3, [sp, #20]
   1419c:	ldr	r3, [r4, #452]	; 0x1c4
   141a0:	beq	140ac <__assert_fail@plt+0x25cc>
   141a4:	cmp	r3, #0
   141a8:	beq	140c4 <__assert_fail@plt+0x25e4>
   141ac:	mov	r3, #0
   141b0:	mov	r0, r4
   141b4:	ldr	r1, [sp, #8]
   141b8:	mov	r2, r3
   141bc:	bl	13748 <__assert_fail@plt+0x1c68>
   141c0:	b	140c4 <__assert_fail@plt+0x25e4>
   141c4:	add	r3, r4, #416	; 0x1a0
   141c8:	str	r3, [sp, #20]
   141cc:	ldr	r3, [r4, #452]	; 0x1c4
   141d0:	b	140bc <__assert_fail@plt+0x25dc>
   141d4:	ldr	r6, [r4, #432]	; 0x1b0
   141d8:	cmp	r6, #0
   141dc:	beq	140bc <__assert_fail@plt+0x25dc>
   141e0:	add	r1, r4, #176	; 0xb0
   141e4:	mov	r0, r5
   141e8:	str	r3, [sp, #36]	; 0x24
   141ec:	bl	11654 <strcmp@plt>
   141f0:	cmp	r0, #0
   141f4:	ldr	r3, [sp, #36]	; 0x24
   141f8:	bne	140bc <__assert_fail@plt+0x25dc>
   141fc:	mov	r1, r6
   14200:	ldr	r0, [sp, #8]
   14204:	bl	11654 <strcmp@plt>
   14208:	subs	r6, r0, #0
   1420c:	ldr	r3, [sp, #36]	; 0x24
   14210:	bne	140bc <__assert_fail@plt+0x25dc>
   14214:	mov	r2, #15
   14218:	ldr	r0, [sp, #20]
   1421c:	ldr	r1, [sp, #28]
   14220:	bl	11960 <strncpy@plt>
   14224:	ldr	ip, [fp]
   14228:	ldr	r3, [sp, #36]	; 0x24
   1422c:	ldr	lr, [r4, #456]	; 0x1c8
   14230:	ldr	r2, [r4, #8]
   14234:	add	r3, r3, #1
   14238:	mov	r1, r3
   1423c:	ldr	r0, [sp, #32]
   14240:	str	r3, [r4, #452]	; 0x1c4
   14244:	add	r3, r9, lr, lsl #2
   14248:	sub	r2, ip, r2
   1424c:	ldr	r3, [r3, #376]	; 0x178
   14250:	bl	129d0 <__assert_fail@plt+0xef0>
   14254:	ldr	r1, [r4, #8]
   14258:	ldr	r3, [r4, #456]	; 0x1c8
   1425c:	ldr	r2, [fp]
   14260:	add	r3, r9, r3, lsl #2
   14264:	ldr	r3, [r3, #376]	; 0x178
   14268:	add	r3, r3, r1
   1426c:	cmp	r3, r2
   14270:	bge	14064 <__assert_fail@plt+0x2584>
   14274:	mov	r3, r6
   14278:	mov	r0, r4
   1427c:	ldr	r1, [sp, #8]
   14280:	ldr	r2, [sp, #16]
   14284:	bl	13748 <__assert_fail@plt+0x1c68>
   14288:	ldr	r3, [r4, #456]	; 0x1c8
   1428c:	add	r3, r3, #1
   14290:	cmp	r3, #1
   14294:	movhi	r3, #1
   14298:	str	r3, [r4, #456]	; 0x1c8
   1429c:	b	14064 <__assert_fail@plt+0x2584>
   142a0:	mov	r1, #1
   142a4:	ldr	r0, [pc, #212]	; 14380 <__assert_fail@plt+0x28a0>
   142a8:	movw	r4, #64076	; 0xfa4c
   142ac:	movt	r4, #2
   142b0:	bl	1184c <open64@plt>
   142b4:	sxth	r7, r0
   142b8:	movw	r3, #64568	; 0xfc38
   142bc:	movt	r3, #2
   142c0:	ldr	r0, [r3]
   142c4:	strh	r7, [r4, #6]
   142c8:	bl	11774 <strdup@plt>
   142cc:	cmp	r7, #0
   142d0:	str	r0, [r4, #432]	; 0x1b0
   142d4:	blt	14134 <__assert_fail@plt+0x2654>
   142d8:	mov	r0, r4
   142dc:	mov	r3, r5
   142e0:	ldr	r1, [sp, #8]
   142e4:	mov	r2, r6
   142e8:	bl	13748 <__assert_fail@plt+0x1c68>
   142ec:	ldrsh	r0, [r4, #6]
   142f0:	bl	11ac8 <close@plt>
   142f4:	b	14134 <__assert_fail@plt+0x2654>
   142f8:	ldrb	r3, [r5, #6]
   142fc:	cmp	r3, #32
   14300:	bne	13f5c <__assert_fail@plt+0x247c>
   14304:	ldrb	r3, [r5, #9]
   14308:	cmp	r3, #58	; 0x3a
   1430c:	bne	13f5c <__assert_fail@plt+0x247c>
   14310:	ldrb	r3, [r5, #12]
   14314:	cmp	r3, #58	; 0x3a
   14318:	bne	13f5c <__assert_fail@plt+0x247c>
   1431c:	ldrb	r3, [r5, #15]
   14320:	cmp	r3, #32
   14324:	bne	13f5c <__assert_fail@plt+0x247c>
   14328:	mov	r4, r0
   1432c:	movw	r0, #64632	; 0xfc78
   14330:	movt	r0, #2
   14334:	bl	1172c <time@plt>
   14338:	tst	r6, #4
   1433c:	bne	13f6c <__assert_fail@plt+0x248c>
   14340:	movw	r3, #62924	; 0xf5cc
   14344:	movt	r3, #2
   14348:	ldr	r3, [r3, #16]
   1434c:	cmp	r3, #0
   14350:	streq	r5, [sp, #28]
   14354:	bne	14368 <__assert_fail@plt+0x2888>
   14358:	sub	r3, r4, #16
   1435c:	add	r5, r5, #16
   14360:	str	r3, [sp, #12]
   14364:	b	13f80 <__assert_fail@plt+0x24a0>
   14368:	movw	r0, #64632	; 0xfc78
   1436c:	movt	r0, #2
   14370:	bl	1175c <ctime@plt>
   14374:	add	r3, r0, #4
   14378:	str	r3, [sp, #28]
   1437c:	b	14358 <__assert_fail@plt+0x2878>
   14380:	andeq	pc, r2, r4, lsl r3	; <UNPREDICTABLE>
   14384:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14388:	strd	r6, [sp, #8]
   1438c:	mov	r6, r1
   14390:	strd	r8, [sp, #16]
   14394:	strd	sl, [sp, #24]
   14398:	mov	sl, r0
   1439c:	str	lr, [sp, #32]
   143a0:	sub	sp, sp, #1024	; 0x400
   143a4:	ldrb	r5, [r1]
   143a8:	sub	sp, sp, #12
   143ac:	cmp	r5, #60	; 0x3c
   143b0:	beq	14480 <__assert_fail@plt+0x29a0>
   143b4:	mov	r8, #13
   143b8:	add	r7, sp, #1024	; 0x400
   143bc:	add	r4, sp, #4
   143c0:	add	r7, r7, #4
   143c4:	mov	fp, #94	; 0x5e
   143c8:	mov	r9, #32
   143cc:	b	14404 <__assert_fail@plt+0x2924>
   143d0:	cmp	r5, #10
   143d4:	strbeq	r9, [r4], #1
   143d8:	beq	14400 <__assert_fail@plt+0x2920>
   143dc:	cmp	r5, #9
   143e0:	beq	14430 <__assert_fail@plt+0x2950>
   143e4:	cmp	r5, #126	; 0x7e
   143e8:	bgt	14430 <__assert_fail@plt+0x2950>
   143ec:	mov	r3, r4
   143f0:	eor	r5, r5, #64	; 0x40
   143f4:	strb	fp, [r3], #2
   143f8:	strb	r5, [r4, #1]
   143fc:	mov	r4, r3
   14400:	ldrb	r5, [r6, #1]!
   14404:	cmp	r5, #0
   14408:	cmpne	r4, r7
   1440c:	movcc	r3, #1
   14410:	movcs	r3, #0
   14414:	bcs	14438 <__assert_fail@plt+0x2958>
   14418:	bl	118c4 <__ctype_b_loc@plt>
   1441c:	ldr	r2, [r0]
   14420:	lsl	r3, r5, #1
   14424:	ldrh	r3, [r2, r3]
   14428:	tst	r3, #2
   1442c:	bne	143d0 <__assert_fail@plt+0x28f0>
   14430:	strb	r5, [r4], #1
   14434:	b	14400 <__assert_fail@plt+0x2920>
   14438:	movw	r2, #64556	; 0xfc2c
   1443c:	movt	r2, #2
   14440:	strb	r3, [r4]
   14444:	ldr	r3, [r2]
   14448:	add	r1, sp, #4
   1444c:	mov	r0, r8
   14450:	mov	r2, sl
   14454:	cmp	r3, #0
   14458:	movne	r3, #2
   1445c:	bl	13ebc <__assert_fail@plt+0x23dc>
   14460:	add	sp, sp, #1024	; 0x400
   14464:	add	sp, sp, #12
   14468:	ldrd	r4, [sp]
   1446c:	ldrd	r6, [sp, #8]
   14470:	ldrd	r8, [sp, #16]
   14474:	ldrd	sl, [sp, #24]
   14478:	add	sp, sp, #32
   1447c:	pop	{pc}		; (ldr pc, [sp], #4)
   14480:	bl	118c4 <__ctype_b_loc@plt>
   14484:	mov	r8, #0
   14488:	mov	ip, r6
   1448c:	ldr	r0, [r0]
   14490:	b	1449c <__assert_fail@plt+0x29bc>
   14494:	add	r8, r2, r1, lsl #1
   14498:	mov	ip, r6
   1449c:	ldrb	r5, [r6, #1]!
   144a0:	add	r1, r8, r8, lsl #2
   144a4:	lsl	r3, r5, #1
   144a8:	sub	r2, r5, #48	; 0x30
   144ac:	ldrh	r3, [r0, r3]
   144b0:	tst	r3, #2048	; 0x800
   144b4:	bne	14494 <__assert_fail@plt+0x29b4>
   144b8:	bic	r3, r8, #1020	; 0x3fc
   144bc:	cmp	r5, #62	; 0x3e
   144c0:	bic	r3, r3, #3
   144c4:	ldrbeq	r5, [ip, #2]
   144c8:	addeq	r6, ip, #2
   144cc:	cmp	r3, #0
   144d0:	bne	143b4 <__assert_fail@plt+0x28d4>
   144d4:	asr	r3, r8, #3
   144d8:	cmp	r3, #24
   144dc:	bgt	143b4 <__assert_fail@plt+0x28d4>
   144e0:	cmp	r3, #0
   144e4:	orreq	r8, r8, #8
   144e8:	b	143b8 <__assert_fail@plt+0x28d8>
   144ec:	movw	r2, #54888	; 0xd668
   144f0:	movt	r2, #1
   144f4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   144f8:	strd	r6, [sp, #8]
   144fc:	mov	r4, r0
   14500:	str	r8, [sp, #16]
   14504:	str	lr, [sp, #20]
   14508:	sub	sp, sp, #1024	; 0x400
   1450c:	ldrb	r3, [r0]
   14510:	sub	sp, sp, #8
   14514:	ldrb	ip, [r2, #8]
   14518:	ldrd	r0, [r2]
   1451c:	cmp	r3, #0
   14520:	strd	r0, [sp, #4]
   14524:	strb	ip, [sp, #12]
   14528:	beq	145bc <__assert_fail@plt+0x2adc>
   1452c:	add	r5, sp, #1024	; 0x400
   14530:	movw	r6, #64568	; 0xfc38
   14534:	movt	r6, #2
   14538:	mov	r7, #64512	; 0xfc00
   1453c:	movt	r7, #65535	; 0xffff
   14540:	add	r5, r5, #4
   14544:	cmp	r3, #60	; 0x3c
   14548:	beq	145d8 <__assert_fail@plt+0x2af8>
   1454c:	ldrb	r2, [r4]
   14550:	mov	r3, #7
   14554:	mov	lr, #2
   14558:	cmp	r2, #0
   1455c:	beq	14630 <__assert_fail@plt+0x2b50>
   14560:	cmp	r2, #10
   14564:	add	r4, r4, #1
   14568:	beq	14630 <__assert_fail@plt+0x2b50>
   1456c:	mov	r1, r4
   14570:	add	ip, sp, #12
   14574:	mov	r4, r1
   14578:	strb	r2, [ip], #1
   1457c:	ldrb	r2, [r1], #1
   14580:	cmp	r2, #0
   14584:	beq	14598 <__assert_fail@plt+0x2ab8>
   14588:	cmp	r2, #10
   1458c:	cmpne	ip, r5
   14590:	mov	r4, r1
   14594:	bcc	14574 <__assert_fail@plt+0x2a94>
   14598:	mov	r8, #0
   1459c:	mov	r0, lr
   145a0:	ldr	r2, [r6]
   145a4:	add	r1, sp, #4
   145a8:	strb	r8, [ip]
   145ac:	bl	13ebc <__assert_fail@plt+0x23dc>
   145b0:	ldrb	r3, [r4]
   145b4:	cmp	r3, r8
   145b8:	bne	14544 <__assert_fail@plt+0x2a64>
   145bc:	add	sp, sp, #1024	; 0x400
   145c0:	add	sp, sp, #8
   145c4:	ldrd	r4, [sp]
   145c8:	ldrd	r6, [sp, #8]
   145cc:	ldr	r8, [sp, #16]
   145d0:	add	sp, sp, #20
   145d4:	pop	{pc}		; (ldr pc, [sp], #4)
   145d8:	bl	118c4 <__ctype_b_loc@plt>
   145dc:	mov	r8, r4
   145e0:	mov	lr, #0
   145e4:	ldr	ip, [r0]
   145e8:	b	145f4 <__assert_fail@plt+0x2b14>
   145ec:	add	lr, r1, r0, lsl #1
   145f0:	mov	r8, r4
   145f4:	ldrb	r2, [r4, #1]!
   145f8:	add	r0, lr, lr, lsl #2
   145fc:	lsl	r3, r2, #1
   14600:	sub	r1, r2, #48	; 0x30
   14604:	ldrh	r3, [ip, r3]
   14608:	tst	r3, #2048	; 0x800
   1460c:	bne	145ec <__assert_fail@plt+0x2b0c>
   14610:	cmp	r2, #62	; 0x3e
   14614:	mov	r3, #6
   14618:	ldrbeq	r2, [r8, #2]
   1461c:	addeq	r4, r8, #2
   14620:	tst	lr, r7
   14624:	movne	lr, #2
   14628:	cmp	r2, #0
   1462c:	bne	14560 <__assert_fail@plt+0x2a80>
   14630:	add	ip, sp, #12
   14634:	b	14598 <__assert_fail@plt+0x2ab8>
   14638:	mov	r0, #0
   1463c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14640:	movw	r5, #61868	; 0xf1ac
   14644:	movt	r5, #2
   14648:	strd	r6, [sp, #8]
   1464c:	movw	r6, #64632	; 0xfc78
   14650:	movt	r6, #2
   14654:	str	r8, [sp, #16]
   14658:	str	lr, [sp, #20]
   1465c:	bl	1172c <time@plt>
   14660:	ldr	r2, [r5, #8]
   14664:	str	r0, [r6]
   14668:	cmp	r2, #0
   1466c:	ble	1468c <__assert_fail@plt+0x2bac>
   14670:	movw	r4, #64644	; 0xfc84
   14674:	movt	r4, #2
   14678:	ldr	r3, [r4]
   1467c:	add	r3, r3, #30
   14680:	cmp	r2, r3
   14684:	str	r3, [r4]
   14688:	ble	14754 <__assert_fail@plt+0x2c74>
   1468c:	movw	r3, #64072	; 0xfa48
   14690:	movt	r3, #2
   14694:	ldr	r4, [r3]
   14698:	cmp	r4, #0
   1469c:	beq	14738 <__assert_fail@plt+0x2c58>
   146a0:	movw	r8, #54912	; 0xd680
   146a4:	movt	r8, #1
   146a8:	movw	r7, #64568	; 0xfc38
   146ac:	movt	r7, #2
   146b0:	b	146c0 <__assert_fail@plt+0x2be0>
   146b4:	ldr	r4, [r4]
   146b8:	cmp	r4, #0
   146bc:	beq	14738 <__assert_fail@plt+0x2c58>
   146c0:	ldr	r2, [r4, #452]	; 0x1c4
   146c4:	cmp	r2, #0
   146c8:	beq	146b4 <__assert_fail@plt+0x2bd4>
   146cc:	ldr	r1, [r4, #8]
   146d0:	ldr	r3, [r4, #456]	; 0x1c8
   146d4:	ldr	r0, [r6]
   146d8:	add	r3, r5, r3, lsl #2
   146dc:	ldr	r3, [r3, #376]	; 0x178
   146e0:	add	r1, r3, r1
   146e4:	cmp	r1, r0
   146e8:	bgt	146b4 <__assert_fail@plt+0x2bd4>
   146ec:	ldrsh	r1, [r4, #4]
   146f0:	mov	r0, r8
   146f4:	add	r1, r5, r1, lsl #2
   146f8:	ldr	r1, [r1, #320]	; 0x140
   146fc:	bl	129d0 <__assert_fail@plt+0xef0>
   14700:	mov	r3, #0
   14704:	mov	r0, r4
   14708:	ldr	r1, [r7]
   1470c:	mov	r2, r3
   14710:	bl	13748 <__assert_fail@plt+0x1c68>
   14714:	ldr	r3, [r4, #456]	; 0x1c8
   14718:	mov	r2, #1
   1471c:	add	r3, r3, r2
   14720:	cmp	r3, r2
   14724:	strls	r3, [r4, #456]	; 0x1c8
   14728:	strhi	r2, [r4, #456]	; 0x1c8
   1472c:	ldr	r4, [r4]
   14730:	cmp	r4, #0
   14734:	bne	146c0 <__assert_fail@plt+0x2be0>
   14738:	mov	r0, #30
   1473c:	ldrd	r4, [sp]
   14740:	ldrd	r6, [sp, #8]
   14744:	ldr	r8, [sp, #16]
   14748:	ldr	lr, [sp, #20]
   1474c:	add	sp, sp, #24
   14750:	b	1178c <alarm@plt>
   14754:	movw	r3, #64568	; 0xfc38
   14758:	movt	r3, #2
   1475c:	movw	r1, #54900	; 0xd674
   14760:	movt	r1, #1
   14764:	ldr	r2, [r3]
   14768:	mov	r0, #6
   1476c:	mov	r3, #12
   14770:	bl	13ebc <__assert_fail@plt+0x23dc>
   14774:	mov	r3, #0
   14778:	str	r3, [r4]
   1477c:	b	1468c <__assert_fail@plt+0x2bac>
   14780:	movw	r3, #64072	; 0xfa48
   14784:	movt	r3, #2
   14788:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1478c:	ldr	r4, [r3]
   14790:	movw	r5, #64560	; 0xfc30
   14794:	movt	r5, #2
   14798:	mov	r3, #0
   1479c:	strd	r6, [sp, #8]
   147a0:	mov	r7, r0
   147a4:	str	r8, [sp, #16]
   147a8:	str	lr, [sp, #20]
   147ac:	sub	sp, sp, #104	; 0x68
   147b0:	ldr	r8, [r5]
   147b4:	cmp	r4, r3
   147b8:	str	r3, [r5]
   147bc:	beq	14804 <__assert_fail@plt+0x2d24>
   147c0:	movw	r6, #64568	; 0xfc38
   147c4:	movt	r6, #2
   147c8:	b	147d8 <__assert_fail@plt+0x2cf8>
   147cc:	ldr	r4, [r4]
   147d0:	cmp	r4, #0
   147d4:	beq	14804 <__assert_fail@plt+0x2d24>
   147d8:	ldr	r3, [r4, #452]	; 0x1c4
   147dc:	cmp	r3, #0
   147e0:	beq	147cc <__assert_fail@plt+0x2cec>
   147e4:	mov	r3, #0
   147e8:	mov	r0, r4
   147ec:	ldr	r1, [r6]
   147f0:	mov	r2, r3
   147f4:	bl	13748 <__assert_fail@plt+0x1c68>
   147f8:	ldr	r4, [r4]
   147fc:	cmp	r4, #0
   14800:	bne	147d8 <__assert_fail@plt+0x2cf8>
   14804:	cmp	r7, #0
   14808:	str	r8, [r5]
   1480c:	bne	148c0 <__assert_fail@plt+0x2de0>
   14810:	movw	r7, #61868	; 0xf1ac
   14814:	movt	r7, #2
   14818:	ldr	r0, [r7, #384]	; 0x180
   1481c:	cmp	r0, #0
   14820:	blt	14828 <__assert_fail@plt+0x2d48>
   14824:	bl	11ac8 <close@plt>
   14828:	movw	r6, #64544	; 0xfc20
   1482c:	movt	r6, #2
   14830:	ldr	r3, [r6]
   14834:	cmp	r3, #0
   14838:	beq	14898 <__assert_fail@plt+0x2db8>
   1483c:	movw	r5, #64640	; 0xfc80
   14840:	movt	r5, #2
   14844:	mov	r4, #0
   14848:	b	1485c <__assert_fail@plt+0x2d7c>
   1484c:	ldr	r3, [r6]
   14850:	add	r4, r4, #1
   14854:	cmp	r3, r4
   14858:	bls	14898 <__assert_fail@plt+0x2db8>
   1485c:	ldr	r3, [r5]
   14860:	add	r3, r3, r4, lsl #3
   14864:	ldr	r0, [r3, #4]
   14868:	cmp	r0, #0
   1486c:	blt	1484c <__assert_fail@plt+0x2d6c>
   14870:	bl	11ac8 <close@plt>
   14874:	ldr	r3, [r5]
   14878:	ldr	r0, [r3, r4, lsl #3]
   1487c:	cmp	r0, #0
   14880:	beq	1484c <__assert_fail@plt+0x2d6c>
   14884:	bl	117a4 <unlink@plt>
   14888:	ldr	r3, [r6]
   1488c:	add	r4, r4, #1
   14890:	cmp	r3, r4
   14894:	bhi	1485c <__assert_fail@plt+0x2d7c>
   14898:	ldr	r0, [r7, #312]	; 0x138
   1489c:	cmp	r0, #0
   148a0:	blt	148a8 <__assert_fail@plt+0x2dc8>
   148a4:	bl	11ac8 <close@plt>
   148a8:	ldr	r0, [r7, #316]	; 0x13c
   148ac:	cmp	r0, #0
   148b0:	blt	148b8 <__assert_fail@plt+0x2dd8>
   148b4:	bl	11ac8 <close@plt>
   148b8:	mov	r0, #0
   148bc:	bl	118dc <exit@plt>
   148c0:	movw	r3, #62908	; 0xf5bc
   148c4:	movt	r3, #2
   148c8:	mov	r2, r7
   148cc:	movw	r0, #54952	; 0xd6a8
   148d0:	movt	r0, #1
   148d4:	ldr	r1, [r3]
   148d8:	bl	129d0 <__assert_fail@plt+0xef0>
   148dc:	mov	r3, r7
   148e0:	mov	r1, #100	; 0x64
   148e4:	add	r0, sp, #4
   148e8:	movw	r2, #54980	; 0xd6c4
   148ec:	movt	r2, #1
   148f0:	bl	11924 <snprintf@plt>
   148f4:	bl	11918 <__errno_location@plt>
   148f8:	mov	r3, r0
   148fc:	mov	r2, #0
   14900:	add	r0, sp, #4
   14904:	str	r2, [r3]
   14908:	bl	134fc <__assert_fail@plt+0x1a1c>
   1490c:	b	14810 <__assert_fail@plt+0x2d30>
   14910:	strd	r4, [sp, #-16]!
   14914:	mov	r5, r0
   14918:	mov	r4, r1
   1491c:	str	r6, [sp, #8]
   14920:	str	lr, [sp, #12]
   14924:	bl	118c4 <__ctype_b_loc@plt>
   14928:	ldrb	r3, [r5]
   1492c:	ldr	r2, [r0]
   14930:	lsl	r3, r3, #1
   14934:	ldrh	r3, [r2, r3]
   14938:	tst	r3, #2048	; 0x800
   1493c:	bne	14994 <__assert_fail@plt+0x2eb4>
   14940:	ldr	r1, [r4]
   14944:	cmp	r1, #0
   14948:	bne	1495c <__assert_fail@plt+0x2e7c>
   1494c:	b	14980 <__assert_fail@plt+0x2ea0>
   14950:	ldr	r1, [r4, #8]!
   14954:	cmp	r1, #0
   14958:	beq	14980 <__assert_fail@plt+0x2ea0>
   1495c:	mov	r0, r5
   14960:	bl	117d4 <strcasecmp@plt>
   14964:	cmp	r0, #0
   14968:	bne	14950 <__assert_fail@plt+0x2e70>
   1496c:	ldr	r0, [r4, #4]
   14970:	ldrd	r4, [sp]
   14974:	ldr	r6, [sp, #8]
   14978:	add	sp, sp, #12
   1497c:	pop	{pc}		; (ldr pc, [sp], #4)
   14980:	ldrd	r4, [sp]
   14984:	mvn	r0, #0
   14988:	ldr	r6, [sp, #8]
   1498c:	add	sp, sp, #12
   14990:	pop	{pc}		; (ldr pc, [sp], #4)
   14994:	mov	r0, r5
   14998:	mov	r2, #10
   1499c:	ldrd	r4, [sp]
   149a0:	mov	r1, #0
   149a4:	ldr	r6, [sp, #8]
   149a8:	ldr	lr, [sp, #12]
   149ac:	add	sp, sp, #16
   149b0:	b	11660 <strtol@plt>
   149b4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   149b8:	movw	r3, #64576	; 0xfc40
   149bc:	movt	r3, #2
   149c0:	strd	r6, [sp, #8]
   149c4:	mov	r4, r0
   149c8:	movw	r0, #55016	; 0xd6e8
   149cc:	movt	r0, #1
   149d0:	strd	r8, [sp, #16]
   149d4:	mov	r5, #0
   149d8:	strd	sl, [sp, #24]
   149dc:	str	lr, [sp, #32]
   149e0:	sub	sp, sp, #1248	; 0x4e0
   149e4:	sub	sp, sp, #12
   149e8:	str	r1, [sp, #8]
   149ec:	mov	r1, r4
   149f0:	str	r3, [sp, #20]
   149f4:	ldr	r3, [r3]
   149f8:	cmp	r3, #0
   149fc:	movweq	r2, #60936	; 0xee08
   14a00:	movwne	r2, #55004	; 0xd6dc
   14a04:	movteq	r2, #1
   14a08:	movtne	r2, #1
   14a0c:	moveq	r3, r2
   14a10:	bl	129d0 <__assert_fail@plt+0xef0>
   14a14:	bl	11918 <__errno_location@plt>
   14a18:	ldr	r6, [sp, #8]
   14a1c:	mov	r3, r0
   14a20:	mov	r1, r5
   14a24:	mov	r2, #464	; 0x1d0
   14a28:	str	r5, [r3]
   14a2c:	add	r3, r6, #12
   14a30:	mov	r0, r6
   14a34:	str	r3, [sp, #12]
   14a38:	bl	11954 <memset@plt>
   14a3c:	mov	r2, r5
   14a40:	add	r3, r6, #11
   14a44:	add	r1, r6, #36	; 0x24
   14a48:	strb	r2, [r3, #1]!
   14a4c:	cmp	r1, r3
   14a50:	bne	14a48 <__assert_fail@plt+0x2f68>
   14a54:	movw	r3, #55032	; 0xd6f8
   14a58:	movt	r3, #1
   14a5c:	movw	r5, #55072	; 0xd720
   14a60:	movt	r5, #1
   14a64:	str	r3, [sp, #16]
   14a68:	ldr	r3, [sp, #8]
   14a6c:	str	r2, [r3, #460]	; 0x1cc
   14a70:	ldrb	fp, [r4]
   14a74:	and	r3, fp, #223	; 0xdf
   14a78:	cmp	fp, #9
   14a7c:	cmpne	r3, #0
   14a80:	beq	14cb4 <__assert_fail@plt+0x31d4>
   14a84:	add	r1, r4, #1
   14a88:	mov	r3, fp
   14a8c:	cmp	r3, #46	; 0x2e
   14a90:	mov	r7, r1
   14a94:	beq	14aa8 <__assert_fail@plt+0x2fc8>
   14a98:	ldrb	r3, [r1], #1
   14a9c:	cmp	r3, #0
   14aa0:	cmpne	r3, #9
   14aa4:	bne	14a8c <__assert_fail@plt+0x2fac>
   14aa8:	ldrb	r6, [r7]
   14aac:	add	r9, sp, #232	; 0xe8
   14ab0:	mov	r8, r9
   14ab4:	cmp	r6, #0
   14ab8:	ldrne	sl, [sp, #16]
   14abc:	bne	14ad4 <__assert_fail@plt+0x2ff4>
   14ac0:	b	14e30 <__assert_fail@plt+0x3350>
   14ac4:	strb	r6, [r8], #1
   14ac8:	ldrb	r6, [r7, #1]!
   14acc:	cmp	r6, #0
   14ad0:	beq	14e30 <__assert_fail@plt+0x3350>
   14ad4:	mov	r1, r6
   14ad8:	mov	r0, sl
   14adc:	bl	11900 <strchr@plt>
   14ae0:	cmp	r0, #0
   14ae4:	beq	14ac4 <__assert_fail@plt+0x2fe4>
   14ae8:	ldrb	r1, [r7]
   14aec:	mov	r3, #0
   14af0:	strb	r3, [r8]
   14af4:	cmp	r1, r3
   14af8:	beq	14b24 <__assert_fail@plt+0x3044>
   14afc:	movw	r6, #55040	; 0xd700
   14b00:	movt	r6, #1
   14b04:	b	14b14 <__assert_fail@plt+0x3034>
   14b08:	ldrb	r1, [r7, #1]!
   14b0c:	cmp	r1, #0
   14b10:	beq	14b24 <__assert_fail@plt+0x3044>
   14b14:	mov	r0, r6
   14b18:	bl	11900 <strchr@plt>
   14b1c:	cmp	r0, #0
   14b20:	bne	14b08 <__assert_fail@plt+0x3028>
   14b24:	mov	r6, #0
   14b28:	mov	r1, r9
   14b2c:	mov	r8, r6
   14b30:	b	14b48 <__assert_fail@plt+0x3068>
   14b34:	cmp	r3, #33	; 0x21
   14b38:	moveq	r8, #1
   14b3c:	beq	14b48 <__assert_fail@plt+0x3068>
   14b40:	cmp	r3, #61	; 0x3d
   14b44:	moveq	r6, #1
   14b48:	mov	sl, r1
   14b4c:	ldrb	r3, [r1], #1
   14b50:	cmp	r3, #61	; 0x3d
   14b54:	cmpne	r3, #33	; 0x21
   14b58:	moveq	r0, #1
   14b5c:	movne	r0, #0
   14b60:	beq	14b34 <__assert_fail@plt+0x3054>
   14b64:	cmp	r3, #42	; 0x2a
   14b68:	moveq	r3, #255	; 0xff
   14b6c:	beq	14bbc <__assert_fail@plt+0x30dc>
   14b70:	ldr	r1, [pc, #1572]	; 1519c <__assert_fail@plt+0x36bc>
   14b74:	mov	r0, sl
   14b78:	bl	14910 <__assert_fail@plt+0x2e30>
   14b7c:	subs	r1, r0, #0
   14b80:	blt	14e54 <__assert_fail@plt+0x3374>
   14b84:	cmp	r1, #16
   14b88:	cmpne	r1, #7
   14b8c:	movgt	r3, #1
   14b90:	movle	r3, #0
   14b94:	bgt	14e54 <__assert_fail@plt+0x3374>
   14b98:	cmp	r1, #16
   14b9c:	ldrb	fp, [r4]
   14ba0:	moveq	r0, #255	; 0xff
   14ba4:	beq	14bbc <__assert_fail@plt+0x30dc>
   14ba8:	cmp	r6, #0
   14bac:	beq	14e1c <__assert_fail@plt+0x333c>
   14bb0:	mov	ip, #1
   14bb4:	mov	r0, r3
   14bb8:	lsl	r3, ip, r1
   14bbc:	cmp	r8, #0
   14bc0:	movw	sl, #55108	; 0xd744
   14bc4:	movt	sl, #1
   14bc8:	moveq	r6, r3
   14bcc:	movne	r6, r0
   14bd0:	moveq	r3, r0
   14bd4:	str	r3, [sp, #4]
   14bd8:	cmp	fp, #0
   14bdc:	beq	14ca8 <__assert_fail@plt+0x31c8>
   14be0:	mov	r1, fp
   14be4:	mov	r0, sl
   14be8:	bl	11900 <strchr@plt>
   14bec:	cmp	r0, #0
   14bf0:	bne	14ca8 <__assert_fail@plt+0x31c8>
   14bf4:	mov	r8, r9
   14bf8:	b	14c0c <__assert_fail@plt+0x312c>
   14bfc:	strb	fp, [r8], #1
   14c00:	ldrb	fp, [r4, #1]!
   14c04:	cmp	fp, #0
   14c08:	beq	14c20 <__assert_fail@plt+0x3140>
   14c0c:	mov	r1, fp
   14c10:	mov	r0, r5
   14c14:	bl	11900 <strchr@plt>
   14c18:	cmp	r0, #0
   14c1c:	beq	14bfc <__assert_fail@plt+0x311c>
   14c20:	mov	r1, #0
   14c24:	strb	r1, [r8]
   14c28:	ldrb	r3, [sp, #232]	; 0xe8
   14c2c:	cmp	r3, #42	; 0x2a
   14c30:	beq	14d84 <__assert_fail@plt+0x32a4>
   14c34:	ldr	r1, [pc, #1380]	; 151a0 <__assert_fail@plt+0x36c0>
   14c38:	mov	r0, r9
   14c3c:	bl	14910 <__assert_fail@plt+0x2e30>
   14c40:	cmp	r0, #192	; 0xc0
   14c44:	bhi	14ddc <__assert_fail@plt+0x32fc>
   14c48:	movw	r2, #64068	; 0xfa44
   14c4c:	movt	r2, #2
   14c50:	ldr	r3, [sp, #8]
   14c54:	asr	r0, r0, #3
   14c58:	mov	lr, #1
   14c5c:	ldr	r1, [r2]
   14c60:	add	ip, r3, r0
   14c64:	ldrb	r3, [ip, #12]
   14c68:	orr	r0, r1, lr, lsl r0
   14c6c:	ldr	r1, [sp, #4]
   14c70:	str	r0, [r2]
   14c74:	bic	r3, r3, r1
   14c78:	orr	r3, r3, r6
   14c7c:	strb	r3, [ip, #12]
   14c80:	ldrb	fp, [r4]
   14c84:	cmp	fp, #32
   14c88:	cmpne	fp, #44	; 0x2c
   14c8c:	bne	14bd8 <__assert_fail@plt+0x30f8>
   14c90:	ldrb	fp, [r4, #1]!
   14c94:	cmp	fp, #32
   14c98:	cmpne	fp, #44	; 0x2c
   14c9c:	beq	14c90 <__assert_fail@plt+0x31b0>
   14ca0:	cmp	fp, #0
   14ca4:	bne	14be0 <__assert_fail@plt+0x3100>
   14ca8:	mov	r4, r7
   14cac:	b	14a70 <__assert_fail@plt+0x2f90>
   14cb0:	ldrb	fp, [r4, #1]!
   14cb4:	cmp	fp, #32
   14cb8:	cmpne	fp, #9
   14cbc:	beq	14cb0 <__assert_fail@plt+0x31d0>
   14cc0:	cmp	fp, #45	; 0x2d
   14cc4:	bne	14cdc <__assert_fail@plt+0x31fc>
   14cc8:	ldr	r2, [sp, #8]
   14ccc:	add	r4, r4, #1
   14cd0:	ldr	r3, [r2, #460]	; 0x1cc
   14cd4:	orr	r3, r3, #1
   14cd8:	str	r3, [r2, #460]	; 0x1cc
   14cdc:	ldrb	r3, [r4]
   14ce0:	cmp	r3, #0
   14ce4:	beq	14ff4 <__assert_fail@plt+0x3514>
   14ce8:	cmp	r3, #47	; 0x2f
   14cec:	beq	14f90 <__assert_fail@plt+0x34b0>
   14cf0:	bls	14e3c <__assert_fail@plt+0x335c>
   14cf4:	cmp	r3, #64	; 0x40
   14cf8:	beq	1500c <__assert_fail@plt+0x352c>
   14cfc:	cmp	r3, #124	; 0x7c
   14d00:	bne	14e84 <__assert_fail@plt+0x33a4>
   14d04:	mov	r0, r4
   14d08:	add	r5, r4, #1
   14d0c:	bl	11774 <strdup@plt>
   14d10:	ldr	r6, [sp, #8]
   14d14:	movw	r1, #2050	; 0x802
   14d18:	str	r0, [r6, #40]	; 0x28
   14d1c:	mov	r0, r5
   14d20:	bl	1184c <open64@plt>
   14d24:	sxth	r4, r0
   14d28:	cmp	r4, #0
   14d2c:	strh	r4, [r6, #6]
   14d30:	blt	15178 <__assert_fail@plt+0x3698>
   14d34:	mov	r0, r5
   14d38:	ldr	r1, [pc, #1124]	; 151a4 <__assert_fail@plt+0x36c4>
   14d3c:	bl	11654 <strcmp@plt>
   14d40:	cmp	r0, #0
   14d44:	bne	150d0 <__assert_fail@plt+0x35f0>
   14d48:	ldr	r2, [sp, #8]
   14d4c:	mov	r3, #3
   14d50:	strh	r3, [r2, #4]
   14d54:	ldr	r3, [sp, #20]
   14d58:	ldr	r4, [r3]
   14d5c:	cmp	r4, #0
   14d60:	beq	14e78 <__assert_fail@plt+0x3398>
   14d64:	mov	r0, r4
   14d68:	bl	11774 <strdup@plt>
   14d6c:	ldr	r5, [sp, #8]
   14d70:	str	r0, [r5, #436]	; 0x1b4
   14d74:	mov	r0, r4
   14d78:	bl	118e8 <strlen@plt>
   14d7c:	str	r0, [r5, #440]	; 0x1b8
   14d80:	b	14dfc <__assert_fail@plt+0x331c>
   14d84:	movw	r3, #64068	; 0xfa44
   14d88:	movt	r3, #2
   14d8c:	ldrb	r0, [sp, #233]	; 0xe9
   14d90:	ldr	lr, [r3]
   14d94:	ldr	r3, [sp, #4]
   14d98:	ldr	r2, [sp, #12]
   14d9c:	mvn	ip, r3
   14da0:	b	14dc4 <__assert_fail@plt+0x32e4>
   14da4:	ldrb	r3, [r2]
   14da8:	and	r3, r3, ip
   14dac:	orr	r3, r3, r6
   14db0:	strb	r3, [r2]
   14db4:	add	r1, r1, #1
   14db8:	add	r2, r2, #1
   14dbc:	cmp	r1, #25
   14dc0:	beq	14c80 <__assert_fail@plt+0x31a0>
   14dc4:	cmp	r0, #42	; 0x2a
   14dc8:	bne	14da4 <__assert_fail@plt+0x32c4>
   14dcc:	asr	r3, lr, r1
   14dd0:	tst	r3, #1
   14dd4:	beq	14da4 <__assert_fail@plt+0x32c4>
   14dd8:	b	14db4 <__assert_fail@plt+0x32d4>
   14ddc:	mov	r3, r9
   14de0:	add	r0, sp, #32
   14de4:	movw	r2, #55080	; 0xd728
   14de8:	movt	r2, #1
   14dec:	mov	r1, #200	; 0xc8
   14df0:	bl	11924 <snprintf@plt>
   14df4:	add	r0, sp, #32
   14df8:	bl	134fc <__assert_fail@plt+0x1a1c>
   14dfc:	add	sp, sp, #1248	; 0x4e0
   14e00:	add	sp, sp, #12
   14e04:	ldrd	r4, [sp]
   14e08:	ldrd	r6, [sp, #8]
   14e0c:	ldrd	r8, [sp, #16]
   14e10:	ldrd	sl, [sp, #24]
   14e14:	add	sp, sp, #32
   14e18:	pop	{pc}		; (ldr pc, [sp], #4)
   14e1c:	add	r1, r1, #1
   14e20:	mvn	r3, #0
   14e24:	mov	r0, r6
   14e28:	mvn	r3, r3, lsl r1
   14e2c:	b	14bbc <__assert_fail@plt+0x30dc>
   14e30:	mov	r3, #0
   14e34:	strb	r3, [r8]
   14e38:	b	14b24 <__assert_fail@plt+0x3044>
   14e3c:	cmp	r3, #42	; 0x2a
   14e40:	bne	14e84 <__assert_fail@plt+0x33a4>
   14e44:	ldr	r2, [sp, #8]
   14e48:	mov	r3, #6
   14e4c:	strh	r3, [r2, #4]
   14e50:	b	14d54 <__assert_fail@plt+0x3274>
   14e54:	mov	r3, sl
   14e58:	add	r0, sp, #32
   14e5c:	mov	r1, #200	; 0xc8
   14e60:	movw	r2, #55044	; 0xd704
   14e64:	movt	r2, #1
   14e68:	bl	11924 <snprintf@plt>
   14e6c:	add	r0, sp, #32
   14e70:	bl	134fc <__assert_fail@plt+0x1a1c>
   14e74:	b	14dfc <__assert_fail@plt+0x331c>
   14e78:	ldr	r3, [sp, #8]
   14e7c:	str	r4, [r3, #436]	; 0x1b4
   14e80:	b	14dfc <__assert_fail@plt+0x331c>
   14e84:	ldr	r2, [sp, #8]
   14e88:	mov	r3, #1
   14e8c:	str	r3, [r2, #40]	; 0x28
   14e90:	ldrb	r2, [r4]
   14e94:	cmp	r2, #0
   14e98:	beq	15170 <__assert_fail@plt+0x3690>
   14e9c:	mov	r1, r4
   14ea0:	cmp	r2, #44	; 0x2c
   14ea4:	bne	14eb4 <__assert_fail@plt+0x33d4>
   14ea8:	ldr	r2, [sp, #8]
   14eac:	add	r3, r3, #1
   14eb0:	str	r3, [r2, #40]	; 0x28
   14eb4:	ldrb	r2, [r1, #1]!
   14eb8:	cmp	r2, #0
   14ebc:	bne	14ea0 <__assert_fail@plt+0x33c0>
   14ec0:	lsl	r0, r3, #2
   14ec4:	bl	1bcfc <argp_parse@@Base+0x1f0c>
   14ec8:	ldr	r3, [sp, #8]
   14ecc:	mov	r9, r0
   14ed0:	str	r0, [r3, #44]	; 0x2c
   14ed4:	ldrb	r3, [r4]
   14ed8:	cmp	r3, #0
   14edc:	beq	14f80 <__assert_fail@plt+0x34a0>
   14ee0:	ldr	sl, [sp, #8]
   14ee4:	mov	r6, #0
   14ee8:	mov	r7, r6
   14eec:	cmp	r3, #44	; 0x2c
   14ef0:	mov	r5, r4
   14ef4:	moveq	r0, #1
   14ef8:	moveq	r8, #0
   14efc:	beq	14f18 <__assert_fail@plt+0x3438>
   14f00:	ldrb	r3, [r5, #1]!
   14f04:	cmp	r3, #0
   14f08:	cmpne	r3, #44	; 0x2c
   14f0c:	bne	14f00 <__assert_fail@plt+0x3420>
   14f10:	sub	r8, r5, r4
   14f14:	add	r0, r8, #1
   14f18:	bl	1bcfc <argp_parse@@Base+0x1f0c>
   14f1c:	str	r0, [r9, r6]
   14f20:	ldr	r3, [sl, #44]	; 0x2c
   14f24:	ldr	r0, [r3, r6]
   14f28:	cmp	r0, #0
   14f2c:	beq	14f48 <__assert_fail@plt+0x3468>
   14f30:	mov	r1, r4
   14f34:	mov	r2, r8
   14f38:	bl	11960 <strncpy@plt>
   14f3c:	ldr	r3, [sl, #44]	; 0x2c
   14f40:	ldr	r3, [r3, r6]
   14f44:	strb	r7, [r3, r8]
   14f48:	ldrb	r3, [r5]
   14f4c:	cmp	r3, #32
   14f50:	cmpne	r3, #44	; 0x2c
   14f54:	bne	14f68 <__assert_fail@plt+0x3488>
   14f58:	ldrb	r3, [r5, #1]!
   14f5c:	cmp	r3, #32
   14f60:	cmpne	r3, #44	; 0x2c
   14f64:	beq	14f58 <__assert_fail@plt+0x3478>
   14f68:	cmp	r3, #0
   14f6c:	add	r6, r6, #4
   14f70:	beq	14f80 <__assert_fail@plt+0x34a0>
   14f74:	mov	r4, r5
   14f78:	ldr	r9, [sl, #44]	; 0x2c
   14f7c:	b	14eec <__assert_fail@plt+0x340c>
   14f80:	ldr	r2, [sp, #8]
   14f84:	mov	r3, #5
   14f88:	strh	r3, [r2, #4]
   14f8c:	b	14d54 <__assert_fail@plt+0x3274>
   14f90:	mov	r0, r4
   14f94:	bl	11774 <strdup@plt>
   14f98:	ldr	r6, [sp, #8]
   14f9c:	mov	r2, #420	; 0x1a4
   14fa0:	movw	r1, #1089	; 0x441
   14fa4:	str	r0, [r6, #40]	; 0x28
   14fa8:	mov	r0, r4
   14fac:	bl	1184c <open64@plt>
   14fb0:	sxth	r5, r0
   14fb4:	cmp	r5, #0
   14fb8:	strh	r5, [r6, #6]
   14fbc:	blt	1514c <__assert_fail@plt+0x366c>
   14fc0:	mov	r0, r4
   14fc4:	ldr	r1, [pc, #472]	; 151a4 <__assert_fail@plt+0x36c4>
   14fc8:	bl	11654 <strcmp@plt>
   14fcc:	cmp	r0, #0
   14fd0:	beq	14d48 <__assert_fail@plt+0x3268>
   14fd4:	mov	r0, r5
   14fd8:	bl	11a98 <isatty@plt>
   14fdc:	cmp	r0, #0
   14fe0:	bne	1513c <__assert_fail@plt+0x365c>
   14fe4:	ldr	r2, [sp, #8]
   14fe8:	mov	r3, #1
   14fec:	strh	r3, [r2, #4]
   14ff0:	b	14d54 <__assert_fail@plt+0x3274>
   14ff4:	ldr	r2, [sp, #8]
   14ff8:	movw	r0, #55116	; 0xd74c
   14ffc:	movt	r0, #1
   15000:	strh	r3, [r2, #4]
   15004:	bl	134fc <__assert_fail@plt+0x1a1c>
   15008:	b	14dfc <__assert_fail@plt+0x331c>
   1500c:	add	r4, r4, #1
   15010:	add	r5, sp, #40	; 0x28
   15014:	mov	r0, r4
   15018:	mov	r6, #0
   1501c:	bl	11774 <strdup@plt>
   15020:	movw	r3, #61868	; 0xf1ac
   15024:	movt	r3, #2
   15028:	ldr	r2, [sp, #8]
   1502c:	ldr	r1, [r3, #4]
   15030:	mov	r3, #0
   15034:	str	r0, [r2, #40]	; 0x28
   15038:	mov	r2, #0
   1503c:	mov	r0, #2
   15040:	cmp	r1, #0
   15044:	strd	r2, [sp, #32]
   15048:	strd	r2, [r5], #-8
   1504c:	strd	r2, [r5, #16]
   15050:	strd	r2, [r5, #24]
   15054:	moveq	r3, #32
   15058:	mov	r2, #128	; 0x80
   1505c:	str	r1, [sp, #36]	; 0x24
   15060:	mov	r1, r6
   15064:	streq	r3, [sp, #32]
   15068:	ldr	r3, [sp, #8]
   1506c:	str	r0, [sp, #40]	; 0x28
   15070:	add	r7, r3, #44	; 0x2c
   15074:	str	r6, [r3, #172]	; 0xac
   15078:	mov	r0, r7
   1507c:	bl	11954 <memset@plt>
   15080:	movw	r1, #62924	; 0xf5cc
   15084:	movt	r1, #2
   15088:	add	r3, sp, #28
   1508c:	mov	r2, r5
   15090:	ldr	r1, [r1, #44]	; 0x2c
   15094:	mov	r0, r4
   15098:	bl	11a68 <getaddrinfo@plt>
   1509c:	cmp	r0, #0
   150a0:	beq	15108 <__assert_fail@plt+0x3628>
   150a4:	cmn	r0, #10
   150a8:	beq	150f0 <__assert_fail@plt+0x3610>
   150ac:	cmn	r0, #3
   150b0:	beq	150f0 <__assert_fail@plt+0x3610>
   150b4:	ldr	r3, [sp, #8]
   150b8:	strh	r6, [r3, #4]
   150bc:	mov	r0, #0
   150c0:	bl	1172c <time@plt>
   150c4:	ldr	r3, [sp, #8]
   150c8:	str	r0, [r3, #8]
   150cc:	b	14d54 <__assert_fail@plt+0x3274>
   150d0:	mov	r0, r4
   150d4:	bl	11a98 <isatty@plt>
   150d8:	cmp	r0, #0
   150dc:	bne	1513c <__assert_fail@plt+0x365c>
   150e0:	ldr	r2, [sp, #8]
   150e4:	mov	r3, #9
   150e8:	strh	r3, [r2, #4]
   150ec:	b	14d54 <__assert_fail@plt+0x3274>
   150f0:	ldr	r1, [sp, #8]
   150f4:	mov	r2, #8
   150f8:	mov	r3, #10
   150fc:	strh	r2, [r1, #4]
   15100:	str	r3, [r1, #452]	; 0x1c4
   15104:	b	150bc <__assert_fail@plt+0x35dc>
   15108:	ldr	ip, [sp, #8]
   1510c:	mov	r3, #4
   15110:	mov	r0, r7
   15114:	ldr	r4, [sp, #28]
   15118:	ldr	r1, [r4, #20]
   1511c:	strh	r3, [ip, #4]
   15120:	ldr	r3, [r4, #16]
   15124:	mov	r2, r3
   15128:	str	r3, [ip, #172]	; 0xac
   1512c:	bl	11714 <memcpy@plt>
   15130:	mov	r0, r4
   15134:	bl	11a5c <freeaddrinfo@plt>
   15138:	b	14d54 <__assert_fail@plt+0x3274>
   1513c:	ldr	r2, [sp, #8]
   15140:	mov	r3, #2
   15144:	strh	r3, [r2, #4]
   15148:	b	14d54 <__assert_fail@plt+0x3274>
   1514c:	mov	r0, r4
   15150:	ldr	r4, [sp, #8]
   15154:	mov	r5, #0
   15158:	strh	r5, [r4, #4]
   1515c:	bl	134fc <__assert_fail@plt+0x1a1c>
   15160:	ldr	r0, [r4, #40]	; 0x28
   15164:	bl	1afbc <argp_parse@@Base+0x11cc>
   15168:	str	r5, [r4, #40]	; 0x28
   1516c:	b	14d54 <__assert_fail@plt+0x3274>
   15170:	mov	r0, #4
   15174:	b	14ec4 <__assert_fail@plt+0x33e4>
   15178:	mov	r0, r5
   1517c:	ldr	r5, [sp, #8]
   15180:	mov	r4, #0
   15184:	strh	r4, [r5, #4]
   15188:	bl	134fc <__assert_fail@plt+0x1a1c>
   1518c:	ldr	r0, [r5, #40]	; 0x28
   15190:	bl	1afbc <argp_parse@@Base+0x11cc>
   15194:	str	r4, [r5, #40]	; 0x28
   15198:	b	14d54 <__assert_fail@plt+0x3274>
   1519c:	andeq	pc, r2, ip, ror r2	; <UNPREDICTABLE>
   151a0:	andeq	pc, r2, r4, asr #3
   151a4:	andeq	pc, r2, r4, lsl r3	; <UNPREDICTABLE>
   151a8:	movw	r1, #58864	; 0xe5f0
   151ac:	movt	r1, #1
   151b0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   151b4:	strd	r6, [sp, #8]
   151b8:	mov	r4, r0
   151bc:	strd	r8, [sp, #16]
   151c0:	strd	sl, [sp, #24]
   151c4:	str	lr, [sp, #32]
   151c8:	sub	sp, sp, #12
   151cc:	bl	11a38 <fopen64@plt>
   151d0:	subs	r9, r0, #0
   151d4:	beq	154c0 <__assert_fail@plt+0x39e0>
   151d8:	mov	r0, #2048	; 0x800
   151dc:	bl	1bcfc <argp_parse@@Base+0x1f0c>
   151e0:	subs	fp, r0, #0
   151e4:	beq	154fc <__assert_fail@plt+0x3a1c>
   151e8:	movw	sl, #64576	; 0xfc40
   151ec:	movt	sl, #2
   151f0:	movw	r3, #55268	; 0xd7e4
   151f4:	movt	r3, #1
   151f8:	ldr	r0, [sl]
   151fc:	mov	r5, fp
   15200:	mov	r7, #2048	; 0x800
   15204:	str	r3, [sp, #4]
   15208:	bl	1afbc <argp_parse@@Base+0x11cc>
   1520c:	mov	r2, #0
   15210:	movw	r3, #64072	; 0xfa48
   15214:	movt	r3, #2
   15218:	mov	r4, r2
   1521c:	str	r2, [sl]
   15220:	str	r3, [sp]
   15224:	sub	r6, fp, r5
   15228:	mov	r2, r9
   1522c:	sub	r1, r7, r6
   15230:	mov	r0, fp
   15234:	bl	116f0 <fgets@plt>
   15238:	cmp	r0, #0
   1523c:	beq	154a8 <__assert_fail@plt+0x39c8>
   15240:	mov	r0, fp
   15244:	bl	118e8 <strlen@plt>
   15248:	cmp	r4, #0
   1524c:	mov	r8, r0
   15250:	bne	152dc <__assert_fail@plt+0x37fc>
   15254:	mov	r0, fp
   15258:	mov	r1, #10
   1525c:	bl	11900 <strchr@plt>
   15260:	subs	r4, r0, #0
   15264:	beq	152b0 <__assert_fail@plt+0x37d0>
   15268:	bl	118c4 <__ctype_b_loc@plt>
   1526c:	ldr	r1, [r0]
   15270:	mov	r6, r0
   15274:	mov	r2, r5
   15278:	mov	r8, r2
   1527c:	ldrb	r4, [r2], #1
   15280:	lsl	r3, r4, #1
   15284:	ldrh	r3, [r1, r3]
   15288:	ands	r3, r3, #8192	; 0x2000
   1528c:	bne	15278 <__assert_fail@plt+0x3798>
   15290:	cmp	r4, #33	; 0x21
   15294:	beq	153c0 <__assert_fail@plt+0x38e0>
   15298:	cmp	r4, #35	; 0x23
   1529c:	beq	15318 <__assert_fail@plt+0x3838>
   152a0:	cmp	r4, #0
   152a4:	bne	15330 <__assert_fail@plt+0x3850>
   152a8:	mov	fp, r5
   152ac:	b	15224 <__assert_fail@plt+0x3744>
   152b0:	lsl	r7, r7, #1
   152b4:	mov	r0, r5
   152b8:	mov	r1, r7
   152bc:	bl	1bd38 <argp_parse@@Base+0x1f48>
   152c0:	subs	r3, r0, #0
   152c4:	beq	15464 <__assert_fail@plt+0x3984>
   152c8:	sub	r6, r6, #1
   152cc:	mov	r5, r3
   152d0:	add	r8, r6, r8
   152d4:	add	fp, r3, r8
   152d8:	b	15224 <__assert_fail@plt+0x3744>
   152dc:	ldrb	r2, [fp]
   152e0:	mov	r1, fp
   152e4:	cmp	r2, #32
   152e8:	cmpne	r2, #9
   152ec:	bne	15308 <__assert_fail@plt+0x3828>
   152f0:	ldrb	r2, [r1, #1]!
   152f4:	cmp	r2, #9
   152f8:	cmpne	r2, #32
   152fc:	beq	152f0 <__assert_fail@plt+0x3810>
   15300:	sub	r2, r1, fp
   15304:	sub	r8, r8, r2
   15308:	add	r2, r8, #1
   1530c:	mov	r0, fp
   15310:	bl	116c0 <memmove@plt>
   15314:	b	15254 <__assert_fail@plt+0x3774>
   15318:	ldrb	r2, [r8, #1]
   1531c:	cmp	r2, #33	; 0x21
   15320:	beq	153d0 <__assert_fail@plt+0x38f0>
   15324:	mov	r4, r3
   15328:	mov	fp, r5
   1532c:	b	15224 <__assert_fail@plt+0x3744>
   15330:	mov	r0, r8
   15334:	bl	118e8 <strlen@plt>
   15338:	add	r2, r0, #1
   1533c:	mov	r1, r8
   15340:	mov	r0, r5
   15344:	bl	116c0 <memmove@plt>
   15348:	mov	r0, r5
   1534c:	bl	118e8 <strlen@plt>
   15350:	add	r2, r5, r0
   15354:	ldr	ip, [r6]
   15358:	b	15360 <__assert_fail@plt+0x3880>
   1535c:	mov	r2, fp
   15360:	ldrb	r1, [r2, #-1]
   15364:	sub	fp, r2, #1
   15368:	lsl	r0, r1, #1
   1536c:	ldrh	r4, [ip, r0]
   15370:	ands	r4, r4, #8192	; 0x2000
   15374:	bne	1535c <__assert_fail@plt+0x387c>
   15378:	cmp	r1, #92	; 0x5c
   1537c:	strbeq	r4, [fp]
   15380:	moveq	r4, #1
   15384:	beq	15224 <__assert_fail@plt+0x3744>
   15388:	mov	r1, #464	; 0x1d0
   1538c:	mov	r0, #1
   15390:	strb	r4, [r2]
   15394:	bl	1bc88 <argp_parse@@Base+0x1e98>
   15398:	mov	r6, r0
   1539c:	mov	r1, r0
   153a0:	mov	r0, r5
   153a4:	mov	fp, r5
   153a8:	bl	149b4 <__assert_fail@plt+0x2ed4>
   153ac:	ldr	r3, [sp]
   153b0:	ldr	r2, [r3]
   153b4:	str	r6, [r3]
   153b8:	str	r2, [r6]
   153bc:	b	15224 <__assert_fail@plt+0x3744>
   153c0:	ldrb	r4, [r8, #1]
   153c4:	mov	r6, r2
   153c8:	cmp	r4, #33	; 0x21
   153cc:	bne	153ec <__assert_fail@plt+0x390c>
   153d0:	ldrb	r4, [r8, #2]
   153d4:	add	r6, r8, #2
   153d8:	lsl	r3, r4, #1
   153dc:	ldrh	r3, [r1, r3]
   153e0:	tst	r3, #8192	; 0x2000
   153e4:	beq	153fc <__assert_fail@plt+0x391c>
   153e8:	ldrb	r4, [r6, #1]!
   153ec:	lsl	r3, r4, #1
   153f0:	ldrh	r3, [r1, r3]
   153f4:	tst	r3, #8192	; 0x2000
   153f8:	bne	153e8 <__assert_fail@plt+0x3908>
   153fc:	cmp	r4, #0
   15400:	beq	152a8 <__assert_fail@plt+0x37c8>
   15404:	mov	r4, #0
   15408:	ldr	r0, [sl]
   1540c:	bl	1afbc <argp_parse@@Base+0x11cc>
   15410:	str	r4, [sl]
   15414:	ldrb	r3, [r6]
   15418:	cmp	r3, #42	; 0x2a
   1541c:	beq	152a8 <__assert_fail@plt+0x37c8>
   15420:	mov	r1, #44	; 0x2c
   15424:	mov	r0, r6
   15428:	bl	11900 <strchr@plt>
   1542c:	cmp	r0, #0
   15430:	ldr	r1, [sp, #4]
   15434:	mov	fp, r5
   15438:	strbne	r4, [r0]
   1543c:	mov	r0, r6
   15440:	mov	r4, #0
   15444:	bl	11a50 <strpbrk@plt>
   15448:	cmp	r0, #0
   1544c:	movne	r3, #0
   15450:	strbne	r3, [r0]
   15454:	mov	r0, r6
   15458:	bl	11774 <strdup@plt>
   1545c:	str	r0, [sl]
   15460:	b	15224 <__assert_fail@plt+0x3744>
   15464:	movw	r0, #55228	; 0xd7bc
   15468:	movt	r0, #1
   1546c:	str	r3, [sp]
   15470:	bl	129d0 <__assert_fail@plt+0xef0>
   15474:	mov	r0, r9
   15478:	bl	11990 <fclose@plt>
   1547c:	mov	r0, r5
   15480:	bl	1afbc <argp_parse@@Base+0x11cc>
   15484:	ldr	r3, [sp]
   15488:	mov	r0, r3
   1548c:	add	sp, sp, #12
   15490:	ldrd	r4, [sp]
   15494:	ldrd	r6, [sp, #8]
   15498:	ldrd	r8, [sp, #16]
   1549c:	ldrd	sl, [sp, #24]
   154a0:	add	sp, sp, #32
   154a4:	pop	{pc}		; (ldr pc, [sp], #4)
   154a8:	mov	r0, r9
   154ac:	bl	11990 <fclose@plt>
   154b0:	mov	r0, r5
   154b4:	bl	1afbc <argp_parse@@Base+0x11cc>
   154b8:	mov	r0, #1
   154bc:	b	1548c <__assert_fail@plt+0x39ac>
   154c0:	mov	r1, r4
   154c4:	movw	r0, #55136	; 0xd760
   154c8:	movt	r0, #1
   154cc:	movw	r4, #64072	; 0xfa48
   154d0:	movt	r4, #2
   154d4:	bl	129d0 <__assert_fail@plt+0xef0>
   154d8:	ldr	r3, [r4]
   154dc:	cmp	r3, #0
   154e0:	beq	15518 <__assert_fail@plt+0x3a38>
   154e4:	mov	r2, #1
   154e8:	movw	r3, #64560	; 0xfc30
   154ec:	movt	r3, #2
   154f0:	mov	r0, r2
   154f4:	str	r2, [r3]
   154f8:	b	1548c <__assert_fail@plt+0x39ac>
   154fc:	movw	r0, #55184	; 0xd790
   15500:	movt	r0, #1
   15504:	bl	129d0 <__assert_fail@plt+0xef0>
   15508:	mov	r0, r9
   1550c:	bl	11990 <fclose@plt>
   15510:	mov	r0, fp
   15514:	b	1548c <__assert_fail@plt+0x39ac>
   15518:	mov	r1, #464	; 0x1d0
   1551c:	mov	r0, #1
   15520:	bl	1bc88 <argp_parse@@Base+0x1e98>
   15524:	mov	r5, r0
   15528:	mov	r1, r0
   1552c:	movw	r0, #55152	; 0xd770
   15530:	movt	r0, #1
   15534:	bl	149b4 <__assert_fail@plt+0x2ed4>
   15538:	mov	r1, #464	; 0x1d0
   1553c:	mov	r0, #1
   15540:	bl	1bc88 <argp_parse@@Base+0x1e98>
   15544:	mov	r3, r0
   15548:	movw	r0, #55172	; 0xd784
   1554c:	movt	r0, #1
   15550:	mov	r1, r3
   15554:	str	r3, [r5]
   15558:	bl	149b4 <__assert_fail@plt+0x2ed4>
   1555c:	str	r5, [r4]
   15560:	b	154e4 <__assert_fail@plt+0x3a04>
   15564:	movw	r0, #55276	; 0xd7ec
   15568:	movt	r0, #1
   1556c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15570:	strd	r6, [sp, #8]
   15574:	strd	r8, [sp, #16]
   15578:	movw	r9, #64568	; 0xfc38
   1557c:	movt	r9, #2
   15580:	strd	sl, [sp, #24]
   15584:	movw	sl, #64072	; 0xfa48
   15588:	movt	sl, #2
   1558c:	str	lr, [sp, #32]
   15590:	sub	sp, sp, #132	; 0x84
   15594:	movw	fp, #64560	; 0xfc30
   15598:	movt	fp, #2
   1559c:	bl	129d0 <__assert_fail@plt+0xef0>
   155a0:	ldr	r4, [sl]
   155a4:	mov	r3, #0
   155a8:	str	r3, [fp]
   155ac:	cmp	r4, r3
   155b0:	beq	1565c <__assert_fail@plt+0x3b7c>
   155b4:	ldr	r3, [r4, #452]	; 0x1c4
   155b8:	cmp	r3, #0
   155bc:	bne	15728 <__assert_fail@plt+0x3c48>
   155c0:	ldrsh	r3, [r4, #4]
   155c4:	sub	r3, r3, #1
   155c8:	cmp	r3, #8
   155cc:	ldrls	pc, [pc, r3, lsl #2]
   155d0:	b	15638 <__assert_fail@plt+0x3b58>
   155d4:	andeq	r5, r1, r4, lsl r7
   155d8:	andeq	r5, r1, r4, lsl r7
   155dc:	andeq	r5, r1, r4, lsl r7
   155e0:	andeq	r5, r1, r0, lsr r6
   155e4:	strdeq	r5, [r1], -r8
   155e8:	andeq	r5, r1, r8, lsr r6
   155ec:	andeq	r5, r1, r0, lsr r6
   155f0:	andeq	r5, r1, r0, lsr r6
   155f4:	andeq	r5, r1, r4, lsl r7
   155f8:	ldr	r3, [r4, #40]	; 0x28
   155fc:	cmp	r3, #0
   15600:	movgt	r5, #0
   15604:	ble	15624 <__assert_fail@plt+0x3b44>
   15608:	ldr	r3, [r4, #44]	; 0x2c
   1560c:	ldr	r0, [r3, r5, lsl #2]
   15610:	add	r5, r5, #1
   15614:	bl	1afbc <argp_parse@@Base+0x11cc>
   15618:	ldr	r3, [r4, #40]	; 0x28
   1561c:	cmp	r3, r5
   15620:	bgt	15608 <__assert_fail@plt+0x3b28>
   15624:	ldr	r0, [r4, #44]	; 0x2c
   15628:	bl	1afbc <argp_parse@@Base+0x11cc>
   1562c:	b	15638 <__assert_fail@plt+0x3b58>
   15630:	ldr	r0, [r4, #40]	; 0x28
   15634:	bl	1afbc <argp_parse@@Base+0x11cc>
   15638:	ldr	r0, [r4, #436]	; 0x1b4
   1563c:	bl	1afbc <argp_parse@@Base+0x11cc>
   15640:	ldr	r0, [r4, #432]	; 0x1b0
   15644:	bl	1afbc <argp_parse@@Base+0x11cc>
   15648:	ldr	r5, [r4]
   1564c:	mov	r0, r4
   15650:	bl	1afbc <argp_parse@@Base+0x11cc>
   15654:	subs	r4, r5, #0
   15658:	bne	155b4 <__assert_fail@plt+0x3ad4>
   1565c:	mov	r8, #0
   15660:	movw	r3, #64068	; 0xfa44
   15664:	movt	r3, #2
   15668:	movw	r7, #61868	; 0xf1ac
   1566c:	movt	r7, #2
   15670:	str	r8, [sl]
   15674:	ldr	r0, [r7, #16]
   15678:	str	r8, [r3]
   1567c:	bl	151a8 <__assert_fail@plt+0x36c8>
   15680:	ldr	r5, [r7, #20]
   15684:	str	r0, [sp, #8]
   15688:	mov	r0, r5
   1568c:	bl	11840 <opendir@plt>
   15690:	subs	r6, r0, #0
   15694:	beq	15974 <__assert_fail@plt+0x3e94>
   15698:	movw	r4, #55284	; 0xd7f4
   1569c:	movt	r4, #1
   156a0:	str	r8, [sp, #4]
   156a4:	movw	r3, #55344	; 0xd830
   156a8:	movt	r3, #1
   156ac:	str	r3, [sp, #12]
   156b0:	mov	r0, r6
   156b4:	bl	11a14 <readdir64@plt>
   156b8:	subs	r3, r0, #0
   156bc:	mov	r2, r5
   156c0:	mov	r1, r4
   156c4:	add	r0, sp, #20
   156c8:	add	r3, r3, #19
   156cc:	beq	1576c <__assert_fail@plt+0x3c8c>
   156d0:	bl	1196c <asprintf@plt>
   156d4:	cmp	r0, #0
   156d8:	add	r2, sp, #24
   156dc:	mov	r0, #3
   156e0:	blt	1595c <__assert_fail@plt+0x3e7c>
   156e4:	ldr	r1, [sp, #20]
   156e8:	bl	11a8c <__xstat64@plt>
   156ec:	cmp	r0, #0
   156f0:	bne	15740 <__assert_fail@plt+0x3c60>
   156f4:	ldr	r2, [sp, #20]
   156f8:	ldr	r3, [sp, #40]	; 0x28
   156fc:	and	r3, r3, #61440	; 0xf000
   15700:	cmp	r3, #32768	; 0x8000
   15704:	beq	1574c <__assert_fail@plt+0x3c6c>
   15708:	mov	r0, r2
   1570c:	bl	1afbc <argp_parse@@Base+0x11cc>
   15710:	b	156b0 <__assert_fail@plt+0x3bd0>
   15714:	ldr	r0, [r4, #40]	; 0x28
   15718:	bl	1afbc <argp_parse@@Base+0x11cc>
   1571c:	ldrsh	r0, [r4, #6]
   15720:	bl	11ac8 <close@plt>
   15724:	b	15638 <__assert_fail@plt+0x3b58>
   15728:	mov	r3, #0
   1572c:	mov	r0, r4
   15730:	ldr	r1, [r9]
   15734:	mov	r2, r3
   15738:	bl	13748 <__assert_fail@plt+0x1c68>
   1573c:	b	155c0 <__assert_fail@plt+0x3ae0>
   15740:	ldr	r0, [sp, #12]
   15744:	bl	129d0 <__assert_fail@plt+0xef0>
   15748:	b	156b0 <__assert_fail@plt+0x3bd0>
   1574c:	mov	r0, r2
   15750:	add	r8, r8, #1
   15754:	bl	151a8 <__assert_fail@plt+0x36c8>
   15758:	ldr	r3, [sp, #4]
   1575c:	ldr	r2, [sp, #20]
   15760:	add	r3, r3, r0
   15764:	str	r3, [sp, #4]
   15768:	b	15708 <__assert_fail@plt+0x3c28>
   1576c:	mov	r0, r6
   15770:	bl	11ad4 <closedir@plt>
   15774:	ldr	r3, [sp, #4]
   15778:	cmp	r8, #0
   1577c:	clz	r3, r3
   15780:	lsr	r3, r3, #5
   15784:	moveq	r3, #0
   15788:	cmp	r3, #0
   1578c:	ldr	r3, [sp, #8]
   15790:	movne	r3, #0
   15794:	str	r3, [sp, #8]
   15798:	movw	r3, #64548	; 0xfc24
   1579c:	movt	r3, #2
   157a0:	ldr	r3, [r3]
   157a4:	mov	r2, #1
   157a8:	str	r2, [fp]
   157ac:	cmp	r3, #0
   157b0:	beq	15884 <__assert_fail@plt+0x3da4>
   157b4:	ldr	r8, [sl]
   157b8:	cmp	r8, #0
   157bc:	beq	15884 <__assert_fail@plt+0x3da4>
   157c0:	movw	r5, #55388	; 0xd85c
   157c4:	movt	r5, #1
   157c8:	movw	r6, #55384	; 0xd858
   157cc:	movt	r6, #1
   157d0:	movw	sl, #55396	; 0xd864
   157d4:	movt	sl, #1
   157d8:	add	r4, r8, #11
   157dc:	add	fp, r8, #36	; 0x24
   157e0:	b	157f4 <__assert_fail@plt+0x3d14>
   157e4:	mov	r0, r6
   157e8:	bl	129d0 <__assert_fail@plt+0xef0>
   157ec:	cmp	fp, r4
   157f0:	beq	15810 <__assert_fail@plt+0x3d30>
   157f4:	ldrb	r3, [r4, #1]!
   157f8:	mov	r0, r5
   157fc:	subs	r1, r3, #0
   15800:	beq	157e4 <__assert_fail@plt+0x3d04>
   15804:	bl	129d0 <__assert_fail@plt+0xef0>
   15808:	cmp	fp, r4
   1580c:	bne	157f4 <__assert_fail@plt+0x3d14>
   15810:	ldrsh	r3, [r8, #4]
   15814:	mov	r0, sl
   15818:	add	r3, r7, r3, lsl #2
   1581c:	ldr	r1, [r3, #320]	; 0x140
   15820:	bl	129d0 <__assert_fail@plt+0xef0>
   15824:	ldrsh	r3, [r8, #4]
   15828:	sub	r3, r3, #1
   1582c:	cmp	r3, #8
   15830:	ldrls	pc, [pc, r3, lsl #2]
   15834:	b	1586c <__assert_fail@plt+0x3d8c>
   15838:	andeq	r5, r1, ip, asr r8
   1583c:	andeq	r5, r1, ip, asr r8
   15840:	andeq	r5, r1, ip, asr r8
   15844:	andeq	r5, r1, ip, asr r8
   15848:	andeq	r5, r1, r4, ror #17
   1584c:	andeq	r5, r1, ip, ror #16
   15850:	andeq	r5, r1, ip, asr r8
   15854:	andeq	r5, r1, ip, asr r8
   15858:	andeq	r5, r1, ip, asr r8
   1585c:	movw	r0, #58160	; 0xe330
   15860:	movt	r0, #1
   15864:	ldr	r1, [r8, #40]	; 0x28
   15868:	bl	129d0 <__assert_fail@plt+0xef0>
   1586c:	movw	r0, #54272	; 0xd400
   15870:	movt	r0, #1
   15874:	bl	129d0 <__assert_fail@plt+0xef0>
   15878:	ldr	r8, [r8]
   1587c:	cmp	r8, #0
   15880:	bne	157d8 <__assert_fail@plt+0x3cf8>
   15884:	movw	r3, #64064	; 0xfa40
   15888:	movt	r3, #2
   1588c:	ldr	r2, [r9]
   15890:	ldr	r3, [r3]
   15894:	cmp	r3, #0
   15898:	beq	15920 <__assert_fail@plt+0x3e40>
   1589c:	mov	r3, #4
   158a0:	movw	r1, #55412	; 0xd874
   158a4:	movt	r1, #1
   158a8:	mov	r0, #46	; 0x2e
   158ac:	bl	13ebc <__assert_fail@plt+0x23dc>
   158b0:	ldr	r3, [sp, #8]
   158b4:	cmp	r3, #0
   158b8:	beq	15940 <__assert_fail@plt+0x3e60>
   158bc:	movw	r0, #55564	; 0xd90c
   158c0:	movt	r0, #1
   158c4:	bl	129d0 <__assert_fail@plt+0xef0>
   158c8:	add	sp, sp, #132	; 0x84
   158cc:	ldrd	r4, [sp]
   158d0:	ldrd	r6, [sp, #8]
   158d4:	ldrd	r8, [sp, #16]
   158d8:	ldrd	sl, [sp, #24]
   158dc:	add	sp, sp, #32
   158e0:	pop	{pc}		; (ldr pc, [sp], #4)
   158e4:	ldr	r3, [r8, #40]	; 0x28
   158e8:	cmp	r3, #0
   158ec:	movwgt	fp, #55404	; 0xd86c
   158f0:	movgt	r4, #0
   158f4:	movtgt	fp, #1
   158f8:	ble	1586c <__assert_fail@plt+0x3d8c>
   158fc:	ldr	r3, [r8, #44]	; 0x2c
   15900:	mov	r0, fp
   15904:	ldr	r1, [r3, r4, lsl #2]
   15908:	add	r4, r4, #1
   1590c:	bl	129d0 <__assert_fail@plt+0xef0>
   15910:	ldr	r3, [r8, #40]	; 0x28
   15914:	cmp	r3, r4
   15918:	bgt	158fc <__assert_fail@plt+0x3e1c>
   1591c:	b	1586c <__assert_fail@plt+0x3d8c>
   15920:	mov	r3, #4
   15924:	movw	r1, #55480	; 0xd8b8
   15928:	movt	r1, #1
   1592c:	mov	r0, #46	; 0x2e
   15930:	bl	13ebc <__assert_fail@plt+0x23dc>
   15934:	ldr	r3, [sp, #8]
   15938:	cmp	r3, #0
   1593c:	bne	158bc <__assert_fail@plt+0x3ddc>
   15940:	movw	r1, #55528	; 0xd8e8
   15944:	movt	r1, #1
   15948:	ldr	r2, [r9]
   1594c:	mov	r3, #4
   15950:	mov	r0, #43	; 0x2b
   15954:	bl	13ebc <__assert_fail@plt+0x23dc>
   15958:	b	158bc <__assert_fail@plt+0x3ddc>
   1595c:	movw	r0, #55292	; 0xd7fc
   15960:	movt	r0, #1
   15964:	bl	129d0 <__assert_fail@plt+0xef0>
   15968:	mov	r3, #0
   1596c:	str	r3, [sp, #8]
   15970:	b	15798 <__assert_fail@plt+0x3cb8>
   15974:	mov	r1, r5
   15978:	movw	r0, #55136	; 0xd760
   1597c:	movt	r0, #1
   15980:	bl	129d0 <__assert_fail@plt+0xef0>
   15984:	b	15798 <__assert_fail@plt+0x3cb8>
   15988:	movw	r3, #55584	; 0xd920
   1598c:	movt	r3, #1
   15990:	strd	r4, [sp, #-16]!
   15994:	movw	r4, #62924	; 0xf5cc
   15998:	movt	r4, #2
   1599c:	str	r6, [sp, #8]
   159a0:	str	lr, [sp, #12]
   159a4:	sub	sp, sp, #40	; 0x28
   159a8:	mov	ip, #0
   159ac:	str	r3, [r4, #44]	; 0x2c
   159b0:	mov	r3, #2
   159b4:	mov	lr, #1
   159b8:	movw	r5, #55588	; 0xd924
   159bc:	movt	r5, #1
   159c0:	mov	r1, r5
   159c4:	mov	r6, r0
   159c8:	str	lr, [sp, #8]
   159cc:	add	r2, sp, #8
   159d0:	mov	r0, ip
   159d4:	str	r3, [sp, #16]
   159d8:	add	r3, sp, #4
   159dc:	str	ip, [sp, #12]
   159e0:	str	ip, [sp, #20]
   159e4:	str	ip, [sp, #24]
   159e8:	str	ip, [sp, #28]
   159ec:	str	ip, [sp, #32]
   159f0:	str	ip, [sp, #36]	; 0x24
   159f4:	bl	11a68 <getaddrinfo@plt>
   159f8:	cmp	r0, #0
   159fc:	beq	15a78 <__assert_fail@plt+0x3f98>
   15a00:	cmp	r6, #0
   15a04:	str	r6, [r4, #48]	; 0x30
   15a08:	beq	15a90 <__assert_fail@plt+0x3fb0>
   15a0c:	mov	r0, #1
   15a10:	mov	r5, #0
   15a14:	mov	ip, #2
   15a18:	add	r3, sp, #4
   15a1c:	add	r2, sp, #8
   15a20:	mov	r1, r6
   15a24:	str	r0, [sp, #8]
   15a28:	mov	r0, r5
   15a2c:	str	r5, [sp, #12]
   15a30:	str	ip, [sp, #16]
   15a34:	str	r5, [sp, #20]
   15a38:	str	r5, [sp, #24]
   15a3c:	str	r5, [sp, #28]
   15a40:	str	r5, [sp, #32]
   15a44:	str	r5, [sp, #36]	; 0x24
   15a48:	bl	11a68 <getaddrinfo@plt>
   15a4c:	cmp	r0, r5
   15a50:	strne	r5, [r4, #48]	; 0x30
   15a54:	beq	15a6c <__assert_fail@plt+0x3f8c>
   15a58:	add	sp, sp, #40	; 0x28
   15a5c:	ldrd	r4, [sp]
   15a60:	ldr	r6, [sp, #8]
   15a64:	add	sp, sp, #12
   15a68:	pop	{pc}		; (ldr pc, [sp], #4)
   15a6c:	ldr	r0, [sp, #4]
   15a70:	bl	11a5c <freeaddrinfo@plt>
   15a74:	b	15a58 <__assert_fail@plt+0x3f78>
   15a78:	ldr	r0, [sp, #4]
   15a7c:	str	r5, [r4, #44]	; 0x2c
   15a80:	bl	11a5c <freeaddrinfo@plt>
   15a84:	cmp	r6, #0
   15a88:	str	r6, [r4, #48]	; 0x30
   15a8c:	bne	15a0c <__assert_fail@plt+0x3f2c>
   15a90:	ldr	r3, [r4, #44]	; 0x2c
   15a94:	str	r3, [r4, #48]	; 0x30
   15a98:	b	15a58 <__assert_fail@plt+0x3f78>
   15a9c:	mov	r0, #0
   15aa0:	str	r4, [sp, #-8]!
   15aa4:	str	lr, [sp, #4]
   15aa8:	bl	1178c <alarm@plt>
   15aac:	mov	r4, r0
   15ab0:	mov	r1, #0
   15ab4:	mov	r0, #14
   15ab8:	bl	11720 <signal@plt>
   15abc:	cmp	r4, #0
   15ac0:	beq	15ad0 <__assert_fail@plt+0x3ff0>
   15ac4:	ldr	r4, [sp]
   15ac8:	add	sp, sp, #4
   15acc:	pop	{pc}		; (ldr pc, [sp], #4)
   15ad0:	mov	r1, r4
   15ad4:	movw	r2, #57984	; 0xe280
   15ad8:	movt	r2, #1
   15adc:	mov	r0, #1
   15ae0:	ldr	r4, [sp]
   15ae4:	ldr	lr, [sp, #4]
   15ae8:	add	sp, sp, #8
   15aec:	b	11828 <error@plt>
   15af0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15af4:	mov	r5, r1
   15af8:	strd	r6, [sp, #8]
   15afc:	mov	r7, r2
   15b00:	str	r8, [sp, #16]
   15b04:	mov	r8, r0
   15b08:	str	lr, [sp, #20]
   15b0c:	bl	118d0 <getpid@plt>
   15b10:	mov	r6, r0
   15b14:	bl	119d8 <fork@plt>
   15b18:	cmn	r0, #1
   15b1c:	beq	15b4c <__assert_fail@plt+0x406c>
   15b20:	cmp	r0, #0
   15b24:	beq	15b68 <__assert_fail@plt+0x4088>
   15b28:	cmp	r7, #0
   15b2c:	bgt	15c28 <__assert_fail@plt+0x4148>
   15b30:	mov	r0, #0
   15b34:	bl	11708 <_exit@plt>
   15b38:	movw	r0, #58132	; 0xe314
   15b3c:	movt	r0, #1
   15b40:	bl	117c8 <chdir@plt>
   15b44:	cmp	r0, #0
   15b48:	bge	15b9c <__assert_fail@plt+0x40bc>
   15b4c:	mvn	r6, #0
   15b50:	mov	r0, r6
   15b54:	ldrd	r4, [sp]
   15b58:	ldrd	r6, [sp, #8]
   15b5c:	ldr	r8, [sp, #16]
   15b60:	add	sp, sp, #20
   15b64:	pop	{pc}		; (ldr pc, [sp], #4)
   15b68:	bl	118f4 <setsid@plt>
   15b6c:	cmn	r0, #1
   15b70:	beq	15b4c <__assert_fail@plt+0x406c>
   15b74:	mov	r1, #1
   15b78:	mov	r0, r1
   15b7c:	bl	11720 <signal@plt>
   15b80:	bl	119d8 <fork@plt>
   15b84:	cmn	r0, #1
   15b88:	beq	15b4c <__assert_fail@plt+0x406c>
   15b8c:	cmp	r0, #0
   15b90:	bne	15b30 <__assert_fail@plt+0x4050>
   15b94:	cmp	r8, #0
   15b98:	beq	15b38 <__assert_fail@plt+0x4058>
   15b9c:	cmp	r5, #0
   15ba0:	bne	15b50 <__assert_fail@plt+0x4070>
   15ba4:	mov	r0, #4
   15ba8:	bl	11798 <sysconf@plt>
   15bac:	cmn	r0, #1
   15bb0:	mov	r4, r0
   15bb4:	beq	15c4c <__assert_fail@plt+0x416c>
   15bb8:	cmp	r0, #0
   15bbc:	ble	15bd4 <__assert_fail@plt+0x40f4>
   15bc0:	mov	r0, r5
   15bc4:	add	r5, r5, #1
   15bc8:	bl	11ac8 <close@plt>
   15bcc:	cmp	r4, r5
   15bd0:	bgt	15bc0 <__assert_fail@plt+0x40e0>
   15bd4:	movw	r0, #58012	; 0xe29c
   15bd8:	movt	r0, #1
   15bdc:	mov	r2, #0
   15be0:	mov	r1, #2
   15be4:	bl	1184c <open64@plt>
   15be8:	cmn	r0, #1
   15bec:	mov	r4, r0
   15bf0:	beq	15b50 <__assert_fail@plt+0x4070>
   15bf4:	mov	r1, #0
   15bf8:	bl	117b0 <dup2@plt>
   15bfc:	mov	r1, #1
   15c00:	mov	r0, r4
   15c04:	bl	117b0 <dup2@plt>
   15c08:	mov	r1, #2
   15c0c:	mov	r0, r4
   15c10:	bl	117b0 <dup2@plt>
   15c14:	cmp	r4, #2
   15c18:	ble	15b50 <__assert_fail@plt+0x4070>
   15c1c:	mov	r0, r4
   15c20:	bl	11ac8 <close@plt>
   15c24:	b	15b50 <__assert_fail@plt+0x4070>
   15c28:	movw	r1, #23196	; 0x5a9c
   15c2c:	movt	r1, #1
   15c30:	mov	r0, #14
   15c34:	bl	11720 <signal@plt>
   15c38:	mov	r0, r7
   15c3c:	bl	1178c <alarm@plt>
   15c40:	bl	11678 <pause@plt>
   15c44:	mov	r0, #0
   15c48:	bl	11708 <_exit@plt>
   15c4c:	mov	r4, #64	; 0x40
   15c50:	b	15bc0 <__assert_fail@plt+0x40e0>

00015c54 <daemon@@Base>:
   15c54:	mov	r2, #0
   15c58:	str	r4, [sp, #-8]!
   15c5c:	str	lr, [sp, #4]
   15c60:	bl	15af0 <__assert_fail@plt+0x4010>
   15c64:	cmn	r0, #1
   15c68:	ldr	r4, [sp]
   15c6c:	add	sp, sp, #4
   15c70:	movne	r0, #0
   15c74:	moveq	r0, #1
   15c78:	rsb	r0, r0, #0
   15c7c:	pop	{pc}		; (ldr pc, [sp], #4)
   15c80:	strd	r4, [sp, #-28]!	; 0xffffffe4
   15c84:	mov	r4, #0
   15c88:	strd	r6, [sp, #8]
   15c8c:	mov	r6, r4
   15c90:	strd	r8, [sp, #16]
   15c94:	mov	r9, r4
   15c98:	str	lr, [sp, #24]
   15c9c:	sub	sp, sp, #1072	; 0x430
   15ca0:	sub	sp, sp, #12
   15ca4:	bl	11918 <__errno_location@plt>
   15ca8:	mov	r7, r0
   15cac:	add	r4, r4, #256	; 0x100
   15cb0:	mov	r0, r6
   15cb4:	str	r9, [r7]
   15cb8:	mov	r1, r4
   15cbc:	bl	1bd38 <argp_parse@@Base+0x1f48>
   15cc0:	subs	r5, r0, #0
   15cc4:	mov	r1, r4
   15cc8:	beq	15d8c <daemon@@Base+0x138>
   15ccc:	bl	11834 <gethostname@plt>
   15cd0:	subs	r8, r0, #0
   15cd4:	mov	r2, r4
   15cd8:	mov	r6, r5
   15cdc:	mov	r0, r5
   15ce0:	mov	r1, r8
   15ce4:	bne	15cf4 <daemon@@Base+0xa0>
   15ce8:	bl	11978 <memchr@plt>
   15cec:	cmp	r0, #0
   15cf0:	beq	15cac <daemon@@Base+0x58>
   15cf4:	ldr	r3, [r7]
   15cf8:	cmp	r3, #36	; 0x24
   15cfc:	beq	15cac <daemon@@Base+0x58>
   15d00:	adds	r3, r3, #0
   15d04:	movne	r3, #1
   15d08:	cmp	r8, #0
   15d0c:	movne	r1, r3
   15d10:	moveq	r1, #0
   15d14:	cmp	r1, #0
   15d18:	bne	15dbc <daemon@@Base+0x168>
   15d1c:	mov	r6, #0
   15d20:	mov	r7, #0
   15d24:	mov	r0, #2
   15d28:	add	r2, sp, #20
   15d2c:	add	r3, sp, #16
   15d30:	strd	r6, [sp, #20]
   15d34:	str	r0, [sp, #24]
   15d38:	mov	r0, r5
   15d3c:	strd	r6, [sp, #28]
   15d40:	strd	r6, [sp, #36]	; 0x24
   15d44:	strd	r6, [sp, #44]	; 0x2c
   15d48:	bl	11a68 <getaddrinfo@plt>
   15d4c:	subs	ip, r0, #0
   15d50:	bne	15d9c <daemon@@Base+0x148>
   15d54:	ldr	r0, [sp, #16]
   15d58:	mov	lr, #8
   15d5c:	add	r2, sp, #52	; 0x34
   15d60:	movw	r3, #1025	; 0x401
   15d64:	ldr	r1, [r0, #16]
   15d68:	ldr	r0, [r0, #20]
   15d6c:	str	ip, [sp]
   15d70:	stmib	sp, {ip, lr}
   15d74:	bl	119e4 <getnameinfo@plt>
   15d78:	cmp	r0, #0
   15d7c:	beq	15dcc <daemon@@Base+0x178>
   15d80:	ldr	r0, [sp, #16]
   15d84:	bl	11a5c <freeaddrinfo@plt>
   15d88:	b	15d9c <daemon@@Base+0x148>
   15d8c:	mov	r3, #12
   15d90:	mov	r0, r6
   15d94:	str	r3, [r7]
   15d98:	bl	1afbc <argp_parse@@Base+0x11cc>
   15d9c:	mov	r0, r5
   15da0:	add	sp, sp, #1072	; 0x430
   15da4:	add	sp, sp, #12
   15da8:	ldrd	r4, [sp]
   15dac:	ldrd	r6, [sp, #8]
   15db0:	ldrd	r8, [sp, #16]
   15db4:	add	sp, sp, #24
   15db8:	pop	{pc}		; (ldr pc, [sp], #4)
   15dbc:	mov	r0, r5
   15dc0:	mov	r5, #0
   15dc4:	bl	1afbc <argp_parse@@Base+0x11cc>
   15dc8:	b	15d9c <daemon@@Base+0x148>
   15dcc:	mov	r0, r5
   15dd0:	bl	1afbc <argp_parse@@Base+0x11cc>
   15dd4:	add	r0, sp, #52	; 0x34
   15dd8:	bl	11774 <strdup@plt>
   15ddc:	mov	r5, r0
   15de0:	b	15d80 <daemon@@Base+0x12c>
   15de4:	cmp	r1, #6
   15de8:	ble	15df8 <daemon@@Base+0x1a4>
   15dec:	movw	r0, #58040	; 0xe2b8
   15df0:	movt	r0, #1
   15df4:	bx	lr
   15df8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15dfc:	strd	r6, [sp, #8]
   15e00:	mov	r7, r0
   15e04:	mov	r0, r2
   15e08:	strd	r8, [sp, #16]
   15e0c:	mov	r6, r1
   15e10:	mov	r9, r2
   15e14:	strd	sl, [sp, #24]
   15e18:	mov	r8, r3
   15e1c:	str	lr, [sp, #32]
   15e20:	sub	sp, sp, #196	; 0xc4
   15e24:	bl	118e8 <strlen@plt>
   15e28:	add	r0, r0, #6
   15e2c:	bl	1bcfc <argp_parse@@Base+0x1f0c>
   15e30:	subs	r4, r0, #0
   15e34:	beq	160ec <daemon@@Base+0x498>
   15e38:	movw	r3, #58128	; 0xe310
   15e3c:	movt	r3, #1
   15e40:	ldr	r2, [r3]
   15e44:	mov	r1, r9
   15e48:	add	r0, r4, #5
   15e4c:	ldrb	r3, [r3, #4]
   15e50:	str	r2, [r4]
   15e54:	strb	r3, [r4, #4]
   15e58:	bl	11750 <stpcpy@plt>
   15e5c:	subs	r0, r0, r4
   15e60:	beq	15f10 <daemon@@Base+0x2bc>
   15e64:	sub	r0, r0, #1
   15e68:	mov	r1, #46	; 0x2e
   15e6c:	ldrb	r3, [r4, r0]
   15e70:	cmp	r3, #47	; 0x2f
   15e74:	moveq	r3, #0
   15e78:	strbeq	r3, [r4, r0]
   15e7c:	mov	r0, r4
   15e80:	bl	11900 <strchr@plt>
   15e84:	subs	r3, r0, #0
   15e88:	bne	15ea4 <daemon@@Base+0x250>
   15e8c:	b	15f04 <daemon@@Base+0x2b0>
   15e90:	add	r0, r3, #1
   15e94:	mov	r1, #46	; 0x2e
   15e98:	bl	11900 <strchr@plt>
   15e9c:	subs	r3, r0, #0
   15ea0:	beq	15f04 <daemon@@Base+0x2b0>
   15ea4:	cmp	r4, r3
   15ea8:	bcs	15e90 <daemon@@Base+0x23c>
   15eac:	ldrb	r2, [r3, #-1]
   15eb0:	cmp	r2, #47	; 0x2f
   15eb4:	bne	15e90 <daemon@@Base+0x23c>
   15eb8:	ldrb	r2, [r3, #1]
   15ebc:	cmp	r2, #46	; 0x2e
   15ec0:	bne	15e90 <daemon@@Base+0x23c>
   15ec4:	ldrb	r1, [r3, #2]
   15ec8:	cmp	r1, #47	; 0x2f
   15ecc:	cmpne	r1, #0
   15ed0:	bne	15e90 <daemon@@Base+0x23c>
   15ed4:	ldrb	ip, [r3, #-2]
   15ed8:	sub	r0, r3, #2
   15edc:	b	15ee4 <daemon@@Base+0x290>
   15ee0:	ldrb	ip, [r0, #-1]!
   15ee4:	subs	r2, ip, #47	; 0x2f
   15ee8:	movne	r2, #1
   15eec:	cmp	r4, r0
   15ef0:	movhi	r2, #0
   15ef4:	cmp	r2, #0
   15ef8:	bne	15ee0 <daemon@@Base+0x28c>
   15efc:	cmp	r4, r0
   15f00:	bls	16224 <daemon@@Base+0x5d0>
   15f04:	ldrb	r3, [r4]
   15f08:	cmp	r3, #0
   15f0c:	beq	16074 <daemon@@Base+0x420>
   15f10:	movw	r1, #58128	; 0xe310
   15f14:	movt	r1, #1
   15f18:	mov	r2, #5
   15f1c:	mov	r0, r4
   15f20:	bl	11aa4 <strncmp@plt>
   15f24:	subs	r5, r0, #0
   15f28:	bne	16084 <daemon@@Base+0x430>
   15f2c:	mov	r2, r5
   15f30:	movw	r1, #2049	; 0x801
   15f34:	mov	r0, r4
   15f38:	bl	1184c <open64@plt>
   15f3c:	subs	r9, r0, #0
   15f40:	blt	16010 <daemon@@Base+0x3bc>
   15f44:	cmp	r6, #0
   15f48:	movle	fp, r5
   15f4c:	ble	15f70 <daemon@@Base+0x31c>
   15f50:	add	r0, r7, r6, lsl #3
   15f54:	mov	r2, r7
   15f58:	mov	fp, r5
   15f5c:	ldr	r1, [r2, #4]
   15f60:	add	r2, r2, #8
   15f64:	cmp	r0, r2
   15f68:	add	fp, fp, r1
   15f6c:	bne	15f5c <daemon@@Base+0x308>
   15f70:	mov	r2, r6
   15f74:	mov	r1, r7
   15f78:	mov	r0, r9
   15f7c:	bl	11984 <writev@plt>
   15f80:	cmp	fp, r0
   15f84:	mov	sl, r0
   15f88:	ble	16244 <daemon@@Base+0x5f0>
   15f8c:	cmp	r0, #0
   15f90:	bge	161a0 <daemon@@Base+0x54c>
   15f94:	bl	11918 <__errno_location@plt>
   15f98:	ldr	r2, [r0]
   15f9c:	mov	sl, r0
   15fa0:	cmp	r2, #11
   15fa4:	bne	16264 <daemon@@Base+0x610>
   15fa8:	mov	r3, #0
   15fac:	cmp	r5, #0
   15fb0:	str	r3, [sp, #12]
   15fb4:	bne	1628c <daemon@@Base+0x638>
   15fb8:	bl	119d8 <fork@plt>
   15fbc:	cmp	r0, #0
   15fc0:	beq	16134 <daemon@@Base+0x4e0>
   15fc4:	blt	160ac <daemon@@Base+0x458>
   15fc8:	mov	r2, r5
   15fcc:	add	r1, sp, #64	; 0x40
   15fd0:	bl	11810 <waitpid@plt>
   15fd4:	cmp	r0, #0
   15fd8:	blt	160ac <daemon@@Base+0x458>
   15fdc:	ldr	r0, [sp, #64]	; 0x40
   15fe0:	tst	r0, #127	; 0x7f
   15fe4:	bne	16214 <daemon@@Base+0x5c0>
   15fe8:	ubfx	r0, r0, #8, #8
   15fec:	cmp	r0, #0
   15ff0:	strne	r0, [sl]
   15ff4:	bne	160b0 <daemon@@Base+0x45c>
   15ff8:	mov	r0, r9
   15ffc:	bl	11ac8 <close@plt>
   16000:	mov	r0, r4
   16004:	bl	1afbc <argp_parse@@Base+0x11cc>
   16008:	mov	r0, r5
   1600c:	b	16058 <daemon@@Base+0x404>
   16010:	bl	11918 <__errno_location@plt>
   16014:	ldr	r0, [r0]
   16018:	cmp	r0, #13
   1601c:	cmpne	r0, #16
   16020:	beq	1620c <daemon@@Base+0x5b8>
   16024:	bl	11888 <strerror@plt>
   16028:	mov	r3, r4
   1602c:	mov	r1, #1024	; 0x400
   16030:	str	r0, [sp]
   16034:	movw	r2, #58156	; 0xe32c
   16038:	movt	r2, #1
   1603c:	movw	r0, #62976	; 0xf600
   16040:	movt	r0, #2
   16044:	bl	11924 <snprintf@plt>
   16048:	mov	r0, r4
   1604c:	bl	1afbc <argp_parse@@Base+0x11cc>
   16050:	movw	r0, #62976	; 0xf600
   16054:	movt	r0, #2
   16058:	add	sp, sp, #196	; 0xc4
   1605c:	ldrd	r4, [sp]
   16060:	ldrd	r6, [sp, #8]
   16064:	ldrd	r8, [sp, #16]
   16068:	ldrd	sl, [sp, #24]
   1606c:	add	sp, sp, #32
   16070:	pop	{pc}		; (ldr pc, [sp], #4)
   16074:	mov	r2, #47	; 0x2f
   16078:	strb	r2, [r4]
   1607c:	strb	r3, [r4, #1]
   16080:	b	15f10 <daemon@@Base+0x2bc>
   16084:	mov	r3, r9
   16088:	movw	r2, #58136	; 0xe318
   1608c:	movt	r2, #1
   16090:	movw	r0, #62976	; 0xf600
   16094:	movt	r0, #2
   16098:	mov	r1, #1024	; 0x400
   1609c:	bl	11924 <snprintf@plt>
   160a0:	movw	r0, #62976	; 0xf600
   160a4:	movt	r0, #2
   160a8:	b	16058 <daemon@@Base+0x404>
   160ac:	ldr	r0, [sl]
   160b0:	bl	11888 <strerror@plt>
   160b4:	mov	r3, r0
   160b8:	mov	r1, #1024	; 0x400
   160bc:	movw	r2, #58164	; 0xe334
   160c0:	movt	r2, #1
   160c4:	movw	r0, #62976	; 0xf600
   160c8:	movt	r0, #2
   160cc:	bl	11924 <snprintf@plt>
   160d0:	mov	r0, r9
   160d4:	bl	11ac8 <close@plt>
   160d8:	mov	r0, r4
   160dc:	bl	1afbc <argp_parse@@Base+0x11cc>
   160e0:	movw	r0, #62976	; 0xf600
   160e4:	movt	r0, #2
   160e8:	b	16058 <daemon@@Base+0x404>
   160ec:	movw	ip, #58088	; 0xe2e8
   160f0:	movt	ip, #1
   160f4:	ldrd	r4, [ip]
   160f8:	movw	r1, #62976	; 0xf600
   160fc:	movt	r1, #2
   16100:	mov	r0, r1
   16104:	ldrd	r2, [ip, #8]
   16108:	ldrh	lr, [ip, #36]	; 0x24
   1610c:	strd	r4, [r1]
   16110:	ldrd	r6, [ip, #16]
   16114:	strd	r2, [r1, #8]
   16118:	ldrd	r4, [ip, #24]
   1611c:	ldr	r3, [ip, #32]
   16120:	strd	r6, [r1, #16]
   16124:	strh	lr, [r1, #36]	; 0x24
   16128:	strd	r4, [r1, #24]
   1612c:	str	r3, [r1, #32]
   16130:	b	16058 <daemon@@Base+0x404>
   16134:	bl	119d8 <fork@plt>
   16138:	cmn	r0, #1
   1613c:	beq	1629c <daemon@@Base+0x648>
   16140:	cmp	r0, #0
   16144:	beq	16150 <daemon@@Base+0x4fc>
   16148:	mov	r0, r5
   1614c:	bl	11708 <_exit@plt>
   16150:	mov	r1, r5
   16154:	mov	r0, #14
   16158:	bl	11720 <signal@plt>
   1615c:	mov	r1, r5
   16160:	mov	r0, #15
   16164:	bl	11720 <signal@plt>
   16168:	add	r0, sp, #64	; 0x40
   1616c:	bl	119cc <sigemptyset@plt>
   16170:	mov	r2, r5
   16174:	add	r1, sp, #64	; 0x40
   16178:	mov	r0, #2
   1617c:	mov	r5, #1
   16180:	bl	116b4 <sigprocmask@plt>
   16184:	mov	r0, r8
   16188:	bl	1178c <alarm@plt>
   1618c:	add	r2, sp, #12
   16190:	mov	r1, #2048	; 0x800
   16194:	mov	r0, r9
   16198:	bl	1add4 <argp_parse@@Base+0xfe4>
   1619c:	b	15f70 <daemon@@Base+0x31c>
   161a0:	add	r3, sp, #16
   161a4:	sub	fp, fp, r0
   161a8:	cmp	r7, r3
   161ac:	beq	161c4 <daemon@@Base+0x570>
   161b0:	mov	r0, r3
   161b4:	mov	r1, r7
   161b8:	lsl	r2, r6, #3
   161bc:	bl	11714 <memcpy@plt>
   161c0:	mov	r3, r0
   161c4:	ldr	r2, [sp, #20]
   161c8:	mov	r7, r3
   161cc:	cmp	sl, r2
   161d0:	blt	161ec <daemon@@Base+0x598>
   161d4:	add	r7, r7, #8
   161d8:	sub	sl, sl, r2
   161dc:	ldr	r2, [r7, #4]
   161e0:	sub	r6, r6, #1
   161e4:	cmp	r2, sl
   161e8:	ble	161d4 <daemon@@Base+0x580>
   161ec:	cmp	sl, #0
   161f0:	beq	15f70 <daemon@@Base+0x31c>
   161f4:	ldr	r1, [r7]
   161f8:	sub	r2, r2, sl
   161fc:	str	r2, [r7, #4]
   16200:	add	sl, r1, sl
   16204:	str	sl, [r7]
   16208:	b	15f70 <daemon@@Base+0x31c>
   1620c:	mov	r0, #0
   16210:	b	16058 <daemon@@Base+0x404>
   16214:	mov	r3, #4
   16218:	mov	r0, r3
   1621c:	str	r3, [sl]
   16220:	b	160b0 <daemon@@Base+0x45c>
   16224:	add	r3, r3, #2
   16228:	mov	r2, r0
   1622c:	b	16234 <daemon@@Base+0x5e0>
   16230:	ldrb	r1, [r3, #1]!
   16234:	cmp	r1, #0
   16238:	strb	r1, [r2], #1
   1623c:	bne	16230 <daemon@@Base+0x5dc>
   16240:	b	15e94 <daemon@@Base+0x240>
   16244:	mov	r0, r4
   16248:	bl	1afbc <argp_parse@@Base+0x11cc>
   1624c:	mov	r0, r9
   16250:	bl	11ac8 <close@plt>
   16254:	cmp	r5, #0
   16258:	beq	1620c <daemon@@Base+0x5b8>
   1625c:	mov	r0, #0
   16260:	bl	11708 <_exit@plt>
   16264:	cmp	r2, #5
   16268:	cmpne	r2, #19
   1626c:	beq	16244 <daemon@@Base+0x5f0>
   16270:	mov	r0, r9
   16274:	bl	11ac8 <close@plt>
   16278:	cmp	r5, #0
   1627c:	ldreq	r0, [sl]
   16280:	beq	16024 <daemon@@Base+0x3d0>
   16284:	mov	r0, #1
   16288:	bl	11708 <_exit@plt>
   1628c:	mov	r0, r9
   16290:	bl	11ac8 <close@plt>
   16294:	mov	r0, #1
   16298:	bl	11708 <_exit@plt>
   1629c:	ldr	r0, [sl]
   162a0:	bl	11708 <_exit@plt>
   162a4:	strd	r4, [sp, #-16]!
   162a8:	mov	r5, r0
   162ac:	ldr	r0, [r0, #12]
   162b0:	str	r6, [sp, #8]
   162b4:	str	lr, [sp, #12]
   162b8:	cmp	r0, #0
   162bc:	beq	162d0 <daemon@@Base+0x67c>
   162c0:	ldr	r4, [r0, #24]
   162c4:	bl	1afbc <argp_parse@@Base+0x11cc>
   162c8:	subs	r0, r4, #0
   162cc:	bne	162c0 <daemon@@Base+0x66c>
   162d0:	ldr	r3, [r5, #4]
   162d4:	cmp	r3, #0
   162d8:	bne	162f4 <daemon@@Base+0x6a0>
   162dc:	mov	r0, r5
   162e0:	ldrd	r4, [sp]
   162e4:	ldr	r6, [sp, #8]
   162e8:	ldr	lr, [sp, #12]
   162ec:	add	sp, sp, #16
   162f0:	b	1afbc <argp_parse@@Base+0x11cc>
   162f4:	ldr	r0, [r5]
   162f8:	bl	1afbc <argp_parse@@Base+0x11cc>
   162fc:	ldr	r0, [r5, #8]
   16300:	bl	1afbc <argp_parse@@Base+0x11cc>
   16304:	b	162dc <daemon@@Base+0x688>
   16308:	ldr	r3, [r0, #12]
   1630c:	strd	r4, [sp, #-16]!
   16310:	ldr	r2, [r1, #12]
   16314:	str	r6, [sp, #8]
   16318:	str	lr, [sp, #12]
   1631c:	cmp	r3, r2
   16320:	beq	16380 <daemon@@Base+0x72c>
   16324:	mov	r5, r1
   16328:	mov	r4, r0
   1632c:	mov	r1, r2
   16330:	mov	r0, r3
   16334:	bl	16308 <daemon@@Base+0x6b4>
   16338:	cmp	r0, #0
   1633c:	bne	16370 <daemon@@Base+0x71c>
   16340:	ldr	r3, [r5, #8]
   16344:	ldr	r0, [r4, #8]
   16348:	mvn	r2, r3
   1634c:	lsr	r2, r2, #31
   16350:	cmp	r2, r0, lsr #31
   16354:	subne	r0, r0, r3
   16358:	subeq	r0, r3, r0
   1635c:	cmp	r0, #0
   16360:	bne	16370 <daemon@@Base+0x71c>
   16364:	ldr	r0, [r4, #4]
   16368:	ldr	r3, [r5, #4]
   1636c:	sub	r0, r3, r0
   16370:	ldrd	r4, [sp]
   16374:	ldr	r6, [sp, #8]
   16378:	add	sp, sp, #12
   1637c:	pop	{pc}		; (ldr pc, [sp], #4)
   16380:	ldr	lr, [r1, #4]
   16384:	ldr	r3, [r1, #8]
   16388:	ldr	r2, [r0, #8]
   1638c:	ldr	ip, [r0, #4]
   16390:	mvn	r1, r3
   16394:	lsr	r1, r1, #31
   16398:	ldrd	r4, [sp]
   1639c:	cmp	r1, r2, lsr #31
   163a0:	ldr	r6, [sp, #8]
   163a4:	add	sp, sp, #12
   163a8:	subne	r0, r2, r3
   163ac:	subeq	r0, r3, r2
   163b0:	cmp	r0, #0
   163b4:	subeq	r0, lr, ip
   163b8:	pop	{pc}		; (ldr pc, [sp], #4)
   163bc:	ldr	r2, [r0, #8]
   163c0:	cmp	r2, #0
   163c4:	beq	163d0 <daemon@@Base+0x77c>
   163c8:	mov	r0, #0
   163cc:	bx	lr
   163d0:	ldr	r2, [r1, #8]
   163d4:	cmp	r2, #0
   163d8:	bne	163c8 <daemon@@Base+0x774>
   163dc:	ldr	r2, [r0, #12]
   163e0:	ldr	r1, [r1, #12]
   163e4:	orr	r2, r2, r1
   163e8:	tst	r2, #16
   163ec:	bne	163c8 <daemon@@Base+0x774>
   163f0:	ldr	r2, [r3]
   163f4:	ldr	r1, [r0, #4]
   163f8:	add	r0, r2, #1
   163fc:	str	r0, [r3]
   16400:	strb	r1, [r2]
   16404:	b	163c8 <daemon@@Base+0x774>
   16408:	strd	r4, [sp, #-16]!
   1640c:	ldr	r4, [r0, #12]
   16410:	str	r6, [sp, #8]
   16414:	str	lr, [sp, #12]
   16418:	ands	r4, r4, #8
   1641c:	movne	r4, #0
   16420:	bne	1644c <daemon@@Base+0x7f8>
   16424:	ldr	r5, [r0, #4]
   16428:	sub	r3, r5, #1
   1642c:	cmp	r3, #254	; 0xfe
   16430:	bhi	1644c <daemon@@Base+0x7f8>
   16434:	bl	118c4 <__ctype_b_loc@plt>
   16438:	ldr	r2, [r0]
   1643c:	lsl	r3, r5, #1
   16440:	ldrh	r3, [r2, r3]
   16444:	tst	r3, #16384	; 0x4000
   16448:	movne	r4, r5
   1644c:	mov	r0, r4
   16450:	ldrd	r4, [sp]
   16454:	ldr	r6, [sp, #8]
   16458:	add	sp, sp, #12
   1645c:	pop	{pc}		; (ldr pc, [sp], #4)
   16460:	str	r4, [sp, #-8]!
   16464:	mov	r4, r0
   16468:	str	lr, [sp, #4]
   1646c:	bl	118c4 <__ctype_b_loc@plt>
   16470:	ldr	lr, [r0]
   16474:	ldr	r2, [r4]
   16478:	b	16480 <daemon@@Base+0x82c>
   1647c:	str	r2, [r4]
   16480:	ldrb	r1, [r2]
   16484:	mov	r3, r2
   16488:	add	r2, r2, #1
   1648c:	lsl	r0, r1, #1
   16490:	ldrh	ip, [lr, r0]
   16494:	tst	ip, #8192	; 0x2000
   16498:	bne	1647c <daemon@@Base+0x828>
   1649c:	subs	r0, r1, #45	; 0x2d
   164a0:	movne	r0, #1
   164a4:	cmp	r1, #0
   164a8:	beq	164dc <daemon@@Base+0x888>
   164ac:	tst	ip, #8
   164b0:	beq	164c4 <daemon@@Base+0x870>
   164b4:	b	164dc <daemon@@Base+0x888>
   164b8:	ldrh	r2, [lr, r1]
   164bc:	tst	r2, #8
   164c0:	bne	164dc <daemon@@Base+0x888>
   164c4:	add	r3, r3, #1
   164c8:	str	r3, [r4]
   164cc:	ldrb	r2, [r3]
   164d0:	cmp	r2, #0
   164d4:	lsl	r1, r2, #1
   164d8:	bne	164b8 <daemon@@Base+0x864>
   164dc:	ldr	r4, [sp]
   164e0:	add	sp, sp, #4
   164e4:	pop	{pc}		; (ldr pc, [sp], #4)
   164e8:	cmp	r1, #0
   164ec:	strd	r4, [sp, #-24]!	; 0xffffffe8
   164f0:	strd	r6, [sp, #8]
   164f4:	str	r8, [sp, #16]
   164f8:	str	lr, [sp, #20]
   164fc:	beq	16584 <daemon@@Base+0x930>
   16500:	mov	r6, r0
   16504:	mov	r8, r2
   16508:	sub	r7, r1, #1
   1650c:	ldrd	r4, [r6]
   16510:	cmp	r5, #0
   16514:	sub	r5, r5, #1
   16518:	beq	16558 <daemon@@Base+0x904>
   1651c:	add	r4, r4, #24
   16520:	ldr	r0, [r4, #-24]	; 0xffffffe8
   16524:	sub	r5, r5, #1
   16528:	cmp	r0, #0
   1652c:	beq	1654c <daemon@@Base+0x8f8>
   16530:	ldr	r3, [r4, #-12]
   16534:	mov	r1, r8
   16538:	tst	r3, #2
   1653c:	bne	1654c <daemon@@Base+0x8f8>
   16540:	bl	11654 <strcmp@plt>
   16544:	cmp	r0, #0
   16548:	beq	1656c <daemon@@Base+0x918>
   1654c:	cmn	r5, #1
   16550:	add	r4, r4, #24
   16554:	bne	16520 <daemon@@Base+0x8cc>
   16558:	sub	r7, r7, #1
   1655c:	add	r6, r6, #28
   16560:	cmn	r7, #1
   16564:	bne	1650c <daemon@@Base+0x8b8>
   16568:	mov	r6, #0
   1656c:	mov	r0, r6
   16570:	ldrd	r4, [sp]
   16574:	ldrd	r6, [sp, #8]
   16578:	ldr	r8, [sp, #16]
   1657c:	add	sp, sp, #20
   16580:	pop	{pc}		; (ldr pc, [sp], #4)
   16584:	mov	r6, r1
   16588:	b	1656c <daemon@@Base+0x918>
   1658c:	strd	r4, [sp, #-16]!
   16590:	subs	r5, r0, #0
   16594:	mov	r4, r1
   16598:	str	r6, [sp, #8]
   1659c:	str	lr, [sp, #12]
   165a0:	beq	165b4 <daemon@@Base+0x960>
   165a4:	mov	r1, #10
   165a8:	bl	11900 <strchr@plt>
   165ac:	adds	r5, r0, #0
   165b0:	movne	r5, #1
   165b4:	cmp	r4, #0
   165b8:	beq	165e4 <daemon@@Base+0x990>
   165bc:	ldr	r3, [r4]
   165c0:	cmp	r3, #0
   165c4:	beq	165e4 <daemon@@Base+0x990>
   165c8:	ldr	r0, [r3, #8]
   165cc:	ldr	r1, [r3, #16]
   165d0:	bl	1658c <daemon@@Base+0x938>
   165d4:	ldr	r3, [r4, #16]!
   165d8:	add	r5, r5, r0
   165dc:	cmp	r3, #0
   165e0:	bne	165c8 <daemon@@Base+0x974>
   165e4:	mov	r0, r5
   165e8:	ldrd	r4, [sp]
   165ec:	ldr	r6, [sp, #8]
   165f0:	add	sp, sp, #12
   165f4:	pop	{pc}		; (ldr pc, [sp], #4)
   165f8:	strd	r4, [sp, #-16]!
   165fc:	mov	r5, r1
   16600:	mov	r1, r3
   16604:	str	r6, [sp, #8]
   16608:	mov	r6, r0
   1660c:	mov	r0, r2
   16610:	mov	r4, r2
   16614:	str	lr, [sp, #12]
   16618:	bl	1ac70 <argp_parse@@Base+0xe80>
   1661c:	mov	r2, r0
   16620:	mov	r1, r6
   16624:	ldr	r6, [sp, #8]
   16628:	mov	r0, r5
   1662c:	ldr	lr, [sp, #12]
   16630:	ldr	r3, [r4, #20]
   16634:	ldrd	r4, [sp]
   16638:	add	sp, sp, #16
   1663c:	bx	r3
   16640:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16644:	ldr	r4, [r0]
   16648:	strd	r6, [sp, #8]
   1664c:	strd	r8, [sp, #16]
   16650:	strd	sl, [sp, #24]
   16654:	str	lr, [sp, #32]
   16658:	sub	sp, sp, #52	; 0x34
   1665c:	ldr	r7, [r0, #16]
   16660:	str	r1, [sp]
   16664:	str	r0, [sp, #4]
   16668:	mov	r0, #16
   1666c:	bl	1bcfc <argp_parse@@Base+0x1f0c>
   16670:	subs	fp, r0, #0
   16674:	beq	16ca8 <daemon@@Base+0x1054>
   16678:	mov	r3, #0
   1667c:	cmp	r4, r3
   16680:	str	r3, [fp, #4]
   16684:	str	r3, [fp, #12]
   16688:	beq	168ec <daemon@@Base+0xc98>
   1668c:	ldr	r0, [r4, #12]
   16690:	ands	r0, r0, #4
   16694:	bne	16ce4 <daemon@@Base+0x1090>
   16698:	mov	r9, r0
   1669c:	add	r5, r4, #24
   166a0:	mov	r8, r0
   166a4:	b	166f4 <daemon@@Base+0xaa0>
   166a8:	ldr	r3, [r5, #-12]
   166ac:	tst	r3, #4
   166b0:	bne	166c0 <daemon@@Base+0xa6c>
   166b4:	add	r9, r9, #1
   166b8:	str	r9, [fp, #4]
   166bc:	ldr	r3, [r5, #-12]
   166c0:	tst	r3, #8
   166c4:	bne	166f0 <daemon@@Base+0xa9c>
   166c8:	ldr	r6, [r5, #-20]	; 0xffffffec
   166cc:	sub	r3, r6, #1
   166d0:	cmp	r3, #254	; 0xfe
   166d4:	bhi	166f0 <daemon@@Base+0xa9c>
   166d8:	bl	118c4 <__ctype_b_loc@plt>
   166dc:	ldr	r3, [r0]
   166e0:	lsl	r6, r6, #1
   166e4:	ldrh	r3, [r3, r6]
   166e8:	tst	r3, #16384	; 0x4000
   166ec:	addne	r8, r8, #1
   166f0:	add	r5, r5, #24
   166f4:	ldr	r3, [r5, #-20]	; 0xffffffec
   166f8:	cmp	r3, #0
   166fc:	bne	166a8 <daemon@@Base+0xa54>
   16700:	ldr	r3, [r5, #-24]	; 0xffffffe8
   16704:	cmp	r3, #0
   16708:	bne	166a8 <daemon@@Base+0xa54>
   1670c:	ldr	r3, [r5, #-8]
   16710:	cmp	r3, #0
   16714:	bne	166a8 <daemon@@Base+0xa54>
   16718:	ldr	sl, [r5, #-4]
   1671c:	cmp	sl, #0
   16720:	bne	166a8 <daemon@@Base+0xa54>
   16724:	rsb	r9, r9, r9, lsl #3
   16728:	lsl	r0, r9, #2
   1672c:	bl	1bcfc <argp_parse@@Base+0x1f0c>
   16730:	str	r0, [fp]
   16734:	add	r0, r8, #1
   16738:	bl	1bcfc <argp_parse@@Base+0x1f0c>
   1673c:	ldr	r5, [fp]
   16740:	mov	r8, r0
   16744:	str	r0, [fp, #8]
   16748:	cmp	r5, #0
   1674c:	cmpne	r0, #0
   16750:	beq	16c4c <daemon@@Base+0xff8>
   16754:	ldr	r2, [fp, #4]
   16758:	movw	r3, #37449	; 0x9249
   1675c:	movt	r3, #2340	; 0x924
   16760:	cmp	r2, r3
   16764:	bhi	16c6c <daemon@@Base+0x1018>
   16768:	mov	r6, r0
   1676c:	mov	r0, sl
   16770:	str	r7, [sp, #8]
   16774:	mov	r7, r8
   16778:	ldr	sl, [sp]
   1677c:	add	r5, r5, #28
   16780:	str	fp, [sp, #12]
   16784:	ldr	r3, [r4, #4]
   16788:	ldr	r8, [sp, #4]
   1678c:	cmp	r3, #0
   16790:	ldr	fp, [r4, #20]
   16794:	bne	167a4 <daemon@@Base+0xb50>
   16798:	ldr	ip, [r4]
   1679c:	cmp	ip, #0
   167a0:	beq	16884 <daemon@@Base+0xc30>
   167a4:	mov	r2, #0
   167a8:	cmp	fp, #0
   167ac:	str	r4, [r5, #-28]	; 0xffffffe4
   167b0:	str	r2, [r5, #-24]	; 0xffffffe8
   167b4:	str	r6, [r5, #-20]	; 0xffffffec
   167b8:	bne	167cc <daemon@@Base+0xb78>
   167bc:	ldr	r2, [r4]
   167c0:	orrs	r3, r2, r3
   167c4:	movne	fp, r0
   167c8:	beq	168a4 <daemon@@Base+0xc50>
   167cc:	mov	r3, #0
   167d0:	str	fp, [r5, #-16]
   167d4:	str	sl, [r5, #-12]
   167d8:	str	r8, [r5, #-8]
   167dc:	add	r3, r3, #1
   167e0:	str	r3, [r5, #-24]	; 0xffffffe8
   167e4:	ldr	r3, [r4, #12]
   167e8:	tst	r3, #8
   167ec:	bne	16854 <daemon@@Base+0xc00>
   167f0:	ldr	r9, [r4, #4]
   167f4:	sub	r3, r9, #1
   167f8:	cmp	r3, #254	; 0xfe
   167fc:	bhi	16854 <daemon@@Base+0xc00>
   16800:	bl	118c4 <__ctype_b_loc@plt>
   16804:	ldr	r0, [r0]
   16808:	lsl	r3, r9, #1
   1680c:	ldrh	r3, [r0, r3]
   16810:	tst	r3, #16384	; 0x4000
   16814:	beq	16854 <daemon@@Base+0xc00>
   16818:	cmp	r7, r6
   1681c:	uxtb	r9, r9
   16820:	bcs	16850 <daemon@@Base+0xbfc>
   16824:	ldrb	r3, [r7]
   16828:	cmp	r3, r9
   1682c:	beq	16854 <daemon@@Base+0xc00>
   16830:	mov	r3, r7
   16834:	sub	r0, r6, #1
   16838:	b	16848 <daemon@@Base+0xbf4>
   1683c:	ldrb	ip, [r3, #1]!
   16840:	cmp	ip, r9
   16844:	beq	16854 <daemon@@Base+0xc00>
   16848:	cmp	r0, r3
   1684c:	bne	1683c <daemon@@Base+0xbe8>
   16850:	strb	r9, [r6], #1
   16854:	add	r4, r4, #24
   16858:	ldr	r0, [r4, #4]
   1685c:	cmp	r0, #0
   16860:	bne	16870 <daemon@@Base+0xc1c>
   16864:	ldr	r3, [r4]
   16868:	cmp	r3, #0
   1686c:	beq	168ac <daemon@@Base+0xc58>
   16870:	ldr	r3, [r4, #12]
   16874:	tst	r3, #4
   16878:	beq	168d0 <daemon@@Base+0xc7c>
   1687c:	ldr	r3, [r5, #-24]	; 0xffffffe8
   16880:	b	167dc <daemon@@Base+0xb88>
   16884:	ldr	ip, [r4, #16]
   16888:	cmp	ip, #0
   1688c:	beq	168d8 <daemon@@Base+0xc84>
   16890:	cmp	fp, #0
   16894:	str	r4, [r5, #-28]	; 0xffffffe4
   16898:	str	r3, [r5, #-24]	; 0xffffffe8
   1689c:	str	r6, [r5, #-20]	; 0xffffffec
   168a0:	bne	167cc <daemon@@Base+0xb78>
   168a4:	add	fp, r0, #1
   168a8:	b	167cc <daemon@@Base+0xb78>
   168ac:	ldr	r3, [r4, #16]
   168b0:	cmp	r3, #0
   168b4:	bne	16870 <daemon@@Base+0xc1c>
   168b8:	ldr	r3, [r4, #20]
   168bc:	cmp	r3, #0
   168c0:	bne	16870 <daemon@@Base+0xc1c>
   168c4:	add	r5, r5, #28
   168c8:	mov	r0, fp
   168cc:	b	1678c <daemon@@Base+0xb38>
   168d0:	mov	r3, r0
   168d4:	b	168c4 <daemon@@Base+0xc70>
   168d8:	cmp	fp, #0
   168dc:	bne	16a28 <daemon@@Base+0xdd4>
   168e0:	ldr	r7, [sp, #8]
   168e4:	strb	r3, [r6]
   168e8:	ldr	fp, [sp, #12]
   168ec:	cmp	r7, #0
   168f0:	beq	16a08 <daemon@@Base+0xdb4>
   168f4:	ldr	r3, [r7]
   168f8:	cmp	r3, #0
   168fc:	beq	16a08 <daemon@@Base+0xdb4>
   16900:	movw	r3, #37449	; 0x9249
   16904:	movt	r3, #2340	; 0x924
   16908:	mov	sl, r7
   1690c:	str	r3, [sp, #28]
   16910:	add	r3, fp, #12
   16914:	str	r3, [sp, #44]	; 0x2c
   16918:	ldr	r6, [sl, #8]
   1691c:	ldr	r5, [sl, #12]
   16920:	cmp	r5, #0
   16924:	bne	16930 <daemon@@Base+0xcdc>
   16928:	cmp	r6, #0
   1692c:	beq	16c2c <daemon@@Base+0xfd8>
   16930:	ldr	r7, [sp, #4]
   16934:	mov	r0, #28
   16938:	ldr	r4, [r7, #16]
   1693c:	bl	1bcfc <argp_parse@@Base+0x1f0c>
   16940:	subs	r1, r0, #0
   16944:	beq	16984 <daemon@@Base+0xd30>
   16948:	ldr	r3, [sp]
   1694c:	sub	r4, sl, r4
   16950:	asr	r4, r4, #4
   16954:	str	r6, [r1]
   16958:	ldr	r2, [fp, #12]
   1695c:	str	r1, [fp, #12]
   16960:	strd	r4, [r1, #4]
   16964:	cmp	r3, #0
   16968:	str	r3, [r1, #12]
   1696c:	ldrne	r3, [r3, #20]
   16970:	str	r7, [r1, #16]
   16974:	ldreq	r3, [sp]
   16978:	str	r2, [r1, #24]
   1697c:	addne	r3, r3, #1
   16980:	str	r3, [r1, #20]
   16984:	ldr	r0, [sl]
   16988:	bl	16640 <daemon@@Base+0x9ec>
   1698c:	ldr	r3, [fp, #12]
   16990:	mov	r6, r0
   16994:	cmp	r3, #0
   16998:	bne	169a4 <daemon@@Base+0xd50>
   1699c:	b	16c34 <daemon@@Base+0xfe0>
   169a0:	mov	r3, r2
   169a4:	ldr	r2, [r3, #24]
   169a8:	cmp	r2, #0
   169ac:	bne	169a0 <daemon@@Base+0xd4c>
   169b0:	add	r3, r3, #24
   169b4:	ldr	r2, [r6, #4]
   169b8:	ldr	r1, [r6, #12]
   169bc:	cmp	r2, #0
   169c0:	str	r1, [r3]
   169c4:	mov	r3, #0
   169c8:	str	r3, [r6, #12]
   169cc:	beq	169f4 <daemon@@Base+0xda0>
   169d0:	ldr	r3, [fp, #4]
   169d4:	cmp	r3, #0
   169d8:	bne	16a38 <daemon@@Base+0xde4>
   169dc:	ldr	r1, [r6]
   169e0:	str	r2, [fp, #4]
   169e4:	ldr	r2, [r6, #8]
   169e8:	str	r1, [fp]
   169ec:	str	r2, [fp, #8]
   169f0:	str	r3, [r6, #4]
   169f4:	mov	r0, r6
   169f8:	bl	162a4 <daemon@@Base+0x650>
   169fc:	ldr	r3, [sl, #16]!
   16a00:	cmp	r3, #0
   16a04:	bne	16918 <daemon@@Base+0xcc4>
   16a08:	mov	r0, fp
   16a0c:	add	sp, sp, #52	; 0x34
   16a10:	ldrd	r4, [sp]
   16a14:	ldrd	r6, [sp, #8]
   16a18:	ldrd	r8, [sp, #16]
   16a1c:	ldrd	sl, [sp, #24]
   16a20:	add	sp, sp, #32
   16a24:	pop	{pc}		; (ldr pc, [sp], #4)
   16a28:	str	r4, [r5, #-28]	; 0xffffffe4
   16a2c:	str	r3, [r5, #-24]	; 0xffffffe8
   16a30:	str	r6, [r5, #-20]	; 0xffffffec
   16a34:	b	167cc <daemon@@Base+0xb78>
   16a38:	add	r3, r2, r3
   16a3c:	rsb	r0, r3, r3, lsl #3
   16a40:	str	r3, [sp, #12]
   16a44:	lsl	r0, r0, #2
   16a48:	bl	1bcfc <argp_parse@@Base+0x1f0c>
   16a4c:	mov	r4, r0
   16a50:	ldr	r0, [fp, #8]
   16a54:	str	r4, [sp, #8]
   16a58:	bl	118e8 <strlen@plt>
   16a5c:	mov	r8, r0
   16a60:	ldr	r0, [r6, #8]
   16a64:	bl	118e8 <strlen@plt>
   16a68:	add	r0, r8, r0
   16a6c:	add	r0, r0, #1
   16a70:	bl	1bcfc <argp_parse@@Base+0x1f0c>
   16a74:	cmp	r4, #0
   16a78:	cmpne	r0, #0
   16a7c:	mov	r9, r0
   16a80:	beq	16c8c <daemon@@Base+0x1038>
   16a84:	ldr	r3, [sp, #12]
   16a88:	ldr	r2, [sp, #28]
   16a8c:	cmp	r3, r2
   16a90:	bhi	16cc8 <daemon@@Base+0x1074>
   16a94:	ldm	fp, {r1, r5}
   16a98:	ldr	r0, [sp, #8]
   16a9c:	rsb	r4, r5, r5, lsl #3
   16aa0:	str	r1, [sp, #24]
   16aa4:	lsl	r4, r4, #2
   16aa8:	mov	r2, r4
   16aac:	bl	118ac <mempcpy@plt>
   16ab0:	ldm	r6, {r1, r3}
   16ab4:	rsb	r2, r3, r3, lsl #3
   16ab8:	str	r3, [sp, #16]
   16abc:	lsl	r2, r2, #2
   16ac0:	bl	11714 <memcpy@plt>
   16ac4:	ldr	r7, [fp, #8]
   16ac8:	mov	r2, r8
   16acc:	mov	r0, r9
   16ad0:	mov	r1, r7
   16ad4:	bl	11714 <memcpy@plt>
   16ad8:	cmp	r5, #0
   16adc:	ldr	r3, [sp, #16]
   16ae0:	beq	16c3c <daemon@@Base+0xfe8>
   16ae4:	ldr	r1, [sp, #8]
   16ae8:	subs	r5, r5, #1
   16aec:	add	r1, r1, #28
   16af0:	ldr	r2, [r1, #-20]	; 0xffffffec
   16af4:	sub	r2, r2, r7
   16af8:	add	r2, r9, r2
   16afc:	str	r2, [r1, #-20]	; 0xffffffec
   16b00:	bne	16ae8 <daemon@@Base+0xe94>
   16b04:	ldr	r2, [sp, #8]
   16b08:	add	r4, r2, r4
   16b0c:	add	r2, r9, r8
   16b10:	cmp	r3, #0
   16b14:	ldr	r1, [r6, #8]
   16b18:	str	r2, [sp, #16]
   16b1c:	beq	16c44 <daemon@@Base+0xff0>
   16b20:	mov	r8, r2
   16b24:	add	r4, r4, #28
   16b28:	str	r6, [sp, #32]
   16b2c:	sub	r2, r2, #1
   16b30:	strd	sl, [sp, #36]	; 0x24
   16b34:	mov	sl, r1
   16b38:	mov	fp, r3
   16b3c:	str	r2, [sp, #20]
   16b40:	str	r8, [r4, #-20]	; 0xffffffec
   16b44:	ldr	r6, [r4, #-24]	; 0xffffffe8
   16b48:	ldr	r7, [r4, #-28]	; 0xffffffe4
   16b4c:	cmp	r6, #0
   16b50:	beq	16ba4 <daemon@@Base+0xf50>
   16b54:	ldr	r3, [r7, #12]
   16b58:	tst	r3, #8
   16b5c:	bne	16b98 <daemon@@Base+0xf44>
   16b60:	ldr	r5, [r7, #4]
   16b64:	sub	r3, r5, #1
   16b68:	cmp	r3, #254	; 0xfe
   16b6c:	bhi	16b98 <daemon@@Base+0xf44>
   16b70:	bl	118c4 <__ctype_b_loc@plt>
   16b74:	ldr	r1, [r0]
   16b78:	lsl	r2, r5, #1
   16b7c:	ldrb	r3, [sl]
   16b80:	ldrh	r2, [r1, r2]
   16b84:	sub	r5, r3, r5
   16b88:	clz	r5, r5
   16b8c:	lsr	r5, r5, #5
   16b90:	ands	r2, r5, r2, lsr #14
   16b94:	bne	16be8 <daemon@@Base+0xf94>
   16b98:	subs	r6, r6, #1
   16b9c:	add	r7, r7, #24
   16ba0:	bne	16b54 <daemon@@Base+0xf00>
   16ba4:	subs	fp, fp, #1
   16ba8:	add	r4, r4, #28
   16bac:	bne	16b40 <daemon@@Base+0xeec>
   16bb0:	add	r6, sp, #32
   16bb4:	ldm	r6, {r6, sl, fp}
   16bb8:	mov	r3, #0
   16bbc:	strb	r3, [r8]
   16bc0:	ldr	r0, [sp, #24]
   16bc4:	bl	1afbc <argp_parse@@Base+0x11cc>
   16bc8:	ldr	r0, [fp, #8]
   16bcc:	bl	1afbc <argp_parse@@Base+0x11cc>
   16bd0:	ldr	r3, [sp, #8]
   16bd4:	str	r3, [fp]
   16bd8:	ldr	r3, [sp, #12]
   16bdc:	str	r9, [fp, #8]
   16be0:	str	r3, [fp, #4]
   16be4:	b	169f4 <daemon@@Base+0xda0>
   16be8:	ldr	r2, [sp, #16]
   16bec:	cmp	r9, r2
   16bf0:	bcs	16c20 <daemon@@Base+0xfcc>
   16bf4:	ldrb	r2, [r9]
   16bf8:	cmp	r2, r3
   16bfc:	beq	16c24 <daemon@@Base+0xfd0>
   16c00:	mov	r2, r9
   16c04:	ldr	r0, [sp, #20]
   16c08:	b	16c18 <daemon@@Base+0xfc4>
   16c0c:	ldrb	r1, [r2, #1]!
   16c10:	cmp	r1, r3
   16c14:	beq	16c24 <daemon@@Base+0xfd0>
   16c18:	cmp	r2, r0
   16c1c:	bne	16c0c <daemon@@Base+0xfb8>
   16c20:	strb	r3, [r8], #1
   16c24:	add	sl, sl, #1
   16c28:	b	16b98 <daemon@@Base+0xf44>
   16c2c:	ldr	r1, [sp]
   16c30:	b	16984 <daemon@@Base+0xd30>
   16c34:	ldr	r3, [sp, #44]	; 0x2c
   16c38:	b	169b4 <daemon@@Base+0xd60>
   16c3c:	ldr	r4, [sp, #8]
   16c40:	b	16b0c <daemon@@Base+0xeb8>
   16c44:	ldr	r8, [sp, #16]
   16c48:	b	16bb8 <daemon@@Base+0xf64>
   16c4c:	movw	r3, #58176	; 0xe340
   16c50:	movt	r3, #1
   16c54:	movw	r1, #58344	; 0xe3e8
   16c58:	movt	r1, #1
   16c5c:	movw	r0, #58376	; 0xe408
   16c60:	movt	r0, #1
   16c64:	movw	r2, #474	; 0x1da
   16c68:	bl	11ae0 <__assert_fail@plt>
   16c6c:	movw	r3, #58176	; 0xe340
   16c70:	movt	r3, #1
   16c74:	movw	r1, #58344	; 0xe3e8
   16c78:	movt	r1, #1
   16c7c:	movw	r0, #58412	; 0xe42c
   16c80:	movt	r0, #1
   16c84:	mov	r2, #476	; 0x1dc
   16c88:	bl	11ae0 <__assert_fail@plt>
   16c8c:	movw	r1, #58344	; 0xe3e8
   16c90:	movt	r1, #1
   16c94:	ldr	r3, [pc, #104]	; 16d04 <daemon@@Base+0x10b0>
   16c98:	movw	r0, #58472	; 0xe468
   16c9c:	movt	r0, #1
   16ca0:	movw	r2, #970	; 0x3ca
   16ca4:	bl	11ae0 <__assert_fail@plt>
   16ca8:	movw	r3, #58176	; 0xe340
   16cac:	movt	r3, #1
   16cb0:	movw	r1, #58344	; 0xe3e8
   16cb4:	movt	r1, #1
   16cb8:	movw	r0, #58356	; 0xe3f4
   16cbc:	movt	r0, #1
   16cc0:	movw	r2, #450	; 0x1c2
   16cc4:	bl	11ae0 <__assert_fail@plt>
   16cc8:	movw	r1, #58344	; 0xe3e8
   16ccc:	movt	r1, #1
   16cd0:	ldr	r3, [pc, #44]	; 16d04 <daemon@@Base+0x10b0>
   16cd4:	movw	r0, #58500	; 0xe484
   16cd8:	movt	r0, #1
   16cdc:	mov	r2, #972	; 0x3cc
   16ce0:	bl	11ae0 <__assert_fail@plt>
   16ce4:	movw	r3, #58176	; 0xe340
   16ce8:	movt	r3, #1
   16cec:	movw	r1, #58344	; 0xe3e8
   16cf0:	movt	r1, #1
   16cf4:	movw	r0, #58360	; 0xe3f8
   16cf8:	movt	r0, #1
   16cfc:	mov	r2, #460	; 0x1cc
   16d00:	bl	11ae0 <__assert_fail@plt>
   16d04:	andeq	lr, r1, ip, asr #6
   16d08:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16d0c:	ldr	r5, [r0, #4]
   16d10:	strd	r6, [sp, #8]
   16d14:	strd	r8, [sp, #16]
   16d18:	strd	sl, [sp, #24]
   16d1c:	str	lr, [sp, #32]
   16d20:	sub	sp, sp, #12
   16d24:	cmp	r5, #0
   16d28:	ldr	r7, [r0]
   16d2c:	ldr	r6, [r0, #8]
   16d30:	beq	16e00 <daemon@@Base+0x11ac>
   16d34:	mov	sl, r3
   16d38:	mov	r4, r7
   16d3c:	stm	sp, {r1, r2}
   16d40:	ldr	fp, [r4, #12]
   16d44:	ands	r8, fp, #8
   16d48:	movne	r0, #1
   16d4c:	movne	r8, #0
   16d50:	bne	16d8c <daemon@@Base+0x1138>
   16d54:	ldr	r9, [r4, #4]
   16d58:	sub	r1, r9, #1
   16d5c:	cmp	r1, #254	; 0xfe
   16d60:	bhi	16d88 <daemon@@Base+0x1134>
   16d64:	bl	118c4 <__ctype_b_loc@plt>
   16d68:	ldr	r0, [r0]
   16d6c:	lsl	r1, r9, #1
   16d70:	ldrh	r1, [r0, r1]
   16d74:	tst	r1, #16384	; 0x4000
   16d78:	beq	16d88 <daemon@@Base+0x1134>
   16d7c:	ldrb	r1, [r6]
   16d80:	cmp	r1, r9
   16d84:	beq	16dc0 <daemon@@Base+0x116c>
   16d88:	mov	r0, #1
   16d8c:	subs	r5, r5, #1
   16d90:	add	r4, r4, #24
   16d94:	moveq	r0, #0
   16d98:	cmp	r0, #0
   16d9c:	bne	16d40 <daemon@@Base+0x10ec>
   16da0:	mov	r0, r8
   16da4:	add	sp, sp, #12
   16da8:	ldrd	r4, [sp]
   16dac:	ldrd	r6, [sp, #8]
   16db0:	ldrd	r8, [sp, #16]
   16db4:	ldrd	sl, [sp, #24]
   16db8:	add	sp, sp, #32
   16dbc:	pop	{pc}		; (ldr pc, [sp], #4)
   16dc0:	tst	fp, #4
   16dc4:	moveq	r7, r4
   16dc8:	tst	fp, #2
   16dcc:	movne	r0, #1
   16dd0:	bne	16df8 <daemon@@Base+0x11a4>
   16dd4:	mov	r3, sl
   16dd8:	mov	r1, r7
   16ddc:	ldr	ip, [sp]
   16de0:	mov	r0, r4
   16de4:	ldr	r2, [sp, #4]
   16de8:	blx	ip
   16dec:	mov	r8, r0
   16df0:	clz	r0, r0
   16df4:	lsr	r0, r0, #5
   16df8:	add	r6, r6, #1
   16dfc:	b	16d8c <daemon@@Base+0x1138>
   16e00:	mov	r8, r5
   16e04:	b	16da0 <daemon@@Base+0x114c>
   16e08:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16e0c:	strd	r6, [sp, #8]
   16e10:	strd	r8, [sp, #16]
   16e14:	strd	sl, [sp, #24]
   16e18:	add	fp, sp, #32
   16e1c:	str	lr, [sp, #32]
   16e20:	sub	sp, sp, #20
   16e24:	ldr	r5, [r0, #4]
   16e28:	cmp	r5, #0
   16e2c:	beq	16f7c <daemon@@Base+0x1328>
   16e30:	mov	r6, r0
   16e34:	ldr	r0, [r0, #8]
   16e38:	mov	r9, r1
   16e3c:	bl	118e8 <strlen@plt>
   16e40:	add	r3, r0, #8
   16e44:	ldr	r4, [r6]
   16e48:	movw	r7, #25532	; 0x63bc
   16e4c:	movt	r7, #1
   16e50:	bic	r3, r3, #7
   16e54:	sub	sp, sp, r3
   16e58:	mov	r8, sp
   16e5c:	str	r8, [fp, #-40]	; 0xffffffd8
   16e60:	ldr	r2, [r4, #20]
   16e64:	mov	r0, r4
   16e68:	sub	r3, fp, #40	; 0x28
   16e6c:	mov	r1, r7
   16e70:	add	r4, r4, #28
   16e74:	ldr	r2, [r2, #24]
   16e78:	bl	16d08 <daemon@@Base+0x10b4>
   16e7c:	subs	r5, r5, #1
   16e80:	bne	16e60 <daemon@@Base+0x120c>
   16e84:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16e88:	cmp	r3, r8
   16e8c:	bhi	16fbc <daemon@@Base+0x1368>
   16e90:	ldrd	r4, [r6]
   16e94:	cmp	r5, #0
   16e98:	beq	16f7c <daemon@@Base+0x1328>
   16e9c:	movw	r7, #29956	; 0x7504
   16ea0:	movt	r7, #1
   16ea4:	ldr	r2, [r4, #20]
   16ea8:	mov	r0, r4
   16eac:	mov	r3, r9
   16eb0:	mov	r1, r7
   16eb4:	add	r4, r4, #28
   16eb8:	ldr	r2, [r2, #24]
   16ebc:	bl	16d08 <daemon@@Base+0x10b4>
   16ec0:	subs	r5, r5, #1
   16ec4:	bne	16ea4 <daemon@@Base+0x1250>
   16ec8:	ldm	r6, {r7, r8}
   16ecc:	cmp	r8, #0
   16ed0:	beq	16f7c <daemon@@Base+0x1328>
   16ed4:	movw	r3, #58560	; 0xe4c0
   16ed8:	movt	r3, #1
   16edc:	movw	sl, #58576	; 0xe4d0
   16ee0:	movt	sl, #1
   16ee4:	add	r7, r7, #28
   16ee8:	str	r3, [fp, #-48]	; 0xffffffd0
   16eec:	movw	r3, #58588	; 0xe4dc
   16ef0:	movt	r3, #1
   16ef4:	str	r3, [fp, #-52]	; 0xffffffcc
   16ef8:	ldr	r6, [r7, #-28]	; 0xffffffe4
   16efc:	ldr	r5, [r7, #-24]	; 0xffffffe8
   16f00:	cmp	r5, #0
   16f04:	movne	r4, r6
   16f08:	beq	16f70 <daemon@@Base+0x131c>
   16f0c:	ldr	r2, [r4]
   16f10:	cmp	r2, #0
   16f14:	beq	16f64 <daemon@@Base+0x1310>
   16f18:	ldr	r1, [r4, #12]
   16f1c:	tst	r1, #4
   16f20:	moveq	r6, r4
   16f24:	tst	r1, #2
   16f28:	bne	16f64 <daemon@@Base+0x1310>
   16f2c:	ldr	r3, [r4, #8]
   16f30:	ldr	r0, [r6, #12]
   16f34:	cmp	r3, #0
   16f38:	orr	r1, r1, r0
   16f3c:	and	r0, r1, #16
   16f40:	beq	16f98 <daemon@@Base+0x1344>
   16f44:	cmp	r0, #0
   16f48:	bne	16f64 <daemon@@Base+0x1310>
   16f4c:	tst	r1, #1
   16f50:	movne	r0, r9
   16f54:	ldrne	r1, [fp, #-48]	; 0xffffffd0
   16f58:	moveq	r1, sl
   16f5c:	moveq	r0, r9
   16f60:	bl	1c4b4 <argp_parse@@Base+0x26c4>
   16f64:	subs	r5, r5, #1
   16f68:	add	r4, r4, #24
   16f6c:	bne	16f0c <daemon@@Base+0x12b8>
   16f70:	subs	r8, r8, #1
   16f74:	add	r7, r7, #28
   16f78:	bne	16ef8 <daemon@@Base+0x12a4>
   16f7c:	sub	sp, fp, #32
   16f80:	ldrd	r4, [sp]
   16f84:	ldrd	r6, [sp, #8]
   16f88:	ldrd	r8, [sp, #16]
   16f8c:	ldrd	sl, [sp, #24]
   16f90:	add	sp, sp, #32
   16f94:	pop	{pc}		; (ldr pc, [sp], #4)
   16f98:	cmp	r0, #0
   16f9c:	bne	16f64 <daemon@@Base+0x1310>
   16fa0:	ldr	r3, [r6, #8]
   16fa4:	cmp	r3, #0
   16fa8:	bne	16f4c <daemon@@Base+0x12f8>
   16fac:	mov	r0, r9
   16fb0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16fb4:	bl	1c4b4 <argp_parse@@Base+0x26c4>
   16fb8:	b	16f64 <daemon@@Base+0x1310>
   16fbc:	add	r0, r3, #1
   16fc0:	mov	r2, r8
   16fc4:	movw	r1, #58552	; 0xe4b8
   16fc8:	movt	r1, #1
   16fcc:	str	r0, [fp, #-40]	; 0xffffffd8
   16fd0:	mov	r0, r9
   16fd4:	strb	r5, [r3]
   16fd8:	bl	1c4b4 <argp_parse@@Base+0x26c4>
   16fdc:	ldrd	r4, [r6]
   16fe0:	cmp	r5, #0
   16fe4:	bne	16e9c <daemon@@Base+0x1248>
   16fe8:	b	16f7c <daemon@@Base+0x1328>
   16fec:	ldr	r3, [r0, #16]
   16ff0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   16ff4:	strd	r6, [sp, #8]
   16ff8:	strd	r8, [sp, #16]
   16ffc:	str	lr, [sp, #24]
   17000:	sub	sp, sp, #12
   17004:	cmp	r3, #0
   17008:	movne	r2, r3
   1700c:	bne	17018 <daemon@@Base+0x13c4>
   17010:	b	17318 <daemon@@Base+0x16c4>
   17014:	mov	r2, ip
   17018:	ldr	ip, [r2, #12]
   1701c:	cmp	ip, #0
   17020:	bne	17014 <daemon@@Base+0x13c0>
   17024:	ldr	lr, [r2, #8]
   17028:	ldr	r2, [r1, #16]
   1702c:	cmp	r2, #0
   17030:	movne	ip, r2
   17034:	bne	17040 <daemon@@Base+0x13ec>
   17038:	b	17310 <daemon@@Base+0x16bc>
   1703c:	mov	ip, r4
   17040:	ldr	r4, [ip, #12]
   17044:	cmp	r4, #0
   17048:	bne	1703c <daemon@@Base+0x13e8>
   1704c:	ldr	r4, [ip, #8]
   17050:	mvn	ip, r4
   17054:	lsr	ip, ip, #31
   17058:	cmp	ip, lr, lsr #31
   1705c:	subne	r4, lr, r4
   17060:	subeq	r4, r4, lr
   17064:	cmp	r4, #0
   17068:	bne	170d0 <daemon@@Base+0x147c>
   1706c:	adds	r4, r2, #0
   17070:	movne	r4, #1
   17074:	cmp	r3, #0
   17078:	rsbeq	r4, r4, #0
   1707c:	rsbne	r4, r4, #1
   17080:	cmp	r4, #0
   17084:	bne	170d0 <daemon@@Base+0x147c>
   17088:	cmp	r3, #0
   1708c:	mov	r5, r1
   17090:	mov	r6, r0
   17094:	beq	17128 <daemon@@Base+0x14d4>
   17098:	ldr	r0, [r2, #20]
   1709c:	ldr	ip, [r3, #20]
   170a0:	cmp	ip, r0
   170a4:	bgt	170ec <daemon@@Base+0x1498>
   170a8:	bge	17114 <daemon@@Base+0x14c0>
   170ac:	ldr	r2, [r2, #12]
   170b0:	ldr	r1, [r2, #20]
   170b4:	cmp	ip, r1
   170b8:	blt	170ac <daemon@@Base+0x1458>
   170bc:	mov	r1, r2
   170c0:	mov	r0, r3
   170c4:	bl	16308 <daemon@@Base+0x6b4>
   170c8:	subs	r4, r0, #0
   170cc:	mvneq	r4, #0
   170d0:	mov	r0, r4
   170d4:	add	sp, sp, #12
   170d8:	ldrd	r4, [sp]
   170dc:	ldrd	r6, [sp, #8]
   170e0:	ldrd	r8, [sp, #16]
   170e4:	add	sp, sp, #24
   170e8:	pop	{pc}		; (ldr pc, [sp], #4)
   170ec:	ldr	r3, [r3, #12]
   170f0:	ldr	r1, [r3, #20]
   170f4:	cmp	r0, r1
   170f8:	blt	170ec <daemon@@Base+0x1498>
   170fc:	mov	r1, r2
   17100:	mov	r0, r3
   17104:	bl	16308 <daemon@@Base+0x6b4>
   17108:	subs	r4, r0, #0
   1710c:	moveq	r4, #1
   17110:	b	170d0 <daemon@@Base+0x147c>
   17114:	mov	r1, r2
   17118:	mov	r0, r3
   1711c:	bl	16308 <daemon@@Base+0x6b4>
   17120:	subs	r4, r0, #0
   17124:	bne	170d0 <daemon@@Base+0x147c>
   17128:	ldr	r4, [r5, #12]
   1712c:	ldr	r3, [r6, #12]
   17130:	mvn	r2, r4
   17134:	lsr	r2, r2, #31
   17138:	cmp	r2, r3, lsr #31
   1713c:	subne	r4, r3, r4
   17140:	subeq	r4, r4, r3
   17144:	cmp	r4, #0
   17148:	bne	170d0 <daemon@@Base+0x147c>
   1714c:	ldr	r7, [r6]
   17150:	ldr	r2, [r6, #4]
   17154:	cmp	r2, #0
   17158:	beq	17184 <daemon@@Base+0x1530>
   1715c:	add	r3, r7, #24
   17160:	ldr	r1, [r3, #-24]	; 0xffffffe8
   17164:	cmp	r1, #0
   17168:	beq	17178 <daemon@@Base+0x1524>
   1716c:	ldr	r0, [r3, #-12]
   17170:	tst	r0, #2
   17174:	beq	17320 <daemon@@Base+0x16cc>
   17178:	subs	r2, r2, #1
   1717c:	add	r3, r3, #24
   17180:	bne	17160 <daemon@@Base+0x150c>
   17184:	mov	lr, #0
   17188:	ldr	ip, [r5]
   1718c:	ldr	r2, [r5, #4]
   17190:	str	lr, [sp]
   17194:	cmp	r2, lr
   17198:	beq	1737c <daemon@@Base+0x1728>
   1719c:	add	r3, ip, #24
   171a0:	ldr	r1, [r3, #-24]	; 0xffffffe8
   171a4:	cmp	r1, #0
   171a8:	beq	171b8 <daemon@@Base+0x1564>
   171ac:	ldr	r0, [r3, #-12]
   171b0:	tst	r0, #2
   171b4:	beq	171c8 <daemon@@Base+0x1574>
   171b8:	subs	r2, r2, #1
   171bc:	add	r3, r3, #24
   171c0:	bne	171a0 <daemon@@Base+0x154c>
   171c4:	mov	r1, r2
   171c8:	ldr	r3, [r7, #12]
   171cc:	str	r1, [sp, #4]
   171d0:	ands	r3, lr, r3, lsr #3
   171d4:	bne	1733c <daemon@@Base+0x16e8>
   171d8:	ldr	r3, [ip, #12]
   171dc:	tst	r3, #8
   171e0:	beq	17208 <daemon@@Base+0x15b4>
   171e4:	ldr	r3, [sp, #4]
   171e8:	cmp	r3, #0
   171ec:	beq	17208 <daemon@@Base+0x15b4>
   171f0:	add	r0, sp, #4
   171f4:	bl	16460 <daemon@@Base+0x80c>
   171f8:	cmp	r0, #0
   171fc:	subne	r4, r4, #1
   17200:	cmp	r4, #0
   17204:	bne	170d0 <daemon@@Base+0x147c>
   17208:	ldr	r2, [r6, #20]
   1720c:	mov	r0, r6
   17210:	mov	r3, #0
   17214:	movw	r1, #25608	; 0x6408
   17218:	movt	r1, #1
   1721c:	ldr	r2, [r2, #24]
   17220:	bl	16d08 <daemon@@Base+0x10b4>
   17224:	ldr	r2, [r5, #20]
   17228:	uxtb	r6, r0
   1722c:	movw	r1, #25608	; 0x6408
   17230:	movt	r1, #1
   17234:	mov	r0, r5
   17238:	mov	r3, #0
   1723c:	ldr	r2, [r2, #24]
   17240:	bl	16d08 <daemon@@Base+0x10b4>
   17244:	cmp	r6, #0
   17248:	uxtb	r5, r0
   1724c:	movne	r7, r6
   17250:	lslne	r4, r6, #2
   17254:	bne	17270 <daemon@@Base+0x161c>
   17258:	ldr	r3, [sp]
   1725c:	cmp	r3, #0
   17260:	ldrbne	r7, [r3]
   17264:	moveq	r4, r6
   17268:	moveq	r7, r6
   1726c:	lslne	r4, r7, #2
   17270:	cmp	r5, #0
   17274:	movne	r8, r5
   17278:	lslne	r9, r5, #2
   1727c:	bne	17298 <daemon@@Base+0x1644>
   17280:	ldr	r3, [sp, #4]
   17284:	cmp	r3, #0
   17288:	ldrbne	r8, [r3]
   1728c:	moveq	r9, r5
   17290:	moveq	r8, r5
   17294:	lslne	r9, r8, #2
   17298:	bl	11894 <__ctype_tolower_loc@plt>
   1729c:	ldr	r3, [r0]
   172a0:	ldr	r4, [r3, r4]
   172a4:	ldr	r3, [r3, r9]
   172a8:	subs	r4, r4, r3
   172ac:	bne	170d0 <daemon@@Base+0x147c>
   172b0:	subs	r4, r8, r7
   172b4:	bne	170d0 <daemon@@Base+0x147c>
   172b8:	adds	r4, r5, #0
   172bc:	movne	r4, #1
   172c0:	cmp	r6, #0
   172c4:	rsbeq	r4, r4, #0
   172c8:	rsbne	r4, r4, #1
   172cc:	cmp	r4, #0
   172d0:	bne	170d0 <daemon@@Base+0x147c>
   172d4:	cmp	r6, #0
   172d8:	bne	170d0 <daemon@@Base+0x147c>
   172dc:	ldrd	r0, [sp]
   172e0:	adds	r4, r1, #0
   172e4:	movne	r4, #1
   172e8:	cmp	r0, #0
   172ec:	rsbeq	r4, r4, #0
   172f0:	rsbne	r4, r4, #1
   172f4:	cmp	r4, #0
   172f8:	bne	170d0 <daemon@@Base+0x147c>
   172fc:	cmp	r0, #0
   17300:	beq	170d0 <daemon@@Base+0x147c>
   17304:	bl	117d4 <strcasecmp@plt>
   17308:	mov	r4, r0
   1730c:	b	170d0 <daemon@@Base+0x147c>
   17310:	ldr	r4, [r1, #12]
   17314:	b	17050 <daemon@@Base+0x13fc>
   17318:	ldr	lr, [r0, #12]
   1731c:	b	17028 <daemon@@Base+0x13d4>
   17320:	str	r1, [sp]
   17324:	ldr	r2, [r5, #4]
   17328:	ldr	ip, [r5]
   1732c:	cmp	r2, #0
   17330:	beq	17384 <daemon@@Base+0x1730>
   17334:	mov	lr, #1
   17338:	b	1719c <daemon@@Base+0x1548>
   1733c:	mov	r0, sp
   17340:	bl	16460 <daemon@@Base+0x80c>
   17344:	cmp	r0, #0
   17348:	beq	17374 <daemon@@Base+0x1720>
   1734c:	ldr	r3, [r5]
   17350:	ldr	r3, [r3, #12]
   17354:	tst	r3, #8
   17358:	moveq	r4, #1
   1735c:	beq	170d0 <daemon@@Base+0x147c>
   17360:	ldr	r3, [sp, #4]
   17364:	mov	r4, #1
   17368:	cmp	r3, #0
   1736c:	beq	170d0 <daemon@@Base+0x147c>
   17370:	b	171f0 <daemon@@Base+0x159c>
   17374:	ldr	ip, [r5]
   17378:	b	171d8 <daemon@@Base+0x1584>
   1737c:	str	r2, [sp, #4]
   17380:	b	17208 <daemon@@Base+0x15b4>
   17384:	mov	r1, r2
   17388:	mov	lr, #1
   1738c:	b	171c8 <daemon@@Base+0x1574>
   17390:	strd	r4, [sp, #-16]!
   17394:	mov	r5, r1
   17398:	mov	r4, r0
   1739c:	ldr	r2, [r0, #16]
   173a0:	ldr	r1, [r0, #24]
   173a4:	ldr	r3, [r0, #28]
   173a8:	str	r6, [sp, #8]
   173ac:	str	lr, [sp, #12]
   173b0:	sub	r3, r3, r1
   173b4:	cmp	r3, r2
   173b8:	bhi	17420 <daemon@@Base+0x17cc>
   173bc:	ldr	r1, [r4, #20]
   173c0:	mov	r6, #32
   173c4:	cmp	r1, #0
   173c8:	subge	r5, r5, r1
   173cc:	b	173fc <daemon@@Base+0x17a8>
   173d0:	ldr	r3, [r4, #28]
   173d4:	ldr	r2, [r4, #32]
   173d8:	cmp	r3, r2
   173dc:	bcc	173f0 <daemon@@Base+0x179c>
   173e0:	bl	1c494 <argp_parse@@Base+0x26a4>
   173e4:	cmp	r0, #0
   173e8:	beq	173fc <daemon@@Base+0x17a8>
   173ec:	ldr	r3, [r4, #28]
   173f0:	add	r2, r3, #1
   173f4:	str	r2, [r4, #28]
   173f8:	strb	r6, [r3]
   173fc:	cmp	r5, #0
   17400:	mov	r1, #1
   17404:	mov	r0, r4
   17408:	sub	r5, r5, #1
   1740c:	bgt	173d0 <daemon@@Base+0x177c>
   17410:	ldrd	r4, [sp]
   17414:	ldr	r6, [sp, #8]
   17418:	add	sp, sp, #12
   1741c:	pop	{pc}		; (ldr pc, [sp], #4)
   17420:	bl	1be28 <argp_parse@@Base+0x2038>
   17424:	b	173bc <daemon@@Base+0x1768>
   17428:	ldrd	r2, [r0, #24]
   1742c:	strd	r4, [sp, #-16]!
   17430:	mov	r5, r1
   17434:	mov	r4, r0
   17438:	ldr	r1, [r0, #16]
   1743c:	str	r6, [sp, #8]
   17440:	str	lr, [sp, #12]
   17444:	sub	r2, r3, r2
   17448:	cmp	r2, r1
   1744c:	movls	ip, r3
   17450:	bhi	174f4 <daemon@@Base+0x18a0>
   17454:	ldr	r0, [r4, #8]
   17458:	ldr	r1, [r4, #20]
   1745c:	ldr	r2, [r4, #32]
   17460:	cmp	r1, #0
   17464:	addge	r5, r5, r1
   17468:	cmp	r5, r0
   1746c:	bcc	174b4 <daemon@@Base+0x1860>
   17470:	cmp	r3, r2
   17474:	bcs	17498 <daemon@@Base+0x1844>
   17478:	add	r1, r3, #1
   1747c:	mov	r2, #10
   17480:	str	r1, [r4, #28]
   17484:	strb	r2, [r3]
   17488:	ldrd	r4, [sp]
   1748c:	ldr	r6, [sp, #8]
   17490:	add	sp, sp, #12
   17494:	pop	{pc}		; (ldr pc, [sp], #4)
   17498:	mov	r1, #1
   1749c:	mov	r0, r4
   174a0:	bl	1c494 <argp_parse@@Base+0x26a4>
   174a4:	cmp	r0, #0
   174a8:	beq	17488 <daemon@@Base+0x1834>
   174ac:	ldr	r3, [r4, #28]
   174b0:	b	17478 <daemon@@Base+0x1824>
   174b4:	cmp	r3, r2
   174b8:	bcc	174d4 <daemon@@Base+0x1880>
   174bc:	mov	r1, #1
   174c0:	mov	r0, r4
   174c4:	bl	1c494 <argp_parse@@Base+0x26a4>
   174c8:	cmp	r0, #0
   174cc:	beq	17488 <daemon@@Base+0x1834>
   174d0:	ldr	ip, [r4, #28]
   174d4:	add	r2, ip, #1
   174d8:	mov	r3, #32
   174dc:	str	r2, [r4, #28]
   174e0:	strb	r3, [ip]
   174e4:	ldrd	r4, [sp]
   174e8:	ldr	r6, [sp, #8]
   174ec:	add	sp, sp, #12
   174f0:	pop	{pc}		; (ldr pc, [sp], #4)
   174f4:	bl	1be28 <argp_parse@@Base+0x2038>
   174f8:	ldr	r3, [r4, #28]
   174fc:	mov	ip, r3
   17500:	b	17454 <daemon@@Base+0x1800>
   17504:	strd	r4, [sp, #-16]!
   17508:	ldr	r5, [r0, #8]
   1750c:	str	r6, [sp, #8]
   17510:	str	lr, [sp, #12]
   17514:	cmp	r5, #0
   17518:	beq	1756c <daemon@@Base+0x1918>
   1751c:	ldr	r2, [r0, #12]
   17520:	ldr	r1, [r1, #12]
   17524:	orr	r2, r2, r1
   17528:	tst	r2, #16
   1752c:	bne	17558 <daemon@@Base+0x1904>
   17530:	tst	r2, #1
   17534:	mov	r6, r3
   17538:	mov	r4, r0
   1753c:	beq	1757c <daemon@@Base+0x1928>
   17540:	movw	r1, #58596	; 0xe4e4
   17544:	movt	r1, #1
   17548:	ldr	r2, [r4, #4]
   1754c:	mov	r3, r5
   17550:	mov	r0, r6
   17554:	bl	1c4b4 <argp_parse@@Base+0x26c4>
   17558:	ldrd	r4, [sp]
   1755c:	mov	r0, #0
   17560:	ldr	r6, [sp, #8]
   17564:	add	sp, sp, #12
   17568:	pop	{pc}		; (ldr pc, [sp], #4)
   1756c:	ldr	r5, [r1, #8]
   17570:	cmp	r5, #0
   17574:	beq	17558 <daemon@@Base+0x1904>
   17578:	b	1751c <daemon@@Base+0x18c8>
   1757c:	mov	r0, r5
   17580:	bl	118e8 <strlen@plt>
   17584:	add	r1, r0, #6
   17588:	mov	r0, r6
   1758c:	bl	17428 <daemon@@Base+0x17d4>
   17590:	mov	r3, r5
   17594:	mov	r0, r6
   17598:	ldr	r2, [r4, #4]
   1759c:	movw	r1, #58608	; 0xe4f0
   175a0:	movt	r1, #1
   175a4:	bl	1c4b4 <argp_parse@@Base+0x26c4>
   175a8:	b	17558 <daemon@@Base+0x1904>
   175ac:	strd	r4, [sp, #-36]!	; 0xffffffdc
   175b0:	mov	r4, r3
   175b4:	ldr	ip, [r0, #8]
   175b8:	ldr	r3, [r0, #20]
   175bc:	cmp	r3, #0
   175c0:	ldr	r3, [r0, #16]
   175c4:	strd	r6, [sp, #8]
   175c8:	strd	r8, [sp, #16]
   175cc:	mov	r8, r2
   175d0:	ldr	r2, [r2]
   175d4:	strd	sl, [sp, #24]
   175d8:	mov	sl, r1
   175dc:	str	lr, [sp, #32]
   175e0:	sub	sp, sp, #28
   175e4:	ldr	r7, [sp, #64]	; 0x40
   175e8:	str	r3, [sp, #8]
   175ec:	str	ip, [sp, #12]
   175f0:	str	r2, [sp, #16]
   175f4:	beq	177c4 <daemon@@Base+0x1b70>
   175f8:	mov	r2, r0
   175fc:	mov	r1, #6
   17600:	movt	r1, #512	; 0x200
   17604:	mov	r3, sl
   17608:	mov	r0, ip
   1760c:	bl	165f8 <daemon@@Base+0x9a4>
   17610:	mov	r9, r0
   17614:	cmp	r9, #0
   17618:	beq	17794 <daemon@@Base+0x1b40>
   1761c:	mov	r1, #10
   17620:	mov	r0, r9
   17624:	bl	116cc <strchrnul@plt>
   17628:	ldrb	r3, [r0]
   1762c:	mov	r5, r0
   17630:	cmp	r3, #0
   17634:	moveq	r6, r9
   17638:	streq	r3, [sp, #20]
   1763c:	beq	1768c <daemon@@Base+0x1a38>
   17640:	ldr	r3, [sp, #16]
   17644:	ldrb	r3, [r3]
   17648:	cmp	r3, #0
   1764c:	beq	177e4 <daemon@@Base+0x1b90>
   17650:	mov	fp, #0
   17654:	mov	r5, r3
   17658:	add	r6, r0, #1
   1765c:	add	fp, fp, #1
   17660:	mov	r0, r6
   17664:	mov	r1, #10
   17668:	bl	116cc <strchrnul@plt>
   1766c:	cmp	fp, r5
   17670:	bne	17658 <daemon@@Base+0x1a04>
   17674:	mov	r5, r0
   17678:	ldr	r3, [r8]
   1767c:	mov	r2, #1
   17680:	str	r2, [sp, #20]
   17684:	add	r3, r3, r2
   17688:	str	r3, [r8]
   1768c:	add	r1, r5, #1
   17690:	mov	r0, r7
   17694:	sub	r1, r1, r6
   17698:	sub	fp, r5, r6
   1769c:	bl	17428 <daemon@@Base+0x17d4>
   176a0:	ldr	r0, [r7, #28]
   176a4:	ldr	r2, [r7, #32]
   176a8:	add	r3, r0, fp
   176ac:	cmp	r2, r3
   176b0:	bcs	176cc <daemon@@Base+0x1a78>
   176b4:	mov	r1, fp
   176b8:	mov	r0, r7
   176bc:	bl	1c494 <argp_parse@@Base+0x26a4>
   176c0:	cmp	r0, #0
   176c4:	beq	176e4 <daemon@@Base+0x1a90>
   176c8:	ldr	r0, [r7, #28]
   176cc:	mov	r2, fp
   176d0:	mov	r1, r6
   176d4:	bl	11714 <memcpy@plt>
   176d8:	ldr	r3, [r7, #28]
   176dc:	add	fp, r3, fp
   176e0:	str	fp, [r7, #28]
   176e4:	ldr	r3, [sp, #12]
   176e8:	cmp	r3, r9
   176ec:	beq	176f8 <daemon@@Base+0x1aa4>
   176f0:	mov	r0, r9
   176f4:	bl	1afbc <argp_parse@@Base+0x11cc>
   176f8:	ldr	r3, [sp, #8]
   176fc:	cmp	r3, #0
   17700:	beq	17744 <daemon@@Base+0x1af0>
   17704:	ldr	r2, [r3]
   17708:	cmp	r2, #0
   1770c:	beq	17744 <daemon@@Base+0x1af0>
   17710:	ldr	r6, [sp, #8]
   17714:	mov	r3, r4
   17718:	mov	r0, r2
   1771c:	mov	r1, sl
   17720:	str	r7, [sp]
   17724:	mov	r2, r8
   17728:	bl	175ac <daemon@@Base+0x1958>
   1772c:	ldr	r2, [r6, #16]!
   17730:	clz	r3, r0
   17734:	lsr	r3, r3, #5
   17738:	cmp	r2, #0
   1773c:	bne	17718 <daemon@@Base+0x1ac4>
   17740:	mov	r4, r3
   17744:	ldr	r3, [sp, #20]
   17748:	cmp	r4, #0
   1774c:	moveq	r3, #0
   17750:	cmp	r3, #0
   17754:	beq	177b8 <daemon@@Base+0x1b64>
   17758:	ldrb	r3, [r5]
   1775c:	ldr	r2, [sp, #16]
   17760:	cmp	r3, #0
   17764:	ldrb	r0, [r2]
   17768:	beq	177cc <daemon@@Base+0x1b78>
   1776c:	add	r4, r0, #1
   17770:	mov	r0, #1
   17774:	strb	r4, [r2]
   17778:	add	sp, sp, #28
   1777c:	ldrd	r4, [sp]
   17780:	ldrd	r6, [sp, #8]
   17784:	ldrd	r8, [sp, #16]
   17788:	ldrd	sl, [sp, #24]
   1778c:	add	sp, sp, #32
   17790:	pop	{pc}		; (ldr pc, [sp], #4)
   17794:	ldr	r3, [sp, #8]
   17798:	cmp	r3, #0
   1779c:	beq	177b8 <daemon@@Base+0x1b64>
   177a0:	ldr	r3, [sp, #8]
   177a4:	ldr	r2, [r3]
   177a8:	cmp	r2, #0
   177ac:	movne	r5, r9
   177b0:	strne	r5, [sp, #20]
   177b4:	bne	17710 <daemon@@Base+0x1abc>
   177b8:	clz	r0, r4
   177bc:	lsr	r0, r0, #5
   177c0:	b	17778 <daemon@@Base+0x1b24>
   177c4:	ldr	r9, [sp, #12]
   177c8:	b	17614 <daemon@@Base+0x19c0>
   177cc:	cmp	r0, #0
   177d0:	beq	17778 <daemon@@Base+0x1b24>
   177d4:	ldr	r2, [sp, #16]
   177d8:	mov	r0, r3
   177dc:	strb	r3, [r2]
   177e0:	b	17778 <daemon@@Base+0x1b24>
   177e4:	mov	r6, r9
   177e8:	b	17678 <daemon@@Base+0x1a24>
   177ec:	cmp	r1, #0
   177f0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   177f4:	strd	r6, [sp, #8]
   177f8:	mov	r6, r2
   177fc:	strd	r8, [sp, #16]
   17800:	mov	r8, r0
   17804:	strd	sl, [sp, #24]
   17808:	str	lr, [sp, #32]
   1780c:	sub	sp, sp, #12
   17810:	beq	1783c <daemon@@Base+0x1be8>
   17814:	ldr	r3, [r1, #20]
   17818:	cmp	r3, #0
   1781c:	beq	1783c <daemon@@Base+0x1be8>
   17820:	mov	r2, r1
   17824:	mov	r1, #3
   17828:	movt	r1, #512	; 0x200
   1782c:	ldr	r3, [r6, #16]
   17830:	bl	165f8 <daemon@@Base+0x9a4>
   17834:	mov	r4, r0
   17838:	b	17840 <daemon@@Base+0x1bec>
   1783c:	mov	r4, r8
   17840:	cmp	r4, #0
   17844:	beq	17860 <daemon@@Base+0x1c0c>
   17848:	ldrb	r2, [r4]
   1784c:	ldr	r3, [r6, #8]
   17850:	cmp	r2, #0
   17854:	bne	1788c <daemon@@Base+0x1c38>
   17858:	mov	r2, #1
   1785c:	str	r2, [r3, #4]
   17860:	cmp	r8, r4
   17864:	beq	1796c <daemon@@Base+0x1d18>
   17868:	mov	r0, r4
   1786c:	add	sp, sp, #12
   17870:	ldrd	r4, [sp]
   17874:	ldrd	r6, [sp, #8]
   17878:	ldrd	r8, [sp, #16]
   1787c:	ldrd	sl, [sp, #24]
   17880:	ldr	lr, [sp, #32]
   17884:	add	sp, sp, #36	; 0x24
   17888:	b	1afbc <argp_parse@@Base+0x11cc>
   1788c:	ldr	r3, [r3]
   17890:	ldr	r5, [r6, #4]
   17894:	cmp	r3, #0
   17898:	beq	178d8 <daemon@@Base+0x1c84>
   1789c:	ldr	r3, [r5, #28]
   178a0:	ldr	r2, [r5, #32]
   178a4:	cmp	r3, r2
   178a8:	bcc	178c4 <daemon@@Base+0x1c70>
   178ac:	mov	r1, #1
   178b0:	mov	r0, r5
   178b4:	bl	1c494 <argp_parse@@Base+0x26a4>
   178b8:	cmp	r0, #0
   178bc:	ldrne	r3, [r5, #28]
   178c0:	beq	178d4 <daemon@@Base+0x1c80>
   178c4:	add	r1, r3, #1
   178c8:	mov	r2, #10
   178cc:	str	r1, [r5, #28]
   178d0:	strb	r2, [r3]
   178d4:	ldr	r5, [r6, #4]
   178d8:	movw	r9, #62844	; 0xf57c
   178dc:	movt	r9, #2
   178e0:	mov	r0, r5
   178e4:	ldr	r1, [r9, #24]
   178e8:	bl	17390 <daemon@@Base+0x173c>
   178ec:	ldr	r5, [r6, #4]
   178f0:	ldr	sl, [r9, #24]
   178f4:	ldr	r1, [r5, #16]
   178f8:	ldr	r3, [r5, #24]
   178fc:	ldr	r7, [r5, #28]
   17900:	sub	r3, r7, r3
   17904:	cmp	r3, r1
   17908:	movls	fp, r5
   1790c:	strls	sl, [r5, #4]
   17910:	bhi	17a08 <daemon@@Base+0x1db4>
   17914:	mov	r0, r4
   17918:	str	sl, [fp, #12]
   1791c:	bl	118e8 <strlen@plt>
   17920:	subs	r9, r0, #0
   17924:	bne	179b8 <daemon@@Base+0x1d64>
   17928:	ldr	r2, [r5, #16]
   1792c:	ldr	r3, [r5, #24]
   17930:	sub	r3, r7, r3
   17934:	cmp	r3, r2
   17938:	movls	r9, r5
   1793c:	bhi	179a4 <daemon@@Base+0x1d50>
   17940:	ldr	r3, [r9, #32]
   17944:	mov	r2, #0
   17948:	str	r2, [r5, #4]
   1794c:	cmp	r3, r7
   17950:	bls	17988 <daemon@@Base+0x1d34>
   17954:	add	r2, r7, #1
   17958:	mov	r3, #10
   1795c:	str	r2, [r9, #28]
   17960:	strb	r3, [r7]
   17964:	ldr	r3, [r6, #8]
   17968:	b	17858 <daemon@@Base+0x1c04>
   1796c:	add	sp, sp, #12
   17970:	ldrd	r4, [sp]
   17974:	ldrd	r6, [sp, #8]
   17978:	ldrd	r8, [sp, #16]
   1797c:	ldrd	sl, [sp, #24]
   17980:	add	sp, sp, #32
   17984:	pop	{pc}		; (ldr pc, [sp], #4)
   17988:	mov	r1, #1
   1798c:	mov	r0, r9
   17990:	bl	1c494 <argp_parse@@Base+0x26a4>
   17994:	cmp	r0, #0
   17998:	ldrne	r7, [r9, #28]
   1799c:	bne	17954 <daemon@@Base+0x1d00>
   179a0:	b	17964 <daemon@@Base+0x1d10>
   179a4:	mov	r0, r5
   179a8:	bl	1be28 <argp_parse@@Base+0x2038>
   179ac:	ldr	r9, [r6, #4]
   179b0:	ldr	r7, [r9, #28]
   179b4:	b	17940 <daemon@@Base+0x1cec>
   179b8:	ldr	r2, [r5, #32]
   179bc:	add	r3, r7, r9
   179c0:	cmp	r2, r3
   179c4:	bcs	179e0 <daemon@@Base+0x1d8c>
   179c8:	mov	r1, r9
   179cc:	mov	r0, r5
   179d0:	bl	1c494 <argp_parse@@Base+0x26a4>
   179d4:	cmp	r0, #0
   179d8:	beq	179fc <daemon@@Base+0x1da8>
   179dc:	ldr	r7, [r5, #28]
   179e0:	mov	r2, r9
   179e4:	mov	r0, r7
   179e8:	mov	r1, r4
   179ec:	bl	11714 <memcpy@plt>
   179f0:	ldr	r3, [r5, #28]
   179f4:	add	r9, r3, r9
   179f8:	str	r9, [r5, #28]
   179fc:	ldr	r5, [r6, #4]
   17a00:	ldr	r7, [r5, #28]
   17a04:	b	17928 <daemon@@Base+0x1cd4>
   17a08:	mov	r0, r5
   17a0c:	str	sl, [sp, #4]
   17a10:	bl	1be28 <argp_parse@@Base+0x2038>
   17a14:	ldr	fp, [r6, #4]
   17a18:	ldr	r2, [sp, #4]
   17a1c:	ldr	sl, [r9, #24]
   17a20:	ldr	r1, [fp, #16]
   17a24:	ldr	r3, [fp, #24]
   17a28:	ldr	r7, [fp, #28]
   17a2c:	str	r2, [r5, #4]
   17a30:	sub	r3, r7, r3
   17a34:	cmp	r3, r1
   17a38:	bls	17a50 <daemon@@Base+0x1dfc>
   17a3c:	mov	r0, fp
   17a40:	bl	1be28 <argp_parse@@Base+0x2038>
   17a44:	ldr	r5, [r6, #4]
   17a48:	ldr	r7, [r5, #28]
   17a4c:	b	17914 <daemon@@Base+0x1cc0>
   17a50:	mov	r5, fp
   17a54:	b	17914 <daemon@@Base+0x1cc0>
   17a58:	ldr	r3, [r1, #12]
   17a5c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17a60:	mov	r4, r1
   17a64:	ldr	r5, [r1, #4]
   17a68:	strd	r6, [sp, #8]
   17a6c:	mov	r7, r0
   17a70:	str	r8, [sp, #16]
   17a74:	cmp	r3, #0
   17a78:	str	lr, [sp, #20]
   17a7c:	beq	17ba8 <daemon@@Base+0x1f54>
   17a80:	ldr	r2, [r1]
   17a84:	ldr	r3, [r1, #8]
   17a88:	ldr	r6, [r2, #16]
   17a8c:	ldr	r8, [r3]
   17a90:	ldr	r3, [r3, #4]
   17a94:	cmp	r3, #0
   17a98:	cmpne	r8, #0
   17a9c:	bne	17b50 <daemon@@Base+0x1efc>
   17aa0:	cmp	r6, #0
   17aa4:	beq	17b28 <daemon@@Base+0x1ed4>
   17aa8:	ldr	r0, [r6]
   17aac:	cmp	r0, #0
   17ab0:	beq	17b28 <daemon@@Base+0x1ed4>
   17ab4:	ldrb	r3, [r0]
   17ab8:	cmp	r3, #0
   17abc:	beq	17b28 <daemon@@Base+0x1ed4>
   17ac0:	cmp	r8, #0
   17ac4:	beq	17af4 <daemon@@Base+0x1ea0>
   17ac8:	ldr	r3, [r8, #16]
   17acc:	cmp	r3, r6
   17ad0:	beq	17b28 <daemon@@Base+0x1ed4>
   17ad4:	cmp	r3, #0
   17ad8:	beq	17af4 <daemon@@Base+0x1ea0>
   17adc:	ldr	r3, [r3, #12]
   17ae0:	cmp	r3, #0
   17ae4:	cmpne	r6, r3
   17ae8:	bne	17adc <daemon@@Base+0x1e88>
   17aec:	cmp	r6, r3
   17af0:	beq	17b28 <daemon@@Base+0x1ed4>
   17af4:	mov	r2, r4
   17af8:	ldr	r1, [r6, #16]
   17afc:	ldr	r8, [r5, #12]
   17b00:	bl	177ec <daemon@@Base+0x1b98>
   17b04:	ldr	r6, [r4, #4]
   17b08:	ldr	r2, [r6, #16]
   17b0c:	ldr	r1, [r6, #24]
   17b10:	ldr	r3, [r6, #28]
   17b14:	sub	r3, r3, r1
   17b18:	cmp	r3, r2
   17b1c:	movls	r5, r6
   17b20:	bhi	17bf8 <daemon@@Base+0x1fa4>
   17b24:	str	r8, [r6, #12]
   17b28:	mov	r3, #0
   17b2c:	str	r3, [r4, #12]
   17b30:	mov	r1, r7
   17b34:	mov	r0, r5
   17b38:	ldrd	r4, [sp]
   17b3c:	ldrd	r6, [sp, #8]
   17b40:	ldr	r8, [sp, #16]
   17b44:	ldr	lr, [sp, #20]
   17b48:	add	sp, sp, #24
   17b4c:	b	17390 <daemon@@Base+0x173c>
   17b50:	ldr	r2, [r2, #12]
   17b54:	ldr	r3, [r8, #12]
   17b58:	cmp	r2, r3
   17b5c:	beq	17aa0 <daemon@@Base+0x1e4c>
   17b60:	ldr	r3, [r5, #28]
   17b64:	ldr	r2, [r5, #32]
   17b68:	cmp	r3, r2
   17b6c:	bcc	17b88 <daemon@@Base+0x1f34>
   17b70:	mov	r1, #1
   17b74:	mov	r0, r5
   17b78:	bl	1c494 <argp_parse@@Base+0x26a4>
   17b7c:	cmp	r0, #0
   17b80:	ldrne	r3, [r5, #28]
   17b84:	beq	17b98 <daemon@@Base+0x1f44>
   17b88:	add	r1, r3, #1
   17b8c:	mov	r2, #10
   17b90:	str	r1, [r5, #28]
   17b94:	strb	r2, [r3]
   17b98:	cmp	r6, #0
   17b9c:	ldr	r5, [r4, #4]
   17ba0:	bne	17aa8 <daemon@@Base+0x1e54>
   17ba4:	b	17b28 <daemon@@Base+0x1ed4>
   17ba8:	ldr	r3, [r5, #28]
   17bac:	ldr	r1, [r5, #32]
   17bb0:	add	r2, r3, #2
   17bb4:	cmp	r1, r2
   17bb8:	bcs	17bd4 <daemon@@Base+0x1f80>
   17bbc:	mov	r1, #2
   17bc0:	mov	r0, r5
   17bc4:	bl	1c494 <argp_parse@@Base+0x26a4>
   17bc8:	cmp	r0, #0
   17bcc:	beq	17bf0 <daemon@@Base+0x1f9c>
   17bd0:	ldr	r3, [r5, #28]
   17bd4:	movw	r2, #58620	; 0xe4fc
   17bd8:	movt	r2, #1
   17bdc:	ldrh	r2, [r2]
   17be0:	strh	r2, [r3]
   17be4:	ldr	r3, [r5, #28]
   17be8:	add	r3, r3, #2
   17bec:	str	r3, [r5, #28]
   17bf0:	ldr	r5, [r4, #4]
   17bf4:	b	17b30 <daemon@@Base+0x1edc>
   17bf8:	mov	r0, r6
   17bfc:	bl	1be28 <argp_parse@@Base+0x2038>
   17c00:	ldr	r5, [r4, #4]
   17c04:	b	17b24 <daemon@@Base+0x1ed0>
   17c08:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17c0c:	strd	r6, [sp, #8]
   17c10:	mov	r7, r0
   17c14:	ldr	r6, [r0, #12]
   17c18:	strd	r8, [sp, #16]
   17c1c:	mov	r8, r2
   17c20:	strd	sl, [sp, #24]
   17c24:	mov	sl, r3
   17c28:	mov	fp, r1
   17c2c:	ldr	r3, [r0, #16]
   17c30:	str	lr, [sp, #32]
   17c34:	sub	sp, sp, #28
   17c38:	cmp	r6, #0
   17c3c:	ldr	r5, [sp, #68]	; 0x44
   17c40:	str	r3, [sp, #8]
   17c44:	ldr	r3, [r0, #20]
   17c48:	beq	17fb8 <daemon@@Base+0x2364>
   17c4c:	mov	r1, #11
   17c50:	mov	r0, r6
   17c54:	str	r3, [sp, #12]
   17c58:	bl	11900 <strchr@plt>
   17c5c:	cmp	r8, #0
   17c60:	mov	r9, r0
   17c64:	ldr	r3, [sp, #12]
   17c68:	bne	17eb4 <daemon@@Base+0x2260>
   17c6c:	cmp	r0, #0
   17c70:	beq	181b0 <daemon@@Base+0x255c>
   17c74:	subs	r1, r0, r6
   17c78:	movne	r4, #1
   17c7c:	moveq	r4, #0
   17c80:	cmp	r3, #0
   17c84:	str	r1, [sp, #20]
   17c88:	beq	18154 <daemon@@Base+0x2500>
   17c8c:	cmp	r1, #0
   17c90:	beq	181a4 <daemon@@Base+0x2550>
   17c94:	mov	r0, r6
   17c98:	mov	r4, #1
   17c9c:	bl	116fc <strndup@plt>
   17ca0:	adds	r3, r0, #0
   17ca4:	mov	r6, r0
   17ca8:	movne	r3, #1
   17cac:	str	r3, [sp, #16]
   17cb0:	mov	r1, fp
   17cb4:	mov	r0, r7
   17cb8:	bl	1ac70 <argp_parse@@Base+0xe80>
   17cbc:	mov	r2, r0
   17cc0:	mov	r1, r6
   17cc4:	ldr	r3, [r7, #20]
   17cc8:	mov	r0, #1
   17ccc:	movt	r0, #512	; 0x200
   17cd0:	str	r2, [sp, #12]
   17cd4:	blx	r3
   17cd8:	subs	r9, r0, #0
   17cdc:	moveq	r4, r9
   17ce0:	beq	17d70 <daemon@@Base+0x211c>
   17ce4:	cmp	r6, r9
   17ce8:	movne	r4, #0
   17cec:	andeq	r4, r4, #1
   17cf0:	cmp	sl, #0
   17cf4:	ldr	r2, [r5, #28]
   17cf8:	bne	17ffc <daemon@@Base+0x23a8>
   17cfc:	cmp	r4, #0
   17d00:	beq	17f58 <daemon@@Base+0x2304>
   17d04:	ldr	r3, [sp, #20]
   17d08:	ldr	r0, [r5, #32]
   17d0c:	add	r1, r2, r3
   17d10:	cmp	r0, r1
   17d14:	bcs	17f10 <daemon@@Base+0x22bc>
   17d18:	mov	r1, r3
   17d1c:	mov	r0, r5
   17d20:	bl	1c494 <argp_parse@@Base+0x26a4>
   17d24:	cmp	r0, #0
   17d28:	ldr	r2, [r5, #28]
   17d2c:	bne	17f10 <daemon@@Base+0x22bc>
   17d30:	ldr	r0, [r5, #16]
   17d34:	ldr	r1, [r5, #24]
   17d38:	sub	r2, r2, r1
   17d3c:	cmp	r2, r0
   17d40:	bhi	18044 <daemon@@Base+0x23f0>
   17d44:	ldr	r1, [r5, #4]
   17d48:	ldr	r2, [r5, #20]
   17d4c:	bic	r2, r2, r2, asr #31
   17d50:	cmp	r1, r2
   17d54:	bcc	18020 <daemon@@Base+0x23cc>
   17d58:	cmp	r9, r6
   17d5c:	moveq	r4, #1
   17d60:	beq	17d70 <daemon@@Base+0x211c>
   17d64:	mov	r0, r9
   17d68:	mov	r4, #1
   17d6c:	bl	1afbc <argp_parse@@Base+0x11cc>
   17d70:	ldr	r3, [sp, #16]
   17d74:	cmp	r3, #0
   17d78:	beq	17d90 <daemon@@Base+0x213c>
   17d7c:	ldr	r3, [r7, #20]
   17d80:	cmp	r3, #0
   17d84:	beq	17e10 <daemon@@Base+0x21bc>
   17d88:	mov	r0, r6
   17d8c:	bl	1afbc <argp_parse@@Base+0x11cc>
   17d90:	cmp	r8, #0
   17d94:	beq	17e10 <daemon@@Base+0x21bc>
   17d98:	ldr	r3, [r7, #20]
   17d9c:	cmp	r3, #0
   17da0:	beq	17e10 <daemon@@Base+0x21bc>
   17da4:	mov	r0, #4
   17da8:	movt	r0, #512	; 0x200
   17dac:	ldr	r2, [sp, #12]
   17db0:	mov	r1, #0
   17db4:	blx	r3
   17db8:	subs	r6, r0, #0
   17dbc:	beq	17e10 <daemon@@Base+0x21bc>
   17dc0:	orrs	r3, sl, r4
   17dc4:	bne	180e0 <daemon@@Base+0x248c>
   17dc8:	mov	r0, r6
   17dcc:	bl	118e8 <strlen@plt>
   17dd0:	subs	r4, r0, #0
   17dd4:	bne	18098 <daemon@@Base+0x2444>
   17dd8:	mov	r0, r6
   17ddc:	bl	1afbc <argp_parse@@Base+0x11cc>
   17de0:	ldr	r2, [r5, #16]
   17de4:	ldr	r1, [r5, #24]
   17de8:	ldr	r3, [r5, #28]
   17dec:	sub	r3, r3, r1
   17df0:	cmp	r3, r2
   17df4:	bhi	1812c <daemon@@Base+0x24d8>
   17df8:	ldr	r2, [r5, #4]
   17dfc:	ldr	r3, [r5, #20]
   17e00:	bic	r3, r3, r3, asr #31
   17e04:	cmp	r2, r3
   17e08:	bcc	18104 <daemon@@Base+0x24b0>
   17e0c:	mov	r4, #1
   17e10:	ldr	r7, [sp, #8]
   17e14:	cmp	r7, #0
   17e18:	beq	17e94 <daemon@@Base+0x2240>
   17e1c:	ldr	r3, [r7]
   17e20:	cmp	r3, #0
   17e24:	beq	17e94 <daemon@@Base+0x2240>
   17e28:	ldr	r2, [sp, #64]	; 0x40
   17e2c:	eor	r6, r2, #1
   17e30:	eor	r2, r4, #1
   17e34:	orr	r2, r2, r6
   17e38:	and	r6, r6, #1
   17e3c:	tst	r2, #1
   17e40:	beq	18164 <daemon@@Base+0x2510>
   17e44:	ldr	r9, [sp, #64]	; 0x40
   17e48:	orrs	r2, r4, sl
   17e4c:	mov	r0, r3
   17e50:	str	r9, [sp]
   17e54:	movne	r3, #1
   17e58:	moveq	r3, #0
   17e5c:	str	r5, [sp, #4]
   17e60:	mov	r2, r8
   17e64:	mov	r1, fp
   17e68:	bl	17c08 <daemon@@Base+0x1fb4>
   17e6c:	ldr	r3, [r7, #16]
   17e70:	orr	r4, r4, r0
   17e74:	add	r7, r7, #16
   17e78:	cmp	r3, #0
   17e7c:	beq	17e94 <daemon@@Base+0x2240>
   17e80:	cmp	r4, #0
   17e84:	movne	r2, r6
   17e88:	moveq	r2, #1
   17e8c:	cmp	r2, #0
   17e90:	bne	17e48 <daemon@@Base+0x21f4>
   17e94:	mov	r0, r4
   17e98:	add	sp, sp, #28
   17e9c:	ldrd	r4, [sp]
   17ea0:	ldrd	r6, [sp, #8]
   17ea4:	ldrd	r8, [sp, #16]
   17ea8:	ldrd	sl, [sp, #24]
   17eac:	add	sp, sp, #32
   17eb0:	pop	{pc}		; (ldr pc, [sp], #4)
   17eb4:	cmp	r0, #0
   17eb8:	beq	18138 <daemon@@Base+0x24e4>
   17ebc:	cmp	r3, #0
   17ec0:	add	r6, r0, #1
   17ec4:	movne	r1, fp
   17ec8:	movne	r0, r7
   17ecc:	beq	17f34 <daemon@@Base+0x22e0>
   17ed0:	bl	1ac70 <argp_parse@@Base+0xe80>
   17ed4:	ldr	r3, [r7, #20]
   17ed8:	str	r0, [sp, #12]
   17edc:	mov	r0, #2
   17ee0:	movt	r0, #512	; 0x200
   17ee4:	mov	r1, r6
   17ee8:	ldr	r2, [sp, #12]
   17eec:	blx	r3
   17ef0:	subs	r9, r0, #0
   17ef4:	moveq	r4, r9
   17ef8:	beq	17d90 <daemon@@Base+0x213c>
   17efc:	mov	r3, #0
   17f00:	mov	r4, r3
   17f04:	str	r3, [sp, #16]
   17f08:	str	r3, [sp, #20]
   17f0c:	b	17ce4 <daemon@@Base+0x2090>
   17f10:	ldr	r4, [sp, #20]
   17f14:	mov	r0, r2
   17f18:	mov	r1, r6
   17f1c:	mov	r2, r4
   17f20:	bl	11714 <memcpy@plt>
   17f24:	ldr	r2, [r5, #28]
   17f28:	add	r2, r2, r4
   17f2c:	str	r2, [r5, #28]
   17f30:	b	17d30 <daemon@@Base+0x20dc>
   17f34:	cmp	r6, #0
   17f38:	moveq	r4, r6
   17f3c:	beq	17e10 <daemon@@Base+0x21bc>
   17f40:	cmp	sl, #0
   17f44:	ldr	r2, [r5, #28]
   17f48:	bne	17fe8 <daemon@@Base+0x2394>
   17f4c:	mov	r9, r6
   17f50:	str	sl, [sp, #12]
   17f54:	str	sl, [sp, #16]
   17f58:	mov	r0, r9
   17f5c:	str	r2, [sp, #20]
   17f60:	bl	118e8 <strlen@plt>
   17f64:	subs	r4, r0, #0
   17f68:	ldr	r2, [sp, #20]
   17f6c:	beq	17d30 <daemon@@Base+0x20dc>
   17f70:	ldr	r0, [r5, #32]
   17f74:	add	r1, r2, r4
   17f78:	cmp	r0, r1
   17f7c:	bcs	17f98 <daemon@@Base+0x2344>
   17f80:	mov	r1, r4
   17f84:	mov	r0, r5
   17f88:	bl	1c494 <argp_parse@@Base+0x26a4>
   17f8c:	cmp	r0, #0
   17f90:	ldr	r2, [r5, #28]
   17f94:	beq	17d30 <daemon@@Base+0x20dc>
   17f98:	mov	r0, r2
   17f9c:	mov	r1, r9
   17fa0:	mov	r2, r4
   17fa4:	bl	11714 <memcpy@plt>
   17fa8:	ldr	r2, [r5, #28]
   17fac:	add	r2, r2, r4
   17fb0:	str	r2, [r5, #28]
   17fb4:	b	17d30 <daemon@@Base+0x20dc>
   17fb8:	cmp	r3, #0
   17fbc:	beq	1814c <daemon@@Base+0x24f8>
   17fc0:	bl	1ac70 <argp_parse@@Base+0xe80>
   17fc4:	mov	r2, #1
   17fc8:	movt	r2, #512	; 0x200
   17fcc:	str	r0, [sp, #12]
   17fd0:	cmp	r8, #0
   17fd4:	mov	r0, #2
   17fd8:	movt	r0, #512	; 0x200
   17fdc:	moveq	r0, r2
   17fe0:	ldr	r3, [r7, #20]
   17fe4:	b	17ee4 <daemon@@Base+0x2290>
   17fe8:	mov	r4, #0
   17fec:	mov	r9, r6
   17ff0:	str	r4, [sp, #12]
   17ff4:	str	r4, [sp, #16]
   17ff8:	str	r4, [sp, #20]
   17ffc:	ldr	r1, [r5, #32]
   18000:	cmp	r1, r2
   18004:	bls	18050 <daemon@@Base+0x23fc>
   18008:	add	r0, r2, #1
   1800c:	mov	r1, #10
   18010:	str	r0, [r5, #28]
   18014:	strb	r1, [r2]
   18018:	ldr	r2, [r5, #28]
   1801c:	b	17cfc <daemon@@Base+0x20a8>
   18020:	ldr	r2, [r5, #28]
   18024:	ldr	r1, [r5, #32]
   18028:	cmp	r2, r1
   1802c:	bcs	1806c <daemon@@Base+0x2418>
   18030:	add	r0, r2, #1
   18034:	mov	r1, #10
   18038:	str	r0, [r5, #28]
   1803c:	strb	r1, [r2]
   18040:	b	17d58 <daemon@@Base+0x2104>
   18044:	mov	r0, r5
   18048:	bl	1be28 <argp_parse@@Base+0x2038>
   1804c:	b	17d44 <daemon@@Base+0x20f0>
   18050:	mov	r1, #1
   18054:	mov	r0, r5
   18058:	bl	1c494 <argp_parse@@Base+0x26a4>
   1805c:	cmp	r0, #0
   18060:	ldr	r2, [r5, #28]
   18064:	bne	18008 <daemon@@Base+0x23b4>
   18068:	b	17cfc <daemon@@Base+0x20a8>
   1806c:	mov	r1, #1
   18070:	mov	r0, r5
   18074:	bl	1c494 <argp_parse@@Base+0x26a4>
   18078:	cmp	r0, #0
   1807c:	beq	17d58 <daemon@@Base+0x2104>
   18080:	ldr	r2, [r5, #28]
   18084:	mov	r1, #10
   18088:	add	r0, r2, #1
   1808c:	str	r0, [r5, #28]
   18090:	strb	r1, [r2]
   18094:	b	17d58 <daemon@@Base+0x2104>
   18098:	ldr	r0, [r5, #28]
   1809c:	ldr	r2, [r5, #32]
   180a0:	add	r3, r0, r4
   180a4:	cmp	r2, r3
   180a8:	bcs	180c4 <daemon@@Base+0x2470>
   180ac:	mov	r1, r4
   180b0:	mov	r0, r5
   180b4:	bl	1c494 <argp_parse@@Base+0x26a4>
   180b8:	cmp	r0, #0
   180bc:	beq	17dd8 <daemon@@Base+0x2184>
   180c0:	ldr	r0, [r5, #28]
   180c4:	mov	r2, r4
   180c8:	mov	r1, r6
   180cc:	bl	11714 <memcpy@plt>
   180d0:	ldr	r3, [r5, #28]
   180d4:	add	r4, r3, r4
   180d8:	str	r4, [r5, #28]
   180dc:	b	17dd8 <daemon@@Base+0x2184>
   180e0:	ldr	r3, [r5, #28]
   180e4:	ldr	r2, [r5, #32]
   180e8:	cmp	r3, r2
   180ec:	bcs	18188 <daemon@@Base+0x2534>
   180f0:	add	r1, r3, #1
   180f4:	mov	r2, #10
   180f8:	str	r1, [r5, #28]
   180fc:	strb	r2, [r3]
   18100:	b	17dc8 <daemon@@Base+0x2174>
   18104:	ldr	r3, [r5, #28]
   18108:	ldr	r2, [r5, #32]
   1810c:	cmp	r3, r2
   18110:	bcs	1816c <daemon@@Base+0x2518>
   18114:	add	r1, r3, #1
   18118:	mov	r2, #10
   1811c:	mov	r4, #1
   18120:	str	r1, [r5, #28]
   18124:	strb	r2, [r3]
   18128:	b	17e10 <daemon@@Base+0x21bc>
   1812c:	mov	r0, r5
   18130:	bl	1be28 <argp_parse@@Base+0x2038>
   18134:	b	17df8 <daemon@@Base+0x21a4>
   18138:	cmp	r3, #0
   1813c:	movne	r1, fp
   18140:	movne	r0, r7
   18144:	movne	r6, r9
   18148:	bne	17ed0 <daemon@@Base+0x227c>
   1814c:	mov	r4, r3
   18150:	b	17e10 <daemon@@Base+0x21bc>
   18154:	mov	r9, r6
   18158:	str	r8, [sp, #12]
   1815c:	str	r4, [sp, #16]
   18160:	b	17ce4 <daemon@@Base+0x2090>
   18164:	mov	r4, #1
   18168:	b	17e94 <daemon@@Base+0x2240>
   1816c:	mov	r1, #1
   18170:	mov	r0, r5
   18174:	bl	1c494 <argp_parse@@Base+0x26a4>
   18178:	cmp	r0, #0
   1817c:	beq	17e0c <daemon@@Base+0x21b8>
   18180:	ldr	r3, [r5, #28]
   18184:	b	18114 <daemon@@Base+0x24c0>
   18188:	mov	r1, #1
   1818c:	mov	r0, r5
   18190:	bl	1c494 <argp_parse@@Base+0x26a4>
   18194:	cmp	r0, #0
   18198:	beq	17dc8 <daemon@@Base+0x2174>
   1819c:	ldr	r3, [r5, #28]
   181a0:	b	180f0 <daemon@@Base+0x249c>
   181a4:	ldr	r4, [sp, #20]
   181a8:	str	r4, [sp, #16]
   181ac:	b	17cb0 <daemon@@Base+0x205c>
   181b0:	cmp	r3, #0
   181b4:	beq	17f40 <daemon@@Base+0x22ec>
   181b8:	mov	r1, fp
   181bc:	mov	r0, r7
   181c0:	bl	1ac70 <argp_parse@@Base+0xe80>
   181c4:	str	r0, [sp, #12]
   181c8:	mov	r0, #1
   181cc:	movt	r0, #512	; 0x200
   181d0:	ldr	r3, [r7, #20]
   181d4:	b	17ee4 <daemon@@Base+0x2290>

000181d8 <argp_failure@@Base>:
   181d8:	push	{r3}		; (str r3, [sp, #-4]!)
   181dc:	strd	r4, [sp, #-20]!	; 0xffffffec
   181e0:	subs	r5, r0, #0
   181e4:	strd	r6, [sp, #8]
   181e8:	mov	r7, r1
   181ec:	mov	r6, r2
   181f0:	str	lr, [sp, #16]
   181f4:	sub	sp, sp, #200	; 0xc8
   181f8:	beq	18354 <argp_failure@@Base+0x17c>
   181fc:	ldr	r3, [r5, #16]
   18200:	tst	r3, #2
   18204:	bne	18338 <argp_failure@@Base+0x160>
   18208:	ldr	r4, [r5, #44]	; 0x2c
   1820c:	cmp	r4, #0
   18210:	beq	18338 <argp_failure@@Base+0x160>
   18214:	mov	r0, r4
   18218:	bl	11a20 <flockfile@plt>
   1821c:	ldr	r0, [r5, #40]	; 0x28
   18220:	mov	r1, r4
   18224:	bl	1163c <fputs_unlocked@plt>
   18228:	ldr	r3, [sp, #220]	; 0xdc
   1822c:	cmp	r3, #0
   18230:	beq	1828c <argp_failure@@Base+0xb4>
   18234:	ldr	r3, [r4, #20]
   18238:	add	r1, sp, #224	; 0xe0
   1823c:	ldr	r2, [r4, #24]
   18240:	str	r1, [sp]
   18244:	cmp	r3, r2
   18248:	addcc	r1, r3, #1
   1824c:	movcc	r2, #58	; 0x3a
   18250:	strcc	r1, [r4, #20]
   18254:	strbcc	r2, [r3]
   18258:	bcs	183c4 <argp_failure@@Base+0x1ec>
   1825c:	ldr	r3, [r4, #20]
   18260:	ldr	r2, [r4, #24]
   18264:	cmp	r3, r2
   18268:	addcc	r1, r3, #1
   1826c:	movcc	r2, #32
   18270:	strcc	r1, [r4, #20]
   18274:	strbcc	r2, [r3]
   18278:	bcs	183b4 <argp_failure@@Base+0x1dc>
   1827c:	mov	r0, r4
   18280:	ldr	r2, [sp]
   18284:	ldr	r1, [sp, #220]	; 0xdc
   18288:	bl	119fc <vfprintf@plt>
   1828c:	cmp	r6, #0
   18290:	ldr	r3, [r4, #20]
   18294:	ldr	r2, [r4, #24]
   18298:	beq	182fc <argp_failure@@Base+0x124>
   1829c:	cmp	r2, r3
   182a0:	addhi	r1, r3, #1
   182a4:	movhi	r2, #58	; 0x3a
   182a8:	strhi	r1, [r4, #20]
   182ac:	strbhi	r2, [r3]
   182b0:	bls	183e4 <argp_failure@@Base+0x20c>
   182b4:	ldr	r3, [r4, #20]
   182b8:	ldr	r2, [r4, #24]
   182bc:	cmp	r3, r2
   182c0:	addcc	r1, r3, #1
   182c4:	movcc	r2, #32
   182c8:	strcc	r1, [r4, #20]
   182cc:	strbcc	r2, [r3]
   182d0:	bcs	183d4 <argp_failure@@Base+0x1fc>
   182d4:	mov	r2, #200	; 0xc8
   182d8:	mov	r1, sp
   182dc:	mov	r0, r6
   182e0:	bl	11930 <strerror_r@plt>
   182e4:	cmp	r0, #0
   182e8:	beq	18398 <argp_failure@@Base+0x1c0>
   182ec:	mov	r1, r4
   182f0:	bl	1163c <fputs_unlocked@plt>
   182f4:	ldr	r3, [r4, #20]
   182f8:	ldr	r2, [r4, #24]
   182fc:	cmp	r3, r2
   18300:	addcc	r1, r3, #1
   18304:	movcc	r2, #10
   18308:	strcc	r1, [r4, #20]
   1830c:	strbcc	r2, [r3]
   18310:	bcs	18388 <argp_failure@@Base+0x1b0>
   18314:	mov	r0, r4
   18318:	bl	117e0 <funlockfile@plt>
   1831c:	cmp	r7, #0
   18320:	beq	18338 <argp_failure@@Base+0x160>
   18324:	cmp	r5, #0
   18328:	beq	18380 <argp_failure@@Base+0x1a8>
   1832c:	ldr	r3, [r5, #16]
   18330:	tst	r3, #32
   18334:	beq	18380 <argp_failure@@Base+0x1a8>
   18338:	add	sp, sp, #200	; 0xc8
   1833c:	ldrd	r4, [sp]
   18340:	ldrd	r6, [sp, #8]
   18344:	ldr	lr, [sp, #16]
   18348:	add	sp, sp, #20
   1834c:	add	sp, sp, #4
   18350:	bx	lr
   18354:	movw	r3, #62912	; 0xf5c0
   18358:	movt	r3, #2
   1835c:	ldr	r4, [r3]
   18360:	cmp	r4, #0
   18364:	beq	18338 <argp_failure@@Base+0x160>
   18368:	mov	r0, r4
   1836c:	bl	11a20 <flockfile@plt>
   18370:	movw	r3, #62904	; 0xf5b8
   18374:	movt	r3, #2
   18378:	ldr	r0, [r3]
   1837c:	b	18220 <argp_failure@@Base+0x48>
   18380:	mov	r0, r7
   18384:	bl	118dc <exit@plt>
   18388:	mov	r1, #10
   1838c:	mov	r0, r4
   18390:	bl	119c0 <__overflow@plt>
   18394:	b	18314 <argp_failure@@Base+0x13c>
   18398:	mov	r0, r6
   1839c:	bl	11888 <strerror@plt>
   183a0:	cmp	r0, #0
   183a4:	movw	r3, #58624	; 0xe500
   183a8:	movt	r3, #1
   183ac:	moveq	r0, r3
   183b0:	b	182ec <argp_failure@@Base+0x114>
   183b4:	mov	r1, #32
   183b8:	mov	r0, r4
   183bc:	bl	119c0 <__overflow@plt>
   183c0:	b	1827c <argp_failure@@Base+0xa4>
   183c4:	mov	r1, #58	; 0x3a
   183c8:	mov	r0, r4
   183cc:	bl	119c0 <__overflow@plt>
   183d0:	b	1825c <argp_failure@@Base+0x84>
   183d4:	mov	r1, #32
   183d8:	mov	r0, r4
   183dc:	bl	119c0 <__overflow@plt>
   183e0:	b	182d4 <argp_failure@@Base+0xfc>
   183e4:	mov	r1, #58	; 0x3a
   183e8:	mov	r0, r4
   183ec:	bl	119c0 <__overflow@plt>
   183f0:	b	182b4 <argp_failure@@Base+0xdc>
   183f4:	cmp	r2, #0
   183f8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   183fc:	strd	r6, [sp, #8]
   18400:	strd	r8, [sp, #16]
   18404:	strd	sl, [sp, #24]
   18408:	add	fp, sp, #32
   1840c:	str	lr, [sp, #32]
   18410:	sub	sp, sp, #124	; 0x7c
   18414:	str	r2, [fp, #-128]	; 0xffffff80
   18418:	strd	r0, [fp, #-108]	; 0xffffff94
   1841c:	str	r3, [fp, #-100]	; 0xffffff9c
   18420:	beq	18894 <argp_failure@@Base+0x6bc>
   18424:	mov	r0, r2
   18428:	movw	r8, #62844	; 0xf57c
   1842c:	movt	r8, #2
   18430:	bl	11a20 <flockfile@plt>
   18434:	ldr	r3, [r8, #36]	; 0x24
   18438:	cmp	r3, #0
   1843c:	beq	188b0 <argp_failure@@Base+0x6d8>
   18440:	mov	r3, #0
   18444:	ldr	r0, [fp, #-128]	; 0xffffff80
   18448:	mov	r1, r3
   1844c:	ldr	r2, [r8, #32]
   18450:	bl	1bd90 <argp_parse@@Base+0x1fa0>
   18454:	subs	r7, r0, #0
   18458:	beq	193d0 <argp_failure@@Base+0x11f8>
   1845c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18460:	ands	r3, r3, #11
   18464:	streq	r3, [fp, #-136]	; 0xffffff78
   18468:	bne	18be0 <argp_failure@@Base+0xa08>
   1846c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18470:	ands	r4, r3, #3
   18474:	bne	18a70 <argp_failure@@Base+0x898>
   18478:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1847c:	tst	r3, #16
   18480:	bne	18a3c <argp_failure@@Base+0x864>
   18484:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18488:	tst	r3, #4
   1848c:	and	r5, r3, #8
   18490:	bne	189b8 <argp_failure@@Base+0x7e0>
   18494:	cmp	r5, #0
   18498:	beq	1882c <argp_failure@@Base+0x654>
   1849c:	ldr	r3, [fp, #-136]	; 0xffffff78
   184a0:	ldr	r3, [r3, #4]
   184a4:	cmp	r3, #0
   184a8:	str	r3, [fp, #-112]	; 0xffffff90
   184ac:	beq	1882c <argp_failure@@Base+0x654>
   184b0:	cmp	r4, #0
   184b4:	bne	189e8 <argp_failure@@Base+0x810>
   184b8:	ldr	r3, [fp, #-136]	; 0xffffff78
   184bc:	ldr	r3, [r3]
   184c0:	str	r4, [fp, #-88]	; 0xffffffa8
   184c4:	str	r4, [fp, #-84]	; 0xffffffac
   184c8:	str	r4, [fp, #-80]	; 0xffffffb0
   184cc:	mov	r2, r3
   184d0:	movw	r3, #59452	; 0xe83c
   184d4:	movt	r3, #1
   184d8:	mov	r5, r2
   184dc:	str	r3, [fp, #-140]	; 0xffffff74
   184e0:	movw	r3, #59072	; 0xe6c0
   184e4:	movt	r3, #1
   184e8:	str	r8, [fp, #-96]	; 0xffffffa0
   184ec:	str	r3, [fp, #-144]	; 0xffffff70
   184f0:	ldr	r0, [r7, #16]
   184f4:	ldr	r3, [r7, #24]
   184f8:	ldr	r2, [r7, #28]
   184fc:	ldr	r4, [r5]
   18500:	ldr	r9, [r5, #8]
   18504:	sub	r2, r2, r3
   18508:	cmp	r2, r0
   1850c:	bhi	190c0 <argp_failure@@Base+0xee8>
   18510:	ldr	r1, [r7, #4]
   18514:	mov	r3, #1
   18518:	ldr	r8, [r4, #12]
   1851c:	str	r1, [fp, #-120]	; 0xffffff88
   18520:	mov	r1, #0
   18524:	str	r1, [r7, #4]
   18528:	ldr	r1, [r7, #12]
   1852c:	str	r3, [fp, #-64]	; 0xffffffc0
   18530:	ldr	r3, [fp, #-104]	; 0xffffff98
   18534:	str	r1, [fp, #-116]	; 0xffffff8c
   18538:	ands	r1, r8, #8
   1853c:	str	r5, [fp, #-76]	; 0xffffffb4
   18540:	str	r1, [fp, #-124]	; 0xffffff84
   18544:	sub	r1, fp, #88	; 0x58
   18548:	str	r7, [fp, #-72]	; 0xffffffb8
   1854c:	str	r3, [fp, #-60]	; 0xffffffc4
   18550:	movne	r3, #0
   18554:	str	r1, [fp, #-68]	; 0xffffffbc
   18558:	strne	r3, [fp, #-124]	; 0xffffff84
   1855c:	bne	18594 <argp_failure@@Base+0x3bc>
   18560:	ldr	r1, [r5, #4]
   18564:	cmp	r1, #0
   18568:	beq	18594 <argp_failure@@Base+0x3bc>
   1856c:	add	r3, r4, #24
   18570:	ldr	ip, [r3, #-24]	; 0xffffffe8
   18574:	cmp	ip, #0
   18578:	beq	18588 <argp_failure@@Base+0x3b0>
   1857c:	ldr	ip, [r3, #-12]
   18580:	tst	ip, #2
   18584:	beq	191e0 <argp_failure@@Base+0x1008>
   18588:	subs	r1, r1, #1
   1858c:	add	r3, r3, #24
   18590:	bne	18570 <argp_failure@@Base+0x398>
   18594:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18598:	cmp	r2, r0
   1859c:	ldr	r6, [r3, #8]
   185a0:	bhi	1911c <argp_failure@@Base+0xf44>
   185a4:	str	r6, [r7, #12]
   185a8:	ldr	sl, [r5, #4]
   185ac:	cmp	sl, #0
   185b0:	movne	r6, r4
   185b4:	strne	r5, [fp, #-132]	; 0xffffff7c
   185b8:	movne	r5, r4
   185bc:	movne	r4, r9
   185c0:	beq	18618 <argp_failure@@Base+0x440>
   185c4:	ldr	r9, [r6, #12]
   185c8:	tst	r9, #8
   185cc:	bne	18604 <argp_failure@@Base+0x42c>
   185d0:	ldr	r8, [r6, #4]
   185d4:	sub	r2, r8, #1
   185d8:	cmp	r2, #254	; 0xfe
   185dc:	bhi	18604 <argp_failure@@Base+0x42c>
   185e0:	bl	118c4 <__ctype_b_loc@plt>
   185e4:	ldr	r1, [r0]
   185e8:	lsl	r2, r8, #1
   185ec:	ldrh	r2, [r1, r2]
   185f0:	tst	r2, #16384	; 0x4000
   185f4:	beq	18604 <argp_failure@@Base+0x42c>
   185f8:	ldrb	r2, [r4]
   185fc:	cmp	r8, r2
   18600:	beq	18d48 <argp_failure@@Base+0xb70>
   18604:	subs	sl, sl, #1
   18608:	add	r6, r6, #24
   1860c:	bne	185c4 <argp_failure@@Base+0x3ec>
   18610:	mov	r4, r5
   18614:	ldr	r5, [fp, #-132]	; 0xffffff7c
   18618:	ldr	r2, [r4, #12]
   1861c:	ldr	r1, [r7, #24]
   18620:	ldr	r3, [r7, #28]
   18624:	tst	r2, #8
   18628:	ldr	r2, [r7, #16]
   1862c:	sub	r3, r3, r1
   18630:	beq	18e38 <argp_failure@@Base+0xc60>
   18634:	cmp	r3, r2
   18638:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1863c:	ldr	r6, [r3, #16]
   18640:	bhi	1921c <argp_failure@@Base+0x1044>
   18644:	str	r6, [r7, #12]
   18648:	ldr	r8, [r5, #4]
   1864c:	cmp	r8, #0
   18650:	addne	r6, r4, #24
   18654:	bne	18668 <argp_failure@@Base+0x490>
   18658:	b	186f8 <argp_failure@@Base+0x520>
   1865c:	subs	r8, r8, #1
   18660:	add	r6, r6, #24
   18664:	beq	186f8 <argp_failure@@Base+0x520>
   18668:	ldr	r3, [r6, #-24]	; 0xffffffe8
   1866c:	cmp	r3, #0
   18670:	beq	1865c <argp_failure@@Base+0x484>
   18674:	ldr	r3, [r6, #-12]
   18678:	tst	r3, #2
   1867c:	bne	1865c <argp_failure@@Base+0x484>
   18680:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18684:	sub	r1, fp, #76	; 0x4c
   18688:	ldr	r0, [r3, #16]
   1868c:	bl	17a58 <daemon@@Base+0x1e04>
   18690:	ldr	sl, [r6, #-24]	; 0xffffffe8
   18694:	mov	r0, sl
   18698:	bl	118e8 <strlen@plt>
   1869c:	subs	r9, r0, #0
   186a0:	beq	1865c <argp_failure@@Base+0x484>
   186a4:	ldr	ip, [r7, #28]
   186a8:	mov	r1, r9
   186ac:	mov	r0, r7
   186b0:	ldr	lr, [r7, #32]
   186b4:	add	r2, ip, r9
   186b8:	cmp	lr, r2
   186bc:	bcs	186d0 <argp_failure@@Base+0x4f8>
   186c0:	bl	1c494 <argp_parse@@Base+0x26a4>
   186c4:	cmp	r0, #0
   186c8:	beq	1865c <argp_failure@@Base+0x484>
   186cc:	ldr	ip, [r7, #28]
   186d0:	mov	r2, r9
   186d4:	mov	r1, sl
   186d8:	mov	r0, ip
   186dc:	add	r6, r6, #24
   186e0:	bl	11714 <memcpy@plt>
   186e4:	ldr	r2, [r7, #28]
   186e8:	subs	r8, r8, #1
   186ec:	add	r3, r2, r9
   186f0:	str	r3, [r7, #28]
   186f4:	bne	18668 <argp_failure@@Base+0x490>
   186f8:	ldr	r2, [r7, #16]
   186fc:	ldr	r1, [r7, #24]
   18700:	ldr	r3, [r7, #28]
   18704:	sub	r3, r3, r1
   18708:	cmp	r3, r2
   1870c:	bhi	19110 <argp_failure@@Base+0xf38>
   18710:	ldr	r3, [fp, #-64]	; 0xffffffc0
   18714:	mov	r2, #0
   18718:	str	r2, [r7, #4]
   1871c:	cmp	r3, r2
   18720:	beq	18d58 <argp_failure@@Base+0xb80>
   18724:	ldr	r3, [r4, #12]
   18728:	tst	r3, #8
   1872c:	bne	18758 <argp_failure@@Base+0x580>
   18730:	ldr	r6, [r4, #4]
   18734:	sub	r3, r6, #1
   18738:	cmp	r3, #254	; 0xfe
   1873c:	bhi	18758 <argp_failure@@Base+0x580>
   18740:	bl	118c4 <__ctype_b_loc@plt>
   18744:	ldr	r3, [r0]
   18748:	lsl	r6, r6, #1
   1874c:	ldrh	r3, [r3, r6]
   18750:	tst	r3, #16384	; 0x4000
   18754:	bne	18764 <argp_failure@@Base+0x58c>
   18758:	ldr	r3, [r4]
   1875c:	cmp	r3, #0
   18760:	beq	1924c <argp_failure@@Base+0x1074>
   18764:	ldr	r2, [r7, #16]
   18768:	ldr	r1, [r7, #24]
   1876c:	ldr	r3, [r7, #28]
   18770:	sub	r3, r3, r1
   18774:	cmp	r3, r2
   18778:	bhi	190dc <argp_failure@@Base+0xf04>
   1877c:	ldr	r3, [fp, #-120]	; 0xffffff88
   18780:	str	r3, [r7, #4]
   18784:	ldr	r3, [fp, #-112]	; 0xffffff90
   18788:	add	r5, r5, #28
   1878c:	subs	r3, r3, #1
   18790:	str	r3, [fp, #-112]	; 0xffffff90
   18794:	ldr	r3, [fp, #-116]	; 0xffffff8c
   18798:	str	r3, [r7, #12]
   1879c:	bne	184f0 <argp_failure@@Base+0x318>
   187a0:	ldr	r8, [fp, #-96]	; 0xffffffa0
   187a4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   187a8:	cmp	r3, #0
   187ac:	beq	18828 <argp_failure@@Base+0x650>
   187b0:	ldr	r3, [r8, #4]
   187b4:	cmp	r3, #0
   187b8:	beq	18828 <argp_failure@@Base+0x650>
   187bc:	ldr	ip, [fp, #-104]	; 0xffffff98
   187c0:	cmp	ip, #0
   187c4:	beq	1958c <argp_failure@@Base+0x13b4>
   187c8:	ldr	r2, [ip]
   187cc:	cmp	r2, #0
   187d0:	beq	194fc <argp_failure@@Base+0x1324>
   187d4:	ldr	r3, [r2, #20]
   187d8:	cmp	r3, #0
   187dc:	beq	194fc <argp_failure@@Base+0x1324>
   187e0:	movw	r5, #58648	; 0xe518
   187e4:	movt	r5, #1
   187e8:	mov	r0, r5
   187ec:	mov	r1, #5
   187f0:	movt	r1, #512	; 0x200
   187f4:	mov	r3, ip
   187f8:	bl	165f8 <daemon@@Base+0x9a4>
   187fc:	subs	r4, r0, #0
   18800:	beq	18828 <argp_failure@@Base+0x650>
   18804:	ldrb	r3, [r4]
   18808:	subs	r5, r4, r5
   1880c:	movne	r5, #1
   18810:	cmp	r3, #0
   18814:	bne	19508 <argp_failure@@Base+0x1330>
   18818:	cmp	r5, #0
   1881c:	beq	18828 <argp_failure@@Base+0x650>
   18820:	mov	r0, r4
   18824:	bl	1afbc <argp_parse@@Base+0x11cc>
   18828:	mov	r4, #1
   1882c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18830:	tst	r3, #32
   18834:	bne	18ce8 <argp_failure@@Base+0xb10>
   18838:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1883c:	tst	r3, #64	; 0x40
   18840:	beq	18870 <argp_failure@@Base+0x698>
   18844:	movw	r5, #140	; 0x8c
   18848:	movt	r5, #3
   1884c:	ldr	r2, [r5]
   18850:	cmp	r2, #0
   18854:	beq	18870 <argp_failure@@Base+0x698>
   18858:	cmp	r4, #0
   1885c:	bne	18d20 <argp_failure@@Base+0xb48>
   18860:	movw	r1, #59104	; 0xe6e0
   18864:	movt	r1, #1
   18868:	mov	r0, r7
   1886c:	bl	1c4b4 <argp_parse@@Base+0x26c4>
   18870:	ldr	r0, [fp, #-128]	; 0xffffff80
   18874:	bl	117e0 <funlockfile@plt>
   18878:	ldr	r3, [fp, #-136]	; 0xffffff78
   1887c:	cmp	r3, #0
   18880:	beq	1888c <argp_failure@@Base+0x6b4>
   18884:	mov	r0, r3
   18888:	bl	162a4 <daemon@@Base+0x650>
   1888c:	mov	r0, r7
   18890:	bl	1c364 <argp_parse@@Base+0x2574>
   18894:	sub	sp, fp, #32
   18898:	ldrd	r4, [sp]
   1889c:	ldrd	r6, [sp, #8]
   188a0:	ldrd	r8, [sp, #16]
   188a4:	ldrd	sl, [sp, #24]
   188a8:	add	sp, sp, #32
   188ac:	pop	{pc}		; (ldr pc, [sp], #4)
   188b0:	movw	r0, #58764	; 0xe58c
   188b4:	movt	r0, #1
   188b8:	bl	11858 <getenv@plt>
   188bc:	subs	r5, r0, #0
   188c0:	ldrd	r2, [r8]
   188c4:	sub	ip, fp, #76	; 0x4c
   188c8:	ldrd	r0, [r8, #8]
   188cc:	str	ip, [fp, #-96]	; 0xffffffa0
   188d0:	ldrd	r6, [r8, #16]
   188d4:	strd	r2, [fp, #-76]	; 0xffffffb4
   188d8:	ldrd	r2, [r8, #24]
   188dc:	strd	r0, [fp, #-68]	; 0xffffffbc
   188e0:	ldrd	r0, [r8, #32]
   188e4:	strd	r6, [fp, #-60]	; 0xffffffc4
   188e8:	strd	r2, [fp, #-52]	; 0xffffffcc
   188ec:	strd	r0, [fp, #-44]	; 0xffffffd4
   188f0:	beq	18440 <argp_failure@@Base+0x268>
   188f4:	ldrb	sl, [r5]
   188f8:	movw	r3, #58828	; 0xe5cc
   188fc:	movt	r3, #1
   18900:	ldr	r9, [pc, #3300]	; 195ec <argp_failure@@Base+0x1414>
   18904:	str	r3, [fp, #-116]	; 0xffffff8c
   18908:	movw	r3, #58780	; 0xe59c
   1890c:	movt	r3, #1
   18910:	str	r3, [fp, #-120]	; 0xffffff88
   18914:	cmp	sl, #0
   18918:	beq	18950 <argp_failure@@Base+0x778>
   1891c:	bl	118c4 <__ctype_b_loc@plt>
   18920:	mov	r7, r0
   18924:	ldr	r1, [r0]
   18928:	b	18930 <argp_failure@@Base+0x758>
   1892c:	ldrb	sl, [r5, #1]!
   18930:	lsl	r3, sl, #1
   18934:	ldrh	r6, [r1, r3]
   18938:	tst	r6, #8192	; 0x2000
   1893c:	bne	1892c <argp_failure@@Base+0x754>
   18940:	ands	r2, r6, #1024	; 0x400
   18944:	bne	18fb4 <argp_failure@@Base+0xddc>
   18948:	cmp	sl, #0
   1894c:	bne	193dc <argp_failure@@Base+0x1204>
   18950:	ldr	r1, [pc, #3224]	; 195f0 <argp_failure@@Base+0x1418>
   18954:	ldr	lr, [fp, #-44]	; 0xffffffd4
   18958:	add	r3, r1, #16
   1895c:	cmp	r3, r9
   18960:	mov	r1, r3
   18964:	beq	192b8 <argp_failure@@Base+0x10e0>
   18968:	ldrb	r2, [r3, #14]
   1896c:	cmp	r2, #0
   18970:	bne	18958 <argp_failure@@Base+0x780>
   18974:	ldrb	r0, [r3, #15]
   18978:	sub	ip, fp, #36	; 0x24
   1897c:	cmp	r0, #32
   18980:	add	ip, ip, r0
   18984:	beq	18958 <argp_failure@@Base+0x780>
   18988:	ldr	r0, [ip, #-40]	; 0xffffffd8
   1898c:	cmp	r0, lr
   18990:	blt	18958 <argp_failure@@Base+0x780>
   18994:	movw	r0, #58952	; 0xe648
   18998:	movt	r0, #1
   1899c:	mov	r1, r2
   189a0:	stm	sp, {r0, r3}
   189a4:	movw	r3, #58900	; 0xe614
   189a8:	movt	r3, #1
   189ac:	ldr	r0, [fp, #-104]	; 0xffffff98
   189b0:	bl	181d8 <argp_failure@@Base>
   189b4:	b	18440 <argp_failure@@Base+0x268>
   189b8:	ldr	r3, [fp, #4]
   189bc:	movw	r1, #59016	; 0xe688
   189c0:	movt	r1, #1
   189c4:	mov	r0, r7
   189c8:	mov	r2, r3
   189cc:	bl	1c4b4 <argp_parse@@Base+0x26c4>
   189d0:	cmp	r5, #0
   189d4:	beq	18828 <argp_failure@@Base+0x650>
   189d8:	ldr	r3, [fp, #-136]	; 0xffffff78
   189dc:	ldr	r3, [r3, #4]
   189e0:	cmp	r3, #0
   189e4:	beq	18828 <argp_failure@@Base+0x650>
   189e8:	ldr	r3, [r7, #28]
   189ec:	ldr	r2, [r7, #32]
   189f0:	cmp	r3, r2
   189f4:	bcs	19444 <argp_failure@@Base+0x126c>
   189f8:	add	r1, r3, #1
   189fc:	mov	r2, #10
   18a00:	str	r1, [r7, #28]
   18a04:	strb	r2, [r3]
   18a08:	ldr	r3, [fp, #-136]	; 0xffffff78
   18a0c:	ldr	r3, [r3, #4]
   18a10:	str	r3, [fp, #-112]	; 0xffffff90
   18a14:	mov	r3, #0
   18a18:	ldr	r2, [fp, #-112]	; 0xffffff90
   18a1c:	cmp	r2, r3
   18a20:	ldr	r2, [fp, #-136]	; 0xffffff78
   18a24:	ldr	r2, [r2]
   18a28:	str	r3, [fp, #-88]	; 0xffffffa8
   18a2c:	str	r3, [fp, #-84]	; 0xffffffac
   18a30:	str	r3, [fp, #-80]	; 0xffffffb0
   18a34:	bne	184d0 <argp_failure@@Base+0x2f8>
   18a38:	b	18828 <argp_failure@@Base+0x650>
   18a3c:	mov	r0, #1
   18a40:	mov	r3, #0
   18a44:	ldr	r1, [fp, #-104]	; 0xffffff98
   18a48:	mov	r2, r3
   18a4c:	stm	sp, {r0, r7}
   18a50:	ldr	r0, [fp, #-108]	; 0xffffff94
   18a54:	bl	17c08 <daemon@@Base+0x1fb4>
   18a58:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18a5c:	orr	r4, r4, r0
   18a60:	tst	r3, #4
   18a64:	and	r5, r3, #8
   18a68:	beq	18494 <argp_failure@@Base+0x2bc>
   18a6c:	b	189b8 <argp_failure@@Base+0x7e0>
   18a70:	ldr	r3, [fp, #-108]	; 0xffffff94
   18a74:	movw	r2, #58992	; 0xe670
   18a78:	movt	r2, #1
   18a7c:	movw	sl, #58984	; 0xe668
   18a80:	movt	sl, #1
   18a84:	str	r2, [fp, #-120]	; 0xffffff88
   18a88:	mov	r4, #1
   18a8c:	ldr	r0, [r3, #8]
   18a90:	ldr	r1, [r3, #16]
   18a94:	movw	r3, #58976	; 0xe660
   18a98:	movt	r3, #1
   18a9c:	str	r3, [fp, #-124]	; 0xffffff84
   18aa0:	bl	1658c <daemon@@Base+0x938>
   18aa4:	add	r3, r0, #7
   18aa8:	mov	r2, r0
   18aac:	bic	r3, r3, #7
   18ab0:	mov	r1, #0
   18ab4:	sub	sp, sp, r3
   18ab8:	add	r9, sp, #8
   18abc:	mov	r0, r9
   18ac0:	bl	11954 <memset@plt>
   18ac4:	sub	r3, fp, #76	; 0x4c
   18ac8:	str	sl, [fp, #-116]	; 0xffffff8c
   18acc:	str	r9, [fp, #-112]	; 0xffffff90
   18ad0:	str	r3, [fp, #-96]	; 0xffffffa0
   18ad4:	ldr	r9, [fp, #-136]	; 0xffffff78
   18ad8:	ldr	sl, [fp, #-100]	; 0xffffff9c
   18adc:	b	18bb8 <argp_failure@@Base+0x9e0>
   18ae0:	cmp	r4, #0
   18ae4:	mov	r0, r7
   18ae8:	ldr	r1, [fp, #-116]	; 0xffffff8c
   18aec:	ldr	r3, [fp, #-112]	; 0xffffff90
   18af0:	ldrne	r2, [fp, #-124]	; 0xffffff84
   18af4:	ldreq	r2, [fp, #-120]	; 0xffffff88
   18af8:	ldr	r4, [r7, #12]
   18afc:	str	r5, [r7, #12]
   18b00:	str	r3, [fp, #-76]	; 0xffffffb4
   18b04:	ldr	r3, [fp, #4]
   18b08:	bl	1c4b4 <argp_parse@@Base+0x26c4>
   18b0c:	ldr	r2, [r7, #16]
   18b10:	ldr	r1, [r7, #24]
   18b14:	ldr	r3, [r7, #28]
   18b18:	ldr	r5, [r8, #28]
   18b1c:	sub	r3, r3, r1
   18b20:	cmp	r3, r2
   18b24:	bhi	18cdc <argp_failure@@Base+0xb04>
   18b28:	tst	sl, #2
   18b2c:	ldr	r6, [r7, #4]
   18b30:	str	r5, [r7, #4]
   18b34:	beq	18cc8 <argp_failure@@Base+0xaf0>
   18b38:	ldr	r3, [r9, #4]
   18b3c:	cmp	r3, #0
   18b40:	bne	19260 <argp_failure@@Base+0x1088>
   18b44:	mov	r3, #1
   18b48:	str	r7, [sp]
   18b4c:	ldrd	r0, [fp, #-108]	; 0xffffff94
   18b50:	ldr	r2, [fp, #-96]	; 0xffffffa0
   18b54:	bl	175ac <daemon@@Base+0x1958>
   18b58:	ldr	r1, [r7, #16]
   18b5c:	mov	r5, r0
   18b60:	ldrd	r2, [r7, #24]
   18b64:	sub	r2, r3, r2
   18b68:	cmp	r2, r1
   18b6c:	strls	r4, [r7, #12]
   18b70:	bhi	18c98 <argp_failure@@Base+0xac0>
   18b74:	ldr	r2, [r7, #32]
   18b78:	str	r6, [r7, #4]
   18b7c:	cmp	r2, r3
   18b80:	bhi	18b9c <argp_failure@@Base+0x9c4>
   18b84:	mov	r1, #1
   18b88:	mov	r0, r7
   18b8c:	bl	1c494 <argp_parse@@Base+0x26a4>
   18b90:	cmp	r0, #0
   18b94:	beq	18bac <argp_failure@@Base+0x9d4>
   18b98:	ldr	r3, [r7, #28]
   18b9c:	add	r1, r3, #1
   18ba0:	mov	r2, #10
   18ba4:	str	r1, [r7, #28]
   18ba8:	strb	r2, [r3]
   18bac:	cmp	r5, #0
   18bb0:	mov	r4, #0
   18bb4:	beq	18d08 <argp_failure@@Base+0xb30>
   18bb8:	ldr	r2, [r7, #16]
   18bbc:	ldr	r1, [r7, #24]
   18bc0:	ldr	r3, [r7, #28]
   18bc4:	ldr	r5, [r8, #28]
   18bc8:	sub	r3, r3, r1
   18bcc:	cmp	r3, r2
   18bd0:	bls	18ae0 <argp_failure@@Base+0x908>
   18bd4:	mov	r0, r7
   18bd8:	bl	1be28 <argp_parse@@Base+0x2038>
   18bdc:	b	18ae0 <argp_failure@@Base+0x908>
   18be0:	mov	r1, #0
   18be4:	ldr	r0, [fp, #-108]	; 0xffffff94
   18be8:	bl	16640 <daemon@@Base+0x9ec>
   18bec:	ldr	r5, [r0]
   18bf0:	mov	r6, r0
   18bf4:	movw	r2, #58960	; 0xe650
   18bf8:	movt	r2, #1
   18bfc:	ldr	r4, [r0, #4]
   18c00:	str	r6, [fp, #-136]	; 0xffffff78
   18c04:	mov	r0, r5
   18c08:	mov	r1, r4
   18c0c:	bl	164e8 <daemon@@Base+0x894>
   18c10:	cmp	r0, #0
   18c14:	beq	18c24 <argp_failure@@Base+0xa4c>
   18c18:	mvn	r3, #0
   18c1c:	str	r3, [r0, #12]
   18c20:	ldr	r4, [r6, #4]
   18c24:	movw	r2, #58968	; 0xe658
   18c28:	movt	r2, #1
   18c2c:	mov	r1, r4
   18c30:	mov	r0, r5
   18c34:	bl	164e8 <daemon@@Base+0x894>
   18c38:	cmp	r0, #0
   18c3c:	beq	18c50 <argp_failure@@Base+0xa78>
   18c40:	mvn	r3, #0
   18c44:	str	r3, [r0, #12]
   18c48:	ldr	r3, [fp, #-136]	; 0xffffff78
   18c4c:	ldr	r4, [r3, #4]
   18c50:	cmp	r4, #0
   18c54:	beq	1846c <argp_failure@@Base+0x294>
   18c58:	mov	r3, r5
   18c5c:	mov	r1, #0
   18c60:	str	r1, [r3, #24]
   18c64:	add	r1, r1, #1
   18c68:	add	r3, r3, #28
   18c6c:	cmp	r1, r4
   18c70:	bne	18c60 <argp_failure@@Base+0xa88>
   18c74:	mov	r0, r5
   18c78:	movw	r3, #28652	; 0x6fec
   18c7c:	movt	r3, #1
   18c80:	mov	r2, #28
   18c84:	bl	11a44 <qsort@plt>
   18c88:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18c8c:	ands	r4, r3, #3
   18c90:	beq	18478 <argp_failure@@Base+0x2a0>
   18c94:	b	18a70 <argp_failure@@Base+0x898>
   18c98:	mov	r0, r7
   18c9c:	bl	1be28 <argp_parse@@Base+0x2038>
   18ca0:	ldr	r1, [r7, #16]
   18ca4:	str	r4, [r7, #12]
   18ca8:	ldrd	r2, [r7, #24]
   18cac:	sub	r2, r3, r2
   18cb0:	cmp	r2, r1
   18cb4:	bls	18b74 <argp_failure@@Base+0x99c>
   18cb8:	mov	r0, r7
   18cbc:	bl	1be28 <argp_parse@@Base+0x2038>
   18cc0:	ldr	r3, [r7, #28]
   18cc4:	b	18b74 <argp_failure@@Base+0x99c>
   18cc8:	mov	r1, r7
   18ccc:	mov	r0, r9
   18cd0:	orr	sl, sl, #2
   18cd4:	bl	16e08 <daemon@@Base+0x11b4>
   18cd8:	b	18b44 <argp_failure@@Base+0x96c>
   18cdc:	mov	r0, r7
   18ce0:	bl	1be28 <argp_parse@@Base+0x2038>
   18ce4:	b	18b28 <argp_failure@@Base+0x950>
   18ce8:	mov	r2, #0
   18cec:	mov	r3, r4
   18cf0:	ldrd	r0, [fp, #-108]	; 0xffffff94
   18cf4:	stm	sp, {r2, r7}
   18cf8:	mov	r2, #1
   18cfc:	bl	17c08 <daemon@@Base+0x1fb4>
   18d00:	orr	r4, r4, r0
   18d04:	b	18838 <argp_failure@@Base+0x660>
   18d08:	str	sl, [fp, #-100]	; 0xffffff9c
   18d0c:	mov	r4, #1
   18d10:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18d14:	tst	r3, #16
   18d18:	beq	18484 <argp_failure@@Base+0x2ac>
   18d1c:	b	18a3c <argp_failure@@Base+0x864>
   18d20:	ldr	r3, [r7, #28]
   18d24:	ldr	r2, [r7, #32]
   18d28:	cmp	r3, r2
   18d2c:	bcs	19414 <argp_failure@@Base+0x123c>
   18d30:	add	r1, r3, #1
   18d34:	mov	r2, #10
   18d38:	str	r1, [r7, #28]
   18d3c:	strb	r2, [r3]
   18d40:	ldr	r2, [r5]
   18d44:	b	18860 <argp_failure@@Base+0x688>
   18d48:	tst	r9, #2
   18d4c:	beq	19130 <argp_failure@@Base+0xf58>
   18d50:	add	r4, r4, #1
   18d54:	b	18604 <argp_failure@@Base+0x42c>
   18d58:	ldr	r2, [r5, #20]
   18d5c:	ldr	r6, [r4, #16]
   18d60:	cmp	r2, #0
   18d64:	beq	19128 <argp_failure@@Base+0xf50>
   18d68:	ldr	r3, [r2, #20]
   18d6c:	cmp	r3, #0
   18d70:	beq	19128 <argp_failure@@Base+0xf50>
   18d74:	mov	r0, r6
   18d78:	ldr	r3, [fp, #-104]	; 0xffffff98
   18d7c:	ldr	r1, [r4, #4]
   18d80:	bl	165f8 <daemon@@Base+0x9a4>
   18d84:	mov	r4, r0
   18d88:	cmp	r4, #0
   18d8c:	beq	18f5c <argp_failure@@Base+0xd84>
   18d90:	ldrb	r3, [r4]
   18d94:	cmp	r3, #0
   18d98:	beq	18f4c <argp_failure@@Base+0xd74>
   18d9c:	ldr	r2, [r7, #16]
   18da0:	ldr	r1, [r7, #24]
   18da4:	ldr	r3, [r7, #28]
   18da8:	sub	r3, r3, r1
   18dac:	cmp	r3, r2
   18db0:	bhi	19364 <argp_failure@@Base+0x118c>
   18db4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18db8:	ldr	r9, [r7, #20]
   18dbc:	ldr	r8, [r3, #20]
   18dc0:	bic	r9, r9, r9, asr #31
   18dc4:	mov	sl, r8
   18dc8:	str	r8, [r7, #4]
   18dcc:	add	r3, r8, #3
   18dd0:	str	sl, [r7, #12]
   18dd4:	cmp	r3, r9
   18dd8:	bcc	19340 <argp_failure@@Base+0x1168>
   18ddc:	cmp	r8, r9
   18de0:	bhi	18eec <argp_failure@@Base+0xd14>
   18de4:	ldr	r3, [r7, #28]
   18de8:	ldr	r1, [r7, #32]
   18dec:	add	r2, r3, #3
   18df0:	cmp	r1, r2
   18df4:	bcs	18e10 <argp_failure@@Base+0xc38>
   18df8:	mov	r1, #3
   18dfc:	mov	r0, r7
   18e00:	bl	1c494 <argp_parse@@Base+0x26a4>
   18e04:	cmp	r0, #0
   18e08:	beq	18ef8 <argp_failure@@Base+0xd20>
   18e0c:	ldr	r3, [r7, #28]
   18e10:	movw	r2, #59100	; 0xe6dc
   18e14:	movt	r2, #1
   18e18:	ldrh	r1, [r2]
   18e1c:	ldrb	r2, [r2, #2]
   18e20:	strh	r1, [r3]
   18e24:	strb	r2, [r3, #2]
   18e28:	ldr	r3, [r7, #28]
   18e2c:	add	r3, r3, #3
   18e30:	str	r3, [r7, #28]
   18e34:	b	18ef8 <argp_failure@@Base+0xd20>
   18e38:	cmp	r3, r2
   18e3c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18e40:	ldr	r6, [r3, #12]
   18e44:	bhi	19200 <argp_failure@@Base+0x1028>
   18e48:	str	r6, [r7, #12]
   18e4c:	ldr	sl, [r5, #4]
   18e50:	cmp	sl, #0
   18e54:	beq	186f8 <argp_failure@@Base+0x520>
   18e58:	movw	r3, #59088	; 0xe6d0
   18e5c:	movt	r3, #1
   18e60:	movw	r8, #59080	; 0xe6c8
   18e64:	movt	r8, #1
   18e68:	movw	r9, #59096	; 0xe6d8
   18e6c:	movt	r9, #1
   18e70:	str	r3, [fp, #-124]	; 0xffffff84
   18e74:	add	r6, r4, #24
   18e78:	b	18e88 <argp_failure@@Base+0xcb0>
   18e7c:	subs	sl, sl, #1
   18e80:	add	r6, r6, #24
   18e84:	beq	186f8 <argp_failure@@Base+0x520>
   18e88:	ldr	r3, [r6, #-24]	; 0xffffffe8
   18e8c:	cmp	r3, #0
   18e90:	beq	18e7c <argp_failure@@Base+0xca4>
   18e94:	ldr	r3, [r6, #-12]
   18e98:	tst	r3, #2
   18e9c:	bne	18e7c <argp_failure@@Base+0xca4>
   18ea0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18ea4:	sub	r1, fp, #76	; 0x4c
   18ea8:	ldr	r0, [r3, #12]
   18eac:	bl	17a58 <daemon@@Base+0x1e04>
   18eb0:	mov	r1, r8
   18eb4:	mov	r0, r7
   18eb8:	ldr	r2, [r6, #-24]	; 0xffffffe8
   18ebc:	bl	1c4b4 <argp_parse@@Base+0x26c4>
   18ec0:	ldr	r3, [r4, #8]
   18ec4:	cmp	r3, #0
   18ec8:	beq	18e7c <argp_failure@@Base+0xca4>
   18ecc:	ldr	ip, [r4, #12]
   18ed0:	mov	r1, r9
   18ed4:	mov	r2, r3
   18ed8:	mov	r0, r7
   18edc:	tst	ip, #1
   18ee0:	ldrne	r1, [fp, #-124]	; 0xffffff84
   18ee4:	bl	1c4b4 <argp_parse@@Base+0x26c4>
   18ee8:	b	18e7c <argp_failure@@Base+0xca4>
   18eec:	mov	r1, r8
   18ef0:	mov	r0, r7
   18ef4:	bl	17390 <daemon@@Base+0x173c>
   18ef8:	mov	r0, r4
   18efc:	bl	118e8 <strlen@plt>
   18f00:	subs	r8, r0, #0
   18f04:	beq	18f4c <argp_failure@@Base+0xd74>
   18f08:	ldr	r0, [r7, #28]
   18f0c:	ldr	r2, [r7, #32]
   18f10:	add	r3, r0, r8
   18f14:	cmp	r2, r3
   18f18:	bcs	18f34 <argp_failure@@Base+0xd5c>
   18f1c:	mov	r1, r8
   18f20:	mov	r0, r7
   18f24:	bl	1c494 <argp_parse@@Base+0x26a4>
   18f28:	cmp	r0, #0
   18f2c:	beq	18f4c <argp_failure@@Base+0xd74>
   18f30:	ldr	r0, [r7, #28]
   18f34:	mov	r2, r8
   18f38:	mov	r1, r4
   18f3c:	bl	11714 <memcpy@plt>
   18f40:	ldr	r3, [r7, #28]
   18f44:	add	r8, r3, r8
   18f48:	str	r8, [r7, #28]
   18f4c:	cmp	r6, r4
   18f50:	beq	18f5c <argp_failure@@Base+0xd84>
   18f54:	mov	r0, r4
   18f58:	bl	1afbc <argp_parse@@Base+0x11cc>
   18f5c:	ldr	r1, [r7, #16]
   18f60:	ldrd	r2, [r7, #24]
   18f64:	sub	r2, r3, r2
   18f68:	cmp	r2, r1
   18f6c:	bhi	1920c <argp_failure@@Base+0x1034>
   18f70:	mov	r2, #0
   18f74:	str	r2, [r7, #4]
   18f78:	ldr	r2, [r7, #32]
   18f7c:	cmp	r2, r3
   18f80:	bhi	18f9c <argp_failure@@Base+0xdc4>
   18f84:	mov	r1, #1
   18f88:	mov	r0, r7
   18f8c:	bl	1c494 <argp_parse@@Base+0x26a4>
   18f90:	cmp	r0, #0
   18f94:	beq	18fac <argp_failure@@Base+0xdd4>
   18f98:	ldr	r3, [r7, #28]
   18f9c:	add	r1, r3, #1
   18fa0:	mov	r2, #10
   18fa4:	str	r1, [r7, #28]
   18fa8:	strb	r2, [r3]
   18fac:	str	r5, [fp, #-88]	; 0xffffffa8
   18fb0:	b	18764 <argp_failure@@Base+0x58c>
   18fb4:	cmp	sl, #95	; 0x5f
   18fb8:	cmpne	sl, #45	; 0x2d
   18fbc:	ubfx	r6, r6, #3, #1
   18fc0:	moveq	r3, #1
   18fc4:	movne	r3, #0
   18fc8:	orrs	r6, r3, r6
   18fcc:	beq	194f0 <argp_failure@@Base+0x1318>
   18fd0:	mov	r4, r5
   18fd4:	ldrb	r3, [r4, #1]!
   18fd8:	lsl	r2, r3, #1
   18fdc:	cmp	r3, #45	; 0x2d
   18fe0:	cmpne	r3, #95	; 0x5f
   18fe4:	moveq	ip, #1
   18fe8:	movne	ip, #0
   18fec:	ldrh	r2, [r1, r2]
   18ff0:	ubfx	r0, r2, #3, #1
   18ff4:	orrs	r0, ip, r0
   18ff8:	bne	18fd4 <argp_failure@@Base+0xdfc>
   18ffc:	tst	r2, #8192	; 0x2000
   19000:	sub	r6, r4, r5
   19004:	beq	1901c <argp_failure@@Base+0xe44>
   19008:	ldrb	r3, [r4, #1]!
   1900c:	lsl	r2, r3, #1
   19010:	ldrh	r2, [r1, r2]
   19014:	tst	r2, #8192	; 0x2000
   19018:	bne	19008 <argp_failure@@Base+0xe30>
   1901c:	cmp	r3, #44	; 0x2c
   19020:	cmpne	r3, #0
   19024:	beq	191ec <argp_failure@@Base+0x1014>
   19028:	cmp	r3, #61	; 0x3d
   1902c:	beq	19460 <argp_failure@@Base+0x1288>
   19030:	ldrb	r3, [r4]
   19034:	lsl	r3, r3, #1
   19038:	ldrh	r3, [r1, r3]
   1903c:	ands	r3, r3, #2048	; 0x800
   19040:	moveq	r7, r3
   19044:	streq	r7, [fp, #-112]	; 0xffffff90
   19048:	bne	19490 <argp_failure@@Base+0x12b8>
   1904c:	ldr	sl, [pc, #1436]	; 195f0 <argp_failure@@Base+0x1418>
   19050:	b	19060 <argp_failure@@Base+0xe88>
   19054:	add	sl, sl, #16
   19058:	cmp	sl, r9
   1905c:	beq	192f0 <argp_failure@@Base+0x1118>
   19060:	mov	r0, sl
   19064:	bl	118e8 <strlen@plt>
   19068:	cmp	r0, r6
   1906c:	bne	19054 <argp_failure@@Base+0xe7c>
   19070:	mov	r2, r6
   19074:	mov	r1, sl
   19078:	mov	r0, r5
   1907c:	bl	11aa4 <strncmp@plt>
   19080:	cmp	r0, #0
   19084:	bne	19054 <argp_failure@@Base+0xe7c>
   19088:	cmp	r7, #0
   1908c:	bne	19430 <argp_failure@@Base+0x1258>
   19090:	ldrb	r3, [sl, #15]
   19094:	sub	r2, fp, #36	; 0x24
   19098:	add	r3, r2, r3
   1909c:	ldr	r2, [fp, #-112]	; 0xffffff90
   190a0:	str	r2, [r3, #-40]	; 0xffffffd8
   190a4:	ldrb	sl, [r4]
   190a8:	cmp	sl, #44	; 0x2c
   190ac:	movne	r5, r4
   190b0:	bne	18914 <argp_failure@@Base+0x73c>
   190b4:	add	r5, r4, #1
   190b8:	ldrb	sl, [r4, #1]
   190bc:	b	18914 <argp_failure@@Base+0x73c>
   190c0:	mov	r0, r7
   190c4:	bl	1be28 <argp_parse@@Base+0x2038>
   190c8:	ldr	r0, [r7, #16]
   190cc:	ldr	r3, [r7, #24]
   190d0:	ldr	r2, [r7, #28]
   190d4:	sub	r2, r2, r3
   190d8:	b	18510 <argp_failure@@Base+0x338>
   190dc:	mov	r0, r7
   190e0:	bl	1be28 <argp_parse@@Base+0x2038>
   190e4:	ldr	r3, [fp, #-120]	; 0xffffff88
   190e8:	ldr	r2, [r7, #16]
   190ec:	ldr	r1, [r7, #24]
   190f0:	str	r3, [r7, #4]
   190f4:	ldr	r3, [r7, #28]
   190f8:	sub	r3, r3, r1
   190fc:	cmp	r3, r2
   19100:	bls	18784 <argp_failure@@Base+0x5ac>
   19104:	mov	r0, r7
   19108:	bl	1be28 <argp_parse@@Base+0x2038>
   1910c:	b	18784 <argp_failure@@Base+0x5ac>
   19110:	mov	r0, r7
   19114:	bl	1be28 <argp_parse@@Base+0x2038>
   19118:	b	18710 <argp_failure@@Base+0x538>
   1911c:	mov	r0, r7
   19120:	bl	1be28 <argp_parse@@Base+0x2038>
   19124:	b	185a4 <argp_failure@@Base+0x3cc>
   19128:	mov	r4, r6
   1912c:	b	18d88 <argp_failure@@Base+0xbb0>
   19130:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19134:	sub	r1, fp, #76	; 0x4c
   19138:	ldr	r0, [r3, #8]
   1913c:	bl	17a58 <daemon@@Base+0x1e04>
   19140:	ldr	r2, [r7, #28]
   19144:	ldr	r1, [r7, #32]
   19148:	cmp	r2, r1
   1914c:	bcc	19168 <argp_failure@@Base+0xf90>
   19150:	mov	r1, #1
   19154:	mov	r0, r7
   19158:	bl	1c494 <argp_parse@@Base+0x26a4>
   1915c:	cmp	r0, #0
   19160:	beq	19178 <argp_failure@@Base+0xfa0>
   19164:	ldr	r2, [r7, #28]
   19168:	add	r0, r2, #1
   1916c:	mov	r1, #45	; 0x2d
   19170:	str	r0, [r7, #28]
   19174:	strb	r1, [r2]
   19178:	ldr	r2, [r7, #28]
   1917c:	ldr	r1, [r7, #32]
   19180:	ldrb	r8, [r4]
   19184:	cmp	r2, r1
   19188:	bcc	191a4 <argp_failure@@Base+0xfcc>
   1918c:	mov	r1, #1
   19190:	mov	r0, r7
   19194:	bl	1c494 <argp_parse@@Base+0x26a4>
   19198:	cmp	r0, #0
   1919c:	beq	191b0 <argp_failure@@Base+0xfd8>
   191a0:	ldr	r2, [r7, #28]
   191a4:	add	r1, r2, #1
   191a8:	str	r1, [r7, #28]
   191ac:	strb	r8, [r2]
   191b0:	ldr	r3, [fp, #-124]	; 0xffffff84
   191b4:	ldr	r2, [r5, #8]
   191b8:	cmp	r3, #0
   191bc:	beq	19228 <argp_failure@@Base+0x1050>
   191c0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   191c4:	ldr	r1, [r3]
   191c8:	cmp	r1, #0
   191cc:	bne	19228 <argp_failure@@Base+0x1050>
   191d0:	cmp	r2, #0
   191d4:	movne	r2, #1
   191d8:	strne	r2, [fp, #-80]	; 0xffffffb0
   191dc:	b	18d50 <argp_failure@@Base+0xb78>
   191e0:	mov	r3, #1
   191e4:	str	r3, [fp, #-124]	; 0xffffff84
   191e8:	b	18594 <argp_failure@@Base+0x3bc>
   191ec:	cmp	sl, #110	; 0x6e
   191f0:	beq	19310 <argp_failure@@Base+0x1138>
   191f4:	mov	r7, #1
   191f8:	str	r7, [fp, #-112]	; 0xffffff90
   191fc:	b	1904c <argp_failure@@Base+0xe74>
   19200:	mov	r0, r7
   19204:	bl	1be28 <argp_parse@@Base+0x2038>
   19208:	b	18e48 <argp_failure@@Base+0xc70>
   1920c:	mov	r0, r7
   19210:	bl	1be28 <argp_parse@@Base+0x2038>
   19214:	ldr	r3, [r7, #28]
   19218:	b	18f70 <argp_failure@@Base+0xd98>
   1921c:	mov	r0, r7
   19220:	bl	1be28 <argp_parse@@Base+0x2038>
   19224:	b	18644 <argp_failure@@Base+0x46c>
   19228:	cmp	r2, #0
   1922c:	beq	18d50 <argp_failure@@Base+0xb78>
   19230:	ldr	r1, [r5, #12]
   19234:	mov	r0, r7
   19238:	tst	r1, #1
   1923c:	ldrne	r1, [fp, #-144]	; 0xffffff70
   19240:	ldreq	r1, [fp, #-140]	; 0xffffff74
   19244:	bl	1c4b4 <argp_parse@@Base+0x26c4>
   19248:	b	18d50 <argp_failure@@Base+0xb78>
   1924c:	sub	r2, fp, #76	; 0x4c
   19250:	ldr	r0, [r4, #16]
   19254:	ldr	r1, [r5, #20]
   19258:	bl	177ec <daemon@@Base+0x1b98>
   1925c:	b	18fac <argp_failure@@Base+0xdd4>
   19260:	ldr	r3, [r7, #28]
   19264:	ldr	r1, [r7, #32]
   19268:	add	r2, r3, #12
   1926c:	cmp	r1, r2
   19270:	bcs	1928c <argp_failure@@Base+0x10b4>
   19274:	mov	r1, #12
   19278:	mov	r0, r7
   1927c:	bl	1c494 <argp_parse@@Base+0x26a4>
   19280:	cmp	r0, #0
   19284:	beq	18b44 <argp_failure@@Base+0x96c>
   19288:	ldr	r3, [r7, #28]
   1928c:	movw	r2, #59000	; 0xe678
   19290:	movt	r2, #1
   19294:	ldrd	r0, [r2]
   19298:	ldr	r2, [r2, #8]
   1929c:	str	r0, [r3]
   192a0:	str	r1, [r3, #4]
   192a4:	str	r2, [r3, #8]
   192a8:	ldr	r3, [r7, #28]
   192ac:	add	r3, r3, #12
   192b0:	str	r3, [r7, #28]
   192b4:	b	18b44 <argp_failure@@Base+0x96c>
   192b8:	ldr	lr, [fp, #-96]	; 0xffffffa0
   192bc:	mov	ip, #1
   192c0:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   192c4:	ldrd	r4, [lr, #8]
   192c8:	ldrd	r2, [lr, #32]
   192cc:	strd	r0, [r8]
   192d0:	ldrd	r0, [lr, #24]
   192d4:	strd	r4, [r8, #8]
   192d8:	strd	r2, [r8, #32]
   192dc:	ldrd	r2, [lr, #16]
   192e0:	strd	r2, [r8, #16]
   192e4:	strd	r0, [r8, #24]
   192e8:	str	ip, [r8, #36]	; 0x24
   192ec:	b	18440 <argp_failure@@Base+0x268>
   192f0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   192f4:	mov	r2, #0
   192f8:	mov	r1, r2
   192fc:	str	r6, [sp]
   19300:	str	r5, [sp, #4]
   19304:	ldr	r0, [fp, #-104]	; 0xffffff98
   19308:	bl	181d8 <argp_failure@@Base>
   1930c:	b	190a4 <argp_failure@@Base+0xecc>
   19310:	ldrb	r3, [r5, #1]
   19314:	cmp	r3, #111	; 0x6f
   19318:	bne	191f4 <argp_failure@@Base+0x101c>
   1931c:	ldrb	r3, [r5, #2]
   19320:	cmp	r3, #45	; 0x2d
   19324:	bne	191f4 <argp_failure@@Base+0x101c>
   19328:	mov	r3, #0
   1932c:	add	r5, r5, #3
   19330:	sub	r6, r6, #3
   19334:	mov	r7, #1
   19338:	str	r3, [fp, #-112]	; 0xffffff90
   1933c:	b	1904c <argp_failure@@Base+0xe74>
   19340:	ldr	r3, [r7, #28]
   19344:	ldr	r2, [r7, #32]
   19348:	cmp	r3, r2
   1934c:	bcs	193f8 <argp_failure@@Base+0x1220>
   19350:	add	r1, r3, #1
   19354:	mov	r2, #10
   19358:	str	r1, [r7, #28]
   1935c:	strb	r2, [r3]
   19360:	b	18ef8 <argp_failure@@Base+0xd20>
   19364:	mov	r0, r7
   19368:	bl	1be28 <argp_parse@@Base+0x2038>
   1936c:	ldr	r2, [r7, #16]
   19370:	ldr	r1, [r7, #24]
   19374:	ldr	r3, [r7, #28]
   19378:	ldr	sl, [fp, #-96]	; 0xffffffa0
   1937c:	ldr	r9, [r7, #20]
   19380:	sub	r3, r3, r1
   19384:	cmp	r3, r2
   19388:	ldr	r8, [sl, #20]
   1938c:	bic	r9, r9, r9, asr #31
   19390:	bls	18dc4 <argp_failure@@Base+0xbec>
   19394:	mov	r0, r7
   19398:	bl	1be28 <argp_parse@@Base+0x2038>
   1939c:	ldr	r2, [r7, #16]
   193a0:	str	r8, [r7, #4]
   193a4:	mov	r8, sl
   193a8:	ldr	r1, [r7, #24]
   193ac:	ldr	r3, [r7, #28]
   193b0:	ldr	sl, [sl, #20]
   193b4:	sub	r3, r3, r1
   193b8:	cmp	r3, r2
   193bc:	bls	195e4 <argp_failure@@Base+0x140c>
   193c0:	mov	r0, r7
   193c4:	bl	1be28 <argp_parse@@Base+0x2038>
   193c8:	ldr	r8, [r8, #20]
   193cc:	b	18dcc <argp_failure@@Base+0xbf4>
   193d0:	ldr	r0, [fp, #-128]	; 0xffffff80
   193d4:	bl	117e0 <funlockfile@plt>
   193d8:	b	18894 <argp_failure@@Base+0x6bc>
   193dc:	movw	r3, #58868	; 0xe5f4
   193e0:	movt	r3, #1
   193e4:	str	r5, [sp]
   193e8:	mov	r1, r2
   193ec:	ldr	r0, [fp, #-104]	; 0xffffff98
   193f0:	bl	181d8 <argp_failure@@Base>
   193f4:	b	18950 <argp_failure@@Base+0x778>
   193f8:	mov	r1, #1
   193fc:	mov	r0, r7
   19400:	bl	1c494 <argp_parse@@Base+0x26a4>
   19404:	cmp	r0, #0
   19408:	beq	18ef8 <argp_failure@@Base+0xd20>
   1940c:	ldr	r3, [r7, #28]
   19410:	b	19350 <argp_failure@@Base+0x1178>
   19414:	mov	r1, #1
   19418:	mov	r0, r7
   1941c:	bl	1c494 <argp_parse@@Base+0x26a4>
   19420:	cmp	r0, #0
   19424:	ldrne	r3, [r7, #28]
   19428:	bne	18d30 <argp_failure@@Base+0xb58>
   1942c:	b	18d40 <argp_failure@@Base+0xb68>
   19430:	ldrb	r2, [sl, #14]
   19434:	cmp	r2, #0
   19438:	bne	19090 <argp_failure@@Base+0xeb8>
   1943c:	ldr	r3, [fp, #-120]	; 0xffffff88
   19440:	b	192f8 <argp_failure@@Base+0x1120>
   19444:	mov	r1, #1
   19448:	mov	r0, r7
   1944c:	bl	1c494 <argp_parse@@Base+0x26a4>
   19450:	cmp	r0, #0
   19454:	ldrne	r3, [r7, #28]
   19458:	bne	189f8 <argp_failure@@Base+0x820>
   1945c:	b	18a08 <argp_failure@@Base+0x830>
   19460:	ldrb	r3, [r4, #1]
   19464:	add	r4, r4, #1
   19468:	lsl	r3, r3, #1
   1946c:	ldrh	r3, [r1, r3]
   19470:	tst	r3, #8192	; 0x2000
   19474:	beq	1903c <argp_failure@@Base+0xe64>
   19478:	ldrb	r3, [r4, #1]!
   1947c:	lsl	r3, r3, #1
   19480:	ldrh	r3, [r1, r3]
   19484:	tst	r3, #8192	; 0x2000
   19488:	bne	19478 <argp_failure@@Base+0x12a0>
   1948c:	b	1903c <argp_failure@@Base+0xe64>
   19490:	mov	r2, #10
   19494:	mov	r1, #0
   19498:	mov	r0, r4
   1949c:	bl	11660 <strtol@plt>
   194a0:	ldrb	r3, [r4]
   194a4:	ldr	r2, [r7]
   194a8:	lsl	r3, r3, #1
   194ac:	ldrh	r7, [r2, r3]
   194b0:	str	r0, [fp, #-112]	; 0xffffff90
   194b4:	tst	r7, #2048	; 0x800
   194b8:	beq	194d0 <argp_failure@@Base+0x12f8>
   194bc:	ldrb	r3, [r4, #1]!
   194c0:	lsl	r3, r3, #1
   194c4:	ldrh	r7, [r2, r3]
   194c8:	tst	r7, #2048	; 0x800
   194cc:	bne	194bc <argp_failure@@Base+0x12e4>
   194d0:	ands	r7, r7, #8192	; 0x2000
   194d4:	beq	1904c <argp_failure@@Base+0xe74>
   194d8:	ldrb	r3, [r4, #1]!
   194dc:	lsl	r3, r3, #1
   194e0:	ldrh	r7, [r2, r3]
   194e4:	ands	r7, r7, #8192	; 0x2000
   194e8:	bne	194d8 <argp_failure@@Base+0x1300>
   194ec:	b	1904c <argp_failure@@Base+0xe74>
   194f0:	mov	r3, sl
   194f4:	mov	r4, r5
   194f8:	b	1901c <argp_failure@@Base+0xe44>
   194fc:	ldr	r5, [fp, #-112]	; 0xffffff90
   19500:	movw	r4, #58648	; 0xe518
   19504:	movt	r4, #1
   19508:	ldr	r3, [r7, #28]
   1950c:	ldr	r2, [r7, #32]
   19510:	cmp	r3, r2
   19514:	bcc	19530 <argp_failure@@Base+0x1358>
   19518:	mov	r1, #1
   1951c:	mov	r0, r7
   19520:	bl	1c494 <argp_parse@@Base+0x26a4>
   19524:	cmp	r0, #0
   19528:	beq	19540 <argp_failure@@Base+0x1368>
   1952c:	ldr	r3, [r7, #28]
   19530:	add	r1, r3, #1
   19534:	mov	r2, #10
   19538:	str	r1, [r7, #28]
   1953c:	strb	r2, [r3]
   19540:	mov	r0, r4
   19544:	bl	118e8 <strlen@plt>
   19548:	subs	r6, r0, #0
   1954c:	ldr	r0, [r7, #28]
   19550:	ldr	r3, [r7, #32]
   19554:	bne	1959c <argp_failure@@Base+0x13c4>
   19558:	cmp	r0, r3
   1955c:	bcc	19578 <argp_failure@@Base+0x13a0>
   19560:	mov	r1, #1
   19564:	mov	r0, r7
   19568:	bl	1c494 <argp_parse@@Base+0x26a4>
   1956c:	cmp	r0, #0
   19570:	beq	18818 <argp_failure@@Base+0x640>
   19574:	ldr	r0, [r7, #28]
   19578:	add	r2, r0, #1
   1957c:	mov	r3, #10
   19580:	str	r2, [r7, #28]
   19584:	strb	r3, [r0]
   19588:	b	18818 <argp_failure@@Base+0x640>
   1958c:	movw	r4, #58648	; 0xe518
   19590:	movt	r4, #1
   19594:	ldr	r5, [fp, #-104]	; 0xffffff98
   19598:	b	19508 <argp_failure@@Base+0x1330>
   1959c:	add	r2, r0, r6
   195a0:	cmp	r3, r2
   195a4:	bcs	195c4 <argp_failure@@Base+0x13ec>
   195a8:	mov	r1, r6
   195ac:	mov	r0, r7
   195b0:	bl	1c494 <argp_parse@@Base+0x26a4>
   195b4:	cmp	r0, #0
   195b8:	ldr	r0, [r7, #28]
   195bc:	ldreq	r3, [r7, #32]
   195c0:	beq	19558 <argp_failure@@Base+0x1380>
   195c4:	mov	r2, r6
   195c8:	mov	r1, r4
   195cc:	bl	11714 <memcpy@plt>
   195d0:	ldr	r0, [r7, #28]
   195d4:	ldr	r3, [r7, #32]
   195d8:	add	r0, r0, r6
   195dc:	str	r0, [r7, #28]
   195e0:	b	19558 <argp_failure@@Base+0x1380>
   195e4:	mov	r8, sl
   195e8:	b	18dcc <argp_failure@@Base+0xbf4>
   195ec:	andeq	lr, r1, r8, ror #7
   195f0:	andeq	lr, r1, r8, asr r3

000195f4 <argp_help@@Base>:
   195f4:	push	{lr}		; (str lr, [sp, #-4]!)
   195f8:	sub	sp, sp, #12
   195fc:	str	r3, [sp]
   19600:	mov	r3, r2
   19604:	mov	r2, r1
   19608:	mov	r1, #0
   1960c:	bl	183f4 <argp_failure@@Base+0x21c>
   19610:	add	sp, sp, #12
   19614:	pop	{pc}		; (ldr pc, [sp], #4)

00019618 <argp_state_help@@Base>:
   19618:	strd	r4, [sp, #-12]!
   1961c:	subs	r4, r0, #0
   19620:	mov	r5, r2
   19624:	str	lr, [sp, #8]
   19628:	sub	sp, sp, #12
   1962c:	beq	1969c <argp_state_help@@Base+0x84>
   19630:	ldr	r3, [r4, #16]
   19634:	adds	r2, r1, #0
   19638:	movne	r2, #1
   1963c:	eor	r0, r3, #2
   19640:	ands	r2, r2, r0, lsr #1
   19644:	bne	19658 <argp_state_help@@Base+0x40>
   19648:	add	sp, sp, #12
   1964c:	ldrd	r4, [sp]
   19650:	add	sp, sp, #8
   19654:	pop	{pc}		; (ldr pc, [sp], #4)
   19658:	ldr	r0, [r4, #40]	; 0x28
   1965c:	tst	r3, #64	; 0x40
   19660:	mov	r2, r1
   19664:	orrne	r5, r5, #128	; 0x80
   19668:	mov	r1, r4
   1966c:	mov	r3, r5
   19670:	str	r0, [sp]
   19674:	ldr	r0, [r4]
   19678:	bl	183f4 <argp_failure@@Base+0x21c>
   1967c:	ldr	r3, [r4, #16]
   19680:	tst	r3, #32
   19684:	bne	19648 <argp_state_help@@Base+0x30>
   19688:	ands	r0, r5, #256	; 0x100
   1968c:	bne	196c8 <argp_state_help@@Base+0xb0>
   19690:	tst	r5, #512	; 0x200
   19694:	beq	19648 <argp_state_help@@Base+0x30>
   19698:	bl	118dc <exit@plt>
   1969c:	cmp	r1, #0
   196a0:	beq	19648 <argp_state_help@@Base+0x30>
   196a4:	movw	r3, #62904	; 0xf5b8
   196a8:	movt	r3, #2
   196ac:	ldr	ip, [r3]
   196b0:	mov	r2, r1
   196b4:	mov	r3, r5
   196b8:	mov	r1, r4
   196bc:	str	ip, [sp]
   196c0:	bl	183f4 <argp_failure@@Base+0x21c>
   196c4:	b	19688 <argp_state_help@@Base+0x70>
   196c8:	movw	r3, #62884	; 0xf5a4
   196cc:	movt	r3, #2
   196d0:	ldr	r0, [r3]
   196d4:	bl	118dc <exit@plt>

000196d8 <argp_error@@Base>:
   196d8:	push	{r1, r2, r3}
   196dc:	strd	r4, [sp, #-12]!
   196e0:	subs	r5, r0, #0
   196e4:	str	lr, [sp, #8]
   196e8:	sub	sp, sp, #8
   196ec:	beq	197c4 <argp_error@@Base+0xec>
   196f0:	ldr	r3, [r5, #16]
   196f4:	tst	r3, #2
   196f8:	bne	197ac <argp_error@@Base+0xd4>
   196fc:	ldr	r4, [r5, #44]	; 0x2c
   19700:	cmp	r4, #0
   19704:	beq	197ac <argp_error@@Base+0xd4>
   19708:	mov	r0, r4
   1970c:	bl	11a20 <flockfile@plt>
   19710:	ldr	r0, [r5, #40]	; 0x28
   19714:	add	r3, sp, #24
   19718:	str	r3, [sp, #4]
   1971c:	mov	r1, r4
   19720:	bl	1163c <fputs_unlocked@plt>
   19724:	ldr	r3, [r4, #20]
   19728:	ldr	r2, [r4, #24]
   1972c:	cmp	r3, r2
   19730:	addcc	r1, r3, #1
   19734:	movcc	r2, #58	; 0x3a
   19738:	strcc	r1, [r4, #20]
   1973c:	strbcc	r2, [r3]
   19740:	bcs	19808 <argp_error@@Base+0x130>
   19744:	ldr	r3, [r4, #20]
   19748:	ldr	r2, [r4, #24]
   1974c:	cmp	r3, r2
   19750:	addcc	r1, r3, #1
   19754:	movcc	r2, #32
   19758:	strcc	r1, [r4, #20]
   1975c:	strbcc	r2, [r3]
   19760:	bcs	19818 <argp_error@@Base+0x140>
   19764:	mov	r0, r4
   19768:	ldr	r2, [sp, #4]
   1976c:	ldr	r1, [sp, #20]
   19770:	bl	119fc <vfprintf@plt>
   19774:	ldr	r3, [r4, #20]
   19778:	ldr	r2, [r4, #24]
   1977c:	cmp	r3, r2
   19780:	addcc	r1, r3, #1
   19784:	movcc	r2, #10
   19788:	strcc	r1, [r4, #20]
   1978c:	strbcc	r2, [r3]
   19790:	bcs	197f8 <argp_error@@Base+0x120>
   19794:	mov	r0, r5
   19798:	mov	r2, #260	; 0x104
   1979c:	mov	r1, r4
   197a0:	bl	19618 <argp_state_help@@Base>
   197a4:	mov	r0, r4
   197a8:	bl	117e0 <funlockfile@plt>
   197ac:	add	sp, sp, #8
   197b0:	ldrd	r4, [sp]
   197b4:	ldr	lr, [sp, #8]
   197b8:	add	sp, sp, #12
   197bc:	add	sp, sp, #12
   197c0:	bx	lr
   197c4:	movw	r3, #62912	; 0xf5c0
   197c8:	movt	r3, #2
   197cc:	ldr	r4, [r3]
   197d0:	cmp	r4, #0
   197d4:	beq	197ac <argp_error@@Base+0xd4>
   197d8:	mov	r0, r4
   197dc:	bl	11a20 <flockfile@plt>
   197e0:	add	r2, sp, #24
   197e4:	movw	r3, #62904	; 0xf5b8
   197e8:	movt	r3, #2
   197ec:	str	r2, [sp, #4]
   197f0:	ldr	r0, [r3]
   197f4:	b	1971c <argp_error@@Base+0x44>
   197f8:	mov	r1, #10
   197fc:	mov	r0, r4
   19800:	bl	119c0 <__overflow@plt>
   19804:	b	19794 <argp_error@@Base+0xbc>
   19808:	mov	r1, #58	; 0x3a
   1980c:	mov	r0, r4
   19810:	bl	119c0 <__overflow@plt>
   19814:	b	19744 <argp_error@@Base+0x6c>
   19818:	mov	r1, #32
   1981c:	mov	r0, r4
   19820:	bl	119c0 <__overflow@plt>
   19824:	b	19764 <argp_error@@Base+0x8c>
   19828:	ldr	r3, [r0]
   1982c:	strd	r4, [sp, #-16]!
   19830:	ldr	r5, [r0, #16]
   19834:	str	r6, [sp, #8]
   19838:	str	lr, [sp, #12]
   1983c:	cmp	r3, #0
   19840:	beq	198ec <argp_error@@Base+0x214>
   19844:	ldr	r0, [r1, #8]
   19848:	mov	r2, #0
   1984c:	add	r0, r0, #1
   19850:	str	r0, [r1, #8]
   19854:	b	1985c <argp_error@@Base+0x184>
   19858:	add	r2, r2, #1
   1985c:	add	r3, r3, #24
   19860:	ldr	r0, [r3, #-20]	; 0xffffffec
   19864:	cmp	r0, #0
   19868:	bne	19858 <argp_error@@Base+0x180>
   1986c:	ldr	r0, [r3, #-24]	; 0xffffffe8
   19870:	cmp	r0, #0
   19874:	bne	19858 <argp_error@@Base+0x180>
   19878:	ldr	r0, [r3, #-8]
   1987c:	cmp	r0, #0
   19880:	bne	19858 <argp_error@@Base+0x180>
   19884:	ldr	r0, [r3, #-4]
   19888:	cmp	r0, #0
   1988c:	bne	19858 <argp_error@@Base+0x180>
   19890:	ldm	r1, {r0, r3}
   19894:	add	ip, r2, r2, lsl #1
   19898:	add	r2, r3, r2
   1989c:	add	r0, r0, ip
   198a0:	stm	r1, {r0, r2}
   198a4:	cmp	r5, #0
   198a8:	beq	198dc <argp_error@@Base+0x204>
   198ac:	ldr	r0, [r5]
   198b0:	cmp	r0, #0
   198b4:	beq	198dc <argp_error@@Base+0x204>
   198b8:	mov	r4, r1
   198bc:	mov	r1, r4
   198c0:	bl	19828 <argp_error@@Base+0x150>
   198c4:	ldr	r3, [r4, #12]
   198c8:	ldr	r0, [r5, #16]!
   198cc:	add	r3, r3, #1
   198d0:	cmp	r0, #0
   198d4:	str	r3, [r4, #12]
   198d8:	bne	198bc <argp_error@@Base+0x1e4>
   198dc:	ldrd	r4, [sp]
   198e0:	ldr	r6, [sp, #8]
   198e4:	add	sp, sp, #12
   198e8:	pop	{pc}		; (ldr pc, [sp], #4)
   198ec:	ldr	r3, [r0, #4]
   198f0:	cmp	r3, #0
   198f4:	beq	198a4 <argp_error@@Base+0x1cc>
   198f8:	ldr	r3, [r1, #8]
   198fc:	add	r3, r3, #1
   19900:	str	r3, [r1, #8]
   19904:	b	198a4 <argp_error@@Base+0x1cc>
   19908:	cmp	r0, #86	; 0x56
   1990c:	beq	19918 <argp_error@@Base+0x240>
   19910:	mov	r0, #7
   19914:	bx	lr
   19918:	movw	r3, #64004	; 0xfa04
   1991c:	movt	r3, #2
   19920:	str	r4, [sp, #-8]!
   19924:	ldr	r3, [r3]
   19928:	mov	r4, r2
   1992c:	str	lr, [sp, #4]
   19930:	cmp	r3, #0
   19934:	beq	19964 <argp_error@@Base+0x28c>
   19938:	mov	r1, r2
   1993c:	ldr	r0, [r2, #48]	; 0x30
   19940:	blx	r3
   19944:	ldr	r0, [r4, #16]
   19948:	ands	r0, r0, #32
   1994c:	beq	19960 <argp_error@@Base+0x288>
   19950:	ldr	r4, [sp]
   19954:	add	sp, sp, #4
   19958:	mov	r0, #0
   1995c:	pop	{pc}		; (ldr pc, [sp], #4)
   19960:	bl	118dc <exit@plt>
   19964:	movw	r3, #144	; 0x90
   19968:	movt	r3, #3
   1996c:	ldr	r2, [r3]
   19970:	cmp	r2, #0
   19974:	beq	1998c <argp_error@@Base+0x2b4>
   19978:	movw	r1, #59792	; 0xe990
   1997c:	movt	r1, #1
   19980:	ldr	r0, [r4, #48]	; 0x30
   19984:	bl	1190c <fprintf@plt>
   19988:	b	19944 <argp_error@@Base+0x26c>
   1998c:	movw	r2, #59404	; 0xe80c
   19990:	movt	r2, #1
   19994:	movw	r1, #58160	; 0xe330
   19998:	movt	r1, #1
   1999c:	mov	r0, r4
   199a0:	bl	196d8 <argp_error@@Base>
   199a4:	b	19944 <argp_error@@Base+0x26c>
   199a8:	cmn	r0, #3
   199ac:	str	r4, [sp, #-8]!
   199b0:	mov	r4, r2
   199b4:	str	lr, [sp, #4]
   199b8:	sub	sp, sp, #8
   199bc:	beq	19abc <argp_error@@Base+0x3e4>
   199c0:	ble	199f8 <argp_error@@Base+0x320>
   199c4:	cmn	r0, #2
   199c8:	beq	19a70 <argp_error@@Base+0x398>
   199cc:	cmp	r0, #63	; 0x3f
   199d0:	bne	19a5c <argp_error@@Base+0x384>
   199d4:	mov	r0, r4
   199d8:	movw	r2, #634	; 0x27a
   199dc:	ldr	r1, [r4, #48]	; 0x30
   199e0:	bl	19618 <argp_state_help@@Base>
   199e4:	mov	r0, #0
   199e8:	add	sp, sp, #8
   199ec:	ldr	r4, [sp]
   199f0:	add	sp, sp, #4
   199f4:	pop	{pc}		; (ldr pc, [sp], #4)
   199f8:	cmn	r0, #4
   199fc:	bne	19a5c <argp_error@@Base+0x384>
   19a00:	cmp	r1, #0
   19a04:	movw	r0, #59440	; 0xe830
   19a08:	movt	r0, #1
   19a0c:	mov	r2, #10
   19a10:	movne	r0, r1
   19a14:	movw	r4, #64000	; 0xfa00
   19a18:	movt	r4, #2
   19a1c:	mov	r1, #0
   19a20:	bl	11660 <strtol@plt>
   19a24:	str	r0, [r4]
   19a28:	b	19a34 <argp_error@@Base+0x35c>
   19a2c:	mov	r0, #1
   19a30:	bl	11744 <sleep@plt>
   19a34:	ldr	r3, [r4]
   19a38:	sub	r2, r3, #1
   19a3c:	cmp	r3, #0
   19a40:	str	r2, [r4]
   19a44:	bgt	19a2c <argp_error@@Base+0x354>
   19a48:	mov	r0, #0
   19a4c:	add	sp, sp, #8
   19a50:	ldr	r4, [sp]
   19a54:	add	sp, sp, #4
   19a58:	pop	{pc}		; (ldr pc, [sp], #4)
   19a5c:	mov	r0, #7
   19a60:	add	sp, sp, #8
   19a64:	ldr	r4, [sp]
   19a68:	add	sp, sp, #4
   19a6c:	pop	{pc}		; (ldr pc, [sp], #4)
   19a70:	movw	r3, #62908	; 0xf5bc
   19a74:	movt	r3, #2
   19a78:	str	r1, [sp, #4]
   19a7c:	mov	r0, r1
   19a80:	str	r1, [r3]
   19a84:	bl	1ad1c <argp_parse@@Base+0xf2c>
   19a88:	ldr	r3, [r4, #16]
   19a8c:	movw	r2, #62904	; 0xf5b8
   19a90:	movt	r2, #2
   19a94:	str	r0, [r4, #40]	; 0x28
   19a98:	str	r0, [r2]
   19a9c:	ldr	r1, [sp, #4]
   19aa0:	and	r3, r3, #3
   19aa4:	cmp	r3, #1
   19aa8:	bne	19a48 <argp_error@@Base+0x370>
   19aac:	ldr	r3, [r4, #8]
   19ab0:	mov	r0, #0
   19ab4:	str	r1, [r3]
   19ab8:	b	199e8 <argp_error@@Base+0x310>
   19abc:	ldr	r1, [r4, #48]	; 0x30
   19ac0:	mov	r0, r4
   19ac4:	movw	r2, #513	; 0x201
   19ac8:	bl	19618 <argp_state_help@@Base>
   19acc:	mov	r0, #0
   19ad0:	add	sp, sp, #8
   19ad4:	ldr	r4, [sp]
   19ad8:	add	sp, sp, #4
   19adc:	pop	{pc}		; (ldr pc, [sp], #4)
   19ae0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19ae4:	strd	r6, [sp, #8]
   19ae8:	strd	r8, [sp, #16]
   19aec:	strd	sl, [sp, #24]
   19af0:	str	lr, [sp, #32]
   19af4:	sub	sp, sp, #44	; 0x2c
   19af8:	ldr	fp, [r0]
   19afc:	str	r3, [sp, #16]
   19b00:	ldr	r3, [r0, #16]
   19b04:	ldr	r7, [sp, #80]	; 0x50
   19b08:	cmp	fp, #0
   19b0c:	str	r3, [sp, #24]
   19b10:	strd	r0, [sp, #28]
   19b14:	str	r2, [sp, #36]	; 0x24
   19b18:	beq	19dc4 <argp_error@@Base+0x6ec>
   19b1c:	ldr	r9, [r7, #4]
   19b20:	movw	r3, #36409	; 0x8e39
   19b24:	movt	r3, #14563	; 0x38e3
   19b28:	mov	r4, fp
   19b2c:	str	r3, [sp, #20]
   19b30:	ldr	r6, [r4, #4]
   19b34:	cmp	r6, #0
   19b38:	bne	19b48 <argp_error@@Base+0x470>
   19b3c:	ldr	r3, [r4]
   19b40:	cmp	r3, #0
   19b44:	beq	19cbc <argp_error@@Base+0x5e4>
   19b48:	ldr	r3, [r4, #12]
   19b4c:	tst	r3, #4
   19b50:	moveq	r5, r3
   19b54:	moveq	fp, r4
   19b58:	ldrne	r5, [fp, #12]
   19b5c:	ands	r5, r5, #8
   19b60:	bne	19ca4 <argp_error@@Base+0x5cc>
   19b64:	tst	r3, #8
   19b68:	bne	19be8 <argp_error@@Base+0x510>
   19b6c:	sub	r3, r6, #1
   19b70:	cmp	r3, #254	; 0xfe
   19b74:	bhi	19be8 <argp_error@@Base+0x510>
   19b78:	bl	118c4 <__ctype_b_loc@plt>
   19b7c:	ldr	r1, [r0]
   19b80:	lsl	r3, r6, #1
   19b84:	ldrh	r3, [r1, r3]
   19b88:	tst	r3, #16384	; 0x4000
   19b8c:	beq	19be8 <argp_error@@Base+0x510>
   19b90:	add	r3, r9, #1
   19b94:	str	r3, [r7, #4]
   19b98:	strb	r6, [r9]
   19b9c:	ldr	r3, [fp, #8]
   19ba0:	cmp	r3, #0
   19ba4:	beq	19bd8 <argp_error@@Base+0x500>
   19ba8:	ldr	r3, [r7, #4]
   19bac:	mov	r2, #58	; 0x3a
   19bb0:	add	r1, r3, #1
   19bb4:	str	r1, [r7, #4]
   19bb8:	strb	r2, [r3]
   19bbc:	ldr	r3, [fp, #12]
   19bc0:	tst	r3, #1
   19bc4:	beq	19bd8 <argp_error@@Base+0x500>
   19bc8:	ldr	r3, [r7, #4]
   19bcc:	add	r1, r3, #1
   19bd0:	str	r1, [r7, #4]
   19bd4:	strb	r2, [r3]
   19bd8:	ldr	r3, [r7, #4]
   19bdc:	mov	r2, #0
   19be0:	strb	r2, [r3]
   19be4:	ldr	r9, [r7, #4]
   19be8:	ldr	sl, [r4]
   19bec:	cmp	sl, #0
   19bf0:	beq	19ca4 <argp_error@@Base+0x5cc>
   19bf4:	ldr	r3, [r7]
   19bf8:	ldr	r8, [r3, #8]
   19bfc:	str	r3, [sp, #12]
   19c00:	ldr	r0, [r8]
   19c04:	cmp	r0, #0
   19c08:	beq	19c2c <argp_error@@Base+0x554>
   19c0c:	mov	r6, r8
   19c10:	mov	r1, sl
   19c14:	bl	11654 <strcmp@plt>
   19c18:	cmp	r0, #0
   19c1c:	beq	19cac <argp_error@@Base+0x5d4>
   19c20:	ldr	r0, [r6, #16]!
   19c24:	cmp	r0, #0
   19c28:	bne	19c10 <argp_error@@Base+0x538>
   19c2c:	ldr	r0, [fp, #8]
   19c30:	ldr	r1, [r7, #8]
   19c34:	cmp	r0, #0
   19c38:	str	sl, [r1]
   19c3c:	beq	19c50 <argp_error@@Base+0x578>
   19c40:	ldr	r3, [fp, #12]
   19c44:	tst	r3, #1
   19c48:	movne	r5, #2
   19c4c:	moveq	r5, #1
   19c50:	str	r5, [r1, #4]
   19c54:	mov	r3, #0
   19c58:	add	ip, r1, #16
   19c5c:	ldr	r0, [r4, #4]
   19c60:	str	r3, [r1, #8]
   19c64:	ldr	r2, [sp, #16]
   19c68:	cmp	r0, r3
   19c6c:	ldr	r3, [sp, #12]
   19c70:	ldreq	r0, [fp, #4]
   19c74:	ldr	r3, [r3, #48]	; 0x30
   19c78:	bic	r0, r0, #-16777216	; 0xff000000
   19c7c:	sub	r3, r2, r3
   19c80:	ldr	r2, [sp, #20]
   19c84:	asr	r3, r3, #2
   19c88:	mul	r3, r2, r3
   19c8c:	add	r3, r3, #1
   19c90:	add	r3, r0, r3, lsl #24
   19c94:	str	r3, [r1, #12]
   19c98:	mov	r3, #0
   19c9c:	str	ip, [r7, #8]
   19ca0:	str	r3, [r1, #16]
   19ca4:	add	r4, r4, #24
   19ca8:	b	19b30 <argp_error@@Base+0x458>
   19cac:	sub	r6, r6, r8
   19cb0:	cmp	r6, #0
   19cb4:	bge	19ca4 <argp_error@@Base+0x5cc>
   19cb8:	b	19c2c <argp_error@@Base+0x554>
   19cbc:	ldr	r3, [r4, #16]
   19cc0:	cmp	r3, #0
   19cc4:	bne	19b48 <argp_error@@Base+0x470>
   19cc8:	ldr	r3, [r4, #20]
   19ccc:	cmp	r3, #0
   19cd0:	bne	19b48 <argp_error@@Base+0x470>
   19cd4:	ldr	r3, [sp, #28]
   19cd8:	ldr	r2, [r3, #4]
   19cdc:	mov	r3, #0
   19ce0:	ldr	r1, [sp, #16]
   19ce4:	ldr	r0, [sp, #24]
   19ce8:	str	r2, [r1]
   19cec:	mov	r2, r1
   19cf0:	ldr	r1, [sp, #28]
   19cf4:	cmp	r0, r3
   19cf8:	stmib	r2, {r1, r9}
   19cfc:	ldr	r1, [sp, #32]
   19d00:	str	r3, [r2, #12]
   19d04:	str	r1, [r2, #16]
   19d08:	ldr	r1, [sp, #36]	; 0x24
   19d0c:	str	r3, [r2, #24]
   19d10:	str	r3, [r2, #28]
   19d14:	str	r3, [r2, #32]
   19d18:	str	r1, [r2, #20]
   19d1c:	beq	19d58 <argp_error@@Base+0x680>
   19d20:	ldr	r2, [r0]
   19d24:	cmp	r2, r3
   19d28:	beq	19de8 <argp_error@@Base+0x710>
   19d2c:	mov	r1, r0
   19d30:	add	r3, r3, #1
   19d34:	ldr	r2, [r1, r3, lsl #4]
   19d38:	cmp	r2, #0
   19d3c:	bne	19d30 <argp_error@@Base+0x658>
   19d40:	lsl	r3, r3, #2
   19d44:	ldr	r2, [r7, #12]
   19d48:	ldr	r1, [sp, #16]
   19d4c:	add	r3, r2, r3
   19d50:	str	r2, [r1, #28]
   19d54:	str	r3, [r7, #12]
   19d58:	ldr	r3, [sp, #16]
   19d5c:	add	r0, r3, #36	; 0x24
   19d60:	ldr	r5, [sp, #24]
   19d64:	cmp	r5, #0
   19d68:	beq	19da8 <argp_error@@Base+0x6d0>
   19d6c:	ldr	r1, [r5]
   19d70:	cmp	r1, #0
   19d74:	beq	19da8 <argp_error@@Base+0x6d0>
   19d78:	ldr	r6, [sp, #16]
   19d7c:	mov	r2, #0
   19d80:	add	r4, r2, #1
   19d84:	mov	r3, r0
   19d88:	str	r7, [sp]
   19d8c:	mov	r0, r1
   19d90:	mov	r1, r6
   19d94:	bl	19ae0 <argp_error@@Base+0x408>
   19d98:	ldr	r1, [r5, r4, lsl #4]
   19d9c:	mov	r2, r4
   19da0:	cmp	r1, #0
   19da4:	bne	19d80 <argp_error@@Base+0x6a8>
   19da8:	add	sp, sp, #44	; 0x2c
   19dac:	ldrd	r4, [sp]
   19db0:	ldrd	r6, [sp, #8]
   19db4:	ldrd	r8, [sp, #16]
   19db8:	ldrd	sl, [sp, #24]
   19dbc:	add	sp, sp, #32
   19dc0:	pop	{pc}		; (ldr pc, [sp], #4)
   19dc4:	ldr	r3, [sp, #28]
   19dc8:	ldr	r2, [r3, #4]
   19dcc:	cmp	r2, #0
   19dd0:	beq	19ddc <argp_error@@Base+0x704>
   19dd4:	ldr	r9, [r7, #4]
   19dd8:	b	19cdc <argp_error@@Base+0x604>
   19ddc:	ldr	r0, [sp, #16]
   19de0:	str	r2, [sp, #16]
   19de4:	b	19d60 <argp_error@@Base+0x688>
   19de8:	mov	r3, r2
   19dec:	b	19d44 <argp_error@@Base+0x66c>

00019df0 <argp_parse@@Base>:
   19df0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19df4:	tst	r3, #1
   19df8:	mov	r5, r3
   19dfc:	strd	r6, [sp, #8]
   19e00:	mov	r7, r0
   19e04:	strd	r8, [sp, #16]
   19e08:	strd	sl, [sp, #24]
   19e0c:	add	fp, sp, #32
   19e10:	str	lr, [sp, #32]
   19e14:	sub	sp, sp, #236	; 0xec
   19e18:	str	r1, [fp, #-244]	; 0xffffff0c
   19e1c:	str	r2, [fp, #-232]	; 0xffffff18
   19e20:	bne	19e4c <argp_parse@@Base+0x5c>
   19e24:	movw	r3, #62908	; 0xf5bc
   19e28:	movt	r3, #2
   19e2c:	ldr	r2, [r3]
   19e30:	cmp	r2, #0
   19e34:	beq	1a870 <argp_parse@@Base+0xa80>
   19e38:	movw	r4, #62904	; 0xf5b8
   19e3c:	movt	r4, #2
   19e40:	ldr	r3, [r4]
   19e44:	cmp	r3, #0
   19e48:	beq	1a880 <argp_parse@@Base+0xa90>
   19e4c:	ands	r3, r5, #4
   19e50:	moveq	r6, #1
   19e54:	movne	r6, #0
   19e58:	ands	ip, r5, #16
   19e5c:	str	r3, [fp, #-236]	; 0xffffff14
   19e60:	beq	19eb8 <argp_parse@@Base+0xc8>
   19e64:	mov	r3, #0
   19e68:	sub	r4, fp, #196	; 0xc4
   19e6c:	str	r6, [fp, #-228]	; 0xffffff1c
   19e70:	cmp	r7, r3
   19e74:	str	r3, [fp, #-224]	; 0xffffff20
   19e78:	str	r3, [fp, #-220]	; 0xffffff24
   19e7c:	str	r3, [fp, #-216]	; 0xffffff28
   19e80:	str	r3, [r4, #8]
   19e84:	str	r3, [r4, #12]
   19e88:	str	r3, [r4, #16]
   19e8c:	str	r3, [r4, #20]
   19e90:	str	r3, [r4, #24]
   19e94:	str	r3, [r4, #28]
   19e98:	str	r3, [r4, #32]
   19e9c:	bne	19f68 <argp_parse@@Base+0x178>
   19ea0:	mov	r3, #52	; 0x34
   19ea4:	mov	sl, #36	; 0x24
   19ea8:	mov	r9, r7
   19eac:	str	r3, [fp, #-236]	; 0xffffff14
   19eb0:	mov	r3, sl
   19eb4:	b	19fa0 <argp_parse@@Base+0x1b0>
   19eb8:	sub	sp, sp, #64	; 0x40
   19ebc:	mov	r1, ip
   19ec0:	add	r3, sp, #8
   19ec4:	sub	sp, sp, #32
   19ec8:	add	r4, sp, #8
   19ecc:	mov	r0, r3
   19ed0:	mov	r2, #64	; 0x40
   19ed4:	str	ip, [r4]
   19ed8:	str	ip, [r4, #4]
   19edc:	str	ip, [r4, #8]
   19ee0:	str	ip, [r4, #12]
   19ee4:	str	r3, [r4, #16]
   19ee8:	str	ip, [r4, #20]
   19eec:	str	ip, [r4, #24]
   19ef0:	bl	11954 <memset@plt>
   19ef4:	movw	r2, #144	; 0x90
   19ef8:	movt	r2, #3
   19efc:	ldr	r1, [r2]
   19f00:	mov	r3, r0
   19f04:	cmp	r7, #0
   19f08:	movw	r2, #59124	; 0xe6f4
   19f0c:	movt	r2, #1
   19f10:	strne	r7, [r3], #16
   19f14:	str	r2, [r3]
   19f18:	cmp	r1, #0
   19f1c:	beq	1a9e8 <argp_parse@@Base+0xbf8>
   19f20:	ldr	r1, [pc, #3392]	; 1ac68 <argp_parse@@Base+0xe78>
   19f24:	add	r2, r3, #32
   19f28:	str	r1, [r3, #16]
   19f2c:	mov	r3, #0
   19f30:	mov	r7, r4
   19f34:	str	r6, [fp, #-228]	; 0xffffff1c
   19f38:	sub	r4, fp, #196	; 0xc4
   19f3c:	str	r3, [fp, #-224]	; 0xffffff20
   19f40:	str	r3, [fp, #-220]	; 0xffffff24
   19f44:	str	r3, [fp, #-216]	; 0xffffff28
   19f48:	str	r3, [r2]
   19f4c:	str	r3, [r4, #8]
   19f50:	str	r3, [r4, #12]
   19f54:	str	r3, [r4, #16]
   19f58:	str	r3, [r4, #20]
   19f5c:	str	r3, [r4, #24]
   19f60:	str	r3, [r4, #28]
   19f64:	str	r3, [r4, #32]
   19f68:	sub	r1, fp, #228	; 0xe4
   19f6c:	mov	r0, r7
   19f70:	bl	19828 <argp_error@@Base+0x150>
   19f74:	ldr	r6, [fp, #-228]	; 0xffffff1c
   19f78:	ldrd	r2, [fp, #-224]	; 0xffffff20
   19f7c:	ldr	r9, [fp, #-216]	; 0xffffff28
   19f80:	add	r3, r3, #1
   19f84:	add	r2, r2, #1
   19f88:	add	r3, r3, r3, lsl #3
   19f8c:	lsl	r9, r9, #2
   19f90:	lsl	r3, r3, #2
   19f94:	add	sl, r9, r3
   19f98:	add	r2, sl, r2, lsl #4
   19f9c:	str	r2, [fp, #-236]	; 0xffffff14
   19fa0:	str	r3, [fp, #-240]	; 0xffffff10
   19fa4:	ldr	r3, [fp, #-236]	; 0xffffff14
   19fa8:	add	r0, r6, r3
   19fac:	add	r0, r0, #1
   19fb0:	bl	1bcfc <argp_parse@@Base+0x1f0c>
   19fb4:	cmp	r0, #0
   19fb8:	mov	r6, r0
   19fbc:	str	r0, [fp, #-40]	; 0xffffffd8
   19fc0:	moveq	r5, #12
   19fc4:	ldr	r3, [fp, #-240]	; 0xffffff10
   19fc8:	beq	1a4e8 <argp_parse@@Base+0x6f8>
   19fcc:	mov	r2, r9
   19fd0:	mov	r1, #1
   19fd4:	ldrd	r8, [r4, #8]
   19fd8:	add	ip, r0, sl
   19fdc:	add	r3, r0, r3
   19fe0:	str	r0, [fp, #-112]	; 0xffffff90
   19fe4:	ldr	lr, [fp, #-236]	; 0xffffff14
   19fe8:	str	r1, [fp, #-196]	; 0xffffff3c
   19fec:	str	r1, [fp, #-192]	; 0xffffff40
   19ff0:	str	ip, [fp, #-240]	; 0xffffff10
   19ff4:	strd	r8, [fp, #-140]	; 0xffffff74
   19ff8:	ldrd	r8, [r4, #16]
   19ffc:	add	sl, r0, lr
   1a000:	str	r3, [fp, #-104]	; 0xffffff98
   1a004:	ldrd	r0, [fp, #-196]	; 0xffffff3c
   1a008:	strd	r8, [fp, #-252]	; 0xffffff04
   1a00c:	ldrd	r8, [r4, #24]
   1a010:	str	sl, [fp, #-156]	; 0xffffff64
   1a014:	strd	r0, [fp, #-148]	; 0xffffff6c
   1a018:	mov	r0, r3
   1a01c:	sub	r3, fp, #260	; 0x104
   1a020:	str	ip, [fp, #-152]	; 0xffffff68
   1a024:	mov	r1, #0
   1a028:	ldr	ip, [r4, #32]
   1a02c:	strd	r8, [r3]
   1a030:	ldrd	r8, [fp, #-252]	; 0xffffff04
   1a034:	strd	r8, [fp, #-132]	; 0xffffff7c
   1a038:	ldrd	r8, [r3]
   1a03c:	str	ip, [fp, #-116]	; 0xffffff8c
   1a040:	strd	r8, [fp, #-124]	; 0xffffff84
   1a044:	bl	11954 <memset@plt>
   1a048:	ldr	ip, [fp, #-240]	; 0xffffff10
   1a04c:	sub	r2, fp, #160	; 0xa0
   1a050:	tst	r5, #8
   1a054:	str	r2, [fp, #-212]	; 0xffffff2c
   1a058:	str	sl, [fp, #-208]	; 0xffffff30
   1a05c:	str	r0, [fp, #-200]	; 0xffffff38
   1a060:	str	ip, [fp, #-204]	; 0xffffff34
   1a064:	bne	1a508 <argp_parse@@Base+0x718>
   1a068:	ands	r3, r5, #4
   1a06c:	cmp	r3, #0
   1a070:	moveq	r3, sl
   1a074:	beq	1a088 <argp_parse@@Base+0x298>
   1a078:	add	r3, sl, #1
   1a07c:	mov	r2, #43	; 0x2b
   1a080:	str	r3, [fp, #-208]	; 0xffffff30
   1a084:	strb	r2, [sl]
   1a088:	ldr	r2, [fp, #-204]	; 0xffffff34
   1a08c:	mov	r4, #0
   1a090:	cmp	r7, r4
   1a094:	strb	r4, [r3]
   1a098:	str	r4, [r2]
   1a09c:	str	r7, [fp, #-160]	; 0xffffff60
   1a0a0:	beq	1a6f0 <argp_parse@@Base+0x900>
   1a0a4:	sub	ip, fp, #212	; 0xd4
   1a0a8:	mov	r2, r4
   1a0ac:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a0b0:	mov	r1, r4
   1a0b4:	mov	r0, r7
   1a0b8:	str	ip, [sp]
   1a0bc:	bl	19ae0 <argp_error@@Base+0x408>
   1a0c0:	movw	r1, #62912	; 0xf5c0
   1a0c4:	movt	r1, #2
   1a0c8:	ldr	r6, [fp, #-232]	; 0xffffff18
   1a0cc:	movw	r2, #62916	; 0xf5c4
   1a0d0:	movt	r2, #2
   1a0d4:	str	r0, [fp, #-108]	; 0xffffff94
   1a0d8:	mov	lr, #1
   1a0dc:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a0e0:	ldr	ip, [r1]
   1a0e4:	str	lr, [fp, #-100]	; 0xffffff9c
   1a0e8:	ldr	r1, [fp, #-244]	; 0xffffff0c
   1a0ec:	cmp	r0, r3
   1a0f0:	mov	r0, #0
   1a0f4:	ldr	r2, [r2]
   1a0f8:	movls	r3, r6
   1a0fc:	ldr	lr, [fp, #-160]	; 0xffffff60
   1a100:	str	ip, [fp, #-52]	; 0xffffffcc
   1a104:	str	r1, [fp, #-92]	; 0xffffffa4
   1a108:	mov	r1, #0
   1a10c:	str	r2, [fp, #-48]	; 0xffffffd0
   1a110:	sub	r2, fp, #160	; 0xa0
   1a114:	str	lr, [fp, #-96]	; 0xffffffa0
   1a118:	str	r6, [fp, #-88]	; 0xffffffa8
   1a11c:	strd	r4, [fp, #-84]	; 0xffffffac
   1a120:	strd	r0, [fp, #-76]	; 0xffffffb4
   1a124:	strd	r0, [fp, #-68]	; 0xffffffbc
   1a128:	strd	r0, [fp, #-60]	; 0xffffffc4
   1a12c:	str	r2, [fp, #-44]	; 0xffffffd4
   1a130:	bls	1a218 <argp_parse@@Base+0x428>
   1a134:	mov	r6, #3
   1a138:	movt	r6, #256	; 0x100
   1a13c:	ldr	r8, [fp, #-232]	; 0xffffff18
   1a140:	add	r4, r3, #36	; 0x24
   1a144:	ldr	r2, [fp, #8]
   1a148:	str	r2, [r3, #24]
   1a14c:	b	1a198 <argp_parse@@Base+0x3a8>
   1a150:	ldr	lr, [r4, #-24]	; 0xffffffe8
   1a154:	ldr	ip, [r4, #-4]
   1a158:	str	ip, [fp, #-60]	; 0xffffffc4
   1a15c:	ldr	ip, [r4, #-12]
   1a160:	str	ip, [fp, #-68]	; 0xffffffbc
   1a164:	ldr	ip, [r4, #-8]
   1a168:	str	lr, [fp, #-76]	; 0xffffffb4
   1a16c:	str	ip, [fp, #-64]	; 0xffffffc0
   1a170:	blx	r3
   1a174:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a178:	str	r3, [r4, #-4]
   1a17c:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a180:	cmp	r4, r3
   1a184:	bcs	1a7a4 <argp_parse@@Base+0x9b4>
   1a188:	cmp	r0, #7
   1a18c:	cmpne	r0, #0
   1a190:	bne	1a794 <argp_parse@@Base+0x9a4>
   1a194:	add	r4, r4, #36	; 0x24
   1a198:	ldr	r3, [r4, #-20]	; 0xffffffec
   1a19c:	mov	r1, #0
   1a1a0:	sub	r2, fp, #96	; 0x60
   1a1a4:	mov	r0, r6
   1a1a8:	cmp	r3, r1
   1a1ac:	beq	1a1c0 <argp_parse@@Base+0x3d0>
   1a1b0:	ldr	ip, [r4, #-16]
   1a1b4:	ldr	r3, [r3, #28]
   1a1b8:	ldr	r3, [r3, ip, lsl #2]
   1a1bc:	str	r3, [r4, #-12]
   1a1c0:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1a1c4:	cmp	r3, #0
   1a1c8:	bne	1a150 <argp_parse@@Base+0x360>
   1a1cc:	ldr	r3, [r4, #-32]	; 0xffffffe0
   1a1d0:	ldr	r3, [r3, #16]
   1a1d4:	cmp	r3, #0
   1a1d8:	beq	1a200 <argp_parse@@Base+0x410>
   1a1dc:	ldr	r3, [r3]
   1a1e0:	cmp	r3, #0
   1a1e4:	beq	1a200 <argp_parse@@Base+0x410>
   1a1e8:	ldr	ip, [r4, #-12]
   1a1ec:	ldr	r3, [r4, #-8]
   1a1f0:	str	ip, [r3]
   1a1f4:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1a1f8:	cmp	r3, #0
   1a1fc:	bne	1a150 <argp_parse@@Base+0x360>
   1a200:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a204:	cmp	r4, r3
   1a208:	bcc	1a194 <argp_parse@@Base+0x3a4>
   1a20c:	str	r8, [fp, #-232]	; 0xffffff18
   1a210:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1a214:	ldr	r5, [fp, #-80]	; 0xffffffb0
   1a218:	tst	r5, #2
   1a21c:	beq	1a764 <argp_parse@@Base+0x974>
   1a220:	mov	r2, #0
   1a224:	ldr	r4, [fp, #-92]	; 0xffffffa4
   1a228:	tst	r5, #1
   1a22c:	subne	r3, r3, #4
   1a230:	str	r2, [fp, #-144]	; 0xffffff70
   1a234:	ldr	r2, [fp, #-232]	; 0xffffff18
   1a238:	strne	r3, [fp, #-88]	; 0xffffffa8
   1a23c:	addne	r4, r4, #1
   1a240:	strne	r4, [fp, #-92]	; 0xffffffa4
   1a244:	cmp	r2, r3
   1a248:	beq	1a77c <argp_parse@@Base+0x98c>
   1a24c:	movw	r3, #62904	; 0xf5b8
   1a250:	movt	r3, #2
   1a254:	ldr	r3, [r3]
   1a258:	str	r3, [fp, #-56]	; 0xffffffc8
   1a25c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1a260:	movw	r3, #54908	; 0xd67c
   1a264:	movt	r3, #1
   1a268:	mov	r9, #6
   1a26c:	movt	r9, #256	; 0x100
   1a270:	ldr	r7, [fp, #-84]	; 0xffffffac
   1a274:	mov	r0, r4
   1a278:	str	r3, [fp, #-232]	; 0xffffff18
   1a27c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a280:	cmp	r3, #0
   1a284:	beq	1a36c <argp_parse@@Base+0x57c>
   1a288:	cmp	r3, r7
   1a28c:	movgt	r3, #0
   1a290:	strgt	r3, [fp, #-72]	; 0xffffffb8
   1a294:	bgt	1a36c <argp_parse@@Base+0x57c>
   1a298:	cmp	r0, r7
   1a29c:	ble	1a5b4 <argp_parse@@Base+0x7c4>
   1a2a0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1a2a4:	tst	r3, #4
   1a2a8:	bne	1a7c8 <argp_parse@@Base+0x9d8>
   1a2ac:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1a2b0:	ldr	sl, [r3, r7, lsl #2]
   1a2b4:	str	sl, [fp, #-136]	; 0xffffff78
   1a2b8:	ldr	r8, [fp, #-112]	; 0xffffff90
   1a2bc:	str	r7, [fp, #-84]	; 0xffffffac
   1a2c0:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a2c4:	cmp	r8, ip
   1a2c8:	bcs	1a5ac <argp_parse@@Base+0x7bc>
   1a2cc:	mov	lr, r7
   1a2d0:	add	r4, r8, #36	; 0x24
   1a2d4:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1a2d8:	mov	r0, #0
   1a2dc:	add	r6, lr, #1
   1a2e0:	sub	r2, fp, #96	; 0x60
   1a2e4:	mov	r1, sl
   1a2e8:	sub	r5, r4, #36	; 0x24
   1a2ec:	mov	r8, r4
   1a2f0:	str	r6, [fp, #-84]	; 0xffffffac
   1a2f4:	cmp	r3, r0
   1a2f8:	beq	1a598 <argp_parse@@Base+0x7a8>
   1a2fc:	ldr	lr, [r4, #-24]	; 0xffffffe8
   1a300:	ldr	ip, [r4, #-4]
   1a304:	str	ip, [fp, #-60]	; 0xffffffc4
   1a308:	ldr	ip, [r4, #-12]
   1a30c:	str	ip, [fp, #-68]	; 0xffffffbc
   1a310:	ldr	ip, [r4, #-8]
   1a314:	str	lr, [fp, #-76]	; 0xffffffb4
   1a318:	str	ip, [fp, #-64]	; 0xffffffc0
   1a31c:	blx	r3
   1a320:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a324:	cmp	r0, #7
   1a328:	str	r3, [r4, #-4]
   1a32c:	beq	1a520 <argp_parse@@Base+0x730>
   1a330:	cmp	r0, #0
   1a334:	bne	1a668 <argp_parse@@Base+0x878>
   1a338:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1a33c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a340:	cmp	r7, r3
   1a344:	bge	1a680 <argp_parse@@Base+0x890>
   1a348:	ldr	r1, [r4, #-24]	; 0xffffffe8
   1a34c:	sub	ip, r3, r7
   1a350:	mov	r7, r3
   1a354:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1a358:	add	r3, r1, ip
   1a35c:	str	r3, [r4, #-24]	; 0xffffffe8
   1a360:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a364:	cmp	r3, #0
   1a368:	bne	1a288 <argp_parse@@Base+0x498>
   1a36c:	cmp	r2, #0
   1a370:	beq	1a298 <argp_parse@@Base+0x4a8>
   1a374:	mvn	r2, #0
   1a378:	str	r7, [fp, #-148]	; 0xffffff6c
   1a37c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1a380:	str	r2, [fp, #-140]	; 0xffffff74
   1a384:	ldr	r2, [fp, #-156]	; 0xffffff64
   1a388:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1a38c:	ands	ip, r3, #64	; 0x40
   1a390:	ldr	r3, [fp, #-152]	; 0xffffff68
   1a394:	beq	1a694 <argp_parse@@Base+0x8a4>
   1a398:	mov	ip, #0
   1a39c:	sub	lr, fp, #148	; 0x94
   1a3a0:	stm	sp, {ip, lr}
   1a3a4:	bl	1b0ac <argp_parse@@Base+0x12bc>
   1a3a8:	ldr	r7, [fp, #-148]	; 0xffffff6c
   1a3ac:	mov	r4, r0
   1a3b0:	cmn	r4, #1
   1a3b4:	str	r7, [fp, #-84]	; 0xffffffac
   1a3b8:	beq	1a6b8 <argp_parse@@Base+0x8c8>
   1a3bc:	cmp	r4, #63	; 0x3f
   1a3c0:	beq	1a3d8 <argp_parse@@Base+0x5e8>
   1a3c4:	cmp	r4, #1
   1a3c8:	bne	1a95c <argp_parse@@Base+0xb6c>
   1a3cc:	sub	r7, r7, #1
   1a3d0:	ldr	sl, [fp, #-136]	; 0xffffff78
   1a3d4:	b	1a2b8 <argp_parse@@Base+0x4c8>
   1a3d8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1a3dc:	cmn	r3, #1
   1a3e0:	beq	1a894 <argp_parse@@Base+0xaa4>
   1a3e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a3e8:	sub	r7, fp, #96	; 0x60
   1a3ec:	mov	r0, r7
   1a3f0:	mov	r2, #260	; 0x104
   1a3f4:	mov	r5, #7
   1a3f8:	bl	19618 <argp_state_help@@Base>
   1a3fc:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a400:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a404:	cmp	r3, ip
   1a408:	mov	r4, r3
   1a40c:	bcs	1abf8 <argp_parse@@Base+0xe08>
   1a410:	mov	r6, #5
   1a414:	movt	r6, #256	; 0x100
   1a418:	ldr	r3, [r4]
   1a41c:	mov	r1, #0
   1a420:	sub	r2, fp, #96	; 0x60
   1a424:	mov	r0, r6
   1a428:	cmp	r3, r1
   1a42c:	beq	1a460 <argp_parse@@Base+0x670>
   1a430:	ldr	lr, [r4, #12]
   1a434:	ldr	ip, [r4, #32]
   1a438:	str	ip, [fp, #-60]	; 0xffffffc4
   1a43c:	ldr	ip, [r4, #24]
   1a440:	str	ip, [fp, #-68]	; 0xffffffbc
   1a444:	ldr	ip, [r4, #28]
   1a448:	str	lr, [fp, #-76]	; 0xffffffb4
   1a44c:	str	ip, [fp, #-64]	; 0xffffffc0
   1a450:	blx	r3
   1a454:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a458:	str	r3, [r4, #32]
   1a45c:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a460:	add	r4, r4, #36	; 0x24
   1a464:	cmp	r4, ip
   1a468:	bcc	1a418 <argp_parse@@Base+0x628>
   1a46c:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a470:	sub	r4, ip, #36	; 0x24
   1a474:	cmp	r4, r3
   1a478:	bcc	1a4d8 <argp_parse@@Base+0x6e8>
   1a47c:	mov	r7, #7
   1a480:	movt	r7, #256	; 0x100
   1a484:	ldr	r6, [r4]
   1a488:	mov	r1, #0
   1a48c:	sub	r2, fp, #96	; 0x60
   1a490:	mov	r0, r7
   1a494:	cmp	r6, r1
   1a498:	beq	1a4cc <argp_parse@@Base+0x6dc>
   1a49c:	ldr	ip, [r4, #12]
   1a4a0:	ldr	r3, [r4, #32]
   1a4a4:	str	r3, [fp, #-60]	; 0xffffffc4
   1a4a8:	ldr	r3, [r4, #24]
   1a4ac:	str	r3, [fp, #-68]	; 0xffffffbc
   1a4b0:	ldr	r3, [r4, #28]
   1a4b4:	str	ip, [fp, #-76]	; 0xffffffb4
   1a4b8:	str	r3, [fp, #-64]	; 0xffffffc0
   1a4bc:	blx	r6
   1a4c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a4c4:	str	r3, [r4, #32]
   1a4c8:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a4cc:	sub	r4, r4, #36	; 0x24
   1a4d0:	cmp	r4, r3
   1a4d4:	bcs	1a484 <argp_parse@@Base+0x694>
   1a4d8:	cmp	r5, #7
   1a4dc:	moveq	r5, #22
   1a4e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a4e4:	bl	1afbc <argp_parse@@Base+0x11cc>
   1a4e8:	mov	r0, r5
   1a4ec:	sub	sp, fp, #32
   1a4f0:	ldrd	r4, [sp]
   1a4f4:	ldrd	r6, [sp, #8]
   1a4f8:	ldrd	r8, [sp, #16]
   1a4fc:	ldrd	sl, [sp, #24]
   1a500:	add	sp, sp, #32
   1a504:	pop	{pc}		; (ldr pc, [sp], #4)
   1a508:	ldr	lr, [fp, #-236]	; 0xffffff14
   1a50c:	add	r3, sl, #1
   1a510:	mov	r2, #45	; 0x2d
   1a514:	str	r3, [fp, #-208]	; 0xffffff30
   1a518:	strb	r2, [r6, lr]
   1a51c:	b	1a088 <argp_parse@@Base+0x298>
   1a520:	ldr	lr, [fp, #-84]	; 0xffffffac
   1a524:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1a528:	sub	lr, lr, #1
   1a52c:	cmp	r3, #0
   1a530:	str	lr, [fp, #-84]	; 0xffffffac
   1a534:	beq	1ac34 <argp_parse@@Base+0xe44>
   1a538:	ldr	r6, [r5, #12]
   1a53c:	sub	r2, fp, #96	; 0x60
   1a540:	mov	r1, #0
   1a544:	mov	r0, r9
   1a548:	ldr	ip, [r5, #24]
   1a54c:	ldr	lr, [r5, #32]
   1a550:	str	ip, [fp, #-68]	; 0xffffffbc
   1a554:	ldr	ip, [r5, #28]
   1a558:	str	r6, [fp, #-76]	; 0xffffffb4
   1a55c:	str	ip, [fp, #-64]	; 0xffffffc0
   1a560:	str	lr, [fp, #-60]	; 0xffffffc4
   1a564:	blx	r3
   1a568:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a56c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a570:	cmp	ip, r4
   1a574:	movls	r2, #0
   1a578:	movhi	r2, #1
   1a57c:	cmp	r0, #7
   1a580:	str	r3, [r5, #32]
   1a584:	movne	r2, #0
   1a588:	cmp	r2, #0
   1a58c:	beq	1ac3c <argp_parse@@Base+0xe4c>
   1a590:	ldr	lr, [fp, #-84]	; 0xffffffac
   1a594:	b	1a2d0 <argp_parse@@Base+0x4e0>
   1a598:	str	lr, [fp, #-84]	; 0xffffffac
   1a59c:	add	r3, r4, #36	; 0x24
   1a5a0:	cmp	ip, r4
   1a5a4:	mov	r4, r3
   1a5a8:	bhi	1a2d4 <argp_parse@@Base+0x4e4>
   1a5ac:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1a5b0:	ldr	r7, [fp, #-84]	; 0xffffffac
   1a5b4:	cmp	r7, r0
   1a5b8:	bne	1a7c8 <argp_parse@@Base+0x9d8>
   1a5bc:	ldr	r4, [fp, #-112]	; 0xffffff90
   1a5c0:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a5c4:	mov	r3, r4
   1a5c8:	cmp	r4, ip
   1a5cc:	bcs	1ac08 <argp_parse@@Base+0xe18>
   1a5d0:	mov	r6, #2
   1a5d4:	movt	r6, #256	; 0x100
   1a5d8:	mov	r5, #0
   1a5dc:	b	1a624 <argp_parse@@Base+0x834>
   1a5e0:	ldr	ip, [r4, #-4]
   1a5e4:	str	ip, [fp, #-60]	; 0xffffffc4
   1a5e8:	ldr	ip, [r4, #-12]
   1a5ec:	str	ip, [fp, #-68]	; 0xffffffbc
   1a5f0:	ldr	ip, [r4, #-8]
   1a5f4:	str	r3, [fp, #-76]	; 0xffffffb4
   1a5f8:	str	ip, [fp, #-64]	; 0xffffffc0
   1a5fc:	blx	r5
   1a600:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a604:	mov	r5, r0
   1a608:	str	r3, [r4, #-4]
   1a60c:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a610:	cmp	ip, r4
   1a614:	bls	1aadc <argp_parse@@Base+0xcec>
   1a618:	cmp	r5, #7
   1a61c:	cmpne	r5, #0
   1a620:	bne	1aaa4 <argp_parse@@Base+0xcb4>
   1a624:	ldr	r3, [r4, #12]
   1a628:	sub	r2, fp, #96	; 0x60
   1a62c:	mov	r0, r6
   1a630:	add	r4, r4, #36	; 0x24
   1a634:	subs	r1, r3, #0
   1a638:	bne	1a610 <argp_parse@@Base+0x820>
   1a63c:	ldr	r5, [r4, #-36]	; 0xffffffdc
   1a640:	cmp	r5, #0
   1a644:	bne	1a5e0 <argp_parse@@Base+0x7f0>
   1a648:	cmp	r4, ip
   1a64c:	mov	r5, #7
   1a650:	bcc	1a624 <argp_parse@@Base+0x834>
   1a654:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a658:	sub	r4, ip, #36	; 0x24
   1a65c:	cmp	r4, r3
   1a660:	bcs	1aaf8 <argp_parse@@Base+0xd08>
   1a664:	b	1ab7c <argp_parse@@Base+0xd8c>
   1a668:	mov	r5, r0
   1a66c:	cmp	r5, #7
   1a670:	bne	1a3fc <argp_parse@@Base+0x60c>
   1a674:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a678:	sub	r7, fp, #96	; 0x60
   1a67c:	b	1a3ec <argp_parse@@Base+0x5fc>
   1a680:	mov	r1, #1
   1a684:	mov	r7, r3
   1a688:	mov	r2, r1
   1a68c:	str	r1, [fp, #-100]	; 0xffffff9c
   1a690:	b	1a27c <argp_parse@@Base+0x48c>
   1a694:	str	ip, [sp]
   1a698:	sub	ip, fp, #148	; 0x94
   1a69c:	str	ip, [sp, #4]
   1a6a0:	bl	1b044 <argp_parse@@Base+0x1254>
   1a6a4:	ldr	r7, [fp, #-148]	; 0xffffff6c
   1a6a8:	mov	r4, r0
   1a6ac:	cmn	r4, #1
   1a6b0:	str	r7, [fp, #-84]	; 0xffffffac
   1a6b4:	bne	1a3bc <argp_parse@@Base+0x5cc>
   1a6b8:	mov	r3, #0
   1a6bc:	cmp	r7, #1
   1a6c0:	str	r3, [fp, #-100]	; 0xffffff9c
   1a6c4:	ble	1a79c <argp_parse@@Base+0x9ac>
   1a6c8:	sub	r3, r7, #-1073741823	; 0xc0000001
   1a6cc:	ldr	r1, [fp, #-232]	; 0xffffff18
   1a6d0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a6d4:	ldr	r0, [r2, r3, lsl #2]
   1a6d8:	bl	11654 <strcmp@plt>
   1a6dc:	cmp	r0, #0
   1a6e0:	bne	1a79c <argp_parse@@Base+0x9ac>
   1a6e4:	str	r7, [fp, #-72]	; 0xffffffb8
   1a6e8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1a6ec:	b	1a298 <argp_parse@@Base+0x4a8>
   1a6f0:	ldr	r2, [fp, #-244]	; 0xffffff0c
   1a6f4:	movw	r3, #62912	; 0xf5c0
   1a6f8:	movt	r3, #2
   1a6fc:	mov	r0, #1
   1a700:	tst	r5, #2
   1a704:	ldr	r1, [r3]
   1a708:	movw	r3, #62916	; 0xf5c4
   1a70c:	movt	r3, #2
   1a710:	str	r0, [fp, #-100]	; 0xffffff9c
   1a714:	mov	r0, #0
   1a718:	ldr	ip, [fp, #-232]	; 0xffffff18
   1a71c:	str	r7, [fp, #-96]	; 0xffffffa0
   1a720:	str	r2, [fp, #-92]	; 0xffffffa4
   1a724:	ldr	r2, [r3]
   1a728:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a72c:	str	r1, [fp, #-52]	; 0xffffffcc
   1a730:	mov	r1, #0
   1a734:	str	r2, [fp, #-48]	; 0xffffffd0
   1a738:	str	r3, [fp, #-108]	; 0xffffff94
   1a73c:	sub	r3, fp, #160	; 0xa0
   1a740:	str	ip, [fp, #-88]	; 0xffffffa8
   1a744:	str	r7, [fp, #-84]	; 0xffffffac
   1a748:	str	r5, [fp, #-80]	; 0xffffffb0
   1a74c:	strd	r0, [fp, #-76]	; 0xffffffb4
   1a750:	strd	r0, [fp, #-68]	; 0xffffffbc
   1a754:	strd	r0, [fp, #-60]	; 0xffffffc4
   1a758:	str	r3, [fp, #-44]	; 0xffffffd4
   1a75c:	mov	r3, ip
   1a760:	bne	1a220 <argp_parse@@Base+0x430>
   1a764:	mov	r2, #1
   1a768:	ldr	r4, [fp, #-92]	; 0xffffffa4
   1a76c:	str	r2, [fp, #-144]	; 0xffffff70
   1a770:	ldr	r2, [fp, #-232]	; 0xffffff18
   1a774:	cmp	r2, r3
   1a778:	bne	1a24c <argp_parse@@Base+0x45c>
   1a77c:	ldr	r0, [r2]
   1a780:	cmp	r0, #0
   1a784:	beq	1a24c <argp_parse@@Base+0x45c>
   1a788:	bl	1ad1c <argp_parse@@Base+0xf2c>
   1a78c:	str	r0, [fp, #-56]	; 0xffffffc8
   1a790:	b	1a25c <argp_parse@@Base+0x46c>
   1a794:	mov	r5, r0
   1a798:	b	1a4e8 <argp_parse@@Base+0x6f8>
   1a79c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1a7a0:	b	1a298 <argp_parse@@Base+0x4a8>
   1a7a4:	cmp	r0, #7
   1a7a8:	mov	r5, r0
   1a7ac:	str	r8, [fp, #-232]	; 0xffffff18
   1a7b0:	beq	1a210 <argp_parse@@Base+0x420>
   1a7b4:	cmp	r0, #0
   1a7b8:	bne	1a4e8 <argp_parse@@Base+0x6f8>
   1a7bc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1a7c0:	ldr	r5, [fp, #-80]	; 0xffffffb0
   1a7c4:	b	1a218 <argp_parse@@Base+0x428>
   1a7c8:	ldr	r3, [fp, #4]
   1a7cc:	cmp	r3, #0
   1a7d0:	beq	1a910 <argp_parse@@Base+0xb20>
   1a7d4:	str	r7, [r3]
   1a7d8:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a7dc:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a7e0:	sub	r2, ip, #36	; 0x24
   1a7e4:	cmp	r3, r2
   1a7e8:	movls	r6, #4
   1a7ec:	subls	r4, ip, #72	; 0x48
   1a7f0:	movtls	r6, #256	; 0x100
   1a7f4:	bhi	1aa24 <argp_parse@@Base+0xc34>
   1a7f8:	ldr	r5, [r4, #36]	; 0x24
   1a7fc:	mov	r1, #0
   1a800:	sub	r2, fp, #96	; 0x60
   1a804:	mov	r0, r6
   1a808:	cmp	r5, r1
   1a80c:	beq	1a948 <argp_parse@@Base+0xb58>
   1a810:	ldr	ip, [r4, #48]	; 0x30
   1a814:	ldr	r3, [r4, #68]	; 0x44
   1a818:	str	r3, [fp, #-60]	; 0xffffffc4
   1a81c:	ldr	r3, [r4, #60]	; 0x3c
   1a820:	str	r3, [fp, #-68]	; 0xffffffbc
   1a824:	ldr	r3, [r4, #64]	; 0x40
   1a828:	str	ip, [fp, #-76]	; 0xffffffb4
   1a82c:	str	r3, [fp, #-64]	; 0xffffffc0
   1a830:	blx	r5
   1a834:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a838:	str	r3, [r4, #68]	; 0x44
   1a83c:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a840:	cmp	r3, r4
   1a844:	sub	r4, r4, #36	; 0x24
   1a848:	bhi	1aa04 <argp_parse@@Base+0xc14>
   1a84c:	cmp	r0, #7
   1a850:	cmpne	r0, #0
   1a854:	beq	1a7f8 <argp_parse@@Base+0xa08>
   1a858:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a85c:	mov	r5, r0
   1a860:	sub	r4, ip, #36	; 0x24
   1a864:	cmp	r4, r3
   1a868:	bcs	1a47c <argp_parse@@Base+0x68c>
   1a86c:	b	1a4e0 <argp_parse@@Base+0x6f0>
   1a870:	ldr	r2, [fp, #-232]	; 0xffffff18
   1a874:	ldr	r2, [r2]
   1a878:	str	r2, [r3]
   1a87c:	b	19e38 <argp_parse@@Base+0x48>
   1a880:	ldr	r3, [fp, #-232]	; 0xffffff18
   1a884:	ldr	r0, [r3]
   1a888:	bl	1ad1c <argp_parse@@Base+0xf2c>
   1a88c:	str	r0, [r4]
   1a890:	b	19e4c <argp_parse@@Base+0x5c>
   1a894:	mov	r1, r4
   1a898:	ldr	r0, [fp, #-156]	; 0xffffff64
   1a89c:	bl	11900 <strchr@plt>
   1a8a0:	cmp	r0, #0
   1a8a4:	beq	1a8e0 <argp_parse@@Base+0xaf0>
   1a8a8:	ldr	r5, [fp, #-112]	; 0xffffff90
   1a8ac:	ldr	r2, [fp, #-108]	; 0xffffff94
   1a8b0:	cmp	r5, r2
   1a8b4:	bcs	1a8e0 <argp_parse@@Base+0xaf0>
   1a8b8:	ldr	r3, [r5, #8]
   1a8bc:	cmp	r3, r0
   1a8c0:	bls	1a8d4 <argp_parse@@Base+0xae4>
   1a8c4:	b	1ab98 <argp_parse@@Base+0xda8>
   1a8c8:	ldr	r3, [r5, #8]
   1a8cc:	cmp	r0, r3
   1a8d0:	bcc	1ab98 <argp_parse@@Base+0xda8>
   1a8d4:	add	r5, r5, #36	; 0x24
   1a8d8:	cmp	r5, r2
   1a8dc:	bcc	1a8c8 <argp_parse@@Base+0xad8>
   1a8e0:	sub	r7, fp, #96	; 0x60
   1a8e4:	mov	r2, r4
   1a8e8:	add	r4, r4, #1
   1a8ec:	ldr	r3, [pc, #888]	; 1ac6c <argp_parse@@Base+0xe7c>
   1a8f0:	movw	r1, #59448	; 0xe838
   1a8f4:	movt	r1, #1
   1a8f8:	mov	r0, r7
   1a8fc:	bic	r4, r4, #2
   1a900:	bl	196d8 <argp_error@@Base>
   1a904:	cmp	r4, #0
   1a908:	bne	1a940 <argp_parse@@Base+0xb50>
   1a90c:	b	1a5ac <argp_parse@@Base+0x7bc>
   1a910:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1a914:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a918:	tst	r3, #2
   1a91c:	bne	1a678 <argp_parse@@Base+0x888>
   1a920:	cmp	r1, #0
   1a924:	beq	1a678 <argp_parse@@Base+0x888>
   1a928:	mov	r0, r1
   1a92c:	movw	r1, #59468	; 0xe84c
   1a930:	movt	r1, #1
   1a934:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a938:	sub	r7, fp, #96	; 0x60
   1a93c:	bl	1190c <fprintf@plt>
   1a940:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a944:	b	1a3ec <argp_parse@@Base+0x5fc>
   1a948:	cmp	r4, r3
   1a94c:	sub	r4, r4, #36	; 0x24
   1a950:	bcs	1a7f8 <argp_parse@@Base+0xa08>
   1a954:	mov	r5, #7
   1a958:	b	1aa08 <argp_parse@@Base+0xc18>
   1a95c:	asrs	r8, r4, #24
   1a960:	beq	1a894 <argp_parse@@Base+0xaa4>
   1a964:	add	r3, r8, r8, lsl #3
   1a968:	ldr	r5, [fp, #-112]	; 0xffffff90
   1a96c:	ands	r2, r4, #8388608	; 0x800000
   1a970:	movne	r2, #-16777216	; 0xff000000
   1a974:	bic	r0, r4, #-16777216	; 0xff000000
   1a978:	lsl	r3, r3, #2
   1a97c:	orr	r0, r0, r2
   1a980:	sub	r3, r3, #36	; 0x24
   1a984:	ldr	r6, [r5, r3]
   1a988:	add	r5, r5, r3
   1a98c:	cmp	r6, #0
   1a990:	beq	1ac00 <argp_parse@@Base+0xe10>
   1a994:	add	r1, r5, #24
   1a998:	ldr	lr, [r5, #12]
   1a99c:	sub	r7, fp, #96	; 0x60
   1a9a0:	ldm	r1, {r1, r3, ip}
   1a9a4:	mov	r2, r7
   1a9a8:	str	lr, [fp, #-76]	; 0xffffffb4
   1a9ac:	str	r1, [fp, #-68]	; 0xffffffbc
   1a9b0:	str	r3, [fp, #-64]	; 0xffffffc0
   1a9b4:	str	ip, [fp, #-60]	; 0xffffffc4
   1a9b8:	ldr	r1, [fp, #-136]	; 0xffffff78
   1a9bc:	blx	r6
   1a9c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a9c4:	str	r3, [r5, #32]
   1a9c8:	cmp	r0, #7
   1a9cc:	beq	1aa2c <argp_parse@@Base+0xc3c>
   1a9d0:	cmp	r0, #0
   1a9d4:	bne	1a668 <argp_parse@@Base+0x878>
   1a9d8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1a9dc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1a9e0:	ldr	r7, [fp, #-84]	; 0xffffffac
   1a9e4:	b	1a27c <argp_parse@@Base+0x48c>
   1a9e8:	movw	r2, #64004	; 0xfa04
   1a9ec:	movt	r2, #2
   1a9f0:	ldr	r2, [r2]
   1a9f4:	cmp	r2, #0
   1a9f8:	addeq	r2, r3, #16
   1a9fc:	bne	19f20 <argp_parse@@Base+0x130>
   1aa00:	b	19f2c <argp_parse@@Base+0x13c>
   1aa04:	mov	r5, r0
   1aa08:	ldr	ip, [fp, #-108]	; 0xffffff94
   1aa0c:	cmp	r5, #7
   1aa10:	sub	r4, ip, #36	; 0x24
   1aa14:	bne	1a864 <argp_parse@@Base+0xa74>
   1aa18:	cmp	r4, r3
   1aa1c:	movcs	r5, #0
   1aa20:	bcs	1a47c <argp_parse@@Base+0x68c>
   1aa24:	mov	r5, #0
   1aa28:	b	1a4e0 <argp_parse@@Base+0x6f0>
   1aa2c:	cmp	r8, #0
   1aa30:	beq	1a8e4 <argp_parse@@Base+0xaf4>
   1aa34:	ldr	r3, [fp, #-152]	; 0xffffff68
   1aa38:	ldr	r2, [r3]
   1aa3c:	ldr	r1, [r3, #12]
   1aa40:	cmp	r4, r1
   1aa44:	bne	1aa60 <argp_parse@@Base+0xc70>
   1aa48:	b	1aa90 <argp_parse@@Base+0xca0>
   1aa4c:	add	r3, r3, #16
   1aa50:	ldr	r2, [r3]
   1aa54:	ldr	r1, [r3, #12]
   1aa58:	cmp	r4, r1
   1aa5c:	beq	1aa90 <argp_parse@@Base+0xca0>
   1aa60:	cmp	r2, #0
   1aa64:	bne	1aa4c <argp_parse@@Base+0xc5c>
   1aa68:	movw	r2, #54072	; 0xd338
   1aa6c:	movt	r2, #1
   1aa70:	movw	r1, #59456	; 0xe840
   1aa74:	movt	r1, #1
   1aa78:	ldr	r3, [pc, #492]	; 1ac6c <argp_parse@@Base+0xe7c>
   1aa7c:	mov	r0, r7
   1aa80:	add	r4, r4, #1
   1aa84:	bl	196d8 <argp_error@@Base>
   1aa88:	bic	r4, r4, #2
   1aa8c:	b	1a904 <argp_parse@@Base+0xb14>
   1aa90:	movw	r3, #54072	; 0xd338
   1aa94:	movt	r3, #1
   1aa98:	cmp	r2, #0
   1aa9c:	moveq	r2, r3
   1aaa0:	b	1aa70 <argp_parse@@Base+0xc80>
   1aaa4:	ldr	r3, [fp, #-112]	; 0xffffff90
   1aaa8:	sub	r2, ip, #36	; 0x24
   1aaac:	cmp	r3, r2
   1aab0:	bhi	1ac24 <argp_parse@@Base+0xe34>
   1aab4:	ldr	r2, [fp, #4]
   1aab8:	cmp	r2, #0
   1aabc:	beq	1aacc <argp_parse@@Base+0xcdc>
   1aac0:	ldr	r2, [fp, #-84]	; 0xffffffac
   1aac4:	ldr	r1, [fp, #4]
   1aac8:	str	r2, [r1]
   1aacc:	cmp	r5, #0
   1aad0:	bne	1a66c <argp_parse@@Base+0x87c>
   1aad4:	ldr	ip, [fp, #-108]	; 0xffffff94
   1aad8:	b	1a7e0 <argp_parse@@Base+0x9f0>
   1aadc:	ldr	r3, [fp, #-112]	; 0xffffff90
   1aae0:	sub	r4, ip, #36	; 0x24
   1aae4:	cmp	r4, r3
   1aae8:	bcc	1abec <argp_parse@@Base+0xdfc>
   1aaec:	cmp	r5, #7
   1aaf0:	cmpne	r5, #0
   1aaf4:	bne	1aab4 <argp_parse@@Base+0xcc4>
   1aaf8:	mov	r6, #1
   1aafc:	movt	r6, #256	; 0x100
   1ab00:	sub	r4, r4, #36	; 0x24
   1ab04:	ldr	r5, [r4, #36]	; 0x24
   1ab08:	mov	r1, #0
   1ab0c:	sub	r2, fp, #96	; 0x60
   1ab10:	mov	r0, r6
   1ab14:	cmp	r5, r1
   1ab18:	beq	1ab6c <argp_parse@@Base+0xd7c>
   1ab1c:	ldr	ip, [r4, #48]	; 0x30
   1ab20:	ldr	r3, [r4, #68]	; 0x44
   1ab24:	str	r3, [fp, #-60]	; 0xffffffc4
   1ab28:	ldr	r3, [r4, #60]	; 0x3c
   1ab2c:	str	r3, [fp, #-68]	; 0xffffffbc
   1ab30:	ldr	r3, [r4, #64]	; 0x40
   1ab34:	str	ip, [fp, #-76]	; 0xffffffb4
   1ab38:	str	r3, [fp, #-64]	; 0xffffffc0
   1ab3c:	blx	r5
   1ab40:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ab44:	str	r3, [r4, #68]	; 0x44
   1ab48:	ldr	r3, [fp, #-112]	; 0xffffff90
   1ab4c:	cmp	r3, r4
   1ab50:	sub	r4, r4, #36	; 0x24
   1ab54:	bhi	1abe8 <argp_parse@@Base+0xdf8>
   1ab58:	cmp	r0, #7
   1ab5c:	cmpne	r0, #0
   1ab60:	beq	1ab04 <argp_parse@@Base+0xd14>
   1ab64:	mov	r5, r0
   1ab68:	b	1aab4 <argp_parse@@Base+0xcc4>
   1ab6c:	cmp	r3, r4
   1ab70:	sub	r4, r4, #36	; 0x24
   1ab74:	bls	1ab04 <argp_parse@@Base+0xd14>
   1ab78:	ldr	ip, [fp, #-108]	; 0xffffff94
   1ab7c:	ldr	r2, [fp, #4]
   1ab80:	cmp	r2, #0
   1ab84:	beq	1a7e0 <argp_parse@@Base+0x9f0>
   1ab88:	ldr	r2, [fp, #-84]	; 0xffffffac
   1ab8c:	ldr	r1, [fp, #4]
   1ab90:	str	r2, [r1]
   1ab94:	b	1a7e0 <argp_parse@@Base+0x9f0>
   1ab98:	ldr	r3, [r5]
   1ab9c:	cmp	r3, #0
   1aba0:	beq	1a8e0 <argp_parse@@Base+0xaf0>
   1aba4:	ldr	r6, [r5, #12]
   1aba8:	sub	r7, fp, #96	; 0x60
   1abac:	mov	r0, r4
   1abb0:	mov	r2, r7
   1abb4:	mov	r8, #0
   1abb8:	ldr	ip, [r5, #24]
   1abbc:	ldr	r1, [r5, #28]
   1abc0:	ldr	lr, [r5, #32]
   1abc4:	str	r6, [fp, #-76]	; 0xffffffb4
   1abc8:	str	ip, [fp, #-68]	; 0xffffffbc
   1abcc:	str	r1, [fp, #-64]	; 0xffffffc0
   1abd0:	ldr	r1, [fp, #-136]	; 0xffffff78
   1abd4:	str	lr, [fp, #-60]	; 0xffffffc4
   1abd8:	blx	r3
   1abdc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1abe0:	str	r3, [r5, #32]
   1abe4:	b	1a9c8 <argp_parse@@Base+0xbd8>
   1abe8:	mov	r5, r0
   1abec:	cmp	r5, #7
   1abf0:	beq	1ab78 <argp_parse@@Base+0xd88>
   1abf4:	b	1aab4 <argp_parse@@Base+0xcc4>
   1abf8:	sub	r4, ip, #36	; 0x24
   1abfc:	b	1a474 <argp_parse@@Base+0x684>
   1ac00:	sub	r7, fp, #96	; 0x60
   1ac04:	b	1aa34 <argp_parse@@Base+0xc44>
   1ac08:	sub	r4, ip, #36	; 0x24
   1ac0c:	cmp	r3, r4
   1ac10:	bls	1aaf8 <argp_parse@@Base+0xd08>
   1ac14:	ldr	r2, [fp, #4]
   1ac18:	cmp	r2, #0
   1ac1c:	bne	1ab88 <argp_parse@@Base+0xd98>
   1ac20:	b	1aa24 <argp_parse@@Base+0xc34>
   1ac24:	ldr	r2, [fp, #4]
   1ac28:	cmp	r2, #0
   1ac2c:	bne	1aac0 <argp_parse@@Base+0xcd0>
   1ac30:	b	1a404 <argp_parse@@Base+0x614>
   1ac34:	ldr	ip, [fp, #-108]	; 0xffffff94
   1ac38:	b	1a59c <argp_parse@@Base+0x7ac>
   1ac3c:	cmp	r0, #0
   1ac40:	beq	1ac58 <argp_parse@@Base+0xe68>
   1ac44:	cmp	r0, #7
   1ac48:	mov	r5, r0
   1ac4c:	ldrne	r3, [fp, #-112]	; 0xffffff90
   1ac50:	beq	1a5ac <argp_parse@@Base+0x7bc>
   1ac54:	b	1a404 <argp_parse@@Base+0x614>
   1ac58:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1ac5c:	mov	r0, r3
   1ac60:	str	r3, [fp, #-84]	; 0xffffffac
   1ac64:	b	1a340 <argp_parse@@Base+0x550>
   1ac68:	andeq	lr, r1, r0, lsl r7
   1ac6c:	andeq	lr, r1, ip, lsr #14
   1ac70:	cmp	r1, #0
   1ac74:	beq	1acb4 <argp_parse@@Base+0xec4>
   1ac78:	ldr	r2, [r1, #52]	; 0x34
   1ac7c:	ldr	r3, [r2, #48]	; 0x30
   1ac80:	ldr	r1, [r2, #52]	; 0x34
   1ac84:	cmp	r3, r1
   1ac88:	bcs	1acb4 <argp_parse@@Base+0xec4>
   1ac8c:	ldr	r2, [r3, #4]
   1ac90:	cmp	r0, r2
   1ac94:	bne	1aca8 <argp_parse@@Base+0xeb8>
   1ac98:	b	1acbc <argp_parse@@Base+0xecc>
   1ac9c:	ldr	r2, [r3, #4]
   1aca0:	cmp	r2, r0
   1aca4:	beq	1acbc <argp_parse@@Base+0xecc>
   1aca8:	add	r3, r3, #36	; 0x24
   1acac:	cmp	r3, r1
   1acb0:	bcc	1ac9c <argp_parse@@Base+0xeac>
   1acb4:	mov	r0, #0
   1acb8:	bx	lr
   1acbc:	ldr	r0, [r3, #24]
   1acc0:	bx	lr
   1acc4:	movw	r1, #64008	; 0xfa08
   1acc8:	movt	r1, #2
   1accc:	push	{lr}		; (str lr, [sp, #-4]!)
   1acd0:	ldm	r1, {r1, ip}
   1acd4:	sub	sp, sp, #12
   1acd8:	movw	r3, #59684	; 0xe924
   1acdc:	movt	r3, #1
   1ace0:	movw	r2, #59700	; 0xe934
   1ace4:	movt	r2, #1
   1ace8:	str	ip, [sp]
   1acec:	bl	1b668 <argp_parse@@Base+0x1878>
   1acf0:	add	sp, sp, #12
   1acf4:	pop	{pc}		; (ldr pc, [sp], #4)
   1acf8:	movw	r2, #64004	; 0xfa04
   1acfc:	movt	r2, #2
   1ad00:	movw	ip, #44228	; 0xacc4
   1ad04:	movt	ip, #1
   1ad08:	movw	r3, #64008	; 0xfa08
   1ad0c:	movt	r3, #2
   1ad10:	str	ip, [r2]
   1ad14:	strd	r0, [r3]
   1ad18:	bx	lr
   1ad1c:	ldrb	r3, [r0]
   1ad20:	cmp	r3, #47	; 0x2f
   1ad24:	bne	1ad34 <argp_parse@@Base+0xf44>
   1ad28:	ldrb	r3, [r0, #1]!
   1ad2c:	cmp	r3, #47	; 0x2f
   1ad30:	beq	1ad28 <argp_parse@@Base+0xf38>
   1ad34:	cmp	r3, #0
   1ad38:	beq	1ad68 <argp_parse@@Base+0xf78>
   1ad3c:	mov	r2, r0
   1ad40:	mov	r1, #0
   1ad44:	cmp	r3, #47	; 0x2f
   1ad48:	moveq	r1, #1
   1ad4c:	beq	1ad5c <argp_parse@@Base+0xf6c>
   1ad50:	cmp	r1, #0
   1ad54:	movne	r0, r2
   1ad58:	movne	r1, #0
   1ad5c:	ldrb	r3, [r2, #1]!
   1ad60:	cmp	r3, #0
   1ad64:	bne	1ad44 <argp_parse@@Base+0xf54>
   1ad68:	bx	lr
   1ad6c:	str	r4, [sp, #-8]!
   1ad70:	mov	r4, r0
   1ad74:	str	lr, [sp, #4]
   1ad78:	bl	118e8 <strlen@plt>
   1ad7c:	cmp	r0, #1
   1ad80:	bls	1ada4 <argp_parse@@Base+0xfb4>
   1ad84:	add	r2, r4, r0
   1ad88:	mov	r3, r0
   1ad8c:	ldrb	r2, [r2, #-1]
   1ad90:	cmp	r2, #47	; 0x2f
   1ad94:	subeq	r3, r0, #2
   1ad98:	rsbeq	r1, r4, #1
   1ad9c:	addeq	r3, r4, r3
   1ada0:	beq	1adb0 <argp_parse@@Base+0xfc0>
   1ada4:	ldr	r4, [sp]
   1ada8:	add	sp, sp, #4
   1adac:	pop	{pc}		; (ldr pc, [sp], #4)
   1adb0:	cmp	r3, r4
   1adb4:	add	r0, r1, r3
   1adb8:	beq	1ada4 <argp_parse@@Base+0xfb4>
   1adbc:	ldrb	r2, [r3], #-1
   1adc0:	cmp	r2, #47	; 0x2f
   1adc4:	beq	1adb0 <argp_parse@@Base+0xfc0>
   1adc8:	ldr	r4, [sp]
   1adcc:	add	sp, sp, #4
   1add0:	pop	{pc}		; (ldr pc, [sp], #4)
   1add4:	push	{r1, r2, r3}
   1add8:	strd	r4, [sp, #-20]!	; 0xffffffec
   1addc:	strd	r6, [sp, #8]
   1ade0:	str	lr, [sp, #16]
   1ade4:	sub	sp, sp, #8
   1ade8:	ldr	r1, [sp, #28]
   1adec:	add	r2, sp, #32
   1adf0:	str	r2, [sp, #4]
   1adf4:	cmp	r1, #0
   1adf8:	beq	1aed4 <argp_parse@@Base+0x10e4>
   1adfc:	movw	r3, #1030	; 0x406
   1ae00:	mov	r6, r0
   1ae04:	cmp	r1, r3
   1ae08:	beq	1aee4 <argp_parse@@Base+0x10f4>
   1ae0c:	cmp	r1, #11
   1ae10:	beq	1ae8c <argp_parse@@Base+0x109c>
   1ae14:	ble	1ae6c <argp_parse@@Base+0x107c>
   1ae18:	movw	r2, #1031	; 0x407
   1ae1c:	cmp	r1, r2
   1ae20:	bgt	1aea8 <argp_parse@@Base+0x10b8>
   1ae24:	cmp	r1, r3
   1ae28:	bge	1ae38 <argp_parse@@Base+0x1048>
   1ae2c:	movw	r3, #1025	; 0x401
   1ae30:	cmp	r1, r3
   1ae34:	beq	1ae8c <argp_parse@@Base+0x109c>
   1ae38:	ldr	r3, [sp, #4]
   1ae3c:	mov	r0, r6
   1ae40:	ldr	r2, [r3]
   1ae44:	bl	1199c <fcntl64@plt>
   1ae48:	mov	r4, r0
   1ae4c:	mov	r0, r4
   1ae50:	add	sp, sp, #8
   1ae54:	ldrd	r4, [sp]
   1ae58:	ldrd	r6, [sp, #8]
   1ae5c:	ldr	lr, [sp, #16]
   1ae60:	add	sp, sp, #20
   1ae64:	add	sp, sp, #12
   1ae68:	bx	lr
   1ae6c:	cmp	r1, #4
   1ae70:	beq	1ae38 <argp_parse@@Base+0x1048>
   1ae74:	bgt	1ae9c <argp_parse@@Base+0x10ac>
   1ae78:	cmp	r1, #2
   1ae7c:	beq	1ae38 <argp_parse@@Base+0x1048>
   1ae80:	bgt	1ae8c <argp_parse@@Base+0x109c>
   1ae84:	cmp	r1, #1
   1ae88:	bne	1ae38 <argp_parse@@Base+0x1048>
   1ae8c:	mov	r0, r6
   1ae90:	bl	1199c <fcntl64@plt>
   1ae94:	mov	r4, r0
   1ae98:	b	1ae4c <argp_parse@@Base+0x105c>
   1ae9c:	cmp	r1, #9
   1aea0:	bne	1ae38 <argp_parse@@Base+0x1048>
   1aea4:	b	1ae8c <argp_parse@@Base+0x109c>
   1aea8:	movw	r3, #1033	; 0x409
   1aeac:	cmp	r1, r3
   1aeb0:	beq	1ae38 <argp_parse@@Base+0x1048>
   1aeb4:	blt	1ae8c <argp_parse@@Base+0x109c>
   1aeb8:	movw	r3, #1034	; 0x40a
   1aebc:	cmp	r1, r3
   1aec0:	bne	1ae38 <argp_parse@@Base+0x1048>
   1aec4:	mov	r0, r6
   1aec8:	bl	1199c <fcntl64@plt>
   1aecc:	mov	r4, r0
   1aed0:	b	1ae4c <argp_parse@@Base+0x105c>
   1aed4:	ldr	r2, [sp, #32]
   1aed8:	bl	1199c <fcntl64@plt>
   1aedc:	mov	r4, r0
   1aee0:	b	1ae4c <argp_parse@@Base+0x105c>
   1aee4:	movw	r5, #64016	; 0xfa10
   1aee8:	movt	r5, #2
   1aeec:	ldr	r7, [r2]
   1aef0:	add	r2, sp, #36	; 0x24
   1aef4:	ldr	r3, [r5]
   1aef8:	str	r2, [sp, #4]
   1aefc:	mov	r2, r7
   1af00:	cmp	r3, #0
   1af04:	blt	1af20 <argp_parse@@Base+0x1130>
   1af08:	bl	1199c <fcntl64@plt>
   1af0c:	subs	r4, r0, #0
   1af10:	blt	1af88 <argp_parse@@Base+0x1198>
   1af14:	mov	r3, #1
   1af18:	str	r3, [r5]
   1af1c:	b	1ae4c <argp_parse@@Base+0x105c>
   1af20:	mov	r1, #0
   1af24:	bl	1199c <fcntl64@plt>
   1af28:	subs	r4, r0, #0
   1af2c:	blt	1ae4c <argp_parse@@Base+0x105c>
   1af30:	ldr	r3, [r5]
   1af34:	cmn	r3, #1
   1af38:	bne	1ae4c <argp_parse@@Base+0x105c>
   1af3c:	mov	r1, #1
   1af40:	mov	r0, r4
   1af44:	bl	1199c <fcntl64@plt>
   1af48:	subs	r2, r0, #0
   1af4c:	blt	1af68 <argp_parse@@Base+0x1178>
   1af50:	orr	r2, r2, #1
   1af54:	mov	r1, #2
   1af58:	mov	r0, r4
   1af5c:	bl	1199c <fcntl64@plt>
   1af60:	cmn	r0, #1
   1af64:	bne	1ae4c <argp_parse@@Base+0x105c>
   1af68:	bl	11918 <__errno_location@plt>
   1af6c:	mov	r5, r0
   1af70:	mov	r0, r4
   1af74:	ldr	r6, [r5]
   1af78:	mvn	r4, #0
   1af7c:	bl	11ac8 <close@plt>
   1af80:	str	r6, [r5]
   1af84:	b	1ae4c <argp_parse@@Base+0x105c>
   1af88:	bl	11918 <__errno_location@plt>
   1af8c:	ldr	r3, [r0]
   1af90:	cmp	r3, #22
   1af94:	bne	1af14 <argp_parse@@Base+0x1124>
   1af98:	mov	r2, r7
   1af9c:	mov	r0, r6
   1afa0:	mov	r1, #0
   1afa4:	bl	1199c <fcntl64@plt>
   1afa8:	subs	r4, r0, #0
   1afac:	mvnge	r3, #0
   1afb0:	strge	r3, [r5]
   1afb4:	bge	1af3c <argp_parse@@Base+0x114c>
   1afb8:	b	1ae4c <argp_parse@@Base+0x105c>
   1afbc:	strd	r4, [sp, #-12]!
   1afc0:	mov	r5, r0
   1afc4:	str	lr, [sp, #8]
   1afc8:	sub	sp, sp, #12
   1afcc:	bl	11918 <__errno_location@plt>
   1afd0:	mov	r4, r0
   1afd4:	mov	r2, #0
   1afd8:	ldr	r3, [r4]
   1afdc:	mov	r0, r5
   1afe0:	str	r2, [r4]
   1afe4:	str	r3, [sp]
   1afe8:	str	r3, [sp, #4]
   1afec:	bl	116d8 <free@plt>
   1aff0:	ldr	r3, [r4]
   1aff4:	add	r2, sp, #8
   1aff8:	clz	r3, r3
   1affc:	lsr	r3, r3, #5
   1b000:	add	r3, r2, r3, lsl #2
   1b004:	ldr	r3, [r3, #-8]
   1b008:	str	r3, [r4]
   1b00c:	add	sp, sp, #12
   1b010:	ldrd	r4, [sp]
   1b014:	add	sp, sp, #8
   1b018:	pop	{pc}		; (ldr pc, [sp], #4)
   1b01c:	push	{lr}		; (str lr, [sp, #-4]!)
   1b020:	sub	sp, sp, #20
   1b024:	mov	ip, #0
   1b028:	ldr	lr, [sp, #24]
   1b02c:	str	lr, [sp]
   1b030:	str	ip, [sp, #4]
   1b034:	str	ip, [sp, #8]
   1b038:	bl	1d124 <argp_parse@@Base+0x3334>
   1b03c:	add	sp, sp, #20
   1b040:	pop	{pc}		; (ldr pc, [sp], #4)
   1b044:	str	r4, [sp, #-8]!
   1b048:	mov	ip, #0
   1b04c:	str	lr, [sp, #4]
   1b050:	sub	sp, sp, #16
   1b054:	ldr	r4, [sp, #24]
   1b058:	str	ip, [sp, #12]
   1b05c:	ldr	lr, [sp, #28]
   1b060:	stm	sp, {r4, ip, lr}
   1b064:	bl	1cb8c <argp_parse@@Base+0x2d9c>
   1b068:	add	sp, sp, #16
   1b06c:	ldr	r4, [sp]
   1b070:	add	sp, sp, #4
   1b074:	pop	{pc}		; (ldr pc, [sp], #4)
   1b078:	str	r4, [sp, #-8]!
   1b07c:	mov	r4, #1
   1b080:	str	lr, [sp, #4]
   1b084:	sub	sp, sp, #16
   1b088:	mov	lr, #0
   1b08c:	ldr	ip, [sp, #24]
   1b090:	str	ip, [sp]
   1b094:	stmib	sp, {r4, lr}
   1b098:	bl	1d124 <argp_parse@@Base+0x3334>
   1b09c:	add	sp, sp, #16
   1b0a0:	ldr	r4, [sp]
   1b0a4:	add	sp, sp, #4
   1b0a8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b0ac:	strd	r4, [sp, #-12]!
   1b0b0:	mov	r4, #0
   1b0b4:	mov	r5, #1
   1b0b8:	str	lr, [sp, #8]
   1b0bc:	sub	sp, sp, #20
   1b0c0:	ldr	lr, [sp, #32]
   1b0c4:	ldr	ip, [sp, #36]	; 0x24
   1b0c8:	str	lr, [sp]
   1b0cc:	str	r4, [sp, #12]
   1b0d0:	stmib	sp, {r5, ip}
   1b0d4:	bl	1cb8c <argp_parse@@Base+0x2d9c>
   1b0d8:	add	sp, sp, #20
   1b0dc:	ldrd	r4, [sp]
   1b0e0:	add	sp, sp, #8
   1b0e4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b0e8:	strd	r4, [sp, #-16]!
   1b0ec:	subs	r4, r0, #0
   1b0f0:	str	r6, [sp, #8]
   1b0f4:	str	lr, [sp, #12]
   1b0f8:	beq	1b190 <argp_parse@@Base+0x13a0>
   1b0fc:	mov	r1, #47	; 0x2f
   1b100:	bl	119f0 <strrchr@plt>
   1b104:	subs	r5, r0, #0
   1b108:	beq	1b168 <argp_parse@@Base+0x1378>
   1b10c:	add	r6, r5, #1
   1b110:	sub	r3, r6, r4
   1b114:	cmp	r3, #6
   1b118:	ble	1b168 <argp_parse@@Base+0x1378>
   1b11c:	movw	r1, #59772	; 0xe97c
   1b120:	movt	r1, #1
   1b124:	mov	r2, #7
   1b128:	sub	r0, r5, #6
   1b12c:	bl	11aa4 <strncmp@plt>
   1b130:	cmp	r0, #0
   1b134:	bne	1b168 <argp_parse@@Base+0x1378>
   1b138:	movw	r1, #59780	; 0xe984
   1b13c:	movt	r1, #1
   1b140:	mov	r2, #3
   1b144:	mov	r0, r6
   1b148:	bl	11aa4 <strncmp@plt>
   1b14c:	cmp	r0, #0
   1b150:	movne	r4, r6
   1b154:	bne	1b168 <argp_parse@@Base+0x1378>
   1b158:	add	r4, r5, #4
   1b15c:	movw	r3, #62904	; 0xf5b8
   1b160:	movt	r3, #2
   1b164:	str	r4, [r3]
   1b168:	movw	r2, #64020	; 0xfa14
   1b16c:	movt	r2, #2
   1b170:	ldr	r6, [sp, #8]
   1b174:	movw	r3, #62908	; 0xf5bc
   1b178:	movt	r3, #2
   1b17c:	str	r4, [r2]
   1b180:	str	r4, [r3]
   1b184:	ldrd	r4, [sp]
   1b188:	add	sp, sp, #12
   1b18c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b190:	movw	r3, #62912	; 0xf5c0
   1b194:	movt	r3, #2
   1b198:	movw	r0, #59716	; 0xe944
   1b19c:	movt	r0, #1
   1b1a0:	ldr	r3, [r3]
   1b1a4:	mov	r2, #55	; 0x37
   1b1a8:	mov	r1, #1
   1b1ac:	bl	11804 <fwrite@plt>
   1b1b0:	bl	11ab0 <abort@plt>
   1b1b4:	strd	r4, [sp, #-16]!
   1b1b8:	mov	r5, r0
   1b1bc:	mov	r0, #33	; 0x21
   1b1c0:	str	r6, [sp, #8]
   1b1c4:	str	lr, [sp, #12]
   1b1c8:	bl	1b7e0 <argp_parse@@Base+0x19f0>
   1b1cc:	mov	r4, r0
   1b1d0:	add	r1, r5, #44	; 0x2c
   1b1d4:	mov	r2, #32
   1b1d8:	mov	r5, #0
   1b1dc:	bl	11960 <strncpy@plt>
   1b1e0:	mov	r0, r4
   1b1e4:	strb	r5, [r4, #32]
   1b1e8:	bl	118e8 <strlen@plt>
   1b1ec:	add	r0, r4, r0
   1b1f0:	cmp	r4, r0
   1b1f4:	bcs	1b204 <argp_parse@@Base+0x1414>
   1b1f8:	ldrb	r3, [r0, #-1]
   1b1fc:	cmp	r3, #32
   1b200:	beq	1b218 <argp_parse@@Base+0x1428>
   1b204:	mov	r0, r4
   1b208:	ldrd	r4, [sp]
   1b20c:	ldr	r6, [sp, #8]
   1b210:	add	sp, sp, #12
   1b214:	pop	{pc}		; (ldr pc, [sp], #4)
   1b218:	sub	r0, r0, #1
   1b21c:	cmp	r0, r4
   1b220:	strb	r5, [r0]
   1b224:	beq	1b204 <argp_parse@@Base+0x1414>
   1b228:	ldrb	r3, [r0, #-1]!
   1b22c:	cmp	r3, #32
   1b230:	bne	1b204 <argp_parse@@Base+0x1414>
   1b234:	b	1b21c <argp_parse@@Base+0x142c>
   1b238:	mov	ip, #0
   1b23c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1b240:	strd	r6, [sp, #8]
   1b244:	mov	r5, ip
   1b248:	and	r6, r3, #2
   1b24c:	strd	r8, [sp, #16]
   1b250:	and	r7, r3, #1
   1b254:	mov	r9, r2
   1b258:	str	sl, [sp, #24]
   1b25c:	mov	r8, ip
   1b260:	mov	sl, r1
   1b264:	str	lr, [sp, #28]
   1b268:	sub	sp, sp, #16
   1b26c:	str	ip, [sp, #12]
   1b270:	bl	116a8 <utmpxname@plt>
   1b274:	bl	11780 <setutxent@plt>
   1b278:	bl	11abc <getutxent@plt>
   1b27c:	subs	r4, r0, #0
   1b280:	beq	1b2d4 <argp_parse@@Base+0x14e4>
   1b284:	ldrb	r3, [r4, #44]	; 0x2c
   1b288:	cmp	r3, #0
   1b28c:	beq	1b29c <argp_parse@@Base+0x14ac>
   1b290:	ldrsh	r3, [r4]
   1b294:	cmp	r3, #7
   1b298:	beq	1b300 <argp_parse@@Base+0x1510>
   1b29c:	cmp	r6, #0
   1b2a0:	bne	1b278 <argp_parse@@Base+0x1488>
   1b2a4:	ldr	r2, [sp, #12]
   1b2a8:	cmp	r2, r5
   1b2ac:	beq	1b340 <argp_parse@@Base+0x1550>
   1b2b0:	add	r0, r5, r5, lsl #1
   1b2b4:	mov	r1, r4
   1b2b8:	mov	r2, #384	; 0x180
   1b2bc:	add	r5, r5, #1
   1b2c0:	add	r0, r8, r0, lsl #7
   1b2c4:	bl	11714 <memcpy@plt>
   1b2c8:	bl	11abc <getutxent@plt>
   1b2cc:	subs	r4, r0, #0
   1b2d0:	bne	1b284 <argp_parse@@Base+0x1494>
   1b2d4:	bl	119b4 <endutxent@plt>
   1b2d8:	mov	r0, r4
   1b2dc:	str	r5, [sl]
   1b2e0:	str	r8, [r9]
   1b2e4:	add	sp, sp, #16
   1b2e8:	ldrd	r4, [sp]
   1b2ec:	ldrd	r6, [sp, #8]
   1b2f0:	ldrd	r8, [sp, #16]
   1b2f4:	ldr	sl, [sp, #24]
   1b2f8:	add	sp, sp, #28
   1b2fc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b300:	cmp	r7, #0
   1b304:	beq	1b2a4 <argp_parse@@Base+0x14b4>
   1b308:	ldr	r0, [r4, #4]
   1b30c:	cmp	r0, #0
   1b310:	ble	1b2a4 <argp_parse@@Base+0x14b4>
   1b314:	mov	r1, #0
   1b318:	bl	118b8 <kill@plt>
   1b31c:	cmp	r0, #0
   1b320:	bge	1b2a4 <argp_parse@@Base+0x14b4>
   1b324:	bl	11918 <__errno_location@plt>
   1b328:	ldr	r3, [r0]
   1b32c:	cmp	r3, #3
   1b330:	beq	1b278 <argp_parse@@Base+0x1488>
   1b334:	ldr	r2, [sp, #12]
   1b338:	cmp	r2, r5
   1b33c:	bne	1b2b0 <argp_parse@@Base+0x14c0>
   1b340:	mov	r1, #384	; 0x180
   1b344:	mov	r0, r8
   1b348:	mvn	r3, #0
   1b34c:	mov	r2, #1
   1b350:	str	r1, [sp]
   1b354:	add	r1, sp, #12
   1b358:	bl	1b9d8 <argp_parse@@Base+0x1be8>
   1b35c:	mov	r8, r0
   1b360:	b	1b2b0 <argp_parse@@Base+0x14c0>
   1b364:	cmp	r1, #0
   1b368:	strd	r4, [sp, #-16]!
   1b36c:	mov	r4, r0
   1b370:	str	r6, [sp, #8]
   1b374:	str	lr, [sp, #12]
   1b378:	sub	sp, sp, #32
   1b37c:	ldr	r5, [sp, #48]	; 0x30
   1b380:	ldr	r6, [sp, #52]	; 0x34
   1b384:	beq	1b488 <argp_parse@@Base+0x1698>
   1b388:	mov	ip, r3
   1b38c:	mov	r3, r2
   1b390:	mov	r2, r1
   1b394:	movw	r1, #59784	; 0xe988
   1b398:	movt	r1, #1
   1b39c:	str	ip, [sp]
   1b3a0:	bl	1190c <fprintf@plt>
   1b3a4:	movw	r3, #2022	; 0x7e6
   1b3a8:	movw	r2, #59804	; 0xe99c
   1b3ac:	movt	r2, #1
   1b3b0:	movw	r1, #60572	; 0xec9c
   1b3b4:	movt	r1, #1
   1b3b8:	mov	r0, r4
   1b3bc:	bl	1190c <fprintf@plt>
   1b3c0:	mov	r1, r4
   1b3c4:	mov	r0, #10
   1b3c8:	bl	11a08 <fputc@plt>
   1b3cc:	movw	r2, #59808	; 0xe9a0
   1b3d0:	movt	r2, #1
   1b3d4:	movw	r1, #59844	; 0xe9c4
   1b3d8:	movt	r1, #1
   1b3dc:	mov	r0, r4
   1b3e0:	bl	1190c <fprintf@plt>
   1b3e4:	mov	r1, r4
   1b3e8:	mov	r0, #10
   1b3ec:	bl	11a08 <fputc@plt>
   1b3f0:	cmp	r6, #9
   1b3f4:	ldrls	pc, [pc, r6, lsl #2]
   1b3f8:	b	1b654 <argp_parse@@Base+0x1864>
   1b3fc:	andeq	fp, r1, r4, ror r4
   1b400:	muleq	r1, r8, r4
   1b404:	andeq	fp, r1, r0, asr #9
   1b408:	andeq	fp, r1, r8, ror #9
   1b40c:	andeq	fp, r1, r8, lsl r5
   1b410:	andeq	fp, r1, r4, asr r5
   1b414:	andeq	fp, r1, r8, lsl #11
   1b418:	andeq	fp, r1, r4, asr #11
   1b41c:	andeq	fp, r1, r8, lsl #12
   1b420:	andeq	fp, r1, r4, lsr #8
   1b424:	ldr	ip, [r5, #8]
   1b428:	movw	r1, #60284	; 0xeb7c
   1b42c:	movt	r1, #1
   1b430:	mov	r0, r4
   1b434:	ldr	r3, [r5, #12]
   1b438:	ldr	r2, [r5, #32]
   1b43c:	str	ip, [sp]
   1b440:	ldr	ip, [r5, #16]
   1b444:	str	r2, [sp, #24]
   1b448:	ldr	r2, [r5, #28]
   1b44c:	str	r3, [sp, #4]
   1b450:	ldr	r3, [r5, #20]
   1b454:	str	ip, [sp, #8]
   1b458:	ldr	ip, [r5, #24]
   1b45c:	str	r2, [sp, #20]
   1b460:	ldr	r2, [r5]
   1b464:	str	r3, [sp, #12]
   1b468:	ldr	r3, [r5, #4]
   1b46c:	str	ip, [sp, #16]
   1b470:	bl	1190c <fprintf@plt>
   1b474:	add	sp, sp, #32
   1b478:	ldrd	r4, [sp]
   1b47c:	ldr	r6, [sp, #8]
   1b480:	add	sp, sp, #12
   1b484:	pop	{pc}		; (ldr pc, [sp], #4)
   1b488:	movw	r1, #59796	; 0xe994
   1b48c:	movt	r1, #1
   1b490:	bl	1190c <fprintf@plt>
   1b494:	b	1b3a4 <argp_parse@@Base+0x15b4>
   1b498:	ldr	r2, [r5]
   1b49c:	mov	r0, r4
   1b4a0:	movw	r1, #60016	; 0xea70
   1b4a4:	movt	r1, #1
   1b4a8:	add	sp, sp, #32
   1b4ac:	ldrd	r4, [sp]
   1b4b0:	ldr	r6, [sp, #8]
   1b4b4:	ldr	lr, [sp, #12]
   1b4b8:	add	sp, sp, #16
   1b4bc:	b	1190c <fprintf@plt>
   1b4c0:	ldrd	r2, [r5]
   1b4c4:	mov	r0, r4
   1b4c8:	movw	r1, #60032	; 0xea80
   1b4cc:	movt	r1, #1
   1b4d0:	add	sp, sp, #32
   1b4d4:	ldrd	r4, [sp]
   1b4d8:	ldr	r6, [sp, #8]
   1b4dc:	ldr	lr, [sp, #12]
   1b4e0:	add	sp, sp, #16
   1b4e4:	b	1190c <fprintf@plt>
   1b4e8:	ldrd	r2, [r5]
   1b4ec:	mov	r0, r4
   1b4f0:	movw	r1, #60056	; 0xea98
   1b4f4:	movt	r1, #1
   1b4f8:	ldr	ip, [r5, #8]
   1b4fc:	str	ip, [sp, #48]	; 0x30
   1b500:	add	sp, sp, #32
   1b504:	ldrd	r4, [sp]
   1b508:	ldr	r6, [sp, #8]
   1b50c:	ldr	lr, [sp, #12]
   1b510:	add	sp, sp, #16
   1b514:	b	1190c <fprintf@plt>
   1b518:	ldr	r2, [r5]
   1b51c:	mov	r0, r4
   1b520:	movw	r1, #60084	; 0xeab4
   1b524:	movt	r1, #1
   1b528:	ldr	r3, [r5, #8]
   1b52c:	ldr	ip, [r5, #12]
   1b530:	str	r3, [sp, #48]	; 0x30
   1b534:	ldr	r3, [r5, #4]
   1b538:	str	ip, [sp, #52]	; 0x34
   1b53c:	add	sp, sp, #32
   1b540:	ldrd	r4, [sp]
   1b544:	ldr	r6, [sp, #8]
   1b548:	ldr	lr, [sp, #12]
   1b54c:	add	sp, sp, #16
   1b550:	b	1190c <fprintf@plt>
   1b554:	ldr	r2, [r5, #8]
   1b558:	mov	r0, r4
   1b55c:	movw	r1, #60116	; 0xead4
   1b560:	movt	r1, #1
   1b564:	ldr	ip, [r5, #12]
   1b568:	ldr	r3, [r5, #16]
   1b56c:	str	r2, [sp]
   1b570:	ldr	r2, [r5]
   1b574:	str	r3, [sp, #8]
   1b578:	ldr	r3, [r5, #4]
   1b57c:	str	ip, [sp, #4]
   1b580:	bl	1190c <fprintf@plt>
   1b584:	b	1b474 <argp_parse@@Base+0x1684>
   1b588:	ldr	ip, [r5, #8]
   1b58c:	mov	r0, r4
   1b590:	movw	r1, #60152	; 0xeaf8
   1b594:	movt	r1, #1
   1b598:	ldr	r3, [r5, #12]
   1b59c:	ldr	r2, [r5, #20]
   1b5a0:	str	ip, [sp]
   1b5a4:	ldr	ip, [r5, #16]
   1b5a8:	str	r2, [sp, #12]
   1b5ac:	ldr	r2, [r5]
   1b5b0:	str	r3, [sp, #4]
   1b5b4:	ldr	r3, [r5, #4]
   1b5b8:	str	ip, [sp, #8]
   1b5bc:	bl	1190c <fprintf@plt>
   1b5c0:	b	1b474 <argp_parse@@Base+0x1684>
   1b5c4:	ldr	r3, [r5, #8]
   1b5c8:	mov	r0, r4
   1b5cc:	movw	r1, #60192	; 0xeb20
   1b5d0:	movt	r1, #1
   1b5d4:	ldr	r2, [r5, #12]
   1b5d8:	ldr	ip, [r5, #24]
   1b5dc:	str	r3, [sp]
   1b5e0:	ldr	r3, [r5, #16]
   1b5e4:	str	ip, [sp, #16]
   1b5e8:	ldr	ip, [r5, #20]
   1b5ec:	str	r2, [sp, #4]
   1b5f0:	ldr	r2, [r5]
   1b5f4:	str	r3, [sp, #8]
   1b5f8:	ldr	r3, [r5, #4]
   1b5fc:	str	ip, [sp, #12]
   1b600:	bl	1190c <fprintf@plt>
   1b604:	b	1b474 <argp_parse@@Base+0x1684>
   1b608:	ldr	r2, [r5, #8]
   1b60c:	mov	r0, r4
   1b610:	movw	r1, #60236	; 0xeb4c
   1b614:	movt	r1, #1
   1b618:	ldr	ip, [r5, #12]
   1b61c:	ldr	r3, [r5, #28]
   1b620:	str	r2, [sp]
   1b624:	ldr	r2, [r5, #16]
   1b628:	str	r3, [sp, #20]
   1b62c:	ldr	r3, [r5, #24]
   1b630:	str	ip, [sp, #4]
   1b634:	ldr	ip, [r5, #20]
   1b638:	str	r2, [sp, #8]
   1b63c:	ldr	r2, [r5]
   1b640:	str	r3, [sp, #16]
   1b644:	ldr	r3, [r5, #4]
   1b648:	str	ip, [sp, #12]
   1b64c:	bl	1190c <fprintf@plt>
   1b650:	b	1b474 <argp_parse@@Base+0x1684>
   1b654:	movw	r1, #60336	; 0xebb0
   1b658:	movt	r1, #1
   1b65c:	ldr	ip, [r5, #8]
   1b660:	mov	r0, r4
   1b664:	b	1b434 <argp_parse@@Base+0x1644>
   1b668:	strd	r4, [sp, #-12]!
   1b66c:	str	lr, [sp, #8]
   1b670:	sub	sp, sp, #12
   1b674:	ldr	r5, [sp, #24]
   1b678:	ldr	ip, [r5]
   1b67c:	cmp	ip, #0
   1b680:	beq	1b69c <argp_parse@@Base+0x18ac>
   1b684:	mov	lr, r5
   1b688:	mov	ip, #0
   1b68c:	ldr	r4, [lr, #4]!
   1b690:	add	ip, ip, #1
   1b694:	cmp	r4, #0
   1b698:	bne	1b68c <argp_parse@@Base+0x189c>
   1b69c:	stm	sp, {r5, ip}
   1b6a0:	bl	1b364 <argp_parse@@Base+0x1574>
   1b6a4:	add	sp, sp, #12
   1b6a8:	ldrd	r4, [sp]
   1b6ac:	add	sp, sp, #8
   1b6b0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b6b4:	strd	r4, [sp, #-16]!
   1b6b8:	mov	ip, #0
   1b6bc:	str	r6, [sp, #8]
   1b6c0:	str	lr, [sp, #12]
   1b6c4:	sub	sp, sp, #48	; 0x30
   1b6c8:	ldr	r5, [sp, #64]	; 0x40
   1b6cc:	add	r6, sp, #8
   1b6d0:	mov	r4, r6
   1b6d4:	ldr	lr, [r5], #4
   1b6d8:	cmp	lr, #0
   1b6dc:	str	lr, [r4], #4
   1b6e0:	beq	1b6f0 <argp_parse@@Base+0x1900>
   1b6e4:	add	ip, ip, #1
   1b6e8:	cmp	ip, #10
   1b6ec:	bne	1b6d4 <argp_parse@@Base+0x18e4>
   1b6f0:	stm	sp, {r6, ip}
   1b6f4:	bl	1b364 <argp_parse@@Base+0x1574>
   1b6f8:	add	sp, sp, #48	; 0x30
   1b6fc:	ldrd	r4, [sp]
   1b700:	ldr	r6, [sp, #8]
   1b704:	add	sp, sp, #12
   1b708:	pop	{pc}		; (ldr pc, [sp], #4)
   1b70c:	push	{r3}		; (str r3, [sp, #-4]!)
   1b710:	mov	ip, #0
   1b714:	strd	r4, [sp, #-12]!
   1b718:	str	lr, [sp, #8]
   1b71c:	sub	sp, sp, #56	; 0x38
   1b720:	add	r3, sp, #72	; 0x48
   1b724:	add	r5, sp, #16
   1b728:	mov	r4, r3
   1b72c:	mov	lr, r5
   1b730:	str	r3, [sp, #12]
   1b734:	ldr	r3, [r4], #4
   1b738:	cmp	r3, #0
   1b73c:	str	r3, [lr], #4
   1b740:	beq	1b750 <argp_parse@@Base+0x1960>
   1b744:	add	ip, ip, #1
   1b748:	cmp	ip, #10
   1b74c:	bne	1b734 <argp_parse@@Base+0x1944>
   1b750:	ldr	r3, [sp, #68]	; 0x44
   1b754:	stm	sp, {r5, ip}
   1b758:	bl	1b364 <argp_parse@@Base+0x1574>
   1b75c:	add	sp, sp, #56	; 0x38
   1b760:	ldrd	r4, [sp]
   1b764:	ldr	lr, [sp, #8]
   1b768:	add	sp, sp, #12
   1b76c:	add	sp, sp, #4
   1b770:	bx	lr
   1b774:	movw	r3, #62916	; 0xf5c4
   1b778:	movt	r3, #2
   1b77c:	str	r4, [sp, #-8]!
   1b780:	mov	r0, #10
   1b784:	ldr	r1, [r3]
   1b788:	str	lr, [sp, #4]
   1b78c:	bl	11a08 <fputc@plt>
   1b790:	movw	r1, #60396	; 0xebec
   1b794:	movt	r1, #1
   1b798:	movw	r0, #60420	; 0xec04
   1b79c:	movt	r0, #1
   1b7a0:	bl	11684 <printf@plt>
   1b7a4:	movw	r2, #60440	; 0xec18
   1b7a8:	movt	r2, #1
   1b7ac:	movw	r1, #59700	; 0xe934
   1b7b0:	movt	r1, #1
   1b7b4:	movw	r0, #60480	; 0xec40
   1b7b8:	movt	r0, #1
   1b7bc:	bl	11684 <printf@plt>
   1b7c0:	movw	r1, #60500	; 0xec54
   1b7c4:	movt	r1, #1
   1b7c8:	ldr	r4, [sp]
   1b7cc:	movw	r0, #60532	; 0xec74
   1b7d0:	movt	r0, #1
   1b7d4:	ldr	lr, [sp, #4]
   1b7d8:	add	sp, sp, #8
   1b7dc:	b	11684 <printf@plt>
   1b7e0:	str	r4, [sp, #-8]!
   1b7e4:	str	lr, [sp, #4]
   1b7e8:	bl	1bcfc <argp_parse@@Base+0x1f0c>
   1b7ec:	cmp	r0, #0
   1b7f0:	beq	1b800 <argp_parse@@Base+0x1a10>
   1b7f4:	ldr	r4, [sp]
   1b7f8:	add	sp, sp, #4
   1b7fc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b800:	bl	1bc58 <argp_parse@@Base+0x1e68>
   1b804:	str	r4, [sp, #-8]!
   1b808:	str	lr, [sp, #4]
   1b80c:	bl	1bcfc <argp_parse@@Base+0x1f0c>
   1b810:	cmp	r0, #0
   1b814:	beq	1b824 <argp_parse@@Base+0x1a34>
   1b818:	ldr	r4, [sp]
   1b81c:	add	sp, sp, #4
   1b820:	pop	{pc}		; (ldr pc, [sp], #4)
   1b824:	bl	1bc58 <argp_parse@@Base+0x1e68>
   1b828:	str	r4, [sp, #-8]!
   1b82c:	str	lr, [sp, #4]
   1b830:	bl	1bcfc <argp_parse@@Base+0x1f0c>
   1b834:	cmp	r0, #0
   1b838:	beq	1b848 <argp_parse@@Base+0x1a58>
   1b83c:	ldr	r4, [sp]
   1b840:	add	sp, sp, #4
   1b844:	pop	{pc}		; (ldr pc, [sp], #4)
   1b848:	bl	1bc58 <argp_parse@@Base+0x1e68>
   1b84c:	strd	r4, [sp, #-16]!
   1b850:	mov	r5, r0
   1b854:	mov	r4, r1
   1b858:	str	r6, [sp, #8]
   1b85c:	str	lr, [sp, #12]
   1b860:	bl	1bd38 <argp_parse@@Base+0x1f48>
   1b864:	cmp	r0, #0
   1b868:	beq	1b87c <argp_parse@@Base+0x1a8c>
   1b86c:	ldrd	r4, [sp]
   1b870:	ldr	r6, [sp, #8]
   1b874:	add	sp, sp, #12
   1b878:	pop	{pc}		; (ldr pc, [sp], #4)
   1b87c:	adds	r4, r4, #0
   1b880:	movne	r4, #1
   1b884:	cmp	r5, #0
   1b888:	moveq	r4, #1
   1b88c:	cmp	r4, #0
   1b890:	beq	1b86c <argp_parse@@Base+0x1a7c>
   1b894:	bl	1bc58 <argp_parse@@Base+0x1e68>
   1b898:	cmp	r1, #0
   1b89c:	orreq	r1, r1, #1
   1b8a0:	str	r4, [sp, #-8]!
   1b8a4:	str	lr, [sp, #4]
   1b8a8:	bl	1bd38 <argp_parse@@Base+0x1f48>
   1b8ac:	cmp	r0, #0
   1b8b0:	beq	1b8c0 <argp_parse@@Base+0x1ad0>
   1b8b4:	ldr	r4, [sp]
   1b8b8:	add	sp, sp, #4
   1b8bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b8c0:	bl	1bc58 <argp_parse@@Base+0x1e68>
   1b8c4:	strd	r4, [sp, #-16]!
   1b8c8:	mov	r4, r0
   1b8cc:	mov	r5, r2
   1b8d0:	str	r6, [sp, #8]
   1b8d4:	mov	r6, r1
   1b8d8:	str	lr, [sp, #12]
   1b8dc:	bl	1d1d0 <argp_parse@@Base+0x33e0>
   1b8e0:	cmp	r0, #0
   1b8e4:	beq	1b8f8 <argp_parse@@Base+0x1b08>
   1b8e8:	ldrd	r4, [sp]
   1b8ec:	ldr	r6, [sp, #8]
   1b8f0:	add	sp, sp, #12
   1b8f4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b8f8:	cmp	r4, #0
   1b8fc:	beq	1b90c <argp_parse@@Base+0x1b1c>
   1b900:	cmp	r6, #0
   1b904:	cmpne	r5, #0
   1b908:	beq	1b8e8 <argp_parse@@Base+0x1af8>
   1b90c:	bl	1bc58 <argp_parse@@Base+0x1e68>
   1b910:	b	1b8c4 <argp_parse@@Base+0x1ad4>
   1b914:	cmp	r2, #0
   1b918:	cmpne	r1, #0
   1b91c:	str	r4, [sp, #-8]!
   1b920:	moveq	r2, #1
   1b924:	str	lr, [sp, #4]
   1b928:	moveq	r1, r2
   1b92c:	bl	1d1d0 <argp_parse@@Base+0x33e0>
   1b930:	cmp	r0, #0
   1b934:	beq	1b944 <argp_parse@@Base+0x1b54>
   1b938:	ldr	r4, [sp]
   1b93c:	add	sp, sp, #4
   1b940:	pop	{pc}		; (ldr pc, [sp], #4)
   1b944:	bl	1bc58 <argp_parse@@Base+0x1e68>
   1b948:	mov	r2, r1
   1b94c:	mov	r1, r0
   1b950:	mov	r0, #0
   1b954:	b	1b8c4 <argp_parse@@Base+0x1ad4>
   1b958:	mov	r2, r1
   1b95c:	mov	r1, r0
   1b960:	mov	r0, #0
   1b964:	b	1b914 <argp_parse@@Base+0x1b24>
   1b968:	cmp	r0, #0
   1b96c:	strd	r4, [sp, #-16]!
   1b970:	mov	r5, r1
   1b974:	ldr	r4, [r1]
   1b978:	str	r6, [sp, #8]
   1b97c:	str	lr, [sp, #12]
   1b980:	beq	1b9b0 <argp_parse@@Base+0x1bc0>
   1b984:	lsr	r3, r4, #1
   1b988:	add	r3, r3, #1
   1b98c:	adds	r4, r4, r3
   1b990:	bcs	1b9cc <argp_parse@@Base+0x1bdc>
   1b994:	mov	r1, r4
   1b998:	bl	1b8c4 <argp_parse@@Base+0x1ad4>
   1b99c:	ldr	r6, [sp, #8]
   1b9a0:	str	r4, [r5]
   1b9a4:	ldrd	r4, [sp]
   1b9a8:	add	sp, sp, #12
   1b9ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1b9b0:	cmp	r4, #0
   1b9b4:	bne	1b994 <argp_parse@@Base+0x1ba4>
   1b9b8:	mov	r4, #64	; 0x40
   1b9bc:	udiv	r4, r4, r2
   1b9c0:	cmp	r2, #64	; 0x40
   1b9c4:	addhi	r4, r4, #1
   1b9c8:	b	1b994 <argp_parse@@Base+0x1ba4>
   1b9cc:	bl	1bc58 <argp_parse@@Base+0x1e68>
   1b9d0:	mov	r2, #1
   1b9d4:	b	1b968 <argp_parse@@Base+0x1b78>
   1b9d8:	ldr	ip, [r1]
   1b9dc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1b9e0:	mov	r5, r1
   1b9e4:	strd	r6, [sp, #8]
   1b9e8:	str	lr, [sp, #28]
   1b9ec:	strd	r8, [sp, #16]
   1b9f0:	asr	lr, ip, #1
   1b9f4:	ldr	r8, [sp, #32]
   1b9f8:	str	sl, [sp, #24]
   1b9fc:	adds	r4, ip, lr
   1ba00:	mvn	lr, r3
   1ba04:	lsr	lr, lr, #31
   1ba08:	mvnvs	r4, #-2147483648	; 0x80000000
   1ba0c:	cmp	r3, r4
   1ba10:	movge	r1, #0
   1ba14:	andlt	r1, lr, #1
   1ba18:	cmp	r1, #0
   1ba1c:	movne	r4, r3
   1ba20:	smull	r6, r7, r4, r8
   1ba24:	cmp	r7, r6, asr #31
   1ba28:	bne	1bab0 <argp_parse@@Base+0x1cc0>
   1ba2c:	cmp	r6, #63	; 0x3f
   1ba30:	mov	r1, r6
   1ba34:	ble	1ba98 <argp_parse@@Base+0x1ca8>
   1ba38:	cmp	r0, #0
   1ba3c:	sub	r6, r4, ip
   1ba40:	streq	r0, [r5]
   1ba44:	cmp	r6, r2
   1ba48:	bge	1ba78 <argp_parse@@Base+0x1c88>
   1ba4c:	adds	r4, ip, r2
   1ba50:	bvs	1baac <argp_parse@@Base+0x1cbc>
   1ba54:	cmp	r4, r3
   1ba58:	movle	r3, #0
   1ba5c:	andgt	r3, lr, #1
   1ba60:	cmp	r3, #0
   1ba64:	bne	1baac <argp_parse@@Base+0x1cbc>
   1ba68:	smull	r8, r9, r4, r8
   1ba6c:	cmp	r9, r8, asr #31
   1ba70:	mov	r1, r8
   1ba74:	bne	1baac <argp_parse@@Base+0x1cbc>
   1ba78:	bl	1b84c <argp_parse@@Base+0x1a5c>
   1ba7c:	ldrd	r6, [sp, #8]
   1ba80:	ldrd	r8, [sp, #16]
   1ba84:	ldr	sl, [sp, #24]
   1ba88:	str	r4, [r5]
   1ba8c:	ldrd	r4, [sp]
   1ba90:	add	sp, sp, #28
   1ba94:	pop	{pc}		; (ldr pc, [sp], #4)
   1ba98:	mov	r6, #64	; 0x40
   1ba9c:	sdiv	r4, r6, r8
   1baa0:	mls	r1, r8, r4, r6
   1baa4:	sub	r1, r6, r1
   1baa8:	b	1ba38 <argp_parse@@Base+0x1c48>
   1baac:	bl	1bc58 <argp_parse@@Base+0x1e68>
   1bab0:	mvn	r6, #-2147483648	; 0x80000000
   1bab4:	b	1ba9c <argp_parse@@Base+0x1cac>
   1bab8:	mov	r1, #1
   1babc:	str	r4, [sp, #-8]!
   1bac0:	str	lr, [sp, #4]
   1bac4:	bl	1bc88 <argp_parse@@Base+0x1e98>
   1bac8:	cmp	r0, #0
   1bacc:	beq	1badc <argp_parse@@Base+0x1cec>
   1bad0:	ldr	r4, [sp]
   1bad4:	add	sp, sp, #4
   1bad8:	pop	{pc}		; (ldr pc, [sp], #4)
   1badc:	bl	1bc58 <argp_parse@@Base+0x1e68>
   1bae0:	mov	r1, #1
   1bae4:	str	r4, [sp, #-8]!
   1bae8:	str	lr, [sp, #4]
   1baec:	bl	1bc88 <argp_parse@@Base+0x1e98>
   1baf0:	cmp	r0, #0
   1baf4:	beq	1bb04 <argp_parse@@Base+0x1d14>
   1baf8:	ldr	r4, [sp]
   1bafc:	add	sp, sp, #4
   1bb00:	pop	{pc}		; (ldr pc, [sp], #4)
   1bb04:	bl	1bc58 <argp_parse@@Base+0x1e68>
   1bb08:	str	r4, [sp, #-8]!
   1bb0c:	str	lr, [sp, #4]
   1bb10:	bl	1bc88 <argp_parse@@Base+0x1e98>
   1bb14:	cmp	r0, #0
   1bb18:	beq	1bb28 <argp_parse@@Base+0x1d38>
   1bb1c:	ldr	r4, [sp]
   1bb20:	add	sp, sp, #4
   1bb24:	pop	{pc}		; (ldr pc, [sp], #4)
   1bb28:	bl	1bc58 <argp_parse@@Base+0x1e68>
   1bb2c:	str	r4, [sp, #-8]!
   1bb30:	str	lr, [sp, #4]
   1bb34:	bl	1bc88 <argp_parse@@Base+0x1e98>
   1bb38:	cmp	r0, #0
   1bb3c:	beq	1bb4c <argp_parse@@Base+0x1d5c>
   1bb40:	ldr	r4, [sp]
   1bb44:	add	sp, sp, #4
   1bb48:	pop	{pc}		; (ldr pc, [sp], #4)
   1bb4c:	bl	1bc58 <argp_parse@@Base+0x1e68>
   1bb50:	strd	r4, [sp, #-16]!
   1bb54:	mov	r4, r1
   1bb58:	str	r6, [sp, #8]
   1bb5c:	mov	r6, r0
   1bb60:	mov	r0, r1
   1bb64:	str	lr, [sp, #12]
   1bb68:	bl	1bcfc <argp_parse@@Base+0x1f0c>
   1bb6c:	subs	r5, r0, #0
   1bb70:	beq	1bb94 <argp_parse@@Base+0x1da4>
   1bb74:	mov	r2, r4
   1bb78:	mov	r1, r6
   1bb7c:	bl	11714 <memcpy@plt>
   1bb80:	mov	r0, r5
   1bb84:	ldrd	r4, [sp]
   1bb88:	ldr	r6, [sp, #8]
   1bb8c:	add	sp, sp, #12
   1bb90:	pop	{pc}		; (ldr pc, [sp], #4)
   1bb94:	bl	1bc58 <argp_parse@@Base+0x1e68>
   1bb98:	strd	r4, [sp, #-16]!
   1bb9c:	mov	r4, r1
   1bba0:	str	r6, [sp, #8]
   1bba4:	mov	r6, r0
   1bba8:	mov	r0, r1
   1bbac:	str	lr, [sp, #12]
   1bbb0:	bl	1bcfc <argp_parse@@Base+0x1f0c>
   1bbb4:	subs	r5, r0, #0
   1bbb8:	beq	1bbdc <argp_parse@@Base+0x1dec>
   1bbbc:	mov	r2, r4
   1bbc0:	mov	r1, r6
   1bbc4:	bl	11714 <memcpy@plt>
   1bbc8:	mov	r0, r5
   1bbcc:	ldrd	r4, [sp]
   1bbd0:	ldr	r6, [sp, #8]
   1bbd4:	add	sp, sp, #12
   1bbd8:	pop	{pc}		; (ldr pc, [sp], #4)
   1bbdc:	bl	1bc58 <argp_parse@@Base+0x1e68>
   1bbe0:	strd	r4, [sp, #-16]!
   1bbe4:	mov	r4, r1
   1bbe8:	str	r6, [sp, #8]
   1bbec:	mov	r6, r0
   1bbf0:	add	r0, r1, #1
   1bbf4:	str	lr, [sp, #12]
   1bbf8:	bl	1bcfc <argp_parse@@Base+0x1f0c>
   1bbfc:	subs	r5, r0, #0
   1bc00:	beq	1bc2c <argp_parse@@Base+0x1e3c>
   1bc04:	mov	r3, #0
   1bc08:	mov	r1, r6
   1bc0c:	mov	r2, r4
   1bc10:	strb	r3, [r5, r4]
   1bc14:	bl	11714 <memcpy@plt>
   1bc18:	mov	r0, r5
   1bc1c:	ldrd	r4, [sp]
   1bc20:	ldr	r6, [sp, #8]
   1bc24:	add	sp, sp, #12
   1bc28:	pop	{pc}		; (ldr pc, [sp], #4)
   1bc2c:	bl	1bc58 <argp_parse@@Base+0x1e68>
   1bc30:	str	r4, [sp, #-8]!
   1bc34:	mov	r4, r0
   1bc38:	str	lr, [sp, #4]
   1bc3c:	bl	118e8 <strlen@plt>
   1bc40:	add	r1, r0, #1
   1bc44:	mov	r0, r4
   1bc48:	ldr	r4, [sp]
   1bc4c:	ldr	lr, [sp, #4]
   1bc50:	add	sp, sp, #8
   1bc54:	b	1bb50 <argp_parse@@Base+0x1d60>
   1bc58:	movw	r3, #62888	; 0xf5a8
   1bc5c:	movt	r3, #2
   1bc60:	str	r4, [sp, #-8]!
   1bc64:	movw	r2, #58160	; 0xe330
   1bc68:	movt	r2, #1
   1bc6c:	ldr	r0, [r3]
   1bc70:	mov	r1, #0
   1bc74:	movw	r3, #60620	; 0xeccc
   1bc78:	movt	r3, #1
   1bc7c:	str	lr, [sp, #4]
   1bc80:	bl	11828 <error@plt>
   1bc84:	bl	11ab0 <abort@plt>
   1bc88:	cmp	r1, #0
   1bc8c:	cmpne	r0, #0
   1bc90:	beq	1bcdc <argp_parse@@Base+0x1eec>
   1bc94:	strd	r4, [sp, #-16]!
   1bc98:	umull	r4, r5, r0, r1
   1bc9c:	str	r6, [sp, #8]
   1bca0:	str	lr, [sp, #12]
   1bca4:	adds	r3, r5, #0
   1bca8:	movne	r3, #1
   1bcac:	cmp	r4, #0
   1bcb0:	blt	1bcbc <argp_parse@@Base+0x1ecc>
   1bcb4:	cmp	r3, #0
   1bcb8:	beq	1bce8 <argp_parse@@Base+0x1ef8>
   1bcbc:	bl	11918 <__errno_location@plt>
   1bcc0:	mov	r3, #12
   1bcc4:	ldrd	r4, [sp]
   1bcc8:	ldr	r6, [sp, #8]
   1bccc:	add	sp, sp, #12
   1bcd0:	str	r3, [r0]
   1bcd4:	mov	r0, #0
   1bcd8:	pop	{pc}		; (ldr pc, [sp], #4)
   1bcdc:	mov	r1, #1
   1bce0:	mov	r0, r1
   1bce4:	b	11630 <calloc@plt>
   1bce8:	ldrd	r4, [sp]
   1bcec:	ldr	r6, [sp, #8]
   1bcf0:	ldr	lr, [sp, #12]
   1bcf4:	add	sp, sp, #16
   1bcf8:	b	11630 <calloc@plt>
   1bcfc:	cmp	r0, #0
   1bd00:	beq	1bd0c <argp_parse@@Base+0x1f1c>
   1bd04:	blt	1bd14 <argp_parse@@Base+0x1f24>
   1bd08:	b	11864 <malloc@plt>
   1bd0c:	mov	r0, #1
   1bd10:	b	11864 <malloc@plt>
   1bd14:	str	r4, [sp, #-8]!
   1bd18:	str	lr, [sp, #4]
   1bd1c:	bl	11918 <__errno_location@plt>
   1bd20:	mov	r3, #12
   1bd24:	ldr	r4, [sp]
   1bd28:	add	sp, sp, #4
   1bd2c:	str	r3, [r0]
   1bd30:	mov	r0, #0
   1bd34:	pop	{pc}		; (ldr pc, [sp], #4)
   1bd38:	cmp	r0, #0
   1bd3c:	beq	1bd64 <argp_parse@@Base+0x1f74>
   1bd40:	cmp	r1, #0
   1bd44:	str	r4, [sp, #-8]!
   1bd48:	str	lr, [sp, #4]
   1bd4c:	beq	1bd6c <argp_parse@@Base+0x1f7c>
   1bd50:	blt	1bd80 <argp_parse@@Base+0x1f90>
   1bd54:	ldr	r4, [sp]
   1bd58:	ldr	lr, [sp, #4]
   1bd5c:	add	sp, sp, #8
   1bd60:	b	117bc <realloc@plt>
   1bd64:	mov	r0, r1
   1bd68:	b	1bcfc <argp_parse@@Base+0x1f0c>
   1bd6c:	bl	1afbc <argp_parse@@Base+0x11cc>
   1bd70:	ldr	r4, [sp]
   1bd74:	add	sp, sp, #4
   1bd78:	mov	r0, #0
   1bd7c:	pop	{pc}		; (ldr pc, [sp], #4)
   1bd80:	bl	11918 <__errno_location@plt>
   1bd84:	mov	r3, #12
   1bd88:	str	r3, [r0]
   1bd8c:	b	1bd70 <argp_parse@@Base+0x1f80>
   1bd90:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1bd94:	mov	r5, r3
   1bd98:	strd	r6, [sp, #8]
   1bd9c:	mov	r7, r1
   1bda0:	mov	r6, r2
   1bda4:	str	r8, [sp, #16]
   1bda8:	mov	r8, r0
   1bdac:	mov	r0, #36	; 0x24
   1bdb0:	str	lr, [sp, #20]
   1bdb4:	bl	1bcfc <argp_parse@@Base+0x1f0c>
   1bdb8:	subs	r4, r0, #0
   1bdbc:	beq	1be00 <argp_parse@@Base+0x2010>
   1bdc0:	mov	r3, #0
   1bdc4:	mov	r0, #200	; 0xc8
   1bdc8:	str	r8, [r4]
   1bdcc:	str	r7, [r4, #4]
   1bdd0:	str	r6, [r4, #8]
   1bdd4:	str	r5, [r4, #12]
   1bdd8:	str	r3, [r4, #16]
   1bddc:	str	r3, [r4, #20]
   1bde0:	bl	1bcfc <argp_parse@@Base+0x1f0c>
   1bde4:	cmp	r0, #0
   1bde8:	mov	r3, r0
   1bdec:	str	r0, [r4, #24]
   1bdf0:	addne	r2, r0, #200	; 0xc8
   1bdf4:	strne	r0, [r4, #28]
   1bdf8:	strne	r2, [r4, #32]
   1bdfc:	beq	1be18 <argp_parse@@Base+0x2028>
   1be00:	mov	r0, r4
   1be04:	ldrd	r4, [sp]
   1be08:	ldrd	r6, [sp, #8]
   1be0c:	ldr	r8, [sp, #16]
   1be10:	add	sp, sp, #20
   1be14:	pop	{pc}		; (ldr pc, [sp], #4)
   1be18:	mov	r0, r4
   1be1c:	mov	r4, r3
   1be20:	bl	1afbc <argp_parse@@Base+0x11cc>
   1be24:	b	1be00 <argp_parse@@Base+0x2010>
   1be28:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1be2c:	mov	r5, r0
   1be30:	ldr	r3, [r0, #16]
   1be34:	ldr	r4, [r0, #24]
   1be38:	strd	r6, [sp, #8]
   1be3c:	strd	r8, [sp, #16]
   1be40:	ldr	r8, [r0, #28]
   1be44:	strd	sl, [sp, #24]
   1be48:	add	r4, r4, r3
   1be4c:	str	lr, [sp, #32]
   1be50:	sub	sp, sp, #12
   1be54:	cmp	r4, r8
   1be58:	bcs	1bf6c <argp_parse@@Base+0x217c>
   1be5c:	ldr	r6, [r5, #20]
   1be60:	cmp	r6, #0
   1be64:	bne	1bec4 <argp_parse@@Base+0x20d4>
   1be68:	ldr	r7, [r5, #4]
   1be6c:	cmp	r7, #0
   1be70:	beq	1c14c <argp_parse@@Base+0x235c>
   1be74:	ldr	r2, [r5, #32]
   1be78:	add	r3, r8, r7
   1be7c:	cmp	r2, r3
   1be80:	bls	1c238 <argp_parse@@Base+0x2448>
   1be84:	add	r6, r4, r7
   1be88:	sub	r2, r8, r4
   1be8c:	mov	r1, r4
   1be90:	mov	r0, r6
   1be94:	bl	116c0 <memmove@plt>
   1be98:	ldr	r3, [r5, #28]
   1be9c:	mov	r0, r4
   1bea0:	mov	r2, r7
   1bea4:	mov	r1, #32
   1bea8:	mov	r4, r6
   1beac:	add	r3, r3, r7
   1beb0:	str	r3, [r5, #28]
   1beb4:	bl	11954 <memset@plt>
   1beb8:	ldr	r8, [r5, #28]
   1bebc:	mov	r6, r7
   1bec0:	str	r7, [r5, #20]
   1bec4:	sub	r9, r8, r4
   1bec8:	mov	r1, #10
   1becc:	mov	r2, r9
   1bed0:	mov	r0, r4
   1bed4:	bl	11978 <memchr@plt>
   1bed8:	cmp	r6, #0
   1bedc:	mov	fp, r0
   1bee0:	bge	1beec <argp_parse@@Base+0x20fc>
   1bee4:	mov	r6, #0
   1bee8:	str	r6, [r5, #20]
   1beec:	cmp	fp, #0
   1bef0:	ldr	r3, [r5, #8]
   1bef4:	beq	1bf94 <argp_parse@@Base+0x21a4>
   1bef8:	sub	r2, fp, r4
   1befc:	add	r2, r2, r6
   1bf00:	cmp	r2, r3
   1bf04:	blt	1c168 <argp_parse@@Base+0x2378>
   1bf08:	ldr	sl, [r5, #12]
   1bf0c:	sub	r7, r3, #1
   1bf10:	str	r3, [sp, #4]
   1bf14:	cmp	sl, #0
   1bf18:	bge	1bfb4 <argp_parse@@Base+0x21c4>
   1bf1c:	cmp	r8, fp
   1bf20:	bls	1c2ec <argp_parse@@Base+0x24fc>
   1bf24:	sub	r0, r7, r6
   1bf28:	sub	r2, r8, fp
   1bf2c:	add	r0, r4, r0
   1bf30:	mov	r1, fp
   1bf34:	bl	116c0 <memmove@plt>
   1bf38:	ldr	r2, [r5, #20]
   1bf3c:	mov	r3, #0
   1bf40:	str	r3, [r5, #20]
   1bf44:	ldr	r3, [sp, #4]
   1bf48:	ldr	r8, [r5, #28]
   1bf4c:	sub	r7, r7, r2
   1bf50:	add	r7, r4, r7
   1bf54:	sub	fp, r7, fp
   1bf58:	add	r4, r4, r3
   1bf5c:	sub	r8, r8, fp
   1bf60:	cmp	r4, r8
   1bf64:	str	r8, [r5, #28]
   1bf68:	bcc	1be5c <argp_parse@@Base+0x206c>
   1bf6c:	ldr	r3, [r5, #24]
   1bf70:	sub	r8, r8, r3
   1bf74:	str	r8, [r5, #16]
   1bf78:	add	sp, sp, #12
   1bf7c:	ldrd	r4, [sp]
   1bf80:	ldrd	r6, [sp, #8]
   1bf84:	ldrd	r8, [sp, #16]
   1bf88:	ldrd	sl, [sp, #24]
   1bf8c:	add	sp, sp, #32
   1bf90:	pop	{pc}		; (ldr pc, [sp], #4)
   1bf94:	add	r1, r6, r9
   1bf98:	cmp	r1, r3
   1bf9c:	bcc	1c358 <argp_parse@@Base+0x2568>
   1bfa0:	ldr	sl, [r5, #12]
   1bfa4:	sub	r7, r3, #1
   1bfa8:	cmp	sl, #0
   1bfac:	blt	1c2f0 <argp_parse@@Base+0x2500>
   1bfb0:	mov	fp, r8
   1bfb4:	add	r7, r7, #1
   1bfb8:	sub	r6, r7, r6
   1bfbc:	adds	r6, r4, r6
   1bfc0:	bcs	1c1ac <argp_parse@@Base+0x23bc>
   1bfc4:	bl	118c4 <__ctype_b_loc@plt>
   1bfc8:	mov	r3, r6
   1bfcc:	ldr	ip, [r0]
   1bfd0:	b	1bfe0 <argp_parse@@Base+0x21f0>
   1bfd4:	cmp	r4, r0
   1bfd8:	mov	r3, r0
   1bfdc:	bhi	1c1b0 <argp_parse@@Base+0x23c0>
   1bfe0:	ldrb	r1, [r3]
   1bfe4:	mov	r7, r3
   1bfe8:	sub	r0, r3, #1
   1bfec:	lsl	r1, r1, #1
   1bff0:	ldrh	r1, [ip, r1]
   1bff4:	tst	r1, #1
   1bff8:	beq	1bfd4 <argp_parse@@Base+0x21e4>
   1bffc:	add	r0, r3, #1
   1c000:	cmp	r4, r0
   1c004:	bcs	1c1c0 <argp_parse@@Base+0x23d0>
   1c008:	cmp	r4, r3
   1c00c:	movhi	r6, r0
   1c010:	movhi	r7, r6
   1c014:	bls	1c030 <argp_parse@@Base+0x2240>
   1c018:	b	1c044 <argp_parse@@Base+0x2254>
   1c01c:	ldrb	r1, [r6, #-1]
   1c020:	lsl	r1, r1, #1
   1c024:	ldrh	r1, [ip, r1]
   1c028:	tst	r1, #1
   1c02c:	beq	1c040 <argp_parse@@Base+0x2250>
   1c030:	cmp	r4, r3
   1c034:	mov	r6, r3
   1c038:	sub	r3, r3, #1
   1c03c:	bne	1c01c <argp_parse@@Base+0x222c>
   1c040:	mov	r7, r0
   1c044:	add	r3, r9, #1
   1c048:	add	r3, r4, r3
   1c04c:	cmp	r7, r3
   1c050:	beq	1c17c <argp_parse@@Base+0x238c>
   1c054:	add	r1, r6, #1
   1c058:	sub	r3, r7, r1
   1c05c:	cmp	r3, sl
   1c060:	bge	1c194 <argp_parse@@Base+0x23a4>
   1c064:	cmp	r7, r8
   1c068:	bcs	1c18c <argp_parse@@Base+0x239c>
   1c06c:	ldr	r3, [r5, #32]
   1c070:	add	sl, sl, #1
   1c074:	sub	r3, r3, r8
   1c078:	cmp	r3, sl
   1c07c:	bgt	1c304 <argp_parse@@Base+0x2514>
   1c080:	ldr	r3, [r5]
   1c084:	ldr	r0, [r5, #24]
   1c088:	cmp	r0, r6
   1c08c:	bcs	1c0a0 <argp_parse@@Base+0x22b0>
   1c090:	sub	r2, r6, r0
   1c094:	mov	r1, #1
   1c098:	bl	11738 <fwrite_unlocked@plt>
   1c09c:	ldr	r3, [r5]
   1c0a0:	ldr	r2, [r3, #20]
   1c0a4:	ldr	r1, [r3, #24]
   1c0a8:	cmp	r2, r1
   1c0ac:	addcc	r1, r2, #1
   1c0b0:	strcc	r1, [r3, #20]
   1c0b4:	movcc	r3, #10
   1c0b8:	strbcc	r3, [r2]
   1c0bc:	bcs	1c348 <argp_parse@@Base+0x2558>
   1c0c0:	ldr	fp, [r5, #24]
   1c0c4:	sub	r4, r4, fp
   1c0c8:	sub	r3, r7, fp
   1c0cc:	add	r9, r9, r4
   1c0d0:	mov	r8, r3
   1c0d4:	mov	r4, fp
   1c0d8:	ldr	r2, [r5, #12]
   1c0dc:	cmp	r2, r3
   1c0e0:	ble	1c104 <argp_parse@@Base+0x2314>
   1c0e4:	add	r3, r9, #1
   1c0e8:	add	r3, fp, r3
   1c0ec:	cmp	r7, r3
   1c0f0:	bne	1c1f4 <argp_parse@@Base+0x2404>
   1c0f4:	ldr	r3, [r5, #32]
   1c0f8:	sub	r3, r3, r7
   1c0fc:	cmp	r2, r3
   1c100:	bgt	1c1f4 <argp_parse@@Base+0x2404>
   1c104:	cmp	r2, #0
   1c108:	ble	1c128 <argp_parse@@Base+0x2338>
   1c10c:	mov	r3, #0
   1c110:	mov	r1, #32
   1c114:	strb	r1, [r4], #1
   1c118:	add	r3, r3, #1
   1c11c:	ldr	r2, [r5, #12]
   1c120:	cmp	r2, r3
   1c124:	bgt	1c114 <argp_parse@@Base+0x2324>
   1c128:	cmp	r4, r7
   1c12c:	bcc	1c284 <argp_parse@@Base+0x2494>
   1c130:	sub	r8, r9, r8
   1c134:	cmp	r2, #0
   1c138:	add	r8, r4, r8
   1c13c:	mvneq	r2, #0
   1c140:	str	r2, [r5, #20]
   1c144:	str	r8, [r5, #28]
   1c148:	b	1be54 <argp_parse@@Base+0x2064>
   1c14c:	sub	r9, r8, r4
   1c150:	mov	r1, #10
   1c154:	mov	r2, r9
   1c158:	mov	r0, r4
   1c15c:	bl	11978 <memchr@plt>
   1c160:	mov	fp, r0
   1c164:	b	1beec <argp_parse@@Base+0x20fc>
   1c168:	mov	r3, #0
   1c16c:	add	r4, fp, #1
   1c170:	ldr	r8, [r5, #28]
   1c174:	str	r3, [r5, #20]
   1c178:	b	1be54 <argp_parse@@Base+0x2064>
   1c17c:	ldr	r3, [r5, #32]
   1c180:	sub	r3, r3, r6
   1c184:	cmp	r3, sl
   1c188:	ble	1c064 <argp_parse@@Base+0x2274>
   1c18c:	add	r1, r6, #1
   1c190:	sub	r3, r7, r1
   1c194:	mov	r2, #10
   1c198:	sub	r8, r7, r4
   1c19c:	mov	fp, r4
   1c1a0:	mov	r4, r1
   1c1a4:	strb	r2, [r6]
   1c1a8:	b	1c0d8 <argp_parse@@Base+0x22e8>
   1c1ac:	add	r7, r6, #1
   1c1b0:	cmp	r4, r7
   1c1b4:	bcs	1c1c0 <argp_parse@@Base+0x23d0>
   1c1b8:	mov	r6, r7
   1c1bc:	b	1c044 <argp_parse@@Base+0x2254>
   1c1c0:	cmp	r6, fp
   1c1c4:	bcc	1c2b4 <argp_parse@@Base+0x24c4>
   1c1c8:	cmp	r6, fp
   1c1cc:	beq	1c2a0 <argp_parse@@Base+0x24b0>
   1c1d0:	bl	118c4 <__ctype_b_loc@plt>
   1c1d4:	ldr	r1, [r0]
   1c1d8:	mov	r7, r6
   1c1dc:	ldrb	r3, [r7, #1]!
   1c1e0:	lsl	r3, r3, #1
   1c1e4:	ldrh	r3, [r1, r3]
   1c1e8:	tst	r3, #1
   1c1ec:	bne	1c1dc <argp_parse@@Base+0x23ec>
   1c1f0:	b	1c044 <argp_parse@@Base+0x2254>
   1c1f4:	cmp	r2, #0
   1c1f8:	movgt	r6, #0
   1c1fc:	movgt	sl, #32
   1c200:	ble	1c128 <argp_parse@@Base+0x2338>
   1c204:	ldr	r0, [r5]
   1c208:	ldr	r2, [r0, #20]
   1c20c:	ldr	r1, [r0, #24]
   1c210:	add	ip, r2, #1
   1c214:	cmp	r2, r1
   1c218:	strcc	ip, [r0, #20]
   1c21c:	strbcc	sl, [r2]
   1c220:	bcs	1c278 <argp_parse@@Base+0x2488>
   1c224:	ldr	r2, [r5, #12]
   1c228:	add	r6, r6, #1
   1c22c:	cmp	r2, r6
   1c230:	bgt	1c204 <argp_parse@@Base+0x2414>
   1c234:	b	1c128 <argp_parse@@Base+0x2338>
   1c238:	mov	r8, #32
   1c23c:	b	1c24c <argp_parse@@Base+0x245c>
   1c240:	add	r6, r6, #1
   1c244:	cmp	r7, r6
   1c248:	beq	1beb8 <argp_parse@@Base+0x20c8>
   1c24c:	ldr	r0, [r5]
   1c250:	ldr	r3, [r0, #20]
   1c254:	ldr	r2, [r0, #24]
   1c258:	add	r1, r3, #1
   1c25c:	cmp	r3, r2
   1c260:	strcc	r1, [r0, #20]
   1c264:	strbcc	r8, [r3]
   1c268:	bcc	1c240 <argp_parse@@Base+0x2450>
   1c26c:	mov	r1, #32
   1c270:	bl	119c0 <__overflow@plt>
   1c274:	b	1c240 <argp_parse@@Base+0x2450>
   1c278:	mov	r1, #32
   1c27c:	bl	119c0 <__overflow@plt>
   1c280:	b	1c224 <argp_parse@@Base+0x2434>
   1c284:	add	r2, fp, r9
   1c288:	mov	r1, r7
   1c28c:	sub	r2, r2, r7
   1c290:	mov	r0, r4
   1c294:	bl	116c0 <memmove@plt>
   1c298:	ldr	r2, [r5, #12]
   1c29c:	b	1c130 <argp_parse@@Base+0x2340>
   1c2a0:	mov	r3, #0
   1c2a4:	add	r4, r6, #1
   1c2a8:	ldr	r8, [r5, #28]
   1c2ac:	str	r3, [r5, #20]
   1c2b0:	b	1be54 <argp_parse@@Base+0x2064>
   1c2b4:	add	r7, r6, #1
   1c2b8:	b	1c2dc <argp_parse@@Base+0x24ec>
   1c2bc:	bl	118c4 <__ctype_b_loc@plt>
   1c2c0:	ldrb	r3, [r7]
   1c2c4:	add	r7, r7, #1
   1c2c8:	ldr	r1, [r0]
   1c2cc:	lsl	r3, r3, #1
   1c2d0:	ldrh	r3, [r1, r3]
   1c2d4:	tst	r3, #1
   1c2d8:	bne	1c1d8 <argp_parse@@Base+0x23e8>
   1c2dc:	cmp	fp, r7
   1c2e0:	mov	r6, r7
   1c2e4:	bne	1c2bc <argp_parse@@Base+0x24cc>
   1c2e8:	b	1c1c8 <argp_parse@@Base+0x23d8>
   1c2ec:	add	r1, r9, r6
   1c2f0:	sub	r7, r7, r1
   1c2f4:	str	r1, [r5, #20]
   1c2f8:	add	r8, r8, r7
   1c2fc:	str	r8, [r5, #28]
   1c300:	b	1bf6c <argp_parse@@Base+0x217c>
   1c304:	sub	r8, r8, r7
   1c308:	mov	r1, r7
   1c30c:	mov	r2, r8
   1c310:	add	r0, r6, sl
   1c314:	bl	116c0 <memmove@plt>
   1c318:	ldr	r3, [r5, #12]
   1c31c:	mov	r2, r6
   1c320:	mov	r1, #10
   1c324:	mov	fp, r4
   1c328:	strb	r1, [r2], #1
   1c32c:	add	r7, r3, #1
   1c330:	add	r7, r6, r7
   1c334:	add	r9, r7, r8
   1c338:	sub	r8, r7, r4
   1c33c:	sub	r9, r9, r4
   1c340:	mov	r4, r2
   1c344:	b	1c0d8 <argp_parse@@Base+0x22e8>
   1c348:	mov	r0, r3
   1c34c:	mov	r1, #10
   1c350:	bl	119c0 <__overflow@plt>
   1c354:	b	1c0c0 <argp_parse@@Base+0x22d0>
   1c358:	str	r1, [r5, #20]
   1c35c:	ldr	r8, [r5, #28]
   1c360:	b	1bf6c <argp_parse@@Base+0x217c>
   1c364:	str	r4, [sp, #-8]!
   1c368:	mov	r4, r0
   1c36c:	str	lr, [sp, #4]
   1c370:	bl	1be28 <argp_parse@@Base+0x2038>
   1c374:	ldr	r0, [r4, #24]
   1c378:	ldr	r2, [r4, #28]
   1c37c:	cmp	r2, r0
   1c380:	bls	1c398 <argp_parse@@Base+0x25a8>
   1c384:	sub	r2, r2, r0
   1c388:	mov	r1, #1
   1c38c:	ldr	r3, [r4]
   1c390:	bl	11738 <fwrite_unlocked@plt>
   1c394:	ldr	r0, [r4, #24]
   1c398:	bl	1afbc <argp_parse@@Base+0x11cc>
   1c39c:	mov	r0, r4
   1c3a0:	ldr	r4, [sp]
   1c3a4:	ldr	lr, [sp, #4]
   1c3a8:	add	sp, sp, #8
   1c3ac:	b	1afbc <argp_parse@@Base+0x11cc>
   1c3b0:	strd	r4, [sp, #-16]!
   1c3b4:	mov	r4, r0
   1c3b8:	mov	r5, r1
   1c3bc:	str	r6, [sp, #8]
   1c3c0:	str	lr, [sp, #12]
   1c3c4:	bl	1be28 <argp_parse@@Base+0x2038>
   1c3c8:	mov	r1, #1
   1c3cc:	ldr	r3, [r4]
   1c3d0:	ldr	r2, [r4, #24]
   1c3d4:	ldr	ip, [r4, #28]
   1c3d8:	mov	r0, r2
   1c3dc:	sub	r2, ip, r2
   1c3e0:	bl	11738 <fwrite_unlocked@plt>
   1c3e4:	mov	ip, r0
   1c3e8:	ldr	r0, [r4, #24]
   1c3ec:	ldr	r3, [r4, #28]
   1c3f0:	sub	r2, r3, r0
   1c3f4:	cmp	ip, r2
   1c3f8:	bne	1c458 <argp_parse@@Base+0x2668>
   1c3fc:	ldr	r1, [r4, #32]
   1c400:	mov	r3, #0
   1c404:	str	r3, [r4, #16]
   1c408:	str	r0, [r4, #28]
   1c40c:	sub	r1, r1, r0
   1c410:	cmp	r1, r5
   1c414:	movcs	r3, #1
   1c418:	bcs	1c444 <argp_parse@@Base+0x2654>
   1c41c:	adds	r5, r1, r5
   1c420:	bcs	1c480 <argp_parse@@Base+0x2690>
   1c424:	mov	r1, r5
   1c428:	bl	1bd38 <argp_parse@@Base+0x1f48>
   1c42c:	cmp	r0, #0
   1c430:	beq	1c480 <argp_parse@@Base+0x2690>
   1c434:	add	r1, r0, r5
   1c438:	mov	r3, #1
   1c43c:	str	r0, [r4, #24]
   1c440:	strd	r0, [r4, #28]
   1c444:	ldrd	r4, [sp]
   1c448:	mov	r0, r3
   1c44c:	ldr	r6, [sp, #8]
   1c450:	add	sp, sp, #12
   1c454:	pop	{pc}		; (ldr pc, [sp], #4)
   1c458:	ldr	lr, [r4, #16]
   1c45c:	sub	r3, r3, ip
   1c460:	add	r1, r0, ip
   1c464:	sub	r2, r3, r0
   1c468:	str	r3, [r4, #28]
   1c46c:	sub	ip, lr, ip
   1c470:	str	ip, [r4, #16]
   1c474:	bl	116c0 <memmove@plt>
   1c478:	mov	r3, #0
   1c47c:	b	1c444 <argp_parse@@Base+0x2654>
   1c480:	bl	11918 <__errno_location@plt>
   1c484:	mov	r2, #12
   1c488:	mov	r3, #0
   1c48c:	str	r2, [r0]
   1c490:	b	1c444 <argp_parse@@Base+0x2654>
   1c494:	ldr	ip, [r0, #28]
   1c498:	ldr	r3, [r0, #32]
   1c49c:	sub	r3, r3, ip
   1c4a0:	cmp	r3, r1
   1c4a4:	bcc	1c4b0 <argp_parse@@Base+0x26c0>
   1c4a8:	mov	r0, #1
   1c4ac:	bx	lr
   1c4b0:	b	1c3b0 <argp_parse@@Base+0x25c0>
   1c4b4:	push	{r1, r2, r3}
   1c4b8:	mov	r1, #150	; 0x96
   1c4bc:	strd	r4, [sp, #-20]!	; 0xffffffec
   1c4c0:	mov	r5, r0
   1c4c4:	strd	r6, [sp, #8]
   1c4c8:	str	lr, [sp, #16]
   1c4cc:	sub	sp, sp, #8
   1c4d0:	ldr	r7, [sp, #28]
   1c4d4:	add	r6, sp, #32
   1c4d8:	ldr	r0, [r5, #28]
   1c4dc:	ldr	r3, [r5, #32]
   1c4e0:	sub	r2, r3, r0
   1c4e4:	cmp	r1, r2
   1c4e8:	bhi	1c538 <argp_parse@@Base+0x2748>
   1c4ec:	sub	r4, r3, r0
   1c4f0:	mov	r2, r7
   1c4f4:	str	r6, [sp, #4]
   1c4f8:	mov	r1, r4
   1c4fc:	mov	r3, r6
   1c500:	bl	11a2c <vsnprintf@plt>
   1c504:	cmp	r0, r4
   1c508:	add	r1, r0, #1
   1c50c:	bcs	1c4d8 <argp_parse@@Base+0x26e8>
   1c510:	ldr	r3, [r5, #28]
   1c514:	add	r3, r3, r0
   1c518:	str	r3, [r5, #28]
   1c51c:	add	sp, sp, #8
   1c520:	ldrd	r4, [sp]
   1c524:	ldrd	r6, [sp, #8]
   1c528:	ldr	lr, [sp, #16]
   1c52c:	add	sp, sp, #20
   1c530:	add	sp, sp, #12
   1c534:	bx	lr
   1c538:	mov	r0, r5
   1c53c:	bl	1c3b0 <argp_parse@@Base+0x25c0>
   1c540:	cmp	r0, #0
   1c544:	beq	1c554 <argp_parse@@Base+0x2764>
   1c548:	ldr	r0, [r5, #28]
   1c54c:	ldr	r3, [r5, #32]
   1c550:	b	1c4ec <argp_parse@@Base+0x26fc>
   1c554:	mvn	r0, #0
   1c558:	b	1c51c <argp_parse@@Base+0x272c>
   1c55c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1c560:	ldr	r4, [r1, #32]
   1c564:	strd	r6, [sp, #8]
   1c568:	strd	r8, [sp, #16]
   1c56c:	ldr	r7, [r1]
   1c570:	str	sl, [sp, #24]
   1c574:	ldr	r8, [r1, #28]
   1c578:	add	r6, r0, r4, lsl #2
   1c57c:	str	lr, [sp, #28]
   1c580:	mov	r5, r7
   1c584:	mov	r3, r8
   1c588:	cmp	r5, r4
   1c58c:	movle	r2, #0
   1c590:	movgt	r2, #1
   1c594:	cmp	r3, r4
   1c598:	movge	r2, #0
   1c59c:	cmp	r2, #0
   1c5a0:	beq	1c614 <argp_parse@@Base+0x2824>
   1c5a4:	sub	r2, r5, r4
   1c5a8:	sub	lr, r4, r3
   1c5ac:	cmp	r2, lr
   1c5b0:	ble	1c5e4 <argp_parse@@Base+0x27f4>
   1c5b4:	sub	r5, r5, lr
   1c5b8:	add	lr, lr, r3
   1c5bc:	add	r2, r0, r3, lsl #2
   1c5c0:	add	lr, r0, lr, lsl #2
   1c5c4:	add	ip, r0, r5, lsl #2
   1c5c8:	ldr	sl, [ip]
   1c5cc:	ldr	r9, [r2]
   1c5d0:	str	sl, [r2], #4
   1c5d4:	cmp	lr, r2
   1c5d8:	str	r9, [ip], #4
   1c5dc:	bne	1c5c8 <argp_parse@@Base+0x27d8>
   1c5e0:	b	1c588 <argp_parse@@Base+0x2798>
   1c5e4:	add	sl, r2, r3
   1c5e8:	add	r3, r0, r3, lsl #2
   1c5ec:	mov	r2, r6
   1c5f0:	add	r9, r0, sl, lsl #2
   1c5f4:	ldr	lr, [r2]
   1c5f8:	ldr	ip, [r3]
   1c5fc:	str	lr, [r3], #4
   1c600:	cmp	r3, r9
   1c604:	str	ip, [r2], #4
   1c608:	bne	1c5f4 <argp_parse@@Base+0x2804>
   1c60c:	mov	r3, sl
   1c610:	b	1c588 <argp_parse@@Base+0x2798>
   1c614:	sub	r4, r7, r4
   1c618:	str	r7, [r1, #32]
   1c61c:	add	r8, r4, r8
   1c620:	ldrd	r4, [sp]
   1c624:	str	r8, [r1, #28]
   1c628:	ldrd	r6, [sp, #8]
   1c62c:	ldrd	r8, [sp, #16]
   1c630:	ldr	sl, [sp, #24]
   1c634:	add	sp, sp, #28
   1c638:	pop	{pc}		; (ldr pc, [sp], #4)
   1c63c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1c640:	strd	r6, [sp, #8]
   1c644:	strd	r8, [sp, #16]
   1c648:	strd	sl, [sp, #24]
   1c64c:	str	lr, [sp, #32]
   1c650:	sub	sp, sp, #52	; 0x34
   1c654:	str	r3, [sp, #12]
   1c658:	ldr	r3, [sp, #96]	; 0x60
   1c65c:	str	r1, [sp, #28]
   1c660:	str	r2, [sp, #32]
   1c664:	str	r0, [sp, #36]	; 0x24
   1c668:	ldr	r8, [r3, #20]
   1c66c:	ldrb	r5, [r8]
   1c670:	mov	r9, r8
   1c674:	cmp	r5, #61	; 0x3d
   1c678:	cmpne	r5, #0
   1c67c:	movne	r5, #1
   1c680:	moveq	r5, #0
   1c684:	beq	1c69c <argp_parse@@Base+0x28ac>
   1c688:	ldrb	r3, [r9, #1]!
   1c68c:	cmp	r3, #0
   1c690:	cmpne	r3, #61	; 0x3d
   1c694:	bne	1c688 <argp_parse@@Base+0x2898>
   1c698:	sub	r5, r9, r8
   1c69c:	ldr	r3, [sp, #12]
   1c6a0:	ldr	r3, [r3]
   1c6a4:	cmp	r3, #0
   1c6a8:	str	r3, [sp, #16]
   1c6ac:	beq	1c874 <argp_parse@@Base+0x2a84>
   1c6b0:	ldr	fp, [sp, #12]
   1c6b4:	mov	r6, #0
   1c6b8:	ldr	r4, [sp, #16]
   1c6bc:	str	fp, [sp, #24]
   1c6c0:	b	1c6c8 <argp_parse@@Base+0x28d8>
   1c6c4:	mov	r6, r7
   1c6c8:	mov	r2, r5
   1c6cc:	mov	r1, r8
   1c6d0:	mov	r0, r4
   1c6d4:	add	r7, r6, #1
   1c6d8:	bl	11aa4 <strncmp@plt>
   1c6dc:	cmp	r0, #0
   1c6e0:	mov	sl, fp
   1c6e4:	mov	r0, r4
   1c6e8:	bne	1c6f8 <argp_parse@@Base+0x2908>
   1c6ec:	bl	118e8 <strlen@plt>
   1c6f0:	cmp	r0, r5
   1c6f4:	beq	1c7ac <argp_parse@@Base+0x29bc>
   1c6f8:	ldr	r4, [fp, #16]!
   1c6fc:	cmp	r4, #0
   1c700:	bne	1c6c4 <argp_parse@@Base+0x28d4>
   1c704:	ldr	r0, [sp, #16]
   1c708:	mvn	r3, #0
   1c70c:	mov	r1, r8
   1c710:	str	r7, [sp, #16]
   1c714:	mov	sl, r4
   1c718:	mov	r8, r4
   1c71c:	ldr	fp, [sp, #24]
   1c720:	str	r4, [sp, #20]
   1c724:	ldr	r7, [sp, #96]	; 0x60
   1c728:	str	r3, [sp, #40]	; 0x28
   1c72c:	str	r4, [sp, #44]	; 0x2c
   1c730:	mov	r2, r5
   1c734:	bl	11aa4 <strncmp@plt>
   1c738:	cmp	r0, #0
   1c73c:	bne	1c77c <argp_parse@@Base+0x298c>
   1c740:	cmp	sl, #0
   1c744:	beq	1c868 <argp_parse@@Base+0x2a78>
   1c748:	ldr	r3, [sp, #92]	; 0x5c
   1c74c:	cmp	r3, #0
   1c750:	beq	1c81c <argp_parse@@Base+0x2a2c>
   1c754:	ldr	r3, [sp, #20]
   1c758:	cmp	r3, #0
   1c75c:	bne	1c77c <argp_parse@@Base+0x298c>
   1c760:	ldr	r3, [sp, #100]	; 0x64
   1c764:	cmp	r3, #0
   1c768:	beq	1c8ec <argp_parse@@Base+0x2afc>
   1c76c:	cmp	r4, #0
   1c770:	beq	1ca14 <argp_parse@@Base+0x2c24>
   1c774:	mov	r3, #1
   1c778:	strb	r3, [r4, r8]
   1c77c:	ldr	r0, [fp, #16]!
   1c780:	add	r8, r8, #1
   1c784:	cmp	r0, #0
   1c788:	beq	1c794 <argp_parse@@Base+0x29a4>
   1c78c:	ldr	r1, [r7, #20]
   1c790:	b	1c730 <argp_parse@@Base+0x2940>
   1c794:	ldr	r3, [sp, #20]
   1c798:	orrs	r3, r4, r3
   1c79c:	bne	1c93c <argp_parse@@Base+0x2b4c>
   1c7a0:	cmp	sl, #0
   1c7a4:	ldrne	r6, [sp, #40]	; 0x28
   1c7a8:	beq	1c874 <argp_parse@@Base+0x2a84>
   1c7ac:	ldr	r3, [sp, #96]	; 0x60
   1c7b0:	mov	r2, #0
   1c7b4:	ldr	r1, [sp, #96]	; 0x60
   1c7b8:	ldr	r0, [sl, #4]
   1c7bc:	ldr	r3, [r3]
   1c7c0:	str	r2, [r1, #20]
   1c7c4:	add	r2, r3, #1
   1c7c8:	str	r2, [r1]
   1c7cc:	ldrb	r1, [r9]
   1c7d0:	cmp	r1, #0
   1c7d4:	bne	1c850 <argp_parse@@Base+0x2a60>
   1c7d8:	cmp	r0, #1
   1c7dc:	beq	1c9cc <argp_parse@@Base+0x2bdc>
   1c7e0:	ldr	r3, [sp, #88]	; 0x58
   1c7e4:	cmp	r3, #0
   1c7e8:	strne	r6, [r3]
   1c7ec:	ldr	r3, [sl, #8]
   1c7f0:	ldr	r0, [sl, #12]
   1c7f4:	cmp	r3, #0
   1c7f8:	strne	r0, [r3]
   1c7fc:	movne	r0, #0
   1c800:	add	sp, sp, #52	; 0x34
   1c804:	ldrd	r4, [sp]
   1c808:	ldrd	r6, [sp, #8]
   1c80c:	ldrd	r8, [sp, #16]
   1c810:	ldrd	sl, [sp, #24]
   1c814:	add	sp, sp, #32
   1c818:	pop	{pc}		; (ldr pc, [sp], #4)
   1c81c:	ldr	r1, [sl, #4]
   1c820:	ldr	r2, [fp, #4]
   1c824:	cmp	r1, r2
   1c828:	bne	1c754 <argp_parse@@Base+0x2964>
   1c82c:	ldr	r1, [sl, #8]
   1c830:	ldr	r2, [fp, #8]
   1c834:	cmp	r1, r2
   1c838:	bne	1c754 <argp_parse@@Base+0x2964>
   1c83c:	ldr	r1, [sl, #12]
   1c840:	ldr	r2, [fp, #12]
   1c844:	cmp	r1, r2
   1c848:	bne	1c754 <argp_parse@@Base+0x2964>
   1c84c:	b	1c77c <argp_parse@@Base+0x298c>
   1c850:	cmp	r0, #0
   1c854:	beq	1c9f4 <argp_parse@@Base+0x2c04>
   1c858:	ldr	r3, [sp, #96]	; 0x60
   1c85c:	add	r9, r9, #1
   1c860:	str	r9, [r3, #12]
   1c864:	b	1c7e0 <argp_parse@@Base+0x29f0>
   1c868:	mov	sl, fp
   1c86c:	str	r8, [sp, #40]	; 0x28
   1c870:	b	1c77c <argp_parse@@Base+0x298c>
   1c874:	ldr	r3, [sp, #92]	; 0x5c
   1c878:	cmp	r3, #0
   1c87c:	beq	1c8b8 <argp_parse@@Base+0x2ac8>
   1c880:	ldr	r2, [sp, #28]
   1c884:	ldr	r3, [sp, #96]	; 0x60
   1c888:	ldr	r3, [r3]
   1c88c:	ldr	r3, [r2, r3, lsl #2]
   1c890:	ldrb	r3, [r3, #1]
   1c894:	cmp	r3, #45	; 0x2d
   1c898:	beq	1c8b8 <argp_parse@@Base+0x2ac8>
   1c89c:	ldr	r0, [sp, #32]
   1c8a0:	ldr	r3, [sp, #96]	; 0x60
   1c8a4:	ldr	r3, [r3, #20]
   1c8a8:	ldrb	r1, [r3]
   1c8ac:	bl	11900 <strchr@plt>
   1c8b0:	cmp	r0, #0
   1c8b4:	bne	1ca84 <argp_parse@@Base+0x2c94>
   1c8b8:	ldr	r3, [sp, #100]	; 0x64
   1c8bc:	cmp	r3, #0
   1c8c0:	bne	1c908 <argp_parse@@Base+0x2b18>
   1c8c4:	ldr	r3, [sp, #96]	; 0x60
   1c8c8:	mov	r2, #0
   1c8cc:	mov	r0, #63	; 0x3f
   1c8d0:	ldr	r1, [sp, #96]	; 0x60
   1c8d4:	ldr	r3, [r3]
   1c8d8:	str	r2, [r1, #8]
   1c8dc:	str	r2, [r1, #20]
   1c8e0:	add	r3, r3, #1
   1c8e4:	str	r3, [r1]
   1c8e8:	b	1c800 <argp_parse@@Base+0x2a10>
   1c8ec:	mov	r3, #1
   1c8f0:	cmp	r4, #0
   1c8f4:	str	r3, [sp, #20]
   1c8f8:	beq	1c77c <argp_parse@@Base+0x298c>
   1c8fc:	mov	r3, #1
   1c900:	strb	r3, [r4, r8]
   1c904:	b	1c77c <argp_parse@@Base+0x298c>
   1c908:	ldr	r3, [sp, #96]	; 0x60
   1c90c:	movw	r0, #62912	; 0xf5c0
   1c910:	movt	r0, #2
   1c914:	movw	r1, #60728	; 0xed38
   1c918:	movt	r1, #1
   1c91c:	ldr	r0, [r0]
   1c920:	ldr	ip, [r3, #20]
   1c924:	ldr	r3, [sp, #28]
   1c928:	ldr	r2, [r3]
   1c92c:	str	ip, [sp]
   1c930:	ldr	r3, [sp, #104]	; 0x68
   1c934:	bl	1190c <fprintf@plt>
   1c938:	b	1c8c4 <argp_parse@@Base+0x2ad4>
   1c93c:	ldr	r3, [sp, #100]	; 0x64
   1c940:	cmp	r3, #0
   1c944:	beq	1c984 <argp_parse@@Base+0x2b94>
   1c948:	ldr	r3, [sp, #20]
   1c94c:	movw	r5, #62912	; 0xf5c0
   1c950:	movt	r5, #2
   1c954:	ldr	r0, [r5]
   1c958:	cmp	r3, #0
   1c95c:	beq	1cabc <argp_parse@@Base+0x2ccc>
   1c960:	ldr	r2, [sp, #28]
   1c964:	movw	r1, #60640	; 0xece0
   1c968:	movt	r1, #1
   1c96c:	ldr	r3, [sp, #96]	; 0x60
   1c970:	ldr	r2, [r2]
   1c974:	ldr	ip, [r3, #20]
   1c978:	ldr	r3, [sp, #104]	; 0x68
   1c97c:	str	ip, [sp]
   1c980:	bl	1190c <fprintf@plt>
   1c984:	ldr	r3, [sp, #44]	; 0x2c
   1c988:	cmp	r3, #0
   1c98c:	bne	1ca78 <argp_parse@@Base+0x2c88>
   1c990:	ldr	r3, [sp, #96]	; 0x60
   1c994:	ldr	r4, [r3, #20]
   1c998:	mov	r0, r4
   1c99c:	bl	118e8 <strlen@plt>
   1c9a0:	ldr	r3, [sp, #96]	; 0x60
   1c9a4:	add	r4, r4, r0
   1c9a8:	mov	r2, #0
   1c9ac:	mov	r0, #63	; 0x3f
   1c9b0:	ldr	r1, [sp, #96]	; 0x60
   1c9b4:	ldr	r3, [r3]
   1c9b8:	str	r2, [r1, #8]
   1c9bc:	str	r4, [r1, #20]
   1c9c0:	add	r3, r3, #1
   1c9c4:	str	r3, [r1]
   1c9c8:	b	1c800 <argp_parse@@Base+0x2a10>
   1c9cc:	ldr	r1, [sp, #36]	; 0x24
   1c9d0:	cmp	r2, r1
   1c9d4:	bge	1ca8c <argp_parse@@Base+0x2c9c>
   1c9d8:	ldr	r1, [sp, #28]
   1c9dc:	add	r3, r3, #2
   1c9e0:	ldr	r2, [r1, r2, lsl #2]
   1c9e4:	ldr	r1, [sp, #96]	; 0x60
   1c9e8:	str	r3, [r1]
   1c9ec:	str	r2, [r1, #12]
   1c9f0:	b	1c7e0 <argp_parse@@Base+0x29f0>
   1c9f4:	ldr	r3, [sp, #100]	; 0x64
   1c9f8:	cmp	r3, #0
   1c9fc:	bne	1ca48 <argp_parse@@Base+0x2c58>
   1ca00:	ldr	r3, [sl, #12]
   1ca04:	mov	r0, #63	; 0x3f
   1ca08:	ldr	r2, [sp, #96]	; 0x60
   1ca0c:	str	r3, [r2, #8]
   1ca10:	b	1c800 <argp_parse@@Base+0x2a10>
   1ca14:	ldr	r0, [sp, #16]
   1ca18:	bl	1bcfc <argp_parse@@Base+0x1f0c>
   1ca1c:	subs	r4, r0, #0
   1ca20:	beq	1cb80 <argp_parse@@Base+0x2d90>
   1ca24:	ldr	r2, [sp, #16]
   1ca28:	ldr	r1, [sp, #20]
   1ca2c:	bl	11954 <memset@plt>
   1ca30:	mov	r3, #1
   1ca34:	mov	r2, #1
   1ca38:	str	r3, [sp, #44]	; 0x2c
   1ca3c:	ldr	r3, [sp, #40]	; 0x28
   1ca40:	strb	r2, [r4, r3]
   1ca44:	b	1c774 <argp_parse@@Base+0x2984>
   1ca48:	ldr	ip, [sl]
   1ca4c:	movw	r0, #62912	; 0xf5c0
   1ca50:	movt	r0, #2
   1ca54:	movw	r1, #60760	; 0xed58
   1ca58:	movt	r1, #1
   1ca5c:	ldr	r3, [sp, #28]
   1ca60:	ldr	r0, [r0]
   1ca64:	ldr	r2, [r3]
   1ca68:	str	ip, [sp]
   1ca6c:	ldr	r3, [sp, #104]	; 0x68
   1ca70:	bl	1190c <fprintf@plt>
   1ca74:	b	1ca00 <argp_parse@@Base+0x2c10>
   1ca78:	mov	r0, r4
   1ca7c:	bl	1afbc <argp_parse@@Base+0x11cc>
   1ca80:	b	1c990 <argp_parse@@Base+0x2ba0>
   1ca84:	mvn	r0, #0
   1ca88:	b	1c800 <argp_parse@@Base+0x2a10>
   1ca8c:	ldr	r3, [sp, #100]	; 0x64
   1ca90:	cmp	r3, #0
   1ca94:	bne	1cb50 <argp_parse@@Base+0x2d60>
   1ca98:	ldr	r3, [sl, #12]
   1ca9c:	ldr	r2, [sp, #96]	; 0x60
   1caa0:	str	r3, [r2, #8]
   1caa4:	ldr	r3, [sp, #32]
   1caa8:	ldrb	r3, [r3]
   1caac:	cmp	r3, #58	; 0x3a
   1cab0:	moveq	r0, #58	; 0x3a
   1cab4:	movne	r0, #63	; 0x3f
   1cab8:	b	1c800 <argp_parse@@Base+0x2a10>
   1cabc:	bl	11a20 <flockfile@plt>
   1cac0:	ldr	r2, [sp, #28]
   1cac4:	movw	r1, #60672	; 0xed00
   1cac8:	movt	r1, #1
   1cacc:	movw	r7, #60720	; 0xed30
   1cad0:	movt	r7, #1
   1cad4:	ldr	r3, [sp, #96]	; 0x60
   1cad8:	add	r6, r4, r6
   1cadc:	sub	r8, r4, #1
   1cae0:	ldr	r2, [r2]
   1cae4:	ldr	r0, [r3, #20]
   1cae8:	ldr	r3, [sp, #104]	; 0x68
   1caec:	str	r0, [sp]
   1caf0:	ldr	r0, [r5]
   1caf4:	bl	1190c <fprintf@plt>
   1caf8:	ldr	r0, [r5]
   1cafc:	ldr	sl, [sp, #12]
   1cb00:	ldr	r9, [sp, #20]
   1cb04:	b	1cb14 <argp_parse@@Base+0x2d24>
   1cb08:	cmp	r6, r8
   1cb0c:	add	r9, r9, #1
   1cb10:	beq	1cb38 <argp_parse@@Base+0x2d48>
   1cb14:	ldrb	r3, [r8, #1]!
   1cb18:	cmp	r3, #0
   1cb1c:	beq	1cb08 <argp_parse@@Base+0x2d18>
   1cb20:	mov	r1, r7
   1cb24:	ldr	r3, [sl, r9, lsl #4]
   1cb28:	ldr	r2, [sp, #104]	; 0x68
   1cb2c:	bl	1190c <fprintf@plt>
   1cb30:	ldr	r0, [r5]
   1cb34:	b	1cb08 <argp_parse@@Base+0x2d18>
   1cb38:	mov	r1, r0
   1cb3c:	mov	r0, #10
   1cb40:	bl	11a08 <fputc@plt>
   1cb44:	ldr	r0, [r5]
   1cb48:	bl	117e0 <funlockfile@plt>
   1cb4c:	b	1c984 <argp_parse@@Base+0x2b94>
   1cb50:	ldr	ip, [sl]
   1cb54:	movw	r0, #62912	; 0xf5c0
   1cb58:	movt	r0, #2
   1cb5c:	movw	r1, #60808	; 0xed88
   1cb60:	movt	r1, #1
   1cb64:	ldr	r3, [sp, #28]
   1cb68:	ldr	r0, [r0]
   1cb6c:	ldr	r2, [r3]
   1cb70:	str	ip, [sp]
   1cb74:	ldr	r3, [sp, #104]	; 0x68
   1cb78:	bl	1190c <fprintf@plt>
   1cb7c:	b	1ca98 <argp_parse@@Base+0x2ca8>
   1cb80:	mov	r3, #1
   1cb84:	str	r3, [sp, #20]
   1cb88:	b	1c77c <argp_parse@@Base+0x298c>
   1cb8c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1cb90:	subs	r5, r0, #0
   1cb94:	strd	r6, [sp, #8]
   1cb98:	strd	r8, [sp, #16]
   1cb9c:	strd	sl, [sp, #24]
   1cba0:	str	lr, [sp, #32]
   1cba4:	sub	sp, sp, #36	; 0x24
   1cba8:	ldr	r4, [sp, #80]	; 0x50
   1cbac:	ldr	r7, [r4, #4]
   1cbb0:	ble	1cda0 <argp_parse@@Base+0x2fb0>
   1cbb4:	mov	r6, r2
   1cbb8:	mov	sl, r3
   1cbbc:	ldr	r2, [r4]
   1cbc0:	mov	r3, #0
   1cbc4:	mov	r9, r1
   1cbc8:	str	r3, [r4, #12]
   1cbcc:	cmp	r2, r3
   1cbd0:	beq	1ce48 <argp_parse@@Base+0x3058>
   1cbd4:	ldr	r3, [r4, #16]
   1cbd8:	cmp	r3, #0
   1cbdc:	bne	1cd6c <argp_parse@@Base+0x2f7c>
   1cbe0:	mov	r3, #0
   1cbe4:	str	r3, [r4, #20]
   1cbe8:	str	r2, [r4, #28]
   1cbec:	str	r2, [r4, #32]
   1cbf0:	ldrb	r2, [r6]
   1cbf4:	cmp	r2, #45	; 0x2d
   1cbf8:	moveq	r2, #2
   1cbfc:	addeq	r6, r6, #1
   1cc00:	streq	r2, [r4, #24]
   1cc04:	beq	1cc2c <argp_parse@@Base+0x2e3c>
   1cc08:	cmp	r2, #43	; 0x2b
   1cc0c:	addeq	r6, r6, #1
   1cc10:	streq	r3, [r4, #24]
   1cc14:	beq	1cc2c <argp_parse@@Base+0x2e3c>
   1cc18:	ldr	r2, [sp, #84]	; 0x54
   1cc1c:	cmp	r2, #0
   1cc20:	beq	1cf78 <argp_parse@@Base+0x3188>
   1cc24:	mov	r2, #0
   1cc28:	str	r2, [r4, #24]
   1cc2c:	mov	r2, #1
   1cc30:	str	r2, [r4, #16]
   1cc34:	ldrb	r2, [r6]
   1cc38:	cmp	r2, #58	; 0x3a
   1cc3c:	moveq	r7, #0
   1cc40:	cmp	r3, #0
   1cc44:	beq	1ccd8 <argp_parse@@Base+0x2ee8>
   1cc48:	ldrb	r2, [r3]
   1cc4c:	cmp	r2, #0
   1cc50:	beq	1ccd8 <argp_parse@@Base+0x2ee8>
   1cc54:	add	fp, r3, #1
   1cc58:	mov	r0, r6
   1cc5c:	str	r3, [sp, #28]
   1cc60:	str	fp, [r4, #20]
   1cc64:	ldrb	r8, [r3]
   1cc68:	mov	r1, r8
   1cc6c:	str	r8, [sp, #24]
   1cc70:	bl	11900 <strchr@plt>
   1cc74:	ldrd	r2, [sp, #24]
   1cc78:	ldrb	r1, [r3, #1]
   1cc7c:	cmp	r1, #0
   1cc80:	bne	1cc90 <argp_parse@@Base+0x2ea0>
   1cc84:	ldr	r1, [r4]
   1cc88:	add	r1, r1, #1
   1cc8c:	str	r1, [r4]
   1cc90:	sub	r1, r8, #58	; 0x3a
   1cc94:	cmp	r0, #0
   1cc98:	cmpne	r1, #1
   1cc9c:	bls	1cff4 <argp_parse@@Base+0x3204>
   1cca0:	ldrb	ip, [r0]
   1cca4:	ldrb	r1, [r0, #1]
   1cca8:	cmp	ip, #87	; 0x57
   1ccac:	beq	1cef8 <argp_parse@@Base+0x3108>
   1ccb0:	cmp	r1, #58	; 0x3a
   1ccb4:	beq	1cf9c <argp_parse@@Base+0x31ac>
   1ccb8:	mov	r0, r2
   1ccbc:	add	sp, sp, #36	; 0x24
   1ccc0:	ldrd	r4, [sp]
   1ccc4:	ldrd	r6, [sp, #8]
   1ccc8:	ldrd	r8, [sp, #16]
   1cccc:	ldrd	sl, [sp, #24]
   1ccd0:	add	sp, sp, #32
   1ccd4:	pop	{pc}		; (ldr pc, [sp], #4)
   1ccd8:	ldr	r8, [r4]
   1ccdc:	ldr	r3, [r4, #32]
   1cce0:	cmp	r3, r8
   1cce4:	ldr	r3, [r4, #28]
   1cce8:	strgt	r8, [r4, #32]
   1ccec:	cmp	r8, r3
   1ccf0:	ldr	r3, [r4, #24]
   1ccf4:	strlt	r8, [r4, #28]
   1ccf8:	cmp	r3, #1
   1ccfc:	beq	1cda8 <argp_parse@@Base+0x2fb8>
   1cd00:	cmp	r5, r8
   1cd04:	beq	1cd88 <argp_parse@@Base+0x2f98>
   1cd08:	ldr	r3, [r9, r8, lsl #2]
   1cd0c:	movw	fp, #54908	; 0xd67c
   1cd10:	movt	fp, #1
   1cd14:	mov	r1, fp
   1cd18:	mov	r0, r3
   1cd1c:	str	r3, [sp, #24]
   1cd20:	bl	11654 <strcmp@plt>
   1cd24:	cmp	r0, #0
   1cd28:	ldr	r3, [sp, #24]
   1cd2c:	bne	1ce1c <argp_parse@@Base+0x302c>
   1cd30:	ldr	r3, [r4, #28]
   1cd34:	add	r8, r8, #1
   1cd38:	ldr	r2, [r4, #32]
   1cd3c:	str	r8, [r4]
   1cd40:	cmp	r3, r2
   1cd44:	beq	1d008 <argp_parse@@Base+0x3218>
   1cd48:	cmp	r8, r2
   1cd4c:	beq	1cd60 <argp_parse@@Base+0x2f70>
   1cd50:	mov	r0, r9
   1cd54:	mov	r1, r4
   1cd58:	bl	1c55c <argp_parse@@Base+0x276c>
   1cd5c:	ldr	r3, [r4, #28]
   1cd60:	str	r5, [r4]
   1cd64:	str	r5, [r4, #32]
   1cd68:	b	1cd90 <argp_parse@@Base+0x2fa0>
   1cd6c:	ldrb	r2, [r6]
   1cd70:	ldr	r3, [r4, #20]
   1cd74:	sub	r1, r2, #43	; 0x2b
   1cd78:	tst	r1, #253	; 0xfd
   1cd7c:	ldrbeq	r2, [r6, #1]
   1cd80:	addeq	r6, r6, #1
   1cd84:	b	1cc38 <argp_parse@@Base+0x2e48>
   1cd88:	ldr	r3, [r4, #28]
   1cd8c:	ldr	r5, [r4, #32]
   1cd90:	cmp	r5, r3
   1cd94:	mvnne	r2, #0
   1cd98:	strne	r3, [r4]
   1cd9c:	bne	1ccb8 <argp_parse@@Base+0x2ec8>
   1cda0:	mvn	r2, #0
   1cda4:	b	1ccb8 <argp_parse@@Base+0x2ec8>
   1cda8:	ldrd	r2, [r4, #28]
   1cdac:	cmp	r2, r3
   1cdb0:	beq	1cfdc <argp_parse@@Base+0x31ec>
   1cdb4:	cmp	r8, r3
   1cdb8:	beq	1cdcc <argp_parse@@Base+0x2fdc>
   1cdbc:	mov	r1, r4
   1cdc0:	mov	r0, r9
   1cdc4:	bl	1c55c <argp_parse@@Base+0x276c>
   1cdc8:	ldr	r3, [r4]
   1cdcc:	cmp	r5, r3
   1cdd0:	ble	1cfec <argp_parse@@Base+0x31fc>
   1cdd4:	add	r1, r9, r3, lsl #2
   1cdd8:	b	1cdec <argp_parse@@Base+0x2ffc>
   1cddc:	add	r3, r3, #1
   1cde0:	cmp	r3, r5
   1cde4:	str	r3, [r4]
   1cde8:	beq	1cfec <argp_parse@@Base+0x31fc>
   1cdec:	ldr	r2, [r1], #4
   1cdf0:	ldrb	r0, [r2]
   1cdf4:	cmp	r0, #45	; 0x2d
   1cdf8:	bne	1cddc <argp_parse@@Base+0x2fec>
   1cdfc:	ldrb	r2, [r2, #1]
   1ce00:	cmp	r2, #0
   1ce04:	beq	1cddc <argp_parse@@Base+0x2fec>
   1ce08:	ldr	r8, [r4]
   1ce0c:	cmp	r5, r8
   1ce10:	str	r3, [r4, #32]
   1ce14:	bne	1cd08 <argp_parse@@Base+0x2f18>
   1ce18:	b	1cd88 <argp_parse@@Base+0x2f98>
   1ce1c:	ldrb	r2, [r3]
   1ce20:	cmp	r2, #45	; 0x2d
   1ce24:	beq	1ce58 <argp_parse@@Base+0x3068>
   1ce28:	ldr	r2, [r4, #24]
   1ce2c:	cmp	r2, #0
   1ce30:	beq	1cda0 <argp_parse@@Base+0x2fb0>
   1ce34:	add	r8, r8, #1
   1ce38:	mov	r2, #1
   1ce3c:	str	r8, [r4]
   1ce40:	str	r3, [r4, #12]
   1ce44:	b	1ccb8 <argp_parse@@Base+0x2ec8>
   1ce48:	mov	r3, #1
   1ce4c:	mov	r2, r3
   1ce50:	str	r3, [r4]
   1ce54:	b	1cbe0 <argp_parse@@Base+0x2df0>
   1ce58:	ldrb	r1, [r3, #1]
   1ce5c:	cmp	r1, #0
   1ce60:	beq	1ce28 <argp_parse@@Base+0x3038>
   1ce64:	cmp	sl, #0
   1ce68:	beq	1cef0 <argp_parse@@Base+0x3100>
   1ce6c:	cmp	r1, #45	; 0x2d
   1ce70:	beq	1d088 <argp_parse@@Base+0x3298>
   1ce74:	ldr	r2, [sp, #76]	; 0x4c
   1ce78:	cmp	r2, #0
   1ce7c:	beq	1cef0 <argp_parse@@Base+0x3100>
   1ce80:	ldrb	r2, [r3, #2]
   1ce84:	cmp	r2, #0
   1ce88:	bne	1cea4 <argp_parse@@Base+0x30b4>
   1ce8c:	mov	r0, r6
   1ce90:	str	r3, [sp, #24]
   1ce94:	bl	11900 <strchr@plt>
   1ce98:	cmp	r0, #0
   1ce9c:	ldr	r3, [sp, #24]
   1cea0:	bne	1cef0 <argp_parse@@Base+0x3100>
   1cea4:	ldr	r2, [sp, #72]	; 0x48
   1cea8:	add	ip, r3, #1
   1ceac:	movw	r0, #60864	; 0xedc0
   1ceb0:	movt	r0, #1
   1ceb4:	mov	r3, sl
   1ceb8:	ldr	r1, [sp, #76]	; 0x4c
   1cebc:	str	r2, [sp]
   1cec0:	mov	r2, r6
   1cec4:	str	r0, [sp, #16]
   1cec8:	mov	r0, r5
   1cecc:	stmib	sp, {r1, r4, r7}
   1ced0:	mov	r1, r9
   1ced4:	str	ip, [r4, #20]
   1ced8:	bl	1c63c <argp_parse@@Base+0x284c>
   1cedc:	cmn	r0, #1
   1cee0:	mov	r2, r0
   1cee4:	bne	1ccb8 <argp_parse@@Base+0x2ec8>
   1cee8:	ldr	r3, [r4]
   1ceec:	ldr	r3, [r9, r3, lsl #2]
   1cef0:	add	r3, r3, #1
   1cef4:	b	1cc54 <argp_parse@@Base+0x2e64>
   1cef8:	sub	ip, r1, #59	; 0x3b
   1cefc:	cmp	sl, #0
   1cf00:	clz	ip, ip
   1cf04:	lsr	ip, ip, #5
   1cf08:	moveq	ip, #0
   1cf0c:	cmp	ip, #0
   1cf10:	beq	1ccb0 <argp_parse@@Base+0x2ec0>
   1cf14:	ldrb	r3, [r3, #1]
   1cf18:	cmp	r3, #0
   1cf1c:	bne	1cf30 <argp_parse@@Base+0x3140>
   1cf20:	ldr	r3, [r4]
   1cf24:	cmp	r3, r5
   1cf28:	beq	1d0bc <argp_parse@@Base+0x32cc>
   1cf2c:	ldr	fp, [r9, r3, lsl #2]
   1cf30:	mov	lr, #0
   1cf34:	movw	ip, #60940	; 0xee0c
   1cf38:	movt	ip, #1
   1cf3c:	ldr	r3, [sp, #72]	; 0x48
   1cf40:	mov	r2, r6
   1cf44:	mov	r1, r9
   1cf48:	mov	r0, r5
   1cf4c:	str	r3, [sp]
   1cf50:	mov	r3, sl
   1cf54:	str	r4, [sp, #8]
   1cf58:	str	r7, [sp, #12]
   1cf5c:	str	ip, [sp, #16]
   1cf60:	str	fp, [r4, #20]
   1cf64:	str	lr, [sp, #4]
   1cf68:	str	lr, [r4, #12]
   1cf6c:	bl	1c63c <argp_parse@@Base+0x284c>
   1cf70:	mov	r2, r0
   1cf74:	b	1ccb8 <argp_parse@@Base+0x2ec8>
   1cf78:	movw	r0, #60848	; 0xedb0
   1cf7c:	movt	r0, #1
   1cf80:	bl	11858 <getenv@plt>
   1cf84:	cmp	r0, #0
   1cf88:	ldr	r3, [r4, #20]
   1cf8c:	bne	1cc24 <argp_parse@@Base+0x2e34>
   1cf90:	mov	r2, #1
   1cf94:	str	r2, [r4, #24]
   1cf98:	b	1cc2c <argp_parse@@Base+0x2e3c>
   1cf9c:	ldrb	r1, [r0, #2]
   1cfa0:	ldrb	r3, [r3, #1]
   1cfa4:	cmp	r1, #58	; 0x3a
   1cfa8:	beq	1d048 <argp_parse@@Base+0x3258>
   1cfac:	cmp	r3, #0
   1cfb0:	ldr	r3, [r4]
   1cfb4:	bne	1d014 <argp_parse@@Base+0x3224>
   1cfb8:	cmp	r5, r3
   1cfbc:	beq	1d068 <argp_parse@@Base+0x3278>
   1cfc0:	ldr	r1, [r9, r3, lsl #2]
   1cfc4:	add	r3, r3, #1
   1cfc8:	str	r3, [r4]
   1cfcc:	str	r1, [r4, #12]
   1cfd0:	mov	r3, #0
   1cfd4:	str	r3, [r4, #20]
   1cfd8:	b	1ccb8 <argp_parse@@Base+0x2ec8>
   1cfdc:	cmp	r8, r3
   1cfe0:	movne	r3, r8
   1cfe4:	strne	r8, [r4, #28]
   1cfe8:	b	1cdcc <argp_parse@@Base+0x2fdc>
   1cfec:	mov	r8, r3
   1cff0:	b	1ce0c <argp_parse@@Base+0x301c>
   1cff4:	cmp	r7, #0
   1cff8:	bne	1d024 <argp_parse@@Base+0x3234>
   1cffc:	mov	r2, #63	; 0x3f
   1d000:	str	r8, [r4, #8]
   1d004:	b	1ccb8 <argp_parse@@Base+0x2ec8>
   1d008:	mov	r3, r8
   1d00c:	str	r8, [r4, #28]
   1d010:	b	1cd60 <argp_parse@@Base+0x2f70>
   1d014:	add	r3, r3, #1
   1d018:	str	r3, [r4]
   1d01c:	str	fp, [r4, #12]
   1d020:	b	1cfd0 <argp_parse@@Base+0x31e0>
   1d024:	movw	r0, #62912	; 0xf5c0
   1d028:	movt	r0, #2
   1d02c:	ldr	r2, [r9]
   1d030:	movw	r1, #60868	; 0xedc4
   1d034:	movt	r1, #1
   1d038:	mov	r3, r8
   1d03c:	ldr	r0, [r0]
   1d040:	bl	1190c <fprintf@plt>
   1d044:	b	1cffc <argp_parse@@Base+0x320c>
   1d048:	cmp	r3, #0
   1d04c:	streq	r3, [r4, #12]
   1d050:	beq	1cfd0 <argp_parse@@Base+0x31e0>
   1d054:	ldr	r3, [r4]
   1d058:	str	fp, [r4, #12]
   1d05c:	add	r3, r3, #1
   1d060:	str	r3, [r4]
   1d064:	b	1cfd0 <argp_parse@@Base+0x31e0>
   1d068:	cmp	r7, #0
   1d06c:	bne	1d0dc <argp_parse@@Base+0x32ec>
   1d070:	str	r8, [r4, #8]
   1d074:	ldrb	r3, [r6]
   1d078:	cmp	r3, #58	; 0x3a
   1d07c:	moveq	r2, #58	; 0x3a
   1d080:	movne	r2, #63	; 0x3f
   1d084:	b	1cfd0 <argp_parse@@Base+0x31e0>
   1d088:	ldr	r2, [sp, #72]	; 0x48
   1d08c:	add	ip, r3, #2
   1d090:	mov	r1, r9
   1d094:	mov	r3, sl
   1d098:	ldr	r0, [sp, #76]	; 0x4c
   1d09c:	str	r2, [sp]
   1d0a0:	mov	r2, r6
   1d0a4:	stmib	sp, {r0, r4, r7, fp}
   1d0a8:	mov	r0, r5
   1d0ac:	str	ip, [r4, #20]
   1d0b0:	bl	1c63c <argp_parse@@Base+0x284c>
   1d0b4:	mov	r2, r0
   1d0b8:	b	1ccb8 <argp_parse@@Base+0x2ec8>
   1d0bc:	cmp	r7, #0
   1d0c0:	bne	1d100 <argp_parse@@Base+0x3310>
   1d0c4:	str	r8, [r4, #8]
   1d0c8:	ldrb	r3, [r6]
   1d0cc:	cmp	r3, #58	; 0x3a
   1d0d0:	moveq	r2, #58	; 0x3a
   1d0d4:	movne	r2, #63	; 0x3f
   1d0d8:	b	1ccb8 <argp_parse@@Base+0x2ec8>
   1d0dc:	movw	r0, #62912	; 0xf5c0
   1d0e0:	movt	r0, #2
   1d0e4:	ldr	r2, [r9]
   1d0e8:	movw	r1, #60896	; 0xede0
   1d0ec:	movt	r1, #1
   1d0f0:	mov	r3, r8
   1d0f4:	ldr	r0, [r0]
   1d0f8:	bl	1190c <fprintf@plt>
   1d0fc:	b	1d070 <argp_parse@@Base+0x3280>
   1d100:	movw	r0, #62912	; 0xf5c0
   1d104:	movt	r0, #2
   1d108:	ldr	r2, [r9]
   1d10c:	movw	r1, #60896	; 0xede0
   1d110:	movt	r1, #1
   1d114:	mov	r3, r8
   1d118:	ldr	r0, [r0]
   1d11c:	bl	1190c <fprintf@plt>
   1d120:	b	1d0c4 <argp_parse@@Base+0x32d4>
   1d124:	strd	r4, [sp, #-16]!
   1d128:	movw	r5, #62892	; 0xf5ac
   1d12c:	movt	r5, #2
   1d130:	str	r6, [sp, #8]
   1d134:	movw	r4, #64024	; 0xfa18
   1d138:	movt	r4, #2
   1d13c:	str	lr, [sp, #12]
   1d140:	sub	sp, sp, #16
   1d144:	ldr	lr, [sp, #32]
   1d148:	ldr	ip, [r5]
   1d14c:	ldr	r6, [sp, #36]	; 0x24
   1d150:	str	lr, [sp]
   1d154:	ldr	lr, [sp, #40]	; 0x28
   1d158:	str	ip, [r4]
   1d15c:	ldr	ip, [r5, #4]
   1d160:	str	r6, [sp, #4]
   1d164:	str	r4, [sp, #8]
   1d168:	str	lr, [sp, #12]
   1d16c:	str	ip, [r4, #4]
   1d170:	bl	1cb8c <argp_parse@@Base+0x2d9c>
   1d174:	ldr	ip, [r4]
   1d178:	movw	r3, #148	; 0x94
   1d17c:	movt	r3, #3
   1d180:	ldr	r1, [r4, #8]
   1d184:	ldr	r2, [r4, #12]
   1d188:	str	ip, [r5]
   1d18c:	str	r1, [r5, #8]
   1d190:	str	r2, [r3]
   1d194:	add	sp, sp, #16
   1d198:	ldrd	r4, [sp]
   1d19c:	ldr	r6, [sp, #8]
   1d1a0:	add	sp, sp, #12
   1d1a4:	pop	{pc}		; (ldr pc, [sp], #4)
   1d1a8:	mov	ip, #0
   1d1ac:	push	{lr}		; (str lr, [sp, #-4]!)
   1d1b0:	mov	lr, #1
   1d1b4:	sub	sp, sp, #20
   1d1b8:	mov	r3, ip
   1d1bc:	str	ip, [sp]
   1d1c0:	stmib	sp, {ip, lr}
   1d1c4:	bl	1d124 <argp_parse@@Base+0x3334>
   1d1c8:	add	sp, sp, #20
   1d1cc:	pop	{pc}		; (ldr pc, [sp], #4)
   1d1d0:	umull	r2, r3, r1, r2
   1d1d4:	cmp	r3, #0
   1d1d8:	bne	1d1e4 <argp_parse@@Base+0x33f4>
   1d1dc:	mov	r1, r2
   1d1e0:	b	1bd38 <argp_parse@@Base+0x1f48>
   1d1e4:	str	r4, [sp, #-8]!
   1d1e8:	str	lr, [sp, #4]
   1d1ec:	bl	11918 <__errno_location@plt>
   1d1f0:	mov	r3, #12
   1d1f4:	ldr	r4, [sp]
   1d1f8:	add	sp, sp, #4
   1d1fc:	str	r3, [r0]
   1d200:	mov	r0, #0
   1d204:	pop	{pc}		; (ldr pc, [sp], #4)
   1d208:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d20c:	mov	r7, r0
   1d210:	ldr	r6, [pc, #72]	; 1d260 <argp_parse@@Base+0x3470>
   1d214:	ldr	r5, [pc, #72]	; 1d264 <argp_parse@@Base+0x3474>
   1d218:	add	r6, pc, r6
   1d21c:	add	r5, pc, r5
   1d220:	sub	r6, r6, r5
   1d224:	mov	r8, r1
   1d228:	mov	r9, r2
   1d22c:	bl	11610 <calloc@plt-0x20>
   1d230:	asrs	r6, r6, #2
   1d234:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d238:	mov	r4, #0
   1d23c:	add	r4, r4, #1
   1d240:	ldr	r3, [r5], #4
   1d244:	mov	r2, r9
   1d248:	mov	r1, r8
   1d24c:	mov	r0, r7
   1d250:	blx	r3
   1d254:	cmp	r6, r4
   1d258:	bne	1d23c <argp_parse@@Base+0x344c>
   1d25c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d260:	andeq	r1, r1, ip, ror #25
   1d264:	andeq	r1, r1, r4, ror #25
   1d268:	bx	lr

Disassembly of section .fini:

0001d26c <.fini>:
   1d26c:	push	{r3, lr}
   1d270:	pop	{r3, pc}
