
../repos/inetutils/whois/whois:     file format elf32-littlearm


Disassembly of section .init:

000112bc <.init>:
   112bc:	push	{r3, lr}
   112c0:	bl	1160c <__assert_fail@plt+0x48>
   112c4:	pop	{r3, pc}

Disassembly of section .plt:

000112c8 <fdopen@plt-0x14>:
   112c8:	push	{lr}		; (str lr, [sp, #-4]!)
   112cc:	ldr	lr, [pc, #4]	; 112d8 <fdopen@plt-0x4>
   112d0:	add	lr, pc, lr
   112d4:	ldr	pc, [lr, #8]!
   112d8:	andeq	fp, r1, r8, lsr #26

000112dc <fdopen@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #110592	; 0x1b000
   112e4:	ldr	pc, [ip, #3368]!	; 0xd28

000112e8 <calloc@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #110592	; 0x1b000
   112f0:	ldr	pc, [ip, #3360]!	; 0xd20

000112f4 <fputs_unlocked@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #110592	; 0x1b000
   112fc:	ldr	pc, [ip, #3352]!	; 0xd18

00011300 <inet_aton@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #110592	; 0x1b000
   11308:	ldr	pc, [ip, #3344]!	; 0xd10

0001130c <strcmp@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #110592	; 0x1b000
   11314:	ldr	pc, [ip, #3336]!	; 0xd08

00011318 <strtol@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #110592	; 0x1b000
   11320:	ldr	pc, [ip, #3328]!	; 0xd00

00011324 <printf@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #110592	; 0x1b000
   1132c:	ldr	pc, [ip, #3320]!	; 0xcf8

00011330 <memmove@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #110592	; 0x1b000
   11338:	ldr	pc, [ip, #3312]!	; 0xcf0

0001133c <strchrnul@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #110592	; 0x1b000
   11344:	ldr	pc, [ip, #3304]!	; 0xce8

00011348 <free@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #110592	; 0x1b000
   11350:	ldr	pc, [ip, #3296]!	; 0xce0

00011354 <gai_strerror@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #110592	; 0x1b000
   1135c:	ldr	pc, [ip, #3288]!	; 0xcd8

00011360 <fgets@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #110592	; 0x1b000
   11368:	ldr	pc, [ip, #3280]!	; 0xcd0

0001136c <ferror@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #110592	; 0x1b000
   11374:	ldr	pc, [ip, #3272]!	; 0xcc8

00011378 <strndup@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #110592	; 0x1b000
   11380:	ldr	pc, [ip, #3264]!	; 0xcc0

00011384 <memcpy@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #110592	; 0x1b000
   1138c:	ldr	pc, [ip, #3256]!	; 0xcb8

00011390 <signal@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #110592	; 0x1b000
   11398:	ldr	pc, [ip, #3248]!	; 0xcb0

0001139c <fwrite_unlocked@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #110592	; 0x1b000
   113a4:	ldr	pc, [ip, #3240]!	; 0xca8

000113a8 <sleep@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #110592	; 0x1b000
   113b0:	ldr	pc, [ip, #3232]!	; 0xca0

000113b4 <realloc@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #110592	; 0x1b000
   113bc:	ldr	pc, [ip, #3224]!	; 0xc98

000113c0 <strcasecmp@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #110592	; 0x1b000
   113c8:	ldr	pc, [ip, #3216]!	; 0xc90

000113cc <funlockfile@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #110592	; 0x1b000
   113d4:	ldr	pc, [ip, #3208]!	; 0xc88

000113d8 <fwrite@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #110592	; 0x1b000
   113e0:	ldr	pc, [ip, #3200]!	; 0xc80

000113e4 <strcat@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #110592	; 0x1b000
   113ec:	ldr	pc, [ip, #3192]!	; 0xc78

000113f0 <strcpy@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #110592	; 0x1b000
   113f8:	ldr	pc, [ip, #3184]!	; 0xc70

000113fc <error@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #110592	; 0x1b000
   11404:	ldr	pc, [ip, #3176]!	; 0xc68

00011408 <getenv@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #110592	; 0x1b000
   11410:	ldr	pc, [ip, #3168]!	; 0xc60

00011414 <puts@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #110592	; 0x1b000
   1141c:	ldr	pc, [ip, #3160]!	; 0xc58

00011420 <malloc@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #110592	; 0x1b000
   11428:	ldr	pc, [ip, #3152]!	; 0xc50

0001142c <__libc_start_main@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #110592	; 0x1b000
   11434:	ldr	pc, [ip, #3144]!	; 0xc48

00011438 <strerror@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #110592	; 0x1b000
   11440:	ldr	pc, [ip, #3136]!	; 0xc40

00011444 <__ctype_tolower_loc@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #110592	; 0x1b000
   1144c:	ldr	pc, [ip, #3128]!	; 0xc38

00011450 <__gmon_start__@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #110592	; 0x1b000
   11458:	ldr	pc, [ip, #3120]!	; 0xc30

0001145c <__ctype_b_loc@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #110592	; 0x1b000
   11464:	ldr	pc, [ip, #3112]!	; 0xc28

00011468 <exit@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #110592	; 0x1b000
   11470:	ldr	pc, [ip, #3104]!	; 0xc20

00011474 <strlen@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #110592	; 0x1b000
   1147c:	ldr	pc, [ip, #3096]!	; 0xc18

00011480 <strchr@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #110592	; 0x1b000
   11488:	ldr	pc, [ip, #3088]!	; 0xc10

0001148c <fprintf@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #110592	; 0x1b000
   11494:	ldr	pc, [ip, #3080]!	; 0xc08

00011498 <__errno_location@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #110592	; 0x1b000
   114a0:	ldr	pc, [ip, #3072]!	; 0xc00

000114a4 <strncasecmp@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #110592	; 0x1b000
   114ac:	ldr	pc, [ip, #3064]!	; 0xbf8

000114b0 <strerror_r@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #110592	; 0x1b000
   114b8:	ldr	pc, [ip, #3056]!	; 0xbf0

000114bc <memset@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #110592	; 0x1b000
   114c4:	ldr	pc, [ip, #3048]!	; 0xbe8

000114c8 <write@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #110592	; 0x1b000
   114d0:	ldr	pc, [ip, #3040]!	; 0xbe0

000114d4 <memchr@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #110592	; 0x1b000
   114dc:	ldr	pc, [ip, #3032]!	; 0xbd8

000114e0 <__overflow@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #110592	; 0x1b000
   114e8:	ldr	pc, [ip, #3024]!	; 0xbd0

000114ec <strrchr@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #110592	; 0x1b000
   114f4:	ldr	pc, [ip, #3016]!	; 0xbc8

000114f8 <vfprintf@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #110592	; 0x1b000
   11500:	ldr	pc, [ip, #3008]!	; 0xbc0

00011504 <fputc@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #110592	; 0x1b000
   1150c:	ldr	pc, [ip, #3000]!	; 0xbb8

00011510 <sscanf@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #110592	; 0x1b000
   11518:	ldr	pc, [ip, #2992]!	; 0xbb0

0001151c <sprintf@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #110592	; 0x1b000
   11524:	ldr	pc, [ip, #2984]!	; 0xba8

00011528 <flockfile@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #110592	; 0x1b000
   11530:	ldr	pc, [ip, #2976]!	; 0xba0

00011534 <vsnprintf@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #110592	; 0x1b000
   1153c:	ldr	pc, [ip, #2968]!	; 0xb98

00011540 <qsort@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #110592	; 0x1b000
   11548:	ldr	pc, [ip, #2960]!	; 0xb90

0001154c <strpbrk@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #110592	; 0x1b000
   11554:	ldr	pc, [ip, #2952]!	; 0xb88

00011558 <freeaddrinfo@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #110592	; 0x1b000
   11560:	ldr	pc, [ip, #2944]!	; 0xb80

00011564 <getaddrinfo@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #110592	; 0x1b000
   1156c:	ldr	pc, [ip, #2936]!	; 0xb78

00011570 <socket@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #110592	; 0x1b000
   11578:	ldr	pc, [ip, #2928]!	; 0xb70

0001157c <gethostbyname@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #110592	; 0x1b000
   11584:	ldr	pc, [ip, #2920]!	; 0xb68

00011588 <fputs@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #110592	; 0x1b000
   11590:	ldr	pc, [ip, #2912]!	; 0xb60

00011594 <strncmp@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #110592	; 0x1b000
   1159c:	ldr	pc, [ip, #2904]!	; 0xb58

000115a0 <abort@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #110592	; 0x1b000
   115a8:	ldr	pc, [ip, #2896]!	; 0xb50

000115ac <close@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #110592	; 0x1b000
   115b4:	ldr	pc, [ip, #2888]!	; 0xb48

000115b8 <connect@plt>:
   115b8:	add	ip, pc, #0, 12
   115bc:	add	ip, ip, #110592	; 0x1b000
   115c0:	ldr	pc, [ip, #2880]!	; 0xb40

000115c4 <__assert_fail@plt>:
   115c4:	add	ip, pc, #0, 12
   115c8:	add	ip, ip, #110592	; 0x1b000
   115cc:	ldr	pc, [ip, #2872]!	; 0xb38

Disassembly of section .text:

000115d0 <argp_parse@@Base-0x1960>:
   115d0:	mov	fp, #0
   115d4:	mov	lr, #0
   115d8:	pop	{r1}		; (ldr r1, [sp], #4)
   115dc:	mov	r2, sp
   115e0:	push	{r2}		; (str r2, [sp, #-4]!)
   115e4:	push	{r0}		; (str r0, [sp, #-4]!)
   115e8:	ldr	ip, [pc, #16]	; 11600 <__assert_fail@plt+0x3c>
   115ec:	push	{ip}		; (str ip, [sp, #-4]!)
   115f0:	ldr	r0, [pc, #12]	; 11604 <__assert_fail@plt+0x40>
   115f4:	ldr	r3, [pc, #12]	; 11608 <__assert_fail@plt+0x44>
   115f8:	bl	1142c <__libc_start_main@plt>
   115fc:	bl	115a0 <abort@plt>
   11600:	ldrdeq	sl, [r1], -ip
   11604:	andeq	r1, r1, r0, asr #13
   11608:	andeq	sl, r1, ip, ror r0
   1160c:	ldr	r3, [pc, #20]	; 11628 <__assert_fail@plt+0x64>
   11610:	ldr	r2, [pc, #20]	; 1162c <__assert_fail@plt+0x68>
   11614:	add	r3, pc, r3
   11618:	ldr	r2, [r3, r2]
   1161c:	cmp	r2, #0
   11620:	bxeq	lr
   11624:	b	11450 <__gmon_start__@plt>
   11628:	andeq	fp, r1, r4, ror #19
   1162c:	andeq	r0, r0, r8, lsl #2
   11630:	ldr	r0, [pc, #24]	; 11650 <__assert_fail@plt+0x8c>
   11634:	ldr	r3, [pc, #24]	; 11654 <__assert_fail@plt+0x90>
   11638:	cmp	r3, r0
   1163c:	bxeq	lr
   11640:	ldr	r3, [pc, #16]	; 11658 <__assert_fail@plt+0x94>
   11644:	cmp	r3, #0
   11648:	bxeq	lr
   1164c:	bx	r3
   11650:	andeq	r0, r3, ip, lsr #17
   11654:	andeq	r0, r3, ip, lsr #17
   11658:	andeq	r0, r0, r0
   1165c:	ldr	r0, [pc, #36]	; 11688 <__assert_fail@plt+0xc4>
   11660:	ldr	r1, [pc, #36]	; 1168c <__assert_fail@plt+0xc8>
   11664:	sub	r1, r1, r0
   11668:	asr	r1, r1, #2
   1166c:	add	r1, r1, r1, lsr #31
   11670:	asrs	r1, r1, #1
   11674:	bxeq	lr
   11678:	ldr	r3, [pc, #16]	; 11690 <__assert_fail@plt+0xcc>
   1167c:	cmp	r3, #0
   11680:	bxeq	lr
   11684:	bx	r3
   11688:	andeq	r0, r3, ip, lsr #17
   1168c:	andeq	r0, r3, ip, lsr #17
   11690:	andeq	r0, r0, r0
   11694:	push	{r4, lr}
   11698:	ldr	r4, [pc, #24]	; 116b8 <__assert_fail@plt+0xf4>
   1169c:	ldrb	r3, [r4]
   116a0:	cmp	r3, #0
   116a4:	popne	{r4, pc}
   116a8:	bl	11630 <__assert_fail@plt+0x6c>
   116ac:	mov	r3, #1
   116b0:	strb	r3, [r4]
   116b4:	pop	{r4, pc}
   116b8:	andeq	r0, r3, r0, asr #17
   116bc:	b	1165c <__assert_fail@plt+0x98>
   116c0:	push	{fp, lr}
   116c4:	mov	fp, sp
   116c8:	sub	sp, sp, #16
   116cc:	mov	r8, r0
   116d0:	ldr	r0, [r1]
   116d4:	mov	r7, r1
   116d8:	bl	146c8 <_obstack_memory_used@@Base+0x60>
   116dc:	movw	r0, #16896	; 0x4200
   116e0:	movw	r9, #2316	; 0x90c
   116e4:	movw	r3, #21268	; 0x5314
   116e8:	mov	r1, #0
   116ec:	mov	r2, #0
   116f0:	mov	r4, #0
   116f4:	movt	r0, #1
   116f8:	movt	r9, #3
   116fc:	movt	r3, #1
   11700:	str	r0, [sp]
   11704:	mov	r0, r9
   11708:	bl	142f0 <_obstack_begin@@Base>
   1170c:	movw	r0, #2364	; 0x93c
   11710:	movw	r1, #45763	; 0xb2c3
   11714:	movt	r0, #3
   11718:	movt	r1, #1
   1171c:	str	r1, [r0]
   11720:	movw	r0, #45486	; 0xb1ae
   11724:	movw	r1, #1568	; 0x620
   11728:	movt	r0, #1
   1172c:	movt	r1, #3
   11730:	bl	14108 <argp_parse@@Base+0x11d8>
   11734:	sub	r0, fp, #4
   11738:	mov	r1, r8
   1173c:	mov	r2, r7
   11740:	mov	r3, #8
   11744:	stm	sp, {r0, r4}
   11748:	movw	r0, #1576	; 0x628
   1174c:	movt	r0, #3
   11750:	bl	12f30 <argp_parse@@Base>
   11754:	ldr	r0, [r9, #12]
   11758:	ldr	r1, [r9, #16]
   1175c:	cmp	r1, r0
   11760:	bne	11774 <__assert_fail@plt+0x1b0>
   11764:	mov	r0, r9
   11768:	mov	r1, #1
   1176c:	bl	14444 <_obstack_newchunk@@Base>
   11770:	ldr	r0, [r9, #12]
   11774:	add	r1, r0, #1
   11778:	movw	r5, #2256	; 0x8d0
   1177c:	str	r1, [r9, #12]
   11780:	strb	r4, [r0]
   11784:	movt	r5, #3
   11788:	ldr	r1, [r9, #8]
   1178c:	ldr	r0, [r9, #12]
   11790:	ldr	r6, [fp, #-4]
   11794:	cmp	r0, r1
   11798:	str	r1, [sp, #8]
   1179c:	sub	r4, r8, r6
   117a0:	ldrbeq	r1, [r9, #40]	; 0x28
   117a4:	orreq	r1, r1, #2
   117a8:	strbeq	r1, [r9, #40]	; 0x28
   117ac:	ldr	r3, [r9, #24]
   117b0:	ldr	r1, [r9, #4]
   117b4:	ldr	r2, [r9, #16]
   117b8:	add	r0, r3, r0
   117bc:	bic	r0, r0, r3
   117c0:	sub	r3, r0, r1
   117c4:	sub	r1, r2, r1
   117c8:	cmp	r3, r1
   117cc:	movhi	r0, r2
   117d0:	str	r0, [r9, #8]
   117d4:	str	r0, [r9, #12]
   117d8:	ldr	r0, [r5]
   117dc:	orrs	r1, r4, r0
   117e0:	bne	117fc <__assert_fail@plt+0x238>
   117e4:	movw	r2, #45787	; 0xb2db
   117e8:	mov	r0, #1
   117ec:	mov	r1, #0
   117f0:	movt	r2, #1
   117f4:	bl	113fc <error@plt>
   117f8:	ldr	r0, [r5]
   117fc:	cmp	r0, #0
   11800:	bne	118a4 <__assert_fail@plt+0x2e0>
   11804:	cmp	r4, #0
   11808:	beq	118a4 <__assert_fail@plt+0x2e0>
   1180c:	add	r0, r6, #1
   11810:	add	r4, r7, r6, lsl #2
   11814:	mov	sl, #32
   11818:	sub	r6, r0, r8
   1181c:	b	11830 <__assert_fail@plt+0x26c>
   11820:	add	r1, r0, #1
   11824:	add	r6, r6, #1
   11828:	str	r1, [r9, #12]
   1182c:	strb	sl, [r0]
   11830:	ldr	r5, [r4], #4
   11834:	mov	r0, r5
   11838:	bl	11474 <strlen@plt>
   1183c:	mov	r7, r0
   11840:	ldr	r0, [r9, #12]
   11844:	ldr	r1, [r9, #16]
   11848:	sub	r1, r1, r0
   1184c:	cmp	r1, r7
   11850:	bcs	11864 <__assert_fail@plt+0x2a0>
   11854:	mov	r0, r9
   11858:	mov	r1, r7
   1185c:	bl	14444 <_obstack_newchunk@@Base>
   11860:	ldr	r0, [r9, #12]
   11864:	mov	r1, r5
   11868:	mov	r2, r7
   1186c:	bl	11384 <memcpy@plt>
   11870:	ldr	r0, [r9, #12]
   11874:	cmp	r6, #0
   11878:	add	r0, r0, r7
   1187c:	str	r0, [r9, #12]
   11880:	beq	118a4 <__assert_fail@plt+0x2e0>
   11884:	ldr	r1, [r9, #16]
   11888:	cmp	r1, r0
   1188c:	bne	11820 <__assert_fail@plt+0x25c>
   11890:	mov	r0, r9
   11894:	mov	r1, #1
   11898:	bl	14444 <_obstack_newchunk@@Base>
   1189c:	ldr	r0, [r9, #12]
   118a0:	b	11820 <__assert_fail@plt+0x25c>
   118a4:	ldr	r0, [r9, #12]
   118a8:	ldr	r1, [r9, #16]
   118ac:	cmp	r1, r0
   118b0:	bne	118c4 <__assert_fail@plt+0x300>
   118b4:	mov	r0, r9
   118b8:	mov	r1, #1
   118bc:	bl	14444 <_obstack_newchunk@@Base>
   118c0:	ldr	r0, [r9, #12]
   118c4:	add	r1, r0, #1
   118c8:	str	r1, [r9, #12]
   118cc:	mov	r1, #0
   118d0:	strb	r1, [r0]
   118d4:	ldr	r5, [r9, #8]
   118d8:	ldr	r0, [r9, #12]
   118dc:	cmp	r0, r5
   118e0:	ldrbeq	r1, [r9, #40]	; 0x28
   118e4:	orreq	r1, r1, #2
   118e8:	strbeq	r1, [r9, #40]	; 0x28
   118ec:	ldr	r3, [r9, #24]
   118f0:	ldr	r1, [r9, #4]
   118f4:	ldr	r2, [r9, #16]
   118f8:	add	r0, r3, r0
   118fc:	bic	r0, r0, r3
   11900:	sub	r3, r0, r1
   11904:	sub	r1, r2, r1
   11908:	cmp	r3, r1
   1190c:	movhi	r0, r2
   11910:	str	r0, [r9, #8]
   11914:	str	r0, [r9, #12]
   11918:	movw	r0, #2248	; 0x8c8
   1191c:	movt	r0, #3
   11920:	ldr	r0, [r0]
   11924:	cmp	r0, #0
   11928:	bne	11b24 <__assert_fail@plt+0x560>
   1192c:	movw	r0, #53620	; 0xd174
   11930:	movt	r0, #2
   11934:	ldr	r4, [r0]
   11938:	cmp	r4, #0
   1193c:	beq	11a5c <__assert_fail@plt+0x498>
   11940:	sub	r6, r5, #1
   11944:	mov	r7, #0
   11948:	mov	r0, r6
   1194c:	mov	r8, r0
   11950:	ldrb	r1, [r0, #1]!
   11954:	cmp	r1, #0
   11958:	bne	1194c <__assert_fail@plt+0x388>
   1195c:	sub	r0, r4, #1
   11960:	mov	r1, #1
   11964:	ldrb	r2, [r0, #1]!
   11968:	mov	r9, r1
   1196c:	add	r1, r1, #1
   11970:	cmp	r2, #0
   11974:	bne	11964 <__assert_fail@plt+0x3a0>
   11978:	sub	sl, r4, #2
   1197c:	add	r0, sl, r9
   11980:	cmp	r0, r4
   11984:	cmpcs	r8, r5
   11988:	bcc	119bc <__assert_fail@plt+0x3f8>
   1198c:	bl	11444 <__ctype_tolower_loc@plt>
   11990:	ldrb	r2, [r8]
   11994:	ldr	r0, [r0]
   11998:	ldrb	r1, [sl, r9]
   1199c:	ldr	r0, [r0, r2, lsl #2]
   119a0:	cmp	r0, r1
   119a4:	bne	119bc <__assert_fail@plt+0x3f8>
   119a8:	sub	r9, r9, #1
   119ac:	sub	r8, r8, #1
   119b0:	cmp	r9, #1
   119b4:	bne	1197c <__assert_fail@plt+0x3b8>
   119b8:	b	119d8 <__assert_fail@plt+0x414>
   119bc:	movw	r0, #53620	; 0xd174
   119c0:	add	r7, r7, #1
   119c4:	movt	r0, #2
   119c8:	ldr	r4, [r0, r7, lsl #2]
   119cc:	cmp	r4, #0
   119d0:	bne	11948 <__assert_fail@plt+0x384>
   119d4:	b	11a5c <__assert_fail@plt+0x498>
   119d8:	movw	r0, #2244	; 0x8c4
   119dc:	movt	r0, #3
   119e0:	ldr	r0, [r0]
   119e4:	cmp	r0, #0
   119e8:	beq	119f8 <__assert_fail@plt+0x434>
   119ec:	movw	r0, #45808	; 0xb2f0
   119f0:	movt	r0, #1
   119f4:	bl	11414 <puts@plt>
   119f8:	movw	r0, #45842	; 0xb312
   119fc:	mov	r1, #0
   11a00:	movt	r0, #1
   11a04:	bl	11cc0 <__assert_fail@plt+0x6fc>
   11a08:	movw	r4, #2360	; 0x938
   11a0c:	mov	r1, r5
   11a10:	movt	r4, #3
   11a14:	str	r0, [r4]
   11a18:	bl	11de0 <__assert_fail@plt+0x81c>
   11a1c:	movw	r6, #2248	; 0x8c8
   11a20:	movt	r6, #3
   11a24:	str	r0, [r6]
   11a28:	ldr	r0, [r4]
   11a2c:	bl	115ac <close@plt>
   11a30:	ldr	r1, [r6]
   11a34:	cmp	r1, #0
   11a38:	bne	11a44 <__assert_fail@plt+0x480>
   11a3c:	mov	r0, #0
   11a40:	bl	11468 <exit@plt>
   11a44:	movw	r0, #45861	; 0xb325
   11a48:	movt	r0, #1
   11a4c:	bl	11324 <printf@plt>
   11a50:	ldr	r0, [r6]
   11a54:	cmp	r0, #0
   11a58:	bne	11b24 <__assert_fail@plt+0x560>
   11a5c:	mov	r0, r5
   11a60:	bl	11f8c <__assert_fail@plt+0x9c8>
   11a64:	movw	r4, #2248	; 0x8c8
   11a68:	mov	r1, r0
   11a6c:	movt	r4, #3
   11a70:	str	r0, [r4]
   11a74:	ldrb	r0, [r0]
   11a78:	cmp	r0, #3
   11a7c:	bhi	11b04 <__assert_fail@plt+0x540>
   11a80:	add	r2, pc, #0
   11a84:	ldr	pc, [r2, r0, lsl #2]
   11a88:	muleq	r1, r8, sl
   11a8c:	ldrdeq	r1, [r1], -r8
   11a90:	andeq	r1, r1, r8, ror #21
   11a94:	strdeq	r1, [r1], -r0
   11a98:	movw	r0, #45895	; 0xb347
   11a9c:	movt	r0, #1
   11aa0:	bl	11408 <getenv@plt>
   11aa4:	movw	r1, #45842	; 0xb312
   11aa8:	cmp	r0, #0
   11aac:	movt	r1, #1
   11ab0:	movne	r1, r0
   11ab4:	movw	r0, #2244	; 0x8c4
   11ab8:	movt	r0, #3
   11abc:	str	r1, [r4]
   11ac0:	ldr	r0, [r0]
   11ac4:	cmp	r0, #0
   11ac8:	beq	11b24 <__assert_fail@plt+0x560>
   11acc:	movw	r0, #45908	; 0xb354
   11ad0:	movt	r0, #1
   11ad4:	b	11b20 <__assert_fail@plt+0x55c>
   11ad8:	movw	r0, #45934	; 0xb36e
   11adc:	movt	r0, #1
   11ae0:	bl	11414 <puts@plt>
   11ae4:	ldr	r1, [r4]
   11ae8:	add	r0, r1, #1
   11aec:	b	11af8 <__assert_fail@plt+0x534>
   11af0:	movw	r0, #46005	; 0xb3b5
   11af4:	movt	r0, #1
   11af8:	bl	11414 <puts@plt>
   11afc:	mov	r0, #0
   11b00:	bl	11468 <exit@plt>
   11b04:	movw	r0, #2244	; 0x8c4
   11b08:	movt	r0, #3
   11b0c:	ldr	r0, [r0]
   11b10:	cmp	r0, #0
   11b14:	beq	11b24 <__assert_fail@plt+0x560>
   11b18:	movw	r0, #46035	; 0xb3d3
   11b1c:	movt	r0, #1
   11b20:	bl	11324 <printf@plt>
   11b24:	movw	r0, #46053	; 0xb3e5
   11b28:	movt	r0, #1
   11b2c:	bl	11408 <getenv@plt>
   11b30:	cmp	r0, #0
   11b34:	movw	r6, #2248	; 0x8c8
   11b38:	mov	r2, r5
   11b3c:	movwne	r0, #1504	; 0x5e0
   11b40:	movne	r1, #0
   11b44:	movt	r6, #3
   11b48:	movtne	r0, #3
   11b4c:	strne	r1, [r0]
   11b50:	ldr	r0, [r6]
   11b54:	ldr	r1, [sp, #8]
   11b58:	bl	12434 <__assert_fail@plt+0xe70>
   11b5c:	mov	r4, r0
   11b60:	movw	r0, #2244	; 0x8c4
   11b64:	movt	r0, #3
   11b68:	ldr	r0, [r0]
   11b6c:	cmp	r0, #0
   11b70:	beq	11b84 <__assert_fail@plt+0x5c0>
   11b74:	movw	r0, #46064	; 0xb3f0
   11b78:	mov	r1, r4
   11b7c:	movt	r0, #1
   11b80:	bl	11324 <printf@plt>
   11b84:	mov	r0, r4
   11b88:	bl	11474 <strlen@plt>
   11b8c:	movw	r5, #10088	; 0x2768
   11b90:	movw	r1, #2573	; 0xa0d
   11b94:	mov	r2, r4
   11b98:	strh	r1, [r2, r0]!
   11b9c:	mov	r0, #0
   11ba0:	movt	r5, #1
   11ba4:	strb	r0, [r2, #2]
   11ba8:	mov	r0, #15
   11bac:	mov	r1, r5
   11bb0:	bl	11390 <signal@plt>
   11bb4:	mov	r0, #2
   11bb8:	mov	r1, r5
   11bbc:	bl	11390 <signal@plt>
   11bc0:	movw	r1, #2252	; 0x8cc
   11bc4:	ldr	r0, [r6]
   11bc8:	movt	r1, #3
   11bcc:	ldr	r1, [r1]
   11bd0:	bl	11cc0 <__assert_fail@plt+0x6fc>
   11bd4:	movw	r5, #2360	; 0x938
   11bd8:	mov	r1, r4
   11bdc:	movt	r5, #3
   11be0:	str	r0, [r5]
   11be4:	bl	12794 <__assert_fail@plt+0x11d0>
   11be8:	ldr	r0, [r5]
   11bec:	bl	11f88 <__assert_fail@plt+0x9c4>
   11bf0:	mov	r0, #0
   11bf4:	bl	11468 <exit@plt>
   11bf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11bfc:	add	fp, sp, #28
   11c00:	sub	sp, sp, #4
   11c04:	ldr	r6, [r1]
   11c08:	cmp	r6, #0
   11c0c:	beq	11ca8 <__assert_fail@plt+0x6e4>
   11c10:	mov	r5, r0
   11c14:	sub	r0, r0, #1
   11c18:	mov	r9, r1
   11c1c:	mov	sl, #0
   11c20:	str	r0, [sp]
   11c24:	ldr	r0, [sp]
   11c28:	mov	r4, r0
   11c2c:	ldrb	r1, [r0, #1]!
   11c30:	cmp	r1, #0
   11c34:	bne	11c28 <__assert_fail@plt+0x664>
   11c38:	sub	r0, r6, #1
   11c3c:	mov	r1, #1
   11c40:	ldrb	r2, [r0, #1]!
   11c44:	mov	r7, r1
   11c48:	add	r1, r1, #1
   11c4c:	cmp	r2, #0
   11c50:	bne	11c40 <__assert_fail@plt+0x67c>
   11c54:	sub	r8, r6, #2
   11c58:	add	r0, r8, r7
   11c5c:	cmp	r0, r6
   11c60:	cmpcs	r4, r5
   11c64:	bcc	11c98 <__assert_fail@plt+0x6d4>
   11c68:	bl	11444 <__ctype_tolower_loc@plt>
   11c6c:	ldrb	r2, [r4]
   11c70:	ldr	r0, [r0]
   11c74:	ldrb	r1, [r8, r7]
   11c78:	ldr	r0, [r0, r2, lsl #2]
   11c7c:	cmp	r0, r1
   11c80:	bne	11c98 <__assert_fail@plt+0x6d4>
   11c84:	sub	r7, r7, #1
   11c88:	sub	r4, r4, #1
   11c8c:	cmp	r7, #1
   11c90:	bne	11c58 <__assert_fail@plt+0x694>
   11c94:	b	11cb4 <__assert_fail@plt+0x6f0>
   11c98:	add	sl, sl, #1
   11c9c:	ldr	r6, [r9, sl, lsl #2]
   11ca0:	cmp	r6, #0
   11ca4:	bne	11c24 <__assert_fail@plt+0x660>
   11ca8:	mov	r0, #0
   11cac:	sub	sp, fp, #28
   11cb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11cb4:	mov	r0, #1
   11cb8:	sub	sp, fp, #28
   11cbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11cc0:	push	{r4, r5, fp, lr}
   11cc4:	add	fp, sp, #8
   11cc8:	sub	sp, sp, #40	; 0x28
   11ccc:	add	r2, sp, #8
   11cd0:	mov	r4, r0
   11cd4:	vmov.i32	q8, #0	; 0x00000000
   11cd8:	mov	r5, r1
   11cdc:	movw	r1, #45486	; 0xb1ae
   11ce0:	add	r3, sp, #4
   11ce4:	mov	r0, r2
   11ce8:	movt	r1, #1
   11cec:	cmp	r5, #0
   11cf0:	vst1.64	{d16-d17}, [r0]!
   11cf4:	movne	r1, r5
   11cf8:	vst1.64	{d16-d17}, [r0]
   11cfc:	mov	r0, #1
   11d00:	str	r0, [sp, #16]
   11d04:	mov	r0, r4
   11d08:	bl	11564 <getaddrinfo@plt>
   11d0c:	cmp	r0, #0
   11d10:	beq	11d3c <__assert_fail@plt+0x778>
   11d14:	movw	r1, #46786	; 0xb6c2
   11d18:	cmp	r5, #0
   11d1c:	add	r2, sp, #8
   11d20:	add	r3, sp, #4
   11d24:	mov	r0, r4
   11d28:	movt	r1, #1
   11d2c:	movne	r1, r5
   11d30:	bl	11564 <getaddrinfo@plt>
   11d34:	cmp	r0, #0
   11d38:	bne	11dcc <__assert_fail@plt+0x808>
   11d3c:	ldr	r4, [sp, #4]
   11d40:	cmp	r4, #0
   11d44:	beq	11dc0 <__assert_fail@plt+0x7fc>
   11d48:	mov	r2, r4
   11d4c:	ldmib	r2, {r0, r1, r2}
   11d50:	bl	11570 <socket@plt>
   11d54:	mov	r5, r0
   11d58:	cmp	r0, #0
   11d5c:	blt	11d84 <__assert_fail@plt+0x7c0>
   11d60:	ldr	r0, [sp, #4]
   11d64:	ldr	r2, [r0, #16]
   11d68:	ldr	r1, [r0, #20]
   11d6c:	mov	r0, r5
   11d70:	bl	115b8 <connect@plt>
   11d74:	cmp	r0, #0
   11d78:	beq	11db4 <__assert_fail@plt+0x7f0>
   11d7c:	mov	r0, r5
   11d80:	bl	115ac <close@plt>
   11d84:	ldr	r0, [sp, #4]
   11d88:	ldr	r2, [r0, #28]
   11d8c:	cmp	r2, #0
   11d90:	str	r2, [sp, #4]
   11d94:	bne	11d4c <__assert_fail@plt+0x788>
   11d98:	cmp	r2, #0
   11d9c:	beq	11dc0 <__assert_fail@plt+0x7fc>
   11da0:	mov	r0, r4
   11da4:	bl	11558 <freeaddrinfo@plt>
   11da8:	mov	r0, r5
   11dac:	sub	sp, fp, #8
   11db0:	pop	{r4, r5, fp, pc}
   11db4:	ldr	r2, [sp, #4]
   11db8:	cmp	r2, #0
   11dbc:	bne	11da0 <__assert_fail@plt+0x7dc>
   11dc0:	movw	r0, #46810	; 0xb6da
   11dc4:	movt	r0, #1
   11dc8:	bl	12c6c <__assert_fail@plt+0x16a8>
   11dcc:	bl	11354 <gai_strerror@plt>
   11dd0:	mov	r1, r0
   11dd4:	movw	r0, #46794	; 0xb6ca
   11dd8:	movt	r0, #1
   11ddc:	bl	12cd0 <__assert_fail@plt+0x170c>
   11de0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11de4:	add	fp, sp, #28
   11de8:	sub	sp, sp, #108	; 0x6c
   11dec:	mov	r4, r0
   11df0:	mov	r0, r1
   11df4:	mov	r5, r1
   11df8:	bl	11474 <strlen@plt>
   11dfc:	add	r0, r0, #4
   11e00:	bl	14d30 <_obstack_memory_used@@Base+0x6c8>
   11e04:	mov	r1, #61	; 0x3d
   11e08:	mov	r6, r0
   11e0c:	strb	r1, [r0], #1
   11e10:	mov	r1, r5
   11e14:	bl	113f0 <strcpy@plt>
   11e18:	mov	r0, r6
   11e1c:	bl	11474 <strlen@plt>
   11e20:	movw	r1, #2573	; 0xa0d
   11e24:	mov	r2, r6
   11e28:	mov	r7, #0
   11e2c:	strh	r1, [r2, r0]!
   11e30:	movw	r1, #42583	; 0xa657
   11e34:	mov	r0, r4
   11e38:	movt	r1, #1
   11e3c:	strb	r7, [r2, #2]
   11e40:	bl	112dc <fdopen@plt>
   11e44:	mov	r5, r0
   11e48:	mov	r0, r6
   11e4c:	bl	11474 <strlen@plt>
   11e50:	mov	r2, r0
   11e54:	mov	r0, r4
   11e58:	mov	r1, r6
   11e5c:	str	r6, [sp, #4]
   11e60:	bl	114c8 <write@plt>
   11e64:	cmp	r0, #0
   11e68:	blt	11f70 <__assert_fail@plt+0x9ac>
   11e6c:	add	r6, sp, #8
   11e70:	mov	r1, #100	; 0x64
   11e74:	mov	r2, r5
   11e78:	mov	r0, r6
   11e7c:	bl	11360 <fgets@plt>
   11e80:	cmp	r0, #0
   11e84:	beq	11f4c <__assert_fail@plt+0x988>
   11e88:	movw	r9, #46769	; 0xb6b1
   11e8c:	movw	r8, #2236	; 0x8bc
   11e90:	add	r4, r6, #1
   11e94:	mov	r7, #0
   11e98:	movt	r9, #1
   11e9c:	movt	r8, #3
   11ea0:	mov	r0, r6
   11ea4:	mov	r1, r9
   11ea8:	mov	r2, #16
   11eac:	bl	11594 <strncmp@plt>
   11eb0:	cmp	r7, #0
   11eb4:	cmpeq	r0, #0
   11eb8:	bne	11f28 <__assert_fail@plt+0x964>
   11ebc:	mov	r1, r4
   11ec0:	mov	r2, r6
   11ec4:	mov	r0, r2
   11ec8:	ldrb	r3, [r2], #1
   11ecc:	mov	sl, r1
   11ed0:	add	r1, r1, #1
   11ed4:	cmp	r3, #58	; 0x3a
   11ed8:	bne	11ec4 <__assert_fail@plt+0x900>
   11edc:	ldrb	r1, [r0, #1]!
   11ee0:	add	sl, sl, #1
   11ee4:	cmp	r1, #32
   11ee8:	beq	11edc <__assert_fail@plt+0x918>
   11eec:	bl	11474 <strlen@plt>
   11ef0:	add	r0, r0, #1
   11ef4:	bl	14d30 <_obstack_memory_used@@Base+0x6c8>
   11ef8:	mov	r7, r0
   11efc:	mov	r0, #0
   11f00:	b	11f0c <__assert_fail@plt+0x948>
   11f04:	strb	r1, [r7, r0]
   11f08:	add	r0, r0, #1
   11f0c:	add	r1, sl, r0
   11f10:	ldrb	r1, [r1, #-1]
   11f14:	cmp	r1, #10
   11f18:	cmpne	r1, #13
   11f1c:	bne	11f04 <__assert_fail@plt+0x940>
   11f20:	mov	r1, #0
   11f24:	strb	r1, [r7, r0]
   11f28:	ldr	r1, [r8]
   11f2c:	mov	r0, r6
   11f30:	bl	11588 <fputs@plt>
   11f34:	mov	r0, r6
   11f38:	mov	r1, #100	; 0x64
   11f3c:	mov	r2, r5
   11f40:	bl	11360 <fgets@plt>
   11f44:	cmp	r0, #0
   11f48:	bne	11ea0 <__assert_fail@plt+0x8dc>
   11f4c:	mov	r0, r5
   11f50:	bl	1136c <ferror@plt>
   11f54:	cmp	r0, #0
   11f58:	bne	11f7c <__assert_fail@plt+0x9b8>
   11f5c:	ldr	r0, [sp, #4]
   11f60:	bl	14200 <argp_parse@@Base+0x12d0>
   11f64:	mov	r0, r7
   11f68:	sub	sp, fp, #28
   11f6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f70:	movw	r0, #46584	; 0xb5f8
   11f74:	movt	r0, #1
   11f78:	bl	12c6c <__assert_fail@plt+0x16a8>
   11f7c:	movw	r0, #46679	; 0xb657
   11f80:	movt	r0, #1
   11f84:	bl	12c6c <__assert_fail@plt+0x16a8>
   11f88:	b	115ac <close@plt>
   11f8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f90:	add	fp, sp, #28
   11f94:	sub	sp, sp, #28
   11f98:	ldrb	r6, [r0]
   11f9c:	movw	r4, #41196	; 0xa0ec
   11fa0:	movt	r4, #1
   11fa4:	cmp	r6, #0
   11fa8:	beq	11ffc <__assert_fail@plt+0xa38>
   11fac:	ldrb	r1, [r0, #1]
   11fb0:	cmp	r1, #32
   11fb4:	bne	11fdc <__assert_fail@plt+0xa18>
   11fb8:	mov	r5, r0
   11fbc:	ldrb	r6, [r5, #2]!
   11fc0:	cmp	r6, #0
   11fc4:	beq	11ffc <__assert_fail@plt+0xa38>
   11fc8:	ldrb	r0, [r0, #3]
   11fcc:	cmp	r0, #32
   11fd0:	mov	r0, r5
   11fd4:	beq	11fbc <__assert_fail@plt+0x9f8>
   11fd8:	b	11fe0 <__assert_fail@plt+0xa1c>
   11fdc:	mov	r5, r0
   11fe0:	mov	r0, r5
   11fe4:	mov	r1, #64	; 0x40
   11fe8:	bl	11480 <strchr@plt>
   11fec:	movw	r4, #42364	; 0xa57c
   11ff0:	cmp	r0, #0
   11ff4:	movt	r4, #1
   11ff8:	beq	12008 <__assert_fail@plt+0xa44>
   11ffc:	mov	r0, r4
   12000:	sub	sp, fp, #28
   12004:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12008:	movw	r1, #46088	; 0xb408
   1200c:	mov	r0, r5
   12010:	movt	r1, #1
   12014:	bl	1154c <strpbrk@plt>
   12018:	cmp	r0, #0
   1201c:	beq	120b8 <__assert_fail@plt+0xaf4>
   12020:	mov	r0, r5
   12024:	mov	r1, #58	; 0x3a
   12028:	bl	11480 <strchr@plt>
   1202c:	cmp	r0, #0
   12030:	beq	121bc <__assert_fail@plt+0xbf8>
   12034:	mov	r0, #0
   12038:	movw	r1, #46108	; 0xb41c
   1203c:	add	r2, sp, #24
   12040:	add	r3, sp, #20
   12044:	str	r0, [sp, #24]
   12048:	str	r0, [sp, #20]
   1204c:	movt	r1, #1
   12050:	mov	r0, r5
   12054:	bl	11510 <sscanf@plt>
   12058:	cmp	r0, #0
   1205c:	beq	12264 <__assert_fail@plt+0xca0>
   12060:	movw	r1, #64528	; 0xfc10
   12064:	movt	r1, #2
   12068:	ldr	r4, [r1, #8]
   1206c:	cmp	r4, #0
   12070:	beq	12270 <__assert_fail@plt+0xcac>
   12074:	ldr	r0, [sp, #24]
   12078:	ldrh	r2, [sp, #20]
   1207c:	orr	r0, r2, r0, lsl #16
   12080:	ldm	r1, {r2, r3}
   12084:	and	r3, r3, r0
   12088:	cmp	r3, r2
   1208c:	beq	11ffc <__assert_fail@plt+0xa38>
   12090:	add	r1, r1, #12
   12094:	ldr	r4, [r1, #8]
   12098:	cmp	r4, #0
   1209c:	beq	12270 <__assert_fail@plt+0xcac>
   120a0:	ldm	r1, {r2, r3}
   120a4:	add	r1, r1, #12
   120a8:	and	r3, r3, r0
   120ac:	cmp	r3, r2
   120b0:	bne	12094 <__assert_fail@plt+0xad0>
   120b4:	b	11ffc <__assert_fail@plt+0xa38>
   120b8:	cmp	r6, #0
   120bc:	mov	r4, r5
   120c0:	beq	120d4 <__assert_fail@plt+0xb10>
   120c4:	mov	r4, r5
   120c8:	ldrb	r0, [r4, #1]!
   120cc:	cmp	r0, #0
   120d0:	bne	120c8 <__assert_fail@plt+0xb04>
   120d4:	movw	r1, #42636	; 0xa68c
   120d8:	mov	r0, r5
   120dc:	mov	r2, #2
   120e0:	movt	r1, #1
   120e4:	bl	114a4 <strncasecmp@plt>
   120e8:	cmp	r0, #0
   120ec:	bne	12184 <__assert_fail@plt+0xbc0>
   120f0:	ldrb	r0, [r5, #2]!
   120f4:	cmp	r0, #32
   120f8:	subne	r0, r0, #48	; 0x30
   120fc:	uxtbne	r0, r0
   12100:	cmpne	r0, #9
   12104:	bhi	12184 <__assert_fail@plt+0xbc0>
   12108:	mov	r0, r5
   1210c:	mov	r1, #0
   12110:	mov	r2, #10
   12114:	bl	11318 <strtol@plt>
   12118:	mov	r5, r0
   1211c:	movw	r0, #5072	; 0x13d0
   12120:	movt	r0, #6
   12124:	cmp	r5, r0
   12128:	blt	12138 <__assert_fail@plt+0xb74>
   1212c:	movw	r0, #46418	; 0xb552
   12130:	movt	r0, #1
   12134:	bl	11414 <puts@plt>
   12138:	movw	r1, #64816	; 0xfd30
   1213c:	movw	r0, #42024	; 0xa428
   12140:	movt	r1, #2
   12144:	movt	r0, #1
   12148:	ldr	r4, [r1, #4]
   1214c:	cmp	r4, #0
   12150:	beq	1217c <__assert_fail@plt+0xbb8>
   12154:	add	r1, r1, #12
   12158:	ldrh	r2, [r1, #-12]
   1215c:	cmp	r5, r2
   12160:	blt	12170 <__assert_fail@plt+0xbac>
   12164:	ldrh	r2, [r1, #-10]
   12168:	cmp	r5, r2
   1216c:	ble	11ffc <__assert_fail@plt+0xa38>
   12170:	ldr	r4, [r1], #8
   12174:	cmp	r4, #0
   12178:	bne	12158 <__assert_fail@plt+0xb94>
   1217c:	mov	r4, r0
   12180:	b	11ffc <__assert_fail@plt+0xa38>
   12184:	movw	r1, #46105	; 0xb419
   12188:	sub	r0, r4, #2
   1218c:	mov	r2, #2
   12190:	movt	r1, #1
   12194:	bl	114a4 <strncasecmp@plt>
   12198:	movw	r2, #46092	; 0xb40c
   1219c:	movw	r1, #42364	; 0xa57c
   121a0:	cmp	r0, #0
   121a4:	movt	r2, #1
   121a8:	movt	r1, #1
   121ac:	moveq	r1, r2
   121b0:	mov	r0, r1
   121b4:	sub	sp, fp, #28
   121b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121bc:	add	r1, sp, #16
   121c0:	add	r0, sp, #12
   121c4:	add	r2, sp, #24
   121c8:	add	r3, sp, #20
   121cc:	str	r1, [sp]
   121d0:	movw	r1, #46846	; 0xb6fe
   121d4:	str	r0, [sp, #4]
   121d8:	mov	r0, r5
   121dc:	movt	r1, #1
   121e0:	bl	11510 <sscanf@plt>
   121e4:	mov	r1, #0
   121e8:	cmp	r0, #4
   121ec:	bne	12210 <__assert_fail@plt+0xc4c>
   121f0:	ldr	r0, [sp, #20]
   121f4:	ldr	r1, [sp, #24]
   121f8:	lsl	r0, r0, #16
   121fc:	add	r0, r0, r1, lsl #24
   12200:	ldr	r1, [sp, #16]
   12204:	add	r0, r0, r1, lsl #8
   12208:	ldr	r1, [sp, #12]
   1220c:	add	r1, r0, r1
   12210:	cmp	r1, #0
   12214:	beq	12298 <__assert_fail@plt+0xcd4>
   12218:	movw	r0, #53812	; 0xd234
   1221c:	movt	r0, #2
   12220:	ldr	r4, [r0, #8]
   12224:	cmp	r4, #0
   12228:	beq	12378 <__assert_fail@plt+0xdb4>
   1222c:	ldm	r0, {r2, r3}
   12230:	and	r3, r3, r1
   12234:	cmp	r3, r2
   12238:	beq	11ffc <__assert_fail@plt+0xa38>
   1223c:	add	r0, r0, #12
   12240:	ldr	r4, [r0, #8]
   12244:	cmp	r4, #0
   12248:	beq	12378 <__assert_fail@plt+0xdb4>
   1224c:	ldm	r0, {r2, r3}
   12250:	add	r0, r0, #12
   12254:	and	r3, r3, r1
   12258:	cmp	r3, r2
   1225c:	bne	12240 <__assert_fail@plt+0xc7c>
   12260:	b	11ffc <__assert_fail@plt+0xa38>
   12264:	movw	r4, #42364	; 0xa57c
   12268:	movt	r4, #1
   1226c:	b	11ffc <__assert_fail@plt+0xa38>
   12270:	movw	r0, #2244	; 0x8c4
   12274:	movw	r4, #42024	; 0xa428
   12278:	movt	r0, #3
   1227c:	movt	r4, #1
   12280:	ldr	r0, [r0]
   12284:	cmp	r0, #0
   12288:	beq	11ffc <__assert_fail@plt+0xa38>
   1228c:	movw	r0, #46115	; 0xb423
   12290:	movt	r0, #1
   12294:	b	1239c <__assert_fail@plt+0xdd8>
   12298:	movw	r0, #65040	; 0xfe10
   1229c:	movt	r0, #2
   122a0:	ldr	r7, [r0]
   122a4:	cmp	r7, #0
   122a8:	beq	12344 <__assert_fail@plt+0xd80>
   122ac:	sub	r0, r5, #1
   122b0:	mov	sl, #0
   122b4:	str	r0, [sp, #8]
   122b8:	ldr	r0, [sp, #8]
   122bc:	mov	r6, r0
   122c0:	ldrb	r1, [r0, #1]!
   122c4:	cmp	r1, #0
   122c8:	bne	122bc <__assert_fail@plt+0xcf8>
   122cc:	sub	r0, r7, #1
   122d0:	mov	r1, #1
   122d4:	ldrb	r2, [r0, #1]!
   122d8:	mov	r8, r1
   122dc:	add	r1, r1, #1
   122e0:	cmp	r2, #0
   122e4:	bne	122d4 <__assert_fail@plt+0xd10>
   122e8:	sub	r9, r7, #2
   122ec:	add	r0, r9, r8
   122f0:	cmp	r0, r7
   122f4:	cmpcs	r6, r5
   122f8:	bcc	1232c <__assert_fail@plt+0xd68>
   122fc:	bl	11444 <__ctype_tolower_loc@plt>
   12300:	ldrb	r2, [r6]
   12304:	ldr	r0, [r0]
   12308:	ldrb	r1, [r9, r8]
   1230c:	ldr	r0, [r0, r2, lsl #2]
   12310:	cmp	r0, r1
   12314:	bne	1232c <__assert_fail@plt+0xd68>
   12318:	sub	r8, r8, #1
   1231c:	sub	r6, r6, #1
   12320:	cmp	r8, #1
   12324:	bne	122ec <__assert_fail@plt+0xd28>
   12328:	b	123a4 <__assert_fail@plt+0xde0>
   1232c:	movw	r0, #65040	; 0xfe10
   12330:	add	sl, sl, #2
   12334:	movt	r0, #2
   12338:	ldr	r7, [r0, sl, lsl #2]
   1233c:	cmp	r7, #0
   12340:	bne	122b8 <__assert_fail@plt+0xcf4>
   12344:	mov	r0, r5
   12348:	mov	r1, #46	; 0x2e
   1234c:	bl	11480 <strchr@plt>
   12350:	cmp	r0, #0
   12354:	beq	123b8 <__assert_fail@plt+0xdf4>
   12358:	movw	r0, #2244	; 0x8c4
   1235c:	movt	r0, #3
   12360:	ldr	r0, [r0]
   12364:	cmp	r0, #0
   12368:	beq	11ffc <__assert_fail@plt+0xa38>
   1236c:	movw	r0, #46358	; 0xb516
   12370:	movt	r0, #1
   12374:	b	1239c <__assert_fail@plt+0xdd8>
   12378:	movw	r0, #2244	; 0x8c4
   1237c:	movw	r4, #42024	; 0xa428
   12380:	movt	r0, #3
   12384:	movt	r4, #1
   12388:	ldr	r0, [r0]
   1238c:	cmp	r0, #0
   12390:	beq	11ffc <__assert_fail@plt+0xa38>
   12394:	movw	r0, #46205	; 0xb47d
   12398:	movt	r0, #1
   1239c:	bl	11414 <puts@plt>
   123a0:	b	11ffc <__assert_fail@plt+0xa38>
   123a4:	movw	r1, #65040	; 0xfe10
   123a8:	orr	r0, sl, #1
   123ac:	movt	r1, #2
   123b0:	ldr	r4, [r1, r0, lsl #2]
   123b4:	b	11ffc <__assert_fail@plt+0xa38>
   123b8:	movw	r0, #53740	; 0xd1ec
   123bc:	movt	r0, #2
   123c0:	ldr	r4, [r0]
   123c4:	cmp	r4, #0
   123c8:	beq	12404 <__assert_fail@plt+0xe40>
   123cc:	add	r6, r0, #4
   123d0:	mov	r0, r4
   123d4:	bl	11474 <strlen@plt>
   123d8:	mov	r2, r0
   123dc:	mov	r0, r5
   123e0:	mov	r1, r4
   123e4:	bl	114a4 <strncasecmp@plt>
   123e8:	cmp	r0, #0
   123ec:	beq	1242c <__assert_fail@plt+0xe68>
   123f0:	ldr	r4, [r6, #4]
   123f4:	add	r0, r6, #8
   123f8:	mov	r6, r0
   123fc:	cmp	r4, #0
   12400:	bne	123d0 <__assert_fail@plt+0xe0c>
   12404:	movw	r0, #2244	; 0x8c4
   12408:	movw	r4, #42024	; 0xa428
   1240c:	movt	r0, #3
   12410:	movt	r4, #1
   12414:	ldr	r0, [r0]
   12418:	cmp	r0, #0
   1241c:	beq	11ffc <__assert_fail@plt+0xa38>
   12420:	movw	r0, #46291	; 0xb4d3
   12424:	movt	r0, #1
   12428:	b	1239c <__assert_fail@plt+0xdd8>
   1242c:	ldr	r4, [r6]
   12430:	b	11ffc <__assert_fail@plt+0xa38>
   12434:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12438:	add	fp, sp, #28
   1243c:	sub	sp, sp, #12
   12440:	mov	r6, r0
   12444:	mov	r0, r1
   12448:	mov	r8, r2
   1244c:	mov	r9, r1
   12450:	bl	11474 <strlen@plt>
   12454:	mov	r4, r0
   12458:	mov	r0, r8
   1245c:	bl	11474 <strlen@plt>
   12460:	add	r0, r4, r0
   12464:	add	r0, r0, #13
   12468:	bl	14d30 <_obstack_memory_used@@Base+0x6c8>
   1246c:	mov	sl, r0
   12470:	mov	r0, #0
   12474:	add	r1, sp, #4
   12478:	strb	r0, [sl]
   1247c:	mov	r0, r6
   12480:	bl	11300 <inet_aton@plt>
   12484:	movw	r4, #53528	; 0xd118
   12488:	movt	r4, #2
   1248c:	ldr	r7, [r4]
   12490:	cmp	r7, #0
   12494:	beq	12504 <__assert_fail@plt+0xf40>
   12498:	mov	r5, r0
   1249c:	mov	r0, r7
   124a0:	mov	r1, r6
   124a4:	bl	1130c <strcmp@plt>
   124a8:	cmp	r0, #0
   124ac:	beq	12598 <__assert_fail@plt+0xfd4>
   124b0:	cmp	r5, #0
   124b4:	beq	124f8 <__assert_fail@plt+0xf34>
   124b8:	mov	r0, r7
   124bc:	bl	1157c <gethostbyname@plt>
   124c0:	cmp	r0, #0
   124c4:	beq	124f8 <__assert_fail@plt+0xf34>
   124c8:	ldr	r0, [r0, #16]
   124cc:	ldr	r2, [r0]
   124d0:	cmp	r2, #0
   124d4:	beq	124f8 <__assert_fail@plt+0xf34>
   124d8:	ldr	r1, [sp, #4]
   124dc:	add	r0, r0, #4
   124e0:	ldr	r2, [r2]
   124e4:	cmp	r2, r1
   124e8:	beq	12598 <__assert_fail@plt+0xfd4>
   124ec:	ldr	r2, [r0], #4
   124f0:	cmp	r2, #0
   124f4:	bne	124e0 <__assert_fail@plt+0xf1c>
   124f8:	ldr	r7, [r4, #4]!
   124fc:	cmp	r7, #0
   12500:	bne	1249c <__assert_fail@plt+0xed8>
   12504:	add	r1, sp, #8
   12508:	mov	r0, r6
   1250c:	bl	11300 <inet_aton@plt>
   12510:	movw	r4, #53588	; 0xd154
   12514:	movt	r4, #2
   12518:	ldr	r7, [r4]
   1251c:	cmp	r7, #0
   12520:	beq	12590 <__assert_fail@plt+0xfcc>
   12524:	mov	r5, r0
   12528:	mov	r0, r7
   1252c:	mov	r1, r6
   12530:	bl	1130c <strcmp@plt>
   12534:	cmp	r0, #0
   12538:	beq	12598 <__assert_fail@plt+0xfd4>
   1253c:	cmp	r5, #0
   12540:	beq	12584 <__assert_fail@plt+0xfc0>
   12544:	mov	r0, r7
   12548:	bl	1157c <gethostbyname@plt>
   1254c:	cmp	r0, #0
   12550:	beq	12584 <__assert_fail@plt+0xfc0>
   12554:	ldr	r0, [r0, #16]
   12558:	ldr	r2, [r0]
   1255c:	cmp	r2, #0
   12560:	beq	12584 <__assert_fail@plt+0xfc0>
   12564:	ldr	r1, [sp, #8]
   12568:	add	r0, r0, #4
   1256c:	ldr	r2, [r2]
   12570:	cmp	r2, r1
   12574:	beq	12598 <__assert_fail@plt+0xfd4>
   12578:	ldr	r2, [r0], #4
   1257c:	cmp	r2, #0
   12580:	bne	1256c <__assert_fail@plt+0xfa8>
   12584:	ldr	r7, [r4, #4]!
   12588:	cmp	r7, #0
   1258c:	bne	12528 <__assert_fail@plt+0xf64>
   12590:	mov	r0, #0
   12594:	b	125c0 <__assert_fail@plt+0xffc>
   12598:	mov	r0, sl
   1259c:	bl	11474 <strlen@plt>
   125a0:	movw	r1, #47736	; 0xba78
   125a4:	add	r0, sl, r0
   125a8:	movt	r1, #1
   125ac:	vldr	d16, [r1]
   125b0:	mov	r1, #0
   125b4:	strb	r1, [r0, #8]
   125b8:	vst1.8	{d16}, [r0]
   125bc:	mov	r0, #1
   125c0:	ldrb	r1, [r9]
   125c4:	cmp	r1, #0
   125c8:	beq	125e4 <__assert_fail@plt+0x1020>
   125cc:	cmp	r0, #0
   125d0:	beq	125f0 <__assert_fail@plt+0x102c>
   125d4:	mov	r0, sl
   125d8:	mov	r1, r9
   125dc:	bl	113e4 <strcat@plt>
   125e0:	b	126f4 <__assert_fail@plt+0x1130>
   125e4:	cmp	r0, #0
   125e8:	beq	12624 <__assert_fail@plt+0x1060>
   125ec:	b	126f4 <__assert_fail@plt+0x1130>
   125f0:	movw	r1, #42067	; 0xa453
   125f4:	mov	r0, r6
   125f8:	movt	r1, #1
   125fc:	bl	1130c <strcmp@plt>
   12600:	cmp	r0, #0
   12604:	beq	12618 <__assert_fail@plt+0x1054>
   12608:	movw	r0, #46466	; 0xb582
   1260c:	movt	r0, #1
   12610:	bl	11414 <puts@plt>
   12614:	b	12624 <__assert_fail@plt+0x1060>
   12618:	mov	r0, sl
   1261c:	mov	r1, r9
   12620:	bl	113e4 <strcat@plt>
   12624:	movw	r1, #42024	; 0xa428
   12628:	mov	r0, r6
   1262c:	movt	r1, #1
   12630:	bl	1130c <strcmp@plt>
   12634:	cmp	r0, #0
   12638:	beq	12654 <__assert_fail@plt+0x1090>
   1263c:	movw	r1, #42332	; 0xa55c
   12640:	mov	r0, r6
   12644:	movt	r1, #1
   12648:	bl	1130c <strcmp@plt>
   1264c:	cmp	r0, #0
   12650:	bne	12698 <__assert_fail@plt+0x10d4>
   12654:	movw	r1, #46520	; 0xb5b8
   12658:	mov	r0, r8
   1265c:	mov	r2, #2
   12660:	movt	r1, #1
   12664:	bl	114a4 <strncasecmp@plt>
   12668:	cmp	r0, #0
   1266c:	bne	12698 <__assert_fail@plt+0x10d4>
   12670:	mov	r2, r8
   12674:	ldrb	r0, [r2, #2]!
   12678:	sub	r0, r0, #48	; 0x30
   1267c:	uxtb	r0, r0
   12680:	cmp	r0, #9
   12684:	bhi	12698 <__assert_fail@plt+0x10d4>
   12688:	movw	r1, #46523	; 0xb5bb
   1268c:	mov	r0, sl
   12690:	movt	r1, #1
   12694:	b	12758 <__assert_fail@plt+0x1194>
   12698:	movw	r1, #42067	; 0xa453
   1269c:	mov	r0, r6
   126a0:	movt	r1, #1
   126a4:	bl	1130c <strcmp@plt>
   126a8:	cmp	r0, #0
   126ac:	beq	12704 <__assert_fail@plt+0x1140>
   126b0:	movw	r1, #46541	; 0xb5cd
   126b4:	mov	r0, r6
   126b8:	movt	r1, #1
   126bc:	bl	1130c <strcmp@plt>
   126c0:	cmp	r0, #0
   126c4:	bne	126dc <__assert_fail@plt+0x1118>
   126c8:	mov	r0, r8
   126cc:	mov	r1, #32
   126d0:	bl	11480 <strchr@plt>
   126d4:	cmp	r0, #0
   126d8:	beq	12748 <__assert_fail@plt+0x1184>
   126dc:	movw	r1, #46092	; 0xb40c
   126e0:	mov	r0, r6
   126e4:	movt	r1, #1
   126e8:	bl	1130c <strcmp@plt>
   126ec:	cmp	r0, #0
   126f0:	beq	12710 <__assert_fail@plt+0x114c>
   126f4:	mov	r0, sl
   126f8:	mov	r1, r8
   126fc:	bl	113e4 <strcat@plt>
   12700:	b	1275c <__assert_fail@plt+0x1198>
   12704:	movw	r1, #46528	; 0xb5c0
   12708:	movt	r1, #1
   1270c:	b	12750 <__assert_fail@plt+0x118c>
   12710:	movw	r0, #46571	; 0xb5eb
   12714:	movt	r0, #1
   12718:	bl	11408 <getenv@plt>
   1271c:	cmp	r0, #0
   12720:	beq	1273c <__assert_fail@plt+0x1178>
   12724:	movw	r1, #46576	; 0xb5f0
   12728:	mov	r2, #2
   1272c:	movt	r1, #1
   12730:	bl	11594 <strncmp@plt>
   12734:	cmp	r0, #0
   12738:	beq	126f4 <__assert_fail@plt+0x1130>
   1273c:	movw	r1, #46579	; 0xb5f3
   12740:	movt	r1, #1
   12744:	b	12750 <__assert_fail@plt+0x118c>
   12748:	movw	r1, #46561	; 0xb5e1
   1274c:	movt	r1, #1
   12750:	mov	r0, sl
   12754:	mov	r2, r8
   12758:	bl	1151c <sprintf@plt>
   1275c:	mov	r0, sl
   12760:	sub	sp, fp, #28
   12764:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12768:	push	{fp, lr}
   1276c:	mov	fp, sp
   12770:	mov	r4, r0
   12774:	movw	r0, #2360	; 0x938
   12778:	movt	r0, #3
   1277c:	ldr	r0, [r0]
   12780:	bl	11f88 <__assert_fail@plt+0x9c4>
   12784:	movw	r0, #46818	; 0xb6e2
   12788:	mov	r1, r4
   1278c:	movt	r0, #1
   12790:	bl	12cd0 <__assert_fail@plt+0x170c>
   12794:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12798:	add	fp, sp, #28
   1279c:	sub	sp, sp, #484	; 0x1e4
   127a0:	sub	sp, sp, #1024	; 0x400
   127a4:	mov	r6, r0
   127a8:	movw	r0, #1504	; 0x5e0
   127ac:	mov	r5, r1
   127b0:	movw	r1, #42583	; 0xa657
   127b4:	movt	r0, #3
   127b8:	movt	r1, #1
   127bc:	ldr	r7, [r0]
   127c0:	mov	r0, r6
   127c4:	bl	112dc <fdopen@plt>
   127c8:	mov	r8, r0
   127cc:	mov	r0, r5
   127d0:	bl	11474 <strlen@plt>
   127d4:	mov	r2, r0
   127d8:	mov	r0, r6
   127dc:	mov	r1, r5
   127e0:	bl	114c8 <write@plt>
   127e4:	cmp	r0, #0
   127e8:	blt	12a30 <__assert_fail@plt+0x146c>
   127ec:	sub	r5, fp, #232	; 0xe8
   127f0:	mov	r1, #200	; 0xc8
   127f4:	mov	r2, r8
   127f8:	mov	r0, r5
   127fc:	bl	11360 <fgets@plt>
   12800:	cmp	r0, #0
   12804:	beq	12a08 <__assert_fail@plt+0x1444>
   12808:	mov	sl, #0
   1280c:	mov	r9, #0
   12810:	b	12820 <__assert_fail@plt+0x125c>
   12814:	mov	r7, #1
   12818:	mov	sl, #0
   1281c:	b	129e0 <__assert_fail@plt+0x141c>
   12820:	add	r4, r9, #1
   12824:	cmp	r7, #1
   12828:	bne	1287c <__assert_fail@plt+0x12b8>
   1282c:	movw	r0, #53636	; 0xd184
   12830:	movt	r0, #2
   12834:	ldr	r6, [r0, r4, lsl #2]
   12838:	mov	r0, r6
   1283c:	bl	11474 <strlen@plt>
   12840:	mov	r2, r0
   12844:	mov	r0, r5
   12848:	mov	r1, r6
   1284c:	bl	11594 <strncmp@plt>
   12850:	mov	r6, r0
   12854:	cmp	r0, #0
   12858:	mov	r7, r0
   1285c:	mov	r0, r5
   12860:	mov	r1, #200	; 0xc8
   12864:	mov	r2, r8
   12868:	movwne	r7, #1
   1286c:	bl	11360 <fgets@plt>
   12870:	cmp	r0, #0
   12874:	bne	12824 <__assert_fail@plt+0x1260>
   12878:	b	129fc <__assert_fail@plt+0x1438>
   1287c:	cmp	r7, #0
   12880:	bne	128ec <__assert_fail@plt+0x1328>
   12884:	movw	r0, #53636	; 0xd184
   12888:	add	r4, sp, #8
   1288c:	sub	r6, fp, #488	; 0x1e8
   12890:	mov	r9, #0
   12894:	movt	r0, #2
   12898:	ldr	sl, [r0]
   1289c:	cmp	sl, #0
   128a0:	beq	128e0 <__assert_fail@plt+0x131c>
   128a4:	mov	r0, sl
   128a8:	bl	11474 <strlen@plt>
   128ac:	mov	r2, r0
   128b0:	mov	r0, r5
   128b4:	mov	r1, sl
   128b8:	bl	11594 <strncmp@plt>
   128bc:	cmp	r0, #0
   128c0:	beq	12814 <__assert_fail@plt+0x1250>
   128c4:	movw	r0, #53636	; 0xd184
   128c8:	movt	r0, #2
   128cc:	add	r0, r0, r9, lsl #2
   128d0:	add	r9, r9, #2
   128d4:	ldr	sl, [r0, #8]
   128d8:	cmp	sl, #0
   128dc:	bne	128a4 <__assert_fail@plt+0x12e0>
   128e0:	mov	r7, #0
   128e4:	mov	sl, #0
   128e8:	b	128f4 <__assert_fail@plt+0x1330>
   128ec:	add	r4, sp, #8
   128f0:	sub	r6, fp, #488	; 0x1e8
   128f4:	movw	r1, #46590	; 0xb5fe
   128f8:	mov	r0, r5
   128fc:	mov	r2, #10
   12900:	movt	r1, #1
   12904:	bl	11594 <strncmp@plt>
   12908:	cmp	r0, #0
   1290c:	bne	12998 <__assert_fail@plt+0x13d4>
   12910:	movw	r1, #46601	; 0xb609
   12914:	mov	r0, r5
   12918:	mov	r2, r6
   1291c:	sub	r3, fp, #504	; 0x1f8
   12920:	str	r4, [sp]
   12924:	movt	r1, #1
   12928:	bl	11510 <sscanf@plt>
   1292c:	cmp	r0, #3
   12930:	bne	12998 <__assert_fail@plt+0x13d4>
   12934:	movw	r0, #2244	; 0x8c4
   12938:	movt	r0, #3
   1293c:	ldr	r0, [r0]
   12940:	cmp	r0, #0
   12944:	beq	1295c <__assert_fail@plt+0x1398>
   12948:	movw	r0, #46647	; 0xb637
   1294c:	mov	r1, r4
   12950:	mov	r2, r6
   12954:	movt	r0, #1
   12958:	bl	11324 <printf@plt>
   1295c:	mov	r0, r4
   12960:	bl	11474 <strlen@plt>
   12964:	add	r0, r4, r0
   12968:	movw	r1, #2573	; 0xa0d
   1296c:	strh	r1, [r0]
   12970:	strb	sl, [r0, #2]
   12974:	mov	r0, r6
   12978:	sub	r1, fp, #504	; 0x1f8
   1297c:	bl	11cc0 <__assert_fail@plt+0x6fc>
   12980:	mov	r1, r4
   12984:	mov	r6, r0
   12988:	bl	12794 <__assert_fail@plt+0x11d0>
   1298c:	mov	r0, r6
   12990:	bl	115ac <close@plt>
   12994:	b	129e0 <__assert_fail@plt+0x141c>
   12998:	mov	r0, r5
   1299c:	mov	r2, #1
   129a0:	movw	r3, #9217	; 0x2401
   129a4:	b	129ac <__assert_fail@plt+0x13e8>
   129a8:	add	r0, r0, #1
   129ac:	ldrb	r1, [r0]
   129b0:	cmp	r1, #13
   129b4:	bhi	129a8 <__assert_fail@plt+0x13e4>
   129b8:	tst	r3, r2, lsl r1
   129bc:	beq	129a8 <__assert_fail@plt+0x13e4>
   129c0:	strb	sl, [r0]
   129c4:	movw	r0, #2236	; 0x8bc
   129c8:	movw	r1, #48404	; 0xbd14
   129cc:	mov	r2, r5
   129d0:	movt	r0, #3
   129d4:	movt	r1, #1
   129d8:	ldr	r0, [r0]
   129dc:	bl	1148c <fprintf@plt>
   129e0:	mov	r0, r5
   129e4:	mov	r1, #200	; 0xc8
   129e8:	mov	r2, r8
   129ec:	bl	11360 <fgets@plt>
   129f0:	cmp	r0, #0
   129f4:	bne	12820 <__assert_fail@plt+0x125c>
   129f8:	b	12a08 <__assert_fail@plt+0x1444>
   129fc:	cmp	r6, #0
   12a00:	movwne	r6, #1
   12a04:	mov	r7, r6
   12a08:	mov	r0, r8
   12a0c:	bl	1136c <ferror@plt>
   12a10:	cmp	r0, #0
   12a14:	bne	12a3c <__assert_fail@plt+0x1478>
   12a18:	cmp	r7, #1
   12a1c:	subne	sp, fp, #28
   12a20:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a24:	movw	r0, #46685	; 0xb65d
   12a28:	movt	r0, #1
   12a2c:	bl	12cd0 <__assert_fail@plt+0x170c>
   12a30:	movw	r0, #46584	; 0xb5f8
   12a34:	movt	r0, #1
   12a38:	bl	12c6c <__assert_fail@plt+0x16a8>
   12a3c:	movw	r0, #46679	; 0xb657
   12a40:	movt	r0, #1
   12a44:	bl	12c6c <__assert_fail@plt+0x16a8>
   12a48:	push	{r4, r5, fp, lr}
   12a4c:	add	fp, sp, #8
   12a50:	mov	r4, r0
   12a54:	movw	r0, #5072	; 0x13d0
   12a58:	mov	r5, r1
   12a5c:	movt	r0, #6
   12a60:	cmp	r4, r0
   12a64:	blt	12a74 <__assert_fail@plt+0x14b0>
   12a68:	movw	r0, #46418	; 0xb552
   12a6c:	movt	r0, #1
   12a70:	bl	11414 <puts@plt>
   12a74:	ldr	r0, [r5, #4]
   12a78:	movw	r1, #42024	; 0xa428
   12a7c:	movt	r1, #1
   12a80:	cmp	r0, #0
   12a84:	beq	12ab0 <__assert_fail@plt+0x14ec>
   12a88:	add	r2, r5, #12
   12a8c:	ldrh	r3, [r2, #-12]
   12a90:	cmp	r3, r4
   12a94:	bgt	12aa4 <__assert_fail@plt+0x14e0>
   12a98:	ldrh	r3, [r2, #-10]
   12a9c:	cmp	r3, r4
   12aa0:	popge	{r4, r5, fp, pc}
   12aa4:	ldr	r0, [r2], #8
   12aa8:	cmp	r0, #0
   12aac:	bne	12a8c <__assert_fail@plt+0x14c8>
   12ab0:	mov	r0, r1
   12ab4:	pop	{r4, r5, fp, pc}
   12ab8:	push	{r4, sl, fp, lr}
   12abc:	add	fp, sp, #8
   12ac0:	sub	sp, sp, #24
   12ac4:	mov	r4, #0
   12ac8:	cmp	r0, #0
   12acc:	beq	12b1c <__assert_fail@plt+0x1558>
   12ad0:	add	r1, sp, #8
   12ad4:	add	r2, sp, #12
   12ad8:	add	r3, sp, #16
   12adc:	str	r1, [sp, #4]
   12ae0:	movw	r1, #46846	; 0xb6fe
   12ae4:	str	r2, [sp]
   12ae8:	sub	r2, fp, #12
   12aec:	movt	r1, #1
   12af0:	bl	11510 <sscanf@plt>
   12af4:	cmp	r0, #4
   12af8:	bne	12b1c <__assert_fail@plt+0x1558>
   12afc:	ldr	r0, [sp, #16]
   12b00:	ldr	r1, [fp, #-12]
   12b04:	lsl	r0, r0, #16
   12b08:	add	r0, r0, r1, lsl #24
   12b0c:	ldr	r1, [sp, #12]
   12b10:	add	r0, r0, r1, lsl #8
   12b14:	ldr	r1, [sp, #8]
   12b18:	add	r4, r0, r1
   12b1c:	mov	r0, r4
   12b20:	sub	sp, fp, #8
   12b24:	pop	{r4, sl, fp, pc}
   12b28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b2c:	add	fp, sp, #28
   12b30:	sub	sp, sp, #4
   12b34:	mov	r9, r1
   12b38:	mov	r8, r0
   12b3c:	mov	r7, r0
   12b40:	ldrb	r0, [r7], #1
   12b44:	cmp	r0, #0
   12b48:	bne	12b40 <__assert_fail@plt+0x157c>
   12b4c:	mov	r0, #0
   12b50:	mov	r4, r9
   12b54:	ldrb	r1, [r4], #1
   12b58:	mov	r5, r0
   12b5c:	sub	r0, r0, #1
   12b60:	cmp	r1, #0
   12b64:	bne	12b54 <__assert_fail@plt+0x1590>
   12b68:	mvn	r6, #1
   12b6c:	mov	sl, #0
   12b70:	add	r0, r4, r6
   12b74:	cmp	r0, r9
   12b78:	addcs	r0, r7, r6
   12b7c:	cmpcs	r0, r8
   12b80:	bcc	12bb0 <__assert_fail@plt+0x15ec>
   12b84:	bl	11444 <__ctype_tolower_loc@plt>
   12b88:	ldrb	r2, [r7, r6]
   12b8c:	ldr	r0, [r0]
   12b90:	ldrb	r1, [r4, r6]
   12b94:	ldr	r0, [r0, r2, lsl #2]
   12b98:	cmp	r0, r1
   12b9c:	bne	12bb0 <__assert_fail@plt+0x15ec>
   12ba0:	adds	r5, r5, #1
   12ba4:	sub	r6, r6, #1
   12ba8:	bne	12b70 <__assert_fail@plt+0x15ac>
   12bac:	mov	sl, #1
   12bb0:	mov	r0, sl
   12bb4:	sub	sp, fp, #28
   12bb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12bbc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12bc0:	add	fp, sp, #24
   12bc4:	sub	sp, sp, #8
   12bc8:	mov	r5, r1
   12bcc:	mov	r6, r0
   12bd0:	add	r1, sp, #4
   12bd4:	mov	r0, r5
   12bd8:	bl	11300 <inet_aton@plt>
   12bdc:	ldr	r4, [r6]
   12be0:	mov	r8, #0
   12be4:	cmp	r4, #0
   12be8:	beq	12c60 <__assert_fail@plt+0x169c>
   12bec:	mov	r7, r0
   12bf0:	mov	r0, r4
   12bf4:	mov	r1, r5
   12bf8:	bl	1130c <strcmp@plt>
   12bfc:	cmp	r0, #0
   12c00:	beq	12c5c <__assert_fail@plt+0x1698>
   12c04:	cmp	r7, #0
   12c08:	beq	12c4c <__assert_fail@plt+0x1688>
   12c0c:	mov	r0, r4
   12c10:	bl	1157c <gethostbyname@plt>
   12c14:	cmp	r0, #0
   12c18:	beq	12c4c <__assert_fail@plt+0x1688>
   12c1c:	ldr	r0, [r0, #16]
   12c20:	ldr	r1, [r0]
   12c24:	cmp	r1, #0
   12c28:	beq	12c4c <__assert_fail@plt+0x1688>
   12c2c:	ldr	r2, [sp, #4]
   12c30:	add	r0, r0, #4
   12c34:	ldr	r1, [r1]
   12c38:	cmp	r1, r2
   12c3c:	beq	12c5c <__assert_fail@plt+0x1698>
   12c40:	ldr	r1, [r0], #4
   12c44:	cmp	r1, #0
   12c48:	bne	12c34 <__assert_fail@plt+0x1670>
   12c4c:	ldr	r4, [r6, #4]!
   12c50:	cmp	r4, #0
   12c54:	bne	12bf0 <__assert_fail@plt+0x162c>
   12c58:	b	12c60 <__assert_fail@plt+0x169c>
   12c5c:	mov	r8, #1
   12c60:	mov	r0, r8
   12c64:	sub	sp, fp, #24
   12c68:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12c6c:	sub	sp, sp, #12
   12c70:	push	{fp, lr}
   12c74:	mov	fp, sp
   12c78:	sub	sp, sp, #4
   12c7c:	movw	r4, #2232	; 0x8b8
   12c80:	mov	ip, r0
   12c84:	add	r0, fp, #8
   12c88:	stm	r0, {r1, r2, r3}
   12c8c:	movt	r4, #3
   12c90:	add	r2, fp, #8
   12c94:	mov	r1, ip
   12c98:	ldr	r0, [r4]
   12c9c:	str	r2, [sp]
   12ca0:	bl	114f8 <vfprintf@plt>
   12ca4:	ldr	r4, [r4]
   12ca8:	bl	11498 <__errno_location@plt>
   12cac:	ldr	r0, [r0]
   12cb0:	bl	11438 <strerror@plt>
   12cb4:	movw	r1, #49017	; 0xbf79
   12cb8:	mov	r2, r0
   12cbc:	mov	r0, r4
   12cc0:	movt	r1, #1
   12cc4:	bl	1148c <fprintf@plt>
   12cc8:	mov	r0, #1
   12ccc:	bl	11468 <exit@plt>
   12cd0:	sub	sp, sp, #12
   12cd4:	push	{fp, lr}
   12cd8:	mov	fp, sp
   12cdc:	sub	sp, sp, #4
   12ce0:	movw	r4, #2232	; 0x8b8
   12ce4:	mov	ip, r0
   12ce8:	add	r0, fp, #8
   12cec:	stm	r0, {r1, r2, r3}
   12cf0:	movt	r4, #3
   12cf4:	add	r2, fp, #8
   12cf8:	mov	r1, ip
   12cfc:	ldr	r0, [r4]
   12d00:	str	r2, [sp]
   12d04:	bl	114f8 <vfprintf@plt>
   12d08:	ldr	r1, [r4]
   12d0c:	mov	r0, #10
   12d10:	bl	11504 <fputc@plt>
   12d14:	mov	r0, #1
   12d18:	bl	11468 <exit@plt>
   12d1c:	push	{r4, r5, r6, r7, fp, lr}
   12d20:	add	fp, sp, #16
   12d24:	mov	r6, #7
   12d28:	cmp	r0, #1
   12d2c:	blt	12e4c <__assert_fail@plt+0x1888>
   12d30:	mov	r7, r0
   12d34:	cmp	r0, #127	; 0x7f
   12d38:	bhi	12e4c <__assert_fail@plt+0x1888>
   12d3c:	mov	r4, r1
   12d40:	sub	r1, r7, #113	; 0x71
   12d44:	cmp	r1, #5
   12d48:	bhi	12d64 <__assert_fail@plt+0x17a0>
   12d4c:	mov	r0, #1
   12d50:	mov	r2, #41	; 0x29
   12d54:	tst	r2, r0, lsl r1
   12d58:	movwne	r1, #2256	; 0x8d0
   12d5c:	movtne	r1, #3
   12d60:	strne	r0, [r1]
   12d64:	movw	r5, #2316	; 0x90c
   12d68:	movt	r5, #3
   12d6c:	ldr	r0, [r5, #12]
   12d70:	ldr	r1, [r5, #16]
   12d74:	cmp	r1, r0
   12d78:	bne	12d8c <__assert_fail@plt+0x17c8>
   12d7c:	mov	r0, r5
   12d80:	mov	r1, #1
   12d84:	bl	14444 <_obstack_newchunk@@Base>
   12d88:	ldr	r0, [r5, #12]
   12d8c:	add	r1, r0, #1
   12d90:	str	r1, [r5, #12]
   12d94:	mov	r1, #45	; 0x2d
   12d98:	strb	r1, [r0]
   12d9c:	ldr	r0, [r5, #12]
   12da0:	ldr	r1, [r5, #16]
   12da4:	cmp	r1, r0
   12da8:	bne	12dbc <__assert_fail@plt+0x17f8>
   12dac:	mov	r0, r5
   12db0:	mov	r1, #1
   12db4:	bl	14444 <_obstack_newchunk@@Base>
   12db8:	ldr	r0, [r5, #12]
   12dbc:	add	r1, r0, #1
   12dc0:	mov	r6, #0
   12dc4:	cmp	r4, #0
   12dc8:	str	r1, [r5, #12]
   12dcc:	strb	r7, [r0]
   12dd0:	beq	12e4c <__assert_fail@plt+0x1888>
   12dd4:	ldr	r0, [r5, #12]
   12dd8:	ldr	r1, [r5, #16]
   12ddc:	cmp	r1, r0
   12de0:	bne	12df4 <__assert_fail@plt+0x1830>
   12de4:	mov	r0, r5
   12de8:	mov	r1, #1
   12dec:	bl	14444 <_obstack_newchunk@@Base>
   12df0:	ldr	r0, [r5, #12]
   12df4:	add	r1, r0, #1
   12df8:	str	r1, [r5, #12]
   12dfc:	mov	r1, #32
   12e00:	strb	r1, [r0]
   12e04:	mov	r0, r4
   12e08:	bl	11474 <strlen@plt>
   12e0c:	mov	r7, r0
   12e10:	ldr	r0, [r5, #12]
   12e14:	ldr	r1, [r5, #16]
   12e18:	sub	r1, r1, r0
   12e1c:	cmp	r1, r7
   12e20:	bcs	12e34 <__assert_fail@plt+0x1870>
   12e24:	mov	r0, r5
   12e28:	mov	r1, r7
   12e2c:	bl	14444 <_obstack_newchunk@@Base>
   12e30:	ldr	r0, [r5, #12]
   12e34:	mov	r1, r4
   12e38:	mov	r2, r7
   12e3c:	bl	11384 <memcpy@plt>
   12e40:	ldr	r0, [r5, #12]
   12e44:	add	r0, r0, r7
   12e48:	str	r0, [r5, #12]
   12e4c:	mov	r0, r6
   12e50:	pop	{r4, r5, r6, r7, fp, pc}
   12e54:	push	{r4, r5, r6, sl, fp, lr}
   12e58:	add	fp, sp, #16
   12e5c:	mov	r5, r1
   12e60:	mov	r1, r0
   12e64:	mov	r0, #7
   12e68:	cmp	r1, #103	; 0x67
   12e6c:	bgt	12e94 <__assert_fail@plt+0x18d0>
   12e70:	cmp	r1, #72	; 0x48
   12e74:	beq	12f08 <__assert_fail@plt+0x1944>
   12e78:	cmp	r1, #86	; 0x56
   12e7c:	bne	12f2c <__assert_fail@plt+0x1968>
   12e80:	movw	r0, #2244	; 0x8c4
   12e84:	mov	r1, #1
   12e88:	movt	r0, #3
   12e8c:	str	r1, [r0]
   12e90:	b	12f28 <__assert_fail@plt+0x1964>
   12e94:	cmp	r1, #112	; 0x70
   12e98:	beq	12f1c <__assert_fail@plt+0x1958>
   12e9c:	cmp	r1, #104	; 0x68
   12ea0:	popne	{r4, r5, r6, sl, fp, pc}
   12ea4:	mov	r0, r5
   12ea8:	bl	11474 <strlen@plt>
   12eac:	add	r0, r0, #1
   12eb0:	bl	14d30 <_obstack_memory_used@@Base+0x6c8>
   12eb4:	mov	r4, r0
   12eb8:	movw	r0, #2248	; 0x8c8
   12ebc:	movt	r0, #3
   12ec0:	str	r4, [r0]
   12ec4:	b	12ed8 <__assert_fail@plt+0x1914>
   12ec8:	bl	11444 <__ctype_tolower_loc@plt>
   12ecc:	ldr	r0, [r0]
   12ed0:	ldr	r0, [r0, r6, lsl #2]
   12ed4:	strb	r0, [r4], #1
   12ed8:	add	r5, r5, #1
   12edc:	ldrb	r6, [r5, #-1]
   12ee0:	cmp	r6, #0
   12ee4:	beq	12efc <__assert_fail@plt+0x1938>
   12ee8:	cmp	r6, #58	; 0x3a
   12eec:	bne	12ec8 <__assert_fail@plt+0x1904>
   12ef0:	movw	r0, #2252	; 0x8cc
   12ef4:	movt	r0, #3
   12ef8:	str	r5, [r0]
   12efc:	mov	r0, #0
   12f00:	strb	r0, [r4]
   12f04:	pop	{r4, r5, r6, sl, fp, pc}
   12f08:	movw	r1, #1504	; 0x5e0
   12f0c:	mov	r0, #0
   12f10:	movt	r1, #3
   12f14:	str	r0, [r1]
   12f18:	pop	{r4, r5, r6, sl, fp, pc}
   12f1c:	movw	r0, #2252	; 0x8cc
   12f20:	movt	r0, #3
   12f24:	str	r5, [r0]
   12f28:	mov	r0, #0
   12f2c:	pop	{r4, r5, r6, sl, fp, pc}

00012f30 <argp_parse@@Base>:
   12f30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f34:	add	fp, sp, #28
   12f38:	sub	sp, sp, #212	; 0xd4
   12f3c:	mov	r5, r3
   12f40:	mov	r6, r2
   12f44:	mov	r7, r1
   12f48:	mov	r4, r0
   12f4c:	tst	r3, #1
   12f50:	bne	12f8c <argp_parse@@Base+0x5c>
   12f54:	movw	r0, #2228	; 0x8b4
   12f58:	movw	r8, #2224	; 0x8b0
   12f5c:	movt	r0, #3
   12f60:	movt	r8, #3
   12f64:	ldr	r1, [r0]
   12f68:	cmp	r1, #0
   12f6c:	ldreq	r1, [r6]
   12f70:	streq	r1, [r0]
   12f74:	ldr	r0, [r8]
   12f78:	cmp	r0, #0
   12f7c:	bne	12f8c <argp_parse@@Base+0x5c>
   12f80:	ldr	r0, [r6]
   12f84:	bl	1417c <argp_parse@@Base+0x124c>
   12f88:	str	r0, [r8]
   12f8c:	tst	r5, #16
   12f90:	str	r6, [fp, #-228]	; 0xffffff1c
   12f94:	bne	13040 <argp_parse@@Base+0x110>
   12f98:	mov	r1, sp
   12f9c:	sub	r3, r1, #64	; 0x40
   12fa0:	mov	sp, r3
   12fa4:	mov	r2, sp
   12fa8:	sub	r0, r2, #32
   12fac:	mov	sp, r0
   12fb0:	vmov.i32	q8, #0	; 0x00000000
   12fb4:	sub	r2, r2, #20
   12fb8:	cmp	r4, #0
   12fbc:	vst1.32	{d16-d17}, [r2]
   12fc0:	mov	r2, r0
   12fc4:	vst1.64	{d16-d17}, [r2]!
   12fc8:	str	r3, [r2]
   12fcc:	sub	r2, r1, #32
   12fd0:	sub	r1, r1, #48	; 0x30
   12fd4:	vst1.64	{d16-d17}, [r2]
   12fd8:	vst1.64	{d16-d17}, [r1]
   12fdc:	mov	r1, #48	; 0x30
   12fe0:	mov	r2, r3
   12fe4:	vst1.64	{d16-d17}, [r2], r1
   12fe8:	vst1.64	{d16-d17}, [r2]
   12fec:	movw	r2, #47748	; 0xba84
   12ff0:	strne	r4, [r3], #16
   12ff4:	movt	r2, #1
   12ff8:	mov	r1, r3
   12ffc:	str	r2, [r1], #16
   13000:	movw	r2, #2368	; 0x940
   13004:	movt	r2, #3
   13008:	ldr	r2, [r2]
   1300c:	cmp	r2, #0
   13010:	movweq	r2, #2264	; 0x8d8
   13014:	movteq	r2, #3
   13018:	ldreq	r2, [r2]
   1301c:	cmpeq	r2, #0
   13020:	beq	13034 <argp_parse@@Base+0x104>
   13024:	movw	r2, #47776	; 0xbaa0
   13028:	mov	r3, r1
   1302c:	movt	r2, #1
   13030:	str	r2, [r1]
   13034:	mov	r1, #0
   13038:	str	r1, [r3, #16]
   1303c:	b	13044 <argp_parse@@Base+0x114>
   13040:	mov	r0, r4
   13044:	sub	r9, fp, #96	; 0x60
   13048:	str	r7, [fp, #-232]	; 0xffffff18
   1304c:	vmov.i32	q8, #0	; 0x00000000
   13050:	mov	r7, #12
   13054:	mov	r4, #0
   13058:	cmp	r0, #0
   1305c:	str	r5, [fp, #-224]	; 0xffffff20
   13060:	str	r0, [fp, #-236]	; 0xffffff14
   13064:	mov	r1, r9
   13068:	vst1.64	{d16-d17}, [r1], r7
   1306c:	vst1.32	{d16-d17}, [r1]
   13070:	mov	r1, #1
   13074:	bic	r3, r1, r5, lsr #2
   13078:	str	r3, [fp, #-64]	; 0xffffffc0
   1307c:	str	r4, [fp, #-60]	; 0xffffffc4
   13080:	str	r4, [fp, #-56]	; 0xffffffc8
   13084:	str	r4, [fp, #-52]	; 0xffffffcc
   13088:	beq	130c0 <argp_parse@@Base+0x190>
   1308c:	sub	r1, fp, #64	; 0x40
   13090:	bl	13d5c <argp_parse@@Base+0xe2c>
   13094:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13098:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1309c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   130a0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   130a4:	mov	r6, #16
   130a8:	add	r1, r6, r1, lsl #4
   130ac:	add	r2, r2, r2, lsl #3
   130b0:	mov	r6, #36	; 0x24
   130b4:	lsl	r4, r0, #2
   130b8:	add	r8, r6, r2, lsl #2
   130bc:	b	130c8 <argp_parse@@Base+0x198>
   130c0:	mov	r8, #36	; 0x24
   130c4:	mov	r1, #16
   130c8:	add	r5, r8, r4
   130cc:	add	sl, r5, r1
   130d0:	add	r0, r3, sl
   130d4:	add	r0, r0, #1
   130d8:	bl	15314 <_obstack_memory_used@@Base+0xcac>
   130dc:	cmp	r0, #0
   130e0:	str	r0, [fp, #-100]	; 0xffffff9c
   130e4:	beq	13af4 <argp_parse@@Base+0xbc4>
   130e8:	mov	r6, r0
   130ec:	mov	r0, #12
   130f0:	sub	r1, fp, #220	; 0xdc
   130f4:	mov	r2, r4
   130f8:	vld1.64	{d16-d17}, [r9], r0
   130fc:	add	r0, r1, #20
   13100:	add	r7, r6, r8
   13104:	add	r8, r6, r5
   13108:	add	r5, r6, sl
   1310c:	vld1.32	{d18-d19}, [r9]
   13110:	vst1.32	{d16-d17}, [r0]
   13114:	add	r0, r1, #32
   13118:	mov	r9, r1
   1311c:	mov	r1, #0
   13120:	vst1.32	{d18-d19}, [r0]
   13124:	mov	r0, #1
   13128:	str	r6, [fp, #-172]	; 0xffffff54
   1312c:	str	r0, [fp, #-208]	; 0xffffff30
   13130:	str	r0, [fp, #-204]	; 0xffffff34
   13134:	mov	r0, r7
   13138:	str	r7, [fp, #-164]	; 0xffffff5c
   1313c:	str	r8, [fp, #-212]	; 0xffffff2c
   13140:	str	r5, [fp, #-216]	; 0xffffff28
   13144:	bl	114bc <memset@plt>
   13148:	str	r5, [fp, #-44]	; 0xffffffd4
   1314c:	str	r9, [fp, #-48]	; 0xffffffd0
   13150:	ldr	r9, [fp, #-224]	; 0xffffff20
   13154:	mov	r0, #45	; 0x2d
   13158:	str	r8, [fp, #-40]	; 0xffffffd8
   1315c:	str	r7, [fp, #-36]	; 0xffffffdc
   13160:	tst	r9, #8
   13164:	moveq	r0, #43	; 0x2b
   13168:	tsteq	r9, #4
   1316c:	beq	1373c <argp_parse@@Base+0x80c>
   13170:	add	r1, r5, #1
   13174:	strb	r0, [r5]
   13178:	str	r1, [fp, #-44]	; 0xffffffd4
   1317c:	ldr	r0, [fp, #-236]	; 0xffffff14
   13180:	ldr	sl, [fp, #-228]	; 0xffffff1c
   13184:	mov	r5, #0
   13188:	strb	r5, [r1]
   1318c:	str	r5, [r8]
   13190:	cmp	r0, #0
   13194:	str	r0, [fp, #-220]	; 0xffffff24
   13198:	beq	131d0 <argp_parse@@Base+0x2a0>
   1319c:	sub	sp, sp, #8
   131a0:	sub	r1, fp, #48	; 0x30
   131a4:	mov	r2, #0
   131a8:	mov	r3, r6
   131ac:	str	r1, [sp]
   131b0:	mov	r1, #0
   131b4:	bl	13e38 <argp_parse@@Base+0xf08>
   131b8:	add	sp, sp, #8
   131bc:	str	r0, [fp, #-168]	; 0xffffff58
   131c0:	mov	r6, r0
   131c4:	ldr	r5, [fp, #-220]	; 0xffffff24
   131c8:	ldr	r4, [fp, #-172]	; 0xffffff54
   131cc:	b	131d8 <argp_parse@@Base+0x2a8>
   131d0:	mov	r4, r6
   131d4:	str	r6, [fp, #-168]	; 0xffffff58
   131d8:	ldr	r3, [fp, #-232]	; 0xffffff18
   131dc:	sub	r1, fp, #220	; 0xdc
   131e0:	mov	r7, #0
   131e4:	vmov.i32	q8, #0	; 0x00000000
   131e8:	mov	r0, #1
   131ec:	mov	r8, sl
   131f0:	cmp	r4, r6
   131f4:	mov	r2, r1
   131f8:	add	r1, r1, #84	; 0x54
   131fc:	str	r7, [fp, #-116]	; 0xffffff8c
   13200:	str	r7, [fp, #-120]	; 0xffffff88
   13204:	vst1.32	{d16-d17}, [r1]
   13208:	str	r5, [fp, #-156]	; 0xffffff64
   1320c:	str	r3, [fp, #-152]	; 0xffffff68
   13210:	str	sl, [fp, #-148]	; 0xffffff6c
   13214:	str	r9, [fp, #-140]	; 0xffffff74
   13218:	str	r7, [fp, #-144]	; 0xffffff70
   1321c:	str	r2, [fp, #-104]	; 0xffffff98
   13220:	str	r0, [fp, #-160]	; 0xffffff60
   13224:	movw	r0, #2232	; 0x8b8
   13228:	add	sl, r2, #64	; 0x40
   1322c:	movt	r0, #3
   13230:	ldr	r0, [r0]
   13234:	str	r0, [fp, #-112]	; 0xffffff90
   13238:	movw	r0, #2236	; 0x8bc
   1323c:	movt	r0, #3
   13240:	ldr	r0, [r0]
   13244:	str	r0, [fp, #-108]	; 0xffffff94
   13248:	bcs	1332c <argp_parse@@Base+0x3fc>
   1324c:	ldr	r0, [fp, #12]
   13250:	str	r0, [r4, #24]
   13254:	cmp	r7, #7
   13258:	cmpne	r7, #0
   1325c:	bne	13af4 <argp_parse@@Base+0xbc4>
   13260:	ldr	r0, [r4, #16]
   13264:	cmp	r0, #0
   13268:	ldrne	r1, [r4, #20]
   1326c:	ldrne	r0, [r0, #28]
   13270:	ldrne	r0, [r0, r1, lsl #2]
   13274:	strne	r0, [r4, #24]
   13278:	ldr	r3, [r4]
   1327c:	cmp	r3, #0
   13280:	beq	132d0 <argp_parse@@Base+0x3a0>
   13284:	add	r0, r4, #28
   13288:	ldr	r1, [r4, #32]
   1328c:	mov	r2, sl
   13290:	str	r1, [fp, #-120]	; 0xffffff88
   13294:	ldr	r1, [r4, #24]
   13298:	str	r1, [fp, #-128]	; 0xffffff80
   1329c:	mov	r1, #0
   132a0:	ldr	r0, [r0]
   132a4:	str	r0, [fp, #-124]	; 0xffffff84
   132a8:	ldr	r0, [r4, #12]
   132ac:	str	r0, [fp, #-136]	; 0xffffff78
   132b0:	movw	r0, #6
   132b4:	movt	r0, #256	; 0x100
   132b8:	sub	r0, r0, #3
   132bc:	blx	r3
   132c0:	mov	r7, r0
   132c4:	ldr	r0, [fp, #-120]	; 0xffffff88
   132c8:	str	r0, [r4, #32]
   132cc:	b	132ec <argp_parse@@Base+0x3bc>
   132d0:	ldr	r0, [r4, #4]
   132d4:	mov	r7, #7
   132d8:	ldr	r0, [r0, #16]
   132dc:	cmp	r0, #0
   132e0:	ldrne	r0, [r0]
   132e4:	cmpne	r0, #0
   132e8:	bne	13300 <argp_parse@@Base+0x3d0>
   132ec:	ldr	r0, [fp, #-168]	; 0xffffff58
   132f0:	add	r4, r4, #36	; 0x24
   132f4:	cmp	r4, r0
   132f8:	bcc	13254 <argp_parse@@Base+0x324>
   132fc:	b	13320 <argp_parse@@Base+0x3f0>
   13300:	mov	r0, r4
   13304:	ldr	r2, [r4, #24]
   13308:	ldr	r1, [r0, #28]!
   1330c:	str	r2, [r1]
   13310:	ldr	r3, [r4]
   13314:	cmp	r3, #0
   13318:	bne	13288 <argp_parse@@Base+0x358>
   1331c:	b	132ec <argp_parse@@Base+0x3bc>
   13320:	cmp	r7, #7
   13324:	cmpne	r7, #0
   13328:	bne	13af4 <argp_parse@@Base+0xbc4>
   1332c:	ldr	r0, [fp, #-140]	; 0xffffff74
   13330:	tst	r0, #2
   13334:	bne	13344 <argp_parse@@Base+0x414>
   13338:	mov	r0, #1
   1333c:	str	r0, [fp, #-204]	; 0xffffff34
   13340:	b	1336c <argp_parse@@Base+0x43c>
   13344:	mov	r1, #0
   13348:	tst	r0, #1
   1334c:	str	r1, [fp, #-204]	; 0xffffff34
   13350:	beq	1336c <argp_parse@@Base+0x43c>
   13354:	ldr	r0, [fp, #-152]	; 0xffffff68
   13358:	ldr	r1, [fp, #-148]	; 0xffffff6c
   1335c:	sub	r1, r1, #4
   13360:	add	r0, r0, #1
   13364:	str	r1, [fp, #-148]	; 0xffffff6c
   13368:	str	r0, [fp, #-152]	; 0xffffff68
   1336c:	ldr	r0, [fp, #-148]	; 0xffffff6c
   13370:	cmp	r0, r8
   13374:	beq	13388 <argp_parse@@Base+0x458>
   13378:	movw	r0, #2224	; 0x8b0
   1337c:	movt	r0, #3
   13380:	ldr	r0, [r0]
   13384:	b	13398 <argp_parse@@Base+0x468>
   13388:	ldr	r0, [r8]
   1338c:	cmp	r0, #0
   13390:	beq	13378 <argp_parse@@Base+0x448>
   13394:	bl	1417c <argp_parse@@Base+0x124c>
   13398:	str	r0, [fp, #-116]	; 0xffffff8c
   1339c:	sub	r0, fp, #220	; 0xdc
   133a0:	mov	r8, #0
   133a4:	add	r6, r0, #12
   133a8:	ldr	r0, [fp, #-132]	; 0xffffff7c
   133ac:	cmp	r0, #0
   133b0:	beq	133c4 <argp_parse@@Base+0x494>
   133b4:	ldr	r9, [fp, #-144]	; 0xffffff70
   133b8:	cmp	r9, r0
   133bc:	bge	13478 <argp_parse@@Base+0x548>
   133c0:	str	r8, [fp, #-132]	; 0xffffff7c
   133c4:	ldr	r0, [fp, #-160]	; 0xffffff60
   133c8:	ldr	r9, [fp, #-144]	; 0xffffff70
   133cc:	cmp	r0, #0
   133d0:	beq	13478 <argp_parse@@Base+0x548>
   133d4:	mvn	r0, #0
   133d8:	str	r0, [fp, #-200]	; 0xffffff38
   133dc:	str	r9, [fp, #-208]	; 0xffffff30
   133e0:	ldr	r2, [fp, #-216]	; 0xffffff28
   133e4:	ldr	r3, [fp, #-212]	; 0xffffff2c
   133e8:	ldr	r0, [fp, #-152]	; 0xffffff68
   133ec:	ldr	r1, [fp, #-148]	; 0xffffff6c
   133f0:	ldrb	r7, [fp, #-140]	; 0xffffff74
   133f4:	sub	sp, sp, #8
   133f8:	tst	r7, #64	; 0x40
   133fc:	bne	13410 <argp_parse@@Base+0x4e0>
   13400:	str	r8, [sp]
   13404:	str	r6, [sp, #4]
   13408:	bl	14254 <argp_parse@@Base+0x1324>
   1340c:	b	1341c <argp_parse@@Base+0x4ec>
   13410:	str	r8, [sp]
   13414:	str	r6, [sp, #4]
   13418:	bl	142b8 <argp_parse@@Base+0x1388>
   1341c:	add	sp, sp, #8
   13420:	ldr	r9, [fp, #-208]	; 0xffffff30
   13424:	mov	r7, r0
   13428:	cmn	r0, #1
   1342c:	str	r9, [fp, #-144]	; 0xffffff70
   13430:	beq	1344c <argp_parse@@Base+0x51c>
   13434:	cmp	r7, #63	; 0x3f
   13438:	beq	13614 <argp_parse@@Base+0x6e4>
   1343c:	cmp	r7, #1
   13440:	bne	13624 <argp_parse@@Base+0x6f4>
   13444:	ldr	r7, [fp, #-196]	; 0xffffff3c
   13448:	b	134b0 <argp_parse@@Base+0x580>
   1344c:	cmp	r9, #2
   13450:	str	r8, [fp, #-160]	; 0xffffff60
   13454:	blt	13478 <argp_parse@@Base+0x548>
   13458:	ldr	r0, [fp, #-148]	; 0xffffff6c
   1345c:	movw	r1, #48236	; 0xbc6c
   13460:	movt	r1, #1
   13464:	add	r0, r0, r9, lsl #2
   13468:	ldr	r0, [r0, #-4]
   1346c:	bl	1130c <strcmp@plt>
   13470:	cmp	r0, #0
   13474:	streq	r9, [fp, #-132]	; 0xffffff7c
   13478:	ldr	r2, [fp, #-152]	; 0xffffff68
   1347c:	mov	r1, #1
   13480:	mov	r0, #7
   13484:	cmp	r9, r2
   13488:	bge	1378c <argp_parse@@Base+0x85c>
   1348c:	ldrb	r2, [fp, #-140]	; 0xffffff74
   13490:	tst	r2, #4
   13494:	bne	1378c <argp_parse@@Base+0x85c>
   13498:	add	r0, r9, #1
   1349c:	str	r0, [fp, #-144]	; 0xffffff70
   134a0:	ldr	r1, [fp, #-148]	; 0xffffff6c
   134a4:	ldr	r7, [r1, r9, lsl #2]
   134a8:	mov	r9, r0
   134ac:	str	r7, [fp, #-196]	; 0xffffff3c
   134b0:	sub	r0, r9, #1
   134b4:	str	r0, [fp, #-144]	; 0xffffff70
   134b8:	ldr	r1, [fp, #-172]	; 0xffffff54
   134bc:	ldr	r2, [fp, #-168]	; 0xffffff58
   134c0:	cmp	r1, r2
   134c4:	bcs	13744 <argp_parse@@Base+0x814>
   134c8:	add	r4, r1, #24
   134cc:	b	134d8 <argp_parse@@Base+0x5a8>
   134d0:	ldr	r0, [fp, #-144]	; 0xffffff70
   134d4:	add	r4, r4, #36	; 0x24
   134d8:	add	r1, r0, #1
   134dc:	str	r1, [fp, #-144]	; 0xffffff70
   134e0:	ldr	r3, [r4, #-24]	; 0xffffffe8
   134e4:	cmp	r3, #0
   134e8:	beq	13588 <argp_parse@@Base+0x658>
   134ec:	ldr	r0, [r4, #8]
   134f0:	mov	r1, r7
   134f4:	mov	r2, sl
   134f8:	mov	r5, #0
   134fc:	str	r0, [fp, #-120]	; 0xffffff88
   13500:	ldr	r0, [r4]
   13504:	str	r0, [fp, #-128]	; 0xffffff80
   13508:	ldr	r0, [r4, #4]
   1350c:	str	r0, [fp, #-124]	; 0xffffff84
   13510:	ldr	r0, [r4, #-12]
   13514:	str	r0, [fp, #-136]	; 0xffffff78
   13518:	mov	r0, #0
   1351c:	blx	r3
   13520:	ldr	r1, [fp, #-120]	; 0xffffff88
   13524:	cmp	r0, #7
   13528:	str	r1, [r4, #8]
   1352c:	bne	135b0 <argp_parse@@Base+0x680>
   13530:	ldr	r0, [fp, #-144]	; 0xffffff70
   13534:	ldr	r3, [r4, #-24]	; 0xffffffe8
   13538:	sub	r0, r0, #1
   1353c:	cmp	r3, #0
   13540:	str	r0, [fp, #-144]	; 0xffffff70
   13544:	beq	1358c <argp_parse@@Base+0x65c>
   13548:	ldr	r0, [r4]
   1354c:	mov	r1, #0
   13550:	mov	r2, sl
   13554:	str	r0, [fp, #-128]	; 0xffffff80
   13558:	ldr	r0, [r4, #4]
   1355c:	str	r0, [fp, #-124]	; 0xffffff84
   13560:	ldr	r0, [r4, #-12]
   13564:	str	r0, [fp, #-136]	; 0xffffff78
   13568:	movw	r0, #6
   1356c:	movt	r0, #256	; 0x100
   13570:	blx	r3
   13574:	ldr	r1, [fp, #-120]	; 0xffffff88
   13578:	str	r1, [r4, #8]
   1357c:	cmp	r0, #7
   13580:	beq	13598 <argp_parse@@Base+0x668>
   13584:	b	135a8 <argp_parse@@Base+0x678>
   13588:	str	r0, [fp, #-144]	; 0xffffff70
   1358c:	mov	r0, #7
   13590:	cmp	r0, #7
   13594:	bne	135a8 <argp_parse@@Base+0x678>
   13598:	ldr	r2, [fp, #-168]	; 0xffffff58
   1359c:	add	r1, r4, #12
   135a0:	cmp	r1, r2
   135a4:	bcc	134d0 <argp_parse@@Base+0x5a0>
   135a8:	movw	r5, #6
   135ac:	movt	r5, #256	; 0x100
   135b0:	cmp	r0, #0
   135b4:	beq	135c4 <argp_parse@@Base+0x694>
   135b8:	cmp	r0, #7
   135bc:	bne	1372c <argp_parse@@Base+0x7fc>
   135c0:	b	13744 <argp_parse@@Base+0x814>
   135c4:	movw	r0, #6
   135c8:	movt	r0, #256	; 0x100
   135cc:	cmp	r5, r0
   135d0:	ldreq	r0, [fp, #-152]	; 0xffffff68
   135d4:	streq	r0, [fp, #-144]	; 0xffffff70
   135d8:	ldrne	r0, [fp, #-144]	; 0xffffff70
   135dc:	cmp	r0, r9
   135e0:	bge	135f0 <argp_parse@@Base+0x6c0>
   135e4:	mov	r0, #1
   135e8:	str	r0, [fp, #-160]	; 0xffffff60
   135ec:	b	13604 <argp_parse@@Base+0x6d4>
   135f0:	rsb	r1, r9, #1
   135f4:	add	r0, r1, r0
   135f8:	ldr	r1, [r4, #-12]
   135fc:	add	r0, r0, r1
   13600:	str	r0, [r4, #-12]
   13604:	mov	r0, #0
   13608:	cmp	r0, #0
   1360c:	beq	133a8 <argp_parse@@Base+0x478>
   13610:	b	13734 <argp_parse@@Base+0x804>
   13614:	ldr	r0, [fp, #-200]	; 0xffffff38
   13618:	cmn	r0, #1
   1361c:	beq	1368c <argp_parse@@Base+0x75c>
   13620:	b	13b34 <argp_parse@@Base+0xc04>
   13624:	cmp	r8, r7, asr #24
   13628:	beq	1368c <argp_parse@@Base+0x75c>
   1362c:	ldr	r1, [fp, #-172]	; 0xffffff54
   13630:	asr	r0, r7, #24
   13634:	sub	r0, r0, #1
   13638:	add	r0, r0, r0, lsl #3
   1363c:	ldr	r3, [r1, r0, lsl #2]
   13640:	cmp	r3, #0
   13644:	beq	13b00 <argp_parse@@Base+0xbd0>
   13648:	add	r4, r1, r0, lsl #2
   1364c:	tst	r7, #8388608	; 0x800000
   13650:	mov	r2, sl
   13654:	ldr	r0, [r4, #32]!
   13658:	str	r0, [fp, #-120]	; 0xffffff88
   1365c:	ldr	r0, [r4, #-8]
   13660:	str	r0, [fp, #-128]	; 0xffffff80
   13664:	ldr	r0, [r4, #-4]
   13668:	str	r0, [fp, #-124]	; 0xffffff84
   1366c:	ldr	r0, [r4, #-20]	; 0xffffffec
   13670:	str	r0, [fp, #-136]	; 0xffffff78
   13674:	bic	r0, r7, #-16777216	; 0xff000000
   13678:	ldr	r1, [fp, #-196]	; 0xffffff3c
   1367c:	orrne	r0, r0, #-16777216	; 0xff000000
   13680:	blx	r3
   13684:	mov	r1, #0
   13688:	b	1371c <argp_parse@@Base+0x7ec>
   1368c:	ldr	r0, [fp, #-216]	; 0xffffff28
   13690:	mov	r1, r7
   13694:	bl	11480 <strchr@plt>
   13698:	cmp	r0, #0
   1369c:	beq	13758 <argp_parse@@Base+0x828>
   136a0:	ldr	r1, [fp, #-172]	; 0xffffff54
   136a4:	ldr	r2, [fp, #-168]	; 0xffffff58
   136a8:	cmp	r1, r2
   136ac:	bcs	13758 <argp_parse@@Base+0x828>
   136b0:	add	r1, r1, #24
   136b4:	ldr	r3, [r1, #-16]
   136b8:	cmp	r3, r0
   136bc:	bhi	136d8 <argp_parse@@Base+0x7a8>
   136c0:	add	r3, r1, #36	; 0x24
   136c4:	add	r1, r1, #12
   136c8:	cmp	r1, r2
   136cc:	mov	r1, r3
   136d0:	bcc	136b4 <argp_parse@@Base+0x784>
   136d4:	b	13758 <argp_parse@@Base+0x828>
   136d8:	ldr	r3, [r1, #-24]	; 0xffffffe8
   136dc:	cmp	r3, #0
   136e0:	beq	13758 <argp_parse@@Base+0x828>
   136e4:	mov	r4, r1
   136e8:	mov	r2, sl
   136ec:	ldr	r0, [r4, #8]!
   136f0:	str	r0, [fp, #-120]	; 0xffffff88
   136f4:	ldr	r0, [r1]
   136f8:	str	r0, [fp, #-128]	; 0xffffff80
   136fc:	ldr	r0, [r1, #4]
   13700:	str	r0, [fp, #-124]	; 0xffffff84
   13704:	ldr	r0, [r1, #-12]
   13708:	str	r0, [fp, #-136]	; 0xffffff78
   1370c:	mov	r0, r7
   13710:	ldr	r1, [fp, #-196]	; 0xffffff3c
   13714:	blx	r3
   13718:	mov	r1, #1
   1371c:	ldr	r2, [fp, #-120]	; 0xffffff88
   13720:	cmp	r0, #7
   13724:	str	r2, [r4]
   13728:	beq	13750 <argp_parse@@Base+0x820>
   1372c:	cmp	r0, #0
   13730:	beq	133a8 <argp_parse@@Base+0x478>
   13734:	mov	r1, #0
   13738:	b	1378c <argp_parse@@Base+0x85c>
   1373c:	mov	r1, r5
   13740:	b	1317c <argp_parse@@Base+0x24c>
   13744:	mov	r7, #1
   13748:	mov	r0, #1
   1374c:	b	13778 <argp_parse@@Base+0x848>
   13750:	cmp	r1, #0
   13754:	beq	13b00 <argp_parse@@Base+0xbd0>
   13758:	movw	r1, #48239	; 0xbc6f
   1375c:	movw	r3, #47972	; 0xbb64
   13760:	mov	r0, sl
   13764:	mov	r2, r7
   13768:	movt	r1, #1
   1376c:	movt	r3, #1
   13770:	bl	1694c <argp_error@@Base>
   13774:	mov	r0, #0
   13778:	add	r1, r7, #1
   1377c:	clz	r1, r1
   13780:	lsr	r1, r1, #5
   13784:	orr	r1, r1, r0
   13788:	mov	r0, #7
   1378c:	subs	r7, r0, #7
   13790:	movne	r7, r0
   13794:	cmp	r1, #0
   13798:	moveq	r7, r0
   1379c:	cmp	r7, #0
   137a0:	beq	13840 <argp_parse@@Base+0x910>
   137a4:	cmp	r7, #0
   137a8:	beq	139d4 <argp_parse@@Base+0xaa4>
   137ac:	cmp	r7, #7
   137b0:	bne	137c8 <argp_parse@@Base+0x898>
   137b4:	ldr	r1, [fp, #-112]	; 0xffffff90
   137b8:	mov	r0, sl
   137bc:	mov	r2, #260	; 0x104
   137c0:	bl	16890 <argp_state_help@@Base>
   137c4:	mov	r7, #7
   137c8:	ldr	r4, [fp, #-172]	; 0xffffff54
   137cc:	ldr	r0, [fp, #-168]	; 0xffffff58
   137d0:	cmp	r4, r0
   137d4:	bcs	13a74 <argp_parse@@Base+0xb44>
   137d8:	movw	r1, #6
   137dc:	movt	r1, #256	; 0x100
   137e0:	sub	r6, r1, #1
   137e4:	ldr	r3, [r4]
   137e8:	cmp	r3, #0
   137ec:	beq	1382c <argp_parse@@Base+0x8fc>
   137f0:	ldr	r0, [r4, #32]
   137f4:	mov	r1, #0
   137f8:	mov	r2, sl
   137fc:	str	r0, [fp, #-120]	; 0xffffff88
   13800:	ldr	r0, [r4, #24]
   13804:	str	r0, [fp, #-128]	; 0xffffff80
   13808:	ldr	r0, [r4, #28]
   1380c:	str	r0, [fp, #-124]	; 0xffffff84
   13810:	ldr	r0, [r4, #12]
   13814:	str	r0, [fp, #-136]	; 0xffffff78
   13818:	mov	r0, r6
   1381c:	blx	r3
   13820:	ldr	r0, [fp, #-120]	; 0xffffff88
   13824:	str	r0, [r4, #32]
   13828:	ldr	r0, [fp, #-168]	; 0xffffff58
   1382c:	add	r4, r4, #36	; 0x24
   13830:	cmp	r4, r0
   13834:	bcc	137e4 <argp_parse@@Base+0x8b4>
   13838:	ldr	r4, [fp, #-172]	; 0xffffff54
   1383c:	b	13a74 <argp_parse@@Base+0xb44>
   13840:	ldr	r1, [fp, #-152]	; 0xffffff68
   13844:	ldr	r0, [fp, #-144]	; 0xffffff70
   13848:	cmp	r0, r1
   1384c:	bne	13978 <argp_parse@@Base+0xa48>
   13850:	ldr	r4, [fp, #-172]	; 0xffffff54
   13854:	ldr	r1, [fp, #-168]	; 0xffffff58
   13858:	mov	r0, #0
   1385c:	cmp	r4, r1
   13860:	bcs	138ec <argp_parse@@Base+0x9bc>
   13864:	movw	r0, #6
   13868:	mov	r7, #0
   1386c:	movt	r0, #256	; 0x100
   13870:	sub	r6, r0, #4
   13874:	mov	r0, #0
   13878:	cmp	r0, #7
   1387c:	cmpne	r0, #0
   13880:	bne	138e8 <argp_parse@@Base+0x9b8>
   13884:	ldr	r2, [r4, #12]
   13888:	cmp	r2, #0
   1388c:	bne	138dc <argp_parse@@Base+0x9ac>
   13890:	ldr	r3, [r4]
   13894:	cmp	r3, #0
   13898:	beq	138d8 <argp_parse@@Base+0x9a8>
   1389c:	ldr	r0, [r4, #32]
   138a0:	mov	r1, #0
   138a4:	mov	r2, sl
   138a8:	str	r0, [fp, #-120]	; 0xffffff88
   138ac:	ldr	r0, [r4, #24]
   138b0:	str	r0, [fp, #-128]	; 0xffffff80
   138b4:	ldr	r0, [r4, #28]
   138b8:	str	r7, [fp, #-136]	; 0xffffff78
   138bc:	str	r0, [fp, #-124]	; 0xffffff84
   138c0:	mov	r0, r6
   138c4:	blx	r3
   138c8:	ldr	r1, [fp, #-120]	; 0xffffff88
   138cc:	str	r1, [r4, #32]
   138d0:	ldr	r1, [fp, #-168]	; 0xffffff58
   138d4:	b	138dc <argp_parse@@Base+0x9ac>
   138d8:	mov	r0, #7
   138dc:	add	r4, r4, #36	; 0x24
   138e0:	cmp	r4, r1
   138e4:	bcc	13878 <argp_parse@@Base+0x948>
   138e8:	ldr	r4, [fp, #-172]	; 0xffffff54
   138ec:	sub	r7, r1, #36	; 0x24
   138f0:	cmp	r7, r4
   138f4:	bcc	1396c <argp_parse@@Base+0xa3c>
   138f8:	movw	r1, #6
   138fc:	movt	r1, #256	; 0x100
   13900:	sub	r6, r1, #5
   13904:	cmp	r0, #7
   13908:	cmpne	r0, #0
   1390c:	bne	139b8 <argp_parse@@Base+0xa88>
   13910:	ldr	r3, [r7]
   13914:	cmp	r3, #0
   13918:	beq	1395c <argp_parse@@Base+0xa2c>
   1391c:	ldr	r0, [r7, #32]
   13920:	mov	r1, #0
   13924:	mov	r2, sl
   13928:	str	r0, [fp, #-120]	; 0xffffff88
   1392c:	ldr	r0, [r7, #24]
   13930:	str	r0, [fp, #-128]	; 0xffffff80
   13934:	ldr	r0, [r7, #28]
   13938:	str	r0, [fp, #-124]	; 0xffffff84
   1393c:	ldr	r0, [r7, #12]
   13940:	str	r0, [fp, #-136]	; 0xffffff78
   13944:	mov	r0, r6
   13948:	blx	r3
   1394c:	ldr	r1, [fp, #-120]	; 0xffffff88
   13950:	str	r1, [r7, #32]
   13954:	ldr	r4, [fp, #-172]	; 0xffffff54
   13958:	b	13960 <argp_parse@@Base+0xa30>
   1395c:	mov	r0, #7
   13960:	sub	r7, r7, #36	; 0x24
   13964:	cmp	r7, r4
   13968:	bcs	13904 <argp_parse@@Base+0x9d4>
   1396c:	subs	r7, r0, #7
   13970:	movne	r7, r0
   13974:	b	139bc <argp_parse@@Base+0xa8c>
   13978:	ldr	r1, [fp, #8]
   1397c:	cmp	r1, #0
   13980:	beq	1398c <argp_parse@@Base+0xa5c>
   13984:	str	r0, [r1]
   13988:	b	139d4 <argp_parse@@Base+0xaa4>
   1398c:	ldrb	r0, [fp, #-140]	; 0xffffff74
   13990:	tst	r0, #2
   13994:	bne	137b4 <argp_parse@@Base+0x884>
   13998:	ldr	r0, [fp, #-112]	; 0xffffff90
   1399c:	cmp	r0, #0
   139a0:	beq	137b4 <argp_parse@@Base+0x884>
   139a4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   139a8:	movw	r1, #48260	; 0xbc84
   139ac:	movt	r1, #1
   139b0:	bl	1148c <fprintf@plt>
   139b4:	b	137b4 <argp_parse@@Base+0x884>
   139b8:	mov	r7, r0
   139bc:	ldr	r1, [fp, #8]
   139c0:	cmp	r1, #0
   139c4:	ldrne	r0, [fp, #-144]	; 0xffffff70
   139c8:	strne	r0, [r1]
   139cc:	cmp	r7, #0
   139d0:	bne	137ac <argp_parse@@Base+0x87c>
   139d4:	ldr	r0, [fp, #-168]	; 0xffffff58
   139d8:	ldr	r4, [fp, #-172]	; 0xffffff54
   139dc:	mov	r7, #0
   139e0:	sub	r5, r0, #36	; 0x24
   139e4:	cmp	r5, r4
   139e8:	bcc	13a74 <argp_parse@@Base+0xb44>
   139ec:	movw	r1, #6
   139f0:	mov	r0, #0
   139f4:	movt	r1, #256	; 0x100
   139f8:	sub	r6, r1, #2
   139fc:	cmp	r0, #7
   13a00:	cmpne	r0, #0
   13a04:	bne	13a70 <argp_parse@@Base+0xb40>
   13a08:	ldr	r3, [r5]
   13a0c:	cmp	r3, #0
   13a10:	beq	13a54 <argp_parse@@Base+0xb24>
   13a14:	ldr	r0, [r5, #32]
   13a18:	mov	r1, #0
   13a1c:	mov	r2, sl
   13a20:	str	r0, [fp, #-120]	; 0xffffff88
   13a24:	ldr	r0, [r5, #24]
   13a28:	str	r0, [fp, #-128]	; 0xffffff80
   13a2c:	ldr	r0, [r5, #28]
   13a30:	str	r0, [fp, #-124]	; 0xffffff84
   13a34:	ldr	r0, [r5, #12]
   13a38:	str	r0, [fp, #-136]	; 0xffffff78
   13a3c:	mov	r0, r6
   13a40:	blx	r3
   13a44:	ldr	r1, [fp, #-120]	; 0xffffff88
   13a48:	str	r1, [r5, #32]
   13a4c:	ldr	r4, [fp, #-172]	; 0xffffff54
   13a50:	b	13a58 <argp_parse@@Base+0xb28>
   13a54:	mov	r0, #7
   13a58:	sub	r5, r5, #36	; 0x24
   13a5c:	cmp	r5, r4
   13a60:	bcs	139fc <argp_parse@@Base+0xacc>
   13a64:	subs	r7, r0, #7
   13a68:	movne	r7, r0
   13a6c:	b	13a74 <argp_parse@@Base+0xb44>
   13a70:	mov	r7, r0
   13a74:	ldr	r0, [fp, #-168]	; 0xffffff58
   13a78:	sub	r6, r0, #36	; 0x24
   13a7c:	cmp	r6, r4
   13a80:	bcc	13ae4 <argp_parse@@Base+0xbb4>
   13a84:	movw	r0, #6
   13a88:	movt	r0, #256	; 0x100
   13a8c:	add	r5, r0, #1
   13a90:	ldr	r3, [r6]
   13a94:	cmp	r3, #0
   13a98:	beq	13ad8 <argp_parse@@Base+0xba8>
   13a9c:	ldr	r0, [r6, #32]
   13aa0:	mov	r1, #0
   13aa4:	mov	r2, sl
   13aa8:	str	r0, [fp, #-120]	; 0xffffff88
   13aac:	ldr	r0, [r6, #24]
   13ab0:	str	r0, [fp, #-128]	; 0xffffff80
   13ab4:	ldr	r0, [r6, #28]
   13ab8:	str	r0, [fp, #-124]	; 0xffffff84
   13abc:	ldr	r0, [r6, #12]
   13ac0:	str	r0, [fp, #-136]	; 0xffffff78
   13ac4:	mov	r0, r5
   13ac8:	blx	r3
   13acc:	ldr	r0, [fp, #-120]	; 0xffffff88
   13ad0:	str	r0, [r6, #32]
   13ad4:	ldr	r4, [fp, #-172]	; 0xffffff54
   13ad8:	sub	r6, r6, #36	; 0x24
   13adc:	cmp	r6, r4
   13ae0:	bcs	13a90 <argp_parse@@Base+0xb60>
   13ae4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   13ae8:	bl	14200 <argp_parse@@Base+0x12d0>
   13aec:	cmp	r7, #7
   13af0:	movweq	r7, #22
   13af4:	mov	r0, r7
   13af8:	sub	sp, fp, #28
   13afc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b00:	ldr	r0, [fp, #-212]	; 0xffffff2c
   13b04:	ldr	r1, [r0, #12]
   13b08:	cmp	r1, r7
   13b0c:	beq	13b3c <argp_parse@@Base+0xc0c>
   13b10:	ldr	r1, [r0]
   13b14:	cmp	r1, #0
   13b18:	beq	13b3c <argp_parse@@Base+0xc0c>
   13b1c:	add	r1, r0, #16
   13b20:	ldr	r0, [r0, #28]
   13b24:	cmp	r0, r7
   13b28:	mov	r0, r1
   13b2c:	bne	13b10 <argp_parse@@Base+0xbe0>
   13b30:	b	13b40 <argp_parse@@Base+0xc10>
   13b34:	mov	r1, #0
   13b38:	b	13788 <argp_parse@@Base+0x858>
   13b3c:	mov	r1, r0
   13b40:	ldr	r0, [r1]
   13b44:	movw	r2, #48256	; 0xbc80
   13b48:	movw	r1, #48247	; 0xbc77
   13b4c:	movw	r3, #47972	; 0xbb64
   13b50:	movt	r2, #1
   13b54:	movt	r1, #1
   13b58:	movt	r3, #1
   13b5c:	cmp	r0, #0
   13b60:	movne	r2, r0
   13b64:	mov	r0, sl
   13b68:	b	13770 <argp_parse@@Base+0x840>
   13b6c:	mov	ip, r0
   13b70:	mov	r0, #0
   13b74:	cmp	r1, #0
   13b78:	beq	13ba8 <argp_parse@@Base+0xc78>
   13b7c:	ldr	r3, [r1, #52]	; 0x34
   13b80:	ldr	r1, [r3, #48]	; 0x30
   13b84:	ldr	r3, [r3, #52]	; 0x34
   13b88:	b	13b90 <argp_parse@@Base+0xc60>
   13b8c:	add	r1, r1, #36	; 0x24
   13b90:	cmp	r1, r3
   13b94:	bxcs	lr
   13b98:	ldr	r2, [r1, #4]
   13b9c:	cmp	r2, ip
   13ba0:	bne	13b8c <argp_parse@@Base+0xc5c>
   13ba4:	ldr	r0, [r1, #24]
   13ba8:	bx	lr
   13bac:	push	{r4, r5, r6, sl, fp, lr}
   13bb0:	add	fp, sp, #16
   13bb4:	mov	r5, r2
   13bb8:	mov	r6, r1
   13bbc:	mov	r4, #7
   13bc0:	cmn	r0, #3
   13bc4:	bgt	13be8 <argp_parse@@Base+0xcb8>
   13bc8:	cmn	r0, #4
   13bcc:	beq	13c14 <argp_parse@@Base+0xce4>
   13bd0:	cmn	r0, #3
   13bd4:	bne	13c6c <argp_parse@@Base+0xd3c>
   13bd8:	ldr	r1, [r5, #48]	; 0x30
   13bdc:	mov	r0, r5
   13be0:	movw	r2, #513	; 0x201
   13be4:	b	13c04 <argp_parse@@Base+0xcd4>
   13be8:	cmn	r0, #2
   13bec:	beq	13c74 <argp_parse@@Base+0xd44>
   13bf0:	cmp	r0, #63	; 0x3f
   13bf4:	bne	13c6c <argp_parse@@Base+0xd3c>
   13bf8:	ldr	r1, [r5, #48]	; 0x30
   13bfc:	mov	r0, r5
   13c00:	movw	r2, #634	; 0x27a
   13c04:	bl	16890 <argp_state_help@@Base>
   13c08:	mov	r4, #0
   13c0c:	mov	r0, r4
   13c10:	pop	{r4, r5, r6, sl, fp, pc}
   13c14:	movw	r0, #48174	; 0xbc2e
   13c18:	cmp	r6, #0
   13c1c:	mov	r1, #0
   13c20:	mov	r2, #10
   13c24:	mov	r4, #0
   13c28:	movt	r0, #1
   13c2c:	movne	r0, r6
   13c30:	bl	11318 <strtol@plt>
   13c34:	movw	r5, #2260	; 0x8d4
   13c38:	movt	r5, #3
   13c3c:	str	r0, [r5]
   13c40:	ldr	r0, [r5]
   13c44:	subs	r0, r0, #1
   13c48:	str	r0, [r5]
   13c4c:	blt	13c6c <argp_parse@@Base+0xd3c>
   13c50:	mov	r0, #1
   13c54:	bl	113a8 <sleep@plt>
   13c58:	ldr	r0, [r5]
   13c5c:	sub	r1, r0, #1
   13c60:	cmp	r0, #0
   13c64:	str	r1, [r5]
   13c68:	bgt	13c50 <argp_parse@@Base+0xd20>
   13c6c:	mov	r0, r4
   13c70:	pop	{r4, r5, r6, sl, fp, pc}
   13c74:	movw	r0, #2228	; 0x8b4
   13c78:	movt	r0, #3
   13c7c:	str	r6, [r0]
   13c80:	mov	r0, r6
   13c84:	bl	1417c <argp_parse@@Base+0x124c>
   13c88:	movw	r1, #2224	; 0x8b0
   13c8c:	str	r0, [r5, #40]	; 0x28
   13c90:	mov	r4, #0
   13c94:	movt	r1, #3
   13c98:	str	r0, [r1]
   13c9c:	ldr	r0, [r5, #16]
   13ca0:	and	r0, r0, #3
   13ca4:	cmp	r0, #1
   13ca8:	ldreq	r0, [r5, #8]
   13cac:	streq	r6, [r0]
   13cb0:	moveq	r0, r4
   13cb4:	popeq	{r4, r5, r6, sl, fp, pc}
   13cb8:	mov	r0, r4
   13cbc:	pop	{r4, r5, r6, sl, fp, pc}
   13cc0:	push	{r4, sl, fp, lr}
   13cc4:	add	fp, sp, #8
   13cc8:	mov	r1, r0
   13ccc:	mov	r0, #7
   13cd0:	cmp	r1, #86	; 0x56
   13cd4:	popne	{r4, sl, fp, pc}
   13cd8:	movw	r0, #2264	; 0x8d8
   13cdc:	mov	r4, r2
   13ce0:	movt	r0, #3
   13ce4:	ldr	r2, [r0]
   13ce8:	cmp	r2, #0
   13cec:	beq	13d00 <argp_parse@@Base+0xdd0>
   13cf0:	ldr	r0, [r4, #48]	; 0x30
   13cf4:	mov	r1, r4
   13cf8:	blx	r2
   13cfc:	b	13d40 <argp_parse@@Base+0xe10>
   13d00:	movw	r0, #2368	; 0x940
   13d04:	movt	r0, #3
   13d08:	ldr	r2, [r0]
   13d0c:	cmp	r2, #0
   13d10:	beq	13d28 <argp_parse@@Base+0xdf8>
   13d14:	ldr	r0, [r4, #48]	; 0x30
   13d18:	movw	r1, #48404	; 0xbd14
   13d1c:	movt	r1, #1
   13d20:	bl	1148c <fprintf@plt>
   13d24:	b	13d40 <argp_parse@@Base+0xe10>
   13d28:	movw	r1, #49460	; 0xc134
   13d2c:	movw	r2, #48201	; 0xbc49
   13d30:	mov	r0, r4
   13d34:	movt	r1, #1
   13d38:	movt	r2, #1
   13d3c:	bl	1694c <argp_error@@Base>
   13d40:	ldrb	r1, [r4, #16]
   13d44:	mov	r0, #0
   13d48:	tst	r1, #32
   13d4c:	beq	13d54 <argp_parse@@Base+0xe24>
   13d50:	pop	{r4, sl, fp, pc}
   13d54:	mov	r0, #0
   13d58:	bl	11468 <exit@plt>
   13d5c:	push	{r4, r5, fp, lr}
   13d60:	add	fp, sp, #8
   13d64:	ldr	r2, [r0]
   13d68:	ldr	ip, [r0, #16]
   13d6c:	mov	r4, r1
   13d70:	cmp	r2, #0
   13d74:	beq	13de0 <argp_parse@@Base+0xeb0>
   13d78:	ldr	r0, [r4, #8]
   13d7c:	mov	r3, #0
   13d80:	add	r0, r0, #1
   13d84:	str	r0, [r4, #8]
   13d88:	mov	r0, #0
   13d8c:	b	13d98 <argp_parse@@Base+0xe68>
   13d90:	add	r3, r3, #3
   13d94:	add	r0, r0, #1
   13d98:	add	r5, r2, r3, lsl #3
   13d9c:	ldr	r1, [r5, #4]
   13da0:	cmp	r1, #0
   13da4:	bne	13d90 <argp_parse@@Base+0xe60>
   13da8:	ldr	r1, [r2, r3, lsl #3]
   13dac:	cmp	r1, #0
   13db0:	bne	13d90 <argp_parse@@Base+0xe60>
   13db4:	ldr	r1, [r5, #16]
   13db8:	cmp	r1, #0
   13dbc:	bne	13d90 <argp_parse@@Base+0xe60>
   13dc0:	ldr	r1, [r5, #20]
   13dc4:	cmp	r1, #0
   13dc8:	bne	13d90 <argp_parse@@Base+0xe60>
   13dcc:	ldr	r1, [r4]
   13dd0:	mov	r2, r4
   13dd4:	add	r1, r1, r3
   13dd8:	str	r1, [r2], #4
   13ddc:	b	13df4 <argp_parse@@Base+0xec4>
   13de0:	ldr	r0, [r0, #4]
   13de4:	cmp	r0, #0
   13de8:	beq	13e00 <argp_parse@@Base+0xed0>
   13dec:	add	r2, r4, #8
   13df0:	mov	r0, #1
   13df4:	ldr	r1, [r2]
   13df8:	add	r0, r1, r0
   13dfc:	str	r0, [r2]
   13e00:	cmp	ip, #0
   13e04:	ldrne	r0, [ip]
   13e08:	cmpne	r0, #0
   13e0c:	beq	13e34 <argp_parse@@Base+0xf04>
   13e10:	add	r5, ip, #16
   13e14:	mov	r1, r4
   13e18:	bl	13d5c <argp_parse@@Base+0xe2c>
   13e1c:	ldr	r0, [r4, #12]
   13e20:	add	r0, r0, #1
   13e24:	str	r0, [r4, #12]
   13e28:	ldr	r0, [r5], #16
   13e2c:	cmp	r0, #0
   13e30:	bne	13e14 <argp_parse@@Base+0xee4>
   13e34:	pop	{r4, r5, fp, pc}
   13e38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e3c:	add	fp, sp, #28
   13e40:	sub	sp, sp, #28
   13e44:	ldr	r7, [r0]
   13e48:	mov	r6, r3
   13e4c:	mov	r3, r1
   13e50:	ldr	r5, [r0, #16]
   13e54:	ldr	r1, [fp, #8]
   13e58:	cmp	r7, #0
   13e5c:	beq	14038 <argp_parse@@Base+0x1108>
   13e60:	str	r0, [sp, #8]
   13e64:	add	r0, sp, #16
   13e68:	add	r8, r1, #4
   13e6c:	mov	r9, r7
   13e70:	str	r3, [sp, #12]
   13e74:	stm	r0, {r2, r5, r6}
   13e78:	b	13e80 <argp_parse@@Base+0xf50>
   13e7c:	add	r9, r9, #24
   13e80:	ldr	r4, [r9, #4]
   13e84:	cmp	r4, #0
   13e88:	bne	13eb0 <argp_parse@@Base+0xf80>
   13e8c:	ldr	r0, [r9]
   13e90:	cmp	r0, #0
   13e94:	bne	13eb0 <argp_parse@@Base+0xf80>
   13e98:	ldr	r0, [r9, #16]
   13e9c:	cmp	r0, #0
   13ea0:	bne	13eb0 <argp_parse@@Base+0xf80>
   13ea4:	ldr	r0, [r9, #20]
   13ea8:	cmp	r0, #0
   13eac:	beq	14020 <argp_parse@@Base+0x10f0>
   13eb0:	ldr	r0, [r9, #12]
   13eb4:	mov	r5, #0
   13eb8:	tst	r0, #4
   13ebc:	moveq	r7, r9
   13ec0:	ldrb	r1, [r7, #12]
   13ec4:	tst	r1, #8
   13ec8:	bne	13e7c <argp_parse@@Base+0xf4c>
   13ecc:	sub	r1, r4, #1
   13ed0:	cmp	r1, #254	; 0xfe
   13ed4:	bhi	13f50 <argp_parse@@Base+0x1020>
   13ed8:	ands	r0, r0, #8
   13edc:	bne	13f50 <argp_parse@@Base+0x1020>
   13ee0:	bl	1145c <__ctype_b_loc@plt>
   13ee4:	ldr	r0, [r0]
   13ee8:	add	r0, r0, r4, lsl #1
   13eec:	ldrb	r0, [r0, #1]
   13ef0:	tst	r0, #64	; 0x40
   13ef4:	beq	13f50 <argp_parse@@Base+0x1020>
   13ef8:	ldr	r0, [r8]
   13efc:	add	r1, r0, #1
   13f00:	str	r1, [r8]
   13f04:	strb	r4, [r0]
   13f08:	ldr	r0, [r7, #8]
   13f0c:	cmp	r0, #0
   13f10:	beq	13f48 <argp_parse@@Base+0x1018>
   13f14:	ldr	r0, [r8]
   13f18:	add	r1, r0, #1
   13f1c:	str	r1, [r8]
   13f20:	mov	r1, #58	; 0x3a
   13f24:	strb	r1, [r0]
   13f28:	ldrb	r0, [r7, #12]
   13f2c:	tst	r0, #1
   13f30:	beq	13f48 <argp_parse@@Base+0x1018>
   13f34:	ldr	r0, [r8]
   13f38:	add	r1, r0, #1
   13f3c:	str	r1, [r8]
   13f40:	mov	r1, #58	; 0x3a
   13f44:	strb	r1, [r0]
   13f48:	ldr	r0, [r8]
   13f4c:	strb	r5, [r0]
   13f50:	ldr	r5, [r9]
   13f54:	cmp	r5, #0
   13f58:	beq	13e7c <argp_parse@@Base+0xf4c>
   13f5c:	ldr	r0, [fp, #8]
   13f60:	ldr	r4, [r0]
   13f64:	ldr	sl, [r4, #8]
   13f68:	ldr	r0, [sl]
   13f6c:	cmp	r0, #0
   13f70:	beq	13fa4 <argp_parse@@Base+0x1074>
   13f74:	mov	r6, sl
   13f78:	mov	r1, r5
   13f7c:	bl	1130c <strcmp@plt>
   13f80:	cmp	r0, #0
   13f84:	beq	13f98 <argp_parse@@Base+0x1068>
   13f88:	ldr	r0, [r6, #16]!
   13f8c:	cmp	r0, #0
   13f90:	bne	13f78 <argp_parse@@Base+0x1048>
   13f94:	b	13fa4 <argp_parse@@Base+0x1074>
   13f98:	sub	r0, r6, sl
   13f9c:	cmn	r0, #1
   13fa0:	bgt	13e7c <argp_parse@@Base+0xf4c>
   13fa4:	ldr	r6, [fp, #8]
   13fa8:	ldr	r0, [r6, #8]
   13fac:	str	r5, [r0]
   13fb0:	ldr	r1, [r7, #8]
   13fb4:	cmp	r1, #0
   13fb8:	beq	13fd0 <argp_parse@@Base+0x10a0>
   13fbc:	ldrb	r1, [r7, #12]
   13fc0:	tst	r1, #1
   13fc4:	mov	r1, #2
   13fc8:	movweq	r1, #1
   13fcc:	b	13fd4 <argp_parse@@Base+0x10a4>
   13fd0:	mov	r1, #0
   13fd4:	mov	r5, #0
   13fd8:	stmib	r0, {r1, r5}
   13fdc:	ldr	r1, [r9, #4]
   13fe0:	ldr	r3, [sp, #24]
   13fe4:	ldr	r2, [r4, #48]	; 0x30
   13fe8:	cmp	r1, #0
   13fec:	sub	r2, r3, r2
   13ff0:	mov	r3, #956301312	; 0x39000000
   13ff4:	ldreq	r1, [r7, #4]
   13ff8:	lsr	r2, r2, #2
   13ffc:	mul	r2, r2, r3
   14000:	add	r2, r2, #16777216	; 0x1000000
   14004:	bic	r1, r1, #-16777216	; 0xff000000
   14008:	orr	r1, r2, r1
   1400c:	str	r1, [r0, #12]
   14010:	add	r1, r0, #16
   14014:	str	r1, [r6, #8]
   14018:	str	r5, [r0, #16]
   1401c:	b	13e7c <argp_parse@@Base+0xf4c>
   14020:	ldr	r0, [sp, #8]
   14024:	add	r6, sp, #16
   14028:	ldr	r7, [r0, #4]
   1402c:	ldm	r6, {r2, r5, r6}
   14030:	ldr	r3, [sp, #12]
   14034:	b	1404c <argp_parse@@Base+0x111c>
   14038:	ldr	r7, [r0, #4]
   1403c:	cmp	r7, #0
   14040:	beq	140fc <argp_parse@@Base+0x11cc>
   14044:	ldr	r1, [fp, #8]
   14048:	add	r8, r1, #4
   1404c:	str	r0, [r6, #4]
   14050:	str	r7, [r6]
   14054:	mov	r0, #0
   14058:	cmp	r5, #0
   1405c:	ldr	r1, [r8]
   14060:	str	r0, [r6, #12]
   14064:	str	r3, [r6, #16]
   14068:	str	r2, [r6, #20]
   1406c:	str	r0, [r6, #24]
   14070:	str	r0, [r6, #32]
   14074:	str	r0, [r6, #28]
   14078:	str	r1, [r6, #8]
   1407c:	beq	140ac <argp_parse@@Base+0x117c>
   14080:	ldr	r1, [r5, r0, lsl #2]
   14084:	add	r0, r0, #4
   14088:	cmp	r1, #0
   1408c:	bne	14080 <argp_parse@@Base+0x1150>
   14090:	ldr	r1, [fp, #8]
   14094:	mov	r2, r1
   14098:	ldr	r1, [r1, #12]
   1409c:	add	r0, r1, r0
   140a0:	str	r1, [r6, #28]
   140a4:	sub	r0, r0, #4
   140a8:	str	r0, [r2, #12]
   140ac:	add	r3, r6, #36	; 0x24
   140b0:	cmp	r5, #0
   140b4:	ldrne	r0, [r5]
   140b8:	cmpne	r0, #0
   140bc:	beq	140f0 <argp_parse@@Base+0x11c0>
   140c0:	ldr	r7, [fp, #8]
   140c4:	add	r4, r5, #16
   140c8:	mov	r5, #0
   140cc:	mov	r1, r6
   140d0:	mov	r2, r5
   140d4:	str	r7, [sp]
   140d8:	bl	13e38 <argp_parse@@Base+0xf08>
   140dc:	mov	r3, r0
   140e0:	ldr	r0, [r4, r5, lsl #4]
   140e4:	add	r5, r5, #1
   140e8:	cmp	r0, #0
   140ec:	bne	140cc <argp_parse@@Base+0x119c>
   140f0:	mov	r0, r3
   140f4:	sub	sp, fp, #28
   140f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   140fc:	mov	r3, r6
   14100:	mov	r6, #0
   14104:	b	140b0 <argp_parse@@Base+0x1180>
   14108:	movw	r2, #2268	; 0x8dc
   1410c:	movt	r2, #3
   14110:	str	r0, [r2]
   14114:	movw	r0, #2264	; 0x8d8
   14118:	movw	r2, #16696	; 0x4138
   1411c:	movt	r0, #3
   14120:	movt	r2, #1
   14124:	str	r2, [r0]
   14128:	movw	r0, #2272	; 0x8e0
   1412c:	movt	r0, #3
   14130:	str	r1, [r0]
   14134:	bx	lr
   14138:	push	{fp, lr}
   1413c:	mov	fp, sp
   14140:	sub	sp, sp, #8
   14144:	movw	r2, #2272	; 0x8e0
   14148:	movw	r1, #2268	; 0x8dc
   1414c:	movw	r3, #48298	; 0xbcaa
   14150:	movt	r2, #3
   14154:	movt	r1, #3
   14158:	movt	r3, #1
   1415c:	ldr	r2, [r2]
   14160:	ldr	r1, [r1]
   14164:	str	r2, [sp]
   14168:	movw	r2, #48284	; 0xbc9c
   1416c:	movt	r2, #1
   14170:	bl	149ec <_obstack_memory_used@@Base+0x384>
   14174:	mov	sp, fp
   14178:	pop	{fp, pc}
   1417c:	sub	r0, r0, #1
   14180:	ldrb	r3, [r0, #1]!
   14184:	cmp	r3, #47	; 0x2f
   14188:	beq	14180 <argp_parse@@Base+0x1250>
   1418c:	mov	r2, #0
   14190:	mov	r1, r0
   14194:	b	141b0 <argp_parse@@Base+0x1280>
   14198:	cmp	r3, #0
   1419c:	bxeq	lr
   141a0:	tst	r2, #1
   141a4:	mov	r2, #0
   141a8:	movne	r0, r1
   141ac:	ldrb	r3, [r1, #1]!
   141b0:	uxtb	r3, r3
   141b4:	cmp	r3, #47	; 0x2f
   141b8:	bne	14198 <argp_parse@@Base+0x1268>
   141bc:	ldrb	r3, [r1, #1]!
   141c0:	mov	r2, #1
   141c4:	b	141b0 <argp_parse@@Base+0x1280>
   141c8:	push	{r4, sl, fp, lr}
   141cc:	add	fp, sp, #8
   141d0:	mov	r4, r0
   141d4:	bl	11474 <strlen@plt>
   141d8:	mov	r1, r0
   141dc:	sub	r2, r4, #1
   141e0:	mov	r0, r1
   141e4:	cmp	r1, #2
   141e8:	popcc	{r4, sl, fp, pc}
   141ec:	ldrb	r3, [r2, r0]
   141f0:	sub	r1, r0, #1
   141f4:	cmp	r3, #47	; 0x2f
   141f8:	beq	141e0 <argp_parse@@Base+0x12b0>
   141fc:	pop	{r4, sl, fp, pc}
   14200:	push	{r4, r5, r6, sl, fp, lr}
   14204:	add	fp, sp, #16
   14208:	mov	r4, r0
   1420c:	bl	11498 <__errno_location@plt>
   14210:	ldr	r6, [r0]
   14214:	mov	r5, r0
   14218:	mov	r0, r4
   1421c:	bl	11348 <free@plt>
   14220:	str	r6, [r5]
   14224:	pop	{r4, r5, r6, sl, fp, pc}
   14228:	push	{fp, lr}
   1422c:	mov	fp, sp
   14230:	sub	sp, sp, #16
   14234:	mov	ip, #0
   14238:	str	ip, [sp, #8]
   1423c:	str	ip, [sp, #4]
   14240:	ldr	ip, [fp, #8]
   14244:	str	ip, [sp]
   14248:	bl	197ac <argp_failure@@Base+0x2d1c>
   1424c:	mov	sp, fp
   14250:	pop	{fp, pc}
   14254:	push	{fp, lr}
   14258:	mov	fp, sp
   1425c:	sub	sp, sp, #16
   14260:	mov	ip, #0
   14264:	str	ip, [sp, #12]
   14268:	str	ip, [sp, #4]
   1426c:	ldr	ip, [fp, #12]
   14270:	str	ip, [sp, #8]
   14274:	ldr	ip, [fp, #8]
   14278:	str	ip, [sp]
   1427c:	bl	1889c <argp_failure@@Base+0x1e0c>
   14280:	mov	sp, fp
   14284:	pop	{fp, pc}
   14288:	push	{fp, lr}
   1428c:	mov	fp, sp
   14290:	sub	sp, sp, #16
   14294:	mov	ip, #0
   14298:	str	ip, [sp, #8]
   1429c:	mov	ip, #1
   142a0:	str	ip, [sp, #4]
   142a4:	ldr	ip, [fp, #8]
   142a8:	str	ip, [sp]
   142ac:	bl	197ac <argp_failure@@Base+0x2d1c>
   142b0:	mov	sp, fp
   142b4:	pop	{fp, pc}
   142b8:	push	{fp, lr}
   142bc:	mov	fp, sp
   142c0:	sub	sp, sp, #16
   142c4:	mov	ip, #0
   142c8:	str	ip, [sp, #12]
   142cc:	mov	ip, #1
   142d0:	str	ip, [sp, #4]
   142d4:	ldr	ip, [fp, #12]
   142d8:	str	ip, [sp, #8]
   142dc:	ldr	ip, [fp, #8]
   142e0:	str	ip, [sp]
   142e4:	bl	1889c <argp_failure@@Base+0x1e0c>
   142e8:	mov	sp, fp
   142ec:	pop	{fp, pc}

000142f0 <_obstack_begin@@Base>:
   142f0:	push	{r4, r5, r6, sl, fp, lr}
   142f4:	add	fp, sp, #16
   142f8:	cmp	r1, #0
   142fc:	mov	r4, r0
   14300:	str	r3, [r0, #28]
   14304:	mov	r5, r2
   14308:	movweq	r1, #4072	; 0xfe8
   1430c:	cmp	r2, #0
   14310:	str	r1, [r0]
   14314:	ldr	r0, [fp, #8]
   14318:	movweq	r5, #8
   1431c:	sub	r6, r5, #1
   14320:	str	r0, [r4, #32]
   14324:	str	r6, [r4, #24]
   14328:	ldrb	r0, [r4, #40]	; 0x28
   1432c:	and	r0, r0, #254	; 0xfe
   14330:	strb	r0, [r4, #40]	; 0x28
   14334:	mov	r0, r1
   14338:	blx	r3
   1433c:	cmp	r0, #0
   14340:	str	r0, [r4, #4]
   14344:	addne	r1, r6, r0
   14348:	rsbne	r2, r5, #0
   1434c:	addne	r1, r1, #8
   14350:	andne	r1, r1, r2
   14354:	strne	r1, [r4, #12]
   14358:	strne	r1, [r4, #8]
   1435c:	ldrne	r1, [r4]
   14360:	addne	r1, r0, r1
   14364:	strne	r1, [r0]
   14368:	strne	r1, [r4, #16]
   1436c:	movne	r1, #0
   14370:	strne	r1, [r0, #4]
   14374:	ldrbne	r0, [r4, #40]	; 0x28
   14378:	andne	r0, r0, #249	; 0xf9
   1437c:	strbne	r0, [r4, #40]	; 0x28
   14380:	movne	r0, #1
   14384:	popne	{r4, r5, r6, sl, fp, pc}
   14388:	movw	r0, #2156	; 0x86c
   1438c:	movt	r0, #3
   14390:	ldr	r0, [r0]
   14394:	blx	r0

00014398 <_obstack_begin_1@@Base>:
   14398:	push	{r4, r5, r6, sl, fp, lr}
   1439c:	add	fp, sp, #16
   143a0:	cmp	r1, #0
   143a4:	mov	r4, r0
   143a8:	str	r3, [r0, #28]
   143ac:	mov	r5, r2
   143b0:	movweq	r1, #4072	; 0xfe8
   143b4:	cmp	r2, #0
   143b8:	str	r1, [r0]
   143bc:	ldr	r0, [fp, #8]
   143c0:	movweq	r5, #8
   143c4:	sub	r6, r5, #1
   143c8:	str	r0, [r4, #32]
   143cc:	ldr	r0, [fp, #12]
   143d0:	str	r0, [r4, #36]	; 0x24
   143d4:	str	r6, [r4, #24]
   143d8:	ldrb	r2, [r4, #40]	; 0x28
   143dc:	orr	r2, r2, #1
   143e0:	strb	r2, [r4, #40]	; 0x28
   143e4:	blx	r3
   143e8:	cmp	r0, #0
   143ec:	str	r0, [r4, #4]
   143f0:	addne	r1, r6, r0
   143f4:	rsbne	r2, r5, #0
   143f8:	addne	r1, r1, #8
   143fc:	andne	r1, r1, r2
   14400:	strne	r1, [r4, #12]
   14404:	strne	r1, [r4, #8]
   14408:	ldrne	r1, [r4]
   1440c:	addne	r1, r0, r1
   14410:	strne	r1, [r0]
   14414:	strne	r1, [r4, #16]
   14418:	movne	r1, #0
   1441c:	strne	r1, [r0, #4]
   14420:	ldrbne	r0, [r4, #40]	; 0x28
   14424:	andne	r0, r0, #249	; 0xf9
   14428:	strbne	r0, [r4, #40]	; 0x28
   1442c:	movne	r0, #1
   14430:	popne	{r4, r5, r6, sl, fp, pc}
   14434:	movw	r0, #2156	; 0x86c
   14438:	movt	r0, #3
   1443c:	ldr	r0, [r0]
   14440:	blx	r0

00014444 <_obstack_newchunk@@Base>:
   14444:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14448:	add	fp, sp, #28
   1444c:	sub	sp, sp, #4
   14450:	mov	r4, r0
   14454:	ldr	r2, [r0]
   14458:	ldr	r0, [r0, #8]
   1445c:	ldr	r3, [r4, #12]
   14460:	sub	r9, r3, r0
   14464:	ldr	r0, [r4, #24]
   14468:	mov	r3, #0
   1446c:	add	r1, r9, r1
   14470:	adds	r6, r1, r0
   14474:	adc	r0, r3, #0
   14478:	mov	r3, #100	; 0x64
   1447c:	add	r3, r3, r9, lsr #3
   14480:	adds	r7, r3, r6
   14484:	movcs	r7, r6
   14488:	cmp	r7, r2
   1448c:	movcc	r7, r2
   14490:	cmp	r1, r9
   14494:	bcc	1458c <_obstack_newchunk@@Base+0x148>
   14498:	cmp	r0, #0
   1449c:	bne	1458c <_obstack_newchunk@@Base+0x148>
   144a0:	ldrb	r0, [r4, #40]	; 0x28
   144a4:	ldr	r8, [r4, #4]
   144a8:	tst	r0, #1
   144ac:	bne	144c0 <_obstack_newchunk@@Base+0x7c>
   144b0:	ldr	r1, [r4, #28]
   144b4:	mov	r0, r7
   144b8:	blx	r1
   144bc:	b	144d0 <_obstack_newchunk@@Base+0x8c>
   144c0:	ldr	r2, [r4, #28]
   144c4:	ldr	r0, [r4, #36]	; 0x24
   144c8:	mov	r1, r7
   144cc:	blx	r2
   144d0:	mov	r6, r0
   144d4:	cmp	r0, #0
   144d8:	beq	1458c <_obstack_newchunk@@Base+0x148>
   144dc:	add	r0, r6, r7
   144e0:	str	r6, [r4, #4]
   144e4:	str	r8, [r6, #4]
   144e8:	mov	r2, r9
   144ec:	str	r0, [r4, #16]
   144f0:	str	r0, [r6]
   144f4:	ldr	r5, [r4, #24]
   144f8:	ldr	sl, [r4, #8]
   144fc:	add	r0, r5, r6
   14500:	mov	r1, sl
   14504:	add	r0, r0, #8
   14508:	bic	r7, r0, r5
   1450c:	mov	r0, r7
   14510:	bl	11384 <memcpy@plt>
   14514:	ldrb	r0, [r4, #40]	; 0x28
   14518:	tst	r0, #2
   1451c:	bne	1456c <_obstack_newchunk@@Base+0x128>
   14520:	add	r1, r5, r8
   14524:	mvn	r0, r5
   14528:	add	r1, r1, #8
   1452c:	and	r0, r1, r0
   14530:	cmp	sl, r0
   14534:	bne	1456c <_obstack_newchunk@@Base+0x128>
   14538:	ldr	r0, [r8, #4]
   1453c:	str	r0, [r6, #4]
   14540:	ldrb	r0, [r4, #40]	; 0x28
   14544:	tst	r0, #1
   14548:	bne	1455c <_obstack_newchunk@@Base+0x118>
   1454c:	ldr	r1, [r4, #32]
   14550:	mov	r0, r8
   14554:	blx	r1
   14558:	b	1456c <_obstack_newchunk@@Base+0x128>
   1455c:	ldr	r2, [r4, #32]
   14560:	ldr	r0, [r4, #36]	; 0x24
   14564:	mov	r1, r8
   14568:	blx	r2
   1456c:	add	r0, r7, r9
   14570:	str	r7, [r4, #8]
   14574:	str	r0, [r4, #12]
   14578:	ldrb	r0, [r4, #40]	; 0x28
   1457c:	and	r0, r0, #253	; 0xfd
   14580:	strb	r0, [r4, #40]	; 0x28
   14584:	sub	sp, fp, #28
   14588:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1458c:	movw	r0, #2156	; 0x86c
   14590:	movt	r0, #3
   14594:	ldr	r0, [r0]
   14598:	blx	r0

0001459c <_obstack_allocated_p@@Base>:
   1459c:	ldr	r2, [r0, #4]
   145a0:	mov	r0, #0
   145a4:	b	145ac <_obstack_allocated_p@@Base+0x10>
   145a8:	ldr	r2, [r2, #4]
   145ac:	cmp	r2, #0
   145b0:	bxeq	lr
   145b4:	cmp	r2, r1
   145b8:	bcs	145a8 <_obstack_allocated_p@@Base+0xc>
   145bc:	ldr	r3, [r2]
   145c0:	cmp	r3, r1
   145c4:	bcc	145a8 <_obstack_allocated_p@@Base+0xc>
   145c8:	mov	r0, #1
   145cc:	bx	lr

000145d0 <_obstack_free@@Base>:
   145d0:	push	{r4, r5, r6, sl, fp, lr}
   145d4:	add	fp, sp, #16
   145d8:	mov	r5, r1
   145dc:	ldr	r1, [r0, #4]
   145e0:	cmp	r1, #0
   145e4:	beq	14644 <_obstack_free@@Base+0x74>
   145e8:	mov	r4, r0
   145ec:	cmp	r1, r5
   145f0:	bcs	14600 <_obstack_free@@Base+0x30>
   145f4:	ldr	r0, [r1]
   145f8:	cmp	r0, r5
   145fc:	bcs	14650 <_obstack_free@@Base+0x80>
   14600:	ldrb	r0, [r4, #40]	; 0x28
   14604:	ldr	r6, [r1, #4]
   14608:	tst	r0, #1
   1460c:	bne	14620 <_obstack_free@@Base+0x50>
   14610:	ldr	r2, [r4, #32]
   14614:	mov	r0, r1
   14618:	blx	r2
   1461c:	b	1462c <_obstack_free@@Base+0x5c>
   14620:	ldr	r2, [r4, #32]
   14624:	ldr	r0, [r4, #36]	; 0x24
   14628:	blx	r2
   1462c:	ldrb	r0, [r4, #40]	; 0x28
   14630:	cmp	r6, #0
   14634:	mov	r1, r6
   14638:	orr	r0, r0, #2
   1463c:	strb	r0, [r4, #40]	; 0x28
   14640:	bne	145ec <_obstack_free@@Base+0x1c>
   14644:	cmp	r5, #0
   14648:	popeq	{r4, r5, r6, sl, fp, pc}
   1464c:	bl	115a0 <abort@plt>
   14650:	str	r5, [r4, #8]
   14654:	str	r5, [r4, #12]
   14658:	ldr	r0, [r1]
   1465c:	str	r1, [r4, #4]
   14660:	str	r0, [r4, #16]
   14664:	pop	{r4, r5, r6, sl, fp, pc}

00014668 <_obstack_memory_used@@Base>:
   14668:	ldr	r1, [r0, #4]
   1466c:	mov	r0, #0
   14670:	b	14684 <_obstack_memory_used@@Base+0x1c>
   14674:	ldr	r2, [r1]
   14678:	sub	r0, r0, r1
   1467c:	ldr	r1, [r1, #4]
   14680:	add	r0, r0, r2
   14684:	cmp	r1, #0
   14688:	bxeq	lr
   1468c:	b	14674 <_obstack_memory_used@@Base+0xc>
   14690:	push	{fp, lr}
   14694:	mov	fp, sp
   14698:	movw	r0, #2232	; 0x8b8
   1469c:	movw	r1, #48404	; 0xbd14
   146a0:	movw	r2, #48311	; 0xbcb7
   146a4:	movt	r0, #3
   146a8:	movt	r1, #1
   146ac:	movt	r2, #1
   146b0:	ldr	r0, [r0]
   146b4:	bl	1148c <fprintf@plt>
   146b8:	movw	r0, #2200	; 0x898
   146bc:	movt	r0, #3
   146c0:	ldr	r0, [r0]
   146c4:	bl	11468 <exit@plt>
   146c8:	push	{r4, r5, fp, lr}
   146cc:	add	fp, sp, #8
   146d0:	cmp	r0, #0
   146d4:	beq	14768 <_obstack_memory_used@@Base+0x100>
   146d8:	mov	r1, #47	; 0x2f
   146dc:	mov	r4, r0
   146e0:	bl	114ec <strrchr@plt>
   146e4:	cmp	r0, #0
   146e8:	mov	r5, r4
   146ec:	addne	r5, r0, #1
   146f0:	sub	r0, r5, r4
   146f4:	cmp	r0, #7
   146f8:	blt	1474c <_obstack_memory_used@@Base+0xe4>
   146fc:	movw	r1, #48384	; 0xbd00
   14700:	sub	r0, r5, #7
   14704:	mov	r2, #7
   14708:	movt	r1, #1
   1470c:	bl	11594 <strncmp@plt>
   14710:	cmp	r0, #0
   14714:	bne	1474c <_obstack_memory_used@@Base+0xe4>
   14718:	movw	r1, #48392	; 0xbd08
   1471c:	mov	r0, r5
   14720:	mov	r2, #3
   14724:	movt	r1, #1
   14728:	bl	11594 <strncmp@plt>
   1472c:	cmp	r0, #0
   14730:	beq	1473c <_obstack_memory_used@@Base+0xd4>
   14734:	mov	r4, r5
   14738:	b	1474c <_obstack_memory_used@@Base+0xe4>
   1473c:	movw	r0, #2224	; 0x8b0
   14740:	add	r4, r5, #3
   14744:	movt	r0, #3
   14748:	str	r4, [r0]
   1474c:	movw	r0, #2228	; 0x8b4
   14750:	movt	r0, #3
   14754:	str	r4, [r0]
   14758:	movw	r0, #2276	; 0x8e4
   1475c:	movt	r0, #3
   14760:	str	r4, [r0]
   14764:	pop	{r4, r5, fp, pc}
   14768:	movw	r0, #2232	; 0x8b8
   1476c:	mov	r1, #55	; 0x37
   14770:	mov	r2, #1
   14774:	movt	r0, #3
   14778:	ldr	r3, [r0]
   1477c:	movw	r0, #48328	; 0xbcc8
   14780:	movt	r0, #1
   14784:	bl	113d8 <fwrite@plt>
   14788:	bl	115a0 <abort@plt>
   1478c:	push	{r4, r5, r6, r7, fp, lr}
   14790:	add	fp, sp, #16
   14794:	sub	sp, sp, #32
   14798:	ldr	r7, [fp, #12]
   1479c:	ldr	r6, [fp, #8]
   147a0:	mov	r4, r2
   147a4:	mov	r5, r0
   147a8:	cmp	r1, #0
   147ac:	beq	147cc <_obstack_memory_used@@Base+0x164>
   147b0:	mov	r2, r1
   147b4:	movw	r1, #48396	; 0xbd0c
   147b8:	str	r3, [sp]
   147bc:	mov	r0, r5
   147c0:	mov	r3, r4
   147c4:	movt	r1, #1
   147c8:	b	147dc <_obstack_memory_used@@Base+0x174>
   147cc:	movw	r1, #48408	; 0xbd18
   147d0:	mov	r0, r5
   147d4:	mov	r2, r4
   147d8:	movt	r1, #1
   147dc:	bl	1148c <fprintf@plt>
   147e0:	movw	r1, #49172	; 0xc014
   147e4:	movw	r2, #48415	; 0xbd1f
   147e8:	mov	r0, r5
   147ec:	movw	r3, #2022	; 0x7e6
   147f0:	movt	r1, #1
   147f4:	movt	r2, #1
   147f8:	bl	1148c <fprintf@plt>
   147fc:	mov	r0, #10
   14800:	mov	r1, r5
   14804:	bl	11504 <fputc@plt>
   14808:	movw	r1, #48419	; 0xbd23
   1480c:	movw	r2, #48590	; 0xbdce
   14810:	mov	r0, r5
   14814:	movt	r1, #1
   14818:	movt	r2, #1
   1481c:	bl	1148c <fprintf@plt>
   14820:	mov	r0, #10
   14824:	mov	r1, r5
   14828:	bl	11504 <fputc@plt>
   1482c:	cmp	r7, #9
   14830:	bhi	1486c <_obstack_memory_used@@Base+0x204>
   14834:	add	r0, pc, #0
   14838:	ldr	pc, [r0, r7, lsl #2]
   1483c:	andeq	r4, r1, r4, ror #16
   14840:	andeq	r4, r1, r0, lsr #17
   14844:			; <UNDEFINED> instruction: 0x000148bc
   14848:	ldrdeq	r4, [r1], -r8
   1484c:	strdeq	r4, [r1], -r0
   14850:	andeq	r4, r1, ip, lsl #18
   14854:	andeq	r4, r1, r8, lsr #18
   14858:	andeq	r4, r1, ip, asr #18
   1485c:	andeq	r4, r1, ip, lsr #19
   14860:	andeq	r4, r1, r8, ror r9
   14864:	sub	sp, fp, #16
   14868:	pop	{r4, r5, r6, r7, fp, pc}
   1486c:	add	r7, r6, #8
   14870:	ldm	r6, {r2, r3}
   14874:	add	lr, r6, #20
   14878:	ldm	r7, {r0, r1, r7}
   1487c:	ldm	lr, {r4, ip, lr}
   14880:	ldr	r6, [r6, #32]
   14884:	stm	sp, {r0, r1, r7}
   14888:	movw	r1, #48943	; 0xbf2f
   1488c:	add	r0, sp, #12
   14890:	stm	r0, {r4, ip, lr}
   14894:	str	r6, [sp, #24]
   14898:	movt	r1, #1
   1489c:	b	149dc <_obstack_memory_used@@Base+0x374>
   148a0:	ldr	r2, [r6]
   148a4:	movw	r1, #48624	; 0xbdf0
   148a8:	mov	r0, r5
   148ac:	movt	r1, #1
   148b0:	sub	sp, fp, #16
   148b4:	pop	{r4, r5, r6, r7, fp, lr}
   148b8:	b	1148c <fprintf@plt>
   148bc:	ldm	r6, {r2, r3}
   148c0:	movw	r1, #48640	; 0xbe00
   148c4:	mov	r0, r5
   148c8:	movt	r1, #1
   148cc:	sub	sp, fp, #16
   148d0:	pop	{r4, r5, r6, r7, fp, lr}
   148d4:	b	1148c <fprintf@plt>
   148d8:	ldm	r6, {r2, r3}
   148dc:	ldr	r0, [r6, #8]
   148e0:	movw	r1, #48663	; 0xbe17
   148e4:	movt	r1, #1
   148e8:	str	r0, [sp]
   148ec:	b	149dc <_obstack_memory_used@@Base+0x374>
   148f0:	ldm	r6, {r2, r3}
   148f4:	ldr	r0, [r6, #8]
   148f8:	ldr	r1, [r6, #12]
   148fc:	stm	sp, {r0, r1}
   14900:	movw	r1, #48691	; 0xbe33
   14904:	movt	r1, #1
   14908:	b	149dc <_obstack_memory_used@@Base+0x374>
   1490c:	add	r7, r6, #8
   14910:	ldm	r6, {r2, r3}
   14914:	ldm	r7, {r0, r1, r7}
   14918:	stm	sp, {r0, r1, r7}
   1491c:	movw	r1, #48723	; 0xbe53
   14920:	movt	r1, #1
   14924:	b	149dc <_obstack_memory_used@@Base+0x374>
   14928:	add	r7, r6, #8
   1492c:	ldm	r6, {r2, r3}
   14930:	ldm	r7, {r0, r1, r7}
   14934:	ldr	r6, [r6, #20]
   14938:	stm	sp, {r0, r1, r7}
   1493c:	movw	r1, #48759	; 0xbe77
   14940:	str	r6, [sp, #12]
   14944:	movt	r1, #1
   14948:	b	149dc <_obstack_memory_used@@Base+0x374>
   1494c:	add	r7, r6, #8
   14950:	ldm	r6, {r2, r3}
   14954:	ldm	r7, {r0, r1, r7}
   14958:	ldr	r4, [r6, #20]
   1495c:	ldr	r6, [r6, #24]
   14960:	stm	sp, {r0, r1, r7}
   14964:	movw	r1, #48799	; 0xbe9f
   14968:	str	r4, [sp, #12]
   1496c:	str	r6, [sp, #16]
   14970:	movt	r1, #1
   14974:	b	149dc <_obstack_memory_used@@Base+0x374>
   14978:	add	r7, r6, #8
   1497c:	ldm	r6, {r2, r3}
   14980:	add	lr, r6, #20
   14984:	ldm	r7, {r0, r1, r7}
   14988:	ldm	lr, {r4, ip, lr}
   1498c:	ldr	r6, [r6, #32]
   14990:	stm	sp, {r0, r1, r7}
   14994:	movw	r1, #48891	; 0xbefb
   14998:	add	r0, sp, #12
   1499c:	stm	r0, {r4, ip, lr}
   149a0:	str	r6, [sp, #24]
   149a4:	movt	r1, #1
   149a8:	b	149dc <_obstack_memory_used@@Base+0x374>
   149ac:	add	r7, r6, #8
   149b0:	ldm	r6, {r2, r3}
   149b4:	ldm	r7, {r0, r1, r7}
   149b8:	ldr	r4, [r6, #20]
   149bc:	ldr	ip, [r6, #24]
   149c0:	ldr	r6, [r6, #28]
   149c4:	stm	sp, {r0, r1, r7}
   149c8:	movw	r1, #48843	; 0xbecb
   149cc:	str	r4, [sp, #12]
   149d0:	str	ip, [sp, #16]
   149d4:	str	r6, [sp, #20]
   149d8:	movt	r1, #1
   149dc:	mov	r0, r5
   149e0:	bl	1148c <fprintf@plt>
   149e4:	sub	sp, fp, #16
   149e8:	pop	{r4, r5, r6, r7, fp, pc}
   149ec:	push	{r4, sl, fp, lr}
   149f0:	add	fp, sp, #8
   149f4:	sub	sp, sp, #8
   149f8:	ldr	ip, [fp, #8]
   149fc:	mov	lr, #0
   14a00:	ldr	r4, [ip, lr, lsl #2]
   14a04:	add	lr, lr, #1
   14a08:	cmp	r4, #0
   14a0c:	bne	14a00 <_obstack_memory_used@@Base+0x398>
   14a10:	sub	r4, lr, #1
   14a14:	str	ip, [sp]
   14a18:	str	r4, [sp, #4]
   14a1c:	bl	1478c <_obstack_memory_used@@Base+0x124>
   14a20:	sub	sp, fp, #8
   14a24:	pop	{r4, sl, fp, pc}
   14a28:	push	{fp, lr}
   14a2c:	mov	fp, sp
   14a30:	sub	sp, sp, #48	; 0x30
   14a34:	ldr	ip, [fp, #8]
   14a38:	ldr	lr, [ip]
   14a3c:	cmp	lr, #0
   14a40:	str	lr, [sp, #8]
   14a44:	beq	14ae0 <_obstack_memory_used@@Base+0x478>
   14a48:	ldr	lr, [ip, #4]
   14a4c:	cmp	lr, #0
   14a50:	str	lr, [sp, #12]
   14a54:	beq	14ae8 <_obstack_memory_used@@Base+0x480>
   14a58:	ldr	lr, [ip, #8]
   14a5c:	cmp	lr, #0
   14a60:	str	lr, [sp, #16]
   14a64:	beq	14af0 <_obstack_memory_used@@Base+0x488>
   14a68:	ldr	lr, [ip, #12]
   14a6c:	cmp	lr, #0
   14a70:	str	lr, [sp, #20]
   14a74:	beq	14af8 <_obstack_memory_used@@Base+0x490>
   14a78:	ldr	lr, [ip, #16]
   14a7c:	cmp	lr, #0
   14a80:	str	lr, [sp, #24]
   14a84:	beq	14b00 <_obstack_memory_used@@Base+0x498>
   14a88:	ldr	lr, [ip, #20]
   14a8c:	cmp	lr, #0
   14a90:	str	lr, [sp, #28]
   14a94:	beq	14b08 <_obstack_memory_used@@Base+0x4a0>
   14a98:	ldr	lr, [ip, #24]
   14a9c:	cmp	lr, #0
   14aa0:	str	lr, [sp, #32]
   14aa4:	beq	14b10 <_obstack_memory_used@@Base+0x4a8>
   14aa8:	ldr	lr, [ip, #28]
   14aac:	cmp	lr, #0
   14ab0:	str	lr, [sp, #36]	; 0x24
   14ab4:	beq	14b18 <_obstack_memory_used@@Base+0x4b0>
   14ab8:	ldr	lr, [ip, #32]
   14abc:	cmp	lr, #0
   14ac0:	str	lr, [sp, #40]	; 0x28
   14ac4:	beq	14b20 <_obstack_memory_used@@Base+0x4b8>
   14ac8:	ldr	lr, [ip, #36]	; 0x24
   14acc:	mov	ip, #10
   14ad0:	cmp	lr, #0
   14ad4:	str	lr, [sp, #44]	; 0x2c
   14ad8:	movweq	ip, #9
   14adc:	b	14b24 <_obstack_memory_used@@Base+0x4bc>
   14ae0:	mov	ip, #0
   14ae4:	b	14b24 <_obstack_memory_used@@Base+0x4bc>
   14ae8:	mov	ip, #1
   14aec:	b	14b24 <_obstack_memory_used@@Base+0x4bc>
   14af0:	mov	ip, #2
   14af4:	b	14b24 <_obstack_memory_used@@Base+0x4bc>
   14af8:	mov	ip, #3
   14afc:	b	14b24 <_obstack_memory_used@@Base+0x4bc>
   14b00:	mov	ip, #4
   14b04:	b	14b24 <_obstack_memory_used@@Base+0x4bc>
   14b08:	mov	ip, #5
   14b0c:	b	14b24 <_obstack_memory_used@@Base+0x4bc>
   14b10:	mov	ip, #6
   14b14:	b	14b24 <_obstack_memory_used@@Base+0x4bc>
   14b18:	mov	ip, #7
   14b1c:	b	14b24 <_obstack_memory_used@@Base+0x4bc>
   14b20:	mov	ip, #8
   14b24:	add	lr, sp, #8
   14b28:	str	ip, [sp, #4]
   14b2c:	str	lr, [sp]
   14b30:	bl	1478c <_obstack_memory_used@@Base+0x124>
   14b34:	mov	sp, fp
   14b38:	pop	{fp, pc}
   14b3c:	push	{fp, lr}
   14b40:	mov	fp, sp
   14b44:	sub	sp, sp, #56	; 0x38
   14b48:	add	ip, fp, #8
   14b4c:	str	ip, [sp, #12]
   14b50:	ldr	lr, [fp, #8]
   14b54:	cmp	lr, #0
   14b58:	str	lr, [sp, #16]
   14b5c:	beq	14bf8 <_obstack_memory_used@@Base+0x590>
   14b60:	ldr	lr, [ip, #4]
   14b64:	cmp	lr, #0
   14b68:	str	lr, [sp, #20]
   14b6c:	beq	14c00 <_obstack_memory_used@@Base+0x598>
   14b70:	ldr	lr, [ip, #8]
   14b74:	cmp	lr, #0
   14b78:	str	lr, [sp, #24]
   14b7c:	beq	14c08 <_obstack_memory_used@@Base+0x5a0>
   14b80:	ldr	lr, [ip, #12]
   14b84:	cmp	lr, #0
   14b88:	str	lr, [sp, #28]
   14b8c:	beq	14c10 <_obstack_memory_used@@Base+0x5a8>
   14b90:	ldr	lr, [ip, #16]
   14b94:	cmp	lr, #0
   14b98:	str	lr, [sp, #32]
   14b9c:	beq	14c18 <_obstack_memory_used@@Base+0x5b0>
   14ba0:	ldr	lr, [ip, #20]
   14ba4:	cmp	lr, #0
   14ba8:	str	lr, [sp, #36]	; 0x24
   14bac:	beq	14c20 <_obstack_memory_used@@Base+0x5b8>
   14bb0:	ldr	lr, [ip, #24]
   14bb4:	cmp	lr, #0
   14bb8:	str	lr, [sp, #40]	; 0x28
   14bbc:	beq	14c28 <_obstack_memory_used@@Base+0x5c0>
   14bc0:	ldr	lr, [ip, #28]
   14bc4:	cmp	lr, #0
   14bc8:	str	lr, [sp, #44]	; 0x2c
   14bcc:	beq	14c30 <_obstack_memory_used@@Base+0x5c8>
   14bd0:	ldr	lr, [ip, #32]
   14bd4:	cmp	lr, #0
   14bd8:	str	lr, [sp, #48]	; 0x30
   14bdc:	beq	14c38 <_obstack_memory_used@@Base+0x5d0>
   14be0:	ldr	lr, [ip, #36]	; 0x24
   14be4:	mov	ip, #10
   14be8:	cmp	lr, #0
   14bec:	str	lr, [sp, #52]	; 0x34
   14bf0:	movweq	ip, #9
   14bf4:	b	14c3c <_obstack_memory_used@@Base+0x5d4>
   14bf8:	mov	ip, #0
   14bfc:	b	14c3c <_obstack_memory_used@@Base+0x5d4>
   14c00:	mov	ip, #1
   14c04:	b	14c3c <_obstack_memory_used@@Base+0x5d4>
   14c08:	mov	ip, #2
   14c0c:	b	14c3c <_obstack_memory_used@@Base+0x5d4>
   14c10:	mov	ip, #3
   14c14:	b	14c3c <_obstack_memory_used@@Base+0x5d4>
   14c18:	mov	ip, #4
   14c1c:	b	14c3c <_obstack_memory_used@@Base+0x5d4>
   14c20:	mov	ip, #5
   14c24:	b	14c3c <_obstack_memory_used@@Base+0x5d4>
   14c28:	mov	ip, #6
   14c2c:	b	14c3c <_obstack_memory_used@@Base+0x5d4>
   14c30:	mov	ip, #7
   14c34:	b	14c3c <_obstack_memory_used@@Base+0x5d4>
   14c38:	mov	ip, #8
   14c3c:	add	lr, sp, #16
   14c40:	str	ip, [sp, #4]
   14c44:	str	lr, [sp]
   14c48:	bl	1478c <_obstack_memory_used@@Base+0x124>
   14c4c:	mov	sp, fp
   14c50:	pop	{fp, pc}
   14c54:	push	{fp, lr}
   14c58:	mov	fp, sp
   14c5c:	movw	r0, #2236	; 0x8bc
   14c60:	movt	r0, #3
   14c64:	ldr	r1, [r0]
   14c68:	mov	r0, #10
   14c6c:	bl	11504 <fputc@plt>
   14c70:	movw	r0, #49003	; 0xbf6b
   14c74:	movw	r1, #49023	; 0xbf7f
   14c78:	movt	r0, #1
   14c7c:	movt	r1, #1
   14c80:	bl	11324 <printf@plt>
   14c84:	movw	r0, #49045	; 0xbf95
   14c88:	movw	r1, #48284	; 0xbc9c
   14c8c:	movw	r2, #49065	; 0xbfa9
   14c90:	movt	r0, #1
   14c94:	movt	r1, #1
   14c98:	movt	r2, #1
   14c9c:	bl	11324 <printf@plt>
   14ca0:	movw	r0, #49104	; 0xbfd0
   14ca4:	movw	r1, #49143	; 0xbff7
   14ca8:	movt	r0, #1
   14cac:	movt	r1, #1
   14cb0:	pop	{fp, lr}
   14cb4:	b	11324 <printf@plt>
   14cb8:	push	{r4, r5, r6, sl, fp, lr}
   14cbc:	add	fp, sp, #16
   14cc0:	mov	r4, r2
   14cc4:	mov	r5, r1
   14cc8:	mov	r6, r0
   14ccc:	bl	198a8 <argp_failure@@Base+0x2e18>
   14cd0:	cmp	r0, #0
   14cd4:	popne	{r4, r5, r6, sl, fp, pc}
   14cd8:	cmp	r6, #0
   14cdc:	beq	14cf0 <_obstack_memory_used@@Base+0x688>
   14ce0:	cmp	r5, #0
   14ce4:	cmpne	r4, #0
   14ce8:	bne	14cf0 <_obstack_memory_used@@Base+0x688>
   14cec:	pop	{r4, r5, r6, sl, fp, pc}
   14cf0:	bl	15290 <_obstack_memory_used@@Base+0xc28>
   14cf4:	push	{r4, r5, r6, sl, fp, lr}
   14cf8:	add	fp, sp, #16
   14cfc:	mov	r4, r2
   14d00:	mov	r5, r1
   14d04:	mov	r6, r0
   14d08:	bl	198a8 <argp_failure@@Base+0x2e18>
   14d0c:	cmp	r0, #0
   14d10:	popne	{r4, r5, r6, sl, fp, pc}
   14d14:	cmp	r6, #0
   14d18:	beq	14d2c <_obstack_memory_used@@Base+0x6c4>
   14d1c:	cmp	r5, #0
   14d20:	cmpne	r4, #0
   14d24:	bne	14d2c <_obstack_memory_used@@Base+0x6c4>
   14d28:	pop	{r4, r5, r6, sl, fp, pc}
   14d2c:	bl	15290 <_obstack_memory_used@@Base+0xc28>
   14d30:	push	{fp, lr}
   14d34:	mov	fp, sp
   14d38:	bl	15314 <_obstack_memory_used@@Base+0xcac>
   14d3c:	cmp	r0, #0
   14d40:	popne	{fp, pc}
   14d44:	bl	15290 <_obstack_memory_used@@Base+0xc28>
   14d48:	push	{fp, lr}
   14d4c:	mov	fp, sp
   14d50:	bl	15314 <_obstack_memory_used@@Base+0xcac>
   14d54:	cmp	r0, #0
   14d58:	popne	{fp, pc}
   14d5c:	bl	15290 <_obstack_memory_used@@Base+0xc28>
   14d60:	push	{fp, lr}
   14d64:	mov	fp, sp
   14d68:	bl	15314 <_obstack_memory_used@@Base+0xcac>
   14d6c:	cmp	r0, #0
   14d70:	popne	{fp, pc}
   14d74:	bl	15290 <_obstack_memory_used@@Base+0xc28>
   14d78:	push	{r4, r5, fp, lr}
   14d7c:	add	fp, sp, #8
   14d80:	mov	r4, r1
   14d84:	mov	r5, r0
   14d88:	bl	15344 <_obstack_memory_used@@Base+0xcdc>
   14d8c:	cmp	r0, #0
   14d90:	popne	{r4, r5, fp, pc}
   14d94:	cmp	r5, #0
   14d98:	beq	14da8 <_obstack_memory_used@@Base+0x740>
   14d9c:	cmp	r4, #0
   14da0:	bne	14da8 <_obstack_memory_used@@Base+0x740>
   14da4:	pop	{r4, r5, fp, pc}
   14da8:	bl	15290 <_obstack_memory_used@@Base+0xc28>
   14dac:	push	{fp, lr}
   14db0:	mov	fp, sp
   14db4:	cmp	r1, #0
   14db8:	orreq	r1, r1, #1
   14dbc:	bl	15344 <_obstack_memory_used@@Base+0xcdc>
   14dc0:	cmp	r0, #0
   14dc4:	popne	{fp, pc}
   14dc8:	bl	15290 <_obstack_memory_used@@Base+0xc28>
   14dcc:	push	{fp, lr}
   14dd0:	mov	fp, sp
   14dd4:	clz	r3, r2
   14dd8:	lsr	ip, r3, #5
   14ddc:	clz	r3, r1
   14de0:	lsr	r3, r3, #5
   14de4:	orrs	r3, r3, ip
   14de8:	movwne	r1, #1
   14dec:	movwne	r2, #1
   14df0:	bl	198a8 <argp_failure@@Base+0x2e18>
   14df4:	cmp	r0, #0
   14df8:	popne	{fp, pc}
   14dfc:	bl	15290 <_obstack_memory_used@@Base+0xc28>
   14e00:	push	{fp, lr}
   14e04:	mov	fp, sp
   14e08:	mov	r2, r1
   14e0c:	mov	r1, r0
   14e10:	mov	r0, #0
   14e14:	bl	198a8 <argp_failure@@Base+0x2e18>
   14e18:	cmp	r0, #0
   14e1c:	popne	{fp, pc}
   14e20:	bl	15290 <_obstack_memory_used@@Base+0xc28>
   14e24:	push	{fp, lr}
   14e28:	mov	fp, sp
   14e2c:	mov	r2, r1
   14e30:	mov	r1, r0
   14e34:	clz	r0, r2
   14e38:	clz	r3, r1
   14e3c:	lsr	r0, r0, #5
   14e40:	lsr	r3, r3, #5
   14e44:	orrs	r0, r3, r0
   14e48:	movwne	r1, #1
   14e4c:	movwne	r2, #1
   14e50:	mov	r0, #0
   14e54:	bl	198a8 <argp_failure@@Base+0x2e18>
   14e58:	cmp	r0, #0
   14e5c:	popne	{fp, pc}
   14e60:	bl	15290 <_obstack_memory_used@@Base+0xc28>
   14e64:	push	{r4, r5, r6, sl, fp, lr}
   14e68:	add	fp, sp, #16
   14e6c:	ldr	r5, [r1]
   14e70:	mov	r4, r1
   14e74:	mov	r6, r0
   14e78:	cmp	r0, #0
   14e7c:	beq	14e94 <_obstack_memory_used@@Base+0x82c>
   14e80:	mov	r0, #1
   14e84:	add	r0, r0, r5, lsr #1
   14e88:	adds	r5, r5, r0
   14e8c:	bcc	14e9c <_obstack_memory_used@@Base+0x834>
   14e90:	b	14ed8 <_obstack_memory_used@@Base+0x870>
   14e94:	cmp	r5, #0
   14e98:	movweq	r5, #64	; 0x40
   14e9c:	mov	r0, r6
   14ea0:	mov	r1, r5
   14ea4:	mov	r2, #1
   14ea8:	bl	198a8 <argp_failure@@Base+0x2e18>
   14eac:	cmp	r5, #0
   14eb0:	mov	r1, r5
   14eb4:	movwne	r1, #1
   14eb8:	cmp	r0, #0
   14ebc:	bne	14ed0 <_obstack_memory_used@@Base+0x868>
   14ec0:	clz	r2, r6
   14ec4:	lsr	r2, r2, #5
   14ec8:	orrs	r1, r2, r1
   14ecc:	bne	14ed8 <_obstack_memory_used@@Base+0x870>
   14ed0:	str	r5, [r4]
   14ed4:	pop	{r4, r5, r6, sl, fp, pc}
   14ed8:	bl	15290 <_obstack_memory_used@@Base+0xc28>
   14edc:	push	{r4, r5, r6, r7, fp, lr}
   14ee0:	add	fp, sp, #16
   14ee4:	ldr	r5, [r1]
   14ee8:	mov	r6, r2
   14eec:	mov	r4, r1
   14ef0:	mov	r7, r0
   14ef4:	cmp	r0, #0
   14ef8:	beq	14f10 <_obstack_memory_used@@Base+0x8a8>
   14efc:	mov	r0, #1
   14f00:	add	r0, r0, r5, lsr #1
   14f04:	adds	r5, r5, r0
   14f08:	bcc	14f28 <_obstack_memory_used@@Base+0x8c0>
   14f0c:	b	14f5c <_obstack_memory_used@@Base+0x8f4>
   14f10:	cmp	r5, #0
   14f14:	bne	14f28 <_obstack_memory_used@@Base+0x8c0>
   14f18:	mov	r0, #64	; 0x40
   14f1c:	cmp	r6, #64	; 0x40
   14f20:	udiv	r5, r0, r6
   14f24:	addhi	r5, r5, #1
   14f28:	mov	r0, r7
   14f2c:	mov	r1, r5
   14f30:	mov	r2, r6
   14f34:	bl	198a8 <argp_failure@@Base+0x2e18>
   14f38:	cmp	r0, #0
   14f3c:	bne	14f54 <_obstack_memory_used@@Base+0x8ec>
   14f40:	cmp	r7, #0
   14f44:	beq	14f5c <_obstack_memory_used@@Base+0x8f4>
   14f48:	cmp	r6, #0
   14f4c:	cmpne	r5, #0
   14f50:	bne	14f5c <_obstack_memory_used@@Base+0x8f4>
   14f54:	str	r5, [r4]
   14f58:	pop	{r4, r5, r6, r7, fp, pc}
   14f5c:	bl	15290 <_obstack_memory_used@@Base+0xc28>
   14f60:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14f64:	add	fp, sp, #24
   14f68:	mov	r8, r1
   14f6c:	ldr	r1, [r1]
   14f70:	mov	r5, r0
   14f74:	add	r0, r1, r1, asr #1
   14f78:	cmp	r0, r1
   14f7c:	mvnvs	r0, #-2147483648	; 0x80000000
   14f80:	cmp	r0, r3
   14f84:	mov	r7, r0
   14f88:	movgt	r7, r3
   14f8c:	cmn	r3, #1
   14f90:	movle	r7, r0
   14f94:	ldr	r0, [fp, #8]
   14f98:	cmn	r0, #1
   14f9c:	ble	14fc4 <_obstack_memory_used@@Base+0x95c>
   14fa0:	cmp	r0, #0
   14fa4:	beq	15018 <_obstack_memory_used@@Base+0x9b0>
   14fa8:	cmn	r7, #1
   14fac:	ble	14fec <_obstack_memory_used@@Base+0x984>
   14fb0:	mvn	r4, #-2147483648	; 0x80000000
   14fb4:	udiv	r6, r4, r0
   14fb8:	cmp	r6, r7
   14fbc:	bge	15018 <_obstack_memory_used@@Base+0x9b0>
   14fc0:	b	15028 <_obstack_memory_used@@Base+0x9c0>
   14fc4:	cmn	r7, #1
   14fc8:	ble	15008 <_obstack_memory_used@@Base+0x9a0>
   14fcc:	cmn	r0, #1
   14fd0:	beq	15018 <_obstack_memory_used@@Base+0x9b0>
   14fd4:	mov	r6, #-2147483648	; 0x80000000
   14fd8:	mvn	r4, #-2147483648	; 0x80000000
   14fdc:	sdiv	r6, r6, r0
   14fe0:	cmp	r6, r7
   14fe4:	bge	15018 <_obstack_memory_used@@Base+0x9b0>
   14fe8:	b	15028 <_obstack_memory_used@@Base+0x9c0>
   14fec:	beq	15018 <_obstack_memory_used@@Base+0x9b0>
   14ff0:	mov	r6, #-2147483648	; 0x80000000
   14ff4:	mvn	r4, #-2147483648	; 0x80000000
   14ff8:	sdiv	r6, r6, r7
   14ffc:	cmp	r6, r0
   15000:	bge	15018 <_obstack_memory_used@@Base+0x9b0>
   15004:	b	15028 <_obstack_memory_used@@Base+0x9c0>
   15008:	mvn	r4, #-2147483648	; 0x80000000
   1500c:	sdiv	r6, r4, r0
   15010:	cmp	r7, r6
   15014:	blt	15028 <_obstack_memory_used@@Base+0x9c0>
   15018:	mul	r6, r7, r0
   1501c:	mov	r4, #64	; 0x40
   15020:	cmp	r6, #63	; 0x3f
   15024:	bgt	15030 <_obstack_memory_used@@Base+0x9c8>
   15028:	sdiv	r7, r4, r0
   1502c:	mul	r6, r7, r0
   15030:	cmp	r5, #0
   15034:	moveq	r4, #0
   15038:	streq	r4, [r8]
   1503c:	sub	r4, r7, r1
   15040:	cmp	r4, r2
   15044:	bge	150f0 <_obstack_memory_used@@Base+0xa88>
   15048:	add	r7, r1, r2
   1504c:	mov	r6, #0
   15050:	mov	r2, #0
   15054:	cmp	r7, r3
   15058:	movwgt	r6, #1
   1505c:	cmn	r3, #1
   15060:	movwgt	r2, #1
   15064:	cmp	r7, r1
   15068:	bvs	15124 <_obstack_memory_used@@Base+0xabc>
   1506c:	ands	r1, r2, r6
   15070:	bne	15124 <_obstack_memory_used@@Base+0xabc>
   15074:	cmn	r0, #1
   15078:	ble	150a0 <_obstack_memory_used@@Base+0xa38>
   1507c:	cmp	r0, #0
   15080:	beq	150ec <_obstack_memory_used@@Base+0xa84>
   15084:	cmn	r7, #1
   15088:	ble	150c4 <_obstack_memory_used@@Base+0xa5c>
   1508c:	mvn	r1, #-2147483648	; 0x80000000
   15090:	udiv	r1, r1, r0
   15094:	cmp	r1, r7
   15098:	bge	150ec <_obstack_memory_used@@Base+0xa84>
   1509c:	b	15124 <_obstack_memory_used@@Base+0xabc>
   150a0:	cmn	r7, #1
   150a4:	ble	150dc <_obstack_memory_used@@Base+0xa74>
   150a8:	cmn	r0, #1
   150ac:	beq	150ec <_obstack_memory_used@@Base+0xa84>
   150b0:	mov	r1, #-2147483648	; 0x80000000
   150b4:	sdiv	r1, r1, r0
   150b8:	cmp	r1, r7
   150bc:	bge	150ec <_obstack_memory_used@@Base+0xa84>
   150c0:	b	15124 <_obstack_memory_used@@Base+0xabc>
   150c4:	beq	150ec <_obstack_memory_used@@Base+0xa84>
   150c8:	mov	r1, #-2147483648	; 0x80000000
   150cc:	sdiv	r1, r1, r7
   150d0:	cmp	r1, r0
   150d4:	bge	150ec <_obstack_memory_used@@Base+0xa84>
   150d8:	b	15124 <_obstack_memory_used@@Base+0xabc>
   150dc:	mvn	r1, #-2147483648	; 0x80000000
   150e0:	sdiv	r1, r1, r0
   150e4:	cmp	r7, r1
   150e8:	blt	15124 <_obstack_memory_used@@Base+0xabc>
   150ec:	mul	r6, r7, r0
   150f0:	mov	r0, r5
   150f4:	mov	r1, r6
   150f8:	bl	15344 <_obstack_memory_used@@Base+0xcdc>
   150fc:	cmp	r6, #0
   15100:	movwne	r6, #1
   15104:	cmp	r0, #0
   15108:	bne	1511c <_obstack_memory_used@@Base+0xab4>
   1510c:	clz	r1, r5
   15110:	lsr	r1, r1, #5
   15114:	orrs	r1, r1, r6
   15118:	bne	15124 <_obstack_memory_used@@Base+0xabc>
   1511c:	str	r7, [r8]
   15120:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15124:	bl	15290 <_obstack_memory_used@@Base+0xc28>
   15128:	push	{fp, lr}
   1512c:	mov	fp, sp
   15130:	mov	r1, #1
   15134:	bl	152c0 <_obstack_memory_used@@Base+0xc58>
   15138:	cmp	r0, #0
   1513c:	popne	{fp, pc}
   15140:	bl	15290 <_obstack_memory_used@@Base+0xc28>
   15144:	push	{fp, lr}
   15148:	mov	fp, sp
   1514c:	bl	152c0 <_obstack_memory_used@@Base+0xc58>
   15150:	cmp	r0, #0
   15154:	popne	{fp, pc}
   15158:	bl	15290 <_obstack_memory_used@@Base+0xc28>
   1515c:	push	{fp, lr}
   15160:	mov	fp, sp
   15164:	mov	r1, #1
   15168:	bl	152c0 <_obstack_memory_used@@Base+0xc58>
   1516c:	cmp	r0, #0
   15170:	popne	{fp, pc}
   15174:	bl	15290 <_obstack_memory_used@@Base+0xc28>
   15178:	push	{fp, lr}
   1517c:	mov	fp, sp
   15180:	bl	152c0 <_obstack_memory_used@@Base+0xc58>
   15184:	cmp	r0, #0
   15188:	popne	{fp, pc}
   1518c:	bl	15290 <_obstack_memory_used@@Base+0xc28>
   15190:	push	{r4, r5, r6, sl, fp, lr}
   15194:	add	fp, sp, #16
   15198:	mov	r5, r0
   1519c:	mov	r0, r1
   151a0:	mov	r4, r1
   151a4:	bl	15314 <_obstack_memory_used@@Base+0xcac>
   151a8:	cmp	r0, #0
   151ac:	beq	151c8 <_obstack_memory_used@@Base+0xb60>
   151b0:	mov	r1, r5
   151b4:	mov	r2, r4
   151b8:	mov	r6, r0
   151bc:	bl	11384 <memcpy@plt>
   151c0:	mov	r0, r6
   151c4:	pop	{r4, r5, r6, sl, fp, pc}
   151c8:	bl	15290 <_obstack_memory_used@@Base+0xc28>
   151cc:	push	{r4, r5, r6, sl, fp, lr}
   151d0:	add	fp, sp, #16
   151d4:	mov	r5, r0
   151d8:	mov	r0, r1
   151dc:	mov	r4, r1
   151e0:	bl	15314 <_obstack_memory_used@@Base+0xcac>
   151e4:	cmp	r0, #0
   151e8:	beq	15204 <_obstack_memory_used@@Base+0xb9c>
   151ec:	mov	r1, r5
   151f0:	mov	r2, r4
   151f4:	mov	r6, r0
   151f8:	bl	11384 <memcpy@plt>
   151fc:	mov	r0, r6
   15200:	pop	{r4, r5, r6, sl, fp, pc}
   15204:	bl	15290 <_obstack_memory_used@@Base+0xc28>
   15208:	push	{r4, r5, r6, sl, fp, lr}
   1520c:	add	fp, sp, #16
   15210:	mov	r5, r0
   15214:	add	r0, r1, #1
   15218:	mov	r4, r1
   1521c:	bl	15314 <_obstack_memory_used@@Base+0xcac>
   15220:	cmp	r0, #0
   15224:	beq	1524c <_obstack_memory_used@@Base+0xbe4>
   15228:	mov	r6, r0
   1522c:	mov	r0, #0
   15230:	mov	r1, r5
   15234:	mov	r2, r4
   15238:	strb	r0, [r6, r4]
   1523c:	mov	r0, r6
   15240:	bl	11384 <memcpy@plt>
   15244:	mov	r0, r6
   15248:	pop	{r4, r5, r6, sl, fp, pc}
   1524c:	bl	15290 <_obstack_memory_used@@Base+0xc28>
   15250:	push	{r4, r5, r6, sl, fp, lr}
   15254:	add	fp, sp, #16
   15258:	mov	r4, r0
   1525c:	bl	11474 <strlen@plt>
   15260:	add	r5, r0, #1
   15264:	mov	r0, r5
   15268:	bl	15314 <_obstack_memory_used@@Base+0xcac>
   1526c:	cmp	r0, #0
   15270:	beq	1528c <_obstack_memory_used@@Base+0xc24>
   15274:	mov	r1, r4
   15278:	mov	r2, r5
   1527c:	mov	r6, r0
   15280:	bl	11384 <memcpy@plt>
   15284:	mov	r0, r6
   15288:	pop	{r4, r5, r6, sl, fp, pc}
   1528c:	bl	15290 <_obstack_memory_used@@Base+0xc28>
   15290:	push	{fp, lr}
   15294:	mov	fp, sp
   15298:	movw	r0, #2200	; 0x898
   1529c:	movw	r2, #49460	; 0xc134
   152a0:	movw	r3, #48311	; 0xbcb7
   152a4:	mov	r1, #0
   152a8:	movt	r0, #3
   152ac:	movt	r2, #1
   152b0:	movt	r3, #1
   152b4:	ldr	r0, [r0]
   152b8:	bl	113fc <error@plt>
   152bc:	bl	115a0 <abort@plt>
   152c0:	clz	r2, r1
   152c4:	clz	r3, r0
   152c8:	lsr	r2, r2, #5
   152cc:	lsr	r3, r3, #5
   152d0:	orrs	r2, r3, r2
   152d4:	movwne	r1, #1
   152d8:	movwne	r0, #1
   152dc:	cmp	r1, #0
   152e0:	beq	15310 <_obstack_memory_used@@Base+0xca8>
   152e4:	mvn	r2, #-2147483648	; 0x80000000
   152e8:	udiv	r2, r2, r1
   152ec:	cmp	r2, r0
   152f0:	bcs	15310 <_obstack_memory_used@@Base+0xca8>
   152f4:	push	{fp, lr}
   152f8:	mov	fp, sp
   152fc:	bl	11498 <__errno_location@plt>
   15300:	mov	r1, #12
   15304:	str	r1, [r0]
   15308:	mov	r0, #0
   1530c:	pop	{fp, pc}
   15310:	b	112e8 <calloc@plt>
   15314:	cmp	r0, #0
   15318:	movweq	r0, #1
   1531c:	cmn	r0, #1
   15320:	ble	15328 <_obstack_memory_used@@Base+0xcc0>
   15324:	b	11420 <malloc@plt>
   15328:	push	{fp, lr}
   1532c:	mov	fp, sp
   15330:	bl	11498 <__errno_location@plt>
   15334:	mov	r1, #12
   15338:	str	r1, [r0]
   1533c:	mov	r0, #0
   15340:	pop	{fp, pc}
   15344:	push	{fp, lr}
   15348:	mov	fp, sp
   1534c:	cmp	r0, #0
   15350:	beq	1536c <_obstack_memory_used@@Base+0xd04>
   15354:	cmp	r1, #0
   15358:	beq	15378 <_obstack_memory_used@@Base+0xd10>
   1535c:	cmn	r1, #1
   15360:	ble	15384 <_obstack_memory_used@@Base+0xd1c>
   15364:	pop	{fp, lr}
   15368:	b	113b4 <realloc@plt>
   1536c:	mov	r0, r1
   15370:	pop	{fp, lr}
   15374:	b	15314 <_obstack_memory_used@@Base+0xcac>
   15378:	bl	14200 <argp_parse@@Base+0x12d0>
   1537c:	mov	r0, #0
   15380:	pop	{fp, pc}
   15384:	bl	11498 <__errno_location@plt>
   15388:	mov	r1, #12
   1538c:	str	r1, [r0]
   15390:	mov	r0, #0
   15394:	pop	{fp, pc}

00015398 <argp_help@@Base>:
   15398:	push	{fp, lr}
   1539c:	mov	fp, sp
   153a0:	sub	sp, sp, #8
   153a4:	mov	ip, r2
   153a8:	mov	r2, r1
   153ac:	str	r3, [sp]
   153b0:	mov	r1, #0
   153b4:	mov	r3, ip
   153b8:	bl	153c4 <argp_help@@Base+0x2c>
   153bc:	mov	sp, fp
   153c0:	pop	{fp, pc}
   153c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   153c8:	add	fp, sp, #28
   153cc:	sub	sp, sp, #108	; 0x6c
   153d0:	cmp	r2, #0
   153d4:	str	r1, [fp, #-96]	; 0xffffffa0
   153d8:	str	r0, [fp, #-112]	; 0xffffff90
   153dc:	beq	15e34 <argp_help@@Base+0xa9c>
   153e0:	ldr	r0, [fp, #8]
   153e4:	mov	r6, r3
   153e8:	mov	r5, r2
   153ec:	str	r0, [fp, #-100]	; 0xffffff9c
   153f0:	mov	r0, r2
   153f4:	bl	11528 <flockfile@plt>
   153f8:	movw	r8, #2160	; 0x870
   153fc:	str	r6, [fp, #-132]	; 0xffffff7c
   15400:	movt	r8, #3
   15404:	ldr	r0, [r8, #36]	; 0x24
   15408:	cmp	r0, #0
   1540c:	bne	15934 <argp_help@@Base+0x59c>
   15410:	movw	r0, #49335	; 0xc0b7
   15414:	movt	r0, #1
   15418:	bl	11408 <getenv@plt>
   1541c:	mov	r1, r8
   15420:	mov	r8, r0
   15424:	mov	r0, #32
   15428:	sub	r2, fp, #88	; 0x58
   1542c:	add	r3, r1, #16
   15430:	vld1.64	{d16-d17}, [r1], r0
   15434:	add	r7, r2, #16
   15438:	cmp	r8, #0
   1543c:	vld1.64	{d18-d19}, [r3]
   15440:	vldr	d20, [r1]
   15444:	mov	r1, r2
   15448:	vst1.64	{d16-d17}, [r1], r0
   1544c:	vst1.64	{d18-d19}, [r7]
   15450:	vstr	d20, [r1]
   15454:	beq	1592c <argp_help@@Base+0x594>
   15458:	str	r7, [fp, #-108]	; 0xffffff94
   1545c:	str	r3, [fp, #-104]	; 0xffffff98
   15460:	str	r5, [fp, #-136]	; 0xffffff78
   15464:	ldrb	r5, [r8]
   15468:	cmp	r5, #0
   1546c:	beq	15834 <argp_help@@Base+0x49c>
   15470:	bl	1145c <__ctype_b_loc@plt>
   15474:	movw	r7, #50000	; 0xc350
   15478:	str	r0, [fp, #-92]	; 0xffffffa4
   1547c:	movt	r7, #1
   15480:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15484:	uxtb	r1, r5
   15488:	ldr	r0, [r0]
   1548c:	add	r1, r0, r1, lsl #1
   15490:	b	1549c <argp_help@@Base+0x104>
   15494:	ldrb	r5, [r8, #1]!
   15498:	add	r1, r0, r5, lsl #1
   1549c:	ldrh	r1, [r1]
   154a0:	tst	r1, #8192	; 0x2000
   154a4:	bne	15494 <argp_help@@Base+0xfc>
   154a8:	tst	r1, #1024	; 0x400
   154ac:	beq	15808 <argp_help@@Base+0x470>
   154b0:	mov	r3, r5
   154b4:	mov	r2, r8
   154b8:	b	154c0 <argp_help@@Base+0x128>
   154bc:	ldrb	r3, [r2, #1]!
   154c0:	uxtb	r6, r3
   154c4:	add	r1, r0, r6, lsl #1
   154c8:	ldrh	r1, [r1]
   154cc:	tst	r1, #8
   154d0:	bne	154bc <argp_help@@Base+0x124>
   154d4:	cmp	r6, #95	; 0x5f
   154d8:	cmpne	r6, #45	; 0x2d
   154dc:	beq	154bc <argp_help@@Base+0x124>
   154e0:	tst	r1, #8192	; 0x2000
   154e4:	mov	r4, r2
   154e8:	beq	15504 <argp_help@@Base+0x16c>
   154ec:	mov	r4, r2
   154f0:	ldrb	r3, [r4, #1]!
   154f4:	add	r1, r0, r3, lsl #1
   154f8:	ldrh	r1, [r1]
   154fc:	tst	r1, #8192	; 0x2000
   15500:	bne	154f0 <argp_help@@Base+0x158>
   15504:	sub	r9, r2, r8
   15508:	uxtb	r2, r3
   1550c:	cmp	r2, #0
   15510:	cmpne	r2, #44	; 0x2c
   15514:	bne	15564 <argp_help@@Base+0x1cc>
   15518:	uxtb	r0, r5
   1551c:	mov	sl, #1
   15520:	cmp	r0, #110	; 0x6e
   15524:	bne	1555c <argp_help@@Base+0x1c4>
   15528:	ldrb	r0, [r8, #1]
   1552c:	mov	sl, #1
   15530:	cmp	r0, #111	; 0x6f
   15534:	bne	1555c <argp_help@@Base+0x1c4>
   15538:	ldrb	r0, [r8, #2]
   1553c:	mov	sl, #1
   15540:	cmp	r0, #45	; 0x2d
   15544:	bne	1555c <argp_help@@Base+0x1c4>
   15548:	sub	r9, r9, #3
   1554c:	add	r8, r8, #3
   15550:	mov	r5, #0
   15554:	mov	sl, #1
   15558:	b	155e8 <argp_help@@Base+0x250>
   1555c:	mov	r5, #1
   15560:	b	155e8 <argp_help@@Base+0x250>
   15564:	cmp	r2, #61	; 0x3d
   15568:	bne	15580 <argp_help@@Base+0x1e8>
   1556c:	ldrb	r1, [r4, #1]!
   15570:	add	r1, r0, r1, lsl #1
   15574:	ldrh	r1, [r1]
   15578:	tst	r1, #8192	; 0x2000
   1557c:	bne	1556c <argp_help@@Base+0x1d4>
   15580:	mov	sl, #0
   15584:	tst	r1, #2048	; 0x800
   15588:	bne	15594 <argp_help@@Base+0x1fc>
   1558c:	mov	r5, #0
   15590:	b	155e8 <argp_help@@Base+0x250>
   15594:	mov	r0, r4
   15598:	mov	r1, #0
   1559c:	mov	r2, #10
   155a0:	bl	11318 <strtol@plt>
   155a4:	mov	r5, r0
   155a8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   155ac:	sub	r4, r4, #1
   155b0:	ldr	r0, [r0]
   155b4:	ldrb	r1, [r4, #1]!
   155b8:	add	r1, r0, r1, lsl #1
   155bc:	ldrh	r1, [r1]
   155c0:	tst	r1, #2048	; 0x800
   155c4:	bne	155b4 <argp_help@@Base+0x21c>
   155c8:	mov	sl, #0
   155cc:	tst	r1, #8192	; 0x2000
   155d0:	beq	155e8 <argp_help@@Base+0x250>
   155d4:	ldrb	r1, [r4, #1]!
   155d8:	add	r1, r0, r1, lsl #1
   155dc:	ldrb	r1, [r1, #1]
   155e0:	tst	r1, #32
   155e4:	bne	155d4 <argp_help@@Base+0x23c>
   155e8:	mov	r0, r7
   155ec:	bl	11474 <strlen@plt>
   155f0:	cmp	r0, r9
   155f4:	bne	15614 <argp_help@@Base+0x27c>
   155f8:	mov	r0, r8
   155fc:	mov	r1, r7
   15600:	mov	r2, r9
   15604:	bl	11594 <strncmp@plt>
   15608:	cmp	r0, #0
   1560c:	mov	r6, r7
   15610:	beq	15798 <argp_help@@Base+0x400>
   15614:	add	r6, r7, #16
   15618:	mov	r0, r6
   1561c:	bl	11474 <strlen@plt>
   15620:	cmp	r0, r9
   15624:	bne	15640 <argp_help@@Base+0x2a8>
   15628:	mov	r0, r8
   1562c:	mov	r1, r6
   15630:	mov	r2, r9
   15634:	bl	11594 <strncmp@plt>
   15638:	cmp	r0, #0
   1563c:	beq	15798 <argp_help@@Base+0x400>
   15640:	add	r6, r7, #32
   15644:	mov	r0, r6
   15648:	bl	11474 <strlen@plt>
   1564c:	cmp	r0, r9
   15650:	bne	1566c <argp_help@@Base+0x2d4>
   15654:	mov	r0, r8
   15658:	mov	r1, r6
   1565c:	mov	r2, r9
   15660:	bl	11594 <strncmp@plt>
   15664:	cmp	r0, #0
   15668:	beq	15798 <argp_help@@Base+0x400>
   1566c:	add	r6, r7, #48	; 0x30
   15670:	mov	r0, r6
   15674:	bl	11474 <strlen@plt>
   15678:	cmp	r0, r9
   1567c:	bne	15698 <argp_help@@Base+0x300>
   15680:	mov	r0, r8
   15684:	mov	r1, r6
   15688:	mov	r2, r9
   1568c:	bl	11594 <strncmp@plt>
   15690:	cmp	r0, #0
   15694:	beq	15798 <argp_help@@Base+0x400>
   15698:	add	r6, r7, #64	; 0x40
   1569c:	mov	r0, r6
   156a0:	bl	11474 <strlen@plt>
   156a4:	cmp	r0, r9
   156a8:	bne	156c4 <argp_help@@Base+0x32c>
   156ac:	mov	r0, r8
   156b0:	mov	r1, r6
   156b4:	mov	r2, r9
   156b8:	bl	11594 <strncmp@plt>
   156bc:	cmp	r0, #0
   156c0:	beq	15798 <argp_help@@Base+0x400>
   156c4:	add	r6, r7, #80	; 0x50
   156c8:	mov	r0, r6
   156cc:	bl	11474 <strlen@plt>
   156d0:	cmp	r0, r9
   156d4:	bne	156f0 <argp_help@@Base+0x358>
   156d8:	mov	r0, r8
   156dc:	mov	r1, r6
   156e0:	mov	r2, r9
   156e4:	bl	11594 <strncmp@plt>
   156e8:	cmp	r0, #0
   156ec:	beq	15798 <argp_help@@Base+0x400>
   156f0:	add	r6, r7, #96	; 0x60
   156f4:	mov	r0, r6
   156f8:	bl	11474 <strlen@plt>
   156fc:	cmp	r0, r9
   15700:	bne	1571c <argp_help@@Base+0x384>
   15704:	mov	r0, r8
   15708:	mov	r1, r6
   1570c:	mov	r2, r9
   15710:	bl	11594 <strncmp@plt>
   15714:	cmp	r0, #0
   15718:	beq	15798 <argp_help@@Base+0x400>
   1571c:	add	r6, r7, #112	; 0x70
   15720:	mov	r0, r6
   15724:	bl	11474 <strlen@plt>
   15728:	cmp	r0, r9
   1572c:	bne	15748 <argp_help@@Base+0x3b0>
   15730:	mov	r0, r8
   15734:	mov	r1, r6
   15738:	mov	r2, r9
   1573c:	bl	11594 <strncmp@plt>
   15740:	cmp	r0, #0
   15744:	beq	15798 <argp_help@@Base+0x400>
   15748:	add	r6, r7, #128	; 0x80
   1574c:	mov	r0, r6
   15750:	bl	11474 <strlen@plt>
   15754:	cmp	r0, r9
   15758:	bne	15774 <argp_help@@Base+0x3dc>
   1575c:	mov	r0, r8
   15760:	mov	r1, r6
   15764:	mov	r2, r9
   15768:	bl	11594 <strncmp@plt>
   1576c:	cmp	r0, #0
   15770:	beq	15798 <argp_help@@Base+0x400>
   15774:	sub	sp, sp, #8
   15778:	str	r9, [sp]
   1577c:	str	r8, [sp, #4]
   15780:	movw	r3, #49396	; 0xc0f4
   15784:	mov	r1, #0
   15788:	mov	r2, #0
   1578c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15790:	movt	r3, #1
   15794:	b	157dc <argp_help@@Base+0x444>
   15798:	cmp	sl, #0
   1579c:	beq	157ac <argp_help@@Base+0x414>
   157a0:	ldrb	r0, [r6, #14]
   157a4:	cmp	r0, #0
   157a8:	beq	157bc <argp_help@@Base+0x424>
   157ac:	ldrb	r0, [r6, #15]
   157b0:	sub	r1, fp, #88	; 0x58
   157b4:	str	r5, [r1, r0]
   157b8:	b	157e4 <argp_help@@Base+0x44c>
   157bc:	sub	sp, sp, #8
   157c0:	str	r9, [sp]
   157c4:	str	r8, [sp, #4]
   157c8:	movw	r3, #49349	; 0xc0c5
   157cc:	mov	r1, #0
   157d0:	mov	r2, #0
   157d4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   157d8:	movt	r3, #1
   157dc:	bl	16a90 <argp_failure@@Base>
   157e0:	add	sp, sp, #8
   157e4:	mov	r8, r4
   157e8:	ldr	r6, [fp, #-132]	; 0xffffff7c
   157ec:	ldrb	r0, [r8], #1
   157f0:	cmp	r0, #44	; 0x2c
   157f4:	movne	r8, r4
   157f8:	ldrb	r5, [r8]
   157fc:	cmp	r5, #0
   15800:	bne	15480 <argp_help@@Base+0xe8>
   15804:	b	15834 <argp_help@@Base+0x49c>
   15808:	tst	r5, #255	; 0xff
   1580c:	beq	15834 <argp_help@@Base+0x49c>
   15810:	sub	sp, sp, #8
   15814:	str	r8, [sp]
   15818:	movw	r3, #49434	; 0xc11a
   1581c:	mov	r1, #0
   15820:	mov	r2, #0
   15824:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15828:	movt	r3, #1
   1582c:	bl	16a90 <argp_failure@@Base>
   15830:	add	sp, sp, #8
   15834:	ldr	r2, [fp, #-80]	; 0xffffffb0
   15838:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1583c:	movw	r0, #50000	; 0xc350
   15840:	movt	r0, #1
   15844:	cmp	r2, r1
   15848:	bge	158d4 <argp_help@@Base+0x53c>
   1584c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   15850:	cmp	r2, r1
   15854:	bge	158dc <argp_help@@Base+0x544>
   15858:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1585c:	cmp	r2, r1
   15860:	bge	158e4 <argp_help@@Base+0x54c>
   15864:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15868:	cmp	r2, r1
   1586c:	bge	158ec <argp_help@@Base+0x554>
   15870:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15874:	cmp	r2, r1
   15878:	bge	158f4 <argp_help@@Base+0x55c>
   1587c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15880:	ldr	r5, [fp, #-136]	; 0xffffff78
   15884:	cmp	r2, r1
   15888:	bge	16888 <argp_help@@Base+0x14f0>
   1588c:	ldr	r0, [fp, #-108]	; 0xffffff94
   15890:	sub	r1, fp, #88	; 0x58
   15894:	movw	r2, #2160	; 0x870
   15898:	mov	r3, r1
   1589c:	movt	r2, #3
   158a0:	mov	r1, r2
   158a4:	vld1.64	{d16-d17}, [r0]
   158a8:	mov	r0, #32
   158ac:	vld1.64	{d18-d19}, [r3], r0
   158b0:	ldr	r0, [fp, #-104]	; 0xffffff98
   158b4:	vst1.64	{d16-d17}, [r0]
   158b8:	mov	r0, #36	; 0x24
   158bc:	vst1.64	{d18-d19}, [r1], r0
   158c0:	mov	r0, #1
   158c4:	str	r0, [r1]
   158c8:	ldr	r0, [r3]
   158cc:	str	r0, [r2, #32]
   158d0:	b	1592c <argp_help@@Base+0x594>
   158d4:	add	r0, r0, #32
   158d8:	b	158f8 <argp_help@@Base+0x560>
   158dc:	add	r0, r0, #48	; 0x30
   158e0:	b	158f8 <argp_help@@Base+0x560>
   158e4:	add	r0, r0, #64	; 0x40
   158e8:	b	158f8 <argp_help@@Base+0x560>
   158ec:	add	r0, r0, #80	; 0x50
   158f0:	b	158f8 <argp_help@@Base+0x560>
   158f4:	add	r0, r0, #96	; 0x60
   158f8:	ldr	r5, [fp, #-136]	; 0xffffff78
   158fc:	sub	sp, sp, #8
   15900:	movw	r1, #49515	; 0xc16b
   15904:	str	r0, [sp, #4]
   15908:	movw	r3, #49463	; 0xc137
   1590c:	mov	r2, #0
   15910:	movt	r1, #1
   15914:	movt	r3, #1
   15918:	str	r1, [sp]
   1591c:	mov	r1, #0
   15920:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15924:	bl	16a90 <argp_failure@@Base>
   15928:	add	sp, sp, #8
   1592c:	movw	r8, #2160	; 0x870
   15930:	movt	r8, #3
   15934:	ldr	r2, [r8, #32]
   15938:	mov	r0, #0
   1593c:	mov	r1, #0
   15940:	mov	r3, #0
   15944:	str	r0, [fp, #-108]	; 0xffffff94
   15948:	mov	r0, r5
   1594c:	bl	198e4 <argp_failure@@Base+0x2e54>
   15950:	cmp	r0, #0
   15954:	beq	159f0 <argp_help@@Base+0x658>
   15958:	mov	r4, r0
   1595c:	tst	r6, #11
   15960:	str	r5, [fp, #-136]	; 0xffffff78
   15964:	beq	15ac0 <argp_help@@Base+0x728>
   15968:	ldr	r0, [fp, #-112]	; 0xffffff90
   1596c:	mov	r1, #0
   15970:	bl	16c98 <argp_failure@@Base+0x208>
   15974:	ldr	sl, [r0, #4]
   15978:	str	r0, [fp, #-108]	; 0xffffff94
   1597c:	cmp	sl, #0
   15980:	beq	15ac0 <argp_help@@Base+0x728>
   15984:	ldr	r6, [r0]
   15988:	movw	r9, #48030	; 0xbb9e
   1598c:	mov	r5, sl
   15990:	movt	r9, #1
   15994:	str	r6, [fp, #-104]	; 0xffffff98
   15998:	ldr	r7, [r6, #4]
   1599c:	cmp	r7, #0
   159a0:	beq	159e0 <argp_help@@Base+0x648>
   159a4:	ldr	r0, [r6]
   159a8:	add	r8, r0, #12
   159ac:	ldr	r0, [r8, #-12]
   159b0:	cmp	r0, #0
   159b4:	beq	159d4 <argp_help@@Base+0x63c>
   159b8:	ldrb	r1, [r8]
   159bc:	tst	r1, #2
   159c0:	bne	159d4 <argp_help@@Base+0x63c>
   159c4:	mov	r1, r9
   159c8:	bl	1130c <strcmp@plt>
   159cc:	cmp	r0, #0
   159d0:	beq	15a00 <argp_help@@Base+0x668>
   159d4:	subs	r7, r7, #1
   159d8:	add	r8, r8, #24
   159dc:	bne	159ac <argp_help@@Base+0x614>
   159e0:	subs	r5, r5, #1
   159e4:	add	r6, r6, #28
   159e8:	bne	15998 <argp_help@@Base+0x600>
   159ec:	b	15a0c <argp_help@@Base+0x674>
   159f0:	mov	r0, r5
   159f4:	sub	sp, fp, #28
   159f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159fc:	b	113cc <funlockfile@plt>
   15a00:	cmp	r6, #0
   15a04:	mvnne	r0, #0
   15a08:	strne	r0, [r6, #12]
   15a0c:	ldr	r6, [fp, #-104]	; 0xffffff98
   15a10:	movw	r9, #48193	; 0xbc41
   15a14:	mov	r8, sl
   15a18:	movt	r9, #1
   15a1c:	ldr	r5, [r6, #4]
   15a20:	cmp	r5, #0
   15a24:	beq	15a64 <argp_help@@Base+0x6cc>
   15a28:	ldr	r0, [r6]
   15a2c:	add	r7, r0, #12
   15a30:	ldr	r0, [r7, #-12]
   15a34:	cmp	r0, #0
   15a38:	beq	15a58 <argp_help@@Base+0x6c0>
   15a3c:	ldrb	r1, [r7]
   15a40:	tst	r1, #2
   15a44:	bne	15a58 <argp_help@@Base+0x6c0>
   15a48:	mov	r1, r9
   15a4c:	bl	1130c <strcmp@plt>
   15a50:	cmp	r0, #0
   15a54:	beq	15a74 <argp_help@@Base+0x6dc>
   15a58:	subs	r5, r5, #1
   15a5c:	add	r7, r7, #24
   15a60:	bne	15a30 <argp_help@@Base+0x698>
   15a64:	subs	r8, r8, #1
   15a68:	add	r6, r6, #28
   15a6c:	bne	15a1c <argp_help@@Base+0x684>
   15a70:	b	15a80 <argp_help@@Base+0x6e8>
   15a74:	cmp	r6, #0
   15a78:	mvnne	r0, #0
   15a7c:	strne	r0, [r6, #12]
   15a80:	ldr	r0, [fp, #-104]	; 0xffffff98
   15a84:	mov	r1, #0
   15a88:	add	r0, r0, #24
   15a8c:	str	r1, [r0], #28
   15a90:	add	r1, r1, #1
   15a94:	cmp	sl, r1
   15a98:	bne	15a8c <argp_help@@Base+0x6f4>
   15a9c:	ldr	r0, [fp, #-104]	; 0xffffff98
   15aa0:	movw	r3, #32364	; 0x7e6c
   15aa4:	mov	r1, sl
   15aa8:	mov	r2, #28
   15aac:	movt	r3, #1
   15ab0:	bl	11540 <qsort@plt>
   15ab4:	ldr	r6, [fp, #-132]	; 0xffffff7c
   15ab8:	movw	r8, #2160	; 0x870
   15abc:	movt	r8, #3
   15ac0:	tst	r6, #3
   15ac4:	beq	15e3c <argp_help@@Base+0xaa4>
   15ac8:	ldr	r0, [fp, #-112]	; 0xffffff90
   15acc:	bl	1731c <argp_failure@@Base+0x88c>
   15ad0:	mov	r2, r0
   15ad4:	add	r0, r0, #7
   15ad8:	bic	r0, r0, #7
   15adc:	sub	r0, sp, r0
   15ae0:	mov	sp, r0
   15ae4:	mov	r1, #0
   15ae8:	str	r0, [fp, #-104]	; 0xffffff98
   15aec:	bl	114bc <memset@plt>
   15af0:	mov	r7, #1
   15af4:	ldr	r1, [r4, #24]
   15af8:	ldr	r2, [r4, #28]
   15afc:	ldr	r0, [r4, #16]
   15b00:	mov	r5, r6
   15b04:	ldr	r6, [r8, #28]
   15b08:	sub	r1, r2, r1
   15b0c:	cmp	r1, r0
   15b10:	bls	15b1c <argp_help@@Base+0x784>
   15b14:	mov	r0, r4
   15b18:	bl	199a8 <argp_failure@@Base+0x2f18>
   15b1c:	ldr	r0, [fp, #-104]	; 0xffffff98
   15b20:	ldr	r9, [r4, #12]
   15b24:	movw	r1, #49240	; 0xc058
   15b28:	str	r6, [r4, #12]
   15b2c:	tst	r7, #1
   15b30:	movt	r1, #1
   15b34:	str	r0, [fp, #-88]	; 0xffffffa8
   15b38:	mov	r0, r4
   15b3c:	beq	15b4c <argp_help@@Base+0x7b4>
   15b40:	movw	r2, #49246	; 0xc05e
   15b44:	movt	r2, #1
   15b48:	b	15b54 <argp_help@@Base+0x7bc>
   15b4c:	movw	r2, #49253	; 0xc065
   15b50:	movt	r2, #1
   15b54:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15b58:	bl	19ff4 <argp_failure@@Base+0x3564>
   15b5c:	ldr	r1, [r4, #24]
   15b60:	ldr	r2, [r4, #28]
   15b64:	ldr	r0, [r4, #16]
   15b68:	ldr	r6, [r8, #28]
   15b6c:	sub	r1, r2, r1
   15b70:	cmp	r1, r0
   15b74:	bls	15b80 <argp_help@@Base+0x7e8>
   15b78:	mov	r0, r4
   15b7c:	bl	199a8 <argp_failure@@Base+0x2f18>
   15b80:	ldr	r8, [r4, #4]
   15b84:	str	r6, [r4, #4]
   15b88:	mov	r6, r5
   15b8c:	tst	r5, #2
   15b90:	bne	15ba8 <argp_help@@Base+0x810>
   15b94:	ldr	r0, [fp, #-108]	; 0xffffff94
   15b98:	mov	r1, r4
   15b9c:	bl	17384 <argp_failure@@Base+0x8f4>
   15ba0:	orr	r6, r6, #2
   15ba4:	b	15c0c <argp_help@@Base+0x874>
   15ba8:	ldr	r0, [fp, #-108]	; 0xffffff94
   15bac:	ldr	r0, [r0, #4]
   15bb0:	cmp	r0, #0
   15bb4:	beq	15c0c <argp_help@@Base+0x874>
   15bb8:	ldr	r0, [r4, #28]
   15bbc:	ldr	r1, [r4, #32]
   15bc0:	add	r2, r0, #12
   15bc4:	cmp	r2, r1
   15bc8:	bls	15be4 <argp_help@@Base+0x84c>
   15bcc:	mov	r0, r4
   15bd0:	mov	r1, #12
   15bd4:	bl	19f08 <argp_failure@@Base+0x3478>
   15bd8:	cmp	r0, #0
   15bdc:	beq	15c0c <argp_help@@Base+0x874>
   15be0:	ldr	r0, [r4, #28]
   15be4:	movw	r1, #49984	; 0xc340
   15be8:	movt	r1, #1
   15bec:	vldr	d16, [r1]
   15bf0:	movw	r1, #11822	; 0x2e2e
   15bf4:	movt	r1, #23854	; 0x5d2e
   15bf8:	str	r1, [r0, #8]
   15bfc:	vst1.8	{d16}, [r0]
   15c00:	ldr	r0, [r4, #28]
   15c04:	add	r0, r0, #12
   15c08:	str	r0, [r4, #28]
   15c0c:	sub	sp, sp, #8
   15c10:	str	r4, [sp]
   15c14:	sub	r2, fp, #88	; 0x58
   15c18:	mov	r3, #1
   15c1c:	ldr	r0, [fp, #-112]	; 0xffffff90
   15c20:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15c24:	bl	17734 <argp_failure@@Base+0xca4>
   15c28:	add	sp, sp, #8
   15c2c:	mov	sl, r0
   15c30:	ldr	r2, [r4, #24]
   15c34:	ldr	r0, [r4, #28]
   15c38:	ldr	r1, [r4, #16]
   15c3c:	sub	r2, r0, r2
   15c40:	cmp	r2, r1
   15c44:	bls	15c60 <argp_help@@Base+0x8c8>
   15c48:	mov	r0, r4
   15c4c:	bl	199a8 <argp_failure@@Base+0x2f18>
   15c50:	ldr	r2, [r4, #24]
   15c54:	ldr	r0, [r4, #28]
   15c58:	ldr	r1, [r4, #16]
   15c5c:	sub	r2, r0, r2
   15c60:	cmp	r2, r1
   15c64:	str	r9, [r4, #12]
   15c68:	bls	15c78 <argp_help@@Base+0x8e0>
   15c6c:	mov	r0, r4
   15c70:	bl	199a8 <argp_failure@@Base+0x2f18>
   15c74:	ldr	r0, [r4, #28]
   15c78:	str	r8, [r4, #4]
   15c7c:	movw	r8, #2160	; 0x870
   15c80:	ldr	r1, [r4, #32]
   15c84:	movt	r8, #3
   15c88:	cmp	r0, r1
   15c8c:	bcc	15ca8 <argp_help@@Base+0x910>
   15c90:	mov	r0, r4
   15c94:	mov	r1, #1
   15c98:	bl	19f08 <argp_failure@@Base+0x3478>
   15c9c:	cmp	r0, #0
   15ca0:	beq	15cb8 <argp_help@@Base+0x920>
   15ca4:	ldr	r0, [r4, #28]
   15ca8:	add	r1, r0, #1
   15cac:	str	r1, [r4, #28]
   15cb0:	mov	r1, #10
   15cb4:	strb	r1, [r0]
   15cb8:	mov	r7, #0
   15cbc:	cmp	sl, #0
   15cc0:	bne	15af4 <argp_help@@Base+0x75c>
   15cc4:	mov	r5, #1
   15cc8:	tst	r6, #16
   15ccc:	beq	15cf8 <argp_help@@Base+0x960>
   15cd0:	sub	sp, sp, #8
   15cd4:	mov	r0, #1
   15cd8:	mov	r2, #0
   15cdc:	mov	r3, #0
   15ce0:	stm	sp, {r0, r4}
   15ce4:	ldr	r0, [fp, #-112]	; 0xffffff90
   15ce8:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15cec:	bl	179e0 <argp_failure@@Base+0xf50>
   15cf0:	add	sp, sp, #8
   15cf4:	orr	r5, r0, r5
   15cf8:	ldr	r0, [fp, #-108]	; 0xffffff94
   15cfc:	tst	r6, #4
   15d00:	beq	15d24 <argp_help@@Base+0x98c>
   15d04:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15d08:	movw	r1, #49260	; 0xc06c
   15d0c:	mov	r0, r4
   15d10:	movt	r1, #1
   15d14:	mov	r3, r2
   15d18:	bl	19ff4 <argp_failure@@Base+0x3564>
   15d1c:	ldr	r0, [fp, #-108]	; 0xffffff94
   15d20:	mov	r5, #1
   15d24:	tst	r6, #8
   15d28:	ldrne	r1, [r0, #4]
   15d2c:	cmpne	r1, #0
   15d30:	bne	15e4c <argp_help@@Base+0xab4>
   15d34:	tst	r6, #32
   15d38:	beq	15d64 <argp_help@@Base+0x9cc>
   15d3c:	sub	sp, sp, #8
   15d40:	mov	r0, #0
   15d44:	mov	r2, #1
   15d48:	mov	r3, r5
   15d4c:	stm	sp, {r0, r4}
   15d50:	ldr	r0, [fp, #-112]	; 0xffffff90
   15d54:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15d58:	bl	179e0 <argp_failure@@Base+0xf50>
   15d5c:	add	sp, sp, #8
   15d60:	orr	r5, r0, r5
   15d64:	tst	r6, #64	; 0x40
   15d68:	movwne	r6, #2364	; 0x93c
   15d6c:	movtne	r6, #3
   15d70:	ldrne	r0, [r6]
   15d74:	cmpne	r0, #0
   15d78:	beq	15dd0 <argp_help@@Base+0xa38>
   15d7c:	cmp	r5, #0
   15d80:	beq	15dbc <argp_help@@Base+0xa24>
   15d84:	ldr	r0, [r4, #28]
   15d88:	ldr	r1, [r4, #32]
   15d8c:	cmp	r0, r1
   15d90:	bcc	15dac <argp_help@@Base+0xa14>
   15d94:	mov	r0, r4
   15d98:	mov	r1, #1
   15d9c:	bl	19f08 <argp_failure@@Base+0x3478>
   15da0:	cmp	r0, #0
   15da4:	beq	15dbc <argp_help@@Base+0xa24>
   15da8:	ldr	r0, [r4, #28]
   15dac:	add	r1, r0, #1
   15db0:	str	r1, [r4, #28]
   15db4:	mov	r1, #10
   15db8:	strb	r1, [r0]
   15dbc:	ldr	r2, [r6]
   15dc0:	movw	r1, #49315	; 0xc0a3
   15dc4:	mov	r0, r4
   15dc8:	movt	r1, #1
   15dcc:	bl	19ff4 <argp_failure@@Base+0x3564>
   15dd0:	ldr	r0, [fp, #-136]	; 0xffffff78
   15dd4:	bl	113cc <funlockfile@plt>
   15dd8:	ldr	r0, [fp, #-108]	; 0xffffff94
   15ddc:	cmp	r0, #0
   15de0:	beq	15e2c <argp_help@@Base+0xa94>
   15de4:	ldr	r0, [r0, #12]
   15de8:	cmp	r0, #0
   15dec:	beq	15e04 <argp_help@@Base+0xa6c>
   15df0:	ldr	r5, [r0, #24]
   15df4:	bl	14200 <argp_parse@@Base+0x12d0>
   15df8:	cmp	r5, #0
   15dfc:	mov	r0, r5
   15e00:	bne	15df0 <argp_help@@Base+0xa58>
   15e04:	ldr	r5, [fp, #-108]	; 0xffffff94
   15e08:	ldr	r0, [r5, #4]
   15e0c:	cmp	r0, #0
   15e10:	beq	15e24 <argp_help@@Base+0xa8c>
   15e14:	ldr	r0, [r5]
   15e18:	bl	14200 <argp_parse@@Base+0x12d0>
   15e1c:	ldr	r0, [r5, #8]
   15e20:	bl	14200 <argp_parse@@Base+0x12d0>
   15e24:	mov	r0, r5
   15e28:	bl	14200 <argp_parse@@Base+0x12d0>
   15e2c:	mov	r0, r4
   15e30:	bl	19964 <argp_failure@@Base+0x2ed4>
   15e34:	sub	sp, fp, #28
   15e38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e3c:	mov	r5, #0
   15e40:	tst	r6, #16
   15e44:	bne	15cd0 <argp_help@@Base+0x938>
   15e48:	b	15cf8 <argp_help@@Base+0x960>
   15e4c:	cmp	r5, #0
   15e50:	str	r6, [fp, #-132]	; 0xffffff7c
   15e54:	beq	15ec0 <argp_help@@Base+0xb28>
   15e58:	mov	sl, r4
   15e5c:	ldr	r0, [sl, #28]!
   15e60:	mov	r2, sl
   15e64:	ldr	r1, [r2, #4]!
   15e68:	cmp	r0, r1
   15e6c:	str	r2, [fp, #-100]	; 0xffffff9c
   15e70:	bcc	15e8c <argp_help@@Base+0xaf4>
   15e74:	mov	r0, r4
   15e78:	mov	r1, #1
   15e7c:	bl	19f08 <argp_failure@@Base+0x3478>
   15e80:	cmp	r0, #0
   15e84:	beq	15e9c <argp_help@@Base+0xb04>
   15e88:	ldr	r0, [sl]
   15e8c:	add	r1, r0, #1
   15e90:	str	r1, [sl]
   15e94:	mov	r1, #10
   15e98:	strb	r1, [r0]
   15e9c:	ldr	r0, [fp, #-108]	; 0xffffff94
   15ea0:	ldr	r1, [r0, #4]
   15ea4:	mov	r0, #0
   15ea8:	str	r0, [fp, #-44]	; 0xffffffd4
   15eac:	str	r0, [fp, #-48]	; 0xffffffd0
   15eb0:	str	r0, [fp, #-40]	; 0xffffffd8
   15eb4:	cmp	r1, #0
   15eb8:	bne	15edc <argp_help@@Base+0xb44>
   15ebc:	b	16718 <argp_help@@Base+0x1380>
   15ec0:	mov	r0, #0
   15ec4:	add	sl, r4, #28
   15ec8:	str	r0, [fp, #-44]	; 0xffffffd4
   15ecc:	str	r0, [fp, #-48]	; 0xffffffd0
   15ed0:	str	r0, [fp, #-40]	; 0xffffffd8
   15ed4:	add	r0, r4, #32
   15ed8:	str	r0, [fp, #-100]	; 0xffffff9c
   15edc:	ldr	r0, [fp, #-108]	; 0xffffff94
   15ee0:	str	r4, [fp, #-92]	; 0xffffffa4
   15ee4:	ldr	r6, [r0]
   15ee8:	str	r1, [fp, #-116]	; 0xffffff8c
   15eec:	ldr	r1, [r4, #24]
   15ef0:	ldr	r2, [sl]
   15ef4:	ldr	r0, [r4, #16]
   15ef8:	mov	r5, r4
   15efc:	ldr	r4, [r6]
   15f00:	ldr	r9, [r6, #8]
   15f04:	sub	r1, r2, r1
   15f08:	cmp	r1, r0
   15f0c:	bls	15f18 <argp_help@@Base+0xb80>
   15f10:	mov	r0, r5
   15f14:	bl	199a8 <argp_failure@@Base+0x2f18>
   15f18:	mov	r0, #0
   15f1c:	mov	r1, #0
   15f20:	ldr	r7, [r5, #4]
   15f24:	ldr	r3, [r5, #12]
   15f28:	str	r0, [fp, #-128]	; 0xffffff80
   15f2c:	sub	r0, fp, #48	; 0x30
   15f30:	str	r1, [r5, #4]
   15f34:	str	r5, [fp, #-84]	; 0xffffffac
   15f38:	str	r6, [fp, #-88]	; 0xffffffa8
   15f3c:	str	r0, [fp, #-80]	; 0xffffffb0
   15f40:	mov	r0, #1
   15f44:	str	r0, [fp, #-76]	; 0xffffffb4
   15f48:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15f4c:	str	r3, [fp, #-120]	; 0xffffff88
   15f50:	str	r7, [fp, #-124]	; 0xffffff84
   15f54:	str	r0, [fp, #-72]	; 0xffffffb8
   15f58:	ldrb	r0, [r4, #12]
   15f5c:	tst	r0, #8
   15f60:	bne	15fa4 <argp_help@@Base+0xc0c>
   15f64:	ldr	r0, [r6, #4]
   15f68:	cmp	r0, #0
   15f6c:	beq	15fa4 <argp_help@@Base+0xc0c>
   15f70:	add	r1, r4, #12
   15f74:	ldr	r2, [r1, #-12]
   15f78:	cmp	r2, #0
   15f7c:	beq	15f8c <argp_help@@Base+0xbf4>
   15f80:	ldrb	r2, [r1]
   15f84:	tst	r2, #2
   15f88:	beq	15f9c <argp_help@@Base+0xc04>
   15f8c:	add	r1, r1, #24
   15f90:	subs	r0, r0, #1
   15f94:	bne	15f74 <argp_help@@Base+0xbdc>
   15f98:	b	15fa4 <argp_help@@Base+0xc0c>
   15f9c:	mov	r0, #1
   15fa0:	str	r0, [fp, #-128]	; 0xffffff80
   15fa4:	ldr	r7, [fp, #-92]	; 0xffffffa4
   15fa8:	ldr	r2, [sl]
   15fac:	ldr	r1, [r7, #24]
   15fb0:	ldr	r0, [r7, #16]
   15fb4:	sub	r1, r2, r1
   15fb8:	movw	r2, #2160	; 0x870
   15fbc:	movt	r2, #3
   15fc0:	cmp	r1, r0
   15fc4:	ldr	r5, [r2, #8]
   15fc8:	bls	15fd4 <argp_help@@Base+0xc3c>
   15fcc:	mov	r0, r7
   15fd0:	bl	199a8 <argp_failure@@Base+0x2f18>
   15fd4:	str	r5, [r7, #12]
   15fd8:	str	r6, [fp, #-104]	; 0xffffff98
   15fdc:	ldr	r7, [r6, #4]
   15fe0:	cmp	r7, #0
   15fe4:	beq	16140 <argp_help@@Base+0xda8>
   15fe8:	add	r6, r4, #12
   15fec:	b	16020 <argp_help@@Base+0xc88>
   15ff0:	cmp	r2, #0
   15ff4:	beq	16018 <argp_help@@Base+0xc80>
   15ff8:	ldrb	r0, [r4, #12]
   15ffc:	tst	r0, #1
   16000:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16004:	movweq	r1, #49459	; 0xc133
   16008:	movteq	r1, #1
   1600c:	movwne	r1, #49955	; 0xc323
   16010:	movtne	r1, #1
   16014:	bl	19ff4 <argp_failure@@Base+0x3564>
   16018:	add	r9, r9, #1
   1601c:	b	16134 <argp_help@@Base+0xd9c>
   16020:	ldr	r5, [r6]
   16024:	tst	r5, #8
   16028:	bne	16134 <argp_help@@Base+0xd9c>
   1602c:	mov	r8, sl
   16030:	ldr	sl, [r6, #-8]
   16034:	sub	r0, sl, #1
   16038:	cmp	r0, #254	; 0xfe
   1603c:	bhi	16130 <argp_help@@Base+0xd98>
   16040:	bl	1145c <__ctype_b_loc@plt>
   16044:	ldr	r0, [r0]
   16048:	add	r0, r0, sl, lsl #1
   1604c:	ldrb	r0, [r0, #1]
   16050:	tst	r0, #64	; 0x40
   16054:	beq	16130 <argp_help@@Base+0xd98>
   16058:	ldrb	r0, [r9]
   1605c:	cmp	sl, r0
   16060:	bne	16130 <argp_help@@Base+0xd98>
   16064:	tst	r5, #2
   16068:	mov	sl, r8
   1606c:	bne	16018 <argp_help@@Base+0xc80>
   16070:	movw	r0, #2160	; 0x870
   16074:	sub	r1, fp, #88	; 0x58
   16078:	movt	r0, #3
   1607c:	ldr	r0, [r0, #8]
   16080:	bl	183e8 <argp_failure@@Base+0x1958>
   16084:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16088:	ldr	r0, [sl]
   1608c:	ldr	r1, [r1]
   16090:	cmp	r0, r1
   16094:	bcc	160b0 <argp_help@@Base+0xd18>
   16098:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1609c:	mov	r1, #1
   160a0:	bl	19f08 <argp_failure@@Base+0x3478>
   160a4:	cmp	r0, #0
   160a8:	beq	160c0 <argp_help@@Base+0xd28>
   160ac:	ldr	r0, [sl]
   160b0:	add	r1, r0, #1
   160b4:	str	r1, [sl]
   160b8:	mov	r1, #45	; 0x2d
   160bc:	strb	r1, [r0]
   160c0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   160c4:	ldr	r0, [sl]
   160c8:	ldrb	r5, [r9]
   160cc:	ldr	r1, [r1]
   160d0:	cmp	r0, r1
   160d4:	bcc	160f0 <argp_help@@Base+0xd58>
   160d8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   160dc:	mov	r1, #1
   160e0:	bl	19f08 <argp_failure@@Base+0x3478>
   160e4:	cmp	r0, #0
   160e8:	beq	160fc <argp_help@@Base+0xd64>
   160ec:	ldr	r0, [sl]
   160f0:	add	r1, r0, #1
   160f4:	str	r1, [sl]
   160f8:	strb	r5, [r0]
   160fc:	ldr	r0, [fp, #-128]	; 0xffffff80
   16100:	ldr	r2, [r4, #8]
   16104:	cmp	r0, #0
   16108:	beq	15ff0 <argp_help@@Base+0xc58>
   1610c:	movw	r0, #2160	; 0x870
   16110:	movt	r0, #3
   16114:	ldr	r0, [r0]
   16118:	cmp	r0, #0
   1611c:	bne	15ff0 <argp_help@@Base+0xc58>
   16120:	cmp	r2, #0
   16124:	movne	r0, #1
   16128:	strne	r0, [fp, #-40]	; 0xffffffd8
   1612c:	b	16018 <argp_help@@Base+0xc80>
   16130:	mov	sl, r8
   16134:	add	r6, r6, #24
   16138:	subs	r7, r7, #1
   1613c:	bne	16020 <argp_help@@Base+0xc88>
   16140:	ldrb	r0, [r4, #12]
   16144:	tst	r0, #8
   16148:	bne	1621c <argp_help@@Base+0xe84>
   1614c:	ldr	r6, [fp, #-92]	; 0xffffffa4
   16150:	ldr	r2, [sl]
   16154:	ldr	r1, [r6, #24]
   16158:	ldr	r0, [r6, #16]
   1615c:	sub	r1, r2, r1
   16160:	movw	r2, #2160	; 0x870
   16164:	movt	r2, #3
   16168:	cmp	r1, r0
   1616c:	ldr	r5, [r2, #12]
   16170:	bls	1617c <argp_help@@Base+0xde4>
   16174:	mov	r0, r6
   16178:	bl	199a8 <argp_failure@@Base+0x2f18>
   1617c:	ldr	r0, [fp, #-104]	; 0xffffff98
   16180:	str	r5, [r6, #12]
   16184:	ldr	r5, [r0, #4]
   16188:	cmp	r5, #0
   1618c:	beq	162fc <argp_help@@Base+0xf64>
   16190:	add	r6, r4, #12
   16194:	ldr	r0, [r6, #-12]
   16198:	cmp	r0, #0
   1619c:	beq	1620c <argp_help@@Base+0xe74>
   161a0:	ldrb	r0, [r6]
   161a4:	tst	r0, #2
   161a8:	bne	1620c <argp_help@@Base+0xe74>
   161ac:	movw	r0, #2160	; 0x870
   161b0:	sub	r1, fp, #88	; 0x58
   161b4:	movt	r0, #3
   161b8:	ldr	r0, [r0, #12]
   161bc:	bl	183e8 <argp_failure@@Base+0x1958>
   161c0:	ldr	r2, [r6, #-12]
   161c4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   161c8:	movw	r1, #49960	; 0xc328
   161cc:	movt	r1, #1
   161d0:	bl	19ff4 <argp_failure@@Base+0x3564>
   161d4:	ldr	r2, [r4, #8]
   161d8:	cmp	r2, #0
   161dc:	beq	1620c <argp_help@@Base+0xe74>
   161e0:	ldrb	r0, [r4, #12]
   161e4:	tst	r0, #1
   161e8:	bne	161fc <argp_help@@Base+0xe64>
   161ec:	ldr	r0, [fp, #-92]	; 0xffffffa4
   161f0:	movw	r1, #49965	; 0xc32d
   161f4:	movt	r1, #1
   161f8:	b	16208 <argp_help@@Base+0xe70>
   161fc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16200:	movw	r1, #49969	; 0xc331
   16204:	movt	r1, #1
   16208:	bl	19ff4 <argp_failure@@Base+0x3564>
   1620c:	add	r6, r6, #24
   16210:	subs	r5, r5, #1
   16214:	bne	16194 <argp_help@@Base+0xdfc>
   16218:	b	162fc <argp_help@@Base+0xf64>
   1621c:	ldr	r6, [fp, #-92]	; 0xffffffa4
   16220:	ldr	r2, [sl]
   16224:	ldr	r1, [r6, #24]
   16228:	ldr	r0, [r6, #16]
   1622c:	sub	r1, r2, r1
   16230:	movw	r2, #2160	; 0x870
   16234:	movt	r2, #3
   16238:	cmp	r1, r0
   1623c:	ldr	r5, [r2, #16]
   16240:	bls	1624c <argp_help@@Base+0xeb4>
   16244:	mov	r0, r6
   16248:	bl	199a8 <argp_failure@@Base+0x2f18>
   1624c:	ldr	r0, [fp, #-104]	; 0xffffff98
   16250:	str	r5, [r6, #12]
   16254:	ldr	r6, [r0, #4]
   16258:	cmp	r6, #0
   1625c:	beq	162fc <argp_help@@Base+0xf64>
   16260:	add	r9, r4, #12
   16264:	ldr	r0, [r9, #-12]
   16268:	cmp	r0, #0
   1626c:	beq	162f0 <argp_help@@Base+0xf58>
   16270:	ldrb	r0, [r9]
   16274:	tst	r0, #2
   16278:	bne	162f0 <argp_help@@Base+0xf58>
   1627c:	movw	r0, #2160	; 0x870
   16280:	sub	r1, fp, #88	; 0x58
   16284:	movt	r0, #3
   16288:	ldr	r0, [r0, #16]
   1628c:	bl	183e8 <argp_failure@@Base+0x1958>
   16290:	ldr	r5, [r9, #-12]
   16294:	mov	r0, r5
   16298:	bl	11474 <strlen@plt>
   1629c:	cmp	r0, #0
   162a0:	beq	162f0 <argp_help@@Base+0xf58>
   162a4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   162a8:	mov	r7, r0
   162ac:	ldr	r0, [sl]
   162b0:	ldr	r2, [r2]
   162b4:	add	r1, r0, r7
   162b8:	cmp	r1, r2
   162bc:	bls	162d8 <argp_help@@Base+0xf40>
   162c0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   162c4:	mov	r1, r7
   162c8:	bl	19f08 <argp_failure@@Base+0x3478>
   162cc:	cmp	r0, #0
   162d0:	beq	162f0 <argp_help@@Base+0xf58>
   162d4:	ldr	r0, [sl]
   162d8:	mov	r1, r5
   162dc:	mov	r2, r7
   162e0:	bl	11384 <memcpy@plt>
   162e4:	ldr	r0, [sl]
   162e8:	add	r0, r0, r7
   162ec:	str	r0, [sl]
   162f0:	add	r9, r9, #24
   162f4:	subs	r6, r6, #1
   162f8:	bne	16264 <argp_help@@Base+0xecc>
   162fc:	ldr	r5, [fp, #-92]	; 0xffffffa4
   16300:	ldr	r2, [sl]
   16304:	ldr	r1, [r5, #24]
   16308:	ldr	r0, [r5, #16]
   1630c:	sub	r1, r2, r1
   16310:	cmp	r1, r0
   16314:	bls	16320 <argp_help@@Base+0xf88>
   16318:	mov	r0, r5
   1631c:	bl	199a8 <argp_failure@@Base+0x2f18>
   16320:	mov	r0, #0
   16324:	ldr	r6, [fp, #-104]	; 0xffffff98
   16328:	str	r0, [r5, #4]
   1632c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   16330:	cmp	r0, #0
   16334:	beq	1638c <argp_help@@Base+0xff4>
   16338:	ldrb	r0, [r4, #12]
   1633c:	tst	r0, #8
   16340:	bne	1636c <argp_help@@Base+0xfd4>
   16344:	ldr	r5, [r4, #4]
   16348:	sub	r0, r5, #1
   1634c:	cmp	r0, #254	; 0xfe
   16350:	bhi	1636c <argp_help@@Base+0xfd4>
   16354:	bl	1145c <__ctype_b_loc@plt>
   16358:	ldr	r0, [r0]
   1635c:	add	r0, r0, r5, lsl #1
   16360:	ldrb	r0, [r0, #1]
   16364:	tst	r0, #64	; 0x40
   16368:	bne	16698 <argp_help@@Base+0x1300>
   1636c:	ldr	r0, [r4]
   16370:	cmp	r0, #0
   16374:	bne	16698 <argp_help@@Base+0x1300>
   16378:	ldr	r1, [r6, #20]
   1637c:	ldr	r0, [r4, #16]
   16380:	sub	r2, fp, #88	; 0x58
   16384:	bl	185f0 <argp_failure@@Base+0x1b60>
   16388:	b	16694 <argp_help@@Base+0x12fc>
   1638c:	ldr	r6, [r6, #20]
   16390:	ldr	r7, [r4, #16]
   16394:	cmp	r6, #0
   16398:	mov	r9, r7
   1639c:	beq	163d8 <argp_help@@Base+0x1040>
   163a0:	ldr	r0, [r6, #20]
   163a4:	mov	r9, r7
   163a8:	cmp	r0, #0
   163ac:	beq	163d8 <argp_help@@Base+0x1040>
   163b0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   163b4:	ldr	r4, [r4, #4]
   163b8:	mov	r0, r6
   163bc:	bl	13b6c <argp_parse@@Base+0xc3c>
   163c0:	ldr	r3, [r6, #20]
   163c4:	mov	r2, r0
   163c8:	mov	r0, r4
   163cc:	mov	r1, r7
   163d0:	blx	r3
   163d4:	mov	r9, r0
   163d8:	ldr	r4, [fp, #-92]	; 0xffffffa4
   163dc:	movw	r5, #2160	; 0x870
   163e0:	cmp	r9, #0
   163e4:	movt	r5, #3
   163e8:	beq	16630 <argp_help@@Base+0x1298>
   163ec:	ldrb	r0, [r9]
   163f0:	cmp	r0, #0
   163f4:	beq	16620 <argp_help@@Base+0x1288>
   163f8:	ldr	r1, [r4, #24]
   163fc:	ldr	r2, [sl]
   16400:	ldr	r0, [r4, #16]
   16404:	str	r7, [fp, #-128]	; 0xffffff80
   16408:	sub	r1, r2, r1
   1640c:	cmp	r1, r0
   16410:	bls	1642c <argp_help@@Base+0x1094>
   16414:	mov	r0, r4
   16418:	bl	199a8 <argp_failure@@Base+0x2f18>
   1641c:	ldr	r1, [r4, #24]
   16420:	ldr	r2, [sl]
   16424:	ldr	r0, [r4, #16]
   16428:	sub	r1, r2, r1
   1642c:	ldr	r5, [r5, #20]
   16430:	ldr	r8, [r4, #20]
   16434:	cmp	r1, r0
   16438:	mov	r6, r5
   1643c:	bls	16464 <argp_help@@Base+0x10cc>
   16440:	mov	r0, r4
   16444:	bl	199a8 <argp_failure@@Base+0x2f18>
   16448:	ldr	r1, [r4, #24]
   1644c:	ldr	r2, [sl]
   16450:	ldr	r0, [r4, #16]
   16454:	sub	r1, r2, r1
   16458:	movw	r2, #2160	; 0x870
   1645c:	movt	r2, #3
   16460:	ldr	r6, [r2, #20]
   16464:	bic	r7, r8, r8, asr #31
   16468:	movw	r8, #2160	; 0x870
   1646c:	str	r5, [r4, #4]
   16470:	cmp	r1, r0
   16474:	mov	r5, r6
   16478:	movt	r8, #3
   1647c:	bls	1648c <argp_help@@Base+0x10f4>
   16480:	mov	r0, r4
   16484:	bl	199a8 <argp_failure@@Base+0x2f18>
   16488:	ldr	r5, [r8, #20]
   1648c:	add	r0, r5, #3
   16490:	str	r6, [r4, #12]
   16494:	cmp	r7, r0
   16498:	bls	164e0 <argp_help@@Base+0x1148>
   1649c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   164a0:	ldr	r0, [sl]
   164a4:	ldr	r7, [fp, #-128]	; 0xffffff80
   164a8:	ldr	r1, [r1]
   164ac:	cmp	r0, r1
   164b0:	bcc	164cc <argp_help@@Base+0x1134>
   164b4:	mov	r0, r4
   164b8:	mov	r1, #1
   164bc:	bl	19f08 <argp_failure@@Base+0x3478>
   164c0:	cmp	r0, #0
   164c4:	beq	165c4 <argp_help@@Base+0x122c>
   164c8:	ldr	r0, [sl]
   164cc:	add	r1, r0, #1
   164d0:	str	r1, [sl]
   164d4:	mov	r1, #10
   164d8:	strb	r1, [r0]
   164dc:	b	165c4 <argp_help@@Base+0x122c>
   164e0:	cmp	r7, r5
   164e4:	bcs	16574 <argp_help@@Base+0x11dc>
   164e8:	ldr	r1, [r4, #24]
   164ec:	ldr	r2, [sl]
   164f0:	ldr	r0, [r4, #16]
   164f4:	sub	r1, r2, r1
   164f8:	cmp	r1, r0
   164fc:	bls	16508 <argp_help@@Base+0x1170>
   16500:	mov	r0, r4
   16504:	bl	199a8 <argp_failure@@Base+0x2f18>
   16508:	ldr	r0, [r4, #20]
   1650c:	ldr	r7, [fp, #-128]	; 0xffffff80
   16510:	bic	r0, r0, r0, asr #31
   16514:	sub	r1, r5, r0
   16518:	cmp	r1, #1
   1651c:	blt	165c4 <argp_help@@Base+0x122c>
   16520:	add	r1, r5, #1
   16524:	sub	r6, r1, r0
   16528:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1652c:	ldr	r0, [sl]
   16530:	ldr	r1, [r1]
   16534:	cmp	r0, r1
   16538:	bcc	16554 <argp_help@@Base+0x11bc>
   1653c:	mov	r0, r4
   16540:	mov	r1, #1
   16544:	bl	19f08 <argp_failure@@Base+0x3478>
   16548:	cmp	r0, #0
   1654c:	beq	16564 <argp_help@@Base+0x11cc>
   16550:	ldr	r0, [sl]
   16554:	add	r1, r0, #1
   16558:	str	r1, [sl]
   1655c:	mov	r1, #32
   16560:	strb	r1, [r0]
   16564:	sub	r6, r6, #1
   16568:	cmp	r6, #1
   1656c:	bgt	16528 <argp_help@@Base+0x1190>
   16570:	b	165c4 <argp_help@@Base+0x122c>
   16574:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16578:	ldr	r7, [fp, #-128]	; 0xffffff80
   1657c:	ldr	r1, [r0]
   16580:	ldr	r0, [sl]
   16584:	add	r2, r0, #3
   16588:	cmp	r2, r1
   1658c:	bls	165a8 <argp_help@@Base+0x1210>
   16590:	mov	r0, r4
   16594:	mov	r1, #3
   16598:	bl	19f08 <argp_failure@@Base+0x3478>
   1659c:	cmp	r0, #0
   165a0:	beq	165c4 <argp_help@@Base+0x122c>
   165a4:	ldr	r0, [sl]
   165a8:	mov	r1, #32
   165ac:	strb	r1, [r0, #2]
   165b0:	movw	r1, #8224	; 0x2020
   165b4:	strh	r1, [r0]
   165b8:	ldr	r0, [sl]
   165bc:	add	r0, r0, #3
   165c0:	str	r0, [sl]
   165c4:	mov	r0, r9
   165c8:	bl	11474 <strlen@plt>
   165cc:	cmp	r0, #0
   165d0:	beq	16620 <argp_help@@Base+0x1288>
   165d4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   165d8:	mov	r6, r0
   165dc:	ldr	r0, [sl]
   165e0:	ldr	r2, [r2]
   165e4:	add	r1, r0, r6
   165e8:	cmp	r1, r2
   165ec:	bls	16608 <argp_help@@Base+0x1270>
   165f0:	mov	r0, r4
   165f4:	mov	r1, r6
   165f8:	bl	19f08 <argp_failure@@Base+0x3478>
   165fc:	cmp	r0, #0
   16600:	beq	16620 <argp_help@@Base+0x1288>
   16604:	ldr	r0, [sl]
   16608:	mov	r1, r9
   1660c:	mov	r2, r6
   16610:	bl	11384 <memcpy@plt>
   16614:	ldr	r0, [sl]
   16618:	add	r0, r0, r6
   1661c:	str	r0, [sl]
   16620:	cmp	r9, r7
   16624:	beq	16630 <argp_help@@Base+0x1298>
   16628:	mov	r0, r9
   1662c:	bl	14200 <argp_parse@@Base+0x12d0>
   16630:	ldr	r2, [r4, #24]
   16634:	ldr	r0, [sl]
   16638:	ldr	r1, [r4, #16]
   1663c:	sub	r2, r0, r2
   16640:	cmp	r2, r1
   16644:	bls	16654 <argp_help@@Base+0x12bc>
   16648:	mov	r0, r4
   1664c:	bl	199a8 <argp_failure@@Base+0x2f18>
   16650:	ldr	r0, [r4, #28]
   16654:	mov	r1, #0
   16658:	ldr	r6, [fp, #-104]	; 0xffffff98
   1665c:	str	r1, [r4, #4]
   16660:	ldr	r1, [r4, #32]
   16664:	cmp	r0, r1
   16668:	bcc	16684 <argp_help@@Base+0x12ec>
   1666c:	mov	r0, r4
   16670:	mov	r1, #1
   16674:	bl	19f08 <argp_failure@@Base+0x3478>
   16678:	cmp	r0, #0
   1667c:	beq	16694 <argp_help@@Base+0x12fc>
   16680:	ldr	r0, [sl]
   16684:	add	r1, r0, #1
   16688:	str	r1, [sl]
   1668c:	mov	r1, #10
   16690:	strb	r1, [r0]
   16694:	str	r6, [fp, #-48]	; 0xffffffd0
   16698:	ldr	r4, [fp, #-92]	; 0xffffffa4
   1669c:	ldr	r2, [sl]
   166a0:	ldr	r1, [r4, #24]
   166a4:	ldr	r0, [r4, #16]
   166a8:	sub	r1, r2, r1
   166ac:	cmp	r1, r0
   166b0:	bls	166cc <argp_help@@Base+0x1334>
   166b4:	mov	r0, r4
   166b8:	bl	199a8 <argp_failure@@Base+0x2f18>
   166bc:	ldr	r1, [r4, #24]
   166c0:	ldr	r2, [sl]
   166c4:	ldr	r0, [r4, #16]
   166c8:	sub	r1, r2, r1
   166cc:	ldr	r2, [fp, #-124]	; 0xffffff84
   166d0:	ldr	r5, [fp, #-120]	; 0xffffff88
   166d4:	cmp	r1, r0
   166d8:	str	r2, [r4, #4]
   166dc:	bls	166e8 <argp_help@@Base+0x1350>
   166e0:	mov	r0, r4
   166e4:	bl	199a8 <argp_failure@@Base+0x2f18>
   166e8:	ldr	r1, [fp, #-116]	; 0xffffff8c
   166ec:	add	r6, r6, #28
   166f0:	str	r5, [r4, #12]
   166f4:	subs	r1, r1, #1
   166f8:	bne	15ee8 <argp_help@@Base+0xb50>
   166fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16700:	cmp	r0, #0
   16704:	movw	r0, #2160	; 0x870
   16708:	movt	r0, #3
   1670c:	ldrne	r0, [r0, #4]
   16710:	cmpne	r0, #0
   16714:	bne	1672c <argp_help@@Base+0x1394>
   16718:	ldr	r6, [fp, #-132]	; 0xffffff7c
   1671c:	mov	r5, #1
   16720:	tst	r6, #32
   16724:	bne	15d3c <argp_help@@Base+0x9a4>
   16728:	b	15d64 <argp_help@@Base+0x9cc>
   1672c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16730:	movw	r5, #49839	; 0xc2af
   16734:	movt	r5, #1
   16738:	cmp	r0, #0
   1673c:	beq	16754 <argp_help@@Base+0x13bc>
   16740:	ldr	r6, [r0]
   16744:	cmp	r6, #0
   16748:	ldrne	r0, [r6, #20]
   1674c:	cmpne	r0, #0
   16750:	bne	16850 <argp_help@@Base+0x14b8>
   16754:	ldrb	r0, [r5]
   16758:	cmp	r0, #0
   1675c:	beq	16834 <argp_help@@Base+0x149c>
   16760:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16764:	ldr	r0, [sl]
   16768:	ldr	r1, [r1]
   1676c:	cmp	r0, r1
   16770:	bcc	1678c <argp_help@@Base+0x13f4>
   16774:	mov	r0, r4
   16778:	mov	r1, #1
   1677c:	bl	19f08 <argp_failure@@Base+0x3478>
   16780:	cmp	r0, #0
   16784:	beq	1679c <argp_help@@Base+0x1404>
   16788:	ldr	r0, [sl]
   1678c:	add	r1, r0, #1
   16790:	str	r1, [sl]
   16794:	mov	r1, #10
   16798:	strb	r1, [r0]
   1679c:	mov	r0, r5
   167a0:	bl	11474 <strlen@plt>
   167a4:	cmp	r0, #0
   167a8:	beq	167f8 <argp_help@@Base+0x1460>
   167ac:	ldr	r2, [fp, #-100]	; 0xffffff9c
   167b0:	mov	r6, r0
   167b4:	ldr	r0, [sl]
   167b8:	ldr	r2, [r2]
   167bc:	add	r1, r0, r6
   167c0:	cmp	r1, r2
   167c4:	bls	167e0 <argp_help@@Base+0x1448>
   167c8:	mov	r0, r4
   167cc:	mov	r1, r6
   167d0:	bl	19f08 <argp_failure@@Base+0x3478>
   167d4:	cmp	r0, #0
   167d8:	beq	167f8 <argp_help@@Base+0x1460>
   167dc:	ldr	r0, [sl]
   167e0:	mov	r1, r5
   167e4:	mov	r2, r6
   167e8:	bl	11384 <memcpy@plt>
   167ec:	ldr	r0, [sl]
   167f0:	add	r0, r0, r6
   167f4:	str	r0, [sl]
   167f8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   167fc:	ldr	r0, [sl]
   16800:	ldr	r1, [r1]
   16804:	cmp	r0, r1
   16808:	bcc	16824 <argp_help@@Base+0x148c>
   1680c:	mov	r0, r4
   16810:	mov	r1, #1
   16814:	bl	19f08 <argp_failure@@Base+0x3478>
   16818:	cmp	r0, #0
   1681c:	beq	16834 <argp_help@@Base+0x149c>
   16820:	ldr	r0, [sl]
   16824:	add	r1, r0, #1
   16828:	str	r1, [sl]
   1682c:	mov	r1, #10
   16830:	strb	r1, [r0]
   16834:	movw	r0, #49839	; 0xc2af
   16838:	movt	r0, #1
   1683c:	cmp	r5, r0
   16840:	beq	16718 <argp_help@@Base+0x1380>
   16844:	mov	r0, r5
   16848:	bl	14200 <argp_parse@@Base+0x12d0>
   1684c:	b	16718 <argp_help@@Base+0x1380>
   16850:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16854:	mov	r0, r6
   16858:	bl	13b6c <argp_parse@@Base+0xc3c>
   1685c:	ldr	r3, [r6, #20]
   16860:	movw	r1, #49839	; 0xc2af
   16864:	mov	r2, r0
   16868:	movw	r0, #5
   1686c:	movt	r0, #512	; 0x200
   16870:	movt	r1, #1
   16874:	blx	r3
   16878:	mov	r5, r0
   1687c:	cmp	r0, #0
   16880:	bne	16754 <argp_help@@Base+0x13bc>
   16884:	b	16718 <argp_help@@Base+0x1380>
   16888:	add	r0, r0, #112	; 0x70
   1688c:	b	158fc <argp_help@@Base+0x564>

00016890 <argp_state_help@@Base>:
   16890:	push	{r4, r5, fp, lr}
   16894:	add	fp, sp, #8
   16898:	sub	sp, sp, #8
   1689c:	mov	r4, r2
   168a0:	mov	r2, r1
   168a4:	cmp	r0, #0
   168a8:	beq	168f4 <argp_state_help@@Base+0x64>
   168ac:	cmp	r2, #0
   168b0:	beq	1692c <argp_state_help@@Base+0x9c>
   168b4:	ldr	r1, [r0, #16]
   168b8:	mov	r5, r0
   168bc:	ands	r0, r1, #2
   168c0:	bne	1692c <argp_state_help@@Base+0x9c>
   168c4:	ldr	r3, [r5, #40]	; 0x28
   168c8:	ldr	r0, [r5]
   168cc:	and	r1, r1, #64	; 0x40
   168d0:	orr	r4, r4, r1, lsl #1
   168d4:	mov	r1, r5
   168d8:	str	r3, [sp]
   168dc:	mov	r3, r4
   168e0:	bl	153c4 <argp_help@@Base+0x2c>
   168e4:	ldrb	r0, [r5, #16]
   168e8:	tst	r0, #32
   168ec:	beq	1691c <argp_state_help@@Base+0x8c>
   168f0:	b	1692c <argp_state_help@@Base+0x9c>
   168f4:	cmp	r2, #0
   168f8:	beq	1692c <argp_state_help@@Base+0x9c>
   168fc:	movw	r0, #2224	; 0x8b0
   16900:	mov	r1, #0
   16904:	mov	r3, r4
   16908:	movt	r0, #3
   1690c:	ldr	r0, [r0]
   16910:	str	r0, [sp]
   16914:	mov	r0, #0
   16918:	bl	153c4 <argp_help@@Base+0x2c>
   1691c:	tst	r4, #256	; 0x100
   16920:	bne	16934 <argp_state_help@@Base+0xa4>
   16924:	tst	r4, #512	; 0x200
   16928:	bne	16944 <argp_state_help@@Base+0xb4>
   1692c:	sub	sp, fp, #8
   16930:	pop	{r4, r5, fp, pc}
   16934:	movw	r0, #2216	; 0x8a8
   16938:	movt	r0, #3
   1693c:	ldr	r0, [r0]
   16940:	bl	11468 <exit@plt>
   16944:	mov	r0, #0
   16948:	bl	11468 <exit@plt>

0001694c <argp_error@@Base>:
   1694c:	sub	sp, sp, #8
   16950:	push	{r4, r5, r6, sl, fp, lr}
   16954:	add	fp, sp, #16
   16958:	sub	sp, sp, #8
   1695c:	mov	r6, r1
   16960:	mov	r4, r0
   16964:	cmp	r0, #0
   16968:	str	r3, [fp, #12]
   1696c:	str	r2, [fp, #8]
   16970:	beq	16988 <argp_error@@Base+0x3c>
   16974:	ldrb	r0, [r4, #16]
   16978:	tst	r0, #2
   1697c:	bne	16a50 <argp_error@@Base+0x104>
   16980:	add	r0, r4, #44	; 0x2c
   16984:	b	16990 <argp_error@@Base+0x44>
   16988:	movw	r0, #2232	; 0x8b8
   1698c:	movt	r0, #3
   16990:	ldr	r5, [r0]
   16994:	cmp	r5, #0
   16998:	beq	16a50 <argp_error@@Base+0x104>
   1699c:	mov	r0, r5
   169a0:	bl	11528 <flockfile@plt>
   169a4:	add	r0, fp, #8
   169a8:	cmp	r4, #0
   169ac:	mov	r1, r5
   169b0:	str	r0, [sp, #4]
   169b4:	movw	r0, #2224	; 0x8b0
   169b8:	movt	r0, #3
   169bc:	addne	r0, r4, #40	; 0x28
   169c0:	ldr	r0, [r0]
   169c4:	bl	112f4 <fputs_unlocked@plt>
   169c8:	ldr	r0, [r5, #20]
   169cc:	ldr	r1, [r5, #24]
   169d0:	cmp	r0, r1
   169d4:	bcs	16a60 <argp_error@@Base+0x114>
   169d8:	add	r1, r0, #1
   169dc:	str	r1, [r5, #20]
   169e0:	mov	r1, #58	; 0x3a
   169e4:	strb	r1, [r0]
   169e8:	ldr	r0, [r5, #20]
   169ec:	ldr	r1, [r5, #24]
   169f0:	cmp	r0, r1
   169f4:	bcs	16a70 <argp_error@@Base+0x124>
   169f8:	add	r1, r0, #1
   169fc:	str	r1, [r5, #20]
   16a00:	mov	r1, #32
   16a04:	strb	r1, [r0]
   16a08:	ldr	r2, [sp, #4]
   16a0c:	mov	r0, r5
   16a10:	mov	r1, r6
   16a14:	bl	114f8 <vfprintf@plt>
   16a18:	ldr	r0, [r5, #20]
   16a1c:	ldr	r1, [r5, #24]
   16a20:	cmp	r0, r1
   16a24:	bcs	16a80 <argp_error@@Base+0x134>
   16a28:	add	r1, r0, #1
   16a2c:	str	r1, [r5, #20]
   16a30:	mov	r1, #10
   16a34:	strb	r1, [r0]
   16a38:	mov	r0, r4
   16a3c:	mov	r1, r5
   16a40:	mov	r2, #260	; 0x104
   16a44:	bl	16890 <argp_state_help@@Base>
   16a48:	mov	r0, r5
   16a4c:	bl	113cc <funlockfile@plt>
   16a50:	sub	sp, fp, #16
   16a54:	pop	{r4, r5, r6, sl, fp, lr}
   16a58:	add	sp, sp, #8
   16a5c:	bx	lr
   16a60:	mov	r0, r5
   16a64:	mov	r1, #58	; 0x3a
   16a68:	bl	114e0 <__overflow@plt>
   16a6c:	b	169e8 <argp_error@@Base+0x9c>
   16a70:	mov	r0, r5
   16a74:	mov	r1, #32
   16a78:	bl	114e0 <__overflow@plt>
   16a7c:	b	16a08 <argp_error@@Base+0xbc>
   16a80:	mov	r0, r5
   16a84:	mov	r1, #10
   16a88:	bl	114e0 <__overflow@plt>
   16a8c:	b	16a38 <argp_error@@Base+0xec>

00016a90 <argp_failure@@Base>:
   16a90:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16a94:	add	fp, sp, #24
   16a98:	sub	sp, sp, #200	; 0xc8
   16a9c:	mov	r4, r3
   16aa0:	mov	r9, r2
   16aa4:	mov	r8, r1
   16aa8:	mov	r5, r0
   16aac:	cmp	r0, #0
   16ab0:	beq	16ac8 <argp_failure@@Base+0x38>
   16ab4:	ldrb	r0, [r5, #16]
   16ab8:	tst	r0, #2
   16abc:	bne	16c40 <argp_failure@@Base+0x1b0>
   16ac0:	add	r0, r5, #44	; 0x2c
   16ac4:	b	16ad0 <argp_failure@@Base+0x40>
   16ac8:	movw	r0, #2232	; 0x8b8
   16acc:	movt	r0, #3
   16ad0:	ldr	r6, [r0]
   16ad4:	cmp	r6, #0
   16ad8:	beq	16c40 <argp_failure@@Base+0x1b0>
   16adc:	mov	r0, r6
   16ae0:	bl	11528 <flockfile@plt>
   16ae4:	movw	r0, #2224	; 0x8b0
   16ae8:	cmp	r5, #0
   16aec:	mov	r1, r6
   16af0:	movt	r0, #3
   16af4:	addne	r0, r5, #40	; 0x28
   16af8:	ldr	r0, [r0]
   16afc:	bl	112f4 <fputs_unlocked@plt>
   16b00:	cmp	r4, #0
   16b04:	beq	16b60 <argp_failure@@Base+0xd0>
   16b08:	add	r0, fp, #8
   16b0c:	str	r0, [sp]
   16b10:	ldr	r0, [r6, #20]
   16b14:	ldr	r1, [r6, #24]
   16b18:	cmp	r0, r1
   16b1c:	bcs	16c58 <argp_failure@@Base+0x1c8>
   16b20:	add	r1, r0, #1
   16b24:	str	r1, [r6, #20]
   16b28:	mov	r1, #58	; 0x3a
   16b2c:	strb	r1, [r0]
   16b30:	ldr	r0, [r6, #20]
   16b34:	ldr	r1, [r6, #24]
   16b38:	cmp	r0, r1
   16b3c:	bcs	16c68 <argp_failure@@Base+0x1d8>
   16b40:	add	r1, r0, #1
   16b44:	str	r1, [r6, #20]
   16b48:	mov	r1, #32
   16b4c:	strb	r1, [r0]
   16b50:	ldr	r2, [sp]
   16b54:	mov	r0, r6
   16b58:	mov	r1, r4
   16b5c:	bl	114f8 <vfprintf@plt>
   16b60:	cmp	r9, #0
   16b64:	beq	16bf0 <argp_failure@@Base+0x160>
   16b68:	mov	r4, r6
   16b6c:	ldr	r0, [r4, #20]!
   16b70:	mov	r7, r4
   16b74:	ldr	r1, [r7, #4]!
   16b78:	cmp	r0, r1
   16b7c:	bcs	16c78 <argp_failure@@Base+0x1e8>
   16b80:	add	r1, r0, #1
   16b84:	str	r1, [r4]
   16b88:	mov	r1, #58	; 0x3a
   16b8c:	strb	r1, [r0]
   16b90:	ldr	r0, [r4]
   16b94:	ldr	r1, [r7]
   16b98:	cmp	r0, r1
   16b9c:	bcs	16c88 <argp_failure@@Base+0x1f8>
   16ba0:	add	r1, r0, #1
   16ba4:	str	r1, [r4]
   16ba8:	mov	r1, #32
   16bac:	strb	r1, [r0]
   16bb0:	mov	r1, sp
   16bb4:	mov	r0, r9
   16bb8:	mov	r2, #200	; 0xc8
   16bbc:	bl	114b0 <strerror_r@plt>
   16bc0:	cmp	r0, #0
   16bc4:	bne	16be4 <argp_failure@@Base+0x154>
   16bc8:	mov	r0, r9
   16bcc:	bl	11438 <strerror@plt>
   16bd0:	mov	r1, r0
   16bd4:	movw	r0, #49219	; 0xc043
   16bd8:	movt	r0, #1
   16bdc:	cmp	r1, #0
   16be0:	movne	r0, r1
   16be4:	mov	r1, r6
   16be8:	bl	112f4 <fputs_unlocked@plt>
   16bec:	b	16bf8 <argp_failure@@Base+0x168>
   16bf0:	add	r7, r6, #24
   16bf4:	add	r4, r6, #20
   16bf8:	ldr	r0, [r4]
   16bfc:	ldr	r1, [r7]
   16c00:	cmp	r0, r1
   16c04:	bcs	16c48 <argp_failure@@Base+0x1b8>
   16c08:	add	r1, r0, #1
   16c0c:	str	r1, [r4]
   16c10:	mov	r1, #10
   16c14:	strb	r1, [r0]
   16c18:	mov	r0, r6
   16c1c:	bl	113cc <funlockfile@plt>
   16c20:	cmp	r8, #0
   16c24:	beq	16c40 <argp_failure@@Base+0x1b0>
   16c28:	cmp	r5, #0
   16c2c:	ldrbne	r0, [r5, #16]
   16c30:	tstne	r0, #32
   16c34:	bne	16c40 <argp_failure@@Base+0x1b0>
   16c38:	mov	r0, r8
   16c3c:	bl	11468 <exit@plt>
   16c40:	sub	sp, fp, #24
   16c44:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16c48:	mov	r0, r6
   16c4c:	mov	r1, #10
   16c50:	bl	114e0 <__overflow@plt>
   16c54:	b	16c18 <argp_failure@@Base+0x188>
   16c58:	mov	r0, r6
   16c5c:	mov	r1, #58	; 0x3a
   16c60:	bl	114e0 <__overflow@plt>
   16c64:	b	16b30 <argp_failure@@Base+0xa0>
   16c68:	mov	r0, r6
   16c6c:	mov	r1, #32
   16c70:	bl	114e0 <__overflow@plt>
   16c74:	b	16b50 <argp_failure@@Base+0xc0>
   16c78:	mov	r0, r6
   16c7c:	mov	r1, #58	; 0x3a
   16c80:	bl	114e0 <__overflow@plt>
   16c84:	b	16b90 <argp_failure@@Base+0x100>
   16c88:	mov	r0, r6
   16c8c:	mov	r1, #32
   16c90:	bl	114e0 <__overflow@plt>
   16c94:	b	16bb0 <argp_failure@@Base+0x120>
   16c98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16c9c:	add	fp, sp, #28
   16ca0:	sub	sp, sp, #52	; 0x34
   16ca4:	ldr	r4, [r0]
   16ca8:	ldr	r9, [r0, #16]
   16cac:	mov	r7, r0
   16cb0:	mov	r0, #16
   16cb4:	mov	sl, r1
   16cb8:	bl	15314 <_obstack_memory_used@@Base+0xcac>
   16cbc:	cmp	r0, #0
   16cc0:	beq	1729c <argp_failure@@Base+0x80c>
   16cc4:	mov	r1, #0
   16cc8:	str	r0, [fp, #-32]	; 0xffffffe0
   16ccc:	cmp	r4, #0
   16cd0:	str	r7, [sp, #40]	; 0x28
   16cd4:	str	r1, [r0, #12]!
   16cd8:	str	r0, [sp, #20]
   16cdc:	str	r1, [r0, #-8]
   16ce0:	beq	16f30 <argp_failure@@Base+0x4a0>
   16ce4:	ldrb	r0, [r4, #12]
   16ce8:	tst	r0, #4
   16cec:	bne	172bc <argp_failure@@Base+0x82c>
   16cf0:	add	r5, r4, #12
   16cf4:	mov	r6, #0
   16cf8:	mov	r8, #0
   16cfc:	b	16d04 <argp_failure@@Base+0x274>
   16d00:	add	r5, r5, #24
   16d04:	ldr	r7, [r5, #-8]
   16d08:	cmp	r7, #0
   16d0c:	bne	16d34 <argp_failure@@Base+0x2a4>
   16d10:	ldr	r0, [r5, #-12]
   16d14:	cmp	r0, #0
   16d18:	bne	16d34 <argp_failure@@Base+0x2a4>
   16d1c:	ldr	r0, [r5, #4]
   16d20:	cmp	r0, #0
   16d24:	bne	16d34 <argp_failure@@Base+0x2a4>
   16d28:	ldr	r0, [r5, #8]
   16d2c:	cmp	r0, #0
   16d30:	beq	16d78 <argp_failure@@Base+0x2e8>
   16d34:	ldr	r0, [r5]
   16d38:	tst	r0, #4
   16d3c:	ldreq	r1, [fp, #-32]	; 0xffffffe0
   16d40:	addeq	r6, r6, #1
   16d44:	streq	r6, [r1, #4]
   16d48:	sub	r1, r7, #1
   16d4c:	cmp	r1, #254	; 0xfe
   16d50:	bhi	16d00 <argp_failure@@Base+0x270>
   16d54:	ands	r0, r0, #8
   16d58:	bne	16d00 <argp_failure@@Base+0x270>
   16d5c:	bl	1145c <__ctype_b_loc@plt>
   16d60:	ldr	r0, [r0]
   16d64:	add	r0, r0, r7, lsl #1
   16d68:	ldrb	r0, [r0, #1]
   16d6c:	tst	r0, #64	; 0x40
   16d70:	addne	r8, r8, #1
   16d74:	b	16d00 <argp_failure@@Base+0x270>
   16d78:	rsb	r0, r6, r6, lsl #3
   16d7c:	lsl	r0, r0, #2
   16d80:	bl	15314 <_obstack_memory_used@@Base+0xcac>
   16d84:	mov	r5, r0
   16d88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16d8c:	str	r5, [r0]
   16d90:	add	r0, r8, #1
   16d94:	bl	15314 <_obstack_memory_used@@Base+0xcac>
   16d98:	mov	r7, r0
   16d9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16da0:	cmp	r5, #0
   16da4:	cmpne	r7, #0
   16da8:	str	r7, [r0, #8]
   16dac:	bne	16dd0 <argp_failure@@Base+0x340>
   16db0:	movw	r0, #49619	; 0xc1d3
   16db4:	movw	r1, #49527	; 0xc177
   16db8:	movw	r3, #49539	; 0xc183
   16dbc:	movw	r2, #474	; 0x1da
   16dc0:	movt	r0, #1
   16dc4:	movt	r1, #1
   16dc8:	movt	r3, #1
   16dcc:	bl	115c4 <__assert_fail@plt>
   16dd0:	movw	r0, #37450	; 0x924a
   16dd4:	str	r9, [sp, #12]
   16dd8:	movt	r0, #2340	; 0x924
   16ddc:	cmp	r6, r0
   16de0:	bcs	172dc <argp_failure@@Base+0x84c>
   16de4:	mov	r8, #0
   16de8:	mov	r0, #0
   16dec:	b	16dfc <argp_failure@@Base+0x36c>
   16df0:	mov	r4, r0
   16df4:	add	r5, r5, #28
   16df8:	mov	r0, r9
   16dfc:	ldr	r1, [r4, #4]
   16e00:	cmp	r1, #0
   16e04:	bne	16e2c <argp_failure@@Base+0x39c>
   16e08:	ldr	r2, [r4]
   16e0c:	cmp	r2, #0
   16e10:	bne	16e2c <argp_failure@@Base+0x39c>
   16e14:	ldr	r2, [r4, #16]
   16e18:	cmp	r2, #0
   16e1c:	bne	16e2c <argp_failure@@Base+0x39c>
   16e20:	ldr	r2, [r4, #20]
   16e24:	cmp	r2, #0
   16e28:	beq	16f20 <argp_failure@@Base+0x490>
   16e2c:	stm	r5, {r4, r8}
   16e30:	str	r7, [r5, #8]
   16e34:	ldr	r9, [r4, #20]
   16e38:	cmp	r9, #0
   16e3c:	bne	16e58 <argp_failure@@Base+0x3c8>
   16e40:	ldr	r2, [r4]
   16e44:	cmp	r2, #0
   16e48:	bne	16e54 <argp_failure@@Base+0x3c4>
   16e4c:	cmp	r1, #0
   16e50:	addeq	r0, r0, #1
   16e54:	mov	r9, r0
   16e58:	ldr	r0, [sp, #40]	; 0x28
   16e5c:	mov	r1, #0
   16e60:	str	r9, [r5, #12]
   16e64:	str	sl, [r5, #16]
   16e68:	str	r0, [r5, #20]
   16e6c:	b	16e78 <argp_failure@@Base+0x3e8>
   16e70:	ldr	r1, [r5, #4]
   16e74:	mov	r4, r0
   16e78:	add	r0, r1, #1
   16e7c:	str	r0, [r5, #4]
   16e80:	ldrb	r0, [r4, #12]
   16e84:	tst	r0, #8
   16e88:	bne	16edc <argp_failure@@Base+0x44c>
   16e8c:	ldr	r6, [r4, #4]
   16e90:	sub	r0, r6, #1
   16e94:	cmp	r0, #254	; 0xfe
   16e98:	bhi	16edc <argp_failure@@Base+0x44c>
   16e9c:	bl	1145c <__ctype_b_loc@plt>
   16ea0:	ldr	r0, [r0]
   16ea4:	add	r0, r0, r6, lsl #1
   16ea8:	ldrb	r0, [r0, #1]
   16eac:	tst	r0, #64	; 0x40
   16eb0:	beq	16edc <argp_failure@@Base+0x44c>
   16eb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16eb8:	ldr	r0, [r0, #8]
   16ebc:	cmp	r0, r7
   16ec0:	bcs	16ed8 <argp_failure@@Base+0x448>
   16ec4:	ldrb	r1, [r0], #1
   16ec8:	uxtb	r2, r6
   16ecc:	cmp	r1, r2
   16ed0:	bne	16ebc <argp_failure@@Base+0x42c>
   16ed4:	b	16edc <argp_failure@@Base+0x44c>
   16ed8:	strb	r6, [r7], #1
   16edc:	ldr	r1, [r4, #28]
   16ee0:	add	r0, r4, #24
   16ee4:	cmp	r1, #0
   16ee8:	bne	16f10 <argp_failure@@Base+0x480>
   16eec:	ldr	r1, [r0]
   16ef0:	cmp	r1, #0
   16ef4:	bne	16f10 <argp_failure@@Base+0x480>
   16ef8:	ldr	r1, [r4, #40]	; 0x28
   16efc:	cmp	r1, #0
   16f00:	bne	16f10 <argp_failure@@Base+0x480>
   16f04:	ldr	r1, [r4, #44]	; 0x2c
   16f08:	cmp	r1, #0
   16f0c:	beq	16df0 <argp_failure@@Base+0x360>
   16f10:	ldrb	r1, [r4, #36]	; 0x24
   16f14:	tst	r1, #4
   16f18:	bne	16e70 <argp_failure@@Base+0x3e0>
   16f1c:	b	16df0 <argp_failure@@Base+0x360>
   16f20:	mov	r0, #0
   16f24:	ldr	r9, [sp, #12]
   16f28:	strb	r0, [r7]
   16f2c:	ldr	r7, [sp, #40]	; 0x28
   16f30:	cmp	r9, #0
   16f34:	ldrne	r0, [r9]
   16f38:	cmpne	r0, #0
   16f3c:	bne	16f4c <argp_failure@@Base+0x4bc>
   16f40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16f44:	sub	sp, fp, #28
   16f48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f4c:	str	sl, [sp, #4]
   16f50:	ldr	r4, [r9, #12]
   16f54:	cmp	r4, #0
   16f58:	beq	16f64 <argp_failure@@Base+0x4d4>
   16f5c:	ldr	r5, [r9, #8]
   16f60:	b	16f74 <argp_failure@@Base+0x4e4>
   16f64:	ldr	r5, [r9, #8]
   16f68:	mov	r1, sl
   16f6c:	cmp	r5, #0
   16f70:	beq	16fc4 <argp_failure@@Base+0x534>
   16f74:	ldr	r6, [r7, #16]
   16f78:	mov	r0, #28
   16f7c:	bl	15314 <_obstack_memory_used@@Base+0xcac>
   16f80:	mov	r1, r0
   16f84:	cmp	r0, #0
   16f88:	beq	16fc4 <argp_failure@@Base+0x534>
   16f8c:	sub	r0, r9, r6
   16f90:	str	r5, [r1]
   16f94:	cmp	sl, #0
   16f98:	asr	r0, r0, #4
   16f9c:	stmib	r1, {r0, r4, sl}
   16fa0:	str	r7, [r1, #16]
   16fa4:	ldr	r3, [sp, #20]
   16fa8:	ldrne	r0, [sl, #20]
   16fac:	ldr	r2, [r3]
   16fb0:	addne	r0, r0, #1
   16fb4:	str	r1, [r3]
   16fb8:	moveq	r0, #0
   16fbc:	str	r0, [r1, #20]
   16fc0:	str	r2, [r1, #24]
   16fc4:	ldr	r0, [r9]
   16fc8:	bl	16c98 <argp_failure@@Base+0x208>
   16fcc:	ldr	r1, [sp, #20]
   16fd0:	mov	r6, r0
   16fd4:	ldr	r2, [r1]
   16fd8:	mov	r0, r1
   16fdc:	add	r1, r2, #24
   16fe0:	cmp	r2, #0
   16fe4:	bne	16fd4 <argp_failure@@Base+0x544>
   16fe8:	ldr	r1, [r6, #12]
   16fec:	str	r1, [r0]
   16ff0:	mov	r0, #0
   16ff4:	str	r0, [r6, #12]
   16ff8:	ldr	r0, [r6, #4]
   16ffc:	cmp	r0, #0
   17000:	beq	17264 <argp_failure@@Base+0x7d4>
   17004:	ldr	r5, [fp, #-32]	; 0xffffffe0
   17008:	ldr	r4, [r5, #4]
   1700c:	cmp	r4, #0
   17010:	beq	171c0 <argp_failure@@Base+0x730>
   17014:	add	r0, r4, r0
   17018:	str	r0, [sp, #16]
   1701c:	rsb	r0, r0, r0, lsl #3
   17020:	lsl	r0, r0, #2
   17024:	bl	15314 <_obstack_memory_used@@Base+0xcac>
   17028:	ldr	r8, [r5, #8]
   1702c:	str	r0, [sp, #24]
   17030:	mov	r0, r8
   17034:	bl	11474 <strlen@plt>
   17038:	mov	r7, r0
   1703c:	ldr	r0, [r6, #8]
   17040:	bl	11474 <strlen@plt>
   17044:	add	r0, r7, r0
   17048:	str	r7, [sp, #32]
   1704c:	add	r0, r0, #1
   17050:	bl	15314 <_obstack_memory_used@@Base+0xcac>
   17054:	ldr	r1, [sp, #24]
   17058:	cmp	r1, #0
   1705c:	cmpne	r0, #0
   17060:	beq	1727c <argp_failure@@Base+0x7ec>
   17064:	ldr	r1, [sp, #16]
   17068:	str	r0, [sp, #36]	; 0x24
   1706c:	movw	r0, #37450	; 0x924a
   17070:	movt	r0, #2340	; 0x924
   17074:	cmp	r1, r0
   17078:	bcs	172fc <argp_failure@@Base+0x86c>
   1707c:	ldr	r7, [sp, #24]
   17080:	ldr	r1, [r5]
   17084:	rsb	r5, r4, r4, lsl #3
   17088:	lsl	r2, r5, #2
   1708c:	str	r2, [fp, #-36]	; 0xffffffdc
   17090:	mov	r0, r7
   17094:	bl	11384 <memcpy@plt>
   17098:	ldm	r6, {r1, r2}
   1709c:	add	r0, r7, r5, lsl #2
   170a0:	rsb	r2, r2, r2, lsl #3
   170a4:	lsl	r2, r2, #2
   170a8:	bl	11384 <memcpy@plt>
   170ac:	ldr	r5, [sp, #36]	; 0x24
   170b0:	ldr	r2, [sp, #32]
   170b4:	mov	r1, r8
   170b8:	mov	r0, r5
   170bc:	bl	11384 <memcpy@plt>
   170c0:	add	r0, r7, #8
   170c4:	ldr	r1, [r0]
   170c8:	subs	r4, r4, #1
   170cc:	sub	r1, r1, r8
   170d0:	add	r1, r5, r1
   170d4:	str	r1, [r0], #28
   170d8:	bne	170c4 <argp_failure@@Base+0x634>
   170dc:	ldr	r0, [sp, #32]
   170e0:	ldr	r2, [r6, #4]
   170e4:	str	r9, [sp, #12]
   170e8:	str	r6, [sp, #8]
   170ec:	add	r4, r5, r0
   170f0:	cmp	r2, #0
   170f4:	beq	171dc <argp_failure@@Base+0x74c>
   170f8:	mov	r0, r6
   170fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17100:	ldr	r1, [sp, #24]
   17104:	str	r4, [fp, #-36]	; 0xffffffdc
   17108:	ldr	r7, [r0, #8]
   1710c:	add	r6, r1, r3
   17110:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17114:	str	r2, [sp, #28]
   17118:	str	r0, [r6, #8]
   1711c:	ldr	r9, [r6, #4]
   17120:	cmp	r9, #0
   17124:	beq	171ac <argp_failure@@Base+0x71c>
   17128:	ldr	sl, [r6]
   1712c:	ldrb	r0, [sl, #12]
   17130:	tst	r0, #8
   17134:	bne	171a0 <argp_failure@@Base+0x710>
   17138:	ldr	r5, [sl, #4]
   1713c:	sub	r0, r5, #1
   17140:	cmp	r0, #254	; 0xfe
   17144:	bhi	171a0 <argp_failure@@Base+0x710>
   17148:	ldrb	r8, [r7]
   1714c:	bl	1145c <__ctype_b_loc@plt>
   17150:	cmp	r5, r8
   17154:	bne	171a0 <argp_failure@@Base+0x710>
   17158:	ldr	r0, [r0]
   1715c:	add	r0, r0, r5, lsl #1
   17160:	ldrh	r0, [r0]
   17164:	ands	r0, r0, #16384	; 0x4000
   17168:	beq	171a0 <argp_failure@@Base+0x710>
   1716c:	ldr	r0, [sp, #32]
   17170:	cmp	r0, #1
   17174:	ldr	r0, [sp, #36]	; 0x24
   17178:	blt	17190 <argp_failure@@Base+0x700>
   1717c:	ldrb	r1, [r0], #1
   17180:	cmp	r1, r8
   17184:	beq	1719c <argp_failure@@Base+0x70c>
   17188:	cmp	r0, r4
   1718c:	bcc	1717c <argp_failure@@Base+0x6ec>
   17190:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17194:	strb	r8, [r0], #1
   17198:	str	r0, [fp, #-36]	; 0xffffffdc
   1719c:	add	r7, r7, #1
   171a0:	subs	r9, r9, #1
   171a4:	add	sl, sl, #24
   171a8:	bne	1712c <argp_failure@@Base+0x69c>
   171ac:	ldr	r2, [sp, #28]
   171b0:	add	r6, r6, #28
   171b4:	subs	r2, r2, #1
   171b8:	bne	17110 <argp_failure@@Base+0x680>
   171bc:	b	171e0 <argp_failure@@Base+0x750>
   171c0:	ldr	r1, [r6]
   171c4:	ldr	r2, [r6, #8]
   171c8:	str	r1, [r5]
   171cc:	stmib	r5, {r0, r2}
   171d0:	mov	r0, #0
   171d4:	str	r0, [r6, #4]
   171d8:	b	17264 <argp_failure@@Base+0x7d4>
   171dc:	str	r4, [fp, #-36]	; 0xffffffdc
   171e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   171e4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   171e8:	mov	r0, #0
   171ec:	strb	r0, [r1]
   171f0:	ldr	r0, [r4]
   171f4:	bl	14200 <argp_parse@@Base+0x12d0>
   171f8:	ldr	r0, [r4, #8]
   171fc:	bl	14200 <argp_parse@@Base+0x12d0>
   17200:	ldr	r0, [sp, #24]
   17204:	ldr	r6, [sp, #8]
   17208:	str	r0, [r4]
   1720c:	ldr	r0, [sp, #16]
   17210:	str	r0, [r4, #4]
   17214:	ldr	r0, [sp, #36]	; 0x24
   17218:	str	r0, [r4, #8]
   1721c:	ldr	r0, [r6, #12]
   17220:	cmp	r0, #0
   17224:	beq	1723c <argp_failure@@Base+0x7ac>
   17228:	ldr	r4, [r0, #24]
   1722c:	bl	14200 <argp_parse@@Base+0x12d0>
   17230:	cmp	r4, #0
   17234:	mov	r0, r4
   17238:	bne	17228 <argp_failure@@Base+0x798>
   1723c:	ldr	r0, [r6, #4]
   17240:	ldr	sl, [sp, #4]
   17244:	ldr	r7, [sp, #40]	; 0x28
   17248:	ldr	r9, [sp, #12]
   1724c:	cmp	r0, #0
   17250:	beq	17264 <argp_failure@@Base+0x7d4>
   17254:	ldr	r0, [r6]
   17258:	bl	14200 <argp_parse@@Base+0x12d0>
   1725c:	ldr	r0, [r6, #8]
   17260:	bl	14200 <argp_parse@@Base+0x12d0>
   17264:	mov	r0, r6
   17268:	bl	14200 <argp_parse@@Base+0x12d0>
   1726c:	ldr	r0, [r9, #16]!
   17270:	cmp	r0, #0
   17274:	bne	16f50 <argp_failure@@Base+0x4c0>
   17278:	b	16f40 <argp_failure@@Base+0x4b0>
   1727c:	movw	r0, #49711	; 0xc22f
   17280:	movw	r1, #49527	; 0xc177
   17284:	movw	r3, #49736	; 0xc248
   17288:	movw	r2, #970	; 0x3ca
   1728c:	movt	r0, #1
   17290:	movt	r1, #1
   17294:	movt	r3, #1
   17298:	bl	115c4 <__assert_fail@plt>
   1729c:	movw	r0, #49523	; 0xc173
   172a0:	movw	r1, #49527	; 0xc177
   172a4:	movw	r3, #49539	; 0xc183
   172a8:	movw	r2, #450	; 0x1c2
   172ac:	movt	r0, #1
   172b0:	movt	r1, #1
   172b4:	movt	r3, #1
   172b8:	bl	115c4 <__assert_fail@plt>
   172bc:	movw	r0, #49603	; 0xc1c3
   172c0:	movw	r1, #49527	; 0xc177
   172c4:	movw	r3, #49539	; 0xc183
   172c8:	mov	r2, #460	; 0x1cc
   172cc:	movt	r0, #1
   172d0:	movt	r1, #1
   172d4:	movt	r3, #1
   172d8:	bl	115c4 <__assert_fail@plt>
   172dc:	movw	r0, #49654	; 0xc1f6
   172e0:	movw	r1, #49527	; 0xc177
   172e4:	movw	r3, #49539	; 0xc183
   172e8:	mov	r2, #476	; 0x1dc
   172ec:	movt	r0, #1
   172f0:	movt	r1, #1
   172f4:	movt	r3, #1
   172f8:	bl	115c4 <__assert_fail@plt>
   172fc:	movw	r0, #49659	; 0xc1fb
   17300:	movw	r1, #49527	; 0xc177
   17304:	movw	r3, #49736	; 0xc248
   17308:	mov	r2, #972	; 0x3cc
   1730c:	movt	r0, #1
   17310:	movt	r1, #1
   17314:	movt	r3, #1
   17318:	bl	115c4 <__assert_fail@plt>
   1731c:	push	{r4, r5, fp, lr}
   17320:	add	fp, sp, #8
   17324:	mov	r1, r0
   17328:	ldr	r0, [r0, #8]
   1732c:	ldr	r5, [r1, #16]
   17330:	cmp	r0, #0
   17334:	beq	17350 <argp_failure@@Base+0x8c0>
   17338:	mov	r1, #10
   1733c:	bl	11480 <strchr@plt>
   17340:	mov	r4, r0
   17344:	cmp	r0, #0
   17348:	movwne	r4, #1
   1734c:	b	17354 <argp_failure@@Base+0x8c4>
   17350:	mov	r4, #0
   17354:	cmp	r5, #0
   17358:	ldrne	r0, [r5]
   1735c:	cmpne	r0, #0
   17360:	beq	1737c <argp_failure@@Base+0x8ec>
   17364:	add	r5, r5, #16
   17368:	bl	1731c <argp_failure@@Base+0x88c>
   1736c:	add	r4, r0, r4
   17370:	ldr	r0, [r5], #16
   17374:	cmp	r0, #0
   17378:	bne	17368 <argp_failure@@Base+0x8d8>
   1737c:	mov	r0, r4
   17380:	pop	{r4, r5, fp, pc}
   17384:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17388:	add	fp, sp, #28
   1738c:	sub	sp, sp, #28
   17390:	ldr	r4, [r0, #4]
   17394:	str	r1, [fp, #-40]	; 0xffffffd8
   17398:	cmp	r4, #0
   1739c:	beq	1772c <argp_failure@@Base+0xc9c>
   173a0:	mov	r5, r0
   173a4:	ldr	r0, [r0, #8]
   173a8:	bl	11474 <strlen@plt>
   173ac:	add	r0, r0, #8
   173b0:	bic	r0, r0, #7
   173b4:	sub	r0, sp, r0
   173b8:	mov	sp, r0
   173bc:	ldr	r7, [r5]
   173c0:	str	r0, [fp, #-52]	; 0xffffffcc
   173c4:	str	r0, [fp, #-48]	; 0xffffffd0
   173c8:	str	r5, [fp, #-44]	; 0xffffffd4
   173cc:	ldr	r6, [r7, #4]
   173d0:	str	r4, [fp, #-36]	; 0xffffffdc
   173d4:	cmp	r6, #0
   173d8:	beq	1747c <argp_failure@@Base+0x9ec>
   173dc:	ldr	r4, [r7]
   173e0:	ldr	r5, [r7, #8]
   173e4:	mov	sl, r4
   173e8:	b	17414 <argp_failure@@Base+0x984>
   173ec:	ldr	r0, [r4, #8]
   173f0:	cmp	r0, #0
   173f4:	bne	1746c <argp_failure@@Base+0x9dc>
   173f8:	ldr	r0, [r4, #12]
   173fc:	orr	r0, r0, r8
   17400:	tst	r0, #16
   17404:	ldreq	r0, [fp, #-48]	; 0xffffffd0
   17408:	strbeq	r9, [r0], #1
   1740c:	streq	r0, [fp, #-48]	; 0xffffffd0
   17410:	b	1746c <argp_failure@@Base+0x9dc>
   17414:	ldr	r8, [sl, #12]
   17418:	tst	r8, #8
   1741c:	bne	17470 <argp_failure@@Base+0x9e0>
   17420:	ldr	r9, [sl, #4]
   17424:	sub	r0, r9, #1
   17428:	cmp	r0, #254	; 0xfe
   1742c:	bhi	17470 <argp_failure@@Base+0x9e0>
   17430:	bl	1145c <__ctype_b_loc@plt>
   17434:	ldr	r0, [r0]
   17438:	add	r0, r0, r9, lsl #1
   1743c:	ldrb	r0, [r0, #1]
   17440:	tst	r0, #64	; 0x40
   17444:	beq	17470 <argp_failure@@Base+0x9e0>
   17448:	ldrb	r0, [r5]
   1744c:	cmp	r9, r0
   17450:	bne	17470 <argp_failure@@Base+0x9e0>
   17454:	tst	r8, #4
   17458:	moveq	r4, sl
   1745c:	tst	r8, #2
   17460:	ldreq	r0, [sl, #8]
   17464:	cmpeq	r0, #0
   17468:	beq	173ec <argp_failure@@Base+0x95c>
   1746c:	add	r5, r5, #1
   17470:	subs	r6, r6, #1
   17474:	add	sl, sl, #24
   17478:	bne	17414 <argp_failure@@Base+0x984>
   1747c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   17480:	ldr	r6, [fp, #-44]	; 0xffffffd4
   17484:	add	r7, r7, #28
   17488:	subs	r4, r4, #1
   1748c:	bne	173cc <argp_failure@@Base+0x93c>
   17490:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17494:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17498:	cmp	r1, r2
   1749c:	bls	174b8 <argp_failure@@Base+0xa28>
   174a0:	mov	r0, #0
   174a4:	strb	r0, [r1]
   174a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   174ac:	movw	r1, #49780	; 0xc274
   174b0:	movt	r1, #1
   174b4:	bl	19ff4 <argp_failure@@Base+0x3564>
   174b8:	ldr	r5, [r6, #4]
   174bc:	cmp	r5, #0
   174c0:	beq	1772c <argp_failure@@Base+0xc9c>
   174c4:	ldr	r8, [r6]
   174c8:	ldr	r9, [r8, #4]
   174cc:	cmp	r9, #0
   174d0:	beq	17664 <argp_failure@@Base+0xbd4>
   174d4:	ldr	sl, [r8]
   174d8:	ldr	r4, [r8, #8]
   174dc:	str	sl, [fp, #-36]	; 0xffffffdc
   174e0:	ldr	r6, [sl, #12]
   174e4:	tst	r6, #8
   174e8:	bne	17658 <argp_failure@@Base+0xbc8>
   174ec:	ldr	r7, [sl, #4]
   174f0:	sub	r0, r7, #1
   174f4:	cmp	r0, #254	; 0xfe
   174f8:	bhi	17658 <argp_failure@@Base+0xbc8>
   174fc:	bl	1145c <__ctype_b_loc@plt>
   17500:	ldr	r0, [r0]
   17504:	add	r0, r0, r7, lsl #1
   17508:	ldrb	r0, [r0, #1]
   1750c:	tst	r0, #64	; 0x40
   17510:	beq	17658 <argp_failure@@Base+0xbc8>
   17514:	ldrb	r0, [r4]
   17518:	cmp	r7, r0
   1751c:	bne	17658 <argp_failure@@Base+0xbc8>
   17520:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17524:	tst	r6, #4
   17528:	moveq	r0, sl
   1752c:	tst	r6, #2
   17530:	str	r0, [fp, #-36]	; 0xffffffdc
   17534:	bne	17654 <argp_failure@@Base+0xbc4>
   17538:	ldr	r3, [sl, #8]
   1753c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17540:	cmp	r3, #0
   17544:	ldr	r0, [r0, #12]
   17548:	ldreq	r1, [fp, #-36]	; 0xffffffdc
   1754c:	orr	r0, r0, r6
   17550:	ldreq	r3, [r1, #8]
   17554:	tst	r0, #16
   17558:	bne	17654 <argp_failure@@Base+0xbc4>
   1755c:	cmp	r3, #0
   17560:	beq	17654 <argp_failure@@Base+0xbc4>
   17564:	tst	r0, #1
   17568:	bne	175f4 <argp_failure@@Base+0xb64>
   1756c:	mov	r0, r3
   17570:	str	r3, [fp, #-48]	; 0xffffffd0
   17574:	bl	11474 <strlen@plt>
   17578:	ldr	r7, [fp, #-40]	; 0xffffffd8
   1757c:	add	r6, r0, #6
   17580:	ldr	r2, [r7, #24]
   17584:	ldr	r0, [r7, #28]
   17588:	ldr	r1, [r7, #16]
   1758c:	sub	r2, r0, r2
   17590:	cmp	r2, r1
   17594:	bls	175a4 <argp_failure@@Base+0xb14>
   17598:	mov	r0, r7
   1759c:	bl	199a8 <argp_failure@@Base+0x2f18>
   175a0:	ldr	r0, [r7, #28]
   175a4:	ldr	r3, [r7, #20]
   175a8:	ldr	r2, [r7, #8]
   175ac:	ldr	r1, [r7, #32]
   175b0:	cmp	r3, #0
   175b4:	addgt	r6, r6, r3
   175b8:	cmp	r6, r2
   175bc:	bcs	17608 <argp_failure@@Base+0xb78>
   175c0:	ldr	r6, [fp, #-48]	; 0xffffffd0
   175c4:	cmp	r0, r1
   175c8:	bcc	175e4 <argp_failure@@Base+0xb54>
   175cc:	mov	r0, r7
   175d0:	mov	r1, #1
   175d4:	bl	19f08 <argp_failure@@Base+0x3478>
   175d8:	cmp	r0, #0
   175dc:	beq	1763c <argp_failure@@Base+0xbac>
   175e0:	ldr	r0, [r7, #28]
   175e4:	add	r1, r0, #1
   175e8:	str	r1, [r7, #28]
   175ec:	mov	r1, #32
   175f0:	b	17638 <argp_failure@@Base+0xba8>
   175f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   175f8:	movw	r1, #49787	; 0xc27b
   175fc:	mov	r2, r7
   17600:	movt	r1, #1
   17604:	b	17650 <argp_failure@@Base+0xbc0>
   17608:	ldr	r6, [fp, #-48]	; 0xffffffd0
   1760c:	cmp	r0, r1
   17610:	bcc	1762c <argp_failure@@Base+0xb9c>
   17614:	mov	r0, r7
   17618:	mov	r1, #1
   1761c:	bl	19f08 <argp_failure@@Base+0x3478>
   17620:	cmp	r0, #0
   17624:	beq	1763c <argp_failure@@Base+0xbac>
   17628:	ldr	r0, [r7, #28]
   1762c:	add	r1, r0, #1
   17630:	str	r1, [r7, #28]
   17634:	mov	r1, #10
   17638:	strb	r1, [r0]
   1763c:	ldr	r2, [sl, #4]
   17640:	movw	r1, #49798	; 0xc286
   17644:	mov	r0, r7
   17648:	mov	r3, r6
   1764c:	movt	r1, #1
   17650:	bl	19ff4 <argp_failure@@Base+0x3564>
   17654:	add	r4, r4, #1
   17658:	subs	r9, r9, #1
   1765c:	add	sl, sl, #24
   17660:	bne	174e0 <argp_failure@@Base+0xa50>
   17664:	subs	r5, r5, #1
   17668:	add	r8, r8, #28
   1766c:	bne	174c8 <argp_failure@@Base+0xa38>
   17670:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17674:	ldr	r4, [r0, #4]
   17678:	cmp	r4, #0
   1767c:	beq	1772c <argp_failure@@Base+0xc9c>
   17680:	ldr	r6, [r0]
   17684:	movw	sl, #49831	; 0xc2a7
   17688:	movw	r9, #49807	; 0xc28f
   1768c:	movt	sl, #1
   17690:	movt	r9, #1
   17694:	ldr	r7, [r6, #4]
   17698:	cmp	r7, #0
   1769c:	beq	17720 <argp_failure@@Base+0xc90>
   176a0:	ldr	r8, [r6]
   176a4:	mov	r5, r8
   176a8:	ldr	r2, [r5]
   176ac:	cmp	r2, #0
   176b0:	beq	17714 <argp_failure@@Base+0xc84>
   176b4:	ldr	r0, [r5, #12]
   176b8:	tst	r0, #4
   176bc:	moveq	r8, r5
   176c0:	tst	r0, #2
   176c4:	bne	17714 <argp_failure@@Base+0xc84>
   176c8:	ldr	r3, [r5, #8]
   176cc:	ldr	r1, [r8, #12]
   176d0:	cmp	r3, #0
   176d4:	orr	r0, r1, r0
   176d8:	ldreq	r3, [r8, #8]
   176dc:	tst	r0, #16
   176e0:	bne	17714 <argp_failure@@Base+0xc84>
   176e4:	cmp	r3, #0
   176e8:	beq	17708 <argp_failure@@Base+0xc78>
   176ec:	tst	r0, #1
   176f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   176f4:	movne	r1, r9
   176f8:	movweq	r1, #49820	; 0xc29c
   176fc:	movteq	r1, #1
   17700:	bl	19ff4 <argp_failure@@Base+0x3564>
   17704:	b	17714 <argp_failure@@Base+0xc84>
   17708:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1770c:	mov	r1, sl
   17710:	bl	19ff4 <argp_failure@@Base+0x3564>
   17714:	subs	r7, r7, #1
   17718:	add	r5, r5, #24
   1771c:	bne	176a8 <argp_failure@@Base+0xc18>
   17720:	subs	r4, r4, #1
   17724:	add	r6, r6, #28
   17728:	bne	17694 <argp_failure@@Base+0xc04>
   1772c:	sub	sp, fp, #28
   17730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17734:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17738:	add	fp, sp, #28
   1773c:	sub	sp, sp, #28
   17740:	ldr	r6, [r0, #8]
   17744:	ldr	r5, [r0, #16]
   17748:	ldr	sl, [r2]
   1774c:	mov	r4, r3
   17750:	mov	r9, r2
   17754:	mov	r8, r1
   17758:	mov	r7, r0
   1775c:	cmp	r0, #0
   17760:	mov	r0, r6
   17764:	beq	1779c <argp_failure@@Base+0xd0c>
   17768:	ldr	r0, [r7, #20]
   1776c:	cmp	r0, #0
   17770:	mov	r0, r6
   17774:	beq	1779c <argp_failure@@Base+0xd0c>
   17778:	mov	r0, r7
   1777c:	mov	r1, r8
   17780:	bl	13b6c <argp_parse@@Base+0xc3c>
   17784:	ldr	r3, [r7, #20]
   17788:	mov	r2, r0
   1778c:	movw	r0, #6
   17790:	mov	r1, r6
   17794:	movt	r0, #512	; 0x200
   17798:	blx	r3
   1779c:	cmp	r0, #0
   177a0:	str	sl, [sp, #24]
   177a4:	beq	17804 <argp_failure@@Base+0xd74>
   177a8:	mov	r1, #10
   177ac:	mov	sl, r0
   177b0:	bl	1133c <strchrnul@plt>
   177b4:	mov	r7, r0
   177b8:	ldrb	r0, [r0]
   177bc:	cmp	r0, #0
   177c0:	add	r0, sp, #12
   177c4:	stm	r0, {r5, r6, sl}
   177c8:	beq	17810 <argp_failure@@Base+0xd80>
   177cc:	ldr	r0, [sp, #24]
   177d0:	ldrb	r6, [r0]
   177d4:	cmp	r6, #0
   177d8:	beq	17818 <argp_failure@@Base+0xd88>
   177dc:	mov	r5, #0
   177e0:	add	sl, r7, #1
   177e4:	mov	r1, #10
   177e8:	mov	r0, sl
   177ec:	bl	1133c <strchrnul@plt>
   177f0:	add	r5, r5, #1
   177f4:	mov	r7, r0
   177f8:	cmp	r5, r6
   177fc:	bcc	177e0 <argp_failure@@Base+0xd50>
   17800:	b	1781c <argp_failure@@Base+0xd8c>
   17804:	mov	r7, #0
   17808:	mov	sl, #0
   1780c:	b	1794c <argp_failure@@Base+0xebc>
   17810:	mov	r0, #0
   17814:	b	1782c <argp_failure@@Base+0xd9c>
   17818:	ldr	sl, [sp, #20]
   1781c:	ldr	r0, [r9]
   17820:	add	r0, r0, #1
   17824:	str	r0, [r9]
   17828:	mov	r0, #1
   1782c:	ldr	r5, [fp, #8]
   17830:	str	r0, [sp, #8]
   17834:	add	r0, r7, #1
   17838:	sub	r6, r0, sl
   1783c:	ldr	r2, [r5, #24]
   17840:	ldr	r0, [r5, #28]
   17844:	ldr	r1, [r5, #16]
   17848:	sub	r2, r0, r2
   1784c:	cmp	r2, r1
   17850:	bls	17860 <argp_failure@@Base+0xdd0>
   17854:	mov	r0, r5
   17858:	bl	199a8 <argp_failure@@Base+0x2f18>
   1785c:	ldr	r0, [r5, #28]
   17860:	ldr	r3, [r5, #20]
   17864:	ldr	r2, [r5, #8]
   17868:	ldr	r1, [r5, #32]
   1786c:	cmp	r3, #0
   17870:	addgt	r6, r6, r3
   17874:	cmp	r6, r2
   17878:	bcs	178ac <argp_failure@@Base+0xe1c>
   1787c:	cmp	r0, r1
   17880:	bcc	1789c <argp_failure@@Base+0xe0c>
   17884:	mov	r0, r5
   17888:	mov	r1, #1
   1788c:	bl	19f08 <argp_failure@@Base+0x3478>
   17890:	cmp	r0, #0
   17894:	beq	178dc <argp_failure@@Base+0xe4c>
   17898:	ldr	r0, [r5, #28]
   1789c:	add	r1, r0, #1
   178a0:	str	r1, [r5, #28]
   178a4:	mov	r1, #32
   178a8:	b	178d8 <argp_failure@@Base+0xe48>
   178ac:	cmp	r0, r1
   178b0:	bcc	178cc <argp_failure@@Base+0xe3c>
   178b4:	mov	r0, r5
   178b8:	mov	r1, #1
   178bc:	bl	19f08 <argp_failure@@Base+0x3478>
   178c0:	cmp	r0, #0
   178c4:	beq	178dc <argp_failure@@Base+0xe4c>
   178c8:	ldr	r0, [r5, #28]
   178cc:	add	r1, r0, #1
   178d0:	str	r1, [r5, #28]
   178d4:	mov	r1, #10
   178d8:	strb	r1, [r0]
   178dc:	mov	r6, r5
   178e0:	sub	r5, r7, sl
   178e4:	ldr	r0, [r6, #28]
   178e8:	ldr	r1, [r6, #32]
   178ec:	add	r2, r0, r5
   178f0:	cmp	r2, r1
   178f4:	bls	17914 <argp_failure@@Base+0xe84>
   178f8:	mov	r0, r6
   178fc:	mov	r1, r5
   17900:	bl	19f08 <argp_failure@@Base+0x3478>
   17904:	cmp	r0, #0
   17908:	beq	1792c <argp_failure@@Base+0xe9c>
   1790c:	ldr	r6, [fp, #8]
   17910:	ldr	r0, [r6, #28]
   17914:	mov	r1, sl
   17918:	mov	r2, r5
   1791c:	bl	11384 <memcpy@plt>
   17920:	ldr	r0, [r6, #28]
   17924:	add	r0, r0, r5
   17928:	str	r0, [r6, #28]
   1792c:	ldr	r0, [sp, #16]
   17930:	ldr	r1, [sp, #20]
   17934:	cmp	r1, r0
   17938:	beq	17944 <argp_failure@@Base+0xeb4>
   1793c:	mov	r0, r1
   17940:	bl	14200 <argp_parse@@Base+0x12d0>
   17944:	ldr	r5, [sp, #12]
   17948:	ldr	sl, [sp, #8]
   1794c:	cmp	r5, #0
   17950:	ldrne	r0, [r5]
   17954:	cmpne	r0, #0
   17958:	beq	17990 <argp_failure@@Base+0xf00>
   1795c:	add	r6, r5, #16
   17960:	ldr	r5, [fp, #8]
   17964:	mov	r1, r8
   17968:	mov	r2, r9
   1796c:	mov	r3, r4
   17970:	str	r5, [sp]
   17974:	bl	17734 <argp_failure@@Base+0xca4>
   17978:	clz	r1, r0
   1797c:	ldr	r0, [r6], #16
   17980:	lsr	r4, r1, #5
   17984:	cmp	r0, #0
   17988:	bne	17964 <argp_failure@@Base+0xed4>
   1798c:	lsr	r4, r1, #5
   17990:	cmp	sl, #0
   17994:	cmpne	r4, #0
   17998:	bne	179ac <argp_failure@@Base+0xf1c>
   1799c:	clz	r0, r4
   179a0:	lsr	r0, r0, #5
   179a4:	sub	sp, fp, #28
   179a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   179ac:	ldr	r2, [sp, #24]
   179b0:	ldrb	r1, [r7]
   179b4:	ldrb	r0, [r2]
   179b8:	cmp	r1, #0
   179bc:	beq	179d0 <argp_failure@@Base+0xf40>
   179c0:	add	r0, r0, #1
   179c4:	mov	r4, #0
   179c8:	strb	r0, [r2]
   179cc:	b	1799c <argp_failure@@Base+0xf0c>
   179d0:	cmp	r0, #0
   179d4:	movne	r0, #0
   179d8:	strbne	r0, [r2]
   179dc:	b	1799c <argp_failure@@Base+0xf0c>
   179e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   179e4:	add	fp, sp, #28
   179e8:	sub	sp, sp, #28
   179ec:	ldr	r7, [r0, #12]
   179f0:	ldr	r8, [r0, #16]
   179f4:	mov	r6, r0
   179f8:	mov	sl, r3
   179fc:	str	r1, [sp, #24]
   17a00:	str	r3, [sp, #20]
   17a04:	str	r2, [sp, #16]
   17a08:	cmp	r7, #0
   17a0c:	beq	17a54 <argp_failure@@Base+0xfc4>
   17a10:	mov	r0, #0
   17a14:	mov	r1, #11
   17a18:	mov	r5, r2
   17a1c:	str	r0, [sp, #12]
   17a20:	mov	r0, r7
   17a24:	bl	11480 <strchr@plt>
   17a28:	cmp	r0, #0
   17a2c:	mov	r9, r0
   17a30:	mov	r4, r0
   17a34:	subne	r9, r9, r7
   17a38:	cmp	r5, #0
   17a3c:	movne	r9, #0
   17a40:	cmp	r0, #0
   17a44:	addne	r4, r4, #1
   17a48:	cmp	r5, #0
   17a4c:	moveq	r4, r7
   17a50:	b	17a64 <argp_failure@@Base+0xfd4>
   17a54:	mov	r0, #0
   17a58:	mov	r9, #0
   17a5c:	mov	r4, #0
   17a60:	str	r0, [sp, #12]
   17a64:	ldr	r0, [r6, #20]
   17a68:	movw	r7, #1
   17a6c:	mov	r5, r8
   17a70:	movt	r7, #512	; 0x200
   17a74:	cmp	r0, #0
   17a78:	beq	17b74 <argp_failure@@Base+0x10e4>
   17a7c:	cmp	r9, #0
   17a80:	beq	17a94 <argp_failure@@Base+0x1004>
   17a84:	mov	r0, r4
   17a88:	mov	r1, r9
   17a8c:	bl	11378 <strndup@plt>
   17a90:	mov	r4, r0
   17a94:	ldr	r1, [sp, #24]
   17a98:	mov	r0, r6
   17a9c:	bl	13b6c <argp_parse@@Base+0xc3c>
   17aa0:	mov	r2, r0
   17aa4:	ldr	r0, [sp, #16]
   17aa8:	ldr	r3, [r6, #20]
   17aac:	mov	r1, r4
   17ab0:	str	r2, [sp, #12]
   17ab4:	cmp	r0, #0
   17ab8:	mov	r0, r7
   17abc:	addne	r0, r0, #1
   17ac0:	blx	r3
   17ac4:	mov	r8, r0
   17ac8:	cmp	r8, #0
   17acc:	beq	17b80 <argp_failure@@Base+0x10f0>
   17ad0:	ldr	r0, [sp, #20]
   17ad4:	cmp	r0, #0
   17ad8:	beq	17b18 <argp_failure@@Base+0x1088>
   17adc:	ldr	r0, [fp, #12]
   17ae0:	ldr	r2, [r0, #28]
   17ae4:	ldr	r1, [r0, #32]
   17ae8:	cmp	r2, r1
   17aec:	bcc	17b08 <argp_failure@@Base+0x1078>
   17af0:	mov	r1, #1
   17af4:	bl	19f08 <argp_failure@@Base+0x3478>
   17af8:	cmp	r0, #0
   17afc:	beq	17b18 <argp_failure@@Base+0x1088>
   17b00:	ldr	r0, [fp, #12]
   17b04:	ldr	r2, [r0, #28]
   17b08:	add	r1, r2, #1
   17b0c:	str	r1, [r0, #28]
   17b10:	mov	r1, #10
   17b14:	strb	r1, [r2]
   17b18:	cmp	r9, #0
   17b1c:	str	r5, [sp, #8]
   17b20:	beq	17b90 <argp_failure@@Base+0x1100>
   17b24:	cmp	r8, r4
   17b28:	bne	17b90 <argp_failure@@Base+0x1100>
   17b2c:	ldr	r5, [fp, #12]
   17b30:	ldr	r0, [r5, #28]!
   17b34:	ldr	r2, [r5, #4]
   17b38:	add	r1, r0, r9
   17b3c:	cmp	r1, r2
   17b40:	bls	17b5c <argp_failure@@Base+0x10cc>
   17b44:	ldr	r0, [fp, #12]
   17b48:	mov	r1, r9
   17b4c:	bl	19f08 <argp_failure@@Base+0x3478>
   17b50:	cmp	r0, #0
   17b54:	beq	17bf0 <argp_failure@@Base+0x1160>
   17b58:	ldr	r0, [r5]
   17b5c:	mov	r1, r4
   17b60:	mov	r2, r9
   17b64:	bl	11384 <memcpy@plt>
   17b68:	ldr	r0, [r5]
   17b6c:	add	r0, r0, r9
   17b70:	b	17bec <argp_failure@@Base+0x115c>
   17b74:	mov	r8, r4
   17b78:	cmp	r8, #0
   17b7c:	bne	17ad0 <argp_failure@@Base+0x1040>
   17b80:	mov	sl, #0
   17b84:	cmp	r9, #0
   17b88:	bne	17c88 <argp_failure@@Base+0x11f8>
   17b8c:	b	17ca0 <argp_failure@@Base+0x1210>
   17b90:	mov	r0, r8
   17b94:	bl	11474 <strlen@plt>
   17b98:	ldr	r1, [fp, #12]
   17b9c:	cmp	r0, #0
   17ba0:	add	r5, r1, #28
   17ba4:	beq	17bf0 <argp_failure@@Base+0x1160>
   17ba8:	mov	r7, r0
   17bac:	ldr	r0, [r1, #28]
   17bb0:	ldr	r1, [r1, #32]
   17bb4:	add	r2, r0, r7
   17bb8:	cmp	r2, r1
   17bbc:	bls	17bd8 <argp_failure@@Base+0x1148>
   17bc0:	ldr	r0, [fp, #12]
   17bc4:	mov	r1, r7
   17bc8:	bl	19f08 <argp_failure@@Base+0x3478>
   17bcc:	cmp	r0, #0
   17bd0:	beq	17bf0 <argp_failure@@Base+0x1160>
   17bd4:	ldr	r0, [r5]
   17bd8:	mov	r1, r8
   17bdc:	mov	r2, r7
   17be0:	bl	11384 <memcpy@plt>
   17be4:	ldr	r0, [r5]
   17be8:	add	r0, r0, r7
   17bec:	str	r0, [r5]
   17bf0:	ldr	r7, [fp, #12]
   17bf4:	ldr	r2, [r5]
   17bf8:	ldr	r1, [r7, #24]
   17bfc:	ldr	r0, [r7, #16]
   17c00:	sub	r1, r2, r1
   17c04:	cmp	r1, r0
   17c08:	bls	17c14 <argp_failure@@Base+0x1184>
   17c0c:	mov	r0, r7
   17c10:	bl	199a8 <argp_failure@@Base+0x2f18>
   17c14:	ldr	r1, [r7, #20]
   17c18:	ldr	r0, [r7, #4]
   17c1c:	bic	r1, r1, r1, asr #31
   17c20:	cmp	r1, r0
   17c24:	bls	17c68 <argp_failure@@Base+0x11d8>
   17c28:	ldr	r0, [fp, #12]
   17c2c:	mov	r1, r0
   17c30:	ldr	r0, [r0, #28]
   17c34:	ldr	r1, [r1, #32]
   17c38:	cmp	r0, r1
   17c3c:	bcc	17c58 <argp_failure@@Base+0x11c8>
   17c40:	ldr	r0, [fp, #12]
   17c44:	mov	r1, #1
   17c48:	bl	19f08 <argp_failure@@Base+0x3478>
   17c4c:	cmp	r0, #0
   17c50:	beq	17c68 <argp_failure@@Base+0x11d8>
   17c54:	ldr	r0, [r5]
   17c58:	add	r1, r0, #1
   17c5c:	str	r1, [r5]
   17c60:	mov	r1, #10
   17c64:	strb	r1, [r0]
   17c68:	mov	sl, #1
   17c6c:	cmp	r8, r4
   17c70:	beq	17c7c <argp_failure@@Base+0x11ec>
   17c74:	mov	r0, r8
   17c78:	bl	14200 <argp_parse@@Base+0x12d0>
   17c7c:	ldr	r5, [sp, #8]
   17c80:	cmp	r9, #0
   17c84:	beq	17ca0 <argp_failure@@Base+0x1210>
   17c88:	cmp	r4, #0
   17c8c:	ldrne	r0, [r6, #20]
   17c90:	cmpne	r0, #0
   17c94:	beq	17ca0 <argp_failure@@Base+0x1210>
   17c98:	mov	r0, r4
   17c9c:	bl	14200 <argp_parse@@Base+0x12d0>
   17ca0:	ldr	r7, [sp, #16]
   17ca4:	ldr	r9, [sp, #24]
   17ca8:	ldr	r8, [sp, #20]
   17cac:	cmp	r7, #0
   17cb0:	beq	17e0c <argp_failure@@Base+0x137c>
   17cb4:	ldr	r3, [r6, #20]
   17cb8:	cmp	r3, #0
   17cbc:	beq	17e0c <argp_failure@@Base+0x137c>
   17cc0:	ldr	r2, [sp, #12]
   17cc4:	movw	r0, #1
   17cc8:	mov	r1, #0
   17ccc:	movt	r0, #512	; 0x200
   17cd0:	add	r0, r0, #3
   17cd4:	blx	r3
   17cd8:	ldr	r6, [fp, #12]
   17cdc:	cmp	r0, #0
   17ce0:	beq	17e10 <argp_failure@@Base+0x1380>
   17ce4:	mov	r4, r0
   17ce8:	orrs	r0, sl, r8
   17cec:	beq	17d28 <argp_failure@@Base+0x1298>
   17cf0:	ldr	r0, [r6, #28]
   17cf4:	ldr	r1, [r6, #32]
   17cf8:	cmp	r0, r1
   17cfc:	bcc	17d18 <argp_failure@@Base+0x1288>
   17d00:	mov	r0, r6
   17d04:	mov	r1, #1
   17d08:	bl	19f08 <argp_failure@@Base+0x3478>
   17d0c:	cmp	r0, #0
   17d10:	beq	17d28 <argp_failure@@Base+0x1298>
   17d14:	ldr	r0, [r6, #28]
   17d18:	add	r1, r0, #1
   17d1c:	str	r1, [r6, #28]
   17d20:	mov	r1, #10
   17d24:	strb	r1, [r0]
   17d28:	mov	r0, r4
   17d2c:	mov	sl, r5
   17d30:	bl	11474 <strlen@plt>
   17d34:	cmp	r0, #0
   17d38:	beq	17d84 <argp_failure@@Base+0x12f4>
   17d3c:	mov	r5, r0
   17d40:	ldr	r0, [r6, #28]
   17d44:	ldr	r1, [r6, #32]
   17d48:	add	r2, r0, r5
   17d4c:	cmp	r2, r1
   17d50:	bls	17d6c <argp_failure@@Base+0x12dc>
   17d54:	mov	r0, r6
   17d58:	mov	r1, r5
   17d5c:	bl	19f08 <argp_failure@@Base+0x3478>
   17d60:	cmp	r0, #0
   17d64:	beq	17d84 <argp_failure@@Base+0x12f4>
   17d68:	ldr	r0, [r6, #28]
   17d6c:	mov	r1, r4
   17d70:	mov	r2, r5
   17d74:	bl	11384 <memcpy@plt>
   17d78:	ldr	r0, [r6, #28]
   17d7c:	add	r0, r0, r5
   17d80:	str	r0, [r6, #28]
   17d84:	mov	r0, r4
   17d88:	bl	14200 <argp_parse@@Base+0x12d0>
   17d8c:	ldr	r1, [r6, #24]
   17d90:	ldr	r2, [r6, #28]
   17d94:	ldr	r0, [r6, #16]
   17d98:	mov	r5, sl
   17d9c:	sub	r1, r2, r1
   17da0:	cmp	r1, r0
   17da4:	bls	17db0 <argp_failure@@Base+0x1320>
   17da8:	mov	r0, r6
   17dac:	bl	199a8 <argp_failure@@Base+0x2f18>
   17db0:	ldr	r1, [r6, #20]
   17db4:	ldr	r0, [r6, #4]
   17db8:	mov	sl, #1
   17dbc:	bic	r1, r1, r1, asr #31
   17dc0:	cmp	r1, r0
   17dc4:	bls	17e10 <argp_failure@@Base+0x1380>
   17dc8:	ldr	r0, [r6, #28]
   17dcc:	ldr	r1, [r6, #32]
   17dd0:	cmp	r0, r1
   17dd4:	bcc	17df4 <argp_failure@@Base+0x1364>
   17dd8:	mov	r0, r6
   17ddc:	mov	r1, #1
   17de0:	mov	sl, #1
   17de4:	bl	19f08 <argp_failure@@Base+0x3478>
   17de8:	cmp	r0, #0
   17dec:	beq	17e10 <argp_failure@@Base+0x1380>
   17df0:	ldr	r0, [r6, #28]
   17df4:	add	r1, r0, #1
   17df8:	mov	sl, #1
   17dfc:	str	r1, [r6, #28]
   17e00:	mov	r1, #10
   17e04:	strb	r1, [r0]
   17e08:	b	17e10 <argp_failure@@Base+0x1380>
   17e0c:	ldr	r6, [fp, #12]
   17e10:	cmp	r5, #0
   17e14:	ldrne	r0, [r5]
   17e18:	cmpne	r0, #0
   17e1c:	bne	17e2c <argp_failure@@Base+0x139c>
   17e20:	mov	r0, sl
   17e24:	sub	sp, fp, #28
   17e28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e2c:	ldr	r4, [fp, #8]
   17e30:	add	r5, r5, #16
   17e34:	cmp	r4, #0
   17e38:	cmpne	sl, #0
   17e3c:	bne	17e20 <argp_failure@@Base+0x1390>
   17e40:	orrs	r3, sl, r8
   17e44:	mov	r1, r9
   17e48:	mov	r2, r7
   17e4c:	stm	sp, {r4, r6}
   17e50:	movwne	r3, #1
   17e54:	bl	179e0 <argp_failure@@Base+0xf50>
   17e58:	orr	sl, r0, sl
   17e5c:	ldr	r0, [r5], #16
   17e60:	cmp	r0, #0
   17e64:	bne	17e34 <argp_failure@@Base+0x13a4>
   17e68:	b	17e20 <argp_failure@@Base+0x1390>
   17e6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17e70:	add	fp, sp, #28
   17e74:	sub	sp, sp, #28
   17e78:	mov	r7, r0
   17e7c:	ldr	r0, [r0, #16]
   17e80:	mov	r5, r1
   17e84:	cmp	r0, #0
   17e88:	beq	17ea8 <argp_failure@@Base+0x1418>
   17e8c:	mov	r2, r0
   17e90:	mov	r1, r2
   17e94:	ldr	r2, [r2, #12]
   17e98:	cmp	r2, #0
   17e9c:	bne	17e90 <argp_failure@@Base+0x1400>
   17ea0:	add	r2, r1, #8
   17ea4:	b	17eac <argp_failure@@Base+0x141c>
   17ea8:	add	r2, r7, #12
   17eac:	ldr	r1, [r5, #16]
   17eb0:	ldr	r3, [r2]
   17eb4:	cmp	r1, #0
   17eb8:	beq	17ed8 <argp_failure@@Base+0x1448>
   17ebc:	mov	r2, r1
   17ec0:	mov	r6, r2
   17ec4:	ldr	r2, [r2, #12]
   17ec8:	cmp	r2, #0
   17ecc:	bne	17ec0 <argp_failure@@Base+0x1430>
   17ed0:	add	r2, r6, #8
   17ed4:	b	17edc <argp_failure@@Base+0x144c>
   17ed8:	add	r2, r5, #12
   17edc:	ldr	r6, [r2]
   17ee0:	orr	r4, r6, r3
   17ee4:	sub	r2, r3, r6
   17ee8:	cmn	r4, #1
   17eec:	mov	r4, r2
   17ef0:	suble	r4, r6, r3
   17ef4:	and	r3, r6, r3
   17ef8:	cmp	r3, #0
   17efc:	movlt	r4, r2
   17f00:	cmp	r4, #0
   17f04:	bne	17f24 <argp_failure@@Base+0x1494>
   17f08:	cmp	r0, #0
   17f0c:	mov	r4, r0
   17f10:	movwne	r4, #1
   17f14:	cmp	r1, #0
   17f18:	subne	r4, r4, #1
   17f1c:	cmp	r4, #0
   17f20:	beq	17f30 <argp_failure@@Base+0x14a0>
   17f24:	mov	r0, r4
   17f28:	sub	sp, fp, #28
   17f2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17f30:	cmp	r0, #0
   17f34:	beq	17fa4 <argp_failure@@Base+0x1514>
   17f38:	ldr	r3, [r1, #20]
   17f3c:	ldr	r2, [r0, #20]
   17f40:	cmp	r2, r3
   17f44:	ble	17f6c <argp_failure@@Base+0x14dc>
   17f48:	ldr	r0, [r0, #12]
   17f4c:	ldr	r2, [r0, #20]
   17f50:	cmp	r2, r3
   17f54:	bgt	17f48 <argp_failure@@Base+0x14b8>
   17f58:	bl	18380 <argp_failure@@Base+0x18f0>
   17f5c:	mov	r4, r0
   17f60:	cmp	r0, #0
   17f64:	movweq	r4, #1
   17f68:	b	17f24 <argp_failure@@Base+0x1494>
   17f6c:	bge	17f94 <argp_failure@@Base+0x1504>
   17f70:	ldr	r1, [r1, #12]
   17f74:	ldr	r3, [r1, #20]
   17f78:	cmp	r2, r3
   17f7c:	blt	17f70 <argp_failure@@Base+0x14e0>
   17f80:	bl	18380 <argp_failure@@Base+0x18f0>
   17f84:	mov	r4, r0
   17f88:	cmp	r0, #0
   17f8c:	mvneq	r4, #0
   17f90:	b	17f24 <argp_failure@@Base+0x1494>
   17f94:	bl	18380 <argp_failure@@Base+0x18f0>
   17f98:	mov	r4, r0
   17f9c:	cmp	r0, #0
   17fa0:	bne	17f24 <argp_failure@@Base+0x1494>
   17fa4:	ldr	r0, [r7, #12]
   17fa8:	ldr	r1, [r5, #12]
   17fac:	orr	r2, r1, r0
   17fb0:	sub	r3, r0, r1
   17fb4:	cmn	r2, #1
   17fb8:	mov	r4, r3
   17fbc:	suble	r4, r1, r0
   17fc0:	and	r0, r1, r0
   17fc4:	cmp	r0, #0
   17fc8:	movlt	r4, r3
   17fcc:	cmp	r4, #0
   17fd0:	bne	17f24 <argp_failure@@Base+0x1494>
   17fd4:	ldr	r3, [r7, #4]
   17fd8:	mov	sl, #0
   17fdc:	cmp	r3, #0
   17fe0:	beq	18018 <argp_failure@@Base+0x1588>
   17fe4:	ldr	r0, [r7]
   17fe8:	mov	r1, r3
   17fec:	add	r0, r0, #12
   17ff0:	ldr	sl, [r0, #-12]
   17ff4:	cmp	sl, #0
   17ff8:	beq	18008 <argp_failure@@Base+0x1578>
   17ffc:	ldrb	r2, [r0]
   18000:	tst	r2, #2
   18004:	beq	18018 <argp_failure@@Base+0x1588>
   18008:	add	r0, r0, #24
   1800c:	subs	r1, r1, #1
   18010:	bne	17ff0 <argp_failure@@Base+0x1560>
   18014:	mov	sl, #0
   18018:	ldr	r8, [r5, #4]
   1801c:	cmp	r8, #0
   18020:	beq	18054 <argp_failure@@Base+0x15c4>
   18024:	ldr	r0, [r5]
   18028:	mov	r1, r8
   1802c:	add	r0, r0, #12
   18030:	ldr	r6, [r0, #-12]
   18034:	cmp	r6, #0
   18038:	beq	18048 <argp_failure@@Base+0x15b8>
   1803c:	ldrb	r2, [r0]
   18040:	tst	r2, #2
   18044:	beq	18058 <argp_failure@@Base+0x15c8>
   18048:	add	r0, r0, #24
   1804c:	subs	r1, r1, #1
   18050:	bne	18030 <argp_failure@@Base+0x15a0>
   18054:	mov	r6, #0
   18058:	ldr	r4, [r7]
   1805c:	mov	r9, #0
   18060:	cmp	sl, #0
   18064:	str	r3, [sp, #20]
   18068:	str	r8, [sp, #16]
   1806c:	ldr	r1, [r4, #12]
   18070:	str	r4, [sp, #4]
   18074:	beq	180dc <argp_failure@@Base+0x164c>
   18078:	ands	r0, r1, #8
   1807c:	beq	180dc <argp_failure@@Base+0x164c>
   18080:	str	r1, [sp, #24]
   18084:	bl	1145c <__ctype_b_loc@plt>
   18088:	ldrb	r1, [sl]
   1808c:	ldr	r0, [r0]
   18090:	b	18098 <argp_failure@@Base+0x1608>
   18094:	ldrb	r1, [sl, #1]!
   18098:	add	r2, r0, r1, lsl #1
   1809c:	ldrb	r2, [r2, #1]
   180a0:	tst	r2, #32
   180a4:	bne	18094 <argp_failure@@Base+0x1604>
   180a8:	subs	r4, r1, #45	; 0x2d
   180ac:	movwne	r4, #1
   180b0:	cmp	r1, #0
   180b4:	beq	180d4 <argp_failure@@Base+0x1644>
   180b8:	uxtb	r1, r1
   180bc:	ldrb	r1, [r0, r1, lsl #1]
   180c0:	tst	r1, #8
   180c4:	bne	180d4 <argp_failure@@Base+0x1644>
   180c8:	ldrb	r1, [sl, #1]!
   180cc:	cmp	r1, #0
   180d0:	bne	180b8 <argp_failure@@Base+0x1628>
   180d4:	ldr	r1, [sp, #24]
   180d8:	b	180e0 <argp_failure@@Base+0x1650>
   180dc:	mov	r4, #0
   180e0:	ldr	r0, [r5]
   180e4:	cmp	r6, #0
   180e8:	str	r0, [sp, #8]
   180ec:	ldr	r0, [r0, #12]
   180f0:	str	r0, [sp, #12]
   180f4:	andsne	r0, r0, #8
   180f8:	beq	18154 <argp_failure@@Base+0x16c4>
   180fc:	mov	r8, r1
   18100:	bl	1145c <__ctype_b_loc@plt>
   18104:	ldrb	r1, [r6]
   18108:	ldr	r0, [r0]
   1810c:	b	18114 <argp_failure@@Base+0x1684>
   18110:	ldrb	r1, [r6, #1]!
   18114:	add	r2, r0, r1, lsl #1
   18118:	ldrb	r2, [r2, #1]
   1811c:	tst	r2, #32
   18120:	bne	18110 <argp_failure@@Base+0x1680>
   18124:	subs	r9, r1, #45	; 0x2d
   18128:	movwne	r9, #1
   1812c:	cmp	r1, #0
   18130:	beq	18150 <argp_failure@@Base+0x16c0>
   18134:	uxtb	r1, r1
   18138:	ldrb	r1, [r0, r1, lsl #1]
   1813c:	tst	r1, #8
   18140:	bne	18150 <argp_failure@@Base+0x16c0>
   18144:	ldrb	r1, [r6, #1]!
   18148:	cmp	r1, #0
   1814c:	bne	18134 <argp_failure@@Base+0x16a4>
   18150:	mov	r1, r8
   18154:	subs	r4, r4, r9
   18158:	bne	17f24 <argp_failure@@Base+0x1494>
   1815c:	ldr	r0, [sp, #20]
   18160:	mov	r2, #0
   18164:	cmp	r0, #0
   18168:	beq	18200 <argp_failure@@Base+0x1770>
   1816c:	rsb	r8, r0, #1
   18170:	ldr	r0, [sp, #4]
   18174:	ldr	r4, [r7, #8]
   18178:	add	r9, r0, #36	; 0x24
   1817c:	tst	r1, #8
   18180:	beq	181a8 <argp_failure@@Base+0x1718>
   18184:	mov	r2, #0
   18188:	cmp	r8, #0
   1818c:	beq	18200 <argp_failure@@Base+0x1770>
   18190:	cmp	r2, #0
   18194:	bne	18200 <argp_failure@@Base+0x1770>
   18198:	ldr	r1, [r9], #24
   1819c:	add	r8, r8, #1
   181a0:	tst	r1, #8
   181a4:	bne	18184 <argp_failure@@Base+0x16f4>
   181a8:	ldr	r7, [r9, #-32]	; 0xffffffe0
   181ac:	sub	r0, r7, #1
   181b0:	cmp	r0, #254	; 0xfe
   181b4:	bhi	18184 <argp_failure@@Base+0x16f4>
   181b8:	str	r1, [sp, #24]
   181bc:	bl	1145c <__ctype_b_loc@plt>
   181c0:	ldr	r0, [r0]
   181c4:	add	r0, r0, r7, lsl #1
   181c8:	ldrb	r0, [r0, #1]
   181cc:	tst	r0, #64	; 0x40
   181d0:	beq	18184 <argp_failure@@Base+0x16f4>
   181d4:	ldrb	r0, [r4]
   181d8:	mov	r2, r7
   181dc:	cmp	r7, r0
   181e0:	bne	18184 <argp_failure@@Base+0x16f4>
   181e4:	ldr	r0, [sp, #24]
   181e8:	add	r4, r4, #1
   181ec:	tst	r0, #2
   181f0:	mov	r0, #0
   181f4:	movne	r2, r0
   181f8:	cmp	r8, #0
   181fc:	bne	18190 <argp_failure@@Base+0x1700>
   18200:	ldr	r3, [sp, #16]
   18204:	mov	r9, #0
   18208:	mov	r0, r2
   1820c:	str	r2, [sp, #24]
   18210:	cmp	r3, #0
   18214:	beq	182b8 <argp_failure@@Base+0x1828>
   18218:	ldr	r0, [sp, #8]
   1821c:	ldr	r5, [r5, #8]
   18220:	ldr	r4, [sp, #12]
   18224:	rsb	r7, r3, #1
   18228:	add	r8, r0, #36	; 0x24
   1822c:	tst	r4, #8
   18230:	beq	18250 <argp_failure@@Base+0x17c0>
   18234:	b	182a4 <argp_failure@@Base+0x1814>
   18238:	ldr	r2, [sp, #24]
   1823c:	b	182a4 <argp_failure@@Base+0x1814>
   18240:	ldr	r4, [r8], #24
   18244:	add	r7, r7, #1
   18248:	tst	r4, #8
   1824c:	bne	182a4 <argp_failure@@Base+0x1814>
   18250:	ldr	r9, [r8, #-32]	; 0xffffffe0
   18254:	sub	r0, r9, #1
   18258:	cmp	r0, #254	; 0xfe
   1825c:	bhi	182a4 <argp_failure@@Base+0x1814>
   18260:	bl	1145c <__ctype_b_loc@plt>
   18264:	ldr	r0, [r0]
   18268:	add	r0, r0, r9, lsl #1
   1826c:	ldrb	r0, [r0, #1]
   18270:	tst	r0, #64	; 0x40
   18274:	beq	18238 <argp_failure@@Base+0x17a8>
   18278:	ldrb	r0, [r5]
   1827c:	ldr	r2, [sp, #24]
   18280:	cmp	r9, r0
   18284:	bne	182a4 <argp_failure@@Base+0x1814>
   18288:	tst	r4, #2
   1828c:	mov	r0, #0
   18290:	add	r5, r5, #1
   18294:	movne	r9, r0
   18298:	cmp	r7, #0
   1829c:	bne	182b0 <argp_failure@@Base+0x1820>
   182a0:	b	182b8 <argp_failure@@Base+0x1828>
   182a4:	mov	r9, #0
   182a8:	cmp	r7, #0
   182ac:	beq	182b8 <argp_failure@@Base+0x1828>
   182b0:	cmp	r9, #0
   182b4:	beq	18240 <argp_failure@@Base+0x17b0>
   182b8:	tst	r2, #255	; 0xff
   182bc:	mov	r5, r2
   182c0:	bne	182d0 <argp_failure@@Base+0x1840>
   182c4:	cmp	sl, #0
   182c8:	ldrbne	r5, [sl]
   182cc:	moveq	r5, #0
   182d0:	tst	r9, #255	; 0xff
   182d4:	mov	r7, r9
   182d8:	bne	182e8 <argp_failure@@Base+0x1858>
   182dc:	cmp	r6, #0
   182e0:	ldrbne	r7, [r6]
   182e4:	moveq	r7, #0
   182e8:	bl	11444 <__ctype_tolower_loc@plt>
   182ec:	ldr	r2, [r0]
   182f0:	uxtb	r0, r7
   182f4:	uxtb	r1, r5
   182f8:	ldr	r3, [r2, r0, lsl #2]
   182fc:	ldr	r2, [r2, r1, lsl #2]
   18300:	subs	r4, r2, r3
   18304:	subseq	r4, r0, r1
   18308:	bne	17f24 <argp_failure@@Base+0x1494>
   1830c:	ldr	r0, [sp, #24]
   18310:	uxtb	r4, r0
   18314:	cmp	r4, #0
   18318:	movwne	r4, #1
   1831c:	tst	r9, #255	; 0xff
   18320:	subne	r4, r4, #1
   18324:	cmp	r4, #0
   18328:	bne	17f24 <argp_failure@@Base+0x1494>
   1832c:	ldr	r0, [sp, #24]
   18330:	tst	r0, #255	; 0xff
   18334:	beq	18340 <argp_failure@@Base+0x18b0>
   18338:	mov	r4, #0
   1833c:	b	17f24 <argp_failure@@Base+0x1494>
   18340:	cmp	sl, #0
   18344:	mov	r4, sl
   18348:	movwne	r4, #1
   1834c:	cmp	r6, #0
   18350:	subne	r4, r4, #1
   18354:	cmp	r4, #0
   18358:	bne	17f24 <argp_failure@@Base+0x1494>
   1835c:	cmp	sl, #0
   18360:	beq	18338 <argp_failure@@Base+0x18a8>
   18364:	mov	r0, sl
   18368:	mov	r1, r6
   1836c:	bl	113c0 <strcasecmp@plt>
   18370:	mov	r4, r0
   18374:	cmp	r0, #0
   18378:	moveq	r4, #0
   1837c:	b	17f24 <argp_failure@@Base+0x1494>
   18380:	push	{r4, r5, fp, lr}
   18384:	add	fp, sp, #8
   18388:	mov	r4, r1
   1838c:	mov	r5, r0
   18390:	ldr	r1, [r1, #12]
   18394:	ldr	r0, [r0, #12]
   18398:	cmp	r0, r1
   1839c:	beq	183ac <argp_failure@@Base+0x191c>
   183a0:	bl	18380 <argp_failure@@Base+0x18f0>
   183a4:	cmp	r0, #0
   183a8:	popne	{r4, r5, fp, pc}
   183ac:	ldr	r1, [r5, #8]
   183b0:	ldr	r2, [r4, #8]
   183b4:	orr	r0, r2, r1
   183b8:	sub	r3, r1, r2
   183bc:	cmn	r0, #1
   183c0:	mov	r0, r3
   183c4:	suble	r0, r2, r1
   183c8:	and	r1, r2, r1
   183cc:	cmp	r1, #0
   183d0:	movlt	r0, r3
   183d4:	cmp	r0, #0
   183d8:	ldreq	r0, [r5, #4]
   183dc:	ldreq	r1, [r4, #4]
   183e0:	subeq	r0, r1, r0
   183e4:	pop	{r4, r5, fp, pc}
   183e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   183ec:	add	fp, sp, #24
   183f0:	mov	r8, r0
   183f4:	ldr	r0, [r1, #12]
   183f8:	mov	r5, r1
   183fc:	cmp	r0, #0
   18400:	beq	18450 <argp_failure@@Base+0x19c0>
   18404:	ldr	r1, [r5, #8]
   18408:	ldr	r0, [r5]
   1840c:	ldr	r4, [r1]
   18410:	ldr	r7, [r0, #16]
   18414:	cmp	r4, #0
   18418:	ldrne	r1, [r1, #4]
   1841c:	cmpne	r1, #0
   18420:	bne	1851c <argp_failure@@Base+0x1a8c>
   18424:	cmp	r7, #0
   18428:	beq	18440 <argp_failure@@Base+0x19b0>
   1842c:	ldr	r0, [r7]
   18430:	cmp	r0, #0
   18434:	ldrbne	r1, [r0]
   18438:	cmpne	r1, #0
   1843c:	bne	18574 <argp_failure@@Base+0x1ae4>
   18440:	mov	r0, #0
   18444:	str	r0, [r5, #12]
   18448:	add	r5, r5, #4
   1844c:	b	18494 <argp_failure@@Base+0x1a04>
   18450:	ldr	r6, [r5, #4]!
   18454:	ldr	r0, [r6, #28]
   18458:	ldr	r1, [r6, #32]
   1845c:	add	r2, r0, #2
   18460:	cmp	r2, r1
   18464:	bls	18480 <argp_failure@@Base+0x19f0>
   18468:	mov	r0, r6
   1846c:	mov	r1, #2
   18470:	bl	19f08 <argp_failure@@Base+0x3478>
   18474:	cmp	r0, #0
   18478:	beq	18494 <argp_failure@@Base+0x1a04>
   1847c:	ldr	r0, [r6, #28]
   18480:	movw	r1, #8236	; 0x202c
   18484:	strh	r1, [r0]
   18488:	ldr	r0, [r6, #28]
   1848c:	add	r0, r0, #2
   18490:	str	r0, [r6, #28]
   18494:	ldr	r5, [r5]
   18498:	ldr	r1, [r5, #24]
   1849c:	ldr	r2, [r5, #28]
   184a0:	ldr	r0, [r5, #16]
   184a4:	sub	r1, r2, r1
   184a8:	cmp	r1, r0
   184ac:	bls	184b8 <argp_failure@@Base+0x1a28>
   184b0:	mov	r0, r5
   184b4:	bl	199a8 <argp_failure@@Base+0x2f18>
   184b8:	ldr	r0, [r5, #20]
   184bc:	bic	r0, r0, r0, asr #31
   184c0:	sub	r1, r8, r0
   184c4:	cmp	r1, #1
   184c8:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
   184cc:	add	r1, r8, #1
   184d0:	mov	r6, #32
   184d4:	sub	r4, r1, r0
   184d8:	ldr	r0, [r5, #28]
   184dc:	ldr	r1, [r5, #32]
   184e0:	cmp	r0, r1
   184e4:	bcc	18500 <argp_failure@@Base+0x1a70>
   184e8:	mov	r0, r5
   184ec:	mov	r1, #1
   184f0:	bl	19f08 <argp_failure@@Base+0x3478>
   184f4:	cmp	r0, #0
   184f8:	beq	1850c <argp_failure@@Base+0x1a7c>
   184fc:	ldr	r0, [r5, #28]
   18500:	add	r1, r0, #1
   18504:	str	r1, [r5, #28]
   18508:	strb	r6, [r0]
   1850c:	sub	r4, r4, #1
   18510:	cmp	r4, #1
   18514:	bgt	184d8 <argp_failure@@Base+0x1a48>
   18518:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1851c:	ldr	r1, [r4, #12]
   18520:	ldr	r0, [r0, #12]
   18524:	cmp	r0, r1
   18528:	beq	18424 <argp_failure@@Base+0x1994>
   1852c:	ldr	r6, [r5, #4]
   18530:	ldr	r0, [r6, #28]
   18534:	ldr	r1, [r6, #32]
   18538:	cmp	r0, r1
   1853c:	bcc	18558 <argp_failure@@Base+0x1ac8>
   18540:	mov	r0, r6
   18544:	mov	r1, #1
   18548:	bl	19f08 <argp_failure@@Base+0x3478>
   1854c:	cmp	r0, #0
   18550:	beq	18424 <argp_failure@@Base+0x1994>
   18554:	ldr	r0, [r6, #28]
   18558:	add	r1, r0, #1
   1855c:	str	r1, [r6, #28]
   18560:	mov	r1, #10
   18564:	strb	r1, [r0]
   18568:	cmp	r7, #0
   1856c:	bne	1842c <argp_failure@@Base+0x199c>
   18570:	b	18440 <argp_failure@@Base+0x19b0>
   18574:	cmp	r4, #0
   18578:	beq	185b0 <argp_failure@@Base+0x1b20>
   1857c:	ldr	r1, [r4, #16]
   18580:	cmp	r1, r7
   18584:	beq	18440 <argp_failure@@Base+0x19b0>
   18588:	cmp	r1, #0
   1858c:	beq	185a4 <argp_failure@@Base+0x1b14>
   18590:	ldr	r1, [r1, #12]
   18594:	cmp	r1, r7
   18598:	cmpne	r1, #0
   1859c:	bne	18590 <argp_failure@@Base+0x1b00>
   185a0:	b	185a8 <argp_failure@@Base+0x1b18>
   185a4:	mov	r1, #0
   185a8:	cmp	r1, r7
   185ac:	beq	18440 <argp_failure@@Base+0x19b0>
   185b0:	ldr	r1, [r5, #4]
   185b4:	mov	r2, r5
   185b8:	ldr	r4, [r1, #12]
   185bc:	ldr	r1, [r7, #16]
   185c0:	bl	185f0 <argp_failure@@Base+0x1b60>
   185c4:	ldr	r6, [r5, #4]
   185c8:	ldr	r1, [r6, #24]
   185cc:	ldr	r2, [r6, #28]
   185d0:	ldr	r0, [r6, #16]
   185d4:	sub	r1, r2, r1
   185d8:	cmp	r1, r0
   185dc:	bls	185e8 <argp_failure@@Base+0x1b58>
   185e0:	mov	r0, r6
   185e4:	bl	199a8 <argp_failure@@Base+0x2f18>
   185e8:	str	r4, [r6, #12]
   185ec:	b	18440 <argp_failure@@Base+0x19b0>
   185f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   185f4:	add	fp, sp, #28
   185f8:	sub	sp, sp, #4
   185fc:	mov	r9, r2
   18600:	mov	r8, r0
   18604:	cmp	r1, #0
   18608:	mov	r6, r0
   1860c:	beq	1864c <argp_failure@@Base+0x1bbc>
   18610:	ldr	r0, [r1, #20]
   18614:	mov	r4, r1
   18618:	mov	r6, r8
   1861c:	cmp	r0, #0
   18620:	beq	1864c <argp_failure@@Base+0x1bbc>
   18624:	ldr	r1, [r9, #16]
   18628:	mov	r0, r4
   1862c:	bl	13b6c <argp_parse@@Base+0xc3c>
   18630:	ldr	r3, [r4, #20]
   18634:	mov	r2, r0
   18638:	movw	r0, #3
   1863c:	mov	r1, r8
   18640:	movt	r0, #512	; 0x200
   18644:	blx	r3
   18648:	mov	r6, r0
   1864c:	cmp	r6, #0
   18650:	beq	18880 <argp_failure@@Base+0x1df0>
   18654:	ldrb	r0, [r6]
   18658:	cmp	r0, #0
   1865c:	beq	18874 <argp_failure@@Base+0x1de4>
   18660:	ldr	r0, [r9, #8]
   18664:	ldr	r0, [r0]
   18668:	cmp	r0, #0
   1866c:	beq	186ac <argp_failure@@Base+0x1c1c>
   18670:	ldr	r4, [r9, #4]
   18674:	ldr	r0, [r4, #28]
   18678:	ldr	r1, [r4, #32]
   1867c:	cmp	r0, r1
   18680:	bcc	1869c <argp_failure@@Base+0x1c0c>
   18684:	mov	r0, r4
   18688:	mov	r1, #1
   1868c:	bl	19f08 <argp_failure@@Base+0x3478>
   18690:	cmp	r0, #0
   18694:	beq	186ac <argp_failure@@Base+0x1c1c>
   18698:	ldr	r0, [r4, #28]
   1869c:	add	r1, r0, #1
   186a0:	str	r1, [r4, #28]
   186a4:	mov	r1, #10
   186a8:	strb	r1, [r0]
   186ac:	ldr	r7, [r9, #4]
   186b0:	movw	sl, #2160	; 0x870
   186b4:	movt	sl, #3
   186b8:	ldr	r4, [sl, #24]
   186bc:	ldr	r1, [r7, #24]
   186c0:	ldr	r2, [r7, #28]
   186c4:	ldr	r0, [r7, #16]
   186c8:	sub	r1, r2, r1
   186cc:	cmp	r1, r0
   186d0:	bls	186dc <argp_failure@@Base+0x1c4c>
   186d4:	mov	r0, r7
   186d8:	bl	199a8 <argp_failure@@Base+0x2f18>
   186dc:	ldr	r0, [r7, #20]
   186e0:	bic	r0, r0, r0, asr #31
   186e4:	sub	r1, r4, r0
   186e8:	cmp	r1, #1
   186ec:	blt	1873c <argp_failure@@Base+0x1cac>
   186f0:	add	r1, r4, #1
   186f4:	mov	r5, #32
   186f8:	sub	r4, r1, r0
   186fc:	ldr	r0, [r7, #28]
   18700:	ldr	r1, [r7, #32]
   18704:	cmp	r0, r1
   18708:	bcc	18724 <argp_failure@@Base+0x1c94>
   1870c:	mov	r0, r7
   18710:	mov	r1, #1
   18714:	bl	19f08 <argp_failure@@Base+0x3478>
   18718:	cmp	r0, #0
   1871c:	beq	18730 <argp_failure@@Base+0x1ca0>
   18720:	ldr	r0, [r7, #28]
   18724:	add	r1, r0, #1
   18728:	str	r1, [r7, #28]
   1872c:	strb	r5, [r0]
   18730:	sub	r4, r4, #1
   18734:	cmp	r4, #1
   18738:	bgt	186fc <argp_failure@@Base+0x1c6c>
   1873c:	ldr	r4, [r9, #4]
   18740:	ldr	r5, [sl, #24]
   18744:	ldr	r1, [r4, #24]
   18748:	ldr	r2, [r4, #28]
   1874c:	ldr	r0, [r4, #16]
   18750:	mov	r7, r4
   18754:	sub	r1, r2, r1
   18758:	mov	r2, sl
   1875c:	mov	sl, r5
   18760:	cmp	r1, r0
   18764:	bls	1878c <argp_failure@@Base+0x1cfc>
   18768:	mov	r0, r4
   1876c:	mov	r7, r2
   18770:	bl	199a8 <argp_failure@@Base+0x2f18>
   18774:	ldr	sl, [r7, #24]
   18778:	ldr	r7, [r9, #4]
   1877c:	ldr	r1, [r7, #24]
   18780:	ldr	r2, [r7, #28]
   18784:	ldr	r0, [r7, #16]
   18788:	sub	r1, r2, r1
   1878c:	str	r5, [r4, #4]
   18790:	cmp	r1, r0
   18794:	mov	r5, r7
   18798:	bls	187a8 <argp_failure@@Base+0x1d18>
   1879c:	mov	r0, r7
   187a0:	bl	199a8 <argp_failure@@Base+0x2f18>
   187a4:	ldr	r5, [r9, #4]
   187a8:	mov	r0, r6
   187ac:	str	sl, [r7, #12]
   187b0:	bl	11474 <strlen@plt>
   187b4:	cmp	r0, #0
   187b8:	beq	18804 <argp_failure@@Base+0x1d74>
   187bc:	mov	r4, r0
   187c0:	ldr	r0, [r5, #28]
   187c4:	ldr	r1, [r5, #32]
   187c8:	add	r2, r0, r4
   187cc:	cmp	r2, r1
   187d0:	bls	187ec <argp_failure@@Base+0x1d5c>
   187d4:	mov	r0, r5
   187d8:	mov	r1, r4
   187dc:	bl	19f08 <argp_failure@@Base+0x3478>
   187e0:	cmp	r0, #0
   187e4:	beq	18804 <argp_failure@@Base+0x1d74>
   187e8:	ldr	r0, [r5, #28]
   187ec:	mov	r1, r6
   187f0:	mov	r2, r4
   187f4:	bl	11384 <memcpy@plt>
   187f8:	ldr	r0, [r5, #28]
   187fc:	add	r0, r0, r4
   18800:	str	r0, [r5, #28]
   18804:	ldr	r4, [r9, #4]
   18808:	mov	r5, r4
   1880c:	ldr	r2, [r4, #24]
   18810:	ldr	r0, [r4, #16]
   18814:	ldr	r1, [r5, #28]!
   18818:	sub	r2, r1, r2
   1881c:	cmp	r2, r0
   18820:	mov	r0, r4
   18824:	bls	1883c <argp_failure@@Base+0x1dac>
   18828:	mov	r0, r4
   1882c:	bl	199a8 <argp_failure@@Base+0x2f18>
   18830:	ldr	r0, [r9, #4]
   18834:	mov	r5, r0
   18838:	ldr	r1, [r5, #28]!
   1883c:	mov	r2, #0
   18840:	str	r2, [r4, #4]
   18844:	ldr	r2, [r0, #32]
   18848:	cmp	r1, r2
   1884c:	bcc	18864 <argp_failure@@Base+0x1dd4>
   18850:	mov	r1, #1
   18854:	bl	19f08 <argp_failure@@Base+0x3478>
   18858:	cmp	r0, #0
   1885c:	beq	18874 <argp_failure@@Base+0x1de4>
   18860:	ldr	r1, [r5]
   18864:	add	r0, r1, #1
   18868:	str	r0, [r5]
   1886c:	mov	r0, #10
   18870:	strb	r0, [r1]
   18874:	ldr	r0, [r9, #8]
   18878:	mov	r1, #1
   1887c:	str	r1, [r0, #4]
   18880:	cmp	r6, r8
   18884:	subeq	sp, fp, #28
   18888:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1888c:	mov	r0, r6
   18890:	sub	sp, fp, #28
   18894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18898:	b	14200 <argp_parse@@Base+0x12d0>
   1889c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   188a0:	add	fp, sp, #28
   188a4:	sub	sp, sp, #68	; 0x44
   188a8:	mvn	r6, #0
   188ac:	cmp	r0, #1
   188b0:	blt	18fd8 <argp_failure@@Base+0x2548>
   188b4:	mov	r7, r2
   188b8:	ldr	r2, [fp, #16]
   188bc:	mov	r5, r3
   188c0:	mov	r3, r0
   188c4:	mov	sl, r1
   188c8:	mov	r0, #0
   188cc:	ldr	r9, [r2]
   188d0:	ldr	r6, [r2, #4]
   188d4:	str	r0, [r2, #12]
   188d8:	cmp	r9, #0
   188dc:	beq	18900 <argp_failure@@Base+0x1e70>
   188e0:	ldr	r0, [r2, #16]
   188e4:	cmp	r0, #0
   188e8:	beq	18908 <argp_failure@@Base+0x1e78>
   188ec:	ldrb	r0, [r7]
   188f0:	cmp	r0, #45	; 0x2d
   188f4:	cmpne	r0, #43	; 0x2b
   188f8:	addeq	r7, r7, #1
   188fc:	b	1897c <argp_failure@@Base+0x1eec>
   18900:	mov	r9, #1
   18904:	str	r9, [r2]
   18908:	mov	r0, #0
   1890c:	str	r9, [r2, #28]
   18910:	str	r9, [r2, #32]
   18914:	str	r0, [r2, #20]
   18918:	ldrb	r1, [r7]
   1891c:	cmp	r1, #43	; 0x2b
   18920:	beq	18930 <argp_failure@@Base+0x1ea0>
   18924:	cmp	r1, #45	; 0x2d
   18928:	bne	1893c <argp_failure@@Base+0x1eac>
   1892c:	mov	r0, #2
   18930:	str	r0, [r2, #24]
   18934:	add	r7, r7, #1
   18938:	b	18974 <argp_failure@@Base+0x1ee4>
   1893c:	ldr	r0, [fp, #20]
   18940:	cmp	r0, #0
   18944:	bne	1896c <argp_failure@@Base+0x1edc>
   18948:	movw	r0, #50217	; 0xc429
   1894c:	mov	r8, r2
   18950:	mov	r4, r3
   18954:	movt	r0, #1
   18958:	bl	11408 <getenv@plt>
   1895c:	mov	r3, r4
   18960:	mov	r2, r8
   18964:	cmp	r0, #0
   18968:	beq	18fe4 <argp_failure@@Base+0x2554>
   1896c:	mov	r0, #0
   18970:	str	r0, [r2, #24]
   18974:	mov	r0, #1
   18978:	str	r0, [r2, #16]
   1897c:	ldrb	r0, [r7]
   18980:	ldr	r4, [r2, #20]
   18984:	str	r5, [sp, #48]	; 0x30
   18988:	subs	r0, r0, #58	; 0x3a
   1898c:	movne	r0, r6
   18990:	cmp	r4, #0
   18994:	str	r0, [fp, #-44]	; 0xffffffd4
   18998:	ldrbne	r0, [r4]
   1899c:	cmpne	r0, #0
   189a0:	bne	18a00 <argp_failure@@Base+0x1f70>
   189a4:	mov	r4, r2
   189a8:	mov	r6, r2
   189ac:	str	r7, [sp, #32]
   189b0:	ldr	r1, [r4, #32]!
   189b4:	cmp	r1, r9
   189b8:	mov	r8, r1
   189bc:	strgt	r9, [r4]
   189c0:	movgt	r8, r9
   189c4:	ldr	r5, [r6, #28]!
   189c8:	cmp	r5, r9
   189cc:	strgt	r9, [r6]
   189d0:	movgt	r5, r9
   189d4:	ldr	r7, [r2, #24]
   189d8:	cmp	r7, #1
   189dc:	bne	18cf4 <argp_failure@@Base+0x2264>
   189e0:	cmp	r5, r8
   189e4:	cmpne	r8, r9
   189e8:	bne	18ab8 <argp_failure@@Base+0x2028>
   189ec:	cmp	r8, r9
   189f0:	mov	r1, r6
   189f4:	mov	r0, r9
   189f8:	bne	18cac <argp_failure@@Base+0x221c>
   189fc:	b	18cb4 <argp_failure@@Base+0x2224>
   18a00:	str	r3, [fp, #-40]	; 0xffffffd8
   18a04:	add	r8, r4, #1
   18a08:	mov	r0, r7
   18a0c:	mov	r5, r2
   18a10:	str	r8, [r2, #20]
   18a14:	ldrb	r6, [r4]
   18a18:	mov	r1, r6
   18a1c:	bl	11480 <strchr@plt>
   18a20:	ldrb	r1, [r4, #1]
   18a24:	mov	r3, r5
   18a28:	cmp	r1, #0
   18a2c:	orr	r1, r6, #1
   18a30:	addeq	r9, r9, #1
   18a34:	streq	r9, [r5]
   18a38:	cmp	r1, #59	; 0x3b
   18a3c:	cmpne	r0, #0
   18a40:	bne	18a5c <argp_failure@@Base+0x1fcc>
   18a44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18a48:	cmp	r0, #0
   18a4c:	bne	190a4 <argp_failure@@Base+0x2614>
   18a50:	str	r6, [r3, #8]
   18a54:	mov	r6, #63	; 0x3f
   18a58:	b	18fd8 <argp_failure@@Base+0x2548>
   18a5c:	ldrb	r2, [r0]
   18a60:	ldrb	r1, [r0, #1]
   18a64:	cmp	r2, #87	; 0x57
   18a68:	bne	18dd4 <argp_failure@@Base+0x2344>
   18a6c:	ldr	r2, [sp, #48]	; 0x30
   18a70:	cmp	r2, #0
   18a74:	beq	18dd4 <argp_failure@@Base+0x2344>
   18a78:	cmp	r1, #59	; 0x3b
   18a7c:	bne	18dd4 <argp_failure@@Base+0x2344>
   18a80:	ldrb	r0, [r8]
   18a84:	cmp	r0, #0
   18a88:	bne	190d4 <argp_failure@@Base+0x2644>
   18a8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18a90:	cmp	r9, r0
   18a94:	bne	190d0 <argp_failure@@Base+0x2640>
   18a98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18a9c:	cmp	r0, #0
   18aa0:	bne	1915c <argp_failure@@Base+0x26cc>
   18aa4:	str	r6, [r3, #8]
   18aa8:	ldrb	r6, [r7]
   18aac:	cmp	r6, #58	; 0x3a
   18ab0:	movwne	r6, #63	; 0x3f
   18ab4:	b	18fd8 <argp_failure@@Base+0x2548>
   18ab8:	cmp	r9, r8
   18abc:	str	r7, [sp, #20]
   18ac0:	str	r6, [sp, #24]
   18ac4:	str	r5, [sp, #36]	; 0x24
   18ac8:	str	r4, [sp, #28]
   18acc:	str	r3, [fp, #-40]	; 0xffffffd8
   18ad0:	ble	18c84 <argp_failure@@Base+0x21f4>
   18ad4:	ldr	r0, [sp, #36]	; 0x24
   18ad8:	cmp	r0, r8
   18adc:	bge	18c84 <argp_failure@@Base+0x21f4>
   18ae0:	add	r0, sl, r8, lsl #2
   18ae4:	mvn	r1, r1
   18ae8:	ldr	r2, [sp, #36]	; 0x24
   18aec:	mov	r3, r9
   18af0:	str	r0, [fp, #-32]	; 0xffffffe0
   18af4:	mvn	r0, r9
   18af8:	cmp	r0, r1
   18afc:	movgt	r1, r0
   18b00:	add	r0, r1, #1
   18b04:	str	r1, [fp, #-36]	; 0xffffffdc
   18b08:	str	r0, [sp, #44]	; 0x2c
   18b0c:	add	r0, sl, #4
   18b10:	str	r0, [sp, #40]	; 0x28
   18b14:	sub	ip, r8, r2
   18b18:	sub	r7, r3, r8
   18b1c:	cmp	r7, ip
   18b20:	ble	18bd0 <argp_failure@@Base+0x2140>
   18b24:	sub	r4, r3, ip
   18b28:	cmp	ip, #1
   18b2c:	blt	18bc8 <argp_failure@@Base+0x2138>
   18b30:	mov	r7, #0
   18b34:	cmp	ip, #4
   18b38:	bcc	18b90 <argp_failure@@Base+0x2100>
   18b3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18b40:	ldr	r1, [sp, #40]	; 0x28
   18b44:	add	lr, sl, r2, lsl #2
   18b48:	add	r0, r0, r3
   18b4c:	add	r0, r0, r2
   18b50:	add	r0, r1, r0, lsl #2
   18b54:	add	r1, sl, r3, lsl #2
   18b58:	cmp	lr, r1
   18b5c:	ldrcc	r1, [fp, #-32]	; 0xffffffe0
   18b60:	cmpcc	r0, r1
   18b64:	bcc	18b90 <argp_failure@@Base+0x2100>
   18b68:	bic	r7, ip, #3
   18b6c:	mov	r1, r7
   18b70:	vld1.32	{d16-d17}, [r0]
   18b74:	vld1.32	{d18-d19}, [lr]
   18b78:	subs	r1, r1, #4
   18b7c:	vst1.32	{d16-d17}, [lr]!
   18b80:	vst1.32	{d18-d19}, [r0]!
   18b84:	bne	18b70 <argp_failure@@Base+0x20e0>
   18b88:	cmp	ip, r7
   18b8c:	beq	18bc8 <argp_failure@@Base+0x2138>
   18b90:	add	r0, sl, r3, lsl #2
   18b94:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18b98:	add	r1, r7, r2
   18b9c:	add	r1, sl, r1, lsl #2
   18ba0:	add	r3, r3, r7
   18ba4:	add	r3, r3, r2
   18ba8:	add	r7, r0, r3, lsl #2
   18bac:	ldr	r5, [r1]
   18bb0:	add	r3, r3, #1
   18bb4:	ldr	r6, [r7, #4]
   18bb8:	cmn	r3, #1
   18bbc:	str	r6, [r1], #4
   18bc0:	str	r5, [r7, #4]
   18bc4:	bne	18ba8 <argp_failure@@Base+0x2118>
   18bc8:	mov	r3, r4
   18bcc:	b	18c78 <argp_failure@@Base+0x21e8>
   18bd0:	cmp	r7, #1
   18bd4:	blt	18c74 <argp_failure@@Base+0x21e4>
   18bd8:	mov	r4, #0
   18bdc:	cmp	r7, #3
   18be0:	bls	18c40 <argp_failure@@Base+0x21b0>
   18be4:	add	r1, sl, r3, lsl #2
   18be8:	add	r0, sl, r2, lsl #2
   18bec:	cmp	r0, r1
   18bf0:	bcs	18c14 <argp_failure@@Base+0x2184>
   18bf4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18bf8:	ldr	r6, [sp, #40]	; 0x28
   18bfc:	add	r1, r1, r3
   18c00:	add	r1, r1, r2
   18c04:	add	r1, r6, r1, lsl #2
   18c08:	ldr	r6, [fp, #-32]	; 0xffffffe0
   18c0c:	cmp	r6, r1
   18c10:	bcc	18c40 <argp_failure@@Base+0x21b0>
   18c14:	ldr	r6, [fp, #-32]	; 0xffffffe0
   18c18:	bic	r4, r7, #3
   18c1c:	mov	r1, r4
   18c20:	vld1.32	{d16-d17}, [r6]
   18c24:	vld1.32	{d18-d19}, [r0]
   18c28:	subs	r1, r1, #4
   18c2c:	vst1.32	{d16-d17}, [r0]!
   18c30:	vst1.32	{d18-d19}, [r6]!
   18c34:	bne	18c20 <argp_failure@@Base+0x2190>
   18c38:	cmp	r7, r4
   18c3c:	beq	18c74 <argp_failure@@Base+0x21e4>
   18c40:	ldr	r1, [sp, #44]	; 0x2c
   18c44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18c48:	add	r6, r4, r2
   18c4c:	add	r1, r1, r3
   18c50:	add	r0, r0, r4, lsl #2
   18c54:	sub	r1, r1, r4
   18c58:	add	r4, sl, r6, lsl #2
   18c5c:	ldr	r6, [r4]
   18c60:	ldr	r5, [r0]
   18c64:	subs	r1, r1, #1
   18c68:	str	r5, [r4], #4
   18c6c:	str	r6, [r0], #4
   18c70:	bne	18c5c <argp_failure@@Base+0x21cc>
   18c74:	add	r2, r7, r2
   18c78:	cmp	r3, r8
   18c7c:	cmpgt	r8, r2
   18c80:	bgt	18b14 <argp_failure@@Base+0x2084>
   18c84:	ldr	r0, [sp, #36]	; 0x24
   18c88:	ldr	r4, [sp, #28]
   18c8c:	ldr	r6, [sp, #24]
   18c90:	ldr	r2, [fp, #16]
   18c94:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18c98:	ldr	r7, [sp, #20]
   18c9c:	add	r0, r0, r9
   18ca0:	mov	r1, r4
   18ca4:	sub	r0, r0, r8
   18ca8:	str	r0, [r6]
   18cac:	mov	r5, r0
   18cb0:	str	r9, [r1]
   18cb4:	mov	r8, r9
   18cb8:	cmp	r9, r3
   18cbc:	bge	18cec <argp_failure@@Base+0x225c>
   18cc0:	ldr	r0, [sl, r8, lsl #2]
   18cc4:	ldrb	r1, [r0]
   18cc8:	cmp	r1, #45	; 0x2d
   18ccc:	bne	18cdc <argp_failure@@Base+0x224c>
   18cd0:	ldrb	r0, [r0, #1]
   18cd4:	cmp	r0, #0
   18cd8:	bne	18cec <argp_failure@@Base+0x225c>
   18cdc:	add	r8, r8, #1
   18ce0:	cmp	r8, r3
   18ce4:	str	r8, [r2]
   18ce8:	blt	18cc0 <argp_failure@@Base+0x2230>
   18cec:	mov	r9, r8
   18cf0:	str	r8, [r4]
   18cf4:	cmp	r9, r3
   18cf8:	beq	18fcc <argp_failure@@Base+0x253c>
   18cfc:	ldr	r0, [sl, r9, lsl #2]
   18d00:	movw	r1, #48236	; 0xbc6c
   18d04:	str	r3, [fp, #-40]	; 0xffffffd8
   18d08:	movt	r1, #1
   18d0c:	bl	1130c <strcmp@plt>
   18d10:	cmp	r0, #0
   18d14:	beq	18da4 <argp_failure@@Base+0x2314>
   18d18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18d1c:	ldr	r2, [fp, #16]
   18d20:	cmp	r9, r3
   18d24:	beq	18fcc <argp_failure@@Base+0x253c>
   18d28:	ldr	r0, [sl, r9, lsl #2]
   18d2c:	mvn	r6, #0
   18d30:	ldrb	r1, [r0]
   18d34:	cmp	r1, #45	; 0x2d
   18d38:	bne	18dfc <argp_failure@@Base+0x236c>
   18d3c:	mov	r4, r0
   18d40:	ldrb	r1, [r4, #1]!
   18d44:	cmp	r1, #0
   18d48:	beq	18dfc <argp_failure@@Base+0x236c>
   18d4c:	ldr	r6, [sp, #48]	; 0x30
   18d50:	cmp	r6, #0
   18d54:	beq	19004 <argp_failure@@Base+0x2574>
   18d58:	ldr	r5, [fp, #12]
   18d5c:	ldr	r7, [sp, #32]
   18d60:	cmp	r1, #45	; 0x2d
   18d64:	bne	1900c <argp_failure@@Base+0x257c>
   18d68:	add	r0, r0, #2
   18d6c:	mov	r1, sl
   18d70:	str	r0, [r2, #20]
   18d74:	ldr	r0, [fp, #8]
   18d78:	stm	sp, {r0, r5}
   18d7c:	str	r2, [sp, #8]
   18d80:	mov	r2, r7
   18d84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18d88:	str	r0, [sp, #12]
   18d8c:	movw	r0, #48236	; 0xbc6c
   18d90:	movt	r0, #1
   18d94:	str	r0, [sp, #16]
   18d98:	mov	r0, r3
   18d9c:	mov	r3, r6
   18da0:	b	19114 <argp_failure@@Base+0x2684>
   18da4:	ldr	r2, [fp, #16]
   18da8:	add	r3, r9, #1
   18dac:	cmp	r5, r8
   18db0:	cmpne	r8, r3
   18db4:	str	r3, [r2]
   18db8:	bne	18e14 <argp_failure@@Base+0x2384>
   18dbc:	cmp	r5, r8
   18dc0:	ldr	r8, [fp, #-40]	; 0xffffffd8
   18dc4:	mov	r1, r6
   18dc8:	mov	r0, r3
   18dcc:	beq	18fbc <argp_failure@@Base+0x252c>
   18dd0:	b	18fc4 <argp_failure@@Base+0x2534>
   18dd4:	cmp	r1, #58	; 0x3a
   18dd8:	bne	18fd8 <argp_failure@@Base+0x2548>
   18ddc:	ldrb	r0, [r0, #2]
   18de0:	ldrb	r1, [r8]
   18de4:	cmp	r0, #58	; 0x3a
   18de8:	bne	18fec <argp_failure@@Base+0x255c>
   18dec:	cmp	r1, #0
   18df0:	bne	18ff4 <argp_failure@@Base+0x2564>
   18df4:	mov	r0, #0
   18df8:	b	1912c <argp_failure@@Base+0x269c>
   18dfc:	cmp	r7, #0
   18e00:	strne	r0, [r2, #12]
   18e04:	addne	r0, r9, #1
   18e08:	movne	r6, #1
   18e0c:	strne	r0, [r2]
   18e10:	b	18fd8 <argp_failure@@Base+0x2548>
   18e14:	cmp	r9, r8
   18e18:	str	r3, [fp, #-36]	; 0xffffffdc
   18e1c:	str	r6, [sp, #24]
   18e20:	str	r5, [sp, #36]	; 0x24
   18e24:	str	r4, [sp, #28]
   18e28:	blt	18f98 <argp_failure@@Base+0x2508>
   18e2c:	ldr	r0, [sp, #36]	; 0x24
   18e30:	cmp	r0, r8
   18e34:	bge	18f98 <argp_failure@@Base+0x2508>
   18e38:	sub	r0, sl, r8, lsl #2
   18e3c:	ldr	r7, [sp, #36]	; 0x24
   18e40:	add	r9, sl, r8, lsl #2
   18e44:	str	r0, [fp, #-44]	; 0xffffffd4
   18e48:	rsb	r0, r8, #0
   18e4c:	str	r0, [fp, #-32]	; 0xffffffe0
   18e50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18e54:	sub	r4, r8, r7
   18e58:	sub	r3, r0, r8
   18e5c:	cmp	r3, r4
   18e60:	ble	18ef4 <argp_failure@@Base+0x2464>
   18e64:	sub	r3, r0, r4
   18e68:	cmp	r4, #1
   18e6c:	blt	18eec <argp_failure@@Base+0x245c>
   18e70:	mov	r1, #0
   18e74:	cmp	r4, #4
   18e78:	bcc	18ebc <argp_failure@@Base+0x242c>
   18e7c:	add	r2, sl, r0, lsl #2
   18e80:	add	lr, sl, r7, lsl #2
   18e84:	add	ip, sl, r3, lsl #2
   18e88:	cmp	lr, r2
   18e8c:	cmpcc	ip, r9
   18e90:	bcc	18ebc <argp_failure@@Base+0x242c>
   18e94:	bic	r1, r4, #3
   18e98:	mov	r2, r1
   18e9c:	vld1.32	{d16-d17}, [ip]
   18ea0:	vld1.32	{d18-d19}, [lr]
   18ea4:	subs	r2, r2, #4
   18ea8:	vst1.32	{d16-d17}, [lr]!
   18eac:	vst1.32	{d18-d19}, [ip]!
   18eb0:	bne	18e9c <argp_failure@@Base+0x240c>
   18eb4:	cmp	r4, r1
   18eb8:	beq	18eec <argp_failure@@Base+0x245c>
   18ebc:	add	r0, r7, r0
   18ec0:	sub	r2, r8, r1
   18ec4:	add	r1, r1, r7
   18ec8:	add	r1, sl, r1, lsl #2
   18ecc:	add	r0, sl, r0, lsl #2
   18ed0:	ldr	r6, [r0, -r2, lsl #2]
   18ed4:	ldr	r5, [r1]
   18ed8:	str	r6, [r1], #4
   18edc:	str	r5, [r0, -r2, lsl #2]
   18ee0:	sub	r2, r2, #1
   18ee4:	cmp	r7, r2
   18ee8:	bne	18ed0 <argp_failure@@Base+0x2440>
   18eec:	mov	r0, r3
   18ef0:	b	18f8c <argp_failure@@Base+0x24fc>
   18ef4:	cmp	r3, #1
   18ef8:	blt	18f88 <argp_failure@@Base+0x24f8>
   18efc:	mov	r4, #0
   18f00:	cmp	r3, #3
   18f04:	bls	18f54 <argp_failure@@Base+0x24c4>
   18f08:	add	r2, sl, r0, lsl #2
   18f0c:	add	r1, sl, r7, lsl #2
   18f10:	cmp	r1, r2
   18f14:	ldrcc	r6, [fp, #-44]	; 0xffffffd4
   18f18:	addcc	r2, r7, r0
   18f1c:	addcc	r2, r6, r2, lsl #2
   18f20:	cmpcc	r9, r2
   18f24:	bcc	18f54 <argp_failure@@Base+0x24c4>
   18f28:	bic	r4, r3, #3
   18f2c:	mov	r6, r9
   18f30:	mov	r2, r4
   18f34:	vld1.32	{d16-d17}, [r6]
   18f38:	vld1.32	{d18-d19}, [r1]
   18f3c:	subs	r2, r2, #4
   18f40:	vst1.32	{d16-d17}, [r1]!
   18f44:	vst1.32	{d18-d19}, [r6]!
   18f48:	bne	18f34 <argp_failure@@Base+0x24a4>
   18f4c:	cmp	r3, r4
   18f50:	beq	18f88 <argp_failure@@Base+0x24f8>
   18f54:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18f58:	add	r2, r4, r7
   18f5c:	add	r6, r8, r4
   18f60:	add	r2, sl, r2, lsl #2
   18f64:	add	r1, r1, r0
   18f68:	sub	r1, r1, r4
   18f6c:	add	r4, sl, r6, lsl #2
   18f70:	ldr	r6, [r2]
   18f74:	ldr	r5, [r4]
   18f78:	subs	r1, r1, #1
   18f7c:	str	r5, [r2], #4
   18f80:	str	r6, [r4], #4
   18f84:	bne	18f70 <argp_failure@@Base+0x24e0>
   18f88:	add	r7, r3, r7
   18f8c:	cmp	r0, r8
   18f90:	cmpgt	r8, r7
   18f94:	bgt	18e54 <argp_failure@@Base+0x23c4>
   18f98:	ldr	r0, [sp, #36]	; 0x24
   18f9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18fa0:	ldr	r1, [sp, #24]
   18fa4:	ldr	r2, [fp, #16]
   18fa8:	add	r0, r0, r3
   18fac:	sub	r0, r0, r8
   18fb0:	ldr	r8, [fp, #-40]	; 0xffffffd8
   18fb4:	str	r0, [r1]
   18fb8:	ldr	r1, [sp, #28]
   18fbc:	mov	r5, r0
   18fc0:	str	r3, [r1]
   18fc4:	str	r8, [r2]
   18fc8:	str	r8, [r2, #32]
   18fcc:	cmp	r5, r8
   18fd0:	mvn	r6, #0
   18fd4:	strne	r5, [r2]
   18fd8:	mov	r0, r6
   18fdc:	sub	sp, fp, #28
   18fe0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18fe4:	mov	r0, #1
   18fe8:	b	18970 <argp_failure@@Base+0x1ee0>
   18fec:	cmp	r1, #0
   18ff0:	beq	19078 <argp_failure@@Base+0x25e8>
   18ff4:	add	r0, r9, #1
   18ff8:	str	r8, [r3, #12]
   18ffc:	str	r0, [r3]
   19000:	b	19130 <argp_failure@@Base+0x26a0>
   19004:	ldr	r7, [sp, #32]
   19008:	b	19154 <argp_failure@@Base+0x26c4>
   1900c:	cmp	r5, #0
   19010:	beq	19154 <argp_failure@@Base+0x26c4>
   19014:	ldrb	r0, [r0, #2]
   19018:	cmp	r0, #0
   1901c:	beq	1913c <argp_failure@@Base+0x26ac>
   19020:	ldr	r1, [fp, #8]
   19024:	str	r4, [r2, #20]
   19028:	movw	r0, #48237	; 0xbc6d
   1902c:	movt	r0, #1
   19030:	stm	sp, {r1, r5}
   19034:	str	r2, [sp, #8]
   19038:	str	r0, [sp, #16]
   1903c:	mov	r0, r3
   19040:	mov	r2, r7
   19044:	mov	r3, r6
   19048:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1904c:	str	r1, [sp, #12]
   19050:	mov	r1, sl
   19054:	bl	191b4 <argp_failure@@Base+0x2724>
   19058:	ldr	r2, [fp, #16]
   1905c:	mov	r6, r0
   19060:	cmn	r0, #1
   19064:	bne	18fd8 <argp_failure@@Base+0x2548>
   19068:	ldr	r9, [r2]
   1906c:	ldr	r0, [sl, r9, lsl #2]
   19070:	add	r4, r0, #1
   19074:	b	19154 <argp_failure@@Base+0x26c4>
   19078:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1907c:	cmp	r9, r0
   19080:	bne	19120 <argp_failure@@Base+0x2690>
   19084:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19088:	cmp	r0, #0
   1908c:	bne	19188 <argp_failure@@Base+0x26f8>
   19090:	str	r6, [r3, #8]
   19094:	ldrb	r6, [r7]
   19098:	cmp	r6, #58	; 0x3a
   1909c:	movwne	r6, #63	; 0x3f
   190a0:	b	19130 <argp_failure@@Base+0x26a0>
   190a4:	movw	r0, #2232	; 0x8b8
   190a8:	ldr	r2, [sl]
   190ac:	movw	r1, #50144	; 0xc3e0
   190b0:	mov	r4, r3
   190b4:	mov	r3, r6
   190b8:	movt	r0, #3
   190bc:	movt	r1, #1
   190c0:	ldr	r0, [r0]
   190c4:	bl	1148c <fprintf@plt>
   190c8:	mov	r3, r4
   190cc:	b	18a50 <argp_failure@@Base+0x1fc0>
   190d0:	ldr	r8, [sl, r9, lsl #2]
   190d4:	ldr	r2, [fp, #8]
   190d8:	mov	r0, #0
   190dc:	str	r8, [r3, #12]
   190e0:	movw	r1, #50213	; 0xc425
   190e4:	str	r0, [r3, #12]
   190e8:	str	r8, [r3, #20]
   190ec:	movt	r1, #1
   190f0:	str	r2, [sp]
   190f4:	stmib	sp, {r0, r3}
   190f8:	str	r1, [sp, #16]
   190fc:	mov	r1, sl
   19100:	mov	r2, r7
   19104:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19108:	ldr	r3, [sp, #48]	; 0x30
   1910c:	str	r0, [sp, #12]
   19110:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19114:	bl	191b4 <argp_failure@@Base+0x2724>
   19118:	sub	sp, fp, #28
   1911c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19120:	add	r0, r9, #1
   19124:	str	r0, [r3]
   19128:	ldr	r0, [sl, r9, lsl #2]
   1912c:	str	r0, [r3, #12]
   19130:	mov	r0, #0
   19134:	str	r0, [r3, #20]
   19138:	b	18fd8 <argp_failure@@Base+0x2548>
   1913c:	mov	r0, r7
   19140:	bl	11480 <strchr@plt>
   19144:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19148:	ldr	r2, [fp, #16]
   1914c:	cmp	r0, #0
   19150:	beq	19020 <argp_failure@@Base+0x2590>
   19154:	str	r4, [r2, #20]
   19158:	b	18a04 <argp_failure@@Base+0x1f74>
   1915c:	movw	r0, #2232	; 0x8b8
   19160:	ldr	r2, [sl]
   19164:	movw	r1, #50172	; 0xc3fc
   19168:	mov	r4, r3
   1916c:	mov	r3, r6
   19170:	movt	r0, #3
   19174:	movt	r1, #1
   19178:	ldr	r0, [r0]
   1917c:	bl	1148c <fprintf@plt>
   19180:	mov	r3, r4
   19184:	b	18aa4 <argp_failure@@Base+0x2014>
   19188:	movw	r0, #2232	; 0x8b8
   1918c:	ldr	r2, [sl]
   19190:	movw	r1, #50172	; 0xc3fc
   19194:	mov	r4, r3
   19198:	mov	r3, r6
   1919c:	movt	r0, #3
   191a0:	movt	r1, #1
   191a4:	ldr	r0, [r0]
   191a8:	bl	1148c <fprintf@plt>
   191ac:	mov	r3, r4
   191b0:	b	19090 <argp_failure@@Base+0x2600>
   191b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   191b8:	add	fp, sp, #28
   191bc:	sub	sp, sp, #44	; 0x2c
   191c0:	str	r0, [sp, #12]
   191c4:	ldr	r0, [fp, #16]
   191c8:	ldr	r5, [fp, #8]
   191cc:	str	r2, [sp, #16]
   191d0:	str	r1, [sp, #20]
   191d4:	ldr	r9, [r0, #20]
   191d8:	mov	r6, r9
   191dc:	b	191e4 <argp_failure@@Base+0x2754>
   191e0:	add	r6, r6, #1
   191e4:	ldrb	r0, [r6]
   191e8:	cmp	r0, #0
   191ec:	cmpne	r0, #61	; 0x3d
   191f0:	bne	191e0 <argp_failure@@Base+0x2750>
   191f4:	ldr	sl, [r3]
   191f8:	mvn	ip, #0
   191fc:	str	r3, [fp, #-32]	; 0xffffffe0
   19200:	cmp	sl, #0
   19204:	beq	19408 <argp_failure@@Base+0x2978>
   19208:	sub	r4, r6, r9
   1920c:	mov	r8, #0
   19210:	mov	r5, sl
   19214:	mov	r7, r3
   19218:	mov	r0, r5
   1921c:	mov	r1, r9
   19220:	mov	r2, r4
   19224:	bl	11594 <strncmp@plt>
   19228:	cmp	r0, #0
   1922c:	bne	19240 <argp_failure@@Base+0x27b0>
   19230:	mov	r0, r5
   19234:	bl	11474 <strlen@plt>
   19238:	cmp	r4, r0
   1923c:	beq	19434 <argp_failure@@Base+0x29a4>
   19240:	ldr	r5, [r7, #16]!
   19244:	add	r8, r8, #1
   19248:	cmp	r5, #0
   1924c:	bne	19218 <argp_failure@@Base+0x2788>
   19250:	cmp	sl, #0
   19254:	beq	19440 <argp_failure@@Base+0x29b0>
   19258:	mvn	r0, #0
   1925c:	str	r4, [sp, #36]	; 0x24
   19260:	mov	r4, #0
   19264:	mov	r5, #0
   19268:	mov	r7, #0
   1926c:	str	r0, [sp, #24]
   19270:	mov	r0, #0
   19274:	str	r0, [sp, #32]
   19278:	mov	r0, #0
   1927c:	str	r0, [sp, #8]
   19280:	mov	r0, #0
   19284:	str	r0, [sp, #28]
   19288:	b	192a0 <argp_failure@@Base+0x2810>
   1928c:	ldr	r0, [fp, #16]
   19290:	add	r1, r1, #16
   19294:	add	r5, r5, #1
   19298:	mov	r4, r1
   1929c:	ldr	r9, [r0, #20]
   192a0:	ldr	r2, [sp, #36]	; 0x24
   192a4:	mov	r0, sl
   192a8:	mov	r1, r9
   192ac:	bl	11594 <strncmp@plt>
   192b0:	cmp	r0, #0
   192b4:	beq	192d4 <argp_failure@@Base+0x2844>
   192b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   192bc:	mov	r1, r4
   192c0:	add	r0, r3, r5, lsl #4
   192c4:	ldr	sl, [r0, #16]
   192c8:	cmp	sl, #0
   192cc:	bne	1928c <argp_failure@@Base+0x27fc>
   192d0:	b	19420 <argp_failure@@Base+0x2990>
   192d4:	cmp	r7, #0
   192d8:	beq	1938c <argp_failure@@Base+0x28fc>
   192dc:	ldr	r0, [fp, #12]
   192e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   192e4:	cmp	r0, #0
   192e8:	bne	19310 <argp_failure@@Base+0x2880>
   192ec:	add	r0, r3, r5, lsl #4
   192f0:	ldr	r2, [r7, #4]
   192f4:	ldr	r1, [r0, #4]
   192f8:	cmp	r2, r1
   192fc:	bne	19310 <argp_failure@@Base+0x2880>
   19300:	ldr	r1, [r0, #8]
   19304:	ldr	r2, [r7, #8]
   19308:	cmp	r2, r1
   1930c:	beq	193c4 <argp_failure@@Base+0x2934>
   19310:	ldr	r0, [sp, #32]
   19314:	mov	r1, r4
   19318:	cmp	r0, #0
   1931c:	bne	192c0 <argp_failure@@Base+0x2830>
   19320:	ldr	r0, [fp, #20]
   19324:	cmp	r0, #0
   19328:	beq	193a0 <argp_failure@@Base+0x2910>
   1932c:	ldr	r9, [sp, #28]
   19330:	mov	r0, #0
   19334:	str	r0, [sp, #32]
   19338:	cmp	r9, #0
   1933c:	bne	193b4 <argp_failure@@Base+0x2924>
   19340:	mov	r0, r8
   19344:	bl	15314 <_obstack_memory_used@@Base+0xcac>
   19348:	cmp	r0, #0
   1934c:	beq	193f4 <argp_failure@@Base+0x2964>
   19350:	mov	r9, r0
   19354:	mov	r0, #0
   19358:	mov	r1, #0
   1935c:	mov	r2, r8
   19360:	str	r0, [sp, #32]
   19364:	mov	r0, r9
   19368:	bl	114bc <memset@plt>
   1936c:	ldr	r0, [sp, #24]
   19370:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19374:	mov	r1, #1
   19378:	mov	r2, #1
   1937c:	str	r1, [sp, #8]
   19380:	mov	r1, r4
   19384:	strb	r2, [r9, r0]
   19388:	b	193b4 <argp_failure@@Base+0x2924>
   1938c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19390:	mov	r1, r4
   19394:	str	r5, [sp, #24]
   19398:	add	r7, r3, r4
   1939c:	b	192c0 <argp_failure@@Base+0x2830>
   193a0:	ldr	r9, [sp, #28]
   193a4:	mov	r0, #1
   193a8:	str	r0, [sp, #32]
   193ac:	cmp	r9, #0
   193b0:	beq	193e8 <argp_failure@@Base+0x2958>
   193b4:	mov	r0, #1
   193b8:	str	r9, [sp, #28]
   193bc:	strb	r0, [r9, r5]
   193c0:	b	192c0 <argp_failure@@Base+0x2830>
   193c4:	ldr	r1, [sp, #32]
   193c8:	cmp	r1, #0
   193cc:	bne	192bc <argp_failure@@Base+0x282c>
   193d0:	ldr	r0, [r0, #12]
   193d4:	ldr	r1, [r7, #12]
   193d8:	cmp	r1, r0
   193dc:	mov	r1, r4
   193e0:	bne	19320 <argp_failure@@Base+0x2890>
   193e4:	b	192c0 <argp_failure@@Base+0x2830>
   193e8:	mov	r0, #0
   193ec:	str	r0, [sp, #28]
   193f0:	b	192c0 <argp_failure@@Base+0x2830>
   193f4:	mov	r0, #1
   193f8:	str	r0, [sp, #32]
   193fc:	mov	r0, #0
   19400:	str	r0, [sp, #28]
   19404:	b	192b8 <argp_failure@@Base+0x2828>
   19408:	mov	r0, #0
   1940c:	mov	r8, #0
   19410:	mov	r7, #0
   19414:	mov	sl, #0
   19418:	mov	r4, #0
   1941c:	b	19458 <argp_failure@@Base+0x29c8>
   19420:	ldr	r5, [fp, #8]
   19424:	ldr	ip, [sp, #24]
   19428:	ldr	sl, [sp, #28]
   1942c:	ldr	r4, [sp, #8]
   19430:	b	1945c <argp_failure@@Base+0x29cc>
   19434:	ldr	r5, [fp, #8]
   19438:	mov	ip, r8
   1943c:	b	194c4 <argp_failure@@Base+0x2a34>
   19440:	ldr	r5, [fp, #8]
   19444:	mov	r0, #0
   19448:	mov	r7, #0
   1944c:	mov	sl, #0
   19450:	mov	r4, #0
   19454:	mvn	ip, #0
   19458:	str	r0, [sp, #32]
   1945c:	cmp	sl, #0
   19460:	ldreq	r0, [sp, #32]
   19464:	cmpeq	r0, #0
   19468:	beq	194bc <argp_failure@@Base+0x2a2c>
   1946c:	ldr	r0, [fp, #20]
   19470:	cmp	r0, #0
   19474:	bne	1962c <argp_failure@@Base+0x2b9c>
   19478:	cmp	r4, #0
   1947c:	beq	19488 <argp_failure@@Base+0x29f8>
   19480:	mov	r0, sl
   19484:	bl	14200 <argp_parse@@Base+0x12d0>
   19488:	ldr	r0, [fp, #16]
   1948c:	ldr	r4, [r0, #20]
   19490:	mov	r5, r0
   19494:	mov	r0, r4
   19498:	bl	11474 <strlen@plt>
   1949c:	mov	r1, #0
   194a0:	add	r0, r4, r0
   194a4:	str	r1, [r5, #8]
   194a8:	str	r0, [r5, #20]
   194ac:	ldr	r0, [r5]
   194b0:	add	r0, r0, #1
   194b4:	str	r0, [r5]
   194b8:	b	195f0 <argp_failure@@Base+0x2b60>
   194bc:	cmp	r7, #0
   194c0:	beq	19560 <argp_failure@@Base+0x2ad0>
   194c4:	ldr	r1, [fp, #16]
   194c8:	mov	r0, #0
   194cc:	str	r0, [r1, #20]
   194d0:	mov	r2, r1
   194d4:	ldr	r1, [r1]
   194d8:	add	r0, r1, #1
   194dc:	str	r0, [r2]
   194e0:	ldrb	r3, [r6]
   194e4:	ldr	r2, [r7, #4]
   194e8:	cmp	r3, #0
   194ec:	beq	19508 <argp_failure@@Base+0x2a78>
   194f0:	cmp	r2, #0
   194f4:	beq	195d8 <argp_failure@@Base+0x2b48>
   194f8:	ldr	r1, [fp, #16]
   194fc:	add	r0, r6, #1
   19500:	str	r0, [r1, #12]
   19504:	b	19534 <argp_failure@@Base+0x2aa4>
   19508:	cmp	r2, #1
   1950c:	bne	19534 <argp_failure@@Base+0x2aa4>
   19510:	ldr	r2, [sp, #12]
   19514:	cmp	r0, r2
   19518:	bge	195fc <argp_failure@@Base+0x2b6c>
   1951c:	ldr	r2, [fp, #16]
   19520:	add	r1, r1, #2
   19524:	str	r1, [r2]
   19528:	ldr	r1, [sp, #20]
   1952c:	ldr	r0, [r1, r0, lsl #2]
   19530:	str	r0, [r2, #12]
   19534:	cmp	r5, #0
   19538:	strne	ip, [r5]
   1953c:	ldr	r1, [r7, #8]
   19540:	ldr	r0, [r7, #12]
   19544:	cmp	r1, #0
   19548:	strne	r0, [r1]
   1954c:	movne	r0, #0
   19550:	subne	sp, fp, #28
   19554:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19558:	sub	sp, fp, #28
   1955c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19560:	ldr	r0, [fp, #12]
   19564:	cmp	r0, #0
   19568:	beq	195ac <argp_failure@@Base+0x2b1c>
   1956c:	ldr	r0, [fp, #16]
   19570:	ldr	r1, [sp, #20]
   19574:	ldr	r0, [r0]
   19578:	ldr	r0, [r1, r0, lsl #2]
   1957c:	ldrb	r0, [r0, #1]
   19580:	cmp	r0, #45	; 0x2d
   19584:	beq	195ac <argp_failure@@Base+0x2b1c>
   19588:	ldr	r0, [fp, #16]
   1958c:	ldr	r0, [r0, #20]
   19590:	ldrb	r1, [r0]
   19594:	ldr	r0, [sp, #16]
   19598:	bl	11480 <strchr@plt>
   1959c:	mov	r1, r0
   195a0:	mvn	r0, #0
   195a4:	cmp	r1, #0
   195a8:	bne	19624 <argp_failure@@Base+0x2b94>
   195ac:	ldr	r0, [fp, #20]
   195b0:	cmp	r0, #0
   195b4:	bne	19718 <argp_failure@@Base+0x2c88>
   195b8:	ldr	r1, [fp, #16]
   195bc:	mov	r0, #0
   195c0:	str	r0, [r1, #20]
   195c4:	str	r0, [r1, #8]
   195c8:	ldr	r0, [r1]
   195cc:	add	r0, r0, #1
   195d0:	str	r0, [r1]
   195d4:	b	195f0 <argp_failure@@Base+0x2b60>
   195d8:	ldr	r0, [fp, #20]
   195dc:	cmp	r0, #0
   195e0:	bne	1974c <argp_failure@@Base+0x2cbc>
   195e4:	ldr	r0, [r7, #12]
   195e8:	ldr	r1, [fp, #16]
   195ec:	str	r0, [r1, #8]
   195f0:	mov	r0, #63	; 0x3f
   195f4:	sub	sp, fp, #28
   195f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   195fc:	ldr	r0, [fp, #20]
   19600:	cmp	r0, #0
   19604:	bne	1977c <argp_failure@@Base+0x2cec>
   19608:	ldr	r0, [r7, #12]
   1960c:	ldr	r1, [fp, #16]
   19610:	str	r0, [r1, #8]
   19614:	ldr	r0, [sp, #16]
   19618:	ldrb	r0, [r0]
   1961c:	cmp	r0, #58	; 0x3a
   19620:	movwne	r0, #63	; 0x3f
   19624:	sub	sp, fp, #28
   19628:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1962c:	movw	r5, #2232	; 0x8b8
   19630:	ldr	r1, [sp, #32]
   19634:	movt	r5, #3
   19638:	ldr	r0, [r5]
   1963c:	cmp	r1, #0
   19640:	beq	19674 <argp_failure@@Base+0x2be4>
   19644:	ldr	r1, [sp, #20]
   19648:	ldr	r3, [fp, #24]
   1964c:	ldr	r2, [r1]
   19650:	ldr	r1, [fp, #16]
   19654:	ldr	r1, [r1, #20]
   19658:	str	r1, [sp]
   1965c:	movw	r1, #50233	; 0xc439
   19660:	movt	r1, #1
   19664:	bl	1148c <fprintf@plt>
   19668:	cmp	r4, #0
   1966c:	bne	19480 <argp_failure@@Base+0x29f0>
   19670:	b	19488 <argp_failure@@Base+0x29f8>
   19674:	bl	11528 <flockfile@plt>
   19678:	ldr	r1, [fp, #16]
   1967c:	ldr	r0, [sp, #20]
   19680:	ldr	r9, [fp, #24]
   19684:	ldr	r1, [r1, #20]
   19688:	ldr	r2, [r0]
   1968c:	ldr	r0, [r5]
   19690:	mov	r3, r9
   19694:	str	r1, [sp]
   19698:	movw	r1, #50265	; 0xc459
   1969c:	movt	r1, #1
   196a0:	bl	1148c <fprintf@plt>
   196a4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   196a8:	cmp	r8, #0
   196ac:	beq	196f8 <argp_failure@@Base+0x2c68>
   196b0:	mov	r6, sl
   196b4:	b	196dc <argp_failure@@Base+0x2c4c>
   196b8:	ldr	r3, [r1]
   196bc:	ldr	r0, [r5]
   196c0:	mov	r7, r1
   196c4:	movw	r1, #50312	; 0xc488
   196c8:	mov	r2, r9
   196cc:	movt	r1, #1
   196d0:	bl	1148c <fprintf@plt>
   196d4:	mov	r1, r7
   196d8:	b	196e8 <argp_failure@@Base+0x2c58>
   196dc:	ldrb	r0, [r6]
   196e0:	cmp	r0, #0
   196e4:	bne	196b8 <argp_failure@@Base+0x2c28>
   196e8:	add	r1, r1, #16
   196ec:	add	r6, r6, #1
   196f0:	subs	r8, r8, #1
   196f4:	bne	196dc <argp_failure@@Base+0x2c4c>
   196f8:	ldr	r1, [r5]
   196fc:	mov	r0, #10
   19700:	bl	11504 <fputc@plt>
   19704:	ldr	r0, [r5]
   19708:	bl	113cc <funlockfile@plt>
   1970c:	cmp	r4, #0
   19710:	bne	19480 <argp_failure@@Base+0x29f0>
   19714:	b	19488 <argp_failure@@Base+0x29f8>
   19718:	ldr	r1, [fp, #16]
   1971c:	ldr	r0, [sp, #20]
   19720:	ldr	r3, [fp, #24]
   19724:	ldr	r2, [r0]
   19728:	movw	r0, #2232	; 0x8b8
   1972c:	ldr	r1, [r1, #20]
   19730:	movt	r0, #3
   19734:	ldr	r0, [r0]
   19738:	str	r1, [sp]
   1973c:	movw	r1, #50320	; 0xc490
   19740:	movt	r1, #1
   19744:	bl	1148c <fprintf@plt>
   19748:	b	195b8 <argp_failure@@Base+0x2b28>
   1974c:	ldr	r0, [sp, #20]
   19750:	ldr	r1, [r7]
   19754:	ldr	r3, [fp, #24]
   19758:	ldr	r2, [r0]
   1975c:	movw	r0, #2232	; 0x8b8
   19760:	str	r1, [sp]
   19764:	movw	r1, #50352	; 0xc4b0
   19768:	movt	r0, #3
   1976c:	movt	r1, #1
   19770:	ldr	r0, [r0]
   19774:	bl	1148c <fprintf@plt>
   19778:	b	195e4 <argp_failure@@Base+0x2b54>
   1977c:	ldr	r0, [sp, #20]
   19780:	ldr	r1, [r7]
   19784:	ldr	r3, [fp, #24]
   19788:	ldr	r2, [r0]
   1978c:	movw	r0, #2232	; 0x8b8
   19790:	str	r1, [sp]
   19794:	movw	r1, #50397	; 0xc4dd
   19798:	movt	r0, #3
   1979c:	movt	r1, #1
   197a0:	ldr	r0, [r0]
   197a4:	bl	1148c <fprintf@plt>
   197a8:	b	19608 <argp_failure@@Base+0x2b78>
   197ac:	push	{r4, r5, r6, r7, fp, lr}
   197b0:	add	fp, sp, #16
   197b4:	sub	sp, sp, #16
   197b8:	movw	r7, #2204	; 0x89c
   197bc:	movw	r5, #2208	; 0x8a0
   197c0:	movw	r6, #2280	; 0x8e8
   197c4:	movt	r5, #3
   197c8:	movt	r7, #3
   197cc:	movt	r6, #3
   197d0:	ldr	r4, [r7]
   197d4:	ldr	r5, [r5]
   197d8:	stm	r6, {r4, r5}
   197dc:	ldr	r5, [fp, #16]
   197e0:	str	r6, [sp, #8]
   197e4:	str	r5, [sp, #12]
   197e8:	ldr	r5, [fp, #12]
   197ec:	str	r5, [sp, #4]
   197f0:	ldr	r5, [fp, #8]
   197f4:	str	r5, [sp]
   197f8:	bl	1889c <argp_failure@@Base+0x1e0c>
   197fc:	ldr	r1, [r6]
   19800:	ldr	r3, [r6, #12]
   19804:	ldr	r2, [r6, #8]
   19808:	str	r1, [r7]
   1980c:	movw	r1, #2372	; 0x944
   19810:	movt	r1, #3
   19814:	str	r3, [r1]
   19818:	movw	r1, #2212	; 0x8a4
   1981c:	movt	r1, #3
   19820:	str	r2, [r1]
   19824:	sub	sp, fp, #16
   19828:	pop	{r4, r5, r6, r7, fp, pc}
   1982c:	push	{r4, r5, r6, sl, fp, lr}
   19830:	add	fp, sp, #16
   19834:	sub	sp, sp, #16
   19838:	movw	r6, #2204	; 0x89c
   1983c:	movw	r4, #2208	; 0x8a0
   19840:	movw	r5, #2280	; 0x8e8
   19844:	movt	r4, #3
   19848:	movt	r6, #3
   1984c:	movt	r5, #3
   19850:	ldr	r3, [r6]
   19854:	ldr	r4, [r4]
   19858:	stm	r5, {r3, r4}
   1985c:	mov	r4, #0
   19860:	mov	r3, #1
   19864:	str	r4, [sp]
   19868:	stmib	sp, {r4, r5}
   1986c:	str	r3, [sp, #12]
   19870:	mov	r3, #0
   19874:	bl	1889c <argp_failure@@Base+0x1e0c>
   19878:	ldr	r1, [r5]
   1987c:	ldr	r3, [r5, #12]
   19880:	ldr	r2, [r5, #8]
   19884:	str	r1, [r6]
   19888:	movw	r1, #2372	; 0x944
   1988c:	movt	r1, #3
   19890:	str	r3, [r1]
   19894:	movw	r1, #2212	; 0x8a4
   19898:	movt	r1, #3
   1989c:	str	r2, [r1]
   198a0:	sub	sp, fp, #16
   198a4:	pop	{r4, r5, r6, sl, fp, pc}
   198a8:	cmp	r2, #0
   198ac:	beq	198dc <argp_failure@@Base+0x2e4c>
   198b0:	mvn	r3, #0
   198b4:	udiv	r3, r3, r2
   198b8:	cmp	r3, r1
   198bc:	bcs	198dc <argp_failure@@Base+0x2e4c>
   198c0:	push	{fp, lr}
   198c4:	mov	fp, sp
   198c8:	bl	11498 <__errno_location@plt>
   198cc:	mov	r1, #12
   198d0:	str	r1, [r0]
   198d4:	mov	r0, #0
   198d8:	pop	{fp, pc}
   198dc:	mul	r1, r2, r1
   198e0:	b	15344 <_obstack_memory_used@@Base+0xcdc>
   198e4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   198e8:	add	fp, sp, #24
   198ec:	mov	r5, r0
   198f0:	mov	r0, #36	; 0x24
   198f4:	mov	r8, r3
   198f8:	mov	r6, r2
   198fc:	mov	r7, r1
   19900:	bl	15314 <_obstack_memory_used@@Base+0xcac>
   19904:	mov	r4, r0
   19908:	cmp	r0, #0
   1990c:	beq	19948 <argp_failure@@Base+0x2eb8>
   19910:	mov	r0, #0
   19914:	stm	r4, {r5, r7}
   19918:	str	r6, [r4, #8]
   1991c:	str	r8, [r4, #12]
   19920:	str	r0, [r4, #16]
   19924:	str	r0, [r4, #20]
   19928:	mov	r0, #200	; 0xc8
   1992c:	bl	15314 <_obstack_memory_used@@Base+0xcac>
   19930:	cmp	r0, #0
   19934:	str	r0, [r4, #24]
   19938:	beq	19950 <argp_failure@@Base+0x2ec0>
   1993c:	add	r1, r0, #200	; 0xc8
   19940:	str	r0, [r4, #28]
   19944:	str	r1, [r4, #32]
   19948:	mov	r0, r4
   1994c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   19950:	mov	r0, r4
   19954:	bl	14200 <argp_parse@@Base+0x12d0>
   19958:	mov	r4, #0
   1995c:	mov	r0, r4
   19960:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   19964:	push	{r4, sl, fp, lr}
   19968:	add	fp, sp, #8
   1996c:	mov	r4, r0
   19970:	bl	199a8 <argp_failure@@Base+0x2f18>
   19974:	ldr	r0, [r4, #24]
   19978:	ldr	r1, [r4, #28]
   1997c:	cmp	r1, r0
   19980:	bls	19998 <argp_failure@@Base+0x2f08>
   19984:	ldr	r3, [r4]
   19988:	sub	r2, r1, r0
   1998c:	mov	r1, #1
   19990:	bl	1139c <fwrite_unlocked@plt>
   19994:	ldr	r0, [r4, #24]
   19998:	bl	14200 <argp_parse@@Base+0x12d0>
   1999c:	mov	r0, r4
   199a0:	pop	{r4, sl, fp, lr}
   199a4:	b	14200 <argp_parse@@Base+0x12d0>
   199a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   199ac:	add	fp, sp, #28
   199b0:	sub	sp, sp, #12
   199b4:	mov	r8, r0
   199b8:	ldr	r0, [r0, #16]
   199bc:	ldr	r1, [r8, #24]
   199c0:	ldr	ip, [r8, #28]
   199c4:	add	sl, r1, r0
   199c8:	cmp	sl, ip
   199cc:	bcs	19ef4 <argp_failure@@Base+0x3464>
   199d0:	ldr	r6, [r8, #20]
   199d4:	mov	r3, #32
   199d8:	cmp	r6, #0
   199dc:	beq	199e8 <argp_failure@@Base+0x2f58>
   199e0:	mov	r9, sl
   199e4:	b	19a88 <argp_failure@@Base+0x2ff8>
   199e8:	ldr	r6, [r8, #4]
   199ec:	cmp	r6, #0
   199f0:	beq	19bc8 <argp_failure@@Base+0x3138>
   199f4:	ldr	r1, [r8, #32]
   199f8:	add	r0, ip, r6
   199fc:	mov	r5, r6
   19a00:	cmp	r0, r1
   19a04:	bcs	19a3c <argp_failure@@Base+0x2fac>
   19a08:	add	r9, sl, r6
   19a0c:	sub	r2, ip, sl
   19a10:	mov	r1, sl
   19a14:	mov	r0, r9
   19a18:	bl	11330 <memmove@plt>
   19a1c:	ldr	r0, [r8, #28]
   19a20:	mov	r1, #32
   19a24:	mov	r2, r6
   19a28:	add	r0, r0, r6
   19a2c:	str	r0, [r8, #28]
   19a30:	mov	r0, sl
   19a34:	bl	114bc <memset@plt>
   19a38:	b	19a80 <argp_failure@@Base+0x2ff0>
   19a3c:	ldr	r0, [r8]
   19a40:	ldr	r1, [r0, #20]
   19a44:	ldr	r2, [r0, #24]
   19a48:	cmp	r1, r2
   19a4c:	bcs	19a68 <argp_failure@@Base+0x2fd8>
   19a50:	add	r2, r1, #1
   19a54:	str	r2, [r0, #20]
   19a58:	strb	r3, [r1]
   19a5c:	subs	r5, r5, #1
   19a60:	bne	19a3c <argp_failure@@Base+0x2fac>
   19a64:	b	19a7c <argp_failure@@Base+0x2fec>
   19a68:	mov	r1, #32
   19a6c:	bl	114e0 <__overflow@plt>
   19a70:	mov	r3, #32
   19a74:	subs	r5, r5, #1
   19a78:	bne	19a3c <argp_failure@@Base+0x2fac>
   19a7c:	mov	r9, sl
   19a80:	str	r6, [r8, #20]
   19a84:	ldr	ip, [r8, #28]
   19a88:	sub	r4, ip, r9
   19a8c:	mov	r0, r9
   19a90:	mov	r1, #10
   19a94:	str	ip, [sp, #8]
   19a98:	mov	r2, r4
   19a9c:	bl	114d4 <memchr@plt>
   19aa0:	cmn	r6, #1
   19aa4:	mov	r7, r0
   19aa8:	movle	r6, #0
   19aac:	strle	r6, [r8, #20]
   19ab0:	cmp	r7, #0
   19ab4:	beq	19aec <argp_failure@@Base+0x305c>
   19ab8:	ldr	r5, [r8, #8]
   19abc:	ldr	ip, [sp, #8]
   19ac0:	sub	r0, r7, r9
   19ac4:	mov	r3, #32
   19ac8:	add	r0, r0, r6
   19acc:	cmp	r0, r5
   19ad0:	bge	19b08 <argp_failure@@Base+0x3078>
   19ad4:	mov	r6, #0
   19ad8:	add	sl, r7, #1
   19adc:	str	r6, [r8, #20]
   19ae0:	cmp	sl, ip
   19ae4:	bcc	199d8 <argp_failure@@Base+0x2f48>
   19ae8:	b	19ef4 <argp_failure@@Base+0x3464>
   19aec:	ldr	ip, [sp, #8]
   19af0:	ldr	r5, [r8, #8]
   19af4:	add	r0, r6, r4
   19af8:	mov	r3, #32
   19afc:	cmp	r0, r5
   19b00:	mov	r7, ip
   19b04:	bcc	19ed4 <argp_failure@@Base+0x3444>
   19b08:	ldr	r0, [r8, #12]
   19b0c:	str	r4, [sp, #4]
   19b10:	cmn	r0, #1
   19b14:	ble	19b68 <argp_failure@@Base+0x30d8>
   19b18:	sub	sl, r5, r6
   19b1c:	mov	r4, r0
   19b20:	mov	r1, #0
   19b24:	add	r6, r9, sl
   19b28:	cmp	sl, #0
   19b2c:	blt	19bc0 <argp_failure@@Base+0x3130>
   19b30:	bl	1145c <__ctype_b_loc@plt>
   19b34:	ldr	r1, [r0]
   19b38:	mov	r0, r6
   19b3c:	ldrb	r2, [r0]
   19b40:	ldrb	r2, [r1, r2, lsl #1]
   19b44:	tst	r2, #1
   19b48:	bne	19bd0 <argp_failure@@Base+0x3140>
   19b4c:	sub	r0, r0, #1
   19b50:	cmp	r0, r9
   19b54:	bcs	19b3c <argp_failure@@Base+0x30ac>
   19b58:	ldr	ip, [sp, #8]
   19b5c:	mov	r3, #32
   19b60:	mov	r1, #0
   19b64:	b	19bdc <argp_failure@@Base+0x314c>
   19b68:	sub	sl, r5, #1
   19b6c:	cmp	r7, ip
   19b70:	bcs	19edc <argp_failure@@Base+0x344c>
   19b74:	sub	r0, sl, r6
   19b78:	sub	r2, ip, r7
   19b7c:	mov	r1, r7
   19b80:	add	r0, r9, r0
   19b84:	bl	11330 <memmove@plt>
   19b88:	ldr	r0, [r8, #20]
   19b8c:	ldr	r1, [r8, #28]
   19b90:	mov	r6, #0
   19b94:	mov	r3, #32
   19b98:	str	r6, [r8, #20]
   19b9c:	sub	r0, sl, r0
   19ba0:	add	sl, r9, r5
   19ba4:	add	r0, r9, r0
   19ba8:	sub	r0, r7, r0
   19bac:	add	ip, r1, r0
   19bb0:	str	ip, [r8, #28]
   19bb4:	cmp	sl, ip
   19bb8:	bcc	199d8 <argp_failure@@Base+0x2f48>
   19bbc:	b	19ef4 <argp_failure@@Base+0x3464>
   19bc0:	mov	r0, r6
   19bc4:	b	19bdc <argp_failure@@Base+0x314c>
   19bc8:	mov	r6, #0
   19bcc:	b	199e0 <argp_failure@@Base+0x2f50>
   19bd0:	ldr	ip, [sp, #8]
   19bd4:	mov	r1, #1
   19bd8:	mov	r3, #32
   19bdc:	add	r5, r0, #1
   19be0:	cmp	r5, r9
   19be4:	bls	19c30 <argp_failure@@Base+0x31a0>
   19be8:	cmp	r1, #0
   19bec:	beq	19c98 <argp_failure@@Base+0x3208>
   19bf0:	sub	r1, r0, #1
   19bf4:	mov	r7, r4
   19bf8:	mov	r6, r1
   19bfc:	cmp	r1, r9
   19c00:	bcc	19c20 <argp_failure@@Base+0x3190>
   19c04:	bl	1145c <__ctype_b_loc@plt>
   19c08:	mov	r1, r6
   19c0c:	ldr	r0, [r0]
   19c10:	ldrb	r2, [r1], #-1
   19c14:	ldrb	r0, [r0, r2, lsl #1]
   19c18:	tst	r0, #1
   19c1c:	bne	19bf8 <argp_failure@@Base+0x3168>
   19c20:	ldr	ip, [sp, #8]
   19c24:	add	r6, r6, #1
   19c28:	mov	r3, #32
   19c2c:	b	19ca0 <argp_failure@@Base+0x3210>
   19c30:	cmp	r6, r7
   19c34:	bcs	19c68 <argp_failure@@Base+0x31d8>
   19c38:	add	r0, r9, sl
   19c3c:	add	r1, r0, #1
   19c40:	mov	r6, r1
   19c44:	cmp	r1, r7
   19c48:	bcs	19c68 <argp_failure@@Base+0x31d8>
   19c4c:	bl	1145c <__ctype_b_loc@plt>
   19c50:	mov	r1, r6
   19c54:	ldr	r0, [r0]
   19c58:	ldrb	r2, [r1], #1
   19c5c:	ldrb	r0, [r0, r2, lsl #1]
   19c60:	tst	r0, #1
   19c64:	beq	19c40 <argp_failure@@Base+0x31b0>
   19c68:	cmp	r6, r7
   19c6c:	beq	19d8c <argp_failure@@Base+0x32fc>
   19c70:	bl	1145c <__ctype_b_loc@plt>
   19c74:	ldr	r0, [r0]
   19c78:	mov	r5, r6
   19c7c:	ldrb	r1, [r5, #1]!
   19c80:	ldrb	r1, [r0, r1, lsl #1]
   19c84:	tst	r1, #1
   19c88:	bne	19c7c <argp_failure@@Base+0x31ec>
   19c8c:	ldr	ip, [sp, #8]
   19c90:	mov	r3, #32
   19c94:	b	19c9c <argp_failure@@Base+0x320c>
   19c98:	mov	r6, r5
   19c9c:	mov	r7, r4
   19ca0:	add	r0, ip, #1
   19ca4:	cmp	r5, r0
   19ca8:	beq	19ccc <argp_failure@@Base+0x323c>
   19cac:	add	sl, r6, #1
   19cb0:	cmp	ip, r5
   19cb4:	bls	19db0 <argp_failure@@Base+0x3320>
   19cb8:	sub	r0, r5, sl
   19cbc:	cmp	r0, r7
   19cc0:	bge	19db0 <argp_failure@@Base+0x3320>
   19cc4:	ldr	r0, [r8, #32]
   19cc8:	b	19ce4 <argp_failure@@Base+0x3254>
   19ccc:	cmp	ip, r5
   19cd0:	bls	19dac <argp_failure@@Base+0x331c>
   19cd4:	ldr	r0, [r8, #32]
   19cd8:	sub	r1, r0, r6
   19cdc:	cmp	r1, r7
   19ce0:	bgt	19dac <argp_failure@@Base+0x331c>
   19ce4:	sub	r0, r0, ip
   19ce8:	add	r1, r7, #1
   19cec:	cmp	r0, r1
   19cf0:	ble	19d30 <argp_failure@@Base+0x32a0>
   19cf4:	sub	r4, ip, r5
   19cf8:	add	sl, r6, #1
   19cfc:	mov	r1, r5
   19d00:	add	r0, sl, r7
   19d04:	mov	r2, r4
   19d08:	bl	11330 <memmove@plt>
   19d0c:	ldr	r0, [r8, #12]
   19d10:	mov	r1, #10
   19d14:	mov	r3, #32
   19d18:	strb	r1, [r6]
   19d1c:	add	r5, sl, r0
   19d20:	add	r0, r5, r4
   19d24:	sub	r0, r0, r9
   19d28:	str	r0, [sp, #4]
   19d2c:	b	19db8 <argp_failure@@Base+0x3328>
   19d30:	ldr	r0, [r8, #24]
   19d34:	cmp	r6, r0
   19d38:	bls	19d54 <argp_failure@@Base+0x32c4>
   19d3c:	ldr	r3, [r8]
   19d40:	sub	r2, r6, r0
   19d44:	mov	r1, #1
   19d48:	bl	1139c <fwrite_unlocked@plt>
   19d4c:	ldr	ip, [sp, #8]
   19d50:	mov	r3, #32
   19d54:	ldr	r0, [r8]
   19d58:	ldr	r1, [r0, #20]
   19d5c:	ldr	r2, [r0, #24]
   19d60:	cmp	r1, r2
   19d64:	bcs	19ec0 <argp_failure@@Base+0x3430>
   19d68:	add	r2, r1, #1
   19d6c:	str	r2, [r0, #20]
   19d70:	mov	r0, #10
   19d74:	strb	r0, [r1]
   19d78:	ldr	sl, [r8, #24]
   19d7c:	sub	r0, ip, sl
   19d80:	mov	r9, sl
   19d84:	str	r0, [sp, #4]
   19d88:	b	19db8 <argp_failure@@Base+0x3328>
   19d8c:	ldr	ip, [sp, #8]
   19d90:	mov	r6, #0
   19d94:	add	sl, r7, #1
   19d98:	mov	r3, #32
   19d9c:	str	r6, [r8, #20]
   19da0:	cmp	sl, ip
   19da4:	bcc	199d8 <argp_failure@@Base+0x2f48>
   19da8:	b	19ef4 <argp_failure@@Base+0x3464>
   19dac:	add	sl, r6, #1
   19db0:	mov	r0, #10
   19db4:	strb	r0, [r6]
   19db8:	ldr	r6, [r8, #12]
   19dbc:	sub	r0, r5, sl
   19dc0:	cmp	r0, r6
   19dc4:	bge	19dfc <argp_failure@@Base+0x336c>
   19dc8:	ldr	r0, [sp, #4]
   19dcc:	add	r0, r9, r0
   19dd0:	add	r0, r0, #1
   19dd4:	cmp	r5, r0
   19dd8:	bne	19dec <argp_failure@@Base+0x335c>
   19ddc:	ldr	r0, [r8, #32]
   19de0:	sub	r0, r0, r5
   19de4:	cmp	r0, r6
   19de8:	bge	19dfc <argp_failure@@Base+0x336c>
   19dec:	cmp	r6, #1
   19df0:	blt	19e6c <argp_failure@@Base+0x33dc>
   19df4:	mov	r7, #0
   19df8:	b	19e3c <argp_failure@@Base+0x33ac>
   19dfc:	cmp	r6, #1
   19e00:	blt	19e6c <argp_failure@@Base+0x33dc>
   19e04:	mov	r0, #0
   19e08:	strb	r3, [sl, r0]
   19e0c:	add	r0, r0, #1
   19e10:	ldr	r6, [r8, #12]
   19e14:	cmp	r0, r6
   19e18:	blt	19e08 <argp_failure@@Base+0x3378>
   19e1c:	add	sl, sl, r0
   19e20:	cmp	sl, r5
   19e24:	bcc	19e74 <argp_failure@@Base+0x33e4>
   19e28:	b	19e94 <argp_failure@@Base+0x3404>
   19e2c:	mov	r1, #32
   19e30:	bl	114e0 <__overflow@plt>
   19e34:	mov	r3, #32
   19e38:	b	19e5c <argp_failure@@Base+0x33cc>
   19e3c:	ldr	r0, [r8]
   19e40:	ldr	r1, [r0, #20]
   19e44:	ldr	r2, [r0, #24]
   19e48:	cmp	r1, r2
   19e4c:	bcs	19e2c <argp_failure@@Base+0x339c>
   19e50:	add	r2, r1, #1
   19e54:	str	r2, [r0, #20]
   19e58:	strb	r3, [r1]
   19e5c:	ldr	r6, [r8, #12]
   19e60:	add	r7, r7, #1
   19e64:	cmp	r7, r6
   19e68:	blt	19e3c <argp_failure@@Base+0x33ac>
   19e6c:	cmp	sl, r5
   19e70:	bcs	19e94 <argp_failure@@Base+0x3404>
   19e74:	ldr	r0, [sp, #4]
   19e78:	mov	r1, r5
   19e7c:	add	r0, r9, r0
   19e80:	sub	r2, r0, r5
   19e84:	mov	r0, sl
   19e88:	bl	11330 <memmove@plt>
   19e8c:	ldr	r6, [r8, #12]
   19e90:	mov	r3, #32
   19e94:	ldr	r0, [sp, #4]
   19e98:	cmp	r6, #0
   19e9c:	mvneq	r6, #0
   19ea0:	str	r6, [r8, #20]
   19ea4:	sub	r0, r0, r5
   19ea8:	add	r0, r0, r9
   19eac:	add	ip, sl, r0
   19eb0:	str	ip, [r8, #28]
   19eb4:	cmp	sl, ip
   19eb8:	bcc	199d8 <argp_failure@@Base+0x2f48>
   19ebc:	b	19ef4 <argp_failure@@Base+0x3464>
   19ec0:	mov	r1, #10
   19ec4:	bl	114e0 <__overflow@plt>
   19ec8:	ldr	ip, [sp, #8]
   19ecc:	mov	r3, #32
   19ed0:	b	19d78 <argp_failure@@Base+0x32e8>
   19ed4:	str	r0, [r8, #20]
   19ed8:	b	19ef4 <argp_failure@@Base+0x3464>
   19edc:	ldr	r0, [sp, #4]
   19ee0:	add	r0, r6, r0
   19ee4:	str	r0, [r8, #20]
   19ee8:	sub	r0, sl, r0
   19eec:	add	ip, ip, r0
   19ef0:	str	ip, [r8, #28]
   19ef4:	ldr	r0, [r8, #24]
   19ef8:	sub	r0, ip, r0
   19efc:	str	r0, [r8, #16]
   19f00:	sub	sp, fp, #28
   19f04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19f08:	push	{r4, r5, r6, sl, fp, lr}
   19f0c:	add	fp, sp, #16
   19f10:	mov	r4, r0
   19f14:	mov	r6, r1
   19f18:	ldr	r0, [r0, #28]
   19f1c:	mov	r5, #1
   19f20:	ldr	r1, [r4, #32]
   19f24:	sub	r0, r1, r0
   19f28:	cmp	r0, r6
   19f2c:	bcs	19fec <argp_failure@@Base+0x355c>
   19f30:	mov	r0, r4
   19f34:	bl	199a8 <argp_failure@@Base+0x2f18>
   19f38:	ldr	r0, [r4, #24]
   19f3c:	ldr	r1, [r4, #28]
   19f40:	ldr	r3, [r4]
   19f44:	mov	r5, #1
   19f48:	sub	r2, r1, r0
   19f4c:	mov	r1, #1
   19f50:	bl	1139c <fwrite_unlocked@plt>
   19f54:	mov	r1, r0
   19f58:	ldr	r0, [r4, #24]
   19f5c:	ldr	r2, [r4, #28]
   19f60:	sub	r3, r2, r0
   19f64:	cmp	r1, r3
   19f68:	bne	19fb8 <argp_failure@@Base+0x3528>
   19f6c:	mov	r1, #0
   19f70:	str	r1, [r4, #16]
   19f74:	str	r0, [r4, #28]
   19f78:	ldr	r1, [r4, #32]
   19f7c:	sub	r1, r1, r0
   19f80:	cmp	r1, r6
   19f84:	bcs	19fec <argp_failure@@Base+0x355c>
   19f88:	adds	r6, r1, r6
   19f8c:	bcs	19fdc <argp_failure@@Base+0x354c>
   19f90:	mov	r1, r6
   19f94:	bl	15344 <_obstack_memory_used@@Base+0xcdc>
   19f98:	cmp	r0, #0
   19f9c:	beq	19fdc <argp_failure@@Base+0x354c>
   19fa0:	str	r0, [r4, #24]
   19fa4:	add	r1, r0, r6
   19fa8:	str	r0, [r4, #28]
   19fac:	mov	r0, r5
   19fb0:	str	r1, [r4, #32]
   19fb4:	pop	{r4, r5, r6, sl, fp, pc}
   19fb8:	sub	r2, r2, r1
   19fbc:	str	r2, [r4, #28]
   19fc0:	sub	r2, r2, r0
   19fc4:	ldr	r3, [r4, #16]
   19fc8:	sub	r3, r3, r1
   19fcc:	add	r1, r0, r1
   19fd0:	str	r3, [r4, #16]
   19fd4:	bl	11330 <memmove@plt>
   19fd8:	b	19fe8 <argp_failure@@Base+0x3558>
   19fdc:	bl	11498 <__errno_location@plt>
   19fe0:	mov	r1, #12
   19fe4:	str	r1, [r0]
   19fe8:	mov	r5, #0
   19fec:	mov	r0, r5
   19ff0:	pop	{r4, r5, r6, sl, fp, pc}
   19ff4:	sub	sp, sp, #8
   19ff8:	push	{r4, r5, r6, r7, fp, lr}
   19ffc:	add	fp, sp, #16
   1a000:	sub	sp, sp, #8
   1a004:	mov	r5, r1
   1a008:	mov	r4, r0
   1a00c:	mov	r1, #150	; 0x96
   1a010:	add	r6, fp, #8
   1a014:	str	r3, [fp, #12]
   1a018:	str	r2, [fp, #8]
   1a01c:	mov	r0, r4
   1a020:	bl	19f08 <argp_failure@@Base+0x3478>
   1a024:	cmp	r0, #0
   1a028:	beq	1a068 <argp_failure@@Base+0x35d8>
   1a02c:	str	r6, [sp, #4]
   1a030:	mov	r2, r5
   1a034:	mov	r3, r6
   1a038:	ldr	r0, [r4, #28]
   1a03c:	ldr	r1, [r4, #32]
   1a040:	sub	r7, r1, r0
   1a044:	mov	r1, r7
   1a048:	bl	11534 <vsnprintf@plt>
   1a04c:	add	r1, r0, #1
   1a050:	cmp	r0, r7
   1a054:	bcs	1a01c <argp_failure@@Base+0x358c>
   1a058:	ldr	r1, [r4, #28]
   1a05c:	add	r1, r1, r0
   1a060:	str	r1, [r4, #28]
   1a064:	b	1a06c <argp_failure@@Base+0x35dc>
   1a068:	mvn	r0, #0
   1a06c:	sub	sp, fp, #16
   1a070:	pop	{r4, r5, r6, r7, fp, lr}
   1a074:	add	sp, sp, #8
   1a078:	bx	lr
   1a07c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a080:	mov	r7, r0
   1a084:	ldr	r6, [pc, #72]	; 1a0d4 <argp_failure@@Base+0x3644>
   1a088:	ldr	r5, [pc, #72]	; 1a0d8 <argp_failure@@Base+0x3648>
   1a08c:	add	r6, pc, r6
   1a090:	add	r5, pc, r5
   1a094:	sub	r6, r6, r5
   1a098:	mov	r8, r1
   1a09c:	mov	r9, r2
   1a0a0:	bl	112bc <fdopen@plt-0x20>
   1a0a4:	asrs	r6, r6, #2
   1a0a8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a0ac:	mov	r4, #0
   1a0b0:	add	r4, r4, #1
   1a0b4:	ldr	r3, [r5], #4
   1a0b8:	mov	r2, r9
   1a0bc:	mov	r1, r8
   1a0c0:	mov	r0, r7
   1a0c4:	blx	r3
   1a0c8:	cmp	r6, r4
   1a0cc:	bne	1a0b0 <argp_failure@@Base+0x3620>
   1a0d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a0d4:	andeq	r2, r1, r8, ror lr
   1a0d8:	andeq	r2, r1, r0, ror lr
   1a0dc:	bx	lr

Disassembly of section .fini:

0001a0e0 <.fini>:
   1a0e0:	push	{r3, lr}
   1a0e4:	pop	{r3, pc}
