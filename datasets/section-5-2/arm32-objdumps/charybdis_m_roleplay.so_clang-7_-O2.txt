
../repos/charybdis/extensions/.libs/m_roleplay.so:     file format elf32-littlearm


Disassembly of section .init:

000008f8 <_init>:
 8f8:	push	{r3, lr}
 8fc:	bl	9d8 <call_weak_fn>
 900:	pop	{r3, pc}

Disassembly of section .plt:

00000904 <.plt>:
 904:	push	{lr}		; (str lr, [sp, #-4]!)
 908:	ldr	lr, [pc, #4]	; 914 <.plt+0x10>
 90c:	add	lr, pc, lr
 910:	ldr	pc, [lr, #8]!
 914:	.word	0x000116ec

00000918 <sendto_channel_local@plt>:
 918:	add	ip, pc, #0, 12
 91c:	add	ip, ip, #69632	; 0x11000
 920:	ldr	pc, [ip, #1772]!	; 0x6ec

00000924 <can_send@plt>:
 924:	add	ip, pc, #0, 12
 928:	add	ip, ip, #69632	; 0x11000
 92c:	ldr	pc, [ip, #1764]!	; 0x6e4

00000930 <cflag_add@plt>:
 930:	add	ip, pc, #0, 12
 934:	add	ip, ip, #69632	; 0x11000
 938:	ldr	pc, [ip, #1756]!	; 0x6dc

0000093c <sendto_match_servs@plt>:
 93c:	add	ip, pc, #0, 12
 940:	add	ip, ip, #69632	; 0x11000
 944:	ldr	pc, [ip, #1748]!	; 0x6d4

00000948 <__cxa_finalize@plt>:
 948:	add	ip, pc, #0, 12
 94c:	add	ip, ip, #69632	; 0x11000
 950:	ldr	pc, [ip, #1740]!	; 0x6cc

00000954 <sendto_one@plt>:
 954:	add	ip, pc, #0, 12
 958:	add	ip, ip, #69632	; 0x11000
 95c:	ldr	pc, [ip, #1732]!	; 0x6c4

00000960 <find_channel@plt>:
 960:	add	ip, pc, #0, 12
 964:	add	ip, ip, #69632	; 0x11000
 968:	ldr	pc, [ip, #1724]!	; 0x6bc

0000096c <find_channel_membership@plt>:
 96c:	add	ip, pc, #0, 12
 970:	add	ip, ip, #69632	; 0x11000
 974:	ldr	pc, [ip, #1716]!	; 0x6b4

00000978 <__gmon_start__@plt>:
 978:	add	ip, pc, #0, 12
 97c:	add	ip, ip, #69632	; 0x11000
 980:	ldr	pc, [ip, #1708]!	; 0x6ac

00000984 <sendto_one_numeric@plt>:
 984:	add	ip, pc, #0, 12
 988:	add	ip, ip, #69632	; 0x11000
 98c:	ldr	pc, [ip, #1700]!	; 0x6a4

00000990 <add_channel_target@plt>:
 990:	add	ip, pc, #0, 12
 994:	add	ip, ip, #69632	; 0x11000
 998:	ldr	pc, [ip, #1692]!	; 0x69c

0000099c <snprintf@plt>:
 99c:	add	ip, pc, #0, 12
 9a0:	add	ip, ip, #69632	; 0x11000
 9a4:	ldr	pc, [ip, #1684]!	; 0x694

000009a8 <flood_endgrace@plt>:
 9a8:	add	ip, pc, #0, 12
 9ac:	add	ip, ip, #69632	; 0x11000
 9b0:	ldr	pc, [ip, #1676]!	; 0x68c

000009b4 <rb_strlcpy@plt>:
 9b4:	add	ip, pc, #0, 12
 9b8:	add	ip, ip, #69632	; 0x11000
 9bc:	ldr	pc, [ip, #1668]!	; 0x684

000009c0 <flood_attack_channel@plt>:
 9c0:	add	ip, pc, #0, 12
 9c4:	add	ip, ip, #69632	; 0x11000
 9c8:	ldr	pc, [ip, #1660]!	; 0x67c

000009cc <cflag_orphan@plt>:
 9cc:	add	ip, pc, #0, 12
 9d0:	add	ip, ip, #69632	; 0x11000
 9d4:	ldr	pc, [ip, #1652]!	; 0x674

Disassembly of section .text:

000009d8 <call_weak_fn>:
     9d8:	ldr	r3, [pc, #20]	; 9f4 <call_weak_fn+0x1c>
     9dc:	ldr	r2, [pc, #20]	; 9f8 <call_weak_fn+0x20>
     9e0:	add	r3, pc, r3
     9e4:	ldr	r2, [r3, r2]
     9e8:	cmp	r2, #0
     9ec:	bxeq	lr
     9f0:	b	978 <__gmon_start__@plt>
     9f4:	.word	0x00011618
     9f8:	.word	0x00000058

000009fc <deregister_tm_clones>:
     9fc:	ldr	r0, [pc, #44]	; a30 <deregister_tm_clones+0x34>
     a00:	ldr	r3, [pc, #44]	; a34 <deregister_tm_clones+0x38>
     a04:	add	r0, pc, r0
     a08:	add	r3, pc, r3
     a0c:	cmp	r3, r0
     a10:	ldr	r3, [pc, #32]	; a38 <deregister_tm_clones+0x3c>
     a14:	add	r3, pc, r3
     a18:	bxeq	lr
     a1c:	ldr	r2, [pc, #24]	; a3c <deregister_tm_clones+0x40>
     a20:	ldr	r3, [r3, r2]
     a24:	cmp	r3, #0
     a28:	bxeq	lr
     a2c:	bx	r3
     a30:	.word	0x0001188c
     a34:	.word	0x00011888
     a38:	.word	0x000115e4
     a3c:	.word	0x00000050

00000a40 <register_tm_clones>:
     a40:	ldr	r0, [pc, #56]	; a80 <register_tm_clones+0x40>
     a44:	ldr	r3, [pc, #56]	; a84 <register_tm_clones+0x44>
     a48:	add	r0, pc, r0
     a4c:	add	r3, pc, r3
     a50:	sub	r1, r3, r0
     a54:	ldr	r3, [pc, #44]	; a88 <register_tm_clones+0x48>
     a58:	asr	r1, r1, #2
     a5c:	add	r3, pc, r3
     a60:	add	r1, r1, r1, lsr #31
     a64:	asrs	r1, r1, #1
     a68:	bxeq	lr
     a6c:	ldr	r2, [pc, #24]	; a8c <register_tm_clones+0x4c>
     a70:	ldr	r3, [r3, r2]
     a74:	cmp	r3, #0
     a78:	bxeq	lr
     a7c:	bx	r3
     a80:	.word	0x00011848
     a84:	.word	0x00011844
     a88:	.word	0x0001159c
     a8c:	.word	0x00000064

00000a90 <__do_global_dtors_aux>:
     a90:	ldr	r3, [pc, #76]	; ae4 <__do_global_dtors_aux+0x54>
     a94:	ldr	r2, [pc, #76]	; ae8 <__do_global_dtors_aux+0x58>
     a98:	add	r3, pc, r3
     a9c:	add	r2, pc, r2
     aa0:	ldrb	r3, [r3]
     aa4:	cmp	r3, #0
     aa8:	bxne	lr
     aac:	ldr	r3, [pc, #56]	; aec <__do_global_dtors_aux+0x5c>
     ab0:	push	{r4, lr}
     ab4:	ldr	r3, [r2, r3]
     ab8:	cmp	r3, #0
     abc:	beq	acc <__do_global_dtors_aux+0x3c>
     ac0:	ldr	r3, [pc, #40]	; af0 <__do_global_dtors_aux+0x60>
     ac4:	ldr	r0, [pc, r3]
     ac8:	bl	948 <__cxa_finalize@plt>
     acc:	bl	9fc <deregister_tm_clones>
     ad0:	ldr	r3, [pc, #28]	; af4 <__do_global_dtors_aux+0x64>
     ad4:	mov	r2, #1
     ad8:	add	r3, pc, r3
     adc:	strb	r2, [r3]
     ae0:	pop	{r4, pc}
     ae4:	.word	0x000117f8
     ae8:	.word	0x0001155c
     aec:	.word	0x0000004c
     af0:	.word	0x000115a4
     af4:	.word	0x000117b8

00000af8 <frame_dummy>:
     af8:	b	a40 <register_tm_clones>

00000afc <m_scene>:
     afc:	push	{fp, lr}
     b00:	mov	fp, sp
     b04:	sub	sp, sp, #8
     b08:	mov	r0, r2
     b0c:	ldr	r2, [fp, #8]
     b10:	ldmib	r2, {r1, r2}
     b14:	ldr	r3, [pc, #28]	; b38 <m_scene+0x3c>
     b18:	add	r3, pc, r3
     b1c:	str	r2, [sp, #4]
     b20:	mov	r2, #0
     b24:	str	r3, [sp]
     b28:	mov	r3, #0
     b2c:	bl	cb0 <m_displaymsg>
     b30:	mov	sp, fp
     b34:	pop	{fp, pc}
     b38:	.word	0x00000546

00000b3c <m_npc>:
     b3c:	push	{fp, lr}
     b40:	mov	fp, sp
     b44:	sub	sp, sp, #8
     b48:	mov	r0, r2
     b4c:	ldr	r2, [fp, #8]
     b50:	ldmib	r2, {r1, r3}
     b54:	ldr	r2, [r2, #12]
     b58:	str	r3, [sp]
     b5c:	str	r2, [sp, #4]
     b60:	mov	r2, #1
     b64:	mov	r3, #0
     b68:	bl	cb0 <m_displaymsg>
     b6c:	mov	sp, fp
     b70:	pop	{fp, pc}

00000b74 <m_fsay>:
     b74:	push	{fp, lr}
     b78:	mov	fp, sp
     b7c:	sub	sp, sp, #8
     b80:	mov	r0, r2
     b84:	ldr	r2, [fp, #8]
     b88:	ldmib	r2, {r1, r3}
     b8c:	ldr	r2, [r2, #12]
     b90:	str	r3, [sp]
     b94:	str	r2, [sp, #4]
     b98:	mov	r2, #0
     b9c:	mov	r3, #0
     ba0:	bl	cb0 <m_displaymsg>
     ba4:	mov	sp, fp
     ba8:	pop	{fp, pc}

00000bac <m_npca>:
     bac:	push	{fp, lr}
     bb0:	mov	fp, sp
     bb4:	sub	sp, sp, #8
     bb8:	mov	r0, r2
     bbc:	ldr	r2, [fp, #8]
     bc0:	ldmib	r2, {r1, r3}
     bc4:	ldr	r2, [r2, #12]
     bc8:	str	r3, [sp]
     bcc:	str	r2, [sp, #4]
     bd0:	mov	r2, #1
     bd4:	mov	r3, #1
     bd8:	bl	cb0 <m_displaymsg>
     bdc:	mov	sp, fp
     be0:	pop	{fp, pc}

00000be4 <m_faction>:
     be4:	push	{fp, lr}
     be8:	mov	fp, sp
     bec:	sub	sp, sp, #8
     bf0:	mov	r0, r2
     bf4:	ldr	r2, [fp, #8]
     bf8:	ldmib	r2, {r1, r3}
     bfc:	ldr	r2, [r2, #12]
     c00:	str	r3, [sp]
     c04:	str	r2, [sp, #4]
     c08:	mov	r2, #0
     c0c:	mov	r3, #1
     c10:	bl	cb0 <m_displaymsg>
     c14:	mov	sp, fp
     c18:	pop	{fp, pc}

00000c1c <me_roleplay>:
     c1c:	push	{r4, r5, fp, lr}
     c20:	add	fp, sp, #8
     c24:	sub	sp, sp, #16
     c28:	ldr	r5, [fp, #8]
     c2c:	mov	r4, r2
     c30:	ldr	r0, [r5, #4]
     c34:	bl	960 <find_channel@plt>
     c38:	cmp	r0, #0
     c3c:	beq	c6c <me_roleplay+0x50>
     c40:	mov	r2, r0
     c44:	ldmib	r5, {r0, r1, r3}
     c48:	add	r5, r4, #88	; 0x58
     c4c:	stm	sp, {r1, r5}
     c50:	str	r0, [sp, #8]
     c54:	str	r3, [sp, #12]
     c58:	mov	r0, r4
     c5c:	mov	r1, #0
     c60:	ldr	r3, [pc, #12]	; c74 <me_roleplay+0x58>
     c64:	add	r3, pc, r3
     c68:	bl	918 <sendto_channel_local@plt>
     c6c:	sub	sp, fp, #8
     c70:	pop	{r4, r5, fp, pc}
     c74:	.word	0x0000050f

00000c78 <_modinit>:
     c78:	push	{fp, lr}
     c7c:	mov	fp, sp
     c80:	ldr	r1, [pc, #28]	; ca4 <_modinit+0x2c>
     c84:	mov	r0, #78	; 0x4e
     c88:	ldr	r1, [pc, r1]
     c8c:	bl	930 <cflag_add@plt>
     c90:	mov	r1, #0
     c94:	cmp	r0, #0
     c98:	mvneq	r1, #0
     c9c:	mov	r0, r1
     ca0:	pop	{fp, pc}
     ca4:	.word	0x000113c4

00000ca8 <_moddeinit>:
     ca8:	mov	r0, #78	; 0x4e
     cac:	b	9cc <cflag_orphan@plt>

00000cb0 <m_displaymsg>:
     cb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     cb4:	add	fp, sp, #28
     cb8:	sub	sp, sp, #92	; 0x5c
     cbc:	sub	sp, sp, #1024	; 0x400
     cc0:	mov	sl, r1
     cc4:	ldr	r1, [fp, #8]
     cc8:	sub	r7, fp, #98	; 0x62
     ccc:	mov	r9, r2
     cd0:	mov	r4, r0
     cd4:	mov	r2, #33	; 0x21
     cd8:	mov	r8, r3
     cdc:	mov	r0, r7
     ce0:	bl	9b4 <rb_strlcpy@plt>
     ce4:	ldrb	r0, [r4, #65]	; 0x41
     ce8:	tst	r0, #1
     cec:	bne	cf8 <m_displaymsg+0x48>
     cf0:	mov	r0, r4
     cf4:	bl	9a8 <flood_endgrace@plt>
     cf8:	mov	r0, sl
     cfc:	bl	960 <find_channel@plt>
     d00:	cmp	r0, #0
     d04:	beq	e4c <m_displaymsg+0x19c>
     d08:	mov	r1, r4
     d0c:	mov	r6, r0
     d10:	bl	96c <find_channel_membership@plt>
     d14:	cmp	r0, #0
     d18:	beq	e64 <m_displaymsg+0x1b4>
     d1c:	mov	r5, r0
     d20:	ldr	r0, [r6, #12]
     d24:	ldr	r1, [pc, #708]	; ff0 <m_displaymsg+0x340>
     d28:	ldr	r1, [pc, r1]
     d2c:	ldr	r1, [r1, #312]	; 0x138
     d30:	tst	r1, r0
     d34:	beq	e7c <m_displaymsg+0x1cc>
     d38:	mov	r0, r6
     d3c:	mov	r1, r4
     d40:	mov	r2, r5
     d44:	bl	924 <can_send@plt>
     d48:	ldr	r3, [r6, #236]	; 0xec
     d4c:	cmp	r0, #0
     d50:	beq	e8c <m_displaymsg+0x1dc>
     d54:	mov	r0, #0
     d58:	mov	r1, r4
     d5c:	mov	r2, r6
     d60:	bl	9c0 <flood_attack_channel@plt>
     d64:	cmp	r0, #0
     d68:	bne	fb0 <m_displaymsg+0x300>
     d6c:	ldrb	r0, [r5, #44]	; 0x2c
     d70:	tst	r0, #3
     d74:	bne	d98 <m_displaymsg+0xe8>
     d78:	ldrb	r0, [r4, #57]	; 0x39
     d7c:	tst	r0, #16
     d80:	bne	d98 <m_displaymsg+0xe8>
     d84:	mov	r0, r4
     d88:	mov	r1, r6
     d8c:	bl	990 <add_channel_target@plt>
     d90:	cmp	r0, #0
     d94:	beq	fb8 <m_displaymsg+0x308>
     d98:	ldr	r1, [pc, #604]	; ffc <m_displaymsg+0x34c>
     d9c:	mov	r0, #0
     da0:	mov	ip, #32
     da4:	mov	r3, r7
     da8:	ldr	r1, [pc, r1]
     dac:	b	db4 <m_displaymsg+0x104>
     db0:	add	r3, r3, #1
     db4:	ldrb	r5, [r3]
     db8:	cmp	r5, #3
     dbc:	beq	de8 <m_displaymsg+0x138>
     dc0:	cmp	r5, #32
     dc4:	beq	e44 <m_displaymsg+0x194>
     dc8:	cmp	r5, #0
     dcc:	beq	e98 <m_displaymsg+0x1e8>
     dd0:	cmp	r5, #32
     dd4:	bcc	db0 <m_displaymsg+0x100>
     dd8:	strb	r5, [r7], #1
     ddc:	add	r3, r3, #1
     de0:	mov	r0, r7
     de4:	b	db4 <m_displaymsg+0x104>
     de8:	mov	r5, r3
     dec:	ldrb	r2, [r5, #1]!
     df0:	ldrb	r2, [r1, r2, lsl #2]
     df4:	tst	r2, #16
     df8:	beq	db0 <m_displaymsg+0x100>
     dfc:	ldrb	r2, [r3, #2]!
     e00:	ldrb	r2, [r1, r2, lsl #2]
     e04:	tst	r2, #16
     e08:	moveq	r3, r5
     e0c:	ldrb	r2, [r3, #1]
     e10:	cmp	r2, #44	; 0x2c
     e14:	bne	db0 <m_displaymsg+0x100>
     e18:	mov	r5, r3
     e1c:	ldrb	r2, [r5, #2]!
     e20:	ldrb	r2, [r1, r2, lsl #2]
     e24:	tst	r2, #16
     e28:	beq	db0 <m_displaymsg+0x100>
     e2c:	ldrb	r2, [r3, #3]!
     e30:	ldrb	r2, [r1, r2, lsl #2]
     e34:	tst	r2, #16
     e38:	moveq	r3, r5
     e3c:	add	r3, r3, #1
     e40:	b	db4 <m_displaymsg+0x104>
     e44:	strb	ip, [r7], #1
     e48:	b	db0 <m_displaymsg+0x100>
     e4c:	ldr	r2, [pc, #404]	; fe8 <m_displaymsg+0x338>
     e50:	mov	r0, r4
     e54:	movw	r1, #403	; 0x193
     e58:	mov	r3, sl
     e5c:	add	r2, pc, r2
     e60:	b	f30 <m_displaymsg+0x280>
     e64:	ldr	r3, [r6, #236]	; 0xec
     e68:	ldr	r2, [pc, #380]	; fec <m_displaymsg+0x33c>
     e6c:	mov	r0, r4
     e70:	movw	r1, #442	; 0x1ba
     e74:	add	r2, pc, r2
     e78:	b	f30 <m_displaymsg+0x280>
     e7c:	ldr	r3, [r6, #236]	; 0xec
     e80:	ldr	r2, [pc, #364]	; ff4 <m_displaymsg+0x344>
     e84:	add	r2, pc, r2
     e88:	b	f28 <m_displaymsg+0x278>
     e8c:	ldr	r2, [pc, #356]	; ff8 <m_displaymsg+0x348>
     e90:	add	r2, pc, r2
     e94:	b	f28 <m_displaymsg+0x278>
     e98:	mov	r1, #0
     e9c:	cmp	r0, #0
     ea0:	strb	r1, [r7]
     ea4:	strbne	r1, [r0]
     ea8:	sub	r0, fp, #65	; 0x41
     eac:	cmp	r9, #0
     eb0:	beq	ec0 <m_displaymsg+0x210>
     eb4:	ldr	r2, [pc, #332]	; 1008 <m_displaymsg+0x358>
     eb8:	add	r2, pc, r2
     ebc:	b	ec8 <m_displaymsg+0x218>
     ec0:	ldr	r2, [pc, #324]	; 100c <m_displaymsg+0x35c>
     ec4:	add	r2, pc, r2
     ec8:	sub	r3, fp, #98	; 0x62
     ecc:	mov	r1, #33	; 0x21
     ed0:	bl	99c <snprintf@plt>
     ed4:	ldrb	r0, [fp, #-98]	; 0xffffff9e
     ed8:	cmp	r0, #0
     edc:	beq	f1c <m_displaymsg+0x26c>
     ee0:	add	r7, r4, #88	; 0x58
     ee4:	ldr	r3, [fp, #12]
     ee8:	add	lr, sp, #512	; 0x200
     eec:	mov	r1, #512	; 0x200
     ef0:	str	r7, [sp]
     ef4:	add	r0, lr, #22
     ef8:	ldr	r2, [pc, #276]	; 1014 <m_displaymsg+0x364>
     efc:	add	r2, pc, r2
     f00:	bl	99c <snprintf@plt>
     f04:	add	r0, sp, #22
     f08:	cmp	r8, #0
     f0c:	beq	f3c <m_displaymsg+0x28c>
     f10:	ldr	r2, [pc, #256]	; 1018 <m_displaymsg+0x368>
     f14:	add	r2, pc, r2
     f18:	b	f44 <m_displaymsg+0x294>
     f1c:	ldr	r3, [r6, #236]	; 0xec
     f20:	ldr	r2, [pc, #232]	; 1010 <m_displaymsg+0x360>
     f24:	add	r2, pc, r2
     f28:	mov	r0, r4
     f2c:	movw	r1, #573	; 0x23d
     f30:	bl	984 <sendto_one_numeric@plt>
     f34:	sub	sp, fp, #28
     f38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     f3c:	ldr	r2, [pc, #216]	; 101c <m_displaymsg+0x36c>
     f40:	add	r2, pc, r2
     f44:	add	lr, sp, #512	; 0x200
     f48:	mov	r1, #512	; 0x200
     f4c:	add	r3, lr, #22
     f50:	bl	99c <snprintf@plt>
     f54:	sub	r5, fp, #65	; 0x41
     f58:	add	r8, sp, #22
     f5c:	mov	r0, r4
     f60:	mov	r1, #0
     f64:	mov	r2, r6
     f68:	stm	sp, {r5, r7, sl}
     f6c:	str	r8, [sp, #12]
     f70:	ldr	r3, [pc, #168]	; 1020 <m_displaymsg+0x370>
     f74:	add	r3, pc, r3
     f78:	bl	918 <sendto_channel_local@plt>
     f7c:	ldr	r0, [pc, #160]	; 1024 <m_displaymsg+0x374>
     f80:	mov	r3, #0
     f84:	ldr	r0, [pc, r0]
     f88:	ldr	r2, [r0]
     f8c:	ldr	r0, [pc, #148]	; 1028 <m_displaymsg+0x378>
     f90:	add	r0, pc, r0
     f94:	stm	sp, {r0, sl}
     f98:	str	r5, [sp, #8]
     f9c:	str	r8, [sp, #12]
     fa0:	mov	r0, r4
     fa4:	ldr	r1, [pc, #128]	; 102c <m_displaymsg+0x37c>
     fa8:	add	r1, pc, r1
     fac:	bl	93c <sendto_match_servs@plt>
     fb0:	sub	sp, fp, #28
     fb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     fb8:	ldr	r0, [r6, #236]	; 0xec
     fbc:	add	r3, r4, #88	; 0x58
     fc0:	str	r0, [sp]
     fc4:	ldr	r0, [pc, #52]	; 1000 <m_displaymsg+0x350>
     fc8:	ldr	r0, [pc, r0]
     fcc:	ldr	r1, [pc, #48]	; 1004 <m_displaymsg+0x354>
     fd0:	add	r2, r0, #88	; 0x58
     fd4:	add	r1, pc, r1
     fd8:	mov	r0, r4
     fdc:	bl	954 <sendto_one@plt>
     fe0:	sub	sp, fp, #28
     fe4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     fe8:	.word	0x0000020a
     fec:	.word	0x00000206
     ff0:	.word	0x00011330
     ff4:	.word	0x00000215
     ff8:	.word	0x00000240
     ffc:	.word	0x000112ac
    1000:	.word	0x00011098
    1004:	.word	0x00000118
    1008:	.word	0x0000026e
    100c:	.word	0x000002d7
    1010:	.word	0x00000207
    1014:	.word	0x0000025f
    1018:	.word	0x0000024f
    101c:	.word	0x0000025b
    1020:	.word	0x000001ff
    1024:	.word	0x000110e0
    1028:	.word	0x00000210
    102c:	.word	0x000001f6

Disassembly of section .fini:

00001030 <_fini>:
    1030:	push	{r3, lr}
    1034:	pop	{r3, pc}
