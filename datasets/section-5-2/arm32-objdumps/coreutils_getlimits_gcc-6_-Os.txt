
../repos/coreutils/src/getlimits:     file format elf32-littlearm


Disassembly of section .init:

00010be8 <.init>:
   10be8:	push	{r3, lr}
   10bec:	bl	11844 <__snprintf_chk@plt+0x9f0>
   10bf0:	pop	{r3, pc}

Disassembly of section .plt:

00010bf4 <calloc@plt-0x14>:
   10bf4:	push	{lr}		; (str lr, [sp, #-4]!)
   10bf8:	ldr	lr, [pc, #4]	; 10c04 <calloc@plt-0x4>
   10bfc:	add	lr, pc, lr
   10c00:	ldr	pc, [lr, #8]!
   10c04:	strdeq	r5, [r1], -ip

00010c08 <calloc@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #86016	; 0x15000
   10c10:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c14 <fputs_unlocked@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #86016	; 0x15000
   10c1c:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c20 <raise@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #86016	; 0x15000
   10c28:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c2c <strcmp@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #86016	; 0x15000
   10c34:	ldr	pc, [ip, #996]!	; 0x3e4

00010c38 <fflush@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #86016	; 0x15000
   10c40:	ldr	pc, [ip, #988]!	; 0x3dc

00010c44 <free@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #86016	; 0x15000
   10c4c:	ldr	pc, [ip, #980]!	; 0x3d4

00010c50 <_exit@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #86016	; 0x15000
   10c58:	ldr	pc, [ip, #972]!	; 0x3cc

00010c5c <memcpy@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #86016	; 0x15000
   10c64:	ldr	pc, [ip, #964]!	; 0x3c4

00010c68 <mbsinit@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #86016	; 0x15000
   10c70:	ldr	pc, [ip, #956]!	; 0x3bc

00010c74 <strtold@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #86016	; 0x15000
   10c7c:	ldr	pc, [ip, #948]!	; 0x3b4

00010c80 <memcmp@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #86016	; 0x15000
   10c88:	ldr	pc, [ip, #940]!	; 0x3ac

00010c8c <fputc_unlocked@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #86016	; 0x15000
   10c94:	ldr	pc, [ip, #932]!	; 0x3a4

00010c98 <dcgettext@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #86016	; 0x15000
   10ca0:	ldr	pc, [ip, #924]!	; 0x39c

00010ca4 <realloc@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #86016	; 0x15000
   10cac:	ldr	pc, [ip, #916]!	; 0x394

00010cb0 <textdomain@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #86016	; 0x15000
   10cb8:	ldr	pc, [ip, #908]!	; 0x38c

00010cbc <iswprint@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #86016	; 0x15000
   10cc4:	ldr	pc, [ip, #900]!	; 0x384

00010cc8 <lseek64@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #86016	; 0x15000
   10cd0:	ldr	pc, [ip, #892]!	; 0x37c

00010cd4 <__ctype_get_mb_cur_max@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #86016	; 0x15000
   10cdc:	ldr	pc, [ip, #884]!	; 0x374

00010ce0 <__fpending@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #86016	; 0x15000
   10ce8:	ldr	pc, [ip, #876]!	; 0x36c

00010cec <ferror_unlocked@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #86016	; 0x15000
   10cf4:	ldr	pc, [ip, #868]!	; 0x364

00010cf8 <mbrtowc@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #86016	; 0x15000
   10d00:	ldr	pc, [ip, #860]!	; 0x35c

00010d04 <error@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #86016	; 0x15000
   10d0c:	ldr	pc, [ip, #852]!	; 0x354

00010d10 <strtof@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #86016	; 0x15000
   10d18:	ldr	pc, [ip, #844]!	; 0x34c

00010d1c <puts@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #86016	; 0x15000
   10d24:	ldr	pc, [ip, #836]!	; 0x344

00010d28 <malloc@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #86016	; 0x15000
   10d30:	ldr	pc, [ip, #828]!	; 0x33c

00010d34 <__libc_start_main@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #86016	; 0x15000
   10d3c:	ldr	pc, [ip, #820]!	; 0x334

00010d40 <__freading@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #86016	; 0x15000
   10d48:	ldr	pc, [ip, #812]!	; 0x32c

00010d4c <__gmon_start__@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #86016	; 0x15000
   10d54:	ldr	pc, [ip, #804]!	; 0x324

00010d58 <getopt_long@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #86016	; 0x15000
   10d60:	ldr	pc, [ip, #796]!	; 0x31c

00010d64 <__ctype_b_loc@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #86016	; 0x15000
   10d6c:	ldr	pc, [ip, #788]!	; 0x314

00010d70 <exit@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #86016	; 0x15000
   10d78:	ldr	pc, [ip, #780]!	; 0x30c

00010d7c <strlen@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #86016	; 0x15000
   10d84:	ldr	pc, [ip, #772]!	; 0x304

00010d88 <__errno_location@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #86016	; 0x15000
   10d90:	ldr	pc, [ip, #764]!	; 0x2fc

00010d94 <__sprintf_chk@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #86016	; 0x15000
   10d9c:	ldr	pc, [ip, #756]!	; 0x2f4

00010da0 <__cxa_atexit@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #86016	; 0x15000
   10da8:	ldr	pc, [ip, #748]!	; 0x2ec

00010dac <memset@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #86016	; 0x15000
   10db4:	ldr	pc, [ip, #740]!	; 0x2e4

00010db8 <__printf_chk@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #86016	; 0x15000
   10dc0:	ldr	pc, [ip, #732]!	; 0x2dc

00010dc4 <strtod@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #86016	; 0x15000
   10dcc:	ldr	pc, [ip, #724]!	; 0x2d4

00010dd0 <fileno@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #86016	; 0x15000
   10dd8:	ldr	pc, [ip, #716]!	; 0x2cc

00010ddc <__fprintf_chk@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #86016	; 0x15000
   10de4:	ldr	pc, [ip, #708]!	; 0x2c4

00010de8 <fclose@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #86016	; 0x15000
   10df0:	ldr	pc, [ip, #700]!	; 0x2bc

00010df4 <fseeko64@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #86016	; 0x15000
   10dfc:	ldr	pc, [ip, #692]!	; 0x2b4

00010e00 <setlocale@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #86016	; 0x15000
   10e08:	ldr	pc, [ip, #684]!	; 0x2ac

00010e0c <strrchr@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #86016	; 0x15000
   10e14:	ldr	pc, [ip, #676]!	; 0x2a4

00010e18 <nl_langinfo@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #86016	; 0x15000
   10e20:	ldr	pc, [ip, #668]!	; 0x29c

00010e24 <bindtextdomain@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #86016	; 0x15000
   10e2c:	ldr	pc, [ip, #660]!	; 0x294

00010e30 <fputs@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #86016	; 0x15000
   10e38:	ldr	pc, [ip, #652]!	; 0x28c

00010e3c <strncmp@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #86016	; 0x15000
   10e44:	ldr	pc, [ip, #644]!	; 0x284

00010e48 <abort@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #86016	; 0x15000
   10e50:	ldr	pc, [ip, #636]!	; 0x27c

00010e54 <__snprintf_chk@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #86016	; 0x15000
   10e5c:	ldr	pc, [ip, #628]!	; 0x274

Disassembly of section .text:

00010e60 <.text>:
   10e60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e64:	vpush	{d8-d9}
   10e68:	mov	r6, r0
   10e6c:	ldr	r5, [pc, #1156]	; 112f8 <__snprintf_chk@plt+0x4a4>
   10e70:	ldr	r0, [r1]
   10e74:	sub	sp, sp, #84	; 0x54
   10e78:	mov	r4, r1
   10e7c:	bl	12268 <__snprintf_chk@plt+0x1414>
   10e80:	ldr	r1, [pc, #1140]	; 112fc <__snprintf_chk@plt+0x4a8>
   10e84:	mov	r0, #6
   10e88:	bl	10e00 <setlocale@plt>
   10e8c:	ldr	r1, [pc, #1132]	; 11300 <__snprintf_chk@plt+0x4ac>
   10e90:	mov	r0, r5
   10e94:	bl	10e24 <bindtextdomain@plt>
   10e98:	mov	r0, r5
   10e9c:	bl	10cb0 <textdomain@plt>
   10ea0:	ldr	r0, [pc, #1116]	; 11304 <__snprintf_chk@plt+0x4b0>
   10ea4:	bl	14c28 <__snprintf_chk@plt+0x3dd4>
   10ea8:	ldr	r3, [pc, #1112]	; 11308 <__snprintf_chk@plt+0x4b4>
   10eac:	ldr	r5, [pc, #1112]	; 1130c <__snprintf_chk@plt+0x4b8>
   10eb0:	str	r3, [sp, #8]
   10eb4:	ldr	r3, [pc, #1108]	; 11310 <__snprintf_chk@plt+0x4bc>
   10eb8:	mov	fp, #0
   10ebc:	str	r3, [sp, #4]
   10ec0:	ldr	r3, [pc, #1100]	; 11314 <__snprintf_chk@plt+0x4c0>
   10ec4:	mov	r0, r6
   10ec8:	mov	r7, #0
   10ecc:	mov	r6, #255	; 0xff
   10ed0:	str	r3, [sp]
   10ed4:	mov	r1, r4
   10ed8:	str	fp, [sp, #12]
   10edc:	add	r4, sp, #17
   10ee0:	ldr	r3, [pc, #1072]	; 11318 <__snprintf_chk@plt+0x4c4>
   10ee4:	ldr	r2, [pc, #1072]	; 1131c <__snprintf_chk@plt+0x4c8>
   10ee8:	bl	120e8 <__snprintf_chk@plt+0x1294>
   10eec:	mov	r3, r5
   10ef0:	strd	r6, [sp]
   10ef4:	mov	r2, #21
   10ef8:	mov	r1, #1
   10efc:	mov	r0, r4
   10f00:	bl	10d94 <__sprintf_chk@plt>
   10f04:	mov	r2, r4
   10f08:	ldr	r1, [pc, #1040]	; 11320 <__snprintf_chk@plt+0x4cc>
   10f0c:	mov	r0, #1
   10f10:	bl	10db8 <__printf_chk@plt>
   10f14:	add	r0, sp, #16
   10f18:	bl	11930 <__snprintf_chk@plt+0xadc>
   10f1c:	ldr	r1, [pc, #1024]	; 11324 <__snprintf_chk@plt+0x4d0>
   10f20:	ldr	sl, [pc, #1024]	; 11328 <__snprintf_chk@plt+0x4d4>
   10f24:	mvn	r8, #-2147483648	; 0x80000000
   10f28:	mov	r9, #0
   10f2c:	vldr	d9, [pc, #948]	; 112e8 <__snprintf_chk@plt+0x494>
   10f30:	vldr	d8, [pc, #952]	; 112f0 <__snprintf_chk@plt+0x49c>
   10f34:	mov	r2, r0
   10f38:	mov	r0, #1
   10f3c:	bl	10db8 <__printf_chk@plt>
   10f40:	mov	r2, #127	; 0x7f
   10f44:	mov	r3, #0
   10f48:	mov	r1, #1
   10f4c:	strd	r2, [sp]
   10f50:	mov	r0, r4
   10f54:	mov	r3, r5
   10f58:	mov	r2, #21
   10f5c:	bl	10d94 <__sprintf_chk@plt>
   10f60:	mov	r2, r4
   10f64:	ldr	r1, [pc, #960]	; 1132c <__snprintf_chk@plt+0x4d8>
   10f68:	mov	r0, #1
   10f6c:	bl	10db8 <__printf_chk@plt>
   10f70:	add	r0, sp, #16
   10f74:	bl	11930 <__snprintf_chk@plt+0xadc>
   10f78:	ldr	r1, [pc, #944]	; 11330 <__snprintf_chk@plt+0x4dc>
   10f7c:	mov	r2, r0
   10f80:	mov	r0, #1
   10f84:	bl	10db8 <__printf_chk@plt>
   10f88:	mvn	r2, #127	; 0x7f
   10f8c:	mvn	r3, #0
   10f90:	mov	r1, #1
   10f94:	strd	r2, [sp]
   10f98:	mov	r0, r4
   10f9c:	mov	r3, sl
   10fa0:	mov	r2, #21
   10fa4:	bl	10d94 <__sprintf_chk@plt>
   10fa8:	mov	r2, r4
   10fac:	ldr	r1, [pc, #896]	; 11334 <__snprintf_chk@plt+0x4e0>
   10fb0:	mov	r0, #1
   10fb4:	bl	10db8 <__printf_chk@plt>
   10fb8:	add	r0, sp, #16
   10fbc:	bl	11930 <__snprintf_chk@plt+0xadc>
   10fc0:	ldr	r1, [pc, #880]	; 11338 <__snprintf_chk@plt+0x4e4>
   10fc4:	mov	r2, r0
   10fc8:	mov	r0, #1
   10fcc:	bl	10db8 <__printf_chk@plt>
   10fd0:	mov	r3, r5
   10fd4:	strd	r6, [sp]
   10fd8:	mov	r2, #21
   10fdc:	mov	r1, #1
   10fe0:	mov	r0, r4
   10fe4:	bl	10d94 <__sprintf_chk@plt>
   10fe8:	mov	r2, r4
   10fec:	ldr	r1, [pc, #840]	; 1133c <__snprintf_chk@plt+0x4e8>
   10ff0:	mov	r0, #1
   10ff4:	bl	10db8 <__printf_chk@plt>
   10ff8:	add	r0, sp, #16
   10ffc:	bl	11930 <__snprintf_chk@plt+0xadc>
   11000:	ldr	r1, [pc, #824]	; 11340 <__snprintf_chk@plt+0x4ec>
   11004:	mvn	r6, #0
   11008:	mov	r7, #0
   1100c:	mov	r2, r0
   11010:	mov	r0, #1
   11014:	bl	10db8 <__printf_chk@plt>
   11018:	ldr	r2, [pc, #804]	; 11344 <__snprintf_chk@plt+0x4f0>
   1101c:	mov	r3, #0
   11020:	mov	r1, #1
   11024:	strd	r2, [sp]
   11028:	mov	r0, r4
   1102c:	mov	r3, r5
   11030:	mov	r2, #21
   11034:	bl	10d94 <__sprintf_chk@plt>
   11038:	mov	r2, r4
   1103c:	ldr	r1, [pc, #772]	; 11348 <__snprintf_chk@plt+0x4f4>
   11040:	mov	r0, #1
   11044:	bl	10db8 <__printf_chk@plt>
   11048:	add	r0, sp, #16
   1104c:	bl	11930 <__snprintf_chk@plt+0xadc>
   11050:	ldr	r1, [pc, #756]	; 1134c <__snprintf_chk@plt+0x4f8>
   11054:	mov	r2, r0
   11058:	mov	r0, #1
   1105c:	bl	10db8 <__printf_chk@plt>
   11060:	ldr	r2, [pc, #744]	; 11350 <__snprintf_chk@plt+0x4fc>
   11064:	mvn	r3, #0
   11068:	mov	r1, #1
   1106c:	strd	r2, [sp]
   11070:	mov	r0, r4
   11074:	mov	r3, sl
   11078:	mov	r2, #21
   1107c:	bl	10d94 <__sprintf_chk@plt>
   11080:	mov	r2, r4
   11084:	ldr	r1, [pc, #712]	; 11354 <__snprintf_chk@plt+0x500>
   11088:	mov	r0, #1
   1108c:	bl	10db8 <__printf_chk@plt>
   11090:	add	r0, sp, #16
   11094:	bl	11930 <__snprintf_chk@plt+0xadc>
   11098:	ldr	r1, [pc, #696]	; 11358 <__snprintf_chk@plt+0x504>
   1109c:	mov	r2, r0
   110a0:	mov	r0, #1
   110a4:	bl	10db8 <__printf_chk@plt>
   110a8:	mov	r3, r5
   110ac:	strd	r8, [sp]
   110b0:	mov	r2, #21
   110b4:	mov	r1, #1
   110b8:	mov	r0, r4
   110bc:	bl	10d94 <__sprintf_chk@plt>
   110c0:	mov	r2, r4
   110c4:	ldr	r1, [pc, #656]	; 1135c <__snprintf_chk@plt+0x508>
   110c8:	mov	r0, #1
   110cc:	bl	10db8 <__printf_chk@plt>
   110d0:	add	r0, sp, #16
   110d4:	bl	11930 <__snprintf_chk@plt+0xadc>
   110d8:	ldr	r1, [pc, #640]	; 11360 <__snprintf_chk@plt+0x50c>
   110dc:	mov	r2, r0
   110e0:	mov	r0, #1
   110e4:	bl	10db8 <__printf_chk@plt>
   110e8:	mov	r2, #-2147483648	; 0x80000000
   110ec:	mvn	r3, #0
   110f0:	mov	r1, #1
   110f4:	strd	r2, [sp]
   110f8:	mov	r0, r4
   110fc:	mov	r3, sl
   11100:	mov	r2, #21
   11104:	bl	10d94 <__sprintf_chk@plt>
   11108:	mov	r2, r4
   1110c:	ldr	r1, [pc, #592]	; 11364 <__snprintf_chk@plt+0x510>
   11110:	mov	r0, #1
   11114:	bl	10db8 <__printf_chk@plt>
   11118:	add	r0, sp, #16
   1111c:	bl	11930 <__snprintf_chk@plt+0xadc>
   11120:	ldr	r1, [pc, #576]	; 11368 <__snprintf_chk@plt+0x514>
   11124:	mov	r2, r0
   11128:	mov	r0, #1
   1112c:	bl	10db8 <__printf_chk@plt>
   11130:	mov	r3, r5
   11134:	strd	r6, [sp]
   11138:	mov	r2, #21
   1113c:	mov	r1, #1
   11140:	mov	r0, r4
   11144:	bl	10d94 <__sprintf_chk@plt>
   11148:	mov	r2, r4
   1114c:	ldr	r1, [pc, #536]	; 1136c <__snprintf_chk@plt+0x518>
   11150:	mov	r0, #1
   11154:	bl	10db8 <__printf_chk@plt>
   11158:	add	r0, sp, #16
   1115c:	bl	11930 <__snprintf_chk@plt+0xadc>
   11160:	ldr	r1, [pc, #520]	; 11370 <__snprintf_chk@plt+0x51c>
   11164:	mov	r2, r0
   11168:	mov	r0, #1
   1116c:	bl	10db8 <__printf_chk@plt>
   11170:	mov	r3, r5
   11174:	strd	r8, [sp]
   11178:	mov	r2, #21
   1117c:	mov	r1, #1
   11180:	mov	r0, r4
   11184:	bl	10d94 <__sprintf_chk@plt>
   11188:	mov	r2, r4
   1118c:	ldr	r1, [pc, #480]	; 11374 <__snprintf_chk@plt+0x520>
   11190:	mov	r0, #1
   11194:	bl	10db8 <__printf_chk@plt>
   11198:	add	r0, sp, #16
   1119c:	bl	11930 <__snprintf_chk@plt+0xadc>
   111a0:	ldr	r1, [pc, #464]	; 11378 <__snprintf_chk@plt+0x524>
   111a4:	mov	r2, r0
   111a8:	mov	r0, #1
   111ac:	bl	10db8 <__printf_chk@plt>
   111b0:	mov	r2, #-2147483648	; 0x80000000
   111b4:	mvn	r3, #0
   111b8:	mov	r1, #1
   111bc:	strd	r2, [sp]
   111c0:	mov	r0, r4
   111c4:	mov	r3, sl
   111c8:	mov	r2, #21
   111cc:	bl	10d94 <__sprintf_chk@plt>
   111d0:	mov	r2, r4
   111d4:	ldr	r1, [pc, #416]	; 1137c <__snprintf_chk@plt+0x528>
   111d8:	mov	r0, #1
   111dc:	bl	10db8 <__printf_chk@plt>
   111e0:	add	r0, sp, #16
   111e4:	bl	11930 <__snprintf_chk@plt+0xadc>
   111e8:	ldr	r1, [pc, #400]	; 11380 <__snprintf_chk@plt+0x52c>
   111ec:	mov	r2, r0
   111f0:	mov	r0, #1
   111f4:	bl	10db8 <__printf_chk@plt>
   111f8:	mov	r3, r5
   111fc:	strd	r6, [sp]
   11200:	mov	r2, #21
   11204:	mov	r1, #1
   11208:	mov	r0, r4
   1120c:	bl	10d94 <__sprintf_chk@plt>
   11210:	mov	r2, r4
   11214:	ldr	r1, [pc, #360]	; 11384 <__snprintf_chk@plt+0x530>
   11218:	mov	r0, #1
   1121c:	bl	10db8 <__printf_chk@plt>
   11220:	add	r0, sp, #16
   11224:	bl	11930 <__snprintf_chk@plt+0xadc>
   11228:	ldr	r1, [pc, #344]	; 11388 <__snprintf_chk@plt+0x534>
   1122c:	mov	r2, r0
   11230:	mov	r0, #1
   11234:	bl	10db8 <__printf_chk@plt>
   11238:	mov	r3, r5
   1123c:	strd	r6, [sp]
   11240:	mov	r2, #21
   11244:	mov	r1, #1
   11248:	mov	r0, r4
   1124c:	bl	10d94 <__sprintf_chk@plt>
   11250:	mov	r2, r4
   11254:	ldr	r1, [pc, #304]	; 1138c <__snprintf_chk@plt+0x538>
   11258:	mov	r0, #1
   1125c:	bl	10db8 <__printf_chk@plt>
   11260:	add	r0, sp, #16
   11264:	bl	11930 <__snprintf_chk@plt+0xadc>
   11268:	ldr	r1, [pc, #288]	; 11390 <__snprintf_chk@plt+0x53c>
   1126c:	mov	r2, r0
   11270:	mov	r0, #1
   11274:	bl	10db8 <__printf_chk@plt>
   11278:	mov	r3, r5
   1127c:	strd	r8, [sp]
   11280:	mov	r2, #21
   11284:	mov	r1, #1
   11288:	mov	r0, r4
   1128c:	bl	10d94 <__sprintf_chk@plt>
   11290:	mov	r2, r4
   11294:	ldr	r1, [pc, #248]	; 11394 <__snprintf_chk@plt+0x540>
   11298:	mov	r0, #1
   1129c:	bl	10db8 <__printf_chk@plt>
   112a0:	add	r0, sp, #16
   112a4:	bl	11930 <__snprintf_chk@plt+0xadc>
   112a8:	ldr	r1, [pc, #232]	; 11398 <__snprintf_chk@plt+0x544>
   112ac:	mov	r2, r0
   112b0:	mov	r0, #1
   112b4:	bl	10db8 <__printf_chk@plt>
   112b8:	mov	r2, #-2147483648	; 0x80000000
   112bc:	mvn	r3, #0
   112c0:	mov	r1, #1
   112c4:	strd	r2, [sp]
   112c8:	mov	r0, r4
   112cc:	mov	r3, sl
   112d0:	mov	r2, #21
   112d4:	bl	10d94 <__sprintf_chk@plt>
   112d8:	mov	r2, r4
   112dc:	ldr	r1, [pc, #184]	; 1139c <__snprintf_chk@plt+0x548>
   112e0:	mov	r0, #1
   112e4:	b	1141c <__snprintf_chk@plt+0x5c8>
   112e8:	andeq	r0, r0, r0
   112ec:	andseq	r0, r0, r0
   112f0:			; <UNDEFINED> instruction: 0xffffffff
   112f4:	svcvc	0x00efffff
   112f8:	andeq	r4, r1, pc, lsr #27
   112fc:	andeq	r4, r1, r8, lsl #26
   11300:	andeq	r4, r1, r2, asr lr
   11304:	andeq	r1, r1, ip, lsl #24
   11308:	andeq	r4, r1, sl, ror #28
   1130c:	andeq	r4, r1, r7, lsl #29
   11310:	andeq	r1, r1, r8, asr #19
   11314:	andeq	r4, r1, r8, ror lr
   11318:	andeq	r4, r1, fp, lsr #27
   1131c:	andeq	r4, r1, r4, lsl #25
   11320:	andeq	r4, r1, sp, lsl #29
   11324:	muleq	r1, fp, lr
   11328:	andeq	r4, r1, sl, lsr #29
   1132c:	andeq	r4, r1, ip, lsl #29
   11330:	muleq	r1, sl, lr
   11334:	andeq	r4, r1, pc, lsr #29
   11338:			; <UNDEFINED> instruction: 0x00014ebd
   1133c:	andeq	r4, r1, sp, asr #29
   11340:	ldrdeq	r4, [r1], -fp
   11344:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   11348:	andeq	r4, r1, fp, ror #29
   1134c:	strdeq	r4, [r1], -r8
   11350:			; <UNDEFINED> instruction: 0xffff8000
   11354:	andeq	r4, r1, r7, lsl #30
   11358:	andeq	r4, r1, r4, lsl pc
   1135c:	andeq	r4, r1, lr, lsr pc
   11360:	andeq	r4, r1, fp, asr #30
   11364:	andeq	r4, r1, r3, lsr #30
   11368:	andeq	r4, r1, pc, lsr #30
   1136c:	andeq	r4, r1, sp, lsr pc
   11370:	andeq	r4, r1, sl, asr #30
   11374:	andeq	r4, r1, r6, ror pc
   11378:	andeq	r4, r1, r4, lsl #31
   1137c:	andeq	r4, r1, r9, asr pc
   11380:	andeq	r4, r1, r6, ror #30
   11384:	andeq	r4, r1, r5, ror pc
   11388:	andeq	r4, r1, r3, lsl #31
   1138c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   11390:	andeq	r4, r1, r2, lsr #31
   11394:	muleq	r1, r3, pc	; <UNPREDICTABLE>
   11398:	andeq	r4, r1, r1, lsr #31
   1139c:			; <UNDEFINED> instruction: 0x00014fb1
   113a0:			; <UNDEFINED> instruction: 0x00014fbf
   113a4:	andeq	r4, r1, pc, asr #31
   113a8:	ldrdeq	r4, [r1], -lr
   113ac:	andeq	r4, r1, pc, ror #31
   113b0:	strdeq	r4, [r1], -lr
   113b4:	andeq	r5, r1, pc
   113b8:	andeq	r5, r1, sp, lsl r0
   113bc:	andeq	r5, r1, sp, lsr #32
   113c0:	andeq	r5, r1, fp, lsr r0
   113c4:	andeq	r5, r1, fp, asr #32
   113c8:	andeq	r5, r1, r9, asr r0
   113cc:	andeq	r5, r1, r9, rrx
   113d0:	andeq	r5, r1, r7, ror r0
   113d4:	andeq	r5, r1, r7, lsl #1
   113d8:	muleq	r1, r5, r0
   113dc:	andeq	r5, r1, r5, lsr #1
   113e0:	strheq	r5, [r1], -r3
   113e4:	andeq	r5, r1, r4, ror #1
   113e8:	strdeq	r5, [r1], -r4
   113ec:	andeq	r5, r1, r3, asr #1
   113f0:	ldrdeq	r5, [r1], -r2
   113f4:	andeq	r5, r1, r3, ror #1
   113f8:	strdeq	r5, [r1], -r3
   113fc:	andeq	r5, r1, r5, lsl #2
   11400:	andeq	r5, r1, lr, lsl #2
   11404:	andeq	r5, r1, r8, lsl r1
   11408:	andeq	r5, r1, r2, lsr #2
   1140c:	andeq	r5, r1, r7, lsl r1
   11410:	andeq	r5, r1, r1, lsr #2
   11414:	addeq	r0, r0, r0
   11418:	svcvc	0x007fffff
   1141c:	bl	10db8 <__printf_chk@plt>
   11420:	add	r0, sp, #16
   11424:	bl	11930 <__snprintf_chk@plt+0xadc>
   11428:	ldr	r1, [pc, #-144]	; 113a0 <__snprintf_chk@plt+0x54c>
   1142c:	mov	r2, r0
   11430:	mov	r0, #1
   11434:	bl	10db8 <__printf_chk@plt>
   11438:	mov	r3, r5
   1143c:	strd	r8, [sp]
   11440:	mov	r2, #21
   11444:	mov	r1, #1
   11448:	mov	r0, r4
   1144c:	bl	10d94 <__sprintf_chk@plt>
   11450:	mov	r2, r4
   11454:	ldr	r1, [pc, #-184]	; 113a4 <__snprintf_chk@plt+0x550>
   11458:	mov	r0, #1
   1145c:	bl	10db8 <__printf_chk@plt>
   11460:	add	r0, sp, #16
   11464:	bl	11930 <__snprintf_chk@plt+0xadc>
   11468:	ldr	r1, [pc, #-200]	; 113a8 <__snprintf_chk@plt+0x554>
   1146c:	mov	r2, r0
   11470:	mov	r0, #1
   11474:	bl	10db8 <__printf_chk@plt>
   11478:	mov	r2, #-2147483648	; 0x80000000
   1147c:	mvn	r3, #0
   11480:	mov	r1, #1
   11484:	strd	r2, [sp]
   11488:	mov	r0, r4
   1148c:	mov	r3, sl
   11490:	mov	r2, #21
   11494:	bl	10d94 <__sprintf_chk@plt>
   11498:	mov	r2, r4
   1149c:	ldr	r1, [pc, #-248]	; 113ac <__snprintf_chk@plt+0x558>
   114a0:	mov	r0, #1
   114a4:	bl	10db8 <__printf_chk@plt>
   114a8:	add	r0, sp, #16
   114ac:	bl	11930 <__snprintf_chk@plt+0xadc>
   114b0:	ldr	r1, [pc, #-264]	; 113b0 <__snprintf_chk@plt+0x55c>
   114b4:	mov	r2, r0
   114b8:	mov	r0, #1
   114bc:	bl	10db8 <__printf_chk@plt>
   114c0:	mov	r3, r5
   114c4:	strd	r6, [sp]
   114c8:	mov	r2, #21
   114cc:	mov	r1, #1
   114d0:	mov	r0, r4
   114d4:	bl	10d94 <__sprintf_chk@plt>
   114d8:	mov	r2, r4
   114dc:	ldr	r1, [pc, #-304]	; 113b4 <__snprintf_chk@plt+0x560>
   114e0:	mov	r0, #1
   114e4:	bl	10db8 <__printf_chk@plt>
   114e8:	add	r0, sp, #16
   114ec:	bl	11930 <__snprintf_chk@plt+0xadc>
   114f0:	ldr	r1, [pc, #-320]	; 113b8 <__snprintf_chk@plt+0x564>
   114f4:	mov	r2, r0
   114f8:	mov	r0, #1
   114fc:	bl	10db8 <__printf_chk@plt>
   11500:	mov	r3, r5
   11504:	strd	r6, [sp]
   11508:	mov	r2, #21
   1150c:	mov	r1, #1
   11510:	mov	r0, r4
   11514:	bl	10d94 <__sprintf_chk@plt>
   11518:	mov	r2, r4
   1151c:	ldr	r1, [pc, #-360]	; 113bc <__snprintf_chk@plt+0x568>
   11520:	mov	r0, #1
   11524:	bl	10db8 <__printf_chk@plt>
   11528:	add	r0, sp, #16
   1152c:	bl	11930 <__snprintf_chk@plt+0xadc>
   11530:	ldr	r1, [pc, #-376]	; 113c0 <__snprintf_chk@plt+0x56c>
   11534:	mov	r6, #0
   11538:	mov	r7, #-2147483648	; 0x80000000
   1153c:	mov	r2, r0
   11540:	mov	r0, #1
   11544:	bl	10db8 <__printf_chk@plt>
   11548:	mov	r3, r5
   1154c:	strd	r8, [sp]
   11550:	mov	r2, #21
   11554:	mov	r1, #1
   11558:	mov	r0, r4
   1155c:	bl	10d94 <__sprintf_chk@plt>
   11560:	mov	r2, r4
   11564:	ldr	r1, [pc, #-424]	; 113c4 <__snprintf_chk@plt+0x570>
   11568:	mov	r0, #1
   1156c:	bl	10db8 <__printf_chk@plt>
   11570:	add	r0, sp, #16
   11574:	bl	11930 <__snprintf_chk@plt+0xadc>
   11578:	ldr	r1, [pc, #-440]	; 113c8 <__snprintf_chk@plt+0x574>
   1157c:	mvn	r8, #0
   11580:	mvn	r9, #-2147483648	; 0x80000000
   11584:	mov	r2, r0
   11588:	mov	r0, #1
   1158c:	bl	10db8 <__printf_chk@plt>
   11590:	mov	r2, #-2147483648	; 0x80000000
   11594:	mvn	r3, #0
   11598:	mov	r1, #1
   1159c:	strd	r2, [sp]
   115a0:	mov	r0, r4
   115a4:	mov	r3, sl
   115a8:	mov	r2, #21
   115ac:	bl	10d94 <__sprintf_chk@plt>
   115b0:	mov	r2, r4
   115b4:	ldr	r1, [pc, #-496]	; 113cc <__snprintf_chk@plt+0x578>
   115b8:	mov	r0, #1
   115bc:	bl	10db8 <__printf_chk@plt>
   115c0:	add	r0, sp, #16
   115c4:	bl	11930 <__snprintf_chk@plt+0xadc>
   115c8:	ldr	r1, [pc, #-512]	; 113d0 <__snprintf_chk@plt+0x57c>
   115cc:	mov	r2, r0
   115d0:	mov	r0, #1
   115d4:	bl	10db8 <__printf_chk@plt>
   115d8:	mov	r3, r5
   115dc:	strd	r8, [sp]
   115e0:	mov	r2, #21
   115e4:	mov	r1, #1
   115e8:	mov	r0, r4
   115ec:	bl	10d94 <__sprintf_chk@plt>
   115f0:	mov	r2, r4
   115f4:	ldr	r1, [pc, #-552]	; 113d4 <__snprintf_chk@plt+0x580>
   115f8:	mov	r0, #1
   115fc:	bl	10db8 <__printf_chk@plt>
   11600:	add	r0, sp, #16
   11604:	bl	11930 <__snprintf_chk@plt+0xadc>
   11608:	ldr	r1, [pc, #-568]	; 113d8 <__snprintf_chk@plt+0x584>
   1160c:	mov	r2, r0
   11610:	mov	r0, #1
   11614:	bl	10db8 <__printf_chk@plt>
   11618:	mov	r3, sl
   1161c:	strd	r6, [sp]
   11620:	mov	r2, #21
   11624:	mov	r1, #1
   11628:	mov	r0, r4
   1162c:	bl	10d94 <__sprintf_chk@plt>
   11630:	mov	r2, r4
   11634:	ldr	r1, [pc, #-608]	; 113dc <__snprintf_chk@plt+0x588>
   11638:	mov	r0, #1
   1163c:	bl	10db8 <__printf_chk@plt>
   11640:	add	r0, sp, #16
   11644:	bl	11930 <__snprintf_chk@plt+0xadc>
   11648:	ldr	r1, [pc, #-624]	; 113e0 <__snprintf_chk@plt+0x58c>
   1164c:	mov	r2, r0
   11650:	mov	r0, #1
   11654:	bl	10db8 <__printf_chk@plt>
   11658:	mov	r3, r5
   1165c:	strd	r8, [sp]
   11660:	mov	r2, #21
   11664:	mov	r1, #1
   11668:	mov	r0, r4
   1166c:	bl	10d94 <__sprintf_chk@plt>
   11670:	mov	r2, r4
   11674:	ldr	r1, [pc, #-664]	; 113e4 <__snprintf_chk@plt+0x590>
   11678:	mov	r0, #1
   1167c:	bl	10db8 <__printf_chk@plt>
   11680:	add	r0, sp, #16
   11684:	bl	11930 <__snprintf_chk@plt+0xadc>
   11688:	ldr	r1, [pc, #-680]	; 113e8 <__snprintf_chk@plt+0x594>
   1168c:	mov	r2, r0
   11690:	mov	r0, #1
   11694:	bl	10db8 <__printf_chk@plt>
   11698:	mov	r3, sl
   1169c:	strd	r6, [sp]
   116a0:	mov	r2, #21
   116a4:	mov	r1, #1
   116a8:	mov	r0, r4
   116ac:	bl	10d94 <__sprintf_chk@plt>
   116b0:	mov	r2, r4
   116b4:	ldr	r1, [pc, #-720]	; 113ec <__snprintf_chk@plt+0x598>
   116b8:	mov	r0, #1
   116bc:	bl	10db8 <__printf_chk@plt>
   116c0:	add	r0, sp, #16
   116c4:	bl	11930 <__snprintf_chk@plt+0xadc>
   116c8:	ldr	r1, [pc, #-736]	; 113f0 <__snprintf_chk@plt+0x59c>
   116cc:	mov	r2, r0
   116d0:	mov	r0, #1
   116d4:	bl	10db8 <__printf_chk@plt>
   116d8:	mvn	r2, #0
   116dc:	mvn	r3, #0
   116e0:	mov	r1, #1
   116e4:	strd	r2, [sp]
   116e8:	mov	r0, r4
   116ec:	mov	r3, r5
   116f0:	mov	r2, #21
   116f4:	bl	10d94 <__sprintf_chk@plt>
   116f8:	mov	r2, r4
   116fc:	ldr	r1, [pc, #-784]	; 113f4 <__snprintf_chk@plt+0x5a0>
   11700:	mov	r0, #1
   11704:	bl	10db8 <__printf_chk@plt>
   11708:	add	r0, sp, #16
   1170c:	bl	11930 <__snprintf_chk@plt+0xadc>
   11710:	ldr	r1, [pc, #-800]	; 113f8 <__snprintf_chk@plt+0x5a4>
   11714:	mov	r2, r0
   11718:	mov	r0, #1
   1171c:	bl	10db8 <__printf_chk@plt>
   11720:	ldr	r1, [pc, #-812]	; 113fc <__snprintf_chk@plt+0x5a8>
   11724:	mov	r0, #1
   11728:	bl	10db8 <__printf_chk@plt>
   1172c:	vldr	s0, [pc, #-800]	; 11414 <__snprintf_chk@plt+0x5c0>
   11730:	bl	1199c <__snprintf_chk@plt+0xb48>
   11734:	ldr	r1, [pc, #-828]	; 11400 <__snprintf_chk@plt+0x5ac>
   11738:	mov	r0, #1
   1173c:	bl	10db8 <__printf_chk@plt>
   11740:	vldr	s0, [pc, #-816]	; 11418 <__snprintf_chk@plt+0x5c4>
   11744:	bl	1199c <__snprintf_chk@plt+0xb48>
   11748:	ldr	r1, [pc, #-844]	; 11404 <__snprintf_chk@plt+0x5b0>
   1174c:	mov	r0, #1
   11750:	bl	10db8 <__printf_chk@plt>
   11754:	mov	r1, #40	; 0x28
   11758:	vmov.f64	d0, d9
   1175c:	mov	r3, fp
   11760:	mov	r2, #1
   11764:	add	r0, sp, r1
   11768:	bl	11cf0 <__snprintf_chk@plt+0xe9c>
   1176c:	add	r0, sp, #40	; 0x28
   11770:	bl	10d1c <puts@plt>
   11774:	ldr	r1, [pc, #-884]	; 11408 <__snprintf_chk@plt+0x5b4>
   11778:	mov	r0, #1
   1177c:	bl	10db8 <__printf_chk@plt>
   11780:	mov	r1, #40	; 0x28
   11784:	vmov.f64	d0, d8
   11788:	mov	r3, fp
   1178c:	mov	r2, #1
   11790:	add	r0, sp, r1
   11794:	bl	11cf0 <__snprintf_chk@plt+0xe9c>
   11798:	add	r0, sp, #40	; 0x28
   1179c:	bl	10d1c <puts@plt>
   117a0:	ldr	r1, [pc, #-924]	; 1140c <__snprintf_chk@plt+0x5b8>
   117a4:	mov	r0, #1
   117a8:	bl	10db8 <__printf_chk@plt>
   117ac:	mov	r1, #40	; 0x28
   117b0:	vmov.f64	d0, d9
   117b4:	mov	r3, fp
   117b8:	mov	r2, #1
   117bc:	add	r0, sp, r1
   117c0:	bl	11f90 <__snprintf_chk@plt+0x113c>
   117c4:	add	r0, sp, #40	; 0x28
   117c8:	bl	10d1c <puts@plt>
   117cc:	ldr	r1, [pc, #-964]	; 11410 <__snprintf_chk@plt+0x5bc>
   117d0:	mov	r0, #1
   117d4:	bl	10db8 <__printf_chk@plt>
   117d8:	mov	r1, #40	; 0x28
   117dc:	vmov.f64	d0, d8
   117e0:	mov	r3, fp
   117e4:	mov	r2, #1
   117e8:	add	r0, sp, r1
   117ec:	bl	11f90 <__snprintf_chk@plt+0x113c>
   117f0:	add	r0, sp, #40	; 0x28
   117f4:	bl	10d1c <puts@plt>
   117f8:	mov	r0, fp
   117fc:	add	sp, sp, #84	; 0x54
   11800:	vpop	{d8-d9}
   11804:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11808:	mov	fp, #0
   1180c:	mov	lr, #0
   11810:	pop	{r1}		; (ldr r1, [sp], #4)
   11814:	mov	r2, sp
   11818:	push	{r2}		; (str r2, [sp, #-4]!)
   1181c:	push	{r0}		; (str r0, [sp, #-4]!)
   11820:	ldr	ip, [pc, #16]	; 11838 <__snprintf_chk@plt+0x9e4>
   11824:	push	{ip}		; (str ip, [sp, #-4]!)
   11828:	ldr	r0, [pc, #12]	; 1183c <__snprintf_chk@plt+0x9e8>
   1182c:	ldr	r3, [pc, #12]	; 11840 <__snprintf_chk@plt+0x9ec>
   11830:	bl	10d34 <__libc_start_main@plt>
   11834:	bl	10e48 <abort@plt>
   11838:	andeq	r4, r1, r4, lsr #24
   1183c:	andeq	r0, r1, r0, ror #28
   11840:	andeq	r4, r1, r4, asr #23
   11844:	ldr	r3, [pc, #20]	; 11860 <__snprintf_chk@plt+0xa0c>
   11848:	ldr	r2, [pc, #20]	; 11864 <__snprintf_chk@plt+0xa10>
   1184c:	add	r3, pc, r3
   11850:	ldr	r2, [r3, r2]
   11854:	cmp	r2, #0
   11858:	bxeq	lr
   1185c:	b	10d4c <__gmon_start__@plt>
   11860:	andeq	r4, r1, ip, lsr #15
   11864:	ldrdeq	r0, [r0], -r4
   11868:	ldr	r3, [pc, #28]	; 1188c <__snprintf_chk@plt+0xa38>
   1186c:	ldr	r0, [pc, #28]	; 11890 <__snprintf_chk@plt+0xa3c>
   11870:	sub	r3, r3, r0
   11874:	cmp	r3, #6
   11878:	bxls	lr
   1187c:	ldr	r3, [pc, #16]	; 11894 <__snprintf_chk@plt+0xa40>
   11880:	cmp	r3, #0
   11884:	bxeq	lr
   11888:	bx	r3
   1188c:	andeq	r6, r2, r7, lsr #2
   11890:	andeq	r6, r2, r4, lsr #2
   11894:	andeq	r0, r0, r0
   11898:	ldr	r1, [pc, #36]	; 118c4 <__snprintf_chk@plt+0xa70>
   1189c:	ldr	r0, [pc, #36]	; 118c8 <__snprintf_chk@plt+0xa74>
   118a0:	sub	r1, r1, r0
   118a4:	asr	r1, r1, #2
   118a8:	add	r1, r1, r1, lsr #31
   118ac:	asrs	r1, r1, #1
   118b0:	bxeq	lr
   118b4:	ldr	r3, [pc, #16]	; 118cc <__snprintf_chk@plt+0xa78>
   118b8:	cmp	r3, #0
   118bc:	bxeq	lr
   118c0:	bx	r3
   118c4:	andeq	r6, r2, r4, lsr #2
   118c8:	andeq	r6, r2, r4, lsr #2
   118cc:	andeq	r0, r0, r0
   118d0:	push	{r4, lr}
   118d4:	ldr	r4, [pc, #24]	; 118f4 <__snprintf_chk@plt+0xaa0>
   118d8:	ldrb	r3, [r4]
   118dc:	cmp	r3, #0
   118e0:	popne	{r4, pc}
   118e4:	bl	11868 <__snprintf_chk@plt+0xa14>
   118e8:	mov	r3, #1
   118ec:	strb	r3, [r4]
   118f0:	pop	{r4, pc}
   118f4:	andeq	r6, r2, r4, asr #2
   118f8:	ldr	r0, [pc, #40]	; 11928 <__snprintf_chk@plt+0xad4>
   118fc:	ldr	r3, [r0]
   11900:	cmp	r3, #0
   11904:	bne	1190c <__snprintf_chk@plt+0xab8>
   11908:	b	11898 <__snprintf_chk@plt+0xa44>
   1190c:	ldr	r3, [pc, #24]	; 1192c <__snprintf_chk@plt+0xad8>
   11910:	cmp	r3, #0
   11914:	beq	11908 <__snprintf_chk@plt+0xab4>
   11918:	push	{r4, lr}
   1191c:	blx	r3
   11920:	pop	{r4, lr}
   11924:	b	11898 <__snprintf_chk@plt+0xa44>
   11928:	andeq	r5, r2, r4, lsl pc
   1192c:	andeq	r0, r0, r0
   11930:	push	{r4, r5, r6, lr}
   11934:	ldrb	r5, [r0, #1]
   11938:	sub	r4, r5, #45	; 0x2d
   1193c:	clz	r4, r4
   11940:	lsr	r4, r4, #5
   11944:	add	r4, r4, #1
   11948:	add	r4, r0, r4
   1194c:	mov	r0, r4
   11950:	bl	10d7c <strlen@plt>
   11954:	mov	r3, #48	; 0x30
   11958:	mov	r2, r3
   1195c:	strb	r3, [r4, #-1]
   11960:	sub	r0, r0, #1
   11964:	add	r0, r4, r0
   11968:	ldrb	r3, [r0]
   1196c:	cmp	r3, #57	; 0x39
   11970:	beq	11994 <__snprintf_chk@plt+0xb40>
   11974:	cmp	r4, r0
   11978:	add	r3, r3, #1
   1197c:	strb	r3, [r0]
   11980:	movcc	r0, r4
   11984:	cmp	r5, #45	; 0x2d
   11988:	strbeq	r5, [r0, #-1]
   1198c:	subeq	r0, r0, #1
   11990:	pop	{r4, r5, r6, pc}
   11994:	strb	r2, [r0], #-1
   11998:	b	11968 <__snprintf_chk@plt+0xb14>
   1199c:	push	{lr}		; (str lr, [sp, #-4]!)
   119a0:	sub	sp, sp, #36	; 0x24
   119a4:	mov	r3, #0
   119a8:	mov	r2, #1
   119ac:	mov	r1, #31
   119b0:	mov	r0, sp
   119b4:	bl	11e40 <__snprintf_chk@plt+0xfec>
   119b8:	mov	r0, sp
   119bc:	bl	10d1c <puts@plt>
   119c0:	add	sp, sp, #36	; 0x24
   119c4:	pop	{pc}		; (ldr pc, [sp], #4)
   119c8:	subs	r5, r0, #0
   119cc:	push	{r7, lr}
   119d0:	sub	sp, sp, #56	; 0x38
   119d4:	ldr	r4, [pc, #452]	; 11ba0 <__snprintf_chk@plt+0xd4c>
   119d8:	beq	11a10 <__snprintf_chk@plt+0xbbc>
   119dc:	ldr	r3, [pc, #448]	; 11ba4 <__snprintf_chk@plt+0xd50>
   119e0:	mov	r2, #5
   119e4:	ldr	r1, [pc, #444]	; 11ba8 <__snprintf_chk@plt+0xd54>
   119e8:	mov	r0, #0
   119ec:	ldr	r6, [r3]
   119f0:	bl	10c98 <dcgettext@plt>
   119f4:	ldr	r3, [r4]
   119f8:	mov	r1, #1
   119fc:	mov	r2, r0
   11a00:	mov	r0, r6
   11a04:	bl	10ddc <__fprintf_chk@plt>
   11a08:	mov	r0, r5
   11a0c:	bl	10d70 <exit@plt>
   11a10:	mov	r2, #5
   11a14:	ldr	r1, [pc, #400]	; 11bac <__snprintf_chk@plt+0xd58>
   11a18:	bl	10c98 <dcgettext@plt>
   11a1c:	ldr	r2, [r4]
   11a20:	ldr	r4, [pc, #392]	; 11bb0 <__snprintf_chk@plt+0xd5c>
   11a24:	ldr	r8, [pc, #392]	; 11bb4 <__snprintf_chk@plt+0xd60>
   11a28:	mov	r6, r5
   11a2c:	mov	r1, r0
   11a30:	mov	r0, #1
   11a34:	bl	10db8 <__printf_chk@plt>
   11a38:	mov	r2, #5
   11a3c:	ldr	r1, [pc, #372]	; 11bb8 <__snprintf_chk@plt+0xd64>
   11a40:	mov	r0, r5
   11a44:	bl	10c98 <dcgettext@plt>
   11a48:	ldr	r1, [r4]
   11a4c:	bl	10c14 <fputs_unlocked@plt>
   11a50:	mov	r2, #5
   11a54:	ldr	r1, [pc, #352]	; 11bbc <__snprintf_chk@plt+0xd68>
   11a58:	mov	r0, r5
   11a5c:	bl	10c98 <dcgettext@plt>
   11a60:	ldr	r1, [r4]
   11a64:	bl	10c14 <fputs_unlocked@plt>
   11a68:	mov	r2, #5
   11a6c:	ldr	r1, [pc, #332]	; 11bc0 <__snprintf_chk@plt+0xd6c>
   11a70:	mov	r0, r5
   11a74:	bl	10c98 <dcgettext@plt>
   11a78:	ldr	r1, [r4]
   11a7c:	bl	10c14 <fputs_unlocked@plt>
   11a80:	ldr	lr, [pc, #316]	; 11bc4 <__snprintf_chk@plt+0xd70>
   11a84:	mov	ip, sp
   11a88:	ldm	lr!, {r0, r1, r2, r3}
   11a8c:	stmia	ip!, {r0, r1, r2, r3}
   11a90:	ldm	lr!, {r0, r1, r2, r3}
   11a94:	stmia	ip!, {r0, r1, r2, r3}
   11a98:	ldm	lr!, {r0, r1, r2, r3}
   11a9c:	stmia	ip!, {r0, r1, r2, r3}
   11aa0:	ldm	lr, {r0, r1}
   11aa4:	stm	ip, {r0, r1}
   11aa8:	ldr	r1, [sp, r6]
   11aac:	add	r7, sp, r6
   11ab0:	cmp	r1, #0
   11ab4:	bne	11b58 <__snprintf_chk@plt+0xd04>
   11ab8:	ldr	r6, [r7, #4]
   11abc:	ldr	r7, [pc, #240]	; 11bb4 <__snprintf_chk@plt+0xd60>
   11ac0:	cmp	r6, #0
   11ac4:	mov	r2, #5
   11ac8:	ldr	r1, [pc, #248]	; 11bc8 <__snprintf_chk@plt+0xd74>
   11acc:	mov	r0, #0
   11ad0:	moveq	r6, r7
   11ad4:	bl	10c98 <dcgettext@plt>
   11ad8:	ldr	r3, [pc, #236]	; 11bcc <__snprintf_chk@plt+0xd78>
   11adc:	ldr	r2, [pc, #236]	; 11bd0 <__snprintf_chk@plt+0xd7c>
   11ae0:	mov	r1, r0
   11ae4:	mov	r0, #1
   11ae8:	bl	10db8 <__printf_chk@plt>
   11aec:	mov	r1, #0
   11af0:	mov	r0, #5
   11af4:	bl	10e00 <setlocale@plt>
   11af8:	cmp	r0, #0
   11afc:	bne	11b70 <__snprintf_chk@plt+0xd1c>
   11b00:	mov	r2, #5
   11b04:	ldr	r1, [pc, #200]	; 11bd4 <__snprintf_chk@plt+0xd80>
   11b08:	mov	r0, #0
   11b0c:	bl	10c98 <dcgettext@plt>
   11b10:	ldr	r3, [pc, #156]	; 11bb4 <__snprintf_chk@plt+0xd60>
   11b14:	ldr	r2, [pc, #176]	; 11bcc <__snprintf_chk@plt+0xd78>
   11b18:	mov	r1, r0
   11b1c:	mov	r0, #1
   11b20:	bl	10db8 <__printf_chk@plt>
   11b24:	mov	r2, #5
   11b28:	ldr	r1, [pc, #168]	; 11bd8 <__snprintf_chk@plt+0xd84>
   11b2c:	mov	r0, #0
   11b30:	bl	10c98 <dcgettext@plt>
   11b34:	ldr	r2, [pc, #160]	; 11bdc <__snprintf_chk@plt+0xd88>
   11b38:	cmp	r6, r7
   11b3c:	ldr	r3, [pc, #156]	; 11be0 <__snprintf_chk@plt+0xd8c>
   11b40:	moveq	r3, r2
   11b44:	mov	r2, r6
   11b48:	mov	r1, r0
   11b4c:	mov	r0, #1
   11b50:	bl	10db8 <__printf_chk@plt>
   11b54:	b	11a08 <__snprintf_chk@plt+0xbb4>
   11b58:	mov	r0, r8
   11b5c:	bl	10c2c <strcmp@plt>
   11b60:	add	r6, r6, #8
   11b64:	cmp	r0, #0
   11b68:	bne	11aa8 <__snprintf_chk@plt+0xc54>
   11b6c:	b	11ab8 <__snprintf_chk@plt+0xc64>
   11b70:	mov	r2, #3
   11b74:	ldr	r1, [pc, #104]	; 11be4 <__snprintf_chk@plt+0xd90>
   11b78:	bl	10e3c <strncmp@plt>
   11b7c:	cmp	r0, #0
   11b80:	beq	11b00 <__snprintf_chk@plt+0xcac>
   11b84:	mov	r2, #5
   11b88:	ldr	r1, [pc, #88]	; 11be8 <__snprintf_chk@plt+0xd94>
   11b8c:	mov	r0, #0
   11b90:	bl	10c98 <dcgettext@plt>
   11b94:	ldr	r1, [r4]
   11b98:	bl	10c14 <fputs_unlocked@plt>
   11b9c:	b	11b00 <__snprintf_chk@plt+0xcac>
   11ba0:	andeq	r6, r2, r0, asr r1
   11ba4:	andeq	r6, r2, r8, lsr r1
   11ba8:	andeq	r4, r1, lr, lsl #25
   11bac:			; <UNDEFINED> instruction: 0x00014cb5
   11bb0:	andeq	r6, r2, ip, lsr r1
   11bb4:	andeq	r4, r1, r4, lsl #25
   11bb8:	andeq	r4, r1, r0, asr #25
   11bbc:	andeq	r4, r1, r9, lsl #26
   11bc0:	andeq	r4, r1, r6, lsr sp
   11bc4:	andeq	r4, r1, ip, asr #24
   11bc8:	andeq	r4, r1, ip, ror #26
   11bcc:	andeq	r4, r1, r3, lsl #27
   11bd0:	andeq	r4, r1, fp, lsr #27
   11bd4:	andeq	r4, r1, r4, lsl #28
   11bd8:	andeq	r4, r1, pc, lsl lr
   11bdc:	andeq	r5, r1, r7, asr #2
   11be0:	andeq	r4, r1, r8, lsl #26
   11be4:			; <UNDEFINED> instruction: 0x00014db9
   11be8:			; <UNDEFINED> instruction: 0x00014dbd
   11bec:	ldr	r3, [pc, #4]	; 11bf8 <__snprintf_chk@plt+0xda4>
   11bf0:	str	r0, [r3]
   11bf4:	bx	lr
   11bf8:	andeq	r6, r2, r8, asr #2
   11bfc:	ldr	r3, [pc, #4]	; 11c08 <__snprintf_chk@plt+0xdb4>
   11c00:	strb	r0, [r3, #4]
   11c04:	bx	lr
   11c08:	andeq	r6, r2, r8, asr #2
   11c0c:	ldr	r3, [pc, #192]	; 11cd4 <__snprintf_chk@plt+0xe80>
   11c10:	push	{r0, r1, r4, r5, r6, lr}
   11c14:	ldr	r0, [r3]
   11c18:	bl	14368 <__snprintf_chk@plt+0x3514>
   11c1c:	cmp	r0, #0
   11c20:	beq	11cb8 <__snprintf_chk@plt+0xe64>
   11c24:	ldr	r3, [pc, #172]	; 11cd8 <__snprintf_chk@plt+0xe84>
   11c28:	mov	r4, r3
   11c2c:	ldrb	r2, [r3, #4]
   11c30:	cmp	r2, #0
   11c34:	beq	11c48 <__snprintf_chk@plt+0xdf4>
   11c38:	bl	10d88 <__errno_location@plt>
   11c3c:	ldr	r3, [r0]
   11c40:	cmp	r3, #32
   11c44:	beq	11cb8 <__snprintf_chk@plt+0xe64>
   11c48:	mov	r2, #5
   11c4c:	ldr	r1, [pc, #136]	; 11cdc <__snprintf_chk@plt+0xe88>
   11c50:	mov	r0, #0
   11c54:	bl	10c98 <dcgettext@plt>
   11c58:	ldr	r4, [r4]
   11c5c:	cmp	r4, #0
   11c60:	mov	r5, r0
   11c64:	beq	11c9c <__snprintf_chk@plt+0xe48>
   11c68:	bl	10d88 <__errno_location@plt>
   11c6c:	ldr	r6, [r0]
   11c70:	mov	r0, r4
   11c74:	bl	13748 <__snprintf_chk@plt+0x28f4>
   11c78:	str	r5, [sp]
   11c7c:	ldr	r2, [pc, #92]	; 11ce0 <__snprintf_chk@plt+0xe8c>
   11c80:	mov	r1, r6
   11c84:	mov	r3, r0
   11c88:	mov	r0, #0
   11c8c:	bl	10d04 <error@plt>
   11c90:	ldr	r3, [pc, #76]	; 11ce4 <__snprintf_chk@plt+0xe90>
   11c94:	ldr	r0, [r3]
   11c98:	bl	10c50 <_exit@plt>
   11c9c:	bl	10d88 <__errno_location@plt>
   11ca0:	mov	r3, r5
   11ca4:	ldr	r2, [pc, #60]	; 11ce8 <__snprintf_chk@plt+0xe94>
   11ca8:	ldr	r1, [r0]
   11cac:	mov	r0, r4
   11cb0:	bl	10d04 <error@plt>
   11cb4:	b	11c90 <__snprintf_chk@plt+0xe3c>
   11cb8:	ldr	r3, [pc, #44]	; 11cec <__snprintf_chk@plt+0xe98>
   11cbc:	ldr	r0, [r3]
   11cc0:	bl	14368 <__snprintf_chk@plt+0x3514>
   11cc4:	cmp	r0, #0
   11cc8:	bne	11c90 <__snprintf_chk@plt+0xe3c>
   11ccc:	add	sp, sp, #8
   11cd0:	pop	{r4, r5, r6, pc}
   11cd4:	andeq	r6, r2, ip, lsr r1
   11cd8:	andeq	r6, r2, r8, asr #2
   11cdc:	andeq	r5, r1, sl, lsl #3
   11ce0:	muleq	r1, r6, r1
   11ce4:	andeq	r6, r2, r0, ror #1
   11ce8:	muleq	r1, sl, r1
   11cec:	andeq	r6, r2, r8, lsr r1
   11cf0:	vcmpe.f64	d0, #0.0
   11cf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11cf8:	vpush	{d8}
   11cfc:	mov	r9, r3
   11d00:	vmrs	APSR_nzcv, fpscr
   11d04:	mov	r3, #37	; 0x25
   11d08:	sub	sp, sp, #52	; 0x34
   11d0c:	add	r8, sp, #36	; 0x24
   11d10:	strb	r3, [sp, #36]	; 0x24
   11d14:	mov	r3, #45	; 0x2d
   11d18:	strb	r3, [sp, #37]	; 0x25
   11d1c:	vnegmi.f64	d7, d0
   11d20:	and	r3, r2, #1
   11d24:	vmovpl.f64	d7, d0
   11d28:	mov	r7, r1
   11d2c:	vldr	d6, [pc, #260]	; 11e38 <__snprintf_chk@plt+0xfe4>
   11d30:	add	r1, r8, #1
   11d34:	mov	ip, #43	; 0x2b
   11d38:	strb	ip, [r1, r3]
   11d3c:	mov	r6, r0
   11d40:	add	r0, r1, r3
   11d44:	lsr	r3, r2, #1
   11d48:	and	r3, r3, #1
   11d4c:	mov	ip, #32
   11d50:	vcmpe.f64	d7, d6
   11d54:	strb	ip, [r0, r3]
   11d58:	add	r1, r0, r3
   11d5c:	lsr	r3, r2, #2
   11d60:	and	r3, r3, #1
   11d64:	tst	r2, #16
   11d68:	mov	r0, #48	; 0x30
   11d6c:	strb	r0, [r1, r3]
   11d70:	add	ip, r1, r3
   11d74:	lsr	r1, r2, #3
   11d78:	movne	r2, #71	; 0x47
   11d7c:	moveq	r2, #103	; 0x67
   11d80:	vmrs	APSR_nzcv, fpscr
   11d84:	vmov.f64	d8, d0
   11d88:	and	r1, r1, #1
   11d8c:	add	r3, ip, r1
   11d90:	mov	r0, #42	; 0x2a
   11d94:	movmi	r4, #1
   11d98:	movpl	r4, #15
   11d9c:	mvn	sl, #0
   11da0:	mov	fp, #1
   11da4:	strb	r0, [ip, r1]
   11da8:	mov	r5, #0
   11dac:	mov	r1, #46	; 0x2e
   11db0:	strb	r1, [r3, #1]
   11db4:	strb	r0, [r3, #2]
   11db8:	strb	r2, [r3, #3]
   11dbc:	strb	r5, [r3, #4]
   11dc0:	mov	r2, fp
   11dc4:	mov	r3, sl
   11dc8:	vstr	d8, [sp, #16]
   11dcc:	str	r4, [sp, #8]
   11dd0:	stm	sp, {r8, r9}
   11dd4:	mov	r1, r7
   11dd8:	mov	r0, r6
   11ddc:	bl	10e54 <__snprintf_chk@plt>
   11de0:	cmp	r4, #16
   11de4:	movle	r2, #0
   11de8:	movgt	r2, #1
   11dec:	orrs	r2, r2, r0, lsr #31
   11df0:	mov	r3, r0
   11df4:	bne	11e28 <__snprintf_chk@plt+0xfd4>
   11df8:	cmp	r7, r0
   11dfc:	bls	11e20 <__snprintf_chk@plt+0xfcc>
   11e00:	str	r0, [sp, #28]
   11e04:	mov	r1, r5
   11e08:	mov	r0, r6
   11e0c:	bl	10dc4 <strtod@plt>
   11e10:	ldr	r3, [sp, #28]
   11e14:	vcmp.f64	d8, d0
   11e18:	vmrs	APSR_nzcv, fpscr
   11e1c:	beq	11e28 <__snprintf_chk@plt+0xfd4>
   11e20:	add	r4, r4, #1
   11e24:	b	11dc0 <__snprintf_chk@plt+0xf6c>
   11e28:	mov	r0, r3
   11e2c:	add	sp, sp, #52	; 0x34
   11e30:	vpop	{d8}
   11e34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e38:	andeq	r0, r0, r0
   11e3c:	andseq	r0, r0, r0
   11e40:	vcmpe.f32	s0, #0.0
   11e44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e48:	vpush	{d8-d9}
   11e4c:	mov	r9, r3
   11e50:	vmrs	APSR_nzcv, fpscr
   11e54:	mov	r3, #37	; 0x25
   11e58:	sub	sp, sp, #52	; 0x34
   11e5c:	add	r8, sp, #36	; 0x24
   11e60:	strb	r3, [sp, #36]	; 0x24
   11e64:	mov	r3, #45	; 0x2d
   11e68:	strb	r3, [sp, #37]	; 0x25
   11e6c:	vnegmi.f32	s15, s0
   11e70:	and	r3, r2, #1
   11e74:	vmovpl.f32	s15, s0
   11e78:	mov	r7, r1
   11e7c:	vldr	s14, [pc, #264]	; 11f8c <__snprintf_chk@plt+0x1138>
   11e80:	add	r1, r8, #1
   11e84:	mov	ip, #43	; 0x2b
   11e88:	strb	ip, [r1, r3]
   11e8c:	mov	r6, r0
   11e90:	add	r0, r1, r3
   11e94:	lsr	r3, r2, #1
   11e98:	and	r3, r3, #1
   11e9c:	mov	ip, #32
   11ea0:	vcmpe.f32	s15, s14
   11ea4:	strb	ip, [r0, r3]
   11ea8:	add	r1, r0, r3
   11eac:	lsr	r3, r2, #2
   11eb0:	and	r3, r3, #1
   11eb4:	vcvt.f64.f32	d9, s0
   11eb8:	tst	r2, #16
   11ebc:	mov	r0, #48	; 0x30
   11ec0:	strb	r0, [r1, r3]
   11ec4:	add	ip, r1, r3
   11ec8:	lsr	r1, r2, #3
   11ecc:	movne	r2, #71	; 0x47
   11ed0:	moveq	r2, #103	; 0x67
   11ed4:	vmrs	APSR_nzcv, fpscr
   11ed8:	vmov.f32	s16, s0
   11edc:	and	r1, r1, #1
   11ee0:	add	r3, ip, r1
   11ee4:	mov	r0, #42	; 0x2a
   11ee8:	movmi	r4, #1
   11eec:	movpl	r4, #6
   11ef0:	mvn	sl, #0
   11ef4:	mov	fp, #1
   11ef8:	strb	r0, [ip, r1]
   11efc:	mov	r5, #0
   11f00:	mov	r1, #46	; 0x2e
   11f04:	strb	r1, [r3, #1]
   11f08:	strb	r0, [r3, #2]
   11f0c:	strb	r2, [r3, #3]
   11f10:	strb	r5, [r3, #4]
   11f14:	mov	r2, fp
   11f18:	mov	r3, sl
   11f1c:	vstr	d9, [sp, #16]
   11f20:	str	r4, [sp, #8]
   11f24:	stm	sp, {r8, r9}
   11f28:	mov	r1, r7
   11f2c:	mov	r0, r6
   11f30:	bl	10e54 <__snprintf_chk@plt>
   11f34:	cmp	r4, #8
   11f38:	movle	r2, #0
   11f3c:	movgt	r2, #1
   11f40:	orrs	r2, r2, r0, lsr #31
   11f44:	mov	r3, r0
   11f48:	bne	11f7c <__snprintf_chk@plt+0x1128>
   11f4c:	cmp	r7, r0
   11f50:	bls	11f74 <__snprintf_chk@plt+0x1120>
   11f54:	str	r0, [sp, #28]
   11f58:	mov	r1, r5
   11f5c:	mov	r0, r6
   11f60:	bl	10d10 <strtof@plt>
   11f64:	ldr	r3, [sp, #28]
   11f68:	vcmp.f32	s16, s0
   11f6c:	vmrs	APSR_nzcv, fpscr
   11f70:	beq	11f7c <__snprintf_chk@plt+0x1128>
   11f74:	add	r4, r4, #1
   11f78:	b	11f14 <__snprintf_chk@plt+0x10c0>
   11f7c:	mov	r0, r3
   11f80:	add	sp, sp, #52	; 0x34
   11f84:	vpop	{d8-d9}
   11f88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f8c:	addeq	r0, r0, r0
   11f90:	vcmpe.f64	d0, #0.0
   11f94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f98:	vpush	{d8}
   11f9c:	mov	r9, r3
   11fa0:	vmrs	APSR_nzcv, fpscr
   11fa4:	mov	r3, #37	; 0x25
   11fa8:	sub	sp, sp, #52	; 0x34
   11fac:	add	r8, sp, #36	; 0x24
   11fb0:	strb	r3, [sp, #36]	; 0x24
   11fb4:	mov	r3, #45	; 0x2d
   11fb8:	strb	r3, [sp, #37]	; 0x25
   11fbc:	vnegmi.f64	d7, d0
   11fc0:	and	r3, r2, #1
   11fc4:	vmovpl.f64	d7, d0
   11fc8:	mov	r7, r1
   11fcc:	vldr	d6, [pc, #268]	; 120e0 <__snprintf_chk@plt+0x128c>
   11fd0:	add	r1, r8, #1
   11fd4:	mov	ip, #43	; 0x2b
   11fd8:	strb	ip, [r1, r3]
   11fdc:	mov	r6, r0
   11fe0:	add	r0, r1, r3
   11fe4:	lsr	r3, r2, #1
   11fe8:	and	r3, r3, #1
   11fec:	mov	ip, #32
   11ff0:	vcmpe.f64	d7, d6
   11ff4:	strb	ip, [r0, r3]
   11ff8:	add	r1, r0, r3
   11ffc:	lsr	r3, r2, #2
   12000:	and	r3, r3, #1
   12004:	tst	r2, #16
   12008:	mov	r0, #48	; 0x30
   1200c:	strb	r0, [r1, r3]
   12010:	add	ip, r1, r3
   12014:	lsr	r1, r2, #3
   12018:	movne	r2, #71	; 0x47
   1201c:	moveq	r2, #103	; 0x67
   12020:	vmrs	APSR_nzcv, fpscr
   12024:	and	r1, r1, #1
   12028:	vmov.f64	d8, d0
   1202c:	add	r3, ip, r1
   12030:	mov	r0, #42	; 0x2a
   12034:	strb	r0, [ip, r1]
   12038:	movmi	r4, #1
   1203c:	mov	r1, #46	; 0x2e
   12040:	movpl	r4, #15
   12044:	mvn	sl, #0
   12048:	mov	fp, #1
   1204c:	strb	r1, [r3, #1]
   12050:	mov	r5, #0
   12054:	mov	r1, #76	; 0x4c
   12058:	strb	r0, [r3, #2]
   1205c:	strb	r1, [r3, #3]
   12060:	strb	r2, [r3, #4]
   12064:	strb	r5, [r3, #5]
   12068:	mov	r2, fp
   1206c:	mov	r3, sl
   12070:	vstr	d8, [sp, #16]
   12074:	str	r4, [sp, #8]
   12078:	stm	sp, {r8, r9}
   1207c:	mov	r1, r7
   12080:	mov	r0, r6
   12084:	bl	10e54 <__snprintf_chk@plt>
   12088:	cmp	r4, #16
   1208c:	movle	r2, #0
   12090:	movgt	r2, #1
   12094:	orrs	r2, r2, r0, lsr #31
   12098:	mov	r3, r0
   1209c:	bne	120d0 <__snprintf_chk@plt+0x127c>
   120a0:	cmp	r7, r0
   120a4:	bls	120c8 <__snprintf_chk@plt+0x1274>
   120a8:	str	r0, [sp, #28]
   120ac:	mov	r1, r5
   120b0:	mov	r0, r6
   120b4:	bl	10c74 <strtold@plt>
   120b8:	ldr	r3, [sp, #28]
   120bc:	vcmp.f64	d8, d0
   120c0:	vmrs	APSR_nzcv, fpscr
   120c4:	beq	120d0 <__snprintf_chk@plt+0x127c>
   120c8:	add	r4, r4, #1
   120cc:	b	12068 <__snprintf_chk@plt+0x1214>
   120d0:	mov	r0, r3
   120d4:	add	sp, sp, #52	; 0x34
   120d8:	vpop	{d8}
   120dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   120e0:	andeq	r0, r0, r0
   120e4:	andseq	r0, r0, r0
   120e8:	ldr	ip, [pc, #156]	; 1218c <__snprintf_chk@plt+0x1338>
   120ec:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   120f0:	cmp	r0, #2
   120f4:	mov	r6, #0
   120f8:	ldr	r7, [ip]
   120fc:	mov	r8, ip
   12100:	str	r6, [ip]
   12104:	bne	12138 <__snprintf_chk@plt+0x12e4>
   12108:	mov	r5, r3
   1210c:	mov	r4, r2
   12110:	str	r6, [sp]
   12114:	ldr	r3, [pc, #116]	; 12190 <__snprintf_chk@plt+0x133c>
   12118:	ldr	r2, [pc, #116]	; 12194 <__snprintf_chk@plt+0x1340>
   1211c:	bl	10d58 <getopt_long@plt>
   12120:	cmn	r0, #1
   12124:	beq	12138 <__snprintf_chk@plt+0x12e4>
   12128:	cmp	r0, #104	; 0x68
   1212c:	beq	12150 <__snprintf_chk@plt+0x12fc>
   12130:	cmp	r0, #118	; 0x76
   12134:	beq	12160 <__snprintf_chk@plt+0x130c>
   12138:	ldr	r3, [pc, #88]	; 12198 <__snprintf_chk@plt+0x1344>
   1213c:	mov	r2, #0
   12140:	str	r7, [r8]
   12144:	str	r2, [r3]
   12148:	add	sp, sp, #16
   1214c:	pop	{r4, r5, r6, r7, r8, pc}
   12150:	mov	r0, r6
   12154:	ldr	r3, [sp, #44]	; 0x2c
   12158:	blx	r3
   1215c:	b	12138 <__snprintf_chk@plt+0x12e4>
   12160:	ldr	r0, [pc, #52]	; 1219c <__snprintf_chk@plt+0x1348>
   12164:	add	r3, sp, #48	; 0x30
   12168:	str	r3, [sp]
   1216c:	str	r3, [sp, #12]
   12170:	ldr	r0, [r0]
   12174:	ldr	r3, [sp, #40]	; 0x28
   12178:	mov	r2, r5
   1217c:	mov	r1, r4
   12180:	bl	13ca4 <__snprintf_chk@plt+0x2e50>
   12184:	mov	r0, r6
   12188:	bl	10d70 <exit@plt>
   1218c:	andeq	r6, r2, r0, asr #2
   12190:	andeq	r5, r1, r0, lsr #3
   12194:	ldrdeq	r5, [r1], -r0
   12198:	andeq	r6, r2, r0, lsr r1
   1219c:	andeq	r6, r2, ip, lsr r1
   121a0:	push	{r4, r5, r6, r7, r8, r9, lr}
   121a4:	sub	sp, sp, #20
   121a8:	mov	r8, r3
   121ac:	ldrb	lr, [sp, #52]	; 0x34
   121b0:	ldr	r3, [pc, #152]	; 12250 <__snprintf_chk@plt+0x13fc>
   121b4:	mov	r4, #0
   121b8:	ldr	ip, [pc, #148]	; 12254 <__snprintf_chk@plt+0x1400>
   121bc:	cmp	lr, r4
   121c0:	mov	r7, r2
   121c4:	mov	r2, #1
   121c8:	ldr	r9, [r3]
   121cc:	mov	r5, r3
   121d0:	str	r2, [r3]
   121d4:	ldr	r2, [pc, #124]	; 12258 <__snprintf_chk@plt+0x1404>
   121d8:	str	r4, [sp]
   121dc:	moveq	r2, ip
   121e0:	ldr	r3, [pc, #116]	; 1225c <__snprintf_chk@plt+0x1408>
   121e4:	ldr	r6, [sp, #56]	; 0x38
   121e8:	bl	10d58 <getopt_long@plt>
   121ec:	cmn	r0, #1
   121f0:	beq	12218 <__snprintf_chk@plt+0x13c4>
   121f4:	cmp	r0, #104	; 0x68
   121f8:	beq	12210 <__snprintf_chk@plt+0x13bc>
   121fc:	cmp	r0, #118	; 0x76
   12200:	beq	12224 <__snprintf_chk@plt+0x13d0>
   12204:	ldr	r3, [pc, #84]	; 12260 <__snprintf_chk@plt+0x140c>
   12208:	ldr	r0, [r3]
   1220c:	b	12214 <__snprintf_chk@plt+0x13c0>
   12210:	mov	r0, r4
   12214:	blx	r6
   12218:	str	r9, [r5]
   1221c:	add	sp, sp, #20
   12220:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12224:	ldr	r0, [pc, #56]	; 12264 <__snprintf_chk@plt+0x1410>
   12228:	add	r3, sp, #60	; 0x3c
   1222c:	str	r3, [sp]
   12230:	str	r3, [sp, #12]
   12234:	ldr	r0, [r0]
   12238:	ldr	r3, [sp, #48]	; 0x30
   1223c:	mov	r2, r8
   12240:	mov	r1, r7
   12244:	bl	13ca4 <__snprintf_chk@plt+0x2e50>
   12248:	mov	r0, r4
   1224c:	bl	10d70 <exit@plt>
   12250:	andeq	r6, r2, r0, asr #2
   12254:	ldrdeq	r5, [r1], -r0
   12258:	andeq	r4, r1, r8, lsl #26
   1225c:	andeq	r5, r1, r0, lsr #3
   12260:	andeq	r6, r2, r0, ror #1
   12264:	andeq	r6, r2, ip, lsr r1
   12268:	push	{r4, r5, r6, lr}
   1226c:	subs	r5, r0, #0
   12270:	bne	12288 <__snprintf_chk@plt+0x1434>
   12274:	ldr	r3, [pc, #124]	; 122f8 <__snprintf_chk@plt+0x14a4>
   12278:	ldr	r0, [pc, #124]	; 122fc <__snprintf_chk@plt+0x14a8>
   1227c:	ldr	r1, [r3]
   12280:	bl	10e30 <fputs@plt>
   12284:	bl	10e48 <abort@plt>
   12288:	mov	r1, #47	; 0x2f
   1228c:	bl	10e0c <strrchr@plt>
   12290:	cmp	r0, #0
   12294:	addne	r4, r0, #1
   12298:	moveq	r4, r5
   1229c:	sub	r3, r4, r5
   122a0:	cmp	r3, #6
   122a4:	ble	122e4 <__snprintf_chk@plt+0x1490>
   122a8:	mov	r2, #7
   122ac:	ldr	r1, [pc, #76]	; 12300 <__snprintf_chk@plt+0x14ac>
   122b0:	sub	r0, r4, #7
   122b4:	bl	10e3c <strncmp@plt>
   122b8:	cmp	r0, #0
   122bc:	bne	122e4 <__snprintf_chk@plt+0x1490>
   122c0:	mov	r2, #3
   122c4:	ldr	r1, [pc, #56]	; 12304 <__snprintf_chk@plt+0x14b0>
   122c8:	mov	r0, r4
   122cc:	bl	10e3c <strncmp@plt>
   122d0:	cmp	r0, #0
   122d4:	movne	r5, r4
   122d8:	ldreq	r3, [pc, #40]	; 12308 <__snprintf_chk@plt+0x14b4>
   122dc:	addeq	r5, r4, #3
   122e0:	streq	r5, [r3]
   122e4:	ldr	r3, [pc, #32]	; 1230c <__snprintf_chk@plt+0x14b8>
   122e8:	str	r5, [r3]
   122ec:	ldr	r3, [pc, #28]	; 12310 <__snprintf_chk@plt+0x14bc>
   122f0:	str	r5, [r3]
   122f4:	pop	{r4, r5, r6, pc}
   122f8:	andeq	r6, r2, r8, lsr r1
   122fc:	ldrdeq	r5, [r1], -pc	; <UNPREDICTABLE>
   12300:	andeq	r5, r1, r7, lsl r2
   12304:	andeq	r5, r1, pc, lsl r2
   12308:	andeq	r6, r2, r8, lsr #2
   1230c:	andeq	r6, r2, r0, asr r1
   12310:	andeq	r6, r2, ip, lsr #2
   12314:	push	{r4, r5, r6, lr}
   12318:	mov	r2, #48	; 0x30
   1231c:	mov	r5, r1
   12320:	mov	r1, #0
   12324:	mov	r4, r0
   12328:	bl	10dac <memset@plt>
   1232c:	cmp	r5, #10
   12330:	bne	12338 <__snprintf_chk@plt+0x14e4>
   12334:	bl	10e48 <abort@plt>
   12338:	str	r5, [r4]
   1233c:	mov	r0, r4
   12340:	pop	{r4, r5, r6, pc}
   12344:	push	{r4, r5, r6, lr}
   12348:	mov	r4, r0
   1234c:	mov	r5, r1
   12350:	bl	145b8 <__snprintf_chk@plt+0x3764>
   12354:	ldrb	r3, [r0]
   12358:	bic	r3, r3, #32
   1235c:	cmp	r3, #85	; 0x55
   12360:	bne	123d0 <__snprintf_chk@plt+0x157c>
   12364:	ldrb	r3, [r0, #1]
   12368:	bic	r3, r3, #32
   1236c:	cmp	r3, #84	; 0x54
   12370:	bne	123a8 <__snprintf_chk@plt+0x1554>
   12374:	ldrb	r3, [r0, #2]
   12378:	bic	r3, r3, #32
   1237c:	cmp	r3, #70	; 0x46
   12380:	bne	123a8 <__snprintf_chk@plt+0x1554>
   12384:	ldrb	r3, [r0, #3]
   12388:	cmp	r3, #45	; 0x2d
   1238c:	bne	123a8 <__snprintf_chk@plt+0x1554>
   12390:	ldrb	r3, [r0, #4]
   12394:	cmp	r3, #56	; 0x38
   12398:	bne	123a8 <__snprintf_chk@plt+0x1554>
   1239c:	ldrb	r3, [r0, #5]
   123a0:	cmp	r3, #0
   123a4:	beq	123bc <__snprintf_chk@plt+0x1568>
   123a8:	ldr	r1, [pc, #144]	; 12440 <__snprintf_chk@plt+0x15ec>
   123ac:	ldr	r0, [pc, #144]	; 12444 <__snprintf_chk@plt+0x15f0>
   123b0:	cmp	r5, #9
   123b4:	movne	r0, r1
   123b8:	pop	{r4, r5, r6, pc}
   123bc:	ldrb	r3, [r4]
   123c0:	ldr	r1, [pc, #128]	; 12448 <__snprintf_chk@plt+0x15f4>
   123c4:	ldr	r0, [pc, #128]	; 1244c <__snprintf_chk@plt+0x15f8>
   123c8:	cmp	r3, #96	; 0x60
   123cc:	b	123b4 <__snprintf_chk@plt+0x1560>
   123d0:	cmp	r3, #71	; 0x47
   123d4:	bne	123a8 <__snprintf_chk@plt+0x1554>
   123d8:	ldrb	r3, [r0, #1]
   123dc:	bic	r3, r3, #32
   123e0:	cmp	r3, #66	; 0x42
   123e4:	bne	123a8 <__snprintf_chk@plt+0x1554>
   123e8:	ldrb	r3, [r0, #2]
   123ec:	cmp	r3, #49	; 0x31
   123f0:	bne	123a8 <__snprintf_chk@plt+0x1554>
   123f4:	ldrb	r3, [r0, #3]
   123f8:	cmp	r3, #56	; 0x38
   123fc:	bne	123a8 <__snprintf_chk@plt+0x1554>
   12400:	ldrb	r3, [r0, #4]
   12404:	cmp	r3, #48	; 0x30
   12408:	bne	123a8 <__snprintf_chk@plt+0x1554>
   1240c:	ldrb	r3, [r0, #5]
   12410:	cmp	r3, #51	; 0x33
   12414:	bne	123a8 <__snprintf_chk@plt+0x1554>
   12418:	ldrb	r3, [r0, #6]
   1241c:	cmp	r3, #48	; 0x30
   12420:	bne	123a8 <__snprintf_chk@plt+0x1554>
   12424:	ldrb	r3, [r0, #7]
   12428:	cmp	r3, #0
   1242c:	bne	123a8 <__snprintf_chk@plt+0x1554>
   12430:	ldrb	r3, [r4]
   12434:	ldr	r1, [pc, #20]	; 12450 <__snprintf_chk@plt+0x15fc>
   12438:	ldr	r0, [pc, #20]	; 12454 <__snprintf_chk@plt+0x1600>
   1243c:	b	123c8 <__snprintf_chk@plt+0x1574>
   12440:	andeq	r5, r1, r9, lsl #5
   12444:	andeq	r5, r1, r7, lsl #5
   12448:	andeq	r5, r1, ip, ror r2
   1244c:	andeq	r5, r1, r8, ror r2
   12450:	andeq	r5, r1, r4, lsl #5
   12454:	andeq	r5, r1, r0, lsl #5
   12458:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1245c:	sub	sp, sp, #108	; 0x6c
   12460:	mov	r8, r0
   12464:	str	r3, [sp, #36]	; 0x24
   12468:	mov	r5, r1
   1246c:	str	r2, [sp, #44]	; 0x2c
   12470:	ldr	sl, [sp, #144]	; 0x90
   12474:	bl	10cd4 <__ctype_get_mb_cur_max@plt>
   12478:	ldr	r3, [sp, #148]	; 0x94
   1247c:	mov	r7, #0
   12480:	str	r7, [sp, #48]	; 0x30
   12484:	lsr	r6, r3, #1
   12488:	and	r6, r6, #1
   1248c:	mov	r3, #1
   12490:	str	r3, [sp, #72]	; 0x48
   12494:	str	r7, [sp, #24]
   12498:	str	r7, [sp, #32]
   1249c:	str	r7, [sp, #40]	; 0x28
   124a0:	str	r7, [sp, #60]	; 0x3c
   124a4:	str	r0, [sp, #76]	; 0x4c
   124a8:	cmp	sl, #10
   124ac:	ldrls	pc, [pc, sl, lsl #2]
   124b0:	b	126ec <__snprintf_chk@plt+0x1898>
   124b4:	andeq	r2, r1, r0, ror #9
   124b8:	andeq	r3, r1, r4, ror r1
   124bc:			; <UNDEFINED> instruction: 0x000126b8
   124c0:	andeq	r2, r1, r4, lsl #14
   124c4:	muleq	r1, r4, r6
   124c8:	andeq	r2, r1, ip, ror #9
   124cc:	andeq	r3, r1, r4, asr r1
   124d0:	strdeq	r2, [r1], -r0
   124d4:	andeq	r2, r1, r4, ror #11
   124d8:	andeq	r2, r1, r4, ror #11
   124dc:	andeq	r2, r1, r4, ror #11
   124e0:	mov	r6, #0
   124e4:	mov	r4, #0
   124e8:	b	12518 <__snprintf_chk@plt+0x16c4>
   124ec:	cmp	r6, #0
   124f0:	bne	12714 <__snprintf_chk@plt+0x18c0>
   124f4:	cmp	r5, #0
   124f8:	movne	r3, #34	; 0x22
   124fc:	strbne	r3, [r8]
   12500:	mov	r3, #1
   12504:	str	r3, [sp, #24]
   12508:	str	r3, [sp, #32]
   1250c:	mov	r4, #1
   12510:	ldr	r3, [pc, #3172]	; 1317c <__snprintf_chk@plt+0x2328>
   12514:	str	r3, [sp, #40]	; 0x28
   12518:	mov	r9, r5
   1251c:	mov	r3, #0
   12520:	str	r7, [sp, #68]	; 0x44
   12524:	str	r3, [sp, #28]
   12528:	ldr	r3, [sp, #36]	; 0x24
   1252c:	cmn	r3, #1
   12530:	bne	130c0 <__snprintf_chk@plt+0x226c>
   12534:	ldr	r3, [sp, #44]	; 0x2c
   12538:	ldr	r2, [sp, #28]
   1253c:	ldrb	r3, [r3, r2]
   12540:	adds	r3, r3, #0
   12544:	movne	r3, #1
   12548:	str	r3, [sp, #52]	; 0x34
   1254c:	ldr	r3, [sp, #52]	; 0x34
   12550:	cmp	r3, #0
   12554:	bne	1273c <__snprintf_chk@plt+0x18e8>
   12558:	sub	r2, sl, #2
   1255c:	clz	r2, r2
   12560:	lsr	r2, r2, #5
   12564:	and	r3, r6, r2
   12568:	cmp	r4, #0
   1256c:	movne	r3, #0
   12570:	andeq	r3, r3, #1
   12574:	cmp	r3, #0
   12578:	bne	12904 <__snprintf_chk@plt+0x1ab0>
   1257c:	eor	r3, r6, #1
   12580:	ands	r2, r2, r3
   12584:	beq	130f8 <__snprintf_chk@plt+0x22a4>
   12588:	ldr	r3, [sp, #68]	; 0x44
   1258c:	cmp	r3, #0
   12590:	beq	13130 <__snprintf_chk@plt+0x22dc>
   12594:	ldr	r3, [sp, #72]	; 0x48
   12598:	cmp	r3, #0
   1259c:	beq	130d4 <__snprintf_chk@plt+0x2280>
   125a0:	ldr	r3, [sp, #160]	; 0xa0
   125a4:	ldr	r2, [sp, #44]	; 0x2c
   125a8:	str	r3, [sp, #16]
   125ac:	ldr	r3, [sp, #156]	; 0x9c
   125b0:	ldr	r1, [sp, #60]	; 0x3c
   125b4:	str	r3, [sp, #12]
   125b8:	ldr	r3, [sp, #152]	; 0x98
   125bc:	str	r3, [sp, #8]
   125c0:	ldr	r3, [sp, #148]	; 0x94
   125c4:	str	r3, [sp, #4]
   125c8:	mov	r3, #5
   125cc:	str	r3, [sp]
   125d0:	ldr	r3, [sp, #36]	; 0x24
   125d4:	mov	r0, r8
   125d8:	bl	12458 <__snprintf_chk@plt+0x1604>
   125dc:	mov	r4, r0
   125e0:	b	13124 <__snprintf_chk@plt+0x22d0>
   125e4:	cmp	sl, #10
   125e8:	beq	12644 <__snprintf_chk@plt+0x17f0>
   125ec:	ldr	r4, [pc, #2956]	; 13180 <__snprintf_chk@plt+0x232c>
   125f0:	mov	r2, #5
   125f4:	mov	r1, r4
   125f8:	mov	r0, #0
   125fc:	bl	10c98 <dcgettext@plt>
   12600:	cmp	r0, r4
   12604:	str	r0, [sp, #156]	; 0x9c
   12608:	bne	12618 <__snprintf_chk@plt+0x17c4>
   1260c:	mov	r1, sl
   12610:	bl	12344 <__snprintf_chk@plt+0x14f0>
   12614:	str	r0, [sp, #156]	; 0x9c
   12618:	ldr	r4, [pc, #2916]	; 13184 <__snprintf_chk@plt+0x2330>
   1261c:	mov	r2, #5
   12620:	mov	r1, r4
   12624:	mov	r0, #0
   12628:	bl	10c98 <dcgettext@plt>
   1262c:	cmp	r0, r4
   12630:	str	r0, [sp, #160]	; 0xa0
   12634:	bne	12644 <__snprintf_chk@plt+0x17f0>
   12638:	mov	r1, sl
   1263c:	bl	12344 <__snprintf_chk@plt+0x14f0>
   12640:	str	r0, [sp, #160]	; 0xa0
   12644:	cmp	r6, #0
   12648:	moveq	r4, r6
   1264c:	beq	12664 <__snprintf_chk@plt+0x1810>
   12650:	mov	r4, #0
   12654:	b	12674 <__snprintf_chk@plt+0x1820>
   12658:	cmp	r5, r4
   1265c:	strbhi	r3, [r8, r4]
   12660:	add	r4, r4, #1
   12664:	ldr	r3, [sp, #156]	; 0x9c
   12668:	ldrb	r3, [r3, r4]
   1266c:	cmp	r3, #0
   12670:	bne	12658 <__snprintf_chk@plt+0x1804>
   12674:	ldr	r0, [sp, #160]	; 0xa0
   12678:	bl	10d7c <strlen@plt>
   1267c:	ldr	r3, [sp, #160]	; 0xa0
   12680:	str	r3, [sp, #40]	; 0x28
   12684:	mov	r3, #1
   12688:	str	r3, [sp, #24]
   1268c:	str	r0, [sp, #32]
   12690:	b	12518 <__snprintf_chk@plt+0x16c4>
   12694:	mov	r3, #1
   12698:	cmp	r6, #0
   1269c:	streq	r3, [sp, #24]
   126a0:	beq	126c0 <__snprintf_chk@plt+0x186c>
   126a4:	str	r3, [sp, #32]
   126a8:	ldr	r3, [pc, #2772]	; 13184 <__snprintf_chk@plt+0x2330>
   126ac:	mov	r4, #0
   126b0:	str	r3, [sp, #40]	; 0x28
   126b4:	b	126e4 <__snprintf_chk@plt+0x1890>
   126b8:	cmp	r6, #0
   126bc:	bne	1272c <__snprintf_chk@plt+0x18d8>
   126c0:	cmp	r5, #0
   126c4:	movne	r3, #39	; 0x27
   126c8:	strbne	r3, [r8]
   126cc:	mov	r3, #1
   126d0:	str	r3, [sp, #32]
   126d4:	mov	r6, #0
   126d8:	ldr	r3, [pc, #2724]	; 13184 <__snprintf_chk@plt+0x2330>
   126dc:	mov	r4, #1
   126e0:	str	r3, [sp, #40]	; 0x28
   126e4:	mov	sl, #2
   126e8:	b	12518 <__snprintf_chk@plt+0x16c4>
   126ec:	bl	10e48 <abort@plt>
   126f0:	mov	r6, #0
   126f4:	mov	r3, #1
   126f8:	str	r3, [sp, #24]
   126fc:	mov	r4, r6
   12700:	b	12518 <__snprintf_chk@plt+0x16c4>
   12704:	mov	r6, #1
   12708:	str	r6, [sp, #24]
   1270c:	str	r6, [sp, #32]
   12710:	b	126a8 <__snprintf_chk@plt+0x1854>
   12714:	mov	r3, #1
   12718:	str	r3, [sp, #32]
   1271c:	ldr	r3, [pc, #2648]	; 1317c <__snprintf_chk@plt+0x2328>
   12720:	str	r6, [sp, #24]
   12724:	str	r3, [sp, #40]	; 0x28
   12728:	b	124e4 <__snprintf_chk@plt+0x1690>
   1272c:	mov	r3, #1
   12730:	str	r3, [sp, #32]
   12734:	ldr	r3, [pc, #2632]	; 13184 <__snprintf_chk@plt+0x2330>
   12738:	b	12724 <__snprintf_chk@plt+0x18d0>
   1273c:	ldr	r3, [sp, #32]
   12740:	ldr	fp, [sp, #24]
   12744:	cmp	sl, #2
   12748:	moveq	fp, #0
   1274c:	andne	fp, fp, #1
   12750:	adds	r5, r3, #0
   12754:	movne	r5, #1
   12758:	ands	r3, r5, fp
   1275c:	str	r3, [sp, #64]	; 0x40
   12760:	beq	12830 <__snprintf_chk@plt+0x19dc>
   12764:	ldr	r2, [sp, #32]
   12768:	ldr	r3, [sp, #28]
   1276c:	add	r7, r3, r2
   12770:	mov	r3, r2
   12774:	ldr	r2, [sp, #36]	; 0x24
   12778:	cmp	r3, #1
   1277c:	movls	r3, #0
   12780:	movhi	r3, #1
   12784:	cmn	r2, #1
   12788:	movne	r3, #0
   1278c:	cmp	r3, #0
   12790:	beq	127a0 <__snprintf_chk@plt+0x194c>
   12794:	ldr	r0, [sp, #44]	; 0x2c
   12798:	bl	10d7c <strlen@plt>
   1279c:	str	r0, [sp, #36]	; 0x24
   127a0:	ldr	r3, [sp, #36]	; 0x24
   127a4:	cmp	r3, r7
   127a8:	bcc	12828 <__snprintf_chk@plt+0x19d4>
   127ac:	ldr	r3, [sp, #44]	; 0x2c
   127b0:	ldr	r0, [sp, #28]
   127b4:	ldr	r2, [sp, #32]
   127b8:	ldr	r1, [sp, #40]	; 0x28
   127bc:	add	r0, r3, r0
   127c0:	bl	10c80 <memcmp@plt>
   127c4:	cmp	r0, #0
   127c8:	bne	12828 <__snprintf_chk@plt+0x19d4>
   127cc:	cmp	r6, #0
   127d0:	beq	12830 <__snprintf_chk@plt+0x19dc>
   127d4:	str	r6, [sp, #24]
   127d8:	ldr	r3, [sp, #24]
   127dc:	ldr	r2, [sp, #44]	; 0x2c
   127e0:	cmp	sl, #2
   127e4:	movne	r3, #0
   127e8:	andeq	r3, r3, #1
   127ec:	cmp	r3, #0
   127f0:	ldr	r3, [sp, #160]	; 0xa0
   127f4:	movne	sl, #4
   127f8:	str	r3, [sp, #16]
   127fc:	ldr	r3, [sp, #156]	; 0x9c
   12800:	str	sl, [sp]
   12804:	str	r3, [sp, #12]
   12808:	mov	r3, #0
   1280c:	str	r3, [sp, #8]
   12810:	ldr	r3, [sp, #148]	; 0x94
   12814:	mov	r1, r9
   12818:	bic	r3, r3, #2
   1281c:	str	r3, [sp, #4]
   12820:	ldr	r3, [sp, #36]	; 0x24
   12824:	b	125d4 <__snprintf_chk@plt+0x1780>
   12828:	mov	r3, #0
   1282c:	str	r3, [sp, #64]	; 0x40
   12830:	ldr	r2, [sp, #28]
   12834:	ldr	r3, [sp, #44]	; 0x2c
   12838:	add	r3, r3, r2
   1283c:	str	r3, [sp, #80]	; 0x50
   12840:	ldr	r3, [sp, #44]	; 0x2c
   12844:	ldrb	r7, [r3, r2]
   12848:	cmp	r7, #58	; 0x3a
   1284c:	bhi	129b4 <__snprintf_chk@plt+0x1b60>
   12850:	cmp	r7, #43	; 0x2b
   12854:	bcs	12a08 <__snprintf_chk@plt+0x1bb4>
   12858:	cmp	r7, #32
   1285c:	beq	12a60 <__snprintf_chk@plt+0x1c0c>
   12860:	bhi	1290c <__snprintf_chk@plt+0x1ab8>
   12864:	cmp	r7, #9
   12868:	beq	12d14 <__snprintf_chk@plt+0x1ec0>
   1286c:	bhi	128d0 <__snprintf_chk@plt+0x1a7c>
   12870:	cmp	r7, #7
   12874:	beq	12dc0 <__snprintf_chk@plt+0x1f6c>
   12878:	bhi	12a7c <__snprintf_chk@plt+0x1c28>
   1287c:	cmp	r7, #0
   12880:	beq	12a98 <__snprintf_chk@plt+0x1c44>
   12884:	ldr	r3, [sp, #76]	; 0x4c
   12888:	cmp	r3, #1
   1288c:	bne	12e04 <__snprintf_chk@plt+0x1fb0>
   12890:	bl	10d64 <__ctype_b_loc@plt>
   12894:	sxth	r3, r7
   12898:	lsl	r3, r3, #1
   1289c:	ldr	r2, [r0]
   128a0:	ldrh	r5, [r2, r3]
   128a4:	ldr	r3, [sp, #76]	; 0x4c
   128a8:	str	r3, [sp, #56]	; 0x38
   128ac:	lsr	r5, r5, #14
   128b0:	and	r5, r5, #1
   128b4:	ldr	r3, [sp, #24]
   128b8:	eor	fp, r5, #1
   128bc:	and	fp, fp, r3
   128c0:	ands	fp, fp, #255	; 0xff
   128c4:	beq	12c4c <__snprintf_chk@plt+0x1df8>
   128c8:	mov	r5, #0
   128cc:	b	12eb0 <__snprintf_chk@plt+0x205c>
   128d0:	cmp	r7, #11
   128d4:	beq	12d1c <__snprintf_chk@plt+0x1ec8>
   128d8:	bcc	12db8 <__snprintf_chk@plt+0x1f64>
   128dc:	cmp	r7, #12
   128e0:	beq	12dc8 <__snprintf_chk@plt+0x1f74>
   128e4:	cmp	r7, #13
   128e8:	moveq	r3, #114	; 0x72
   128ec:	bne	12884 <__snprintf_chk@plt+0x1a30>
   128f0:	cmp	sl, #2
   128f4:	movne	r2, #0
   128f8:	andeq	r2, r6, #1
   128fc:	cmp	r2, #0
   12900:	beq	12a80 <__snprintf_chk@plt+0x1c2c>
   12904:	mov	sl, #2
   12908:	b	127d8 <__snprintf_chk@plt+0x1984>
   1290c:	cmp	r7, #37	; 0x25
   12910:	beq	12a08 <__snprintf_chk@plt+0x1bb4>
   12914:	bhi	12928 <__snprintf_chk@plt+0x1ad4>
   12918:	cmp	r7, #35	; 0x23
   1291c:	beq	12a54 <__snprintf_chk@plt+0x1c00>
   12920:	mov	r5, #0
   12924:	b	12a64 <__snprintf_chk@plt+0x1c10>
   12928:	cmp	r7, #39	; 0x27
   1292c:	bne	12920 <__snprintf_chk@plt+0x1acc>
   12930:	cmp	sl, #2
   12934:	ldrne	r5, [sp, #52]	; 0x34
   12938:	movne	r3, r5
   1293c:	strne	r3, [sp, #68]	; 0x44
   12940:	bne	12a0c <__snprintf_chk@plt+0x1bb8>
   12944:	cmp	r6, #0
   12948:	bne	127d8 <__snprintf_chk@plt+0x1984>
   1294c:	ldr	r2, [sp, #60]	; 0x3c
   12950:	adds	r3, r9, #0
   12954:	movne	r3, #1
   12958:	cmp	r2, #0
   1295c:	movne	r3, #0
   12960:	cmp	r3, #0
   12964:	strne	r9, [sp, #60]	; 0x3c
   12968:	movne	r9, #0
   1296c:	bne	1297c <__snprintf_chk@plt+0x1b28>
   12970:	cmp	r9, r4
   12974:	movhi	r3, #39	; 0x27
   12978:	strbhi	r3, [r8, r4]
   1297c:	add	r3, r4, #1
   12980:	cmp	r3, r9
   12984:	movcc	r2, #92	; 0x5c
   12988:	strbcc	r2, [r8, r3]
   1298c:	add	r3, r4, #2
   12990:	cmp	r3, r9
   12994:	ldr	r5, [sp, #52]	; 0x34
   12998:	movcc	r2, #39	; 0x27
   1299c:	strbcc	r2, [r8, r3]
   129a0:	add	r4, r4, #3
   129a4:	mov	fp, r6
   129a8:	str	r5, [sp, #68]	; 0x44
   129ac:	str	r6, [sp, #48]	; 0x30
   129b0:	b	12c4c <__snprintf_chk@plt+0x1df8>
   129b4:	cmp	r7, #94	; 0x5e
   129b8:	beq	12920 <__snprintf_chk@plt+0x1acc>
   129bc:	bhi	12a14 <__snprintf_chk@plt+0x1bc0>
   129c0:	cmp	r7, #90	; 0x5a
   129c4:	bhi	129fc <__snprintf_chk@plt+0x1ba8>
   129c8:	cmp	r7, #65	; 0x41
   129cc:	bcs	12a08 <__snprintf_chk@plt+0x1bb4>
   129d0:	cmp	r7, #62	; 0x3e
   129d4:	bls	12920 <__snprintf_chk@plt+0x1acc>
   129d8:	cmp	r7, #63	; 0x3f
   129dc:	bne	12884 <__snprintf_chk@plt+0x1a30>
   129e0:	cmp	sl, #2
   129e4:	beq	12b88 <__snprintf_chk@plt+0x1d34>
   129e8:	cmp	sl, #5
   129ec:	beq	12b98 <__snprintf_chk@plt+0x1d44>
   129f0:	mov	fp, #0
   129f4:	mov	r5, fp
   129f8:	b	12c4c <__snprintf_chk@plt+0x1df8>
   129fc:	cmp	r7, #92	; 0x5c
   12a00:	beq	12d24 <__snprintf_chk@plt+0x1ed0>
   12a04:	bls	12920 <__snprintf_chk@plt+0x1acc>
   12a08:	ldr	r5, [sp, #52]	; 0x34
   12a0c:	mov	fp, #0
   12a10:	b	12c4c <__snprintf_chk@plt+0x1df8>
   12a14:	cmp	r7, #122	; 0x7a
   12a18:	bhi	12a38 <__snprintf_chk@plt+0x1be4>
   12a1c:	cmp	r7, #97	; 0x61
   12a20:	bcs	12a08 <__snprintf_chk@plt+0x1bb4>
   12a24:	cmp	r7, #95	; 0x5f
   12a28:	beq	12a08 <__snprintf_chk@plt+0x1bb4>
   12a2c:	cmp	r7, #96	; 0x60
   12a30:	bne	12884 <__snprintf_chk@plt+0x1a30>
   12a34:	b	12920 <__snprintf_chk@plt+0x1acc>
   12a38:	cmp	r7, #124	; 0x7c
   12a3c:	beq	12920 <__snprintf_chk@plt+0x1acc>
   12a40:	bcc	12dd0 <__snprintf_chk@plt+0x1f7c>
   12a44:	cmp	r7, #125	; 0x7d
   12a48:	beq	12dd0 <__snprintf_chk@plt+0x1f7c>
   12a4c:	cmp	r7, #126	; 0x7e
   12a50:	bne	12884 <__snprintf_chk@plt+0x1a30>
   12a54:	ldr	r3, [sp, #28]
   12a58:	cmp	r3, #0
   12a5c:	bne	12b90 <__snprintf_chk@plt+0x1d3c>
   12a60:	ldr	r5, [sp, #52]	; 0x34
   12a64:	cmp	sl, #2
   12a68:	movne	fp, #0
   12a6c:	andeq	fp, r6, #1
   12a70:	cmp	fp, #0
   12a74:	beq	12c4c <__snprintf_chk@plt+0x1df8>
   12a78:	b	12904 <__snprintf_chk@plt+0x1ab0>
   12a7c:	mov	r3, #98	; 0x62
   12a80:	ldr	r2, [sp, #24]
   12a84:	cmp	r2, #0
   12a88:	beq	12b90 <__snprintf_chk@plt+0x1d3c>
   12a8c:	mov	r7, r3
   12a90:	mov	r5, #0
   12a94:	b	12ca4 <__snprintf_chk@plt+0x1e50>
   12a98:	ldr	r3, [sp, #24]
   12a9c:	cmp	r3, #0
   12aa0:	beq	12b6c <__snprintf_chk@plt+0x1d18>
   12aa4:	cmp	r6, #0
   12aa8:	bne	127d4 <__snprintf_chk@plt+0x1980>
   12aac:	ldr	r3, [sp, #48]	; 0x30
   12ab0:	eor	r2, r3, #1
   12ab4:	cmp	sl, #2
   12ab8:	movne	r2, #0
   12abc:	andeq	r2, r2, #1
   12ac0:	cmp	r2, #0
   12ac4:	moveq	r3, r4
   12ac8:	beq	12b00 <__snprintf_chk@plt+0x1cac>
   12acc:	cmp	r9, r4
   12ad0:	movhi	r3, #39	; 0x27
   12ad4:	strbhi	r3, [r8, r4]
   12ad8:	add	r3, r4, #1
   12adc:	cmp	r9, r3
   12ae0:	movhi	r1, #36	; 0x24
   12ae4:	strbhi	r1, [r8, r3]
   12ae8:	add	r3, r4, #2
   12aec:	cmp	r9, r3
   12af0:	movhi	r1, #39	; 0x27
   12af4:	strbhi	r1, [r8, r3]
   12af8:	add	r3, r4, #3
   12afc:	str	r2, [sp, #48]	; 0x30
   12b00:	cmp	r9, r3
   12b04:	movhi	r2, #92	; 0x5c
   12b08:	strbhi	r2, [r8, r3]
   12b0c:	cmp	fp, #0
   12b10:	add	r4, r3, #1
   12b14:	beq	130a4 <__snprintf_chk@plt+0x2250>
   12b18:	ldr	r2, [sp, #28]
   12b1c:	ldr	r1, [sp, #36]	; 0x24
   12b20:	add	r2, r2, #1
   12b24:	cmp	r1, r2
   12b28:	bls	12b64 <__snprintf_chk@plt+0x1d10>
   12b2c:	ldr	r1, [sp, #44]	; 0x2c
   12b30:	mov	r7, #48	; 0x30
   12b34:	ldrb	r2, [r1, r2]
   12b38:	sub	r2, r2, #48	; 0x30
   12b3c:	cmp	r2, #9
   12b40:	movhi	r5, r6
   12b44:	bhi	12c4c <__snprintf_chk@plt+0x1df8>
   12b48:	cmp	r9, r4
   12b4c:	add	r2, r3, #2
   12b50:	strbhi	r7, [r8, r4]
   12b54:	cmp	r9, r2
   12b58:	add	r4, r3, #3
   12b5c:	movhi	r1, #48	; 0x30
   12b60:	strbhi	r1, [r8, r2]
   12b64:	mov	r5, r6
   12b68:	b	130ac <__snprintf_chk@plt+0x2258>
   12b6c:	ldr	r3, [sp, #148]	; 0x94
   12b70:	tst	r3, #1
   12b74:	ldreq	r5, [sp, #24]
   12b78:	beq	130b8 <__snprintf_chk@plt+0x2264>
   12b7c:	ldr	r3, [sp, #28]
   12b80:	add	r3, r3, #1
   12b84:	b	12524 <__snprintf_chk@plt+0x16d0>
   12b88:	cmp	r6, #0
   12b8c:	bne	127d8 <__snprintf_chk@plt+0x1984>
   12b90:	mov	r5, #0
   12b94:	b	12a0c <__snprintf_chk@plt+0x1bb8>
   12b98:	ldr	r3, [sp, #148]	; 0x94
   12b9c:	tst	r3, #4
   12ba0:	beq	12b90 <__snprintf_chk@plt+0x1d3c>
   12ba4:	ldr	r3, [sp, #28]
   12ba8:	add	r2, r3, #2
   12bac:	ldr	r3, [sp, #36]	; 0x24
   12bb0:	cmp	r3, r2
   12bb4:	bls	12b90 <__snprintf_chk@plt+0x1d3c>
   12bb8:	ldr	r3, [sp, #44]	; 0x2c
   12bbc:	ldr	r1, [sp, #28]
   12bc0:	add	r3, r3, r1
   12bc4:	ldrb	r0, [r3, #1]
   12bc8:	cmp	r0, #63	; 0x3f
   12bcc:	bne	12b90 <__snprintf_chk@plt+0x1d3c>
   12bd0:	ldr	r3, [sp, #44]	; 0x2c
   12bd4:	ldrb	r1, [r3, r2]
   12bd8:	sub	r3, r1, #33	; 0x21
   12bdc:	uxtb	r3, r3
   12be0:	cmp	r3, #29
   12be4:	bhi	130b4 <__snprintf_chk@plt+0x2260>
   12be8:	mov	ip, #1
   12bec:	ldr	r5, [pc, #1428]	; 13188 <__snprintf_chk@plt+0x2334>
   12bf0:	ands	r5, r5, ip, lsl r3
   12bf4:	beq	12a0c <__snprintf_chk@plt+0x1bb8>
   12bf8:	cmp	r6, #0
   12bfc:	bne	127d8 <__snprintf_chk@plt+0x1984>
   12c00:	add	r3, r4, #1
   12c04:	cmp	r9, r4
   12c08:	strbhi	r0, [r8, r4]
   12c0c:	cmp	r9, r3
   12c10:	movhi	r0, #34	; 0x22
   12c14:	strbhi	r0, [r8, r3]
   12c18:	add	r3, r4, #2
   12c1c:	cmp	r9, r3
   12c20:	movhi	r0, #34	; 0x22
   12c24:	strbhi	r0, [r8, r3]
   12c28:	add	r3, r4, #3
   12c2c:	cmp	r9, r3
   12c30:	add	r4, r4, #4
   12c34:	mov	r5, r6
   12c38:	mov	fp, r6
   12c3c:	mov	r7, r1
   12c40:	movhi	r0, #63	; 0x3f
   12c44:	strbhi	r0, [r8, r3]
   12c48:	str	r2, [sp, #28]
   12c4c:	ldr	r3, [sp, #24]
   12c50:	eor	r3, r3, #1
   12c54:	cmp	sl, #2
   12c58:	orreq	r3, r3, #1
   12c5c:	eor	r3, r3, #1
   12c60:	orr	r3, r6, r3
   12c64:	tst	r3, #255	; 0xff
   12c68:	beq	12c98 <__snprintf_chk@plt+0x1e44>
   12c6c:	ldr	r3, [sp, #152]	; 0x98
   12c70:	cmp	r3, #0
   12c74:	beq	12c98 <__snprintf_chk@plt+0x1e44>
   12c78:	lsr	r2, r7, #5
   12c7c:	ldr	r1, [sp, #152]	; 0x98
   12c80:	uxtb	r2, r2
   12c84:	and	r3, r7, #31
   12c88:	ldr	r2, [r1, r2, lsl #2]
   12c8c:	lsr	r3, r2, r3
   12c90:	tst	r3, #1
   12c94:	bne	12ca4 <__snprintf_chk@plt+0x1e50>
   12c98:	ldr	r3, [sp, #64]	; 0x40
   12c9c:	cmp	r3, #0
   12ca0:	beq	12d3c <__snprintf_chk@plt+0x1ee8>
   12ca4:	cmp	r6, #0
   12ca8:	bne	127d8 <__snprintf_chk@plt+0x1984>
   12cac:	ldr	r3, [sp, #48]	; 0x30
   12cb0:	eor	r3, r3, #1
   12cb4:	cmp	sl, #2
   12cb8:	movne	r3, #0
   12cbc:	andeq	r3, r3, #1
   12cc0:	cmp	r3, #0
   12cc4:	beq	12cfc <__snprintf_chk@plt+0x1ea8>
   12cc8:	cmp	r9, r4
   12ccc:	movhi	r2, #39	; 0x27
   12cd0:	strbhi	r2, [r8, r4]
   12cd4:	add	r2, r4, #1
   12cd8:	cmp	r9, r2
   12cdc:	movhi	r1, #36	; 0x24
   12ce0:	strbhi	r1, [r8, r2]
   12ce4:	add	r2, r4, #2
   12ce8:	cmp	r9, r2
   12cec:	add	r4, r4, #3
   12cf0:	movhi	r1, #39	; 0x27
   12cf4:	strbhi	r1, [r8, r2]
   12cf8:	str	r3, [sp, #48]	; 0x30
   12cfc:	cmp	r9, r4
   12d00:	movhi	r3, #92	; 0x5c
   12d04:	strbhi	r3, [r8, r4]
   12d08:	ldr	fp, [sp, #52]	; 0x34
   12d0c:	add	r4, r4, #1
   12d10:	b	12d3c <__snprintf_chk@plt+0x1ee8>
   12d14:	mov	r3, #116	; 0x74
   12d18:	b	128f0 <__snprintf_chk@plt+0x1a9c>
   12d1c:	mov	r3, #118	; 0x76
   12d20:	b	12a80 <__snprintf_chk@plt+0x1c2c>
   12d24:	cmp	sl, #2
   12d28:	bne	12d98 <__snprintf_chk@plt+0x1f44>
   12d2c:	cmp	r6, #0
   12d30:	bne	127d8 <__snprintf_chk@plt+0x1984>
   12d34:	mov	r5, r6
   12d38:	mov	fp, r6
   12d3c:	ldr	r3, [sp, #48]	; 0x30
   12d40:	eor	fp, fp, #1
   12d44:	and	fp, fp, r3
   12d48:	tst	fp, #255	; 0xff
   12d4c:	beq	12d78 <__snprintf_chk@plt+0x1f24>
   12d50:	cmp	r9, r4
   12d54:	movhi	r3, #39	; 0x27
   12d58:	strbhi	r3, [r8, r4]
   12d5c:	add	r3, r4, #1
   12d60:	cmp	r9, r3
   12d64:	movhi	r2, #39	; 0x27
   12d68:	add	r4, r4, #2
   12d6c:	strbhi	r2, [r8, r3]
   12d70:	mov	r3, #0
   12d74:	str	r3, [sp, #48]	; 0x30
   12d78:	cmp	r9, r4
   12d7c:	strbhi	r7, [r8, r4]
   12d80:	ldr	r3, [sp, #72]	; 0x48
   12d84:	cmp	r5, #0
   12d88:	moveq	r3, #0
   12d8c:	add	r4, r4, #1
   12d90:	str	r3, [sp, #72]	; 0x48
   12d94:	b	12b7c <__snprintf_chk@plt+0x1d28>
   12d98:	ldr	r3, [sp, #24]
   12d9c:	and	r3, r3, r6
   12da0:	tst	r5, r3
   12da4:	moveq	r3, r7
   12da8:	beq	128f0 <__snprintf_chk@plt+0x1a9c>
   12dac:	mov	fp, #0
   12db0:	mov	r5, fp
   12db4:	b	12d3c <__snprintf_chk@plt+0x1ee8>
   12db8:	mov	r3, #110	; 0x6e
   12dbc:	b	128f0 <__snprintf_chk@plt+0x1a9c>
   12dc0:	mov	r3, #97	; 0x61
   12dc4:	b	12a80 <__snprintf_chk@plt+0x1c2c>
   12dc8:	mov	r3, #102	; 0x66
   12dcc:	b	12a80 <__snprintf_chk@plt+0x1c2c>
   12dd0:	ldr	r3, [sp, #36]	; 0x24
   12dd4:	cmn	r3, #1
   12dd8:	bne	12df8 <__snprintf_chk@plt+0x1fa4>
   12ddc:	ldr	r3, [sp, #44]	; 0x2c
   12de0:	ldrb	r3, [r3, #1]
   12de4:	adds	r3, r3, #0
   12de8:	movne	r3, #1
   12dec:	cmp	r3, #0
   12df0:	bne	12b90 <__snprintf_chk@plt+0x1d3c>
   12df4:	b	12a54 <__snprintf_chk@plt+0x1c00>
   12df8:	ldr	r3, [sp, #36]	; 0x24
   12dfc:	subs	r3, r3, #1
   12e00:	b	12de8 <__snprintf_chk@plt+0x1f94>
   12e04:	mov	r3, #0
   12e08:	str	r3, [sp, #96]	; 0x60
   12e0c:	str	r3, [sp, #100]	; 0x64
   12e10:	ldr	r3, [sp, #36]	; 0x24
   12e14:	cmn	r3, #1
   12e18:	bne	12e28 <__snprintf_chk@plt+0x1fd4>
   12e1c:	ldr	r0, [sp, #44]	; 0x2c
   12e20:	bl	10d7c <strlen@plt>
   12e24:	str	r0, [sp, #36]	; 0x24
   12e28:	ldr	r5, [sp, #52]	; 0x34
   12e2c:	mov	r3, #0
   12e30:	str	r3, [sp, #56]	; 0x38
   12e34:	ldr	r3, [sp, #28]
   12e38:	ldr	r2, [sp, #56]	; 0x38
   12e3c:	ldr	r1, [sp, #36]	; 0x24
   12e40:	add	r2, r3, r2
   12e44:	ldr	r3, [sp, #44]	; 0x2c
   12e48:	add	r0, sp, #92	; 0x5c
   12e4c:	add	fp, r3, r2
   12e50:	sub	r2, r1, r2
   12e54:	add	r3, sp, #96	; 0x60
   12e58:	mov	r1, fp
   12e5c:	bl	145ec <__snprintf_chk@plt+0x3798>
   12e60:	subs	r2, r0, #0
   12e64:	beq	12ea4 <__snprintf_chk@plt+0x2050>
   12e68:	cmn	r2, #1
   12e6c:	beq	1307c <__snprintf_chk@plt+0x2228>
   12e70:	cmn	r2, #2
   12e74:	bne	12fec <__snprintf_chk@plt+0x2198>
   12e78:	ldr	r2, [sp, #56]	; 0x38
   12e7c:	ldr	r3, [sp, #28]
   12e80:	add	r3, r3, r2
   12e84:	ldr	r2, [sp, #36]	; 0x24
   12e88:	cmp	r2, r3
   12e8c:	bls	1307c <__snprintf_chk@plt+0x2228>
   12e90:	ldr	r3, [sp, #80]	; 0x50
   12e94:	ldr	r2, [sp, #56]	; 0x38
   12e98:	ldrb	r5, [r3, r2]
   12e9c:	cmp	r5, #0
   12ea0:	bne	12fdc <__snprintf_chk@plt+0x2188>
   12ea4:	ldr	r3, [sp, #56]	; 0x38
   12ea8:	cmp	r3, #1
   12eac:	bls	128b4 <__snprintf_chk@plt+0x1a60>
   12eb0:	ldr	r2, [sp, #56]	; 0x38
   12eb4:	ldr	r3, [sp, #28]
   12eb8:	mov	fp, #0
   12ebc:	add	r3, r3, r2
   12ec0:	ldr	r2, [sp, #24]
   12ec4:	str	r3, [sp, #52]	; 0x34
   12ec8:	eor	r3, r5, #1
   12ecc:	and	r3, r3, r2
   12ed0:	mov	ip, #92	; 0x5c
   12ed4:	uxtb	r3, r3
   12ed8:	mov	r2, #39	; 0x27
   12edc:	cmp	r3, #0
   12ee0:	beq	13084 <__snprintf_chk@plt+0x2230>
   12ee4:	cmp	r6, #0
   12ee8:	bne	127d4 <__snprintf_chk@plt+0x1980>
   12eec:	ldr	r1, [sp, #48]	; 0x30
   12ef0:	eor	r1, r1, #1
   12ef4:	cmp	sl, #2
   12ef8:	movne	r1, #0
   12efc:	andeq	r1, r1, #1
   12f00:	cmp	r1, #0
   12f04:	beq	12f34 <__snprintf_chk@plt+0x20e0>
   12f08:	add	r0, r4, #1
   12f0c:	cmp	r9, r4
   12f10:	strbhi	r2, [r8, r4]
   12f14:	cmp	r9, r0
   12f18:	movhi	lr, #36	; 0x24
   12f1c:	strbhi	lr, [r8, r0]
   12f20:	add	r0, r4, #2
   12f24:	add	r4, r4, #3
   12f28:	cmp	r9, r0
   12f2c:	strbhi	r2, [r8, r0]
   12f30:	str	r1, [sp, #48]	; 0x30
   12f34:	add	r0, r4, #1
   12f38:	cmp	r9, r4
   12f3c:	strbhi	ip, [r8, r4]
   12f40:	cmp	r9, r0
   12f44:	lsrhi	r1, r7, #6
   12f48:	addhi	r1, r1, #48	; 0x30
   12f4c:	strbhi	r1, [r8, r0]
   12f50:	add	r0, r4, #2
   12f54:	cmp	r9, r0
   12f58:	lsrhi	r1, r7, #3
   12f5c:	and	r7, r7, #7
   12f60:	andhi	r1, r1, #7
   12f64:	add	r4, r4, #3
   12f68:	add	r7, r7, #48	; 0x30
   12f6c:	mov	fp, r3
   12f70:	addhi	r1, r1, #48	; 0x30
   12f74:	strbhi	r1, [r8, r0]
   12f78:	ldr	r1, [sp, #28]
   12f7c:	ldr	r0, [sp, #52]	; 0x34
   12f80:	add	r1, r1, #1
   12f84:	cmp	r0, r1
   12f88:	bls	12d3c <__snprintf_chk@plt+0x1ee8>
   12f8c:	ldr	lr, [sp, #48]	; 0x30
   12f90:	eor	r0, fp, #1
   12f94:	and	r0, r0, lr
   12f98:	tst	r0, #255	; 0xff
   12f9c:	beq	12fc0 <__snprintf_chk@plt+0x216c>
   12fa0:	add	r0, r4, #1
   12fa4:	cmp	r9, r4
   12fa8:	strbhi	r2, [r8, r4]
   12fac:	cmp	r9, r0
   12fb0:	add	r4, r4, #2
   12fb4:	strbhi	r2, [r8, r0]
   12fb8:	mov	r0, #0
   12fbc:	str	r0, [sp, #48]	; 0x30
   12fc0:	ldr	r0, [sp, #44]	; 0x2c
   12fc4:	cmp	r9, r4
   12fc8:	strbhi	r7, [r8, r4]
   12fcc:	str	r1, [sp, #28]
   12fd0:	add	r4, r4, #1
   12fd4:	ldrb	r7, [r0, r1]
   12fd8:	b	12edc <__snprintf_chk@plt+0x2088>
   12fdc:	ldr	r3, [sp, #56]	; 0x38
   12fe0:	add	r3, r3, #1
   12fe4:	str	r3, [sp, #56]	; 0x38
   12fe8:	b	12e78 <__snprintf_chk@plt+0x2024>
   12fec:	cmp	sl, #2
   12ff0:	movne	r3, #0
   12ff4:	andeq	r3, r6, #1
   12ff8:	cmp	r3, #0
   12ffc:	movne	r1, #1
   13000:	bne	1305c <__snprintf_chk@plt+0x2208>
   13004:	ldr	r0, [sp, #92]	; 0x5c
   13008:	str	r2, [sp, #84]	; 0x54
   1300c:	bl	10cbc <iswprint@plt>
   13010:	ldr	r3, [sp, #56]	; 0x38
   13014:	ldr	r2, [sp, #84]	; 0x54
   13018:	add	r3, r3, r2
   1301c:	str	r3, [sp, #56]	; 0x38
   13020:	cmp	r0, #0
   13024:	add	r0, sp, #96	; 0x60
   13028:	moveq	r5, #0
   1302c:	bl	10c68 <mbsinit@plt>
   13030:	cmp	r0, #0
   13034:	beq	12e34 <__snprintf_chk@plt+0x1fe0>
   13038:	b	12ea4 <__snprintf_chk@plt+0x2050>
   1303c:	ldrb	r3, [fp, r1]
   13040:	cmp	r3, #94	; 0x5e
   13044:	beq	12904 <__snprintf_chk@plt+0x1ab0>
   13048:	bhi	13068 <__snprintf_chk@plt+0x2214>
   1304c:	sub	r3, r3, #91	; 0x5b
   13050:	cmp	r3, #1
   13054:	bls	12904 <__snprintf_chk@plt+0x1ab0>
   13058:	add	r1, r1, #1
   1305c:	cmp	r1, r2
   13060:	bne	1303c <__snprintf_chk@plt+0x21e8>
   13064:	b	13004 <__snprintf_chk@plt+0x21b0>
   13068:	cmp	r3, #96	; 0x60
   1306c:	beq	12904 <__snprintf_chk@plt+0x1ab0>
   13070:	cmp	r3, #124	; 0x7c
   13074:	bne	13058 <__snprintf_chk@plt+0x2204>
   13078:	b	12904 <__snprintf_chk@plt+0x1ab0>
   1307c:	mov	r5, #0
   13080:	b	12ea4 <__snprintf_chk@plt+0x2050>
   13084:	ldr	r1, [sp, #64]	; 0x40
   13088:	cmp	r1, #0
   1308c:	beq	12f78 <__snprintf_chk@plt+0x2124>
   13090:	cmp	r9, r4
   13094:	strbhi	ip, [r8, r4]
   13098:	str	r3, [sp, #64]	; 0x40
   1309c:	add	r4, r4, #1
   130a0:	b	12f78 <__snprintf_chk@plt+0x2124>
   130a4:	mov	r5, fp
   130a8:	ldr	fp, [sp, #24]
   130ac:	mov	r7, #48	; 0x30
   130b0:	b	12c4c <__snprintf_chk@plt+0x1df8>
   130b4:	mov	r5, #0
   130b8:	mov	fp, r5
   130bc:	b	12c4c <__snprintf_chk@plt+0x1df8>
   130c0:	ldr	r3, [sp, #36]	; 0x24
   130c4:	ldr	r2, [sp, #28]
   130c8:	subs	r3, r3, r2
   130cc:	movne	r3, #1
   130d0:	b	12548 <__snprintf_chk@plt+0x16f4>
   130d4:	ldr	r3, [sp, #60]	; 0x3c
   130d8:	clz	r7, r9
   130dc:	cmp	r3, #0
   130e0:	lsr	r7, r7, #5
   130e4:	moveq	r7, #0
   130e8:	cmp	r7, #0
   130ec:	mov	r5, r3
   130f0:	bne	124a8 <__snprintf_chk@plt+0x1654>
   130f4:	ldr	r3, [sp, #68]	; 0x44
   130f8:	ldr	r2, [sp, #40]	; 0x28
   130fc:	cmp	r2, #0
   13100:	moveq	r3, #0
   13104:	andne	r3, r3, #1
   13108:	cmp	r3, #0
   1310c:	movne	r3, r2
   13110:	subne	r2, r3, #1
   13114:	bne	13144 <__snprintf_chk@plt+0x22f0>
   13118:	cmp	r9, r4
   1311c:	movhi	r3, #0
   13120:	strbhi	r3, [r8, r4]
   13124:	mov	r0, r4
   13128:	add	sp, sp, #108	; 0x6c
   1312c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13130:	mov	r3, r2
   13134:	b	130f8 <__snprintf_chk@plt+0x22a4>
   13138:	cmp	r9, r4
   1313c:	strbhi	r3, [r8, r4]
   13140:	add	r4, r4, #1
   13144:	ldrb	r3, [r2, #1]!
   13148:	cmp	r3, #0
   1314c:	bne	13138 <__snprintf_chk@plt+0x22e4>
   13150:	b	13118 <__snprintf_chk@plt+0x22c4>
   13154:	ldr	r3, [pc, #32]	; 1317c <__snprintf_chk@plt+0x2328>
   13158:	mov	r6, #1
   1315c:	str	r6, [sp, #24]
   13160:	str	r6, [sp, #32]
   13164:	str	r3, [sp, #40]	; 0x28
   13168:	mov	r4, #0
   1316c:	mov	sl, #5
   13170:	b	12518 <__snprintf_chk@plt+0x16c4>
   13174:	mov	r6, #1
   13178:	b	1270c <__snprintf_chk@plt+0x18b8>
   1317c:	andeq	r5, r1, r7, lsl #5
   13180:	andeq	r5, r1, fp, lsl #5
   13184:	andeq	r5, r1, r9, lsl #5
   13188:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   1318c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13190:	sub	sp, sp, #52	; 0x34
   13194:	mov	r6, r0
   13198:	mov	r5, r3
   1319c:	mov	r8, r1
   131a0:	mov	r9, r2
   131a4:	bl	10d88 <__errno_location@plt>
   131a8:	ldr	r7, [pc, #380]	; 1332c <__snprintf_chk@plt+0x24d8>
   131ac:	cmn	r6, #-2147483647	; 0x80000001
   131b0:	ldr	r4, [r7]
   131b4:	ldr	r3, [r0]
   131b8:	str	r0, [sp, #24]
   131bc:	str	r3, [sp, #32]
   131c0:	movne	r3, #0
   131c4:	moveq	r3, #1
   131c8:	orrs	r3, r3, r6, lsr #31
   131cc:	beq	131d4 <__snprintf_chk@plt+0x2380>
   131d0:	bl	10e48 <abort@plt>
   131d4:	ldr	r2, [r7, #4]
   131d8:	cmp	r6, r2
   131dc:	blt	1324c <__snprintf_chk@plt+0x23f8>
   131e0:	add	r1, sp, #48	; 0x30
   131e4:	add	sl, r7, #8
   131e8:	str	r2, [r1, #-4]!
   131ec:	cmp	r4, sl
   131f0:	mov	r3, #8
   131f4:	sub	r2, r6, r2
   131f8:	movne	r0, r4
   131fc:	str	r3, [sp]
   13200:	add	r2, r2, #1
   13204:	mvn	r3, #-2147483648	; 0x80000000
   13208:	moveq	r0, #0
   1320c:	bl	13f20 <__snprintf_chk@plt+0x30cc>
   13210:	cmp	r4, sl
   13214:	ldr	r2, [sp, #44]	; 0x2c
   13218:	mov	fp, r0
   1321c:	str	r0, [r7]
   13220:	ldmeq	r4, {r0, r1}
   13224:	mov	r4, fp
   13228:	stmeq	fp, {r0, r1}
   1322c:	ldr	r0, [r7, #4]
   13230:	mov	r1, #0
   13234:	sub	r2, r2, r0
   13238:	add	r0, fp, r0, lsl #3
   1323c:	lsl	r2, r2, #3
   13240:	bl	10dac <memset@plt>
   13244:	ldr	r3, [sp, #44]	; 0x2c
   13248:	str	r3, [r7, #4]
   1324c:	ldr	r3, [r5, #4]
   13250:	add	sl, r4, r6, lsl #3
   13254:	orr	r3, r3, #1
   13258:	str	r3, [sp, #28]
   1325c:	add	r3, r5, #8
   13260:	str	r3, [sp, #36]	; 0x24
   13264:	ldr	r3, [r5, #44]	; 0x2c
   13268:	ldr	fp, [r4, r6, lsl #3]
   1326c:	ldr	r7, [sl, #4]
   13270:	str	r3, [sp, #16]
   13274:	ldr	r3, [r5, #40]	; 0x28
   13278:	mov	r2, r8
   1327c:	str	r3, [sp, #12]
   13280:	add	r3, r5, #8
   13284:	str	r3, [sp, #8]
   13288:	ldr	r3, [sp, #28]
   1328c:	mov	r1, fp
   13290:	str	r3, [sp, #4]
   13294:	ldr	r3, [r5]
   13298:	mov	r0, r7
   1329c:	str	r3, [sp]
   132a0:	mov	r3, r9
   132a4:	bl	12458 <__snprintf_chk@plt+0x1604>
   132a8:	cmp	fp, r0
   132ac:	bhi	13314 <__snprintf_chk@plt+0x24c0>
   132b0:	ldr	r3, [pc, #120]	; 13330 <__snprintf_chk@plt+0x24dc>
   132b4:	add	fp, r0, #1
   132b8:	cmp	r7, r3
   132bc:	str	fp, [r4, r6, lsl #3]
   132c0:	beq	132cc <__snprintf_chk@plt+0x2478>
   132c4:	mov	r0, r7
   132c8:	bl	144d0 <__snprintf_chk@plt+0x367c>
   132cc:	mov	r0, fp
   132d0:	bl	13dd8 <__snprintf_chk@plt+0x2f84>
   132d4:	ldr	r3, [r5, #44]	; 0x2c
   132d8:	mov	r2, r8
   132dc:	mov	r1, fp
   132e0:	str	r0, [sl, #4]
   132e4:	str	r3, [sp, #16]
   132e8:	ldr	r3, [r5, #40]	; 0x28
   132ec:	mov	r7, r0
   132f0:	str	r3, [sp, #12]
   132f4:	add	r3, r5, #8
   132f8:	str	r3, [sp, #8]
   132fc:	ldr	r3, [sp, #28]
   13300:	str	r3, [sp, #4]
   13304:	ldr	r3, [r5]
   13308:	str	r3, [sp]
   1330c:	mov	r3, r9
   13310:	bl	12458 <__snprintf_chk@plt+0x1604>
   13314:	ldr	r3, [sp, #24]
   13318:	ldr	r2, [sp, #32]
   1331c:	mov	r0, r7
   13320:	str	r2, [r3]
   13324:	add	sp, sp, #52	; 0x34
   13328:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1332c:	andeq	r6, r2, r4, ror #1
   13330:	andeq	r6, r2, r4, asr r1
   13334:	push	{r4, r5, r6, lr}
   13338:	mov	r5, r0
   1333c:	bl	10d88 <__errno_location@plt>
   13340:	cmp	r5, #0
   13344:	mov	r1, #48	; 0x30
   13348:	ldr	r6, [r0]
   1334c:	mov	r4, r0
   13350:	ldr	r0, [pc, #12]	; 13364 <__snprintf_chk@plt+0x2510>
   13354:	movne	r0, r5
   13358:	bl	141b4 <__snprintf_chk@plt+0x3360>
   1335c:	str	r6, [r4]
   13360:	pop	{r4, r5, r6, pc}
   13364:	andeq	r6, r2, r4, asr r2
   13368:	ldr	r3, [pc, #12]	; 1337c <__snprintf_chk@plt+0x2528>
   1336c:	cmp	r0, #0
   13370:	moveq	r0, r3
   13374:	ldr	r0, [r0]
   13378:	bx	lr
   1337c:	andeq	r6, r2, r4, asr r2
   13380:	ldr	r3, [pc, #12]	; 13394 <__snprintf_chk@plt+0x2540>
   13384:	cmp	r0, #0
   13388:	moveq	r0, r3
   1338c:	str	r1, [r0]
   13390:	bx	lr
   13394:	andeq	r6, r2, r4, asr r2
   13398:	ldr	r3, [pc, #52]	; 133d4 <__snprintf_chk@plt+0x2580>
   1339c:	cmp	r0, #0
   133a0:	moveq	r0, r3
   133a4:	add	r3, r0, #8
   133a8:	push	{lr}		; (str lr, [sp, #-4]!)
   133ac:	lsr	lr, r1, #5
   133b0:	and	r1, r1, #31
   133b4:	ldr	ip, [r3, lr, lsl #2]
   133b8:	lsr	r0, ip, r1
   133bc:	eor	r2, r2, r0
   133c0:	and	r2, r2, #1
   133c4:	and	r0, r0, #1
   133c8:	eor	r1, ip, r2, lsl r1
   133cc:	str	r1, [r3, lr, lsl #2]
   133d0:	pop	{pc}		; (ldr pc, [sp], #4)
   133d4:	andeq	r6, r2, r4, asr r2
   133d8:	ldr	r3, [pc, #16]	; 133f0 <__snprintf_chk@plt+0x259c>
   133dc:	cmp	r0, #0
   133e0:	movne	r3, r0
   133e4:	ldr	r0, [r3, #4]
   133e8:	str	r1, [r3, #4]
   133ec:	bx	lr
   133f0:	andeq	r6, r2, r4, asr r2
   133f4:	ldr	r3, [pc, #44]	; 13428 <__snprintf_chk@plt+0x25d4>
   133f8:	cmp	r0, #0
   133fc:	moveq	r0, r3
   13400:	mov	r3, #10
   13404:	cmp	r2, #0
   13408:	cmpne	r1, #0
   1340c:	str	r3, [r0]
   13410:	bne	1341c <__snprintf_chk@plt+0x25c8>
   13414:	push	{r4, lr}
   13418:	bl	10e48 <abort@plt>
   1341c:	str	r1, [r0, #40]	; 0x28
   13420:	str	r2, [r0, #44]	; 0x2c
   13424:	bx	lr
   13428:	andeq	r6, r2, r4, asr r2
   1342c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13430:	sub	sp, sp, #24
   13434:	mov	sl, r3
   13438:	ldr	r4, [sp, #56]	; 0x38
   1343c:	ldr	r3, [pc, #100]	; 134a8 <__snprintf_chk@plt+0x2654>
   13440:	cmp	r4, #0
   13444:	moveq	r4, r3
   13448:	mov	r7, r0
   1344c:	mov	r8, r1
   13450:	mov	r9, r2
   13454:	bl	10d88 <__errno_location@plt>
   13458:	ldr	r3, [r4, #44]	; 0x2c
   1345c:	mov	r2, r9
   13460:	mov	r1, r8
   13464:	ldr	r6, [r0]
   13468:	str	r3, [sp, #16]
   1346c:	ldr	r3, [r4, #40]	; 0x28
   13470:	mov	r5, r0
   13474:	str	r3, [sp, #12]
   13478:	add	r3, r4, #8
   1347c:	str	r3, [sp, #8]
   13480:	ldr	r3, [r4, #4]
   13484:	mov	r0, r7
   13488:	str	r3, [sp, #4]
   1348c:	ldr	r3, [r4]
   13490:	str	r3, [sp]
   13494:	mov	r3, sl
   13498:	bl	12458 <__snprintf_chk@plt+0x1604>
   1349c:	str	r6, [r5]
   134a0:	add	sp, sp, #24
   134a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   134a8:	andeq	r6, r2, r4, asr r2
   134ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134b0:	cmp	r3, #0
   134b4:	sub	sp, sp, #44	; 0x2c
   134b8:	ldr	r4, [pc, #188]	; 1357c <__snprintf_chk@plt+0x2728>
   134bc:	mov	r6, r2
   134c0:	movne	r4, r3
   134c4:	mov	sl, r1
   134c8:	mov	r9, r0
   134cc:	bl	10d88 <__errno_location@plt>
   134d0:	ldr	r5, [r4, #4]
   134d4:	add	fp, r4, #8
   134d8:	cmp	r6, #0
   134dc:	orreq	r5, r5, #1
   134e0:	mov	r1, #0
   134e4:	mov	r2, r9
   134e8:	ldr	r3, [r0]
   134ec:	mov	r8, r0
   134f0:	str	r3, [sp, #28]
   134f4:	ldr	r3, [r4, #44]	; 0x2c
   134f8:	mov	r0, r1
   134fc:	str	r3, [sp, #16]
   13500:	ldr	r3, [r4, #40]	; 0x28
   13504:	stmib	sp, {r5, fp}
   13508:	str	r3, [sp, #12]
   1350c:	ldr	r3, [r4]
   13510:	str	r3, [sp]
   13514:	mov	r3, sl
   13518:	bl	12458 <__snprintf_chk@plt+0x1604>
   1351c:	add	r1, r0, #1
   13520:	mov	r7, r0
   13524:	mov	r0, r1
   13528:	str	r1, [sp, #36]	; 0x24
   1352c:	bl	13dd8 <__snprintf_chk@plt+0x2f84>
   13530:	ldr	r3, [r4, #44]	; 0x2c
   13534:	mov	r2, r9
   13538:	str	r3, [sp, #16]
   1353c:	ldr	r3, [r4, #40]	; 0x28
   13540:	stmib	sp, {r5, fp}
   13544:	str	r3, [sp, #12]
   13548:	ldr	r3, [r4]
   1354c:	ldr	r1, [sp, #36]	; 0x24
   13550:	str	r3, [sp]
   13554:	mov	r3, sl
   13558:	str	r0, [sp, #32]
   1355c:	bl	12458 <__snprintf_chk@plt+0x1604>
   13560:	ldr	r3, [sp, #28]
   13564:	cmp	r6, #0
   13568:	str	r3, [r8]
   1356c:	ldr	r0, [sp, #32]
   13570:	strne	r7, [r6]
   13574:	add	sp, sp, #44	; 0x2c
   13578:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1357c:	andeq	r6, r2, r4, asr r2
   13580:	mov	r3, r2
   13584:	mov	r2, #0
   13588:	b	134ac <__snprintf_chk@plt+0x2658>
   1358c:	push	{r4, r5, r6, r7, r8, lr}
   13590:	mov	r6, #1
   13594:	ldr	r4, [pc, #104]	; 13604 <__snprintf_chk@plt+0x27b0>
   13598:	ldr	r5, [r4]
   1359c:	add	r7, r5, #12
   135a0:	ldr	r3, [r4, #4]
   135a4:	add	r7, r7, #8
   135a8:	cmp	r6, r3
   135ac:	blt	135f4 <__snprintf_chk@plt+0x27a0>
   135b0:	ldr	r0, [r5, #4]
   135b4:	ldr	r6, [pc, #76]	; 13608 <__snprintf_chk@plt+0x27b4>
   135b8:	cmp	r0, r6
   135bc:	beq	135d0 <__snprintf_chk@plt+0x277c>
   135c0:	bl	144d0 <__snprintf_chk@plt+0x367c>
   135c4:	mov	r3, #256	; 0x100
   135c8:	str	r3, [r4, #8]
   135cc:	str	r6, [r4, #12]
   135d0:	ldr	r6, [pc, #52]	; 1360c <__snprintf_chk@plt+0x27b8>
   135d4:	cmp	r5, r6
   135d8:	beq	135e8 <__snprintf_chk@plt+0x2794>
   135dc:	mov	r0, r5
   135e0:	bl	144d0 <__snprintf_chk@plt+0x367c>
   135e4:	str	r6, [r4]
   135e8:	mov	r3, #1
   135ec:	str	r3, [r4, #4]
   135f0:	pop	{r4, r5, r6, r7, r8, pc}
   135f4:	ldr	r0, [r7, #-8]
   135f8:	bl	144d0 <__snprintf_chk@plt+0x367c>
   135fc:	add	r6, r6, #1
   13600:	b	135a0 <__snprintf_chk@plt+0x274c>
   13604:	andeq	r6, r2, r4, ror #1
   13608:	andeq	r6, r2, r4, asr r1
   1360c:	andeq	r6, r2, ip, ror #1
   13610:	ldr	r3, [pc, #4]	; 1361c <__snprintf_chk@plt+0x27c8>
   13614:	mvn	r2, #0
   13618:	b	1318c <__snprintf_chk@plt+0x2338>
   1361c:	andeq	r6, r2, r4, asr r2
   13620:	ldr	r3, [pc]	; 13628 <__snprintf_chk@plt+0x27d4>
   13624:	b	1318c <__snprintf_chk@plt+0x2338>
   13628:	andeq	r6, r2, r4, asr r2
   1362c:	mov	r1, r0
   13630:	mov	r0, #0
   13634:	b	13610 <__snprintf_chk@plt+0x27bc>
   13638:	mov	r2, r1
   1363c:	mov	r1, r0
   13640:	mov	r0, #0
   13644:	b	13620 <__snprintf_chk@plt+0x27cc>
   13648:	push	{r4, r5, lr}
   1364c:	sub	sp, sp, #52	; 0x34
   13650:	mov	r5, r2
   13654:	mov	r4, r0
   13658:	mov	r0, sp
   1365c:	bl	12314 <__snprintf_chk@plt+0x14c0>
   13660:	mov	r3, sp
   13664:	mvn	r2, #0
   13668:	mov	r1, r5
   1366c:	mov	r0, r4
   13670:	bl	1318c <__snprintf_chk@plt+0x2338>
   13674:	add	sp, sp, #52	; 0x34
   13678:	pop	{r4, r5, pc}
   1367c:	push	{r4, r5, r6, lr}
   13680:	sub	sp, sp, #48	; 0x30
   13684:	mov	r5, r2
   13688:	mov	r6, r3
   1368c:	mov	r4, r0
   13690:	mov	r0, sp
   13694:	bl	12314 <__snprintf_chk@plt+0x14c0>
   13698:	mov	r3, sp
   1369c:	mov	r2, r6
   136a0:	mov	r1, r5
   136a4:	mov	r0, r4
   136a8:	bl	1318c <__snprintf_chk@plt+0x2338>
   136ac:	add	sp, sp, #48	; 0x30
   136b0:	pop	{r4, r5, r6, pc}
   136b4:	mov	r2, r1
   136b8:	mov	r1, r0
   136bc:	mov	r0, #0
   136c0:	b	13648 <__snprintf_chk@plt+0x27f4>
   136c4:	mov	r3, r2
   136c8:	mov	r2, r1
   136cc:	mov	r1, r0
   136d0:	mov	r0, #0
   136d4:	b	1367c <__snprintf_chk@plt+0x2828>
   136d8:	push	{r4, r5, r6, lr}
   136dc:	mov	r4, r0
   136e0:	ldr	lr, [pc, #80]	; 13738 <__snprintf_chk@plt+0x28e4>
   136e4:	mov	r5, r1
   136e8:	mov	r6, r2
   136ec:	ldm	lr!, {r0, r1, r2, r3}
   136f0:	sub	sp, sp, #48	; 0x30
   136f4:	mov	ip, sp
   136f8:	stmia	ip!, {r0, r1, r2, r3}
   136fc:	ldm	lr!, {r0, r1, r2, r3}
   13700:	stmia	ip!, {r0, r1, r2, r3}
   13704:	ldm	lr, {r0, r1, r2, r3}
   13708:	stm	ip, {r0, r1, r2, r3}
   1370c:	mov	r1, r6
   13710:	mov	r2, #1
   13714:	mov	r0, sp
   13718:	bl	13398 <__snprintf_chk@plt+0x2544>
   1371c:	mov	r3, sp
   13720:	mov	r2, r5
   13724:	mov	r1, r4
   13728:	mov	r0, #0
   1372c:	bl	1318c <__snprintf_chk@plt+0x2338>
   13730:	add	sp, sp, #48	; 0x30
   13734:	pop	{r4, r5, r6, pc}
   13738:	andeq	r6, r2, r4, asr r2
   1373c:	mov	r2, r1
   13740:	mvn	r1, #0
   13744:	b	136d8 <__snprintf_chk@plt+0x2884>
   13748:	mov	r1, #58	; 0x3a
   1374c:	b	1373c <__snprintf_chk@plt+0x28e8>
   13750:	mov	r2, #58	; 0x3a
   13754:	b	136d8 <__snprintf_chk@plt+0x2884>
   13758:	push	{r4, r5, lr}
   1375c:	sub	sp, sp, #100	; 0x64
   13760:	mov	r4, r0
   13764:	mov	r0, sp
   13768:	mov	r5, r2
   1376c:	bl	12314 <__snprintf_chk@plt+0x14c0>
   13770:	mov	ip, sp
   13774:	add	lr, sp, #48	; 0x30
   13778:	ldm	ip!, {r0, r1, r2, r3}
   1377c:	stmia	lr!, {r0, r1, r2, r3}
   13780:	ldm	ip!, {r0, r1, r2, r3}
   13784:	stmia	lr!, {r0, r1, r2, r3}
   13788:	ldm	ip, {r0, r1, r2, r3}
   1378c:	stm	lr, {r0, r1, r2, r3}
   13790:	mov	r2, #1
   13794:	mov	r1, #58	; 0x3a
   13798:	add	r0, sp, #48	; 0x30
   1379c:	bl	13398 <__snprintf_chk@plt+0x2544>
   137a0:	add	r3, sp, #48	; 0x30
   137a4:	mvn	r2, #0
   137a8:	mov	r1, r5
   137ac:	mov	r0, r4
   137b0:	bl	1318c <__snprintf_chk@plt+0x2338>
   137b4:	add	sp, sp, #100	; 0x64
   137b8:	pop	{r4, r5, pc}
   137bc:	push	{r4, r5, r6, r7, lr}
   137c0:	mov	r4, r0
   137c4:	ldr	lr, [pc, #84]	; 13820 <__snprintf_chk@plt+0x29cc>
   137c8:	mov	r6, r1
   137cc:	mov	r7, r2
   137d0:	mov	r5, r3
   137d4:	ldm	lr!, {r0, r1, r2, r3}
   137d8:	sub	sp, sp, #52	; 0x34
   137dc:	mov	ip, sp
   137e0:	stmia	ip!, {r0, r1, r2, r3}
   137e4:	ldm	lr!, {r0, r1, r2, r3}
   137e8:	stmia	ip!, {r0, r1, r2, r3}
   137ec:	ldm	lr, {r0, r1, r2, r3}
   137f0:	stm	ip, {r0, r1, r2, r3}
   137f4:	mov	r2, r7
   137f8:	mov	r1, r6
   137fc:	mov	r0, sp
   13800:	bl	133f4 <__snprintf_chk@plt+0x25a0>
   13804:	mov	r3, sp
   13808:	ldr	r2, [sp, #72]	; 0x48
   1380c:	mov	r1, r5
   13810:	mov	r0, r4
   13814:	bl	1318c <__snprintf_chk@plt+0x2338>
   13818:	add	sp, sp, #52	; 0x34
   1381c:	pop	{r4, r5, r6, r7, pc}
   13820:	andeq	r6, r2, r4, asr r2
   13824:	mvn	ip, #0
   13828:	push	{r0, r1, r2, lr}
   1382c:	str	ip, [sp]
   13830:	bl	137bc <__snprintf_chk@plt+0x2968>
   13834:	add	sp, sp, #12
   13838:	pop	{pc}		; (ldr pc, [sp], #4)
   1383c:	mov	r3, r2
   13840:	mov	r2, r1
   13844:	mov	r1, r0
   13848:	mov	r0, #0
   1384c:	b	13824 <__snprintf_chk@plt+0x29d0>
   13850:	push	{r0, r1, r2, lr}
   13854:	str	r3, [sp]
   13858:	mov	r3, r2
   1385c:	mov	r2, r1
   13860:	mov	r1, r0
   13864:	mov	r0, #0
   13868:	bl	137bc <__snprintf_chk@plt+0x2968>
   1386c:	add	sp, sp, #12
   13870:	pop	{pc}		; (ldr pc, [sp], #4)
   13874:	ldr	r3, [pc]	; 1387c <__snprintf_chk@plt+0x2a28>
   13878:	b	1318c <__snprintf_chk@plt+0x2338>
   1387c:	strdeq	r6, [r2], -r4
   13880:	mov	r2, r1
   13884:	mov	r1, r0
   13888:	mov	r0, #0
   1388c:	b	13874 <__snprintf_chk@plt+0x2a20>
   13890:	mvn	r2, #0
   13894:	b	13874 <__snprintf_chk@plt+0x2a20>
   13898:	mov	r1, r0
   1389c:	mov	r0, #0
   138a0:	b	13890 <__snprintf_chk@plt+0x2a3c>
   138a4:	push	{r4, r5, r6, lr}
   138a8:	sub	sp, sp, #32
   138ac:	cmp	r1, #0
   138b0:	mov	r5, r0
   138b4:	ldr	r4, [sp, #48]	; 0x30
   138b8:	ldr	r6, [sp, #52]	; 0x34
   138bc:	beq	13970 <__snprintf_chk@plt+0x2b1c>
   138c0:	stm	sp, {r2, r3}
   138c4:	mov	r3, r1
   138c8:	ldr	r2, [pc, #860]	; 13c2c <__snprintf_chk@plt+0x2dd8>
   138cc:	mov	r1, #1
   138d0:	bl	10ddc <__fprintf_chk@plt>
   138d4:	mov	r2, #5
   138d8:	ldr	r1, [pc, #848]	; 13c30 <__snprintf_chk@plt+0x2ddc>
   138dc:	mov	r0, #0
   138e0:	bl	10c98 <dcgettext@plt>
   138e4:	ldr	r3, [pc, #840]	; 13c34 <__snprintf_chk@plt+0x2de0>
   138e8:	ldr	r2, [pc, #840]	; 13c38 <__snprintf_chk@plt+0x2de4>
   138ec:	str	r3, [sp]
   138f0:	mov	r1, #1
   138f4:	mov	r3, r0
   138f8:	mov	r0, r5
   138fc:	bl	10ddc <__fprintf_chk@plt>
   13900:	mov	r1, r5
   13904:	mov	r0, #10
   13908:	bl	10c8c <fputc_unlocked@plt>
   1390c:	mov	r2, #5
   13910:	ldr	r1, [pc, #804]	; 13c3c <__snprintf_chk@plt+0x2de8>
   13914:	mov	r0, #0
   13918:	bl	10c98 <dcgettext@plt>
   1391c:	mov	r1, #1
   13920:	ldr	r3, [pc, #792]	; 13c40 <__snprintf_chk@plt+0x2dec>
   13924:	mov	r2, r0
   13928:	mov	r0, r5
   1392c:	bl	10ddc <__fprintf_chk@plt>
   13930:	mov	r1, r5
   13934:	mov	r0, #10
   13938:	bl	10c8c <fputc_unlocked@plt>
   1393c:	cmp	r6, #9
   13940:	ldrls	pc, [pc, r6, lsl #2]
   13944:	b	13c20 <__snprintf_chk@plt+0x2dcc>
   13948:	andeq	r3, r1, r0, ror #20
   1394c:	andeq	r3, r1, r8, lsl #19
   13950:			; <UNDEFINED> instruction: 0x000139b4
   13954:	andeq	r3, r1, r8, ror #19
   13958:	andeq	r3, r1, r4, lsr #20
   1395c:	andeq	r3, r1, r8, ror #20
   13960:			; <UNDEFINED> instruction: 0x00013ab0
   13964:	andeq	r3, r1, r0, lsl #22
   13968:	andeq	r3, r1, r8, asr fp
   1396c:			; <UNDEFINED> instruction: 0x00013bb8
   13970:	str	r3, [sp]
   13974:	mov	r1, #1
   13978:	mov	r3, r2
   1397c:	ldr	r2, [pc, #704]	; 13c44 <__snprintf_chk@plt+0x2df0>
   13980:	bl	10ddc <__fprintf_chk@plt>
   13984:	b	138d4 <__snprintf_chk@plt+0x2a80>
   13988:	mov	r2, #5
   1398c:	ldr	r1, [pc, #692]	; 13c48 <__snprintf_chk@plt+0x2df4>
   13990:	mov	r0, #0
   13994:	bl	10c98 <dcgettext@plt>
   13998:	ldr	r3, [r4]
   1399c:	mov	r1, #1
   139a0:	mov	r2, r0
   139a4:	mov	r0, r5
   139a8:	add	sp, sp, #32
   139ac:	pop	{r4, r5, r6, lr}
   139b0:	b	10ddc <__fprintf_chk@plt>
   139b4:	mov	r2, #5
   139b8:	ldr	r1, [pc, #652]	; 13c4c <__snprintf_chk@plt+0x2df8>
   139bc:	mov	r0, #0
   139c0:	bl	10c98 <dcgettext@plt>
   139c4:	ldr	r3, [r4, #4]
   139c8:	mov	r1, #1
   139cc:	str	r3, [sp, #48]	; 0x30
   139d0:	ldr	r3, [r4]
   139d4:	mov	r2, r0
   139d8:	mov	r0, r5
   139dc:	add	sp, sp, #32
   139e0:	pop	{r4, r5, r6, lr}
   139e4:	b	10ddc <__fprintf_chk@plt>
   139e8:	mov	r2, #5
   139ec:	ldr	r1, [pc, #604]	; 13c50 <__snprintf_chk@plt+0x2dfc>
   139f0:	mov	r0, #0
   139f4:	bl	10c98 <dcgettext@plt>
   139f8:	ldr	r3, [r4, #8]
   139fc:	mov	r1, #1
   13a00:	str	r3, [sp, #52]	; 0x34
   13a04:	ldr	r3, [r4, #4]
   13a08:	str	r3, [sp, #48]	; 0x30
   13a0c:	ldr	r3, [r4]
   13a10:	mov	r2, r0
   13a14:	mov	r0, r5
   13a18:	add	sp, sp, #32
   13a1c:	pop	{r4, r5, r6, lr}
   13a20:	b	10ddc <__fprintf_chk@plt>
   13a24:	mov	r2, #5
   13a28:	ldr	r1, [pc, #548]	; 13c54 <__snprintf_chk@plt+0x2e00>
   13a2c:	mov	r0, #0
   13a30:	bl	10c98 <dcgettext@plt>
   13a34:	ldr	r3, [r4, #12]
   13a38:	mov	r1, #1
   13a3c:	str	r3, [sp, #8]
   13a40:	ldr	r3, [r4, #8]
   13a44:	str	r3, [sp, #4]
   13a48:	ldr	r3, [r4, #4]
   13a4c:	str	r3, [sp]
   13a50:	ldr	r3, [r4]
   13a54:	mov	r2, r0
   13a58:	mov	r0, r5
   13a5c:	bl	10ddc <__fprintf_chk@plt>
   13a60:	add	sp, sp, #32
   13a64:	pop	{r4, r5, r6, pc}
   13a68:	mov	r2, #5
   13a6c:	ldr	r1, [pc, #484]	; 13c58 <__snprintf_chk@plt+0x2e04>
   13a70:	mov	r0, #0
   13a74:	bl	10c98 <dcgettext@plt>
   13a78:	ldr	r3, [r4, #16]
   13a7c:	mov	r1, #1
   13a80:	str	r3, [sp, #12]
   13a84:	ldr	r3, [r4, #12]
   13a88:	str	r3, [sp, #8]
   13a8c:	ldr	r3, [r4, #8]
   13a90:	str	r3, [sp, #4]
   13a94:	ldr	r3, [r4, #4]
   13a98:	str	r3, [sp]
   13a9c:	ldr	r3, [r4]
   13aa0:	mov	r2, r0
   13aa4:	mov	r0, r5
   13aa8:	bl	10ddc <__fprintf_chk@plt>
   13aac:	b	13a60 <__snprintf_chk@plt+0x2c0c>
   13ab0:	mov	r2, #5
   13ab4:	ldr	r1, [pc, #416]	; 13c5c <__snprintf_chk@plt+0x2e08>
   13ab8:	mov	r0, #0
   13abc:	bl	10c98 <dcgettext@plt>
   13ac0:	ldr	r3, [r4, #20]
   13ac4:	mov	r1, #1
   13ac8:	str	r3, [sp, #16]
   13acc:	ldr	r3, [r4, #16]
   13ad0:	str	r3, [sp, #12]
   13ad4:	ldr	r3, [r4, #12]
   13ad8:	str	r3, [sp, #8]
   13adc:	ldr	r3, [r4, #8]
   13ae0:	str	r3, [sp, #4]
   13ae4:	ldr	r3, [r4, #4]
   13ae8:	str	r3, [sp]
   13aec:	ldr	r3, [r4]
   13af0:	mov	r2, r0
   13af4:	mov	r0, r5
   13af8:	bl	10ddc <__fprintf_chk@plt>
   13afc:	b	13a60 <__snprintf_chk@plt+0x2c0c>
   13b00:	mov	r2, #5
   13b04:	ldr	r1, [pc, #340]	; 13c60 <__snprintf_chk@plt+0x2e0c>
   13b08:	mov	r0, #0
   13b0c:	bl	10c98 <dcgettext@plt>
   13b10:	ldr	r3, [r4, #24]
   13b14:	mov	r1, #1
   13b18:	str	r3, [sp, #20]
   13b1c:	ldr	r3, [r4, #20]
   13b20:	str	r3, [sp, #16]
   13b24:	ldr	r3, [r4, #16]
   13b28:	str	r3, [sp, #12]
   13b2c:	ldr	r3, [r4, #12]
   13b30:	str	r3, [sp, #8]
   13b34:	ldr	r3, [r4, #8]
   13b38:	str	r3, [sp, #4]
   13b3c:	ldr	r3, [r4, #4]
   13b40:	str	r3, [sp]
   13b44:	ldr	r3, [r4]
   13b48:	mov	r2, r0
   13b4c:	mov	r0, r5
   13b50:	bl	10ddc <__fprintf_chk@plt>
   13b54:	b	13a60 <__snprintf_chk@plt+0x2c0c>
   13b58:	mov	r2, #5
   13b5c:	ldr	r1, [pc, #256]	; 13c64 <__snprintf_chk@plt+0x2e10>
   13b60:	mov	r0, #0
   13b64:	bl	10c98 <dcgettext@plt>
   13b68:	ldr	r3, [r4, #28]
   13b6c:	mov	r1, #1
   13b70:	str	r3, [sp, #24]
   13b74:	ldr	r3, [r4, #24]
   13b78:	str	r3, [sp, #20]
   13b7c:	ldr	r3, [r4, #20]
   13b80:	str	r3, [sp, #16]
   13b84:	ldr	r3, [r4, #16]
   13b88:	str	r3, [sp, #12]
   13b8c:	ldr	r3, [r4, #12]
   13b90:	str	r3, [sp, #8]
   13b94:	ldr	r3, [r4, #8]
   13b98:	str	r3, [sp, #4]
   13b9c:	ldr	r3, [r4, #4]
   13ba0:	str	r3, [sp]
   13ba4:	ldr	r3, [r4]
   13ba8:	mov	r2, r0
   13bac:	mov	r0, r5
   13bb0:	bl	10ddc <__fprintf_chk@plt>
   13bb4:	b	13a60 <__snprintf_chk@plt+0x2c0c>
   13bb8:	ldr	r1, [pc, #168]	; 13c68 <__snprintf_chk@plt+0x2e14>
   13bbc:	mov	r2, #5
   13bc0:	mov	r0, #0
   13bc4:	bl	10c98 <dcgettext@plt>
   13bc8:	ldr	r3, [r4, #32]
   13bcc:	mov	r1, #1
   13bd0:	str	r3, [sp, #28]
   13bd4:	ldr	r3, [r4, #28]
   13bd8:	str	r3, [sp, #24]
   13bdc:	ldr	r3, [r4, #24]
   13be0:	str	r3, [sp, #20]
   13be4:	ldr	r3, [r4, #20]
   13be8:	str	r3, [sp, #16]
   13bec:	ldr	r3, [r4, #16]
   13bf0:	str	r3, [sp, #12]
   13bf4:	ldr	r3, [r4, #12]
   13bf8:	str	r3, [sp, #8]
   13bfc:	ldr	r3, [r4, #8]
   13c00:	str	r3, [sp, #4]
   13c04:	ldr	r3, [r4, #4]
   13c08:	str	r3, [sp]
   13c0c:	ldr	r3, [r4]
   13c10:	mov	r2, r0
   13c14:	mov	r0, r5
   13c18:	bl	10ddc <__fprintf_chk@plt>
   13c1c:	b	13a60 <__snprintf_chk@plt+0x2c0c>
   13c20:	mov	r2, #5
   13c24:	ldr	r1, [pc, #64]	; 13c6c <__snprintf_chk@plt+0x2e18>
   13c28:	b	13bc0 <__snprintf_chk@plt+0x2d6c>
   13c2c:	ldrdeq	r5, [r1], -fp
   13c30:	andeq	r5, r1, lr, ror #5
   13c34:	andeq	r0, r0, r6, ror #15
   13c38:			; <UNDEFINED> instruction: 0x000155bc
   13c3c:	strdeq	r5, [r1], -r2
   13c40:	muleq	r1, sp, r3
   13c44:	andeq	r5, r1, r7, ror #5
   13c48:			; <UNDEFINED> instruction: 0x000153bf
   13c4c:	andeq	r5, r1, pc, asr #7
   13c50:	andeq	r5, r1, r6, ror #7
   13c54:	andeq	r5, r1, r2, lsl #8
   13c58:	andeq	r5, r1, r2, lsr #8
   13c5c:	andeq	r5, r1, r6, asr #8
   13c60:	andeq	r5, r1, lr, ror #8
   13c64:	muleq	r1, sl, r4
   13c68:	andeq	r5, r1, sl, asr #9
   13c6c:	strdeq	r5, [r1], -lr
   13c70:	push	{r0, r1, r4, lr}
   13c74:	mov	ip, #0
   13c78:	ldr	lr, [sp, #16]
   13c7c:	ldr	r4, [lr, ip, lsl #2]
   13c80:	cmp	r4, #0
   13c84:	bne	13c9c <__snprintf_chk@plt+0x2e48>
   13c88:	str	ip, [sp, #4]
   13c8c:	str	lr, [sp]
   13c90:	bl	138a4 <__snprintf_chk@plt+0x2a50>
   13c94:	add	sp, sp, #8
   13c98:	pop	{r4, pc}
   13c9c:	add	ip, ip, #1
   13ca0:	b	13c7c <__snprintf_chk@plt+0x2e28>
   13ca4:	push	{r4, r5, lr}
   13ca8:	sub	sp, sp, #52	; 0x34
   13cac:	mov	ip, #0
   13cb0:	ldr	r5, [sp, #64]	; 0x40
   13cb4:	add	lr, sp, #8
   13cb8:	ldr	r4, [r5, ip, lsl #2]
   13cbc:	cmp	r4, #0
   13cc0:	str	r4, [lr, ip, lsl #2]
   13cc4:	beq	13cd4 <__snprintf_chk@plt+0x2e80>
   13cc8:	add	ip, ip, #1
   13ccc:	cmp	ip, #10
   13cd0:	bne	13cb8 <__snprintf_chk@plt+0x2e64>
   13cd4:	str	ip, [sp, #4]
   13cd8:	str	lr, [sp]
   13cdc:	bl	138a4 <__snprintf_chk@plt+0x2a50>
   13ce0:	add	sp, sp, #52	; 0x34
   13ce4:	pop	{r4, r5, pc}
   13ce8:	push	{r3}		; (str r3, [sp, #-4]!)
   13cec:	push	{r0, r1, r2, r3, lr}
   13cf0:	add	r3, sp, #24
   13cf4:	str	r3, [sp, #12]
   13cf8:	str	r3, [sp]
   13cfc:	ldr	r3, [sp, #20]
   13d00:	bl	13ca4 <__snprintf_chk@plt+0x2e50>
   13d04:	add	sp, sp, #16
   13d08:	pop	{lr}		; (ldr lr, [sp], #4)
   13d0c:	add	sp, sp, #4
   13d10:	bx	lr
   13d14:	ldr	r3, [pc, #116]	; 13d90 <__snprintf_chk@plt+0x2f3c>
   13d18:	push	{r4, lr}
   13d1c:	mov	r0, #10
   13d20:	ldr	r1, [r3]
   13d24:	bl	10c8c <fputc_unlocked@plt>
   13d28:	mov	r2, #5
   13d2c:	ldr	r1, [pc, #96]	; 13d94 <__snprintf_chk@plt+0x2f40>
   13d30:	mov	r0, #0
   13d34:	bl	10c98 <dcgettext@plt>
   13d38:	ldr	r2, [pc, #88]	; 13d98 <__snprintf_chk@plt+0x2f44>
   13d3c:	mov	r1, r0
   13d40:	mov	r0, #1
   13d44:	bl	10db8 <__printf_chk@plt>
   13d48:	mov	r2, #5
   13d4c:	ldr	r1, [pc, #72]	; 13d9c <__snprintf_chk@plt+0x2f48>
   13d50:	mov	r0, #0
   13d54:	bl	10c98 <dcgettext@plt>
   13d58:	ldr	r3, [pc, #64]	; 13da0 <__snprintf_chk@plt+0x2f4c>
   13d5c:	ldr	r2, [pc, #64]	; 13da4 <__snprintf_chk@plt+0x2f50>
   13d60:	mov	r1, r0
   13d64:	mov	r0, #1
   13d68:	bl	10db8 <__printf_chk@plt>
   13d6c:	mov	r2, #5
   13d70:	ldr	r1, [pc, #48]	; 13da8 <__snprintf_chk@plt+0x2f54>
   13d74:	mov	r0, #0
   13d78:	bl	10c98 <dcgettext@plt>
   13d7c:	ldr	r2, [pc, #40]	; 13dac <__snprintf_chk@plt+0x2f58>
   13d80:	pop	{r4, lr}
   13d84:	mov	r1, r0
   13d88:	mov	r0, #1
   13d8c:	b	10db8 <__printf_chk@plt>
   13d90:	andeq	r6, r2, ip, lsr r1
   13d94:	andeq	r5, r1, sl, lsr r5
   13d98:	andeq	r5, r1, lr, asr #10
   13d9c:	andeq	r5, r1, r4, ror #10
   13da0:	andeq	r4, r1, r3, lsl #27
   13da4:	andeq	r4, r1, fp, lsr #27
   13da8:	andeq	r5, r1, r8, ror r5
   13dac:	muleq	r1, pc, r5	; <UNPREDICTABLE>
   13db0:	push	{r4, lr}
   13db4:	bl	142cc <__snprintf_chk@plt+0x3478>
   13db8:	cmp	r0, #0
   13dbc:	popne	{r4, pc}
   13dc0:	bl	14244 <__snprintf_chk@plt+0x33f0>
   13dc4:	push	{r4, lr}
   13dc8:	bl	142cc <__snprintf_chk@plt+0x3478>
   13dcc:	cmp	r0, #0
   13dd0:	popne	{r4, pc}
   13dd4:	bl	14244 <__snprintf_chk@plt+0x33f0>
   13dd8:	b	13db0 <__snprintf_chk@plt+0x2f5c>
   13ddc:	push	{r4, r5, r6, lr}
   13de0:	mov	r5, r0
   13de4:	mov	r4, r1
   13de8:	bl	1430c <__snprintf_chk@plt+0x34b8>
   13dec:	cmp	r0, #0
   13df0:	popne	{r4, r5, r6, pc}
   13df4:	adds	r4, r4, #0
   13df8:	movne	r4, #1
   13dfc:	cmp	r5, #0
   13e00:	orreq	r4, r4, #1
   13e04:	cmp	r4, #0
   13e08:	popeq	{r4, r5, r6, pc}
   13e0c:	bl	14244 <__snprintf_chk@plt+0x33f0>
   13e10:	push	{r4, lr}
   13e14:	cmp	r1, #0
   13e18:	orreq	r1, r1, #1
   13e1c:	bl	1430c <__snprintf_chk@plt+0x34b8>
   13e20:	cmp	r0, #0
   13e24:	popne	{r4, pc}
   13e28:	bl	14244 <__snprintf_chk@plt+0x33f0>
   13e2c:	push	{r4, r5, r6, lr}
   13e30:	mov	r6, r0
   13e34:	mov	r5, r1
   13e38:	mov	r4, r2
   13e3c:	bl	1463c <__snprintf_chk@plt+0x37e8>
   13e40:	cmp	r0, #0
   13e44:	popne	{r4, r5, r6, pc}
   13e48:	cmp	r6, #0
   13e4c:	beq	13e5c <__snprintf_chk@plt+0x3008>
   13e50:	cmp	r5, #0
   13e54:	cmpne	r4, #0
   13e58:	popeq	{r4, r5, r6, pc}
   13e5c:	bl	14244 <__snprintf_chk@plt+0x33f0>
   13e60:	b	13e2c <__snprintf_chk@plt+0x2fd8>
   13e64:	cmp	r2, #0
   13e68:	cmpne	r1, #0
   13e6c:	moveq	r2, #1
   13e70:	moveq	r1, r2
   13e74:	push	{r4, lr}
   13e78:	bl	1463c <__snprintf_chk@plt+0x37e8>
   13e7c:	cmp	r0, #0
   13e80:	popne	{r4, pc}
   13e84:	bl	14244 <__snprintf_chk@plt+0x33f0>
   13e88:	mov	r2, r1
   13e8c:	mov	r1, r0
   13e90:	mov	r0, #0
   13e94:	b	13e2c <__snprintf_chk@plt+0x2fd8>
   13e98:	mov	r2, r1
   13e9c:	mov	r1, r0
   13ea0:	mov	r0, #0
   13ea4:	b	13e64 <__snprintf_chk@plt+0x3010>
   13ea8:	push	{r4, r5, r6, r7, r8, lr}
   13eac:	subs	r7, r0, #0
   13eb0:	mov	r5, r1
   13eb4:	mov	r6, r2
   13eb8:	ldr	r4, [r1]
   13ebc:	bne	13ef8 <__snprintf_chk@plt+0x30a4>
   13ec0:	cmp	r4, #0
   13ec4:	bne	13ee0 <__snprintf_chk@plt+0x308c>
   13ec8:	mov	r1, r2
   13ecc:	mov	r0, #64	; 0x40
   13ed0:	bl	14768 <__snprintf_chk@plt+0x3914>
   13ed4:	cmp	r0, #0
   13ed8:	movne	r4, r0
   13edc:	addeq	r4, r0, #1
   13ee0:	mov	r2, r6
   13ee4:	mov	r1, r4
   13ee8:	mov	r0, r7
   13eec:	bl	13e2c <__snprintf_chk@plt+0x2fd8>
   13ef0:	str	r4, [r5]
   13ef4:	pop	{r4, r5, r6, r7, r8, pc}
   13ef8:	lsr	r2, r4, #1
   13efc:	add	r3, r2, #1
   13f00:	mvn	r3, r3
   13f04:	cmp	r4, r3
   13f08:	addls	r4, r4, #1
   13f0c:	addls	r4, r4, r2
   13f10:	bls	13ee0 <__snprintf_chk@plt+0x308c>
   13f14:	bl	14244 <__snprintf_chk@plt+0x33f0>
   13f18:	mov	r2, #1
   13f1c:	b	13ea8 <__snprintf_chk@plt+0x3054>
   13f20:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f24:	mov	sl, r0
   13f28:	ldr	r8, [r1]
   13f2c:	mov	fp, r1
   13f30:	mov	r5, r2
   13f34:	asrs	r4, r8, #1
   13f38:	mov	r9, r3
   13f3c:	ldr	r7, [sp, #48]	; 0x30
   13f40:	bpl	13fdc <__snprintf_chk@plt+0x3188>
   13f44:	rsb	r2, r4, #-2147483648	; 0x80000000
   13f48:	cmp	r8, r2
   13f4c:	movge	r2, #0
   13f50:	movlt	r2, #1
   13f54:	mvn	r3, r9
   13f58:	cmp	r2, #0
   13f5c:	lsr	r3, r3, #31
   13f60:	addeq	r4, r4, r8
   13f64:	mvnne	r4, #-2147483648	; 0x80000000
   13f68:	mov	r0, r3
   13f6c:	cmp	r9, r4
   13f70:	movge	r0, #0
   13f74:	andlt	r0, r0, #1
   13f78:	cmp	r0, #0
   13f7c:	str	r3, [sp, #4]
   13f80:	bne	14150 <__snprintf_chk@plt+0x32fc>
   13f84:	cmp	r7, #0
   13f88:	bge	1409c <__snprintf_chk@plt+0x3248>
   13f8c:	cmp	r4, #0
   13f90:	bge	13ff4 <__snprintf_chk@plt+0x31a0>
   13f94:	mov	r1, r7
   13f98:	mvn	r0, #-2147483648	; 0x80000000
   13f9c:	bl	14974 <__snprintf_chk@plt+0x3b20>
   13fa0:	cmp	r0, r4
   13fa4:	movle	r0, #0
   13fa8:	movgt	r0, #1
   13fac:	cmp	r0, #0
   13fb0:	mvnne	r6, #-2147483648	; 0x80000000
   13fb4:	beq	14004 <__snprintf_chk@plt+0x31b0>
   13fb8:	mov	r1, r7
   13fbc:	mov	r0, r6
   13fc0:	bl	14974 <__snprintf_chk@plt+0x3b20>
   13fc4:	mov	r1, r7
   13fc8:	mov	r4, r0
   13fcc:	mov	r0, r6
   13fd0:	bl	14b94 <__snprintf_chk@plt+0x3d40>
   13fd4:	sub	r1, r6, r1
   13fd8:	b	14014 <__snprintf_chk@plt+0x31c0>
   13fdc:	mvn	r2, #-2147483648	; 0x80000000
   13fe0:	sub	r2, r2, r4
   13fe4:	cmp	r8, r2
   13fe8:	movle	r2, #0
   13fec:	movgt	r2, #1
   13ff0:	b	13f54 <__snprintf_chk@plt+0x3100>
   13ff4:	cmn	r7, #1
   13ff8:	movne	r1, r7
   13ffc:	movne	r0, #-2147483648	; 0x80000000
   14000:	bne	14168 <__snprintf_chk@plt+0x3314>
   14004:	mul	r1, r7, r4
   14008:	cmp	r1, #63	; 0x3f
   1400c:	movle	r6, #64	; 0x40
   14010:	ble	13fb8 <__snprintf_chk@plt+0x3164>
   14014:	cmp	sl, #0
   14018:	sub	r2, r4, r8
   1401c:	streq	sl, [fp]
   14020:	cmp	r2, r5
   14024:	bge	140f8 <__snprintf_chk@plt+0x32a4>
   14028:	cmp	r5, #0
   1402c:	bge	140c4 <__snprintf_chk@plt+0x3270>
   14030:	rsb	r2, r5, #-2147483648	; 0x80000000
   14034:	cmp	r8, r2
   14038:	movge	r2, #0
   1403c:	movlt	r2, #1
   14040:	cmp	r2, #0
   14044:	bne	14098 <__snprintf_chk@plt+0x3244>
   14048:	ldr	r0, [sp, #4]
   1404c:	add	r5, r8, r5
   14050:	cmp	r9, r5
   14054:	movge	r0, #0
   14058:	andlt	r0, r0, #1
   1405c:	cmp	r0, #0
   14060:	mov	r4, r5
   14064:	bne	14098 <__snprintf_chk@plt+0x3244>
   14068:	cmp	r7, #0
   1406c:	bge	1410c <__snprintf_chk@plt+0x32b8>
   14070:	cmp	r5, #0
   14074:	bge	140e4 <__snprintf_chk@plt+0x3290>
   14078:	mov	r1, r7
   1407c:	mvn	r0, #-2147483648	; 0x80000000
   14080:	bl	14974 <__snprintf_chk@plt+0x3b20>
   14084:	cmp	r5, r0
   14088:	movge	r0, #0
   1408c:	movlt	r0, #1
   14090:	cmp	r0, #0
   14094:	beq	140f4 <__snprintf_chk@plt+0x32a0>
   14098:	bl	14244 <__snprintf_chk@plt+0x33f0>
   1409c:	beq	14004 <__snprintf_chk@plt+0x31b0>
   140a0:	cmp	r4, #0
   140a4:	bge	14160 <__snprintf_chk@plt+0x330c>
   140a8:	cmn	r4, #1
   140ac:	beq	14004 <__snprintf_chk@plt+0x31b0>
   140b0:	mov	r1, r4
   140b4:	mov	r0, #-2147483648	; 0x80000000
   140b8:	bl	14974 <__snprintf_chk@plt+0x3b20>
   140bc:	cmp	r7, r0
   140c0:	b	13fa4 <__snprintf_chk@plt+0x3150>
   140c4:	cmp	r8, #0
   140c8:	blt	14048 <__snprintf_chk@plt+0x31f4>
   140cc:	mvn	r2, #-2147483648	; 0x80000000
   140d0:	sub	r2, r2, r5
   140d4:	cmp	r8, r2
   140d8:	movle	r2, #0
   140dc:	movgt	r2, #1
   140e0:	b	14040 <__snprintf_chk@plt+0x31ec>
   140e4:	cmn	r7, #1
   140e8:	movne	r1, r7
   140ec:	movne	r0, #-2147483648	; 0x80000000
   140f0:	bne	14144 <__snprintf_chk@plt+0x32f0>
   140f4:	mul	r1, r5, r7
   140f8:	mov	r0, sl
   140fc:	bl	13ddc <__snprintf_chk@plt+0x2f88>
   14100:	str	r4, [fp]
   14104:	add	sp, sp, #12
   14108:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1410c:	beq	140f4 <__snprintf_chk@plt+0x32a0>
   14110:	cmp	r5, #0
   14114:	movge	r1, r7
   14118:	mvnge	r0, #-2147483648	; 0x80000000
   1411c:	bge	14144 <__snprintf_chk@plt+0x32f0>
   14120:	cmn	r5, #1
   14124:	beq	140f4 <__snprintf_chk@plt+0x32a0>
   14128:	mov	r1, r5
   1412c:	mov	r0, #-2147483648	; 0x80000000
   14130:	bl	14974 <__snprintf_chk@plt+0x3b20>
   14134:	cmp	r7, r0
   14138:	movle	r0, #0
   1413c:	movgt	r0, #1
   14140:	b	14090 <__snprintf_chk@plt+0x323c>
   14144:	bl	14974 <__snprintf_chk@plt+0x3b20>
   14148:	cmp	r5, r0
   1414c:	b	14138 <__snprintf_chk@plt+0x32e4>
   14150:	cmp	r7, #0
   14154:	mov	r4, r9
   14158:	blt	13ff4 <__snprintf_chk@plt+0x31a0>
   1415c:	beq	14004 <__snprintf_chk@plt+0x31b0>
   14160:	mov	r1, r7
   14164:	mvn	r0, #-2147483648	; 0x80000000
   14168:	bl	14974 <__snprintf_chk@plt+0x3b20>
   1416c:	cmp	r0, r4
   14170:	movge	r0, #0
   14174:	movlt	r0, #1
   14178:	b	13fac <__snprintf_chk@plt+0x3158>
   1417c:	push	{r4, lr}
   14180:	bl	14284 <__snprintf_chk@plt+0x3430>
   14184:	cmp	r0, #0
   14188:	popne	{r4, pc}
   1418c:	bl	14244 <__snprintf_chk@plt+0x33f0>
   14190:	mov	r1, #1
   14194:	b	1417c <__snprintf_chk@plt+0x3328>
   14198:	push	{r4, lr}
   1419c:	bl	14284 <__snprintf_chk@plt+0x3430>
   141a0:	cmp	r0, #0
   141a4:	popne	{r4, pc}
   141a8:	bl	14244 <__snprintf_chk@plt+0x33f0>
   141ac:	mov	r1, #1
   141b0:	b	14198 <__snprintf_chk@plt+0x3344>
   141b4:	push	{r4, r5, r6, lr}
   141b8:	mov	r4, r1
   141bc:	mov	r5, r0
   141c0:	mov	r0, r1
   141c4:	bl	13db0 <__snprintf_chk@plt+0x2f5c>
   141c8:	mov	r2, r4
   141cc:	mov	r1, r5
   141d0:	pop	{r4, r5, r6, lr}
   141d4:	b	10c5c <memcpy@plt>
   141d8:	push	{r4, r5, r6, lr}
   141dc:	mov	r4, r1
   141e0:	mov	r5, r0
   141e4:	mov	r0, r1
   141e8:	bl	13dc4 <__snprintf_chk@plt+0x2f70>
   141ec:	mov	r2, r4
   141f0:	mov	r1, r5
   141f4:	pop	{r4, r5, r6, lr}
   141f8:	b	10c5c <memcpy@plt>
   141fc:	push	{r4, r5, r6, lr}
   14200:	mov	r5, r0
   14204:	add	r0, r1, #1
   14208:	mov	r4, r1
   1420c:	bl	13dc4 <__snprintf_chk@plt+0x2f70>
   14210:	mov	r2, #0
   14214:	mov	r1, r5
   14218:	strb	r2, [r0, r4]
   1421c:	mov	r2, r4
   14220:	pop	{r4, r5, r6, lr}
   14224:	b	10c5c <memcpy@plt>
   14228:	push	{r4, lr}
   1422c:	mov	r4, r0
   14230:	bl	10d7c <strlen@plt>
   14234:	add	r1, r0, #1
   14238:	mov	r0, r4
   1423c:	pop	{r4, lr}
   14240:	b	141b4 <__snprintf_chk@plt+0x3360>
   14244:	ldr	r3, [pc, #44]	; 14278 <__snprintf_chk@plt+0x3424>
   14248:	push	{r4, lr}
   1424c:	mov	r2, #5
   14250:	ldr	r1, [pc, #36]	; 1427c <__snprintf_chk@plt+0x3428>
   14254:	mov	r0, #0
   14258:	ldr	r4, [r3]
   1425c:	bl	10c98 <dcgettext@plt>
   14260:	ldr	r2, [pc, #24]	; 14280 <__snprintf_chk@plt+0x342c>
   14264:	mov	r1, #0
   14268:	mov	r3, r0
   1426c:	mov	r0, r4
   14270:	bl	10d04 <error@plt>
   14274:	bl	10e48 <abort@plt>
   14278:	andeq	r6, r2, r0, ror #1
   1427c:	andeq	r5, r1, fp, ror #11
   14280:	muleq	r1, sl, r1
   14284:	cmp	r1, #0
   14288:	cmpne	r0, #0
   1428c:	moveq	r1, #1
   14290:	moveq	r0, r1
   14294:	umull	r2, r3, r0, r1
   14298:	adds	r3, r3, #0
   1429c:	movne	r3, #1
   142a0:	cmp	r2, #0
   142a4:	blt	142b4 <__snprintf_chk@plt+0x3460>
   142a8:	cmp	r3, #0
   142ac:	bne	142b4 <__snprintf_chk@plt+0x3460>
   142b0:	b	10c08 <calloc@plt>
   142b4:	push	{r4, lr}
   142b8:	bl	10d88 <__errno_location@plt>
   142bc:	mov	r3, #12
   142c0:	str	r3, [r0]
   142c4:	mov	r0, #0
   142c8:	pop	{r4, pc}
   142cc:	cmp	r0, #0
   142d0:	mov	r3, #0
   142d4:	moveq	r0, #1
   142d8:	adds	r3, r3, #0
   142dc:	movne	r3, #1
   142e0:	cmp	r0, #0
   142e4:	blt	142f4 <__snprintf_chk@plt+0x34a0>
   142e8:	cmp	r3, #0
   142ec:	bne	142f4 <__snprintf_chk@plt+0x34a0>
   142f0:	b	10d28 <malloc@plt>
   142f4:	push	{r4, lr}
   142f8:	bl	10d88 <__errno_location@plt>
   142fc:	mov	r3, #12
   14300:	str	r3, [r0]
   14304:	mov	r0, #0
   14308:	pop	{r4, pc}
   1430c:	cmp	r0, #0
   14310:	push	{r4, lr}
   14314:	mov	r4, r1
   14318:	bne	14328 <__snprintf_chk@plt+0x34d4>
   1431c:	mov	r0, r1
   14320:	pop	{r4, lr}
   14324:	b	142cc <__snprintf_chk@plt+0x3478>
   14328:	cmp	r1, #0
   1432c:	bne	1433c <__snprintf_chk@plt+0x34e8>
   14330:	bl	144d0 <__snprintf_chk@plt+0x367c>
   14334:	mov	r0, #0
   14338:	pop	{r4, pc}
   1433c:	cmp	r1, #0
   14340:	blt	14350 <__snprintf_chk@plt+0x34fc>
   14344:	mov	r3, #0
   14348:	cmp	r3, r3
   1434c:	beq	14360 <__snprintf_chk@plt+0x350c>
   14350:	bl	10d88 <__errno_location@plt>
   14354:	mov	r3, #12
   14358:	str	r3, [r0]
   1435c:	b	14334 <__snprintf_chk@plt+0x34e0>
   14360:	pop	{r4, lr}
   14364:	b	10ca4 <realloc@plt>
   14368:	push	{r4, r5, r6, lr}
   1436c:	mov	r4, r0
   14370:	bl	10ce0 <__fpending@plt>
   14374:	mov	r5, r0
   14378:	mov	r0, r4
   1437c:	bl	10cec <ferror_unlocked@plt>
   14380:	mov	r6, r0
   14384:	mov	r0, r4
   14388:	bl	143d8 <__snprintf_chk@plt+0x3584>
   1438c:	cmp	r6, #0
   14390:	mov	r4, r0
   14394:	bne	143c0 <__snprintf_chk@plt+0x356c>
   14398:	cmp	r0, #0
   1439c:	beq	143b8 <__snprintf_chk@plt+0x3564>
   143a0:	cmp	r5, #0
   143a4:	bne	143d0 <__snprintf_chk@plt+0x357c>
   143a8:	bl	10d88 <__errno_location@plt>
   143ac:	ldr	r4, [r0]
   143b0:	subs	r4, r4, #9
   143b4:	mvnne	r4, #0
   143b8:	mov	r0, r4
   143bc:	pop	{r4, r5, r6, pc}
   143c0:	cmp	r0, #0
   143c4:	bne	143d0 <__snprintf_chk@plt+0x357c>
   143c8:	bl	10d88 <__errno_location@plt>
   143cc:	str	r4, [r0]
   143d0:	mvn	r4, #0
   143d4:	b	143b8 <__snprintf_chk@plt+0x3564>
   143d8:	push	{r0, r1, r2, r4, r5, lr}
   143dc:	mov	r4, r0
   143e0:	bl	10dd0 <fileno@plt>
   143e4:	cmp	r0, #0
   143e8:	mov	r0, r4
   143ec:	bge	143fc <__snprintf_chk@plt+0x35a8>
   143f0:	add	sp, sp, #12
   143f4:	pop	{r4, r5, lr}
   143f8:	b	10de8 <fclose@plt>
   143fc:	bl	10d40 <__freading@plt>
   14400:	cmp	r0, #0
   14404:	bne	14440 <__snprintf_chk@plt+0x35ec>
   14408:	mov	r0, r4
   1440c:	bl	14480 <__snprintf_chk@plt+0x362c>
   14410:	cmp	r0, #0
   14414:	bne	14474 <__snprintf_chk@plt+0x3620>
   14418:	mov	r5, #0
   1441c:	mov	r0, r4
   14420:	bl	10de8 <fclose@plt>
   14424:	cmp	r5, #0
   14428:	beq	14438 <__snprintf_chk@plt+0x35e4>
   1442c:	bl	10d88 <__errno_location@plt>
   14430:	str	r5, [r0]
   14434:	mvn	r0, #0
   14438:	add	sp, sp, #12
   1443c:	pop	{r4, r5, pc}
   14440:	mov	r0, r4
   14444:	bl	10dd0 <fileno@plt>
   14448:	mov	r3, #1
   1444c:	str	r3, [sp]
   14450:	mov	r2, #0
   14454:	mov	r3, #0
   14458:	bl	10cc8 <lseek64@plt>
   1445c:	mvn	r3, #0
   14460:	mvn	r2, #0
   14464:	cmp	r1, r3
   14468:	cmpeq	r0, r2
   1446c:	bne	14408 <__snprintf_chk@plt+0x35b4>
   14470:	b	14418 <__snprintf_chk@plt+0x35c4>
   14474:	bl	10d88 <__errno_location@plt>
   14478:	ldr	r5, [r0]
   1447c:	b	1441c <__snprintf_chk@plt+0x35c8>
   14480:	push	{r0, r1, r4, lr}
   14484:	subs	r4, r0, #0
   14488:	bne	1449c <__snprintf_chk@plt+0x3648>
   1448c:	mov	r0, r4
   14490:	add	sp, sp, #8
   14494:	pop	{r4, lr}
   14498:	b	10c38 <fflush@plt>
   1449c:	bl	10d40 <__freading@plt>
   144a0:	cmp	r0, #0
   144a4:	beq	1448c <__snprintf_chk@plt+0x3638>
   144a8:	ldr	r3, [r4]
   144ac:	tst	r3, #256	; 0x100
   144b0:	beq	1448c <__snprintf_chk@plt+0x3638>
   144b4:	mov	r3, #1
   144b8:	str	r3, [sp]
   144bc:	mov	r2, #0
   144c0:	mov	r3, #0
   144c4:	mov	r0, r4
   144c8:	bl	14524 <__snprintf_chk@plt+0x36d0>
   144cc:	b	1448c <__snprintf_chk@plt+0x3638>
   144d0:	push	{r0, r1, r2, r4, r5, lr}
   144d4:	mov	r5, r0
   144d8:	bl	10d88 <__errno_location@plt>
   144dc:	ldr	r3, [r0]
   144e0:	mov	r4, r0
   144e4:	str	r3, [sp]
   144e8:	str	r3, [sp, #4]
   144ec:	mov	r3, #0
   144f0:	str	r3, [r0]
   144f4:	mov	r0, r5
   144f8:	bl	10c44 <free@plt>
   144fc:	ldr	r3, [r4]
   14500:	add	r2, sp, #8
   14504:	cmp	r3, #0
   14508:	moveq	r3, #4
   1450c:	movne	r3, #0
   14510:	add	r3, r2, r3
   14514:	ldr	r3, [r3, #-8]
   14518:	str	r3, [r4]
   1451c:	add	sp, sp, #12
   14520:	pop	{r4, r5, pc}
   14524:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   14528:	mov	r4, r0
   1452c:	ldmib	r0, {ip, lr}
   14530:	ldr	r8, [sp, #32]
   14534:	cmp	lr, ip
   14538:	bne	145a4 <__snprintf_chk@plt+0x3750>
   1453c:	ldr	lr, [r0, #20]
   14540:	ldr	ip, [r0, #16]
   14544:	cmp	lr, ip
   14548:	bne	145a4 <__snprintf_chk@plt+0x3750>
   1454c:	ldr	r5, [r0, #36]	; 0x24
   14550:	cmp	r5, #0
   14554:	bne	145a4 <__snprintf_chk@plt+0x3750>
   14558:	mov	r6, r2
   1455c:	mov	r7, r3
   14560:	bl	10dd0 <fileno@plt>
   14564:	mov	r2, r6
   14568:	mov	r3, r7
   1456c:	str	r8, [sp]
   14570:	bl	10cc8 <lseek64@plt>
   14574:	mvn	r3, #0
   14578:	mvn	r2, #0
   1457c:	cmp	r1, r3
   14580:	cmpeq	r0, r2
   14584:	mvneq	r0, #0
   14588:	ldrne	r3, [r4]
   1458c:	strdne	r0, [r4, #80]	; 0x50
   14590:	movne	r0, r5
   14594:	bicne	r3, r3, #16
   14598:	strne	r3, [r4]
   1459c:	add	sp, sp, #8
   145a0:	pop	{r4, r5, r6, r7, r8, pc}
   145a4:	str	r8, [sp, #32]
   145a8:	mov	r0, r4
   145ac:	add	sp, sp, #8
   145b0:	pop	{r4, r5, r6, r7, r8, lr}
   145b4:	b	10df4 <fseeko64@plt>
   145b8:	push	{r4, lr}
   145bc:	mov	r0, #14
   145c0:	bl	10e18 <nl_langinfo@plt>
   145c4:	ldr	r3, [pc, #24]	; 145e4 <__snprintf_chk@plt+0x3790>
   145c8:	cmp	r0, #0
   145cc:	moveq	r0, r3
   145d0:	ldr	r3, [pc, #16]	; 145e8 <__snprintf_chk@plt+0x3794>
   145d4:	ldrb	r2, [r0]
   145d8:	cmp	r2, #0
   145dc:	moveq	r0, r3
   145e0:	pop	{r4, pc}
   145e4:	andeq	r4, r1, r8, lsl #26
   145e8:	strdeq	r5, [r1], -ip
   145ec:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   145f0:	subs	r5, r0, #0
   145f4:	addeq	r5, sp, #4
   145f8:	mov	r0, r5
   145fc:	mov	r7, r2
   14600:	mov	r6, r1
   14604:	bl	10cf8 <mbrtowc@plt>
   14608:	cmp	r7, #0
   1460c:	cmnne	r0, #3
   14610:	mov	r4, r0
   14614:	bls	14630 <__snprintf_chk@plt+0x37dc>
   14618:	mov	r0, #0
   1461c:	bl	14688 <__snprintf_chk@plt+0x3834>
   14620:	cmp	r0, #0
   14624:	moveq	r4, #1
   14628:	ldrbeq	r3, [r6]
   1462c:	streq	r3, [r5]
   14630:	mov	r0, r4
   14634:	add	sp, sp, #12
   14638:	pop	{r4, r5, r6, r7, pc}
   1463c:	push	{r4, r5, r6, lr}
   14640:	subs	r4, r2, #0
   14644:	mov	r6, r0
   14648:	mov	r5, r1
   1464c:	beq	14664 <__snprintf_chk@plt+0x3810>
   14650:	mov	r1, r4
   14654:	mvn	r0, #0
   14658:	bl	14768 <__snprintf_chk@plt+0x3914>
   1465c:	cmp	r0, r5
   14660:	bcc	14674 <__snprintf_chk@plt+0x3820>
   14664:	mul	r1, r5, r4
   14668:	mov	r0, r6
   1466c:	pop	{r4, r5, r6, lr}
   14670:	b	1430c <__snprintf_chk@plt+0x34b8>
   14674:	bl	10d88 <__errno_location@plt>
   14678:	mov	r3, #12
   1467c:	str	r3, [r0]
   14680:	mov	r0, #0
   14684:	pop	{r4, r5, r6, pc}
   14688:	push	{lr}		; (str lr, [sp, #-4]!)
   1468c:	sub	sp, sp, #268	; 0x10c
   14690:	ldr	r2, [pc, #64]	; 146d8 <__snprintf_chk@plt+0x3884>
   14694:	add	r1, sp, #4
   14698:	bl	146e4 <__snprintf_chk@plt+0x3890>
   1469c:	cmp	r0, #0
   146a0:	movne	r0, #0
   146a4:	bne	146d0 <__snprintf_chk@plt+0x387c>
   146a8:	ldr	r1, [pc, #44]	; 146dc <__snprintf_chk@plt+0x3888>
   146ac:	add	r0, sp, #4
   146b0:	bl	10c2c <strcmp@plt>
   146b4:	cmp	r0, #0
   146b8:	beq	146d0 <__snprintf_chk@plt+0x387c>
   146bc:	ldr	r1, [pc, #28]	; 146e0 <__snprintf_chk@plt+0x388c>
   146c0:	add	r0, sp, #4
   146c4:	bl	10c2c <strcmp@plt>
   146c8:	adds	r0, r0, #0
   146cc:	movne	r0, #1
   146d0:	add	sp, sp, #268	; 0x10c
   146d4:	pop	{pc}		; (ldr pc, [sp], #4)
   146d8:	andeq	r0, r0, r1, lsl #2
   146dc:	andeq	r5, r1, r2, lsl #12
   146e0:	andeq	r5, r1, r4, lsl #12
   146e4:	push	{r4, r5, r6, lr}
   146e8:	mov	r5, r1
   146ec:	mov	r1, #0
   146f0:	mov	r4, r2
   146f4:	bl	10e00 <setlocale@plt>
   146f8:	subs	r6, r0, #0
   146fc:	bne	14710 <__snprintf_chk@plt+0x38bc>
   14700:	cmp	r4, #0
   14704:	strbne	r6, [r5]
   14708:	mov	r0, #22
   1470c:	pop	{r4, r5, r6, pc}
   14710:	bl	10d7c <strlen@plt>
   14714:	cmp	r4, r0
   14718:	bls	14734 <__snprintf_chk@plt+0x38e0>
   1471c:	add	r2, r0, #1
   14720:	mov	r1, r6
   14724:	mov	r0, r5
   14728:	bl	10c5c <memcpy@plt>
   1472c:	mov	r0, #0
   14730:	pop	{r4, r5, r6, pc}
   14734:	cmp	r4, #0
   14738:	beq	14758 <__snprintf_chk@plt+0x3904>
   1473c:	sub	r4, r4, #1
   14740:	mov	r2, r4
   14744:	mov	r1, r6
   14748:	mov	r0, r5
   1474c:	bl	10c5c <memcpy@plt>
   14750:	mov	r3, #0
   14754:	strb	r3, [r5, r4]
   14758:	mov	r0, #34	; 0x22
   1475c:	pop	{r4, r5, r6, pc}
   14760:	mov	r1, #0
   14764:	b	10e00 <setlocale@plt>
   14768:	subs	r2, r1, #1
   1476c:	bxeq	lr
   14770:	bcc	14948 <__snprintf_chk@plt+0x3af4>
   14774:	cmp	r0, r1
   14778:	bls	1492c <__snprintf_chk@plt+0x3ad8>
   1477c:	tst	r1, r2
   14780:	beq	14938 <__snprintf_chk@plt+0x3ae4>
   14784:	clz	r3, r0
   14788:	clz	r2, r1
   1478c:	sub	r3, r2, r3
   14790:	rsbs	r3, r3, #31
   14794:	addne	r3, r3, r3, lsl #1
   14798:	mov	r2, #0
   1479c:	addne	pc, pc, r3, lsl #2
   147a0:	nop			; (mov r0, r0)
   147a4:	cmp	r0, r1, lsl #31
   147a8:	adc	r2, r2, r2
   147ac:	subcs	r0, r0, r1, lsl #31
   147b0:	cmp	r0, r1, lsl #30
   147b4:	adc	r2, r2, r2
   147b8:	subcs	r0, r0, r1, lsl #30
   147bc:	cmp	r0, r1, lsl #29
   147c0:	adc	r2, r2, r2
   147c4:	subcs	r0, r0, r1, lsl #29
   147c8:	cmp	r0, r1, lsl #28
   147cc:	adc	r2, r2, r2
   147d0:	subcs	r0, r0, r1, lsl #28
   147d4:	cmp	r0, r1, lsl #27
   147d8:	adc	r2, r2, r2
   147dc:	subcs	r0, r0, r1, lsl #27
   147e0:	cmp	r0, r1, lsl #26
   147e4:	adc	r2, r2, r2
   147e8:	subcs	r0, r0, r1, lsl #26
   147ec:	cmp	r0, r1, lsl #25
   147f0:	adc	r2, r2, r2
   147f4:	subcs	r0, r0, r1, lsl #25
   147f8:	cmp	r0, r1, lsl #24
   147fc:	adc	r2, r2, r2
   14800:	subcs	r0, r0, r1, lsl #24
   14804:	cmp	r0, r1, lsl #23
   14808:	adc	r2, r2, r2
   1480c:	subcs	r0, r0, r1, lsl #23
   14810:	cmp	r0, r1, lsl #22
   14814:	adc	r2, r2, r2
   14818:	subcs	r0, r0, r1, lsl #22
   1481c:	cmp	r0, r1, lsl #21
   14820:	adc	r2, r2, r2
   14824:	subcs	r0, r0, r1, lsl #21
   14828:	cmp	r0, r1, lsl #20
   1482c:	adc	r2, r2, r2
   14830:	subcs	r0, r0, r1, lsl #20
   14834:	cmp	r0, r1, lsl #19
   14838:	adc	r2, r2, r2
   1483c:	subcs	r0, r0, r1, lsl #19
   14840:	cmp	r0, r1, lsl #18
   14844:	adc	r2, r2, r2
   14848:	subcs	r0, r0, r1, lsl #18
   1484c:	cmp	r0, r1, lsl #17
   14850:	adc	r2, r2, r2
   14854:	subcs	r0, r0, r1, lsl #17
   14858:	cmp	r0, r1, lsl #16
   1485c:	adc	r2, r2, r2
   14860:	subcs	r0, r0, r1, lsl #16
   14864:	cmp	r0, r1, lsl #15
   14868:	adc	r2, r2, r2
   1486c:	subcs	r0, r0, r1, lsl #15
   14870:	cmp	r0, r1, lsl #14
   14874:	adc	r2, r2, r2
   14878:	subcs	r0, r0, r1, lsl #14
   1487c:	cmp	r0, r1, lsl #13
   14880:	adc	r2, r2, r2
   14884:	subcs	r0, r0, r1, lsl #13
   14888:	cmp	r0, r1, lsl #12
   1488c:	adc	r2, r2, r2
   14890:	subcs	r0, r0, r1, lsl #12
   14894:	cmp	r0, r1, lsl #11
   14898:	adc	r2, r2, r2
   1489c:	subcs	r0, r0, r1, lsl #11
   148a0:	cmp	r0, r1, lsl #10
   148a4:	adc	r2, r2, r2
   148a8:	subcs	r0, r0, r1, lsl #10
   148ac:	cmp	r0, r1, lsl #9
   148b0:	adc	r2, r2, r2
   148b4:	subcs	r0, r0, r1, lsl #9
   148b8:	cmp	r0, r1, lsl #8
   148bc:	adc	r2, r2, r2
   148c0:	subcs	r0, r0, r1, lsl #8
   148c4:	cmp	r0, r1, lsl #7
   148c8:	adc	r2, r2, r2
   148cc:	subcs	r0, r0, r1, lsl #7
   148d0:	cmp	r0, r1, lsl #6
   148d4:	adc	r2, r2, r2
   148d8:	subcs	r0, r0, r1, lsl #6
   148dc:	cmp	r0, r1, lsl #5
   148e0:	adc	r2, r2, r2
   148e4:	subcs	r0, r0, r1, lsl #5
   148e8:	cmp	r0, r1, lsl #4
   148ec:	adc	r2, r2, r2
   148f0:	subcs	r0, r0, r1, lsl #4
   148f4:	cmp	r0, r1, lsl #3
   148f8:	adc	r2, r2, r2
   148fc:	subcs	r0, r0, r1, lsl #3
   14900:	cmp	r0, r1, lsl #2
   14904:	adc	r2, r2, r2
   14908:	subcs	r0, r0, r1, lsl #2
   1490c:	cmp	r0, r1, lsl #1
   14910:	adc	r2, r2, r2
   14914:	subcs	r0, r0, r1, lsl #1
   14918:	cmp	r0, r1
   1491c:	adc	r2, r2, r2
   14920:	subcs	r0, r0, r1
   14924:	mov	r0, r2
   14928:	bx	lr
   1492c:	moveq	r0, #1
   14930:	movne	r0, #0
   14934:	bx	lr
   14938:	clz	r2, r1
   1493c:	rsb	r2, r2, #31
   14940:	lsr	r0, r0, r2
   14944:	bx	lr
   14948:	cmp	r0, #0
   1494c:	mvnne	r0, #0
   14950:	b	14bb4 <__snprintf_chk@plt+0x3d60>
   14954:	cmp	r1, #0
   14958:	beq	14948 <__snprintf_chk@plt+0x3af4>
   1495c:	push	{r0, r1, lr}
   14960:	bl	14768 <__snprintf_chk@plt+0x3914>
   14964:	pop	{r1, r2, lr}
   14968:	mul	r3, r2, r0
   1496c:	sub	r1, r1, r3
   14970:	bx	lr
   14974:	cmp	r1, #0
   14978:	beq	14b84 <__snprintf_chk@plt+0x3d30>
   1497c:	eor	ip, r0, r1
   14980:	rsbmi	r1, r1, #0
   14984:	subs	r2, r1, #1
   14988:	beq	14b50 <__snprintf_chk@plt+0x3cfc>
   1498c:	movs	r3, r0
   14990:	rsbmi	r3, r0, #0
   14994:	cmp	r3, r1
   14998:	bls	14b5c <__snprintf_chk@plt+0x3d08>
   1499c:	tst	r1, r2
   149a0:	beq	14b6c <__snprintf_chk@plt+0x3d18>
   149a4:	clz	r2, r3
   149a8:	clz	r0, r1
   149ac:	sub	r2, r0, r2
   149b0:	rsbs	r2, r2, #31
   149b4:	addne	r2, r2, r2, lsl #1
   149b8:	mov	r0, #0
   149bc:	addne	pc, pc, r2, lsl #2
   149c0:	nop			; (mov r0, r0)
   149c4:	cmp	r3, r1, lsl #31
   149c8:	adc	r0, r0, r0
   149cc:	subcs	r3, r3, r1, lsl #31
   149d0:	cmp	r3, r1, lsl #30
   149d4:	adc	r0, r0, r0
   149d8:	subcs	r3, r3, r1, lsl #30
   149dc:	cmp	r3, r1, lsl #29
   149e0:	adc	r0, r0, r0
   149e4:	subcs	r3, r3, r1, lsl #29
   149e8:	cmp	r3, r1, lsl #28
   149ec:	adc	r0, r0, r0
   149f0:	subcs	r3, r3, r1, lsl #28
   149f4:	cmp	r3, r1, lsl #27
   149f8:	adc	r0, r0, r0
   149fc:	subcs	r3, r3, r1, lsl #27
   14a00:	cmp	r3, r1, lsl #26
   14a04:	adc	r0, r0, r0
   14a08:	subcs	r3, r3, r1, lsl #26
   14a0c:	cmp	r3, r1, lsl #25
   14a10:	adc	r0, r0, r0
   14a14:	subcs	r3, r3, r1, lsl #25
   14a18:	cmp	r3, r1, lsl #24
   14a1c:	adc	r0, r0, r0
   14a20:	subcs	r3, r3, r1, lsl #24
   14a24:	cmp	r3, r1, lsl #23
   14a28:	adc	r0, r0, r0
   14a2c:	subcs	r3, r3, r1, lsl #23
   14a30:	cmp	r3, r1, lsl #22
   14a34:	adc	r0, r0, r0
   14a38:	subcs	r3, r3, r1, lsl #22
   14a3c:	cmp	r3, r1, lsl #21
   14a40:	adc	r0, r0, r0
   14a44:	subcs	r3, r3, r1, lsl #21
   14a48:	cmp	r3, r1, lsl #20
   14a4c:	adc	r0, r0, r0
   14a50:	subcs	r3, r3, r1, lsl #20
   14a54:	cmp	r3, r1, lsl #19
   14a58:	adc	r0, r0, r0
   14a5c:	subcs	r3, r3, r1, lsl #19
   14a60:	cmp	r3, r1, lsl #18
   14a64:	adc	r0, r0, r0
   14a68:	subcs	r3, r3, r1, lsl #18
   14a6c:	cmp	r3, r1, lsl #17
   14a70:	adc	r0, r0, r0
   14a74:	subcs	r3, r3, r1, lsl #17
   14a78:	cmp	r3, r1, lsl #16
   14a7c:	adc	r0, r0, r0
   14a80:	subcs	r3, r3, r1, lsl #16
   14a84:	cmp	r3, r1, lsl #15
   14a88:	adc	r0, r0, r0
   14a8c:	subcs	r3, r3, r1, lsl #15
   14a90:	cmp	r3, r1, lsl #14
   14a94:	adc	r0, r0, r0
   14a98:	subcs	r3, r3, r1, lsl #14
   14a9c:	cmp	r3, r1, lsl #13
   14aa0:	adc	r0, r0, r0
   14aa4:	subcs	r3, r3, r1, lsl #13
   14aa8:	cmp	r3, r1, lsl #12
   14aac:	adc	r0, r0, r0
   14ab0:	subcs	r3, r3, r1, lsl #12
   14ab4:	cmp	r3, r1, lsl #11
   14ab8:	adc	r0, r0, r0
   14abc:	subcs	r3, r3, r1, lsl #11
   14ac0:	cmp	r3, r1, lsl #10
   14ac4:	adc	r0, r0, r0
   14ac8:	subcs	r3, r3, r1, lsl #10
   14acc:	cmp	r3, r1, lsl #9
   14ad0:	adc	r0, r0, r0
   14ad4:	subcs	r3, r3, r1, lsl #9
   14ad8:	cmp	r3, r1, lsl #8
   14adc:	adc	r0, r0, r0
   14ae0:	subcs	r3, r3, r1, lsl #8
   14ae4:	cmp	r3, r1, lsl #7
   14ae8:	adc	r0, r0, r0
   14aec:	subcs	r3, r3, r1, lsl #7
   14af0:	cmp	r3, r1, lsl #6
   14af4:	adc	r0, r0, r0
   14af8:	subcs	r3, r3, r1, lsl #6
   14afc:	cmp	r3, r1, lsl #5
   14b00:	adc	r0, r0, r0
   14b04:	subcs	r3, r3, r1, lsl #5
   14b08:	cmp	r3, r1, lsl #4
   14b0c:	adc	r0, r0, r0
   14b10:	subcs	r3, r3, r1, lsl #4
   14b14:	cmp	r3, r1, lsl #3
   14b18:	adc	r0, r0, r0
   14b1c:	subcs	r3, r3, r1, lsl #3
   14b20:	cmp	r3, r1, lsl #2
   14b24:	adc	r0, r0, r0
   14b28:	subcs	r3, r3, r1, lsl #2
   14b2c:	cmp	r3, r1, lsl #1
   14b30:	adc	r0, r0, r0
   14b34:	subcs	r3, r3, r1, lsl #1
   14b38:	cmp	r3, r1
   14b3c:	adc	r0, r0, r0
   14b40:	subcs	r3, r3, r1
   14b44:	cmp	ip, #0
   14b48:	rsbmi	r0, r0, #0
   14b4c:	bx	lr
   14b50:	teq	ip, r0
   14b54:	rsbmi	r0, r0, #0
   14b58:	bx	lr
   14b5c:	movcc	r0, #0
   14b60:	asreq	r0, ip, #31
   14b64:	orreq	r0, r0, #1
   14b68:	bx	lr
   14b6c:	clz	r2, r1
   14b70:	rsb	r2, r2, #31
   14b74:	cmp	ip, #0
   14b78:	lsr	r0, r3, r2
   14b7c:	rsbmi	r0, r0, #0
   14b80:	bx	lr
   14b84:	cmp	r0, #0
   14b88:	mvngt	r0, #-2147483648	; 0x80000000
   14b8c:	movlt	r0, #-2147483648	; 0x80000000
   14b90:	b	14bb4 <__snprintf_chk@plt+0x3d60>
   14b94:	cmp	r1, #0
   14b98:	beq	14b84 <__snprintf_chk@plt+0x3d30>
   14b9c:	push	{r0, r1, lr}
   14ba0:	bl	1497c <__snprintf_chk@plt+0x3b28>
   14ba4:	pop	{r1, r2, lr}
   14ba8:	mul	r3, r2, r0
   14bac:	sub	r1, r1, r3
   14bb0:	bx	lr
   14bb4:	push	{r1, lr}
   14bb8:	mov	r0, #8
   14bbc:	bl	10c20 <raise@plt>
   14bc0:	pop	{r1, pc}
   14bc4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14bc8:	mov	r7, r0
   14bcc:	ldr	r6, [pc, #72]	; 14c1c <__snprintf_chk@plt+0x3dc8>
   14bd0:	ldr	r5, [pc, #72]	; 14c20 <__snprintf_chk@plt+0x3dcc>
   14bd4:	add	r6, pc, r6
   14bd8:	add	r5, pc, r5
   14bdc:	sub	r6, r6, r5
   14be0:	mov	r8, r1
   14be4:	mov	r9, r2
   14be8:	bl	10be8 <calloc@plt-0x20>
   14bec:	asrs	r6, r6, #2
   14bf0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14bf4:	mov	r4, #0
   14bf8:	add	r4, r4, #1
   14bfc:	ldr	r3, [r5], #4
   14c00:	mov	r2, r9
   14c04:	mov	r1, r8
   14c08:	mov	r0, r7
   14c0c:	blx	r3
   14c10:	cmp	r6, r4
   14c14:	bne	14bf8 <__snprintf_chk@plt+0x3da4>
   14c18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14c1c:	andeq	r1, r1, r4, lsr r3
   14c20:	andeq	r1, r1, ip, lsr #6
   14c24:	bx	lr
   14c28:	ldr	r3, [pc, #12]	; 14c3c <__snprintf_chk@plt+0x3de8>
   14c2c:	mov	r1, #0
   14c30:	add	r3, pc, r3
   14c34:	ldr	r2, [r3]
   14c38:	b	10da0 <__cxa_atexit@plt>
   14c3c:	andeq	r1, r1, r4, lsr #9

Disassembly of section .fini:

00014c40 <.fini>:
   14c40:	push	{r3, lr}
   14c44:	pop	{r3, pc}
