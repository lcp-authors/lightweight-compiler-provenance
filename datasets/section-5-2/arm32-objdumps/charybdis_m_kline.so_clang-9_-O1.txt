
../repos/charybdis/modules/.libs/m_kline.so:     file format elf32-littlearm


Disassembly of section .init:

00000d44 <_init>:
 d44:	push	{r3, lr}
 d48:	bl	f68 <call_weak_fn>
 d4c:	pop	{r3, pc}

Disassembly of section .plt:

00000d50 <.plt>:
 d50:	push	{lr}		; (str lr, [sp, #-4]!)
 d54:	ldr	lr, [pc, #4]	; d60 <.plt+0x10>
 d58:	add	lr, pc, lr
 d5c:	ldr	pc, [lr, #8]!
 d60:	.word	0x000132a0

00000d64 <propagate_generic@plt>:
 d64:	add	ip, pc, #0, 12
 d68:	add	ip, ip, #77824	; 0x13000
 d6c:	ldr	pc, [ip, #672]!	; 0x2a0

00000d70 <make_conf@plt>:
 d70:	add	ip, pc, #0, 12
 d74:	add	ip, ip, #77824	; 0x13000
 d78:	ldr	pc, [ip, #664]!	; 0x298

00000d7c <parse_netmask_strict@plt>:
 d7c:	add	ip, pc, #0, 12
 d80:	add	ip, ip, #77824	; 0x13000
 d84:	ldr	pc, [ip, #656]!	; 0x290

00000d88 <rb_current_time@plt>:
 d88:	add	ip, pc, #0, 12
 d8c:	add	ip, ip, #77824	; 0x13000
 d90:	ldr	pc, [ip, #648]!	; 0x288

00000d94 <__cxa_finalize@plt>:
 d94:	add	ip, pc, #0, 12
 d98:	add	ip, ip, #77824	; 0x13000
 d9c:	ldr	pc, [ip, #640]!	; 0x280

00000da0 <sendto_one@plt>:
 da0:	add	ip, pc, #0, 12
 da4:	add	ip, ip, #77824	; 0x13000
 da8:	ldr	pc, [ip, #632]!	; 0x278

00000dac <find_conf_by_address@plt>:
 dac:	add	ip, pc, #0, 12
 db0:	add	ip, ip, #77824	; 0x13000
 db4:	ldr	pc, [ip, #624]!	; 0x270

00000db8 <add_temp_kline@plt>:
 db8:	add	ip, pc, #0, 12
 dbc:	add	ip, ip, #77824	; 0x13000
 dc0:	ldr	pc, [ip, #616]!	; 0x268

00000dc4 <replace_old_ban@plt>:
 dc4:	add	ip, pc, #0, 12
 dc8:	add	ip, ip, #77824	; 0x13000
 dcc:	ldr	pc, [ip, #608]!	; 0x260

00000dd0 <rb_outofmemory@plt>:
 dd0:	add	ip, pc, #0, 12
 dd4:	add	ip, ip, #77824	; 0x13000
 dd8:	ldr	pc, [ip, #600]!	; 0x258

00000ddc <operhash_delete@plt>:
 ddc:	add	ip, pc, #0, 12
 de0:	add	ip, ip, #77824	; 0x13000
 de4:	ldr	pc, [ip, #592]!	; 0x250

00000de8 <sendto_realops_snomask@plt>:
 de8:	add	ip, pc, #0, 12
 dec:	add	ip, ip, #77824	; 0x13000
 df0:	ldr	pc, [ip, #584]!	; 0x248

00000df4 <bandb_add@plt>:
 df4:	add	ip, pc, #0, 12
 df8:	add	ip, ip, #77824	; 0x13000
 dfc:	ldr	pc, [ip, #576]!	; 0x240

00000e00 <deactivate_conf@plt>:
 e00:	add	ip, pc, #0, 12
 e04:	add	ip, ip, #77824	; 0x13000
 e08:	ldr	pc, [ip, #568]!	; 0x238

00000e0c <get_oper_name@plt>:
 e0c:	add	ip, pc, #0, 12
 e10:	add	ip, ip, #77824	; 0x13000
 e14:	ldr	pc, [ip, #560]!	; 0x230

00000e18 <rb_free_rb_dlink_node@plt>:
 e18:	add	ip, pc, #0, 12
 e1c:	add	ip, ip, #77824	; 0x13000
 e20:	ldr	pc, [ip, #552]!	; 0x228

00000e24 <cluster_generic@plt>:
 e24:	add	ip, pc, #0, 12
 e28:	add	ip, ip, #77824	; 0x13000
 e2c:	ldr	pc, [ip, #544]!	; 0x220

00000e30 <operhash_add@plt>:
 e30:	add	ip, pc, #0, 12
 e34:	add	ip, ip, #77824	; 0x13000
 e38:	ldr	pc, [ip, #536]!	; 0x218

00000e3c <check_one_kline@plt>:
 e3c:	add	ip, pc, #0, 12
 e40:	add	ip, ip, #77824	; 0x13000
 e44:	ldr	pc, [ip, #528]!	; 0x210

00000e48 <strcpy@plt>:
 e48:	add	ip, pc, #0, 12
 e4c:	add	ip, ip, #77824	; 0x13000
 e50:	ldr	pc, [ip, #520]!	; 0x208

00000e54 <sendto_server@plt>:
 e54:	add	ip, pc, #0, 12
 e58:	add	ip, ip, #77824	; 0x13000
 e5c:	ldr	pc, [ip, #512]!	; 0x200

00000e60 <rb_set_time@plt>:
 e60:	add	ip, pc, #0, 12
 e64:	add	ip, ip, #77824	; 0x13000
 e68:	ldr	pc, [ip, #504]!	; 0x1f8

00000e6c <valid_wild_card@plt>:
 e6c:	add	ip, pc, #0, 12
 e70:	add	ip, ip, #77824	; 0x13000
 e74:	ldr	pc, [ip, #496]!	; 0x1f0

00000e78 <malloc@plt>:
 e78:	add	ip, pc, #0, 12
 e7c:	add	ip, ip, #77824	; 0x13000
 e80:	ldr	pc, [ip, #488]!	; 0x1e8

00000e84 <add_conf_by_address@plt>:
 e84:	add	ip, pc, #0, 12
 e88:	add	ip, ip, #77824	; 0x13000
 e8c:	ldr	pc, [ip, #480]!	; 0x1e0

00000e90 <__gmon_start__@plt>:
 e90:	add	ip, pc, #0, 12
 e94:	add	ip, ip, #77824	; 0x13000
 e98:	ldr	pc, [ip, #472]!	; 0x1d8

00000e9c <rb_make_rb_dlink_node@plt>:
 e9c:	add	ip, pc, #0, 12
 ea0:	add	ip, ip, #77824	; 0x13000
 ea4:	ldr	pc, [ip, #464]!	; 0x1d0

00000ea8 <strlen@plt>:
 ea8:	add	ip, pc, #0, 12
 eac:	add	ip, ip, #77824	; 0x13000
 eb0:	ldr	pc, [ip, #456]!	; 0x1c8

00000eb4 <strchr@plt>:
 eb4:	add	ip, pc, #0, 12
 eb8:	add	ip, ip, #77824	; 0x13000
 ebc:	ldr	pc, [ip, #448]!	; 0x1c0

00000ec0 <delete_one_address_conf@plt>:
 ec0:	add	ip, pc, #0, 12
 ec4:	add	ip, ip, #77824	; 0x13000
 ec8:	ldr	pc, [ip, #440]!	; 0x1b8

00000ecc <ilog@plt>:
 ecc:	add	ip, pc, #0, 12
 ed0:	add	ip, ip, #77824	; 0x13000
 ed4:	ldr	pc, [ip, #432]!	; 0x1b0

00000ed8 <match@plt>:
 ed8:	add	ip, pc, #0, 12
 edc:	add	ip, ip, #77824	; 0x13000
 ee0:	ldr	pc, [ip, #424]!	; 0x1a8

00000ee4 <valid_temp_time@plt>:
 ee4:	add	ip, pc, #0, 12
 ee8:	add	ip, ip, #77824	; 0x13000
 eec:	ldr	pc, [ip, #416]!	; 0x1a0

00000ef0 <remove_reject_mask@plt>:
 ef0:	add	ip, pc, #0, 12
 ef4:	add	ip, ip, #77824	; 0x13000
 ef8:	ldr	pc, [ip, #408]!	; 0x198

00000efc <sendto_one_notice@plt>:
 efc:	add	ip, pc, #0, 12
 f00:	add	ip, ip, #77824	; 0x13000
 f04:	ldr	pc, [ip, #400]!	; 0x190

00000f08 <bandb_del@plt>:
 f08:	add	ip, pc, #0, 12
 f0c:	add	ip, ip, #77824	; 0x13000
 f10:	ldr	pc, [ip, #392]!	; 0x188

00000f14 <atoi@plt>:
 f14:	add	ip, pc, #0, 12
 f18:	add	ip, ip, #77824	; 0x13000
 f1c:	ldr	pc, [ip, #384]!	; 0x180

00000f20 <find_exact_conf_by_address@plt>:
 f20:	add	ip, pc, #0, 12
 f24:	add	ip, ip, #77824	; 0x13000
 f28:	ldr	pc, [ip, #376]!	; 0x178

00000f2c <rb_strlcpy@plt>:
 f2c:	add	ip, pc, #0, 12
 f30:	add	ip, ip, #77824	; 0x13000
 f34:	ldr	pc, [ip, #368]!	; 0x170

00000f38 <find_shared_conf@plt>:
 f38:	add	ip, pc, #0, 12
 f3c:	add	ip, ip, #77824	; 0x13000
 f40:	ldr	pc, [ip, #360]!	; 0x168

00000f44 <privilegeset_in_set@plt>:
 f44:	add	ip, pc, #0, 12
 f48:	add	ip, ip, #77824	; 0x13000
 f4c:	ldr	pc, [ip, #352]!	; 0x160

00000f50 <irccmp@plt>:
 f50:	add	ip, pc, #0, 12
 f54:	add	ip, ip, #77824	; 0x13000
 f58:	ldr	pc, [ip, #344]!	; 0x158

00000f5c <__assert_fail@plt>:
 f5c:	add	ip, pc, #0, 12
 f60:	add	ip, ip, #77824	; 0x13000
 f64:	ldr	pc, [ip, #336]!	; 0x150

Disassembly of section .text:

00000f68 <call_weak_fn>:
     f68:	ldr	r3, [pc, #20]	; f84 <call_weak_fn+0x1c>
     f6c:	ldr	r2, [pc, #20]	; f88 <call_weak_fn+0x20>
     f70:	add	r3, pc, r3
     f74:	ldr	r2, [r3, r2]
     f78:	cmp	r2, #0
     f7c:	bxeq	lr
     f80:	b	e90 <__gmon_start__@plt>
     f84:	.word	0x00013088
     f88:	.word	0x000000d0

00000f8c <deregister_tm_clones>:
     f8c:	ldr	r0, [pc, #44]	; fc0 <deregister_tm_clones+0x34>
     f90:	ldr	r3, [pc, #44]	; fc4 <deregister_tm_clones+0x38>
     f94:	add	r0, pc, r0
     f98:	add	r3, pc, r3
     f9c:	cmp	r3, r0
     fa0:	ldr	r3, [pc, #32]	; fc8 <deregister_tm_clones+0x3c>
     fa4:	add	r3, pc, r3
     fa8:	bxeq	lr
     fac:	ldr	r2, [pc, #24]	; fcc <deregister_tm_clones+0x40>
     fb0:	ldr	r3, [r3, r2]
     fb4:	cmp	r3, #0
     fb8:	bxeq	lr
     fbc:	bx	r3
     fc0:	.word	0x00013210
     fc4:	.word	0x0001320c
     fc8:	.word	0x00013054
     fcc:	.word	0x000000c0

00000fd0 <register_tm_clones>:
     fd0:	ldr	r0, [pc, #56]	; 1010 <register_tm_clones+0x40>
     fd4:	ldr	r3, [pc, #56]	; 1014 <register_tm_clones+0x44>
     fd8:	add	r0, pc, r0
     fdc:	add	r3, pc, r3
     fe0:	sub	r1, r3, r0
     fe4:	ldr	r3, [pc, #44]	; 1018 <register_tm_clones+0x48>
     fe8:	asr	r1, r1, #2
     fec:	add	r3, pc, r3
     ff0:	add	r1, r1, r1, lsr #31
     ff4:	asrs	r1, r1, #1
     ff8:	bxeq	lr
     ffc:	ldr	r2, [pc, #24]	; 101c <register_tm_clones+0x4c>
    1000:	ldr	r3, [r3, r2]
    1004:	cmp	r3, #0
    1008:	bxeq	lr
    100c:	bx	r3
    1010:	.word	0x000131cc
    1014:	.word	0x000131c8
    1018:	.word	0x0001300c
    101c:	.word	0x000000e0

00001020 <__do_global_dtors_aux>:
    1020:	ldr	r3, [pc, #76]	; 1074 <__do_global_dtors_aux+0x54>
    1024:	ldr	r2, [pc, #76]	; 1078 <__do_global_dtors_aux+0x58>
    1028:	add	r3, pc, r3
    102c:	add	r2, pc, r2
    1030:	ldrb	r3, [r3]
    1034:	cmp	r3, #0
    1038:	bxne	lr
    103c:	ldr	r3, [pc, #56]	; 107c <__do_global_dtors_aux+0x5c>
    1040:	push	{r4, lr}
    1044:	ldr	r3, [r2, r3]
    1048:	cmp	r3, #0
    104c:	beq	105c <__do_global_dtors_aux+0x3c>
    1050:	ldr	r3, [pc, #40]	; 1080 <__do_global_dtors_aux+0x60>
    1054:	ldr	r0, [pc, r3]
    1058:	bl	d94 <__cxa_finalize@plt>
    105c:	bl	f8c <deregister_tm_clones>
    1060:	ldr	r3, [pc, #28]	; 1084 <__do_global_dtors_aux+0x64>
    1064:	mov	r2, #1
    1068:	add	r3, pc, r3
    106c:	strb	r2, [r3]
    1070:	pop	{r4, pc}
    1074:	.word	0x0001317c
    1078:	.word	0x00012fcc
    107c:	.word	0x000000b8
    1080:	.word	0x00013090
    1084:	.word	0x0001313c

00001088 <frame_dummy>:
    1088:	b	fd0 <register_tm_clones>

0000108c <ms_kline>:
    108c:	push	{r4, r5, r6, r7, fp, lr}
    1090:	add	fp, sp, #16
    1094:	sub	sp, sp, #24
    1098:	mov	r6, r3
    109c:	mov	r4, r2
    10a0:	ldr	r7, [fp, #8]
    10a4:	ldr	r0, [r7, #8]
    10a8:	bl	f14 <atoi@plt>
    10ac:	cmp	r6, #6
    10b0:	blt	115c <ms_kline+0xd0>
    10b4:	mov	r5, r0
    10b8:	ldr	r0, [r7, #20]
    10bc:	cmp	r0, #0
    10c0:	beq	115c <ms_kline+0xd0>
    10c4:	ldrb	r1, [r0]
    10c8:	cmp	r1, #0
    10cc:	beq	115c <ms_kline+0xd0>
    10d0:	ldr	r1, [pc, #140]	; 1164 <ms_kline+0xd8>
    10d4:	ldr	r1, [pc, r1]
    10d8:	ldr	r3, [r1]
    10dc:	ldr	r2, [r7, #4]
    10e0:	ldr	ip, [r7, #12]
    10e4:	ldr	r6, [r7, #16]
    10e8:	ldr	r1, [pc, #120]	; 1168 <ms_kline+0xdc>
    10ec:	add	r1, pc, r1
    10f0:	stm	sp, {r1, r5, ip}
    10f4:	str	r6, [sp, #12]
    10f8:	str	r0, [sp, #16]
    10fc:	ldr	r1, [pc, #104]	; 116c <ms_kline+0xe0>
    1100:	add	r1, pc, r1
    1104:	mov	r0, r4
    1108:	bl	d64 <propagate_generic@plt>
    110c:	ldr	r0, [r7, #4]
    1110:	ldr	r1, [pc, #88]	; 1170 <ms_kline+0xe4>
    1114:	ldr	r1, [pc, r1]
    1118:	add	r1, r1, #88	; 0x58
    111c:	bl	ed8 <match@plt>
    1120:	cmp	r0, #0
    1124:	beq	115c <ms_kline+0xd0>
    1128:	ldrh	r0, [r4, #80]	; 0x50
    112c:	cmp	r0, #64	; 0x40
    1130:	bne	115c <ms_kline+0xd0>
    1134:	ldr	r0, [r4, #24]
    1138:	cmp	r0, #0
    113c:	beq	115c <ms_kline+0xd0>
    1140:	ldr	r2, [r7, #12]
    1144:	ldr	r3, [r7, #16]
    1148:	ldr	r0, [r7, #20]
    114c:	str	r0, [sp]
    1150:	mov	r0, r4
    1154:	mov	r1, r5
    1158:	bl	2470 <handle_remote_kline>
    115c:	sub	sp, fp, #16
    1160:	pop	{r4, r5, r6, r7, fp, pc}
    1164:	.word	0x00012ffc
    1168:	.word	0x00001b5d
    116c:	.word	0x00001a9a
    1170:	.word	0x00012fc8

00001174 <me_kline>:
    1174:	push	{r4, r5, fp, lr}
    1178:	add	fp, sp, #8
    117c:	sub	sp, sp, #8
    1180:	ldrh	r0, [r2, #80]	; 0x50
    1184:	cmp	r0, #64	; 0x40
    1188:	bne	11c4 <me_kline+0x50>
    118c:	mov	r4, r2
    1190:	ldr	r0, [r2, #24]
    1194:	cmp	r0, #0
    1198:	beq	11c4 <me_kline+0x50>
    119c:	ldr	r5, [fp, #8]
    11a0:	ldr	r0, [r5, #4]
    11a4:	bl	f14 <atoi@plt>
    11a8:	mov	r1, r0
    11ac:	ldr	r2, [r5, #8]
    11b0:	ldr	r3, [r5, #12]
    11b4:	ldr	r0, [r5, #16]
    11b8:	str	r0, [sp]
    11bc:	mov	r0, r4
    11c0:	bl	2470 <handle_remote_kline>
    11c4:	sub	sp, fp, #8
    11c8:	pop	{r4, r5, fp, pc}

000011cc <mo_kline>:
    11cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    11d0:	add	fp, sp, #28
    11d4:	sub	sp, sp, #100	; 0x64
    11d8:	mov	r4, r2
    11dc:	ldr	r0, [r2, #24]
    11e0:	ldr	r1, [pc, #1224]	; 16b0 <mo_kline+0x4e4>
    11e4:	ldr	r1, [pc, r1]
    11e8:	ldr	r8, [r1, #324]	; 0x144
    11ec:	cmp	r8, #0
    11f0:	mov	r5, r8
    11f4:	movwne	r5, #1
    11f8:	cmp	r0, #0
    11fc:	beq	139c <mo_kline+0x1d0>
    1200:	ldr	r0, [r0, #36]	; 0x24
    1204:	cmp	r0, #0
    1208:	beq	139c <mo_kline+0x1d0>
    120c:	mov	r7, r3
    1210:	ldr	r1, [pc, #1180]	; 16b4 <mo_kline+0x4e8>
    1214:	add	r1, pc, r1
    1218:	bl	f44 <privilegeset_in_set@plt>
    121c:	cmp	r0, #0
    1220:	beq	139c <mo_kline+0x1d0>
    1224:	str	r5, [fp, #-116]	; 0xffffff8c
    1228:	sub	r0, fp, #110	; 0x6e
    122c:	add	sl, r0, #1
    1230:	ldr	r9, [fp, #8]
    1234:	ldr	r0, [r9, #4]
    1238:	bl	ee4 <valid_temp_time@plt>
    123c:	mov	r6, r0
    1240:	cmn	r0, #1
    1244:	movle	r6, #0
    1248:	mov	r5, #1
    124c:	movwgt	r5, #2
    1250:	ldr	r1, [r9, r5, lsl #2]
    1254:	sub	r2, fp, #44	; 0x2c
    1258:	mov	r0, r4
    125c:	mov	r3, sl
    1260:	bl	1b4c <find_user_host>
    1264:	cmp	r0, #0
    1268:	beq	16a8 <mo_kline+0x4dc>
    126c:	str	sl, [fp, #-120]	; 0xffffff88
    1270:	str	r6, [fp, #-124]	; 0xffffff84
    1274:	ldrb	r0, [fp, #-109]	; 0xffffff93
    1278:	cmp	r0, #58	; 0x3a
    127c:	moveq	r0, #48	; 0x30
    1280:	strbeq	r0, [fp, #-110]	; 0xffffff92
    1284:	subeq	r0, fp, #110	; 0x6e
    1288:	streq	r0, [fp, #-120]	; 0xffffff88
    128c:	add	sl, r5, #3
    1290:	add	r6, r5, #1
    1294:	mov	r9, #0
    1298:	cmp	sl, r7
    129c:	bgt	12bc <mo_kline+0xf0>
    12a0:	ldr	r0, [fp, #8]
    12a4:	ldr	r0, [r0, r6, lsl #2]
    12a8:	ldr	r1, [pc, #1044]	; 16c4 <mo_kline+0x4f8>
    12ac:	add	r1, pc, r1
    12b0:	bl	f50 <irccmp@plt>
    12b4:	cmp	r0, #0
    12b8:	beq	13d8 <mo_kline+0x20c>
    12bc:	cmp	r6, r7
    12c0:	bge	141c <mo_kline+0x250>
    12c4:	ldr	r0, [fp, #8]
    12c8:	ldr	r7, [r0, r6, lsl #2]
    12cc:	cmp	r7, #0
    12d0:	beq	141c <mo_kline+0x250>
    12d4:	ldrb	r0, [r7]
    12d8:	cmp	r0, #0
    12dc:	beq	141c <mo_kline+0x250>
    12e0:	mov	r0, r7
    12e4:	bl	ea8 <strlen@plt>
    12e8:	add	r0, r0, #8
    12ec:	bic	r0, r0, #7
    12f0:	sub	r5, sp, r0
    12f4:	mov	sp, r5
    12f8:	mov	r0, r5
    12fc:	mov	r1, r7
    1300:	bl	e48 <strcpy@plt>
    1304:	ldr	r6, [fp, #-120]	; 0xffffff88
    1308:	mov	r0, r6
    130c:	mov	r1, #0
    1310:	mov	r2, #0
    1314:	bl	d7c <parse_netmask_strict@plt>
    1318:	cmp	r0, #0
    131c:	beq	1458 <mo_kline+0x28c>
    1320:	cmp	r9, #0
    1324:	beq	1478 <mo_kline+0x2ac>
    1328:	ldr	r0, [pc, #944]	; 16e0 <mo_kline+0x514>
    132c:	ldr	r0, [pc, r0]
    1330:	ldr	r3, [r0]
    1334:	sub	sp, sp, #24
    1338:	ldr	r0, [pc, #932]	; 16e4 <mo_kline+0x518>
    133c:	add	r0, pc, r0
    1340:	str	r0, [sp]
    1344:	ldr	r7, [fp, #-124]	; 0xffffff84
    1348:	str	r7, [sp, #4]
    134c:	sub	r0, fp, #44	; 0x2c
    1350:	str	r0, [sp, #8]
    1354:	str	r6, [sp, #12]
    1358:	str	r5, [sp, #16]
    135c:	ldr	r1, [pc, #900]	; 16e8 <mo_kline+0x51c>
    1360:	add	r1, pc, r1
    1364:	mov	r0, r4
    1368:	mov	r2, r9
    136c:	bl	d64 <propagate_generic@plt>
    1370:	add	sp, sp, #24
    1374:	ldr	r0, [pc, #880]	; 16ec <mo_kline+0x520>
    1378:	ldr	r0, [pc, r0]
    137c:	add	r1, r0, #88	; 0x58
    1380:	mov	r0, r9
    1384:	bl	ed8 <match@plt>
    1388:	mov	r1, #0
    138c:	str	r1, [fp, #-116]	; 0xffffff8c
    1390:	cmp	r0, #0
    1394:	bne	14e4 <mo_kline+0x318>
    1398:	b	16a8 <mo_kline+0x4dc>
    139c:	sub	sp, sp, #8
    13a0:	ldr	r0, [pc, #784]	; 16b8 <mo_kline+0x4ec>
    13a4:	add	r0, pc, r0
    13a8:	str	r0, [sp]
    13ac:	add	r3, r4, #88	; 0x58
    13b0:	ldr	r0, [pc, #772]	; 16bc <mo_kline+0x4f0>
    13b4:	ldr	r0, [pc, r0]
    13b8:	add	r2, r0, #88	; 0x58
    13bc:	ldr	r1, [pc, #764]	; 16c0 <mo_kline+0x4f4>
    13c0:	add	r1, pc, r1
    13c4:	mov	r0, r4
    13c8:	bl	da0 <sendto_one@plt>
    13cc:	add	sp, sp, #8
    13d0:	sub	sp, fp, #28
    13d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    13d8:	ldr	r0, [r4, #24]
    13dc:	cmp	r0, #0
    13e0:	beq	1448 <mo_kline+0x27c>
    13e4:	ldr	r0, [r0, #36]	; 0x24
    13e8:	cmp	r0, #0
    13ec:	beq	1448 <mo_kline+0x27c>
    13f0:	ldr	r1, [pc, #720]	; 16c8 <mo_kline+0x4fc>
    13f4:	add	r1, pc, r1
    13f8:	bl	f44 <privilegeset_in_set@plt>
    13fc:	cmp	r0, #0
    1400:	beq	1448 <mo_kline+0x27c>
    1404:	ldr	r0, [fp, #8]
    1408:	add	r0, r0, r5, lsl #2
    140c:	ldr	r9, [r0, #8]
    1410:	mov	r6, sl
    1414:	cmp	r6, r7
    1418:	blt	12c4 <mo_kline+0xf8>
    141c:	sub	sp, sp, #8
    1420:	ldr	r0, [pc, #680]	; 16d0 <mo_kline+0x504>
    1424:	add	r0, pc, r0
    1428:	str	r0, [sp]
    142c:	add	r3, r4, #88	; 0x58
    1430:	ldr	r0, [pc, #668]	; 16d4 <mo_kline+0x508>
    1434:	ldr	r0, [pc, r0]
    1438:	add	r2, r0, #88	; 0x58
    143c:	ldr	r1, [pc, #660]	; 16d8 <mo_kline+0x50c>
    1440:	add	r1, pc, r1
    1444:	b	13c4 <mo_kline+0x1f8>
    1448:	sub	sp, sp, #8
    144c:	ldr	r0, [pc, #632]	; 16cc <mo_kline+0x500>
    1450:	add	r0, pc, r0
    1454:	b	13a8 <mo_kline+0x1dc>
    1458:	ldr	r1, [pc, #636]	; 16dc <mo_kline+0x510>
    145c:	add	r1, pc, r1
    1460:	sub	r2, fp, #44	; 0x2c
    1464:	mov	r0, r4
    1468:	mov	r3, r6
    146c:	bl	efc <sendto_one_notice@plt>
    1470:	sub	sp, fp, #28
    1474:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1478:	ldr	r0, [pc, #624]	; 16f0 <mo_kline+0x524>
    147c:	ldr	r0, [pc, r0]
    1480:	ldr	r0, [r0, #8]
    1484:	cmp	r0, #0
    1488:	ldr	r7, [fp, #-124]	; 0xffffff84
    148c:	beq	14e4 <mo_kline+0x318>
    1490:	cmp	r8, #0
    1494:	bne	14e4 <mo_kline+0x318>
    1498:	ldr	r0, [pc, #596]	; 16f4 <mo_kline+0x528>
    149c:	ldr	r0, [pc, r0]
    14a0:	ldr	r3, [r0]
    14a4:	sub	sp, sp, #24
    14a8:	ldr	r0, [pc, #584]	; 16f8 <mo_kline+0x52c>
    14ac:	add	r0, pc, r0
    14b0:	stm	sp, {r0, r7}
    14b4:	sub	r0, fp, #44	; 0x2c
    14b8:	str	r0, [sp, #8]
    14bc:	str	r6, [sp, #12]
    14c0:	str	r5, [sp, #16]
    14c4:	mov	r2, #2
    14c8:	cmp	r7, #0
    14cc:	movwgt	r2, #1
    14d0:	ldr	r1, [pc, #548]	; 16fc <mo_kline+0x530>
    14d4:	add	r1, pc, r1
    14d8:	mov	r0, r4
    14dc:	bl	e24 <cluster_generic@plt>
    14e0:	add	sp, sp, #24
    14e4:	sub	r1, fp, #44	; 0x2c
    14e8:	mov	r0, r4
    14ec:	mov	r2, r6
    14f0:	bl	1c58 <valid_user_host>
    14f4:	cmp	r0, #0
    14f8:	beq	16a8 <mo_kline+0x4dc>
    14fc:	sub	r0, fp, #44	; 0x2c
    1500:	mov	r1, r6
    1504:	bl	e6c <valid_wild_card@plt>
    1508:	cmp	r0, #0
    150c:	beq	1544 <mo_kline+0x378>
    1510:	ldr	r0, [fp, #-116]	; 0xffffff8c
    1514:	eor	r0, r0, #1
    1518:	cmp	r7, #0
    151c:	mov	r1, r7
    1520:	movwne	r1, #1
    1524:	orrs	r0, r1, r0
    1528:	bne	1568 <mo_kline+0x39c>
    152c:	ldr	r1, [pc, #468]	; 1708 <mo_kline+0x53c>
    1530:	add	r1, pc, r1
    1534:	mov	r0, r4
    1538:	bl	efc <sendto_one_notice@plt>
    153c:	sub	sp, fp, #28
    1540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1544:	ldr	r0, [pc, #436]	; 1700 <mo_kline+0x534>
    1548:	ldr	r0, [pc, r0]
    154c:	ldr	r2, [r0, #236]	; 0xec
    1550:	ldr	r1, [pc, #428]	; 1704 <mo_kline+0x538>
    1554:	add	r1, pc, r1
    1558:	mov	r0, r4
    155c:	bl	efc <sendto_one_notice@plt>
    1560:	sub	sp, fp, #28
    1564:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1568:	sub	r1, fp, #44	; 0x2c
    156c:	mov	r0, r4
    1570:	mov	r2, r6
    1574:	mov	r3, r7
    1578:	bl	1ce0 <already_placed_kline>
    157c:	cmp	r0, #0
    1580:	bne	16a8 <mo_kline+0x4dc>
    1584:	bl	e60 <rb_set_time@plt>
    1588:	bl	d70 <make_conf@plt>
    158c:	mov	sl, r0
    1590:	mov	r0, #64	; 0x40
    1594:	str	r0, [sl]
    1598:	bl	d88 <rb_current_time@plt>
    159c:	str	r0, [sl, #40]	; 0x28
    15a0:	mov	r0, r6
    15a4:	bl	1e40 <rb_strdup>
    15a8:	str	r0, [sl, #16]
    15ac:	sub	r0, fp, #44	; 0x2c
    15b0:	bl	1e40 <rb_strdup>
    15b4:	mov	r8, #0
    15b8:	str	r0, [sl, #28]
    15bc:	str	r8, [sl, #32]
    15c0:	mov	r0, r4
    15c4:	bl	e0c <get_oper_name@plt>
    15c8:	bl	e30 <operhash_add@plt>
    15cc:	str	r0, [sl, #12]
    15d0:	mov	r0, r5
    15d4:	bl	ea8 <strlen@plt>
    15d8:	movw	r1, #391	; 0x187
    15dc:	cmp	r0, r1
    15e0:	movcs	r0, #0
    15e4:	strbcs	r0, [r5, #390]	; 0x186
    15e8:	mov	r0, r5
    15ec:	mov	r1, #124	; 0x7c
    15f0:	bl	eb4 <strchr@plt>
    15f4:	cmp	r0, #0
    15f8:	ldr	r9, [fp, #-116]	; 0xffffff8c
    15fc:	beq	1628 <mo_kline+0x45c>
    1600:	mov	r6, r0
    1604:	mov	r0, #0
    1608:	strb	r0, [r6]
    160c:	ldrb	r0, [r6, #1]!
    1610:	cmp	r0, #0
    1614:	beq	1624 <mo_kline+0x458>
    1618:	mov	r0, r6
    161c:	bl	1e40 <rb_strdup>
    1620:	str	r0, [sl, #24]
    1624:	mov	r8, r6
    1628:	mov	r0, r5
    162c:	bl	1e40 <rb_strdup>
    1630:	str	r0, [sl, #20]
    1634:	cmp	r9, #0
    1638:	beq	1660 <mo_kline+0x494>
    163c:	sub	sp, sp, #8
    1640:	str	r7, [sp]
    1644:	mov	r0, r4
    1648:	mov	r1, sl
    164c:	mov	r2, r5
    1650:	mov	r3, r8
    1654:	bl	1e70 <apply_prop_kline>
    1658:	add	sp, sp, #8
    165c:	b	16a0 <mo_kline+0x4d4>
    1660:	cmp	r7, #1
    1664:	blt	168c <mo_kline+0x4c0>
    1668:	sub	sp, sp, #8
    166c:	str	r7, [sp]
    1670:	mov	r0, r4
    1674:	mov	r1, sl
    1678:	mov	r2, r5
    167c:	mov	r3, r8
    1680:	bl	20c4 <apply_tkline>
    1684:	add	sp, sp, #8
    1688:	b	16a0 <mo_kline+0x4d4>
    168c:	mov	r0, r4
    1690:	mov	r1, sl
    1694:	mov	r2, r5
    1698:	mov	r3, r8
    169c:	bl	2244 <apply_kline>
    16a0:	mov	r0, sl
    16a4:	bl	e3c <check_one_kline@plt>
    16a8:	sub	sp, fp, #28
    16ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    16b0:	.word	0x00012efc
    16b4:	.word	0x0000198c
    16b8:	.word	0x00001801
    16bc:	.word	0x00012d28
    16c0:	.word	0x000017eb
    16c4:	.word	0x00001926
    16c8:	.word	0x000017e1
    16cc:	.word	0x0000178a
    16d0:	.word	0x00001776
    16d4:	.word	0x00012ca8
    16d8:	.word	0x000017a4
    16dc:	.word	0x000017ad
    16e0:	.word	0x00012da4
    16e4:	.word	0x0000190d
    16e8:	.word	0x0000183a
    16ec:	.word	0x00012d64
    16f0:	.word	0x00012c50
    16f4:	.word	0x00012c34
    16f8:	.word	0x000017aa
    16fc:	.word	0x000016c6
    1700:	.word	0x00012b98
    1704:	.word	0x00001710
    1708:	.word	0x0000177b

0000170c <ms_unkline>:
    170c:	push	{r4, r5, r6, sl, fp, lr}
    1710:	add	fp, sp, #16
    1714:	sub	sp, sp, #16
    1718:	mov	r6, r2
    171c:	ldr	r0, [pc, #136]	; 17ac <ms_unkline+0xa0>
    1720:	ldr	r0, [pc, r0]
    1724:	ldr	r3, [r0]
    1728:	ldr	r5, [fp, #8]
    172c:	ldr	r2, [r5, #4]
    1730:	ldr	r0, [r5, #8]
    1734:	ldr	r1, [r5, #12]
    1738:	ldr	r4, [pc, #112]	; 17b0 <ms_unkline+0xa4>
    173c:	add	r4, pc, r4
    1740:	str	r4, [sp]
    1744:	stmib	sp, {r0, r1}
    1748:	ldr	r1, [pc, #100]	; 17b4 <ms_unkline+0xa8>
    174c:	add	r1, pc, r1
    1750:	mov	r0, r6
    1754:	bl	d64 <propagate_generic@plt>
    1758:	ldr	r0, [r5, #4]
    175c:	ldr	r1, [pc, #84]	; 17b8 <ms_unkline+0xac>
    1760:	ldr	r1, [pc, r1]
    1764:	add	r1, r1, #88	; 0x58
    1768:	bl	ed8 <match@plt>
    176c:	cmp	r0, #0
    1770:	beq	17a4 <ms_unkline+0x98>
    1774:	ldrh	r0, [r6, #80]	; 0x50
    1778:	cmp	r0, #64	; 0x40
    177c:	bne	17a4 <ms_unkline+0x98>
    1780:	ldr	r0, [r6, #24]
    1784:	cmp	r0, #0
    1788:	beq	17a4 <ms_unkline+0x98>
    178c:	ldr	r1, [r5, #8]
    1790:	ldr	r2, [r5, #12]
    1794:	mov	r0, r6
    1798:	sub	sp, fp, #16
    179c:	pop	{r4, r5, r6, sl, fp, lr}
    17a0:	b	2ae4 <handle_remote_unkline>
    17a4:	sub	sp, fp, #16
    17a8:	pop	{r4, r5, r6, sl, fp, pc}
    17ac:	.word	0x00012994
    17b0:	.word	0x00001805
    17b4:	.word	0x0000144c
    17b8:	.word	0x0001297c

000017bc <me_unkline>:
    17bc:	ldrh	r0, [r2, #80]	; 0x50
    17c0:	cmp	r0, #64	; 0x40
    17c4:	bxne	lr
    17c8:	ldr	r0, [r2, #24]
    17cc:	cmp	r0, #0
    17d0:	beq	17e8 <me_unkline+0x2c>
    17d4:	ldr	r0, [sp]
    17d8:	ldmib	r0, {r1, r3}
    17dc:	mov	r0, r2
    17e0:	mov	r2, r3
    17e4:	b	2ae4 <handle_remote_unkline>
    17e8:	bx	lr

000017ec <mo_unkline>:
    17ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    17f0:	add	fp, sp, #24
    17f4:	sub	sp, sp, #8
    17f8:	mov	r7, r3
    17fc:	mov	r4, r2
    1800:	mov	r0, #42	; 0x2a
    1804:	strh	r0, [fp, #-30]	; 0xffffffe2
    1808:	ldr	r8, [fp, #8]
    180c:	ldr	r6, [r8, #4]
    1810:	mov	r0, r6
    1814:	bl	ea8 <strlen@plt>
    1818:	add	r0, r0, #8
    181c:	bic	r0, r0, #7
    1820:	sub	r5, sp, r0
    1824:	mov	sp, r5
    1828:	mov	r0, r5
    182c:	mov	r1, r6
    1830:	bl	e48 <strcpy@plt>
    1834:	ldr	r0, [r4, #24]
    1838:	cmp	r0, #0
    183c:	beq	18ac <mo_unkline+0xc0>
    1840:	ldr	r0, [r0, #36]	; 0x24
    1844:	cmp	r0, #0
    1848:	beq	18ac <mo_unkline+0xc0>
    184c:	ldr	r1, [pc, #688]	; 1b04 <mo_unkline+0x318>
    1850:	add	r1, pc, r1
    1854:	bl	f44 <privilegeset_in_set@plt>
    1858:	cmp	r0, #0
    185c:	beq	18ac <mo_unkline+0xc0>
    1860:	mov	r0, r5
    1864:	mov	r1, #64	; 0x40
    1868:	bl	eb4 <strchr@plt>
    186c:	cmp	r0, #0
    1870:	beq	18e8 <mo_unkline+0xfc>
    1874:	mov	r1, #0
    1878:	strb	r1, [r0]
    187c:	ldrb	r1, [r5]
    1880:	sub	r2, fp, #30
    1884:	cmp	r1, #0
    1888:	mov	r9, r5
    188c:	moveq	r9, r2
    1890:	ldrb	r1, [r0, #1]!
    1894:	cmp	r1, #0
    1898:	moveq	r0, r2
    189c:	mov	r5, r0
    18a0:	cmp	r7, #4
    18a4:	bge	1928 <mo_unkline+0x13c>
    18a8:	b	1940 <mo_unkline+0x154>
    18ac:	sub	sp, sp, #8
    18b0:	ldr	r0, [pc, #592]	; 1b08 <mo_unkline+0x31c>
    18b4:	add	r0, pc, r0
    18b8:	str	r0, [sp]
    18bc:	add	r3, r4, #88	; 0x58
    18c0:	ldr	r0, [pc, #580]	; 1b0c <mo_unkline+0x320>
    18c4:	ldr	r0, [pc, r0]
    18c8:	add	r2, r0, #88	; 0x58
    18cc:	ldr	r1, [pc, #572]	; 1b10 <mo_unkline+0x324>
    18d0:	add	r1, pc, r1
    18d4:	mov	r0, r4
    18d8:	bl	da0 <sendto_one@plt>
    18dc:	add	sp, sp, #8
    18e0:	sub	sp, fp, #24
    18e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    18e8:	ldrb	r0, [r5]
    18ec:	sub	r9, fp, #30
    18f0:	cmp	r0, #42	; 0x2a
    18f4:	beq	1920 <mo_unkline+0x134>
    18f8:	mov	r0, r5
    18fc:	mov	r1, #46	; 0x2e
    1900:	bl	eb4 <strchr@plt>
    1904:	cmp	r0, #0
    1908:	bne	1920 <mo_unkline+0x134>
    190c:	mov	r0, r5
    1910:	mov	r1, #58	; 0x3a
    1914:	bl	eb4 <strchr@plt>
    1918:	cmp	r0, #0
    191c:	beq	1aec <mo_unkline+0x300>
    1920:	cmp	r7, #4
    1924:	blt	1940 <mo_unkline+0x154>
    1928:	ldr	r0, [r8, #8]
    192c:	ldr	r1, [pc, #484]	; 1b18 <mo_unkline+0x32c>
    1930:	add	r1, pc, r1
    1934:	bl	f50 <irccmp@plt>
    1938:	cmp	r0, #0
    193c:	beq	1a1c <mo_unkline+0x230>
    1940:	mov	r0, r5
    1944:	mov	r1, #64	; 0x40
    1948:	mov	r2, r9
    194c:	bl	f20 <find_exact_conf_by_address@plt>
    1950:	mov	r7, r0
    1954:	cmp	r0, #0
    1958:	beq	196c <mo_unkline+0x180>
    195c:	ldr	r0, [r7, #44]	; 0x2c
    1960:	mov	r6, #1
    1964:	cmp	r0, #0
    1968:	bne	19c4 <mo_unkline+0x1d8>
    196c:	ldr	r0, [pc, #448]	; 1b34 <mo_unkline+0x348>
    1970:	ldr	r0, [pc, r0]
    1974:	ldr	r0, [r0, #8]
    1978:	mov	r6, #1
    197c:	cmp	r0, #0
    1980:	beq	19bc <mo_unkline+0x1d0>
    1984:	ldr	r0, [pc, #428]	; 1b38 <mo_unkline+0x34c>
    1988:	ldr	r0, [pc, r0]
    198c:	ldr	r3, [r0]
    1990:	sub	sp, sp, #16
    1994:	ldr	r0, [pc, #416]	; 1b3c <mo_unkline+0x350>
    1998:	add	r0, pc, r0
    199c:	stm	sp, {r0, r9}
    19a0:	str	r5, [sp, #8]
    19a4:	ldr	r1, [pc, #404]	; 1b40 <mo_unkline+0x354>
    19a8:	add	r1, pc, r1
    19ac:	mov	r0, r4
    19b0:	mov	r2, #4
    19b4:	bl	e24 <cluster_generic@plt>
    19b8:	add	sp, sp, #16
    19bc:	cmp	r7, #0
    19c0:	beq	1abc <mo_unkline+0x2d0>
    19c4:	ldr	r0, [r7, #44]	; 0x2c
    19c8:	cmp	r0, #0
    19cc:	beq	19ec <mo_unkline+0x200>
    19d0:	cmp	r6, #0
    19d4:	beq	1a10 <mo_unkline+0x224>
    19d8:	mov	r0, r4
    19dc:	mov	r1, r7
    19e0:	bl	2644 <remove_prop_kline>
    19e4:	sub	sp, fp, #24
    19e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    19ec:	mov	r0, r4
    19f0:	mov	r1, r7
    19f4:	bl	27cc <remove_temp_kline>
    19f8:	cmp	r0, #0
    19fc:	moveq	r0, r4
    1a00:	moveq	r1, r7
    1a04:	bleq	28f0 <remove_permkline_match>
    1a08:	sub	sp, fp, #24
    1a0c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1a10:	ldr	r1, [pc, #304]	; 1b48 <mo_unkline+0x35c>
    1a14:	add	r1, pc, r1
    1a18:	b	1ac4 <mo_unkline+0x2d8>
    1a1c:	ldr	r0, [r4, #24]
    1a20:	cmp	r0, #0
    1a24:	beq	1adc <mo_unkline+0x2f0>
    1a28:	ldr	r0, [r0, #36]	; 0x24
    1a2c:	cmp	r0, #0
    1a30:	beq	1adc <mo_unkline+0x2f0>
    1a34:	ldr	r1, [pc, #224]	; 1b1c <mo_unkline+0x330>
    1a38:	add	r1, pc, r1
    1a3c:	bl	f44 <privilegeset_in_set@plt>
    1a40:	cmp	r0, #0
    1a44:	beq	1adc <mo_unkline+0x2f0>
    1a48:	ldr	r2, [r8, #12]
    1a4c:	ldr	r0, [pc, #208]	; 1b24 <mo_unkline+0x338>
    1a50:	ldr	r0, [pc, r0]
    1a54:	ldr	r3, [r0]
    1a58:	sub	sp, sp, #16
    1a5c:	ldr	r0, [pc, #196]	; 1b28 <mo_unkline+0x33c>
    1a60:	add	r0, pc, r0
    1a64:	stm	sp, {r0, r9}
    1a68:	str	r5, [sp, #8]
    1a6c:	ldr	r1, [pc, #184]	; 1b2c <mo_unkline+0x340>
    1a70:	add	r1, pc, r1
    1a74:	mov	r0, r4
    1a78:	bl	d64 <propagate_generic@plt>
    1a7c:	add	sp, sp, #16
    1a80:	ldr	r0, [r8, #12]
    1a84:	ldr	r1, [pc, #164]	; 1b30 <mo_unkline+0x344>
    1a88:	ldr	r1, [pc, r1]
    1a8c:	add	r1, r1, #88	; 0x58
    1a90:	bl	ed8 <match@plt>
    1a94:	cmp	r0, #0
    1a98:	beq	1a08 <mo_unkline+0x21c>
    1a9c:	mov	r0, r5
    1aa0:	mov	r1, #64	; 0x40
    1aa4:	mov	r2, r9
    1aa8:	bl	f20 <find_exact_conf_by_address@plt>
    1aac:	mov	r7, r0
    1ab0:	mov	r6, #0
    1ab4:	cmp	r7, #0
    1ab8:	bne	19c4 <mo_unkline+0x1d8>
    1abc:	ldr	r1, [pc, #128]	; 1b44 <mo_unkline+0x358>
    1ac0:	add	r1, pc, r1
    1ac4:	mov	r0, r4
    1ac8:	mov	r2, r9
    1acc:	mov	r3, r5
    1ad0:	bl	efc <sendto_one_notice@plt>
    1ad4:	sub	sp, fp, #24
    1ad8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1adc:	sub	sp, sp, #8
    1ae0:	ldr	r0, [pc, #56]	; 1b20 <mo_unkline+0x334>
    1ae4:	add	r0, pc, r0
    1ae8:	b	18b8 <mo_unkline+0xcc>
    1aec:	ldr	r1, [pc, #32]	; 1b14 <mo_unkline+0x328>
    1af0:	add	r1, pc, r1
    1af4:	mov	r0, r4
    1af8:	bl	efc <sendto_one_notice@plt>
    1afc:	sub	sp, fp, #24
    1b00:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1b04:	.word	0x00001744
    1b08:	.word	0x000016e5
    1b0c:	.word	0x00012818
    1b10:	.word	0x000012db
    1b14:	.word	0x000014b1
    1b18:	.word	0x000012a2
    1b1c:	.word	0x0000119d
    1b20:	.word	0x000010f6
    1b24:	.word	0x00012664
    1b28:	.word	0x000014e1
    1b2c:	.word	0x00001128
    1b30:	.word	0x00012654
    1b34:	.word	0x0001275c
    1b38:	.word	0x0001272c
    1b3c:	.word	0x000015a9
    1b40:	.word	0x000011f0
    1b44:	.word	0x000014f5
    1b48:	.word	0x000015b6

00001b4c <find_user_host>:
    1b4c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    1b50:	add	fp, sp, #24
    1b54:	mov	r5, r3
    1b58:	mov	r6, r2
    1b5c:	mov	r7, r1
    1b60:	mov	r8, r0
    1b64:	mov	r0, r1
    1b68:	mov	r1, #64	; 0x40
    1b6c:	bl	eb4 <strchr@plt>
    1b70:	cmp	r0, #0
    1b74:	beq	1ba4 <find_user_host+0x58>
    1b78:	mov	r4, r0
    1b7c:	mov	r0, #0
    1b80:	strb	r0, [r4], #1
    1b84:	ldrb	r0, [r7]
    1b88:	cmp	r0, #0
    1b8c:	beq	1be0 <find_user_host+0x94>
    1b90:	mov	r0, r6
    1b94:	mov	r1, r7
    1b98:	mov	r2, #11
    1b9c:	bl	f2c <rb_strlcpy@plt>
    1ba0:	b	1be8 <find_user_host+0x9c>
    1ba4:	mov	r0, r7
    1ba8:	mov	r1, #46	; 0x2e
    1bac:	bl	eb4 <strchr@plt>
    1bb0:	cmp	r0, #0
    1bb4:	bne	1bcc <find_user_host+0x80>
    1bb8:	mov	r0, r7
    1bbc:	mov	r1, #58	; 0x3a
    1bc0:	bl	eb4 <strchr@plt>
    1bc4:	cmp	r0, #0
    1bc8:	beq	1c44 <find_user_host+0xf8>
    1bcc:	mov	r0, #42	; 0x2a
    1bd0:	strh	r0, [r6]
    1bd4:	mov	r0, r5
    1bd8:	mov	r1, r7
    1bdc:	b	1bfc <find_user_host+0xb0>
    1be0:	mov	r0, #42	; 0x2a
    1be4:	strh	r0, [r6]
    1be8:	ldrb	r0, [r4]
    1bec:	cmp	r0, #0
    1bf0:	beq	1c08 <find_user_host+0xbc>
    1bf4:	mov	r0, r5
    1bf8:	mov	r1, r4
    1bfc:	mov	r2, #64	; 0x40
    1c00:	bl	f2c <rb_strlcpy@plt>
    1c04:	b	1c10 <find_user_host+0xc4>
    1c08:	mov	r0, #42	; 0x2a
    1c0c:	strh	r0, [r5]
    1c10:	ldrb	r0, [r6]
    1c14:	ldr	r1, [pc, #56]	; 1c54 <find_user_host+0x108>
    1c18:	add	r1, pc, r1
    1c1c:	cmp	r0, #58	; 0x3a
    1c20:	beq	1c34 <find_user_host+0xe8>
    1c24:	ldrb	r2, [r5]
    1c28:	mov	r0, #1
    1c2c:	cmp	r2, #58	; 0x3a
    1c30:	bne	1c40 <find_user_host+0xf4>
    1c34:	mov	r0, r8
    1c38:	bl	efc <sendto_one_notice@plt>
    1c3c:	mov	r0, #0
    1c40:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1c44:	ldr	r1, [pc, #4]	; 1c50 <find_user_host+0x104>
    1c48:	add	r1, pc, r1
    1c4c:	b	1c34 <find_user_host+0xe8>
    1c50:	.word	0x00001086
    1c54:	.word	0x000010da

00001c58 <valid_user_host>:
    1c58:	push	{r4, r5, r6, sl, fp, lr}
    1c5c:	add	fp, sp, #16
    1c60:	mov	r5, r2
    1c64:	mov	r6, r1
    1c68:	mov	r4, r0
    1c6c:	mov	r0, r2
    1c70:	mov	r1, #35	; 0x23
    1c74:	bl	eb4 <strchr@plt>
    1c78:	cmp	r0, #0
    1c7c:	bne	1cbc <valid_user_host+0x64>
    1c80:	mov	r0, r6
    1c84:	mov	r1, #35	; 0x23
    1c88:	bl	eb4 <strchr@plt>
    1c8c:	cmp	r0, #0
    1c90:	bne	1cbc <valid_user_host+0x64>
    1c94:	mov	r0, r6
    1c98:	mov	r1, #33	; 0x21
    1c9c:	bl	eb4 <strchr@plt>
    1ca0:	cmp	r0, #0
    1ca4:	bne	1cbc <valid_user_host+0x64>
    1ca8:	mov	r0, r5
    1cac:	mov	r1, #64	; 0x40
    1cb0:	bl	eb4 <strchr@plt>
    1cb4:	cmp	r0, #0
    1cb8:	beq	1cd4 <valid_user_host+0x7c>
    1cbc:	ldr	r1, [pc, #24]	; 1cdc <valid_user_host+0x84>
    1cc0:	add	r1, pc, r1
    1cc4:	mov	r0, r4
    1cc8:	bl	efc <sendto_one_notice@plt>
    1ccc:	mov	r0, #0
    1cd0:	pop	{r4, r5, r6, sl, fp, pc}
    1cd4:	mov	r0, #1
    1cd8:	pop	{r4, r5, r6, sl, fp, pc}
    1cdc:	.word	0x00001032

00001ce0 <already_placed_kline>:
    1ce0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1ce4:	add	fp, sp, #28
    1ce8:	sub	sp, sp, #148	; 0x94
    1cec:	mov	r9, r3
    1cf0:	mov	r4, r2
    1cf4:	mov	sl, r1
    1cf8:	mov	r8, r0
    1cfc:	mov	r0, r2
    1d00:	mov	r1, #64	; 0x40
    1d04:	mov	r2, sl
    1d08:	bl	f20 <find_exact_conf_by_address@plt>
    1d0c:	mov	r7, r0
    1d10:	cmp	r0, #0
    1d14:	bne	1dc0 <already_placed_kline+0xe0>
    1d18:	ldr	r0, [pc, #276]	; 1e34 <already_placed_kline+0x154>
    1d1c:	ldr	r0, [pc, r0]
    1d20:	ldr	r0, [r0, #140]	; 0x8c
    1d24:	cmp	r0, #0
    1d28:	beq	1dc0 <already_placed_kline+0xe0>
    1d2c:	mov	r6, #0
    1d30:	str	r6, [sp, #16]
    1d34:	add	r7, sp, #20
    1d38:	add	r2, sp, #16
    1d3c:	mov	r0, r4
    1d40:	mov	r1, r7
    1d44:	bl	d7c <parse_netmask_strict@plt>
    1d48:	cmp	r0, #2
    1d4c:	beq	1d5c <already_placed_kline+0x7c>
    1d50:	cmp	r0, #3
    1d54:	movne	r7, #0
    1d58:	moveq	r0, #10
    1d5c:	mov	r1, #64	; 0x40
    1d60:	str	r1, [sp]
    1d64:	stmib	sp, {r0, sl}
    1d68:	str	r6, [sp, #12]
    1d6c:	mov	r0, r4
    1d70:	mov	r1, #0
    1d74:	mov	r2, #0
    1d78:	mov	r3, r7
    1d7c:	bl	dac <find_conf_by_address@plt>
    1d80:	cmp	r0, #0
    1d84:	beq	1e28 <already_placed_kline+0x148>
    1d88:	mov	r7, r0
    1d8c:	ldr	r0, [r0, #16]
    1d90:	mov	r1, #47	; 0x2f
    1d94:	bl	eb4 <strchr@plt>
    1d98:	ldr	r5, [sp, #16]
    1d9c:	cmp	r5, #1
    1da0:	blt	1dc8 <already_placed_kline+0xe8>
    1da4:	cmp	r0, #0
    1da8:	beq	1e28 <already_placed_kline+0x148>
    1dac:	add	r0, r0, #1
    1db0:	bl	f14 <atoi@plt>
    1db4:	cmp	r5, r0
    1db8:	bge	1dc8 <already_placed_kline+0xe8>
    1dbc:	b	1e28 <already_placed_kline+0x148>
    1dc0:	cmp	r7, #0
    1dc4:	beq	1e24 <already_placed_kline+0x144>
    1dc8:	cmp	r9, #0
    1dcc:	bne	1de0 <already_placed_kline+0x100>
    1dd0:	ldrb	r0, [r7, #6]
    1dd4:	mov	r6, #0
    1dd8:	tst	r0, #128	; 0x80
    1ddc:	bne	1e28 <already_placed_kline+0x148>
    1de0:	ldr	r0, [r7, #16]
    1de4:	ldr	r1, [r7, #20]
    1de8:	ldr	r2, [r7, #28]
    1dec:	ldr	r3, [pc, #68]	; 1e38 <already_placed_kline+0x158>
    1df0:	add	r3, pc, r3
    1df4:	cmp	r1, #0
    1df8:	movne	r3, r1
    1dfc:	str	r2, [sp]
    1e00:	stmib	sp, {r0, r3}
    1e04:	ldr	r1, [pc, #48]	; 1e3c <already_placed_kline+0x15c>
    1e08:	add	r1, pc, r1
    1e0c:	mov	r0, r8
    1e10:	mov	r2, sl
    1e14:	mov	r3, r4
    1e18:	bl	efc <sendto_one_notice@plt>
    1e1c:	mov	r6, #1
    1e20:	b	1e28 <already_placed_kline+0x148>
    1e24:	mov	r6, #0
    1e28:	mov	r0, r6
    1e2c:	sub	sp, fp, #28
    1e30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1e34:	.word	0x000123c4
    1e38:	.word	0x00000f12
    1e3c:	.word	0x00000f06

00001e40 <rb_strdup>:
    1e40:	push	{r4, sl, fp, lr}
    1e44:	add	fp, sp, #8
    1e48:	mov	r4, r0
    1e4c:	bl	ea8 <strlen@plt>
    1e50:	add	r0, r0, #1
    1e54:	bl	e78 <malloc@plt>
    1e58:	cmp	r0, #0
    1e5c:	beq	1e6c <rb_strdup+0x2c>
    1e60:	mov	r1, r4
    1e64:	pop	{r4, sl, fp, lr}
    1e68:	b	e48 <strcpy@plt>
    1e6c:	bl	dd0 <rb_outofmemory@plt>

00001e70 <apply_prop_kline>:
    1e70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1e74:	add	fp, sp, #28
    1e78:	sub	sp, sp, #44	; 0x2c
    1e7c:	mov	r9, r3
    1e80:	mov	r8, r2
    1e84:	mov	r7, r1
    1e88:	mov	sl, r0
    1e8c:	ldr	r0, [r1, #4]
    1e90:	orr	r0, r0, #8912896	; 0x880000
    1e94:	str	r0, [r1, #4]
    1e98:	ldr	r6, [fp, #8]
    1e9c:	bl	d88 <rb_current_time@plt>
    1ea0:	add	r0, r0, r6
    1ea4:	str	r0, [r7, #44]	; 0x2c
    1ea8:	str	r0, [r7, #36]	; 0x24
    1eac:	mov	r0, r7
    1eb0:	bl	dc4 <replace_old_ban@plt>
    1eb4:	bl	e9c <rb_make_rb_dlink_node@plt>
    1eb8:	mov	r1, r0
    1ebc:	mov	r0, r7
    1ec0:	bl	23ac <rb_dlinkAdd>
    1ec4:	ldr	r0, [r7, #16]
    1ec8:	ldr	r2, [r7, #28]
    1ecc:	str	r7, [sp]
    1ed0:	mov	r1, #64	; 0x40
    1ed4:	mov	r3, #0
    1ed8:	bl	e84 <add_conf_by_address@plt>
    1edc:	cmp	r9, #0
    1ee0:	movw	r5, #34953	; 0x8889
    1ee4:	movt	r5, #34952	; 0x8888
    1ee8:	beq	1f64 <apply_prop_kline+0xf4>
    1eec:	ldrb	r0, [r9]
    1ef0:	cmp	r0, #0
    1ef4:	beq	1f64 <apply_prop_kline+0xf4>
    1ef8:	mov	r0, sl
    1efc:	bl	e0c <get_oper_name@plt>
    1f00:	mov	r3, r0
    1f04:	ldr	r0, [r7, #16]
    1f08:	ldr	r1, [r7, #28]
    1f0c:	smmla	r2, r6, r5, r6
    1f10:	asr	r4, r2, #5
    1f14:	add	r4, r4, r2, lsr #31
    1f18:	str	r4, [sp]
    1f1c:	str	r1, [sp, #4]
    1f20:	add	r1, sp, #8
    1f24:	stm	r1, {r0, r8, r9}
    1f28:	ldr	r2, [pc, #372]	; 20a4 <apply_prop_kline+0x234>
    1f2c:	add	r2, pc, r2
    1f30:	mov	r0, #256	; 0x100
    1f34:	mov	r1, #0
    1f38:	bl	de8 <sendto_realops_snomask@plt>
    1f3c:	mov	r0, sl
    1f40:	bl	e0c <get_oper_name@plt>
    1f44:	mov	r2, r0
    1f48:	ldr	r0, [r7, #16]
    1f4c:	ldr	r1, [r7, #28]
    1f50:	str	r1, [sp]
    1f54:	stmib	sp, {r0, r8, r9}
    1f58:	ldr	r1, [pc, #328]	; 20a8 <apply_prop_kline+0x238>
    1f5c:	add	r1, pc, r1
    1f60:	b	1fcc <apply_prop_kline+0x15c>
    1f64:	mov	r0, sl
    1f68:	bl	e0c <get_oper_name@plt>
    1f6c:	mov	r3, r0
    1f70:	ldr	r0, [r7, #16]
    1f74:	ldr	r1, [r7, #28]
    1f78:	smmla	r2, r6, r5, r6
    1f7c:	asr	r4, r2, #5
    1f80:	add	r4, r4, r2, lsr #31
    1f84:	str	r4, [sp]
    1f88:	str	r1, [sp, #4]
    1f8c:	str	r0, [sp, #8]
    1f90:	str	r8, [sp, #12]
    1f94:	ldr	r2, [pc, #256]	; 209c <apply_prop_kline+0x22c>
    1f98:	add	r2, pc, r2
    1f9c:	mov	r0, #256	; 0x100
    1fa0:	mov	r1, #0
    1fa4:	bl	de8 <sendto_realops_snomask@plt>
    1fa8:	mov	r0, sl
    1fac:	bl	e0c <get_oper_name@plt>
    1fb0:	mov	r2, r0
    1fb4:	ldr	r0, [r7, #16]
    1fb8:	ldr	r1, [r7, #28]
    1fbc:	str	r1, [sp]
    1fc0:	stmib	sp, {r0, r8}
    1fc4:	ldr	r1, [pc, #212]	; 20a0 <apply_prop_kline+0x230>
    1fc8:	add	r1, pc, r1
    1fcc:	mov	r0, #7
    1fd0:	mov	r3, r4
    1fd4:	bl	ecc <ilog@plt>
    1fd8:	ldr	r0, [r7, #16]
    1fdc:	ldr	r3, [r7, #28]
    1fe0:	str	r0, [sp]
    1fe4:	smmla	r0, r6, r5, r6
    1fe8:	asr	r1, r0, #5
    1fec:	add	r2, r1, r0, lsr #31
    1ff0:	ldr	r1, [pc, #180]	; 20ac <apply_prop_kline+0x23c>
    1ff4:	add	r1, pc, r1
    1ff8:	mov	r0, sl
    1ffc:	bl	efc <sendto_one_notice@plt>
    2000:	ldr	r0, [pc, #168]	; 20b0 <apply_prop_kline+0x240>
    2004:	ldr	r0, [pc, r0]
    2008:	ldr	ip, [r0]
    200c:	ldr	r1, [pc, #160]	; 20b4 <apply_prop_kline+0x244>
    2010:	ldr	r1, [pc, r1]
    2014:	ldr	lr, [r1]
    2018:	add	r4, r7, #36	; 0x24
    201c:	ldm	r4, {r2, r3, r4}
    2020:	ldr	r5, [r7, #16]
    2024:	ldr	r7, [r7, #28]
    2028:	ldr	r0, [pc, #136]	; 20b8 <apply_prop_kline+0x248>
    202c:	add	r0, pc, r0
    2030:	cmp	r9, #0
    2034:	mov	r6, r0
    2038:	movne	r6, r9
    203c:	ldr	r1, [pc, #120]	; 20bc <apply_prop_kline+0x24c>
    2040:	add	r1, pc, r1
    2044:	cmp	r9, #0
    2048:	moveq	r1, r0
    204c:	str	r1, [sp, #32]
    2050:	str	r6, [sp, #36]	; 0x24
    2054:	add	r0, sl, #396	; 0x18c
    2058:	ldr	r1, [pc, #96]	; 20c0 <apply_prop_kline+0x250>
    205c:	add	r1, pc, r1
    2060:	sub	r4, r4, r3
    2064:	sub	r2, r2, r3
    2068:	str	r1, [sp]
    206c:	stmib	sp, {r0, r7}
    2070:	str	r5, [sp, #12]
    2074:	str	r3, [sp, #16]
    2078:	add	r0, sp, #20
    207c:	stm	r0, {r2, r4, r8}
    2080:	orr	r2, ip, lr
    2084:	mov	r0, #0
    2088:	mov	r1, #0
    208c:	mov	r3, #0
    2090:	bl	e54 <sendto_server@plt>
    2094:	sub	sp, fp, #28
    2098:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    209c:	.word	0x00000d9f
    20a0:	.word	0x00000d9f
    20a4:	.word	0x00000e4c
    20a8:	.word	0x00000e4f
    20ac:	.word	0x00000dcb
    20b0:	.word	0x000120c0
    20b4:	.word	0x000120b0
    20b8:	.word	0x00001089
    20bc:	.word	0x00000dc8
    20c0:	.word	0x00000d88

000020c4 <apply_tkline>:
    20c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    20c8:	add	fp, sp, #28
    20cc:	sub	sp, sp, #20
    20d0:	mov	r7, r3
    20d4:	mov	r6, r2
    20d8:	mov	r5, r1
    20dc:	mov	r4, r0
    20e0:	ldr	r9, [fp, #8]
    20e4:	bl	d88 <rb_current_time@plt>
    20e8:	add	r0, r0, r9
    20ec:	str	r0, [r5, #36]	; 0x24
    20f0:	mov	r0, r5
    20f4:	bl	db8 <add_temp_kline@plt>
    20f8:	cmp	r7, #0
    20fc:	movw	sl, #34953	; 0x8889
    2100:	movt	sl, #34952	; 0x8888
    2104:	beq	218c <apply_tkline+0xc8>
    2108:	ldrb	r0, [r7]
    210c:	cmp	r0, #0
    2110:	beq	218c <apply_tkline+0xc8>
    2114:	mov	r0, r4
    2118:	bl	e0c <get_oper_name@plt>
    211c:	mov	ip, r0
    2120:	ldr	r0, [r5, #16]
    2124:	ldr	r1, [r5, #28]
    2128:	smmla	r2, r9, sl, r9
    212c:	asr	r3, r2, #5
    2130:	add	r8, r3, r2, lsr #31
    2134:	str	r8, [sp]
    2138:	str	r1, [sp, #4]
    213c:	add	r1, sp, #8
    2140:	stm	r1, {r0, r6, r7}
    2144:	ldr	r2, [pc, #236]	; 2238 <apply_tkline+0x174>
    2148:	add	r2, pc, r2
    214c:	mov	r0, #256	; 0x100
    2150:	mov	r1, #0
    2154:	mov	r3, ip
    2158:	bl	de8 <sendto_realops_snomask@plt>
    215c:	mov	r0, r4
    2160:	bl	e0c <get_oper_name@plt>
    2164:	mov	r2, r0
    2168:	ldr	r0, [r5, #16]
    216c:	ldr	r1, [r5, #28]
    2170:	str	r1, [sp]
    2174:	stmib	sp, {r0, r6, r7}
    2178:	ldr	r1, [pc, #188]	; 223c <apply_tkline+0x178>
    217c:	add	r1, pc, r1
    2180:	mov	r0, #7
    2184:	mov	r3, r8
    2188:	b	21fc <apply_tkline+0x138>
    218c:	mov	r0, r4
    2190:	bl	e0c <get_oper_name@plt>
    2194:	mov	r3, r0
    2198:	ldr	r0, [r5, #16]
    219c:	ldr	r1, [r5, #28]
    21a0:	smmla	r2, r9, sl, r9
    21a4:	asr	r7, r2, #5
    21a8:	add	r7, r7, r2, lsr #31
    21ac:	str	r7, [sp]
    21b0:	str	r1, [sp, #4]
    21b4:	str	r0, [sp, #8]
    21b8:	str	r6, [sp, #12]
    21bc:	ldr	r2, [pc, #108]	; 2230 <apply_tkline+0x16c>
    21c0:	add	r2, pc, r2
    21c4:	mov	r0, #256	; 0x100
    21c8:	mov	r1, #0
    21cc:	bl	de8 <sendto_realops_snomask@plt>
    21d0:	mov	r0, r4
    21d4:	bl	e0c <get_oper_name@plt>
    21d8:	mov	r2, r0
    21dc:	ldr	r0, [r5, #16]
    21e0:	ldr	r1, [r5, #28]
    21e4:	str	r1, [sp]
    21e8:	stmib	sp, {r0, r6}
    21ec:	ldr	r1, [pc, #64]	; 2234 <apply_tkline+0x170>
    21f0:	add	r1, pc, r1
    21f4:	mov	r0, #7
    21f8:	mov	r3, r7
    21fc:	bl	ecc <ilog@plt>
    2200:	ldr	r0, [r5, #16]
    2204:	ldr	r3, [r5, #28]
    2208:	str	r0, [sp]
    220c:	smmla	r0, r9, sl, r9
    2210:	asr	r1, r0, #5
    2214:	add	r2, r1, r0, lsr #31
    2218:	ldr	r1, [pc, #32]	; 2240 <apply_tkline+0x17c>
    221c:	add	r1, pc, r1
    2220:	mov	r0, r4
    2224:	bl	efc <sendto_one_notice@plt>
    2228:	sub	sp, fp, #28
    222c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2230:	.word	0x00000cc5
    2234:	.word	0x00000b77
    2238:	.word	0x00000d70
    223c:	.word	0x00000c2f
    2240:	.word	0x00000cd2

00002244 <apply_kline>:
    2244:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    2248:	add	fp, sp, #24
    224c:	sub	sp, sp, #16
    2250:	mov	r7, r3
    2254:	mov	r6, r2
    2258:	mov	r5, r1
    225c:	mov	r4, r0
    2260:	ldr	r0, [r1, #16]
    2264:	ldr	r2, [r1, #28]
    2268:	str	r1, [sp]
    226c:	mov	r8, #0
    2270:	mov	r1, #64	; 0x40
    2274:	mov	r3, #0
    2278:	bl	e84 <add_conf_by_address@plt>
    227c:	ldr	r3, [r5, #16]
    2280:	ldr	r2, [r5, #28]
    2284:	cmp	r7, #0
    2288:	beq	230c <apply_kline+0xc8>
    228c:	ldrb	r0, [r7]
    2290:	cmp	r0, #0
    2294:	movne	r0, r7
    2298:	str	r6, [sp]
    229c:	stmib	sp, {r0, r8}
    22a0:	mov	r0, #0
    22a4:	mov	r1, r4
    22a8:	bl	df4 <bandb_add@plt>
    22ac:	ldrb	r0, [r7]
    22b0:	cmp	r0, #0
    22b4:	beq	2320 <apply_kline+0xdc>
    22b8:	mov	r0, r4
    22bc:	bl	e0c <get_oper_name@plt>
    22c0:	mov	r3, r0
    22c4:	ldr	r0, [r5, #16]
    22c8:	ldr	r1, [r5, #28]
    22cc:	str	r1, [sp]
    22d0:	stmib	sp, {r0, r6, r7}
    22d4:	ldr	r2, [pc, #188]	; 2398 <apply_kline+0x154>
    22d8:	add	r2, pc, r2
    22dc:	mov	r0, #256	; 0x100
    22e0:	mov	r1, #0
    22e4:	bl	de8 <sendto_realops_snomask@plt>
    22e8:	mov	r0, r4
    22ec:	bl	e0c <get_oper_name@plt>
    22f0:	mov	r2, r0
    22f4:	ldr	r0, [r5, #16]
    22f8:	ldr	r3, [r5, #28]
    22fc:	stm	sp, {r0, r6, r7}
    2300:	ldr	r1, [pc, #148]	; 239c <apply_kline+0x158>
    2304:	add	r1, pc, r1
    2308:	b	2370 <apply_kline+0x12c>
    230c:	stm	sp, {r6, r8}
    2310:	str	r8, [sp, #8]
    2314:	mov	r0, #0
    2318:	mov	r1, r4
    231c:	bl	df4 <bandb_add@plt>
    2320:	mov	r0, r4
    2324:	bl	e0c <get_oper_name@plt>
    2328:	mov	r3, r0
    232c:	ldr	r0, [r5, #16]
    2330:	ldr	r1, [r5, #28]
    2334:	str	r1, [sp]
    2338:	stmib	sp, {r0, r6}
    233c:	ldr	r2, [pc, #92]	; 23a0 <apply_kline+0x15c>
    2340:	add	r2, pc, r2
    2344:	mov	r0, #256	; 0x100
    2348:	mov	r1, #0
    234c:	bl	de8 <sendto_realops_snomask@plt>
    2350:	mov	r0, r4
    2354:	bl	e0c <get_oper_name@plt>
    2358:	mov	r2, r0
    235c:	ldr	r0, [r5, #16]
    2360:	ldr	r3, [r5, #28]
    2364:	stm	sp, {r0, r6}
    2368:	ldr	r1, [pc, #52]	; 23a4 <apply_kline+0x160>
    236c:	add	r1, pc, r1
    2370:	mov	r0, #7
    2374:	bl	ecc <ilog@plt>
    2378:	ldr	r3, [r5, #16]
    237c:	ldr	r2, [r5, #28]
    2380:	ldr	r1, [pc, #32]	; 23a8 <apply_kline+0x164>
    2384:	add	r1, pc, r1
    2388:	mov	r0, r4
    238c:	sub	sp, fp, #24
    2390:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    2394:	b	efc <sendto_one_notice@plt>
    2398:	.word	0x00000c6f
    239c:	.word	0x00000c67
    23a0:	.word	0x00000bd6
    23a4:	.word	0x00000bcb
    23a8:	.word	0x00000bfa

000023ac <rb_dlinkAdd>:
    23ac:	push	{fp, lr}
    23b0:	mov	fp, sp
    23b4:	cmp	r0, #0
    23b8:	beq	2414 <rb_dlinkAdd+0x68>
    23bc:	cmp	r1, #0
    23c0:	beq	2434 <rb_dlinkAdd+0x88>
    23c4:	mov	r2, #0
    23c8:	stm	r1, {r0, r2}
    23cc:	ldr	r0, [pc, #128]	; 2454 <rb_dlinkAdd+0xa8>
    23d0:	ldr	r0, [pc, r0]
    23d4:	ldr	r2, [r0]
    23d8:	str	r2, [r1, #8]
    23dc:	cmp	r2, #0
    23e0:	beq	23f0 <rb_dlinkAdd+0x44>
    23e4:	add	r2, r2, #4
    23e8:	str	r1, [r2]
    23ec:	b	2400 <rb_dlinkAdd+0x54>
    23f0:	mov	r2, r0
    23f4:	ldr	r3, [r2, #4]!
    23f8:	cmp	r3, #0
    23fc:	streq	r1, [r2]
    2400:	str	r1, [r0]
    2404:	ldr	r1, [r0, #8]
    2408:	add	r1, r1, #1
    240c:	str	r1, [r0, #8]
    2410:	pop	{fp, pc}
    2414:	ldr	r0, [pc, #60]	; 2458 <rb_dlinkAdd+0xac>
    2418:	add	r0, pc, r0
    241c:	ldr	r1, [pc, #56]	; 245c <rb_dlinkAdd+0xb0>
    2420:	add	r1, pc, r1
    2424:	ldr	r3, [pc, #52]	; 2460 <rb_dlinkAdd+0xb4>
    2428:	add	r3, pc, r3
    242c:	mov	r2, #143	; 0x8f
    2430:	bl	f5c <__assert_fail@plt>
    2434:	ldr	r0, [pc, #40]	; 2464 <rb_dlinkAdd+0xb8>
    2438:	add	r0, pc, r0
    243c:	ldr	r1, [pc, #36]	; 2468 <rb_dlinkAdd+0xbc>
    2440:	add	r1, pc, r1
    2444:	ldr	r3, [pc, #32]	; 246c <rb_dlinkAdd+0xc0>
    2448:	add	r3, pc, r3
    244c:	mov	r2, #144	; 0x90
    2450:	bl	f5c <__assert_fail@plt>
    2454:	.word	0x00011cec
    2458:	.word	0x000009f2
    245c:	.word	0x000009f7
    2460:	.word	0x00000a0b
    2464:	.word	0x00000a36
    2468:	.word	0x000009d7
    246c:	.word	0x000009eb

00002470 <handle_remote_kline>:
    2470:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2474:	add	fp, sp, #28
    2478:	sub	sp, sp, #4
    247c:	mov	sl, r3
    2480:	mov	r5, r2
    2484:	mov	r9, r1
    2488:	mov	r4, r0
    248c:	ldr	r7, [fp, #8]
    2490:	mov	r0, r7
    2494:	bl	ea8 <strlen@plt>
    2498:	add	r0, r0, #8
    249c:	bic	r0, r0, #7
    24a0:	sub	r6, sp, r0
    24a4:	mov	sp, r6
    24a8:	mov	r0, r6
    24ac:	mov	r1, r7
    24b0:	bl	e48 <strcpy@plt>
    24b4:	mov	r3, #2
    24b8:	cmp	r9, #0
    24bc:	movwgt	r3, #1
    24c0:	ldr	r2, [r4, #32]
    24c4:	add	r0, r4, #152	; 0x98
    24c8:	add	r1, r4, #163	; 0xa3
    24cc:	add	r2, r2, #88	; 0x58
    24d0:	bl	f38 <find_shared_conf@plt>
    24d4:	cmp	r0, #0
    24d8:	beq	2634 <handle_remote_kline+0x1c4>
    24dc:	mov	r0, r4
    24e0:	mov	r1, r5
    24e4:	mov	r2, sl
    24e8:	bl	1c58 <valid_user_host>
    24ec:	cmp	r0, #0
    24f0:	beq	2634 <handle_remote_kline+0x1c4>
    24f4:	mov	r0, r5
    24f8:	mov	r1, sl
    24fc:	bl	e6c <valid_wild_card@plt>
    2500:	cmp	r0, #0
    2504:	beq	25b8 <handle_remote_kline+0x148>
    2508:	mov	r0, r4
    250c:	mov	r1, r5
    2510:	mov	r2, sl
    2514:	mov	r3, r9
    2518:	bl	1ce0 <already_placed_kline>
    251c:	cmp	r0, #0
    2520:	bne	2634 <handle_remote_kline+0x1c4>
    2524:	bl	d70 <make_conf@plt>
    2528:	mov	r8, r0
    252c:	mov	r0, #64	; 0x40
    2530:	str	r0, [r8]
    2534:	bl	d88 <rb_current_time@plt>
    2538:	str	r0, [r8, #40]	; 0x28
    253c:	mov	r0, r5
    2540:	bl	1e40 <rb_strdup>
    2544:	str	r0, [r8, #28]
    2548:	mov	r0, sl
    254c:	bl	1e40 <rb_strdup>
    2550:	str	r0, [r8, #16]
    2554:	mov	r0, r4
    2558:	bl	e0c <get_oper_name@plt>
    255c:	bl	e30 <operhash_add@plt>
    2560:	str	r0, [r8, #12]
    2564:	mov	r0, r6
    2568:	bl	ea8 <strlen@plt>
    256c:	movw	r1, #391	; 0x187
    2570:	cmp	r0, r1
    2574:	movcs	r0, #0
    2578:	strbcs	r0, [r6, #390]	; 0x186
    257c:	mov	r0, r6
    2580:	mov	r1, #124	; 0x7c
    2584:	bl	eb4 <strchr@plt>
    2588:	cmp	r0, #0
    258c:	beq	25dc <handle_remote_kline+0x16c>
    2590:	mov	r5, r0
    2594:	mov	r0, #0
    2598:	strb	r0, [r5]
    259c:	ldrb	r0, [r5, #1]!
    25a0:	cmp	r0, #0
    25a4:	beq	25e0 <handle_remote_kline+0x170>
    25a8:	mov	r0, r5
    25ac:	bl	1e40 <rb_strdup>
    25b0:	str	r0, [r8, #24]
    25b4:	b	25e0 <handle_remote_kline+0x170>
    25b8:	ldr	r0, [pc, #124]	; 263c <handle_remote_kline+0x1cc>
    25bc:	ldr	r0, [pc, r0]
    25c0:	ldr	r2, [r0, #236]	; 0xec
    25c4:	ldr	r1, [pc, #116]	; 2640 <handle_remote_kline+0x1d0>
    25c8:	add	r1, pc, r1
    25cc:	mov	r0, r4
    25d0:	bl	efc <sendto_one_notice@plt>
    25d4:	sub	sp, fp, #28
    25d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    25dc:	mov	r5, #0
    25e0:	mov	r0, r6
    25e4:	bl	1e40 <rb_strdup>
    25e8:	str	r0, [r8, #20]
    25ec:	cmp	r9, #1
    25f0:	blt	2618 <handle_remote_kline+0x1a8>
    25f4:	sub	sp, sp, #8
    25f8:	str	r9, [sp]
    25fc:	mov	r0, r4
    2600:	mov	r1, r8
    2604:	mov	r2, r6
    2608:	mov	r3, r5
    260c:	bl	20c4 <apply_tkline>
    2610:	add	sp, sp, #8
    2614:	b	262c <handle_remote_kline+0x1bc>
    2618:	mov	r0, r4
    261c:	mov	r1, r8
    2620:	mov	r2, r6
    2624:	mov	r3, r5
    2628:	bl	2244 <apply_kline>
    262c:	mov	r0, r8
    2630:	bl	e3c <check_one_kline@plt>
    2634:	sub	sp, fp, #28
    2638:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    263c:	.word	0x00011b24
    2640:	.word	0x0000069c

00002644 <remove_prop_kline>:
    2644:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2648:	add	fp, sp, #28
    264c:	sub	sp, sp, #28
    2650:	mov	r4, r1
    2654:	mov	r6, r0
    2658:	mov	r0, r1
    265c:	bl	29ac <rb_dlinkFind>
    2660:	cmp	r0, #0
    2664:	beq	27ac <remove_prop_kline+0x168>
    2668:	mov	r9, r0
    266c:	ldr	r3, [r4, #16]
    2670:	ldr	r2, [r4, #28]
    2674:	ldr	r1, [pc, #312]	; 27b4 <remove_prop_kline+0x170>
    2678:	add	r1, pc, r1
    267c:	mov	r0, r6
    2680:	bl	efc <sendto_one_notice@plt>
    2684:	mov	r0, r6
    2688:	bl	e0c <get_oper_name@plt>
    268c:	mov	r3, r0
    2690:	ldr	r0, [r4, #16]
    2694:	ldr	r1, [r4, #28]
    2698:	str	r1, [sp]
    269c:	str	r0, [sp, #4]
    26a0:	mov	r8, #0
    26a4:	ldr	r2, [pc, #268]	; 27b8 <remove_prop_kline+0x174>
    26a8:	add	r2, pc, r2
    26ac:	mov	r0, #256	; 0x100
    26b0:	mov	r1, #0
    26b4:	bl	de8 <sendto_realops_snomask@plt>
    26b8:	mov	r0, r6
    26bc:	bl	e0c <get_oper_name@plt>
    26c0:	mov	r2, r0
    26c4:	ldr	r0, [r4, #16]
    26c8:	ldr	r3, [r4, #28]
    26cc:	str	r0, [sp]
    26d0:	ldr	r1, [pc, #228]	; 27bc <remove_prop_kline+0x178>
    26d4:	add	r1, pc, r1
    26d8:	mov	r0, #7
    26dc:	bl	ecc <ilog@plt>
    26e0:	bl	d88 <rb_current_time@plt>
    26e4:	mov	sl, r0
    26e8:	ldr	r0, [r4, #12]
    26ec:	ldr	r1, [r4, #40]	; 0x28
    26f0:	cmp	r1, sl
    26f4:	mov	r2, sl
    26f8:	addge	r2, r1, #1
    26fc:	str	r2, [r4, #36]	; 0x24
    2700:	str	r2, [r4, #40]	; 0x28
    2704:	bl	ddc <operhash_delete@plt>
    2708:	mov	r0, r6
    270c:	bl	e0c <get_oper_name@plt>
    2710:	bl	e30 <operhash_add@plt>
    2714:	str	r0, [r4, #12]
    2718:	ldr	r0, [r4, #4]
    271c:	ldr	ip, [r4, #16]
    2720:	ldr	r2, [r4, #28]
    2724:	ldr	r3, [r4, #40]	; 0x28
    2728:	ldr	r5, [r4, #44]	; 0x2c
    272c:	orr	r0, r0, #8912896	; 0x880000
    2730:	str	r0, [r4, #4]
    2734:	sub	r0, r5, r3
    2738:	ldr	r5, [pc, #128]	; 27c0 <remove_prop_kline+0x17c>
    273c:	ldr	r5, [pc, r5]
    2740:	ldr	r5, [r5]
    2744:	ldr	r7, [pc, #120]	; 27c4 <remove_prop_kline+0x180>
    2748:	ldr	r7, [pc, r7]
    274c:	ldr	r7, [r7]
    2750:	add	r6, r6, #396	; 0x18c
    2754:	ldr	r1, [pc, #108]	; 27c8 <remove_prop_kline+0x184>
    2758:	add	r1, pc, r1
    275c:	stm	sp, {r1, r6}
    2760:	str	r2, [sp, #8]
    2764:	str	ip, [sp, #12]
    2768:	str	r3, [sp, #16]
    276c:	str	r8, [sp, #20]
    2770:	str	r0, [sp, #24]
    2774:	orr	r2, r7, r5
    2778:	mov	r0, #0
    277c:	mov	r1, #0
    2780:	mov	r3, #0
    2784:	bl	e54 <sendto_server@plt>
    2788:	ldr	r1, [r4, #16]
    278c:	ldr	r0, [r4, #28]
    2790:	bl	ef0 <remove_reject_mask@plt>
    2794:	mov	r0, r4
    2798:	mov	r1, r9
    279c:	mov	r2, sl
    27a0:	sub	sp, fp, #28
    27a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    27a8:	b	e00 <deactivate_conf@plt>
    27ac:	sub	sp, fp, #28
    27b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    27b4:	.word	0x00000989
    27b8:	.word	0x00000980
    27bc:	.word	0x00000982
    27c0:	.word	0x00011984
    27c4:	.word	0x0001197c
    27c8:	.word	0x0000090a

000027cc <remove_temp_kline>:
    27cc:	push	{r4, r5, r6, r7, fp, lr}
    27d0:	add	fp, sp, #16
    27d4:	sub	sp, sp, #8
    27d8:	mov	r4, r1
    27dc:	mov	r7, r0
    27e0:	mov	r0, #0
    27e4:	ldr	r1, [pc, #244]	; 28e0 <remove_temp_kline+0x114>
    27e8:	ldr	r1, [pc, r1]
    27ec:	b	27fc <remove_temp_kline+0x30>
    27f0:	add	r0, r0, #1
    27f4:	cmp	r0, #4
    27f8:	beq	28d4 <remove_temp_kline+0x108>
    27fc:	add	r2, r0, r0, lsl #1
    2800:	mov	r6, r1
    2804:	ldr	r5, [r6, r2, lsl #2]!
    2808:	cmp	r5, #0
    280c:	beq	27f0 <remove_temp_kline+0x24>
    2810:	ldr	r2, [r5]
    2814:	cmp	r2, r4
    2818:	beq	282c <remove_temp_kline+0x60>
    281c:	ldr	r5, [r5, #8]
    2820:	cmp	r5, #0
    2824:	bne	2810 <remove_temp_kline+0x44>
    2828:	b	27f0 <remove_temp_kline+0x24>
    282c:	ldr	r3, [r4, #16]
    2830:	ldr	r2, [r4, #28]
    2834:	ldr	r1, [pc, #168]	; 28e4 <remove_temp_kline+0x118>
    2838:	add	r1, pc, r1
    283c:	mov	r0, r7
    2840:	bl	efc <sendto_one_notice@plt>
    2844:	mov	r0, r7
    2848:	bl	e0c <get_oper_name@plt>
    284c:	mov	r3, r0
    2850:	ldr	r0, [r4, #16]
    2854:	ldr	r1, [r4, #28]
    2858:	str	r1, [sp]
    285c:	str	r0, [sp, #4]
    2860:	ldr	r2, [pc, #128]	; 28e8 <remove_temp_kline+0x11c>
    2864:	add	r2, pc, r2
    2868:	mov	r0, #256	; 0x100
    286c:	mov	r1, #0
    2870:	bl	de8 <sendto_realops_snomask@plt>
    2874:	mov	r0, r7
    2878:	bl	e0c <get_oper_name@plt>
    287c:	mov	r2, r0
    2880:	ldr	r0, [r4, #16]
    2884:	ldr	r3, [r4, #28]
    2888:	str	r0, [sp]
    288c:	ldr	r1, [pc, #88]	; 28ec <remove_temp_kline+0x120>
    2890:	add	r1, pc, r1
    2894:	mov	r0, #7
    2898:	bl	ecc <ilog@plt>
    289c:	mov	r0, r5
    28a0:	mov	r1, r6
    28a4:	bl	2a2c <rb_dlinkDelete>
    28a8:	mov	r0, r5
    28ac:	bl	e18 <rb_free_rb_dlink_node@plt>
    28b0:	ldr	r1, [r4, #16]
    28b4:	ldr	r0, [r4, #28]
    28b8:	bl	ef0 <remove_reject_mask@plt>
    28bc:	ldr	r0, [r4, #16]
    28c0:	mov	r1, r4
    28c4:	bl	ec0 <delete_one_address_conf@plt>
    28c8:	mov	r0, #1
    28cc:	sub	sp, fp, #16
    28d0:	pop	{r4, r5, r6, r7, fp, pc}
    28d4:	mov	r0, #0
    28d8:	sub	sp, fp, #16
    28dc:	pop	{r4, r5, r6, r7, fp, pc}
    28e0:	.word	0x000118ec
    28e4:	.word	0x0000087e
    28e8:	.word	0x0000087c
    28ec:	.word	0x000007c6

000028f0 <remove_permkline_match>:
    28f0:	push	{r4, r5, fp, lr}
    28f4:	add	fp, sp, #8
    28f8:	sub	sp, sp, #8
    28fc:	mov	r4, r1
    2900:	mov	r5, r0
    2904:	ldr	r3, [r1, #16]
    2908:	ldr	r2, [r1, #28]
    290c:	ldr	r1, [pc, #140]	; 29a0 <remove_permkline_match+0xb0>
    2910:	add	r1, pc, r1
    2914:	bl	efc <sendto_one_notice@plt>
    2918:	mov	r0, r5
    291c:	bl	e0c <get_oper_name@plt>
    2920:	mov	r3, r0
    2924:	ldr	r0, [r4, #16]
    2928:	ldr	r1, [r4, #28]
    292c:	str	r1, [sp]
    2930:	str	r0, [sp, #4]
    2934:	ldr	r2, [pc, #104]	; 29a4 <remove_permkline_match+0xb4>
    2938:	add	r2, pc, r2
    293c:	mov	r0, #256	; 0x100
    2940:	mov	r1, #0
    2944:	bl	de8 <sendto_realops_snomask@plt>
    2948:	mov	r0, r5
    294c:	bl	e0c <get_oper_name@plt>
    2950:	mov	r2, r0
    2954:	ldr	r0, [r4, #16]
    2958:	ldr	r3, [r4, #28]
    295c:	str	r0, [sp]
    2960:	ldr	r1, [pc, #64]	; 29a8 <remove_permkline_match+0xb8>
    2964:	add	r1, pc, r1
    2968:	mov	r0, #7
    296c:	bl	ecc <ilog@plt>
    2970:	ldr	r1, [r4, #16]
    2974:	ldr	r0, [r4, #28]
    2978:	bl	ef0 <remove_reject_mask@plt>
    297c:	ldr	r2, [r4, #16]
    2980:	ldr	r1, [r4, #28]
    2984:	mov	r0, #0
    2988:	bl	f08 <bandb_del@plt>
    298c:	ldr	r0, [r4, #16]
    2990:	mov	r1, r4
    2994:	sub	sp, fp, #8
    2998:	pop	{r4, r5, fp, lr}
    299c:	b	ec0 <delete_one_address_conf@plt>
    29a0:	.word	0x00000837
    29a4:	.word	0x0000082e
    29a8:	.word	0x000006f2

000029ac <rb_dlinkFind>:
    29ac:	push	{fp, lr}
    29b0:	mov	fp, sp
    29b4:	cmp	r0, #0
    29b8:	beq	29fc <rb_dlinkFind+0x50>
    29bc:	mov	r1, r0
    29c0:	ldr	r0, [pc, #84]	; 2a1c <rb_dlinkFind+0x70>
    29c4:	ldr	r0, [pc, r0]
    29c8:	ldr	r2, [r0]
    29cc:	mov	r0, #0
    29d0:	cmp	r2, #0
    29d4:	beq	29f0 <rb_dlinkFind+0x44>
    29d8:	ldr	r3, [r2]
    29dc:	cmp	r3, r1
    29e0:	beq	29f4 <rb_dlinkFind+0x48>
    29e4:	ldr	r2, [r2, #8]
    29e8:	cmp	r2, #0
    29ec:	bne	29d8 <rb_dlinkFind+0x2c>
    29f0:	pop	{fp, pc}
    29f4:	mov	r0, r2
    29f8:	pop	{fp, pc}
    29fc:	ldr	r0, [pc, #28]	; 2a20 <rb_dlinkFind+0x74>
    2a00:	add	r0, pc, r0
    2a04:	ldr	r1, [pc, #24]	; 2a24 <rb_dlinkFind+0x78>
    2a08:	add	r1, pc, r1
    2a0c:	ldr	r3, [pc, #20]	; 2a28 <rb_dlinkFind+0x7c>
    2a10:	add	r3, pc, r3
    2a14:	movw	r2, #311	; 0x137
    2a18:	bl	f5c <__assert_fail@plt>
    2a1c:	.word	0x000116f8
    2a20:	.word	0x0000040a
    2a24:	.word	0x0000040f
    2a28:	.word	0x00000671

00002a2c <rb_dlinkDelete>:
    2a2c:	push	{fp, lr}
    2a30:	mov	fp, sp
    2a34:	cmp	r0, #0
    2a38:	beq	2a8c <rb_dlinkDelete+0x60>
    2a3c:	cmp	r1, #0
    2a40:	beq	2aac <rb_dlinkDelete+0x80>
    2a44:	ldr	ip, [r0, #4]
    2a48:	ldr	r3, [r0, #8]
    2a4c:	add	r2, r3, #4
    2a50:	cmp	r3, #0
    2a54:	addeq	r2, r1, #4
    2a58:	str	ip, [r2]
    2a5c:	ldmib	r0, {r2, ip}
    2a60:	cmp	r2, #0
    2a64:	mov	r3, r1
    2a68:	addne	r3, r2, #8
    2a6c:	str	ip, [r3]
    2a70:	mov	r2, #0
    2a74:	str	r2, [r0, #4]
    2a78:	str	r2, [r0, #8]
    2a7c:	ldr	r0, [r1, #8]
    2a80:	sub	r0, r0, #1
    2a84:	str	r0, [r1, #8]
    2a88:	pop	{fp, pc}
    2a8c:	ldr	r0, [pc, #56]	; 2acc <rb_dlinkDelete+0xa0>
    2a90:	add	r0, pc, r0
    2a94:	ldr	r1, [pc, #52]	; 2ad0 <rb_dlinkDelete+0xa4>
    2a98:	add	r1, pc, r1
    2a9c:	ldr	r3, [pc, #48]	; 2ad4 <rb_dlinkDelete+0xa8>
    2aa0:	add	r3, pc, r3
    2aa4:	mov	r2, #235	; 0xeb
    2aa8:	bl	f5c <__assert_fail@plt>
    2aac:	ldr	r0, [pc, #36]	; 2ad8 <rb_dlinkDelete+0xac>
    2ab0:	add	r0, pc, r0
    2ab4:	ldr	r1, [pc, #32]	; 2adc <rb_dlinkDelete+0xb0>
    2ab8:	add	r1, pc, r1
    2abc:	ldr	r3, [pc, #28]	; 2ae0 <rb_dlinkDelete+0xb4>
    2ac0:	add	r3, pc, r3
    2ac4:	mov	r2, #236	; 0xec
    2ac8:	bl	f5c <__assert_fail@plt>
    2acc:	.word	0x000003de
    2ad0:	.word	0x0000037f
    2ad4:	.word	0x00000671
    2ad8:	.word	0x000003c8
    2adc:	.word	0x0000035f
    2ae0:	.word	0x00000651

00002ae4 <handle_remote_unkline>:
    2ae4:	push	{r4, r5, r6, r7, fp, lr}
    2ae8:	add	fp, sp, #16
    2aec:	mov	r5, r2
    2af0:	mov	r6, r1
    2af4:	mov	r4, r0
    2af8:	ldr	r2, [r0, #32]
    2afc:	add	r0, r0, #152	; 0x98
    2b00:	add	r1, r4, #163	; 0xa3
    2b04:	add	r2, r2, #88	; 0x58
    2b08:	mov	r3, #4
    2b0c:	bl	f38 <find_shared_conf@plt>
    2b10:	cmp	r0, #0
    2b14:	popeq	{r4, r5, r6, r7, fp, pc}
    2b18:	mov	r0, r5
    2b1c:	mov	r1, #64	; 0x40
    2b20:	mov	r2, r6
    2b24:	bl	f20 <find_exact_conf_by_address@plt>
    2b28:	cmp	r0, #0
    2b2c:	beq	2b4c <handle_remote_unkline+0x68>
    2b30:	mov	r7, r0
    2b34:	ldr	r0, [r0, #44]	; 0x2c
    2b38:	cmp	r0, #0
    2b3c:	beq	2b68 <handle_remote_unkline+0x84>
    2b40:	ldr	r1, [pc, #76]	; 2b94 <handle_remote_unkline+0xb0>
    2b44:	add	r1, pc, r1
    2b48:	b	2b54 <handle_remote_unkline+0x70>
    2b4c:	ldr	r1, [pc, #60]	; 2b90 <handle_remote_unkline+0xac>
    2b50:	add	r1, pc, r1
    2b54:	mov	r0, r4
    2b58:	mov	r2, r6
    2b5c:	mov	r3, r5
    2b60:	pop	{r4, r5, r6, r7, fp, lr}
    2b64:	b	efc <sendto_one_notice@plt>
    2b68:	mov	r0, r4
    2b6c:	mov	r1, r7
    2b70:	bl	27cc <remove_temp_kline>
    2b74:	cmp	r0, #0
    2b78:	beq	2b80 <handle_remote_unkline+0x9c>
    2b7c:	pop	{r4, r5, r6, r7, fp, pc}
    2b80:	mov	r0, r4
    2b84:	mov	r1, r7
    2b88:	pop	{r4, r5, r6, r7, fp, lr}
    2b8c:	b	28f0 <remove_permkline_match>
    2b90:	.word	0x00000465
    2b94:	.word	0x00000486

Disassembly of section .fini:

00002b98 <_fini>:
    2b98:	push	{r3, lr}
    2b9c:	pop	{r3, pc}
