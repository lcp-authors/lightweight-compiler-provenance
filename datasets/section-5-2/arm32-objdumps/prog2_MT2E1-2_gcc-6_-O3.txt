
../repos/prog2/MT2E1-2:     file format elf32-littlearm


Disassembly of section .init:

00010ee4 <.init>:
   10ee4:	push	{r3, lr}
   10ee8:	bl	1125c <_start@@Base+0x3c>
   10eec:	pop	{r3, pc}

Disassembly of section .plt:

00010ef0 <calloc@plt-0x14>:
   10ef0:	push	{lr}		; (str lr, [sp, #-4]!)
   10ef4:	ldr	lr, [pc, #4]	; 10f00 <calloc@plt-0x4>
   10ef8:	add	lr, pc, lr
   10efc:	ldr	pc, [lr, #8]!
   10f00:	andeq	r3, r1, r0, lsl #2

00010f04 <calloc@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #77824	; 0x13000
   10f0c:	ldr	pc, [ip, #256]!	; 0x100

00010f10 <raise@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #77824	; 0x13000
   10f18:	ldr	pc, [ip, #248]!	; 0xf8

00010f1c <strcmp@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #77824	; 0x13000
   10f24:	ldr	pc, [ip, #240]!	; 0xf0

00010f28 <strtol@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #77824	; 0x13000
   10f30:	ldr	pc, [ip, #232]!	; 0xe8

00010f34 <printf@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #77824	; 0x13000
   10f3c:	ldr	pc, [ip, #224]!	; 0xe0

00010f40 <__isoc99_fscanf@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #77824	; 0x13000
   10f48:	ldr	pc, [ip, #216]!	; 0xd8

00010f4c <fopen@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #77824	; 0x13000
   10f54:	ldr	pc, [ip, #208]!	; 0xd0

00010f58 <memmove@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #77824	; 0x13000
   10f60:	ldr	pc, [ip, #200]!	; 0xc8

00010f64 <free@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #77824	; 0x13000
   10f6c:	ldr	pc, [ip, #192]!	; 0xc0

00010f70 <memcpy@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #77824	; 0x13000
   10f78:	ldr	pc, [ip, #184]!	; 0xb8

00010f7c <realloc@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #77824	; 0x13000
   10f84:	ldr	pc, [ip, #176]!	; 0xb0

00010f88 <strcpy@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #77824	; 0x13000
   10f90:	ldr	pc, [ip, #168]!	; 0xa8

00010f94 <puts@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #77824	; 0x13000
   10f9c:	ldr	pc, [ip, #160]!	; 0xa0

00010fa0 <malloc@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #77824	; 0x13000
   10fa8:	ldr	pc, [ip, #152]!	; 0x98

00010fac <__libc_start_main@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #77824	; 0x13000
   10fb4:	ldr	pc, [ip, #144]!	; 0x90

00010fb8 <__gmon_start__@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #77824	; 0x13000
   10fc0:	ldr	pc, [ip, #136]!	; 0x88

00010fc4 <strlen@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #77824	; 0x13000
   10fcc:	ldr	pc, [ip, #128]!	; 0x80

00010fd0 <setvbuf@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #77824	; 0x13000
   10fd8:	ldr	pc, [ip, #120]!	; 0x78

00010fdc <memset@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #77824	; 0x13000
   10fe4:	ldr	pc, [ip, #112]!	; 0x70

00010fe8 <putchar@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #77824	; 0x13000
   10ff0:	ldr	pc, [ip, #104]!	; 0x68

00010ff4 <fclose@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #77824	; 0x13000
   10ffc:	ldr	pc, [ip, #96]!	; 0x60

00011000 <getline@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #77824	; 0x13000
   11008:	ldr	pc, [ip, #88]!	; 0x58

0001100c <abort@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #77824	; 0x13000
   11014:	ldr	pc, [ip, #80]!	; 0x50

Disassembly of section .text:

00011018 <main@@Base>:
   11018:	ldr	r2, [pc, #464]	; 111f0 <main@@Base+0x1d8>
   1101c:	mov	r3, #0
   11020:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11024:	mov	r1, r3
   11028:	sub	sp, sp, #32
   1102c:	ldr	r0, [r2]
   11030:	mov	r2, #2
   11034:	bl	10fd0 <setvbuf@plt>
   11038:	ldr	r1, [pc, #436]	; 111f4 <main@@Base+0x1dc>
   1103c:	ldr	r0, [pc, #436]	; 111f8 <main@@Base+0x1e0>
   11040:	bl	10f4c <fopen@plt>
   11044:	add	r7, sp, #32
   11048:	mov	r6, #0
   1104c:	mov	r8, r0
   11050:	bl	133fc <lista_nova@@Base>
   11054:	str	r6, [r7, #-24]!	; 0xffffffe8
   11058:	str	r6, [sp, #4]
   1105c:	mov	r5, r0
   11060:	b	11088 <main@@Base+0x70>
   11064:	ldr	r4, [sp, #4]
   11068:	mov	r0, r4
   1106c:	bl	10fc4 <strlen@plt>
   11070:	mov	r2, #0
   11074:	add	r4, r4, r0
   11078:	mov	r0, r5
   1107c:	strb	r6, [r4, #-1]
   11080:	ldr	r1, [sp, #4]
   11084:	bl	13488 <lista_insere@@Base>
   11088:	mov	r2, r8
   1108c:	mov	r1, r7
   11090:	add	r0, sp, #4
   11094:	bl	11000 <getline@plt>
   11098:	cmn	r0, #1
   1109c:	bne	11064 <main@@Base+0x4c>
   110a0:	ldr	r0, [sp, #4]
   110a4:	bl	10f64 <free@plt>
   110a8:	mov	r0, r8
   110ac:	bl	10ff4 <fclose@plt>
   110b0:	ldr	r1, [pc, #324]	; 111fc <main@@Base+0x1e4>
   110b4:	mov	r0, r5
   110b8:	bl	11568 <carrega_rotas@@Base>
   110bc:	ldr	r9, [pc, #316]	; 11200 <main@@Base+0x1e8>
   110c0:	mov	r4, #0
   110c4:	mov	sl, r0
   110c8:	ldr	r0, [pc, #308]	; 11204 <main@@Base+0x1ec>
   110cc:	bl	10f94 <puts@plt>
   110d0:	ldr	r1, [pc, #284]	; 111f4 <main@@Base+0x1dc>
   110d4:	ldr	r0, [pc, #300]	; 11208 <main@@Base+0x1f0>
   110d8:	bl	10f4c <fopen@plt>
   110dc:	mov	r7, r0
   110e0:	bl	133fc <lista_nova@@Base>
   110e4:	mov	r6, r0
   110e8:	bl	133fc <lista_nova@@Base>
   110ec:	mov	r8, r0
   110f0:	b	11108 <main@@Base+0xf0>
   110f4:	bl	13488 <lista_insere@@Base>
   110f8:	mov	r2, r4
   110fc:	add	r1, sp, #20
   11100:	mov	r0, r8
   11104:	bl	13488 <lista_insere@@Base>
   11108:	add	r2, sp, #12
   1110c:	mov	r1, r9
   11110:	add	r3, sp, #20
   11114:	mov	r0, r7
   11118:	bl	10f40 <__isoc99_fscanf@plt>
   1111c:	mov	r2, r4
   11120:	add	r1, sp, #12
   11124:	cmp	r0, #2
   11128:	mov	r0, r6
   1112c:	beq	110f4 <main@@Base+0xdc>
   11130:	mov	r3, #5
   11134:	mov	r2, r5
   11138:	mov	r1, r8
   1113c:	bl	11348 <proximas_n_chegadas@@Base>
   11140:	cmp	r0, #1
   11144:	beq	11150 <main@@Base+0x138>
   11148:	ldr	r0, [pc, #188]	; 1120c <main@@Base+0x1f4>
   1114c:	bl	10f94 <puts@plt>
   11150:	mov	r0, r6
   11154:	bl	13420 <lista_apaga@@Base>
   11158:	mov	r0, r8
   1115c:	bl	13420 <lista_apaga@@Base>
   11160:	mov	r0, r7
   11164:	bl	10ff4 <fclose@plt>
   11168:	ldr	r0, [pc, #160]	; 11210 <main@@Base+0x1f8>
   1116c:	bl	10f94 <puts@plt>
   11170:	ldr	r2, [pc, #156]	; 11214 <main@@Base+0x1fc>
   11174:	mov	r1, r5
   11178:	mov	r0, sl
   1117c:	bl	11498 <pesquisa_destinos@@Base>
   11180:	subs	r6, r0, #0
   11184:	beq	111e0 <main@@Base+0x1c8>
   11188:	bl	13460 <lista_tamanho@@Base>
   1118c:	ldr	r1, [pc, #128]	; 11214 <main@@Base+0x1fc>
   11190:	mov	r2, r0
   11194:	ldr	r0, [pc, #124]	; 11218 <main@@Base+0x200>
   11198:	bl	10f34 <printf@plt>
   1119c:	ldr	r4, [r6]
   111a0:	cmp	r4, #0
   111a4:	beq	111bc <main@@Base+0x1a4>
   111a8:	ldr	r0, [r4]
   111ac:	bl	10f94 <puts@plt>
   111b0:	ldr	r4, [r4, #4]
   111b4:	cmp	r4, #0
   111b8:	bne	111a8 <main@@Base+0x190>
   111bc:	mov	r0, r6
   111c0:	bl	13420 <lista_apaga@@Base>
   111c4:	mov	r0, sl
   111c8:	bl	11698 <grafo_apaga@@Base>
   111cc:	mov	r0, r5
   111d0:	bl	13420 <lista_apaga@@Base>
   111d4:	mov	r0, #0
   111d8:	add	sp, sp, #32
   111dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   111e0:	ldr	r1, [pc, #44]	; 11214 <main@@Base+0x1fc>
   111e4:	ldr	r0, [pc, #48]	; 1121c <main@@Base+0x204>
   111e8:	bl	10f34 <printf@plt>
   111ec:	b	111c4 <main@@Base+0x1ac>
   111f0:	andeq	r4, r2, r4, ror r0
   111f4:	andeq	r3, r1, r0, ror #26
   111f8:	andeq	r3, r1, ip, lsr #27
   111fc:			; <UNDEFINED> instruction: 0x00013dbc
   11200:	andeq	r3, r1, ip, ror #27
   11204:	andeq	r3, r1, r8, asr #27
   11208:	ldrdeq	r3, [r1], -ip
   1120c:	strdeq	r3, [r1], -r4
   11210:	andeq	r3, r1, r0, lsl lr
   11214:	andeq	r3, r1, r4, lsr #28
   11218:	andeq	r3, r1, r8, asr lr
   1121c:	andeq	r3, r1, r0, lsr lr

00011220 <_start@@Base>:
   11220:	mov	fp, #0
   11224:	mov	lr, #0
   11228:	pop	{r1}		; (ldr r1, [sp], #4)
   1122c:	mov	r2, sp
   11230:	push	{r2}		; (str r2, [sp, #-4]!)
   11234:	push	{r0}		; (str r0, [sp, #-4]!)
   11238:	ldr	ip, [pc, #16]	; 11250 <_start@@Base+0x30>
   1123c:	push	{ip}		; (str ip, [sp, #-4]!)
   11240:	ldr	r0, [pc, #12]	; 11254 <_start@@Base+0x34>
   11244:	ldr	r3, [pc, #12]	; 11258 <_start@@Base+0x38>
   11248:	bl	10fac <__libc_start_main@plt>
   1124c:	bl	1100c <abort@plt>
   11250:	andeq	r3, r1, r4, asr #26
   11254:	andeq	r1, r1, r8, lsl r0
   11258:	andeq	r3, r1, r4, ror #25
   1125c:	ldr	r3, [pc, #20]	; 11278 <_start@@Base+0x58>
   11260:	ldr	r2, [pc, #20]	; 1127c <_start@@Base+0x5c>
   11264:	add	r3, pc, r3
   11268:	ldr	r2, [r3, r2]
   1126c:	cmp	r2, #0
   11270:	bxeq	lr
   11274:	b	10fb8 <__gmon_start__@plt>
   11278:	muleq	r1, r4, sp
   1127c:	andeq	r0, r0, r8, rrx
   11280:	ldr	r3, [pc, #28]	; 112a4 <_start@@Base+0x84>
   11284:	ldr	r0, [pc, #28]	; 112a8 <_start@@Base+0x88>
   11288:	sub	r3, r3, r0
   1128c:	cmp	r3, #6
   11290:	bxls	lr
   11294:	ldr	r3, [pc, #16]	; 112ac <_start@@Base+0x8c>
   11298:	cmp	r3, #0
   1129c:	bxeq	lr
   112a0:	bx	r3
   112a4:	andeq	r4, r2, r7, ror r0
   112a8:	andeq	r4, r2, r4, ror r0
   112ac:	andeq	r0, r0, r0
   112b0:	ldr	r1, [pc, #36]	; 112dc <_start@@Base+0xbc>
   112b4:	ldr	r0, [pc, #36]	; 112e0 <_start@@Base+0xc0>
   112b8:	sub	r1, r1, r0
   112bc:	asr	r1, r1, #2
   112c0:	add	r1, r1, r1, lsr #31
   112c4:	asrs	r1, r1, #1
   112c8:	bxeq	lr
   112cc:	ldr	r3, [pc, #16]	; 112e4 <_start@@Base+0xc4>
   112d0:	cmp	r3, #0
   112d4:	bxeq	lr
   112d8:	bx	r3
   112dc:	andeq	r4, r2, r4, ror r0
   112e0:	andeq	r4, r2, r4, ror r0
   112e4:	andeq	r0, r0, r0
   112e8:	push	{r4, lr}
   112ec:	ldr	r4, [pc, #24]	; 1130c <_start@@Base+0xec>
   112f0:	ldrb	r3, [r4]
   112f4:	cmp	r3, #0
   112f8:	popne	{r4, pc}
   112fc:	bl	11280 <_start@@Base+0x60>
   11300:	mov	r3, #1
   11304:	strb	r3, [r4]
   11308:	pop	{r4, pc}
   1130c:	andeq	r4, r2, r8, ror r0
   11310:	ldr	r0, [pc, #40]	; 11340 <_start@@Base+0x120>
   11314:	ldr	r3, [r0]
   11318:	cmp	r3, #0
   1131c:	bne	11324 <_start@@Base+0x104>
   11320:	b	112b0 <_start@@Base+0x90>
   11324:	ldr	r3, [pc, #24]	; 11344 <_start@@Base+0x124>
   11328:	cmp	r3, #0
   1132c:	beq	11320 <_start@@Base+0x100>
   11330:	push	{r4, lr}
   11334:	blx	r3
   11338:	pop	{r4, lr}
   1133c:	b	112b0 <_start@@Base+0x90>
   11340:	andeq	r3, r2, r4, lsl pc
   11344:	andeq	r0, r0, r0

00011348 <proximas_n_chegadas@@Base>:
   11348:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1134c:	mov	fp, r0
   11350:	ldr	r0, [r2, #8]
   11354:	sub	sp, sp, #12
   11358:	ldr	r4, [r2]
   1135c:	lsl	r0, r0, #2
   11360:	str	r2, [sp, #4]
   11364:	mov	r9, r1
   11368:	mov	r7, r3
   1136c:	bl	10fa0 <malloc@plt>
   11370:	cmp	r4, #0
   11374:	movne	r6, #200	; 0xc8
   11378:	mov	r8, r0
   1137c:	subne	r5, r0, #4
   11380:	beq	113a4 <proximas_n_chegadas@@Base+0x5c>
   11384:	mov	r0, r6
   11388:	bl	10fa0 <malloc@plt>
   1138c:	ldr	r1, [r4]
   11390:	str	r0, [r5, #4]!
   11394:	bl	10f88 <strcpy@plt>
   11398:	ldr	r4, [r4, #4]
   1139c:	cmp	r4, #0
   113a0:	bne	11384 <proximas_n_chegadas@@Base+0x3c>
   113a4:	ldr	r0, [fp, #8]
   113a8:	bl	12614 <heap_nova@@Base>
   113ac:	ldr	r4, [fp]
   113b0:	ldr	r5, [r9]
   113b4:	cmp	r4, #0
   113b8:	movne	fp, #10
   113bc:	movne	r9, #0
   113c0:	mov	r6, r0
   113c4:	beq	1140c <proximas_n_chegadas@@Base+0xc4>
   113c8:	mov	r2, fp
   113cc:	mov	r1, r9
   113d0:	ldr	r0, [r5]
   113d4:	bl	10f28 <strtol@plt>
   113d8:	mov	r2, fp
   113dc:	mov	r1, r9
   113e0:	ldr	sl, [r8, r0, lsl #2]
   113e4:	ldr	r0, [r4]
   113e8:	bl	10f28 <strtol@plt>
   113ec:	mov	r1, sl
   113f0:	mov	r2, r0
   113f4:	mov	r0, r6
   113f8:	bl	12740 <heap_insere@@Base>
   113fc:	ldr	r4, [r4, #4]
   11400:	ldr	r5, [r5, #4]
   11404:	cmp	r4, #0
   11408:	bne	113c8 <proximas_n_chegadas@@Base+0x80>
   1140c:	ldr	r3, [sp, #4]
   11410:	ldr	r9, [r3, #8]
   11414:	cmp	r9, #0
   11418:	subgt	r5, r8, #4
   1141c:	movgt	r4, #0
   11420:	ble	11438 <proximas_n_chegadas@@Base+0xf0>
   11424:	add	r4, r4, #1
   11428:	ldr	r0, [r5, #4]!
   1142c:	bl	10f64 <free@plt>
   11430:	cmp	r4, r9
   11434:	bne	11424 <proximas_n_chegadas@@Base+0xdc>
   11438:	mov	r0, r8
   1143c:	bl	10f64 <free@plt>
   11440:	cmp	r7, #0
   11444:	movgt	r4, #0
   11448:	ldrgt	r8, [pc, #68]	; 11494 <proximas_n_chegadas@@Base+0x14c>
   1144c:	ble	11480 <proximas_n_chegadas@@Base+0x138>
   11450:	mov	r0, r6
   11454:	bl	12860 <heap_remove@@Base>
   11458:	add	r4, r4, #1
   1145c:	mov	r1, r4
   11460:	mov	r2, r0
   11464:	mov	r5, r0
   11468:	mov	r0, r8
   1146c:	bl	10f34 <printf@plt>
   11470:	mov	r0, r5
   11474:	bl	10f64 <free@plt>
   11478:	cmp	r7, r4
   1147c:	bne	11450 <proximas_n_chegadas@@Base+0x108>
   11480:	mov	r0, r6
   11484:	bl	1266c <heap_apaga@@Base>
   11488:	mov	r0, #1
   1148c:	add	sp, sp, #12
   11490:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11494:	andeq	r3, r1, r4, asr sp

00011498 <pesquisa_destinos@@Base>:
   11498:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1149c:	mov	r9, r1
   114a0:	mov	r7, r0
   114a4:	mov	r6, r2
   114a8:	bl	133fc <lista_nova@@Base>
   114ac:	ldr	r4, [r9]
   114b0:	cmp	r4, #0
   114b4:	moveq	r5, r4
   114b8:	mov	r8, r0
   114bc:	beq	114ec <pesquisa_destinos@@Base+0x54>
   114c0:	mov	r5, #0
   114c4:	b	114d8 <pesquisa_destinos@@Base+0x40>
   114c8:	ldr	r4, [r4, #4]
   114cc:	add	r5, r5, #1
   114d0:	cmp	r4, #0
   114d4:	beq	114ec <pesquisa_destinos@@Base+0x54>
   114d8:	mov	r1, r6
   114dc:	ldr	r0, [r4]
   114e0:	bl	10f1c <strcmp@plt>
   114e4:	cmp	r0, #0
   114e8:	bne	114c8 <pesquisa_destinos@@Base+0x30>
   114ec:	mov	r0, r7
   114f0:	mov	r1, r5
   114f4:	bl	119f4 <v_sucessores@@Base>
   114f8:	ldr	r3, [r0]
   114fc:	mov	r7, r0
   11500:	cmp	r3, #0
   11504:	ble	11558 <pesquisa_destinos@@Base+0xc0>
   11508:	mov	r6, #0
   1150c:	mov	sl, r6
   11510:	ldr	r5, [r9]
   11514:	mov	r4, #0
   11518:	b	11520 <pesquisa_destinos@@Base+0x88>
   1151c:	ldr	r5, [r5, #4]
   11520:	mov	r1, r6
   11524:	mov	r0, r7
   11528:	bl	13850 <vetor_elemento@@Base>
   1152c:	cmp	r4, r0
   11530:	add	r4, r4, #1
   11534:	blt	1151c <pesquisa_destinos@@Base+0x84>
   11538:	ldr	r1, [r5]
   1153c:	mov	r2, sl
   11540:	mov	r0, r8
   11544:	bl	13488 <lista_insere@@Base>
   11548:	ldr	r3, [r7]
   1154c:	add	r6, r6, #1
   11550:	cmp	r3, r6
   11554:	bgt	11510 <pesquisa_destinos@@Base+0x78>
   11558:	mov	r0, r7
   1155c:	bl	137ec <vetor_apaga@@Base>
   11560:	mov	r0, r8
   11564:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00011568 <carrega_rotas@@Base>:
   11568:	push	{r4, r5, r6, lr}
   1156c:	subs	r4, r1, #0
   11570:	sub	sp, sp, #8
   11574:	beq	115e0 <carrega_rotas@@Base+0x78>
   11578:	mov	r6, r0
   1157c:	ldr	r1, [pc, #136]	; 1160c <carrega_rotas@@Base+0xa4>
   11580:	mov	r0, r4
   11584:	bl	10f4c <fopen@plt>
   11588:	subs	r5, r0, #0
   1158c:	beq	115ec <carrega_rotas@@Base+0x84>
   11590:	mov	r0, r6
   11594:	bl	13460 <lista_tamanho@@Base>
   11598:	mov	r1, #0
   1159c:	bl	11640 <grafo_novo@@Base>
   115a0:	subs	r4, r0, #0
   115a4:	beq	11600 <carrega_rotas@@Base+0x98>
   115a8:	ldr	r6, [pc, #96]	; 11610 <carrega_rotas@@Base+0xa8>
   115ac:	b	115b8 <carrega_rotas@@Base+0x50>
   115b0:	ldm	sp, {r1, r2}
   115b4:	bl	11718 <grafo_adiciona@@Base>
   115b8:	add	r3, sp, #4
   115bc:	mov	r2, sp
   115c0:	mov	r1, r6
   115c4:	mov	r0, r5
   115c8:	bl	10f40 <__isoc99_fscanf@plt>
   115cc:	cmp	r0, #2
   115d0:	mov	r0, r4
   115d4:	beq	115b0 <carrega_rotas@@Base+0x48>
   115d8:	mov	r0, r5
   115dc:	bl	10ff4 <fclose@plt>
   115e0:	mov	r0, r4
   115e4:	add	sp, sp, #8
   115e8:	pop	{r4, r5, r6, pc}
   115ec:	mov	r1, r4
   115f0:	ldr	r0, [pc, #28]	; 11614 <carrega_rotas@@Base+0xac>
   115f4:	mov	r4, r5
   115f8:	bl	10f34 <printf@plt>
   115fc:	b	115e0 <carrega_rotas@@Base+0x78>
   11600:	ldr	r0, [pc, #16]	; 11618 <carrega_rotas@@Base+0xb0>
   11604:	bl	10f94 <puts@plt>
   11608:	b	115e0 <carrega_rotas@@Base+0x78>
   1160c:	andeq	r3, r1, r0, ror #26
   11610:	andeq	r3, r1, r4, lsr #27
   11614:	andeq	r3, r1, r4, ror #26
   11618:	andeq	r3, r1, r8, lsl #27

0001161c <cria_no@@Base>:
   1161c:	push	{r4, lr}
   11620:	mov	r4, r0
   11624:	mov	r0, #8
   11628:	bl	10fa0 <malloc@plt>
   1162c:	cmp	r0, #0
   11630:	movne	r3, #0
   11634:	strne	r4, [r0]
   11638:	strne	r3, [r0, #4]
   1163c:	pop	{r4, pc}

00011640 <grafo_novo@@Base>:
   11640:	push	{r4, r5, r6, lr}
   11644:	mov	r5, r0
   11648:	mov	r0, #12
   1164c:	mov	r6, r1
   11650:	bl	10fa0 <malloc@plt>
   11654:	subs	r4, r0, #0
   11658:	beq	11680 <grafo_novo@@Base+0x40>
   1165c:	str	r5, [r4, #4]
   11660:	mov	r0, r5
   11664:	str	r6, [r4]
   11668:	mov	r1, #8
   1166c:	bl	10f04 <calloc@plt>
   11670:	cmp	r0, #0
   11674:	mov	r5, r0
   11678:	str	r0, [r4, #8]
   1167c:	beq	11688 <grafo_novo@@Base+0x48>
   11680:	mov	r0, r4
   11684:	pop	{r4, r5, r6, pc}
   11688:	mov	r0, r4
   1168c:	bl	10f64 <free@plt>
   11690:	mov	r4, r5
   11694:	b	11680 <grafo_novo@@Base+0x40>

00011698 <grafo_apaga@@Base>:
   11698:	push	{r4, r5, r6, lr}
   1169c:	subs	r5, r0, #0
   116a0:	popeq	{r4, r5, r6, pc}
   116a4:	ldr	r2, [r5, #8]
   116a8:	cmp	r2, #0
   116ac:	beq	1170c <grafo_apaga@@Base+0x74>
   116b0:	ldr	r1, [r5, #4]
   116b4:	cmp	r1, #0
   116b8:	movgt	r6, #0
   116bc:	ble	11704 <grafo_apaga@@Base+0x6c>
   116c0:	lsl	r4, r6, #3
   116c4:	add	r3, r2, r4
   116c8:	ldr	r0, [r3, #4]
   116cc:	cmp	r0, #0
   116d0:	beq	116f8 <grafo_apaga@@Base+0x60>
   116d4:	ldr	r2, [r0, #4]
   116d8:	str	r2, [r3, #4]
   116dc:	bl	10f64 <free@plt>
   116e0:	ldr	r2, [r5, #8]
   116e4:	add	r3, r2, r4
   116e8:	ldr	r0, [r3, #4]
   116ec:	cmp	r0, #0
   116f0:	bne	116d4 <grafo_apaga@@Base+0x3c>
   116f4:	ldr	r1, [r5, #4]
   116f8:	add	r6, r6, #1
   116fc:	cmp	r6, r1
   11700:	blt	116c0 <grafo_apaga@@Base+0x28>
   11704:	mov	r0, r2
   11708:	bl	10f64 <free@plt>
   1170c:	mov	r0, r5
   11710:	pop	{r4, r5, r6, lr}
   11714:	b	10f64 <free@plt>

00011718 <grafo_adiciona@@Base>:
   11718:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1171c:	subs	r6, r0, #0
   11720:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11724:	ldr	r8, [r6, #8]
   11728:	add	r9, r8, r1, lsl #3
   1172c:	ldr	r5, [r9, #4]
   11730:	cmp	r5, #0
   11734:	beq	11764 <grafo_adiciona@@Base+0x4c>
   11738:	ldr	r3, [r5]
   1173c:	cmp	r2, r3
   11740:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11744:	mov	r3, r5
   11748:	b	11758 <grafo_adiciona@@Base+0x40>
   1174c:	ldr	ip, [r3]
   11750:	cmp	r2, ip
   11754:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11758:	ldr	r3, [r3, #4]
   1175c:	cmp	r3, #0
   11760:	bne	1174c <grafo_adiciona@@Base+0x34>
   11764:	mov	r0, #8
   11768:	mov	r4, r2
   1176c:	mov	r7, r1
   11770:	bl	10fa0 <malloc@plt>
   11774:	cmp	r0, #0
   11778:	beq	117d0 <grafo_adiciona@@Base+0xb8>
   1177c:	ldr	r2, [r6]
   11780:	ldr	r3, [r8, r7, lsl #3]
   11784:	cmp	r2, #0
   11788:	add	r3, r3, #1
   1178c:	stm	r0, {r4, r5}
   11790:	str	r0, [r9, #4]
   11794:	str	r3, [r8, r7, lsl #3]
   11798:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   1179c:	mov	r0, #8
   117a0:	bl	10fa0 <malloc@plt>
   117a4:	add	r2, r8, r4, lsl #3
   117a8:	cmp	r0, #0
   117ac:	beq	117d8 <grafo_adiciona@@Base+0xc0>
   117b0:	ldr	r3, [r8, r4, lsl #3]
   117b4:	ldr	r1, [r2, #4]
   117b8:	add	r3, r3, #1
   117bc:	str	r7, [r0]
   117c0:	str	r1, [r0, #4]
   117c4:	str	r0, [r2, #4]
   117c8:	str	r3, [r8, r4, lsl #3]
   117cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   117d0:	str	r5, [r0, #4]
   117d4:	udf	#0
   117d8:	ldr	r3, [r2, #4]
   117dc:	str	r3, [r0, #4]
   117e0:	udf	#0

000117e4 <grafo_remove@@Base>:
   117e4:	push	{r4, r5, r6, lr}
   117e8:	subs	r6, r0, #0
   117ec:	popeq	{r4, r5, r6, pc}
   117f0:	ldr	r3, [r6, #8]
   117f4:	add	r3, r3, r1, lsl #3
   117f8:	ldr	ip, [r3, #4]
   117fc:	cmp	ip, #0
   11800:	popeq	{r4, r5, r6, pc}
   11804:	mov	r4, r2
   11808:	ldr	r2, [ip]
   1180c:	mov	r5, r1
   11810:	cmp	r2, r4
   11814:	beq	118e0 <grafo_remove@@Base+0xfc>
   11818:	ldr	r3, [ip, #4]
   1181c:	cmp	r3, #0
   11820:	beq	11850 <grafo_remove@@Base+0x6c>
   11824:	ldr	r2, [r3]
   11828:	cmp	r4, r2
   1182c:	bne	11844 <grafo_remove@@Base+0x60>
   11830:	b	118b0 <grafo_remove@@Base+0xcc>
   11834:	ldr	ip, [r0]
   11838:	cmp	r4, ip
   1183c:	beq	118b8 <grafo_remove@@Base+0xd4>
   11840:	mov	r3, r0
   11844:	ldr	r0, [r3, #4]
   11848:	cmp	r0, #0
   1184c:	bne	11834 <grafo_remove@@Base+0x50>
   11850:	ldr	r3, [r6]
   11854:	cmp	r3, #0
   11858:	popne	{r4, r5, r6, pc}
   1185c:	ldr	r3, [r6, #8]
   11860:	add	r4, r3, r4, lsl #3
   11864:	ldr	r2, [r4, #4]
   11868:	ldr	r3, [r2]
   1186c:	cmp	r5, r3
   11870:	ldr	r3, [r2, #4]
   11874:	beq	118f4 <grafo_remove@@Base+0x110>
   11878:	cmp	r3, #0
   1187c:	popeq	{r4, r5, r6, pc}
   11880:	ldr	r1, [r3]
   11884:	cmp	r5, r1
   11888:	bne	118a0 <grafo_remove@@Base+0xbc>
   1188c:	b	118c8 <grafo_remove@@Base+0xe4>
   11890:	ldr	r2, [r0]
   11894:	cmp	r5, r2
   11898:	beq	118d0 <grafo_remove@@Base+0xec>
   1189c:	mov	r3, r0
   118a0:	ldr	r0, [r3, #4]
   118a4:	cmp	r0, #0
   118a8:	bne	11890 <grafo_remove@@Base+0xac>
   118ac:	pop	{r4, r5, r6, pc}
   118b0:	mov	r0, r3
   118b4:	mov	r3, ip
   118b8:	ldr	r2, [r0, #4]
   118bc:	str	r2, [r3, #4]
   118c0:	bl	10f64 <free@plt>
   118c4:	b	11850 <grafo_remove@@Base+0x6c>
   118c8:	mov	r0, r3
   118cc:	mov	r3, r2
   118d0:	ldr	r2, [r0, #4]
   118d4:	pop	{r4, r5, r6, lr}
   118d8:	str	r2, [r3, #4]
   118dc:	b	10f64 <free@plt>
   118e0:	ldr	r2, [ip, #4]
   118e4:	mov	r0, ip
   118e8:	str	r2, [r3, #4]
   118ec:	bl	10f64 <free@plt>
   118f0:	b	11850 <grafo_remove@@Base+0x6c>
   118f4:	str	r3, [r4, #4]
   118f8:	mov	r0, r2
   118fc:	pop	{r4, r5, r6, lr}
   11900:	b	10f64 <free@plt>

00011904 <grafo_aresta@@Base>:
   11904:	cmp	r0, #0
   11908:	bxeq	lr
   1190c:	ldr	r3, [r0, #8]
   11910:	add	r1, r3, r1, lsl #3
   11914:	ldr	r0, [r1, #4]
   11918:	cmp	r0, #0
   1191c:	bxeq	lr
   11920:	ldr	r3, [r0]
   11924:	cmp	r2, r3
   11928:	bne	1193c <grafo_aresta@@Base+0x38>
   1192c:	b	1194c <grafo_aresta@@Base+0x48>
   11930:	ldr	r3, [r0]
   11934:	cmp	r3, r2
   11938:	beq	1194c <grafo_aresta@@Base+0x48>
   1193c:	ldr	r0, [r0, #4]
   11940:	cmp	r0, #0
   11944:	bne	11930 <grafo_aresta@@Base+0x2c>
   11948:	bx	lr
   1194c:	mov	r0, #1
   11950:	bx	lr

00011954 <grafo_imprime@@Base>:
   11954:	ldr	r3, [r0, #4]
   11958:	cmp	r3, #0
   1195c:	bxle	lr
   11960:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11964:	mov	r7, r0
   11968:	ldr	r9, [pc, #120]	; 119e8 <grafo_imprime@@Base+0x94>
   1196c:	ldr	sl, [pc, #120]	; 119ec <grafo_imprime@@Base+0x98>
   11970:	ldr	r5, [pc, #120]	; 119f0 <grafo_imprime@@Base+0x9c>
   11974:	mov	r6, #0
   11978:	mov	r8, #10
   1197c:	ldr	r3, [r7, #8]
   11980:	mov	r1, r6
   11984:	add	r3, r3, r6, lsl #3
   11988:	mov	r0, r9
   1198c:	ldr	r4, [r3, #4]
   11990:	bl	10f34 <printf@plt>
   11994:	cmp	r4, #0
   11998:	beq	119cc <grafo_imprime@@Base+0x78>
   1199c:	ldr	r1, [r4]
   119a0:	mov	r0, sl
   119a4:	bl	10f34 <printf@plt>
   119a8:	ldr	r4, [r4, #4]
   119ac:	cmp	r4, #0
   119b0:	beq	119cc <grafo_imprime@@Base+0x78>
   119b4:	ldr	r1, [r4]
   119b8:	mov	r0, r5
   119bc:	bl	10f34 <printf@plt>
   119c0:	ldr	r4, [r4, #4]
   119c4:	cmp	r4, #0
   119c8:	bne	119b4 <grafo_imprime@@Base+0x60>
   119cc:	mov	r0, r8
   119d0:	bl	10fe8 <putchar@plt>
   119d4:	ldr	r3, [r7, #4]
   119d8:	add	r6, r6, #1
   119dc:	cmp	r3, r6
   119e0:	bgt	1197c <grafo_imprime@@Base+0x28>
   119e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   119e8:	andeq	r3, r1, r0, lsl #29
   119ec:	andeq	r3, r1, r8, lsl #29
   119f0:	andeq	r3, r1, ip, lsl #29

000119f4 <v_sucessores@@Base>:
   119f4:	push	{r4, r5, r6, r7, r8, lr}
   119f8:	lsr	r4, r1, #31
   119fc:	cmp	r0, #0
   11a00:	orreq	r4, r4, #1
   11a04:	cmp	r4, #0
   11a08:	bne	11ab0 <v_sucessores@@Base+0xbc>
   11a0c:	ldr	r3, [r0, #4]
   11a10:	cmp	r1, r3
   11a14:	bge	11ab0 <v_sucessores@@Base+0xbc>
   11a18:	mov	r5, r0
   11a1c:	mov	r6, r1
   11a20:	bl	137c8 <vetor_novo@@Base>
   11a24:	mov	r7, r0
   11a28:	ldr	r0, [r5, #4]
   11a2c:	cmp	r0, #0
   11a30:	ble	11a84 <v_sucessores@@Base+0x90>
   11a34:	lsl	r6, r6, #3
   11a38:	mvn	r8, #0
   11a3c:	ldr	r3, [r5, #8]
   11a40:	add	r3, r3, r6
   11a44:	ldr	r3, [r3, #4]
   11a48:	cmp	r3, #0
   11a4c:	beq	11a78 <v_sucessores@@Base+0x84>
   11a50:	ldr	r2, [r3]
   11a54:	cmp	r4, r2
   11a58:	bne	11a6c <v_sucessores@@Base+0x78>
   11a5c:	b	11a8c <v_sucessores@@Base+0x98>
   11a60:	ldr	r2, [r3]
   11a64:	cmp	r2, r4
   11a68:	beq	11a8c <v_sucessores@@Base+0x98>
   11a6c:	ldr	r3, [r3, #4]
   11a70:	cmp	r3, #0
   11a74:	bne	11a60 <v_sucessores@@Base+0x6c>
   11a78:	add	r4, r4, #1
   11a7c:	cmp	r4, r0
   11a80:	blt	11a3c <v_sucessores@@Base+0x48>
   11a84:	mov	r0, r7
   11a88:	pop	{r4, r5, r6, r7, r8, pc}
   11a8c:	mov	r1, r4
   11a90:	mov	r2, r8
   11a94:	mov	r0, r7
   11a98:	bl	13880 <vetor_insere@@Base>
   11a9c:	ldr	r0, [r5, #4]
   11aa0:	add	r4, r4, #1
   11aa4:	cmp	r4, r0
   11aa8:	blt	11a3c <v_sucessores@@Base+0x48>
   11aac:	b	11a84 <v_sucessores@@Base+0x90>
   11ab0:	mov	r7, #0
   11ab4:	mov	r0, r7
   11ab8:	pop	{r4, r5, r6, r7, r8, pc}

00011abc <v_antecessores@@Base>:
   11abc:	push	{r4, r5, r6, r7, r8, lr}
   11ac0:	lsr	r5, r1, #31
   11ac4:	cmp	r0, #0
   11ac8:	orreq	r5, r5, #1
   11acc:	cmp	r5, #0
   11ad0:	bne	11b5c <v_antecessores@@Base+0xa0>
   11ad4:	ldr	r3, [r0, #4]
   11ad8:	cmp	r1, r3
   11adc:	bge	11b5c <v_antecessores@@Base+0xa0>
   11ae0:	mov	r6, r0
   11ae4:	mov	r4, r1
   11ae8:	bl	137c8 <vetor_novo@@Base>
   11aec:	ldr	r1, [r6, #4]
   11af0:	cmp	r1, #0
   11af4:	mov	r7, r0
   11af8:	ble	11b30 <v_antecessores@@Base+0x74>
   11afc:	mvn	r8, #0
   11b00:	ldr	r3, [r6, #8]
   11b04:	add	r3, r3, r5, lsl #3
   11b08:	b	11b18 <v_antecessores@@Base+0x5c>
   11b0c:	ldr	r2, [r3]
   11b10:	cmp	r4, r2
   11b14:	beq	11b38 <v_antecessores@@Base+0x7c>
   11b18:	ldr	r3, [r3, #4]
   11b1c:	cmp	r3, #0
   11b20:	bne	11b0c <v_antecessores@@Base+0x50>
   11b24:	add	r5, r5, #1
   11b28:	cmp	r5, r1
   11b2c:	blt	11b00 <v_antecessores@@Base+0x44>
   11b30:	mov	r0, r7
   11b34:	pop	{r4, r5, r6, r7, r8, pc}
   11b38:	mov	r1, r5
   11b3c:	mov	r2, r8
   11b40:	mov	r0, r7
   11b44:	bl	13880 <vetor_insere@@Base>
   11b48:	ldr	r1, [r6, #4]
   11b4c:	add	r5, r5, #1
   11b50:	cmp	r5, r1
   11b54:	blt	11b00 <v_antecessores@@Base+0x44>
   11b58:	b	11b30 <v_antecessores@@Base+0x74>
   11b5c:	mov	r7, #0
   11b60:	mov	r0, r7
   11b64:	pop	{r4, r5, r6, r7, r8, pc}

00011b68 <dfs_helper@@Base>:
   11b68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b6c:	sub	sp, sp, #116	; 0x74
   11b70:	ldr	fp, [sp, #152]	; 0x98
   11b74:	ldr	ip, [fp, r1, lsl #2]
   11b78:	cmp	ip, #0
   11b7c:	str	ip, [sp, #76]	; 0x4c
   11b80:	movne	r0, #0
   11b84:	bne	11c70 <dfs_helper@@Base+0x108>
   11b88:	cmp	r1, r2
   11b8c:	str	r3, [fp, r1, lsl #2]
   11b90:	beq	11c78 <dfs_helper@@Base+0x110>
   11b94:	mov	r9, r2
   11b98:	ldr	r2, [r0, #4]
   11b9c:	mov	sl, r0
   11ba0:	cmp	r2, #0
   11ba4:	str	r1, [sp, #84]	; 0x54
   11ba8:	ble	11c60 <dfs_helper@@Base+0xf8>
   11bac:	lsl	r1, r1, #3
   11bb0:	str	r1, [sp, #100]	; 0x64
   11bb4:	add	r1, r3, #1
   11bb8:	str	r1, [sp, #48]	; 0x30
   11bbc:	add	r1, r3, #2
   11bc0:	str	r1, [sp, #52]	; 0x34
   11bc4:	add	r1, r3, #3
   11bc8:	str	r1, [sp, #56]	; 0x38
   11bcc:	add	r1, r3, #4
   11bd0:	str	r1, [sp, #60]	; 0x3c
   11bd4:	add	r1, r3, #5
   11bd8:	str	r1, [sp, #64]	; 0x40
   11bdc:	add	r1, r3, #6
   11be0:	str	r1, [sp, #68]	; 0x44
   11be4:	add	r1, r3, #7
   11be8:	str	r1, [sp, #44]	; 0x2c
   11bec:	add	r1, r3, #8
   11bf0:	add	r3, r3, #9
   11bf4:	str	r3, [sp, #104]	; 0x68
   11bf8:	ldr	r3, [sp, #76]	; 0x4c
   11bfc:	str	r1, [sp, #20]
   11c00:	str	r3, [sp, #24]
   11c04:	ldr	r1, [sl, #8]
   11c08:	ldr	r3, [sp, #100]	; 0x64
   11c0c:	add	r3, r1, r3
   11c10:	ldr	r3, [r3, #4]
   11c14:	cmp	r3, #0
   11c18:	beq	11c4c <dfs_helper@@Base+0xe4>
   11c1c:	ldr	r0, [r3]
   11c20:	ldr	ip, [sp, #24]
   11c24:	cmp	ip, r0
   11c28:	bne	11c40 <dfs_helper@@Base+0xd8>
   11c2c:	b	11c80 <dfs_helper@@Base+0x118>
   11c30:	ldr	r0, [r3]
   11c34:	ldr	ip, [sp, #24]
   11c38:	cmp	r0, ip
   11c3c:	beq	11c80 <dfs_helper@@Base+0x118>
   11c40:	ldr	r3, [r3, #4]
   11c44:	cmp	r3, #0
   11c48:	bne	11c30 <dfs_helper@@Base+0xc8>
   11c4c:	ldr	r3, [sp, #24]
   11c50:	add	r3, r3, #1
   11c54:	cmp	r3, r2
   11c58:	str	r3, [sp, #24]
   11c5c:	blt	11c04 <dfs_helper@@Base+0x9c>
   11c60:	ldr	r2, [sp, #84]	; 0x54
   11c64:	ldr	r0, [sp, #76]	; 0x4c
   11c68:	mov	r3, #0
   11c6c:	str	r3, [fp, r2, lsl #2]
   11c70:	add	sp, sp, #116	; 0x74
   11c74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c78:	mov	r0, r3
   11c7c:	b	11c70 <dfs_helper@@Base+0x108>
   11c80:	ldr	r3, [sp, #24]
   11c84:	ldr	r3, [fp, r3, lsl #2]
   11c88:	cmp	r3, #0
   11c8c:	str	r3, [sp, #28]
   11c90:	bne	11c4c <dfs_helper@@Base+0xe4>
   11c94:	ldr	r3, [sp, #24]
   11c98:	ldr	r2, [sp, #48]	; 0x30
   11c9c:	cmp	r9, r3
   11ca0:	str	r2, [fp, r3, lsl #2]
   11ca4:	beq	12240 <dfs_helper@@Base+0x6d8>
   11ca8:	ldr	r2, [sl, #4]
   11cac:	cmp	r2, #0
   11cb0:	lslgt	r3, r3, #3
   11cb4:	strgt	r3, [sp, #88]	; 0x58
   11cb8:	ble	1222c <dfs_helper@@Base+0x6c4>
   11cbc:	add	r3, r1, r3
   11cc0:	ldr	r3, [r3, #4]
   11cc4:	cmp	r3, #0
   11cc8:	beq	11cf8 <dfs_helper@@Base+0x190>
   11ccc:	ldr	r0, [r3]
   11cd0:	ldr	ip, [sp, #28]
   11cd4:	cmp	ip, r0
   11cd8:	bne	11cec <dfs_helper@@Base+0x184>
   11cdc:	b	11d18 <dfs_helper@@Base+0x1b0>
   11ce0:	ldr	r0, [r3]
   11ce4:	cmp	r0, ip
   11ce8:	beq	11d18 <dfs_helper@@Base+0x1b0>
   11cec:	ldr	r3, [r3, #4]
   11cf0:	cmp	r3, #0
   11cf4:	bne	11ce0 <dfs_helper@@Base+0x178>
   11cf8:	ldr	r3, [sp, #28]
   11cfc:	add	r3, r3, #1
   11d00:	cmp	r3, r2
   11d04:	str	r3, [sp, #28]
   11d08:	bge	1222c <dfs_helper@@Base+0x6c4>
   11d0c:	ldr	r1, [sl, #8]
   11d10:	ldr	r3, [sp, #88]	; 0x58
   11d14:	b	11cbc <dfs_helper@@Base+0x154>
   11d18:	ldr	r3, [sp, #28]
   11d1c:	ldr	r3, [fp, r3, lsl #2]
   11d20:	cmp	r3, #0
   11d24:	str	r3, [sp, #32]
   11d28:	bne	11cf8 <dfs_helper@@Base+0x190>
   11d2c:	ldr	r3, [sp, #28]
   11d30:	ldr	r2, [sp, #52]	; 0x34
   11d34:	cmp	r9, r3
   11d38:	str	r2, [fp, r3, lsl #2]
   11d3c:	beq	121dc <dfs_helper@@Base+0x674>
   11d40:	ldr	r0, [sl, #4]
   11d44:	cmp	r0, #0
   11d48:	lslgt	r3, r3, #3
   11d4c:	strgt	r3, [sp, #92]	; 0x5c
   11d50:	ble	121f0 <dfs_helper@@Base+0x688>
   11d54:	add	r3, r1, r3
   11d58:	ldr	r3, [r3, #4]
   11d5c:	cmp	r3, #0
   11d60:	beq	11d94 <dfs_helper@@Base+0x22c>
   11d64:	ldr	r2, [r3]
   11d68:	ldr	ip, [sp, #32]
   11d6c:	cmp	ip, r2
   11d70:	moveq	r3, ip
   11d74:	bne	11d88 <dfs_helper@@Base+0x220>
   11d78:	b	11db8 <dfs_helper@@Base+0x250>
   11d7c:	ldr	r2, [r3]
   11d80:	cmp	r2, ip
   11d84:	beq	11db4 <dfs_helper@@Base+0x24c>
   11d88:	ldr	r3, [r3, #4]
   11d8c:	cmp	r3, #0
   11d90:	bne	11d7c <dfs_helper@@Base+0x214>
   11d94:	ldr	r3, [sp, #32]
   11d98:	add	r3, r3, #1
   11d9c:	cmp	r3, r0
   11da0:	str	r3, [sp, #32]
   11da4:	bge	121f0 <dfs_helper@@Base+0x688>
   11da8:	ldr	r1, [sl, #8]
   11dac:	ldr	r3, [sp, #92]	; 0x5c
   11db0:	b	11d54 <dfs_helper@@Base+0x1ec>
   11db4:	ldr	r3, [sp, #32]
   11db8:	ldr	r3, [fp, r3, lsl #2]
   11dbc:	cmp	r3, #0
   11dc0:	str	r3, [sp, #36]	; 0x24
   11dc4:	bne	11d94 <dfs_helper@@Base+0x22c>
   11dc8:	ldr	r3, [sp, #32]
   11dcc:	ldr	r2, [sp, #56]	; 0x38
   11dd0:	cmp	r9, r3
   11dd4:	str	r2, [fp, r3, lsl #2]
   11dd8:	beq	12204 <dfs_helper@@Base+0x69c>
   11ddc:	ldr	r0, [sl, #4]
   11de0:	cmp	r0, #0
   11de4:	ble	121b8 <dfs_helper@@Base+0x650>
   11de8:	lsl	r3, r3, #3
   11dec:	str	r3, [sp, #96]	; 0x60
   11df0:	mov	r3, r9
   11df4:	mov	r9, sl
   11df8:	mov	sl, fp
   11dfc:	mov	fp, r3
   11e00:	ldr	r3, [sp, #96]	; 0x60
   11e04:	add	r3, r1, r3
   11e08:	ldr	r3, [r3, #4]
   11e0c:	cmp	r3, #0
   11e10:	beq	11e44 <dfs_helper@@Base+0x2dc>
   11e14:	ldr	r2, [r3]
   11e18:	ldr	ip, [sp, #36]	; 0x24
   11e1c:	cmp	ip, r2
   11e20:	moveq	r3, ip
   11e24:	bne	11e38 <dfs_helper@@Base+0x2d0>
   11e28:	b	11e64 <dfs_helper@@Base+0x2fc>
   11e2c:	ldr	r2, [r3]
   11e30:	cmp	r2, ip
   11e34:	beq	11e60 <dfs_helper@@Base+0x2f8>
   11e38:	ldr	r3, [r3, #4]
   11e3c:	cmp	r3, #0
   11e40:	bne	11e2c <dfs_helper@@Base+0x2c4>
   11e44:	ldr	r3, [sp, #36]	; 0x24
   11e48:	add	r3, r3, #1
   11e4c:	cmp	r3, r0
   11e50:	str	r3, [sp, #36]	; 0x24
   11e54:	bge	121a4 <dfs_helper@@Base+0x63c>
   11e58:	ldr	r1, [r9, #8]
   11e5c:	b	11e00 <dfs_helper@@Base+0x298>
   11e60:	ldr	r3, [sp, #36]	; 0x24
   11e64:	ldr	r3, [sl, r3, lsl #2]
   11e68:	cmp	r3, #0
   11e6c:	str	r3, [sp, #16]
   11e70:	bne	11e44 <dfs_helper@@Base+0x2dc>
   11e74:	ldr	r3, [sp, #36]	; 0x24
   11e78:	ldr	r2, [sp, #60]	; 0x3c
   11e7c:	cmp	fp, r3
   11e80:	str	r2, [sl, r3, lsl #2]
   11e84:	beq	12218 <dfs_helper@@Base+0x6b0>
   11e88:	ldr	r0, [r9, #4]
   11e8c:	cmp	r0, #0
   11e90:	lslgt	r3, r3, #3
   11e94:	strgt	r3, [sp, #80]	; 0x50
   11e98:	ble	12190 <dfs_helper@@Base+0x628>
   11e9c:	add	r3, r1, r3
   11ea0:	ldr	r3, [r3, #4]
   11ea4:	cmp	r3, #0
   11ea8:	beq	11edc <dfs_helper@@Base+0x374>
   11eac:	ldr	r2, [r3]
   11eb0:	ldr	ip, [sp, #16]
   11eb4:	cmp	ip, r2
   11eb8:	moveq	r3, ip
   11ebc:	bne	11ed0 <dfs_helper@@Base+0x368>
   11ec0:	b	11f00 <dfs_helper@@Base+0x398>
   11ec4:	ldr	r2, [r3]
   11ec8:	cmp	r2, ip
   11ecc:	beq	11efc <dfs_helper@@Base+0x394>
   11ed0:	ldr	r3, [r3, #4]
   11ed4:	cmp	r3, #0
   11ed8:	bne	11ec4 <dfs_helper@@Base+0x35c>
   11edc:	ldr	r3, [sp, #16]
   11ee0:	add	r3, r3, #1
   11ee4:	cmp	r3, r0
   11ee8:	str	r3, [sp, #16]
   11eec:	bge	12190 <dfs_helper@@Base+0x628>
   11ef0:	ldr	r1, [r9, #8]
   11ef4:	ldr	r3, [sp, #80]	; 0x50
   11ef8:	b	11e9c <dfs_helper@@Base+0x334>
   11efc:	ldr	r3, [sp, #16]
   11f00:	ldr	r7, [sl, r3, lsl #2]
   11f04:	cmp	r7, #0
   11f08:	bne	11edc <dfs_helper@@Base+0x374>
   11f0c:	ldr	r2, [sp, #64]	; 0x40
   11f10:	cmp	fp, r3
   11f14:	str	r2, [sl, r3, lsl #2]
   11f18:	beq	121c8 <dfs_helper@@Base+0x660>
   11f1c:	ldr	r0, [r9, #4]
   11f20:	cmp	r0, #0
   11f24:	lslgt	r3, r3, #3
   11f28:	strgt	r3, [sp, #40]	; 0x28
   11f2c:	ble	1214c <dfs_helper@@Base+0x5e4>
   11f30:	add	r3, r1, r3
   11f34:	b	11f44 <dfs_helper@@Base+0x3dc>
   11f38:	ldr	r2, [r3]
   11f3c:	cmp	r2, r7
   11f40:	beq	11f68 <dfs_helper@@Base+0x400>
   11f44:	ldr	r3, [r3, #4]
   11f48:	cmp	r3, #0
   11f4c:	bne	11f38 <dfs_helper@@Base+0x3d0>
   11f50:	add	r7, r7, #1
   11f54:	cmp	r7, r0
   11f58:	bge	1214c <dfs_helper@@Base+0x5e4>
   11f5c:	ldr	r1, [r9, #8]
   11f60:	ldr	r3, [sp, #40]	; 0x28
   11f64:	b	11f30 <dfs_helper@@Base+0x3c8>
   11f68:	ldr	r6, [sl, r7, lsl #2]
   11f6c:	cmp	r6, #0
   11f70:	bne	11f50 <dfs_helper@@Base+0x3e8>
   11f74:	ldr	r3, [sp, #68]	; 0x44
   11f78:	cmp	fp, r7
   11f7c:	str	r3, [sl, r7, lsl #2]
   11f80:	beq	12180 <dfs_helper@@Base+0x618>
   11f84:	ldr	r0, [r9, #4]
   11f88:	cmp	r0, #0
   11f8c:	ble	12134 <dfs_helper@@Base+0x5cc>
   11f90:	ldr	r8, [sp, #104]	; 0x68
   11f94:	lsl	r3, r7, #3
   11f98:	str	r3, [sp, #12]
   11f9c:	str	r7, [sp, #108]	; 0x6c
   11fa0:	add	r3, r1, r3
   11fa4:	ldr	r3, [r3, #4]
   11fa8:	cmp	r3, #0
   11fac:	beq	11fd8 <dfs_helper@@Base+0x470>
   11fb0:	ldr	r2, [r3]
   11fb4:	cmp	r6, r2
   11fb8:	bne	11fcc <dfs_helper@@Base+0x464>
   11fbc:	b	11ff0 <dfs_helper@@Base+0x488>
   11fc0:	ldr	r2, [r3]
   11fc4:	cmp	r2, r6
   11fc8:	beq	11ff0 <dfs_helper@@Base+0x488>
   11fcc:	ldr	r3, [r3, #4]
   11fd0:	cmp	r3, #0
   11fd4:	bne	11fc0 <dfs_helper@@Base+0x458>
   11fd8:	add	r6, r6, #1
   11fdc:	cmp	r6, r0
   11fe0:	bge	12130 <dfs_helper@@Base+0x5c8>
   11fe4:	ldr	r1, [r9, #8]
   11fe8:	ldr	r3, [sp, #12]
   11fec:	b	11fa0 <dfs_helper@@Base+0x438>
   11ff0:	ldr	r5, [sl, r6, lsl #2]
   11ff4:	cmp	r5, #0
   11ff8:	bne	11fd8 <dfs_helper@@Base+0x470>
   11ffc:	ldr	r3, [sp, #44]	; 0x2c
   12000:	cmp	fp, r6
   12004:	str	r3, [sl, r6, lsl #2]
   12008:	beq	12170 <dfs_helper@@Base+0x608>
   1200c:	ldr	r0, [r9, #4]
   12010:	cmp	r0, #0
   12014:	lslgt	r3, r6, #3
   12018:	strgt	r6, [sp, #72]	; 0x48
   1201c:	movgt	r7, r3
   12020:	ble	12118 <dfs_helper@@Base+0x5b0>
   12024:	add	r3, r1, r7
   12028:	ldr	r3, [r3, #4]
   1202c:	cmp	r3, #0
   12030:	beq	1205c <dfs_helper@@Base+0x4f4>
   12034:	ldr	r2, [r3]
   12038:	cmp	r5, r2
   1203c:	bne	12050 <dfs_helper@@Base+0x4e8>
   12040:	b	12070 <dfs_helper@@Base+0x508>
   12044:	ldr	r2, [r3]
   12048:	cmp	r2, r5
   1204c:	beq	12070 <dfs_helper@@Base+0x508>
   12050:	ldr	r3, [r3, #4]
   12054:	cmp	r3, #0
   12058:	bne	12044 <dfs_helper@@Base+0x4dc>
   1205c:	add	r5, r5, #1
   12060:	cmp	r5, r0
   12064:	bge	12114 <dfs_helper@@Base+0x5ac>
   12068:	ldr	r1, [r9, #8]
   1206c:	b	12024 <dfs_helper@@Base+0x4bc>
   12070:	ldr	r4, [sl, r5, lsl #2]
   12074:	cmp	r4, #0
   12078:	bne	1205c <dfs_helper@@Base+0x4f4>
   1207c:	ldr	r3, [sp, #20]
   12080:	cmp	fp, r5
   12084:	str	r3, [sl, r5, lsl #2]
   12088:	beq	12160 <dfs_helper@@Base+0x5f8>
   1208c:	ldr	r0, [r9, #4]
   12090:	cmp	r0, #0
   12094:	lslgt	r6, r5, #3
   12098:	ble	120fc <dfs_helper@@Base+0x594>
   1209c:	add	r1, r1, r6
   120a0:	ldr	r3, [r1, #4]
   120a4:	cmp	r3, #0
   120a8:	bne	120bc <dfs_helper@@Base+0x554>
   120ac:	b	120ec <dfs_helper@@Base+0x584>
   120b0:	ldr	r3, [r3, #4]
   120b4:	cmp	r3, #0
   120b8:	beq	120ec <dfs_helper@@Base+0x584>
   120bc:	ldr	r2, [r3]
   120c0:	cmp	r4, r2
   120c4:	bne	120b0 <dfs_helper@@Base+0x548>
   120c8:	str	sl, [sp]
   120cc:	mov	r3, r8
   120d0:	mov	r2, fp
   120d4:	mov	r1, r4
   120d8:	mov	r0, r9
   120dc:	bl	11b68 <dfs_helper@@Base>
   120e0:	cmp	r0, #0
   120e4:	bne	11c70 <dfs_helper@@Base+0x108>
   120e8:	ldr	r0, [r9, #4]
   120ec:	add	r4, r4, #1
   120f0:	cmp	r4, r0
   120f4:	ldrlt	r1, [r9, #8]
   120f8:	blt	1209c <dfs_helper@@Base+0x534>
   120fc:	mov	r3, #0
   12100:	str	r3, [sl, r5, lsl #2]
   12104:	ldr	r0, [r9, #4]
   12108:	add	r5, r5, #1
   1210c:	cmp	r5, r0
   12110:	blt	12068 <dfs_helper@@Base+0x500>
   12114:	ldr	r6, [sp, #72]	; 0x48
   12118:	mov	r3, #0
   1211c:	str	r3, [sl, r6, lsl #2]
   12120:	ldr	r0, [r9, #4]
   12124:	add	r6, r6, #1
   12128:	cmp	r6, r0
   1212c:	blt	11fe4 <dfs_helper@@Base+0x47c>
   12130:	ldr	r7, [sp, #108]	; 0x6c
   12134:	mov	r3, #0
   12138:	str	r3, [sl, r7, lsl #2]
   1213c:	ldr	r0, [r9, #4]
   12140:	add	r7, r7, #1
   12144:	cmp	r7, r0
   12148:	blt	11f5c <dfs_helper@@Base+0x3f4>
   1214c:	ldr	r3, [sp, #16]
   12150:	mov	r2, #0
   12154:	str	r2, [sl, r3, lsl #2]
   12158:	ldr	r0, [r9, #4]
   1215c:	b	11edc <dfs_helper@@Base+0x374>
   12160:	cmp	r3, #0
   12164:	bne	11c78 <dfs_helper@@Base+0x110>
   12168:	ldr	r0, [r9, #4]
   1216c:	b	1205c <dfs_helper@@Base+0x4f4>
   12170:	cmp	r3, #0
   12174:	bne	11c78 <dfs_helper@@Base+0x110>
   12178:	ldr	r0, [r9, #4]
   1217c:	b	11fd8 <dfs_helper@@Base+0x470>
   12180:	cmp	r3, #0
   12184:	bne	11c78 <dfs_helper@@Base+0x110>
   12188:	ldr	r0, [r9, #4]
   1218c:	b	11f50 <dfs_helper@@Base+0x3e8>
   12190:	ldr	r3, [sp, #36]	; 0x24
   12194:	mov	r2, #0
   12198:	str	r2, [sl, r3, lsl #2]
   1219c:	ldr	r0, [r9, #4]
   121a0:	b	11e44 <dfs_helper@@Base+0x2dc>
   121a4:	mov	r3, fp
   121a8:	mov	fp, sl
   121ac:	mov	sl, r9
   121b0:	mov	r9, r3
   121b4:	ldr	r3, [sp, #32]
   121b8:	mov	r2, #0
   121bc:	str	r2, [fp, r3, lsl #2]
   121c0:	ldr	r0, [sl, #4]
   121c4:	b	11d94 <dfs_helper@@Base+0x22c>
   121c8:	cmp	r2, #0
   121cc:	mov	r3, r2
   121d0:	bne	11c78 <dfs_helper@@Base+0x110>
   121d4:	ldr	r0, [r9, #4]
   121d8:	b	11edc <dfs_helper@@Base+0x374>
   121dc:	cmp	r2, #0
   121e0:	mov	r3, r2
   121e4:	bne	11c78 <dfs_helper@@Base+0x110>
   121e8:	ldr	r2, [sl, #4]
   121ec:	b	11cf8 <dfs_helper@@Base+0x190>
   121f0:	ldr	r3, [sp, #28]
   121f4:	mov	r2, #0
   121f8:	str	r2, [fp, r3, lsl #2]
   121fc:	ldr	r2, [sl, #4]
   12200:	b	11cf8 <dfs_helper@@Base+0x190>
   12204:	cmp	r2, #0
   12208:	mov	r3, r2
   1220c:	bne	11c78 <dfs_helper@@Base+0x110>
   12210:	ldr	r0, [sl, #4]
   12214:	b	11d94 <dfs_helper@@Base+0x22c>
   12218:	cmp	r2, #0
   1221c:	mov	r3, r2
   12220:	bne	11c78 <dfs_helper@@Base+0x110>
   12224:	ldr	r0, [r9, #4]
   12228:	b	11e44 <dfs_helper@@Base+0x2dc>
   1222c:	ldr	r3, [sp, #24]
   12230:	mov	r2, #0
   12234:	str	r2, [fp, r3, lsl #2]
   12238:	ldr	r2, [sl, #4]
   1223c:	b	11c4c <dfs_helper@@Base+0xe4>
   12240:	cmp	r2, #0
   12244:	mov	r3, r2
   12248:	bne	11c78 <dfs_helper@@Base+0x110>
   1224c:	ldr	r2, [sl, #4]
   12250:	b	11c4c <dfs_helper@@Base+0xe4>

00012254 <grafo_dfs@@Base>:
   12254:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12258:	subs	r6, r0, #0
   1225c:	sub	sp, sp, #20
   12260:	beq	12418 <grafo_dfs@@Base+0x1c4>
   12264:	mov	r9, r2
   12268:	ldr	r2, [r6, #4]
   1226c:	mov	sl, r1
   12270:	mov	r0, r2
   12274:	mov	r1, #4
   12278:	str	r3, [sp, #8]
   1227c:	str	r2, [sp, #12]
   12280:	bl	10f04 <calloc@plt>
   12284:	ldr	r7, [r0, sl, lsl #2]
   12288:	mov	r5, r0
   1228c:	cmp	r7, #0
   12290:	bne	122f4 <grafo_dfs@@Base+0xa0>
   12294:	mov	r8, #1
   12298:	cmp	sl, r9
   1229c:	str	r8, [r0, sl, lsl #2]
   122a0:	ldr	r2, [sp, #12]
   122a4:	beq	123f8 <grafo_dfs@@Base+0x1a4>
   122a8:	cmp	r2, #0
   122ac:	lslgt	r8, sl, #3
   122b0:	movgt	r4, r7
   122b4:	movgt	fp, #2
   122b8:	ble	122ec <grafo_dfs@@Base+0x98>
   122bc:	ldr	r3, [r6, #8]
   122c0:	add	r3, r3, r8
   122c4:	b	122d4 <grafo_dfs@@Base+0x80>
   122c8:	ldr	r1, [r3]
   122cc:	cmp	r1, r4
   122d0:	beq	12314 <grafo_dfs@@Base+0xc0>
   122d4:	ldr	r3, [r3, #4]
   122d8:	cmp	r3, #0
   122dc:	bne	122c8 <grafo_dfs@@Base+0x74>
   122e0:	add	r4, r4, #1
   122e4:	cmp	r4, r2
   122e8:	blt	122bc <grafo_dfs@@Base+0x68>
   122ec:	mov	r3, #0
   122f0:	str	r3, [r5, sl, lsl #2]
   122f4:	mov	r0, r5
   122f8:	bl	10f64 <free@plt>
   122fc:	ldr	r3, [sp, #8]
   12300:	mov	r4, #0
   12304:	str	r4, [r3]
   12308:	mov	r0, r4
   1230c:	add	sp, sp, #20
   12310:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12314:	mov	r3, fp
   12318:	str	r5, [sp]
   1231c:	mov	r2, r9
   12320:	mov	r1, r4
   12324:	mov	r0, r6
   12328:	bl	11b68 <dfs_helper@@Base>
   1232c:	subs	r3, r0, #0
   12330:	bne	12348 <grafo_dfs@@Base+0xf4>
   12334:	ldr	r2, [r6, #4]
   12338:	add	r4, r4, #1
   1233c:	cmp	r4, r2
   12340:	blt	122bc <grafo_dfs@@Base+0x68>
   12344:	b	122ec <grafo_dfs@@Base+0x98>
   12348:	mov	r1, #4
   1234c:	str	r3, [sp, #12]
   12350:	bl	10f04 <calloc@plt>
   12354:	ldr	r3, [sp, #12]
   12358:	cmp	r3, #0
   1235c:	ldrgt	r2, [r6, #4]
   12360:	mov	r4, r0
   12364:	ble	123c0 <grafo_dfs@@Base+0x16c>
   12368:	mov	r6, r4
   1236c:	mov	lr, #1
   12370:	cmp	r2, #0
   12374:	movle	r8, lr
   12378:	ble	123b0 <grafo_dfs@@Base+0x15c>
   1237c:	ldr	r1, [r5]
   12380:	mov	r8, lr
   12384:	cmp	lr, r1
   12388:	movne	r0, r5
   1238c:	movne	r1, r7
   12390:	bne	123a4 <grafo_dfs@@Base+0x150>
   12394:	b	123dc <grafo_dfs@@Base+0x188>
   12398:	ldr	ip, [r0, #4]!
   1239c:	cmp	lr, ip
   123a0:	beq	123e0 <grafo_dfs@@Base+0x18c>
   123a4:	add	r1, r1, #1
   123a8:	cmp	r2, r1
   123ac:	bne	12398 <grafo_dfs@@Base+0x144>
   123b0:	cmp	r8, r3
   123b4:	add	lr, lr, #1
   123b8:	add	r6, r6, #4
   123bc:	blt	12370 <grafo_dfs@@Base+0x11c>
   123c0:	ldr	r2, [sp, #8]
   123c4:	mov	r0, r5
   123c8:	str	r3, [r2]
   123cc:	bl	10f64 <free@plt>
   123d0:	mov	r0, r4
   123d4:	add	sp, sp, #20
   123d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   123dc:	mov	r1, r7
   123e0:	cmp	r8, r3
   123e4:	str	r1, [r6]
   123e8:	add	lr, lr, #1
   123ec:	add	r6, r6, #4
   123f0:	blt	12370 <grafo_dfs@@Base+0x11c>
   123f4:	b	123c0 <grafo_dfs@@Base+0x16c>
   123f8:	mov	r1, #4
   123fc:	mov	r0, r8
   12400:	str	r2, [sp, #12]
   12404:	bl	10f04 <calloc@plt>
   12408:	mov	r3, r8
   1240c:	ldr	r2, [sp, #12]
   12410:	mov	r4, r0
   12414:	b	12368 <grafo_dfs@@Base+0x114>
   12418:	mov	r4, r6
   1241c:	b	12308 <grafo_dfs@@Base+0xb4>

00012420 <grafo_bfs@@Base>:
   12420:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12424:	sub	sp, sp, #28
   12428:	subs	r5, r0, #0
   1242c:	str	r2, [sp, #16]
   12430:	str	r3, [sp, #20]
   12434:	beq	12604 <grafo_bfs@@Base+0x1e4>
   12438:	ldr	r7, [r5, #4]
   1243c:	mov	r4, r1
   12440:	mov	r0, r7
   12444:	mov	r1, #4
   12448:	bl	10f04 <calloc@plt>
   1244c:	mov	r1, #4
   12450:	mov	r9, r0
   12454:	mov	r0, r7
   12458:	bl	10f04 <calloc@plt>
   1245c:	cmp	r7, #0
   12460:	mov	sl, r0
   12464:	ble	125dc <grafo_bfs@@Base+0x1bc>
   12468:	mov	r0, r9
   1246c:	lsl	r2, r7, #2
   12470:	mov	r1, #255	; 0xff
   12474:	bl	10fdc <memset@plt>
   12478:	ldr	r3, [r5, #8]
   1247c:	mov	fp, #0
   12480:	str	r3, [sp, #8]
   12484:	mov	r3, #1
   12488:	str	r4, [r9, r4, lsl #2]
   1248c:	str	r9, [sp, #4]
   12490:	mov	r9, fp
   12494:	mov	fp, r3
   12498:	str	r4, [sl]
   1249c:	add	r0, r9, #1
   124a0:	mov	r1, r7
   124a4:	bl	13cb4 <vetor_ordena@@Base+0x298>
   124a8:	ldr	r8, [sl, r9, lsl #2]
   124ac:	ldr	r3, [sp, #8]
   124b0:	ldr	r6, [sp, #4]
   124b4:	mov	r4, #0
   124b8:	mov	r9, r1
   124bc:	add	r1, r3, r8, lsl #3
   124c0:	ldr	r5, [r1, #4]
   124c4:	cmp	r5, #0
   124c8:	beq	124f8 <grafo_bfs@@Base+0xd8>
   124cc:	ldr	r3, [r5]
   124d0:	cmp	r4, r3
   124d4:	beq	125a4 <grafo_bfs@@Base+0x184>
   124d8:	mov	r3, r5
   124dc:	b	124ec <grafo_bfs@@Base+0xcc>
   124e0:	ldr	r2, [r3]
   124e4:	cmp	r2, r4
   124e8:	beq	125a4 <grafo_bfs@@Base+0x184>
   124ec:	ldr	r3, [r3, #4]
   124f0:	cmp	r3, #0
   124f4:	bne	124e0 <grafo_bfs@@Base+0xc0>
   124f8:	add	r4, r4, #1
   124fc:	cmp	r7, r4
   12500:	add	r6, r6, #4
   12504:	bne	124c4 <grafo_bfs@@Base+0xa4>
   12508:	cmp	fp, r9
   1250c:	bne	1249c <grafo_bfs@@Base+0x7c>
   12510:	ldr	r9, [sp, #4]
   12514:	ldr	r3, [sp, #16]
   12518:	ldr	r5, [r9, r3, lsl #2]
   1251c:	cmp	r5, #0
   12520:	movlt	r6, #0
   12524:	blt	12580 <grafo_bfs@@Base+0x160>
   12528:	cmp	r3, r5
   1252c:	beq	125e8 <grafo_bfs@@Base+0x1c8>
   12530:	mov	r3, r5
   12534:	mov	r6, #1
   12538:	ldr	r2, [r9, r3, lsl #2]
   1253c:	add	r6, r6, #1
   12540:	cmp	r2, r3
   12544:	mov	r3, r2
   12548:	bne	12538 <grafo_bfs@@Base+0x118>
   1254c:	lsl	r4, r6, #2
   12550:	mov	r0, r4
   12554:	bl	10fa0 <malloc@plt>
   12558:	mov	r1, r0
   1255c:	str	r0, [sp, #12]
   12560:	add	r3, r1, r4
   12564:	ldr	r2, [sp, #16]
   12568:	b	12574 <grafo_bfs@@Base+0x154>
   1256c:	mov	r2, r5
   12570:	ldr	r5, [r9, r5, lsl #2]
   12574:	str	r2, [r3, #-4]!
   12578:	cmp	r1, r3
   1257c:	bne	1256c <grafo_bfs@@Base+0x14c>
   12580:	mov	r0, sl
   12584:	bl	10f64 <free@plt>
   12588:	mov	r0, r9
   1258c:	bl	10f64 <free@plt>
   12590:	ldr	r3, [sp, #20]
   12594:	ldr	r0, [sp, #12]
   12598:	str	r6, [r3]
   1259c:	add	sp, sp, #28
   125a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   125a4:	ldr	r3, [r6]
   125a8:	cmn	r3, #1
   125ac:	bne	124f8 <grafo_bfs@@Base+0xd8>
   125b0:	add	r0, fp, #1
   125b4:	str	r8, [r6]
   125b8:	mov	r1, r7
   125bc:	str	r4, [sl, fp, lsl #2]
   125c0:	bl	13cb4 <vetor_ordena@@Base+0x298>
   125c4:	add	r4, r4, #1
   125c8:	cmp	r7, r4
   125cc:	add	r6, r6, #4
   125d0:	mov	fp, r1
   125d4:	bne	124c4 <grafo_bfs@@Base+0xa4>
   125d8:	b	12508 <grafo_bfs@@Base+0xe8>
   125dc:	str	r4, [r9, r4, lsl #2]
   125e0:	str	r4, [r0]
   125e4:	b	12514 <grafo_bfs@@Base+0xf4>
   125e8:	mov	r0, #4
   125ec:	bl	10fa0 <malloc@plt>
   125f0:	mov	r6, #1
   125f4:	mov	r4, #4
   125f8:	str	r0, [sp, #12]
   125fc:	mov	r1, r0
   12600:	b	12560 <grafo_bfs@@Base+0x140>
   12604:	mov	r0, r5
   12608:	str	r5, [sp, #12]
   1260c:	add	sp, sp, #28
   12610:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012614 <heap_nova@@Base>:
   12614:	push	{r4, r5, r6, lr}
   12618:	mov	r5, r0
   1261c:	mov	r0, #12
   12620:	bl	10fa0 <malloc@plt>
   12624:	subs	r4, r0, #0
   12628:	beq	12654 <heap_nova@@Base+0x40>
   1262c:	mov	r3, #0
   12630:	str	r5, [r4, #4]
   12634:	mov	r0, r5
   12638:	str	r3, [r4]
   1263c:	mov	r1, #4
   12640:	bl	10f04 <calloc@plt>
   12644:	cmp	r0, #0
   12648:	mov	r5, r0
   1264c:	str	r0, [r4, #8]
   12650:	beq	1265c <heap_nova@@Base+0x48>
   12654:	mov	r0, r4
   12658:	pop	{r4, r5, r6, pc}
   1265c:	mov	r0, r4
   12660:	bl	10f64 <free@plt>
   12664:	mov	r4, r5
   12668:	b	12654 <heap_nova@@Base+0x40>

0001266c <heap_apaga@@Base>:
   1266c:	push	{r4, r5, r6, lr}
   12670:	subs	r5, r0, #0
   12674:	popeq	{r4, r5, r6, pc}
   12678:	ldr	r3, [r5]
   1267c:	cmp	r3, #0
   12680:	ldrle	r0, [r5, #8]
   12684:	ble	126c4 <heap_apaga@@Base+0x58>
   12688:	mov	r4, #0
   1268c:	ldr	r0, [r5, #8]
   12690:	mov	r6, r4
   12694:	ldr	r3, [r0, r4, lsl #2]
   12698:	ldr	r0, [r3, #4]
   1269c:	bl	10f64 <free@plt>
   126a0:	ldr	r3, [r5, #8]
   126a4:	ldr	r0, [r3, r4, lsl #2]
   126a8:	bl	10f64 <free@plt>
   126ac:	ldr	r0, [r5, #8]
   126b0:	ldr	r3, [r5]
   126b4:	str	r6, [r0, r4, lsl #2]
   126b8:	add	r4, r4, #1
   126bc:	cmp	r3, r4
   126c0:	bgt	12694 <heap_apaga@@Base+0x28>
   126c4:	bl	10f64 <free@plt>
   126c8:	mov	r0, r5
   126cc:	pop	{r4, r5, r6, lr}
   126d0:	b	10f64 <free@plt>

000126d4 <elemento_cria@@Base>:
   126d4:	push	{r4, r5, r6, r7, r8, lr}
   126d8:	mov	r8, r0
   126dc:	mov	r0, #8
   126e0:	mov	r5, r1
   126e4:	bl	10fa0 <malloc@plt>
   126e8:	subs	r4, r0, #0
   126ec:	beq	12728 <elemento_cria@@Base+0x54>
   126f0:	mov	r0, r5
   126f4:	bl	10fc4 <strlen@plt>
   126f8:	mov	r1, #1
   126fc:	add	r7, r0, r1
   12700:	mov	r0, r7
   12704:	bl	10f04 <calloc@plt>
   12708:	cmp	r0, #0
   1270c:	mov	r6, r0
   12710:	str	r0, [r4, #4]
   12714:	beq	12730 <elemento_cria@@Base+0x5c>
   12718:	mov	r2, r7
   1271c:	mov	r1, r5
   12720:	bl	10f70 <memcpy@plt>
   12724:	str	r8, [r4]
   12728:	mov	r0, r4
   1272c:	pop	{r4, r5, r6, r7, r8, pc}
   12730:	mov	r0, r4
   12734:	bl	10f64 <free@plt>
   12738:	mov	r4, r6
   1273c:	b	12728 <elemento_cria@@Base+0x54>

00012740 <heap_insere@@Base>:
   12740:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12744:	ldr	r3, [r0, #4]
   12748:	ldr	r4, [r0]
   1274c:	cmp	r4, r3
   12750:	blt	1275c <heap_insere@@Base+0x1c>
   12754:	mov	r0, #0
   12758:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1275c:	mov	r8, r0
   12760:	mov	r0, #8
   12764:	mov	r6, r2
   12768:	mov	r9, r1
   1276c:	bl	10fa0 <malloc@plt>
   12770:	subs	r5, r0, #0
   12774:	beq	12754 <heap_insere@@Base+0x14>
   12778:	mov	r0, r9
   1277c:	bl	10fc4 <strlen@plt>
   12780:	mov	r1, #1
   12784:	add	sl, r0, r1
   12788:	mov	r0, sl
   1278c:	bl	10f04 <calloc@plt>
   12790:	cmp	r0, #0
   12794:	mov	r7, r0
   12798:	str	r0, [r5, #4]
   1279c:	beq	12850 <heap_insere@@Base+0x110>
   127a0:	mov	r1, r9
   127a4:	mov	r2, sl
   127a8:	bl	10f70 <memcpy@plt>
   127ac:	ldr	r1, [r8, #8]
   127b0:	add	r3, r4, #1
   127b4:	cmp	r4, #0
   127b8:	str	r6, [r5]
   127bc:	add	lr, r1, r4, lsl #2
   127c0:	str	r5, [r1, r4, lsl #2]
   127c4:	str	r3, [r8]
   127c8:	beq	12848 <heap_insere@@Base+0x108>
   127cc:	sub	r4, r4, #1
   127d0:	add	r4, r4, r4, lsr #31
   127d4:	asr	r3, r4, #1
   127d8:	ldr	r0, [r1, r3, lsl #2]
   127dc:	lsl	ip, r3, #2
   127e0:	cmp	r0, #0
   127e4:	add	r4, r1, ip
   127e8:	beq	12848 <heap_insere@@Base+0x108>
   127ec:	ldr	r2, [r0]
   127f0:	cmp	r6, r2
   127f4:	blt	1280c <heap_insere@@Base+0xcc>
   127f8:	b	12848 <heap_insere@@Base+0x108>
   127fc:	ldr	r6, [r5]
   12800:	ldr	r2, [r0]
   12804:	cmp	r6, r2
   12808:	bge	12848 <heap_insere@@Base+0x108>
   1280c:	sub	r2, r3, #1
   12810:	cmp	r3, #0
   12814:	add	r2, r2, r2, lsr #31
   12818:	str	r5, [r4]
   1281c:	asr	r3, r2, #1
   12820:	str	r0, [lr]
   12824:	add	lr, r1, ip
   12828:	beq	12848 <heap_insere@@Base+0x108>
   1282c:	ldr	r5, [r1, ip]
   12830:	ldr	r0, [r1, r3, lsl #2]
   12834:	lsl	ip, r3, #2
   12838:	cmp	r0, #0
   1283c:	cmpne	r5, #0
   12840:	add	r4, r1, ip
   12844:	bne	127fc <heap_insere@@Base+0xbc>
   12848:	mov	r0, #1
   1284c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12850:	mov	r0, r5
   12854:	bl	10f64 <free@plt>
   12858:	mov	r0, r7
   1285c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00012860 <heap_remove@@Base>:
   12860:	push	{r4, r5, r6, r7, r8, lr}
   12864:	subs	r6, r0, #0
   12868:	beq	12950 <heap_remove@@Base+0xf0>
   1286c:	ldr	r3, [r6]
   12870:	cmp	r3, #0
   12874:	ble	12950 <heap_remove@@Base+0xf0>
   12878:	ldr	r3, [r6, #8]
   1287c:	ldr	r3, [r3]
   12880:	mov	r0, r3
   12884:	ldr	r4, [r3, #4]
   12888:	bl	10f64 <free@plt>
   1288c:	ldr	r5, [r6]
   12890:	ldr	r1, [r6, #8]
   12894:	sub	r5, r5, #1
   12898:	mov	r3, #0
   1289c:	ldr	r2, [r1, r5, lsl #2]
   128a0:	cmp	r5, #1
   128a4:	str	r5, [r6]
   128a8:	str	r2, [r1]
   128ac:	str	r3, [r1, r5, lsl #2]
   128b0:	ble	12948 <heap_remove@@Base+0xe8>
   128b4:	mov	r0, #1
   128b8:	b	128dc <heap_remove@@Base+0x7c>
   128bc:	ldr	r8, [ip]
   128c0:	ldr	r7, [lr]
   128c4:	cmp	r8, r7
   128c8:	bge	12948 <heap_remove@@Base+0xe8>
   128cc:	cmp	r5, r0
   128d0:	str	lr, [r1, r6]
   128d4:	str	ip, [r1, r2]
   128d8:	ble	12948 <heap_remove@@Base+0xe8>
   128dc:	add	ip, r3, #1
   128e0:	mov	r2, r3
   128e4:	lsl	lr, ip, #1
   128e8:	cmp	r5, lr
   128ec:	add	r6, r1, ip, lsl #3
   128f0:	ble	12920 <heap_remove@@Base+0xc0>
   128f4:	ldr	r7, [r1, ip, lsl #3]
   128f8:	ldr	ip, [r6, #-4]
   128fc:	mov	r2, r3
   12900:	cmp	r7, #0
   12904:	cmpne	ip, #0
   12908:	beq	12920 <heap_remove@@Base+0xc0>
   1290c:	ldr	r6, [r7]
   12910:	ldr	ip, [ip]
   12914:	cmp	r6, ip
   12918:	movlt	r3, lr
   1291c:	blt	12924 <heap_remove@@Base+0xc4>
   12920:	mov	r3, r0
   12924:	ldr	lr, [r1, r2, lsl #2]
   12928:	ldr	ip, [r1, r3, lsl #2]
   1292c:	lsl	r0, r3, #1
   12930:	cmp	lr, #0
   12934:	cmpne	ip, #0
   12938:	add	r0, r0, #1
   1293c:	lsl	r2, r2, #2
   12940:	lsl	r6, r3, #2
   12944:	bne	128bc <heap_remove@@Base+0x5c>
   12948:	mov	r0, r4
   1294c:	pop	{r4, r5, r6, r7, r8, pc}
   12950:	mov	r4, #0
   12954:	mov	r0, r4
   12958:	pop	{r4, r5, r6, r7, r8, pc}

0001295c <mostraHeap@@Base>:
   1295c:	ldr	r2, [r0]
   12960:	cmp	r2, r1
   12964:	bgt	12970 <mostraHeap@@Base+0x14>
   12968:	mov	r0, #10
   1296c:	b	10fe8 <putchar@plt>
   12970:	cmp	r1, #0
   12974:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12978:	sub	sp, sp, #36	; 0x24
   1297c:	ble	13240 <mostraHeap@@Base+0x8e4>
   12980:	mov	r3, r1
   12984:	mov	r4, #0
   12988:	sub	r3, r3, #1
   1298c:	add	r4, r4, #1
   12990:	asrs	r3, r3, #1
   12994:	bne	12988 <mostraHeap@@Base+0x2c>
   12998:	add	r5, r4, r4, lsl #1
   1299c:	lsl	r3, r1, #1
   129a0:	str	r1, [sp, #16]
   129a4:	add	r1, r3, #1
   129a8:	cmp	r2, r1
   129ac:	str	r0, [sp]
   129b0:	str	r3, [sp, #12]
   129b4:	str	r1, [sp, #8]
   129b8:	bgt	12c78 <mostraHeap@@Base+0x31c>
   129bc:	add	r3, r3, #2
   129c0:	str	r3, [sp, #4]
   129c4:	mov	r0, #10
   129c8:	bl	10fe8 <putchar@plt>
   129cc:	cmp	r5, #0
   129d0:	movne	r6, #0
   129d4:	ldrne	r7, [pc, #2432]	; 1335c <mostraHeap@@Base+0xa00>
   129d8:	beq	129f0 <mostraHeap@@Base+0x94>
   129dc:	add	r6, r6, #1
   129e0:	mov	r0, r7
   129e4:	bl	10f34 <printf@plt>
   129e8:	cmp	r6, r5
   129ec:	bne	129dc <mostraHeap@@Base+0x80>
   129f0:	ldr	r5, [sp]
   129f4:	ldr	r2, [sp, #16]
   129f8:	ldr	r0, [pc, #2400]	; 13360 <mostraHeap@@Base+0xa04>
   129fc:	ldr	r3, [r5, #8]
   12a00:	ldr	r3, [r3, r2, lsl #2]
   12a04:	ldr	r2, [r3]
   12a08:	ldr	r1, [r3, #4]
   12a0c:	bl	10f34 <printf@plt>
   12a10:	ldr	r2, [r5]
   12a14:	ldr	r3, [sp, #4]
   12a18:	cmp	r3, r2
   12a1c:	bge	12c60 <mostraHeap@@Base+0x304>
   12a20:	cmp	r3, #0
   12a24:	ble	1324c <mostraHeap@@Base+0x8f0>
   12a28:	mov	r5, #0
   12a2c:	sub	r3, r3, #1
   12a30:	add	r5, r5, #1
   12a34:	asrs	r3, r3, #1
   12a38:	bne	12a2c <mostraHeap@@Base+0xd0>
   12a3c:	ldr	r3, [sp, #4]
   12a40:	add	r6, r5, r5, lsl #1
   12a44:	lsl	sl, r3, #1
   12a48:	add	sl, sl, #1
   12a4c:	cmp	r2, sl
   12a50:	ble	12b7c <mostraHeap@@Base+0x220>
   12a54:	cmp	sl, #0
   12a58:	ble	1327c <mostraHeap@@Base+0x920>
   12a5c:	mov	r3, sl
   12a60:	mov	r7, #0
   12a64:	sub	r3, r3, #1
   12a68:	add	r7, r7, #1
   12a6c:	asrs	r3, r3, #1
   12a70:	bne	12a64 <mostraHeap@@Base+0x108>
   12a74:	add	r9, r7, r7, lsl #1
   12a78:	lsl	r3, sl, #1
   12a7c:	add	r1, r3, #1
   12a80:	cmp	r2, r1
   12a84:	str	r3, [sp, #20]
   12a88:	str	r1, [sp, #16]
   12a8c:	bgt	12fd4 <mostraHeap@@Base+0x678>
   12a90:	add	r3, r3, #2
   12a94:	str	r3, [sp, #8]
   12a98:	mov	r0, #10
   12a9c:	bl	10fe8 <putchar@plt>
   12aa0:	cmp	r9, #0
   12aa4:	movne	fp, #0
   12aa8:	ldrne	r8, [pc, #2220]	; 1335c <mostraHeap@@Base+0xa00>
   12aac:	beq	12ac4 <mostraHeap@@Base+0x168>
   12ab0:	add	fp, fp, #1
   12ab4:	mov	r0, r8
   12ab8:	bl	10f34 <printf@plt>
   12abc:	cmp	fp, r9
   12ac0:	bne	12ab0 <mostraHeap@@Base+0x154>
   12ac4:	ldr	r8, [sp]
   12ac8:	ldr	r0, [pc, #2192]	; 13360 <mostraHeap@@Base+0xa04>
   12acc:	ldr	r3, [r8, #8]
   12ad0:	ldr	r3, [r3, sl, lsl #2]
   12ad4:	ldr	r2, [r3]
   12ad8:	ldr	r1, [r3, #4]
   12adc:	bl	10f34 <printf@plt>
   12ae0:	ldr	r3, [r8]
   12ae4:	ldr	r2, [sp, #8]
   12ae8:	cmp	r2, r3
   12aec:	bge	13120 <mostraHeap@@Base+0x7c4>
   12af0:	cmp	r2, #0
   12af4:	ble	130dc <mostraHeap@@Base+0x780>
   12af8:	mov	sl, r2
   12afc:	mov	r8, #0
   12b00:	sub	sl, sl, #1
   12b04:	add	r8, r8, #1
   12b08:	asrs	sl, sl, #1
   12b0c:	bne	12b00 <mostraHeap@@Base+0x1a4>
   12b10:	ldr	r3, [sp, #8]
   12b14:	ldr	r0, [sp]
   12b18:	ldr	r9, [pc, #2108]	; 1335c <mostraHeap@@Base+0xa00>
   12b1c:	lsl	r1, r3, #1
   12b20:	add	r1, r1, #1
   12b24:	bl	1295c <mostraHeap@@Base>
   12b28:	add	r8, r8, r8, lsl #1
   12b2c:	add	sl, sl, #1
   12b30:	mov	r0, r9
   12b34:	bl	10f34 <printf@plt>
   12b38:	cmp	sl, r8
   12b3c:	bne	12b2c <mostraHeap@@Base+0x1d0>
   12b40:	ldr	r8, [sp]
   12b44:	ldr	r2, [sp, #8]
   12b48:	ldr	r0, [pc, #2064]	; 13360 <mostraHeap@@Base+0xa04>
   12b4c:	ldr	r3, [r8, #8]
   12b50:	ldr	r3, [r3, r2, lsl #2]
   12b54:	ldr	r1, [r3, #4]
   12b58:	ldr	r2, [r3]
   12b5c:	bl	10f34 <printf@plt>
   12b60:	ldr	r3, [sp, #20]
   12b64:	mov	r0, r8
   12b68:	add	r1, r3, #3
   12b6c:	lsl	r1, r1, #1
   12b70:	bl	1295c <mostraHeap@@Base>
   12b74:	cmp	r7, #0
   12b78:	bne	12b84 <mostraHeap@@Base+0x228>
   12b7c:	mov	r0, #10
   12b80:	bl	10fe8 <putchar@plt>
   12b84:	cmp	r6, #0
   12b88:	movne	r7, #0
   12b8c:	ldrne	r8, [pc, #1992]	; 1335c <mostraHeap@@Base+0xa00>
   12b90:	beq	12ba8 <mostraHeap@@Base+0x24c>
   12b94:	add	r7, r7, #1
   12b98:	mov	r0, r8
   12b9c:	bl	10f34 <printf@plt>
   12ba0:	cmp	r7, r6
   12ba4:	bne	12b94 <mostraHeap@@Base+0x238>
   12ba8:	ldr	r6, [sp]
   12bac:	ldr	r2, [sp, #4]
   12bb0:	ldr	r0, [pc, #1960]	; 13360 <mostraHeap@@Base+0xa04>
   12bb4:	ldr	r3, [r6, #8]
   12bb8:	ldr	r3, [r3, r2, lsl #2]
   12bbc:	ldr	r2, [r3]
   12bc0:	ldr	r1, [r3, #4]
   12bc4:	bl	10f34 <printf@plt>
   12bc8:	ldr	r3, [sp, #12]
   12bcc:	ldr	r2, [r6]
   12bd0:	add	r3, r3, #3
   12bd4:	lsl	r8, r3, #1
   12bd8:	cmp	r8, r2
   12bdc:	bge	12fc8 <mostraHeap@@Base+0x66c>
   12be0:	cmp	r8, #0
   12be4:	ble	12f8c <mostraHeap@@Base+0x630>
   12be8:	mov	r6, r8
   12bec:	mov	r7, #0
   12bf0:	sub	r6, r6, #1
   12bf4:	add	r7, r7, #1
   12bf8:	asrs	r6, r6, #1
   12bfc:	bne	12bf0 <mostraHeap@@Base+0x294>
   12c00:	lsl	r1, r8, #1
   12c04:	add	r1, r1, #1
   12c08:	ldr	r0, [sp]
   12c0c:	bl	1295c <mostraHeap@@Base>
   12c10:	ldr	r9, [pc, #1860]	; 1335c <mostraHeap@@Base+0xa00>
   12c14:	add	r7, r7, r7, lsl #1
   12c18:	add	r6, r6, #1
   12c1c:	mov	r0, r9
   12c20:	bl	10f34 <printf@plt>
   12c24:	cmp	r7, r6
   12c28:	bne	12c18 <mostraHeap@@Base+0x2bc>
   12c2c:	ldr	r6, [sp]
   12c30:	ldr	r0, [pc, #1832]	; 13360 <mostraHeap@@Base+0xa04>
   12c34:	ldr	r3, [r6, #8]
   12c38:	ldr	r3, [r3, r8, lsl #2]
   12c3c:	ldr	r1, [r3, #4]
   12c40:	ldr	r2, [r3]
   12c44:	bl	10f34 <printf@plt>
   12c48:	add	r1, r8, #1
   12c4c:	mov	r0, r6
   12c50:	lsl	r1, r1, #1
   12c54:	bl	1295c <mostraHeap@@Base>
   12c58:	cmp	r5, #0
   12c5c:	bne	12c68 <mostraHeap@@Base+0x30c>
   12c60:	mov	r0, #10
   12c64:	bl	10fe8 <putchar@plt>
   12c68:	cmp	r4, #0
   12c6c:	beq	12f70 <mostraHeap@@Base+0x614>
   12c70:	add	sp, sp, #36	; 0x24
   12c74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c78:	cmp	r1, #0
   12c7c:	mov	r3, r1
   12c80:	ble	13258 <mostraHeap@@Base+0x8fc>
   12c84:	mov	r6, #0
   12c88:	sub	r3, r3, #1
   12c8c:	add	r6, r6, #1
   12c90:	asrs	r3, r3, #1
   12c94:	bne	12c88 <mostraHeap@@Base+0x32c>
   12c98:	ldr	r3, [sp, #8]
   12c9c:	add	r7, r6, r6, lsl #1
   12ca0:	lsl	r3, r3, #1
   12ca4:	str	r3, [sp, #20]
   12ca8:	add	r3, r3, #1
   12cac:	cmp	r2, r3
   12cb0:	str	r3, [sp, #4]
   12cb4:	ble	12de4 <mostraHeap@@Base+0x488>
   12cb8:	cmp	r3, #0
   12cbc:	ble	13264 <mostraHeap@@Base+0x908>
   12cc0:	mov	fp, #0
   12cc4:	sub	r3, r3, #1
   12cc8:	add	fp, fp, #1
   12ccc:	asrs	r3, r3, #1
   12cd0:	bne	12cc4 <mostraHeap@@Base+0x368>
   12cd4:	ldr	r3, [sp, #4]
   12cd8:	add	sl, fp, fp, lsl #1
   12cdc:	lsl	r3, r3, #1
   12ce0:	str	r3, [sp, #28]
   12ce4:	add	r3, r3, #1
   12ce8:	cmp	r2, r3
   12cec:	str	r3, [sp, #24]
   12cf0:	bgt	1305c <mostraHeap@@Base+0x700>
   12cf4:	mov	r0, #10
   12cf8:	bl	10fe8 <putchar@plt>
   12cfc:	cmp	sl, #0
   12d00:	movne	r9, #0
   12d04:	ldrne	r8, [pc, #1616]	; 1335c <mostraHeap@@Base+0xa00>
   12d08:	beq	12d20 <mostraHeap@@Base+0x3c4>
   12d0c:	add	r9, r9, #1
   12d10:	mov	r0, r8
   12d14:	bl	10f34 <printf@plt>
   12d18:	cmp	r9, sl
   12d1c:	bne	12d0c <mostraHeap@@Base+0x3b0>
   12d20:	ldr	r8, [sp]
   12d24:	ldr	r2, [sp, #4]
   12d28:	ldr	r0, [pc, #1584]	; 13360 <mostraHeap@@Base+0xa04>
   12d2c:	ldr	r3, [r8, #8]
   12d30:	ldr	r3, [r3, r2, lsl #2]
   12d34:	ldr	r2, [r3]
   12d38:	ldr	r1, [r3, #4]
   12d3c:	bl	10f34 <printf@plt>
   12d40:	ldr	r3, [sp, #20]
   12d44:	ldr	r2, [r8]
   12d48:	add	r3, r3, #2
   12d4c:	lsl	r1, r3, #1
   12d50:	cmp	r1, r2
   12d54:	str	r1, [sp, #4]
   12d58:	bge	131b4 <mostraHeap@@Base+0x858>
   12d5c:	cmp	r1, #0
   12d60:	ble	13174 <mostraHeap@@Base+0x818>
   12d64:	mov	sl, r1
   12d68:	mov	r8, #0
   12d6c:	sub	sl, sl, #1
   12d70:	add	r8, r8, #1
   12d74:	asrs	sl, sl, #1
   12d78:	bne	12d6c <mostraHeap@@Base+0x410>
   12d7c:	ldr	r3, [sp, #4]
   12d80:	ldr	r0, [sp]
   12d84:	ldr	r9, [pc, #1488]	; 1335c <mostraHeap@@Base+0xa00>
   12d88:	lsl	r1, r3, #1
   12d8c:	add	r1, r1, #1
   12d90:	bl	1295c <mostraHeap@@Base>
   12d94:	add	r8, r8, r8, lsl #1
   12d98:	add	sl, sl, #1
   12d9c:	mov	r0, r9
   12da0:	bl	10f34 <printf@plt>
   12da4:	cmp	sl, r8
   12da8:	bne	12d98 <mostraHeap@@Base+0x43c>
   12dac:	ldr	r8, [sp]
   12db0:	ldr	r9, [sp, #4]
   12db4:	ldr	r0, [pc, #1444]	; 13360 <mostraHeap@@Base+0xa04>
   12db8:	ldr	r3, [r8, #8]
   12dbc:	ldr	r3, [r3, r9, lsl #2]
   12dc0:	ldr	r1, [r3, #4]
   12dc4:	ldr	r2, [r3]
   12dc8:	bl	10f34 <printf@plt>
   12dcc:	add	r1, r9, #1
   12dd0:	mov	r0, r8
   12dd4:	lsl	r1, r1, #1
   12dd8:	bl	1295c <mostraHeap@@Base>
   12ddc:	cmp	fp, #0
   12de0:	bne	12dec <mostraHeap@@Base+0x490>
   12de4:	mov	r0, #10
   12de8:	bl	10fe8 <putchar@plt>
   12dec:	cmp	r7, #0
   12df0:	movne	r9, #0
   12df4:	ldrne	r8, [pc, #1376]	; 1335c <mostraHeap@@Base+0xa00>
   12df8:	beq	12e10 <mostraHeap@@Base+0x4b4>
   12dfc:	add	r9, r9, #1
   12e00:	mov	r0, r8
   12e04:	bl	10f34 <printf@plt>
   12e08:	cmp	r9, r7
   12e0c:	bne	12dfc <mostraHeap@@Base+0x4a0>
   12e10:	ldr	r7, [sp]
   12e14:	ldr	r1, [sp, #8]
   12e18:	ldr	r2, [sp, #12]
   12e1c:	ldr	r3, [r7, #8]
   12e20:	add	r2, r2, #2
   12e24:	str	r2, [sp, #4]
   12e28:	ldr	r3, [r3, r1, lsl #2]
   12e2c:	lsl	fp, r2, #1
   12e30:	ldr	r0, [pc, #1320]	; 13360 <mostraHeap@@Base+0xa04>
   12e34:	ldr	r2, [r3]
   12e38:	ldr	r1, [r3, #4]
   12e3c:	bl	10f34 <printf@plt>
   12e40:	ldr	r2, [r7]
   12e44:	cmp	fp, r2
   12e48:	bge	12f80 <mostraHeap@@Base+0x624>
   12e4c:	cmp	fp, #0
   12e50:	ble	13270 <mostraHeap@@Base+0x914>
   12e54:	mov	r3, fp
   12e58:	mov	r7, #0
   12e5c:	sub	r3, r3, #1
   12e60:	add	r7, r7, #1
   12e64:	asrs	r3, r3, #1
   12e68:	bne	12e5c <mostraHeap@@Base+0x500>
   12e6c:	add	r9, r7, r7, lsl #1
   12e70:	lsl	r3, fp, #1
   12e74:	str	r3, [sp, #20]
   12e78:	add	r3, r3, #1
   12e7c:	cmp	r2, r3
   12e80:	str	r3, [sp, #8]
   12e84:	bgt	131c0 <mostraHeap@@Base+0x864>
   12e88:	mov	r0, #10
   12e8c:	bl	10fe8 <putchar@plt>
   12e90:	cmp	r9, #0
   12e94:	movne	sl, #0
   12e98:	ldrne	r8, [pc, #1212]	; 1335c <mostraHeap@@Base+0xa00>
   12e9c:	beq	12eb4 <mostraHeap@@Base+0x558>
   12ea0:	add	sl, sl, #1
   12ea4:	mov	r0, r8
   12ea8:	bl	10f34 <printf@plt>
   12eac:	cmp	sl, r9
   12eb0:	bne	12ea0 <mostraHeap@@Base+0x544>
   12eb4:	ldr	r8, [sp]
   12eb8:	ldr	r0, [pc, #1184]	; 13360 <mostraHeap@@Base+0xa04>
   12ebc:	ldr	r3, [r8, #8]
   12ec0:	ldr	r3, [r3, fp, lsl #2]
   12ec4:	add	fp, fp, #1
   12ec8:	ldr	r2, [r3]
   12ecc:	ldr	r1, [r3, #4]
   12ed0:	bl	10f34 <printf@plt>
   12ed4:	ldr	r3, [r8]
   12ed8:	lsl	sl, fp, #1
   12edc:	cmp	sl, r3
   12ee0:	bge	13168 <mostraHeap@@Base+0x80c>
   12ee4:	cmp	sl, #0
   12ee8:	ble	1312c <mostraHeap@@Base+0x7d0>
   12eec:	mov	fp, sl
   12ef0:	mov	r8, #0
   12ef4:	sub	fp, fp, #1
   12ef8:	add	r8, r8, #1
   12efc:	asrs	fp, fp, #1
   12f00:	bne	12ef4 <mostraHeap@@Base+0x598>
   12f04:	lsl	r1, sl, #1
   12f08:	add	r1, r1, #1
   12f0c:	ldr	r0, [sp]
   12f10:	bl	1295c <mostraHeap@@Base>
   12f14:	ldr	r9, [pc, #1088]	; 1335c <mostraHeap@@Base+0xa00>
   12f18:	add	r8, r8, r8, lsl #1
   12f1c:	add	fp, fp, #1
   12f20:	mov	r0, r9
   12f24:	bl	10f34 <printf@plt>
   12f28:	cmp	fp, r8
   12f2c:	bne	12f1c <mostraHeap@@Base+0x5c0>
   12f30:	ldr	r8, [sp]
   12f34:	ldr	r0, [pc, #1060]	; 13360 <mostraHeap@@Base+0xa04>
   12f38:	ldr	r3, [r8, #8]
   12f3c:	ldr	r3, [r3, sl, lsl #2]
   12f40:	ldr	r1, [r3, #4]
   12f44:	ldr	r2, [r3]
   12f48:	bl	10f34 <printf@plt>
   12f4c:	add	r1, sl, #1
   12f50:	mov	r0, r8
   12f54:	lsl	r1, r1, #1
   12f58:	bl	1295c <mostraHeap@@Base>
   12f5c:	cmp	r7, #0
   12f60:	beq	12f80 <mostraHeap@@Base+0x624>
   12f64:	cmp	r6, #0
   12f68:	bne	129cc <mostraHeap@@Base+0x70>
   12f6c:	b	129c4 <mostraHeap@@Base+0x68>
   12f70:	mov	r0, #10
   12f74:	add	sp, sp, #36	; 0x24
   12f78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f7c:	b	10fe8 <putchar@plt>
   12f80:	mov	r0, #10
   12f84:	bl	10fe8 <putchar@plt>
   12f88:	b	12f64 <mostraHeap@@Base+0x608>
   12f8c:	ldr	r6, [sp]
   12f90:	lsl	r3, r3, #2
   12f94:	add	r1, r3, #1
   12f98:	mov	r0, r6
   12f9c:	bl	1295c <mostraHeap@@Base>
   12fa0:	ldr	r3, [r6, #8]
   12fa4:	ldr	r0, [pc, #948]	; 13360 <mostraHeap@@Base+0xa04>
   12fa8:	ldr	r3, [r3, r8, lsl #2]
   12fac:	ldr	r1, [r3, #4]
   12fb0:	ldr	r2, [r3]
   12fb4:	bl	10f34 <printf@plt>
   12fb8:	add	r1, r8, #1
   12fbc:	mov	r0, r6
   12fc0:	lsl	r1, r1, #1
   12fc4:	bl	1295c <mostraHeap@@Base>
   12fc8:	mov	r0, #10
   12fcc:	bl	10fe8 <putchar@plt>
   12fd0:	b	12c58 <mostraHeap@@Base+0x2fc>
   12fd4:	subs	fp, r1, #0
   12fd8:	ble	132cc <mostraHeap@@Base+0x970>
   12fdc:	mov	r8, #0
   12fe0:	sub	fp, fp, #1
   12fe4:	add	r8, r8, #1
   12fe8:	asrs	fp, fp, #1
   12fec:	bne	12fe0 <mostraHeap@@Base+0x684>
   12ff0:	ldr	r3, [sp, #16]
   12ff4:	ldr	r0, [sp]
   12ff8:	add	r8, r8, r8, lsl #1
   12ffc:	lsl	r1, r3, #1
   13000:	add	r1, r1, #1
   13004:	bl	1295c <mostraHeap@@Base>
   13008:	add	fp, fp, #1
   1300c:	ldr	r0, [pc, #840]	; 1335c <mostraHeap@@Base+0xa00>
   13010:	bl	10f34 <printf@plt>
   13014:	cmp	fp, r8
   13018:	bne	13008 <mostraHeap@@Base+0x6ac>
   1301c:	ldr	r8, [sp]
   13020:	ldr	r2, [sp, #20]
   13024:	ldr	r0, [pc, #820]	; 13360 <mostraHeap@@Base+0xa04>
   13028:	add	r2, r2, #2
   1302c:	ldr	r3, [r8, #8]
   13030:	mov	fp, r2
   13034:	str	r2, [sp, #8]
   13038:	ldr	r2, [sp, #16]
   1303c:	ldr	r3, [r3, r2, lsl #2]
   13040:	ldr	r1, [r3, #4]
   13044:	ldr	r2, [r3]
   13048:	bl	10f34 <printf@plt>
   1304c:	lsl	r1, fp, #1
   13050:	mov	r0, r8
   13054:	bl	1295c <mostraHeap@@Base>
   13058:	b	12aa0 <mostraHeap@@Base+0x144>
   1305c:	subs	r9, r3, #0
   13060:	ble	13288 <mostraHeap@@Base+0x92c>
   13064:	mov	r8, #0
   13068:	sub	r9, r9, #1
   1306c:	add	r8, r8, #1
   13070:	asrs	r9, r9, #1
   13074:	bne	13068 <mostraHeap@@Base+0x70c>
   13078:	ldr	r3, [sp, #24]
   1307c:	ldr	r0, [sp]
   13080:	add	r8, r8, r8, lsl #1
   13084:	lsl	r1, r3, #1
   13088:	add	r1, r1, #1
   1308c:	bl	1295c <mostraHeap@@Base>
   13090:	add	r9, r9, #1
   13094:	ldr	r0, [pc, #704]	; 1335c <mostraHeap@@Base+0xa00>
   13098:	bl	10f34 <printf@plt>
   1309c:	cmp	r8, r9
   130a0:	bne	13090 <mostraHeap@@Base+0x734>
   130a4:	ldr	r8, [sp]
   130a8:	ldr	r2, [sp, #24]
   130ac:	ldr	r0, [pc, #684]	; 13360 <mostraHeap@@Base+0xa04>
   130b0:	ldr	r3, [r8, #8]
   130b4:	ldr	r3, [r3, r2, lsl #2]
   130b8:	ldr	r2, [r3]
   130bc:	ldr	r1, [r3, #4]
   130c0:	bl	10f34 <printf@plt>
   130c4:	ldr	r3, [sp, #28]
   130c8:	mov	r0, r8
   130cc:	add	r1, r3, #2
   130d0:	lsl	r1, r1, #1
   130d4:	bl	1295c <mostraHeap@@Base>
   130d8:	b	12cfc <mostraHeap@@Base+0x3a0>
   130dc:	ldr	r8, [sp]
   130e0:	lsl	r1, r2, #1
   130e4:	add	r1, r1, #1
   130e8:	mov	r0, r8
   130ec:	mov	r9, r2
   130f0:	bl	1295c <mostraHeap@@Base>
   130f4:	ldr	r3, [r8, #8]
   130f8:	ldr	r0, [pc, #608]	; 13360 <mostraHeap@@Base+0xa04>
   130fc:	ldr	r3, [r3, r9, lsl #2]
   13100:	ldr	r1, [r3, #4]
   13104:	ldr	r2, [r3]
   13108:	bl	10f34 <printf@plt>
   1310c:	ldr	r3, [sp, #20]
   13110:	mov	r0, r8
   13114:	add	r1, r3, #3
   13118:	lsl	r1, r1, #1
   1311c:	bl	1295c <mostraHeap@@Base>
   13120:	mov	r0, #10
   13124:	bl	10fe8 <putchar@plt>
   13128:	b	12b74 <mostraHeap@@Base+0x218>
   1312c:	ldr	r8, [sp]
   13130:	lsl	fp, fp, #2
   13134:	add	r1, fp, #1
   13138:	mov	r0, r8
   1313c:	bl	1295c <mostraHeap@@Base>
   13140:	ldr	r3, [r8, #8]
   13144:	ldr	r0, [pc, #532]	; 13360 <mostraHeap@@Base+0xa04>
   13148:	ldr	r3, [r3, sl, lsl #2]
   1314c:	ldr	r1, [r3, #4]
   13150:	ldr	r2, [r3]
   13154:	bl	10f34 <printf@plt>
   13158:	add	r1, sl, #1
   1315c:	mov	r0, r8
   13160:	lsl	r1, r1, #1
   13164:	bl	1295c <mostraHeap@@Base>
   13168:	mov	r0, #10
   1316c:	bl	10fe8 <putchar@plt>
   13170:	b	12f5c <mostraHeap@@Base+0x600>
   13174:	ldr	r8, [sp]
   13178:	lsl	r3, r3, #2
   1317c:	add	r1, r3, #1
   13180:	mov	r0, r8
   13184:	bl	1295c <mostraHeap@@Base>
   13188:	ldr	r9, [sp, #4]
   1318c:	ldr	r3, [r8, #8]
   13190:	ldr	r0, [pc, #456]	; 13360 <mostraHeap@@Base+0xa04>
   13194:	ldr	r3, [r3, r9, lsl #2]
   13198:	ldr	r1, [r3, #4]
   1319c:	ldr	r2, [r3]
   131a0:	bl	10f34 <printf@plt>
   131a4:	add	r1, r9, #1
   131a8:	mov	r0, r8
   131ac:	lsl	r1, r1, #1
   131b0:	bl	1295c <mostraHeap@@Base>
   131b4:	mov	r0, #10
   131b8:	bl	10fe8 <putchar@plt>
   131bc:	b	12ddc <mostraHeap@@Base+0x480>
   131c0:	subs	sl, r3, #0
   131c4:	ble	13318 <mostraHeap@@Base+0x9bc>
   131c8:	mov	r8, #0
   131cc:	sub	sl, sl, #1
   131d0:	add	r8, r8, #1
   131d4:	asrs	sl, sl, #1
   131d8:	bne	131cc <mostraHeap@@Base+0x870>
   131dc:	ldr	r3, [sp, #8]
   131e0:	ldr	r0, [sp]
   131e4:	add	r8, r8, r8, lsl #1
   131e8:	lsl	r1, r3, #1
   131ec:	add	r1, r1, #1
   131f0:	bl	1295c <mostraHeap@@Base>
   131f4:	add	sl, sl, #1
   131f8:	ldr	r0, [pc, #348]	; 1335c <mostraHeap@@Base+0xa00>
   131fc:	bl	10f34 <printf@plt>
   13200:	cmp	sl, r8
   13204:	bne	131f4 <mostraHeap@@Base+0x898>
   13208:	ldr	r8, [sp]
   1320c:	ldr	r2, [sp, #8]
   13210:	ldr	r0, [pc, #328]	; 13360 <mostraHeap@@Base+0xa04>
   13214:	ldr	r3, [r8, #8]
   13218:	ldr	r3, [r3, r2, lsl #2]
   1321c:	ldr	r2, [r3]
   13220:	ldr	r1, [r3, #4]
   13224:	bl	10f34 <printf@plt>
   13228:	ldr	r3, [sp, #20]
   1322c:	mov	r0, r8
   13230:	add	r1, r3, #2
   13234:	lsl	r1, r1, #1
   13238:	bl	1295c <mostraHeap@@Base>
   1323c:	b	12e90 <mostraHeap@@Base+0x534>
   13240:	mov	r5, #0
   13244:	mov	r4, r5
   13248:	b	1299c <mostraHeap@@Base+0x40>
   1324c:	mov	r6, #0
   13250:	mov	r5, r6
   13254:	b	12a44 <mostraHeap@@Base+0xe8>
   13258:	mov	r7, #0
   1325c:	mov	r6, r7
   13260:	b	12ca0 <mostraHeap@@Base+0x344>
   13264:	mov	sl, #0
   13268:	mov	fp, sl
   1326c:	b	12cdc <mostraHeap@@Base+0x380>
   13270:	mov	r9, #0
   13274:	mov	r7, r9
   13278:	b	12e70 <mostraHeap@@Base+0x514>
   1327c:	mov	r9, #0
   13280:	mov	r7, r9
   13284:	b	12a78 <mostraHeap@@Base+0x11c>
   13288:	ldr	r8, [sp]
   1328c:	lsl	r1, r9, #1
   13290:	mov	r0, r8
   13294:	add	r1, r1, #1
   13298:	bl	1295c <mostraHeap@@Base>
   1329c:	ldr	r3, [r8, #8]
   132a0:	ldr	r0, [pc, #184]	; 13360 <mostraHeap@@Base+0xa04>
   132a4:	ldr	r3, [r3, r9, lsl #2]
   132a8:	ldr	r2, [r3]
   132ac:	ldr	r1, [r3, #4]
   132b0:	bl	10f34 <printf@plt>
   132b4:	ldr	r3, [sp, #28]
   132b8:	mov	r0, r8
   132bc:	add	r1, r3, #2
   132c0:	lsl	r1, r1, #1
   132c4:	bl	1295c <mostraHeap@@Base>
   132c8:	b	12cf4 <mostraHeap@@Base+0x398>
   132cc:	ldr	r8, [sp]
   132d0:	lsl	r1, fp, #1
   132d4:	mov	r0, r8
   132d8:	add	r1, r1, #1
   132dc:	bl	1295c <mostraHeap@@Base>
   132e0:	ldr	r3, [r8, #8]
   132e4:	ldr	r2, [sp, #20]
   132e8:	ldr	r0, [pc, #112]	; 13360 <mostraHeap@@Base+0xa04>
   132ec:	ldr	r3, [r3, fp, lsl #2]
   132f0:	add	r2, r2, #2
   132f4:	str	r2, [sp, #8]
   132f8:	ldr	r1, [r3, #4]
   132fc:	ldr	r2, [r3]
   13300:	bl	10f34 <printf@plt>
   13304:	ldr	r2, [sp, #8]
   13308:	mov	r0, r8
   1330c:	lsl	r1, r2, #1
   13310:	bl	1295c <mostraHeap@@Base>
   13314:	b	12a98 <mostraHeap@@Base+0x13c>
   13318:	ldr	r8, [sp]
   1331c:	lsl	r1, sl, #1
   13320:	mov	r0, r8
   13324:	add	r1, r1, #1
   13328:	bl	1295c <mostraHeap@@Base>
   1332c:	ldr	r3, [r8, #8]
   13330:	ldr	r0, [pc, #40]	; 13360 <mostraHeap@@Base+0xa04>
   13334:	ldr	r3, [r3, sl, lsl #2]
   13338:	ldr	r2, [r3]
   1333c:	ldr	r1, [r3, #4]
   13340:	bl	10f34 <printf@plt>
   13344:	ldr	r3, [sp, #20]
   13348:	mov	r0, r8
   1334c:	add	r1, r3, #2
   13350:	lsl	r1, r1, #1
   13354:	bl	1295c <mostraHeap@@Base>
   13358:	b	12e88 <mostraHeap@@Base+0x52c>
   1335c:	muleq	r1, r4, lr
   13360:	muleq	r1, ip, lr

00013364 <menor_que@@Base>:
   13364:	cmp	r1, #0
   13368:	cmpne	r0, #0
   1336c:	beq	13388 <menor_que@@Base+0x24>
   13370:	ldr	r0, [r0]
   13374:	ldr	r3, [r1]
   13378:	cmp	r0, r3
   1337c:	movge	r0, #0
   13380:	movlt	r0, #1
   13384:	bx	lr
   13388:	mov	r0, #0
   1338c:	bx	lr

00013390 <novo_str@@Base>:
   13390:	push	{r4, r5, r6, r7, r8, lr}
   13394:	mov	r5, r0
   13398:	mov	r0, #12
   1339c:	bl	10fa0 <malloc@plt>
   133a0:	subs	r4, r0, #0
   133a4:	beq	133e4 <novo_str@@Base+0x54>
   133a8:	mov	r0, r5
   133ac:	bl	10fc4 <strlen@plt>
   133b0:	add	r7, r0, #1
   133b4:	mov	r0, r7
   133b8:	bl	10fa0 <malloc@plt>
   133bc:	cmp	r0, #0
   133c0:	mov	r6, r0
   133c4:	str	r0, [r4]
   133c8:	beq	133ec <novo_str@@Base+0x5c>
   133cc:	mov	r2, r7
   133d0:	mov	r1, r5
   133d4:	bl	10f70 <memcpy@plt>
   133d8:	mov	r3, #0
   133dc:	str	r3, [r4, #4]
   133e0:	str	r3, [r4, #8]
   133e4:	mov	r0, r4
   133e8:	pop	{r4, r5, r6, r7, r8, pc}
   133ec:	mov	r0, r4
   133f0:	bl	10f64 <free@plt>
   133f4:	mov	r4, r6
   133f8:	b	133e4 <novo_str@@Base+0x54>

000133fc <lista_nova@@Base>:
   133fc:	push	{r4, lr}
   13400:	mov	r0, #12
   13404:	bl	10fa0 <malloc@plt>
   13408:	cmp	r0, #0
   1340c:	movne	r3, #0
   13410:	strne	r3, [r0]
   13414:	strne	r3, [r0, #4]
   13418:	strne	r3, [r0, #8]
   1341c:	pop	{r4, pc}

00013420 <lista_apaga@@Base>:
   13420:	push	{r4, r5, r6, lr}
   13424:	subs	r5, r0, #0
   13428:	bne	13444 <lista_apaga@@Base+0x24>
   1342c:	b	1345c <lista_apaga@@Base+0x3c>
   13430:	ldm	r4, {r0, r3}
   13434:	str	r3, [r5]
   13438:	bl	10f64 <free@plt>
   1343c:	mov	r0, r4
   13440:	bl	10f64 <free@plt>
   13444:	ldr	r4, [r5]
   13448:	cmp	r4, #0
   1344c:	bne	13430 <lista_apaga@@Base+0x10>
   13450:	mov	r0, r5
   13454:	pop	{r4, r5, r6, lr}
   13458:	b	10f64 <free@plt>
   1345c:	pop	{r4, r5, r6, pc}

00013460 <lista_tamanho@@Base>:
   13460:	cmp	r0, #0
   13464:	ldrne	r0, [r0, #8]
   13468:	mvneq	r0, #0
   1346c:	bx	lr

00013470 <lista_inicio@@Base>:
   13470:	cmp	r0, #0
   13474:	ldrne	r0, [r0]
   13478:	bx	lr

0001347c <lista_fim@@Base>:
   1347c:	cmp	r0, #0
   13480:	ldrne	r0, [r0, #4]
   13484:	bx	lr

00013488 <lista_insere@@Base>:
   13488:	cmp	r1, #0
   1348c:	cmpne	r0, #0
   13490:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13494:	moveq	r8, #1
   13498:	movne	r8, #0
   1349c:	beq	13538 <lista_insere@@Base+0xb0>
   134a0:	mov	r9, r0
   134a4:	mov	r0, #12
   134a8:	mov	sl, r1
   134ac:	mov	r5, r2
   134b0:	bl	10fa0 <malloc@plt>
   134b4:	subs	r4, r0, #0
   134b8:	beq	13538 <lista_insere@@Base+0xb0>
   134bc:	mov	r0, sl
   134c0:	bl	10fc4 <strlen@plt>
   134c4:	add	r6, r0, #1
   134c8:	mov	r0, r6
   134cc:	bl	10fa0 <malloc@plt>
   134d0:	cmp	r0, #0
   134d4:	mov	r7, r0
   134d8:	str	r0, [r4]
   134dc:	beq	13568 <lista_insere@@Base+0xe0>
   134e0:	mov	r2, r6
   134e4:	mov	r1, sl
   134e8:	bl	10f70 <memcpy@plt>
   134ec:	ldr	r3, [r9, #8]
   134f0:	cmp	r5, #0
   134f4:	add	r3, r3, #1
   134f8:	str	r3, [r9, #8]
   134fc:	str	r8, [r4, #4]
   13500:	str	r8, [r4, #8]
   13504:	ldr	r3, [r9]
   13508:	beq	13544 <lista_insere@@Base+0xbc>
   1350c:	cmp	r5, r3
   13510:	streq	r4, [r5, #8]
   13514:	ldrne	r3, [r5, #8]
   13518:	strne	r5, [r4, #4]
   1351c:	strne	r3, [r4, #8]
   13520:	streq	r5, [r4, #4]
   13524:	strne	r4, [r3, #4]
   13528:	streq	r4, [r9]
   1352c:	strne	r4, [r5, #8]
   13530:	mov	r0, r4
   13534:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13538:	mov	r4, #0
   1353c:	mov	r0, r4
   13540:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13544:	cmp	r3, #0
   13548:	streq	r4, [r9, #4]
   1354c:	ldrne	r3, [r9, #4]
   13550:	streq	r4, [r9]
   13554:	strne	r3, [r4, #8]
   13558:	mov	r0, r4
   1355c:	strne	r4, [r3, #4]
   13560:	strne	r4, [r9, #4]
   13564:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13568:	mov	r0, r4
   1356c:	bl	10f64 <free@plt>
   13570:	mov	r4, r7
   13574:	b	13530 <lista_insere@@Base+0xa8>

00013578 <lista_remove@@Base>:
   13578:	cmp	r1, #0
   1357c:	cmpne	r0, #0
   13580:	push	{r4, r5, r6, lr}
   13584:	beq	135d8 <lista_remove@@Base+0x60>
   13588:	ldr	r2, [r1, #8]
   1358c:	ldr	r3, [r0, #8]
   13590:	cmp	r2, #0
   13594:	sub	r3, r3, #1
   13598:	str	r3, [r0, #8]
   1359c:	ldrne	r3, [r1, #4]
   135a0:	ldreq	r5, [r1, #4]
   135a4:	strne	r3, [r2, #4]
   135a8:	ldrne	r5, [r1, #4]
   135ac:	streq	r5, [r0]
   135b0:	cmp	r5, #0
   135b4:	streq	r2, [r0, #4]
   135b8:	mov	r4, r1
   135bc:	ldr	r0, [r1]
   135c0:	strne	r2, [r5, #8]
   135c4:	bl	10f64 <free@plt>
   135c8:	mov	r0, r4
   135cc:	bl	10f64 <free@plt>
   135d0:	mov	r0, r5
   135d4:	pop	{r4, r5, r6, pc}
   135d8:	mov	r5, #0
   135dc:	mov	r0, r5
   135e0:	pop	{r4, r5, r6, pc}

000135e4 <lista_pesquisa@@Base>:
   135e4:	cmp	r1, #0
   135e8:	cmpne	r0, #0
   135ec:	push	{r4, r5, r6, lr}
   135f0:	moveq	r4, #1
   135f4:	movne	r4, #0
   135f8:	beq	13680 <lista_pesquisa@@Base+0x9c>
   135fc:	cmp	r2, #1
   13600:	bhi	13640 <lista_pesquisa@@Base+0x5c>
   13604:	cmp	r2, #0
   13608:	mov	r5, r1
   1360c:	bne	13648 <lista_pesquisa@@Base+0x64>
   13610:	ldr	r4, [r0]
   13614:	cmp	r4, #0
   13618:	bne	1362c <lista_pesquisa@@Base+0x48>
   1361c:	b	13640 <lista_pesquisa@@Base+0x5c>
   13620:	ldr	r4, [r4, #4]
   13624:	cmp	r4, #0
   13628:	beq	13640 <lista_pesquisa@@Base+0x5c>
   1362c:	mov	r1, r5
   13630:	ldr	r0, [r4]
   13634:	bl	10f1c <strcmp@plt>
   13638:	cmp	r0, #0
   1363c:	bne	13620 <lista_pesquisa@@Base+0x3c>
   13640:	mov	r0, r4
   13644:	pop	{r4, r5, r6, pc}
   13648:	ldr	r4, [r0, #4]
   1364c:	cmp	r4, #0
   13650:	bne	13664 <lista_pesquisa@@Base+0x80>
   13654:	b	13640 <lista_pesquisa@@Base+0x5c>
   13658:	ldr	r4, [r4, #8]
   1365c:	cmp	r4, #0
   13660:	beq	13640 <lista_pesquisa@@Base+0x5c>
   13664:	mov	r1, r5
   13668:	ldr	r0, [r4]
   1366c:	bl	10f1c <strcmp@plt>
   13670:	cmp	r0, #0
   13674:	bne	13658 <lista_pesquisa@@Base+0x74>
   13678:	mov	r0, r4
   1367c:	pop	{r4, r5, r6, pc}
   13680:	mov	r4, #0
   13684:	mov	r0, r4
   13688:	pop	{r4, r5, r6, pc}

0001368c <lista_ordena@@Base>:
   1368c:	cmp	r0, #0
   13690:	beq	13718 <lista_ordena@@Base+0x8c>
   13694:	ldr	r3, [r0, #8]
   13698:	cmp	r3, #0
   1369c:	beq	13710 <lista_ordena@@Base+0x84>
   136a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   136a4:	ldr	r8, [r0]
   136a8:	ldr	r9, [r8, #4]
   136ac:	cmp	r9, #0
   136b0:	beq	13708 <lista_ordena@@Base+0x7c>
   136b4:	ldr	sl, [r8]
   136b8:	mov	r7, r8
   136bc:	mov	r5, sl
   136c0:	mov	r4, r9
   136c4:	ldr	r6, [r4]
   136c8:	mov	r1, r5
   136cc:	mov	r0, r6
   136d0:	bl	10f1c <strcmp@plt>
   136d4:	cmp	r0, #0
   136d8:	movlt	r7, r4
   136dc:	ldr	r4, [r4, #4]
   136e0:	movlt	r5, r6
   136e4:	cmp	r4, #0
   136e8:	bne	136c4 <lista_ordena@@Base+0x38>
   136ec:	cmp	r8, r7
   136f0:	strne	r5, [r8]
   136f4:	mov	r8, r9
   136f8:	strne	sl, [r7]
   136fc:	ldr	r9, [r8, #4]
   13700:	cmp	r9, #0
   13704:	bne	136b4 <lista_ordena@@Base+0x28>
   13708:	mov	r0, #0
   1370c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13710:	mov	r0, #0
   13714:	bx	lr
   13718:	mvn	r0, #0
   1371c:	bx	lr

00013720 <lista_inverte@@Base>:
   13720:	push	{r4, r5, lr}
   13724:	subs	r5, r0, #0
   13728:	beq	137c0 <lista_inverte@@Base+0xa0>
   1372c:	ldr	r4, [r5, #8]
   13730:	cmp	r4, #1
   13734:	ble	137b0 <lista_inverte@@Base+0x90>
   13738:	ldr	r2, [r5]
   1373c:	cmp	r4, #2
   13740:	ldr	r3, [r2, #4]
   13744:	beq	137b8 <lista_inverte@@Base+0x98>
   13748:	sub	r4, r4, #2
   1374c:	mov	r1, #0
   13750:	b	13758 <lista_inverte@@Base+0x38>
   13754:	mov	r3, lr
   13758:	ldr	ip, [r3, #8]
   1375c:	ldr	lr, [r3, #4]
   13760:	add	r1, r1, #1
   13764:	str	lr, [ip, #4]
   13768:	ldr	lr, [r3, #4]
   1376c:	cmp	r1, r4
   13770:	str	ip, [lr, #8]
   13774:	str	r2, [r3, #4]
   13778:	str	r3, [r2, #8]
   1377c:	mov	r2, r3
   13780:	bne	13754 <lista_inverte@@Base+0x34>
   13784:	ldr	r2, [r5, #4]
   13788:	mov	r1, #0
   1378c:	mov	r0, r1
   13790:	ldr	ip, [r2, #8]
   13794:	str	ip, [r5, #4]
   13798:	str	r1, [ip, #4]
   1379c:	str	r1, [r2, #8]
   137a0:	str	r3, [r2, #4]
   137a4:	str	r2, [r3, #8]
   137a8:	str	r2, [r5]
   137ac:	pop	{r4, r5, pc}
   137b0:	mov	r0, #0
   137b4:	pop	{r4, r5, pc}
   137b8:	mov	r3, r2
   137bc:	b	13784 <lista_inverte@@Base+0x64>
   137c0:	mvn	r0, #0
   137c4:	pop	{r4, r5, pc}

000137c8 <vetor_novo@@Base>:
   137c8:	push	{r4, lr}
   137cc:	mov	r0, #12
   137d0:	bl	10fa0 <malloc@plt>
   137d4:	cmp	r0, #0
   137d8:	movne	r3, #0
   137dc:	strne	r3, [r0]
   137e0:	strne	r3, [r0, #4]
   137e4:	strne	r3, [r0, #8]
   137e8:	pop	{r4, pc}

000137ec <vetor_apaga@@Base>:
   137ec:	push	{r4, lr}
   137f0:	subs	r4, r0, #0
   137f4:	popeq	{r4, pc}
   137f8:	ldr	r0, [r4, #8]
   137fc:	bl	10f64 <free@plt>
   13800:	mov	r0, r4
   13804:	pop	{r4, lr}
   13808:	b	10f64 <free@plt>

0001380c <vetor_atribui@@Base>:
   1380c:	clz	r3, r0
   13810:	lsr	r3, r3, #5
   13814:	orrs	r3, r3, r1, lsr #31
   13818:	bne	13838 <vetor_atribui@@Base+0x2c>
   1381c:	ldr	r3, [r0]
   13820:	cmp	r1, r3
   13824:	bge	13838 <vetor_atribui@@Base+0x2c>
   13828:	ldr	r3, [r0, #8]
   1382c:	mov	r0, r1
   13830:	str	r2, [r3, r1, lsl #2]
   13834:	bx	lr
   13838:	mvn	r0, #0
   1383c:	bx	lr

00013840 <vetor_tamanho@@Base>:
   13840:	cmp	r0, #0
   13844:	ldrne	r0, [r0]
   13848:	mvneq	r0, #0
   1384c:	bx	lr

00013850 <vetor_elemento@@Base>:
   13850:	clz	r3, r0
   13854:	lsr	r3, r3, #5
   13858:	orrs	r3, r3, r1, lsr #31
   1385c:	bne	13878 <vetor_elemento@@Base+0x28>
   13860:	ldr	r3, [r0]
   13864:	cmp	r1, r3
   13868:	bge	13878 <vetor_elemento@@Base+0x28>
   1386c:	ldr	r3, [r0, #8]
   13870:	ldr	r0, [r3, r1, lsl #2]
   13874:	bx	lr
   13878:	mov	r0, #-2147483648	; 0x80000000
   1387c:	bx	lr

00013880 <vetor_insere@@Base>:
   13880:	cmn	r2, #1
   13884:	movge	r3, #0
   13888:	movlt	r3, #1
   1388c:	cmp	r0, #0
   13890:	orreq	r3, r3, #1
   13894:	cmp	r3, #0
   13898:	push	{r4, r5, r6, r7, r8, lr}
   1389c:	bne	13944 <vetor_insere@@Base+0xc4>
   138a0:	ldr	r5, [r0]
   138a4:	cmp	r2, r5
   138a8:	bgt	13944 <vetor_insere@@Base+0xc4>
   138ac:	ldr	r3, [r0, #4]
   138b0:	cmn	r2, #1
   138b4:	movne	r4, r2
   138b8:	moveq	r4, r5
   138bc:	cmp	r5, r3
   138c0:	mov	r7, r0
   138c4:	mov	r6, r1
   138c8:	beq	13910 <vetor_insere@@Base+0x90>
   138cc:	ldr	r8, [r0, #8]
   138d0:	cmp	r4, r5
   138d4:	bge	138fc <vetor_insere@@Base+0x7c>
   138d8:	sub	r2, r5, r4
   138dc:	lsl	r1, r5, #2
   138e0:	lsl	r2, r2, #2
   138e4:	add	r0, r1, #4
   138e8:	sub	r0, r0, r2
   138ec:	sub	r1, r1, r2
   138f0:	add	r1, r8, r1
   138f4:	add	r0, r8, r0
   138f8:	bl	10f58 <memmove@plt>
   138fc:	add	r5, r5, #1
   13900:	str	r6, [r8, r4, lsl #2]
   13904:	str	r5, [r7]
   13908:	mov	r0, r4
   1390c:	pop	{r4, r5, r6, r7, r8, pc}
   13910:	cmp	r5, #0
   13914:	lslne	r3, r5, #1
   13918:	moveq	r3, #1
   1391c:	lslne	r1, r5, #3
   13920:	moveq	r1, #4
   13924:	str	r3, [r0, #4]
   13928:	ldr	r0, [r0, #8]
   1392c:	bl	10f7c <realloc@plt>
   13930:	cmp	r0, #0
   13934:	str	r0, [r7, #8]
   13938:	ldrne	r5, [r7]
   1393c:	movne	r8, r0
   13940:	bne	138d0 <vetor_insere@@Base+0x50>
   13944:	mvn	r4, #0
   13948:	b	13908 <vetor_insere@@Base+0x88>

0001394c <vetor_remove@@Base>:
   1394c:	clz	r3, r0
   13950:	lsr	r3, r3, #5
   13954:	orrs	r3, r3, r1, lsr #31
   13958:	bne	139b4 <vetor_remove@@Base+0x68>
   1395c:	push	{r4, r5, r6, lr}
   13960:	ldr	r4, [r0]
   13964:	cmp	r1, r4
   13968:	bge	139bc <vetor_remove@@Base+0x70>
   1396c:	add	r3, r1, #1
   13970:	cmp	r4, r3
   13974:	mov	r5, r0
   13978:	ble	139a4 <vetor_remove@@Base+0x58>
   1397c:	mvn	r2, #-1073741824	; 0xc0000000
   13980:	sub	r2, r2, r1
   13984:	lsl	r3, r1, #2
   13988:	ldr	r0, [r0, #8]
   1398c:	add	r2, r2, r4
   13990:	add	r1, r3, #4
   13994:	add	r1, r0, r1
   13998:	lsl	r2, r2, #2
   1399c:	add	r0, r0, r3
   139a0:	bl	10f58 <memmove@plt>
   139a4:	sub	r4, r4, #1
   139a8:	str	r4, [r5]
   139ac:	mov	r0, #0
   139b0:	pop	{r4, r5, r6, pc}
   139b4:	mvn	r0, #0
   139b8:	bx	lr
   139bc:	mvn	r0, #0
   139c0:	pop	{r4, r5, r6, pc}

000139c4 <vetor_pesquisa@@Base>:
   139c4:	cmp	r0, #0
   139c8:	beq	13a0c <vetor_pesquisa@@Base+0x48>
   139cc:	ldr	ip, [r0]
   139d0:	cmp	ip, #0
   139d4:	ble	13a0c <vetor_pesquisa@@Base+0x48>
   139d8:	ldr	r3, [r0, #8]
   139dc:	ldr	r2, [r3]
   139e0:	cmp	r1, r2
   139e4:	beq	13a14 <vetor_pesquisa@@Base+0x50>
   139e8:	add	r3, r3, #4
   139ec:	mov	r0, #0
   139f0:	b	13a00 <vetor_pesquisa@@Base+0x3c>
   139f4:	ldr	r2, [r3], #4
   139f8:	cmp	r2, r1
   139fc:	bxeq	lr
   13a00:	add	r0, r0, #1
   13a04:	cmp	r0, ip
   13a08:	bne	139f4 <vetor_pesquisa@@Base+0x30>
   13a0c:	mvn	r0, #0
   13a10:	bx	lr
   13a14:	mov	r0, #0
   13a18:	bx	lr

00013a1c <vetor_ordena@@Base>:
   13a1c:	cmp	r0, #0
   13a20:	beq	13a8c <vetor_ordena@@Base+0x70>
   13a24:	ldr	r3, [r0]
   13a28:	cmp	r3, #1
   13a2c:	ble	13a84 <vetor_ordena@@Base+0x68>
   13a30:	push	{r4, r5, lr}
   13a34:	sub	r3, r3, #-1073741823	; 0xc0000001
   13a38:	ldr	r5, [r0, #8]
   13a3c:	mov	lr, #1
   13a40:	mov	ip, r5
   13a44:	add	r4, r5, r3, lsl #2
   13a48:	ldr	r0, [ip, #4]!
   13a4c:	mov	r3, lr
   13a50:	mov	r2, ip
   13a54:	ldr	r1, [r2, #-4]
   13a58:	cmp	r0, r1
   13a5c:	bge	13a6c <vetor_ordena@@Base+0x50>
   13a60:	subs	r3, r3, #1
   13a64:	str	r1, [r2], #-4
   13a68:	bne	13a54 <vetor_ordena@@Base+0x38>
   13a6c:	cmp	r4, ip
   13a70:	str	r0, [r5, r3, lsl #2]
   13a74:	add	lr, lr, #1
   13a78:	bne	13a48 <vetor_ordena@@Base+0x2c>
   13a7c:	mov	r0, #0
   13a80:	pop	{r4, r5, pc}
   13a84:	mov	r0, #0
   13a88:	bx	lr
   13a8c:	mvn	r0, #0
   13a90:	bx	lr
   13a94:	cmp	r1, #0
   13a98:	beq	13ca4 <vetor_ordena@@Base+0x288>
   13a9c:	eor	ip, r0, r1
   13aa0:	rsbmi	r1, r1, #0
   13aa4:	subs	r2, r1, #1
   13aa8:	beq	13c70 <vetor_ordena@@Base+0x254>
   13aac:	movs	r3, r0
   13ab0:	rsbmi	r3, r0, #0
   13ab4:	cmp	r3, r1
   13ab8:	bls	13c7c <vetor_ordena@@Base+0x260>
   13abc:	tst	r1, r2
   13ac0:	beq	13c8c <vetor_ordena@@Base+0x270>
   13ac4:	clz	r2, r3
   13ac8:	clz	r0, r1
   13acc:	sub	r2, r0, r2
   13ad0:	rsbs	r2, r2, #31
   13ad4:	addne	r2, r2, r2, lsl #1
   13ad8:	mov	r0, #0
   13adc:	addne	pc, pc, r2, lsl #2
   13ae0:	nop			; (mov r0, r0)
   13ae4:	cmp	r3, r1, lsl #31
   13ae8:	adc	r0, r0, r0
   13aec:	subcs	r3, r3, r1, lsl #31
   13af0:	cmp	r3, r1, lsl #30
   13af4:	adc	r0, r0, r0
   13af8:	subcs	r3, r3, r1, lsl #30
   13afc:	cmp	r3, r1, lsl #29
   13b00:	adc	r0, r0, r0
   13b04:	subcs	r3, r3, r1, lsl #29
   13b08:	cmp	r3, r1, lsl #28
   13b0c:	adc	r0, r0, r0
   13b10:	subcs	r3, r3, r1, lsl #28
   13b14:	cmp	r3, r1, lsl #27
   13b18:	adc	r0, r0, r0
   13b1c:	subcs	r3, r3, r1, lsl #27
   13b20:	cmp	r3, r1, lsl #26
   13b24:	adc	r0, r0, r0
   13b28:	subcs	r3, r3, r1, lsl #26
   13b2c:	cmp	r3, r1, lsl #25
   13b30:	adc	r0, r0, r0
   13b34:	subcs	r3, r3, r1, lsl #25
   13b38:	cmp	r3, r1, lsl #24
   13b3c:	adc	r0, r0, r0
   13b40:	subcs	r3, r3, r1, lsl #24
   13b44:	cmp	r3, r1, lsl #23
   13b48:	adc	r0, r0, r0
   13b4c:	subcs	r3, r3, r1, lsl #23
   13b50:	cmp	r3, r1, lsl #22
   13b54:	adc	r0, r0, r0
   13b58:	subcs	r3, r3, r1, lsl #22
   13b5c:	cmp	r3, r1, lsl #21
   13b60:	adc	r0, r0, r0
   13b64:	subcs	r3, r3, r1, lsl #21
   13b68:	cmp	r3, r1, lsl #20
   13b6c:	adc	r0, r0, r0
   13b70:	subcs	r3, r3, r1, lsl #20
   13b74:	cmp	r3, r1, lsl #19
   13b78:	adc	r0, r0, r0
   13b7c:	subcs	r3, r3, r1, lsl #19
   13b80:	cmp	r3, r1, lsl #18
   13b84:	adc	r0, r0, r0
   13b88:	subcs	r3, r3, r1, lsl #18
   13b8c:	cmp	r3, r1, lsl #17
   13b90:	adc	r0, r0, r0
   13b94:	subcs	r3, r3, r1, lsl #17
   13b98:	cmp	r3, r1, lsl #16
   13b9c:	adc	r0, r0, r0
   13ba0:	subcs	r3, r3, r1, lsl #16
   13ba4:	cmp	r3, r1, lsl #15
   13ba8:	adc	r0, r0, r0
   13bac:	subcs	r3, r3, r1, lsl #15
   13bb0:	cmp	r3, r1, lsl #14
   13bb4:	adc	r0, r0, r0
   13bb8:	subcs	r3, r3, r1, lsl #14
   13bbc:	cmp	r3, r1, lsl #13
   13bc0:	adc	r0, r0, r0
   13bc4:	subcs	r3, r3, r1, lsl #13
   13bc8:	cmp	r3, r1, lsl #12
   13bcc:	adc	r0, r0, r0
   13bd0:	subcs	r3, r3, r1, lsl #12
   13bd4:	cmp	r3, r1, lsl #11
   13bd8:	adc	r0, r0, r0
   13bdc:	subcs	r3, r3, r1, lsl #11
   13be0:	cmp	r3, r1, lsl #10
   13be4:	adc	r0, r0, r0
   13be8:	subcs	r3, r3, r1, lsl #10
   13bec:	cmp	r3, r1, lsl #9
   13bf0:	adc	r0, r0, r0
   13bf4:	subcs	r3, r3, r1, lsl #9
   13bf8:	cmp	r3, r1, lsl #8
   13bfc:	adc	r0, r0, r0
   13c00:	subcs	r3, r3, r1, lsl #8
   13c04:	cmp	r3, r1, lsl #7
   13c08:	adc	r0, r0, r0
   13c0c:	subcs	r3, r3, r1, lsl #7
   13c10:	cmp	r3, r1, lsl #6
   13c14:	adc	r0, r0, r0
   13c18:	subcs	r3, r3, r1, lsl #6
   13c1c:	cmp	r3, r1, lsl #5
   13c20:	adc	r0, r0, r0
   13c24:	subcs	r3, r3, r1, lsl #5
   13c28:	cmp	r3, r1, lsl #4
   13c2c:	adc	r0, r0, r0
   13c30:	subcs	r3, r3, r1, lsl #4
   13c34:	cmp	r3, r1, lsl #3
   13c38:	adc	r0, r0, r0
   13c3c:	subcs	r3, r3, r1, lsl #3
   13c40:	cmp	r3, r1, lsl #2
   13c44:	adc	r0, r0, r0
   13c48:	subcs	r3, r3, r1, lsl #2
   13c4c:	cmp	r3, r1, lsl #1
   13c50:	adc	r0, r0, r0
   13c54:	subcs	r3, r3, r1, lsl #1
   13c58:	cmp	r3, r1
   13c5c:	adc	r0, r0, r0
   13c60:	subcs	r3, r3, r1
   13c64:	cmp	ip, #0
   13c68:	rsbmi	r0, r0, #0
   13c6c:	bx	lr
   13c70:	teq	ip, r0
   13c74:	rsbmi	r0, r0, #0
   13c78:	bx	lr
   13c7c:	movcc	r0, #0
   13c80:	asreq	r0, ip, #31
   13c84:	orreq	r0, r0, #1
   13c88:	bx	lr
   13c8c:	clz	r2, r1
   13c90:	rsb	r2, r2, #31
   13c94:	cmp	ip, #0
   13c98:	lsr	r0, r3, r2
   13c9c:	rsbmi	r0, r0, #0
   13ca0:	bx	lr
   13ca4:	cmp	r0, #0
   13ca8:	mvngt	r0, #-2147483648	; 0x80000000
   13cac:	movlt	r0, #-2147483648	; 0x80000000
   13cb0:	b	13cd4 <vetor_ordena@@Base+0x2b8>
   13cb4:	cmp	r1, #0
   13cb8:	beq	13ca4 <vetor_ordena@@Base+0x288>
   13cbc:	push	{r0, r1, lr}
   13cc0:	bl	13a9c <vetor_ordena@@Base+0x80>
   13cc4:	pop	{r1, r2, lr}
   13cc8:	mul	r3, r2, r0
   13ccc:	sub	r1, r1, r3
   13cd0:	bx	lr
   13cd4:	push	{r1, lr}
   13cd8:	mov	r0, #8
   13cdc:	bl	10f10 <raise@plt>
   13ce0:	pop	{r1, pc}

00013ce4 <__libc_csu_init@@Base>:
   13ce4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13ce8:	mov	r7, r0
   13cec:	ldr	r6, [pc, #72]	; 13d3c <__libc_csu_init@@Base+0x58>
   13cf0:	ldr	r5, [pc, #72]	; 13d40 <__libc_csu_init@@Base+0x5c>
   13cf4:	add	r6, pc, r6
   13cf8:	add	r5, pc, r5
   13cfc:	sub	r6, r6, r5
   13d00:	mov	r8, r1
   13d04:	mov	r9, r2
   13d08:	bl	10ee4 <calloc@plt-0x20>
   13d0c:	asrs	r6, r6, #2
   13d10:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13d14:	mov	r4, #0
   13d18:	add	r4, r4, #1
   13d1c:	ldr	r3, [r5], #4
   13d20:	mov	r2, r9
   13d24:	mov	r1, r8
   13d28:	mov	r0, r7
   13d2c:	blx	r3
   13d30:	cmp	r6, r4
   13d34:	bne	13d18 <__libc_csu_init@@Base+0x34>
   13d38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13d3c:	andeq	r0, r1, r4, lsl r2
   13d40:	andeq	r0, r1, ip, lsl #4

00013d44 <__libc_csu_fini@@Base>:
   13d44:	bx	lr

Disassembly of section .fini:

00013d48 <.fini>:
   13d48:	push	{r3, lr}
   13d4c:	pop	{r3, pc}
