
../repos/charybdis/extensions/.libs/ip_cloaking_3.0.so:     file format elf32-littlearm


Disassembly of section .init:

00000640 <_init>:
 640:	push	{r3, lr}
 644:	bl	72c <call_weak_fn>
 648:	pop	{r3, pc}

Disassembly of section .plt:

0000064c <.plt>:
 64c:	push	{lr}		; (str lr, [sp, #-4]!)
 650:	ldr	lr, [pc, #4]	; 65c <.plt+0x10>
 654:	add	lr, pc, lr
 658:	ldr	pc, [lr, #8]!
 65c:	.word	0x000119a4

00000660 <calloc@plt>:
 660:	add	ip, pc, #0, 12
 664:	add	ip, ip, #69632	; 0x11000
 668:	ldr	pc, [ip, #2468]!	; 0x9a4

0000066c <strcmp@plt>:
 66c:	add	ip, pc, #0, 12
 670:	add	ip, ip, #69632	; 0x11000
 674:	ldr	pc, [ip, #2460]!	; 0x99c

00000678 <__cxa_finalize@plt>:
 678:	add	ip, pc, #0, 12
 67c:	add	ip, ip, #69632	; 0x11000
 680:	ldr	pc, [ip, #2452]!	; 0x994

00000684 <rb_outofmemory@plt>:
 684:	add	ip, pc, #0, 12
 688:	add	ip, ip, #69632	; 0x11000
 68c:	ldr	pc, [ip, #2444]!	; 0x98c

00000690 <find_umode_slot@plt>:
 690:	add	ip, pc, #0, 12
 694:	add	ip, ip, #69632	; 0x11000
 698:	ldr	pc, [ip, #2436]!	; 0x984

0000069c <sendto_server@plt>:
 69c:	add	ip, pc, #0, 12
 6a0:	add	ip, ip, #69632	; 0x11000
 6a4:	ldr	pc, [ip, #2428]!	; 0x97c

000006a8 <__gmon_start__@plt>:
 6a8:	add	ip, pc, #0, 12
 6ac:	add	ip, ip, #69632	; 0x11000
 6b0:	ldr	pc, [ip, #2420]!	; 0x974

000006b4 <__ctype_b_loc@plt>:
 6b4:	add	ip, pc, #0, 12
 6b8:	add	ip, ip, #69632	; 0x11000
 6bc:	ldr	pc, [ip, #2412]!	; 0x96c

000006c0 <sendto_one_numeric@plt>:
 6c0:	add	ip, pc, #0, 12
 6c4:	add	ip, ip, #69632	; 0x11000
 6c8:	ldr	pc, [ip, #2404]!	; 0x964

000006cc <snprintf@plt>:
 6cc:	add	ip, pc, #0, 12
 6d0:	add	ip, ip, #69632	; 0x11000
 6d4:	ldr	pc, [ip, #2396]!	; 0x95c

000006d8 <memset@plt>:
 6d8:	add	ip, pc, #0, 12
 6dc:	add	ip, ip, #69632	; 0x11000
 6e0:	ldr	pc, [ip, #2388]!	; 0x954

000006e4 <strncpy@plt>:
 6e4:	add	ip, pc, #0, 12
 6e8:	add	ip, ip, #69632	; 0x11000
 6ec:	ldr	pc, [ip, #2380]!	; 0x94c

000006f0 <strrchr@plt>:
 6f0:	add	ip, pc, #0, 12
 6f4:	add	ip, ip, #69632	; 0x11000
 6f8:	ldr	pc, [ip, #2372]!	; 0x944

000006fc <change_nick_user_host@plt>:
 6fc:	add	ip, pc, #0, 12
 700:	add	ip, ip, #69632	; 0x11000
 704:	ldr	pc, [ip, #2364]!	; 0x93c

00000708 <rb_strlcpy@plt>:
 708:	add	ip, pc, #0, 12
 70c:	add	ip, ip, #69632	; 0x11000
 710:	ldr	pc, [ip, #2356]!	; 0x934

00000714 <irccmp@plt>:
 714:	add	ip, pc, #0, 12
 718:	add	ip, ip, #69632	; 0x11000
 71c:	ldr	pc, [ip, #2348]!	; 0x92c

00000720 <construct_umodebuf@plt>:
 720:	add	ip, pc, #0, 12
 724:	add	ip, ip, #69632	; 0x11000
 728:	ldr	pc, [ip, #2340]!	; 0x924

Disassembly of section .text:

0000072c <call_weak_fn>:
 72c:	ldr	r3, [pc, #20]	; 748 <call_weak_fn+0x1c>
 730:	ldr	r2, [pc, #20]	; 74c <call_weak_fn+0x20>
 734:	add	r3, pc, r3
 738:	ldr	r2, [r3, r2]
 73c:	cmp	r2, #0
 740:	bxeq	lr
 744:	b	6a8 <__gmon_start__@plt>
 748:	.word	0x000118c4
 74c:	.word	0x00000060

00000750 <deregister_tm_clones>:
 750:	ldr	r3, [pc, #52]	; 78c <deregister_tm_clones+0x3c>
 754:	ldr	r0, [pc, #52]	; 790 <deregister_tm_clones+0x40>
 758:	add	r3, pc, r3
 75c:	add	r0, pc, r0
 760:	add	r3, r3, #3
 764:	sub	r3, r3, r0
 768:	cmp	r3, #6
 76c:	ldr	r3, [pc, #32]	; 794 <deregister_tm_clones+0x44>
 770:	add	r3, pc, r3
 774:	bxls	lr
 778:	ldr	r2, [pc, #24]	; 798 <deregister_tm_clones+0x48>
 77c:	ldr	r3, [r3, r2]
 780:	cmp	r3, #0
 784:	bxeq	lr
 788:	bx	r3
 78c:	.word	0x00011964
 790:	.word	0x00011960
 794:	.word	0x00011888
 798:	.word	0x00000054

0000079c <register_tm_clones>:
 79c:	ldr	r1, [pc, #56]	; 7dc <register_tm_clones+0x40>
 7a0:	ldr	r0, [pc, #56]	; 7e0 <register_tm_clones+0x44>
 7a4:	add	r1, pc, r1
 7a8:	add	r0, pc, r0
 7ac:	sub	r1, r1, r0
 7b0:	ldr	r3, [pc, #44]	; 7e4 <register_tm_clones+0x48>
 7b4:	asr	r1, r1, #2
 7b8:	add	r3, pc, r3
 7bc:	add	r1, r1, r1, lsr #31
 7c0:	asrs	r1, r1, #1
 7c4:	bxeq	lr
 7c8:	ldr	r2, [pc, #24]	; 7e8 <register_tm_clones+0x4c>
 7cc:	ldr	r3, [r3, r2]
 7d0:	cmp	r3, #0
 7d4:	bxeq	lr
 7d8:	bx	r3
 7dc:	.word	0x00011918
 7e0:	.word	0x00011914
 7e4:	.word	0x00011840
 7e8:	.word	0x0000006c

000007ec <__do_global_dtors_aux>:
 7ec:	ldr	r3, [pc, #76]	; 840 <__do_global_dtors_aux+0x54>
 7f0:	ldr	r2, [pc, #76]	; 844 <__do_global_dtors_aux+0x58>
 7f4:	add	r3, pc, r3
 7f8:	add	r2, pc, r2
 7fc:	ldrb	r3, [r3]
 800:	cmp	r3, #0
 804:	bxne	lr
 808:	ldr	r3, [pc, #56]	; 848 <__do_global_dtors_aux+0x5c>
 80c:	push	{r4, lr}
 810:	ldr	r3, [r2, r3]
 814:	cmp	r3, #0
 818:	beq	828 <__do_global_dtors_aux+0x3c>
 81c:	ldr	r3, [pc, #40]	; 84c <__do_global_dtors_aux+0x60>
 820:	ldr	r0, [pc, r3]
 824:	bl	678 <__cxa_finalize@plt>
 828:	bl	750 <deregister_tm_clones>
 82c:	ldr	r3, [pc, #28]	; 850 <__do_global_dtors_aux+0x64>
 830:	mov	r2, #1
 834:	add	r3, pc, r3
 838:	strb	r2, [r3]
 83c:	pop	{r4, pc}
 840:	.word	0x000118c8
 844:	.word	0x00011800
 848:	.word	0x00000050
 84c:	.word	0x0001184c
 850:	.word	0x00011888

00000854 <frame_dummy>:
 854:	ldr	r0, [pc, #56]	; 894 <frame_dummy+0x40>
 858:	ldr	r3, [pc, #56]	; 898 <frame_dummy+0x44>
 85c:	add	r0, pc, r0
 860:	ldr	r2, [r0]
 864:	add	r3, pc, r3
 868:	cmp	r2, #0
 86c:	bne	874 <frame_dummy+0x20>
 870:	b	79c <register_tm_clones>
 874:	ldr	r2, [pc, #32]	; 89c <frame_dummy+0x48>
 878:	ldr	r3, [r3, r2]
 87c:	cmp	r3, #0
 880:	beq	870 <frame_dummy+0x1c>
 884:	push	{r4, lr}
 888:	blx	r3
 88c:	pop	{r4, lr}
 890:	b	79c <register_tm_clones>
 894:	.word	0x00011698
 898:	.word	0x00011794
 89c:	.word	0x00000068

000008a0 <check_new_user>:
 8a0:	push	{r4, r5, r6, r7, r8, r9, lr}
 8a4:	sub	sp, sp, #76	; 0x4c
 8a8:	ldr	r7, [pc, #960]	; c70 <check_new_user+0x3d0>
 8ac:	add	r7, pc, r7
 8b0:	ldrd	r2, [r0, #64]	; 0x40
 8b4:	and	r2, r2, #16777216	; 0x1000000
 8b8:	mov	r3, #0
 8bc:	orrs	r3, r2, r3
 8c0:	beq	8e4 <check_new_user+0x44>
 8c4:	ldr	r3, [pc, #936]	; c74 <check_new_user+0x3d4>
 8c8:	ldr	r3, [r7, r3]
 8cc:	ldr	r2, [r3, #416]	; 0x1a0
 8d0:	ldr	r3, [r0, #56]	; 0x38
 8d4:	bic	r3, r3, r2
 8d8:	str	r3, [r0, #56]	; 0x38
 8dc:	add	sp, sp, #76	; 0x4c
 8e0:	pop	{r4, r5, r6, r7, r8, r9, pc}
 8e4:	mov	r5, r0
 8e8:	ldr	r4, [r0, #432]	; 0x1b0
 8ec:	mov	r1, #64	; 0x40
 8f0:	mov	r0, #1
 8f4:	bl	660 <calloc@plt>
 8f8:	cmp	r0, #0
 8fc:	beq	a7c <check_new_user+0x1dc>
 900:	str	r0, [r4, #432]	; 0x1b0
 904:	add	r9, r5, #227	; 0xe3
 908:	add	r1, r5, #288	; 0x120
 90c:	add	r1, r1, #3
 910:	mov	r0, r9
 914:	bl	714 <irccmp@plt>
 918:	cmp	r0, #0
 91c:	bne	ad8 <check_new_user+0x238>
 920:	ldr	r3, [r5, #432]	; 0x1b0
 924:	ldr	r4, [r3, #432]	; 0x1b0
 928:	ldrb	r3, [r5, #227]	; 0xe3
 92c:	cmp	r3, #0
 930:	beq	a80 <check_new_user+0x1e0>
 934:	mov	r1, r9
 938:	mov	r2, #1
 93c:	add	r2, r2, r3
 940:	ldrb	r3, [r1, #1]!
 944:	cmp	r3, #0
 948:	bne	93c <check_new_user+0x9c>
 94c:	ldr	r3, [pc, #804]	; c78 <check_new_user+0x3d8>
 950:	add	r3, pc, r3
 954:	ldr	r3, [r3]
 958:	cmp	r3, #0
 95c:	bne	98c <check_new_user+0xec>
 960:	mov	r1, #1
 964:	mov	r3, #57	; 0x39
 968:	ldr	r0, [pc, #780]	; c7c <check_new_user+0x3dc>
 96c:	add	r0, pc, r0
 970:	add	r1, r1, r3
 974:	ldrb	r3, [r0, #1]!
 978:	cmp	r3, #0
 97c:	bne	970 <check_new_user+0xd0>
 980:	ldr	r3, [pc, #760]	; c80 <check_new_user+0x3e0>
 984:	add	r3, pc, r3
 988:	str	r1, [r3]
 98c:	ldr	r6, [pc, #752]	; c84 <check_new_user+0x3e4>
 990:	mul	r2, r6, r2
 994:	ldr	r3, [pc, #748]	; c88 <check_new_user+0x3e8>
 998:	add	r3, pc, r3
 99c:	ldr	r6, [r3]
 9a0:	eor	r6, r6, r2
 9a4:	mov	r2, #64	; 0x40
 9a8:	mov	r1, #0
 9ac:	add	r8, sp, #8
 9b0:	mov	r0, r8
 9b4:	bl	6d8 <memset@plt>
 9b8:	mov	r2, #63	; 0x3f
 9bc:	mov	r1, r9
 9c0:	mov	r0, r8
 9c4:	bl	6e4 <strncpy@plt>
 9c8:	mov	r1, #46	; 0x2e
 9cc:	mov	r0, r8
 9d0:	bl	6f0 <strrchr@plt>
 9d4:	cmp	r0, #0
 9d8:	beq	a88 <check_new_user+0x1e8>
 9dc:	mov	r3, #0
 9e0:	strb	r3, [r0]
 9e4:	str	r6, [sp]
 9e8:	add	r3, sp, #8
 9ec:	ldr	r2, [pc, #664]	; c8c <check_new_user+0x3ec>
 9f0:	add	r2, pc, r2
 9f4:	mov	r1, #63	; 0x3f
 9f8:	mov	r0, r4
 9fc:	bl	6cc <snprintf@plt>
 a00:	ldrd	r2, [r5, #64]	; 0x40
 a04:	and	r2, r2, #131072	; 0x20000
 a08:	mov	r3, #0
 a0c:	orrs	r3, r2, r3
 a10:	beq	a2c <check_new_user+0x18c>
 a14:	ldr	r3, [pc, #600]	; c74 <check_new_user+0x3d4>
 a18:	ldr	r3, [r7, r3]
 a1c:	ldr	r2, [r3, #416]	; 0x1a0
 a20:	ldr	r3, [r5, #56]	; 0x38
 a24:	bic	r3, r3, r2
 a28:	str	r3, [r5, #56]	; 0x38
 a2c:	ldr	r3, [pc, #576]	; c74 <check_new_user+0x3d4>
 a30:	ldr	r3, [r7, r3]
 a34:	ldr	r2, [r5, #56]	; 0x38
 a38:	ldr	r3, [r3, #416]	; 0x1a0
 a3c:	tst	r2, r3
 a40:	beq	8dc <check_new_user+0x3c>
 a44:	add	r4, r5, #163	; 0xa3
 a48:	ldr	r3, [r5, #432]	; 0x1b0
 a4c:	mov	r2, #64	; 0x40
 a50:	ldr	r1, [r3, #432]	; 0x1b0
 a54:	mov	r0, r4
 a58:	bl	708 <rb_strlcpy@plt>
 a5c:	mov	r1, r9
 a60:	mov	r0, r4
 a64:	bl	714 <irccmp@plt>
 a68:	cmp	r0, #0
 a6c:	ldrdne	r2, [r5, #64]	; 0x40
 a70:	orrne	r2, r2, #131072	; 0x20000
 a74:	strdne	r2, [r5, #64]	; 0x40
 a78:	b	8dc <check_new_user+0x3c>
 a7c:	bl	684 <rb_outofmemory@plt>
 a80:	mov	r2, #1
 a84:	b	94c <check_new_user+0xac>
 a88:	mov	r1, #58	; 0x3a
 a8c:	add	r0, sp, #8
 a90:	bl	6f0 <strrchr@plt>
 a94:	cmp	r0, #0
 a98:	beq	ac4 <check_new_user+0x224>
 a9c:	mov	r3, #0
 aa0:	strb	r3, [r0]
 aa4:	str	r6, [sp]
 aa8:	add	r3, sp, #8
 aac:	ldr	r2, [pc, #476]	; c90 <check_new_user+0x3f0>
 ab0:	add	r2, pc, r2
 ab4:	mov	r1, #63	; 0x3f
 ab8:	mov	r0, r4
 abc:	bl	6cc <snprintf@plt>
 ac0:	b	a00 <check_new_user+0x160>
 ac4:	mov	r2, #63	; 0x3f
 ac8:	mov	r1, r9
 acc:	mov	r0, r4
 ad0:	bl	6e4 <strncpy@plt>
 ad4:	b	a00 <check_new_user+0x160>
 ad8:	ldr	r3, [r5, #432]	; 0x1b0
 adc:	ldr	r6, [r3, #432]	; 0x1b0
 ae0:	add	ip, sp, #8
 ae4:	ldr	lr, [pc, #424]	; c94 <check_new_user+0x3f4>
 ae8:	add	lr, pc, lr
 aec:	ldm	lr!, {r0, r1, r2, r3}
 af0:	stmia	ip!, {r0, r1, r2, r3}
 af4:	ldm	lr, {r0, r1, r2}
 af8:	stmia	ip!, {r0, r1}
 afc:	strh	r2, [ip], #2
 b00:	lsr	r2, r2, #16
 b04:	strb	r2, [ip]
 b08:	ldrb	r3, [r5, #227]	; 0xe3
 b0c:	cmp	r3, #0
 b10:	beq	bb8 <check_new_user+0x318>
 b14:	mov	r1, r9
 b18:	mov	r2, #1
 b1c:	add	r2, r2, r3
 b20:	ldrb	r3, [r1, #1]!
 b24:	cmp	r3, #0
 b28:	bne	b1c <check_new_user+0x27c>
 b2c:	ldr	r3, [pc, #356]	; c98 <check_new_user+0x3f8>
 b30:	add	r3, pc, r3
 b34:	ldr	r3, [r3]
 b38:	cmp	r3, #0
 b3c:	bne	b6c <check_new_user+0x2cc>
 b40:	mov	r1, #1
 b44:	mov	r3, #57	; 0x39
 b48:	ldr	r0, [pc, #332]	; c9c <check_new_user+0x3fc>
 b4c:	add	r0, pc, r0
 b50:	add	r1, r1, r3
 b54:	ldrb	r3, [r0, #1]!
 b58:	cmp	r3, #0
 b5c:	bne	b50 <check_new_user+0x2b0>
 b60:	ldr	r3, [pc, #312]	; ca0 <check_new_user+0x400>
 b64:	add	r3, pc, r3
 b68:	str	r1, [r3]
 b6c:	ldr	r8, [pc, #272]	; c84 <check_new_user+0x3e4>
 b70:	mul	r2, r8, r2
 b74:	ldr	r3, [pc, #296]	; ca4 <check_new_user+0x404>
 b78:	add	r3, pc, r3
 b7c:	ldr	r8, [r3]
 b80:	eor	r8, r8, r2
 b84:	mov	r2, #63	; 0x3f
 b88:	mov	r1, r9
 b8c:	mov	r0, r6
 b90:	bl	6e4 <strncpy@plt>
 b94:	ldrb	r4, [r6]
 b98:	cmp	r4, #0
 b9c:	cmpne	r4, #46	; 0x2e
 ba0:	beq	c18 <check_new_user+0x378>
 ba4:	bl	6b4 <__ctype_b_loc@plt>
 ba8:	mov	r2, r6
 bac:	ldr	ip, [pc, #244]	; ca8 <check_new_user+0x408>
 bb0:	mov	r1, #26
 bb4:	b	bd0 <check_new_user+0x330>
 bb8:	mov	r2, #1
 bbc:	b	b2c <check_new_user+0x28c>
 bc0:	ldrb	r4, [r2, #1]!
 bc4:	cmp	r4, #0
 bc8:	cmpne	r4, #46	; 0x2e
 bcc:	beq	c18 <check_new_user+0x378>
 bd0:	ldr	lr, [r0]
 bd4:	lsl	r3, r4, #1
 bd8:	ldrh	r3, [lr, r3]
 bdc:	lsr	r3, r3, #11
 be0:	cmp	r4, #45	; 0x2d
 be4:	orreq	r3, r3, #1
 be8:	tst	r3, #1
 bec:	bne	bc0 <check_new_user+0x320>
 bf0:	mul	r4, r4, r8
 bf4:	umull	lr, r3, ip, r4
 bf8:	lsr	r3, r3, #3
 bfc:	mul	r3, r1, r3
 c00:	sub	r4, r4, r3
 c04:	add	r3, sp, #72	; 0x48
 c08:	add	r4, r3, r4
 c0c:	ldrb	r3, [r4, #-64]	; 0xffffffc0
 c10:	strb	r3, [r2]
 c14:	b	bc0 <check_new_user+0x320>
 c18:	ldrb	r4, [r6]
 c1c:	cmp	r4, #0
 c20:	beq	a00 <check_new_user+0x160>
 c24:	bl	6b4 <__ctype_b_loc@plt>
 c28:	ldr	r2, [pc, #124]	; cac <check_new_user+0x40c>
 c2c:	b	c3c <check_new_user+0x39c>
 c30:	ldrb	r4, [r6, #1]!
 c34:	cmp	r4, #0
 c38:	beq	a00 <check_new_user+0x160>
 c3c:	ldr	r1, [r0]
 c40:	lsl	r3, r4, #1
 c44:	ldrh	r3, [r1, r3]
 c48:	tst	r3, #2048	; 0x800
 c4c:	beq	c30 <check_new_user+0x390>
 c50:	mul	r4, r4, r8
 c54:	umull	r1, r3, r2, r4
 c58:	lsr	r3, r3, #3
 c5c:	add	r3, r3, r3, lsl #2
 c60:	sub	r4, r4, r3, lsl #1
 c64:	add	r4, r4, #48	; 0x30
 c68:	strb	r4, [r6]
 c6c:	b	c30 <check_new_user+0x390>
 c70:	.word	0x0001174c
 c74:	.word	0x0000005c
 c78:	.word	0x00011770
 c7c:	.word	0x00000690
 c80:	.word	0x0001173c
 c84:	.word	0x8c3a48ac
 c88:	.word	0x00011728
 c8c:	.word	0x00000638
 c90:	.word	0x00000584
 c94:	.word	0x00000558
 c98:	.word	0x00011590
 c9c:	.word	0x000004b0
 ca0:	.word	0x0001155c
 ca4:	.word	0x00011548
 ca8:	.word	0x4ec4ec4f
 cac:	.word	0xcccccccd

00000cb0 <distribute_hostchange>:
 cb0:	push	{r4, r5, r6, r7, lr}
 cb4:	sub	sp, sp, #20
 cb8:	mov	r4, r0
 cbc:	mov	r6, r1
 cc0:	ldr	r5, [pc, #348]	; e24 <distribute_hostchange+0x174>
 cc4:	add	r5, pc, r5
 cc8:	add	r7, r0, #227	; 0xe3
 ccc:	cmp	r7, r1
 cd0:	beq	e0c <distribute_hostchange+0x15c>
 cd4:	mov	r3, r1
 cd8:	ldr	r2, [pc, #328]	; e28 <distribute_hostchange+0x178>
 cdc:	add	r2, pc, r2
 ce0:	mov	r1, #396	; 0x18c
 ce4:	bl	6c0 <sendto_one_numeric@plt>
 ce8:	ldr	r3, [pc, #316]	; e2c <distribute_hostchange+0x17c>
 cec:	ldr	r3, [r5, r3]
 cf0:	ldr	r2, [pc, #312]	; e30 <distribute_hostchange+0x180>
 cf4:	ldr	r2, [r5, r2]
 cf8:	ldr	r3, [r3]
 cfc:	ldr	r2, [r2]
 d00:	orr	r2, r3, r2
 d04:	ldr	r3, [pc, #296]	; e34 <distribute_hostchange+0x184>
 d08:	ldr	r3, [r5, r3]
 d0c:	ldrb	r3, [r3, #396]	; 0x18c
 d10:	cmp	r3, #0
 d14:	ldr	r3, [pc, #280]	; e34 <distribute_hostchange+0x184>
 d18:	ldr	r3, [r5, r3]
 d1c:	addeq	r3, r3, #88	; 0x58
 d20:	addne	r3, r3, #396	; 0x18c
 d24:	ldrb	r1, [r4, #396]	; 0x18c
 d28:	cmp	r1, #0
 d2c:	addne	r1, r4, #396	; 0x18c
 d30:	addeq	r1, r4, #88	; 0x58
 d34:	str	r6, [sp, #12]
 d38:	str	r1, [sp, #8]
 d3c:	str	r3, [sp, #4]
 d40:	ldr	r3, [pc, #240]	; e38 <distribute_hostchange+0x188>
 d44:	add	r3, pc, r3
 d48:	str	r3, [sp]
 d4c:	mov	r3, #0
 d50:	mov	r1, r3
 d54:	mov	r0, r3
 d58:	bl	69c <sendto_server@plt>
 d5c:	ldr	r3, [pc, #204]	; e30 <distribute_hostchange+0x180>
 d60:	ldr	r3, [r5, r3]
 d64:	ldr	r2, [r3]
 d68:	ldr	r3, [pc, #188]	; e2c <distribute_hostchange+0x17c>
 d6c:	ldr	r3, [r5, r3]
 d70:	ldr	r3, [r3]
 d74:	ldr	r1, [pc, #184]	; e34 <distribute_hostchange+0x184>
 d78:	ldr	r1, [r5, r1]
 d7c:	ldrb	r1, [r1, #396]	; 0x18c
 d80:	cmp	r1, #0
 d84:	ldr	r1, [pc, #168]	; e34 <distribute_hostchange+0x184>
 d88:	ldr	r1, [r5, r1]
 d8c:	addeq	r1, r1, #88	; 0x58
 d90:	addne	r1, r1, #396	; 0x18c
 d94:	ldrb	r0, [r4, #396]	; 0x18c
 d98:	cmp	r0, #0
 d9c:	addne	r0, r4, #396	; 0x18c
 da0:	addeq	r0, r4, #88	; 0x58
 da4:	str	r6, [sp, #12]
 da8:	str	r0, [sp, #8]
 dac:	str	r1, [sp, #4]
 db0:	ldr	r1, [pc, #132]	; e3c <distribute_hostchange+0x18c>
 db4:	add	r1, pc, r1
 db8:	str	r1, [sp]
 dbc:	mov	r1, #0
 dc0:	mov	r0, r1
 dc4:	bl	69c <sendto_server@plt>
 dc8:	ldr	r3, [pc, #112]	; e40 <distribute_hostchange+0x190>
 dcc:	add	r3, pc, r3
 dd0:	str	r3, [sp, #4]
 dd4:	mov	r3, #0
 dd8:	str	r3, [sp]
 ddc:	mov	r3, r6
 de0:	add	r2, r4, #152	; 0x98
 de4:	add	r1, r4, #88	; 0x58
 de8:	mov	r0, r4
 dec:	bl	6fc <change_nick_user_host@plt>
 df0:	cmp	r7, r6
 df4:	ldrd	r2, [r4, #64]	; 0x40
 df8:	orrne	r2, r2, #131072	; 0x20000
 dfc:	biceq	r2, r2, #131072	; 0x20000
 e00:	strd	r2, [r4, #64]	; 0x40
 e04:	add	sp, sp, #20
 e08:	pop	{r4, r5, r6, r7, pc}
 e0c:	mov	r3, r1
 e10:	ldr	r2, [pc, #44]	; e44 <distribute_hostchange+0x194>
 e14:	add	r2, pc, r2
 e18:	mov	r1, #396	; 0x18c
 e1c:	bl	6c0 <sendto_one_numeric@plt>
 e20:	b	ce8 <distribute_hostchange+0x38>
 e24:	.word	0x00011334
 e28:	.word	0x00000380
 e2c:	.word	0x00000064
 e30:	.word	0x00000058
 e34:	.word	0x00000070
 e38:	.word	0x00000348
 e3c:	.word	0x000002ec
 e40:	.word	0x000002f0
 e44:	.word	0x00000264

00000e48 <check_umode_change>:
 e48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 e4c:	ldr	r3, [pc, #276]	; f68 <check_umode_change+0x120>
 e50:	add	r3, pc, r3
 e54:	ldr	r4, [r0]
 e58:	ldrd	r6, [r4, #64]	; 0x40
 e5c:	and	r8, r6, #8192	; 0x2000
 e60:	mov	r9, #0
 e64:	orrs	r2, r8, r9
 e68:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
 e6c:	ldrh	r2, [r4, #80]	; 0x50
 e70:	cmp	r2, #64	; 0x40
 e74:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
 e78:	ldr	r5, [r4, #56]	; 0x38
 e7c:	ldr	r2, [pc, #232]	; f6c <check_umode_change+0x124>
 e80:	ldr	r3, [r3, r2]
 e84:	ldr	r8, [r3, #416]	; 0x1a0
 e88:	ldr	r3, [r0, #4]
 e8c:	eor	r3, r3, r5
 e90:	tst	r3, r8
 e94:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
 e98:	tst	r5, r8
 e9c:	beq	f38 <check_umode_change+0xf0>
 ea0:	and	r2, r6, #16777216	; 0x1000000
 ea4:	mov	r3, #0
 ea8:	orrs	r3, r2, r3
 eac:	bne	f04 <check_umode_change+0xbc>
 eb0:	ldr	r3, [r4, #432]	; 0x1b0
 eb4:	ldr	r9, [r3, #432]	; 0x1b0
 eb8:	cmp	r9, #0
 ebc:	beq	f04 <check_umode_change+0xbc>
 ec0:	and	r6, r6, #131072	; 0x20000
 ec4:	mov	r7, #0
 ec8:	orrs	r3, r6, r7
 ecc:	beq	f10 <check_umode_change+0xc8>
 ed0:	add	r6, r4, #163	; 0xa3
 ed4:	mov	r1, r9
 ed8:	mov	r0, r6
 edc:	bl	66c <strcmp@plt>
 ee0:	cmp	r0, #0
 ee4:	bne	f04 <check_umode_change+0xbc>
 ee8:	mov	r3, r6
 eec:	ldr	r2, [pc, #124]	; f70 <check_umode_change+0x128>
 ef0:	add	r2, pc, r2
 ef4:	mov	r1, #396	; 0x18c
 ef8:	mov	r0, r4
 efc:	bl	6c0 <sendto_one_numeric@plt>
 f00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 f04:	bic	r5, r5, r8
 f08:	str	r5, [r4, #56]	; 0x38
 f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 f10:	add	r6, r4, #163	; 0xa3
 f14:	mov	r1, r9
 f18:	mov	r0, r6
 f1c:	bl	66c <strcmp@plt>
 f20:	cmp	r0, #0
 f24:	beq	ee8 <check_umode_change+0xa0>
 f28:	mov	r1, r9
 f2c:	mov	r0, r4
 f30:	bl	cb0 <distribute_hostchange>
 f34:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 f38:	ldr	r3, [r4, #432]	; 0x1b0
 f3c:	ldr	r1, [r3, #432]	; 0x1b0
 f40:	cmp	r1, #0
 f44:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
 f48:	add	r0, r4, #163	; 0xa3
 f4c:	bl	66c <strcmp@plt>
 f50:	cmp	r0, #0
 f54:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
 f58:	add	r1, r4, #227	; 0xe3
 f5c:	mov	r0, r4
 f60:	bl	cb0 <distribute_hostchange>
 f64:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 f68:	.word	0x000111a8
 f6c:	.word	0x0000005c
 f70:	.word	0x0000016c

00000f74 <_moddeinit>:
 f74:	push	{r4, lr}
 f78:	ldr	r3, [pc, #24]	; f98 <_moddeinit+0x24>
 f7c:	add	r3, pc, r3
 f80:	ldr	r2, [pc, #20]	; f9c <_moddeinit+0x28>
 f84:	ldr	r3, [r3, r2]
 f88:	mov	r2, #0
 f8c:	str	r2, [r3, #416]	; 0x1a0
 f90:	bl	720 <construct_umodebuf@plt>
 f94:	pop	{r4, pc}
 f98:	.word	0x0001107c
 f9c:	.word	0x0000005c

00000fa0 <_modinit>:
 fa0:	push	{r4, lr}
 fa4:	ldr	r4, [pc, #28]	; fc8 <_modinit+0x28>
 fa8:	add	r4, pc, r4
 fac:	bl	690 <find_umode_slot@plt>
 fb0:	ldr	r3, [pc, #20]	; fcc <_modinit+0x2c>
 fb4:	ldr	r3, [r4, r3]
 fb8:	str	r0, [r3, #416]	; 0x1a0
 fbc:	bl	720 <construct_umodebuf@plt>
 fc0:	mov	r0, #0
 fc4:	pop	{r4, pc}
 fc8:	.word	0x00011050
 fcc:	.word	0x0000005c

Disassembly of section .fini:

00000fd0 <_fini>:
 fd0:	push	{r3, lr}
 fd4:	pop	{r3, pc}
