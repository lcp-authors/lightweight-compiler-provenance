
../repos/coreutils/src/base32:     file format elf32-littlearm


Disassembly of section .init:

00010e4c <.init>:
   10e4c:	push	{r3, lr}
   10e50:	bl	11130 <__assert_fail@plt+0x48>
   10e54:	pop	{r3, pc}

Disassembly of section .plt:

00010e58 <calloc@plt-0x14>:
   10e58:	push	{lr}		; (str lr, [sp, #-4]!)
   10e5c:	ldr	lr, [pc, #4]	; 10e68 <calloc@plt-0x4>
   10e60:	add	lr, pc, lr
   10e64:	ldr	pc, [lr, #8]!
   10e68:	muleq	r1, r8, r1

00010e6c <calloc@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #126976	; 0x1f000
   10e74:	ldr	pc, [ip, #408]!	; 0x198

00010e78 <fputs_unlocked@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #126976	; 0x1f000
   10e80:	ldr	pc, [ip, #400]!	; 0x190

00010e84 <raise@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #126976	; 0x1f000
   10e8c:	ldr	pc, [ip, #392]!	; 0x188

00010e90 <strcmp@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #126976	; 0x1f000
   10e98:	ldr	pc, [ip, #384]!	; 0x180

00010e9c <posix_fadvise64@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #126976	; 0x1f000
   10ea4:	ldr	pc, [ip, #376]!	; 0x178

00010ea8 <printf@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #126976	; 0x1f000
   10eb0:	ldr	pc, [ip, #368]!	; 0x170

00010eb4 <fflush@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #126976	; 0x1f000
   10ebc:	ldr	pc, [ip, #360]!	; 0x168

00010ec0 <memmove@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #126976	; 0x1f000
   10ec8:	ldr	pc, [ip, #352]!	; 0x160

00010ecc <free@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #126976	; 0x1f000
   10ed4:	ldr	pc, [ip, #344]!	; 0x158

00010ed8 <_exit@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #126976	; 0x1f000
   10ee0:	ldr	pc, [ip, #336]!	; 0x150

00010ee4 <memcpy@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #126976	; 0x1f000
   10eec:	ldr	pc, [ip, #328]!	; 0x148

00010ef0 <mbsinit@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #126976	; 0x1f000
   10ef8:	ldr	pc, [ip, #320]!	; 0x140

00010efc <fwrite_unlocked@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #126976	; 0x1f000
   10f04:	ldr	pc, [ip, #312]!	; 0x138

00010f08 <memcmp@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #126976	; 0x1f000
   10f10:	ldr	pc, [ip, #304]!	; 0x130

00010f14 <fputc_unlocked@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #126976	; 0x1f000
   10f1c:	ldr	pc, [ip, #296]!	; 0x128

00010f20 <realloc@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #126976	; 0x1f000
   10f28:	ldr	pc, [ip, #288]!	; 0x120

00010f2c <textdomain@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #126976	; 0x1f000
   10f34:	ldr	pc, [ip, #280]!	; 0x118

00010f38 <iswprint@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #126976	; 0x1f000
   10f40:	ldr	pc, [ip, #272]!	; 0x110

00010f44 <lseek64@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #126976	; 0x1f000
   10f4c:	ldr	pc, [ip, #264]!	; 0x108

00010f50 <__ctype_get_mb_cur_max@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #126976	; 0x1f000
   10f58:	ldr	pc, [ip, #256]!	; 0x100

00010f5c <__fpending@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #126976	; 0x1f000
   10f64:	ldr	pc, [ip, #248]!	; 0xf8

00010f68 <ferror_unlocked@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #126976	; 0x1f000
   10f70:	ldr	pc, [ip, #240]!	; 0xf0

00010f74 <mbrtowc@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #126976	; 0x1f000
   10f7c:	ldr	pc, [ip, #232]!	; 0xe8

00010f80 <error@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #126976	; 0x1f000
   10f88:	ldr	pc, [ip, #224]!	; 0xe0

00010f8c <malloc@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #126976	; 0x1f000
   10f94:	ldr	pc, [ip, #216]!	; 0xd8

00010f98 <__libc_start_main@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #126976	; 0x1f000
   10fa0:	ldr	pc, [ip, #208]!	; 0xd0

00010fa4 <__freading@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #126976	; 0x1f000
   10fac:	ldr	pc, [ip, #200]!	; 0xc8

00010fb0 <__gmon_start__@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #126976	; 0x1f000
   10fb8:	ldr	pc, [ip, #192]!	; 0xc0

00010fbc <getopt_long@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #126976	; 0x1f000
   10fc4:	ldr	pc, [ip, #184]!	; 0xb8

00010fc8 <__ctype_b_loc@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #126976	; 0x1f000
   10fd0:	ldr	pc, [ip, #176]!	; 0xb0

00010fd4 <exit@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #126976	; 0x1f000
   10fdc:	ldr	pc, [ip, #168]!	; 0xa8

00010fe0 <gettext@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #126976	; 0x1f000
   10fe8:	ldr	pc, [ip, #160]!	; 0xa0

00010fec <strlen@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #126976	; 0x1f000
   10ff4:	ldr	pc, [ip, #152]!	; 0x98

00010ff8 <strchr@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #126976	; 0x1f000
   11000:	ldr	pc, [ip, #144]!	; 0x90

00011004 <fprintf@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #126976	; 0x1f000
   1100c:	ldr	pc, [ip, #136]!	; 0x88

00011010 <__errno_location@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #126976	; 0x1f000
   11018:	ldr	pc, [ip, #128]!	; 0x80

0001101c <__cxa_atexit@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #126976	; 0x1f000
   11024:	ldr	pc, [ip, #120]!	; 0x78

00011028 <memset@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #126976	; 0x1f000
   11030:	ldr	pc, [ip, #112]!	; 0x70

00011034 <fileno@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #126976	; 0x1f000
   1103c:	ldr	pc, [ip, #104]!	; 0x68

00011040 <memchr@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #126976	; 0x1f000
   11048:	ldr	pc, [ip, #96]!	; 0x60

0001104c <strtoimax@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #126976	; 0x1f000
   11054:	ldr	pc, [ip, #88]!	; 0x58

00011058 <fclose@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #126976	; 0x1f000
   11060:	ldr	pc, [ip, #80]!	; 0x50

00011064 <fseeko64@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #126976	; 0x1f000
   1106c:	ldr	pc, [ip, #72]!	; 0x48

00011070 <setlocale@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #126976	; 0x1f000
   11078:	ldr	pc, [ip, #64]!	; 0x40

0001107c <strrchr@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #126976	; 0x1f000
   11084:	ldr	pc, [ip, #56]!	; 0x38

00011088 <nl_langinfo@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #126976	; 0x1f000
   11090:	ldr	pc, [ip, #48]!	; 0x30

00011094 <fopen64@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #126976	; 0x1f000
   1109c:	ldr	pc, [ip, #40]!	; 0x28

000110a0 <bindtextdomain@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #126976	; 0x1f000
   110a8:	ldr	pc, [ip, #32]!

000110ac <fread_unlocked@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #126976	; 0x1f000
   110b4:	ldr	pc, [ip, #24]!

000110b8 <fputs@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #126976	; 0x1f000
   110c0:	ldr	pc, [ip, #16]!

000110c4 <strncmp@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #126976	; 0x1f000
   110cc:	ldr	pc, [ip, #8]!

000110d0 <abort@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #126976	; 0x1f000
   110d8:	ldr	pc, [ip, #0]!

000110dc <feof_unlocked@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #122880	; 0x1e000
   110e4:	ldr	pc, [ip, #4088]!	; 0xff8

000110e8 <__assert_fail@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #122880	; 0x1e000
   110f0:	ldr	pc, [ip, #4080]!	; 0xff0

Disassembly of section .text:

000110f4 <.text>:
   110f4:	mov	fp, #0
   110f8:	mov	lr, #0
   110fc:	pop	{r1}		; (ldr r1, [sp], #4)
   11100:	mov	r2, sp
   11104:	push	{r2}		; (str r2, [sp, #-4]!)
   11108:	push	{r0}		; (str r0, [sp, #-4]!)
   1110c:	ldr	ip, [pc, #16]	; 11124 <__assert_fail@plt+0x3c>
   11110:	push	{ip}		; (str ip, [sp, #-4]!)
   11114:	ldr	r0, [pc, #12]	; 11128 <__assert_fail@plt+0x40>
   11118:	ldr	r3, [pc, #12]	; 1112c <__assert_fail@plt+0x44>
   1111c:	bl	10f98 <__libc_start_main@plt>
   11120:	bl	110d0 <abort@plt>
   11124:	andeq	lr, r1, r8, ror #23
   11128:	andeq	r1, r1, r4, asr r5
   1112c:	andeq	lr, r1, r8, lsl #23
   11130:	ldr	r3, [pc, #20]	; 1114c <__assert_fail@plt+0x64>
   11134:	ldr	r2, [pc, #20]	; 11150 <__assert_fail@plt+0x68>
   11138:	add	r3, pc, r3
   1113c:	ldr	r2, [r3, r2]
   11140:	cmp	r2, #0
   11144:	bxeq	lr
   11148:	b	10fb0 <__gmon_start__@plt>
   1114c:	andeq	lr, r1, r0, asr #29
   11150:	andeq	r0, r0, r4, ror #1
   11154:	ldr	r0, [pc, #24]	; 11174 <__assert_fail@plt+0x8c>
   11158:	ldr	r3, [pc, #24]	; 11178 <__assert_fail@plt+0x90>
   1115c:	cmp	r3, r0
   11160:	bxeq	lr
   11164:	ldr	r3, [pc, #16]	; 1117c <__assert_fail@plt+0x94>
   11168:	cmp	r3, #0
   1116c:	bxeq	lr
   11170:	bx	r3
   11174:	andeq	r0, r3, r8, lsr r1
   11178:	andeq	r0, r3, r8, lsr r1
   1117c:	andeq	r0, r0, r0
   11180:	ldr	r0, [pc, #36]	; 111ac <__assert_fail@plt+0xc4>
   11184:	ldr	r1, [pc, #36]	; 111b0 <__assert_fail@plt+0xc8>
   11188:	sub	r1, r1, r0
   1118c:	asr	r1, r1, #2
   11190:	add	r1, r1, r1, lsr #31
   11194:	asrs	r1, r1, #1
   11198:	bxeq	lr
   1119c:	ldr	r3, [pc, #16]	; 111b4 <__assert_fail@plt+0xcc>
   111a0:	cmp	r3, #0
   111a4:	bxeq	lr
   111a8:	bx	r3
   111ac:	andeq	r0, r3, r8, lsr r1
   111b0:	andeq	r0, r3, r8, lsr r1
   111b4:	andeq	r0, r0, r0
   111b8:	push	{r4, lr}
   111bc:	ldr	r4, [pc, #24]	; 111dc <__assert_fail@plt+0xf4>
   111c0:	ldrb	r3, [r4]
   111c4:	cmp	r3, #0
   111c8:	popne	{r4, pc}
   111cc:	bl	11154 <__assert_fail@plt+0x6c>
   111d0:	mov	r3, #1
   111d4:	strb	r3, [r4]
   111d8:	pop	{r4, pc}
   111dc:	andeq	r0, r3, ip, asr r1
   111e0:	b	11180 <__assert_fail@plt+0x98>
   111e4:	push	{fp, lr}
   111e8:	mov	fp, sp
   111ec:	sub	sp, sp, #48	; 0x30
   111f0:	str	r0, [fp, #-4]
   111f4:	ldr	r0, [fp, #-4]
   111f8:	cmp	r0, #0
   111fc:	beq	1124c <__assert_fail@plt+0x164>
   11200:	b	11204 <__assert_fail@plt+0x11c>
   11204:	movw	r0, #328	; 0x148
   11208:	movt	r0, #3
   1120c:	ldr	r0, [r0]
   11210:	movw	r1, #60432	; 0xec10
   11214:	movt	r1, #1
   11218:	str	r0, [fp, #-8]
   1121c:	mov	r0, r1
   11220:	bl	10fe0 <gettext@plt>
   11224:	movw	r1, #360	; 0x168
   11228:	movt	r1, #3
   1122c:	ldr	r2, [r1]
   11230:	ldr	r1, [fp, #-8]
   11234:	str	r0, [fp, #-12]
   11238:	mov	r0, r1
   1123c:	ldr	r1, [fp, #-12]
   11240:	bl	11004 <fprintf@plt>
   11244:	str	r0, [fp, #-16]
   11248:	b	11330 <__assert_fail@plt+0x248>
   1124c:	movw	r0, #60471	; 0xec37
   11250:	movt	r0, #1
   11254:	bl	10fe0 <gettext@plt>
   11258:	movw	lr, #360	; 0x168
   1125c:	movt	lr, #3
   11260:	ldr	r1, [lr]
   11264:	bl	10ea8 <printf@plt>
   11268:	movw	r1, #60501	; 0xec55
   1126c:	movt	r1, #1
   11270:	str	r0, [fp, #-20]	; 0xffffffec
   11274:	mov	r0, r1
   11278:	bl	10fe0 <gettext@plt>
   1127c:	movw	r1, #32
   11280:	bl	10ea8 <printf@plt>
   11284:	str	r0, [sp, #24]
   11288:	bl	11338 <__assert_fail@plt+0x250>
   1128c:	bl	1136c <__assert_fail@plt+0x284>
   11290:	movw	r0, #60571	; 0xec9b
   11294:	movt	r0, #1
   11298:	bl	10fe0 <gettext@plt>
   1129c:	movw	r1, #340	; 0x154
   112a0:	movt	r1, #3
   112a4:	ldr	r1, [r1]
   112a8:	bl	10e78 <fputs_unlocked@plt>
   112ac:	movw	r1, #60813	; 0xed8d
   112b0:	movt	r1, #1
   112b4:	str	r0, [sp, #20]
   112b8:	mov	r0, r1
   112bc:	bl	10fe0 <gettext@plt>
   112c0:	movw	r1, #340	; 0x154
   112c4:	movt	r1, #3
   112c8:	ldr	r1, [r1]
   112cc:	bl	10e78 <fputs_unlocked@plt>
   112d0:	movw	r1, #60858	; 0xedba
   112d4:	movt	r1, #1
   112d8:	str	r0, [sp, #16]
   112dc:	mov	r0, r1
   112e0:	bl	10fe0 <gettext@plt>
   112e4:	movw	r1, #340	; 0x154
   112e8:	movt	r1, #3
   112ec:	ldr	r1, [r1]
   112f0:	bl	10e78 <fputs_unlocked@plt>
   112f4:	movw	r1, #60912	; 0xedf0
   112f8:	movt	r1, #1
   112fc:	str	r0, [sp, #12]
   11300:	mov	r0, r1
   11304:	bl	10fe0 <gettext@plt>
   11308:	movw	r1, #61180	; 0xeefc
   1130c:	movt	r1, #1
   11310:	str	r1, [sp, #8]
   11314:	ldr	r2, [sp, #8]
   11318:	bl	10ea8 <printf@plt>
   1131c:	movw	r1, #61180	; 0xeefc
   11320:	movt	r1, #1
   11324:	str	r0, [sp, #4]
   11328:	mov	r0, r1
   1132c:	bl	113a0 <__assert_fail@plt+0x2b8>
   11330:	ldr	r0, [fp, #-4]
   11334:	bl	10fd4 <exit@plt>
   11338:	push	{fp, lr}
   1133c:	mov	fp, sp
   11340:	sub	sp, sp, #8
   11344:	movw	r0, #61291	; 0xef6b
   11348:	movt	r0, #1
   1134c:	bl	10fe0 <gettext@plt>
   11350:	movw	lr, #340	; 0x154
   11354:	movt	lr, #3
   11358:	ldr	r1, [lr]
   1135c:	bl	10e78 <fputs_unlocked@plt>
   11360:	str	r0, [sp, #4]
   11364:	mov	sp, fp
   11368:	pop	{fp, pc}
   1136c:	push	{fp, lr}
   11370:	mov	fp, sp
   11374:	sub	sp, sp, #8
   11378:	movw	r0, #61347	; 0xefa3
   1137c:	movt	r0, #1
   11380:	bl	10fe0 <gettext@plt>
   11384:	movw	lr, #340	; 0x154
   11388:	movt	lr, #3
   1138c:	ldr	r1, [lr]
   11390:	bl	10e78 <fputs_unlocked@plt>
   11394:	str	r0, [sp, #4]
   11398:	mov	sp, fp
   1139c:	pop	{fp, pc}
   113a0:	push	{fp, lr}
   113a4:	mov	fp, sp
   113a8:	sub	sp, sp, #96	; 0x60
   113ac:	add	r1, sp, #36	; 0x24
   113b0:	movw	r2, #61932	; 0xf1ec
   113b4:	movt	r2, #1
   113b8:	str	r0, [fp, #-4]
   113bc:	mov	r0, r1
   113c0:	str	r1, [sp, #20]
   113c4:	mov	r1, r2
   113c8:	movw	r2, #56	; 0x38
   113cc:	bl	10ee4 <memcpy@plt>
   113d0:	ldr	r0, [fp, #-4]
   113d4:	str	r0, [sp, #32]
   113d8:	ldr	r0, [sp, #20]
   113dc:	str	r0, [sp, #28]
   113e0:	ldr	r0, [sp, #28]
   113e4:	ldr	r0, [r0]
   113e8:	movw	r1, #0
   113ec:	cmp	r0, r1
   113f0:	movw	r0, #0
   113f4:	str	r0, [sp, #16]
   113f8:	beq	11424 <__assert_fail@plt+0x33c>
   113fc:	ldr	r0, [fp, #-4]
   11400:	ldr	r1, [sp, #28]
   11404:	ldr	r1, [r1]
   11408:	bl	10e90 <strcmp@plt>
   1140c:	cmp	r0, #0
   11410:	movw	r0, #0
   11414:	moveq	r0, #1
   11418:	mvn	r1, #0
   1141c:	eor	r0, r0, r1
   11420:	str	r0, [sp, #16]
   11424:	ldr	r0, [sp, #16]
   11428:	tst	r0, #1
   1142c:	beq	11440 <__assert_fail@plt+0x358>
   11430:	ldr	r0, [sp, #28]
   11434:	add	r0, r0, #8
   11438:	str	r0, [sp, #28]
   1143c:	b	113e0 <__assert_fail@plt+0x2f8>
   11440:	ldr	r0, [sp, #28]
   11444:	ldr	r0, [r0, #4]
   11448:	movw	r1, #0
   1144c:	cmp	r0, r1
   11450:	beq	11460 <__assert_fail@plt+0x378>
   11454:	ldr	r0, [sp, #28]
   11458:	ldr	r0, [r0, #4]
   1145c:	str	r0, [sp, #32]
   11460:	movw	r0, #61517	; 0xf04d
   11464:	movt	r0, #1
   11468:	bl	10fe0 <gettext@plt>
   1146c:	movw	r1, #61241	; 0xef39
   11470:	movt	r1, #1
   11474:	movw	r2, #61540	; 0xf064
   11478:	movt	r2, #1
   1147c:	bl	10ea8 <printf@plt>
   11480:	movw	r1, #5
   11484:	str	r0, [sp, #12]
   11488:	mov	r0, r1
   1148c:	movw	r1, #0
   11490:	bl	11070 <setlocale@plt>
   11494:	str	r0, [sp, #24]
   11498:	ldr	r0, [sp, #24]
   1149c:	movw	r1, #0
   114a0:	cmp	r0, r1
   114a4:	beq	114e4 <__assert_fail@plt+0x3fc>
   114a8:	ldr	r0, [sp, #24]
   114ac:	movw	r1, #61580	; 0xf08c
   114b0:	movt	r1, #1
   114b4:	movw	r2, #3
   114b8:	bl	110c4 <strncmp@plt>
   114bc:	cmp	r0, #0
   114c0:	beq	114e4 <__assert_fail@plt+0x3fc>
   114c4:	movw	r0, #61584	; 0xf090
   114c8:	movt	r0, #1
   114cc:	bl	10fe0 <gettext@plt>
   114d0:	movw	lr, #340	; 0x154
   114d4:	movt	lr, #3
   114d8:	ldr	r1, [lr]
   114dc:	bl	10e78 <fputs_unlocked@plt>
   114e0:	str	r0, [sp, #8]
   114e4:	movw	r0, #61655	; 0xf0d7
   114e8:	movt	r0, #1
   114ec:	bl	10fe0 <gettext@plt>
   114f0:	ldr	r2, [fp, #-4]
   114f4:	movw	r1, #61540	; 0xf064
   114f8:	movt	r1, #1
   114fc:	bl	10ea8 <printf@plt>
   11500:	movw	r1, #61682	; 0xf0f2
   11504:	movt	r1, #1
   11508:	str	r0, [sp, #4]
   1150c:	mov	r0, r1
   11510:	bl	10fe0 <gettext@plt>
   11514:	ldr	r1, [sp, #32]
   11518:	ldr	r2, [sp, #32]
   1151c:	ldr	lr, [fp, #-4]
   11520:	cmp	r2, lr
   11524:	movw	r2, #0
   11528:	moveq	r2, #1
   1152c:	tst	r2, #1
   11530:	movw	r2, #61732	; 0xf124
   11534:	movt	r2, #1
   11538:	movw	lr, #61450	; 0xf00a
   1153c:	movt	lr, #1
   11540:	movne	r2, lr
   11544:	bl	10ea8 <printf@plt>
   11548:	str	r0, [sp]
   1154c:	mov	sp, fp
   11550:	pop	{fp, pc}
   11554:	push	{fp, lr}
   11558:	mov	fp, sp
   1155c:	sub	sp, sp, #120	; 0x78
   11560:	movw	r2, #0
   11564:	str	r2, [fp, #-4]
   11568:	str	r0, [fp, #-8]
   1156c:	str	r1, [fp, #-12]
   11570:	movw	r0, #0
   11574:	strb	r0, [fp, #-25]	; 0xffffffe7
   11578:	strb	r0, [fp, #-26]	; 0xffffffe6
   1157c:	movw	r0, #76	; 0x4c
   11580:	str	r0, [fp, #-32]	; 0xffffffe0
   11584:	ldr	r0, [fp, #-12]
   11588:	ldr	r0, [r0]
   1158c:	bl	146b4 <__assert_fail@plt+0x35cc>
   11590:	movw	r0, #6
   11594:	movw	r1, #61732	; 0xf124
   11598:	movt	r1, #1
   1159c:	bl	11070 <setlocale@plt>
   115a0:	movw	r1, #61245	; 0xef3d
   115a4:	movt	r1, #1
   115a8:	str	r0, [fp, #-48]	; 0xffffffd0
   115ac:	mov	r0, r1
   115b0:	movw	r1, #61187	; 0xef03
   115b4:	movt	r1, #1
   115b8:	bl	110a0 <bindtextdomain@plt>
   115bc:	movw	r1, #61245	; 0xef3d
   115c0:	movt	r1, #1
   115c4:	str	r0, [fp, #-52]	; 0xffffffcc
   115c8:	mov	r0, r1
   115cc:	bl	10f2c <textdomain@plt>
   115d0:	movw	r1, #16408	; 0x4018
   115d4:	movt	r1, #1
   115d8:	str	r0, [fp, #-56]	; 0xffffffc8
   115dc:	mov	r0, r1
   115e0:	bl	1ebec <__assert_fail@plt+0xdb04>
   115e4:	str	r0, [sp, #60]	; 0x3c
   115e8:	ldr	r0, [fp, #-8]
   115ec:	ldr	r1, [fp, #-12]
   115f0:	movw	r2, #61211	; 0xef1b
   115f4:	movt	r2, #1
   115f8:	movw	r3, #61836	; 0xf18c
   115fc:	movt	r3, #1
   11600:	movw	ip, #0
   11604:	str	ip, [sp]
   11608:	bl	10fbc <getopt_long@plt>
   1160c:	str	r0, [fp, #-16]
   11610:	cmn	r0, #1
   11614:	beq	117e0 <__assert_fail@plt+0x6f8>
   11618:	ldr	r0, [fp, #-16]
   1161c:	cmn	r0, #3
   11620:	str	r0, [sp, #56]	; 0x38
   11624:	beq	1178c <__assert_fail@plt+0x6a4>
   11628:	b	1162c <__assert_fail@plt+0x544>
   1162c:	ldr	r0, [sp, #56]	; 0x38
   11630:	cmn	r0, #2
   11634:	beq	11784 <__assert_fail@plt+0x69c>
   11638:	b	1163c <__assert_fail@plt+0x554>
   1163c:	ldr	r0, [sp, #56]	; 0x38
   11640:	cmp	r0, #100	; 0x64
   11644:	beq	1166c <__assert_fail@plt+0x584>
   11648:	b	1164c <__assert_fail@plt+0x564>
   1164c:	ldr	r0, [sp, #56]	; 0x38
   11650:	cmp	r0, #105	; 0x69
   11654:	beq	11778 <__assert_fail@plt+0x690>
   11658:	b	1165c <__assert_fail@plt+0x574>
   1165c:	ldr	r0, [sp, #56]	; 0x38
   11660:	cmp	r0, #119	; 0x77
   11664:	beq	11678 <__assert_fail@plt+0x590>
   11668:	b	117d4 <__assert_fail@plt+0x6ec>
   1166c:	movw	r0, #1
   11670:	strb	r0, [fp, #-25]	; 0xffffffe7
   11674:	b	117dc <__assert_fail@plt+0x6f4>
   11678:	movw	r0, #344	; 0x158
   1167c:	movt	r0, #3
   11680:	ldr	r0, [r0]
   11684:	movw	r1, #0
   11688:	movw	r2, #10
   1168c:	sub	r3, fp, #40	; 0x28
   11690:	movw	ip, #61732	; 0xf124
   11694:	movt	ip, #1
   11698:	str	ip, [sp]
   1169c:	bl	1b950 <__assert_fail@plt+0xa868>
   116a0:	str	r0, [fp, #-44]	; 0xffffffd4
   116a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   116a8:	movw	r1, #1
   116ac:	cmp	r1, r0
   116b0:	bcc	116c4 <__assert_fail@plt+0x5dc>
   116b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   116b8:	cmn	r0, #1
   116bc:	bgt	11710 <__assert_fail@plt+0x628>
   116c0:	b	116c4 <__assert_fail@plt+0x5dc>
   116c4:	movw	r0, #61223	; 0xef27
   116c8:	movt	r0, #1
   116cc:	bl	10fe0 <gettext@plt>
   116d0:	movw	lr, #344	; 0x158
   116d4:	movt	lr, #3
   116d8:	ldr	lr, [lr]
   116dc:	str	r0, [sp, #52]	; 0x34
   116e0:	mov	r0, lr
   116e4:	bl	16d10 <__assert_fail@plt+0x5c28>
   116e8:	movw	lr, #1
   116ec:	str	r0, [sp, #48]	; 0x30
   116f0:	mov	r0, lr
   116f4:	movw	r1, #0
   116f8:	movw	r2, #61216	; 0xef20
   116fc:	movt	r2, #1
   11700:	ldr	r3, [sp, #52]	; 0x34
   11704:	ldr	lr, [sp, #48]	; 0x30
   11708:	str	lr, [sp]
   1170c:	bl	10f80 <error@plt>
   11710:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11714:	cmp	r0, #1
   11718:	beq	1173c <__assert_fail@plt+0x654>
   1171c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11720:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11724:	subs	r0, r0, #-2147483648	; 0x80000000
   11728:	sbcs	r1, r1, #0
   1172c:	str	r0, [sp, #44]	; 0x2c
   11730:	str	r1, [sp, #40]	; 0x28
   11734:	blt	11750 <__assert_fail@plt+0x668>
   11738:	b	1173c <__assert_fail@plt+0x654>
   1173c:	mov	r0, #0
   11740:	mov	r1, r0
   11744:	str	r1, [sp, #36]	; 0x24
   11748:	str	r0, [sp, #32]
   1174c:	b	11764 <__assert_fail@plt+0x67c>
   11750:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11754:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11758:	str	r0, [sp, #36]	; 0x24
   1175c:	str	r1, [sp, #32]
   11760:	b	11764 <__assert_fail@plt+0x67c>
   11764:	ldr	r0, [sp, #32]
   11768:	ldr	r1, [sp, #36]	; 0x24
   1176c:	str	r1, [fp, #-32]	; 0xffffffe0
   11770:	str	r0, [sp, #28]
   11774:	b	117dc <__assert_fail@plt+0x6f4>
   11778:	movw	r0, #1
   1177c:	strb	r0, [fp, #-26]	; 0xffffffe6
   11780:	b	117dc <__assert_fail@plt+0x6f4>
   11784:	movw	r0, #0
   11788:	bl	111e4 <__assert_fail@plt+0xfc>
   1178c:	movw	r0, #340	; 0x154
   11790:	movt	r0, #3
   11794:	ldr	r0, [r0]
   11798:	movw	r1, #240	; 0xf0
   1179c:	movt	r1, #3
   117a0:	ldr	r3, [r1]
   117a4:	movw	r1, #61180	; 0xeefc
   117a8:	movt	r1, #1
   117ac:	movw	r2, #61241	; 0xef39
   117b0:	movt	r2, #1
   117b4:	movw	ip, #61255	; 0xef47
   117b8:	movt	ip, #1
   117bc:	str	ip, [sp]
   117c0:	movw	ip, #0
   117c4:	str	ip, [sp, #4]
   117c8:	bl	1895c <__assert_fail@plt+0x7874>
   117cc:	movw	r0, #0
   117d0:	bl	10fd4 <exit@plt>
   117d4:	movw	r0, #1
   117d8:	bl	111e4 <__assert_fail@plt+0xfc>
   117dc:	b	115e8 <__assert_fail@plt+0x500>
   117e0:	ldr	r0, [fp, #-8]
   117e4:	movw	r1, #320	; 0x140
   117e8:	movt	r1, #3
   117ec:	ldr	r1, [r1]
   117f0:	sub	r0, r0, r1
   117f4:	cmp	r0, #1
   117f8:	ble	11850 <__assert_fail@plt+0x768>
   117fc:	movw	r0, #61271	; 0xef57
   11800:	movt	r0, #1
   11804:	bl	10fe0 <gettext@plt>
   11808:	ldr	lr, [fp, #-12]
   1180c:	movw	r1, #320	; 0x140
   11810:	movt	r1, #3
   11814:	ldr	r1, [r1]
   11818:	add	r1, r1, #1
   1181c:	add	r1, lr, r1, lsl #2
   11820:	ldr	r1, [r1]
   11824:	str	r0, [sp, #24]
   11828:	mov	r0, r1
   1182c:	bl	16d10 <__assert_fail@plt+0x5c28>
   11830:	movw	r1, #0
   11834:	str	r0, [sp, #20]
   11838:	mov	r0, r1
   1183c:	ldr	r2, [sp, #24]
   11840:	ldr	r3, [sp, #20]
   11844:	bl	10f80 <error@plt>
   11848:	movw	r0, #1
   1184c:	bl	111e4 <__assert_fail@plt+0xfc>
   11850:	movw	r0, #320	; 0x140
   11854:	movt	r0, #3
   11858:	ldr	r0, [r0]
   1185c:	ldr	r1, [fp, #-8]
   11860:	cmp	r0, r1
   11864:	bge	11888 <__assert_fail@plt+0x7a0>
   11868:	ldr	r0, [fp, #-12]
   1186c:	movw	r1, #320	; 0x140
   11870:	movt	r1, #3
   11874:	ldr	r1, [r1]
   11878:	add	r0, r0, r1, lsl #2
   1187c:	ldr	r0, [r0]
   11880:	str	r0, [fp, #-24]	; 0xffffffe8
   11884:	b	11894 <__assert_fail@plt+0x7ac>
   11888:	movw	r0, #62357	; 0xf395
   1188c:	movt	r0, #1
   11890:	str	r0, [fp, #-24]	; 0xffffffe8
   11894:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11898:	movw	r1, #62357	; 0xf395
   1189c:	movt	r1, #1
   118a0:	bl	10e90 <strcmp@plt>
   118a4:	cmp	r0, #0
   118a8:	bne	118d0 <__assert_fail@plt+0x7e8>
   118ac:	movw	r0, #0
   118b0:	str	r0, [sp, #16]
   118b4:	ldr	r1, [sp, #16]
   118b8:	bl	1b91c <__assert_fail@plt+0xa834>
   118bc:	movw	r0, #336	; 0x150
   118c0:	movt	r0, #3
   118c4:	ldr	r0, [r0]
   118c8:	str	r0, [fp, #-20]	; 0xffffffec
   118cc:	b	11938 <__assert_fail@plt+0x850>
   118d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   118d4:	movw	r1, #61288	; 0xef68
   118d8:	movt	r1, #1
   118dc:	bl	11094 <fopen64@plt>
   118e0:	str	r0, [fp, #-20]	; 0xffffffec
   118e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   118e8:	movw	r1, #0
   118ec:	cmp	r0, r1
   118f0:	bne	11934 <__assert_fail@plt+0x84c>
   118f4:	bl	11010 <__errno_location@plt>
   118f8:	ldr	r1, [r0]
   118fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11900:	movw	r0, #0
   11904:	movw	lr, #3
   11908:	str	r1, [sp, #12]
   1190c:	mov	r1, lr
   11910:	bl	16acc <__assert_fail@plt+0x59e4>
   11914:	movw	r1, #1
   11918:	str	r0, [sp, #8]
   1191c:	mov	r0, r1
   11920:	ldr	r1, [sp, #12]
   11924:	movw	r2, #61220	; 0xef24
   11928:	movt	r2, #1
   1192c:	ldr	r3, [sp, #8]
   11930:	bl	10f80 <error@plt>
   11934:	b	11938 <__assert_fail@plt+0x850>
   11938:	ldr	r0, [fp, #-20]	; 0xffffffec
   1193c:	movw	r1, #2
   11940:	bl	141a0 <__assert_fail@plt+0x30b8>
   11944:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   11948:	tst	r0, #1
   1194c:	beq	11974 <__assert_fail@plt+0x88c>
   11950:	ldr	r0, [fp, #-20]	; 0xffffffec
   11954:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11958:	movw	r2, #340	; 0x154
   1195c:	movt	r2, #3
   11960:	ldr	r2, [r2]
   11964:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   11968:	and	r3, r3, #1
   1196c:	bl	1199c <__assert_fail@plt+0x8b4>
   11970:	b	11990 <__assert_fail@plt+0x8a8>
   11974:	ldr	r0, [fp, #-20]	; 0xffffffec
   11978:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1197c:	movw	r2, #340	; 0x154
   11980:	movt	r2, #3
   11984:	ldr	r2, [r2]
   11988:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1198c:	bl	11d28 <__assert_fail@plt+0xc40>
   11990:	ldr	r0, [fp, #-4]
   11994:	mov	sp, fp
   11998:	pop	{fp, pc}
   1199c:	push	{fp, lr}
   119a0:	mov	fp, sp
   119a4:	sub	sp, sp, #112	; 0x70
   119a8:	str	r0, [fp, #-4]
   119ac:	str	r1, [fp, #-8]
   119b0:	str	r2, [fp, #-12]
   119b4:	and	r0, r3, #1
   119b8:	strb	r0, [fp, #-13]
   119bc:	movw	r0, #8192	; 0x2000
   119c0:	bl	18aec <__assert_fail@plt+0x7a04>
   119c4:	str	r0, [fp, #-20]	; 0xffffffec
   119c8:	movw	r0, #5120	; 0x1400
   119cc:	bl	18aec <__assert_fail@plt+0x7a04>
   119d0:	str	r0, [fp, #-24]	; 0xffffffe8
   119d4:	sub	r0, fp, #40	; 0x28
   119d8:	bl	134d8 <__assert_fail@plt+0x23f0>
   119dc:	movw	r0, #0
   119e0:	str	r0, [fp, #-28]	; 0xffffffe4
   119e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   119e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   119ec:	add	r0, r0, r1
   119f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   119f4:	movw	r2, #8192	; 0x2000
   119f8:	sub	r2, r2, r1
   119fc:	ldr	r3, [fp, #-4]
   11a00:	movw	r1, #1
   11a04:	bl	110ac <fread_unlocked@plt>
   11a08:	str	r0, [fp, #-48]	; 0xffffffd0
   11a0c:	ldrb	r0, [fp, #-13]
   11a10:	tst	r0, #1
   11a14:	beq	11afc <__assert_fail@plt+0xa14>
   11a18:	movw	r0, #0
   11a1c:	str	r0, [fp, #-52]	; 0xffffffcc
   11a20:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11a24:	cmp	r0, #0
   11a28:	movw	r0, #0
   11a2c:	str	r0, [sp, #48]	; 0x30
   11a30:	ble	11a4c <__assert_fail@plt+0x964>
   11a34:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11a38:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11a3c:	cmp	r0, r1
   11a40:	movw	r0, #0
   11a44:	movlt	r0, #1
   11a48:	str	r0, [sp, #48]	; 0x30
   11a4c:	ldr	r0, [sp, #48]	; 0x30
   11a50:	tst	r0, #1
   11a54:	beq	11af8 <__assert_fail@plt+0xa10>
   11a58:	ldr	r0, [fp, #-20]	; 0xffffffec
   11a5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11a60:	ldr	r2, [fp, #-52]	; 0xffffffcc
   11a64:	add	r1, r1, r2
   11a68:	add	r0, r0, r1
   11a6c:	ldrb	r0, [r0]
   11a70:	bl	13490 <__assert_fail@plt+0x23a8>
   11a74:	tst	r0, #1
   11a78:	bne	11a9c <__assert_fail@plt+0x9b4>
   11a7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11a80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11a84:	ldr	r2, [fp, #-52]	; 0xffffffcc
   11a88:	add	r1, r1, r2
   11a8c:	add	r0, r0, r1
   11a90:	ldrb	r0, [r0]
   11a94:	cmp	r0, #61	; 0x3d
   11a98:	bne	11aac <__assert_fail@plt+0x9c4>
   11a9c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11aa0:	add	r0, r0, #1
   11aa4:	str	r0, [fp, #-52]	; 0xffffffcc
   11aa8:	b	11af4 <__assert_fail@plt+0xa0c>
   11aac:	ldr	r0, [fp, #-20]	; 0xffffffec
   11ab0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11ab4:	add	r0, r0, r1
   11ab8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   11abc:	add	r0, r0, r1
   11ac0:	ldr	r1, [fp, #-20]	; 0xffffffec
   11ac4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11ac8:	add	r1, r1, r2
   11acc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   11ad0:	add	r1, r1, r2
   11ad4:	add	r1, r1, #1
   11ad8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11adc:	mvn	r3, #0
   11ae0:	add	r2, r2, r3
   11ae4:	str	r2, [fp, #-48]	; 0xffffffd0
   11ae8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11aec:	sub	r2, r2, r3
   11af0:	bl	10ec0 <memmove@plt>
   11af4:	b	11a20 <__assert_fail@plt+0x938>
   11af8:	b	11afc <__assert_fail@plt+0xa14>
   11afc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11b00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11b04:	add	r0, r1, r0
   11b08:	str	r0, [fp, #-28]	; 0xffffffe4
   11b0c:	ldr	r0, [fp, #-4]
   11b10:	bl	10f68 <ferror_unlocked@plt>
   11b14:	cmp	r0, #0
   11b18:	beq	11b4c <__assert_fail@plt+0xa64>
   11b1c:	bl	11010 <__errno_location@plt>
   11b20:	ldr	r1, [r0]
   11b24:	movw	r0, #61773	; 0xf14d
   11b28:	movt	r0, #1
   11b2c:	str	r1, [sp, #44]	; 0x2c
   11b30:	bl	10fe0 <gettext@plt>
   11b34:	movw	r1, #1
   11b38:	str	r0, [sp, #40]	; 0x28
   11b3c:	mov	r0, r1
   11b40:	ldr	r1, [sp, #44]	; 0x2c
   11b44:	ldr	r2, [sp, #40]	; 0x28
   11b48:	bl	10f80 <error@plt>
   11b4c:	b	11b50 <__assert_fail@plt+0xa68>
   11b50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11b54:	cmp	r0, #8192	; 0x2000
   11b58:	movw	r0, #0
   11b5c:	str	r0, [sp, #36]	; 0x24
   11b60:	bge	11b84 <__assert_fail@plt+0xa9c>
   11b64:	ldr	r0, [fp, #-4]
   11b68:	bl	110dc <feof_unlocked@plt>
   11b6c:	cmp	r0, #0
   11b70:	movw	r0, #0
   11b74:	movne	r0, #1
   11b78:	mvn	lr, #0
   11b7c:	eor	r0, r0, lr
   11b80:	str	r0, [sp, #36]	; 0x24
   11b84:	ldr	r0, [sp, #36]	; 0x24
   11b88:	tst	r0, #1
   11b8c:	bne	119e4 <__assert_fail@plt+0x8fc>
   11b90:	movw	r0, #0
   11b94:	str	r0, [sp, #56]	; 0x38
   11b98:	ldr	r0, [sp, #56]	; 0x38
   11b9c:	ldr	r1, [fp, #-4]
   11ba0:	str	r0, [sp, #32]
   11ba4:	mov	r0, r1
   11ba8:	bl	110dc <feof_unlocked@plt>
   11bac:	cmp	r0, #0
   11bb0:	movw	r0, #0
   11bb4:	movne	r0, #1
   11bb8:	mvn	r1, #0
   11bbc:	eor	r0, r0, r1
   11bc0:	eor	r0, r0, r1
   11bc4:	and	r0, r0, #1
   11bc8:	add	r0, r0, #1
   11bcc:	ldr	r1, [sp, #32]
   11bd0:	cmp	r1, r0
   11bd4:	bge	11cec <__assert_fail@plt+0xc04>
   11bd8:	ldr	r0, [sp, #56]	; 0x38
   11bdc:	cmp	r0, #1
   11be0:	bne	11bf4 <__assert_fail@plt+0xb0c>
   11be4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11be8:	cmp	r0, #0
   11bec:	bne	11bf4 <__assert_fail@plt+0xb0c>
   11bf0:	b	11cec <__assert_fail@plt+0xc04>
   11bf4:	movw	r0, #5120	; 0x1400
   11bf8:	str	r0, [sp, #52]	; 0x34
   11bfc:	ldr	r1, [fp, #-20]	; 0xffffffec
   11c00:	ldr	r0, [sp, #56]	; 0x38
   11c04:	cmp	r0, #0
   11c08:	str	r1, [sp, #28]
   11c0c:	bne	11c1c <__assert_fail@plt+0xb34>
   11c10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11c14:	str	r0, [sp, #24]
   11c18:	b	11c28 <__assert_fail@plt+0xb40>
   11c1c:	movw	r0, #0
   11c20:	str	r0, [sp, #24]
   11c24:	b	11c28 <__assert_fail@plt+0xb40>
   11c28:	ldr	r0, [sp, #24]
   11c2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c30:	sub	r1, fp, #40	; 0x28
   11c34:	str	r0, [sp, #20]
   11c38:	mov	r0, r1
   11c3c:	ldr	r1, [sp, #28]
   11c40:	ldr	r2, [sp, #20]
   11c44:	add	ip, sp, #52	; 0x34
   11c48:	str	ip, [sp]
   11c4c:	bl	134f4 <__assert_fail@plt+0x240c>
   11c50:	and	r0, r0, #1
   11c54:	strb	r0, [fp, #-41]	; 0xffffffd7
   11c58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11c5c:	ldr	r2, [sp, #52]	; 0x34
   11c60:	ldr	r3, [fp, #-12]
   11c64:	movw	r1, #1
   11c68:	bl	10efc <fwrite_unlocked@plt>
   11c6c:	ldr	r1, [sp, #52]	; 0x34
   11c70:	cmp	r0, r1
   11c74:	bcs	11ca8 <__assert_fail@plt+0xbc0>
   11c78:	bl	11010 <__errno_location@plt>
   11c7c:	ldr	r1, [r0]
   11c80:	movw	r0, #61784	; 0xf158
   11c84:	movt	r0, #1
   11c88:	str	r1, [sp, #16]
   11c8c:	bl	10fe0 <gettext@plt>
   11c90:	movw	r1, #1
   11c94:	str	r0, [sp, #12]
   11c98:	mov	r0, r1
   11c9c:	ldr	r1, [sp, #16]
   11ca0:	ldr	r2, [sp, #12]
   11ca4:	bl	10f80 <error@plt>
   11ca8:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   11cac:	tst	r0, #1
   11cb0:	bne	11cd8 <__assert_fail@plt+0xbf0>
   11cb4:	movw	r0, #61796	; 0xf164
   11cb8:	movt	r0, #1
   11cbc:	bl	10fe0 <gettext@plt>
   11cc0:	movw	lr, #1
   11cc4:	str	r0, [sp, #8]
   11cc8:	mov	r0, lr
   11ccc:	movw	r1, #0
   11cd0:	ldr	r2, [sp, #8]
   11cd4:	bl	10f80 <error@plt>
   11cd8:	b	11cdc <__assert_fail@plt+0xbf4>
   11cdc:	ldr	r0, [sp, #56]	; 0x38
   11ce0:	add	r0, r0, #1
   11ce4:	str	r0, [sp, #56]	; 0x38
   11ce8:	b	11b98 <__assert_fail@plt+0xab0>
   11cec:	b	11cf0 <__assert_fail@plt+0xc08>
   11cf0:	ldr	r0, [fp, #-4]
   11cf4:	bl	110dc <feof_unlocked@plt>
   11cf8:	cmp	r0, #0
   11cfc:	movw	r0, #0
   11d00:	movne	r0, #1
   11d04:	mvn	lr, #0
   11d08:	eor	r0, r0, lr
   11d0c:	tst	r0, #1
   11d10:	bne	119dc <__assert_fail@plt+0x8f4>
   11d14:	ldr	r0, [fp, #-4]
   11d18:	ldr	r1, [fp, #-8]
   11d1c:	bl	11f74 <__assert_fail@plt+0xe8c>
   11d20:	mov	sp, fp
   11d24:	pop	{fp, pc}
   11d28:	push	{fp, lr}
   11d2c:	mov	fp, sp
   11d30:	sub	sp, sp, #72	; 0x48
   11d34:	str	r0, [fp, #-4]
   11d38:	str	r1, [fp, #-8]
   11d3c:	str	r2, [fp, #-12]
   11d40:	str	r3, [fp, #-16]
   11d44:	movw	r0, #0
   11d48:	str	r0, [fp, #-20]	; 0xffffffec
   11d4c:	movw	r0, #30720	; 0x7800
   11d50:	bl	18aec <__assert_fail@plt+0x7a04>
   11d54:	str	r0, [fp, #-24]	; 0xffffffe8
   11d58:	movw	r0, #49152	; 0xc000
   11d5c:	bl	18aec <__assert_fail@plt+0x7a04>
   11d60:	str	r0, [fp, #-28]	; 0xffffffe4
   11d64:	movw	r0, #0
   11d68:	str	r0, [fp, #-32]	; 0xffffffe0
   11d6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11d70:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11d74:	add	r0, r0, r1
   11d78:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11d7c:	movw	r2, #30720	; 0x7800
   11d80:	sub	r2, r2, r1
   11d84:	ldr	r3, [fp, #-4]
   11d88:	movw	r1, #1
   11d8c:	bl	110ac <fread_unlocked@plt>
   11d90:	str	r0, [sp, #36]	; 0x24
   11d94:	ldr	r0, [sp, #36]	; 0x24
   11d98:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11d9c:	add	r0, r1, r0
   11da0:	str	r0, [fp, #-32]	; 0xffffffe0
   11da4:	ldr	r0, [fp, #-4]
   11da8:	bl	110dc <feof_unlocked@plt>
   11dac:	cmp	r0, #0
   11db0:	movw	r0, #0
   11db4:	str	r0, [sp, #32]
   11db8:	bne	11de8 <__assert_fail@plt+0xd00>
   11dbc:	ldr	r0, [fp, #-4]
   11dc0:	bl	10f68 <ferror_unlocked@plt>
   11dc4:	cmp	r0, #0
   11dc8:	movw	r0, #0
   11dcc:	str	r0, [sp, #32]
   11dd0:	bne	11de8 <__assert_fail@plt+0xd00>
   11dd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11dd8:	cmp	r0, #30720	; 0x7800
   11ddc:	movw	r0, #0
   11de0:	movlt	r0, #1
   11de4:	str	r0, [sp, #32]
   11de8:	ldr	r0, [sp, #32]
   11dec:	tst	r0, #1
   11df0:	bne	11d6c <__assert_fail@plt+0xc84>
   11df4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11df8:	cmp	r0, #0
   11dfc:	ble	11e70 <__assert_fail@plt+0xd88>
   11e00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11e04:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11e08:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11e0c:	add	r3, r1, #4
   11e10:	movw	ip, #26215	; 0x6667
   11e14:	movt	ip, #26214	; 0x6666
   11e18:	smmul	r3, r3, ip
   11e1c:	lsr	lr, r3, #1
   11e20:	add	r3, lr, r3, lsr #31
   11e24:	lsl	r3, r3, #3
   11e28:	str	ip, [sp, #28]
   11e2c:	bl	12214 <__assert_fail@plt+0x112c>
   11e30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11e34:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11e38:	add	r1, r1, #4
   11e3c:	ldr	r2, [sp, #28]
   11e40:	smmul	r1, r1, r2
   11e44:	asr	r3, r1, #1
   11e48:	add	r1, r3, r1, lsr #31
   11e4c:	lsl	r1, r1, #3
   11e50:	ldr	r2, [fp, #-16]
   11e54:	ldr	r3, [fp, #-12]
   11e58:	sub	ip, fp, #20
   11e5c:	str	r3, [sp, #24]
   11e60:	mov	r3, ip
   11e64:	ldr	ip, [sp, #24]
   11e68:	str	ip, [sp]
   11e6c:	bl	12028 <__assert_fail@plt+0xf40>
   11e70:	b	11e74 <__assert_fail@plt+0xd8c>
   11e74:	ldr	r0, [fp, #-4]
   11e78:	bl	110dc <feof_unlocked@plt>
   11e7c:	cmp	r0, #0
   11e80:	movw	r0, #0
   11e84:	str	r0, [sp, #20]
   11e88:	bne	11eb8 <__assert_fail@plt+0xdd0>
   11e8c:	ldr	r0, [fp, #-4]
   11e90:	bl	10f68 <ferror_unlocked@plt>
   11e94:	cmp	r0, #0
   11e98:	movw	r0, #0
   11e9c:	str	r0, [sp, #20]
   11ea0:	bne	11eb8 <__assert_fail@plt+0xdd0>
   11ea4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11ea8:	cmp	r0, #30720	; 0x7800
   11eac:	movw	r0, #0
   11eb0:	moveq	r0, #1
   11eb4:	str	r0, [sp, #20]
   11eb8:	ldr	r0, [sp, #20]
   11ebc:	tst	r0, #1
   11ec0:	bne	11d64 <__assert_fail@plt+0xc7c>
   11ec4:	ldr	r0, [fp, #-16]
   11ec8:	cmp	r0, #0
   11ecc:	beq	11f20 <__assert_fail@plt+0xe38>
   11ed0:	ldr	r0, [fp, #-20]	; 0xffffffec
   11ed4:	cmp	r0, #0
   11ed8:	ble	11f20 <__assert_fail@plt+0xe38>
   11edc:	ldr	r1, [fp, #-12]
   11ee0:	movw	r0, #10
   11ee4:	bl	10f14 <fputc_unlocked@plt>
   11ee8:	cmn	r0, #1
   11eec:	bne	11f20 <__assert_fail@plt+0xe38>
   11ef0:	bl	11010 <__errno_location@plt>
   11ef4:	ldr	r1, [r0]
   11ef8:	movw	r0, #61784	; 0xf158
   11efc:	movt	r0, #1
   11f00:	str	r1, [sp, #16]
   11f04:	bl	10fe0 <gettext@plt>
   11f08:	movw	r1, #1
   11f0c:	str	r0, [sp, #12]
   11f10:	mov	r0, r1
   11f14:	ldr	r1, [sp, #16]
   11f18:	ldr	r2, [sp, #12]
   11f1c:	bl	10f80 <error@plt>
   11f20:	ldr	r0, [fp, #-4]
   11f24:	bl	10f68 <ferror_unlocked@plt>
   11f28:	cmp	r0, #0
   11f2c:	beq	11f60 <__assert_fail@plt+0xe78>
   11f30:	bl	11010 <__errno_location@plt>
   11f34:	ldr	r1, [r0]
   11f38:	movw	r0, #61773	; 0xf14d
   11f3c:	movt	r0, #1
   11f40:	str	r1, [sp, #8]
   11f44:	bl	10fe0 <gettext@plt>
   11f48:	movw	r1, #1
   11f4c:	str	r0, [sp, #4]
   11f50:	mov	r0, r1
   11f54:	ldr	r1, [sp, #8]
   11f58:	ldr	r2, [sp, #4]
   11f5c:	bl	10f80 <error@plt>
   11f60:	ldr	r0, [fp, #-4]
   11f64:	ldr	r1, [fp, #-8]
   11f68:	bl	11f74 <__assert_fail@plt+0xe8c>
   11f6c:	mov	sp, fp
   11f70:	pop	{fp, pc}
   11f74:	push	{fp, lr}
   11f78:	mov	fp, sp
   11f7c:	sub	sp, sp, #24
   11f80:	str	r0, [fp, #-4]
   11f84:	str	r1, [fp, #-8]
   11f88:	ldr	r0, [fp, #-4]
   11f8c:	bl	141f8 <__assert_fail@plt+0x3110>
   11f90:	cmp	r0, #0
   11f94:	beq	12020 <__assert_fail@plt+0xf38>
   11f98:	ldr	r0, [fp, #-8]
   11f9c:	movw	r1, #62357	; 0xf395
   11fa0:	movt	r1, #1
   11fa4:	bl	10e90 <strcmp@plt>
   11fa8:	cmp	r0, #0
   11fac:	bne	11fe0 <__assert_fail@plt+0xef8>
   11fb0:	bl	11010 <__errno_location@plt>
   11fb4:	ldr	r1, [r0]
   11fb8:	movw	r0, #61810	; 0xf172
   11fbc:	movt	r0, #1
   11fc0:	str	r1, [sp, #12]
   11fc4:	bl	10fe0 <gettext@plt>
   11fc8:	movw	r1, #1
   11fcc:	str	r0, [sp, #8]
   11fd0:	mov	r0, r1
   11fd4:	ldr	r1, [sp, #12]
   11fd8:	ldr	r2, [sp, #8]
   11fdc:	bl	10f80 <error@plt>
   11fe0:	bl	11010 <__errno_location@plt>
   11fe4:	ldr	r1, [r0]
   11fe8:	ldr	r2, [fp, #-8]
   11fec:	movw	r0, #0
   11ff0:	movw	lr, #3
   11ff4:	str	r1, [sp, #4]
   11ff8:	mov	r1, lr
   11ffc:	bl	16acc <__assert_fail@plt+0x59e4>
   12000:	movw	r1, #1
   12004:	str	r0, [sp]
   12008:	mov	r0, r1
   1200c:	ldr	r1, [sp, #4]
   12010:	movw	r2, #61220	; 0xef24
   12014:	movt	r2, #1
   12018:	ldr	r3, [sp]
   1201c:	bl	10f80 <error@plt>
   12020:	movw	r0, #0
   12024:	bl	10fd4 <exit@plt>
   12028:	push	{fp, lr}
   1202c:	mov	fp, sp
   12030:	sub	sp, sp, #56	; 0x38
   12034:	ldr	ip, [fp, #8]
   12038:	str	r0, [fp, #-4]
   1203c:	str	r1, [fp, #-8]
   12040:	str	r2, [fp, #-12]
   12044:	str	r3, [fp, #-16]
   12048:	ldr	r0, [fp, #-12]
   1204c:	cmp	r0, #0
   12050:	str	ip, [sp, #28]
   12054:	bne	120b4 <__assert_fail@plt+0xfcc>
   12058:	ldr	r0, [fp, #-4]
   1205c:	ldr	r2, [fp, #-8]
   12060:	movw	r1, #340	; 0x154
   12064:	movt	r1, #3
   12068:	ldr	r3, [r1]
   1206c:	movw	r1, #1
   12070:	bl	10efc <fwrite_unlocked@plt>
   12074:	ldr	r1, [fp, #-8]
   12078:	cmp	r0, r1
   1207c:	bcs	120b0 <__assert_fail@plt+0xfc8>
   12080:	bl	11010 <__errno_location@plt>
   12084:	ldr	r1, [r0]
   12088:	movw	r0, #61784	; 0xf158
   1208c:	movt	r0, #1
   12090:	str	r1, [sp, #24]
   12094:	bl	10fe0 <gettext@plt>
   12098:	movw	r1, #1
   1209c:	str	r0, [sp, #20]
   120a0:	mov	r0, r1
   120a4:	ldr	r1, [sp, #24]
   120a8:	ldr	r2, [sp, #20]
   120ac:	bl	10f80 <error@plt>
   120b0:	b	1220c <__assert_fail@plt+0x1124>
   120b4:	movw	r0, #0
   120b8:	str	r0, [fp, #-20]	; 0xffffffec
   120bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   120c0:	ldr	r1, [fp, #-8]
   120c4:	cmp	r0, r1
   120c8:	bge	12208 <__assert_fail@plt+0x1120>
   120cc:	ldr	r0, [fp, #-12]
   120d0:	ldr	r1, [fp, #-16]
   120d4:	ldr	r1, [r1]
   120d8:	sub	r0, r0, r1
   120dc:	ldr	r1, [fp, #-8]
   120e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   120e4:	sub	r1, r1, r2
   120e8:	cmp	r0, r1
   120ec:	bge	12108 <__assert_fail@plt+0x1020>
   120f0:	ldr	r0, [fp, #-12]
   120f4:	ldr	r1, [fp, #-16]
   120f8:	ldr	r1, [r1]
   120fc:	sub	r0, r0, r1
   12100:	str	r0, [sp, #16]
   12104:	b	12118 <__assert_fail@plt+0x1030>
   12108:	ldr	r0, [fp, #-8]
   1210c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12110:	sub	r0, r0, r1
   12114:	str	r0, [sp, #16]
   12118:	ldr	r0, [sp, #16]
   1211c:	str	r0, [fp, #-24]	; 0xffffffe8
   12120:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12124:	cmp	r0, #0
   12128:	bne	12180 <__assert_fail@plt+0x1098>
   1212c:	ldr	r1, [fp, #8]
   12130:	movw	r0, #10
   12134:	bl	10f14 <fputc_unlocked@plt>
   12138:	cmn	r0, #1
   1213c:	bne	12170 <__assert_fail@plt+0x1088>
   12140:	bl	11010 <__errno_location@plt>
   12144:	ldr	r1, [r0]
   12148:	movw	r0, #61784	; 0xf158
   1214c:	movt	r0, #1
   12150:	str	r1, [sp, #12]
   12154:	bl	10fe0 <gettext@plt>
   12158:	movw	r1, #1
   1215c:	str	r0, [sp, #8]
   12160:	mov	r0, r1
   12164:	ldr	r1, [sp, #12]
   12168:	ldr	r2, [sp, #8]
   1216c:	bl	10f80 <error@plt>
   12170:	ldr	r0, [fp, #-16]
   12174:	movw	r1, #0
   12178:	str	r1, [r0]
   1217c:	b	12204 <__assert_fail@plt+0x111c>
   12180:	ldr	r0, [fp, #-4]
   12184:	ldr	r1, [fp, #-20]	; 0xffffffec
   12188:	add	r0, r0, r1
   1218c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12190:	movw	r1, #340	; 0x154
   12194:	movt	r1, #3
   12198:	ldr	r3, [r1]
   1219c:	movw	r1, #1
   121a0:	bl	10efc <fwrite_unlocked@plt>
   121a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   121a8:	cmp	r0, r1
   121ac:	bcs	121e0 <__assert_fail@plt+0x10f8>
   121b0:	bl	11010 <__errno_location@plt>
   121b4:	ldr	r1, [r0]
   121b8:	movw	r0, #61784	; 0xf158
   121bc:	movt	r0, #1
   121c0:	str	r1, [sp, #4]
   121c4:	bl	10fe0 <gettext@plt>
   121c8:	movw	r1, #1
   121cc:	str	r0, [sp]
   121d0:	mov	r0, r1
   121d4:	ldr	r1, [sp, #4]
   121d8:	ldr	r2, [sp]
   121dc:	bl	10f80 <error@plt>
   121e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   121e4:	ldr	r1, [fp, #-16]
   121e8:	ldr	r2, [r1]
   121ec:	add	r0, r2, r0
   121f0:	str	r0, [r1]
   121f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   121f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   121fc:	add	r0, r1, r0
   12200:	str	r0, [fp, #-20]	; 0xffffffec
   12204:	b	120bc <__assert_fail@plt+0xfd4>
   12208:	b	1220c <__assert_fail@plt+0x1124>
   1220c:	mov	sp, fp
   12210:	pop	{fp, pc}
   12214:	push	{fp, lr}
   12218:	mov	fp, sp
   1221c:	sub	sp, sp, #80	; 0x50
   12220:	str	r0, [fp, #-4]
   12224:	str	r1, [fp, #-8]
   12228:	str	r2, [fp, #-12]
   1222c:	str	r3, [fp, #-16]
   12230:	ldr	r0, [fp, #-8]
   12234:	cmp	r0, #0
   12238:	movw	r0, #0
   1223c:	str	r0, [fp, #-20]	; 0xffffffec
   12240:	beq	12258 <__assert_fail@plt+0x1170>
   12244:	ldr	r0, [fp, #-16]
   12248:	cmp	r0, #0
   1224c:	movw	r0, #0
   12250:	movne	r0, #1
   12254:	str	r0, [fp, #-20]	; 0xffffffec
   12258:	ldr	r0, [fp, #-20]	; 0xffffffec
   1225c:	tst	r0, #1
   12260:	beq	12750 <__assert_fail@plt+0x1668>
   12264:	ldr	r0, [fp, #-4]
   12268:	ldrb	r0, [r0]
   1226c:	bl	12770 <__assert_fail@plt+0x1688>
   12270:	and	r0, r0, #255	; 0xff
   12274:	asr	r0, r0, #3
   12278:	and	r0, r0, #31
   1227c:	movw	lr, #62003	; 0xf233
   12280:	movt	lr, #1
   12284:	add	r0, lr, r0
   12288:	ldrb	r0, [r0]
   1228c:	ldr	lr, [fp, #-12]
   12290:	add	r1, lr, #1
   12294:	str	r1, [fp, #-12]
   12298:	strb	r0, [lr]
   1229c:	ldr	r0, [fp, #-16]
   122a0:	mvn	r1, #0
   122a4:	add	r0, r0, r1
   122a8:	str	r0, [fp, #-16]
   122ac:	cmp	r0, #0
   122b0:	bne	122b8 <__assert_fail@plt+0x11d0>
   122b4:	b	12750 <__assert_fail@plt+0x1668>
   122b8:	ldr	r0, [fp, #-4]
   122bc:	ldrb	r0, [r0]
   122c0:	bl	12770 <__assert_fail@plt+0x1688>
   122c4:	and	r0, r0, #255	; 0xff
   122c8:	lsl	r0, r0, #2
   122cc:	ldr	lr, [fp, #-8]
   122d0:	mvn	r1, #0
   122d4:	add	r1, lr, r1
   122d8:	str	r1, [fp, #-8]
   122dc:	cmp	r1, #0
   122e0:	str	r0, [fp, #-24]	; 0xffffffe8
   122e4:	beq	12304 <__assert_fail@plt+0x121c>
   122e8:	ldr	r0, [fp, #-4]
   122ec:	ldrb	r0, [r0, #1]
   122f0:	bl	12770 <__assert_fail@plt+0x1688>
   122f4:	and	r0, r0, #255	; 0xff
   122f8:	asr	r0, r0, #6
   122fc:	str	r0, [fp, #-28]	; 0xffffffe4
   12300:	b	12310 <__assert_fail@plt+0x1228>
   12304:	movw	r0, #0
   12308:	str	r0, [fp, #-28]	; 0xffffffe4
   1230c:	b	12310 <__assert_fail@plt+0x1228>
   12310:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12314:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12318:	add	r0, r1, r0
   1231c:	and	r0, r0, #31
   12320:	movw	r2, #62003	; 0xf233
   12324:	movt	r2, #1
   12328:	add	r0, r2, r0
   1232c:	ldrb	r0, [r0]
   12330:	ldr	r2, [fp, #-12]
   12334:	add	r3, r2, #1
   12338:	str	r3, [fp, #-12]
   1233c:	strb	r0, [r2]
   12340:	ldr	r0, [fp, #-16]
   12344:	mvn	r2, #0
   12348:	add	r0, r0, r2
   1234c:	str	r0, [fp, #-16]
   12350:	cmp	r0, #0
   12354:	bne	1235c <__assert_fail@plt+0x1274>
   12358:	b	12750 <__assert_fail@plt+0x1668>
   1235c:	ldr	r0, [fp, #-8]
   12360:	cmp	r0, #0
   12364:	beq	12398 <__assert_fail@plt+0x12b0>
   12368:	ldr	r0, [fp, #-4]
   1236c:	ldrb	r0, [r0, #1]
   12370:	bl	12770 <__assert_fail@plt+0x1688>
   12374:	and	r0, r0, #255	; 0xff
   12378:	asr	r0, r0, #1
   1237c:	and	r0, r0, #31
   12380:	movw	lr, #62003	; 0xf233
   12384:	movt	lr, #1
   12388:	add	r0, lr, r0
   1238c:	ldrb	r0, [r0]
   12390:	str	r0, [fp, #-32]	; 0xffffffe0
   12394:	b	123a4 <__assert_fail@plt+0x12bc>
   12398:	movw	r0, #61	; 0x3d
   1239c:	str	r0, [fp, #-32]	; 0xffffffe0
   123a0:	b	123a4 <__assert_fail@plt+0x12bc>
   123a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   123a8:	ldr	r1, [fp, #-12]
   123ac:	add	r2, r1, #1
   123b0:	str	r2, [fp, #-12]
   123b4:	strb	r0, [r1]
   123b8:	ldr	r0, [fp, #-16]
   123bc:	mvn	r1, #0
   123c0:	add	r0, r0, r1
   123c4:	str	r0, [fp, #-16]
   123c8:	cmp	r0, #0
   123cc:	bne	123d4 <__assert_fail@plt+0x12ec>
   123d0:	b	12750 <__assert_fail@plt+0x1668>
   123d4:	ldr	r0, [fp, #-8]
   123d8:	cmp	r0, #0
   123dc:	beq	12460 <__assert_fail@plt+0x1378>
   123e0:	ldr	r0, [fp, #-4]
   123e4:	ldrb	r0, [r0, #1]
   123e8:	bl	12770 <__assert_fail@plt+0x1688>
   123ec:	and	r0, r0, #255	; 0xff
   123f0:	lsl	r0, r0, #4
   123f4:	ldr	lr, [fp, #-8]
   123f8:	mvn	r1, #0
   123fc:	add	r1, lr, r1
   12400:	str	r1, [fp, #-8]
   12404:	cmp	r1, #0
   12408:	str	r0, [fp, #-36]	; 0xffffffdc
   1240c:	beq	1242c <__assert_fail@plt+0x1344>
   12410:	ldr	r0, [fp, #-4]
   12414:	ldrb	r0, [r0, #2]
   12418:	bl	12770 <__assert_fail@plt+0x1688>
   1241c:	and	r0, r0, #255	; 0xff
   12420:	asr	r0, r0, #4
   12424:	str	r0, [sp, #40]	; 0x28
   12428:	b	12438 <__assert_fail@plt+0x1350>
   1242c:	movw	r0, #0
   12430:	str	r0, [sp, #40]	; 0x28
   12434:	b	12438 <__assert_fail@plt+0x1350>
   12438:	ldr	r0, [sp, #40]	; 0x28
   1243c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12440:	add	r0, r1, r0
   12444:	and	r0, r0, #31
   12448:	movw	r2, #62003	; 0xf233
   1244c:	movt	r2, #1
   12450:	add	r0, r2, r0
   12454:	ldrb	r0, [r0]
   12458:	str	r0, [sp, #36]	; 0x24
   1245c:	b	1246c <__assert_fail@plt+0x1384>
   12460:	movw	r0, #61	; 0x3d
   12464:	str	r0, [sp, #36]	; 0x24
   12468:	b	1246c <__assert_fail@plt+0x1384>
   1246c:	ldr	r0, [sp, #36]	; 0x24
   12470:	ldr	r1, [fp, #-12]
   12474:	add	r2, r1, #1
   12478:	str	r2, [fp, #-12]
   1247c:	strb	r0, [r1]
   12480:	ldr	r0, [fp, #-16]
   12484:	mvn	r1, #0
   12488:	add	r0, r0, r1
   1248c:	str	r0, [fp, #-16]
   12490:	cmp	r0, #0
   12494:	bne	1249c <__assert_fail@plt+0x13b4>
   12498:	b	12750 <__assert_fail@plt+0x1668>
   1249c:	ldr	r0, [fp, #-8]
   124a0:	cmp	r0, #0
   124a4:	beq	12528 <__assert_fail@plt+0x1440>
   124a8:	ldr	r0, [fp, #-4]
   124ac:	ldrb	r0, [r0, #2]
   124b0:	bl	12770 <__assert_fail@plt+0x1688>
   124b4:	and	r0, r0, #255	; 0xff
   124b8:	lsl	r0, r0, #1
   124bc:	ldr	lr, [fp, #-8]
   124c0:	mvn	r1, #0
   124c4:	add	r1, lr, r1
   124c8:	str	r1, [fp, #-8]
   124cc:	cmp	r1, #0
   124d0:	str	r0, [sp, #32]
   124d4:	beq	124f4 <__assert_fail@plt+0x140c>
   124d8:	ldr	r0, [fp, #-4]
   124dc:	ldrb	r0, [r0, #3]
   124e0:	bl	12770 <__assert_fail@plt+0x1688>
   124e4:	and	r0, r0, #255	; 0xff
   124e8:	asr	r0, r0, #7
   124ec:	str	r0, [sp, #28]
   124f0:	b	12500 <__assert_fail@plt+0x1418>
   124f4:	movw	r0, #0
   124f8:	str	r0, [sp, #28]
   124fc:	b	12500 <__assert_fail@plt+0x1418>
   12500:	ldr	r0, [sp, #28]
   12504:	ldr	r1, [sp, #32]
   12508:	add	r0, r1, r0
   1250c:	and	r0, r0, #31
   12510:	movw	r2, #62003	; 0xf233
   12514:	movt	r2, #1
   12518:	add	r0, r2, r0
   1251c:	ldrb	r0, [r0]
   12520:	str	r0, [sp, #24]
   12524:	b	12534 <__assert_fail@plt+0x144c>
   12528:	movw	r0, #61	; 0x3d
   1252c:	str	r0, [sp, #24]
   12530:	b	12534 <__assert_fail@plt+0x144c>
   12534:	ldr	r0, [sp, #24]
   12538:	ldr	r1, [fp, #-12]
   1253c:	add	r2, r1, #1
   12540:	str	r2, [fp, #-12]
   12544:	strb	r0, [r1]
   12548:	ldr	r0, [fp, #-16]
   1254c:	mvn	r1, #0
   12550:	add	r0, r0, r1
   12554:	str	r0, [fp, #-16]
   12558:	cmp	r0, #0
   1255c:	bne	12564 <__assert_fail@plt+0x147c>
   12560:	b	12750 <__assert_fail@plt+0x1668>
   12564:	ldr	r0, [fp, #-8]
   12568:	cmp	r0, #0
   1256c:	beq	125a0 <__assert_fail@plt+0x14b8>
   12570:	ldr	r0, [fp, #-4]
   12574:	ldrb	r0, [r0, #3]
   12578:	bl	12770 <__assert_fail@plt+0x1688>
   1257c:	and	r0, r0, #255	; 0xff
   12580:	asr	r0, r0, #2
   12584:	and	r0, r0, #31
   12588:	movw	lr, #62003	; 0xf233
   1258c:	movt	lr, #1
   12590:	add	r0, lr, r0
   12594:	ldrb	r0, [r0]
   12598:	str	r0, [sp, #20]
   1259c:	b	125ac <__assert_fail@plt+0x14c4>
   125a0:	movw	r0, #61	; 0x3d
   125a4:	str	r0, [sp, #20]
   125a8:	b	125ac <__assert_fail@plt+0x14c4>
   125ac:	ldr	r0, [sp, #20]
   125b0:	ldr	r1, [fp, #-12]
   125b4:	add	r2, r1, #1
   125b8:	str	r2, [fp, #-12]
   125bc:	strb	r0, [r1]
   125c0:	ldr	r0, [fp, #-16]
   125c4:	mvn	r1, #0
   125c8:	add	r0, r0, r1
   125cc:	str	r0, [fp, #-16]
   125d0:	cmp	r0, #0
   125d4:	bne	125dc <__assert_fail@plt+0x14f4>
   125d8:	b	12750 <__assert_fail@plt+0x1668>
   125dc:	ldr	r0, [fp, #-8]
   125e0:	cmp	r0, #0
   125e4:	beq	12668 <__assert_fail@plt+0x1580>
   125e8:	ldr	r0, [fp, #-4]
   125ec:	ldrb	r0, [r0, #3]
   125f0:	bl	12770 <__assert_fail@plt+0x1688>
   125f4:	and	r0, r0, #255	; 0xff
   125f8:	lsl	r0, r0, #3
   125fc:	ldr	lr, [fp, #-8]
   12600:	mvn	r1, #0
   12604:	add	r1, lr, r1
   12608:	str	r1, [fp, #-8]
   1260c:	cmp	r1, #0
   12610:	str	r0, [sp, #16]
   12614:	beq	12634 <__assert_fail@plt+0x154c>
   12618:	ldr	r0, [fp, #-4]
   1261c:	ldrb	r0, [r0, #4]
   12620:	bl	12770 <__assert_fail@plt+0x1688>
   12624:	and	r0, r0, #255	; 0xff
   12628:	asr	r0, r0, #5
   1262c:	str	r0, [sp, #12]
   12630:	b	12640 <__assert_fail@plt+0x1558>
   12634:	movw	r0, #0
   12638:	str	r0, [sp, #12]
   1263c:	b	12640 <__assert_fail@plt+0x1558>
   12640:	ldr	r0, [sp, #12]
   12644:	ldr	r1, [sp, #16]
   12648:	add	r0, r1, r0
   1264c:	and	r0, r0, #31
   12650:	movw	r2, #62003	; 0xf233
   12654:	movt	r2, #1
   12658:	add	r0, r2, r0
   1265c:	ldrb	r0, [r0]
   12660:	str	r0, [sp, #8]
   12664:	b	12674 <__assert_fail@plt+0x158c>
   12668:	movw	r0, #61	; 0x3d
   1266c:	str	r0, [sp, #8]
   12670:	b	12674 <__assert_fail@plt+0x158c>
   12674:	ldr	r0, [sp, #8]
   12678:	ldr	r1, [fp, #-12]
   1267c:	add	r2, r1, #1
   12680:	str	r2, [fp, #-12]
   12684:	strb	r0, [r1]
   12688:	ldr	r0, [fp, #-16]
   1268c:	mvn	r1, #0
   12690:	add	r0, r0, r1
   12694:	str	r0, [fp, #-16]
   12698:	cmp	r0, #0
   1269c:	bne	126a4 <__assert_fail@plt+0x15bc>
   126a0:	b	12750 <__assert_fail@plt+0x1668>
   126a4:	ldr	r0, [fp, #-8]
   126a8:	cmp	r0, #0
   126ac:	beq	126dc <__assert_fail@plt+0x15f4>
   126b0:	ldr	r0, [fp, #-4]
   126b4:	ldrb	r0, [r0, #4]
   126b8:	bl	12770 <__assert_fail@plt+0x1688>
   126bc:	and	r0, r0, #255	; 0xff
   126c0:	and	r0, r0, #31
   126c4:	movw	lr, #62003	; 0xf233
   126c8:	movt	lr, #1
   126cc:	add	r0, lr, r0
   126d0:	ldrb	r0, [r0]
   126d4:	str	r0, [sp, #4]
   126d8:	b	126e8 <__assert_fail@plt+0x1600>
   126dc:	movw	r0, #61	; 0x3d
   126e0:	str	r0, [sp, #4]
   126e4:	b	126e8 <__assert_fail@plt+0x1600>
   126e8:	ldr	r0, [sp, #4]
   126ec:	ldr	r1, [fp, #-12]
   126f0:	add	r2, r1, #1
   126f4:	str	r2, [fp, #-12]
   126f8:	strb	r0, [r1]
   126fc:	ldr	r0, [fp, #-16]
   12700:	mvn	r1, #0
   12704:	add	r0, r0, r1
   12708:	str	r0, [fp, #-16]
   1270c:	cmp	r0, #0
   12710:	bne	12718 <__assert_fail@plt+0x1630>
   12714:	b	12750 <__assert_fail@plt+0x1668>
   12718:	ldr	r0, [fp, #-8]
   1271c:	cmp	r0, #0
   12720:	beq	12734 <__assert_fail@plt+0x164c>
   12724:	ldr	r0, [fp, #-8]
   12728:	mvn	r1, #0
   1272c:	add	r0, r0, r1
   12730:	str	r0, [fp, #-8]
   12734:	ldr	r0, [fp, #-8]
   12738:	cmp	r0, #0
   1273c:	beq	1274c <__assert_fail@plt+0x1664>
   12740:	ldr	r0, [fp, #-4]
   12744:	add	r0, r0, #5
   12748:	str	r0, [fp, #-4]
   1274c:	b	12230 <__assert_fail@plt+0x1148>
   12750:	ldr	r0, [fp, #-16]
   12754:	cmp	r0, #0
   12758:	beq	12768 <__assert_fail@plt+0x1680>
   1275c:	ldr	r0, [fp, #-12]
   12760:	movw	r1, #0
   12764:	strb	r1, [r0]
   12768:	mov	sp, fp
   1276c:	pop	{fp, pc}
   12770:	sub	sp, sp, #4
   12774:	strb	r0, [sp, #3]
   12778:	ldrb	r0, [sp, #3]
   1277c:	add	sp, sp, #4
   12780:	bx	lr
   12784:	push	{fp, lr}
   12788:	mov	fp, sp
   1278c:	sub	sp, sp, #80	; 0x50
   12790:	str	r0, [fp, #-8]
   12794:	str	r1, [fp, #-12]
   12798:	str	r2, [fp, #-16]
   1279c:	ldr	r0, [fp, #-12]
   127a0:	movw	r1, #26215	; 0x6667
   127a4:	movt	r1, #26214	; 0x6666
   127a8:	smmul	r1, r0, r1
   127ac:	asr	r2, r1, #1
   127b0:	add	r1, r2, r1, lsr #31
   127b4:	add	r2, r1, r1, lsl #2
   127b8:	sub	r0, r0, r2
   127bc:	cmp	r0, #0
   127c0:	movw	r0, #0
   127c4:	movne	r0, #1
   127c8:	and	r0, r0, #1
   127cc:	add	r0, r1, r0
   127d0:	str	r0, [fp, #-20]	; 0xffffffec
   127d4:	b	12a40 <__assert_fail@plt+0x1958>
   127d8:	b	127dc <__assert_fail@plt+0x16f4>
   127dc:	b	12888 <__assert_fail@plt+0x17a0>
   127e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   127e4:	cmp	r0, #0
   127e8:	bge	1281c <__assert_fail@plt+0x1734>
   127ec:	b	127f0 <__assert_fail@plt+0x1708>
   127f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   127f4:	cmp	r0, #15
   127f8:	blt	128e8 <__assert_fail@plt+0x1800>
   127fc:	b	128fc <__assert_fail@plt+0x1814>
   12800:	ldr	r0, [fp, #-20]	; 0xffffffec
   12804:	mvn	r1, #0
   12808:	sub	r0, r1, r0
   1280c:	mvn	r1, #14
   12810:	cmp	r1, r0
   12814:	ble	128e8 <__assert_fail@plt+0x1800>
   12818:	b	128fc <__assert_fail@plt+0x1814>
   1281c:	b	12820 <__assert_fail@plt+0x1738>
   12820:	b	12874 <__assert_fail@plt+0x178c>
   12824:	b	12874 <__assert_fail@plt+0x178c>
   12828:	b	12874 <__assert_fail@plt+0x178c>
   1282c:	b	12830 <__assert_fail@plt+0x1748>
   12830:	ldr	r0, [fp, #-20]	; 0xffffffec
   12834:	mvn	r1, #127	; 0x7f
   12838:	add	r0, r0, r1
   1283c:	movw	r1, #0
   12840:	cmp	r1, r0
   12844:	blt	128e8 <__assert_fail@plt+0x1800>
   12848:	b	128fc <__assert_fail@plt+0x1814>
   1284c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12850:	movw	r1, #0
   12854:	cmp	r1, r0
   12858:	bge	128fc <__assert_fail@plt+0x1814>
   1285c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12860:	sub	r0, r0, #1
   12864:	movw	r1, #127	; 0x7f
   12868:	cmp	r1, r0
   1286c:	blt	128e8 <__assert_fail@plt+0x1800>
   12870:	b	128fc <__assert_fail@plt+0x1814>
   12874:	ldr	r0, [fp, #-20]	; 0xffffffec
   12878:	mvn	r1, #15
   1287c:	cmp	r1, r0
   12880:	blt	128e8 <__assert_fail@plt+0x1800>
   12884:	b	128fc <__assert_fail@plt+0x1814>
   12888:	b	12890 <__assert_fail@plt+0x17a8>
   1288c:	b	128fc <__assert_fail@plt+0x1814>
   12890:	ldr	r0, [fp, #-20]	; 0xffffffec
   12894:	cmp	r0, #0
   12898:	bge	128d8 <__assert_fail@plt+0x17f0>
   1289c:	b	128a0 <__assert_fail@plt+0x17b8>
   128a0:	b	128c0 <__assert_fail@plt+0x17d8>
   128a4:	b	128c0 <__assert_fail@plt+0x17d8>
   128a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   128ac:	cmn	r0, #1
   128b0:	bne	128c0 <__assert_fail@plt+0x17d8>
   128b4:	b	128b8 <__assert_fail@plt+0x17d0>
   128b8:	b	128fc <__assert_fail@plt+0x1814>
   128bc:	b	128fc <__assert_fail@plt+0x1814>
   128c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   128c4:	mvn	r1, #127	; 0x7f
   128c8:	sdiv	r0, r1, r0
   128cc:	cmp	r0, #8
   128d0:	blt	128e8 <__assert_fail@plt+0x1800>
   128d4:	b	128fc <__assert_fail@plt+0x1814>
   128d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   128dc:	movw	r1, #15
   128e0:	cmp	r1, r0
   128e4:	bge	128fc <__assert_fail@plt+0x1814>
   128e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   128ec:	lsl	r0, r0, #3
   128f0:	sxtb	r0, r0
   128f4:	str	r0, [fp, #-24]	; 0xffffffe8
   128f8:	b	133e8 <__assert_fail@plt+0x2300>
   128fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   12900:	lsl	r0, r0, #3
   12904:	sxtb	r0, r0
   12908:	str	r0, [fp, #-24]	; 0xffffffe8
   1290c:	b	133dc <__assert_fail@plt+0x22f4>
   12910:	b	129b8 <__assert_fail@plt+0x18d0>
   12914:	ldr	r0, [fp, #-20]	; 0xffffffec
   12918:	cmp	r0, #0
   1291c:	bge	12950 <__assert_fail@plt+0x1868>
   12920:	b	12924 <__assert_fail@plt+0x183c>
   12924:	ldr	r0, [fp, #-20]	; 0xffffffec
   12928:	cmp	r0, #31
   1292c:	blt	12a18 <__assert_fail@plt+0x1930>
   12930:	b	12a2c <__assert_fail@plt+0x1944>
   12934:	ldr	r0, [fp, #-20]	; 0xffffffec
   12938:	mvn	r1, #0
   1293c:	sub	r0, r1, r0
   12940:	mvn	r1, #30
   12944:	cmp	r1, r0
   12948:	ble	12a18 <__assert_fail@plt+0x1930>
   1294c:	b	12a2c <__assert_fail@plt+0x1944>
   12950:	b	12954 <__assert_fail@plt+0x186c>
   12954:	b	129a4 <__assert_fail@plt+0x18bc>
   12958:	b	129a4 <__assert_fail@plt+0x18bc>
   1295c:	b	129a4 <__assert_fail@plt+0x18bc>
   12960:	b	12964 <__assert_fail@plt+0x187c>
   12964:	ldr	r0, [fp, #-20]	; 0xffffffec
   12968:	add	r0, r0, #0
   1296c:	movw	r1, #0
   12970:	cmp	r1, r0
   12974:	blt	12a18 <__assert_fail@plt+0x1930>
   12978:	b	12a2c <__assert_fail@plt+0x1944>
   1297c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12980:	movw	r1, #0
   12984:	cmp	r1, r0
   12988:	bge	12a2c <__assert_fail@plt+0x1944>
   1298c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12990:	sub	r0, r0, #1
   12994:	mvn	r1, #0
   12998:	cmp	r1, r0
   1299c:	blt	12a18 <__assert_fail@plt+0x1930>
   129a0:	b	12a2c <__assert_fail@plt+0x1944>
   129a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   129a8:	movw	r1, #0
   129ac:	cmp	r1, r0
   129b0:	blt	12a18 <__assert_fail@plt+0x1930>
   129b4:	b	12a2c <__assert_fail@plt+0x1944>
   129b8:	b	129c0 <__assert_fail@plt+0x18d8>
   129bc:	b	12a2c <__assert_fail@plt+0x1944>
   129c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   129c4:	cmp	r0, #0
   129c8:	bge	12a08 <__assert_fail@plt+0x1920>
   129cc:	b	129d0 <__assert_fail@plt+0x18e8>
   129d0:	b	129f0 <__assert_fail@plt+0x1908>
   129d4:	b	129f0 <__assert_fail@plt+0x1908>
   129d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   129dc:	cmn	r0, #1
   129e0:	bne	129f0 <__assert_fail@plt+0x1908>
   129e4:	b	129e8 <__assert_fail@plt+0x1900>
   129e8:	b	12a18 <__assert_fail@plt+0x1930>
   129ec:	b	12a18 <__assert_fail@plt+0x1930>
   129f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   129f4:	movw	r1, #0
   129f8:	sdiv	r0, r1, r0
   129fc:	cmp	r0, #8
   12a00:	blt	12a18 <__assert_fail@plt+0x1930>
   12a04:	b	12a2c <__assert_fail@plt+0x1944>
   12a08:	ldr	r0, [fp, #-20]	; 0xffffffec
   12a0c:	movw	r1, #31
   12a10:	cmp	r1, r0
   12a14:	bge	12a2c <__assert_fail@plt+0x1944>
   12a18:	ldr	r0, [fp, #-20]	; 0xffffffec
   12a1c:	lsl	r0, r0, #3
   12a20:	and	r0, r0, #255	; 0xff
   12a24:	str	r0, [fp, #-24]	; 0xffffffe8
   12a28:	b	133e8 <__assert_fail@plt+0x2300>
   12a2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12a30:	lsl	r0, r0, #3
   12a34:	and	r0, r0, #255	; 0xff
   12a38:	str	r0, [fp, #-24]	; 0xffffffe8
   12a3c:	b	133dc <__assert_fail@plt+0x22f4>
   12a40:	b	12cb4 <__assert_fail@plt+0x1bcc>
   12a44:	b	12a48 <__assert_fail@plt+0x1960>
   12a48:	b	12af8 <__assert_fail@plt+0x1a10>
   12a4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12a50:	cmp	r0, #0
   12a54:	bge	12a8c <__assert_fail@plt+0x19a4>
   12a58:	b	12a5c <__assert_fail@plt+0x1974>
   12a5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12a60:	movw	r1, #4095	; 0xfff
   12a64:	cmp	r0, r1
   12a68:	blt	12b58 <__assert_fail@plt+0x1a70>
   12a6c:	b	12b6c <__assert_fail@plt+0x1a84>
   12a70:	ldr	r0, [pc, #2576]	; 13488 <__assert_fail@plt+0x23a0>
   12a74:	ldr	r1, [fp, #-20]	; 0xffffffec
   12a78:	mvn	r2, #0
   12a7c:	sub	r1, r2, r1
   12a80:	cmp	r0, r1
   12a84:	ble	12b58 <__assert_fail@plt+0x1a70>
   12a88:	b	12b6c <__assert_fail@plt+0x1a84>
   12a8c:	b	12a90 <__assert_fail@plt+0x19a8>
   12a90:	b	12ae4 <__assert_fail@plt+0x19fc>
   12a94:	b	12ae4 <__assert_fail@plt+0x19fc>
   12a98:	b	12ae4 <__assert_fail@plt+0x19fc>
   12a9c:	b	12aa0 <__assert_fail@plt+0x19b8>
   12aa0:	ldr	r0, [pc, #2520]	; 13480 <__assert_fail@plt+0x2398>
   12aa4:	ldr	r1, [fp, #-20]	; 0xffffffec
   12aa8:	add	r0, r1, r0
   12aac:	movw	r1, #0
   12ab0:	cmp	r1, r0
   12ab4:	blt	12b58 <__assert_fail@plt+0x1a70>
   12ab8:	b	12b6c <__assert_fail@plt+0x1a84>
   12abc:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ac0:	movw	r1, #0
   12ac4:	cmp	r1, r0
   12ac8:	bge	12b6c <__assert_fail@plt+0x1a84>
   12acc:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ad0:	sub	r0, r0, #1
   12ad4:	movw	r1, #32767	; 0x7fff
   12ad8:	cmp	r1, r0
   12adc:	blt	12b58 <__assert_fail@plt+0x1a70>
   12ae0:	b	12b6c <__assert_fail@plt+0x1a84>
   12ae4:	ldr	r0, [pc, #2456]	; 13484 <__assert_fail@plt+0x239c>
   12ae8:	ldr	r1, [fp, #-20]	; 0xffffffec
   12aec:	cmp	r0, r1
   12af0:	blt	12b58 <__assert_fail@plt+0x1a70>
   12af4:	b	12b6c <__assert_fail@plt+0x1a84>
   12af8:	b	12b00 <__assert_fail@plt+0x1a18>
   12afc:	b	12b6c <__assert_fail@plt+0x1a84>
   12b00:	ldr	r0, [fp, #-20]	; 0xffffffec
   12b04:	cmp	r0, #0
   12b08:	bge	12b48 <__assert_fail@plt+0x1a60>
   12b0c:	b	12b10 <__assert_fail@plt+0x1a28>
   12b10:	b	12b30 <__assert_fail@plt+0x1a48>
   12b14:	b	12b30 <__assert_fail@plt+0x1a48>
   12b18:	ldr	r0, [fp, #-20]	; 0xffffffec
   12b1c:	cmn	r0, #1
   12b20:	bne	12b30 <__assert_fail@plt+0x1a48>
   12b24:	b	12b28 <__assert_fail@plt+0x1a40>
   12b28:	b	12b6c <__assert_fail@plt+0x1a84>
   12b2c:	b	12b6c <__assert_fail@plt+0x1a84>
   12b30:	ldr	r0, [pc, #2376]	; 13480 <__assert_fail@plt+0x2398>
   12b34:	ldr	r1, [fp, #-20]	; 0xffffffec
   12b38:	sdiv	r0, r0, r1
   12b3c:	cmp	r0, #8
   12b40:	blt	12b58 <__assert_fail@plt+0x1a70>
   12b44:	b	12b6c <__assert_fail@plt+0x1a84>
   12b48:	ldr	r0, [fp, #-20]	; 0xffffffec
   12b4c:	movw	r1, #4095	; 0xfff
   12b50:	cmp	r1, r0
   12b54:	bge	12b6c <__assert_fail@plt+0x1a84>
   12b58:	ldr	r0, [fp, #-20]	; 0xffffffec
   12b5c:	lsl	r0, r0, #3
   12b60:	sxth	r0, r0
   12b64:	str	r0, [fp, #-24]	; 0xffffffe8
   12b68:	b	133e8 <__assert_fail@plt+0x2300>
   12b6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12b70:	lsl	r0, r0, #3
   12b74:	sxth	r0, r0
   12b78:	str	r0, [fp, #-24]	; 0xffffffe8
   12b7c:	b	133dc <__assert_fail@plt+0x22f4>
   12b80:	b	12c2c <__assert_fail@plt+0x1b44>
   12b84:	ldr	r0, [fp, #-20]	; 0xffffffec
   12b88:	cmp	r0, #0
   12b8c:	bge	12bc4 <__assert_fail@plt+0x1adc>
   12b90:	b	12b94 <__assert_fail@plt+0x1aac>
   12b94:	ldr	r0, [fp, #-20]	; 0xffffffec
   12b98:	movw	r1, #8191	; 0x1fff
   12b9c:	cmp	r0, r1
   12ba0:	blt	12c8c <__assert_fail@plt+0x1ba4>
   12ba4:	b	12ca0 <__assert_fail@plt+0x1bb8>
   12ba8:	ldr	r0, [pc, #2268]	; 1348c <__assert_fail@plt+0x23a4>
   12bac:	ldr	r1, [fp, #-20]	; 0xffffffec
   12bb0:	mvn	r2, #0
   12bb4:	sub	r1, r2, r1
   12bb8:	cmp	r0, r1
   12bbc:	ble	12c8c <__assert_fail@plt+0x1ba4>
   12bc0:	b	12ca0 <__assert_fail@plt+0x1bb8>
   12bc4:	b	12bc8 <__assert_fail@plt+0x1ae0>
   12bc8:	b	12c18 <__assert_fail@plt+0x1b30>
   12bcc:	b	12c18 <__assert_fail@plt+0x1b30>
   12bd0:	b	12c18 <__assert_fail@plt+0x1b30>
   12bd4:	b	12bd8 <__assert_fail@plt+0x1af0>
   12bd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   12bdc:	add	r0, r0, #0
   12be0:	movw	r1, #0
   12be4:	cmp	r1, r0
   12be8:	blt	12c8c <__assert_fail@plt+0x1ba4>
   12bec:	b	12ca0 <__assert_fail@plt+0x1bb8>
   12bf0:	ldr	r0, [fp, #-20]	; 0xffffffec
   12bf4:	movw	r1, #0
   12bf8:	cmp	r1, r0
   12bfc:	bge	12ca0 <__assert_fail@plt+0x1bb8>
   12c00:	ldr	r0, [fp, #-20]	; 0xffffffec
   12c04:	sub	r0, r0, #1
   12c08:	mvn	r1, #0
   12c0c:	cmp	r1, r0
   12c10:	blt	12c8c <__assert_fail@plt+0x1ba4>
   12c14:	b	12ca0 <__assert_fail@plt+0x1bb8>
   12c18:	ldr	r0, [fp, #-20]	; 0xffffffec
   12c1c:	movw	r1, #0
   12c20:	cmp	r1, r0
   12c24:	blt	12c8c <__assert_fail@plt+0x1ba4>
   12c28:	b	12ca0 <__assert_fail@plt+0x1bb8>
   12c2c:	b	12c34 <__assert_fail@plt+0x1b4c>
   12c30:	b	12ca0 <__assert_fail@plt+0x1bb8>
   12c34:	ldr	r0, [fp, #-20]	; 0xffffffec
   12c38:	cmp	r0, #0
   12c3c:	bge	12c7c <__assert_fail@plt+0x1b94>
   12c40:	b	12c44 <__assert_fail@plt+0x1b5c>
   12c44:	b	12c64 <__assert_fail@plt+0x1b7c>
   12c48:	b	12c64 <__assert_fail@plt+0x1b7c>
   12c4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12c50:	cmn	r0, #1
   12c54:	bne	12c64 <__assert_fail@plt+0x1b7c>
   12c58:	b	12c5c <__assert_fail@plt+0x1b74>
   12c5c:	b	12c8c <__assert_fail@plt+0x1ba4>
   12c60:	b	12c8c <__assert_fail@plt+0x1ba4>
   12c64:	ldr	r0, [fp, #-20]	; 0xffffffec
   12c68:	movw	r1, #0
   12c6c:	sdiv	r0, r1, r0
   12c70:	cmp	r0, #8
   12c74:	blt	12c8c <__assert_fail@plt+0x1ba4>
   12c78:	b	12ca0 <__assert_fail@plt+0x1bb8>
   12c7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12c80:	movw	r1, #8191	; 0x1fff
   12c84:	cmp	r1, r0
   12c88:	bge	12ca0 <__assert_fail@plt+0x1bb8>
   12c8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12c90:	lsl	r0, r0, #3
   12c94:	uxth	r0, r0
   12c98:	str	r0, [fp, #-24]	; 0xffffffe8
   12c9c:	b	133e8 <__assert_fail@plt+0x2300>
   12ca0:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ca4:	lsl	r0, r0, #3
   12ca8:	uxth	r0, r0
   12cac:	str	r0, [fp, #-24]	; 0xffffffe8
   12cb0:	b	133dc <__assert_fail@plt+0x22f4>
   12cb4:	b	12cb8 <__assert_fail@plt+0x1bd0>
   12cb8:	b	12cbc <__assert_fail@plt+0x1bd4>
   12cbc:	b	12d5c <__assert_fail@plt+0x1c74>
   12cc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   12cc4:	cmp	r0, #0
   12cc8:	bge	12d00 <__assert_fail@plt+0x1c18>
   12ccc:	b	12cd0 <__assert_fail@plt+0x1be8>
   12cd0:	ldr	r0, [pc, #1940]	; 1346c <__assert_fail@plt+0x2384>
   12cd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   12cd8:	cmp	r1, r0
   12cdc:	blt	12db0 <__assert_fail@plt+0x1cc8>
   12ce0:	b	12dc0 <__assert_fail@plt+0x1cd8>
   12ce4:	ldr	r0, [pc, #1936]	; 1347c <__assert_fail@plt+0x2394>
   12ce8:	ldr	r1, [fp, #-20]	; 0xffffffec
   12cec:	mvn	r2, #0
   12cf0:	sub	r1, r2, r1
   12cf4:	cmp	r0, r1
   12cf8:	ble	12db0 <__assert_fail@plt+0x1cc8>
   12cfc:	b	12dc0 <__assert_fail@plt+0x1cd8>
   12d00:	b	12d48 <__assert_fail@plt+0x1c60>
   12d04:	b	12d08 <__assert_fail@plt+0x1c20>
   12d08:	ldr	r0, [fp, #-20]	; 0xffffffec
   12d0c:	add	r0, r0, #-2147483648	; 0x80000000
   12d10:	movw	r1, #0
   12d14:	cmp	r1, r0
   12d18:	blt	12db0 <__assert_fail@plt+0x1cc8>
   12d1c:	b	12dc0 <__assert_fail@plt+0x1cd8>
   12d20:	ldr	r0, [fp, #-20]	; 0xffffffec
   12d24:	movw	r1, #0
   12d28:	cmp	r1, r0
   12d2c:	bge	12dc0 <__assert_fail@plt+0x1cd8>
   12d30:	ldr	r0, [pc, #1856]	; 13478 <__assert_fail@plt+0x2390>
   12d34:	ldr	r1, [fp, #-20]	; 0xffffffec
   12d38:	sub	r1, r1, #1
   12d3c:	cmp	r0, r1
   12d40:	blt	12db0 <__assert_fail@plt+0x1cc8>
   12d44:	b	12dc0 <__assert_fail@plt+0x1cd8>
   12d48:	ldr	r0, [pc, #1828]	; 13474 <__assert_fail@plt+0x238c>
   12d4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12d50:	cmp	r0, r1
   12d54:	blt	12db0 <__assert_fail@plt+0x1cc8>
   12d58:	b	12dc0 <__assert_fail@plt+0x1cd8>
   12d5c:	b	12d64 <__assert_fail@plt+0x1c7c>
   12d60:	b	12dc0 <__assert_fail@plt+0x1cd8>
   12d64:	ldr	r0, [fp, #-20]	; 0xffffffec
   12d68:	cmp	r0, #0
   12d6c:	bge	12da0 <__assert_fail@plt+0x1cb8>
   12d70:	ldr	r0, [fp, #-20]	; 0xffffffec
   12d74:	cmn	r0, #1
   12d78:	bne	12d88 <__assert_fail@plt+0x1ca0>
   12d7c:	b	12d80 <__assert_fail@plt+0x1c98>
   12d80:	b	12dc0 <__assert_fail@plt+0x1cd8>
   12d84:	b	12dc0 <__assert_fail@plt+0x1cd8>
   12d88:	ldr	r0, [pc, #1760]	; 13470 <__assert_fail@plt+0x2388>
   12d8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12d90:	sdiv	r0, r0, r1
   12d94:	cmp	r0, #8
   12d98:	blt	12db0 <__assert_fail@plt+0x1cc8>
   12d9c:	b	12dc0 <__assert_fail@plt+0x1cd8>
   12da0:	ldr	r0, [pc, #1732]	; 1346c <__assert_fail@plt+0x2384>
   12da4:	ldr	r1, [fp, #-20]	; 0xffffffec
   12da8:	cmp	r0, r1
   12dac:	bge	12dc0 <__assert_fail@plt+0x1cd8>
   12db0:	ldr	r0, [fp, #-20]	; 0xffffffec
   12db4:	lsl	r0, r0, #3
   12db8:	str	r0, [fp, #-24]	; 0xffffffe8
   12dbc:	b	133e8 <__assert_fail@plt+0x2300>
   12dc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   12dc4:	lsl	r0, r0, #3
   12dc8:	str	r0, [fp, #-24]	; 0xffffffe8
   12dcc:	b	133dc <__assert_fail@plt+0x22f4>
   12dd0:	b	12e7c <__assert_fail@plt+0x1d94>
   12dd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   12dd8:	cmp	r0, #0
   12ddc:	bge	12e14 <__assert_fail@plt+0x1d2c>
   12de0:	b	12df8 <__assert_fail@plt+0x1d10>
   12de4:	ldr	r0, [pc, #1660]	; 13468 <__assert_fail@plt+0x2380>
   12de8:	ldr	r1, [fp, #-20]	; 0xffffffec
   12dec:	cmp	r1, r0
   12df0:	bcc	12edc <__assert_fail@plt+0x1df4>
   12df4:	b	12eec <__assert_fail@plt+0x1e04>
   12df8:	ldr	r0, [fp, #-20]	; 0xffffffec
   12dfc:	mvn	r1, #0
   12e00:	sub	r0, r1, r0
   12e04:	movw	r1, #1
   12e08:	cmp	r1, r0
   12e0c:	bls	12edc <__assert_fail@plt+0x1df4>
   12e10:	b	12eec <__assert_fail@plt+0x1e04>
   12e14:	b	12e18 <__assert_fail@plt+0x1d30>
   12e18:	b	12e68 <__assert_fail@plt+0x1d80>
   12e1c:	b	12e68 <__assert_fail@plt+0x1d80>
   12e20:	b	12e68 <__assert_fail@plt+0x1d80>
   12e24:	b	12e28 <__assert_fail@plt+0x1d40>
   12e28:	ldr	r0, [fp, #-20]	; 0xffffffec
   12e2c:	add	r0, r0, #0
   12e30:	movw	r1, #0
   12e34:	cmp	r1, r0
   12e38:	blt	12edc <__assert_fail@plt+0x1df4>
   12e3c:	b	12eec <__assert_fail@plt+0x1e04>
   12e40:	ldr	r0, [fp, #-20]	; 0xffffffec
   12e44:	movw	r1, #0
   12e48:	cmp	r1, r0
   12e4c:	bge	12eec <__assert_fail@plt+0x1e04>
   12e50:	ldr	r0, [fp, #-20]	; 0xffffffec
   12e54:	sub	r0, r0, #1
   12e58:	mvn	r1, #0
   12e5c:	cmp	r1, r0
   12e60:	blt	12edc <__assert_fail@plt+0x1df4>
   12e64:	b	12eec <__assert_fail@plt+0x1e04>
   12e68:	ldr	r0, [fp, #-20]	; 0xffffffec
   12e6c:	movw	r1, #0
   12e70:	cmp	r1, r0
   12e74:	blt	12edc <__assert_fail@plt+0x1df4>
   12e78:	b	12eec <__assert_fail@plt+0x1e04>
   12e7c:	b	12e84 <__assert_fail@plt+0x1d9c>
   12e80:	b	12eec <__assert_fail@plt+0x1e04>
   12e84:	ldr	r0, [fp, #-20]	; 0xffffffec
   12e88:	cmp	r0, #0
   12e8c:	bge	12ecc <__assert_fail@plt+0x1de4>
   12e90:	b	12e94 <__assert_fail@plt+0x1dac>
   12e94:	b	12eb4 <__assert_fail@plt+0x1dcc>
   12e98:	b	12eb4 <__assert_fail@plt+0x1dcc>
   12e9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ea0:	cmn	r0, #1
   12ea4:	bne	12eb4 <__assert_fail@plt+0x1dcc>
   12ea8:	b	12eac <__assert_fail@plt+0x1dc4>
   12eac:	b	12edc <__assert_fail@plt+0x1df4>
   12eb0:	b	12edc <__assert_fail@plt+0x1df4>
   12eb4:	ldr	r0, [fp, #-20]	; 0xffffffec
   12eb8:	movw	r1, #0
   12ebc:	sdiv	r0, r1, r0
   12ec0:	cmp	r0, #8
   12ec4:	blt	12edc <__assert_fail@plt+0x1df4>
   12ec8:	b	12eec <__assert_fail@plt+0x1e04>
   12ecc:	ldr	r0, [pc, #1428]	; 13468 <__assert_fail@plt+0x2380>
   12ed0:	ldr	r1, [fp, #-20]	; 0xffffffec
   12ed4:	cmp	r0, r1
   12ed8:	bcs	12eec <__assert_fail@plt+0x1e04>
   12edc:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ee0:	lsl	r0, r0, #3
   12ee4:	str	r0, [fp, #-24]	; 0xffffffe8
   12ee8:	b	133e8 <__assert_fail@plt+0x2300>
   12eec:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ef0:	lsl	r0, r0, #3
   12ef4:	str	r0, [fp, #-24]	; 0xffffffe8
   12ef8:	b	133dc <__assert_fail@plt+0x22f4>
   12efc:	b	12f00 <__assert_fail@plt+0x1e18>
   12f00:	b	12f04 <__assert_fail@plt+0x1e1c>
   12f04:	b	12fa4 <__assert_fail@plt+0x1ebc>
   12f08:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f0c:	cmp	r0, #0
   12f10:	bge	12f48 <__assert_fail@plt+0x1e60>
   12f14:	b	12f18 <__assert_fail@plt+0x1e30>
   12f18:	ldr	r0, [pc, #1356]	; 1346c <__assert_fail@plt+0x2384>
   12f1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12f20:	cmp	r1, r0
   12f24:	blt	12ff8 <__assert_fail@plt+0x1f10>
   12f28:	b	13008 <__assert_fail@plt+0x1f20>
   12f2c:	ldr	r0, [pc, #1352]	; 1347c <__assert_fail@plt+0x2394>
   12f30:	ldr	r1, [fp, #-20]	; 0xffffffec
   12f34:	mvn	r2, #0
   12f38:	sub	r1, r2, r1
   12f3c:	cmp	r0, r1
   12f40:	ble	12ff8 <__assert_fail@plt+0x1f10>
   12f44:	b	13008 <__assert_fail@plt+0x1f20>
   12f48:	b	12f90 <__assert_fail@plt+0x1ea8>
   12f4c:	b	12f50 <__assert_fail@plt+0x1e68>
   12f50:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f54:	add	r0, r0, #-2147483648	; 0x80000000
   12f58:	movw	r1, #0
   12f5c:	cmp	r1, r0
   12f60:	blt	12ff8 <__assert_fail@plt+0x1f10>
   12f64:	b	13008 <__assert_fail@plt+0x1f20>
   12f68:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f6c:	movw	r1, #0
   12f70:	cmp	r1, r0
   12f74:	bge	13008 <__assert_fail@plt+0x1f20>
   12f78:	ldr	r0, [pc, #1272]	; 13478 <__assert_fail@plt+0x2390>
   12f7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12f80:	sub	r1, r1, #1
   12f84:	cmp	r0, r1
   12f88:	blt	12ff8 <__assert_fail@plt+0x1f10>
   12f8c:	b	13008 <__assert_fail@plt+0x1f20>
   12f90:	ldr	r0, [pc, #1244]	; 13474 <__assert_fail@plt+0x238c>
   12f94:	ldr	r1, [fp, #-20]	; 0xffffffec
   12f98:	cmp	r0, r1
   12f9c:	blt	12ff8 <__assert_fail@plt+0x1f10>
   12fa0:	b	13008 <__assert_fail@plt+0x1f20>
   12fa4:	b	12fac <__assert_fail@plt+0x1ec4>
   12fa8:	b	13008 <__assert_fail@plt+0x1f20>
   12fac:	ldr	r0, [fp, #-20]	; 0xffffffec
   12fb0:	cmp	r0, #0
   12fb4:	bge	12fe8 <__assert_fail@plt+0x1f00>
   12fb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   12fbc:	cmn	r0, #1
   12fc0:	bne	12fd0 <__assert_fail@plt+0x1ee8>
   12fc4:	b	12fc8 <__assert_fail@plt+0x1ee0>
   12fc8:	b	13008 <__assert_fail@plt+0x1f20>
   12fcc:	b	13008 <__assert_fail@plt+0x1f20>
   12fd0:	ldr	r0, [pc, #1176]	; 13470 <__assert_fail@plt+0x2388>
   12fd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   12fd8:	sdiv	r0, r0, r1
   12fdc:	cmp	r0, #8
   12fe0:	blt	12ff8 <__assert_fail@plt+0x1f10>
   12fe4:	b	13008 <__assert_fail@plt+0x1f20>
   12fe8:	ldr	r0, [pc, #1148]	; 1346c <__assert_fail@plt+0x2384>
   12fec:	ldr	r1, [fp, #-20]	; 0xffffffec
   12ff0:	cmp	r0, r1
   12ff4:	bge	13008 <__assert_fail@plt+0x1f20>
   12ff8:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ffc:	lsl	r0, r0, #3
   13000:	str	r0, [fp, #-24]	; 0xffffffe8
   13004:	b	133e8 <__assert_fail@plt+0x2300>
   13008:	ldr	r0, [fp, #-20]	; 0xffffffec
   1300c:	lsl	r0, r0, #3
   13010:	str	r0, [fp, #-24]	; 0xffffffe8
   13014:	b	133dc <__assert_fail@plt+0x22f4>
   13018:	b	130c4 <__assert_fail@plt+0x1fdc>
   1301c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13020:	cmp	r0, #0
   13024:	bge	1305c <__assert_fail@plt+0x1f74>
   13028:	b	13040 <__assert_fail@plt+0x1f58>
   1302c:	ldr	r0, [pc, #1076]	; 13468 <__assert_fail@plt+0x2380>
   13030:	ldr	r1, [fp, #-20]	; 0xffffffec
   13034:	cmp	r1, r0
   13038:	bcc	13124 <__assert_fail@plt+0x203c>
   1303c:	b	13134 <__assert_fail@plt+0x204c>
   13040:	ldr	r0, [fp, #-20]	; 0xffffffec
   13044:	mvn	r1, #0
   13048:	sub	r0, r1, r0
   1304c:	movw	r1, #1
   13050:	cmp	r1, r0
   13054:	bls	13124 <__assert_fail@plt+0x203c>
   13058:	b	13134 <__assert_fail@plt+0x204c>
   1305c:	b	13060 <__assert_fail@plt+0x1f78>
   13060:	b	130b0 <__assert_fail@plt+0x1fc8>
   13064:	b	130b0 <__assert_fail@plt+0x1fc8>
   13068:	b	130b0 <__assert_fail@plt+0x1fc8>
   1306c:	b	13070 <__assert_fail@plt+0x1f88>
   13070:	ldr	r0, [fp, #-20]	; 0xffffffec
   13074:	add	r0, r0, #0
   13078:	movw	r1, #0
   1307c:	cmp	r1, r0
   13080:	blt	13124 <__assert_fail@plt+0x203c>
   13084:	b	13134 <__assert_fail@plt+0x204c>
   13088:	ldr	r0, [fp, #-20]	; 0xffffffec
   1308c:	movw	r1, #0
   13090:	cmp	r1, r0
   13094:	bge	13134 <__assert_fail@plt+0x204c>
   13098:	ldr	r0, [fp, #-20]	; 0xffffffec
   1309c:	sub	r0, r0, #1
   130a0:	mvn	r1, #0
   130a4:	cmp	r1, r0
   130a8:	blt	13124 <__assert_fail@plt+0x203c>
   130ac:	b	13134 <__assert_fail@plt+0x204c>
   130b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   130b4:	movw	r1, #0
   130b8:	cmp	r1, r0
   130bc:	blt	13124 <__assert_fail@plt+0x203c>
   130c0:	b	13134 <__assert_fail@plt+0x204c>
   130c4:	b	130cc <__assert_fail@plt+0x1fe4>
   130c8:	b	13134 <__assert_fail@plt+0x204c>
   130cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   130d0:	cmp	r0, #0
   130d4:	bge	13114 <__assert_fail@plt+0x202c>
   130d8:	b	130dc <__assert_fail@plt+0x1ff4>
   130dc:	b	130fc <__assert_fail@plt+0x2014>
   130e0:	b	130fc <__assert_fail@plt+0x2014>
   130e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   130e8:	cmn	r0, #1
   130ec:	bne	130fc <__assert_fail@plt+0x2014>
   130f0:	b	130f4 <__assert_fail@plt+0x200c>
   130f4:	b	13124 <__assert_fail@plt+0x203c>
   130f8:	b	13124 <__assert_fail@plt+0x203c>
   130fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   13100:	movw	r1, #0
   13104:	sdiv	r0, r1, r0
   13108:	cmp	r0, #8
   1310c:	blt	13124 <__assert_fail@plt+0x203c>
   13110:	b	13134 <__assert_fail@plt+0x204c>
   13114:	ldr	r0, [pc, #844]	; 13468 <__assert_fail@plt+0x2380>
   13118:	ldr	r1, [fp, #-20]	; 0xffffffec
   1311c:	cmp	r0, r1
   13120:	bcs	13134 <__assert_fail@plt+0x204c>
   13124:	ldr	r0, [fp, #-20]	; 0xffffffec
   13128:	lsl	r0, r0, #3
   1312c:	str	r0, [fp, #-24]	; 0xffffffe8
   13130:	b	133e8 <__assert_fail@plt+0x2300>
   13134:	ldr	r0, [fp, #-20]	; 0xffffffec
   13138:	lsl	r0, r0, #3
   1313c:	str	r0, [fp, #-24]	; 0xffffffe8
   13140:	b	133dc <__assert_fail@plt+0x22f4>
   13144:	b	13148 <__assert_fail@plt+0x2060>
   13148:	b	13210 <__assert_fail@plt+0x2128>
   1314c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13150:	cmp	r0, #0
   13154:	bge	131a4 <__assert_fail@plt+0x20bc>
   13158:	b	1315c <__assert_fail@plt+0x2074>
   1315c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13160:	mvn	r1, #0
   13164:	subs	r1, r0, r1
   13168:	mvn	r2, #-268435456	; 0xf0000000
   1316c:	rscs	r0, r2, r0, asr #31
   13170:	str	r1, [fp, #-28]	; 0xffffffe4
   13174:	str	r0, [fp, #-32]	; 0xffffffe0
   13178:	blt	1328c <__assert_fail@plt+0x21a4>
   1317c:	b	1329c <__assert_fail@plt+0x21b4>
   13180:	ldr	r0, [fp, #-20]	; 0xffffffec
   13184:	mvn	r0, r0
   13188:	rsbs	r1, r0, #0
   1318c:	mov	r2, #-268435456	; 0xf0000000
   13190:	sbcs	r0, r2, r0, asr #31
   13194:	str	r1, [fp, #-36]	; 0xffffffdc
   13198:	str	r0, [sp, #40]	; 0x28
   1319c:	blt	1328c <__assert_fail@plt+0x21a4>
   131a0:	b	1329c <__assert_fail@plt+0x21b4>
   131a4:	b	131f0 <__assert_fail@plt+0x2108>
   131a8:	b	131ac <__assert_fail@plt+0x20c4>
   131ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   131b0:	mov	r1, #-2147483648	; 0x80000000
   131b4:	add	r1, r1, r0, asr #31
   131b8:	rsbs	r0, r0, #0
   131bc:	rscs	r1, r1, #0
   131c0:	str	r0, [sp, #36]	; 0x24
   131c4:	str	r1, [sp, #32]
   131c8:	blt	1328c <__assert_fail@plt+0x21a4>
   131cc:	b	1329c <__assert_fail@plt+0x21b4>
   131d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   131d4:	movw	r1, #0
   131d8:	cmp	r1, r0
   131dc:	bge	1329c <__assert_fail@plt+0x21b4>
   131e0:	mov	r0, #0
   131e4:	cmp	r0, #0
   131e8:	bne	1328c <__assert_fail@plt+0x21a4>
   131ec:	b	1329c <__assert_fail@plt+0x21b4>
   131f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   131f4:	rsbs	r1, r0, #0
   131f8:	mov	r2, #-268435456	; 0xf0000000
   131fc:	sbcs	r0, r2, r0, asr #31
   13200:	str	r1, [sp, #28]
   13204:	str	r0, [sp, #24]
   13208:	blt	1328c <__assert_fail@plt+0x21a4>
   1320c:	b	1329c <__assert_fail@plt+0x21b4>
   13210:	b	13218 <__assert_fail@plt+0x2130>
   13214:	b	1329c <__assert_fail@plt+0x21b4>
   13218:	ldr	r0, [fp, #-20]	; 0xffffffec
   1321c:	cmp	r0, #0
   13220:	bge	13278 <__assert_fail@plt+0x2190>
   13224:	ldr	r0, [fp, #-20]	; 0xffffffec
   13228:	cmn	r0, #1
   1322c:	bne	1323c <__assert_fail@plt+0x2154>
   13230:	b	13234 <__assert_fail@plt+0x214c>
   13234:	b	1329c <__assert_fail@plt+0x21b4>
   13238:	b	1329c <__assert_fail@plt+0x21b4>
   1323c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13240:	asr	r3, r0, #31
   13244:	mov	r1, #0
   13248:	mov	r2, #-2147483648	; 0x80000000
   1324c:	str	r0, [sp, #20]
   13250:	mov	r0, r1
   13254:	mov	r1, r2
   13258:	ldr	r2, [sp, #20]
   1325c:	bl	1e940 <__assert_fail@plt+0xd858>
   13260:	subs	r0, r0, #8
   13264:	sbcs	r1, r1, #0
   13268:	str	r0, [sp, #16]
   1326c:	str	r1, [sp, #12]
   13270:	blt	1328c <__assert_fail@plt+0x21a4>
   13274:	b	1329c <__assert_fail@plt+0x21b4>
   13278:	ldr	r0, [fp, #-20]	; 0xffffffec
   1327c:	asr	r0, r0, #31
   13280:	cmp	r0, #268435456	; 0x10000000
   13284:	blt	1329c <__assert_fail@plt+0x21b4>
   13288:	b	1328c <__assert_fail@plt+0x21a4>
   1328c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13290:	lsl	r0, r0, #3
   13294:	str	r0, [fp, #-24]	; 0xffffffe8
   13298:	b	133e8 <__assert_fail@plt+0x2300>
   1329c:	ldr	r0, [fp, #-20]	; 0xffffffec
   132a0:	lsl	r0, r0, #3
   132a4:	str	r0, [fp, #-24]	; 0xffffffe8
   132a8:	b	133dc <__assert_fail@plt+0x22f4>
   132ac:	b	1335c <__assert_fail@plt+0x2274>
   132b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   132b4:	cmp	r0, #0
   132b8:	bge	132f4 <__assert_fail@plt+0x220c>
   132bc:	b	132e4 <__assert_fail@plt+0x21fc>
   132c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   132c4:	mvn	r1, #0
   132c8:	subs	r1, r0, r1
   132cc:	mvn	r2, #-536870912	; 0xe0000000
   132d0:	rscs	r0, r2, r0, asr #31
   132d4:	str	r1, [sp, #8]
   132d8:	str	r0, [sp, #4]
   132dc:	bcc	133c0 <__assert_fail@plt+0x22d8>
   132e0:	b	133d0 <__assert_fail@plt+0x22e8>
   132e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   132e8:	cmn	r0, #1
   132ec:	bne	133c0 <__assert_fail@plt+0x22d8>
   132f0:	b	133d0 <__assert_fail@plt+0x22e8>
   132f4:	b	132f8 <__assert_fail@plt+0x2210>
   132f8:	b	13348 <__assert_fail@plt+0x2260>
   132fc:	b	13348 <__assert_fail@plt+0x2260>
   13300:	b	13348 <__assert_fail@plt+0x2260>
   13304:	b	13308 <__assert_fail@plt+0x2220>
   13308:	ldr	r0, [fp, #-20]	; 0xffffffec
   1330c:	add	r0, r0, #0
   13310:	movw	r1, #0
   13314:	cmp	r1, r0
   13318:	blt	133c0 <__assert_fail@plt+0x22d8>
   1331c:	b	133d0 <__assert_fail@plt+0x22e8>
   13320:	ldr	r0, [fp, #-20]	; 0xffffffec
   13324:	movw	r1, #0
   13328:	cmp	r1, r0
   1332c:	bge	133d0 <__assert_fail@plt+0x22e8>
   13330:	ldr	r0, [fp, #-20]	; 0xffffffec
   13334:	sub	r0, r0, #1
   13338:	mvn	r1, #0
   1333c:	cmp	r1, r0
   13340:	blt	133c0 <__assert_fail@plt+0x22d8>
   13344:	b	133d0 <__assert_fail@plt+0x22e8>
   13348:	ldr	r0, [fp, #-20]	; 0xffffffec
   1334c:	movw	r1, #0
   13350:	cmp	r1, r0
   13354:	blt	133c0 <__assert_fail@plt+0x22d8>
   13358:	b	133d0 <__assert_fail@plt+0x22e8>
   1335c:	b	13364 <__assert_fail@plt+0x227c>
   13360:	b	133d0 <__assert_fail@plt+0x22e8>
   13364:	ldr	r0, [fp, #-20]	; 0xffffffec
   13368:	cmp	r0, #0
   1336c:	bge	133ac <__assert_fail@plt+0x22c4>
   13370:	b	13374 <__assert_fail@plt+0x228c>
   13374:	b	13394 <__assert_fail@plt+0x22ac>
   13378:	b	13394 <__assert_fail@plt+0x22ac>
   1337c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13380:	cmn	r0, #1
   13384:	bne	13394 <__assert_fail@plt+0x22ac>
   13388:	b	1338c <__assert_fail@plt+0x22a4>
   1338c:	b	133c0 <__assert_fail@plt+0x22d8>
   13390:	b	133c0 <__assert_fail@plt+0x22d8>
   13394:	ldr	r0, [fp, #-20]	; 0xffffffec
   13398:	movw	r1, #0
   1339c:	sdiv	r0, r1, r0
   133a0:	cmp	r0, #8
   133a4:	blt	133c0 <__assert_fail@plt+0x22d8>
   133a8:	b	133d0 <__assert_fail@plt+0x22e8>
   133ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   133b0:	asr	r0, r0, #31
   133b4:	cmp	r0, #536870912	; 0x20000000
   133b8:	bcc	133d0 <__assert_fail@plt+0x22e8>
   133bc:	b	133c0 <__assert_fail@plt+0x22d8>
   133c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   133c4:	lsl	r0, r0, #3
   133c8:	str	r0, [fp, #-24]	; 0xffffffe8
   133cc:	b	133e8 <__assert_fail@plt+0x2300>
   133d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   133d4:	lsl	r0, r0, #3
   133d8:	str	r0, [fp, #-24]	; 0xffffffe8
   133dc:	ldr	r0, [fp, #-12]
   133e0:	cmp	r0, #0
   133e4:	bge	133fc <__assert_fail@plt+0x2314>
   133e8:	ldr	r0, [fp, #-16]
   133ec:	movw	r1, #0
   133f0:	str	r1, [r0]
   133f4:	str	r1, [fp, #-4]
   133f8:	b	1345c <__assert_fail@plt+0x2374>
   133fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13400:	add	r0, r0, #1
   13404:	str	r0, [fp, #-24]	; 0xffffffe8
   13408:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1340c:	bl	144fc <__assert_fail@plt+0x3414>
   13410:	ldr	lr, [fp, #-16]
   13414:	str	r0, [lr]
   13418:	ldr	r0, [fp, #-16]
   1341c:	ldr	r0, [r0]
   13420:	movw	lr, #0
   13424:	cmp	r0, lr
   13428:	bne	13438 <__assert_fail@plt+0x2350>
   1342c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13430:	str	r0, [fp, #-4]
   13434:	b	1345c <__assert_fail@plt+0x2374>
   13438:	ldr	r0, [fp, #-8]
   1343c:	ldr	r1, [fp, #-12]
   13440:	ldr	r2, [fp, #-16]
   13444:	ldr	r2, [r2]
   13448:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1344c:	bl	12214 <__assert_fail@plt+0x112c>
   13450:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13454:	sub	r0, r0, #1
   13458:	str	r0, [fp, #-4]
   1345c:	ldr	r0, [fp, #-4]
   13460:	mov	sp, fp
   13464:	pop	{fp, pc}
   13468:	svcne	0x00ffffff
   1346c:	svceq	0x00ffffff
   13470:	andhi	r0, r0, r0
   13474:			; <UNDEFINED> instruction: 0xf0000000
   13478:	svcvc	0x00ffffff
   1347c:			; <UNDEFINED> instruction: 0xf0000001
   13480:			; <UNDEFINED> instruction: 0xffff8000
   13484:			; <UNDEFINED> instruction: 0xfffff000
   13488:			; <UNDEFINED> instruction: 0xfffff001
   1348c:			; <UNDEFINED> instruction: 0xffffe001
   13490:	push	{fp, lr}
   13494:	mov	fp, sp
   13498:	sub	sp, sp, #8
   1349c:	strb	r0, [fp, #-1]
   134a0:	ldrb	r0, [fp, #-1]
   134a4:	bl	12770 <__assert_fail@plt+0x1688>
   134a8:	and	r0, r0, #255	; 0xff
   134ac:	movw	lr, #62035	; 0xf253
   134b0:	movt	lr, #1
   134b4:	add	r0, lr, r0
   134b8:	ldrsb	r0, [r0]
   134bc:	movw	lr, #0
   134c0:	cmp	lr, r0
   134c4:	movw	r0, #0
   134c8:	movle	r0, #1
   134cc:	and	r0, r0, #1
   134d0:	mov	sp, fp
   134d4:	pop	{fp, pc}
   134d8:	sub	sp, sp, #4
   134dc:	str	r0, [sp]
   134e0:	ldr	r0, [sp]
   134e4:	movw	r1, #0
   134e8:	str	r1, [r0]
   134ec:	add	sp, sp, #4
   134f0:	bx	lr
   134f4:	push	{fp, lr}
   134f8:	mov	fp, sp
   134fc:	sub	sp, sp, #48	; 0x30
   13500:	ldr	ip, [fp, #8]
   13504:	str	r0, [fp, #-4]
   13508:	str	r1, [fp, #-8]
   1350c:	str	r2, [fp, #-12]
   13510:	str	r3, [fp, #-16]
   13514:	ldr	r0, [fp, #8]
   13518:	ldr	r0, [r0]
   1351c:	str	r0, [fp, #-20]	; 0xffffffec
   13520:	ldr	r0, [fp, #-4]
   13524:	movw	r1, #0
   13528:	cmp	r0, r1
   1352c:	movw	r0, #0
   13530:	movne	r0, #1
   13534:	and	r0, r0, #1
   13538:	strb	r0, [fp, #-21]	; 0xffffffeb
   1353c:	movw	r0, #0
   13540:	strb	r0, [fp, #-22]	; 0xffffffea
   13544:	str	r1, [sp, #20]
   13548:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   1354c:	tst	r0, #1
   13550:	str	ip, [sp, #4]
   13554:	beq	1357c <__assert_fail@plt+0x2494>
   13558:	ldr	r0, [fp, #-4]
   1355c:	ldr	r0, [r0]
   13560:	str	r0, [sp, #20]
   13564:	ldr	r0, [fp, #-12]
   13568:	cmp	r0, #0
   1356c:	movw	r0, #0
   13570:	moveq	r0, #1
   13574:	and	r0, r0, #1
   13578:	strb	r0, [fp, #-22]	; 0xffffffea
   1357c:	b	13580 <__assert_fail@plt+0x2498>
   13580:	ldr	r0, [fp, #-20]	; 0xffffffec
   13584:	str	r0, [sp, #16]
   13588:	ldr	r0, [sp, #20]
   1358c:	cmp	r0, #0
   13590:	bne	135ec <__assert_fail@plt+0x2504>
   13594:	ldrb	r0, [fp, #-22]	; 0xffffffea
   13598:	tst	r0, #1
   1359c:	bne	135ec <__assert_fail@plt+0x2504>
   135a0:	b	135a4 <__assert_fail@plt+0x24bc>
   135a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   135a8:	str	r0, [sp, #16]
   135ac:	ldr	r0, [fp, #-8]
   135b0:	ldr	r1, [fp, #-12]
   135b4:	sub	r2, fp, #16
   135b8:	sub	r3, fp, #20
   135bc:	bl	13758 <__assert_fail@plt+0x2670>
   135c0:	tst	r0, #1
   135c4:	bne	135cc <__assert_fail@plt+0x24e4>
   135c8:	b	135e8 <__assert_fail@plt+0x2500>
   135cc:	ldr	r0, [fp, #-8]
   135d0:	add	r0, r0, #8
   135d4:	str	r0, [fp, #-8]
   135d8:	ldr	r0, [fp, #-12]
   135dc:	sub	r0, r0, #8
   135e0:	str	r0, [fp, #-12]
   135e4:	b	135a4 <__assert_fail@plt+0x24bc>
   135e8:	b	135ec <__assert_fail@plt+0x2504>
   135ec:	ldr	r0, [fp, #-12]
   135f0:	cmp	r0, #0
   135f4:	bne	13608 <__assert_fail@plt+0x2520>
   135f8:	ldrb	r0, [fp, #-22]	; 0xffffffea
   135fc:	tst	r0, #1
   13600:	bne	13608 <__assert_fail@plt+0x2520>
   13604:	b	13728 <__assert_fail@plt+0x2640>
   13608:	ldr	r0, [fp, #-12]
   1360c:	cmp	r0, #0
   13610:	beq	13650 <__assert_fail@plt+0x2568>
   13614:	ldr	r0, [fp, #-8]
   13618:	ldrb	r0, [r0]
   1361c:	cmp	r0, #10
   13620:	bne	13650 <__assert_fail@plt+0x2568>
   13624:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   13628:	tst	r0, #1
   1362c:	beq	13650 <__assert_fail@plt+0x2568>
   13630:	ldr	r0, [fp, #-8]
   13634:	add	r0, r0, #1
   13638:	str	r0, [fp, #-8]
   1363c:	ldr	r0, [fp, #-12]
   13640:	mvn	r1, #0
   13644:	add	r0, r0, r1
   13648:	str	r0, [fp, #-12]
   1364c:	b	13580 <__assert_fail@plt+0x2498>
   13650:	ldr	r0, [sp, #16]
   13654:	ldr	r1, [fp, #-20]	; 0xffffffec
   13658:	sub	r0, r0, r1
   1365c:	ldr	r1, [fp, #-16]
   13660:	movw	r2, #0
   13664:	sub	r0, r2, r0
   13668:	add	r0, r1, r0
   1366c:	str	r0, [fp, #-16]
   13670:	ldr	r0, [sp, #16]
   13674:	str	r0, [fp, #-20]	; 0xffffffec
   13678:	ldr	r0, [fp, #-8]
   1367c:	ldr	r1, [fp, #-12]
   13680:	add	r0, r0, r1
   13684:	str	r0, [sp, #12]
   13688:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   1368c:	tst	r0, #1
   13690:	beq	136b0 <__assert_fail@plt+0x25c8>
   13694:	ldr	r0, [fp, #-4]
   13698:	ldr	r2, [sp, #12]
   1369c:	sub	r1, fp, #8
   136a0:	sub	r3, fp, #12
   136a4:	bl	13d70 <__assert_fail@plt+0x2c88>
   136a8:	str	r0, [sp, #8]
   136ac:	b	136b8 <__assert_fail@plt+0x25d0>
   136b0:	ldr	r0, [fp, #-8]
   136b4:	str	r0, [sp, #8]
   136b8:	ldr	r0, [fp, #-12]
   136bc:	cmp	r0, #0
   136c0:	beq	136e8 <__assert_fail@plt+0x2600>
   136c4:	ldr	r0, [fp, #-12]
   136c8:	cmp	r0, #8
   136cc:	bge	136f4 <__assert_fail@plt+0x260c>
   136d0:	ldrb	r0, [fp, #-22]	; 0xffffffea
   136d4:	tst	r0, #1
   136d8:	bne	136f4 <__assert_fail@plt+0x260c>
   136dc:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   136e0:	tst	r0, #1
   136e4:	beq	136f4 <__assert_fail@plt+0x260c>
   136e8:	movw	r0, #0
   136ec:	str	r0, [fp, #-12]
   136f0:	b	13728 <__assert_fail@plt+0x2640>
   136f4:	ldr	r0, [sp, #8]
   136f8:	ldr	r1, [fp, #-12]
   136fc:	sub	r2, fp, #16
   13700:	sub	r3, fp, #20
   13704:	bl	13758 <__assert_fail@plt+0x2670>
   13708:	tst	r0, #1
   1370c:	bne	13714 <__assert_fail@plt+0x262c>
   13710:	b	13728 <__assert_fail@plt+0x2640>
   13714:	ldr	r0, [sp, #12]
   13718:	ldr	r1, [fp, #-8]
   1371c:	sub	r0, r0, r1
   13720:	str	r0, [fp, #-12]
   13724:	b	13580 <__assert_fail@plt+0x2498>
   13728:	ldr	r0, [fp, #-20]	; 0xffffffec
   1372c:	ldr	r1, [fp, #8]
   13730:	ldr	r2, [r1]
   13734:	sub	r0, r2, r0
   13738:	str	r0, [r1]
   1373c:	ldr	r0, [fp, #-12]
   13740:	cmp	r0, #0
   13744:	movw	r0, #0
   13748:	moveq	r0, #1
   1374c:	and	r0, r0, #1
   13750:	mov	sp, fp
   13754:	pop	{fp, pc}
   13758:	push	{fp, lr}
   1375c:	mov	fp, sp
   13760:	sub	sp, sp, #56	; 0x38
   13764:	str	r0, [fp, #-8]
   13768:	str	r1, [fp, #-12]
   1376c:	str	r2, [fp, #-16]
   13770:	str	r3, [fp, #-20]	; 0xffffffec
   13774:	ldr	r0, [fp, #-16]
   13778:	ldr	r0, [r0]
   1377c:	str	r0, [fp, #-24]	; 0xffffffe8
   13780:	ldr	r0, [fp, #-12]
   13784:	cmp	r0, #8
   13788:	bge	1379c <__assert_fail@plt+0x26b4>
   1378c:	movw	r0, #0
   13790:	and	r0, r0, #1
   13794:	strb	r0, [fp, #-1]
   13798:	b	13d60 <__assert_fail@plt+0x2c78>
   1379c:	ldr	r0, [fp, #-8]
   137a0:	ldrb	r0, [r0]
   137a4:	bl	13490 <__assert_fail@plt+0x23a8>
   137a8:	tst	r0, #1
   137ac:	beq	137c4 <__assert_fail@plt+0x26dc>
   137b0:	ldr	r0, [fp, #-8]
   137b4:	ldrb	r0, [r0, #1]
   137b8:	bl	13490 <__assert_fail@plt+0x23a8>
   137bc:	tst	r0, #1
   137c0:	bne	137d4 <__assert_fail@plt+0x26ec>
   137c4:	movw	r0, #0
   137c8:	and	r0, r0, #1
   137cc:	strb	r0, [fp, #-1]
   137d0:	b	13d60 <__assert_fail@plt+0x2c78>
   137d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   137d8:	ldr	r0, [r0]
   137dc:	cmp	r0, #0
   137e0:	beq	13860 <__assert_fail@plt+0x2778>
   137e4:	ldr	r0, [fp, #-8]
   137e8:	ldrb	r0, [r0]
   137ec:	bl	12770 <__assert_fail@plt+0x1688>
   137f0:	and	r0, r0, #255	; 0xff
   137f4:	movw	lr, #62035	; 0xf253
   137f8:	movt	lr, #1
   137fc:	add	r0, lr, r0
   13800:	ldrsb	r0, [r0]
   13804:	lsl	r0, r0, #3
   13808:	ldr	lr, [fp, #-8]
   1380c:	ldrb	lr, [lr, #1]
   13810:	str	r0, [sp, #28]
   13814:	mov	r0, lr
   13818:	bl	12770 <__assert_fail@plt+0x1688>
   1381c:	and	r0, r0, #255	; 0xff
   13820:	movw	lr, #62035	; 0xf253
   13824:	movt	lr, #1
   13828:	add	r0, lr, r0
   1382c:	ldrsb	r0, [r0]
   13830:	asr	r0, r0, #2
   13834:	ldr	lr, [sp, #28]
   13838:	orr	r0, lr, r0
   1383c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   13840:	add	r1, lr, #1
   13844:	str	r1, [fp, #-24]	; 0xffffffe8
   13848:	strb	r0, [lr]
   1384c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13850:	ldr	r1, [r0]
   13854:	mvn	lr, #0
   13858:	add	r1, r1, lr
   1385c:	str	r1, [r0]
   13860:	ldr	r0, [fp, #-8]
   13864:	ldrb	r0, [r0, #2]
   13868:	cmp	r0, #61	; 0x3d
   1386c:	bne	138e4 <__assert_fail@plt+0x27fc>
   13870:	ldr	r0, [fp, #-8]
   13874:	ldrb	r0, [r0, #3]
   13878:	cmp	r0, #61	; 0x3d
   1387c:	bne	138c0 <__assert_fail@plt+0x27d8>
   13880:	ldr	r0, [fp, #-8]
   13884:	ldrb	r0, [r0, #4]
   13888:	cmp	r0, #61	; 0x3d
   1388c:	bne	138c0 <__assert_fail@plt+0x27d8>
   13890:	ldr	r0, [fp, #-8]
   13894:	ldrb	r0, [r0, #5]
   13898:	cmp	r0, #61	; 0x3d
   1389c:	bne	138c0 <__assert_fail@plt+0x27d8>
   138a0:	ldr	r0, [fp, #-8]
   138a4:	ldrb	r0, [r0, #6]
   138a8:	cmp	r0, #61	; 0x3d
   138ac:	bne	138c0 <__assert_fail@plt+0x27d8>
   138b0:	ldr	r0, [fp, #-8]
   138b4:	ldrb	r0, [r0, #7]
   138b8:	cmp	r0, #61	; 0x3d
   138bc:	beq	138e0 <__assert_fail@plt+0x27f8>
   138c0:	b	138c4 <__assert_fail@plt+0x27dc>
   138c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   138c8:	ldr	r1, [fp, #-16]
   138cc:	str	r0, [r1]
   138d0:	movw	r0, #0
   138d4:	and	r0, r0, #1
   138d8:	strb	r0, [fp, #-1]
   138dc:	b	13d60 <__assert_fail@plt+0x2c78>
   138e0:	b	13d48 <__assert_fail@plt+0x2c60>
   138e4:	ldr	r0, [fp, #-8]
   138e8:	ldrb	r0, [r0, #2]
   138ec:	bl	13490 <__assert_fail@plt+0x23a8>
   138f0:	tst	r0, #1
   138f4:	beq	1390c <__assert_fail@plt+0x2824>
   138f8:	ldr	r0, [fp, #-8]
   138fc:	ldrb	r0, [r0, #3]
   13900:	bl	13490 <__assert_fail@plt+0x23a8>
   13904:	tst	r0, #1
   13908:	bne	1392c <__assert_fail@plt+0x2844>
   1390c:	b	13910 <__assert_fail@plt+0x2828>
   13910:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13914:	ldr	r1, [fp, #-16]
   13918:	str	r0, [r1]
   1391c:	movw	r0, #0
   13920:	and	r0, r0, #1
   13924:	strb	r0, [fp, #-1]
   13928:	b	13d60 <__assert_fail@plt+0x2c78>
   1392c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13930:	ldr	r0, [r0]
   13934:	cmp	r0, #0
   13938:	beq	139ec <__assert_fail@plt+0x2904>
   1393c:	ldr	r0, [fp, #-8]
   13940:	ldrb	r0, [r0, #1]
   13944:	bl	12770 <__assert_fail@plt+0x1688>
   13948:	and	r0, r0, #255	; 0xff
   1394c:	movw	lr, #62035	; 0xf253
   13950:	movt	lr, #1
   13954:	add	r0, lr, r0
   13958:	ldrsb	r0, [r0]
   1395c:	lsl	r0, r0, #6
   13960:	ldr	lr, [fp, #-8]
   13964:	ldrb	lr, [lr, #2]
   13968:	str	r0, [sp, #24]
   1396c:	mov	r0, lr
   13970:	bl	12770 <__assert_fail@plt+0x1688>
   13974:	and	r0, r0, #255	; 0xff
   13978:	movw	lr, #62035	; 0xf253
   1397c:	movt	lr, #1
   13980:	add	r0, lr, r0
   13984:	ldrsb	r0, [r0]
   13988:	lsl	r0, r0, #1
   1398c:	ldr	lr, [sp, #24]
   13990:	orr	r0, lr, r0
   13994:	ldr	lr, [fp, #-8]
   13998:	ldrb	lr, [lr, #3]
   1399c:	str	r0, [sp, #20]
   139a0:	mov	r0, lr
   139a4:	bl	12770 <__assert_fail@plt+0x1688>
   139a8:	and	r0, r0, #255	; 0xff
   139ac:	movw	lr, #62035	; 0xf253
   139b0:	movt	lr, #1
   139b4:	add	r0, lr, r0
   139b8:	ldrsb	r0, [r0]
   139bc:	asr	r0, r0, #4
   139c0:	ldr	lr, [sp, #20]
   139c4:	orr	r0, lr, r0
   139c8:	ldr	lr, [fp, #-24]	; 0xffffffe8
   139cc:	add	r1, lr, #1
   139d0:	str	r1, [fp, #-24]	; 0xffffffe8
   139d4:	strb	r0, [lr]
   139d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   139dc:	ldr	r1, [r0]
   139e0:	mvn	lr, #0
   139e4:	add	r1, r1, lr
   139e8:	str	r1, [r0]
   139ec:	ldr	r0, [fp, #-8]
   139f0:	ldrb	r0, [r0, #4]
   139f4:	cmp	r0, #61	; 0x3d
   139f8:	bne	13a50 <__assert_fail@plt+0x2968>
   139fc:	ldr	r0, [fp, #-8]
   13a00:	ldrb	r0, [r0, #5]
   13a04:	cmp	r0, #61	; 0x3d
   13a08:	bne	13a2c <__assert_fail@plt+0x2944>
   13a0c:	ldr	r0, [fp, #-8]
   13a10:	ldrb	r0, [r0, #6]
   13a14:	cmp	r0, #61	; 0x3d
   13a18:	bne	13a2c <__assert_fail@plt+0x2944>
   13a1c:	ldr	r0, [fp, #-8]
   13a20:	ldrb	r0, [r0, #7]
   13a24:	cmp	r0, #61	; 0x3d
   13a28:	beq	13a4c <__assert_fail@plt+0x2964>
   13a2c:	b	13a30 <__assert_fail@plt+0x2948>
   13a30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13a34:	ldr	r1, [fp, #-16]
   13a38:	str	r0, [r1]
   13a3c:	movw	r0, #0
   13a40:	and	r0, r0, #1
   13a44:	strb	r0, [fp, #-1]
   13a48:	b	13d60 <__assert_fail@plt+0x2c78>
   13a4c:	b	13d44 <__assert_fail@plt+0x2c5c>
   13a50:	ldr	r0, [fp, #-8]
   13a54:	ldrb	r0, [r0, #4]
   13a58:	bl	13490 <__assert_fail@plt+0x23a8>
   13a5c:	tst	r0, #1
   13a60:	bne	13a84 <__assert_fail@plt+0x299c>
   13a64:	b	13a68 <__assert_fail@plt+0x2980>
   13a68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13a6c:	ldr	r1, [fp, #-16]
   13a70:	str	r0, [r1]
   13a74:	movw	r0, #0
   13a78:	and	r0, r0, #1
   13a7c:	strb	r0, [fp, #-1]
   13a80:	b	13d60 <__assert_fail@plt+0x2c78>
   13a84:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a88:	ldr	r0, [r0]
   13a8c:	cmp	r0, #0
   13a90:	beq	13b10 <__assert_fail@plt+0x2a28>
   13a94:	ldr	r0, [fp, #-8]
   13a98:	ldrb	r0, [r0, #3]
   13a9c:	bl	12770 <__assert_fail@plt+0x1688>
   13aa0:	and	r0, r0, #255	; 0xff
   13aa4:	movw	lr, #62035	; 0xf253
   13aa8:	movt	lr, #1
   13aac:	add	r0, lr, r0
   13ab0:	ldrsb	r0, [r0]
   13ab4:	lsl	r0, r0, #4
   13ab8:	ldr	lr, [fp, #-8]
   13abc:	ldrb	lr, [lr, #4]
   13ac0:	str	r0, [sp, #16]
   13ac4:	mov	r0, lr
   13ac8:	bl	12770 <__assert_fail@plt+0x1688>
   13acc:	and	r0, r0, #255	; 0xff
   13ad0:	movw	lr, #62035	; 0xf253
   13ad4:	movt	lr, #1
   13ad8:	add	r0, lr, r0
   13adc:	ldrsb	r0, [r0]
   13ae0:	asr	r0, r0, #1
   13ae4:	ldr	lr, [sp, #16]
   13ae8:	orr	r0, lr, r0
   13aec:	ldr	lr, [fp, #-24]	; 0xffffffe8
   13af0:	add	r1, lr, #1
   13af4:	str	r1, [fp, #-24]	; 0xffffffe8
   13af8:	strb	r0, [lr]
   13afc:	ldr	r0, [fp, #-20]	; 0xffffffec
   13b00:	ldr	r1, [r0]
   13b04:	mvn	lr, #0
   13b08:	add	r1, r1, lr
   13b0c:	str	r1, [r0]
   13b10:	ldr	r0, [fp, #-8]
   13b14:	ldrb	r0, [r0, #5]
   13b18:	cmp	r0, #61	; 0x3d
   13b1c:	bne	13b64 <__assert_fail@plt+0x2a7c>
   13b20:	ldr	r0, [fp, #-8]
   13b24:	ldrb	r0, [r0, #6]
   13b28:	cmp	r0, #61	; 0x3d
   13b2c:	bne	13b40 <__assert_fail@plt+0x2a58>
   13b30:	ldr	r0, [fp, #-8]
   13b34:	ldrb	r0, [r0, #7]
   13b38:	cmp	r0, #61	; 0x3d
   13b3c:	beq	13b60 <__assert_fail@plt+0x2a78>
   13b40:	b	13b44 <__assert_fail@plt+0x2a5c>
   13b44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b48:	ldr	r1, [fp, #-16]
   13b4c:	str	r0, [r1]
   13b50:	movw	r0, #0
   13b54:	and	r0, r0, #1
   13b58:	strb	r0, [fp, #-1]
   13b5c:	b	13d60 <__assert_fail@plt+0x2c78>
   13b60:	b	13d40 <__assert_fail@plt+0x2c58>
   13b64:	ldr	r0, [fp, #-8]
   13b68:	ldrb	r0, [r0, #5]
   13b6c:	bl	13490 <__assert_fail@plt+0x23a8>
   13b70:	tst	r0, #1
   13b74:	beq	13b8c <__assert_fail@plt+0x2aa4>
   13b78:	ldr	r0, [fp, #-8]
   13b7c:	ldrb	r0, [r0, #6]
   13b80:	bl	13490 <__assert_fail@plt+0x23a8>
   13b84:	tst	r0, #1
   13b88:	bne	13bac <__assert_fail@plt+0x2ac4>
   13b8c:	b	13b90 <__assert_fail@plt+0x2aa8>
   13b90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b94:	ldr	r1, [fp, #-16]
   13b98:	str	r0, [r1]
   13b9c:	movw	r0, #0
   13ba0:	and	r0, r0, #1
   13ba4:	strb	r0, [fp, #-1]
   13ba8:	b	13d60 <__assert_fail@plt+0x2c78>
   13bac:	ldr	r0, [fp, #-20]	; 0xffffffec
   13bb0:	ldr	r0, [r0]
   13bb4:	cmp	r0, #0
   13bb8:	beq	13c6c <__assert_fail@plt+0x2b84>
   13bbc:	ldr	r0, [fp, #-8]
   13bc0:	ldrb	r0, [r0, #4]
   13bc4:	bl	12770 <__assert_fail@plt+0x1688>
   13bc8:	and	r0, r0, #255	; 0xff
   13bcc:	movw	lr, #62035	; 0xf253
   13bd0:	movt	lr, #1
   13bd4:	add	r0, lr, r0
   13bd8:	ldrsb	r0, [r0]
   13bdc:	lsl	r0, r0, #7
   13be0:	ldr	lr, [fp, #-8]
   13be4:	ldrb	lr, [lr, #5]
   13be8:	str	r0, [sp, #12]
   13bec:	mov	r0, lr
   13bf0:	bl	12770 <__assert_fail@plt+0x1688>
   13bf4:	and	r0, r0, #255	; 0xff
   13bf8:	movw	lr, #62035	; 0xf253
   13bfc:	movt	lr, #1
   13c00:	add	r0, lr, r0
   13c04:	ldrsb	r0, [r0]
   13c08:	lsl	r0, r0, #2
   13c0c:	ldr	lr, [sp, #12]
   13c10:	orr	r0, lr, r0
   13c14:	ldr	lr, [fp, #-8]
   13c18:	ldrb	lr, [lr, #6]
   13c1c:	str	r0, [sp, #8]
   13c20:	mov	r0, lr
   13c24:	bl	12770 <__assert_fail@plt+0x1688>
   13c28:	and	r0, r0, #255	; 0xff
   13c2c:	movw	lr, #62035	; 0xf253
   13c30:	movt	lr, #1
   13c34:	add	r0, lr, r0
   13c38:	ldrsb	r0, [r0]
   13c3c:	asr	r0, r0, #3
   13c40:	ldr	lr, [sp, #8]
   13c44:	orr	r0, lr, r0
   13c48:	ldr	lr, [fp, #-24]	; 0xffffffe8
   13c4c:	add	r1, lr, #1
   13c50:	str	r1, [fp, #-24]	; 0xffffffe8
   13c54:	strb	r0, [lr]
   13c58:	ldr	r0, [fp, #-20]	; 0xffffffec
   13c5c:	ldr	r1, [r0]
   13c60:	mvn	lr, #0
   13c64:	add	r1, r1, lr
   13c68:	str	r1, [r0]
   13c6c:	ldr	r0, [fp, #-8]
   13c70:	ldrb	r0, [r0, #7]
   13c74:	cmp	r0, #61	; 0x3d
   13c78:	beq	13d3c <__assert_fail@plt+0x2c54>
   13c7c:	ldr	r0, [fp, #-8]
   13c80:	ldrb	r0, [r0, #7]
   13c84:	bl	13490 <__assert_fail@plt+0x23a8>
   13c88:	tst	r0, #1
   13c8c:	bne	13cb0 <__assert_fail@plt+0x2bc8>
   13c90:	b	13c94 <__assert_fail@plt+0x2bac>
   13c94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c98:	ldr	r1, [fp, #-16]
   13c9c:	str	r0, [r1]
   13ca0:	movw	r0, #0
   13ca4:	and	r0, r0, #1
   13ca8:	strb	r0, [fp, #-1]
   13cac:	b	13d60 <__assert_fail@plt+0x2c78>
   13cb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13cb4:	ldr	r0, [r0]
   13cb8:	cmp	r0, #0
   13cbc:	beq	13d38 <__assert_fail@plt+0x2c50>
   13cc0:	ldr	r0, [fp, #-8]
   13cc4:	ldrb	r0, [r0, #6]
   13cc8:	bl	12770 <__assert_fail@plt+0x1688>
   13ccc:	and	r0, r0, #255	; 0xff
   13cd0:	movw	lr, #62035	; 0xf253
   13cd4:	movt	lr, #1
   13cd8:	add	r0, lr, r0
   13cdc:	ldrsb	r0, [r0]
   13ce0:	lsl	r0, r0, #5
   13ce4:	ldr	lr, [fp, #-8]
   13ce8:	ldrb	lr, [lr, #7]
   13cec:	str	r0, [sp, #4]
   13cf0:	mov	r0, lr
   13cf4:	bl	12770 <__assert_fail@plt+0x1688>
   13cf8:	and	r0, r0, #255	; 0xff
   13cfc:	movw	lr, #62035	; 0xf253
   13d00:	movt	lr, #1
   13d04:	add	r0, lr, r0
   13d08:	ldrsb	r0, [r0]
   13d0c:	ldr	lr, [sp, #4]
   13d10:	orr	r0, lr, r0
   13d14:	ldr	lr, [fp, #-24]	; 0xffffffe8
   13d18:	add	r1, lr, #1
   13d1c:	str	r1, [fp, #-24]	; 0xffffffe8
   13d20:	strb	r0, [lr]
   13d24:	ldr	r0, [fp, #-20]	; 0xffffffec
   13d28:	ldr	r1, [r0]
   13d2c:	mvn	lr, #0
   13d30:	add	r1, r1, lr
   13d34:	str	r1, [r0]
   13d38:	b	13d3c <__assert_fail@plt+0x2c54>
   13d3c:	b	13d40 <__assert_fail@plt+0x2c58>
   13d40:	b	13d44 <__assert_fail@plt+0x2c5c>
   13d44:	b	13d48 <__assert_fail@plt+0x2c60>
   13d48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d4c:	ldr	r1, [fp, #-16]
   13d50:	str	r0, [r1]
   13d54:	movw	r0, #1
   13d58:	and	r0, r0, #1
   13d5c:	strb	r0, [fp, #-1]
   13d60:	ldrb	r0, [fp, #-1]
   13d64:	and	r0, r0, #1
   13d68:	mov	sp, fp
   13d6c:	pop	{fp, pc}
   13d70:	push	{fp, lr}
   13d74:	mov	fp, sp
   13d78:	sub	sp, sp, #32
   13d7c:	str	r0, [fp, #-8]
   13d80:	str	r1, [fp, #-12]
   13d84:	str	r2, [sp, #16]
   13d88:	str	r3, [sp, #12]
   13d8c:	ldr	r0, [fp, #-8]
   13d90:	ldr	r0, [r0]
   13d94:	cmp	r0, #8
   13d98:	bne	13da8 <__assert_fail@plt+0x2cc0>
   13d9c:	ldr	r0, [fp, #-8]
   13da0:	movw	r1, #0
   13da4:	str	r1, [r0]
   13da8:	ldr	r0, [fp, #-8]
   13dac:	ldr	r0, [r0]
   13db0:	cmp	r0, #0
   13db4:	bne	13e28 <__assert_fail@plt+0x2d40>
   13db8:	ldr	r0, [fp, #-12]
   13dbc:	ldr	r0, [r0]
   13dc0:	str	r0, [sp, #8]
   13dc4:	ldr	r0, [sp, #16]
   13dc8:	ldr	r1, [fp, #-12]
   13dcc:	ldr	r1, [r1]
   13dd0:	sub	r0, r0, r1
   13dd4:	movw	r1, #8
   13dd8:	cmp	r1, r0
   13ddc:	bgt	13e24 <__assert_fail@plt+0x2d3c>
   13de0:	ldr	r0, [sp, #8]
   13de4:	mov	r1, #10
   13de8:	mov	r2, #8
   13dec:	bl	11040 <memchr@plt>
   13df0:	movw	r1, #0
   13df4:	cmp	r0, r1
   13df8:	bne	13e24 <__assert_fail@plt+0x2d3c>
   13dfc:	ldr	r0, [fp, #-12]
   13e00:	ldr	r1, [r0]
   13e04:	add	r1, r1, #8
   13e08:	str	r1, [r0]
   13e0c:	ldr	r0, [sp, #12]
   13e10:	movw	r1, #8
   13e14:	str	r1, [r0]
   13e18:	ldr	r0, [sp, #8]
   13e1c:	str	r0, [fp, #-4]
   13e20:	b	13ecc <__assert_fail@plt+0x2de4>
   13e24:	b	13e28 <__assert_fail@plt+0x2d40>
   13e28:	ldr	r0, [fp, #-12]
   13e2c:	ldr	r0, [r0]
   13e30:	str	r0, [sp, #4]
   13e34:	ldr	r0, [sp, #4]
   13e38:	ldr	r1, [sp, #16]
   13e3c:	cmp	r0, r1
   13e40:	bcs	13ea4 <__assert_fail@plt+0x2dbc>
   13e44:	ldr	r0, [sp, #4]
   13e48:	add	r1, r0, #1
   13e4c:	str	r1, [sp, #4]
   13e50:	ldrb	r0, [r0]
   13e54:	strb	r0, [sp, #3]
   13e58:	ldrb	r0, [sp, #3]
   13e5c:	cmp	r0, #10
   13e60:	beq	13ea0 <__assert_fail@plt+0x2db8>
   13e64:	ldrb	r0, [sp, #3]
   13e68:	ldr	r1, [fp, #-8]
   13e6c:	add	r1, r1, #4
   13e70:	ldr	r2, [fp, #-8]
   13e74:	ldr	r3, [r2]
   13e78:	add	ip, r3, #1
   13e7c:	str	ip, [r2]
   13e80:	add	r1, r1, r3
   13e84:	strb	r0, [r1]
   13e88:	ldr	r0, [fp, #-8]
   13e8c:	ldr	r0, [r0]
   13e90:	cmp	r0, #8
   13e94:	bne	13e9c <__assert_fail@plt+0x2db4>
   13e98:	b	13ea4 <__assert_fail@plt+0x2dbc>
   13e9c:	b	13ea0 <__assert_fail@plt+0x2db8>
   13ea0:	b	13e34 <__assert_fail@plt+0x2d4c>
   13ea4:	ldr	r0, [sp, #4]
   13ea8:	ldr	r1, [fp, #-12]
   13eac:	str	r0, [r1]
   13eb0:	ldr	r0, [fp, #-8]
   13eb4:	ldr	r0, [r0]
   13eb8:	ldr	r1, [sp, #12]
   13ebc:	str	r0, [r1]
   13ec0:	ldr	r0, [fp, #-8]
   13ec4:	add	r0, r0, #4
   13ec8:	str	r0, [fp, #-4]
   13ecc:	ldr	r0, [fp, #-4]
   13ed0:	mov	sp, fp
   13ed4:	pop	{fp, pc}
   13ed8:	push	{fp, lr}
   13edc:	mov	fp, sp
   13ee0:	sub	sp, sp, #32
   13ee4:	ldr	ip, [fp, #8]
   13ee8:	str	r0, [fp, #-8]
   13eec:	str	r1, [fp, #-12]
   13ef0:	str	r2, [sp, #16]
   13ef4:	str	r3, [sp, #12]
   13ef8:	ldr	r0, [sp, #16]
   13efc:	asr	r0, r0, #3
   13f00:	add	r0, r0, #1
   13f04:	movw	r1, #5
   13f08:	mul	r0, r0, r1
   13f0c:	str	r0, [sp, #8]
   13f10:	ldr	r0, [sp, #8]
   13f14:	str	ip, [sp, #4]
   13f18:	bl	144fc <__assert_fail@plt+0x3414>
   13f1c:	ldr	r1, [sp, #12]
   13f20:	str	r0, [r1]
   13f24:	ldr	r0, [sp, #12]
   13f28:	ldr	r0, [r0]
   13f2c:	movw	r1, #0
   13f30:	cmp	r0, r1
   13f34:	bne	13f48 <__assert_fail@plt+0x2e60>
   13f38:	movw	r0, #1
   13f3c:	and	r0, r0, #1
   13f40:	strb	r0, [fp, #-1]
   13f44:	b	13fc0 <__assert_fail@plt+0x2ed8>
   13f48:	ldr	r0, [fp, #-8]
   13f4c:	ldr	r1, [fp, #-12]
   13f50:	ldr	r2, [sp, #16]
   13f54:	ldr	r3, [sp, #12]
   13f58:	ldr	r3, [r3]
   13f5c:	add	ip, sp, #8
   13f60:	str	ip, [sp]
   13f64:	bl	134f4 <__assert_fail@plt+0x240c>
   13f68:	tst	r0, #1
   13f6c:	bne	13f98 <__assert_fail@plt+0x2eb0>
   13f70:	ldr	r0, [sp, #12]
   13f74:	ldr	r0, [r0]
   13f78:	bl	14394 <__assert_fail@plt+0x32ac>
   13f7c:	ldr	r0, [sp, #12]
   13f80:	movw	lr, #0
   13f84:	str	lr, [r0]
   13f88:	movw	r0, #0
   13f8c:	and	r0, r0, #1
   13f90:	strb	r0, [fp, #-1]
   13f94:	b	13fc0 <__assert_fail@plt+0x2ed8>
   13f98:	ldr	r0, [fp, #8]
   13f9c:	movw	r1, #0
   13fa0:	cmp	r0, r1
   13fa4:	beq	13fb4 <__assert_fail@plt+0x2ecc>
   13fa8:	ldr	r0, [sp, #8]
   13fac:	ldr	r1, [fp, #8]
   13fb0:	str	r0, [r1]
   13fb4:	movw	r0, #1
   13fb8:	and	r0, r0, #1
   13fbc:	strb	r0, [fp, #-1]
   13fc0:	ldrb	r0, [fp, #-1]
   13fc4:	and	r0, r0, #1
   13fc8:	mov	sp, fp
   13fcc:	pop	{fp, pc}
   13fd0:	sub	sp, sp, #4
   13fd4:	str	r0, [sp]
   13fd8:	ldr	r0, [sp]
   13fdc:	movw	r1, #352	; 0x160
   13fe0:	movt	r1, #3
   13fe4:	str	r0, [r1]
   13fe8:	add	sp, sp, #4
   13fec:	bx	lr
   13ff0:	sub	sp, sp, #4
   13ff4:	and	r0, r0, #1
   13ff8:	strb	r0, [sp, #3]
   13ffc:	ldrb	r0, [sp, #3]
   14000:	and	r0, r0, #1
   14004:	movw	r1, #356	; 0x164
   14008:	movt	r1, #3
   1400c:	strb	r0, [r1]
   14010:	add	sp, sp, #4
   14014:	bx	lr
   14018:	push	{fp, lr}
   1401c:	mov	fp, sp
   14020:	sub	sp, sp, #24
   14024:	movw	r0, #340	; 0x154
   14028:	movt	r0, #3
   1402c:	ldr	r0, [r0]
   14030:	bl	1df2c <__assert_fail@plt+0xce44>
   14034:	cmp	r0, #0
   14038:	beq	14108 <__assert_fail@plt+0x3020>
   1403c:	movw	r0, #356	; 0x164
   14040:	movt	r0, #3
   14044:	ldrb	r0, [r0]
   14048:	tst	r0, #1
   1404c:	beq	14060 <__assert_fail@plt+0x2f78>
   14050:	bl	11010 <__errno_location@plt>
   14054:	ldr	r0, [r0]
   14058:	cmp	r0, #32
   1405c:	beq	14108 <__assert_fail@plt+0x3020>
   14060:	movw	r0, #61784	; 0xf158
   14064:	movt	r0, #1
   14068:	bl	10fe0 <gettext@plt>
   1406c:	str	r0, [fp, #-4]
   14070:	movw	r0, #352	; 0x160
   14074:	movt	r0, #3
   14078:	ldr	r0, [r0]
   1407c:	movw	lr, #0
   14080:	cmp	r0, lr
   14084:	beq	140dc <__assert_fail@plt+0x2ff4>
   14088:	bl	11010 <__errno_location@plt>
   1408c:	ldr	r1, [r0]
   14090:	movw	r0, #352	; 0x160
   14094:	movt	r0, #3
   14098:	ldr	r0, [r0]
   1409c:	str	r1, [fp, #-8]
   140a0:	bl	16a74 <__assert_fail@plt+0x598c>
   140a4:	ldr	r1, [fp, #-4]
   140a8:	movw	lr, #0
   140ac:	str	r0, [sp, #12]
   140b0:	mov	r0, lr
   140b4:	ldr	lr, [fp, #-8]
   140b8:	str	r1, [sp, #8]
   140bc:	mov	r1, lr
   140c0:	movw	r2, #61216	; 0xef20
   140c4:	movt	r2, #1
   140c8:	ldr	r3, [sp, #12]
   140cc:	ldr	ip, [sp, #8]
   140d0:	str	ip, [sp]
   140d4:	bl	10f80 <error@plt>
   140d8:	b	140f8 <__assert_fail@plt+0x3010>
   140dc:	bl	11010 <__errno_location@plt>
   140e0:	ldr	r1, [r0]
   140e4:	ldr	r3, [fp, #-4]
   140e8:	movw	r0, #0
   140ec:	movw	r2, #61220	; 0xef24
   140f0:	movt	r2, #1
   140f4:	bl	10f80 <error@plt>
   140f8:	movw	r0, #244	; 0xf4
   140fc:	movt	r0, #3
   14100:	ldr	r0, [r0]
   14104:	bl	10ed8 <_exit@plt>
   14108:	movw	r0, #328	; 0x148
   1410c:	movt	r0, #3
   14110:	ldr	r0, [r0]
   14114:	bl	1df2c <__assert_fail@plt+0xce44>
   14118:	cmp	r0, #0
   1411c:	beq	14130 <__assert_fail@plt+0x3048>
   14120:	movw	r0, #244	; 0xf4
   14124:	movt	r0, #3
   14128:	ldr	r0, [r0]
   1412c:	bl	10ed8 <_exit@plt>
   14130:	mov	sp, fp
   14134:	pop	{fp, pc}
   14138:	push	{r4, r5, fp, lr}
   1413c:	add	fp, sp, #8
   14140:	sub	sp, sp, #48	; 0x30
   14144:	ldr	r1, [fp, #12]
   14148:	ldr	ip, [fp, #8]
   1414c:	ldr	lr, [fp, #16]
   14150:	str	r0, [fp, #-12]
   14154:	str	r3, [fp, #-20]	; 0xffffffec
   14158:	str	r2, [fp, #-24]	; 0xffffffe8
   1415c:	str	r1, [sp, #28]
   14160:	str	ip, [sp, #24]
   14164:	ldr	r0, [fp, #-12]
   14168:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1416c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14170:	ldr	r1, [sp, #24]
   14174:	ldr	ip, [sp, #28]
   14178:	ldr	r4, [fp, #16]
   1417c:	mov	r5, sp
   14180:	str	r4, [r5, #8]
   14184:	str	ip, [r5, #4]
   14188:	str	r1, [r5]
   1418c:	str	lr, [sp, #20]
   14190:	bl	10e9c <posix_fadvise64@plt>
   14194:	str	r0, [sp, #16]
   14198:	sub	sp, fp, #8
   1419c:	pop	{r4, r5, fp, pc}
   141a0:	push	{fp, lr}
   141a4:	mov	fp, sp
   141a8:	sub	sp, sp, #24
   141ac:	str	r0, [fp, #-4]
   141b0:	str	r1, [fp, #-8]
   141b4:	ldr	r0, [fp, #-4]
   141b8:	movw	r1, #0
   141bc:	cmp	r0, r1
   141c0:	beq	141f0 <__assert_fail@plt+0x3108>
   141c4:	ldr	r0, [fp, #-4]
   141c8:	bl	11034 <fileno@plt>
   141cc:	ldr	lr, [fp, #-8]
   141d0:	mov	r1, sp
   141d4:	str	lr, [r1, #8]
   141d8:	mov	lr, #0
   141dc:	str	lr, [r1, #4]
   141e0:	str	lr, [r1]
   141e4:	mov	r2, lr
   141e8:	mov	r3, lr
   141ec:	bl	14138 <__assert_fail@plt+0x3050>
   141f0:	mov	sp, fp
   141f4:	pop	{fp, pc}
   141f8:	push	{fp, lr}
   141fc:	mov	fp, sp
   14200:	sub	sp, sp, #32
   14204:	str	r0, [fp, #-8]
   14208:	movw	r0, #0
   1420c:	str	r0, [fp, #-12]
   14210:	str	r0, [sp, #12]
   14214:	ldr	r0, [fp, #-8]
   14218:	bl	11034 <fileno@plt>
   1421c:	str	r0, [sp, #16]
   14220:	ldr	r0, [sp, #16]
   14224:	cmp	r0, #0
   14228:	bge	1423c <__assert_fail@plt+0x3154>
   1422c:	ldr	r0, [fp, #-8]
   14230:	bl	11058 <fclose@plt>
   14234:	str	r0, [fp, #-4]
   14238:	b	142d8 <__assert_fail@plt+0x31f0>
   1423c:	ldr	r0, [fp, #-8]
   14240:	bl	10fa4 <__freading@plt>
   14244:	cmp	r0, #0
   14248:	beq	14280 <__assert_fail@plt+0x3198>
   1424c:	ldr	r0, [fp, #-8]
   14250:	bl	11034 <fileno@plt>
   14254:	mov	lr, sp
   14258:	mov	r1, #1
   1425c:	str	r1, [lr]
   14260:	mov	r1, #0
   14264:	mov	r2, r1
   14268:	mov	r3, r1
   1426c:	bl	10f44 <lseek64@plt>
   14270:	and	r0, r0, r1
   14274:	cmn	r0, #1
   14278:	beq	1429c <__assert_fail@plt+0x31b4>
   1427c:	b	14280 <__assert_fail@plt+0x3198>
   14280:	ldr	r0, [fp, #-8]
   14284:	bl	142e4 <__assert_fail@plt+0x31fc>
   14288:	cmp	r0, #0
   1428c:	beq	1429c <__assert_fail@plt+0x31b4>
   14290:	bl	11010 <__errno_location@plt>
   14294:	ldr	r0, [r0]
   14298:	str	r0, [fp, #-12]
   1429c:	ldr	r0, [fp, #-8]
   142a0:	bl	11058 <fclose@plt>
   142a4:	str	r0, [sp, #12]
   142a8:	ldr	r0, [fp, #-12]
   142ac:	cmp	r0, #0
   142b0:	beq	142d0 <__assert_fail@plt+0x31e8>
   142b4:	ldr	r0, [fp, #-12]
   142b8:	str	r0, [sp, #8]
   142bc:	bl	11010 <__errno_location@plt>
   142c0:	ldr	lr, [sp, #8]
   142c4:	str	lr, [r0]
   142c8:	mvn	r0, #0
   142cc:	str	r0, [sp, #12]
   142d0:	ldr	r0, [sp, #12]
   142d4:	str	r0, [fp, #-4]
   142d8:	ldr	r0, [fp, #-4]
   142dc:	mov	sp, fp
   142e0:	pop	{fp, pc}
   142e4:	push	{fp, lr}
   142e8:	mov	fp, sp
   142ec:	sub	sp, sp, #8
   142f0:	str	r0, [sp]
   142f4:	ldr	r0, [sp]
   142f8:	movw	r1, #0
   142fc:	cmp	r0, r1
   14300:	beq	14314 <__assert_fail@plt+0x322c>
   14304:	ldr	r0, [sp]
   14308:	bl	10fa4 <__freading@plt>
   1430c:	cmp	r0, #0
   14310:	bne	14324 <__assert_fail@plt+0x323c>
   14314:	ldr	r0, [sp]
   14318:	bl	10eb4 <fflush@plt>
   1431c:	str	r0, [sp, #4]
   14320:	b	14338 <__assert_fail@plt+0x3250>
   14324:	ldr	r0, [sp]
   14328:	bl	14344 <__assert_fail@plt+0x325c>
   1432c:	ldr	r0, [sp]
   14330:	bl	10eb4 <fflush@plt>
   14334:	str	r0, [sp, #4]
   14338:	ldr	r0, [sp, #4]
   1433c:	mov	sp, fp
   14340:	pop	{fp, pc}
   14344:	push	{fp, lr}
   14348:	mov	fp, sp
   1434c:	sub	sp, sp, #16
   14350:	str	r0, [fp, #-4]
   14354:	ldr	r0, [fp, #-4]
   14358:	ldr	r0, [r0]
   1435c:	and	r0, r0, #256	; 0x100
   14360:	cmp	r0, #0
   14364:	beq	1438c <__assert_fail@plt+0x32a4>
   14368:	ldr	r0, [fp, #-4]
   1436c:	mov	r1, sp
   14370:	mov	r2, #1
   14374:	str	r2, [r1]
   14378:	mov	r1, #0
   1437c:	mov	r2, r1
   14380:	mov	r3, r1
   14384:	bl	143d4 <__assert_fail@plt+0x32ec>
   14388:	str	r0, [sp, #8]
   1438c:	mov	sp, fp
   14390:	pop	{fp, pc}
   14394:	push	{fp, lr}
   14398:	mov	fp, sp
   1439c:	sub	sp, sp, #16
   143a0:	str	r0, [fp, #-4]
   143a4:	bl	11010 <__errno_location@plt>
   143a8:	ldr	r0, [r0]
   143ac:	str	r0, [sp, #8]
   143b0:	ldr	r0, [fp, #-4]
   143b4:	bl	10ecc <free@plt>
   143b8:	ldr	r0, [sp, #8]
   143bc:	str	r0, [sp, #4]
   143c0:	bl	11010 <__errno_location@plt>
   143c4:	ldr	lr, [sp, #4]
   143c8:	str	lr, [r0]
   143cc:	mov	sp, fp
   143d0:	pop	{fp, pc}
   143d4:	push	{fp, lr}
   143d8:	mov	fp, sp
   143dc:	sub	sp, sp, #32
   143e0:	ldr	r1, [fp, #8]
   143e4:	str	r0, [fp, #-8]
   143e8:	str	r3, [sp, #20]
   143ec:	str	r2, [sp, #16]
   143f0:	ldr	r0, [fp, #-8]
   143f4:	ldr	r0, [r0, #8]
   143f8:	ldr	r2, [fp, #-8]
   143fc:	ldr	r2, [r2, #4]
   14400:	cmp	r0, r2
   14404:	str	r1, [sp, #4]
   14408:	bne	144b4 <__assert_fail@plt+0x33cc>
   1440c:	ldr	r0, [fp, #-8]
   14410:	ldr	r0, [r0, #20]
   14414:	ldr	r1, [fp, #-8]
   14418:	ldr	r1, [r1, #16]
   1441c:	cmp	r0, r1
   14420:	bne	144b4 <__assert_fail@plt+0x33cc>
   14424:	ldr	r0, [fp, #-8]
   14428:	ldr	r0, [r0, #36]	; 0x24
   1442c:	movw	r1, #0
   14430:	cmp	r0, r1
   14434:	bne	144b4 <__assert_fail@plt+0x33cc>
   14438:	ldr	r0, [fp, #-8]
   1443c:	bl	11034 <fileno@plt>
   14440:	ldr	r2, [sp, #16]
   14444:	ldr	r3, [sp, #20]
   14448:	ldr	lr, [fp, #8]
   1444c:	mov	r1, sp
   14450:	str	lr, [r1]
   14454:	bl	10f44 <lseek64@plt>
   14458:	str	r1, [sp, #12]
   1445c:	str	r0, [sp, #8]
   14460:	ldr	r0, [sp, #8]
   14464:	ldr	r1, [sp, #12]
   14468:	and	r0, r0, r1
   1446c:	cmn	r0, #1
   14470:	bne	14484 <__assert_fail@plt+0x339c>
   14474:	b	14478 <__assert_fail@plt+0x3390>
   14478:	mvn	r0, #0
   1447c:	str	r0, [fp, #-4]
   14480:	b	144d4 <__assert_fail@plt+0x33ec>
   14484:	ldr	r0, [fp, #-8]
   14488:	ldr	r1, [r0]
   1448c:	bic	r1, r1, #16
   14490:	str	r1, [r0]
   14494:	ldr	r0, [sp, #8]
   14498:	ldr	r1, [sp, #12]
   1449c:	ldr	r2, [fp, #-8]
   144a0:	str	r1, [r2, #84]	; 0x54
   144a4:	str	r0, [r2, #80]	; 0x50
   144a8:	movw	r0, #0
   144ac:	str	r0, [fp, #-4]
   144b0:	b	144d4 <__assert_fail@plt+0x33ec>
   144b4:	ldr	r0, [fp, #-8]
   144b8:	ldr	r2, [sp, #16]
   144bc:	ldr	r3, [sp, #20]
   144c0:	ldr	r1, [fp, #8]
   144c4:	mov	ip, sp
   144c8:	str	r1, [ip]
   144cc:	bl	11064 <fseeko64@plt>
   144d0:	str	r0, [fp, #-4]
   144d4:	ldr	r0, [fp, #-4]
   144d8:	mov	sp, fp
   144dc:	pop	{fp, pc}
   144e0:	push	{fp, lr}
   144e4:	mov	fp, sp
   144e8:	bl	11010 <__errno_location@plt>
   144ec:	movw	lr, #12
   144f0:	str	lr, [r0]
   144f4:	movw	r0, #0
   144f8:	pop	{fp, pc}
   144fc:	push	{fp, lr}
   14500:	mov	fp, sp
   14504:	sub	sp, sp, #8
   14508:	str	r0, [sp, #4]
   1450c:	ldr	r0, [sp, #4]
   14510:	cmn	r0, #1
   14514:	bhi	14528 <__assert_fail@plt+0x3440>
   14518:	ldr	r0, [sp, #4]
   1451c:	bl	1dd20 <__assert_fail@plt+0xcc38>
   14520:	str	r0, [sp]
   14524:	b	14530 <__assert_fail@plt+0x3448>
   14528:	bl	144e0 <__assert_fail@plt+0x33f8>
   1452c:	str	r0, [sp]
   14530:	ldr	r0, [sp]
   14534:	mov	sp, fp
   14538:	pop	{fp, pc}
   1453c:	push	{fp, lr}
   14540:	mov	fp, sp
   14544:	sub	sp, sp, #16
   14548:	str	r0, [fp, #-4]
   1454c:	str	r1, [sp, #8]
   14550:	ldr	r0, [sp, #8]
   14554:	cmn	r0, #1
   14558:	bhi	14590 <__assert_fail@plt+0x34a8>
   1455c:	ldr	r0, [fp, #-4]
   14560:	ldr	r1, [sp, #8]
   14564:	ldr	r2, [sp, #8]
   14568:	cmp	r2, #0
   1456c:	movw	r2, #0
   14570:	movne	r2, #1
   14574:	mvn	r3, #0
   14578:	eor	r2, r2, r3
   1457c:	and	r2, r2, #1
   14580:	orr	r1, r1, r2
   14584:	bl	1dd90 <__assert_fail@plt+0xcca8>
   14588:	str	r0, [sp, #4]
   1458c:	b	14598 <__assert_fail@plt+0x34b0>
   14590:	bl	144e0 <__assert_fail@plt+0x33f8>
   14594:	str	r0, [sp, #4]
   14598:	ldr	r0, [sp, #4]
   1459c:	mov	sp, fp
   145a0:	pop	{fp, pc}
   145a4:	push	{fp, lr}
   145a8:	mov	fp, sp
   145ac:	sub	sp, sp, #16
   145b0:	str	r0, [sp, #8]
   145b4:	str	r1, [sp, #4]
   145b8:	ldr	r0, [sp, #8]
   145bc:	mvn	r1, #0
   145c0:	cmp	r1, r0
   145c4:	bcs	145e8 <__assert_fail@plt+0x3500>
   145c8:	ldr	r0, [sp, #4]
   145cc:	cmp	r0, #0
   145d0:	beq	145e0 <__assert_fail@plt+0x34f8>
   145d4:	bl	144e0 <__assert_fail@plt+0x33f8>
   145d8:	str	r0, [fp, #-4]
   145dc:	b	14628 <__assert_fail@plt+0x3540>
   145e0:	movw	r0, #0
   145e4:	str	r0, [sp, #8]
   145e8:	ldr	r0, [sp, #4]
   145ec:	mvn	r1, #0
   145f0:	cmp	r1, r0
   145f4:	bcs	14618 <__assert_fail@plt+0x3530>
   145f8:	ldr	r0, [sp, #8]
   145fc:	cmp	r0, #0
   14600:	beq	14610 <__assert_fail@plt+0x3528>
   14604:	bl	144e0 <__assert_fail@plt+0x33f8>
   14608:	str	r0, [fp, #-4]
   1460c:	b	14628 <__assert_fail@plt+0x3540>
   14610:	movw	r0, #0
   14614:	str	r0, [sp, #4]
   14618:	ldr	r0, [sp, #8]
   1461c:	ldr	r1, [sp, #4]
   14620:	bl	1dc84 <__assert_fail@plt+0xcb9c>
   14624:	str	r0, [fp, #-4]
   14628:	ldr	r0, [fp, #-4]
   1462c:	mov	sp, fp
   14630:	pop	{fp, pc}
   14634:	push	{fp, lr}
   14638:	mov	fp, sp
   1463c:	sub	sp, sp, #16
   14640:	str	r0, [fp, #-4]
   14644:	str	r1, [sp, #8]
   14648:	str	r2, [sp, #4]
   1464c:	ldr	r0, [sp, #8]
   14650:	cmp	r0, #0
   14654:	beq	14664 <__assert_fail@plt+0x357c>
   14658:	ldr	r0, [sp, #4]
   1465c:	cmp	r0, #0
   14660:	bne	14670 <__assert_fail@plt+0x3588>
   14664:	movw	r0, #1
   14668:	str	r0, [sp, #4]
   1466c:	str	r0, [sp, #8]
   14670:	ldr	r0, [sp, #8]
   14674:	cmn	r0, #1
   14678:	bhi	146a0 <__assert_fail@plt+0x35b8>
   1467c:	ldr	r0, [sp, #4]
   14680:	cmn	r0, #1
   14684:	bhi	146a0 <__assert_fail@plt+0x35b8>
   14688:	ldr	r0, [fp, #-4]
   1468c:	ldr	r1, [sp, #8]
   14690:	ldr	r2, [sp, #4]
   14694:	bl	16e48 <__assert_fail@plt+0x5d60>
   14698:	str	r0, [sp]
   1469c:	b	146a8 <__assert_fail@plt+0x35c0>
   146a0:	bl	144e0 <__assert_fail@plt+0x33f8>
   146a4:	str	r0, [sp]
   146a8:	ldr	r0, [sp]
   146ac:	mov	sp, fp
   146b0:	pop	{fp, pc}
   146b4:	push	{fp, lr}
   146b8:	mov	fp, sp
   146bc:	sub	sp, sp, #24
   146c0:	str	r0, [fp, #-4]
   146c4:	ldr	r0, [fp, #-4]
   146c8:	movw	r1, #0
   146cc:	cmp	r0, r1
   146d0:	bne	146f4 <__assert_fail@plt+0x360c>
   146d4:	movw	r0, #328	; 0x148
   146d8:	movt	r0, #3
   146dc:	ldr	r1, [r0]
   146e0:	movw	r0, #62291	; 0xf353
   146e4:	movt	r0, #1
   146e8:	bl	110b8 <fputs@plt>
   146ec:	str	r0, [sp, #8]
   146f0:	bl	110d0 <abort@plt>
   146f4:	ldr	r0, [fp, #-4]
   146f8:	movw	r1, #47	; 0x2f
   146fc:	bl	1107c <strrchr@plt>
   14700:	str	r0, [fp, #-8]
   14704:	ldr	r0, [fp, #-8]
   14708:	movw	r1, #0
   1470c:	cmp	r0, r1
   14710:	beq	14724 <__assert_fail@plt+0x363c>
   14714:	ldr	r0, [fp, #-8]
   14718:	add	r0, r0, #1
   1471c:	str	r0, [sp, #4]
   14720:	b	1472c <__assert_fail@plt+0x3644>
   14724:	ldr	r0, [fp, #-4]
   14728:	str	r0, [sp, #4]
   1472c:	ldr	r0, [sp, #4]
   14730:	str	r0, [sp, #12]
   14734:	ldr	r0, [sp, #12]
   14738:	ldr	r1, [fp, #-4]
   1473c:	sub	r0, r0, r1
   14740:	cmp	r0, #7
   14744:	blt	147b0 <__assert_fail@plt+0x36c8>
   14748:	ldr	r0, [sp, #12]
   1474c:	mvn	r1, #6
   14750:	add	r0, r0, r1
   14754:	movw	r1, #62347	; 0xf38b
   14758:	movt	r1, #1
   1475c:	movw	r2, #7
   14760:	bl	110c4 <strncmp@plt>
   14764:	cmp	r0, #0
   14768:	bne	147b0 <__assert_fail@plt+0x36c8>
   1476c:	ldr	r0, [sp, #12]
   14770:	str	r0, [fp, #-4]
   14774:	ldr	r0, [sp, #12]
   14778:	movw	r1, #62355	; 0xf393
   1477c:	movt	r1, #1
   14780:	movw	r2, #3
   14784:	bl	110c4 <strncmp@plt>
   14788:	cmp	r0, #0
   1478c:	bne	147ac <__assert_fail@plt+0x36c4>
   14790:	ldr	r0, [sp, #12]
   14794:	add	r0, r0, #3
   14798:	str	r0, [fp, #-4]
   1479c:	ldr	r0, [fp, #-4]
   147a0:	movw	r1, #312	; 0x138
   147a4:	movt	r1, #3
   147a8:	str	r0, [r1]
   147ac:	b	147b0 <__assert_fail@plt+0x36c8>
   147b0:	ldr	r0, [fp, #-4]
   147b4:	movw	r1, #360	; 0x168
   147b8:	movt	r1, #3
   147bc:	str	r0, [r1]
   147c0:	ldr	r0, [fp, #-4]
   147c4:	movw	r1, #316	; 0x13c
   147c8:	movt	r1, #3
   147cc:	str	r0, [r1]
   147d0:	mov	sp, fp
   147d4:	pop	{fp, pc}
   147d8:	push	{fp, lr}
   147dc:	mov	fp, sp
   147e0:	sub	sp, sp, #24
   147e4:	str	r0, [fp, #-4]
   147e8:	bl	11010 <__errno_location@plt>
   147ec:	ldr	r0, [r0]
   147f0:	str	r0, [fp, #-8]
   147f4:	ldr	r0, [fp, #-4]
   147f8:	movw	lr, #0
   147fc:	cmp	r0, lr
   14800:	beq	14810 <__assert_fail@plt+0x3728>
   14804:	ldr	r0, [fp, #-4]
   14808:	str	r0, [sp, #8]
   1480c:	b	14820 <__assert_fail@plt+0x3738>
   14810:	movw	r0, #364	; 0x16c
   14814:	movt	r0, #3
   14818:	str	r0, [sp, #8]
   1481c:	b	14820 <__assert_fail@plt+0x3738>
   14820:	ldr	r0, [sp, #8]
   14824:	movw	r1, #48	; 0x30
   14828:	bl	1b7c8 <__assert_fail@plt+0xa6e0>
   1482c:	str	r0, [sp, #12]
   14830:	ldr	r0, [fp, #-8]
   14834:	str	r0, [sp, #4]
   14838:	bl	11010 <__errno_location@plt>
   1483c:	ldr	r1, [sp, #4]
   14840:	str	r1, [r0]
   14844:	ldr	r0, [sp, #12]
   14848:	mov	sp, fp
   1484c:	pop	{fp, pc}
   14850:	sub	sp, sp, #8
   14854:	str	r0, [sp, #4]
   14858:	ldr	r0, [sp, #4]
   1485c:	movw	r1, #0
   14860:	cmp	r0, r1
   14864:	beq	14874 <__assert_fail@plt+0x378c>
   14868:	ldr	r0, [sp, #4]
   1486c:	str	r0, [sp]
   14870:	b	14884 <__assert_fail@plt+0x379c>
   14874:	movw	r0, #364	; 0x16c
   14878:	movt	r0, #3
   1487c:	str	r0, [sp]
   14880:	b	14884 <__assert_fail@plt+0x379c>
   14884:	ldr	r0, [sp]
   14888:	ldr	r0, [r0]
   1488c:	add	sp, sp, #8
   14890:	bx	lr
   14894:	sub	sp, sp, #16
   14898:	str	r0, [sp, #12]
   1489c:	str	r1, [sp, #8]
   148a0:	ldr	r0, [sp, #8]
   148a4:	ldr	r1, [sp, #12]
   148a8:	movw	r2, #0
   148ac:	cmp	r1, r2
   148b0:	str	r0, [sp, #4]
   148b4:	beq	148c4 <__assert_fail@plt+0x37dc>
   148b8:	ldr	r0, [sp, #12]
   148bc:	str	r0, [sp]
   148c0:	b	148d4 <__assert_fail@plt+0x37ec>
   148c4:	movw	r0, #364	; 0x16c
   148c8:	movt	r0, #3
   148cc:	str	r0, [sp]
   148d0:	b	148d4 <__assert_fail@plt+0x37ec>
   148d4:	ldr	r0, [sp]
   148d8:	ldr	r1, [sp, #4]
   148dc:	str	r1, [r0]
   148e0:	add	sp, sp, #16
   148e4:	bx	lr
   148e8:	sub	sp, sp, #32
   148ec:	str	r0, [sp, #28]
   148f0:	strb	r1, [sp, #27]
   148f4:	str	r2, [sp, #20]
   148f8:	ldrb	r0, [sp, #27]
   148fc:	strb	r0, [sp, #19]
   14900:	ldr	r0, [sp, #28]
   14904:	movw	r1, #0
   14908:	cmp	r0, r1
   1490c:	beq	1491c <__assert_fail@plt+0x3834>
   14910:	ldr	r0, [sp, #28]
   14914:	str	r0, [sp]
   14918:	b	1492c <__assert_fail@plt+0x3844>
   1491c:	movw	r0, #364	; 0x16c
   14920:	movt	r0, #3
   14924:	str	r0, [sp]
   14928:	b	1492c <__assert_fail@plt+0x3844>
   1492c:	ldr	r0, [sp]
   14930:	add	r0, r0, #8
   14934:	ldrb	r1, [sp, #19]
   14938:	lsr	r1, r1, #5
   1493c:	add	r0, r0, r1, lsl #2
   14940:	str	r0, [sp, #12]
   14944:	ldrb	r0, [sp, #19]
   14948:	and	r0, r0, #31
   1494c:	str	r0, [sp, #8]
   14950:	ldr	r0, [sp, #12]
   14954:	ldr	r0, [r0]
   14958:	ldr	r1, [sp, #8]
   1495c:	lsr	r0, r0, r1
   14960:	and	r0, r0, #1
   14964:	str	r0, [sp, #4]
   14968:	ldr	r0, [sp, #20]
   1496c:	and	r0, r0, #1
   14970:	ldr	r1, [sp, #4]
   14974:	eor	r0, r0, r1
   14978:	ldr	r1, [sp, #8]
   1497c:	lsl	r0, r0, r1
   14980:	ldr	r1, [sp, #12]
   14984:	ldr	r2, [r1]
   14988:	eor	r0, r2, r0
   1498c:	str	r0, [r1]
   14990:	ldr	r0, [sp, #4]
   14994:	add	sp, sp, #32
   14998:	bx	lr
   1499c:	sub	sp, sp, #12
   149a0:	str	r0, [sp, #8]
   149a4:	str	r1, [sp, #4]
   149a8:	ldr	r0, [sp, #8]
   149ac:	movw	r1, #0
   149b0:	cmp	r0, r1
   149b4:	bne	149c4 <__assert_fail@plt+0x38dc>
   149b8:	movw	r0, #364	; 0x16c
   149bc:	movt	r0, #3
   149c0:	str	r0, [sp, #8]
   149c4:	ldr	r0, [sp, #8]
   149c8:	ldr	r0, [r0, #4]
   149cc:	str	r0, [sp]
   149d0:	ldr	r0, [sp, #4]
   149d4:	ldr	r1, [sp, #8]
   149d8:	str	r0, [r1, #4]
   149dc:	ldr	r0, [sp]
   149e0:	add	sp, sp, #12
   149e4:	bx	lr
   149e8:	push	{fp, lr}
   149ec:	mov	fp, sp
   149f0:	sub	sp, sp, #16
   149f4:	str	r0, [fp, #-4]
   149f8:	str	r1, [sp, #8]
   149fc:	str	r2, [sp, #4]
   14a00:	ldr	r0, [fp, #-4]
   14a04:	movw	r1, #0
   14a08:	cmp	r0, r1
   14a0c:	bne	14a1c <__assert_fail@plt+0x3934>
   14a10:	movw	r0, #364	; 0x16c
   14a14:	movt	r0, #3
   14a18:	str	r0, [fp, #-4]
   14a1c:	ldr	r0, [fp, #-4]
   14a20:	movw	r1, #10
   14a24:	str	r1, [r0]
   14a28:	ldr	r0, [sp, #8]
   14a2c:	movw	r1, #0
   14a30:	cmp	r0, r1
   14a34:	beq	14a48 <__assert_fail@plt+0x3960>
   14a38:	ldr	r0, [sp, #4]
   14a3c:	movw	r1, #0
   14a40:	cmp	r0, r1
   14a44:	bne	14a4c <__assert_fail@plt+0x3964>
   14a48:	bl	110d0 <abort@plt>
   14a4c:	ldr	r0, [sp, #8]
   14a50:	ldr	r1, [fp, #-4]
   14a54:	str	r0, [r1, #40]	; 0x28
   14a58:	ldr	r0, [sp, #4]
   14a5c:	ldr	r1, [fp, #-4]
   14a60:	str	r0, [r1, #44]	; 0x2c
   14a64:	mov	sp, fp
   14a68:	pop	{fp, pc}
   14a6c:	push	{r4, r5, r6, sl, fp, lr}
   14a70:	add	fp, sp, #16
   14a74:	sub	sp, sp, #64	; 0x40
   14a78:	ldr	ip, [fp, #8]
   14a7c:	str	r0, [fp, #-20]	; 0xffffffec
   14a80:	str	r1, [fp, #-24]	; 0xffffffe8
   14a84:	str	r2, [fp, #-28]	; 0xffffffe4
   14a88:	str	r3, [fp, #-32]	; 0xffffffe0
   14a8c:	ldr	r0, [fp, #8]
   14a90:	movw	r1, #0
   14a94:	cmp	r0, r1
   14a98:	str	ip, [sp, #32]
   14a9c:	beq	14aac <__assert_fail@plt+0x39c4>
   14aa0:	ldr	r0, [fp, #8]
   14aa4:	str	r0, [sp, #28]
   14aa8:	b	14abc <__assert_fail@plt+0x39d4>
   14aac:	movw	r0, #364	; 0x16c
   14ab0:	movt	r0, #3
   14ab4:	str	r0, [sp, #28]
   14ab8:	b	14abc <__assert_fail@plt+0x39d4>
   14abc:	ldr	r0, [sp, #28]
   14ac0:	str	r0, [fp, #-36]	; 0xffffffdc
   14ac4:	bl	11010 <__errno_location@plt>
   14ac8:	ldr	r0, [r0]
   14acc:	str	r0, [sp, #40]	; 0x28
   14ad0:	ldr	r0, [fp, #-20]	; 0xffffffec
   14ad4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14ad8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14adc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14ae0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   14ae4:	ldr	lr, [lr]
   14ae8:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14aec:	ldr	ip, [ip, #4]
   14af0:	ldr	r4, [fp, #-36]	; 0xffffffdc
   14af4:	add	r4, r4, #8
   14af8:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14afc:	ldr	r5, [r5, #40]	; 0x28
   14b00:	ldr	r6, [fp, #-36]	; 0xffffffdc
   14b04:	ldr	r6, [r6, #44]	; 0x2c
   14b08:	str	lr, [sp]
   14b0c:	str	ip, [sp, #4]
   14b10:	str	r4, [sp, #8]
   14b14:	str	r5, [sp, #12]
   14b18:	str	r6, [sp, #16]
   14b1c:	bl	14b44 <__assert_fail@plt+0x3a5c>
   14b20:	str	r0, [sp, #36]	; 0x24
   14b24:	ldr	r0, [sp, #40]	; 0x28
   14b28:	str	r0, [sp, #24]
   14b2c:	bl	11010 <__errno_location@plt>
   14b30:	ldr	r1, [sp, #24]
   14b34:	str	r1, [r0]
   14b38:	ldr	r0, [sp, #36]	; 0x24
   14b3c:	sub	sp, fp, #16
   14b40:	pop	{r4, r5, r6, sl, fp, pc}
   14b44:	push	{r4, r5, r6, sl, fp, lr}
   14b48:	add	fp, sp, #16
   14b4c:	sub	sp, sp, #168	; 0xa8
   14b50:	ldr	ip, [fp, #24]
   14b54:	ldr	lr, [fp, #20]
   14b58:	ldr	r4, [fp, #16]
   14b5c:	ldr	r5, [fp, #12]
   14b60:	ldr	r6, [fp, #8]
   14b64:	str	r0, [fp, #-24]	; 0xffffffe8
   14b68:	str	r1, [fp, #-28]	; 0xffffffe4
   14b6c:	str	r2, [fp, #-32]	; 0xffffffe0
   14b70:	str	r3, [fp, #-36]	; 0xffffffdc
   14b74:	movw	r0, #0
   14b78:	str	r0, [fp, #-44]	; 0xffffffd4
   14b7c:	str	r0, [fp, #-48]	; 0xffffffd0
   14b80:	str	r0, [fp, #-52]	; 0xffffffcc
   14b84:	str	r0, [fp, #-56]	; 0xffffffc8
   14b88:	movw	r0, #0
   14b8c:	strb	r0, [fp, #-57]	; 0xffffffc7
   14b90:	str	r6, [sp, #80]	; 0x50
   14b94:	str	lr, [sp, #76]	; 0x4c
   14b98:	str	r4, [sp, #72]	; 0x48
   14b9c:	str	r5, [sp, #68]	; 0x44
   14ba0:	str	ip, [sp, #64]	; 0x40
   14ba4:	bl	10f50 <__ctype_get_mb_cur_max@plt>
   14ba8:	cmp	r0, #1
   14bac:	movw	r0, #0
   14bb0:	moveq	r0, #1
   14bb4:	and	r0, r0, #1
   14bb8:	strb	r0, [fp, #-58]	; 0xffffffc6
   14bbc:	ldr	r0, [fp, #12]
   14bc0:	and	r0, r0, #2
   14bc4:	cmp	r0, #0
   14bc8:	movw	r0, #0
   14bcc:	movne	r0, #1
   14bd0:	and	r0, r0, #1
   14bd4:	strb	r0, [fp, #-59]	; 0xffffffc5
   14bd8:	movw	r0, #0
   14bdc:	strb	r0, [fp, #-60]	; 0xffffffc4
   14be0:	strb	r0, [fp, #-61]	; 0xffffffc3
   14be4:	movw	r0, #1
   14be8:	strb	r0, [fp, #-62]	; 0xffffffc2
   14bec:	ldr	r0, [fp, #8]
   14bf0:	cmp	r0, #10
   14bf4:	str	r0, [sp, #60]	; 0x3c
   14bf8:	bhi	14e20 <__assert_fail@plt+0x3d38>
   14bfc:	add	r0, pc, #8
   14c00:	ldr	r1, [sp, #60]	; 0x3c
   14c04:	ldr	r0, [r0, r1, lsl #2]
   14c08:	mov	pc, r0
   14c0c:	andeq	r4, r1, r4, lsl lr
   14c10:	muleq	r1, r0, sp
   14c14:			; <UNDEFINED> instruction: 0x00014db0
   14c18:	andeq	r4, r1, r8, lsl #27
   14c1c:	muleq	r1, r8, sp
   14c20:	andeq	r4, r1, r8, asr #24
   14c24:	andeq	r4, r1, r8, lsr ip
   14c28:	andeq	r4, r1, ip, lsr #25
   14c2c:	andeq	r4, r1, r0, asr #25
   14c30:	andeq	r4, r1, r0, asr #25
   14c34:	andeq	r4, r1, r0, asr #25
   14c38:	movw	r0, #5
   14c3c:	str	r0, [fp, #8]
   14c40:	movw	r0, #1
   14c44:	strb	r0, [fp, #-59]	; 0xffffffc5
   14c48:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14c4c:	tst	r0, #1
   14c50:	bne	14c8c <__assert_fail@plt+0x3ba4>
   14c54:	b	14c58 <__assert_fail@plt+0x3b70>
   14c58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14c60:	cmp	r0, r1
   14c64:	bcs	14c7c <__assert_fail@plt+0x3b94>
   14c68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c70:	add	r0, r0, r1
   14c74:	movw	r1, #34	; 0x22
   14c78:	strb	r1, [r0]
   14c7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c80:	add	r0, r0, #1
   14c84:	str	r0, [fp, #-44]	; 0xffffffd4
   14c88:	b	14c8c <__assert_fail@plt+0x3ba4>
   14c8c:	movw	r0, #1
   14c90:	strb	r0, [fp, #-57]	; 0xffffffc7
   14c94:	movw	r0, #62435	; 0xf3e3
   14c98:	movt	r0, #1
   14c9c:	str	r0, [fp, #-52]	; 0xffffffcc
   14ca0:	movw	r0, #1
   14ca4:	str	r0, [fp, #-56]	; 0xffffffc8
   14ca8:	b	14e24 <__assert_fail@plt+0x3d3c>
   14cac:	movw	r0, #1
   14cb0:	strb	r0, [fp, #-57]	; 0xffffffc7
   14cb4:	movw	r0, #0
   14cb8:	strb	r0, [fp, #-59]	; 0xffffffc5
   14cbc:	b	14e24 <__assert_fail@plt+0x3d3c>
   14cc0:	ldr	r0, [fp, #8]
   14cc4:	cmp	r0, #10
   14cc8:	beq	14cf4 <__assert_fail@plt+0x3c0c>
   14ccc:	ldr	r1, [fp, #8]
   14cd0:	movw	r0, #62437	; 0xf3e5
   14cd4:	movt	r0, #1
   14cd8:	bl	16d34 <__assert_fail@plt+0x5c4c>
   14cdc:	str	r0, [fp, #20]
   14ce0:	ldr	r1, [fp, #8]
   14ce4:	movw	r0, #62439	; 0xf3e7
   14ce8:	movt	r0, #1
   14cec:	bl	16d34 <__assert_fail@plt+0x5c4c>
   14cf0:	str	r0, [fp, #24]
   14cf4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14cf8:	tst	r0, #1
   14cfc:	bne	14d68 <__assert_fail@plt+0x3c80>
   14d00:	ldr	r0, [fp, #20]
   14d04:	str	r0, [fp, #-52]	; 0xffffffcc
   14d08:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14d0c:	ldrsb	r0, [r0]
   14d10:	cmp	r0, #0
   14d14:	beq	14d64 <__assert_fail@plt+0x3c7c>
   14d18:	b	14d1c <__assert_fail@plt+0x3c34>
   14d1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14d24:	cmp	r0, r1
   14d28:	bcs	14d44 <__assert_fail@plt+0x3c5c>
   14d2c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14d30:	ldrb	r0, [r0]
   14d34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14d38:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14d3c:	add	r1, r1, r2
   14d40:	strb	r0, [r1]
   14d44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d48:	add	r0, r0, #1
   14d4c:	str	r0, [fp, #-44]	; 0xffffffd4
   14d50:	b	14d54 <__assert_fail@plt+0x3c6c>
   14d54:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14d58:	add	r0, r0, #1
   14d5c:	str	r0, [fp, #-52]	; 0xffffffcc
   14d60:	b	14d08 <__assert_fail@plt+0x3c20>
   14d64:	b	14d68 <__assert_fail@plt+0x3c80>
   14d68:	movw	r0, #1
   14d6c:	strb	r0, [fp, #-57]	; 0xffffffc7
   14d70:	ldr	r0, [fp, #24]
   14d74:	str	r0, [fp, #-52]	; 0xffffffcc
   14d78:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14d7c:	bl	10fec <strlen@plt>
   14d80:	str	r0, [fp, #-56]	; 0xffffffc8
   14d84:	b	14e24 <__assert_fail@plt+0x3d3c>
   14d88:	movw	r0, #1
   14d8c:	strb	r0, [fp, #-57]	; 0xffffffc7
   14d90:	movw	r0, #1
   14d94:	strb	r0, [fp, #-59]	; 0xffffffc5
   14d98:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14d9c:	tst	r0, #1
   14da0:	bne	14dac <__assert_fail@plt+0x3cc4>
   14da4:	movw	r0, #1
   14da8:	strb	r0, [fp, #-57]	; 0xffffffc7
   14dac:	b	14db0 <__assert_fail@plt+0x3cc8>
   14db0:	movw	r0, #2
   14db4:	str	r0, [fp, #8]
   14db8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14dbc:	tst	r0, #1
   14dc0:	bne	14dfc <__assert_fail@plt+0x3d14>
   14dc4:	b	14dc8 <__assert_fail@plt+0x3ce0>
   14dc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14dcc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14dd0:	cmp	r0, r1
   14dd4:	bcs	14dec <__assert_fail@plt+0x3d04>
   14dd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ddc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14de0:	add	r0, r0, r1
   14de4:	movw	r1, #39	; 0x27
   14de8:	strb	r1, [r0]
   14dec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14df0:	add	r0, r0, #1
   14df4:	str	r0, [fp, #-44]	; 0xffffffd4
   14df8:	b	14dfc <__assert_fail@plt+0x3d14>
   14dfc:	movw	r0, #62439	; 0xf3e7
   14e00:	movt	r0, #1
   14e04:	str	r0, [fp, #-52]	; 0xffffffcc
   14e08:	movw	r0, #1
   14e0c:	str	r0, [fp, #-56]	; 0xffffffc8
   14e10:	b	14e24 <__assert_fail@plt+0x3d3c>
   14e14:	movw	r0, #0
   14e18:	strb	r0, [fp, #-59]	; 0xffffffc5
   14e1c:	b	14e24 <__assert_fail@plt+0x3d3c>
   14e20:	bl	110d0 <abort@plt>
   14e24:	movw	r0, #0
   14e28:	str	r0, [fp, #-40]	; 0xffffffd8
   14e2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14e30:	cmn	r0, #1
   14e34:	bne	14e60 <__assert_fail@plt+0x3d78>
   14e38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14e3c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14e40:	add	r0, r0, r1
   14e44:	ldrb	r0, [r0]
   14e48:	cmp	r0, #0
   14e4c:	movw	r0, #0
   14e50:	moveq	r0, #1
   14e54:	and	r0, r0, #1
   14e58:	str	r0, [sp, #56]	; 0x38
   14e5c:	b	14e7c <__assert_fail@plt+0x3d94>
   14e60:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14e64:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14e68:	cmp	r0, r1
   14e6c:	movw	r0, #0
   14e70:	moveq	r0, #1
   14e74:	and	r0, r0, #1
   14e78:	str	r0, [sp, #56]	; 0x38
   14e7c:	ldr	r0, [sp, #56]	; 0x38
   14e80:	cmp	r0, #0
   14e84:	movw	r0, #0
   14e88:	movne	r0, #1
   14e8c:	mvn	r1, #0
   14e90:	eor	r0, r0, r1
   14e94:	tst	r0, #1
   14e98:	beq	16088 <__assert_fail@plt+0x4fa0>
   14e9c:	movw	r0, #0
   14ea0:	strb	r0, [fp, #-65]	; 0xffffffbf
   14ea4:	strb	r0, [fp, #-66]	; 0xffffffbe
   14ea8:	strb	r0, [fp, #-67]	; 0xffffffbd
   14eac:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14eb0:	tst	r0, #1
   14eb4:	beq	14f60 <__assert_fail@plt+0x3e78>
   14eb8:	ldr	r0, [fp, #8]
   14ebc:	cmp	r0, #2
   14ec0:	beq	14f60 <__assert_fail@plt+0x3e78>
   14ec4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14ec8:	cmp	r0, #0
   14ecc:	beq	14f60 <__assert_fail@plt+0x3e78>
   14ed0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14ed4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14ed8:	add	r0, r0, r1
   14edc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14ee0:	cmn	r1, #1
   14ee4:	str	r0, [sp, #52]	; 0x34
   14ee8:	bne	14f10 <__assert_fail@plt+0x3e28>
   14eec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14ef0:	movw	r1, #1
   14ef4:	cmp	r1, r0
   14ef8:	bcs	14f10 <__assert_fail@plt+0x3e28>
   14efc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14f00:	bl	10fec <strlen@plt>
   14f04:	str	r0, [fp, #-36]	; 0xffffffdc
   14f08:	str	r0, [sp, #48]	; 0x30
   14f0c:	b	14f18 <__assert_fail@plt+0x3e30>
   14f10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14f14:	str	r0, [sp, #48]	; 0x30
   14f18:	ldr	r0, [sp, #48]	; 0x30
   14f1c:	ldr	r1, [sp, #52]	; 0x34
   14f20:	cmp	r1, r0
   14f24:	bhi	14f60 <__assert_fail@plt+0x3e78>
   14f28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14f2c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14f30:	add	r0, r0, r1
   14f34:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14f38:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14f3c:	bl	10f08 <memcmp@plt>
   14f40:	cmp	r0, #0
   14f44:	bne	14f60 <__assert_fail@plt+0x3e78>
   14f48:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14f4c:	tst	r0, #1
   14f50:	beq	14f58 <__assert_fail@plt+0x3e70>
   14f54:	b	16208 <__assert_fail@plt+0x5120>
   14f58:	movw	r0, #1
   14f5c:	strb	r0, [fp, #-65]	; 0xffffffbf
   14f60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14f64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14f68:	ldrb	r0, [r0, r1]
   14f6c:	strb	r0, [fp, #-63]	; 0xffffffc1
   14f70:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14f74:	mov	r1, r0
   14f78:	cmp	r0, #126	; 0x7e
   14f7c:	str	r1, [sp, #44]	; 0x2c
   14f80:	bhi	157f0 <__assert_fail@plt+0x4708>
   14f84:	add	r0, pc, #8
   14f88:	ldr	r1, [sp, #44]	; 0x2c
   14f8c:	ldr	r0, [r0, r1, lsl #2]
   14f90:	mov	pc, r0
   14f94:	muleq	r1, r0, r1
   14f98:	strdeq	r5, [r1], -r0
   14f9c:	strdeq	r5, [r1], -r0
   14fa0:	strdeq	r5, [r1], -r0
   14fa4:	strdeq	r5, [r1], -r0
   14fa8:	strdeq	r5, [r1], -r0
   14fac:	strdeq	r5, [r1], -r0
   14fb0:	muleq	r1, r8, r5
   14fb4:	andeq	r5, r1, r4, lsr #11
   14fb8:	ldrdeq	r5, [r1], -r4
   14fbc:			; <UNDEFINED> instruction: 0x000155bc
   14fc0:	andeq	r5, r1, r0, ror #11
   14fc4:			; <UNDEFINED> instruction: 0x000155b0
   14fc8:	andeq	r5, r1, r8, asr #11
   14fcc:	strdeq	r5, [r1], -r0
   14fd0:	strdeq	r5, [r1], -r0
   14fd4:	strdeq	r5, [r1], -r0
   14fd8:	strdeq	r5, [r1], -r0
   14fdc:	strdeq	r5, [r1], -r0
   14fe0:	strdeq	r5, [r1], -r0
   14fe4:	strdeq	r5, [r1], -r0
   14fe8:	strdeq	r5, [r1], -r0
   14fec:	strdeq	r5, [r1], -r0
   14ff0:	strdeq	r5, [r1], -r0
   14ff4:	strdeq	r5, [r1], -r0
   14ff8:	strdeq	r5, [r1], -r0
   14ffc:	strdeq	r5, [r1], -r0
   15000:	strdeq	r5, [r1], -r0
   15004:	strdeq	r5, [r1], -r0
   15008:	strdeq	r5, [r1], -r0
   1500c:	strdeq	r5, [r1], -r0
   15010:	strdeq	r5, [r1], -r0
   15014:	andeq	r5, r1, r4, asr #13
   15018:	andeq	r5, r1, ip, asr #13
   1501c:	andeq	r5, r1, ip, asr #13
   15020:			; <UNDEFINED> instruction: 0x000156b0
   15024:	andeq	r5, r1, ip, asr #13
   15028:	andeq	r5, r1, r4, ror #15
   1502c:	andeq	r5, r1, ip, asr #13
   15030:	andeq	r5, r1, ip, ror #13
   15034:	andeq	r5, r1, ip, asr #13
   15038:	andeq	r5, r1, ip, asr #13
   1503c:	andeq	r5, r1, ip, asr #13
   15040:	andeq	r5, r1, r4, ror #15
   15044:	andeq	r5, r1, r4, ror #15
   15048:	andeq	r5, r1, r4, ror #15
   1504c:	andeq	r5, r1, r4, ror #15
   15050:	andeq	r5, r1, r4, ror #15
   15054:	andeq	r5, r1, r4, ror #15
   15058:	andeq	r5, r1, r4, ror #15
   1505c:	andeq	r5, r1, r4, ror #15
   15060:	andeq	r5, r1, r4, ror #15
   15064:	andeq	r5, r1, r4, ror #15
   15068:	andeq	r5, r1, r4, ror #15
   1506c:	andeq	r5, r1, r4, ror #15
   15070:	andeq	r5, r1, r4, ror #15
   15074:	andeq	r5, r1, r4, ror #15
   15078:	andeq	r5, r1, r4, ror #15
   1507c:	andeq	r5, r1, r4, ror #15
   15080:	andeq	r5, r1, ip, asr #13
   15084:	andeq	r5, r1, ip, asr #13
   15088:	andeq	r5, r1, ip, asr #13
   1508c:	andeq	r5, r1, ip, asr #13
   15090:	muleq	r1, ip, r3
   15094:	strdeq	r5, [r1], -r0
   15098:	andeq	r5, r1, r4, ror #15
   1509c:	andeq	r5, r1, r4, ror #15
   150a0:	andeq	r5, r1, r4, ror #15
   150a4:	andeq	r5, r1, r4, ror #15
   150a8:	andeq	r5, r1, r4, ror #15
   150ac:	andeq	r5, r1, r4, ror #15
   150b0:	andeq	r5, r1, r4, ror #15
   150b4:	andeq	r5, r1, r4, ror #15
   150b8:	andeq	r5, r1, r4, ror #15
   150bc:	andeq	r5, r1, r4, ror #15
   150c0:	andeq	r5, r1, r4, ror #15
   150c4:	andeq	r5, r1, r4, ror #15
   150c8:	andeq	r5, r1, r4, ror #15
   150cc:	andeq	r5, r1, r4, ror #15
   150d0:	andeq	r5, r1, r4, ror #15
   150d4:	andeq	r5, r1, r4, ror #15
   150d8:	andeq	r5, r1, r4, ror #15
   150dc:	andeq	r5, r1, r4, ror #15
   150e0:	andeq	r5, r1, r4, ror #15
   150e4:	andeq	r5, r1, r4, ror #15
   150e8:	andeq	r5, r1, r4, ror #15
   150ec:	andeq	r5, r1, r4, ror #15
   150f0:	andeq	r5, r1, r4, ror #15
   150f4:	andeq	r5, r1, r4, ror #15
   150f8:	andeq	r5, r1, r4, ror #15
   150fc:	andeq	r5, r1, r4, ror #15
   15100:	andeq	r5, r1, ip, asr #13
   15104:	andeq	r5, r1, ip, ror #11
   15108:	andeq	r5, r1, r4, ror #15
   1510c:	andeq	r5, r1, ip, asr #13
   15110:	andeq	r5, r1, r4, ror #15
   15114:	andeq	r5, r1, ip, asr #13
   15118:	andeq	r5, r1, r4, ror #15
   1511c:	andeq	r5, r1, r4, ror #15
   15120:	andeq	r5, r1, r4, ror #15
   15124:	andeq	r5, r1, r4, ror #15
   15128:	andeq	r5, r1, r4, ror #15
   1512c:	andeq	r5, r1, r4, ror #15
   15130:	andeq	r5, r1, r4, ror #15
   15134:	andeq	r5, r1, r4, ror #15
   15138:	andeq	r5, r1, r4, ror #15
   1513c:	andeq	r5, r1, r4, ror #15
   15140:	andeq	r5, r1, r4, ror #15
   15144:	andeq	r5, r1, r4, ror #15
   15148:	andeq	r5, r1, r4, ror #15
   1514c:	andeq	r5, r1, r4, ror #15
   15150:	andeq	r5, r1, r4, ror #15
   15154:	andeq	r5, r1, r4, ror #15
   15158:	andeq	r5, r1, r4, ror #15
   1515c:	andeq	r5, r1, r4, ror #15
   15160:	andeq	r5, r1, r4, ror #15
   15164:	andeq	r5, r1, r4, ror #15
   15168:	andeq	r5, r1, r4, ror #15
   1516c:	andeq	r5, r1, r4, ror #15
   15170:	andeq	r5, r1, r4, ror #15
   15174:	andeq	r5, r1, r4, ror #15
   15178:	andeq	r5, r1, r4, ror #15
   1517c:	andeq	r5, r1, r4, ror #15
   15180:	andeq	r5, r1, ip, ror r6
   15184:	andeq	r5, r1, ip, asr #13
   15188:	andeq	r5, r1, ip, ror r6
   1518c:			; <UNDEFINED> instruction: 0x000156b0
   15190:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15194:	tst	r0, #1
   15198:	beq	15380 <__assert_fail@plt+0x4298>
   1519c:	b	151a0 <__assert_fail@plt+0x40b8>
   151a0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   151a4:	tst	r0, #1
   151a8:	beq	151b0 <__assert_fail@plt+0x40c8>
   151ac:	b	16208 <__assert_fail@plt+0x5120>
   151b0:	movw	r0, #1
   151b4:	strb	r0, [fp, #-66]	; 0xffffffbe
   151b8:	ldr	r0, [fp, #8]
   151bc:	cmp	r0, #2
   151c0:	bne	15274 <__assert_fail@plt+0x418c>
   151c4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   151c8:	tst	r0, #1
   151cc:	bne	15274 <__assert_fail@plt+0x418c>
   151d0:	b	151d4 <__assert_fail@plt+0x40ec>
   151d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   151d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   151dc:	cmp	r0, r1
   151e0:	bcs	151f8 <__assert_fail@plt+0x4110>
   151e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   151ec:	add	r0, r0, r1
   151f0:	movw	r1, #39	; 0x27
   151f4:	strb	r1, [r0]
   151f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   151fc:	add	r0, r0, #1
   15200:	str	r0, [fp, #-44]	; 0xffffffd4
   15204:	b	15208 <__assert_fail@plt+0x4120>
   15208:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1520c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15210:	cmp	r0, r1
   15214:	bcs	1522c <__assert_fail@plt+0x4144>
   15218:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1521c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15220:	add	r0, r0, r1
   15224:	movw	r1, #36	; 0x24
   15228:	strb	r1, [r0]
   1522c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15230:	add	r0, r0, #1
   15234:	str	r0, [fp, #-44]	; 0xffffffd4
   15238:	b	1523c <__assert_fail@plt+0x4154>
   1523c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15240:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15244:	cmp	r0, r1
   15248:	bcs	15260 <__assert_fail@plt+0x4178>
   1524c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15250:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15254:	add	r0, r0, r1
   15258:	movw	r1, #39	; 0x27
   1525c:	strb	r1, [r0]
   15260:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15264:	add	r0, r0, #1
   15268:	str	r0, [fp, #-44]	; 0xffffffd4
   1526c:	movw	r0, #1
   15270:	strb	r0, [fp, #-60]	; 0xffffffc4
   15274:	b	15278 <__assert_fail@plt+0x4190>
   15278:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1527c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15280:	cmp	r0, r1
   15284:	bcs	1529c <__assert_fail@plt+0x41b4>
   15288:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1528c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15290:	add	r0, r0, r1
   15294:	movw	r1, #92	; 0x5c
   15298:	strb	r1, [r0]
   1529c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   152a0:	add	r0, r0, #1
   152a4:	str	r0, [fp, #-44]	; 0xffffffd4
   152a8:	b	152ac <__assert_fail@plt+0x41c4>
   152ac:	ldr	r0, [fp, #8]
   152b0:	cmp	r0, #2
   152b4:	beq	15374 <__assert_fail@plt+0x428c>
   152b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   152bc:	add	r0, r0, #1
   152c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   152c4:	cmp	r0, r1
   152c8:	bcs	15374 <__assert_fail@plt+0x428c>
   152cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   152d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   152d4:	add	r1, r1, #1
   152d8:	add	r0, r0, r1
   152dc:	ldrb	r0, [r0]
   152e0:	movw	r1, #48	; 0x30
   152e4:	cmp	r1, r0
   152e8:	bgt	15374 <__assert_fail@plt+0x428c>
   152ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   152f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   152f4:	add	r1, r1, #1
   152f8:	add	r0, r0, r1
   152fc:	ldrb	r0, [r0]
   15300:	cmp	r0, #57	; 0x39
   15304:	bgt	15374 <__assert_fail@plt+0x428c>
   15308:	b	1530c <__assert_fail@plt+0x4224>
   1530c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15310:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15314:	cmp	r0, r1
   15318:	bcs	15330 <__assert_fail@plt+0x4248>
   1531c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15320:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15324:	add	r0, r0, r1
   15328:	movw	r1, #48	; 0x30
   1532c:	strb	r1, [r0]
   15330:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15334:	add	r0, r0, #1
   15338:	str	r0, [fp, #-44]	; 0xffffffd4
   1533c:	b	15340 <__assert_fail@plt+0x4258>
   15340:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15344:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15348:	cmp	r0, r1
   1534c:	bcs	15364 <__assert_fail@plt+0x427c>
   15350:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15354:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15358:	add	r0, r0, r1
   1535c:	movw	r1, #48	; 0x30
   15360:	strb	r1, [r0]
   15364:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15368:	add	r0, r0, #1
   1536c:	str	r0, [fp, #-44]	; 0xffffffd4
   15370:	b	15374 <__assert_fail@plt+0x428c>
   15374:	movw	r0, #48	; 0x30
   15378:	strb	r0, [fp, #-63]	; 0xffffffc1
   1537c:	b	15398 <__assert_fail@plt+0x42b0>
   15380:	ldr	r0, [fp, #12]
   15384:	and	r0, r0, #1
   15388:	cmp	r0, #0
   1538c:	beq	15394 <__assert_fail@plt+0x42ac>
   15390:	b	16078 <__assert_fail@plt+0x4f90>
   15394:	b	15398 <__assert_fail@plt+0x42b0>
   15398:	b	15e14 <__assert_fail@plt+0x4d2c>
   1539c:	ldr	r0, [fp, #8]
   153a0:	cmp	r0, #2
   153a4:	str	r0, [sp, #40]	; 0x28
   153a8:	beq	153c0 <__assert_fail@plt+0x42d8>
   153ac:	b	153b0 <__assert_fail@plt+0x42c8>
   153b0:	ldr	r0, [sp, #40]	; 0x28
   153b4:	cmp	r0, #5
   153b8:	beq	153d4 <__assert_fail@plt+0x42ec>
   153bc:	b	15590 <__assert_fail@plt+0x44a8>
   153c0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   153c4:	tst	r0, #1
   153c8:	beq	153d0 <__assert_fail@plt+0x42e8>
   153cc:	b	16208 <__assert_fail@plt+0x5120>
   153d0:	b	15594 <__assert_fail@plt+0x44ac>
   153d4:	ldr	r0, [fp, #12]
   153d8:	and	r0, r0, #4
   153dc:	cmp	r0, #0
   153e0:	beq	1558c <__assert_fail@plt+0x44a4>
   153e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   153e8:	add	r0, r0, #2
   153ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   153f0:	cmp	r0, r1
   153f4:	bcs	1558c <__assert_fail@plt+0x44a4>
   153f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   153fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15400:	add	r1, r1, #1
   15404:	add	r0, r0, r1
   15408:	ldrb	r0, [r0]
   1540c:	cmp	r0, #63	; 0x3f
   15410:	bne	1558c <__assert_fail@plt+0x44a4>
   15414:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15418:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1541c:	add	r0, r0, r1
   15420:	ldrb	r0, [r0, #2]
   15424:	mov	r1, r0
   15428:	cmp	r0, #33	; 0x21
   1542c:	str	r1, [sp, #36]	; 0x24
   15430:	beq	15480 <__assert_fail@plt+0x4398>
   15434:	b	15438 <__assert_fail@plt+0x4350>
   15438:	ldr	r0, [sp, #36]	; 0x24
   1543c:	sub	r1, r0, #39	; 0x27
   15440:	cmp	r1, #3
   15444:	bcc	15480 <__assert_fail@plt+0x4398>
   15448:	b	1544c <__assert_fail@plt+0x4364>
   1544c:	ldr	r0, [sp, #36]	; 0x24
   15450:	cmp	r0, #45	; 0x2d
   15454:	beq	15480 <__assert_fail@plt+0x4398>
   15458:	b	1545c <__assert_fail@plt+0x4374>
   1545c:	ldr	r0, [sp, #36]	; 0x24
   15460:	cmp	r0, #47	; 0x2f
   15464:	beq	15480 <__assert_fail@plt+0x4398>
   15468:	b	1546c <__assert_fail@plt+0x4384>
   1546c:	ldr	r0, [sp, #36]	; 0x24
   15470:	sub	r1, r0, #60	; 0x3c
   15474:	cmp	r1, #2
   15478:	bhi	15584 <__assert_fail@plt+0x449c>
   1547c:	b	15480 <__assert_fail@plt+0x4398>
   15480:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15484:	tst	r0, #1
   15488:	beq	15490 <__assert_fail@plt+0x43a8>
   1548c:	b	16208 <__assert_fail@plt+0x5120>
   15490:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15494:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15498:	add	r1, r1, #2
   1549c:	add	r0, r0, r1
   154a0:	ldrb	r0, [r0]
   154a4:	strb	r0, [fp, #-63]	; 0xffffffc1
   154a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   154ac:	add	r0, r0, #2
   154b0:	str	r0, [fp, #-40]	; 0xffffffd8
   154b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   154bc:	cmp	r0, r1
   154c0:	bcs	154d8 <__assert_fail@plt+0x43f0>
   154c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   154cc:	add	r0, r0, r1
   154d0:	movw	r1, #63	; 0x3f
   154d4:	strb	r1, [r0]
   154d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154dc:	add	r0, r0, #1
   154e0:	str	r0, [fp, #-44]	; 0xffffffd4
   154e4:	b	154e8 <__assert_fail@plt+0x4400>
   154e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   154f0:	cmp	r0, r1
   154f4:	bcs	1550c <__assert_fail@plt+0x4424>
   154f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15500:	add	r0, r0, r1
   15504:	movw	r1, #34	; 0x22
   15508:	strb	r1, [r0]
   1550c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15510:	add	r0, r0, #1
   15514:	str	r0, [fp, #-44]	; 0xffffffd4
   15518:	b	1551c <__assert_fail@plt+0x4434>
   1551c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15520:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15524:	cmp	r0, r1
   15528:	bcs	15540 <__assert_fail@plt+0x4458>
   1552c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15530:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15534:	add	r0, r0, r1
   15538:	movw	r1, #34	; 0x22
   1553c:	strb	r1, [r0]
   15540:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15544:	add	r0, r0, #1
   15548:	str	r0, [fp, #-44]	; 0xffffffd4
   1554c:	b	15550 <__assert_fail@plt+0x4468>
   15550:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15554:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15558:	cmp	r0, r1
   1555c:	bcs	15574 <__assert_fail@plt+0x448c>
   15560:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15564:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15568:	add	r0, r0, r1
   1556c:	movw	r1, #63	; 0x3f
   15570:	strb	r1, [r0]
   15574:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15578:	add	r0, r0, #1
   1557c:	str	r0, [fp, #-44]	; 0xffffffd4
   15580:	b	15588 <__assert_fail@plt+0x44a0>
   15584:	b	15588 <__assert_fail@plt+0x44a0>
   15588:	b	1558c <__assert_fail@plt+0x44a4>
   1558c:	b	15594 <__assert_fail@plt+0x44ac>
   15590:	b	15594 <__assert_fail@plt+0x44ac>
   15594:	b	15e14 <__assert_fail@plt+0x4d2c>
   15598:	movw	r0, #97	; 0x61
   1559c:	strb	r0, [fp, #-64]	; 0xffffffc0
   155a0:	b	15660 <__assert_fail@plt+0x4578>
   155a4:	movw	r0, #98	; 0x62
   155a8:	strb	r0, [fp, #-64]	; 0xffffffc0
   155ac:	b	15660 <__assert_fail@plt+0x4578>
   155b0:	movw	r0, #102	; 0x66
   155b4:	strb	r0, [fp, #-64]	; 0xffffffc0
   155b8:	b	15660 <__assert_fail@plt+0x4578>
   155bc:	movw	r0, #110	; 0x6e
   155c0:	strb	r0, [fp, #-64]	; 0xffffffc0
   155c4:	b	15640 <__assert_fail@plt+0x4558>
   155c8:	movw	r0, #114	; 0x72
   155cc:	strb	r0, [fp, #-64]	; 0xffffffc0
   155d0:	b	15640 <__assert_fail@plt+0x4558>
   155d4:	movw	r0, #116	; 0x74
   155d8:	strb	r0, [fp, #-64]	; 0xffffffc0
   155dc:	b	15640 <__assert_fail@plt+0x4558>
   155e0:	movw	r0, #118	; 0x76
   155e4:	strb	r0, [fp, #-64]	; 0xffffffc0
   155e8:	b	15660 <__assert_fail@plt+0x4578>
   155ec:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   155f0:	strb	r0, [fp, #-64]	; 0xffffffc0
   155f4:	ldr	r0, [fp, #8]
   155f8:	cmp	r0, #2
   155fc:	bne	15614 <__assert_fail@plt+0x452c>
   15600:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15604:	tst	r0, #1
   15608:	beq	15610 <__assert_fail@plt+0x4528>
   1560c:	b	16208 <__assert_fail@plt+0x5120>
   15610:	b	15f9c <__assert_fail@plt+0x4eb4>
   15614:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15618:	tst	r0, #1
   1561c:	beq	1563c <__assert_fail@plt+0x4554>
   15620:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15624:	tst	r0, #1
   15628:	beq	1563c <__assert_fail@plt+0x4554>
   1562c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15630:	cmp	r0, #0
   15634:	beq	1563c <__assert_fail@plt+0x4554>
   15638:	b	15f9c <__assert_fail@plt+0x4eb4>
   1563c:	b	15640 <__assert_fail@plt+0x4558>
   15640:	ldr	r0, [fp, #8]
   15644:	cmp	r0, #2
   15648:	bne	1565c <__assert_fail@plt+0x4574>
   1564c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15650:	tst	r0, #1
   15654:	beq	1565c <__assert_fail@plt+0x4574>
   15658:	b	16208 <__assert_fail@plt+0x5120>
   1565c:	b	15660 <__assert_fail@plt+0x4578>
   15660:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15664:	tst	r0, #1
   15668:	beq	15678 <__assert_fail@plt+0x4590>
   1566c:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   15670:	strb	r0, [fp, #-63]	; 0xffffffc1
   15674:	b	15e88 <__assert_fail@plt+0x4da0>
   15678:	b	15e14 <__assert_fail@plt+0x4d2c>
   1567c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15680:	cmn	r0, #1
   15684:	bne	1569c <__assert_fail@plt+0x45b4>
   15688:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1568c:	ldrb	r0, [r0, #1]
   15690:	cmp	r0, #0
   15694:	beq	156ac <__assert_fail@plt+0x45c4>
   15698:	b	156a8 <__assert_fail@plt+0x45c0>
   1569c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   156a0:	cmp	r0, #1
   156a4:	beq	156ac <__assert_fail@plt+0x45c4>
   156a8:	b	15e14 <__assert_fail@plt+0x4d2c>
   156ac:	b	156b0 <__assert_fail@plt+0x45c8>
   156b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   156b4:	cmp	r0, #0
   156b8:	beq	156c0 <__assert_fail@plt+0x45d8>
   156bc:	b	15e14 <__assert_fail@plt+0x4d2c>
   156c0:	b	156c4 <__assert_fail@plt+0x45dc>
   156c4:	movw	r0, #1
   156c8:	strb	r0, [fp, #-67]	; 0xffffffbd
   156cc:	ldr	r0, [fp, #8]
   156d0:	cmp	r0, #2
   156d4:	bne	156e8 <__assert_fail@plt+0x4600>
   156d8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   156dc:	tst	r0, #1
   156e0:	beq	156e8 <__assert_fail@plt+0x4600>
   156e4:	b	16208 <__assert_fail@plt+0x5120>
   156e8:	b	15e14 <__assert_fail@plt+0x4d2c>
   156ec:	movw	r0, #1
   156f0:	strb	r0, [fp, #-61]	; 0xffffffc3
   156f4:	strb	r0, [fp, #-67]	; 0xffffffbd
   156f8:	ldr	r0, [fp, #8]
   156fc:	cmp	r0, #2
   15700:	bne	157e0 <__assert_fail@plt+0x46f8>
   15704:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15708:	tst	r0, #1
   1570c:	beq	15714 <__assert_fail@plt+0x462c>
   15710:	b	16208 <__assert_fail@plt+0x5120>
   15714:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15718:	cmp	r0, #0
   1571c:	beq	1573c <__assert_fail@plt+0x4654>
   15720:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15724:	cmp	r0, #0
   15728:	bne	1573c <__assert_fail@plt+0x4654>
   1572c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15730:	str	r0, [fp, #-48]	; 0xffffffd0
   15734:	movw	r0, #0
   15738:	str	r0, [fp, #-28]	; 0xffffffe4
   1573c:	b	15740 <__assert_fail@plt+0x4658>
   15740:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15744:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15748:	cmp	r0, r1
   1574c:	bcs	15764 <__assert_fail@plt+0x467c>
   15750:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15754:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15758:	add	r0, r0, r1
   1575c:	movw	r1, #39	; 0x27
   15760:	strb	r1, [r0]
   15764:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15768:	add	r0, r0, #1
   1576c:	str	r0, [fp, #-44]	; 0xffffffd4
   15770:	b	15774 <__assert_fail@plt+0x468c>
   15774:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15778:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1577c:	cmp	r0, r1
   15780:	bcs	15798 <__assert_fail@plt+0x46b0>
   15784:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15788:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1578c:	add	r0, r0, r1
   15790:	movw	r1, #92	; 0x5c
   15794:	strb	r1, [r0]
   15798:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1579c:	add	r0, r0, #1
   157a0:	str	r0, [fp, #-44]	; 0xffffffd4
   157a4:	b	157a8 <__assert_fail@plt+0x46c0>
   157a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   157b0:	cmp	r0, r1
   157b4:	bcs	157cc <__assert_fail@plt+0x46e4>
   157b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   157c0:	add	r0, r0, r1
   157c4:	movw	r1, #39	; 0x27
   157c8:	strb	r1, [r0]
   157cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157d0:	add	r0, r0, #1
   157d4:	str	r0, [fp, #-44]	; 0xffffffd4
   157d8:	movw	r0, #0
   157dc:	strb	r0, [fp, #-60]	; 0xffffffc4
   157e0:	b	15e14 <__assert_fail@plt+0x4d2c>
   157e4:	movw	r0, #1
   157e8:	strb	r0, [fp, #-67]	; 0xffffffbd
   157ec:	b	15e14 <__assert_fail@plt+0x4d2c>
   157f0:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   157f4:	tst	r0, #1
   157f8:	beq	1583c <__assert_fail@plt+0x4754>
   157fc:	mov	r0, #1
   15800:	str	r0, [fp, #-72]	; 0xffffffb8
   15804:	bl	10fc8 <__ctype_b_loc@plt>
   15808:	ldr	r0, [r0]
   1580c:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   15810:	mov	r1, lr
   15814:	add	r0, r0, lr, lsl #1
   15818:	ldrh	r0, [r0]
   1581c:	and	r0, r0, #16384	; 0x4000
   15820:	cmp	r0, #0
   15824:	movw	r0, #0
   15828:	movne	r0, #1
   1582c:	and	r0, r0, #1
   15830:	strb	r0, [fp, #-73]	; 0xffffffb7
   15834:	str	r1, [sp, #32]
   15838:	b	15ac8 <__assert_fail@plt+0x49e0>
   1583c:	sub	r0, fp, #84	; 0x54
   15840:	movw	r1, #0
   15844:	and	r1, r1, #255	; 0xff
   15848:	movw	r2, #8
   1584c:	bl	11028 <memset@plt>
   15850:	movw	r0, #0
   15854:	str	r0, [fp, #-72]	; 0xffffffb8
   15858:	movw	r0, #1
   1585c:	strb	r0, [fp, #-73]	; 0xffffffb7
   15860:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15864:	cmn	r0, #1
   15868:	bne	15878 <__assert_fail@plt+0x4790>
   1586c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15870:	bl	10fec <strlen@plt>
   15874:	str	r0, [fp, #-36]	; 0xffffffdc
   15878:	b	1587c <__assert_fail@plt+0x4794>
   1587c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15880:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15884:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15888:	add	r1, r1, r2
   1588c:	add	r1, r0, r1
   15890:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15894:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15898:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1589c:	add	r2, r2, r3
   158a0:	sub	r2, r0, r2
   158a4:	sub	r0, fp, #88	; 0x58
   158a8:	sub	r3, fp, #84	; 0x54
   158ac:	bl	1e058 <__assert_fail@plt+0xcf70>
   158b0:	str	r0, [sp, #92]	; 0x5c
   158b4:	ldr	r0, [sp, #92]	; 0x5c
   158b8:	cmp	r0, #0
   158bc:	bne	158c4 <__assert_fail@plt+0x47dc>
   158c0:	b	15ac4 <__assert_fail@plt+0x49dc>
   158c4:	ldr	r0, [sp, #92]	; 0x5c
   158c8:	cmn	r0, #1
   158cc:	bne	158dc <__assert_fail@plt+0x47f4>
   158d0:	movw	r0, #0
   158d4:	strb	r0, [fp, #-73]	; 0xffffffb7
   158d8:	b	15ac4 <__assert_fail@plt+0x49dc>
   158dc:	ldr	r0, [sp, #92]	; 0x5c
   158e0:	cmn	r0, #2
   158e4:	bne	15958 <__assert_fail@plt+0x4870>
   158e8:	movw	r0, #0
   158ec:	strb	r0, [fp, #-73]	; 0xffffffb7
   158f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   158f4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   158f8:	add	r0, r0, r1
   158fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15900:	cmp	r0, r1
   15904:	movw	r0, #0
   15908:	str	r0, [sp, #28]
   1590c:	bcs	15938 <__assert_fail@plt+0x4850>
   15910:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15914:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15918:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1591c:	add	r1, r1, r2
   15920:	add	r0, r0, r1
   15924:	ldrb	r0, [r0]
   15928:	cmp	r0, #0
   1592c:	movw	r0, #0
   15930:	movne	r0, #1
   15934:	str	r0, [sp, #28]
   15938:	ldr	r0, [sp, #28]
   1593c:	tst	r0, #1
   15940:	beq	15954 <__assert_fail@plt+0x486c>
   15944:	ldr	r0, [fp, #-72]	; 0xffffffb8
   15948:	add	r0, r0, #1
   1594c:	str	r0, [fp, #-72]	; 0xffffffb8
   15950:	b	158f0 <__assert_fail@plt+0x4808>
   15954:	b	15ac4 <__assert_fail@plt+0x49dc>
   15958:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1595c:	tst	r0, #1
   15960:	beq	15a6c <__assert_fail@plt+0x4984>
   15964:	ldr	r0, [fp, #8]
   15968:	cmp	r0, #2
   1596c:	bne	15a6c <__assert_fail@plt+0x4984>
   15970:	movw	r0, #1
   15974:	str	r0, [sp, #88]	; 0x58
   15978:	ldr	r0, [sp, #88]	; 0x58
   1597c:	ldr	r1, [sp, #92]	; 0x5c
   15980:	cmp	r0, r1
   15984:	bcs	15a68 <__assert_fail@plt+0x4980>
   15988:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1598c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15990:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15994:	add	r1, r1, r2
   15998:	ldr	r2, [sp, #88]	; 0x58
   1599c:	add	r1, r1, r2
   159a0:	ldrb	r0, [r0, r1]
   159a4:	sub	r0, r0, #91	; 0x5b
   159a8:	cmp	r0, #33	; 0x21
   159ac:	str	r0, [sp, #24]
   159b0:	bhi	15a50 <__assert_fail@plt+0x4968>
   159b4:	add	r0, pc, #8
   159b8:	ldr	r1, [sp, #24]
   159bc:	ldr	r0, [r0, r1, lsl #2]
   159c0:	mov	pc, r0
   159c4:	andeq	r5, r1, ip, asr #20
   159c8:	andeq	r5, r1, ip, asr #20
   159cc:	andeq	r5, r1, r0, asr sl
   159d0:	andeq	r5, r1, ip, asr #20
   159d4:	andeq	r5, r1, r0, asr sl
   159d8:	andeq	r5, r1, ip, asr #20
   159dc:	andeq	r5, r1, r0, asr sl
   159e0:	andeq	r5, r1, r0, asr sl
   159e4:	andeq	r5, r1, r0, asr sl
   159e8:	andeq	r5, r1, r0, asr sl
   159ec:	andeq	r5, r1, r0, asr sl
   159f0:	andeq	r5, r1, r0, asr sl
   159f4:	andeq	r5, r1, r0, asr sl
   159f8:	andeq	r5, r1, r0, asr sl
   159fc:	andeq	r5, r1, r0, asr sl
   15a00:	andeq	r5, r1, r0, asr sl
   15a04:	andeq	r5, r1, r0, asr sl
   15a08:	andeq	r5, r1, r0, asr sl
   15a0c:	andeq	r5, r1, r0, asr sl
   15a10:	andeq	r5, r1, r0, asr sl
   15a14:	andeq	r5, r1, r0, asr sl
   15a18:	andeq	r5, r1, r0, asr sl
   15a1c:	andeq	r5, r1, r0, asr sl
   15a20:	andeq	r5, r1, r0, asr sl
   15a24:	andeq	r5, r1, r0, asr sl
   15a28:	andeq	r5, r1, r0, asr sl
   15a2c:	andeq	r5, r1, r0, asr sl
   15a30:	andeq	r5, r1, r0, asr sl
   15a34:	andeq	r5, r1, r0, asr sl
   15a38:	andeq	r5, r1, r0, asr sl
   15a3c:	andeq	r5, r1, r0, asr sl
   15a40:	andeq	r5, r1, r0, asr sl
   15a44:	andeq	r5, r1, r0, asr sl
   15a48:	andeq	r5, r1, ip, asr #20
   15a4c:	b	16208 <__assert_fail@plt+0x5120>
   15a50:	b	15a54 <__assert_fail@plt+0x496c>
   15a54:	b	15a58 <__assert_fail@plt+0x4970>
   15a58:	ldr	r0, [sp, #88]	; 0x58
   15a5c:	add	r0, r0, #1
   15a60:	str	r0, [sp, #88]	; 0x58
   15a64:	b	15978 <__assert_fail@plt+0x4890>
   15a68:	b	15a6c <__assert_fail@plt+0x4984>
   15a6c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   15a70:	bl	10f38 <iswprint@plt>
   15a74:	cmp	r0, #0
   15a78:	bne	15a84 <__assert_fail@plt+0x499c>
   15a7c:	movw	r0, #0
   15a80:	strb	r0, [fp, #-73]	; 0xffffffb7
   15a84:	ldr	r0, [sp, #92]	; 0x5c
   15a88:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15a8c:	add	r0, r1, r0
   15a90:	str	r0, [fp, #-72]	; 0xffffffb8
   15a94:	b	15a98 <__assert_fail@plt+0x49b0>
   15a98:	b	15a9c <__assert_fail@plt+0x49b4>
   15a9c:	b	15aa0 <__assert_fail@plt+0x49b8>
   15aa0:	sub	r0, fp, #84	; 0x54
   15aa4:	bl	10ef0 <mbsinit@plt>
   15aa8:	cmp	r0, #0
   15aac:	movw	r0, #0
   15ab0:	movne	r0, #1
   15ab4:	mvn	lr, #0
   15ab8:	eor	r0, r0, lr
   15abc:	tst	r0, #1
   15ac0:	bne	1587c <__assert_fail@plt+0x4794>
   15ac4:	b	15ac8 <__assert_fail@plt+0x49e0>
   15ac8:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   15acc:	and	r0, r0, #1
   15ad0:	strb	r0, [fp, #-67]	; 0xffffffbd
   15ad4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   15ad8:	movw	r1, #1
   15adc:	cmp	r1, r0
   15ae0:	bcc	15afc <__assert_fail@plt+0x4a14>
   15ae4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15ae8:	tst	r0, #1
   15aec:	beq	15e10 <__assert_fail@plt+0x4d28>
   15af0:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   15af4:	tst	r0, #1
   15af8:	bne	15e10 <__assert_fail@plt+0x4d28>
   15afc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15b00:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15b04:	add	r0, r0, r1
   15b08:	str	r0, [sp, #84]	; 0x54
   15b0c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15b10:	tst	r0, #1
   15b14:	beq	15cc4 <__assert_fail@plt+0x4bdc>
   15b18:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   15b1c:	tst	r0, #1
   15b20:	bne	15cc4 <__assert_fail@plt+0x4bdc>
   15b24:	b	15b28 <__assert_fail@plt+0x4a40>
   15b28:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15b2c:	tst	r0, #1
   15b30:	beq	15b38 <__assert_fail@plt+0x4a50>
   15b34:	b	16208 <__assert_fail@plt+0x5120>
   15b38:	movw	r0, #1
   15b3c:	strb	r0, [fp, #-66]	; 0xffffffbe
   15b40:	ldr	r0, [fp, #8]
   15b44:	cmp	r0, #2
   15b48:	bne	15bfc <__assert_fail@plt+0x4b14>
   15b4c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15b50:	tst	r0, #1
   15b54:	bne	15bfc <__assert_fail@plt+0x4b14>
   15b58:	b	15b5c <__assert_fail@plt+0x4a74>
   15b5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15b64:	cmp	r0, r1
   15b68:	bcs	15b80 <__assert_fail@plt+0x4a98>
   15b6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b70:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15b74:	add	r0, r0, r1
   15b78:	movw	r1, #39	; 0x27
   15b7c:	strb	r1, [r0]
   15b80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b84:	add	r0, r0, #1
   15b88:	str	r0, [fp, #-44]	; 0xffffffd4
   15b8c:	b	15b90 <__assert_fail@plt+0x4aa8>
   15b90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15b98:	cmp	r0, r1
   15b9c:	bcs	15bb4 <__assert_fail@plt+0x4acc>
   15ba0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ba4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ba8:	add	r0, r0, r1
   15bac:	movw	r1, #36	; 0x24
   15bb0:	strb	r1, [r0]
   15bb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15bb8:	add	r0, r0, #1
   15bbc:	str	r0, [fp, #-44]	; 0xffffffd4
   15bc0:	b	15bc4 <__assert_fail@plt+0x4adc>
   15bc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15bc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15bcc:	cmp	r0, r1
   15bd0:	bcs	15be8 <__assert_fail@plt+0x4b00>
   15bd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15bd8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15bdc:	add	r0, r0, r1
   15be0:	movw	r1, #39	; 0x27
   15be4:	strb	r1, [r0]
   15be8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15bec:	add	r0, r0, #1
   15bf0:	str	r0, [fp, #-44]	; 0xffffffd4
   15bf4:	movw	r0, #1
   15bf8:	strb	r0, [fp, #-60]	; 0xffffffc4
   15bfc:	b	15c00 <__assert_fail@plt+0x4b18>
   15c00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15c08:	cmp	r0, r1
   15c0c:	bcs	15c24 <__assert_fail@plt+0x4b3c>
   15c10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15c18:	add	r0, r0, r1
   15c1c:	movw	r1, #92	; 0x5c
   15c20:	strb	r1, [r0]
   15c24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c28:	add	r0, r0, #1
   15c2c:	str	r0, [fp, #-44]	; 0xffffffd4
   15c30:	b	15c34 <__assert_fail@plt+0x4b4c>
   15c34:	b	15c38 <__assert_fail@plt+0x4b50>
   15c38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15c40:	cmp	r0, r1
   15c44:	bcs	15c64 <__assert_fail@plt+0x4b7c>
   15c48:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15c4c:	asr	r0, r0, #6
   15c50:	add	r0, r0, #48	; 0x30
   15c54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15c58:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15c5c:	add	r1, r1, r2
   15c60:	strb	r0, [r1]
   15c64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c68:	add	r0, r0, #1
   15c6c:	str	r0, [fp, #-44]	; 0xffffffd4
   15c70:	b	15c74 <__assert_fail@plt+0x4b8c>
   15c74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15c7c:	cmp	r0, r1
   15c80:	bcs	15ca4 <__assert_fail@plt+0x4bbc>
   15c84:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15c88:	asr	r0, r0, #3
   15c8c:	and	r0, r0, #7
   15c90:	add	r0, r0, #48	; 0x30
   15c94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15c98:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15c9c:	add	r1, r1, r2
   15ca0:	strb	r0, [r1]
   15ca4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ca8:	add	r0, r0, #1
   15cac:	str	r0, [fp, #-44]	; 0xffffffd4
   15cb0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15cb4:	and	r0, r0, #7
   15cb8:	add	r0, r0, #48	; 0x30
   15cbc:	strb	r0, [fp, #-63]	; 0xffffffc1
   15cc0:	b	15d10 <__assert_fail@plt+0x4c28>
   15cc4:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   15cc8:	tst	r0, #1
   15ccc:	beq	15d0c <__assert_fail@plt+0x4c24>
   15cd0:	b	15cd4 <__assert_fail@plt+0x4bec>
   15cd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15cd8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15cdc:	cmp	r0, r1
   15ce0:	bcs	15cf8 <__assert_fail@plt+0x4c10>
   15ce4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ce8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15cec:	add	r0, r0, r1
   15cf0:	movw	r1, #92	; 0x5c
   15cf4:	strb	r1, [r0]
   15cf8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15cfc:	add	r0, r0, #1
   15d00:	str	r0, [fp, #-44]	; 0xffffffd4
   15d04:	movw	r0, #0
   15d08:	strb	r0, [fp, #-65]	; 0xffffffbf
   15d0c:	b	15d10 <__assert_fail@plt+0x4c28>
   15d10:	ldr	r0, [sp, #84]	; 0x54
   15d14:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15d18:	add	r1, r1, #1
   15d1c:	cmp	r0, r1
   15d20:	bhi	15d28 <__assert_fail@plt+0x4c40>
   15d24:	b	15e0c <__assert_fail@plt+0x4d24>
   15d28:	b	15d2c <__assert_fail@plt+0x4c44>
   15d2c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15d30:	tst	r0, #1
   15d34:	beq	15db4 <__assert_fail@plt+0x4ccc>
   15d38:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   15d3c:	tst	r0, #1
   15d40:	bne	15db4 <__assert_fail@plt+0x4ccc>
   15d44:	b	15d48 <__assert_fail@plt+0x4c60>
   15d48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15d50:	cmp	r0, r1
   15d54:	bcs	15d6c <__assert_fail@plt+0x4c84>
   15d58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15d60:	add	r0, r0, r1
   15d64:	movw	r1, #39	; 0x27
   15d68:	strb	r1, [r0]
   15d6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d70:	add	r0, r0, #1
   15d74:	str	r0, [fp, #-44]	; 0xffffffd4
   15d78:	b	15d7c <__assert_fail@plt+0x4c94>
   15d7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15d84:	cmp	r0, r1
   15d88:	bcs	15da0 <__assert_fail@plt+0x4cb8>
   15d8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d90:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15d94:	add	r0, r0, r1
   15d98:	movw	r1, #39	; 0x27
   15d9c:	strb	r1, [r0]
   15da0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15da4:	add	r0, r0, #1
   15da8:	str	r0, [fp, #-44]	; 0xffffffd4
   15dac:	movw	r0, #0
   15db0:	strb	r0, [fp, #-60]	; 0xffffffc4
   15db4:	b	15db8 <__assert_fail@plt+0x4cd0>
   15db8:	b	15dbc <__assert_fail@plt+0x4cd4>
   15dbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15dc0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15dc4:	cmp	r0, r1
   15dc8:	bcs	15de0 <__assert_fail@plt+0x4cf8>
   15dcc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15dd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15dd4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15dd8:	add	r1, r1, r2
   15ddc:	strb	r0, [r1]
   15de0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15de4:	add	r0, r0, #1
   15de8:	str	r0, [fp, #-44]	; 0xffffffd4
   15dec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15df0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15df4:	add	r1, r1, #1
   15df8:	str	r1, [fp, #-40]	; 0xffffffd8
   15dfc:	add	r0, r0, r1
   15e00:	ldrb	r0, [r0]
   15e04:	strb	r0, [fp, #-63]	; 0xffffffc1
   15e08:	b	15b0c <__assert_fail@plt+0x4a24>
   15e0c:	b	15f9c <__assert_fail@plt+0x4eb4>
   15e10:	b	15e14 <__assert_fail@plt+0x4d2c>
   15e14:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15e18:	tst	r0, #1
   15e1c:	beq	15e2c <__assert_fail@plt+0x4d44>
   15e20:	ldr	r0, [fp, #8]
   15e24:	cmp	r0, #2
   15e28:	bne	15e38 <__assert_fail@plt+0x4d50>
   15e2c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15e30:	tst	r0, #1
   15e34:	beq	15e74 <__assert_fail@plt+0x4d8c>
   15e38:	ldr	r0, [fp, #16]
   15e3c:	movw	r1, #0
   15e40:	cmp	r0, r1
   15e44:	beq	15e74 <__assert_fail@plt+0x4d8c>
   15e48:	ldr	r0, [fp, #16]
   15e4c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15e50:	lsr	r1, r1, #5
   15e54:	add	r0, r0, r1, lsl #2
   15e58:	ldr	r0, [r0]
   15e5c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15e60:	and	r1, r1, #31
   15e64:	lsr	r0, r0, r1
   15e68:	and	r0, r0, #1
   15e6c:	cmp	r0, #0
   15e70:	bne	15e84 <__assert_fail@plt+0x4d9c>
   15e74:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   15e78:	tst	r0, #1
   15e7c:	bne	15e84 <__assert_fail@plt+0x4d9c>
   15e80:	b	15f9c <__assert_fail@plt+0x4eb4>
   15e84:	b	15e88 <__assert_fail@plt+0x4da0>
   15e88:	b	15e8c <__assert_fail@plt+0x4da4>
   15e8c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15e90:	tst	r0, #1
   15e94:	beq	15e9c <__assert_fail@plt+0x4db4>
   15e98:	b	16208 <__assert_fail@plt+0x5120>
   15e9c:	movw	r0, #1
   15ea0:	strb	r0, [fp, #-66]	; 0xffffffbe
   15ea4:	ldr	r0, [fp, #8]
   15ea8:	cmp	r0, #2
   15eac:	bne	15f60 <__assert_fail@plt+0x4e78>
   15eb0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15eb4:	tst	r0, #1
   15eb8:	bne	15f60 <__assert_fail@plt+0x4e78>
   15ebc:	b	15ec0 <__assert_fail@plt+0x4dd8>
   15ec0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ec4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15ec8:	cmp	r0, r1
   15ecc:	bcs	15ee4 <__assert_fail@plt+0x4dfc>
   15ed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ed4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ed8:	add	r0, r0, r1
   15edc:	movw	r1, #39	; 0x27
   15ee0:	strb	r1, [r0]
   15ee4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ee8:	add	r0, r0, #1
   15eec:	str	r0, [fp, #-44]	; 0xffffffd4
   15ef0:	b	15ef4 <__assert_fail@plt+0x4e0c>
   15ef4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ef8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15efc:	cmp	r0, r1
   15f00:	bcs	15f18 <__assert_fail@plt+0x4e30>
   15f04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f08:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15f0c:	add	r0, r0, r1
   15f10:	movw	r1, #36	; 0x24
   15f14:	strb	r1, [r0]
   15f18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15f1c:	add	r0, r0, #1
   15f20:	str	r0, [fp, #-44]	; 0xffffffd4
   15f24:	b	15f28 <__assert_fail@plt+0x4e40>
   15f28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15f2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15f30:	cmp	r0, r1
   15f34:	bcs	15f4c <__assert_fail@plt+0x4e64>
   15f38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f3c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15f40:	add	r0, r0, r1
   15f44:	movw	r1, #39	; 0x27
   15f48:	strb	r1, [r0]
   15f4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15f50:	add	r0, r0, #1
   15f54:	str	r0, [fp, #-44]	; 0xffffffd4
   15f58:	movw	r0, #1
   15f5c:	strb	r0, [fp, #-60]	; 0xffffffc4
   15f60:	b	15f64 <__assert_fail@plt+0x4e7c>
   15f64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15f68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15f6c:	cmp	r0, r1
   15f70:	bcs	15f88 <__assert_fail@plt+0x4ea0>
   15f74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f78:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15f7c:	add	r0, r0, r1
   15f80:	movw	r1, #92	; 0x5c
   15f84:	strb	r1, [r0]
   15f88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15f8c:	add	r0, r0, #1
   15f90:	str	r0, [fp, #-44]	; 0xffffffd4
   15f94:	b	15f98 <__assert_fail@plt+0x4eb0>
   15f98:	b	15f9c <__assert_fail@plt+0x4eb4>
   15f9c:	b	15fa0 <__assert_fail@plt+0x4eb8>
   15fa0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15fa4:	tst	r0, #1
   15fa8:	beq	16028 <__assert_fail@plt+0x4f40>
   15fac:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   15fb0:	tst	r0, #1
   15fb4:	bne	16028 <__assert_fail@plt+0x4f40>
   15fb8:	b	15fbc <__assert_fail@plt+0x4ed4>
   15fbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15fc0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15fc4:	cmp	r0, r1
   15fc8:	bcs	15fe0 <__assert_fail@plt+0x4ef8>
   15fcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fd0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15fd4:	add	r0, r0, r1
   15fd8:	movw	r1, #39	; 0x27
   15fdc:	strb	r1, [r0]
   15fe0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15fe4:	add	r0, r0, #1
   15fe8:	str	r0, [fp, #-44]	; 0xffffffd4
   15fec:	b	15ff0 <__assert_fail@plt+0x4f08>
   15ff0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ff4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15ff8:	cmp	r0, r1
   15ffc:	bcs	16014 <__assert_fail@plt+0x4f2c>
   16000:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16004:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16008:	add	r0, r0, r1
   1600c:	movw	r1, #39	; 0x27
   16010:	strb	r1, [r0]
   16014:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16018:	add	r0, r0, #1
   1601c:	str	r0, [fp, #-44]	; 0xffffffd4
   16020:	movw	r0, #0
   16024:	strb	r0, [fp, #-60]	; 0xffffffc4
   16028:	b	1602c <__assert_fail@plt+0x4f44>
   1602c:	b	16030 <__assert_fail@plt+0x4f48>
   16030:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16034:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16038:	cmp	r0, r1
   1603c:	bcs	16054 <__assert_fail@plt+0x4f6c>
   16040:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   16044:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16048:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1604c:	add	r1, r1, r2
   16050:	strb	r0, [r1]
   16054:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16058:	add	r0, r0, #1
   1605c:	str	r0, [fp, #-44]	; 0xffffffd4
   16060:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   16064:	tst	r0, #1
   16068:	bne	16074 <__assert_fail@plt+0x4f8c>
   1606c:	movw	r0, #0
   16070:	strb	r0, [fp, #-62]	; 0xffffffc2
   16074:	b	16078 <__assert_fail@plt+0x4f90>
   16078:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1607c:	add	r0, r0, #1
   16080:	str	r0, [fp, #-40]	; 0xffffffd8
   16084:	b	14e2c <__assert_fail@plt+0x3d44>
   16088:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1608c:	cmp	r0, #0
   16090:	bne	160b0 <__assert_fail@plt+0x4fc8>
   16094:	ldr	r0, [fp, #8]
   16098:	cmp	r0, #2
   1609c:	bne	160b0 <__assert_fail@plt+0x4fc8>
   160a0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   160a4:	tst	r0, #1
   160a8:	beq	160b0 <__assert_fail@plt+0x4fc8>
   160ac:	b	16208 <__assert_fail@plt+0x5120>
   160b0:	ldr	r0, [fp, #8]
   160b4:	cmp	r0, #2
   160b8:	bne	16158 <__assert_fail@plt+0x5070>
   160bc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   160c0:	tst	r0, #1
   160c4:	bne	16158 <__assert_fail@plt+0x5070>
   160c8:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   160cc:	tst	r0, #1
   160d0:	beq	16158 <__assert_fail@plt+0x5070>
   160d4:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   160d8:	tst	r0, #1
   160dc:	beq	16124 <__assert_fail@plt+0x503c>
   160e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160e4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   160e8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   160ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   160f0:	ldr	ip, [fp, #12]
   160f4:	ldr	lr, [fp, #16]
   160f8:	ldr	r4, [fp, #20]
   160fc:	ldr	r5, [fp, #24]
   16100:	movw	r6, #5
   16104:	str	r6, [sp]
   16108:	str	ip, [sp, #4]
   1610c:	str	lr, [sp, #8]
   16110:	str	r4, [sp, #12]
   16114:	str	r5, [sp, #16]
   16118:	bl	14b44 <__assert_fail@plt+0x3a5c>
   1611c:	str	r0, [fp, #-20]	; 0xffffffec
   16120:	b	16270 <__assert_fail@plt+0x5188>
   16124:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16128:	cmp	r0, #0
   1612c:	bne	16150 <__assert_fail@plt+0x5068>
   16130:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16134:	cmp	r0, #0
   16138:	beq	16150 <__assert_fail@plt+0x5068>
   1613c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16140:	str	r0, [fp, #-28]	; 0xffffffe4
   16144:	movw	r0, #0
   16148:	str	r0, [fp, #-44]	; 0xffffffd4
   1614c:	b	14bec <__assert_fail@plt+0x3b04>
   16150:	b	16154 <__assert_fail@plt+0x506c>
   16154:	b	16158 <__assert_fail@plt+0x5070>
   16158:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1615c:	movw	r1, #0
   16160:	cmp	r0, r1
   16164:	beq	161d8 <__assert_fail@plt+0x50f0>
   16168:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1616c:	tst	r0, #1
   16170:	bne	161d8 <__assert_fail@plt+0x50f0>
   16174:	b	16178 <__assert_fail@plt+0x5090>
   16178:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1617c:	ldrsb	r0, [r0]
   16180:	cmp	r0, #0
   16184:	beq	161d4 <__assert_fail@plt+0x50ec>
   16188:	b	1618c <__assert_fail@plt+0x50a4>
   1618c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16190:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16194:	cmp	r0, r1
   16198:	bcs	161b4 <__assert_fail@plt+0x50cc>
   1619c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   161a0:	ldrb	r0, [r0]
   161a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   161a8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   161ac:	add	r1, r1, r2
   161b0:	strb	r0, [r1]
   161b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   161b8:	add	r0, r0, #1
   161bc:	str	r0, [fp, #-44]	; 0xffffffd4
   161c0:	b	161c4 <__assert_fail@plt+0x50dc>
   161c4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   161c8:	add	r0, r0, #1
   161cc:	str	r0, [fp, #-52]	; 0xffffffcc
   161d0:	b	16178 <__assert_fail@plt+0x5090>
   161d4:	b	161d8 <__assert_fail@plt+0x50f0>
   161d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   161dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   161e0:	cmp	r0, r1
   161e4:	bcs	161fc <__assert_fail@plt+0x5114>
   161e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   161f0:	add	r0, r0, r1
   161f4:	movw	r1, #0
   161f8:	strb	r1, [r0]
   161fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16200:	str	r0, [fp, #-20]	; 0xffffffec
   16204:	b	16270 <__assert_fail@plt+0x5188>
   16208:	ldr	r0, [fp, #8]
   1620c:	cmp	r0, #2
   16210:	bne	16228 <__assert_fail@plt+0x5140>
   16214:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   16218:	tst	r0, #1
   1621c:	beq	16228 <__assert_fail@plt+0x5140>
   16220:	movw	r0, #4
   16224:	str	r0, [fp, #8]
   16228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1622c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16230:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16234:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16238:	ldr	ip, [fp, #8]
   1623c:	ldr	lr, [fp, #12]
   16240:	mvn	r4, #2
   16244:	and	lr, lr, r4
   16248:	ldr	r4, [fp, #20]
   1624c:	ldr	r5, [fp, #24]
   16250:	str	ip, [sp]
   16254:	str	lr, [sp, #4]
   16258:	movw	ip, #0
   1625c:	str	ip, [sp, #8]
   16260:	str	r4, [sp, #12]
   16264:	str	r5, [sp, #16]
   16268:	bl	14b44 <__assert_fail@plt+0x3a5c>
   1626c:	str	r0, [fp, #-20]	; 0xffffffec
   16270:	ldr	r0, [fp, #-20]	; 0xffffffec
   16274:	sub	sp, fp, #16
   16278:	pop	{r4, r5, r6, sl, fp, pc}
   1627c:	push	{fp, lr}
   16280:	mov	fp, sp
   16284:	sub	sp, sp, #16
   16288:	str	r0, [fp, #-4]
   1628c:	str	r1, [sp, #8]
   16290:	str	r2, [sp, #4]
   16294:	ldr	r0, [fp, #-4]
   16298:	ldr	r1, [sp, #8]
   1629c:	ldr	r3, [sp, #4]
   162a0:	movw	r2, #0
   162a4:	bl	162b0 <__assert_fail@plt+0x51c8>
   162a8:	mov	sp, fp
   162ac:	pop	{fp, pc}
   162b0:	push	{r4, r5, r6, sl, fp, lr}
   162b4:	add	fp, sp, #16
   162b8:	sub	sp, sp, #72	; 0x48
   162bc:	str	r0, [fp, #-20]	; 0xffffffec
   162c0:	str	r1, [fp, #-24]	; 0xffffffe8
   162c4:	str	r2, [fp, #-28]	; 0xffffffe4
   162c8:	str	r3, [fp, #-32]	; 0xffffffe0
   162cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   162d0:	movw	r1, #0
   162d4:	cmp	r0, r1
   162d8:	beq	162e8 <__assert_fail@plt+0x5200>
   162dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   162e0:	str	r0, [sp, #32]
   162e4:	b	162f8 <__assert_fail@plt+0x5210>
   162e8:	movw	r0, #364	; 0x16c
   162ec:	movt	r0, #3
   162f0:	str	r0, [sp, #32]
   162f4:	b	162f8 <__assert_fail@plt+0x5210>
   162f8:	ldr	r0, [sp, #32]
   162fc:	str	r0, [fp, #-36]	; 0xffffffdc
   16300:	bl	11010 <__errno_location@plt>
   16304:	ldr	r0, [r0]
   16308:	str	r0, [fp, #-40]	; 0xffffffd8
   1630c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16310:	ldr	r0, [r0, #4]
   16314:	ldr	lr, [fp, #-28]	; 0xffffffe4
   16318:	movw	r1, #0
   1631c:	cmp	lr, r1
   16320:	movw	lr, #0
   16324:	movne	lr, #1
   16328:	tst	lr, #1
   1632c:	mov	lr, r1
   16330:	moveq	lr, #1
   16334:	orr	r0, r0, lr
   16338:	str	r0, [sp, #44]	; 0x2c
   1633c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16340:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16344:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16348:	ldr	r0, [r0]
   1634c:	ldr	lr, [sp, #44]	; 0x2c
   16350:	ldr	ip, [fp, #-36]	; 0xffffffdc
   16354:	add	ip, ip, #8
   16358:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1635c:	ldr	r4, [r4, #40]	; 0x28
   16360:	ldr	r5, [fp, #-36]	; 0xffffffdc
   16364:	ldr	r5, [r5, #44]	; 0x2c
   16368:	str	r0, [sp, #28]
   1636c:	mov	r0, r1
   16370:	ldr	r6, [sp, #28]
   16374:	str	r6, [sp]
   16378:	str	lr, [sp, #4]
   1637c:	str	ip, [sp, #8]
   16380:	str	r4, [sp, #12]
   16384:	str	r5, [sp, #16]
   16388:	bl	14b44 <__assert_fail@plt+0x3a5c>
   1638c:	add	r0, r0, #1
   16390:	str	r0, [sp, #40]	; 0x28
   16394:	ldr	r0, [sp, #40]	; 0x28
   16398:	bl	18b64 <__assert_fail@plt+0x7a7c>
   1639c:	str	r0, [sp, #36]	; 0x24
   163a0:	ldr	r0, [sp, #36]	; 0x24
   163a4:	ldr	r1, [sp, #40]	; 0x28
   163a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   163ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   163b0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   163b4:	ldr	ip, [ip]
   163b8:	ldr	lr, [sp, #44]	; 0x2c
   163bc:	ldr	r4, [fp, #-36]	; 0xffffffdc
   163c0:	add	r4, r4, #8
   163c4:	ldr	r5, [fp, #-36]	; 0xffffffdc
   163c8:	ldr	r5, [r5, #40]	; 0x28
   163cc:	ldr	r6, [fp, #-36]	; 0xffffffdc
   163d0:	ldr	r6, [r6, #44]	; 0x2c
   163d4:	str	ip, [sp]
   163d8:	str	lr, [sp, #4]
   163dc:	str	r4, [sp, #8]
   163e0:	str	r5, [sp, #12]
   163e4:	str	r6, [sp, #16]
   163e8:	bl	14b44 <__assert_fail@plt+0x3a5c>
   163ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   163f0:	str	r0, [sp, #24]
   163f4:	str	r1, [sp, #20]
   163f8:	bl	11010 <__errno_location@plt>
   163fc:	ldr	r1, [sp, #20]
   16400:	str	r1, [r0]
   16404:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16408:	movw	r2, #0
   1640c:	cmp	r0, r2
   16410:	beq	16424 <__assert_fail@plt+0x533c>
   16414:	ldr	r0, [sp, #40]	; 0x28
   16418:	sub	r0, r0, #1
   1641c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16420:	str	r0, [r1]
   16424:	ldr	r0, [sp, #36]	; 0x24
   16428:	sub	sp, fp, #16
   1642c:	pop	{r4, r5, r6, sl, fp, pc}
   16430:	push	{fp, lr}
   16434:	mov	fp, sp
   16438:	sub	sp, sp, #8
   1643c:	movw	r0, #248	; 0xf8
   16440:	movt	r0, #3
   16444:	ldr	r0, [r0]
   16448:	str	r0, [sp, #4]
   1644c:	movw	r0, #1
   16450:	str	r0, [sp]
   16454:	ldr	r0, [sp]
   16458:	movw	r1, #252	; 0xfc
   1645c:	movt	r1, #3
   16460:	ldr	r1, [r1]
   16464:	cmp	r0, r1
   16468:	bge	16490 <__assert_fail@plt+0x53a8>
   1646c:	ldr	r0, [sp, #4]
   16470:	ldr	r1, [sp]
   16474:	add	r0, r0, r1, lsl #3
   16478:	ldr	r0, [r0, #4]
   1647c:	bl	14394 <__assert_fail@plt+0x32ac>
   16480:	ldr	r0, [sp]
   16484:	add	r0, r0, #1
   16488:	str	r0, [sp]
   1648c:	b	16454 <__assert_fail@plt+0x536c>
   16490:	ldr	r0, [sp, #4]
   16494:	ldr	r0, [r0, #4]
   16498:	movw	r1, #412	; 0x19c
   1649c:	movt	r1, #3
   164a0:	cmp	r0, r1
   164a4:	beq	164d0 <__assert_fail@plt+0x53e8>
   164a8:	ldr	r0, [sp, #4]
   164ac:	ldr	r0, [r0, #4]
   164b0:	bl	14394 <__assert_fail@plt+0x32ac>
   164b4:	movw	r0, #256	; 0x100
   164b8:	movw	lr, #256	; 0x100
   164bc:	movt	lr, #3
   164c0:	str	r0, [lr]
   164c4:	movw	r0, #412	; 0x19c
   164c8:	movt	r0, #3
   164cc:	str	r0, [lr, #4]
   164d0:	ldr	r0, [sp, #4]
   164d4:	movw	r1, #256	; 0x100
   164d8:	movt	r1, #3
   164dc:	cmp	r0, r1
   164e0:	beq	16500 <__assert_fail@plt+0x5418>
   164e4:	ldr	r0, [sp, #4]
   164e8:	bl	14394 <__assert_fail@plt+0x32ac>
   164ec:	movw	r0, #248	; 0xf8
   164f0:	movt	r0, #3
   164f4:	movw	lr, #256	; 0x100
   164f8:	movt	lr, #3
   164fc:	str	lr, [r0]
   16500:	movw	r0, #252	; 0xfc
   16504:	movt	r0, #3
   16508:	movw	r1, #1
   1650c:	str	r1, [r0]
   16510:	mov	sp, fp
   16514:	pop	{fp, pc}
   16518:	push	{fp, lr}
   1651c:	mov	fp, sp
   16520:	sub	sp, sp, #8
   16524:	str	r0, [sp, #4]
   16528:	str	r1, [sp]
   1652c:	ldr	r0, [sp, #4]
   16530:	ldr	r1, [sp]
   16534:	mvn	r2, #0
   16538:	movw	r3, #364	; 0x16c
   1653c:	movt	r3, #3
   16540:	bl	1654c <__assert_fail@plt+0x5464>
   16544:	mov	sp, fp
   16548:	pop	{fp, pc}
   1654c:	push	{r4, r5, r6, sl, fp, lr}
   16550:	add	fp, sp, #16
   16554:	sub	sp, sp, #88	; 0x58
   16558:	str	r0, [fp, #-20]	; 0xffffffec
   1655c:	str	r1, [fp, #-24]	; 0xffffffe8
   16560:	str	r2, [fp, #-28]	; 0xffffffe4
   16564:	str	r3, [fp, #-32]	; 0xffffffe0
   16568:	bl	11010 <__errno_location@plt>
   1656c:	ldr	r1, [pc, #676]	; 16818 <__assert_fail@plt+0x5730>
   16570:	ldr	r0, [r0]
   16574:	str	r0, [fp, #-36]	; 0xffffffdc
   16578:	movw	r0, #248	; 0xf8
   1657c:	movt	r0, #3
   16580:	ldr	r0, [r0]
   16584:	str	r0, [fp, #-40]	; 0xffffffd8
   16588:	str	r1, [fp, #-44]	; 0xffffffd4
   1658c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16590:	movw	r1, #0
   16594:	cmp	r1, r0
   16598:	bgt	165ac <__assert_fail@plt+0x54c4>
   1659c:	ldr	r0, [fp, #-20]	; 0xffffffec
   165a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   165a4:	cmp	r0, r1
   165a8:	blt	165b0 <__assert_fail@plt+0x54c8>
   165ac:	bl	110d0 <abort@plt>
   165b0:	movw	r0, #252	; 0xfc
   165b4:	movt	r0, #3
   165b8:	ldr	r0, [r0]
   165bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   165c0:	cmp	r0, r1
   165c4:	bgt	166bc <__assert_fail@plt+0x55d4>
   165c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   165cc:	movw	r1, #256	; 0x100
   165d0:	movt	r1, #3
   165d4:	cmp	r0, r1
   165d8:	movw	r0, #0
   165dc:	moveq	r0, #1
   165e0:	and	r0, r0, #1
   165e4:	strb	r0, [fp, #-45]	; 0xffffffd3
   165e8:	movw	r0, #252	; 0xfc
   165ec:	movt	r0, #3
   165f0:	ldr	r0, [r0]
   165f4:	str	r0, [sp, #52]	; 0x34
   165f8:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   165fc:	tst	r0, #1
   16600:	beq	16610 <__assert_fail@plt+0x5528>
   16604:	movw	r0, #0
   16608:	str	r0, [sp, #32]
   1660c:	b	16618 <__assert_fail@plt+0x5530>
   16610:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16614:	str	r0, [sp, #32]
   16618:	ldr	r0, [sp, #32]
   1661c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16620:	movw	r2, #252	; 0xfc
   16624:	movt	r2, #3
   16628:	ldr	r2, [r2]
   1662c:	sub	r1, r1, r2
   16630:	add	r2, r1, #1
   16634:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16638:	add	r1, sp, #52	; 0x34
   1663c:	movw	ip, #8
   16640:	str	ip, [sp]
   16644:	bl	18da0 <__assert_fail@plt+0x7cb8>
   16648:	str	r0, [fp, #-40]	; 0xffffffd8
   1664c:	movw	r1, #248	; 0xf8
   16650:	movt	r1, #3
   16654:	str	r0, [r1]
   16658:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1665c:	tst	r0, #1
   16660:	beq	16680 <__assert_fail@plt+0x5598>
   16664:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16668:	movw	r1, #256	; 0x100
   1666c:	movt	r1, #3
   16670:	ldr	r2, [r1]
   16674:	str	r2, [r0]
   16678:	ldr	r1, [r1, #4]
   1667c:	str	r1, [r0, #4]
   16680:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16684:	movw	r1, #252	; 0xfc
   16688:	movt	r1, #3
   1668c:	ldr	r1, [r1]
   16690:	add	r0, r0, r1, lsl #3
   16694:	ldr	r2, [sp, #52]	; 0x34
   16698:	sub	r1, r2, r1
   1669c:	lsl	r2, r1, #3
   166a0:	movw	r1, #0
   166a4:	and	r1, r1, #255	; 0xff
   166a8:	bl	11028 <memset@plt>
   166ac:	ldr	r0, [sp, #52]	; 0x34
   166b0:	movw	r1, #252	; 0xfc
   166b4:	movt	r1, #3
   166b8:	str	r0, [r1]
   166bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   166c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   166c4:	ldr	r0, [r0, r1, lsl #3]
   166c8:	str	r0, [sp, #48]	; 0x30
   166cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   166d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   166d4:	add	r0, r0, r1, lsl #3
   166d8:	ldr	r0, [r0, #4]
   166dc:	str	r0, [sp, #44]	; 0x2c
   166e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   166e4:	ldr	r0, [r0, #4]
   166e8:	orr	r0, r0, #1
   166ec:	str	r0, [sp, #40]	; 0x28
   166f0:	ldr	r0, [sp, #44]	; 0x2c
   166f4:	ldr	r1, [sp, #48]	; 0x30
   166f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   166fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16700:	ldr	ip, [fp, #-32]	; 0xffffffe0
   16704:	ldr	ip, [ip]
   16708:	ldr	lr, [sp, #40]	; 0x28
   1670c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   16710:	add	r4, r4, #8
   16714:	ldr	r5, [fp, #-32]	; 0xffffffe0
   16718:	ldr	r5, [r5, #40]	; 0x28
   1671c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   16720:	ldr	r6, [r6, #44]	; 0x2c
   16724:	str	ip, [sp]
   16728:	str	lr, [sp, #4]
   1672c:	str	r4, [sp, #8]
   16730:	str	r5, [sp, #12]
   16734:	str	r6, [sp, #16]
   16738:	bl	14b44 <__assert_fail@plt+0x3a5c>
   1673c:	str	r0, [sp, #36]	; 0x24
   16740:	ldr	r0, [sp, #48]	; 0x30
   16744:	ldr	r1, [sp, #36]	; 0x24
   16748:	cmp	r0, r1
   1674c:	bhi	167f8 <__assert_fail@plt+0x5710>
   16750:	ldr	r0, [sp, #36]	; 0x24
   16754:	add	r0, r0, #1
   16758:	str	r0, [sp, #48]	; 0x30
   1675c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16760:	ldr	r2, [fp, #-20]	; 0xffffffec
   16764:	add	r1, r1, r2, lsl #3
   16768:	str	r0, [r1]
   1676c:	ldr	r0, [sp, #44]	; 0x2c
   16770:	movw	r1, #412	; 0x19c
   16774:	movt	r1, #3
   16778:	cmp	r0, r1
   1677c:	beq	16788 <__assert_fail@plt+0x56a0>
   16780:	ldr	r0, [sp, #44]	; 0x2c
   16784:	bl	14394 <__assert_fail@plt+0x32ac>
   16788:	ldr	r0, [sp, #48]	; 0x30
   1678c:	bl	18b64 <__assert_fail@plt+0x7a7c>
   16790:	mov	lr, r0
   16794:	str	r0, [sp, #44]	; 0x2c
   16798:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1679c:	ldr	r1, [fp, #-20]	; 0xffffffec
   167a0:	add	r0, r0, r1, lsl #3
   167a4:	str	lr, [r0, #4]
   167a8:	ldr	r0, [sp, #44]	; 0x2c
   167ac:	ldr	r1, [sp, #48]	; 0x30
   167b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   167b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   167b8:	ldr	lr, [fp, #-32]	; 0xffffffe0
   167bc:	ldr	lr, [lr]
   167c0:	ldr	ip, [sp, #40]	; 0x28
   167c4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   167c8:	add	r4, r4, #8
   167cc:	ldr	r5, [fp, #-32]	; 0xffffffe0
   167d0:	ldr	r5, [r5, #40]	; 0x28
   167d4:	ldr	r6, [fp, #-32]	; 0xffffffe0
   167d8:	ldr	r6, [r6, #44]	; 0x2c
   167dc:	str	lr, [sp]
   167e0:	str	ip, [sp, #4]
   167e4:	str	r4, [sp, #8]
   167e8:	str	r5, [sp, #12]
   167ec:	str	r6, [sp, #16]
   167f0:	bl	14b44 <__assert_fail@plt+0x3a5c>
   167f4:	str	r0, [sp, #28]
   167f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   167fc:	str	r0, [sp, #24]
   16800:	bl	11010 <__errno_location@plt>
   16804:	ldr	lr, [sp, #24]
   16808:	str	lr, [r0]
   1680c:	ldr	r0, [sp, #44]	; 0x2c
   16810:	sub	sp, fp, #16
   16814:	pop	{r4, r5, r6, sl, fp, pc}
   16818:	svcvc	0x00ffffff
   1681c:	push	{fp, lr}
   16820:	mov	fp, sp
   16824:	sub	sp, sp, #16
   16828:	str	r0, [fp, #-4]
   1682c:	str	r1, [sp, #8]
   16830:	str	r2, [sp, #4]
   16834:	ldr	r0, [fp, #-4]
   16838:	ldr	r1, [sp, #8]
   1683c:	ldr	r2, [sp, #4]
   16840:	movw	r3, #364	; 0x16c
   16844:	movt	r3, #3
   16848:	bl	1654c <__assert_fail@plt+0x5464>
   1684c:	mov	sp, fp
   16850:	pop	{fp, pc}
   16854:	push	{fp, lr}
   16858:	mov	fp, sp
   1685c:	sub	sp, sp, #8
   16860:	str	r0, [sp, #4]
   16864:	ldr	r1, [sp, #4]
   16868:	movw	r0, #0
   1686c:	bl	16518 <__assert_fail@plt+0x5430>
   16870:	mov	sp, fp
   16874:	pop	{fp, pc}
   16878:	push	{fp, lr}
   1687c:	mov	fp, sp
   16880:	sub	sp, sp, #8
   16884:	str	r0, [sp, #4]
   16888:	str	r1, [sp]
   1688c:	ldr	r1, [sp, #4]
   16890:	ldr	r2, [sp]
   16894:	movw	r0, #0
   16898:	bl	1681c <__assert_fail@plt+0x5734>
   1689c:	mov	sp, fp
   168a0:	pop	{fp, pc}
   168a4:	push	{fp, lr}
   168a8:	mov	fp, sp
   168ac:	sub	sp, sp, #64	; 0x40
   168b0:	str	r0, [fp, #-4]
   168b4:	str	r1, [fp, #-8]
   168b8:	str	r2, [fp, #-12]
   168bc:	ldr	r1, [fp, #-8]
   168c0:	add	r0, sp, #4
   168c4:	bl	168e4 <__assert_fail@plt+0x57fc>
   168c8:	ldr	r0, [fp, #-4]
   168cc:	ldr	r1, [fp, #-12]
   168d0:	mvn	r2, #0
   168d4:	add	r3, sp, #4
   168d8:	bl	1654c <__assert_fail@plt+0x5464>
   168dc:	mov	sp, fp
   168e0:	pop	{fp, pc}
   168e4:	push	{fp, lr}
   168e8:	mov	fp, sp
   168ec:	sub	sp, sp, #8
   168f0:	str	r1, [sp, #4]
   168f4:	mov	r1, r0
   168f8:	str	r0, [sp]
   168fc:	mov	r0, r1
   16900:	movw	r1, #0
   16904:	and	r1, r1, #255	; 0xff
   16908:	movw	r2, #48	; 0x30
   1690c:	bl	11028 <memset@plt>
   16910:	ldr	r0, [sp, #4]
   16914:	cmp	r0, #10
   16918:	bne	16920 <__assert_fail@plt+0x5838>
   1691c:	bl	110d0 <abort@plt>
   16920:	ldr	r0, [sp, #4]
   16924:	ldr	r1, [sp]
   16928:	str	r0, [r1]
   1692c:	mov	sp, fp
   16930:	pop	{fp, pc}
   16934:	push	{fp, lr}
   16938:	mov	fp, sp
   1693c:	sub	sp, sp, #64	; 0x40
   16940:	str	r0, [fp, #-4]
   16944:	str	r1, [fp, #-8]
   16948:	str	r2, [fp, #-12]
   1694c:	str	r3, [fp, #-16]
   16950:	ldr	r1, [fp, #-8]
   16954:	mov	r0, sp
   16958:	bl	168e4 <__assert_fail@plt+0x57fc>
   1695c:	ldr	r0, [fp, #-4]
   16960:	ldr	r1, [fp, #-12]
   16964:	ldr	r2, [fp, #-16]
   16968:	mov	r3, sp
   1696c:	bl	1654c <__assert_fail@plt+0x5464>
   16970:	mov	sp, fp
   16974:	pop	{fp, pc}
   16978:	push	{fp, lr}
   1697c:	mov	fp, sp
   16980:	sub	sp, sp, #8
   16984:	str	r0, [sp, #4]
   16988:	str	r1, [sp]
   1698c:	ldr	r1, [sp, #4]
   16990:	ldr	r2, [sp]
   16994:	movw	r0, #0
   16998:	bl	168a4 <__assert_fail@plt+0x57bc>
   1699c:	mov	sp, fp
   169a0:	pop	{fp, pc}
   169a4:	push	{fp, lr}
   169a8:	mov	fp, sp
   169ac:	sub	sp, sp, #16
   169b0:	str	r0, [fp, #-4]
   169b4:	str	r1, [sp, #8]
   169b8:	str	r2, [sp, #4]
   169bc:	ldr	r1, [fp, #-4]
   169c0:	ldr	r2, [sp, #8]
   169c4:	ldr	r3, [sp, #4]
   169c8:	movw	r0, #0
   169cc:	bl	16934 <__assert_fail@plt+0x584c>
   169d0:	mov	sp, fp
   169d4:	pop	{fp, pc}
   169d8:	push	{fp, lr}
   169dc:	mov	fp, sp
   169e0:	sub	sp, sp, #72	; 0x48
   169e4:	movw	r3, #364	; 0x16c
   169e8:	movt	r3, #3
   169ec:	str	r0, [fp, #-4]
   169f0:	str	r1, [fp, #-8]
   169f4:	strb	r2, [fp, #-9]
   169f8:	add	r0, sp, #12
   169fc:	mov	r1, r0
   16a00:	str	r0, [sp, #8]
   16a04:	mov	r0, r1
   16a08:	mov	r1, r3
   16a0c:	movw	r2, #48	; 0x30
   16a10:	bl	10ee4 <memcpy@plt>
   16a14:	ldr	r0, [sp, #8]
   16a18:	ldrb	r1, [fp, #-9]
   16a1c:	movw	r2, #1
   16a20:	bl	148e8 <__assert_fail@plt+0x3800>
   16a24:	ldr	r1, [fp, #-4]
   16a28:	ldr	r2, [fp, #-8]
   16a2c:	movw	r3, #0
   16a30:	str	r0, [sp, #4]
   16a34:	mov	r0, r3
   16a38:	add	r3, sp, #12
   16a3c:	bl	1654c <__assert_fail@plt+0x5464>
   16a40:	mov	sp, fp
   16a44:	pop	{fp, pc}
   16a48:	push	{fp, lr}
   16a4c:	mov	fp, sp
   16a50:	sub	sp, sp, #8
   16a54:	str	r0, [sp, #4]
   16a58:	strb	r1, [sp, #3]
   16a5c:	ldr	r0, [sp, #4]
   16a60:	mvn	r1, #0
   16a64:	ldrb	r2, [sp, #3]
   16a68:	bl	169d8 <__assert_fail@plt+0x58f0>
   16a6c:	mov	sp, fp
   16a70:	pop	{fp, pc}
   16a74:	push	{fp, lr}
   16a78:	mov	fp, sp
   16a7c:	sub	sp, sp, #8
   16a80:	str	r0, [sp, #4]
   16a84:	ldr	r0, [sp, #4]
   16a88:	movw	r1, #58	; 0x3a
   16a8c:	and	r1, r1, #255	; 0xff
   16a90:	bl	16a48 <__assert_fail@plt+0x5960>
   16a94:	mov	sp, fp
   16a98:	pop	{fp, pc}
   16a9c:	push	{fp, lr}
   16aa0:	mov	fp, sp
   16aa4:	sub	sp, sp, #8
   16aa8:	str	r0, [sp, #4]
   16aac:	str	r1, [sp]
   16ab0:	ldr	r0, [sp, #4]
   16ab4:	ldr	r1, [sp]
   16ab8:	movw	r2, #58	; 0x3a
   16abc:	and	r2, r2, #255	; 0xff
   16ac0:	bl	169d8 <__assert_fail@plt+0x58f0>
   16ac4:	mov	sp, fp
   16ac8:	pop	{fp, pc}
   16acc:	push	{fp, lr}
   16ad0:	mov	fp, sp
   16ad4:	sub	sp, sp, #120	; 0x78
   16ad8:	str	r0, [fp, #-4]
   16adc:	str	r1, [fp, #-8]
   16ae0:	str	r2, [fp, #-12]
   16ae4:	ldr	r1, [fp, #-8]
   16ae8:	add	r0, sp, #12
   16aec:	bl	168e4 <__assert_fail@plt+0x57fc>
   16af0:	add	r0, sp, #60	; 0x3c
   16af4:	mov	r1, r0
   16af8:	add	r2, sp, #12
   16afc:	str	r0, [sp, #8]
   16b00:	mov	r0, r1
   16b04:	mov	r1, r2
   16b08:	movw	r2, #48	; 0x30
   16b0c:	bl	10ee4 <memcpy@plt>
   16b10:	ldr	r0, [sp, #8]
   16b14:	movw	r1, #58	; 0x3a
   16b18:	and	r1, r1, #255	; 0xff
   16b1c:	movw	r2, #1
   16b20:	bl	148e8 <__assert_fail@plt+0x3800>
   16b24:	ldr	r1, [fp, #-4]
   16b28:	ldr	r2, [fp, #-12]
   16b2c:	str	r0, [sp, #4]
   16b30:	mov	r0, r1
   16b34:	mov	r1, r2
   16b38:	mvn	r2, #0
   16b3c:	add	r3, sp, #60	; 0x3c
   16b40:	bl	1654c <__assert_fail@plt+0x5464>
   16b44:	mov	sp, fp
   16b48:	pop	{fp, pc}
   16b4c:	push	{fp, lr}
   16b50:	mov	fp, sp
   16b54:	sub	sp, sp, #24
   16b58:	str	r0, [fp, #-4]
   16b5c:	str	r1, [fp, #-8]
   16b60:	str	r2, [sp, #12]
   16b64:	str	r3, [sp, #8]
   16b68:	ldr	r0, [fp, #-4]
   16b6c:	ldr	r1, [fp, #-8]
   16b70:	ldr	r2, [sp, #12]
   16b74:	ldr	r3, [sp, #8]
   16b78:	mvn	ip, #0
   16b7c:	str	ip, [sp]
   16b80:	bl	16b8c <__assert_fail@plt+0x5aa4>
   16b84:	mov	sp, fp
   16b88:	pop	{fp, pc}
   16b8c:	push	{fp, lr}
   16b90:	mov	fp, sp
   16b94:	sub	sp, sp, #72	; 0x48
   16b98:	ldr	ip, [fp, #8]
   16b9c:	movw	lr, #364	; 0x16c
   16ba0:	movt	lr, #3
   16ba4:	str	r0, [fp, #-4]
   16ba8:	str	r1, [fp, #-8]
   16bac:	str	r2, [fp, #-12]
   16bb0:	str	r3, [fp, #-16]
   16bb4:	add	r0, sp, #8
   16bb8:	mov	r1, r0
   16bbc:	str	r0, [sp, #4]
   16bc0:	mov	r0, r1
   16bc4:	mov	r1, lr
   16bc8:	movw	r2, #48	; 0x30
   16bcc:	str	ip, [sp]
   16bd0:	bl	10ee4 <memcpy@plt>
   16bd4:	ldr	r1, [fp, #-8]
   16bd8:	ldr	r2, [fp, #-12]
   16bdc:	ldr	r0, [sp, #4]
   16be0:	bl	149e8 <__assert_fail@plt+0x3900>
   16be4:	ldr	r0, [fp, #-4]
   16be8:	ldr	r1, [fp, #-16]
   16bec:	ldr	r2, [fp, #8]
   16bf0:	add	r3, sp, #8
   16bf4:	bl	1654c <__assert_fail@plt+0x5464>
   16bf8:	mov	sp, fp
   16bfc:	pop	{fp, pc}
   16c00:	push	{fp, lr}
   16c04:	mov	fp, sp
   16c08:	sub	sp, sp, #16
   16c0c:	str	r0, [fp, #-4]
   16c10:	str	r1, [sp, #8]
   16c14:	str	r2, [sp, #4]
   16c18:	ldr	r1, [fp, #-4]
   16c1c:	ldr	r2, [sp, #8]
   16c20:	ldr	r3, [sp, #4]
   16c24:	movw	r0, #0
   16c28:	bl	16b4c <__assert_fail@plt+0x5a64>
   16c2c:	mov	sp, fp
   16c30:	pop	{fp, pc}
   16c34:	push	{fp, lr}
   16c38:	mov	fp, sp
   16c3c:	sub	sp, sp, #24
   16c40:	str	r0, [fp, #-4]
   16c44:	str	r1, [fp, #-8]
   16c48:	str	r2, [sp, #12]
   16c4c:	str	r3, [sp, #8]
   16c50:	ldr	r1, [fp, #-4]
   16c54:	ldr	r2, [fp, #-8]
   16c58:	ldr	r3, [sp, #12]
   16c5c:	ldr	r0, [sp, #8]
   16c60:	movw	ip, #0
   16c64:	str	r0, [sp, #4]
   16c68:	mov	r0, ip
   16c6c:	ldr	ip, [sp, #4]
   16c70:	str	ip, [sp]
   16c74:	bl	16b8c <__assert_fail@plt+0x5aa4>
   16c78:	mov	sp, fp
   16c7c:	pop	{fp, pc}
   16c80:	push	{fp, lr}
   16c84:	mov	fp, sp
   16c88:	sub	sp, sp, #16
   16c8c:	str	r0, [fp, #-4]
   16c90:	str	r1, [sp, #8]
   16c94:	str	r2, [sp, #4]
   16c98:	ldr	r0, [fp, #-4]
   16c9c:	ldr	r1, [sp, #8]
   16ca0:	ldr	r2, [sp, #4]
   16ca4:	movw	r3, #264	; 0x108
   16ca8:	movt	r3, #3
   16cac:	bl	1654c <__assert_fail@plt+0x5464>
   16cb0:	mov	sp, fp
   16cb4:	pop	{fp, pc}
   16cb8:	push	{fp, lr}
   16cbc:	mov	fp, sp
   16cc0:	sub	sp, sp, #8
   16cc4:	str	r0, [sp, #4]
   16cc8:	str	r1, [sp]
   16ccc:	ldr	r1, [sp, #4]
   16cd0:	ldr	r2, [sp]
   16cd4:	movw	r0, #0
   16cd8:	bl	16c80 <__assert_fail@plt+0x5b98>
   16cdc:	mov	sp, fp
   16ce0:	pop	{fp, pc}
   16ce4:	push	{fp, lr}
   16ce8:	mov	fp, sp
   16cec:	sub	sp, sp, #8
   16cf0:	str	r0, [sp, #4]
   16cf4:	str	r1, [sp]
   16cf8:	ldr	r0, [sp, #4]
   16cfc:	ldr	r1, [sp]
   16d00:	mvn	r2, #0
   16d04:	bl	16c80 <__assert_fail@plt+0x5b98>
   16d08:	mov	sp, fp
   16d0c:	pop	{fp, pc}
   16d10:	push	{fp, lr}
   16d14:	mov	fp, sp
   16d18:	sub	sp, sp, #8
   16d1c:	str	r0, [sp, #4]
   16d20:	ldr	r1, [sp, #4]
   16d24:	movw	r0, #0
   16d28:	bl	16ce4 <__assert_fail@plt+0x5bfc>
   16d2c:	mov	sp, fp
   16d30:	pop	{fp, pc}
   16d34:	push	{fp, lr}
   16d38:	mov	fp, sp
   16d3c:	sub	sp, sp, #24
   16d40:	str	r0, [fp, #-8]
   16d44:	str	r1, [sp, #12]
   16d48:	ldr	r0, [fp, #-8]
   16d4c:	bl	10fe0 <gettext@plt>
   16d50:	str	r0, [sp, #8]
   16d54:	ldr	r0, [sp, #8]
   16d58:	ldr	r1, [fp, #-8]
   16d5c:	cmp	r0, r1
   16d60:	beq	16d70 <__assert_fail@plt+0x5c88>
   16d64:	ldr	r0, [sp, #8]
   16d68:	str	r0, [fp, #-4]
   16d6c:	b	16e3c <__assert_fail@plt+0x5d54>
   16d70:	bl	1dffc <__assert_fail@plt+0xcf14>
   16d74:	str	r0, [sp, #4]
   16d78:	ldr	r0, [sp, #4]
   16d7c:	movw	r1, #62441	; 0xf3e9
   16d80:	movt	r1, #1
   16d84:	bl	1de74 <__assert_fail@plt+0xcd8c>
   16d88:	cmp	r0, #0
   16d8c:	bne	16dc4 <__assert_fail@plt+0x5cdc>
   16d90:	ldr	r0, [fp, #-8]
   16d94:	ldrb	r0, [r0]
   16d98:	cmp	r0, #96	; 0x60
   16d9c:	movw	r0, #0
   16da0:	moveq	r0, #1
   16da4:	tst	r0, #1
   16da8:	movw	r0, #62451	; 0xf3f3
   16dac:	movt	r0, #1
   16db0:	movw	r1, #62447	; 0xf3ef
   16db4:	movt	r1, #1
   16db8:	movne	r0, r1
   16dbc:	str	r0, [fp, #-4]
   16dc0:	b	16e3c <__assert_fail@plt+0x5d54>
   16dc4:	ldr	r0, [sp, #4]
   16dc8:	movw	r1, #62455	; 0xf3f7
   16dcc:	movt	r1, #1
   16dd0:	bl	1de74 <__assert_fail@plt+0xcd8c>
   16dd4:	cmp	r0, #0
   16dd8:	bne	16e10 <__assert_fail@plt+0x5d28>
   16ddc:	ldr	r0, [fp, #-8]
   16de0:	ldrb	r0, [r0]
   16de4:	cmp	r0, #96	; 0x60
   16de8:	movw	r0, #0
   16dec:	moveq	r0, #1
   16df0:	tst	r0, #1
   16df4:	movw	r0, #62467	; 0xf403
   16df8:	movt	r0, #1
   16dfc:	movw	r1, #62463	; 0xf3ff
   16e00:	movt	r1, #1
   16e04:	movne	r0, r1
   16e08:	str	r0, [fp, #-4]
   16e0c:	b	16e3c <__assert_fail@plt+0x5d54>
   16e10:	ldr	r0, [sp, #12]
   16e14:	cmp	r0, #9
   16e18:	movw	r0, #0
   16e1c:	moveq	r0, #1
   16e20:	tst	r0, #1
   16e24:	movw	r0, #62439	; 0xf3e7
   16e28:	movt	r0, #1
   16e2c:	movw	r1, #62435	; 0xf3e3
   16e30:	movt	r1, #1
   16e34:	movne	r0, r1
   16e38:	str	r0, [fp, #-4]
   16e3c:	ldr	r0, [fp, #-4]
   16e40:	mov	sp, fp
   16e44:	pop	{fp, pc}
   16e48:	push	{fp, lr}
   16e4c:	mov	fp, sp
   16e50:	sub	sp, sp, #176	; 0xb0
   16e54:	str	r0, [fp, #-8]
   16e58:	str	r1, [fp, #-12]
   16e5c:	str	r2, [fp, #-16]
   16e60:	b	17218 <__assert_fail@plt+0x6130>
   16e64:	b	17038 <__assert_fail@plt+0x5f50>
   16e68:	ldr	r0, [fp, #-16]
   16e6c:	cmp	r0, #0
   16e70:	bcs	16f74 <__assert_fail@plt+0x5e8c>
   16e74:	ldr	r0, [fp, #-12]
   16e78:	cmp	r0, #0
   16e7c:	bcs	16f04 <__assert_fail@plt+0x5e1c>
   16e80:	b	16ea0 <__assert_fail@plt+0x5db8>
   16e84:	ldr	r0, [fp, #-12]
   16e88:	ldr	r1, [fp, #-16]
   16e8c:	movw	r2, #127	; 0x7f
   16e90:	udiv	r1, r2, r1
   16e94:	cmp	r0, r1
   16e98:	bcc	17008 <__assert_fail@plt+0x5f20>
   16e9c:	b	17020 <__assert_fail@plt+0x5f38>
   16ea0:	b	16eb4 <__assert_fail@plt+0x5dcc>
   16ea4:	ldr	r0, [fp, #-16]
   16ea8:	cmp	r0, #1
   16eac:	bcc	16ec4 <__assert_fail@plt+0x5ddc>
   16eb0:	b	16ed0 <__assert_fail@plt+0x5de8>
   16eb4:	ldr	r0, [fp, #-16]
   16eb8:	movw	r1, #0
   16ebc:	cmp	r1, r0
   16ec0:	bcs	16ed0 <__assert_fail@plt+0x5de8>
   16ec4:	movw	r0, #0
   16ec8:	str	r0, [fp, #-24]	; 0xffffffe8
   16ecc:	b	16ee8 <__assert_fail@plt+0x5e00>
   16ed0:	ldr	r0, [fp, #-16]
   16ed4:	movw	r1, #0
   16ed8:	sub	r0, r1, r0
   16edc:	movw	r1, #127	; 0x7f
   16ee0:	udiv	r0, r1, r0
   16ee4:	str	r0, [fp, #-24]	; 0xffffffe8
   16ee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16eec:	ldr	r1, [fp, #-12]
   16ef0:	mvn	r2, #0
   16ef4:	sub	r1, r2, r1
   16ef8:	cmp	r0, r1
   16efc:	bls	17008 <__assert_fail@plt+0x5f20>
   16f00:	b	17020 <__assert_fail@plt+0x5f38>
   16f04:	ldr	r0, [fp, #-16]
   16f08:	cmn	r0, #1
   16f0c:	bne	16f58 <__assert_fail@plt+0x5e70>
   16f10:	b	16f30 <__assert_fail@plt+0x5e48>
   16f14:	ldr	r0, [fp, #-12]
   16f18:	mvn	r1, #127	; 0x7f
   16f1c:	add	r0, r0, r1
   16f20:	movw	r1, #0
   16f24:	cmp	r1, r0
   16f28:	bcc	17008 <__assert_fail@plt+0x5f20>
   16f2c:	b	17020 <__assert_fail@plt+0x5f38>
   16f30:	ldr	r0, [fp, #-12]
   16f34:	movw	r1, #0
   16f38:	cmp	r1, r0
   16f3c:	bcs	17020 <__assert_fail@plt+0x5f38>
   16f40:	ldr	r0, [fp, #-12]
   16f44:	sub	r0, r0, #1
   16f48:	movw	r1, #127	; 0x7f
   16f4c:	cmp	r1, r0
   16f50:	bcc	17008 <__assert_fail@plt+0x5f20>
   16f54:	b	17020 <__assert_fail@plt+0x5f38>
   16f58:	ldr	r0, [fp, #-16]
   16f5c:	mvn	r1, #127	; 0x7f
   16f60:	udiv	r0, r1, r0
   16f64:	ldr	r1, [fp, #-12]
   16f68:	cmp	r0, r1
   16f6c:	bcc	17008 <__assert_fail@plt+0x5f20>
   16f70:	b	17020 <__assert_fail@plt+0x5f38>
   16f74:	ldr	r0, [fp, #-16]
   16f78:	cmp	r0, #0
   16f7c:	bne	16f84 <__assert_fail@plt+0x5e9c>
   16f80:	b	17020 <__assert_fail@plt+0x5f38>
   16f84:	ldr	r0, [fp, #-12]
   16f88:	cmp	r0, #0
   16f8c:	bcs	16ff0 <__assert_fail@plt+0x5f08>
   16f90:	ldr	r0, [fp, #-12]
   16f94:	cmn	r0, #1
   16f98:	bne	16fd4 <__assert_fail@plt+0x5eec>
   16f9c:	b	16fbc <__assert_fail@plt+0x5ed4>
   16fa0:	ldr	r0, [fp, #-16]
   16fa4:	mvn	r1, #127	; 0x7f
   16fa8:	add	r0, r0, r1
   16fac:	movw	r1, #0
   16fb0:	cmp	r1, r0
   16fb4:	bcc	17008 <__assert_fail@plt+0x5f20>
   16fb8:	b	17020 <__assert_fail@plt+0x5f38>
   16fbc:	ldr	r0, [fp, #-16]
   16fc0:	sub	r0, r0, #1
   16fc4:	movw	r1, #127	; 0x7f
   16fc8:	cmp	r1, r0
   16fcc:	bcc	17008 <__assert_fail@plt+0x5f20>
   16fd0:	b	17020 <__assert_fail@plt+0x5f38>
   16fd4:	ldr	r0, [fp, #-12]
   16fd8:	mvn	r1, #127	; 0x7f
   16fdc:	udiv	r0, r1, r0
   16fe0:	ldr	r1, [fp, #-16]
   16fe4:	cmp	r0, r1
   16fe8:	bcc	17008 <__assert_fail@plt+0x5f20>
   16fec:	b	17020 <__assert_fail@plt+0x5f38>
   16ff0:	ldr	r0, [fp, #-16]
   16ff4:	movw	r1, #127	; 0x7f
   16ff8:	udiv	r0, r1, r0
   16ffc:	ldr	r1, [fp, #-12]
   17000:	cmp	r0, r1
   17004:	bcs	17020 <__assert_fail@plt+0x5f38>
   17008:	ldr	r0, [fp, #-12]
   1700c:	ldr	r1, [fp, #-16]
   17010:	mul	r0, r0, r1
   17014:	sxtb	r0, r0
   17018:	str	r0, [fp, #-20]	; 0xffffffec
   1701c:	b	18198 <__assert_fail@plt+0x70b0>
   17020:	ldr	r0, [fp, #-12]
   17024:	ldr	r1, [fp, #-16]
   17028:	mul	r0, r0, r1
   1702c:	sxtb	r0, r0
   17030:	str	r0, [fp, #-20]	; 0xffffffec
   17034:	b	181b0 <__assert_fail@plt+0x70c8>
   17038:	ldr	r0, [fp, #-16]
   1703c:	cmp	r0, #0
   17040:	bcs	1714c <__assert_fail@plt+0x6064>
   17044:	ldr	r0, [fp, #-12]
   17048:	cmp	r0, #0
   1704c:	bcs	170d4 <__assert_fail@plt+0x5fec>
   17050:	b	17070 <__assert_fail@plt+0x5f88>
   17054:	ldr	r0, [fp, #-12]
   17058:	ldr	r1, [fp, #-16]
   1705c:	movw	r2, #255	; 0xff
   17060:	udiv	r1, r2, r1
   17064:	cmp	r0, r1
   17068:	bcc	171e8 <__assert_fail@plt+0x6100>
   1706c:	b	17200 <__assert_fail@plt+0x6118>
   17070:	b	17084 <__assert_fail@plt+0x5f9c>
   17074:	ldr	r0, [fp, #-16]
   17078:	cmp	r0, #1
   1707c:	bcc	17094 <__assert_fail@plt+0x5fac>
   17080:	b	170a0 <__assert_fail@plt+0x5fb8>
   17084:	ldr	r0, [fp, #-16]
   17088:	movw	r1, #0
   1708c:	cmp	r1, r0
   17090:	bcs	170a0 <__assert_fail@plt+0x5fb8>
   17094:	movw	r0, #0
   17098:	str	r0, [fp, #-28]	; 0xffffffe4
   1709c:	b	170b8 <__assert_fail@plt+0x5fd0>
   170a0:	ldr	r0, [fp, #-16]
   170a4:	movw	r1, #0
   170a8:	sub	r0, r1, r0
   170ac:	movw	r1, #255	; 0xff
   170b0:	udiv	r0, r1, r0
   170b4:	str	r0, [fp, #-28]	; 0xffffffe4
   170b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   170bc:	ldr	r1, [fp, #-12]
   170c0:	mvn	r2, #0
   170c4:	sub	r1, r2, r1
   170c8:	cmp	r0, r1
   170cc:	bls	171e8 <__assert_fail@plt+0x6100>
   170d0:	b	17200 <__assert_fail@plt+0x6118>
   170d4:	b	170dc <__assert_fail@plt+0x5ff4>
   170d8:	b	170e0 <__assert_fail@plt+0x5ff8>
   170dc:	b	17130 <__assert_fail@plt+0x6048>
   170e0:	ldr	r0, [fp, #-16]
   170e4:	cmn	r0, #1
   170e8:	bne	17130 <__assert_fail@plt+0x6048>
   170ec:	b	17108 <__assert_fail@plt+0x6020>
   170f0:	ldr	r0, [fp, #-12]
   170f4:	add	r0, r0, #0
   170f8:	movw	r1, #0
   170fc:	cmp	r1, r0
   17100:	bcc	171e8 <__assert_fail@plt+0x6100>
   17104:	b	17200 <__assert_fail@plt+0x6118>
   17108:	ldr	r0, [fp, #-12]
   1710c:	movw	r1, #0
   17110:	cmp	r1, r0
   17114:	bcs	17200 <__assert_fail@plt+0x6118>
   17118:	ldr	r0, [fp, #-12]
   1711c:	sub	r0, r0, #1
   17120:	mvn	r1, #0
   17124:	cmp	r1, r0
   17128:	bcc	171e8 <__assert_fail@plt+0x6100>
   1712c:	b	17200 <__assert_fail@plt+0x6118>
   17130:	ldr	r0, [fp, #-16]
   17134:	movw	r1, #0
   17138:	udiv	r0, r1, r0
   1713c:	ldr	r1, [fp, #-12]
   17140:	cmp	r0, r1
   17144:	bcc	171e8 <__assert_fail@plt+0x6100>
   17148:	b	17200 <__assert_fail@plt+0x6118>
   1714c:	ldr	r0, [fp, #-16]
   17150:	cmp	r0, #0
   17154:	bne	1715c <__assert_fail@plt+0x6074>
   17158:	b	17200 <__assert_fail@plt+0x6118>
   1715c:	ldr	r0, [fp, #-12]
   17160:	cmp	r0, #0
   17164:	bcs	171d0 <__assert_fail@plt+0x60e8>
   17168:	b	17170 <__assert_fail@plt+0x6088>
   1716c:	b	17174 <__assert_fail@plt+0x608c>
   17170:	b	171b4 <__assert_fail@plt+0x60cc>
   17174:	ldr	r0, [fp, #-12]
   17178:	cmn	r0, #1
   1717c:	bne	171b4 <__assert_fail@plt+0x60cc>
   17180:	b	1719c <__assert_fail@plt+0x60b4>
   17184:	ldr	r0, [fp, #-16]
   17188:	add	r0, r0, #0
   1718c:	movw	r1, #0
   17190:	cmp	r1, r0
   17194:	bcc	171e8 <__assert_fail@plt+0x6100>
   17198:	b	17200 <__assert_fail@plt+0x6118>
   1719c:	ldr	r0, [fp, #-16]
   171a0:	sub	r0, r0, #1
   171a4:	mvn	r1, #0
   171a8:	cmp	r1, r0
   171ac:	bcc	171e8 <__assert_fail@plt+0x6100>
   171b0:	b	17200 <__assert_fail@plt+0x6118>
   171b4:	ldr	r0, [fp, #-12]
   171b8:	movw	r1, #0
   171bc:	udiv	r0, r1, r0
   171c0:	ldr	r1, [fp, #-16]
   171c4:	cmp	r0, r1
   171c8:	bcc	171e8 <__assert_fail@plt+0x6100>
   171cc:	b	17200 <__assert_fail@plt+0x6118>
   171d0:	ldr	r0, [fp, #-16]
   171d4:	movw	r1, #255	; 0xff
   171d8:	udiv	r0, r1, r0
   171dc:	ldr	r1, [fp, #-12]
   171e0:	cmp	r0, r1
   171e4:	bcs	17200 <__assert_fail@plt+0x6118>
   171e8:	ldr	r0, [fp, #-12]
   171ec:	ldr	r1, [fp, #-16]
   171f0:	mul	r0, r0, r1
   171f4:	and	r0, r0, #255	; 0xff
   171f8:	str	r0, [fp, #-20]	; 0xffffffec
   171fc:	b	18198 <__assert_fail@plt+0x70b0>
   17200:	ldr	r0, [fp, #-12]
   17204:	ldr	r1, [fp, #-16]
   17208:	mul	r0, r0, r1
   1720c:	and	r0, r0, #255	; 0xff
   17210:	str	r0, [fp, #-20]	; 0xffffffec
   17214:	b	181b0 <__assert_fail@plt+0x70c8>
   17218:	b	175d0 <__assert_fail@plt+0x64e8>
   1721c:	b	173f0 <__assert_fail@plt+0x6308>
   17220:	ldr	r0, [fp, #-16]
   17224:	cmp	r0, #0
   17228:	bcs	1732c <__assert_fail@plt+0x6244>
   1722c:	ldr	r0, [fp, #-12]
   17230:	cmp	r0, #0
   17234:	bcs	172bc <__assert_fail@plt+0x61d4>
   17238:	b	17258 <__assert_fail@plt+0x6170>
   1723c:	ldr	r0, [fp, #-12]
   17240:	ldr	r1, [fp, #-16]
   17244:	movw	r2, #32767	; 0x7fff
   17248:	udiv	r1, r2, r1
   1724c:	cmp	r0, r1
   17250:	bcc	173c0 <__assert_fail@plt+0x62d8>
   17254:	b	173d8 <__assert_fail@plt+0x62f0>
   17258:	b	1726c <__assert_fail@plt+0x6184>
   1725c:	ldr	r0, [fp, #-16]
   17260:	cmp	r0, #1
   17264:	bcc	1727c <__assert_fail@plt+0x6194>
   17268:	b	17288 <__assert_fail@plt+0x61a0>
   1726c:	ldr	r0, [fp, #-16]
   17270:	movw	r1, #0
   17274:	cmp	r1, r0
   17278:	bcs	17288 <__assert_fail@plt+0x61a0>
   1727c:	movw	r0, #0
   17280:	str	r0, [fp, #-32]	; 0xffffffe0
   17284:	b	172a0 <__assert_fail@plt+0x61b8>
   17288:	ldr	r0, [fp, #-16]
   1728c:	movw	r1, #0
   17290:	sub	r0, r1, r0
   17294:	movw	r1, #32767	; 0x7fff
   17298:	udiv	r0, r1, r0
   1729c:	str	r0, [fp, #-32]	; 0xffffffe0
   172a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   172a4:	ldr	r1, [fp, #-12]
   172a8:	mvn	r2, #0
   172ac:	sub	r1, r2, r1
   172b0:	cmp	r0, r1
   172b4:	bls	173c0 <__assert_fail@plt+0x62d8>
   172b8:	b	173d8 <__assert_fail@plt+0x62f0>
   172bc:	ldr	r0, [fp, #-16]
   172c0:	cmn	r0, #1
   172c4:	bne	17310 <__assert_fail@plt+0x6228>
   172c8:	b	172e8 <__assert_fail@plt+0x6200>
   172cc:	ldr	r0, [pc, #3840]	; 181d4 <__assert_fail@plt+0x70ec>
   172d0:	ldr	r1, [fp, #-12]
   172d4:	add	r0, r1, r0
   172d8:	movw	r1, #0
   172dc:	cmp	r1, r0
   172e0:	bcc	173c0 <__assert_fail@plt+0x62d8>
   172e4:	b	173d8 <__assert_fail@plt+0x62f0>
   172e8:	ldr	r0, [fp, #-12]
   172ec:	movw	r1, #0
   172f0:	cmp	r1, r0
   172f4:	bcs	173d8 <__assert_fail@plt+0x62f0>
   172f8:	ldr	r0, [fp, #-12]
   172fc:	sub	r0, r0, #1
   17300:	movw	r1, #32767	; 0x7fff
   17304:	cmp	r1, r0
   17308:	bcc	173c0 <__assert_fail@plt+0x62d8>
   1730c:	b	173d8 <__assert_fail@plt+0x62f0>
   17310:	ldr	r0, [pc, #3772]	; 181d4 <__assert_fail@plt+0x70ec>
   17314:	ldr	r1, [fp, #-16]
   17318:	udiv	r0, r0, r1
   1731c:	ldr	r1, [fp, #-12]
   17320:	cmp	r0, r1
   17324:	bcc	173c0 <__assert_fail@plt+0x62d8>
   17328:	b	173d8 <__assert_fail@plt+0x62f0>
   1732c:	ldr	r0, [fp, #-16]
   17330:	cmp	r0, #0
   17334:	bne	1733c <__assert_fail@plt+0x6254>
   17338:	b	173d8 <__assert_fail@plt+0x62f0>
   1733c:	ldr	r0, [fp, #-12]
   17340:	cmp	r0, #0
   17344:	bcs	173a8 <__assert_fail@plt+0x62c0>
   17348:	ldr	r0, [fp, #-12]
   1734c:	cmn	r0, #1
   17350:	bne	1738c <__assert_fail@plt+0x62a4>
   17354:	b	17374 <__assert_fail@plt+0x628c>
   17358:	ldr	r0, [pc, #3700]	; 181d4 <__assert_fail@plt+0x70ec>
   1735c:	ldr	r1, [fp, #-16]
   17360:	add	r0, r1, r0
   17364:	movw	r1, #0
   17368:	cmp	r1, r0
   1736c:	bcc	173c0 <__assert_fail@plt+0x62d8>
   17370:	b	173d8 <__assert_fail@plt+0x62f0>
   17374:	ldr	r0, [fp, #-16]
   17378:	sub	r0, r0, #1
   1737c:	movw	r1, #32767	; 0x7fff
   17380:	cmp	r1, r0
   17384:	bcc	173c0 <__assert_fail@plt+0x62d8>
   17388:	b	173d8 <__assert_fail@plt+0x62f0>
   1738c:	ldr	r0, [pc, #3648]	; 181d4 <__assert_fail@plt+0x70ec>
   17390:	ldr	r1, [fp, #-12]
   17394:	udiv	r0, r0, r1
   17398:	ldr	r1, [fp, #-16]
   1739c:	cmp	r0, r1
   173a0:	bcc	173c0 <__assert_fail@plt+0x62d8>
   173a4:	b	173d8 <__assert_fail@plt+0x62f0>
   173a8:	ldr	r0, [fp, #-16]
   173ac:	movw	r1, #32767	; 0x7fff
   173b0:	udiv	r0, r1, r0
   173b4:	ldr	r1, [fp, #-12]
   173b8:	cmp	r0, r1
   173bc:	bcs	173d8 <__assert_fail@plt+0x62f0>
   173c0:	ldr	r0, [fp, #-12]
   173c4:	ldr	r1, [fp, #-16]
   173c8:	mul	r0, r0, r1
   173cc:	sxth	r0, r0
   173d0:	str	r0, [fp, #-20]	; 0xffffffec
   173d4:	b	18198 <__assert_fail@plt+0x70b0>
   173d8:	ldr	r0, [fp, #-12]
   173dc:	ldr	r1, [fp, #-16]
   173e0:	mul	r0, r0, r1
   173e4:	sxth	r0, r0
   173e8:	str	r0, [fp, #-20]	; 0xffffffec
   173ec:	b	181b0 <__assert_fail@plt+0x70c8>
   173f0:	ldr	r0, [fp, #-16]
   173f4:	cmp	r0, #0
   173f8:	bcs	17504 <__assert_fail@plt+0x641c>
   173fc:	ldr	r0, [fp, #-12]
   17400:	cmp	r0, #0
   17404:	bcs	1748c <__assert_fail@plt+0x63a4>
   17408:	b	17428 <__assert_fail@plt+0x6340>
   1740c:	ldr	r0, [fp, #-12]
   17410:	ldr	r1, [fp, #-16]
   17414:	movw	r2, #65535	; 0xffff
   17418:	udiv	r1, r2, r1
   1741c:	cmp	r0, r1
   17420:	bcc	175a0 <__assert_fail@plt+0x64b8>
   17424:	b	175b8 <__assert_fail@plt+0x64d0>
   17428:	b	1743c <__assert_fail@plt+0x6354>
   1742c:	ldr	r0, [fp, #-16]
   17430:	cmp	r0, #1
   17434:	bcc	1744c <__assert_fail@plt+0x6364>
   17438:	b	17458 <__assert_fail@plt+0x6370>
   1743c:	ldr	r0, [fp, #-16]
   17440:	movw	r1, #0
   17444:	cmp	r1, r0
   17448:	bcs	17458 <__assert_fail@plt+0x6370>
   1744c:	movw	r0, #0
   17450:	str	r0, [fp, #-36]	; 0xffffffdc
   17454:	b	17470 <__assert_fail@plt+0x6388>
   17458:	ldr	r0, [fp, #-16]
   1745c:	movw	r1, #0
   17460:	sub	r0, r1, r0
   17464:	movw	r1, #65535	; 0xffff
   17468:	udiv	r0, r1, r0
   1746c:	str	r0, [fp, #-36]	; 0xffffffdc
   17470:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17474:	ldr	r1, [fp, #-12]
   17478:	mvn	r2, #0
   1747c:	sub	r1, r2, r1
   17480:	cmp	r0, r1
   17484:	bls	175a0 <__assert_fail@plt+0x64b8>
   17488:	b	175b8 <__assert_fail@plt+0x64d0>
   1748c:	b	17494 <__assert_fail@plt+0x63ac>
   17490:	b	17498 <__assert_fail@plt+0x63b0>
   17494:	b	174e8 <__assert_fail@plt+0x6400>
   17498:	ldr	r0, [fp, #-16]
   1749c:	cmn	r0, #1
   174a0:	bne	174e8 <__assert_fail@plt+0x6400>
   174a4:	b	174c0 <__assert_fail@plt+0x63d8>
   174a8:	ldr	r0, [fp, #-12]
   174ac:	add	r0, r0, #0
   174b0:	movw	r1, #0
   174b4:	cmp	r1, r0
   174b8:	bcc	175a0 <__assert_fail@plt+0x64b8>
   174bc:	b	175b8 <__assert_fail@plt+0x64d0>
   174c0:	ldr	r0, [fp, #-12]
   174c4:	movw	r1, #0
   174c8:	cmp	r1, r0
   174cc:	bcs	175b8 <__assert_fail@plt+0x64d0>
   174d0:	ldr	r0, [fp, #-12]
   174d4:	sub	r0, r0, #1
   174d8:	mvn	r1, #0
   174dc:	cmp	r1, r0
   174e0:	bcc	175a0 <__assert_fail@plt+0x64b8>
   174e4:	b	175b8 <__assert_fail@plt+0x64d0>
   174e8:	ldr	r0, [fp, #-16]
   174ec:	movw	r1, #0
   174f0:	udiv	r0, r1, r0
   174f4:	ldr	r1, [fp, #-12]
   174f8:	cmp	r0, r1
   174fc:	bcc	175a0 <__assert_fail@plt+0x64b8>
   17500:	b	175b8 <__assert_fail@plt+0x64d0>
   17504:	ldr	r0, [fp, #-16]
   17508:	cmp	r0, #0
   1750c:	bne	17514 <__assert_fail@plt+0x642c>
   17510:	b	175b8 <__assert_fail@plt+0x64d0>
   17514:	ldr	r0, [fp, #-12]
   17518:	cmp	r0, #0
   1751c:	bcs	17588 <__assert_fail@plt+0x64a0>
   17520:	b	17528 <__assert_fail@plt+0x6440>
   17524:	b	1752c <__assert_fail@plt+0x6444>
   17528:	b	1756c <__assert_fail@plt+0x6484>
   1752c:	ldr	r0, [fp, #-12]
   17530:	cmn	r0, #1
   17534:	bne	1756c <__assert_fail@plt+0x6484>
   17538:	b	17554 <__assert_fail@plt+0x646c>
   1753c:	ldr	r0, [fp, #-16]
   17540:	add	r0, r0, #0
   17544:	movw	r1, #0
   17548:	cmp	r1, r0
   1754c:	bcc	175a0 <__assert_fail@plt+0x64b8>
   17550:	b	175b8 <__assert_fail@plt+0x64d0>
   17554:	ldr	r0, [fp, #-16]
   17558:	sub	r0, r0, #1
   1755c:	mvn	r1, #0
   17560:	cmp	r1, r0
   17564:	bcc	175a0 <__assert_fail@plt+0x64b8>
   17568:	b	175b8 <__assert_fail@plt+0x64d0>
   1756c:	ldr	r0, [fp, #-12]
   17570:	movw	r1, #0
   17574:	udiv	r0, r1, r0
   17578:	ldr	r1, [fp, #-16]
   1757c:	cmp	r0, r1
   17580:	bcc	175a0 <__assert_fail@plt+0x64b8>
   17584:	b	175b8 <__assert_fail@plt+0x64d0>
   17588:	ldr	r0, [fp, #-16]
   1758c:	movw	r1, #65535	; 0xffff
   17590:	udiv	r0, r1, r0
   17594:	ldr	r1, [fp, #-12]
   17598:	cmp	r0, r1
   1759c:	bcs	175b8 <__assert_fail@plt+0x64d0>
   175a0:	ldr	r0, [fp, #-12]
   175a4:	ldr	r1, [fp, #-16]
   175a8:	mul	r0, r0, r1
   175ac:	uxth	r0, r0
   175b0:	str	r0, [fp, #-20]	; 0xffffffec
   175b4:	b	18198 <__assert_fail@plt+0x70b0>
   175b8:	ldr	r0, [fp, #-12]
   175bc:	ldr	r1, [fp, #-16]
   175c0:	mul	r0, r0, r1
   175c4:	uxth	r0, r0
   175c8:	str	r0, [fp, #-20]	; 0xffffffec
   175cc:	b	181b0 <__assert_fail@plt+0x70c8>
   175d0:	b	175d4 <__assert_fail@plt+0x64ec>
   175d4:	b	17798 <__assert_fail@plt+0x66b0>
   175d8:	ldr	r0, [fp, #-16]
   175dc:	cmp	r0, #0
   175e0:	bcs	176e0 <__assert_fail@plt+0x65f8>
   175e4:	ldr	r0, [fp, #-12]
   175e8:	cmp	r0, #0
   175ec:	bcs	17674 <__assert_fail@plt+0x658c>
   175f0:	b	17610 <__assert_fail@plt+0x6528>
   175f4:	ldr	r0, [pc, #3024]	; 181cc <__assert_fail@plt+0x70e4>
   175f8:	ldr	r1, [fp, #-12]
   175fc:	ldr	r2, [fp, #-16]
   17600:	udiv	r0, r0, r2
   17604:	cmp	r1, r0
   17608:	bcc	17770 <__assert_fail@plt+0x6688>
   1760c:	b	17784 <__assert_fail@plt+0x669c>
   17610:	b	17624 <__assert_fail@plt+0x653c>
   17614:	ldr	r0, [fp, #-16]
   17618:	cmp	r0, #1
   1761c:	bcc	17634 <__assert_fail@plt+0x654c>
   17620:	b	17640 <__assert_fail@plt+0x6558>
   17624:	ldr	r0, [fp, #-16]
   17628:	movw	r1, #0
   1762c:	cmp	r1, r0
   17630:	bcs	17640 <__assert_fail@plt+0x6558>
   17634:	movw	r0, #0
   17638:	str	r0, [fp, #-40]	; 0xffffffd8
   1763c:	b	17658 <__assert_fail@plt+0x6570>
   17640:	ldr	r0, [pc, #2948]	; 181cc <__assert_fail@plt+0x70e4>
   17644:	ldr	r1, [fp, #-16]
   17648:	movw	r2, #0
   1764c:	sub	r1, r2, r1
   17650:	udiv	r0, r0, r1
   17654:	str	r0, [fp, #-40]	; 0xffffffd8
   17658:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1765c:	ldr	r1, [fp, #-12]
   17660:	mvn	r2, #0
   17664:	sub	r1, r2, r1
   17668:	cmp	r0, r1
   1766c:	bls	17770 <__assert_fail@plt+0x6688>
   17670:	b	17784 <__assert_fail@plt+0x669c>
   17674:	ldr	r0, [fp, #-16]
   17678:	cmn	r0, #1
   1767c:	bne	176c4 <__assert_fail@plt+0x65dc>
   17680:	b	1769c <__assert_fail@plt+0x65b4>
   17684:	ldr	r0, [fp, #-12]
   17688:	add	r0, r0, #-2147483648	; 0x80000000
   1768c:	movw	r1, #0
   17690:	cmp	r1, r0
   17694:	bcc	17770 <__assert_fail@plt+0x6688>
   17698:	b	17784 <__assert_fail@plt+0x669c>
   1769c:	ldr	r0, [fp, #-12]
   176a0:	movw	r1, #0
   176a4:	cmp	r1, r0
   176a8:	bcs	17784 <__assert_fail@plt+0x669c>
   176ac:	ldr	r0, [pc, #2840]	; 181cc <__assert_fail@plt+0x70e4>
   176b0:	ldr	r1, [fp, #-12]
   176b4:	sub	r1, r1, #1
   176b8:	cmp	r0, r1
   176bc:	bcc	17770 <__assert_fail@plt+0x6688>
   176c0:	b	17784 <__assert_fail@plt+0x669c>
   176c4:	ldr	r0, [pc, #2820]	; 181d0 <__assert_fail@plt+0x70e8>
   176c8:	ldr	r1, [fp, #-16]
   176cc:	udiv	r0, r0, r1
   176d0:	ldr	r1, [fp, #-12]
   176d4:	cmp	r0, r1
   176d8:	bcc	17770 <__assert_fail@plt+0x6688>
   176dc:	b	17784 <__assert_fail@plt+0x669c>
   176e0:	ldr	r0, [fp, #-16]
   176e4:	cmp	r0, #0
   176e8:	bne	176f0 <__assert_fail@plt+0x6608>
   176ec:	b	17784 <__assert_fail@plt+0x669c>
   176f0:	ldr	r0, [fp, #-12]
   176f4:	cmp	r0, #0
   176f8:	bcs	17758 <__assert_fail@plt+0x6670>
   176fc:	ldr	r0, [fp, #-12]
   17700:	cmn	r0, #1
   17704:	bne	1773c <__assert_fail@plt+0x6654>
   17708:	b	17724 <__assert_fail@plt+0x663c>
   1770c:	ldr	r0, [fp, #-16]
   17710:	add	r0, r0, #-2147483648	; 0x80000000
   17714:	movw	r1, #0
   17718:	cmp	r1, r0
   1771c:	bcc	17770 <__assert_fail@plt+0x6688>
   17720:	b	17784 <__assert_fail@plt+0x669c>
   17724:	ldr	r0, [pc, #2720]	; 181cc <__assert_fail@plt+0x70e4>
   17728:	ldr	r1, [fp, #-16]
   1772c:	sub	r1, r1, #1
   17730:	cmp	r0, r1
   17734:	bcc	17770 <__assert_fail@plt+0x6688>
   17738:	b	17784 <__assert_fail@plt+0x669c>
   1773c:	ldr	r0, [pc, #2700]	; 181d0 <__assert_fail@plt+0x70e8>
   17740:	ldr	r1, [fp, #-12]
   17744:	udiv	r0, r0, r1
   17748:	ldr	r1, [fp, #-16]
   1774c:	cmp	r0, r1
   17750:	bcc	17770 <__assert_fail@plt+0x6688>
   17754:	b	17784 <__assert_fail@plt+0x669c>
   17758:	ldr	r0, [pc, #2668]	; 181cc <__assert_fail@plt+0x70e4>
   1775c:	ldr	r1, [fp, #-16]
   17760:	udiv	r0, r0, r1
   17764:	ldr	r1, [fp, #-12]
   17768:	cmp	r0, r1
   1776c:	bcs	17784 <__assert_fail@plt+0x669c>
   17770:	ldr	r0, [fp, #-12]
   17774:	ldr	r1, [fp, #-16]
   17778:	mul	r0, r0, r1
   1777c:	str	r0, [fp, #-20]	; 0xffffffec
   17780:	b	18198 <__assert_fail@plt+0x70b0>
   17784:	ldr	r0, [fp, #-12]
   17788:	ldr	r1, [fp, #-16]
   1778c:	mul	r0, r0, r1
   17790:	str	r0, [fp, #-20]	; 0xffffffec
   17794:	b	181b0 <__assert_fail@plt+0x70c8>
   17798:	ldr	r0, [fp, #-16]
   1779c:	cmp	r0, #0
   177a0:	bcs	178ac <__assert_fail@plt+0x67c4>
   177a4:	ldr	r0, [fp, #-12]
   177a8:	cmp	r0, #0
   177ac:	bcs	17834 <__assert_fail@plt+0x674c>
   177b0:	b	177d0 <__assert_fail@plt+0x66e8>
   177b4:	ldr	r0, [fp, #-12]
   177b8:	ldr	r1, [fp, #-16]
   177bc:	mvn	r2, #0
   177c0:	udiv	r1, r2, r1
   177c4:	cmp	r0, r1
   177c8:	bcc	17948 <__assert_fail@plt+0x6860>
   177cc:	b	1795c <__assert_fail@plt+0x6874>
   177d0:	b	177e4 <__assert_fail@plt+0x66fc>
   177d4:	ldr	r0, [fp, #-16]
   177d8:	cmp	r0, #1
   177dc:	bcc	177f4 <__assert_fail@plt+0x670c>
   177e0:	b	17800 <__assert_fail@plt+0x6718>
   177e4:	ldr	r0, [fp, #-16]
   177e8:	movw	r1, #0
   177ec:	cmp	r1, r0
   177f0:	bcs	17800 <__assert_fail@plt+0x6718>
   177f4:	movw	r0, #1
   177f8:	str	r0, [fp, #-44]	; 0xffffffd4
   177fc:	b	17818 <__assert_fail@plt+0x6730>
   17800:	ldr	r0, [fp, #-16]
   17804:	movw	r1, #0
   17808:	sub	r0, r1, r0
   1780c:	mvn	r1, #0
   17810:	udiv	r0, r1, r0
   17814:	str	r0, [fp, #-44]	; 0xffffffd4
   17818:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1781c:	ldr	r1, [fp, #-12]
   17820:	mvn	r2, #0
   17824:	sub	r1, r2, r1
   17828:	cmp	r0, r1
   1782c:	bls	17948 <__assert_fail@plt+0x6860>
   17830:	b	1795c <__assert_fail@plt+0x6874>
   17834:	b	1783c <__assert_fail@plt+0x6754>
   17838:	b	17840 <__assert_fail@plt+0x6758>
   1783c:	b	17890 <__assert_fail@plt+0x67a8>
   17840:	ldr	r0, [fp, #-16]
   17844:	cmn	r0, #1
   17848:	bne	17890 <__assert_fail@plt+0x67a8>
   1784c:	b	17868 <__assert_fail@plt+0x6780>
   17850:	ldr	r0, [fp, #-12]
   17854:	add	r0, r0, #0
   17858:	movw	r1, #0
   1785c:	cmp	r1, r0
   17860:	bcc	17948 <__assert_fail@plt+0x6860>
   17864:	b	1795c <__assert_fail@plt+0x6874>
   17868:	ldr	r0, [fp, #-12]
   1786c:	movw	r1, #0
   17870:	cmp	r1, r0
   17874:	bcs	1795c <__assert_fail@plt+0x6874>
   17878:	ldr	r0, [fp, #-12]
   1787c:	sub	r0, r0, #1
   17880:	mvn	r1, #0
   17884:	cmp	r1, r0
   17888:	bcc	17948 <__assert_fail@plt+0x6860>
   1788c:	b	1795c <__assert_fail@plt+0x6874>
   17890:	ldr	r0, [fp, #-16]
   17894:	movw	r1, #0
   17898:	udiv	r0, r1, r0
   1789c:	ldr	r1, [fp, #-12]
   178a0:	cmp	r0, r1
   178a4:	bcc	17948 <__assert_fail@plt+0x6860>
   178a8:	b	1795c <__assert_fail@plt+0x6874>
   178ac:	ldr	r0, [fp, #-16]
   178b0:	cmp	r0, #0
   178b4:	bne	178bc <__assert_fail@plt+0x67d4>
   178b8:	b	1795c <__assert_fail@plt+0x6874>
   178bc:	ldr	r0, [fp, #-12]
   178c0:	cmp	r0, #0
   178c4:	bcs	17930 <__assert_fail@plt+0x6848>
   178c8:	b	178d0 <__assert_fail@plt+0x67e8>
   178cc:	b	178d4 <__assert_fail@plt+0x67ec>
   178d0:	b	17914 <__assert_fail@plt+0x682c>
   178d4:	ldr	r0, [fp, #-12]
   178d8:	cmn	r0, #1
   178dc:	bne	17914 <__assert_fail@plt+0x682c>
   178e0:	b	178fc <__assert_fail@plt+0x6814>
   178e4:	ldr	r0, [fp, #-16]
   178e8:	add	r0, r0, #0
   178ec:	movw	r1, #0
   178f0:	cmp	r1, r0
   178f4:	bcc	17948 <__assert_fail@plt+0x6860>
   178f8:	b	1795c <__assert_fail@plt+0x6874>
   178fc:	ldr	r0, [fp, #-16]
   17900:	sub	r0, r0, #1
   17904:	mvn	r1, #0
   17908:	cmp	r1, r0
   1790c:	bcc	17948 <__assert_fail@plt+0x6860>
   17910:	b	1795c <__assert_fail@plt+0x6874>
   17914:	ldr	r0, [fp, #-12]
   17918:	movw	r1, #0
   1791c:	udiv	r0, r1, r0
   17920:	ldr	r1, [fp, #-16]
   17924:	cmp	r0, r1
   17928:	bcc	17948 <__assert_fail@plt+0x6860>
   1792c:	b	1795c <__assert_fail@plt+0x6874>
   17930:	ldr	r0, [fp, #-16]
   17934:	mvn	r1, #0
   17938:	udiv	r0, r1, r0
   1793c:	ldr	r1, [fp, #-12]
   17940:	cmp	r0, r1
   17944:	bcs	1795c <__assert_fail@plt+0x6874>
   17948:	ldr	r0, [fp, #-12]
   1794c:	ldr	r1, [fp, #-16]
   17950:	mul	r0, r0, r1
   17954:	str	r0, [fp, #-20]	; 0xffffffec
   17958:	b	18198 <__assert_fail@plt+0x70b0>
   1795c:	ldr	r0, [fp, #-12]
   17960:	ldr	r1, [fp, #-16]
   17964:	mul	r0, r0, r1
   17968:	str	r0, [fp, #-20]	; 0xffffffec
   1796c:	b	181b0 <__assert_fail@plt+0x70c8>
   17970:	b	17974 <__assert_fail@plt+0x688c>
   17974:	b	17b38 <__assert_fail@plt+0x6a50>
   17978:	ldr	r0, [fp, #-16]
   1797c:	cmp	r0, #0
   17980:	bcs	17a80 <__assert_fail@plt+0x6998>
   17984:	ldr	r0, [fp, #-12]
   17988:	cmp	r0, #0
   1798c:	bcs	17a14 <__assert_fail@plt+0x692c>
   17990:	b	179b0 <__assert_fail@plt+0x68c8>
   17994:	ldr	r0, [pc, #2096]	; 181cc <__assert_fail@plt+0x70e4>
   17998:	ldr	r1, [fp, #-12]
   1799c:	ldr	r2, [fp, #-16]
   179a0:	udiv	r0, r0, r2
   179a4:	cmp	r1, r0
   179a8:	bcc	17b10 <__assert_fail@plt+0x6a28>
   179ac:	b	17b24 <__assert_fail@plt+0x6a3c>
   179b0:	b	179c4 <__assert_fail@plt+0x68dc>
   179b4:	ldr	r0, [fp, #-16]
   179b8:	cmp	r0, #1
   179bc:	bcc	179d4 <__assert_fail@plt+0x68ec>
   179c0:	b	179e0 <__assert_fail@plt+0x68f8>
   179c4:	ldr	r0, [fp, #-16]
   179c8:	movw	r1, #0
   179cc:	cmp	r1, r0
   179d0:	bcs	179e0 <__assert_fail@plt+0x68f8>
   179d4:	movw	r0, #0
   179d8:	str	r0, [fp, #-48]	; 0xffffffd0
   179dc:	b	179f8 <__assert_fail@plt+0x6910>
   179e0:	ldr	r0, [pc, #2020]	; 181cc <__assert_fail@plt+0x70e4>
   179e4:	ldr	r1, [fp, #-16]
   179e8:	movw	r2, #0
   179ec:	sub	r1, r2, r1
   179f0:	udiv	r0, r0, r1
   179f4:	str	r0, [fp, #-48]	; 0xffffffd0
   179f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   179fc:	ldr	r1, [fp, #-12]
   17a00:	mvn	r2, #0
   17a04:	sub	r1, r2, r1
   17a08:	cmp	r0, r1
   17a0c:	bls	17b10 <__assert_fail@plt+0x6a28>
   17a10:	b	17b24 <__assert_fail@plt+0x6a3c>
   17a14:	ldr	r0, [fp, #-16]
   17a18:	cmn	r0, #1
   17a1c:	bne	17a64 <__assert_fail@plt+0x697c>
   17a20:	b	17a3c <__assert_fail@plt+0x6954>
   17a24:	ldr	r0, [fp, #-12]
   17a28:	add	r0, r0, #-2147483648	; 0x80000000
   17a2c:	movw	r1, #0
   17a30:	cmp	r1, r0
   17a34:	bcc	17b10 <__assert_fail@plt+0x6a28>
   17a38:	b	17b24 <__assert_fail@plt+0x6a3c>
   17a3c:	ldr	r0, [fp, #-12]
   17a40:	movw	r1, #0
   17a44:	cmp	r1, r0
   17a48:	bcs	17b24 <__assert_fail@plt+0x6a3c>
   17a4c:	ldr	r0, [pc, #1912]	; 181cc <__assert_fail@plt+0x70e4>
   17a50:	ldr	r1, [fp, #-12]
   17a54:	sub	r1, r1, #1
   17a58:	cmp	r0, r1
   17a5c:	bcc	17b10 <__assert_fail@plt+0x6a28>
   17a60:	b	17b24 <__assert_fail@plt+0x6a3c>
   17a64:	ldr	r0, [pc, #1892]	; 181d0 <__assert_fail@plt+0x70e8>
   17a68:	ldr	r1, [fp, #-16]
   17a6c:	udiv	r0, r0, r1
   17a70:	ldr	r1, [fp, #-12]
   17a74:	cmp	r0, r1
   17a78:	bcc	17b10 <__assert_fail@plt+0x6a28>
   17a7c:	b	17b24 <__assert_fail@plt+0x6a3c>
   17a80:	ldr	r0, [fp, #-16]
   17a84:	cmp	r0, #0
   17a88:	bne	17a90 <__assert_fail@plt+0x69a8>
   17a8c:	b	17b24 <__assert_fail@plt+0x6a3c>
   17a90:	ldr	r0, [fp, #-12]
   17a94:	cmp	r0, #0
   17a98:	bcs	17af8 <__assert_fail@plt+0x6a10>
   17a9c:	ldr	r0, [fp, #-12]
   17aa0:	cmn	r0, #1
   17aa4:	bne	17adc <__assert_fail@plt+0x69f4>
   17aa8:	b	17ac4 <__assert_fail@plt+0x69dc>
   17aac:	ldr	r0, [fp, #-16]
   17ab0:	add	r0, r0, #-2147483648	; 0x80000000
   17ab4:	movw	r1, #0
   17ab8:	cmp	r1, r0
   17abc:	bcc	17b10 <__assert_fail@plt+0x6a28>
   17ac0:	b	17b24 <__assert_fail@plt+0x6a3c>
   17ac4:	ldr	r0, [pc, #1792]	; 181cc <__assert_fail@plt+0x70e4>
   17ac8:	ldr	r1, [fp, #-16]
   17acc:	sub	r1, r1, #1
   17ad0:	cmp	r0, r1
   17ad4:	bcc	17b10 <__assert_fail@plt+0x6a28>
   17ad8:	b	17b24 <__assert_fail@plt+0x6a3c>
   17adc:	ldr	r0, [pc, #1772]	; 181d0 <__assert_fail@plt+0x70e8>
   17ae0:	ldr	r1, [fp, #-12]
   17ae4:	udiv	r0, r0, r1
   17ae8:	ldr	r1, [fp, #-16]
   17aec:	cmp	r0, r1
   17af0:	bcc	17b10 <__assert_fail@plt+0x6a28>
   17af4:	b	17b24 <__assert_fail@plt+0x6a3c>
   17af8:	ldr	r0, [pc, #1740]	; 181cc <__assert_fail@plt+0x70e4>
   17afc:	ldr	r1, [fp, #-16]
   17b00:	udiv	r0, r0, r1
   17b04:	ldr	r1, [fp, #-12]
   17b08:	cmp	r0, r1
   17b0c:	bcs	17b24 <__assert_fail@plt+0x6a3c>
   17b10:	ldr	r0, [fp, #-12]
   17b14:	ldr	r1, [fp, #-16]
   17b18:	mul	r0, r0, r1
   17b1c:	str	r0, [fp, #-20]	; 0xffffffec
   17b20:	b	18198 <__assert_fail@plt+0x70b0>
   17b24:	ldr	r0, [fp, #-12]
   17b28:	ldr	r1, [fp, #-16]
   17b2c:	mul	r0, r0, r1
   17b30:	str	r0, [fp, #-20]	; 0xffffffec
   17b34:	b	181b0 <__assert_fail@plt+0x70c8>
   17b38:	ldr	r0, [fp, #-16]
   17b3c:	cmp	r0, #0
   17b40:	bcs	17c4c <__assert_fail@plt+0x6b64>
   17b44:	ldr	r0, [fp, #-12]
   17b48:	cmp	r0, #0
   17b4c:	bcs	17bd4 <__assert_fail@plt+0x6aec>
   17b50:	b	17b70 <__assert_fail@plt+0x6a88>
   17b54:	ldr	r0, [fp, #-12]
   17b58:	ldr	r1, [fp, #-16]
   17b5c:	mvn	r2, #0
   17b60:	udiv	r1, r2, r1
   17b64:	cmp	r0, r1
   17b68:	bcc	17ce8 <__assert_fail@plt+0x6c00>
   17b6c:	b	17cfc <__assert_fail@plt+0x6c14>
   17b70:	b	17b84 <__assert_fail@plt+0x6a9c>
   17b74:	ldr	r0, [fp, #-16]
   17b78:	cmp	r0, #1
   17b7c:	bcc	17b94 <__assert_fail@plt+0x6aac>
   17b80:	b	17ba0 <__assert_fail@plt+0x6ab8>
   17b84:	ldr	r0, [fp, #-16]
   17b88:	movw	r1, #0
   17b8c:	cmp	r1, r0
   17b90:	bcs	17ba0 <__assert_fail@plt+0x6ab8>
   17b94:	movw	r0, #1
   17b98:	str	r0, [fp, #-52]	; 0xffffffcc
   17b9c:	b	17bb8 <__assert_fail@plt+0x6ad0>
   17ba0:	ldr	r0, [fp, #-16]
   17ba4:	movw	r1, #0
   17ba8:	sub	r0, r1, r0
   17bac:	mvn	r1, #0
   17bb0:	udiv	r0, r1, r0
   17bb4:	str	r0, [fp, #-52]	; 0xffffffcc
   17bb8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17bbc:	ldr	r1, [fp, #-12]
   17bc0:	mvn	r2, #0
   17bc4:	sub	r1, r2, r1
   17bc8:	cmp	r0, r1
   17bcc:	bls	17ce8 <__assert_fail@plt+0x6c00>
   17bd0:	b	17cfc <__assert_fail@plt+0x6c14>
   17bd4:	b	17bdc <__assert_fail@plt+0x6af4>
   17bd8:	b	17be0 <__assert_fail@plt+0x6af8>
   17bdc:	b	17c30 <__assert_fail@plt+0x6b48>
   17be0:	ldr	r0, [fp, #-16]
   17be4:	cmn	r0, #1
   17be8:	bne	17c30 <__assert_fail@plt+0x6b48>
   17bec:	b	17c08 <__assert_fail@plt+0x6b20>
   17bf0:	ldr	r0, [fp, #-12]
   17bf4:	add	r0, r0, #0
   17bf8:	movw	r1, #0
   17bfc:	cmp	r1, r0
   17c00:	bcc	17ce8 <__assert_fail@plt+0x6c00>
   17c04:	b	17cfc <__assert_fail@plt+0x6c14>
   17c08:	ldr	r0, [fp, #-12]
   17c0c:	movw	r1, #0
   17c10:	cmp	r1, r0
   17c14:	bcs	17cfc <__assert_fail@plt+0x6c14>
   17c18:	ldr	r0, [fp, #-12]
   17c1c:	sub	r0, r0, #1
   17c20:	mvn	r1, #0
   17c24:	cmp	r1, r0
   17c28:	bcc	17ce8 <__assert_fail@plt+0x6c00>
   17c2c:	b	17cfc <__assert_fail@plt+0x6c14>
   17c30:	ldr	r0, [fp, #-16]
   17c34:	movw	r1, #0
   17c38:	udiv	r0, r1, r0
   17c3c:	ldr	r1, [fp, #-12]
   17c40:	cmp	r0, r1
   17c44:	bcc	17ce8 <__assert_fail@plt+0x6c00>
   17c48:	b	17cfc <__assert_fail@plt+0x6c14>
   17c4c:	ldr	r0, [fp, #-16]
   17c50:	cmp	r0, #0
   17c54:	bne	17c5c <__assert_fail@plt+0x6b74>
   17c58:	b	17cfc <__assert_fail@plt+0x6c14>
   17c5c:	ldr	r0, [fp, #-12]
   17c60:	cmp	r0, #0
   17c64:	bcs	17cd0 <__assert_fail@plt+0x6be8>
   17c68:	b	17c70 <__assert_fail@plt+0x6b88>
   17c6c:	b	17c74 <__assert_fail@plt+0x6b8c>
   17c70:	b	17cb4 <__assert_fail@plt+0x6bcc>
   17c74:	ldr	r0, [fp, #-12]
   17c78:	cmn	r0, #1
   17c7c:	bne	17cb4 <__assert_fail@plt+0x6bcc>
   17c80:	b	17c9c <__assert_fail@plt+0x6bb4>
   17c84:	ldr	r0, [fp, #-16]
   17c88:	add	r0, r0, #0
   17c8c:	movw	r1, #0
   17c90:	cmp	r1, r0
   17c94:	bcc	17ce8 <__assert_fail@plt+0x6c00>
   17c98:	b	17cfc <__assert_fail@plt+0x6c14>
   17c9c:	ldr	r0, [fp, #-16]
   17ca0:	sub	r0, r0, #1
   17ca4:	mvn	r1, #0
   17ca8:	cmp	r1, r0
   17cac:	bcc	17ce8 <__assert_fail@plt+0x6c00>
   17cb0:	b	17cfc <__assert_fail@plt+0x6c14>
   17cb4:	ldr	r0, [fp, #-12]
   17cb8:	movw	r1, #0
   17cbc:	udiv	r0, r1, r0
   17cc0:	ldr	r1, [fp, #-16]
   17cc4:	cmp	r0, r1
   17cc8:	bcc	17ce8 <__assert_fail@plt+0x6c00>
   17ccc:	b	17cfc <__assert_fail@plt+0x6c14>
   17cd0:	ldr	r0, [fp, #-16]
   17cd4:	mvn	r1, #0
   17cd8:	udiv	r0, r1, r0
   17cdc:	ldr	r1, [fp, #-12]
   17ce0:	cmp	r0, r1
   17ce4:	bcs	17cfc <__assert_fail@plt+0x6c14>
   17ce8:	ldr	r0, [fp, #-12]
   17cec:	ldr	r1, [fp, #-16]
   17cf0:	mul	r0, r0, r1
   17cf4:	str	r0, [fp, #-20]	; 0xffffffec
   17cf8:	b	18198 <__assert_fail@plt+0x70b0>
   17cfc:	ldr	r0, [fp, #-12]
   17d00:	ldr	r1, [fp, #-16]
   17d04:	mul	r0, r0, r1
   17d08:	str	r0, [fp, #-20]	; 0xffffffec
   17d0c:	b	181b0 <__assert_fail@plt+0x70c8>
   17d10:	b	17f64 <__assert_fail@plt+0x6e7c>
   17d14:	ldr	r0, [fp, #-16]
   17d18:	cmp	r0, #0
   17d1c:	bcs	17e7c <__assert_fail@plt+0x6d94>
   17d20:	ldr	r0, [fp, #-12]
   17d24:	cmp	r0, #0
   17d28:	bcs	17df8 <__assert_fail@plt+0x6d10>
   17d2c:	b	17d30 <__assert_fail@plt+0x6c48>
   17d30:	ldr	r0, [fp, #-12]
   17d34:	ldr	r2, [fp, #-16]
   17d38:	mvn	r1, #0
   17d3c:	mvn	r3, #-2147483648	; 0x80000000
   17d40:	mov	ip, #0
   17d44:	str	r0, [fp, #-56]	; 0xffffffc8
   17d48:	mov	r0, r1
   17d4c:	mov	r1, r3
   17d50:	mov	r3, ip
   17d54:	bl	1ea14 <__assert_fail@plt+0xd92c>
   17d58:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17d5c:	subs	r0, r2, r0
   17d60:	rscs	r1, r1, #0
   17d64:	str	r0, [fp, #-60]	; 0xffffffc4
   17d68:	str	r1, [fp, #-64]	; 0xffffffc0
   17d6c:	blt	17f3c <__assert_fail@plt+0x6e54>
   17d70:	b	17f50 <__assert_fail@plt+0x6e68>
   17d74:	b	17d88 <__assert_fail@plt+0x6ca0>
   17d78:	ldr	r0, [fp, #-16]
   17d7c:	cmp	r0, #1
   17d80:	bcc	17d98 <__assert_fail@plt+0x6cb0>
   17d84:	b	17dac <__assert_fail@plt+0x6cc4>
   17d88:	ldr	r0, [fp, #-16]
   17d8c:	movw	r1, #0
   17d90:	cmp	r1, r0
   17d94:	bcs	17dac <__assert_fail@plt+0x6cc4>
   17d98:	mov	r0, #0
   17d9c:	mvn	r1, #0
   17da0:	str	r1, [fp, #-68]	; 0xffffffbc
   17da4:	str	r0, [fp, #-72]	; 0xffffffb8
   17da8:	b	17dd0 <__assert_fail@plt+0x6ce8>
   17dac:	ldr	r0, [fp, #-16]
   17db0:	rsb	r2, r0, #0
   17db4:	mvn	r0, #0
   17db8:	mvn	r1, #-2147483648	; 0x80000000
   17dbc:	mov	r3, #0
   17dc0:	bl	1ea14 <__assert_fail@plt+0xd92c>
   17dc4:	str	r0, [fp, #-68]	; 0xffffffbc
   17dc8:	str	r1, [fp, #-72]	; 0xffffffb8
   17dcc:	b	17dd0 <__assert_fail@plt+0x6ce8>
   17dd0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   17dd4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   17dd8:	ldr	r2, [fp, #-12]
   17ddc:	mvn	r2, r2
   17de0:	subs	r1, r2, r1
   17de4:	rscs	r0, r0, #0
   17de8:	str	r1, [fp, #-76]	; 0xffffffb4
   17dec:	str	r0, [fp, #-80]	; 0xffffffb0
   17df0:	bge	17f3c <__assert_fail@plt+0x6e54>
   17df4:	b	17f50 <__assert_fail@plt+0x6e68>
   17df8:	ldr	r0, [fp, #-16]
   17dfc:	cmn	r0, #1
   17e00:	bne	17e48 <__assert_fail@plt+0x6d60>
   17e04:	b	17e28 <__assert_fail@plt+0x6d40>
   17e08:	ldr	r0, [fp, #-12]
   17e0c:	rsbs	r0, r0, #0
   17e10:	mov	r1, #0
   17e14:	sbcs	r1, r1, #-2147483648	; 0x80000000
   17e18:	str	r0, [fp, #-84]	; 0xffffffac
   17e1c:	str	r1, [sp, #88]	; 0x58
   17e20:	blt	17f3c <__assert_fail@plt+0x6e54>
   17e24:	b	17f50 <__assert_fail@plt+0x6e68>
   17e28:	ldr	r0, [fp, #-12]
   17e2c:	movw	r1, #0
   17e30:	cmp	r1, r0
   17e34:	bcs	17f50 <__assert_fail@plt+0x6e68>
   17e38:	mov	r0, #0
   17e3c:	cmp	r0, #0
   17e40:	bne	17f3c <__assert_fail@plt+0x6e54>
   17e44:	b	17f50 <__assert_fail@plt+0x6e68>
   17e48:	ldr	r2, [fp, #-16]
   17e4c:	mov	r1, #-2147483648	; 0x80000000
   17e50:	mov	r0, #0
   17e54:	str	r0, [sp, #84]	; 0x54
   17e58:	ldr	r3, [sp, #84]	; 0x54
   17e5c:	bl	1e940 <__assert_fail@plt+0xd858>
   17e60:	ldr	r2, [fp, #-12]
   17e64:	subs	r0, r0, r2
   17e68:	sbcs	r1, r1, #0
   17e6c:	str	r0, [sp, #80]	; 0x50
   17e70:	str	r1, [sp, #76]	; 0x4c
   17e74:	blt	17f3c <__assert_fail@plt+0x6e54>
   17e78:	b	17f50 <__assert_fail@plt+0x6e68>
   17e7c:	ldr	r0, [fp, #-16]
   17e80:	cmp	r0, #0
   17e84:	bne	17e8c <__assert_fail@plt+0x6da4>
   17e88:	b	17f50 <__assert_fail@plt+0x6e68>
   17e8c:	ldr	r0, [fp, #-12]
   17e90:	cmp	r0, #0
   17e94:	bcs	17f0c <__assert_fail@plt+0x6e24>
   17e98:	ldr	r0, [fp, #-12]
   17e9c:	cmn	r0, #1
   17ea0:	bne	17ed8 <__assert_fail@plt+0x6df0>
   17ea4:	b	17ec8 <__assert_fail@plt+0x6de0>
   17ea8:	ldr	r0, [fp, #-16]
   17eac:	rsbs	r0, r0, #0
   17eb0:	mov	r1, #0
   17eb4:	sbcs	r1, r1, #-2147483648	; 0x80000000
   17eb8:	str	r0, [sp, #72]	; 0x48
   17ebc:	str	r1, [sp, #68]	; 0x44
   17ec0:	blt	17f3c <__assert_fail@plt+0x6e54>
   17ec4:	b	17f50 <__assert_fail@plt+0x6e68>
   17ec8:	mov	r0, #0
   17ecc:	cmp	r0, #0
   17ed0:	bne	17f3c <__assert_fail@plt+0x6e54>
   17ed4:	b	17f50 <__assert_fail@plt+0x6e68>
   17ed8:	ldr	r2, [fp, #-12]
   17edc:	mov	r1, #-2147483648	; 0x80000000
   17ee0:	mov	r0, #0
   17ee4:	str	r0, [sp, #64]	; 0x40
   17ee8:	ldr	r3, [sp, #64]	; 0x40
   17eec:	bl	1e940 <__assert_fail@plt+0xd858>
   17ef0:	ldr	r2, [fp, #-16]
   17ef4:	subs	r0, r0, r2
   17ef8:	sbcs	r1, r1, #0
   17efc:	str	r0, [sp, #60]	; 0x3c
   17f00:	str	r1, [sp, #56]	; 0x38
   17f04:	blt	17f3c <__assert_fail@plt+0x6e54>
   17f08:	b	17f50 <__assert_fail@plt+0x6e68>
   17f0c:	ldr	r2, [fp, #-16]
   17f10:	mvn	r0, #0
   17f14:	mvn	r1, #-2147483648	; 0x80000000
   17f18:	mov	r3, #0
   17f1c:	bl	1ea14 <__assert_fail@plt+0xd92c>
   17f20:	ldr	r2, [fp, #-12]
   17f24:	subs	r0, r0, r2
   17f28:	sbcs	r1, r1, #0
   17f2c:	str	r0, [sp, #52]	; 0x34
   17f30:	str	r1, [sp, #48]	; 0x30
   17f34:	bge	17f50 <__assert_fail@plt+0x6e68>
   17f38:	b	17f3c <__assert_fail@plt+0x6e54>
   17f3c:	ldr	r0, [fp, #-12]
   17f40:	ldr	r1, [fp, #-16]
   17f44:	mul	r0, r0, r1
   17f48:	str	r0, [fp, #-20]	; 0xffffffec
   17f4c:	b	18198 <__assert_fail@plt+0x70b0>
   17f50:	ldr	r0, [fp, #-12]
   17f54:	ldr	r1, [fp, #-16]
   17f58:	mul	r0, r0, r1
   17f5c:	str	r0, [fp, #-20]	; 0xffffffec
   17f60:	b	181b0 <__assert_fail@plt+0x70c8>
   17f64:	ldr	r0, [fp, #-16]
   17f68:	cmp	r0, #0
   17f6c:	bcs	180b8 <__assert_fail@plt+0x6fd0>
   17f70:	ldr	r0, [fp, #-12]
   17f74:	cmp	r0, #0
   17f78:	bcs	18040 <__assert_fail@plt+0x6f58>
   17f7c:	b	17fb8 <__assert_fail@plt+0x6ed0>
   17f80:	ldr	r0, [fp, #-12]
   17f84:	ldr	r2, [fp, #-16]
   17f88:	mvn	r1, #0
   17f8c:	mov	r3, #0
   17f90:	str	r0, [sp, #44]	; 0x2c
   17f94:	mov	r0, r1
   17f98:	bl	1ea14 <__assert_fail@plt+0xd92c>
   17f9c:	ldr	r2, [sp, #44]	; 0x2c
   17fa0:	subs	r0, r2, r0
   17fa4:	rscs	r1, r1, #0
   17fa8:	str	r0, [sp, #40]	; 0x28
   17fac:	str	r1, [sp, #36]	; 0x24
   17fb0:	bcc	18170 <__assert_fail@plt+0x7088>
   17fb4:	b	18184 <__assert_fail@plt+0x709c>
   17fb8:	b	17fcc <__assert_fail@plt+0x6ee4>
   17fbc:	ldr	r0, [fp, #-16]
   17fc0:	cmp	r0, #1
   17fc4:	bcc	17fdc <__assert_fail@plt+0x6ef4>
   17fc8:	b	17ff0 <__assert_fail@plt+0x6f08>
   17fcc:	ldr	r0, [fp, #-16]
   17fd0:	movw	r1, #0
   17fd4:	cmp	r1, r0
   17fd8:	bcs	17ff0 <__assert_fail@plt+0x6f08>
   17fdc:	mov	r0, #1
   17fe0:	mvn	r1, #0
   17fe4:	str	r1, [sp, #32]
   17fe8:	str	r0, [sp, #28]
   17fec:	b	18018 <__assert_fail@plt+0x6f30>
   17ff0:	ldr	r0, [fp, #-16]
   17ff4:	rsb	r2, r0, #0
   17ff8:	mvn	r0, #0
   17ffc:	mov	r3, #0
   18000:	str	r0, [sp, #24]
   18004:	ldr	r1, [sp, #24]
   18008:	bl	1ea14 <__assert_fail@plt+0xd92c>
   1800c:	str	r0, [sp, #32]
   18010:	str	r1, [sp, #28]
   18014:	b	18018 <__assert_fail@plt+0x6f30>
   18018:	ldr	r0, [sp, #28]
   1801c:	ldr	r1, [sp, #32]
   18020:	ldr	r2, [fp, #-12]
   18024:	mvn	r2, r2
   18028:	subs	r1, r2, r1
   1802c:	rscs	r0, r0, #0
   18030:	str	r1, [sp, #20]
   18034:	str	r0, [sp, #16]
   18038:	bcs	18170 <__assert_fail@plt+0x7088>
   1803c:	b	18184 <__assert_fail@plt+0x709c>
   18040:	b	18048 <__assert_fail@plt+0x6f60>
   18044:	b	1804c <__assert_fail@plt+0x6f64>
   18048:	b	1809c <__assert_fail@plt+0x6fb4>
   1804c:	ldr	r0, [fp, #-16]
   18050:	cmn	r0, #1
   18054:	bne	1809c <__assert_fail@plt+0x6fb4>
   18058:	b	18074 <__assert_fail@plt+0x6f8c>
   1805c:	ldr	r0, [fp, #-12]
   18060:	add	r0, r0, #0
   18064:	movw	r1, #0
   18068:	cmp	r1, r0
   1806c:	bcc	18170 <__assert_fail@plt+0x7088>
   18070:	b	18184 <__assert_fail@plt+0x709c>
   18074:	ldr	r0, [fp, #-12]
   18078:	movw	r1, #0
   1807c:	cmp	r1, r0
   18080:	bcs	18184 <__assert_fail@plt+0x709c>
   18084:	ldr	r0, [fp, #-12]
   18088:	sub	r0, r0, #1
   1808c:	mvn	r1, #0
   18090:	cmp	r1, r0
   18094:	bcc	18170 <__assert_fail@plt+0x7088>
   18098:	b	18184 <__assert_fail@plt+0x709c>
   1809c:	ldr	r0, [fp, #-16]
   180a0:	movw	r1, #0
   180a4:	udiv	r0, r1, r0
   180a8:	ldr	r1, [fp, #-12]
   180ac:	cmp	r0, r1
   180b0:	bcc	18170 <__assert_fail@plt+0x7088>
   180b4:	b	18184 <__assert_fail@plt+0x709c>
   180b8:	ldr	r0, [fp, #-16]
   180bc:	cmp	r0, #0
   180c0:	bne	180c8 <__assert_fail@plt+0x6fe0>
   180c4:	b	18184 <__assert_fail@plt+0x709c>
   180c8:	ldr	r0, [fp, #-12]
   180cc:	cmp	r0, #0
   180d0:	bcs	1813c <__assert_fail@plt+0x7054>
   180d4:	b	180dc <__assert_fail@plt+0x6ff4>
   180d8:	b	180e0 <__assert_fail@plt+0x6ff8>
   180dc:	b	18120 <__assert_fail@plt+0x7038>
   180e0:	ldr	r0, [fp, #-12]
   180e4:	cmn	r0, #1
   180e8:	bne	18120 <__assert_fail@plt+0x7038>
   180ec:	b	18108 <__assert_fail@plt+0x7020>
   180f0:	ldr	r0, [fp, #-16]
   180f4:	add	r0, r0, #0
   180f8:	movw	r1, #0
   180fc:	cmp	r1, r0
   18100:	bcc	18170 <__assert_fail@plt+0x7088>
   18104:	b	18184 <__assert_fail@plt+0x709c>
   18108:	ldr	r0, [fp, #-16]
   1810c:	sub	r0, r0, #1
   18110:	mvn	r1, #0
   18114:	cmp	r1, r0
   18118:	bcc	18170 <__assert_fail@plt+0x7088>
   1811c:	b	18184 <__assert_fail@plt+0x709c>
   18120:	ldr	r0, [fp, #-12]
   18124:	movw	r1, #0
   18128:	udiv	r0, r1, r0
   1812c:	ldr	r1, [fp, #-16]
   18130:	cmp	r0, r1
   18134:	bcc	18170 <__assert_fail@plt+0x7088>
   18138:	b	18184 <__assert_fail@plt+0x709c>
   1813c:	ldr	r2, [fp, #-16]
   18140:	mvn	r0, #0
   18144:	mov	r3, #0
   18148:	str	r0, [sp, #12]
   1814c:	ldr	r1, [sp, #12]
   18150:	bl	1ea14 <__assert_fail@plt+0xd92c>
   18154:	ldr	r2, [fp, #-12]
   18158:	subs	r0, r0, r2
   1815c:	sbcs	r1, r1, #0
   18160:	str	r0, [sp, #8]
   18164:	str	r1, [sp, #4]
   18168:	bcs	18184 <__assert_fail@plt+0x709c>
   1816c:	b	18170 <__assert_fail@plt+0x7088>
   18170:	ldr	r0, [fp, #-12]
   18174:	ldr	r1, [fp, #-16]
   18178:	mul	r0, r0, r1
   1817c:	str	r0, [fp, #-20]	; 0xffffffec
   18180:	b	18198 <__assert_fail@plt+0x70b0>
   18184:	ldr	r0, [fp, #-12]
   18188:	ldr	r1, [fp, #-16]
   1818c:	mul	r0, r0, r1
   18190:	str	r0, [fp, #-20]	; 0xffffffec
   18194:	b	181b0 <__assert_fail@plt+0x70c8>
   18198:	bl	11010 <__errno_location@plt>
   1819c:	movw	lr, #12
   181a0:	str	lr, [r0]
   181a4:	movw	r0, #0
   181a8:	str	r0, [fp, #-4]
   181ac:	b	181c0 <__assert_fail@plt+0x70d8>
   181b0:	ldr	r0, [fp, #-8]
   181b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   181b8:	bl	1dd90 <__assert_fail@plt+0xcca8>
   181bc:	str	r0, [fp, #-4]
   181c0:	ldr	r0, [fp, #-4]
   181c4:	mov	sp, fp
   181c8:	pop	{fp, pc}
   181cc:	svcvc	0x00ffffff
   181d0:	andhi	r0, r0, r0
   181d4:			; <UNDEFINED> instruction: 0xffff8000
   181d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   181dc:	add	fp, sp, #28
   181e0:	sub	sp, sp, #260	; 0x104
   181e4:	ldr	ip, [fp, #12]
   181e8:	ldr	lr, [fp, #8]
   181ec:	str	r0, [fp, #-32]	; 0xffffffe0
   181f0:	str	r1, [fp, #-36]	; 0xffffffdc
   181f4:	str	r2, [fp, #-40]	; 0xffffffd8
   181f8:	str	r3, [fp, #-44]	; 0xffffffd4
   181fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18200:	movw	r1, #0
   18204:	cmp	r0, r1
   18208:	str	lr, [fp, #-48]	; 0xffffffd0
   1820c:	str	ip, [fp, #-52]	; 0xffffffcc
   18210:	beq	18248 <__assert_fail@plt+0x7160>
   18214:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18218:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1821c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18220:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18224:	movw	ip, #62556	; 0xf45c
   18228:	movt	ip, #1
   1822c:	str	r1, [fp, #-56]	; 0xffffffc8
   18230:	mov	r1, ip
   18234:	ldr	ip, [fp, #-56]	; 0xffffffc8
   18238:	str	ip, [sp]
   1823c:	bl	11004 <fprintf@plt>
   18240:	str	r0, [fp, #-60]	; 0xffffffc4
   18244:	b	18264 <__assert_fail@plt+0x717c>
   18248:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1824c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18250:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18254:	movw	r1, #62568	; 0xf468
   18258:	movt	r1, #1
   1825c:	bl	11004 <fprintf@plt>
   18260:	str	r0, [fp, #-64]	; 0xffffffc0
   18264:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18268:	movw	r1, #62575	; 0xf46f
   1826c:	movt	r1, #1
   18270:	str	r0, [fp, #-68]	; 0xffffffbc
   18274:	mov	r0, r1
   18278:	bl	10fe0 <gettext@plt>
   1827c:	movw	r1, #63293	; 0xf73d
   18280:	movt	r1, #1
   18284:	movw	r3, #2022	; 0x7e6
   18288:	ldr	lr, [fp, #-68]	; 0xffffffbc
   1828c:	str	r0, [fp, #-72]	; 0xffffffb8
   18290:	mov	r0, lr
   18294:	ldr	r2, [fp, #-72]	; 0xffffffb8
   18298:	bl	11004 <fprintf@plt>
   1829c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   182a0:	movw	r2, #61731	; 0xf123
   182a4:	movt	r2, #1
   182a8:	str	r0, [fp, #-76]	; 0xffffffb4
   182ac:	mov	r0, r2
   182b0:	str	r2, [fp, #-80]	; 0xffffffb0
   182b4:	bl	10e78 <fputs_unlocked@plt>
   182b8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   182bc:	movw	r2, #62579	; 0xf473
   182c0:	movt	r2, #1
   182c4:	str	r0, [fp, #-84]	; 0xffffffac
   182c8:	mov	r0, r2
   182cc:	str	r1, [fp, #-88]	; 0xffffffa8
   182d0:	bl	10fe0 <gettext@plt>
   182d4:	movw	r2, #62750	; 0xf51e
   182d8:	movt	r2, #1
   182dc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   182e0:	str	r0, [fp, #-92]	; 0xffffffa4
   182e4:	mov	r0, r1
   182e8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   182ec:	bl	11004 <fprintf@plt>
   182f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   182f4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   182f8:	str	r0, [fp, #-96]	; 0xffffffa0
   182fc:	mov	r0, r2
   18300:	bl	10e78 <fputs_unlocked@plt>
   18304:	ldr	r1, [fp, #12]
   18308:	cmp	r1, #9
   1830c:	str	r0, [fp, #-100]	; 0xffffff9c
   18310:	str	r1, [fp, #-104]	; 0xffffff98
   18314:	bhi	18754 <__assert_fail@plt+0x766c>
   18318:	add	r0, pc, #8
   1831c:	ldr	r1, [fp, #-104]	; 0xffffff98
   18320:	ldr	r0, [r0, r1, lsl #2]
   18324:	mov	pc, r0
   18328:	andeq	r8, r1, r0, asr r3
   1832c:	andeq	r8, r1, r4, asr r3
   18330:	muleq	r1, r0, r3
   18334:	ldrdeq	r8, [r1], -r4
   18338:	andeq	r8, r1, r0, lsr r4
   1833c:	muleq	r1, r8, r4
   18340:	andeq	r8, r1, ip, lsl #10
   18344:	andeq	r8, r1, ip, lsl #11
   18348:	andeq	r8, r1, r8, lsl r6
   1834c:			; <UNDEFINED> instruction: 0x000186b0
   18350:	b	187f4 <__assert_fail@plt+0x770c>
   18354:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18358:	movw	r1, #62784	; 0xf540
   1835c:	movt	r1, #1
   18360:	str	r0, [fp, #-108]	; 0xffffff94
   18364:	mov	r0, r1
   18368:	bl	10fe0 <gettext@plt>
   1836c:	ldr	r1, [fp, #8]
   18370:	ldr	r2, [r1]
   18374:	ldr	r1, [fp, #-108]	; 0xffffff94
   18378:	str	r0, [fp, #-112]	; 0xffffff90
   1837c:	mov	r0, r1
   18380:	ldr	r1, [fp, #-112]	; 0xffffff90
   18384:	bl	11004 <fprintf@plt>
   18388:	str	r0, [fp, #-116]	; 0xffffff8c
   1838c:	b	187f4 <__assert_fail@plt+0x770c>
   18390:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18394:	movw	r1, #62800	; 0xf550
   18398:	movt	r1, #1
   1839c:	str	r0, [fp, #-120]	; 0xffffff88
   183a0:	mov	r0, r1
   183a4:	bl	10fe0 <gettext@plt>
   183a8:	ldr	r1, [fp, #8]
   183ac:	ldr	r2, [r1]
   183b0:	ldr	r1, [fp, #8]
   183b4:	ldr	r3, [r1, #4]
   183b8:	ldr	r1, [fp, #-120]	; 0xffffff88
   183bc:	str	r0, [fp, #-124]	; 0xffffff84
   183c0:	mov	r0, r1
   183c4:	ldr	r1, [fp, #-124]	; 0xffffff84
   183c8:	bl	11004 <fprintf@plt>
   183cc:	str	r0, [fp, #-128]	; 0xffffff80
   183d0:	b	187f4 <__assert_fail@plt+0x770c>
   183d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   183d8:	movw	r1, #62823	; 0xf567
   183dc:	movt	r1, #1
   183e0:	str	r0, [fp, #-132]	; 0xffffff7c
   183e4:	mov	r0, r1
   183e8:	bl	10fe0 <gettext@plt>
   183ec:	ldr	r1, [fp, #8]
   183f0:	ldr	r2, [r1]
   183f4:	ldr	r1, [fp, #8]
   183f8:	ldr	r3, [r1, #4]
   183fc:	ldr	r1, [fp, #8]
   18400:	ldr	r1, [r1, #8]
   18404:	ldr	lr, [fp, #-132]	; 0xffffff7c
   18408:	str	r0, [fp, #-136]	; 0xffffff78
   1840c:	mov	r0, lr
   18410:	ldr	ip, [fp, #-136]	; 0xffffff78
   18414:	str	r1, [fp, #-140]	; 0xffffff74
   18418:	mov	r1, ip
   1841c:	ldr	r4, [fp, #-140]	; 0xffffff74
   18420:	str	r4, [sp]
   18424:	bl	11004 <fprintf@plt>
   18428:	str	r0, [sp, #144]	; 0x90
   1842c:	b	187f4 <__assert_fail@plt+0x770c>
   18430:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18434:	movw	r1, #62851	; 0xf583
   18438:	movt	r1, #1
   1843c:	str	r0, [sp, #140]	; 0x8c
   18440:	mov	r0, r1
   18444:	bl	10fe0 <gettext@plt>
   18448:	ldr	r1, [fp, #8]
   1844c:	ldr	r2, [r1]
   18450:	ldr	r1, [fp, #8]
   18454:	ldr	r3, [r1, #4]
   18458:	ldr	r1, [fp, #8]
   1845c:	ldr	r1, [r1, #8]
   18460:	ldr	lr, [fp, #8]
   18464:	ldr	lr, [lr, #12]
   18468:	ldr	ip, [sp, #140]	; 0x8c
   1846c:	str	r0, [sp, #136]	; 0x88
   18470:	mov	r0, ip
   18474:	ldr	r4, [sp, #136]	; 0x88
   18478:	str	r1, [sp, #132]	; 0x84
   1847c:	mov	r1, r4
   18480:	ldr	r5, [sp, #132]	; 0x84
   18484:	str	r5, [sp]
   18488:	str	lr, [sp, #4]
   1848c:	bl	11004 <fprintf@plt>
   18490:	str	r0, [sp, #128]	; 0x80
   18494:	b	187f4 <__assert_fail@plt+0x770c>
   18498:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1849c:	movw	r1, #62883	; 0xf5a3
   184a0:	movt	r1, #1
   184a4:	str	r0, [sp, #124]	; 0x7c
   184a8:	mov	r0, r1
   184ac:	bl	10fe0 <gettext@plt>
   184b0:	ldr	r1, [fp, #8]
   184b4:	ldr	r2, [r1]
   184b8:	ldr	r1, [fp, #8]
   184bc:	ldr	r3, [r1, #4]
   184c0:	ldr	r1, [fp, #8]
   184c4:	ldr	r1, [r1, #8]
   184c8:	ldr	lr, [fp, #8]
   184cc:	ldr	lr, [lr, #12]
   184d0:	ldr	ip, [fp, #8]
   184d4:	ldr	ip, [ip, #16]
   184d8:	ldr	r4, [sp, #124]	; 0x7c
   184dc:	str	r0, [sp, #120]	; 0x78
   184e0:	mov	r0, r4
   184e4:	ldr	r5, [sp, #120]	; 0x78
   184e8:	str	r1, [sp, #116]	; 0x74
   184ec:	mov	r1, r5
   184f0:	ldr	r6, [sp, #116]	; 0x74
   184f4:	str	r6, [sp]
   184f8:	str	lr, [sp, #4]
   184fc:	str	ip, [sp, #8]
   18500:	bl	11004 <fprintf@plt>
   18504:	str	r0, [sp, #112]	; 0x70
   18508:	b	187f4 <__assert_fail@plt+0x770c>
   1850c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18510:	movw	r1, #62919	; 0xf5c7
   18514:	movt	r1, #1
   18518:	str	r0, [sp, #108]	; 0x6c
   1851c:	mov	r0, r1
   18520:	bl	10fe0 <gettext@plt>
   18524:	ldr	r1, [fp, #8]
   18528:	ldr	r2, [r1]
   1852c:	ldr	r1, [fp, #8]
   18530:	ldr	r3, [r1, #4]
   18534:	ldr	r1, [fp, #8]
   18538:	ldr	r1, [r1, #8]
   1853c:	ldr	lr, [fp, #8]
   18540:	ldr	lr, [lr, #12]
   18544:	ldr	ip, [fp, #8]
   18548:	ldr	ip, [ip, #16]
   1854c:	ldr	r4, [fp, #8]
   18550:	ldr	r4, [r4, #20]
   18554:	ldr	r5, [sp, #108]	; 0x6c
   18558:	str	r0, [sp, #104]	; 0x68
   1855c:	mov	r0, r5
   18560:	ldr	r6, [sp, #104]	; 0x68
   18564:	str	r1, [sp, #100]	; 0x64
   18568:	mov	r1, r6
   1856c:	ldr	r7, [sp, #100]	; 0x64
   18570:	str	r7, [sp]
   18574:	str	lr, [sp, #4]
   18578:	str	ip, [sp, #8]
   1857c:	str	r4, [sp, #12]
   18580:	bl	11004 <fprintf@plt>
   18584:	str	r0, [sp, #96]	; 0x60
   18588:	b	187f4 <__assert_fail@plt+0x770c>
   1858c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18590:	movw	r1, #62959	; 0xf5ef
   18594:	movt	r1, #1
   18598:	str	r0, [sp, #92]	; 0x5c
   1859c:	mov	r0, r1
   185a0:	bl	10fe0 <gettext@plt>
   185a4:	ldr	r1, [fp, #8]
   185a8:	ldr	r2, [r1]
   185ac:	ldr	r1, [fp, #8]
   185b0:	ldr	r3, [r1, #4]
   185b4:	ldr	r1, [fp, #8]
   185b8:	ldr	r1, [r1, #8]
   185bc:	ldr	lr, [fp, #8]
   185c0:	ldr	lr, [lr, #12]
   185c4:	ldr	ip, [fp, #8]
   185c8:	ldr	ip, [ip, #16]
   185cc:	ldr	r4, [fp, #8]
   185d0:	ldr	r4, [r4, #20]
   185d4:	ldr	r5, [fp, #8]
   185d8:	ldr	r5, [r5, #24]
   185dc:	ldr	r6, [sp, #92]	; 0x5c
   185e0:	str	r0, [sp, #88]	; 0x58
   185e4:	mov	r0, r6
   185e8:	ldr	r7, [sp, #88]	; 0x58
   185ec:	str	r1, [sp, #84]	; 0x54
   185f0:	mov	r1, r7
   185f4:	ldr	r8, [sp, #84]	; 0x54
   185f8:	str	r8, [sp]
   185fc:	str	lr, [sp, #4]
   18600:	str	ip, [sp, #8]
   18604:	str	r4, [sp, #12]
   18608:	str	r5, [sp, #16]
   1860c:	bl	11004 <fprintf@plt>
   18610:	str	r0, [sp, #80]	; 0x50
   18614:	b	187f4 <__assert_fail@plt+0x770c>
   18618:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1861c:	movw	r1, #63003	; 0xf61b
   18620:	movt	r1, #1
   18624:	str	r0, [sp, #76]	; 0x4c
   18628:	mov	r0, r1
   1862c:	bl	10fe0 <gettext@plt>
   18630:	ldr	r1, [fp, #8]
   18634:	ldr	r2, [r1]
   18638:	ldr	r1, [fp, #8]
   1863c:	ldr	r3, [r1, #4]
   18640:	ldr	r1, [fp, #8]
   18644:	ldr	r1, [r1, #8]
   18648:	ldr	lr, [fp, #8]
   1864c:	ldr	lr, [lr, #12]
   18650:	ldr	ip, [fp, #8]
   18654:	ldr	ip, [ip, #16]
   18658:	ldr	r4, [fp, #8]
   1865c:	ldr	r4, [r4, #20]
   18660:	ldr	r5, [fp, #8]
   18664:	ldr	r5, [r5, #24]
   18668:	ldr	r6, [fp, #8]
   1866c:	ldr	r6, [r6, #28]
   18670:	ldr	r7, [sp, #76]	; 0x4c
   18674:	str	r0, [sp, #72]	; 0x48
   18678:	mov	r0, r7
   1867c:	ldr	r8, [sp, #72]	; 0x48
   18680:	str	r1, [sp, #68]	; 0x44
   18684:	mov	r1, r8
   18688:	ldr	r9, [sp, #68]	; 0x44
   1868c:	str	r9, [sp]
   18690:	str	lr, [sp, #4]
   18694:	str	ip, [sp, #8]
   18698:	str	r4, [sp, #12]
   1869c:	str	r5, [sp, #16]
   186a0:	str	r6, [sp, #20]
   186a4:	bl	11004 <fprintf@plt>
   186a8:	str	r0, [sp, #64]	; 0x40
   186ac:	b	187f4 <__assert_fail@plt+0x770c>
   186b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   186b4:	movw	r1, #63051	; 0xf64b
   186b8:	movt	r1, #1
   186bc:	str	r0, [sp, #60]	; 0x3c
   186c0:	mov	r0, r1
   186c4:	bl	10fe0 <gettext@plt>
   186c8:	ldr	r1, [fp, #8]
   186cc:	ldr	r2, [r1]
   186d0:	ldr	r1, [fp, #8]
   186d4:	ldr	r3, [r1, #4]
   186d8:	ldr	r1, [fp, #8]
   186dc:	ldr	r1, [r1, #8]
   186e0:	ldr	lr, [fp, #8]
   186e4:	ldr	lr, [lr, #12]
   186e8:	ldr	ip, [fp, #8]
   186ec:	ldr	ip, [ip, #16]
   186f0:	ldr	r4, [fp, #8]
   186f4:	ldr	r4, [r4, #20]
   186f8:	ldr	r5, [fp, #8]
   186fc:	ldr	r5, [r5, #24]
   18700:	ldr	r6, [fp, #8]
   18704:	ldr	r6, [r6, #28]
   18708:	ldr	r7, [fp, #8]
   1870c:	ldr	r7, [r7, #32]
   18710:	ldr	r8, [sp, #60]	; 0x3c
   18714:	str	r0, [sp, #56]	; 0x38
   18718:	mov	r0, r8
   1871c:	ldr	r9, [sp, #56]	; 0x38
   18720:	str	r1, [sp, #52]	; 0x34
   18724:	mov	r1, r9
   18728:	ldr	sl, [sp, #52]	; 0x34
   1872c:	str	sl, [sp]
   18730:	str	lr, [sp, #4]
   18734:	str	ip, [sp, #8]
   18738:	str	r4, [sp, #12]
   1873c:	str	r5, [sp, #16]
   18740:	str	r6, [sp, #20]
   18744:	str	r7, [sp, #24]
   18748:	bl	11004 <fprintf@plt>
   1874c:	str	r0, [sp, #48]	; 0x30
   18750:	b	187f4 <__assert_fail@plt+0x770c>
   18754:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18758:	movw	r1, #63103	; 0xf67f
   1875c:	movt	r1, #1
   18760:	str	r0, [sp, #44]	; 0x2c
   18764:	mov	r0, r1
   18768:	bl	10fe0 <gettext@plt>
   1876c:	ldr	r1, [fp, #8]
   18770:	ldr	r2, [r1]
   18774:	ldr	r1, [fp, #8]
   18778:	ldr	r3, [r1, #4]
   1877c:	ldr	r1, [fp, #8]
   18780:	ldr	r1, [r1, #8]
   18784:	ldr	lr, [fp, #8]
   18788:	ldr	lr, [lr, #12]
   1878c:	ldr	ip, [fp, #8]
   18790:	ldr	ip, [ip, #16]
   18794:	ldr	r4, [fp, #8]
   18798:	ldr	r4, [r4, #20]
   1879c:	ldr	r5, [fp, #8]
   187a0:	ldr	r5, [r5, #24]
   187a4:	ldr	r6, [fp, #8]
   187a8:	ldr	r6, [r6, #28]
   187ac:	ldr	r7, [fp, #8]
   187b0:	ldr	r7, [r7, #32]
   187b4:	ldr	r8, [sp, #44]	; 0x2c
   187b8:	str	r0, [sp, #40]	; 0x28
   187bc:	mov	r0, r8
   187c0:	ldr	r9, [sp, #40]	; 0x28
   187c4:	str	r1, [sp, #36]	; 0x24
   187c8:	mov	r1, r9
   187cc:	ldr	sl, [sp, #36]	; 0x24
   187d0:	str	sl, [sp]
   187d4:	str	lr, [sp, #4]
   187d8:	str	ip, [sp, #8]
   187dc:	str	r4, [sp, #12]
   187e0:	str	r5, [sp, #16]
   187e4:	str	r6, [sp, #20]
   187e8:	str	r7, [sp, #24]
   187ec:	bl	11004 <fprintf@plt>
   187f0:	str	r0, [sp, #32]
   187f4:	sub	sp, fp, #28
   187f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   187fc:	push	{fp, lr}
   18800:	mov	fp, sp
   18804:	sub	sp, sp, #32
   18808:	ldr	ip, [fp, #8]
   1880c:	str	r0, [fp, #-4]
   18810:	str	r1, [fp, #-8]
   18814:	str	r2, [fp, #-12]
   18818:	str	r3, [sp, #16]
   1881c:	movw	r0, #0
   18820:	str	r0, [sp, #12]
   18824:	str	ip, [sp, #8]
   18828:	ldr	r0, [fp, #8]
   1882c:	ldr	r1, [sp, #12]
   18830:	add	r0, r0, r1, lsl #2
   18834:	ldr	r0, [r0]
   18838:	movw	r1, #0
   1883c:	cmp	r0, r1
   18840:	beq	18858 <__assert_fail@plt+0x7770>
   18844:	b	18848 <__assert_fail@plt+0x7760>
   18848:	ldr	r0, [sp, #12]
   1884c:	add	r0, r0, #1
   18850:	str	r0, [sp, #12]
   18854:	b	18828 <__assert_fail@plt+0x7740>
   18858:	ldr	r0, [fp, #-4]
   1885c:	ldr	r1, [fp, #-8]
   18860:	ldr	r2, [fp, #-12]
   18864:	ldr	r3, [sp, #16]
   18868:	ldr	ip, [fp, #8]
   1886c:	ldr	lr, [sp, #12]
   18870:	str	ip, [sp]
   18874:	str	lr, [sp, #4]
   18878:	bl	181d8 <__assert_fail@plt+0x70f0>
   1887c:	mov	sp, fp
   18880:	pop	{fp, pc}
   18884:	push	{fp, lr}
   18888:	mov	fp, sp
   1888c:	sub	sp, sp, #80	; 0x50
   18890:	ldr	ip, [fp, #8]
   18894:	str	ip, [fp, #-4]
   18898:	str	r0, [fp, #-8]
   1889c:	str	r1, [fp, #-12]
   188a0:	str	r2, [fp, #-16]
   188a4:	str	r3, [fp, #-20]	; 0xffffffec
   188a8:	movw	r0, #0
   188ac:	str	r0, [fp, #-24]	; 0xffffffe8
   188b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188b4:	cmp	r0, #10
   188b8:	movw	r0, #0
   188bc:	str	r0, [sp, #12]
   188c0:	bcs	188f8 <__assert_fail@plt+0x7810>
   188c4:	ldr	r0, [fp, #-4]
   188c8:	add	r1, r0, #4
   188cc:	str	r1, [fp, #-4]
   188d0:	ldr	r0, [r0]
   188d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   188d8:	add	r2, sp, #16
   188dc:	add	r1, r2, r1, lsl #2
   188e0:	str	r0, [r1]
   188e4:	movw	r1, #0
   188e8:	cmp	r0, r1
   188ec:	movw	r0, #0
   188f0:	movne	r0, #1
   188f4:	str	r0, [sp, #12]
   188f8:	ldr	r0, [sp, #12]
   188fc:	tst	r0, #1
   18900:	beq	18918 <__assert_fail@plt+0x7830>
   18904:	b	18908 <__assert_fail@plt+0x7820>
   18908:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1890c:	add	r0, r0, #1
   18910:	str	r0, [fp, #-24]	; 0xffffffe8
   18914:	b	188b0 <__assert_fail@plt+0x77c8>
   18918:	add	r0, sp, #16
   1891c:	ldr	r1, [fp, #-8]
   18920:	ldr	r2, [fp, #-12]
   18924:	ldr	r3, [fp, #-16]
   18928:	ldr	ip, [fp, #-20]	; 0xffffffec
   1892c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   18930:	str	r0, [sp, #8]
   18934:	mov	r0, r1
   18938:	mov	r1, r2
   1893c:	mov	r2, r3
   18940:	mov	r3, ip
   18944:	ldr	ip, [sp, #8]
   18948:	str	ip, [sp]
   1894c:	str	lr, [sp, #4]
   18950:	bl	181d8 <__assert_fail@plt+0x70f0>
   18954:	mov	sp, fp
   18958:	pop	{fp, pc}
   1895c:	push	{fp, lr}
   18960:	mov	fp, sp
   18964:	sub	sp, sp, #32
   18968:	str	r0, [fp, #-4]
   1896c:	str	r1, [fp, #-8]
   18970:	str	r2, [fp, #-12]
   18974:	str	r3, [sp, #16]
   18978:	add	r0, fp, #8
   1897c:	str	r0, [sp, #12]
   18980:	ldr	r0, [fp, #-4]
   18984:	ldr	r1, [fp, #-8]
   18988:	ldr	r2, [fp, #-12]
   1898c:	ldr	r3, [sp, #16]
   18990:	ldr	ip, [sp, #12]
   18994:	mov	lr, sp
   18998:	str	ip, [lr]
   1899c:	bl	18884 <__assert_fail@plt+0x779c>
   189a0:	add	r0, sp, #12
   189a4:	str	r0, [sp, #8]
   189a8:	mov	sp, fp
   189ac:	pop	{fp, pc}
   189b0:	push	{fp, lr}
   189b4:	mov	fp, sp
   189b8:	sub	sp, sp, #16
   189bc:	movw	r0, #340	; 0x154
   189c0:	movt	r0, #3
   189c4:	ldr	r1, [r0]
   189c8:	movw	r0, #61731	; 0xf123
   189cc:	movt	r0, #1
   189d0:	bl	10e78 <fputs_unlocked@plt>
   189d4:	movw	r1, #63163	; 0xf6bb
   189d8:	movt	r1, #1
   189dc:	str	r0, [fp, #-4]
   189e0:	mov	r0, r1
   189e4:	bl	10fe0 <gettext@plt>
   189e8:	movw	r1, #63183	; 0xf6cf
   189ec:	movt	r1, #1
   189f0:	bl	10ea8 <printf@plt>
   189f4:	movw	r1, #63205	; 0xf6e5
   189f8:	movt	r1, #1
   189fc:	str	r0, [sp, #8]
   18a00:	mov	r0, r1
   18a04:	bl	10fe0 <gettext@plt>
   18a08:	movw	r1, #61241	; 0xef39
   18a0c:	movt	r1, #1
   18a10:	movw	r2, #61540	; 0xf064
   18a14:	movt	r2, #1
   18a18:	bl	10ea8 <printf@plt>
   18a1c:	movw	r1, #63225	; 0xf6f9
   18a20:	movt	r1, #1
   18a24:	str	r0, [sp, #4]
   18a28:	mov	r0, r1
   18a2c:	bl	10fe0 <gettext@plt>
   18a30:	movw	r1, #63264	; 0xf720
   18a34:	movt	r1, #1
   18a38:	bl	10ea8 <printf@plt>
   18a3c:	str	r0, [sp]
   18a40:	mov	sp, fp
   18a44:	pop	{fp, pc}
   18a48:	push	{fp, lr}
   18a4c:	mov	fp, sp
   18a50:	sub	sp, sp, #16
   18a54:	str	r0, [fp, #-4]
   18a58:	str	r1, [sp, #8]
   18a5c:	str	r2, [sp, #4]
   18a60:	ldr	r0, [fp, #-4]
   18a64:	ldr	r1, [sp, #8]
   18a68:	ldr	r2, [sp, #4]
   18a6c:	bl	18a78 <__assert_fail@plt+0x7990>
   18a70:	mov	sp, fp
   18a74:	pop	{fp, pc}
   18a78:	push	{fp, lr}
   18a7c:	mov	fp, sp
   18a80:	sub	sp, sp, #16
   18a84:	str	r0, [fp, #-4]
   18a88:	str	r1, [sp, #8]
   18a8c:	str	r2, [sp, #4]
   18a90:	ldr	r0, [fp, #-4]
   18a94:	ldr	r1, [sp, #8]
   18a98:	ldr	r2, [sp, #4]
   18a9c:	bl	16e48 <__assert_fail@plt+0x5d60>
   18aa0:	str	r0, [sp]
   18aa4:	ldr	r0, [sp]
   18aa8:	movw	r1, #0
   18aac:	cmp	r0, r1
   18ab0:	bne	18ae0 <__assert_fail@plt+0x79f8>
   18ab4:	ldr	r0, [fp, #-4]
   18ab8:	movw	r1, #0
   18abc:	cmp	r0, r1
   18ac0:	beq	18adc <__assert_fail@plt+0x79f4>
   18ac4:	ldr	r0, [sp, #8]
   18ac8:	cmp	r0, #0
   18acc:	beq	18ae0 <__assert_fail@plt+0x79f8>
   18ad0:	ldr	r0, [sp, #4]
   18ad4:	cmp	r0, #0
   18ad8:	beq	18ae0 <__assert_fail@plt+0x79f8>
   18adc:	bl	1b8c8 <__assert_fail@plt+0xa7e0>
   18ae0:	ldr	r0, [sp]
   18ae4:	mov	sp, fp
   18ae8:	pop	{fp, pc}
   18aec:	push	{fp, lr}
   18af0:	mov	fp, sp
   18af4:	sub	sp, sp, #8
   18af8:	str	r0, [sp, #4]
   18afc:	ldr	r0, [sp, #4]
   18b00:	bl	1dd20 <__assert_fail@plt+0xcc38>
   18b04:	bl	18b10 <__assert_fail@plt+0x7a28>
   18b08:	mov	sp, fp
   18b0c:	pop	{fp, pc}
   18b10:	push	{fp, lr}
   18b14:	mov	fp, sp
   18b18:	sub	sp, sp, #8
   18b1c:	str	r0, [sp, #4]
   18b20:	ldr	r0, [sp, #4]
   18b24:	movw	r1, #0
   18b28:	cmp	r0, r1
   18b2c:	bne	18b34 <__assert_fail@plt+0x7a4c>
   18b30:	bl	1b8c8 <__assert_fail@plt+0xa7e0>
   18b34:	ldr	r0, [sp, #4]
   18b38:	mov	sp, fp
   18b3c:	pop	{fp, pc}
   18b40:	push	{fp, lr}
   18b44:	mov	fp, sp
   18b48:	sub	sp, sp, #8
   18b4c:	str	r0, [sp, #4]
   18b50:	ldr	r0, [sp, #4]
   18b54:	bl	144fc <__assert_fail@plt+0x3414>
   18b58:	bl	18b10 <__assert_fail@plt+0x7a28>
   18b5c:	mov	sp, fp
   18b60:	pop	{fp, pc}
   18b64:	push	{fp, lr}
   18b68:	mov	fp, sp
   18b6c:	sub	sp, sp, #8
   18b70:	str	r0, [sp, #4]
   18b74:	ldr	r0, [sp, #4]
   18b78:	bl	18aec <__assert_fail@plt+0x7a04>
   18b7c:	mov	sp, fp
   18b80:	pop	{fp, pc}
   18b84:	push	{fp, lr}
   18b88:	mov	fp, sp
   18b8c:	sub	sp, sp, #16
   18b90:	str	r0, [fp, #-4]
   18b94:	str	r1, [sp, #8]
   18b98:	ldr	r0, [fp, #-4]
   18b9c:	ldr	r1, [sp, #8]
   18ba0:	bl	1dd90 <__assert_fail@plt+0xcca8>
   18ba4:	str	r0, [sp, #4]
   18ba8:	ldr	r0, [sp, #4]
   18bac:	movw	r1, #0
   18bb0:	cmp	r0, r1
   18bb4:	bne	18bd8 <__assert_fail@plt+0x7af0>
   18bb8:	ldr	r0, [fp, #-4]
   18bbc:	movw	r1, #0
   18bc0:	cmp	r0, r1
   18bc4:	beq	18bd4 <__assert_fail@plt+0x7aec>
   18bc8:	ldr	r0, [sp, #8]
   18bcc:	cmp	r0, #0
   18bd0:	beq	18bd8 <__assert_fail@plt+0x7af0>
   18bd4:	bl	1b8c8 <__assert_fail@plt+0xa7e0>
   18bd8:	ldr	r0, [sp, #4]
   18bdc:	mov	sp, fp
   18be0:	pop	{fp, pc}
   18be4:	push	{fp, lr}
   18be8:	mov	fp, sp
   18bec:	sub	sp, sp, #8
   18bf0:	str	r0, [sp, #4]
   18bf4:	str	r1, [sp]
   18bf8:	ldr	r0, [sp, #4]
   18bfc:	ldr	r1, [sp]
   18c00:	bl	1453c <__assert_fail@plt+0x3454>
   18c04:	bl	18b10 <__assert_fail@plt+0x7a28>
   18c08:	mov	sp, fp
   18c0c:	pop	{fp, pc}
   18c10:	push	{fp, lr}
   18c14:	mov	fp, sp
   18c18:	sub	sp, sp, #16
   18c1c:	str	r0, [fp, #-4]
   18c20:	str	r1, [sp, #8]
   18c24:	str	r2, [sp, #4]
   18c28:	ldr	r0, [fp, #-4]
   18c2c:	ldr	r1, [sp, #8]
   18c30:	ldr	r2, [sp, #4]
   18c34:	bl	14634 <__assert_fail@plt+0x354c>
   18c38:	bl	18b10 <__assert_fail@plt+0x7a28>
   18c3c:	mov	sp, fp
   18c40:	pop	{fp, pc}
   18c44:	push	{fp, lr}
   18c48:	mov	fp, sp
   18c4c:	sub	sp, sp, #8
   18c50:	str	r0, [sp, #4]
   18c54:	str	r1, [sp]
   18c58:	ldr	r1, [sp, #4]
   18c5c:	ldr	r2, [sp]
   18c60:	movw	r0, #0
   18c64:	bl	18a78 <__assert_fail@plt+0x7990>
   18c68:	mov	sp, fp
   18c6c:	pop	{fp, pc}
   18c70:	push	{fp, lr}
   18c74:	mov	fp, sp
   18c78:	sub	sp, sp, #8
   18c7c:	str	r0, [sp, #4]
   18c80:	str	r1, [sp]
   18c84:	ldr	r1, [sp, #4]
   18c88:	ldr	r2, [sp]
   18c8c:	movw	r0, #0
   18c90:	bl	18c10 <__assert_fail@plt+0x7b28>
   18c94:	mov	sp, fp
   18c98:	pop	{fp, pc}
   18c9c:	push	{fp, lr}
   18ca0:	mov	fp, sp
   18ca4:	sub	sp, sp, #8
   18ca8:	str	r0, [sp, #4]
   18cac:	str	r1, [sp]
   18cb0:	ldr	r0, [sp, #4]
   18cb4:	ldr	r1, [sp]
   18cb8:	movw	r2, #1
   18cbc:	bl	18cc8 <__assert_fail@plt+0x7be0>
   18cc0:	mov	sp, fp
   18cc4:	pop	{fp, pc}
   18cc8:	push	{fp, lr}
   18ccc:	mov	fp, sp
   18cd0:	sub	sp, sp, #16
   18cd4:	str	r0, [fp, #-4]
   18cd8:	str	r1, [sp, #8]
   18cdc:	str	r2, [sp, #4]
   18ce0:	ldr	r0, [sp, #8]
   18ce4:	ldr	r0, [r0]
   18ce8:	str	r0, [sp]
   18cec:	ldr	r0, [fp, #-4]
   18cf0:	movw	r1, #0
   18cf4:	cmp	r0, r1
   18cf8:	bne	18d44 <__assert_fail@plt+0x7c5c>
   18cfc:	ldr	r0, [sp]
   18d00:	cmp	r0, #0
   18d04:	bne	18d40 <__assert_fail@plt+0x7c58>
   18d08:	ldr	r0, [sp, #4]
   18d0c:	movw	r1, #64	; 0x40
   18d10:	udiv	r0, r1, r0
   18d14:	str	r0, [sp]
   18d18:	ldr	r0, [sp]
   18d1c:	cmp	r0, #0
   18d20:	movw	r0, #0
   18d24:	movne	r0, #1
   18d28:	mvn	r1, #0
   18d2c:	eor	r0, r0, r1
   18d30:	and	r0, r0, #1
   18d34:	ldr	r1, [sp]
   18d38:	add	r0, r1, r0
   18d3c:	str	r0, [sp]
   18d40:	b	18d74 <__assert_fail@plt+0x7c8c>
   18d44:	ldr	r0, [sp]
   18d48:	ldr	r1, [sp]
   18d4c:	lsr	r1, r1, #1
   18d50:	add	r1, r1, #1
   18d54:	adds	r0, r0, r1
   18d58:	mov	r1, #0
   18d5c:	adc	r1, r1, #0
   18d60:	str	r0, [sp]
   18d64:	tst	r1, #1
   18d68:	beq	18d70 <__assert_fail@plt+0x7c88>
   18d6c:	bl	1b8c8 <__assert_fail@plt+0xa7e0>
   18d70:	b	18d74 <__assert_fail@plt+0x7c8c>
   18d74:	ldr	r0, [fp, #-4]
   18d78:	ldr	r1, [sp]
   18d7c:	ldr	r2, [sp, #4]
   18d80:	bl	18a78 <__assert_fail@plt+0x7990>
   18d84:	str	r0, [fp, #-4]
   18d88:	ldr	r0, [sp]
   18d8c:	ldr	r1, [sp, #8]
   18d90:	str	r0, [r1]
   18d94:	ldr	r0, [fp, #-4]
   18d98:	mov	sp, fp
   18d9c:	pop	{fp, pc}
   18da0:	push	{fp, lr}
   18da4:	mov	fp, sp
   18da8:	sub	sp, sp, #376	; 0x178
   18dac:	ldr	ip, [fp, #8]
   18db0:	str	r0, [fp, #-4]
   18db4:	str	r1, [fp, #-8]
   18db8:	str	r2, [fp, #-12]
   18dbc:	str	r3, [fp, #-16]
   18dc0:	ldr	r0, [fp, #-8]
   18dc4:	ldr	r0, [r0]
   18dc8:	str	r0, [fp, #-20]	; 0xffffffec
   18dcc:	ldr	r0, [fp, #-20]	; 0xffffffec
   18dd0:	ldr	r1, [fp, #-20]	; 0xffffffec
   18dd4:	asr	r1, r1, #1
   18dd8:	add	r1, r0, r1
   18ddc:	mov	r2, #1
   18de0:	cmp	r1, r0
   18de4:	movwvc	r2, #0
   18de8:	str	r1, [fp, #-24]	; 0xffffffe8
   18dec:	tst	r2, #1
   18df0:	str	ip, [fp, #-36]	; 0xffffffdc
   18df4:	beq	18e00 <__assert_fail@plt+0x7d18>
   18df8:	ldr	r0, [pc, #4044]	; 19dcc <__assert_fail@plt+0x8ce4>
   18dfc:	str	r0, [fp, #-24]	; 0xffffffe8
   18e00:	ldr	r0, [fp, #-16]
   18e04:	movw	r1, #0
   18e08:	cmp	r1, r0
   18e0c:	bgt	18e28 <__assert_fail@plt+0x7d40>
   18e10:	ldr	r0, [fp, #-16]
   18e14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e18:	cmp	r0, r1
   18e1c:	bge	18e28 <__assert_fail@plt+0x7d40>
   18e20:	ldr	r0, [fp, #-16]
   18e24:	str	r0, [fp, #-24]	; 0xffffffe8
   18e28:	b	19200 <__assert_fail@plt+0x8118>
   18e2c:	b	18e30 <__assert_fail@plt+0x7d48>
   18e30:	ldr	r0, [fp, #8]
   18e34:	cmp	r0, #0
   18e38:	bge	18f4c <__assert_fail@plt+0x7e64>
   18e3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e40:	cmp	r0, #0
   18e44:	bge	18ed0 <__assert_fail@plt+0x7de8>
   18e48:	b	18e4c <__assert_fail@plt+0x7d64>
   18e4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e50:	ldr	r1, [fp, #8]
   18e54:	movw	r2, #127	; 0x7f
   18e58:	sdiv	r1, r2, r1
   18e5c:	cmp	r0, r1
   18e60:	blt	18fec <__assert_fail@plt+0x7f04>
   18e64:	b	19004 <__assert_fail@plt+0x7f1c>
   18e68:	b	18e6c <__assert_fail@plt+0x7d84>
   18e6c:	ldr	r0, [pc, #4076]	; 19e60 <__assert_fail@plt+0x8d78>
   18e70:	ldr	r1, [fp, #8]
   18e74:	cmp	r1, r0
   18e78:	blt	18e90 <__assert_fail@plt+0x7da8>
   18e7c:	b	18e9c <__assert_fail@plt+0x7db4>
   18e80:	ldr	r0, [fp, #8]
   18e84:	movw	r1, #0
   18e88:	cmp	r1, r0
   18e8c:	bge	18e9c <__assert_fail@plt+0x7db4>
   18e90:	movw	r0, #0
   18e94:	str	r0, [fp, #-40]	; 0xffffffd8
   18e98:	b	18eb4 <__assert_fail@plt+0x7dcc>
   18e9c:	ldr	r0, [fp, #8]
   18ea0:	movw	r1, #0
   18ea4:	sub	r0, r1, r0
   18ea8:	movw	r1, #127	; 0x7f
   18eac:	sdiv	r0, r1, r0
   18eb0:	str	r0, [fp, #-40]	; 0xffffffd8
   18eb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18eb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ebc:	mvn	r2, #0
   18ec0:	sub	r1, r2, r1
   18ec4:	cmp	r0, r1
   18ec8:	ble	18fec <__assert_fail@plt+0x7f04>
   18ecc:	b	19004 <__assert_fail@plt+0x7f1c>
   18ed0:	b	18ed4 <__assert_fail@plt+0x7dec>
   18ed4:	b	18f30 <__assert_fail@plt+0x7e48>
   18ed8:	b	18f30 <__assert_fail@plt+0x7e48>
   18edc:	ldr	r0, [fp, #8]
   18ee0:	cmn	r0, #1
   18ee4:	bne	18f30 <__assert_fail@plt+0x7e48>
   18ee8:	b	18eec <__assert_fail@plt+0x7e04>
   18eec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ef0:	mvn	r1, #127	; 0x7f
   18ef4:	add	r0, r0, r1
   18ef8:	movw	r1, #0
   18efc:	cmp	r1, r0
   18f00:	blt	18fec <__assert_fail@plt+0x7f04>
   18f04:	b	19004 <__assert_fail@plt+0x7f1c>
   18f08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f0c:	movw	r1, #0
   18f10:	cmp	r1, r0
   18f14:	bge	19004 <__assert_fail@plt+0x7f1c>
   18f18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f1c:	sub	r0, r0, #1
   18f20:	movw	r1, #127	; 0x7f
   18f24:	cmp	r1, r0
   18f28:	blt	18fec <__assert_fail@plt+0x7f04>
   18f2c:	b	19004 <__assert_fail@plt+0x7f1c>
   18f30:	ldr	r0, [fp, #8]
   18f34:	mvn	r1, #127	; 0x7f
   18f38:	sdiv	r0, r1, r0
   18f3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f40:	cmp	r0, r1
   18f44:	blt	18fec <__assert_fail@plt+0x7f04>
   18f48:	b	19004 <__assert_fail@plt+0x7f1c>
   18f4c:	ldr	r0, [fp, #8]
   18f50:	cmp	r0, #0
   18f54:	bne	18f5c <__assert_fail@plt+0x7e74>
   18f58:	b	19004 <__assert_fail@plt+0x7f1c>
   18f5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f60:	cmp	r0, #0
   18f64:	bge	18fd4 <__assert_fail@plt+0x7eec>
   18f68:	b	18f6c <__assert_fail@plt+0x7e84>
   18f6c:	b	18fb8 <__assert_fail@plt+0x7ed0>
   18f70:	b	18fb8 <__assert_fail@plt+0x7ed0>
   18f74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f78:	cmn	r0, #1
   18f7c:	bne	18fb8 <__assert_fail@plt+0x7ed0>
   18f80:	b	18f84 <__assert_fail@plt+0x7e9c>
   18f84:	ldr	r0, [fp, #8]
   18f88:	mvn	r1, #127	; 0x7f
   18f8c:	add	r0, r0, r1
   18f90:	movw	r1, #0
   18f94:	cmp	r1, r0
   18f98:	blt	18fec <__assert_fail@plt+0x7f04>
   18f9c:	b	19004 <__assert_fail@plt+0x7f1c>
   18fa0:	ldr	r0, [fp, #8]
   18fa4:	sub	r0, r0, #1
   18fa8:	movw	r1, #127	; 0x7f
   18fac:	cmp	r1, r0
   18fb0:	blt	18fec <__assert_fail@plt+0x7f04>
   18fb4:	b	19004 <__assert_fail@plt+0x7f1c>
   18fb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fbc:	mvn	r1, #127	; 0x7f
   18fc0:	sdiv	r0, r1, r0
   18fc4:	ldr	r1, [fp, #8]
   18fc8:	cmp	r0, r1
   18fcc:	blt	18fec <__assert_fail@plt+0x7f04>
   18fd0:	b	19004 <__assert_fail@plt+0x7f1c>
   18fd4:	ldr	r0, [fp, #8]
   18fd8:	movw	r1, #127	; 0x7f
   18fdc:	sdiv	r0, r1, r0
   18fe0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18fe4:	cmp	r0, r1
   18fe8:	bge	19004 <__assert_fail@plt+0x7f1c>
   18fec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ff0:	ldr	r1, [fp, #8]
   18ff4:	mul	r0, r0, r1
   18ff8:	sxtb	r0, r0
   18ffc:	str	r0, [fp, #-28]	; 0xffffffe4
   19000:	b	1a218 <__assert_fail@plt+0x9130>
   19004:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19008:	ldr	r1, [fp, #8]
   1900c:	mul	r0, r0, r1
   19010:	sxtb	r0, r0
   19014:	str	r0, [fp, #-28]	; 0xffffffe4
   19018:	b	1a228 <__assert_fail@plt+0x9140>
   1901c:	ldr	r0, [fp, #8]
   19020:	cmp	r0, #0
   19024:	bge	19134 <__assert_fail@plt+0x804c>
   19028:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1902c:	cmp	r0, #0
   19030:	bge	190bc <__assert_fail@plt+0x7fd4>
   19034:	b	19038 <__assert_fail@plt+0x7f50>
   19038:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1903c:	ldr	r1, [fp, #8]
   19040:	movw	r2, #255	; 0xff
   19044:	sdiv	r1, r2, r1
   19048:	cmp	r0, r1
   1904c:	blt	191d0 <__assert_fail@plt+0x80e8>
   19050:	b	191e8 <__assert_fail@plt+0x8100>
   19054:	b	19058 <__assert_fail@plt+0x7f70>
   19058:	ldr	r0, [pc, #3584]	; 19e60 <__assert_fail@plt+0x8d78>
   1905c:	ldr	r1, [fp, #8]
   19060:	cmp	r1, r0
   19064:	blt	1907c <__assert_fail@plt+0x7f94>
   19068:	b	19088 <__assert_fail@plt+0x7fa0>
   1906c:	ldr	r0, [fp, #8]
   19070:	movw	r1, #0
   19074:	cmp	r1, r0
   19078:	bge	19088 <__assert_fail@plt+0x7fa0>
   1907c:	movw	r0, #0
   19080:	str	r0, [fp, #-44]	; 0xffffffd4
   19084:	b	190a0 <__assert_fail@plt+0x7fb8>
   19088:	ldr	r0, [fp, #8]
   1908c:	movw	r1, #0
   19090:	sub	r0, r1, r0
   19094:	movw	r1, #255	; 0xff
   19098:	sdiv	r0, r1, r0
   1909c:	str	r0, [fp, #-44]	; 0xffffffd4
   190a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   190a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   190a8:	mvn	r2, #0
   190ac:	sub	r1, r2, r1
   190b0:	cmp	r0, r1
   190b4:	ble	191d0 <__assert_fail@plt+0x80e8>
   190b8:	b	191e8 <__assert_fail@plt+0x8100>
   190bc:	b	190c0 <__assert_fail@plt+0x7fd8>
   190c0:	b	19118 <__assert_fail@plt+0x8030>
   190c4:	b	19118 <__assert_fail@plt+0x8030>
   190c8:	ldr	r0, [fp, #8]
   190cc:	cmn	r0, #1
   190d0:	bne	19118 <__assert_fail@plt+0x8030>
   190d4:	b	190d8 <__assert_fail@plt+0x7ff0>
   190d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190dc:	add	r0, r0, #0
   190e0:	movw	r1, #0
   190e4:	cmp	r1, r0
   190e8:	blt	191d0 <__assert_fail@plt+0x80e8>
   190ec:	b	191e8 <__assert_fail@plt+0x8100>
   190f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190f4:	movw	r1, #0
   190f8:	cmp	r1, r0
   190fc:	bge	191e8 <__assert_fail@plt+0x8100>
   19100:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19104:	sub	r0, r0, #1
   19108:	mvn	r1, #0
   1910c:	cmp	r1, r0
   19110:	blt	191d0 <__assert_fail@plt+0x80e8>
   19114:	b	191e8 <__assert_fail@plt+0x8100>
   19118:	ldr	r0, [fp, #8]
   1911c:	movw	r1, #0
   19120:	sdiv	r0, r1, r0
   19124:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19128:	cmp	r0, r1
   1912c:	blt	191d0 <__assert_fail@plt+0x80e8>
   19130:	b	191e8 <__assert_fail@plt+0x8100>
   19134:	ldr	r0, [fp, #8]
   19138:	cmp	r0, #0
   1913c:	bne	19144 <__assert_fail@plt+0x805c>
   19140:	b	191e8 <__assert_fail@plt+0x8100>
   19144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19148:	cmp	r0, #0
   1914c:	bge	191b8 <__assert_fail@plt+0x80d0>
   19150:	b	19154 <__assert_fail@plt+0x806c>
   19154:	b	1919c <__assert_fail@plt+0x80b4>
   19158:	b	1919c <__assert_fail@plt+0x80b4>
   1915c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19160:	cmn	r0, #1
   19164:	bne	1919c <__assert_fail@plt+0x80b4>
   19168:	b	1916c <__assert_fail@plt+0x8084>
   1916c:	ldr	r0, [fp, #8]
   19170:	add	r0, r0, #0
   19174:	movw	r1, #0
   19178:	cmp	r1, r0
   1917c:	blt	191d0 <__assert_fail@plt+0x80e8>
   19180:	b	191e8 <__assert_fail@plt+0x8100>
   19184:	ldr	r0, [fp, #8]
   19188:	sub	r0, r0, #1
   1918c:	mvn	r1, #0
   19190:	cmp	r1, r0
   19194:	blt	191d0 <__assert_fail@plt+0x80e8>
   19198:	b	191e8 <__assert_fail@plt+0x8100>
   1919c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191a0:	movw	r1, #0
   191a4:	sdiv	r0, r1, r0
   191a8:	ldr	r1, [fp, #8]
   191ac:	cmp	r0, r1
   191b0:	blt	191d0 <__assert_fail@plt+0x80e8>
   191b4:	b	191e8 <__assert_fail@plt+0x8100>
   191b8:	ldr	r0, [fp, #8]
   191bc:	movw	r1, #255	; 0xff
   191c0:	sdiv	r0, r1, r0
   191c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   191c8:	cmp	r0, r1
   191cc:	bge	191e8 <__assert_fail@plt+0x8100>
   191d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191d4:	ldr	r1, [fp, #8]
   191d8:	mul	r0, r0, r1
   191dc:	and	r0, r0, #255	; 0xff
   191e0:	str	r0, [fp, #-28]	; 0xffffffe4
   191e4:	b	1a218 <__assert_fail@plt+0x9130>
   191e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191ec:	ldr	r1, [fp, #8]
   191f0:	mul	r0, r0, r1
   191f4:	and	r0, r0, #255	; 0xff
   191f8:	str	r0, [fp, #-28]	; 0xffffffe4
   191fc:	b	1a228 <__assert_fail@plt+0x9140>
   19200:	b	195d8 <__assert_fail@plt+0x84f0>
   19204:	b	19208 <__assert_fail@plt+0x8120>
   19208:	ldr	r0, [fp, #8]
   1920c:	cmp	r0, #0
   19210:	bge	19324 <__assert_fail@plt+0x823c>
   19214:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19218:	cmp	r0, #0
   1921c:	bge	192a8 <__assert_fail@plt+0x81c0>
   19220:	b	19224 <__assert_fail@plt+0x813c>
   19224:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19228:	ldr	r1, [fp, #8]
   1922c:	movw	r2, #32767	; 0x7fff
   19230:	sdiv	r1, r2, r1
   19234:	cmp	r0, r1
   19238:	blt	193c4 <__assert_fail@plt+0x82dc>
   1923c:	b	193dc <__assert_fail@plt+0x82f4>
   19240:	b	19244 <__assert_fail@plt+0x815c>
   19244:	ldr	r0, [pc, #3092]	; 19e60 <__assert_fail@plt+0x8d78>
   19248:	ldr	r1, [fp, #8]
   1924c:	cmp	r1, r0
   19250:	blt	19268 <__assert_fail@plt+0x8180>
   19254:	b	19274 <__assert_fail@plt+0x818c>
   19258:	ldr	r0, [fp, #8]
   1925c:	movw	r1, #0
   19260:	cmp	r1, r0
   19264:	bge	19274 <__assert_fail@plt+0x818c>
   19268:	movw	r0, #0
   1926c:	str	r0, [fp, #-48]	; 0xffffffd0
   19270:	b	1928c <__assert_fail@plt+0x81a4>
   19274:	ldr	r0, [fp, #8]
   19278:	movw	r1, #0
   1927c:	sub	r0, r1, r0
   19280:	movw	r1, #32767	; 0x7fff
   19284:	sdiv	r0, r1, r0
   19288:	str	r0, [fp, #-48]	; 0xffffffd0
   1928c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19290:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19294:	mvn	r2, #0
   19298:	sub	r1, r2, r1
   1929c:	cmp	r0, r1
   192a0:	ble	193c4 <__assert_fail@plt+0x82dc>
   192a4:	b	193dc <__assert_fail@plt+0x82f4>
   192a8:	b	192ac <__assert_fail@plt+0x81c4>
   192ac:	b	19308 <__assert_fail@plt+0x8220>
   192b0:	b	19308 <__assert_fail@plt+0x8220>
   192b4:	ldr	r0, [fp, #8]
   192b8:	cmn	r0, #1
   192bc:	bne	19308 <__assert_fail@plt+0x8220>
   192c0:	b	192c4 <__assert_fail@plt+0x81dc>
   192c4:	ldr	r0, [pc, #3928]	; 1a224 <__assert_fail@plt+0x913c>
   192c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   192cc:	add	r0, r1, r0
   192d0:	movw	r1, #0
   192d4:	cmp	r1, r0
   192d8:	blt	193c4 <__assert_fail@plt+0x82dc>
   192dc:	b	193dc <__assert_fail@plt+0x82f4>
   192e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192e4:	movw	r1, #0
   192e8:	cmp	r1, r0
   192ec:	bge	193dc <__assert_fail@plt+0x82f4>
   192f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192f4:	sub	r0, r0, #1
   192f8:	movw	r1, #32767	; 0x7fff
   192fc:	cmp	r1, r0
   19300:	blt	193c4 <__assert_fail@plt+0x82dc>
   19304:	b	193dc <__assert_fail@plt+0x82f4>
   19308:	ldr	r0, [pc, #3860]	; 1a224 <__assert_fail@plt+0x913c>
   1930c:	ldr	r1, [fp, #8]
   19310:	sdiv	r0, r0, r1
   19314:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19318:	cmp	r0, r1
   1931c:	blt	193c4 <__assert_fail@plt+0x82dc>
   19320:	b	193dc <__assert_fail@plt+0x82f4>
   19324:	ldr	r0, [fp, #8]
   19328:	cmp	r0, #0
   1932c:	bne	19334 <__assert_fail@plt+0x824c>
   19330:	b	193dc <__assert_fail@plt+0x82f4>
   19334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19338:	cmp	r0, #0
   1933c:	bge	193ac <__assert_fail@plt+0x82c4>
   19340:	b	19344 <__assert_fail@plt+0x825c>
   19344:	b	19390 <__assert_fail@plt+0x82a8>
   19348:	b	19390 <__assert_fail@plt+0x82a8>
   1934c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19350:	cmn	r0, #1
   19354:	bne	19390 <__assert_fail@plt+0x82a8>
   19358:	b	1935c <__assert_fail@plt+0x8274>
   1935c:	ldr	r0, [pc, #3776]	; 1a224 <__assert_fail@plt+0x913c>
   19360:	ldr	r1, [fp, #8]
   19364:	add	r0, r1, r0
   19368:	movw	r1, #0
   1936c:	cmp	r1, r0
   19370:	blt	193c4 <__assert_fail@plt+0x82dc>
   19374:	b	193dc <__assert_fail@plt+0x82f4>
   19378:	ldr	r0, [fp, #8]
   1937c:	sub	r0, r0, #1
   19380:	movw	r1, #32767	; 0x7fff
   19384:	cmp	r1, r0
   19388:	blt	193c4 <__assert_fail@plt+0x82dc>
   1938c:	b	193dc <__assert_fail@plt+0x82f4>
   19390:	ldr	r0, [pc, #3724]	; 1a224 <__assert_fail@plt+0x913c>
   19394:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19398:	sdiv	r0, r0, r1
   1939c:	ldr	r1, [fp, #8]
   193a0:	cmp	r0, r1
   193a4:	blt	193c4 <__assert_fail@plt+0x82dc>
   193a8:	b	193dc <__assert_fail@plt+0x82f4>
   193ac:	ldr	r0, [fp, #8]
   193b0:	movw	r1, #32767	; 0x7fff
   193b4:	sdiv	r0, r1, r0
   193b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   193bc:	cmp	r0, r1
   193c0:	bge	193dc <__assert_fail@plt+0x82f4>
   193c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193c8:	ldr	r1, [fp, #8]
   193cc:	mul	r0, r0, r1
   193d0:	sxth	r0, r0
   193d4:	str	r0, [fp, #-28]	; 0xffffffe4
   193d8:	b	1a218 <__assert_fail@plt+0x9130>
   193dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193e0:	ldr	r1, [fp, #8]
   193e4:	mul	r0, r0, r1
   193e8:	sxth	r0, r0
   193ec:	str	r0, [fp, #-28]	; 0xffffffe4
   193f0:	b	1a228 <__assert_fail@plt+0x9140>
   193f4:	ldr	r0, [fp, #8]
   193f8:	cmp	r0, #0
   193fc:	bge	1950c <__assert_fail@plt+0x8424>
   19400:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19404:	cmp	r0, #0
   19408:	bge	19494 <__assert_fail@plt+0x83ac>
   1940c:	b	19410 <__assert_fail@plt+0x8328>
   19410:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19414:	ldr	r1, [fp, #8]
   19418:	movw	r2, #65535	; 0xffff
   1941c:	sdiv	r1, r2, r1
   19420:	cmp	r0, r1
   19424:	blt	195a8 <__assert_fail@plt+0x84c0>
   19428:	b	195c0 <__assert_fail@plt+0x84d8>
   1942c:	b	19430 <__assert_fail@plt+0x8348>
   19430:	ldr	r0, [pc, #2600]	; 19e60 <__assert_fail@plt+0x8d78>
   19434:	ldr	r1, [fp, #8]
   19438:	cmp	r1, r0
   1943c:	blt	19454 <__assert_fail@plt+0x836c>
   19440:	b	19460 <__assert_fail@plt+0x8378>
   19444:	ldr	r0, [fp, #8]
   19448:	movw	r1, #0
   1944c:	cmp	r1, r0
   19450:	bge	19460 <__assert_fail@plt+0x8378>
   19454:	movw	r0, #0
   19458:	str	r0, [fp, #-52]	; 0xffffffcc
   1945c:	b	19478 <__assert_fail@plt+0x8390>
   19460:	ldr	r0, [fp, #8]
   19464:	movw	r1, #0
   19468:	sub	r0, r1, r0
   1946c:	movw	r1, #65535	; 0xffff
   19470:	sdiv	r0, r1, r0
   19474:	str	r0, [fp, #-52]	; 0xffffffcc
   19478:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1947c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19480:	mvn	r2, #0
   19484:	sub	r1, r2, r1
   19488:	cmp	r0, r1
   1948c:	ble	195a8 <__assert_fail@plt+0x84c0>
   19490:	b	195c0 <__assert_fail@plt+0x84d8>
   19494:	b	19498 <__assert_fail@plt+0x83b0>
   19498:	b	194f0 <__assert_fail@plt+0x8408>
   1949c:	b	194f0 <__assert_fail@plt+0x8408>
   194a0:	ldr	r0, [fp, #8]
   194a4:	cmn	r0, #1
   194a8:	bne	194f0 <__assert_fail@plt+0x8408>
   194ac:	b	194b0 <__assert_fail@plt+0x83c8>
   194b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194b4:	add	r0, r0, #0
   194b8:	movw	r1, #0
   194bc:	cmp	r1, r0
   194c0:	blt	195a8 <__assert_fail@plt+0x84c0>
   194c4:	b	195c0 <__assert_fail@plt+0x84d8>
   194c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194cc:	movw	r1, #0
   194d0:	cmp	r1, r0
   194d4:	bge	195c0 <__assert_fail@plt+0x84d8>
   194d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194dc:	sub	r0, r0, #1
   194e0:	mvn	r1, #0
   194e4:	cmp	r1, r0
   194e8:	blt	195a8 <__assert_fail@plt+0x84c0>
   194ec:	b	195c0 <__assert_fail@plt+0x84d8>
   194f0:	ldr	r0, [fp, #8]
   194f4:	movw	r1, #0
   194f8:	sdiv	r0, r1, r0
   194fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19500:	cmp	r0, r1
   19504:	blt	195a8 <__assert_fail@plt+0x84c0>
   19508:	b	195c0 <__assert_fail@plt+0x84d8>
   1950c:	ldr	r0, [fp, #8]
   19510:	cmp	r0, #0
   19514:	bne	1951c <__assert_fail@plt+0x8434>
   19518:	b	195c0 <__assert_fail@plt+0x84d8>
   1951c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19520:	cmp	r0, #0
   19524:	bge	19590 <__assert_fail@plt+0x84a8>
   19528:	b	1952c <__assert_fail@plt+0x8444>
   1952c:	b	19574 <__assert_fail@plt+0x848c>
   19530:	b	19574 <__assert_fail@plt+0x848c>
   19534:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19538:	cmn	r0, #1
   1953c:	bne	19574 <__assert_fail@plt+0x848c>
   19540:	b	19544 <__assert_fail@plt+0x845c>
   19544:	ldr	r0, [fp, #8]
   19548:	add	r0, r0, #0
   1954c:	movw	r1, #0
   19550:	cmp	r1, r0
   19554:	blt	195a8 <__assert_fail@plt+0x84c0>
   19558:	b	195c0 <__assert_fail@plt+0x84d8>
   1955c:	ldr	r0, [fp, #8]
   19560:	sub	r0, r0, #1
   19564:	mvn	r1, #0
   19568:	cmp	r1, r0
   1956c:	blt	195a8 <__assert_fail@plt+0x84c0>
   19570:	b	195c0 <__assert_fail@plt+0x84d8>
   19574:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19578:	movw	r1, #0
   1957c:	sdiv	r0, r1, r0
   19580:	ldr	r1, [fp, #8]
   19584:	cmp	r0, r1
   19588:	blt	195a8 <__assert_fail@plt+0x84c0>
   1958c:	b	195c0 <__assert_fail@plt+0x84d8>
   19590:	ldr	r0, [fp, #8]
   19594:	movw	r1, #65535	; 0xffff
   19598:	sdiv	r0, r1, r0
   1959c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   195a0:	cmp	r0, r1
   195a4:	bge	195c0 <__assert_fail@plt+0x84d8>
   195a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195ac:	ldr	r1, [fp, #8]
   195b0:	mul	r0, r0, r1
   195b4:	uxth	r0, r0
   195b8:	str	r0, [fp, #-28]	; 0xffffffe4
   195bc:	b	1a218 <__assert_fail@plt+0x9130>
   195c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195c4:	ldr	r1, [fp, #8]
   195c8:	mul	r0, r0, r1
   195cc:	uxth	r0, r0
   195d0:	str	r0, [fp, #-28]	; 0xffffffe4
   195d4:	b	1a228 <__assert_fail@plt+0x9140>
   195d8:	b	195dc <__assert_fail@plt+0x84f4>
   195dc:	b	195e0 <__assert_fail@plt+0x84f8>
   195e0:	ldr	r0, [fp, #8]
   195e4:	cmp	r0, #0
   195e8:	bge	196ec <__assert_fail@plt+0x8604>
   195ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195f0:	cmp	r0, #0
   195f4:	bge	19680 <__assert_fail@plt+0x8598>
   195f8:	b	195fc <__assert_fail@plt+0x8514>
   195fc:	ldr	r0, [pc, #1992]	; 19dcc <__assert_fail@plt+0x8ce4>
   19600:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19604:	ldr	r2, [fp, #8]
   19608:	sdiv	r0, r0, r2
   1960c:	cmp	r1, r0
   19610:	blt	1977c <__assert_fail@plt+0x8694>
   19614:	b	19790 <__assert_fail@plt+0x86a8>
   19618:	b	1961c <__assert_fail@plt+0x8534>
   1961c:	ldr	r0, [pc, #2108]	; 19e60 <__assert_fail@plt+0x8d78>
   19620:	ldr	r1, [fp, #8]
   19624:	cmp	r1, r0
   19628:	blt	19640 <__assert_fail@plt+0x8558>
   1962c:	b	1964c <__assert_fail@plt+0x8564>
   19630:	ldr	r0, [fp, #8]
   19634:	movw	r1, #0
   19638:	cmp	r1, r0
   1963c:	bge	1964c <__assert_fail@plt+0x8564>
   19640:	movw	r0, #0
   19644:	str	r0, [fp, #-56]	; 0xffffffc8
   19648:	b	19664 <__assert_fail@plt+0x857c>
   1964c:	ldr	r0, [pc, #1912]	; 19dcc <__assert_fail@plt+0x8ce4>
   19650:	ldr	r1, [fp, #8]
   19654:	movw	r2, #0
   19658:	sub	r1, r2, r1
   1965c:	sdiv	r0, r0, r1
   19660:	str	r0, [fp, #-56]	; 0xffffffc8
   19664:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19668:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1966c:	mvn	r2, #0
   19670:	sub	r1, r2, r1
   19674:	cmp	r0, r1
   19678:	ble	1977c <__assert_fail@plt+0x8694>
   1967c:	b	19790 <__assert_fail@plt+0x86a8>
   19680:	ldr	r0, [fp, #8]
   19684:	cmn	r0, #1
   19688:	bne	196d0 <__assert_fail@plt+0x85e8>
   1968c:	b	19690 <__assert_fail@plt+0x85a8>
   19690:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19694:	add	r0, r0, #-2147483648	; 0x80000000
   19698:	movw	r1, #0
   1969c:	cmp	r1, r0
   196a0:	blt	1977c <__assert_fail@plt+0x8694>
   196a4:	b	19790 <__assert_fail@plt+0x86a8>
   196a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   196ac:	movw	r1, #0
   196b0:	cmp	r1, r0
   196b4:	bge	19790 <__assert_fail@plt+0x86a8>
   196b8:	ldr	r0, [pc, #1804]	; 19dcc <__assert_fail@plt+0x8ce4>
   196bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   196c0:	sub	r1, r1, #1
   196c4:	cmp	r0, r1
   196c8:	blt	1977c <__assert_fail@plt+0x8694>
   196cc:	b	19790 <__assert_fail@plt+0x86a8>
   196d0:	ldr	r0, [pc, #4072]	; 1a6c0 <__assert_fail@plt+0x95d8>
   196d4:	ldr	r1, [fp, #8]
   196d8:	sdiv	r0, r0, r1
   196dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   196e0:	cmp	r0, r1
   196e4:	blt	1977c <__assert_fail@plt+0x8694>
   196e8:	b	19790 <__assert_fail@plt+0x86a8>
   196ec:	ldr	r0, [fp, #8]
   196f0:	cmp	r0, #0
   196f4:	bne	196fc <__assert_fail@plt+0x8614>
   196f8:	b	19790 <__assert_fail@plt+0x86a8>
   196fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19700:	cmp	r0, #0
   19704:	bge	19764 <__assert_fail@plt+0x867c>
   19708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1970c:	cmn	r0, #1
   19710:	bne	19748 <__assert_fail@plt+0x8660>
   19714:	b	19718 <__assert_fail@plt+0x8630>
   19718:	ldr	r0, [fp, #8]
   1971c:	add	r0, r0, #-2147483648	; 0x80000000
   19720:	movw	r1, #0
   19724:	cmp	r1, r0
   19728:	blt	1977c <__assert_fail@plt+0x8694>
   1972c:	b	19790 <__assert_fail@plt+0x86a8>
   19730:	ldr	r0, [pc, #1684]	; 19dcc <__assert_fail@plt+0x8ce4>
   19734:	ldr	r1, [fp, #8]
   19738:	sub	r1, r1, #1
   1973c:	cmp	r0, r1
   19740:	blt	1977c <__assert_fail@plt+0x8694>
   19744:	b	19790 <__assert_fail@plt+0x86a8>
   19748:	ldr	r0, [pc, #3952]	; 1a6c0 <__assert_fail@plt+0x95d8>
   1974c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19750:	sdiv	r0, r0, r1
   19754:	ldr	r1, [fp, #8]
   19758:	cmp	r0, r1
   1975c:	blt	1977c <__assert_fail@plt+0x8694>
   19760:	b	19790 <__assert_fail@plt+0x86a8>
   19764:	ldr	r0, [pc, #1632]	; 19dcc <__assert_fail@plt+0x8ce4>
   19768:	ldr	r1, [fp, #8]
   1976c:	sdiv	r0, r0, r1
   19770:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19774:	cmp	r0, r1
   19778:	bge	19790 <__assert_fail@plt+0x86a8>
   1977c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19780:	ldr	r1, [fp, #8]
   19784:	mul	r0, r0, r1
   19788:	str	r0, [fp, #-28]	; 0xffffffe4
   1978c:	b	1a218 <__assert_fail@plt+0x9130>
   19790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19794:	ldr	r1, [fp, #8]
   19798:	mul	r0, r0, r1
   1979c:	str	r0, [fp, #-28]	; 0xffffffe4
   197a0:	b	1a228 <__assert_fail@plt+0x9140>
   197a4:	ldr	r0, [fp, #8]
   197a8:	cmp	r0, #0
   197ac:	bge	198bc <__assert_fail@plt+0x87d4>
   197b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197b4:	cmp	r0, #0
   197b8:	bge	19844 <__assert_fail@plt+0x875c>
   197bc:	b	197dc <__assert_fail@plt+0x86f4>
   197c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197c4:	ldr	r1, [fp, #8]
   197c8:	mvn	r2, #0
   197cc:	udiv	r1, r2, r1
   197d0:	cmp	r0, r1
   197d4:	bcc	19958 <__assert_fail@plt+0x8870>
   197d8:	b	1996c <__assert_fail@plt+0x8884>
   197dc:	b	197e0 <__assert_fail@plt+0x86f8>
   197e0:	ldr	r0, [pc, #1656]	; 19e60 <__assert_fail@plt+0x8d78>
   197e4:	ldr	r1, [fp, #8]
   197e8:	cmp	r1, r0
   197ec:	blt	19804 <__assert_fail@plt+0x871c>
   197f0:	b	19810 <__assert_fail@plt+0x8728>
   197f4:	ldr	r0, [fp, #8]
   197f8:	movw	r1, #0
   197fc:	cmp	r1, r0
   19800:	bge	19810 <__assert_fail@plt+0x8728>
   19804:	movw	r0, #1
   19808:	str	r0, [fp, #-60]	; 0xffffffc4
   1980c:	b	19828 <__assert_fail@plt+0x8740>
   19810:	ldr	r0, [fp, #8]
   19814:	movw	r1, #0
   19818:	sub	r0, r1, r0
   1981c:	mvn	r1, #0
   19820:	udiv	r0, r1, r0
   19824:	str	r0, [fp, #-60]	; 0xffffffc4
   19828:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1982c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19830:	mvn	r2, #0
   19834:	sub	r1, r2, r1
   19838:	cmp	r0, r1
   1983c:	bls	19958 <__assert_fail@plt+0x8870>
   19840:	b	1996c <__assert_fail@plt+0x8884>
   19844:	b	19848 <__assert_fail@plt+0x8760>
   19848:	b	198a0 <__assert_fail@plt+0x87b8>
   1984c:	b	198a0 <__assert_fail@plt+0x87b8>
   19850:	ldr	r0, [fp, #8]
   19854:	cmn	r0, #1
   19858:	bne	198a0 <__assert_fail@plt+0x87b8>
   1985c:	b	19860 <__assert_fail@plt+0x8778>
   19860:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19864:	add	r0, r0, #0
   19868:	movw	r1, #0
   1986c:	cmp	r1, r0
   19870:	blt	19958 <__assert_fail@plt+0x8870>
   19874:	b	1996c <__assert_fail@plt+0x8884>
   19878:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1987c:	movw	r1, #0
   19880:	cmp	r1, r0
   19884:	bge	1996c <__assert_fail@plt+0x8884>
   19888:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1988c:	sub	r0, r0, #1
   19890:	mvn	r1, #0
   19894:	cmp	r1, r0
   19898:	blt	19958 <__assert_fail@plt+0x8870>
   1989c:	b	1996c <__assert_fail@plt+0x8884>
   198a0:	ldr	r0, [fp, #8]
   198a4:	movw	r1, #0
   198a8:	sdiv	r0, r1, r0
   198ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   198b0:	cmp	r0, r1
   198b4:	blt	19958 <__assert_fail@plt+0x8870>
   198b8:	b	1996c <__assert_fail@plt+0x8884>
   198bc:	ldr	r0, [fp, #8]
   198c0:	cmp	r0, #0
   198c4:	bne	198cc <__assert_fail@plt+0x87e4>
   198c8:	b	1996c <__assert_fail@plt+0x8884>
   198cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198d0:	cmp	r0, #0
   198d4:	bge	19940 <__assert_fail@plt+0x8858>
   198d8:	b	198dc <__assert_fail@plt+0x87f4>
   198dc:	b	19924 <__assert_fail@plt+0x883c>
   198e0:	b	19924 <__assert_fail@plt+0x883c>
   198e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198e8:	cmn	r0, #1
   198ec:	bne	19924 <__assert_fail@plt+0x883c>
   198f0:	b	198f4 <__assert_fail@plt+0x880c>
   198f4:	ldr	r0, [fp, #8]
   198f8:	add	r0, r0, #0
   198fc:	movw	r1, #0
   19900:	cmp	r1, r0
   19904:	blt	19958 <__assert_fail@plt+0x8870>
   19908:	b	1996c <__assert_fail@plt+0x8884>
   1990c:	ldr	r0, [fp, #8]
   19910:	sub	r0, r0, #1
   19914:	mvn	r1, #0
   19918:	cmp	r1, r0
   1991c:	blt	19958 <__assert_fail@plt+0x8870>
   19920:	b	1996c <__assert_fail@plt+0x8884>
   19924:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19928:	movw	r1, #0
   1992c:	sdiv	r0, r1, r0
   19930:	ldr	r1, [fp, #8]
   19934:	cmp	r0, r1
   19938:	blt	19958 <__assert_fail@plt+0x8870>
   1993c:	b	1996c <__assert_fail@plt+0x8884>
   19940:	ldr	r0, [fp, #8]
   19944:	mvn	r1, #0
   19948:	udiv	r0, r1, r0
   1994c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19950:	cmp	r0, r1
   19954:	bcs	1996c <__assert_fail@plt+0x8884>
   19958:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1995c:	ldr	r1, [fp, #8]
   19960:	mul	r0, r0, r1
   19964:	str	r0, [fp, #-28]	; 0xffffffe4
   19968:	b	1a218 <__assert_fail@plt+0x9130>
   1996c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19970:	ldr	r1, [fp, #8]
   19974:	mul	r0, r0, r1
   19978:	str	r0, [fp, #-28]	; 0xffffffe4
   1997c:	b	1a228 <__assert_fail@plt+0x9140>
   19980:	b	19984 <__assert_fail@plt+0x889c>
   19984:	b	19988 <__assert_fail@plt+0x88a0>
   19988:	ldr	r0, [fp, #8]
   1998c:	cmp	r0, #0
   19990:	bge	19a94 <__assert_fail@plt+0x89ac>
   19994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19998:	cmp	r0, #0
   1999c:	bge	19a28 <__assert_fail@plt+0x8940>
   199a0:	b	199a4 <__assert_fail@plt+0x88bc>
   199a4:	ldr	r0, [pc, #1056]	; 19dcc <__assert_fail@plt+0x8ce4>
   199a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   199ac:	ldr	r2, [fp, #8]
   199b0:	sdiv	r0, r0, r2
   199b4:	cmp	r1, r0
   199b8:	blt	19b24 <__assert_fail@plt+0x8a3c>
   199bc:	b	19b38 <__assert_fail@plt+0x8a50>
   199c0:	b	199c4 <__assert_fail@plt+0x88dc>
   199c4:	ldr	r0, [pc, #1172]	; 19e60 <__assert_fail@plt+0x8d78>
   199c8:	ldr	r1, [fp, #8]
   199cc:	cmp	r1, r0
   199d0:	blt	199e8 <__assert_fail@plt+0x8900>
   199d4:	b	199f4 <__assert_fail@plt+0x890c>
   199d8:	ldr	r0, [fp, #8]
   199dc:	movw	r1, #0
   199e0:	cmp	r1, r0
   199e4:	bge	199f4 <__assert_fail@plt+0x890c>
   199e8:	movw	r0, #0
   199ec:	str	r0, [fp, #-64]	; 0xffffffc0
   199f0:	b	19a0c <__assert_fail@plt+0x8924>
   199f4:	ldr	r0, [pc, #976]	; 19dcc <__assert_fail@plt+0x8ce4>
   199f8:	ldr	r1, [fp, #8]
   199fc:	movw	r2, #0
   19a00:	sub	r1, r2, r1
   19a04:	sdiv	r0, r0, r1
   19a08:	str	r0, [fp, #-64]	; 0xffffffc0
   19a0c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   19a10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19a14:	mvn	r2, #0
   19a18:	sub	r1, r2, r1
   19a1c:	cmp	r0, r1
   19a20:	ble	19b24 <__assert_fail@plt+0x8a3c>
   19a24:	b	19b38 <__assert_fail@plt+0x8a50>
   19a28:	ldr	r0, [fp, #8]
   19a2c:	cmn	r0, #1
   19a30:	bne	19a78 <__assert_fail@plt+0x8990>
   19a34:	b	19a38 <__assert_fail@plt+0x8950>
   19a38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a3c:	add	r0, r0, #-2147483648	; 0x80000000
   19a40:	movw	r1, #0
   19a44:	cmp	r1, r0
   19a48:	blt	19b24 <__assert_fail@plt+0x8a3c>
   19a4c:	b	19b38 <__assert_fail@plt+0x8a50>
   19a50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a54:	movw	r1, #0
   19a58:	cmp	r1, r0
   19a5c:	bge	19b38 <__assert_fail@plt+0x8a50>
   19a60:	ldr	r0, [pc, #868]	; 19dcc <__assert_fail@plt+0x8ce4>
   19a64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19a68:	sub	r1, r1, #1
   19a6c:	cmp	r0, r1
   19a70:	blt	19b24 <__assert_fail@plt+0x8a3c>
   19a74:	b	19b38 <__assert_fail@plt+0x8a50>
   19a78:	ldr	r0, [pc, #3136]	; 1a6c0 <__assert_fail@plt+0x95d8>
   19a7c:	ldr	r1, [fp, #8]
   19a80:	sdiv	r0, r0, r1
   19a84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19a88:	cmp	r0, r1
   19a8c:	blt	19b24 <__assert_fail@plt+0x8a3c>
   19a90:	b	19b38 <__assert_fail@plt+0x8a50>
   19a94:	ldr	r0, [fp, #8]
   19a98:	cmp	r0, #0
   19a9c:	bne	19aa4 <__assert_fail@plt+0x89bc>
   19aa0:	b	19b38 <__assert_fail@plt+0x8a50>
   19aa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19aa8:	cmp	r0, #0
   19aac:	bge	19b0c <__assert_fail@plt+0x8a24>
   19ab0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ab4:	cmn	r0, #1
   19ab8:	bne	19af0 <__assert_fail@plt+0x8a08>
   19abc:	b	19ac0 <__assert_fail@plt+0x89d8>
   19ac0:	ldr	r0, [fp, #8]
   19ac4:	add	r0, r0, #-2147483648	; 0x80000000
   19ac8:	movw	r1, #0
   19acc:	cmp	r1, r0
   19ad0:	blt	19b24 <__assert_fail@plt+0x8a3c>
   19ad4:	b	19b38 <__assert_fail@plt+0x8a50>
   19ad8:	ldr	r0, [pc, #748]	; 19dcc <__assert_fail@plt+0x8ce4>
   19adc:	ldr	r1, [fp, #8]
   19ae0:	sub	r1, r1, #1
   19ae4:	cmp	r0, r1
   19ae8:	blt	19b24 <__assert_fail@plt+0x8a3c>
   19aec:	b	19b38 <__assert_fail@plt+0x8a50>
   19af0:	ldr	r0, [pc, #3016]	; 1a6c0 <__assert_fail@plt+0x95d8>
   19af4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19af8:	sdiv	r0, r0, r1
   19afc:	ldr	r1, [fp, #8]
   19b00:	cmp	r0, r1
   19b04:	blt	19b24 <__assert_fail@plt+0x8a3c>
   19b08:	b	19b38 <__assert_fail@plt+0x8a50>
   19b0c:	ldr	r0, [pc, #696]	; 19dcc <__assert_fail@plt+0x8ce4>
   19b10:	ldr	r1, [fp, #8]
   19b14:	sdiv	r0, r0, r1
   19b18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19b1c:	cmp	r0, r1
   19b20:	bge	19b38 <__assert_fail@plt+0x8a50>
   19b24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b28:	ldr	r1, [fp, #8]
   19b2c:	mul	r0, r0, r1
   19b30:	str	r0, [fp, #-28]	; 0xffffffe4
   19b34:	b	1a218 <__assert_fail@plt+0x9130>
   19b38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b3c:	ldr	r1, [fp, #8]
   19b40:	mul	r0, r0, r1
   19b44:	str	r0, [fp, #-28]	; 0xffffffe4
   19b48:	b	1a228 <__assert_fail@plt+0x9140>
   19b4c:	ldr	r0, [fp, #8]
   19b50:	cmp	r0, #0
   19b54:	bge	19c64 <__assert_fail@plt+0x8b7c>
   19b58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b5c:	cmp	r0, #0
   19b60:	bge	19bec <__assert_fail@plt+0x8b04>
   19b64:	b	19b84 <__assert_fail@plt+0x8a9c>
   19b68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b6c:	ldr	r1, [fp, #8]
   19b70:	mvn	r2, #0
   19b74:	udiv	r1, r2, r1
   19b78:	cmp	r0, r1
   19b7c:	bcc	19d00 <__assert_fail@plt+0x8c18>
   19b80:	b	19d14 <__assert_fail@plt+0x8c2c>
   19b84:	b	19b88 <__assert_fail@plt+0x8aa0>
   19b88:	ldr	r0, [pc, #720]	; 19e60 <__assert_fail@plt+0x8d78>
   19b8c:	ldr	r1, [fp, #8]
   19b90:	cmp	r1, r0
   19b94:	blt	19bac <__assert_fail@plt+0x8ac4>
   19b98:	b	19bb8 <__assert_fail@plt+0x8ad0>
   19b9c:	ldr	r0, [fp, #8]
   19ba0:	movw	r1, #0
   19ba4:	cmp	r1, r0
   19ba8:	bge	19bb8 <__assert_fail@plt+0x8ad0>
   19bac:	movw	r0, #1
   19bb0:	str	r0, [fp, #-68]	; 0xffffffbc
   19bb4:	b	19bd0 <__assert_fail@plt+0x8ae8>
   19bb8:	ldr	r0, [fp, #8]
   19bbc:	movw	r1, #0
   19bc0:	sub	r0, r1, r0
   19bc4:	mvn	r1, #0
   19bc8:	udiv	r0, r1, r0
   19bcc:	str	r0, [fp, #-68]	; 0xffffffbc
   19bd0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   19bd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19bd8:	mvn	r2, #0
   19bdc:	sub	r1, r2, r1
   19be0:	cmp	r0, r1
   19be4:	bls	19d00 <__assert_fail@plt+0x8c18>
   19be8:	b	19d14 <__assert_fail@plt+0x8c2c>
   19bec:	b	19bf0 <__assert_fail@plt+0x8b08>
   19bf0:	b	19c48 <__assert_fail@plt+0x8b60>
   19bf4:	b	19c48 <__assert_fail@plt+0x8b60>
   19bf8:	ldr	r0, [fp, #8]
   19bfc:	cmn	r0, #1
   19c00:	bne	19c48 <__assert_fail@plt+0x8b60>
   19c04:	b	19c08 <__assert_fail@plt+0x8b20>
   19c08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c0c:	add	r0, r0, #0
   19c10:	movw	r1, #0
   19c14:	cmp	r1, r0
   19c18:	blt	19d00 <__assert_fail@plt+0x8c18>
   19c1c:	b	19d14 <__assert_fail@plt+0x8c2c>
   19c20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c24:	movw	r1, #0
   19c28:	cmp	r1, r0
   19c2c:	bge	19d14 <__assert_fail@plt+0x8c2c>
   19c30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c34:	sub	r0, r0, #1
   19c38:	mvn	r1, #0
   19c3c:	cmp	r1, r0
   19c40:	blt	19d00 <__assert_fail@plt+0x8c18>
   19c44:	b	19d14 <__assert_fail@plt+0x8c2c>
   19c48:	ldr	r0, [fp, #8]
   19c4c:	movw	r1, #0
   19c50:	sdiv	r0, r1, r0
   19c54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19c58:	cmp	r0, r1
   19c5c:	blt	19d00 <__assert_fail@plt+0x8c18>
   19c60:	b	19d14 <__assert_fail@plt+0x8c2c>
   19c64:	ldr	r0, [fp, #8]
   19c68:	cmp	r0, #0
   19c6c:	bne	19c74 <__assert_fail@plt+0x8b8c>
   19c70:	b	19d14 <__assert_fail@plt+0x8c2c>
   19c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c78:	cmp	r0, #0
   19c7c:	bge	19ce8 <__assert_fail@plt+0x8c00>
   19c80:	b	19c84 <__assert_fail@plt+0x8b9c>
   19c84:	b	19ccc <__assert_fail@plt+0x8be4>
   19c88:	b	19ccc <__assert_fail@plt+0x8be4>
   19c8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c90:	cmn	r0, #1
   19c94:	bne	19ccc <__assert_fail@plt+0x8be4>
   19c98:	b	19c9c <__assert_fail@plt+0x8bb4>
   19c9c:	ldr	r0, [fp, #8]
   19ca0:	add	r0, r0, #0
   19ca4:	movw	r1, #0
   19ca8:	cmp	r1, r0
   19cac:	blt	19d00 <__assert_fail@plt+0x8c18>
   19cb0:	b	19d14 <__assert_fail@plt+0x8c2c>
   19cb4:	ldr	r0, [fp, #8]
   19cb8:	sub	r0, r0, #1
   19cbc:	mvn	r1, #0
   19cc0:	cmp	r1, r0
   19cc4:	blt	19d00 <__assert_fail@plt+0x8c18>
   19cc8:	b	19d14 <__assert_fail@plt+0x8c2c>
   19ccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19cd0:	movw	r1, #0
   19cd4:	sdiv	r0, r1, r0
   19cd8:	ldr	r1, [fp, #8]
   19cdc:	cmp	r0, r1
   19ce0:	blt	19d00 <__assert_fail@plt+0x8c18>
   19ce4:	b	19d14 <__assert_fail@plt+0x8c2c>
   19ce8:	ldr	r0, [fp, #8]
   19cec:	mvn	r1, #0
   19cf0:	udiv	r0, r1, r0
   19cf4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19cf8:	cmp	r0, r1
   19cfc:	bcs	19d14 <__assert_fail@plt+0x8c2c>
   19d00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d04:	ldr	r1, [fp, #8]
   19d08:	mul	r0, r0, r1
   19d0c:	str	r0, [fp, #-28]	; 0xffffffe4
   19d10:	b	1a218 <__assert_fail@plt+0x9130>
   19d14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d18:	ldr	r1, [fp, #8]
   19d1c:	mul	r0, r0, r1
   19d20:	str	r0, [fp, #-28]	; 0xffffffe4
   19d24:	b	1a228 <__assert_fail@plt+0x9140>
   19d28:	b	19d2c <__assert_fail@plt+0x8c44>
   19d2c:	ldr	r0, [fp, #8]
   19d30:	cmp	r0, #0
   19d34:	bge	19ec4 <__assert_fail@plt+0x8ddc>
   19d38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d3c:	cmp	r0, #0
   19d40:	bge	19e2c <__assert_fail@plt+0x8d44>
   19d44:	b	19d48 <__assert_fail@plt+0x8c60>
   19d48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d4c:	ldr	r1, [fp, #8]
   19d50:	asr	r3, r1, #31
   19d54:	mvn	r2, #0
   19d58:	mvn	ip, #-2147483648	; 0x80000000
   19d5c:	str	r0, [fp, #-72]	; 0xffffffb8
   19d60:	mov	r0, r2
   19d64:	str	r1, [fp, #-76]	; 0xffffffb4
   19d68:	mov	r1, ip
   19d6c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   19d70:	bl	1e940 <__assert_fail@plt+0xd858>
   19d74:	ldr	r2, [fp, #-72]	; 0xffffffb8
   19d78:	subs	r0, r2, r0
   19d7c:	rscs	r1, r1, r2, asr #31
   19d80:	str	r0, [fp, #-80]	; 0xffffffb0
   19d84:	str	r1, [fp, #-84]	; 0xffffffac
   19d88:	blt	19fa4 <__assert_fail@plt+0x8ebc>
   19d8c:	b	19fb8 <__assert_fail@plt+0x8ed0>
   19d90:	b	19d94 <__assert_fail@plt+0x8cac>
   19d94:	ldr	r0, [pc, #196]	; 19e60 <__assert_fail@plt+0x8d78>
   19d98:	ldr	r1, [fp, #8]
   19d9c:	cmp	r1, r0
   19da0:	blt	19db8 <__assert_fail@plt+0x8cd0>
   19da4:	b	19dd0 <__assert_fail@plt+0x8ce8>
   19da8:	ldr	r0, [fp, #8]
   19dac:	movw	r1, #0
   19db0:	cmp	r1, r0
   19db4:	bge	19dd0 <__assert_fail@plt+0x8ce8>
   19db8:	mov	r0, #0
   19dbc:	mvn	r1, #0
   19dc0:	str	r1, [fp, #-88]	; 0xffffffa8
   19dc4:	str	r0, [fp, #-92]	; 0xffffffa4
   19dc8:	b	19e04 <__assert_fail@plt+0x8d1c>
   19dcc:	svcvc	0x00ffffff
   19dd0:	ldr	r0, [fp, #8]
   19dd4:	rsb	r0, r0, #0
   19dd8:	asr	r3, r0, #31
   19ddc:	mvn	r1, #0
   19de0:	mvn	r2, #-2147483648	; 0x80000000
   19de4:	str	r0, [fp, #-96]	; 0xffffffa0
   19de8:	mov	r0, r1
   19dec:	mov	r1, r2
   19df0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19df4:	bl	1e940 <__assert_fail@plt+0xd858>
   19df8:	str	r0, [fp, #-88]	; 0xffffffa8
   19dfc:	str	r1, [fp, #-92]	; 0xffffffa4
   19e00:	b	19e04 <__assert_fail@plt+0x8d1c>
   19e04:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19e08:	ldr	r1, [fp, #-88]	; 0xffffffa8
   19e0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19e10:	mvn	r2, r2
   19e14:	subs	r1, r2, r1
   19e18:	rscs	r0, r0, r2, asr #31
   19e1c:	str	r1, [fp, #-100]	; 0xffffff9c
   19e20:	str	r0, [fp, #-104]	; 0xffffff98
   19e24:	bge	19fa4 <__assert_fail@plt+0x8ebc>
   19e28:	b	19fb8 <__assert_fail@plt+0x8ed0>
   19e2c:	ldr	r0, [fp, #8]
   19e30:	cmn	r0, #1
   19e34:	bne	19e84 <__assert_fail@plt+0x8d9c>
   19e38:	b	19e3c <__assert_fail@plt+0x8d54>
   19e3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e40:	mov	r1, #-2147483648	; 0x80000000
   19e44:	add	r1, r1, r0, asr #31
   19e48:	rsbs	r0, r0, #0
   19e4c:	rscs	r1, r1, #0
   19e50:	str	r0, [fp, #-108]	; 0xffffff94
   19e54:	str	r1, [fp, #-112]	; 0xffffff90
   19e58:	blt	19fa4 <__assert_fail@plt+0x8ebc>
   19e5c:	b	19fb8 <__assert_fail@plt+0x8ed0>
   19e60:	andhi	r0, r0, r1
   19e64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e68:	movw	r1, #0
   19e6c:	cmp	r1, r0
   19e70:	bge	19fb8 <__assert_fail@plt+0x8ed0>
   19e74:	mov	r0, #0
   19e78:	cmp	r0, #0
   19e7c:	bne	19fa4 <__assert_fail@plt+0x8ebc>
   19e80:	b	19fb8 <__assert_fail@plt+0x8ed0>
   19e84:	ldr	r0, [fp, #8]
   19e88:	asr	r3, r0, #31
   19e8c:	mov	r1, #0
   19e90:	mov	r2, #-2147483648	; 0x80000000
   19e94:	str	r0, [fp, #-116]	; 0xffffff8c
   19e98:	mov	r0, r1
   19e9c:	mov	r1, r2
   19ea0:	ldr	r2, [fp, #-116]	; 0xffffff8c
   19ea4:	bl	1e940 <__assert_fail@plt+0xd858>
   19ea8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19eac:	subs	r0, r0, r2
   19eb0:	sbcs	r1, r1, r2, asr #31
   19eb4:	str	r0, [fp, #-120]	; 0xffffff88
   19eb8:	str	r1, [fp, #-124]	; 0xffffff84
   19ebc:	blt	19fa4 <__assert_fail@plt+0x8ebc>
   19ec0:	b	19fb8 <__assert_fail@plt+0x8ed0>
   19ec4:	ldr	r0, [fp, #8]
   19ec8:	cmp	r0, #0
   19ecc:	bne	19ed4 <__assert_fail@plt+0x8dec>
   19ed0:	b	19fb8 <__assert_fail@plt+0x8ed0>
   19ed4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ed8:	cmp	r0, #0
   19edc:	bge	19f64 <__assert_fail@plt+0x8e7c>
   19ee0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ee4:	cmn	r0, #1
   19ee8:	bne	19f24 <__assert_fail@plt+0x8e3c>
   19eec:	b	19ef0 <__assert_fail@plt+0x8e08>
   19ef0:	ldr	r0, [fp, #8]
   19ef4:	mov	r1, #-2147483648	; 0x80000000
   19ef8:	add	r1, r1, r0, asr #31
   19efc:	rsbs	r0, r0, #0
   19f00:	rscs	r1, r1, #0
   19f04:	str	r0, [fp, #-128]	; 0xffffff80
   19f08:	str	r1, [fp, #-132]	; 0xffffff7c
   19f0c:	blt	19fa4 <__assert_fail@plt+0x8ebc>
   19f10:	b	19fb8 <__assert_fail@plt+0x8ed0>
   19f14:	mov	r0, #0
   19f18:	cmp	r0, #0
   19f1c:	bne	19fa4 <__assert_fail@plt+0x8ebc>
   19f20:	b	19fb8 <__assert_fail@plt+0x8ed0>
   19f24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f28:	asr	r3, r0, #31
   19f2c:	mov	r1, #0
   19f30:	mov	r2, #-2147483648	; 0x80000000
   19f34:	str	r0, [fp, #-136]	; 0xffffff78
   19f38:	mov	r0, r1
   19f3c:	mov	r1, r2
   19f40:	ldr	r2, [fp, #-136]	; 0xffffff78
   19f44:	bl	1e940 <__assert_fail@plt+0xd858>
   19f48:	ldr	r2, [fp, #8]
   19f4c:	subs	r0, r0, r2
   19f50:	sbcs	r1, r1, r2, asr #31
   19f54:	str	r0, [fp, #-140]	; 0xffffff74
   19f58:	str	r1, [fp, #-144]	; 0xffffff70
   19f5c:	blt	19fa4 <__assert_fail@plt+0x8ebc>
   19f60:	b	19fb8 <__assert_fail@plt+0x8ed0>
   19f64:	ldr	r0, [fp, #8]
   19f68:	asr	r3, r0, #31
   19f6c:	mvn	r1, #0
   19f70:	mvn	r2, #-2147483648	; 0x80000000
   19f74:	str	r0, [fp, #-148]	; 0xffffff6c
   19f78:	mov	r0, r1
   19f7c:	mov	r1, r2
   19f80:	ldr	r2, [fp, #-148]	; 0xffffff6c
   19f84:	bl	1e940 <__assert_fail@plt+0xd858>
   19f88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19f8c:	subs	r0, r0, r2
   19f90:	sbcs	r1, r1, r2, asr #31
   19f94:	str	r0, [fp, #-152]	; 0xffffff68
   19f98:	str	r1, [fp, #-156]	; 0xffffff64
   19f9c:	bge	19fb8 <__assert_fail@plt+0x8ed0>
   19fa0:	b	19fa4 <__assert_fail@plt+0x8ebc>
   19fa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fa8:	ldr	r1, [fp, #8]
   19fac:	mul	r0, r0, r1
   19fb0:	str	r0, [fp, #-28]	; 0xffffffe4
   19fb4:	b	1a218 <__assert_fail@plt+0x9130>
   19fb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fbc:	ldr	r1, [fp, #8]
   19fc0:	mul	r0, r0, r1
   19fc4:	str	r0, [fp, #-28]	; 0xffffffe4
   19fc8:	b	1a228 <__assert_fail@plt+0x9140>
   19fcc:	ldr	r0, [fp, #8]
   19fd0:	cmp	r0, #0
   19fd4:	bge	1a134 <__assert_fail@plt+0x904c>
   19fd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fdc:	cmp	r0, #0
   19fe0:	bge	1a0bc <__assert_fail@plt+0x8fd4>
   19fe4:	b	1a02c <__assert_fail@plt+0x8f44>
   19fe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fec:	ldr	r1, [fp, #8]
   19ff0:	asr	r3, r1, #31
   19ff4:	mvn	r2, #0
   19ff8:	str	r0, [fp, #-160]	; 0xffffff60
   19ffc:	mov	r0, r2
   1a000:	str	r1, [fp, #-164]	; 0xffffff5c
   1a004:	mov	r1, r2
   1a008:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1a00c:	bl	1ea14 <__assert_fail@plt+0xd92c>
   1a010:	ldr	r2, [fp, #-160]	; 0xffffff60
   1a014:	subs	r0, r2, r0
   1a018:	rscs	r1, r1, r2, asr #31
   1a01c:	str	r0, [fp, #-168]	; 0xffffff58
   1a020:	str	r1, [fp, #-172]	; 0xffffff54
   1a024:	bcc	1a1f0 <__assert_fail@plt+0x9108>
   1a028:	b	1a204 <__assert_fail@plt+0x911c>
   1a02c:	b	1a030 <__assert_fail@plt+0x8f48>
   1a030:	ldr	r0, [pc, #-472]	; 19e60 <__assert_fail@plt+0x8d78>
   1a034:	ldr	r1, [fp, #8]
   1a038:	cmp	r1, r0
   1a03c:	blt	1a054 <__assert_fail@plt+0x8f6c>
   1a040:	b	1a068 <__assert_fail@plt+0x8f80>
   1a044:	ldr	r0, [fp, #8]
   1a048:	movw	r1, #0
   1a04c:	cmp	r1, r0
   1a050:	bge	1a068 <__assert_fail@plt+0x8f80>
   1a054:	mov	r0, #1
   1a058:	mvn	r1, #0
   1a05c:	str	r1, [fp, #-176]	; 0xffffff50
   1a060:	str	r0, [fp, #-180]	; 0xffffff4c
   1a064:	b	1a094 <__assert_fail@plt+0x8fac>
   1a068:	ldr	r0, [fp, #8]
   1a06c:	rsb	r0, r0, #0
   1a070:	asr	r3, r0, #31
   1a074:	mvn	r1, #0
   1a078:	str	r0, [fp, #-184]	; 0xffffff48
   1a07c:	mov	r0, r1
   1a080:	ldr	r2, [fp, #-184]	; 0xffffff48
   1a084:	bl	1ea14 <__assert_fail@plt+0xd92c>
   1a088:	str	r0, [fp, #-176]	; 0xffffff50
   1a08c:	str	r1, [fp, #-180]	; 0xffffff4c
   1a090:	b	1a094 <__assert_fail@plt+0x8fac>
   1a094:	ldr	r0, [fp, #-180]	; 0xffffff4c
   1a098:	ldr	r1, [fp, #-176]	; 0xffffff50
   1a09c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a0a0:	mvn	r2, r2
   1a0a4:	subs	r1, r2, r1
   1a0a8:	rscs	r0, r0, r2, asr #31
   1a0ac:	str	r1, [sp, #188]	; 0xbc
   1a0b0:	str	r0, [sp, #184]	; 0xb8
   1a0b4:	bcs	1a1f0 <__assert_fail@plt+0x9108>
   1a0b8:	b	1a204 <__assert_fail@plt+0x911c>
   1a0bc:	b	1a0c0 <__assert_fail@plt+0x8fd8>
   1a0c0:	b	1a118 <__assert_fail@plt+0x9030>
   1a0c4:	b	1a118 <__assert_fail@plt+0x9030>
   1a0c8:	ldr	r0, [fp, #8]
   1a0cc:	cmn	r0, #1
   1a0d0:	bne	1a118 <__assert_fail@plt+0x9030>
   1a0d4:	b	1a0d8 <__assert_fail@plt+0x8ff0>
   1a0d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0dc:	add	r0, r0, #0
   1a0e0:	movw	r1, #0
   1a0e4:	cmp	r1, r0
   1a0e8:	blt	1a1f0 <__assert_fail@plt+0x9108>
   1a0ec:	b	1a204 <__assert_fail@plt+0x911c>
   1a0f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0f4:	movw	r1, #0
   1a0f8:	cmp	r1, r0
   1a0fc:	bge	1a204 <__assert_fail@plt+0x911c>
   1a100:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a104:	sub	r0, r0, #1
   1a108:	mvn	r1, #0
   1a10c:	cmp	r1, r0
   1a110:	blt	1a1f0 <__assert_fail@plt+0x9108>
   1a114:	b	1a204 <__assert_fail@plt+0x911c>
   1a118:	ldr	r0, [fp, #8]
   1a11c:	movw	r1, #0
   1a120:	sdiv	r0, r1, r0
   1a124:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a128:	cmp	r0, r1
   1a12c:	blt	1a1f0 <__assert_fail@plt+0x9108>
   1a130:	b	1a204 <__assert_fail@plt+0x911c>
   1a134:	ldr	r0, [fp, #8]
   1a138:	cmp	r0, #0
   1a13c:	bne	1a144 <__assert_fail@plt+0x905c>
   1a140:	b	1a204 <__assert_fail@plt+0x911c>
   1a144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a148:	cmp	r0, #0
   1a14c:	bge	1a1b8 <__assert_fail@plt+0x90d0>
   1a150:	b	1a154 <__assert_fail@plt+0x906c>
   1a154:	b	1a19c <__assert_fail@plt+0x90b4>
   1a158:	b	1a19c <__assert_fail@plt+0x90b4>
   1a15c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a160:	cmn	r0, #1
   1a164:	bne	1a19c <__assert_fail@plt+0x90b4>
   1a168:	b	1a16c <__assert_fail@plt+0x9084>
   1a16c:	ldr	r0, [fp, #8]
   1a170:	add	r0, r0, #0
   1a174:	movw	r1, #0
   1a178:	cmp	r1, r0
   1a17c:	blt	1a1f0 <__assert_fail@plt+0x9108>
   1a180:	b	1a204 <__assert_fail@plt+0x911c>
   1a184:	ldr	r0, [fp, #8]
   1a188:	sub	r0, r0, #1
   1a18c:	mvn	r1, #0
   1a190:	cmp	r1, r0
   1a194:	blt	1a1f0 <__assert_fail@plt+0x9108>
   1a198:	b	1a204 <__assert_fail@plt+0x911c>
   1a19c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1a0:	movw	r1, #0
   1a1a4:	sdiv	r0, r1, r0
   1a1a8:	ldr	r1, [fp, #8]
   1a1ac:	cmp	r0, r1
   1a1b0:	blt	1a1f0 <__assert_fail@plt+0x9108>
   1a1b4:	b	1a204 <__assert_fail@plt+0x911c>
   1a1b8:	ldr	r0, [fp, #8]
   1a1bc:	asr	r3, r0, #31
   1a1c0:	mvn	r1, #0
   1a1c4:	str	r0, [sp, #180]	; 0xb4
   1a1c8:	mov	r0, r1
   1a1cc:	ldr	r2, [sp, #180]	; 0xb4
   1a1d0:	bl	1ea14 <__assert_fail@plt+0xd92c>
   1a1d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a1d8:	subs	r0, r0, r2
   1a1dc:	sbcs	r1, r1, r2, asr #31
   1a1e0:	str	r0, [sp, #176]	; 0xb0
   1a1e4:	str	r1, [sp, #172]	; 0xac
   1a1e8:	bcs	1a204 <__assert_fail@plt+0x911c>
   1a1ec:	b	1a1f0 <__assert_fail@plt+0x9108>
   1a1f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1f4:	ldr	r1, [fp, #8]
   1a1f8:	mul	r0, r0, r1
   1a1fc:	str	r0, [fp, #-28]	; 0xffffffe4
   1a200:	b	1a218 <__assert_fail@plt+0x9130>
   1a204:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a208:	ldr	r1, [fp, #8]
   1a20c:	mul	r0, r0, r1
   1a210:	str	r0, [fp, #-28]	; 0xffffffe4
   1a214:	b	1a228 <__assert_fail@plt+0x9140>
   1a218:	ldr	r0, [pc, #-1108]	; 19dcc <__assert_fail@plt+0x8ce4>
   1a21c:	str	r0, [sp, #168]	; 0xa8
   1a220:	b	1a248 <__assert_fail@plt+0x9160>
   1a224:			; <UNDEFINED> instruction: 0xffff8000
   1a228:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a22c:	cmp	r0, #64	; 0x40
   1a230:	movw	r0, #0
   1a234:	movlt	r0, #1
   1a238:	tst	r0, #1
   1a23c:	movw	r0, #64	; 0x40
   1a240:	moveq	r0, #0
   1a244:	str	r0, [sp, #168]	; 0xa8
   1a248:	ldr	r0, [sp, #168]	; 0xa8
   1a24c:	str	r0, [fp, #-32]	; 0xffffffe0
   1a250:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a254:	cmp	r0, #0
   1a258:	beq	1a288 <__assert_fail@plt+0x91a0>
   1a25c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a260:	ldr	r1, [fp, #8]
   1a264:	sdiv	r0, r0, r1
   1a268:	str	r0, [fp, #-24]	; 0xffffffe8
   1a26c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a270:	mov	r1, r0
   1a274:	ldr	r2, [fp, #8]
   1a278:	sdiv	r3, r0, r2
   1a27c:	mls	r0, r3, r2, r0
   1a280:	sub	r0, r1, r0
   1a284:	str	r0, [fp, #-28]	; 0xffffffe4
   1a288:	ldr	r0, [fp, #-4]
   1a28c:	movw	r1, #0
   1a290:	cmp	r0, r1
   1a294:	bne	1a2a4 <__assert_fail@plt+0x91bc>
   1a298:	ldr	r0, [fp, #-8]
   1a29c:	movw	r1, #0
   1a2a0:	str	r1, [r0]
   1a2a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a2ac:	sub	r0, r0, r1
   1a2b0:	ldr	r1, [fp, #-12]
   1a2b4:	cmp	r0, r1
   1a2b8:	bge	1b6f0 <__assert_fail@plt+0xa608>
   1a2bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a2c0:	ldr	r1, [fp, #-12]
   1a2c4:	add	r1, r0, r1
   1a2c8:	mov	r2, #1
   1a2cc:	cmp	r1, r0
   1a2d0:	movwvc	r2, #0
   1a2d4:	str	r1, [fp, #-24]	; 0xffffffe8
   1a2d8:	tst	r2, #1
   1a2dc:	bne	1b6ec <__assert_fail@plt+0xa604>
   1a2e0:	ldr	r0, [fp, #-16]
   1a2e4:	movw	r1, #0
   1a2e8:	cmp	r1, r0
   1a2ec:	bgt	1a300 <__assert_fail@plt+0x9218>
   1a2f0:	ldr	r0, [fp, #-16]
   1a2f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a2f8:	cmp	r0, r1
   1a2fc:	blt	1b6ec <__assert_fail@plt+0xa604>
   1a300:	b	1a6dc <__assert_fail@plt+0x95f4>
   1a304:	b	1a308 <__assert_fail@plt+0x9220>
   1a308:	ldr	r0, [fp, #8]
   1a30c:	cmp	r0, #0
   1a310:	bge	1a424 <__assert_fail@plt+0x933c>
   1a314:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a318:	cmp	r0, #0
   1a31c:	bge	1a3a8 <__assert_fail@plt+0x92c0>
   1a320:	b	1a324 <__assert_fail@plt+0x923c>
   1a324:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a328:	ldr	r1, [fp, #8]
   1a32c:	movw	r2, #127	; 0x7f
   1a330:	sdiv	r1, r2, r1
   1a334:	cmp	r0, r1
   1a338:	blt	1a4c4 <__assert_fail@plt+0x93dc>
   1a33c:	b	1a4dc <__assert_fail@plt+0x93f4>
   1a340:	b	1a344 <__assert_fail@plt+0x925c>
   1a344:	ldr	r0, [pc, #-1260]	; 19e60 <__assert_fail@plt+0x8d78>
   1a348:	ldr	r1, [fp, #8]
   1a34c:	cmp	r1, r0
   1a350:	blt	1a368 <__assert_fail@plt+0x9280>
   1a354:	b	1a374 <__assert_fail@plt+0x928c>
   1a358:	ldr	r0, [fp, #8]
   1a35c:	movw	r1, #0
   1a360:	cmp	r1, r0
   1a364:	bge	1a374 <__assert_fail@plt+0x928c>
   1a368:	movw	r0, #0
   1a36c:	str	r0, [sp, #164]	; 0xa4
   1a370:	b	1a38c <__assert_fail@plt+0x92a4>
   1a374:	ldr	r0, [fp, #8]
   1a378:	movw	r1, #0
   1a37c:	sub	r0, r1, r0
   1a380:	movw	r1, #127	; 0x7f
   1a384:	sdiv	r0, r1, r0
   1a388:	str	r0, [sp, #164]	; 0xa4
   1a38c:	ldr	r0, [sp, #164]	; 0xa4
   1a390:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a394:	mvn	r2, #0
   1a398:	sub	r1, r2, r1
   1a39c:	cmp	r0, r1
   1a3a0:	ble	1a4c4 <__assert_fail@plt+0x93dc>
   1a3a4:	b	1a4dc <__assert_fail@plt+0x93f4>
   1a3a8:	b	1a3ac <__assert_fail@plt+0x92c4>
   1a3ac:	b	1a408 <__assert_fail@plt+0x9320>
   1a3b0:	b	1a408 <__assert_fail@plt+0x9320>
   1a3b4:	ldr	r0, [fp, #8]
   1a3b8:	cmn	r0, #1
   1a3bc:	bne	1a408 <__assert_fail@plt+0x9320>
   1a3c0:	b	1a3c4 <__assert_fail@plt+0x92dc>
   1a3c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3c8:	mvn	r1, #127	; 0x7f
   1a3cc:	add	r0, r0, r1
   1a3d0:	movw	r1, #0
   1a3d4:	cmp	r1, r0
   1a3d8:	blt	1a4c4 <__assert_fail@plt+0x93dc>
   1a3dc:	b	1a4dc <__assert_fail@plt+0x93f4>
   1a3e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3e4:	movw	r1, #0
   1a3e8:	cmp	r1, r0
   1a3ec:	bge	1a4dc <__assert_fail@plt+0x93f4>
   1a3f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3f4:	sub	r0, r0, #1
   1a3f8:	movw	r1, #127	; 0x7f
   1a3fc:	cmp	r1, r0
   1a400:	blt	1a4c4 <__assert_fail@plt+0x93dc>
   1a404:	b	1a4dc <__assert_fail@plt+0x93f4>
   1a408:	ldr	r0, [fp, #8]
   1a40c:	mvn	r1, #127	; 0x7f
   1a410:	sdiv	r0, r1, r0
   1a414:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a418:	cmp	r0, r1
   1a41c:	blt	1a4c4 <__assert_fail@plt+0x93dc>
   1a420:	b	1a4dc <__assert_fail@plt+0x93f4>
   1a424:	ldr	r0, [fp, #8]
   1a428:	cmp	r0, #0
   1a42c:	bne	1a434 <__assert_fail@plt+0x934c>
   1a430:	b	1a4dc <__assert_fail@plt+0x93f4>
   1a434:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a438:	cmp	r0, #0
   1a43c:	bge	1a4ac <__assert_fail@plt+0x93c4>
   1a440:	b	1a444 <__assert_fail@plt+0x935c>
   1a444:	b	1a490 <__assert_fail@plt+0x93a8>
   1a448:	b	1a490 <__assert_fail@plt+0x93a8>
   1a44c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a450:	cmn	r0, #1
   1a454:	bne	1a490 <__assert_fail@plt+0x93a8>
   1a458:	b	1a45c <__assert_fail@plt+0x9374>
   1a45c:	ldr	r0, [fp, #8]
   1a460:	mvn	r1, #127	; 0x7f
   1a464:	add	r0, r0, r1
   1a468:	movw	r1, #0
   1a46c:	cmp	r1, r0
   1a470:	blt	1a4c4 <__assert_fail@plt+0x93dc>
   1a474:	b	1a4dc <__assert_fail@plt+0x93f4>
   1a478:	ldr	r0, [fp, #8]
   1a47c:	sub	r0, r0, #1
   1a480:	movw	r1, #127	; 0x7f
   1a484:	cmp	r1, r0
   1a488:	blt	1a4c4 <__assert_fail@plt+0x93dc>
   1a48c:	b	1a4dc <__assert_fail@plt+0x93f4>
   1a490:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a494:	mvn	r1, #127	; 0x7f
   1a498:	sdiv	r0, r1, r0
   1a49c:	ldr	r1, [fp, #8]
   1a4a0:	cmp	r0, r1
   1a4a4:	blt	1a4c4 <__assert_fail@plt+0x93dc>
   1a4a8:	b	1a4dc <__assert_fail@plt+0x93f4>
   1a4ac:	ldr	r0, [fp, #8]
   1a4b0:	movw	r1, #127	; 0x7f
   1a4b4:	sdiv	r0, r1, r0
   1a4b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a4bc:	cmp	r0, r1
   1a4c0:	bge	1a4dc <__assert_fail@plt+0x93f4>
   1a4c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4c8:	ldr	r1, [fp, #8]
   1a4cc:	mul	r0, r0, r1
   1a4d0:	sxtb	r0, r0
   1a4d4:	str	r0, [fp, #-28]	; 0xffffffe4
   1a4d8:	b	1b6ec <__assert_fail@plt+0xa604>
   1a4dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4e0:	ldr	r1, [fp, #8]
   1a4e4:	mul	r0, r0, r1
   1a4e8:	sxtb	r0, r0
   1a4ec:	str	r0, [fp, #-28]	; 0xffffffe4
   1a4f0:	b	1b6f0 <__assert_fail@plt+0xa608>
   1a4f4:	ldr	r0, [fp, #8]
   1a4f8:	cmp	r0, #0
   1a4fc:	bge	1a60c <__assert_fail@plt+0x9524>
   1a500:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a504:	cmp	r0, #0
   1a508:	bge	1a594 <__assert_fail@plt+0x94ac>
   1a50c:	b	1a510 <__assert_fail@plt+0x9428>
   1a510:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a514:	ldr	r1, [fp, #8]
   1a518:	movw	r2, #255	; 0xff
   1a51c:	sdiv	r1, r2, r1
   1a520:	cmp	r0, r1
   1a524:	blt	1a6a8 <__assert_fail@plt+0x95c0>
   1a528:	b	1a6c4 <__assert_fail@plt+0x95dc>
   1a52c:	b	1a530 <__assert_fail@plt+0x9448>
   1a530:	ldr	r0, [pc, #-1752]	; 19e60 <__assert_fail@plt+0x8d78>
   1a534:	ldr	r1, [fp, #8]
   1a538:	cmp	r1, r0
   1a53c:	blt	1a554 <__assert_fail@plt+0x946c>
   1a540:	b	1a560 <__assert_fail@plt+0x9478>
   1a544:	ldr	r0, [fp, #8]
   1a548:	movw	r1, #0
   1a54c:	cmp	r1, r0
   1a550:	bge	1a560 <__assert_fail@plt+0x9478>
   1a554:	movw	r0, #0
   1a558:	str	r0, [sp, #160]	; 0xa0
   1a55c:	b	1a578 <__assert_fail@plt+0x9490>
   1a560:	ldr	r0, [fp, #8]
   1a564:	movw	r1, #0
   1a568:	sub	r0, r1, r0
   1a56c:	movw	r1, #255	; 0xff
   1a570:	sdiv	r0, r1, r0
   1a574:	str	r0, [sp, #160]	; 0xa0
   1a578:	ldr	r0, [sp, #160]	; 0xa0
   1a57c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a580:	mvn	r2, #0
   1a584:	sub	r1, r2, r1
   1a588:	cmp	r0, r1
   1a58c:	ble	1a6a8 <__assert_fail@plt+0x95c0>
   1a590:	b	1a6c4 <__assert_fail@plt+0x95dc>
   1a594:	b	1a598 <__assert_fail@plt+0x94b0>
   1a598:	b	1a5f0 <__assert_fail@plt+0x9508>
   1a59c:	b	1a5f0 <__assert_fail@plt+0x9508>
   1a5a0:	ldr	r0, [fp, #8]
   1a5a4:	cmn	r0, #1
   1a5a8:	bne	1a5f0 <__assert_fail@plt+0x9508>
   1a5ac:	b	1a5b0 <__assert_fail@plt+0x94c8>
   1a5b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a5b4:	add	r0, r0, #0
   1a5b8:	movw	r1, #0
   1a5bc:	cmp	r1, r0
   1a5c0:	blt	1a6a8 <__assert_fail@plt+0x95c0>
   1a5c4:	b	1a6c4 <__assert_fail@plt+0x95dc>
   1a5c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a5cc:	movw	r1, #0
   1a5d0:	cmp	r1, r0
   1a5d4:	bge	1a6c4 <__assert_fail@plt+0x95dc>
   1a5d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a5dc:	sub	r0, r0, #1
   1a5e0:	mvn	r1, #0
   1a5e4:	cmp	r1, r0
   1a5e8:	blt	1a6a8 <__assert_fail@plt+0x95c0>
   1a5ec:	b	1a6c4 <__assert_fail@plt+0x95dc>
   1a5f0:	ldr	r0, [fp, #8]
   1a5f4:	movw	r1, #0
   1a5f8:	sdiv	r0, r1, r0
   1a5fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a600:	cmp	r0, r1
   1a604:	blt	1a6a8 <__assert_fail@plt+0x95c0>
   1a608:	b	1a6c4 <__assert_fail@plt+0x95dc>
   1a60c:	ldr	r0, [fp, #8]
   1a610:	cmp	r0, #0
   1a614:	bne	1a61c <__assert_fail@plt+0x9534>
   1a618:	b	1a6c4 <__assert_fail@plt+0x95dc>
   1a61c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a620:	cmp	r0, #0
   1a624:	bge	1a690 <__assert_fail@plt+0x95a8>
   1a628:	b	1a62c <__assert_fail@plt+0x9544>
   1a62c:	b	1a674 <__assert_fail@plt+0x958c>
   1a630:	b	1a674 <__assert_fail@plt+0x958c>
   1a634:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a638:	cmn	r0, #1
   1a63c:	bne	1a674 <__assert_fail@plt+0x958c>
   1a640:	b	1a644 <__assert_fail@plt+0x955c>
   1a644:	ldr	r0, [fp, #8]
   1a648:	add	r0, r0, #0
   1a64c:	movw	r1, #0
   1a650:	cmp	r1, r0
   1a654:	blt	1a6a8 <__assert_fail@plt+0x95c0>
   1a658:	b	1a6c4 <__assert_fail@plt+0x95dc>
   1a65c:	ldr	r0, [fp, #8]
   1a660:	sub	r0, r0, #1
   1a664:	mvn	r1, #0
   1a668:	cmp	r1, r0
   1a66c:	blt	1a6a8 <__assert_fail@plt+0x95c0>
   1a670:	b	1a6c4 <__assert_fail@plt+0x95dc>
   1a674:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a678:	movw	r1, #0
   1a67c:	sdiv	r0, r1, r0
   1a680:	ldr	r1, [fp, #8]
   1a684:	cmp	r0, r1
   1a688:	blt	1a6a8 <__assert_fail@plt+0x95c0>
   1a68c:	b	1a6c4 <__assert_fail@plt+0x95dc>
   1a690:	ldr	r0, [fp, #8]
   1a694:	movw	r1, #255	; 0xff
   1a698:	sdiv	r0, r1, r0
   1a69c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a6a0:	cmp	r0, r1
   1a6a4:	bge	1a6c4 <__assert_fail@plt+0x95dc>
   1a6a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6ac:	ldr	r1, [fp, #8]
   1a6b0:	mul	r0, r0, r1
   1a6b4:	and	r0, r0, #255	; 0xff
   1a6b8:	str	r0, [fp, #-28]	; 0xffffffe4
   1a6bc:	b	1b6ec <__assert_fail@plt+0xa604>
   1a6c0:	andhi	r0, r0, r0
   1a6c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6c8:	ldr	r1, [fp, #8]
   1a6cc:	mul	r0, r0, r1
   1a6d0:	and	r0, r0, #255	; 0xff
   1a6d4:	str	r0, [fp, #-28]	; 0xffffffe4
   1a6d8:	b	1b6f0 <__assert_fail@plt+0xa608>
   1a6dc:	b	1aab4 <__assert_fail@plt+0x99cc>
   1a6e0:	b	1a6e4 <__assert_fail@plt+0x95fc>
   1a6e4:	ldr	r0, [fp, #8]
   1a6e8:	cmp	r0, #0
   1a6ec:	bge	1a800 <__assert_fail@plt+0x9718>
   1a6f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6f4:	cmp	r0, #0
   1a6f8:	bge	1a784 <__assert_fail@plt+0x969c>
   1a6fc:	b	1a700 <__assert_fail@plt+0x9618>
   1a700:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a704:	ldr	r1, [fp, #8]
   1a708:	movw	r2, #32767	; 0x7fff
   1a70c:	sdiv	r1, r2, r1
   1a710:	cmp	r0, r1
   1a714:	blt	1a8a0 <__assert_fail@plt+0x97b8>
   1a718:	b	1a8b8 <__assert_fail@plt+0x97d0>
   1a71c:	b	1a720 <__assert_fail@plt+0x9638>
   1a720:	ldr	r0, [pc, #4084]	; 1b71c <__assert_fail@plt+0xa634>
   1a724:	ldr	r1, [fp, #8]
   1a728:	cmp	r1, r0
   1a72c:	blt	1a744 <__assert_fail@plt+0x965c>
   1a730:	b	1a750 <__assert_fail@plt+0x9668>
   1a734:	ldr	r0, [fp, #8]
   1a738:	movw	r1, #0
   1a73c:	cmp	r1, r0
   1a740:	bge	1a750 <__assert_fail@plt+0x9668>
   1a744:	movw	r0, #0
   1a748:	str	r0, [sp, #156]	; 0x9c
   1a74c:	b	1a768 <__assert_fail@plt+0x9680>
   1a750:	ldr	r0, [fp, #8]
   1a754:	movw	r1, #0
   1a758:	sub	r0, r1, r0
   1a75c:	movw	r1, #32767	; 0x7fff
   1a760:	sdiv	r0, r1, r0
   1a764:	str	r0, [sp, #156]	; 0x9c
   1a768:	ldr	r0, [sp, #156]	; 0x9c
   1a76c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a770:	mvn	r2, #0
   1a774:	sub	r1, r2, r1
   1a778:	cmp	r0, r1
   1a77c:	ble	1a8a0 <__assert_fail@plt+0x97b8>
   1a780:	b	1a8b8 <__assert_fail@plt+0x97d0>
   1a784:	b	1a788 <__assert_fail@plt+0x96a0>
   1a788:	b	1a7e4 <__assert_fail@plt+0x96fc>
   1a78c:	b	1a7e4 <__assert_fail@plt+0x96fc>
   1a790:	ldr	r0, [fp, #8]
   1a794:	cmn	r0, #1
   1a798:	bne	1a7e4 <__assert_fail@plt+0x96fc>
   1a79c:	b	1a7a0 <__assert_fail@plt+0x96b8>
   1a7a0:	ldr	r0, [pc, #3964]	; 1b724 <__assert_fail@plt+0xa63c>
   1a7a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a7a8:	add	r0, r1, r0
   1a7ac:	movw	r1, #0
   1a7b0:	cmp	r1, r0
   1a7b4:	blt	1a8a0 <__assert_fail@plt+0x97b8>
   1a7b8:	b	1a8b8 <__assert_fail@plt+0x97d0>
   1a7bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a7c0:	movw	r1, #0
   1a7c4:	cmp	r1, r0
   1a7c8:	bge	1a8b8 <__assert_fail@plt+0x97d0>
   1a7cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a7d0:	sub	r0, r0, #1
   1a7d4:	movw	r1, #32767	; 0x7fff
   1a7d8:	cmp	r1, r0
   1a7dc:	blt	1a8a0 <__assert_fail@plt+0x97b8>
   1a7e0:	b	1a8b8 <__assert_fail@plt+0x97d0>
   1a7e4:	ldr	r0, [pc, #3896]	; 1b724 <__assert_fail@plt+0xa63c>
   1a7e8:	ldr	r1, [fp, #8]
   1a7ec:	sdiv	r0, r0, r1
   1a7f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a7f4:	cmp	r0, r1
   1a7f8:	blt	1a8a0 <__assert_fail@plt+0x97b8>
   1a7fc:	b	1a8b8 <__assert_fail@plt+0x97d0>
   1a800:	ldr	r0, [fp, #8]
   1a804:	cmp	r0, #0
   1a808:	bne	1a810 <__assert_fail@plt+0x9728>
   1a80c:	b	1a8b8 <__assert_fail@plt+0x97d0>
   1a810:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a814:	cmp	r0, #0
   1a818:	bge	1a888 <__assert_fail@plt+0x97a0>
   1a81c:	b	1a820 <__assert_fail@plt+0x9738>
   1a820:	b	1a86c <__assert_fail@plt+0x9784>
   1a824:	b	1a86c <__assert_fail@plt+0x9784>
   1a828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a82c:	cmn	r0, #1
   1a830:	bne	1a86c <__assert_fail@plt+0x9784>
   1a834:	b	1a838 <__assert_fail@plt+0x9750>
   1a838:	ldr	r0, [pc, #3812]	; 1b724 <__assert_fail@plt+0xa63c>
   1a83c:	ldr	r1, [fp, #8]
   1a840:	add	r0, r1, r0
   1a844:	movw	r1, #0
   1a848:	cmp	r1, r0
   1a84c:	blt	1a8a0 <__assert_fail@plt+0x97b8>
   1a850:	b	1a8b8 <__assert_fail@plt+0x97d0>
   1a854:	ldr	r0, [fp, #8]
   1a858:	sub	r0, r0, #1
   1a85c:	movw	r1, #32767	; 0x7fff
   1a860:	cmp	r1, r0
   1a864:	blt	1a8a0 <__assert_fail@plt+0x97b8>
   1a868:	b	1a8b8 <__assert_fail@plt+0x97d0>
   1a86c:	ldr	r0, [pc, #3760]	; 1b724 <__assert_fail@plt+0xa63c>
   1a870:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a874:	sdiv	r0, r0, r1
   1a878:	ldr	r1, [fp, #8]
   1a87c:	cmp	r0, r1
   1a880:	blt	1a8a0 <__assert_fail@plt+0x97b8>
   1a884:	b	1a8b8 <__assert_fail@plt+0x97d0>
   1a888:	ldr	r0, [fp, #8]
   1a88c:	movw	r1, #32767	; 0x7fff
   1a890:	sdiv	r0, r1, r0
   1a894:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a898:	cmp	r0, r1
   1a89c:	bge	1a8b8 <__assert_fail@plt+0x97d0>
   1a8a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8a4:	ldr	r1, [fp, #8]
   1a8a8:	mul	r0, r0, r1
   1a8ac:	sxth	r0, r0
   1a8b0:	str	r0, [fp, #-28]	; 0xffffffe4
   1a8b4:	b	1b6ec <__assert_fail@plt+0xa604>
   1a8b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8bc:	ldr	r1, [fp, #8]
   1a8c0:	mul	r0, r0, r1
   1a8c4:	sxth	r0, r0
   1a8c8:	str	r0, [fp, #-28]	; 0xffffffe4
   1a8cc:	b	1b6f0 <__assert_fail@plt+0xa608>
   1a8d0:	ldr	r0, [fp, #8]
   1a8d4:	cmp	r0, #0
   1a8d8:	bge	1a9e8 <__assert_fail@plt+0x9900>
   1a8dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8e0:	cmp	r0, #0
   1a8e4:	bge	1a970 <__assert_fail@plt+0x9888>
   1a8e8:	b	1a8ec <__assert_fail@plt+0x9804>
   1a8ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8f0:	ldr	r1, [fp, #8]
   1a8f4:	movw	r2, #65535	; 0xffff
   1a8f8:	sdiv	r1, r2, r1
   1a8fc:	cmp	r0, r1
   1a900:	blt	1aa84 <__assert_fail@plt+0x999c>
   1a904:	b	1aa9c <__assert_fail@plt+0x99b4>
   1a908:	b	1a90c <__assert_fail@plt+0x9824>
   1a90c:	ldr	r0, [pc, #3592]	; 1b71c <__assert_fail@plt+0xa634>
   1a910:	ldr	r1, [fp, #8]
   1a914:	cmp	r1, r0
   1a918:	blt	1a930 <__assert_fail@plt+0x9848>
   1a91c:	b	1a93c <__assert_fail@plt+0x9854>
   1a920:	ldr	r0, [fp, #8]
   1a924:	movw	r1, #0
   1a928:	cmp	r1, r0
   1a92c:	bge	1a93c <__assert_fail@plt+0x9854>
   1a930:	movw	r0, #0
   1a934:	str	r0, [sp, #152]	; 0x98
   1a938:	b	1a954 <__assert_fail@plt+0x986c>
   1a93c:	ldr	r0, [fp, #8]
   1a940:	movw	r1, #0
   1a944:	sub	r0, r1, r0
   1a948:	movw	r1, #65535	; 0xffff
   1a94c:	sdiv	r0, r1, r0
   1a950:	str	r0, [sp, #152]	; 0x98
   1a954:	ldr	r0, [sp, #152]	; 0x98
   1a958:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a95c:	mvn	r2, #0
   1a960:	sub	r1, r2, r1
   1a964:	cmp	r0, r1
   1a968:	ble	1aa84 <__assert_fail@plt+0x999c>
   1a96c:	b	1aa9c <__assert_fail@plt+0x99b4>
   1a970:	b	1a974 <__assert_fail@plt+0x988c>
   1a974:	b	1a9cc <__assert_fail@plt+0x98e4>
   1a978:	b	1a9cc <__assert_fail@plt+0x98e4>
   1a97c:	ldr	r0, [fp, #8]
   1a980:	cmn	r0, #1
   1a984:	bne	1a9cc <__assert_fail@plt+0x98e4>
   1a988:	b	1a98c <__assert_fail@plt+0x98a4>
   1a98c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a990:	add	r0, r0, #0
   1a994:	movw	r1, #0
   1a998:	cmp	r1, r0
   1a99c:	blt	1aa84 <__assert_fail@plt+0x999c>
   1a9a0:	b	1aa9c <__assert_fail@plt+0x99b4>
   1a9a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9a8:	movw	r1, #0
   1a9ac:	cmp	r1, r0
   1a9b0:	bge	1aa9c <__assert_fail@plt+0x99b4>
   1a9b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9b8:	sub	r0, r0, #1
   1a9bc:	mvn	r1, #0
   1a9c0:	cmp	r1, r0
   1a9c4:	blt	1aa84 <__assert_fail@plt+0x999c>
   1a9c8:	b	1aa9c <__assert_fail@plt+0x99b4>
   1a9cc:	ldr	r0, [fp, #8]
   1a9d0:	movw	r1, #0
   1a9d4:	sdiv	r0, r1, r0
   1a9d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a9dc:	cmp	r0, r1
   1a9e0:	blt	1aa84 <__assert_fail@plt+0x999c>
   1a9e4:	b	1aa9c <__assert_fail@plt+0x99b4>
   1a9e8:	ldr	r0, [fp, #8]
   1a9ec:	cmp	r0, #0
   1a9f0:	bne	1a9f8 <__assert_fail@plt+0x9910>
   1a9f4:	b	1aa9c <__assert_fail@plt+0x99b4>
   1a9f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9fc:	cmp	r0, #0
   1aa00:	bge	1aa6c <__assert_fail@plt+0x9984>
   1aa04:	b	1aa08 <__assert_fail@plt+0x9920>
   1aa08:	b	1aa50 <__assert_fail@plt+0x9968>
   1aa0c:	b	1aa50 <__assert_fail@plt+0x9968>
   1aa10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa14:	cmn	r0, #1
   1aa18:	bne	1aa50 <__assert_fail@plt+0x9968>
   1aa1c:	b	1aa20 <__assert_fail@plt+0x9938>
   1aa20:	ldr	r0, [fp, #8]
   1aa24:	add	r0, r0, #0
   1aa28:	movw	r1, #0
   1aa2c:	cmp	r1, r0
   1aa30:	blt	1aa84 <__assert_fail@plt+0x999c>
   1aa34:	b	1aa9c <__assert_fail@plt+0x99b4>
   1aa38:	ldr	r0, [fp, #8]
   1aa3c:	sub	r0, r0, #1
   1aa40:	mvn	r1, #0
   1aa44:	cmp	r1, r0
   1aa48:	blt	1aa84 <__assert_fail@plt+0x999c>
   1aa4c:	b	1aa9c <__assert_fail@plt+0x99b4>
   1aa50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa54:	movw	r1, #0
   1aa58:	sdiv	r0, r1, r0
   1aa5c:	ldr	r1, [fp, #8]
   1aa60:	cmp	r0, r1
   1aa64:	blt	1aa84 <__assert_fail@plt+0x999c>
   1aa68:	b	1aa9c <__assert_fail@plt+0x99b4>
   1aa6c:	ldr	r0, [fp, #8]
   1aa70:	movw	r1, #65535	; 0xffff
   1aa74:	sdiv	r0, r1, r0
   1aa78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aa7c:	cmp	r0, r1
   1aa80:	bge	1aa9c <__assert_fail@plt+0x99b4>
   1aa84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa88:	ldr	r1, [fp, #8]
   1aa8c:	mul	r0, r0, r1
   1aa90:	uxth	r0, r0
   1aa94:	str	r0, [fp, #-28]	; 0xffffffe4
   1aa98:	b	1b6ec <__assert_fail@plt+0xa604>
   1aa9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aaa0:	ldr	r1, [fp, #8]
   1aaa4:	mul	r0, r0, r1
   1aaa8:	uxth	r0, r0
   1aaac:	str	r0, [fp, #-28]	; 0xffffffe4
   1aab0:	b	1b6f0 <__assert_fail@plt+0xa608>
   1aab4:	b	1aab8 <__assert_fail@plt+0x99d0>
   1aab8:	b	1aabc <__assert_fail@plt+0x99d4>
   1aabc:	ldr	r0, [fp, #8]
   1aac0:	cmp	r0, #0
   1aac4:	bge	1abc8 <__assert_fail@plt+0x9ae0>
   1aac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aacc:	cmp	r0, #0
   1aad0:	bge	1ab5c <__assert_fail@plt+0x9a74>
   1aad4:	b	1aad8 <__assert_fail@plt+0x99f0>
   1aad8:	ldr	r0, [pc, #3128]	; 1b718 <__assert_fail@plt+0xa630>
   1aadc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aae0:	ldr	r2, [fp, #8]
   1aae4:	sdiv	r0, r0, r2
   1aae8:	cmp	r1, r0
   1aaec:	blt	1ac58 <__assert_fail@plt+0x9b70>
   1aaf0:	b	1ac6c <__assert_fail@plt+0x9b84>
   1aaf4:	b	1aaf8 <__assert_fail@plt+0x9a10>
   1aaf8:	ldr	r0, [pc, #3100]	; 1b71c <__assert_fail@plt+0xa634>
   1aafc:	ldr	r1, [fp, #8]
   1ab00:	cmp	r1, r0
   1ab04:	blt	1ab1c <__assert_fail@plt+0x9a34>
   1ab08:	b	1ab28 <__assert_fail@plt+0x9a40>
   1ab0c:	ldr	r0, [fp, #8]
   1ab10:	movw	r1, #0
   1ab14:	cmp	r1, r0
   1ab18:	bge	1ab28 <__assert_fail@plt+0x9a40>
   1ab1c:	movw	r0, #0
   1ab20:	str	r0, [sp, #148]	; 0x94
   1ab24:	b	1ab40 <__assert_fail@plt+0x9a58>
   1ab28:	ldr	r0, [pc, #3048]	; 1b718 <__assert_fail@plt+0xa630>
   1ab2c:	ldr	r1, [fp, #8]
   1ab30:	movw	r2, #0
   1ab34:	sub	r1, r2, r1
   1ab38:	sdiv	r0, r0, r1
   1ab3c:	str	r0, [sp, #148]	; 0x94
   1ab40:	ldr	r0, [sp, #148]	; 0x94
   1ab44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ab48:	mvn	r2, #0
   1ab4c:	sub	r1, r2, r1
   1ab50:	cmp	r0, r1
   1ab54:	ble	1ac58 <__assert_fail@plt+0x9b70>
   1ab58:	b	1ac6c <__assert_fail@plt+0x9b84>
   1ab5c:	ldr	r0, [fp, #8]
   1ab60:	cmn	r0, #1
   1ab64:	bne	1abac <__assert_fail@plt+0x9ac4>
   1ab68:	b	1ab6c <__assert_fail@plt+0x9a84>
   1ab6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab70:	add	r0, r0, #-2147483648	; 0x80000000
   1ab74:	movw	r1, #0
   1ab78:	cmp	r1, r0
   1ab7c:	blt	1ac58 <__assert_fail@plt+0x9b70>
   1ab80:	b	1ac6c <__assert_fail@plt+0x9b84>
   1ab84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab88:	movw	r1, #0
   1ab8c:	cmp	r1, r0
   1ab90:	bge	1ac6c <__assert_fail@plt+0x9b84>
   1ab94:	ldr	r0, [pc, #2940]	; 1b718 <__assert_fail@plt+0xa630>
   1ab98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ab9c:	sub	r1, r1, #1
   1aba0:	cmp	r0, r1
   1aba4:	blt	1ac58 <__assert_fail@plt+0x9b70>
   1aba8:	b	1ac6c <__assert_fail@plt+0x9b84>
   1abac:	ldr	r0, [pc, #2924]	; 1b720 <__assert_fail@plt+0xa638>
   1abb0:	ldr	r1, [fp, #8]
   1abb4:	sdiv	r0, r0, r1
   1abb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1abbc:	cmp	r0, r1
   1abc0:	blt	1ac58 <__assert_fail@plt+0x9b70>
   1abc4:	b	1ac6c <__assert_fail@plt+0x9b84>
   1abc8:	ldr	r0, [fp, #8]
   1abcc:	cmp	r0, #0
   1abd0:	bne	1abd8 <__assert_fail@plt+0x9af0>
   1abd4:	b	1ac6c <__assert_fail@plt+0x9b84>
   1abd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1abdc:	cmp	r0, #0
   1abe0:	bge	1ac40 <__assert_fail@plt+0x9b58>
   1abe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1abe8:	cmn	r0, #1
   1abec:	bne	1ac24 <__assert_fail@plt+0x9b3c>
   1abf0:	b	1abf4 <__assert_fail@plt+0x9b0c>
   1abf4:	ldr	r0, [fp, #8]
   1abf8:	add	r0, r0, #-2147483648	; 0x80000000
   1abfc:	movw	r1, #0
   1ac00:	cmp	r1, r0
   1ac04:	blt	1ac58 <__assert_fail@plt+0x9b70>
   1ac08:	b	1ac6c <__assert_fail@plt+0x9b84>
   1ac0c:	ldr	r0, [pc, #2820]	; 1b718 <__assert_fail@plt+0xa630>
   1ac10:	ldr	r1, [fp, #8]
   1ac14:	sub	r1, r1, #1
   1ac18:	cmp	r0, r1
   1ac1c:	blt	1ac58 <__assert_fail@plt+0x9b70>
   1ac20:	b	1ac6c <__assert_fail@plt+0x9b84>
   1ac24:	ldr	r0, [pc, #2804]	; 1b720 <__assert_fail@plt+0xa638>
   1ac28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ac2c:	sdiv	r0, r0, r1
   1ac30:	ldr	r1, [fp, #8]
   1ac34:	cmp	r0, r1
   1ac38:	blt	1ac58 <__assert_fail@plt+0x9b70>
   1ac3c:	b	1ac6c <__assert_fail@plt+0x9b84>
   1ac40:	ldr	r0, [pc, #2768]	; 1b718 <__assert_fail@plt+0xa630>
   1ac44:	ldr	r1, [fp, #8]
   1ac48:	sdiv	r0, r0, r1
   1ac4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ac50:	cmp	r0, r1
   1ac54:	bge	1ac6c <__assert_fail@plt+0x9b84>
   1ac58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac5c:	ldr	r1, [fp, #8]
   1ac60:	mul	r0, r0, r1
   1ac64:	str	r0, [fp, #-28]	; 0xffffffe4
   1ac68:	b	1b6ec <__assert_fail@plt+0xa604>
   1ac6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac70:	ldr	r1, [fp, #8]
   1ac74:	mul	r0, r0, r1
   1ac78:	str	r0, [fp, #-28]	; 0xffffffe4
   1ac7c:	b	1b6f0 <__assert_fail@plt+0xa608>
   1ac80:	ldr	r0, [fp, #8]
   1ac84:	cmp	r0, #0
   1ac88:	bge	1ad98 <__assert_fail@plt+0x9cb0>
   1ac8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac90:	cmp	r0, #0
   1ac94:	bge	1ad20 <__assert_fail@plt+0x9c38>
   1ac98:	b	1acb8 <__assert_fail@plt+0x9bd0>
   1ac9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aca0:	ldr	r1, [fp, #8]
   1aca4:	mvn	r2, #0
   1aca8:	udiv	r1, r2, r1
   1acac:	cmp	r0, r1
   1acb0:	bcc	1ae34 <__assert_fail@plt+0x9d4c>
   1acb4:	b	1ae48 <__assert_fail@plt+0x9d60>
   1acb8:	b	1acbc <__assert_fail@plt+0x9bd4>
   1acbc:	ldr	r0, [pc, #2648]	; 1b71c <__assert_fail@plt+0xa634>
   1acc0:	ldr	r1, [fp, #8]
   1acc4:	cmp	r1, r0
   1acc8:	blt	1ace0 <__assert_fail@plt+0x9bf8>
   1accc:	b	1acec <__assert_fail@plt+0x9c04>
   1acd0:	ldr	r0, [fp, #8]
   1acd4:	movw	r1, #0
   1acd8:	cmp	r1, r0
   1acdc:	bge	1acec <__assert_fail@plt+0x9c04>
   1ace0:	movw	r0, #1
   1ace4:	str	r0, [sp, #144]	; 0x90
   1ace8:	b	1ad04 <__assert_fail@plt+0x9c1c>
   1acec:	ldr	r0, [fp, #8]
   1acf0:	movw	r1, #0
   1acf4:	sub	r0, r1, r0
   1acf8:	mvn	r1, #0
   1acfc:	udiv	r0, r1, r0
   1ad00:	str	r0, [sp, #144]	; 0x90
   1ad04:	ldr	r0, [sp, #144]	; 0x90
   1ad08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ad0c:	mvn	r2, #0
   1ad10:	sub	r1, r2, r1
   1ad14:	cmp	r0, r1
   1ad18:	bls	1ae34 <__assert_fail@plt+0x9d4c>
   1ad1c:	b	1ae48 <__assert_fail@plt+0x9d60>
   1ad20:	b	1ad24 <__assert_fail@plt+0x9c3c>
   1ad24:	b	1ad7c <__assert_fail@plt+0x9c94>
   1ad28:	b	1ad7c <__assert_fail@plt+0x9c94>
   1ad2c:	ldr	r0, [fp, #8]
   1ad30:	cmn	r0, #1
   1ad34:	bne	1ad7c <__assert_fail@plt+0x9c94>
   1ad38:	b	1ad3c <__assert_fail@plt+0x9c54>
   1ad3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad40:	add	r0, r0, #0
   1ad44:	movw	r1, #0
   1ad48:	cmp	r1, r0
   1ad4c:	blt	1ae34 <__assert_fail@plt+0x9d4c>
   1ad50:	b	1ae48 <__assert_fail@plt+0x9d60>
   1ad54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad58:	movw	r1, #0
   1ad5c:	cmp	r1, r0
   1ad60:	bge	1ae48 <__assert_fail@plt+0x9d60>
   1ad64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad68:	sub	r0, r0, #1
   1ad6c:	mvn	r1, #0
   1ad70:	cmp	r1, r0
   1ad74:	blt	1ae34 <__assert_fail@plt+0x9d4c>
   1ad78:	b	1ae48 <__assert_fail@plt+0x9d60>
   1ad7c:	ldr	r0, [fp, #8]
   1ad80:	movw	r1, #0
   1ad84:	sdiv	r0, r1, r0
   1ad88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ad8c:	cmp	r0, r1
   1ad90:	blt	1ae34 <__assert_fail@plt+0x9d4c>
   1ad94:	b	1ae48 <__assert_fail@plt+0x9d60>
   1ad98:	ldr	r0, [fp, #8]
   1ad9c:	cmp	r0, #0
   1ada0:	bne	1ada8 <__assert_fail@plt+0x9cc0>
   1ada4:	b	1ae48 <__assert_fail@plt+0x9d60>
   1ada8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1adac:	cmp	r0, #0
   1adb0:	bge	1ae1c <__assert_fail@plt+0x9d34>
   1adb4:	b	1adb8 <__assert_fail@plt+0x9cd0>
   1adb8:	b	1ae00 <__assert_fail@plt+0x9d18>
   1adbc:	b	1ae00 <__assert_fail@plt+0x9d18>
   1adc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1adc4:	cmn	r0, #1
   1adc8:	bne	1ae00 <__assert_fail@plt+0x9d18>
   1adcc:	b	1add0 <__assert_fail@plt+0x9ce8>
   1add0:	ldr	r0, [fp, #8]
   1add4:	add	r0, r0, #0
   1add8:	movw	r1, #0
   1addc:	cmp	r1, r0
   1ade0:	blt	1ae34 <__assert_fail@plt+0x9d4c>
   1ade4:	b	1ae48 <__assert_fail@plt+0x9d60>
   1ade8:	ldr	r0, [fp, #8]
   1adec:	sub	r0, r0, #1
   1adf0:	mvn	r1, #0
   1adf4:	cmp	r1, r0
   1adf8:	blt	1ae34 <__assert_fail@plt+0x9d4c>
   1adfc:	b	1ae48 <__assert_fail@plt+0x9d60>
   1ae00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae04:	movw	r1, #0
   1ae08:	sdiv	r0, r1, r0
   1ae0c:	ldr	r1, [fp, #8]
   1ae10:	cmp	r0, r1
   1ae14:	blt	1ae34 <__assert_fail@plt+0x9d4c>
   1ae18:	b	1ae48 <__assert_fail@plt+0x9d60>
   1ae1c:	ldr	r0, [fp, #8]
   1ae20:	mvn	r1, #0
   1ae24:	udiv	r0, r1, r0
   1ae28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ae2c:	cmp	r0, r1
   1ae30:	bcs	1ae48 <__assert_fail@plt+0x9d60>
   1ae34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae38:	ldr	r1, [fp, #8]
   1ae3c:	mul	r0, r0, r1
   1ae40:	str	r0, [fp, #-28]	; 0xffffffe4
   1ae44:	b	1b6ec <__assert_fail@plt+0xa604>
   1ae48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae4c:	ldr	r1, [fp, #8]
   1ae50:	mul	r0, r0, r1
   1ae54:	str	r0, [fp, #-28]	; 0xffffffe4
   1ae58:	b	1b6f0 <__assert_fail@plt+0xa608>
   1ae5c:	b	1ae60 <__assert_fail@plt+0x9d78>
   1ae60:	b	1ae64 <__assert_fail@plt+0x9d7c>
   1ae64:	ldr	r0, [fp, #8]
   1ae68:	cmp	r0, #0
   1ae6c:	bge	1af70 <__assert_fail@plt+0x9e88>
   1ae70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae74:	cmp	r0, #0
   1ae78:	bge	1af04 <__assert_fail@plt+0x9e1c>
   1ae7c:	b	1ae80 <__assert_fail@plt+0x9d98>
   1ae80:	ldr	r0, [pc, #2192]	; 1b718 <__assert_fail@plt+0xa630>
   1ae84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ae88:	ldr	r2, [fp, #8]
   1ae8c:	sdiv	r0, r0, r2
   1ae90:	cmp	r1, r0
   1ae94:	blt	1b000 <__assert_fail@plt+0x9f18>
   1ae98:	b	1b014 <__assert_fail@plt+0x9f2c>
   1ae9c:	b	1aea0 <__assert_fail@plt+0x9db8>
   1aea0:	ldr	r0, [pc, #2164]	; 1b71c <__assert_fail@plt+0xa634>
   1aea4:	ldr	r1, [fp, #8]
   1aea8:	cmp	r1, r0
   1aeac:	blt	1aec4 <__assert_fail@plt+0x9ddc>
   1aeb0:	b	1aed0 <__assert_fail@plt+0x9de8>
   1aeb4:	ldr	r0, [fp, #8]
   1aeb8:	movw	r1, #0
   1aebc:	cmp	r1, r0
   1aec0:	bge	1aed0 <__assert_fail@plt+0x9de8>
   1aec4:	movw	r0, #0
   1aec8:	str	r0, [sp, #140]	; 0x8c
   1aecc:	b	1aee8 <__assert_fail@plt+0x9e00>
   1aed0:	ldr	r0, [pc, #2112]	; 1b718 <__assert_fail@plt+0xa630>
   1aed4:	ldr	r1, [fp, #8]
   1aed8:	movw	r2, #0
   1aedc:	sub	r1, r2, r1
   1aee0:	sdiv	r0, r0, r1
   1aee4:	str	r0, [sp, #140]	; 0x8c
   1aee8:	ldr	r0, [sp, #140]	; 0x8c
   1aeec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aef0:	mvn	r2, #0
   1aef4:	sub	r1, r2, r1
   1aef8:	cmp	r0, r1
   1aefc:	ble	1b000 <__assert_fail@plt+0x9f18>
   1af00:	b	1b014 <__assert_fail@plt+0x9f2c>
   1af04:	ldr	r0, [fp, #8]
   1af08:	cmn	r0, #1
   1af0c:	bne	1af54 <__assert_fail@plt+0x9e6c>
   1af10:	b	1af14 <__assert_fail@plt+0x9e2c>
   1af14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af18:	add	r0, r0, #-2147483648	; 0x80000000
   1af1c:	movw	r1, #0
   1af20:	cmp	r1, r0
   1af24:	blt	1b000 <__assert_fail@plt+0x9f18>
   1af28:	b	1b014 <__assert_fail@plt+0x9f2c>
   1af2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af30:	movw	r1, #0
   1af34:	cmp	r1, r0
   1af38:	bge	1b014 <__assert_fail@plt+0x9f2c>
   1af3c:	ldr	r0, [pc, #2004]	; 1b718 <__assert_fail@plt+0xa630>
   1af40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1af44:	sub	r1, r1, #1
   1af48:	cmp	r0, r1
   1af4c:	blt	1b000 <__assert_fail@plt+0x9f18>
   1af50:	b	1b014 <__assert_fail@plt+0x9f2c>
   1af54:	ldr	r0, [pc, #1988]	; 1b720 <__assert_fail@plt+0xa638>
   1af58:	ldr	r1, [fp, #8]
   1af5c:	sdiv	r0, r0, r1
   1af60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1af64:	cmp	r0, r1
   1af68:	blt	1b000 <__assert_fail@plt+0x9f18>
   1af6c:	b	1b014 <__assert_fail@plt+0x9f2c>
   1af70:	ldr	r0, [fp, #8]
   1af74:	cmp	r0, #0
   1af78:	bne	1af80 <__assert_fail@plt+0x9e98>
   1af7c:	b	1b014 <__assert_fail@plt+0x9f2c>
   1af80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af84:	cmp	r0, #0
   1af88:	bge	1afe8 <__assert_fail@plt+0x9f00>
   1af8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af90:	cmn	r0, #1
   1af94:	bne	1afcc <__assert_fail@plt+0x9ee4>
   1af98:	b	1af9c <__assert_fail@plt+0x9eb4>
   1af9c:	ldr	r0, [fp, #8]
   1afa0:	add	r0, r0, #-2147483648	; 0x80000000
   1afa4:	movw	r1, #0
   1afa8:	cmp	r1, r0
   1afac:	blt	1b000 <__assert_fail@plt+0x9f18>
   1afb0:	b	1b014 <__assert_fail@plt+0x9f2c>
   1afb4:	ldr	r0, [pc, #1884]	; 1b718 <__assert_fail@plt+0xa630>
   1afb8:	ldr	r1, [fp, #8]
   1afbc:	sub	r1, r1, #1
   1afc0:	cmp	r0, r1
   1afc4:	blt	1b000 <__assert_fail@plt+0x9f18>
   1afc8:	b	1b014 <__assert_fail@plt+0x9f2c>
   1afcc:	ldr	r0, [pc, #1868]	; 1b720 <__assert_fail@plt+0xa638>
   1afd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1afd4:	sdiv	r0, r0, r1
   1afd8:	ldr	r1, [fp, #8]
   1afdc:	cmp	r0, r1
   1afe0:	blt	1b000 <__assert_fail@plt+0x9f18>
   1afe4:	b	1b014 <__assert_fail@plt+0x9f2c>
   1afe8:	ldr	r0, [pc, #1832]	; 1b718 <__assert_fail@plt+0xa630>
   1afec:	ldr	r1, [fp, #8]
   1aff0:	sdiv	r0, r0, r1
   1aff4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aff8:	cmp	r0, r1
   1affc:	bge	1b014 <__assert_fail@plt+0x9f2c>
   1b000:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b004:	ldr	r1, [fp, #8]
   1b008:	mul	r0, r0, r1
   1b00c:	str	r0, [fp, #-28]	; 0xffffffe4
   1b010:	b	1b6ec <__assert_fail@plt+0xa604>
   1b014:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b018:	ldr	r1, [fp, #8]
   1b01c:	mul	r0, r0, r1
   1b020:	str	r0, [fp, #-28]	; 0xffffffe4
   1b024:	b	1b6f0 <__assert_fail@plt+0xa608>
   1b028:	ldr	r0, [fp, #8]
   1b02c:	cmp	r0, #0
   1b030:	bge	1b140 <__assert_fail@plt+0xa058>
   1b034:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b038:	cmp	r0, #0
   1b03c:	bge	1b0c8 <__assert_fail@plt+0x9fe0>
   1b040:	b	1b060 <__assert_fail@plt+0x9f78>
   1b044:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b048:	ldr	r1, [fp, #8]
   1b04c:	mvn	r2, #0
   1b050:	udiv	r1, r2, r1
   1b054:	cmp	r0, r1
   1b058:	bcc	1b1dc <__assert_fail@plt+0xa0f4>
   1b05c:	b	1b1f0 <__assert_fail@plt+0xa108>
   1b060:	b	1b064 <__assert_fail@plt+0x9f7c>
   1b064:	ldr	r0, [pc, #1712]	; 1b71c <__assert_fail@plt+0xa634>
   1b068:	ldr	r1, [fp, #8]
   1b06c:	cmp	r1, r0
   1b070:	blt	1b088 <__assert_fail@plt+0x9fa0>
   1b074:	b	1b094 <__assert_fail@plt+0x9fac>
   1b078:	ldr	r0, [fp, #8]
   1b07c:	movw	r1, #0
   1b080:	cmp	r1, r0
   1b084:	bge	1b094 <__assert_fail@plt+0x9fac>
   1b088:	movw	r0, #1
   1b08c:	str	r0, [sp, #136]	; 0x88
   1b090:	b	1b0ac <__assert_fail@plt+0x9fc4>
   1b094:	ldr	r0, [fp, #8]
   1b098:	movw	r1, #0
   1b09c:	sub	r0, r1, r0
   1b0a0:	mvn	r1, #0
   1b0a4:	udiv	r0, r1, r0
   1b0a8:	str	r0, [sp, #136]	; 0x88
   1b0ac:	ldr	r0, [sp, #136]	; 0x88
   1b0b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b0b4:	mvn	r2, #0
   1b0b8:	sub	r1, r2, r1
   1b0bc:	cmp	r0, r1
   1b0c0:	bls	1b1dc <__assert_fail@plt+0xa0f4>
   1b0c4:	b	1b1f0 <__assert_fail@plt+0xa108>
   1b0c8:	b	1b0cc <__assert_fail@plt+0x9fe4>
   1b0cc:	b	1b124 <__assert_fail@plt+0xa03c>
   1b0d0:	b	1b124 <__assert_fail@plt+0xa03c>
   1b0d4:	ldr	r0, [fp, #8]
   1b0d8:	cmn	r0, #1
   1b0dc:	bne	1b124 <__assert_fail@plt+0xa03c>
   1b0e0:	b	1b0e4 <__assert_fail@plt+0x9ffc>
   1b0e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b0e8:	add	r0, r0, #0
   1b0ec:	movw	r1, #0
   1b0f0:	cmp	r1, r0
   1b0f4:	blt	1b1dc <__assert_fail@plt+0xa0f4>
   1b0f8:	b	1b1f0 <__assert_fail@plt+0xa108>
   1b0fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b100:	movw	r1, #0
   1b104:	cmp	r1, r0
   1b108:	bge	1b1f0 <__assert_fail@plt+0xa108>
   1b10c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b110:	sub	r0, r0, #1
   1b114:	mvn	r1, #0
   1b118:	cmp	r1, r0
   1b11c:	blt	1b1dc <__assert_fail@plt+0xa0f4>
   1b120:	b	1b1f0 <__assert_fail@plt+0xa108>
   1b124:	ldr	r0, [fp, #8]
   1b128:	movw	r1, #0
   1b12c:	sdiv	r0, r1, r0
   1b130:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b134:	cmp	r0, r1
   1b138:	blt	1b1dc <__assert_fail@plt+0xa0f4>
   1b13c:	b	1b1f0 <__assert_fail@plt+0xa108>
   1b140:	ldr	r0, [fp, #8]
   1b144:	cmp	r0, #0
   1b148:	bne	1b150 <__assert_fail@plt+0xa068>
   1b14c:	b	1b1f0 <__assert_fail@plt+0xa108>
   1b150:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b154:	cmp	r0, #0
   1b158:	bge	1b1c4 <__assert_fail@plt+0xa0dc>
   1b15c:	b	1b160 <__assert_fail@plt+0xa078>
   1b160:	b	1b1a8 <__assert_fail@plt+0xa0c0>
   1b164:	b	1b1a8 <__assert_fail@plt+0xa0c0>
   1b168:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b16c:	cmn	r0, #1
   1b170:	bne	1b1a8 <__assert_fail@plt+0xa0c0>
   1b174:	b	1b178 <__assert_fail@plt+0xa090>
   1b178:	ldr	r0, [fp, #8]
   1b17c:	add	r0, r0, #0
   1b180:	movw	r1, #0
   1b184:	cmp	r1, r0
   1b188:	blt	1b1dc <__assert_fail@plt+0xa0f4>
   1b18c:	b	1b1f0 <__assert_fail@plt+0xa108>
   1b190:	ldr	r0, [fp, #8]
   1b194:	sub	r0, r0, #1
   1b198:	mvn	r1, #0
   1b19c:	cmp	r1, r0
   1b1a0:	blt	1b1dc <__assert_fail@plt+0xa0f4>
   1b1a4:	b	1b1f0 <__assert_fail@plt+0xa108>
   1b1a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b1ac:	movw	r1, #0
   1b1b0:	sdiv	r0, r1, r0
   1b1b4:	ldr	r1, [fp, #8]
   1b1b8:	cmp	r0, r1
   1b1bc:	blt	1b1dc <__assert_fail@plt+0xa0f4>
   1b1c0:	b	1b1f0 <__assert_fail@plt+0xa108>
   1b1c4:	ldr	r0, [fp, #8]
   1b1c8:	mvn	r1, #0
   1b1cc:	udiv	r0, r1, r0
   1b1d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b1d4:	cmp	r0, r1
   1b1d8:	bcs	1b1f0 <__assert_fail@plt+0xa108>
   1b1dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b1e0:	ldr	r1, [fp, #8]
   1b1e4:	mul	r0, r0, r1
   1b1e8:	str	r0, [fp, #-28]	; 0xffffffe4
   1b1ec:	b	1b6ec <__assert_fail@plt+0xa604>
   1b1f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b1f4:	ldr	r1, [fp, #8]
   1b1f8:	mul	r0, r0, r1
   1b1fc:	str	r0, [fp, #-28]	; 0xffffffe4
   1b200:	b	1b6f0 <__assert_fail@plt+0xa608>
   1b204:	b	1b208 <__assert_fail@plt+0xa120>
   1b208:	ldr	r0, [fp, #8]
   1b20c:	cmp	r0, #0
   1b210:	bge	1b398 <__assert_fail@plt+0xa2b0>
   1b214:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b218:	cmp	r0, #0
   1b21c:	bge	1b304 <__assert_fail@plt+0xa21c>
   1b220:	b	1b224 <__assert_fail@plt+0xa13c>
   1b224:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b228:	ldr	r1, [fp, #8]
   1b22c:	asr	r3, r1, #31
   1b230:	mvn	r2, #0
   1b234:	mvn	ip, #-2147483648	; 0x80000000
   1b238:	str	r0, [sp, #132]	; 0x84
   1b23c:	mov	r0, r2
   1b240:	str	r1, [sp, #128]	; 0x80
   1b244:	mov	r1, ip
   1b248:	ldr	r2, [sp, #128]	; 0x80
   1b24c:	bl	1e940 <__assert_fail@plt+0xd858>
   1b250:	ldr	r2, [sp, #132]	; 0x84
   1b254:	subs	r0, r2, r0
   1b258:	rscs	r1, r1, r2, asr #31
   1b25c:	str	r0, [sp, #124]	; 0x7c
   1b260:	str	r1, [sp, #120]	; 0x78
   1b264:	blt	1b478 <__assert_fail@plt+0xa390>
   1b268:	b	1b48c <__assert_fail@plt+0xa3a4>
   1b26c:	b	1b270 <__assert_fail@plt+0xa188>
   1b270:	ldr	r0, [pc, #1188]	; 1b71c <__assert_fail@plt+0xa634>
   1b274:	ldr	r1, [fp, #8]
   1b278:	cmp	r1, r0
   1b27c:	blt	1b294 <__assert_fail@plt+0xa1ac>
   1b280:	b	1b2a8 <__assert_fail@plt+0xa1c0>
   1b284:	ldr	r0, [fp, #8]
   1b288:	movw	r1, #0
   1b28c:	cmp	r1, r0
   1b290:	bge	1b2a8 <__assert_fail@plt+0xa1c0>
   1b294:	mov	r0, #0
   1b298:	mvn	r1, #0
   1b29c:	str	r1, [sp, #116]	; 0x74
   1b2a0:	str	r0, [sp, #112]	; 0x70
   1b2a4:	b	1b2dc <__assert_fail@plt+0xa1f4>
   1b2a8:	ldr	r0, [fp, #8]
   1b2ac:	rsb	r0, r0, #0
   1b2b0:	asr	r3, r0, #31
   1b2b4:	mvn	r1, #0
   1b2b8:	mvn	r2, #-2147483648	; 0x80000000
   1b2bc:	str	r0, [sp, #108]	; 0x6c
   1b2c0:	mov	r0, r1
   1b2c4:	mov	r1, r2
   1b2c8:	ldr	r2, [sp, #108]	; 0x6c
   1b2cc:	bl	1e940 <__assert_fail@plt+0xd858>
   1b2d0:	str	r0, [sp, #116]	; 0x74
   1b2d4:	str	r1, [sp, #112]	; 0x70
   1b2d8:	b	1b2dc <__assert_fail@plt+0xa1f4>
   1b2dc:	ldr	r0, [sp, #112]	; 0x70
   1b2e0:	ldr	r1, [sp, #116]	; 0x74
   1b2e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b2e8:	mvn	r2, r2
   1b2ec:	subs	r1, r2, r1
   1b2f0:	rscs	r0, r0, r2, asr #31
   1b2f4:	str	r1, [sp, #104]	; 0x68
   1b2f8:	str	r0, [sp, #100]	; 0x64
   1b2fc:	bge	1b478 <__assert_fail@plt+0xa390>
   1b300:	b	1b48c <__assert_fail@plt+0xa3a4>
   1b304:	ldr	r0, [fp, #8]
   1b308:	cmn	r0, #1
   1b30c:	bne	1b358 <__assert_fail@plt+0xa270>
   1b310:	b	1b314 <__assert_fail@plt+0xa22c>
   1b314:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b318:	mov	r1, #-2147483648	; 0x80000000
   1b31c:	add	r1, r1, r0, asr #31
   1b320:	rsbs	r0, r0, #0
   1b324:	rscs	r1, r1, #0
   1b328:	str	r0, [sp, #96]	; 0x60
   1b32c:	str	r1, [sp, #92]	; 0x5c
   1b330:	blt	1b478 <__assert_fail@plt+0xa390>
   1b334:	b	1b48c <__assert_fail@plt+0xa3a4>
   1b338:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b33c:	movw	r1, #0
   1b340:	cmp	r1, r0
   1b344:	bge	1b48c <__assert_fail@plt+0xa3a4>
   1b348:	mov	r0, #0
   1b34c:	cmp	r0, #0
   1b350:	bne	1b478 <__assert_fail@plt+0xa390>
   1b354:	b	1b48c <__assert_fail@plt+0xa3a4>
   1b358:	ldr	r0, [fp, #8]
   1b35c:	asr	r3, r0, #31
   1b360:	mov	r1, #0
   1b364:	mov	r2, #-2147483648	; 0x80000000
   1b368:	str	r0, [sp, #88]	; 0x58
   1b36c:	mov	r0, r1
   1b370:	mov	r1, r2
   1b374:	ldr	r2, [sp, #88]	; 0x58
   1b378:	bl	1e940 <__assert_fail@plt+0xd858>
   1b37c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b380:	subs	r0, r0, r2
   1b384:	sbcs	r1, r1, r2, asr #31
   1b388:	str	r0, [sp, #84]	; 0x54
   1b38c:	str	r1, [sp, #80]	; 0x50
   1b390:	blt	1b478 <__assert_fail@plt+0xa390>
   1b394:	b	1b48c <__assert_fail@plt+0xa3a4>
   1b398:	ldr	r0, [fp, #8]
   1b39c:	cmp	r0, #0
   1b3a0:	bne	1b3a8 <__assert_fail@plt+0xa2c0>
   1b3a4:	b	1b48c <__assert_fail@plt+0xa3a4>
   1b3a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b3ac:	cmp	r0, #0
   1b3b0:	bge	1b438 <__assert_fail@plt+0xa350>
   1b3b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b3b8:	cmn	r0, #1
   1b3bc:	bne	1b3f8 <__assert_fail@plt+0xa310>
   1b3c0:	b	1b3c4 <__assert_fail@plt+0xa2dc>
   1b3c4:	ldr	r0, [fp, #8]
   1b3c8:	mov	r1, #-2147483648	; 0x80000000
   1b3cc:	add	r1, r1, r0, asr #31
   1b3d0:	rsbs	r0, r0, #0
   1b3d4:	rscs	r1, r1, #0
   1b3d8:	str	r0, [sp, #76]	; 0x4c
   1b3dc:	str	r1, [sp, #72]	; 0x48
   1b3e0:	blt	1b478 <__assert_fail@plt+0xa390>
   1b3e4:	b	1b48c <__assert_fail@plt+0xa3a4>
   1b3e8:	mov	r0, #0
   1b3ec:	cmp	r0, #0
   1b3f0:	bne	1b478 <__assert_fail@plt+0xa390>
   1b3f4:	b	1b48c <__assert_fail@plt+0xa3a4>
   1b3f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b3fc:	asr	r3, r0, #31
   1b400:	mov	r1, #0
   1b404:	mov	r2, #-2147483648	; 0x80000000
   1b408:	str	r0, [sp, #68]	; 0x44
   1b40c:	mov	r0, r1
   1b410:	mov	r1, r2
   1b414:	ldr	r2, [sp, #68]	; 0x44
   1b418:	bl	1e940 <__assert_fail@plt+0xd858>
   1b41c:	ldr	r2, [fp, #8]
   1b420:	subs	r0, r0, r2
   1b424:	sbcs	r1, r1, r2, asr #31
   1b428:	str	r0, [sp, #64]	; 0x40
   1b42c:	str	r1, [sp, #60]	; 0x3c
   1b430:	blt	1b478 <__assert_fail@plt+0xa390>
   1b434:	b	1b48c <__assert_fail@plt+0xa3a4>
   1b438:	ldr	r0, [fp, #8]
   1b43c:	asr	r3, r0, #31
   1b440:	mvn	r1, #0
   1b444:	mvn	r2, #-2147483648	; 0x80000000
   1b448:	str	r0, [sp, #56]	; 0x38
   1b44c:	mov	r0, r1
   1b450:	mov	r1, r2
   1b454:	ldr	r2, [sp, #56]	; 0x38
   1b458:	bl	1e940 <__assert_fail@plt+0xd858>
   1b45c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b460:	subs	r0, r0, r2
   1b464:	sbcs	r1, r1, r2, asr #31
   1b468:	str	r0, [sp, #52]	; 0x34
   1b46c:	str	r1, [sp, #48]	; 0x30
   1b470:	bge	1b48c <__assert_fail@plt+0xa3a4>
   1b474:	b	1b478 <__assert_fail@plt+0xa390>
   1b478:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b47c:	ldr	r1, [fp, #8]
   1b480:	mul	r0, r0, r1
   1b484:	str	r0, [fp, #-28]	; 0xffffffe4
   1b488:	b	1b6ec <__assert_fail@plt+0xa604>
   1b48c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b490:	ldr	r1, [fp, #8]
   1b494:	mul	r0, r0, r1
   1b498:	str	r0, [fp, #-28]	; 0xffffffe4
   1b49c:	b	1b6f0 <__assert_fail@plt+0xa608>
   1b4a0:	ldr	r0, [fp, #8]
   1b4a4:	cmp	r0, #0
   1b4a8:	bge	1b608 <__assert_fail@plt+0xa520>
   1b4ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b4b0:	cmp	r0, #0
   1b4b4:	bge	1b590 <__assert_fail@plt+0xa4a8>
   1b4b8:	b	1b500 <__assert_fail@plt+0xa418>
   1b4bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b4c0:	ldr	r1, [fp, #8]
   1b4c4:	asr	r3, r1, #31
   1b4c8:	mvn	r2, #0
   1b4cc:	str	r0, [sp, #44]	; 0x2c
   1b4d0:	mov	r0, r2
   1b4d4:	str	r1, [sp, #40]	; 0x28
   1b4d8:	mov	r1, r2
   1b4dc:	ldr	r2, [sp, #40]	; 0x28
   1b4e0:	bl	1ea14 <__assert_fail@plt+0xd92c>
   1b4e4:	ldr	r2, [sp, #44]	; 0x2c
   1b4e8:	subs	r0, r2, r0
   1b4ec:	rscs	r1, r1, r2, asr #31
   1b4f0:	str	r0, [sp, #36]	; 0x24
   1b4f4:	str	r1, [sp, #32]
   1b4f8:	bcc	1b6c4 <__assert_fail@plt+0xa5dc>
   1b4fc:	b	1b6d8 <__assert_fail@plt+0xa5f0>
   1b500:	b	1b504 <__assert_fail@plt+0xa41c>
   1b504:	ldr	r0, [pc, #528]	; 1b71c <__assert_fail@plt+0xa634>
   1b508:	ldr	r1, [fp, #8]
   1b50c:	cmp	r1, r0
   1b510:	blt	1b528 <__assert_fail@plt+0xa440>
   1b514:	b	1b53c <__assert_fail@plt+0xa454>
   1b518:	ldr	r0, [fp, #8]
   1b51c:	movw	r1, #0
   1b520:	cmp	r1, r0
   1b524:	bge	1b53c <__assert_fail@plt+0xa454>
   1b528:	mov	r0, #1
   1b52c:	mvn	r1, #0
   1b530:	str	r1, [sp, #28]
   1b534:	str	r0, [sp, #24]
   1b538:	b	1b568 <__assert_fail@plt+0xa480>
   1b53c:	ldr	r0, [fp, #8]
   1b540:	rsb	r0, r0, #0
   1b544:	asr	r3, r0, #31
   1b548:	mvn	r1, #0
   1b54c:	str	r0, [sp, #20]
   1b550:	mov	r0, r1
   1b554:	ldr	r2, [sp, #20]
   1b558:	bl	1ea14 <__assert_fail@plt+0xd92c>
   1b55c:	str	r0, [sp, #28]
   1b560:	str	r1, [sp, #24]
   1b564:	b	1b568 <__assert_fail@plt+0xa480>
   1b568:	ldr	r0, [sp, #24]
   1b56c:	ldr	r1, [sp, #28]
   1b570:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b574:	mvn	r2, r2
   1b578:	subs	r1, r2, r1
   1b57c:	rscs	r0, r0, r2, asr #31
   1b580:	str	r1, [sp, #16]
   1b584:	str	r0, [sp, #12]
   1b588:	bcs	1b6c4 <__assert_fail@plt+0xa5dc>
   1b58c:	b	1b6d8 <__assert_fail@plt+0xa5f0>
   1b590:	b	1b594 <__assert_fail@plt+0xa4ac>
   1b594:	b	1b5ec <__assert_fail@plt+0xa504>
   1b598:	b	1b5ec <__assert_fail@plt+0xa504>
   1b59c:	ldr	r0, [fp, #8]
   1b5a0:	cmn	r0, #1
   1b5a4:	bne	1b5ec <__assert_fail@plt+0xa504>
   1b5a8:	b	1b5ac <__assert_fail@plt+0xa4c4>
   1b5ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b5b0:	add	r0, r0, #0
   1b5b4:	movw	r1, #0
   1b5b8:	cmp	r1, r0
   1b5bc:	blt	1b6c4 <__assert_fail@plt+0xa5dc>
   1b5c0:	b	1b6d8 <__assert_fail@plt+0xa5f0>
   1b5c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b5c8:	movw	r1, #0
   1b5cc:	cmp	r1, r0
   1b5d0:	bge	1b6d8 <__assert_fail@plt+0xa5f0>
   1b5d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b5d8:	sub	r0, r0, #1
   1b5dc:	mvn	r1, #0
   1b5e0:	cmp	r1, r0
   1b5e4:	blt	1b6c4 <__assert_fail@plt+0xa5dc>
   1b5e8:	b	1b6d8 <__assert_fail@plt+0xa5f0>
   1b5ec:	ldr	r0, [fp, #8]
   1b5f0:	movw	r1, #0
   1b5f4:	sdiv	r0, r1, r0
   1b5f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b5fc:	cmp	r0, r1
   1b600:	blt	1b6c4 <__assert_fail@plt+0xa5dc>
   1b604:	b	1b6d8 <__assert_fail@plt+0xa5f0>
   1b608:	ldr	r0, [fp, #8]
   1b60c:	cmp	r0, #0
   1b610:	bne	1b618 <__assert_fail@plt+0xa530>
   1b614:	b	1b6d8 <__assert_fail@plt+0xa5f0>
   1b618:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b61c:	cmp	r0, #0
   1b620:	bge	1b68c <__assert_fail@plt+0xa5a4>
   1b624:	b	1b628 <__assert_fail@plt+0xa540>
   1b628:	b	1b670 <__assert_fail@plt+0xa588>
   1b62c:	b	1b670 <__assert_fail@plt+0xa588>
   1b630:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b634:	cmn	r0, #1
   1b638:	bne	1b670 <__assert_fail@plt+0xa588>
   1b63c:	b	1b640 <__assert_fail@plt+0xa558>
   1b640:	ldr	r0, [fp, #8]
   1b644:	add	r0, r0, #0
   1b648:	movw	r1, #0
   1b64c:	cmp	r1, r0
   1b650:	blt	1b6c4 <__assert_fail@plt+0xa5dc>
   1b654:	b	1b6d8 <__assert_fail@plt+0xa5f0>
   1b658:	ldr	r0, [fp, #8]
   1b65c:	sub	r0, r0, #1
   1b660:	mvn	r1, #0
   1b664:	cmp	r1, r0
   1b668:	blt	1b6c4 <__assert_fail@plt+0xa5dc>
   1b66c:	b	1b6d8 <__assert_fail@plt+0xa5f0>
   1b670:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b674:	movw	r1, #0
   1b678:	sdiv	r0, r1, r0
   1b67c:	ldr	r1, [fp, #8]
   1b680:	cmp	r0, r1
   1b684:	blt	1b6c4 <__assert_fail@plt+0xa5dc>
   1b688:	b	1b6d8 <__assert_fail@plt+0xa5f0>
   1b68c:	ldr	r0, [fp, #8]
   1b690:	asr	r3, r0, #31
   1b694:	mvn	r1, #0
   1b698:	str	r0, [sp, #8]
   1b69c:	mov	r0, r1
   1b6a0:	ldr	r2, [sp, #8]
   1b6a4:	bl	1ea14 <__assert_fail@plt+0xd92c>
   1b6a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b6ac:	subs	r0, r0, r2
   1b6b0:	sbcs	r1, r1, r2, asr #31
   1b6b4:	str	r0, [sp, #4]
   1b6b8:	str	r1, [sp]
   1b6bc:	bcs	1b6d8 <__assert_fail@plt+0xa5f0>
   1b6c0:	b	1b6c4 <__assert_fail@plt+0xa5dc>
   1b6c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b6c8:	ldr	r1, [fp, #8]
   1b6cc:	mul	r0, r0, r1
   1b6d0:	str	r0, [fp, #-28]	; 0xffffffe4
   1b6d4:	b	1b6ec <__assert_fail@plt+0xa604>
   1b6d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b6dc:	ldr	r1, [fp, #8]
   1b6e0:	mul	r0, r0, r1
   1b6e4:	str	r0, [fp, #-28]	; 0xffffffe4
   1b6e8:	b	1b6f0 <__assert_fail@plt+0xa608>
   1b6ec:	bl	1b8c8 <__assert_fail@plt+0xa7e0>
   1b6f0:	ldr	r0, [fp, #-4]
   1b6f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b6f8:	bl	18b84 <__assert_fail@plt+0x7a9c>
   1b6fc:	str	r0, [fp, #-4]
   1b700:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b704:	ldr	r1, [fp, #-8]
   1b708:	str	r0, [r1]
   1b70c:	ldr	r0, [fp, #-4]
   1b710:	mov	sp, fp
   1b714:	pop	{fp, pc}
   1b718:	svcvc	0x00ffffff
   1b71c:	andhi	r0, r0, r1
   1b720:	andhi	r0, r0, r0
   1b724:			; <UNDEFINED> instruction: 0xffff8000
   1b728:	push	{fp, lr}
   1b72c:	mov	fp, sp
   1b730:	sub	sp, sp, #8
   1b734:	str	r0, [sp, #4]
   1b738:	ldr	r0, [sp, #4]
   1b73c:	movw	r1, #1
   1b740:	bl	1b74c <__assert_fail@plt+0xa664>
   1b744:	mov	sp, fp
   1b748:	pop	{fp, pc}
   1b74c:	push	{fp, lr}
   1b750:	mov	fp, sp
   1b754:	sub	sp, sp, #8
   1b758:	str	r0, [sp, #4]
   1b75c:	str	r1, [sp]
   1b760:	ldr	r0, [sp, #4]
   1b764:	ldr	r1, [sp]
   1b768:	bl	1dc84 <__assert_fail@plt+0xcb9c>
   1b76c:	bl	18b10 <__assert_fail@plt+0x7a28>
   1b770:	mov	sp, fp
   1b774:	pop	{fp, pc}
   1b778:	push	{fp, lr}
   1b77c:	mov	fp, sp
   1b780:	sub	sp, sp, #8
   1b784:	str	r0, [sp, #4]
   1b788:	ldr	r0, [sp, #4]
   1b78c:	movw	r1, #1
   1b790:	bl	1b79c <__assert_fail@plt+0xa6b4>
   1b794:	mov	sp, fp
   1b798:	pop	{fp, pc}
   1b79c:	push	{fp, lr}
   1b7a0:	mov	fp, sp
   1b7a4:	sub	sp, sp, #8
   1b7a8:	str	r0, [sp, #4]
   1b7ac:	str	r1, [sp]
   1b7b0:	ldr	r0, [sp, #4]
   1b7b4:	ldr	r1, [sp]
   1b7b8:	bl	145a4 <__assert_fail@plt+0x34bc>
   1b7bc:	bl	18b10 <__assert_fail@plt+0x7a28>
   1b7c0:	mov	sp, fp
   1b7c4:	pop	{fp, pc}
   1b7c8:	push	{fp, lr}
   1b7cc:	mov	fp, sp
   1b7d0:	sub	sp, sp, #16
   1b7d4:	str	r0, [fp, #-4]
   1b7d8:	str	r1, [sp, #8]
   1b7dc:	ldr	r0, [sp, #8]
   1b7e0:	bl	18aec <__assert_fail@plt+0x7a04>
   1b7e4:	ldr	r1, [fp, #-4]
   1b7e8:	ldr	r2, [sp, #8]
   1b7ec:	str	r0, [sp, #4]
   1b7f0:	bl	10ee4 <memcpy@plt>
   1b7f4:	ldr	r0, [sp, #4]
   1b7f8:	mov	sp, fp
   1b7fc:	pop	{fp, pc}
   1b800:	push	{fp, lr}
   1b804:	mov	fp, sp
   1b808:	sub	sp, sp, #16
   1b80c:	str	r0, [fp, #-4]
   1b810:	str	r1, [sp, #8]
   1b814:	ldr	r0, [sp, #8]
   1b818:	bl	18b40 <__assert_fail@plt+0x7a58>
   1b81c:	ldr	r1, [fp, #-4]
   1b820:	ldr	r2, [sp, #8]
   1b824:	str	r0, [sp, #4]
   1b828:	bl	10ee4 <memcpy@plt>
   1b82c:	ldr	r0, [sp, #4]
   1b830:	mov	sp, fp
   1b834:	pop	{fp, pc}
   1b838:	push	{fp, lr}
   1b83c:	mov	fp, sp
   1b840:	sub	sp, sp, #16
   1b844:	str	r0, [fp, #-4]
   1b848:	str	r1, [sp, #8]
   1b84c:	ldr	r0, [sp, #8]
   1b850:	add	r0, r0, #1
   1b854:	bl	18b40 <__assert_fail@plt+0x7a58>
   1b858:	str	r0, [sp, #4]
   1b85c:	ldr	r0, [sp, #4]
   1b860:	ldr	r1, [sp, #8]
   1b864:	add	r0, r0, r1
   1b868:	movw	r1, #0
   1b86c:	strb	r1, [r0]
   1b870:	ldr	r0, [sp, #4]
   1b874:	ldr	r1, [fp, #-4]
   1b878:	ldr	r2, [sp, #8]
   1b87c:	str	r0, [sp]
   1b880:	bl	10ee4 <memcpy@plt>
   1b884:	ldr	r0, [sp]
   1b888:	mov	sp, fp
   1b88c:	pop	{fp, pc}
   1b890:	push	{fp, lr}
   1b894:	mov	fp, sp
   1b898:	sub	sp, sp, #8
   1b89c:	str	r0, [sp, #4]
   1b8a0:	ldr	r0, [sp, #4]
   1b8a4:	ldr	r1, [sp, #4]
   1b8a8:	str	r0, [sp]
   1b8ac:	mov	r0, r1
   1b8b0:	bl	10fec <strlen@plt>
   1b8b4:	add	r1, r0, #1
   1b8b8:	ldr	r0, [sp]
   1b8bc:	bl	1b7c8 <__assert_fail@plt+0xa6e0>
   1b8c0:	mov	sp, fp
   1b8c4:	pop	{fp, pc}
   1b8c8:	push	{fp, lr}
   1b8cc:	mov	fp, sp
   1b8d0:	sub	sp, sp, #8
   1b8d4:	movw	r0, #244	; 0xf4
   1b8d8:	movt	r0, #3
   1b8dc:	ldr	r0, [r0]
   1b8e0:	movw	r1, #63340	; 0xf76c
   1b8e4:	movt	r1, #1
   1b8e8:	str	r0, [sp, #4]
   1b8ec:	mov	r0, r1
   1b8f0:	bl	10fe0 <gettext@plt>
   1b8f4:	ldr	r1, [sp, #4]
   1b8f8:	str	r0, [sp]
   1b8fc:	mov	r0, r1
   1b900:	movw	r1, #0
   1b904:	movw	r2, #61220	; 0xef24
   1b908:	movt	r2, #1
   1b90c:	ldr	r3, [sp]
   1b910:	bl	10f80 <error@plt>
   1b914:	bl	110d0 <abort@plt>
   1b918:	bx	lr
   1b91c:	push	{fp, lr}
   1b920:	mov	fp, sp
   1b924:	sub	sp, sp, #8
   1b928:	str	r0, [sp, #4]
   1b92c:	str	r1, [sp]
   1b930:	ldr	r0, [sp, #4]
   1b934:	ldr	r1, [sp]
   1b938:	bl	1de4c <__assert_fail@plt+0xcd64>
   1b93c:	cmp	r0, #0
   1b940:	bge	1b948 <__assert_fail@plt+0xa860>
   1b944:	bl	1b918 <__assert_fail@plt+0xa830>
   1b948:	mov	sp, fp
   1b94c:	pop	{fp, pc}
   1b950:	push	{fp, lr}
   1b954:	mov	fp, sp
   1b958:	sub	sp, sp, #80	; 0x50
   1b95c:	ldr	ip, [fp, #8]
   1b960:	str	r0, [fp, #-8]
   1b964:	str	r1, [fp, #-12]
   1b968:	str	r2, [fp, #-16]
   1b96c:	str	r3, [fp, #-20]	; 0xffffffec
   1b970:	movw	r0, #0
   1b974:	str	r0, [sp, #36]	; 0x24
   1b978:	ldr	r1, [fp, #-16]
   1b97c:	cmp	r0, r1
   1b980:	str	ip, [sp, #20]
   1b984:	bgt	1b998 <__assert_fail@plt+0xa8b0>
   1b988:	ldr	r0, [fp, #-16]
   1b98c:	cmp	r0, #36	; 0x24
   1b990:	bgt	1b998 <__assert_fail@plt+0xa8b0>
   1b994:	b	1b9b8 <__assert_fail@plt+0xa8d0>
   1b998:	movw	r0, #63357	; 0xf77d
   1b99c:	movt	r0, #1
   1b9a0:	movw	r1, #63395	; 0xf7a3
   1b9a4:	movt	r1, #1
   1b9a8:	movw	r2, #85	; 0x55
   1b9ac:	movw	r3, #63411	; 0xf7b3
   1b9b0:	movt	r3, #1
   1b9b4:	bl	110e8 <__assert_fail@plt>
   1b9b8:	ldr	r0, [fp, #-12]
   1b9bc:	movw	r1, #0
   1b9c0:	cmp	r0, r1
   1b9c4:	beq	1b9d4 <__assert_fail@plt+0xa8ec>
   1b9c8:	ldr	r0, [fp, #-12]
   1b9cc:	str	r0, [sp, #16]
   1b9d0:	b	1b9e0 <__assert_fail@plt+0xa8f8>
   1b9d4:	sub	r0, fp, #24
   1b9d8:	str	r0, [sp, #16]
   1b9dc:	b	1b9e0 <__assert_fail@plt+0xa8f8>
   1b9e0:	ldr	r0, [sp, #16]
   1b9e4:	str	r0, [fp, #-28]	; 0xffffffe4
   1b9e8:	bl	11010 <__errno_location@plt>
   1b9ec:	mov	lr, #0
   1b9f0:	str	lr, [r0]
   1b9f4:	ldr	r0, [fp, #-8]
   1b9f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b9fc:	ldr	r2, [fp, #-16]
   1ba00:	bl	1104c <strtoimax@plt>
   1ba04:	str	r1, [sp, #44]	; 0x2c
   1ba08:	str	r0, [sp, #40]	; 0x28
   1ba0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ba10:	ldr	r0, [r0]
   1ba14:	ldr	r1, [fp, #-8]
   1ba18:	cmp	r0, r1
   1ba1c:	bne	1ba88 <__assert_fail@plt+0xa9a0>
   1ba20:	ldr	r0, [fp, #8]
   1ba24:	movw	r1, #0
   1ba28:	cmp	r0, r1
   1ba2c:	beq	1ba78 <__assert_fail@plt+0xa990>
   1ba30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ba34:	ldr	r0, [r0]
   1ba38:	ldrb	r0, [r0]
   1ba3c:	cmp	r0, #0
   1ba40:	beq	1ba78 <__assert_fail@plt+0xa990>
   1ba44:	ldr	r0, [fp, #8]
   1ba48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ba4c:	ldr	r1, [r1]
   1ba50:	ldrb	r1, [r1]
   1ba54:	bl	10ff8 <strchr@plt>
   1ba58:	movw	r1, #0
   1ba5c:	cmp	r0, r1
   1ba60:	beq	1ba78 <__assert_fail@plt+0xa990>
   1ba64:	mov	r0, #0
   1ba68:	str	r0, [sp, #44]	; 0x2c
   1ba6c:	mov	r0, #1
   1ba70:	str	r0, [sp, #40]	; 0x28
   1ba74:	b	1ba84 <__assert_fail@plt+0xa99c>
   1ba78:	movw	r0, #4
   1ba7c:	str	r0, [fp, #-4]
   1ba80:	b	1bf70 <__assert_fail@plt+0xae88>
   1ba84:	b	1bac0 <__assert_fail@plt+0xa9d8>
   1ba88:	bl	11010 <__errno_location@plt>
   1ba8c:	ldr	r0, [r0]
   1ba90:	cmp	r0, #0
   1ba94:	beq	1babc <__assert_fail@plt+0xa9d4>
   1ba98:	bl	11010 <__errno_location@plt>
   1ba9c:	ldr	r0, [r0]
   1baa0:	cmp	r0, #34	; 0x22
   1baa4:	beq	1bab4 <__assert_fail@plt+0xa9cc>
   1baa8:	movw	r0, #4
   1baac:	str	r0, [fp, #-4]
   1bab0:	b	1bf70 <__assert_fail@plt+0xae88>
   1bab4:	movw	r0, #1
   1bab8:	str	r0, [sp, #36]	; 0x24
   1babc:	b	1bac0 <__assert_fail@plt+0xa9d8>
   1bac0:	ldr	r0, [fp, #8]
   1bac4:	movw	r1, #0
   1bac8:	cmp	r0, r1
   1bacc:	bne	1baf0 <__assert_fail@plt+0xaa08>
   1bad0:	ldr	r0, [sp, #40]	; 0x28
   1bad4:	ldr	r1, [sp, #44]	; 0x2c
   1bad8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1badc:	str	r1, [r2, #4]
   1bae0:	str	r0, [r2]
   1bae4:	ldr	r0, [sp, #36]	; 0x24
   1bae8:	str	r0, [fp, #-4]
   1baec:	b	1bf70 <__assert_fail@plt+0xae88>
   1baf0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1baf4:	ldr	r0, [r0]
   1baf8:	ldrb	r0, [r0]
   1bafc:	cmp	r0, #0
   1bb00:	beq	1bf54 <__assert_fail@plt+0xae6c>
   1bb04:	movw	r0, #1024	; 0x400
   1bb08:	str	r0, [sp, #32]
   1bb0c:	movw	r0, #1
   1bb10:	str	r0, [sp, #28]
   1bb14:	ldr	r0, [fp, #8]
   1bb18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bb1c:	ldr	r1, [r1]
   1bb20:	ldrb	r1, [r1]
   1bb24:	bl	10ff8 <strchr@plt>
   1bb28:	movw	r1, #0
   1bb2c:	cmp	r0, r1
   1bb30:	bne	1bb58 <__assert_fail@plt+0xaa70>
   1bb34:	ldr	r0, [sp, #40]	; 0x28
   1bb38:	ldr	r1, [sp, #44]	; 0x2c
   1bb3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bb40:	str	r1, [r2, #4]
   1bb44:	str	r0, [r2]
   1bb48:	ldr	r0, [sp, #36]	; 0x24
   1bb4c:	orr	r0, r0, #2
   1bb50:	str	r0, [fp, #-4]
   1bb54:	b	1bf70 <__assert_fail@plt+0xae88>
   1bb58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bb5c:	ldr	r0, [r0]
   1bb60:	ldrb	r0, [r0]
   1bb64:	sub	r0, r0, #69	; 0x45
   1bb68:	cmp	r0, #47	; 0x2f
   1bb6c:	str	r0, [sp, #12]
   1bb70:	bhi	1bcdc <__assert_fail@plt+0xabf4>
   1bb74:	add	r0, pc, #8
   1bb78:	ldr	r1, [sp, #12]
   1bb7c:	ldr	r0, [r0, r1, lsl #2]
   1bb80:	mov	pc, r0
   1bb84:	andeq	fp, r1, r4, asr #24
   1bb88:	ldrdeq	fp, [r1], -ip
   1bb8c:	andeq	fp, r1, r4, asr #24
   1bb90:	ldrdeq	fp, [r1], -ip
   1bb94:	ldrdeq	fp, [r1], -ip
   1bb98:	ldrdeq	fp, [r1], -ip
   1bb9c:	andeq	fp, r1, r4, asr #24
   1bba0:	ldrdeq	fp, [r1], -ip
   1bba4:	andeq	fp, r1, r4, asr #24
   1bba8:	ldrdeq	fp, [r1], -ip
   1bbac:	ldrdeq	fp, [r1], -ip
   1bbb0:	andeq	fp, r1, r4, asr #24
   1bbb4:	ldrdeq	fp, [r1], -ip
   1bbb8:	ldrdeq	fp, [r1], -ip
   1bbbc:	ldrdeq	fp, [r1], -ip
   1bbc0:	andeq	fp, r1, r4, asr #24
   1bbc4:	ldrdeq	fp, [r1], -ip
   1bbc8:	ldrdeq	fp, [r1], -ip
   1bbcc:	ldrdeq	fp, [r1], -ip
   1bbd0:	ldrdeq	fp, [r1], -ip
   1bbd4:	andeq	fp, r1, r4, asr #24
   1bbd8:	andeq	fp, r1, r4, asr #24
   1bbdc:	ldrdeq	fp, [r1], -ip
   1bbe0:	ldrdeq	fp, [r1], -ip
   1bbe4:	ldrdeq	fp, [r1], -ip
   1bbe8:	ldrdeq	fp, [r1], -ip
   1bbec:	ldrdeq	fp, [r1], -ip
   1bbf0:	ldrdeq	fp, [r1], -ip
   1bbf4:	ldrdeq	fp, [r1], -ip
   1bbf8:	ldrdeq	fp, [r1], -ip
   1bbfc:	ldrdeq	fp, [r1], -ip
   1bc00:	ldrdeq	fp, [r1], -ip
   1bc04:	ldrdeq	fp, [r1], -ip
   1bc08:	ldrdeq	fp, [r1], -ip
   1bc0c:	andeq	fp, r1, r4, asr #24
   1bc10:	ldrdeq	fp, [r1], -ip
   1bc14:	ldrdeq	fp, [r1], -ip
   1bc18:	ldrdeq	fp, [r1], -ip
   1bc1c:	andeq	fp, r1, r4, asr #24
   1bc20:	ldrdeq	fp, [r1], -ip
   1bc24:	andeq	fp, r1, r4, asr #24
   1bc28:	ldrdeq	fp, [r1], -ip
   1bc2c:	ldrdeq	fp, [r1], -ip
   1bc30:	ldrdeq	fp, [r1], -ip
   1bc34:	ldrdeq	fp, [r1], -ip
   1bc38:	ldrdeq	fp, [r1], -ip
   1bc3c:	ldrdeq	fp, [r1], -ip
   1bc40:	andeq	fp, r1, r4, asr #24
   1bc44:	ldr	r0, [fp, #8]
   1bc48:	movw	r1, #48	; 0x30
   1bc4c:	bl	10ff8 <strchr@plt>
   1bc50:	movw	r1, #0
   1bc54:	cmp	r0, r1
   1bc58:	beq	1bcd8 <__assert_fail@plt+0xabf0>
   1bc5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bc60:	ldr	r0, [r0]
   1bc64:	ldrb	r0, [r0, #1]
   1bc68:	mov	r1, r0
   1bc6c:	cmp	r0, #66	; 0x42
   1bc70:	str	r1, [sp, #8]
   1bc74:	beq	1bcc0 <__assert_fail@plt+0xabd8>
   1bc78:	b	1bc7c <__assert_fail@plt+0xab94>
   1bc7c:	ldr	r0, [sp, #8]
   1bc80:	cmp	r0, #68	; 0x44
   1bc84:	beq	1bcc0 <__assert_fail@plt+0xabd8>
   1bc88:	b	1bc8c <__assert_fail@plt+0xaba4>
   1bc8c:	ldr	r0, [sp, #8]
   1bc90:	cmp	r0, #105	; 0x69
   1bc94:	bne	1bcd4 <__assert_fail@plt+0xabec>
   1bc98:	b	1bc9c <__assert_fail@plt+0xabb4>
   1bc9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bca0:	ldr	r0, [r0]
   1bca4:	ldrb	r0, [r0, #2]
   1bca8:	cmp	r0, #66	; 0x42
   1bcac:	bne	1bcbc <__assert_fail@plt+0xabd4>
   1bcb0:	ldr	r0, [sp, #28]
   1bcb4:	add	r0, r0, #2
   1bcb8:	str	r0, [sp, #28]
   1bcbc:	b	1bcd4 <__assert_fail@plt+0xabec>
   1bcc0:	movw	r0, #1000	; 0x3e8
   1bcc4:	str	r0, [sp, #32]
   1bcc8:	ldr	r0, [sp, #28]
   1bccc:	add	r0, r0, #1
   1bcd0:	str	r0, [sp, #28]
   1bcd4:	b	1bcd8 <__assert_fail@plt+0xabf0>
   1bcd8:	b	1bcdc <__assert_fail@plt+0xabf4>
   1bcdc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bce0:	ldr	r0, [r0]
   1bce4:	ldrb	r0, [r0]
   1bce8:	sub	r0, r0, #66	; 0x42
   1bcec:	cmp	r0, #53	; 0x35
   1bcf0:	str	r0, [sp, #4]
   1bcf4:	bhi	1bee8 <__assert_fail@plt+0xae00>
   1bcf8:	add	r0, pc, #8
   1bcfc:	ldr	r1, [sp, #4]
   1bd00:	ldr	r0, [r0, r1, lsl #2]
   1bd04:	mov	pc, r0
   1bd08:	strdeq	fp, [r1], -r4
   1bd0c:	andeq	fp, r1, r8, ror #29
   1bd10:	andeq	fp, r1, r8, ror #29
   1bd14:	andeq	fp, r1, r4, lsl lr
   1bd18:	andeq	fp, r1, r8, ror #29
   1bd1c:	andeq	fp, r1, ip, lsr #28
   1bd20:	andeq	fp, r1, r8, ror #29
   1bd24:	andeq	fp, r1, r8, ror #29
   1bd28:	andeq	fp, r1, r8, ror #29
   1bd2c:	andeq	fp, r1, r4, asr #28
   1bd30:	andeq	fp, r1, r8, ror #29
   1bd34:	andeq	fp, r1, ip, asr lr
   1bd38:	andeq	fp, r1, r8, ror #29
   1bd3c:	andeq	fp, r1, r8, ror #29
   1bd40:	andeq	fp, r1, r4, ror lr
   1bd44:	andeq	fp, r1, r8, ror #29
   1bd48:	andeq	fp, r1, r8, ror #29
   1bd4c:	andeq	fp, r1, r8, ror #29
   1bd50:	andeq	fp, r1, ip, lsl #29
   1bd54:	andeq	fp, r1, r8, ror #29
   1bd58:	andeq	fp, r1, r8, ror #29
   1bd5c:	andeq	fp, r1, r8, ror #29
   1bd60:	andeq	fp, r1, r8, ror #29
   1bd64:			; <UNDEFINED> instruction: 0x0001beb8
   1bd68:	ldrdeq	fp, [r1], -r0
   1bd6c:	andeq	fp, r1, r8, ror #29
   1bd70:	andeq	fp, r1, r8, ror #29
   1bd74:	andeq	fp, r1, r8, ror #29
   1bd78:	andeq	fp, r1, r8, ror #29
   1bd7c:	andeq	fp, r1, r8, ror #29
   1bd80:	andeq	fp, r1, r8, ror #29
   1bd84:	andeq	fp, r1, r8, ror #29
   1bd88:	andeq	fp, r1, r0, ror #27
   1bd8c:	andeq	fp, r1, r8, lsl #28
   1bd90:	andeq	fp, r1, r8, ror #29
   1bd94:	andeq	fp, r1, r8, ror #29
   1bd98:	andeq	fp, r1, r8, ror #29
   1bd9c:	andeq	fp, r1, ip, lsr #28
   1bda0:	andeq	fp, r1, r8, ror #29
   1bda4:	andeq	fp, r1, r8, ror #29
   1bda8:	andeq	fp, r1, r8, ror #29
   1bdac:	andeq	fp, r1, r4, asr #28
   1bdb0:	andeq	fp, r1, r8, ror #29
   1bdb4:	andeq	fp, r1, ip, asr lr
   1bdb8:	andeq	fp, r1, r8, ror #29
   1bdbc:	andeq	fp, r1, r8, ror #29
   1bdc0:	andeq	fp, r1, r8, ror #29
   1bdc4:	andeq	fp, r1, r8, ror #29
   1bdc8:	andeq	fp, r1, r8, ror #29
   1bdcc:	andeq	fp, r1, r8, ror #29
   1bdd0:	andeq	fp, r1, ip, lsl #29
   1bdd4:	andeq	fp, r1, r8, ror #29
   1bdd8:	andeq	fp, r1, r8, ror #29
   1bddc:	andeq	fp, r1, r4, lsr #29
   1bde0:	add	r0, sp, #40	; 0x28
   1bde4:	movw	r1, #512	; 0x200
   1bde8:	bl	1bf7c <__assert_fail@plt+0xae94>
   1bdec:	str	r0, [sp, #24]
   1bdf0:	b	1bf0c <__assert_fail@plt+0xae24>
   1bdf4:	add	r0, sp, #40	; 0x28
   1bdf8:	movw	r1, #1024	; 0x400
   1bdfc:	bl	1bf7c <__assert_fail@plt+0xae94>
   1be00:	str	r0, [sp, #24]
   1be04:	b	1bf0c <__assert_fail@plt+0xae24>
   1be08:	movw	r0, #0
   1be0c:	str	r0, [sp, #24]
   1be10:	b	1bf0c <__assert_fail@plt+0xae24>
   1be14:	ldr	r1, [sp, #32]
   1be18:	add	r0, sp, #40	; 0x28
   1be1c:	movw	r2, #6
   1be20:	bl	1dc24 <__assert_fail@plt+0xcb3c>
   1be24:	str	r0, [sp, #24]
   1be28:	b	1bf0c <__assert_fail@plt+0xae24>
   1be2c:	ldr	r1, [sp, #32]
   1be30:	add	r0, sp, #40	; 0x28
   1be34:	movw	r2, #3
   1be38:	bl	1dc24 <__assert_fail@plt+0xcb3c>
   1be3c:	str	r0, [sp, #24]
   1be40:	b	1bf0c <__assert_fail@plt+0xae24>
   1be44:	ldr	r1, [sp, #32]
   1be48:	add	r0, sp, #40	; 0x28
   1be4c:	movw	r2, #1
   1be50:	bl	1dc24 <__assert_fail@plt+0xcb3c>
   1be54:	str	r0, [sp, #24]
   1be58:	b	1bf0c <__assert_fail@plt+0xae24>
   1be5c:	ldr	r1, [sp, #32]
   1be60:	add	r0, sp, #40	; 0x28
   1be64:	movw	r2, #2
   1be68:	bl	1dc24 <__assert_fail@plt+0xcb3c>
   1be6c:	str	r0, [sp, #24]
   1be70:	b	1bf0c <__assert_fail@plt+0xae24>
   1be74:	ldr	r1, [sp, #32]
   1be78:	add	r0, sp, #40	; 0x28
   1be7c:	movw	r2, #5
   1be80:	bl	1dc24 <__assert_fail@plt+0xcb3c>
   1be84:	str	r0, [sp, #24]
   1be88:	b	1bf0c <__assert_fail@plt+0xae24>
   1be8c:	ldr	r1, [sp, #32]
   1be90:	add	r0, sp, #40	; 0x28
   1be94:	movw	r2, #4
   1be98:	bl	1dc24 <__assert_fail@plt+0xcb3c>
   1be9c:	str	r0, [sp, #24]
   1bea0:	b	1bf0c <__assert_fail@plt+0xae24>
   1bea4:	add	r0, sp, #40	; 0x28
   1bea8:	movw	r1, #2
   1beac:	bl	1bf7c <__assert_fail@plt+0xae94>
   1beb0:	str	r0, [sp, #24]
   1beb4:	b	1bf0c <__assert_fail@plt+0xae24>
   1beb8:	ldr	r1, [sp, #32]
   1bebc:	add	r0, sp, #40	; 0x28
   1bec0:	movw	r2, #8
   1bec4:	bl	1dc24 <__assert_fail@plt+0xcb3c>
   1bec8:	str	r0, [sp, #24]
   1becc:	b	1bf0c <__assert_fail@plt+0xae24>
   1bed0:	ldr	r1, [sp, #32]
   1bed4:	add	r0, sp, #40	; 0x28
   1bed8:	movw	r2, #7
   1bedc:	bl	1dc24 <__assert_fail@plt+0xcb3c>
   1bee0:	str	r0, [sp, #24]
   1bee4:	b	1bf0c <__assert_fail@plt+0xae24>
   1bee8:	ldr	r0, [sp, #40]	; 0x28
   1beec:	ldr	r1, [sp, #44]	; 0x2c
   1bef0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bef4:	str	r1, [r2, #4]
   1bef8:	str	r0, [r2]
   1befc:	ldr	r0, [sp, #36]	; 0x24
   1bf00:	orr	r0, r0, #2
   1bf04:	str	r0, [fp, #-4]
   1bf08:	b	1bf70 <__assert_fail@plt+0xae88>
   1bf0c:	ldr	r0, [sp, #24]
   1bf10:	ldr	r1, [sp, #36]	; 0x24
   1bf14:	orr	r0, r1, r0
   1bf18:	str	r0, [sp, #36]	; 0x24
   1bf1c:	ldr	r0, [sp, #28]
   1bf20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bf24:	ldr	r2, [r1]
   1bf28:	add	r0, r2, r0
   1bf2c:	str	r0, [r1]
   1bf30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bf34:	ldr	r0, [r0]
   1bf38:	ldrsb	r0, [r0]
   1bf3c:	cmp	r0, #0
   1bf40:	beq	1bf50 <__assert_fail@plt+0xae68>
   1bf44:	ldr	r0, [sp, #36]	; 0x24
   1bf48:	orr	r0, r0, #2
   1bf4c:	str	r0, [sp, #36]	; 0x24
   1bf50:	b	1bf54 <__assert_fail@plt+0xae6c>
   1bf54:	ldr	r0, [sp, #40]	; 0x28
   1bf58:	ldr	r1, [sp, #44]	; 0x2c
   1bf5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bf60:	str	r1, [r2, #4]
   1bf64:	str	r0, [r2]
   1bf68:	ldr	r0, [sp, #36]	; 0x24
   1bf6c:	str	r0, [fp, #-4]
   1bf70:	ldr	r0, [fp, #-4]
   1bf74:	mov	sp, fp
   1bf78:	pop	{fp, pc}
   1bf7c:	push	{fp, lr}
   1bf80:	mov	fp, sp
   1bf84:	sub	sp, sp, #752	; 0x2f0
   1bf88:	str	r0, [fp, #-8]
   1bf8c:	str	r1, [fp, #-12]
   1bf90:	b	1c518 <__assert_fail@plt+0xb430>
   1bf94:	b	1bf98 <__assert_fail@plt+0xaeb0>
   1bf98:	ldr	r0, [fp, #-12]
   1bf9c:	cmp	r0, #0
   1bfa0:	bge	1c130 <__assert_fail@plt+0xb048>
   1bfa4:	ldr	r0, [fp, #-8]
   1bfa8:	ldr	r0, [r0, #4]
   1bfac:	cmn	r0, #1
   1bfb0:	bgt	1c068 <__assert_fail@plt+0xaf80>
   1bfb4:	b	1bfb8 <__assert_fail@plt+0xaed0>
   1bfb8:	b	1bfbc <__assert_fail@plt+0xaed4>
   1bfbc:	ldr	r0, [fp, #-8]
   1bfc0:	ldr	r1, [r0]
   1bfc4:	ldr	r0, [r0, #4]
   1bfc8:	ldr	r2, [fp, #-12]
   1bfcc:	mov	r3, #127	; 0x7f
   1bfd0:	sdiv	r2, r3, r2
   1bfd4:	subs	r1, r1, r2
   1bfd8:	sbcs	r0, r0, r2, asr #31
   1bfdc:	str	r1, [fp, #-28]	; 0xffffffe4
   1bfe0:	str	r0, [fp, #-32]	; 0xffffffe0
   1bfe4:	blt	1c218 <__assert_fail@plt+0xb130>
   1bfe8:	b	1c23c <__assert_fail@plt+0xb154>
   1bfec:	b	1bff0 <__assert_fail@plt+0xaf08>
   1bff0:	ldr	r0, [pc, #4064]	; 1cfd8 <__assert_fail@plt+0xbef0>
   1bff4:	ldr	r1, [fp, #-12]
   1bff8:	cmp	r1, r0
   1bffc:	blt	1c014 <__assert_fail@plt+0xaf2c>
   1c000:	b	1c020 <__assert_fail@plt+0xaf38>
   1c004:	ldr	r0, [fp, #-12]
   1c008:	movw	r1, #0
   1c00c:	cmp	r1, r0
   1c010:	bge	1c020 <__assert_fail@plt+0xaf38>
   1c014:	movw	r0, #0
   1c018:	str	r0, [fp, #-36]	; 0xffffffdc
   1c01c:	b	1c038 <__assert_fail@plt+0xaf50>
   1c020:	ldr	r0, [fp, #-12]
   1c024:	movw	r1, #0
   1c028:	sub	r0, r1, r0
   1c02c:	movw	r1, #127	; 0x7f
   1c030:	sdiv	r0, r1, r0
   1c034:	str	r0, [fp, #-36]	; 0xffffffdc
   1c038:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c03c:	ldr	r1, [fp, #-8]
   1c040:	ldr	r2, [r1]
   1c044:	ldr	r1, [r1, #4]
   1c048:	mvn	r1, r1
   1c04c:	mvn	r2, r2
   1c050:	subs	r2, r2, r0
   1c054:	sbcs	r0, r1, r0, asr #31
   1c058:	str	r2, [fp, #-40]	; 0xffffffd8
   1c05c:	str	r0, [fp, #-44]	; 0xffffffd4
   1c060:	bge	1c218 <__assert_fail@plt+0xb130>
   1c064:	b	1c23c <__assert_fail@plt+0xb154>
   1c068:	b	1c06c <__assert_fail@plt+0xaf84>
   1c06c:	b	1c100 <__assert_fail@plt+0xb018>
   1c070:	b	1c100 <__assert_fail@plt+0xb018>
   1c074:	ldr	r0, [fp, #-12]
   1c078:	cmn	r0, #1
   1c07c:	bne	1c100 <__assert_fail@plt+0xb018>
   1c080:	b	1c084 <__assert_fail@plt+0xaf9c>
   1c084:	ldr	r0, [fp, #-8]
   1c088:	ldr	r1, [r0]
   1c08c:	ldr	r0, [r0, #4]
   1c090:	subs	r1, r1, #128	; 0x80
   1c094:	sbc	r0, r0, #0
   1c098:	rsbs	r1, r1, #0
   1c09c:	rscs	r0, r0, #0
   1c0a0:	str	r1, [fp, #-48]	; 0xffffffd0
   1c0a4:	str	r0, [fp, #-52]	; 0xffffffcc
   1c0a8:	blt	1c218 <__assert_fail@plt+0xb130>
   1c0ac:	b	1c23c <__assert_fail@plt+0xb154>
   1c0b0:	ldr	r0, [fp, #-8]
   1c0b4:	ldr	r1, [r0]
   1c0b8:	ldr	r0, [r0, #4]
   1c0bc:	subs	r1, r1, #1
   1c0c0:	sbcs	r0, r0, #0
   1c0c4:	str	r1, [fp, #-56]	; 0xffffffc8
   1c0c8:	str	r0, [fp, #-60]	; 0xffffffc4
   1c0cc:	blt	1c23c <__assert_fail@plt+0xb154>
   1c0d0:	b	1c0d4 <__assert_fail@plt+0xafec>
   1c0d4:	ldr	r0, [fp, #-8]
   1c0d8:	ldr	r1, [r0]
   1c0dc:	ldr	r0, [r0, #4]
   1c0e0:	subs	r1, r1, #1
   1c0e4:	sbc	r0, r0, #0
   1c0e8:	rsbs	r1, r1, #127	; 0x7f
   1c0ec:	rscs	r0, r0, #0
   1c0f0:	str	r1, [fp, #-64]	; 0xffffffc0
   1c0f4:	str	r0, [fp, #-68]	; 0xffffffbc
   1c0f8:	blt	1c218 <__assert_fail@plt+0xb130>
   1c0fc:	b	1c23c <__assert_fail@plt+0xb154>
   1c100:	ldr	r0, [fp, #-12]
   1c104:	mvn	r1, #127	; 0x7f
   1c108:	sdiv	r0, r1, r0
   1c10c:	ldr	r1, [fp, #-8]
   1c110:	ldr	r2, [r1]
   1c114:	ldr	r1, [r1, #4]
   1c118:	subs	r2, r0, r2
   1c11c:	rscs	r0, r1, r0, asr #31
   1c120:	str	r2, [fp, #-72]	; 0xffffffb8
   1c124:	str	r0, [fp, #-76]	; 0xffffffb4
   1c128:	blt	1c218 <__assert_fail@plt+0xb130>
   1c12c:	b	1c23c <__assert_fail@plt+0xb154>
   1c130:	ldr	r0, [fp, #-12]
   1c134:	cmp	r0, #0
   1c138:	bne	1c140 <__assert_fail@plt+0xb058>
   1c13c:	b	1c23c <__assert_fail@plt+0xb154>
   1c140:	ldr	r0, [fp, #-8]
   1c144:	ldr	r0, [r0, #4]
   1c148:	cmn	r0, #1
   1c14c:	bgt	1c1e8 <__assert_fail@plt+0xb100>
   1c150:	b	1c154 <__assert_fail@plt+0xb06c>
   1c154:	b	1c158 <__assert_fail@plt+0xb070>
   1c158:	b	1c1b4 <__assert_fail@plt+0xb0cc>
   1c15c:	b	1c1b4 <__assert_fail@plt+0xb0cc>
   1c160:	ldr	r0, [fp, #-8]
   1c164:	ldr	r1, [r0]
   1c168:	ldr	r0, [r0, #4]
   1c16c:	and	r0, r1, r0
   1c170:	cmn	r0, #1
   1c174:	bne	1c1b4 <__assert_fail@plt+0xb0cc>
   1c178:	b	1c17c <__assert_fail@plt+0xb094>
   1c17c:	b	1c180 <__assert_fail@plt+0xb098>
   1c180:	ldr	r0, [fp, #-12]
   1c184:	mvn	r1, #127	; 0x7f
   1c188:	add	r0, r0, r1
   1c18c:	movw	r1, #0
   1c190:	cmp	r1, r0
   1c194:	blt	1c218 <__assert_fail@plt+0xb130>
   1c198:	b	1c23c <__assert_fail@plt+0xb154>
   1c19c:	ldr	r0, [fp, #-12]
   1c1a0:	sub	r0, r0, #1
   1c1a4:	movw	r1, #127	; 0x7f
   1c1a8:	cmp	r1, r0
   1c1ac:	blt	1c218 <__assert_fail@plt+0xb130>
   1c1b0:	b	1c23c <__assert_fail@plt+0xb154>
   1c1b4:	ldr	r0, [fp, #-8]
   1c1b8:	ldr	r2, [r0]
   1c1bc:	ldr	r3, [r0, #4]
   1c1c0:	mvn	r0, #127	; 0x7f
   1c1c4:	mvn	r1, #0
   1c1c8:	bl	1e940 <__assert_fail@plt+0xd858>
   1c1cc:	ldr	r2, [fp, #-12]
   1c1d0:	subs	r0, r0, r2
   1c1d4:	sbcs	r1, r1, r2, asr #31
   1c1d8:	str	r0, [fp, #-80]	; 0xffffffb0
   1c1dc:	str	r1, [fp, #-84]	; 0xffffffac
   1c1e0:	blt	1c218 <__assert_fail@plt+0xb130>
   1c1e4:	b	1c23c <__assert_fail@plt+0xb154>
   1c1e8:	ldr	r0, [fp, #-12]
   1c1ec:	mov	r1, #127	; 0x7f
   1c1f0:	sdiv	r0, r1, r0
   1c1f4:	ldr	r1, [fp, #-8]
   1c1f8:	ldr	r2, [r1]
   1c1fc:	ldr	r1, [r1, #4]
   1c200:	subs	r2, r0, r2
   1c204:	rscs	r0, r1, r0, asr #31
   1c208:	str	r2, [fp, #-88]	; 0xffffffa8
   1c20c:	str	r0, [fp, #-92]	; 0xffffffa4
   1c210:	bge	1c23c <__assert_fail@plt+0xb154>
   1c214:	b	1c218 <__assert_fail@plt+0xb130>
   1c218:	ldr	r0, [fp, #-8]
   1c21c:	ldr	r0, [r0]
   1c220:	ldr	r1, [fp, #-12]
   1c224:	mul	r0, r0, r1
   1c228:	sxtb	r0, r0
   1c22c:	asr	r1, r0, #31
   1c230:	str	r0, [fp, #-24]	; 0xffffffe8
   1c234:	str	r1, [fp, #-20]	; 0xffffffec
   1c238:	b	1dbc0 <__assert_fail@plt+0xcad8>
   1c23c:	ldr	r0, [fp, #-8]
   1c240:	ldr	r0, [r0]
   1c244:	ldr	r1, [fp, #-12]
   1c248:	mul	r0, r0, r1
   1c24c:	sxtb	r0, r0
   1c250:	asr	r1, r0, #31
   1c254:	str	r0, [fp, #-24]	; 0xffffffe8
   1c258:	str	r1, [fp, #-20]	; 0xffffffec
   1c25c:	b	1dbf4 <__assert_fail@plt+0xcb0c>
   1c260:	ldr	r0, [fp, #-12]
   1c264:	cmp	r0, #0
   1c268:	bge	1c3e8 <__assert_fail@plt+0xb300>
   1c26c:	ldr	r0, [fp, #-8]
   1c270:	ldr	r0, [r0, #4]
   1c274:	cmn	r0, #1
   1c278:	bgt	1c330 <__assert_fail@plt+0xb248>
   1c27c:	b	1c280 <__assert_fail@plt+0xb198>
   1c280:	b	1c284 <__assert_fail@plt+0xb19c>
   1c284:	ldr	r0, [fp, #-8]
   1c288:	ldr	r1, [r0]
   1c28c:	ldr	r0, [r0, #4]
   1c290:	ldr	r2, [fp, #-12]
   1c294:	mov	r3, #255	; 0xff
   1c298:	sdiv	r2, r3, r2
   1c29c:	subs	r1, r1, r2
   1c2a0:	sbcs	r0, r0, r2, asr #31
   1c2a4:	str	r1, [fp, #-96]	; 0xffffffa0
   1c2a8:	str	r0, [fp, #-100]	; 0xffffff9c
   1c2ac:	blt	1c4d0 <__assert_fail@plt+0xb3e8>
   1c2b0:	b	1c4f4 <__assert_fail@plt+0xb40c>
   1c2b4:	b	1c2b8 <__assert_fail@plt+0xb1d0>
   1c2b8:	ldr	r0, [pc, #3352]	; 1cfd8 <__assert_fail@plt+0xbef0>
   1c2bc:	ldr	r1, [fp, #-12]
   1c2c0:	cmp	r1, r0
   1c2c4:	blt	1c2dc <__assert_fail@plt+0xb1f4>
   1c2c8:	b	1c2e8 <__assert_fail@plt+0xb200>
   1c2cc:	ldr	r0, [fp, #-12]
   1c2d0:	movw	r1, #0
   1c2d4:	cmp	r1, r0
   1c2d8:	bge	1c2e8 <__assert_fail@plt+0xb200>
   1c2dc:	movw	r0, #0
   1c2e0:	str	r0, [fp, #-104]	; 0xffffff98
   1c2e4:	b	1c300 <__assert_fail@plt+0xb218>
   1c2e8:	ldr	r0, [fp, #-12]
   1c2ec:	movw	r1, #0
   1c2f0:	sub	r0, r1, r0
   1c2f4:	movw	r1, #255	; 0xff
   1c2f8:	sdiv	r0, r1, r0
   1c2fc:	str	r0, [fp, #-104]	; 0xffffff98
   1c300:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c304:	ldr	r1, [fp, #-8]
   1c308:	ldr	r2, [r1]
   1c30c:	ldr	r1, [r1, #4]
   1c310:	mvn	r1, r1
   1c314:	mvn	r2, r2
   1c318:	subs	r2, r2, r0
   1c31c:	sbcs	r0, r1, r0, asr #31
   1c320:	str	r2, [fp, #-108]	; 0xffffff94
   1c324:	str	r0, [fp, #-112]	; 0xffffff90
   1c328:	bge	1c4d0 <__assert_fail@plt+0xb3e8>
   1c32c:	b	1c4f4 <__assert_fail@plt+0xb40c>
   1c330:	b	1c334 <__assert_fail@plt+0xb24c>
   1c334:	b	1c3b8 <__assert_fail@plt+0xb2d0>
   1c338:	b	1c3b8 <__assert_fail@plt+0xb2d0>
   1c33c:	ldr	r0, [fp, #-12]
   1c340:	cmn	r0, #1
   1c344:	bne	1c3b8 <__assert_fail@plt+0xb2d0>
   1c348:	b	1c34c <__assert_fail@plt+0xb264>
   1c34c:	ldr	r0, [fp, #-8]
   1c350:	ldr	r1, [r0]
   1c354:	ldr	r0, [r0, #4]
   1c358:	rsbs	r1, r1, #0
   1c35c:	rscs	r0, r0, #0
   1c360:	str	r1, [fp, #-116]	; 0xffffff8c
   1c364:	str	r0, [fp, #-120]	; 0xffffff88
   1c368:	blt	1c4d0 <__assert_fail@plt+0xb3e8>
   1c36c:	b	1c4f4 <__assert_fail@plt+0xb40c>
   1c370:	ldr	r0, [fp, #-8]
   1c374:	ldr	r1, [r0]
   1c378:	ldr	r0, [r0, #4]
   1c37c:	subs	r1, r1, #1
   1c380:	sbcs	r0, r0, #0
   1c384:	str	r1, [fp, #-124]	; 0xffffff84
   1c388:	str	r0, [fp, #-128]	; 0xffffff80
   1c38c:	blt	1c4f4 <__assert_fail@plt+0xb40c>
   1c390:	b	1c394 <__assert_fail@plt+0xb2ac>
   1c394:	ldr	r0, [fp, #-8]
   1c398:	ldr	r1, [r0]
   1c39c:	ldr	r0, [r0, #4]
   1c3a0:	subs	r1, r1, #1
   1c3a4:	sbc	r0, r0, #0
   1c3a8:	cmn	r0, #1
   1c3ac:	str	r1, [fp, #-132]	; 0xffffff7c
   1c3b0:	bgt	1c4d0 <__assert_fail@plt+0xb3e8>
   1c3b4:	b	1c4f4 <__assert_fail@plt+0xb40c>
   1c3b8:	ldr	r0, [fp, #-12]
   1c3bc:	mov	r1, #0
   1c3c0:	sdiv	r0, r1, r0
   1c3c4:	ldr	r1, [fp, #-8]
   1c3c8:	ldr	r2, [r1]
   1c3cc:	ldr	r1, [r1, #4]
   1c3d0:	subs	r2, r0, r2
   1c3d4:	rscs	r0, r1, r0, asr #31
   1c3d8:	str	r2, [fp, #-136]	; 0xffffff78
   1c3dc:	str	r0, [fp, #-140]	; 0xffffff74
   1c3e0:	blt	1c4d0 <__assert_fail@plt+0xb3e8>
   1c3e4:	b	1c4f4 <__assert_fail@plt+0xb40c>
   1c3e8:	ldr	r0, [fp, #-12]
   1c3ec:	cmp	r0, #0
   1c3f0:	bne	1c3f8 <__assert_fail@plt+0xb310>
   1c3f4:	b	1c4f4 <__assert_fail@plt+0xb40c>
   1c3f8:	ldr	r0, [fp, #-8]
   1c3fc:	ldr	r0, [r0, #4]
   1c400:	cmn	r0, #1
   1c404:	bgt	1c4a0 <__assert_fail@plt+0xb3b8>
   1c408:	b	1c40c <__assert_fail@plt+0xb324>
   1c40c:	b	1c410 <__assert_fail@plt+0xb328>
   1c410:	b	1c468 <__assert_fail@plt+0xb380>
   1c414:	b	1c468 <__assert_fail@plt+0xb380>
   1c418:	ldr	r0, [fp, #-8]
   1c41c:	ldr	r1, [r0]
   1c420:	ldr	r0, [r0, #4]
   1c424:	and	r0, r1, r0
   1c428:	cmn	r0, #1
   1c42c:	bne	1c468 <__assert_fail@plt+0xb380>
   1c430:	b	1c434 <__assert_fail@plt+0xb34c>
   1c434:	b	1c438 <__assert_fail@plt+0xb350>
   1c438:	ldr	r0, [fp, #-12]
   1c43c:	add	r0, r0, #0
   1c440:	movw	r1, #0
   1c444:	cmp	r1, r0
   1c448:	blt	1c4d0 <__assert_fail@plt+0xb3e8>
   1c44c:	b	1c4f4 <__assert_fail@plt+0xb40c>
   1c450:	ldr	r0, [fp, #-12]
   1c454:	sub	r0, r0, #1
   1c458:	mvn	r1, #0
   1c45c:	cmp	r1, r0
   1c460:	blt	1c4d0 <__assert_fail@plt+0xb3e8>
   1c464:	b	1c4f4 <__assert_fail@plt+0xb40c>
   1c468:	ldr	r0, [fp, #-8]
   1c46c:	ldr	r2, [r0]
   1c470:	ldr	r3, [r0, #4]
   1c474:	mov	r0, #0
   1c478:	str	r0, [fp, #-144]	; 0xffffff70
   1c47c:	ldr	r1, [fp, #-144]	; 0xffffff70
   1c480:	bl	1e940 <__assert_fail@plt+0xd858>
   1c484:	ldr	r2, [fp, #-12]
   1c488:	subs	r0, r0, r2
   1c48c:	sbcs	r1, r1, r2, asr #31
   1c490:	str	r0, [fp, #-148]	; 0xffffff6c
   1c494:	str	r1, [fp, #-152]	; 0xffffff68
   1c498:	blt	1c4d0 <__assert_fail@plt+0xb3e8>
   1c49c:	b	1c4f4 <__assert_fail@plt+0xb40c>
   1c4a0:	ldr	r0, [fp, #-12]
   1c4a4:	mov	r1, #255	; 0xff
   1c4a8:	sdiv	r0, r1, r0
   1c4ac:	ldr	r1, [fp, #-8]
   1c4b0:	ldr	r2, [r1]
   1c4b4:	ldr	r1, [r1, #4]
   1c4b8:	subs	r2, r0, r2
   1c4bc:	rscs	r0, r1, r0, asr #31
   1c4c0:	str	r2, [fp, #-156]	; 0xffffff64
   1c4c4:	str	r0, [fp, #-160]	; 0xffffff60
   1c4c8:	bge	1c4f4 <__assert_fail@plt+0xb40c>
   1c4cc:	b	1c4d0 <__assert_fail@plt+0xb3e8>
   1c4d0:	ldr	r0, [fp, #-8]
   1c4d4:	ldr	r0, [r0]
   1c4d8:	ldr	r1, [fp, #-12]
   1c4dc:	mul	r0, r0, r1
   1c4e0:	uxtb	r0, r0
   1c4e4:	mov	r1, #0
   1c4e8:	str	r1, [fp, #-20]	; 0xffffffec
   1c4ec:	str	r0, [fp, #-24]	; 0xffffffe8
   1c4f0:	b	1dbc0 <__assert_fail@plt+0xcad8>
   1c4f4:	ldr	r0, [fp, #-8]
   1c4f8:	ldr	r0, [r0]
   1c4fc:	ldr	r1, [fp, #-12]
   1c500:	mul	r0, r0, r1
   1c504:	uxtb	r0, r0
   1c508:	mov	r1, #0
   1c50c:	str	r1, [fp, #-20]	; 0xffffffec
   1c510:	str	r0, [fp, #-24]	; 0xffffffe8
   1c514:	b	1dbf4 <__assert_fail@plt+0xcb0c>
   1c518:	b	1caac <__assert_fail@plt+0xb9c4>
   1c51c:	b	1c520 <__assert_fail@plt+0xb438>
   1c520:	ldr	r0, [fp, #-12]
   1c524:	cmp	r0, #0
   1c528:	bge	1c6c0 <__assert_fail@plt+0xb5d8>
   1c52c:	ldr	r0, [fp, #-8]
   1c530:	ldr	r0, [r0, #4]
   1c534:	cmn	r0, #1
   1c538:	bgt	1c5f0 <__assert_fail@plt+0xb508>
   1c53c:	b	1c540 <__assert_fail@plt+0xb458>
   1c540:	b	1c544 <__assert_fail@plt+0xb45c>
   1c544:	ldr	r0, [fp, #-8]
   1c548:	ldr	r1, [r0]
   1c54c:	ldr	r0, [r0, #4]
   1c550:	ldr	r2, [fp, #-12]
   1c554:	movw	r3, #32767	; 0x7fff
   1c558:	sdiv	r2, r3, r2
   1c55c:	subs	r1, r1, r2
   1c560:	sbcs	r0, r0, r2, asr #31
   1c564:	str	r1, [fp, #-164]	; 0xffffff5c
   1c568:	str	r0, [fp, #-168]	; 0xffffff58
   1c56c:	blt	1c7ac <__assert_fail@plt+0xb6c4>
   1c570:	b	1c7d0 <__assert_fail@plt+0xb6e8>
   1c574:	b	1c578 <__assert_fail@plt+0xb490>
   1c578:	ldr	r0, [pc, #2648]	; 1cfd8 <__assert_fail@plt+0xbef0>
   1c57c:	ldr	r1, [fp, #-12]
   1c580:	cmp	r1, r0
   1c584:	blt	1c59c <__assert_fail@plt+0xb4b4>
   1c588:	b	1c5a8 <__assert_fail@plt+0xb4c0>
   1c58c:	ldr	r0, [fp, #-12]
   1c590:	movw	r1, #0
   1c594:	cmp	r1, r0
   1c598:	bge	1c5a8 <__assert_fail@plt+0xb4c0>
   1c59c:	movw	r0, #0
   1c5a0:	str	r0, [fp, #-172]	; 0xffffff54
   1c5a4:	b	1c5c0 <__assert_fail@plt+0xb4d8>
   1c5a8:	ldr	r0, [fp, #-12]
   1c5ac:	movw	r1, #0
   1c5b0:	sub	r0, r1, r0
   1c5b4:	movw	r1, #32767	; 0x7fff
   1c5b8:	sdiv	r0, r1, r0
   1c5bc:	str	r0, [fp, #-172]	; 0xffffff54
   1c5c0:	ldr	r0, [fp, #-172]	; 0xffffff54
   1c5c4:	ldr	r1, [fp, #-8]
   1c5c8:	ldr	r2, [r1]
   1c5cc:	ldr	r1, [r1, #4]
   1c5d0:	mvn	r1, r1
   1c5d4:	mvn	r2, r2
   1c5d8:	subs	r2, r2, r0
   1c5dc:	sbcs	r0, r1, r0, asr #31
   1c5e0:	str	r2, [fp, #-176]	; 0xffffff50
   1c5e4:	str	r0, [fp, #-180]	; 0xffffff4c
   1c5e8:	bge	1c7ac <__assert_fail@plt+0xb6c4>
   1c5ec:	b	1c7d0 <__assert_fail@plt+0xb6e8>
   1c5f0:	b	1c5f4 <__assert_fail@plt+0xb50c>
   1c5f4:	b	1c68c <__assert_fail@plt+0xb5a4>
   1c5f8:	b	1c68c <__assert_fail@plt+0xb5a4>
   1c5fc:	ldr	r0, [fp, #-12]
   1c600:	cmn	r0, #1
   1c604:	bne	1c68c <__assert_fail@plt+0xb5a4>
   1c608:	b	1c60c <__assert_fail@plt+0xb524>
   1c60c:	ldr	r0, [fp, #-8]
   1c610:	ldr	r1, [r0]
   1c614:	ldr	r0, [r0, #4]
   1c618:	subs	r1, r1, #32768	; 0x8000
   1c61c:	sbc	r0, r0, #0
   1c620:	rsbs	r1, r1, #0
   1c624:	rscs	r0, r0, #0
   1c628:	str	r1, [fp, #-184]	; 0xffffff48
   1c62c:	str	r0, [fp, #-188]	; 0xffffff44
   1c630:	blt	1c7ac <__assert_fail@plt+0xb6c4>
   1c634:	b	1c7d0 <__assert_fail@plt+0xb6e8>
   1c638:	ldr	r0, [fp, #-8]
   1c63c:	ldr	r1, [r0]
   1c640:	ldr	r0, [r0, #4]
   1c644:	subs	r1, r1, #1
   1c648:	sbcs	r0, r0, #0
   1c64c:	str	r1, [fp, #-192]	; 0xffffff40
   1c650:	str	r0, [fp, #-196]	; 0xffffff3c
   1c654:	blt	1c7d0 <__assert_fail@plt+0xb6e8>
   1c658:	b	1c65c <__assert_fail@plt+0xb574>
   1c65c:	ldr	r0, [fp, #-8]
   1c660:	ldr	r1, [r0]
   1c664:	ldr	r0, [r0, #4]
   1c668:	subs	r1, r1, #1
   1c66c:	sbc	r0, r0, #0
   1c670:	movw	r2, #32767	; 0x7fff
   1c674:	subs	r1, r2, r1
   1c678:	rscs	r0, r0, #0
   1c67c:	str	r1, [fp, #-200]	; 0xffffff38
   1c680:	str	r0, [fp, #-204]	; 0xffffff34
   1c684:	blt	1c7ac <__assert_fail@plt+0xb6c4>
   1c688:	b	1c7d0 <__assert_fail@plt+0xb6e8>
   1c68c:	ldr	r0, [fp, #-12]
   1c690:	movw	r1, #32768	; 0x8000
   1c694:	movt	r1, #65535	; 0xffff
   1c698:	sdiv	r0, r1, r0
   1c69c:	ldr	r1, [fp, #-8]
   1c6a0:	ldr	r2, [r1]
   1c6a4:	ldr	r1, [r1, #4]
   1c6a8:	subs	r2, r0, r2
   1c6ac:	rscs	r0, r1, r0, asr #31
   1c6b0:	str	r2, [fp, #-208]	; 0xffffff30
   1c6b4:	str	r0, [fp, #-212]	; 0xffffff2c
   1c6b8:	blt	1c7ac <__assert_fail@plt+0xb6c4>
   1c6bc:	b	1c7d0 <__assert_fail@plt+0xb6e8>
   1c6c0:	ldr	r0, [fp, #-12]
   1c6c4:	cmp	r0, #0
   1c6c8:	bne	1c6d0 <__assert_fail@plt+0xb5e8>
   1c6cc:	b	1c7d0 <__assert_fail@plt+0xb6e8>
   1c6d0:	ldr	r0, [fp, #-8]
   1c6d4:	ldr	r0, [r0, #4]
   1c6d8:	cmn	r0, #1
   1c6dc:	bgt	1c77c <__assert_fail@plt+0xb694>
   1c6e0:	b	1c6e4 <__assert_fail@plt+0xb5fc>
   1c6e4:	b	1c6e8 <__assert_fail@plt+0xb600>
   1c6e8:	b	1c744 <__assert_fail@plt+0xb65c>
   1c6ec:	b	1c744 <__assert_fail@plt+0xb65c>
   1c6f0:	ldr	r0, [fp, #-8]
   1c6f4:	ldr	r1, [r0]
   1c6f8:	ldr	r0, [r0, #4]
   1c6fc:	and	r0, r1, r0
   1c700:	cmn	r0, #1
   1c704:	bne	1c744 <__assert_fail@plt+0xb65c>
   1c708:	b	1c70c <__assert_fail@plt+0xb624>
   1c70c:	b	1c710 <__assert_fail@plt+0xb628>
   1c710:	ldr	r0, [pc, #4088]	; 1d710 <__assert_fail@plt+0xc628>
   1c714:	ldr	r1, [fp, #-12]
   1c718:	add	r0, r1, r0
   1c71c:	movw	r1, #0
   1c720:	cmp	r1, r0
   1c724:	blt	1c7ac <__assert_fail@plt+0xb6c4>
   1c728:	b	1c7d0 <__assert_fail@plt+0xb6e8>
   1c72c:	ldr	r0, [fp, #-12]
   1c730:	sub	r0, r0, #1
   1c734:	movw	r1, #32767	; 0x7fff
   1c738:	cmp	r1, r0
   1c73c:	blt	1c7ac <__assert_fail@plt+0xb6c4>
   1c740:	b	1c7d0 <__assert_fail@plt+0xb6e8>
   1c744:	ldr	r0, [fp, #-8]
   1c748:	ldr	r2, [r0]
   1c74c:	ldr	r3, [r0, #4]
   1c750:	movw	r0, #32768	; 0x8000
   1c754:	movt	r0, #65535	; 0xffff
   1c758:	mvn	r1, #0
   1c75c:	bl	1e940 <__assert_fail@plt+0xd858>
   1c760:	ldr	r2, [fp, #-12]
   1c764:	subs	r0, r0, r2
   1c768:	sbcs	r1, r1, r2, asr #31
   1c76c:	str	r0, [fp, #-216]	; 0xffffff28
   1c770:	str	r1, [fp, #-220]	; 0xffffff24
   1c774:	blt	1c7ac <__assert_fail@plt+0xb6c4>
   1c778:	b	1c7d0 <__assert_fail@plt+0xb6e8>
   1c77c:	ldr	r0, [fp, #-12]
   1c780:	movw	r1, #32767	; 0x7fff
   1c784:	sdiv	r0, r1, r0
   1c788:	ldr	r1, [fp, #-8]
   1c78c:	ldr	r2, [r1]
   1c790:	ldr	r1, [r1, #4]
   1c794:	subs	r2, r0, r2
   1c798:	rscs	r0, r1, r0, asr #31
   1c79c:	str	r2, [fp, #-224]	; 0xffffff20
   1c7a0:	str	r0, [fp, #-228]	; 0xffffff1c
   1c7a4:	bge	1c7d0 <__assert_fail@plt+0xb6e8>
   1c7a8:	b	1c7ac <__assert_fail@plt+0xb6c4>
   1c7ac:	ldr	r0, [fp, #-8]
   1c7b0:	ldr	r0, [r0]
   1c7b4:	ldr	r1, [fp, #-12]
   1c7b8:	mul	r0, r0, r1
   1c7bc:	sxth	r0, r0
   1c7c0:	asr	r1, r0, #31
   1c7c4:	str	r0, [fp, #-24]	; 0xffffffe8
   1c7c8:	str	r1, [fp, #-20]	; 0xffffffec
   1c7cc:	b	1dbc0 <__assert_fail@plt+0xcad8>
   1c7d0:	ldr	r0, [fp, #-8]
   1c7d4:	ldr	r0, [r0]
   1c7d8:	ldr	r1, [fp, #-12]
   1c7dc:	mul	r0, r0, r1
   1c7e0:	sxth	r0, r0
   1c7e4:	asr	r1, r0, #31
   1c7e8:	str	r0, [fp, #-24]	; 0xffffffe8
   1c7ec:	str	r1, [fp, #-20]	; 0xffffffec
   1c7f0:	b	1dbf4 <__assert_fail@plt+0xcb0c>
   1c7f4:	ldr	r0, [fp, #-12]
   1c7f8:	cmp	r0, #0
   1c7fc:	bge	1c97c <__assert_fail@plt+0xb894>
   1c800:	ldr	r0, [fp, #-8]
   1c804:	ldr	r0, [r0, #4]
   1c808:	cmn	r0, #1
   1c80c:	bgt	1c8c4 <__assert_fail@plt+0xb7dc>
   1c810:	b	1c814 <__assert_fail@plt+0xb72c>
   1c814:	b	1c818 <__assert_fail@plt+0xb730>
   1c818:	ldr	r0, [fp, #-8]
   1c81c:	ldr	r1, [r0]
   1c820:	ldr	r0, [r0, #4]
   1c824:	ldr	r2, [fp, #-12]
   1c828:	movw	r3, #65535	; 0xffff
   1c82c:	sdiv	r2, r3, r2
   1c830:	subs	r1, r1, r2
   1c834:	sbcs	r0, r0, r2, asr #31
   1c838:	str	r1, [fp, #-232]	; 0xffffff18
   1c83c:	str	r0, [fp, #-236]	; 0xffffff14
   1c840:	blt	1ca64 <__assert_fail@plt+0xb97c>
   1c844:	b	1ca88 <__assert_fail@plt+0xb9a0>
   1c848:	b	1c84c <__assert_fail@plt+0xb764>
   1c84c:	ldr	r0, [pc, #1924]	; 1cfd8 <__assert_fail@plt+0xbef0>
   1c850:	ldr	r1, [fp, #-12]
   1c854:	cmp	r1, r0
   1c858:	blt	1c870 <__assert_fail@plt+0xb788>
   1c85c:	b	1c87c <__assert_fail@plt+0xb794>
   1c860:	ldr	r0, [fp, #-12]
   1c864:	movw	r1, #0
   1c868:	cmp	r1, r0
   1c86c:	bge	1c87c <__assert_fail@plt+0xb794>
   1c870:	movw	r0, #0
   1c874:	str	r0, [fp, #-240]	; 0xffffff10
   1c878:	b	1c894 <__assert_fail@plt+0xb7ac>
   1c87c:	ldr	r0, [fp, #-12]
   1c880:	movw	r1, #0
   1c884:	sub	r0, r1, r0
   1c888:	movw	r1, #65535	; 0xffff
   1c88c:	sdiv	r0, r1, r0
   1c890:	str	r0, [fp, #-240]	; 0xffffff10
   1c894:	ldr	r0, [fp, #-240]	; 0xffffff10
   1c898:	ldr	r1, [fp, #-8]
   1c89c:	ldr	r2, [r1]
   1c8a0:	ldr	r1, [r1, #4]
   1c8a4:	mvn	r1, r1
   1c8a8:	mvn	r2, r2
   1c8ac:	subs	r2, r2, r0
   1c8b0:	sbcs	r0, r1, r0, asr #31
   1c8b4:	str	r2, [fp, #-244]	; 0xffffff0c
   1c8b8:	str	r0, [fp, #-248]	; 0xffffff08
   1c8bc:	bge	1ca64 <__assert_fail@plt+0xb97c>
   1c8c0:	b	1ca88 <__assert_fail@plt+0xb9a0>
   1c8c4:	b	1c8c8 <__assert_fail@plt+0xb7e0>
   1c8c8:	b	1c94c <__assert_fail@plt+0xb864>
   1c8cc:	b	1c94c <__assert_fail@plt+0xb864>
   1c8d0:	ldr	r0, [fp, #-12]
   1c8d4:	cmn	r0, #1
   1c8d8:	bne	1c94c <__assert_fail@plt+0xb864>
   1c8dc:	b	1c8e0 <__assert_fail@plt+0xb7f8>
   1c8e0:	ldr	r0, [fp, #-8]
   1c8e4:	ldr	r1, [r0]
   1c8e8:	ldr	r0, [r0, #4]
   1c8ec:	rsbs	r1, r1, #0
   1c8f0:	rscs	r0, r0, #0
   1c8f4:	str	r1, [fp, #-252]	; 0xffffff04
   1c8f8:	str	r0, [fp, #-256]	; 0xffffff00
   1c8fc:	blt	1ca64 <__assert_fail@plt+0xb97c>
   1c900:	b	1ca88 <__assert_fail@plt+0xb9a0>
   1c904:	ldr	r0, [fp, #-8]
   1c908:	ldr	r1, [r0]
   1c90c:	ldr	r0, [r0, #4]
   1c910:	subs	r1, r1, #1
   1c914:	sbcs	r0, r0, #0
   1c918:	str	r1, [fp, #-260]	; 0xfffffefc
   1c91c:	str	r0, [fp, #-264]	; 0xfffffef8
   1c920:	blt	1ca88 <__assert_fail@plt+0xb9a0>
   1c924:	b	1c928 <__assert_fail@plt+0xb840>
   1c928:	ldr	r0, [fp, #-8]
   1c92c:	ldr	r1, [r0]
   1c930:	ldr	r0, [r0, #4]
   1c934:	subs	r1, r1, #1
   1c938:	sbc	r0, r0, #0
   1c93c:	cmn	r0, #1
   1c940:	str	r1, [fp, #-268]	; 0xfffffef4
   1c944:	bgt	1ca64 <__assert_fail@plt+0xb97c>
   1c948:	b	1ca88 <__assert_fail@plt+0xb9a0>
   1c94c:	ldr	r0, [fp, #-12]
   1c950:	mov	r1, #0
   1c954:	sdiv	r0, r1, r0
   1c958:	ldr	r1, [fp, #-8]
   1c95c:	ldr	r2, [r1]
   1c960:	ldr	r1, [r1, #4]
   1c964:	subs	r2, r0, r2
   1c968:	rscs	r0, r1, r0, asr #31
   1c96c:	str	r2, [fp, #-272]	; 0xfffffef0
   1c970:	str	r0, [fp, #-276]	; 0xfffffeec
   1c974:	blt	1ca64 <__assert_fail@plt+0xb97c>
   1c978:	b	1ca88 <__assert_fail@plt+0xb9a0>
   1c97c:	ldr	r0, [fp, #-12]
   1c980:	cmp	r0, #0
   1c984:	bne	1c98c <__assert_fail@plt+0xb8a4>
   1c988:	b	1ca88 <__assert_fail@plt+0xb9a0>
   1c98c:	ldr	r0, [fp, #-8]
   1c990:	ldr	r0, [r0, #4]
   1c994:	cmn	r0, #1
   1c998:	bgt	1ca34 <__assert_fail@plt+0xb94c>
   1c99c:	b	1c9a0 <__assert_fail@plt+0xb8b8>
   1c9a0:	b	1c9a4 <__assert_fail@plt+0xb8bc>
   1c9a4:	b	1c9fc <__assert_fail@plt+0xb914>
   1c9a8:	b	1c9fc <__assert_fail@plt+0xb914>
   1c9ac:	ldr	r0, [fp, #-8]
   1c9b0:	ldr	r1, [r0]
   1c9b4:	ldr	r0, [r0, #4]
   1c9b8:	and	r0, r1, r0
   1c9bc:	cmn	r0, #1
   1c9c0:	bne	1c9fc <__assert_fail@plt+0xb914>
   1c9c4:	b	1c9c8 <__assert_fail@plt+0xb8e0>
   1c9c8:	b	1c9cc <__assert_fail@plt+0xb8e4>
   1c9cc:	ldr	r0, [fp, #-12]
   1c9d0:	add	r0, r0, #0
   1c9d4:	movw	r1, #0
   1c9d8:	cmp	r1, r0
   1c9dc:	blt	1ca64 <__assert_fail@plt+0xb97c>
   1c9e0:	b	1ca88 <__assert_fail@plt+0xb9a0>
   1c9e4:	ldr	r0, [fp, #-12]
   1c9e8:	sub	r0, r0, #1
   1c9ec:	mvn	r1, #0
   1c9f0:	cmp	r1, r0
   1c9f4:	blt	1ca64 <__assert_fail@plt+0xb97c>
   1c9f8:	b	1ca88 <__assert_fail@plt+0xb9a0>
   1c9fc:	ldr	r0, [fp, #-8]
   1ca00:	ldr	r2, [r0]
   1ca04:	ldr	r3, [r0, #4]
   1ca08:	mov	r0, #0
   1ca0c:	str	r0, [fp, #-280]	; 0xfffffee8
   1ca10:	ldr	r1, [fp, #-280]	; 0xfffffee8
   1ca14:	bl	1e940 <__assert_fail@plt+0xd858>
   1ca18:	ldr	r2, [fp, #-12]
   1ca1c:	subs	r0, r0, r2
   1ca20:	sbcs	r1, r1, r2, asr #31
   1ca24:	str	r0, [fp, #-284]	; 0xfffffee4
   1ca28:	str	r1, [fp, #-288]	; 0xfffffee0
   1ca2c:	blt	1ca64 <__assert_fail@plt+0xb97c>
   1ca30:	b	1ca88 <__assert_fail@plt+0xb9a0>
   1ca34:	ldr	r0, [fp, #-12]
   1ca38:	movw	r1, #65535	; 0xffff
   1ca3c:	sdiv	r0, r1, r0
   1ca40:	ldr	r1, [fp, #-8]
   1ca44:	ldr	r2, [r1]
   1ca48:	ldr	r1, [r1, #4]
   1ca4c:	subs	r2, r0, r2
   1ca50:	rscs	r0, r1, r0, asr #31
   1ca54:	str	r2, [fp, #-292]	; 0xfffffedc
   1ca58:	str	r0, [fp, #-296]	; 0xfffffed8
   1ca5c:	bge	1ca88 <__assert_fail@plt+0xb9a0>
   1ca60:	b	1ca64 <__assert_fail@plt+0xb97c>
   1ca64:	ldr	r0, [fp, #-8]
   1ca68:	ldr	r0, [r0]
   1ca6c:	ldr	r1, [fp, #-12]
   1ca70:	mul	r0, r0, r1
   1ca74:	uxth	r0, r0
   1ca78:	mov	r1, #0
   1ca7c:	str	r1, [fp, #-20]	; 0xffffffec
   1ca80:	str	r0, [fp, #-24]	; 0xffffffe8
   1ca84:	b	1dbc0 <__assert_fail@plt+0xcad8>
   1ca88:	ldr	r0, [fp, #-8]
   1ca8c:	ldr	r0, [r0]
   1ca90:	ldr	r1, [fp, #-12]
   1ca94:	mul	r0, r0, r1
   1ca98:	uxth	r0, r0
   1ca9c:	mov	r1, #0
   1caa0:	str	r1, [fp, #-20]	; 0xffffffec
   1caa4:	str	r0, [fp, #-24]	; 0xffffffe8
   1caa8:	b	1dbf4 <__assert_fail@plt+0xcb0c>
   1caac:	b	1d01c <__assert_fail@plt+0xbf34>
   1cab0:	b	1cab4 <__assert_fail@plt+0xb9cc>
   1cab4:	ldr	r0, [fp, #-12]
   1cab8:	cmp	r0, #0
   1cabc:	bge	1cc44 <__assert_fail@plt+0xbb5c>
   1cac0:	ldr	r0, [fp, #-8]
   1cac4:	ldr	r0, [r0, #4]
   1cac8:	cmn	r0, #1
   1cacc:	bgt	1cb84 <__assert_fail@plt+0xba9c>
   1cad0:	b	1cad4 <__assert_fail@plt+0xb9ec>
   1cad4:	b	1cad8 <__assert_fail@plt+0xb9f0>
   1cad8:	ldr	r0, [fp, #-8]
   1cadc:	ldr	r1, [r0]
   1cae0:	ldr	r0, [r0, #4]
   1cae4:	ldr	r2, [fp, #-12]
   1cae8:	mvn	r3, #-2147483648	; 0x80000000
   1caec:	sdiv	r2, r3, r2
   1caf0:	subs	r1, r1, r2
   1caf4:	sbcs	r0, r0, r2, asr #31
   1caf8:	str	r1, [fp, #-300]	; 0xfffffed4
   1cafc:	str	r0, [fp, #-304]	; 0xfffffed0
   1cb00:	blt	1cd28 <__assert_fail@plt+0xbc40>
   1cb04:	b	1cd48 <__assert_fail@plt+0xbc60>
   1cb08:	b	1cb0c <__assert_fail@plt+0xba24>
   1cb0c:	ldr	r0, [pc, #1220]	; 1cfd8 <__assert_fail@plt+0xbef0>
   1cb10:	ldr	r1, [fp, #-12]
   1cb14:	cmp	r1, r0
   1cb18:	blt	1cb30 <__assert_fail@plt+0xba48>
   1cb1c:	b	1cb3c <__assert_fail@plt+0xba54>
   1cb20:	ldr	r0, [fp, #-12]
   1cb24:	movw	r1, #0
   1cb28:	cmp	r1, r0
   1cb2c:	bge	1cb3c <__assert_fail@plt+0xba54>
   1cb30:	movw	r0, #0
   1cb34:	str	r0, [fp, #-308]	; 0xfffffecc
   1cb38:	b	1cb54 <__assert_fail@plt+0xba6c>
   1cb3c:	ldr	r0, [pc, #4064]	; 1db24 <__assert_fail@plt+0xca3c>
   1cb40:	ldr	r1, [fp, #-12]
   1cb44:	movw	r2, #0
   1cb48:	sub	r1, r2, r1
   1cb4c:	sdiv	r0, r0, r1
   1cb50:	str	r0, [fp, #-308]	; 0xfffffecc
   1cb54:	ldr	r0, [fp, #-308]	; 0xfffffecc
   1cb58:	ldr	r1, [fp, #-8]
   1cb5c:	ldr	r2, [r1]
   1cb60:	ldr	r1, [r1, #4]
   1cb64:	mvn	r1, r1
   1cb68:	mvn	r2, r2
   1cb6c:	subs	r2, r2, r0
   1cb70:	sbcs	r0, r1, r0, asr #31
   1cb74:	str	r2, [fp, #-312]	; 0xfffffec8
   1cb78:	str	r0, [fp, #-316]	; 0xfffffec4
   1cb7c:	bge	1cd28 <__assert_fail@plt+0xbc40>
   1cb80:	b	1cd48 <__assert_fail@plt+0xbc60>
   1cb84:	ldr	r0, [fp, #-12]
   1cb88:	cmn	r0, #1
   1cb8c:	bne	1cc14 <__assert_fail@plt+0xbb2c>
   1cb90:	b	1cb94 <__assert_fail@plt+0xbaac>
   1cb94:	ldr	r0, [fp, #-8]
   1cb98:	ldr	r1, [r0]
   1cb9c:	ldr	r0, [r0, #4]
   1cba0:	adds	r1, r1, #-2147483648	; 0x80000000
   1cba4:	sbc	r0, r0, #0
   1cba8:	rsbs	r1, r1, #0
   1cbac:	rscs	r0, r0, #0
   1cbb0:	str	r1, [fp, #-320]	; 0xfffffec0
   1cbb4:	str	r0, [fp, #-324]	; 0xfffffebc
   1cbb8:	blt	1cd28 <__assert_fail@plt+0xbc40>
   1cbbc:	b	1cd48 <__assert_fail@plt+0xbc60>
   1cbc0:	ldr	r0, [fp, #-8]
   1cbc4:	ldr	r1, [r0]
   1cbc8:	ldr	r0, [r0, #4]
   1cbcc:	subs	r1, r1, #1
   1cbd0:	sbcs	r0, r0, #0
   1cbd4:	str	r1, [fp, #-328]	; 0xfffffeb8
   1cbd8:	str	r0, [fp, #-332]	; 0xfffffeb4
   1cbdc:	blt	1cd48 <__assert_fail@plt+0xbc60>
   1cbe0:	b	1cbe4 <__assert_fail@plt+0xbafc>
   1cbe4:	ldr	r0, [fp, #-8]
   1cbe8:	ldr	r1, [r0]
   1cbec:	ldr	r0, [r0, #4]
   1cbf0:	subs	r1, r1, #1
   1cbf4:	sbc	r0, r0, #0
   1cbf8:	mvn	r2, #-2147483648	; 0x80000000
   1cbfc:	subs	r1, r2, r1
   1cc00:	rscs	r0, r0, #0
   1cc04:	str	r1, [fp, #-336]	; 0xfffffeb0
   1cc08:	str	r0, [fp, #-340]	; 0xfffffeac
   1cc0c:	blt	1cd28 <__assert_fail@plt+0xbc40>
   1cc10:	b	1cd48 <__assert_fail@plt+0xbc60>
   1cc14:	ldr	r0, [fp, #-12]
   1cc18:	mov	r1, #-2147483648	; 0x80000000
   1cc1c:	sdiv	r0, r1, r0
   1cc20:	ldr	r1, [fp, #-8]
   1cc24:	ldr	r2, [r1]
   1cc28:	ldr	r1, [r1, #4]
   1cc2c:	subs	r2, r0, r2
   1cc30:	rscs	r0, r1, r0, asr #31
   1cc34:	str	r2, [fp, #-344]	; 0xfffffea8
   1cc38:	str	r0, [fp, #-348]	; 0xfffffea4
   1cc3c:	blt	1cd28 <__assert_fail@plt+0xbc40>
   1cc40:	b	1cd48 <__assert_fail@plt+0xbc60>
   1cc44:	ldr	r0, [fp, #-12]
   1cc48:	cmp	r0, #0
   1cc4c:	bne	1cc54 <__assert_fail@plt+0xbb6c>
   1cc50:	b	1cd48 <__assert_fail@plt+0xbc60>
   1cc54:	ldr	r0, [fp, #-8]
   1cc58:	ldr	r0, [r0, #4]
   1cc5c:	cmn	r0, #1
   1cc60:	bgt	1ccf8 <__assert_fail@plt+0xbc10>
   1cc64:	b	1cc68 <__assert_fail@plt+0xbb80>
   1cc68:	b	1cc6c <__assert_fail@plt+0xbb84>
   1cc6c:	b	1ccc4 <__assert_fail@plt+0xbbdc>
   1cc70:	b	1ccc4 <__assert_fail@plt+0xbbdc>
   1cc74:	ldr	r0, [fp, #-8]
   1cc78:	ldr	r1, [r0]
   1cc7c:	ldr	r0, [r0, #4]
   1cc80:	and	r0, r1, r0
   1cc84:	cmn	r0, #1
   1cc88:	bne	1ccc4 <__assert_fail@plt+0xbbdc>
   1cc8c:	b	1cc90 <__assert_fail@plt+0xbba8>
   1cc90:	b	1cc94 <__assert_fail@plt+0xbbac>
   1cc94:	ldr	r0, [fp, #-12]
   1cc98:	add	r0, r0, #-2147483648	; 0x80000000
   1cc9c:	movw	r1, #0
   1cca0:	cmp	r1, r0
   1cca4:	blt	1cd28 <__assert_fail@plt+0xbc40>
   1cca8:	b	1cd48 <__assert_fail@plt+0xbc60>
   1ccac:	ldr	r0, [pc, #3948]	; 1dc20 <__assert_fail@plt+0xcb38>
   1ccb0:	ldr	r1, [fp, #-12]
   1ccb4:	sub	r1, r1, #1
   1ccb8:	cmp	r0, r1
   1ccbc:	blt	1cd28 <__assert_fail@plt+0xbc40>
   1ccc0:	b	1cd48 <__assert_fail@plt+0xbc60>
   1ccc4:	ldr	r0, [fp, #-8]
   1ccc8:	ldr	r2, [r0]
   1cccc:	ldr	r3, [r0, #4]
   1ccd0:	mov	r0, #-2147483648	; 0x80000000
   1ccd4:	mvn	r1, #0
   1ccd8:	bl	1e940 <__assert_fail@plt+0xd858>
   1ccdc:	ldr	r2, [fp, #-12]
   1cce0:	subs	r0, r0, r2
   1cce4:	sbcs	r1, r1, r2, asr #31
   1cce8:	str	r0, [fp, #-352]	; 0xfffffea0
   1ccec:	str	r1, [fp, #-356]	; 0xfffffe9c
   1ccf0:	blt	1cd28 <__assert_fail@plt+0xbc40>
   1ccf4:	b	1cd48 <__assert_fail@plt+0xbc60>
   1ccf8:	ldr	r0, [fp, #-12]
   1ccfc:	mvn	r1, #-2147483648	; 0x80000000
   1cd00:	sdiv	r0, r1, r0
   1cd04:	ldr	r1, [fp, #-8]
   1cd08:	ldr	r2, [r1]
   1cd0c:	ldr	r1, [r1, #4]
   1cd10:	subs	r2, r0, r2
   1cd14:	rscs	r0, r1, r0, asr #31
   1cd18:	str	r2, [fp, #-360]	; 0xfffffe98
   1cd1c:	str	r0, [fp, #-364]	; 0xfffffe94
   1cd20:	bge	1cd48 <__assert_fail@plt+0xbc60>
   1cd24:	b	1cd28 <__assert_fail@plt+0xbc40>
   1cd28:	ldr	r0, [fp, #-8]
   1cd2c:	ldr	r0, [r0]
   1cd30:	ldr	r1, [fp, #-12]
   1cd34:	mul	r0, r0, r1
   1cd38:	asr	r1, r0, #31
   1cd3c:	str	r0, [fp, #-24]	; 0xffffffe8
   1cd40:	str	r1, [fp, #-20]	; 0xffffffec
   1cd44:	b	1dbc0 <__assert_fail@plt+0xcad8>
   1cd48:	ldr	r0, [fp, #-8]
   1cd4c:	ldr	r0, [r0]
   1cd50:	ldr	r1, [fp, #-12]
   1cd54:	mul	r0, r0, r1
   1cd58:	asr	r1, r0, #31
   1cd5c:	str	r0, [fp, #-24]	; 0xffffffe8
   1cd60:	str	r1, [fp, #-20]	; 0xffffffec
   1cd64:	b	1dbf4 <__assert_fail@plt+0xcb0c>
   1cd68:	ldr	r0, [fp, #-12]
   1cd6c:	cmp	r0, #0
   1cd70:	bge	1cef0 <__assert_fail@plt+0xbe08>
   1cd74:	ldr	r0, [fp, #-8]
   1cd78:	ldr	r0, [r0, #4]
   1cd7c:	cmn	r0, #1
   1cd80:	bgt	1ce38 <__assert_fail@plt+0xbd50>
   1cd84:	b	1cd88 <__assert_fail@plt+0xbca0>
   1cd88:	b	1cdbc <__assert_fail@plt+0xbcd4>
   1cd8c:	ldr	r0, [fp, #-8]
   1cd90:	ldr	r1, [r0]
   1cd94:	ldr	r0, [r0, #4]
   1cd98:	ldr	r2, [fp, #-12]
   1cd9c:	mvn	r3, #0
   1cda0:	udiv	r2, r3, r2
   1cda4:	subs	r1, r1, r2
   1cda8:	sbcs	r0, r0, #0
   1cdac:	str	r1, [fp, #-368]	; 0xfffffe90
   1cdb0:	str	r0, [fp, #-372]	; 0xfffffe8c
   1cdb4:	blt	1cfdc <__assert_fail@plt+0xbef4>
   1cdb8:	b	1cffc <__assert_fail@plt+0xbf14>
   1cdbc:	b	1cdc0 <__assert_fail@plt+0xbcd8>
   1cdc0:	ldr	r0, [pc, #3668]	; 1dc1c <__assert_fail@plt+0xcb34>
   1cdc4:	ldr	r1, [fp, #-12]
   1cdc8:	cmp	r1, r0
   1cdcc:	blt	1cde4 <__assert_fail@plt+0xbcfc>
   1cdd0:	b	1cdf0 <__assert_fail@plt+0xbd08>
   1cdd4:	ldr	r0, [fp, #-12]
   1cdd8:	movw	r1, #0
   1cddc:	cmp	r1, r0
   1cde0:	bge	1cdf0 <__assert_fail@plt+0xbd08>
   1cde4:	movw	r0, #1
   1cde8:	str	r0, [sp, #376]	; 0x178
   1cdec:	b	1ce08 <__assert_fail@plt+0xbd20>
   1cdf0:	ldr	r0, [fp, #-12]
   1cdf4:	movw	r1, #0
   1cdf8:	sub	r0, r1, r0
   1cdfc:	mvn	r1, #0
   1ce00:	udiv	r0, r1, r0
   1ce04:	str	r0, [sp, #376]	; 0x178
   1ce08:	ldr	r0, [sp, #376]	; 0x178
   1ce0c:	ldr	r1, [fp, #-8]
   1ce10:	ldr	r2, [r1]
   1ce14:	ldr	r1, [r1, #4]
   1ce18:	mvn	r1, r1
   1ce1c:	mvn	r2, r2
   1ce20:	subs	r0, r2, r0
   1ce24:	sbcs	r1, r1, #0
   1ce28:	str	r0, [sp, #372]	; 0x174
   1ce2c:	str	r1, [sp, #368]	; 0x170
   1ce30:	bge	1cfdc <__assert_fail@plt+0xbef4>
   1ce34:	b	1cffc <__assert_fail@plt+0xbf14>
   1ce38:	b	1ce3c <__assert_fail@plt+0xbd54>
   1ce3c:	b	1cec0 <__assert_fail@plt+0xbdd8>
   1ce40:	b	1cec0 <__assert_fail@plt+0xbdd8>
   1ce44:	ldr	r0, [fp, #-12]
   1ce48:	cmn	r0, #1
   1ce4c:	bne	1cec0 <__assert_fail@plt+0xbdd8>
   1ce50:	b	1ce54 <__assert_fail@plt+0xbd6c>
   1ce54:	ldr	r0, [fp, #-8]
   1ce58:	ldr	r1, [r0]
   1ce5c:	ldr	r0, [r0, #4]
   1ce60:	rsbs	r1, r1, #0
   1ce64:	rscs	r0, r0, #0
   1ce68:	str	r1, [sp, #364]	; 0x16c
   1ce6c:	str	r0, [sp, #360]	; 0x168
   1ce70:	blt	1cfdc <__assert_fail@plt+0xbef4>
   1ce74:	b	1cffc <__assert_fail@plt+0xbf14>
   1ce78:	ldr	r0, [fp, #-8]
   1ce7c:	ldr	r1, [r0]
   1ce80:	ldr	r0, [r0, #4]
   1ce84:	subs	r1, r1, #1
   1ce88:	sbcs	r0, r0, #0
   1ce8c:	str	r1, [sp, #356]	; 0x164
   1ce90:	str	r0, [sp, #352]	; 0x160
   1ce94:	blt	1cffc <__assert_fail@plt+0xbf14>
   1ce98:	b	1ce9c <__assert_fail@plt+0xbdb4>
   1ce9c:	ldr	r0, [fp, #-8]
   1cea0:	ldr	r1, [r0]
   1cea4:	ldr	r0, [r0, #4]
   1cea8:	subs	r1, r1, #1
   1ceac:	sbc	r0, r0, #0
   1ceb0:	cmn	r0, #1
   1ceb4:	str	r1, [sp, #348]	; 0x15c
   1ceb8:	bgt	1cfdc <__assert_fail@plt+0xbef4>
   1cebc:	b	1cffc <__assert_fail@plt+0xbf14>
   1cec0:	ldr	r0, [fp, #-12]
   1cec4:	mov	r1, #0
   1cec8:	sdiv	r0, r1, r0
   1cecc:	ldr	r1, [fp, #-8]
   1ced0:	ldr	r2, [r1]
   1ced4:	ldr	r1, [r1, #4]
   1ced8:	subs	r2, r0, r2
   1cedc:	rscs	r0, r1, r0, asr #31
   1cee0:	str	r2, [sp, #344]	; 0x158
   1cee4:	str	r0, [sp, #340]	; 0x154
   1cee8:	blt	1cfdc <__assert_fail@plt+0xbef4>
   1ceec:	b	1cffc <__assert_fail@plt+0xbf14>
   1cef0:	ldr	r0, [fp, #-12]
   1cef4:	cmp	r0, #0
   1cef8:	bne	1cf00 <__assert_fail@plt+0xbe18>
   1cefc:	b	1cffc <__assert_fail@plt+0xbf14>
   1cf00:	ldr	r0, [fp, #-8]
   1cf04:	ldr	r0, [r0, #4]
   1cf08:	cmn	r0, #1
   1cf0c:	bgt	1cfa8 <__assert_fail@plt+0xbec0>
   1cf10:	b	1cf14 <__assert_fail@plt+0xbe2c>
   1cf14:	b	1cf18 <__assert_fail@plt+0xbe30>
   1cf18:	b	1cf70 <__assert_fail@plt+0xbe88>
   1cf1c:	b	1cf70 <__assert_fail@plt+0xbe88>
   1cf20:	ldr	r0, [fp, #-8]
   1cf24:	ldr	r1, [r0]
   1cf28:	ldr	r0, [r0, #4]
   1cf2c:	and	r0, r1, r0
   1cf30:	cmn	r0, #1
   1cf34:	bne	1cf70 <__assert_fail@plt+0xbe88>
   1cf38:	b	1cf3c <__assert_fail@plt+0xbe54>
   1cf3c:	b	1cf40 <__assert_fail@plt+0xbe58>
   1cf40:	ldr	r0, [fp, #-12]
   1cf44:	add	r0, r0, #0
   1cf48:	movw	r1, #0
   1cf4c:	cmp	r1, r0
   1cf50:	blt	1cfdc <__assert_fail@plt+0xbef4>
   1cf54:	b	1cffc <__assert_fail@plt+0xbf14>
   1cf58:	ldr	r0, [fp, #-12]
   1cf5c:	sub	r0, r0, #1
   1cf60:	mvn	r1, #0
   1cf64:	cmp	r1, r0
   1cf68:	blt	1cfdc <__assert_fail@plt+0xbef4>
   1cf6c:	b	1cffc <__assert_fail@plt+0xbf14>
   1cf70:	ldr	r0, [fp, #-8]
   1cf74:	ldr	r2, [r0]
   1cf78:	ldr	r3, [r0, #4]
   1cf7c:	mov	r0, #0
   1cf80:	str	r0, [sp, #336]	; 0x150
   1cf84:	ldr	r1, [sp, #336]	; 0x150
   1cf88:	bl	1e940 <__assert_fail@plt+0xd858>
   1cf8c:	ldr	r2, [fp, #-12]
   1cf90:	subs	r0, r0, r2
   1cf94:	sbcs	r1, r1, r2, asr #31
   1cf98:	str	r0, [sp, #332]	; 0x14c
   1cf9c:	str	r1, [sp, #328]	; 0x148
   1cfa0:	blt	1cfdc <__assert_fail@plt+0xbef4>
   1cfa4:	b	1cffc <__assert_fail@plt+0xbf14>
   1cfa8:	ldr	r0, [fp, #-12]
   1cfac:	mvn	r1, #0
   1cfb0:	udiv	r0, r1, r0
   1cfb4:	ldr	r1, [fp, #-8]
   1cfb8:	ldr	r2, [r1]
   1cfbc:	ldr	r1, [r1, #4]
   1cfc0:	subs	r0, r0, r2
   1cfc4:	rscs	r1, r1, #0
   1cfc8:	str	r0, [sp, #324]	; 0x144
   1cfcc:	str	r1, [sp, #320]	; 0x140
   1cfd0:	bge	1cffc <__assert_fail@plt+0xbf14>
   1cfd4:	b	1cfdc <__assert_fail@plt+0xbef4>
   1cfd8:	andhi	r0, r0, r1
   1cfdc:	ldr	r0, [fp, #-8]
   1cfe0:	ldr	r0, [r0]
   1cfe4:	ldr	r1, [fp, #-12]
   1cfe8:	mul	r0, r0, r1
   1cfec:	mov	r1, #0
   1cff0:	str	r1, [fp, #-20]	; 0xffffffec
   1cff4:	str	r0, [fp, #-24]	; 0xffffffe8
   1cff8:	b	1dbc0 <__assert_fail@plt+0xcad8>
   1cffc:	ldr	r0, [fp, #-8]
   1d000:	ldr	r0, [r0]
   1d004:	ldr	r1, [fp, #-12]
   1d008:	mul	r0, r0, r1
   1d00c:	mov	r1, #0
   1d010:	str	r1, [fp, #-20]	; 0xffffffec
   1d014:	str	r0, [fp, #-24]	; 0xffffffe8
   1d018:	b	1dbf4 <__assert_fail@plt+0xcb0c>
   1d01c:	b	1d588 <__assert_fail@plt+0xc4a0>
   1d020:	b	1d024 <__assert_fail@plt+0xbf3c>
   1d024:	ldr	r0, [fp, #-12]
   1d028:	cmp	r0, #0
   1d02c:	bge	1d1b4 <__assert_fail@plt+0xc0cc>
   1d030:	ldr	r0, [fp, #-8]
   1d034:	ldr	r0, [r0, #4]
   1d038:	cmn	r0, #1
   1d03c:	bgt	1d0f4 <__assert_fail@plt+0xc00c>
   1d040:	b	1d044 <__assert_fail@plt+0xbf5c>
   1d044:	b	1d048 <__assert_fail@plt+0xbf60>
   1d048:	ldr	r0, [fp, #-8]
   1d04c:	ldr	r1, [r0]
   1d050:	ldr	r0, [r0, #4]
   1d054:	ldr	r2, [fp, #-12]
   1d058:	mvn	r3, #-2147483648	; 0x80000000
   1d05c:	sdiv	r2, r3, r2
   1d060:	subs	r1, r1, r2
   1d064:	sbcs	r0, r0, r2, asr #31
   1d068:	str	r1, [sp, #316]	; 0x13c
   1d06c:	str	r0, [sp, #312]	; 0x138
   1d070:	blt	1d298 <__assert_fail@plt+0xc1b0>
   1d074:	b	1d2b8 <__assert_fail@plt+0xc1d0>
   1d078:	b	1d07c <__assert_fail@plt+0xbf94>
   1d07c:	ldr	r0, [pc, #2968]	; 1dc1c <__assert_fail@plt+0xcb34>
   1d080:	ldr	r1, [fp, #-12]
   1d084:	cmp	r1, r0
   1d088:	blt	1d0a0 <__assert_fail@plt+0xbfb8>
   1d08c:	b	1d0ac <__assert_fail@plt+0xbfc4>
   1d090:	ldr	r0, [fp, #-12]
   1d094:	movw	r1, #0
   1d098:	cmp	r1, r0
   1d09c:	bge	1d0ac <__assert_fail@plt+0xbfc4>
   1d0a0:	movw	r0, #0
   1d0a4:	str	r0, [sp, #308]	; 0x134
   1d0a8:	b	1d0c4 <__assert_fail@plt+0xbfdc>
   1d0ac:	ldr	r0, [pc, #2924]	; 1dc20 <__assert_fail@plt+0xcb38>
   1d0b0:	ldr	r1, [fp, #-12]
   1d0b4:	movw	r2, #0
   1d0b8:	sub	r1, r2, r1
   1d0bc:	sdiv	r0, r0, r1
   1d0c0:	str	r0, [sp, #308]	; 0x134
   1d0c4:	ldr	r0, [sp, #308]	; 0x134
   1d0c8:	ldr	r1, [fp, #-8]
   1d0cc:	ldr	r2, [r1]
   1d0d0:	ldr	r1, [r1, #4]
   1d0d4:	mvn	r1, r1
   1d0d8:	mvn	r2, r2
   1d0dc:	subs	r2, r2, r0
   1d0e0:	sbcs	r0, r1, r0, asr #31
   1d0e4:	str	r2, [sp, #304]	; 0x130
   1d0e8:	str	r0, [sp, #300]	; 0x12c
   1d0ec:	bge	1d298 <__assert_fail@plt+0xc1b0>
   1d0f0:	b	1d2b8 <__assert_fail@plt+0xc1d0>
   1d0f4:	ldr	r0, [fp, #-12]
   1d0f8:	cmn	r0, #1
   1d0fc:	bne	1d184 <__assert_fail@plt+0xc09c>
   1d100:	b	1d104 <__assert_fail@plt+0xc01c>
   1d104:	ldr	r0, [fp, #-8]
   1d108:	ldr	r1, [r0]
   1d10c:	ldr	r0, [r0, #4]
   1d110:	adds	r1, r1, #-2147483648	; 0x80000000
   1d114:	sbc	r0, r0, #0
   1d118:	rsbs	r1, r1, #0
   1d11c:	rscs	r0, r0, #0
   1d120:	str	r1, [sp, #296]	; 0x128
   1d124:	str	r0, [sp, #292]	; 0x124
   1d128:	blt	1d298 <__assert_fail@plt+0xc1b0>
   1d12c:	b	1d2b8 <__assert_fail@plt+0xc1d0>
   1d130:	ldr	r0, [fp, #-8]
   1d134:	ldr	r1, [r0]
   1d138:	ldr	r0, [r0, #4]
   1d13c:	subs	r1, r1, #1
   1d140:	sbcs	r0, r0, #0
   1d144:	str	r1, [sp, #288]	; 0x120
   1d148:	str	r0, [sp, #284]	; 0x11c
   1d14c:	blt	1d2b8 <__assert_fail@plt+0xc1d0>
   1d150:	b	1d154 <__assert_fail@plt+0xc06c>
   1d154:	ldr	r0, [fp, #-8]
   1d158:	ldr	r1, [r0]
   1d15c:	ldr	r0, [r0, #4]
   1d160:	subs	r1, r1, #1
   1d164:	sbc	r0, r0, #0
   1d168:	mvn	r2, #-2147483648	; 0x80000000
   1d16c:	subs	r1, r2, r1
   1d170:	rscs	r0, r0, #0
   1d174:	str	r1, [sp, #280]	; 0x118
   1d178:	str	r0, [sp, #276]	; 0x114
   1d17c:	blt	1d298 <__assert_fail@plt+0xc1b0>
   1d180:	b	1d2b8 <__assert_fail@plt+0xc1d0>
   1d184:	ldr	r0, [fp, #-12]
   1d188:	mov	r1, #-2147483648	; 0x80000000
   1d18c:	sdiv	r0, r1, r0
   1d190:	ldr	r1, [fp, #-8]
   1d194:	ldr	r2, [r1]
   1d198:	ldr	r1, [r1, #4]
   1d19c:	subs	r2, r0, r2
   1d1a0:	rscs	r0, r1, r0, asr #31
   1d1a4:	str	r2, [sp, #272]	; 0x110
   1d1a8:	str	r0, [sp, #268]	; 0x10c
   1d1ac:	blt	1d298 <__assert_fail@plt+0xc1b0>
   1d1b0:	b	1d2b8 <__assert_fail@plt+0xc1d0>
   1d1b4:	ldr	r0, [fp, #-12]
   1d1b8:	cmp	r0, #0
   1d1bc:	bne	1d1c4 <__assert_fail@plt+0xc0dc>
   1d1c0:	b	1d2b8 <__assert_fail@plt+0xc1d0>
   1d1c4:	ldr	r0, [fp, #-8]
   1d1c8:	ldr	r0, [r0, #4]
   1d1cc:	cmn	r0, #1
   1d1d0:	bgt	1d268 <__assert_fail@plt+0xc180>
   1d1d4:	b	1d1d8 <__assert_fail@plt+0xc0f0>
   1d1d8:	b	1d1dc <__assert_fail@plt+0xc0f4>
   1d1dc:	b	1d234 <__assert_fail@plt+0xc14c>
   1d1e0:	b	1d234 <__assert_fail@plt+0xc14c>
   1d1e4:	ldr	r0, [fp, #-8]
   1d1e8:	ldr	r1, [r0]
   1d1ec:	ldr	r0, [r0, #4]
   1d1f0:	and	r0, r1, r0
   1d1f4:	cmn	r0, #1
   1d1f8:	bne	1d234 <__assert_fail@plt+0xc14c>
   1d1fc:	b	1d200 <__assert_fail@plt+0xc118>
   1d200:	b	1d204 <__assert_fail@plt+0xc11c>
   1d204:	ldr	r0, [fp, #-12]
   1d208:	add	r0, r0, #-2147483648	; 0x80000000
   1d20c:	movw	r1, #0
   1d210:	cmp	r1, r0
   1d214:	blt	1d298 <__assert_fail@plt+0xc1b0>
   1d218:	b	1d2b8 <__assert_fail@plt+0xc1d0>
   1d21c:	ldr	r0, [pc, #2556]	; 1dc20 <__assert_fail@plt+0xcb38>
   1d220:	ldr	r1, [fp, #-12]
   1d224:	sub	r1, r1, #1
   1d228:	cmp	r0, r1
   1d22c:	blt	1d298 <__assert_fail@plt+0xc1b0>
   1d230:	b	1d2b8 <__assert_fail@plt+0xc1d0>
   1d234:	ldr	r0, [fp, #-8]
   1d238:	ldr	r2, [r0]
   1d23c:	ldr	r3, [r0, #4]
   1d240:	mov	r0, #-2147483648	; 0x80000000
   1d244:	mvn	r1, #0
   1d248:	bl	1e940 <__assert_fail@plt+0xd858>
   1d24c:	ldr	r2, [fp, #-12]
   1d250:	subs	r0, r0, r2
   1d254:	sbcs	r1, r1, r2, asr #31
   1d258:	str	r0, [sp, #264]	; 0x108
   1d25c:	str	r1, [sp, #260]	; 0x104
   1d260:	blt	1d298 <__assert_fail@plt+0xc1b0>
   1d264:	b	1d2b8 <__assert_fail@plt+0xc1d0>
   1d268:	ldr	r0, [fp, #-12]
   1d26c:	mvn	r1, #-2147483648	; 0x80000000
   1d270:	sdiv	r0, r1, r0
   1d274:	ldr	r1, [fp, #-8]
   1d278:	ldr	r2, [r1]
   1d27c:	ldr	r1, [r1, #4]
   1d280:	subs	r2, r0, r2
   1d284:	rscs	r0, r1, r0, asr #31
   1d288:	str	r2, [sp, #256]	; 0x100
   1d28c:	str	r0, [sp, #252]	; 0xfc
   1d290:	bge	1d2b8 <__assert_fail@plt+0xc1d0>
   1d294:	b	1d298 <__assert_fail@plt+0xc1b0>
   1d298:	ldr	r0, [fp, #-8]
   1d29c:	ldr	r0, [r0]
   1d2a0:	ldr	r1, [fp, #-12]
   1d2a4:	mul	r0, r0, r1
   1d2a8:	asr	r1, r0, #31
   1d2ac:	str	r0, [fp, #-24]	; 0xffffffe8
   1d2b0:	str	r1, [fp, #-20]	; 0xffffffec
   1d2b4:	b	1dbc0 <__assert_fail@plt+0xcad8>
   1d2b8:	ldr	r0, [fp, #-8]
   1d2bc:	ldr	r0, [r0]
   1d2c0:	ldr	r1, [fp, #-12]
   1d2c4:	mul	r0, r0, r1
   1d2c8:	asr	r1, r0, #31
   1d2cc:	str	r0, [fp, #-24]	; 0xffffffe8
   1d2d0:	str	r1, [fp, #-20]	; 0xffffffec
   1d2d4:	b	1dbf4 <__assert_fail@plt+0xcb0c>
   1d2d8:	ldr	r0, [fp, #-12]
   1d2dc:	cmp	r0, #0
   1d2e0:	bge	1d460 <__assert_fail@plt+0xc378>
   1d2e4:	ldr	r0, [fp, #-8]
   1d2e8:	ldr	r0, [r0, #4]
   1d2ec:	cmn	r0, #1
   1d2f0:	bgt	1d3a8 <__assert_fail@plt+0xc2c0>
   1d2f4:	b	1d2f8 <__assert_fail@plt+0xc210>
   1d2f8:	b	1d32c <__assert_fail@plt+0xc244>
   1d2fc:	ldr	r0, [fp, #-8]
   1d300:	ldr	r1, [r0]
   1d304:	ldr	r0, [r0, #4]
   1d308:	ldr	r2, [fp, #-12]
   1d30c:	mvn	r3, #0
   1d310:	udiv	r2, r3, r2
   1d314:	subs	r1, r1, r2
   1d318:	sbcs	r0, r0, #0
   1d31c:	str	r1, [sp, #248]	; 0xf8
   1d320:	str	r0, [sp, #244]	; 0xf4
   1d324:	blt	1d548 <__assert_fail@plt+0xc460>
   1d328:	b	1d568 <__assert_fail@plt+0xc480>
   1d32c:	b	1d330 <__assert_fail@plt+0xc248>
   1d330:	ldr	r0, [pc, #2276]	; 1dc1c <__assert_fail@plt+0xcb34>
   1d334:	ldr	r1, [fp, #-12]
   1d338:	cmp	r1, r0
   1d33c:	blt	1d354 <__assert_fail@plt+0xc26c>
   1d340:	b	1d360 <__assert_fail@plt+0xc278>
   1d344:	ldr	r0, [fp, #-12]
   1d348:	movw	r1, #0
   1d34c:	cmp	r1, r0
   1d350:	bge	1d360 <__assert_fail@plt+0xc278>
   1d354:	movw	r0, #1
   1d358:	str	r0, [sp, #240]	; 0xf0
   1d35c:	b	1d378 <__assert_fail@plt+0xc290>
   1d360:	ldr	r0, [fp, #-12]
   1d364:	movw	r1, #0
   1d368:	sub	r0, r1, r0
   1d36c:	mvn	r1, #0
   1d370:	udiv	r0, r1, r0
   1d374:	str	r0, [sp, #240]	; 0xf0
   1d378:	ldr	r0, [sp, #240]	; 0xf0
   1d37c:	ldr	r1, [fp, #-8]
   1d380:	ldr	r2, [r1]
   1d384:	ldr	r1, [r1, #4]
   1d388:	mvn	r1, r1
   1d38c:	mvn	r2, r2
   1d390:	subs	r0, r2, r0
   1d394:	sbcs	r1, r1, #0
   1d398:	str	r0, [sp, #236]	; 0xec
   1d39c:	str	r1, [sp, #232]	; 0xe8
   1d3a0:	bge	1d548 <__assert_fail@plt+0xc460>
   1d3a4:	b	1d568 <__assert_fail@plt+0xc480>
   1d3a8:	b	1d3ac <__assert_fail@plt+0xc2c4>
   1d3ac:	b	1d430 <__assert_fail@plt+0xc348>
   1d3b0:	b	1d430 <__assert_fail@plt+0xc348>
   1d3b4:	ldr	r0, [fp, #-12]
   1d3b8:	cmn	r0, #1
   1d3bc:	bne	1d430 <__assert_fail@plt+0xc348>
   1d3c0:	b	1d3c4 <__assert_fail@plt+0xc2dc>
   1d3c4:	ldr	r0, [fp, #-8]
   1d3c8:	ldr	r1, [r0]
   1d3cc:	ldr	r0, [r0, #4]
   1d3d0:	rsbs	r1, r1, #0
   1d3d4:	rscs	r0, r0, #0
   1d3d8:	str	r1, [sp, #228]	; 0xe4
   1d3dc:	str	r0, [sp, #224]	; 0xe0
   1d3e0:	blt	1d548 <__assert_fail@plt+0xc460>
   1d3e4:	b	1d568 <__assert_fail@plt+0xc480>
   1d3e8:	ldr	r0, [fp, #-8]
   1d3ec:	ldr	r1, [r0]
   1d3f0:	ldr	r0, [r0, #4]
   1d3f4:	subs	r1, r1, #1
   1d3f8:	sbcs	r0, r0, #0
   1d3fc:	str	r1, [sp, #220]	; 0xdc
   1d400:	str	r0, [sp, #216]	; 0xd8
   1d404:	blt	1d568 <__assert_fail@plt+0xc480>
   1d408:	b	1d40c <__assert_fail@plt+0xc324>
   1d40c:	ldr	r0, [fp, #-8]
   1d410:	ldr	r1, [r0]
   1d414:	ldr	r0, [r0, #4]
   1d418:	subs	r1, r1, #1
   1d41c:	sbc	r0, r0, #0
   1d420:	cmn	r0, #1
   1d424:	str	r1, [sp, #212]	; 0xd4
   1d428:	bgt	1d548 <__assert_fail@plt+0xc460>
   1d42c:	b	1d568 <__assert_fail@plt+0xc480>
   1d430:	ldr	r0, [fp, #-12]
   1d434:	mov	r1, #0
   1d438:	sdiv	r0, r1, r0
   1d43c:	ldr	r1, [fp, #-8]
   1d440:	ldr	r2, [r1]
   1d444:	ldr	r1, [r1, #4]
   1d448:	subs	r2, r0, r2
   1d44c:	rscs	r0, r1, r0, asr #31
   1d450:	str	r2, [sp, #208]	; 0xd0
   1d454:	str	r0, [sp, #204]	; 0xcc
   1d458:	blt	1d548 <__assert_fail@plt+0xc460>
   1d45c:	b	1d568 <__assert_fail@plt+0xc480>
   1d460:	ldr	r0, [fp, #-12]
   1d464:	cmp	r0, #0
   1d468:	bne	1d470 <__assert_fail@plt+0xc388>
   1d46c:	b	1d568 <__assert_fail@plt+0xc480>
   1d470:	ldr	r0, [fp, #-8]
   1d474:	ldr	r0, [r0, #4]
   1d478:	cmn	r0, #1
   1d47c:	bgt	1d518 <__assert_fail@plt+0xc430>
   1d480:	b	1d484 <__assert_fail@plt+0xc39c>
   1d484:	b	1d488 <__assert_fail@plt+0xc3a0>
   1d488:	b	1d4e0 <__assert_fail@plt+0xc3f8>
   1d48c:	b	1d4e0 <__assert_fail@plt+0xc3f8>
   1d490:	ldr	r0, [fp, #-8]
   1d494:	ldr	r1, [r0]
   1d498:	ldr	r0, [r0, #4]
   1d49c:	and	r0, r1, r0
   1d4a0:	cmn	r0, #1
   1d4a4:	bne	1d4e0 <__assert_fail@plt+0xc3f8>
   1d4a8:	b	1d4ac <__assert_fail@plt+0xc3c4>
   1d4ac:	b	1d4b0 <__assert_fail@plt+0xc3c8>
   1d4b0:	ldr	r0, [fp, #-12]
   1d4b4:	add	r0, r0, #0
   1d4b8:	movw	r1, #0
   1d4bc:	cmp	r1, r0
   1d4c0:	blt	1d548 <__assert_fail@plt+0xc460>
   1d4c4:	b	1d568 <__assert_fail@plt+0xc480>
   1d4c8:	ldr	r0, [fp, #-12]
   1d4cc:	sub	r0, r0, #1
   1d4d0:	mvn	r1, #0
   1d4d4:	cmp	r1, r0
   1d4d8:	blt	1d548 <__assert_fail@plt+0xc460>
   1d4dc:	b	1d568 <__assert_fail@plt+0xc480>
   1d4e0:	ldr	r0, [fp, #-8]
   1d4e4:	ldr	r2, [r0]
   1d4e8:	ldr	r3, [r0, #4]
   1d4ec:	mov	r0, #0
   1d4f0:	str	r0, [sp, #200]	; 0xc8
   1d4f4:	ldr	r1, [sp, #200]	; 0xc8
   1d4f8:	bl	1e940 <__assert_fail@plt+0xd858>
   1d4fc:	ldr	r2, [fp, #-12]
   1d500:	subs	r0, r0, r2
   1d504:	sbcs	r1, r1, r2, asr #31
   1d508:	str	r0, [sp, #196]	; 0xc4
   1d50c:	str	r1, [sp, #192]	; 0xc0
   1d510:	blt	1d548 <__assert_fail@plt+0xc460>
   1d514:	b	1d568 <__assert_fail@plt+0xc480>
   1d518:	ldr	r0, [fp, #-12]
   1d51c:	mvn	r1, #0
   1d520:	udiv	r0, r1, r0
   1d524:	ldr	r1, [fp, #-8]
   1d528:	ldr	r2, [r1]
   1d52c:	ldr	r1, [r1, #4]
   1d530:	subs	r0, r0, r2
   1d534:	rscs	r1, r1, #0
   1d538:	str	r0, [sp, #188]	; 0xbc
   1d53c:	str	r1, [sp, #184]	; 0xb8
   1d540:	bge	1d568 <__assert_fail@plt+0xc480>
   1d544:	b	1d548 <__assert_fail@plt+0xc460>
   1d548:	ldr	r0, [fp, #-8]
   1d54c:	ldr	r0, [r0]
   1d550:	ldr	r1, [fp, #-12]
   1d554:	mul	r0, r0, r1
   1d558:	mov	r1, #0
   1d55c:	str	r1, [fp, #-20]	; 0xffffffec
   1d560:	str	r0, [fp, #-24]	; 0xffffffe8
   1d564:	b	1dbc0 <__assert_fail@plt+0xcad8>
   1d568:	ldr	r0, [fp, #-8]
   1d56c:	ldr	r0, [r0]
   1d570:	ldr	r1, [fp, #-12]
   1d574:	mul	r0, r0, r1
   1d578:	mov	r1, #0
   1d57c:	str	r1, [fp, #-20]	; 0xffffffec
   1d580:	str	r0, [fp, #-24]	; 0xffffffe8
   1d584:	b	1dbf4 <__assert_fail@plt+0xcb0c>
   1d588:	b	1d58c <__assert_fail@plt+0xc4a4>
   1d58c:	ldr	r0, [fp, #-12]
   1d590:	cmp	r0, #0
   1d594:	bge	1d75c <__assert_fail@plt+0xc674>
   1d598:	ldr	r0, [fp, #-8]
   1d59c:	ldr	r0, [r0, #4]
   1d5a0:	cmn	r0, #1
   1d5a4:	bgt	1d6a4 <__assert_fail@plt+0xc5bc>
   1d5a8:	b	1d5ac <__assert_fail@plt+0xc4c4>
   1d5ac:	b	1d5b0 <__assert_fail@plt+0xc4c8>
   1d5b0:	ldr	r0, [fp, #-8]
   1d5b4:	ldr	r1, [r0]
   1d5b8:	ldr	r0, [r0, #4]
   1d5bc:	ldr	r2, [fp, #-12]
   1d5c0:	asr	r3, r2, #31
   1d5c4:	mvn	ip, #0
   1d5c8:	mvn	lr, #-2147483648	; 0x80000000
   1d5cc:	str	r0, [sp, #180]	; 0xb4
   1d5d0:	mov	r0, ip
   1d5d4:	str	r1, [sp, #176]	; 0xb0
   1d5d8:	mov	r1, lr
   1d5dc:	bl	1e940 <__assert_fail@plt+0xd858>
   1d5e0:	ldr	r2, [sp, #176]	; 0xb0
   1d5e4:	subs	r0, r2, r0
   1d5e8:	ldr	r2, [sp, #180]	; 0xb4
   1d5ec:	sbcs	r1, r2, r1
   1d5f0:	str	r0, [sp, #172]	; 0xac
   1d5f4:	str	r1, [sp, #168]	; 0xa8
   1d5f8:	blt	1d850 <__assert_fail@plt+0xc768>
   1d5fc:	b	1d87c <__assert_fail@plt+0xc794>
   1d600:	b	1d604 <__assert_fail@plt+0xc51c>
   1d604:	ldr	r0, [pc, #1552]	; 1dc1c <__assert_fail@plt+0xcb34>
   1d608:	ldr	r1, [fp, #-12]
   1d60c:	cmp	r1, r0
   1d610:	blt	1d628 <__assert_fail@plt+0xc540>
   1d614:	b	1d63c <__assert_fail@plt+0xc554>
   1d618:	ldr	r0, [fp, #-12]
   1d61c:	movw	r1, #0
   1d620:	cmp	r1, r0
   1d624:	bge	1d63c <__assert_fail@plt+0xc554>
   1d628:	mov	r0, #0
   1d62c:	mvn	r1, #0
   1d630:	str	r1, [sp, #164]	; 0xa4
   1d634:	str	r0, [sp, #160]	; 0xa0
   1d638:	b	1d670 <__assert_fail@plt+0xc588>
   1d63c:	ldr	r0, [fp, #-12]
   1d640:	rsb	r0, r0, #0
   1d644:	asr	r3, r0, #31
   1d648:	mvn	r1, #0
   1d64c:	mvn	r2, #-2147483648	; 0x80000000
   1d650:	str	r0, [sp, #156]	; 0x9c
   1d654:	mov	r0, r1
   1d658:	mov	r1, r2
   1d65c:	ldr	r2, [sp, #156]	; 0x9c
   1d660:	bl	1e940 <__assert_fail@plt+0xd858>
   1d664:	str	r0, [sp, #164]	; 0xa4
   1d668:	str	r1, [sp, #160]	; 0xa0
   1d66c:	b	1d670 <__assert_fail@plt+0xc588>
   1d670:	ldr	r0, [sp, #160]	; 0xa0
   1d674:	ldr	r1, [sp, #164]	; 0xa4
   1d678:	ldr	r2, [fp, #-8]
   1d67c:	ldr	r3, [r2]
   1d680:	ldr	r2, [r2, #4]
   1d684:	mvn	r2, r2
   1d688:	mvn	r3, r3
   1d68c:	subs	r1, r3, r1
   1d690:	sbcs	r0, r2, r0
   1d694:	str	r1, [sp, #152]	; 0x98
   1d698:	str	r0, [sp, #148]	; 0x94
   1d69c:	bge	1d850 <__assert_fail@plt+0xc768>
   1d6a0:	b	1d87c <__assert_fail@plt+0xc794>
   1d6a4:	ldr	r0, [fp, #-12]
   1d6a8:	cmn	r0, #1
   1d6ac:	bne	1d714 <__assert_fail@plt+0xc62c>
   1d6b0:	b	1d6b4 <__assert_fail@plt+0xc5cc>
   1d6b4:	ldr	r0, [fp, #-8]
   1d6b8:	ldr	r1, [r0]
   1d6bc:	ldr	r0, [r0, #4]
   1d6c0:	add	r0, r0, #-2147483648	; 0x80000000
   1d6c4:	rsbs	r1, r1, #0
   1d6c8:	rscs	r0, r0, #0
   1d6cc:	str	r1, [sp, #144]	; 0x90
   1d6d0:	str	r0, [sp, #140]	; 0x8c
   1d6d4:	blt	1d850 <__assert_fail@plt+0xc768>
   1d6d8:	b	1d87c <__assert_fail@plt+0xc794>
   1d6dc:	ldr	r0, [fp, #-8]
   1d6e0:	ldr	r1, [r0]
   1d6e4:	ldr	r0, [r0, #4]
   1d6e8:	subs	r1, r1, #1
   1d6ec:	sbcs	r0, r0, #0
   1d6f0:	str	r1, [sp, #136]	; 0x88
   1d6f4:	str	r0, [sp, #132]	; 0x84
   1d6f8:	blt	1d87c <__assert_fail@plt+0xc794>
   1d6fc:	b	1d700 <__assert_fail@plt+0xc618>
   1d700:	mov	r0, #0
   1d704:	cmp	r0, #0
   1d708:	bne	1d850 <__assert_fail@plt+0xc768>
   1d70c:	b	1d87c <__assert_fail@plt+0xc794>
   1d710:			; <UNDEFINED> instruction: 0xffff8000
   1d714:	ldr	r0, [fp, #-12]
   1d718:	asr	r3, r0, #31
   1d71c:	mov	r1, #0
   1d720:	mov	r2, #-2147483648	; 0x80000000
   1d724:	str	r0, [sp, #128]	; 0x80
   1d728:	mov	r0, r1
   1d72c:	mov	r1, r2
   1d730:	ldr	r2, [sp, #128]	; 0x80
   1d734:	bl	1e940 <__assert_fail@plt+0xd858>
   1d738:	ldr	r2, [fp, #-8]
   1d73c:	ldr	r3, [r2]
   1d740:	ldr	r2, [r2, #4]
   1d744:	subs	r0, r0, r3
   1d748:	sbcs	r1, r1, r2
   1d74c:	str	r0, [sp, #124]	; 0x7c
   1d750:	str	r1, [sp, #120]	; 0x78
   1d754:	blt	1d850 <__assert_fail@plt+0xc768>
   1d758:	b	1d87c <__assert_fail@plt+0xc794>
   1d75c:	ldr	r0, [fp, #-12]
   1d760:	cmp	r0, #0
   1d764:	bne	1d76c <__assert_fail@plt+0xc684>
   1d768:	b	1d87c <__assert_fail@plt+0xc794>
   1d76c:	ldr	r0, [fp, #-8]
   1d770:	ldr	r0, [r0, #4]
   1d774:	cmn	r0, #1
   1d778:	bgt	1d808 <__assert_fail@plt+0xc720>
   1d77c:	b	1d780 <__assert_fail@plt+0xc698>
   1d780:	ldr	r0, [fp, #-8]
   1d784:	ldr	r1, [r0]
   1d788:	ldr	r0, [r0, #4]
   1d78c:	and	r0, r1, r0
   1d790:	cmn	r0, #1
   1d794:	bne	1d7d4 <__assert_fail@plt+0xc6ec>
   1d798:	b	1d79c <__assert_fail@plt+0xc6b4>
   1d79c:	b	1d7a0 <__assert_fail@plt+0xc6b8>
   1d7a0:	ldr	r0, [fp, #-12]
   1d7a4:	mov	r1, #-2147483648	; 0x80000000
   1d7a8:	add	r1, r1, r0, asr #31
   1d7ac:	rsbs	r0, r0, #0
   1d7b0:	rscs	r1, r1, #0
   1d7b4:	str	r0, [sp, #116]	; 0x74
   1d7b8:	str	r1, [sp, #112]	; 0x70
   1d7bc:	blt	1d850 <__assert_fail@plt+0xc768>
   1d7c0:	b	1d87c <__assert_fail@plt+0xc794>
   1d7c4:	mov	r0, #0
   1d7c8:	cmp	r0, #0
   1d7cc:	bne	1d850 <__assert_fail@plt+0xc768>
   1d7d0:	b	1d87c <__assert_fail@plt+0xc794>
   1d7d4:	ldr	r0, [fp, #-8]
   1d7d8:	ldr	r2, [r0]
   1d7dc:	ldr	r3, [r0, #4]
   1d7e0:	mov	r0, #0
   1d7e4:	mov	r1, #-2147483648	; 0x80000000
   1d7e8:	bl	1e940 <__assert_fail@plt+0xd858>
   1d7ec:	ldr	r2, [fp, #-12]
   1d7f0:	subs	r0, r0, r2
   1d7f4:	sbcs	r1, r1, r2, asr #31
   1d7f8:	str	r0, [sp, #108]	; 0x6c
   1d7fc:	str	r1, [sp, #104]	; 0x68
   1d800:	blt	1d850 <__assert_fail@plt+0xc768>
   1d804:	b	1d87c <__assert_fail@plt+0xc794>
   1d808:	ldr	r0, [fp, #-12]
   1d80c:	asr	r3, r0, #31
   1d810:	mvn	r1, #0
   1d814:	mvn	r2, #-2147483648	; 0x80000000
   1d818:	str	r0, [sp, #100]	; 0x64
   1d81c:	mov	r0, r1
   1d820:	mov	r1, r2
   1d824:	ldr	r2, [sp, #100]	; 0x64
   1d828:	bl	1e940 <__assert_fail@plt+0xd858>
   1d82c:	ldr	r2, [fp, #-8]
   1d830:	ldr	r3, [r2]
   1d834:	ldr	r2, [r2, #4]
   1d838:	subs	r0, r0, r3
   1d83c:	sbcs	r1, r1, r2
   1d840:	str	r0, [sp, #96]	; 0x60
   1d844:	str	r1, [sp, #92]	; 0x5c
   1d848:	bge	1d87c <__assert_fail@plt+0xc794>
   1d84c:	b	1d850 <__assert_fail@plt+0xc768>
   1d850:	ldr	r0, [fp, #-8]
   1d854:	ldr	r1, [r0]
   1d858:	ldr	r0, [r0, #4]
   1d85c:	ldr	r2, [fp, #-12]
   1d860:	asr	r3, r2, #31
   1d864:	umull	ip, lr, r1, r2
   1d868:	mla	r1, r1, r3, lr
   1d86c:	mla	r0, r0, r2, r1
   1d870:	str	ip, [fp, #-24]	; 0xffffffe8
   1d874:	str	r0, [fp, #-20]	; 0xffffffec
   1d878:	b	1dbc0 <__assert_fail@plt+0xcad8>
   1d87c:	ldr	r0, [fp, #-8]
   1d880:	ldr	r1, [r0]
   1d884:	ldr	r0, [r0, #4]
   1d888:	ldr	r2, [fp, #-12]
   1d88c:	asr	r3, r2, #31
   1d890:	umull	ip, lr, r1, r2
   1d894:	mla	r1, r1, r3, lr
   1d898:	mla	r0, r0, r2, r1
   1d89c:	str	ip, [fp, #-24]	; 0xffffffe8
   1d8a0:	str	r0, [fp, #-20]	; 0xffffffec
   1d8a4:	b	1dbf4 <__assert_fail@plt+0xcb0c>
   1d8a8:	ldr	r0, [fp, #-12]
   1d8ac:	cmp	r0, #0
   1d8b0:	bge	1da6c <__assert_fail@plt+0xc984>
   1d8b4:	ldr	r0, [fp, #-8]
   1d8b8:	ldr	r0, [r0, #4]
   1d8bc:	cmn	r0, #1
   1d8c0:	bgt	1d9b4 <__assert_fail@plt+0xc8cc>
   1d8c4:	b	1d8c8 <__assert_fail@plt+0xc7e0>
   1d8c8:	b	1d918 <__assert_fail@plt+0xc830>
   1d8cc:	ldr	r0, [fp, #-8]
   1d8d0:	ldr	r1, [r0]
   1d8d4:	ldr	r0, [r0, #4]
   1d8d8:	ldr	r2, [fp, #-12]
   1d8dc:	asr	r3, r2, #31
   1d8e0:	mvn	ip, #0
   1d8e4:	str	r0, [sp, #88]	; 0x58
   1d8e8:	mov	r0, ip
   1d8ec:	str	r1, [sp, #84]	; 0x54
   1d8f0:	mov	r1, ip
   1d8f4:	bl	1ea14 <__assert_fail@plt+0xd92c>
   1d8f8:	ldr	r2, [sp, #84]	; 0x54
   1d8fc:	subs	r0, r2, r0
   1d900:	ldr	r2, [sp, #88]	; 0x58
   1d904:	sbcs	r1, r2, r1
   1d908:	str	r0, [sp, #80]	; 0x50
   1d90c:	str	r1, [sp, #76]	; 0x4c
   1d910:	bcc	1db68 <__assert_fail@plt+0xca80>
   1d914:	b	1db94 <__assert_fail@plt+0xcaac>
   1d918:	b	1d91c <__assert_fail@plt+0xc834>
   1d91c:	ldr	r0, [pc, #760]	; 1dc1c <__assert_fail@plt+0xcb34>
   1d920:	ldr	r1, [fp, #-12]
   1d924:	cmp	r1, r0
   1d928:	blt	1d940 <__assert_fail@plt+0xc858>
   1d92c:	b	1d954 <__assert_fail@plt+0xc86c>
   1d930:	ldr	r0, [fp, #-12]
   1d934:	movw	r1, #0
   1d938:	cmp	r1, r0
   1d93c:	bge	1d954 <__assert_fail@plt+0xc86c>
   1d940:	mov	r0, #1
   1d944:	mvn	r1, #0
   1d948:	str	r1, [sp, #72]	; 0x48
   1d94c:	str	r0, [sp, #68]	; 0x44
   1d950:	b	1d980 <__assert_fail@plt+0xc898>
   1d954:	ldr	r0, [fp, #-12]
   1d958:	rsb	r0, r0, #0
   1d95c:	asr	r3, r0, #31
   1d960:	mvn	r1, #0
   1d964:	str	r0, [sp, #64]	; 0x40
   1d968:	mov	r0, r1
   1d96c:	ldr	r2, [sp, #64]	; 0x40
   1d970:	bl	1ea14 <__assert_fail@plt+0xd92c>
   1d974:	str	r0, [sp, #72]	; 0x48
   1d978:	str	r1, [sp, #68]	; 0x44
   1d97c:	b	1d980 <__assert_fail@plt+0xc898>
   1d980:	ldr	r0, [sp, #68]	; 0x44
   1d984:	ldr	r1, [sp, #72]	; 0x48
   1d988:	ldr	r2, [fp, #-8]
   1d98c:	ldr	r3, [r2]
   1d990:	ldr	r2, [r2, #4]
   1d994:	mvn	r2, r2
   1d998:	mvn	r3, r3
   1d99c:	subs	r1, r3, r1
   1d9a0:	sbcs	r0, r2, r0
   1d9a4:	str	r1, [sp, #60]	; 0x3c
   1d9a8:	str	r0, [sp, #56]	; 0x38
   1d9ac:	bcs	1db68 <__assert_fail@plt+0xca80>
   1d9b0:	b	1db94 <__assert_fail@plt+0xcaac>
   1d9b4:	b	1d9b8 <__assert_fail@plt+0xc8d0>
   1d9b8:	b	1da3c <__assert_fail@plt+0xc954>
   1d9bc:	b	1da3c <__assert_fail@plt+0xc954>
   1d9c0:	ldr	r0, [fp, #-12]
   1d9c4:	cmn	r0, #1
   1d9c8:	bne	1da3c <__assert_fail@plt+0xc954>
   1d9cc:	b	1d9d0 <__assert_fail@plt+0xc8e8>
   1d9d0:	ldr	r0, [fp, #-8]
   1d9d4:	ldr	r1, [r0]
   1d9d8:	ldr	r0, [r0, #4]
   1d9dc:	rsbs	r1, r1, #0
   1d9e0:	rscs	r0, r0, #0
   1d9e4:	str	r1, [sp, #52]	; 0x34
   1d9e8:	str	r0, [sp, #48]	; 0x30
   1d9ec:	blt	1db68 <__assert_fail@plt+0xca80>
   1d9f0:	b	1db94 <__assert_fail@plt+0xcaac>
   1d9f4:	ldr	r0, [fp, #-8]
   1d9f8:	ldr	r1, [r0]
   1d9fc:	ldr	r0, [r0, #4]
   1da00:	subs	r1, r1, #1
   1da04:	sbcs	r0, r0, #0
   1da08:	str	r1, [sp, #44]	; 0x2c
   1da0c:	str	r0, [sp, #40]	; 0x28
   1da10:	blt	1db94 <__assert_fail@plt+0xcaac>
   1da14:	b	1da18 <__assert_fail@plt+0xc930>
   1da18:	ldr	r0, [fp, #-8]
   1da1c:	ldr	r1, [r0]
   1da20:	ldr	r0, [r0, #4]
   1da24:	subs	r1, r1, #1
   1da28:	sbc	r0, r0, #0
   1da2c:	cmn	r0, #1
   1da30:	str	r1, [sp, #36]	; 0x24
   1da34:	bgt	1db68 <__assert_fail@plt+0xca80>
   1da38:	b	1db94 <__assert_fail@plt+0xcaac>
   1da3c:	ldr	r0, [fp, #-12]
   1da40:	mov	r1, #0
   1da44:	sdiv	r0, r1, r0
   1da48:	ldr	r1, [fp, #-8]
   1da4c:	ldr	r2, [r1]
   1da50:	ldr	r1, [r1, #4]
   1da54:	subs	r2, r0, r2
   1da58:	rscs	r0, r1, r0, asr #31
   1da5c:	str	r2, [sp, #32]
   1da60:	str	r0, [sp, #28]
   1da64:	blt	1db68 <__assert_fail@plt+0xca80>
   1da68:	b	1db94 <__assert_fail@plt+0xcaac>
   1da6c:	ldr	r0, [fp, #-12]
   1da70:	cmp	r0, #0
   1da74:	bne	1da7c <__assert_fail@plt+0xc994>
   1da78:	b	1db94 <__assert_fail@plt+0xcaac>
   1da7c:	ldr	r0, [fp, #-8]
   1da80:	ldr	r0, [r0, #4]
   1da84:	cmn	r0, #1
   1da88:	bgt	1db28 <__assert_fail@plt+0xca40>
   1da8c:	b	1da90 <__assert_fail@plt+0xc9a8>
   1da90:	b	1da94 <__assert_fail@plt+0xc9ac>
   1da94:	b	1daec <__assert_fail@plt+0xca04>
   1da98:	b	1daec <__assert_fail@plt+0xca04>
   1da9c:	ldr	r0, [fp, #-8]
   1daa0:	ldr	r1, [r0]
   1daa4:	ldr	r0, [r0, #4]
   1daa8:	and	r0, r1, r0
   1daac:	cmn	r0, #1
   1dab0:	bne	1daec <__assert_fail@plt+0xca04>
   1dab4:	b	1dab8 <__assert_fail@plt+0xc9d0>
   1dab8:	b	1dabc <__assert_fail@plt+0xc9d4>
   1dabc:	ldr	r0, [fp, #-12]
   1dac0:	add	r0, r0, #0
   1dac4:	movw	r1, #0
   1dac8:	cmp	r1, r0
   1dacc:	blt	1db68 <__assert_fail@plt+0xca80>
   1dad0:	b	1db94 <__assert_fail@plt+0xcaac>
   1dad4:	ldr	r0, [fp, #-12]
   1dad8:	sub	r0, r0, #1
   1dadc:	mvn	r1, #0
   1dae0:	cmp	r1, r0
   1dae4:	blt	1db68 <__assert_fail@plt+0xca80>
   1dae8:	b	1db94 <__assert_fail@plt+0xcaac>
   1daec:	ldr	r0, [fp, #-8]
   1daf0:	ldr	r2, [r0]
   1daf4:	ldr	r3, [r0, #4]
   1daf8:	mov	r0, #0
   1dafc:	str	r0, [sp, #24]
   1db00:	ldr	r1, [sp, #24]
   1db04:	bl	1e940 <__assert_fail@plt+0xd858>
   1db08:	ldr	r2, [fp, #-12]
   1db0c:	subs	r0, r0, r2
   1db10:	sbcs	r1, r1, r2, asr #31
   1db14:	str	r0, [sp, #20]
   1db18:	str	r1, [sp, #16]
   1db1c:	blt	1db68 <__assert_fail@plt+0xca80>
   1db20:	b	1db94 <__assert_fail@plt+0xcaac>
   1db24:	svcvc	0x00ffffff
   1db28:	ldr	r0, [fp, #-12]
   1db2c:	asr	r3, r0, #31
   1db30:	mvn	r1, #0
   1db34:	str	r0, [sp, #12]
   1db38:	mov	r0, r1
   1db3c:	ldr	r2, [sp, #12]
   1db40:	bl	1ea14 <__assert_fail@plt+0xd92c>
   1db44:	ldr	r2, [fp, #-8]
   1db48:	ldr	r3, [r2]
   1db4c:	ldr	r2, [r2, #4]
   1db50:	subs	r0, r0, r3
   1db54:	sbcs	r1, r1, r2
   1db58:	str	r0, [sp, #8]
   1db5c:	str	r1, [sp, #4]
   1db60:	bcs	1db94 <__assert_fail@plt+0xcaac>
   1db64:	b	1db68 <__assert_fail@plt+0xca80>
   1db68:	ldr	r0, [fp, #-8]
   1db6c:	ldr	r1, [r0]
   1db70:	ldr	r0, [r0, #4]
   1db74:	ldr	r2, [fp, #-12]
   1db78:	asr	r3, r2, #31
   1db7c:	umull	ip, lr, r1, r2
   1db80:	mla	r1, r1, r3, lr
   1db84:	mla	r0, r0, r2, r1
   1db88:	str	ip, [fp, #-24]	; 0xffffffe8
   1db8c:	str	r0, [fp, #-20]	; 0xffffffec
   1db90:	b	1dbc0 <__assert_fail@plt+0xcad8>
   1db94:	ldr	r0, [fp, #-8]
   1db98:	ldr	r1, [r0]
   1db9c:	ldr	r0, [r0, #4]
   1dba0:	ldr	r2, [fp, #-12]
   1dba4:	asr	r3, r2, #31
   1dba8:	umull	ip, lr, r1, r2
   1dbac:	mla	r1, r1, r3, lr
   1dbb0:	mla	r0, r0, r2, r1
   1dbb4:	str	ip, [fp, #-24]	; 0xffffffe8
   1dbb8:	str	r0, [fp, #-20]	; 0xffffffec
   1dbbc:	b	1dbf4 <__assert_fail@plt+0xcb0c>
   1dbc0:	ldr	r0, [fp, #-8]
   1dbc4:	ldr	r1, [r0, #4]
   1dbc8:	mvn	r2, #0
   1dbcc:	cmp	r1, #0
   1dbd0:	movwlt	r2, #0
   1dbd4:	mvn	r3, #-2147483648	; 0x80000000
   1dbd8:	cmp	r1, #0
   1dbdc:	movlt	r3, #-2147483648	; 0x80000000
   1dbe0:	str	r3, [r0, #4]
   1dbe4:	str	r2, [r0]
   1dbe8:	movw	r0, #1
   1dbec:	str	r0, [fp, #-4]
   1dbf0:	b	1dc10 <__assert_fail@plt+0xcb28>
   1dbf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dbf8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1dbfc:	ldr	r2, [fp, #-8]
   1dc00:	str	r1, [r2, #4]
   1dc04:	str	r0, [r2]
   1dc08:	movw	r0, #0
   1dc0c:	str	r0, [fp, #-4]
   1dc10:	ldr	r0, [fp, #-4]
   1dc14:	mov	sp, fp
   1dc18:	pop	{fp, pc}
   1dc1c:	andhi	r0, r0, r1
   1dc20:	svcvc	0x00ffffff
   1dc24:	push	{fp, lr}
   1dc28:	mov	fp, sp
   1dc2c:	sub	sp, sp, #16
   1dc30:	str	r0, [fp, #-4]
   1dc34:	str	r1, [sp, #8]
   1dc38:	str	r2, [sp, #4]
   1dc3c:	movw	r0, #0
   1dc40:	str	r0, [sp]
   1dc44:	ldr	r0, [sp, #4]
   1dc48:	mvn	r1, #0
   1dc4c:	add	r1, r0, r1
   1dc50:	str	r1, [sp, #4]
   1dc54:	cmp	r0, #0
   1dc58:	beq	1dc78 <__assert_fail@plt+0xcb90>
   1dc5c:	ldr	r0, [fp, #-4]
   1dc60:	ldr	r1, [sp, #8]
   1dc64:	bl	1bf7c <__assert_fail@plt+0xae94>
   1dc68:	ldr	r1, [sp]
   1dc6c:	orr	r0, r1, r0
   1dc70:	str	r0, [sp]
   1dc74:	b	1dc44 <__assert_fail@plt+0xcb5c>
   1dc78:	ldr	r0, [sp]
   1dc7c:	mov	sp, fp
   1dc80:	pop	{fp, pc}
   1dc84:	push	{fp, lr}
   1dc88:	mov	fp, sp
   1dc8c:	sub	sp, sp, #16
   1dc90:	str	r0, [sp, #8]
   1dc94:	str	r1, [sp, #4]
   1dc98:	ldr	r0, [sp, #8]
   1dc9c:	cmp	r0, #0
   1dca0:	beq	1dcb0 <__assert_fail@plt+0xcbc8>
   1dca4:	ldr	r0, [sp, #4]
   1dca8:	cmp	r0, #0
   1dcac:	bne	1dcbc <__assert_fail@plt+0xcbd4>
   1dcb0:	movw	r0, #1
   1dcb4:	str	r0, [sp, #4]
   1dcb8:	str	r0, [sp, #8]
   1dcbc:	ldr	r0, [sp, #4]
   1dcc0:	cmp	r0, #0
   1dcc4:	beq	1dcf8 <__assert_fail@plt+0xcc10>
   1dcc8:	ldr	r0, [pc, #76]	; 1dd1c <__assert_fail@plt+0xcc34>
   1dccc:	ldr	r1, [sp, #4]
   1dcd0:	udiv	r0, r0, r1
   1dcd4:	ldr	r1, [sp, #8]
   1dcd8:	cmp	r0, r1
   1dcdc:	bcs	1dcf8 <__assert_fail@plt+0xcc10>
   1dce0:	bl	11010 <__errno_location@plt>
   1dce4:	movw	lr, #12
   1dce8:	str	lr, [r0]
   1dcec:	movw	r0, #0
   1dcf0:	str	r0, [fp, #-4]
   1dcf4:	b	1dd10 <__assert_fail@plt+0xcc28>
   1dcf8:	ldr	r0, [sp, #8]
   1dcfc:	ldr	r1, [sp, #4]
   1dd00:	bl	10e6c <calloc@plt>
   1dd04:	str	r0, [sp]
   1dd08:	ldr	r0, [sp]
   1dd0c:	str	r0, [fp, #-4]
   1dd10:	ldr	r0, [fp, #-4]
   1dd14:	mov	sp, fp
   1dd18:	pop	{fp, pc}
   1dd1c:	svcvc	0x00ffffff
   1dd20:	push	{fp, lr}
   1dd24:	mov	fp, sp
   1dd28:	sub	sp, sp, #16
   1dd2c:	str	r0, [sp, #8]
   1dd30:	ldr	r0, [sp, #8]
   1dd34:	cmp	r0, #0
   1dd38:	bne	1dd44 <__assert_fail@plt+0xcc5c>
   1dd3c:	movw	r0, #1
   1dd40:	str	r0, [sp, #8]
   1dd44:	ldr	r0, [pc, #64]	; 1dd8c <__assert_fail@plt+0xcca4>
   1dd48:	ldr	r1, [sp, #8]
   1dd4c:	cmp	r0, r1
   1dd50:	bcs	1dd6c <__assert_fail@plt+0xcc84>
   1dd54:	bl	11010 <__errno_location@plt>
   1dd58:	movw	lr, #12
   1dd5c:	str	lr, [r0]
   1dd60:	movw	r0, #0
   1dd64:	str	r0, [fp, #-4]
   1dd68:	b	1dd80 <__assert_fail@plt+0xcc98>
   1dd6c:	ldr	r0, [sp, #8]
   1dd70:	bl	10f8c <malloc@plt>
   1dd74:	str	r0, [sp, #4]
   1dd78:	ldr	r0, [sp, #4]
   1dd7c:	str	r0, [fp, #-4]
   1dd80:	ldr	r0, [fp, #-4]
   1dd84:	mov	sp, fp
   1dd88:	pop	{fp, pc}
   1dd8c:	svcvc	0x00ffffff
   1dd90:	push	{fp, lr}
   1dd94:	mov	fp, sp
   1dd98:	sub	sp, sp, #16
   1dd9c:	str	r0, [sp, #8]
   1dda0:	str	r1, [sp, #4]
   1dda4:	ldr	r0, [sp, #8]
   1dda8:	movw	r1, #0
   1ddac:	cmp	r0, r1
   1ddb0:	bne	1ddc4 <__assert_fail@plt+0xccdc>
   1ddb4:	ldr	r0, [sp, #4]
   1ddb8:	bl	1dd20 <__assert_fail@plt+0xcc38>
   1ddbc:	str	r0, [fp, #-4]
   1ddc0:	b	1de24 <__assert_fail@plt+0xcd3c>
   1ddc4:	ldr	r0, [sp, #4]
   1ddc8:	cmp	r0, #0
   1ddcc:	bne	1dde4 <__assert_fail@plt+0xccfc>
   1ddd0:	ldr	r0, [sp, #8]
   1ddd4:	bl	14394 <__assert_fail@plt+0x32ac>
   1ddd8:	movw	r0, #0
   1dddc:	str	r0, [fp, #-4]
   1dde0:	b	1de24 <__assert_fail@plt+0xcd3c>
   1dde4:	ldr	r0, [pc, #68]	; 1de30 <__assert_fail@plt+0xcd48>
   1dde8:	ldr	r1, [sp, #4]
   1ddec:	cmp	r0, r1
   1ddf0:	bcs	1de0c <__assert_fail@plt+0xcd24>
   1ddf4:	bl	11010 <__errno_location@plt>
   1ddf8:	movw	lr, #12
   1ddfc:	str	lr, [r0]
   1de00:	movw	r0, #0
   1de04:	str	r0, [fp, #-4]
   1de08:	b	1de24 <__assert_fail@plt+0xcd3c>
   1de0c:	ldr	r0, [sp, #8]
   1de10:	ldr	r1, [sp, #4]
   1de14:	bl	10f20 <realloc@plt>
   1de18:	str	r0, [sp]
   1de1c:	ldr	r0, [sp]
   1de20:	str	r0, [fp, #-4]
   1de24:	ldr	r0, [fp, #-4]
   1de28:	mov	sp, fp
   1de2c:	pop	{fp, pc}
   1de30:	svcvc	0x00ffffff
   1de34:	sub	sp, sp, #8
   1de38:	str	r0, [sp, #4]
   1de3c:	str	r1, [sp]
   1de40:	movw	r0, #0
   1de44:	add	sp, sp, #8
   1de48:	bx	lr
   1de4c:	push	{fp, lr}
   1de50:	mov	fp, sp
   1de54:	sub	sp, sp, #8
   1de58:	str	r0, [sp, #4]
   1de5c:	str	r1, [sp]
   1de60:	ldr	r0, [sp, #4]
   1de64:	ldr	r1, [sp]
   1de68:	bl	1de34 <__assert_fail@plt+0xcd4c>
   1de6c:	mov	sp, fp
   1de70:	pop	{fp, pc}
   1de74:	push	{fp, lr}
   1de78:	mov	fp, sp
   1de7c:	sub	sp, sp, #24
   1de80:	str	r0, [fp, #-8]
   1de84:	str	r1, [sp, #12]
   1de88:	ldr	r0, [fp, #-8]
   1de8c:	str	r0, [sp, #8]
   1de90:	ldr	r0, [sp, #12]
   1de94:	str	r0, [sp, #4]
   1de98:	ldr	r0, [sp, #8]
   1de9c:	ldr	r1, [sp, #4]
   1dea0:	cmp	r0, r1
   1dea4:	bne	1deb4 <__assert_fail@plt+0xcdcc>
   1dea8:	movw	r0, #0
   1deac:	str	r0, [fp, #-4]
   1deb0:	b	1df20 <__assert_fail@plt+0xce38>
   1deb4:	b	1deb8 <__assert_fail@plt+0xcdd0>
   1deb8:	ldr	r0, [sp, #8]
   1debc:	ldrb	r0, [r0]
   1dec0:	bl	1e6c0 <__assert_fail@plt+0xd5d8>
   1dec4:	strb	r0, [sp, #3]
   1dec8:	ldr	r0, [sp, #4]
   1decc:	ldrb	r0, [r0]
   1ded0:	bl	1e6c0 <__assert_fail@plt+0xd5d8>
   1ded4:	strb	r0, [sp, #2]
   1ded8:	ldrb	r0, [sp, #3]
   1dedc:	cmp	r0, #0
   1dee0:	bne	1dee8 <__assert_fail@plt+0xce00>
   1dee4:	b	1df10 <__assert_fail@plt+0xce28>
   1dee8:	ldr	r0, [sp, #8]
   1deec:	add	r0, r0, #1
   1def0:	str	r0, [sp, #8]
   1def4:	ldr	r0, [sp, #4]
   1def8:	add	r0, r0, #1
   1defc:	str	r0, [sp, #4]
   1df00:	ldrb	r0, [sp, #3]
   1df04:	ldrb	r1, [sp, #2]
   1df08:	cmp	r0, r1
   1df0c:	beq	1deb8 <__assert_fail@plt+0xcdd0>
   1df10:	ldrb	r0, [sp, #3]
   1df14:	ldrb	r1, [sp, #2]
   1df18:	sub	r0, r0, r1
   1df1c:	str	r0, [fp, #-4]
   1df20:	ldr	r0, [fp, #-4]
   1df24:	mov	sp, fp
   1df28:	pop	{fp, pc}
   1df2c:	push	{fp, lr}
   1df30:	mov	fp, sp
   1df34:	sub	sp, sp, #16
   1df38:	str	r0, [sp, #8]
   1df3c:	ldr	r0, [sp, #8]
   1df40:	bl	10f5c <__fpending@plt>
   1df44:	cmp	r0, #0
   1df48:	movw	r0, #0
   1df4c:	movne	r0, #1
   1df50:	and	r0, r0, #1
   1df54:	strb	r0, [sp, #7]
   1df58:	ldr	r0, [sp, #8]
   1df5c:	bl	10f68 <ferror_unlocked@plt>
   1df60:	cmp	r0, #0
   1df64:	movw	r0, #0
   1df68:	movne	r0, #1
   1df6c:	and	r0, r0, #1
   1df70:	strb	r0, [sp, #6]
   1df74:	ldr	r0, [sp, #8]
   1df78:	bl	141f8 <__assert_fail@plt+0x3110>
   1df7c:	cmp	r0, #0
   1df80:	movw	r0, #0
   1df84:	movne	r0, #1
   1df88:	and	r0, r0, #1
   1df8c:	strb	r0, [sp, #5]
   1df90:	ldrb	r0, [sp, #6]
   1df94:	tst	r0, #1
   1df98:	bne	1dfc4 <__assert_fail@plt+0xcedc>
   1df9c:	ldrb	r0, [sp, #5]
   1dfa0:	tst	r0, #1
   1dfa4:	beq	1dfe8 <__assert_fail@plt+0xcf00>
   1dfa8:	ldrb	r0, [sp, #7]
   1dfac:	tst	r0, #1
   1dfb0:	bne	1dfc4 <__assert_fail@plt+0xcedc>
   1dfb4:	bl	11010 <__errno_location@plt>
   1dfb8:	ldr	r0, [r0]
   1dfbc:	cmp	r0, #9
   1dfc0:	beq	1dfe8 <__assert_fail@plt+0xcf00>
   1dfc4:	ldrb	r0, [sp, #5]
   1dfc8:	tst	r0, #1
   1dfcc:	bne	1dfdc <__assert_fail@plt+0xcef4>
   1dfd0:	bl	11010 <__errno_location@plt>
   1dfd4:	movw	lr, #0
   1dfd8:	str	lr, [r0]
   1dfdc:	mvn	r0, #0
   1dfe0:	str	r0, [fp, #-4]
   1dfe4:	b	1dff0 <__assert_fail@plt+0xcf08>
   1dfe8:	movw	r0, #0
   1dfec:	str	r0, [fp, #-4]
   1dff0:	ldr	r0, [fp, #-4]
   1dff4:	mov	sp, fp
   1dff8:	pop	{fp, pc}
   1dffc:	push	{fp, lr}
   1e000:	mov	fp, sp
   1e004:	sub	sp, sp, #8
   1e008:	movw	r0, #14
   1e00c:	bl	11088 <nl_langinfo@plt>
   1e010:	str	r0, [sp, #4]
   1e014:	ldr	r0, [sp, #4]
   1e018:	movw	lr, #0
   1e01c:	cmp	r0, lr
   1e020:	bne	1e030 <__assert_fail@plt+0xcf48>
   1e024:	movw	r0, #61732	; 0xf124
   1e028:	movt	r0, #1
   1e02c:	str	r0, [sp, #4]
   1e030:	ldr	r0, [sp, #4]
   1e034:	ldrb	r0, [r0]
   1e038:	cmp	r0, #0
   1e03c:	bne	1e04c <__assert_fail@plt+0xcf64>
   1e040:	movw	r0, #63489	; 0xf801
   1e044:	movt	r0, #1
   1e048:	str	r0, [sp, #4]
   1e04c:	ldr	r0, [sp, #4]
   1e050:	mov	sp, fp
   1e054:	pop	{fp, pc}
   1e058:	push	{fp, lr}
   1e05c:	mov	fp, sp
   1e060:	sub	sp, sp, #32
   1e064:	str	r0, [fp, #-8]
   1e068:	str	r1, [fp, #-12]
   1e06c:	str	r2, [sp, #16]
   1e070:	str	r3, [sp, #12]
   1e074:	ldr	r0, [fp, #-8]
   1e078:	movw	r1, #0
   1e07c:	cmp	r0, r1
   1e080:	bne	1e08c <__assert_fail@plt+0xcfa4>
   1e084:	add	r0, sp, #4
   1e088:	str	r0, [fp, #-8]
   1e08c:	ldr	r0, [fp, #-8]
   1e090:	ldr	r1, [fp, #-12]
   1e094:	ldr	r2, [sp, #16]
   1e098:	ldr	r3, [sp, #12]
   1e09c:	bl	10f74 <mbrtowc@plt>
   1e0a0:	str	r0, [sp, #8]
   1e0a4:	ldr	r0, [sp, #8]
   1e0a8:	mvn	r1, #1
   1e0ac:	cmp	r1, r0
   1e0b0:	bhi	1e0f4 <__assert_fail@plt+0xd00c>
   1e0b4:	ldr	r0, [sp, #16]
   1e0b8:	cmp	r0, #0
   1e0bc:	beq	1e0f4 <__assert_fail@plt+0xd00c>
   1e0c0:	movw	r0, #0
   1e0c4:	bl	1e748 <__assert_fail@plt+0xd660>
   1e0c8:	tst	r0, #1
   1e0cc:	bne	1e0f4 <__assert_fail@plt+0xd00c>
   1e0d0:	ldr	r0, [fp, #-12]
   1e0d4:	ldrb	r0, [r0]
   1e0d8:	strb	r0, [sp, #3]
   1e0dc:	ldrb	r0, [sp, #3]
   1e0e0:	ldr	r1, [fp, #-8]
   1e0e4:	str	r0, [r1]
   1e0e8:	movw	r0, #1
   1e0ec:	str	r0, [fp, #-4]
   1e0f0:	b	1e0fc <__assert_fail@plt+0xd014>
   1e0f4:	ldr	r0, [sp, #8]
   1e0f8:	str	r0, [fp, #-4]
   1e0fc:	ldr	r0, [fp, #-4]
   1e100:	mov	sp, fp
   1e104:	pop	{fp, pc}
   1e108:	sub	sp, sp, #12
   1e10c:	str	r0, [sp, #4]
   1e110:	ldr	r0, [sp, #4]
   1e114:	sub	r1, r0, #48	; 0x30
   1e118:	cmp	r1, #10
   1e11c:	str	r0, [sp]
   1e120:	bcc	1e150 <__assert_fail@plt+0xd068>
   1e124:	b	1e128 <__assert_fail@plt+0xd040>
   1e128:	ldr	r0, [sp]
   1e12c:	sub	r1, r0, #65	; 0x41
   1e130:	cmp	r1, #26
   1e134:	bcc	1e150 <__assert_fail@plt+0xd068>
   1e138:	b	1e13c <__assert_fail@plt+0xd054>
   1e13c:	ldr	r0, [sp]
   1e140:	sub	r1, r0, #97	; 0x61
   1e144:	cmp	r1, #25
   1e148:	bhi	1e160 <__assert_fail@plt+0xd078>
   1e14c:	b	1e150 <__assert_fail@plt+0xd068>
   1e150:	movw	r0, #1
   1e154:	and	r0, r0, #1
   1e158:	strb	r0, [sp, #11]
   1e15c:	b	1e16c <__assert_fail@plt+0xd084>
   1e160:	movw	r0, #0
   1e164:	and	r0, r0, #1
   1e168:	strb	r0, [sp, #11]
   1e16c:	ldrb	r0, [sp, #11]
   1e170:	and	r0, r0, #1
   1e174:	add	sp, sp, #12
   1e178:	bx	lr
   1e17c:	sub	sp, sp, #12
   1e180:	str	r0, [sp, #4]
   1e184:	ldr	r0, [sp, #4]
   1e188:	sub	r1, r0, #65	; 0x41
   1e18c:	cmp	r1, #26
   1e190:	str	r0, [sp]
   1e194:	bcc	1e1b0 <__assert_fail@plt+0xd0c8>
   1e198:	b	1e19c <__assert_fail@plt+0xd0b4>
   1e19c:	ldr	r0, [sp]
   1e1a0:	sub	r1, r0, #97	; 0x61
   1e1a4:	cmp	r1, #25
   1e1a8:	bhi	1e1c0 <__assert_fail@plt+0xd0d8>
   1e1ac:	b	1e1b0 <__assert_fail@plt+0xd0c8>
   1e1b0:	movw	r0, #1
   1e1b4:	and	r0, r0, #1
   1e1b8:	strb	r0, [sp, #11]
   1e1bc:	b	1e1cc <__assert_fail@plt+0xd0e4>
   1e1c0:	movw	r0, #0
   1e1c4:	and	r0, r0, #1
   1e1c8:	strb	r0, [sp, #11]
   1e1cc:	ldrb	r0, [sp, #11]
   1e1d0:	and	r0, r0, #1
   1e1d4:	add	sp, sp, #12
   1e1d8:	bx	lr
   1e1dc:	sub	sp, sp, #8
   1e1e0:	str	r0, [sp]
   1e1e4:	ldr	r0, [sp]
   1e1e8:	cmp	r0, #127	; 0x7f
   1e1ec:	bhi	1e204 <__assert_fail@plt+0xd11c>
   1e1f0:	b	1e1f4 <__assert_fail@plt+0xd10c>
   1e1f4:	movw	r0, #1
   1e1f8:	and	r0, r0, #1
   1e1fc:	strb	r0, [sp, #7]
   1e200:	b	1e210 <__assert_fail@plt+0xd128>
   1e204:	movw	r0, #0
   1e208:	and	r0, r0, #1
   1e20c:	strb	r0, [sp, #7]
   1e210:	ldrb	r0, [sp, #7]
   1e214:	and	r0, r0, #1
   1e218:	add	sp, sp, #8
   1e21c:	bx	lr
   1e220:	sub	sp, sp, #8
   1e224:	str	r0, [sp, #4]
   1e228:	ldr	r0, [sp, #4]
   1e22c:	cmp	r0, #32
   1e230:	movw	r0, #1
   1e234:	str	r0, [sp]
   1e238:	beq	1e250 <__assert_fail@plt+0xd168>
   1e23c:	ldr	r0, [sp, #4]
   1e240:	cmp	r0, #9
   1e244:	movw	r0, #0
   1e248:	moveq	r0, #1
   1e24c:	str	r0, [sp]
   1e250:	ldr	r0, [sp]
   1e254:	and	r0, r0, #1
   1e258:	add	sp, sp, #8
   1e25c:	bx	lr
   1e260:	sub	sp, sp, #12
   1e264:	str	r0, [sp, #4]
   1e268:	ldr	r0, [sp, #4]
   1e26c:	cmp	r0, #32
   1e270:	str	r0, [sp]
   1e274:	bcc	1e28c <__assert_fail@plt+0xd1a4>
   1e278:	b	1e27c <__assert_fail@plt+0xd194>
   1e27c:	ldr	r0, [sp]
   1e280:	cmp	r0, #127	; 0x7f
   1e284:	bne	1e29c <__assert_fail@plt+0xd1b4>
   1e288:	b	1e28c <__assert_fail@plt+0xd1a4>
   1e28c:	movw	r0, #1
   1e290:	and	r0, r0, #1
   1e294:	strb	r0, [sp, #11]
   1e298:	b	1e2a8 <__assert_fail@plt+0xd1c0>
   1e29c:	movw	r0, #0
   1e2a0:	and	r0, r0, #1
   1e2a4:	strb	r0, [sp, #11]
   1e2a8:	ldrb	r0, [sp, #11]
   1e2ac:	and	r0, r0, #1
   1e2b0:	add	sp, sp, #12
   1e2b4:	bx	lr
   1e2b8:	sub	sp, sp, #8
   1e2bc:	str	r0, [sp]
   1e2c0:	ldr	r0, [sp]
   1e2c4:	sub	r0, r0, #48	; 0x30
   1e2c8:	cmp	r0, #9
   1e2cc:	bhi	1e2e4 <__assert_fail@plt+0xd1fc>
   1e2d0:	b	1e2d4 <__assert_fail@plt+0xd1ec>
   1e2d4:	movw	r0, #1
   1e2d8:	and	r0, r0, #1
   1e2dc:	strb	r0, [sp, #7]
   1e2e0:	b	1e2f0 <__assert_fail@plt+0xd208>
   1e2e4:	movw	r0, #0
   1e2e8:	and	r0, r0, #1
   1e2ec:	strb	r0, [sp, #7]
   1e2f0:	ldrb	r0, [sp, #7]
   1e2f4:	and	r0, r0, #1
   1e2f8:	add	sp, sp, #8
   1e2fc:	bx	lr
   1e300:	sub	sp, sp, #8
   1e304:	str	r0, [sp]
   1e308:	ldr	r0, [sp]
   1e30c:	sub	r0, r0, #33	; 0x21
   1e310:	cmp	r0, #93	; 0x5d
   1e314:	bhi	1e32c <__assert_fail@plt+0xd244>
   1e318:	b	1e31c <__assert_fail@plt+0xd234>
   1e31c:	movw	r0, #1
   1e320:	and	r0, r0, #1
   1e324:	strb	r0, [sp, #7]
   1e328:	b	1e338 <__assert_fail@plt+0xd250>
   1e32c:	movw	r0, #0
   1e330:	and	r0, r0, #1
   1e334:	strb	r0, [sp, #7]
   1e338:	ldrb	r0, [sp, #7]
   1e33c:	and	r0, r0, #1
   1e340:	add	sp, sp, #8
   1e344:	bx	lr
   1e348:	sub	sp, sp, #8
   1e34c:	str	r0, [sp]
   1e350:	ldr	r0, [sp]
   1e354:	sub	r0, r0, #97	; 0x61
   1e358:	cmp	r0, #25
   1e35c:	bhi	1e374 <__assert_fail@plt+0xd28c>
   1e360:	b	1e364 <__assert_fail@plt+0xd27c>
   1e364:	movw	r0, #1
   1e368:	and	r0, r0, #1
   1e36c:	strb	r0, [sp, #7]
   1e370:	b	1e380 <__assert_fail@plt+0xd298>
   1e374:	movw	r0, #0
   1e378:	and	r0, r0, #1
   1e37c:	strb	r0, [sp, #7]
   1e380:	ldrb	r0, [sp, #7]
   1e384:	and	r0, r0, #1
   1e388:	add	sp, sp, #8
   1e38c:	bx	lr
   1e390:	sub	sp, sp, #8
   1e394:	str	r0, [sp]
   1e398:	ldr	r0, [sp]
   1e39c:	sub	r0, r0, #32
   1e3a0:	cmp	r0, #94	; 0x5e
   1e3a4:	bhi	1e3bc <__assert_fail@plt+0xd2d4>
   1e3a8:	b	1e3ac <__assert_fail@plt+0xd2c4>
   1e3ac:	movw	r0, #1
   1e3b0:	and	r0, r0, #1
   1e3b4:	strb	r0, [sp, #7]
   1e3b8:	b	1e3c8 <__assert_fail@plt+0xd2e0>
   1e3bc:	movw	r0, #0
   1e3c0:	and	r0, r0, #1
   1e3c4:	strb	r0, [sp, #7]
   1e3c8:	ldrb	r0, [sp, #7]
   1e3cc:	and	r0, r0, #1
   1e3d0:	add	sp, sp, #8
   1e3d4:	bx	lr
   1e3d8:	sub	sp, sp, #12
   1e3dc:	str	r0, [sp, #4]
   1e3e0:	ldr	r0, [sp, #4]
   1e3e4:	sub	r0, r0, #33	; 0x21
   1e3e8:	cmp	r0, #93	; 0x5d
   1e3ec:	str	r0, [sp]
   1e3f0:	bhi	1e58c <__assert_fail@plt+0xd4a4>
   1e3f4:	add	r0, pc, #8
   1e3f8:	ldr	r1, [sp]
   1e3fc:	ldr	r0, [r0, r1, lsl #2]
   1e400:	mov	pc, r0
   1e404:	andeq	lr, r1, ip, ror r5
   1e408:	andeq	lr, r1, ip, ror r5
   1e40c:	andeq	lr, r1, ip, ror r5
   1e410:	andeq	lr, r1, ip, ror r5
   1e414:	andeq	lr, r1, ip, ror r5
   1e418:	andeq	lr, r1, ip, ror r5
   1e41c:	andeq	lr, r1, ip, ror r5
   1e420:	andeq	lr, r1, ip, ror r5
   1e424:	andeq	lr, r1, ip, ror r5
   1e428:	andeq	lr, r1, ip, ror r5
   1e42c:	andeq	lr, r1, ip, ror r5
   1e430:	andeq	lr, r1, ip, ror r5
   1e434:	andeq	lr, r1, ip, ror r5
   1e438:	andeq	lr, r1, ip, ror r5
   1e43c:	andeq	lr, r1, ip, ror r5
   1e440:	andeq	lr, r1, ip, lsl #11
   1e444:	andeq	lr, r1, ip, lsl #11
   1e448:	andeq	lr, r1, ip, lsl #11
   1e44c:	andeq	lr, r1, ip, lsl #11
   1e450:	andeq	lr, r1, ip, lsl #11
   1e454:	andeq	lr, r1, ip, lsl #11
   1e458:	andeq	lr, r1, ip, lsl #11
   1e45c:	andeq	lr, r1, ip, lsl #11
   1e460:	andeq	lr, r1, ip, lsl #11
   1e464:	andeq	lr, r1, ip, lsl #11
   1e468:	andeq	lr, r1, ip, ror r5
   1e46c:	andeq	lr, r1, ip, ror r5
   1e470:	andeq	lr, r1, ip, ror r5
   1e474:	andeq	lr, r1, ip, ror r5
   1e478:	andeq	lr, r1, ip, ror r5
   1e47c:	andeq	lr, r1, ip, ror r5
   1e480:	andeq	lr, r1, ip, ror r5
   1e484:	andeq	lr, r1, ip, lsl #11
   1e488:	andeq	lr, r1, ip, lsl #11
   1e48c:	andeq	lr, r1, ip, lsl #11
   1e490:	andeq	lr, r1, ip, lsl #11
   1e494:	andeq	lr, r1, ip, lsl #11
   1e498:	andeq	lr, r1, ip, lsl #11
   1e49c:	andeq	lr, r1, ip, lsl #11
   1e4a0:	andeq	lr, r1, ip, lsl #11
   1e4a4:	andeq	lr, r1, ip, lsl #11
   1e4a8:	andeq	lr, r1, ip, lsl #11
   1e4ac:	andeq	lr, r1, ip, lsl #11
   1e4b0:	andeq	lr, r1, ip, lsl #11
   1e4b4:	andeq	lr, r1, ip, lsl #11
   1e4b8:	andeq	lr, r1, ip, lsl #11
   1e4bc:	andeq	lr, r1, ip, lsl #11
   1e4c0:	andeq	lr, r1, ip, lsl #11
   1e4c4:	andeq	lr, r1, ip, lsl #11
   1e4c8:	andeq	lr, r1, ip, lsl #11
   1e4cc:	andeq	lr, r1, ip, lsl #11
   1e4d0:	andeq	lr, r1, ip, lsl #11
   1e4d4:	andeq	lr, r1, ip, lsl #11
   1e4d8:	andeq	lr, r1, ip, lsl #11
   1e4dc:	andeq	lr, r1, ip, lsl #11
   1e4e0:	andeq	lr, r1, ip, lsl #11
   1e4e4:	andeq	lr, r1, ip, lsl #11
   1e4e8:	andeq	lr, r1, ip, lsl #11
   1e4ec:	andeq	lr, r1, ip, ror r5
   1e4f0:	andeq	lr, r1, ip, ror r5
   1e4f4:	andeq	lr, r1, ip, ror r5
   1e4f8:	andeq	lr, r1, ip, ror r5
   1e4fc:	andeq	lr, r1, ip, ror r5
   1e500:	andeq	lr, r1, ip, ror r5
   1e504:	andeq	lr, r1, ip, lsl #11
   1e508:	andeq	lr, r1, ip, lsl #11
   1e50c:	andeq	lr, r1, ip, lsl #11
   1e510:	andeq	lr, r1, ip, lsl #11
   1e514:	andeq	lr, r1, ip, lsl #11
   1e518:	andeq	lr, r1, ip, lsl #11
   1e51c:	andeq	lr, r1, ip, lsl #11
   1e520:	andeq	lr, r1, ip, lsl #11
   1e524:	andeq	lr, r1, ip, lsl #11
   1e528:	andeq	lr, r1, ip, lsl #11
   1e52c:	andeq	lr, r1, ip, lsl #11
   1e530:	andeq	lr, r1, ip, lsl #11
   1e534:	andeq	lr, r1, ip, lsl #11
   1e538:	andeq	lr, r1, ip, lsl #11
   1e53c:	andeq	lr, r1, ip, lsl #11
   1e540:	andeq	lr, r1, ip, lsl #11
   1e544:	andeq	lr, r1, ip, lsl #11
   1e548:	andeq	lr, r1, ip, lsl #11
   1e54c:	andeq	lr, r1, ip, lsl #11
   1e550:	andeq	lr, r1, ip, lsl #11
   1e554:	andeq	lr, r1, ip, lsl #11
   1e558:	andeq	lr, r1, ip, lsl #11
   1e55c:	andeq	lr, r1, ip, lsl #11
   1e560:	andeq	lr, r1, ip, lsl #11
   1e564:	andeq	lr, r1, ip, lsl #11
   1e568:	andeq	lr, r1, ip, lsl #11
   1e56c:	andeq	lr, r1, ip, ror r5
   1e570:	andeq	lr, r1, ip, ror r5
   1e574:	andeq	lr, r1, ip, ror r5
   1e578:	andeq	lr, r1, ip, ror r5
   1e57c:	movw	r0, #1
   1e580:	and	r0, r0, #1
   1e584:	strb	r0, [sp, #11]
   1e588:	b	1e598 <__assert_fail@plt+0xd4b0>
   1e58c:	movw	r0, #0
   1e590:	and	r0, r0, #1
   1e594:	strb	r0, [sp, #11]
   1e598:	ldrb	r0, [sp, #11]
   1e59c:	and	r0, r0, #1
   1e5a0:	add	sp, sp, #12
   1e5a4:	bx	lr
   1e5a8:	sub	sp, sp, #12
   1e5ac:	str	r0, [sp, #4]
   1e5b0:	ldr	r0, [sp, #4]
   1e5b4:	sub	r1, r0, #9
   1e5b8:	cmp	r1, #5
   1e5bc:	str	r0, [sp]
   1e5c0:	bcc	1e5d8 <__assert_fail@plt+0xd4f0>
   1e5c4:	b	1e5c8 <__assert_fail@plt+0xd4e0>
   1e5c8:	ldr	r0, [sp]
   1e5cc:	cmp	r0, #32
   1e5d0:	bne	1e5e8 <__assert_fail@plt+0xd500>
   1e5d4:	b	1e5d8 <__assert_fail@plt+0xd4f0>
   1e5d8:	movw	r0, #1
   1e5dc:	and	r0, r0, #1
   1e5e0:	strb	r0, [sp, #11]
   1e5e4:	b	1e5f4 <__assert_fail@plt+0xd50c>
   1e5e8:	movw	r0, #0
   1e5ec:	and	r0, r0, #1
   1e5f0:	strb	r0, [sp, #11]
   1e5f4:	ldrb	r0, [sp, #11]
   1e5f8:	and	r0, r0, #1
   1e5fc:	add	sp, sp, #12
   1e600:	bx	lr
   1e604:	sub	sp, sp, #8
   1e608:	str	r0, [sp]
   1e60c:	ldr	r0, [sp]
   1e610:	sub	r0, r0, #65	; 0x41
   1e614:	cmp	r0, #25
   1e618:	bhi	1e630 <__assert_fail@plt+0xd548>
   1e61c:	b	1e620 <__assert_fail@plt+0xd538>
   1e620:	movw	r0, #1
   1e624:	and	r0, r0, #1
   1e628:	strb	r0, [sp, #7]
   1e62c:	b	1e63c <__assert_fail@plt+0xd554>
   1e630:	movw	r0, #0
   1e634:	and	r0, r0, #1
   1e638:	strb	r0, [sp, #7]
   1e63c:	ldrb	r0, [sp, #7]
   1e640:	and	r0, r0, #1
   1e644:	add	sp, sp, #8
   1e648:	bx	lr
   1e64c:	sub	sp, sp, #12
   1e650:	str	r0, [sp, #4]
   1e654:	ldr	r0, [sp, #4]
   1e658:	sub	r1, r0, #48	; 0x30
   1e65c:	cmp	r1, #10
   1e660:	str	r0, [sp]
   1e664:	bcc	1e694 <__assert_fail@plt+0xd5ac>
   1e668:	b	1e66c <__assert_fail@plt+0xd584>
   1e66c:	ldr	r0, [sp]
   1e670:	sub	r1, r0, #65	; 0x41
   1e674:	cmp	r1, #6
   1e678:	bcc	1e694 <__assert_fail@plt+0xd5ac>
   1e67c:	b	1e680 <__assert_fail@plt+0xd598>
   1e680:	ldr	r0, [sp]
   1e684:	sub	r1, r0, #97	; 0x61
   1e688:	cmp	r1, #5
   1e68c:	bhi	1e6a4 <__assert_fail@plt+0xd5bc>
   1e690:	b	1e694 <__assert_fail@plt+0xd5ac>
   1e694:	movw	r0, #1
   1e698:	and	r0, r0, #1
   1e69c:	strb	r0, [sp, #11]
   1e6a0:	b	1e6b0 <__assert_fail@plt+0xd5c8>
   1e6a4:	movw	r0, #0
   1e6a8:	and	r0, r0, #1
   1e6ac:	strb	r0, [sp, #11]
   1e6b0:	ldrb	r0, [sp, #11]
   1e6b4:	and	r0, r0, #1
   1e6b8:	add	sp, sp, #12
   1e6bc:	bx	lr
   1e6c0:	sub	sp, sp, #8
   1e6c4:	str	r0, [sp]
   1e6c8:	ldr	r0, [sp]
   1e6cc:	sub	r0, r0, #65	; 0x41
   1e6d0:	cmp	r0, #25
   1e6d4:	bhi	1e6f0 <__assert_fail@plt+0xd608>
   1e6d8:	b	1e6dc <__assert_fail@plt+0xd5f4>
   1e6dc:	ldr	r0, [sp]
   1e6e0:	sub	r0, r0, #65	; 0x41
   1e6e4:	add	r0, r0, #97	; 0x61
   1e6e8:	str	r0, [sp, #4]
   1e6ec:	b	1e6f8 <__assert_fail@plt+0xd610>
   1e6f0:	ldr	r0, [sp]
   1e6f4:	str	r0, [sp, #4]
   1e6f8:	ldr	r0, [sp, #4]
   1e6fc:	add	sp, sp, #8
   1e700:	bx	lr
   1e704:	sub	sp, sp, #8
   1e708:	str	r0, [sp]
   1e70c:	ldr	r0, [sp]
   1e710:	sub	r0, r0, #97	; 0x61
   1e714:	cmp	r0, #25
   1e718:	bhi	1e734 <__assert_fail@plt+0xd64c>
   1e71c:	b	1e720 <__assert_fail@plt+0xd638>
   1e720:	ldr	r0, [sp]
   1e724:	sub	r0, r0, #97	; 0x61
   1e728:	add	r0, r0, #65	; 0x41
   1e72c:	str	r0, [sp, #4]
   1e730:	b	1e73c <__assert_fail@plt+0xd654>
   1e734:	ldr	r0, [sp]
   1e738:	str	r0, [sp, #4]
   1e73c:	ldr	r0, [sp, #4]
   1e740:	add	sp, sp, #8
   1e744:	bx	lr
   1e748:	push	{r4, r5, fp, lr}
   1e74c:	add	fp, sp, #8
   1e750:	sub	sp, sp, #272	; 0x110
   1e754:	add	r1, sp, #7
   1e758:	str	r0, [fp, #-16]
   1e75c:	ldr	r0, [fp, #-16]
   1e760:	movw	r2, #257	; 0x101
   1e764:	bl	1e7e4 <__assert_fail@plt+0xd6fc>
   1e768:	cmp	r0, #0
   1e76c:	beq	1e780 <__assert_fail@plt+0xd698>
   1e770:	movw	r0, #0
   1e774:	and	r0, r0, #1
   1e778:	strb	r0, [fp, #-9]
   1e77c:	b	1e7d4 <__assert_fail@plt+0xd6ec>
   1e780:	add	r0, sp, #7
   1e784:	movw	r1, #63495	; 0xf807
   1e788:	movt	r1, #1
   1e78c:	bl	10e90 <strcmp@plt>
   1e790:	cmp	r0, #0
   1e794:	movw	r0, #1
   1e798:	str	r0, [sp]
   1e79c:	beq	1e7c0 <__assert_fail@plt+0xd6d8>
   1e7a0:	add	r0, sp, #7
   1e7a4:	movw	r1, #63497	; 0xf809
   1e7a8:	movt	r1, #1
   1e7ac:	bl	10e90 <strcmp@plt>
   1e7b0:	cmp	r0, #0
   1e7b4:	movw	r0, #0
   1e7b8:	moveq	r0, #1
   1e7bc:	str	r0, [sp]
   1e7c0:	ldr	r0, [sp]
   1e7c4:	mvn	r1, #0
   1e7c8:	eor	r0, r0, r1
   1e7cc:	and	r0, r0, #1
   1e7d0:	strb	r0, [fp, #-9]
   1e7d4:	ldrb	r0, [fp, #-9]
   1e7d8:	and	r0, r0, #1
   1e7dc:	sub	sp, fp, #8
   1e7e0:	pop	{r4, r5, fp, pc}
   1e7e4:	push	{fp, lr}
   1e7e8:	mov	fp, sp
   1e7ec:	sub	sp, sp, #16
   1e7f0:	str	r0, [fp, #-4]
   1e7f4:	str	r1, [sp, #8]
   1e7f8:	str	r2, [sp, #4]
   1e7fc:	ldr	r0, [fp, #-4]
   1e800:	ldr	r1, [sp, #8]
   1e804:	ldr	r2, [sp, #4]
   1e808:	bl	1e814 <__assert_fail@plt+0xd72c>
   1e80c:	mov	sp, fp
   1e810:	pop	{fp, pc}
   1e814:	push	{fp, lr}
   1e818:	mov	fp, sp
   1e81c:	sub	sp, sp, #24
   1e820:	str	r0, [fp, #-8]
   1e824:	str	r1, [sp, #12]
   1e828:	str	r2, [sp, #8]
   1e82c:	ldr	r0, [fp, #-8]
   1e830:	bl	1e914 <__assert_fail@plt+0xd82c>
   1e834:	str	r0, [sp, #4]
   1e838:	ldr	r0, [sp, #4]
   1e83c:	movw	r1, #0
   1e840:	cmp	r0, r1
   1e844:	bne	1e86c <__assert_fail@plt+0xd784>
   1e848:	ldr	r0, [sp, #8]
   1e84c:	cmp	r0, #0
   1e850:	bls	1e860 <__assert_fail@plt+0xd778>
   1e854:	ldr	r0, [sp, #12]
   1e858:	movw	r1, #0
   1e85c:	strb	r1, [r0]
   1e860:	movw	r0, #22
   1e864:	str	r0, [fp, #-4]
   1e868:	b	1e8e8 <__assert_fail@plt+0xd800>
   1e86c:	ldr	r0, [sp, #4]
   1e870:	bl	10fec <strlen@plt>
   1e874:	str	r0, [sp]
   1e878:	ldr	r0, [sp]
   1e87c:	ldr	lr, [sp, #8]
   1e880:	cmp	r0, lr
   1e884:	bcs	1e8a8 <__assert_fail@plt+0xd7c0>
   1e888:	ldr	r0, [sp, #12]
   1e88c:	ldr	r1, [sp, #4]
   1e890:	ldr	r2, [sp]
   1e894:	add	r2, r2, #1
   1e898:	bl	10ee4 <memcpy@plt>
   1e89c:	movw	r0, #0
   1e8a0:	str	r0, [fp, #-4]
   1e8a4:	b	1e8e8 <__assert_fail@plt+0xd800>
   1e8a8:	ldr	r0, [sp, #8]
   1e8ac:	cmp	r0, #0
   1e8b0:	bls	1e8e0 <__assert_fail@plt+0xd7f8>
   1e8b4:	ldr	r0, [sp, #12]
   1e8b8:	ldr	r1, [sp, #4]
   1e8bc:	ldr	r2, [sp, #8]
   1e8c0:	sub	r2, r2, #1
   1e8c4:	bl	10ee4 <memcpy@plt>
   1e8c8:	ldr	r0, [sp, #12]
   1e8cc:	ldr	r1, [sp, #8]
   1e8d0:	sub	r1, r1, #1
   1e8d4:	add	r0, r0, r1
   1e8d8:	movw	r1, #0
   1e8dc:	strb	r1, [r0]
   1e8e0:	movw	r0, #34	; 0x22
   1e8e4:	str	r0, [fp, #-4]
   1e8e8:	ldr	r0, [fp, #-4]
   1e8ec:	mov	sp, fp
   1e8f0:	pop	{fp, pc}
   1e8f4:	push	{fp, lr}
   1e8f8:	mov	fp, sp
   1e8fc:	sub	sp, sp, #8
   1e900:	str	r0, [sp, #4]
   1e904:	ldr	r0, [sp, #4]
   1e908:	bl	1e914 <__assert_fail@plt+0xd82c>
   1e90c:	mov	sp, fp
   1e910:	pop	{fp, pc}
   1e914:	push	{fp, lr}
   1e918:	mov	fp, sp
   1e91c:	sub	sp, sp, #8
   1e920:	str	r0, [sp, #4]
   1e924:	ldr	r0, [sp, #4]
   1e928:	movw	r1, #0
   1e92c:	bl	11070 <setlocale@plt>
   1e930:	str	r0, [sp]
   1e934:	ldr	r0, [sp]
   1e938:	mov	sp, fp
   1e93c:	pop	{fp, pc}
   1e940:	cmp	r3, #0
   1e944:	cmpeq	r2, #0
   1e948:	bne	1e96c <__assert_fail@plt+0xd884>
   1e94c:	cmp	r1, #0
   1e950:	movlt	r1, #-2147483648	; 0x80000000
   1e954:	movlt	r0, #0
   1e958:	blt	1e968 <__assert_fail@plt+0xd880>
   1e95c:	cmpeq	r0, #0
   1e960:	mvnne	r1, #-2147483648	; 0x80000000
   1e964:	mvnne	r0, #0
   1e968:	b	1ea50 <__assert_fail@plt+0xd968>
   1e96c:	sub	sp, sp, #8
   1e970:	push	{sp, lr}
   1e974:	cmp	r1, #0
   1e978:	blt	1e998 <__assert_fail@plt+0xd8b0>
   1e97c:	cmp	r3, #0
   1e980:	blt	1e9cc <__assert_fail@plt+0xd8e4>
   1e984:	bl	1ea60 <__assert_fail@plt+0xd978>
   1e988:	ldr	lr, [sp, #4]
   1e98c:	add	sp, sp, #8
   1e990:	pop	{r2, r3}
   1e994:	bx	lr
   1e998:	rsbs	r0, r0, #0
   1e99c:	sbc	r1, r1, r1, lsl #1
   1e9a0:	cmp	r3, #0
   1e9a4:	blt	1e9f0 <__assert_fail@plt+0xd908>
   1e9a8:	bl	1ea60 <__assert_fail@plt+0xd978>
   1e9ac:	ldr	lr, [sp, #4]
   1e9b0:	add	sp, sp, #8
   1e9b4:	pop	{r2, r3}
   1e9b8:	rsbs	r0, r0, #0
   1e9bc:	sbc	r1, r1, r1, lsl #1
   1e9c0:	rsbs	r2, r2, #0
   1e9c4:	sbc	r3, r3, r3, lsl #1
   1e9c8:	bx	lr
   1e9cc:	rsbs	r2, r2, #0
   1e9d0:	sbc	r3, r3, r3, lsl #1
   1e9d4:	bl	1ea60 <__assert_fail@plt+0xd978>
   1e9d8:	ldr	lr, [sp, #4]
   1e9dc:	add	sp, sp, #8
   1e9e0:	pop	{r2, r3}
   1e9e4:	rsbs	r0, r0, #0
   1e9e8:	sbc	r1, r1, r1, lsl #1
   1e9ec:	bx	lr
   1e9f0:	rsbs	r2, r2, #0
   1e9f4:	sbc	r3, r3, r3, lsl #1
   1e9f8:	bl	1ea60 <__assert_fail@plt+0xd978>
   1e9fc:	ldr	lr, [sp, #4]
   1ea00:	add	sp, sp, #8
   1ea04:	pop	{r2, r3}
   1ea08:	rsbs	r2, r2, #0
   1ea0c:	sbc	r3, r3, r3, lsl #1
   1ea10:	bx	lr
   1ea14:	cmp	r3, #0
   1ea18:	cmpeq	r2, #0
   1ea1c:	bne	1ea34 <__assert_fail@plt+0xd94c>
   1ea20:	cmp	r1, #0
   1ea24:	cmpeq	r0, #0
   1ea28:	mvnne	r1, #0
   1ea2c:	mvnne	r0, #0
   1ea30:	b	1ea50 <__assert_fail@plt+0xd968>
   1ea34:	sub	sp, sp, #8
   1ea38:	push	{sp, lr}
   1ea3c:	bl	1ea60 <__assert_fail@plt+0xd978>
   1ea40:	ldr	lr, [sp, #4]
   1ea44:	add	sp, sp, #8
   1ea48:	pop	{r2, r3}
   1ea4c:	bx	lr
   1ea50:	push	{r1, lr}
   1ea54:	mov	r0, #8
   1ea58:	bl	10e84 <raise@plt>
   1ea5c:	pop	{r1, pc}
   1ea60:	cmp	r1, r3
   1ea64:	cmpeq	r0, r2
   1ea68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ea6c:	mov	r4, r0
   1ea70:	movcc	r0, #0
   1ea74:	mov	r5, r1
   1ea78:	ldr	lr, [sp, #36]	; 0x24
   1ea7c:	movcc	r1, r0
   1ea80:	bcc	1eb7c <__assert_fail@plt+0xda94>
   1ea84:	cmp	r3, #0
   1ea88:	clzeq	ip, r2
   1ea8c:	clzne	ip, r3
   1ea90:	addeq	ip, ip, #32
   1ea94:	cmp	r5, #0
   1ea98:	clzeq	r1, r4
   1ea9c:	addeq	r1, r1, #32
   1eaa0:	clzne	r1, r5
   1eaa4:	sub	ip, ip, r1
   1eaa8:	sub	sl, ip, #32
   1eaac:	lsl	r9, r3, ip
   1eab0:	rsb	fp, ip, #32
   1eab4:	orr	r9, r9, r2, lsl sl
   1eab8:	orr	r9, r9, r2, lsr fp
   1eabc:	lsl	r8, r2, ip
   1eac0:	cmp	r5, r9
   1eac4:	cmpeq	r4, r8
   1eac8:	movcc	r0, #0
   1eacc:	movcc	r1, r0
   1ead0:	bcc	1eaec <__assert_fail@plt+0xda04>
   1ead4:	mov	r0, #1
   1ead8:	subs	r4, r4, r8
   1eadc:	lsl	r1, r0, sl
   1eae0:	orr	r1, r1, r0, lsr fp
   1eae4:	lsl	r0, r0, ip
   1eae8:	sbc	r5, r5, r9
   1eaec:	cmp	ip, #0
   1eaf0:	beq	1eb7c <__assert_fail@plt+0xda94>
   1eaf4:	lsr	r6, r8, #1
   1eaf8:	orr	r6, r6, r9, lsl #31
   1eafc:	lsr	r7, r9, #1
   1eb00:	mov	r2, ip
   1eb04:	b	1eb28 <__assert_fail@plt+0xda40>
   1eb08:	subs	r3, r4, r6
   1eb0c:	sbc	r8, r5, r7
   1eb10:	adds	r3, r3, r3
   1eb14:	adc	r8, r8, r8
   1eb18:	adds	r4, r3, #1
   1eb1c:	adc	r5, r8, #0
   1eb20:	subs	r2, r2, #1
   1eb24:	beq	1eb44 <__assert_fail@plt+0xda5c>
   1eb28:	cmp	r5, r7
   1eb2c:	cmpeq	r4, r6
   1eb30:	bcs	1eb08 <__assert_fail@plt+0xda20>
   1eb34:	adds	r4, r4, r4
   1eb38:	adc	r5, r5, r5
   1eb3c:	subs	r2, r2, #1
   1eb40:	bne	1eb28 <__assert_fail@plt+0xda40>
   1eb44:	lsr	r3, r4, ip
   1eb48:	orr	r3, r3, r5, lsl fp
   1eb4c:	lsr	r2, r5, ip
   1eb50:	orr	r3, r3, r5, lsr sl
   1eb54:	adds	r0, r0, r4
   1eb58:	mov	r4, r3
   1eb5c:	lsl	r3, r2, ip
   1eb60:	orr	r3, r3, r4, lsl sl
   1eb64:	lsl	ip, r4, ip
   1eb68:	orr	r3, r3, r4, lsr fp
   1eb6c:	adc	r1, r1, r5
   1eb70:	subs	r0, r0, ip
   1eb74:	mov	r5, r2
   1eb78:	sbc	r1, r1, r3
   1eb7c:	cmp	lr, #0
   1eb80:	strdne	r4, [lr]
   1eb84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eb88:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1eb8c:	mov	r7, r0
   1eb90:	ldr	r6, [pc, #72]	; 1ebe0 <__assert_fail@plt+0xdaf8>
   1eb94:	ldr	r5, [pc, #72]	; 1ebe4 <__assert_fail@plt+0xdafc>
   1eb98:	add	r6, pc, r6
   1eb9c:	add	r5, pc, r5
   1eba0:	sub	r6, r6, r5
   1eba4:	mov	r8, r1
   1eba8:	mov	r9, r2
   1ebac:	bl	10e4c <calloc@plt-0x20>
   1ebb0:	asrs	r6, r6, #2
   1ebb4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ebb8:	mov	r4, #0
   1ebbc:	add	r4, r4, #1
   1ebc0:	ldr	r3, [r5], #4
   1ebc4:	mov	r2, r9
   1ebc8:	mov	r1, r8
   1ebcc:	mov	r0, r7
   1ebd0:	blx	r3
   1ebd4:	cmp	r6, r4
   1ebd8:	bne	1ebbc <__assert_fail@plt+0xdad4>
   1ebdc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ebe0:	andeq	r1, r1, ip, ror #6
   1ebe4:	andeq	r1, r1, r4, ror #6
   1ebe8:	bx	lr
   1ebec:	ldr	r3, [pc, #12]	; 1ec00 <__assert_fail@plt+0xdb18>
   1ebf0:	mov	r1, #0
   1ebf4:	add	r3, pc, r3
   1ebf8:	ldr	r2, [r3]
   1ebfc:	b	1101c <__cxa_atexit@plt>
   1ec00:	strdeq	r1, [r1], -r0

Disassembly of section .fini:

0001ec04 <.fini>:
   1ec04:	push	{r3, lr}
   1ec08:	pop	{r3, pc}
