
../repos/inetutils/src/tftpd:     file format elf32-littlearm


Disassembly of section .init:

000111d8 <.init>:
   111d8:	push	{r3, lr}
   111dc:	bl	115e8 <__assert_fail@plt+0x48>
   111e0:	pop	{r3, pc}

Disassembly of section .plt:

000111e4 <fdopen@plt-0x14>:
   111e4:	push	{lr}		; (str lr, [sp, #-4]!)
   111e8:	ldr	lr, [pc, #4]	; 111f4 <fdopen@plt-0x4>
   111ec:	add	lr, pc, lr
   111f0:	ldr	pc, [lr, #8]!
   111f4:	andeq	r9, r1, ip, lsl #28

000111f8 <fdopen@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #102400	; 0x19000
   11200:	ldr	pc, [ip, #3596]!	; 0xe0c

00011204 <calloc@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #102400	; 0x19000
   1120c:	ldr	pc, [ip, #3588]!	; 0xe04

00011210 <fputs_unlocked@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #102400	; 0x19000
   11218:	ldr	pc, [ip, #3580]!	; 0xdfc

0001121c <strstr@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #102400	; 0x19000
   11224:	ldr	pc, [ip, #3572]!	; 0xdf4

00011228 <raise@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #102400	; 0x19000
   11230:	ldr	pc, [ip, #3564]!	; 0xdec

00011234 <getpwnam@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #102400	; 0x19000
   1123c:	ldr	pc, [ip, #3556]!	; 0xde4

00011240 <strcmp@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #102400	; 0x19000
   11248:	ldr	pc, [ip, #3548]!	; 0xddc

0001124c <strtol@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #102400	; 0x19000
   11254:	ldr	pc, [ip, #3540]!	; 0xdd4

00011258 <printf@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #102400	; 0x19000
   11260:	ldr	pc, [ip, #3532]!	; 0xdcc

00011264 <read@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #102400	; 0x19000
   1126c:	ldr	pc, [ip, #3524]!	; 0xdc4

00011270 <getuid@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #102400	; 0x19000
   11278:	ldr	pc, [ip, #3516]!	; 0xdbc

0001127c <memmove@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #102400	; 0x19000
   11284:	ldr	pc, [ip, #3508]!	; 0xdb4

00011288 <strchrnul@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #102400	; 0x19000
   11290:	ldr	pc, [ip, #3500]!	; 0xdac

00011294 <free@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #102400	; 0x19000
   1129c:	ldr	pc, [ip, #3492]!	; 0xda4

000112a0 <gai_strerror@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #102400	; 0x19000
   112a8:	ldr	pc, [ip, #3484]!	; 0xd9c

000112ac <strndup@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #102400	; 0x19000
   112b4:	ldr	pc, [ip, #3476]!	; 0xd94

000112b8 <memcpy@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #102400	; 0x19000
   112c0:	ldr	pc, [ip, #3468]!	; 0xd8c

000112c4 <signal@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #102400	; 0x19000
   112cc:	ldr	pc, [ip, #3460]!	; 0xd84

000112d0 <fwrite_unlocked@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #102400	; 0x19000
   112d8:	ldr	pc, [ip, #3452]!	; 0xd7c

000112dc <sleep@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #102400	; 0x19000
   112e4:	ldr	pc, [ip, #3444]!	; 0xd74

000112e8 <recvfrom@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #102400	; 0x19000
   112f0:	ldr	pc, [ip, #3436]!	; 0xd6c

000112f4 <alarm@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #102400	; 0x19000
   112fc:	ldr	pc, [ip, #3428]!	; 0xd64

00011300 <realloc@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #102400	; 0x19000
   11308:	ldr	pc, [ip, #3420]!	; 0xd5c

0001130c <chdir@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #102400	; 0x19000
   11314:	ldr	pc, [ip, #3412]!	; 0xd54

00011318 <strcasecmp@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #102400	; 0x19000
   11320:	ldr	pc, [ip, #3404]!	; 0xd4c

00011324 <funlockfile@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #102400	; 0x19000
   1132c:	ldr	pc, [ip, #3396]!	; 0xd44

00011330 <fwrite@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #102400	; 0x19000
   11338:	ldr	pc, [ip, #3388]!	; 0xd3c

0001133c <ioctl@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #102400	; 0x19000
   11344:	ldr	pc, [ip, #3380]!	; 0xd34

00011348 <chroot@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #102400	; 0x19000
   11350:	ldr	pc, [ip, #3372]!	; 0xd2c

00011354 <error@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #102400	; 0x19000
   1135c:	ldr	pc, [ip, #3364]!	; 0xd24

00011360 <open64@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #102400	; 0x19000
   11368:	ldr	pc, [ip, #3356]!	; 0xd1c

0001136c <getenv@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #102400	; 0x19000
   11374:	ldr	pc, [ip, #3348]!	; 0xd14

00011378 <setgid@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #102400	; 0x19000
   11380:	ldr	pc, [ip, #3340]!	; 0xd0c

00011384 <malloc@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #102400	; 0x19000
   1138c:	ldr	pc, [ip, #3332]!	; 0xd04

00011390 <__libc_start_main@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #102400	; 0x19000
   11398:	ldr	pc, [ip, #3324]!	; 0xcfc

0001139c <strerror@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #102400	; 0x19000
   113a4:	ldr	pc, [ip, #3316]!	; 0xcf4

000113a8 <__ctype_tolower_loc@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #102400	; 0x19000
   113b0:	ldr	pc, [ip, #3308]!	; 0xcec

000113b4 <__gmon_start__@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #102400	; 0x19000
   113bc:	ldr	pc, [ip, #3300]!	; 0xce4

000113c0 <mempcpy@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #102400	; 0x19000
   113c8:	ldr	pc, [ip, #3292]!	; 0xcdc

000113cc <__ctype_b_loc@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #102400	; 0x19000
   113d4:	ldr	pc, [ip, #3284]!	; 0xcd4

000113d8 <exit@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #102400	; 0x19000
   113e0:	ldr	pc, [ip, #3276]!	; 0xccc

000113e4 <strlen@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #102400	; 0x19000
   113ec:	ldr	pc, [ip, #3268]!	; 0xcc4

000113f0 <strchr@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #102400	; 0x19000
   113f8:	ldr	pc, [ip, #3260]!	; 0xcbc

000113fc <fprintf@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #102400	; 0x19000
   11404:	ldr	pc, [ip, #3252]!	; 0xcb4

00011408 <__errno_location@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #102400	; 0x19000
   11410:	ldr	pc, [ip, #3244]!	; 0xcac

00011414 <strerror_r@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #102400	; 0x19000
   1141c:	ldr	pc, [ip, #3236]!	; 0xca4

00011420 <bind@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #102400	; 0x19000
   11428:	ldr	pc, [ip, #3228]!	; 0xc9c

0001142c <memset@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #102400	; 0x19000
   11434:	ldr	pc, [ip, #3220]!	; 0xc94

00011438 <write@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #102400	; 0x19000
   11440:	ldr	pc, [ip, #3212]!	; 0xc8c

00011444 <fileno@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #102400	; 0x19000
   1144c:	ldr	pc, [ip, #3204]!	; 0xc84

00011450 <memchr@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #102400	; 0x19000
   11458:	ldr	pc, [ip, #3196]!	; 0xc7c

0001145c <fclose@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #102400	; 0x19000
   11464:	ldr	pc, [ip, #3188]!	; 0xc74

00011468 <fseeko64@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #102400	; 0x19000
   11470:	ldr	pc, [ip, #3180]!	; 0xc6c

00011474 <sendto@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #102400	; 0x19000
   1147c:	ldr	pc, [ip, #3172]!	; 0xc64

00011480 <__overflow@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #102400	; 0x19000
   11488:	ldr	pc, [ip, #3164]!	; 0xc5c

0001148c <fork@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #102400	; 0x19000
   11494:	ldr	pc, [ip, #3156]!	; 0xc54

00011498 <getnameinfo@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #102400	; 0x19000
   114a0:	ldr	pc, [ip, #3148]!	; 0xc4c

000114a4 <strrchr@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #102400	; 0x19000
   114ac:	ldr	pc, [ip, #3140]!	; 0xc44

000114b0 <vfprintf@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #102400	; 0x19000
   114b8:	ldr	pc, [ip, #3132]!	; 0xc3c

000114bc <__sigsetjmp@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #102400	; 0x19000
   114c4:	ldr	pc, [ip, #3124]!	; 0xc34

000114c8 <fputc@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #102400	; 0x19000
   114d0:	ldr	pc, [ip, #3116]!	; 0xc2c

000114d4 <syslog@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #102400	; 0x19000
   114dc:	ldr	pc, [ip, #3108]!	; 0xc24

000114e0 <setuid@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #102400	; 0x19000
   114e8:	ldr	pc, [ip, #3100]!	; 0xc1c

000114ec <sprintf@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #102400	; 0x19000
   114f4:	ldr	pc, [ip, #3092]!	; 0xc14

000114f8 <openlog@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #102400	; 0x19000
   11500:	ldr	pc, [ip, #3084]!	; 0xc0c

00011504 <putc@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #102400	; 0x19000
   1150c:	ldr	pc, [ip, #3076]!	; 0xc04

00011510 <flockfile@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #102400	; 0x19000
   11518:	ldr	pc, [ip, #3068]!	; 0xbfc

0001151c <vsnprintf@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #102400	; 0x19000
   11524:	ldr	pc, [ip, #3060]!	; 0xbf4

00011528 <qsort@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #102400	; 0x19000
   11530:	ldr	pc, [ip, #3052]!	; 0xbec

00011534 <socket@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #102400	; 0x19000
   1153c:	ldr	pc, [ip, #3044]!	; 0xbe4

00011540 <__xstat64@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #102400	; 0x19000
   11548:	ldr	pc, [ip, #3036]!	; 0xbdc

0001154c <strncmp@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #102400	; 0x19000
   11554:	ldr	pc, [ip, #3028]!	; 0xbd4

00011558 <abort@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #102400	; 0x19000
   11560:	ldr	pc, [ip, #3020]!	; 0xbcc

00011564 <getc@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #102400	; 0x19000
   1156c:	ldr	pc, [ip, #3012]!	; 0xbc4

00011570 <recv@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #102400	; 0x19000
   11578:	ldr	pc, [ip, #3004]!	; 0xbbc

0001157c <siglongjmp@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #102400	; 0x19000
   11584:	ldr	pc, [ip, #2996]!	; 0xbb4

00011588 <close@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #102400	; 0x19000
   11590:	ldr	pc, [ip, #2988]!	; 0xbac

00011594 <getgrnam@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #102400	; 0x19000
   1159c:	ldr	pc, [ip, #2980]!	; 0xba4

000115a0 <__assert_fail@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #102400	; 0x19000
   115a8:	ldr	pc, [ip, #2972]!	; 0xb9c

Disassembly of section .text:

000115ac <argp_parse@@Base-0x1dc0>:
   115ac:	mov	fp, #0
   115b0:	mov	lr, #0
   115b4:	pop	{r1}		; (ldr r1, [sp], #4)
   115b8:	mov	r2, sp
   115bc:	push	{r2}		; (str r2, [sp, #-4]!)
   115c0:	push	{r0}		; (str r0, [sp, #-4]!)
   115c4:	ldr	ip, [pc, #16]	; 115dc <__assert_fail@plt+0x3c>
   115c8:	push	{ip}		; (str ip, [sp, #-4]!)
   115cc:	ldr	r0, [pc, #12]	; 115e0 <__assert_fail@plt+0x40>
   115d0:	ldr	r3, [pc, #12]	; 115e4 <__assert_fail@plt+0x44>
   115d4:	bl	11390 <__libc_start_main@plt>
   115d8:	bl	11558 <abort@plt>
   115dc:	andeq	r9, r1, r0, asr #12
   115e0:	ldrdeq	r2, [r1], -r0
   115e4:	andeq	r9, r1, r0, ror #11
   115e8:	ldr	r3, [pc, #20]	; 11604 <__assert_fail@plt+0x64>
   115ec:	ldr	r2, [pc, #20]	; 11608 <__assert_fail@plt+0x68>
   115f0:	add	r3, pc, r3
   115f4:	ldr	r2, [r3, r2]
   115f8:	cmp	r2, #0
   115fc:	bxeq	lr
   11600:	b	113b4 <__gmon_start__@plt>
   11604:	andeq	r9, r1, r8, lsl #20
   11608:	andeq	r0, r0, r8, asr #2
   1160c:	ldr	r3, [pc, #28]	; 11630 <__assert_fail@plt+0x90>
   11610:	ldr	r0, [pc, #28]	; 11634 <__assert_fail@plt+0x94>
   11614:	sub	r3, r3, r0
   11618:	cmp	r3, #6
   1161c:	bxls	lr
   11620:	ldr	r3, [pc, #16]	; 11638 <__assert_fail@plt+0x98>
   11624:	cmp	r3, #0
   11628:	bxeq	lr
   1162c:	bx	r3
   11630:	andeq	fp, r2, r7, ror #5
   11634:	andeq	fp, r2, r4, ror #5
   11638:	andeq	r0, r0, r0
   1163c:	ldr	r1, [pc, #36]	; 11668 <__assert_fail@plt+0xc8>
   11640:	ldr	r0, [pc, #36]	; 1166c <__assert_fail@plt+0xcc>
   11644:	sub	r1, r1, r0
   11648:	asr	r1, r1, #2
   1164c:	add	r1, r1, r1, lsr #31
   11650:	asrs	r1, r1, #1
   11654:	bxeq	lr
   11658:	ldr	r3, [pc, #16]	; 11670 <__assert_fail@plt+0xd0>
   1165c:	cmp	r3, #0
   11660:	bxeq	lr
   11664:	bx	r3
   11668:	andeq	fp, r2, r4, ror #5
   1166c:	andeq	fp, r2, r4, ror #5
   11670:	andeq	r0, r0, r0
   11674:	push	{r4, lr}
   11678:	ldr	r4, [pc, #24]	; 11698 <__assert_fail@plt+0xf8>
   1167c:	ldrb	r3, [r4]
   11680:	cmp	r3, #0
   11684:	popne	{r4, pc}
   11688:	bl	1160c <__assert_fail@plt+0x6c>
   1168c:	mov	r3, #1
   11690:	strb	r3, [r4]
   11694:	pop	{r4, pc}
   11698:	strdeq	fp, [r2], -r8
   1169c:	ldr	r0, [pc, #40]	; 116cc <__assert_fail@plt+0x12c>
   116a0:	ldr	r3, [r0]
   116a4:	cmp	r3, #0
   116a8:	bne	116b0 <__assert_fail@plt+0x110>
   116ac:	b	1163c <__assert_fail@plt+0x9c>
   116b0:	ldr	r3, [pc, #24]	; 116d0 <__assert_fail@plt+0x130>
   116b4:	cmp	r3, #0
   116b8:	beq	116ac <__assert_fail@plt+0x10c>
   116bc:	push	{r4, lr}
   116c0:	blx	r3
   116c4:	pop	{r4, lr}
   116c8:	b	1163c <__assert_fail@plt+0x9c>
   116cc:	andeq	sl, r2, ip, lsl #30
   116d0:	andeq	r0, r0, r0
   116d4:	push	{r4, lr}
   116d8:	mov	r0, #0
   116dc:	bl	113d8 <exit@plt>
   116e0:	push	{r4, r5, r6, lr}
   116e4:	mov	r4, r1
   116e8:	sub	r0, r0, #103	; 0x67
   116ec:	cmp	r0, #14
   116f0:	ldrls	pc, [pc, r0, lsl #2]
   116f4:	b	117b4 <__assert_fail@plt+0x214>
   116f8:	andeq	r1, r1, r8, asr #14
   116fc:			; <UNDEFINED> instruction: 0x000117b4
   11700:			; <UNDEFINED> instruction: 0x000117b4
   11704:			; <UNDEFINED> instruction: 0x000117b4
   11708:			; <UNDEFINED> instruction: 0x000117b4
   1170c:	andeq	r1, r1, r4, lsr r7
   11710:			; <UNDEFINED> instruction: 0x000117b4
   11714:	andeq	r1, r1, r8, ror #14
   11718:			; <UNDEFINED> instruction: 0x000117b4
   1171c:			; <UNDEFINED> instruction: 0x000117b4
   11720:			; <UNDEFINED> instruction: 0x000117b4
   11724:			; <UNDEFINED> instruction: 0x000117b4
   11728:	andeq	r1, r1, ip, ror r7
   1172c:			; <UNDEFINED> instruction: 0x000117b4
   11730:	muleq	r1, r4, r7
   11734:	mov	r2, #1
   11738:	ldr	r3, [pc, #124]	; 117bc <__assert_fail@plt+0x21c>
   1173c:	str	r2, [r3]
   11740:	mov	r0, #0
   11744:	pop	{r4, r5, r6, pc}
   11748:	ldr	r5, [pc, #108]	; 117bc <__assert_fail@plt+0x21c>
   1174c:	ldr	r0, [r5, #4]
   11750:	bl	13f60 <argp_parse@@Base+0xbf4>
   11754:	mov	r0, r4
   11758:	bl	14b00 <argp_parse@@Base+0x1794>
   1175c:	str	r0, [r5, #4]
   11760:	mov	r0, #0
   11764:	pop	{r4, r5, r6, pc}
   11768:	mov	r2, #1
   1176c:	ldr	r3, [pc, #72]	; 117bc <__assert_fail@plt+0x21c>
   11770:	str	r2, [r3, #8]
   11774:	mov	r0, #0
   11778:	pop	{r4, r5, r6, pc}
   1177c:	mov	r0, r1
   11780:	bl	14b00 <argp_parse@@Base+0x1794>
   11784:	ldr	r3, [pc, #48]	; 117bc <__assert_fail@plt+0x21c>
   11788:	str	r0, [r3, #12]
   1178c:	mov	r0, #0
   11790:	pop	{r4, r5, r6, pc}
   11794:	ldr	r5, [pc, #32]	; 117bc <__assert_fail@plt+0x21c>
   11798:	ldr	r0, [r5, #16]
   1179c:	bl	13f60 <argp_parse@@Base+0xbf4>
   117a0:	mov	r0, r4
   117a4:	bl	14b00 <argp_parse@@Base+0x1794>
   117a8:	str	r0, [r5, #16]
   117ac:	mov	r0, #0
   117b0:	pop	{r4, r5, r6, pc}
   117b4:	mov	r0, #7
   117b8:	pop	{r4, r5, r6, pc}
   117bc:	strdeq	fp, [r2], -ip
   117c0:	push	{r4, r5, r6, r7, lr}
   117c4:	sub	sp, sp, #12
   117c8:	ldr	r3, [pc, #228]	; 118b4 <__assert_fail@plt+0x314>
   117cc:	mov	r2, #1280	; 0x500
   117d0:	strh	r2, [r3, #20]
   117d4:	rev16	r2, r0
   117d8:	strh	r2, [r3, #22]
   117dc:	ldr	r3, [pc, #212]	; 118b8 <__assert_fail@plt+0x318>
   117e0:	ldr	r3, [r3]
   117e4:	cmp	r0, r3
   117e8:	movne	r2, #0
   117ec:	moveq	r2, #1
   117f0:	orrs	r2, r2, r3, lsr #31
   117f4:	bne	11890 <__assert_fail@plt+0x2f0>
   117f8:	ldr	r4, [pc, #184]	; 118b8 <__assert_fail@plt+0x318>
   117fc:	ldr	r3, [r4, #8]!
   11800:	cmp	r0, r3
   11804:	movne	r2, #0
   11808:	moveq	r2, #1
   1180c:	orrs	r2, r2, r3, lsr #31
   11810:	beq	117fc <__assert_fail@plt+0x25c>
   11814:	cmp	r3, #0
   11818:	blt	11898 <__assert_fail@plt+0x2f8>
   1181c:	ldr	r6, [r4, #4]
   11820:	mov	r0, r6
   11824:	bl	113e4 <strlen@plt>
   11828:	mov	r4, r0
   1182c:	ldr	r5, [pc, #128]	; 118b4 <__assert_fail@plt+0x314>
   11830:	add	r7, r5, #20
   11834:	mov	r2, r0
   11838:	mov	r1, r6
   1183c:	add	r0, r5, #24
   11840:	bl	112b8 <memcpy@plt>
   11844:	add	r2, r5, r4
   11848:	mov	r3, #0
   1184c:	strb	r3, [r2, #24]
   11850:	add	r4, r4, #5
   11854:	ldr	r0, [r5, #536]	; 0x218
   11858:	add	r2, r5, #540	; 0x21c
   1185c:	ldr	r1, [r5, #668]	; 0x29c
   11860:	str	r1, [sp, #4]
   11864:	str	r2, [sp]
   11868:	mov	r2, r4
   1186c:	mov	r1, r7
   11870:	bl	11474 <sendto@plt>
   11874:	cmp	r4, r0
   11878:	beq	11888 <__assert_fail@plt+0x2e8>
   1187c:	ldr	r1, [pc, #56]	; 118bc <__assert_fail@plt+0x31c>
   11880:	mov	r0, #3
   11884:	bl	114d4 <syslog@plt>
   11888:	add	sp, sp, #12
   1188c:	pop	{r4, r5, r6, r7, pc}
   11890:	ldr	r4, [pc, #32]	; 118b8 <__assert_fail@plt+0x318>
   11894:	b	11814 <__assert_fail@plt+0x274>
   11898:	sub	r0, r0, #100	; 0x64
   1189c:	bl	1139c <strerror@plt>
   118a0:	str	r0, [r4, #4]
   118a4:	mov	r2, #0
   118a8:	ldr	r3, [pc, #4]	; 118b4 <__assert_fail@plt+0x314>
   118ac:	strh	r2, [r3, #22]
   118b0:	b	1181c <__assert_fail@plt+0x27c>
   118b4:	strdeq	fp, [r2], -ip
   118b8:	andeq	fp, r2, r4, asr r1
   118bc:	andeq	r9, r1, r0, asr r6
   118c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   118c4:	sub	sp, sp, #116	; 0x74
   118c8:	mov	r6, r0
   118cc:	mov	r7, r1
   118d0:	ldr	r4, [r0]
   118d4:	ldr	r1, [pc, #648]	; 11b64 <__assert_fail@plt+0x5c4>
   118d8:	mov	r0, r4
   118dc:	bl	1121c <strstr@plt>
   118e0:	cmp	r0, #0
   118e4:	movne	r5, #2
   118e8:	beq	118f8 <__assert_fail@plt+0x358>
   118ec:	mov	r0, r5
   118f0:	add	sp, sp, #116	; 0x74
   118f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118f8:	ldrb	r3, [r4]
   118fc:	cmp	r3, #47	; 0x2f
   11900:	beq	11950 <__assert_fail@plt+0x3b0>
   11904:	cmp	r7, #1
   11908:	movne	r5, #2
   1190c:	bne	118ec <__assert_fail@plt+0x34c>
   11910:	mov	r2, #3
   11914:	ldr	r1, [pc, #588]	; 11b68 <__assert_fail@plt+0x5c8>
   11918:	mov	r0, r4
   1191c:	bl	1154c <strncmp@plt>
   11920:	cmp	r0, #0
   11924:	moveq	r5, #2
   11928:	beq	118ec <__assert_fail@plt+0x34c>
   1192c:	ldr	r3, [pc, #568]	; 11b6c <__assert_fail@plt+0x5cc>
   11930:	ldr	r3, [r3, #672]	; 0x2a0
   11934:	cmp	r3, #0
   11938:	beq	11b5c <__assert_fail@plt+0x5bc>
   1193c:	ldr	r8, [pc, #556]	; 11b70 <__assert_fail@plt+0x5d0>
   11940:	mov	r5, r7
   11944:	sub	sl, r8, #672	; 0x2a0
   11948:	ldr	fp, [pc, #548]	; 11b74 <__assert_fail@plt+0x5d4>
   1194c:	b	11a88 <__assert_fail@plt+0x4e8>
   11950:	ldr	r3, [pc, #532]	; 11b6c <__assert_fail@plt+0x5cc>
   11954:	ldr	r6, [r3, #672]	; 0x2a0
   11958:	cmp	r6, #0
   1195c:	beq	119d0 <__assert_fail@plt+0x430>
   11960:	ldr	r5, [r3, #676]	; 0x2a4
   11964:	cmp	r5, #1
   11968:	beq	119d0 <__assert_fail@plt+0x430>
   1196c:	add	r8, r3, #672	; 0x2a0
   11970:	b	1198c <__assert_fail@plt+0x3ec>
   11974:	ldr	r6, [r8, #8]!
   11978:	cmp	r6, #0
   1197c:	beq	119b0 <__assert_fail@plt+0x410>
   11980:	ldr	r5, [r8, #4]
   11984:	cmp	r5, #1
   11988:	beq	119d0 <__assert_fail@plt+0x430>
   1198c:	mov	r2, r5
   11990:	mov	r1, r6
   11994:	mov	r0, r4
   11998:	bl	1154c <strncmp@plt>
   1199c:	cmp	r0, #0
   119a0:	bne	11974 <__assert_fail@plt+0x3d4>
   119a4:	ldrb	r3, [r4, r5]
   119a8:	cmp	r3, #47	; 0x2f
   119ac:	bne	11974 <__assert_fail@plt+0x3d4>
   119b0:	ldr	r3, [pc, #440]	; 11b70 <__assert_fail@plt+0x5d0>
   119b4:	clz	r6, r6
   119b8:	lsr	r6, r6, #5
   119bc:	cmp	r8, r3
   119c0:	moveq	r6, #0
   119c4:	cmp	r6, #0
   119c8:	movne	r5, #2
   119cc:	bne	118ec <__assert_fail@plt+0x34c>
   119d0:	add	r2, sp, #8
   119d4:	mov	r1, r4
   119d8:	mov	r0, #3
   119dc:	bl	11540 <__xstat64@plt>
   119e0:	cmp	r0, #0
   119e4:	blt	11a50 <__assert_fail@plt+0x4b0>
   119e8:	ldr	r3, [sp, #24]
   119ec:	and	r2, r3, #61440	; 0xf000
   119f0:	cmp	r2, #32768	; 0x8000
   119f4:	movne	r5, #1
   119f8:	bne	118ec <__assert_fail@plt+0x34c>
   119fc:	cmp	r7, #1
   11a00:	beq	11a68 <__assert_fail@plt+0x4c8>
   11a04:	tst	r3, #2
   11a08:	moveq	r5, #2
   11a0c:	beq	118ec <__assert_fail@plt+0x34c>
   11a10:	ldr	r1, [pc, #352]	; 11b78 <__assert_fail@plt+0x5d8>
   11a14:	mov	r0, r4
   11a18:	bl	11360 <open64@plt>
   11a1c:	cmp	r0, #0
   11a20:	blt	11b44 <__assert_fail@plt+0x5a4>
   11a24:	ldr	r1, [pc, #336]	; 11b7c <__assert_fail@plt+0x5dc>
   11a28:	bl	111f8 <fdopen@plt>
   11a2c:	ldr	r3, [pc, #332]	; 11b80 <__assert_fail@plt+0x5e0>
   11a30:	str	r0, [r3]
   11a34:	cmp	r0, #0
   11a38:	movne	r5, #0
   11a3c:	bne	118ec <__assert_fail@plt+0x34c>
   11a40:	bl	11408 <__errno_location@plt>
   11a44:	ldr	r5, [r0]
   11a48:	add	r5, r5, #100	; 0x64
   11a4c:	b	118ec <__assert_fail@plt+0x34c>
   11a50:	bl	11408 <__errno_location@plt>
   11a54:	ldr	r5, [r0]
   11a58:	cmp	r5, #2
   11a5c:	moveq	r5, #1
   11a60:	movne	r5, #2
   11a64:	b	118ec <__assert_fail@plt+0x34c>
   11a68:	tst	r3, #4
   11a6c:	movne	r9, r4
   11a70:	bne	11b1c <__assert_fail@plt+0x57c>
   11a74:	mov	r5, #2
   11a78:	b	118ec <__assert_fail@plt+0x34c>
   11a7c:	ldr	r3, [r8, #8]!
   11a80:	cmp	r3, #0
   11a84:	beq	118ec <__assert_fail@plt+0x34c>
   11a88:	str	r8, [sp, #4]
   11a8c:	ldr	r0, [sl, #840]	; 0x348
   11a90:	bl	13f60 <argp_parse@@Base+0xbf4>
   11a94:	ldr	r0, [r8]
   11a98:	bl	113e4 <strlen@plt>
   11a9c:	mov	r9, r0
   11aa0:	mov	r0, r4
   11aa4:	bl	113e4 <strlen@plt>
   11aa8:	add	r0, r9, r0
   11aac:	add	r0, r0, #2
   11ab0:	bl	14b98 <argp_parse@@Base+0x182c>
   11ab4:	str	r0, [sl, #840]	; 0x348
   11ab8:	cmp	r0, #0
   11abc:	beq	11b54 <__assert_fail@plt+0x5b4>
   11ac0:	mov	r3, r4
   11ac4:	ldr	r2, [r8]
   11ac8:	mov	r1, fp
   11acc:	bl	114ec <sprintf@plt>
   11ad0:	ldr	r9, [sl, #840]	; 0x348
   11ad4:	add	r2, sp, #8
   11ad8:	mov	r1, r9
   11adc:	mov	r0, #3
   11ae0:	bl	11540 <__xstat64@plt>
   11ae4:	cmp	r0, #0
   11ae8:	bne	11a7c <__assert_fail@plt+0x4dc>
   11aec:	ldr	r3, [sp, #24]
   11af0:	and	r2, r3, #61440	; 0xf000
   11af4:	cmp	r2, #32768	; 0x8000
   11af8:	bne	11a7c <__assert_fail@plt+0x4dc>
   11afc:	tst	r3, #4
   11b00:	moveq	r5, #2
   11b04:	beq	11a7c <__assert_fail@plt+0x4dc>
   11b08:	ldr	r3, [sp, #4]
   11b0c:	ldr	r3, [r3]
   11b10:	cmp	r3, #0
   11b14:	beq	118ec <__assert_fail@plt+0x34c>
   11b18:	str	r9, [r6]
   11b1c:	mov	r1, #0
   11b20:	mov	r0, r9
   11b24:	bl	11360 <open64@plt>
   11b28:	cmp	r0, #0
   11b2c:	blt	11b44 <__assert_fail@plt+0x5a4>
   11b30:	ldr	r3, [pc, #68]	; 11b7c <__assert_fail@plt+0x5dc>
   11b34:	ldr	r1, [pc, #72]	; 11b84 <__assert_fail@plt+0x5e4>
   11b38:	cmp	r7, #1
   11b3c:	movne	r1, r3
   11b40:	b	11a28 <__assert_fail@plt+0x488>
   11b44:	bl	11408 <__errno_location@plt>
   11b48:	ldr	r5, [r0]
   11b4c:	add	r5, r5, #100	; 0x64
   11b50:	b	118ec <__assert_fail@plt+0x34c>
   11b54:	mov	r5, #12
   11b58:	b	118ec <__assert_fail@plt+0x34c>
   11b5c:	mov	r5, r7
   11b60:	b	118ec <__assert_fail@plt+0x34c>
   11b64:	andeq	r9, r1, r0, ror #12
   11b68:	andeq	r9, r1, r8, ror #12
   11b6c:	strdeq	fp, [r2], -ip
   11b70:	muleq	r2, ip, r5
   11b74:	andeq	r9, r1, ip, ror #12
   11b78:	andeq	r0, r0, r1, lsl #4
   11b7c:	andeq	r9, r1, ip, asr r6
   11b80:	andeq	fp, r2, r4, lsr lr
   11b84:	andeq	sl, r1, r4, ror r2
   11b88:	push	{r4, lr}
   11b8c:	ldr	r2, [pc, #36]	; 11bb8 <__assert_fail@plt+0x618>
   11b90:	ldr	r3, [r2]
   11b94:	add	r3, r3, #5
   11b98:	str	r3, [r2]
   11b9c:	cmp	r3, #24
   11ba0:	ble	11bac <__assert_fail@plt+0x60c>
   11ba4:	mov	r0, #1
   11ba8:	bl	113d8 <exit@plt>
   11bac:	mov	r1, #1
   11bb0:	ldr	r0, [pc, #4]	; 11bbc <__assert_fail@plt+0x61c>
   11bb4:	bl	1157c <siglongjmp@plt>
   11bb8:	andeq	fp, r2, r0, lsr lr
   11bbc:	andeq	fp, r2, r8, lsr #25
   11bc0:	push	{r4, r5, r6, r7, r8, r9, lr}
   11bc4:	sub	sp, sp, #36	; 0x24
   11bc8:	str	r0, [sp, #8]
   11bcc:	ldr	r1, [pc, #568]	; 11e0c <__assert_fail@plt+0x86c>
   11bd0:	mov	r0, #14
   11bd4:	bl	112c4 <signal@plt>
   11bd8:	bl	129c4 <__assert_fail@plt+0x1424>
   11bdc:	str	r0, [sp, #28]
   11be0:	mov	r3, #1
   11be4:	str	r3, [sp, #24]
   11be8:	ldr	r3, [pc, #544]	; 11e10 <__assert_fail@plt+0x870>
   11bec:	add	r3, r3, #540	; 0x21c
   11bf0:	str	r3, [sp, #16]
   11bf4:	ldr	r3, [sp, #8]
   11bf8:	ldr	r2, [r3, #16]
   11bfc:	add	r1, sp, #28
   11c00:	ldr	r3, [pc, #524]	; 11e14 <__assert_fail@plt+0x874>
   11c04:	ldr	r0, [r3]
   11c08:	bl	12b18 <__assert_fail@plt+0x1578>
   11c0c:	subs	r3, r0, #0
   11c10:	str	r3, [sp, #12]
   11c14:	blt	11dac <__assert_fail@plt+0x80c>
   11c18:	ldr	r3, [sp, #28]
   11c1c:	mov	r2, #0
   11c20:	strb	r2, [r3]
   11c24:	mov	r1, #3
   11c28:	strb	r1, [r3, #1]
   11c2c:	ldr	r1, [sp, #28]
   11c30:	ldr	r3, [sp, #24]
   11c34:	rev16	r3, r3
   11c38:	uxth	r3, r3
   11c3c:	strb	r3, [r1, #2]
   11c40:	lsr	r3, r3, #8
   11c44:	strb	r3, [r1, #3]
   11c48:	ldr	r3, [pc, #456]	; 11e18 <__assert_fail@plt+0x878>
   11c4c:	str	r2, [r3]
   11c50:	mov	r1, #14
   11c54:	ldr	r0, [pc, #448]	; 11e1c <__assert_fail@plt+0x87c>
   11c58:	bl	114bc <__sigsetjmp@plt>
   11c5c:	ldr	r3, [sp, #12]
   11c60:	add	r8, r3, #4
   11c64:	mov	r4, #0
   11c68:	mov	r5, #5
   11c6c:	ldr	r3, [pc, #412]	; 11e10 <__assert_fail@plt+0x870>
   11c70:	ldr	r3, [r3, #536]	; 0x218
   11c74:	str	r3, [sp, #20]
   11c78:	ldr	r3, [pc, #400]	; 11e10 <__assert_fail@plt+0x870>
   11c7c:	ldr	r3, [r3, #668]	; 0x29c
   11c80:	str	r3, [sp, #4]
   11c84:	ldr	r3, [sp, #16]
   11c88:	str	r3, [sp]
   11c8c:	mov	r3, r4
   11c90:	mov	r2, r8
   11c94:	ldr	r1, [sp, #28]
   11c98:	ldr	r0, [sp, #20]
   11c9c:	bl	11474 <sendto@plt>
   11ca0:	cmp	r8, r0
   11ca4:	bne	11dc0 <__assert_fail@plt+0x820>
   11ca8:	ldr	r3, [sp, #8]
   11cac:	ldr	r1, [r3, #16]
   11cb0:	ldr	r3, [pc, #348]	; 11e14 <__assert_fail@plt+0x874>
   11cb4:	ldr	r0, [r3]
   11cb8:	bl	12a10 <__assert_fail@plt+0x1470>
   11cbc:	ldr	r3, [pc, #332]	; 11e10 <__assert_fail@plt+0x870>
   11cc0:	add	r7, r3, #844	; 0x34c
   11cc4:	mov	r6, #516	; 0x204
   11cc8:	mov	r0, r5
   11ccc:	bl	112f4 <alarm@plt>
   11cd0:	mov	r3, r4
   11cd4:	mov	r2, r6
   11cd8:	mov	r1, r7
   11cdc:	sub	r0, r7, #844	; 0x34c
   11ce0:	ldr	r0, [r0, #536]	; 0x218
   11ce4:	bl	11570 <recv@plt>
   11ce8:	mov	r9, r0
   11cec:	mov	r0, r4
   11cf0:	bl	112f4 <alarm@plt>
   11cf4:	cmp	r9, #0
   11cf8:	blt	11dd0 <__assert_fail@plt+0x830>
   11cfc:	ldr	r3, [pc, #284]	; 11e20 <__assert_fail@plt+0x880>
   11d00:	ldrb	r3, [r3]
   11d04:	ldr	r2, [pc, #276]	; 11e20 <__assert_fail@plt+0x880>
   11d08:	ldrb	r2, [r2, #1]
   11d0c:	orr	r3, r3, r2, lsl #8
   11d10:	rev16	r3, r3
   11d14:	sxth	r2, r3
   11d18:	uxth	r3, r3
   11d1c:	ldr	r1, [pc, #252]	; 11e20 <__assert_fail@plt+0x880>
   11d20:	strb	r3, [r1]
   11d24:	lsr	r3, r3, #8
   11d28:	strb	r3, [r1, #1]
   11d2c:	ldrb	r3, [r1, #2]
   11d30:	ldrb	r1, [r1, #3]
   11d34:	orr	r3, r3, r1, lsl #8
   11d38:	rev16	r3, r3
   11d3c:	uxth	r3, r3
   11d40:	ldr	r1, [pc, #216]	; 11e20 <__assert_fail@plt+0x880>
   11d44:	strb	r3, [r1, #2]
   11d48:	lsr	r1, r3, #8
   11d4c:	ldr	r0, [pc, #204]	; 11e20 <__assert_fail@plt+0x880>
   11d50:	strb	r1, [r0, #3]
   11d54:	cmp	r2, #5
   11d58:	beq	11ddc <__assert_fail@plt+0x83c>
   11d5c:	cmp	r2, #4
   11d60:	bne	11cc8 <__assert_fail@plt+0x728>
   11d64:	ldr	r2, [sp, #24]
   11d68:	uxth	r2, r2
   11d6c:	cmp	r2, r3
   11d70:	beq	11df0 <__assert_fail@plt+0x850>
   11d74:	sub	r3, r0, #844	; 0x34c
   11d78:	ldr	r0, [r3, #536]	; 0x218
   11d7c:	bl	12d10 <__assert_fail@plt+0x1770>
   11d80:	ldr	r3, [sp, #24]
   11d84:	ldr	r2, [pc, #148]	; 11e20 <__assert_fail@plt+0x880>
   11d88:	ldrb	r2, [r2, #2]
   11d8c:	ldr	r1, [pc, #140]	; 11e20 <__assert_fail@plt+0x880>
   11d90:	ldrb	r1, [r1, #3]
   11d94:	sub	r3, r3, #1
   11d98:	orr	r2, r2, r1, lsl #8
   11d9c:	uxth	r3, r3
   11da0:	cmp	r2, r3
   11da4:	bne	11cc8 <__assert_fail@plt+0x728>
   11da8:	b	11c6c <__assert_fail@plt+0x6cc>
   11dac:	bl	11408 <__errno_location@plt>
   11db0:	ldr	r0, [r0]
   11db4:	add	r0, r0, #100	; 0x64
   11db8:	bl	117c0 <__assert_fail@plt+0x220>
   11dbc:	b	11ddc <__assert_fail@plt+0x83c>
   11dc0:	ldr	r1, [pc, #92]	; 11e24 <__assert_fail@plt+0x884>
   11dc4:	mov	r0, #3
   11dc8:	bl	114d4 <syslog@plt>
   11dcc:	b	11ddc <__assert_fail@plt+0x83c>
   11dd0:	ldr	r1, [pc, #80]	; 11e28 <__assert_fail@plt+0x888>
   11dd4:	mov	r0, #3
   11dd8:	bl	114d4 <syslog@plt>
   11ddc:	ldr	r3, [pc, #48]	; 11e14 <__assert_fail@plt+0x874>
   11de0:	ldr	r0, [r3]
   11de4:	bl	1145c <fclose@plt>
   11de8:	add	sp, sp, #36	; 0x24
   11dec:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11df0:	ldr	r3, [sp, #24]
   11df4:	add	r3, r3, #1
   11df8:	str	r3, [sp, #24]
   11dfc:	ldr	r3, [sp, #12]
   11e00:	cmp	r3, #512	; 0x200
   11e04:	bne	11ddc <__assert_fail@plt+0x83c>
   11e08:	b	11bf4 <__assert_fail@plt+0x654>
   11e0c:	andeq	r1, r1, r8, lsl #23
   11e10:	strdeq	fp, [r2], -ip
   11e14:	andeq	fp, r2, r4, lsr lr
   11e18:	andeq	fp, r2, r0, lsr lr
   11e1c:	andeq	fp, r2, r8, lsr #25
   11e20:	andeq	fp, r2, r8, asr #12
   11e24:	andeq	r9, r1, r4, ror r6
   11e28:	andeq	r9, r1, r8, lsl #13
   11e2c:	push	{r4, r5, r6, r7, r8, r9, lr}
   11e30:	sub	sp, sp, #36	; 0x24
   11e34:	str	r0, [sp, #16]
   11e38:	ldr	r1, [pc, #836]	; 12184 <__assert_fail@plt+0xbe4>
   11e3c:	mov	r0, #14
   11e40:	bl	112c4 <signal@plt>
   11e44:	bl	1297c <__assert_fail@plt+0x13dc>
   11e48:	str	r0, [sp, #28]
   11e4c:	mov	r3, #0
   11e50:	str	r3, [sp, #24]
   11e54:	str	r3, [sp, #12]
   11e58:	ldr	r2, [pc, #808]	; 12188 <__assert_fail@plt+0xbe8>
   11e5c:	ldr	r3, [sp, #12]
   11e60:	str	r3, [r2]
   11e64:	ldr	r2, [pc, #800]	; 1218c <__assert_fail@plt+0xbec>
   11e68:	mov	r1, #0
   11e6c:	strb	r1, [r2]
   11e70:	mov	r3, #4
   11e74:	strb	r3, [r2, #1]
   11e78:	ldr	r3, [sp, #24]
   11e7c:	rev16	r3, r3
   11e80:	uxth	r3, r3
   11e84:	strb	r3, [r2, #2]
   11e88:	lsr	r3, r3, #8
   11e8c:	strb	r3, [r2, #3]
   11e90:	ldr	r3, [sp, #24]
   11e94:	add	r3, r3, #1
   11e98:	str	r3, [sp, #24]
   11e9c:	mov	r1, #14
   11ea0:	ldr	r0, [pc, #744]	; 12190 <__assert_fail@plt+0xbf0>
   11ea4:	bl	114bc <__sigsetjmp@plt>
   11ea8:	ldr	r2, [pc, #740]	; 12194 <__assert_fail@plt+0xbf4>
   11eac:	add	r8, r2, #844	; 0x34c
   11eb0:	mov	r7, #4
   11eb4:	ldr	r5, [sp, #12]
   11eb8:	ldr	r3, [pc, #724]	; 12194 <__assert_fail@plt+0xbf4>
   11ebc:	ldr	r3, [r3, #536]	; 0x218
   11ec0:	str	r3, [sp, #20]
   11ec4:	ldr	r3, [pc, #712]	; 12194 <__assert_fail@plt+0xbf4>
   11ec8:	ldr	r3, [r3, #668]	; 0x29c
   11ecc:	str	r3, [sp, #4]
   11ed0:	ldr	r3, [pc, #704]	; 12198 <__assert_fail@plt+0xbf8>
   11ed4:	str	r3, [sp]
   11ed8:	mov	r3, r5
   11edc:	mov	r2, r7
   11ee0:	mov	r1, r8
   11ee4:	ldr	r0, [sp, #20]
   11ee8:	bl	11474 <sendto@plt>
   11eec:	cmp	r0, #4
   11ef0:	bne	11ff8 <__assert_fail@plt+0xa58>
   11ef4:	ldr	r3, [sp, #16]
   11ef8:	ldr	r1, [r3, #16]
   11efc:	ldr	r3, [pc, #664]	; 1219c <__assert_fail@plt+0xbfc>
   11f00:	ldr	r0, [r3]
   11f04:	bl	12b98 <__assert_fail@plt+0x15f8>
   11f08:	mov	r9, #5
   11f0c:	mov	r6, #516	; 0x204
   11f10:	mov	r0, r9
   11f14:	bl	112f4 <alarm@plt>
   11f18:	mov	r3, r5
   11f1c:	mov	r2, r6
   11f20:	ldr	r1, [sp, #28]
   11f24:	ldr	r0, [pc, #616]	; 12194 <__assert_fail@plt+0xbf4>
   11f28:	ldr	r0, [r0, #536]	; 0x218
   11f2c:	bl	11570 <recv@plt>
   11f30:	mov	r4, r0
   11f34:	mov	r0, r5
   11f38:	bl	112f4 <alarm@plt>
   11f3c:	cmp	r4, #0
   11f40:	blt	12008 <__assert_fail@plt+0xa68>
   11f44:	ldr	r2, [sp, #28]
   11f48:	ldrb	r3, [r2]
   11f4c:	ldrb	r1, [r2, #1]
   11f50:	orr	r3, r3, r1, lsl #8
   11f54:	rev16	r3, r3
   11f58:	uxth	r3, r3
   11f5c:	strb	r3, [r2]
   11f60:	lsr	r3, r3, #8
   11f64:	strb	r3, [r2, #1]
   11f68:	ldr	r2, [sp, #28]
   11f6c:	ldrb	r3, [r2, #2]
   11f70:	ldrb	r1, [r2, #3]
   11f74:	orr	r3, r3, r1, lsl #8
   11f78:	rev16	r3, r3
   11f7c:	uxth	r3, r3
   11f80:	strb	r3, [r2, #2]
   11f84:	lsr	r3, r3, #8
   11f88:	strb	r3, [r2, #3]
   11f8c:	ldr	r2, [sp, #28]
   11f90:	ldrb	r3, [r2]
   11f94:	ldrb	r1, [r2, #1]
   11f98:	orr	r3, r3, r1, lsl #8
   11f9c:	sxth	r3, r3
   11fa0:	cmp	r3, #5
   11fa4:	beq	12014 <__assert_fail@plt+0xa74>
   11fa8:	cmp	r3, #3
   11fac:	bne	11f10 <__assert_fail@plt+0x970>
   11fb0:	ldr	r1, [sp, #24]
   11fb4:	ldrb	r3, [r2, #2]
   11fb8:	ldrb	r2, [r2, #3]
   11fbc:	orr	r3, r3, r2, lsl #8
   11fc0:	cmp	r3, r1
   11fc4:	beq	1201c <__assert_fail@plt+0xa7c>
   11fc8:	ldr	r3, [pc, #452]	; 12194 <__assert_fail@plt+0xbf4>
   11fcc:	ldr	r0, [r3, #536]	; 0x218
   11fd0:	bl	12d10 <__assert_fail@plt+0x1770>
   11fd4:	ldr	r3, [sp, #24]
   11fd8:	ldr	r1, [sp, #28]
   11fdc:	ldrb	r2, [r1, #2]
   11fe0:	ldrb	r1, [r1, #3]
   11fe4:	orr	r2, r2, r1, lsl #8
   11fe8:	sub	r3, r3, #1
   11fec:	cmp	r2, r3
   11ff0:	bne	11f10 <__assert_fail@plt+0x970>
   11ff4:	b	11eb8 <__assert_fail@plt+0x918>
   11ff8:	ldr	r1, [pc, #416]	; 121a0 <__assert_fail@plt+0xc00>
   11ffc:	mov	r0, #3
   12000:	bl	114d4 <syslog@plt>
   12004:	b	12014 <__assert_fail@plt+0xa74>
   12008:	ldr	r1, [pc, #404]	; 121a4 <__assert_fail@plt+0xc04>
   1200c:	mov	r0, #3
   12010:	bl	114d4 <syslog@plt>
   12014:	add	sp, sp, #36	; 0x24
   12018:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1201c:	sub	r4, r4, #4
   12020:	ldr	r3, [sp, #16]
   12024:	ldr	r3, [r3, #16]
   12028:	mov	r2, r4
   1202c:	add	r1, sp, #28
   12030:	ldr	r0, [pc, #356]	; 1219c <__assert_fail@plt+0xbfc>
   12034:	ldr	r0, [r0]
   12038:	bl	12c90 <__assert_fail@plt+0x16f0>
   1203c:	cmp	r4, r0
   12040:	beq	1206c <__assert_fail@plt+0xacc>
   12044:	cmp	r0, #0
   12048:	blt	12058 <__assert_fail@plt+0xab8>
   1204c:	mov	r0, #3
   12050:	bl	117c0 <__assert_fail@plt+0x220>
   12054:	b	12014 <__assert_fail@plt+0xa74>
   12058:	bl	11408 <__errno_location@plt>
   1205c:	ldr	r0, [r0]
   12060:	add	r0, r0, #100	; 0x64
   12064:	bl	117c0 <__assert_fail@plt+0x220>
   12068:	b	12014 <__assert_fail@plt+0xa74>
   1206c:	cmp	r0, #512	; 0x200
   12070:	beq	11e58 <__assert_fail@plt+0x8b8>
   12074:	ldr	r4, [pc, #288]	; 1219c <__assert_fail@plt+0xbfc>
   12078:	ldr	r3, [sp, #16]
   1207c:	ldr	r1, [r3, #16]
   12080:	ldr	r0, [r4]
   12084:	bl	12b98 <__assert_fail@plt+0x15f8>
   12088:	ldr	r0, [r4]
   1208c:	bl	1145c <fclose@plt>
   12090:	mov	r5, #0
   12094:	ldr	r3, [pc, #248]	; 12194 <__assert_fail@plt+0xbf4>
   12098:	strb	r5, [r3, #844]	; 0x34c
   1209c:	mov	r3, #4
   120a0:	ldr	r2, [pc, #236]	; 12194 <__assert_fail@plt+0xbf4>
   120a4:	strb	r3, [r2, #845]	; 0x34d
   120a8:	ldr	r3, [sp, #24]
   120ac:	rev16	r3, r3
   120b0:	uxth	r3, r3
   120b4:	strb	r3, [r2, #846]	; 0x34e
   120b8:	lsr	r3, r3, #8
   120bc:	strb	r3, [r2, #847]	; 0x34f
   120c0:	mov	r4, r2
   120c4:	add	r3, r2, #540	; 0x21c
   120c8:	ldr	r2, [r2, #668]	; 0x29c
   120cc:	str	r2, [sp, #4]
   120d0:	str	r3, [sp]
   120d4:	mov	r3, r5
   120d8:	mov	r2, #4
   120dc:	add	r1, r4, #844	; 0x34c
   120e0:	ldr	r0, [r4, #536]	; 0x218
   120e4:	bl	11474 <sendto@plt>
   120e8:	ldr	r1, [pc, #184]	; 121a8 <__assert_fail@plt+0xc08>
   120ec:	mov	r0, #14
   120f0:	bl	112c4 <signal@plt>
   120f4:	mov	r0, #5
   120f8:	bl	112f4 <alarm@plt>
   120fc:	mov	r3, r5
   12100:	mov	r2, #516	; 0x204
   12104:	add	r1, r4, #20
   12108:	ldr	r0, [r4, #536]	; 0x218
   1210c:	bl	11570 <recv@plt>
   12110:	mov	r4, r0
   12114:	mov	r0, r5
   12118:	bl	112f4 <alarm@plt>
   1211c:	cmp	r4, #3
   12120:	ble	12014 <__assert_fail@plt+0xa74>
   12124:	ldr	r2, [sp, #28]
   12128:	ldrb	r3, [r2]
   1212c:	ldrb	r1, [r2, #1]
   12130:	orr	r3, r3, r1, lsl #8
   12134:	sxth	r3, r3
   12138:	cmp	r3, #3
   1213c:	bne	12014 <__assert_fail@plt+0xa74>
   12140:	ldr	r1, [sp, #24]
   12144:	ldrb	r3, [r2, #2]
   12148:	ldrb	r2, [r2, #3]
   1214c:	orr	r3, r3, r2, lsl #8
   12150:	cmp	r3, r1
   12154:	bne	12014 <__assert_fail@plt+0xa74>
   12158:	ldr	r1, [pc, #52]	; 12194 <__assert_fail@plt+0xbf4>
   1215c:	ldr	r0, [r1, #536]	; 0x218
   12160:	add	r3, r1, #540	; 0x21c
   12164:	ldr	r2, [r1, #668]	; 0x29c
   12168:	str	r2, [sp, #4]
   1216c:	str	r3, [sp]
   12170:	mov	r3, r5
   12174:	mov	r2, #4
   12178:	add	r1, r1, #844	; 0x34c
   1217c:	bl	11474 <sendto@plt>
   12180:	b	12014 <__assert_fail@plt+0xa74>
   12184:	andeq	r1, r1, r8, lsl #23
   12188:	andeq	fp, r2, r0, lsr lr
   1218c:	andeq	fp, r2, r8, asr #12
   12190:	andeq	fp, r2, r8, lsr #25
   12194:	strdeq	fp, [r2], -ip
   12198:	andeq	fp, r2, r8, lsl r5
   1219c:	andeq	fp, r2, r4, lsr lr
   121a0:	andeq	r9, r1, r4, ror r6
   121a4:	andeq	r9, r1, r8, lsl #13
   121a8:	ldrdeq	r1, [r1], -r4
   121ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121b0:	sub	sp, sp, #28
   121b4:	mov	r6, r0
   121b8:	add	r3, r0, #2
   121bc:	str	r3, [sp, #20]
   121c0:	add	r2, r0, #3
   121c4:	mov	r0, #1
   121c8:	ldr	ip, [pc, #700]	; 1248c <__assert_fail@plt+0xeec>
   121cc:	add	r1, ip, r1
   121d0:	mov	lr, #0
   121d4:	b	121fc <__assert_fail@plt+0xc5c>
   121d8:	ldrb	ip, [r3]
   121dc:	cmp	ip, #0
   121e0:	bne	121f4 <__assert_fail@plt+0xc54>
   121e4:	cmp	r0, #0
   121e8:	beq	12220 <__assert_fail@plt+0xc80>
   121ec:	mov	r5, r2
   121f0:	mov	r0, lr
   121f4:	add	r3, r3, #1
   121f8:	add	r2, r2, #1
   121fc:	cmp	r3, r1
   12200:	bcc	121d8 <__assert_fail@plt+0xc38>
   12204:	ldrb	ip, [r3]
   12208:	cmp	ip, #0
   1220c:	beq	121e4 <__assert_fail@plt+0xc44>
   12210:	mov	r0, #4
   12214:	bl	117c0 <__assert_fail@plt+0x220>
   12218:	mov	r0, #1
   1221c:	bl	113d8 <exit@plt>
   12220:	ldrb	r4, [r5]
   12224:	cmp	r4, #0
   12228:	beq	12270 <__assert_fail@plt+0xcd0>
   1222c:	bl	113cc <__ctype_b_loc@plt>
   12230:	mov	r8, r0
   12234:	mov	r7, r5
   12238:	b	12248 <__assert_fail@plt+0xca8>
   1223c:	ldrb	r4, [r7, #1]!
   12240:	cmp	r4, #0
   12244:	beq	12270 <__assert_fail@plt+0xcd0>
   12248:	ldr	r2, [r8]
   1224c:	lsl	r3, r4, #1
   12250:	ldrh	r3, [r2, r3]
   12254:	tst	r3, #256	; 0x100
   12258:	beq	1223c <__assert_fail@plt+0xc9c>
   1225c:	bl	113a8 <__ctype_tolower_loc@plt>
   12260:	ldr	r3, [r0]
   12264:	ldr	r3, [r3, r4, lsl #2]
   12268:	strb	r3, [r7]
   1226c:	b	1223c <__assert_fail@plt+0xc9c>
   12270:	ldr	r3, [pc, #536]	; 12490 <__assert_fail@plt+0xef0>
   12274:	ldr	r4, [r3, #72]	; 0x48
   12278:	cmp	r4, #0
   1227c:	beq	122a8 <__assert_fail@plt+0xd08>
   12280:	add	r7, r3, #72	; 0x48
   12284:	mov	r8, r7
   12288:	mov	r1, r5
   1228c:	mov	r0, r4
   12290:	bl	11240 <strcmp@plt>
   12294:	cmp	r0, #0
   12298:	beq	122b8 <__assert_fail@plt+0xd18>
   1229c:	ldr	r4, [r7, #20]!
   122a0:	cmp	r4, #0
   122a4:	bne	12284 <__assert_fail@plt+0xce4>
   122a8:	mov	r0, #4
   122ac:	bl	117c0 <__assert_fail@plt+0x220>
   122b0:	mov	r0, #1
   122b4:	bl	113d8 <exit@plt>
   122b8:	cmp	r4, #0
   122bc:	beq	122a8 <__assert_fail@plt+0xd08>
   122c0:	ldrb	r1, [r6]
   122c4:	ldrb	r3, [r6, #1]
   122c8:	orr	r1, r1, r3, lsl #8
   122cc:	ldr	r3, [r7, #4]
   122d0:	sxth	r1, r1
   122d4:	add	r0, sp, #20
   122d8:	blx	r3
   122dc:	mov	r4, r0
   122e0:	ldr	r3, [pc, #428]	; 12494 <__assert_fail@plt+0xef4>
   122e4:	ldr	r3, [r3]
   122e8:	cmp	r3, #0
   122ec:	beq	12410 <__assert_fail@plt+0xe70>
   122f0:	ldr	r3, [pc, #416]	; 12498 <__assert_fail@plt+0xef8>
   122f4:	ldrh	r3, [r3]
   122f8:	cmp	r3, #2
   122fc:	beq	123ac <__assert_fail@plt+0xe0c>
   12300:	ldr	r2, [pc, #404]	; 1249c <__assert_fail@plt+0xefc>
   12304:	ldr	r7, [pc, #404]	; 124a0 <__assert_fail@plt+0xf00>
   12308:	cmp	r3, #10
   1230c:	movne	r7, r2
   12310:	ldr	r0, [pc, #380]	; 12494 <__assert_fail@plt+0xef4>
   12314:	mov	r3, #0
   12318:	str	r3, [sp, #8]
   1231c:	str	r3, [sp, #4]
   12320:	str	r3, [sp]
   12324:	ldr	r3, [pc, #376]	; 124a4 <__assert_fail@plt+0xf04>
   12328:	add	r2, r0, #1360	; 0x550
   1232c:	ldr	r1, [r0, #668]	; 0x29c
   12330:	add	r0, r0, #540	; 0x21c
   12334:	bl	11498 <getnameinfo@plt>
   12338:	cmp	r0, #0
   1233c:	ldreq	r9, [pc, #356]	; 124a8 <__assert_fail@plt+0xf08>
   12340:	bne	123b4 <__assert_fail@plt+0xe14>
   12344:	ldrb	r3, [r6]
   12348:	ldrb	r2, [r6, #1]
   1234c:	orr	r3, r3, r2, lsl #8
   12350:	sxth	r3, r3
   12354:	ldr	r2, [pc, #336]	; 124ac <__assert_fail@plt+0xf0c>
   12358:	ldr	r5, [pc, #336]	; 124b0 <__assert_fail@plt+0xf10>
   1235c:	cmp	r3, #2
   12360:	movne	r5, r2
   12364:	ldr	sl, [sp, #20]
   12368:	cmp	r4, #0
   1236c:	ldreq	r3, [pc, #320]	; 124b4 <__assert_fail@plt+0xf14>
   12370:	beq	123f0 <__assert_fail@plt+0xe50>
   12374:	ldr	r3, [pc, #276]	; 12490 <__assert_fail@plt+0xef0>
   12378:	ldr	r3, [r3]
   1237c:	cmp	r3, #0
   12380:	blt	123d8 <__assert_fail@plt+0xe38>
   12384:	cmp	r4, r3
   12388:	beq	123d0 <__assert_fail@plt+0xe30>
   1238c:	ldr	r2, [pc, #252]	; 12490 <__assert_fail@plt+0xef0>
   12390:	ldr	r3, [r2, #8]!
   12394:	cmp	r3, #0
   12398:	blt	123d8 <__assert_fail@plt+0xe38>
   1239c:	cmp	r4, r3
   123a0:	bne	12390 <__assert_fail@plt+0xdf0>
   123a4:	ldr	r3, [r2, #4]
   123a8:	b	123f0 <__assert_fail@plt+0xe50>
   123ac:	ldr	r7, [pc, #260]	; 124b8 <__assert_fail@plt+0xf18>
   123b0:	b	12310 <__assert_fail@plt+0xd70>
   123b4:	bl	112a0 <gai_strerror@plt>
   123b8:	mov	r2, r0
   123bc:	ldr	r1, [pc, #248]	; 124bc <__assert_fail@plt+0xf1c>
   123c0:	mov	r0, #3
   123c4:	bl	114d4 <syslog@plt>
   123c8:	ldr	r9, [pc, #240]	; 124c0 <__assert_fail@plt+0xf20>
   123cc:	b	12344 <__assert_fail@plt+0xda4>
   123d0:	ldr	r2, [pc, #184]	; 12490 <__assert_fail@plt+0xef0>
   123d4:	b	123a4 <__assert_fail@plt+0xe04>
   123d8:	ldr	fp, [pc, #228]	; 124c4 <__assert_fail@plt+0xf24>
   123dc:	mov	r2, r4
   123e0:	ldr	r1, [pc, #224]	; 124c8 <__assert_fail@plt+0xf28>
   123e4:	mov	r0, fp
   123e8:	bl	114ec <sprintf@plt>
   123ec:	mov	r3, fp
   123f0:	str	r3, [sp, #8]
   123f4:	str	sl, [sp, #4]
   123f8:	str	r5, [sp]
   123fc:	mov	r3, r7
   12400:	mov	r2, r9
   12404:	ldr	r1, [pc, #192]	; 124cc <__assert_fail@plt+0xf2c>
   12408:	mov	r0, #6
   1240c:	bl	114d4 <syslog@plt>
   12410:	cmp	r4, #0
   12414:	beq	12460 <__assert_fail@plt+0xec0>
   12418:	ldr	r3, [pc, #116]	; 12494 <__assert_fail@plt+0xef4>
   1241c:	ldr	r3, [r3, #8]
   12420:	cmp	r3, #0
   12424:	beq	12448 <__assert_fail@plt+0xea8>
   12428:	ldr	r3, [sp, #20]
   1242c:	ldrb	r3, [r3]
   12430:	subs	r3, r3, #47	; 0x2f
   12434:	movne	r3, #1
   12438:	cmp	r4, #1
   1243c:	movne	r3, #0
   12440:	cmp	r3, #0
   12444:	bne	12458 <__assert_fail@plt+0xeb8>
   12448:	mov	r0, r4
   1244c:	bl	117c0 <__assert_fail@plt+0x220>
   12450:	mov	r0, #1
   12454:	bl	113d8 <exit@plt>
   12458:	mov	r0, #0
   1245c:	bl	113d8 <exit@plt>
   12460:	ldrb	r3, [r6]
   12464:	ldrb	r2, [r6, #1]
   12468:	orr	r3, r3, r2, lsl #8
   1246c:	sxth	r3, r3
   12470:	cmp	r3, #2
   12474:	ldreq	r3, [r8, #12]
   12478:	ldrne	r3, [r8, #8]
   1247c:	mov	r0, r8
   12480:	blx	r3
   12484:	mov	r0, #0
   12488:	bl	113d8 <exit@plt>
   1248c:	andeq	fp, r2, r0, lsl r3
   12490:	andeq	fp, r2, r4, asr r1
   12494:	strdeq	fp, [r2], -ip
   12498:	andeq	fp, r2, r8, lsl r5
   1249c:	andeq	r9, r1, ip, lsr #13
   124a0:	andeq	r9, r1, r4, lsr #13
   124a4:	andeq	r0, r0, r1, lsl #8
   124a8:	andeq	fp, r2, ip, asr #16
   124ac:	andeq	r9, r1, r0, asr #13
   124b0:			; <UNDEFINED> instruction: 0x000196b8
   124b4:	andeq	r9, r1, r8, asr #13
   124b8:	muleq	r1, ip, r6
   124bc:	ldrdeq	r9, [r1], -r0
   124c0:			; <UNDEFINED> instruction: 0x000196b0
   124c4:	andeq	fp, r2, r0, asr ip
   124c8:	andeq	r9, r1, r4, ror #13
   124cc:	strdeq	r9, [r1], -r0
   124d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124d4:	sub	sp, sp, #156	; 0x9c
   124d8:	mov	r7, r0
   124dc:	mov	r5, r1
   124e0:	ldr	r0, [pc, #1092]	; 1292c <__assert_fail@plt+0x138c>
   124e4:	bl	14b00 <argp_parse@@Base+0x1794>
   124e8:	ldr	r3, [pc, #1088]	; 12930 <__assert_fail@plt+0x1390>
   124ec:	str	r0, [r3, #16]
   124f0:	ldr	r0, [r5]
   124f4:	bl	140a0 <argp_parse@@Base+0xd34>
   124f8:	ldr	r2, [pc, #1076]	; 12934 <__assert_fail@plt+0x1394>
   124fc:	ldr	r3, [pc, #1076]	; 12938 <__assert_fail@plt+0x1398>
   12500:	str	r2, [r3]
   12504:	ldr	r4, [pc, #1072]	; 1293c <__assert_fail@plt+0x139c>
   12508:	ldr	r1, [pc, #1072]	; 12940 <__assert_fail@plt+0x13a0>
   1250c:	mov	r0, r4
   12510:	bl	13e78 <argp_parse@@Base+0xb0c>
   12514:	mov	r3, #0
   12518:	str	r3, [sp, #4]
   1251c:	add	r2, sp, #148	; 0x94
   12520:	str	r2, [sp]
   12524:	mov	r2, r5
   12528:	mov	r1, r7
   1252c:	ldr	r0, [pc, #1040]	; 12944 <__assert_fail@plt+0x13a4>
   12530:	bl	1336c <argp_parse@@Base>
   12534:	mov	r2, #88	; 0x58
   12538:	mov	r1, #9
   1253c:	mov	r0, r4
   12540:	bl	114f8 <openlog@plt>
   12544:	ldr	r3, [sp, #148]	; 0x94
   12548:	cmp	r7, r3
   1254c:	ble	125ac <__assert_fail@plt+0x100c>
   12550:	add	r4, r3, #1
   12554:	add	r5, r5, r3, lsl #2
   12558:	ldr	r6, [pc, #1000]	; 12948 <__assert_fail@plt+0x13a8>
   1255c:	add	r8, r6, #160	; 0xa0
   12560:	b	12588 <__assert_fail@plt+0xfe8>
   12564:	str	r4, [sp, #148]	; 0x94
   12568:	cmp	r6, r8
   1256c:	movcs	r2, #0
   12570:	movcc	r2, #1
   12574:	cmp	r7, r4
   12578:	movle	r2, #0
   1257c:	add	r4, r4, #1
   12580:	cmp	r2, #0
   12584:	beq	125ac <__assert_fail@plt+0x100c>
   12588:	ldr	r0, [r5], #4
   1258c:	ldrb	r3, [r0]
   12590:	cmp	r3, #47	; 0x2f
   12594:	bne	12564 <__assert_fail@plt+0xfc4>
   12598:	str	r0, [r6]
   1259c:	bl	113e4 <strlen@plt>
   125a0:	str	r0, [r6, #4]
   125a4:	add	r6, r6, #8
   125a8:	b	12564 <__assert_fail@plt+0xfc4>
   125ac:	add	r2, sp, #152	; 0x98
   125b0:	mov	r3, #1
   125b4:	str	r3, [r2, #-8]!
   125b8:	ldr	r1, [pc, #908]	; 1294c <__assert_fail@plt+0x13ac>
   125bc:	mov	r0, #0
   125c0:	bl	14070 <argp_parse@@Base+0xd04>
   125c4:	cmp	r0, #0
   125c8:	blt	12684 <__assert_fail@plt+0x10e4>
   125cc:	ldr	r1, [pc, #860]	; 12930 <__assert_fail@plt+0x1390>
   125d0:	mov	r3, #128	; 0x80
   125d4:	str	r3, [r1, #668]	; 0x29c
   125d8:	add	r3, r1, #540	; 0x21c
   125dc:	add	r2, r1, #668	; 0x29c
   125e0:	str	r2, [sp, #4]
   125e4:	str	r3, [sp]
   125e8:	mov	r3, #0
   125ec:	mov	r2, #516	; 0x204
   125f0:	add	r1, r1, #20
   125f4:	mov	r0, r3
   125f8:	bl	112e8 <recvfrom@plt>
   125fc:	subs	fp, r0, #0
   12600:	blt	12698 <__assert_fail@plt+0x10f8>
   12604:	mov	r4, #1
   12608:	mov	r9, #128	; 0x80
   1260c:	ldr	sl, [pc, #796]	; 12930 <__assert_fail@plt+0x1390>
   12610:	add	r8, sl, #540	; 0x21c
   12614:	add	r7, sl, #20
   12618:	add	r6, sp, #12
   1261c:	mov	r5, #0
   12620:	bl	1148c <fork@plt>
   12624:	cmp	r0, #0
   12628:	bge	12868 <__assert_fail@plt+0x12c8>
   1262c:	mov	r0, r4
   12630:	bl	112dc <sleep@plt>
   12634:	str	r9, [sp, #12]
   12638:	str	r6, [sp, #4]
   1263c:	str	r8, [sp]
   12640:	mov	r3, r5
   12644:	mov	r2, #516	; 0x204
   12648:	mov	r1, r7
   1264c:	mov	r0, r5
   12650:	bl	112e8 <recvfrom@plt>
   12654:	cmp	r0, #0
   12658:	ldrgt	r3, [sp, #12]
   1265c:	strgt	r3, [sl, #668]	; 0x29c
   12660:	movgt	fp, r0
   12664:	add	r4, r0, #1
   12668:	cmp	r4, #19
   1266c:	ble	12620 <__assert_fail@plt+0x1080>
   12670:	ldr	r1, [pc, #728]	; 12950 <__assert_fail@plt+0x13b0>
   12674:	mov	r0, #3
   12678:	bl	114d4 <syslog@plt>
   1267c:	mov	r0, #1
   12680:	bl	113d8 <exit@plt>
   12684:	ldr	r1, [pc, #712]	; 12954 <__assert_fail@plt+0x13b4>
   12688:	mov	r0, #3
   1268c:	bl	114d4 <syslog@plt>
   12690:	mov	r0, #1
   12694:	bl	113d8 <exit@plt>
   12698:	ldr	r1, [pc, #696]	; 12958 <__assert_fail@plt+0x13b8>
   1269c:	mov	r0, #3
   126a0:	bl	114d4 <syslog@plt>
   126a4:	mov	r0, #1
   126a8:	bl	113d8 <exit@plt>
   126ac:	mov	r0, #0
   126b0:	bl	113d8 <exit@plt>
   126b4:	ldr	r1, [pc, #672]	; 1295c <__assert_fail@plt+0x13bc>
   126b8:	mov	r0, #3
   126bc:	bl	114d4 <syslog@plt>
   126c0:	mov	r0, #1
   126c4:	bl	113d8 <exit@plt>
   126c8:	ldr	r1, [pc, #656]	; 12960 <__assert_fail@plt+0x13c0>
   126cc:	mov	r0, #3
   126d0:	bl	114d4 <syslog@plt>
   126d4:	mov	r0, #1
   126d8:	bl	113d8 <exit@plt>
   126dc:	bl	11270 <getuid@plt>
   126e0:	cmp	r0, #0
   126e4:	bne	12770 <__assert_fail@plt+0x11d0>
   126e8:	ldr	r3, [pc, #576]	; 12930 <__assert_fail@plt+0x1390>
   126ec:	ldr	r0, [r3, #16]
   126f0:	bl	11234 <getpwnam@plt>
   126f4:	subs	r6, r0, #0
   126f8:	beq	1274c <__assert_fail@plt+0x11ac>
   126fc:	ldr	r3, [pc, #556]	; 12930 <__assert_fail@plt+0x1390>
   12700:	ldr	r0, [r3, #4]
   12704:	cmp	r0, #0
   12708:	beq	127c0 <__assert_fail@plt+0x1220>
   1270c:	ldrb	r3, [r0]
   12710:	cmp	r3, #0
   12714:	moveq	r5, #0
   12718:	beq	12778 <__assert_fail@plt+0x11d8>
   1271c:	bl	11594 <getgrnam@plt>
   12720:	subs	r5, r0, #0
   12724:	bne	12778 <__assert_fail@plt+0x11d8>
   12728:	ldr	r3, [pc, #512]	; 12930 <__assert_fail@plt+0x1390>
   1272c:	ldr	r2, [r3, #4]
   12730:	ldr	r1, [pc, #556]	; 12964 <__assert_fail@plt+0x13c4>
   12734:	mov	r0, #3
   12738:	bl	114d4 <syslog@plt>
   1273c:	mov	r0, #7
   12740:	bl	117c0 <__assert_fail@plt+0x220>
   12744:	mov	r0, #1
   12748:	bl	113d8 <exit@plt>
   1274c:	ldr	r3, [pc, #476]	; 12930 <__assert_fail@plt+0x1390>
   12750:	ldr	r2, [r3, #16]
   12754:	ldr	r1, [pc, #524]	; 12968 <__assert_fail@plt+0x13c8>
   12758:	mov	r0, #3
   1275c:	bl	114d4 <syslog@plt>
   12760:	mov	r0, #7
   12764:	bl	117c0 <__assert_fail@plt+0x220>
   12768:	mov	r0, #1
   1276c:	bl	113d8 <exit@plt>
   12770:	mov	r5, #0
   12774:	mov	r6, r5
   12778:	ldr	r3, [pc, #432]	; 12930 <__assert_fail@plt+0x1390>
   1277c:	ldr	r4, [r3, #12]
   12780:	mov	r0, r4
   12784:	bl	11348 <chroot@plt>
   12788:	cmp	r0, #0
   1278c:	bne	127a0 <__assert_fail@plt+0x1200>
   12790:	ldr	r0, [pc, #468]	; 1296c <__assert_fail@plt+0x13cc>
   12794:	bl	1130c <chdir@plt>
   12798:	cmp	r0, #0
   1279c:	beq	127c8 <__assert_fail@plt+0x1228>
   127a0:	mov	r2, r4
   127a4:	ldr	r1, [pc, #452]	; 12970 <__assert_fail@plt+0x13d0>
   127a8:	mov	r0, #3
   127ac:	bl	114d4 <syslog@plt>
   127b0:	mov	r0, #2
   127b4:	bl	117c0 <__assert_fail@plt+0x220>
   127b8:	mov	r0, #1
   127bc:	bl	113d8 <exit@plt>
   127c0:	mov	r5, #0
   127c4:	b	12778 <__assert_fail@plt+0x11d8>
   127c8:	cmp	r6, #0
   127cc:	beq	12904 <__assert_fail@plt+0x1364>
   127d0:	cmp	r5, #0
   127d4:	beq	12830 <__assert_fail@plt+0x1290>
   127d8:	ldr	r0, [r5, #8]
   127dc:	bl	11378 <setgid@plt>
   127e0:	cmp	r0, #0
   127e4:	bne	12814 <__assert_fail@plt+0x1274>
   127e8:	ldr	r0, [r6, #8]
   127ec:	bl	114e0 <setuid@plt>
   127f0:	cmp	r0, #0
   127f4:	beq	12904 <__assert_fail@plt+0x1364>
   127f8:	ldr	r1, [pc, #372]	; 12974 <__assert_fail@plt+0x13d4>
   127fc:	mov	r0, #3
   12800:	bl	114d4 <syslog@plt>
   12804:	mov	r0, #7
   12808:	bl	117c0 <__assert_fail@plt+0x220>
   1280c:	mov	r0, #1
   12810:	bl	113d8 <exit@plt>
   12814:	ldr	r1, [pc, #348]	; 12978 <__assert_fail@plt+0x13d8>
   12818:	mov	r0, #3
   1281c:	bl	114d4 <syslog@plt>
   12820:	mov	r0, #7
   12824:	bl	117c0 <__assert_fail@plt+0x220>
   12828:	mov	r0, #1
   1282c:	bl	113d8 <exit@plt>
   12830:	ldr	r0, [r6, #12]
   12834:	bl	11378 <setgid@plt>
   12838:	cmp	r0, #0
   1283c:	beq	127e8 <__assert_fail@plt+0x1248>
   12840:	ldr	r1, [pc, #304]	; 12978 <__assert_fail@plt+0x13d8>
   12844:	mov	r0, #3
   12848:	bl	114d4 <syslog@plt>
   1284c:	mov	r0, #7
   12850:	bl	117c0 <__assert_fail@plt+0x220>
   12854:	mov	r0, #1
   12858:	bl	113d8 <exit@plt>
   1285c:	mov	r1, fp
   12860:	add	r0, r2, #20
   12864:	bl	121ac <__assert_fail@plt+0xc0c>
   12868:	cmp	r0, #0
   1286c:	bne	126ac <__assert_fail@plt+0x110c>
   12870:	mov	r0, #0
   12874:	bl	112f4 <alarm@plt>
   12878:	mov	r0, #0
   1287c:	bl	11588 <close@plt>
   12880:	mov	r0, #1
   12884:	bl	11588 <close@plt>
   12888:	ldr	r5, [pc, #160]	; 12930 <__assert_fail@plt+0x1390>
   1288c:	add	r3, r5, #540	; 0x21c
   12890:	mov	r2, #0
   12894:	mov	r1, #2
   12898:	ldrh	r0, [r3]
   1289c:	bl	11534 <socket@plt>
   128a0:	mov	r4, r0
   128a4:	str	r0, [r5, #536]	; 0x218
   128a8:	cmp	r0, #0
   128ac:	blt	126b4 <__assert_fail@plt+0x1114>
   128b0:	mov	r2, #128	; 0x80
   128b4:	mov	r1, #0
   128b8:	add	r0, sp, #16
   128bc:	bl	1142c <memset@plt>
   128c0:	ldr	r3, [pc, #104]	; 12930 <__assert_fail@plt+0x1390>
   128c4:	add	r2, r3, #540	; 0x21c
   128c8:	ldrh	r2, [r2]
   128cc:	strh	r2, [sp, #16]
   128d0:	ldr	r2, [r3, #668]	; 0x29c
   128d4:	add	r1, sp, #16
   128d8:	mov	r0, r4
   128dc:	bl	11420 <bind@plt>
   128e0:	cmp	r0, #0
   128e4:	blt	126c8 <__assert_fail@plt+0x1128>
   128e8:	ldr	r3, [pc, #64]	; 12930 <__assert_fail@plt+0x1390>
   128ec:	ldr	r3, [r3, #12]
   128f0:	cmp	r3, #0
   128f4:	beq	12904 <__assert_fail@plt+0x1364>
   128f8:	ldrb	r3, [r3]
   128fc:	cmp	r3, #0
   12900:	bne	126dc <__assert_fail@plt+0x113c>
   12904:	ldr	r2, [pc, #36]	; 12930 <__assert_fail@plt+0x1390>
   12908:	ldrh	r3, [r2, #20]
   1290c:	rev16	r3, r3
   12910:	strh	r3, [r2, #20]
   12914:	sub	r3, r3, #1
   12918:	uxth	r3, r3
   1291c:	cmp	r3, #1
   12920:	bls	1285c <__assert_fail@plt+0x12bc>
   12924:	mov	r0, #1
   12928:	bl	113d8 <exit@plt>
   1292c:	andeq	r9, r1, r0, lsl r7
   12930:	strdeq	fp, [r2], -ip
   12934:	andeq	r9, r1, r8, lsl r7
   12938:	andeq	ip, r2, r8, asr #4
   1293c:	andeq	r9, r1, r0, lsr r7
   12940:	muleq	r2, ip, r2
   12944:	ldrdeq	fp, [r2], -r8
   12948:	muleq	r2, ip, r5
   1294c:	andeq	r5, r0, r1, lsr #8
   12950:	andeq	r9, r1, ip, asr #15
   12954:	andeq	r9, r1, r8, lsr r7
   12958:	andeq	r9, r1, ip, asr #14
   1295c:	andeq	r9, r1, ip, asr r7
   12960:	andeq	r9, r1, r8, ror #14
   12964:	andeq	r9, r1, r8, lsl #15
   12968:	andeq	r9, r1, r4, ror r7
   1296c:	muleq	r1, ip, r7
   12970:	andeq	r9, r1, r0, lsr #15
   12974:	andeq	r9, r1, r0, asr #15
   12978:			; <UNDEFINED> instruction: 0x000197b4
   1297c:	ldr	r3, [pc, #52]	; 129b8 <__assert_fail@plt+0x1418>
   12980:	mov	r2, #0
   12984:	str	r2, [r3]
   12988:	mvn	r0, #0
   1298c:	ldr	r1, [pc, #40]	; 129bc <__assert_fail@plt+0x141c>
   12990:	str	r0, [r1]
   12994:	ldr	r0, [pc, #36]	; 129c0 <__assert_fail@plt+0x1420>
   12998:	mvn	r1, #2
   1299c:	str	r1, [r0]
   129a0:	str	r2, [r3, #4]
   129a4:	mvn	r1, #1
   129a8:	str	r1, [r0, #520]	; 0x208
   129ac:	str	r2, [r3, #8]
   129b0:	add	r0, r0, #4
   129b4:	bx	lr
   129b8:	andeq	fp, r2, r4, ror #24
   129bc:	andeq	fp, r2, r4, lsr #5
   129c0:	andeq	fp, r2, r8, lsr lr
   129c4:	ldr	r3, [pc, #56]	; 12a04 <__assert_fail@plt+0x1464>
   129c8:	mov	r2, #0
   129cc:	str	r2, [r3]
   129d0:	mvn	r0, #0
   129d4:	ldr	r1, [pc, #44]	; 12a08 <__assert_fail@plt+0x1468>
   129d8:	str	r0, [r1]
   129dc:	ldr	r0, [pc, #40]	; 12a0c <__assert_fail@plt+0x146c>
   129e0:	mvn	r1, #2
   129e4:	str	r1, [r0]
   129e8:	str	r2, [r3, #4]
   129ec:	mvn	r2, #1
   129f0:	str	r2, [r0, #520]	; 0x208
   129f4:	mov	r2, #1
   129f8:	str	r2, [r3, #8]
   129fc:	add	r0, r0, #4
   12a00:	bx	lr
   12a04:	andeq	fp, r2, r4, ror #24
   12a08:	andeq	fp, r2, r4, lsr #5
   12a0c:	andeq	fp, r2, r8, lsr lr
   12a10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a14:	sub	sp, sp, #12
   12a18:	ldr	r3, [pc, #232]	; 12b08 <__assert_fail@plt+0x1568>
   12a1c:	ldr	sl, [r3, #8]
   12a20:	add	r2, sl, sl, lsl #6
   12a24:	ldr	r3, [pc, #224]	; 12b0c <__assert_fail@plt+0x156c>
   12a28:	ldr	r3, [r3, r2, lsl #3]
   12a2c:	cmn	r3, #2
   12a30:	beq	12a3c <__assert_fail@plt+0x149c>
   12a34:	add	sp, sp, #12
   12a38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a3c:	str	r0, [sp, #4]
   12a40:	clz	r3, sl
   12a44:	lsr	r3, r3, #5
   12a48:	ldr	r2, [pc, #184]	; 12b08 <__assert_fail@plt+0x1568>
   12a4c:	str	r3, [r2, #8]
   12a50:	add	r6, sl, sl, lsl #6
   12a54:	ldr	r3, [pc, #180]	; 12b10 <__assert_fail@plt+0x1570>
   12a58:	add	r6, r3, r6, lsl #3
   12a5c:	cmp	r1, #0
   12a60:	beq	12a84 <__assert_fail@plt+0x14e4>
   12a64:	add	r9, r6, #4
   12a68:	add	r6, r6, #516	; 0x204
   12a6c:	mov	r4, r9
   12a70:	ldr	r5, [pc, #144]	; 12b08 <__assert_fail@plt+0x1568>
   12a74:	ldr	r7, [pc, #152]	; 12b14 <__assert_fail@plt+0x1574>
   12a78:	mov	fp, #1
   12a7c:	mov	r8, #0
   12a80:	b	12ad4 <__assert_fail@plt+0x1534>
   12a84:	bl	11444 <fileno@plt>
   12a88:	mov	r2, #512	; 0x200
   12a8c:	add	r1, r6, #4
   12a90:	bl	11264 <read@plt>
   12a94:	add	sl, sl, sl, lsl #6
   12a98:	ldr	r3, [pc, #108]	; 12b0c <__assert_fail@plt+0x156c>
   12a9c:	str	r0, [r3, sl, lsl #3]
   12aa0:	b	12a34 <__assert_fail@plt+0x1494>
   12aa4:	ldr	r0, [sp, #4]
   12aa8:	bl	11564 <getc@plt>
   12aac:	cmn	r0, #1
   12ab0:	beq	12af4 <__assert_fail@plt+0x1554>
   12ab4:	cmp	r0, #13
   12ab8:	cmpne	r0, #10
   12abc:	streq	r0, [r7]
   12ac0:	streq	fp, [r5]
   12ac4:	moveq	r0, #13
   12ac8:	strb	r0, [r4], #1
   12acc:	cmp	r4, r6
   12ad0:	beq	12af4 <__assert_fail@plt+0x1554>
   12ad4:	ldr	r3, [r5]
   12ad8:	cmp	r3, #0
   12adc:	beq	12aa4 <__assert_fail@plt+0x1504>
   12ae0:	ldr	r0, [r7]
   12ae4:	cmp	r0, #10
   12ae8:	movne	r0, #0
   12aec:	str	r8, [r5]
   12af0:	b	12ac8 <__assert_fail@plt+0x1528>
   12af4:	add	sl, sl, sl, lsl #6
   12af8:	sub	r4, r4, r9
   12afc:	ldr	r3, [pc, #8]	; 12b0c <__assert_fail@plt+0x156c>
   12b00:	str	r4, [r3, sl, lsl #3]
   12b04:	b	12a34 <__assert_fail@plt+0x1494>
   12b08:	andeq	fp, r2, r4, ror #24
   12b0c:	andeq	fp, r2, r8, lsr lr
   12b10:	andeq	fp, r2, ip, lsr lr
   12b14:	andeq	fp, r2, r4, lsr #5
   12b18:	push	{r4, r5, r6, lr}
   12b1c:	mov	r5, r1
   12b20:	ldr	r3, [pc, #104]	; 12b90 <__assert_fail@plt+0x15f0>
   12b24:	ldr	r4, [r3, #4]
   12b28:	ldr	ip, [pc, #100]	; 12b94 <__assert_fail@plt+0x15f4>
   12b2c:	add	lr, r4, r4, lsl #6
   12b30:	mvn	r6, #1
   12b34:	str	r6, [ip, lr, lsl #3]
   12b38:	clz	r4, r4
   12b3c:	lsr	r4, r4, #5
   12b40:	str	r4, [r3, #4]
   12b44:	lsl	r3, r4, #6
   12b48:	add	r3, r3, r4
   12b4c:	ldr	r3, [ip, r3, lsl #3]
   12b50:	cmp	r3, r6
   12b54:	beq	12b84 <__assert_fail@plt+0x15e4>
   12b58:	lsl	r3, r4, #6
   12b5c:	add	r3, r3, r4
   12b60:	lsl	r3, r3, #3
   12b64:	add	r3, r3, #4
   12b68:	ldr	r2, [pc, #36]	; 12b94 <__assert_fail@plt+0x15f4>
   12b6c:	add	r3, r3, r2
   12b70:	str	r3, [r5]
   12b74:	lsl	r3, r4, #6
   12b78:	add	r4, r3, r4
   12b7c:	ldr	r0, [r2, r4, lsl #3]
   12b80:	pop	{r4, r5, r6, pc}
   12b84:	mov	r1, r2
   12b88:	bl	12a10 <__assert_fail@plt+0x1470>
   12b8c:	b	12b58 <__assert_fail@plt+0x15b8>
   12b90:	andeq	fp, r2, r4, ror #24
   12b94:	andeq	fp, r2, r8, lsr lr
   12b98:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12b9c:	sub	sp, sp, #8
   12ba0:	ldr	r3, [pc, #220]	; 12c84 <__assert_fail@plt+0x16e4>
   12ba4:	ldr	r3, [r3, #8]
   12ba8:	add	ip, r3, r3, lsl #6
   12bac:	ldr	r2, [pc, #212]	; 12c88 <__assert_fail@plt+0x16e8>
   12bb0:	ldr	r9, [r2, ip, lsl #3]
   12bb4:	cmn	r9, #1
   12bb8:	movlt	r9, #0
   12bbc:	blt	12c20 <__assert_fail@plt+0x1680>
   12bc0:	mov	r4, r2
   12bc4:	lsl	r2, r3, #6
   12bc8:	mvn	lr, #1
   12bcc:	str	lr, [r4, ip, lsl #3]
   12bd0:	clz	ip, r3
   12bd4:	lsr	ip, ip, #5
   12bd8:	ldr	lr, [pc, #164]	; 12c84 <__assert_fail@plt+0x16e4>
   12bdc:	str	ip, [lr, #8]
   12be0:	add	r3, r2, r3
   12be4:	add	r4, r4, r3, lsl #3
   12be8:	add	r4, r4, #8
   12bec:	cmp	r9, #0
   12bf0:	ble	12c7c <__assert_fail@plt+0x16dc>
   12bf4:	mov	r7, r0
   12bf8:	cmp	r1, #0
   12bfc:	addne	r8, r4, r9
   12c00:	ldrne	r6, [pc, #132]	; 12c8c <__assert_fail@plt+0x16ec>
   12c04:	movne	sl, #1
   12c08:	bne	12c58 <__assert_fail@plt+0x16b8>
   12c0c:	bl	11444 <fileno@plt>
   12c10:	mov	r2, r9
   12c14:	mov	r1, r4
   12c18:	bl	11438 <write@plt>
   12c1c:	mov	r9, r0
   12c20:	mov	r0, r9
   12c24:	add	sp, sp, #8
   12c28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12c2c:	str	sl, [sp]
   12c30:	mvn	r2, #0
   12c34:	mvn	r3, #0
   12c38:	mov	r0, r7
   12c3c:	bl	11468 <fseeko64@plt>
   12c40:	mov	r1, r7
   12c44:	mov	r0, r5
   12c48:	bl	11504 <putc@plt>
   12c4c:	str	r5, [r6]
   12c50:	cmp	r4, r8
   12c54:	beq	12c20 <__assert_fail@plt+0x1680>
   12c58:	ldrb	r5, [r4], #1
   12c5c:	ldr	r3, [r6]
   12c60:	cmp	r3, #13
   12c64:	bne	12c40 <__assert_fail@plt+0x16a0>
   12c68:	cmp	r5, #10
   12c6c:	beq	12c2c <__assert_fail@plt+0x168c>
   12c70:	cmp	r5, #0
   12c74:	beq	12c4c <__assert_fail@plt+0x16ac>
   12c78:	b	12c40 <__assert_fail@plt+0x16a0>
   12c7c:	mvn	r9, #0
   12c80:	b	12c20 <__assert_fail@plt+0x1680>
   12c84:	andeq	fp, r2, r4, ror #24
   12c88:	andeq	fp, r2, r8, lsr lr
   12c8c:	andeq	fp, r2, r4, lsr #5
   12c90:	push	{r4, r5, r6, lr}
   12c94:	mov	r5, r1
   12c98:	mov	r4, r2
   12c9c:	ldr	ip, [pc, #100]	; 12d08 <__assert_fail@plt+0x1768>
   12ca0:	ldr	r2, [ip, #4]
   12ca4:	ldr	lr, [pc, #96]	; 12d0c <__assert_fail@plt+0x176c>
   12ca8:	add	r6, r2, r2, lsl #6
   12cac:	str	r4, [lr, r6, lsl #3]
   12cb0:	clz	r2, r2
   12cb4:	lsr	r2, r2, #5
   12cb8:	str	r2, [ip, #4]
   12cbc:	lsl	ip, r2, #6
   12cc0:	add	r2, ip, r2
   12cc4:	ldr	r2, [lr, r2, lsl #3]
   12cc8:	cmn	r2, #2
   12ccc:	beq	12cd8 <__assert_fail@plt+0x1738>
   12cd0:	mov	r1, r3
   12cd4:	bl	12b98 <__assert_fail@plt+0x15f8>
   12cd8:	ldr	r3, [pc, #40]	; 12d08 <__assert_fail@plt+0x1768>
   12cdc:	ldr	r1, [r3, #4]
   12ce0:	ldr	r3, [pc, #36]	; 12d0c <__assert_fail@plt+0x176c>
   12ce4:	lsl	r2, r1, #6
   12ce8:	add	r0, r2, r1
   12cec:	mvn	ip, #2
   12cf0:	str	ip, [r3, r0, lsl #3]
   12cf4:	add	r3, r3, r0, lsl #3
   12cf8:	add	r3, r3, #4
   12cfc:	str	r3, [r5]
   12d00:	mov	r0, r4
   12d04:	pop	{r4, r5, r6, pc}
   12d08:	andeq	fp, r2, r4, ror #24
   12d0c:	andeq	fp, r2, r8, lsr lr
   12d10:	push	{r4, r5, r6, r7, r8, r9, lr}
   12d14:	sub	sp, sp, #668	; 0x29c
   12d18:	mov	r5, r0
   12d1c:	mov	r4, #0
   12d20:	ldr	r6, [pc, #88]	; 12d80 <__assert_fail@plt+0x17e0>
   12d24:	mov	r9, #128	; 0x80
   12d28:	add	r8, sp, #16
   12d2c:	add	r7, sp, #12
   12d30:	add	r2, sp, #660	; 0x294
   12d34:	mov	r1, r6
   12d38:	mov	r0, r5
   12d3c:	bl	14070 <argp_parse@@Base+0xd04>
   12d40:	ldr	r3, [sp, #660]	; 0x294
   12d44:	cmp	r3, #0
   12d48:	beq	12d74 <__assert_fail@plt+0x17d4>
   12d4c:	add	r4, r4, #1
   12d50:	str	r9, [sp, #12]
   12d54:	str	r7, [sp, #4]
   12d58:	str	r8, [sp]
   12d5c:	mov	r3, #0
   12d60:	mov	r2, #516	; 0x204
   12d64:	add	r1, sp, #144	; 0x90
   12d68:	mov	r0, r5
   12d6c:	bl	112e8 <recvfrom@plt>
   12d70:	b	12d30 <__assert_fail@plt+0x1790>
   12d74:	mov	r0, r4
   12d78:	add	sp, sp, #668	; 0x29c
   12d7c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12d80:	andeq	r5, r0, fp, lsl r4
   12d84:	ldr	ip, [r0]
   12d88:	cmp	ip, #0
   12d8c:	beq	12de0 <__assert_fail@plt+0x1840>
   12d90:	push	{r4, r5, r6, lr}
   12d94:	mov	ip, r2
   12d98:	mov	r5, r1
   12d9c:	mov	r4, r0
   12da0:	ldr	r2, [r0, #32]
   12da4:	str	r2, [r1, #36]	; 0x24
   12da8:	ldr	r2, [r0, #24]
   12dac:	str	r2, [r1, #28]
   12db0:	ldr	r2, [r0, #28]
   12db4:	str	r2, [r1, #32]
   12db8:	ldr	r2, [r0, #12]
   12dbc:	str	r2, [r1, #20]
   12dc0:	ldr	r6, [r0]
   12dc4:	mov	r2, r1
   12dc8:	mov	r1, r3
   12dcc:	mov	r0, ip
   12dd0:	blx	r6
   12dd4:	ldr	r3, [r5, #36]	; 0x24
   12dd8:	str	r3, [r4, #32]
   12ddc:	pop	{r4, r5, r6, pc}
   12de0:	mov	r0, #7
   12de4:	bx	lr
   12de8:	push	{r4, r5, r6, lr}
   12dec:	ldr	r5, [r0, #16]
   12df0:	ldr	r3, [r0]
   12df4:	cmp	r3, #0
   12df8:	beq	12e10 <__assert_fail@plt+0x1870>
   12dfc:	ldr	r2, [r1, #8]
   12e00:	add	r2, r2, #1
   12e04:	str	r2, [r1, #8]
   12e08:	mov	r2, #0
   12e0c:	b	12e64 <__assert_fail@plt+0x18c4>
   12e10:	ldr	r3, [r0, #4]
   12e14:	cmp	r3, #0
   12e18:	ldrne	r3, [r1, #8]
   12e1c:	addne	r3, r3, #1
   12e20:	strne	r3, [r1, #8]
   12e24:	cmp	r5, #0
   12e28:	popeq	{r4, r5, r6, pc}
   12e2c:	ldr	r0, [r5]
   12e30:	cmp	r0, #0
   12e34:	popeq	{r4, r5, r6, pc}
   12e38:	mov	r4, r1
   12e3c:	mov	r1, r4
   12e40:	bl	12de8 <__assert_fail@plt+0x1848>
   12e44:	ldr	r3, [r4, #12]
   12e48:	add	r3, r3, #1
   12e4c:	str	r3, [r4, #12]
   12e50:	ldr	r0, [r5, #16]!
   12e54:	cmp	r0, #0
   12e58:	bne	12e3c <__assert_fail@plt+0x189c>
   12e5c:	pop	{r4, r5, r6, pc}
   12e60:	add	r2, r2, #1
   12e64:	add	r3, r3, #24
   12e68:	ldr	r0, [r3, #-20]	; 0xffffffec
   12e6c:	cmp	r0, #0
   12e70:	bne	12e60 <__assert_fail@plt+0x18c0>
   12e74:	ldr	r0, [r3, #-24]	; 0xffffffe8
   12e78:	cmp	r0, #0
   12e7c:	bne	12e60 <__assert_fail@plt+0x18c0>
   12e80:	ldr	r0, [r3, #-8]
   12e84:	cmp	r0, #0
   12e88:	bne	12e60 <__assert_fail@plt+0x18c0>
   12e8c:	ldr	r0, [r3, #-4]
   12e90:	cmp	r0, #0
   12e94:	bne	12e60 <__assert_fail@plt+0x18c0>
   12e98:	add	r0, r2, r2, lsl #1
   12e9c:	ldr	r3, [r1]
   12ea0:	add	r3, r3, r0
   12ea4:	str	r3, [r1]
   12ea8:	ldr	r3, [r1, #4]
   12eac:	add	r2, r3, r2
   12eb0:	str	r2, [r1, #4]
   12eb4:	b	12e24 <__assert_fail@plt+0x1884>
   12eb8:	cmp	r0, #86	; 0x56
   12ebc:	beq	12ec8 <__assert_fail@plt+0x1928>
   12ec0:	mov	r0, #7
   12ec4:	bx	lr
   12ec8:	push	{r4, lr}
   12ecc:	mov	r4, r2
   12ed0:	ldr	r3, [pc, #100]	; 12f3c <__assert_fail@plt+0x199c>
   12ed4:	ldr	r3, [r3]
   12ed8:	cmp	r3, #0
   12edc:	beq	12f00 <__assert_fail@plt+0x1960>
   12ee0:	mov	r1, r2
   12ee4:	ldr	r0, [r2, #48]	; 0x30
   12ee8:	blx	r3
   12eec:	ldr	r3, [r4, #16]
   12ef0:	tst	r3, #32
   12ef4:	beq	12f34 <__assert_fail@plt+0x1994>
   12ef8:	mov	r0, #0
   12efc:	pop	{r4, pc}
   12f00:	ldr	r3, [pc, #56]	; 12f40 <__assert_fail@plt+0x19a0>
   12f04:	ldr	r2, [r3]
   12f08:	cmp	r2, #0
   12f0c:	beq	12f20 <__assert_fail@plt+0x1980>
   12f10:	ldr	r1, [pc, #44]	; 12f44 <__assert_fail@plt+0x19a4>
   12f14:	ldr	r0, [r4, #48]	; 0x30
   12f18:	bl	113fc <fprintf@plt>
   12f1c:	b	12eec <__assert_fail@plt+0x194c>
   12f20:	ldr	r2, [pc, #32]	; 12f48 <__assert_fail@plt+0x19a8>
   12f24:	ldr	r1, [pc, #32]	; 12f4c <__assert_fail@plt+0x19ac>
   12f28:	mov	r0, r4
   12f2c:	bl	17c98 <argp_error@@Base>
   12f30:	b	12eec <__assert_fail@plt+0x194c>
   12f34:	mov	r0, #0
   12f38:	bl	113d8 <exit@plt>
   12f3c:	andeq	fp, r2, r4, ror ip
   12f40:	andeq	ip, r2, ip, asr #4
   12f44:	andeq	r9, r1, r8, ror #25
   12f48:	andeq	r9, r1, ip, asr #22
   12f4c:	andeq	r9, r1, ip, lsl #14
   12f50:	push	{r4, r5, r6, lr}
   12f54:	mov	r4, r2
   12f58:	cmn	r0, #3
   12f5c:	beq	12ff8 <__assert_fail@plt+0x1a58>
   12f60:	mov	r5, r1
   12f64:	ble	12f90 <__assert_fail@plt+0x19f0>
   12f68:	cmn	r0, #2
   12f6c:	beq	13010 <__assert_fail@plt+0x1a70>
   12f70:	cmp	r0, #63	; 0x3f
   12f74:	bne	13054 <__assert_fail@plt+0x1ab4>
   12f78:	ldr	r2, [pc, #228]	; 13064 <__assert_fail@plt+0x1ac4>
   12f7c:	ldr	r1, [r4, #48]	; 0x30
   12f80:	mov	r0, r4
   12f84:	bl	17bdc <argp_state_help@@Base>
   12f88:	mov	r0, #0
   12f8c:	pop	{r4, r5, r6, pc}
   12f90:	cmn	r0, #4
   12f94:	bne	13054 <__assert_fail@plt+0x1ab4>
   12f98:	mov	r2, #10
   12f9c:	mov	r1, #0
   12fa0:	ldr	r0, [pc, #192]	; 13068 <__assert_fail@plt+0x1ac8>
   12fa4:	cmp	r5, r1
   12fa8:	movne	r0, r5
   12fac:	bl	1124c <strtol@plt>
   12fb0:	ldr	r3, [pc, #180]	; 1306c <__assert_fail@plt+0x1acc>
   12fb4:	str	r0, [r3]
   12fb8:	ldr	r2, [r3]
   12fbc:	sub	r1, r2, #1
   12fc0:	str	r1, [r3]
   12fc4:	cmp	r2, #0
   12fc8:	ble	1305c <__assert_fail@plt+0x1abc>
   12fcc:	mov	r5, #1
   12fd0:	mov	r4, r3
   12fd4:	mov	r0, r5
   12fd8:	bl	112dc <sleep@plt>
   12fdc:	ldr	r3, [r4]
   12fe0:	sub	r2, r3, #1
   12fe4:	str	r2, [r4]
   12fe8:	cmp	r3, #0
   12fec:	bgt	12fd4 <__assert_fail@plt+0x1a34>
   12ff0:	mov	r0, #0
   12ff4:	pop	{r4, r5, r6, pc}
   12ff8:	ldr	r2, [pc, #112]	; 13070 <__assert_fail@plt+0x1ad0>
   12ffc:	ldr	r1, [r4, #48]	; 0x30
   13000:	mov	r0, r4
   13004:	bl	17bdc <argp_state_help@@Base>
   13008:	mov	r0, #0
   1300c:	pop	{r4, r5, r6, pc}
   13010:	ldr	r3, [pc, #92]	; 13074 <__assert_fail@plt+0x1ad4>
   13014:	str	r1, [r3]
   13018:	mov	r0, r1
   1301c:	bl	13ea0 <argp_parse@@Base+0xb34>
   13020:	str	r0, [r4, #40]	; 0x28
   13024:	ldr	r3, [pc, #76]	; 13078 <__assert_fail@plt+0x1ad8>
   13028:	str	r0, [r3]
   1302c:	ldr	r3, [r4, #16]
   13030:	and	r3, r3, #3
   13034:	cmp	r3, #1
   13038:	beq	13044 <__assert_fail@plt+0x1aa4>
   1303c:	mov	r0, #0
   13040:	pop	{r4, r5, r6, pc}
   13044:	ldr	r3, [r4, #8]
   13048:	str	r5, [r3]
   1304c:	mov	r0, #0
   13050:	pop	{r4, r5, r6, pc}
   13054:	mov	r0, #7
   13058:	pop	{r4, r5, r6, pc}
   1305c:	mov	r0, #0
   13060:	pop	{r4, r5, r6, pc}
   13064:	andeq	r0, r0, sl, ror r2
   13068:	andeq	r9, r1, r0, ror fp
   1306c:	andeq	fp, r2, r0, ror ip
   13070:	andeq	r0, r0, r1, lsl #4
   13074:	andeq	fp, r2, ip, ror #5
   13078:	andeq	fp, r2, r8, ror #5
   1307c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13080:	sub	sp, sp, #36	; 0x24
   13084:	str	r0, [sp, #12]
   13088:	str	r1, [sp, #16]
   1308c:	str	r2, [sp, #20]
   13090:	mov	r8, r3
   13094:	ldr	sl, [sp, #72]	; 0x48
   13098:	ldr	r9, [r0]
   1309c:	ldr	r5, [r0, #16]
   130a0:	cmp	r9, #0
   130a4:	addne	r6, r9, #24
   130a8:	strne	r5, [sp, #28]
   130ac:	strne	r8, [sp, #24]
   130b0:	bne	131bc <__assert_fail@plt+0x1c1c>
   130b4:	ldr	r3, [sp, #12]
   130b8:	ldr	r3, [r3, #4]
   130bc:	cmp	r3, #0
   130c0:	moveq	r0, r8
   130c4:	moveq	r8, #0
   130c8:	beq	13148 <__assert_fail@plt+0x1ba8>
   130cc:	ldr	r2, [sp, #12]
   130d0:	ldr	r3, [r2, #4]
   130d4:	str	r3, [r8]
   130d8:	str	r2, [r8, #4]
   130dc:	ldr	r3, [sl, #4]
   130e0:	str	r3, [r8, #8]
   130e4:	mov	r3, #0
   130e8:	str	r3, [r8, #12]
   130ec:	ldr	r2, [sp, #16]
   130f0:	str	r2, [r8, #16]
   130f4:	ldr	r2, [sp, #20]
   130f8:	str	r2, [r8, #20]
   130fc:	str	r3, [r8, #24]
   13100:	str	r3, [r8, #32]
   13104:	str	r3, [r8, #28]
   13108:	cmp	r5, r3
   1310c:	beq	13144 <__assert_fail@plt+0x1ba4>
   13110:	ldr	r3, [r5]
   13114:	cmp	r3, #0
   13118:	beq	13364 <__assert_fail@plt+0x1dc4>
   1311c:	mov	r3, #0
   13120:	add	r3, r3, #1
   13124:	ldr	r2, [r5, r3, lsl #4]
   13128:	cmp	r2, #0
   1312c:	bne	13120 <__assert_fail@plt+0x1b80>
   13130:	ldr	r2, [sl, #12]
   13134:	str	r2, [r8, #28]
   13138:	ldr	r2, [sl, #12]
   1313c:	add	r3, r2, r3, lsl #2
   13140:	str	r3, [sl, #12]
   13144:	add	r0, r8, #36	; 0x24
   13148:	cmp	r5, #0
   1314c:	beq	13188 <__assert_fail@plt+0x1be8>
   13150:	ldr	ip, [r5]
   13154:	cmp	ip, #0
   13158:	beq	13188 <__assert_fail@plt+0x1be8>
   1315c:	mov	r2, #0
   13160:	add	r4, r2, #1
   13164:	str	sl, [sp]
   13168:	mov	r3, r0
   1316c:	mov	r1, r8
   13170:	mov	r0, ip
   13174:	bl	1307c <__assert_fail@plt+0x1adc>
   13178:	ldr	ip, [r5, r4, lsl #4]
   1317c:	mov	r2, r4
   13180:	cmp	ip, #0
   13184:	bne	13160 <__assert_fail@plt+0x1bc0>
   13188:	add	sp, sp, #36	; 0x24
   1318c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13190:	ldr	r0, [r4, #16]!
   13194:	cmp	r0, #0
   13198:	beq	132a4 <__assert_fail@plt+0x1d04>
   1319c:	mov	r1, r7
   131a0:	bl	11240 <strcmp@plt>
   131a4:	cmp	r0, #0
   131a8:	bne	13190 <__assert_fail@plt+0x1bf0>
   131ac:	sub	r4, r4, fp
   131b0:	cmn	r4, #15
   131b4:	blt	132a4 <__assert_fail@plt+0x1d04>
   131b8:	add	r6, r6, #24
   131bc:	sub	r2, r6, #24
   131c0:	mov	r8, r6
   131c4:	ldr	r4, [r6, #-20]	; 0xffffffec
   131c8:	cmp	r4, #0
   131cc:	bne	131dc <__assert_fail@plt+0x1c3c>
   131d0:	ldr	r3, [r6, #-24]	; 0xffffffe8
   131d4:	cmp	r3, #0
   131d8:	beq	13340 <__assert_fail@plt+0x1da0>
   131dc:	ldr	r3, [r8, #-12]
   131e0:	and	r1, r3, #4
   131e4:	cmp	r1, #0
   131e8:	moveq	r9, r2
   131ec:	ldr	r5, [r9, #12]
   131f0:	ands	r5, r5, #8
   131f4:	bne	131b8 <__assert_fail@plt+0x1c18>
   131f8:	tst	r3, #8
   131fc:	bne	13280 <__assert_fail@plt+0x1ce0>
   13200:	sub	r3, r4, #1
   13204:	cmp	r3, #254	; 0xfe
   13208:	bhi	13280 <__assert_fail@plt+0x1ce0>
   1320c:	bl	113cc <__ctype_b_loc@plt>
   13210:	ldr	r3, [r0]
   13214:	lsl	r4, r4, #1
   13218:	ldrh	r3, [r3, r4]
   1321c:	tst	r3, #16384	; 0x4000
   13220:	beq	13280 <__assert_fail@plt+0x1ce0>
   13224:	ldr	r3, [sl, #4]
   13228:	add	r2, r3, #1
   1322c:	str	r2, [sl, #4]
   13230:	ldr	r2, [r8, #-20]	; 0xffffffec
   13234:	strb	r2, [r3]
   13238:	ldr	r3, [r9, #8]
   1323c:	cmp	r3, #0
   13240:	beq	13274 <__assert_fail@plt+0x1cd4>
   13244:	ldr	r3, [sl, #4]
   13248:	add	r2, r3, #1
   1324c:	str	r2, [sl, #4]
   13250:	mov	r2, #58	; 0x3a
   13254:	strb	r2, [r3]
   13258:	ldr	r3, [r9, #12]
   1325c:	tst	r3, #1
   13260:	ldrne	r3, [sl, #4]
   13264:	addne	r2, r3, #1
   13268:	strne	r2, [sl, #4]
   1326c:	movne	r2, #58	; 0x3a
   13270:	strbne	r2, [r3]
   13274:	ldr	r3, [sl, #4]
   13278:	mov	r2, #0
   1327c:	strb	r2, [r3]
   13280:	ldr	r7, [r8, #-24]	; 0xffffffe8
   13284:	cmp	r7, #0
   13288:	beq	131b8 <__assert_fail@plt+0x1c18>
   1328c:	ldr	r3, [sl]
   13290:	ldr	fp, [r3, #8]
   13294:	ldr	r0, [fp]
   13298:	cmp	r0, #0
   1329c:	movne	r4, fp
   132a0:	bne	1319c <__assert_fail@plt+0x1bfc>
   132a4:	ldr	r3, [sl, #8]
   132a8:	str	r7, [r3]
   132ac:	ldr	r3, [sl, #8]
   132b0:	ldr	r2, [r9, #8]
   132b4:	cmp	r2, #0
   132b8:	beq	132d0 <__assert_fail@plt+0x1d30>
   132bc:	ldr	r5, [r9, #12]
   132c0:	and	r5, r5, #1
   132c4:	cmp	r5, #0
   132c8:	movne	r5, #2
   132cc:	moveq	r5, #1
   132d0:	str	r5, [r3, #4]
   132d4:	ldr	r3, [sl, #8]
   132d8:	mov	r2, #0
   132dc:	str	r2, [r3, #8]
   132e0:	ldr	r1, [sl, #8]
   132e4:	ldr	r0, [r8, #-20]	; 0xffffffec
   132e8:	cmp	r0, r2
   132ec:	ldreq	r0, [r9, #4]
   132f0:	bic	r0, r0, #-16777216	; 0xff000000
   132f4:	ldr	r3, [sl]
   132f8:	ldr	r3, [r3, #48]	; 0x30
   132fc:	ldr	r2, [sp, #24]
   13300:	sub	r3, r2, r3
   13304:	asr	r3, r3, #2
   13308:	rsb	r2, r3, r3, lsl #3
   1330c:	add	r2, r2, r2, lsl #6
   13310:	add	r2, r3, r2, lsl #3
   13314:	rsb	r2, r2, r2, lsl #15
   13318:	add	r3, r3, r2, lsl #3
   1331c:	add	r3, r3, #1
   13320:	add	r3, r0, r3, lsl #24
   13324:	str	r3, [r1, #12]
   13328:	ldr	r3, [sl, #8]
   1332c:	add	r2, r3, #16
   13330:	str	r2, [sl, #8]
   13334:	mov	r2, #0
   13338:	str	r2, [r3, #16]
   1333c:	b	131b8 <__assert_fail@plt+0x1c18>
   13340:	ldr	r3, [r6, #-8]
   13344:	cmp	r3, #0
   13348:	bne	131dc <__assert_fail@plt+0x1c3c>
   1334c:	ldr	r3, [r6, #-4]
   13350:	cmp	r3, #0
   13354:	bne	131dc <__assert_fail@plt+0x1c3c>
   13358:	ldr	r5, [sp, #28]
   1335c:	ldr	r8, [sp, #24]
   13360:	b	130cc <__assert_fail@plt+0x1b2c>
   13364:	mov	r3, #0
   13368:	b	13130 <__assert_fail@plt+0x1b90>

0001336c <argp_parse@@Base>:
   1336c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13370:	add	fp, sp, #32
   13374:	sub	sp, sp, #220	; 0xdc
   13378:	mov	r8, r0
   1337c:	str	r1, [fp, #-236]	; 0xffffff14
   13380:	str	r2, [fp, #-232]	; 0xffffff18
   13384:	mov	r6, r3
   13388:	tst	r3, #1
   1338c:	bne	133bc <argp_parse@@Base+0x50>
   13390:	ldr	r3, [pc, #2548]	; 13d8c <argp_parse@@Base+0xa20>
   13394:	ldr	r3, [r3]
   13398:	cmp	r3, #0
   1339c:	moveq	r3, r2
   133a0:	ldreq	r2, [r3]
   133a4:	ldreq	r3, [pc, #2528]	; 13d8c <argp_parse@@Base+0xa20>
   133a8:	streq	r2, [r3]
   133ac:	ldr	r3, [pc, #2524]	; 13d90 <argp_parse@@Base+0xa24>
   133b0:	ldr	r3, [r3]
   133b4:	cmp	r3, #0
   133b8:	beq	135ac <argp_parse@@Base+0x240>
   133bc:	tst	r6, #16
   133c0:	beq	135c4 <argp_parse@@Base+0x258>
   133c4:	mov	r2, #36	; 0x24
   133c8:	mov	r1, #0
   133cc:	sub	r0, fp, #196	; 0xc4
   133d0:	bl	1142c <memset@plt>
   133d4:	ands	r3, r6, #4
   133d8:	str	r3, [fp, #-240]	; 0xffffff10
   133dc:	moveq	r3, #1
   133e0:	movne	r3, #0
   133e4:	str	r3, [fp, #-228]	; 0xffffff1c
   133e8:	mov	r3, #0
   133ec:	str	r3, [fp, #-224]	; 0xffffff20
   133f0:	str	r3, [fp, #-220]	; 0xffffff24
   133f4:	str	r3, [fp, #-216]	; 0xffffff28
   133f8:	cmp	r8, r3
   133fc:	beq	1340c <argp_parse@@Base+0xa0>
   13400:	sub	r1, fp, #228	; 0xe4
   13404:	mov	r0, r8
   13408:	bl	12de8 <__assert_fail@plt+0x1848>
   1340c:	ldr	r4, [fp, #-220]	; 0xffffff24
   13410:	add	r4, r4, #1
   13414:	add	r4, r4, r4, lsl #3
   13418:	lsl	r4, r4, #2
   1341c:	ldr	r9, [fp, #-216]	; 0xffffff28
   13420:	lsl	r9, r9, #2
   13424:	add	sl, r9, r4
   13428:	ldr	r5, [fp, #-224]	; 0xffffff20
   1342c:	add	r5, r5, #1
   13430:	add	r5, sl, r5, lsl #4
   13434:	ldr	r0, [fp, #-228]	; 0xffffff1c
   13438:	add	r0, r0, #1
   1343c:	add	r0, r0, r5
   13440:	bl	14b98 <argp_parse@@Base+0x182c>
   13444:	mov	r7, r0
   13448:	str	r0, [fp, #-40]	; 0xffffffd8
   1344c:	cmp	r0, #0
   13450:	moveq	r4, #12
   13454:	beq	13bdc <argp_parse@@Base+0x870>
   13458:	str	r0, [fp, #-112]	; 0xffffff90
   1345c:	add	r4, r0, r4
   13460:	str	r4, [fp, #-104]	; 0xffffff98
   13464:	add	r3, r0, sl
   13468:	str	r3, [fp, #-244]	; 0xffffff0c
   1346c:	str	r3, [fp, #-152]	; 0xffffff68
   13470:	add	sl, r0, r5
   13474:	str	sl, [fp, #-156]	; 0xffffff64
   13478:	mov	r3, #1
   1347c:	str	r3, [fp, #-196]	; 0xffffff3c
   13480:	str	r3, [fp, #-192]	; 0xffffff40
   13484:	sub	ip, fp, #148	; 0x94
   13488:	sub	lr, fp, #196	; 0xc4
   1348c:	ldm	lr!, {r0, r1, r2, r3}
   13490:	stmia	ip!, {r0, r1, r2, r3}
   13494:	ldm	lr!, {r0, r1, r2, r3}
   13498:	stmia	ip!, {r0, r1, r2, r3}
   1349c:	ldr	r3, [lr]
   134a0:	str	r3, [ip]
   134a4:	mov	r2, r9
   134a8:	mov	r1, #0
   134ac:	mov	r0, r4
   134b0:	bl	1142c <memset@plt>
   134b4:	sub	r3, fp, #160	; 0xa0
   134b8:	str	r3, [fp, #-212]	; 0xffffff2c
   134bc:	str	sl, [fp, #-208]	; 0xffffff30
   134c0:	ldr	r3, [fp, #-244]	; 0xffffff0c
   134c4:	str	r3, [fp, #-204]	; 0xffffff34
   134c8:	str	r4, [fp, #-200]	; 0xffffff38
   134cc:	tst	r6, #8
   134d0:	beq	1365c <argp_parse@@Base+0x2f0>
   134d4:	add	sl, sl, #1
   134d8:	str	sl, [fp, #-208]	; 0xffffff30
   134dc:	mov	r3, #45	; 0x2d
   134e0:	strb	r3, [r7, r5]
   134e4:	mov	r3, #0
   134e8:	ldr	r2, [fp, #-208]	; 0xffffff30
   134ec:	strb	r3, [r2]
   134f0:	ldr	r2, [fp, #-204]	; 0xffffff34
   134f4:	str	r3, [r2]
   134f8:	str	r8, [fp, #-160]	; 0xffffff60
   134fc:	cmp	r8, r3
   13500:	beq	13678 <argp_parse@@Base+0x30c>
   13504:	sub	r3, fp, #212	; 0xd4
   13508:	str	r3, [sp]
   1350c:	ldr	r3, [fp, #-112]	; 0xffffff90
   13510:	mov	r2, #0
   13514:	mov	r1, r2
   13518:	mov	r0, r8
   1351c:	bl	1307c <__assert_fail@plt+0x1adc>
   13520:	str	r0, [fp, #-108]	; 0xffffff94
   13524:	mov	r2, #56	; 0x38
   13528:	mov	r1, #0
   1352c:	sub	r0, fp, #96	; 0x60
   13530:	bl	1142c <memset@plt>
   13534:	ldr	r3, [fp, #-160]	; 0xffffff60
   13538:	str	r3, [fp, #-96]	; 0xffffffa0
   1353c:	ldr	r3, [fp, #-236]	; 0xffffff14
   13540:	str	r3, [fp, #-92]	; 0xffffffa4
   13544:	ldr	r3, [fp, #-232]	; 0xffffff18
   13548:	str	r3, [fp, #-88]	; 0xffffffa8
   1354c:	str	r6, [fp, #-80]	; 0xffffffb0
   13550:	ldr	r3, [pc, #2108]	; 13d94 <argp_parse@@Base+0xa28>
   13554:	ldr	r3, [r3]
   13558:	str	r3, [fp, #-52]	; 0xffffffcc
   1355c:	ldr	r3, [pc, #2100]	; 13d98 <argp_parse@@Base+0xa2c>
   13560:	ldr	r3, [r3]
   13564:	str	r3, [fp, #-48]	; 0xffffffd0
   13568:	sub	r3, fp, #160	; 0xa0
   1356c:	str	r3, [fp, #-44]	; 0xffffffd4
   13570:	mov	r3, #1
   13574:	str	r3, [fp, #-100]	; 0xffffff9c
   13578:	ldr	r3, [fp, #-112]	; 0xffffff90
   1357c:	ldr	r2, [fp, #-108]	; 0xffffff94
   13580:	cmp	r3, r2
   13584:	bcs	13710 <argp_parse@@Base+0x3a4>
   13588:	ldr	r2, [fp, #8]
   1358c:	str	r2, [r3, #24]
   13590:	ldr	r5, [fp, #-112]	; 0xffffff90
   13594:	ldr	r3, [fp, #-108]	; 0xffffff94
   13598:	cmp	r5, r3
   1359c:	bcs	1371c <argp_parse@@Base+0x3b0>
   135a0:	ldr	r7, [pc, #2036]	; 13d9c <argp_parse@@Base+0xa30>
   135a4:	mov	r6, #0
   135a8:	b	136b4 <argp_parse@@Base+0x348>
   135ac:	ldr	r3, [fp, #-232]	; 0xffffff18
   135b0:	ldr	r0, [r3]
   135b4:	bl	13ea0 <argp_parse@@Base+0xb34>
   135b8:	ldr	r3, [pc, #2000]	; 13d90 <argp_parse@@Base+0xa24>
   135bc:	str	r0, [r3]
   135c0:	b	133bc <argp_parse@@Base+0x50>
   135c4:	sub	sp, sp, #72	; 0x48
   135c8:	add	r5, sp, #8
   135cc:	sub	sp, sp, #40	; 0x28
   135d0:	add	r4, sp, #8
   135d4:	mov	r1, #0
   135d8:	str	r1, [r4]
   135dc:	str	r1, [r4, #4]
   135e0:	str	r1, [r4, #8]
   135e4:	str	r1, [r4, #12]
   135e8:	str	r1, [r4, #20]
   135ec:	str	r1, [r4, #24]
   135f0:	str	r5, [r4, #16]
   135f4:	mov	r2, #64	; 0x40
   135f8:	mov	r0, r5
   135fc:	bl	1142c <memset@plt>
   13600:	cmp	r8, #0
   13604:	addne	r3, r5, #16
   13608:	strne	r8, [r5]
   1360c:	moveq	r3, r5
   13610:	ldr	r2, [pc, #1928]	; 13da0 <argp_parse@@Base+0xa34>
   13614:	str	r2, [r3]
   13618:	ldr	r2, [pc, #1924]	; 13da4 <argp_parse@@Base+0xa38>
   1361c:	ldr	r2, [r2]
   13620:	cmp	r2, #0
   13624:	beq	13644 <argp_parse@@Base+0x2d8>
   13628:	add	r2, r3, #32
   1362c:	ldr	r1, [pc, #1908]	; 13da8 <argp_parse@@Base+0xa3c>
   13630:	str	r1, [r3, #16]
   13634:	mov	r3, #0
   13638:	str	r3, [r2]
   1363c:	mov	r8, r4
   13640:	b	133c4 <argp_parse@@Base+0x58>
   13644:	ldr	r2, [pc, #1888]	; 13dac <argp_parse@@Base+0xa40>
   13648:	ldr	r2, [r2]
   1364c:	cmp	r2, #0
   13650:	addeq	r2, r3, #16
   13654:	bne	13628 <argp_parse@@Base+0x2bc>
   13658:	b	13634 <argp_parse@@Base+0x2c8>
   1365c:	ldr	r3, [fp, #-240]	; 0xffffff10
   13660:	cmp	r3, #0
   13664:	addne	sl, sl, #1
   13668:	strne	sl, [fp, #-208]	; 0xffffff30
   1366c:	movne	r3, #43	; 0x2b
   13670:	strbne	r3, [r7, r5]
   13674:	b	134e4 <argp_parse@@Base+0x178>
   13678:	ldr	r3, [fp, #-112]	; 0xffffff90
   1367c:	str	r3, [fp, #-108]	; 0xffffff94
   13680:	b	13524 <argp_parse@@Base+0x1b8>
   13684:	mov	r3, r6
   13688:	mov	r2, r7
   1368c:	sub	r1, fp, #96	; 0x60
   13690:	mov	r0, r5
   13694:	bl	12d84 <__assert_fail@plt+0x17e4>
   13698:	add	r5, r5, #36	; 0x24
   1369c:	ldr	r3, [fp, #-108]	; 0xffffff94
   136a0:	cmp	r5, r3
   136a4:	bcs	13700 <argp_parse@@Base+0x394>
   136a8:	cmp	r0, #7
   136ac:	cmpne	r0, #0
   136b0:	bne	13700 <argp_parse@@Base+0x394>
   136b4:	ldr	r3, [r5, #16]
   136b8:	cmp	r3, #0
   136bc:	ldrne	r2, [r5, #20]
   136c0:	ldrne	r3, [r3, #28]
   136c4:	ldrne	r3, [r3, r2, lsl #2]
   136c8:	strne	r3, [r5, #24]
   136cc:	ldr	r3, [r5]
   136d0:	cmp	r3, #0
   136d4:	bne	13684 <argp_parse@@Base+0x318>
   136d8:	ldr	r3, [r5, #4]
   136dc:	ldr	r3, [r3, #16]
   136e0:	cmp	r3, #0
   136e4:	beq	13684 <argp_parse@@Base+0x318>
   136e8:	ldr	r3, [r3]
   136ec:	cmp	r3, #0
   136f0:	ldrne	r3, [r5, #28]
   136f4:	ldrne	r2, [r5, #24]
   136f8:	strne	r2, [r3]
   136fc:	b	13684 <argp_parse@@Base+0x318>
   13700:	mov	r4, r0
   13704:	cmp	r0, #7
   13708:	beq	1371c <argp_parse@@Base+0x3b0>
   1370c:	b	13714 <argp_parse@@Base+0x3a8>
   13710:	mov	r4, #0
   13714:	cmp	r4, #0
   13718:	bne	13bdc <argp_parse@@Base+0x870>
   1371c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13720:	tst	r3, #2
   13724:	moveq	r3, #1
   13728:	streq	r3, [fp, #-144]	; 0xffffff70
   1372c:	beq	13758 <argp_parse@@Base+0x3ec>
   13730:	mov	r2, #0
   13734:	str	r2, [fp, #-144]	; 0xffffff70
   13738:	tst	r3, #1
   1373c:	beq	13758 <argp_parse@@Base+0x3ec>
   13740:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13744:	sub	r3, r3, #4
   13748:	str	r3, [fp, #-88]	; 0xffffffa8
   1374c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13750:	add	r3, r3, #1
   13754:	str	r3, [fp, #-92]	; 0xffffffa4
   13758:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1375c:	ldr	r2, [fp, #-232]	; 0xffffff18
   13760:	cmp	r2, r3
   13764:	beq	13784 <argp_parse@@Base+0x418>
   13768:	ldr	r3, [pc, #1568]	; 13d90 <argp_parse@@Base+0xa24>
   1376c:	ldr	r3, [r3]
   13770:	str	r3, [fp, #-56]	; 0xffffffc8
   13774:	mov	r6, #0
   13778:	mov	sl, #1
   1377c:	mvn	r9, #0
   13780:	b	139f4 <argp_parse@@Base+0x688>
   13784:	ldr	r0, [r2]
   13788:	cmp	r0, #0
   1378c:	beq	13768 <argp_parse@@Base+0x3fc>
   13790:	bl	13ea0 <argp_parse@@Base+0xb34>
   13794:	str	r0, [fp, #-56]	; 0xffffffc8
   13798:	b	13774 <argp_parse@@Base+0x408>
   1379c:	ldr	r3, [fp, #-84]	; 0xffffffac
   137a0:	str	r3, [fp, #-148]	; 0xffffff6c
   137a4:	str	r9, [fp, #-140]	; 0xffffff74
   137a8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   137ac:	tst	r3, #64	; 0x40
   137b0:	beq	1387c <argp_parse@@Base+0x510>
   137b4:	sub	r3, fp, #148	; 0x94
   137b8:	str	r3, [sp, #4]
   137bc:	str	r6, [sp]
   137c0:	ldr	r3, [fp, #-152]	; 0xffffff68
   137c4:	ldr	r2, [fp, #-156]	; 0xffffff64
   137c8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   137cc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   137d0:	bl	1403c <argp_parse@@Base+0xcd0>
   137d4:	mov	r5, r0
   137d8:	ldr	r4, [fp, #-148]	; 0xffffff6c
   137dc:	str	r4, [fp, #-84]	; 0xffffffac
   137e0:	cmn	r5, #1
   137e4:	beq	138a4 <argp_parse@@Base+0x538>
   137e8:	cmp	r5, #63	; 0x3f
   137ec:	beq	138d0 <argp_parse@@Base+0x564>
   137f0:	cmp	r5, #1
   137f4:	beq	13908 <argp_parse@@Base+0x59c>
   137f8:	ldr	r4, [fp, #-136]	; 0xffffff78
   137fc:	asrs	r3, r5, #24
   13800:	bne	139b4 <argp_parse@@Base+0x648>
   13804:	mov	r1, r5
   13808:	ldr	r0, [fp, #-156]	; 0xffffff64
   1380c:	bl	113f0 <strchr@plt>
   13810:	subs	r1, r0, #0
   13814:	beq	13864 <argp_parse@@Base+0x4f8>
   13818:	ldr	r0, [fp, #-112]	; 0xffffff90
   1381c:	ldr	r2, [fp, #-108]	; 0xffffff94
   13820:	cmp	r2, r0
   13824:	bls	13864 <argp_parse@@Base+0x4f8>
   13828:	ldr	r3, [r0, #8]
   1382c:	cmp	r1, r3
   13830:	bcc	1384c <argp_parse@@Base+0x4e0>
   13834:	add	r0, r0, #36	; 0x24
   13838:	cmp	r2, r0
   1383c:	bls	13864 <argp_parse@@Base+0x4f8>
   13840:	ldr	r3, [r0, #8]
   13844:	cmp	r1, r3
   13848:	bcs	13834 <argp_parse@@Base+0x4c8>
   1384c:	mov	r3, r4
   13850:	mov	r2, r5
   13854:	sub	r1, fp, #96	; 0x60
   13858:	bl	12d84 <__assert_fail@plt+0x17e4>
   1385c:	cmp	r0, #7
   13860:	bne	139ec <argp_parse@@Base+0x680>
   13864:	ldr	r3, [pc, #1348]	; 13db0 <argp_parse@@Base+0xa44>
   13868:	mov	r2, r5
   1386c:	ldr	r1, [pc, #1344]	; 13db4 <argp_parse@@Base+0xa48>
   13870:	sub	r0, fp, #96	; 0x60
   13874:	bl	17c98 <argp_error@@Base>
   13878:	b	13a94 <argp_parse@@Base+0x728>
   1387c:	sub	r3, fp, #148	; 0x94
   13880:	str	r3, [sp, #4]
   13884:	str	r6, [sp]
   13888:	ldr	r3, [fp, #-152]	; 0xffffff68
   1388c:	ldr	r2, [fp, #-156]	; 0xffffff64
   13890:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13894:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13898:	bl	13fe0 <argp_parse@@Base+0xc74>
   1389c:	mov	r5, r0
   138a0:	b	137d8 <argp_parse@@Base+0x46c>
   138a4:	str	r6, [fp, #-100]	; 0xffffff9c
   138a8:	cmp	r4, #1
   138ac:	ble	13a1c <argp_parse@@Base+0x6b0>
   138b0:	sub	r3, r4, #-1073741823	; 0xc0000001
   138b4:	ldr	r1, [pc, #1276]	; 13db8 <argp_parse@@Base+0xa4c>
   138b8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   138bc:	ldr	r0, [r2, r3, lsl #2]
   138c0:	bl	11240 <strcmp@plt>
   138c4:	cmp	r0, #0
   138c8:	streq	r4, [fp, #-72]	; 0xffffffb8
   138cc:	b	13a1c <argp_parse@@Base+0x6b0>
   138d0:	ldr	r3, [fp, #-140]	; 0xffffff74
   138d4:	cmn	r3, #1
   138d8:	beq	137f8 <argp_parse@@Base+0x48c>
   138dc:	mov	r3, #0
   138e0:	b	13aa4 <argp_parse@@Base+0x738>
   138e4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   138e8:	tst	r2, #4
   138ec:	movne	r3, #1
   138f0:	bne	13aa4 <argp_parse@@Base+0x738>
   138f4:	add	r2, r3, #1
   138f8:	str	r2, [fp, #-84]	; 0xffffffac
   138fc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13900:	ldr	r3, [r2, r3, lsl #2]
   13904:	str	r3, [fp, #-136]	; 0xffffff78
   13908:	ldr	r7, [fp, #-136]	; 0xffffff78
   1390c:	ldr	r8, [fp, #-84]	; 0xffffffac
   13910:	sub	r8, r8, #1
   13914:	str	r8, [fp, #-84]	; 0xffffffac
   13918:	ldr	r5, [fp, #-112]	; 0xffffff90
   1391c:	ldr	r3, [fp, #-108]	; 0xffffff94
   13920:	cmp	r3, r5
   13924:	bhi	13970 <argp_parse@@Base+0x604>
   13928:	b	139ac <argp_parse@@Base+0x640>
   1392c:	ldr	r3, [fp, #-84]	; 0xffffffac
   13930:	sub	r3, r3, #1
   13934:	str	r3, [fp, #-84]	; 0xffffffac
   13938:	mov	r3, r6
   1393c:	ldr	r2, [pc, #1144]	; 13dbc <argp_parse@@Base+0xa50>
   13940:	sub	r1, fp, #96	; 0x60
   13944:	mov	r0, r5
   13948:	bl	12d84 <__assert_fail@plt+0x17e4>
   1394c:	add	r5, r5, #36	; 0x24
   13950:	ldr	r3, [fp, #-108]	; 0xffffff94
   13954:	cmp	r5, r3
   13958:	movcs	r3, #0
   1395c:	movcc	r3, #1
   13960:	cmp	r0, #7
   13964:	movne	r3, #0
   13968:	cmp	r3, #0
   1396c:	beq	13d50 <argp_parse@@Base+0x9e4>
   13970:	ldr	r3, [fp, #-84]	; 0xffffffac
   13974:	add	r3, r3, #1
   13978:	str	r3, [fp, #-84]	; 0xffffffac
   1397c:	mov	r3, r7
   13980:	mov	r2, r6
   13984:	sub	r1, fp, #96	; 0x60
   13988:	mov	r0, r5
   1398c:	bl	12d84 <__assert_fail@plt+0x17e4>
   13990:	cmp	r0, #7
   13994:	beq	1392c <argp_parse@@Base+0x5c0>
   13998:	add	r5, r5, #36	; 0x24
   1399c:	cmp	r0, #0
   139a0:	beq	13d60 <argp_parse@@Base+0x9f4>
   139a4:	cmp	r0, #7
   139a8:	bne	139ec <argp_parse@@Base+0x680>
   139ac:	mov	r5, #1
   139b0:	b	13a94 <argp_parse@@Base+0x728>
   139b4:	ands	r1, r5, #8388608	; 0x800000
   139b8:	movne	r1, #-16777216	; 0xff000000
   139bc:	bic	r2, r5, #-16777216	; 0xff000000
   139c0:	add	r0, r3, r3, lsl #3
   139c4:	lsl	r0, r0, #2
   139c8:	sub	r0, r0, #36	; 0x24
   139cc:	mov	r3, r4
   139d0:	orr	r2, r2, r1
   139d4:	sub	r1, fp, #96	; 0x60
   139d8:	ldr	ip, [fp, #-112]	; 0xffffff90
   139dc:	add	r0, ip, r0
   139e0:	bl	12d84 <__assert_fail@plt+0x17e4>
   139e4:	cmp	r0, #7
   139e8:	beq	13a34 <argp_parse@@Base+0x6c8>
   139ec:	cmp	r0, #0
   139f0:	bne	13b44 <argp_parse@@Base+0x7d8>
   139f4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   139f8:	cmp	r3, #0
   139fc:	beq	13a10 <argp_parse@@Base+0x6a4>
   13a00:	ldr	r2, [fp, #-84]	; 0xffffffac
   13a04:	cmp	r3, r2
   13a08:	strgt	r6, [fp, #-72]	; 0xffffffb8
   13a0c:	ble	13a1c <argp_parse@@Base+0x6b0>
   13a10:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13a14:	cmp	r3, #0
   13a18:	bne	1379c <argp_parse@@Base+0x430>
   13a1c:	ldr	r3, [fp, #-84]	; 0xffffffac
   13a20:	ldr	r2, [fp, #-92]	; 0xffffffa4
   13a24:	cmp	r3, r2
   13a28:	blt	138e4 <argp_parse@@Base+0x578>
   13a2c:	mov	r3, #1
   13a30:	b	13aa4 <argp_parse@@Base+0x738>
   13a34:	ldr	r3, [fp, #-152]	; 0xffffff68
   13a38:	ldr	r2, [r3, #12]
   13a3c:	cmp	r2, r5
   13a40:	beq	13a74 <argp_parse@@Base+0x708>
   13a44:	ldr	r2, [r3]
   13a48:	cmp	r2, #0
   13a4c:	beq	13b3c <argp_parse@@Base+0x7d0>
   13a50:	add	r3, r3, #16
   13a54:	ldr	r2, [r3, #12]
   13a58:	cmp	r2, r5
   13a5c:	beq	13a74 <argp_parse@@Base+0x708>
   13a60:	ldr	r2, [r3]
   13a64:	cmp	r2, #0
   13a68:	bne	13a50 <argp_parse@@Base+0x6e4>
   13a6c:	ldr	r2, [pc, #844]	; 13dc0 <argp_parse@@Base+0xa54>
   13a70:	b	13a84 <argp_parse@@Base+0x718>
   13a74:	ldr	r2, [r3]
   13a78:	ldr	r3, [pc, #832]	; 13dc0 <argp_parse@@Base+0xa54>
   13a7c:	cmp	r2, #0
   13a80:	moveq	r2, r3
   13a84:	ldr	r3, [pc, #804]	; 13db0 <argp_parse@@Base+0xa44>
   13a88:	ldr	r1, [pc, #820]	; 13dc4 <argp_parse@@Base+0xa58>
   13a8c:	sub	r0, fp, #96	; 0x60
   13a90:	bl	17c98 <argp_error@@Base>
   13a94:	add	r5, r5, #1
   13a98:	bics	r3, r5, #2
   13a9c:	moveq	r3, #1
   13aa0:	movne	r3, #0
   13aa4:	cmp	r3, #0
   13aa8:	moveq	r4, #7
   13aac:	beq	13b48 <argp_parse@@Base+0x7dc>
   13ab0:	ldr	r3, [fp, #-84]	; 0xffffffac
   13ab4:	ldr	r2, [fp, #-92]	; 0xffffffa4
   13ab8:	cmp	r3, r2
   13abc:	beq	13be8 <argp_parse@@Base+0x87c>
   13ac0:	ldr	r2, [fp, #4]
   13ac4:	cmp	r2, #0
   13ac8:	strne	r3, [r2]
   13acc:	beq	13ce4 <argp_parse@@Base+0x978>
   13ad0:	ldr	r5, [fp, #-108]	; 0xffffff94
   13ad4:	sub	r5, r5, #36	; 0x24
   13ad8:	ldr	r3, [fp, #-112]	; 0xffffff90
   13adc:	cmp	r5, r3
   13ae0:	bcc	13d20 <argp_parse@@Base+0x9b4>
   13ae4:	ldr	r7, [pc, #732]	; 13dc8 <argp_parse@@Base+0xa5c>
   13ae8:	mov	r6, #0
   13aec:	mov	r3, r6
   13af0:	mov	r2, r7
   13af4:	sub	r1, fp, #96	; 0x60
   13af8:	mov	r0, r5
   13afc:	bl	12d84 <__assert_fail@plt+0x17e4>
   13b00:	sub	r5, r5, #36	; 0x24
   13b04:	ldr	r3, [fp, #-112]	; 0xffffff90
   13b08:	cmp	r5, r3
   13b0c:	bcc	13b1c <argp_parse@@Base+0x7b0>
   13b10:	cmp	r0, #7
   13b14:	cmpne	r0, #0
   13b18:	beq	13aec <argp_parse@@Base+0x780>
   13b1c:	mov	r4, r0
   13b20:	cmp	r0, #7
   13b24:	moveq	r4, #0
   13b28:	ldr	r5, [fp, #-108]	; 0xffffff94
   13b2c:	sub	r5, r5, #36	; 0x24
   13b30:	cmp	r3, r5
   13b34:	bls	13ba0 <argp_parse@@Base+0x834>
   13b38:	b	13bd4 <argp_parse@@Base+0x868>
   13b3c:	ldr	r2, [pc, #636]	; 13dc0 <argp_parse@@Base+0xa54>
   13b40:	b	13a84 <argp_parse@@Base+0x718>
   13b44:	mov	r4, r0
   13b48:	cmp	r4, #7
   13b4c:	beq	13d08 <argp_parse@@Base+0x99c>
   13b50:	ldr	r5, [fp, #-112]	; 0xffffff90
   13b54:	ldr	r3, [fp, #-108]	; 0xffffff94
   13b58:	cmp	r3, r5
   13b5c:	bls	13b8c <argp_parse@@Base+0x820>
   13b60:	ldr	r7, [pc, #612]	; 13dcc <argp_parse@@Base+0xa60>
   13b64:	mov	r6, #0
   13b68:	mov	r3, r6
   13b6c:	mov	r2, r7
   13b70:	sub	r1, fp, #96	; 0x60
   13b74:	mov	r0, r5
   13b78:	bl	12d84 <__assert_fail@plt+0x17e4>
   13b7c:	add	r5, r5, #36	; 0x24
   13b80:	ldr	r3, [fp, #-108]	; 0xffffff94
   13b84:	cmp	r5, r3
   13b88:	bcc	13b68 <argp_parse@@Base+0x7fc>
   13b8c:	ldr	r5, [fp, #-108]	; 0xffffff94
   13b90:	sub	r5, r5, #36	; 0x24
   13b94:	ldr	r3, [fp, #-112]	; 0xffffff90
   13b98:	cmp	r3, r5
   13b9c:	bhi	13bcc <argp_parse@@Base+0x860>
   13ba0:	ldr	r7, [pc, #552]	; 13dd0 <argp_parse@@Base+0xa64>
   13ba4:	mov	r6, #0
   13ba8:	mov	r3, r6
   13bac:	mov	r2, r7
   13bb0:	sub	r1, fp, #96	; 0x60
   13bb4:	mov	r0, r5
   13bb8:	bl	12d84 <__assert_fail@plt+0x17e4>
   13bbc:	sub	r5, r5, #36	; 0x24
   13bc0:	ldr	r3, [fp, #-112]	; 0xffffff90
   13bc4:	cmp	r5, r3
   13bc8:	bcs	13ba8 <argp_parse@@Base+0x83c>
   13bcc:	cmp	r4, #7
   13bd0:	moveq	r4, #22
   13bd4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13bd8:	bl	13f60 <argp_parse@@Base+0xbf4>
   13bdc:	mov	r0, r4
   13be0:	sub	sp, fp, #32
   13be4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13be8:	ldr	r6, [fp, #-112]	; 0xffffff90
   13bec:	ldr	r5, [fp, #-108]	; 0xffffff94
   13bf0:	cmp	r6, r5
   13bf4:	bcs	13d28 <argp_parse@@Base+0x9bc>
   13bf8:	mov	r4, #0
   13bfc:	ldr	r8, [pc, #464]	; 13dd4 <argp_parse@@Base+0xa68>
   13c00:	mov	r7, r4
   13c04:	mov	r0, r4
   13c08:	b	13c28 <argp_parse@@Base+0x8bc>
   13c0c:	add	r6, r6, #36	; 0x24
   13c10:	ldr	r5, [fp, #-108]	; 0xffffff94
   13c14:	cmp	r6, r5
   13c18:	bcs	13c54 <argp_parse@@Base+0x8e8>
   13c1c:	cmp	r0, #7
   13c20:	cmpne	r0, #0
   13c24:	bne	13c4c <argp_parse@@Base+0x8e0>
   13c28:	ldr	r3, [r6, #12]
   13c2c:	cmp	r3, #0
   13c30:	bne	13c0c <argp_parse@@Base+0x8a0>
   13c34:	mov	r3, r7
   13c38:	mov	r2, r8
   13c3c:	sub	r1, fp, #96	; 0x60
   13c40:	mov	r0, r6
   13c44:	bl	12d84 <__assert_fail@plt+0x17e4>
   13c48:	b	13c0c <argp_parse@@Base+0x8a0>
   13c4c:	mov	r4, r0
   13c50:	b	13cb8 <argp_parse@@Base+0x94c>
   13c54:	mov	r4, r0
   13c58:	sub	r5, r5, #36	; 0x24
   13c5c:	ldr	r3, [fp, #-112]	; 0xffffff90
   13c60:	cmp	r3, r5
   13c64:	bhi	13cb8 <argp_parse@@Base+0x94c>
   13c68:	cmp	r0, #0
   13c6c:	cmpne	r0, #7
   13c70:	bne	13cb8 <argp_parse@@Base+0x94c>
   13c74:	ldr	r7, [pc, #348]	; 13dd8 <argp_parse@@Base+0xa6c>
   13c78:	mov	r6, #0
   13c7c:	mov	r3, r6
   13c80:	mov	r2, r7
   13c84:	sub	r1, fp, #96	; 0x60
   13c88:	mov	r0, r5
   13c8c:	bl	12d84 <__assert_fail@plt+0x17e4>
   13c90:	sub	r5, r5, #36	; 0x24
   13c94:	ldr	r3, [fp, #-112]	; 0xffffff90
   13c98:	cmp	r5, r3
   13c9c:	bcc	13cb4 <argp_parse@@Base+0x948>
   13ca0:	cmp	r0, #7
   13ca4:	cmpne	r0, #0
   13ca8:	beq	13c7c <argp_parse@@Base+0x910>
   13cac:	mov	r4, r0
   13cb0:	b	13cb8 <argp_parse@@Base+0x94c>
   13cb4:	mov	r4, r0
   13cb8:	cmp	r4, #7
   13cbc:	beq	13d3c <argp_parse@@Base+0x9d0>
   13cc0:	ldr	r3, [fp, #4]
   13cc4:	cmp	r3, #0
   13cc8:	beq	13d80 <argp_parse@@Base+0xa14>
   13ccc:	ldr	r3, [fp, #-84]	; 0xffffffac
   13cd0:	ldr	r2, [fp, #4]
   13cd4:	str	r3, [r2]
   13cd8:	cmp	r4, #0
   13cdc:	beq	13ad0 <argp_parse@@Base+0x764>
   13ce0:	b	13b48 <argp_parse@@Base+0x7dc>
   13ce4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13ce8:	tst	r3, #2
   13cec:	bne	13d08 <argp_parse@@Base+0x99c>
   13cf0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13cf4:	cmp	r0, #0
   13cf8:	beq	13d08 <argp_parse@@Base+0x99c>
   13cfc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13d00:	ldr	r1, [pc, #212]	; 13ddc <argp_parse@@Base+0xa70>
   13d04:	bl	113fc <fprintf@plt>
   13d08:	mov	r2, #260	; 0x104
   13d0c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13d10:	sub	r0, fp, #96	; 0x60
   13d14:	bl	17bdc <argp_state_help@@Base>
   13d18:	mov	r4, #7
   13d1c:	b	13b50 <argp_parse@@Base+0x7e4>
   13d20:	mov	r4, #0
   13d24:	b	13bcc <argp_parse@@Base+0x860>
   13d28:	sub	r5, r5, #36	; 0x24
   13d2c:	cmp	r6, r5
   13d30:	movhi	r4, #0
   13d34:	bls	13c74 <argp_parse@@Base+0x908>
   13d38:	b	13cc0 <argp_parse@@Base+0x954>
   13d3c:	ldr	r3, [fp, #4]
   13d40:	cmp	r3, #0
   13d44:	movne	r4, #0
   13d48:	bne	13ccc <argp_parse@@Base+0x960>
   13d4c:	b	13ad0 <argp_parse@@Base+0x764>
   13d50:	cmp	r0, #0
   13d54:	bne	139a4 <argp_parse@@Base+0x638>
   13d58:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13d5c:	str	r3, [fp, #-84]	; 0xffffffac
   13d60:	ldr	r3, [fp, #-84]	; 0xffffffac
   13d64:	cmp	r8, r3
   13d68:	sublt	r8, r3, r8
   13d6c:	ldrlt	r3, [r5, #-24]	; 0xffffffe8
   13d70:	addlt	r8, r3, r8
   13d74:	strlt	r8, [r5, #-24]	; 0xffffffe8
   13d78:	strge	sl, [fp, #-100]	; 0xffffff9c
   13d7c:	b	139f4 <argp_parse@@Base+0x688>
   13d80:	cmp	r4, #0
   13d84:	beq	13ad0 <argp_parse@@Base+0x764>
   13d88:	b	13b50 <argp_parse@@Base+0x7e4>
   13d8c:	andeq	fp, r2, ip, ror #5
   13d90:	andeq	fp, r2, r8, ror #5
   13d94:	strdeq	fp, [r2], -r0
   13d98:	strdeq	fp, [r2], -r4
   13d9c:	tsteq	r0, r3
   13da0:	andeq	r9, r1, r4, lsr sl
   13da4:	andeq	ip, r2, ip, asr #4
   13da8:	andeq	r9, r1, r0, asr sl
   13dac:	andeq	fp, r2, r4, ror ip
   13db0:	andeq	r9, r1, ip, ror #20
   13db4:	andeq	r9, r1, r0, lsl #23
   13db8:	andeq	r9, r1, ip, ror fp
   13dbc:	tsteq	r0, r6
   13dc0:	andeq	r9, r1, r8, ror fp
   13dc4:	andeq	r9, r1, r8, lsl #23
   13dc8:	tsteq	r0, r4
   13dcc:	tsteq	r0, r5
   13dd0:	tsteq	r0, r7
   13dd4:	tsteq	r0, r2
   13dd8:	tsteq	r0, r1
   13ddc:	muleq	r1, r4, fp
   13de0:	cmp	r1, #0
   13de4:	beq	13e30 <argp_parse@@Base+0xac4>
   13de8:	ldr	r2, [r1, #52]	; 0x34
   13dec:	ldr	r3, [r2, #48]	; 0x30
   13df0:	ldr	r1, [r2, #52]	; 0x34
   13df4:	cmp	r3, r1
   13df8:	bcs	13e38 <argp_parse@@Base+0xacc>
   13dfc:	ldr	r2, [r3, #4]
   13e00:	cmp	r0, r2
   13e04:	beq	13e20 <argp_parse@@Base+0xab4>
   13e08:	add	r3, r3, #36	; 0x24
   13e0c:	cmp	r3, r1
   13e10:	bcs	13e28 <argp_parse@@Base+0xabc>
   13e14:	ldr	r2, [r3, #4]
   13e18:	cmp	r2, r0
   13e1c:	bne	13e08 <argp_parse@@Base+0xa9c>
   13e20:	ldr	r0, [r3, #24]
   13e24:	bx	lr
   13e28:	mov	r0, #0
   13e2c:	bx	lr
   13e30:	mov	r0, #0
   13e34:	bx	lr
   13e38:	mov	r0, #0
   13e3c:	bx	lr
   13e40:	push	{lr}		; (str lr, [sp, #-4]!)
   13e44:	sub	sp, sp, #12
   13e48:	ldr	r3, [pc, #28]	; 13e6c <argp_parse@@Base+0xb00>
   13e4c:	ldr	r1, [r3]
   13e50:	ldr	r3, [r3, #4]
   13e54:	str	r3, [sp]
   13e58:	ldr	r3, [pc, #16]	; 13e70 <argp_parse@@Base+0xb04>
   13e5c:	ldr	r2, [pc, #16]	; 13e74 <argp_parse@@Base+0xb08>
   13e60:	bl	14450 <argp_parse@@Base+0x10e4>
   13e64:	add	sp, sp, #12
   13e68:	pop	{pc}		; (ldr pc, [sp], #4)
   13e6c:	andeq	fp, r2, r8, ror ip
   13e70:	andeq	r9, r1, ip, ror ip
   13e74:	andeq	r9, r1, ip, lsl #25
   13e78:	ldr	r2, [pc, #20]	; 13e94 <argp_parse@@Base+0xb28>
   13e7c:	ldr	r3, [pc, #20]	; 13e98 <argp_parse@@Base+0xb2c>
   13e80:	str	r2, [r3]
   13e84:	ldr	r3, [pc, #16]	; 13e9c <argp_parse@@Base+0xb30>
   13e88:	str	r0, [r3]
   13e8c:	str	r1, [r3, #4]
   13e90:	bx	lr
   13e94:	andeq	r3, r1, r0, asr #28
   13e98:	andeq	fp, r2, r4, ror ip
   13e9c:	andeq	fp, r2, r8, ror ip
   13ea0:	ldrb	r3, [r0]
   13ea4:	cmp	r3, #47	; 0x2f
   13ea8:	bne	13eb8 <argp_parse@@Base+0xb4c>
   13eac:	ldrb	r3, [r0, #1]!
   13eb0:	cmp	r3, #47	; 0x2f
   13eb4:	beq	13eac <argp_parse@@Base+0xb40>
   13eb8:	ldrb	r2, [r0]
   13ebc:	cmp	r2, #0
   13ec0:	bxeq	lr
   13ec4:	push	{lr}		; (str lr, [sp, #-4]!)
   13ec8:	mov	r1, r0
   13ecc:	mov	r3, #0
   13ed0:	mov	lr, #1
   13ed4:	mov	ip, r3
   13ed8:	b	13ee8 <argp_parse@@Base+0xb7c>
   13edc:	ldrb	r2, [r1, #1]!
   13ee0:	cmp	r2, #0
   13ee4:	beq	13f04 <argp_parse@@Base+0xb98>
   13ee8:	cmp	r2, #47	; 0x2f
   13eec:	moveq	r3, lr
   13ef0:	beq	13edc <argp_parse@@Base+0xb70>
   13ef4:	cmp	r3, #0
   13ef8:	movne	r0, r1
   13efc:	movne	r3, ip
   13f00:	b	13edc <argp_parse@@Base+0xb70>
   13f04:	pop	{pc}		; (ldr pc, [sp], #4)
   13f08:	push	{r4, lr}
   13f0c:	mov	r4, r0
   13f10:	bl	113e4 <strlen@plt>
   13f14:	cmp	r0, #1
   13f18:	popls	{r4, pc}
   13f1c:	sub	r3, r0, #1
   13f20:	add	r2, r4, r3
   13f24:	ldrb	r1, [r4, r3]
   13f28:	cmp	r1, #47	; 0x2f
   13f2c:	popne	{r4, pc}
   13f30:	cmp	r3, #1
   13f34:	beq	13f58 <argp_parse@@Base+0xbec>
   13f38:	sub	r0, r3, #1
   13f3c:	ldrb	r1, [r2, #-1]!
   13f40:	cmp	r1, #47	; 0x2f
   13f44:	beq	13f50 <argp_parse@@Base+0xbe4>
   13f48:	mov	r0, r3
   13f4c:	pop	{r4, pc}
   13f50:	mov	r3, r0
   13f54:	b	13f30 <argp_parse@@Base+0xbc4>
   13f58:	mov	r0, #1
   13f5c:	pop	{r4, pc}
   13f60:	push	{r4, r5, lr}
   13f64:	sub	sp, sp, #12
   13f68:	mov	r5, r0
   13f6c:	bl	11408 <__errno_location@plt>
   13f70:	mov	r4, r0
   13f74:	ldr	r3, [r0]
   13f78:	str	r3, [sp]
   13f7c:	str	r3, [sp, #4]
   13f80:	mov	r3, #0
   13f84:	str	r3, [r0]
   13f88:	mov	r0, r5
   13f8c:	bl	11294 <free@plt>
   13f90:	ldr	r3, [r4]
   13f94:	cmp	r3, #0
   13f98:	moveq	r3, #4
   13f9c:	movne	r3, #0
   13fa0:	add	r2, sp, #8
   13fa4:	add	r3, r2, r3
   13fa8:	ldr	r3, [r3, #-8]
   13fac:	str	r3, [r4]
   13fb0:	add	sp, sp, #12
   13fb4:	pop	{r4, r5, pc}
   13fb8:	push	{lr}		; (str lr, [sp, #-4]!)
   13fbc:	sub	sp, sp, #20
   13fc0:	mov	ip, #0
   13fc4:	str	ip, [sp, #8]
   13fc8:	str	ip, [sp, #4]
   13fcc:	ldr	ip, [sp, #24]
   13fd0:	str	ip, [sp]
   13fd4:	bl	18914 <argp_error@@Base+0xc7c>
   13fd8:	add	sp, sp, #20
   13fdc:	pop	{pc}		; (ldr pc, [sp], #4)
   13fe0:	push	{lr}		; (str lr, [sp, #-4]!)
   13fe4:	sub	sp, sp, #20
   13fe8:	mov	ip, #0
   13fec:	str	ip, [sp, #12]
   13ff0:	ldr	lr, [sp, #28]
   13ff4:	str	lr, [sp, #8]
   13ff8:	str	ip, [sp, #4]
   13ffc:	ldr	ip, [sp, #24]
   14000:	str	ip, [sp]
   14004:	bl	18398 <argp_error@@Base+0x700>
   14008:	add	sp, sp, #20
   1400c:	pop	{pc}		; (ldr pc, [sp], #4)
   14010:	push	{lr}		; (str lr, [sp, #-4]!)
   14014:	sub	sp, sp, #20
   14018:	mov	ip, #0
   1401c:	str	ip, [sp, #8]
   14020:	mov	ip, #1
   14024:	str	ip, [sp, #4]
   14028:	ldr	ip, [sp, #24]
   1402c:	str	ip, [sp]
   14030:	bl	18914 <argp_error@@Base+0xc7c>
   14034:	add	sp, sp, #20
   14038:	pop	{pc}		; (ldr pc, [sp], #4)
   1403c:	push	{lr}		; (str lr, [sp, #-4]!)
   14040:	sub	sp, sp, #20
   14044:	mov	ip, #0
   14048:	str	ip, [sp, #12]
   1404c:	ldr	ip, [sp, #28]
   14050:	str	ip, [sp, #8]
   14054:	mov	ip, #1
   14058:	str	ip, [sp, #4]
   1405c:	ldr	ip, [sp, #24]
   14060:	str	ip, [sp]
   14064:	bl	18398 <argp_error@@Base+0x700>
   14068:	add	sp, sp, #20
   1406c:	pop	{pc}		; (ldr pc, [sp], #4)
   14070:	push	{r1, r2, r3}
   14074:	push	{lr}		; (str lr, [sp, #-4]!)
   14078:	sub	sp, sp, #8
   1407c:	add	r3, sp, #20
   14080:	str	r3, [sp, #4]
   14084:	ldr	r2, [sp, #16]
   14088:	ldr	r1, [sp, #12]
   1408c:	bl	1133c <ioctl@plt>
   14090:	add	sp, sp, #8
   14094:	pop	{lr}		; (ldr lr, [sp], #4)
   14098:	add	sp, sp, #12
   1409c:	bx	lr
   140a0:	push	{r4, r5, r6, lr}
   140a4:	subs	r4, r0, #0
   140a8:	beq	14120 <argp_parse@@Base+0xdb4>
   140ac:	mov	r1, #47	; 0x2f
   140b0:	mov	r0, r4
   140b4:	bl	114a4 <strrchr@plt>
   140b8:	cmp	r0, #0
   140bc:	addne	r5, r0, #1
   140c0:	moveq	r5, r4
   140c4:	sub	r3, r5, r4
   140c8:	cmp	r3, #6
   140cc:	ble	1410c <argp_parse@@Base+0xda0>
   140d0:	mov	r2, #7
   140d4:	ldr	r1, [pc, #96]	; 1413c <argp_parse@@Base+0xdd0>
   140d8:	sub	r0, r5, #7
   140dc:	bl	1154c <strncmp@plt>
   140e0:	cmp	r0, #0
   140e4:	bne	1410c <argp_parse@@Base+0xda0>
   140e8:	mov	r2, #3
   140ec:	ldr	r1, [pc, #76]	; 14140 <argp_parse@@Base+0xdd4>
   140f0:	mov	r0, r5
   140f4:	bl	1154c <strncmp@plt>
   140f8:	cmp	r0, #0
   140fc:	addeq	r4, r5, #3
   14100:	ldreq	r3, [pc, #60]	; 14144 <argp_parse@@Base+0xdd8>
   14104:	streq	r4, [r3]
   14108:	movne	r4, r5
   1410c:	ldr	r3, [pc, #52]	; 14148 <argp_parse@@Base+0xddc>
   14110:	str	r4, [r3]
   14114:	ldr	r3, [pc, #48]	; 1414c <argp_parse@@Base+0xde0>
   14118:	str	r4, [r3]
   1411c:	pop	{r4, r5, r6, pc}
   14120:	ldr	r3, [pc, #40]	; 14150 <argp_parse@@Base+0xde4>
   14124:	ldr	r3, [r3]
   14128:	mov	r2, #55	; 0x37
   1412c:	mov	r1, #1
   14130:	ldr	r0, [pc, #28]	; 14154 <argp_parse@@Base+0xde8>
   14134:	bl	11330 <fwrite@plt>
   14138:	bl	11558 <abort@plt>
   1413c:	ldrdeq	r9, [r1], -r4
   14140:	ldrdeq	r9, [r1], -ip
   14144:	andeq	fp, r2, r8, ror #5
   14148:	andeq	fp, r2, r0, lsl #25
   1414c:	andeq	fp, r2, ip, ror #5
   14150:	strdeq	fp, [r2], -r0
   14154:	muleq	r1, ip, ip
   14158:	push	{r4, r5, r6, lr}
   1415c:	sub	sp, sp, #32
   14160:	mov	r4, r0
   14164:	ldr	r5, [sp, #48]	; 0x30
   14168:	ldr	r6, [sp, #52]	; 0x34
   1416c:	cmp	r1, #0
   14170:	beq	141f8 <argp_parse@@Base+0xe8c>
   14174:	str	r3, [sp]
   14178:	mov	r3, r2
   1417c:	mov	r2, r1
   14180:	ldr	r1, [pc, #644]	; 1440c <argp_parse@@Base+0x10a0>
   14184:	bl	113fc <fprintf@plt>
   14188:	ldr	r3, [pc, #640]	; 14410 <argp_parse@@Base+0x10a4>
   1418c:	ldr	r2, [pc, #640]	; 14414 <argp_parse@@Base+0x10a8>
   14190:	ldr	r1, [pc, #640]	; 14418 <argp_parse@@Base+0x10ac>
   14194:	mov	r0, r4
   14198:	bl	113fc <fprintf@plt>
   1419c:	mov	r1, r4
   141a0:	mov	r0, #10
   141a4:	bl	114c8 <fputc@plt>
   141a8:	ldr	r2, [pc, #620]	; 1441c <argp_parse@@Base+0x10b0>
   141ac:	ldr	r1, [pc, #620]	; 14420 <argp_parse@@Base+0x10b4>
   141b0:	mov	r0, r4
   141b4:	bl	113fc <fprintf@plt>
   141b8:	mov	r1, r4
   141bc:	mov	r0, #10
   141c0:	bl	114c8 <fputc@plt>
   141c4:	cmp	r6, #9
   141c8:	ldrls	pc, [pc, r6, lsl #2]
   141cc:	b	143bc <argp_parse@@Base+0x1050>
   141d0:	andeq	r4, r1, r4, lsl r2
   141d4:	andeq	r4, r1, r4, lsl #4
   141d8:	andeq	r4, r1, ip, lsl r2
   141dc:	andeq	r4, r1, r4, lsr r2
   141e0:	andeq	r4, r1, r4, asr r2
   141e4:	andeq	r4, r1, ip, ror r2
   141e8:	andeq	r4, r1, ip, lsr #5
   141ec:	andeq	r4, r1, r4, ror #5
   141f0:	andeq	r4, r1, r4, lsr #6
   141f4:	andeq	r4, r1, ip, ror #6
   141f8:	ldr	r1, [pc, #548]	; 14424 <argp_parse@@Base+0x10b8>
   141fc:	bl	113fc <fprintf@plt>
   14200:	b	14188 <argp_parse@@Base+0xe1c>
   14204:	ldr	r2, [r5]
   14208:	ldr	r1, [pc, #536]	; 14428 <argp_parse@@Base+0x10bc>
   1420c:	mov	r0, r4
   14210:	bl	113fc <fprintf@plt>
   14214:	add	sp, sp, #32
   14218:	pop	{r4, r5, r6, pc}
   1421c:	ldr	r3, [r5, #4]
   14220:	ldr	r2, [r5]
   14224:	ldr	r1, [pc, #512]	; 1442c <argp_parse@@Base+0x10c0>
   14228:	mov	r0, r4
   1422c:	bl	113fc <fprintf@plt>
   14230:	b	14214 <argp_parse@@Base+0xea8>
   14234:	ldr	r3, [r5, #4]
   14238:	ldr	r2, [r5]
   1423c:	ldr	r1, [r5, #8]
   14240:	str	r1, [sp]
   14244:	ldr	r1, [pc, #484]	; 14430 <argp_parse@@Base+0x10c4>
   14248:	mov	r0, r4
   1424c:	bl	113fc <fprintf@plt>
   14250:	b	14214 <argp_parse@@Base+0xea8>
   14254:	ldr	r3, [r5, #4]
   14258:	ldr	r2, [r5]
   1425c:	ldr	r1, [r5, #12]
   14260:	str	r1, [sp, #4]
   14264:	ldr	r1, [r5, #8]
   14268:	str	r1, [sp]
   1426c:	ldr	r1, [pc, #448]	; 14434 <argp_parse@@Base+0x10c8>
   14270:	mov	r0, r4
   14274:	bl	113fc <fprintf@plt>
   14278:	b	14214 <argp_parse@@Base+0xea8>
   1427c:	ldr	r3, [r5, #4]
   14280:	ldr	r2, [r5]
   14284:	ldr	r1, [r5, #16]
   14288:	str	r1, [sp, #8]
   1428c:	ldr	r1, [r5, #12]
   14290:	str	r1, [sp, #4]
   14294:	ldr	r1, [r5, #8]
   14298:	str	r1, [sp]
   1429c:	ldr	r1, [pc, #404]	; 14438 <argp_parse@@Base+0x10cc>
   142a0:	mov	r0, r4
   142a4:	bl	113fc <fprintf@plt>
   142a8:	b	14214 <argp_parse@@Base+0xea8>
   142ac:	ldr	r3, [r5, #4]
   142b0:	ldr	r2, [r5]
   142b4:	ldr	r1, [r5, #20]
   142b8:	str	r1, [sp, #12]
   142bc:	ldr	r1, [r5, #16]
   142c0:	str	r1, [sp, #8]
   142c4:	ldr	r1, [r5, #12]
   142c8:	str	r1, [sp, #4]
   142cc:	ldr	r1, [r5, #8]
   142d0:	str	r1, [sp]
   142d4:	ldr	r1, [pc, #352]	; 1443c <argp_parse@@Base+0x10d0>
   142d8:	mov	r0, r4
   142dc:	bl	113fc <fprintf@plt>
   142e0:	b	14214 <argp_parse@@Base+0xea8>
   142e4:	ldr	r3, [r5, #4]
   142e8:	ldr	r2, [r5]
   142ec:	ldr	r1, [r5, #24]
   142f0:	str	r1, [sp, #16]
   142f4:	ldr	r1, [r5, #20]
   142f8:	str	r1, [sp, #12]
   142fc:	ldr	r1, [r5, #16]
   14300:	str	r1, [sp, #8]
   14304:	ldr	r1, [r5, #12]
   14308:	str	r1, [sp, #4]
   1430c:	ldr	r1, [r5, #8]
   14310:	str	r1, [sp]
   14314:	ldr	r1, [pc, #292]	; 14440 <argp_parse@@Base+0x10d4>
   14318:	mov	r0, r4
   1431c:	bl	113fc <fprintf@plt>
   14320:	b	14214 <argp_parse@@Base+0xea8>
   14324:	ldr	r3, [r5, #4]
   14328:	ldr	r2, [r5]
   1432c:	ldr	r1, [r5, #28]
   14330:	str	r1, [sp, #20]
   14334:	ldr	r1, [r5, #24]
   14338:	str	r1, [sp, #16]
   1433c:	ldr	r1, [r5, #20]
   14340:	str	r1, [sp, #12]
   14344:	ldr	r1, [r5, #16]
   14348:	str	r1, [sp, #8]
   1434c:	ldr	r1, [r5, #12]
   14350:	str	r1, [sp, #4]
   14354:	ldr	r1, [r5, #8]
   14358:	str	r1, [sp]
   1435c:	ldr	r1, [pc, #224]	; 14444 <argp_parse@@Base+0x10d8>
   14360:	mov	r0, r4
   14364:	bl	113fc <fprintf@plt>
   14368:	b	14214 <argp_parse@@Base+0xea8>
   1436c:	ldr	r3, [r5, #4]
   14370:	ldr	r2, [r5]
   14374:	ldr	r1, [r5, #32]
   14378:	str	r1, [sp, #24]
   1437c:	ldr	r1, [r5, #28]
   14380:	str	r1, [sp, #20]
   14384:	ldr	r1, [r5, #24]
   14388:	str	r1, [sp, #16]
   1438c:	ldr	r1, [r5, #20]
   14390:	str	r1, [sp, #12]
   14394:	ldr	r1, [r5, #16]
   14398:	str	r1, [sp, #8]
   1439c:	ldr	r1, [r5, #12]
   143a0:	str	r1, [sp, #4]
   143a4:	ldr	r1, [r5, #8]
   143a8:	str	r1, [sp]
   143ac:	ldr	r1, [pc, #148]	; 14448 <argp_parse@@Base+0x10dc>
   143b0:	mov	r0, r4
   143b4:	bl	113fc <fprintf@plt>
   143b8:	b	14214 <argp_parse@@Base+0xea8>
   143bc:	ldr	r3, [r5, #4]
   143c0:	ldr	r2, [r5]
   143c4:	ldr	r1, [r5, #32]
   143c8:	str	r1, [sp, #24]
   143cc:	ldr	r1, [r5, #28]
   143d0:	str	r1, [sp, #20]
   143d4:	ldr	r1, [r5, #24]
   143d8:	str	r1, [sp, #16]
   143dc:	ldr	r1, [r5, #20]
   143e0:	str	r1, [sp, #12]
   143e4:	ldr	r1, [r5, #16]
   143e8:	str	r1, [sp, #8]
   143ec:	ldr	r1, [r5, #12]
   143f0:	str	r1, [sp, #4]
   143f4:	ldr	r1, [r5, #8]
   143f8:	str	r1, [sp]
   143fc:	ldr	r1, [pc, #72]	; 1444c <argp_parse@@Base+0x10e0>
   14400:	mov	r0, r4
   14404:	bl	113fc <fprintf@plt>
   14408:	b	14214 <argp_parse@@Base+0xea8>
   1440c:	andeq	r9, r1, r0, ror #25
   14410:	andeq	r0, r0, r6, ror #15
   14414:	strdeq	r9, [r1], -r4
   14418:	strdeq	r9, [r1], -r4
   1441c:	strdeq	r9, [r1], -r8
   14420:	andeq	r9, r1, ip, lsl sp
   14424:	andeq	r9, r1, ip, ror #25
   14428:	andeq	r9, r1, r8, asr #27
   1442c:	ldrdeq	r9, [r1], -r8
   14430:	strdeq	r9, [r1], -r0
   14434:	andeq	r9, r1, ip, lsl #28
   14438:	andeq	r9, r1, ip, lsr #28
   1443c:	andeq	r9, r1, r0, asr lr
   14440:	andeq	r9, r1, r8, ror lr
   14444:	andeq	r9, r1, r4, lsr #29
   14448:	ldrdeq	r9, [r1], -r4
   1444c:	andeq	r9, r1, r8, lsl #30
   14450:	push	{r4, r5, lr}
   14454:	sub	sp, sp, #12
   14458:	ldr	r5, [sp, #24]
   1445c:	ldr	ip, [r5]
   14460:	cmp	ip, #0
   14464:	beq	14494 <argp_parse@@Base+0x1128>
   14468:	mov	lr, r5
   1446c:	mov	ip, #0
   14470:	add	ip, ip, #1
   14474:	ldr	r4, [lr, #4]!
   14478:	cmp	r4, #0
   1447c:	bne	14470 <argp_parse@@Base+0x1104>
   14480:	str	ip, [sp, #4]
   14484:	str	r5, [sp]
   14488:	bl	14158 <argp_parse@@Base+0xdec>
   1448c:	add	sp, sp, #12
   14490:	pop	{r4, r5, pc}
   14494:	mov	ip, #0
   14498:	b	14480 <argp_parse@@Base+0x1114>
   1449c:	push	{r4, r5, lr}
   144a0:	sub	sp, sp, #52	; 0x34
   144a4:	ldr	r4, [sp, #64]	; 0x40
   144a8:	sub	r4, r4, #4
   144ac:	add	r5, sp, #4
   144b0:	mov	ip, #0
   144b4:	ldr	lr, [r4, #4]!
   144b8:	str	lr, [r5, #4]!
   144bc:	cmp	lr, #0
   144c0:	beq	144d0 <argp_parse@@Base+0x1164>
   144c4:	add	ip, ip, #1
   144c8:	cmp	ip, #10
   144cc:	bne	144b4 <argp_parse@@Base+0x1148>
   144d0:	str	ip, [sp, #4]
   144d4:	add	ip, sp, #8
   144d8:	str	ip, [sp]
   144dc:	bl	14158 <argp_parse@@Base+0xdec>
   144e0:	add	sp, sp, #52	; 0x34
   144e4:	pop	{r4, r5, pc}
   144e8:	push	{r3}		; (str r3, [sp, #-4]!)
   144ec:	push	{lr}		; (str lr, [sp, #-4]!)
   144f0:	sub	sp, sp, #16
   144f4:	add	r3, sp, #24
   144f8:	str	r3, [sp, #12]
   144fc:	str	r3, [sp]
   14500:	ldr	r3, [sp, #20]
   14504:	bl	1449c <argp_parse@@Base+0x1130>
   14508:	add	sp, sp, #16
   1450c:	pop	{lr}		; (ldr lr, [sp], #4)
   14510:	add	sp, sp, #4
   14514:	bx	lr
   14518:	push	{r4, lr}
   1451c:	ldr	r3, [pc, #52]	; 14558 <argp_parse@@Base+0x11ec>
   14520:	ldr	r1, [r3]
   14524:	mov	r0, #10
   14528:	bl	114c8 <fputc@plt>
   1452c:	ldr	r1, [pc, #40]	; 1455c <argp_parse@@Base+0x11f0>
   14530:	ldr	r0, [pc, #40]	; 14560 <argp_parse@@Base+0x11f4>
   14534:	bl	11258 <printf@plt>
   14538:	ldr	r2, [pc, #36]	; 14564 <argp_parse@@Base+0x11f8>
   1453c:	ldr	r1, [pc, #36]	; 14568 <argp_parse@@Base+0x11fc>
   14540:	ldr	r0, [pc, #36]	; 1456c <argp_parse@@Base+0x1200>
   14544:	bl	11258 <printf@plt>
   14548:	ldr	r1, [pc, #32]	; 14570 <argp_parse@@Base+0x1204>
   1454c:	ldr	r0, [pc, #32]	; 14574 <argp_parse@@Base+0x1208>
   14550:	bl	11258 <printf@plt>
   14554:	pop	{r4, pc}
   14558:	strdeq	fp, [r2], -r4
   1455c:	andeq	r9, r1, r4, asr #30
   14560:	andeq	r9, r1, ip, asr pc
   14564:	andeq	r9, r1, r0, ror pc
   14568:	andeq	r9, r1, ip, lsl #25
   1456c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   14570:	andeq	r9, r1, ip, lsr #31
   14574:	andeq	r9, r1, ip, asr #31
   14578:	push	{r4, lr}
   1457c:	bl	14b98 <argp_parse@@Base+0x182c>
   14580:	cmp	r0, #0
   14584:	popne	{r4, pc}
   14588:	bl	14b1c <argp_parse@@Base+0x17b0>
   1458c:	push	{r4, lr}
   14590:	bl	14b98 <argp_parse@@Base+0x182c>
   14594:	cmp	r0, #0
   14598:	popne	{r4, pc}
   1459c:	bl	14b1c <argp_parse@@Base+0x17b0>
   145a0:	push	{r4, lr}
   145a4:	bl	14578 <argp_parse@@Base+0x120c>
   145a8:	pop	{r4, pc}
   145ac:	push	{r4, r5, r6, lr}
   145b0:	mov	r5, r0
   145b4:	mov	r4, r1
   145b8:	bl	14bc8 <argp_parse@@Base+0x185c>
   145bc:	cmp	r0, #0
   145c0:	popne	{r4, r5, r6, pc}
   145c4:	adds	r4, r4, #0
   145c8:	movne	r4, #1
   145cc:	cmp	r5, #0
   145d0:	orreq	r4, r4, #1
   145d4:	cmp	r4, #0
   145d8:	popeq	{r4, r5, r6, pc}
   145dc:	bl	14b1c <argp_parse@@Base+0x17b0>
   145e0:	push	{r4, lr}
   145e4:	cmp	r1, #0
   145e8:	orreq	r1, r1, #1
   145ec:	bl	14bc8 <argp_parse@@Base+0x185c>
   145f0:	cmp	r0, #0
   145f4:	popne	{r4, pc}
   145f8:	bl	14b1c <argp_parse@@Base+0x17b0>
   145fc:	push	{r4, r5, r6, lr}
   14600:	mov	r6, r0
   14604:	mov	r5, r1
   14608:	mov	r4, r2
   1460c:	bl	189ac <argp_error@@Base+0xd14>
   14610:	cmp	r0, #0
   14614:	popne	{r4, r5, r6, pc}
   14618:	cmp	r6, #0
   1461c:	beq	1462c <argp_parse@@Base+0x12c0>
   14620:	cmp	r5, #0
   14624:	cmpne	r4, #0
   14628:	popeq	{r4, r5, r6, pc}
   1462c:	bl	14b1c <argp_parse@@Base+0x17b0>
   14630:	push	{r4, lr}
   14634:	bl	145fc <argp_parse@@Base+0x1290>
   14638:	pop	{r4, pc}
   1463c:	push	{r4, lr}
   14640:	mov	ip, r1
   14644:	mov	r3, r2
   14648:	cmp	r2, #0
   1464c:	cmpne	r1, #0
   14650:	moveq	r3, #1
   14654:	moveq	ip, r3
   14658:	mov	r2, r3
   1465c:	mov	r1, ip
   14660:	bl	189ac <argp_error@@Base+0xd14>
   14664:	cmp	r0, #0
   14668:	popne	{r4, pc}
   1466c:	bl	14b1c <argp_parse@@Base+0x17b0>
   14670:	push	{r4, lr}
   14674:	mov	r2, r1
   14678:	mov	r1, r0
   1467c:	mov	r0, #0
   14680:	bl	145fc <argp_parse@@Base+0x1290>
   14684:	pop	{r4, pc}
   14688:	push	{r4, lr}
   1468c:	mov	r2, r1
   14690:	mov	r1, r0
   14694:	mov	r0, #0
   14698:	bl	1463c <argp_parse@@Base+0x12d0>
   1469c:	pop	{r4, pc}
   146a0:	push	{r4, r5, r6, r7, r8, lr}
   146a4:	mov	r5, r1
   146a8:	mov	r6, r2
   146ac:	ldr	r4, [r1]
   146b0:	subs	r7, r0, #0
   146b4:	beq	146d0 <argp_parse@@Base+0x1364>
   146b8:	lsr	r2, r4, #1
   146bc:	add	r3, r2, #1
   146c0:	mvn	r3, r3
   146c4:	cmp	r4, r3
   146c8:	bls	146f4 <argp_parse@@Base+0x1388>
   146cc:	bl	14b1c <argp_parse@@Base+0x17b0>
   146d0:	cmp	r4, #0
   146d4:	bne	146fc <argp_parse@@Base+0x1390>
   146d8:	mov	r1, r2
   146dc:	mov	r0, #64	; 0x40
   146e0:	bl	19184 <argp_error@@Base+0x14ec>
   146e4:	cmp	r0, #0
   146e8:	movne	r4, r0
   146ec:	addeq	r4, r0, #1
   146f0:	b	146fc <argp_parse@@Base+0x1390>
   146f4:	add	r4, r4, #1
   146f8:	add	r4, r4, r2
   146fc:	mov	r2, r6
   14700:	mov	r1, r4
   14704:	mov	r0, r7
   14708:	bl	145fc <argp_parse@@Base+0x1290>
   1470c:	str	r4, [r5]
   14710:	pop	{r4, r5, r6, r7, r8, pc}
   14714:	push	{r4, lr}
   14718:	mov	r2, #1
   1471c:	bl	146a0 <argp_parse@@Base+0x1334>
   14720:	pop	{r4, pc}
   14724:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14728:	sub	sp, sp, #12
   1472c:	mov	fp, r0
   14730:	mov	sl, r1
   14734:	mov	r9, r2
   14738:	mov	r7, r3
   1473c:	ldr	r6, [sp, #48]	; 0x30
   14740:	ldr	r5, [r1]
   14744:	asrs	r4, r5, #1
   14748:	bmi	148a4 <argp_parse@@Base+0x1538>
   1474c:	cmp	r5, #0
   14750:	blt	148b8 <argp_parse@@Base+0x154c>
   14754:	mvn	r3, #-2147483648	; 0x80000000
   14758:	sub	r3, r3, r4
   1475c:	cmp	r5, r3
   14760:	movle	r3, #0
   14764:	movgt	r3, #1
   14768:	cmp	r3, #0
   1476c:	addeq	r4, r4, r5
   14770:	mvnne	r4, #-2147483648	; 0x80000000
   14774:	mvn	r8, r7
   14778:	lsr	r8, r8, #31
   1477c:	cmp	r7, r4
   14780:	movge	r3, #0
   14784:	andlt	r3, r8, #1
   14788:	cmp	r3, #0
   1478c:	movne	r4, r7
   14790:	cmp	r6, #0
   14794:	blt	148cc <argp_parse@@Base+0x1560>
   14798:	cmp	r6, #0
   1479c:	beq	14978 <argp_parse@@Base+0x160c>
   147a0:	cmp	r4, #0
   147a4:	blt	14928 <argp_parse@@Base+0x15bc>
   147a8:	mov	r1, r6
   147ac:	mvn	r0, #-2147483648	; 0x80000000
   147b0:	bl	19390 <argp_error@@Base+0x16f8>
   147b4:	cmp	r0, r4
   147b8:	movge	r0, #0
   147bc:	movlt	r0, #1
   147c0:	cmp	r0, #0
   147c4:	mvnne	r3, #-2147483648	; 0x80000000
   147c8:	strne	r3, [sp, #4]
   147cc:	beq	14960 <argp_parse@@Base+0x15f4>
   147d0:	mov	r1, r6
   147d4:	ldr	r0, [sp, #4]
   147d8:	bl	19390 <argp_error@@Base+0x16f8>
   147dc:	mov	r4, r0
   147e0:	mov	r1, r6
   147e4:	ldr	r0, [sp, #4]
   147e8:	bl	195b0 <argp_error@@Base+0x1918>
   147ec:	ldr	r3, [sp, #4]
   147f0:	sub	r1, r3, r1
   147f4:	cmp	fp, #0
   147f8:	moveq	r3, #0
   147fc:	streq	r3, [sl]
   14800:	sub	r3, r4, r5
   14804:	cmp	r3, r9
   14808:	bge	14890 <argp_parse@@Base+0x1524>
   1480c:	cmp	r9, #0
   14810:	blt	14984 <argp_parse@@Base+0x1618>
   14814:	cmp	r5, #0
   14818:	blt	14998 <argp_parse@@Base+0x162c>
   1481c:	mvn	r3, #-2147483648	; 0x80000000
   14820:	sub	r3, r3, r9
   14824:	cmp	r5, r3
   14828:	movle	r3, #0
   1482c:	movgt	r3, #1
   14830:	cmp	r3, #0
   14834:	bne	14a40 <argp_parse@@Base+0x16d4>
   14838:	add	r5, r5, r9
   1483c:	mov	r4, r5
   14840:	cmp	r7, r5
   14844:	movge	r7, #0
   14848:	andlt	r7, r8, #1
   1484c:	cmp	r7, #0
   14850:	bne	14a40 <argp_parse@@Base+0x16d4>
   14854:	cmp	r6, #0
   14858:	blt	149ac <argp_parse@@Base+0x1640>
   1485c:	cmp	r6, #0
   14860:	beq	1488c <argp_parse@@Base+0x1520>
   14864:	cmp	r5, #0
   14868:	blt	14a08 <argp_parse@@Base+0x169c>
   1486c:	mov	r1, r6
   14870:	mvn	r0, #-2147483648	; 0x80000000
   14874:	bl	19390 <argp_error@@Base+0x16f8>
   14878:	cmp	r5, r0
   1487c:	movle	r0, #0
   14880:	movgt	r0, #1
   14884:	cmp	r0, #0
   14888:	bne	14a40 <argp_parse@@Base+0x16d4>
   1488c:	mul	r1, r5, r6
   14890:	mov	r0, fp
   14894:	bl	145ac <argp_parse@@Base+0x1240>
   14898:	str	r4, [sl]
   1489c:	add	sp, sp, #12
   148a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148a4:	rsb	r3, r4, #-2147483648	; 0x80000000
   148a8:	cmp	r5, r3
   148ac:	movge	r3, #0
   148b0:	movlt	r3, #1
   148b4:	b	14768 <argp_parse@@Base+0x13fc>
   148b8:	rsb	r3, r5, #-2147483648	; 0x80000000
   148bc:	cmp	r4, r3
   148c0:	movge	r3, #0
   148c4:	movlt	r3, #1
   148c8:	b	14768 <argp_parse@@Base+0x13fc>
   148cc:	cmp	r4, #0
   148d0:	blt	148f8 <argp_parse@@Base+0x158c>
   148d4:	cmn	r6, #1
   148d8:	beq	14914 <argp_parse@@Base+0x15a8>
   148dc:	mov	r1, r6
   148e0:	mov	r0, #-2147483648	; 0x80000000
   148e4:	bl	19390 <argp_error@@Base+0x16f8>
   148e8:	cmp	r0, r4
   148ec:	movge	r0, #0
   148f0:	movlt	r0, #1
   148f4:	b	147c0 <argp_parse@@Base+0x1454>
   148f8:	mov	r1, r6
   148fc:	mvn	r0, #-2147483648	; 0x80000000
   14900:	bl	19390 <argp_error@@Base+0x16f8>
   14904:	cmp	r0, r4
   14908:	movle	r0, #0
   1490c:	movgt	r0, #1
   14910:	b	147c0 <argp_parse@@Base+0x1454>
   14914:	add	r0, r4, #-2147483648	; 0x80000000
   14918:	cmp	r0, #0
   1491c:	movle	r0, #0
   14920:	movgt	r0, #1
   14924:	b	147c0 <argp_parse@@Base+0x1454>
   14928:	cmn	r4, #1
   1492c:	beq	1494c <argp_parse@@Base+0x15e0>
   14930:	mov	r1, r4
   14934:	mov	r0, #-2147483648	; 0x80000000
   14938:	bl	19390 <argp_error@@Base+0x16f8>
   1493c:	cmp	r6, r0
   14940:	movle	r0, #0
   14944:	movgt	r0, #1
   14948:	b	147c0 <argp_parse@@Base+0x1454>
   1494c:	add	r0, r6, #-2147483648	; 0x80000000
   14950:	cmp	r0, #0
   14954:	movle	r0, #0
   14958:	movgt	r0, #1
   1495c:	b	147c0 <argp_parse@@Base+0x1454>
   14960:	mul	r1, r6, r4
   14964:	cmp	r1, #63	; 0x3f
   14968:	movle	r3, #64	; 0x40
   1496c:	strle	r3, [sp, #4]
   14970:	bgt	147f4 <argp_parse@@Base+0x1488>
   14974:	b	147d0 <argp_parse@@Base+0x1464>
   14978:	mov	r3, #64	; 0x40
   1497c:	str	r3, [sp, #4]
   14980:	b	147d0 <argp_parse@@Base+0x1464>
   14984:	rsb	r3, r9, #-2147483648	; 0x80000000
   14988:	cmp	r5, r3
   1498c:	movge	r3, #0
   14990:	movlt	r3, #1
   14994:	b	14830 <argp_parse@@Base+0x14c4>
   14998:	rsb	r3, r5, #-2147483648	; 0x80000000
   1499c:	cmp	r9, r3
   149a0:	movge	r3, #0
   149a4:	movlt	r3, #1
   149a8:	b	14830 <argp_parse@@Base+0x14c4>
   149ac:	cmp	r5, #0
   149b0:	blt	149d8 <argp_parse@@Base+0x166c>
   149b4:	cmn	r6, #1
   149b8:	beq	149f4 <argp_parse@@Base+0x1688>
   149bc:	mov	r1, r6
   149c0:	mov	r0, #-2147483648	; 0x80000000
   149c4:	bl	19390 <argp_error@@Base+0x16f8>
   149c8:	cmp	r5, r0
   149cc:	movle	r0, #0
   149d0:	movgt	r0, #1
   149d4:	b	14884 <argp_parse@@Base+0x1518>
   149d8:	mov	r1, r6
   149dc:	mvn	r0, #-2147483648	; 0x80000000
   149e0:	bl	19390 <argp_error@@Base+0x16f8>
   149e4:	cmp	r5, r0
   149e8:	movge	r0, #0
   149ec:	movlt	r0, #1
   149f0:	b	14884 <argp_parse@@Base+0x1518>
   149f4:	add	r0, r5, #-2147483648	; 0x80000000
   149f8:	cmp	r0, #0
   149fc:	movle	r0, #0
   14a00:	movgt	r0, #1
   14a04:	b	14884 <argp_parse@@Base+0x1518>
   14a08:	cmn	r5, #1
   14a0c:	beq	14a2c <argp_parse@@Base+0x16c0>
   14a10:	mov	r1, r5
   14a14:	mov	r0, #-2147483648	; 0x80000000
   14a18:	bl	19390 <argp_error@@Base+0x16f8>
   14a1c:	cmp	r6, r0
   14a20:	movle	r0, #0
   14a24:	movgt	r0, #1
   14a28:	b	14884 <argp_parse@@Base+0x1518>
   14a2c:	add	r0, r6, #-2147483648	; 0x80000000
   14a30:	cmp	r0, #0
   14a34:	movle	r0, #0
   14a38:	movgt	r0, #1
   14a3c:	b	14884 <argp_parse@@Base+0x1518>
   14a40:	bl	14b1c <argp_parse@@Base+0x17b0>
   14a44:	push	{r4, lr}
   14a48:	bl	14b48 <argp_parse@@Base+0x17dc>
   14a4c:	cmp	r0, #0
   14a50:	popne	{r4, pc}
   14a54:	bl	14b1c <argp_parse@@Base+0x17b0>
   14a58:	push	{r4, lr}
   14a5c:	mov	r1, #1
   14a60:	bl	14a44 <argp_parse@@Base+0x16d8>
   14a64:	pop	{r4, pc}
   14a68:	push	{r4, lr}
   14a6c:	bl	14b48 <argp_parse@@Base+0x17dc>
   14a70:	cmp	r0, #0
   14a74:	popne	{r4, pc}
   14a78:	bl	14b1c <argp_parse@@Base+0x17b0>
   14a7c:	push	{r4, lr}
   14a80:	mov	r1, #1
   14a84:	bl	14a68 <argp_parse@@Base+0x16fc>
   14a88:	pop	{r4, pc}
   14a8c:	push	{r4, r5, r6, lr}
   14a90:	mov	r5, r0
   14a94:	mov	r4, r1
   14a98:	mov	r0, r1
   14a9c:	bl	14578 <argp_parse@@Base+0x120c>
   14aa0:	mov	r2, r4
   14aa4:	mov	r1, r5
   14aa8:	bl	112b8 <memcpy@plt>
   14aac:	pop	{r4, r5, r6, pc}
   14ab0:	push	{r4, r5, r6, lr}
   14ab4:	mov	r5, r0
   14ab8:	mov	r4, r1
   14abc:	mov	r0, r1
   14ac0:	bl	1458c <argp_parse@@Base+0x1220>
   14ac4:	mov	r2, r4
   14ac8:	mov	r1, r5
   14acc:	bl	112b8 <memcpy@plt>
   14ad0:	pop	{r4, r5, r6, pc}
   14ad4:	push	{r4, r5, r6, lr}
   14ad8:	mov	r5, r0
   14adc:	mov	r4, r1
   14ae0:	add	r0, r1, #1
   14ae4:	bl	1458c <argp_parse@@Base+0x1220>
   14ae8:	mov	r2, #0
   14aec:	strb	r2, [r0, r4]
   14af0:	mov	r2, r4
   14af4:	mov	r1, r5
   14af8:	bl	112b8 <memcpy@plt>
   14afc:	pop	{r4, r5, r6, pc}
   14b00:	push	{r4, lr}
   14b04:	mov	r4, r0
   14b08:	bl	113e4 <strlen@plt>
   14b0c:	add	r1, r0, #1
   14b10:	mov	r0, r4
   14b14:	bl	14a8c <argp_parse@@Base+0x1720>
   14b18:	pop	{r4, pc}
   14b1c:	push	{r4, lr}
   14b20:	ldr	r3, [pc, #20]	; 14b3c <argp_parse@@Base+0x17d0>
   14b24:	ldr	r0, [r3]
   14b28:	ldr	r3, [pc, #16]	; 14b40 <argp_parse@@Base+0x17d4>
   14b2c:	ldr	r2, [pc, #16]	; 14b44 <argp_parse@@Base+0x17d8>
   14b30:	mov	r1, #0
   14b34:	bl	11354 <error@plt>
   14b38:	bl	11558 <abort@plt>
   14b3c:	ldrdeq	fp, [r2], -r0
   14b40:	andeq	sl, r1, r4, lsr #32
   14b44:	andeq	r9, r1, ip, lsl #14
   14b48:	push	{r4, lr}
   14b4c:	mov	r2, r0
   14b50:	mov	r3, r1
   14b54:	cmp	r1, #0
   14b58:	cmpne	r0, #0
   14b5c:	moveq	r3, #1
   14b60:	moveq	r2, r3
   14b64:	umull	r0, r1, r2, r3
   14b68:	cmp	r0, #0
   14b6c:	cmpge	r1, #0
   14b70:	bne	14b84 <argp_parse@@Base+0x1818>
   14b74:	mov	r1, r3
   14b78:	mov	r0, r2
   14b7c:	bl	11204 <calloc@plt>
   14b80:	pop	{r4, pc}
   14b84:	bl	11408 <__errno_location@plt>
   14b88:	mov	r3, #12
   14b8c:	str	r3, [r0]
   14b90:	mov	r0, #0
   14b94:	pop	{r4, pc}
   14b98:	push	{r4, lr}
   14b9c:	cmp	r0, #0
   14ba0:	moveq	r0, #1
   14ba4:	cmp	r0, #0
   14ba8:	blt	14bb4 <argp_parse@@Base+0x1848>
   14bac:	bl	11384 <malloc@plt>
   14bb0:	pop	{r4, pc}
   14bb4:	bl	11408 <__errno_location@plt>
   14bb8:	mov	r3, #12
   14bbc:	str	r3, [r0]
   14bc0:	mov	r0, #0
   14bc4:	pop	{r4, pc}
   14bc8:	push	{r4, lr}
   14bcc:	cmp	r0, #0
   14bd0:	beq	14bec <argp_parse@@Base+0x1880>
   14bd4:	cmp	r1, #0
   14bd8:	beq	14bf8 <argp_parse@@Base+0x188c>
   14bdc:	cmp	r1, #0
   14be0:	blt	14c04 <argp_parse@@Base+0x1898>
   14be4:	bl	11300 <realloc@plt>
   14be8:	pop	{r4, pc}
   14bec:	mov	r0, r1
   14bf0:	bl	14b98 <argp_parse@@Base+0x182c>
   14bf4:	pop	{r4, pc}
   14bf8:	bl	13f60 <argp_parse@@Base+0xbf4>
   14bfc:	mov	r0, #0
   14c00:	pop	{r4, pc}
   14c04:	bl	11408 <__errno_location@plt>
   14c08:	mov	r3, #12
   14c0c:	str	r3, [r0]
   14c10:	mov	r0, #0
   14c14:	pop	{r4, pc}
   14c18:	ldr	r3, [r0]
   14c1c:	ldr	r2, [r0, #4]
   14c20:	cmp	r2, #0
   14c24:	beq	14c60 <argp_parse@@Base+0x18f4>
   14c28:	add	r3, r3, #24
   14c2c:	b	14c3c <argp_parse@@Base+0x18d0>
   14c30:	add	r3, r3, #24
   14c34:	subs	r2, r2, #1
   14c38:	beq	14c58 <argp_parse@@Base+0x18ec>
   14c3c:	ldr	r0, [r3, #-24]	; 0xffffffe8
   14c40:	cmp	r0, #0
   14c44:	beq	14c30 <argp_parse@@Base+0x18c4>
   14c48:	ldr	r1, [r3, #-12]
   14c4c:	tst	r1, #2
   14c50:	bne	14c30 <argp_parse@@Base+0x18c4>
   14c54:	bx	lr
   14c58:	mov	r0, #0
   14c5c:	bx	lr
   14c60:	mov	r0, #0
   14c64:	bx	lr
   14c68:	ldr	r2, [r0, #8]
   14c6c:	cmp	r2, #0
   14c70:	beq	14c7c <argp_parse@@Base+0x1910>
   14c74:	mov	r0, #0
   14c78:	bx	lr
   14c7c:	ldr	r2, [r1, #8]
   14c80:	cmp	r2, #0
   14c84:	bne	14c74 <argp_parse@@Base+0x1908>
   14c88:	ldr	r2, [r0, #12]
   14c8c:	ldr	r1, [r1, #12]
   14c90:	orr	r2, r2, r1
   14c94:	tst	r2, #16
   14c98:	ldreq	r2, [r3]
   14c9c:	addeq	r1, r2, #1
   14ca0:	streq	r1, [r3]
   14ca4:	ldreq	r3, [r0, #4]
   14ca8:	strbeq	r3, [r2]
   14cac:	b	14c74 <argp_parse@@Base+0x1908>
   14cb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14cb4:	sub	sp, sp, #12
   14cb8:	ldr	r4, [r0]
   14cbc:	ldr	r9, [r0, #8]
   14cc0:	ldr	r5, [r0, #4]
   14cc4:	cmp	r5, #0
   14cc8:	beq	14d1c <argp_parse@@Base+0x19b0>
   14ccc:	str	r3, [sp, #4]
   14cd0:	str	r2, [sp]
   14cd4:	mov	fp, r1
   14cd8:	mov	sl, r4
   14cdc:	mov	r8, #0
   14ce0:	b	14d5c <argp_parse@@Base+0x19f0>
   14ce4:	and	r3, r6, #4
   14ce8:	cmp	r3, #0
   14cec:	moveq	sl, r4
   14cf0:	tst	r6, #2
   14cf4:	beq	14d00 <argp_parse@@Base+0x1994>
   14cf8:	add	r9, r9, #1
   14cfc:	b	14d38 <argp_parse@@Base+0x19cc>
   14d00:	ldr	r3, [sp, #4]
   14d04:	ldr	r2, [sp]
   14d08:	mov	r1, sl
   14d0c:	mov	r0, r4
   14d10:	blx	fp
   14d14:	mov	r8, r0
   14d18:	b	14cf8 <argp_parse@@Base+0x198c>
   14d1c:	mov	r8, #0
   14d20:	mov	r0, r8
   14d24:	add	sp, sp, #12
   14d28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d2c:	ldrb	r3, [r9]
   14d30:	cmp	r3, r7
   14d34:	beq	14ce4 <argp_parse@@Base+0x1978>
   14d38:	add	r4, r4, #24
   14d3c:	subs	r5, r5, #1
   14d40:	movne	r3, #1
   14d44:	moveq	r3, #0
   14d48:	cmp	r8, #0
   14d4c:	movne	r3, #0
   14d50:	andeq	r3, r3, #1
   14d54:	cmp	r3, #0
   14d58:	beq	14d20 <argp_parse@@Base+0x19b4>
   14d5c:	ldr	r6, [r4, #12]
   14d60:	tst	r6, #8
   14d64:	bne	14d38 <argp_parse@@Base+0x19cc>
   14d68:	ldr	r7, [r4, #4]
   14d6c:	sub	r3, r7, #1
   14d70:	cmp	r3, #254	; 0xfe
   14d74:	bhi	14d38 <argp_parse@@Base+0x19cc>
   14d78:	bl	113cc <__ctype_b_loc@plt>
   14d7c:	ldr	r2, [r0]
   14d80:	lsl	r3, r7, #1
   14d84:	ldrh	r3, [r2, r3]
   14d88:	tst	r3, #16384	; 0x4000
   14d8c:	bne	14d2c <argp_parse@@Base+0x19c0>
   14d90:	b	14d38 <argp_parse@@Base+0x19cc>
   14d94:	push	{r4, r5, r6, lr}
   14d98:	ldr	r4, [r0, #12]
   14d9c:	ands	r4, r4, #8
   14da0:	movne	r4, #0
   14da4:	bne	14dd4 <argp_parse@@Base+0x1a68>
   14da8:	ldr	r5, [r0, #4]
   14dac:	sub	r3, r5, #1
   14db0:	cmp	r3, #254	; 0xfe
   14db4:	bhi	14dd4 <argp_parse@@Base+0x1a68>
   14db8:	bl	113cc <__ctype_b_loc@plt>
   14dbc:	ldr	r2, [r0]
   14dc0:	lsl	r3, r5, #1
   14dc4:	ldrh	r3, [r2, r3]
   14dc8:	and	r3, r3, #16384	; 0x4000
   14dcc:	cmp	r3, #0
   14dd0:	movne	r4, r5
   14dd4:	mov	r0, r4
   14dd8:	pop	{r4, r5, r6, pc}
   14ddc:	push	{r4, lr}
   14de0:	mov	r4, r0
   14de4:	bl	113cc <__ctype_b_loc@plt>
   14de8:	b	14df4 <argp_parse@@Base+0x1a88>
   14dec:	add	r3, r3, #1
   14df0:	str	r3, [r4]
   14df4:	ldr	r3, [r4]
   14df8:	ldrb	r2, [r3]
   14dfc:	ldr	ip, [r0]
   14e00:	lsl	r1, r2, #1
   14e04:	ldrh	r1, [ip, r1]
   14e08:	tst	r1, #8192	; 0x2000
   14e0c:	bne	14dec <argp_parse@@Base+0x1a80>
   14e10:	subs	ip, r2, #45	; 0x2d
   14e14:	movne	ip, #1
   14e18:	cmp	r2, #0
   14e1c:	beq	14e50 <argp_parse@@Base+0x1ae4>
   14e20:	tst	r1, #8
   14e24:	bne	14e50 <argp_parse@@Base+0x1ae4>
   14e28:	add	r3, r3, #1
   14e2c:	str	r3, [r4]
   14e30:	ldrb	r2, [r3]
   14e34:	cmp	r2, #0
   14e38:	beq	14e50 <argp_parse@@Base+0x1ae4>
   14e3c:	ldr	r1, [r0]
   14e40:	lsl	r2, r2, #1
   14e44:	ldrh	r2, [r1, r2]
   14e48:	tst	r2, #8
   14e4c:	beq	14e28 <argp_parse@@Base+0x1abc>
   14e50:	mov	r0, ip
   14e54:	pop	{r4, pc}
   14e58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e5c:	add	fp, sp, #32
   14e60:	sub	sp, sp, #12
   14e64:	ldr	r5, [r0, #4]
   14e68:	cmp	r5, #0
   14e6c:	bne	14e78 <argp_parse@@Base+0x1b0c>
   14e70:	sub	sp, fp, #32
   14e74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e78:	mov	r9, r1
   14e7c:	mov	r6, r0
   14e80:	ldr	r0, [r0, #8]
   14e84:	bl	113e4 <strlen@plt>
   14e88:	add	r3, r0, #15
   14e8c:	bic	r3, r3, #7
   14e90:	sub	sp, sp, r3
   14e94:	mov	sl, sp
   14e98:	sub	r7, fp, #36	; 0x24
   14e9c:	str	sp, [r7, #-4]!
   14ea0:	ldr	r4, [r6]
   14ea4:	ldr	r8, [pc, #336]	; 14ffc <argp_parse@@Base+0x1c90>
   14ea8:	ldr	r2, [r4, #20]
   14eac:	mov	r3, r7
   14eb0:	ldr	r2, [r2, #24]
   14eb4:	mov	r1, r8
   14eb8:	mov	r0, r4
   14ebc:	bl	14cb0 <argp_parse@@Base+0x1944>
   14ec0:	add	r4, r4, #28
   14ec4:	subs	r5, r5, #1
   14ec8:	bne	14ea8 <argp_parse@@Base+0x1b3c>
   14ecc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14ed0:	cmp	sl, r3
   14ed4:	bcc	14f2c <argp_parse@@Base+0x1bc0>
   14ed8:	ldr	r4, [r6]
   14edc:	ldr	r5, [r6, #4]
   14ee0:	cmp	r5, #0
   14ee4:	beq	14e70 <argp_parse@@Base+0x1b04>
   14ee8:	ldr	r7, [pc, #272]	; 15000 <argp_parse@@Base+0x1c94>
   14eec:	ldr	r2, [r4, #20]
   14ef0:	mov	r3, r9
   14ef4:	ldr	r2, [r2, #24]
   14ef8:	mov	r1, r7
   14efc:	mov	r0, r4
   14f00:	bl	14cb0 <argp_parse@@Base+0x1944>
   14f04:	add	r4, r4, #28
   14f08:	subs	r5, r5, #1
   14f0c:	bne	14eec <argp_parse@@Base+0x1b80>
   14f10:	ldr	r7, [r6]
   14f14:	ldr	r8, [r6, #4]
   14f18:	cmp	r8, #0
   14f1c:	beq	14e70 <argp_parse@@Base+0x1b04>
   14f20:	add	r7, r7, #28
   14f24:	ldr	sl, [pc, #216]	; 15004 <argp_parse@@Base+0x1c98>
   14f28:	b	14fe4 <argp_parse@@Base+0x1c78>
   14f2c:	add	r2, r3, #1
   14f30:	str	r2, [fp, #-40]	; 0xffffffd8
   14f34:	mov	r2, #0
   14f38:	strb	r2, [r3]
   14f3c:	mov	r2, sl
   14f40:	ldr	r1, [pc, #192]	; 15008 <argp_parse@@Base+0x1c9c>
   14f44:	mov	r0, r9
   14f48:	bl	19104 <argp_error@@Base+0x146c>
   14f4c:	b	14ed8 <argp_parse@@Base+0x1b6c>
   14f50:	tst	r1, #16
   14f54:	bne	14f78 <argp_parse@@Base+0x1c0c>
   14f58:	ldr	r3, [r6, #8]
   14f5c:	cmp	r3, #0
   14f60:	beq	14fc8 <argp_parse@@Base+0x1c5c>
   14f64:	tst	r1, #1
   14f68:	ldrne	r1, [pc, #156]	; 1500c <argp_parse@@Base+0x1ca0>
   14f6c:	moveq	r1, sl
   14f70:	mov	r0, r9
   14f74:	bl	19104 <argp_error@@Base+0x146c>
   14f78:	add	r4, r4, #24
   14f7c:	subs	r5, r5, #1
   14f80:	beq	14fd8 <argp_parse@@Base+0x1c6c>
   14f84:	ldr	r2, [r4]
   14f88:	cmp	r2, #0
   14f8c:	beq	14f78 <argp_parse@@Base+0x1c0c>
   14f90:	ldr	r1, [r4, #12]
   14f94:	and	r3, r1, #4
   14f98:	cmp	r3, #0
   14f9c:	moveq	r6, r4
   14fa0:	tst	r1, #2
   14fa4:	bne	14f78 <argp_parse@@Base+0x1c0c>
   14fa8:	ldr	r3, [r4, #8]
   14fac:	ldr	r0, [r6, #12]
   14fb0:	orr	r1, r1, r0
   14fb4:	cmp	r3, #0
   14fb8:	beq	14f50 <argp_parse@@Base+0x1be4>
   14fbc:	tst	r1, #16
   14fc0:	beq	14f64 <argp_parse@@Base+0x1bf8>
   14fc4:	b	14f78 <argp_parse@@Base+0x1c0c>
   14fc8:	ldr	r1, [pc, #64]	; 15010 <argp_parse@@Base+0x1ca4>
   14fcc:	mov	r0, r9
   14fd0:	bl	19104 <argp_error@@Base+0x146c>
   14fd4:	b	14f78 <argp_parse@@Base+0x1c0c>
   14fd8:	add	r7, r7, #28
   14fdc:	subs	r8, r8, #1
   14fe0:	beq	14e70 <argp_parse@@Base+0x1b04>
   14fe4:	ldr	r4, [r7, #-28]	; 0xffffffe4
   14fe8:	ldr	r5, [r7, #-24]	; 0xffffffe8
   14fec:	cmp	r5, #0
   14ff0:	beq	14fd8 <argp_parse@@Base+0x1c6c>
   14ff4:	mov	r6, r4
   14ff8:	b	14f84 <argp_parse@@Base+0x1c18>
   14ffc:	andeq	r4, r1, r8, ror #24
   15000:	andeq	r5, r1, r8, lsr #5
   15004:	strdeq	sl, [r1], -r8
   15008:	andeq	sl, r1, r0, ror #1
   1500c:	andeq	sl, r1, r8, ror #1
   15010:	andeq	sl, r1, r4, lsl #2
   15014:	push	{r4, r5, r6, lr}
   15018:	mov	r5, r0
   1501c:	ldr	r0, [r0, #12]
   15020:	cmp	r0, #0
   15024:	beq	1503c <argp_parse@@Base+0x1cd0>
   15028:	ldr	r4, [r0, #24]
   1502c:	bl	13f60 <argp_parse@@Base+0xbf4>
   15030:	mov	r0, r4
   15034:	cmp	r4, #0
   15038:	bne	15028 <argp_parse@@Base+0x1cbc>
   1503c:	ldr	r3, [r5, #4]
   15040:	cmp	r3, #0
   15044:	bne	15054 <argp_parse@@Base+0x1ce8>
   15048:	mov	r0, r5
   1504c:	bl	13f60 <argp_parse@@Base+0xbf4>
   15050:	pop	{r4, r5, r6, pc}
   15054:	ldr	r0, [r5]
   15058:	bl	13f60 <argp_parse@@Base+0xbf4>
   1505c:	ldr	r0, [r5, #8]
   15060:	bl	13f60 <argp_parse@@Base+0xbf4>
   15064:	b	15048 <argp_parse@@Base+0x1cdc>
   15068:	push	{r4, r5, r6, r7, r8, lr}
   1506c:	mov	r6, r1
   15070:	ldr	r7, [r0]
   15074:	ldr	r3, [r0, #4]
   15078:	sub	r8, r3, #1
   1507c:	cmp	r3, #0
   15080:	bne	150dc <argp_parse@@Base+0x1d70>
   15084:	mov	r7, #0
   15088:	b	150c4 <argp_parse@@Base+0x1d58>
   1508c:	sub	r5, r5, #1
   15090:	add	r4, r4, #24
   15094:	cmn	r5, #1
   15098:	beq	150cc <argp_parse@@Base+0x1d60>
   1509c:	ldr	r0, [r4, #-24]	; 0xffffffe8
   150a0:	cmp	r0, #0
   150a4:	beq	1508c <argp_parse@@Base+0x1d20>
   150a8:	ldr	r3, [r4, #-12]
   150ac:	tst	r3, #2
   150b0:	bne	1508c <argp_parse@@Base+0x1d20>
   150b4:	mov	r1, r6
   150b8:	bl	11240 <strcmp@plt>
   150bc:	cmp	r0, #0
   150c0:	bne	1508c <argp_parse@@Base+0x1d20>
   150c4:	mov	r0, r7
   150c8:	pop	{r4, r5, r6, r7, r8, pc}
   150cc:	add	r7, r7, #28
   150d0:	sub	r8, r8, #1
   150d4:	cmn	r8, #1
   150d8:	beq	150f8 <argp_parse@@Base+0x1d8c>
   150dc:	ldr	r4, [r7]
   150e0:	ldr	r3, [r7, #4]
   150e4:	sub	r5, r3, #1
   150e8:	cmp	r3, #0
   150ec:	beq	150cc <argp_parse@@Base+0x1d60>
   150f0:	add	r4, r4, #24
   150f4:	b	1509c <argp_parse@@Base+0x1d30>
   150f8:	mov	r7, #0
   150fc:	b	150c4 <argp_parse@@Base+0x1d58>
   15100:	push	{r4, r5, r6, lr}
   15104:	ldr	r4, [r0, #16]
   15108:	ldr	r0, [r0, #8]
   1510c:	cmp	r0, #0
   15110:	moveq	r5, #0
   15114:	beq	15128 <argp_parse@@Base+0x1dbc>
   15118:	mov	r1, #10
   1511c:	bl	113f0 <strchr@plt>
   15120:	adds	r5, r0, #0
   15124:	movne	r5, #1
   15128:	cmp	r4, #0
   1512c:	beq	15150 <argp_parse@@Base+0x1de4>
   15130:	ldr	r0, [r4]
   15134:	cmp	r0, #0
   15138:	beq	15150 <argp_parse@@Base+0x1de4>
   1513c:	bl	15100 <argp_parse@@Base+0x1d94>
   15140:	add	r5, r5, r0
   15144:	ldr	r0, [r4, #16]!
   15148:	cmp	r0, #0
   1514c:	bne	1513c <argp_parse@@Base+0x1dd0>
   15150:	mov	r0, r5
   15154:	pop	{r4, r5, r6, pc}
   15158:	push	{r4, r5, r6, r7, r8, lr}
   1515c:	mov	r4, r0
   15160:	mov	r5, r1
   15164:	ldr	r3, [r0, #28]
   15168:	ldr	r2, [r0, #24]
   1516c:	sub	r3, r3, r2
   15170:	ldr	r2, [r0, #16]
   15174:	cmp	r3, r2
   15178:	bhi	15194 <argp_parse@@Base+0x1e28>
   1517c:	ldr	r3, [r4, #20]
   15180:	cmp	r3, #0
   15184:	subge	r5, r5, r3
   15188:	mov	r6, #32
   1518c:	mov	r7, #1
   15190:	b	151b0 <argp_parse@@Base+0x1e44>
   15194:	bl	18a70 <argp_error@@Base+0xdd8>
   15198:	b	1517c <argp_parse@@Base+0x1e10>
   1519c:	ldr	r3, [r4, #28]
   151a0:	add	r2, r3, #1
   151a4:	str	r2, [r4, #28]
   151a8:	strb	r6, [r3]
   151ac:	sub	r5, r5, #1
   151b0:	cmp	r5, #0
   151b4:	ble	151e0 <argp_parse@@Base+0x1e74>
   151b8:	ldr	r2, [r4, #28]
   151bc:	ldr	r3, [r4, #32]
   151c0:	cmp	r2, r3
   151c4:	bcc	1519c <argp_parse@@Base+0x1e30>
   151c8:	mov	r1, r7
   151cc:	mov	r0, r4
   151d0:	bl	19014 <argp_error@@Base+0x137c>
   151d4:	cmp	r0, #0
   151d8:	beq	151ac <argp_parse@@Base+0x1e40>
   151dc:	b	1519c <argp_parse@@Base+0x1e30>
   151e0:	pop	{r4, r5, r6, r7, r8, pc}
   151e4:	push	{r4, r5, r6, lr}
   151e8:	mov	r4, r0
   151ec:	mov	r5, r1
   151f0:	ldr	r3, [r0, #28]
   151f4:	ldr	r2, [r0, #24]
   151f8:	sub	r3, r3, r2
   151fc:	ldr	r2, [r0, #16]
   15200:	cmp	r3, r2
   15204:	bhi	15248 <argp_parse@@Base+0x1edc>
   15208:	ldr	r3, [r4, #20]
   1520c:	cmp	r3, #0
   15210:	addge	r5, r5, r3
   15214:	ldr	r3, [r4, #8]
   15218:	cmp	r5, r3
   1521c:	bcc	15268 <argp_parse@@Base+0x1efc>
   15220:	ldr	r2, [r4, #28]
   15224:	ldr	r3, [r4, #32]
   15228:	cmp	r2, r3
   1522c:	bcs	15250 <argp_parse@@Base+0x1ee4>
   15230:	ldr	r3, [r4, #28]
   15234:	add	r2, r3, #1
   15238:	str	r2, [r4, #28]
   1523c:	mov	r2, #10
   15240:	strb	r2, [r3]
   15244:	pop	{r4, r5, r6, pc}
   15248:	bl	18a70 <argp_error@@Base+0xdd8>
   1524c:	b	15208 <argp_parse@@Base+0x1e9c>
   15250:	mov	r1, #1
   15254:	mov	r0, r4
   15258:	bl	19014 <argp_error@@Base+0x137c>
   1525c:	cmp	r0, #0
   15260:	popeq	{r4, r5, r6, pc}
   15264:	b	15230 <argp_parse@@Base+0x1ec4>
   15268:	ldr	r2, [r4, #28]
   1526c:	ldr	r3, [r4, #32]
   15270:	cmp	r2, r3
   15274:	bcs	15290 <argp_parse@@Base+0x1f24>
   15278:	ldr	r3, [r4, #28]
   1527c:	add	r2, r3, #1
   15280:	str	r2, [r4, #28]
   15284:	mov	r2, #32
   15288:	strb	r2, [r3]
   1528c:	pop	{r4, r5, r6, pc}
   15290:	mov	r1, #1
   15294:	mov	r0, r4
   15298:	bl	19014 <argp_error@@Base+0x137c>
   1529c:	cmp	r0, #0
   152a0:	bne	15278 <argp_parse@@Base+0x1f0c>
   152a4:	pop	{r4, r5, r6, pc}
   152a8:	push	{r4, r5, r6, lr}
   152ac:	ldr	r5, [r0, #8]
   152b0:	ldr	r2, [r0, #12]
   152b4:	ldr	ip, [r1, #12]
   152b8:	orr	r2, r2, ip
   152bc:	cmp	r5, #0
   152c0:	beq	1530c <argp_parse@@Base+0x1fa0>
   152c4:	tst	r2, #16
   152c8:	bne	15304 <argp_parse@@Base+0x1f98>
   152cc:	mov	r6, r3
   152d0:	mov	r4, r0
   152d4:	tst	r2, #1
   152d8:	bne	1531c <argp_parse@@Base+0x1fb0>
   152dc:	mov	r0, r5
   152e0:	bl	113e4 <strlen@plt>
   152e4:	add	r1, r0, #6
   152e8:	mov	r0, r6
   152ec:	bl	151e4 <argp_parse@@Base+0x1e78>
   152f0:	mov	r3, r5
   152f4:	ldr	r2, [r4, #4]
   152f8:	ldr	r1, [pc, #52]	; 15334 <argp_parse@@Base+0x1fc8>
   152fc:	mov	r0, r6
   15300:	bl	19104 <argp_error@@Base+0x146c>
   15304:	mov	r0, #0
   15308:	pop	{r4, r5, r6, pc}
   1530c:	ldr	r5, [r1, #8]
   15310:	cmp	r5, #0
   15314:	beq	15304 <argp_parse@@Base+0x1f98>
   15318:	b	152c4 <argp_parse@@Base+0x1f58>
   1531c:	mov	r3, r5
   15320:	ldr	r2, [r0, #4]
   15324:	ldr	r1, [pc, #12]	; 15338 <argp_parse@@Base+0x1fcc>
   15328:	mov	r0, r6
   1532c:	bl	19104 <argp_error@@Base+0x146c>
   15330:	b	15304 <argp_parse@@Base+0x1f98>
   15334:	andeq	sl, r1, r8, lsl r1
   15338:	andeq	sl, r1, ip, lsl #2
   1533c:	push	{r4, r5, r6, lr}
   15340:	subs	r5, r2, #0
   15344:	popeq	{r4, r5, r6, pc}
   15348:	ldr	ip, [r5, #20]
   1534c:	cmp	ip, #0
   15350:	popeq	{r4, r5, r6, pc}
   15354:	mov	r6, r1
   15358:	mov	r4, r0
   1535c:	mov	r1, r3
   15360:	mov	r0, r5
   15364:	bl	13de0 <argp_parse@@Base+0xa74>
   15368:	ldr	r3, [r5, #20]
   1536c:	mov	r2, r0
   15370:	mov	r1, r4
   15374:	mov	r0, r6
   15378:	blx	r3
   1537c:	pop	{r4, r5, r6, pc}
   15380:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15384:	sub	sp, sp, #28
   15388:	str	r1, [sp, #16]
   1538c:	mov	r8, r2
   15390:	mov	r4, r3
   15394:	ldr	r5, [sp, #64]	; 0x40
   15398:	ldr	r3, [r2]
   1539c:	mov	r6, r3
   153a0:	str	r3, [sp, #20]
   153a4:	ldr	sl, [r0, #16]
   153a8:	ldr	r2, [r0, #8]
   153ac:	mov	ip, r2
   153b0:	str	r2, [sp, #12]
   153b4:	mov	r3, r1
   153b8:	mov	r2, r0
   153bc:	ldr	r1, [pc, #424]	; 1556c <argp_parse@@Base+0x2200>
   153c0:	mov	r0, ip
   153c4:	bl	1533c <argp_parse@@Base+0x1fd0>
   153c8:	subs	r3, r0, #0
   153cc:	str	r3, [sp, #8]
   153d0:	beq	15558 <argp_parse@@Base+0x21ec>
   153d4:	mov	r1, #10
   153d8:	mov	r0, r3
   153dc:	bl	11288 <strchrnul@plt>
   153e0:	mov	r7, r0
   153e4:	ldrb	r3, [r0]
   153e8:	cmp	r3, #0
   153ec:	beq	15528 <argp_parse@@Base+0x21bc>
   153f0:	ldrb	fp, [r6]
   153f4:	cmp	fp, #0
   153f8:	ble	15520 <argp_parse@@Base+0x21b4>
   153fc:	mov	r6, #0
   15400:	add	r9, r0, #1
   15404:	mov	r1, #10
   15408:	mov	r0, r9
   1540c:	bl	11288 <strchrnul@plt>
   15410:	add	r6, r6, #1
   15414:	cmp	r6, fp
   15418:	bne	15400 <argp_parse@@Base+0x2094>
   1541c:	mov	r7, r0
   15420:	ldr	r3, [r8]
   15424:	add	r3, r3, #1
   15428:	str	r3, [r8]
   1542c:	mov	fp, #1
   15430:	add	r1, r7, #1
   15434:	sub	r1, r1, r9
   15438:	mov	r0, r5
   1543c:	bl	151e4 <argp_parse@@Base+0x1e78>
   15440:	sub	r6, r7, r9
   15444:	ldr	r3, [r5, #28]
   15448:	add	r3, r3, r6
   1544c:	ldr	r2, [r5, #32]
   15450:	cmp	r2, r3
   15454:	bcs	1546c <argp_parse@@Base+0x2100>
   15458:	mov	r1, r6
   1545c:	mov	r0, r5
   15460:	bl	19014 <argp_error@@Base+0x137c>
   15464:	cmp	r0, #0
   15468:	beq	15488 <argp_parse@@Base+0x211c>
   1546c:	mov	r2, r6
   15470:	mov	r1, r9
   15474:	ldr	r0, [r5, #28]
   15478:	bl	112b8 <memcpy@plt>
   1547c:	ldr	r3, [r5, #28]
   15480:	add	r6, r3, r6
   15484:	str	r6, [r5, #28]
   15488:	ldr	r3, [sp, #12]
   1548c:	ldr	r2, [sp, #8]
   15490:	cmp	r3, r2
   15494:	bne	15534 <argp_parse@@Base+0x21c8>
   15498:	cmp	sl, #0
   1549c:	beq	154dc <argp_parse@@Base+0x2170>
   154a0:	ldr	r0, [sl]
   154a4:	cmp	r0, #0
   154a8:	beq	154dc <argp_parse@@Base+0x2170>
   154ac:	mov	r3, r4
   154b0:	ldr	r4, [sp, #16]
   154b4:	str	r5, [sp]
   154b8:	mov	r2, r8
   154bc:	mov	r1, r4
   154c0:	bl	15380 <argp_parse@@Base+0x2014>
   154c4:	clz	r3, r0
   154c8:	lsr	r3, r3, #5
   154cc:	ldr	r0, [sl, #16]!
   154d0:	cmp	r0, #0
   154d4:	bne	154b4 <argp_parse@@Base+0x2148>
   154d8:	mov	r4, r3
   154dc:	cmp	r4, #0
   154e0:	moveq	fp, #0
   154e4:	andne	fp, fp, #1
   154e8:	cmp	fp, #0
   154ec:	beq	15510 <argp_parse@@Base+0x21a4>
   154f0:	ldrb	r3, [r7]
   154f4:	cmp	r3, #0
   154f8:	bne	15540 <argp_parse@@Base+0x21d4>
   154fc:	ldr	r2, [sp, #20]
   15500:	ldrb	r3, [r2]
   15504:	cmp	r3, #0
   15508:	movne	r3, #0
   1550c:	strbne	r3, [r2]
   15510:	clz	r0, r4
   15514:	lsr	r0, r0, #5
   15518:	add	sp, sp, #28
   1551c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15520:	ldr	r9, [sp, #8]
   15524:	b	15420 <argp_parse@@Base+0x20b4>
   15528:	ldr	r9, [sp, #8]
   1552c:	mov	fp, #0
   15530:	b	15430 <argp_parse@@Base+0x20c4>
   15534:	mov	r0, r2
   15538:	bl	13f60 <argp_parse@@Base+0xbf4>
   1553c:	b	15498 <argp_parse@@Base+0x212c>
   15540:	ldr	r2, [sp, #20]
   15544:	ldrb	r3, [r2]
   15548:	add	r3, r3, #1
   1554c:	strb	r3, [r2]
   15550:	mov	r4, #0
   15554:	b	15510 <argp_parse@@Base+0x21a4>
   15558:	cmp	sl, #0
   1555c:	beq	15510 <argp_parse@@Base+0x21a4>
   15560:	ldr	r7, [sp, #8]
   15564:	mov	fp, #0
   15568:	b	154a0 <argp_parse@@Base+0x2134>
   1556c:	andeq	r0, r0, #6
   15570:	push	{r4, r5, r6, r7, r8, lr}
   15574:	mov	r7, r0
   15578:	mov	r4, r2
   1557c:	ldr	r3, [r2, #16]
   15580:	mov	r2, r1
   15584:	ldr	r1, [pc, #448]	; 1574c <argp_parse@@Base+0x23e0>
   15588:	bl	1533c <argp_parse@@Base+0x1fd0>
   1558c:	subs	r5, r0, #0
   15590:	beq	156e4 <argp_parse@@Base+0x2378>
   15594:	ldrb	r3, [r5]
   15598:	cmp	r3, #0
   1559c:	beq	156d8 <argp_parse@@Base+0x236c>
   155a0:	ldr	r3, [r4, #8]
   155a4:	ldr	r3, [r3]
   155a8:	cmp	r3, #0
   155ac:	beq	155d8 <argp_parse@@Base+0x226c>
   155b0:	ldr	r6, [r4, #4]
   155b4:	ldr	r2, [r6, #28]
   155b8:	ldr	r3, [r6, #32]
   155bc:	cmp	r2, r3
   155c0:	bcs	156f8 <argp_parse@@Base+0x238c>
   155c4:	ldr	r3, [r6, #28]
   155c8:	add	r2, r3, #1
   155cc:	str	r2, [r6, #28]
   155d0:	mov	r2, #10
   155d4:	strb	r2, [r3]
   155d8:	ldr	r8, [pc, #368]	; 15750 <argp_parse@@Base+0x23e4>
   155dc:	ldr	r1, [r8, #24]
   155e0:	ldr	r0, [r4, #4]
   155e4:	bl	15158 <argp_parse@@Base+0x1dec>
   155e8:	ldr	r6, [r4, #4]
   155ec:	ldr	r8, [r8, #24]
   155f0:	ldr	r3, [r6, #28]
   155f4:	ldr	r2, [r6, #24]
   155f8:	sub	r3, r3, r2
   155fc:	ldr	r2, [r6, #16]
   15600:	cmp	r3, r2
   15604:	bhi	15710 <argp_parse@@Base+0x23a4>
   15608:	str	r8, [r6, #4]
   1560c:	ldr	r6, [r4, #4]
   15610:	ldr	r3, [pc, #312]	; 15750 <argp_parse@@Base+0x23e4>
   15614:	ldr	r8, [r3, #24]
   15618:	ldr	r3, [r6, #28]
   1561c:	ldr	r2, [r6, #24]
   15620:	sub	r3, r3, r2
   15624:	ldr	r2, [r6, #16]
   15628:	cmp	r3, r2
   1562c:	bhi	1571c <argp_parse@@Base+0x23b0>
   15630:	str	r8, [r6, #12]
   15634:	mov	r0, r5
   15638:	bl	113e4 <strlen@plt>
   1563c:	subs	r8, r0, #0
   15640:	beq	1568c <argp_parse@@Base+0x2320>
   15644:	ldr	r6, [r4, #4]
   15648:	ldr	r3, [r6, #28]
   1564c:	add	r3, r3, r8
   15650:	ldr	r2, [r6, #32]
   15654:	cmp	r2, r3
   15658:	bcs	15670 <argp_parse@@Base+0x2304>
   1565c:	mov	r1, r8
   15660:	mov	r0, r6
   15664:	bl	19014 <argp_error@@Base+0x137c>
   15668:	cmp	r0, #0
   1566c:	beq	1568c <argp_parse@@Base+0x2320>
   15670:	mov	r2, r8
   15674:	mov	r1, r5
   15678:	ldr	r0, [r6, #28]
   1567c:	bl	112b8 <memcpy@plt>
   15680:	ldr	r3, [r6, #28]
   15684:	add	r8, r3, r8
   15688:	str	r8, [r6, #28]
   1568c:	ldr	r6, [r4, #4]
   15690:	ldr	r3, [r6, #28]
   15694:	ldr	r2, [r6, #24]
   15698:	sub	r3, r3, r2
   1569c:	ldr	r2, [r6, #16]
   156a0:	cmp	r3, r2
   156a4:	bhi	15728 <argp_parse@@Base+0x23bc>
   156a8:	mov	r3, #0
   156ac:	str	r3, [r6, #4]
   156b0:	ldr	r6, [r4, #4]
   156b4:	ldr	r2, [r6, #28]
   156b8:	ldr	r3, [r6, #32]
   156bc:	cmp	r2, r3
   156c0:	bcs	15734 <argp_parse@@Base+0x23c8>
   156c4:	ldr	r3, [r6, #28]
   156c8:	add	r2, r3, #1
   156cc:	str	r2, [r6, #28]
   156d0:	mov	r2, #10
   156d4:	strb	r2, [r3]
   156d8:	ldr	r3, [r4, #8]
   156dc:	mov	r2, #1
   156e0:	str	r2, [r3, #4]
   156e4:	cmp	r7, r5
   156e8:	popeq	{r4, r5, r6, r7, r8, pc}
   156ec:	mov	r0, r5
   156f0:	bl	13f60 <argp_parse@@Base+0xbf4>
   156f4:	pop	{r4, r5, r6, r7, r8, pc}
   156f8:	mov	r1, #1
   156fc:	mov	r0, r6
   15700:	bl	19014 <argp_error@@Base+0x137c>
   15704:	cmp	r0, #0
   15708:	beq	155d8 <argp_parse@@Base+0x226c>
   1570c:	b	155c4 <argp_parse@@Base+0x2258>
   15710:	mov	r0, r6
   15714:	bl	18a70 <argp_error@@Base+0xdd8>
   15718:	b	15608 <argp_parse@@Base+0x229c>
   1571c:	mov	r0, r6
   15720:	bl	18a70 <argp_error@@Base+0xdd8>
   15724:	b	15630 <argp_parse@@Base+0x22c4>
   15728:	mov	r0, r6
   1572c:	bl	18a70 <argp_error@@Base+0xdd8>
   15730:	b	156a8 <argp_parse@@Base+0x233c>
   15734:	mov	r1, #1
   15738:	mov	r0, r6
   1573c:	bl	19014 <argp_error@@Base+0x137c>
   15740:	cmp	r0, #0
   15744:	beq	156d8 <argp_parse@@Base+0x236c>
   15748:	b	156c4 <argp_parse@@Base+0x2358>
   1574c:	andeq	r0, r0, #3
   15750:	andeq	fp, r2, r8, lsr #5
   15754:	push	{r4, r5, r6, r7, r8, lr}
   15758:	mov	r6, r0
   1575c:	mov	r4, r1
   15760:	ldr	r3, [r1, #12]
   15764:	cmp	r3, #0
   15768:	beq	15888 <argp_parse@@Base+0x251c>
   1576c:	ldr	r3, [r1, #8]
   15770:	ldr	r7, [r3]
   15774:	ldr	r2, [r1]
   15778:	ldr	r5, [r2, #16]
   1577c:	ldr	r3, [r3, #4]
   15780:	cmp	r3, #0
   15784:	cmpne	r7, #0
   15788:	beq	157c4 <argp_parse@@Base+0x2458>
   1578c:	ldr	r2, [r2, #12]
   15790:	ldr	r3, [r7, #12]
   15794:	cmp	r2, r3
   15798:	beq	157c4 <argp_parse@@Base+0x2458>
   1579c:	ldr	r8, [r1, #4]
   157a0:	ldr	r2, [r8, #28]
   157a4:	ldr	r3, [r8, #32]
   157a8:	cmp	r2, r3
   157ac:	bcs	15864 <argp_parse@@Base+0x24f8>
   157b0:	ldr	r3, [r8, #28]
   157b4:	add	r2, r3, #1
   157b8:	str	r2, [r8, #28]
   157bc:	mov	r2, #10
   157c0:	strb	r2, [r3]
   157c4:	cmp	r5, #0
   157c8:	beq	1584c <argp_parse@@Base+0x24e0>
   157cc:	ldr	r0, [r5]
   157d0:	cmp	r0, #0
   157d4:	beq	1584c <argp_parse@@Base+0x24e0>
   157d8:	ldrb	r3, [r0]
   157dc:	cmp	r3, #0
   157e0:	beq	1584c <argp_parse@@Base+0x24e0>
   157e4:	cmp	r7, #0
   157e8:	beq	15818 <argp_parse@@Base+0x24ac>
   157ec:	ldr	r3, [r7, #16]
   157f0:	cmp	r5, r3
   157f4:	beq	1584c <argp_parse@@Base+0x24e0>
   157f8:	cmp	r3, #0
   157fc:	beq	15818 <argp_parse@@Base+0x24ac>
   15800:	ldr	r3, [r3, #12]
   15804:	cmp	r3, #0
   15808:	cmpne	r5, r3
   1580c:	bne	15800 <argp_parse@@Base+0x2494>
   15810:	cmp	r5, r3
   15814:	beq	1584c <argp_parse@@Base+0x24e0>
   15818:	ldr	r3, [r4, #4]
   1581c:	ldr	r7, [r3, #12]
   15820:	mov	r2, r4
   15824:	ldr	r1, [r5, #16]
   15828:	bl	15570 <argp_parse@@Base+0x2204>
   1582c:	ldr	r5, [r4, #4]
   15830:	ldr	r3, [r5, #28]
   15834:	ldr	r2, [r5, #24]
   15838:	sub	r3, r3, r2
   1583c:	ldr	r2, [r5, #16]
   15840:	cmp	r3, r2
   15844:	bhi	1587c <argp_parse@@Base+0x2510>
   15848:	str	r7, [r5, #12]
   1584c:	mov	r3, #0
   15850:	str	r3, [r4, #12]
   15854:	mov	r1, r6
   15858:	ldr	r0, [r4, #4]
   1585c:	bl	15158 <argp_parse@@Base+0x1dec>
   15860:	pop	{r4, r5, r6, r7, r8, pc}
   15864:	mov	r1, #1
   15868:	mov	r0, r8
   1586c:	bl	19014 <argp_error@@Base+0x137c>
   15870:	cmp	r0, #0
   15874:	beq	157c4 <argp_parse@@Base+0x2458>
   15878:	b	157b0 <argp_parse@@Base+0x2444>
   1587c:	mov	r0, r5
   15880:	bl	18a70 <argp_error@@Base+0xdd8>
   15884:	b	15848 <argp_parse@@Base+0x24dc>
   15888:	ldr	r5, [r1, #4]
   1588c:	ldr	r3, [r5, #28]
   15890:	add	r3, r3, #2
   15894:	ldr	r2, [r5, #32]
   15898:	cmp	r2, r3
   1589c:	bcs	158b4 <argp_parse@@Base+0x2548>
   158a0:	mov	r1, #2
   158a4:	mov	r0, r5
   158a8:	bl	19014 <argp_error@@Base+0x137c>
   158ac:	cmp	r0, #0
   158b0:	beq	15854 <argp_parse@@Base+0x24e8>
   158b4:	ldr	r3, [r5, #28]
   158b8:	ldr	r2, [pc, #20]	; 158d4 <argp_parse@@Base+0x2568>
   158bc:	ldrh	r2, [r2]
   158c0:	strh	r2, [r3]
   158c4:	ldr	r3, [r5, #28]
   158c8:	add	r3, r3, #2
   158cc:	str	r3, [r5, #28]
   158d0:	b	15854 <argp_parse@@Base+0x24e8>
   158d4:	andeq	sl, r1, r4, lsr #2
   158d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158dc:	sub	sp, sp, #28
   158e0:	mov	fp, r0
   158e4:	str	r1, [sp, #8]
   158e8:	mov	r6, r2
   158ec:	mov	r8, r3
   158f0:	ldr	r7, [sp, #64]	; 0x40
   158f4:	ldr	r5, [sp, #68]	; 0x44
   158f8:	ldr	r9, [r0, #12]
   158fc:	ldr	r3, [r0, #16]
   15900:	str	r3, [sp, #16]
   15904:	cmp	r9, #0
   15908:	beq	15d64 <argp_parse@@Base+0x29f8>
   1590c:	mov	r1, #11
   15910:	mov	r0, r9
   15914:	bl	113f0 <strchr@plt>
   15918:	cmp	r6, #0
   1591c:	beq	15c14 <argp_parse@@Base+0x28a8>
   15920:	cmp	r0, #0
   15924:	addne	r9, r0, #1
   15928:	beq	15d4c <argp_parse@@Base+0x29e0>
   1592c:	ldr	r3, [fp, #20]
   15930:	cmp	r3, #0
   15934:	movne	sl, #0
   15938:	beq	15d54 <argp_parse@@Base+0x29e8>
   1593c:	ldr	r1, [sp, #8]
   15940:	mov	r0, fp
   15944:	bl	13de0 <argp_parse@@Base+0xa74>
   15948:	str	r0, [sp, #12]
   1594c:	ldr	r3, [fp, #20]
   15950:	ldr	r2, [pc, #1140]	; 15dcc <argp_parse@@Base+0x2a60>
   15954:	ldr	r0, [pc, #1140]	; 15dd0 <argp_parse@@Base+0x2a64>
   15958:	cmp	r6, #0
   1595c:	moveq	r0, r2
   15960:	ldr	r2, [sp, #12]
   15964:	mov	r1, r9
   15968:	blx	r3
   1596c:	mov	r4, r0
   15970:	cmp	r4, #0
   15974:	beq	15d04 <argp_parse@@Base+0x2998>
   15978:	cmp	r8, #0
   1597c:	beq	159a4 <argp_parse@@Base+0x2638>
   15980:	ldr	r2, [r5, #28]
   15984:	ldr	r3, [r5, #32]
   15988:	cmp	r2, r3
   1598c:	bcs	15c58 <argp_parse@@Base+0x28ec>
   15990:	ldr	r3, [r5, #28]
   15994:	add	r2, r3, #1
   15998:	str	r2, [r5, #28]
   1599c:	mov	r2, #10
   159a0:	strb	r2, [r3]
   159a4:	cmp	r4, r9
   159a8:	movne	r3, #0
   159ac:	moveq	r3, #1
   159b0:	cmp	sl, #0
   159b4:	moveq	r3, #0
   159b8:	cmp	r3, #0
   159bc:	beq	15c70 <argp_parse@@Base+0x2904>
   159c0:	ldr	r3, [r5, #28]
   159c4:	add	r3, r3, sl
   159c8:	ldr	r2, [r5, #32]
   159cc:	cmp	r2, r3
   159d0:	bcs	159e8 <argp_parse@@Base+0x267c>
   159d4:	mov	r1, sl
   159d8:	mov	r0, r5
   159dc:	bl	19014 <argp_error@@Base+0x137c>
   159e0:	cmp	r0, #0
   159e4:	beq	15a04 <argp_parse@@Base+0x2698>
   159e8:	mov	r2, sl
   159ec:	mov	r1, r9
   159f0:	ldr	r0, [r5, #28]
   159f4:	bl	112b8 <memcpy@plt>
   159f8:	ldr	r3, [r5, #28]
   159fc:	add	r3, r3, sl
   15a00:	str	r3, [r5, #28]
   15a04:	ldr	r3, [r5, #28]
   15a08:	ldr	r2, [r5, #24]
   15a0c:	sub	r3, r3, r2
   15a10:	ldr	r2, [r5, #16]
   15a14:	cmp	r3, r2
   15a18:	bhi	15cd0 <argp_parse@@Base+0x2964>
   15a1c:	ldr	r3, [r5, #20]
   15a20:	bic	r3, r3, r3, asr #31
   15a24:	ldr	r2, [r5, #4]
   15a28:	cmp	r2, r3
   15a2c:	bcs	15a54 <argp_parse@@Base+0x26e8>
   15a30:	ldr	r2, [r5, #28]
   15a34:	ldr	r3, [r5, #32]
   15a38:	cmp	r2, r3
   15a3c:	bcs	15cdc <argp_parse@@Base+0x2970>
   15a40:	ldr	r3, [r5, #28]
   15a44:	add	r2, r3, #1
   15a48:	str	r2, [r5, #28]
   15a4c:	mov	r2, #10
   15a50:	strb	r2, [r3]
   15a54:	cmp	r4, r9
   15a58:	moveq	r4, #1
   15a5c:	bne	15cf4 <argp_parse@@Base+0x2988>
   15a60:	cmp	r9, #0
   15a64:	cmpne	sl, #0
   15a68:	beq	15a80 <argp_parse@@Base+0x2714>
   15a6c:	ldr	r3, [fp, #20]
   15a70:	cmp	r3, #0
   15a74:	beq	15b8c <argp_parse@@Base+0x2820>
   15a78:	mov	r0, r9
   15a7c:	bl	13f60 <argp_parse@@Base+0xbf4>
   15a80:	cmp	r6, #0
   15a84:	beq	15b8c <argp_parse@@Base+0x2820>
   15a88:	ldr	r3, [fp, #20]
   15a8c:	cmp	r3, #0
   15a90:	beq	15b8c <argp_parse@@Base+0x2820>
   15a94:	ldr	r2, [sp, #12]
   15a98:	mov	r1, #0
   15a9c:	ldr	r0, [pc, #816]	; 15dd4 <argp_parse@@Base+0x2a68>
   15aa0:	blx	r3
   15aa4:	subs	r9, r0, #0
   15aa8:	beq	15b8c <argp_parse@@Base+0x2820>
   15aac:	orrs	r3, r8, r4
   15ab0:	beq	15ad8 <argp_parse@@Base+0x276c>
   15ab4:	ldr	r2, [r5, #28]
   15ab8:	ldr	r3, [r5, #32]
   15abc:	cmp	r2, r3
   15ac0:	bcs	15d0c <argp_parse@@Base+0x29a0>
   15ac4:	ldr	r3, [r5, #28]
   15ac8:	add	r2, r3, #1
   15acc:	str	r2, [r5, #28]
   15ad0:	mov	r2, #10
   15ad4:	strb	r2, [r3]
   15ad8:	mov	r0, r9
   15adc:	bl	113e4 <strlen@plt>
   15ae0:	subs	r4, r0, #0
   15ae4:	beq	15b2c <argp_parse@@Base+0x27c0>
   15ae8:	ldr	r3, [r5, #28]
   15aec:	add	r3, r3, r4
   15af0:	ldr	r2, [r5, #32]
   15af4:	cmp	r2, r3
   15af8:	bcs	15b10 <argp_parse@@Base+0x27a4>
   15afc:	mov	r1, r4
   15b00:	mov	r0, r5
   15b04:	bl	19014 <argp_error@@Base+0x137c>
   15b08:	cmp	r0, #0
   15b0c:	beq	15b2c <argp_parse@@Base+0x27c0>
   15b10:	mov	r2, r4
   15b14:	mov	r1, r9
   15b18:	ldr	r0, [r5, #28]
   15b1c:	bl	112b8 <memcpy@plt>
   15b20:	ldr	r3, [r5, #28]
   15b24:	add	r4, r3, r4
   15b28:	str	r4, [r5, #28]
   15b2c:	mov	r0, r9
   15b30:	bl	13f60 <argp_parse@@Base+0xbf4>
   15b34:	ldr	r3, [r5, #28]
   15b38:	ldr	r2, [r5, #24]
   15b3c:	sub	r3, r3, r2
   15b40:	ldr	r2, [r5, #16]
   15b44:	cmp	r3, r2
   15b48:	bhi	15d24 <argp_parse@@Base+0x29b8>
   15b4c:	ldr	r3, [r5, #20]
   15b50:	bic	r3, r3, r3, asr #31
   15b54:	ldr	r2, [r5, #4]
   15b58:	cmp	r2, r3
   15b5c:	movcs	r4, #1
   15b60:	bcs	15b8c <argp_parse@@Base+0x2820>
   15b64:	ldr	r2, [r5, #28]
   15b68:	ldr	r3, [r5, #32]
   15b6c:	cmp	r2, r3
   15b70:	bcs	15d30 <argp_parse@@Base+0x29c4>
   15b74:	ldr	r3, [r5, #28]
   15b78:	add	r2, r3, #1
   15b7c:	str	r2, [r5, #28]
   15b80:	mov	r2, #10
   15b84:	strb	r2, [r3]
   15b88:	mov	r4, #1
   15b8c:	ldr	r3, [sp, #16]
   15b90:	cmp	r3, #0
   15b94:	beq	15c08 <argp_parse@@Base+0x289c>
   15b98:	ldr	r0, [r3]
   15b9c:	cmp	r0, #0
   15ba0:	beq	15c08 <argp_parse@@Base+0x289c>
   15ba4:	clz	r9, r7
   15ba8:	lsr	r9, r9, #5
   15bac:	cmp	r7, #0
   15bb0:	cmpne	r4, #0
   15bb4:	bne	15c08 <argp_parse@@Base+0x289c>
   15bb8:	mov	sl, r3
   15bbc:	ldr	fp, [sp, #8]
   15bc0:	orrs	r3, r8, r4
   15bc4:	str	r5, [sp, #4]
   15bc8:	str	r7, [sp]
   15bcc:	movne	r3, #1
   15bd0:	moveq	r3, #0
   15bd4:	mov	r2, r6
   15bd8:	mov	r1, fp
   15bdc:	bl	158d8 <argp_parse@@Base+0x256c>
   15be0:	orr	r4, r4, r0
   15be4:	ldr	r0, [sl, #16]
   15be8:	cmp	r0, #0
   15bec:	beq	15c08 <argp_parse@@Base+0x289c>
   15bf0:	add	sl, sl, #16
   15bf4:	cmp	r4, #0
   15bf8:	movne	r3, r9
   15bfc:	orreq	r3, r9, #1
   15c00:	cmp	r3, #0
   15c04:	bne	15bc0 <argp_parse@@Base+0x2854>
   15c08:	mov	r0, r4
   15c0c:	add	sp, sp, #28
   15c10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c14:	cmp	r0, #0
   15c18:	beq	15d9c <argp_parse@@Base+0x2a30>
   15c1c:	sub	sl, r0, r9
   15c20:	ldr	r3, [fp, #20]
   15c24:	cmp	r3, #0
   15c28:	beq	15c48 <argp_parse@@Base+0x28dc>
   15c2c:	cmp	sl, #0
   15c30:	beq	1593c <argp_parse@@Base+0x25d0>
   15c34:	mov	r1, sl
   15c38:	mov	r0, r9
   15c3c:	bl	112ac <strndup@plt>
   15c40:	mov	r9, r0
   15c44:	b	1593c <argp_parse@@Base+0x25d0>
   15c48:	mov	r4, r9
   15c4c:	mov	r3, #0
   15c50:	str	r3, [sp, #12]
   15c54:	b	15978 <argp_parse@@Base+0x260c>
   15c58:	mov	r1, #1
   15c5c:	mov	r0, r5
   15c60:	bl	19014 <argp_error@@Base+0x137c>
   15c64:	cmp	r0, #0
   15c68:	beq	159a4 <argp_parse@@Base+0x2638>
   15c6c:	b	15990 <argp_parse@@Base+0x2624>
   15c70:	mov	r0, r4
   15c74:	bl	113e4 <strlen@plt>
   15c78:	subs	r3, r0, #0
   15c7c:	mov	r1, r3
   15c80:	str	r3, [sp, #20]
   15c84:	beq	15a04 <argp_parse@@Base+0x2698>
   15c88:	ldr	r3, [r5, #28]
   15c8c:	add	r3, r3, r1
   15c90:	ldr	r2, [r5, #32]
   15c94:	cmp	r2, r3
   15c98:	bcs	15cac <argp_parse@@Base+0x2940>
   15c9c:	mov	r0, r5
   15ca0:	bl	19014 <argp_error@@Base+0x137c>
   15ca4:	cmp	r0, #0
   15ca8:	beq	15a04 <argp_parse@@Base+0x2698>
   15cac:	ldr	r2, [sp, #20]
   15cb0:	mov	r1, r4
   15cb4:	ldr	r0, [r5, #28]
   15cb8:	bl	112b8 <memcpy@plt>
   15cbc:	ldr	r3, [r5, #28]
   15cc0:	ldr	r2, [sp, #20]
   15cc4:	add	r3, r3, r2
   15cc8:	str	r3, [r5, #28]
   15ccc:	b	15a04 <argp_parse@@Base+0x2698>
   15cd0:	mov	r0, r5
   15cd4:	bl	18a70 <argp_error@@Base+0xdd8>
   15cd8:	b	15a1c <argp_parse@@Base+0x26b0>
   15cdc:	mov	r1, #1
   15ce0:	mov	r0, r5
   15ce4:	bl	19014 <argp_error@@Base+0x137c>
   15ce8:	cmp	r0, #0
   15cec:	beq	15a54 <argp_parse@@Base+0x26e8>
   15cf0:	b	15a40 <argp_parse@@Base+0x26d4>
   15cf4:	mov	r0, r4
   15cf8:	bl	13f60 <argp_parse@@Base+0xbf4>
   15cfc:	mov	r4, #1
   15d00:	b	15a60 <argp_parse@@Base+0x26f4>
   15d04:	mov	r4, #0
   15d08:	b	15a60 <argp_parse@@Base+0x26f4>
   15d0c:	mov	r1, #1
   15d10:	mov	r0, r5
   15d14:	bl	19014 <argp_error@@Base+0x137c>
   15d18:	cmp	r0, #0
   15d1c:	beq	15ad8 <argp_parse@@Base+0x276c>
   15d20:	b	15ac4 <argp_parse@@Base+0x2758>
   15d24:	mov	r0, r5
   15d28:	bl	18a70 <argp_error@@Base+0xdd8>
   15d2c:	b	15b4c <argp_parse@@Base+0x27e0>
   15d30:	mov	r1, #1
   15d34:	mov	r0, r5
   15d38:	bl	19014 <argp_error@@Base+0x137c>
   15d3c:	cmp	r0, #0
   15d40:	moveq	r4, #1
   15d44:	beq	15b8c <argp_parse@@Base+0x2820>
   15d48:	b	15b74 <argp_parse@@Base+0x2808>
   15d4c:	mov	r9, #0
   15d50:	b	1592c <argp_parse@@Base+0x25c0>
   15d54:	mov	r4, r9
   15d58:	mov	sl, #0
   15d5c:	str	sl, [sp, #12]
   15d60:	b	15970 <argp_parse@@Base+0x2604>
   15d64:	ldr	r3, [r0, #20]
   15d68:	cmp	r3, #0
   15d6c:	movne	sl, #0
   15d70:	bne	1593c <argp_parse@@Base+0x25d0>
   15d74:	mov	r3, r9
   15d78:	cmp	r9, #0
   15d7c:	moveq	r4, #0
   15d80:	streq	r4, [sp, #12]
   15d84:	beq	15a80 <argp_parse@@Base+0x2714>
   15d88:	mov	r4, r9
   15d8c:	mov	r9, r3
   15d90:	mov	sl, #0
   15d94:	str	sl, [sp, #12]
   15d98:	b	15978 <argp_parse@@Base+0x260c>
   15d9c:	ldr	r3, [fp, #20]
   15da0:	cmp	r3, #0
   15da4:	moveq	r3, r9
   15da8:	beq	15d78 <argp_parse@@Base+0x2a0c>
   15dac:	ldr	r1, [sp, #8]
   15db0:	mov	r0, fp
   15db4:	bl	13de0 <argp_parse@@Base+0xa74>
   15db8:	str	r0, [sp, #12]
   15dbc:	ldr	r3, [fp, #20]
   15dc0:	mov	sl, #0
   15dc4:	ldr	r0, [pc]	; 15dcc <argp_parse@@Base+0x2a60>
   15dc8:	b	15960 <argp_parse@@Base+0x25f4>
   15dcc:	andeq	r0, r0, #1
   15dd0:	andeq	r0, r0, #2
   15dd4:	andeq	r0, r0, #4
   15dd8:	ldr	r3, [r0, #12]
   15ddc:	ldr	r2, [r1, #12]
   15de0:	cmp	r3, r2
   15de4:	beq	15e3c <argp_parse@@Base+0x2ad0>
   15de8:	push	{r4, r5, r6, lr}
   15dec:	mov	r5, r1
   15df0:	mov	r4, r0
   15df4:	mov	r1, r2
   15df8:	mov	r0, r3
   15dfc:	bl	15dd8 <argp_parse@@Base+0x2a6c>
   15e00:	subs	r3, r0, #0
   15e04:	bne	15e34 <argp_parse@@Base+0x2ac8>
   15e08:	ldr	r0, [r4, #8]
   15e0c:	ldr	r3, [r5, #8]
   15e10:	mvn	r2, r3
   15e14:	lsr	r2, r2, #31
   15e18:	cmp	r2, r0, lsr #31
   15e1c:	subne	r3, r0, r3
   15e20:	subeq	r3, r3, r0
   15e24:	cmp	r3, #0
   15e28:	ldreq	r3, [r5, #4]
   15e2c:	ldreq	r0, [r4, #4]
   15e30:	subeq	r3, r3, r0
   15e34:	mov	r0, r3
   15e38:	pop	{r4, r5, r6, pc}
   15e3c:	ldr	r2, [r0, #8]
   15e40:	ldr	r3, [r1, #8]
   15e44:	mvn	ip, r3
   15e48:	lsr	ip, ip, #31
   15e4c:	cmp	ip, r2, lsr #31
   15e50:	subne	r3, r2, r3
   15e54:	subeq	r3, r3, r2
   15e58:	cmp	r3, #0
   15e5c:	ldreq	r3, [r1, #4]
   15e60:	ldreq	r0, [r0, #4]
   15e64:	subeq	r3, r3, r0
   15e68:	mov	r0, r3
   15e6c:	bx	lr
   15e70:	push	{r4, r5, r6, r7, r8, lr}
   15e74:	sub	sp, sp, #8
   15e78:	ldr	lr, [r0, #16]
   15e7c:	cmp	lr, #0
   15e80:	movne	r2, lr
   15e84:	bne	15e94 <argp_parse@@Base+0x2b28>
   15e88:	ldr	ip, [r0, #12]
   15e8c:	b	15ea4 <argp_parse@@Base+0x2b38>
   15e90:	mov	r2, r3
   15e94:	ldr	r3, [r2, #12]
   15e98:	cmp	r3, #0
   15e9c:	bne	15e90 <argp_parse@@Base+0x2b24>
   15ea0:	ldr	ip, [r2, #8]
   15ea4:	ldr	r5, [r1, #16]
   15ea8:	cmp	r5, #0
   15eac:	movne	r2, r5
   15eb0:	bne	15ec0 <argp_parse@@Base+0x2b54>
   15eb4:	ldr	r4, [r1, #12]
   15eb8:	b	15ed0 <argp_parse@@Base+0x2b64>
   15ebc:	mov	r2, r3
   15ec0:	ldr	r3, [r2, #12]
   15ec4:	cmp	r3, #0
   15ec8:	bne	15ebc <argp_parse@@Base+0x2b50>
   15ecc:	ldr	r4, [r2, #8]
   15ed0:	mvn	r3, r4
   15ed4:	lsr	r3, r3, #31
   15ed8:	cmp	r3, ip, lsr #31
   15edc:	subne	r4, ip, r4
   15ee0:	subeq	r4, r4, ip
   15ee4:	cmp	r4, #0
   15ee8:	bne	15f50 <argp_parse@@Base+0x2be4>
   15eec:	adds	r4, r5, #0
   15ef0:	movne	r4, #1
   15ef4:	cmp	lr, #0
   15ef8:	rsbeq	r4, r4, #0
   15efc:	rsbne	r4, r4, #1
   15f00:	cmp	r4, #0
   15f04:	bne	15f50 <argp_parse@@Base+0x2be4>
   15f08:	mov	r6, r1
   15f0c:	mov	r7, r0
   15f10:	cmp	lr, #0
   15f14:	beq	15fa0 <argp_parse@@Base+0x2c34>
   15f18:	ldr	ip, [lr, #20]
   15f1c:	ldr	r2, [r5, #20]
   15f20:	cmp	ip, r2
   15f24:	ble	15f5c <argp_parse@@Base+0x2bf0>
   15f28:	mov	r0, lr
   15f2c:	ldr	r0, [r0, #12]
   15f30:	ldr	r3, [r0, #20]
   15f34:	cmp	r2, r3
   15f38:	blt	15f2c <argp_parse@@Base+0x2bc0>
   15f3c:	mov	r1, r5
   15f40:	bl	15dd8 <argp_parse@@Base+0x2a6c>
   15f44:	subs	r4, r0, #0
   15f48:	cmp	r0, #0
   15f4c:	moveq	r4, #1
   15f50:	mov	r0, r4
   15f54:	add	sp, sp, #8
   15f58:	pop	{r4, r5, r6, r7, r8, pc}
   15f5c:	cmp	ip, r2
   15f60:	bge	15f8c <argp_parse@@Base+0x2c20>
   15f64:	mov	r1, r5
   15f68:	ldr	r1, [r1, #12]
   15f6c:	ldr	r3, [r1, #20]
   15f70:	cmp	ip, r3
   15f74:	blt	15f68 <argp_parse@@Base+0x2bfc>
   15f78:	mov	r0, lr
   15f7c:	bl	15dd8 <argp_parse@@Base+0x2a6c>
   15f80:	subs	r4, r0, #0
   15f84:	mvneq	r4, #0
   15f88:	b	15f50 <argp_parse@@Base+0x2be4>
   15f8c:	mov	r1, r5
   15f90:	mov	r0, lr
   15f94:	bl	15dd8 <argp_parse@@Base+0x2a6c>
   15f98:	subs	r4, r0, #0
   15f9c:	bne	15f50 <argp_parse@@Base+0x2be4>
   15fa0:	ldr	r3, [r7, #12]
   15fa4:	ldr	r4, [r6, #12]
   15fa8:	mvn	r2, r4
   15fac:	lsr	r2, r2, #31
   15fb0:	cmp	r2, r3, lsr #31
   15fb4:	subne	r4, r3, r4
   15fb8:	subeq	r4, r4, r3
   15fbc:	cmp	r4, #0
   15fc0:	bne	15f50 <argp_parse@@Base+0x2be4>
   15fc4:	mov	r0, r7
   15fc8:	bl	14c18 <argp_parse@@Base+0x18ac>
   15fcc:	mov	r5, r0
   15fd0:	str	r0, [sp]
   15fd4:	mov	r0, r6
   15fd8:	bl	14c18 <argp_parse@@Base+0x18ac>
   15fdc:	str	r0, [sp, #4]
   15fe0:	ldr	r3, [r7]
   15fe4:	ldr	r3, [r3, #12]
   15fe8:	adds	r5, r5, #0
   15fec:	movne	r5, #1
   15ff0:	ands	r3, r5, r3, lsr #3
   15ff4:	beq	16138 <argp_parse@@Base+0x2dcc>
   15ff8:	mov	r0, sp
   15ffc:	bl	14ddc <argp_parse@@Base+0x1a70>
   16000:	adds	r5, r0, #0
   16004:	movne	r5, #1
   16008:	ldr	r3, [r6]
   1600c:	ldr	r0, [r3, #12]
   16010:	ands	r0, r0, #8
   16014:	beq	16034 <argp_parse@@Base+0x2cc8>
   16018:	ldr	r3, [sp, #4]
   1601c:	cmp	r3, #0
   16020:	beq	16130 <argp_parse@@Base+0x2dc4>
   16024:	add	r0, sp, #4
   16028:	bl	14ddc <argp_parse@@Base+0x1a70>
   1602c:	adds	r0, r0, #0
   16030:	movne	r0, #1
   16034:	subs	r4, r5, r0
   16038:	bne	15f50 <argp_parse@@Base+0x2be4>
   1603c:	ldr	r2, [r7, #20]
   16040:	ldr	r4, [pc, #276]	; 1615c <argp_parse@@Base+0x2df0>
   16044:	mov	r3, #0
   16048:	ldr	r2, [r2, #24]
   1604c:	mov	r1, r4
   16050:	mov	r0, r7
   16054:	bl	14cb0 <argp_parse@@Base+0x1944>
   16058:	mov	r5, r0
   1605c:	uxtb	r8, r0
   16060:	ldr	r2, [r6, #20]
   16064:	mov	r3, #0
   16068:	ldr	r2, [r2, #24]
   1606c:	mov	r1, r4
   16070:	mov	r0, r6
   16074:	bl	14cb0 <argp_parse@@Base+0x1944>
   16078:	uxtb	r7, r0
   1607c:	cmp	r8, #0
   16080:	movne	r5, r8
   16084:	bne	16098 <argp_parse@@Base+0x2d2c>
   16088:	ldr	r3, [sp]
   1608c:	cmp	r3, #0
   16090:	ldrbne	r5, [r3]
   16094:	moveq	r5, #0
   16098:	cmp	r7, #0
   1609c:	uxtbne	r6, r0
   160a0:	bne	160b4 <argp_parse@@Base+0x2d48>
   160a4:	ldr	r3, [sp, #4]
   160a8:	cmp	r3, #0
   160ac:	ldrbne	r6, [r3]
   160b0:	moveq	r6, #0
   160b4:	bl	113a8 <__ctype_tolower_loc@plt>
   160b8:	ldr	r3, [r0]
   160bc:	ldr	r4, [r3, r5, lsl #2]
   160c0:	ldr	r3, [r3, r6, lsl #2]
   160c4:	subs	r4, r4, r3
   160c8:	bne	15f50 <argp_parse@@Base+0x2be4>
   160cc:	subs	r4, r6, r5
   160d0:	bne	15f50 <argp_parse@@Base+0x2be4>
   160d4:	adds	r4, r7, #0
   160d8:	movne	r4, #1
   160dc:	cmp	r8, #0
   160e0:	rsbeq	r4, r4, #0
   160e4:	rsbne	r4, r4, #1
   160e8:	cmp	r4, #0
   160ec:	bne	15f50 <argp_parse@@Base+0x2be4>
   160f0:	cmp	r8, #0
   160f4:	bne	15f50 <argp_parse@@Base+0x2be4>
   160f8:	ldr	r0, [sp]
   160fc:	ldr	r1, [sp, #4]
   16100:	adds	r4, r1, #0
   16104:	movne	r4, #1
   16108:	cmp	r0, #0
   1610c:	rsbeq	r4, r4, #0
   16110:	rsbne	r4, r4, #1
   16114:	cmp	r4, #0
   16118:	bne	15f50 <argp_parse@@Base+0x2be4>
   1611c:	cmp	r0, #0
   16120:	beq	15f50 <argp_parse@@Base+0x2be4>
   16124:	bl	11318 <strcasecmp@plt>
   16128:	mov	r4, r0
   1612c:	b	15f50 <argp_parse@@Base+0x2be4>
   16130:	mov	r0, r4
   16134:	b	16034 <argp_parse@@Base+0x2cc8>
   16138:	ldr	r3, [r6]
   1613c:	ldr	r3, [r3, #12]
   16140:	tst	r3, #8
   16144:	beq	1603c <argp_parse@@Base+0x2cd0>
   16148:	ldr	r3, [sp, #4]
   1614c:	cmp	r3, #0
   16150:	movne	r5, r4
   16154:	bne	16024 <argp_parse@@Base+0x2cb8>
   16158:	b	1603c <argp_parse@@Base+0x2cd0>
   1615c:	muleq	r1, r4, sp
   16160:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16164:	sub	sp, sp, #52	; 0x34
   16168:	str	r0, [sp, #24]
   1616c:	str	r1, [sp, #28]
   16170:	ldr	r2, [r0, #16]
   16174:	str	r2, [sp, #8]
   16178:	ldr	r5, [r0]
   1617c:	mov	r0, #16
   16180:	bl	14b98 <argp_parse@@Base+0x182c>
   16184:	subs	fp, r0, #0
   16188:	beq	161b8 <argp_parse@@Base+0x2e4c>
   1618c:	mov	r3, #0
   16190:	str	r3, [fp, #4]
   16194:	str	r3, [fp, #12]
   16198:	cmp	r5, r3
   1619c:	beq	16390 <argp_parse@@Base+0x3024>
   161a0:	ldr	r4, [r5, #12]
   161a4:	ands	r4, r4, #4
   161a8:	bne	161cc <argp_parse@@Base+0x2e60>
   161ac:	add	r6, r5, #24
   161b0:	mov	r8, r3
   161b4:	b	161f4 <argp_parse@@Base+0x2e88>
   161b8:	ldr	r3, [pc, #1576]	; 167e8 <argp_parse@@Base+0x347c>
   161bc:	ldr	r2, [pc, #1576]	; 167ec <argp_parse@@Base+0x3480>
   161c0:	ldr	r1, [pc, #1576]	; 167f0 <argp_parse@@Base+0x3484>
   161c4:	ldr	r0, [pc, #1576]	; 167f4 <argp_parse@@Base+0x3488>
   161c8:	bl	115a0 <__assert_fail@plt>
   161cc:	ldr	r3, [pc, #1556]	; 167e8 <argp_parse@@Base+0x347c>
   161d0:	mov	r2, #460	; 0x1cc
   161d4:	ldr	r1, [pc, #1556]	; 167f0 <argp_parse@@Base+0x3484>
   161d8:	ldr	r0, [pc, #1560]	; 167f8 <argp_parse@@Base+0x348c>
   161dc:	bl	115a0 <__assert_fail@plt>
   161e0:	ldr	r2, [fp, #4]
   161e4:	add	r2, r2, #1
   161e8:	str	r2, [fp, #4]
   161ec:	b	1621c <argp_parse@@Base+0x2eb0>
   161f0:	add	r6, r6, #24
   161f4:	mov	r3, r6
   161f8:	ldr	r2, [r6, #-20]	; 0xffffffec
   161fc:	cmp	r2, #0
   16200:	bne	16210 <argp_parse@@Base+0x2ea4>
   16204:	ldr	r2, [r6, #-24]	; 0xffffffe8
   16208:	cmp	r2, #0
   1620c:	beq	16254 <argp_parse@@Base+0x2ee8>
   16210:	ldr	r2, [r3, #-12]
   16214:	tst	r2, #4
   16218:	beq	161e0 <argp_parse@@Base+0x2e74>
   1621c:	ldr	r2, [r3, #-12]
   16220:	tst	r2, #8
   16224:	bne	161f0 <argp_parse@@Base+0x2e84>
   16228:	ldr	r7, [r3, #-20]	; 0xffffffec
   1622c:	sub	r3, r7, #1
   16230:	cmp	r3, #254	; 0xfe
   16234:	bhi	161f0 <argp_parse@@Base+0x2e84>
   16238:	bl	113cc <__ctype_b_loc@plt>
   1623c:	ldr	r3, [r0]
   16240:	lsl	r7, r7, #1
   16244:	ldrh	r3, [r3, r7]
   16248:	tst	r3, #16384	; 0x4000
   1624c:	addne	r8, r8, #1
   16250:	b	161f0 <argp_parse@@Base+0x2e84>
   16254:	ldr	r2, [r6, #-8]
   16258:	cmp	r2, #0
   1625c:	bne	16210 <argp_parse@@Base+0x2ea4>
   16260:	ldr	r2, [r6, #-4]
   16264:	cmp	r2, #0
   16268:	bne	16210 <argp_parse@@Base+0x2ea4>
   1626c:	ldr	r0, [fp, #4]
   16270:	rsb	r0, r0, r0, lsl #3
   16274:	lsl	r0, r0, #2
   16278:	bl	14b98 <argp_parse@@Base+0x182c>
   1627c:	str	r0, [fp]
   16280:	add	r0, r8, #1
   16284:	bl	14b98 <argp_parse@@Base+0x182c>
   16288:	str	r0, [fp, #8]
   1628c:	ldr	r8, [fp]
   16290:	cmp	r0, #0
   16294:	cmpne	r8, #0
   16298:	bne	162b0 <argp_parse@@Base+0x2f44>
   1629c:	ldr	r3, [pc, #1348]	; 167e8 <argp_parse@@Base+0x347c>
   162a0:	ldr	r2, [pc, #1364]	; 167fc <argp_parse@@Base+0x3490>
   162a4:	ldr	r1, [pc, #1348]	; 167f0 <argp_parse@@Base+0x3484>
   162a8:	ldr	r0, [pc, #1360]	; 16800 <argp_parse@@Base+0x3494>
   162ac:	bl	115a0 <__assert_fail@plt>
   162b0:	ldr	r2, [fp, #4]
   162b4:	ldr	r3, [pc, #1352]	; 16804 <argp_parse@@Base+0x3498>
   162b8:	cmp	r2, r3
   162bc:	addls	r8, r8, #28
   162c0:	movls	r7, r0
   162c4:	movls	sl, #0
   162c8:	bls	16314 <argp_parse@@Base+0x2fa8>
   162cc:	ldr	r3, [pc, #1300]	; 167e8 <argp_parse@@Base+0x347c>
   162d0:	mov	r2, #476	; 0x1dc
   162d4:	ldr	r1, [pc, #1300]	; 167f0 <argp_parse@@Base+0x3484>
   162d8:	ldr	r0, [pc, #1320]	; 16808 <argp_parse@@Base+0x349c>
   162dc:	bl	115a0 <__assert_fail@plt>
   162e0:	ldr	r3, [r5, #4]
   162e4:	cmp	r3, #0
   162e8:	addeq	r9, r4, #1
   162ec:	movne	r9, r4
   162f0:	b	16358 <argp_parse@@Base+0x2fec>
   162f4:	ldr	r3, [r5, #16]
   162f8:	cmp	r3, #0
   162fc:	bne	16704 <argp_parse@@Base+0x3398>
   16300:	ldr	r3, [r5, #20]
   16304:	cmp	r3, #0
   16308:	bne	16704 <argp_parse@@Base+0x3398>
   1630c:	add	r8, r8, #28
   16310:	mov	r4, r9
   16314:	ldr	r3, [r5, #4]
   16318:	cmp	r3, #0
   1631c:	bne	1632c <argp_parse@@Base+0x2fc0>
   16320:	ldr	r3, [r5]
   16324:	cmp	r3, #0
   16328:	beq	16370 <argp_parse@@Base+0x3004>
   1632c:	mov	r6, r8
   16330:	str	r5, [r8, #-28]	; 0xffffffe4
   16334:	str	sl, [r8, #-24]	; 0xffffffe8
   16338:	str	r7, [r8, #-20]	; 0xffffffec
   1633c:	ldr	r9, [r5, #20]
   16340:	cmp	r9, #0
   16344:	bne	16358 <argp_parse@@Base+0x2fec>
   16348:	ldr	r3, [r5]
   1634c:	cmp	r3, #0
   16350:	movne	r9, r4
   16354:	beq	162e0 <argp_parse@@Base+0x2f74>
   16358:	str	r9, [r6, #-16]
   1635c:	ldr	r3, [sp, #28]
   16360:	str	r3, [r6, #-12]
   16364:	ldr	r3, [sp, #24]
   16368:	str	r3, [r6, #-8]
   1636c:	b	16710 <argp_parse@@Base+0x33a4>
   16370:	ldr	r3, [r5, #16]
   16374:	cmp	r3, #0
   16378:	bne	1632c <argp_parse@@Base+0x2fc0>
   1637c:	ldr	r3, [r5, #20]
   16380:	cmp	r3, #0
   16384:	bne	1632c <argp_parse@@Base+0x2fc0>
   16388:	mov	r3, #0
   1638c:	strb	r3, [r7]
   16390:	ldr	r3, [sp, #8]
   16394:	cmp	r3, #0
   16398:	beq	166d4 <argp_parse@@Base+0x3368>
   1639c:	ldr	r3, [r3]
   163a0:	cmp	r3, #0
   163a4:	beq	166d4 <argp_parse@@Base+0x3368>
   163a8:	add	r3, fp, #12
   163ac:	str	r3, [sp, #44]	; 0x2c
   163b0:	str	fp, [sp, #20]
   163b4:	b	16444 <argp_parse@@Base+0x30d8>
   163b8:	ldr	r1, [sp, #28]
   163bc:	b	164c4 <argp_parse@@Base+0x3158>
   163c0:	mov	r2, r3
   163c4:	ldr	r3, [r2, #24]
   163c8:	cmp	r3, #0
   163cc:	bne	163c0 <argp_parse@@Base+0x3054>
   163d0:	add	r2, r2, #24
   163d4:	ldr	r1, [sp, #16]
   163d8:	ldr	r3, [r1, #12]
   163dc:	str	r3, [r2]
   163e0:	mov	r2, #0
   163e4:	str	r2, [r1, #12]
   163e8:	ldr	r3, [r1, #4]
   163ec:	cmp	r3, r2
   163f0:	beq	16428 <argp_parse@@Base+0x30bc>
   163f4:	ldr	r0, [sp, #20]
   163f8:	ldr	r2, [r0, #4]
   163fc:	cmp	r2, #0
   16400:	bne	164ec <argp_parse@@Base+0x3180>
   16404:	str	r3, [r0, #4]
   16408:	mov	r2, r1
   1640c:	ldr	r3, [r1]
   16410:	str	r3, [r0]
   16414:	ldr	r3, [r2, #8]
   16418:	str	r3, [r0, #8]
   1641c:	mov	r3, r2
   16420:	mov	r2, #0
   16424:	str	r2, [r3, #4]
   16428:	ldr	r0, [sp, #16]
   1642c:	bl	15014 <argp_parse@@Base+0x1ca8>
   16430:	ldr	r2, [sp, #8]
   16434:	ldr	r3, [r2, #16]!
   16438:	str	r2, [sp, #8]
   1643c:	cmp	r3, #0
   16440:	beq	166d0 <argp_parse@@Base+0x3364>
   16444:	ldr	r3, [sp, #8]
   16448:	ldr	r4, [r3, #12]
   1644c:	cmp	r4, #0
   16450:	bne	16460 <argp_parse@@Base+0x30f4>
   16454:	ldr	r3, [r3, #8]
   16458:	cmp	r3, #0
   1645c:	beq	163b8 <argp_parse@@Base+0x304c>
   16460:	ldr	r2, [sp, #8]
   16464:	ldr	r5, [r2, #8]
   16468:	ldr	r7, [sp, #24]
   1646c:	ldr	r3, [r7, #16]
   16470:	sub	r3, r2, r3
   16474:	asr	r6, r3, #4
   16478:	mov	r0, #28
   1647c:	bl	14b98 <argp_parse@@Base+0x182c>
   16480:	subs	r1, r0, #0
   16484:	beq	164c4 <argp_parse@@Base+0x3158>
   16488:	str	r4, [r1, #8]
   1648c:	str	r5, [r1]
   16490:	str	r6, [r1, #4]
   16494:	ldr	r3, [sp, #28]
   16498:	str	r3, [r1, #12]
   1649c:	str	r7, [r1, #16]
   164a0:	cmp	r3, #0
   164a4:	ldrne	r3, [r3, #20]
   164a8:	addne	r3, r3, #1
   164ac:	moveq	r3, #0
   164b0:	str	r3, [r1, #20]
   164b4:	ldr	r2, [sp, #20]
   164b8:	ldr	r3, [r2, #12]
   164bc:	str	r3, [r1, #24]
   164c0:	str	r1, [r2, #12]
   164c4:	ldr	r3, [sp, #8]
   164c8:	ldr	r0, [r3]
   164cc:	bl	16160 <argp_parse@@Base+0x2df4>
   164d0:	str	r0, [sp, #16]
   164d4:	ldr	r3, [sp, #20]
   164d8:	ldr	r2, [r3, #12]
   164dc:	cmp	r2, #0
   164e0:	ldreq	r2, [sp, #44]	; 0x2c
   164e4:	bne	163c4 <argp_parse@@Base+0x3058>
   164e8:	b	163d4 <argp_parse@@Base+0x3068>
   164ec:	add	r3, r3, r2
   164f0:	str	r3, [sp, #36]	; 0x24
   164f4:	rsb	r0, r3, r3, lsl #3
   164f8:	lsl	r0, r0, #2
   164fc:	bl	14b98 <argp_parse@@Base+0x182c>
   16500:	mov	r4, r0
   16504:	str	r0, [sp, #32]
   16508:	ldr	r3, [sp, #20]
   1650c:	ldr	r0, [r3, #8]
   16510:	bl	113e4 <strlen@plt>
   16514:	mov	r6, r0
   16518:	ldr	r3, [sp, #16]
   1651c:	ldr	r0, [r3, #8]
   16520:	bl	113e4 <strlen@plt>
   16524:	add	r0, r6, r0
   16528:	add	r0, r0, #1
   1652c:	bl	14b98 <argp_parse@@Base+0x182c>
   16530:	mov	sl, r0
   16534:	cmp	r4, #0
   16538:	cmpne	r0, #0
   1653c:	beq	16608 <argp_parse@@Base+0x329c>
   16540:	ldr	r3, [sp, #36]	; 0x24
   16544:	ldr	r2, [pc, #696]	; 16804 <argp_parse@@Base+0x3498>
   16548:	cmp	r3, r2
   1654c:	bhi	1661c <argp_parse@@Base+0x32b0>
   16550:	ldr	r5, [sp, #20]
   16554:	ldr	r2, [r5]
   16558:	mov	r1, r2
   1655c:	str	r2, [sp, #40]	; 0x28
   16560:	ldr	r4, [r5, #4]
   16564:	rsb	r7, r4, r4, lsl #3
   16568:	lsl	r7, r7, #2
   1656c:	mov	r2, r7
   16570:	ldr	r8, [sp, #32]
   16574:	mov	r0, r8
   16578:	bl	113c0 <mempcpy@plt>
   1657c:	ldr	r3, [sp, #16]
   16580:	ldr	r1, [r3, #4]
   16584:	str	r1, [sp, #4]
   16588:	rsb	r2, r1, r1, lsl #3
   1658c:	lsl	r2, r2, #2
   16590:	ldr	r1, [r3]
   16594:	bl	112b8 <memcpy@plt>
   16598:	ldr	r5, [r5, #8]
   1659c:	mov	r2, r6
   165a0:	mov	r1, r5
   165a4:	mov	r0, sl
   165a8:	bl	112b8 <memcpy@plt>
   165ac:	cmp	r4, #0
   165b0:	beq	16630 <argp_parse@@Base+0x32c4>
   165b4:	mov	r2, r8
   165b8:	ldr	r3, [r2, #8]
   165bc:	sub	r3, r3, r5
   165c0:	add	r3, sl, r3
   165c4:	str	r3, [r2, #8]
   165c8:	add	r2, r2, #28
   165cc:	subs	r4, r4, #1
   165d0:	bne	165b8 <argp_parse@@Base+0x324c>
   165d4:	ldr	r3, [sp, #32]
   165d8:	add	r7, r3, r7
   165dc:	add	r3, sl, r6
   165e0:	str	r3, [sp, #12]
   165e4:	ldr	r2, [sp, #16]
   165e8:	ldr	r8, [r2, #8]
   165ec:	ldr	r2, [sp, #4]
   165f0:	cmp	r2, #0
   165f4:	beq	16698 <argp_parse@@Base+0x332c>
   165f8:	add	r9, r7, #28
   165fc:	mov	fp, r3
   16600:	sub	r7, r3, #1
   16604:	b	16680 <argp_parse@@Base+0x3314>
   16608:	ldr	r3, [pc, #508]	; 1680c <argp_parse@@Base+0x34a0>
   1660c:	ldr	r2, [pc, #508]	; 16810 <argp_parse@@Base+0x34a4>
   16610:	ldr	r1, [pc, #472]	; 167f0 <argp_parse@@Base+0x3484>
   16614:	ldr	r0, [pc, #504]	; 16814 <argp_parse@@Base+0x34a8>
   16618:	bl	115a0 <__assert_fail@plt>
   1661c:	ldr	r3, [pc, #488]	; 1680c <argp_parse@@Base+0x34a0>
   16620:	mov	r2, #972	; 0x3cc
   16624:	ldr	r1, [pc, #452]	; 167f0 <argp_parse@@Base+0x3484>
   16628:	ldr	r0, [pc, #488]	; 16818 <argp_parse@@Base+0x34ac>
   1662c:	bl	115a0 <__assert_fail@plt>
   16630:	ldr	r7, [sp, #32]
   16634:	b	165dc <argp_parse@@Base+0x3270>
   16638:	ldr	r3, [sp, #12]
   1663c:	cmp	sl, r3
   16640:	bcs	167d8 <argp_parse@@Base+0x346c>
   16644:	ldrb	r3, [sl]
   16648:	cmp	r3, r1
   1664c:	beq	167e0 <argp_parse@@Base+0x3474>
   16650:	mov	r3, sl
   16654:	cmp	r7, r3
   16658:	beq	167d8 <argp_parse@@Base+0x346c>
   1665c:	ldrb	r2, [r3, #1]!
   16660:	cmp	r2, r1
   16664:	bne	16654 <argp_parse@@Base+0x32e8>
   16668:	b	167e0 <argp_parse@@Base+0x3474>
   1666c:	add	r9, r9, #28
   16670:	ldr	r3, [sp, #4]
   16674:	subs	r3, r3, #1
   16678:	str	r3, [sp, #4]
   1667c:	beq	1669c <argp_parse@@Base+0x3330>
   16680:	str	fp, [r9, #-20]	; 0xffffffec
   16684:	ldr	r5, [r9, #-24]	; 0xffffffe8
   16688:	ldr	r4, [r9, #-28]	; 0xffffffe4
   1668c:	cmp	r5, #0
   16690:	bne	167a0 <argp_parse@@Base+0x3434>
   16694:	b	1666c <argp_parse@@Base+0x3300>
   16698:	ldr	fp, [sp, #12]
   1669c:	mov	r3, #0
   166a0:	strb	r3, [fp]
   166a4:	ldr	r0, [sp, #40]	; 0x28
   166a8:	bl	13f60 <argp_parse@@Base+0xbf4>
   166ac:	ldr	r4, [sp, #20]
   166b0:	ldr	r0, [r4, #8]
   166b4:	bl	13f60 <argp_parse@@Base+0xbf4>
   166b8:	ldr	r2, [sp, #32]
   166bc:	str	r2, [r4]
   166c0:	ldr	r2, [sp, #36]	; 0x24
   166c4:	str	r2, [r4, #4]
   166c8:	str	sl, [r4, #8]
   166cc:	b	16428 <argp_parse@@Base+0x30bc>
   166d0:	ldr	fp, [sp, #20]
   166d4:	mov	r0, fp
   166d8:	add	sp, sp, #52	; 0x34
   166dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   166e0:	strb	r4, [r7]
   166e4:	add	r7, r7, #1
   166e8:	add	r5, r5, #24
   166ec:	ldr	r3, [r5, #4]
   166f0:	cmp	r3, #0
   166f4:	bne	16704 <argp_parse@@Base+0x3398>
   166f8:	ldr	r3, [r5]
   166fc:	cmp	r3, #0
   16700:	beq	162f4 <argp_parse@@Base+0x2f88>
   16704:	ldr	r3, [r5, #12]
   16708:	tst	r3, #4
   1670c:	beq	1630c <argp_parse@@Base+0x2fa0>
   16710:	ldr	r3, [r6, #-24]	; 0xffffffe8
   16714:	add	r3, r3, #1
   16718:	str	r3, [r6, #-24]	; 0xffffffe8
   1671c:	ldr	r3, [r5, #12]
   16720:	tst	r3, #8
   16724:	bne	166e8 <argp_parse@@Base+0x337c>
   16728:	ldr	r4, [r5, #4]
   1672c:	sub	r3, r4, #1
   16730:	cmp	r3, #254	; 0xfe
   16734:	bhi	166e8 <argp_parse@@Base+0x337c>
   16738:	bl	113cc <__ctype_b_loc@plt>
   1673c:	ldr	r2, [r0]
   16740:	lsl	r3, r4, #1
   16744:	ldrh	r3, [r2, r3]
   16748:	tst	r3, #16384	; 0x4000
   1674c:	beq	166e8 <argp_parse@@Base+0x337c>
   16750:	uxtb	r4, r4
   16754:	ldr	r3, [fp, #8]
   16758:	cmp	r3, r7
   1675c:	bcs	166e0 <argp_parse@@Base+0x3374>
   16760:	ldrb	r2, [r3]
   16764:	cmp	r2, r4
   16768:	beq	166e8 <argp_parse@@Base+0x337c>
   1676c:	sub	r1, r7, #1
   16770:	cmp	r3, r1
   16774:	beq	166e0 <argp_parse@@Base+0x3374>
   16778:	ldrb	r2, [r3, #1]!
   1677c:	cmp	r2, r4
   16780:	bne	16770 <argp_parse@@Base+0x3404>
   16784:	b	166e8 <argp_parse@@Base+0x337c>
   16788:	ldrb	r1, [r8]
   1678c:	cmp	r1, r6
   16790:	beq	16638 <argp_parse@@Base+0x32cc>
   16794:	add	r4, r4, #24
   16798:	subs	r5, r5, #1
   1679c:	beq	1666c <argp_parse@@Base+0x3300>
   167a0:	ldr	r3, [r4, #12]
   167a4:	tst	r3, #8
   167a8:	bne	16794 <argp_parse@@Base+0x3428>
   167ac:	ldr	r6, [r4, #4]
   167b0:	sub	r3, r6, #1
   167b4:	cmp	r3, #254	; 0xfe
   167b8:	bhi	16794 <argp_parse@@Base+0x3428>
   167bc:	bl	113cc <__ctype_b_loc@plt>
   167c0:	ldr	r2, [r0]
   167c4:	lsl	r3, r6, #1
   167c8:	ldrh	r3, [r2, r3]
   167cc:	tst	r3, #16384	; 0x4000
   167d0:	bne	16788 <argp_parse@@Base+0x341c>
   167d4:	b	16794 <argp_parse@@Base+0x3428>
   167d8:	strb	r1, [fp]
   167dc:	add	fp, fp, #1
   167e0:	add	r8, r8, #1
   167e4:	b	16794 <argp_parse@@Base+0x3428>
   167e8:	andeq	sl, r1, r8, lsr r0
   167ec:	andeq	r0, r0, r2, asr #3
   167f0:	andeq	sl, r1, r8, lsr #2
   167f4:	andeq	sl, r1, r4, lsr r1
   167f8:	andeq	sl, r1, r8, lsr r1
   167fc:	ldrdeq	r0, [r0], -sl
   16800:	andeq	sl, r1, r8, asr #2
   16804:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   16808:	andeq	sl, r1, ip, ror #2
   1680c:	andeq	sl, r1, r4, asr #32
   16810:	andeq	r0, r0, sl, asr #7
   16814:	andeq	sl, r1, r8, lsr #3
   16818:	andeq	sl, r1, r4, asr #3

0001681c <argp_failure@@Base>:
   1681c:	push	{r3}		; (str r3, [sp, #-4]!)
   16820:	push	{r4, r5, r6, r7, lr}
   16824:	sub	sp, sp, #200	; 0xc8
   16828:	mov	r7, r1
   1682c:	mov	r6, r2
   16830:	subs	r5, r0, #0
   16834:	beq	16984 <argp_failure@@Base+0x168>
   16838:	ldr	r3, [r5, #16]
   1683c:	tst	r3, #2
   16840:	bne	16974 <argp_failure@@Base+0x158>
   16844:	ldr	r4, [r5, #44]	; 0x2c
   16848:	cmp	r4, #0
   1684c:	beq	16974 <argp_failure@@Base+0x158>
   16850:	mov	r0, r4
   16854:	bl	11510 <flockfile@plt>
   16858:	ldr	r0, [r5, #40]	; 0x28
   1685c:	mov	r1, r4
   16860:	bl	11210 <fputs_unlocked@plt>
   16864:	ldr	r3, [sp, #220]	; 0xdc
   16868:	cmp	r3, #0
   1686c:	beq	168c8 <argp_failure@@Base+0xac>
   16870:	add	r3, sp, #224	; 0xe0
   16874:	str	r3, [sp]
   16878:	ldr	r3, [r4, #20]
   1687c:	ldr	r2, [r4, #24]
   16880:	cmp	r3, r2
   16884:	addcc	r2, r3, #1
   16888:	strcc	r2, [r4, #20]
   1688c:	movcc	r2, #58	; 0x3a
   16890:	strbcc	r2, [r3]
   16894:	bcs	169a8 <argp_failure@@Base+0x18c>
   16898:	ldr	r3, [r4, #20]
   1689c:	ldr	r2, [r4, #24]
   168a0:	cmp	r3, r2
   168a4:	addcc	r2, r3, #1
   168a8:	strcc	r2, [r4, #20]
   168ac:	movcc	r2, #32
   168b0:	strbcc	r2, [r3]
   168b4:	bcs	169b8 <argp_failure@@Base+0x19c>
   168b8:	ldr	r2, [sp]
   168bc:	ldr	r1, [sp, #220]	; 0xdc
   168c0:	mov	r0, r4
   168c4:	bl	114b0 <vfprintf@plt>
   168c8:	cmp	r6, #0
   168cc:	beq	16930 <argp_failure@@Base+0x114>
   168d0:	ldr	r3, [r4, #20]
   168d4:	ldr	r2, [r4, #24]
   168d8:	cmp	r3, r2
   168dc:	addcc	r2, r3, #1
   168e0:	strcc	r2, [r4, #20]
   168e4:	movcc	r2, #58	; 0x3a
   168e8:	strbcc	r2, [r3]
   168ec:	bcs	169c8 <argp_failure@@Base+0x1ac>
   168f0:	ldr	r3, [r4, #20]
   168f4:	ldr	r2, [r4, #24]
   168f8:	cmp	r3, r2
   168fc:	addcc	r2, r3, #1
   16900:	strcc	r2, [r4, #20]
   16904:	movcc	r2, #32
   16908:	strbcc	r2, [r3]
   1690c:	bcs	169d8 <argp_failure@@Base+0x1bc>
   16910:	mov	r2, #200	; 0xc8
   16914:	mov	r1, sp
   16918:	mov	r0, r6
   1691c:	bl	11414 <strerror_r@plt>
   16920:	cmp	r0, #0
   16924:	beq	169e8 <argp_failure@@Base+0x1cc>
   16928:	mov	r1, r4
   1692c:	bl	11210 <fputs_unlocked@plt>
   16930:	ldr	r3, [r4, #20]
   16934:	ldr	r2, [r4, #24]
   16938:	cmp	r3, r2
   1693c:	addcc	r2, r3, #1
   16940:	strcc	r2, [r4, #20]
   16944:	movcc	r2, #10
   16948:	strbcc	r2, [r3]
   1694c:	bcs	16a00 <argp_failure@@Base+0x1e4>
   16950:	mov	r0, r4
   16954:	bl	11324 <funlockfile@plt>
   16958:	cmp	r7, #0
   1695c:	beq	16974 <argp_failure@@Base+0x158>
   16960:	cmp	r5, #0
   16964:	beq	16a10 <argp_failure@@Base+0x1f4>
   16968:	ldr	r3, [r5, #16]
   1696c:	tst	r3, #32
   16970:	beq	16a10 <argp_failure@@Base+0x1f4>
   16974:	add	sp, sp, #200	; 0xc8
   16978:	pop	{r4, r5, r6, r7, lr}
   1697c:	add	sp, sp, #4
   16980:	bx	lr
   16984:	ldr	r3, [pc, #140]	; 16a18 <argp_failure@@Base+0x1fc>
   16988:	ldr	r4, [r3]
   1698c:	cmp	r4, #0
   16990:	beq	16974 <argp_failure@@Base+0x158>
   16994:	mov	r0, r4
   16998:	bl	11510 <flockfile@plt>
   1699c:	ldr	r3, [pc, #120]	; 16a1c <argp_failure@@Base+0x200>
   169a0:	ldr	r0, [r3]
   169a4:	b	1685c <argp_failure@@Base+0x40>
   169a8:	mov	r1, #58	; 0x3a
   169ac:	mov	r0, r4
   169b0:	bl	11480 <__overflow@plt>
   169b4:	b	16898 <argp_failure@@Base+0x7c>
   169b8:	mov	r1, #32
   169bc:	mov	r0, r4
   169c0:	bl	11480 <__overflow@plt>
   169c4:	b	168b8 <argp_failure@@Base+0x9c>
   169c8:	mov	r1, #58	; 0x3a
   169cc:	mov	r0, r4
   169d0:	bl	11480 <__overflow@plt>
   169d4:	b	168f0 <argp_failure@@Base+0xd4>
   169d8:	mov	r1, #32
   169dc:	mov	r0, r4
   169e0:	bl	11480 <__overflow@plt>
   169e4:	b	16910 <argp_failure@@Base+0xf4>
   169e8:	mov	r0, r6
   169ec:	bl	1139c <strerror@plt>
   169f0:	ldr	r3, [pc, #40]	; 16a20 <argp_failure@@Base+0x204>
   169f4:	cmp	r0, #0
   169f8:	moveq	r0, r3
   169fc:	b	16928 <argp_failure@@Base+0x10c>
   16a00:	mov	r1, #10
   16a04:	mov	r0, r4
   16a08:	bl	11480 <__overflow@plt>
   16a0c:	b	16950 <argp_failure@@Base+0x134>
   16a10:	mov	r0, r7
   16a14:	bl	113d8 <exit@plt>
   16a18:	strdeq	fp, [r2], -r0
   16a1c:	andeq	fp, r2, r8, ror #5
   16a20:	strdeq	sl, [r1], -r8
   16a24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a28:	add	fp, sp, #32
   16a2c:	sub	sp, sp, #108	; 0x6c
   16a30:	str	r0, [fp, #-112]	; 0xffffff90
   16a34:	str	r1, [fp, #-100]	; 0xffffff9c
   16a38:	str	r3, [fp, #-104]	; 0xffffff98
   16a3c:	subs	r3, r2, #0
   16a40:	str	r3, [fp, #-132]	; 0xffffff7c
   16a44:	beq	17ab0 <argp_failure@@Base+0x1294>
   16a48:	mov	r0, r3
   16a4c:	bl	11510 <flockfile@plt>
   16a50:	ldr	r3, [pc, #3772]	; 17914 <argp_failure@@Base+0x10f8>
   16a54:	ldr	r3, [r3, #36]	; 0x24
   16a58:	str	r3, [fp, #-108]	; 0xffffff94
   16a5c:	cmp	r3, #0
   16a60:	beq	16b38 <argp_failure@@Base+0x31c>
   16a64:	mov	r3, #0
   16a68:	ldr	r2, [pc, #3748]	; 17914 <argp_failure@@Base+0x10f8>
   16a6c:	ldr	r2, [r2, #32]
   16a70:	mov	r1, r3
   16a74:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16a78:	bl	189f8 <argp_error@@Base+0xd60>
   16a7c:	subs	sl, r0, #0
   16a80:	beq	16ee4 <argp_failure@@Base+0x6c8>
   16a84:	ldr	r3, [fp, #-104]	; 0xffffff98
   16a88:	tst	r3, #11
   16a8c:	moveq	r3, #0
   16a90:	streq	r3, [fp, #-108]	; 0xffffff94
   16a94:	bne	16ef0 <argp_failure@@Base+0x6d4>
   16a98:	ldr	r3, [fp, #-104]	; 0xffffff98
   16a9c:	tst	r3, #3
   16aa0:	moveq	r4, #0
   16aa4:	bne	16f74 <argp_failure@@Base+0x758>
   16aa8:	ldr	r3, [fp, #-104]	; 0xffffff98
   16aac:	tst	r3, #16
   16ab0:	bne	17170 <argp_failure@@Base+0x954>
   16ab4:	ldr	r3, [fp, #-104]	; 0xffffff98
   16ab8:	tst	r3, #4
   16abc:	bne	17198 <argp_failure@@Base+0x97c>
   16ac0:	ldr	r3, [fp, #-104]	; 0xffffff98
   16ac4:	tst	r3, #8
   16ac8:	beq	17a24 <argp_failure@@Base+0x1208>
   16acc:	ldr	r3, [fp, #-108]	; 0xffffff94
   16ad0:	ldr	r3, [r3, #4]
   16ad4:	cmp	r3, #0
   16ad8:	beq	17a24 <argp_failure@@Base+0x1208>
   16adc:	cmp	r4, #0
   16ae0:	beq	16b08 <argp_failure@@Base+0x2ec>
   16ae4:	ldr	r2, [sl, #28]
   16ae8:	ldr	r3, [sl, #32]
   16aec:	cmp	r2, r3
   16af0:	bcs	171b4 <argp_failure@@Base+0x998>
   16af4:	ldr	r3, [sl, #28]
   16af8:	add	r2, r3, #1
   16afc:	str	r2, [sl, #28]
   16b00:	mov	r2, #10
   16b04:	strb	r2, [r3]
   16b08:	mov	r3, #0
   16b0c:	str	r3, [fp, #-88]	; 0xffffffa8
   16b10:	str	r3, [fp, #-84]	; 0xffffffac
   16b14:	str	r3, [fp, #-80]	; 0xffffffb0
   16b18:	ldr	r3, [fp, #-108]	; 0xffffff94
   16b1c:	ldr	r2, [r3]
   16b20:	str	r2, [fp, #-96]	; 0xffffffa0
   16b24:	ldr	r3, [r3, #4]
   16b28:	str	r3, [fp, #-120]	; 0xffffff88
   16b2c:	cmp	r3, #0
   16b30:	bne	1759c <argp_failure@@Base+0xd80>
   16b34:	b	17a20 <argp_failure@@Base+0x1204>
   16b38:	ldr	r0, [pc, #3452]	; 178bc <argp_failure@@Base+0x10a0>
   16b3c:	bl	1136c <getenv@plt>
   16b40:	mov	r9, r0
   16b44:	sub	ip, fp, #76	; 0x4c
   16b48:	ldr	lr, [pc, #3524]	; 17914 <argp_failure@@Base+0x10f8>
   16b4c:	ldm	lr!, {r0, r1, r2, r3}
   16b50:	stmia	ip!, {r0, r1, r2, r3}
   16b54:	ldm	lr!, {r0, r1, r2, r3}
   16b58:	stmia	ip!, {r0, r1, r2, r3}
   16b5c:	ldm	lr, {r0, r1}
   16b60:	stm	ip, {r0, r1}
   16b64:	cmp	r9, #0
   16b68:	ldrne	sl, [pc, #3408]	; 178c0 <argp_failure@@Base+0x10a4>
   16b6c:	addne	r8, sl, #168	; 0xa8
   16b70:	bne	16e14 <argp_failure@@Base+0x5f8>
   16b74:	b	16a64 <argp_failure@@Base+0x248>
   16b78:	mov	r5, r3
   16b7c:	mov	r9, r5
   16b80:	mov	r3, r5
   16b84:	ldrb	r0, [r3], #1
   16b88:	lsl	r2, r0, #1
   16b8c:	ldrh	r2, [r1, r2]
   16b90:	tst	r2, #8192	; 0x2000
   16b94:	bne	16b78 <argp_failure@@Base+0x35c>
   16b98:	tst	r2, #1024	; 0x400
   16b9c:	beq	16e0c <argp_failure@@Base+0x5f0>
   16ba0:	cmp	r0, #95	; 0x5f
   16ba4:	cmpne	r0, #45	; 0x2d
   16ba8:	moveq	r3, #1
   16bac:	movne	r3, #0
   16bb0:	lsl	r2, r2, #28
   16bb4:	orrs	r3, r3, r2, lsr #31
   16bb8:	beq	17b34 <argp_failure@@Base+0x1318>
   16bbc:	mov	r4, r5
   16bc0:	ldrb	r3, [r4, #1]!
   16bc4:	lsl	r2, r3, #1
   16bc8:	ldrh	r2, [r1, r2]
   16bcc:	lsl	r2, r2, #28
   16bd0:	cmp	r3, #95	; 0x5f
   16bd4:	cmpne	r3, #45	; 0x2d
   16bd8:	moveq	r3, #1
   16bdc:	movne	r3, #0
   16be0:	orrs	r3, r3, r2, lsr #31
   16be4:	bne	16bc0 <argp_failure@@Base+0x3a4>
   16be8:	sub	r5, r4, r5
   16bec:	ldrb	r3, [r4]
   16bf0:	lsl	r2, r3, #1
   16bf4:	ldrh	r2, [r1, r2]
   16bf8:	tst	r2, #8192	; 0x2000
   16bfc:	beq	16c14 <argp_failure@@Base+0x3f8>
   16c00:	ldrb	r3, [r4, #1]!
   16c04:	lsl	r2, r3, #1
   16c08:	ldrh	r2, [r1, r2]
   16c0c:	tst	r2, #8192	; 0x2000
   16c10:	bne	16c00 <argp_failure@@Base+0x3e4>
   16c14:	cmp	r3, #44	; 0x2c
   16c18:	cmpne	r3, #0
   16c1c:	beq	17b4c <argp_failure@@Base+0x1330>
   16c20:	cmp	r3, #61	; 0x3d
   16c24:	beq	16c4c <argp_failure@@Base+0x430>
   16c28:	ldrb	r3, [r4]
   16c2c:	lsl	r3, r3, #1
   16c30:	ldrh	r3, [r1, r3]
   16c34:	tst	r3, #2048	; 0x800
   16c38:	bne	16ccc <argp_failure@@Base+0x4b0>
   16c3c:	ldr	r3, [fp, #-108]	; 0xffffff94
   16c40:	str	r3, [fp, #-96]	; 0xffffffa0
   16c44:	str	r3, [fp, #-116]	; 0xffffff8c
   16c48:	b	17b60 <argp_failure@@Base+0x1344>
   16c4c:	add	r2, r4, #1
   16c50:	ldrb	r3, [r4, #1]
   16c54:	lsl	r3, r3, #1
   16c58:	ldrh	r3, [r1, r3]
   16c5c:	tst	r3, #8192	; 0x2000
   16c60:	beq	17b44 <argp_failure@@Base+0x1328>
   16c64:	ldrb	r3, [r2, #1]!
   16c68:	lsl	r3, r3, #1
   16c6c:	ldrh	r3, [r1, r3]
   16c70:	tst	r3, #8192	; 0x2000
   16c74:	bne	16c64 <argp_failure@@Base+0x448>
   16c78:	mov	r4, r2
   16c7c:	b	16c28 <argp_failure@@Base+0x40c>
   16c80:	ldrb	r3, [r9, #1]
   16c84:	cmp	r3, #111	; 0x6f
   16c88:	movne	r3, #1
   16c8c:	strne	r3, [fp, #-96]	; 0xffffffa0
   16c90:	strne	r3, [fp, #-116]	; 0xffffff8c
   16c94:	bne	17b60 <argp_failure@@Base+0x1344>
   16c98:	ldrb	r3, [r9, #2]
   16c9c:	cmp	r3, #45	; 0x2d
   16ca0:	movne	r3, #1
   16ca4:	strne	r3, [fp, #-96]	; 0xffffffa0
   16ca8:	strne	r3, [fp, #-116]	; 0xffffff8c
   16cac:	bne	17b60 <argp_failure@@Base+0x1344>
   16cb0:	add	r9, r9, #3
   16cb4:	sub	r5, r5, #3
   16cb8:	ldr	r3, [fp, #-108]	; 0xffffff94
   16cbc:	str	r3, [fp, #-116]	; 0xffffff8c
   16cc0:	mov	r3, #1
   16cc4:	str	r3, [fp, #-96]	; 0xffffffa0
   16cc8:	b	17b60 <argp_failure@@Base+0x1344>
   16ccc:	mov	r2, #10
   16cd0:	mov	r1, #0
   16cd4:	mov	r0, r4
   16cd8:	bl	1124c <strtol@plt>
   16cdc:	str	r0, [fp, #-116]	; 0xffffff8c
   16ce0:	ldr	r2, [r6]
   16ce4:	ldrb	r3, [r4]
   16ce8:	lsl	r3, r3, #1
   16cec:	ldrh	r3, [r2, r3]
   16cf0:	tst	r3, #2048	; 0x800
   16cf4:	beq	16d0c <argp_failure@@Base+0x4f0>
   16cf8:	ldrb	r3, [r4, #1]!
   16cfc:	lsl	r3, r3, #1
   16d00:	ldrh	r3, [r2, r3]
   16d04:	tst	r3, #2048	; 0x800
   16d08:	bne	16cf8 <argp_failure@@Base+0x4dc>
   16d0c:	ldrb	r3, [r4]
   16d10:	lsl	r3, r3, #1
   16d14:	ldrh	r3, [r2, r3]
   16d18:	tst	r3, #8192	; 0x2000
   16d1c:	beq	16d40 <argp_failure@@Base+0x524>
   16d20:	ldrb	r3, [r4, #1]!
   16d24:	lsl	r3, r3, #1
   16d28:	ldrh	r3, [r2, r3]
   16d2c:	tst	r3, #8192	; 0x2000
   16d30:	bne	16d20 <argp_failure@@Base+0x504>
   16d34:	ldr	r3, [fp, #-108]	; 0xffffff94
   16d38:	str	r3, [fp, #-96]	; 0xffffffa0
   16d3c:	b	17b60 <argp_failure@@Base+0x1344>
   16d40:	ldr	r3, [fp, #-108]	; 0xffffff94
   16d44:	str	r3, [fp, #-96]	; 0xffffffa0
   16d48:	b	17b60 <argp_failure@@Base+0x1344>
   16d4c:	str	r9, [sp, #4]
   16d50:	str	r7, [sp]
   16d54:	ldr	r3, [pc, #2920]	; 178c4 <argp_failure@@Base+0x10a8>
   16d58:	mov	r2, #0
   16d5c:	mov	r1, r2
   16d60:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16d64:	bl	1681c <argp_failure@@Base>
   16d68:	b	16dd0 <argp_failure@@Base+0x5b4>
   16d6c:	add	r6, r6, #16
   16d70:	cmp	r6, r8
   16d74:	beq	16dec <argp_failure@@Base+0x5d0>
   16d78:	mov	r0, r6
   16d7c:	bl	113e4 <strlen@plt>
   16d80:	mov	r7, r0
   16d84:	cmp	r0, r5
   16d88:	bne	16d6c <argp_failure@@Base+0x550>
   16d8c:	mov	r2, r5
   16d90:	mov	r1, r6
   16d94:	mov	r0, r9
   16d98:	bl	1154c <strncmp@plt>
   16d9c:	cmp	r0, #0
   16da0:	bne	16d6c <argp_failure@@Base+0x550>
   16da4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16da8:	cmp	r3, #0
   16dac:	beq	16dbc <argp_failure@@Base+0x5a0>
   16db0:	ldrb	r3, [r6, #14]
   16db4:	cmp	r3, #0
   16db8:	beq	16d4c <argp_failure@@Base+0x530>
   16dbc:	ldrb	r3, [r6, #15]
   16dc0:	sub	r2, fp, #36	; 0x24
   16dc4:	add	r3, r2, r3
   16dc8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   16dcc:	str	r2, [r3, #-40]	; 0xffffffd8
   16dd0:	cmp	r6, r8
   16dd4:	beq	16dec <argp_failure@@Base+0x5d0>
   16dd8:	ldrb	r3, [r4]
   16ddc:	cmp	r3, #44	; 0x2c
   16de0:	addeq	r9, r4, #1
   16de4:	movne	r9, r4
   16de8:	b	16e14 <argp_failure@@Base+0x5f8>
   16dec:	str	r9, [sp, #4]
   16df0:	str	r5, [sp]
   16df4:	ldr	r3, [pc, #2764]	; 178c8 <argp_failure@@Base+0x10ac>
   16df8:	mov	r2, #0
   16dfc:	mov	r1, r2
   16e00:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16e04:	bl	1681c <argp_failure@@Base>
   16e08:	b	16dd8 <argp_failure@@Base+0x5bc>
   16e0c:	cmp	r0, #0
   16e10:	bne	16e34 <argp_failure@@Base+0x618>
   16e14:	ldrb	r3, [r9]
   16e18:	cmp	r3, #0
   16e1c:	beq	16e4c <argp_failure@@Base+0x630>
   16e20:	bl	113cc <__ctype_b_loc@plt>
   16e24:	mov	r6, r0
   16e28:	ldr	r1, [r0]
   16e2c:	mov	r5, r9
   16e30:	b	16b7c <argp_failure@@Base+0x360>
   16e34:	str	r5, [sp]
   16e38:	ldr	r3, [pc, #2700]	; 178cc <argp_failure@@Base+0x10b0>
   16e3c:	mov	r2, #0
   16e40:	mov	r1, r2
   16e44:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16e48:	bl	1681c <argp_failure@@Base>
   16e4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16e50:	ldr	r3, [pc, #2680]	; 178d0 <argp_failure@@Base+0x10b4>
   16e54:	add	r1, r3, #144	; 0x90
   16e58:	add	r3, r3, #16
   16e5c:	cmp	r3, r1
   16e60:	beq	16eb4 <argp_failure@@Base+0x698>
   16e64:	ldrb	r2, [r3, #14]
   16e68:	cmp	r2, #0
   16e6c:	bne	16e58 <argp_failure@@Base+0x63c>
   16e70:	ldrb	r2, [r3, #15]
   16e74:	cmp	r2, #32
   16e78:	beq	16e58 <argp_failure@@Base+0x63c>
   16e7c:	sub	ip, fp, #36	; 0x24
   16e80:	add	r2, ip, r2
   16e84:	ldr	r2, [r2, #-40]	; 0xffffffd8
   16e88:	cmp	r2, r0
   16e8c:	blt	16e58 <argp_failure@@Base+0x63c>
   16e90:	str	r3, [sp, #4]
   16e94:	ldr	r3, [pc, #2616]	; 178d4 <argp_failure@@Base+0x10b8>
   16e98:	str	r3, [sp]
   16e9c:	ldr	r3, [pc, #2612]	; 178d8 <argp_failure@@Base+0x10bc>
   16ea0:	mov	r2, #0
   16ea4:	mov	r1, r2
   16ea8:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16eac:	bl	1681c <argp_failure@@Base>
   16eb0:	b	16a64 <argp_failure@@Base+0x248>
   16eb4:	ldr	r4, [pc, #2648]	; 17914 <argp_failure@@Base+0x10f8>
   16eb8:	mov	ip, r4
   16ebc:	sub	lr, fp, #76	; 0x4c
   16ec0:	ldm	lr!, {r0, r1, r2, r3}
   16ec4:	stmia	ip!, {r0, r1, r2, r3}
   16ec8:	ldm	lr!, {r0, r1, r2, r3}
   16ecc:	stmia	ip!, {r0, r1, r2, r3}
   16ed0:	ldm	lr, {r0, r1}
   16ed4:	stm	ip, {r0, r1}
   16ed8:	mov	r3, #1
   16edc:	str	r3, [r4, #36]	; 0x24
   16ee0:	b	16a64 <argp_failure@@Base+0x248>
   16ee4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16ee8:	bl	11324 <funlockfile@plt>
   16eec:	b	17ab0 <argp_failure@@Base+0x1294>
   16ef0:	mov	r1, #0
   16ef4:	ldr	r0, [fp, #-112]	; 0xffffff90
   16ef8:	bl	16160 <argp_parse@@Base+0x2df4>
   16efc:	str	r0, [fp, #-108]	; 0xffffff94
   16f00:	ldr	r1, [pc, #2516]	; 178dc <argp_failure@@Base+0x10c0>
   16f04:	bl	15068 <argp_parse@@Base+0x1cfc>
   16f08:	cmp	r0, #0
   16f0c:	mvnne	r3, #0
   16f10:	strne	r3, [r0, #12]
   16f14:	ldr	r1, [pc, #2500]	; 178e0 <argp_failure@@Base+0x10c4>
   16f18:	ldr	r0, [fp, #-108]	; 0xffffff94
   16f1c:	bl	15068 <argp_parse@@Base+0x1cfc>
   16f20:	cmp	r0, #0
   16f24:	mvnne	r3, #0
   16f28:	strne	r3, [r0, #12]
   16f2c:	ldr	r0, [fp, #-108]	; 0xffffff94
   16f30:	ldr	r3, [r0, #4]
   16f34:	cmp	r3, #0
   16f38:	beq	16a98 <argp_failure@@Base+0x27c>
   16f3c:	ldr	r2, [r0]
   16f40:	mov	r3, #0
   16f44:	str	r3, [r2, #24]
   16f48:	add	r3, r3, #1
   16f4c:	add	r2, r2, #28
   16f50:	ldr	r1, [r0, #4]
   16f54:	cmp	r3, r1
   16f58:	bcc	16f44 <argp_failure@@Base+0x728>
   16f5c:	ldr	r3, [pc, #2432]	; 178e4 <argp_failure@@Base+0x10c8>
   16f60:	mov	r2, #28
   16f64:	ldr	r0, [fp, #-108]	; 0xffffff94
   16f68:	ldr	r0, [r0]
   16f6c:	bl	11528 <qsort@plt>
   16f70:	b	16a98 <argp_failure@@Base+0x27c>
   16f74:	ldr	r0, [fp, #-112]	; 0xffffff90
   16f78:	bl	15100 <argp_parse@@Base+0x1d94>
   16f7c:	mov	r2, r0
   16f80:	add	r3, r0, #14
   16f84:	bic	r3, r3, #7
   16f88:	sub	sp, sp, r3
   16f8c:	add	r8, sp, #8
   16f90:	mov	r1, #0
   16f94:	mov	r0, r8
   16f98:	bl	1142c <memset@plt>
   16f9c:	mov	r5, #1
   16fa0:	ldr	r4, [pc, #2412]	; 17914 <argp_failure@@Base+0x10f8>
   16fa4:	ldr	r9, [pc, #2364]	; 178e8 <argp_failure@@Base+0x10cc>
   16fa8:	str	r8, [fp, #-96]	; 0xffffffa0
   16fac:	ldr	r8, [fp, #-104]	; 0xffffff98
   16fb0:	b	17060 <argp_failure@@Base+0x844>
   16fb4:	mov	r0, sl
   16fb8:	bl	18a70 <argp_error@@Base+0xdd8>
   16fbc:	b	1707c <argp_failure@@Base+0x860>
   16fc0:	mov	r0, sl
   16fc4:	bl	18a70 <argp_error@@Base+0xdd8>
   16fc8:	b	170c4 <argp_failure@@Base+0x8a8>
   16fcc:	mov	r1, sl
   16fd0:	ldr	r0, [fp, #-108]	; 0xffffff94
   16fd4:	bl	14e58 <argp_parse@@Base+0x1aec>
   16fd8:	orr	r8, r8, #2
   16fdc:	str	sl, [sp]
   16fe0:	mov	r3, #1
   16fe4:	sub	r2, fp, #76	; 0x4c
   16fe8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16fec:	ldr	r0, [fp, #-112]	; 0xffffff90
   16ff0:	bl	15380 <argp_parse@@Base+0x2014>
   16ff4:	mov	r6, r0
   16ff8:	ldr	r3, [sl, #28]
   16ffc:	ldr	r2, [sl, #24]
   17000:	sub	r3, r3, r2
   17004:	ldr	r2, [sl, #16]
   17008:	cmp	r3, r2
   1700c:	bhi	17134 <argp_failure@@Base+0x918>
   17010:	str	r7, [sl, #12]
   17014:	ldr	r3, [sl, #28]
   17018:	ldr	r2, [sl, #24]
   1701c:	sub	r3, r3, r2
   17020:	ldr	r2, [sl, #16]
   17024:	cmp	r3, r2
   17028:	bhi	17140 <argp_failure@@Base+0x924>
   1702c:	str	r5, [sl, #4]
   17030:	ldr	r2, [sl, #28]
   17034:	ldr	r3, [sl, #32]
   17038:	cmp	r2, r3
   1703c:	bcs	1714c <argp_failure@@Base+0x930>
   17040:	ldr	r3, [sl, #28]
   17044:	add	r2, r3, #1
   17048:	str	r2, [sl, #28]
   1704c:	mov	r2, #10
   17050:	strb	r2, [r3]
   17054:	mov	r5, #0
   17058:	cmp	r6, r5
   1705c:	beq	17164 <argp_failure@@Base+0x948>
   17060:	ldr	r6, [r4, #28]
   17064:	ldr	r3, [sl, #28]
   17068:	ldr	r2, [sl, #24]
   1706c:	sub	r3, r3, r2
   17070:	ldr	r2, [sl, #16]
   17074:	cmp	r3, r2
   17078:	bhi	16fb4 <argp_failure@@Base+0x798>
   1707c:	ldr	r7, [sl, #12]
   17080:	str	r6, [sl, #12]
   17084:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17088:	str	r3, [fp, #-76]	; 0xffffffb4
   1708c:	cmp	r5, #0
   17090:	ldr	r3, [fp, #4]
   17094:	ldrne	r2, [pc, #2128]	; 178ec <argp_failure@@Base+0x10d0>
   17098:	ldreq	r2, [pc, #2128]	; 178f0 <argp_failure@@Base+0x10d4>
   1709c:	mov	r1, r9
   170a0:	mov	r0, sl
   170a4:	bl	19104 <argp_error@@Base+0x146c>
   170a8:	ldr	r6, [r4, #28]
   170ac:	ldr	r3, [sl, #28]
   170b0:	ldr	r2, [sl, #24]
   170b4:	sub	r3, r3, r2
   170b8:	ldr	r2, [sl, #16]
   170bc:	cmp	r3, r2
   170c0:	bhi	16fc0 <argp_failure@@Base+0x7a4>
   170c4:	ldr	r5, [sl, #4]
   170c8:	str	r6, [sl, #4]
   170cc:	tst	r8, #2
   170d0:	beq	16fcc <argp_failure@@Base+0x7b0>
   170d4:	ldr	r3, [fp, #-108]	; 0xffffff94
   170d8:	ldr	r3, [r3, #4]
   170dc:	cmp	r3, #0
   170e0:	beq	16fdc <argp_failure@@Base+0x7c0>
   170e4:	ldr	r3, [sl, #28]
   170e8:	add	r3, r3, #12
   170ec:	ldr	r2, [sl, #32]
   170f0:	cmp	r2, r3
   170f4:	bcs	1710c <argp_failure@@Base+0x8f0>
   170f8:	mov	r1, #12
   170fc:	mov	r0, sl
   17100:	bl	19014 <argp_error@@Base+0x137c>
   17104:	cmp	r0, #0
   17108:	beq	16fdc <argp_failure@@Base+0x7c0>
   1710c:	ldr	ip, [sl, #28]
   17110:	ldr	r3, [pc, #2012]	; 178f4 <argp_failure@@Base+0x10d8>
   17114:	ldm	r3!, {r0, r1, r2}
   17118:	str	r0, [ip]
   1711c:	str	r1, [ip, #4]
   17120:	str	r2, [ip, #8]
   17124:	ldr	r3, [sl, #28]
   17128:	add	r3, r3, #12
   1712c:	str	r3, [sl, #28]
   17130:	b	16fdc <argp_failure@@Base+0x7c0>
   17134:	mov	r0, sl
   17138:	bl	18a70 <argp_error@@Base+0xdd8>
   1713c:	b	17010 <argp_failure@@Base+0x7f4>
   17140:	mov	r0, sl
   17144:	bl	18a70 <argp_error@@Base+0xdd8>
   17148:	b	1702c <argp_failure@@Base+0x810>
   1714c:	mov	r1, #1
   17150:	mov	r0, sl
   17154:	bl	19014 <argp_error@@Base+0x137c>
   17158:	cmp	r0, #0
   1715c:	beq	17054 <argp_failure@@Base+0x838>
   17160:	b	17040 <argp_failure@@Base+0x824>
   17164:	str	r8, [fp, #-104]	; 0xffffff98
   17168:	mov	r4, #1
   1716c:	b	16aa8 <argp_failure@@Base+0x28c>
   17170:	str	sl, [sp, #4]
   17174:	mov	r3, #1
   17178:	str	r3, [sp]
   1717c:	mov	r3, #0
   17180:	mov	r2, r3
   17184:	ldr	r1, [fp, #-100]	; 0xffffff9c
   17188:	ldr	r0, [fp, #-112]	; 0xffffff90
   1718c:	bl	158d8 <argp_parse@@Base+0x256c>
   17190:	orr	r4, r4, r0
   17194:	b	16ab4 <argp_failure@@Base+0x298>
   17198:	ldr	r3, [fp, #4]
   1719c:	mov	r2, r3
   171a0:	ldr	r1, [pc, #1872]	; 178f8 <argp_failure@@Base+0x10dc>
   171a4:	mov	r0, sl
   171a8:	bl	19104 <argp_error@@Base+0x146c>
   171ac:	mov	r4, #1
   171b0:	b	16ac0 <argp_failure@@Base+0x2a4>
   171b4:	mov	r1, #1
   171b8:	mov	r0, sl
   171bc:	bl	19014 <argp_error@@Base+0x137c>
   171c0:	cmp	r0, #0
   171c4:	beq	16b08 <argp_failure@@Base+0x2ec>
   171c8:	b	16af4 <argp_failure@@Base+0x2d8>
   171cc:	mov	r0, sl
   171d0:	bl	18a70 <argp_error@@Base+0xdd8>
   171d4:	b	175c0 <argp_failure@@Base+0xda4>
   171d8:	add	r3, r3, #24
   171dc:	subs	r2, r2, #1
   171e0:	beq	17204 <argp_failure@@Base+0x9e8>
   171e4:	ldr	r1, [r3, #-24]	; 0xffffffe8
   171e8:	cmp	r1, #0
   171ec:	beq	171d8 <argp_failure@@Base+0x9bc>
   171f0:	ldr	r1, [r3, #-12]
   171f4:	tst	r1, #2
   171f8:	bne	171d8 <argp_failure@@Base+0x9bc>
   171fc:	mov	r3, #1
   17200:	str	r3, [fp, #-116]	; 0xffffff8c
   17204:	ldr	r3, [pc, #1800]	; 17914 <argp_failure@@Base+0x10f8>
   17208:	ldr	r4, [r3, #8]
   1720c:	ldr	r3, [sl, #28]
   17210:	ldr	r2, [sl, #24]
   17214:	sub	r3, r3, r2
   17218:	ldr	r2, [sl, #16]
   1721c:	cmp	r3, r2
   17220:	bhi	17240 <argp_failure@@Base+0xa24>
   17224:	str	r4, [sl, #12]
   17228:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1722c:	ldr	r5, [r3, #4]
   17230:	cmp	r5, #0
   17234:	beq	1733c <argp_failure@@Base+0xb20>
   17238:	mov	r4, r8
   1723c:	b	17b80 <argp_failure@@Base+0x1364>
   17240:	mov	r0, sl
   17244:	bl	18a70 <argp_error@@Base+0xdd8>
   17248:	b	17224 <argp_failure@@Base+0xa08>
   1724c:	tst	r6, #2
   17250:	beq	1725c <argp_failure@@Base+0xa40>
   17254:	add	r9, r9, #1
   17258:	b	17b74 <argp_failure@@Base+0x1358>
   1725c:	sub	r1, fp, #76	; 0x4c
   17260:	ldr	r3, [pc, #1708]	; 17914 <argp_failure@@Base+0x10f8>
   17264:	ldr	r0, [r3, #8]
   17268:	bl	15754 <argp_parse@@Base+0x23e8>
   1726c:	ldr	r2, [sl, #28]
   17270:	ldr	r3, [sl, #32]
   17274:	cmp	r2, r3
   17278:	bcs	172f8 <argp_failure@@Base+0xadc>
   1727c:	ldr	r3, [sl, #28]
   17280:	add	r2, r3, #1
   17284:	str	r2, [sl, #28]
   17288:	mov	r2, #45	; 0x2d
   1728c:	strb	r2, [r3]
   17290:	ldrb	r6, [r9]
   17294:	ldr	r2, [sl, #28]
   17298:	ldr	r3, [sl, #32]
   1729c:	cmp	r2, r3
   172a0:	bcs	17310 <argp_failure@@Base+0xaf4>
   172a4:	ldr	r3, [sl, #28]
   172a8:	add	r2, r3, #1
   172ac:	str	r2, [sl, #28]
   172b0:	strb	r6, [r3]
   172b4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   172b8:	cmp	r3, #0
   172bc:	beq	172d0 <argp_failure@@Base+0xab4>
   172c0:	ldr	r3, [pc, #1612]	; 17914 <argp_failure@@Base+0x10f8>
   172c4:	ldr	r3, [r3]
   172c8:	cmp	r3, #0
   172cc:	beq	17328 <argp_failure@@Base+0xb0c>
   172d0:	ldr	r2, [r8, #8]
   172d4:	cmp	r2, #0
   172d8:	beq	17254 <argp_failure@@Base+0xa38>
   172dc:	ldr	r3, [r8, #12]
   172e0:	tst	r3, #1
   172e4:	ldrne	r1, [pc, #1552]	; 178fc <argp_failure@@Base+0x10e0>
   172e8:	ldreq	r1, [pc, #1552]	; 17900 <argp_failure@@Base+0x10e4>
   172ec:	mov	r0, sl
   172f0:	bl	19104 <argp_error@@Base+0x146c>
   172f4:	b	17254 <argp_failure@@Base+0xa38>
   172f8:	mov	r1, #1
   172fc:	mov	r0, sl
   17300:	bl	19014 <argp_error@@Base+0x137c>
   17304:	cmp	r0, #0
   17308:	beq	17290 <argp_failure@@Base+0xa74>
   1730c:	b	1727c <argp_failure@@Base+0xa60>
   17310:	mov	r1, #1
   17314:	mov	r0, sl
   17318:	bl	19014 <argp_error@@Base+0x137c>
   1731c:	cmp	r0, #0
   17320:	beq	172b4 <argp_failure@@Base+0xa98>
   17324:	b	172a4 <argp_failure@@Base+0xa88>
   17328:	ldr	r3, [r8, #8]
   1732c:	cmp	r3, #0
   17330:	movne	r3, #1
   17334:	strne	r3, [fp, #-80]	; 0xffffffb0
   17338:	b	17254 <argp_failure@@Base+0xa38>
   1733c:	ldr	r3, [r8, #12]
   17340:	tst	r3, #8
   17344:	beq	17420 <argp_failure@@Base+0xc04>
   17348:	ldr	r3, [pc, #1476]	; 17914 <argp_failure@@Base+0x10f8>
   1734c:	ldr	r4, [r3, #16]
   17350:	ldr	r3, [sl, #28]
   17354:	ldr	r2, [sl, #24]
   17358:	sub	r3, r3, r2
   1735c:	ldr	r2, [sl, #16]
   17360:	cmp	r3, r2
   17364:	bhi	17384 <argp_failure@@Base+0xb68>
   17368:	str	r4, [sl, #12]
   1736c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17370:	ldr	r5, [r3, #4]
   17374:	cmp	r5, #0
   17378:	beq	174d4 <argp_failure@@Base+0xcb8>
   1737c:	add	r4, r8, #24
   17380:	b	173b8 <argp_failure@@Base+0xb9c>
   17384:	mov	r0, sl
   17388:	bl	18a70 <argp_error@@Base+0xdd8>
   1738c:	b	17368 <argp_failure@@Base+0xb4c>
   17390:	mov	r2, r6
   17394:	mov	r1, r7
   17398:	ldr	r0, [sl, #28]
   1739c:	bl	112b8 <memcpy@plt>
   173a0:	ldr	r3, [sl, #28]
   173a4:	add	r6, r3, r6
   173a8:	str	r6, [sl, #28]
   173ac:	add	r4, r4, #24
   173b0:	subs	r5, r5, #1
   173b4:	beq	174d4 <argp_failure@@Base+0xcb8>
   173b8:	ldr	r3, [r4, #-24]	; 0xffffffe8
   173bc:	cmp	r3, #0
   173c0:	beq	173ac <argp_failure@@Base+0xb90>
   173c4:	ldr	r3, [r4, #-12]
   173c8:	tst	r3, #2
   173cc:	bne	173ac <argp_failure@@Base+0xb90>
   173d0:	sub	r1, fp, #76	; 0x4c
   173d4:	ldr	r3, [pc, #1336]	; 17914 <argp_failure@@Base+0x10f8>
   173d8:	ldr	r0, [r3, #16]
   173dc:	bl	15754 <argp_parse@@Base+0x23e8>
   173e0:	ldr	r7, [r4, #-24]	; 0xffffffe8
   173e4:	mov	r0, r7
   173e8:	bl	113e4 <strlen@plt>
   173ec:	subs	r6, r0, #0
   173f0:	beq	173ac <argp_failure@@Base+0xb90>
   173f4:	ldr	r3, [sl, #28]
   173f8:	add	r3, r3, r6
   173fc:	ldr	r2, [sl, #32]
   17400:	cmp	r2, r3
   17404:	bcs	17390 <argp_failure@@Base+0xb74>
   17408:	mov	r1, r6
   1740c:	mov	r0, sl
   17410:	bl	19014 <argp_error@@Base+0x137c>
   17414:	cmp	r0, #0
   17418:	beq	173ac <argp_failure@@Base+0xb90>
   1741c:	b	17390 <argp_failure@@Base+0xb74>
   17420:	ldr	r3, [pc, #1260]	; 17914 <argp_failure@@Base+0x10f8>
   17424:	ldr	r4, [r3, #12]
   17428:	ldr	r3, [sl, #28]
   1742c:	ldr	r2, [sl, #24]
   17430:	sub	r3, r3, r2
   17434:	ldr	r2, [sl, #16]
   17438:	cmp	r3, r2
   1743c:	bhi	1745c <argp_failure@@Base+0xc40>
   17440:	str	r4, [sl, #12]
   17444:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17448:	ldr	r5, [r3, #4]
   1744c:	cmp	r5, #0
   17450:	beq	174d4 <argp_failure@@Base+0xcb8>
   17454:	add	r4, r8, #24
   17458:	b	17474 <argp_failure@@Base+0xc58>
   1745c:	mov	r0, sl
   17460:	bl	18a70 <argp_error@@Base+0xdd8>
   17464:	b	17440 <argp_failure@@Base+0xc24>
   17468:	add	r4, r4, #24
   1746c:	subs	r5, r5, #1
   17470:	beq	174d4 <argp_failure@@Base+0xcb8>
   17474:	ldr	r3, [r4, #-24]	; 0xffffffe8
   17478:	cmp	r3, #0
   1747c:	beq	17468 <argp_failure@@Base+0xc4c>
   17480:	ldr	r3, [r4, #-12]
   17484:	tst	r3, #2
   17488:	bne	17468 <argp_failure@@Base+0xc4c>
   1748c:	sub	r1, fp, #76	; 0x4c
   17490:	ldr	r3, [pc, #1148]	; 17914 <argp_failure@@Base+0x10f8>
   17494:	ldr	r0, [r3, #12]
   17498:	bl	15754 <argp_parse@@Base+0x23e8>
   1749c:	ldr	r2, [r4, #-24]	; 0xffffffe8
   174a0:	ldr	r1, [pc, #1116]	; 17904 <argp_failure@@Base+0x10e8>
   174a4:	mov	r0, sl
   174a8:	bl	19104 <argp_error@@Base+0x146c>
   174ac:	ldr	r2, [r8, #8]
   174b0:	cmp	r2, #0
   174b4:	beq	17468 <argp_failure@@Base+0xc4c>
   174b8:	ldr	r3, [r8, #12]
   174bc:	tst	r3, #1
   174c0:	ldrne	r1, [pc, #1088]	; 17908 <argp_failure@@Base+0x10ec>
   174c4:	ldreq	r1, [pc, #1088]	; 1790c <argp_failure@@Base+0x10f0>
   174c8:	mov	r0, sl
   174cc:	bl	19104 <argp_error@@Base+0x146c>
   174d0:	b	17468 <argp_failure@@Base+0xc4c>
   174d4:	ldr	r3, [sl, #28]
   174d8:	ldr	r2, [sl, #24]
   174dc:	sub	r3, r3, r2
   174e0:	ldr	r2, [sl, #16]
   174e4:	cmp	r3, r2
   174e8:	bhi	17628 <argp_failure@@Base+0xe0c>
   174ec:	mov	r3, #0
   174f0:	str	r3, [sl, #4]
   174f4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   174f8:	cmp	r3, #0
   174fc:	beq	1764c <argp_failure@@Base+0xe30>
   17500:	ldr	r3, [r8, #12]
   17504:	tst	r3, #8
   17508:	bne	17534 <argp_failure@@Base+0xd18>
   1750c:	ldr	r4, [r8, #4]
   17510:	sub	r3, r4, #1
   17514:	cmp	r3, #254	; 0xfe
   17518:	bhi	17534 <argp_failure@@Base+0xd18>
   1751c:	bl	113cc <__ctype_b_loc@plt>
   17520:	ldr	r3, [r0]
   17524:	lsl	r4, r4, #1
   17528:	ldrh	r3, [r3, r4]
   1752c:	tst	r3, #16384	; 0x4000
   17530:	bne	17540 <argp_failure@@Base+0xd24>
   17534:	ldr	r3, [r8]
   17538:	cmp	r3, #0
   1753c:	beq	17634 <argp_failure@@Base+0xe18>
   17540:	ldr	r3, [sl, #28]
   17544:	ldr	r2, [sl, #24]
   17548:	sub	r3, r3, r2
   1754c:	ldr	r2, [sl, #16]
   17550:	cmp	r3, r2
   17554:	bhi	178a4 <argp_failure@@Base+0x1088>
   17558:	ldr	r3, [fp, #-124]	; 0xffffff84
   1755c:	str	r3, [sl, #4]
   17560:	ldr	r3, [sl, #28]
   17564:	ldr	r2, [sl, #24]
   17568:	sub	r3, r3, r2
   1756c:	ldr	r2, [sl, #16]
   17570:	cmp	r3, r2
   17574:	bhi	178b0 <argp_failure@@Base+0x1094>
   17578:	ldr	r3, [fp, #-128]	; 0xffffff80
   1757c:	str	r3, [sl, #12]
   17580:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17584:	add	r3, r3, #28
   17588:	str	r3, [fp, #-96]	; 0xffffffa0
   1758c:	ldr	r3, [fp, #-120]	; 0xffffff88
   17590:	subs	r3, r3, #1
   17594:	str	r3, [fp, #-120]	; 0xffffff88
   17598:	beq	17928 <argp_failure@@Base+0x110c>
   1759c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   175a0:	ldr	r8, [r3]
   175a4:	ldr	r9, [r3, #8]
   175a8:	ldr	r3, [sl, #28]
   175ac:	ldr	r2, [sl, #24]
   175b0:	sub	r3, r3, r2
   175b4:	ldr	r2, [sl, #16]
   175b8:	cmp	r3, r2
   175bc:	bhi	171cc <argp_failure@@Base+0x9b0>
   175c0:	ldr	r3, [sl, #4]
   175c4:	str	r3, [fp, #-124]	; 0xffffff84
   175c8:	mov	r3, #0
   175cc:	str	r3, [sl, #4]
   175d0:	ldr	r3, [sl, #12]
   175d4:	str	r3, [fp, #-128]	; 0xffffff80
   175d8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   175dc:	str	r2, [fp, #-76]	; 0xffffffb4
   175e0:	str	sl, [fp, #-72]	; 0xffffffb8
   175e4:	sub	r3, fp, #88	; 0x58
   175e8:	str	r3, [fp, #-68]	; 0xffffffbc
   175ec:	mov	r3, #1
   175f0:	str	r3, [fp, #-64]	; 0xffffffc0
   175f4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   175f8:	str	r3, [fp, #-60]	; 0xffffffc4
   175fc:	ldr	r3, [r8, #12]
   17600:	ands	r3, r3, #8
   17604:	str	r3, [fp, #-116]	; 0xffffff8c
   17608:	movne	r3, #0
   1760c:	strne	r3, [fp, #-116]	; 0xffffff8c
   17610:	bne	17204 <argp_failure@@Base+0x9e8>
   17614:	ldr	r2, [r2, #4]
   17618:	cmp	r2, #0
   1761c:	beq	17204 <argp_failure@@Base+0x9e8>
   17620:	add	r3, r8, #24
   17624:	b	171e4 <argp_failure@@Base+0x9c8>
   17628:	mov	r0, sl
   1762c:	bl	18a70 <argp_error@@Base+0xdd8>
   17630:	b	174ec <argp_failure@@Base+0xcd0>
   17634:	sub	r2, fp, #76	; 0x4c
   17638:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1763c:	ldr	r1, [r3, #20]
   17640:	ldr	r0, [r8, #16]
   17644:	bl	15570 <argp_parse@@Base+0x2204>
   17648:	b	177a4 <argp_failure@@Base+0xf88>
   1764c:	ldr	r7, [r8, #16]
   17650:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17654:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17658:	ldr	r2, [r2, #20]
   1765c:	ldr	r1, [r8, #4]
   17660:	mov	r0, r7
   17664:	bl	1533c <argp_parse@@Base+0x1fd0>
   17668:	subs	r4, r0, #0
   1766c:	beq	17760 <argp_failure@@Base+0xf44>
   17670:	ldrb	r3, [r4]
   17674:	cmp	r3, #0
   17678:	beq	17758 <argp_failure@@Base+0xf3c>
   1767c:	ldr	r3, [sl, #28]
   17680:	ldr	r2, [sl, #24]
   17684:	sub	r3, r3, r2
   17688:	ldr	r2, [sl, #16]
   1768c:	cmp	r3, r2
   17690:	bhi	177b0 <argp_failure@@Base+0xf94>
   17694:	ldr	r5, [sl, #20]
   17698:	bic	r5, r5, r5, asr #31
   1769c:	ldr	r3, [pc, #624]	; 17914 <argp_failure@@Base+0x10f8>
   176a0:	ldr	r6, [r3, #20]
   176a4:	str	r6, [sl, #4]
   176a8:	ldr	r3, [pc, #612]	; 17914 <argp_failure@@Base+0x10f8>
   176ac:	ldr	r6, [r3, #20]
   176b0:	ldr	r3, [sl, #28]
   176b4:	ldr	r2, [sl, #24]
   176b8:	sub	r3, r3, r2
   176bc:	ldr	r2, [sl, #16]
   176c0:	cmp	r3, r2
   176c4:	bhi	177ec <argp_failure@@Base+0xfd0>
   176c8:	str	r6, [sl, #12]
   176cc:	ldr	r3, [pc, #576]	; 17914 <argp_failure@@Base+0x10f8>
   176d0:	ldr	r1, [r3, #20]
   176d4:	add	r3, r1, #3
   176d8:	cmp	r3, r5
   176dc:	bcs	17810 <argp_failure@@Base+0xff4>
   176e0:	ldr	r2, [sl, #28]
   176e4:	ldr	r3, [sl, #32]
   176e8:	cmp	r2, r3
   176ec:	bcs	177f8 <argp_failure@@Base+0xfdc>
   176f0:	ldr	r3, [sl, #28]
   176f4:	add	r2, r3, #1
   176f8:	str	r2, [sl, #28]
   176fc:	mov	r2, #10
   17700:	strb	r2, [r3]
   17704:	mov	r0, r4
   17708:	bl	113e4 <strlen@plt>
   1770c:	subs	r5, r0, #0
   17710:	beq	17758 <argp_failure@@Base+0xf3c>
   17714:	ldr	r3, [sl, #28]
   17718:	add	r3, r3, r5
   1771c:	ldr	r2, [sl, #32]
   17720:	cmp	r2, r3
   17724:	bcs	1773c <argp_failure@@Base+0xf20>
   17728:	mov	r1, r5
   1772c:	mov	r0, sl
   17730:	bl	19014 <argp_error@@Base+0x137c>
   17734:	cmp	r0, #0
   17738:	beq	17758 <argp_failure@@Base+0xf3c>
   1773c:	mov	r2, r5
   17740:	mov	r1, r4
   17744:	ldr	r0, [sl, #28]
   17748:	bl	112b8 <memcpy@plt>
   1774c:	ldr	r3, [sl, #28]
   17750:	add	r5, r3, r5
   17754:	str	r5, [sl, #28]
   17758:	cmp	r7, r4
   1775c:	bne	17874 <argp_failure@@Base+0x1058>
   17760:	ldr	r3, [sl, #28]
   17764:	ldr	r2, [sl, #24]
   17768:	sub	r3, r3, r2
   1776c:	ldr	r2, [sl, #16]
   17770:	cmp	r3, r2
   17774:	bhi	17880 <argp_failure@@Base+0x1064>
   17778:	mov	r3, #0
   1777c:	str	r3, [sl, #4]
   17780:	ldr	r2, [sl, #28]
   17784:	ldr	r3, [sl, #32]
   17788:	cmp	r2, r3
   1778c:	bcs	1788c <argp_failure@@Base+0x1070>
   17790:	ldr	r3, [sl, #28]
   17794:	add	r2, r3, #1
   17798:	str	r2, [sl, #28]
   1779c:	mov	r2, #10
   177a0:	strb	r2, [r3]
   177a4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   177a8:	str	r3, [fp, #-88]	; 0xffffffa8
   177ac:	b	17540 <argp_failure@@Base+0xd24>
   177b0:	mov	r0, sl
   177b4:	bl	18a70 <argp_error@@Base+0xdd8>
   177b8:	ldr	r5, [sl, #20]
   177bc:	bic	r5, r5, r5, asr #31
   177c0:	ldr	r3, [pc, #332]	; 17914 <argp_failure@@Base+0x10f8>
   177c4:	ldr	r6, [r3, #20]
   177c8:	ldr	r3, [sl, #28]
   177cc:	ldr	r2, [sl, #24]
   177d0:	sub	r3, r3, r2
   177d4:	ldr	r2, [sl, #16]
   177d8:	cmp	r3, r2
   177dc:	bls	176a4 <argp_failure@@Base+0xe88>
   177e0:	mov	r0, sl
   177e4:	bl	18a70 <argp_error@@Base+0xdd8>
   177e8:	b	176a4 <argp_failure@@Base+0xe88>
   177ec:	mov	r0, sl
   177f0:	bl	18a70 <argp_error@@Base+0xdd8>
   177f4:	b	176c8 <argp_failure@@Base+0xeac>
   177f8:	mov	r1, #1
   177fc:	mov	r0, sl
   17800:	bl	19014 <argp_error@@Base+0x137c>
   17804:	cmp	r0, #0
   17808:	beq	17704 <argp_failure@@Base+0xee8>
   1780c:	b	176f0 <argp_failure@@Base+0xed4>
   17810:	cmp	r1, r5
   17814:	bhi	17868 <argp_failure@@Base+0x104c>
   17818:	ldr	r3, [sl, #28]
   1781c:	add	r3, r3, #3
   17820:	ldr	r2, [sl, #32]
   17824:	cmp	r2, r3
   17828:	bcs	17840 <argp_failure@@Base+0x1024>
   1782c:	mov	r1, #3
   17830:	mov	r0, sl
   17834:	bl	19014 <argp_error@@Base+0x137c>
   17838:	cmp	r0, #0
   1783c:	beq	17704 <argp_failure@@Base+0xee8>
   17840:	ldr	r3, [sl, #28]
   17844:	ldr	r2, [pc, #196]	; 17910 <argp_failure@@Base+0x10f4>
   17848:	ldrh	r1, [r2]
   1784c:	ldrb	r2, [r2, #2]
   17850:	strh	r1, [r3]
   17854:	strb	r2, [r3, #2]
   17858:	ldr	r3, [sl, #28]
   1785c:	add	r3, r3, #3
   17860:	str	r3, [sl, #28]
   17864:	b	17704 <argp_failure@@Base+0xee8>
   17868:	mov	r0, sl
   1786c:	bl	15158 <argp_parse@@Base+0x1dec>
   17870:	b	17704 <argp_failure@@Base+0xee8>
   17874:	mov	r0, r4
   17878:	bl	13f60 <argp_parse@@Base+0xbf4>
   1787c:	b	17760 <argp_failure@@Base+0xf44>
   17880:	mov	r0, sl
   17884:	bl	18a70 <argp_error@@Base+0xdd8>
   17888:	b	17778 <argp_failure@@Base+0xf5c>
   1788c:	mov	r1, #1
   17890:	mov	r0, sl
   17894:	bl	19014 <argp_error@@Base+0x137c>
   17898:	cmp	r0, #0
   1789c:	beq	177a4 <argp_failure@@Base+0xf88>
   178a0:	b	17790 <argp_failure@@Base+0xf74>
   178a4:	mov	r0, sl
   178a8:	bl	18a70 <argp_error@@Base+0xdd8>
   178ac:	b	17558 <argp_failure@@Base+0xd3c>
   178b0:	mov	r0, sl
   178b4:	bl	18a70 <argp_error@@Base+0xdd8>
   178b8:	b	17578 <argp_failure@@Base+0xd5c>
   178bc:	andeq	sl, r1, r0, lsl r2
   178c0:	andeq	sl, r1, r8, lsr r0
   178c4:	andeq	sl, r1, r0, lsr #4
   178c8:	andeq	sl, r1, r0, asr r2
   178cc:	andeq	sl, r1, r8, ror r2
   178d0:	andeq	sl, r1, r0, asr r0
   178d4:	andeq	sl, r1, ip, asr #5
   178d8:	muleq	r1, r8, r2
   178dc:	ldrdeq	r9, [r1], -r4
   178e0:			; <UNDEFINED> instruction: 0x00019bb4
   178e4:	andeq	r5, r1, r0, ror lr
   178e8:	ldrdeq	sl, [r1], -ip
   178ec:	ldrdeq	sl, [r1], -r4
   178f0:	andeq	sl, r1, r4, ror #5
   178f4:	andeq	sl, r1, ip, ror #5
   178f8:	strdeq	sl, [r1], -ip
   178fc:	andeq	sl, r1, r4, lsr r3
   17900:	andeq	r9, r1, r4, lsl #23
   17904:	andeq	sl, r1, ip, lsr r3
   17908:	andeq	sl, r1, r4, asr #6
   1790c:	andeq	sl, r1, ip, asr #6
   17910:	andeq	sl, r1, r0, asr r3
   17914:	andeq	fp, r2, r8, lsr #5
   17918:	andeq	r0, r0, #5
   1791c:	andeq	sl, r1, r4, asr r3
   17920:	andeq	ip, r2, r8, asr #4
   17924:	andeq	sl, r1, r8, asr #7
   17928:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1792c:	cmp	r3, #0
   17930:	beq	17a20 <argp_failure@@Base+0x1204>
   17934:	ldr	r3, [pc, #-40]	; 17914 <argp_failure@@Base+0x10f8>
   17938:	ldr	r3, [r3, #4]
   1793c:	cmp	r3, #0
   17940:	beq	17a20 <argp_failure@@Base+0x1204>
   17944:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17948:	cmp	r3, #0
   1794c:	ldrne	r2, [r3]
   17950:	moveq	r2, #0
   17954:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17958:	ldr	r1, [pc, #-72]	; 17918 <argp_failure@@Base+0x10fc>
   1795c:	ldr	r0, [pc, #-72]	; 1791c <argp_failure@@Base+0x1100>
   17960:	bl	1533c <argp_parse@@Base+0x1fd0>
   17964:	subs	r4, r0, #0
   17968:	beq	17a20 <argp_failure@@Base+0x1204>
   1796c:	ldrb	r3, [r4]
   17970:	cmp	r3, #0
   17974:	beq	17a14 <argp_failure@@Base+0x11f8>
   17978:	ldr	r2, [sl, #28]
   1797c:	ldr	r3, [sl, #32]
   17980:	cmp	r2, r3
   17984:	bcs	17ab8 <argp_failure@@Base+0x129c>
   17988:	ldr	r3, [sl, #28]
   1798c:	add	r2, r3, #1
   17990:	str	r2, [sl, #28]
   17994:	mov	r2, #10
   17998:	strb	r2, [r3]
   1799c:	mov	r0, r4
   179a0:	bl	113e4 <strlen@plt>
   179a4:	subs	r5, r0, #0
   179a8:	beq	179f0 <argp_failure@@Base+0x11d4>
   179ac:	ldr	r3, [sl, #28]
   179b0:	add	r3, r3, r5
   179b4:	ldr	r2, [sl, #32]
   179b8:	cmp	r2, r3
   179bc:	bcs	179d4 <argp_failure@@Base+0x11b8>
   179c0:	mov	r1, r5
   179c4:	mov	r0, sl
   179c8:	bl	19014 <argp_error@@Base+0x137c>
   179cc:	cmp	r0, #0
   179d0:	beq	179f0 <argp_failure@@Base+0x11d4>
   179d4:	mov	r2, r5
   179d8:	mov	r1, r4
   179dc:	ldr	r0, [sl, #28]
   179e0:	bl	112b8 <memcpy@plt>
   179e4:	ldr	r3, [sl, #28]
   179e8:	add	r5, r3, r5
   179ec:	str	r5, [sl, #28]
   179f0:	ldr	r2, [sl, #28]
   179f4:	ldr	r3, [sl, #32]
   179f8:	cmp	r2, r3
   179fc:	bcs	17ad0 <argp_failure@@Base+0x12b4>
   17a00:	ldr	r3, [sl, #28]
   17a04:	add	r2, r3, #1
   17a08:	str	r2, [sl, #28]
   17a0c:	mov	r2, #10
   17a10:	strb	r2, [r3]
   17a14:	ldr	r3, [pc, #-256]	; 1791c <argp_failure@@Base+0x1100>
   17a18:	cmp	r4, r3
   17a1c:	bne	17ae8 <argp_failure@@Base+0x12cc>
   17a20:	mov	r4, #1
   17a24:	ldr	r3, [fp, #-104]	; 0xffffff98
   17a28:	tst	r3, #32
   17a2c:	bne	17af4 <argp_failure@@Base+0x12d8>
   17a30:	ldr	r3, [fp, #-104]	; 0xffffff98
   17a34:	tst	r3, #64	; 0x40
   17a38:	beq	17a8c <argp_failure@@Base+0x1270>
   17a3c:	ldr	r3, [pc, #-292]	; 17920 <argp_failure@@Base+0x1104>
   17a40:	ldr	r3, [r3]
   17a44:	cmp	r3, #0
   17a48:	beq	17a8c <argp_failure@@Base+0x1270>
   17a4c:	cmp	r4, #0
   17a50:	beq	17a78 <argp_failure@@Base+0x125c>
   17a54:	ldr	r2, [sl, #28]
   17a58:	ldr	r3, [sl, #32]
   17a5c:	cmp	r2, r3
   17a60:	bcs	17b1c <argp_failure@@Base+0x1300>
   17a64:	ldr	r3, [sl, #28]
   17a68:	add	r2, r3, #1
   17a6c:	str	r2, [sl, #28]
   17a70:	mov	r2, #10
   17a74:	strb	r2, [r3]
   17a78:	ldr	r3, [pc, #-352]	; 17920 <argp_failure@@Base+0x1104>
   17a7c:	ldr	r2, [r3]
   17a80:	ldr	r1, [pc, #-356]	; 17924 <argp_failure@@Base+0x1108>
   17a84:	mov	r0, sl
   17a88:	bl	19104 <argp_error@@Base+0x146c>
   17a8c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   17a90:	bl	11324 <funlockfile@plt>
   17a94:	ldr	r3, [fp, #-108]	; 0xffffff94
   17a98:	cmp	r3, #0
   17a9c:	beq	17aa8 <argp_failure@@Base+0x128c>
   17aa0:	mov	r0, r3
   17aa4:	bl	15014 <argp_parse@@Base+0x1ca8>
   17aa8:	mov	r0, sl
   17aac:	bl	18fd4 <argp_error@@Base+0x133c>
   17ab0:	sub	sp, fp, #32
   17ab4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ab8:	mov	r1, #1
   17abc:	mov	r0, sl
   17ac0:	bl	19014 <argp_error@@Base+0x137c>
   17ac4:	cmp	r0, #0
   17ac8:	beq	1799c <argp_failure@@Base+0x1180>
   17acc:	b	17988 <argp_failure@@Base+0x116c>
   17ad0:	mov	r1, #1
   17ad4:	mov	r0, sl
   17ad8:	bl	19014 <argp_error@@Base+0x137c>
   17adc:	cmp	r0, #0
   17ae0:	beq	17a14 <argp_failure@@Base+0x11f8>
   17ae4:	b	17a00 <argp_failure@@Base+0x11e4>
   17ae8:	mov	r0, r4
   17aec:	bl	13f60 <argp_parse@@Base+0xbf4>
   17af0:	b	17a20 <argp_failure@@Base+0x1204>
   17af4:	str	sl, [sp, #4]
   17af8:	mov	r3, #0
   17afc:	str	r3, [sp]
   17b00:	mov	r3, r4
   17b04:	mov	r2, #1
   17b08:	ldr	r1, [fp, #-100]	; 0xffffff9c
   17b0c:	ldr	r0, [fp, #-112]	; 0xffffff90
   17b10:	bl	158d8 <argp_parse@@Base+0x256c>
   17b14:	orr	r4, r4, r0
   17b18:	b	17a30 <argp_failure@@Base+0x1214>
   17b1c:	mov	r1, #1
   17b20:	mov	r0, sl
   17b24:	bl	19014 <argp_error@@Base+0x137c>
   17b28:	cmp	r0, #0
   17b2c:	beq	17a78 <argp_failure@@Base+0x125c>
   17b30:	b	17a64 <argp_failure@@Base+0x1248>
   17b34:	ldrb	r3, [r5]
   17b38:	mov	r4, r5
   17b3c:	mov	r5, #0
   17b40:	b	16c14 <argp_failure@@Base+0x3f8>
   17b44:	mov	r4, r2
   17b48:	b	16c28 <argp_failure@@Base+0x40c>
   17b4c:	cmp	r0, #110	; 0x6e
   17b50:	beq	16c80 <argp_failure@@Base+0x464>
   17b54:	mov	r3, #1
   17b58:	str	r3, [fp, #-96]	; 0xffffffa0
   17b5c:	str	r3, [fp, #-116]	; 0xffffff8c
   17b60:	add	r6, sl, #24
   17b64:	b	16d78 <argp_failure@@Base+0x55c>
   17b68:	ldrb	r3, [r9]
   17b6c:	cmp	r7, r3
   17b70:	beq	1724c <argp_failure@@Base+0xa30>
   17b74:	add	r4, r4, #24
   17b78:	subs	r5, r5, #1
   17b7c:	beq	1733c <argp_failure@@Base+0xb20>
   17b80:	ldr	r6, [r4, #12]
   17b84:	tst	r6, #8
   17b88:	bne	17b74 <argp_failure@@Base+0x1358>
   17b8c:	ldr	r7, [r4, #4]
   17b90:	sub	r3, r7, #1
   17b94:	cmp	r3, #254	; 0xfe
   17b98:	bhi	17b74 <argp_failure@@Base+0x1358>
   17b9c:	bl	113cc <__ctype_b_loc@plt>
   17ba0:	ldr	r2, [r0]
   17ba4:	lsl	r3, r7, #1
   17ba8:	ldrh	r3, [r2, r3]
   17bac:	tst	r3, #16384	; 0x4000
   17bb0:	bne	17b68 <argp_failure@@Base+0x134c>
   17bb4:	b	17b74 <argp_failure@@Base+0x1358>

00017bb8 <argp_help@@Base>:
   17bb8:	push	{lr}		; (str lr, [sp, #-4]!)
   17bbc:	sub	sp, sp, #12
   17bc0:	str	r3, [sp]
   17bc4:	mov	r3, r2
   17bc8:	mov	r2, r1
   17bcc:	mov	r1, #0
   17bd0:	bl	16a24 <argp_failure@@Base+0x208>
   17bd4:	add	sp, sp, #12
   17bd8:	pop	{pc}		; (ldr pc, [sp], #4)

00017bdc <argp_state_help@@Base>:
   17bdc:	push	{r4, r5, lr}
   17be0:	sub	sp, sp, #12
   17be4:	mov	r5, r2
   17be8:	subs	r4, r0, #0
   17bec:	beq	17c50 <argp_state_help@@Base+0x74>
   17bf0:	ldr	r3, [r4, #16]
   17bf4:	tst	r3, #2
   17bf8:	bne	17c48 <argp_state_help@@Base+0x6c>
   17bfc:	cmp	r1, #0
   17c00:	beq	17c48 <argp_state_help@@Base+0x6c>
   17c04:	ldr	r3, [r4, #16]
   17c08:	tst	r3, #64	; 0x40
   17c0c:	orrne	r5, r5, #128	; 0x80
   17c10:	ldr	r0, [r4]
   17c14:	ldr	r3, [r4, #40]	; 0x28
   17c18:	str	r3, [sp]
   17c1c:	mov	r3, r5
   17c20:	mov	r2, r1
   17c24:	mov	r1, r4
   17c28:	bl	16a24 <argp_failure@@Base+0x208>
   17c2c:	ldr	r3, [r4, #16]
   17c30:	tst	r3, #32
   17c34:	bne	17c48 <argp_state_help@@Base+0x6c>
   17c38:	tst	r5, #256	; 0x100
   17c3c:	bne	17c7c <argp_state_help@@Base+0xa0>
   17c40:	tst	r5, #512	; 0x200
   17c44:	bne	17c88 <argp_state_help@@Base+0xac>
   17c48:	add	sp, sp, #12
   17c4c:	pop	{r4, r5, pc}
   17c50:	cmp	r1, #0
   17c54:	beq	17c48 <argp_state_help@@Base+0x6c>
   17c58:	ldr	r3, [pc, #48]	; 17c90 <argp_state_help@@Base+0xb4>
   17c5c:	ldr	r3, [r3]
   17c60:	str	r3, [sp]
   17c64:	mov	r3, r2
   17c68:	mov	r2, r1
   17c6c:	mov	r1, #0
   17c70:	mov	r0, r1
   17c74:	bl	16a24 <argp_failure@@Base+0x208>
   17c78:	b	17c38 <argp_state_help@@Base+0x5c>
   17c7c:	ldr	r3, [pc, #16]	; 17c94 <argp_state_help@@Base+0xb8>
   17c80:	ldr	r0, [r3]
   17c84:	bl	113d8 <exit@plt>
   17c88:	mov	r0, #0
   17c8c:	bl	113d8 <exit@plt>
   17c90:	andeq	fp, r2, r8, ror #5
   17c94:	andeq	fp, r2, r0, ror #5

00017c98 <argp_error@@Base>:
   17c98:	push	{r1, r2, r3}
   17c9c:	push	{r4, r5, lr}
   17ca0:	sub	sp, sp, #8
   17ca4:	subs	r5, r0, #0
   17ca8:	beq	17d78 <argp_error@@Base+0xe0>
   17cac:	ldr	r3, [r5, #16]
   17cb0:	tst	r3, #2
   17cb4:	bne	17d68 <argp_error@@Base+0xd0>
   17cb8:	ldr	r4, [r5, #44]	; 0x2c
   17cbc:	cmp	r4, #0
   17cc0:	beq	17d68 <argp_error@@Base+0xd0>
   17cc4:	mov	r0, r4
   17cc8:	bl	11510 <flockfile@plt>
   17ccc:	add	r3, sp, #24
   17cd0:	str	r3, [sp, #4]
   17cd4:	ldr	r0, [r5, #40]	; 0x28
   17cd8:	mov	r1, r4
   17cdc:	bl	11210 <fputs_unlocked@plt>
   17ce0:	ldr	r3, [r4, #20]
   17ce4:	ldr	r2, [r4, #24]
   17ce8:	cmp	r3, r2
   17cec:	addcc	r2, r3, #1
   17cf0:	strcc	r2, [r4, #20]
   17cf4:	movcc	r2, #58	; 0x3a
   17cf8:	strbcc	r2, [r3]
   17cfc:	bcs	17da4 <argp_error@@Base+0x10c>
   17d00:	ldr	r3, [r4, #20]
   17d04:	ldr	r2, [r4, #24]
   17d08:	cmp	r3, r2
   17d0c:	addcc	r2, r3, #1
   17d10:	strcc	r2, [r4, #20]
   17d14:	movcc	r2, #32
   17d18:	strbcc	r2, [r3]
   17d1c:	bcs	17db4 <argp_error@@Base+0x11c>
   17d20:	ldr	r2, [sp, #4]
   17d24:	ldr	r1, [sp, #20]
   17d28:	mov	r0, r4
   17d2c:	bl	114b0 <vfprintf@plt>
   17d30:	ldr	r3, [r4, #20]
   17d34:	ldr	r2, [r4, #24]
   17d38:	cmp	r3, r2
   17d3c:	addcc	r2, r3, #1
   17d40:	strcc	r2, [r4, #20]
   17d44:	movcc	r2, #10
   17d48:	strbcc	r2, [r3]
   17d4c:	bcs	17dc4 <argp_error@@Base+0x12c>
   17d50:	mov	r2, #260	; 0x104
   17d54:	mov	r1, r4
   17d58:	mov	r0, r5
   17d5c:	bl	17bdc <argp_state_help@@Base>
   17d60:	mov	r0, r4
   17d64:	bl	11324 <funlockfile@plt>
   17d68:	add	sp, sp, #8
   17d6c:	pop	{r4, r5, lr}
   17d70:	add	sp, sp, #12
   17d74:	bx	lr
   17d78:	ldr	r3, [pc, #84]	; 17dd4 <argp_error@@Base+0x13c>
   17d7c:	ldr	r4, [r3]
   17d80:	cmp	r4, #0
   17d84:	beq	17d68 <argp_error@@Base+0xd0>
   17d88:	mov	r0, r4
   17d8c:	bl	11510 <flockfile@plt>
   17d90:	add	r3, sp, #24
   17d94:	str	r3, [sp, #4]
   17d98:	ldr	r3, [pc, #56]	; 17dd8 <argp_error@@Base+0x140>
   17d9c:	ldr	r0, [r3]
   17da0:	b	17cd8 <argp_error@@Base+0x40>
   17da4:	mov	r1, #58	; 0x3a
   17da8:	mov	r0, r4
   17dac:	bl	11480 <__overflow@plt>
   17db0:	b	17d00 <argp_error@@Base+0x68>
   17db4:	mov	r1, #32
   17db8:	mov	r0, r4
   17dbc:	bl	11480 <__overflow@plt>
   17dc0:	b	17d20 <argp_error@@Base+0x88>
   17dc4:	mov	r1, #10
   17dc8:	mov	r0, r4
   17dcc:	bl	11480 <__overflow@plt>
   17dd0:	b	17d50 <argp_error@@Base+0xb8>
   17dd4:	strdeq	fp, [r2], -r0
   17dd8:	andeq	fp, r2, r8, ror #5
   17ddc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17de0:	ldr	r4, [r1, #28]
   17de4:	ldr	r5, [r1, #32]
   17de8:	ldr	r6, [r1]
   17dec:	add	r7, r0, r5, lsl #2
   17df0:	b	17e28 <argp_error@@Base+0x190>
   17df4:	cmp	sl, #0
   17df8:	ble	17e24 <argp_error@@Base+0x18c>
   17dfc:	add	r2, r0, r4, lsl #2
   17e00:	sub	r3, r6, sl
   17e04:	add	r3, r0, r3, lsl #2
   17e08:	add	r8, r0, r6, lsl #2
   17e0c:	ldr	ip, [r2]
   17e10:	ldr	lr, [r3]
   17e14:	str	lr, [r2], #4
   17e18:	str	ip, [r3], #4
   17e1c:	cmp	r3, r8
   17e20:	bne	17e0c <argp_error@@Base+0x174>
   17e24:	sub	r6, r6, sl
   17e28:	cmp	r6, r5
   17e2c:	movle	r3, #0
   17e30:	movgt	r3, #1
   17e34:	cmp	r4, r5
   17e38:	movge	r3, #0
   17e3c:	cmp	r3, #0
   17e40:	beq	17e8c <argp_error@@Base+0x1f4>
   17e44:	sub	r9, r6, r5
   17e48:	sub	sl, r5, r4
   17e4c:	cmp	r9, sl
   17e50:	bgt	17df4 <argp_error@@Base+0x15c>
   17e54:	cmp	r9, #0
   17e58:	addgt	r3, r0, r4, lsl #2
   17e5c:	addgt	r8, r9, r4
   17e60:	addgt	r8, r0, r8, lsl #2
   17e64:	movgt	r2, r7
   17e68:	ble	17e84 <argp_error@@Base+0x1ec>
   17e6c:	ldr	ip, [r3]
   17e70:	ldr	lr, [r2]
   17e74:	str	lr, [r3], #4
   17e78:	str	ip, [r2], #4
   17e7c:	cmp	r3, r8
   17e80:	bne	17e6c <argp_error@@Base+0x1d4>
   17e84:	add	r4, r4, r9
   17e88:	b	17e28 <argp_error@@Base+0x190>
   17e8c:	ldr	r0, [r1]
   17e90:	ldr	r3, [r1, #32]
   17e94:	sub	r2, r0, r3
   17e98:	ldr	r3, [r1, #28]
   17e9c:	add	r3, r3, r2
   17ea0:	str	r3, [r1, #28]
   17ea4:	str	r0, [r1, #32]
   17ea8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17eac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17eb0:	sub	sp, sp, #44	; 0x2c
   17eb4:	str	r0, [sp, #20]
   17eb8:	str	r1, [sp, #12]
   17ebc:	str	r2, [sp, #24]
   17ec0:	str	r3, [sp, #8]
   17ec4:	ldr	fp, [sp, #88]	; 0x58
   17ec8:	ldr	sl, [fp, #20]
   17ecc:	ldrb	r3, [sl]
   17ed0:	cmp	r3, #0
   17ed4:	cmpne	r3, #61	; 0x3d
   17ed8:	beq	17f14 <argp_error@@Base+0x27c>
   17edc:	mov	r8, sl
   17ee0:	ldrb	r3, [r8, #1]!
   17ee4:	cmp	r3, #0
   17ee8:	cmpne	r3, #61	; 0x3d
   17eec:	bne	17ee0 <argp_error@@Base+0x248>
   17ef0:	sub	r7, r8, sl
   17ef4:	ldr	r5, [sp, #8]
   17ef8:	ldr	r3, [r5]
   17efc:	str	r3, [sp, #16]
   17f00:	cmp	r3, #0
   17f04:	beq	18208 <argp_error@@Base+0x570>
   17f08:	mov	r4, r3
   17f0c:	mov	r6, #0
   17f10:	b	17f2c <argp_error@@Base+0x294>
   17f14:	mov	r8, sl
   17f18:	b	17ef0 <argp_error@@Base+0x258>
   17f1c:	add	r6, r6, #1
   17f20:	ldr	r4, [r5, #16]!
   17f24:	cmp	r4, #0
   17f28:	beq	17f64 <argp_error@@Base+0x2cc>
   17f2c:	mov	r9, r5
   17f30:	mov	r2, r7
   17f34:	mov	r1, sl
   17f38:	mov	r0, r4
   17f3c:	bl	1154c <strncmp@plt>
   17f40:	cmp	r0, #0
   17f44:	bne	17f1c <argp_error@@Base+0x284>
   17f48:	mov	r0, r4
   17f4c:	bl	113e4 <strlen@plt>
   17f50:	cmp	r7, r0
   17f54:	bne	17f1c <argp_error@@Base+0x284>
   17f58:	cmp	r5, #0
   17f5c:	strne	r6, [sp, #28]
   17f60:	bne	181b8 <argp_error@@Base+0x520>
   17f64:	ldr	r4, [sp, #8]
   17f68:	mvn	r3, #0
   17f6c:	str	r3, [sp, #28]
   17f70:	mov	sl, #0
   17f74:	str	sl, [sp, #36]	; 0x24
   17f78:	mov	r5, sl
   17f7c:	mov	r9, sl
   17f80:	str	r8, [sp, #32]
   17f84:	mov	r8, sl
   17f88:	ldr	r0, [sp, #16]
   17f8c:	b	17fdc <argp_error@@Base+0x344>
   17f90:	ldr	r2, [r9, #8]
   17f94:	ldr	r3, [r4, #8]
   17f98:	cmp	r2, r3
   17f9c:	bne	18014 <argp_error@@Base+0x37c>
   17fa0:	ldr	r2, [r9, #12]
   17fa4:	ldr	r3, [r4, #12]
   17fa8:	cmp	r2, r3
   17fac:	bne	18014 <argp_error@@Base+0x37c>
   17fb0:	b	17fcc <argp_error@@Base+0x334>
   17fb4:	cmp	r8, #0
   17fb8:	moveq	sl, #1
   17fbc:	beq	17fcc <argp_error@@Base+0x334>
   17fc0:	mov	sl, #1
   17fc4:	mov	r3, #1
   17fc8:	strb	r3, [r8, r5]
   17fcc:	add	r5, r5, #1
   17fd0:	ldr	r0, [r4, #16]!
   17fd4:	cmp	r0, #0
   17fd8:	beq	1807c <argp_error@@Base+0x3e4>
   17fdc:	mov	r2, r7
   17fe0:	ldr	r1, [fp, #20]
   17fe4:	bl	1154c <strncmp@plt>
   17fe8:	cmp	r0, #0
   17fec:	bne	17fcc <argp_error@@Base+0x334>
   17ff0:	cmp	r9, #0
   17ff4:	beq	18068 <argp_error@@Base+0x3d0>
   17ff8:	ldr	r3, [sp, #84]	; 0x54
   17ffc:	cmp	r3, #0
   18000:	bne	18014 <argp_error@@Base+0x37c>
   18004:	ldr	r2, [r9, #4]
   18008:	ldr	r3, [r4, #4]
   1800c:	cmp	r2, r3
   18010:	beq	17f90 <argp_error@@Base+0x2f8>
   18014:	cmp	sl, #0
   18018:	bne	17fcc <argp_error@@Base+0x334>
   1801c:	ldr	r3, [sp, #92]	; 0x5c
   18020:	cmp	r3, #0
   18024:	beq	17fb4 <argp_error@@Base+0x31c>
   18028:	cmp	r8, #0
   1802c:	bne	17fc4 <argp_error@@Base+0x32c>
   18030:	mov	r0, r6
   18034:	bl	14b98 <argp_parse@@Base+0x182c>
   18038:	subs	r8, r0, #0
   1803c:	beq	18074 <argp_error@@Base+0x3dc>
   18040:	mov	r2, r6
   18044:	mov	r1, #0
   18048:	mov	r0, r8
   1804c:	bl	1142c <memset@plt>
   18050:	ldr	r3, [sp, #28]
   18054:	mov	r2, #1
   18058:	strb	r2, [r8, r3]
   1805c:	mov	r3, #1
   18060:	str	r3, [sp, #36]	; 0x24
   18064:	b	17fc4 <argp_error@@Base+0x32c>
   18068:	str	r5, [sp, #28]
   1806c:	mov	r9, r4
   18070:	b	17fcc <argp_error@@Base+0x334>
   18074:	mov	sl, #1
   18078:	b	17fcc <argp_error@@Base+0x334>
   1807c:	mov	r3, r8
   18080:	str	r8, [sp, #16]
   18084:	ldr	r8, [sp, #32]
   18088:	cmp	sl, #0
   1808c:	cmpeq	r3, #0
   18090:	beq	181b0 <argp_error@@Base+0x518>
   18094:	ldr	r3, [sp, #92]	; 0x5c
   18098:	cmp	r3, #0
   1809c:	beq	180cc <argp_error@@Base+0x434>
   180a0:	cmp	sl, #0
   180a4:	beq	18108 <argp_error@@Base+0x470>
   180a8:	ldr	r3, [sp, #12]
   180ac:	ldr	r2, [r3]
   180b0:	ldr	r3, [pc, #708]	; 1837c <argp_error@@Base+0x6e4>
   180b4:	ldr	r0, [r3]
   180b8:	ldr	r3, [fp, #20]
   180bc:	str	r3, [sp]
   180c0:	ldr	r3, [sp, #96]	; 0x60
   180c4:	ldr	r1, [pc, #692]	; 18380 <argp_error@@Base+0x6e8>
   180c8:	bl	113fc <fprintf@plt>
   180cc:	ldr	r3, [sp, #36]	; 0x24
   180d0:	cmp	r3, #0
   180d4:	bne	181a4 <argp_error@@Base+0x50c>
   180d8:	ldr	r4, [fp, #20]
   180dc:	mov	r0, r4
   180e0:	bl	113e4 <strlen@plt>
   180e4:	add	r0, r4, r0
   180e8:	str	r0, [fp, #20]
   180ec:	ldr	r3, [fp]
   180f0:	add	r3, r3, #1
   180f4:	str	r3, [fp]
   180f8:	mov	r3, #0
   180fc:	str	r3, [fp, #8]
   18100:	mov	r0, #63	; 0x3f
   18104:	b	182fc <argp_error@@Base+0x664>
   18108:	ldr	r4, [pc, #620]	; 1837c <argp_error@@Base+0x6e4>
   1810c:	ldr	r0, [r4]
   18110:	bl	11510 <flockfile@plt>
   18114:	ldr	r3, [sp, #12]
   18118:	ldr	r2, [r3]
   1811c:	ldr	r0, [r4]
   18120:	ldr	r3, [fp, #20]
   18124:	str	r3, [sp]
   18128:	ldr	r3, [sp, #96]	; 0x60
   1812c:	ldr	r1, [pc, #592]	; 18384 <argp_error@@Base+0x6ec>
   18130:	bl	113fc <fprintf@plt>
   18134:	cmp	r6, #0
   18138:	ble	18188 <argp_error@@Base+0x4f0>
   1813c:	ldr	r3, [sp, #16]
   18140:	mov	r4, r3
   18144:	add	r6, r3, r6
   18148:	ldr	r7, [pc, #568]	; 18388 <argp_error@@Base+0x6f0>
   1814c:	ldr	r5, [pc, #552]	; 1837c <argp_error@@Base+0x6e4>
   18150:	ldr	r8, [sp, #8]
   18154:	b	18164 <argp_error@@Base+0x4cc>
   18158:	add	sl, sl, #1
   1815c:	cmp	r4, r6
   18160:	beq	18188 <argp_error@@Base+0x4f0>
   18164:	ldrb	r3, [r4], #1
   18168:	cmp	r3, #0
   1816c:	beq	18158 <argp_error@@Base+0x4c0>
   18170:	ldr	r3, [r8, sl, lsl #4]
   18174:	ldr	r2, [sp, #96]	; 0x60
   18178:	mov	r1, r7
   1817c:	ldr	r0, [r5]
   18180:	bl	113fc <fprintf@plt>
   18184:	b	18158 <argp_error@@Base+0x4c0>
   18188:	ldr	r4, [pc, #492]	; 1837c <argp_error@@Base+0x6e4>
   1818c:	ldr	r1, [r4]
   18190:	mov	r0, #10
   18194:	bl	114c8 <fputc@plt>
   18198:	ldr	r0, [r4]
   1819c:	bl	11324 <funlockfile@plt>
   181a0:	b	180cc <argp_error@@Base+0x434>
   181a4:	ldr	r0, [sp, #16]
   181a8:	bl	13f60 <argp_parse@@Base+0xbf4>
   181ac:	b	180d8 <argp_error@@Base+0x440>
   181b0:	cmp	r9, #0
   181b4:	beq	18208 <argp_error@@Base+0x570>
   181b8:	ldr	r2, [fp]
   181bc:	add	r3, r2, #1
   181c0:	str	r3, [fp]
   181c4:	mov	r1, #0
   181c8:	str	r1, [fp, #20]
   181cc:	ldrb	r1, [r8]
   181d0:	cmp	r1, #0
   181d4:	beq	182c8 <argp_error@@Base+0x630>
   181d8:	ldr	r3, [r9, #4]
   181dc:	cmp	r3, #0
   181e0:	addne	r8, r8, #1
   181e4:	strne	r8, [fp, #12]
   181e8:	bne	182d4 <argp_error@@Base+0x63c>
   181ec:	ldr	r3, [sp, #92]	; 0x5c
   181f0:	cmp	r3, #0
   181f4:	bne	182a0 <argp_error@@Base+0x608>
   181f8:	ldr	r3, [r9, #12]
   181fc:	str	r3, [fp, #8]
   18200:	mov	r0, #63	; 0x3f
   18204:	b	182fc <argp_error@@Base+0x664>
   18208:	ldr	r3, [sp, #84]	; 0x54
   1820c:	cmp	r3, #0
   18210:	bne	18240 <argp_error@@Base+0x5a8>
   18214:	ldr	r3, [sp, #92]	; 0x5c
   18218:	cmp	r3, #0
   1821c:	bne	18278 <argp_error@@Base+0x5e0>
   18220:	mov	r2, #0
   18224:	str	r2, [fp, #20]
   18228:	ldr	r3, [fp]
   1822c:	add	r3, r3, #1
   18230:	str	r3, [fp]
   18234:	str	r2, [fp, #8]
   18238:	mov	r0, #63	; 0x3f
   1823c:	b	182fc <argp_error@@Base+0x664>
   18240:	ldr	r3, [fp]
   18244:	ldr	r2, [sp, #12]
   18248:	ldr	r3, [r2, r3, lsl #2]
   1824c:	ldrb	r3, [r3, #1]
   18250:	cmp	r3, #45	; 0x2d
   18254:	beq	18214 <argp_error@@Base+0x57c>
   18258:	ldr	r3, [fp, #20]
   1825c:	ldrb	r1, [r3]
   18260:	ldr	r0, [sp, #24]
   18264:	bl	113f0 <strchr@plt>
   18268:	cmp	r0, #0
   1826c:	beq	18214 <argp_error@@Base+0x57c>
   18270:	mvn	r0, #0
   18274:	b	182fc <argp_error@@Base+0x664>
   18278:	ldr	r3, [sp, #12]
   1827c:	ldr	r2, [r3]
   18280:	ldr	r3, [pc, #244]	; 1837c <argp_error@@Base+0x6e4>
   18284:	ldr	r0, [r3]
   18288:	ldr	r3, [fp, #20]
   1828c:	str	r3, [sp]
   18290:	ldr	r3, [sp, #96]	; 0x60
   18294:	ldr	r1, [pc, #240]	; 1838c <argp_error@@Base+0x6f4>
   18298:	bl	113fc <fprintf@plt>
   1829c:	b	18220 <argp_error@@Base+0x588>
   182a0:	ldr	r3, [sp, #12]
   182a4:	ldr	r2, [r3]
   182a8:	ldr	r3, [pc, #204]	; 1837c <argp_error@@Base+0x6e4>
   182ac:	ldr	r0, [r3]
   182b0:	ldr	r3, [r9]
   182b4:	str	r3, [sp]
   182b8:	ldr	r3, [sp, #96]	; 0x60
   182bc:	ldr	r1, [pc, #204]	; 18390 <argp_error@@Base+0x6f8>
   182c0:	bl	113fc <fprintf@plt>
   182c4:	b	181f8 <argp_error@@Base+0x560>
   182c8:	ldr	r1, [r9, #4]
   182cc:	cmp	r1, #1
   182d0:	beq	18304 <argp_error@@Base+0x66c>
   182d4:	ldr	r3, [sp, #80]	; 0x50
   182d8:	cmp	r3, #0
   182dc:	ldrne	r2, [sp, #28]
   182e0:	strne	r2, [r3]
   182e4:	ldr	r3, [r9, #8]
   182e8:	cmp	r3, #0
   182ec:	ldrne	r2, [r9, #12]
   182f0:	strne	r2, [r3]
   182f4:	movne	r0, #0
   182f8:	ldreq	r0, [r9, #12]
   182fc:	add	sp, sp, #44	; 0x2c
   18300:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18304:	ldr	r1, [sp, #20]
   18308:	cmp	r3, r1
   1830c:	bge	18328 <argp_error@@Base+0x690>
   18310:	add	r2, r2, #2
   18314:	str	r2, [fp]
   18318:	ldr	r2, [sp, #12]
   1831c:	ldr	r3, [r2, r3, lsl #2]
   18320:	str	r3, [fp, #12]
   18324:	b	182d4 <argp_error@@Base+0x63c>
   18328:	ldr	r3, [sp, #92]	; 0x5c
   1832c:	cmp	r3, #0
   18330:	bne	18354 <argp_error@@Base+0x6bc>
   18334:	ldr	r3, [r9, #12]
   18338:	str	r3, [fp, #8]
   1833c:	ldr	r3, [sp, #24]
   18340:	ldrb	r0, [r3]
   18344:	cmp	r0, #58	; 0x3a
   18348:	moveq	r0, #58	; 0x3a
   1834c:	movne	r0, #63	; 0x3f
   18350:	b	182fc <argp_error@@Base+0x664>
   18354:	ldr	r3, [sp, #12]
   18358:	ldr	r2, [r3]
   1835c:	ldr	r3, [pc, #24]	; 1837c <argp_error@@Base+0x6e4>
   18360:	ldr	r0, [r3]
   18364:	ldr	r3, [r9]
   18368:	str	r3, [sp]
   1836c:	ldr	r3, [sp, #96]	; 0x60
   18370:	ldr	r1, [pc, #28]	; 18394 <argp_error@@Base+0x6fc>
   18374:	bl	113fc <fprintf@plt>
   18378:	b	18334 <argp_error@@Base+0x69c>
   1837c:	strdeq	fp, [r2], -r0
   18380:	ldrdeq	sl, [r1], -ip
   18384:	strdeq	sl, [r1], -ip
   18388:	andeq	sl, r1, ip, lsr #8
   1838c:	andeq	sl, r1, r4, lsr r4
   18390:	andeq	sl, r1, r4, asr r4
   18394:	andeq	sl, r1, r4, lsl #9
   18398:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1839c:	sub	sp, sp, #36	; 0x24
   183a0:	str	r3, [sp, #24]
   183a4:	ldr	r4, [sp, #80]	; 0x50
   183a8:	ldr	r8, [r4, #4]
   183ac:	subs	r5, r0, #0
   183b0:	ble	188b8 <argp_error@@Base+0xc20>
   183b4:	mov	r9, r1
   183b8:	mov	r6, r2
   183bc:	mov	r3, #0
   183c0:	str	r3, [r4, #12]
   183c4:	ldr	r3, [r4]
   183c8:	cmp	r3, #0
   183cc:	beq	183f0 <argp_error@@Base+0x758>
   183d0:	ldr	r3, [r4, #16]
   183d4:	cmp	r3, #0
   183d8:	beq	183f8 <argp_error@@Base+0x760>
   183dc:	ldrb	r3, [r2]
   183e0:	sub	r3, r3, #43	; 0x2b
   183e4:	tst	r3, #253	; 0xfd
   183e8:	addeq	r6, r2, #1
   183ec:	b	18454 <argp_error@@Base+0x7bc>
   183f0:	mov	r3, #1
   183f4:	str	r3, [r4]
   183f8:	ldr	r3, [r4]
   183fc:	str	r3, [r4, #32]
   18400:	str	r3, [r4, #28]
   18404:	mov	r3, #0
   18408:	str	r3, [r4, #20]
   1840c:	ldrb	r3, [r6]
   18410:	cmp	r3, #45	; 0x2d
   18414:	moveq	r3, #2
   18418:	streq	r3, [r4, #24]
   1841c:	addeq	r6, r6, #1
   18420:	beq	1844c <argp_error@@Base+0x7b4>
   18424:	cmp	r3, #43	; 0x2b
   18428:	moveq	r3, #0
   1842c:	streq	r3, [r4, #24]
   18430:	addeq	r6, r6, #1
   18434:	beq	1844c <argp_error@@Base+0x7b4>
   18438:	ldr	r3, [sp, #84]	; 0x54
   1843c:	cmp	r3, #0
   18440:	beq	184f0 <argp_error@@Base+0x858>
   18444:	mov	r3, #0
   18448:	str	r3, [r4, #24]
   1844c:	mov	r3, #1
   18450:	str	r3, [r4, #16]
   18454:	ldrb	r3, [r6]
   18458:	cmp	r3, #58	; 0x3a
   1845c:	moveq	r8, #0
   18460:	ldr	r3, [r4, #20]
   18464:	cmp	r3, #0
   18468:	beq	18478 <argp_error@@Base+0x7e0>
   1846c:	ldrb	r3, [r3]
   18470:	cmp	r3, #0
   18474:	bne	18604 <argp_error@@Base+0x96c>
   18478:	ldr	r3, [r4]
   1847c:	ldr	r2, [r4, #32]
   18480:	cmp	r2, r3
   18484:	strgt	r3, [r4, #32]
   18488:	ldr	r2, [r4, #28]
   1848c:	cmp	r3, r2
   18490:	strlt	r3, [r4, #28]
   18494:	ldr	r2, [r4, #24]
   18498:	cmp	r2, #1
   1849c:	beq	1850c <argp_error@@Base+0x874>
   184a0:	ldr	r7, [r4]
   184a4:	cmp	r5, r7
   184a8:	beq	18590 <argp_error@@Base+0x8f8>
   184ac:	ldr	sl, [r9, r7, lsl #2]
   184b0:	ldr	r1, [pc, #1088]	; 188f8 <argp_error@@Base+0xc60>
   184b4:	mov	r0, sl
   184b8:	bl	11240 <strcmp@plt>
   184bc:	cmp	r0, #0
   184c0:	bne	188c8 <argp_error@@Base+0xc30>
   184c4:	add	r7, r7, #1
   184c8:	str	r7, [r4]
   184cc:	ldr	r2, [r4, #28]
   184d0:	ldr	r3, [r4, #32]
   184d4:	cmp	r7, r3
   184d8:	cmpne	r2, r3
   184dc:	beq	18580 <argp_error@@Base+0x8e8>
   184e0:	mov	r1, r4
   184e4:	mov	r0, r9
   184e8:	bl	17ddc <argp_error@@Base+0x144>
   184ec:	b	18588 <argp_error@@Base+0x8f0>
   184f0:	ldr	r0, [pc, #1028]	; 188fc <argp_error@@Base+0xc64>
   184f4:	bl	1136c <getenv@plt>
   184f8:	cmp	r0, #0
   184fc:	bne	18444 <argp_error@@Base+0x7ac>
   18500:	mov	r3, #1
   18504:	str	r3, [r4, #24]
   18508:	b	1844c <argp_error@@Base+0x7b4>
   1850c:	ldr	r2, [r4, #32]
   18510:	ldr	r1, [r4, #28]
   18514:	cmp	r1, r2
   18518:	cmpne	r3, r2
   1851c:	beq	18530 <argp_error@@Base+0x898>
   18520:	mov	r1, r4
   18524:	mov	r0, r9
   18528:	bl	17ddc <argp_error@@Base+0x144>
   1852c:	b	18538 <argp_error@@Base+0x8a0>
   18530:	cmp	r3, r2
   18534:	strne	r3, [r4, #28]
   18538:	ldr	r3, [r4]
   1853c:	cmp	r5, r3
   18540:	ble	18578 <argp_error@@Base+0x8e0>
   18544:	add	r1, r9, r3, lsl #2
   18548:	b	1855c <argp_error@@Base+0x8c4>
   1854c:	add	r3, r3, #1
   18550:	str	r3, [r4]
   18554:	cmp	r5, r3
   18558:	beq	18578 <argp_error@@Base+0x8e0>
   1855c:	ldr	r2, [r1], #4
   18560:	ldrb	r0, [r2]
   18564:	cmp	r0, #45	; 0x2d
   18568:	bne	1854c <argp_error@@Base+0x8b4>
   1856c:	ldrb	r2, [r2, #1]
   18570:	cmp	r2, #0
   18574:	beq	1854c <argp_error@@Base+0x8b4>
   18578:	str	r3, [r4, #32]
   1857c:	b	184a0 <argp_error@@Base+0x808>
   18580:	cmp	r2, r3
   18584:	streq	r7, [r4, #28]
   18588:	str	r5, [r4, #32]
   1858c:	str	r5, [r4]
   18590:	ldr	r3, [r4, #28]
   18594:	ldr	r2, [r4, #32]
   18598:	cmp	r3, r2
   1859c:	mvneq	r0, #0
   185a0:	strne	r3, [r4]
   185a4:	mvnne	r0, #0
   185a8:	b	18708 <argp_error@@Base+0xa70>
   185ac:	ldrb	r1, [sl, #1]
   185b0:	cmp	r1, #0
   185b4:	beq	188d4 <argp_error@@Base+0xc3c>
   185b8:	ldr	r3, [sp, #24]
   185bc:	cmp	r3, #0
   185c0:	beq	185f4 <argp_error@@Base+0x95c>
   185c4:	cmp	r1, #45	; 0x2d
   185c8:	beq	1866c <argp_error@@Base+0x9d4>
   185cc:	ldr	r3, [sp, #76]	; 0x4c
   185d0:	cmp	r3, #0
   185d4:	beq	185f4 <argp_error@@Base+0x95c>
   185d8:	ldrb	r3, [sl, #2]
   185dc:	cmp	r3, #0
   185e0:	bne	186ac <argp_error@@Base+0xa14>
   185e4:	mov	r0, r6
   185e8:	bl	113f0 <strchr@plt>
   185ec:	cmp	r0, #0
   185f0:	beq	186ac <argp_error@@Base+0xa14>
   185f4:	ldr	r3, [r4]
   185f8:	ldr	r3, [r9, r3, lsl #2]
   185fc:	add	r3, r3, #1
   18600:	str	r3, [r4, #20]
   18604:	ldr	sl, [r4, #20]
   18608:	add	fp, sl, #1
   1860c:	str	fp, [r4, #20]
   18610:	ldrb	r7, [sl]
   18614:	str	r7, [sp, #28]
   18618:	mov	r1, r7
   1861c:	mov	r0, r6
   18620:	bl	113f0 <strchr@plt>
   18624:	ldrb	r3, [sl, #1]
   18628:	cmp	r3, #0
   1862c:	ldreq	r3, [r4]
   18630:	addeq	r3, r3, #1
   18634:	streq	r3, [r4]
   18638:	sub	r3, r7, #58	; 0x3a
   1863c:	uxtb	r3, r3
   18640:	cmp	r0, #0
   18644:	cmpne	r3, #1
   18648:	bls	186f4 <argp_error@@Base+0xa5c>
   1864c:	ldrb	r3, [r0]
   18650:	cmp	r3, #87	; 0x57
   18654:	beq	1872c <argp_error@@Base+0xa94>
   18658:	ldrb	r3, [r0, #1]
   1865c:	cmp	r3, #58	; 0x3a
   18660:	beq	187f8 <argp_error@@Base+0xb60>
   18664:	mov	r0, r7
   18668:	b	18708 <argp_error@@Base+0xa70>
   1866c:	add	sl, sl, #2
   18670:	str	sl, [r4, #20]
   18674:	ldr	r3, [pc, #636]	; 188f8 <argp_error@@Base+0xc60>
   18678:	str	r3, [sp, #16]
   1867c:	str	r8, [sp, #12]
   18680:	str	r4, [sp, #8]
   18684:	ldr	r3, [sp, #76]	; 0x4c
   18688:	str	r3, [sp, #4]
   1868c:	ldr	r3, [sp, #72]	; 0x48
   18690:	str	r3, [sp]
   18694:	ldr	r3, [sp, #24]
   18698:	mov	r2, r6
   1869c:	mov	r1, r9
   186a0:	mov	r0, r5
   186a4:	bl	17eac <argp_error@@Base+0x214>
   186a8:	b	18708 <argp_error@@Base+0xa70>
   186ac:	add	sl, sl, #1
   186b0:	str	sl, [r4, #20]
   186b4:	ldr	r3, [pc, #580]	; 18900 <argp_error@@Base+0xc68>
   186b8:	str	r3, [sp, #16]
   186bc:	str	r8, [sp, #12]
   186c0:	str	r4, [sp, #8]
   186c4:	ldr	r3, [sp, #76]	; 0x4c
   186c8:	str	r3, [sp, #4]
   186cc:	ldr	r3, [sp, #72]	; 0x48
   186d0:	str	r3, [sp]
   186d4:	ldr	r3, [sp, #24]
   186d8:	mov	r2, r6
   186dc:	mov	r1, r9
   186e0:	mov	r0, r5
   186e4:	bl	17eac <argp_error@@Base+0x214>
   186e8:	cmn	r0, #1
   186ec:	bne	18708 <argp_error@@Base+0xa70>
   186f0:	b	185f4 <argp_error@@Base+0x95c>
   186f4:	cmp	r8, #0
   186f8:	bne	18710 <argp_error@@Base+0xa78>
   186fc:	ldr	r3, [sp, #28]
   18700:	str	r3, [r4, #8]
   18704:	mov	r0, #63	; 0x3f
   18708:	add	sp, sp, #36	; 0x24
   1870c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18710:	ldr	r3, [sp, #28]
   18714:	ldr	r2, [r9]
   18718:	ldr	r1, [pc, #484]	; 18904 <argp_error@@Base+0xc6c>
   1871c:	ldr	r0, [pc, #484]	; 18908 <argp_error@@Base+0xc70>
   18720:	ldr	r0, [r0]
   18724:	bl	113fc <fprintf@plt>
   18728:	b	186fc <argp_error@@Base+0xa64>
   1872c:	ldrb	r3, [r0, #1]
   18730:	ldr	r2, [sp, #24]
   18734:	cmp	r3, #59	; 0x3b
   18738:	movne	r3, #0
   1873c:	moveq	r3, #1
   18740:	cmp	r2, #0
   18744:	moveq	r3, #0
   18748:	cmp	r3, #0
   1874c:	beq	18658 <argp_error@@Base+0x9c0>
   18750:	ldrb	r3, [sl, #1]
   18754:	cmp	r3, #0
   18758:	strne	fp, [r4, #12]
   1875c:	bne	18774 <argp_error@@Base+0xadc>
   18760:	ldr	r3, [r4]
   18764:	cmp	r5, r3
   18768:	beq	187b8 <argp_error@@Base+0xb20>
   1876c:	ldr	r3, [r9, r3, lsl #2]
   18770:	str	r3, [r4, #12]
   18774:	ldr	r3, [r4, #12]
   18778:	str	r3, [r4, #20]
   1877c:	mov	r3, #0
   18780:	str	r3, [r4, #12]
   18784:	ldr	r2, [pc, #384]	; 1890c <argp_error@@Base+0xc74>
   18788:	str	r2, [sp, #16]
   1878c:	str	r8, [sp, #12]
   18790:	str	r4, [sp, #8]
   18794:	str	r3, [sp, #4]
   18798:	ldr	r3, [sp, #72]	; 0x48
   1879c:	str	r3, [sp]
   187a0:	ldr	r3, [sp, #24]
   187a4:	mov	r2, r6
   187a8:	mov	r1, r9
   187ac:	mov	r0, r5
   187b0:	bl	17eac <argp_error@@Base+0x214>
   187b4:	b	18708 <argp_error@@Base+0xa70>
   187b8:	cmp	r8, #0
   187bc:	bne	187dc <argp_error@@Base+0xb44>
   187c0:	ldr	r3, [sp, #28]
   187c4:	str	r3, [r4, #8]
   187c8:	ldrb	r0, [r6]
   187cc:	cmp	r0, #58	; 0x3a
   187d0:	moveq	r0, #58	; 0x3a
   187d4:	movne	r0, #63	; 0x3f
   187d8:	b	18708 <argp_error@@Base+0xa70>
   187dc:	ldr	r3, [sp, #28]
   187e0:	ldr	r2, [r9]
   187e4:	ldr	r1, [pc, #292]	; 18910 <argp_error@@Base+0xc78>
   187e8:	ldr	r0, [pc, #280]	; 18908 <argp_error@@Base+0xc70>
   187ec:	ldr	r0, [r0]
   187f0:	bl	113fc <fprintf@plt>
   187f4:	b	187c0 <argp_error@@Base+0xb28>
   187f8:	ldrb	r3, [r0, #2]
   187fc:	cmp	r3, #58	; 0x3a
   18800:	beq	1882c <argp_error@@Base+0xb94>
   18804:	ldrb	r3, [sl, #1]
   18808:	cmp	r3, #0
   1880c:	beq	18858 <argp_error@@Base+0xbc0>
   18810:	str	fp, [r4, #12]
   18814:	ldr	r3, [r4]
   18818:	add	r3, r3, #1
   1881c:	str	r3, [r4]
   18820:	mov	r3, #0
   18824:	str	r3, [r4, #20]
   18828:	b	18664 <argp_error@@Base+0x9cc>
   1882c:	ldrb	r3, [sl, #1]
   18830:	cmp	r3, #0
   18834:	strne	fp, [r4, #12]
   18838:	ldrne	r3, [r4]
   1883c:	addne	r3, r3, #1
   18840:	strne	r3, [r4]
   18844:	moveq	r3, #0
   18848:	streq	r3, [r4, #12]
   1884c:	mov	r3, #0
   18850:	str	r3, [r4, #20]
   18854:	b	18664 <argp_error@@Base+0x9cc>
   18858:	ldr	r3, [r4]
   1885c:	cmp	r5, r3
   18860:	beq	18878 <argp_error@@Base+0xbe0>
   18864:	add	r2, r3, #1
   18868:	str	r2, [r4]
   1886c:	ldr	r3, [r9, r3, lsl #2]
   18870:	str	r3, [r4, #12]
   18874:	b	18820 <argp_error@@Base+0xb88>
   18878:	cmp	r8, #0
   1887c:	bne	1889c <argp_error@@Base+0xc04>
   18880:	ldr	r3, [sp, #28]
   18884:	str	r3, [r4, #8]
   18888:	ldrb	r7, [r6]
   1888c:	cmp	r7, #58	; 0x3a
   18890:	moveq	r7, #58	; 0x3a
   18894:	movne	r7, #63	; 0x3f
   18898:	b	18820 <argp_error@@Base+0xb88>
   1889c:	ldr	r3, [sp, #28]
   188a0:	ldr	r2, [r9]
   188a4:	ldr	r1, [pc, #100]	; 18910 <argp_error@@Base+0xc78>
   188a8:	ldr	r0, [pc, #88]	; 18908 <argp_error@@Base+0xc70>
   188ac:	ldr	r0, [r0]
   188b0:	bl	113fc <fprintf@plt>
   188b4:	b	18880 <argp_error@@Base+0xbe8>
   188b8:	mvn	r0, #0
   188bc:	b	18708 <argp_error@@Base+0xa70>
   188c0:	mvn	r0, #0
   188c4:	b	18708 <argp_error@@Base+0xa70>
   188c8:	ldrb	r3, [sl]
   188cc:	cmp	r3, #45	; 0x2d
   188d0:	beq	185ac <argp_error@@Base+0x914>
   188d4:	ldr	r3, [r4, #24]
   188d8:	cmp	r3, #0
   188dc:	beq	188c0 <argp_error@@Base+0xc28>
   188e0:	add	r3, r7, #1
   188e4:	str	r3, [r4]
   188e8:	ldr	r3, [r9, r7, lsl #2]
   188ec:	str	r3, [r4, #12]
   188f0:	mov	r0, #1
   188f4:	b	18708 <argp_error@@Base+0xa70>
   188f8:	andeq	r9, r1, ip, ror fp
   188fc:	andeq	sl, r1, ip, lsr #9
   18900:			; <UNDEFINED> instruction: 0x0001a4bc
   18904:	andeq	sl, r1, r0, asr #9
   18908:	strdeq	fp, [r2], -r0
   1890c:	andeq	sl, r1, r8, lsl #10
   18910:	ldrdeq	sl, [r1], -ip
   18914:	push	{r4, r5, lr}
   18918:	sub	sp, sp, #20
   1891c:	ldr	r4, [pc, #84]	; 18978 <argp_error@@Base+0xce0>
   18920:	ldr	r5, [pc, #84]	; 1897c <argp_error@@Base+0xce4>
   18924:	ldr	ip, [r5]
   18928:	str	ip, [r4]
   1892c:	ldr	ip, [r5, #4]
   18930:	str	ip, [r4, #4]
   18934:	ldr	ip, [sp, #40]	; 0x28
   18938:	str	ip, [sp, #12]
   1893c:	str	r4, [sp, #8]
   18940:	ldr	ip, [sp, #36]	; 0x24
   18944:	str	ip, [sp, #4]
   18948:	ldr	ip, [sp, #32]
   1894c:	str	ip, [sp]
   18950:	bl	18398 <argp_error@@Base+0x700>
   18954:	ldr	r3, [r4]
   18958:	str	r3, [r5]
   1895c:	ldr	r2, [r4, #12]
   18960:	ldr	r3, [pc, #24]	; 18980 <argp_error@@Base+0xce8>
   18964:	str	r2, [r3]
   18968:	ldr	r3, [r4, #8]
   1896c:	str	r3, [r5, #8]
   18970:	add	sp, sp, #20
   18974:	pop	{r4, r5, pc}
   18978:	andeq	fp, r2, r4, lsl #25
   1897c:	ldrdeq	fp, [r2], -r4
   18980:	andeq	ip, r2, r0, asr r2
   18984:	push	{lr}		; (str lr, [sp, #-4]!)
   18988:	sub	sp, sp, #20
   1898c:	mov	r3, #1
   18990:	str	r3, [sp, #8]
   18994:	mov	r3, #0
   18998:	str	r3, [sp, #4]
   1899c:	str	r3, [sp]
   189a0:	bl	18914 <argp_error@@Base+0xc7c>
   189a4:	add	sp, sp, #20
   189a8:	pop	{pc}		; (ldr pc, [sp], #4)
   189ac:	push	{r4, r5, r6, lr}
   189b0:	mov	r6, r0
   189b4:	mov	r5, r1
   189b8:	subs	r4, r2, #0
   189bc:	beq	189e8 <argp_error@@Base+0xd50>
   189c0:	mov	r1, r4
   189c4:	mvn	r0, #0
   189c8:	bl	19184 <argp_error@@Base+0x14ec>
   189cc:	cmp	r0, r5
   189d0:	bcs	189e8 <argp_error@@Base+0xd50>
   189d4:	bl	11408 <__errno_location@plt>
   189d8:	mov	r3, #12
   189dc:	str	r3, [r0]
   189e0:	mov	r0, #0
   189e4:	pop	{r4, r5, r6, pc}
   189e8:	mul	r1, r5, r4
   189ec:	mov	r0, r6
   189f0:	bl	14bc8 <argp_parse@@Base+0x185c>
   189f4:	pop	{r4, r5, r6, pc}
   189f8:	push	{r4, r5, r6, r7, r8, lr}
   189fc:	mov	r8, r0
   18a00:	mov	r7, r1
   18a04:	mov	r6, r2
   18a08:	mov	r5, r3
   18a0c:	mov	r0, #36	; 0x24
   18a10:	bl	14b98 <argp_parse@@Base+0x182c>
   18a14:	subs	r4, r0, #0
   18a18:	beq	18a58 <argp_error@@Base+0xdc0>
   18a1c:	str	r8, [r4]
   18a20:	str	r7, [r4, #4]
   18a24:	str	r6, [r4, #8]
   18a28:	str	r5, [r4, #12]
   18a2c:	mov	r3, #0
   18a30:	str	r3, [r4, #20]
   18a34:	str	r3, [r4, #16]
   18a38:	mov	r0, #200	; 0xc8
   18a3c:	bl	14b98 <argp_parse@@Base+0x182c>
   18a40:	str	r0, [r4, #24]
   18a44:	cmp	r0, #0
   18a48:	strne	r0, [r4, #28]
   18a4c:	addne	r0, r0, #200	; 0xc8
   18a50:	strne	r0, [r4, #32]
   18a54:	beq	18a60 <argp_error@@Base+0xdc8>
   18a58:	mov	r0, r4
   18a5c:	pop	{r4, r5, r6, r7, r8, pc}
   18a60:	mov	r0, r4
   18a64:	bl	13f60 <argp_parse@@Base+0xbf4>
   18a68:	mov	r4, #0
   18a6c:	b	18a58 <argp_error@@Base+0xdc0>
   18a70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18a74:	sub	sp, sp, #20
   18a78:	mov	r4, r0
   18a7c:	ldr	r2, [r0, #24]
   18a80:	ldr	r3, [r0, #16]
   18a84:	add	r9, r2, r3
   18a88:	mov	sl, #32
   18a8c:	b	18b38 <argp_error@@Base+0xea0>
   18a90:	add	r5, r5, #1
   18a94:	cmp	r6, r5
   18a98:	beq	18ac8 <argp_error@@Base+0xe30>
   18a9c:	ldr	r0, [r4]
   18aa0:	ldr	r3, [r0, #20]
   18aa4:	ldr	r2, [r0, #24]
   18aa8:	cmp	r3, r2
   18aac:	addcc	r2, r3, #1
   18ab0:	strcc	r2, [r0, #20]
   18ab4:	strbcc	sl, [r3]
   18ab8:	bcc	18a90 <argp_error@@Base+0xdf8>
   18abc:	mov	r1, sl
   18ac0:	bl	11480 <__overflow@plt>
   18ac4:	b	18a90 <argp_error@@Base+0xdf8>
   18ac8:	str	r6, [r4, #20]
   18acc:	ldr	fp, [r4, #28]
   18ad0:	str	fp, [sp, #8]
   18ad4:	str	r9, [sp, #4]
   18ad8:	sub	r3, fp, r9
   18adc:	str	r3, [sp]
   18ae0:	mov	r2, r3
   18ae4:	mov	r1, #10
   18ae8:	mov	r0, r9
   18aec:	bl	11450 <memchr@plt>
   18af0:	mov	r7, r0
   18af4:	ldr	r3, [r4, #20]
   18af8:	cmp	r3, #0
   18afc:	movlt	r3, #0
   18b00:	strlt	r3, [r4, #20]
   18b04:	cmp	r7, #0
   18b08:	beq	18ba8 <argp_error@@Base+0xf10>
   18b0c:	ldr	r0, [r4, #20]
   18b10:	mov	r5, r7
   18b14:	ldr	r8, [r4, #8]
   18b18:	ldr	r3, [sp, #4]
   18b1c:	sub	r3, r7, r3
   18b20:	add	r3, r3, r0
   18b24:	cmp	r3, r8
   18b28:	bge	18bf8 <argp_error@@Base+0xf60>
   18b2c:	mov	r3, #0
   18b30:	str	r3, [r4, #20]
   18b34:	add	r9, r7, #1
   18b38:	ldr	fp, [r4, #28]
   18b3c:	cmp	r9, fp
   18b40:	bcs	18be0 <argp_error@@Base+0xf48>
   18b44:	ldr	r3, [r4, #20]
   18b48:	cmp	r3, #0
   18b4c:	bne	18acc <argp_error@@Base+0xe34>
   18b50:	ldr	r6, [r4, #4]
   18b54:	cmp	r6, #0
   18b58:	beq	18fa4 <argp_error@@Base+0x130c>
   18b5c:	add	r3, fp, r6
   18b60:	ldr	r2, [r4, #32]
   18b64:	cmp	r2, r3
   18b68:	movls	r5, #0
   18b6c:	bls	18a9c <argp_error@@Base+0xe04>
   18b70:	add	r5, r9, r6
   18b74:	sub	r2, fp, r9
   18b78:	mov	r1, r9
   18b7c:	mov	r0, r5
   18b80:	bl	1127c <memmove@plt>
   18b84:	ldr	r3, [r4, #28]
   18b88:	add	r3, r3, r6
   18b8c:	str	r3, [r4, #28]
   18b90:	mov	r2, r6
   18b94:	mov	r1, sl
   18b98:	mov	r0, r9
   18b9c:	bl	1142c <memset@plt>
   18ba0:	mov	r9, r5
   18ba4:	b	18ac8 <argp_error@@Base+0xe30>
   18ba8:	ldr	r3, [r4, #20]
   18bac:	ldr	r2, [sp]
   18bb0:	add	r3, r2, r3
   18bb4:	ldr	r6, [r4, #8]
   18bb8:	cmp	r3, r6
   18bbc:	bcc	18bdc <argp_error@@Base+0xf44>
   18bc0:	sub	r6, r6, #1
   18bc4:	ldr	r3, [r4, #12]
   18bc8:	str	r3, [sp, #12]
   18bcc:	cmp	r3, #0
   18bd0:	blt	18cec <argp_error@@Base+0x1054>
   18bd4:	mov	r7, fp
   18bd8:	b	18c0c <argp_error@@Base+0xf74>
   18bdc:	str	r3, [r4, #20]
   18be0:	ldr	r3, [r4, #28]
   18be4:	ldr	r2, [r4, #24]
   18be8:	sub	r3, r3, r2
   18bec:	str	r3, [r4, #16]
   18bf0:	add	sp, sp, #20
   18bf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18bf8:	sub	r6, r8, #1
   18bfc:	ldr	r3, [r4, #12]
   18c00:	str	r3, [sp, #12]
   18c04:	cmp	r3, #0
   18c08:	blt	18ca0 <argp_error@@Base+0x1008>
   18c0c:	ldr	r5, [r4, #20]
   18c10:	rsb	r5, r5, #1
   18c14:	add	r5, r5, r6
   18c18:	adds	r5, r9, r5
   18c1c:	bcs	18fcc <argp_error@@Base+0x1334>
   18c20:	bl	113cc <__ctype_b_loc@plt>
   18c24:	ldr	r0, [r0]
   18c28:	mov	r3, r5
   18c2c:	mov	r1, r3
   18c30:	sub	r3, r3, #1
   18c34:	ldrb	r2, [r1]
   18c38:	lsl	r2, r2, #1
   18c3c:	ldrh	r2, [r0, r2]
   18c40:	tst	r2, #1
   18c44:	bne	18d0c <argp_error@@Base+0x1074>
   18c48:	mov	r1, r3
   18c4c:	cmp	r3, r9
   18c50:	bcs	18c2c <argp_error@@Base+0xf94>
   18c54:	add	r6, r1, #1
   18c58:	cmp	r6, r9
   18c5c:	bhi	18d48 <argp_error@@Base+0x10b0>
   18c60:	cmp	r5, r7
   18c64:	bcs	18df8 <argp_error@@Base+0x1160>
   18c68:	add	r6, r5, #1
   18c6c:	mov	r8, r7
   18c70:	mov	r5, r6
   18c74:	cmp	r8, r6
   18c78:	beq	18df8 <argp_error@@Base+0x1160>
   18c7c:	bl	113cc <__ctype_b_loc@plt>
   18c80:	add	r6, r6, #1
   18c84:	ldrb	r3, [r5]
   18c88:	ldr	r2, [r0]
   18c8c:	lsl	r3, r3, #1
   18c90:	ldrh	r3, [r2, r3]
   18c94:	tst	r3, #1
   18c98:	beq	18c70 <argp_error@@Base+0xfd8>
   18c9c:	b	18e0c <argp_error@@Base+0x1174>
   18ca0:	cmp	fp, r7
   18ca4:	bls	18cec <argp_error@@Base+0x1054>
   18ca8:	sub	r0, r6, r0
   18cac:	ldr	r3, [sp, #8]
   18cb0:	sub	r2, r3, r7
   18cb4:	mov	r1, r7
   18cb8:	add	r0, r9, r0
   18cbc:	bl	1127c <memmove@plt>
   18cc0:	ldr	r3, [r4, #20]
   18cc4:	sub	r6, r6, r3
   18cc8:	add	r6, r9, r6
   18ccc:	sub	r5, r6, r7
   18cd0:	ldr	r3, [r4, #28]
   18cd4:	sub	r5, r3, r5
   18cd8:	str	r5, [r4, #28]
   18cdc:	mov	r3, #0
   18ce0:	str	r3, [r4, #20]
   18ce4:	add	r9, r9, r8
   18ce8:	b	18b38 <argp_error@@Base+0xea0>
   18cec:	ldr	r3, [r4, #20]
   18cf0:	ldr	r2, [sp]
   18cf4:	add	r3, r2, r3
   18cf8:	str	r3, [r4, #20]
   18cfc:	sub	r3, r6, r3
   18d00:	add	r3, fp, r3
   18d04:	str	r3, [r4, #28]
   18d08:	b	18be0 <argp_error@@Base+0xf48>
   18d0c:	add	r6, r1, #1
   18d10:	cmp	r6, r9
   18d14:	bls	18c60 <argp_error@@Base+0xfc8>
   18d18:	cmp	r1, r9
   18d1c:	bcc	18d48 <argp_error@@Base+0x10b0>
   18d20:	sub	ip, r9, #1
   18d24:	mov	r1, r3
   18d28:	cmp	ip, r3
   18d2c:	beq	18d48 <argp_error@@Base+0x10b0>
   18d30:	sub	r3, r3, #1
   18d34:	ldrb	r2, [r1]
   18d38:	lsl	r2, r2, #1
   18d3c:	ldrh	r2, [r0, r2]
   18d40:	tst	r2, #1
   18d44:	bne	18d24 <argp_error@@Base+0x108c>
   18d48:	add	r5, r1, #1
   18d4c:	ldr	r3, [sp]
   18d50:	add	r3, r3, #1
   18d54:	add	r3, r9, r3
   18d58:	cmp	r6, r3
   18d5c:	beq	18e30 <argp_error@@Base+0x1198>
   18d60:	add	r3, r5, #1
   18d64:	sub	r3, r6, r3
   18d68:	ldr	r2, [sp, #12]
   18d6c:	cmp	r3, r2
   18d70:	bge	18e48 <argp_error@@Base+0x11b0>
   18d74:	cmp	r6, fp
   18d78:	bcs	18e48 <argp_error@@Base+0x11b0>
   18d7c:	ldr	r3, [r4, #32]
   18d80:	ldr	r2, [sp, #8]
   18d84:	sub	r3, r3, r2
   18d88:	ldr	r2, [sp, #12]
   18d8c:	add	r2, r2, #1
   18d90:	cmp	r3, r2
   18d94:	bgt	18e90 <argp_error@@Base+0x11f8>
   18d98:	ldr	r0, [r4, #24]
   18d9c:	cmp	r5, r0
   18da0:	bls	18db4 <argp_error@@Base+0x111c>
   18da4:	ldr	r3, [r4]
   18da8:	sub	r2, r5, r0
   18dac:	mov	r1, #1
   18db0:	bl	112d0 <fwrite_unlocked@plt>
   18db4:	ldr	r0, [r4]
   18db8:	ldr	r3, [r0, #20]
   18dbc:	ldr	r2, [r0, #24]
   18dc0:	cmp	r3, r2
   18dc4:	addcc	r2, r3, #1
   18dc8:	strcc	r2, [r0, #20]
   18dcc:	movcc	r2, #10
   18dd0:	strbcc	r2, [r3]
   18dd4:	bcs	18edc <argp_error@@Base+0x1244>
   18dd8:	ldr	r7, [r4, #24]
   18ddc:	ldr	r3, [sp, #4]
   18de0:	sub	r3, r3, r7
   18de4:	ldr	r2, [sp]
   18de8:	add	r3, r2, r3
   18dec:	str	r3, [sp]
   18df0:	mov	r9, r7
   18df4:	b	18e58 <argp_error@@Base+0x11c0>
   18df8:	cmp	r5, r7
   18dfc:	moveq	r3, #0
   18e00:	streq	r3, [r4, #20]
   18e04:	addeq	r9, r7, #1
   18e08:	beq	18b38 <argp_error@@Base+0xea0>
   18e0c:	bl	113cc <__ctype_b_loc@plt>
   18e10:	ldr	r2, [r0]
   18e14:	mov	r6, r5
   18e18:	ldrb	r3, [r6, #1]!
   18e1c:	lsl	r3, r3, #1
   18e20:	ldrh	r3, [r2, r3]
   18e24:	tst	r3, #1
   18e28:	bne	18e18 <argp_error@@Base+0x1180>
   18e2c:	b	18d4c <argp_error@@Base+0x10b4>
   18e30:	ldr	r3, [r4, #32]
   18e34:	sub	r3, r3, r5
   18e38:	ldr	r2, [sp, #12]
   18e3c:	add	r2, r2, #1
   18e40:	cmp	r3, r2
   18e44:	blt	18d74 <argp_error@@Base+0x10dc>
   18e48:	mov	r3, #10
   18e4c:	strb	r3, [r5]
   18e50:	mov	r7, r9
   18e54:	add	r9, r5, #1
   18e58:	mov	r8, r6
   18e5c:	ldr	r3, [r4, #12]
   18e60:	sub	r2, r6, r9
   18e64:	cmp	r2, r3
   18e68:	bge	18ef8 <argp_error@@Base+0x1260>
   18e6c:	ldr	r2, [sp]
   18e70:	add	r2, r2, #1
   18e74:	add	r2, r7, r2
   18e78:	cmp	r6, r2
   18e7c:	beq	18ee8 <argp_error@@Base+0x1250>
   18e80:	cmp	r3, #0
   18e84:	movgt	r5, #0
   18e88:	bgt	18f5c <argp_error@@Base+0x12c4>
   18e8c:	b	18f1c <argp_error@@Base+0x1284>
   18e90:	ldr	r3, [sp, #8]
   18e94:	sub	r7, r3, r6
   18e98:	mov	r0, r2
   18e9c:	mov	r2, r7
   18ea0:	mov	r1, r6
   18ea4:	add	r0, r5, r0
   18ea8:	bl	1127c <memmove@plt>
   18eac:	ldr	r6, [r4, #12]
   18eb0:	add	r6, r6, #1
   18eb4:	add	r6, r5, r6
   18eb8:	add	r7, r6, r7
   18ebc:	ldr	r3, [sp, #4]
   18ec0:	sub	r3, r7, r3
   18ec4:	str	r3, [sp]
   18ec8:	mov	r3, #10
   18ecc:	strb	r3, [r5]
   18ed0:	mov	r7, r9
   18ed4:	add	r9, r5, #1
   18ed8:	b	18e58 <argp_error@@Base+0x11c0>
   18edc:	mov	r1, #10
   18ee0:	bl	11480 <__overflow@plt>
   18ee4:	b	18dd8 <argp_error@@Base+0x1140>
   18ee8:	ldr	r2, [r4, #32]
   18eec:	sub	r2, r2, r6
   18ef0:	cmp	r3, r2
   18ef4:	bgt	18e80 <argp_error@@Base+0x11e8>
   18ef8:	cmp	r3, #0
   18efc:	ble	18f1c <argp_error@@Base+0x1284>
   18f00:	mov	r3, r9
   18f04:	strb	sl, [r3], #1
   18f08:	sub	r1, r3, r9
   18f0c:	ldr	r2, [r4, #12]
   18f10:	cmp	r1, r2
   18f14:	blt	18f04 <argp_error@@Base+0x126c>
   18f18:	mov	r9, r3
   18f1c:	cmp	r9, r6
   18f20:	bcc	18f88 <argp_error@@Base+0x12f0>
   18f24:	sub	r7, r8, r7
   18f28:	ldr	r3, [sp]
   18f2c:	sub	r7, r3, r7
   18f30:	add	r7, r9, r7
   18f34:	str	r7, [r4, #28]
   18f38:	ldr	r3, [r4, #12]
   18f3c:	cmp	r3, #0
   18f40:	mvneq	r3, #0
   18f44:	str	r3, [r4, #20]
   18f48:	b	18b38 <argp_error@@Base+0xea0>
   18f4c:	add	r5, r5, #1
   18f50:	ldr	r3, [r4, #12]
   18f54:	cmp	r3, r5
   18f58:	ble	18f1c <argp_error@@Base+0x1284>
   18f5c:	ldr	r0, [r4]
   18f60:	ldr	r3, [r0, #20]
   18f64:	ldr	r2, [r0, #24]
   18f68:	cmp	r3, r2
   18f6c:	addcc	r2, r3, #1
   18f70:	strcc	r2, [r0, #20]
   18f74:	strbcc	sl, [r3]
   18f78:	bcc	18f4c <argp_error@@Base+0x12b4>
   18f7c:	mov	r1, sl
   18f80:	bl	11480 <__overflow@plt>
   18f84:	b	18f4c <argp_error@@Base+0x12b4>
   18f88:	ldr	r3, [sp]
   18f8c:	add	r2, r7, r3
   18f90:	sub	r2, r2, r8
   18f94:	mov	r1, r6
   18f98:	mov	r0, r9
   18f9c:	bl	1127c <memmove@plt>
   18fa0:	b	18f24 <argp_error@@Base+0x128c>
   18fa4:	str	fp, [sp, #8]
   18fa8:	str	r9, [sp, #4]
   18fac:	sub	r3, fp, r9
   18fb0:	str	r3, [sp]
   18fb4:	mov	r2, r3
   18fb8:	mov	r1, #10
   18fbc:	mov	r0, r9
   18fc0:	bl	11450 <memchr@plt>
   18fc4:	mov	r7, r0
   18fc8:	b	18b04 <argp_error@@Base+0xe6c>
   18fcc:	mov	r1, r5
   18fd0:	b	18c54 <argp_error@@Base+0xfbc>
   18fd4:	push	{r4, lr}
   18fd8:	mov	r4, r0
   18fdc:	bl	18a70 <argp_error@@Base+0xdd8>
   18fe0:	ldr	r2, [r4, #28]
   18fe4:	ldr	r0, [r4, #24]
   18fe8:	cmp	r2, r0
   18fec:	bls	19000 <argp_error@@Base+0x1368>
   18ff0:	ldr	r3, [r4]
   18ff4:	sub	r2, r2, r0
   18ff8:	mov	r1, #1
   18ffc:	bl	112d0 <fwrite_unlocked@plt>
   19000:	ldr	r0, [r4, #24]
   19004:	bl	13f60 <argp_parse@@Base+0xbf4>
   19008:	mov	r0, r4
   1900c:	bl	13f60 <argp_parse@@Base+0xbf4>
   19010:	pop	{r4, pc}
   19014:	ldr	r3, [r0, #32]
   19018:	ldr	r2, [r0, #28]
   1901c:	sub	r3, r3, r2
   19020:	cmp	r3, r1
   19024:	bcc	19030 <argp_error@@Base+0x1398>
   19028:	mov	r0, #1
   1902c:	bx	lr
   19030:	push	{r4, r5, r6, lr}
   19034:	mov	r5, r1
   19038:	mov	r4, r0
   1903c:	bl	18a70 <argp_error@@Base+0xdd8>
   19040:	ldr	r0, [r4, #24]
   19044:	ldr	r2, [r4, #28]
   19048:	ldr	r3, [r4]
   1904c:	sub	r2, r2, r0
   19050:	mov	r1, #1
   19054:	bl	112d0 <fwrite_unlocked@plt>
   19058:	ldr	r2, [r4, #28]
   1905c:	ldr	r3, [r4, #24]
   19060:	sub	r1, r2, r3
   19064:	cmp	r0, r1
   19068:	bne	190ac <argp_error@@Base+0x1414>
   1906c:	str	r3, [r4, #28]
   19070:	mov	r2, #0
   19074:	str	r2, [r4, #16]
   19078:	ldr	r1, [r4, #32]
   1907c:	sub	r1, r1, r3
   19080:	cmp	r5, r1
   19084:	bls	190a4 <argp_error@@Base+0x140c>
   19088:	adds	r5, r5, r1
   1908c:	bcc	190d8 <argp_error@@Base+0x1440>
   19090:	bl	11408 <__errno_location@plt>
   19094:	mov	r3, #12
   19098:	str	r3, [r0]
   1909c:	mov	r0, #0
   190a0:	pop	{r4, r5, r6, pc}
   190a4:	mov	r0, #1
   190a8:	pop	{r4, r5, r6, pc}
   190ac:	sub	r2, r2, r0
   190b0:	str	r2, [r4, #28]
   190b4:	ldr	r1, [r4, #16]
   190b8:	sub	r1, r1, r0
   190bc:	str	r1, [r4, #16]
   190c0:	sub	r2, r2, r3
   190c4:	add	r1, r3, r0
   190c8:	mov	r0, r3
   190cc:	bl	1127c <memmove@plt>
   190d0:	mov	r0, #0
   190d4:	pop	{r4, r5, r6, pc}
   190d8:	mov	r1, r5
   190dc:	mov	r0, r3
   190e0:	bl	14bc8 <argp_parse@@Base+0x185c>
   190e4:	cmp	r0, #0
   190e8:	beq	19090 <argp_error@@Base+0x13f8>
   190ec:	str	r0, [r4, #24]
   190f0:	add	r5, r0, r5
   190f4:	str	r5, [r4, #32]
   190f8:	str	r0, [r4, #28]
   190fc:	mov	r0, #1
   19100:	pop	{r4, r5, r6, pc}
   19104:	push	{r1, r2, r3}
   19108:	push	{r4, r5, r6, r7, lr}
   1910c:	sub	sp, sp, #8
   19110:	mov	r5, r0
   19114:	ldr	r7, [sp, #28]
   19118:	mov	r1, #150	; 0x96
   1911c:	add	r6, sp, #32
   19120:	mov	r0, r5
   19124:	bl	19014 <argp_error@@Base+0x137c>
   19128:	cmp	r0, #0
   1912c:	beq	19160 <argp_error@@Base+0x14c8>
   19130:	str	r6, [sp, #4]
   19134:	ldr	r0, [r5, #28]
   19138:	ldr	r4, [r5, #32]
   1913c:	sub	r4, r4, r0
   19140:	mov	r3, r6
   19144:	mov	r2, r7
   19148:	mov	r1, r4
   1914c:	bl	1151c <vsnprintf@plt>
   19150:	cmp	r4, r0
   19154:	bhi	19168 <argp_error@@Base+0x14d0>
   19158:	add	r1, r0, #1
   1915c:	b	19120 <argp_error@@Base+0x1488>
   19160:	mvn	r0, #0
   19164:	b	19174 <argp_error@@Base+0x14dc>
   19168:	ldr	r3, [r5, #28]
   1916c:	add	r3, r3, r0
   19170:	str	r3, [r5, #28]
   19174:	add	sp, sp, #8
   19178:	pop	{r4, r5, r6, r7, lr}
   1917c:	add	sp, sp, #12
   19180:	bx	lr
   19184:	subs	r2, r1, #1
   19188:	bxeq	lr
   1918c:	bcc	19364 <argp_error@@Base+0x16cc>
   19190:	cmp	r0, r1
   19194:	bls	19348 <argp_error@@Base+0x16b0>
   19198:	tst	r1, r2
   1919c:	beq	19354 <argp_error@@Base+0x16bc>
   191a0:	clz	r3, r0
   191a4:	clz	r2, r1
   191a8:	sub	r3, r2, r3
   191ac:	rsbs	r3, r3, #31
   191b0:	addne	r3, r3, r3, lsl #1
   191b4:	mov	r2, #0
   191b8:	addne	pc, pc, r3, lsl #2
   191bc:	nop			; (mov r0, r0)
   191c0:	cmp	r0, r1, lsl #31
   191c4:	adc	r2, r2, r2
   191c8:	subcs	r0, r0, r1, lsl #31
   191cc:	cmp	r0, r1, lsl #30
   191d0:	adc	r2, r2, r2
   191d4:	subcs	r0, r0, r1, lsl #30
   191d8:	cmp	r0, r1, lsl #29
   191dc:	adc	r2, r2, r2
   191e0:	subcs	r0, r0, r1, lsl #29
   191e4:	cmp	r0, r1, lsl #28
   191e8:	adc	r2, r2, r2
   191ec:	subcs	r0, r0, r1, lsl #28
   191f0:	cmp	r0, r1, lsl #27
   191f4:	adc	r2, r2, r2
   191f8:	subcs	r0, r0, r1, lsl #27
   191fc:	cmp	r0, r1, lsl #26
   19200:	adc	r2, r2, r2
   19204:	subcs	r0, r0, r1, lsl #26
   19208:	cmp	r0, r1, lsl #25
   1920c:	adc	r2, r2, r2
   19210:	subcs	r0, r0, r1, lsl #25
   19214:	cmp	r0, r1, lsl #24
   19218:	adc	r2, r2, r2
   1921c:	subcs	r0, r0, r1, lsl #24
   19220:	cmp	r0, r1, lsl #23
   19224:	adc	r2, r2, r2
   19228:	subcs	r0, r0, r1, lsl #23
   1922c:	cmp	r0, r1, lsl #22
   19230:	adc	r2, r2, r2
   19234:	subcs	r0, r0, r1, lsl #22
   19238:	cmp	r0, r1, lsl #21
   1923c:	adc	r2, r2, r2
   19240:	subcs	r0, r0, r1, lsl #21
   19244:	cmp	r0, r1, lsl #20
   19248:	adc	r2, r2, r2
   1924c:	subcs	r0, r0, r1, lsl #20
   19250:	cmp	r0, r1, lsl #19
   19254:	adc	r2, r2, r2
   19258:	subcs	r0, r0, r1, lsl #19
   1925c:	cmp	r0, r1, lsl #18
   19260:	adc	r2, r2, r2
   19264:	subcs	r0, r0, r1, lsl #18
   19268:	cmp	r0, r1, lsl #17
   1926c:	adc	r2, r2, r2
   19270:	subcs	r0, r0, r1, lsl #17
   19274:	cmp	r0, r1, lsl #16
   19278:	adc	r2, r2, r2
   1927c:	subcs	r0, r0, r1, lsl #16
   19280:	cmp	r0, r1, lsl #15
   19284:	adc	r2, r2, r2
   19288:	subcs	r0, r0, r1, lsl #15
   1928c:	cmp	r0, r1, lsl #14
   19290:	adc	r2, r2, r2
   19294:	subcs	r0, r0, r1, lsl #14
   19298:	cmp	r0, r1, lsl #13
   1929c:	adc	r2, r2, r2
   192a0:	subcs	r0, r0, r1, lsl #13
   192a4:	cmp	r0, r1, lsl #12
   192a8:	adc	r2, r2, r2
   192ac:	subcs	r0, r0, r1, lsl #12
   192b0:	cmp	r0, r1, lsl #11
   192b4:	adc	r2, r2, r2
   192b8:	subcs	r0, r0, r1, lsl #11
   192bc:	cmp	r0, r1, lsl #10
   192c0:	adc	r2, r2, r2
   192c4:	subcs	r0, r0, r1, lsl #10
   192c8:	cmp	r0, r1, lsl #9
   192cc:	adc	r2, r2, r2
   192d0:	subcs	r0, r0, r1, lsl #9
   192d4:	cmp	r0, r1, lsl #8
   192d8:	adc	r2, r2, r2
   192dc:	subcs	r0, r0, r1, lsl #8
   192e0:	cmp	r0, r1, lsl #7
   192e4:	adc	r2, r2, r2
   192e8:	subcs	r0, r0, r1, lsl #7
   192ec:	cmp	r0, r1, lsl #6
   192f0:	adc	r2, r2, r2
   192f4:	subcs	r0, r0, r1, lsl #6
   192f8:	cmp	r0, r1, lsl #5
   192fc:	adc	r2, r2, r2
   19300:	subcs	r0, r0, r1, lsl #5
   19304:	cmp	r0, r1, lsl #4
   19308:	adc	r2, r2, r2
   1930c:	subcs	r0, r0, r1, lsl #4
   19310:	cmp	r0, r1, lsl #3
   19314:	adc	r2, r2, r2
   19318:	subcs	r0, r0, r1, lsl #3
   1931c:	cmp	r0, r1, lsl #2
   19320:	adc	r2, r2, r2
   19324:	subcs	r0, r0, r1, lsl #2
   19328:	cmp	r0, r1, lsl #1
   1932c:	adc	r2, r2, r2
   19330:	subcs	r0, r0, r1, lsl #1
   19334:	cmp	r0, r1
   19338:	adc	r2, r2, r2
   1933c:	subcs	r0, r0, r1
   19340:	mov	r0, r2
   19344:	bx	lr
   19348:	moveq	r0, #1
   1934c:	movne	r0, #0
   19350:	bx	lr
   19354:	clz	r2, r1
   19358:	rsb	r2, r2, #31
   1935c:	lsr	r0, r0, r2
   19360:	bx	lr
   19364:	cmp	r0, #0
   19368:	mvnne	r0, #0
   1936c:	b	195d0 <argp_error@@Base+0x1938>
   19370:	cmp	r1, #0
   19374:	beq	19364 <argp_error@@Base+0x16cc>
   19378:	push	{r0, r1, lr}
   1937c:	bl	19184 <argp_error@@Base+0x14ec>
   19380:	pop	{r1, r2, lr}
   19384:	mul	r3, r2, r0
   19388:	sub	r1, r1, r3
   1938c:	bx	lr
   19390:	cmp	r1, #0
   19394:	beq	195a0 <argp_error@@Base+0x1908>
   19398:	eor	ip, r0, r1
   1939c:	rsbmi	r1, r1, #0
   193a0:	subs	r2, r1, #1
   193a4:	beq	1956c <argp_error@@Base+0x18d4>
   193a8:	movs	r3, r0
   193ac:	rsbmi	r3, r0, #0
   193b0:	cmp	r3, r1
   193b4:	bls	19578 <argp_error@@Base+0x18e0>
   193b8:	tst	r1, r2
   193bc:	beq	19588 <argp_error@@Base+0x18f0>
   193c0:	clz	r2, r3
   193c4:	clz	r0, r1
   193c8:	sub	r2, r0, r2
   193cc:	rsbs	r2, r2, #31
   193d0:	addne	r2, r2, r2, lsl #1
   193d4:	mov	r0, #0
   193d8:	addne	pc, pc, r2, lsl #2
   193dc:	nop			; (mov r0, r0)
   193e0:	cmp	r3, r1, lsl #31
   193e4:	adc	r0, r0, r0
   193e8:	subcs	r3, r3, r1, lsl #31
   193ec:	cmp	r3, r1, lsl #30
   193f0:	adc	r0, r0, r0
   193f4:	subcs	r3, r3, r1, lsl #30
   193f8:	cmp	r3, r1, lsl #29
   193fc:	adc	r0, r0, r0
   19400:	subcs	r3, r3, r1, lsl #29
   19404:	cmp	r3, r1, lsl #28
   19408:	adc	r0, r0, r0
   1940c:	subcs	r3, r3, r1, lsl #28
   19410:	cmp	r3, r1, lsl #27
   19414:	adc	r0, r0, r0
   19418:	subcs	r3, r3, r1, lsl #27
   1941c:	cmp	r3, r1, lsl #26
   19420:	adc	r0, r0, r0
   19424:	subcs	r3, r3, r1, lsl #26
   19428:	cmp	r3, r1, lsl #25
   1942c:	adc	r0, r0, r0
   19430:	subcs	r3, r3, r1, lsl #25
   19434:	cmp	r3, r1, lsl #24
   19438:	adc	r0, r0, r0
   1943c:	subcs	r3, r3, r1, lsl #24
   19440:	cmp	r3, r1, lsl #23
   19444:	adc	r0, r0, r0
   19448:	subcs	r3, r3, r1, lsl #23
   1944c:	cmp	r3, r1, lsl #22
   19450:	adc	r0, r0, r0
   19454:	subcs	r3, r3, r1, lsl #22
   19458:	cmp	r3, r1, lsl #21
   1945c:	adc	r0, r0, r0
   19460:	subcs	r3, r3, r1, lsl #21
   19464:	cmp	r3, r1, lsl #20
   19468:	adc	r0, r0, r0
   1946c:	subcs	r3, r3, r1, lsl #20
   19470:	cmp	r3, r1, lsl #19
   19474:	adc	r0, r0, r0
   19478:	subcs	r3, r3, r1, lsl #19
   1947c:	cmp	r3, r1, lsl #18
   19480:	adc	r0, r0, r0
   19484:	subcs	r3, r3, r1, lsl #18
   19488:	cmp	r3, r1, lsl #17
   1948c:	adc	r0, r0, r0
   19490:	subcs	r3, r3, r1, lsl #17
   19494:	cmp	r3, r1, lsl #16
   19498:	adc	r0, r0, r0
   1949c:	subcs	r3, r3, r1, lsl #16
   194a0:	cmp	r3, r1, lsl #15
   194a4:	adc	r0, r0, r0
   194a8:	subcs	r3, r3, r1, lsl #15
   194ac:	cmp	r3, r1, lsl #14
   194b0:	adc	r0, r0, r0
   194b4:	subcs	r3, r3, r1, lsl #14
   194b8:	cmp	r3, r1, lsl #13
   194bc:	adc	r0, r0, r0
   194c0:	subcs	r3, r3, r1, lsl #13
   194c4:	cmp	r3, r1, lsl #12
   194c8:	adc	r0, r0, r0
   194cc:	subcs	r3, r3, r1, lsl #12
   194d0:	cmp	r3, r1, lsl #11
   194d4:	adc	r0, r0, r0
   194d8:	subcs	r3, r3, r1, lsl #11
   194dc:	cmp	r3, r1, lsl #10
   194e0:	adc	r0, r0, r0
   194e4:	subcs	r3, r3, r1, lsl #10
   194e8:	cmp	r3, r1, lsl #9
   194ec:	adc	r0, r0, r0
   194f0:	subcs	r3, r3, r1, lsl #9
   194f4:	cmp	r3, r1, lsl #8
   194f8:	adc	r0, r0, r0
   194fc:	subcs	r3, r3, r1, lsl #8
   19500:	cmp	r3, r1, lsl #7
   19504:	adc	r0, r0, r0
   19508:	subcs	r3, r3, r1, lsl #7
   1950c:	cmp	r3, r1, lsl #6
   19510:	adc	r0, r0, r0
   19514:	subcs	r3, r3, r1, lsl #6
   19518:	cmp	r3, r1, lsl #5
   1951c:	adc	r0, r0, r0
   19520:	subcs	r3, r3, r1, lsl #5
   19524:	cmp	r3, r1, lsl #4
   19528:	adc	r0, r0, r0
   1952c:	subcs	r3, r3, r1, lsl #4
   19530:	cmp	r3, r1, lsl #3
   19534:	adc	r0, r0, r0
   19538:	subcs	r3, r3, r1, lsl #3
   1953c:	cmp	r3, r1, lsl #2
   19540:	adc	r0, r0, r0
   19544:	subcs	r3, r3, r1, lsl #2
   19548:	cmp	r3, r1, lsl #1
   1954c:	adc	r0, r0, r0
   19550:	subcs	r3, r3, r1, lsl #1
   19554:	cmp	r3, r1
   19558:	adc	r0, r0, r0
   1955c:	subcs	r3, r3, r1
   19560:	cmp	ip, #0
   19564:	rsbmi	r0, r0, #0
   19568:	bx	lr
   1956c:	teq	ip, r0
   19570:	rsbmi	r0, r0, #0
   19574:	bx	lr
   19578:	movcc	r0, #0
   1957c:	asreq	r0, ip, #31
   19580:	orreq	r0, r0, #1
   19584:	bx	lr
   19588:	clz	r2, r1
   1958c:	rsb	r2, r2, #31
   19590:	cmp	ip, #0
   19594:	lsr	r0, r3, r2
   19598:	rsbmi	r0, r0, #0
   1959c:	bx	lr
   195a0:	cmp	r0, #0
   195a4:	mvngt	r0, #-2147483648	; 0x80000000
   195a8:	movlt	r0, #-2147483648	; 0x80000000
   195ac:	b	195d0 <argp_error@@Base+0x1938>
   195b0:	cmp	r1, #0
   195b4:	beq	195a0 <argp_error@@Base+0x1908>
   195b8:	push	{r0, r1, lr}
   195bc:	bl	19398 <argp_error@@Base+0x1700>
   195c0:	pop	{r1, r2, lr}
   195c4:	mul	r3, r2, r0
   195c8:	sub	r1, r1, r3
   195cc:	bx	lr
   195d0:	push	{r1, lr}
   195d4:	mov	r0, #8
   195d8:	bl	11228 <raise@plt>
   195dc:	pop	{r1, pc}
   195e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   195e4:	mov	r7, r0
   195e8:	ldr	r6, [pc, #72]	; 19638 <argp_error@@Base+0x19a0>
   195ec:	ldr	r5, [pc, #72]	; 1963c <argp_error@@Base+0x19a4>
   195f0:	add	r6, pc, r6
   195f4:	add	r5, pc, r5
   195f8:	sub	r6, r6, r5
   195fc:	mov	r8, r1
   19600:	mov	r9, r2
   19604:	bl	111d8 <fdopen@plt-0x20>
   19608:	asrs	r6, r6, #2
   1960c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19610:	mov	r4, #0
   19614:	add	r4, r4, #1
   19618:	ldr	r3, [r5], #4
   1961c:	mov	r2, r9
   19620:	mov	r1, r8
   19624:	mov	r0, r7
   19628:	blx	r3
   1962c:	cmp	r6, r4
   19630:	bne	19614 <argp_error@@Base+0x197c>
   19634:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19638:	andeq	r1, r1, r0, lsl r9
   1963c:	andeq	r1, r1, r8, lsl #18
   19640:	bx	lr

Disassembly of section .fini:

00019644 <.fini>:
   19644:	push	{r3, lr}
   19648:	pop	{r3, pc}
