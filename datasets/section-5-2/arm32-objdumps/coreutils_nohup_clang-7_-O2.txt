
../repos/coreutils/src/nohup:     file format elf32-littlearm


Disassembly of section .init:

00010d9c <.init>:
   10d9c:	push	{r3, lr}
   10da0:	bl	1105c <__mempcpy_chk@plt+0x48>
   10da4:	pop	{r3, pc}

Disassembly of section .plt:

00010da8 <calloc@plt-0x14>:
   10da8:	push	{lr}		; (str lr, [sp, #-4]!)
   10dac:	ldr	lr, [pc, #4]	; 10db8 <calloc@plt-0x4>
   10db0:	add	lr, pc, lr
   10db4:	ldr	pc, [lr, #8]!
   10db8:	andeq	r5, r1, r8, asr #4

00010dbc <calloc@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #86016	; 0x15000
   10dc4:	ldr	pc, [ip, #584]!	; 0x248

00010dc8 <fputs_unlocked@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #86016	; 0x15000
   10dd0:	ldr	pc, [ip, #576]!	; 0x240

00010dd4 <strcmp@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #86016	; 0x15000
   10ddc:	ldr	pc, [ip, #568]!	; 0x238

00010de0 <fflush@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #86016	; 0x15000
   10de8:	ldr	pc, [ip, #560]!	; 0x230

00010dec <free@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #86016	; 0x15000
   10df4:	ldr	pc, [ip, #552]!	; 0x228

00010df8 <_exit@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #86016	; 0x15000
   10e00:	ldr	pc, [ip, #544]!	; 0x220

00010e04 <memcpy@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #86016	; 0x15000
   10e0c:	ldr	pc, [ip, #536]!	; 0x218

00010e10 <execvp@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #86016	; 0x15000
   10e18:	ldr	pc, [ip, #528]!	; 0x210

00010e1c <mbsinit@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #86016	; 0x15000
   10e24:	ldr	pc, [ip, #520]!	; 0x208

00010e28 <signal@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #86016	; 0x15000
   10e30:	ldr	pc, [ip, #512]!	; 0x200

00010e34 <memcmp@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #86016	; 0x15000
   10e3c:	ldr	pc, [ip, #504]!	; 0x1f8

00010e40 <dcgettext@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #86016	; 0x15000
   10e48:	ldr	pc, [ip, #496]!	; 0x1f0

00010e4c <dup2@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #86016	; 0x15000
   10e54:	ldr	pc, [ip, #488]!	; 0x1e8

00010e58 <realloc@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #86016	; 0x15000
   10e60:	ldr	pc, [ip, #480]!	; 0x1e0

00010e64 <textdomain@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #86016	; 0x15000
   10e6c:	ldr	pc, [ip, #472]!	; 0x1d8

00010e70 <iswprint@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #86016	; 0x15000
   10e78:	ldr	pc, [ip, #464]!	; 0x1d0

00010e7c <fwrite@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #86016	; 0x15000
   10e84:	ldr	pc, [ip, #456]!	; 0x1c8

00010e88 <lseek64@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #86016	; 0x15000
   10e90:	ldr	pc, [ip, #448]!	; 0x1c0

00010e94 <__ctype_get_mb_cur_max@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #86016	; 0x15000
   10e9c:	ldr	pc, [ip, #440]!	; 0x1b8

00010ea0 <__fpending@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #86016	; 0x15000
   10ea8:	ldr	pc, [ip, #432]!	; 0x1b0

00010eac <mbrtowc@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #86016	; 0x15000
   10eb4:	ldr	pc, [ip, #424]!	; 0x1a8

00010eb8 <error@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #86016	; 0x15000
   10ec0:	ldr	pc, [ip, #416]!	; 0x1a0

00010ec4 <open64@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #86016	; 0x15000
   10ecc:	ldr	pc, [ip, #408]!	; 0x198

00010ed0 <getenv@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #86016	; 0x15000
   10ed8:	ldr	pc, [ip, #400]!	; 0x190

00010edc <malloc@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #86016	; 0x15000
   10ee4:	ldr	pc, [ip, #392]!	; 0x188

00010ee8 <__libc_start_main@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #86016	; 0x15000
   10ef0:	ldr	pc, [ip, #384]!	; 0x180

00010ef4 <__freading@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #86016	; 0x15000
   10efc:	ldr	pc, [ip, #376]!	; 0x178

00010f00 <__gmon_start__@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #86016	; 0x15000
   10f08:	ldr	pc, [ip, #368]!	; 0x170

00010f0c <getopt_long@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #86016	; 0x15000
   10f14:	ldr	pc, [ip, #360]!	; 0x168

00010f18 <__ctype_b_loc@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #86016	; 0x15000
   10f20:	ldr	pc, [ip, #352]!	; 0x160

00010f24 <exit@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #86016	; 0x15000
   10f2c:	ldr	pc, [ip, #344]!	; 0x158

00010f30 <strlen@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #86016	; 0x15000
   10f38:	ldr	pc, [ip, #336]!	; 0x150

00010f3c <__errno_location@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #86016	; 0x15000
   10f44:	ldr	pc, [ip, #328]!	; 0x148

00010f48 <__cxa_atexit@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #86016	; 0x15000
   10f50:	ldr	pc, [ip, #320]!	; 0x140

00010f54 <memset@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #86016	; 0x15000
   10f5c:	ldr	pc, [ip, #312]!	; 0x138

00010f60 <__printf_chk@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #86016	; 0x15000
   10f68:	ldr	pc, [ip, #304]!	; 0x130

00010f6c <fileno@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #86016	; 0x15000
   10f74:	ldr	pc, [ip, #296]!	; 0x128

00010f78 <__fprintf_chk@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #86016	; 0x15000
   10f80:	ldr	pc, [ip, #288]!	; 0x120

00010f84 <fclose@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #86016	; 0x15000
   10f8c:	ldr	pc, [ip, #280]!	; 0x118

00010f90 <fseeko64@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #86016	; 0x15000
   10f98:	ldr	pc, [ip, #272]!	; 0x110

00010f9c <fcntl64@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #86016	; 0x15000
   10fa4:	ldr	pc, [ip, #264]!	; 0x108

00010fa8 <setlocale@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #86016	; 0x15000
   10fb0:	ldr	pc, [ip, #256]!	; 0x100

00010fb4 <strrchr@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #86016	; 0x15000
   10fbc:	ldr	pc, [ip, #248]!	; 0xf8

00010fc0 <nl_langinfo@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #86016	; 0x15000
   10fc8:	ldr	pc, [ip, #240]!	; 0xf0

00010fcc <bindtextdomain@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #86016	; 0x15000
   10fd4:	ldr	pc, [ip, #232]!	; 0xe8

00010fd8 <umask@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #86016	; 0x15000
   10fe0:	ldr	pc, [ip, #224]!	; 0xe0

00010fe4 <isatty@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #86016	; 0x15000
   10fec:	ldr	pc, [ip, #216]!	; 0xd8

00010ff0 <strncmp@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #86016	; 0x15000
   10ff8:	ldr	pc, [ip, #208]!	; 0xd0

00010ffc <abort@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #86016	; 0x15000
   11004:	ldr	pc, [ip, #200]!	; 0xc8

00011008 <close@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #86016	; 0x15000
   11010:	ldr	pc, [ip, #192]!	; 0xc0

00011014 <__mempcpy_chk@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #86016	; 0x15000
   1101c:	ldr	pc, [ip, #184]!	; 0xb8

Disassembly of section .text:

00011020 <.text>:
   11020:	mov	fp, #0
   11024:	mov	lr, #0
   11028:	pop	{r1}		; (ldr r1, [sp], #4)
   1102c:	mov	r2, sp
   11030:	push	{r2}		; (str r2, [sp, #-4]!)
   11034:	push	{r0}		; (str r0, [sp, #-4]!)
   11038:	ldr	ip, [pc, #16]	; 11050 <__mempcpy_chk@plt+0x3c>
   1103c:	push	{ip}		; (str ip, [sp, #-4]!)
   11040:	ldr	r0, [pc, #12]	; 11054 <__mempcpy_chk@plt+0x40>
   11044:	ldr	r3, [pc, #12]	; 11058 <__mempcpy_chk@plt+0x44>
   11048:	bl	10ee8 <__libc_start_main@plt>
   1104c:	bl	10ffc <abort@plt>
   11050:	andeq	r4, r1, ip, lsr lr
   11054:	andeq	r1, r1, r0, lsr #7
   11058:	ldrdeq	r4, [r1], -ip
   1105c:	ldr	r3, [pc, #20]	; 11078 <__mempcpy_chk@plt+0x64>
   11060:	ldr	r2, [pc, #20]	; 1107c <__mempcpy_chk@plt+0x68>
   11064:	add	r3, pc, r3
   11068:	ldr	r2, [r3, r2]
   1106c:	cmp	r2, #0
   11070:	bxeq	lr
   11074:	b	10f00 <__gmon_start__@plt>
   11078:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1107c:	ldrdeq	r0, [r0], -r8
   11080:	ldr	r0, [pc, #24]	; 110a0 <__mempcpy_chk@plt+0x8c>
   11084:	ldr	r3, [pc, #24]	; 110a4 <__mempcpy_chk@plt+0x90>
   11088:	cmp	r3, r0
   1108c:	bxeq	lr
   11090:	ldr	r3, [pc, #16]	; 110a8 <__mempcpy_chk@plt+0x94>
   11094:	cmp	r3, #0
   11098:	bxeq	lr
   1109c:	bx	r3
   110a0:	andeq	r6, r2, r0, lsr r1
   110a4:	andeq	r6, r2, r0, lsr r1
   110a8:	andeq	r0, r0, r0
   110ac:	ldr	r0, [pc, #36]	; 110d8 <__mempcpy_chk@plt+0xc4>
   110b0:	ldr	r1, [pc, #36]	; 110dc <__mempcpy_chk@plt+0xc8>
   110b4:	sub	r1, r1, r0
   110b8:	asr	r1, r1, #2
   110bc:	add	r1, r1, r1, lsr #31
   110c0:	asrs	r1, r1, #1
   110c4:	bxeq	lr
   110c8:	ldr	r3, [pc, #16]	; 110e0 <__mempcpy_chk@plt+0xcc>
   110cc:	cmp	r3, #0
   110d0:	bxeq	lr
   110d4:	bx	r3
   110d8:	andeq	r6, r2, r0, lsr r1
   110dc:	andeq	r6, r2, r0, lsr r1
   110e0:	andeq	r0, r0, r0
   110e4:	push	{r4, lr}
   110e8:	ldr	r4, [pc, #24]	; 11108 <__mempcpy_chk@plt+0xf4>
   110ec:	ldrb	r3, [r4]
   110f0:	cmp	r3, #0
   110f4:	popne	{r4, pc}
   110f8:	bl	11080 <__mempcpy_chk@plt+0x6c>
   110fc:	mov	r3, #1
   11100:	strb	r3, [r4]
   11104:	pop	{r4, pc}
   11108:	andeq	r6, r2, ip, asr #2
   1110c:	b	110ac <__mempcpy_chk@plt+0x98>
   11110:	push	{fp, lr}
   11114:	mov	fp, sp
   11118:	sub	sp, sp, #56	; 0x38
   1111c:	mov	r4, r0
   11120:	cmp	r0, #0
   11124:	bne	1135c <__mempcpy_chk@plt+0x348>
   11128:	movw	r1, #20107	; 0x4e8b
   1112c:	mov	r0, #0
   11130:	mov	r2, #5
   11134:	movt	r1, #1
   11138:	bl	10e40 <dcgettext@plt>
   1113c:	movw	r5, #24924	; 0x615c
   11140:	mov	r1, r0
   11144:	mov	r0, #1
   11148:	movt	r5, #2
   1114c:	ldr	r2, [r5]
   11150:	mov	r3, r2
   11154:	bl	10f60 <__printf_chk@plt>
   11158:	movw	r1, #20152	; 0x4eb8
   1115c:	mov	r0, #0
   11160:	mov	r2, #5
   11164:	movt	r1, #1
   11168:	bl	10e40 <dcgettext@plt>
   1116c:	movw	r7, #24900	; 0x6144
   11170:	movt	r7, #2
   11174:	ldr	r1, [r7]
   11178:	bl	10dc8 <fputs_unlocked@plt>
   1117c:	movw	r1, #20192	; 0x4ee0
   11180:	mov	r0, #0
   11184:	mov	r2, #5
   11188:	movt	r1, #1
   1118c:	bl	10e40 <dcgettext@plt>
   11190:	ldr	r1, [r7]
   11194:	bl	10dc8 <fputs_unlocked@plt>
   11198:	movw	r1, #20237	; 0x4f0d
   1119c:	mov	r0, #0
   111a0:	mov	r2, #5
   111a4:	movt	r1, #1
   111a8:	bl	10e40 <dcgettext@plt>
   111ac:	ldr	r1, [r7]
   111b0:	bl	10dc8 <fputs_unlocked@plt>
   111b4:	movw	r1, #20291	; 0x4f43
   111b8:	mov	r0, #0
   111bc:	mov	r2, #5
   111c0:	movt	r1, #1
   111c4:	bl	10e40 <dcgettext@plt>
   111c8:	ldr	r2, [r5]
   111cc:	mov	r1, r0
   111d0:	mov	r0, #1
   111d4:	bl	10f60 <__printf_chk@plt>
   111d8:	movw	r1, #20582	; 0x5066
   111dc:	mov	r0, #0
   111e0:	mov	r2, #5
   111e4:	movt	r1, #1
   111e8:	bl	10e40 <dcgettext@plt>
   111ec:	movw	r5, #20773	; 0x5125
   111f0:	mov	r1, r0
   111f4:	mov	r0, #1
   111f8:	movt	r5, #1
   111fc:	mov	r2, r5
   11200:	bl	10f60 <__printf_chk@plt>
   11204:	movw	r0, #21424	; 0x53b0
   11208:	mov	r2, #48	; 0x30
   1120c:	mov	r6, sp
   11210:	movt	r0, #1
   11214:	add	r1, r0, #32
   11218:	add	r3, r0, #16
   1121c:	vld1.64	{d18-d19}, [r0], r2
   11220:	vld1.64	{d16-d17}, [r1]
   11224:	vld1.64	{d20-d21}, [r3]
   11228:	add	r1, r6, #32
   1122c:	vldr	d22, [r0]
   11230:	add	r0, r6, #16
   11234:	vst1.64	{d16-d17}, [r1]
   11238:	movw	r1, #21110	; 0x5276
   1123c:	vst1.64	{d20-d21}, [r0]
   11240:	mov	r0, r6
   11244:	vst1.64	{d18-d19}, [r0], r2
   11248:	movt	r1, #1
   1124c:	vstr	d22, [r0]
   11250:	mov	r0, r5
   11254:	bl	10dd4 <strcmp@plt>
   11258:	cmp	r0, #0
   1125c:	ldrne	r1, [r6, #8]!
   11260:	cmpne	r1, #0
   11264:	bne	11250 <__mempcpy_chk@plt+0x23c>
   11268:	ldr	r6, [r6, #4]
   1126c:	movw	r1, #21205	; 0x52d5
   11270:	mov	r0, #0
   11274:	mov	r2, #5
   11278:	movt	r1, #1
   1127c:	bl	10e40 <dcgettext@plt>
   11280:	movw	r2, #20819	; 0x5153
   11284:	movw	r3, #21228	; 0x52ec
   11288:	mov	r1, r0
   1128c:	mov	r0, #1
   11290:	movt	r2, #1
   11294:	movt	r3, #1
   11298:	bl	10f60 <__printf_chk@plt>
   1129c:	cmp	r6, #0
   112a0:	mov	r0, #5
   112a4:	mov	r1, #0
   112a8:	moveq	r6, r5
   112ac:	bl	10fa8 <setlocale@plt>
   112b0:	cmp	r0, #0
   112b4:	beq	112ec <__mempcpy_chk@plt+0x2d8>
   112b8:	movw	r1, #21268	; 0x5314
   112bc:	mov	r2, #3
   112c0:	movt	r1, #1
   112c4:	bl	10ff0 <strncmp@plt>
   112c8:	cmp	r0, #0
   112cc:	beq	112ec <__mempcpy_chk@plt+0x2d8>
   112d0:	movw	r1, #21272	; 0x5318
   112d4:	mov	r0, #0
   112d8:	mov	r2, #5
   112dc:	movt	r1, #1
   112e0:	bl	10e40 <dcgettext@plt>
   112e4:	ldr	r1, [r7]
   112e8:	bl	10dc8 <fputs_unlocked@plt>
   112ec:	movw	r1, #21343	; 0x535f
   112f0:	mov	r0, #0
   112f4:	mov	r2, #5
   112f8:	movt	r1, #1
   112fc:	bl	10e40 <dcgettext@plt>
   11300:	movw	r2, #21228	; 0x52ec
   11304:	mov	r1, r0
   11308:	mov	r0, #1
   1130c:	mov	r3, r5
   11310:	movt	r2, #1
   11314:	bl	10f60 <__printf_chk@plt>
   11318:	movw	r1, #21370	; 0x537a
   1131c:	mov	r0, #0
   11320:	mov	r2, #5
   11324:	movt	r1, #1
   11328:	bl	10e40 <dcgettext@plt>
   1132c:	movw	r3, #20191	; 0x4edf
   11330:	mov	r1, r0
   11334:	movw	r0, #21138	; 0x5292
   11338:	cmp	r6, r5
   1133c:	mov	r2, r6
   11340:	movt	r0, #1
   11344:	movt	r3, #1
   11348:	moveq	r3, r0
   1134c:	mov	r0, #1
   11350:	bl	10f60 <__printf_chk@plt>
   11354:	mov	r0, r4
   11358:	bl	10f24 <exit@plt>
   1135c:	movw	r0, #24896	; 0x6140
   11360:	movw	r1, #20068	; 0x4e64
   11364:	mov	r2, #5
   11368:	movt	r0, #2
   1136c:	movt	r1, #1
   11370:	ldr	r5, [r0]
   11374:	mov	r0, #0
   11378:	bl	10e40 <dcgettext@plt>
   1137c:	mov	r2, r0
   11380:	movw	r0, #24924	; 0x615c
   11384:	mov	r1, #1
   11388:	movt	r0, #2
   1138c:	ldr	r3, [r0]
   11390:	mov	r0, r5
   11394:	bl	10f78 <__fprintf_chk@plt>
   11398:	mov	r0, r4
   1139c:	bl	10f24 <exit@plt>
   113a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113a4:	add	fp, sp, #28
   113a8:	sub	sp, sp, #36	; 0x24
   113ac:	mov	r4, r0
   113b0:	ldr	r0, [r1]
   113b4:	mov	r9, r1
   113b8:	bl	11ebc <__mempcpy_chk@plt+0xea8>
   113bc:	movw	r1, #20191	; 0x4edf
   113c0:	mov	r0, #6
   113c4:	movt	r1, #1
   113c8:	bl	10fa8 <setlocale@plt>
   113cc:	movw	r5, #20823	; 0x5157
   113d0:	movw	r1, #20779	; 0x512b
   113d4:	movt	r5, #1
   113d8:	movt	r1, #1
   113dc:	mov	r0, r5
   113e0:	bl	10fcc <bindtextdomain@plt>
   113e4:	mov	r0, r5
   113e8:	bl	10e64 <textdomain@plt>
   113ec:	movw	r0, #20803	; 0x5143
   113f0:	movt	r0, #1
   113f4:	bl	10ed0 <getenv@plt>
   113f8:	cmp	r0, #0
   113fc:	mov	sl, #127	; 0x7f
   11400:	movw	r0, #24812	; 0x60ec
   11404:	movweq	sl, #125	; 0x7d
   11408:	movt	r0, #2
   1140c:	str	sl, [r0]
   11410:	movw	r0, #6388	; 0x18f4
   11414:	movt	r0, #1
   11418:	bl	14e40 <__mempcpy_chk@plt+0x3e2c>
   1141c:	movw	r0, #24808	; 0x60e8
   11420:	movw	r2, #4368	; 0x1110
   11424:	movw	r1, #20833	; 0x5161
   11428:	mov	r5, #0
   1142c:	movw	r3, #20819	; 0x5153
   11430:	movt	r0, #2
   11434:	movt	r2, #1
   11438:	movt	r1, #1
   1143c:	movt	r3, #1
   11440:	ldr	r0, [r0]
   11444:	stm	sp, {r0, r5}
   11448:	str	r2, [sp, #8]
   1144c:	movw	r2, #20773	; 0x5125
   11450:	str	r1, [sp, #12]
   11454:	mov	r0, r4
   11458:	mov	r1, r9
   1145c:	str	r5, [sp, #16]
   11460:	movt	r2, #1
   11464:	bl	11df4 <__mempcpy_chk@plt+0xde0>
   11468:	movw	r0, #24888	; 0x6138
   1146c:	movt	r0, #2
   11470:	ldr	r0, [r0]
   11474:	cmp	r0, r4
   11478:	bge	118a8 <__mempcpy_chk@plt+0x894>
   1147c:	mov	r0, #0
   11480:	bl	10fe4 <isatty@plt>
   11484:	mov	r6, r0
   11488:	mov	r0, #1
   1148c:	bl	10fe4 <isatty@plt>
   11490:	mov	r7, r0
   11494:	cmp	r0, #0
   11498:	bne	114b0 <__mempcpy_chk@plt+0x49c>
   1149c:	bl	10f3c <__errno_location@plt>
   114a0:	ldr	r0, [r0]
   114a4:	sub	r0, r0, #9
   114a8:	clz	r0, r0
   114ac:	lsr	r5, r0, #5
   114b0:	mov	r0, #2
   114b4:	bl	10fe4 <isatty@plt>
   114b8:	mov	r8, r0
   114bc:	cmp	r6, #0
   114c0:	beq	114ec <__mempcpy_chk@plt+0x4d8>
   114c4:	movw	r1, #20862	; 0x517e
   114c8:	mov	r0, #0
   114cc:	mov	r2, #1
   114d0:	mov	r3, #0
   114d4:	movt	r1, #1
   114d8:	bl	11bbc <__mempcpy_chk@plt+0xba8>
   114dc:	cmn	r0, #1
   114e0:	ble	116c0 <__mempcpy_chk@plt+0x6ac>
   114e4:	orrs	r0, r8, r7
   114e8:	beq	116f4 <__mempcpy_chk@plt+0x6e0>
   114ec:	cmp	r7, #0
   114f0:	str	r6, [sp, #32]
   114f4:	beq	11524 <__mempcpy_chk@plt+0x510>
   114f8:	mvn	r0, #384	; 0x180
   114fc:	str	r5, [sp, #28]
   11500:	bl	10fd8 <umask@plt>
   11504:	movw	r1, #20928	; 0x51c0
   11508:	mov	r5, r0
   1150c:	mov	r0, #1
   11510:	movw	r2, #1089	; 0x441
   11514:	mov	r3, #384	; 0x180
   11518:	movt	r1, #1
   1151c:	bl	11bbc <__mempcpy_chk@plt+0xba8>
   11520:	b	11560 <__mempcpy_chk@plt+0x54c>
   11524:	cmp	r8, #0
   11528:	mov	r0, r8
   1152c:	mov	r6, #1
   11530:	movwne	r0, #1
   11534:	tst	r5, r0
   11538:	beq	115e0 <__mempcpy_chk@plt+0x5cc>
   1153c:	mvn	r0, #384	; 0x180
   11540:	str	r5, [sp, #28]
   11544:	bl	10fd8 <umask@plt>
   11548:	mov	r5, r0
   1154c:	movw	r0, #20928	; 0x51c0
   11550:	movw	r1, #1089	; 0x441
   11554:	mov	r2, #384	; 0x180
   11558:	movt	r0, #1
   1155c:	bl	10ec4 <open64@plt>
   11560:	mov	r6, r0
   11564:	cmn	r0, #1
   11568:	ble	11664 <__mempcpy_chk@plt+0x650>
   1156c:	str	r9, [sp, #24]
   11570:	movw	r9, #20928	; 0x51c0
   11574:	mov	r4, #0
   11578:	movt	r9, #1
   1157c:	mov	r0, r5
   11580:	bl	10fd8 <umask@plt>
   11584:	ldr	r2, [sp, #32]
   11588:	movw	r0, #20961	; 0x51e1
   1158c:	movw	r1, #20980	; 0x51f4
   11590:	movt	r0, #1
   11594:	movt	r1, #1
   11598:	cmp	r2, #0
   1159c:	mov	r2, #5
   115a0:	movne	r1, r0
   115a4:	mov	r0, #0
   115a8:	bl	10e40 <dcgettext@plt>
   115ac:	mov	r5, r0
   115b0:	mov	r0, #4
   115b4:	mov	r1, r9
   115b8:	bl	135c8 <__mempcpy_chk@plt+0x25b4>
   115bc:	mov	r3, r0
   115c0:	mov	r0, #0
   115c4:	mov	r1, #0
   115c8:	mov	r2, r5
   115cc:	bl	10eb8 <error@plt>
   115d0:	mov	r0, r4
   115d4:	bl	11d1c <__mempcpy_chk@plt+0xd08>
   115d8:	ldr	r9, [sp, #24]
   115dc:	ldr	r5, [sp, #28]
   115e0:	cmp	r8, #0
   115e4:	beq	1165c <__mempcpy_chk@plt+0x648>
   115e8:	mov	r0, #2
   115ec:	movw	r1, #1030	; 0x406
   115f0:	mov	r2, #3
   115f4:	bl	119dc <__mempcpy_chk@plt+0x9c8>
   115f8:	mov	r4, r0
   115fc:	cmp	r7, #0
   11600:	bne	1163c <__mempcpy_chk@plt+0x628>
   11604:	ldr	r2, [sp, #32]
   11608:	movw	r0, #21003	; 0x520b
   1160c:	movw	r1, #21022	; 0x521e
   11610:	movt	r0, #1
   11614:	movt	r1, #1
   11618:	cmp	r2, #0
   1161c:	mov	r2, #5
   11620:	movne	r1, r0
   11624:	mov	r0, #0
   11628:	bl	10e40 <dcgettext@plt>
   1162c:	mov	r2, r0
   11630:	mov	r0, #0
   11634:	mov	r1, #0
   11638:	bl	10eb8 <error@plt>
   1163c:	mov	r0, r6
   11640:	mov	r1, #2
   11644:	bl	10e4c <dup2@plt>
   11648:	cmn	r0, #1
   1164c:	ble	1171c <__mempcpy_chk@plt+0x708>
   11650:	cmp	r5, #0
   11654:	bne	11758 <__mempcpy_chk@plt+0x744>
   11658:	b	11760 <__mempcpy_chk@plt+0x74c>
   1165c:	mov	r4, #2
   11660:	b	11760 <__mempcpy_chk@plt+0x74c>
   11664:	bl	10f3c <__errno_location@plt>
   11668:	ldr	r6, [r0]
   1166c:	mov	r4, r0
   11670:	movw	r0, #20938	; 0x51ca
   11674:	movt	r0, #1
   11678:	bl	10ed0 <getenv@plt>
   1167c:	cmp	r0, #0
   11680:	beq	117e8 <__mempcpy_chk@plt+0x7d4>
   11684:	movw	r1, #20928	; 0x51c0
   11688:	mov	r2, #0
   1168c:	str	r6, [sp, #20]
   11690:	str	r9, [sp, #24]
   11694:	movt	r1, #1
   11698:	bl	11c24 <__mempcpy_chk@plt+0xc10>
   1169c:	mov	r9, r0
   116a0:	cmp	r7, #0
   116a4:	beq	117f4 <__mempcpy_chk@plt+0x7e0>
   116a8:	mov	r0, #1
   116ac:	mov	r1, r9
   116b0:	movw	r2, #1089	; 0x441
   116b4:	mov	r3, #384	; 0x180
   116b8:	bl	11bbc <__mempcpy_chk@plt+0xba8>
   116bc:	b	11804 <__mempcpy_chk@plt+0x7f0>
   116c0:	bl	10f3c <__errno_location@plt>
   116c4:	ldr	r4, [r0]
   116c8:	movw	r1, #20872	; 0x5188
   116cc:	mov	r0, #0
   116d0:	mov	r2, #5
   116d4:	movt	r1, #1
   116d8:	bl	10e40 <dcgettext@plt>
   116dc:	mov	r2, r0
   116e0:	mov	r0, sl
   116e4:	mov	r1, r4
   116e8:	bl	10eb8 <error@plt>
   116ec:	orrs	r0, r8, r7
   116f0:	bne	114ec <__mempcpy_chk@plt+0x4d8>
   116f4:	movw	r1, #20913	; 0x51b1
   116f8:	mov	r0, #0
   116fc:	mov	r2, #5
   11700:	movt	r1, #1
   11704:	bl	10e40 <dcgettext@plt>
   11708:	mov	r2, r0
   1170c:	mov	r0, #0
   11710:	mov	r1, #0
   11714:	bl	10eb8 <error@plt>
   11718:	b	114ec <__mempcpy_chk@plt+0x4d8>
   1171c:	bl	10f3c <__errno_location@plt>
   11720:	mov	r7, r5
   11724:	ldr	r5, [r0]
   11728:	movw	r1, #21051	; 0x523b
   1172c:	mov	r0, #0
   11730:	mov	r2, #5
   11734:	movt	r1, #1
   11738:	bl	10e40 <dcgettext@plt>
   1173c:	mov	r2, r0
   11740:	mov	r1, r5
   11744:	mov	r0, sl
   11748:	mov	r5, r7
   1174c:	bl	10eb8 <error@plt>
   11750:	cmp	r5, #0
   11754:	beq	11760 <__mempcpy_chk@plt+0x74c>
   11758:	mov	r0, r6
   1175c:	bl	11008 <close@plt>
   11760:	movw	r0, #24896	; 0x6140
   11764:	movt	r0, #2
   11768:	ldr	r0, [r0]
   1176c:	ldrb	r0, [r0]
   11770:	tst	r0, #32
   11774:	bne	1189c <__mempcpy_chk@plt+0x888>
   11778:	mov	r0, #1
   1177c:	mov	r1, #1
   11780:	bl	10e28 <signal@plt>
   11784:	movw	r0, #24888	; 0x6138
   11788:	movt	r0, #2
   1178c:	ldr	r0, [r0]
   11790:	ldr	r0, [r9, r0, lsl #2]!
   11794:	mov	r1, r9
   11798:	bl	10e10 <execvp@plt>
   1179c:	bl	10f3c <__errno_location@plt>
   117a0:	ldr	r5, [r0]
   117a4:	mov	sl, #126	; 0x7e
   117a8:	mov	r0, r4
   117ac:	mov	r1, #2
   117b0:	cmp	r5, #2
   117b4:	movweq	sl, #127	; 0x7f
   117b8:	bl	10e4c <dup2@plt>
   117bc:	cmp	r0, #2
   117c0:	bne	1189c <__mempcpy_chk@plt+0x888>
   117c4:	movw	r1, #21085	; 0x525d
   117c8:	mov	r0, #0
   117cc:	mov	r2, #5
   117d0:	movt	r1, #1
   117d4:	bl	10e40 <dcgettext@plt>
   117d8:	ldr	r1, [r9]
   117dc:	mov	r4, r0
   117e0:	mov	r0, #4
   117e4:	b	11884 <__mempcpy_chk@plt+0x870>
   117e8:	mov	r9, #0
   117ec:	mov	r5, r6
   117f0:	b	11820 <__mempcpy_chk@plt+0x80c>
   117f4:	mov	r0, r9
   117f8:	movw	r1, #1089	; 0x441
   117fc:	mov	r2, #384	; 0x180
   11800:	bl	10ec4 <open64@plt>
   11804:	mov	r6, r0
   11808:	cmn	r0, #1
   1180c:	ble	11818 <__mempcpy_chk@plt+0x804>
   11810:	mov	r4, r9
   11814:	b	1157c <__mempcpy_chk@plt+0x568>
   11818:	ldr	r5, [r4]
   1181c:	ldr	r6, [sp, #20]
   11820:	movw	r1, #20943	; 0x51cf
   11824:	mov	r0, #0
   11828:	mov	r2, #5
   1182c:	movt	r1, #1
   11830:	bl	10e40 <dcgettext@plt>
   11834:	movw	r1, #20928	; 0x51c0
   11838:	mov	r4, r0
   1183c:	mov	r0, #4
   11840:	movt	r1, #1
   11844:	bl	135c8 <__mempcpy_chk@plt+0x25b4>
   11848:	mov	r3, r0
   1184c:	mov	r0, #0
   11850:	mov	r1, r6
   11854:	mov	r2, r4
   11858:	bl	10eb8 <error@plt>
   1185c:	cmp	r9, #0
   11860:	beq	1189c <__mempcpy_chk@plt+0x888>
   11864:	movw	r1, #20943	; 0x51cf
   11868:	mov	r0, #0
   1186c:	mov	r2, #5
   11870:	movt	r1, #1
   11874:	bl	10e40 <dcgettext@plt>
   11878:	mov	r4, r0
   1187c:	mov	r0, #4
   11880:	mov	r1, r9
   11884:	bl	135c8 <__mempcpy_chk@plt+0x25b4>
   11888:	mov	r3, r0
   1188c:	mov	r0, #0
   11890:	mov	r1, r5
   11894:	mov	r2, r4
   11898:	bl	10eb8 <error@plt>
   1189c:	mov	r0, sl
   118a0:	sub	sp, fp, #28
   118a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118a8:	movw	r1, #20846	; 0x516e
   118ac:	mov	r0, #0
   118b0:	mov	r2, #5
   118b4:	movt	r1, #1
   118b8:	bl	10e40 <dcgettext@plt>
   118bc:	mov	r2, r0
   118c0:	mov	r0, #0
   118c4:	mov	r1, #0
   118c8:	bl	10eb8 <error@plt>
   118cc:	mov	r0, sl
   118d0:	bl	11110 <__mempcpy_chk@plt+0xfc>
   118d4:	movw	r1, #24912	; 0x6150
   118d8:	movt	r1, #2
   118dc:	str	r0, [r1]
   118e0:	bx	lr
   118e4:	movw	r1, #24916	; 0x6154
   118e8:	movt	r1, #2
   118ec:	strb	r0, [r1]
   118f0:	bx	lr
   118f4:	push	{r4, r5, r6, sl, fp, lr}
   118f8:	add	fp, sp, #16
   118fc:	sub	sp, sp, #8
   11900:	movw	r0, #24900	; 0x6144
   11904:	movt	r0, #2
   11908:	ldr	r0, [r0]
   1190c:	bl	149e0 <__mempcpy_chk@plt+0x39cc>
   11910:	cmp	r0, #0
   11914:	beq	1193c <__mempcpy_chk@plt+0x928>
   11918:	movw	r0, #24916	; 0x6154
   1191c:	movt	r0, #2
   11920:	ldrb	r0, [r0]
   11924:	cmp	r0, #0
   11928:	beq	1195c <__mempcpy_chk@plt+0x948>
   1192c:	bl	10f3c <__errno_location@plt>
   11930:	ldr	r0, [r0]
   11934:	cmp	r0, #32
   11938:	bne	1195c <__mempcpy_chk@plt+0x948>
   1193c:	movw	r0, #24896	; 0x6140
   11940:	movt	r0, #2
   11944:	ldr	r0, [r0]
   11948:	bl	149e0 <__mempcpy_chk@plt+0x39cc>
   1194c:	cmp	r0, #0
   11950:	subeq	sp, fp, #16
   11954:	popeq	{r4, r5, r6, sl, fp, pc}
   11958:	b	119cc <__mempcpy_chk@plt+0x9b8>
   1195c:	movw	r1, #21495	; 0x53f7
   11960:	mov	r0, #0
   11964:	mov	r2, #5
   11968:	movt	r1, #1
   1196c:	bl	10e40 <dcgettext@plt>
   11970:	mov	r4, r0
   11974:	movw	r0, #24912	; 0x6150
   11978:	movt	r0, #2
   1197c:	ldr	r6, [r0]
   11980:	bl	10f3c <__errno_location@plt>
   11984:	ldr	r5, [r0]
   11988:	cmp	r6, #0
   1198c:	bne	119a8 <__mempcpy_chk@plt+0x994>
   11990:	movw	r2, #21511	; 0x5407
   11994:	mov	r0, #0
   11998:	mov	r1, r5
   1199c:	mov	r3, r4
   119a0:	movt	r2, #1
   119a4:	b	119c8 <__mempcpy_chk@plt+0x9b4>
   119a8:	mov	r0, r6
   119ac:	bl	13768 <__mempcpy_chk@plt+0x2754>
   119b0:	movw	r2, #21507	; 0x5403
   119b4:	mov	r3, r0
   119b8:	str	r4, [sp]
   119bc:	mov	r0, #0
   119c0:	mov	r1, r5
   119c4:	movt	r2, #1
   119c8:	bl	10eb8 <error@plt>
   119cc:	movw	r0, #24812	; 0x60ec
   119d0:	movt	r0, #2
   119d4:	ldr	r0, [r0]
   119d8:	bl	10df8 <_exit@plt>
   119dc:	sub	sp, sp, #8
   119e0:	push	{r4, r5, r6, r7, fp, lr}
   119e4:	add	fp, sp, #16
   119e8:	sub	sp, sp, #8
   119ec:	mov	r5, r0
   119f0:	add	r0, fp, #8
   119f4:	cmp	r1, #11
   119f8:	str	r3, [fp, #12]
   119fc:	str	r2, [fp, #8]
   11a00:	str	r0, [sp, #4]
   11a04:	bhi	11a40 <__mempcpy_chk@plt+0xa2c>
   11a08:	mov	r0, #1
   11a0c:	movw	r2, #1300	; 0x514
   11a10:	tst	r2, r0, lsl r1
   11a14:	bne	11b00 <__mempcpy_chk@plt+0xaec>
   11a18:	movw	r2, #2570	; 0xa0a
   11a1c:	tst	r2, r0, lsl r1
   11a20:	bne	11a68 <__mempcpy_chk@plt+0xa54>
   11a24:	cmp	r1, #0
   11a28:	bne	11a40 <__mempcpy_chk@plt+0xa2c>
   11a2c:	ldr	r0, [sp, #4]
   11a30:	add	r1, r0, #4
   11a34:	str	r1, [sp, #4]
   11a38:	mov	r1, #0
   11a3c:	b	11b0c <__mempcpy_chk@plt+0xaf8>
   11a40:	sub	r0, r1, #1024	; 0x400
   11a44:	cmp	r0, #10
   11a48:	bhi	11b00 <__mempcpy_chk@plt+0xaec>
   11a4c:	mov	r2, #1
   11a50:	movw	r3, #645	; 0x285
   11a54:	tst	r3, r2, lsl r0
   11a58:	bne	11b00 <__mempcpy_chk@plt+0xaec>
   11a5c:	movw	r3, #1282	; 0x502
   11a60:	tst	r3, r2, lsl r0
   11a64:	beq	11a74 <__mempcpy_chk@plt+0xa60>
   11a68:	mov	r0, r5
   11a6c:	bl	10f9c <fcntl64@plt>
   11a70:	b	11b18 <__mempcpy_chk@plt+0xb04>
   11a74:	cmp	r0, #6
   11a78:	bne	11b00 <__mempcpy_chk@plt+0xaec>
   11a7c:	ldr	r0, [sp, #4]
   11a80:	movw	r7, #24920	; 0x6158
   11a84:	movt	r7, #2
   11a88:	add	r1, r0, #4
   11a8c:	str	r1, [sp, #4]
   11a90:	ldr	r6, [r0]
   11a94:	ldr	r0, [r7]
   11a98:	cmp	r0, #0
   11a9c:	blt	11b3c <__mempcpy_chk@plt+0xb28>
   11aa0:	mov	r0, r5
   11aa4:	movw	r1, #1030	; 0x406
   11aa8:	mov	r2, r6
   11aac:	bl	10f9c <fcntl64@plt>
   11ab0:	mov	r4, r0
   11ab4:	cmn	r0, #1
   11ab8:	bgt	11b30 <__mempcpy_chk@plt+0xb1c>
   11abc:	bl	10f3c <__errno_location@plt>
   11ac0:	ldr	r0, [r0]
   11ac4:	cmp	r0, #22
   11ac8:	bne	11b30 <__mempcpy_chk@plt+0xb1c>
   11acc:	mov	r0, r5
   11ad0:	mov	r1, #0
   11ad4:	mov	r2, r6
   11ad8:	bl	10f9c <fcntl64@plt>
   11adc:	mov	r4, r0
   11ae0:	cmp	r0, #0
   11ae4:	blt	11b1c <__mempcpy_chk@plt+0xb08>
   11ae8:	mvn	r0, #0
   11aec:	str	r0, [r7]
   11af0:	mov	r0, #1
   11af4:	cmp	r0, #0
   11af8:	bne	11b68 <__mempcpy_chk@plt+0xb54>
   11afc:	b	11b1c <__mempcpy_chk@plt+0xb08>
   11b00:	ldr	r0, [sp, #4]
   11b04:	add	r2, r0, #4
   11b08:	str	r2, [sp, #4]
   11b0c:	ldr	r2, [r0]
   11b10:	mov	r0, r5
   11b14:	bl	10f9c <fcntl64@plt>
   11b18:	mov	r4, r0
   11b1c:	mov	r0, r4
   11b20:	sub	sp, fp, #16
   11b24:	pop	{r4, r5, r6, r7, fp, lr}
   11b28:	add	sp, sp, #8
   11b2c:	bx	lr
   11b30:	mov	r0, #1
   11b34:	str	r0, [r7]
   11b38:	b	11b1c <__mempcpy_chk@plt+0xb08>
   11b3c:	mov	r0, r5
   11b40:	mov	r1, #0
   11b44:	mov	r2, r6
   11b48:	bl	10f9c <fcntl64@plt>
   11b4c:	mov	r4, r0
   11b50:	ldr	r0, [r7]
   11b54:	add	r0, r0, #1
   11b58:	clz	r0, r0
   11b5c:	lsr	r0, r0, #5
   11b60:	cmp	r0, #0
   11b64:	beq	11b1c <__mempcpy_chk@plt+0xb08>
   11b68:	cmp	r4, #0
   11b6c:	blt	11b1c <__mempcpy_chk@plt+0xb08>
   11b70:	mov	r0, r4
   11b74:	mov	r1, #1
   11b78:	bl	10f9c <fcntl64@plt>
   11b7c:	cmp	r0, #0
   11b80:	blt	11b9c <__mempcpy_chk@plt+0xb88>
   11b84:	orr	r2, r0, #1
   11b88:	mov	r0, r4
   11b8c:	mov	r1, #2
   11b90:	bl	10f9c <fcntl64@plt>
   11b94:	cmn	r0, #1
   11b98:	bne	11b1c <__mempcpy_chk@plt+0xb08>
   11b9c:	bl	10f3c <__errno_location@plt>
   11ba0:	ldr	r6, [r0]
   11ba4:	mov	r5, r0
   11ba8:	mov	r0, r4
   11bac:	bl	11008 <close@plt>
   11bb0:	str	r6, [r5]
   11bb4:	mvn	r4, #0
   11bb8:	b	11b1c <__mempcpy_chk@plt+0xb08>
   11bbc:	push	{r4, r5, r6, r7, fp, lr}
   11bc0:	add	fp, sp, #16
   11bc4:	mov	r5, r0
   11bc8:	mov	r0, r1
   11bcc:	mov	r1, r2
   11bd0:	mov	r2, r3
   11bd4:	bl	10ec4 <open64@plt>
   11bd8:	mov	r4, r0
   11bdc:	cmp	r0, r5
   11be0:	beq	11c1c <__mempcpy_chk@plt+0xc08>
   11be4:	cmp	r4, #0
   11be8:	blt	11c1c <__mempcpy_chk@plt+0xc08>
   11bec:	mov	r0, r4
   11bf0:	mov	r1, r5
   11bf4:	bl	10e4c <dup2@plt>
   11bf8:	mov	r5, r0
   11bfc:	bl	10f3c <__errno_location@plt>
   11c00:	ldr	r7, [r0]
   11c04:	mov	r6, r0
   11c08:	mov	r0, r4
   11c0c:	bl	11008 <close@plt>
   11c10:	mov	r0, r5
   11c14:	str	r7, [r6]
   11c18:	pop	{r4, r5, r6, r7, fp, pc}
   11c1c:	mov	r0, r4
   11c20:	pop	{r4, r5, r6, r7, fp, pc}
   11c24:	push	{fp, lr}
   11c28:	mov	fp, sp
   11c2c:	bl	11c3c <__mempcpy_chk@plt+0xc28>
   11c30:	cmp	r0, #0
   11c34:	popne	{fp, pc}
   11c38:	bl	14840 <__mempcpy_chk@plt+0x382c>
   11c3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c40:	add	fp, sp, #28
   11c44:	push	{r2}		; (str r2, [sp, #-4]!)
   11c48:	mov	sl, r1
   11c4c:	mov	r7, r0
   11c50:	bl	1495c <__mempcpy_chk@plt+0x3948>
   11c54:	sub	r4, r0, r7
   11c58:	bl	149a8 <__mempcpy_chk@plt+0x3994>
   11c5c:	mov	r6, r0
   11c60:	add	r5, r4, r0
   11c64:	mov	r0, sl
   11c68:	bl	10f30 <strlen@plt>
   11c6c:	mov	r9, r0
   11c70:	cmp	r6, #0
   11c74:	beq	11c9c <__mempcpy_chk@plt+0xc88>
   11c78:	add	r0, r7, r5
   11c7c:	mov	r4, #0
   11c80:	ldrb	r0, [r0, #-1]
   11c84:	cmp	r0, #47	; 0x2f
   11c88:	beq	11cac <__mempcpy_chk@plt+0xc98>
   11c8c:	ldrb	r0, [sl]
   11c90:	subs	r4, r0, #47	; 0x2f
   11c94:	movwne	r4, #47	; 0x2f
   11c98:	b	11cac <__mempcpy_chk@plt+0xc98>
   11c9c:	ldrb	r0, [sl]
   11ca0:	mov	r4, #0
   11ca4:	cmp	r0, #47	; 0x2f
   11ca8:	movweq	r4, #46	; 0x2e
   11cac:	uxtb	r8, r4
   11cb0:	add	r0, r9, r5
   11cb4:	cmp	r8, #0
   11cb8:	movwne	r8, #1
   11cbc:	add	r0, r0, r8
   11cc0:	add	r0, r0, #1
   11cc4:	bl	148d8 <__mempcpy_chk@plt+0x38c4>
   11cc8:	mov	r6, r0
   11ccc:	cmp	r0, #0
   11cd0:	beq	11d10 <__mempcpy_chk@plt+0xcfc>
   11cd4:	mov	r0, r6
   11cd8:	mov	r1, r7
   11cdc:	mov	r2, r5
   11ce0:	mvn	r3, #0
   11ce4:	bl	11014 <__mempcpy_chk@plt>
   11ce8:	ldr	r1, [sp]
   11cec:	strb	r4, [r0], r8
   11cf0:	mov	r2, r9
   11cf4:	mvn	r3, #0
   11cf8:	cmp	r1, #0
   11cfc:	strne	r0, [r1]
   11d00:	mov	r1, sl
   11d04:	bl	11014 <__mempcpy_chk@plt>
   11d08:	mov	r1, #0
   11d0c:	strb	r1, [r0]
   11d10:	mov	r0, r6
   11d14:	sub	sp, fp, #28
   11d18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d1c:	push	{r4, r5, r6, sl, fp, lr}
   11d20:	add	fp, sp, #16
   11d24:	mov	r4, r0
   11d28:	bl	10f3c <__errno_location@plt>
   11d2c:	ldr	r6, [r0]
   11d30:	mov	r5, r0
   11d34:	mov	r0, r4
   11d38:	bl	10dec <free@plt>
   11d3c:	str	r6, [r5]
   11d40:	pop	{r4, r5, r6, sl, fp, pc}
   11d44:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11d48:	add	fp, sp, #24
   11d4c:	sub	sp, sp, #8
   11d50:	movw	r6, #24904	; 0x6148
   11d54:	mov	r4, #0
   11d58:	cmp	r0, #2
   11d5c:	movt	r6, #2
   11d60:	ldr	r7, [r6]
   11d64:	str	r4, [r6]
   11d68:	bne	11ddc <__mempcpy_chk@plt+0xdc8>
   11d6c:	mov	r8, r3
   11d70:	movw	r3, #21532	; 0x541c
   11d74:	mov	r5, r2
   11d78:	movw	r2, #21514	; 0x540a
   11d7c:	mov	r0, #2
   11d80:	str	r4, [sp]
   11d84:	movt	r2, #1
   11d88:	movt	r3, #1
   11d8c:	bl	10f0c <getopt_long@plt>
   11d90:	cmp	r0, #104	; 0x68
   11d94:	beq	11dd0 <__mempcpy_chk@plt+0xdbc>
   11d98:	cmp	r0, #118	; 0x76
   11d9c:	bne	11ddc <__mempcpy_chk@plt+0xdc8>
   11da0:	movw	r0, #24900	; 0x6144
   11da4:	ldr	r3, [fp, #8]
   11da8:	add	r1, fp, #16
   11dac:	mov	r2, r8
   11db0:	movt	r0, #2
   11db4:	str	r1, [sp, #4]
   11db8:	str	r1, [sp]
   11dbc:	mov	r1, r5
   11dc0:	ldr	r0, [r0]
   11dc4:	bl	13f98 <__mempcpy_chk@plt+0x2f84>
   11dc8:	mov	r0, #0
   11dcc:	bl	10f24 <exit@plt>
   11dd0:	ldr	r1, [fp, #12]
   11dd4:	mov	r0, #0
   11dd8:	blx	r1
   11ddc:	movw	r0, #24888	; 0x6138
   11de0:	str	r7, [r6]
   11de4:	movt	r0, #2
   11de8:	str	r4, [r0]
   11dec:	sub	sp, fp, #24
   11df0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11df4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11df8:	add	fp, sp, #24
   11dfc:	sub	sp, sp, #8
   11e00:	movw	r6, #24904	; 0x6148
   11e04:	mov	r8, r3
   11e08:	ldr	r3, [fp, #12]
   11e0c:	mov	r5, r2
   11e10:	mov	r2, #1
   11e14:	movw	r4, #20191	; 0x4edf
   11e18:	movt	r6, #2
   11e1c:	movt	r4, #1
   11e20:	ldr	r7, [r6]
   11e24:	str	r2, [r6]
   11e28:	mov	r2, #0
   11e2c:	str	r2, [sp]
   11e30:	movw	r2, #21514	; 0x540a
   11e34:	cmp	r3, #0
   11e38:	movt	r2, #1
   11e3c:	movw	r3, #21532	; 0x541c
   11e40:	movne	r2, r4
   11e44:	movt	r3, #1
   11e48:	bl	10f0c <getopt_long@plt>
   11e4c:	cmn	r0, #1
   11e50:	beq	11e80 <__mempcpy_chk@plt+0xe6c>
   11e54:	ldr	r1, [fp, #16]
   11e58:	cmp	r0, #104	; 0x68
   11e5c:	beq	11e78 <__mempcpy_chk@plt+0xe64>
   11e60:	cmp	r0, #118	; 0x76
   11e64:	beq	11e8c <__mempcpy_chk@plt+0xe78>
   11e68:	movw	r0, #24812	; 0x60ec
   11e6c:	movt	r0, #2
   11e70:	ldr	r0, [r0]
   11e74:	b	11e7c <__mempcpy_chk@plt+0xe68>
   11e78:	mov	r0, #0
   11e7c:	blx	r1
   11e80:	str	r7, [r6]
   11e84:	sub	sp, fp, #24
   11e88:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11e8c:	movw	r0, #24900	; 0x6144
   11e90:	ldr	r3, [fp, #8]
   11e94:	add	r1, fp, #20
   11e98:	mov	r2, r8
   11e9c:	movt	r0, #2
   11ea0:	str	r1, [sp, #4]
   11ea4:	str	r1, [sp]
   11ea8:	mov	r1, r5
   11eac:	ldr	r0, [r0]
   11eb0:	bl	13f98 <__mempcpy_chk@plt+0x2f84>
   11eb4:	mov	r0, #0
   11eb8:	bl	10f24 <exit@plt>
   11ebc:	push	{r4, r5, fp, lr}
   11ec0:	add	fp, sp, #8
   11ec4:	cmp	r0, #0
   11ec8:	beq	11f5c <__mempcpy_chk@plt+0xf48>
   11ecc:	mov	r1, #47	; 0x2f
   11ed0:	mov	r4, r0
   11ed4:	bl	10fb4 <strrchr@plt>
   11ed8:	cmp	r0, #0
   11edc:	mov	r5, r4
   11ee0:	addne	r5, r0, #1
   11ee4:	sub	r0, r5, r4
   11ee8:	cmp	r0, #7
   11eec:	blt	11f40 <__mempcpy_chk@plt+0xf2c>
   11ef0:	movw	r1, #21636	; 0x5484
   11ef4:	sub	r0, r5, #7
   11ef8:	mov	r2, #7
   11efc:	movt	r1, #1
   11f00:	bl	10ff0 <strncmp@plt>
   11f04:	cmp	r0, #0
   11f08:	bne	11f40 <__mempcpy_chk@plt+0xf2c>
   11f0c:	movw	r1, #21644	; 0x548c
   11f10:	mov	r0, r5
   11f14:	mov	r2, #3
   11f18:	movt	r1, #1
   11f1c:	bl	10ff0 <strncmp@plt>
   11f20:	cmp	r0, #0
   11f24:	beq	11f30 <__mempcpy_chk@plt+0xf1c>
   11f28:	mov	r4, r5
   11f2c:	b	11f40 <__mempcpy_chk@plt+0xf2c>
   11f30:	movw	r0, #24880	; 0x6130
   11f34:	add	r4, r5, #3
   11f38:	movt	r0, #2
   11f3c:	str	r4, [r0]
   11f40:	movw	r0, #24884	; 0x6134
   11f44:	movt	r0, #2
   11f48:	str	r4, [r0]
   11f4c:	movw	r0, #24924	; 0x615c
   11f50:	movt	r0, #2
   11f54:	str	r4, [r0]
   11f58:	pop	{r4, r5, fp, pc}
   11f5c:	movw	r0, #24896	; 0x6140
   11f60:	mov	r1, #55	; 0x37
   11f64:	mov	r2, #1
   11f68:	movt	r0, #2
   11f6c:	ldr	r3, [r0]
   11f70:	movw	r0, #21580	; 0x544c
   11f74:	movt	r0, #1
   11f78:	bl	10e7c <fwrite@plt>
   11f7c:	bl	10ffc <abort@plt>
   11f80:	push	{r4, r5, r6, sl, fp, lr}
   11f84:	add	fp, sp, #16
   11f88:	mov	r4, r0
   11f8c:	movw	r0, #24928	; 0x6160
   11f90:	movt	r0, #2
   11f94:	cmp	r4, #0
   11f98:	moveq	r4, r0
   11f9c:	bl	10f3c <__errno_location@plt>
   11fa0:	ldr	r6, [r0]
   11fa4:	mov	r5, r0
   11fa8:	mov	r0, r4
   11fac:	mov	r1, #48	; 0x30
   11fb0:	bl	14740 <__mempcpy_chk@plt+0x372c>
   11fb4:	str	r6, [r5]
   11fb8:	pop	{r4, r5, r6, sl, fp, pc}
   11fbc:	movw	r1, #24928	; 0x6160
   11fc0:	cmp	r0, #0
   11fc4:	movt	r1, #2
   11fc8:	movne	r1, r0
   11fcc:	ldr	r0, [r1]
   11fd0:	bx	lr
   11fd4:	movw	r2, #24928	; 0x6160
   11fd8:	cmp	r0, #0
   11fdc:	movt	r2, #2
   11fe0:	movne	r2, r0
   11fe4:	str	r1, [r2]
   11fe8:	bx	lr
   11fec:	movw	r3, #24928	; 0x6160
   11ff0:	cmp	r0, #0
   11ff4:	movt	r3, #2
   11ff8:	movne	r3, r0
   11ffc:	ubfx	r0, r1, #5, #3
   12000:	and	r1, r1, #31
   12004:	add	r0, r3, r0, lsl #2
   12008:	ldr	r3, [r0, #8]
   1200c:	eor	r2, r2, r3, lsr r1
   12010:	and	r2, r2, #1
   12014:	eor	r2, r3, r2, lsl r1
   12018:	str	r2, [r0, #8]
   1201c:	mov	r0, #1
   12020:	and	r0, r0, r3, lsr r1
   12024:	bx	lr
   12028:	movw	r2, #24928	; 0x6160
   1202c:	cmp	r0, #0
   12030:	movt	r2, #2
   12034:	movne	r2, r0
   12038:	ldr	r0, [r2, #4]
   1203c:	str	r1, [r2, #4]
   12040:	bx	lr
   12044:	movw	r3, #24928	; 0x6160
   12048:	cmp	r0, #0
   1204c:	movt	r3, #2
   12050:	movne	r3, r0
   12054:	cmp	r1, #0
   12058:	mov	r0, #10
   1205c:	cmpne	r2, #0
   12060:	str	r0, [r3]
   12064:	bne	12074 <__mempcpy_chk@plt+0x1060>
   12068:	push	{fp, lr}
   1206c:	mov	fp, sp
   12070:	bl	10ffc <abort@plt>
   12074:	str	r1, [r3, #40]	; 0x28
   12078:	str	r2, [r3, #44]	; 0x2c
   1207c:	bx	lr
   12080:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12084:	add	fp, sp, #28
   12088:	sub	sp, sp, #20
   1208c:	mov	r7, r0
   12090:	ldr	r0, [fp, #8]
   12094:	movw	r5, #24928	; 0x6160
   12098:	mov	r8, r3
   1209c:	mov	r9, r2
   120a0:	mov	sl, r1
   120a4:	movt	r5, #2
   120a8:	cmp	r0, #0
   120ac:	movne	r5, r0
   120b0:	bl	10f3c <__errno_location@plt>
   120b4:	mov	r4, r0
   120b8:	ldm	r5, {r0, r1}
   120bc:	ldr	r2, [r5, #40]	; 0x28
   120c0:	ldr	r3, [r5, #44]	; 0x2c
   120c4:	add	r5, r5, #8
   120c8:	ldr	r6, [r4]
   120cc:	stm	sp, {r0, r1, r5}
   120d0:	str	r2, [sp, #12]
   120d4:	str	r3, [sp, #16]
   120d8:	mov	r0, r7
   120dc:	mov	r1, sl
   120e0:	mov	r2, r9
   120e4:	mov	r3, r8
   120e8:	bl	120f8 <__mempcpy_chk@plt+0x10e4>
   120ec:	str	r6, [r4]
   120f0:	sub	sp, fp, #28
   120f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   120f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120fc:	add	fp, sp, #28
   12100:	sub	sp, sp, #156	; 0x9c
   12104:	str	r0, [sp, #80]	; 0x50
   12108:	ldr	r0, [fp, #12]
   1210c:	mov	r6, r1
   12110:	mov	r9, r3
   12114:	str	r2, [fp, #-84]	; 0xffffffac
   12118:	and	r1, r0, #4
   1211c:	str	r1, [sp, #32]
   12120:	and	r1, r0, #1
   12124:	str	r1, [sp, #36]	; 0x24
   12128:	ubfx	r4, r0, #1, #1
   1212c:	bl	10e94 <__ctype_get_mb_cur_max@plt>
   12130:	str	r0, [sp, #40]	; 0x28
   12134:	ldr	r0, [fp, #24]
   12138:	ldr	r7, [fp, #8]
   1213c:	mov	r1, #0
   12140:	mov	r5, #1
   12144:	str	r1, [fp, #-56]	; 0xffffffc8
   12148:	mov	r1, #0
   1214c:	str	r1, [sp, #60]	; 0x3c
   12150:	str	r0, [sp, #76]	; 0x4c
   12154:	ldr	r0, [fp, #20]
   12158:	str	r0, [sp, #72]	; 0x48
   1215c:	mov	r0, #0
   12160:	str	r0, [sp, #56]	; 0x38
   12164:	mov	r0, #0
   12168:	str	r0, [sp, #92]	; 0x5c
   1216c:	mov	r0, #0
   12170:	str	r0, [fp, #-76]	; 0xffffffb4
   12174:	mov	r0, #0
   12178:	cmp	r7, #10
   1217c:	bhi	130fc <__mempcpy_chk@plt+0x20e8>
   12180:	add	r1, pc, #28
   12184:	mov	sl, r6
   12188:	ldr	r6, [sp, #80]	; 0x50
   1218c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12190:	mov	r8, #0
   12194:	mov	r2, #1
   12198:	mov	r3, #0
   1219c:	mov	lr, r9
   121a0:	ldr	pc, [r1, r7, lsl #2]
   121a4:	andeq	r2, r1, r8, lsl #5
   121a8:			; <UNDEFINED> instruction: 0x000122b4
   121ac:	andeq	r2, r1, r8, ror r2
   121b0:	andeq	r2, r1, r0, ror r2
   121b4:	andeq	r2, r1, r8, lsr #5
   121b8:	strdeq	r2, [r1], -ip
   121bc:	muleq	r1, r8, r2
   121c0:	andeq	r2, r1, r8, asr r3
   121c4:	ldrdeq	r2, [r1], -r0
   121c8:	ldrdeq	r2, [r1], -r0
   121cc:	strdeq	r2, [r1], -r8
   121d0:	movw	r0, #21728	; 0x54e0
   121d4:	mov	r1, r7
   121d8:	movt	r0, #1
   121dc:	bl	13b08 <__mempcpy_chk@plt+0x2af4>
   121e0:	str	r0, [sp, #72]	; 0x48
   121e4:	movw	r0, #21730	; 0x54e2
   121e8:	mov	r1, r7
   121ec:	movt	r0, #1
   121f0:	bl	13b08 <__mempcpy_chk@plt+0x2af4>
   121f4:	str	r0, [sp, #76]	; 0x4c
   121f8:	str	r5, [fp, #-48]	; 0xffffffd0
   121fc:	mov	r8, #0
   12200:	mov	r5, r7
   12204:	tst	r4, #1
   12208:	bne	12240 <__mempcpy_chk@plt+0x122c>
   1220c:	ldr	r0, [sp, #72]	; 0x48
   12210:	ldrb	r0, [r0]
   12214:	cmp	r0, #0
   12218:	beq	12240 <__mempcpy_chk@plt+0x122c>
   1221c:	ldr	r1, [sp, #72]	; 0x48
   12220:	mov	r8, #0
   12224:	add	r1, r1, #1
   12228:	cmp	r8, sl
   1222c:	strbcc	r0, [r6, r8]
   12230:	ldrb	r0, [r1, r8]
   12234:	add	r8, r8, #1
   12238:	cmp	r0, #0
   1223c:	bne	12228 <__mempcpy_chk@plt+0x1214>
   12240:	ldr	r7, [sp, #76]	; 0x4c
   12244:	mov	r0, r7
   12248:	bl	10f30 <strlen@plt>
   1224c:	str	r7, [sp, #92]	; 0x5c
   12250:	mov	r7, r5
   12254:	ldr	ip, [fp, #-84]	; 0xffffffac
   12258:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1225c:	str	r0, [fp, #-76]	; 0xffffffb4
   12260:	mov	r2, #1
   12264:	mov	r3, r4
   12268:	mov	lr, r9
   1226c:	b	12358 <__mempcpy_chk@plt+0x1344>
   12270:	mov	r0, #1
   12274:	b	122b4 <__mempcpy_chk@plt+0x12a0>
   12278:	tst	r4, #1
   1227c:	bne	122b4 <__mempcpy_chk@plt+0x12a0>
   12280:	mov	r2, r0
   12284:	b	122dc <__mempcpy_chk@plt+0x12c8>
   12288:	mov	r7, #0
   1228c:	mov	r8, #0
   12290:	mov	r2, r0
   12294:	b	12354 <__mempcpy_chk@plt+0x1340>
   12298:	mov	r0, #1
   1229c:	mov	r8, #0
   122a0:	mov	r7, #5
   122a4:	b	12310 <__mempcpy_chk@plt+0x12fc>
   122a8:	mov	r2, #1
   122ac:	tst	r4, #1
   122b0:	beq	122dc <__mempcpy_chk@plt+0x12c8>
   122b4:	mov	r1, #1
   122b8:	mov	r8, #0
   122bc:	mov	r7, #2
   122c0:	mov	r2, r0
   122c4:	mov	r3, #1
   122c8:	str	r1, [fp, #-76]	; 0xffffffb4
   122cc:	movw	r1, #21730	; 0x54e2
   122d0:	movt	r1, #1
   122d4:	str	r1, [sp, #92]	; 0x5c
   122d8:	b	12358 <__mempcpy_chk@plt+0x1344>
   122dc:	cmp	sl, #0
   122e0:	mov	r8, #1
   122e4:	mov	r7, #2
   122e8:	movne	r0, #39	; 0x27
   122ec:	strbne	r0, [r6]
   122f0:	movw	r0, #21730	; 0x54e2
   122f4:	movt	r0, #1
   122f8:	b	12348 <__mempcpy_chk@plt+0x1334>
   122fc:	mov	r7, #5
   12300:	tst	r4, #1
   12304:	beq	1232c <__mempcpy_chk@plt+0x1318>
   12308:	mov	r0, #1
   1230c:	mov	r8, #0
   12310:	str	r0, [fp, #-76]	; 0xffffffb4
   12314:	movw	r0, #21726	; 0x54de
   12318:	mov	r2, #1
   1231c:	mov	r3, #1
   12320:	movt	r0, #1
   12324:	str	r0, [sp, #92]	; 0x5c
   12328:	b	12358 <__mempcpy_chk@plt+0x1344>
   1232c:	cmp	sl, #0
   12330:	mov	r8, #1
   12334:	mov	r2, #1
   12338:	movne	r0, #34	; 0x22
   1233c:	strbne	r0, [r6]
   12340:	movw	r0, #21726	; 0x54de
   12344:	movt	r0, #1
   12348:	str	r0, [sp, #92]	; 0x5c
   1234c:	mov	r0, #1
   12350:	str	r0, [fp, #-76]	; 0xffffffb4
   12354:	mov	r3, #0
   12358:	ldr	r0, [fp, #16]
   1235c:	str	r3, [fp, #-72]	; 0xffffffb8
   12360:	str	r7, [fp, #-64]	; 0xffffffc0
   12364:	str	r2, [sp, #84]	; 0x54
   12368:	cmp	r0, #0
   1236c:	movwne	r0, #1
   12370:	and	r0, r0, r3
   12374:	str	r0, [fp, #-88]	; 0xffffffa8
   12378:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1237c:	cmp	r0, #0
   12380:	movwne	r0, #1
   12384:	subs	r4, r7, #2
   12388:	mov	r7, #0
   1238c:	and	r1, r0, r3
   12390:	str	r4, [fp, #-80]	; 0xffffffb0
   12394:	and	r1, r2, r1
   12398:	str	r1, [sp, #48]	; 0x30
   1239c:	clz	r1, r4
   123a0:	lsr	r1, r1, #5
   123a4:	and	r1, r1, r3
   123a8:	eor	r3, r3, #1
   123ac:	str	r1, [sp, #64]	; 0x40
   123b0:	mov	r1, r4
   123b4:	str	r3, [sp, #88]	; 0x58
   123b8:	movwne	r1, #1
   123bc:	orr	r3, r1, r3
   123c0:	and	r1, r1, r2
   123c4:	and	r0, r0, r1
   123c8:	str	r3, [sp, #68]	; 0x44
   123cc:	str	r1, [fp, #-68]	; 0xffffffbc
   123d0:	str	r0, [fp, #-60]	; 0xffffffc4
   123d4:	eor	r0, r2, #1
   123d8:	str	r0, [sp, #52]	; 0x34
   123dc:	cmn	lr, #1
   123e0:	beq	123f0 <__mempcpy_chk@plt+0x13dc>
   123e4:	cmp	r7, lr
   123e8:	bne	123fc <__mempcpy_chk@plt+0x13e8>
   123ec:	b	12f24 <__mempcpy_chk@plt+0x1f10>
   123f0:	ldrb	r0, [ip, r7]
   123f4:	cmp	r0, #0
   123f8:	beq	12f2c <__mempcpy_chk@plt+0x1f18>
   123fc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12400:	mov	r9, #0
   12404:	str	r5, [fp, #-48]	; 0xffffffd0
   12408:	cmp	r0, #0
   1240c:	beq	12440 <__mempcpy_chk@plt+0x142c>
   12410:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12414:	add	r4, r7, r0
   12418:	cmp	r0, #2
   1241c:	bcc	12438 <__mempcpy_chk@plt+0x1424>
   12420:	cmn	lr, #1
   12424:	bne	12438 <__mempcpy_chk@plt+0x1424>
   12428:	mov	r0, ip
   1242c:	bl	10f30 <strlen@plt>
   12430:	ldr	ip, [fp, #-84]	; 0xffffffac
   12434:	mov	lr, r0
   12438:	cmp	r4, lr
   1243c:	bls	12448 <__mempcpy_chk@plt+0x1434>
   12440:	mov	r0, #0
   12444:	b	12488 <__mempcpy_chk@plt+0x1474>
   12448:	ldr	r1, [sp, #92]	; 0x5c
   1244c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12450:	add	r0, ip, r7
   12454:	mov	r4, lr
   12458:	bl	10e34 <memcmp@plt>
   1245c:	ldr	r2, [sp, #88]	; 0x58
   12460:	cmp	r0, #0
   12464:	mov	r1, r0
   12468:	movwne	r1, #1
   1246c:	orr	r1, r1, r2
   12470:	tst	r1, #1
   12474:	beq	12fbc <__mempcpy_chk@plt+0x1fa8>
   12478:	ldr	ip, [fp, #-84]	; 0xffffffac
   1247c:	clz	r0, r0
   12480:	mov	lr, r4
   12484:	lsr	r0, r0, #5
   12488:	str	r0, [fp, #-52]	; 0xffffffcc
   1248c:	ldrb	r5, [ip, r7]
   12490:	cmp	r5, #126	; 0x7e
   12494:	bhi	1284c <__mempcpy_chk@plt+0x1838>
   12498:	add	r3, pc, #16
   1249c:	mov	r4, #1
   124a0:	mov	r2, #110	; 0x6e
   124a4:	mov	r0, #97	; 0x61
   124a8:	mov	r1, #0
   124ac:	ldr	pc, [r3, r5, lsl #2]
   124b0:	andeq	r2, r1, r8, asr #14
   124b4:	andeq	r2, r1, ip, asr #16
   124b8:	andeq	r2, r1, ip, asr #16
   124bc:	andeq	r2, r1, ip, asr #16
   124c0:	andeq	r2, r1, ip, asr #16
   124c4:	andeq	r2, r1, ip, asr #16
   124c8:	andeq	r2, r1, ip, asr #16
   124cc:	andeq	r2, r1, r0, lsl #18
   124d0:	andeq	r2, r1, r8, lsr #14
   124d4:	andeq	r2, r1, r0, lsr #14
   124d8:	andeq	r2, r1, r4, lsr r7
   124dc:			; <UNDEFINED> instruction: 0x000127b4
   124e0:	andeq	r2, r1, r8, lsl r7
   124e4:	andeq	r2, r1, r0, lsr r7
   124e8:	andeq	r2, r1, ip, asr #16
   124ec:	andeq	r2, r1, ip, asr #16
   124f0:	andeq	r2, r1, ip, asr #16
   124f4:	andeq	r2, r1, ip, asr #16
   124f8:	andeq	r2, r1, ip, asr #16
   124fc:	andeq	r2, r1, ip, asr #16
   12500:	andeq	r2, r1, ip, asr #16
   12504:	andeq	r2, r1, ip, asr #16
   12508:	andeq	r2, r1, ip, asr #16
   1250c:	andeq	r2, r1, ip, asr #16
   12510:	andeq	r2, r1, ip, asr #16
   12514:	andeq	r2, r1, ip, asr #16
   12518:	andeq	r2, r1, ip, asr #16
   1251c:	andeq	r2, r1, ip, asr #16
   12520:	andeq	r2, r1, ip, asr #16
   12524:	andeq	r2, r1, ip, asr #16
   12528:	andeq	r2, r1, ip, asr #16
   1252c:	andeq	r2, r1, ip, asr #16
   12530:			; <UNDEFINED> instruction: 0x000128b8
   12534:			; <UNDEFINED> instruction: 0x000128bc
   12538:			; <UNDEFINED> instruction: 0x000128bc
   1253c:	andeq	r2, r1, r0, asr #13
   12540:			; <UNDEFINED> instruction: 0x000128bc
   12544:	andeq	r2, r1, ip, lsr #13
   12548:			; <UNDEFINED> instruction: 0x000128bc
   1254c:			; <UNDEFINED> instruction: 0x000127bc
   12550:			; <UNDEFINED> instruction: 0x000128bc
   12554:			; <UNDEFINED> instruction: 0x000128bc
   12558:			; <UNDEFINED> instruction: 0x000128bc
   1255c:	andeq	r2, r1, ip, lsr #13
   12560:	andeq	r2, r1, ip, lsr #13
   12564:	andeq	r2, r1, ip, lsr #13
   12568:	andeq	r2, r1, ip, lsr #13
   1256c:	andeq	r2, r1, ip, lsr #13
   12570:	andeq	r2, r1, ip, lsr #13
   12574:	andeq	r2, r1, ip, lsr #13
   12578:	andeq	r2, r1, ip, lsr #13
   1257c:	andeq	r2, r1, ip, lsr #13
   12580:	andeq	r2, r1, ip, lsr #13
   12584:	andeq	r2, r1, ip, lsr #13
   12588:	andeq	r2, r1, ip, lsr #13
   1258c:	andeq	r2, r1, ip, lsr #13
   12590:	andeq	r2, r1, ip, lsr #13
   12594:	andeq	r2, r1, ip, lsr #13
   12598:	andeq	r2, r1, ip, lsr #13
   1259c:			; <UNDEFINED> instruction: 0x000128bc
   125a0:			; <UNDEFINED> instruction: 0x000128bc
   125a4:			; <UNDEFINED> instruction: 0x000128bc
   125a8:			; <UNDEFINED> instruction: 0x000128bc
   125ac:	andeq	r2, r1, r8, lsl #15
   125b0:	andeq	r2, r1, ip, asr #16
   125b4:	andeq	r2, r1, ip, lsr #13
   125b8:	andeq	r2, r1, ip, lsr #13
   125bc:	andeq	r2, r1, ip, lsr #13
   125c0:	andeq	r2, r1, ip, lsr #13
   125c4:	andeq	r2, r1, ip, lsr #13
   125c8:	andeq	r2, r1, ip, lsr #13
   125cc:	andeq	r2, r1, ip, lsr #13
   125d0:	andeq	r2, r1, ip, lsr #13
   125d4:	andeq	r2, r1, ip, lsr #13
   125d8:	andeq	r2, r1, ip, lsr #13
   125dc:	andeq	r2, r1, ip, lsr #13
   125e0:	andeq	r2, r1, ip, lsr #13
   125e4:	andeq	r2, r1, ip, lsr #13
   125e8:	andeq	r2, r1, ip, lsr #13
   125ec:	andeq	r2, r1, ip, lsr #13
   125f0:	andeq	r2, r1, ip, lsr #13
   125f4:	andeq	r2, r1, ip, lsr #13
   125f8:	andeq	r2, r1, ip, lsr #13
   125fc:	andeq	r2, r1, ip, lsr #13
   12600:	andeq	r2, r1, ip, lsr #13
   12604:	andeq	r2, r1, ip, lsr #13
   12608:	andeq	r2, r1, ip, lsr #13
   1260c:	andeq	r2, r1, ip, lsr #13
   12610:	andeq	r2, r1, ip, lsr #13
   12614:	andeq	r2, r1, ip, lsr #13
   12618:	andeq	r2, r1, ip, lsr #13
   1261c:			; <UNDEFINED> instruction: 0x000128bc
   12620:	strdeq	r2, [r1], -r4
   12624:	andeq	r2, r1, ip, lsr #13
   12628:			; <UNDEFINED> instruction: 0x000128bc
   1262c:	andeq	r2, r1, ip, lsr #13
   12630:			; <UNDEFINED> instruction: 0x000128bc
   12634:	andeq	r2, r1, ip, lsr #13
   12638:	andeq	r2, r1, ip, lsr #13
   1263c:	andeq	r2, r1, ip, lsr #13
   12640:	andeq	r2, r1, ip, lsr #13
   12644:	andeq	r2, r1, ip, lsr #13
   12648:	andeq	r2, r1, ip, lsr #13
   1264c:	andeq	r2, r1, ip, lsr #13
   12650:	andeq	r2, r1, ip, lsr #13
   12654:	andeq	r2, r1, ip, lsr #13
   12658:	andeq	r2, r1, ip, lsr #13
   1265c:	andeq	r2, r1, ip, lsr #13
   12660:	andeq	r2, r1, ip, lsr #13
   12664:	andeq	r2, r1, ip, lsr #13
   12668:	andeq	r2, r1, ip, lsr #13
   1266c:	andeq	r2, r1, ip, lsr #13
   12670:	andeq	r2, r1, ip, lsr #13
   12674:	andeq	r2, r1, ip, lsr #13
   12678:	andeq	r2, r1, ip, lsr #13
   1267c:	andeq	r2, r1, ip, lsr #13
   12680:	andeq	r2, r1, ip, lsr #13
   12684:	andeq	r2, r1, ip, lsr #13
   12688:	andeq	r2, r1, ip, lsr #13
   1268c:	andeq	r2, r1, ip, lsr #13
   12690:	andeq	r2, r1, ip, lsr #13
   12694:	andeq	r2, r1, ip, lsr #13
   12698:	andeq	r2, r1, ip, lsr #13
   1269c:	ldrdeq	r2, [r1], -r4
   126a0:			; <UNDEFINED> instruction: 0x000128bc
   126a4:	ldrdeq	r2, [r1], -r4
   126a8:	andeq	r2, r1, r0, asr #13
   126ac:	ldr	r0, [fp, #-68]	; 0xffffffbc
   126b0:	cmp	r0, #0
   126b4:	beq	12914 <__mempcpy_chk@plt+0x1900>
   126b8:	ldr	r0, [fp, #16]
   126bc:	b	12918 <__mempcpy_chk@plt+0x1904>
   126c0:	mov	r4, #0
   126c4:	cmp	r7, #0
   126c8:	beq	128b8 <__mempcpy_chk@plt+0x18a4>
   126cc:	mov	r9, #0
   126d0:	b	126ac <__mempcpy_chk@plt+0x1698>
   126d4:	mov	r4, #0
   126d8:	cmn	lr, #1
   126dc:	beq	1289c <__mempcpy_chk@plt+0x1888>
   126e0:	cmp	r7, #0
   126e4:	bne	126cc <__mempcpy_chk@plt+0x16b8>
   126e8:	cmp	lr, #1
   126ec:	beq	128b8 <__mempcpy_chk@plt+0x18a4>
   126f0:	b	126cc <__mempcpy_chk@plt+0x16b8>
   126f4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   126f8:	cmp	r0, #2
   126fc:	bne	128dc <__mempcpy_chk@plt+0x18c8>
   12700:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12704:	tst	r0, #1
   12708:	bne	12fd8 <__mempcpy_chk@plt+0x1fc4>
   1270c:	mov	r9, #0
   12710:	mov	r0, #92	; 0x5c
   12714:	b	128f0 <__mempcpy_chk@plt+0x18dc>
   12718:	mov	r0, #102	; 0x66
   1271c:	b	12900 <__mempcpy_chk@plt+0x18ec>
   12720:	mov	r2, #116	; 0x74
   12724:	b	12734 <__mempcpy_chk@plt+0x1720>
   12728:	mov	r0, #98	; 0x62
   1272c:	b	12900 <__mempcpy_chk@plt+0x18ec>
   12730:	mov	r2, #114	; 0x72
   12734:	ldr	r0, [sp, #68]	; 0x44
   12738:	tst	r0, #1
   1273c:	mov	r0, r2
   12740:	bne	12900 <__mempcpy_chk@plt+0x18ec>
   12744:	b	12fd8 <__mempcpy_chk@plt+0x1fc4>
   12748:	ldr	r0, [sp, #84]	; 0x54
   1274c:	tst	r0, #1
   12750:	beq	129f0 <__mempcpy_chk@plt+0x19dc>
   12754:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12758:	tst	r0, #1
   1275c:	bne	130e8 <__mempcpy_chk@plt+0x20d4>
   12760:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12764:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12768:	cmp	r0, #2
   1276c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12770:	movwne	r0, #1
   12774:	orr	r0, r0, r2
   12778:	tst	r0, #1
   1277c:	beq	12dc0 <__mempcpy_chk@plt+0x1dac>
   12780:	mov	r0, r8
   12784:	b	12df4 <__mempcpy_chk@plt+0x1de0>
   12788:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1278c:	mov	r9, #0
   12790:	mov	r5, #63	; 0x3f
   12794:	cmp	r0, #5
   12798:	beq	12ba4 <__mempcpy_chk@plt+0x1b90>
   1279c:	cmp	r0, #2
   127a0:	bne	12c48 <__mempcpy_chk@plt+0x1c34>
   127a4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   127a8:	tst	r0, #1
   127ac:	beq	12c4c <__mempcpy_chk@plt+0x1c38>
   127b0:	b	12fd8 <__mempcpy_chk@plt+0x1fc4>
   127b4:	mov	r0, #118	; 0x76
   127b8:	b	12900 <__mempcpy_chk@plt+0x18ec>
   127bc:	mov	r0, #1
   127c0:	mov	r5, #39	; 0x27
   127c4:	str	r0, [sp, #60]	; 0x3c
   127c8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   127cc:	cmp	r0, #2
   127d0:	bne	12844 <__mempcpy_chk@plt+0x1830>
   127d4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   127d8:	tst	r0, #1
   127dc:	bne	12fd8 <__mempcpy_chk@plt+0x1fc4>
   127e0:	ldr	r2, [sp, #56]	; 0x38
   127e4:	clz	r1, sl
   127e8:	mov	r9, #0
   127ec:	lsr	r1, r1, #5
   127f0:	cmp	r2, #0
   127f4:	mov	r0, r2
   127f8:	movwne	r0, #1
   127fc:	orrs	r0, r0, r1
   12800:	moveq	r2, sl
   12804:	moveq	sl, r0
   12808:	cmp	r8, sl
   1280c:	str	r2, [sp, #56]	; 0x38
   12810:	movcc	r0, #39	; 0x27
   12814:	strbcc	r0, [r6, r8]
   12818:	add	r0, r8, #1
   1281c:	cmp	r0, sl
   12820:	movcc	r1, #92	; 0x5c
   12824:	strbcc	r1, [r6, r0]
   12828:	add	r0, r8, #2
   1282c:	add	r8, r8, #3
   12830:	cmp	r0, sl
   12834:	movcc	r1, #39	; 0x27
   12838:	strbcc	r1, [r6, r0]
   1283c:	mov	r0, #0
   12840:	str	r0, [fp, #-56]	; 0xffffffc8
   12844:	mov	r4, #1
   12848:	b	126ac <__mempcpy_chk@plt+0x1698>
   1284c:	ldr	r0, [sp, #40]	; 0x28
   12850:	cmp	r0, #1
   12854:	bne	12a1c <__mempcpy_chk@plt+0x1a08>
   12858:	str	lr, [sp, #28]
   1285c:	bl	10f18 <__ctype_b_loc@plt>
   12860:	ldr	r0, [r0]
   12864:	ldr	ip, [fp, #-84]	; 0xffffffac
   12868:	mov	r1, #1
   1286c:	add	r0, r0, r5, lsl #1
   12870:	ldrb	r0, [r0, #1]
   12874:	ubfx	r4, r0, #6, #1
   12878:	ldr	r0, [sp, #52]	; 0x34
   1287c:	mov	r2, r1
   12880:	cmp	r1, #1
   12884:	orr	r0, r4, r0
   12888:	bhi	12c54 <__mempcpy_chk@plt+0x1c40>
   1288c:	tst	r0, #1
   12890:	beq	12c54 <__mempcpy_chk@plt+0x1c40>
   12894:	ldr	lr, [sp, #28]
   12898:	b	126ac <__mempcpy_chk@plt+0x1698>
   1289c:	cmp	r7, #0
   128a0:	ldrbeq	r0, [ip, #1]
   128a4:	cmpeq	r0, #0
   128a8:	beq	128b8 <__mempcpy_chk@plt+0x18a4>
   128ac:	mvn	lr, #0
   128b0:	mov	r9, #0
   128b4:	b	126ac <__mempcpy_chk@plt+0x1698>
   128b8:	mov	r1, #1
   128bc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   128c0:	cmp	r0, #2
   128c4:	bne	128d4 <__mempcpy_chk@plt+0x18c0>
   128c8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   128cc:	tst	r0, #1
   128d0:	bne	12fd8 <__mempcpy_chk@plt+0x1fc4>
   128d4:	mov	r4, r1
   128d8:	b	126ac <__mempcpy_chk@plt+0x1698>
   128dc:	ldr	r1, [sp, #48]	; 0x30
   128e0:	mov	r9, #0
   128e4:	mov	r0, #92	; 0x5c
   128e8:	cmp	r1, #0
   128ec:	beq	12900 <__mempcpy_chk@plt+0x18ec>
   128f0:	mov	r4, #0
   128f4:	cmp	r9, #0
   128f8:	beq	12e8c <__mempcpy_chk@plt+0x1e78>
   128fc:	b	12ec8 <__mempcpy_chk@plt+0x1eb4>
   12900:	ldr	r1, [sp, #84]	; 0x54
   12904:	mov	r4, #0
   12908:	mov	r9, #0
   1290c:	tst	r1, #1
   12910:	bne	12950 <__mempcpy_chk@plt+0x193c>
   12914:	ldr	r0, [fp, #-88]	; 0xffffffa8
   12918:	cmp	r0, #0
   1291c:	mov	r0, r5
   12920:	beq	12944 <__mempcpy_chk@plt+0x1930>
   12924:	ldr	r1, [fp, #16]
   12928:	ubfx	r0, r5, #5, #3
   1292c:	mov	r2, #1
   12930:	ldr	r0, [r1, r0, lsl #2]
   12934:	and	r1, r5, #31
   12938:	tst	r0, r2, lsl r1
   1293c:	mov	r0, r5
   12940:	bne	12950 <__mempcpy_chk@plt+0x193c>
   12944:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12948:	cmp	r1, #0
   1294c:	beq	12e84 <__mempcpy_chk@plt+0x1e70>
   12950:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12954:	tst	r1, #1
   12958:	bne	12fb0 <__mempcpy_chk@plt+0x1f9c>
   1295c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12960:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12964:	cmp	r1, #2
   12968:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1296c:	movwne	r1, #1
   12970:	orr	r1, r1, r2
   12974:	tst	r1, #1
   12978:	beq	12984 <__mempcpy_chk@plt+0x1970>
   1297c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12980:	b	129c0 <__mempcpy_chk@plt+0x19ac>
   12984:	cmp	r8, sl
   12988:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1298c:	movcc	r1, #39	; 0x27
   12990:	strbcc	r1, [r6, r8]
   12994:	add	r1, r8, #1
   12998:	cmp	r1, sl
   1299c:	movcc	r2, #36	; 0x24
   129a0:	strbcc	r2, [r6, r1]
   129a4:	add	r1, r8, #2
   129a8:	add	r8, r8, #3
   129ac:	cmp	r1, sl
   129b0:	movcc	r2, #39	; 0x27
   129b4:	strbcc	r2, [r6, r1]
   129b8:	mov	r1, #1
   129bc:	str	r1, [fp, #-56]	; 0xffffffc8
   129c0:	cmp	r8, sl
   129c4:	movcc	r1, #92	; 0x5c
   129c8:	strbcc	r1, [r6, r8]
   129cc:	add	r8, r8, #1
   129d0:	cmp	r8, sl
   129d4:	and	r5, r5, r4
   129d8:	add	r7, r7, #1
   129dc:	strbcc	r0, [r6, r8]
   129e0:	add	r8, r8, #1
   129e4:	cmn	lr, #1
   129e8:	bne	123e4 <__mempcpy_chk@plt+0x13d0>
   129ec:	b	123f0 <__mempcpy_chk@plt+0x13dc>
   129f0:	ldr	r0, [sp, #36]	; 0x24
   129f4:	mov	r4, #0
   129f8:	mov	r9, #0
   129fc:	mov	r5, #0
   12a00:	cmp	r0, #0
   12a04:	beq	12914 <__mempcpy_chk@plt+0x1900>
   12a08:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12a0c:	add	r7, r7, #1
   12a10:	cmn	lr, #1
   12a14:	bne	123e4 <__mempcpy_chk@plt+0x13d0>
   12a18:	b	123f0 <__mempcpy_chk@plt+0x13dc>
   12a1c:	mov	r0, #0
   12a20:	cmn	lr, #1
   12a24:	str	r0, [fp, #-36]	; 0xffffffdc
   12a28:	str	r0, [fp, #-40]	; 0xffffffd8
   12a2c:	bne	12a40 <__mempcpy_chk@plt+0x1a2c>
   12a30:	mov	r0, ip
   12a34:	bl	10f30 <strlen@plt>
   12a38:	ldr	ip, [fp, #-84]	; 0xffffffac
   12a3c:	mov	lr, r0
   12a40:	add	r0, ip, r7
   12a44:	mov	r4, #1
   12a48:	mov	r6, #0
   12a4c:	str	lr, [sp, #28]
   12a50:	str	r0, [sp, #24]
   12a54:	sub	r0, fp, #40	; 0x28
   12a58:	mov	r3, r0
   12a5c:	str	r6, [sp, #44]	; 0x2c
   12a60:	add	r6, r6, r7
   12a64:	sub	r0, fp, #44	; 0x2c
   12a68:	add	r1, ip, r6
   12a6c:	sub	r2, lr, r6
   12a70:	bl	14c38 <__mempcpy_chk@plt+0x3c24>
   12a74:	cmp	r0, #0
   12a78:	beq	12f10 <__mempcpy_chk@plt+0x1efc>
   12a7c:	cmn	r0, #1
   12a80:	beq	12ed0 <__mempcpy_chk@plt+0x1ebc>
   12a84:	ldr	lr, [sp, #28]
   12a88:	cmn	r0, #2
   12a8c:	beq	12ed8 <__mempcpy_chk@plt+0x1ec4>
   12a90:	ldr	r2, [sp, #64]	; 0x40
   12a94:	cmp	r0, #2
   12a98:	mov	r1, #0
   12a9c:	movwcc	r1, #1
   12aa0:	eor	r2, r2, #1
   12aa4:	orrs	r1, r2, r1
   12aa8:	bne	12b68 <__mempcpy_chk@plt+0x1b54>
   12aac:	ldr	r1, [sp, #44]	; 0x2c
   12ab0:	ldr	r2, [sp, #24]
   12ab4:	add	r1, r2, r1
   12ab8:	mov	r2, #1
   12abc:	ldrb	r3, [r1, r2]
   12ac0:	sub	r3, r3, #91	; 0x5b
   12ac4:	cmp	r3, #33	; 0x21
   12ac8:	bhi	12b5c <__mempcpy_chk@plt+0x1b48>
   12acc:	add	r6, pc, #0
   12ad0:	ldr	pc, [r6, r3, lsl #2]
   12ad4:	ldrdeq	r2, [r1], -r0
   12ad8:	ldrdeq	r2, [r1], -r0
   12adc:	andeq	r2, r1, ip, asr fp
   12ae0:	ldrdeq	r2, [r1], -r0
   12ae4:	andeq	r2, r1, ip, asr fp
   12ae8:	ldrdeq	r2, [r1], -r0
   12aec:	andeq	r2, r1, ip, asr fp
   12af0:	andeq	r2, r1, ip, asr fp
   12af4:	andeq	r2, r1, ip, asr fp
   12af8:	andeq	r2, r1, ip, asr fp
   12afc:	andeq	r2, r1, ip, asr fp
   12b00:	andeq	r2, r1, ip, asr fp
   12b04:	andeq	r2, r1, ip, asr fp
   12b08:	andeq	r2, r1, ip, asr fp
   12b0c:	andeq	r2, r1, ip, asr fp
   12b10:	andeq	r2, r1, ip, asr fp
   12b14:	andeq	r2, r1, ip, asr fp
   12b18:	andeq	r2, r1, ip, asr fp
   12b1c:	andeq	r2, r1, ip, asr fp
   12b20:	andeq	r2, r1, ip, asr fp
   12b24:	andeq	r2, r1, ip, asr fp
   12b28:	andeq	r2, r1, ip, asr fp
   12b2c:	andeq	r2, r1, ip, asr fp
   12b30:	andeq	r2, r1, ip, asr fp
   12b34:	andeq	r2, r1, ip, asr fp
   12b38:	andeq	r2, r1, ip, asr fp
   12b3c:	andeq	r2, r1, ip, asr fp
   12b40:	andeq	r2, r1, ip, asr fp
   12b44:	andeq	r2, r1, ip, asr fp
   12b48:	andeq	r2, r1, ip, asr fp
   12b4c:	andeq	r2, r1, ip, asr fp
   12b50:	andeq	r2, r1, ip, asr fp
   12b54:	andeq	r2, r1, ip, asr fp
   12b58:	ldrdeq	r2, [r1], -r0
   12b5c:	add	r2, r2, #1
   12b60:	cmp	r2, r0
   12b64:	bcc	12abc <__mempcpy_chk@plt+0x1aa8>
   12b68:	ldr	r6, [sp, #44]	; 0x2c
   12b6c:	add	r6, r0, r6
   12b70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12b74:	bl	10e70 <iswprint@plt>
   12b78:	cmp	r0, #0
   12b7c:	movwne	r0, #1
   12b80:	and	r4, r4, r0
   12b84:	sub	r0, fp, #40	; 0x28
   12b88:	bl	10e1c <mbsinit@plt>
   12b8c:	ldr	lr, [sp, #28]
   12b90:	ldr	ip, [fp, #-84]	; 0xffffffac
   12b94:	sub	r3, fp, #40	; 0x28
   12b98:	cmp	r0, #0
   12b9c:	beq	12a5c <__mempcpy_chk@plt+0x1a48>
   12ba0:	b	12f18 <__mempcpy_chk@plt+0x1f04>
   12ba4:	ldr	r0, [sp, #32]
   12ba8:	cmp	r0, #0
   12bac:	beq	12c48 <__mempcpy_chk@plt+0x1c34>
   12bb0:	add	r0, r7, #2
   12bb4:	cmp	r0, lr
   12bb8:	bcs	12c48 <__mempcpy_chk@plt+0x1c34>
   12bbc:	add	r1, ip, r7
   12bc0:	ldrb	r1, [r1, #1]
   12bc4:	cmp	r1, #63	; 0x3f
   12bc8:	bne	12c48 <__mempcpy_chk@plt+0x1c34>
   12bcc:	ldrb	r5, [ip, r0]
   12bd0:	sub	r1, r5, #33	; 0x21
   12bd4:	cmp	r1, #29
   12bd8:	bhi	12c48 <__mempcpy_chk@plt+0x1c34>
   12bdc:	movw	r3, #20929	; 0x51c1
   12be0:	mov	r2, #1
   12be4:	movt	r3, #14336	; 0x3800
   12be8:	tst	r3, r2, lsl r1
   12bec:	beq	12c48 <__mempcpy_chk@plt+0x1c34>
   12bf0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12bf4:	tst	r1, #1
   12bf8:	bne	130f0 <__mempcpy_chk@plt+0x20dc>
   12bfc:	cmp	r8, sl
   12c00:	mov	r7, r0
   12c04:	mov	r4, #0
   12c08:	movcc	r1, #63	; 0x3f
   12c0c:	strbcc	r1, [r6, r8]
   12c10:	add	r1, r8, #1
   12c14:	cmp	r1, sl
   12c18:	movcc	r2, #34	; 0x22
   12c1c:	strbcc	r2, [r6, r1]
   12c20:	add	r1, r8, #2
   12c24:	cmp	r1, sl
   12c28:	movcc	r2, #34	; 0x22
   12c2c:	strbcc	r2, [r6, r1]
   12c30:	add	r1, r8, #3
   12c34:	add	r8, r8, #4
   12c38:	cmp	r1, sl
   12c3c:	movcc	r2, #63	; 0x3f
   12c40:	strbcc	r2, [r6, r1]
   12c44:	b	126ac <__mempcpy_chk@plt+0x1698>
   12c48:	mov	r5, #63	; 0x3f
   12c4c:	mov	r4, #0
   12c50:	b	126ac <__mempcpy_chk@plt+0x1698>
   12c54:	add	r1, r2, r7
   12c58:	ldr	lr, [sp, #28]
   12c5c:	mov	r3, #0
   12c60:	str	r1, [sp, #44]	; 0x2c
   12c64:	add	r1, r7, #1
   12c68:	ldr	r7, [fp, #-64]	; 0xffffffc0
   12c6c:	tst	r0, #1
   12c70:	bne	12d44 <__mempcpy_chk@plt+0x1d30>
   12c74:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12c78:	tst	r2, #1
   12c7c:	bne	13038 <__mempcpy_chk@plt+0x2024>
   12c80:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12c84:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12c88:	cmp	r7, #2
   12c8c:	movwne	r3, #1
   12c90:	orr	r3, r3, r2
   12c94:	tst	r3, #1
   12c98:	bne	12cd4 <__mempcpy_chk@plt+0x1cc0>
   12c9c:	cmp	r8, sl
   12ca0:	add	r3, r8, #1
   12ca4:	movcc	r2, #39	; 0x27
   12ca8:	strbcc	r2, [r6, r8]
   12cac:	cmp	r3, sl
   12cb0:	movcc	r2, #36	; 0x24
   12cb4:	strbcc	r2, [r6, r3]
   12cb8:	add	r3, r8, #2
   12cbc:	add	r8, r8, #3
   12cc0:	cmp	r3, sl
   12cc4:	movcc	r2, #39	; 0x27
   12cc8:	strbcc	r2, [r6, r3]
   12ccc:	mov	r2, #1
   12cd0:	str	r2, [fp, #-56]	; 0xffffffc8
   12cd4:	cmp	r8, sl
   12cd8:	movcc	r3, #92	; 0x5c
   12cdc:	strbcc	r3, [r6, r8]
   12ce0:	add	r3, r8, #1
   12ce4:	cmp	r3, sl
   12ce8:	andcc	r7, r5, #192	; 0xc0
   12cec:	movcc	r2, #48	; 0x30
   12cf0:	orrcc	r7, r2, r7, lsr #6
   12cf4:	strbcc	r7, [r6, r3]
   12cf8:	add	r3, r8, #2
   12cfc:	add	r8, r8, #3
   12d00:	cmp	r3, sl
   12d04:	lsrcc	r7, r5, #3
   12d08:	movcc	r2, #6
   12d0c:	bficc	r7, r2, #3, #29
   12d10:	mov	r2, #6
   12d14:	strbcc	r7, [r6, r3]
   12d18:	bfi	r5, r2, #3, #29
   12d1c:	mov	r3, #1
   12d20:	b	12d68 <__mempcpy_chk@plt+0x1d54>
   12d24:	cmp	r8, sl
   12d28:	ldr	r7, [fp, #-64]	; 0xffffffc0
   12d2c:	strbcc	r5, [r6, r8]
   12d30:	add	r8, r8, #1
   12d34:	ldrb	r5, [ip, r1]
   12d38:	add	r1, r1, #1
   12d3c:	tst	r0, #1
   12d40:	beq	12c74 <__mempcpy_chk@plt+0x1c60>
   12d44:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12d48:	tst	r2, #1
   12d4c:	beq	12d60 <__mempcpy_chk@plt+0x1d4c>
   12d50:	cmp	r8, sl
   12d54:	movcc	r7, #92	; 0x5c
   12d58:	strbcc	r7, [r6, r8]
   12d5c:	add	r8, r8, #1
   12d60:	mov	r2, #0
   12d64:	str	r2, [fp, #-52]	; 0xffffffcc
   12d68:	ldr	r2, [sp, #44]	; 0x2c
   12d6c:	and	r9, r3, #1
   12d70:	cmp	r2, r1
   12d74:	bls	12e74 <__mempcpy_chk@plt+0x1e60>
   12d78:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12d7c:	cmp	r9, #0
   12d80:	movwne	r9, #1
   12d84:	mvn	r7, r2
   12d88:	orr	r7, r7, r9
   12d8c:	tst	r7, #1
   12d90:	bne	12d24 <__mempcpy_chk@plt+0x1d10>
   12d94:	cmp	r8, sl
   12d98:	movcc	r7, #39	; 0x27
   12d9c:	strbcc	r7, [r6, r8]
   12da0:	add	r7, r8, #1
   12da4:	add	r8, r8, #2
   12da8:	cmp	r7, sl
   12dac:	movcc	r2, #39	; 0x27
   12db0:	strbcc	r2, [r6, r7]
   12db4:	mov	r2, #0
   12db8:	str	r2, [fp, #-56]	; 0xffffffc8
   12dbc:	b	12d24 <__mempcpy_chk@plt+0x1d10>
   12dc0:	cmp	r8, sl
   12dc4:	mov	r2, #1
   12dc8:	movcc	r0, #39	; 0x27
   12dcc:	strbcc	r0, [r6, r8]
   12dd0:	add	r0, r8, #1
   12dd4:	cmp	r0, sl
   12dd8:	movcc	r1, #36	; 0x24
   12ddc:	strbcc	r1, [r6, r0]
   12de0:	add	r0, r8, #2
   12de4:	cmp	r0, sl
   12de8:	movcc	r1, #39	; 0x27
   12dec:	strbcc	r1, [r6, r0]
   12df0:	add	r0, r8, #3
   12df4:	cmp	r0, sl
   12df8:	add	r8, r0, #1
   12dfc:	str	r2, [fp, #-56]	; 0xffffffc8
   12e00:	movcc	r1, #92	; 0x5c
   12e04:	strbcc	r1, [r6, r0]
   12e08:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12e0c:	cmp	r1, #2
   12e10:	beq	12e64 <__mempcpy_chk@plt+0x1e50>
   12e14:	add	r1, r7, #1
   12e18:	mov	r4, #0
   12e1c:	mov	r9, #1
   12e20:	mov	r5, #48	; 0x30
   12e24:	cmp	r1, lr
   12e28:	bcs	126ac <__mempcpy_chk@plt+0x1698>
   12e2c:	ldrb	r1, [ip, r1]
   12e30:	sub	r1, r1, #48	; 0x30
   12e34:	uxtb	r1, r1
   12e38:	cmp	r1, #9
   12e3c:	bhi	126ac <__mempcpy_chk@plt+0x1698>
   12e40:	cmp	r8, sl
   12e44:	movcc	r1, #48	; 0x30
   12e48:	strbcc	r1, [r6, r8]
   12e4c:	add	r1, r0, #2
   12e50:	add	r8, r0, #3
   12e54:	cmp	r1, sl
   12e58:	movcc	r2, #48	; 0x30
   12e5c:	strbcc	r2, [r6, r1]
   12e60:	b	126ac <__mempcpy_chk@plt+0x1698>
   12e64:	mov	r0, #48	; 0x30
   12e68:	mov	r9, #1
   12e6c:	mov	r4, #0
   12e70:	b	12944 <__mempcpy_chk@plt+0x1930>
   12e74:	cmp	r9, #0
   12e78:	sub	r7, r1, #1
   12e7c:	mov	r0, r5
   12e80:	movwne	r9, #1
   12e84:	cmp	r9, #0
   12e88:	bne	12ec8 <__mempcpy_chk@plt+0x1eb4>
   12e8c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12e90:	tst	r1, #1
   12e94:	beq	12ec8 <__mempcpy_chk@plt+0x1eb4>
   12e98:	cmp	r8, sl
   12e9c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12ea0:	movcc	r1, #39	; 0x27
   12ea4:	strbcc	r1, [r6, r8]
   12ea8:	add	r1, r8, #1
   12eac:	add	r8, r8, #2
   12eb0:	cmp	r1, sl
   12eb4:	movcc	r2, #39	; 0x27
   12eb8:	strbcc	r2, [r6, r1]
   12ebc:	mov	r1, #0
   12ec0:	str	r1, [fp, #-56]	; 0xffffffc8
   12ec4:	b	129d0 <__mempcpy_chk@plt+0x19bc>
   12ec8:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12ecc:	b	129d0 <__mempcpy_chk@plt+0x19bc>
   12ed0:	mov	r4, #0
   12ed4:	b	12f10 <__mempcpy_chk@plt+0x1efc>
   12ed8:	mov	r4, #0
   12edc:	cmp	lr, r6
   12ee0:	bls	12f10 <__mempcpy_chk@plt+0x1efc>
   12ee4:	ldr	ip, [fp, #-84]	; 0xffffffac
   12ee8:	ldr	r6, [sp, #44]	; 0x2c
   12eec:	ldr	r0, [sp, #24]
   12ef0:	ldrb	r0, [r0, r6]
   12ef4:	cmp	r0, #0
   12ef8:	beq	12f18 <__mempcpy_chk@plt+0x1f04>
   12efc:	add	r6, r6, #1
   12f00:	add	r0, r7, r6
   12f04:	cmp	r0, lr
   12f08:	bcc	12eec <__mempcpy_chk@plt+0x1ed8>
   12f0c:	b	12f18 <__mempcpy_chk@plt+0x1f04>
   12f10:	ldr	ip, [fp, #-84]	; 0xffffffac
   12f14:	ldr	r6, [sp, #44]	; 0x2c
   12f18:	mov	r1, r6
   12f1c:	ldr	r6, [sp, #80]	; 0x50
   12f20:	b	12878 <__mempcpy_chk@plt+0x1864>
   12f24:	mov	lr, r7
   12f28:	b	12f30 <__mempcpy_chk@plt+0x1f1c>
   12f2c:	mvn	lr, #0
   12f30:	ldr	r7, [fp, #-64]	; 0xffffffc0
   12f34:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12f38:	eor	r0, r7, #2
   12f3c:	orr	r0, r0, r8
   12f40:	clz	r0, r0
   12f44:	lsr	r0, r0, #5
   12f48:	tst	r1, r0
   12f4c:	bne	12fd8 <__mempcpy_chk@plt+0x1fc4>
   12f50:	mov	r0, r1
   12f54:	ldr	r1, [fp, #-80]	; 0xffffffb0
   12f58:	cmp	r7, #2
   12f5c:	movwne	r1, #1
   12f60:	orr	r0, r0, r1
   12f64:	tst	r0, #1
   12f68:	ldreq	r0, [sp, #60]	; 0x3c
   12f6c:	eoreq	r0, r0, #1
   12f70:	tsteq	r0, #1
   12f74:	bne	13084 <__mempcpy_chk@plt+0x2070>
   12f78:	mov	r9, lr
   12f7c:	tst	r5, #1
   12f80:	bne	13040 <__mempcpy_chk@plt+0x202c>
   12f84:	ldr	r6, [sp, #56]	; 0x38
   12f88:	mov	r4, #0
   12f8c:	cmp	r6, #0
   12f90:	beq	1307c <__mempcpy_chk@plt+0x2068>
   12f94:	ldr	r0, [sp, #84]	; 0x54
   12f98:	mov	r1, #0
   12f9c:	cmp	sl, #0
   12fa0:	mov	r5, #0
   12fa4:	str	r1, [fp, #-72]	; 0xffffffb8
   12fa8:	beq	12178 <__mempcpy_chk@plt+0x1164>
   12fac:	b	13084 <__mempcpy_chk@plt+0x2070>
   12fb0:	ldr	r7, [fp, #-64]	; 0xffffffc0
   12fb4:	ldr	r2, [sp, #84]	; 0x54
   12fb8:	b	12fe0 <__mempcpy_chk@plt+0x1fcc>
   12fbc:	ldr	ip, [fp, #-84]	; 0xffffffac
   12fc0:	mov	r2, #1
   12fc4:	mov	lr, r4
   12fc8:	ldr	r7, [fp, #-64]	; 0xffffffc0
   12fcc:	b	12fe0 <__mempcpy_chk@plt+0x1fcc>
   12fd0:	ldr	r6, [sp, #80]	; 0x50
   12fd4:	ldr	ip, [fp, #-84]	; 0xffffffac
   12fd8:	ldr	r2, [sp, #84]	; 0x54
   12fdc:	mov	r7, #2
   12fe0:	mov	r0, #0
   12fe4:	ldr	r1, [fp, #12]
   12fe8:	tst	r2, #1
   12fec:	mov	r2, r7
   12ff0:	mov	r3, lr
   12ff4:	str	r0, [sp, #8]
   12ff8:	ldr	r0, [sp, #72]	; 0x48
   12ffc:	movwne	r2, #4
   13000:	cmp	r7, #2
   13004:	movne	r2, r7
   13008:	str	r2, [sp]
   1300c:	mov	r2, ip
   13010:	bic	r1, r1, #2
   13014:	str	r0, [sp, #12]
   13018:	ldr	r0, [sp, #76]	; 0x4c
   1301c:	str	r1, [sp, #4]
   13020:	mov	r1, sl
   13024:	str	r0, [sp, #16]
   13028:	mov	r0, r6
   1302c:	bl	120f8 <__mempcpy_chk@plt+0x10e4>
   13030:	mov	r8, r0
   13034:	b	130dc <__mempcpy_chk@plt+0x20c8>
   13038:	ldr	r2, [sp, #84]	; 0x54
   1303c:	b	12fe0 <__mempcpy_chk@plt+0x1fcc>
   13040:	mov	r0, #5
   13044:	ldr	r1, [sp, #56]	; 0x38
   13048:	ldr	r2, [fp, #-84]	; 0xffffffac
   1304c:	mov	r3, r9
   13050:	str	r0, [sp]
   13054:	ldr	r0, [fp, #12]
   13058:	str	r0, [sp, #4]
   1305c:	ldr	r0, [fp, #16]
   13060:	str	r0, [sp, #8]
   13064:	ldr	r0, [sp, #72]	; 0x48
   13068:	str	r0, [sp, #12]
   1306c:	ldr	r0, [sp, #76]	; 0x4c
   13070:	str	r0, [sp, #16]
   13074:	ldr	r0, [sp, #80]	; 0x50
   13078:	b	1302c <__mempcpy_chk@plt+0x2018>
   1307c:	mov	r0, #0
   13080:	str	r0, [fp, #-72]	; 0xffffffb8
   13084:	ldr	r1, [sp, #92]	; 0x5c
   13088:	cmp	r1, #0
   1308c:	beq	130cc <__mempcpy_chk@plt+0x20b8>
   13090:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13094:	ldr	r2, [sp, #80]	; 0x50
   13098:	tst	r0, #1
   1309c:	bne	130d0 <__mempcpy_chk@plt+0x20bc>
   130a0:	ldrb	r0, [r1]
   130a4:	cmp	r0, #0
   130a8:	beq	130d0 <__mempcpy_chk@plt+0x20bc>
   130ac:	add	r1, r1, #1
   130b0:	cmp	r8, sl
   130b4:	strbcc	r0, [r2, r8]
   130b8:	add	r8, r8, #1
   130bc:	ldrb	r0, [r1], #1
   130c0:	cmp	r0, #0
   130c4:	bne	130b0 <__mempcpy_chk@plt+0x209c>
   130c8:	b	130d0 <__mempcpy_chk@plt+0x20bc>
   130cc:	ldr	r2, [sp, #80]	; 0x50
   130d0:	cmp	r8, sl
   130d4:	movcc	r0, #0
   130d8:	strbcc	r0, [r2, r8]
   130dc:	mov	r0, r8
   130e0:	sub	sp, fp, #28
   130e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130e8:	mov	r2, #1
   130ec:	b	12fc8 <__mempcpy_chk@plt+0x1fb4>
   130f0:	ldr	r2, [sp, #84]	; 0x54
   130f4:	mov	r7, #5
   130f8:	b	12fe0 <__mempcpy_chk@plt+0x1fcc>
   130fc:	bl	10ffc <abort@plt>
   13100:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13104:	add	fp, sp, #28
   13108:	sub	sp, sp, #28
   1310c:	movw	r5, #24928	; 0x6160
   13110:	cmp	r2, #0
   13114:	mov	r4, r1
   13118:	mov	r7, r0
   1311c:	str	r0, [sp, #20]
   13120:	movt	r5, #2
   13124:	movne	r5, r2
   13128:	bl	10f3c <__errno_location@plt>
   1312c:	mov	sl, r0
   13130:	ldm	r5, {r0, r1}
   13134:	ldr	r2, [r5, #40]	; 0x28
   13138:	ldr	r3, [r5, #44]	; 0x2c
   1313c:	add	r9, r5, #8
   13140:	ldr	r6, [sl]
   13144:	orr	r8, r1, #1
   13148:	mov	r1, #0
   1314c:	str	r6, [sp, #24]
   13150:	stm	sp, {r0, r8, r9}
   13154:	str	r2, [sp, #12]
   13158:	str	r3, [sp, #16]
   1315c:	mov	r0, #0
   13160:	mov	r2, r7
   13164:	mov	r3, r4
   13168:	mov	r6, r4
   1316c:	bl	120f8 <__mempcpy_chk@plt+0x10e4>
   13170:	add	r7, r0, #1
   13174:	mov	r0, r7
   13178:	bl	14310 <__mempcpy_chk@plt+0x32fc>
   1317c:	mov	r4, r0
   13180:	ldr	r0, [r5]
   13184:	ldr	r2, [r5, #44]	; 0x2c
   13188:	ldr	r1, [r5, #40]	; 0x28
   1318c:	mov	r3, r6
   13190:	stm	sp, {r0, r8, r9}
   13194:	str	r2, [sp, #16]
   13198:	str	r1, [sp, #12]
   1319c:	mov	r0, r4
   131a0:	mov	r1, r7
   131a4:	ldr	r2, [sp, #20]
   131a8:	bl	120f8 <__mempcpy_chk@plt+0x10e4>
   131ac:	ldr	r0, [sp, #24]
   131b0:	str	r0, [sl]
   131b4:	mov	r0, r4
   131b8:	sub	sp, fp, #28
   131bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   131c4:	add	fp, sp, #28
   131c8:	sub	sp, sp, #36	; 0x24
   131cc:	movw	r8, #24928	; 0x6160
   131d0:	cmp	r3, #0
   131d4:	mov	r4, r2
   131d8:	str	r2, [sp, #24]
   131dc:	mov	r5, r1
   131e0:	mov	r6, r0
   131e4:	str	r0, [sp, #20]
   131e8:	movt	r8, #2
   131ec:	movne	r8, r3
   131f0:	bl	10f3c <__errno_location@plt>
   131f4:	str	r0, [sp, #28]
   131f8:	cmp	r4, #0
   131fc:	add	sl, r8, #8
   13200:	ldm	r8, {r3, r9}
   13204:	ldr	r7, [r0]
   13208:	ldr	r1, [r8, #40]	; 0x28
   1320c:	ldr	r2, [r8, #44]	; 0x2c
   13210:	mov	r0, #0
   13214:	orreq	r9, r9, #1
   13218:	str	r7, [sp, #32]
   1321c:	mov	r7, r5
   13220:	stm	sp, {r3, r9, sl}
   13224:	str	r1, [sp, #12]
   13228:	str	r2, [sp, #16]
   1322c:	mov	r1, #0
   13230:	mov	r2, r6
   13234:	mov	r3, r5
   13238:	bl	120f8 <__mempcpy_chk@plt+0x10e4>
   1323c:	add	r4, r0, #1
   13240:	mov	r5, r0
   13244:	mov	r0, r4
   13248:	bl	14310 <__mempcpy_chk@plt+0x32fc>
   1324c:	mov	r6, r0
   13250:	ldr	r0, [r8]
   13254:	ldr	r2, [r8, #44]	; 0x2c
   13258:	ldr	r1, [r8, #40]	; 0x28
   1325c:	mov	r3, r7
   13260:	stm	sp, {r0, r9, sl}
   13264:	str	r2, [sp, #16]
   13268:	str	r1, [sp, #12]
   1326c:	mov	r0, r6
   13270:	mov	r1, r4
   13274:	ldr	r2, [sp, #20]
   13278:	bl	120f8 <__mempcpy_chk@plt+0x10e4>
   1327c:	ldr	r0, [sp, #24]
   13280:	ldr	r1, [sp, #32]
   13284:	ldr	r2, [sp, #28]
   13288:	cmp	r0, #0
   1328c:	str	r1, [r2]
   13290:	strne	r5, [r0]
   13294:	mov	r0, r6
   13298:	sub	sp, fp, #28
   1329c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   132a4:	add	fp, sp, #24
   132a8:	movw	r5, #24820	; 0x60f4
   132ac:	movw	r8, #24816	; 0x60f0
   132b0:	movt	r5, #2
   132b4:	movt	r8, #2
   132b8:	ldr	r0, [r5]
   132bc:	ldr	r4, [r8]
   132c0:	cmp	r0, #2
   132c4:	blt	132f0 <__mempcpy_chk@plt+0x22dc>
   132c8:	add	r7, r4, #12
   132cc:	mov	r6, #0
   132d0:	ldr	r0, [r7, r6, lsl #3]
   132d4:	bl	11d1c <__mempcpy_chk@plt+0xd08>
   132d8:	ldr	r1, [r5]
   132dc:	add	r2, r6, #2
   132e0:	add	r0, r6, #1
   132e4:	mov	r6, r0
   132e8:	cmp	r2, r1
   132ec:	blt	132d0 <__mempcpy_chk@plt+0x22bc>
   132f0:	ldr	r0, [r4, #4]
   132f4:	movw	r7, #24976	; 0x6190
   132f8:	movt	r7, #2
   132fc:	cmp	r0, r7
   13300:	beq	13318 <__mempcpy_chk@plt+0x2304>
   13304:	bl	11d1c <__mempcpy_chk@plt+0xd08>
   13308:	movw	r0, #24824	; 0x60f8
   1330c:	mov	r6, #256	; 0x100
   13310:	movt	r0, #2
   13314:	strd	r6, [r0]
   13318:	movw	r6, #24824	; 0x60f8
   1331c:	movt	r6, #2
   13320:	cmp	r4, r6
   13324:	beq	13334 <__mempcpy_chk@plt+0x2320>
   13328:	mov	r0, r4
   1332c:	bl	11d1c <__mempcpy_chk@plt+0xd08>
   13330:	str	r6, [r8]
   13334:	mov	r0, #1
   13338:	str	r0, [r5]
   1333c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13340:	movw	r3, #24928	; 0x6160
   13344:	mvn	r2, #0
   13348:	movt	r3, #2
   1334c:	b	13350 <__mempcpy_chk@plt+0x233c>
   13350:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13354:	add	fp, sp, #28
   13358:	sub	sp, sp, #44	; 0x2c
   1335c:	mov	r7, r3
   13360:	str	r2, [sp, #36]	; 0x24
   13364:	str	r1, [sp, #32]
   13368:	mov	r5, r0
   1336c:	bl	10f3c <__errno_location@plt>
   13370:	cmp	r5, #0
   13374:	blt	134e0 <__mempcpy_chk@plt+0x24cc>
   13378:	cmn	r5, #-2147483647	; 0x80000001
   1337c:	beq	134e0 <__mempcpy_chk@plt+0x24cc>
   13380:	movw	r8, #24820	; 0x60f4
   13384:	movw	r4, #24816	; 0x60f0
   13388:	str	r0, [sp, #28]
   1338c:	ldr	r0, [r0]
   13390:	movt	r8, #2
   13394:	movt	r4, #2
   13398:	ldr	r1, [r8]
   1339c:	ldr	r6, [r4]
   133a0:	str	r0, [sp, #24]
   133a4:	cmp	r1, r5
   133a8:	ble	133b4 <__mempcpy_chk@plt+0x23a0>
   133ac:	mov	sl, r6
   133b0:	b	1341c <__mempcpy_chk@plt+0x2408>
   133b4:	movw	r9, #24824	; 0x60f8
   133b8:	mov	r0, #8
   133bc:	add	r2, r5, #1
   133c0:	str	r1, [fp, #-32]	; 0xffffffe0
   133c4:	mvn	r3, #-2147483648	; 0x80000000
   133c8:	movt	r9, #2
   133cc:	str	r0, [sp]
   133d0:	sub	r2, r2, r1
   133d4:	sub	r1, fp, #32
   133d8:	subs	r0, r6, r9
   133dc:	movne	r0, r6
   133e0:	bl	14510 <__mempcpy_chk@plt+0x34fc>
   133e4:	cmp	r6, r9
   133e8:	mov	sl, r0
   133ec:	str	r0, [r4]
   133f0:	ldrdeq	r0, [r9]
   133f4:	stmeq	sl, {r0, r1}
   133f8:	ldr	r1, [r8]
   133fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13400:	add	r0, sl, r1, lsl #3
   13404:	sub	r1, r2, r1
   13408:	lsl	r2, r1, #3
   1340c:	mov	r1, #0
   13410:	bl	10f54 <memset@plt>
   13414:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13418:	str	r0, [r8]
   1341c:	mov	r9, sl
   13420:	ldr	r6, [r9, r5, lsl #3]!
   13424:	ldr	r4, [r9, #4]!
   13428:	ldm	r7, {r0, r1}
   1342c:	ldr	r2, [r7, #40]	; 0x28
   13430:	ldr	r3, [r7, #44]	; 0x2c
   13434:	orr	r8, r1, #1
   13438:	add	r1, r7, #8
   1343c:	stm	sp, {r0, r8}
   13440:	add	r0, sp, #8
   13444:	str	r1, [sp, #20]
   13448:	stm	r0, {r1, r2, r3}
   1344c:	mov	r0, r4
   13450:	mov	r1, r6
   13454:	ldr	r2, [sp, #32]
   13458:	ldr	r3, [sp, #36]	; 0x24
   1345c:	bl	120f8 <__mempcpy_chk@plt+0x10e4>
   13460:	cmp	r6, r0
   13464:	bhi	134c8 <__mempcpy_chk@plt+0x24b4>
   13468:	add	r6, r0, #1
   1346c:	movw	r0, #24976	; 0x6190
   13470:	movt	r0, #2
   13474:	str	r6, [sl, r5, lsl #3]
   13478:	cmp	r4, r0
   1347c:	beq	13488 <__mempcpy_chk@plt+0x2474>
   13480:	mov	r0, r4
   13484:	bl	11d1c <__mempcpy_chk@plt+0xd08>
   13488:	mov	r0, r6
   1348c:	bl	14310 <__mempcpy_chk@plt+0x32fc>
   13490:	str	r0, [r9]
   13494:	mov	r4, r0
   13498:	add	r3, sp, #8
   1349c:	ldr	r0, [r7]
   134a0:	ldr	r1, [r7, #40]	; 0x28
   134a4:	ldr	r2, [r7, #44]	; 0x2c
   134a8:	stm	sp, {r0, r8}
   134ac:	ldr	r0, [sp, #20]
   134b0:	stm	r3, {r0, r1, r2}
   134b4:	mov	r0, r4
   134b8:	mov	r1, r6
   134bc:	ldr	r2, [sp, #32]
   134c0:	ldr	r3, [sp, #36]	; 0x24
   134c4:	bl	120f8 <__mempcpy_chk@plt+0x10e4>
   134c8:	ldr	r0, [sp, #28]
   134cc:	ldr	r1, [sp, #24]
   134d0:	str	r1, [r0]
   134d4:	mov	r0, r4
   134d8:	sub	sp, fp, #28
   134dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134e0:	bl	10ffc <abort@plt>
   134e4:	movw	r3, #24928	; 0x6160
   134e8:	movt	r3, #2
   134ec:	b	13350 <__mempcpy_chk@plt+0x233c>
   134f0:	movw	r3, #24928	; 0x6160
   134f4:	mov	r1, r0
   134f8:	mov	r0, #0
   134fc:	mvn	r2, #0
   13500:	movt	r3, #2
   13504:	b	13350 <__mempcpy_chk@plt+0x233c>
   13508:	movw	r3, #24928	; 0x6160
   1350c:	mov	r2, r1
   13510:	mov	r1, r0
   13514:	mov	r0, #0
   13518:	movt	r3, #2
   1351c:	b	13350 <__mempcpy_chk@plt+0x233c>
   13520:	push	{fp, lr}
   13524:	mov	fp, sp
   13528:	sub	sp, sp, #48	; 0x30
   1352c:	vmov.i32	q8, #0	; 0x00000000
   13530:	mov	ip, #32
   13534:	mov	r3, sp
   13538:	mov	lr, r2
   1353c:	cmp	r1, #10
   13540:	add	r2, r3, #16
   13544:	vst1.64	{d16-d17}, [r3], ip
   13548:	vst1.64	{d16-d17}, [r3]
   1354c:	vst1.64	{d16-d17}, [r2]
   13550:	beq	13570 <__mempcpy_chk@plt+0x255c>
   13554:	str	r1, [sp]
   13558:	mov	r3, sp
   1355c:	mov	r1, lr
   13560:	mvn	r2, #0
   13564:	bl	13350 <__mempcpy_chk@plt+0x233c>
   13568:	mov	sp, fp
   1356c:	pop	{fp, pc}
   13570:	bl	10ffc <abort@plt>
   13574:	push	{r4, sl, fp, lr}
   13578:	add	fp, sp, #8
   1357c:	sub	sp, sp, #48	; 0x30
   13580:	mov	ip, r3
   13584:	mov	r3, sp
   13588:	vmov.i32	q8, #0	; 0x00000000
   1358c:	mov	lr, #32
   13590:	cmp	r1, #10
   13594:	add	r4, r3, #16
   13598:	vst1.64	{d16-d17}, [r3], lr
   1359c:	vst1.64	{d16-d17}, [r3]
   135a0:	vst1.64	{d16-d17}, [r4]
   135a4:	beq	135c4 <__mempcpy_chk@plt+0x25b0>
   135a8:	str	r1, [sp]
   135ac:	mov	r1, r2
   135b0:	mov	r3, sp
   135b4:	mov	r2, ip
   135b8:	bl	13350 <__mempcpy_chk@plt+0x233c>
   135bc:	sub	sp, fp, #8
   135c0:	pop	{r4, sl, fp, pc}
   135c4:	bl	10ffc <abort@plt>
   135c8:	push	{fp, lr}
   135cc:	mov	fp, sp
   135d0:	sub	sp, sp, #48	; 0x30
   135d4:	mov	r3, sp
   135d8:	vmov.i32	q8, #0	; 0x00000000
   135dc:	mov	ip, #32
   135e0:	cmp	r0, #10
   135e4:	add	r2, r3, #16
   135e8:	vst1.64	{d16-d17}, [r3], ip
   135ec:	vst1.64	{d16-d17}, [r3]
   135f0:	vst1.64	{d16-d17}, [r2]
   135f4:	beq	13614 <__mempcpy_chk@plt+0x2600>
   135f8:	str	r0, [sp]
   135fc:	mov	r3, sp
   13600:	mov	r0, #0
   13604:	mvn	r2, #0
   13608:	bl	13350 <__mempcpy_chk@plt+0x233c>
   1360c:	mov	sp, fp
   13610:	pop	{fp, pc}
   13614:	bl	10ffc <abort@plt>
   13618:	push	{fp, lr}
   1361c:	mov	fp, sp
   13620:	sub	sp, sp, #48	; 0x30
   13624:	mov	r3, sp
   13628:	vmov.i32	q8, #0	; 0x00000000
   1362c:	mov	ip, #32
   13630:	cmp	r0, #10
   13634:	add	lr, r3, #16
   13638:	vst1.64	{d16-d17}, [r3], ip
   1363c:	vst1.64	{d16-d17}, [r3]
   13640:	vst1.64	{d16-d17}, [lr]
   13644:	beq	13660 <__mempcpy_chk@plt+0x264c>
   13648:	str	r0, [sp]
   1364c:	mov	r3, sp
   13650:	mov	r0, #0
   13654:	bl	13350 <__mempcpy_chk@plt+0x233c>
   13658:	mov	sp, fp
   1365c:	pop	{fp, pc}
   13660:	bl	10ffc <abort@plt>
   13664:	push	{r4, sl, fp, lr}
   13668:	add	fp, sp, #8
   1366c:	sub	sp, sp, #48	; 0x30
   13670:	mov	lr, r0
   13674:	movw	r0, #24928	; 0x6160
   13678:	mov	r3, #32
   1367c:	mov	ip, r1
   13680:	mov	r4, #1
   13684:	movt	r0, #2
   13688:	add	r1, r0, #16
   1368c:	vld1.64	{d16-d17}, [r0], r3
   13690:	mov	r3, sp
   13694:	vld1.64	{d18-d19}, [r1]
   13698:	add	r1, r3, #16
   1369c:	vld1.64	{d20-d21}, [r0]
   136a0:	add	r0, r3, #32
   136a4:	vst1.64	{d18-d19}, [r1]
   136a8:	mov	r1, r3
   136ac:	vst1.64	{d20-d21}, [r0]
   136b0:	mov	r0, #28
   136b4:	and	r0, r0, r2, lsr #3
   136b8:	and	r2, r2, #31
   136bc:	vst1.64	{d16-d17}, [r1], r0
   136c0:	ldr	r0, [r1, #8]
   136c4:	bic	r4, r4, r0, lsr r2
   136c8:	eor	r0, r0, r4, lsl r2
   136cc:	mov	r2, ip
   136d0:	str	r0, [r1, #8]
   136d4:	mov	r0, #0
   136d8:	mov	r1, lr
   136dc:	bl	13350 <__mempcpy_chk@plt+0x233c>
   136e0:	sub	sp, fp, #8
   136e4:	pop	{r4, sl, fp, pc}
   136e8:	push	{fp, lr}
   136ec:	mov	fp, sp
   136f0:	sub	sp, sp, #48	; 0x30
   136f4:	mov	ip, r0
   136f8:	movw	r0, #24928	; 0x6160
   136fc:	mov	r3, #32
   13700:	movt	r0, #2
   13704:	add	r2, r0, #16
   13708:	vld1.64	{d16-d17}, [r0], r3
   1370c:	mov	r3, sp
   13710:	vld1.64	{d18-d19}, [r2]
   13714:	add	r2, r3, #16
   13718:	vld1.64	{d20-d21}, [r0]
   1371c:	add	r0, r3, #32
   13720:	vst1.64	{d18-d19}, [r2]
   13724:	mov	r2, r3
   13728:	vst1.64	{d20-d21}, [r0]
   1372c:	mov	r0, #28
   13730:	and	r0, r0, r1, lsr #3
   13734:	and	r1, r1, #31
   13738:	vst1.64	{d16-d17}, [r2], r0
   1373c:	mov	r0, #1
   13740:	ldr	lr, [r2, #8]
   13744:	bic	r0, r0, lr, lsr r1
   13748:	eor	r0, lr, r0, lsl r1
   1374c:	mov	r1, ip
   13750:	str	r0, [r2, #8]
   13754:	mov	r0, #0
   13758:	mvn	r2, #0
   1375c:	bl	13350 <__mempcpy_chk@plt+0x233c>
   13760:	mov	sp, fp
   13764:	pop	{fp, pc}
   13768:	push	{fp, lr}
   1376c:	mov	fp, sp
   13770:	sub	sp, sp, #48	; 0x30
   13774:	movw	r2, #24928	; 0x6160
   13778:	mov	r3, #32
   1377c:	mov	r1, r0
   13780:	movt	r2, #2
   13784:	add	r0, r2, #16
   13788:	vld1.64	{d16-d17}, [r2], r3
   1378c:	mov	r3, sp
   13790:	vld1.64	{d18-d19}, [r0]
   13794:	add	r0, r3, #16
   13798:	vld1.64	{d20-d21}, [r2]
   1379c:	mov	r2, r3
   137a0:	vst1.64	{d18-d19}, [r0]
   137a4:	add	r0, r3, #32
   137a8:	vst1.64	{d20-d21}, [r0]
   137ac:	mov	r0, #12
   137b0:	vst1.64	{d16-d17}, [r2], r0
   137b4:	ldr	r0, [r2]
   137b8:	orr	r0, r0, #67108864	; 0x4000000
   137bc:	str	r0, [r2]
   137c0:	mov	r0, #0
   137c4:	mvn	r2, #0
   137c8:	bl	13350 <__mempcpy_chk@plt+0x233c>
   137cc:	mov	sp, fp
   137d0:	pop	{fp, pc}
   137d4:	push	{fp, lr}
   137d8:	mov	fp, sp
   137dc:	sub	sp, sp, #48	; 0x30
   137e0:	mov	ip, r1
   137e4:	mov	r1, r0
   137e8:	movw	r0, #24928	; 0x6160
   137ec:	mov	r3, #32
   137f0:	movt	r0, #2
   137f4:	add	r2, r0, #16
   137f8:	vld1.64	{d16-d17}, [r0], r3
   137fc:	mov	r3, sp
   13800:	vld1.64	{d18-d19}, [r2]
   13804:	add	r2, r3, #16
   13808:	vld1.64	{d20-d21}, [r0]
   1380c:	add	r0, r3, #32
   13810:	vst1.64	{d18-d19}, [r2]
   13814:	mov	r2, r3
   13818:	vst1.64	{d20-d21}, [r0]
   1381c:	mov	r0, #12
   13820:	vst1.64	{d16-d17}, [r2], r0
   13824:	ldr	r0, [r2]
   13828:	orr	r0, r0, #67108864	; 0x4000000
   1382c:	str	r0, [r2]
   13830:	mov	r0, #0
   13834:	mov	r2, ip
   13838:	bl	13350 <__mempcpy_chk@plt+0x233c>
   1383c:	mov	sp, fp
   13840:	pop	{fp, pc}
   13844:	push	{r4, sl, fp, lr}
   13848:	add	fp, sp, #8
   1384c:	sub	sp, sp, #96	; 0x60
   13850:	mov	ip, r2
   13854:	mov	r2, sp
   13858:	vmov.i32	q8, #0	; 0x00000000
   1385c:	mov	r4, #28
   13860:	cmp	r1, #10
   13864:	mov	r3, r2
   13868:	add	lr, r2, #16
   1386c:	vst1.64	{d16-d17}, [r3], r4
   13870:	vst1.64	{d16-d17}, [lr]
   13874:	vst1.32	{d16-d17}, [r3]
   13878:	beq	138c8 <__mempcpy_chk@plt+0x28b4>
   1387c:	vld1.64	{d16-d17}, [r2], r4
   13880:	vld1.64	{d18-d19}, [lr]
   13884:	add	r3, sp, #48	; 0x30
   13888:	add	r4, r3, #4
   1388c:	vld1.32	{d20-d21}, [r2]
   13890:	add	r2, r3, #20
   13894:	vst1.32	{d16-d17}, [r4]
   13898:	vst1.32	{d18-d19}, [r2]
   1389c:	add	r2, r3, #32
   138a0:	vst1.32	{d20-d21}, [r2]
   138a4:	str	r1, [sp, #48]	; 0x30
   138a8:	mvn	r2, #0
   138ac:	ldr	r1, [sp, #60]	; 0x3c
   138b0:	orr	r1, r1, #67108864	; 0x4000000
   138b4:	str	r1, [sp, #60]	; 0x3c
   138b8:	mov	r1, ip
   138bc:	bl	13350 <__mempcpy_chk@plt+0x233c>
   138c0:	sub	sp, fp, #8
   138c4:	pop	{r4, sl, fp, pc}
   138c8:	bl	10ffc <abort@plt>
   138cc:	push	{r4, r5, fp, lr}
   138d0:	add	fp, sp, #8
   138d4:	sub	sp, sp, #48	; 0x30
   138d8:	mov	ip, r3
   138dc:	movw	r3, #24928	; 0x6160
   138e0:	mov	lr, #32
   138e4:	cmp	r1, #0
   138e8:	mov	r5, sp
   138ec:	movt	r3, #2
   138f0:	cmpne	r2, #0
   138f4:	add	r4, r3, #16
   138f8:	vld1.64	{d16-d17}, [r3], lr
   138fc:	vld1.64	{d18-d19}, [r4]
   13900:	add	r4, r5, #16
   13904:	vld1.64	{d20-d21}, [r3]
   13908:	vst1.64	{d16-d17}, [r5], lr
   1390c:	mov	r3, #10
   13910:	vst1.64	{d18-d19}, [r4]
   13914:	vst1.64	{d20-d21}, [r5]
   13918:	str	r3, [sp]
   1391c:	bne	13924 <__mempcpy_chk@plt+0x2910>
   13920:	bl	10ffc <abort@plt>
   13924:	str	r2, [sp, #44]	; 0x2c
   13928:	str	r1, [sp, #40]	; 0x28
   1392c:	mov	r3, sp
   13930:	mov	r1, ip
   13934:	mvn	r2, #0
   13938:	bl	13350 <__mempcpy_chk@plt+0x233c>
   1393c:	sub	sp, fp, #8
   13940:	pop	{r4, r5, fp, pc}
   13944:	push	{r4, r5, fp, lr}
   13948:	add	fp, sp, #8
   1394c:	sub	sp, sp, #48	; 0x30
   13950:	mov	lr, r3
   13954:	movw	r3, #24928	; 0x6160
   13958:	mov	ip, #32
   1395c:	cmp	r1, #0
   13960:	mov	r5, sp
   13964:	movt	r3, #2
   13968:	cmpne	r2, #0
   1396c:	add	r4, r3, #16
   13970:	vld1.64	{d16-d17}, [r3], ip
   13974:	vld1.64	{d18-d19}, [r4]
   13978:	add	r4, r5, #16
   1397c:	vld1.64	{d20-d21}, [r3]
   13980:	vst1.64	{d16-d17}, [r5], ip
   13984:	mov	r3, #10
   13988:	vst1.64	{d18-d19}, [r4]
   1398c:	vst1.64	{d20-d21}, [r5]
   13990:	str	r3, [sp]
   13994:	bne	1399c <__mempcpy_chk@plt+0x2988>
   13998:	bl	10ffc <abort@plt>
   1399c:	ldr	ip, [fp, #8]
   139a0:	str	r2, [sp, #44]	; 0x2c
   139a4:	str	r1, [sp, #40]	; 0x28
   139a8:	mov	r3, sp
   139ac:	mov	r1, lr
   139b0:	mov	r2, ip
   139b4:	bl	13350 <__mempcpy_chk@plt+0x233c>
   139b8:	sub	sp, fp, #8
   139bc:	pop	{r4, r5, fp, pc}
   139c0:	push	{r4, sl, fp, lr}
   139c4:	add	fp, sp, #8
   139c8:	sub	sp, sp, #48	; 0x30
   139cc:	mov	ip, r2
   139d0:	movw	r2, #24928	; 0x6160
   139d4:	mov	lr, #32
   139d8:	cmp	r0, #0
   139dc:	mov	r4, sp
   139e0:	movt	r2, #2
   139e4:	cmpne	r1, #0
   139e8:	add	r3, r2, #16
   139ec:	vld1.64	{d16-d17}, [r2], lr
   139f0:	vld1.64	{d18-d19}, [r3]
   139f4:	add	r3, r4, #16
   139f8:	vld1.64	{d20-d21}, [r2]
   139fc:	vst1.64	{d16-d17}, [r4], lr
   13a00:	mov	r2, #10
   13a04:	vst1.64	{d18-d19}, [r3]
   13a08:	vst1.64	{d20-d21}, [r4]
   13a0c:	str	r2, [sp]
   13a10:	bne	13a18 <__mempcpy_chk@plt+0x2a04>
   13a14:	bl	10ffc <abort@plt>
   13a18:	str	r1, [sp, #44]	; 0x2c
   13a1c:	str	r0, [sp, #40]	; 0x28
   13a20:	mov	r3, sp
   13a24:	mov	r0, #0
   13a28:	mov	r1, ip
   13a2c:	mvn	r2, #0
   13a30:	bl	13350 <__mempcpy_chk@plt+0x233c>
   13a34:	sub	sp, fp, #8
   13a38:	pop	{r4, sl, fp, pc}
   13a3c:	push	{r4, r5, fp, lr}
   13a40:	add	fp, sp, #8
   13a44:	sub	sp, sp, #48	; 0x30
   13a48:	mov	lr, r2
   13a4c:	movw	r2, #24928	; 0x6160
   13a50:	mov	ip, r3
   13a54:	mov	r3, #32
   13a58:	cmp	r0, #0
   13a5c:	mov	r5, sp
   13a60:	movt	r2, #2
   13a64:	cmpne	r1, #0
   13a68:	add	r4, r2, #16
   13a6c:	vld1.64	{d16-d17}, [r2], r3
   13a70:	vld1.64	{d18-d19}, [r4]
   13a74:	add	r4, r5, #16
   13a78:	vld1.64	{d20-d21}, [r2]
   13a7c:	vst1.64	{d16-d17}, [r5], r3
   13a80:	mov	r2, #10
   13a84:	vst1.64	{d18-d19}, [r4]
   13a88:	vst1.64	{d20-d21}, [r5]
   13a8c:	str	r2, [sp]
   13a90:	bne	13a98 <__mempcpy_chk@plt+0x2a84>
   13a94:	bl	10ffc <abort@plt>
   13a98:	str	r1, [sp, #44]	; 0x2c
   13a9c:	str	r0, [sp, #40]	; 0x28
   13aa0:	mov	r3, sp
   13aa4:	mov	r0, #0
   13aa8:	mov	r1, lr
   13aac:	mov	r2, ip
   13ab0:	bl	13350 <__mempcpy_chk@plt+0x233c>
   13ab4:	sub	sp, fp, #8
   13ab8:	pop	{r4, r5, fp, pc}
   13abc:	movw	r3, #24832	; 0x6100
   13ac0:	movt	r3, #2
   13ac4:	b	13350 <__mempcpy_chk@plt+0x233c>
   13ac8:	movw	r3, #24832	; 0x6100
   13acc:	mov	r2, r1
   13ad0:	mov	r1, r0
   13ad4:	mov	r0, #0
   13ad8:	movt	r3, #2
   13adc:	b	13350 <__mempcpy_chk@plt+0x233c>
   13ae0:	movw	r3, #24832	; 0x6100
   13ae4:	mvn	r2, #0
   13ae8:	movt	r3, #2
   13aec:	b	13350 <__mempcpy_chk@plt+0x233c>
   13af0:	movw	r3, #24832	; 0x6100
   13af4:	mov	r1, r0
   13af8:	mov	r0, #0
   13afc:	mvn	r2, #0
   13b00:	movt	r3, #2
   13b04:	b	13350 <__mempcpy_chk@plt+0x233c>
   13b08:	push	{r4, r5, fp, lr}
   13b0c:	add	fp, sp, #8
   13b10:	mov	r5, r0
   13b14:	mov	r4, r1
   13b18:	mov	r0, #0
   13b1c:	mov	r2, #5
   13b20:	mov	r1, r5
   13b24:	bl	10e40 <dcgettext@plt>
   13b28:	cmp	r0, r5
   13b2c:	popne	{r4, r5, fp, pc}
   13b30:	bl	14c00 <__mempcpy_chk@plt+0x3bec>
   13b34:	ldrb	r1, [r0]
   13b38:	and	r1, r1, #223	; 0xdf
   13b3c:	cmp	r1, #71	; 0x47
   13b40:	beq	13ba8 <__mempcpy_chk@plt+0x2b94>
   13b44:	cmp	r1, #85	; 0x55
   13b48:	bne	13bcc <__mempcpy_chk@plt+0x2bb8>
   13b4c:	ldrb	r1, [r0, #1]
   13b50:	and	r1, r1, #223	; 0xdf
   13b54:	cmp	r1, #84	; 0x54
   13b58:	bne	13bcc <__mempcpy_chk@plt+0x2bb8>
   13b5c:	ldrb	r1, [r0, #2]
   13b60:	and	r1, r1, #223	; 0xdf
   13b64:	cmp	r1, #70	; 0x46
   13b68:	ldrbeq	r1, [r0, #3]
   13b6c:	cmpeq	r1, #45	; 0x2d
   13b70:	bne	13bcc <__mempcpy_chk@plt+0x2bb8>
   13b74:	ldrb	r1, [r0, #4]
   13b78:	cmp	r1, #56	; 0x38
   13b7c:	ldrbeq	r0, [r0, #5]
   13b80:	cmpeq	r0, #0
   13b84:	bne	13bcc <__mempcpy_chk@plt+0x2bb8>
   13b88:	ldrb	r1, [r5]
   13b8c:	movw	r2, #21732	; 0x54e4
   13b90:	movw	r0, #21736	; 0x54e8
   13b94:	movt	r2, #1
   13b98:	movt	r0, #1
   13b9c:	cmp	r1, #96	; 0x60
   13ba0:	moveq	r0, r2
   13ba4:	pop	{r4, r5, fp, pc}
   13ba8:	ldrb	r1, [r0, #1]
   13bac:	and	r1, r1, #223	; 0xdf
   13bb0:	cmp	r1, #66	; 0x42
   13bb4:	bne	13bcc <__mempcpy_chk@plt+0x2bb8>
   13bb8:	ldrb	r1, [r0, #2]
   13bbc:	cmp	r1, #49	; 0x31
   13bc0:	ldrbeq	r1, [r0, #3]
   13bc4:	cmpeq	r1, #56	; 0x38
   13bc8:	beq	13be8 <__mempcpy_chk@plt+0x2bd4>
   13bcc:	movw	r1, #21726	; 0x54de
   13bd0:	movw	r0, #21730	; 0x54e2
   13bd4:	cmp	r4, #9
   13bd8:	movt	r1, #1
   13bdc:	movt	r0, #1
   13be0:	moveq	r0, r1
   13be4:	pop	{r4, r5, fp, pc}
   13be8:	ldrb	r1, [r0, #4]
   13bec:	cmp	r1, #48	; 0x30
   13bf0:	ldrbeq	r1, [r0, #5]
   13bf4:	cmpeq	r1, #51	; 0x33
   13bf8:	bne	13bcc <__mempcpy_chk@plt+0x2bb8>
   13bfc:	ldrb	r1, [r0, #6]
   13c00:	cmp	r1, #48	; 0x30
   13c04:	ldrbeq	r0, [r0, #7]
   13c08:	cmpeq	r0, #0
   13c0c:	bne	13bcc <__mempcpy_chk@plt+0x2bb8>
   13c10:	ldrb	r1, [r5]
   13c14:	movw	r2, #21740	; 0x54ec
   13c18:	movw	r0, #21744	; 0x54f0
   13c1c:	movt	r2, #1
   13c20:	movt	r0, #1
   13c24:	b	13b9c <__mempcpy_chk@plt+0x2b88>
   13c28:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13c2c:	add	fp, sp, #24
   13c30:	sub	sp, sp, #32
   13c34:	ldr	r6, [fp, #12]
   13c38:	ldr	r7, [fp, #8]
   13c3c:	mov	r4, r2
   13c40:	mov	r8, r0
   13c44:	cmp	r1, #0
   13c48:	beq	13c70 <__mempcpy_chk@plt+0x2c5c>
   13c4c:	movw	r2, #21832	; 0x5548
   13c50:	mov	r5, r1
   13c54:	str	r3, [sp, #4]
   13c58:	str	r4, [sp]
   13c5c:	mov	r0, r8
   13c60:	mov	r1, #1
   13c64:	movt	r2, #1
   13c68:	mov	r3, r5
   13c6c:	b	13c88 <__mempcpy_chk@plt+0x2c74>
   13c70:	movw	r2, #21844	; 0x5554
   13c74:	str	r3, [sp]
   13c78:	mov	r0, r8
   13c7c:	mov	r1, #1
   13c80:	mov	r3, r4
   13c84:	movt	r2, #1
   13c88:	bl	10f78 <__fprintf_chk@plt>
   13c8c:	movw	r1, #21851	; 0x555b
   13c90:	mov	r0, #0
   13c94:	mov	r2, #5
   13c98:	movt	r1, #1
   13c9c:	bl	10e40 <dcgettext@plt>
   13ca0:	movw	r2, #22569	; 0x5829
   13ca4:	mov	r3, r0
   13ca8:	movw	r0, #2022	; 0x7e6
   13cac:	mov	r1, #1
   13cb0:	str	r0, [sp]
   13cb4:	movt	r2, #1
   13cb8:	mov	r0, r8
   13cbc:	bl	10f78 <__fprintf_chk@plt>
   13cc0:	movw	r4, #20190	; 0x4ede
   13cc4:	mov	r1, r8
   13cc8:	movt	r4, #1
   13ccc:	mov	r0, r4
   13cd0:	bl	10dc8 <fputs_unlocked@plt>
   13cd4:	movw	r1, #21855	; 0x555f
   13cd8:	mov	r0, #0
   13cdc:	mov	r2, #5
   13ce0:	movt	r1, #1
   13ce4:	bl	10e40 <dcgettext@plt>
   13ce8:	movw	r3, #22026	; 0x560a
   13cec:	mov	r2, r0
   13cf0:	mov	r0, r8
   13cf4:	mov	r1, #1
   13cf8:	movt	r3, #1
   13cfc:	bl	10f78 <__fprintf_chk@plt>
   13d00:	mov	r0, r4
   13d04:	mov	r1, r8
   13d08:	bl	10dc8 <fputs_unlocked@plt>
   13d0c:	cmp	r6, #9
   13d10:	bhi	13d4c <__mempcpy_chk@plt+0x2d38>
   13d14:	add	r0, pc, #0
   13d18:	ldr	pc, [r0, r6, lsl #2]
   13d1c:	andeq	r3, r1, r4, asr #26
   13d20:	andeq	r3, r1, r8, asr sp
   13d24:	andeq	r3, r1, r8, lsl #27
   13d28:			; <UNDEFINED> instruction: 0x00013db0
   13d2c:	ldrdeq	r3, [r1], -r8
   13d30:	andeq	r3, r1, r0, lsl #28
   13d34:	andeq	r3, r1, r8, lsr #28
   13d38:	andeq	r3, r1, r0, ror #28
   13d3c:	andeq	r3, r1, r0, lsl #30
   13d40:	andeq	r3, r1, r8, lsr #29
   13d44:	sub	sp, fp, #24
   13d48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13d4c:	movw	r1, #22379	; 0x576b
   13d50:	movt	r1, #1
   13d54:	b	13eb0 <__mempcpy_chk@plt+0x2e9c>
   13d58:	movw	r1, #22060	; 0x562c
   13d5c:	mov	r0, #0
   13d60:	mov	r2, #5
   13d64:	movt	r1, #1
   13d68:	bl	10e40 <dcgettext@plt>
   13d6c:	ldr	r3, [r7]
   13d70:	mov	r2, r0
   13d74:	mov	r0, r8
   13d78:	mov	r1, #1
   13d7c:	sub	sp, fp, #24
   13d80:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13d84:	b	10f78 <__fprintf_chk@plt>
   13d88:	movw	r1, #22076	; 0x563c
   13d8c:	mov	r0, #0
   13d90:	mov	r2, #5
   13d94:	movt	r1, #1
   13d98:	bl	10e40 <dcgettext@plt>
   13d9c:	mov	r2, r0
   13da0:	ldr	r3, [r7]
   13da4:	ldr	r0, [r7, #4]
   13da8:	str	r0, [sp]
   13dac:	b	13e9c <__mempcpy_chk@plt+0x2e88>
   13db0:	movw	r1, #22099	; 0x5653
   13db4:	mov	r0, #0
   13db8:	mov	r2, #5
   13dbc:	movt	r1, #1
   13dc0:	bl	10e40 <dcgettext@plt>
   13dc4:	ldr	r3, [r7]
   13dc8:	mov	r2, r0
   13dcc:	ldmib	r7, {r0, r1}
   13dd0:	stm	sp, {r0, r1}
   13dd4:	b	13e9c <__mempcpy_chk@plt+0x2e88>
   13dd8:	movw	r1, #22127	; 0x566f
   13ddc:	mov	r0, #0
   13de0:	mov	r2, #5
   13de4:	movt	r1, #1
   13de8:	bl	10e40 <dcgettext@plt>
   13dec:	ldr	r3, [r7]
   13df0:	mov	r2, r0
   13df4:	ldmib	r7, {r0, r1, r7}
   13df8:	stm	sp, {r0, r1, r7}
   13dfc:	b	13e9c <__mempcpy_chk@plt+0x2e88>
   13e00:	movw	r1, #22159	; 0x568f
   13e04:	mov	r0, #0
   13e08:	mov	r2, #5
   13e0c:	movt	r1, #1
   13e10:	bl	10e40 <dcgettext@plt>
   13e14:	ldr	r3, [r7]
   13e18:	mov	r2, r0
   13e1c:	ldmib	r7, {r0, r1, r6, r7}
   13e20:	stm	sp, {r0, r1, r6, r7}
   13e24:	b	13e9c <__mempcpy_chk@plt+0x2e88>
   13e28:	movw	r1, #22195	; 0x56b3
   13e2c:	mov	r0, #0
   13e30:	mov	r2, #5
   13e34:	movt	r1, #1
   13e38:	bl	10e40 <dcgettext@plt>
   13e3c:	ldr	r3, [r7]
   13e40:	mov	r2, r0
   13e44:	ldmib	r7, {r0, r1, r6}
   13e48:	ldr	r5, [r7, #16]
   13e4c:	ldr	r7, [r7, #20]
   13e50:	stm	sp, {r0, r1, r6}
   13e54:	str	r5, [sp, #12]
   13e58:	str	r7, [sp, #16]
   13e5c:	b	13e9c <__mempcpy_chk@plt+0x2e88>
   13e60:	movw	r1, #22235	; 0x56db
   13e64:	mov	r0, #0
   13e68:	mov	r2, #5
   13e6c:	movt	r1, #1
   13e70:	bl	10e40 <dcgettext@plt>
   13e74:	ldr	r3, [r7]
   13e78:	mov	r2, r0
   13e7c:	ldmib	r7, {r0, r1, r6}
   13e80:	ldr	r5, [r7, #16]
   13e84:	ldr	r4, [r7, #20]
   13e88:	ldr	r7, [r7, #24]
   13e8c:	stm	sp, {r0, r1, r6}
   13e90:	str	r5, [sp, #12]
   13e94:	str	r4, [sp, #16]
   13e98:	str	r7, [sp, #20]
   13e9c:	mov	r0, r8
   13ea0:	mov	r1, #1
   13ea4:	b	13f50 <__mempcpy_chk@plt+0x2f3c>
   13ea8:	movw	r1, #22327	; 0x5737
   13eac:	movt	r1, #1
   13eb0:	mov	r0, #0
   13eb4:	mov	r2, #5
   13eb8:	bl	10e40 <dcgettext@plt>
   13ebc:	mov	ip, r0
   13ec0:	ldr	r3, [r7]
   13ec4:	ldr	r0, [r7, #4]
   13ec8:	ldr	r1, [r7, #8]
   13ecc:	ldr	r6, [r7, #12]
   13ed0:	ldr	r5, [r7, #16]
   13ed4:	ldr	r4, [r7, #20]
   13ed8:	ldr	r2, [r7, #24]
   13edc:	ldr	lr, [r7, #28]
   13ee0:	ldr	r7, [r7, #32]
   13ee4:	stm	sp, {r0, r1, r6}
   13ee8:	str	r5, [sp, #12]
   13eec:	str	r4, [sp, #16]
   13ef0:	str	r2, [sp, #20]
   13ef4:	str	lr, [sp, #24]
   13ef8:	str	r7, [sp, #28]
   13efc:	b	13f44 <__mempcpy_chk@plt+0x2f30>
   13f00:	movw	r1, #22279	; 0x5707
   13f04:	mov	r0, #0
   13f08:	mov	r2, #5
   13f0c:	movt	r1, #1
   13f10:	bl	10e40 <dcgettext@plt>
   13f14:	mov	ip, r0
   13f18:	ldr	r3, [r7]
   13f1c:	ldmib	r7, {r0, r1, r6}
   13f20:	ldr	r5, [r7, #16]
   13f24:	ldr	r4, [r7, #20]
   13f28:	ldr	r2, [r7, #24]
   13f2c:	ldr	r7, [r7, #28]
   13f30:	stm	sp, {r0, r1, r6}
   13f34:	str	r5, [sp, #12]
   13f38:	str	r4, [sp, #16]
   13f3c:	str	r2, [sp, #20]
   13f40:	str	r7, [sp, #24]
   13f44:	mov	r0, r8
   13f48:	mov	r1, #1
   13f4c:	mov	r2, ip
   13f50:	bl	10f78 <__fprintf_chk@plt>
   13f54:	sub	sp, fp, #24
   13f58:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13f5c:	push	{r4, sl, fp, lr}
   13f60:	add	fp, sp, #8
   13f64:	sub	sp, sp, #8
   13f68:	ldr	ip, [fp, #8]
   13f6c:	mov	lr, #0
   13f70:	ldr	r4, [ip, lr, lsl #2]
   13f74:	add	lr, lr, #1
   13f78:	cmp	r4, #0
   13f7c:	bne	13f70 <__mempcpy_chk@plt+0x2f5c>
   13f80:	sub	r4, lr, #1
   13f84:	str	ip, [sp]
   13f88:	str	r4, [sp, #4]
   13f8c:	bl	13c28 <__mempcpy_chk@plt+0x2c14>
   13f90:	sub	sp, fp, #8
   13f94:	pop	{r4, sl, fp, pc}
   13f98:	push	{fp, lr}
   13f9c:	mov	fp, sp
   13fa0:	sub	sp, sp, #48	; 0x30
   13fa4:	ldr	ip, [fp, #8]
   13fa8:	ldr	lr, [ip]
   13fac:	cmp	lr, #0
   13fb0:	str	lr, [sp, #8]
   13fb4:	beq	14050 <__mempcpy_chk@plt+0x303c>
   13fb8:	ldr	lr, [ip, #4]
   13fbc:	cmp	lr, #0
   13fc0:	str	lr, [sp, #12]
   13fc4:	beq	14058 <__mempcpy_chk@plt+0x3044>
   13fc8:	ldr	lr, [ip, #8]
   13fcc:	cmp	lr, #0
   13fd0:	str	lr, [sp, #16]
   13fd4:	beq	14060 <__mempcpy_chk@plt+0x304c>
   13fd8:	ldr	lr, [ip, #12]
   13fdc:	cmp	lr, #0
   13fe0:	str	lr, [sp, #20]
   13fe4:	beq	14068 <__mempcpy_chk@plt+0x3054>
   13fe8:	ldr	lr, [ip, #16]
   13fec:	cmp	lr, #0
   13ff0:	str	lr, [sp, #24]
   13ff4:	beq	14070 <__mempcpy_chk@plt+0x305c>
   13ff8:	ldr	lr, [ip, #20]
   13ffc:	cmp	lr, #0
   14000:	str	lr, [sp, #28]
   14004:	beq	14078 <__mempcpy_chk@plt+0x3064>
   14008:	ldr	lr, [ip, #24]
   1400c:	cmp	lr, #0
   14010:	str	lr, [sp, #32]
   14014:	beq	14080 <__mempcpy_chk@plt+0x306c>
   14018:	ldr	lr, [ip, #28]
   1401c:	cmp	lr, #0
   14020:	str	lr, [sp, #36]	; 0x24
   14024:	beq	14088 <__mempcpy_chk@plt+0x3074>
   14028:	ldr	lr, [ip, #32]
   1402c:	cmp	lr, #0
   14030:	str	lr, [sp, #40]	; 0x28
   14034:	beq	14090 <__mempcpy_chk@plt+0x307c>
   14038:	ldr	lr, [ip, #36]	; 0x24
   1403c:	mov	ip, #10
   14040:	cmp	lr, #0
   14044:	str	lr, [sp, #44]	; 0x2c
   14048:	movweq	ip, #9
   1404c:	b	14094 <__mempcpy_chk@plt+0x3080>
   14050:	mov	ip, #0
   14054:	b	14094 <__mempcpy_chk@plt+0x3080>
   14058:	mov	ip, #1
   1405c:	b	14094 <__mempcpy_chk@plt+0x3080>
   14060:	mov	ip, #2
   14064:	b	14094 <__mempcpy_chk@plt+0x3080>
   14068:	mov	ip, #3
   1406c:	b	14094 <__mempcpy_chk@plt+0x3080>
   14070:	mov	ip, #4
   14074:	b	14094 <__mempcpy_chk@plt+0x3080>
   14078:	mov	ip, #5
   1407c:	b	14094 <__mempcpy_chk@plt+0x3080>
   14080:	mov	ip, #6
   14084:	b	14094 <__mempcpy_chk@plt+0x3080>
   14088:	mov	ip, #7
   1408c:	b	14094 <__mempcpy_chk@plt+0x3080>
   14090:	mov	ip, #8
   14094:	add	lr, sp, #8
   14098:	str	ip, [sp, #4]
   1409c:	str	lr, [sp]
   140a0:	bl	13c28 <__mempcpy_chk@plt+0x2c14>
   140a4:	mov	sp, fp
   140a8:	pop	{fp, pc}
   140ac:	push	{fp, lr}
   140b0:	mov	fp, sp
   140b4:	sub	sp, sp, #56	; 0x38
   140b8:	add	ip, fp, #8
   140bc:	str	ip, [sp, #12]
   140c0:	ldr	lr, [fp, #8]
   140c4:	cmp	lr, #0
   140c8:	str	lr, [sp, #16]
   140cc:	beq	14168 <__mempcpy_chk@plt+0x3154>
   140d0:	ldr	lr, [ip, #4]
   140d4:	cmp	lr, #0
   140d8:	str	lr, [sp, #20]
   140dc:	beq	14170 <__mempcpy_chk@plt+0x315c>
   140e0:	ldr	lr, [ip, #8]
   140e4:	cmp	lr, #0
   140e8:	str	lr, [sp, #24]
   140ec:	beq	14178 <__mempcpy_chk@plt+0x3164>
   140f0:	ldr	lr, [ip, #12]
   140f4:	cmp	lr, #0
   140f8:	str	lr, [sp, #28]
   140fc:	beq	14180 <__mempcpy_chk@plt+0x316c>
   14100:	ldr	lr, [ip, #16]
   14104:	cmp	lr, #0
   14108:	str	lr, [sp, #32]
   1410c:	beq	14188 <__mempcpy_chk@plt+0x3174>
   14110:	ldr	lr, [ip, #20]
   14114:	cmp	lr, #0
   14118:	str	lr, [sp, #36]	; 0x24
   1411c:	beq	14190 <__mempcpy_chk@plt+0x317c>
   14120:	ldr	lr, [ip, #24]
   14124:	cmp	lr, #0
   14128:	str	lr, [sp, #40]	; 0x28
   1412c:	beq	14198 <__mempcpy_chk@plt+0x3184>
   14130:	ldr	lr, [ip, #28]
   14134:	cmp	lr, #0
   14138:	str	lr, [sp, #44]	; 0x2c
   1413c:	beq	141a0 <__mempcpy_chk@plt+0x318c>
   14140:	ldr	lr, [ip, #32]
   14144:	cmp	lr, #0
   14148:	str	lr, [sp, #48]	; 0x30
   1414c:	beq	141a8 <__mempcpy_chk@plt+0x3194>
   14150:	ldr	lr, [ip, #36]	; 0x24
   14154:	mov	ip, #10
   14158:	cmp	lr, #0
   1415c:	str	lr, [sp, #52]	; 0x34
   14160:	movweq	ip, #9
   14164:	b	141ac <__mempcpy_chk@plt+0x3198>
   14168:	mov	ip, #0
   1416c:	b	141ac <__mempcpy_chk@plt+0x3198>
   14170:	mov	ip, #1
   14174:	b	141ac <__mempcpy_chk@plt+0x3198>
   14178:	mov	ip, #2
   1417c:	b	141ac <__mempcpy_chk@plt+0x3198>
   14180:	mov	ip, #3
   14184:	b	141ac <__mempcpy_chk@plt+0x3198>
   14188:	mov	ip, #4
   1418c:	b	141ac <__mempcpy_chk@plt+0x3198>
   14190:	mov	ip, #5
   14194:	b	141ac <__mempcpy_chk@plt+0x3198>
   14198:	mov	ip, #6
   1419c:	b	141ac <__mempcpy_chk@plt+0x3198>
   141a0:	mov	ip, #7
   141a4:	b	141ac <__mempcpy_chk@plt+0x3198>
   141a8:	mov	ip, #8
   141ac:	add	lr, sp, #16
   141b0:	str	ip, [sp, #4]
   141b4:	str	lr, [sp]
   141b8:	bl	13c28 <__mempcpy_chk@plt+0x2c14>
   141bc:	mov	sp, fp
   141c0:	pop	{fp, pc}
   141c4:	push	{fp, lr}
   141c8:	mov	fp, sp
   141cc:	movw	r0, #24900	; 0x6144
   141d0:	movt	r0, #2
   141d4:	ldr	r1, [r0]
   141d8:	movw	r0, #20190	; 0x4ede
   141dc:	movt	r0, #1
   141e0:	bl	10dc8 <fputs_unlocked@plt>
   141e4:	movw	r1, #22439	; 0x57a7
   141e8:	mov	r0, #0
   141ec:	mov	r2, #5
   141f0:	movt	r1, #1
   141f4:	bl	10e40 <dcgettext@plt>
   141f8:	movw	r2, #22459	; 0x57bb
   141fc:	mov	r1, r0
   14200:	mov	r0, #1
   14204:	movt	r2, #1
   14208:	bl	10f60 <__printf_chk@plt>
   1420c:	movw	r1, #22481	; 0x57d1
   14210:	mov	r0, #0
   14214:	mov	r2, #5
   14218:	movt	r1, #1
   1421c:	bl	10e40 <dcgettext@plt>
   14220:	movw	r2, #20819	; 0x5153
   14224:	movw	r3, #21228	; 0x52ec
   14228:	mov	r1, r0
   1422c:	mov	r0, #1
   14230:	movt	r2, #1
   14234:	movt	r3, #1
   14238:	bl	10f60 <__printf_chk@plt>
   1423c:	movw	r1, #22501	; 0x57e5
   14240:	mov	r0, #0
   14244:	mov	r2, #5
   14248:	movt	r1, #1
   1424c:	bl	10e40 <dcgettext@plt>
   14250:	movw	r2, #22540	; 0x580c
   14254:	mov	r1, r0
   14258:	mov	r0, #1
   1425c:	movt	r2, #1
   14260:	pop	{fp, lr}
   14264:	b	10f60 <__printf_chk@plt>
   14268:	push	{r4, r5, r6, sl, fp, lr}
   1426c:	add	fp, sp, #16
   14270:	mov	r4, r2
   14274:	mov	r5, r1
   14278:	mov	r6, r0
   1427c:	bl	14c98 <__mempcpy_chk@plt+0x3c84>
   14280:	cmp	r0, #0
   14284:	popne	{r4, r5, r6, sl, fp, pc}
   14288:	cmp	r6, #0
   1428c:	beq	142a0 <__mempcpy_chk@plt+0x328c>
   14290:	cmp	r5, #0
   14294:	cmpne	r4, #0
   14298:	bne	142a0 <__mempcpy_chk@plt+0x328c>
   1429c:	pop	{r4, r5, r6, sl, fp, pc}
   142a0:	bl	14840 <__mempcpy_chk@plt+0x382c>
   142a4:	push	{r4, r5, r6, sl, fp, lr}
   142a8:	add	fp, sp, #16
   142ac:	mov	r4, r2
   142b0:	mov	r5, r1
   142b4:	mov	r6, r0
   142b8:	bl	14c98 <__mempcpy_chk@plt+0x3c84>
   142bc:	cmp	r0, #0
   142c0:	popne	{r4, r5, r6, sl, fp, pc}
   142c4:	cmp	r6, #0
   142c8:	beq	142dc <__mempcpy_chk@plt+0x32c8>
   142cc:	cmp	r5, #0
   142d0:	cmpne	r4, #0
   142d4:	bne	142dc <__mempcpy_chk@plt+0x32c8>
   142d8:	pop	{r4, r5, r6, sl, fp, pc}
   142dc:	bl	14840 <__mempcpy_chk@plt+0x382c>
   142e0:	push	{fp, lr}
   142e4:	mov	fp, sp
   142e8:	bl	148d8 <__mempcpy_chk@plt+0x38c4>
   142ec:	cmp	r0, #0
   142f0:	popne	{fp, pc}
   142f4:	bl	14840 <__mempcpy_chk@plt+0x382c>
   142f8:	push	{fp, lr}
   142fc:	mov	fp, sp
   14300:	bl	148d8 <__mempcpy_chk@plt+0x38c4>
   14304:	cmp	r0, #0
   14308:	popne	{fp, pc}
   1430c:	bl	14840 <__mempcpy_chk@plt+0x382c>
   14310:	push	{fp, lr}
   14314:	mov	fp, sp
   14318:	bl	148d8 <__mempcpy_chk@plt+0x38c4>
   1431c:	cmp	r0, #0
   14320:	popne	{fp, pc}
   14324:	bl	14840 <__mempcpy_chk@plt+0x382c>
   14328:	push	{r4, r5, fp, lr}
   1432c:	add	fp, sp, #8
   14330:	mov	r4, r1
   14334:	mov	r5, r0
   14338:	bl	14908 <__mempcpy_chk@plt+0x38f4>
   1433c:	cmp	r0, #0
   14340:	popne	{r4, r5, fp, pc}
   14344:	cmp	r5, #0
   14348:	beq	14358 <__mempcpy_chk@plt+0x3344>
   1434c:	cmp	r4, #0
   14350:	bne	14358 <__mempcpy_chk@plt+0x3344>
   14354:	pop	{r4, r5, fp, pc}
   14358:	bl	14840 <__mempcpy_chk@plt+0x382c>
   1435c:	push	{fp, lr}
   14360:	mov	fp, sp
   14364:	cmp	r1, #0
   14368:	orreq	r1, r1, #1
   1436c:	bl	14908 <__mempcpy_chk@plt+0x38f4>
   14370:	cmp	r0, #0
   14374:	popne	{fp, pc}
   14378:	bl	14840 <__mempcpy_chk@plt+0x382c>
   1437c:	push	{fp, lr}
   14380:	mov	fp, sp
   14384:	clz	r3, r2
   14388:	lsr	ip, r3, #5
   1438c:	clz	r3, r1
   14390:	lsr	r3, r3, #5
   14394:	orrs	r3, r3, ip
   14398:	movwne	r1, #1
   1439c:	movwne	r2, #1
   143a0:	bl	14c98 <__mempcpy_chk@plt+0x3c84>
   143a4:	cmp	r0, #0
   143a8:	popne	{fp, pc}
   143ac:	bl	14840 <__mempcpy_chk@plt+0x382c>
   143b0:	push	{fp, lr}
   143b4:	mov	fp, sp
   143b8:	mov	r2, r1
   143bc:	mov	r1, r0
   143c0:	mov	r0, #0
   143c4:	bl	14c98 <__mempcpy_chk@plt+0x3c84>
   143c8:	cmp	r0, #0
   143cc:	popne	{fp, pc}
   143d0:	bl	14840 <__mempcpy_chk@plt+0x382c>
   143d4:	push	{fp, lr}
   143d8:	mov	fp, sp
   143dc:	mov	r2, r1
   143e0:	mov	r1, r0
   143e4:	clz	r0, r2
   143e8:	clz	r3, r1
   143ec:	lsr	r0, r0, #5
   143f0:	lsr	r3, r3, #5
   143f4:	orrs	r0, r3, r0
   143f8:	movwne	r1, #1
   143fc:	movwne	r2, #1
   14400:	mov	r0, #0
   14404:	bl	14c98 <__mempcpy_chk@plt+0x3c84>
   14408:	cmp	r0, #0
   1440c:	popne	{fp, pc}
   14410:	bl	14840 <__mempcpy_chk@plt+0x382c>
   14414:	push	{r4, r5, r6, sl, fp, lr}
   14418:	add	fp, sp, #16
   1441c:	ldr	r5, [r1]
   14420:	mov	r4, r1
   14424:	mov	r6, r0
   14428:	cmp	r0, #0
   1442c:	beq	14444 <__mempcpy_chk@plt+0x3430>
   14430:	mov	r0, #1
   14434:	add	r0, r0, r5, lsr #1
   14438:	adds	r5, r5, r0
   1443c:	bcc	1444c <__mempcpy_chk@plt+0x3438>
   14440:	b	14488 <__mempcpy_chk@plt+0x3474>
   14444:	cmp	r5, #0
   14448:	movweq	r5, #64	; 0x40
   1444c:	mov	r0, r6
   14450:	mov	r1, r5
   14454:	mov	r2, #1
   14458:	bl	14c98 <__mempcpy_chk@plt+0x3c84>
   1445c:	cmp	r5, #0
   14460:	mov	r1, r5
   14464:	movwne	r1, #1
   14468:	cmp	r0, #0
   1446c:	bne	14480 <__mempcpy_chk@plt+0x346c>
   14470:	clz	r2, r6
   14474:	lsr	r2, r2, #5
   14478:	orrs	r1, r2, r1
   1447c:	bne	14488 <__mempcpy_chk@plt+0x3474>
   14480:	str	r5, [r4]
   14484:	pop	{r4, r5, r6, sl, fp, pc}
   14488:	bl	14840 <__mempcpy_chk@plt+0x382c>
   1448c:	push	{r4, r5, r6, r7, fp, lr}
   14490:	add	fp, sp, #16
   14494:	ldr	r5, [r1]
   14498:	mov	r6, r2
   1449c:	mov	r4, r1
   144a0:	mov	r7, r0
   144a4:	cmp	r0, #0
   144a8:	beq	144c0 <__mempcpy_chk@plt+0x34ac>
   144ac:	mov	r0, #1
   144b0:	add	r0, r0, r5, lsr #1
   144b4:	adds	r5, r5, r0
   144b8:	bcc	144d8 <__mempcpy_chk@plt+0x34c4>
   144bc:	b	1450c <__mempcpy_chk@plt+0x34f8>
   144c0:	cmp	r5, #0
   144c4:	bne	144d8 <__mempcpy_chk@plt+0x34c4>
   144c8:	mov	r0, #64	; 0x40
   144cc:	cmp	r6, #64	; 0x40
   144d0:	udiv	r5, r0, r6
   144d4:	addhi	r5, r5, #1
   144d8:	mov	r0, r7
   144dc:	mov	r1, r5
   144e0:	mov	r2, r6
   144e4:	bl	14c98 <__mempcpy_chk@plt+0x3c84>
   144e8:	cmp	r0, #0
   144ec:	bne	14504 <__mempcpy_chk@plt+0x34f0>
   144f0:	cmp	r7, #0
   144f4:	beq	1450c <__mempcpy_chk@plt+0x34f8>
   144f8:	cmp	r6, #0
   144fc:	cmpne	r5, #0
   14500:	bne	1450c <__mempcpy_chk@plt+0x34f8>
   14504:	str	r5, [r4]
   14508:	pop	{r4, r5, r6, r7, fp, pc}
   1450c:	bl	14840 <__mempcpy_chk@plt+0x382c>
   14510:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14514:	add	fp, sp, #24
   14518:	mov	r8, r1
   1451c:	ldr	r1, [r1]
   14520:	mov	r5, r0
   14524:	add	r0, r1, r1, asr #1
   14528:	cmp	r0, r1
   1452c:	mvnvs	r0, #-2147483648	; 0x80000000
   14530:	cmp	r0, r3
   14534:	mov	r7, r0
   14538:	movgt	r7, r3
   1453c:	cmn	r3, #1
   14540:	movle	r7, r0
   14544:	ldr	r0, [fp, #8]
   14548:	cmn	r0, #1
   1454c:	ble	14574 <__mempcpy_chk@plt+0x3560>
   14550:	cmp	r0, #0
   14554:	beq	145c8 <__mempcpy_chk@plt+0x35b4>
   14558:	cmn	r7, #1
   1455c:	ble	1459c <__mempcpy_chk@plt+0x3588>
   14560:	mvn	r4, #-2147483648	; 0x80000000
   14564:	udiv	r6, r4, r0
   14568:	cmp	r6, r7
   1456c:	bge	145c8 <__mempcpy_chk@plt+0x35b4>
   14570:	b	145d8 <__mempcpy_chk@plt+0x35c4>
   14574:	cmn	r7, #1
   14578:	ble	145b8 <__mempcpy_chk@plt+0x35a4>
   1457c:	cmn	r0, #1
   14580:	beq	145c8 <__mempcpy_chk@plt+0x35b4>
   14584:	mov	r6, #-2147483648	; 0x80000000
   14588:	mvn	r4, #-2147483648	; 0x80000000
   1458c:	sdiv	r6, r6, r0
   14590:	cmp	r6, r7
   14594:	bge	145c8 <__mempcpy_chk@plt+0x35b4>
   14598:	b	145d8 <__mempcpy_chk@plt+0x35c4>
   1459c:	beq	145c8 <__mempcpy_chk@plt+0x35b4>
   145a0:	mov	r6, #-2147483648	; 0x80000000
   145a4:	mvn	r4, #-2147483648	; 0x80000000
   145a8:	sdiv	r6, r6, r7
   145ac:	cmp	r6, r0
   145b0:	bge	145c8 <__mempcpy_chk@plt+0x35b4>
   145b4:	b	145d8 <__mempcpy_chk@plt+0x35c4>
   145b8:	mvn	r4, #-2147483648	; 0x80000000
   145bc:	sdiv	r6, r4, r0
   145c0:	cmp	r7, r6
   145c4:	blt	145d8 <__mempcpy_chk@plt+0x35c4>
   145c8:	mul	r6, r7, r0
   145cc:	mov	r4, #64	; 0x40
   145d0:	cmp	r6, #63	; 0x3f
   145d4:	bgt	145e0 <__mempcpy_chk@plt+0x35cc>
   145d8:	sdiv	r7, r4, r0
   145dc:	mul	r6, r7, r0
   145e0:	cmp	r5, #0
   145e4:	moveq	r4, #0
   145e8:	streq	r4, [r8]
   145ec:	sub	r4, r7, r1
   145f0:	cmp	r4, r2
   145f4:	bge	146a0 <__mempcpy_chk@plt+0x368c>
   145f8:	add	r7, r1, r2
   145fc:	mov	r6, #0
   14600:	mov	r2, #0
   14604:	cmp	r7, r3
   14608:	movwgt	r6, #1
   1460c:	cmn	r3, #1
   14610:	movwgt	r2, #1
   14614:	cmp	r7, r1
   14618:	bvs	146d4 <__mempcpy_chk@plt+0x36c0>
   1461c:	ands	r1, r2, r6
   14620:	bne	146d4 <__mempcpy_chk@plt+0x36c0>
   14624:	cmn	r0, #1
   14628:	ble	14650 <__mempcpy_chk@plt+0x363c>
   1462c:	cmp	r0, #0
   14630:	beq	1469c <__mempcpy_chk@plt+0x3688>
   14634:	cmn	r7, #1
   14638:	ble	14674 <__mempcpy_chk@plt+0x3660>
   1463c:	mvn	r1, #-2147483648	; 0x80000000
   14640:	udiv	r1, r1, r0
   14644:	cmp	r1, r7
   14648:	bge	1469c <__mempcpy_chk@plt+0x3688>
   1464c:	b	146d4 <__mempcpy_chk@plt+0x36c0>
   14650:	cmn	r7, #1
   14654:	ble	1468c <__mempcpy_chk@plt+0x3678>
   14658:	cmn	r0, #1
   1465c:	beq	1469c <__mempcpy_chk@plt+0x3688>
   14660:	mov	r1, #-2147483648	; 0x80000000
   14664:	sdiv	r1, r1, r0
   14668:	cmp	r1, r7
   1466c:	bge	1469c <__mempcpy_chk@plt+0x3688>
   14670:	b	146d4 <__mempcpy_chk@plt+0x36c0>
   14674:	beq	1469c <__mempcpy_chk@plt+0x3688>
   14678:	mov	r1, #-2147483648	; 0x80000000
   1467c:	sdiv	r1, r1, r7
   14680:	cmp	r1, r0
   14684:	bge	1469c <__mempcpy_chk@plt+0x3688>
   14688:	b	146d4 <__mempcpy_chk@plt+0x36c0>
   1468c:	mvn	r1, #-2147483648	; 0x80000000
   14690:	sdiv	r1, r1, r0
   14694:	cmp	r7, r1
   14698:	blt	146d4 <__mempcpy_chk@plt+0x36c0>
   1469c:	mul	r6, r7, r0
   146a0:	mov	r0, r5
   146a4:	mov	r1, r6
   146a8:	bl	14908 <__mempcpy_chk@plt+0x38f4>
   146ac:	cmp	r6, #0
   146b0:	movwne	r6, #1
   146b4:	cmp	r0, #0
   146b8:	bne	146cc <__mempcpy_chk@plt+0x36b8>
   146bc:	clz	r1, r5
   146c0:	lsr	r1, r1, #5
   146c4:	orrs	r1, r1, r6
   146c8:	bne	146d4 <__mempcpy_chk@plt+0x36c0>
   146cc:	str	r7, [r8]
   146d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   146d4:	bl	14840 <__mempcpy_chk@plt+0x382c>
   146d8:	push	{fp, lr}
   146dc:	mov	fp, sp
   146e0:	mov	r1, #1
   146e4:	bl	14884 <__mempcpy_chk@plt+0x3870>
   146e8:	cmp	r0, #0
   146ec:	popne	{fp, pc}
   146f0:	bl	14840 <__mempcpy_chk@plt+0x382c>
   146f4:	push	{fp, lr}
   146f8:	mov	fp, sp
   146fc:	bl	14884 <__mempcpy_chk@plt+0x3870>
   14700:	cmp	r0, #0
   14704:	popne	{fp, pc}
   14708:	bl	14840 <__mempcpy_chk@plt+0x382c>
   1470c:	push	{fp, lr}
   14710:	mov	fp, sp
   14714:	mov	r1, #1
   14718:	bl	14884 <__mempcpy_chk@plt+0x3870>
   1471c:	cmp	r0, #0
   14720:	popne	{fp, pc}
   14724:	bl	14840 <__mempcpy_chk@plt+0x382c>
   14728:	push	{fp, lr}
   1472c:	mov	fp, sp
   14730:	bl	14884 <__mempcpy_chk@plt+0x3870>
   14734:	cmp	r0, #0
   14738:	popne	{fp, pc}
   1473c:	bl	14840 <__mempcpy_chk@plt+0x382c>
   14740:	push	{r4, r5, r6, sl, fp, lr}
   14744:	add	fp, sp, #16
   14748:	mov	r5, r0
   1474c:	mov	r0, r1
   14750:	mov	r4, r1
   14754:	bl	148d8 <__mempcpy_chk@plt+0x38c4>
   14758:	cmp	r0, #0
   1475c:	beq	14778 <__mempcpy_chk@plt+0x3764>
   14760:	mov	r1, r5
   14764:	mov	r2, r4
   14768:	mov	r6, r0
   1476c:	bl	10e04 <memcpy@plt>
   14770:	mov	r0, r6
   14774:	pop	{r4, r5, r6, sl, fp, pc}
   14778:	bl	14840 <__mempcpy_chk@plt+0x382c>
   1477c:	push	{r4, r5, r6, sl, fp, lr}
   14780:	add	fp, sp, #16
   14784:	mov	r5, r0
   14788:	mov	r0, r1
   1478c:	mov	r4, r1
   14790:	bl	148d8 <__mempcpy_chk@plt+0x38c4>
   14794:	cmp	r0, #0
   14798:	beq	147b4 <__mempcpy_chk@plt+0x37a0>
   1479c:	mov	r1, r5
   147a0:	mov	r2, r4
   147a4:	mov	r6, r0
   147a8:	bl	10e04 <memcpy@plt>
   147ac:	mov	r0, r6
   147b0:	pop	{r4, r5, r6, sl, fp, pc}
   147b4:	bl	14840 <__mempcpy_chk@plt+0x382c>
   147b8:	push	{r4, r5, r6, sl, fp, lr}
   147bc:	add	fp, sp, #16
   147c0:	mov	r5, r0
   147c4:	add	r0, r1, #1
   147c8:	mov	r4, r1
   147cc:	bl	148d8 <__mempcpy_chk@plt+0x38c4>
   147d0:	cmp	r0, #0
   147d4:	beq	147fc <__mempcpy_chk@plt+0x37e8>
   147d8:	mov	r6, r0
   147dc:	mov	r0, #0
   147e0:	mov	r1, r5
   147e4:	mov	r2, r4
   147e8:	strb	r0, [r6, r4]
   147ec:	mov	r0, r6
   147f0:	bl	10e04 <memcpy@plt>
   147f4:	mov	r0, r6
   147f8:	pop	{r4, r5, r6, sl, fp, pc}
   147fc:	bl	14840 <__mempcpy_chk@plt+0x382c>
   14800:	push	{r4, r5, r6, sl, fp, lr}
   14804:	add	fp, sp, #16
   14808:	mov	r4, r0
   1480c:	bl	10f30 <strlen@plt>
   14810:	add	r5, r0, #1
   14814:	mov	r0, r5
   14818:	bl	148d8 <__mempcpy_chk@plt+0x38c4>
   1481c:	cmp	r0, #0
   14820:	beq	1483c <__mempcpy_chk@plt+0x3828>
   14824:	mov	r1, r4
   14828:	mov	r2, r5
   1482c:	mov	r6, r0
   14830:	bl	10e04 <memcpy@plt>
   14834:	mov	r0, r6
   14838:	pop	{r4, r5, r6, sl, fp, pc}
   1483c:	bl	14840 <__mempcpy_chk@plt+0x382c>
   14840:	push	{fp, lr}
   14844:	mov	fp, sp
   14848:	movw	r0, #24812	; 0x60ec
   1484c:	movw	r1, #22616	; 0x5858
   14850:	mov	r2, #5
   14854:	movt	r0, #2
   14858:	movt	r1, #1
   1485c:	ldr	r4, [r0]
   14860:	mov	r0, #0
   14864:	bl	10e40 <dcgettext@plt>
   14868:	movw	r2, #21511	; 0x5407
   1486c:	mov	r3, r0
   14870:	mov	r0, r4
   14874:	mov	r1, #0
   14878:	movt	r2, #1
   1487c:	bl	10eb8 <error@plt>
   14880:	bl	10ffc <abort@plt>
   14884:	clz	r2, r1
   14888:	clz	r3, r0
   1488c:	lsr	r2, r2, #5
   14890:	lsr	r3, r3, #5
   14894:	orrs	r2, r3, r2
   14898:	movwne	r1, #1
   1489c:	movwne	r0, #1
   148a0:	cmp	r1, #0
   148a4:	beq	148d4 <__mempcpy_chk@plt+0x38c0>
   148a8:	mvn	r2, #-2147483648	; 0x80000000
   148ac:	udiv	r2, r2, r1
   148b0:	cmp	r2, r0
   148b4:	bcs	148d4 <__mempcpy_chk@plt+0x38c0>
   148b8:	push	{fp, lr}
   148bc:	mov	fp, sp
   148c0:	bl	10f3c <__errno_location@plt>
   148c4:	mov	r1, #12
   148c8:	str	r1, [r0]
   148cc:	mov	r0, #0
   148d0:	pop	{fp, pc}
   148d4:	b	10dbc <calloc@plt>
   148d8:	cmp	r0, #0
   148dc:	movweq	r0, #1
   148e0:	cmn	r0, #1
   148e4:	ble	148ec <__mempcpy_chk@plt+0x38d8>
   148e8:	b	10edc <malloc@plt>
   148ec:	push	{fp, lr}
   148f0:	mov	fp, sp
   148f4:	bl	10f3c <__errno_location@plt>
   148f8:	mov	r1, #12
   148fc:	str	r1, [r0]
   14900:	mov	r0, #0
   14904:	pop	{fp, pc}
   14908:	push	{fp, lr}
   1490c:	mov	fp, sp
   14910:	cmp	r0, #0
   14914:	beq	14930 <__mempcpy_chk@plt+0x391c>
   14918:	cmp	r1, #0
   1491c:	beq	1493c <__mempcpy_chk@plt+0x3928>
   14920:	cmn	r1, #1
   14924:	ble	14948 <__mempcpy_chk@plt+0x3934>
   14928:	pop	{fp, lr}
   1492c:	b	10e58 <realloc@plt>
   14930:	mov	r0, r1
   14934:	pop	{fp, lr}
   14938:	b	148d8 <__mempcpy_chk@plt+0x38c4>
   1493c:	bl	11d1c <__mempcpy_chk@plt+0xd08>
   14940:	mov	r0, #0
   14944:	pop	{fp, pc}
   14948:	bl	10f3c <__errno_location@plt>
   1494c:	mov	r1, #12
   14950:	str	r1, [r0]
   14954:	mov	r0, #0
   14958:	pop	{fp, pc}
   1495c:	sub	r0, r0, #1
   14960:	ldrb	r3, [r0, #1]!
   14964:	cmp	r3, #47	; 0x2f
   14968:	beq	14960 <__mempcpy_chk@plt+0x394c>
   1496c:	mov	r2, #0
   14970:	mov	r1, r0
   14974:	b	14990 <__mempcpy_chk@plt+0x397c>
   14978:	cmp	r3, #0
   1497c:	bxeq	lr
   14980:	tst	r2, #1
   14984:	mov	r2, #0
   14988:	movne	r0, r1
   1498c:	ldrb	r3, [r1, #1]!
   14990:	uxtb	r3, r3
   14994:	cmp	r3, #47	; 0x2f
   14998:	bne	14978 <__mempcpy_chk@plt+0x3964>
   1499c:	ldrb	r3, [r1, #1]!
   149a0:	mov	r2, #1
   149a4:	b	14990 <__mempcpy_chk@plt+0x397c>
   149a8:	push	{r4, sl, fp, lr}
   149ac:	add	fp, sp, #8
   149b0:	mov	r4, r0
   149b4:	bl	10f30 <strlen@plt>
   149b8:	mov	r1, r0
   149bc:	sub	r2, r4, #1
   149c0:	mov	r0, r1
   149c4:	cmp	r1, #2
   149c8:	popcc	{r4, sl, fp, pc}
   149cc:	ldrb	r3, [r2, r0]
   149d0:	sub	r1, r0, #1
   149d4:	cmp	r3, #47	; 0x2f
   149d8:	beq	149c0 <__mempcpy_chk@plt+0x39ac>
   149dc:	pop	{r4, sl, fp, pc}
   149e0:	push	{r4, r5, r6, sl, fp, lr}
   149e4:	add	fp, sp, #16
   149e8:	mov	r4, r0
   149ec:	bl	10ea0 <__fpending@plt>
   149f0:	ldr	r6, [r4]
   149f4:	mov	r5, r0
   149f8:	mov	r0, r4
   149fc:	bl	14a64 <__mempcpy_chk@plt+0x3a50>
   14a00:	tst	r6, #32
   14a04:	bne	14a3c <__mempcpy_chk@plt+0x3a28>
   14a08:	cmp	r0, #0
   14a0c:	mov	r4, r0
   14a10:	mvnne	r4, #0
   14a14:	cmp	r5, #0
   14a18:	bne	14a48 <__mempcpy_chk@plt+0x3a34>
   14a1c:	cmp	r0, #0
   14a20:	beq	14a48 <__mempcpy_chk@plt+0x3a34>
   14a24:	bl	10f3c <__errno_location@plt>
   14a28:	ldr	r0, [r0]
   14a2c:	subs	r4, r0, #9
   14a30:	mvnne	r4, #0
   14a34:	mov	r0, r4
   14a38:	pop	{r4, r5, r6, sl, fp, pc}
   14a3c:	mvn	r4, #0
   14a40:	cmp	r0, #0
   14a44:	beq	14a50 <__mempcpy_chk@plt+0x3a3c>
   14a48:	mov	r0, r4
   14a4c:	pop	{r4, r5, r6, sl, fp, pc}
   14a50:	bl	10f3c <__errno_location@plt>
   14a54:	mov	r1, #0
   14a58:	str	r1, [r0]
   14a5c:	mov	r0, r4
   14a60:	pop	{r4, r5, r6, sl, fp, pc}
   14a64:	push	{r4, r5, r6, sl, fp, lr}
   14a68:	add	fp, sp, #16
   14a6c:	sub	sp, sp, #8
   14a70:	mov	r4, r0
   14a74:	bl	10f6c <fileno@plt>
   14a78:	cmn	r0, #1
   14a7c:	ble	14af0 <__mempcpy_chk@plt+0x3adc>
   14a80:	mov	r0, r4
   14a84:	bl	10ef4 <__freading@plt>
   14a88:	cmp	r0, #0
   14a8c:	beq	14ab8 <__mempcpy_chk@plt+0x3aa4>
   14a90:	mov	r0, r4
   14a94:	bl	10f6c <fileno@plt>
   14a98:	mov	r1, #1
   14a9c:	mov	r2, #0
   14aa0:	mov	r3, #0
   14aa4:	str	r1, [sp]
   14aa8:	bl	10e88 <lseek64@plt>
   14aac:	and	r0, r0, r1
   14ab0:	cmn	r0, #1
   14ab4:	beq	14af0 <__mempcpy_chk@plt+0x3adc>
   14ab8:	mov	r0, r4
   14abc:	bl	14b00 <__mempcpy_chk@plt+0x3aec>
   14ac0:	cmp	r0, #0
   14ac4:	beq	14af0 <__mempcpy_chk@plt+0x3adc>
   14ac8:	bl	10f3c <__errno_location@plt>
   14acc:	ldr	r6, [r0]
   14ad0:	mov	r5, r0
   14ad4:	mov	r0, r4
   14ad8:	bl	10f84 <fclose@plt>
   14adc:	cmp	r6, #0
   14ae0:	strne	r6, [r5]
   14ae4:	mvnne	r0, #0
   14ae8:	sub	sp, fp, #16
   14aec:	pop	{r4, r5, r6, sl, fp, pc}
   14af0:	mov	r0, r4
   14af4:	sub	sp, fp, #16
   14af8:	pop	{r4, r5, r6, sl, fp, lr}
   14afc:	b	10f84 <fclose@plt>
   14b00:	push	{r4, sl, fp, lr}
   14b04:	add	fp, sp, #8
   14b08:	sub	sp, sp, #8
   14b0c:	mov	r4, r0
   14b10:	cmp	r0, #0
   14b14:	beq	14b30 <__mempcpy_chk@plt+0x3b1c>
   14b18:	mov	r0, r4
   14b1c:	bl	10ef4 <__freading@plt>
   14b20:	cmp	r0, #0
   14b24:	ldrbne	r0, [r4, #1]
   14b28:	tstne	r0, #1
   14b2c:	bne	14b40 <__mempcpy_chk@plt+0x3b2c>
   14b30:	mov	r0, r4
   14b34:	sub	sp, fp, #8
   14b38:	pop	{r4, sl, fp, lr}
   14b3c:	b	10de0 <fflush@plt>
   14b40:	mov	r0, #1
   14b44:	mov	r2, #0
   14b48:	mov	r3, #0
   14b4c:	str	r0, [sp]
   14b50:	mov	r0, r4
   14b54:	bl	14b5c <__mempcpy_chk@plt+0x3b48>
   14b58:	b	14b30 <__mempcpy_chk@plt+0x3b1c>
   14b5c:	push	{r4, r5, r6, r7, fp, lr}
   14b60:	add	fp, sp, #16
   14b64:	sub	sp, sp, #8
   14b68:	mov	r4, r0
   14b6c:	ldr	r0, [r0, #4]
   14b70:	mov	r5, r3
   14b74:	mov	r6, r2
   14b78:	ldr	r1, [r4, #8]
   14b7c:	cmp	r1, r0
   14b80:	bne	14b9c <__mempcpy_chk@plt+0x3b88>
   14b84:	ldrd	r0, [r4, #16]
   14b88:	cmp	r1, r0
   14b8c:	bne	14b9c <__mempcpy_chk@plt+0x3b88>
   14b90:	ldr	r0, [r4, #36]	; 0x24
   14b94:	cmp	r0, #0
   14b98:	beq	14bb4 <__mempcpy_chk@plt+0x3ba0>
   14b9c:	mov	r0, r4
   14ba0:	mov	r2, r6
   14ba4:	mov	r3, r5
   14ba8:	sub	sp, fp, #16
   14bac:	pop	{r4, r5, r6, r7, fp, lr}
   14bb0:	b	10f90 <fseeko64@plt>
   14bb4:	ldr	r7, [fp, #8]
   14bb8:	mov	r0, r4
   14bbc:	bl	10f6c <fileno@plt>
   14bc0:	mov	r2, r6
   14bc4:	mov	r3, r5
   14bc8:	str	r7, [sp]
   14bcc:	bl	10e88 <lseek64@plt>
   14bd0:	and	r2, r0, r1
   14bd4:	cmn	r2, #1
   14bd8:	mvneq	r0, #0
   14bdc:	subeq	sp, fp, #16
   14be0:	popeq	{r4, r5, r6, r7, fp, pc}
   14be4:	strd	r0, [r4, #80]	; 0x50
   14be8:	ldr	r0, [r4]
   14bec:	bic	r0, r0, #16
   14bf0:	str	r0, [r4]
   14bf4:	mov	r0, #0
   14bf8:	sub	sp, fp, #16
   14bfc:	pop	{r4, r5, r6, r7, fp, pc}
   14c00:	push	{fp, lr}
   14c04:	mov	fp, sp
   14c08:	mov	r0, #14
   14c0c:	bl	10fc0 <nl_langinfo@plt>
   14c10:	movw	r1, #20191	; 0x4edf
   14c14:	cmp	r0, #0
   14c18:	movt	r1, #1
   14c1c:	movne	r1, r0
   14c20:	movw	r0, #22633	; 0x5869
   14c24:	ldrb	r2, [r1]
   14c28:	movt	r0, #1
   14c2c:	cmp	r2, #0
   14c30:	movne	r0, r1
   14c34:	pop	{fp, pc}
   14c38:	push	{r4, r5, r6, r7, fp, lr}
   14c3c:	add	fp, sp, #16
   14c40:	sub	sp, sp, #8
   14c44:	add	r5, sp, #4
   14c48:	cmp	r0, #0
   14c4c:	mov	r7, r2
   14c50:	mov	r4, r1
   14c54:	movne	r5, r0
   14c58:	mov	r0, r5
   14c5c:	bl	10eac <mbrtowc@plt>
   14c60:	mov	r6, r0
   14c64:	cmp	r7, #0
   14c68:	beq	14c8c <__mempcpy_chk@plt+0x3c78>
   14c6c:	cmn	r6, #2
   14c70:	bcc	14c8c <__mempcpy_chk@plt+0x3c78>
   14c74:	mov	r0, #0
   14c78:	bl	14cd4 <__mempcpy_chk@plt+0x3cc0>
   14c7c:	cmp	r0, #0
   14c80:	ldrbeq	r0, [r4]
   14c84:	moveq	r6, #1
   14c88:	streq	r0, [r5]
   14c8c:	mov	r0, r6
   14c90:	sub	sp, fp, #16
   14c94:	pop	{r4, r5, r6, r7, fp, pc}
   14c98:	cmp	r2, #0
   14c9c:	beq	14ccc <__mempcpy_chk@plt+0x3cb8>
   14ca0:	mvn	r3, #0
   14ca4:	udiv	r3, r3, r2
   14ca8:	cmp	r3, r1
   14cac:	bcs	14ccc <__mempcpy_chk@plt+0x3cb8>
   14cb0:	push	{fp, lr}
   14cb4:	mov	fp, sp
   14cb8:	bl	10f3c <__errno_location@plt>
   14cbc:	mov	r1, #12
   14cc0:	str	r1, [r0]
   14cc4:	mov	r0, #0
   14cc8:	pop	{fp, pc}
   14ccc:	mul	r1, r2, r1
   14cd0:	b	14908 <__mempcpy_chk@plt+0x38f4>
   14cd4:	push	{r4, sl, fp, lr}
   14cd8:	add	fp, sp, #8
   14cdc:	sub	sp, sp, #264	; 0x108
   14ce0:	add	r1, sp, #7
   14ce4:	movw	r2, #257	; 0x101
   14ce8:	bl	14d38 <__mempcpy_chk@plt+0x3d24>
   14cec:	mov	r4, #0
   14cf0:	cmp	r0, #0
   14cf4:	bne	14d2c <__mempcpy_chk@plt+0x3d18>
   14cf8:	movw	r1, #22639	; 0x586f
   14cfc:	add	r0, sp, #7
   14d00:	movt	r1, #1
   14d04:	bl	10dd4 <strcmp@plt>
   14d08:	cmp	r0, #0
   14d0c:	beq	14d2c <__mempcpy_chk@plt+0x3d18>
   14d10:	movw	r1, #22641	; 0x5871
   14d14:	add	r0, sp, #7
   14d18:	movt	r1, #1
   14d1c:	bl	10dd4 <strcmp@plt>
   14d20:	mov	r4, r0
   14d24:	cmp	r0, #0
   14d28:	movwne	r4, #1
   14d2c:	mov	r0, r4
   14d30:	sub	sp, fp, #8
   14d34:	pop	{r4, sl, fp, pc}
   14d38:	push	{r4, r5, r6, r7, fp, lr}
   14d3c:	add	fp, sp, #16
   14d40:	mov	r4, r1
   14d44:	mov	r1, #0
   14d48:	mov	r6, r2
   14d4c:	bl	10fa8 <setlocale@plt>
   14d50:	cmp	r0, #0
   14d54:	beq	14d84 <__mempcpy_chk@plt+0x3d70>
   14d58:	mov	r7, r0
   14d5c:	bl	10f30 <strlen@plt>
   14d60:	cmp	r0, r6
   14d64:	bcs	14da4 <__mempcpy_chk@plt+0x3d90>
   14d68:	add	r2, r0, #1
   14d6c:	mov	r0, r4
   14d70:	mov	r1, r7
   14d74:	bl	10e04 <memcpy@plt>
   14d78:	mov	r5, #0
   14d7c:	mov	r0, r5
   14d80:	pop	{r4, r5, r6, r7, fp, pc}
   14d84:	cmp	r6, #0
   14d88:	mov	r5, #22
   14d8c:	movne	r0, #0
   14d90:	strbne	r0, [r4]
   14d94:	movne	r0, r5
   14d98:	popne	{r4, r5, r6, r7, fp, pc}
   14d9c:	mov	r0, r5
   14da0:	pop	{r4, r5, r6, r7, fp, pc}
   14da4:	mov	r5, #34	; 0x22
   14da8:	cmp	r6, #0
   14dac:	beq	14dcc <__mempcpy_chk@plt+0x3db8>
   14db0:	sub	r6, r6, #1
   14db4:	mov	r0, r4
   14db8:	mov	r1, r7
   14dbc:	mov	r2, r6
   14dc0:	bl	10e04 <memcpy@plt>
   14dc4:	mov	r0, #0
   14dc8:	strb	r0, [r4, r6]
   14dcc:	mov	r0, r5
   14dd0:	pop	{r4, r5, r6, r7, fp, pc}
   14dd4:	mov	r1, #0
   14dd8:	b	10fa8 <setlocale@plt>
   14ddc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14de0:	mov	r7, r0
   14de4:	ldr	r6, [pc, #72]	; 14e34 <__mempcpy_chk@plt+0x3e20>
   14de8:	ldr	r5, [pc, #72]	; 14e38 <__mempcpy_chk@plt+0x3e24>
   14dec:	add	r6, pc, r6
   14df0:	add	r5, pc, r5
   14df4:	sub	r6, r6, r5
   14df8:	mov	r8, r1
   14dfc:	mov	r9, r2
   14e00:	bl	10d9c <calloc@plt-0x20>
   14e04:	asrs	r6, r6, #2
   14e08:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14e0c:	mov	r4, #0
   14e10:	add	r4, r4, #1
   14e14:	ldr	r3, [r5], #4
   14e18:	mov	r2, r9
   14e1c:	mov	r1, r8
   14e20:	mov	r0, r7
   14e24:	blx	r3
   14e28:	cmp	r6, r4
   14e2c:	bne	14e10 <__mempcpy_chk@plt+0x3dfc>
   14e30:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14e34:	andeq	r1, r1, r8, lsl r1
   14e38:	andeq	r1, r1, r0, lsl r1
   14e3c:	bx	lr
   14e40:	ldr	r3, [pc, #12]	; 14e54 <__mempcpy_chk@plt+0x3e40>
   14e44:	mov	r1, #0
   14e48:	add	r3, pc, r3
   14e4c:	ldr	r2, [r3]
   14e50:	b	10f48 <__cxa_atexit@plt>
   14e54:	muleq	r1, r4, r2

Disassembly of section .fini:

00014e58 <.fini>:
   14e58:	push	{r3, lr}
   14e5c:	pop	{r3, pc}
