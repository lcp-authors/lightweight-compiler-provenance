
../repos/coreutils/src/cat:     file format elf32-littlearm


Disassembly of section .init:

00010cb4 <.init>:
   10cb4:	push	{r3, lr}
   10cb8:	bl	11c40 <close@plt+0xce4>
   10cbc:	pop	{r3, pc}

Disassembly of section .plt:

00010cc0 <calloc@plt-0x14>:
   10cc0:	push	{lr}		; (str lr, [sp, #-4]!)
   10cc4:	ldr	lr, [pc, #4]	; 10cd0 <calloc@plt-0x4>
   10cc8:	add	lr, pc, lr
   10ccc:	ldr	pc, [lr, #8]!
   10cd0:	andeq	r6, r1, r0, lsr r3

00010cd4 <calloc@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #90112	; 0x16000
   10cdc:	ldr	pc, [ip, #816]!	; 0x330

00010ce0 <fputs_unlocked@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #90112	; 0x16000
   10ce8:	ldr	pc, [ip, #808]!	; 0x328

00010cec <raise@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #90112	; 0x16000
   10cf4:	ldr	pc, [ip, #800]!	; 0x320

00010cf8 <strcmp@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #90112	; 0x16000
   10d00:	ldr	pc, [ip, #792]!	; 0x318

00010d04 <posix_fadvise64@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #90112	; 0x16000
   10d0c:	ldr	pc, [ip, #784]!	; 0x310

00010d10 <read@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #90112	; 0x16000
   10d18:	ldr	pc, [ip, #776]!	; 0x308

00010d1c <fflush@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #90112	; 0x16000
   10d24:	ldr	pc, [ip, #768]!	; 0x300

00010d28 <memmove@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #90112	; 0x16000
   10d30:	ldr	pc, [ip, #760]!	; 0x2f8

00010d34 <free@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #90112	; 0x16000
   10d3c:	ldr	pc, [ip, #752]!	; 0x2f0

00010d40 <_exit@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #90112	; 0x16000
   10d48:	ldr	pc, [ip, #744]!	; 0x2e8

00010d4c <memcpy@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #90112	; 0x16000
   10d54:	ldr	pc, [ip, #736]!	; 0x2e0

00010d58 <mbsinit@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #90112	; 0x16000
   10d60:	ldr	pc, [ip, #728]!	; 0x2d8

00010d64 <memcmp@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #90112	; 0x16000
   10d6c:	ldr	pc, [ip, #720]!	; 0x2d0

00010d70 <stpcpy@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #90112	; 0x16000
   10d78:	ldr	pc, [ip, #712]!	; 0x2c8

00010d7c <fputc_unlocked@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #90112	; 0x16000
   10d84:	ldr	pc, [ip, #704]!	; 0x2c0

00010d88 <dcgettext@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #90112	; 0x16000
   10d90:	ldr	pc, [ip, #696]!	; 0x2b8

00010d94 <realloc@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #90112	; 0x16000
   10d9c:	ldr	pc, [ip, #688]!	; 0x2b0

00010da0 <textdomain@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #90112	; 0x16000
   10da8:	ldr	pc, [ip, #680]!	; 0x2a8

00010dac <iswprint@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #90112	; 0x16000
   10db4:	ldr	pc, [ip, #672]!	; 0x2a0

00010db8 <__fxstat64@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #90112	; 0x16000
   10dc0:	ldr	pc, [ip, #664]!	; 0x298

00010dc4 <copy_file_range@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #90112	; 0x16000
   10dcc:	ldr	pc, [ip, #656]!	; 0x290

00010dd0 <fwrite@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #90112	; 0x16000
   10dd8:	ldr	pc, [ip, #648]!	; 0x288

00010ddc <ioctl@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #90112	; 0x16000
   10de4:	ldr	pc, [ip, #640]!	; 0x280

00010de8 <lseek64@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #90112	; 0x16000
   10df0:	ldr	pc, [ip, #632]!	; 0x278

00010df4 <__ctype_get_mb_cur_max@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #90112	; 0x16000
   10dfc:	ldr	pc, [ip, #624]!	; 0x270

00010e00 <__fpending@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #90112	; 0x16000
   10e08:	ldr	pc, [ip, #616]!	; 0x268

00010e0c <mbrtowc@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #90112	; 0x16000
   10e14:	ldr	pc, [ip, #608]!	; 0x260

00010e18 <error@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #90112	; 0x16000
   10e20:	ldr	pc, [ip, #600]!	; 0x258

00010e24 <open64@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #90112	; 0x16000
   10e2c:	ldr	pc, [ip, #592]!	; 0x250

00010e30 <malloc@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #90112	; 0x16000
   10e38:	ldr	pc, [ip, #584]!	; 0x248

00010e3c <__libc_start_main@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #90112	; 0x16000
   10e44:	ldr	pc, [ip, #576]!	; 0x240

00010e48 <__freading@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #90112	; 0x16000
   10e50:	ldr	pc, [ip, #568]!	; 0x238

00010e54 <__gmon_start__@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #90112	; 0x16000
   10e5c:	ldr	pc, [ip, #560]!	; 0x230

00010e60 <getopt_long@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #90112	; 0x16000
   10e68:	ldr	pc, [ip, #552]!	; 0x228

00010e6c <__ctype_b_loc@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #90112	; 0x16000
   10e74:	ldr	pc, [ip, #544]!	; 0x220

00010e78 <exit@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #90112	; 0x16000
   10e80:	ldr	pc, [ip, #536]!	; 0x218

00010e84 <strlen@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #90112	; 0x16000
   10e8c:	ldr	pc, [ip, #528]!	; 0x210

00010e90 <getpagesize@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #90112	; 0x16000
   10e98:	ldr	pc, [ip, #520]!	; 0x208

00010e9c <__errno_location@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #90112	; 0x16000
   10ea4:	ldr	pc, [ip, #512]!	; 0x200

00010ea8 <__cxa_atexit@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #90112	; 0x16000
   10eb0:	ldr	pc, [ip, #504]!	; 0x1f8

00010eb4 <memset@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #90112	; 0x16000
   10ebc:	ldr	pc, [ip, #496]!	; 0x1f0

00010ec0 <__printf_chk@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #90112	; 0x16000
   10ec8:	ldr	pc, [ip, #488]!	; 0x1e8

00010ecc <write@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #90112	; 0x16000
   10ed4:	ldr	pc, [ip, #480]!	; 0x1e0

00010ed8 <fileno@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #90112	; 0x16000
   10ee0:	ldr	pc, [ip, #472]!	; 0x1d8

00010ee4 <__fprintf_chk@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #90112	; 0x16000
   10eec:	ldr	pc, [ip, #464]!	; 0x1d0

00010ef0 <fclose@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #90112	; 0x16000
   10ef8:	ldr	pc, [ip, #456]!	; 0x1c8

00010efc <fseeko64@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #90112	; 0x16000
   10f04:	ldr	pc, [ip, #448]!	; 0x1c0

00010f08 <setlocale@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #90112	; 0x16000
   10f10:	ldr	pc, [ip, #440]!	; 0x1b8

00010f14 <strrchr@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #90112	; 0x16000
   10f1c:	ldr	pc, [ip, #432]!	; 0x1b0

00010f20 <nl_langinfo@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #90112	; 0x16000
   10f28:	ldr	pc, [ip, #424]!	; 0x1a8

00010f2c <bindtextdomain@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #90112	; 0x16000
   10f34:	ldr	pc, [ip, #416]!	; 0x1a0

00010f38 <aligned_alloc@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #90112	; 0x16000
   10f40:	ldr	pc, [ip, #408]!	; 0x198

00010f44 <strncmp@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #90112	; 0x16000
   10f4c:	ldr	pc, [ip, #400]!	; 0x190

00010f50 <abort@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #90112	; 0x16000
   10f58:	ldr	pc, [ip, #392]!	; 0x188

00010f5c <close@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #90112	; 0x16000
   10f64:	ldr	pc, [ip, #384]!	; 0x180

Disassembly of section .text:

00010f68 <.text>:
   10f68:	push	{r4, lr}
   10f6c:	bl	10e9c <__errno_location@plt>
   10f70:	mov	r2, #5
   10f74:	ldr	r1, [pc, #24]	; 10f94 <close@plt+0x38>
   10f78:	ldr	r4, [r0]
   10f7c:	mov	r0, #0
   10f80:	bl	10d88 <dcgettext@plt>
   10f84:	mov	r1, r4
   10f88:	mov	r2, r0
   10f8c:	mov	r0, #1
   10f90:	bl	10e18 <error@plt>
   10f94:	andeq	r5, r1, r0, asr #15
   10f98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f9c:	sub	sp, sp, #244	; 0xf4
   10fa0:	mov	r9, r0
   10fa4:	str	r0, [sp, #80]	; 0x50
   10fa8:	ldr	r0, [r1]
   10fac:	mov	sl, r1
   10fb0:	str	r1, [sp, #88]	; 0x58
   10fb4:	bl	122ec <close@plt+0x1390>
   10fb8:	ldr	r1, [pc, #3032]	; 11b98 <close@plt+0xc3c>
   10fbc:	mov	r0, #6
   10fc0:	mov	fp, #0
   10fc4:	bl	10f08 <setlocale@plt>
   10fc8:	ldr	r7, [pc, #3020]	; 11b9c <close@plt+0xc40>
   10fcc:	ldr	r1, [pc, #3020]	; 11ba0 <close@plt+0xc44>
   10fd0:	ldr	r0, [pc, #3020]	; 11ba4 <close@plt+0xc48>
   10fd4:	ldr	r5, [pc, #3020]	; 11ba8 <close@plt+0xc4c>
   10fd8:	bl	10f2c <bindtextdomain@plt>
   10fdc:	mov	r6, fp
   10fe0:	ldr	r0, [pc, #3004]	; 11ba4 <close@plt+0xc48>
   10fe4:	mov	r4, fp
   10fe8:	mov	r8, #1
   10fec:	bl	10da0 <textdomain@plt>
   10ff0:	ldr	r0, [pc, #2996]	; 11bac <close@plt+0xc50>
   10ff4:	bl	156c4 <close@plt+0x4768>
   10ff8:	str	fp, [sp, #40]	; 0x28
   10ffc:	str	fp, [sp, #20]
   11000:	str	fp, [sp, #64]	; 0x40
   11004:	str	fp, [sp, #44]	; 0x2c
   11008:	str	r4, [sp]
   1100c:	mov	r3, r7
   11010:	mov	r2, r5
   11014:	mov	r1, sl
   11018:	mov	r0, r9
   1101c:	bl	10e60 <getopt_long@plt>
   11020:	cmn	r0, #1
   11024:	beq	1111c <close@plt+0x1c0>
   11028:	cmp	r0, #98	; 0x62
   1102c:	beq	11114 <close@plt+0x1b8>
   11030:	ble	1105c <close@plt+0x100>
   11034:	cmp	r0, #115	; 0x73
   11038:	beq	11104 <close@plt+0x1a8>
   1103c:	ble	11080 <close@plt+0x124>
   11040:	cmp	r0, #117	; 0x75
   11044:	beq	11008 <close@plt+0xac>
   11048:	blt	110f8 <close@plt+0x19c>
   1104c:	cmp	r0, #118	; 0x76
   11050:	bne	1110c <close@plt+0x1b0>
   11054:	str	r8, [sp, #40]	; 0x28
   11058:	b	11008 <close@plt+0xac>
   1105c:	cmp	r0, #65	; 0x41
   11060:	beq	11098 <close@plt+0x13c>
   11064:	bgt	110a8 <close@plt+0x14c>
   11068:	cmn	r0, #3
   1106c:	beq	110c0 <close@plt+0x164>
   11070:	cmn	r0, #2
   11074:	bne	1110c <close@plt+0x1b0>
   11078:	mov	r0, #0
   1107c:	bl	11d9c <close@plt+0xe40>
   11080:	cmp	r0, #101	; 0x65
   11084:	beq	1109c <close@plt+0x140>
   11088:	cmp	r0, #110	; 0x6e
   1108c:	bne	1110c <close@plt+0x1b0>
   11090:	str	r8, [sp, #44]	; 0x2c
   11094:	b	11008 <close@plt+0xac>
   11098:	mov	fp, r8
   1109c:	str	r8, [sp, #40]	; 0x28
   110a0:	str	r8, [sp, #20]
   110a4:	b	11008 <close@plt+0xac>
   110a8:	cmp	r0, #69	; 0x45
   110ac:	beq	110a0 <close@plt+0x144>
   110b0:	cmp	r0, #84	; 0x54
   110b4:	bne	1110c <close@plt+0x1b0>
   110b8:	mov	fp, r8
   110bc:	b	11008 <close@plt+0xac>
   110c0:	ldr	r3, [pc, #2792]	; 11bb0 <close@plt+0xc54>
   110c4:	ldr	r0, [pc, #2792]	; 11bb4 <close@plt+0xc58>
   110c8:	ldr	r1, [pc, #2792]	; 11bb8 <close@plt+0xc5c>
   110cc:	ldr	r2, [pc, #2792]	; 11bbc <close@plt+0xc60>
   110d0:	str	r4, [sp, #8]
   110d4:	ldr	r0, [r0]
   110d8:	ldr	r3, [r3]
   110dc:	str	r1, [sp, #4]
   110e0:	str	r2, [sp]
   110e4:	ldr	r1, [pc, #2772]	; 11bc0 <close@plt+0xc64>
   110e8:	ldr	r2, [pc, #2772]	; 11bc4 <close@plt+0xc68>
   110ec:	bl	146b8 <close@plt+0x375c>
   110f0:	mov	r0, #0
   110f4:	bl	10e78 <exit@plt>
   110f8:	mov	fp, r8
   110fc:	str	r8, [sp, #40]	; 0x28
   11100:	b	11008 <close@plt+0xac>
   11104:	str	r8, [sp, #64]	; 0x40
   11108:	b	11008 <close@plt+0xac>
   1110c:	mov	r0, #1
   11110:	bl	11d9c <close@plt+0xe40>
   11114:	mov	r6, r8
   11118:	b	11090 <close@plt+0x134>
   1111c:	str	r0, [sp, #48]	; 0x30
   11120:	add	r2, sp, #136	; 0x88
   11124:	mov	r1, #1
   11128:	mov	r0, #3
   1112c:	bl	10db8 <__fxstat64@plt>
   11130:	cmp	r0, #0
   11134:	blt	11ab8 <close@plt+0xb5c>
   11138:	ldr	r3, [sp, #192]	; 0xc0
   1113c:	ldr	r1, [pc, #2692]	; 11bc8 <close@plt+0xc6c>
   11140:	ldr	ip, [pc, #2692]	; 11bcc <close@plt+0xc70>
   11144:	sub	lr, r3, #131072	; 0x20000
   11148:	cmp	lr, ip
   1114c:	ldr	r2, [sp, #152]	; 0x98
   11150:	movls	sl, r3
   11154:	ldr	r3, [r1]
   11158:	ldr	r9, [pc, #2672]	; 11bd0 <close@plt+0xc74>
   1115c:	str	r3, [sp, #76]	; 0x4c
   11160:	and	r3, r2, #61440	; 0xf000
   11164:	str	r3, [sp, #92]	; 0x5c
   11168:	ldrd	r2, [sp, #136]	; 0x88
   1116c:	ldr	r0, [pc, #2656]	; 11bd4 <close@plt+0xc78>
   11170:	movhi	sl, #131072	; 0x20000
   11174:	strd	r2, [sp, #112]	; 0x70
   11178:	str	r0, [r9]
   1117c:	bl	10e90 <getpagesize@plt>
   11180:	ldr	r2, [sp, #44]	; 0x2c
   11184:	eor	r6, r6, #1
   11188:	ldr	r3, [sp, #40]	; 0x28
   1118c:	orr	r3, r3, fp
   11190:	str	r0, [sp, #84]	; 0x54
   11194:	ldrd	r0, [sp, #232]	; 0xe8
   11198:	strd	r0, [sp, #120]	; 0x78
   1119c:	and	r1, r2, r6
   111a0:	str	r1, [sp, #68]	; 0x44
   111a4:	ldr	r1, [sp, #64]	; 0x40
   111a8:	orr	r3, r1, r3
   111ac:	str	r3, [sp, #108]	; 0x6c
   111b0:	ldr	r3, [sp, #20]
   111b4:	orr	r3, r2, r3
   111b8:	str	r3, [sp, #104]	; 0x68
   111bc:	mov	r3, #1
   111c0:	str	r3, [sp, #72]	; 0x48
   111c4:	mov	r3, #0
   111c8:	str	r3, [sp, #100]	; 0x64
   111cc:	ldr	r3, [sp, #76]	; 0x4c
   111d0:	ldr	r2, [sp, #80]	; 0x50
   111d4:	ldr	r1, [pc, #2552]	; 11bd4 <close@plt+0xc78>
   111d8:	cmp	r3, r2
   111dc:	ldrlt	r3, [sp, #88]	; 0x58
   111e0:	ldrlt	r2, [sp, #76]	; 0x4c
   111e4:	ldrge	r4, [r9]
   111e8:	ldrlt	r3, [r3, r2, lsl #2]
   111ec:	movlt	r4, r3
   111f0:	mov	r0, r4
   111f4:	strlt	r3, [r9]
   111f8:	bl	10cf8 <strcmp@plt>
   111fc:	subs	r3, r0, #0
   11200:	str	r3, [sp, #96]	; 0x60
   11204:	bne	118c8 <close@plt+0x96c>
   11208:	str	r3, [r9, #4]
   1120c:	mov	r3, #1
   11210:	str	r3, [sp, #100]	; 0x64
   11214:	ldr	r4, [r9, #4]
   11218:	add	r2, sp, #136	; 0x88
   1121c:	mov	r1, r4
   11220:	mov	r0, #3
   11224:	bl	10db8 <__fxstat64@plt>
   11228:	cmp	r0, #0
   1122c:	blt	119c0 <close@plt+0xa64>
   11230:	ldr	r1, [sp, #192]	; 0xc0
   11234:	ldr	ip, [pc, #2448]	; 11bcc <close@plt+0xc70>
   11238:	sub	lr, r1, #131072	; 0x20000
   1123c:	mov	r6, #0
   11240:	mov	r7, #0
   11244:	cmp	lr, ip
   11248:	mov	r3, #2
   1124c:	movhi	r1, #131072	; 0x20000
   11250:	str	r3, [sp, #8]
   11254:	mov	r0, r4
   11258:	mov	r3, r7
   1125c:	strd	r6, [sp]
   11260:	mov	r2, r6
   11264:	str	r1, [sp, #52]	; 0x34
   11268:	bl	121e4 <close@plt+0x1288>
   1126c:	ldr	r3, [sp, #92]	; 0x5c
   11270:	cmp	r3, #32768	; 0x8000
   11274:	beq	11918 <close@plt+0x9bc>
   11278:	ldr	r3, [sp, #104]	; 0x68
   1127c:	cmp	r3, #0
   11280:	bne	11394 <close@plt+0x438>
   11284:	ldr	r3, [sp, #108]	; 0x6c
   11288:	cmp	r3, #0
   1128c:	mov	r7, r3
   11290:	bne	11394 <close@plt+0x438>
   11294:	ldr	r3, [sp, #92]	; 0x5c
   11298:	cmp	r3, #32768	; 0x8000
   1129c:	beq	11a40 <close@plt+0xae4>
   112a0:	ldr	r3, [sp, #52]	; 0x34
   112a4:	ldr	r0, [sp, #84]	; 0x54
   112a8:	cmp	sl, r3
   112ac:	movge	r4, sl
   112b0:	movlt	r4, r3
   112b4:	mov	r1, r4
   112b8:	bl	147b4 <close@plt+0x3858>
   112bc:	mov	r5, #1
   112c0:	str	r0, [sp, #28]
   112c4:	mov	r8, r0
   112c8:	b	112ec <close@plt+0x390>
   112cc:	cmp	r0, #0
   112d0:	beq	11a38 <close@plt+0xadc>
   112d4:	mov	r2, r0
   112d8:	mov	r1, r8
   112dc:	mov	r0, r5
   112e0:	bl	1227c <close@plt+0x1320>
   112e4:	cmp	r6, r0
   112e8:	bne	11a10 <close@plt+0xab4>
   112ec:	mov	r2, r4
   112f0:	mov	r1, r8
   112f4:	ldr	r0, [r9, #4]
   112f8:	bl	141c4 <close@plt+0x3268>
   112fc:	cmn	r0, #1
   11300:	mov	r6, r0
   11304:	bne	112cc <close@plt+0x370>
   11308:	bl	10e9c <__errno_location@plt>
   1130c:	ldr	r2, [r9]
   11310:	mov	r1, #3
   11314:	ldr	r4, [r0]
   11318:	mov	r0, #0
   1131c:	bl	14028 <close@plt+0x30cc>
   11320:	mov	r1, r4
   11324:	ldr	r2, [pc, #2220]	; 11bd8 <close@plt+0xc7c>
   11328:	mov	r3, r0
   1132c:	mov	r0, #0
   11330:	bl	10e18 <error@plt>
   11334:	ldr	r3, [sp, #72]	; 0x48
   11338:	and	r3, r3, r7
   1133c:	str	r3, [sp, #72]	; 0x48
   11340:	ldr	r0, [sp, #28]
   11344:	bl	12224 <close@plt+0x12c8>
   11348:	ldr	r3, [sp, #96]	; 0x60
   1134c:	cmp	r3, #0
   11350:	bne	119ac <close@plt+0xa50>
   11354:	ldr	r3, [sp, #76]	; 0x4c
   11358:	ldr	r2, [sp, #80]	; 0x50
   1135c:	add	r3, r3, #1
   11360:	cmp	r2, r3
   11364:	str	r3, [sp, #76]	; 0x4c
   11368:	bgt	111cc <close@plt+0x270>
   1136c:	ldrb	r3, [r9, #12]
   11370:	cmp	r3, #0
   11374:	bne	119f8 <close@plt+0xa9c>
   11378:	ldr	r3, [sp, #100]	; 0x64
   1137c:	cmp	r3, #0
   11380:	bne	11acc <close@plt+0xb70>
   11384:	ldr	r3, [sp, #72]	; 0x48
   11388:	eor	r0, r3, #1
   1138c:	add	sp, sp, #244	; 0xf4
   11390:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11394:	ldr	r3, [sp, #52]	; 0x34
   11398:	ldr	r0, [sp, #84]	; 0x54
   1139c:	add	r1, r3, #1
   113a0:	bl	147b4 <close@plt+0x3858>
   113a4:	ldr	r3, [sp, #52]	; 0x34
   113a8:	cmp	r3, #536870912	; 0x20000000
   113ac:	str	r0, [sp, #28]
   113b0:	beq	11ac8 <close@plt+0xb6c>
   113b4:	ldr	r3, [sp, #52]	; 0x34
   113b8:	mvn	r2, #-2147483648	; 0x80000000
   113bc:	sub	r2, r2, sl
   113c0:	lsl	r3, r3, #2
   113c4:	cmp	r2, r3
   113c8:	blt	11ac8 <close@plt+0xb6c>
   113cc:	add	r3, sl, r3
   113d0:	cmn	r3, #-2147483628	; 0x80000014
   113d4:	bgt	11ac8 <close@plt+0xb6c>
   113d8:	add	r1, r3, #19
   113dc:	ldr	r0, [sp, #84]	; 0x54
   113e0:	bl	147b4 <close@plt+0x3858>
   113e4:	ldr	r1, [sp, #28]
   113e8:	ldr	r7, [r9, #8]
   113ec:	add	r2, r1, #1
   113f0:	mov	r6, r2
   113f4:	str	r2, [sp, #60]	; 0x3c
   113f8:	str	r1, [sp, #16]
   113fc:	mov	r3, r0
   11400:	str	r0, [sp, #24]
   11404:	mov	r5, r3
   11408:	add	r0, r0, sl
   1140c:	mov	r3, #1
   11410:	str	r0, [sp, #32]
   11414:	str	r3, [sp, #56]	; 0x38
   11418:	ldr	r3, [sp, #32]
   1141c:	cmp	r5, r3
   11420:	bcc	11474 <close@plt+0x518>
   11424:	ldr	r4, [sp, #24]
   11428:	mov	r8, #1
   1142c:	mov	r2, sl
   11430:	mov	r1, r4
   11434:	mov	r0, r8
   11438:	bl	1227c <close@plt+0x1320>
   1143c:	cmp	sl, r0
   11440:	bne	11a10 <close@plt+0xab4>
   11444:	add	r4, r4, sl
   11448:	sub	r3, r5, r4
   1144c:	cmp	sl, r3
   11450:	ble	1142c <close@plt+0x4d0>
   11454:	mov	r1, r4
   11458:	ldr	r4, [sp, #24]
   1145c:	mov	r2, r3
   11460:	mov	r0, r4
   11464:	str	r3, [sp, #36]	; 0x24
   11468:	bl	10d28 <memmove@plt>
   1146c:	ldr	r3, [sp, #36]	; 0x24
   11470:	add	r5, r4, r3
   11474:	ldr	r3, [sp, #16]
   11478:	cmp	r3, r6
   1147c:	bcs	115f4 <close@plt+0x698>
   11480:	ldr	r3, [sp, #56]	; 0x38
   11484:	cmp	r3, #0
   11488:	mov	r3, #0
   1148c:	str	r3, [sp, #132]	; 0x84
   11490:	bne	117a0 <close@plt+0x844>
   11494:	ldr	r3, [sp, #24]
   11498:	sub	r4, r5, r3
   1149c:	cmp	r4, #0
   114a0:	ble	114c0 <close@plt+0x564>
   114a4:	ldr	r5, [sp, #24]
   114a8:	mov	r2, r4
   114ac:	mov	r1, r5
   114b0:	mov	r0, #1
   114b4:	bl	1227c <close@plt+0x1320>
   114b8:	cmp	r4, r0
   114bc:	bne	11b94 <close@plt+0xc38>
   114c0:	ldr	r6, [r9, #4]
   114c4:	mov	r0, r6
   114c8:	ldr	r2, [sp, #52]	; 0x34
   114cc:	ldr	r1, [sp, #28]
   114d0:	bl	141c4 <close@plt+0x3268>
   114d4:	cmn	r0, #1
   114d8:	beq	11820 <close@plt+0x8c4>
   114dc:	cmp	r0, #0
   114e0:	beq	11894 <close@plt+0x938>
   114e4:	ldr	r2, [sp, #28]
   114e8:	mov	r3, #10
   114ec:	ldr	r6, [sp, #60]	; 0x3c
   114f0:	strb	r3, [r2, r0]
   114f4:	add	r3, r2, r0
   114f8:	str	r3, [sp, #16]
   114fc:	mov	r3, r2
   11500:	ldrb	r4, [r3]
   11504:	cmp	r4, #10
   11508:	beq	11418 <close@plt+0x4bc>
   1150c:	ldrb	r3, [r9, #12]
   11510:	cmp	r3, #0
   11514:	movne	r3, #13
   11518:	strbne	r3, [r5]
   1151c:	movne	r3, #0
   11520:	strbne	r3, [r9, #12]
   11524:	ldr	r3, [sp, #44]	; 0x2c
   11528:	addne	r5, r5, #1
   1152c:	cmp	r7, #0
   11530:	movlt	r3, #0
   11534:	andge	r3, r3, #1
   11538:	cmp	r3, #0
   1153c:	bne	11784 <close@plt+0x828>
   11540:	ldr	r3, [sp, #40]	; 0x28
   11544:	cmp	r3, #0
   11548:	bne	116b4 <close@plt+0x758>
   1154c:	ldrb	r8, [r9, #12]
   11550:	mov	ip, r3
   11554:	mov	lr, #10
   11558:	mov	r2, #94	; 0x5e
   1155c:	mov	r7, #77	; 0x4d
   11560:	mov	r1, #73	; 0x49
   11564:	b	11584 <close@plt+0x628>
   11568:	mov	r0, r5
   1156c:	ldrb	r3, [r6]
   11570:	strb	r2, [r0], #2
   11574:	strb	r1, [r5, #1]
   11578:	mov	r5, r0
   1157c:	add	r6, r6, #1
   11580:	mov	r4, r3
   11584:	cmp	r4, #9
   11588:	movne	r3, #0
   1158c:	andeq	r3, fp, #1
   11590:	cmp	r3, #0
   11594:	bne	11568 <close@plt+0x60c>
   11598:	cmp	r4, #10
   1159c:	beq	116a4 <close@plt+0x748>
   115a0:	cmp	r4, #13
   115a4:	ldrb	r3, [r6]
   115a8:	beq	115b8 <close@plt+0x65c>
   115ac:	strb	r4, [r5]
   115b0:	add	r5, r5, #1
   115b4:	b	1157c <close@plt+0x620>
   115b8:	ldr	r0, [sp, #20]
   115bc:	cmp	r3, #10
   115c0:	movne	r0, #0
   115c4:	andeq	r0, r0, #1
   115c8:	cmp	r0, #0
   115cc:	beq	115ac <close@plt+0x650>
   115d0:	ldr	r3, [sp, #16]
   115d4:	cmp	r6, r3
   115d8:	beq	11810 <close@plt+0x8b4>
   115dc:	mov	r0, r5
   115e0:	mov	r3, lr
   115e4:	strb	r2, [r0], #2
   115e8:	strb	r7, [r5, #1]
   115ec:	mov	r5, r0
   115f0:	b	1157c <close@plt+0x620>
   115f4:	add	r7, r7, #1
   115f8:	cmp	r7, #0
   115fc:	ble	11648 <close@plt+0x6ec>
   11600:	cmp	r7, #1
   11604:	beq	11624 <close@plt+0x6c8>
   11608:	ldr	r3, [sp, #64]	; 0x40
   1160c:	cmp	r3, #0
   11610:	ldrbne	r4, [r6]
   11614:	movne	r7, #2
   11618:	addne	r6, r6, #1
   1161c:	bne	11504 <close@plt+0x5a8>
   11620:	mov	r7, #2
   11624:	ldr	r3, [sp, #68]	; 0x44
   11628:	cmp	r3, #0
   1162c:	beq	11648 <close@plt+0x6ec>
   11630:	bl	11d2c <close@plt+0xdd0>
   11634:	ldr	r3, [pc, #1440]	; 11bdc <close@plt+0xc80>
   11638:	mov	r0, r5
   1163c:	ldr	r1, [r3, #24]
   11640:	bl	10d70 <stpcpy@plt>
   11644:	mov	r5, r0
   11648:	ldr	r3, [sp, #20]
   1164c:	cmp	r3, #0
   11650:	beq	1168c <close@plt+0x730>
   11654:	ldrb	r3, [r9, #12]
   11658:	cmp	r3, #0
   1165c:	beq	11680 <close@plt+0x724>
   11660:	mov	r3, r5
   11664:	mov	r1, #94	; 0x5e
   11668:	mov	r2, #77	; 0x4d
   1166c:	strb	r1, [r3], #2
   11670:	strb	r2, [r5, #1]
   11674:	mov	r5, r3
   11678:	mov	r3, #0
   1167c:	strb	r3, [r9, #12]
   11680:	mov	r3, #36	; 0x24
   11684:	strb	r3, [r5]
   11688:	add	r5, r5, #1
   1168c:	mov	r3, #10
   11690:	strb	r3, [r5]
   11694:	mov	r3, r6
   11698:	add	r5, r5, #1
   1169c:	add	r6, r6, #1
   116a0:	b	11500 <close@plt+0x5a4>
   116a4:	cmp	ip, #0
   116a8:	strbne	r8, [r9, #12]
   116ac:	ldr	r7, [sp, #48]	; 0x30
   116b0:	b	11418 <close@plt+0x4bc>
   116b4:	eor	r2, fp, #1
   116b8:	mov	r1, #94	; 0x5e
   116bc:	mov	r0, #9
   116c0:	mov	lr, #77	; 0x4d
   116c4:	mov	ip, #45	; 0x2d
   116c8:	mov	r7, #63	; 0x3f
   116cc:	b	11718 <close@plt+0x7bc>
   116d0:	cmp	r4, #126	; 0x7e
   116d4:	strbls	r4, [r5]
   116d8:	addls	r5, r5, #1
   116dc:	bls	11714 <close@plt+0x7b8>
   116e0:	cmp	r4, #127	; 0x7f
   116e4:	beq	11770 <close@plt+0x814>
   116e8:	cmp	r4, #159	; 0x9f
   116ec:	strb	lr, [r5]
   116f0:	strb	ip, [r5, #1]
   116f4:	bls	1175c <close@plt+0x800>
   116f8:	cmp	r4, #255	; 0xff
   116fc:	subne	r4, r4, #128	; 0x80
   11700:	strbne	r4, [r5, #2]
   11704:	strbeq	r1, [r5, #2]
   11708:	strbeq	r7, [r5, #3]
   1170c:	addne	r5, r5, #3
   11710:	addeq	r5, r5, #4
   11714:	ldrb	r4, [r6], #1
   11718:	cmp	r4, #31
   1171c:	bhi	116d0 <close@plt+0x774>
   11720:	cmp	r4, #9
   11724:	movne	r3, #0
   11728:	andeq	r3, r2, #1
   1172c:	cmp	r3, #0
   11730:	strbne	r0, [r5]
   11734:	addne	r5, r5, #1
   11738:	bne	11714 <close@plt+0x7b8>
   1173c:	cmp	r4, #10
   11740:	beq	116ac <close@plt+0x750>
   11744:	mov	r3, r5
   11748:	add	r4, r4, #64	; 0x40
   1174c:	strb	r1, [r3], #2
   11750:	strb	r4, [r5, #1]
   11754:	mov	r5, r3
   11758:	b	11714 <close@plt+0x7b8>
   1175c:	sub	r4, r4, #64	; 0x40
   11760:	strb	r4, [r5, #3]
   11764:	strb	r1, [r5, #2]
   11768:	add	r5, r5, #4
   1176c:	b	11714 <close@plt+0x7b8>
   11770:	mov	r3, r5
   11774:	strb	r1, [r3], #2
   11778:	strb	r7, [r5, #1]
   1177c:	mov	r5, r3
   11780:	b	11714 <close@plt+0x7b8>
   11784:	bl	11d2c <close@plt+0xdd0>
   11788:	ldr	r3, [pc, #1100]	; 11bdc <close@plt+0xc80>
   1178c:	mov	r0, r5
   11790:	ldr	r1, [r3, #24]
   11794:	bl	10d70 <stpcpy@plt>
   11798:	mov	r5, r0
   1179c:	b	11540 <close@plt+0x5e4>
   117a0:	ldr	r6, [r9, #4]
   117a4:	add	r2, sp, #132	; 0x84
   117a8:	mov	r0, r6
   117ac:	ldr	r1, [pc, #1068]	; 11be0 <close@plt+0xc84>
   117b0:	bl	10ddc <ioctl@plt>
   117b4:	cmp	r0, #0
   117b8:	blt	117cc <close@plt+0x870>
   117bc:	ldr	r3, [sp, #132]	; 0x84
   117c0:	cmp	r3, #0
   117c4:	bne	114c4 <close@plt+0x568>
   117c8:	b	11494 <close@plt+0x538>
   117cc:	bl	10e9c <__errno_location@plt>
   117d0:	ldr	r8, [r0]
   117d4:	sub	r3, r8, #19
   117d8:	cmp	r3, #19
   117dc:	movhi	r3, #1
   117e0:	ldrls	r1, [pc, #1020]	; 11be4 <close@plt+0xc88>
   117e4:	sub	r2, r8, #95	; 0x5f
   117e8:	clz	r2, r2
   117ec:	mvnls	r3, r1, lsr r3
   117f0:	and	r3, r3, #1
   117f4:	lsr	r2, r2, #5
   117f8:	eor	r3, r3, #1
   117fc:	orrs	r4, r2, r3
   11800:	beq	11b58 <close@plt+0xbfc>
   11804:	mov	r3, #0
   11808:	str	r3, [sp, #56]	; 0x38
   1180c:	b	117bc <close@plt+0x860>
   11810:	mov	ip, r0
   11814:	mov	r8, r0
   11818:	mov	r3, lr
   1181c:	b	1157c <close@plt+0x620>
   11820:	bl	10e9c <__errno_location@plt>
   11824:	ldr	r2, [r9]
   11828:	mov	r1, #3
   1182c:	ldr	r6, [sp, #24]
   11830:	sub	r5, r5, r6
   11834:	ldr	r4, [r0]
   11838:	mov	r0, #0
   1183c:	bl	14028 <close@plt+0x30cc>
   11840:	mov	r1, r4
   11844:	ldr	r2, [pc, #908]	; 11bd8 <close@plt+0xc7c>
   11848:	mov	r3, r0
   1184c:	mov	r0, #0
   11850:	bl	10e18 <error@plt>
   11854:	cmp	r5, #0
   11858:	ble	11874 <close@plt+0x918>
   1185c:	mov	r2, r5
   11860:	mov	r1, r6
   11864:	mov	r0, #1
   11868:	bl	1227c <close@plt+0x1320>
   1186c:	cmp	r5, r0
   11870:	bne	11b94 <close@plt+0xc38>
   11874:	mov	r4, #0
   11878:	str	r7, [r9, #8]
   1187c:	ldr	r3, [sp, #72]	; 0x48
   11880:	ldr	r0, [sp, #24]
   11884:	and	r3, r3, r4
   11888:	str	r3, [sp, #72]	; 0x48
   1188c:	bl	12224 <close@plt+0x12c8>
   11890:	b	11340 <close@plt+0x3e4>
   11894:	ldr	r3, [sp, #24]
   11898:	sub	r5, r5, r3
   1189c:	cmp	r5, #0
   118a0:	ble	118bc <close@plt+0x960>
   118a4:	mov	r2, r5
   118a8:	mov	r1, r3
   118ac:	mov	r0, #1
   118b0:	bl	1227c <close@plt+0x1320>
   118b4:	cmp	r5, r0
   118b8:	bne	11b94 <close@plt+0xc38>
   118bc:	str	r7, [r9, #8]
   118c0:	mov	r4, #1
   118c4:	b	1187c <close@plt+0x920>
   118c8:	mov	r0, r4
   118cc:	mov	r1, #0
   118d0:	bl	10e24 <open64@plt>
   118d4:	cmp	r0, #0
   118d8:	str	r0, [r9, #4]
   118dc:	bge	11214 <close@plt+0x2b8>
   118e0:	bl	10e9c <__errno_location@plt>
   118e4:	mov	r3, #0
   118e8:	ldr	r2, [r9]
   118ec:	mov	r1, #3
   118f0:	str	r3, [sp, #72]	; 0x48
   118f4:	ldr	r4, [r0]
   118f8:	mov	r0, r3
   118fc:	bl	14028 <close@plt+0x30cc>
   11900:	mov	r1, r4
   11904:	ldr	r2, [pc, #716]	; 11bd8 <close@plt+0xc7c>
   11908:	mov	r3, r0
   1190c:	mov	r0, #0
   11910:	bl	10e18 <error@plt>
   11914:	b	11354 <close@plt+0x3f8>
   11918:	ldrd	r2, [sp, #136]	; 0x88
   1191c:	ldrd	r0, [sp, #112]	; 0x70
   11920:	cmp	r1, r3
   11924:	cmpeq	r0, r2
   11928:	bne	11278 <close@plt+0x31c>
   1192c:	ldrd	r2, [sp, #232]	; 0xe8
   11930:	ldrd	r0, [sp, #120]	; 0x78
   11934:	cmp	r1, r3
   11938:	cmpeq	r0, r2
   1193c:	bne	11278 <close@plt+0x31c>
   11940:	mov	r1, #1
   11944:	mov	r2, r6
   11948:	mov	r3, r7
   1194c:	str	r1, [sp]
   11950:	ldr	r0, [r9, #4]
   11954:	bl	10de8 <lseek64@plt>
   11958:	ldrd	r2, [sp, #184]	; 0xb8
   1195c:	cmp	r0, r2
   11960:	sbcs	r3, r1, r3
   11964:	bge	11278 <close@plt+0x31c>
   11968:	mov	r2, #5
   1196c:	ldr	r1, [pc, #628]	; 11be8 <close@plt+0xc8c>
   11970:	mov	r0, #0
   11974:	bl	10d88 <dcgettext@plt>
   11978:	ldr	r2, [r9]
   1197c:	mov	r1, #3
   11980:	mov	r4, r0
   11984:	mov	r0, #0
   11988:	bl	14028 <close@plt+0x30cc>
   1198c:	mov	r1, #0
   11990:	mov	r2, r4
   11994:	mov	r3, r0
   11998:	mov	r0, r1
   1199c:	bl	10e18 <error@plt>
   119a0:	mov	r3, #0
   119a4:	str	r3, [sp, #72]	; 0x48
   119a8:	b	11348 <close@plt+0x3ec>
   119ac:	ldr	r0, [r9, #4]
   119b0:	bl	10f5c <close@plt>
   119b4:	cmp	r0, #0
   119b8:	bge	11354 <close@plt+0x3f8>
   119bc:	b	118e0 <close@plt+0x984>
   119c0:	bl	10e9c <__errno_location@plt>
   119c4:	mov	r3, #0
   119c8:	ldr	r2, [r9]
   119cc:	mov	r1, #3
   119d0:	str	r3, [sp, #72]	; 0x48
   119d4:	ldr	r4, [r0]
   119d8:	mov	r0, r3
   119dc:	bl	14028 <close@plt+0x30cc>
   119e0:	mov	r1, r4
   119e4:	ldr	r2, [pc, #492]	; 11bd8 <close@plt+0xc7c>
   119e8:	mov	r3, r0
   119ec:	mov	r0, #0
   119f0:	bl	10e18 <error@plt>
   119f4:	b	11348 <close@plt+0x3ec>
   119f8:	mov	r2, #1
   119fc:	mov	r0, r2
   11a00:	ldr	r1, [pc, #484]	; 11bec <close@plt+0xc90>
   11a04:	bl	1227c <close@plt+0x1320>
   11a08:	cmp	r0, #1
   11a0c:	beq	11378 <close@plt+0x41c>
   11a10:	bl	10e9c <__errno_location@plt>
   11a14:	ldr	r1, [pc, #468]	; 11bf0 <close@plt+0xc94>
   11a18:	mov	r2, #5
   11a1c:	ldr	r4, [r0]
   11a20:	mov	r0, #0
   11a24:	bl	10d88 <dcgettext@plt>
   11a28:	mov	r1, r4
   11a2c:	mov	r2, r0
   11a30:	mov	r0, #1
   11a34:	bl	10e18 <error@plt>
   11a38:	mov	r7, #1
   11a3c:	b	11334 <close@plt+0x3d8>
   11a40:	ldr	r3, [sp, #152]	; 0x98
   11a44:	and	r3, r3, #61440	; 0xf000
   11a48:	cmp	r3, #32768	; 0x8000
   11a4c:	moveq	r8, r7
   11a50:	moveq	r5, r8
   11a54:	moveq	r4, #1
   11a58:	bne	112a0 <close@plt+0x344>
   11a5c:	mov	r3, #0
   11a60:	mov	r2, #1073741824	; 0x40000000
   11a64:	str	r2, [sp]
   11a68:	str	r8, [sp, #4]
   11a6c:	mov	r1, r3
   11a70:	mov	r2, r4
   11a74:	ldr	r0, [r9, #4]
   11a78:	bl	10dc4 <copy_file_range@plt>
   11a7c:	cmn	r0, #1
   11a80:	beq	11af4 <close@plt+0xb98>
   11a84:	cmp	r0, #0
   11a88:	bne	11aec <close@plt+0xb90>
   11a8c:	cmp	r5, #0
   11a90:	movne	r6, #1
   11a94:	beq	112a0 <close@plt+0x344>
   11a98:	ldr	r3, [sp, #72]	; 0x48
   11a9c:	cmp	r6, #0
   11aa0:	movle	r3, #0
   11aa4:	andgt	r3, r3, #1
   11aa8:	str	r3, [sp, #72]	; 0x48
   11aac:	mov	r3, #0
   11ab0:	str	r3, [sp, #28]
   11ab4:	b	11340 <close@plt+0x3e4>
   11ab8:	bl	10e9c <__errno_location@plt>
   11abc:	mov	r2, #5
   11ac0:	ldr	r1, [pc, #300]	; 11bf4 <close@plt+0xc98>
   11ac4:	b	11a1c <close@plt+0xac0>
   11ac8:	bl	14d10 <close@plt+0x3db4>
   11acc:	mov	r0, #0
   11ad0:	bl	10f5c <close@plt>
   11ad4:	cmp	r0, #0
   11ad8:	bge	11384 <close@plt+0x428>
   11adc:	bl	10e9c <__errno_location@plt>
   11ae0:	mov	r2, #5
   11ae4:	ldr	r1, [pc, #268]	; 11bf8 <close@plt+0xc9c>
   11ae8:	b	11a1c <close@plt+0xac0>
   11aec:	mov	r5, r4
   11af0:	b	11a5c <close@plt+0xb00>
   11af4:	mov	r6, r0
   11af8:	bl	10e9c <__errno_location@plt>
   11afc:	ldr	r5, [r0]
   11b00:	cmp	r5, #95	; 0x5f
   11b04:	cmpne	r5, #38	; 0x26
   11b08:	moveq	r4, #1
   11b0c:	movne	r4, #0
   11b10:	cmp	r5, #26
   11b14:	movhi	r3, #1
   11b18:	ldrls	r3, [pc, #220]	; 11bfc <close@plt+0xca0>
   11b1c:	mvnls	r3, r3, lsr r5
   11b20:	and	r3, r3, #1
   11b24:	eor	r3, r3, #1
   11b28:	orrs	r4, r4, r3
   11b2c:	bne	112a0 <close@plt+0x344>
   11b30:	ldr	r2, [r9]
   11b34:	mov	r1, #3
   11b38:	mov	r0, r4
   11b3c:	bl	14028 <close@plt+0x30cc>
   11b40:	mov	r1, r5
   11b44:	ldr	r2, [pc, #140]	; 11bd8 <close@plt+0xc7c>
   11b48:	mov	r3, r0
   11b4c:	mov	r0, r4
   11b50:	bl	10e18 <error@plt>
   11b54:	b	11a98 <close@plt+0xb3c>
   11b58:	mov	r2, #5
   11b5c:	ldr	r1, [pc, #156]	; 11c00 <close@plt+0xca4>
   11b60:	mov	r0, r4
   11b64:	bl	10d88 <dcgettext@plt>
   11b68:	ldr	r1, [r9]
   11b6c:	mov	r5, r0
   11b70:	mov	r0, #4
   11b74:	bl	13f6c <close@plt+0x3010>
   11b78:	mov	r2, r5
   11b7c:	mov	r1, r8
   11b80:	mov	r3, r0
   11b84:	mov	r0, r4
   11b88:	bl	10e18 <error@plt>
   11b8c:	str	r7, [r9, #8]
   11b90:	b	1187c <close@plt+0x920>
   11b94:	bl	10f68 <close@plt+0xc>
   11b98:	andeq	r5, r1, r8, lsl r8
   11b9c:	andeq	r5, r1, r0, lsr #14
   11ba0:	andeq	r5, r1, r4, lsl #25
   11ba4:	ldrdeq	r5, [r1], -ip
   11ba8:	andeq	r5, r1, r4, asr #25
   11bac:	andeq	r2, r1, r0, lsl #2
   11bb0:	andeq	r7, r2, r0, lsl r1
   11bb4:	andeq	r7, r2, ip, ror #2
   11bb8:	muleq	r1, ip, ip
   11bbc:			; <UNDEFINED> instruction: 0x00015cb0
   11bc0:	andeq	r5, r1, ip, asr #15
   11bc4:	ldrdeq	r5, [r1], -r8
   11bc8:	andeq	r7, r2, r0, ror #2
   11bcc:	svcne	0x00fe0000
   11bd0:	andeq	r7, r2, r4, ror r1
   11bd4:	andeq	r5, r1, r0, ror #25
   11bd8:	andeq	r5, r1, r8, lsr #28
   11bdc:	strdeq	r7, [r2], -r4
   11be0:	andeq	r5, r0, fp, lsl r4
   11be4:	andeq	r0, r8, r9, asr #32
   11be8:	andeq	r5, r1, r4, ror #25
   11bec:	andeq	r5, r1, ip, lsl sp
   11bf0:	andeq	r5, r1, r0, asr #15
   11bf4:	ldrdeq	r5, [r1], -r0
   11bf8:	andeq	r5, r1, r0, lsr #26
   11bfc:	strbeq	r0, [r4], #-514	; 0xfffffdfe
   11c00:	andeq	r5, r1, r4, lsl #26
   11c04:	mov	fp, #0
   11c08:	mov	lr, #0
   11c0c:	pop	{r1}		; (ldr r1, [sp], #4)
   11c10:	mov	r2, sp
   11c14:	push	{r2}		; (str r2, [sp, #-4]!)
   11c18:	push	{r0}		; (str r0, [sp, #-4]!)
   11c1c:	ldr	ip, [pc, #16]	; 11c34 <close@plt+0xcd8>
   11c20:	push	{ip}		; (str ip, [sp, #-4]!)
   11c24:	ldr	r0, [pc, #12]	; 11c38 <close@plt+0xcdc>
   11c28:	ldr	r3, [pc, #12]	; 11c3c <close@plt+0xce0>
   11c2c:	bl	10e3c <__libc_start_main@plt>
   11c30:	bl	10f50 <abort@plt>
   11c34:	andeq	r5, r1, r0, asr #13
   11c38:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   11c3c:	andeq	r5, r1, r0, ror #12
   11c40:	ldr	r3, [pc, #20]	; 11c5c <close@plt+0xd00>
   11c44:	ldr	r2, [pc, #20]	; 11c60 <close@plt+0xd04>
   11c48:	add	r3, pc, r3
   11c4c:	ldr	r2, [r3, r2]
   11c50:	cmp	r2, #0
   11c54:	bxeq	lr
   11c58:	b	10e54 <__gmon_start__@plt>
   11c5c:			; <UNDEFINED> instruction: 0x000153b0
   11c60:	andeq	r0, r0, r8, ror #1
   11c64:	ldr	r3, [pc, #28]	; 11c88 <close@plt+0xd2c>
   11c68:	ldr	r0, [pc, #28]	; 11c8c <close@plt+0xd30>
   11c6c:	sub	r3, r3, r0
   11c70:	cmp	r3, #6
   11c74:	bxls	lr
   11c78:	ldr	r3, [pc, #16]	; 11c90 <close@plt+0xd34>
   11c7c:	cmp	r3, #0
   11c80:	bxeq	lr
   11c84:	bx	r3
   11c88:	andeq	r7, r2, fp, asr r1
   11c8c:	andeq	r7, r2, r8, asr r1
   11c90:	andeq	r0, r0, r0
   11c94:	ldr	r1, [pc, #36]	; 11cc0 <close@plt+0xd64>
   11c98:	ldr	r0, [pc, #36]	; 11cc4 <close@plt+0xd68>
   11c9c:	sub	r1, r1, r0
   11ca0:	asr	r1, r1, #2
   11ca4:	add	r1, r1, r1, lsr #31
   11ca8:	asrs	r1, r1, #1
   11cac:	bxeq	lr
   11cb0:	ldr	r3, [pc, #16]	; 11cc8 <close@plt+0xd6c>
   11cb4:	cmp	r3, #0
   11cb8:	bxeq	lr
   11cbc:	bx	r3
   11cc0:	andeq	r7, r2, r8, asr r1
   11cc4:	andeq	r7, r2, r8, asr r1
   11cc8:	andeq	r0, r0, r0
   11ccc:	push	{r4, lr}
   11cd0:	ldr	r4, [pc, #24]	; 11cf0 <close@plt+0xd94>
   11cd4:	ldrb	r3, [r4]
   11cd8:	cmp	r3, #0
   11cdc:	popne	{r4, pc}
   11ce0:	bl	11c64 <close@plt+0xd08>
   11ce4:	mov	r3, #1
   11ce8:	strb	r3, [r4]
   11cec:	pop	{r4, pc}
   11cf0:	andeq	r7, r2, r0, ror r1
   11cf4:	ldr	r0, [pc, #40]	; 11d24 <close@plt+0xdc8>
   11cf8:	ldr	r3, [r0]
   11cfc:	cmp	r3, #0
   11d00:	bne	11d08 <close@plt+0xdac>
   11d04:	b	11c94 <close@plt+0xd38>
   11d08:	ldr	r3, [pc, #24]	; 11d28 <close@plt+0xdcc>
   11d0c:	cmp	r3, #0
   11d10:	beq	11d04 <close@plt+0xda8>
   11d14:	push	{r4, lr}
   11d18:	blx	r3
   11d1c:	pop	{r4, lr}
   11d20:	b	11c94 <close@plt+0xd38>
   11d24:	andeq	r6, r2, r4, lsl pc
   11d28:	andeq	r0, r0, r0
   11d2c:	ldr	ip, [pc, #100]	; 11d98 <close@plt+0xe3c>
   11d30:	mov	r0, #48	; 0x30
   11d34:	add	r3, ip, #17
   11d38:	ldr	r1, [ip, #20]
   11d3c:	b	11d4c <close@plt+0xdf0>
   11d40:	strb	r0, [r3], #-1
   11d44:	cmp	r3, r1
   11d48:	bcc	11d64 <close@plt+0xe08>
   11d4c:	ldrb	r2, [r3]
   11d50:	cmp	r2, #56	; 0x38
   11d54:	bhi	11d40 <close@plt+0xde4>
   11d58:	add	r2, r2, #1
   11d5c:	strb	r2, [r3]
   11d60:	bx	lr
   11d64:	cmp	r1, ip
   11d68:	movhi	r3, #49	; 0x31
   11d6c:	movls	r3, #62	; 0x3e
   11d70:	strbhi	r3, [r1, #-1]
   11d74:	strbls	r3, [ip]
   11d78:	ldr	r3, [ip, #24]
   11d7c:	subhi	r2, r1, #1
   11d80:	movls	r2, r1
   11d84:	strhi	r2, [ip, #20]
   11d88:	cmp	r3, r2
   11d8c:	subhi	r3, r3, #1
   11d90:	strhi	r3, [ip, #24]
   11d94:	bx	lr
   11d98:	strdeq	r7, [r2], -r4
   11d9c:	subs	r6, r0, #0
   11da0:	push	{r7, lr}
   11da4:	sub	sp, sp, #56	; 0x38
   11da8:	beq	11de4 <close@plt+0xe88>
   11dac:	ldr	r3, [pc, #720]	; 12084 <close@plt+0x1128>
   11db0:	mov	r2, #5
   11db4:	ldr	r1, [pc, #716]	; 12088 <close@plt+0x112c>
   11db8:	mov	r0, #0
   11dbc:	ldr	r4, [r3]
   11dc0:	bl	10d88 <dcgettext@plt>
   11dc4:	ldr	r3, [pc, #704]	; 1208c <close@plt+0x1130>
   11dc8:	mov	r1, #1
   11dcc:	ldr	r3, [r3]
   11dd0:	mov	r2, r0
   11dd4:	mov	r0, r4
   11dd8:	bl	10ee4 <__fprintf_chk@plt>
   11ddc:	mov	r0, r6
   11de0:	bl	10e78 <exit@plt>
   11de4:	mov	r2, #5
   11de8:	ldr	r1, [pc, #672]	; 12090 <close@plt+0x1134>
   11dec:	bl	10d88 <dcgettext@plt>
   11df0:	ldr	r4, [pc, #660]	; 1208c <close@plt+0x1130>
   11df4:	ldr	r7, [pc, #664]	; 12094 <close@plt+0x1138>
   11df8:	ldr	r2, [r4]
   11dfc:	mov	r1, r0
   11e00:	mov	r0, #1
   11e04:	bl	10ec0 <__printf_chk@plt>
   11e08:	mov	r2, #5
   11e0c:	ldr	r1, [pc, #644]	; 12098 <close@plt+0x113c>
   11e10:	mov	r0, r6
   11e14:	bl	10d88 <dcgettext@plt>
   11e18:	ldr	r1, [r7]
   11e1c:	bl	10ce0 <fputs_unlocked@plt>
   11e20:	mov	r2, #5
   11e24:	ldr	r1, [pc, #624]	; 1209c <close@plt+0x1140>
   11e28:	mov	r0, r6
   11e2c:	bl	10d88 <dcgettext@plt>
   11e30:	ldr	r1, [r7]
   11e34:	bl	10ce0 <fputs_unlocked@plt>
   11e38:	mov	r2, #5
   11e3c:	ldr	r1, [pc, #604]	; 120a0 <close@plt+0x1144>
   11e40:	mov	r0, r6
   11e44:	bl	10d88 <dcgettext@plt>
   11e48:	ldr	r1, [r7]
   11e4c:	bl	10ce0 <fputs_unlocked@plt>
   11e50:	mov	r2, #5
   11e54:	ldr	r1, [pc, #584]	; 120a4 <close@plt+0x1148>
   11e58:	mov	r0, r6
   11e5c:	bl	10d88 <dcgettext@plt>
   11e60:	ldr	r1, [r7]
   11e64:	bl	10ce0 <fputs_unlocked@plt>
   11e68:	mov	r2, #5
   11e6c:	ldr	r1, [pc, #564]	; 120a8 <close@plt+0x114c>
   11e70:	mov	r0, r6
   11e74:	bl	10d88 <dcgettext@plt>
   11e78:	ldr	r1, [r7]
   11e7c:	bl	10ce0 <fputs_unlocked@plt>
   11e80:	mov	r2, #5
   11e84:	ldr	r1, [pc, #544]	; 120ac <close@plt+0x1150>
   11e88:	mov	r0, r6
   11e8c:	bl	10d88 <dcgettext@plt>
   11e90:	ldr	r1, [r7]
   11e94:	bl	10ce0 <fputs_unlocked@plt>
   11e98:	mov	r2, #5
   11e9c:	ldr	r1, [pc, #524]	; 120b0 <close@plt+0x1154>
   11ea0:	mov	r0, r6
   11ea4:	bl	10d88 <dcgettext@plt>
   11ea8:	ldr	r3, [r4]
   11eac:	ldr	r4, [pc, #512]	; 120b4 <close@plt+0x1158>
   11eb0:	mov	r2, r3
   11eb4:	mov	r1, r0
   11eb8:	mov	r0, #1
   11ebc:	bl	10ec0 <__printf_chk@plt>
   11ec0:	ldm	r4!, {r0, r1, r2, r3}
   11ec4:	mov	lr, sp
   11ec8:	stmia	lr!, {r0, r1, r2, r3}
   11ecc:	ldm	r4!, {r0, r1, r2, r3}
   11ed0:	ldr	ip, [sp]
   11ed4:	stmia	lr!, {r0, r1, r2, r3}
   11ed8:	cmp	ip, #0
   11edc:	ldm	r4!, {r0, r1, r2, r3}
   11ee0:	stmia	lr!, {r0, r1, r2, r3}
   11ee4:	ldm	r4, {r0, r1}
   11ee8:	moveq	r4, sp
   11eec:	stm	lr, {r0, r1}
   11ef0:	beq	11f20 <close@plt+0xfc4>
   11ef4:	ldr	r5, [pc, #444]	; 120b8 <close@plt+0x115c>
   11ef8:	mov	r4, sp
   11efc:	b	11f0c <close@plt+0xfb0>
   11f00:	ldr	ip, [r4, #8]!
   11f04:	cmp	ip, #0
   11f08:	beq	11f20 <close@plt+0xfc4>
   11f0c:	mov	r1, ip
   11f10:	mov	r0, r5
   11f14:	bl	10cf8 <strcmp@plt>
   11f18:	cmp	r0, #0
   11f1c:	bne	11f00 <close@plt+0xfa4>
   11f20:	ldr	r4, [r4, #4]
   11f24:	mov	r2, #5
   11f28:	cmp	r4, #0
   11f2c:	ldr	r1, [pc, #392]	; 120bc <close@plt+0x1160>
   11f30:	beq	11fd8 <close@plt+0x107c>
   11f34:	mov	r0, #0
   11f38:	bl	10d88 <dcgettext@plt>
   11f3c:	ldr	r3, [pc, #380]	; 120c0 <close@plt+0x1164>
   11f40:	ldr	r2, [pc, #380]	; 120c4 <close@plt+0x1168>
   11f44:	mov	r1, r0
   11f48:	mov	r0, #1
   11f4c:	bl	10ec0 <__printf_chk@plt>
   11f50:	mov	r1, #0
   11f54:	mov	r0, #5
   11f58:	bl	10f08 <setlocale@plt>
   11f5c:	cmp	r0, #0
   11f60:	ldreq	r5, [pc, #336]	; 120b8 <close@plt+0x115c>
   11f64:	beq	11f80 <close@plt+0x1024>
   11f68:	mov	r2, #3
   11f6c:	ldr	r1, [pc, #340]	; 120c8 <close@plt+0x116c>
   11f70:	bl	10f44 <strncmp@plt>
   11f74:	ldr	r5, [pc, #316]	; 120b8 <close@plt+0x115c>
   11f78:	cmp	r0, #0
   11f7c:	bne	12068 <close@plt+0x110c>
   11f80:	mov	r2, #5
   11f84:	ldr	r1, [pc, #320]	; 120cc <close@plt+0x1170>
   11f88:	mov	r0, #0
   11f8c:	bl	10d88 <dcgettext@plt>
   11f90:	ldr	r3, [pc, #288]	; 120b8 <close@plt+0x115c>
   11f94:	ldr	r2, [pc, #292]	; 120c0 <close@plt+0x1164>
   11f98:	mov	r1, r0
   11f9c:	mov	r0, #1
   11fa0:	bl	10ec0 <__printf_chk@plt>
   11fa4:	mov	r2, #5
   11fa8:	ldr	r1, [pc, #288]	; 120d0 <close@plt+0x1174>
   11fac:	mov	r0, #0
   11fb0:	bl	10d88 <dcgettext@plt>
   11fb4:	ldr	r2, [pc, #280]	; 120d4 <close@plt+0x1178>
   11fb8:	cmp	r4, r5
   11fbc:	ldr	r3, [pc, #276]	; 120d8 <close@plt+0x117c>
   11fc0:	movne	r3, r2
   11fc4:	mov	r1, r0
   11fc8:	mov	r2, r4
   11fcc:	mov	r0, #1
   11fd0:	bl	10ec0 <__printf_chk@plt>
   11fd4:	b	11ddc <close@plt+0xe80>
   11fd8:	mov	r0, r4
   11fdc:	bl	10d88 <dcgettext@plt>
   11fe0:	ldr	r3, [pc, #216]	; 120c0 <close@plt+0x1164>
   11fe4:	ldr	r2, [pc, #216]	; 120c4 <close@plt+0x1168>
   11fe8:	mov	r1, r0
   11fec:	mov	r0, #1
   11ff0:	bl	10ec0 <__printf_chk@plt>
   11ff4:	mov	r1, r4
   11ff8:	mov	r0, #5
   11ffc:	bl	10f08 <setlocale@plt>
   12000:	cmp	r0, #0
   12004:	beq	1201c <close@plt+0x10c0>
   12008:	mov	r2, #3
   1200c:	ldr	r1, [pc, #180]	; 120c8 <close@plt+0x116c>
   12010:	bl	10f44 <strncmp@plt>
   12014:	cmp	r0, #0
   12018:	bne	12060 <close@plt+0x1104>
   1201c:	mov	r2, #5
   12020:	ldr	r1, [pc, #164]	; 120cc <close@plt+0x1170>
   12024:	mov	r0, #0
   12028:	bl	10d88 <dcgettext@plt>
   1202c:	ldr	r3, [pc, #132]	; 120b8 <close@plt+0x115c>
   12030:	ldr	r2, [pc, #136]	; 120c0 <close@plt+0x1164>
   12034:	mov	r4, r3
   12038:	mov	r1, r0
   1203c:	mov	r0, #1
   12040:	bl	10ec0 <__printf_chk@plt>
   12044:	ldr	r1, [pc, #132]	; 120d0 <close@plt+0x1174>
   12048:	mov	r2, #5
   1204c:	mov	r0, #0
   12050:	bl	10d88 <dcgettext@plt>
   12054:	ldr	r3, [pc, #124]	; 120d8 <close@plt+0x117c>
   12058:	mov	r1, r0
   1205c:	b	11fc8 <close@plt+0x106c>
   12060:	ldr	r5, [pc, #80]	; 120b8 <close@plt+0x115c>
   12064:	mov	r4, r5
   12068:	mov	r2, #5
   1206c:	ldr	r1, [pc, #104]	; 120dc <close@plt+0x1180>
   12070:	mov	r0, #0
   12074:	bl	10d88 <dcgettext@plt>
   12078:	ldr	r1, [r7]
   1207c:	bl	10ce0 <fputs_unlocked@plt>
   12080:	b	11f80 <close@plt+0x1024>
   12084:	andeq	r7, r2, r8, ror #2
   12088:	ldrdeq	r5, [r1], -r0
   1208c:	andeq	r7, r2, ip, lsl #3
   12090:	strdeq	r5, [r1], -r8
   12094:	andeq	r7, r2, ip, ror #2
   12098:	andeq	r5, r1, ip, lsl r8
   1209c:	andeq	r5, r1, r8, asr #16
   120a0:	andeq	r5, r1, r0, lsl #17
   120a4:	ldrdeq	r5, [r1], -r0
   120a8:	andeq	r5, r1, r4, lsr #21
   120ac:	ldrdeq	r5, [r1], -r4
   120b0:	andeq	r5, r1, ip, lsl #22
   120b4:	andeq	r5, r1, r8, ror #13
   120b8:	andeq	r5, r1, ip, asr #15
   120bc:	muleq	r1, r8, fp
   120c0:			; <UNDEFINED> instruction: 0x00015bb0
   120c4:	ldrdeq	r5, [r1], -r8
   120c8:	andeq	r5, r1, r8, ror #23
   120cc:	andeq	r5, r1, r4, lsr ip
   120d0:	andeq	r5, r1, r0, asr ip
   120d4:	andeq	r5, r1, r8, lsl r8
   120d8:			; <UNDEFINED> instruction: 0x00015db0
   120dc:	andeq	r5, r1, ip, ror #23
   120e0:	ldr	r3, [pc, #4]	; 120ec <close@plt+0x1190>
   120e4:	str	r0, [r3]
   120e8:	bx	lr
   120ec:	andeq	r7, r2, r4, lsl #3
   120f0:	ldr	r3, [pc, #4]	; 120fc <close@plt+0x11a0>
   120f4:	strb	r0, [r3, #4]
   120f8:	bx	lr
   120fc:	andeq	r7, r2, r4, lsl #3
   12100:	ldr	r3, [pc, #192]	; 121c8 <close@plt+0x126c>
   12104:	push	{r4, r5, r6, lr}
   12108:	sub	sp, sp, #8
   1210c:	ldr	r0, [r3]
   12110:	bl	14e20 <close@plt+0x3ec4>
   12114:	cmp	r0, #0
   12118:	beq	1213c <close@plt+0x11e0>
   1211c:	ldr	r4, [pc, #168]	; 121cc <close@plt+0x1270>
   12120:	ldrb	r3, [r4, #4]
   12124:	cmp	r3, #0
   12128:	beq	12158 <close@plt+0x11fc>
   1212c:	bl	10e9c <__errno_location@plt>
   12130:	ldr	r3, [r0]
   12134:	cmp	r3, #32
   12138:	bne	12158 <close@plt+0x11fc>
   1213c:	ldr	r3, [pc, #140]	; 121d0 <close@plt+0x1274>
   12140:	ldr	r0, [r3]
   12144:	bl	14e20 <close@plt+0x3ec4>
   12148:	cmp	r0, #0
   1214c:	bne	121a0 <close@plt+0x1244>
   12150:	add	sp, sp, #8
   12154:	pop	{r4, r5, r6, pc}
   12158:	mov	r2, #5
   1215c:	ldr	r1, [pc, #112]	; 121d4 <close@plt+0x1278>
   12160:	mov	r0, #0
   12164:	bl	10d88 <dcgettext@plt>
   12168:	ldr	r4, [r4]
   1216c:	cmp	r4, #0
   12170:	mov	r5, r0
   12174:	beq	121ac <close@plt+0x1250>
   12178:	bl	10e9c <__errno_location@plt>
   1217c:	ldr	r6, [r0]
   12180:	mov	r0, r4
   12184:	bl	14014 <close@plt+0x30b8>
   12188:	mov	r1, r6
   1218c:	str	r5, [sp]
   12190:	ldr	r2, [pc, #64]	; 121d8 <close@plt+0x127c>
   12194:	mov	r3, r0
   12198:	mov	r0, #0
   1219c:	bl	10e18 <error@plt>
   121a0:	ldr	r3, [pc, #52]	; 121dc <close@plt+0x1280>
   121a4:	ldr	r0, [r3]
   121a8:	bl	10d40 <_exit@plt>
   121ac:	bl	10e9c <__errno_location@plt>
   121b0:	mov	r3, r5
   121b4:	ldr	r2, [pc, #36]	; 121e0 <close@plt+0x1284>
   121b8:	ldr	r1, [r0]
   121bc:	mov	r0, r4
   121c0:	bl	10e18 <error@plt>
   121c4:	b	121a0 <close@plt+0x1244>
   121c8:	andeq	r7, r2, ip, ror #2
   121cc:	andeq	r7, r2, r4, lsl #3
   121d0:	andeq	r7, r2, r8, ror #2
   121d4:	andeq	r5, r1, r0, asr #15
   121d8:	andeq	r5, r1, r4, lsr #28
   121dc:	andeq	r7, r2, r4, lsl r1
   121e0:	andeq	r5, r1, r8, lsr #28
   121e4:	push	{r4, r5}
   121e8:	pop	{r4, r5}
   121ec:	b	10d04 <posix_fadvise64@plt>
   121f0:	cmp	r0, #0
   121f4:	bxeq	lr
   121f8:	push	{r4, lr}
   121fc:	sub	sp, sp, #16
   12200:	mov	r4, r1
   12204:	bl	10ed8 <fileno@plt>
   12208:	mov	r2, #0
   1220c:	mov	r3, #0
   12210:	str	r4, [sp, #8]
   12214:	strd	r2, [sp]
   12218:	bl	10d04 <posix_fadvise64@plt>
   1221c:	add	sp, sp, #16
   12220:	pop	{r4, pc}
   12224:	push	{r4, r5, lr}
   12228:	sub	sp, sp, #12
   1222c:	mov	r5, r0
   12230:	bl	10e9c <__errno_location@plt>
   12234:	mov	r2, #0
   12238:	mov	r4, r0
   1223c:	ldr	r3, [r0]
   12240:	str	r2, [r4]
   12244:	mov	r0, r5
   12248:	str	r3, [sp]
   1224c:	str	r3, [sp, #4]
   12250:	bl	10d34 <free@plt>
   12254:	ldr	r3, [r4]
   12258:	add	r2, sp, #8
   1225c:	cmp	r3, #0
   12260:	moveq	r3, #4
   12264:	movne	r3, #0
   12268:	add	r3, r2, r3
   1226c:	ldr	r3, [r3, #-8]
   12270:	str	r3, [r4]
   12274:	add	sp, sp, #12
   12278:	pop	{r4, r5, pc}
   1227c:	push	{r4, r5, r6, r7, r8, lr}
   12280:	subs	r4, r2, #0
   12284:	beq	122e4 <close@plt+0x1388>
   12288:	mov	r7, r0
   1228c:	mov	r5, r1
   12290:	mov	r6, #0
   12294:	b	122b0 <close@plt+0x1354>
   12298:	cmp	r0, #0
   1229c:	beq	122d0 <close@plt+0x1374>
   122a0:	subs	r4, r4, r0
   122a4:	add	r6, r6, r0
   122a8:	add	r5, r5, r0
   122ac:	beq	122c8 <close@plt+0x136c>
   122b0:	mov	r2, r4
   122b4:	mov	r1, r5
   122b8:	mov	r0, r7
   122bc:	bl	1422c <close@plt+0x32d0>
   122c0:	cmn	r0, #1
   122c4:	bne	12298 <close@plt+0x133c>
   122c8:	mov	r0, r6
   122cc:	pop	{r4, r5, r6, r7, r8, pc}
   122d0:	bl	10e9c <__errno_location@plt>
   122d4:	mov	r3, #28
   122d8:	str	r3, [r0]
   122dc:	mov	r0, r6
   122e0:	pop	{r4, r5, r6, r7, r8, pc}
   122e4:	mov	r6, r4
   122e8:	b	122c8 <close@plt+0x136c>
   122ec:	push	{r4, r5, r6, lr}
   122f0:	subs	r4, r0, #0
   122f4:	beq	12368 <close@plt+0x140c>
   122f8:	mov	r1, #47	; 0x2f
   122fc:	bl	10f14 <strrchr@plt>
   12300:	subs	r5, r0, #0
   12304:	beq	12354 <close@plt+0x13f8>
   12308:	add	r6, r5, #1
   1230c:	sub	r3, r6, r4
   12310:	cmp	r3, #6
   12314:	ble	12354 <close@plt+0x13f8>
   12318:	mov	r2, #7
   1231c:	ldr	r1, [pc, #96]	; 12384 <close@plt+0x1428>
   12320:	sub	r0, r5, #6
   12324:	bl	10f44 <strncmp@plt>
   12328:	cmp	r0, #0
   1232c:	bne	12354 <close@plt+0x13f8>
   12330:	mov	r2, #3
   12334:	ldr	r1, [pc, #76]	; 12388 <close@plt+0x142c>
   12338:	mov	r0, r6
   1233c:	bl	10f44 <strncmp@plt>
   12340:	cmp	r0, #0
   12344:	movne	r4, r6
   12348:	ldreq	r3, [pc, #60]	; 1238c <close@plt+0x1430>
   1234c:	addeq	r4, r5, #4
   12350:	streq	r4, [r3]
   12354:	ldr	r2, [pc, #52]	; 12390 <close@plt+0x1434>
   12358:	ldr	r3, [pc, #52]	; 12394 <close@plt+0x1438>
   1235c:	str	r4, [r2]
   12360:	str	r4, [r3]
   12364:	pop	{r4, r5, r6, pc}
   12368:	ldr	r3, [pc, #40]	; 12398 <close@plt+0x143c>
   1236c:	mov	r2, #55	; 0x37
   12370:	mov	r1, #1
   12374:	ldr	r3, [r3]
   12378:	ldr	r0, [pc, #28]	; 1239c <close@plt+0x1440>
   1237c:	bl	10dd0 <fwrite@plt>
   12380:	bl	10f50 <abort@plt>
   12384:	andeq	r5, r1, r4, ror #28
   12388:	andeq	r5, r1, ip, ror #28
   1238c:	andeq	r7, r2, r8, asr r1
   12390:	andeq	r7, r2, ip, lsl #3
   12394:	andeq	r7, r2, ip, asr r1
   12398:	andeq	r7, r2, r8, ror #2
   1239c:	andeq	r5, r1, ip, lsr #28
   123a0:	push	{r4, r5, r6, lr}
   123a4:	mov	r2, #48	; 0x30
   123a8:	mov	r4, r1
   123ac:	mov	r1, #0
   123b0:	mov	r5, r0
   123b4:	bl	10eb4 <memset@plt>
   123b8:	cmp	r4, #10
   123bc:	beq	123cc <close@plt+0x1470>
   123c0:	str	r4, [r5]
   123c4:	mov	r0, r5
   123c8:	pop	{r4, r5, r6, pc}
   123cc:	bl	10f50 <abort@plt>
   123d0:	push	{r4, r5, r6, lr}
   123d4:	mov	r4, r0
   123d8:	mov	r5, r1
   123dc:	bl	1503c <close@plt+0x40e0>
   123e0:	ldrb	r3, [r0]
   123e4:	bic	r3, r3, #32
   123e8:	cmp	r3, #85	; 0x55
   123ec:	bne	1244c <close@plt+0x14f0>
   123f0:	ldrb	r3, [r0, #1]
   123f4:	bic	r3, r3, #32
   123f8:	cmp	r3, #84	; 0x54
   123fc:	bne	12488 <close@plt+0x152c>
   12400:	ldrb	r3, [r0, #2]
   12404:	bic	r3, r3, #32
   12408:	cmp	r3, #70	; 0x46
   1240c:	bne	12488 <close@plt+0x152c>
   12410:	ldrb	r3, [r0, #3]
   12414:	cmp	r3, #45	; 0x2d
   12418:	bne	12488 <close@plt+0x152c>
   1241c:	ldrb	r3, [r0, #4]
   12420:	cmp	r3, #56	; 0x38
   12424:	bne	12488 <close@plt+0x152c>
   12428:	ldrb	r3, [r0, #5]
   1242c:	cmp	r3, #0
   12430:	bne	12488 <close@plt+0x152c>
   12434:	ldrb	r2, [r4]
   12438:	ldr	r3, [pc, #152]	; 124d8 <close@plt+0x157c>
   1243c:	ldr	r0, [pc, #152]	; 124dc <close@plt+0x1580>
   12440:	cmp	r2, #96	; 0x60
   12444:	movne	r0, r3
   12448:	pop	{r4, r5, r6, pc}
   1244c:	cmp	r3, #71	; 0x47
   12450:	bne	12488 <close@plt+0x152c>
   12454:	ldrb	r3, [r0, #1]
   12458:	bic	r3, r3, #32
   1245c:	cmp	r3, #66	; 0x42
   12460:	bne	12488 <close@plt+0x152c>
   12464:	ldrb	r3, [r0, #2]
   12468:	cmp	r3, #49	; 0x31
   1246c:	bne	12488 <close@plt+0x152c>
   12470:	ldrb	r3, [r0, #3]
   12474:	cmp	r3, #56	; 0x38
   12478:	bne	12488 <close@plt+0x152c>
   1247c:	ldrb	r3, [r0, #4]
   12480:	cmp	r3, #48	; 0x30
   12484:	beq	1249c <close@plt+0x1540>
   12488:	ldr	r3, [pc, #80]	; 124e0 <close@plt+0x1584>
   1248c:	cmp	r5, #9
   12490:	ldr	r0, [pc, #76]	; 124e4 <close@plt+0x1588>
   12494:	movne	r0, r3
   12498:	pop	{r4, r5, r6, pc}
   1249c:	ldrb	r3, [r0, #5]
   124a0:	cmp	r3, #51	; 0x33
   124a4:	bne	12488 <close@plt+0x152c>
   124a8:	ldrb	r3, [r0, #6]
   124ac:	cmp	r3, #48	; 0x30
   124b0:	bne	12488 <close@plt+0x152c>
   124b4:	ldrb	r3, [r0, #7]
   124b8:	cmp	r3, #0
   124bc:	bne	12488 <close@plt+0x152c>
   124c0:	ldrb	r2, [r4]
   124c4:	ldr	r3, [pc, #28]	; 124e8 <close@plt+0x158c>
   124c8:	ldr	r0, [pc, #28]	; 124ec <close@plt+0x1590>
   124cc:	cmp	r2, #96	; 0x60
   124d0:	movne	r0, r3
   124d4:	pop	{r4, r5, r6, pc}
   124d8:	andeq	r5, r1, r8, asr #29
   124dc:	andeq	r5, r1, r4, asr #29
   124e0:	ldrdeq	r5, [r1], -r8
   124e4:	ldrdeq	r5, [r1], -r4
   124e8:	ldrdeq	r5, [r1], -r0
   124ec:	andeq	r5, r1, ip, asr #29
   124f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124f4:	sub	sp, sp, #116	; 0x74
   124f8:	mov	sl, r0
   124fc:	str	r3, [sp, #24]
   12500:	mov	r3, #1
   12504:	mov	r8, r1
   12508:	str	r2, [sp, #56]	; 0x38
   1250c:	str	r3, [sp, #36]	; 0x24
   12510:	bl	10df4 <__ctype_get_mb_cur_max@plt>
   12514:	ldr	r3, [sp, #156]	; 0x9c
   12518:	mov	fp, r8
   1251c:	mov	r2, #0
   12520:	lsr	r3, r3, #1
   12524:	and	r3, r3, #1
   12528:	str	r2, [sp, #68]	; 0x44
   1252c:	str	r3, [sp, #28]
   12530:	str	r2, [sp, #40]	; 0x28
   12534:	str	r2, [sp, #44]	; 0x2c
   12538:	str	r2, [sp, #52]	; 0x34
   1253c:	str	r2, [sp, #64]	; 0x40
   12540:	str	r2, [sp, #72]	; 0x48
   12544:	str	sl, [sp, #32]
   12548:	str	r0, [sp, #76]	; 0x4c
   1254c:	ldr	r3, [sp, #152]	; 0x98
   12550:	cmp	r3, #10
   12554:	ldrls	pc, [pc, r3, lsl #2]
   12558:	b	13718 <close@plt+0x27bc>
   1255c:	andeq	r2, r1, r8, lsl #11
   12560:	andeq	r2, r1, r0, ror r8
   12564:	muleq	r1, r4, r8
   12568:			; <UNDEFINED> instruction: 0x000128b8
   1256c:	andeq	r2, r1, r4, ror #19
   12570:			; <UNDEFINED> instruction: 0x000129b8
   12574:	muleq	r1, r0, r9
   12578:	andeq	r2, r1, ip, asr #17
   1257c:	andeq	r2, r1, r4, ror #17
   12580:	andeq	r2, r1, r4, ror #17
   12584:	andeq	r2, r1, r4, ror #17
   12588:	mov	r3, #0
   1258c:	mov	r7, r3
   12590:	str	r3, [sp, #28]
   12594:	ldr	r3, [sp, #44]	; 0x2c
   12598:	mov	sl, #0
   1259c:	eor	r3, r3, #1
   125a0:	str	r3, [sp, #60]	; 0x3c
   125a4:	ldr	r3, [sp, #24]
   125a8:	cmn	r3, #1
   125ac:	beq	12b10 <close@plt+0x1bb4>
   125b0:	ldr	r3, [sp, #24]
   125b4:	subs	r5, r3, sl
   125b8:	movne	r5, #1
   125bc:	cmp	r5, #0
   125c0:	beq	12b28 <close@plt+0x1bcc>
   125c4:	ldr	r3, [sp, #152]	; 0x98
   125c8:	ldr	r8, [sp, #44]	; 0x2c
   125cc:	cmp	r3, #2
   125d0:	moveq	r8, #0
   125d4:	andne	r8, r8, #1
   125d8:	ldr	r3, [sp, #52]	; 0x34
   125dc:	adds	r9, r3, #0
   125e0:	movne	r9, #1
   125e4:	ands	r6, r9, r8
   125e8:	beq	12f90 <close@plt+0x2034>
   125ec:	ldr	r2, [sp, #52]	; 0x34
   125f0:	ldr	r1, [sp, #24]
   125f4:	cmp	r2, #1
   125f8:	mov	r3, r2
   125fc:	movls	r3, #0
   12600:	movhi	r3, #1
   12604:	cmn	r1, #1
   12608:	movne	r3, #0
   1260c:	cmp	r3, #0
   12610:	add	r4, sl, r2
   12614:	beq	12624 <close@plt+0x16c8>
   12618:	ldr	r0, [sp, #56]	; 0x38
   1261c:	bl	10e84 <strlen@plt>
   12620:	str	r0, [sp, #24]
   12624:	ldr	r3, [sp, #24]
   12628:	cmp	r3, r4
   1262c:	ldr	r3, [sp, #56]	; 0x38
   12630:	add	r3, r3, sl
   12634:	str	r3, [sp, #48]	; 0x30
   12638:	bcc	12f9c <close@plt+0x2040>
   1263c:	mov	r0, r3
   12640:	ldr	r2, [sp, #52]	; 0x34
   12644:	ldr	r1, [sp, #64]	; 0x40
   12648:	bl	10d64 <memcmp@plt>
   1264c:	cmp	r0, #0
   12650:	bne	12f9c <close@plt+0x2040>
   12654:	ldr	r3, [sp, #28]
   12658:	cmp	r3, #0
   1265c:	bne	13818 <close@plt+0x28bc>
   12660:	ldr	r3, [sp, #48]	; 0x30
   12664:	ldrb	r4, [r3]
   12668:	cmp	r4, #126	; 0x7e
   1266c:	ldrls	pc, [pc, r4, lsl #2]
   12670:	b	12f30 <close@plt+0x1fd4>
   12674:	andeq	r2, r1, r4, asr sp
   12678:	andeq	r2, r1, r0, lsr pc
   1267c:	andeq	r2, r1, r0, lsr pc
   12680:	andeq	r2, r1, r0, lsr pc
   12684:	andeq	r2, r1, r0, lsr pc
   12688:	andeq	r2, r1, r0, lsr pc
   1268c:	andeq	r2, r1, r0, lsr pc
   12690:	andeq	r2, r1, r8, lsr sp
   12694:	andeq	r2, r1, ip, lsl sp
   12698:	andeq	r2, r1, r8, lsl pc
   1269c:	andeq	r2, r1, ip, ror ip
   126a0:	andeq	r2, r1, r0, ror #24
   126a4:	strdeq	r2, [r1], -r4
   126a8:	ldrdeq	r2, [r1], -r0
   126ac:	andeq	r2, r1, r0, lsr pc
   126b0:	andeq	r2, r1, r0, lsr pc
   126b4:	andeq	r2, r1, r0, lsr pc
   126b8:	andeq	r2, r1, r0, lsr pc
   126bc:	andeq	r2, r1, r0, lsr pc
   126c0:	andeq	r2, r1, r0, lsr pc
   126c4:	andeq	r2, r1, r0, lsr pc
   126c8:	andeq	r2, r1, r0, lsr pc
   126cc:	andeq	r2, r1, r0, lsr pc
   126d0:	andeq	r2, r1, r0, lsr pc
   126d4:	andeq	r2, r1, r0, lsr pc
   126d8:	andeq	r2, r1, r0, lsr pc
   126dc:	andeq	r2, r1, r0, lsr pc
   126e0:	andeq	r2, r1, r0, lsr pc
   126e4:	andeq	r2, r1, r0, lsr pc
   126e8:	andeq	r2, r1, r0, lsr pc
   126ec:	andeq	r2, r1, r0, lsr pc
   126f0:	andeq	r2, r1, r0, lsr pc
   126f4:	andeq	r2, r1, r0, lsl pc
   126f8:	andeq	r2, r1, r4, asr #28
   126fc:	andeq	r2, r1, r4, asr #28
   12700:	andeq	r2, r1, r4, asr sl
   12704:	andeq	r2, r1, r4, asr #28
   12708:	ldrdeq	r2, [r1], -ip
   1270c:	andeq	r2, r1, r4, asr #28
   12710:			; <UNDEFINED> instruction: 0x00012eb0
   12714:	andeq	r2, r1, r4, asr #28
   12718:	andeq	r2, r1, r4, asr #28
   1271c:	andeq	r2, r1, r4, asr #28
   12720:	ldrdeq	r2, [r1], -ip
   12724:	ldrdeq	r2, [r1], -ip
   12728:	ldrdeq	r2, [r1], -ip
   1272c:	ldrdeq	r2, [r1], -ip
   12730:	ldrdeq	r2, [r1], -ip
   12734:	ldrdeq	r2, [r1], -ip
   12738:	ldrdeq	r2, [r1], -ip
   1273c:	ldrdeq	r2, [r1], -ip
   12740:	ldrdeq	r2, [r1], -ip
   12744:	ldrdeq	r2, [r1], -ip
   12748:	ldrdeq	r2, [r1], -ip
   1274c:	ldrdeq	r2, [r1], -ip
   12750:	ldrdeq	r2, [r1], -ip
   12754:	ldrdeq	r2, [r1], -ip
   12758:	ldrdeq	r2, [r1], -ip
   1275c:	ldrdeq	r2, [r1], -ip
   12760:	andeq	r2, r1, r4, asr #28
   12764:	andeq	r2, r1, r4, asr #28
   12768:	andeq	r2, r1, r4, asr #28
   1276c:	andeq	r2, r1, r4, asr #28
   12770:	andeq	r2, r1, r0, lsl #29
   12774:	andeq	r2, r1, r0, lsr pc
   12778:	ldrdeq	r2, [r1], -ip
   1277c:	ldrdeq	r2, [r1], -ip
   12780:	ldrdeq	r2, [r1], -ip
   12784:	ldrdeq	r2, [r1], -ip
   12788:	ldrdeq	r2, [r1], -ip
   1278c:	ldrdeq	r2, [r1], -ip
   12790:	ldrdeq	r2, [r1], -ip
   12794:	ldrdeq	r2, [r1], -ip
   12798:	ldrdeq	r2, [r1], -ip
   1279c:	ldrdeq	r2, [r1], -ip
   127a0:	ldrdeq	r2, [r1], -ip
   127a4:	ldrdeq	r2, [r1], -ip
   127a8:	ldrdeq	r2, [r1], -ip
   127ac:	ldrdeq	r2, [r1], -ip
   127b0:	ldrdeq	r2, [r1], -ip
   127b4:	ldrdeq	r2, [r1], -ip
   127b8:	ldrdeq	r2, [r1], -ip
   127bc:	ldrdeq	r2, [r1], -ip
   127c0:	ldrdeq	r2, [r1], -ip
   127c4:	ldrdeq	r2, [r1], -ip
   127c8:	ldrdeq	r2, [r1], -ip
   127cc:	ldrdeq	r2, [r1], -ip
   127d0:	ldrdeq	r2, [r1], -ip
   127d4:	ldrdeq	r2, [r1], -ip
   127d8:	ldrdeq	r2, [r1], -ip
   127dc:	ldrdeq	r2, [r1], -ip
   127e0:	andeq	r2, r1, r4, asr #28
   127e4:	andeq	r2, r1, r0, lsr #23
   127e8:	ldrdeq	r2, [r1], -ip
   127ec:	andeq	r2, r1, r4, asr #28
   127f0:	ldrdeq	r2, [r1], -ip
   127f4:	andeq	r2, r1, r4, asr #28
   127f8:	ldrdeq	r2, [r1], -ip
   127fc:	ldrdeq	r2, [r1], -ip
   12800:	ldrdeq	r2, [r1], -ip
   12804:	ldrdeq	r2, [r1], -ip
   12808:	ldrdeq	r2, [r1], -ip
   1280c:	ldrdeq	r2, [r1], -ip
   12810:	ldrdeq	r2, [r1], -ip
   12814:	ldrdeq	r2, [r1], -ip
   12818:	ldrdeq	r2, [r1], -ip
   1281c:	ldrdeq	r2, [r1], -ip
   12820:	ldrdeq	r2, [r1], -ip
   12824:	ldrdeq	r2, [r1], -ip
   12828:	ldrdeq	r2, [r1], -ip
   1282c:	ldrdeq	r2, [r1], -ip
   12830:	ldrdeq	r2, [r1], -ip
   12834:	ldrdeq	r2, [r1], -ip
   12838:	ldrdeq	r2, [r1], -ip
   1283c:	ldrdeq	r2, [r1], -ip
   12840:	ldrdeq	r2, [r1], -ip
   12844:	ldrdeq	r2, [r1], -ip
   12848:	ldrdeq	r2, [r1], -ip
   1284c:	ldrdeq	r2, [r1], -ip
   12850:	ldrdeq	r2, [r1], -ip
   12854:	ldrdeq	r2, [r1], -ip
   12858:	ldrdeq	r2, [r1], -ip
   1285c:	ldrdeq	r2, [r1], -ip
   12860:	andeq	r2, r1, r4, lsr sl
   12864:	andeq	r2, r1, r4, asr #28
   12868:	andeq	r2, r1, r4, lsr sl
   1286c:	andeq	r2, r1, r4, asr sl
   12870:	mov	r3, #1
   12874:	str	r3, [sp, #28]
   12878:	str	r3, [sp, #52]	; 0x34
   1287c:	ldr	r3, [pc, #4000]	; 13824 <close@plt+0x28c8>
   12880:	mov	r7, #0
   12884:	str	r3, [sp, #64]	; 0x40
   12888:	mov	r3, #2
   1288c:	str	r3, [sp, #152]	; 0x98
   12890:	b	12594 <close@plt+0x1638>
   12894:	ldr	r3, [sp, #28]
   12898:	cmp	r3, #0
   1289c:	beq	129f8 <close@plt+0x1a9c>
   128a0:	mov	r3, #1
   128a4:	str	r3, [sp, #52]	; 0x34
   128a8:	ldr	r3, [pc, #3956]	; 13824 <close@plt+0x28c8>
   128ac:	mov	r7, #0
   128b0:	str	r3, [sp, #64]	; 0x40
   128b4:	b	12594 <close@plt+0x1638>
   128b8:	mov	r3, #1
   128bc:	str	r3, [sp, #44]	; 0x2c
   128c0:	str	r3, [sp, #52]	; 0x34
   128c4:	str	r3, [sp, #28]
   128c8:	b	1287c <close@plt+0x1920>
   128cc:	mov	r3, #0
   128d0:	str	r3, [sp, #28]
   128d4:	mov	r3, #1
   128d8:	str	r3, [sp, #44]	; 0x2c
   128dc:	mov	r7, #0
   128e0:	b	12594 <close@plt+0x1638>
   128e4:	ldr	r3, [sp, #152]	; 0x98
   128e8:	cmp	r3, #10
   128ec:	beq	12930 <close@plt+0x19d4>
   128f0:	mov	r2, #5
   128f4:	ldr	r1, [pc, #3884]	; 13828 <close@plt+0x28cc>
   128f8:	mov	r0, #0
   128fc:	bl	10d88 <dcgettext@plt>
   12900:	ldr	r2, [pc, #3872]	; 13828 <close@plt+0x28cc>
   12904:	cmp	r0, r2
   12908:	str	r0, [sp, #164]	; 0xa4
   1290c:	beq	13914 <close@plt+0x29b8>
   12910:	mov	r2, #5
   12914:	ldr	r1, [pc, #3848]	; 13824 <close@plt+0x28c8>
   12918:	mov	r0, #0
   1291c:	bl	10d88 <dcgettext@plt>
   12920:	ldr	r2, [pc, #3836]	; 13824 <close@plt+0x28c8>
   12924:	cmp	r0, r2
   12928:	str	r0, [sp, #168]	; 0xa8
   1292c:	beq	13904 <close@plt+0x29a8>
   12930:	ldr	r7, [sp, #28]
   12934:	cmp	r7, #0
   12938:	movne	r7, #0
   1293c:	bne	12970 <close@plt+0x1a14>
   12940:	ldr	r3, [sp, #164]	; 0xa4
   12944:	ldrb	r3, [r3]
   12948:	cmp	r3, #0
   1294c:	beq	13924 <close@plt+0x29c8>
   12950:	ldr	r2, [sp, #164]	; 0xa4
   12954:	ldr	r1, [sp, #32]
   12958:	cmp	fp, r7
   1295c:	strbhi	r3, [r1, r7]
   12960:	ldrb	r3, [r2, #1]!
   12964:	add	r7, r7, #1
   12968:	cmp	r3, #0
   1296c:	bne	12958 <close@plt+0x19fc>
   12970:	ldr	r0, [sp, #168]	; 0xa8
   12974:	bl	10e84 <strlen@plt>
   12978:	ldr	r3, [sp, #168]	; 0xa8
   1297c:	str	r3, [sp, #64]	; 0x40
   12980:	mov	r3, #1
   12984:	str	r3, [sp, #44]	; 0x2c
   12988:	str	r0, [sp, #52]	; 0x34
   1298c:	b	12594 <close@plt+0x1638>
   12990:	mov	r3, #1
   12994:	str	r3, [sp, #44]	; 0x2c
   12998:	str	r3, [sp, #52]	; 0x34
   1299c:	str	r3, [sp, #28]
   129a0:	ldr	r3, [pc, #3716]	; 1382c <close@plt+0x28d0>
   129a4:	mov	r7, #0
   129a8:	str	r3, [sp, #64]	; 0x40
   129ac:	mov	r3, #5
   129b0:	str	r3, [sp, #152]	; 0x98
   129b4:	b	12594 <close@plt+0x1638>
   129b8:	ldr	r3, [sp, #28]
   129bc:	cmp	r3, #0
   129c0:	beq	136c0 <close@plt+0x2764>
   129c4:	ldr	r3, [sp, #28]
   129c8:	mov	r7, #0
   129cc:	str	r3, [sp, #44]	; 0x2c
   129d0:	mov	r3, #1
   129d4:	str	r3, [sp, #52]	; 0x34
   129d8:	ldr	r3, [pc, #3660]	; 1382c <close@plt+0x28d0>
   129dc:	str	r3, [sp, #64]	; 0x40
   129e0:	b	12594 <close@plt+0x1638>
   129e4:	ldr	r3, [sp, #28]
   129e8:	cmp	r3, #0
   129ec:	mov	r3, #1
   129f0:	streq	r3, [sp, #44]	; 0x2c
   129f4:	bne	12878 <close@plt+0x191c>
   129f8:	cmp	fp, #0
   129fc:	beq	136f0 <close@plt+0x2794>
   12a00:	ldr	r3, [sp, #32]
   12a04:	mov	r2, #39	; 0x27
   12a08:	mov	r7, #1
   12a0c:	strb	r2, [r3]
   12a10:	mov	r3, #0
   12a14:	str	r3, [sp, #28]
   12a18:	mov	r3, #1
   12a1c:	str	r3, [sp, #52]	; 0x34
   12a20:	ldr	r3, [pc, #3580]	; 13824 <close@plt+0x28c8>
   12a24:	str	r3, [sp, #64]	; 0x40
   12a28:	mov	r3, #2
   12a2c:	str	r3, [sp, #152]	; 0x98
   12a30:	b	12594 <close@plt+0x1638>
   12a34:	ldr	r3, [sp, #24]
   12a38:	cmn	r3, #1
   12a3c:	beq	13654 <close@plt+0x26f8>
   12a40:	ldr	r3, [sp, #24]
   12a44:	subs	r3, r3, #1
   12a48:	movne	r3, #1
   12a4c:	cmp	r3, #0
   12a50:	bne	12a5c <close@plt+0x1b00>
   12a54:	cmp	sl, #0
   12a58:	beq	12e48 <close@plt+0x1eec>
   12a5c:	ldr	r3, [sp, #152]	; 0x98
   12a60:	mov	r5, #0
   12a64:	sub	r2, r3, #2
   12a68:	mov	r8, r5
   12a6c:	clz	r2, r2
   12a70:	lsr	r2, r2, #5
   12a74:	ldr	r3, [sp, #60]	; 0x3c
   12a78:	ldr	r1, [sp, #28]
   12a7c:	orr	r3, r2, r3
   12a80:	eor	r3, r3, #1
   12a84:	orr	r3, r1, r3
   12a88:	tst	r3, #255	; 0xff
   12a8c:	bne	131b8 <close@plt+0x225c>
   12a90:	cmp	r6, #0
   12a94:	bne	12be4 <close@plt+0x1c88>
   12a98:	ldr	r3, [sp, #40]	; 0x28
   12a9c:	eor	r8, r8, #1
   12aa0:	and	r8, r8, r3
   12aa4:	add	sl, sl, #1
   12aa8:	uxtb	r6, r8
   12aac:	cmp	r6, #0
   12ab0:	beq	12ae4 <close@plt+0x1b88>
   12ab4:	cmp	fp, r7
   12ab8:	movhi	r2, #39	; 0x27
   12abc:	ldrhi	r3, [sp, #32]
   12ac0:	strbhi	r2, [r3, r7]
   12ac4:	add	r3, r7, #1
   12ac8:	cmp	fp, r3
   12acc:	movhi	r1, #39	; 0x27
   12ad0:	ldrhi	r2, [sp, #32]
   12ad4:	add	r7, r7, #2
   12ad8:	strbhi	r1, [r2, r3]
   12adc:	mov	r3, #0
   12ae0:	str	r3, [sp, #40]	; 0x28
   12ae4:	cmp	r7, fp
   12ae8:	ldrcc	r3, [sp, #32]
   12aec:	strbcc	r4, [r3, r7]
   12af0:	ldr	r3, [sp, #36]	; 0x24
   12af4:	cmp	r5, #0
   12af8:	moveq	r3, #0
   12afc:	str	r3, [sp, #36]	; 0x24
   12b00:	ldr	r3, [sp, #24]
   12b04:	add	r7, r7, #1
   12b08:	cmn	r3, #1
   12b0c:	bne	125b0 <close@plt+0x1654>
   12b10:	ldr	r3, [sp, #56]	; 0x38
   12b14:	ldrb	r5, [r3, sl]
   12b18:	adds	r5, r5, #0
   12b1c:	movne	r5, #1
   12b20:	cmp	r5, #0
   12b24:	bne	125c4 <close@plt+0x1668>
   12b28:	ldr	r3, [sp, #152]	; 0x98
   12b2c:	ldr	r1, [sp, #28]
   12b30:	sub	r3, r3, #2
   12b34:	clz	r3, r3
   12b38:	lsr	r3, r3, #5
   12b3c:	and	r9, r1, r3
   12b40:	cmp	r7, #0
   12b44:	movne	r2, #0
   12b48:	andeq	r2, r9, #1
   12b4c:	cmp	r2, #0
   12b50:	bne	1352c <close@plt+0x25d0>
   12b54:	eor	r2, r1, #1
   12b58:	ands	r3, r3, r2
   12b5c:	beq	139e8 <close@plt+0x2a8c>
   12b60:	ldr	r2, [sp, #68]	; 0x44
   12b64:	cmp	r2, #0
   12b68:	beq	139d4 <close@plt+0x2a78>
   12b6c:	ldr	r3, [sp, #36]	; 0x24
   12b70:	cmp	r3, #0
   12b74:	bne	1398c <close@plt+0x2a30>
   12b78:	ldr	r2, [sp, #72]	; 0x48
   12b7c:	clz	r3, fp
   12b80:	cmp	r2, #0
   12b84:	lsr	r3, r3, #5
   12b88:	moveq	r3, #0
   12b8c:	cmp	r3, #0
   12b90:	beq	1392c <close@plt+0x29d0>
   12b94:	str	r3, [sp, #68]	; 0x44
   12b98:	ldr	fp, [sp, #72]	; 0x48
   12b9c:	b	1254c <close@plt+0x15f0>
   12ba0:	ldr	r3, [sp, #152]	; 0x98
   12ba4:	cmp	r3, #2
   12ba8:	beq	131fc <close@plt+0x22a0>
   12bac:	ldr	r3, [sp, #44]	; 0x2c
   12bb0:	ldr	r2, [sp, #28]
   12bb4:	and	r2, r3, r2
   12bb8:	ands	r2, r9, r2
   12bbc:	bne	13208 <close@plt+0x22ac>
   12bc0:	mov	r4, #92	; 0x5c
   12bc4:	mov	r3, r4
   12bc8:	ldr	r1, [sp, #44]	; 0x2c
   12bcc:	cmp	r1, #0
   12bd0:	moveq	r5, #0
   12bd4:	moveq	r8, r1
   12bd8:	beq	12a74 <close@plt+0x1b18>
   12bdc:	mov	r4, r3
   12be0:	mov	r5, #0
   12be4:	ldr	r3, [sp, #28]
   12be8:	cmp	r3, #0
   12bec:	bne	131f0 <close@plt+0x2294>
   12bf0:	ldr	r3, [sp, #40]	; 0x28
   12bf4:	eor	r9, r3, #1
   12bf8:	and	r9, r9, r2
   12bfc:	ands	r9, r9, #255	; 0xff
   12c00:	beq	12c44 <close@plt+0x1ce8>
   12c04:	cmp	fp, r7
   12c08:	movhi	r2, #39	; 0x27
   12c0c:	ldrhi	r3, [sp, #32]
   12c10:	str	r9, [sp, #40]	; 0x28
   12c14:	strbhi	r2, [r3, r7]
   12c18:	add	r3, r7, #1
   12c1c:	cmp	fp, r3
   12c20:	movhi	r1, #36	; 0x24
   12c24:	ldrhi	r2, [sp, #32]
   12c28:	strbhi	r1, [r2, r3]
   12c2c:	add	r3, r7, #2
   12c30:	cmp	fp, r3
   12c34:	add	r7, r7, #3
   12c38:	ldrhi	r2, [sp, #32]
   12c3c:	movhi	r1, #39	; 0x27
   12c40:	strbhi	r1, [r2, r3]
   12c44:	cmp	fp, r7
   12c48:	movhi	r2, #92	; 0x5c
   12c4c:	ldrhi	r3, [sp, #32]
   12c50:	add	sl, sl, #1
   12c54:	strbhi	r2, [r3, r7]
   12c58:	add	r7, r7, #1
   12c5c:	b	12ae4 <close@plt+0x1b88>
   12c60:	ldr	r3, [sp, #152]	; 0x98
   12c64:	mov	r4, #11
   12c68:	sub	r2, r3, #2
   12c6c:	mov	r3, #118	; 0x76
   12c70:	clz	r2, r2
   12c74:	lsr	r2, r2, #5
   12c78:	b	12bc8 <close@plt+0x1c6c>
   12c7c:	mov	r4, #10
   12c80:	mov	r3, #110	; 0x6e
   12c84:	ldr	r2, [sp, #152]	; 0x98
   12c88:	ldr	r1, [sp, #28]
   12c8c:	sub	r2, r2, #2
   12c90:	clz	r2, r2
   12c94:	lsr	r2, r2, #5
   12c98:	ands	r1, r1, r2
   12c9c:	beq	12bc8 <close@plt+0x1c6c>
   12ca0:	ldr	sl, [sp, #32]
   12ca4:	mov	r8, fp
   12ca8:	mov	r2, r1
   12cac:	mov	r3, #2
   12cb0:	str	r3, [sp, #152]	; 0x98
   12cb4:	ldr	r9, [sp, #44]	; 0x2c
   12cb8:	ldr	r3, [sp, #152]	; 0x98
   12cbc:	and	r9, r9, r2
   12cc0:	tst	r9, #255	; 0xff
   12cc4:	movne	r3, #4
   12cc8:	str	r3, [sp, #152]	; 0x98
   12ccc:	ldr	r3, [sp, #156]	; 0x9c
   12cd0:	mov	ip, #0
   12cd4:	bic	r3, r3, #2
   12cd8:	str	r3, [sp, #4]
   12cdc:	ldr	r3, [sp, #168]	; 0xa8
   12ce0:	ldr	r2, [sp, #56]	; 0x38
   12ce4:	str	r3, [sp, #16]
   12ce8:	ldr	r3, [sp, #164]	; 0xa4
   12cec:	mov	r1, r8
   12cf0:	str	r3, [sp, #12]
   12cf4:	ldr	r3, [sp, #152]	; 0x98
   12cf8:	mov	r0, sl
   12cfc:	str	r3, [sp]
   12d00:	str	ip, [sp, #8]
   12d04:	ldr	r3, [sp, #24]
   12d08:	bl	124f0 <close@plt+0x1594>
   12d0c:	mov	fp, r0
   12d10:	mov	r0, fp
   12d14:	add	sp, sp, #116	; 0x74
   12d18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d1c:	ldr	r3, [sp, #152]	; 0x98
   12d20:	mov	r4, #8
   12d24:	sub	r2, r3, #2
   12d28:	mov	r3, #98	; 0x62
   12d2c:	clz	r2, r2
   12d30:	lsr	r2, r2, #5
   12d34:	b	12bc8 <close@plt+0x1c6c>
   12d38:	ldr	r3, [sp, #152]	; 0x98
   12d3c:	mov	r4, #7
   12d40:	sub	r2, r3, #2
   12d44:	mov	r3, #97	; 0x61
   12d48:	clz	r2, r2
   12d4c:	lsr	r2, r2, #5
   12d50:	b	12bc8 <close@plt+0x1c6c>
   12d54:	ldr	r3, [sp, #44]	; 0x2c
   12d58:	cmp	r3, #0
   12d5c:	beq	13540 <close@plt+0x25e4>
   12d60:	ldr	r3, [sp, #28]
   12d64:	cmp	r3, #0
   12d68:	bne	13818 <close@plt+0x28bc>
   12d6c:	ldr	r3, [sp, #152]	; 0x98
   12d70:	sub	r2, r3, #2
   12d74:	ldr	r3, [sp, #40]	; 0x28
   12d78:	clz	r2, r2
   12d7c:	eor	r3, r3, #1
   12d80:	lsr	r2, r2, #5
   12d84:	ands	r3, r2, r3
   12d88:	moveq	r1, r7
   12d8c:	beq	12dd0 <close@plt+0x1e74>
   12d90:	cmp	fp, r7
   12d94:	movhi	r0, #39	; 0x27
   12d98:	ldrhi	r1, [sp, #32]
   12d9c:	str	r3, [sp, #40]	; 0x28
   12da0:	strbhi	r0, [r1, r7]
   12da4:	add	r1, r7, #1
   12da8:	cmp	fp, r1
   12dac:	movhi	ip, #36	; 0x24
   12db0:	ldrhi	r0, [sp, #32]
   12db4:	strbhi	ip, [r0, r1]
   12db8:	add	r1, r7, #2
   12dbc:	cmp	fp, r1
   12dc0:	movhi	ip, #39	; 0x27
   12dc4:	ldrhi	r0, [sp, #32]
   12dc8:	strbhi	ip, [r0, r1]
   12dcc:	add	r1, r7, #3
   12dd0:	cmp	fp, r1
   12dd4:	movhi	r0, #92	; 0x5c
   12dd8:	ldrhi	r3, [sp, #32]
   12ddc:	add	r7, r1, #1
   12de0:	strbhi	r0, [r3, r1]
   12de4:	cmp	r8, #0
   12de8:	beq	1372c <close@plt+0x27d0>
   12dec:	ldr	r0, [sp, #24]
   12df0:	add	r3, sl, #1
   12df4:	cmp	r3, r0
   12df8:	bcs	13668 <close@plt+0x270c>
   12dfc:	ldr	r0, [sp, #56]	; 0x38
   12e00:	ldrb	r3, [r0, r3]
   12e04:	sub	r3, r3, #48	; 0x30
   12e08:	cmp	r3, #9
   12e0c:	bhi	13668 <close@plt+0x270c>
   12e10:	cmp	fp, r7
   12e14:	movhi	r3, #48	; 0x30
   12e18:	ldrhi	r0, [sp, #32]
   12e1c:	ldr	r5, [sp, #28]
   12e20:	mov	r4, #48	; 0x30
   12e24:	strbhi	r3, [r0, r7]
   12e28:	add	r3, r1, #2
   12e2c:	cmp	fp, r3
   12e30:	movhi	r0, #48	; 0x30
   12e34:	ldrhi	ip, [sp, #32]
   12e38:	add	r7, r1, #3
   12e3c:	strbhi	r0, [ip, r3]
   12e40:	b	12a74 <close@plt+0x1b18>
   12e44:	mov	r5, #0
   12e48:	ldr	r3, [sp, #152]	; 0x98
   12e4c:	sub	r2, r3, #2
   12e50:	ldr	r3, [sp, #28]
   12e54:	clz	r2, r2
   12e58:	lsr	r2, r2, #5
   12e5c:	ands	r8, r3, r2
   12e60:	beq	12a74 <close@plt+0x1b18>
   12e64:	mov	r3, r8
   12e68:	mov	r2, r3
   12e6c:	mov	r3, #2
   12e70:	ldr	sl, [sp, #32]
   12e74:	mov	r8, fp
   12e78:	str	r3, [sp, #152]	; 0x98
   12e7c:	b	12cb4 <close@plt+0x1d58>
   12e80:	ldr	r3, [sp, #152]	; 0x98
   12e84:	cmp	r3, #2
   12e88:	beq	135ac <close@plt+0x2650>
   12e8c:	cmp	r3, #5
   12e90:	beq	1356c <close@plt+0x2610>
   12e94:	mov	r5, #0
   12e98:	sub	r2, r3, #2
   12e9c:	mov	r8, r5
   12ea0:	clz	r2, r2
   12ea4:	mov	r4, #63	; 0x3f
   12ea8:	lsr	r2, r2, #5
   12eac:	b	12a74 <close@plt+0x1b18>
   12eb0:	ldr	r3, [sp, #152]	; 0x98
   12eb4:	cmp	r3, #2
   12eb8:	beq	135cc <close@plt+0x2670>
   12ebc:	mov	r2, #0
   12ec0:	str	r5, [sp, #68]	; 0x44
   12ec4:	mov	r8, r2
   12ec8:	mov	r4, #39	; 0x27
   12ecc:	b	12a74 <close@plt+0x1b18>
   12ed0:	mov	r4, #13
   12ed4:	mov	r3, #114	; 0x72
   12ed8:	b	12c84 <close@plt+0x1d28>
   12edc:	ldr	r3, [sp, #152]	; 0x98
   12ee0:	mov	r8, #0
   12ee4:	sub	r2, r3, #2
   12ee8:	clz	r2, r2
   12eec:	lsr	r2, r2, #5
   12ef0:	b	12a74 <close@plt+0x1b18>
   12ef4:	ldr	r3, [sp, #152]	; 0x98
   12ef8:	mov	r4, #12
   12efc:	sub	r2, r3, #2
   12f00:	mov	r3, #102	; 0x66
   12f04:	clz	r2, r2
   12f08:	lsr	r2, r2, #5
   12f0c:	b	12bc8 <close@plt+0x1c6c>
   12f10:	mov	r5, r6
   12f14:	b	12e48 <close@plt+0x1eec>
   12f18:	ldr	r3, [sp, #152]	; 0x98
   12f1c:	sub	r2, r3, #2
   12f20:	mov	r3, #116	; 0x74
   12f24:	clz	r2, r2
   12f28:	lsr	r2, r2, #5
   12f2c:	b	12bc8 <close@plt+0x1c6c>
   12f30:	ldr	r8, [sp, #76]	; 0x4c
   12f34:	cmp	r8, #1
   12f38:	bne	133e8 <close@plt+0x248c>
   12f3c:	bl	10e6c <__ctype_b_loc@plt>
   12f40:	sxth	r3, r4
   12f44:	mov	ip, r8
   12f48:	lsl	r3, r3, #1
   12f4c:	ldr	r2, [r0]
   12f50:	ldrh	r3, [r2, r3]
   12f54:	and	r3, r3, #16384	; 0x4000
   12f58:	cmp	r3, #0
   12f5c:	movne	r5, #1
   12f60:	moveq	r5, #0
   12f64:	moveq	r3, #1
   12f68:	movne	r3, #0
   12f6c:	ldr	r2, [sp, #44]	; 0x2c
   12f70:	and	r3, r3, r2
   12f74:	ands	r8, r3, #255	; 0xff
   12f78:	bne	1327c <close@plt+0x2320>
   12f7c:	ldr	r3, [sp, #152]	; 0x98
   12f80:	sub	r2, r3, #2
   12f84:	clz	r2, r2
   12f88:	lsr	r2, r2, #5
   12f8c:	b	12a74 <close@plt+0x1b18>
   12f90:	ldr	r3, [sp, #56]	; 0x38
   12f94:	add	r3, r3, sl
   12f98:	str	r3, [sp, #48]	; 0x30
   12f9c:	ldr	r3, [sp, #48]	; 0x30
   12fa0:	mov	r6, #0
   12fa4:	ldrb	r4, [r3]
   12fa8:	cmp	r4, #126	; 0x7e
   12fac:	ldrls	pc, [pc, r4, lsl #2]
   12fb0:	b	12f30 <close@plt+0x1fd4>
   12fb4:	andeq	r2, r1, r4, asr sp
   12fb8:	andeq	r2, r1, r0, lsr pc
   12fbc:	andeq	r2, r1, r0, lsr pc
   12fc0:	andeq	r2, r1, r0, lsr pc
   12fc4:	andeq	r2, r1, r0, lsr pc
   12fc8:	andeq	r2, r1, r0, lsr pc
   12fcc:	andeq	r2, r1, r0, lsr pc
   12fd0:	andeq	r2, r1, r8, lsr sp
   12fd4:	andeq	r2, r1, ip, lsl sp
   12fd8:			; <UNDEFINED> instruction: 0x000131b0
   12fdc:	andeq	r2, r1, ip, ror ip
   12fe0:	andeq	r2, r1, r0, ror #24
   12fe4:	strdeq	r2, [r1], -r4
   12fe8:	ldrdeq	r2, [r1], -r0
   12fec:	andeq	r2, r1, r0, lsr pc
   12ff0:	andeq	r2, r1, r0, lsr pc
   12ff4:	andeq	r2, r1, r0, lsr pc
   12ff8:	andeq	r2, r1, r0, lsr pc
   12ffc:	andeq	r2, r1, r0, lsr pc
   13000:	andeq	r2, r1, r0, lsr pc
   13004:	andeq	r2, r1, r0, lsr pc
   13008:	andeq	r2, r1, r0, lsr pc
   1300c:	andeq	r2, r1, r0, lsr pc
   13010:	andeq	r2, r1, r0, lsr pc
   13014:	andeq	r2, r1, r0, lsr pc
   13018:	andeq	r2, r1, r0, lsr pc
   1301c:	andeq	r2, r1, r0, lsr pc
   13020:	andeq	r2, r1, r0, lsr pc
   13024:	andeq	r2, r1, r0, lsr pc
   13028:	andeq	r2, r1, r0, lsr pc
   1302c:	andeq	r2, r1, r0, lsr pc
   13030:	andeq	r2, r1, r0, lsr pc
   13034:	andeq	r2, r1, r8, asr #28
   13038:	andeq	r2, r1, r4, asr #28
   1303c:	andeq	r2, r1, r4, asr #28
   13040:	andeq	r2, r1, r4, asr sl
   13044:	andeq	r2, r1, r4, asr #28
   13048:	ldrdeq	r2, [r1], -ip
   1304c:	andeq	r2, r1, r4, asr #28
   13050:			; <UNDEFINED> instruction: 0x00012eb0
   13054:	andeq	r2, r1, r4, asr #28
   13058:	andeq	r2, r1, r4, asr #28
   1305c:	andeq	r2, r1, r4, asr #28
   13060:	ldrdeq	r2, [r1], -ip
   13064:	ldrdeq	r2, [r1], -ip
   13068:	ldrdeq	r2, [r1], -ip
   1306c:	ldrdeq	r2, [r1], -ip
   13070:	ldrdeq	r2, [r1], -ip
   13074:	ldrdeq	r2, [r1], -ip
   13078:	ldrdeq	r2, [r1], -ip
   1307c:	ldrdeq	r2, [r1], -ip
   13080:	ldrdeq	r2, [r1], -ip
   13084:	ldrdeq	r2, [r1], -ip
   13088:	ldrdeq	r2, [r1], -ip
   1308c:	ldrdeq	r2, [r1], -ip
   13090:	ldrdeq	r2, [r1], -ip
   13094:	ldrdeq	r2, [r1], -ip
   13098:	ldrdeq	r2, [r1], -ip
   1309c:	ldrdeq	r2, [r1], -ip
   130a0:	andeq	r2, r1, r4, asr #28
   130a4:	andeq	r2, r1, r4, asr #28
   130a8:	andeq	r2, r1, r4, asr #28
   130ac:	andeq	r2, r1, r4, asr #28
   130b0:	andeq	r2, r1, r0, lsl #29
   130b4:	andeq	r2, r1, r0, lsr pc
   130b8:	ldrdeq	r2, [r1], -ip
   130bc:	ldrdeq	r2, [r1], -ip
   130c0:	ldrdeq	r2, [r1], -ip
   130c4:	ldrdeq	r2, [r1], -ip
   130c8:	ldrdeq	r2, [r1], -ip
   130cc:	ldrdeq	r2, [r1], -ip
   130d0:	ldrdeq	r2, [r1], -ip
   130d4:	ldrdeq	r2, [r1], -ip
   130d8:	ldrdeq	r2, [r1], -ip
   130dc:	ldrdeq	r2, [r1], -ip
   130e0:	ldrdeq	r2, [r1], -ip
   130e4:	ldrdeq	r2, [r1], -ip
   130e8:	ldrdeq	r2, [r1], -ip
   130ec:	ldrdeq	r2, [r1], -ip
   130f0:	ldrdeq	r2, [r1], -ip
   130f4:	ldrdeq	r2, [r1], -ip
   130f8:	ldrdeq	r2, [r1], -ip
   130fc:	ldrdeq	r2, [r1], -ip
   13100:	ldrdeq	r2, [r1], -ip
   13104:	ldrdeq	r2, [r1], -ip
   13108:	ldrdeq	r2, [r1], -ip
   1310c:	ldrdeq	r2, [r1], -ip
   13110:	ldrdeq	r2, [r1], -ip
   13114:	ldrdeq	r2, [r1], -ip
   13118:	ldrdeq	r2, [r1], -ip
   1311c:	ldrdeq	r2, [r1], -ip
   13120:	andeq	r2, r1, r4, asr #28
   13124:	andeq	r2, r1, r0, lsr #23
   13128:	ldrdeq	r2, [r1], -ip
   1312c:	andeq	r2, r1, r4, asr #28
   13130:	ldrdeq	r2, [r1], -ip
   13134:	andeq	r2, r1, r4, asr #28
   13138:	ldrdeq	r2, [r1], -ip
   1313c:	ldrdeq	r2, [r1], -ip
   13140:	ldrdeq	r2, [r1], -ip
   13144:	ldrdeq	r2, [r1], -ip
   13148:	ldrdeq	r2, [r1], -ip
   1314c:	ldrdeq	r2, [r1], -ip
   13150:	ldrdeq	r2, [r1], -ip
   13154:	ldrdeq	r2, [r1], -ip
   13158:	ldrdeq	r2, [r1], -ip
   1315c:	ldrdeq	r2, [r1], -ip
   13160:	ldrdeq	r2, [r1], -ip
   13164:	ldrdeq	r2, [r1], -ip
   13168:	ldrdeq	r2, [r1], -ip
   1316c:	ldrdeq	r2, [r1], -ip
   13170:	ldrdeq	r2, [r1], -ip
   13174:	ldrdeq	r2, [r1], -ip
   13178:	ldrdeq	r2, [r1], -ip
   1317c:	ldrdeq	r2, [r1], -ip
   13180:	ldrdeq	r2, [r1], -ip
   13184:	ldrdeq	r2, [r1], -ip
   13188:	ldrdeq	r2, [r1], -ip
   1318c:	ldrdeq	r2, [r1], -ip
   13190:	ldrdeq	r2, [r1], -ip
   13194:	ldrdeq	r2, [r1], -ip
   13198:	ldrdeq	r2, [r1], -ip
   1319c:	ldrdeq	r2, [r1], -ip
   131a0:	andeq	r2, r1, r4, lsr sl
   131a4:	andeq	r2, r1, r4, asr #28
   131a8:	andeq	r2, r1, r4, lsr sl
   131ac:	andeq	r2, r1, r4, asr sl
   131b0:	mov	r3, #116	; 0x74
   131b4:	b	12c84 <close@plt+0x1d28>
   131b8:	ldr	r3, [sp, #160]	; 0xa0
   131bc:	cmp	r3, #0
   131c0:	beq	12a90 <close@plt+0x1b34>
   131c4:	lsr	r3, r4, #5
   131c8:	ldr	r0, [sp, #160]	; 0xa0
   131cc:	uxtb	r3, r3
   131d0:	and	r1, r4, #31
   131d4:	ldr	r0, [r0, r3, lsl #2]
   131d8:	lsr	r3, r0, r1
   131dc:	tst	r3, #1
   131e0:	beq	12a90 <close@plt+0x1b34>
   131e4:	ldr	r3, [sp, #28]
   131e8:	cmp	r3, #0
   131ec:	beq	12bf0 <close@plt+0x1c94>
   131f0:	ldr	sl, [sp, #32]
   131f4:	mov	r8, fp
   131f8:	b	12cb4 <close@plt+0x1d58>
   131fc:	ldr	r3, [sp, #28]
   13200:	cmp	r3, #0
   13204:	bne	13758 <close@plt+0x27fc>
   13208:	add	sl, sl, #1
   1320c:	ldr	r6, [sp, #40]	; 0x28
   13210:	mov	r5, #0
   13214:	mov	r4, #92	; 0x5c
   13218:	b	12aac <close@plt+0x1b50>
   1321c:	cmp	r9, r8
   13220:	bne	13490 <close@plt+0x2534>
   13224:	ldr	r0, [sp, #100]	; 0x64
   13228:	bl	10dac <iswprint@plt>
   1322c:	add	r5, r5, r4
   13230:	cmp	r0, #0
   13234:	add	r0, sp, #104	; 0x68
   13238:	moveq	r6, #0
   1323c:	bl	10d58 <mbsinit@plt>
   13240:	cmp	r0, #0
   13244:	beq	13424 <close@plt+0x24c8>
   13248:	mov	r2, r6
   1324c:	mov	ip, r5
   13250:	eor	r5, r2, #1
   13254:	ldr	r4, [sp, #80]	; 0x50
   13258:	ldr	r6, [sp, #84]	; 0x54
   1325c:	ldr	r7, [sp, #88]	; 0x58
   13260:	uxtb	r5, r5
   13264:	cmp	ip, #1
   13268:	bls	13768 <close@plt+0x280c>
   1326c:	ldr	r3, [sp, #44]	; 0x2c
   13270:	and	r8, r3, r5
   13274:	mov	r5, r2
   13278:	uxtb	r8, r8
   1327c:	add	r2, sl, ip
   13280:	ldr	r0, [sp, #48]	; 0x30
   13284:	mov	r1, #0
   13288:	str	r5, [sp, #48]	; 0x30
   1328c:	ldr	r9, [sp, #28]
   13290:	ldr	ip, [sp, #40]	; 0x28
   13294:	ldr	r3, [sp, #32]
   13298:	ldr	r5, [sp, #152]	; 0x98
   1329c:	b	13358 <close@plt+0x23fc>
   132a0:	cmp	r9, #0
   132a4:	bne	1367c <close@plt+0x2720>
   132a8:	eor	r1, ip, #1
   132ac:	cmp	r5, #2
   132b0:	movne	r1, #0
   132b4:	andeq	r1, r1, #1
   132b8:	cmp	r1, #0
   132bc:	beq	132f4 <close@plt+0x2398>
   132c0:	cmp	fp, r7
   132c4:	movhi	ip, #39	; 0x27
   132c8:	strbhi	ip, [r3, r7]
   132cc:	add	ip, r7, #1
   132d0:	cmp	fp, ip
   132d4:	movhi	lr, #36	; 0x24
   132d8:	strbhi	lr, [r3, ip]
   132dc:	add	ip, r7, #2
   132e0:	cmp	fp, ip
   132e4:	movhi	lr, #39	; 0x27
   132e8:	strbhi	lr, [r3, ip]
   132ec:	add	r7, r7, #3
   132f0:	mov	ip, r1
   132f4:	cmp	fp, r7
   132f8:	movhi	r1, #92	; 0x5c
   132fc:	strbhi	r1, [r3, r7]
   13300:	add	r1, r7, #1
   13304:	cmp	fp, r1
   13308:	lsrhi	lr, r4, #6
   1330c:	addhi	lr, lr, #48	; 0x30
   13310:	strbhi	lr, [r3, r1]
   13314:	add	lr, r7, #2
   13318:	cmp	fp, lr
   1331c:	lsrhi	r1, r4, #3
   13320:	andhi	r1, r1, #7
   13324:	addhi	r1, r1, #48	; 0x30
   13328:	add	sl, sl, #1
   1332c:	strbhi	r1, [r3, lr]
   13330:	and	r4, r4, #7
   13334:	cmp	r2, sl
   13338:	add	r4, r4, #48	; 0x30
   1333c:	add	r7, r7, #3
   13340:	bls	136a0 <close@plt+0x2744>
   13344:	mov	r1, r8
   13348:	cmp	fp, r7
   1334c:	strbhi	r4, [r3, r7]
   13350:	ldrb	r4, [r0, #1]!
   13354:	add	r7, r7, #1
   13358:	cmp	r8, #0
   1335c:	bne	132a0 <close@plt+0x2344>
   13360:	cmp	r6, #0
   13364:	bne	133b4 <close@plt+0x2458>
   13368:	eor	r6, r1, #1
   1336c:	and	r6, r6, ip
   13370:	add	sl, sl, #1
   13374:	cmp	r2, sl
   13378:	uxtb	r6, r6
   1337c:	bls	133dc <close@plt+0x2480>
   13380:	cmp	r6, #0
   13384:	beq	13348 <close@plt+0x23ec>
   13388:	cmp	fp, r7
   1338c:	movhi	ip, #39	; 0x27
   13390:	strbhi	ip, [r3, r7]
   13394:	add	ip, r7, #1
   13398:	cmp	fp, ip
   1339c:	movhi	lr, #39	; 0x27
   133a0:	strbhi	lr, [r3, ip]
   133a4:	add	r7, r7, #2
   133a8:	mov	r6, r8
   133ac:	mov	ip, r8
   133b0:	b	13348 <close@plt+0x23ec>
   133b4:	cmp	fp, r7
   133b8:	eor	r6, r1, #1
   133bc:	movhi	lr, #92	; 0x5c
   133c0:	and	r6, r6, ip
   133c4:	add	sl, sl, #1
   133c8:	strbhi	lr, [r3, r7]
   133cc:	cmp	r2, sl
   133d0:	add	r7, r7, #1
   133d4:	uxtb	r6, r6
   133d8:	bhi	13380 <close@plt+0x2424>
   133dc:	str	ip, [sp, #40]	; 0x28
   133e0:	ldr	r5, [sp, #48]	; 0x30
   133e4:	b	12aac <close@plt+0x1b50>
   133e8:	ldr	r3, [sp, #24]
   133ec:	cmn	r3, #1
   133f0:	mov	r3, #0
   133f4:	str	r3, [sp, #104]	; 0x68
   133f8:	str	r3, [sp, #108]	; 0x6c
   133fc:	beq	1371c <close@plt+0x27c0>
   13400:	mov	r2, r5
   13404:	mov	r3, #0
   13408:	str	r7, [sp, #88]	; 0x58
   1340c:	ldr	r7, [sp, #152]	; 0x98
   13410:	str	r5, [sp, #92]	; 0x5c
   13414:	str	r6, [sp, #84]	; 0x54
   13418:	mov	r5, r3
   1341c:	mov	r6, r2
   13420:	str	r4, [sp, #80]	; 0x50
   13424:	ldr	r3, [sp, #56]	; 0x38
   13428:	add	r9, sl, r5
   1342c:	add	r8, r3, r9
   13430:	ldr	r3, [sp, #24]
   13434:	mov	r1, r8
   13438:	sub	r2, r3, r9
   1343c:	add	r0, sp, #100	; 0x64
   13440:	add	r3, sp, #104	; 0x68
   13444:	bl	15070 <close@plt+0x4114>
   13448:	subs	r4, r0, #0
   1344c:	beq	137f4 <close@plt+0x2898>
   13450:	cmn	r4, #1
   13454:	beq	137d4 <close@plt+0x2878>
   13458:	cmn	r4, #2
   1345c:	beq	13774 <close@plt+0x2818>
   13460:	ldr	r2, [sp, #28]
   13464:	cmp	r7, #2
   13468:	movne	r2, #0
   1346c:	andeq	r2, r2, #1
   13470:	cmp	r2, #0
   13474:	beq	13224 <close@plt+0x22c8>
   13478:	cmp	r4, #1
   1347c:	beq	13224 <close@plt+0x22c8>
   13480:	sub	r3, r4, #1
   13484:	add	r9, r3, r9
   13488:	ldr	r3, [sp, #56]	; 0x38
   1348c:	add	r9, r3, r9
   13490:	ldrb	r3, [r8, #1]!
   13494:	sub	r3, r3, #91	; 0x5b
   13498:	cmp	r3, #33	; 0x21
   1349c:	ldrls	pc, [pc, r3, lsl #2]
   134a0:	b	1321c <close@plt+0x22c0>
   134a4:	andeq	r3, r1, ip, lsr #10
   134a8:	andeq	r3, r1, ip, lsr #10
   134ac:	andeq	r3, r1, ip, lsl r2
   134b0:	andeq	r3, r1, ip, lsr #10
   134b4:	andeq	r3, r1, ip, lsl r2
   134b8:	andeq	r3, r1, ip, lsr #10
   134bc:	andeq	r3, r1, ip, lsl r2
   134c0:	andeq	r3, r1, ip, lsl r2
   134c4:	andeq	r3, r1, ip, lsl r2
   134c8:	andeq	r3, r1, ip, lsl r2
   134cc:	andeq	r3, r1, ip, lsl r2
   134d0:	andeq	r3, r1, ip, lsl r2
   134d4:	andeq	r3, r1, ip, lsl r2
   134d8:	andeq	r3, r1, ip, lsl r2
   134dc:	andeq	r3, r1, ip, lsl r2
   134e0:	andeq	r3, r1, ip, lsl r2
   134e4:	andeq	r3, r1, ip, lsl r2
   134e8:	andeq	r3, r1, ip, lsl r2
   134ec:	andeq	r3, r1, ip, lsl r2
   134f0:	andeq	r3, r1, ip, lsl r2
   134f4:	andeq	r3, r1, ip, lsl r2
   134f8:	andeq	r3, r1, ip, lsl r2
   134fc:	andeq	r3, r1, ip, lsl r2
   13500:	andeq	r3, r1, ip, lsl r2
   13504:	andeq	r3, r1, ip, lsl r2
   13508:	andeq	r3, r1, ip, lsl r2
   1350c:	andeq	r3, r1, ip, lsl r2
   13510:	andeq	r3, r1, ip, lsl r2
   13514:	andeq	r3, r1, ip, lsl r2
   13518:	andeq	r3, r1, ip, lsl r2
   1351c:	andeq	r3, r1, ip, lsl r2
   13520:	andeq	r3, r1, ip, lsl r2
   13524:	andeq	r3, r1, ip, lsl r2
   13528:	andeq	r3, r1, ip, lsr #10
   1352c:	mov	r3, #2
   13530:	ldr	sl, [sp, #32]
   13534:	mov	r8, fp
   13538:	str	r3, [sp, #152]	; 0x98
   1353c:	b	12cb4 <close@plt+0x1d58>
   13540:	ldr	r3, [sp, #156]	; 0x9c
   13544:	tst	r3, #1
   13548:	bne	13674 <close@plt+0x2718>
   1354c:	ldr	r3, [sp, #152]	; 0x98
   13550:	ldr	r4, [sp, #44]	; 0x2c
   13554:	sub	r2, r3, #2
   13558:	mov	r5, #0
   1355c:	clz	r2, r2
   13560:	mov	r8, r4
   13564:	lsr	r2, r2, #5
   13568:	b	12a74 <close@plt+0x1b18>
   1356c:	ldr	r3, [sp, #156]	; 0x9c
   13570:	ands	r9, r3, #4
   13574:	beq	136ac <close@plt+0x2750>
   13578:	ldr	r2, [sp, #24]
   1357c:	add	r3, sl, #2
   13580:	cmp	r3, r2
   13584:	bcs	13598 <close@plt+0x263c>
   13588:	ldr	r2, [sp, #48]	; 0x30
   1358c:	ldrb	r4, [r2, #1]
   13590:	cmp	r4, #63	; 0x3f
   13594:	beq	13834 <close@plt+0x28d8>
   13598:	mov	r2, #0
   1359c:	mov	r8, r2
   135a0:	mov	r5, r2
   135a4:	mov	r4, #63	; 0x3f
   135a8:	b	12a74 <close@plt+0x1b18>
   135ac:	ldr	r3, [sp, #28]
   135b0:	cmp	r3, #0
   135b4:	bne	138d8 <close@plt+0x297c>
   135b8:	mov	r2, r5
   135bc:	mov	r8, r3
   135c0:	mov	r5, #0
   135c4:	mov	r4, #63	; 0x3f
   135c8:	b	12a74 <close@plt+0x1b18>
   135cc:	ldr	r3, [sp, #28]
   135d0:	cmp	r3, #0
   135d4:	bne	138d8 <close@plt+0x297c>
   135d8:	ldr	r2, [sp, #72]	; 0x48
   135dc:	adds	r3, fp, #0
   135e0:	movne	r3, #1
   135e4:	cmp	r2, #0
   135e8:	movne	r3, #0
   135ec:	cmp	r3, #0
   135f0:	strne	fp, [sp, #72]	; 0x48
   135f4:	movne	fp, #0
   135f8:	bne	13634 <close@plt+0x26d8>
   135fc:	cmp	fp, r7
   13600:	movhi	r2, #39	; 0x27
   13604:	ldrhi	r3, [sp, #32]
   13608:	strbhi	r2, [r3, r7]
   1360c:	add	r3, r7, #1
   13610:	cmp	fp, r3
   13614:	movhi	r1, #92	; 0x5c
   13618:	ldrhi	r2, [sp, #32]
   1361c:	strbhi	r1, [r2, r3]
   13620:	add	r3, r7, #2
   13624:	cmp	fp, r3
   13628:	movhi	r1, #39	; 0x27
   1362c:	ldrhi	r2, [sp, #32]
   13630:	strbhi	r1, [r2, r3]
   13634:	ldr	r3, [sp, #28]
   13638:	add	r7, r7, #3
   1363c:	mov	r2, r5
   13640:	mov	r8, r3
   13644:	str	r5, [sp, #68]	; 0x44
   13648:	str	r3, [sp, #40]	; 0x28
   1364c:	mov	r4, #39	; 0x27
   13650:	b	12a74 <close@plt+0x1b18>
   13654:	ldr	r3, [sp, #56]	; 0x38
   13658:	ldrb	r3, [r3, #1]
   1365c:	adds	r3, r3, #0
   13660:	movne	r3, #1
   13664:	b	12a4c <close@plt+0x1af0>
   13668:	ldr	r5, [sp, #28]
   1366c:	mov	r4, #48	; 0x30
   13670:	b	12a74 <close@plt+0x1b18>
   13674:	add	sl, sl, #1
   13678:	b	125a4 <close@plt+0x1648>
   1367c:	mov	sl, r3
   13680:	ldr	r3, [sp, #28]
   13684:	mov	r8, fp
   13688:	str	r3, [sp, #44]	; 0x2c
   1368c:	ldr	r3, [sp, #152]	; 0x98
   13690:	sub	r2, r3, #2
   13694:	clz	r2, r2
   13698:	lsr	r2, r2, #5
   1369c:	b	12cb4 <close@plt+0x1d58>
   136a0:	str	ip, [sp, #40]	; 0x28
   136a4:	ldr	r5, [sp, #48]	; 0x30
   136a8:	b	12ae4 <close@plt+0x1b88>
   136ac:	mov	r2, r9
   136b0:	mov	r8, r9
   136b4:	mov	r5, #0
   136b8:	mov	r4, #63	; 0x3f
   136bc:	b	12a74 <close@plt+0x1b18>
   136c0:	cmp	fp, #0
   136c4:	beq	1373c <close@plt+0x27e0>
   136c8:	ldr	r1, [sp, #32]
   136cc:	mov	r3, #34	; 0x22
   136d0:	mov	r2, #1
   136d4:	strb	r3, [r1]
   136d8:	ldr	r3, [pc, #332]	; 1382c <close@plt+0x28d0>
   136dc:	str	r2, [sp, #52]	; 0x34
   136e0:	mov	r7, r2
   136e4:	str	r2, [sp, #44]	; 0x2c
   136e8:	str	r3, [sp, #64]	; 0x40
   136ec:	b	12594 <close@plt+0x1638>
   136f0:	ldr	r3, [pc, #300]	; 13824 <close@plt+0x28c8>
   136f4:	str	r3, [sp, #64]	; 0x40
   136f8:	mov	r3, #0
   136fc:	str	r3, [sp, #28]
   13700:	mov	r3, #1
   13704:	str	r3, [sp, #52]	; 0x34
   13708:	mov	r7, r3
   1370c:	mov	r3, #2
   13710:	str	r3, [sp, #152]	; 0x98
   13714:	b	12594 <close@plt+0x1638>
   13718:	bl	10f50 <abort@plt>
   1371c:	ldr	r0, [sp, #56]	; 0x38
   13720:	bl	10e84 <strlen@plt>
   13724:	str	r0, [sp, #24]
   13728:	b	13400 <close@plt+0x24a4>
   1372c:	mov	r5, r8
   13730:	mov	r4, #48	; 0x30
   13734:	ldr	r8, [sp, #44]	; 0x2c
   13738:	b	12a74 <close@plt+0x1b18>
   1373c:	mov	r3, #1
   13740:	str	r3, [sp, #52]	; 0x34
   13744:	mov	r7, r3
   13748:	str	r3, [sp, #44]	; 0x2c
   1374c:	ldr	r3, [pc, #216]	; 1382c <close@plt+0x28d0>
   13750:	str	r3, [sp, #64]	; 0x40
   13754:	b	12594 <close@plt+0x1638>
   13758:	ldr	sl, [sp, #32]
   1375c:	mov	r8, fp
   13760:	mov	r2, r3
   13764:	b	12cb4 <close@plt+0x1d58>
   13768:	mov	r3, r5
   1376c:	mov	r5, r2
   13770:	b	12f6c <close@plt+0x2010>
   13774:	ldr	r1, [sp, #24]
   13778:	mov	r2, r5
   1377c:	cmp	r1, r9
   13780:	mov	ip, r5
   13784:	ldr	r4, [sp, #80]	; 0x50
   13788:	ldr	r5, [sp, #92]	; 0x5c
   1378c:	ldr	r6, [sp, #84]	; 0x54
   13790:	ldr	r7, [sp, #88]	; 0x58
   13794:	bls	137c8 <close@plt+0x286c>
   13798:	ldrb	r3, [r8]
   1379c:	cmp	r3, #0
   137a0:	bne	137b4 <close@plt+0x2858>
   137a4:	b	137cc <close@plt+0x2870>
   137a8:	ldrb	r3, [r8, #1]!
   137ac:	cmp	r3, #0
   137b0:	beq	138cc <close@plt+0x2970>
   137b4:	add	r2, r2, #1
   137b8:	add	r3, sl, r2
   137bc:	cmp	r1, r3
   137c0:	bhi	137a8 <close@plt+0x284c>
   137c4:	mov	ip, r2
   137c8:	mov	r3, #0
   137cc:	mov	r2, r3
   137d0:	b	13264 <close@plt+0x2308>
   137d4:	mov	r3, #0
   137d8:	mov	ip, r5
   137dc:	ldr	r4, [sp, #80]	; 0x50
   137e0:	ldr	r5, [sp, #92]	; 0x5c
   137e4:	ldr	r6, [sp, #84]	; 0x54
   137e8:	ldr	r7, [sp, #88]	; 0x58
   137ec:	mov	r2, r3
   137f0:	b	13264 <close@plt+0x2308>
   137f4:	mov	r3, r6
   137f8:	mov	ip, r5
   137fc:	eor	r5, r3, #1
   13800:	mov	r2, r6
   13804:	ldr	r4, [sp, #80]	; 0x50
   13808:	ldr	r6, [sp, #84]	; 0x54
   1380c:	ldr	r7, [sp, #88]	; 0x58
   13810:	uxtb	r5, r5
   13814:	b	13264 <close@plt+0x2308>
   13818:	ldr	sl, [sp, #32]
   1381c:	mov	r8, fp
   13820:	b	13688 <close@plt+0x272c>
   13824:	ldrdeq	r5, [r1], -r8
   13828:	ldrdeq	r5, [r1], -ip
   1382c:	ldrdeq	r5, [r1], -r4
   13830:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   13834:	ldr	r2, [sp, #56]	; 0x38
   13838:	ldrb	r1, [r2, r3]
   1383c:	sub	r2, r1, #33	; 0x21
   13840:	uxtb	r2, r2
   13844:	cmp	r2, #29
   13848:	bhi	138e8 <close@plt+0x298c>
   1384c:	ldr	r0, [pc, #-36]	; 13830 <close@plt+0x28d4>
   13850:	mov	ip, #1
   13854:	ands	r2, r0, ip, lsl r2
   13858:	beq	138f8 <close@plt+0x299c>
   1385c:	ldr	r2, [sp, #28]
   13860:	cmp	r2, #0
   13864:	bne	139f8 <close@plt+0x2a9c>
   13868:	cmp	fp, r7
   1386c:	ldr	r8, [sp, #28]
   13870:	ldrhi	r2, [sp, #32]
   13874:	mov	sl, r3
   13878:	mov	r5, r8
   1387c:	strbhi	r4, [r2, r7]
   13880:	add	r2, r7, #1
   13884:	cmp	fp, r2
   13888:	movhi	r0, #34	; 0x22
   1388c:	ldrhi	ip, [sp, #32]
   13890:	mov	r4, r1
   13894:	strbhi	r0, [ip, r2]
   13898:	add	r2, r7, #2
   1389c:	cmp	fp, r2
   138a0:	movhi	r0, #34	; 0x22
   138a4:	ldrhi	ip, [sp, #32]
   138a8:	strbhi	r0, [ip, r2]
   138ac:	add	r2, r7, #3
   138b0:	cmp	fp, r2
   138b4:	movhi	r0, #63	; 0x3f
   138b8:	ldrhi	ip, [sp, #32]
   138bc:	add	r7, r7, #4
   138c0:	strbhi	r0, [ip, r2]
   138c4:	mov	r2, r8
   138c8:	b	12a74 <close@plt+0x1b18>
   138cc:	mov	ip, r2
   138d0:	mov	r2, r3
   138d4:	b	13264 <close@plt+0x2308>
   138d8:	ldr	sl, [sp, #32]
   138dc:	mov	r8, fp
   138e0:	ldr	r2, [sp, #28]
   138e4:	b	12cb4 <close@plt+0x1d58>
   138e8:	mov	r2, #0
   138ec:	mov	r8, r2
   138f0:	mov	r5, r2
   138f4:	b	12a74 <close@plt+0x1b18>
   138f8:	mov	r8, r2
   138fc:	mov	r5, #0
   13900:	b	12a74 <close@plt+0x1b18>
   13904:	ldr	r1, [sp, #152]	; 0x98
   13908:	bl	123d0 <close@plt+0x1474>
   1390c:	str	r0, [sp, #168]	; 0xa8
   13910:	b	12930 <close@plt+0x19d4>
   13914:	ldr	r1, [sp, #152]	; 0x98
   13918:	bl	123d0 <close@plt+0x1474>
   1391c:	str	r0, [sp, #164]	; 0xa4
   13920:	b	12910 <close@plt+0x19b4>
   13924:	ldr	r7, [sp, #28]
   13928:	b	12970 <close@plt+0x1a14>
   1392c:	ldr	sl, [sp, #32]
   13930:	ldr	r2, [sp, #68]	; 0x44
   13934:	mov	r8, fp
   13938:	mov	fp, r7
   1393c:	ldr	r3, [sp, #64]	; 0x40
   13940:	cmp	r3, #0
   13944:	moveq	r2, #0
   13948:	andne	r2, r2, #1
   1394c:	cmp	r2, #0
   13950:	beq	1397c <close@plt+0x2a20>
   13954:	mov	r2, r3
   13958:	ldrb	r3, [r3]
   1395c:	cmp	r3, #0
   13960:	beq	1397c <close@plt+0x2a20>
   13964:	cmp	r8, fp
   13968:	strbhi	r3, [sl, fp]
   1396c:	ldrb	r3, [r2, #1]!
   13970:	add	fp, fp, #1
   13974:	cmp	r3, #0
   13978:	bne	13964 <close@plt+0x2a08>
   1397c:	cmp	r8, fp
   13980:	movhi	r3, #0
   13984:	strbhi	r3, [sl, fp]
   13988:	b	12d10 <close@plt+0x1db4>
   1398c:	ldr	r3, [sp, #168]	; 0xa8
   13990:	ldr	sl, [sp, #32]
   13994:	str	r3, [sp, #16]
   13998:	ldr	r3, [sp, #164]	; 0xa4
   1399c:	mov	ip, #5
   139a0:	str	r3, [sp, #12]
   139a4:	ldr	r3, [sp, #160]	; 0xa0
   139a8:	ldr	r2, [sp, #56]	; 0x38
   139ac:	str	r3, [sp, #8]
   139b0:	ldr	r3, [sp, #156]	; 0x9c
   139b4:	ldr	r1, [sp, #72]	; 0x48
   139b8:	str	r3, [sp, #4]
   139bc:	mov	r0, sl
   139c0:	ldr	r3, [sp, #24]
   139c4:	str	ip, [sp]
   139c8:	bl	124f0 <close@plt+0x1594>
   139cc:	mov	fp, r0
   139d0:	b	12d10 <close@plt+0x1db4>
   139d4:	mov	r8, fp
   139d8:	ldr	sl, [sp, #32]
   139dc:	mov	fp, r7
   139e0:	mov	r2, r3
   139e4:	b	1393c <close@plt+0x29e0>
   139e8:	mov	r8, fp
   139ec:	ldr	sl, [sp, #32]
   139f0:	mov	fp, r7
   139f4:	b	1393c <close@plt+0x29e0>
   139f8:	ldr	sl, [sp, #32]
   139fc:	mov	r8, fp
   13a00:	b	12ccc <close@plt+0x1d70>
   13a04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a08:	sub	sp, sp, #52	; 0x34
   13a0c:	mov	r4, r0
   13a10:	mov	r5, r3
   13a14:	mov	sl, r1
   13a18:	mov	fp, r2
   13a1c:	bl	10e9c <__errno_location@plt>
   13a20:	ldr	r7, [pc, #412]	; 13bc4 <close@plt+0x2c68>
   13a24:	cmn	r4, #-2147483647	; 0x80000001
   13a28:	ldr	r6, [r7]
   13a2c:	mov	r8, r0
   13a30:	movne	r0, #0
   13a34:	moveq	r0, #1
   13a38:	ldr	r3, [r8]
   13a3c:	orrs	r0, r0, r4, lsr #31
   13a40:	str	r3, [sp, #24]
   13a44:	bne	13bc0 <close@plt+0x2c64>
   13a48:	ldr	r2, [r7, #4]
   13a4c:	cmp	r4, r2
   13a50:	blt	13ab0 <close@plt+0x2b54>
   13a54:	add	r9, r7, #8
   13a58:	cmp	r6, r9
   13a5c:	str	r2, [sp, #44]	; 0x2c
   13a60:	beq	13b90 <close@plt+0x2c34>
   13a64:	mov	r3, #8
   13a68:	sub	r2, r4, r2
   13a6c:	mov	r0, r6
   13a70:	str	r3, [sp]
   13a74:	add	r2, r2, #1
   13a78:	mvn	r3, #-2147483648	; 0x80000000
   13a7c:	add	r1, sp, #44	; 0x2c
   13a80:	bl	14954 <close@plt+0x39f8>
   13a84:	mov	r6, r0
   13a88:	str	r0, [r7]
   13a8c:	ldr	r0, [r7, #4]
   13a90:	ldr	r2, [sp, #44]	; 0x2c
   13a94:	mov	r1, #0
   13a98:	sub	r2, r2, r0
   13a9c:	add	r0, r6, r0, lsl #3
   13aa0:	lsl	r2, r2, #3
   13aa4:	bl	10eb4 <memset@plt>
   13aa8:	ldr	r3, [sp, #44]	; 0x2c
   13aac:	str	r3, [r7, #4]
   13ab0:	add	r3, r6, r4, lsl #3
   13ab4:	ldr	r1, [r5, #4]
   13ab8:	ldr	r7, [r3, #4]
   13abc:	ldr	r9, [r6, r4, lsl #3]
   13ac0:	ldr	r2, [r5, #40]	; 0x28
   13ac4:	ldr	ip, [r5, #44]	; 0x2c
   13ac8:	add	r0, r5, #8
   13acc:	str	r3, [sp, #28]
   13ad0:	ldr	r3, [r5]
   13ad4:	orr	r1, r1, #1
   13ad8:	mov	lr, r0
   13adc:	str	r1, [sp, #32]
   13ae0:	str	r0, [sp, #36]	; 0x24
   13ae4:	str	r1, [sp, #4]
   13ae8:	str	r2, [sp, #12]
   13aec:	str	r3, [sp]
   13af0:	mov	r0, r7
   13af4:	mov	r1, r9
   13af8:	str	ip, [sp, #16]
   13afc:	str	lr, [sp, #8]
   13b00:	mov	r3, fp
   13b04:	mov	r2, sl
   13b08:	bl	124f0 <close@plt+0x1594>
   13b0c:	cmp	r9, r0
   13b10:	bhi	13b7c <close@plt+0x2c20>
   13b14:	ldr	r3, [pc, #172]	; 13bc8 <close@plt+0x2c6c>
   13b18:	add	r9, r0, #1
   13b1c:	cmp	r7, r3
   13b20:	str	r9, [r6, r4, lsl #3]
   13b24:	beq	13b30 <close@plt+0x2bd4>
   13b28:	mov	r0, r7
   13b2c:	bl	12224 <close@plt+0x12c8>
   13b30:	mov	r0, r9
   13b34:	bl	147f0 <close@plt+0x3894>
   13b38:	ldr	lr, [sp, #28]
   13b3c:	ldr	ip, [r5, #44]	; 0x2c
   13b40:	ldr	r4, [r5, #40]	; 0x28
   13b44:	mov	r3, fp
   13b48:	mov	r2, sl
   13b4c:	mov	r1, r9
   13b50:	str	r0, [lr, #4]
   13b54:	ldr	lr, [r5]
   13b58:	ldr	r5, [sp, #36]	; 0x24
   13b5c:	str	ip, [sp, #16]
   13b60:	str	r5, [sp, #8]
   13b64:	ldr	r5, [sp, #32]
   13b68:	str	r4, [sp, #12]
   13b6c:	str	r5, [sp, #4]
   13b70:	str	lr, [sp]
   13b74:	mov	r7, r0
   13b78:	bl	124f0 <close@plt+0x1594>
   13b7c:	ldr	r3, [sp, #24]
   13b80:	mov	r0, r7
   13b84:	str	r3, [r8]
   13b88:	add	sp, sp, #52	; 0x34
   13b8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b90:	mov	r3, #8
   13b94:	sub	r2, r4, r2
   13b98:	str	r3, [sp]
   13b9c:	add	r1, sp, #44	; 0x2c
   13ba0:	add	r2, r2, #1
   13ba4:	mvn	r3, #-2147483648	; 0x80000000
   13ba8:	bl	14954 <close@plt+0x39f8>
   13bac:	mov	r6, r0
   13bb0:	ldm	r9, {r0, r1}
   13bb4:	str	r6, [r7]
   13bb8:	stm	r6, {r0, r1}
   13bbc:	b	13a8c <close@plt+0x2b30>
   13bc0:	bl	10f50 <abort@plt>
   13bc4:	andeq	r7, r2, r8, lsl r1
   13bc8:	muleq	r2, r0, r1
   13bcc:	push	{r4, r5, r6, lr}
   13bd0:	mov	r5, r0
   13bd4:	bl	10e9c <__errno_location@plt>
   13bd8:	cmp	r5, #0
   13bdc:	mov	r1, #48	; 0x30
   13be0:	mov	r4, r0
   13be4:	ldr	r0, [pc, #16]	; 13bfc <close@plt+0x2ca0>
   13be8:	ldr	r6, [r4]
   13bec:	movne	r0, r5
   13bf0:	bl	14c50 <close@plt+0x3cf4>
   13bf4:	str	r6, [r4]
   13bf8:	pop	{r4, r5, r6, pc}
   13bfc:	muleq	r2, r0, r2
   13c00:	ldr	r3, [pc, #12]	; 13c14 <close@plt+0x2cb8>
   13c04:	cmp	r0, #0
   13c08:	moveq	r0, r3
   13c0c:	ldr	r0, [r0]
   13c10:	bx	lr
   13c14:	muleq	r2, r0, r2
   13c18:	ldr	r3, [pc, #12]	; 13c2c <close@plt+0x2cd0>
   13c1c:	cmp	r0, #0
   13c20:	moveq	r0, r3
   13c24:	str	r1, [r0]
   13c28:	bx	lr
   13c2c:	muleq	r2, r0, r2
   13c30:	ldr	r3, [pc, #52]	; 13c6c <close@plt+0x2d10>
   13c34:	cmp	r0, #0
   13c38:	moveq	r0, r3
   13c3c:	add	r3, r0, #8
   13c40:	push	{lr}		; (str lr, [sp, #-4]!)
   13c44:	lsr	lr, r1, #5
   13c48:	and	r1, r1, #31
   13c4c:	ldr	ip, [r3, lr, lsl #2]
   13c50:	lsr	r0, ip, r1
   13c54:	eor	r2, r2, r0
   13c58:	and	r2, r2, #1
   13c5c:	and	r0, r0, #1
   13c60:	eor	r1, ip, r2, lsl r1
   13c64:	str	r1, [r3, lr, lsl #2]
   13c68:	pop	{pc}		; (ldr pc, [sp], #4)
   13c6c:	muleq	r2, r0, r2
   13c70:	ldr	r3, [pc, #16]	; 13c88 <close@plt+0x2d2c>
   13c74:	cmp	r0, #0
   13c78:	movne	r3, r0
   13c7c:	ldr	r0, [r3, #4]
   13c80:	str	r1, [r3, #4]
   13c84:	bx	lr
   13c88:	muleq	r2, r0, r2
   13c8c:	ldr	r3, [pc, #44]	; 13cc0 <close@plt+0x2d64>
   13c90:	cmp	r0, #0
   13c94:	moveq	r0, r3
   13c98:	mov	ip, #10
   13c9c:	cmp	r2, #0
   13ca0:	cmpne	r1, #0
   13ca4:	str	ip, [r0]
   13ca8:	beq	13cb8 <close@plt+0x2d5c>
   13cac:	str	r1, [r0, #40]	; 0x28
   13cb0:	str	r2, [r0, #44]	; 0x2c
   13cb4:	bx	lr
   13cb8:	push	{r4, lr}
   13cbc:	bl	10f50 <abort@plt>
   13cc0:	muleq	r2, r0, r2
   13cc4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13cc8:	sub	sp, sp, #24
   13ccc:	ldr	ip, [pc, #108]	; 13d40 <close@plt+0x2de4>
   13cd0:	ldr	r4, [sp, #56]	; 0x38
   13cd4:	mov	r9, r2
   13cd8:	cmp	r4, #0
   13cdc:	moveq	r4, ip
   13ce0:	mov	sl, r3
   13ce4:	mov	r7, r0
   13ce8:	mov	r8, r1
   13cec:	bl	10e9c <__errno_location@plt>
   13cf0:	ldr	r3, [r4, #44]	; 0x2c
   13cf4:	mov	r1, r8
   13cf8:	ldr	r6, [r0]
   13cfc:	str	r3, [sp, #16]
   13d00:	ldr	r2, [r4, #40]	; 0x28
   13d04:	add	r3, r4, #8
   13d08:	str	r3, [sp, #8]
   13d0c:	str	r2, [sp, #12]
   13d10:	ldr	r2, [r4, #4]
   13d14:	mov	r5, r0
   13d18:	str	r2, [sp, #4]
   13d1c:	ldr	ip, [r4]
   13d20:	mov	r3, sl
   13d24:	mov	r2, r9
   13d28:	mov	r0, r7
   13d2c:	str	ip, [sp]
   13d30:	bl	124f0 <close@plt+0x1594>
   13d34:	str	r6, [r5]
   13d38:	add	sp, sp, #24
   13d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13d40:	muleq	r2, r0, r2
   13d44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d48:	cmp	r3, #0
   13d4c:	sub	sp, sp, #44	; 0x2c
   13d50:	ldr	r4, [pc, #192]	; 13e18 <close@plt+0x2ebc>
   13d54:	mov	r6, r2
   13d58:	movne	r4, r3
   13d5c:	mov	r9, r1
   13d60:	mov	r8, r0
   13d64:	bl	10e9c <__errno_location@plt>
   13d68:	ldr	r3, [r4, #44]	; 0x2c
   13d6c:	ldr	r5, [r4, #4]
   13d70:	add	sl, r4, #8
   13d74:	cmp	r6, #0
   13d78:	orreq	r5, r5, #1
   13d7c:	mov	r1, #0
   13d80:	ldr	r2, [r0]
   13d84:	str	r3, [sp, #16]
   13d88:	ldr	r3, [r4, #40]	; 0x28
   13d8c:	stmib	sp, {r5, sl}
   13d90:	str	r3, [sp, #12]
   13d94:	ldr	r3, [r4]
   13d98:	mov	r7, r0
   13d9c:	str	r2, [sp, #28]
   13da0:	str	r3, [sp]
   13da4:	mov	r2, r8
   13da8:	mov	r3, r9
   13dac:	mov	r0, r1
   13db0:	bl	124f0 <close@plt+0x1594>
   13db4:	add	r1, r0, #1
   13db8:	mov	fp, r0
   13dbc:	mov	r0, r1
   13dc0:	str	r1, [sp, #36]	; 0x24
   13dc4:	bl	147f0 <close@plt+0x3894>
   13dc8:	ldr	r3, [r4, #44]	; 0x2c
   13dcc:	mov	r2, r8
   13dd0:	str	r3, [sp, #16]
   13dd4:	ldr	r3, [r4, #40]	; 0x28
   13dd8:	str	r5, [sp, #4]
   13ddc:	str	r3, [sp, #12]
   13de0:	str	sl, [sp, #8]
   13de4:	ldr	ip, [r4]
   13de8:	ldr	r1, [sp, #36]	; 0x24
   13dec:	mov	r3, r9
   13df0:	str	ip, [sp]
   13df4:	str	r0, [sp, #32]
   13df8:	bl	124f0 <close@plt+0x1594>
   13dfc:	ldr	r2, [sp, #28]
   13e00:	cmp	r6, #0
   13e04:	str	r2, [r7]
   13e08:	ldr	r0, [sp, #32]
   13e0c:	strne	fp, [r6]
   13e10:	add	sp, sp, #44	; 0x2c
   13e14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e18:	muleq	r2, r0, r2
   13e1c:	mov	r3, r2
   13e20:	mov	r2, #0
   13e24:	b	13d44 <close@plt+0x2de8>
   13e28:	push	{r4, r5, r6, r7, r8, lr}
   13e2c:	ldr	r6, [pc, #116]	; 13ea8 <close@plt+0x2f4c>
   13e30:	ldr	r3, [r6, #4]
   13e34:	ldr	r7, [r6]
   13e38:	cmp	r3, #1
   13e3c:	movgt	r5, r7
   13e40:	movgt	r4, #1
   13e44:	ble	13e64 <close@plt+0x2f08>
   13e48:	ldr	r0, [r5, #12]
   13e4c:	bl	12224 <close@plt+0x12c8>
   13e50:	ldr	r3, [r6, #4]
   13e54:	add	r4, r4, #1
   13e58:	cmp	r3, r4
   13e5c:	add	r5, r5, #8
   13e60:	bgt	13e48 <close@plt+0x2eec>
   13e64:	ldr	r0, [r7, #4]
   13e68:	ldr	r4, [pc, #60]	; 13eac <close@plt+0x2f50>
   13e6c:	cmp	r0, r4
   13e70:	beq	13e84 <close@plt+0x2f28>
   13e74:	bl	12224 <close@plt+0x12c8>
   13e78:	mov	r3, #256	; 0x100
   13e7c:	str	r4, [r6, #12]
   13e80:	str	r3, [r6, #8]
   13e84:	ldr	r4, [pc, #36]	; 13eb0 <close@plt+0x2f54>
   13e88:	cmp	r7, r4
   13e8c:	beq	13e9c <close@plt+0x2f40>
   13e90:	mov	r0, r7
   13e94:	bl	12224 <close@plt+0x12c8>
   13e98:	str	r4, [r6]
   13e9c:	mov	r3, #1
   13ea0:	str	r3, [r6, #4]
   13ea4:	pop	{r4, r5, r6, r7, r8, pc}
   13ea8:	andeq	r7, r2, r8, lsl r1
   13eac:	muleq	r2, r0, r1
   13eb0:	andeq	r7, r2, r0, lsr #2
   13eb4:	ldr	r3, [pc, #4]	; 13ec0 <close@plt+0x2f64>
   13eb8:	mvn	r2, #0
   13ebc:	b	13a04 <close@plt+0x2aa8>
   13ec0:	muleq	r2, r0, r2
   13ec4:	ldr	r3, [pc]	; 13ecc <close@plt+0x2f70>
   13ec8:	b	13a04 <close@plt+0x2aa8>
   13ecc:	muleq	r2, r0, r2
   13ed0:	mov	r1, r0
   13ed4:	ldr	r3, [pc, #8]	; 13ee4 <close@plt+0x2f88>
   13ed8:	mvn	r2, #0
   13edc:	mov	r0, #0
   13ee0:	b	13a04 <close@plt+0x2aa8>
   13ee4:	muleq	r2, r0, r2
   13ee8:	mov	r2, r1
   13eec:	ldr	r3, [pc, #8]	; 13efc <close@plt+0x2fa0>
   13ef0:	mov	r1, r0
   13ef4:	mov	r0, #0
   13ef8:	b	13a04 <close@plt+0x2aa8>
   13efc:	muleq	r2, r0, r2
   13f00:	push	{r4, r5, lr}
   13f04:	sub	sp, sp, #52	; 0x34
   13f08:	mov	r5, r2
   13f0c:	mov	r4, r0
   13f10:	mov	r0, sp
   13f14:	bl	123a0 <close@plt+0x1444>
   13f18:	mov	r3, sp
   13f1c:	mov	r1, r5
   13f20:	mov	r0, r4
   13f24:	mvn	r2, #0
   13f28:	bl	13a04 <close@plt+0x2aa8>
   13f2c:	add	sp, sp, #52	; 0x34
   13f30:	pop	{r4, r5, pc}
   13f34:	push	{r4, r5, r6, lr}
   13f38:	sub	sp, sp, #48	; 0x30
   13f3c:	mov	r5, r2
   13f40:	mov	r6, r3
   13f44:	mov	r4, r0
   13f48:	mov	r0, sp
   13f4c:	bl	123a0 <close@plt+0x1444>
   13f50:	mov	r3, sp
   13f54:	mov	r2, r6
   13f58:	mov	r1, r5
   13f5c:	mov	r0, r4
   13f60:	bl	13a04 <close@plt+0x2aa8>
   13f64:	add	sp, sp, #48	; 0x30
   13f68:	pop	{r4, r5, r6, pc}
   13f6c:	mov	r2, r1
   13f70:	mov	r1, r0
   13f74:	mov	r0, #0
   13f78:	b	13f00 <close@plt+0x2fa4>
   13f7c:	mov	r3, r2
   13f80:	mov	r2, r1
   13f84:	mov	r1, r0
   13f88:	mov	r0, #0
   13f8c:	b	13f34 <close@plt+0x2fd8>
   13f90:	push	{r4, r5, r6, r7, r8, lr}
   13f94:	mov	r7, r0
   13f98:	ldr	lr, [pc, #100]	; 14004 <close@plt+0x30a8>
   13f9c:	mov	r8, r1
   13fa0:	mov	r4, r2
   13fa4:	ldm	lr!, {r0, r1, r2, r3}
   13fa8:	sub	sp, sp, #48	; 0x30
   13fac:	mov	ip, sp
   13fb0:	lsr	r5, r4, #5
   13fb4:	stmia	ip!, {r0, r1, r2, r3}
   13fb8:	add	r6, sp, #8
   13fbc:	ldm	lr!, {r0, r1, r2, r3}
   13fc0:	and	r4, r4, #31
   13fc4:	stmia	ip!, {r0, r1, r2, r3}
   13fc8:	ldm	lr, {r0, r1, r2, r3}
   13fcc:	stm	ip, {r0, r1, r2, r3}
   13fd0:	mov	r2, r8
   13fd4:	ldr	lr, [r6, r5, lsl #2]
   13fd8:	mov	r1, r7
   13fdc:	mov	r3, sp
   13fe0:	lsr	ip, lr, r4
   13fe4:	eor	ip, ip, #1
   13fe8:	and	ip, ip, #1
   13fec:	mov	r0, #0
   13ff0:	eor	r4, lr, ip, lsl r4
   13ff4:	str	r4, [r6, r5, lsl #2]
   13ff8:	bl	13a04 <close@plt+0x2aa8>
   13ffc:	add	sp, sp, #48	; 0x30
   14000:	pop	{r4, r5, r6, r7, r8, pc}
   14004:	muleq	r2, r0, r2
   14008:	mov	r2, r1
   1400c:	mvn	r1, #0
   14010:	b	13f90 <close@plt+0x3034>
   14014:	mov	r2, #58	; 0x3a
   14018:	mvn	r1, #0
   1401c:	b	13f90 <close@plt+0x3034>
   14020:	mov	r2, #58	; 0x3a
   14024:	b	13f90 <close@plt+0x3034>
   14028:	push	{r4, r5, r6, r7, lr}
   1402c:	sub	sp, sp, #100	; 0x64
   14030:	mov	r6, r0
   14034:	mov	r0, sp
   14038:	mov	r7, r2
   1403c:	bl	123a0 <close@plt+0x1444>
   14040:	mov	ip, sp
   14044:	add	lr, sp, #48	; 0x30
   14048:	ldm	ip!, {r0, r1, r2, r3}
   1404c:	stmia	lr!, {r0, r1, r2, r3}
   14050:	ldm	ip!, {r0, r1, r2, r3}
   14054:	ldr	r5, [sp, #60]	; 0x3c
   14058:	stmia	lr!, {r0, r1, r2, r3}
   1405c:	mvn	r4, r5
   14060:	ldm	ip, {r0, r1, r2, r3}
   14064:	and	ip, r4, #67108864	; 0x4000000
   14068:	eor	ip, ip, r5
   1406c:	str	ip, [sp, #60]	; 0x3c
   14070:	stm	lr, {r0, r1, r2, r3}
   14074:	mov	r1, r7
   14078:	mov	r0, r6
   1407c:	add	r3, sp, #48	; 0x30
   14080:	mvn	r2, #0
   14084:	bl	13a04 <close@plt+0x2aa8>
   14088:	add	sp, sp, #100	; 0x64
   1408c:	pop	{r4, r5, r6, r7, pc}
   14090:	push	{r4, r5, r6, r7, r8, lr}
   14094:	mov	r5, r1
   14098:	ldr	lr, [pc, #100]	; 14104 <close@plt+0x31a8>
   1409c:	mov	r4, r2
   140a0:	mov	r7, r0
   140a4:	mov	r8, r3
   140a8:	ldm	lr!, {r0, r1, r2, r3}
   140ac:	sub	sp, sp, #48	; 0x30
   140b0:	mov	ip, sp
   140b4:	mov	r6, #10
   140b8:	stmia	ip!, {r0, r1, r2, r3}
   140bc:	cmp	r4, #0
   140c0:	cmpne	r5, #0
   140c4:	ldm	lr!, {r0, r1, r2, r3}
   140c8:	str	r6, [sp]
   140cc:	stmia	ip!, {r0, r1, r2, r3}
   140d0:	ldm	lr, {r0, r1, r2, r3}
   140d4:	stm	ip, {r0, r1, r2, r3}
   140d8:	beq	14100 <close@plt+0x31a4>
   140dc:	mov	r3, sp
   140e0:	mov	r1, r8
   140e4:	mov	r0, r7
   140e8:	ldr	r2, [sp, #72]	; 0x48
   140ec:	str	r5, [sp, #40]	; 0x28
   140f0:	str	r4, [sp, #44]	; 0x2c
   140f4:	bl	13a04 <close@plt+0x2aa8>
   140f8:	add	sp, sp, #48	; 0x30
   140fc:	pop	{r4, r5, r6, r7, r8, pc}
   14100:	bl	10f50 <abort@plt>
   14104:	muleq	r2, r0, r2
   14108:	push	{lr}		; (str lr, [sp, #-4]!)
   1410c:	sub	sp, sp, #12
   14110:	mvn	ip, #0
   14114:	str	ip, [sp]
   14118:	bl	14090 <close@plt+0x3134>
   1411c:	add	sp, sp, #12
   14120:	pop	{pc}		; (ldr pc, [sp], #4)
   14124:	push	{lr}		; (str lr, [sp, #-4]!)
   14128:	sub	sp, sp, #12
   1412c:	mvn	ip, #0
   14130:	mov	r3, r2
   14134:	str	ip, [sp]
   14138:	mov	r2, r1
   1413c:	mov	r1, r0
   14140:	mov	r0, #0
   14144:	bl	14090 <close@plt+0x3134>
   14148:	add	sp, sp, #12
   1414c:	pop	{pc}		; (ldr pc, [sp], #4)
   14150:	push	{lr}		; (str lr, [sp, #-4]!)
   14154:	sub	sp, sp, #12
   14158:	str	r3, [sp]
   1415c:	mov	r3, r2
   14160:	mov	r2, r1
   14164:	mov	r1, r0
   14168:	mov	r0, #0
   1416c:	bl	14090 <close@plt+0x3134>
   14170:	add	sp, sp, #12
   14174:	pop	{pc}		; (ldr pc, [sp], #4)
   14178:	ldr	r3, [pc]	; 14180 <close@plt+0x3224>
   1417c:	b	13a04 <close@plt+0x2aa8>
   14180:	andeq	r7, r2, r8, lsr #2
   14184:	mov	r2, r1
   14188:	ldr	r3, [pc, #8]	; 14198 <close@plt+0x323c>
   1418c:	mov	r1, r0
   14190:	mov	r0, #0
   14194:	b	13a04 <close@plt+0x2aa8>
   14198:	andeq	r7, r2, r8, lsr #2
   1419c:	ldr	r3, [pc, #4]	; 141a8 <close@plt+0x324c>
   141a0:	mvn	r2, #0
   141a4:	b	13a04 <close@plt+0x2aa8>
   141a8:	andeq	r7, r2, r8, lsr #2
   141ac:	mov	r1, r0
   141b0:	ldr	r3, [pc, #8]	; 141c0 <close@plt+0x3264>
   141b4:	mvn	r2, #0
   141b8:	mov	r0, #0
   141bc:	b	13a04 <close@plt+0x2aa8>
   141c0:	andeq	r7, r2, r8, lsr #2
   141c4:	push	{r4, r5, r6, r7, r8, lr}
   141c8:	mov	r8, r0
   141cc:	ldr	r5, [pc, #84]	; 14228 <close@plt+0x32cc>
   141d0:	mov	r7, r1
   141d4:	mov	r4, r2
   141d8:	mov	r2, r4
   141dc:	mov	r1, r7
   141e0:	mov	r0, r8
   141e4:	bl	10d10 <read@plt>
   141e8:	subs	r6, r0, #0
   141ec:	bge	14220 <close@plt+0x32c4>
   141f0:	bl	10e9c <__errno_location@plt>
   141f4:	ldr	r3, [r0]
   141f8:	cmp	r3, #4
   141fc:	beq	141d8 <close@plt+0x327c>
   14200:	cmp	r4, r5
   14204:	movls	r2, #0
   14208:	movhi	r2, #1
   1420c:	cmp	r3, #22
   14210:	movne	r2, #0
   14214:	cmp	r2, #0
   14218:	mov	r4, r5
   1421c:	bne	141d8 <close@plt+0x327c>
   14220:	mov	r0, r6
   14224:	pop	{r4, r5, r6, r7, r8, pc}
   14228:	svcvc	0x00f00000	; IMB
   1422c:	push	{r4, r5, r6, r7, r8, lr}
   14230:	mov	r8, r0
   14234:	ldr	r5, [pc, #84]	; 14290 <close@plt+0x3334>
   14238:	mov	r7, r1
   1423c:	mov	r4, r2
   14240:	mov	r2, r4
   14244:	mov	r1, r7
   14248:	mov	r0, r8
   1424c:	bl	10ecc <write@plt>
   14250:	subs	r6, r0, #0
   14254:	bge	14288 <close@plt+0x332c>
   14258:	bl	10e9c <__errno_location@plt>
   1425c:	ldr	r3, [r0]
   14260:	cmp	r3, #4
   14264:	beq	14240 <close@plt+0x32e4>
   14268:	cmp	r4, r5
   1426c:	sub	r3, r3, #22
   14270:	clz	r3, r3
   14274:	lsr	r3, r3, #5
   14278:	movls	r3, #0
   1427c:	cmp	r3, #0
   14280:	mov	r4, r5
   14284:	bne	14240 <close@plt+0x32e4>
   14288:	mov	r0, r6
   1428c:	pop	{r4, r5, r6, r7, r8, pc}
   14290:	svcvc	0x00f00000	; IMB
   14294:	push	{r4, r5, r6, lr}
   14298:	sub	sp, sp, #32
   1429c:	cmp	r1, #0
   142a0:	mov	r4, r0
   142a4:	ldr	r5, [sp, #48]	; 0x30
   142a8:	ldr	r6, [sp, #52]	; 0x34
   142ac:	beq	145c4 <close@plt+0x3668>
   142b0:	stm	sp, {r2, r3}
   142b4:	mov	r3, r1
   142b8:	ldr	r2, [pc, #808]	; 145e8 <close@plt+0x368c>
   142bc:	mov	r1, #1
   142c0:	bl	10ee4 <__fprintf_chk@plt>
   142c4:	mov	r2, #5
   142c8:	ldr	r1, [pc, #796]	; 145ec <close@plt+0x3690>
   142cc:	mov	r0, #0
   142d0:	bl	10d88 <dcgettext@plt>
   142d4:	ldr	r3, [pc, #788]	; 145f0 <close@plt+0x3694>
   142d8:	ldr	r2, [pc, #788]	; 145f4 <close@plt+0x3698>
   142dc:	str	r3, [sp]
   142e0:	mov	r1, #1
   142e4:	mov	r3, r0
   142e8:	mov	r0, r4
   142ec:	bl	10ee4 <__fprintf_chk@plt>
   142f0:	mov	r1, r4
   142f4:	mov	r0, #10
   142f8:	bl	10d7c <fputc_unlocked@plt>
   142fc:	mov	r2, #5
   14300:	ldr	r1, [pc, #752]	; 145f8 <close@plt+0x369c>
   14304:	mov	r0, #0
   14308:	bl	10d88 <dcgettext@plt>
   1430c:	mov	r1, #1
   14310:	ldr	r3, [pc, #740]	; 145fc <close@plt+0x36a0>
   14314:	mov	r2, r0
   14318:	mov	r0, r4
   1431c:	bl	10ee4 <__fprintf_chk@plt>
   14320:	mov	r1, r4
   14324:	mov	r0, #10
   14328:	bl	10d7c <fputc_unlocked@plt>
   1432c:	cmp	r6, #9
   14330:	ldrls	pc, [pc, r6, lsl #2]
   14334:	b	145dc <close@plt+0x3680>
   14338:			; <UNDEFINED> instruction: 0x000143bc
   1433c:	andeq	r4, r1, r4, asr #7
   14340:	strdeq	r4, [r1], -r0
   14344:	andeq	r4, r1, r4, lsr #8
   14348:	andeq	r4, r1, r0, ror #8
   1434c:	muleq	r1, ip, r4
   14350:	ldrdeq	r4, [r1], -r8
   14354:	andeq	r4, r1, ip, lsl r5
   14358:	andeq	r4, r1, ip, ror #10
   1435c:	andeq	r4, r1, r0, ror #6
   14360:	ldr	r1, [pc, #664]	; 14600 <close@plt+0x36a4>
   14364:	mov	r2, #5
   14368:	mov	r0, #0
   1436c:	bl	10d88 <dcgettext@plt>
   14370:	ldr	ip, [r5, #32]
   14374:	ldr	r1, [r5, #28]
   14378:	ldr	r2, [r5, #24]
   1437c:	ldr	r3, [r5]
   14380:	ldr	r6, [r5, #20]
   14384:	str	ip, [sp, #28]
   14388:	ldr	lr, [r5, #16]
   1438c:	str	r1, [sp, #24]
   14390:	ldr	ip, [r5, #12]
   14394:	str	r2, [sp, #20]
   14398:	ldr	r1, [r5, #8]
   1439c:	ldr	r2, [r5, #4]
   143a0:	str	r6, [sp, #16]
   143a4:	stmib	sp, {r1, ip, lr}
   143a8:	mov	r1, #1
   143ac:	str	r2, [sp]
   143b0:	mov	r2, r0
   143b4:	mov	r0, r4
   143b8:	bl	10ee4 <__fprintf_chk@plt>
   143bc:	add	sp, sp, #32
   143c0:	pop	{r4, r5, r6, pc}
   143c4:	mov	r2, #5
   143c8:	ldr	r1, [pc, #564]	; 14604 <close@plt+0x36a8>
   143cc:	mov	r0, #0
   143d0:	bl	10d88 <dcgettext@plt>
   143d4:	ldr	r3, [r5]
   143d8:	mov	r1, #1
   143dc:	mov	r2, r0
   143e0:	mov	r0, r4
   143e4:	add	sp, sp, #32
   143e8:	pop	{r4, r5, r6, lr}
   143ec:	b	10ee4 <__fprintf_chk@plt>
   143f0:	mov	r2, #5
   143f4:	ldr	r1, [pc, #524]	; 14608 <close@plt+0x36ac>
   143f8:	mov	r0, #0
   143fc:	bl	10d88 <dcgettext@plt>
   14400:	ldr	r2, [r5, #4]
   14404:	ldr	r3, [r5]
   14408:	mov	r1, #1
   1440c:	str	r2, [sp, #48]	; 0x30
   14410:	mov	r2, r0
   14414:	mov	r0, r4
   14418:	add	sp, sp, #32
   1441c:	pop	{r4, r5, r6, lr}
   14420:	b	10ee4 <__fprintf_chk@plt>
   14424:	mov	r2, #5
   14428:	ldr	r1, [pc, #476]	; 1460c <close@plt+0x36b0>
   1442c:	mov	r0, #0
   14430:	bl	10d88 <dcgettext@plt>
   14434:	ldr	r1, [r5, #8]
   14438:	ldr	r2, [r5, #4]
   1443c:	ldr	r3, [r5]
   14440:	str	r1, [sp, #52]	; 0x34
   14444:	str	r2, [sp, #48]	; 0x30
   14448:	mov	r1, #1
   1444c:	mov	r2, r0
   14450:	mov	r0, r4
   14454:	add	sp, sp, #32
   14458:	pop	{r4, r5, r6, lr}
   1445c:	b	10ee4 <__fprintf_chk@plt>
   14460:	mov	r2, #5
   14464:	ldr	r1, [pc, #420]	; 14610 <close@plt+0x36b4>
   14468:	mov	r0, #0
   1446c:	bl	10d88 <dcgettext@plt>
   14470:	ldr	r1, [r5, #8]
   14474:	ldr	ip, [r5, #12]
   14478:	ldr	r2, [r5, #4]
   1447c:	ldr	r3, [r5]
   14480:	stmib	sp, {r1, ip}
   14484:	str	r2, [sp]
   14488:	mov	r1, #1
   1448c:	mov	r2, r0
   14490:	mov	r0, r4
   14494:	bl	10ee4 <__fprintf_chk@plt>
   14498:	b	143bc <close@plt+0x3460>
   1449c:	mov	r2, #5
   144a0:	ldr	r1, [pc, #364]	; 14614 <close@plt+0x36b8>
   144a4:	mov	r0, #0
   144a8:	bl	10d88 <dcgettext@plt>
   144ac:	add	r1, r5, #8
   144b0:	ldr	r2, [r5, #4]
   144b4:	ldm	r1, {r1, ip, lr}
   144b8:	ldr	r3, [r5]
   144bc:	str	r2, [sp]
   144c0:	stmib	sp, {r1, ip, lr}
   144c4:	mov	r1, #1
   144c8:	mov	r2, r0
   144cc:	mov	r0, r4
   144d0:	bl	10ee4 <__fprintf_chk@plt>
   144d4:	b	143bc <close@plt+0x3460>
   144d8:	mov	r2, #5
   144dc:	ldr	r1, [pc, #308]	; 14618 <close@plt+0x36bc>
   144e0:	mov	r0, #0
   144e4:	bl	10d88 <dcgettext@plt>
   144e8:	add	r1, r5, #8
   144ec:	ldr	r2, [r5, #4]
   144f0:	ldm	r1, {r1, ip, lr}
   144f4:	ldr	r6, [r5, #20]
   144f8:	ldr	r3, [r5]
   144fc:	stmib	sp, {r1, ip, lr}
   14500:	mov	r1, #1
   14504:	str	r2, [sp]
   14508:	str	r6, [sp, #16]
   1450c:	mov	r2, r0
   14510:	mov	r0, r4
   14514:	bl	10ee4 <__fprintf_chk@plt>
   14518:	b	143bc <close@plt+0x3460>
   1451c:	mov	r2, #5
   14520:	ldr	r1, [pc, #244]	; 1461c <close@plt+0x36c0>
   14524:	mov	r0, #0
   14528:	bl	10d88 <dcgettext@plt>
   1452c:	ldr	r2, [r5, #24]
   14530:	ldr	r3, [r5]
   14534:	ldr	r6, [r5, #20]
   14538:	ldr	lr, [r5, #16]
   1453c:	ldr	ip, [r5, #12]
   14540:	str	r2, [sp, #20]
   14544:	ldr	r1, [r5, #8]
   14548:	ldr	r2, [r5, #4]
   1454c:	str	r6, [sp, #16]
   14550:	stmib	sp, {r1, ip, lr}
   14554:	mov	r1, #1
   14558:	str	r2, [sp]
   1455c:	mov	r2, r0
   14560:	mov	r0, r4
   14564:	bl	10ee4 <__fprintf_chk@plt>
   14568:	b	143bc <close@plt+0x3460>
   1456c:	mov	r2, #5
   14570:	ldr	r1, [pc, #168]	; 14620 <close@plt+0x36c4>
   14574:	mov	r0, #0
   14578:	bl	10d88 <dcgettext@plt>
   1457c:	ldr	r1, [r5, #28]
   14580:	ldr	r2, [r5, #24]
   14584:	ldr	r3, [r5]
   14588:	ldr	r6, [r5, #20]
   1458c:	ldr	lr, [r5, #16]
   14590:	str	r1, [sp, #24]
   14594:	ldr	ip, [r5, #12]
   14598:	str	r2, [sp, #20]
   1459c:	ldr	r1, [r5, #8]
   145a0:	ldr	r2, [r5, #4]
   145a4:	str	r6, [sp, #16]
   145a8:	stmib	sp, {r1, ip, lr}
   145ac:	mov	r1, #1
   145b0:	str	r2, [sp]
   145b4:	mov	r2, r0
   145b8:	mov	r0, r4
   145bc:	bl	10ee4 <__fprintf_chk@plt>
   145c0:	b	143bc <close@plt+0x3460>
   145c4:	str	r3, [sp]
   145c8:	mov	r1, #1
   145cc:	mov	r3, r2
   145d0:	ldr	r2, [pc, #76]	; 14624 <close@plt+0x36c8>
   145d4:	bl	10ee4 <__fprintf_chk@plt>
   145d8:	b	142c4 <close@plt+0x3368>
   145dc:	mov	r2, #5
   145e0:	ldr	r1, [pc, #64]	; 14628 <close@plt+0x36cc>
   145e4:	b	14368 <close@plt+0x340c>
   145e8:	andeq	r5, r1, r8, asr #30
   145ec:	andeq	r5, r1, ip, asr pc
   145f0:	andeq	r0, r0, r6, ror #15
   145f4:	andeq	r6, r1, r4, lsr r2
   145f8:	andeq	r5, r1, r0, ror #30
   145fc:	andeq	r6, r1, ip
   14600:	andeq	r6, r1, ip, lsr r1
   14604:	andeq	r6, r1, r0, lsr r0
   14608:	andeq	r6, r1, r0, asr #32
   1460c:	andeq	r6, r1, r8, asr r0
   14610:	andeq	r6, r1, r4, ror r0
   14614:	muleq	r1, r4, r0
   14618:	strheq	r6, [r1], -r8
   1461c:	andeq	r6, r1, r0, ror #1
   14620:	andeq	r6, r1, ip, lsl #2
   14624:	andeq	r5, r1, r4, asr pc
   14628:	andeq	r6, r1, r0, ror r1
   1462c:	push	{r4, r5, lr}
   14630:	sub	sp, sp, #12
   14634:	ldr	r5, [sp, #24]
   14638:	ldr	ip, [r5]
   1463c:	cmp	ip, #0
   14640:	beq	1465c <close@plt+0x3700>
   14644:	mov	lr, r5
   14648:	mov	ip, #0
   1464c:	ldr	r4, [lr, #4]!
   14650:	add	ip, ip, #1
   14654:	cmp	r4, #0
   14658:	bne	1464c <close@plt+0x36f0>
   1465c:	stm	sp, {r5, ip}
   14660:	bl	14294 <close@plt+0x3338>
   14664:	add	sp, sp, #12
   14668:	pop	{r4, r5, pc}
   1466c:	push	{r4, r5, lr}
   14670:	sub	sp, sp, #52	; 0x34
   14674:	add	r5, sp, #4
   14678:	ldr	r4, [sp, #64]	; 0x40
   1467c:	mov	ip, #0
   14680:	sub	r4, r4, #4
   14684:	ldr	lr, [r4, #4]!
   14688:	cmp	lr, #0
   1468c:	str	lr, [r5, #4]!
   14690:	beq	146a0 <close@plt+0x3744>
   14694:	add	ip, ip, #1
   14698:	cmp	ip, #10
   1469c:	bne	14684 <close@plt+0x3728>
   146a0:	add	lr, sp, #8
   146a4:	str	ip, [sp, #4]
   146a8:	str	lr, [sp]
   146ac:	bl	14294 <close@plt+0x3338>
   146b0:	add	sp, sp, #52	; 0x34
   146b4:	pop	{r4, r5, pc}
   146b8:	push	{r3}		; (str r3, [sp, #-4]!)
   146bc:	push	{r4, lr}
   146c0:	sub	sp, sp, #60	; 0x3c
   146c4:	add	lr, sp, #56	; 0x38
   146c8:	add	r3, sp, #72	; 0x48
   146cc:	str	r3, [lr, #-44]!	; 0xffffffd4
   146d0:	add	r4, sp, #68	; 0x44
   146d4:	mov	r3, #0
   146d8:	ldr	ip, [r4, #4]!
   146dc:	cmp	ip, #0
   146e0:	str	ip, [lr, #4]!
   146e4:	beq	146f4 <close@plt+0x3798>
   146e8:	add	r3, r3, #1
   146ec:	cmp	r3, #10
   146f0:	bne	146d8 <close@plt+0x377c>
   146f4:	add	ip, sp, #16
   146f8:	str	r3, [sp, #4]
   146fc:	str	ip, [sp]
   14700:	ldr	r3, [sp, #68]	; 0x44
   14704:	bl	14294 <close@plt+0x3338>
   14708:	add	sp, sp, #60	; 0x3c
   1470c:	pop	{r4, lr}
   14710:	add	sp, sp, #4
   14714:	bx	lr
   14718:	ldr	r3, [pc, #116]	; 14794 <close@plt+0x3838>
   1471c:	push	{r4, lr}
   14720:	mov	r0, #10
   14724:	ldr	r1, [r3]
   14728:	bl	10d7c <fputc_unlocked@plt>
   1472c:	mov	r2, #5
   14730:	ldr	r1, [pc, #96]	; 14798 <close@plt+0x383c>
   14734:	mov	r0, #0
   14738:	bl	10d88 <dcgettext@plt>
   1473c:	ldr	r2, [pc, #88]	; 1479c <close@plt+0x3840>
   14740:	mov	r1, r0
   14744:	mov	r0, #1
   14748:	bl	10ec0 <__printf_chk@plt>
   1474c:	mov	r2, #5
   14750:	ldr	r1, [pc, #72]	; 147a0 <close@plt+0x3844>
   14754:	mov	r0, #0
   14758:	bl	10d88 <dcgettext@plt>
   1475c:	ldr	r3, [pc, #64]	; 147a4 <close@plt+0x3848>
   14760:	ldr	r2, [pc, #64]	; 147a8 <close@plt+0x384c>
   14764:	mov	r1, r0
   14768:	mov	r0, #1
   1476c:	bl	10ec0 <__printf_chk@plt>
   14770:	mov	r2, #5
   14774:	ldr	r1, [pc, #48]	; 147ac <close@plt+0x3850>
   14778:	mov	r0, #0
   1477c:	bl	10d88 <dcgettext@plt>
   14780:	ldr	r2, [pc, #40]	; 147b0 <close@plt+0x3854>
   14784:	pop	{r4, lr}
   14788:	mov	r1, r0
   1478c:	mov	r0, #1
   14790:	b	10ec0 <__printf_chk@plt>
   14794:	andeq	r7, r2, ip, ror #2
   14798:	andeq	r6, r1, ip, lsr #3
   1479c:	andeq	r6, r1, r0, asr #3
   147a0:	ldrdeq	r6, [r1], -r8
   147a4:			; <UNDEFINED> instruction: 0x00015bb0
   147a8:	ldrdeq	r5, [r1], -r8
   147ac:	andeq	r6, r1, ip, ror #3
   147b0:	andeq	r6, r1, r4, lsl r2
   147b4:	push	{r4, lr}
   147b8:	bl	10f38 <aligned_alloc@plt>
   147bc:	cmp	r0, #0
   147c0:	popne	{r4, pc}
   147c4:	bl	14d10 <close@plt+0x3db4>
   147c8:	push	{r4, lr}
   147cc:	bl	14d98 <close@plt+0x3e3c>
   147d0:	cmp	r0, #0
   147d4:	popne	{r4, pc}
   147d8:	bl	14d10 <close@plt+0x3db4>
   147dc:	push	{r4, lr}
   147e0:	bl	14d98 <close@plt+0x3e3c>
   147e4:	cmp	r0, #0
   147e8:	popne	{r4, pc}
   147ec:	bl	14d10 <close@plt+0x3db4>
   147f0:	push	{r4, lr}
   147f4:	bl	14d98 <close@plt+0x3e3c>
   147f8:	cmp	r0, #0
   147fc:	popne	{r4, pc}
   14800:	bl	14d10 <close@plt+0x3db4>
   14804:	push	{r4, r5, r6, lr}
   14808:	mov	r5, r0
   1480c:	mov	r4, r1
   14810:	bl	14dc4 <close@plt+0x3e68>
   14814:	cmp	r0, #0
   14818:	popne	{r4, r5, r6, pc}
   1481c:	adds	r4, r4, #0
   14820:	movne	r4, #1
   14824:	cmp	r5, #0
   14828:	orreq	r4, r4, #1
   1482c:	cmp	r4, #0
   14830:	popeq	{r4, r5, r6, pc}
   14834:	bl	14d10 <close@plt+0x3db4>
   14838:	push	{r4, lr}
   1483c:	cmp	r1, #0
   14840:	orreq	r1, r1, #1
   14844:	bl	14dc4 <close@plt+0x3e68>
   14848:	cmp	r0, #0
   1484c:	popne	{r4, pc}
   14850:	bl	14d10 <close@plt+0x3db4>
   14854:	push	{r4, r5, r6, lr}
   14858:	mov	r6, r0
   1485c:	mov	r5, r1
   14860:	mov	r4, r2
   14864:	bl	150c4 <close@plt+0x4168>
   14868:	cmp	r0, #0
   1486c:	popne	{r4, r5, r6, pc}
   14870:	cmp	r6, #0
   14874:	beq	14884 <close@plt+0x3928>
   14878:	cmp	r5, #0
   1487c:	cmpne	r4, #0
   14880:	popeq	{r4, r5, r6, pc}
   14884:	bl	14d10 <close@plt+0x3db4>
   14888:	b	14854 <close@plt+0x38f8>
   1488c:	cmp	r2, #0
   14890:	cmpne	r1, #0
   14894:	moveq	r2, #1
   14898:	moveq	r1, r2
   1489c:	push	{r4, lr}
   148a0:	bl	150c4 <close@plt+0x4168>
   148a4:	cmp	r0, #0
   148a8:	popne	{r4, pc}
   148ac:	bl	14d10 <close@plt+0x3db4>
   148b0:	mov	r2, r1
   148b4:	mov	r1, r0
   148b8:	mov	r0, #0
   148bc:	b	14854 <close@plt+0x38f8>
   148c0:	mov	r2, r1
   148c4:	mov	r1, r0
   148c8:	mov	r0, #0
   148cc:	b	1488c <close@plt+0x3930>
   148d0:	push	{r4, r5, r6, lr}
   148d4:	subs	r6, r0, #0
   148d8:	sub	sp, sp, #8
   148dc:	mov	r5, r1
   148e0:	ldr	r4, [r1]
   148e4:	beq	14920 <close@plt+0x39c4>
   148e8:	lsr	r1, r4, #1
   148ec:	add	r3, r1, #1
   148f0:	mvn	r3, r3
   148f4:	cmp	r4, r3
   148f8:	bhi	1491c <close@plt+0x39c0>
   148fc:	add	r4, r4, #1
   14900:	add	r4, r4, r1
   14904:	mov	r0, r6
   14908:	mov	r1, r4
   1490c:	bl	14854 <close@plt+0x38f8>
   14910:	str	r4, [r5]
   14914:	add	sp, sp, #8
   14918:	pop	{r4, r5, r6, pc}
   1491c:	bl	14d10 <close@plt+0x3db4>
   14920:	cmp	r4, #0
   14924:	bne	14904 <close@plt+0x39a8>
   14928:	mov	r1, r2
   1492c:	mov	r0, #64	; 0x40
   14930:	str	r2, [sp, #4]
   14934:	bl	15204 <close@plt+0x42a8>
   14938:	ldr	r2, [sp, #4]
   1493c:	cmp	r0, #0
   14940:	movne	r4, r0
   14944:	addeq	r4, r0, #1
   14948:	b	14904 <close@plt+0x39a8>
   1494c:	mov	r2, #1
   14950:	b	148d0 <close@plt+0x3974>
   14954:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14958:	sub	sp, sp, #12
   1495c:	ldr	r6, [r1]
   14960:	mov	sl, r1
   14964:	mov	r9, r0
   14968:	asrs	r4, r6, #1
   1496c:	mov	r5, r2
   14970:	mov	fp, r3
   14974:	ldr	r7, [sp, #48]	; 0x30
   14978:	bmi	14ae4 <close@plt+0x3b88>
   1497c:	mvn	r3, #-2147483648	; 0x80000000
   14980:	sub	r3, r3, r4
   14984:	cmp	r6, r3
   14988:	movle	r3, #0
   1498c:	movgt	r3, #1
   14990:	mvn	r8, fp
   14994:	cmp	r3, #0
   14998:	addeq	r4, r4, r6
   1499c:	mvnne	r4, #-2147483648	; 0x80000000
   149a0:	lsr	r8, r8, #31
   149a4:	cmp	fp, r4
   149a8:	movge	r3, #0
   149ac:	andlt	r3, r8, #1
   149b0:	cmp	r3, #0
   149b4:	beq	14a9c <close@plt+0x3b40>
   149b8:	cmp	r7, #0
   149bc:	blt	14b6c <close@plt+0x3c10>
   149c0:	bne	14b64 <close@plt+0x3c08>
   149c4:	mov	r2, #64	; 0x40
   149c8:	mov	r1, r7
   149cc:	mov	r0, r2
   149d0:	str	r2, [sp, #4]
   149d4:	bl	15410 <close@plt+0x44b4>
   149d8:	ldr	r2, [sp, #4]
   149dc:	mov	r1, r7
   149e0:	mov	r4, r0
   149e4:	mov	r0, r2
   149e8:	bl	15630 <close@plt+0x46d4>
   149ec:	ldr	r2, [sp, #4]
   149f0:	sub	r1, r2, r1
   149f4:	cmp	r9, #0
   149f8:	sub	r3, r4, r6
   149fc:	streq	r9, [sl]
   14a00:	cmp	r3, r5
   14a04:	bge	14a88 <close@plt+0x3b2c>
   14a08:	cmp	r5, #0
   14a0c:	blt	14af8 <close@plt+0x3b9c>
   14a10:	cmp	r6, #0
   14a14:	blt	14a34 <close@plt+0x3ad8>
   14a18:	mvn	r3, #-2147483648	; 0x80000000
   14a1c:	sub	r3, r3, r5
   14a20:	cmp	r6, r3
   14a24:	movle	r3, #0
   14a28:	movgt	r3, #1
   14a2c:	cmp	r3, #0
   14a30:	bne	14bf4 <close@plt+0x3c98>
   14a34:	add	r5, r6, r5
   14a38:	cmp	fp, r5
   14a3c:	movge	r8, #0
   14a40:	andlt	r8, r8, #1
   14a44:	cmp	r8, #0
   14a48:	mov	r4, r5
   14a4c:	bne	14bf4 <close@plt+0x3c98>
   14a50:	cmp	r7, #0
   14a54:	blt	14b0c <close@plt+0x3bb0>
   14a58:	beq	14a84 <close@plt+0x3b28>
   14a5c:	cmp	r5, #0
   14a60:	blt	14bb4 <close@plt+0x3c58>
   14a64:	mov	r1, r7
   14a68:	mvn	r0, #-2147483648	; 0x80000000
   14a6c:	bl	15410 <close@plt+0x44b4>
   14a70:	cmp	r5, r0
   14a74:	movle	r0, #0
   14a78:	movgt	r0, #1
   14a7c:	cmp	r0, #0
   14a80:	bne	14bf4 <close@plt+0x3c98>
   14a84:	mul	r1, r5, r7
   14a88:	mov	r0, r9
   14a8c:	bl	14804 <close@plt+0x38a8>
   14a90:	str	r4, [sl]
   14a94:	add	sp, sp, #12
   14a98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a9c:	cmp	r7, #0
   14aa0:	blt	14b38 <close@plt+0x3bdc>
   14aa4:	beq	149c4 <close@plt+0x3a68>
   14aa8:	cmp	r4, #0
   14aac:	blt	14b74 <close@plt+0x3c18>
   14ab0:	mov	r1, r7
   14ab4:	mvn	r0, #-2147483648	; 0x80000000
   14ab8:	bl	15410 <close@plt+0x44b4>
   14abc:	cmp	r0, r4
   14ac0:	movge	r0, #0
   14ac4:	movlt	r0, #1
   14ac8:	cmp	r0, #0
   14acc:	mvnne	r2, #-2147483648	; 0x80000000
   14ad0:	bne	149c8 <close@plt+0x3a6c>
   14ad4:	mul	r1, r7, r4
   14ad8:	cmp	r1, #63	; 0x3f
   14adc:	bgt	149f4 <close@plt+0x3a98>
   14ae0:	b	149c4 <close@plt+0x3a68>
   14ae4:	rsb	r3, r4, #-2147483648	; 0x80000000
   14ae8:	cmp	r6, r3
   14aec:	movge	r3, #0
   14af0:	movlt	r3, #1
   14af4:	b	14990 <close@plt+0x3a34>
   14af8:	rsb	r3, r5, #-2147483648	; 0x80000000
   14afc:	cmp	r6, r3
   14b00:	movge	r3, #0
   14b04:	movlt	r3, #1
   14b08:	b	14a2c <close@plt+0x3ad0>
   14b0c:	cmp	r5, #0
   14b10:	blt	14b98 <close@plt+0x3c3c>
   14b14:	cmn	r7, #1
   14b18:	beq	14a84 <close@plt+0x3b28>
   14b1c:	mov	r1, r7
   14b20:	mov	r0, #-2147483648	; 0x80000000
   14b24:	bl	15410 <close@plt+0x44b4>
   14b28:	cmp	r5, r0
   14b2c:	movle	r0, #0
   14b30:	movgt	r0, #1
   14b34:	b	14a7c <close@plt+0x3b20>
   14b38:	cmp	r4, #0
   14b3c:	blt	14bd8 <close@plt+0x3c7c>
   14b40:	cmn	r7, #1
   14b44:	beq	14ad4 <close@plt+0x3b78>
   14b48:	mov	r1, r7
   14b4c:	mov	r0, #-2147483648	; 0x80000000
   14b50:	bl	15410 <close@plt+0x44b4>
   14b54:	cmp	r0, r4
   14b58:	movge	r0, #0
   14b5c:	movlt	r0, #1
   14b60:	b	14ac8 <close@plt+0x3b6c>
   14b64:	mov	r4, fp
   14b68:	b	14ab0 <close@plt+0x3b54>
   14b6c:	mov	r4, fp
   14b70:	b	14b40 <close@plt+0x3be4>
   14b74:	cmn	r4, #1
   14b78:	beq	14ad4 <close@plt+0x3b78>
   14b7c:	mov	r1, r4
   14b80:	mov	r0, #-2147483648	; 0x80000000
   14b84:	bl	15410 <close@plt+0x44b4>
   14b88:	cmp	r7, r0
   14b8c:	movle	r0, #0
   14b90:	movgt	r0, #1
   14b94:	b	14ac8 <close@plt+0x3b6c>
   14b98:	mov	r1, r7
   14b9c:	mvn	r0, #-2147483648	; 0x80000000
   14ba0:	bl	15410 <close@plt+0x44b4>
   14ba4:	cmp	r5, r0
   14ba8:	movge	r0, #0
   14bac:	movlt	r0, #1
   14bb0:	b	14a7c <close@plt+0x3b20>
   14bb4:	cmn	r5, #1
   14bb8:	beq	14a84 <close@plt+0x3b28>
   14bbc:	mov	r1, r5
   14bc0:	mov	r0, #-2147483648	; 0x80000000
   14bc4:	bl	15410 <close@plt+0x44b4>
   14bc8:	cmp	r7, r0
   14bcc:	movle	r0, #0
   14bd0:	movgt	r0, #1
   14bd4:	b	14a7c <close@plt+0x3b20>
   14bd8:	mov	r1, r7
   14bdc:	mvn	r0, #-2147483648	; 0x80000000
   14be0:	bl	15410 <close@plt+0x44b4>
   14be4:	cmp	r0, r4
   14be8:	movle	r0, #0
   14bec:	movgt	r0, #1
   14bf0:	b	14ac8 <close@plt+0x3b6c>
   14bf4:	bl	14d10 <close@plt+0x3db4>
   14bf8:	push	{r4, lr}
   14bfc:	mov	r1, #1
   14c00:	bl	14d50 <close@plt+0x3df4>
   14c04:	cmp	r0, #0
   14c08:	popne	{r4, pc}
   14c0c:	bl	14d10 <close@plt+0x3db4>
   14c10:	push	{r4, lr}
   14c14:	mov	r1, #1
   14c18:	bl	14d50 <close@plt+0x3df4>
   14c1c:	cmp	r0, #0
   14c20:	popne	{r4, pc}
   14c24:	bl	14d10 <close@plt+0x3db4>
   14c28:	push	{r4, lr}
   14c2c:	bl	14d50 <close@plt+0x3df4>
   14c30:	cmp	r0, #0
   14c34:	popne	{r4, pc}
   14c38:	bl	14d10 <close@plt+0x3db4>
   14c3c:	push	{r4, lr}
   14c40:	bl	14d50 <close@plt+0x3df4>
   14c44:	cmp	r0, #0
   14c48:	popne	{r4, pc}
   14c4c:	bl	14d10 <close@plt+0x3db4>
   14c50:	push	{r4, r5, r6, lr}
   14c54:	mov	r6, r0
   14c58:	mov	r0, r1
   14c5c:	mov	r4, r1
   14c60:	bl	14d98 <close@plt+0x3e3c>
   14c64:	subs	r5, r0, #0
   14c68:	beq	14c80 <close@plt+0x3d24>
   14c6c:	mov	r2, r4
   14c70:	mov	r1, r6
   14c74:	bl	10d4c <memcpy@plt>
   14c78:	mov	r0, r5
   14c7c:	pop	{r4, r5, r6, pc}
   14c80:	bl	14d10 <close@plt+0x3db4>
   14c84:	push	{r4, r5, r6, lr}
   14c88:	mov	r6, r0
   14c8c:	mov	r0, r1
   14c90:	mov	r4, r1
   14c94:	bl	14d98 <close@plt+0x3e3c>
   14c98:	subs	r5, r0, #0
   14c9c:	beq	14cb4 <close@plt+0x3d58>
   14ca0:	mov	r2, r4
   14ca4:	mov	r1, r6
   14ca8:	bl	10d4c <memcpy@plt>
   14cac:	mov	r0, r5
   14cb0:	pop	{r4, r5, r6, pc}
   14cb4:	bl	14d10 <close@plt+0x3db4>
   14cb8:	push	{r4, r5, r6, lr}
   14cbc:	mov	r6, r0
   14cc0:	add	r0, r1, #1
   14cc4:	mov	r4, r1
   14cc8:	bl	14d98 <close@plt+0x3e3c>
   14ccc:	subs	r5, r0, #0
   14cd0:	beq	14cf0 <close@plt+0x3d94>
   14cd4:	mov	r3, #0
   14cd8:	mov	r1, r6
   14cdc:	strb	r3, [r5, r4]
   14ce0:	mov	r2, r4
   14ce4:	bl	10d4c <memcpy@plt>
   14ce8:	mov	r0, r5
   14cec:	pop	{r4, r5, r6, pc}
   14cf0:	bl	14d10 <close@plt+0x3db4>
   14cf4:	push	{r4, lr}
   14cf8:	mov	r4, r0
   14cfc:	bl	10e84 <strlen@plt>
   14d00:	add	r1, r0, #1
   14d04:	mov	r0, r4
   14d08:	pop	{r4, lr}
   14d0c:	b	14c50 <close@plt+0x3cf4>
   14d10:	ldr	r3, [pc, #44]	; 14d44 <close@plt+0x3de8>
   14d14:	push	{r4, lr}
   14d18:	mov	r2, #5
   14d1c:	ldr	r1, [pc, #36]	; 14d48 <close@plt+0x3dec>
   14d20:	mov	r0, #0
   14d24:	ldr	r4, [r3]
   14d28:	bl	10d88 <dcgettext@plt>
   14d2c:	ldr	r2, [pc, #24]	; 14d4c <close@plt+0x3df0>
   14d30:	mov	r1, #0
   14d34:	mov	r3, r0
   14d38:	mov	r0, r4
   14d3c:	bl	10e18 <error@plt>
   14d40:	bl	10f50 <abort@plt>
   14d44:	andeq	r7, r2, r4, lsl r1
   14d48:	andeq	r6, r1, r4, ror #4
   14d4c:	andeq	r5, r1, r8, lsr #28
   14d50:	cmp	r1, #0
   14d54:	cmpne	r0, #0
   14d58:	moveq	r1, #1
   14d5c:	moveq	r0, r1
   14d60:	umull	r2, r3, r0, r1
   14d64:	adds	r3, r3, #0
   14d68:	movne	r3, #1
   14d6c:	cmp	r2, #0
   14d70:	blt	14d80 <close@plt+0x3e24>
   14d74:	cmp	r3, #0
   14d78:	bne	14d80 <close@plt+0x3e24>
   14d7c:	b	10cd4 <calloc@plt>
   14d80:	push	{r4, lr}
   14d84:	bl	10e9c <__errno_location@plt>
   14d88:	mov	r3, #12
   14d8c:	str	r3, [r0]
   14d90:	mov	r0, #0
   14d94:	pop	{r4, pc}
   14d98:	cmp	r0, #0
   14d9c:	moveq	r0, #1
   14da0:	cmp	r0, #0
   14da4:	blt	14dac <close@plt+0x3e50>
   14da8:	b	10e30 <malloc@plt>
   14dac:	push	{r4, lr}
   14db0:	bl	10e9c <__errno_location@plt>
   14db4:	mov	r3, #12
   14db8:	str	r3, [r0]
   14dbc:	mov	r0, #0
   14dc0:	pop	{r4, pc}
   14dc4:	cmp	r0, #0
   14dc8:	beq	14dec <close@plt+0x3e90>
   14dcc:	cmp	r1, #0
   14dd0:	push	{lr}		; (str lr, [sp, #-4]!)
   14dd4:	sub	sp, sp, #12
   14dd8:	beq	14df4 <close@plt+0x3e98>
   14ddc:	blt	14e0c <close@plt+0x3eb0>
   14de0:	add	sp, sp, #12
   14de4:	pop	{lr}		; (ldr lr, [sp], #4)
   14de8:	b	10d94 <realloc@plt>
   14dec:	mov	r0, r1
   14df0:	b	14d98 <close@plt+0x3e3c>
   14df4:	str	r1, [sp, #4]
   14df8:	bl	12224 <close@plt+0x12c8>
   14dfc:	ldr	r3, [sp, #4]
   14e00:	mov	r0, r3
   14e04:	add	sp, sp, #12
   14e08:	pop	{pc}		; (ldr pc, [sp], #4)
   14e0c:	bl	10e9c <__errno_location@plt>
   14e10:	mov	r2, #12
   14e14:	mov	r3, #0
   14e18:	str	r2, [r0]
   14e1c:	b	14e00 <close@plt+0x3ea4>
   14e20:	push	{r4, r5, r6, lr}
   14e24:	mov	r4, r0
   14e28:	bl	10e00 <__fpending@plt>
   14e2c:	ldr	r5, [r4]
   14e30:	and	r5, r5, #32
   14e34:	mov	r6, r0
   14e38:	mov	r0, r4
   14e3c:	bl	14e9c <close@plt+0x3f40>
   14e40:	cmp	r5, #0
   14e44:	mov	r4, r0
   14e48:	bne	14e68 <close@plt+0x3f0c>
   14e4c:	cmp	r0, #0
   14e50:	beq	14e60 <close@plt+0x3f04>
   14e54:	cmp	r6, #0
   14e58:	beq	14e84 <close@plt+0x3f28>
   14e5c:	mvn	r4, #0
   14e60:	mov	r0, r4
   14e64:	pop	{r4, r5, r6, pc}
   14e68:	cmp	r0, #0
   14e6c:	bne	14e5c <close@plt+0x3f00>
   14e70:	bl	10e9c <__errno_location@plt>
   14e74:	str	r4, [r0]
   14e78:	mvn	r4, #0
   14e7c:	mov	r0, r4
   14e80:	pop	{r4, r5, r6, pc}
   14e84:	bl	10e9c <__errno_location@plt>
   14e88:	ldr	r4, [r0]
   14e8c:	subs	r4, r4, #9
   14e90:	mvnne	r4, #0
   14e94:	mov	r0, r4
   14e98:	pop	{r4, r5, r6, pc}
   14e9c:	push	{r4, r5, lr}
   14ea0:	sub	sp, sp, #12
   14ea4:	mov	r4, r0
   14ea8:	bl	10ed8 <fileno@plt>
   14eac:	cmp	r0, #0
   14eb0:	mov	r0, r4
   14eb4:	blt	14f30 <close@plt+0x3fd4>
   14eb8:	bl	10e48 <__freading@plt>
   14ebc:	cmp	r0, #0
   14ec0:	bne	14efc <close@plt+0x3fa0>
   14ec4:	mov	r0, r4
   14ec8:	bl	14f3c <close@plt+0x3fe0>
   14ecc:	cmp	r0, #0
   14ed0:	beq	14f2c <close@plt+0x3fd0>
   14ed4:	bl	10e9c <__errno_location@plt>
   14ed8:	mov	r5, r0
   14edc:	mov	r0, r4
   14ee0:	ldr	r4, [r5]
   14ee4:	bl	10ef0 <fclose@plt>
   14ee8:	cmp	r4, #0
   14eec:	mvnne	r0, #0
   14ef0:	strne	r4, [r5]
   14ef4:	add	sp, sp, #12
   14ef8:	pop	{r4, r5, pc}
   14efc:	mov	r0, r4
   14f00:	bl	10ed8 <fileno@plt>
   14f04:	mov	r3, #1
   14f08:	str	r3, [sp]
   14f0c:	mov	r2, #0
   14f10:	mov	r3, #0
   14f14:	bl	10de8 <lseek64@plt>
   14f18:	mvn	r3, #0
   14f1c:	mvn	r2, #0
   14f20:	cmp	r1, r3
   14f24:	cmpeq	r0, r2
   14f28:	bne	14ec4 <close@plt+0x3f68>
   14f2c:	mov	r0, r4
   14f30:	add	sp, sp, #12
   14f34:	pop	{r4, r5, lr}
   14f38:	b	10ef0 <fclose@plt>
   14f3c:	push	{r4, lr}
   14f40:	subs	r4, r0, #0
   14f44:	sub	sp, sp, #8
   14f48:	beq	14f64 <close@plt+0x4008>
   14f4c:	bl	10e48 <__freading@plt>
   14f50:	cmp	r0, #0
   14f54:	beq	14f64 <close@plt+0x4008>
   14f58:	ldr	r3, [r4]
   14f5c:	tst	r3, #256	; 0x100
   14f60:	bne	14f74 <close@plt+0x4018>
   14f64:	mov	r0, r4
   14f68:	add	sp, sp, #8
   14f6c:	pop	{r4, lr}
   14f70:	b	10d1c <fflush@plt>
   14f74:	mov	r3, #1
   14f78:	str	r3, [sp]
   14f7c:	mov	r2, #0
   14f80:	mov	r3, #0
   14f84:	mov	r0, r4
   14f88:	bl	14f9c <close@plt+0x4040>
   14f8c:	mov	r0, r4
   14f90:	add	sp, sp, #8
   14f94:	pop	{r4, lr}
   14f98:	b	10d1c <fflush@plt>
   14f9c:	push	{r4, r5, r6, r7, r8, lr}
   14fa0:	sub	sp, sp, #8
   14fa4:	ldmib	r0, {ip, lr}
   14fa8:	mov	r4, r0
   14fac:	ldr	r5, [sp, #32]
   14fb0:	cmp	lr, ip
   14fb4:	beq	14fcc <close@plt+0x4070>
   14fb8:	str	r5, [sp, #32]
   14fbc:	mov	r0, r4
   14fc0:	add	sp, sp, #8
   14fc4:	pop	{r4, r5, r6, r7, r8, lr}
   14fc8:	b	10efc <fseeko64@plt>
   14fcc:	ldr	lr, [r0, #20]
   14fd0:	ldr	ip, [r0, #16]
   14fd4:	cmp	lr, ip
   14fd8:	bne	14fb8 <close@plt+0x405c>
   14fdc:	ldr	r8, [r0, #36]	; 0x24
   14fe0:	cmp	r8, #0
   14fe4:	bne	14fb8 <close@plt+0x405c>
   14fe8:	mov	r6, r2
   14fec:	mov	r7, r3
   14ff0:	bl	10ed8 <fileno@plt>
   14ff4:	mov	r2, r6
   14ff8:	mov	r3, r7
   14ffc:	str	r5, [sp]
   15000:	bl	10de8 <lseek64@plt>
   15004:	mvn	r3, #0
   15008:	mvn	r2, #0
   1500c:	cmp	r1, r3
   15010:	cmpeq	r0, r2
   15014:	beq	15034 <close@plt+0x40d8>
   15018:	ldr	r3, [r4]
   1501c:	strd	r0, [r4, #80]	; 0x50
   15020:	mov	r0, r8
   15024:	bic	r3, r3, #16
   15028:	str	r3, [r4]
   1502c:	add	sp, sp, #8
   15030:	pop	{r4, r5, r6, r7, r8, pc}
   15034:	mvn	r0, #0
   15038:	b	1502c <close@plt+0x40d0>
   1503c:	push	{r4, lr}
   15040:	mov	r0, #14
   15044:	bl	10f20 <nl_langinfo@plt>
   15048:	cmp	r0, #0
   1504c:	beq	15064 <close@plt+0x4108>
   15050:	ldrb	r2, [r0]
   15054:	ldr	r3, [pc, #16]	; 1506c <close@plt+0x4110>
   15058:	cmp	r2, #0
   1505c:	moveq	r0, r3
   15060:	pop	{r4, pc}
   15064:	ldr	r0, [pc]	; 1506c <close@plt+0x4110>
   15068:	pop	{r4, pc}
   1506c:	andeq	r6, r1, r8, ror r2
   15070:	push	{r4, r5, r6, r7, lr}
   15074:	subs	r6, r0, #0
   15078:	sub	sp, sp, #12
   1507c:	addeq	r6, sp, #4
   15080:	mov	r0, r6
   15084:	mov	r5, r2
   15088:	mov	r7, r1
   1508c:	bl	10e0c <mbrtowc@plt>
   15090:	cmp	r5, #0
   15094:	cmnne	r0, #3
   15098:	mov	r4, r0
   1509c:	bls	150b8 <close@plt+0x415c>
   150a0:	mov	r0, #0
   150a4:	bl	15110 <close@plt+0x41b4>
   150a8:	cmp	r0, #0
   150ac:	moveq	r4, #1
   150b0:	ldrbeq	r3, [r7]
   150b4:	streq	r3, [r6]
   150b8:	mov	r0, r4
   150bc:	add	sp, sp, #12
   150c0:	pop	{r4, r5, r6, r7, pc}
   150c4:	push	{r4, r5, r6, lr}
   150c8:	subs	r4, r2, #0
   150cc:	mov	r6, r0
   150d0:	mov	r5, r1
   150d4:	beq	15100 <close@plt+0x41a4>
   150d8:	mov	r1, r4
   150dc:	mvn	r0, #0
   150e0:	bl	15204 <close@plt+0x42a8>
   150e4:	cmp	r0, r5
   150e8:	bcs	15100 <close@plt+0x41a4>
   150ec:	bl	10e9c <__errno_location@plt>
   150f0:	mov	r3, #12
   150f4:	str	r3, [r0]
   150f8:	mov	r0, #0
   150fc:	pop	{r4, r5, r6, pc}
   15100:	mul	r1, r5, r4
   15104:	mov	r0, r6
   15108:	pop	{r4, r5, r6, lr}
   1510c:	b	14dc4 <close@plt+0x3e68>
   15110:	push	{lr}		; (str lr, [sp, #-4]!)
   15114:	sub	sp, sp, #268	; 0x10c
   15118:	add	r1, sp, #4
   1511c:	ldr	r2, [pc, #60]	; 15160 <close@plt+0x4204>
   15120:	bl	1516c <close@plt+0x4210>
   15124:	cmp	r0, #0
   15128:	movne	r0, #0
   1512c:	bne	15158 <close@plt+0x41fc>
   15130:	ldr	r1, [pc, #44]	; 15164 <close@plt+0x4208>
   15134:	add	r0, sp, #4
   15138:	bl	10cf8 <strcmp@plt>
   1513c:	cmp	r0, #0
   15140:	beq	15158 <close@plt+0x41fc>
   15144:	add	r0, sp, #4
   15148:	ldr	r1, [pc, #24]	; 15168 <close@plt+0x420c>
   1514c:	bl	10cf8 <strcmp@plt>
   15150:	adds	r0, r0, #0
   15154:	movne	r0, #1
   15158:	add	sp, sp, #268	; 0x10c
   1515c:	pop	{pc}		; (ldr pc, [sp], #4)
   15160:	andeq	r0, r0, r1, lsl #2
   15164:	andeq	r6, r1, r0, lsl #5
   15168:	andeq	r6, r1, r4, lsl #5
   1516c:	push	{r4, r5, r6, lr}
   15170:	mov	r5, r1
   15174:	mov	r1, #0
   15178:	mov	r4, r2
   1517c:	bl	10f08 <setlocale@plt>
   15180:	subs	r6, r0, #0
   15184:	beq	151e0 <close@plt+0x4284>
   15188:	bl	10e84 <strlen@plt>
   1518c:	cmp	r4, r0
   15190:	bhi	151c8 <close@plt+0x426c>
   15194:	cmp	r4, #0
   15198:	bne	151a4 <close@plt+0x4248>
   1519c:	mov	r0, #34	; 0x22
   151a0:	pop	{r4, r5, r6, pc}
   151a4:	sub	r4, r4, #1
   151a8:	mov	r1, r6
   151ac:	mov	r2, r4
   151b0:	mov	r0, r5
   151b4:	bl	10d4c <memcpy@plt>
   151b8:	mov	r3, #0
   151bc:	strb	r3, [r5, r4]
   151c0:	mov	r0, #34	; 0x22
   151c4:	pop	{r4, r5, r6, pc}
   151c8:	add	r2, r0, #1
   151cc:	mov	r1, r6
   151d0:	mov	r0, r5
   151d4:	bl	10d4c <memcpy@plt>
   151d8:	mov	r0, #0
   151dc:	pop	{r4, r5, r6, pc}
   151e0:	cmp	r4, #0
   151e4:	beq	151f4 <close@plt+0x4298>
   151e8:	strb	r6, [r5]
   151ec:	mov	r0, #22
   151f0:	pop	{r4, r5, r6, pc}
   151f4:	mov	r0, #22
   151f8:	pop	{r4, r5, r6, pc}
   151fc:	mov	r1, #0
   15200:	b	10f08 <setlocale@plt>
   15204:	subs	r2, r1, #1
   15208:	bxeq	lr
   1520c:	bcc	153e4 <close@plt+0x4488>
   15210:	cmp	r0, r1
   15214:	bls	153c8 <close@plt+0x446c>
   15218:	tst	r1, r2
   1521c:	beq	153d4 <close@plt+0x4478>
   15220:	clz	r3, r0
   15224:	clz	r2, r1
   15228:	sub	r3, r2, r3
   1522c:	rsbs	r3, r3, #31
   15230:	addne	r3, r3, r3, lsl #1
   15234:	mov	r2, #0
   15238:	addne	pc, pc, r3, lsl #2
   1523c:	nop			; (mov r0, r0)
   15240:	cmp	r0, r1, lsl #31
   15244:	adc	r2, r2, r2
   15248:	subcs	r0, r0, r1, lsl #31
   1524c:	cmp	r0, r1, lsl #30
   15250:	adc	r2, r2, r2
   15254:	subcs	r0, r0, r1, lsl #30
   15258:	cmp	r0, r1, lsl #29
   1525c:	adc	r2, r2, r2
   15260:	subcs	r0, r0, r1, lsl #29
   15264:	cmp	r0, r1, lsl #28
   15268:	adc	r2, r2, r2
   1526c:	subcs	r0, r0, r1, lsl #28
   15270:	cmp	r0, r1, lsl #27
   15274:	adc	r2, r2, r2
   15278:	subcs	r0, r0, r1, lsl #27
   1527c:	cmp	r0, r1, lsl #26
   15280:	adc	r2, r2, r2
   15284:	subcs	r0, r0, r1, lsl #26
   15288:	cmp	r0, r1, lsl #25
   1528c:	adc	r2, r2, r2
   15290:	subcs	r0, r0, r1, lsl #25
   15294:	cmp	r0, r1, lsl #24
   15298:	adc	r2, r2, r2
   1529c:	subcs	r0, r0, r1, lsl #24
   152a0:	cmp	r0, r1, lsl #23
   152a4:	adc	r2, r2, r2
   152a8:	subcs	r0, r0, r1, lsl #23
   152ac:	cmp	r0, r1, lsl #22
   152b0:	adc	r2, r2, r2
   152b4:	subcs	r0, r0, r1, lsl #22
   152b8:	cmp	r0, r1, lsl #21
   152bc:	adc	r2, r2, r2
   152c0:	subcs	r0, r0, r1, lsl #21
   152c4:	cmp	r0, r1, lsl #20
   152c8:	adc	r2, r2, r2
   152cc:	subcs	r0, r0, r1, lsl #20
   152d0:	cmp	r0, r1, lsl #19
   152d4:	adc	r2, r2, r2
   152d8:	subcs	r0, r0, r1, lsl #19
   152dc:	cmp	r0, r1, lsl #18
   152e0:	adc	r2, r2, r2
   152e4:	subcs	r0, r0, r1, lsl #18
   152e8:	cmp	r0, r1, lsl #17
   152ec:	adc	r2, r2, r2
   152f0:	subcs	r0, r0, r1, lsl #17
   152f4:	cmp	r0, r1, lsl #16
   152f8:	adc	r2, r2, r2
   152fc:	subcs	r0, r0, r1, lsl #16
   15300:	cmp	r0, r1, lsl #15
   15304:	adc	r2, r2, r2
   15308:	subcs	r0, r0, r1, lsl #15
   1530c:	cmp	r0, r1, lsl #14
   15310:	adc	r2, r2, r2
   15314:	subcs	r0, r0, r1, lsl #14
   15318:	cmp	r0, r1, lsl #13
   1531c:	adc	r2, r2, r2
   15320:	subcs	r0, r0, r1, lsl #13
   15324:	cmp	r0, r1, lsl #12
   15328:	adc	r2, r2, r2
   1532c:	subcs	r0, r0, r1, lsl #12
   15330:	cmp	r0, r1, lsl #11
   15334:	adc	r2, r2, r2
   15338:	subcs	r0, r0, r1, lsl #11
   1533c:	cmp	r0, r1, lsl #10
   15340:	adc	r2, r2, r2
   15344:	subcs	r0, r0, r1, lsl #10
   15348:	cmp	r0, r1, lsl #9
   1534c:	adc	r2, r2, r2
   15350:	subcs	r0, r0, r1, lsl #9
   15354:	cmp	r0, r1, lsl #8
   15358:	adc	r2, r2, r2
   1535c:	subcs	r0, r0, r1, lsl #8
   15360:	cmp	r0, r1, lsl #7
   15364:	adc	r2, r2, r2
   15368:	subcs	r0, r0, r1, lsl #7
   1536c:	cmp	r0, r1, lsl #6
   15370:	adc	r2, r2, r2
   15374:	subcs	r0, r0, r1, lsl #6
   15378:	cmp	r0, r1, lsl #5
   1537c:	adc	r2, r2, r2
   15380:	subcs	r0, r0, r1, lsl #5
   15384:	cmp	r0, r1, lsl #4
   15388:	adc	r2, r2, r2
   1538c:	subcs	r0, r0, r1, lsl #4
   15390:	cmp	r0, r1, lsl #3
   15394:	adc	r2, r2, r2
   15398:	subcs	r0, r0, r1, lsl #3
   1539c:	cmp	r0, r1, lsl #2
   153a0:	adc	r2, r2, r2
   153a4:	subcs	r0, r0, r1, lsl #2
   153a8:	cmp	r0, r1, lsl #1
   153ac:	adc	r2, r2, r2
   153b0:	subcs	r0, r0, r1, lsl #1
   153b4:	cmp	r0, r1
   153b8:	adc	r2, r2, r2
   153bc:	subcs	r0, r0, r1
   153c0:	mov	r0, r2
   153c4:	bx	lr
   153c8:	moveq	r0, #1
   153cc:	movne	r0, #0
   153d0:	bx	lr
   153d4:	clz	r2, r1
   153d8:	rsb	r2, r2, #31
   153dc:	lsr	r0, r0, r2
   153e0:	bx	lr
   153e4:	cmp	r0, #0
   153e8:	mvnne	r0, #0
   153ec:	b	15650 <close@plt+0x46f4>
   153f0:	cmp	r1, #0
   153f4:	beq	153e4 <close@plt+0x4488>
   153f8:	push	{r0, r1, lr}
   153fc:	bl	15204 <close@plt+0x42a8>
   15400:	pop	{r1, r2, lr}
   15404:	mul	r3, r2, r0
   15408:	sub	r1, r1, r3
   1540c:	bx	lr
   15410:	cmp	r1, #0
   15414:	beq	15620 <close@plt+0x46c4>
   15418:	eor	ip, r0, r1
   1541c:	rsbmi	r1, r1, #0
   15420:	subs	r2, r1, #1
   15424:	beq	155ec <close@plt+0x4690>
   15428:	movs	r3, r0
   1542c:	rsbmi	r3, r0, #0
   15430:	cmp	r3, r1
   15434:	bls	155f8 <close@plt+0x469c>
   15438:	tst	r1, r2
   1543c:	beq	15608 <close@plt+0x46ac>
   15440:	clz	r2, r3
   15444:	clz	r0, r1
   15448:	sub	r2, r0, r2
   1544c:	rsbs	r2, r2, #31
   15450:	addne	r2, r2, r2, lsl #1
   15454:	mov	r0, #0
   15458:	addne	pc, pc, r2, lsl #2
   1545c:	nop			; (mov r0, r0)
   15460:	cmp	r3, r1, lsl #31
   15464:	adc	r0, r0, r0
   15468:	subcs	r3, r3, r1, lsl #31
   1546c:	cmp	r3, r1, lsl #30
   15470:	adc	r0, r0, r0
   15474:	subcs	r3, r3, r1, lsl #30
   15478:	cmp	r3, r1, lsl #29
   1547c:	adc	r0, r0, r0
   15480:	subcs	r3, r3, r1, lsl #29
   15484:	cmp	r3, r1, lsl #28
   15488:	adc	r0, r0, r0
   1548c:	subcs	r3, r3, r1, lsl #28
   15490:	cmp	r3, r1, lsl #27
   15494:	adc	r0, r0, r0
   15498:	subcs	r3, r3, r1, lsl #27
   1549c:	cmp	r3, r1, lsl #26
   154a0:	adc	r0, r0, r0
   154a4:	subcs	r3, r3, r1, lsl #26
   154a8:	cmp	r3, r1, lsl #25
   154ac:	adc	r0, r0, r0
   154b0:	subcs	r3, r3, r1, lsl #25
   154b4:	cmp	r3, r1, lsl #24
   154b8:	adc	r0, r0, r0
   154bc:	subcs	r3, r3, r1, lsl #24
   154c0:	cmp	r3, r1, lsl #23
   154c4:	adc	r0, r0, r0
   154c8:	subcs	r3, r3, r1, lsl #23
   154cc:	cmp	r3, r1, lsl #22
   154d0:	adc	r0, r0, r0
   154d4:	subcs	r3, r3, r1, lsl #22
   154d8:	cmp	r3, r1, lsl #21
   154dc:	adc	r0, r0, r0
   154e0:	subcs	r3, r3, r1, lsl #21
   154e4:	cmp	r3, r1, lsl #20
   154e8:	adc	r0, r0, r0
   154ec:	subcs	r3, r3, r1, lsl #20
   154f0:	cmp	r3, r1, lsl #19
   154f4:	adc	r0, r0, r0
   154f8:	subcs	r3, r3, r1, lsl #19
   154fc:	cmp	r3, r1, lsl #18
   15500:	adc	r0, r0, r0
   15504:	subcs	r3, r3, r1, lsl #18
   15508:	cmp	r3, r1, lsl #17
   1550c:	adc	r0, r0, r0
   15510:	subcs	r3, r3, r1, lsl #17
   15514:	cmp	r3, r1, lsl #16
   15518:	adc	r0, r0, r0
   1551c:	subcs	r3, r3, r1, lsl #16
   15520:	cmp	r3, r1, lsl #15
   15524:	adc	r0, r0, r0
   15528:	subcs	r3, r3, r1, lsl #15
   1552c:	cmp	r3, r1, lsl #14
   15530:	adc	r0, r0, r0
   15534:	subcs	r3, r3, r1, lsl #14
   15538:	cmp	r3, r1, lsl #13
   1553c:	adc	r0, r0, r0
   15540:	subcs	r3, r3, r1, lsl #13
   15544:	cmp	r3, r1, lsl #12
   15548:	adc	r0, r0, r0
   1554c:	subcs	r3, r3, r1, lsl #12
   15550:	cmp	r3, r1, lsl #11
   15554:	adc	r0, r0, r0
   15558:	subcs	r3, r3, r1, lsl #11
   1555c:	cmp	r3, r1, lsl #10
   15560:	adc	r0, r0, r0
   15564:	subcs	r3, r3, r1, lsl #10
   15568:	cmp	r3, r1, lsl #9
   1556c:	adc	r0, r0, r0
   15570:	subcs	r3, r3, r1, lsl #9
   15574:	cmp	r3, r1, lsl #8
   15578:	adc	r0, r0, r0
   1557c:	subcs	r3, r3, r1, lsl #8
   15580:	cmp	r3, r1, lsl #7
   15584:	adc	r0, r0, r0
   15588:	subcs	r3, r3, r1, lsl #7
   1558c:	cmp	r3, r1, lsl #6
   15590:	adc	r0, r0, r0
   15594:	subcs	r3, r3, r1, lsl #6
   15598:	cmp	r3, r1, lsl #5
   1559c:	adc	r0, r0, r0
   155a0:	subcs	r3, r3, r1, lsl #5
   155a4:	cmp	r3, r1, lsl #4
   155a8:	adc	r0, r0, r0
   155ac:	subcs	r3, r3, r1, lsl #4
   155b0:	cmp	r3, r1, lsl #3
   155b4:	adc	r0, r0, r0
   155b8:	subcs	r3, r3, r1, lsl #3
   155bc:	cmp	r3, r1, lsl #2
   155c0:	adc	r0, r0, r0
   155c4:	subcs	r3, r3, r1, lsl #2
   155c8:	cmp	r3, r1, lsl #1
   155cc:	adc	r0, r0, r0
   155d0:	subcs	r3, r3, r1, lsl #1
   155d4:	cmp	r3, r1
   155d8:	adc	r0, r0, r0
   155dc:	subcs	r3, r3, r1
   155e0:	cmp	ip, #0
   155e4:	rsbmi	r0, r0, #0
   155e8:	bx	lr
   155ec:	teq	ip, r0
   155f0:	rsbmi	r0, r0, #0
   155f4:	bx	lr
   155f8:	movcc	r0, #0
   155fc:	asreq	r0, ip, #31
   15600:	orreq	r0, r0, #1
   15604:	bx	lr
   15608:	clz	r2, r1
   1560c:	rsb	r2, r2, #31
   15610:	cmp	ip, #0
   15614:	lsr	r0, r3, r2
   15618:	rsbmi	r0, r0, #0
   1561c:	bx	lr
   15620:	cmp	r0, #0
   15624:	mvngt	r0, #-2147483648	; 0x80000000
   15628:	movlt	r0, #-2147483648	; 0x80000000
   1562c:	b	15650 <close@plt+0x46f4>
   15630:	cmp	r1, #0
   15634:	beq	15620 <close@plt+0x46c4>
   15638:	push	{r0, r1, lr}
   1563c:	bl	15418 <close@plt+0x44bc>
   15640:	pop	{r1, r2, lr}
   15644:	mul	r3, r2, r0
   15648:	sub	r1, r1, r3
   1564c:	bx	lr
   15650:	push	{r1, lr}
   15654:	mov	r0, #8
   15658:	bl	10cec <raise@plt>
   1565c:	pop	{r1, pc}
   15660:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15664:	mov	r7, r0
   15668:	ldr	r6, [pc, #72]	; 156b8 <close@plt+0x475c>
   1566c:	ldr	r5, [pc, #72]	; 156bc <close@plt+0x4760>
   15670:	add	r6, pc, r6
   15674:	add	r5, pc, r5
   15678:	sub	r6, r6, r5
   1567c:	mov	r8, r1
   15680:	mov	r9, r2
   15684:	bl	10cb4 <calloc@plt-0x20>
   15688:	asrs	r6, r6, #2
   1568c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15690:	mov	r4, #0
   15694:	add	r4, r4, #1
   15698:	ldr	r3, [r5], #4
   1569c:	mov	r2, r9
   156a0:	mov	r1, r8
   156a4:	mov	r0, r7
   156a8:	blx	r3
   156ac:	cmp	r6, r4
   156b0:	bne	15694 <close@plt+0x4738>
   156b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   156b8:	muleq	r1, r8, r8
   156bc:	muleq	r1, r0, r8
   156c0:	bx	lr
   156c4:	ldr	r3, [pc, #12]	; 156d8 <close@plt+0x477c>
   156c8:	mov	r1, #0
   156cc:	add	r3, pc, r3
   156d0:	ldr	r2, [r3]
   156d4:	b	10ea8 <__cxa_atexit@plt>
   156d8:	andeq	r1, r1, ip, lsl sl

Disassembly of section .fini:

000156dc <.fini>:
   156dc:	push	{r3, lr}
   156e0:	pop	{r3, pc}
