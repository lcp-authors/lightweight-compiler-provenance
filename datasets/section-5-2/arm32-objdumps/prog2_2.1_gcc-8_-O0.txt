
../repos/prog2/2.1:     file format elf32-littlearm


Disassembly of section .init:

0001063c <.init>:
   1063c:	push	{r3, lr}
   10640:	bl	10710 <_start@@Base+0x3c>
   10644:	pop	{r3, pc}

Disassembly of section .plt:

00010648 <printf@plt-0x14>:
   10648:	push	{lr}		; (str lr, [sp, #-4]!)
   1064c:	ldr	lr, [pc, #4]	; 10658 <printf@plt-0x4>
   10650:	add	lr, pc, lr
   10654:	ldr	pc, [lr, #8]!
   10658:	andeq	r0, r1, r8, lsr #19

0001065c <printf@plt>:
   1065c:	add	ip, pc, #0, 12
   10660:	add	ip, ip, #16, 20	; 0x10000
   10664:	ldr	pc, [ip, #2472]!	; 0x9a8

00010668 <free@plt>:
   10668:	add	ip, pc, #0, 12
   1066c:	add	ip, ip, #16, 20	; 0x10000
   10670:	ldr	pc, [ip, #2464]!	; 0x9a0

00010674 <realloc@plt>:
   10674:	add	ip, pc, #0, 12
   10678:	add	ip, ip, #16, 20	; 0x10000
   1067c:	ldr	pc, [ip, #2456]!	; 0x998

00010680 <puts@plt>:
   10680:	add	ip, pc, #0, 12
   10684:	add	ip, ip, #16, 20	; 0x10000
   10688:	ldr	pc, [ip, #2448]!	; 0x990

0001068c <malloc@plt>:
   1068c:	add	ip, pc, #0, 12
   10690:	add	ip, ip, #16, 20	; 0x10000
   10694:	ldr	pc, [ip, #2440]!	; 0x988

00010698 <__libc_start_main@plt>:
   10698:	add	ip, pc, #0, 12
   1069c:	add	ip, ip, #16, 20	; 0x10000
   106a0:	ldr	pc, [ip, #2432]!	; 0x980

000106a4 <__gmon_start__@plt>:
   106a4:	add	ip, pc, #0, 12
   106a8:	add	ip, ip, #16, 20	; 0x10000
   106ac:	ldr	pc, [ip, #2424]!	; 0x978

000106b0 <putchar@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #16, 20	; 0x10000
   106b8:	ldr	pc, [ip, #2416]!	; 0x970

000106bc <__isoc99_scanf@plt>:
   106bc:	add	ip, pc, #0, 12
   106c0:	add	ip, ip, #16, 20	; 0x10000
   106c4:	ldr	pc, [ip, #2408]!	; 0x968

000106c8 <abort@plt>:
   106c8:	add	ip, pc, #0, 12
   106cc:	add	ip, ip, #16, 20	; 0x10000
   106d0:	ldr	pc, [ip, #2400]!	; 0x960

Disassembly of section .text:

000106d4 <_start@@Base>:
   106d4:	mov	fp, #0
   106d8:	mov	lr, #0
   106dc:	pop	{r1}		; (ldr r1, [sp], #4)
   106e0:	mov	r2, sp
   106e4:	push	{r2}		; (str r2, [sp, #-4]!)
   106e8:	push	{r0}		; (str r0, [sp, #-4]!)
   106ec:	ldr	ip, [pc, #16]	; 10704 <_start@@Base+0x30>
   106f0:	push	{ip}		; (str ip, [sp, #-4]!)
   106f4:	ldr	r0, [pc, #12]	; 10708 <_start@@Base+0x34>
   106f8:	ldr	r3, [pc, #12]	; 1070c <_start@@Base+0x38>
   106fc:	bl	10698 <__libc_start_main@plt>
   10700:	bl	106c8 <abort@plt>
   10704:	andeq	r0, r1, r8, lsl fp
   10708:	andeq	r0, r1, r4, asr #15
   1070c:			; <UNDEFINED> instruction: 0x00010ab8
   10710:	ldr	r3, [pc, #20]	; 1072c <_start@@Base+0x58>
   10714:	ldr	r2, [pc, #20]	; 10730 <_start@@Base+0x5c>
   10718:	add	r3, pc, r3
   1071c:	ldr	r2, [r3, r2]
   10720:	cmp	r2, #0
   10724:	bxeq	lr
   10728:	b	106a4 <__gmon_start__@plt>
   1072c:	andeq	r0, r1, r0, ror #17
   10730:	andeq	r0, r0, r4, lsr r0
   10734:	ldr	r0, [pc, #24]	; 10754 <_start@@Base+0x80>
   10738:	ldr	r3, [pc, #24]	; 10758 <_start@@Base+0x84>
   1073c:	cmp	r3, r0
   10740:	bxeq	lr
   10744:	ldr	r3, [pc, #16]	; 1075c <_start@@Base+0x88>
   10748:	cmp	r3, #0
   1074c:	bxeq	lr
   10750:	bx	r3
   10754:	andeq	r1, r2, r0, asr #32
   10758:	andeq	r1, r2, r0, asr #32
   1075c:	andeq	r0, r0, r0
   10760:	ldr	r0, [pc, #36]	; 1078c <_start@@Base+0xb8>
   10764:	ldr	r1, [pc, #36]	; 10790 <_start@@Base+0xbc>
   10768:	sub	r1, r1, r0
   1076c:	asr	r1, r1, #2
   10770:	add	r1, r1, r1, lsr #31
   10774:	asrs	r1, r1, #1
   10778:	bxeq	lr
   1077c:	ldr	r3, [pc, #16]	; 10794 <_start@@Base+0xc0>
   10780:	cmp	r3, #0
   10784:	bxeq	lr
   10788:	bx	r3
   1078c:	andeq	r1, r2, r0, asr #32
   10790:	andeq	r1, r2, r0, asr #32
   10794:	andeq	r0, r0, r0
   10798:	push	{r4, lr}
   1079c:	ldr	r4, [pc, #24]	; 107bc <_start@@Base+0xe8>
   107a0:	ldrb	r3, [r4]
   107a4:	cmp	r3, #0
   107a8:	popne	{r4, pc}
   107ac:	bl	10734 <_start@@Base+0x60>
   107b0:	mov	r3, #1
   107b4:	strb	r3, [r4]
   107b8:	pop	{r4, pc}
   107bc:	andeq	r1, r2, r0, asr #32
   107c0:	b	10760 <_start@@Base+0x8c>

000107c4 <main@@Base>:
   107c4:	str	fp, [sp, #-8]!
   107c8:	str	lr, [sp, #4]
   107cc:	add	fp, sp, #4
   107d0:	sub	sp, sp, #32
   107d4:	mov	r3, #0
   107d8:	str	r3, [fp, #-8]
   107dc:	mov	r3, #0
   107e0:	str	r3, [fp, #-12]
   107e4:	ldr	r3, [pc, #532]	; 10a00 <main@@Base+0x23c>
   107e8:	add	r3, pc, r3
   107ec:	mov	r0, r3
   107f0:	bl	1065c <printf@plt>
   107f4:	sub	r3, fp, #32
   107f8:	mov	r1, r3
   107fc:	ldr	r3, [pc, #512]	; 10a04 <main@@Base+0x240>
   10800:	add	r3, pc, r3
   10804:	mov	r0, r3
   10808:	bl	106bc <__isoc99_scanf@plt>
   1080c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10810:	lsl	r3, r3, #2
   10814:	mov	r0, r3
   10818:	bl	1068c <malloc@plt>
   1081c:	mov	r3, r0
   10820:	str	r3, [fp, #-20]	; 0xffffffec
   10824:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10828:	lsl	r3, r3, #2
   1082c:	mov	r0, r3
   10830:	bl	1068c <malloc@plt>
   10834:	mov	r3, r0
   10838:	str	r3, [fp, #-24]	; 0xffffffe8
   1083c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10840:	lsl	r3, r3, #2
   10844:	mov	r0, r3
   10848:	bl	1068c <malloc@plt>
   1084c:	mov	r3, r0
   10850:	str	r3, [fp, #-28]	; 0xffffffe4
   10854:	mov	r3, #0
   10858:	str	r3, [fp, #-16]
   1085c:	b	10938 <main@@Base+0x174>
   10860:	ldr	r3, [fp, #-16]
   10864:	add	r3, r3, #1
   10868:	mov	r1, r3
   1086c:	ldr	r3, [pc, #404]	; 10a08 <main@@Base+0x244>
   10870:	add	r3, pc, r3
   10874:	mov	r0, r3
   10878:	bl	1065c <printf@plt>
   1087c:	ldr	r3, [fp, #-16]
   10880:	lsl	r3, r3, #2
   10884:	ldr	r2, [fp, #-20]	; 0xffffffec
   10888:	add	r3, r2, r3
   1088c:	mov	r1, r3
   10890:	ldr	r3, [pc, #372]	; 10a0c <main@@Base+0x248>
   10894:	add	r3, pc, r3
   10898:	mov	r0, r3
   1089c:	bl	106bc <__isoc99_scanf@plt>
   108a0:	ldr	r3, [fp, #-16]
   108a4:	lsl	r3, r3, #2
   108a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   108ac:	add	r3, r2, r3
   108b0:	ldr	r3, [r3]
   108b4:	and	r3, r3, #1
   108b8:	cmp	r3, #0
   108bc:	beq	108f8 <main@@Base+0x134>
   108c0:	ldr	r3, [fp, #-16]
   108c4:	lsl	r3, r3, #2
   108c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   108cc:	add	r2, r2, r3
   108d0:	ldr	r3, [fp, #-12]
   108d4:	lsl	r3, r3, #2
   108d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   108dc:	add	r3, r1, r3
   108e0:	ldr	r2, [r2]
   108e4:	str	r2, [r3]
   108e8:	ldr	r3, [fp, #-12]
   108ec:	add	r3, r3, #1
   108f0:	str	r3, [fp, #-12]
   108f4:	b	1092c <main@@Base+0x168>
   108f8:	ldr	r3, [fp, #-16]
   108fc:	lsl	r3, r3, #2
   10900:	ldr	r2, [fp, #-20]	; 0xffffffec
   10904:	add	r2, r2, r3
   10908:	ldr	r3, [fp, #-8]
   1090c:	lsl	r3, r3, #2
   10910:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10914:	add	r3, r1, r3
   10918:	ldr	r2, [r2]
   1091c:	str	r2, [r3]
   10920:	ldr	r3, [fp, #-8]
   10924:	add	r3, r3, #1
   10928:	str	r3, [fp, #-8]
   1092c:	ldr	r3, [fp, #-16]
   10930:	add	r3, r3, #1
   10934:	str	r3, [fp, #-16]
   10938:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1093c:	ldr	r2, [fp, #-16]
   10940:	cmp	r2, r3
   10944:	blt	10860 <main@@Base+0x9c>
   10948:	ldr	r3, [fp, #-8]
   1094c:	lsl	r3, r3, #2
   10950:	mov	r1, r3
   10954:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10958:	bl	10674 <realloc@plt>
   1095c:	str	r0, [fp, #-24]	; 0xffffffe8
   10960:	ldr	r3, [fp, #-12]
   10964:	lsl	r3, r3, #2
   10968:	mov	r1, r3
   1096c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10970:	bl	10674 <realloc@plt>
   10974:	str	r0, [fp, #-28]	; 0xffffffe4
   10978:	ldr	r3, [pc, #144]	; 10a10 <main@@Base+0x24c>
   1097c:	add	r3, pc, r3
   10980:	mov	r0, r3
   10984:	bl	1065c <printf@plt>
   10988:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1098c:	mov	r1, r3
   10990:	ldr	r0, [fp, #-20]	; 0xffffffec
   10994:	bl	10a1c <PrintArray@@Base>
   10998:	ldr	r3, [pc, #116]	; 10a14 <main@@Base+0x250>
   1099c:	add	r3, pc, r3
   109a0:	mov	r0, r3
   109a4:	bl	1065c <printf@plt>
   109a8:	ldr	r1, [fp, #-8]
   109ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   109b0:	bl	10a1c <PrintArray@@Base>
   109b4:	ldr	r3, [pc, #92]	; 10a18 <main@@Base+0x254>
   109b8:	add	r3, pc, r3
   109bc:	mov	r0, r3
   109c0:	bl	1065c <printf@plt>
   109c4:	ldr	r1, [fp, #-12]
   109c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   109cc:	bl	10a1c <PrintArray@@Base>
   109d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   109d4:	bl	10668 <free@plt>
   109d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   109dc:	bl	10668 <free@plt>
   109e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   109e4:	bl	10668 <free@plt>
   109e8:	mov	r3, #0
   109ec:	mov	r0, r3
   109f0:	sub	sp, fp, #4
   109f4:	ldr	fp, [sp]
   109f8:	add	sp, sp, #4
   109fc:	pop	{pc}		; (ldr pc, [sp], #4)
   10a00:	andeq	r0, r0, r8, lsr r3
   10a04:	andeq	r0, r0, r8, lsr r3
   10a08:	andeq	r0, r0, ip, asr #5
   10a0c:	andeq	r0, r0, r4, lsr #5
   10a10:	ldrdeq	r0, [r0], -ip
   10a14:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10a18:	andeq	r0, r0, r4, asr #3

00010a1c <PrintArray@@Base>:
   10a1c:	str	fp, [sp, #-8]!
   10a20:	str	lr, [sp, #4]
   10a24:	add	fp, sp, #4
   10a28:	sub	sp, sp, #16
   10a2c:	str	r0, [fp, #-16]
   10a30:	str	r1, [fp, #-20]	; 0xffffffec
   10a34:	mov	r0, #91	; 0x5b
   10a38:	bl	106b0 <putchar@plt>
   10a3c:	mov	r3, #0
   10a40:	str	r3, [fp, #-8]
   10a44:	b	10a7c <PrintArray@@Base+0x60>
   10a48:	ldr	r3, [fp, #-8]
   10a4c:	lsl	r3, r3, #2
   10a50:	ldr	r2, [fp, #-16]
   10a54:	add	r3, r2, r3
   10a58:	ldr	r3, [r3]
   10a5c:	mov	r1, r3
   10a60:	ldr	r3, [pc, #72]	; 10ab0 <PrintArray@@Base+0x94>
   10a64:	add	r3, pc, r3
   10a68:	mov	r0, r3
   10a6c:	bl	1065c <printf@plt>
   10a70:	ldr	r3, [fp, #-8]
   10a74:	add	r3, r3, #1
   10a78:	str	r3, [fp, #-8]
   10a7c:	ldr	r2, [fp, #-8]
   10a80:	ldr	r3, [fp, #-20]	; 0xffffffec
   10a84:	cmp	r2, r3
   10a88:	blt	10a48 <PrintArray@@Base+0x2c>
   10a8c:	ldr	r3, [pc, #32]	; 10ab4 <PrintArray@@Base+0x98>
   10a90:	add	r3, pc, r3
   10a94:	mov	r0, r3
   10a98:	bl	10680 <puts@plt>
   10a9c:	nop	{0}
   10aa0:	sub	sp, fp, #4
   10aa4:	ldr	fp, [sp]
   10aa8:	add	sp, sp, #4
   10aac:	pop	{pc}		; (ldr pc, [sp], #4)
   10ab0:	andeq	r0, r0, ip, lsr #2
   10ab4:	andeq	r0, r0, r4, lsl #2

00010ab8 <__libc_csu_init@@Base>:
   10ab8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10abc:	mov	r7, r0
   10ac0:	ldr	r6, [pc, #72]	; 10b10 <__libc_csu_init@@Base+0x58>
   10ac4:	ldr	r5, [pc, #72]	; 10b14 <__libc_csu_init@@Base+0x5c>
   10ac8:	add	r6, pc, r6
   10acc:	add	r5, pc, r5
   10ad0:	sub	r6, r6, r5
   10ad4:	mov	r8, r1
   10ad8:	mov	r9, r2
   10adc:	bl	1063c <printf@plt-0x20>
   10ae0:	asrs	r6, r6, #2
   10ae4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10ae8:	mov	r4, #0
   10aec:	add	r4, r4, #1
   10af0:	ldr	r3, [r5], #4
   10af4:	mov	r2, r9
   10af8:	mov	r1, r8
   10afc:	mov	r0, r7
   10b00:	blx	r3
   10b04:	cmp	r6, r4
   10b08:	bne	10aec <__libc_csu_init@@Base+0x34>
   10b0c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b10:	andeq	r0, r1, r4, asr #8
   10b14:	andeq	r0, r1, ip, lsr r4

00010b18 <__libc_csu_fini@@Base>:
   10b18:	bx	lr

Disassembly of section .fini:

00010b1c <.fini>:
   10b1c:	push	{r3, lr}
   10b20:	pop	{r3, pc}
