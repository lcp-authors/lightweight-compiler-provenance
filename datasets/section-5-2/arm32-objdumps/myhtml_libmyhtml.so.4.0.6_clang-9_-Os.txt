
../repos/myhtml/libmyhtml.so.4.0.6:     file format elf32-littlearm


Disassembly of section .init:

00010f40 <.init>:
   10f40:	push	{r3, lr}
   10f44:	bl	12140 <mythread_init@plt+0x10>
   10f48:	pop	{r3, pc}

Disassembly of section .plt:

00010f4c <pthread_mutex_unlock@plt-0x14>:
   10f4c:	push	{lr}		; (str lr, [sp, #-4]!)
   10f50:	ldr	lr, [pc, #4]	; 10f5c <pthread_mutex_unlock@plt-0x4>
   10f54:	add	lr, pc, lr
   10f58:	ldr	pc, [lr, #8]!
   10f5c:	andseq	r4, r0, r4, lsr #1

00010f60 <pthread_mutex_unlock@plt>:
   10f60:	add	ip, pc, #1048576	; 0x100000
   10f64:	add	ip, ip, #4, 20	; 0x4000
   10f68:	ldr	pc, [ip, #164]!	; 0xa4

00010f6c <myhtml_get_nodes_by_attribute_value_recursion@plt>:
   10f6c:	add	ip, pc, #1048576	; 0x100000
   10f70:	add	ip, ip, #4, 20	; 0x4000
   10f74:	ldr	pc, [ip, #156]!	; 0x9c

00010f78 <mycore_realloc@plt>:
   10f78:	add	ip, pc, #1048576	; 0x100000
   10f7c:	add	ip, ip, #4, 20	; 0x4000
   10f80:	ldr	pc, [ip, #148]!	; 0x94

00010f84 <calloc@plt>:
   10f84:	add	ip, pc, #1048576	; 0x100000
   10f88:	add	ip, ip, #4, 20	; 0x4000
   10f8c:	ldr	pc, [ip, #140]!	; 0x8c

00010f90 <mycore_strcmp@plt>:
   10f90:	add	ip, pc, #1048576	; 0x100000
   10f94:	add	ip, ip, #4, 20	; 0x4000
   10f98:	ldr	pc, [ip, #132]!	; 0x84

00010f9c <myhtml_tree_node_insert_root@plt>:
   10f9c:	add	ip, pc, #1048576	; 0x100000
   10fa0:	add	ip, ip, #4, 20	; 0x4000
   10fa4:	ldr	pc, [ip, #124]!	; 0x7c

00010fa8 <mythread_queue_list_entry_delete@plt>:
   10fa8:	add	ip, pc, #1048576	; 0x100000
   10fac:	add	ip, ip, #4, 20	; 0x4000
   10fb0:	ldr	pc, [ip, #116]!	; 0x74

00010fb4 <myencoding_string_append_chunk@plt>:
   10fb4:	add	ip, pc, #1048576	; 0x100000
   10fb8:	add	ip, ip, #4, 20	; 0x4000
   10fbc:	ldr	pc, [ip, #108]!	; 0x6c

00010fc0 <myhtml_token_release_and_check_doctype_attributes@plt>:
   10fc0:	add	ip, pc, #1048576	; 0x100000
   10fc4:	add	ip, ip, #4, 20	; 0x4000
   10fc8:	ldr	pc, [ip, #100]!	; 0x64

00010fcc <myhtml_token_doctype_check_xhtml_1_1@plt>:
   10fcc:	add	ip, pc, #1048576	; 0x100000
   10fd0:	add	ip, ip, #4, 20	; 0x4000
   10fd4:	ldr	pc, [ip, #92]!	; 0x5c

00010fd8 <myencoding_detect_unicode@plt>:
   10fd8:	add	ip, pc, #1048576	; 0x100000
   10fdc:	add	ip, ip, #4, 20	; 0x4000
   10fe0:	ldr	pc, [ip, #84]!	; 0x54

00010fe4 <myhtml_tree_element_in_scope_by_node@plt>:
   10fe4:	add	ip, pc, #1048576	; 0x100000
   10fe8:	add	ip, ip, #4, 20	; 0x4000
   10fec:	ldr	pc, [ip, #76]!	; 0x4c

00010ff0 <mythread_nanosleep_clean@plt>:
   10ff0:	add	ip, pc, #1048576	; 0x100000
   10ff4:	add	ip, ip, #4, 20	; 0x4000
   10ff8:	ldr	pc, [ip, #68]!	; 0x44

00010ffc <myhtml_tree_node_insert_html_element@plt>:
   10ffc:	add	ip, pc, #1048576	; 0x100000
   11000:	add	ip, ip, #4, 20	; 0x4000
   11004:	ldr	pc, [ip, #60]!	; 0x3c

00011008 <myhtml_tree_token_list_destroy@plt>:
   11008:	add	ip, pc, #1048576	; 0x100000
   1100c:	add	ip, ip, #4, 20	; 0x4000
   11010:	ldr	pc, [ip, #52]!	; 0x34

00011014 <mcobject_async_init@plt>:
   11014:	add	ip, pc, #1048576	; 0x100000
   11018:	add	ip, ip, #4, 20	; 0x4000
   1101c:	ldr	pc, [ip, #44]!	; 0x2c

00011020 <myhtml_tree_temp_tag_name_append@plt>:
   11020:	add	ip, pc, #1048576	; 0x100000
   11024:	add	ip, ip, #4, 20	; 0x4000
   11028:	ldr	pc, [ip, #36]!	; 0x24

0001102c <myhtml_tokenizer_fragment_init@plt>:
   1102c:	add	ip, pc, #1048576	; 0x100000
   11030:	add	ip, ip, #4, 20	; 0x4000
   11034:	ldr	pc, [ip, #28]!

00011038 <mythread_nanosleep_create@plt>:
   11038:	add	ip, pc, #1048576	; 0x100000
   1103c:	add	ip, ip, #4, 20	; 0x4000
   11040:	ldr	pc, [ip, #20]!

00011044 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>:
   11044:	add	ip, pc, #1048576	; 0x100000
   11048:	add	ip, ip, #4, 20	; 0x4000
   1104c:	ldr	pc, [ip, #12]!

00011050 <myhtml_tokenizer_state_init@plt>:
   11050:	add	ip, pc, #1048576	; 0x100000
   11054:	add	ip, ip, #4, 20	; 0x4000
   11058:	ldr	pc, [ip, #4]!

0001105c <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>:
   1105c:	add	ip, pc, #1048576	; 0x100000
   11060:	add	ip, ip, #12288	; 0x3000
   11064:	ldr	pc, [ip, #4092]!	; 0xffc

00011068 <mycore_ustrcasecmp_without_checks_by_secondary@plt>:
   11068:	add	ip, pc, #1048576	; 0x100000
   1106c:	add	ip, ip, #12288	; 0x3000
   11070:	ldr	pc, [ip, #4084]!	; 0xff4

00011074 <myhtml_tree_wait_for_last_done_token@plt>:
   11074:	add	ip, pc, #1048576	; 0x100000
   11078:	add	ip, ip, #12288	; 0x3000
   1107c:	ldr	pc, [ip, #4076]!	; 0xfec

00011080 <mythread_queue_get_prev_node@plt>:
   11080:	add	ip, pc, #1048576	; 0x100000
   11084:	add	ip, ip, #12288	; 0x3000
   11088:	ldr	pc, [ip, #4068]!	; 0xfe4

0001108c <setbuf@plt>:
   1108c:	add	ip, pc, #1048576	; 0x100000
   11090:	add	ip, ip, #12288	; 0x3000
   11094:	ldr	pc, [ip, #4060]!	; 0xfdc

00011098 <myhtml_insertion_mode_in_body_other_end_tag@plt>:
   11098:	add	ip, pc, #1048576	; 0x100000
   1109c:	add	ip, ip, #12288	; 0x3000
   110a0:	ldr	pc, [ip, #4052]!	; 0xfd4

000110a4 <myhtml_stream_buffer_destroy@plt>:
   110a4:	add	ip, pc, #1048576	; 0x100000
   110a8:	add	ip, ip, #12288	; 0x3000
   110ac:	ldr	pc, [ip, #4044]!	; 0xfcc

000110b0 <myhtml_token_attr_match_case@plt>:
   110b0:	add	ip, pc, #1048576	; 0x100000
   110b4:	add	ip, ip, #12288	; 0x3000
   110b8:	ldr	pc, [ip, #4036]!	; 0xfc4

000110bc <__cxa_finalize@plt>:
   110bc:	add	ip, pc, #1048576	; 0x100000
   110c0:	add	ip, ip, #12288	; 0x3000
   110c4:	ldr	pc, [ip, #4028]!	; 0xfbc

000110c8 <mycore_utils_avl_tree_node_rotate_right@plt>:
   110c8:	add	ip, pc, #1048576	; 0x100000
   110cc:	add	ip, ip, #12288	; 0x3000
   110d0:	ldr	pc, [ip, #4020]!	; 0xfb4

000110d4 <mcobject_async_create@plt>:
   110d4:	add	ip, pc, #1048576	; 0x100000
   110d8:	add	ip, ip, #12288	; 0x3000
   110dc:	ldr	pc, [ip, #4012]!	; 0xfac

000110e0 <mythread_queue_clean@plt>:
   110e0:	add	ip, pc, #1048576	; 0x100000
   110e4:	add	ip, ip, #12288	; 0x3000
   110e8:	ldr	pc, [ip, #4004]!	; 0xfa4

000110ec <mcsync_mutex_destroy@plt>:
   110ec:	add	ip, pc, #1048576	; 0x100000
   110f0:	add	ip, ip, #12288	; 0x3000
   110f4:	ldr	pc, [ip, #3996]!	; 0xf9c

000110f8 <myhtml_parser_worker@plt>:
   110f8:	add	ip, pc, #1048576	; 0x100000
   110fc:	add	ip, ip, #12288	; 0x3000
   11100:	ldr	pc, [ip, #3988]!	; 0xf94

00011104 <mythread_thread_create@plt>:
   11104:	add	ip, pc, #1048576	; 0x100000
   11108:	add	ip, ip, #12288	; 0x3000
   1110c:	ldr	pc, [ip, #3980]!	; 0xf8c

00011110 <mcsync_create@plt>:
   11110:	add	ip, pc, #1048576	; 0x100000
   11114:	add	ip, ip, #12288	; 0x3000
   11118:	ldr	pc, [ip, #3972]!	; 0xf84

0001111c <fopen@plt>:
   1111c:	add	ip, pc, #1048576	; 0x100000
   11120:	add	ip, ip, #12288	; 0x3000
   11124:	ldr	pc, [ip, #3964]!	; 0xf7c

00011128 <mcobject_async_mem_malloc@plt>:
   11128:	add	ip, pc, #1048576	; 0x100000
   1112c:	add	ip, ip, #12288	; 0x3000
   11130:	ldr	pc, [ip, #3956]!	; 0xf74

00011134 <mcobject_destroy@plt>:
   11134:	add	ip, pc, #1048576	; 0x100000
   11138:	add	ip, ip, #12288	; 0x3000
   1113c:	ldr	pc, [ip, #3948]!	; 0xf6c

00011140 <pthread_attr_destroy@plt>:
   11140:	add	ip, pc, #1048576	; 0x100000
   11144:	add	ip, ip, #12288	; 0x3000
   11148:	ldr	pc, [ip, #3940]!	; 0xf64

0001114c <myhtml_get_nodes_by_attribute_value_recursion_by_key@plt>:
   1114c:	add	ip, pc, #1048576	; 0x100000
   11150:	add	ip, ip, #12288	; 0x3000
   11154:	ldr	pc, [ip, #3932]!	; 0xf5c

00011158 <pthread_mutex_destroy@plt>:
   11158:	add	ip, pc, #1048576	; 0x100000
   1115c:	add	ip, ip, #12288	; 0x3000
   11160:	ldr	pc, [ip, #3924]!	; 0xf54

00011164 <fflush@plt>:
   11164:	add	ip, pc, #1048576	; 0x100000
   11168:	add	ip, ip, #12288	; 0x3000
   1116c:	ldr	pc, [ip, #3916]!	; 0xf4c

00011170 <mythread_create@plt>:
   11170:	add	ip, pc, #1048576	; 0x100000
   11174:	add	ip, ip, #12288	; 0x3000
   11178:	ldr	pc, [ip, #3908]!	; 0xf44

0001117c <myhtml_insertion_mode_in_foreign_content@plt>:
   1117c:	add	ip, pc, #1048576	; 0x100000
   11180:	add	ip, ip, #12288	; 0x3000
   11184:	ldr	pc, [ip, #3900]!	; 0xf3c

00011188 <myhtml_tree_generate_all_implied_end_tags@plt>:
   11188:	add	ip, pc, #1048576	; 0x100000
   1118c:	add	ip, ip, #12288	; 0x3000
   11190:	ldr	pc, [ip, #3892]!	; 0xf34

00011194 <myencoding_string_append_lowercase_ascii@plt>:
   11194:	add	ip, pc, #1048576	; 0x100000
   11198:	add	ip, ip, #12288	; 0x3000
   1119c:	ldr	pc, [ip, #3884]!	; 0xf2c

000111a0 <myhread_increase_id_by_entry_id@plt>:
   111a0:	add	ip, pc, #1048576	; 0x100000
   111a4:	add	ip, ip, #12288	; 0x3000
   111a8:	ldr	pc, [ip, #3876]!	; 0xf24

000111ac <myhtml_tree_incomming_buffer_make_data@plt>:
   111ac:	add	ip, pc, #1048576	; 0x100000
   111b0:	add	ip, ip, #12288	; 0x3000
   111b4:	ldr	pc, [ip, #3868]!	; 0xf1c

000111b8 <memmove@plt>:
   111b8:	add	ip, pc, #1048576	; 0x100000
   111bc:	add	ip, ip, #12288	; 0x3000
   111c0:	ldr	pc, [ip, #3860]!	; 0xf14

000111c4 <mythread_thread_attr_init@plt>:
   111c4:	add	ip, pc, #1048576	; 0x100000
   111c8:	add	ip, ip, #12288	; 0x3000
   111cc:	ldr	pc, [ip, #3852]!	; 0xf0c

000111d0 <myhtml_rules_tree_dispatcher@plt>:
   111d0:	add	ip, pc, #1048576	; 0x100000
   111d4:	add	ip, ip, #12288	; 0x3000
   111d8:	ldr	pc, [ip, #3844]!	; 0xf04

000111dc <myhtml_get_nodes_by_attribute_key_recursion@plt>:
   111dc:	add	ip, pc, #1048576	; 0x100000
   111e0:	add	ip, ip, #12288	; 0x3000
   111e4:	ldr	pc, [ip, #3836]!	; 0xefc

000111e8 <free@plt>:
   111e8:	add	ip, pc, #1048576	; 0x100000
   111ec:	add	ip, ip, #12288	; 0x3000
   111f0:	ldr	pc, [ip, #3828]!	; 0xef4

000111f4 <mchar_async_cache_malloc@plt>:
   111f4:	add	ip, pc, #1048576	; 0x100000
   111f8:	add	ip, ip, #12288	; 0x3000
   111fc:	ldr	pc, [ip, #3820]!	; 0xeec

00011200 <mythread_function_see_opt@plt>:
   11200:	add	ip, pc, #1048576	; 0x100000
   11204:	add	ip, ip, #12288	; 0x3000
   11208:	ldr	pc, [ip, #3812]!	; 0xee4

0001120c <myencoding_detect_utf_16@plt>:
   1120c:	add	ip, pc, #1048576	; 0x100000
   11210:	add	ip, ip, #12288	; 0x3000
   11214:	ldr	pc, [ip, #3804]!	; 0xedc

00011218 <mcobject_chunk_malloc@plt>:
   11218:	add	ip, pc, #1048576	; 0x100000
   1121c:	add	ip, ip, #12288	; 0x3000
   11220:	ldr	pc, [ip, #3796]!	; 0xed4

00011224 <myhtml_insertion_fix_split_for_text_begin_ws@plt>:
   11224:	add	ip, pc, #1048576	; 0x100000
   11228:	add	ip, ip, #12288	; 0x3000
   1122c:	ldr	pc, [ip, #3788]!	; 0xecc

00011230 <mcsync_mutex_unlock@plt>:
   11230:	add	ip, pc, #1048576	; 0x100000
   11234:	add	ip, ip, #12288	; 0x3000
   11238:	ldr	pc, [ip, #3780]!	; 0xec4

0001123c <pthread_mutex_lock@plt>:
   1123c:	add	ip, pc, #1048576	; 0x100000
   11240:	add	ip, ip, #12288	; 0x3000
   11244:	ldr	pc, [ip, #3772]!	; 0xebc

00011248 <mycore_calloc@plt>:
   11248:	add	ip, pc, #1048576	; 0x100000
   1124c:	add	ip, ip, #12288	; 0x3000
   11250:	ldr	pc, [ip, #3764]!	; 0xeb4

00011254 <nanosleep@plt>:
   11254:	add	ip, pc, #1048576	; 0x100000
   11258:	add	ip, ip, #12288	; 0x3000
   1125c:	ldr	pc, [ip, #3756]!	; 0xeac

00011260 <myhtml_token_node_clone@plt>:
   11260:	add	ip, pc, #1048576	; 0x100000
   11264:	add	ip, ip, #12288	; 0x3000
   11268:	ldr	pc, [ip, #3748]!	; 0xea4

0001126c <myhtml_get_nodes_by_tag_id_in_scope@plt>:
   1126c:	add	ip, pc, #1048576	; 0x100000
   11270:	add	ip, ip, #12288	; 0x3000
   11274:	ldr	pc, [ip, #3740]!	; 0xe9c

00011278 <mchar_sync_chunk_insert_after@plt>:
   11278:	add	ip, pc, #1048576	; 0x100000
   1127c:	add	ip, ip, #12288	; 0x3000
   11280:	ldr	pc, [ip, #3732]!	; 0xe94

00011284 <ferror@plt>:
   11284:	add	ip, pc, #1048576	; 0x100000
   11288:	add	ip, ip, #12288	; 0x3000
   1128c:	ldr	pc, [ip, #3724]!	; 0xe8c

00011290 <memcpy@plt>:
   11290:	add	ip, pc, #1048576	; 0x100000
   11294:	add	ip, ip, #12288	; 0x3000
   11298:	ldr	pc, [ip, #3716]!	; 0xe84

0001129c <myencoding_name_entry_by_name@plt>:
   1129c:	add	ip, pc, #1048576	; 0x100000
   112a0:	add	ip, ip, #12288	; 0x3000
   112a4:	ldr	pc, [ip, #3708]!	; 0xe7c

000112a8 <myhtml_token_adjust_mathml_attributes@plt>:
   112a8:	add	ip, pc, #1048576	; 0x100000
   112ac:	add	ip, ip, #12288	; 0x3000
   112b0:	ldr	pc, [ip, #3700]!	; 0xe74

000112b4 <mcobject_free@plt>:
   112b4:	add	ip, pc, #1048576	; 0x100000
   112b8:	add	ip, ip, #12288	; 0x3000
   112bc:	ldr	pc, [ip, #3692]!	; 0xe6c

000112c0 <myhtml_tree_node_insert_text@plt>:
   112c0:	add	ip, pc, #1048576	; 0x100000
   112c4:	add	ip, ip, #12288	; 0x3000
   112c8:	ldr	pc, [ip, #3684]!	; 0xe64

000112cc <myhtml_tag_set_category@plt>:
   112cc:	add	ip, pc, #1048576	; 0x100000
   112d0:	add	ip, ip, #12288	; 0x3000
   112d4:	ldr	pc, [ip, #3676]!	; 0xe5c

000112d8 <mcsync_spin_destroy@plt>:
   112d8:	add	ip, pc, #1048576	; 0x100000
   112dc:	add	ip, ip, #12288	; 0x3000
   112e0:	ldr	pc, [ip, #3668]!	; 0xe54

000112e4 <myhtml_tree_template_insertion_append@plt>:
   112e4:	add	ip, pc, #1048576	; 0x100000
   112e8:	add	ip, ip, #12288	; 0x3000
   112ec:	ldr	pc, [ip, #3660]!	; 0xe4c

000112f0 <mchar_async_realloc@plt>:
   112f0:	add	ip, pc, #1048576	; 0x100000
   112f4:	add	ip, ip, #12288	; 0x3000
   112f8:	ldr	pc, [ip, #3652]!	; 0xe44

000112fc <pthread_mutex_init@plt>:
   112fc:	add	ip, pc, #1048576	; 0x100000
   11300:	add	ip, ip, #12288	; 0x3000
   11304:	ldr	pc, [ip, #3644]!	; 0xe3c

00011308 <myhtml_tokenizer_state_bogus_comment@plt>:
   11308:	add	ip, pc, #1048576	; 0x100000
   1130c:	add	ip, ip, #12288	; 0x3000
   11310:	ldr	pc, [ip, #3636]!	; 0xe34

00011314 <myhtml_tree_node_create@plt>:
   11314:	add	ip, pc, #1048576	; 0x100000
   11318:	add	ip, ip, #12288	; 0x3000
   1131c:	ldr	pc, [ip, #3628]!	; 0xe2c

00011320 <myhtml_tree_node_delete_recursive@plt>:
   11320:	add	ip, pc, #1048576	; 0x100000
   11324:	add	ip, ip, #12288	; 0x3000
   11328:	ldr	pc, [ip, #3620]!	; 0xe24

0001132c <myhtml_tag_static_get_by_id@plt>:
   1132c:	add	ip, pc, #1048576	; 0x100000
   11330:	add	ip, ip, #12288	; 0x3000
   11334:	ldr	pc, [ip, #3612]!	; 0xe1c

00011338 <myhtml_tag_add@plt>:
   11338:	add	ip, pc, #1048576	; 0x100000
   1133c:	add	ip, ip, #12288	; 0x3000
   11340:	ldr	pc, [ip, #3604]!	; 0xe14

00011344 <mcobject_create@plt>:
   11344:	add	ip, pc, #1048576	; 0x100000
   11348:	add	ip, ip, #12288	; 0x3000
   1134c:	ldr	pc, [ip, #3596]!	; 0xe0c

00011350 <myhtml_queue_add@plt>:
   11350:	add	ip, pc, #1048576	; 0x100000
   11354:	add	ip, ip, #12288	; 0x3000
   11358:	ldr	pc, [ip, #3588]!	; 0xe04

0001135c <pthread_mutex_trylock@plt>:
   1135c:	add	ip, pc, #1048576	; 0x100000
   11360:	add	ip, ip, #12288	; 0x3000
   11364:	ldr	pc, [ip, #3580]!	; 0xdfc

00011368 <myhtml_tree_is_mathml_integration_point@plt>:
   11368:	add	ip, pc, #1048576	; 0x100000
   1136c:	add	ip, ip, #12288	; 0x3000
   11370:	ldr	pc, [ip, #3572]!	; 0xdf4

00011374 <mcobject_async_free@plt>:
   11374:	add	ip, pc, #1048576	; 0x100000
   11378:	add	ip, ip, #12288	; 0x3000
   1137c:	ldr	pc, [ip, #3564]!	; 0xdec

00011380 <myhtml_insertion_mode_in_head@plt>:
   11380:	add	ip, pc, #1048576	; 0x100000
   11384:	add	ip, ip, #12288	; 0x3000
   11388:	ldr	pc, [ip, #3556]!	; 0xde4

0001138c <ftell@plt>:
   1138c:	add	ip, pc, #1048576	; 0x100000
   11390:	add	ip, ip, #12288	; 0x3000
   11394:	ldr	pc, [ip, #3548]!	; 0xddc

00011398 <mycore_incoming_buffer_add@plt>:
   11398:	add	ip, pc, #1048576	; 0x100000
   1139c:	add	ip, ip, #12288	; 0x3000
   113a0:	ldr	pc, [ip, #3540]!	; 0xdd4

000113a4 <mythread_nanosleep_sleep@plt>:
   113a4:	add	ip, pc, #1048576	; 0x100000
   113a8:	add	ip, ip, #12288	; 0x3000
   113ac:	ldr	pc, [ip, #3532]!	; 0xdcc

000113b0 <mctree_insert_before@plt>:
   113b0:	add	ip, pc, #1048576	; 0x100000
   113b4:	add	ip, ip, #12288	; 0x3000
   113b8:	ldr	pc, [ip, #3524]!	; 0xdc4

000113bc <mctree_destroy@plt>:
   113bc:	add	ip, pc, #1048576	; 0x100000
   113c0:	add	ip, ip, #12288	; 0x3000
   113c4:	ldr	pc, [ip, #3516]!	; 0xdbc

000113c8 <myhtml_tokenizer_chunk@plt>:
   113c8:	add	ip, pc, #1048576	; 0x100000
   113cc:	add	ip, ip, #12288	; 0x3000
   113d0:	ldr	pc, [ip, #3508]!	; 0xdb4

000113d4 <myhtml_tree_active_formatting_append@plt>:
   113d4:	add	ip, pc, #1048576	; 0x100000
   113d8:	add	ip, ip, #12288	; 0x3000
   113dc:	ldr	pc, [ip, #3500]!	; 0xdac

000113e0 <mythread_suspend@plt>:
   113e0:	add	ip, pc, #1048576	; 0x100000
   113e4:	add	ip, ip, #12288	; 0x3000
   113e8:	ldr	pc, [ip, #3492]!	; 0xda4

000113ec <myhtml_tokenizer_state_destroy@plt>:
   113ec:	add	ip, pc, #1048576	; 0x100000
   113f0:	add	ip, ip, #12288	; 0x3000
   113f4:	ldr	pc, [ip, #3484]!	; 0xd9c

000113f8 <mycore_incoming_buffer_find_by_position@plt>:
   113f8:	add	ip, pc, #1048576	; 0x100000
   113fc:	add	ip, ip, #12288	; 0x3000
   11400:	ldr	pc, [ip, #3476]!	; 0xd94

00011404 <mcobject_async_chunk_malloc@plt>:
   11404:	add	ip, pc, #1048576	; 0x100000
   11408:	add	ip, ip, #12288	; 0x3000
   1140c:	ldr	pc, [ip, #3468]!	; 0xd8c

00011410 <mythread_queue_list_destroy@plt>:
   11410:	add	ip, pc, #1048576	; 0x100000
   11414:	add	ip, ip, #12288	; 0x3000
   11418:	ldr	pc, [ip, #3460]!	; 0xd84

0001141c <myhtml_tree_open_elements_pop_until_by_node@plt>:
   1141c:	add	ip, pc, #1048576	; 0x100000
   11420:	add	ip, ip, #12288	; 0x3000
   11424:	ldr	pc, [ip, #3452]!	; 0xd7c

00011428 <myhtml_tokenizer_begin@plt>:
   11428:	add	ip, pc, #1048576	; 0x100000
   1142c:	add	ip, ip, #12288	; 0x3000
   11430:	ldr	pc, [ip, #3444]!	; 0xd74

00011434 <mchar_async_create@plt>:
   11434:	add	ip, pc, #1048576	; 0x100000
   11438:	add	ip, ip, #12288	; 0x3000
   1143c:	ldr	pc, [ip, #3436]!	; 0xd6c

00011440 <mycore_string_copy@plt>:
   11440:	add	ip, pc, #1048576	; 0x100000
   11444:	add	ip, ip, #12288	; 0x3000
   11448:	ldr	pc, [ip, #3428]!	; 0xd64

0001144c <mythread_queue_list_entry_push@plt>:
   1144c:	add	ip, pc, #1048576	; 0x100000
   11450:	add	ip, ip, #12288	; 0x3000
   11454:	ldr	pc, [ip, #3420]!	; 0xd5c

00011458 <mythread_queue_get_current_node@plt>:
   11458:	add	ip, pc, #1048576	; 0x100000
   1145c:	add	ip, ip, #12288	; 0x3000
   11460:	ldr	pc, [ip, #3412]!	; 0xd54

00011464 <mcobject_async_chunk_up@plt>:
   11464:	add	ip, pc, #1048576	; 0x100000
   11468:	add	ip, ip, #12288	; 0x3000
   1146c:	ldr	pc, [ip, #3404]!	; 0xd4c

00011470 <myhtml_tree_open_elements_pop@plt>:
   11470:	add	ip, pc, #1048576	; 0x100000
   11474:	add	ip, ip, #12288	; 0x3000
   11478:	ldr	pc, [ip, #3396]!	; 0xd44

0001147c <mcsync_destroy@plt>:
   1147c:	add	ip, pc, #1048576	; 0x100000
   11480:	add	ip, ip, #12288	; 0x3000
   11484:	ldr	pc, [ip, #3388]!	; 0xd3c

00011488 <myencoding_result_clean@plt>:
   11488:	add	ip, pc, #1048576	; 0x100000
   1148c:	add	ip, ip, #12288	; 0x3000
   11490:	ldr	pc, [ip, #3380]!	; 0xd34

00011494 <myhtml_string_append_with_preprocessing@plt>:
   11494:	add	ip, pc, #1048576	; 0x100000
   11498:	add	ip, ip, #12288	; 0x3000
   1149c:	ldr	pc, [ip, #3372]!	; 0xd2c

000114a0 <myhtml_token_adjust_svg_attributes@plt>:
   114a0:	add	ip, pc, #1048576	; 0x100000
   114a4:	add	ip, ip, #12288	; 0x3000
   114a8:	ldr	pc, [ip, #3364]!	; 0xd24

000114ac <realloc@plt>:
   114ac:	add	ip, pc, #1048576	; 0x100000
   114b0:	add	ip, ip, #12288	; 0x3000
   114b4:	ldr	pc, [ip, #3356]!	; 0xd1c

000114b8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@plt>:
   114b8:	add	ip, pc, #1048576	; 0x100000
   114bc:	add	ip, ip, #12288	; 0x3000
   114c0:	ldr	pc, [ip, #3348]!	; 0xd14

000114c4 <myhtml_tree_is_html_integration_point@plt>:
   114c4:	add	ip, pc, #1048576	; 0x100000
   114c8:	add	ip, ip, #12288	; 0x3000
   114cc:	ldr	pc, [ip, #3340]!	; 0xd0c

000114d0 <myhtml_namespace_name_entry_by_name@plt>:
   114d0:	add	ip, pc, #1048576	; 0x100000
   114d4:	add	ip, ip, #12288	; 0x3000
   114d8:	ldr	pc, [ip, #3332]!	; 0xd04

000114dc <myencoding_detect_bom@plt>:
   114dc:	add	ip, pc, #1048576	; 0x100000
   114e0:	add	ip, ip, #12288	; 0x3000
   114e4:	ldr	pc, [ip, #3324]!	; 0xcfc

000114e8 <myhtml_tree_list_append@plt>:
   114e8:	add	ip, pc, #1048576	; 0x100000
   114ec:	add	ip, ip, #12288	; 0x3000
   114f0:	ldr	pc, [ip, #3316]!	; 0xcf4

000114f4 <myhtml_tokenizer_calc_current_namespace@plt>:
   114f4:	add	ip, pc, #1048576	; 0x100000
   114f8:	add	ip, ip, #12288	; 0x3000
   114fc:	ldr	pc, [ip, #3308]!	; 0xcec

00011500 <myhtml_tree_open_elements_remove@plt>:
   11500:	add	ip, pc, #1048576	; 0x100000
   11504:	add	ip, ip, #12288	; 0x3000
   11508:	ldr	pc, [ip, #3300]!	; 0xce4

0001150c <mctree_insert_child@plt>:
   1150c:	add	ip, pc, #1048576	; 0x100000
   11510:	add	ip, ip, #12288	; 0x3000
   11514:	ldr	pc, [ip, #3292]!	; 0xcdc

00011518 <mcsimple_clean@plt>:
   11518:	add	ip, pc, #1048576	; 0x100000
   1151c:	add	ip, ip, #12288	; 0x3000
   11520:	ldr	pc, [ip, #3284]!	; 0xcd4

00011524 <myhtml_tree_node_insert_comment@plt>:
   11524:	add	ip, pc, #1048576	; 0x100000
   11528:	add	ip, ip, #12288	; 0x3000
   1152c:	ldr	pc, [ip, #3276]!	; 0xccc

00011530 <myhtml_tokenizer_end@plt>:
   11530:	add	ip, pc, #1048576	; 0x100000
   11534:	add	ip, ip, #12288	; 0x3000
   11538:	ldr	pc, [ip, #3268]!	; 0xcc4

0001153c <mycore_utils_avl_tree_list_all_nodes@plt>:
   1153c:	add	ip, pc, #1048576	; 0x100000
   11540:	add	ip, ip, #12288	; 0x3000
   11544:	ldr	pc, [ip, #3260]!	; 0xcbc

00011548 <mchar_async_node_add@plt>:
   11548:	add	ip, pc, #1048576	; 0x100000
   1154c:	add	ip, ip, #12288	; 0x3000
   11550:	ldr	pc, [ip, #3252]!	; 0xcb4

00011554 <mycore_strncasecmp@plt>:
   11554:	add	ip, pc, #1048576	; 0x100000
   11558:	add	ip, ip, #12288	; 0x3000
   1155c:	ldr	pc, [ip, #3244]!	; 0xcac

00011560 <myhtml_tokenizer_post@plt>:
   11560:	add	ip, pc, #1048576	; 0x100000
   11564:	add	ip, ip, #12288	; 0x3000
   11568:	ldr	pc, [ip, #3236]!	; 0xca4

0001156c <myhtml_tree_list_insert_by_index@plt>:
   1156c:	add	ip, pc, #1048576	; 0x100000
   11570:	add	ip, ip, #12288	; 0x3000
   11574:	ldr	pc, [ip, #3228]!	; 0xc9c

00011578 <mcsimple_create@plt>:
   11578:	add	ip, pc, #1048576	; 0x100000
   1157c:	add	ip, ip, #12288	; 0x3000
   11580:	ldr	pc, [ip, #3220]!	; 0xc94

00011584 <mythread_queue_destroy@plt>:
   11584:	add	ip, pc, #1048576	; 0x100000
   11588:	add	ip, ip, #12288	; 0x3000
   1158c:	ldr	pc, [ip, #3212]!	; 0xc8c

00011590 <mycore_string_raw_copy@plt>:
   11590:	add	ip, pc, #1048576	; 0x100000
   11594:	add	ip, ip, #12288	; 0x3000
   11598:	ldr	pc, [ip, #3204]!	; 0xc84

0001159c <mycore_string_stay_only_whitespace@plt>:
   1159c:	add	ip, pc, #1048576	; 0x100000
   115a0:	add	ip, ip, #12288	; 0x3000
   115a4:	ldr	pc, [ip, #3196]!	; 0xc7c

000115a8 <mctree_clean@plt>:
   115a8:	add	ip, pc, #1048576	; 0x100000
   115ac:	add	ip, ip, #12288	; 0x3000
   115b0:	ldr	pc, [ip, #3188]!	; 0xc74

000115b4 <myhtml_collection_create@plt>:
   115b4:	add	ip, pc, #1048576	; 0x100000
   115b8:	add	ip, ip, #12288	; 0x3000
   115bc:	ldr	pc, [ip, #3180]!	; 0xc6c

000115c0 <myhtml_token_set_replacement_character_for_null_token@plt>:
   115c0:	add	ip, pc, #1048576	; 0x100000
   115c4:	add	ip, ip, #12288	; 0x3000
   115c8:	ldr	pc, [ip, #3172]!	; 0xc64

000115cc <fwrite@plt>:
   115cc:	add	ip, pc, #1048576	; 0x100000
   115d0:	add	ip, ip, #12288	; 0x3000
   115d4:	ldr	pc, [ip, #3164]!	; 0xc5c

000115d8 <myencoding_prescan_stream_to_determine_encoding_skip_other@plt>:
   115d8:	add	ip, pc, #1048576	; 0x100000
   115dc:	add	ip, ip, #12288	; 0x3000
   115e0:	ldr	pc, [ip, #3156]!	; 0xc54

000115e4 <myhtml_tree_node_insert_by_mode@plt>:
   115e4:	add	ip, pc, #1048576	; 0x100000
   115e8:	add	ip, ip, #12288	; 0x3000
   115ec:	ldr	pc, [ip, #3148]!	; 0xc4c

000115f0 <myhtml_tree_node_insert_after@plt>:
   115f0:	add	ip, pc, #1048576	; 0x100000
   115f4:	add	ip, ip, #12288	; 0x3000
   115f8:	ldr	pc, [ip, #3140]!	; 0xc44

000115fc <myhtml_data_process_state_end@plt>:
   115fc:	add	ip, pc, #1048576	; 0x100000
   11600:	add	ip, ip, #12288	; 0x3000
   11604:	ldr	pc, [ip, #3132]!	; 0xc3c

00011608 <mycore_string_append_with_replacement_null_characters@plt>:
   11608:	add	ip, pc, #1048576	; 0x100000
   1160c:	add	ip, ip, #12288	; 0x3000
   11610:	ldr	pc, [ip, #3124]!	; 0xc34

00011614 <myhtml_tree_clear_stack_back_table_body_context@plt>:
   11614:	add	ip, pc, #1048576	; 0x100000
   11618:	add	ip, ip, #12288	; 0x3000
   1161c:	ldr	pc, [ip, #3116]!	; 0xc2c

00011620 <mcsimple_destroy@plt>:
   11620:	add	ip, pc, #1048576	; 0x100000
   11624:	add	ip, ip, #12288	; 0x3000
   11628:	ldr	pc, [ip, #3108]!	; 0xc24

0001162c <myhtml_token_doctype_check_html_4_01@plt>:
   1162c:	add	ip, pc, #1048576	; 0x100000
   11630:	add	ip, ip, #12288	; 0x3000
   11634:	ldr	pc, [ip, #3100]!	; 0xc1c

00011638 <__mtree_insert_to_start@plt>:
   11638:	add	ip, pc, #1048576	; 0x100000
   1163c:	add	ip, ip, #12288	; 0x3000
   11640:	ldr	pc, [ip, #3092]!	; 0xc14

00011644 <fread@plt>:
   11644:	add	ip, pc, #1048576	; 0x100000
   11648:	add	ip, ip, #12288	; 0x3000
   1164c:	ldr	pc, [ip, #3084]!	; 0xc0c

00011650 <pthread_create@plt>:
   11650:	add	ip, pc, #1048576	; 0x100000
   11654:	add	ip, ip, #12288	; 0x3000
   11658:	ldr	pc, [ip, #3076]!	; 0xc04

0001165c <myencoding_prescan_stream_to_determine_encoding_check_meta@plt>:
   1165c:	add	ip, pc, #1048576	; 0x100000
   11660:	add	ip, ip, #12288	; 0x3000
   11664:	ldr	pc, [ip, #3068]!	; 0xbfc

00011668 <myhtml_tree_node_insert_before@plt>:
   11668:	add	ip, pc, #1048576	; 0x100000
   1166c:	add	ip, ip, #12288	; 0x3000
   11670:	ldr	pc, [ip, #3060]!	; 0xbf4

00011674 <myhtml_parser_token_data_to_string_charef@plt>:
   11674:	add	ip, pc, #1048576	; 0x100000
   11678:	add	ip, ip, #12288	; 0x3000
   1167c:	ldr	pc, [ip, #3052]!	; 0xbec

00011680 <mythread_thread_attr_clean@plt>:
   11680:	add	ip, pc, #1048576	; 0x100000
   11684:	add	ip, ip, #12288	; 0x3000
   11688:	ldr	pc, [ip, #3044]!	; 0xbe4

0001168c <myhtml_tree_clear_stack_back_table_row_context@plt>:
   1168c:	add	ip, pc, #1048576	; 0x100000
   11690:	add	ip, ip, #12288	; 0x3000
   11694:	ldr	pc, [ip, #3036]!	; 0xbdc

00011698 <myhtml_tokenizer_chunk_process@plt>:
   11698:	add	ip, pc, #1048576	; 0x100000
   1169c:	add	ip, ip, #12288	; 0x3000
   116a0:	ldr	pc, [ip, #3028]!	; 0xbd4

000116a4 <myhtml_stream_create@plt>:
   116a4:	add	ip, pc, #1048576	; 0x100000
   116a8:	add	ip, ip, #12288	; 0x3000
   116ac:	ldr	pc, [ip, #3020]!	; 0xbcc

000116b0 <myhtml_tree_tags_close_p@plt>:
   116b0:	add	ip, pc, #1048576	; 0x100000
   116b4:	add	ip, ip, #12288	; 0x3000
   116b8:	ldr	pc, [ip, #3012]!	; 0xbc4

000116bc <mcsimple_init@plt>:
   116bc:	add	ip, pc, #1048576	; 0x100000
   116c0:	add	ip, ip, #12288	; 0x3000
   116c4:	ldr	pc, [ip, #3004]!	; 0xbbc

000116c8 <myencoding_string_append@plt>:
   116c8:	add	ip, pc, #1048576	; 0x100000
   116cc:	add	ip, ip, #12288	; 0x3000
   116d0:	ldr	pc, [ip, #2996]!	; 0xbb4

000116d4 <myhtml_stream_buffer_clean@plt>:
   116d4:	add	ip, pc, #1048576	; 0x100000
   116d8:	add	ip, ip, #12288	; 0x3000
   116dc:	ldr	pc, [ip, #2988]!	; 0xbac

000116e0 <mycore_utils_avl_tree_rotate_for_delete@plt>:
   116e0:	add	ip, pc, #1048576	; 0x100000
   116e4:	add	ip, ip, #12288	; 0x3000
   116e8:	ldr	pc, [ip, #2980]!	; 0xba4

000116ec <myhtml_token_merged_two_token_string@plt>:
   116ec:	add	ip, pc, #1048576	; 0x100000
   116f0:	add	ip, ip, #12288	; 0x3000
   116f4:	ldr	pc, [ip, #2972]!	; 0xb9c

000116f8 <myhtml_attribute_value@plt>:
   116f8:	add	ip, pc, #1048576	; 0x100000
   116fc:	add	ip, ip, #12288	; 0x3000
   11700:	ldr	pc, [ip, #2964]!	; 0xb94

00011704 <myhtml_token_strict_doctype_by_token@plt>:
   11704:	add	ip, pc, #1048576	; 0x100000
   11708:	add	ip, ip, #12288	; 0x3000
   1170c:	ldr	pc, [ip, #2956]!	; 0xb8c

00011710 <mchar_async_init@plt>:
   11710:	add	ip, pc, #1048576	; 0x100000
   11714:	add	ip, ip, #12288	; 0x3000
   11718:	ldr	pc, [ip, #2948]!	; 0xb84

0001171c <mycore_string_crop_whitespace_from_begin@plt>:
   1171c:	add	ip, pc, #1048576	; 0x100000
   11720:	add	ip, ip, #12288	; 0x3000
   11724:	ldr	pc, [ip, #2940]!	; 0xb7c

00011728 <mythread_resume@plt>:
   11728:	add	ip, pc, #1048576	; 0x100000
   1172c:	add	ip, ip, #12288	; 0x3000
   11730:	ldr	pc, [ip, #2932]!	; 0xb74

00011734 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@plt>:
   11734:	add	ip, pc, #1048576	; 0x100000
   11738:	add	ip, ip, #12288	; 0x3000
   1173c:	ldr	pc, [ip, #2924]!	; 0xb6c

00011740 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>:
   11740:	add	ip, pc, #1048576	; 0x100000
   11744:	add	ip, ip, #12288	; 0x3000
   11748:	ldr	pc, [ip, #2916]!	; 0xb64

0001174c <myhtml_create_stream_and_batch@plt>:
   1174c:	add	ip, pc, #1048576	; 0x100000
   11750:	add	ip, ip, #12288	; 0x3000
   11754:	ldr	pc, [ip, #2908]!	; 0xb5c

00011758 <myhtml_data_process_entry_clean@plt>:
   11758:	add	ip, pc, #1048576	; 0x100000
   1175c:	add	ip, ip, #12288	; 0x3000
   11760:	ldr	pc, [ip, #2900]!	; 0xb54

00011764 <mcsync_spin_init@plt>:
   11764:	add	ip, pc, #1048576	; 0x100000
   11768:	add	ip, ip, #12288	; 0x3000
   1176c:	ldr	pc, [ip, #2892]!	; 0xb4c

00011770 <malloc@plt>:
   11770:	add	ip, pc, #1048576	; 0x100000
   11774:	add	ip, ip, #12288	; 0x3000
   11778:	ldr	pc, [ip, #2884]!	; 0xb44

0001177c <mythread_check_status@plt>:
   1177c:	add	ip, pc, #1048576	; 0x100000
   11780:	add	ip, ip, #12288	; 0x3000
   11784:	ldr	pc, [ip, #2876]!	; 0xb3c

00011788 <myhtml_token_doctype_check_html_4_0@plt>:
   11788:	add	ip, pc, #1048576	; 0x100000
   1178c:	add	ip, ip, #12288	; 0x3000
   11790:	ldr	pc, [ip, #2868]!	; 0xb34

00011794 <mycore_strcasecmp@plt>:
   11794:	add	ip, pc, #1048576	; 0x100000
   11798:	add	ip, ip, #12288	; 0x3000
   1179c:	ldr	pc, [ip, #2860]!	; 0xb2c

000117a0 <mythread_queue_node_malloc_round@plt>:
   117a0:	add	ip, pc, #1048576	; 0x100000
   117a4:	add	ip, ip, #12288	; 0x3000
   117a8:	ldr	pc, [ip, #2852]!	; 0xb24

000117ac <myhtml_tree_active_formatting_reconstruction@plt>:
   117ac:	add	ip, pc, #1048576	; 0x100000
   117b0:	add	ip, ip, #12288	; 0x3000
   117b4:	ldr	pc, [ip, #2844]!	; 0xb1c

000117b8 <myhtml_token_set_done@plt>:
   117b8:	add	ip, pc, #1048576	; 0x100000
   117bc:	add	ip, ip, #12288	; 0x3000
   117c0:	ldr	pc, [ip, #2836]!	; 0xb14

000117c4 <mcsync_spin_create@plt>:
   117c4:	add	ip, pc, #1048576	; 0x100000
   117c8:	add	ip, ip, #12288	; 0x3000
   117cc:	ldr	pc, [ip, #2828]!	; 0xb0c

000117d0 <mythread_thread_join@plt>:
   117d0:	add	ip, pc, #1048576	; 0x100000
   117d4:	add	ip, ip, #12288	; 0x3000
   117d8:	ldr	pc, [ip, #2820]!	; 0xb04

000117dc <myhtml_token_attr_remove@plt>:
   117dc:	add	ip, pc, #1048576	; 0x100000
   117e0:	add	ip, ip, #12288	; 0x3000
   117e4:	ldr	pc, [ip, #2812]!	; 0xafc

000117e8 <mythread_quit@plt>:
   117e8:	add	ip, pc, #1048576	; 0x100000
   117ec:	add	ip, ip, #12288	; 0x3000
   117f0:	ldr	pc, [ip, #2804]!	; 0xaf4

000117f4 <myhtml_batch_create@plt>:
   117f4:	add	ip, pc, #1048576	; 0x100000
   117f8:	add	ip, ip, #12288	; 0x3000
   117fc:	ldr	pc, [ip, #2796]!	; 0xaec

00011800 <mcsync_spin_lock@plt>:
   11800:	add	ip, pc, #1048576	; 0x100000
   11804:	add	ip, ip, #12288	; 0x3000
   11808:	ldr	pc, [ip, #2788]!	; 0xae4

0001180c <myhtml_token_clean@plt>:
   1180c:	add	ip, pc, #1048576	; 0x100000
   11810:	add	ip, ip, #12288	; 0x3000
   11814:	ldr	pc, [ip, #2780]!	; 0xadc

00011818 <mythread_queue_list_get_count@plt>:
   11818:	add	ip, pc, #1048576	; 0x100000
   1181c:	add	ip, ip, #12288	; 0x3000
   11820:	ldr	pc, [ip, #2772]!	; 0xad4

00011824 <__gmon_start__@plt>:
   11824:	add	ip, pc, #1048576	; 0x100000
   11828:	add	ip, ip, #12288	; 0x3000
   1182c:	ldr	pc, [ip, #2764]!	; 0xacc

00011830 <myhtml_tokenizer_pause@plt>:
   11830:	add	ip, pc, #1048576	; 0x100000
   11834:	add	ip, ip, #12288	; 0x3000
   11838:	ldr	pc, [ip, #2756]!	; 0xac4

0001183c <myhtml_tokenizer_set_first_settings@plt>:
   1183c:	add	ip, pc, #1048576	; 0x100000
   11840:	add	ip, ip, #12288	; 0x3000
   11844:	ldr	pc, [ip, #2748]!	; 0xabc

00011848 <mycore_string_init@plt>:
   11848:	add	ip, pc, #1048576	; 0x100000
   1184c:	add	ip, ip, #12288	; 0x3000
   11850:	ldr	pc, [ip, #2740]!	; 0xab4

00011854 <myhtml_tree_current_node@plt>:
   11854:	add	ip, pc, #1048576	; 0x100000
   11858:	add	ip, ip, #12288	; 0x3000
   1185c:	ldr	pc, [ip, #2732]!	; 0xaac

00011860 <mythread_mutex_close@plt>:
   11860:	add	ip, pc, #1048576	; 0x100000
   11864:	add	ip, ip, #12288	; 0x3000
   11868:	ldr	pc, [ip, #2724]!	; 0xaa4

0001186c <myhtml_insertion_mode_in_body@plt>:
   1186c:	add	ip, pc, #1048576	; 0x100000
   11870:	add	ip, ip, #12288	; 0x3000
   11874:	ldr	pc, [ip, #2716]!	; 0xa9c

00011878 <myhtml_tree_active_formatting_between_last_marker@plt>:
   11878:	add	ip, pc, #1048576	; 0x100000
   1187c:	add	ip, ip, #12288	; 0x3000
   11880:	ldr	pc, [ip, #2708]!	; 0xa94

00011884 <mctree_create@plt>:
   11884:	add	ip, pc, #1048576	; 0x100000
   11888:	add	ip, ip, #12288	; 0x3000
   1188c:	ldr	pc, [ip, #2700]!	; 0xa8c

00011890 <bcmp@plt>:
   11890:	add	ip, pc, #1048576	; 0x100000
   11894:	add	ip, ip, #12288	; 0x3000
   11898:	ldr	pc, [ip, #2692]!	; 0xa84

0001189c <myhtml_token_doctype_check_xhtml_1_0@plt>:
   1189c:	add	ip, pc, #1048576	; 0x100000
   118a0:	add	ip, ip, #12288	; 0x3000
   118a4:	ldr	pc, [ip, #2684]!	; 0xa7c

000118a8 <strlen@plt>:
   118a8:	add	ip, pc, #1048576	; 0x100000
   118ac:	add	ip, ip, #12288	; 0x3000
   118b0:	ldr	pc, [ip, #2676]!	; 0xa74

000118b4 <myhtml_token_node_wait_for_done@plt>:
   118b4:	add	ip, pc, #1048576	; 0x100000
   118b8:	add	ip, ip, #12288	; 0x3000
   118bc:	ldr	pc, [ip, #2668]!	; 0xa6c

000118c0 <mycore_string_append_lowercase@plt>:
   118c0:	add	ip, pc, #1048576	; 0x100000
   118c4:	add	ip, ip, #12288	; 0x3000
   118c8:	ldr	pc, [ip, #2660]!	; 0xa64

000118cc <myhtml_token_node_attr_copy_with_check@plt>:
   118cc:	add	ip, pc, #1048576	; 0x100000
   118d0:	add	ip, ip, #12288	; 0x3000
   118d4:	ldr	pc, [ip, #2652]!	; 0xa5c

000118d8 <mythread_queue_init@plt>:
   118d8:	add	ip, pc, #1048576	; 0x100000
   118dc:	add	ip, ip, #12288	; 0x3000
   118e0:	ldr	pc, [ip, #2644]!	; 0xa54

000118e4 <myhtml_tree_node_add_child@plt>:
   118e4:	add	ip, pc, #1048576	; 0x100000
   118e8:	add	ip, ip, #12288	; 0x3000
   118ec:	ldr	pc, [ip, #2636]!	; 0xa4c

000118f0 <myhtml_tree_clean@plt>:
   118f0:	add	ip, pc, #1048576	; 0x100000
   118f4:	add	ip, ip, #12288	; 0x3000
   118f8:	ldr	pc, [ip, #2628]!	; 0xa44

000118fc <myhtml_tree_generate_implied_end_tags@plt>:
   118fc:	add	ip, pc, #1048576	; 0x100000
   11900:	add	ip, ip, #12288	; 0x3000
   11904:	ldr	pc, [ip, #2620]!	; 0xa3c

00011908 <mchar_async_node_clean@plt>:
   11908:	add	ip, pc, #1048576	; 0x100000
   1190c:	add	ip, ip, #12288	; 0x3000
   11910:	ldr	pc, [ip, #2612]!	; 0xa34

00011914 <myhtml_tree_list_destroy@plt>:
   11914:	add	ip, pc, #1048576	; 0x100000
   11918:	add	ip, ip, #12288	; 0x3000
   1191c:	ldr	pc, [ip, #2604]!	; 0xa2c

00011920 <myhtml_serialization_node_callback@plt>:
   11920:	add	ip, pc, #1048576	; 0x100000
   11924:	add	ip, ip, #12288	; 0x3000
   11928:	ldr	pc, [ip, #2596]!	; 0xa24

0001192c <myencoding_detect_by_trigram@plt>:
   1192c:	add	ip, pc, #1048576	; 0x100000
   11930:	add	ip, ip, #12288	; 0x3000
   11934:	ldr	pc, [ip, #2588]!	; 0xa1c

00011938 <mchar_async_free@plt>:
   11938:	add	ip, pc, #1048576	; 0x100000
   1193c:	add	ip, ip, #12288	; 0x3000
   11940:	ldr	pc, [ip, #2580]!	; 0xa14

00011944 <myhtml_tree_reset_insertion_mode_appropriately@plt>:
   11944:	add	ip, pc, #1048576	; 0x100000
   11948:	add	ip, ip, #12288	; 0x3000
   1194c:	ldr	pc, [ip, #2572]!	; 0xa0c

00011950 <mcsimple_malloc@plt>:
   11950:	add	ip, pc, #1048576	; 0x100000
   11954:	add	ip, ip, #12288	; 0x3000
   11958:	ldr	pc, [ip, #2564]!	; 0xa04

0001195c <mctree_search_lowercase@plt>:
   1195c:	add	ip, pc, #1048576	; 0x100000
   11960:	add	ip, ip, #12288	; 0x3000
   11964:	ldr	pc, [ip, #2556]!	; 0x9fc

00011968 <myhtml_data_process@plt>:
   11968:	add	ip, pc, #1048576	; 0x100000
   1196c:	add	ip, ip, #12288	; 0x3000
   11970:	ldr	pc, [ip, #2548]!	; 0x9f4

00011974 <myhtml_token_attr_copy@plt>:
   11974:	add	ip, pc, #1048576	; 0x100000
   11978:	add	ip, ip, #12288	; 0x3000
   1197c:	ldr	pc, [ip, #2540]!	; 0x9ec

00011980 <myhtml_tree_node_insert_by_node@plt>:
   11980:	add	ip, pc, #1048576	; 0x100000
   11984:	add	ip, ip, #12288	; 0x3000
   11988:	ldr	pc, [ip, #2532]!	; 0x9e4

0001198c <mcobject_init@plt>:
   1198c:	add	ip, pc, #1048576	; 0x100000
   11990:	add	ip, ip, #12288	; 0x3000
   11994:	ldr	pc, [ip, #2524]!	; 0x9dc

00011998 <myhtml_token_destroy@plt>:
   11998:	add	ip, pc, #1048576	; 0x100000
   1199c:	add	ip, ip, #12288	; 0x3000
   119a0:	ldr	pc, [ip, #2516]!	; 0x9d4

000119a4 <pthread_attr_init@plt>:
   119a4:	add	ip, pc, #1048576	; 0x100000
   119a8:	add	ip, ip, #12288	; 0x3000
   119ac:	ldr	pc, [ip, #2508]!	; 0x9cc

000119b0 <myhtml_charef_find_by_pos@plt>:
   119b0:	add	ip, pc, #1048576	; 0x100000
   119b4:	add	ip, ip, #12288	; 0x3000
   119b8:	ldr	pc, [ip, #2500]!	; 0x9c4

000119bc <myhtml_insertion_fix_for_null_char_drop_all@plt>:
   119bc:	add	ip, pc, #1048576	; 0x100000
   119c0:	add	ip, ip, #12288	; 0x3000
   119c4:	ldr	pc, [ip, #2492]!	; 0x9bc

000119c8 <mythread_queue_list_create@plt>:
   119c8:	add	ip, pc, #1048576	; 0x100000
   119cc:	add	ip, ip, #12288	; 0x3000
   119d0:	ldr	pc, [ip, #2484]!	; 0x9b4

000119d4 <myhtml_token_attr_delete_all@plt>:
   119d4:	add	ip, pc, #1048576	; 0x100000
   119d8:	add	ip, ip, #12288	; 0x3000
   119dc:	ldr	pc, [ip, #2476]!	; 0x9ac

000119e0 <myhtml_token_node_attr_append_with_convert_encoding@plt>:
   119e0:	add	ip, pc, #1048576	; 0x100000
   119e4:	add	ip, ip, #12288	; 0x3000
   119e8:	ldr	pc, [ip, #2468]!	; 0x9a4

000119ec <myhtml_tree_open_elements_find_by_tag_idx@plt>:
   119ec:	add	ip, pc, #1048576	; 0x100000
   119f0:	add	ip, ip, #12288	; 0x3000
   119f4:	ldr	pc, [ip, #2460]!	; 0x99c

000119f8 <myhtml_stream_buffer_entry_init@plt>:
   119f8:	add	ip, pc, #1048576	; 0x100000
   119fc:	add	ip, ip, #12288	; 0x3000
   11a00:	ldr	pc, [ip, #2452]!	; 0x994

00011a04 <myhtml_tree_active_formatting_append_with_check@plt>:
   11a04:	add	ip, pc, #1048576	; 0x100000
   11a08:	add	ip, ip, #12288	; 0x3000
   11a0c:	ldr	pc, [ip, #2444]!	; 0x98c

00011a10 <myencoding_get_function_by_id@plt>:
   11a10:	add	ip, pc, #1048576	; 0x100000
   11a14:	add	ip, ip, #12288	; 0x3000
   11a18:	ldr	pc, [ip, #2436]!	; 0x984

00011a1c <myencoding_extracting_character_encoding_from_charset_with_found@plt>:
   11a1c:	add	ip, pc, #1048576	; 0x100000
   11a20:	add	ip, ip, #12288	; 0x3000
   11a24:	ldr	pc, [ip, #2428]!	; 0x97c

00011a28 <mcsync_lock@plt>:
   11a28:	add	ip, pc, #1048576	; 0x100000
   11a2c:	add	ip, ip, #12288	; 0x3000
   11a30:	ldr	pc, [ip, #2420]!	; 0x974

00011a34 <mcsync_init@plt>:
   11a34:	add	ip, pc, #1048576	; 0x100000
   11a38:	add	ip, ip, #12288	; 0x3000
   11a3c:	ldr	pc, [ip, #2412]!	; 0x96c

00011a40 <myhtml_tree_active_formatting_is_marker@plt>:
   11a40:	add	ip, pc, #1048576	; 0x100000
   11a44:	add	ip, ip, #12288	; 0x3000
   11a48:	ldr	pc, [ip, #2404]!	; 0x964

00011a4c <mcobject_async_node_clean@plt>:
   11a4c:	add	ip, pc, #1048576	; 0x100000
   11a50:	add	ip, ip, #12288	; 0x3000
   11a54:	ldr	pc, [ip, #2396]!	; 0x95c

00011a58 <mchar_async_cache_destroy@plt>:
   11a58:	add	ip, pc, #1048576	; 0x100000
   11a5c:	add	ip, ip, #12288	; 0x3000
   11a60:	ldr	pc, [ip, #2388]!	; 0x954

00011a64 <myhtml_tree_adoption_agency_algorithm@plt>:
   11a64:	add	ip, pc, #1048576	; 0x100000
   11a68:	add	ip, ip, #12288	; 0x3000
   11a6c:	ldr	pc, [ip, #2380]!	; 0x94c

00011a70 <myhtml_tree_active_formatting_remove@plt>:
   11a70:	add	ip, pc, #1048576	; 0x100000
   11a74:	add	ip, ip, #12288	; 0x3000
   11a78:	ldr	pc, [ip, #2372]!	; 0x944

00011a7c <memset@plt>:
   11a7c:	add	ip, pc, #1048576	; 0x100000
   11a80:	add	ip, ip, #12288	; 0x3000
   11a84:	ldr	pc, [ip, #2364]!	; 0x93c

00011a88 <myhread_entry_create@plt>:
   11a88:	add	ip, pc, #1048576	; 0x100000
   11a8c:	add	ip, ip, #12288	; 0x3000
   11a90:	ldr	pc, [ip, #2356]!	; 0x934

00011a94 <mcsync_mutex_create@plt>:
   11a94:	add	ip, pc, #1048576	; 0x100000
   11a98:	add	ip, ip, #12288	; 0x3000
   11a9c:	ldr	pc, [ip, #2348]!	; 0x92c

00011aa0 <mycore_string_append@plt>:
   11aa0:	add	ip, pc, #1048576	; 0x100000
   11aa4:	add	ip, ip, #12288	; 0x3000
   11aa8:	ldr	pc, [ip, #2340]!	; 0x924

00011aac <mcobject_async_chunk_malloc_without_lock@plt>:
   11aac:	add	ip, pc, #1048576	; 0x100000
   11ab0:	add	ip, ip, #12288	; 0x3000
   11ab4:	ldr	pc, [ip, #2332]!	; 0x91c

00011ab8 <strncpy@plt>:
   11ab8:	add	ip, pc, #1048576	; 0x100000
   11abc:	add	ip, ip, #12288	; 0x3000
   11ac0:	ldr	pc, [ip, #2324]!	; 0x914

00011ac4 <pthread_cancel@plt>:
   11ac4:	add	ip, pc, #1048576	; 0x100000
   11ac8:	add	ip, ip, #12288	; 0x3000
   11acc:	ldr	pc, [ip, #2316]!	; 0x90c

00011ad0 <myhtml_token_attr_create@plt>:
   11ad0:	add	ip, pc, #1048576	; 0x100000
   11ad4:	add	ip, ip, #12288	; 0x3000
   11ad8:	ldr	pc, [ip, #2308]!	; 0x904

00011adc <mchar_async_malloc@plt>:
   11adc:	add	ip, pc, #1048576	; 0x100000
   11ae0:	add	ip, ip, #12288	; 0x3000
   11ae4:	ldr	pc, [ip, #2300]!	; 0x8fc

00011ae8 <myhtml_tag_static_search@plt>:
   11ae8:	add	ip, pc, #1048576	; 0x100000
   11aec:	add	ip, ip, #12288	; 0x3000
   11af0:	ldr	pc, [ip, #2292]!	; 0x8f4

00011af4 <myhtml_data_process_end@plt>:
   11af4:	add	ip, pc, #1048576	; 0x100000
   11af8:	add	ip, ip, #12288	; 0x3000
   11afc:	ldr	pc, [ip, #2284]!	; 0x8ec

00011b00 <myhtml_stream_buffer_add_entry@plt>:
   11b00:	add	ip, pc, #1048576	; 0x100000
   11b04:	add	ip, ip, #12288	; 0x3000
   11b08:	ldr	pc, [ip, #2276]!	; 0x8e4

00011b0c <myhtml_tree_open_elements_pop_until@plt>:
   11b0c:	add	ip, pc, #1048576	; 0x100000
   11b10:	add	ip, ip, #12288	; 0x3000
   11b14:	ldr	pc, [ip, #2268]!	; 0x8dc

00011b18 <mctree_insert@plt>:
   11b18:	add	ip, pc, #1048576	; 0x100000
   11b1c:	add	ip, ip, #12288	; 0x3000
   11b20:	ldr	pc, [ip, #2260]!	; 0x8d4

00011b24 <mycore_string_realloc@plt>:
   11b24:	add	ip, pc, #1048576	; 0x100000
   11b28:	add	ip, ip, #12288	; 0x3000
   11b2c:	ldr	pc, [ip, #2252]!	; 0x8cc

00011b30 <myhtml_tree_node_insert@plt>:
   11b30:	add	ip, pc, #1048576	; 0x100000
   11b34:	add	ip, ip, #12288	; 0x3000
   11b38:	ldr	pc, [ip, #2244]!	; 0x8c4

00011b3c <mythread_queue_list_entry_wait_for_done@plt>:
   11b3c:	add	ip, pc, #1048576	; 0x100000
   11b40:	add	ip, ip, #12288	; 0x3000
   11b44:	ldr	pc, [ip, #2236]!	; 0x8bc

00011b48 <myhtml_tree_open_elements_append@plt>:
   11b48:	add	ip, pc, #1048576	; 0x100000
   11b4c:	add	ip, ip, #12288	; 0x3000
   11b50:	ldr	pc, [ip, #2228]!	; 0x8b4

00011b54 <mcsimple_init_list_entries@plt>:
   11b54:	add	ip, pc, #1048576	; 0x100000
   11b58:	add	ip, ip, #12288	; 0x3000
   11b5c:	ldr	pc, [ip, #2220]!	; 0x8ac

00011b60 <mythread_queue_list_entry_clean@plt>:
   11b60:	add	ip, pc, #1048576	; 0x100000
   11b64:	add	ip, ip, #12288	; 0x3000
   11b68:	ldr	pc, [ip, #2212]!	; 0x8a4

00011b6c <mythread_destroy@plt>:
   11b6c:	add	ip, pc, #1048576	; 0x100000
   11b70:	add	ip, ip, #12288	; 0x3000
   11b74:	ldr	pc, [ip, #2204]!	; 0x89c

00011b78 <mchar_async_chunk_malloc@plt>:
   11b78:	add	ip, pc, #1048576	; 0x100000
   11b7c:	add	ip, ip, #12288	; 0x3000
   11b80:	ldr	pc, [ip, #2196]!	; 0x894

00011b84 <myhtml_tree_template_insertion_pop@plt>:
   11b84:	add	ip, pc, #1048576	; 0x100000
   11b88:	add	ip, ip, #12288	; 0x3000
   11b8c:	ldr	pc, [ip, #2188]!	; 0x88c

00011b90 <mythread_thread_destroy@plt>:
   11b90:	add	ip, pc, #1048576	; 0x100000
   11b94:	add	ip, ip, #12288	; 0x3000
   11b98:	ldr	pc, [ip, #2180]!	; 0x884

00011b9c <fclose@plt>:
   11b9c:	add	ip, pc, #1048576	; 0x100000
   11ba0:	add	ip, ip, #12288	; 0x3000
   11ba4:	ldr	pc, [ip, #2172]!	; 0x87c

00011ba8 <myhtml_token_node_create@plt>:
   11ba8:	add	ip, pc, #1048576	; 0x100000
   11bac:	add	ip, ip, #12288	; 0x3000
   11bb0:	ldr	pc, [ip, #2164]!	; 0x874

00011bb4 <mycore_utils_avl_tree_node_balance@plt>:
   11bb4:	add	ip, pc, #1048576	; 0x100000
   11bb8:	add	ip, ip, #12288	; 0x3000
   11bbc:	ldr	pc, [ip, #2156]!	; 0x86c

00011bc0 <myhtml_tag_get_by_id@plt>:
   11bc0:	add	ip, pc, #1048576	; 0x100000
   11bc4:	add	ip, ip, #12288	; 0x3000
   11bc8:	ldr	pc, [ip, #2148]!	; 0x864

00011bcc <myhtml_tree_appropriate_place_inserting_in_tree@plt>:
   11bcc:	add	ip, pc, #1048576	; 0x100000
   11bd0:	add	ip, ip, #12288	; 0x3000
   11bd4:	ldr	pc, [ip, #2140]!	; 0x85c

00011bd8 <mycore_utils_mhash_rebuld@plt>:
   11bd8:	add	ip, pc, #1048576	; 0x100000
   11bdc:	add	ip, ip, #12288	; 0x3000
   11be0:	ldr	pc, [ip, #2132]!	; 0x854

00011be4 <myhtml_charef_get_first_position@plt>:
   11be4:	add	ip, pc, #1048576	; 0x100000
   11be8:	add	ip, ip, #12288	; 0x3000
   11bec:	ldr	pc, [ip, #2124]!	; 0x84c

00011bf0 <mcobject_malloc@plt>:
   11bf0:	add	ip, pc, #1048576	; 0x100000
   11bf4:	add	ip, ip, #12288	; 0x3000
   11bf8:	ldr	pc, [ip, #2116]!	; 0x844

00011bfc <mcsync_spin_clean@plt>:
   11bfc:	add	ip, pc, #1048576	; 0x100000
   11c00:	add	ip, ip, #12288	; 0x3000
   11c04:	ldr	pc, [ip, #2108]!	; 0x83c

00011c08 <mythread_queue_create@plt>:
   11c08:	add	ip, pc, #1048576	; 0x100000
   11c0c:	add	ip, ip, #12288	; 0x3000
   11c10:	ldr	pc, [ip, #2100]!	; 0x834

00011c14 <mcobject_async_node_add@plt>:
   11c14:	add	ip, pc, #1048576	; 0x100000
   11c18:	add	ip, ip, #12288	; 0x3000
   11c1c:	ldr	pc, [ip, #2092]!	; 0x82c

00011c20 <myhtml_tokenizer_doctype_system_identifier_dsq@plt>:
   11c20:	add	ip, pc, #1048576	; 0x100000
   11c24:	add	ip, ip, #12288	; 0x3000
   11c28:	ldr	pc, [ip, #2084]!	; 0x824

00011c2c <myhtml_is_html_node@plt>:
   11c2c:	add	ip, pc, #1048576	; 0x100000
   11c30:	add	ip, ip, #12288	; 0x3000
   11c34:	ldr	pc, [ip, #2076]!	; 0x81c

00011c38 <myhtml_init_marker@plt>:
   11c38:	add	ip, pc, #1048576	; 0x100000
   11c3c:	add	ip, ip, #12288	; 0x3000
   11c40:	ldr	pc, [ip, #2068]!	; 0x814

00011c44 <myhtml_parser_token_data_to_string@plt>:
   11c44:	add	ip, pc, #1048576	; 0x100000
   11c48:	add	ip, ip, #12288	; 0x3000
   11c4c:	ldr	pc, [ip, #2060]!	; 0x80c

00011c50 <mythread_stop@plt>:
   11c50:	add	ip, pc, #1048576	; 0x100000
   11c54:	add	ip, ip, #12288	; 0x3000
   11c58:	ldr	pc, [ip, #2052]!	; 0x804

00011c5c <myhtml_tag_name_by_id@plt>:
   11c5c:	add	ip, pc, #1048576	; 0x100000
   11c60:	add	ip, ip, #12288	; 0x3000
   11c64:	ldr	pc, [ip, #2044]!	; 0x7fc

00011c68 <mythread_mutex_create@plt>:
   11c68:	add	ip, pc, #1048576	; 0x100000
   11c6c:	add	ip, ip, #12288	; 0x3000
   11c70:	ldr	pc, [ip, #2036]!	; 0x7f4

00011c74 <myhtml_attribute_key@plt>:
   11c74:	add	ip, pc, #1048576	; 0x100000
   11c78:	add	ip, ip, #12288	; 0x3000
   11c7c:	ldr	pc, [ip, #2028]!	; 0x7ec

00011c80 <mcobject_async_destroy@plt>:
   11c80:	add	ip, pc, #1048576	; 0x100000
   11c84:	add	ip, ip, #12288	; 0x3000
   11c88:	ldr	pc, [ip, #2020]!	; 0x7e4

00011c8c <myhtml_token_attr_compare@plt>:
   11c8c:	add	ip, pc, #1048576	; 0x100000
   11c90:	add	ip, ip, #12288	; 0x3000
   11c94:	ldr	pc, [ip, #2012]!	; 0x7dc

00011c98 <myhtml_tokenizer_set_state@plt>:
   11c98:	add	ip, pc, #1048576	; 0x100000
   11c9c:	add	ip, ip, #12288	; 0x3000
   11ca0:	ldr	pc, [ip, #2004]!	; 0x7d4

00011ca4 <mcsync_mutex_init@plt>:
   11ca4:	add	ip, pc, #1048576	; 0x100000
   11ca8:	add	ip, ip, #12288	; 0x3000
   11cac:	ldr	pc, [ip, #1996]!	; 0x7cc

00011cb0 <myhtml_tag_init@plt>:
   11cb0:	add	ip, pc, #1048576	; 0x100000
   11cb4:	add	ip, ip, #12288	; 0x3000
   11cb8:	ldr	pc, [ip, #1988]!	; 0x7c4

00011cbc <pthread_join@plt>:
   11cbc:	add	ip, pc, #1048576	; 0x100000
   11cc0:	add	ip, ip, #12288	; 0x3000
   11cc4:	ldr	pc, [ip, #1980]!	; 0x7bc

00011cc8 <myhtml_tag_get_by_name@plt>:
   11cc8:	add	ip, pc, #1048576	; 0x100000
   11ccc:	add	ip, ip, #12288	; 0x3000
   11cd0:	ldr	pc, [ip, #1972]!	; 0x7b4

00011cd4 <myhtml_stream_buffer_current_entry@plt>:
   11cd4:	add	ip, pc, #1048576	; 0x100000
   11cd8:	add	ip, ip, #12288	; 0x3000
   11cdc:	ldr	pc, [ip, #1964]!	; 0x7ac

00011ce0 <mchar_async_chunk_malloc_without_lock@plt>:
   11ce0:	add	ip, pc, #1048576	; 0x100000
   11ce4:	add	ip, ip, #12288	; 0x3000
   11ce8:	ldr	pc, [ip, #1956]!	; 0x7a4

00011cec <mcobject_async_malloc@plt>:
   11cec:	add	ip, pc, #1048576	; 0x100000
   11cf0:	add	ip, ip, #12288	; 0x3000
   11cf4:	ldr	pc, [ip, #1948]!	; 0x79c

00011cf8 <mchar_async_clean@plt>:
   11cf8:	add	ip, pc, #1048576	; 0x100000
   11cfc:	add	ip, ip, #12288	; 0x3000
   11d00:	ldr	pc, [ip, #1940]!	; 0x794

00011d04 <myhtml_token_adjust_foreign_attributes@plt>:
   11d04:	add	ip, pc, #1048576	; 0x100000
   11d08:	add	ip, ip, #12288	; 0x3000
   11d0c:	ldr	pc, [ip, #1932]!	; 0x78c

00011d10 <myhtml_rules_init@plt>:
   11d10:	add	ip, pc, #1048576	; 0x100000
   11d14:	add	ip, ip, #12288	; 0x3000
   11d18:	ldr	pc, [ip, #1924]!	; 0x784

00011d1c <mythread_nanosleep_destroy@plt>:
   11d1c:	add	ip, pc, #1048576	; 0x100000
   11d20:	add	ip, ip, #12288	; 0x3000
   11d24:	ldr	pc, [ip, #1916]!	; 0x77c

00011d28 <mycore_utils_avl_tree_node_rotate_left@plt>:
   11d28:	add	ip, pc, #1048576	; 0x100000
   11d2c:	add	ip, ip, #12288	; 0x3000
   11d30:	ldr	pc, [ip, #1908]!	; 0x774

00011d34 <myhtml_string_before_append_any_preprocessing@plt>:
   11d34:	add	ip, pc, #1048576	; 0x100000
   11d38:	add	ip, ip, #12288	; 0x3000
   11d3c:	ldr	pc, [ip, #1900]!	; 0x76c

00011d40 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@plt>:
   11d40:	add	ip, pc, #1048576	; 0x100000
   11d44:	add	ip, ip, #12288	; 0x3000
   11d48:	ldr	pc, [ip, #1892]!	; 0x764

00011d4c <mchar_async_cache_init@plt>:
   11d4c:	add	ip, pc, #1048576	; 0x100000
   11d50:	add	ip, ip, #12288	; 0x3000
   11d54:	ldr	pc, [ip, #1884]!	; 0x75c

00011d58 <myhtml_check_tag_parser@plt>:
   11d58:	add	ip, pc, #1048576	; 0x100000
   11d5c:	add	ip, ip, #12288	; 0x3000
   11d60:	ldr	pc, [ip, #1876]!	; 0x754

00011d64 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>:
   11d64:	add	ip, pc, #1048576	; 0x100000
   11d68:	add	ip, ip, #12288	; 0x3000
   11d6c:	ldr	pc, [ip, #1868]!	; 0x74c

00011d70 <mchar_async_node_delete@plt>:
   11d70:	add	ip, pc, #1048576	; 0x100000
   11d74:	add	ip, ip, #12288	; 0x3000
   11d78:	ldr	pc, [ip, #1860]!	; 0x744

00011d7c <mchar_async_crop_first_chars_without_cache@plt>:
   11d7c:	add	ip, pc, #1048576	; 0x100000
   11d80:	add	ip, ip, #12288	; 0x3000
   11d84:	ldr	pc, [ip, #1852]!	; 0x73c

00011d88 <_myhtml_tokenizer_state_andata_end_tag_name@plt>:
   11d88:	add	ip, pc, #1048576	; 0x100000
   11d8c:	add	ip, ip, #12288	; 0x3000
   11d90:	ldr	pc, [ip, #1844]!	; 0x734

00011d94 <mchar_async_cache_add@plt>:
   11d94:	add	ip, pc, #1048576	; 0x100000
   11d98:	add	ip, ip, #12288	; 0x3000
   11d9c:	ldr	pc, [ip, #1836]!	; 0x72c

00011da0 <myencoding_string_append_chunk_lowercase_ascii@plt>:
   11da0:	add	ip, pc, #1048576	; 0x100000
   11da4:	add	ip, ip, #12288	; 0x3000
   11da8:	ldr	pc, [ip, #1828]!	; 0x724

00011dac <mycore_malloc@plt>:
   11dac:	add	ip, pc, #1048576	; 0x100000
   11db0:	add	ip, ip, #12288	; 0x3000
   11db4:	ldr	pc, [ip, #1820]!	; 0x71c

00011db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>:
   11db8:	add	ip, pc, #1048576	; 0x100000
   11dbc:	add	ip, ip, #12288	; 0x3000
   11dc0:	ldr	pc, [ip, #1812]!	; 0x714

00011dc4 <mythread_queue_node_malloc_limit@plt>:
   11dc4:	add	ip, pc, #1048576	; 0x100000
   11dc8:	add	ip, ip, #12288	; 0x3000
   11dcc:	ldr	pc, [ip, #1804]!	; 0x70c

00011dd0 <myhtml_tree_node_insert_by_token@plt>:
   11dd0:	add	ip, pc, #1048576	; 0x100000
   11dd4:	add	ip, ip, #12288	; 0x3000
   11dd8:	ldr	pc, [ip, #1796]!	; 0x704

00011ddc <mctree_insert_after@plt>:
   11ddc:	add	ip, pc, #1048576	; 0x100000
   11de0:	add	ip, ip, #12288	; 0x3000
   11de4:	ldr	pc, [ip, #1788]!	; 0x6fc

00011de8 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>:
   11de8:	add	ip, pc, #1048576	; 0x100000
   11dec:	add	ip, ip, #12288	; 0x3000
   11df0:	ldr	pc, [ip, #1780]!	; 0x6f4

00011df4 <myhtml_tree_node_free@plt>:
   11df4:	add	ip, pc, #1048576	; 0x100000
   11df8:	add	ip, ip, #12288	; 0x3000
   11dfc:	ldr	pc, [ip, #1772]!	; 0x6ec

00011e00 <mythread_mutex_post@plt>:
   11e00:	add	ip, pc, #1048576	; 0x100000
   11e04:	add	ip, ip, #12288	; 0x3000
   11e08:	ldr	pc, [ip, #1764]!	; 0x6e4

00011e0c <mycore_string_clean@plt>:
   11e0c:	add	ip, pc, #1048576	; 0x100000
   11e10:	add	ip, ip, #12288	; 0x3000
   11e14:	ldr	pc, [ip, #1756]!	; 0x6dc

00011e18 <mythread_queue_list_entry_make_batch@plt>:
   11e18:	add	ip, pc, #1048576	; 0x100000
   11e1c:	add	ip, ip, #12288	; 0x3000
   11e20:	ldr	pc, [ip, #1748]!	; 0x6d4

00011e24 <myhtml_tag_create@plt>:
   11e24:	add	ip, pc, #1048576	; 0x100000
   11e28:	add	ip, ip, #12288	; 0x3000
   11e2c:	ldr	pc, [ip, #1740]!	; 0x6cc

00011e30 <myhtml_tree_close_cell@plt>:
   11e30:	add	ip, pc, #1048576	; 0x100000
   11e34:	add	ip, ip, #12288	; 0x3000
   11e38:	ldr	pc, [ip, #1732]!	; 0x6c4

00011e3c <myhtml_tree_adjusted_current_node@plt>:
   11e3c:	add	ip, pc, #1048576	; 0x100000
   11e40:	add	ip, ip, #12288	; 0x3000
   11e44:	ldr	pc, [ip, #1724]!	; 0x6bc

00011e48 <myhtml_rules_check_for_first_newline@plt>:
   11e48:	add	ip, pc, #1048576	; 0x100000
   11e4c:	add	ip, ip, #12288	; 0x3000
   11e50:	ldr	pc, [ip, #1716]!	; 0x6b4

00011e54 <myhtml_stream_buffer_init@plt>:
   11e54:	add	ip, pc, #1048576	; 0x100000
   11e58:	add	ip, ip, #12288	; 0x3000
   11e5c:	ldr	pc, [ip, #1708]!	; 0x6ac

00011e60 <mythread_queue_node_clean@plt>:
   11e60:	add	ip, pc, #1048576	; 0x100000
   11e64:	add	ip, ip, #12288	; 0x3000
   11e68:	ldr	pc, [ip, #1700]!	; 0x6a4

00011e6c <myhtml_tree_node_insert_foreign_element@plt>:
   11e6c:	add	ip, pc, #1048576	; 0x100000
   11e70:	add	ip, ip, #12288	; 0x3000
   11e74:	ldr	pc, [ip, #1692]!	; 0x69c

00011e78 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>:
   11e78:	add	ip, pc, #1048576	; 0x100000
   11e7c:	add	ip, ip, #12288	; 0x3000
   11e80:	ldr	pc, [ip, #1684]!	; 0x694

00011e84 <mythread_mutex_wait@plt>:
   11e84:	add	ip, pc, #1048576	; 0x100000
   11e88:	add	ip, ip, #12288	; 0x3000
   11e8c:	ldr	pc, [ip, #1676]!	; 0x68c

00011e90 <mchar_async_destroy@plt>:
   11e90:	add	ip, pc, #1048576	; 0x100000
   11e94:	add	ip, ip, #12288	; 0x3000
   11e98:	ldr	pc, [ip, #1668]!	; 0x684

00011e9c <mycore_utils_mhash_add_with_choice@plt>:
   11e9c:	add	ip, pc, #1048576	; 0x100000
   11ea0:	add	ip, ip, #12288	; 0x3000
   11ea4:	ldr	pc, [ip, #1660]!	; 0x67c

00011ea8 <myhtml_tree_node_delete@plt>:
   11ea8:	add	ip, pc, #1048576	; 0x100000
   11eac:	add	ip, ip, #12288	; 0x3000
   11eb0:	ldr	pc, [ip, #1652]!	; 0x674

00011eb4 <mycore_free@plt>:
   11eb4:	add	ip, pc, #1048576	; 0x100000
   11eb8:	add	ip, ip, #12288	; 0x3000
   11ebc:	ldr	pc, [ip, #1644]!	; 0x66c

00011ec0 <mythread_queue_list_wait_for_done@plt>:
   11ec0:	add	ip, pc, #1048576	; 0x100000
   11ec4:	add	ip, ip, #12288	; 0x3000
   11ec8:	ldr	pc, [ip, #1636]!	; 0x664

00011ecc <mycore_string_whitespace_from_begin@plt>:
   11ecc:	add	ip, pc, #1048576	; 0x100000
   11ed0:	add	ip, ip, #12288	; 0x3000
   11ed4:	ldr	pc, [ip, #1628]!	; 0x65c

00011ed8 <myhtml_tree_node_remove@plt>:
   11ed8:	add	ip, pc, #1048576	; 0x100000
   11edc:	add	ip, ip, #12288	; 0x3000
   11ee0:	ldr	pc, [ip, #1620]!	; 0x654

00011ee4 <myhtml_collection_check_size@plt>:
   11ee4:	add	ip, pc, #1048576	; 0x100000
   11ee8:	add	ip, ip, #12288	; 0x3000
   11eec:	ldr	pc, [ip, #1612]!	; 0x64c

00011ef0 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@plt>:
   11ef0:	add	ip, pc, #1048576	; 0x100000
   11ef4:	add	ip, ip, #12288	; 0x3000
   11ef8:	ldr	pc, [ip, #1604]!	; 0x644

00011efc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>:
   11efc:	add	ip, pc, #1048576	; 0x100000
   11f00:	add	ip, ip, #12288	; 0x3000
   11f04:	ldr	pc, [ip, #1596]!	; 0x63c

00011f08 <myhtml_tree_node_insert_doctype@plt>:
   11f08:	add	ip, pc, #1048576	; 0x100000
   11f0c:	add	ip, ip, #12288	; 0x3000
   11f10:	ldr	pc, [ip, #1588]!	; 0x634

00011f14 <myhtml_tree_template_insertion_destroy@plt>:
   11f14:	add	ip, pc, #1048576	; 0x100000
   11f18:	add	ip, ip, #12288	; 0x3000
   11f1c:	ldr	pc, [ip, #1580]!	; 0x62c

00011f20 <myhtml_tag_destroy@plt>:
   11f20:	add	ip, pc, #1048576	; 0x100000
   11f24:	add	ip, ip, #12288	; 0x3000
   11f28:	ldr	pc, [ip, #1572]!	; 0x624

00011f2c <mcsync_mutex_clean@plt>:
   11f2c:	add	ip, pc, #1048576	; 0x100000
   11f30:	add	ip, ip, #12288	; 0x3000
   11f34:	ldr	pc, [ip, #1564]!	; 0x61c

00011f38 <myhtml_tree_active_formatting_up_to_last_marker@plt>:
   11f38:	add	ip, pc, #1048576	; 0x100000
   11f3c:	add	ip, ip, #12288	; 0x3000
   11f40:	ldr	pc, [ip, #1556]!	; 0x614

00011f44 <myhtml_stream_buffer_create@plt>:
   11f44:	add	ip, pc, #1048576	; 0x100000
   11f48:	add	ip, ip, #12288	; 0x3000
   11f4c:	ldr	pc, [ip, #1548]!	; 0x60c

00011f50 <myhtml_tree_appropriate_place_inserting@plt>:
   11f50:	add	ip, pc, #1048576	; 0x100000
   11f54:	add	ip, ip, #12288	; 0x3000
   11f58:	ldr	pc, [ip, #1540]!	; 0x604

00011f5c <myencoding_codepoint_to_ascii_utf_8@plt>:
   11f5c:	add	ip, pc, #1048576	; 0x100000
   11f60:	add	ip, ip, #12288	; 0x3000
   11f64:	ldr	pc, [ip, #1532]!	; 0x5fc

00011f68 <myhtml_token_attr_remove_by_name@plt>:
   11f68:	add	ip, pc, #1048576	; 0x100000
   11f6c:	add	ip, ip, #12288	; 0x3000
   11f70:	ldr	pc, [ip, #1524]!	; 0x5f4

00011f74 <mycore_utils_mhash_rebuild_add_entry@plt>:
   11f74:	add	ip, pc, #1048576	; 0x100000
   11f78:	add	ip, ip, #12288	; 0x3000
   11f7c:	ldr	pc, [ip, #1516]!	; 0x5ec

00011f80 <myhtml_token_attr_by_name@plt>:
   11f80:	add	ip, pc, #1048576	; 0x100000
   11f84:	add	ip, ip, #12288	; 0x3000
   11f88:	ldr	pc, [ip, #1508]!	; 0x5e4

00011f8c <mcsync_unlock@plt>:
   11f8c:	add	ip, pc, #1048576	; 0x100000
   11f90:	add	ip, ip, #12288	; 0x3000
   11f94:	ldr	pc, [ip, #1500]!	; 0x5dc

00011f98 <myhtml_tree_token_list_append@plt>:
   11f98:	add	ip, pc, #1048576	; 0x100000
   11f9c:	add	ip, ip, #12288	; 0x3000
   11fa0:	ldr	pc, [ip, #1492]!	; 0x5d4

00011fa4 <mythread_queue_list_entry_make_stream@plt>:
   11fa4:	add	ip, pc, #1048576	; 0x100000
   11fa8:	add	ip, ip, #12288	; 0x3000
   11fac:	ldr	pc, [ip, #1484]!	; 0x5cc

00011fb0 <mycore_strncmp@plt>:
   11fb0:	add	ip, pc, #1048576	; 0x100000
   11fb4:	add	ip, ip, #12288	; 0x3000
   11fb8:	ldr	pc, [ip, #1476]!	; 0x5c4

00011fbc <mycore_utils_mhash_create_entry@plt>:
   11fbc:	add	ip, pc, #1048576	; 0x100000
   11fc0:	add	ip, ip, #12288	; 0x3000
   11fc4:	ldr	pc, [ip, #1468]!	; 0x5bc

00011fc8 <myhtml_tree_element_in_scope@plt>:
   11fc8:	add	ip, pc, #1048576	; 0x100000
   11fcc:	add	ip, ip, #12288	; 0x3000
   11fd0:	ldr	pc, [ip, #1460]!	; 0x5b4

00011fd4 <myencoding_index_gb18030_ranges_code_point@plt>:
   11fd4:	add	ip, pc, #1048576	; 0x100000
   11fd8:	add	ip, ip, #12288	; 0x3000
   11fdc:	ldr	pc, [ip, #1452]!	; 0x5ac

00011fe0 <fseek@plt>:
   11fe0:	add	ip, pc, #1048576	; 0x100000
   11fe4:	add	ip, ip, #12288	; 0x3000
   11fe8:	ldr	pc, [ip, #1444]!	; 0x5a4

00011fec <myhtml_node_clone@plt>:
   11fec:	add	ip, pc, #1048576	; 0x100000
   11ff0:	add	ip, ip, #12288	; 0x3000
   11ff4:	ldr	pc, [ip, #1436]!	; 0x59c

00011ff8 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>:
   11ff8:	add	ip, pc, #1048576	; 0x100000
   11ffc:	add	ip, ip, #12288	; 0x3000
   12000:	ldr	pc, [ip, #1428]!	; 0x594

00012004 <pthread_attr_setdetachstate@plt>:
   12004:	add	ip, pc, #1048576	; 0x100000
   12008:	add	ip, ip, #12288	; 0x3000
   1200c:	ldr	pc, [ip, #1420]!	; 0x58c

00012010 <mchar_async_cache_delete@plt>:
   12010:	add	ip, pc, #1048576	; 0x100000
   12014:	add	ip, ip, #12288	; 0x3000
   12018:	ldr	pc, [ip, #1412]!	; 0x584

0001201c <mcobject_clean@plt>:
   1201c:	add	ip, pc, #1048576	; 0x100000
   12020:	add	ip, ip, #12288	; 0x3000
   12024:	ldr	pc, [ip, #1404]!	; 0x57c

00012028 <myhtml_token_node_clean@plt>:
   12028:	add	ip, pc, #1048576	; 0x100000
   1202c:	add	ip, ip, #12288	; 0x3000
   12030:	ldr	pc, [ip, #1396]!	; 0x574

00012034 <myhtml_token_delete@plt>:
   12034:	add	ip, pc, #1048576	; 0x100000
   12038:	add	ip, ip, #12288	; 0x3000
   1203c:	ldr	pc, [ip, #1388]!	; 0x56c

00012040 <strncmp@plt>:
   12040:	add	ip, pc, #1048576	; 0x100000
   12044:	add	ip, ip, #12288	; 0x3000
   12048:	ldr	pc, [ip, #1380]!	; 0x564

0001204c <mcsimple_get_by_absolute_position@plt>:
   1204c:	add	ip, pc, #1048576	; 0x100000
   12050:	add	ip, ip, #12288	; 0x3000
   12054:	ldr	pc, [ip, #1372]!	; 0x55c

00012058 <mcsync_mutex_try_lock@plt>:
   12058:	add	ip, pc, #1048576	; 0x100000
   1205c:	add	ip, ip, #12288	; 0x3000
   12060:	ldr	pc, [ip, #1364]!	; 0x554

00012064 <myhtml_tree_clear_stack_back_table_context@plt>:
   12064:	add	ip, pc, #1048576	; 0x100000
   12068:	add	ip, ip, #12288	; 0x3000
   1206c:	ldr	pc, [ip, #1356]!	; 0x54c

00012070 <myhtml_tree_node_clone@plt>:
   12070:	add	ip, pc, #1048576	; 0x100000
   12074:	add	ip, ip, #12288	; 0x3000
   12078:	ldr	pc, [ip, #1348]!	; 0x544

0001207c <myhtml_tree_token_list_clean@plt>:
   1207c:	add	ip, pc, #1048576	; 0x100000
   12080:	add	ip, ip, #12288	; 0x3000
   12084:	ldr	pc, [ip, #1340]!	; 0x53c

00012088 <myhtml_parser_stream@plt>:
   12088:	add	ip, pc, #1048576	; 0x100000
   1208c:	add	ip, ip, #12288	; 0x3000
   12090:	ldr	pc, [ip, #1332]!	; 0x534

00012094 <myhtml_token_create@plt>:
   12094:	add	ip, pc, #1048576	; 0x100000
   12098:	add	ip, ip, #12288	; 0x3000
   1209c:	ldr	pc, [ip, #1324]!	; 0x52c

000120a0 <myhtml_parser_token_data_to_string_lowercase@plt>:
   120a0:	add	ip, pc, #1048576	; 0x100000
   120a4:	add	ip, ip, #12288	; 0x3000
   120a8:	ldr	pc, [ip, #1316]!	; 0x524

000120ac <myencoding_detect_utf_8@plt>:
   120ac:	add	ip, pc, #1048576	; 0x100000
   120b0:	add	ip, ip, #12288	; 0x3000
   120b4:	ldr	pc, [ip, #1308]!	; 0x51c

000120b8 <mcsync_spin_unlock@plt>:
   120b8:	add	ip, pc, #1048576	; 0x100000
   120bc:	add	ip, ip, #12288	; 0x3000
   120c0:	ldr	pc, [ip, #1300]!	; 0x514

000120c4 <myhtml_string_append_lowercase_with_preprocessing@plt>:
   120c4:	add	ip, pc, #1048576	; 0x100000
   120c8:	add	ip, ip, #12288	; 0x3000
   120cc:	ldr	pc, [ip, #1292]!	; 0x50c

000120d0 <mcsync_mutex_lock@plt>:
   120d0:	add	ip, pc, #1048576	; 0x100000
   120d4:	add	ip, ip, #12288	; 0x3000
   120d8:	ldr	pc, [ip, #1284]!	; 0x504

000120dc <mcobject_async_clean@plt>:
   120dc:	add	ip, pc, #1048576	; 0x100000
   120e0:	add	ip, ip, #12288	; 0x3000
   120e4:	ldr	pc, [ip, #1276]!	; 0x4fc

000120e8 <mchar_async_mem_malloc@plt>:
   120e8:	add	ip, pc, #1048576	; 0x100000
   120ec:	add	ip, ip, #12288	; 0x3000
   120f0:	ldr	pc, [ip, #1268]!	; 0x4f4

000120f4 <myhtml_data_process_string_append_char@plt>:
   120f4:	add	ip, pc, #1048576	; 0x100000
   120f8:	add	ip, ip, #12288	; 0x3000
   120fc:	ldr	pc, [ip, #1260]!	; 0x4ec

00012100 <myhtml_tag_clean@plt>:
   12100:	add	ip, pc, #1048576	; 0x100000
   12104:	add	ip, ip, #12288	; 0x3000
   12108:	ldr	pc, [ip, #1252]!	; 0x4e4

0001210c <mythread_thread_attr_destroy@plt>:
   1210c:	add	ip, pc, #1048576	; 0x100000
   12110:	add	ip, ip, #12288	; 0x3000
   12114:	ldr	pc, [ip, #1244]!	; 0x4dc

00012118 <mycore_string_clean_all@plt>:
   12118:	add	ip, pc, #1048576	; 0x100000
   1211c:	add	ip, ip, #12288	; 0x3000
   12120:	ldr	pc, [ip, #1236]!	; 0x4d4

00012124 <myhtml_tree_node_clean@plt>:
   12124:	add	ip, pc, #1048576	; 0x100000
   12128:	add	ip, ip, #12288	; 0x3000
   1212c:	ldr	pc, [ip, #1228]!	; 0x4cc

00012130 <mythread_init@plt>:
   12130:	add	ip, pc, #1048576	; 0x100000
   12134:	add	ip, ip, #12288	; 0x3000
   12138:	ldr	pc, [ip, #1220]!	; 0x4c4

Disassembly of section .text:

00012140 <mycore_incoming_buffer_add@@Base-0x124>:
   12140:	ldr	r3, [pc, #20]	; 1215c <mythread_init@plt+0x2c>
   12144:	ldr	r2, [pc, #20]	; 12160 <mythread_init@plt+0x30>
   12148:	add	r3, pc, r3
   1214c:	ldr	r2, [r3, r2]
   12150:	cmp	r2, #0
   12154:	bxeq	lr
   12158:	b	11824 <__gmon_start__@plt>
   1215c:			; <UNDEFINED> instruction: 0x00102eb0
   12160:	andeq	r0, r0, r0, ror r7
   12164:	ldr	r0, [pc, #44]	; 12198 <mythread_init@plt+0x68>
   12168:	ldr	r3, [pc, #44]	; 1219c <mythread_init@plt+0x6c>
   1216c:	add	r0, pc, r0
   12170:	add	r3, pc, r3
   12174:	cmp	r3, r0
   12178:	ldr	r3, [pc, #32]	; 121a0 <mythread_init@plt+0x70>
   1217c:	add	r3, pc, r3
   12180:	bxeq	lr
   12184:	ldr	r2, [pc, #24]	; 121a4 <mythread_init@plt+0x74>
   12188:	ldr	r3, [r3, r2]
   1218c:	cmp	r3, #0
   12190:	bxeq	lr
   12194:	bx	r3
   12198:	andseq	r3, r0, r8, asr r7
   1219c:	andseq	r3, r0, r4, asr r7
   121a0:	andseq	r2, r0, ip, ror lr
   121a4:	andeq	r0, r0, ip, lsr r6
   121a8:	ldr	r0, [pc, #56]	; 121e8 <mythread_init@plt+0xb8>
   121ac:	ldr	r3, [pc, #56]	; 121ec <mythread_init@plt+0xbc>
   121b0:	add	r0, pc, r0
   121b4:	add	r3, pc, r3
   121b8:	sub	r1, r3, r0
   121bc:	ldr	r3, [pc, #44]	; 121f0 <mythread_init@plt+0xc0>
   121c0:	asr	r1, r1, #2
   121c4:	add	r3, pc, r3
   121c8:	add	r1, r1, r1, lsr #31
   121cc:	asrs	r1, r1, #1
   121d0:	bxeq	lr
   121d4:	ldr	r2, [pc, #24]	; 121f4 <mythread_init@plt+0xc4>
   121d8:	ldr	r3, [r3, r2]
   121dc:	cmp	r3, #0
   121e0:	bxeq	lr
   121e4:	bx	r3
   121e8:	andseq	r3, r0, r4, lsl r7
   121ec:	andseq	r3, r0, r0, lsl r7
   121f0:	andseq	r2, r0, r4, lsr lr
   121f4:	andeq	r0, r0, r0, lsl #17
   121f8:	ldr	r3, [pc, #76]	; 1224c <mythread_init@plt+0x11c>
   121fc:	ldr	r2, [pc, #76]	; 12250 <mythread_init@plt+0x120>
   12200:	add	r3, pc, r3
   12204:	add	r2, pc, r2
   12208:	ldrb	r3, [r3]
   1220c:	cmp	r3, #0
   12210:	bxne	lr
   12214:	ldr	r3, [pc, #56]	; 12254 <mythread_init@plt+0x124>
   12218:	push	{r4, lr}
   1221c:	ldr	r3, [r2, r3]
   12220:	cmp	r3, #0
   12224:	beq	12234 <mythread_init@plt+0x104>
   12228:	ldr	r3, [pc, #40]	; 12258 <mythread_init@plt+0x128>
   1222c:	ldr	r0, [pc, r3]
   12230:	bl	110bc <__cxa_finalize@plt>
   12234:	bl	12164 <mythread_init@plt+0x34>
   12238:	ldr	r3, [pc, #28]	; 1225c <mythread_init@plt+0x12c>
   1223c:	mov	r2, #1
   12240:	add	r3, pc, r3
   12244:	strb	r2, [r3]
   12248:	pop	{r4, pc}
   1224c:	andseq	r3, r0, r4, asr #13
   12250:			; <UNDEFINED> instruction: 0x00102df4
   12254:	andeq	r0, r0, r8, lsr #12
   12258:	mulseq	r0, r4, r6
   1225c:	andseq	r3, r0, r4, lsl #13
   12260:	b	121a8 <mythread_init@plt+0x78>

00012264 <mycore_incoming_buffer_add@@Base>:
   12264:	push	{r4, r5, r6, r7, fp, lr}
   12268:	add	fp, sp, #16
   1226c:	mov	r4, r0
   12270:	mov	r0, r1
   12274:	mov	r1, #0
   12278:	mov	r5, r3
   1227c:	mov	r6, r2
   12280:	mov	r7, #0
   12284:	bl	11bf0 <mcobject_malloc@plt>
   12288:	cmp	r4, #0
   1228c:	stm	r0, {r6, r7}
   12290:	str	r5, [r0, #8]
   12294:	beq	122b0 <mycore_incoming_buffer_add@@Base+0x4c>
   12298:	ldr	r1, [r4, #8]
   1229c:	ldr	r2, [r4, #12]
   122a0:	add	r1, r1, r2
   122a4:	str	r1, [r0, #12]
   122a8:	str	r0, [r4, #20]
   122ac:	b	122b4 <mycore_incoming_buffer_add@@Base+0x50>
   122b0:	str	r7, [r0, #12]
   122b4:	mov	r1, #0
   122b8:	str	r4, [r0, #16]
   122bc:	str	r1, [r0, #20]
   122c0:	pop	{r4, r5, r6, r7, fp, pc}

000122c4 <mycore_incoming_buffer_clean@@Base>:
   122c4:	vmov.i32	q8, #0	; 0x00000000
   122c8:	mov	r1, #0
   122cc:	mov	r2, #20
   122d0:	str	r1, [r0, #16]
   122d4:	vst1.32	{d16-d17}, [r0], r2
   122d8:	str	r1, [r0]
   122dc:	bx	lr

000122e0 <mycore_incoming_buffer_split@@Base>:
   122e0:	push	{r4, r5, r6, sl, fp, lr}
   122e4:	add	fp, sp, #16
   122e8:	mov	r4, r0
   122ec:	ldr	r0, [r0, #12]
   122f0:	mov	r6, #0
   122f4:	sub	r5, r2, r0
   122f8:	mov	r0, r1
   122fc:	mov	r1, #0
   12300:	bl	11bf0 <mcobject_malloc@plt>
   12304:	ldr	r1, [r4, #8]
   12308:	sub	r1, r1, r5
   1230c:	str	r1, [r0, #8]
   12310:	str	r1, [r0, #4]
   12314:	ldr	r1, [r4]
   12318:	add	r1, r1, r5
   1231c:	str	r1, [r0]
   12320:	ldr	r1, [r4, #12]
   12324:	str	r4, [r0, #16]
   12328:	str	r6, [r0, #20]
   1232c:	add	r1, r1, r5
   12330:	str	r1, [r0, #12]
   12334:	str	r0, [r4, #20]
   12338:	str	r5, [r4, #4]
   1233c:	str	r5, [r4, #8]
   12340:	pop	{r4, r5, r6, sl, fp, pc}

00012344 <mycore_incoming_buffer_find_by_position@@Base>:
   12344:	ldr	r2, [r0, #12]
   12348:	cmp	r2, r1
   1234c:	bcs	1237c <mycore_incoming_buffer_find_by_position@@Base+0x38>
   12350:	ldr	r3, [r0, #8]
   12354:	add	r2, r3, r2
   12358:	cmp	r2, r1
   1235c:	bxcs	lr
   12360:	ldr	r0, [r0, #20]
   12364:	cmp	r0, #0
   12368:	beq	12398 <mycore_incoming_buffer_find_by_position@@Base+0x54>
   1236c:	ldr	r2, [r0, #8]
   12370:	ldr	r3, [r0, #12]
   12374:	add	r2, r2, r3
   12378:	b	12358 <mycore_incoming_buffer_find_by_position@@Base+0x14>
   1237c:	bls	1239c <mycore_incoming_buffer_find_by_position@@Base+0x58>
   12380:	ldr	r0, [r0, #16]
   12384:	cmp	r0, #0
   12388:	beq	12398 <mycore_incoming_buffer_find_by_position@@Base+0x54>
   1238c:	ldr	r2, [r0, #12]
   12390:	cmp	r2, r1
   12394:	b	1237c <mycore_incoming_buffer_find_by_position@@Base+0x38>
   12398:	mov	r0, #0
   1239c:	bx	lr

000123a0 <mycore_incoming_buffer_data@@Base>:
   123a0:	ldr	r0, [r0]
   123a4:	bx	lr

000123a8 <mycore_incoming_buffer_length@@Base>:
   123a8:	ldr	r0, [r0, #4]
   123ac:	bx	lr

000123b0 <mycore_incoming_buffer_size@@Base>:
   123b0:	ldr	r0, [r0, #8]
   123b4:	bx	lr

000123b8 <mycore_incoming_buffer_offset@@Base>:
   123b8:	ldr	r0, [r0, #12]
   123bc:	bx	lr

000123c0 <mycore_incoming_buffer_relative_begin@@Base>:
   123c0:	ldr	r0, [r0, #12]
   123c4:	sub	r0, r1, r0
   123c8:	bx	lr

000123cc <mycore_incoming_buffer_available_length@@Base>:
   123cc:	ldr	r0, [r0, #8]
   123d0:	add	r3, r2, r1
   123d4:	cmp	r3, r0
   123d8:	subhi	r2, r0, r1
   123dc:	mov	r0, r2
   123e0:	bx	lr

000123e4 <mycore_incoming_buffer_next@@Base>:
   123e4:	ldr	r0, [r0, #20]
   123e8:	bx	lr

000123ec <mycore_incoming_buffer_prev@@Base>:
   123ec:	ldr	r0, [r0, #16]
   123f0:	bx	lr

000123f4 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base>:
   123f4:	push	{r4, r5, r6, r7, fp, lr}
   123f8:	add	fp, sp, #16
   123fc:	ldr	r3, [r0]
   12400:	ldr	r2, [r1]
   12404:	ldr	r6, [r3, #8]
   12408:	cmp	r2, r6
   1240c:	bcc	1241c <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x28>
   12410:	mov	r2, #0
   12414:	str	r2, [r1]
   12418:	ldr	r3, [r3, #20]
   1241c:	mov	ip, #0
   12420:	cmp	r3, #0
   12424:	beq	124a0 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xac>
   12428:	ldr	lr, [r3]
   1242c:	ldrb	r6, [lr, r2]
   12430:	sub	r4, r6, #48	; 0x30
   12434:	cmp	r4, #9
   12438:	bhi	124a4 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xb0>
   1243c:	ldr	r5, [pc, #108]	; 124b0 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xbc>
   12440:	mov	ip, #0
   12444:	mov	r4, #1
   12448:	add	r5, pc, r5
   1244c:	ldrb	r6, [r5, r6]
   12450:	add	r2, r2, #1
   12454:	str	r2, [r1]
   12458:	orr	ip, r6, ip, lsl #4
   1245c:	ldr	r6, [r3, #8]
   12460:	cmp	r2, r6
   12464:	bcc	12484 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x90>
   12468:	ldr	r6, [r3, #20]
   1246c:	cmp	r6, #0
   12470:	beq	124a4 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xb0>
   12474:	mov	r2, #0
   12478:	str	r2, [r1]
   1247c:	ldr	lr, [r3]
   12480:	mov	r3, r6
   12484:	cmp	r4, #5
   12488:	ldrbls	r6, [lr, r2]
   1248c:	addls	r4, r4, #1
   12490:	subls	r7, r6, #48	; 0x30
   12494:	cmpls	r7, #10
   12498:	bcc	1244c <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x58>
   1249c:	b	124a4 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xb0>
   124a0:	mov	r3, #0
   124a4:	str	r3, [r0]
   124a8:	mov	r0, ip
   124ac:	pop	{r4, r5, r6, r7, fp, pc}
   124b0:	andeq	fp, r1, r8, lsl #4

000124b4 <mycore_incoming_buffer_escaped_case_cmp@@Base>:
   124b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124b8:	add	fp, sp, #28
   124bc:	sub	sp, sp, #4
   124c0:	mov	r9, r0
   124c4:	ldr	r0, [r0]
   124c8:	mov	r5, r2
   124cc:	mov	sl, r1
   124d0:	mov	r6, r3
   124d4:	str	r0, [sp]
   124d8:	ldr	r1, [r3]
   124dc:	ldr	r2, [r0, #8]
   124e0:	cmp	r1, r2
   124e4:	bcc	12500 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x4c>
   124e8:	ldr	r0, [r0, #20]
   124ec:	cmp	r0, #0
   124f0:	beq	125d4 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x120>
   124f4:	mov	r1, #0
   124f8:	str	r1, [r6]
   124fc:	str	r0, [sp]
   12500:	cmp	r5, #0
   12504:	beq	125bc <mycore_incoming_buffer_escaped_case_cmp@@Base+0x108>
   12508:	ldr	r2, [r0]
   1250c:	ldr	r8, [pc, #204]	; 125e0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x12c>
   12510:	mov	r4, #0
   12514:	add	r8, pc, r8
   12518:	ldrb	r3, [r2, r1]
   1251c:	cmp	r3, #92	; 0x5c
   12520:	bne	12564 <mycore_incoming_buffer_escaped_case_cmp@@Base+0xb0>
   12524:	add	r0, r1, #1
   12528:	mov	r1, r6
   1252c:	str	r0, [r6]
   12530:	mov	r0, sp
   12534:	bl	114b8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@plt>
   12538:	cmp	r0, #255	; 0xff
   1253c:	bhi	125c8 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x114>
   12540:	ldrb	r1, [sl, r4]
   12544:	ldrb	r0, [r8, r0]
   12548:	ldrb	r1, [r8, r1]
   1254c:	cmp	r0, r1
   12550:	bne	125c8 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x114>
   12554:	ldr	r0, [sp]
   12558:	ldr	r1, [r6]
   1255c:	ldr	r2, [r0]
   12560:	b	12580 <mycore_incoming_buffer_escaped_case_cmp@@Base+0xcc>
   12564:	ldrb	r7, [sl, r4]
   12568:	ldrb	r3, [r8, r3]
   1256c:	ldrb	r7, [r8, r7]
   12570:	cmp	r3, r7
   12574:	bne	125c8 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x114>
   12578:	add	r1, r1, #1
   1257c:	str	r1, [r6]
   12580:	ldr	r3, [r0, #8]
   12584:	cmp	r1, r3
   12588:	bcc	125a8 <mycore_incoming_buffer_escaped_case_cmp@@Base+0xf4>
   1258c:	ldr	r0, [r0, #20]
   12590:	cmp	r0, #0
   12594:	beq	125c4 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x110>
   12598:	str	r0, [sp]
   1259c:	mov	r1, #0
   125a0:	ldr	r2, [r0]
   125a4:	str	r1, [r6]
   125a8:	add	r4, r4, #1
   125ac:	cmp	r5, r4
   125b0:	bne	12518 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x64>
   125b4:	mov	r4, r5
   125b8:	b	125c8 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x114>
   125bc:	mov	r4, #0
   125c0:	b	125cc <mycore_incoming_buffer_escaped_case_cmp@@Base+0x118>
   125c4:	add	r4, r4, #1
   125c8:	ldr	r0, [sp]
   125cc:	sub	r5, r5, r4
   125d0:	str	r0, [r9]
   125d4:	mov	r0, r5
   125d8:	sub	sp, fp, #28
   125dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   125e0:	andeq	fp, r1, ip, lsr r2

000125e4 <mycore_string_init@@Base>:
   125e4:	push	{r4, r5, r6, r7, fp, lr}
   125e8:	add	fp, sp, #16
   125ec:	mov	r5, r2
   125f0:	mov	r2, r3
   125f4:	mov	r4, r3
   125f8:	mov	r6, r1
   125fc:	mov	r7, r0
   12600:	bl	11adc <mchar_async_malloc@plt>
   12604:	mov	r1, #0
   12608:	stm	r5, {r0, r4}
   1260c:	str	r1, [r5, #8]
   12610:	str	r7, [r5, #12]
   12614:	str	r6, [r5, #16]
   12618:	pop	{r4, r5, r6, r7, fp, pc}

0001261c <mycore_string_clean@@Base>:
   1261c:	mov	r1, #0
   12620:	str	r1, [r0, #8]
   12624:	bx	lr

00012628 <mycore_string_clean_all@@Base>:
   12628:	vmov.i32	q8, #0	; 0x00000000
   1262c:	mov	r1, #0
   12630:	vst1.32	{d16-d17}, [r0]!
   12634:	str	r1, [r0]
   12638:	bx	lr

0001263c <mycore_string_destroy@@Base>:
   1263c:	push	{r4, r5, r6, sl, fp, lr}
   12640:	add	fp, sp, #16
   12644:	mov	r4, #0
   12648:	cmp	r0, #0
   1264c:	beq	12690 <mycore_string_destroy@@Base+0x54>
   12650:	ldr	r2, [r0]
   12654:	mov	r6, r1
   12658:	mov	r5, r0
   1265c:	cmp	r2, #0
   12660:	beq	12678 <mycore_string_destroy@@Base+0x3c>
   12664:	ldr	r0, [r5, #12]
   12668:	cmp	r0, #0
   1266c:	beq	12678 <mycore_string_destroy@@Base+0x3c>
   12670:	ldr	r1, [r5, #16]
   12674:	bl	11938 <mchar_async_free@plt>
   12678:	cmp	r6, #0
   1267c:	beq	1268c <mycore_string_destroy@@Base+0x50>
   12680:	mov	r0, r5
   12684:	bl	11eb4 <mycore_free@plt>
   12688:	b	12690 <mycore_string_destroy@@Base+0x54>
   1268c:	mov	r4, r5
   12690:	mov	r0, r4
   12694:	pop	{r4, r5, r6, sl, fp, pc}

00012698 <mycore_string_raw_clean@@Base>:
   12698:	mov	r1, #0
   1269c:	str	r1, [r0, #8]
   126a0:	bx	lr

000126a4 <mycore_string_raw_clean_all@@Base>:
   126a4:	mov	r1, #0
   126a8:	str	r1, [r0]
   126ac:	str	r1, [r0, #4]
   126b0:	str	r1, [r0, #8]
   126b4:	bx	lr

000126b8 <mycore_string_raw_destroy@@Base>:
   126b8:	push	{r4, r5, r6, sl, fp, lr}
   126bc:	add	fp, sp, #16
   126c0:	mov	r4, #0
   126c4:	cmp	r0, #0
   126c8:	beq	12704 <mycore_string_raw_destroy@@Base+0x4c>
   126cc:	mov	r5, r0
   126d0:	ldr	r0, [r0]
   126d4:	mov	r6, r1
   126d8:	cmp	r0, #0
   126dc:	beq	126ec <mycore_string_raw_destroy@@Base+0x34>
   126e0:	bl	11eb4 <mycore_free@plt>
   126e4:	mov	r0, #0
   126e8:	str	r0, [r5]
   126ec:	cmp	r6, #0
   126f0:	beq	12700 <mycore_string_raw_destroy@@Base+0x48>
   126f4:	mov	r0, r5
   126f8:	bl	11eb4 <mycore_free@plt>
   126fc:	b	12704 <mycore_string_raw_destroy@@Base+0x4c>
   12700:	mov	r4, r5
   12704:	mov	r0, r4
   12708:	pop	{r4, r5, r6, sl, fp, pc}

0001270c <mycore_string_realloc@@Base>:
   1270c:	push	{r4, r5, r6, sl, fp, lr}
   12710:	add	fp, sp, #16
   12714:	sub	sp, sp, #8
   12718:	mov	r4, #0
   1271c:	cmp	r0, #0
   12720:	beq	12750 <mycore_string_realloc@@Base+0x44>
   12724:	mov	r6, r0
   12728:	mov	r5, r1
   1272c:	ldr	r2, [r0]
   12730:	ldr	r3, [r0, #8]
   12734:	ldr	r0, [r0, #12]
   12738:	ldr	r1, [r6, #16]
   1273c:	str	r5, [sp]
   12740:	bl	112f0 <mchar_async_realloc@plt>
   12744:	cmp	r0, #0
   12748:	movne	r4, r0
   1274c:	stmne	r6, {r0, r5}
   12750:	mov	r0, r4
   12754:	sub	sp, fp, #16
   12758:	pop	{r4, r5, r6, sl, fp, pc}

0001275c <mycore_string_data_alloc@@Base>:
   1275c:	b	11adc <mchar_async_malloc@plt>

00012760 <mycore_string_data_realloc@@Base>:
   12760:	b	112f0 <mchar_async_realloc@plt>

00012764 <mycore_string_data_free@@Base>:
   12764:	b	11938 <mchar_async_free@plt>

00012768 <mycore_string_data@@Base>:
   12768:	cmp	r0, #0
   1276c:	ldrne	r0, [r0]
   12770:	moveq	r0, #0
   12774:	bx	lr

00012778 <mycore_string_length@@Base>:
   12778:	cmp	r0, #0
   1277c:	ldrne	r0, [r0, #8]
   12780:	moveq	r0, #0
   12784:	bx	lr

00012788 <mycore_string_size@@Base>:
   12788:	cmp	r0, #0
   1278c:	ldrne	r0, [r0, #4]
   12790:	moveq	r0, #0
   12794:	bx	lr

00012798 <mycore_string_data_set@@Base>:
   12798:	cmp	r0, #0
   1279c:	strne	r1, [r0]
   127a0:	moveq	r1, #0
   127a4:	mov	r0, r1
   127a8:	bx	lr

000127ac <mycore_string_size_set@@Base>:
   127ac:	cmp	r0, #0
   127b0:	strne	r1, [r0, #4]
   127b4:	moveq	r1, #0
   127b8:	mov	r0, r1
   127bc:	bx	lr

000127c0 <mycore_string_length_set@@Base>:
   127c0:	cmp	r0, #0
   127c4:	strne	r1, [r0, #8]
   127c8:	moveq	r1, #0
   127cc:	mov	r0, r1
   127d0:	bx	lr

000127d4 <mycore_string_append@@Base>:
   127d4:	push	{r4, r5, r6, sl, fp, lr}
   127d8:	add	fp, sp, #16
   127dc:	mov	r4, r2
   127e0:	mov	r5, r0
   127e4:	ldr	r2, [r0, #4]
   127e8:	ldr	r0, [r0, #8]
   127ec:	mov	r6, r1
   127f0:	add	r1, r4, r0
   127f4:	add	r1, r1, #1
   127f8:	cmp	r1, r2
   127fc:	bcc	1280c <mycore_string_append@@Base+0x38>
   12800:	mov	r0, r5
   12804:	bl	11b24 <mycore_string_realloc@plt>
   12808:	ldr	r0, [r5, #8]
   1280c:	ldr	r1, [r5]
   12810:	mov	r2, r4
   12814:	add	r0, r1, r0
   12818:	mov	r1, r6
   1281c:	bl	11290 <memcpy@plt>
   12820:	ldr	r1, [r5, #8]
   12824:	ldr	r0, [r5]
   12828:	mov	r2, #0
   1282c:	add	r1, r1, r4
   12830:	str	r1, [r5, #8]
   12834:	strb	r2, [r0, r1]
   12838:	pop	{r4, r5, r6, sl, fp, pc}

0001283c <mycore_string_append_one@@Base>:
   1283c:	push	{r4, r5, fp, lr}
   12840:	add	fp, sp, #8
   12844:	mov	r5, r1
   12848:	mov	r4, r0
   1284c:	ldr	r1, [r0, #4]
   12850:	ldr	r0, [r0, #8]
   12854:	add	r2, r0, #2
   12858:	cmp	r2, r1
   1285c:	bcc	12870 <mycore_string_append_one@@Base+0x34>
   12860:	add	r1, r0, #3
   12864:	mov	r0, r4
   12868:	bl	11b24 <mycore_string_realloc@plt>
   1286c:	ldr	r0, [r4, #8]
   12870:	ldr	r1, [r4]
   12874:	mov	r2, #0
   12878:	strb	r5, [r1, r0]
   1287c:	ldr	r1, [r4, #8]
   12880:	ldr	r0, [r4]
   12884:	add	r1, r1, #1
   12888:	str	r1, [r4, #8]
   1288c:	strb	r2, [r0, r1]
   12890:	pop	{r4, r5, fp, pc}

00012894 <mycore_string_append_lowercase@@Base>:
   12894:	push	{r4, r5, r6, sl, fp, lr}
   12898:	add	fp, sp, #16
   1289c:	mov	r4, r2
   128a0:	mov	r5, r0
   128a4:	ldr	r2, [r0, #4]
   128a8:	ldr	r0, [r0, #8]
   128ac:	mov	r6, r1
   128b0:	add	r1, r4, r0
   128b4:	add	r1, r1, #1
   128b8:	cmp	r1, r2
   128bc:	bcc	128cc <mycore_string_append_lowercase@@Base+0x38>
   128c0:	mov	r0, r5
   128c4:	bl	11b24 <mycore_string_realloc@plt>
   128c8:	ldr	r0, [r5, #8]
   128cc:	ldr	r1, [r5]
   128d0:	cmp	r4, #0
   128d4:	add	ip, r1, r0
   128d8:	beq	12900 <mycore_string_append_lowercase@@Base+0x6c>
   128dc:	ldr	r1, [pc, #52]	; 12918 <mycore_string_append_lowercase@@Base+0x84>
   128e0:	mov	r2, ip
   128e4:	mov	r3, r4
   128e8:	add	r1, pc, r1
   128ec:	ldrb	r0, [r6], #1
   128f0:	subs	r3, r3, #1
   128f4:	ldrb	r0, [r1, r0]
   128f8:	strb	r0, [r2], #1
   128fc:	bne	128ec <mycore_string_append_lowercase@@Base+0x58>
   12900:	mov	r0, #0
   12904:	strb	r0, [ip, r4]
   12908:	ldr	r0, [r5, #8]
   1290c:	add	r0, r0, r4
   12910:	str	r0, [r5, #8]
   12914:	pop	{r4, r5, r6, sl, fp, pc}
   12918:	andeq	sl, r1, r8, ror #30

0001291c <mycore_string_copy@@Base>:
   1291c:	ldr	r3, [r1]
   12920:	ldr	r2, [r1, #8]
   12924:	mov	r1, r3
   12928:	b	127d4 <mycore_string_append@@Base>

0001292c <mycore_string_raw_copy@@Base>:
   1292c:	mov	r3, #0
   12930:	cmp	r2, #0
   12934:	strb	r3, [r0, r2]
   12938:	beq	12954 <mycore_string_raw_copy@@Base+0x28>
   1293c:	sub	r1, r1, #1
   12940:	sub	r0, r0, #1
   12944:	ldrb	r3, [r1, r2]
   12948:	strb	r3, [r0, r2]
   1294c:	subs	r2, r2, #1
   12950:	bne	12944 <mycore_string_raw_copy@@Base+0x18>
   12954:	mov	r0, #0
   12958:	bx	lr

0001295c <mycore_string_raw_set_replacement_character@@Base>:
   1295c:	ldr	r2, [r0]
   12960:	mov	r3, #239	; 0xef
   12964:	strb	r3, [r2, r1]
   12968:	mov	r3, #191	; 0xbf
   1296c:	ldr	r2, [r0]
   12970:	add	r2, r1, r2
   12974:	strb	r3, [r2, #1]
   12978:	ldr	r0, [r0]
   1297c:	add	r0, r1, r0
   12980:	mov	r1, #189	; 0xbd
   12984:	strb	r1, [r0, #2]
   12988:	mov	r0, #3
   1298c:	bx	lr

00012990 <mycore_string_append_with_replacement_null_characters@@Base>:
   12990:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12994:	add	fp, sp, #24
   12998:	mov	r4, r0
   1299c:	mov	r6, r1
   129a0:	ldr	r0, [r0, #4]
   129a4:	mov	r5, r2
   129a8:	ldr	r1, [r4, #8]
   129ac:	add	r1, r2, r1
   129b0:	add	r1, r1, #1
   129b4:	cmp	r1, r0
   129b8:	movcs	r0, r4
   129bc:	blcs	11b24 <mycore_string_realloc@plt>
   129c0:	ldr	r0, [r4]
   129c4:	cmp	r5, #0
   129c8:	beq	12a50 <mycore_string_append_with_replacement_null_characters@@Base+0xc0>
   129cc:	mov	r8, #239	; 0xef
   129d0:	mov	r7, #191	; 0xbf
   129d4:	ldrb	r1, [r6]
   129d8:	cmp	r1, #0
   129dc:	beq	129ec <mycore_string_append_with_replacement_null_characters@@Base+0x5c>
   129e0:	ldr	r2, [r4, #8]
   129e4:	add	r2, r0, r2
   129e8:	b	12a2c <mycore_string_append_with_replacement_null_characters@@Base+0x9c>
   129ec:	ldr	r0, [r4, #4]
   129f0:	add	r1, r0, #5
   129f4:	mov	r0, r4
   129f8:	bl	11b24 <mycore_string_realloc@plt>
   129fc:	ldr	r0, [r4]
   12a00:	ldr	r1, [r4, #8]
   12a04:	strb	r8, [r0, r1]
   12a08:	ldr	r1, [r4, #8]
   12a0c:	add	r1, r1, #1
   12a10:	str	r1, [r4, #8]
   12a14:	strb	r7, [r0, r1]
   12a18:	ldr	r1, [r4, #8]
   12a1c:	add	r1, r1, #1
   12a20:	str	r1, [r4, #8]
   12a24:	add	r2, r0, r1
   12a28:	mov	r1, #189	; 0xbd
   12a2c:	strb	r1, [r2]
   12a30:	add	r6, r6, #1
   12a34:	subs	r5, r5, #1
   12a38:	ldr	r1, [r4, #8]
   12a3c:	add	r1, r1, #1
   12a40:	str	r1, [r4, #8]
   12a44:	bne	129d4 <mycore_string_append_with_replacement_null_characters@@Base+0x44>
   12a48:	ldr	r0, [r4]
   12a4c:	b	12a54 <mycore_string_append_with_replacement_null_characters@@Base+0xc4>
   12a50:	ldr	r1, [r4, #8]
   12a54:	mov	r2, #0
   12a58:	strb	r2, [r0, r1]
   12a5c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012a60 <mycore_string_stay_only_whitespace@@Base>:
   12a60:	push	{r4, r5, r6, sl, fp, lr}
   12a64:	add	fp, sp, #16
   12a68:	ldr	r2, [r0, #8]
   12a6c:	cmp	r2, #0
   12a70:	beq	12abc <mycore_string_stay_only_whitespace@@Base+0x5c>
   12a74:	ldr	ip, [r0]
   12a78:	movw	r4, #27
   12a7c:	mov	r3, #0
   12a80:	mov	lr, #1
   12a84:	mov	r1, #0
   12a88:	movt	r4, #128	; 0x80
   12a8c:	ldrb	r5, [ip, r3]
   12a90:	sub	r6, r5, #9
   12a94:	cmp	r6, #23
   12a98:	bhi	12aac <mycore_string_stay_only_whitespace@@Base+0x4c>
   12a9c:	tst	r4, lr, lsl r6
   12aa0:	strbne	r5, [ip, r1]
   12aa4:	addne	r1, r1, #1
   12aa8:	ldrne	r2, [r0, #8]
   12aac:	add	r3, r3, #1
   12ab0:	cmp	r3, r2
   12ab4:	bcc	12a8c <mycore_string_stay_only_whitespace@@Base+0x2c>
   12ab8:	b	12ac0 <mycore_string_stay_only_whitespace@@Base+0x60>
   12abc:	mov	r1, #0
   12ac0:	str	r1, [r0, #8]
   12ac4:	pop	{r4, r5, r6, sl, fp, pc}

00012ac8 <mycore_string_crop_whitespace_from_begin@@Base>:
   12ac8:	push	{r4, r5, r6, sl, fp, lr}
   12acc:	add	fp, sp, #16
   12ad0:	ldr	r1, [r0, #8]
   12ad4:	mov	r6, r0
   12ad8:	cmp	r1, #0
   12adc:	beq	12b1c <mycore_string_crop_whitespace_from_begin@@Base+0x54>
   12ae0:	ldr	r0, [r6]
   12ae4:	movw	r3, #27
   12ae8:	mov	r5, #0
   12aec:	mov	r2, #1
   12af0:	movt	r3, #128	; 0x80
   12af4:	ldrb	r4, [r0, r5]
   12af8:	sub	r4, r4, #9
   12afc:	cmp	r4, #23
   12b00:	bhi	12b28 <mycore_string_crop_whitespace_from_begin@@Base+0x60>
   12b04:	tst	r3, r2, lsl r4
   12b08:	beq	12b28 <mycore_string_crop_whitespace_from_begin@@Base+0x60>
   12b0c:	add	r5, r5, #1
   12b10:	cmp	r5, r1
   12b14:	bcc	12af4 <mycore_string_crop_whitespace_from_begin@@Base+0x2c>
   12b18:	b	12b30 <mycore_string_crop_whitespace_from_begin@@Base+0x68>
   12b1c:	mov	r5, #0
   12b20:	mov	r1, #0
   12b24:	b	12b40 <mycore_string_crop_whitespace_from_begin@@Base+0x78>
   12b28:	cmp	r5, #0
   12b2c:	beq	12b50 <mycore_string_crop_whitespace_from_begin@@Base+0x88>
   12b30:	mov	r1, r5
   12b34:	bl	11d7c <mchar_async_crop_first_chars_without_cache@plt>
   12b38:	str	r0, [r6]
   12b3c:	ldr	r1, [r6, #8]
   12b40:	sub	r0, r1, r5
   12b44:	str	r0, [r6, #8]
   12b48:	mov	r0, r5
   12b4c:	pop	{r4, r5, r6, sl, fp, pc}
   12b50:	mov	r5, #0
   12b54:	b	12b40 <mycore_string_crop_whitespace_from_begin@@Base+0x78>

00012b58 <mycore_string_whitespace_from_begin@@Base>:
   12b58:	push	{fp, lr}
   12b5c:	mov	fp, sp
   12b60:	ldr	r1, [r0, #8]
   12b64:	cmp	r1, #0
   12b68:	beq	12ba8 <mycore_string_whitespace_from_begin@@Base+0x50>
   12b6c:	ldr	r2, [r0]
   12b70:	movw	lr, #27
   12b74:	mov	r0, #0
   12b78:	mov	ip, #1
   12b7c:	movt	lr, #128	; 0x80
   12b80:	ldrb	r3, [r2, r0]
   12b84:	sub	r3, r3, #9
   12b88:	cmp	r3, #23
   12b8c:	bhi	12ba4 <mycore_string_whitespace_from_begin@@Base+0x4c>
   12b90:	tst	lr, ip, lsl r3
   12b94:	beq	12ba4 <mycore_string_whitespace_from_begin@@Base+0x4c>
   12b98:	add	r0, r0, #1
   12b9c:	cmp	r0, r1
   12ba0:	bcc	12b80 <mycore_string_whitespace_from_begin@@Base+0x28>
   12ba4:	pop	{fp, pc}
   12ba8:	mov	r0, #0
   12bac:	pop	{fp, pc}

00012bb0 <mythread_create@@Base>:
   12bb0:	mov	r0, #1
   12bb4:	mov	r1, #40	; 0x28
   12bb8:	b	11248 <mycore_calloc@plt>

00012bbc <mythread_init@@Base>:
   12bbc:	push	{r4, sl, fp, lr}
   12bc0:	add	fp, sp, #8
   12bc4:	cmp	r2, #0
   12bc8:	beq	12c1c <mythread_init@@Base+0x60>
   12bcc:	str	r1, [r0, #32]
   12bd0:	mov	r4, r0
   12bd4:	mov	r0, #0
   12bd8:	mov	r1, #40	; 0x28
   12bdc:	stmib	r4, {r0, r2, r3}
   12be0:	mov	r0, r2
   12be4:	bl	11248 <mycore_calloc@plt>
   12be8:	cmp	r0, #0
   12bec:	str	r0, [r4]
   12bf0:	beq	12c24 <mythread_init@@Base+0x68>
   12bf4:	mov	r0, r4
   12bf8:	bl	111c4 <mythread_thread_attr_init@plt>
   12bfc:	cmp	r0, #0
   12c00:	str	r0, [r4, #20]
   12c04:	beq	12c2c <mythread_init@@Base+0x70>
   12c08:	mov	r0, r4
   12c0c:	bl	11038 <mythread_nanosleep_create@plt>
   12c10:	str	r0, [r4, #24]
   12c14:	mov	r0, #0
   12c18:	pop	{r4, sl, fp, pc}
   12c1c:	mov	r0, #1
   12c20:	pop	{r4, sl, fp, pc}
   12c24:	mov	r0, #2
   12c28:	pop	{r4, sl, fp, pc}
   12c2c:	mov	r0, #12
   12c30:	pop	{r4, sl, fp, pc}

00012c34 <mythread_clean@@Base>:
   12c34:	push	{r4, sl, fp, lr}
   12c38:	add	fp, sp, #8
   12c3c:	ldr	r1, [r0, #20]
   12c40:	mov	r4, r0
   12c44:	bl	11680 <mythread_thread_attr_clean@plt>
   12c48:	ldr	r0, [r4, #24]
   12c4c:	bl	10ff0 <mythread_nanosleep_clean@plt>
   12c50:	mov	r0, #0
   12c54:	str	r0, [r4, #28]
   12c58:	pop	{r4, sl, fp, pc}

00012c5c <mythread_destroy@@Base>:
   12c5c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12c60:	add	fp, sp, #24
   12c64:	mov	r4, #0
   12c68:	cmp	r0, #0
   12c6c:	beq	12cdc <mythread_destroy@@Base+0x80>
   12c70:	mov	r5, r0
   12c74:	ldr	r0, [r0]
   12c78:	mov	r8, r3
   12c7c:	cmp	r0, #0
   12c80:	beq	12cb0 <mythread_destroy@@Base+0x54>
   12c84:	mov	r6, r1
   12c88:	mov	r0, r5
   12c8c:	mov	r1, #2
   12c90:	mov	r7, r2
   12c94:	bl	11728 <mythread_resume@plt>
   12c98:	mov	r0, r5
   12c9c:	mov	r1, r6
   12ca0:	mov	r2, r7
   12ca4:	bl	117e8 <mythread_quit@plt>
   12ca8:	ldr	r0, [r5]
   12cac:	bl	11eb4 <mycore_free@plt>
   12cb0:	ldr	r1, [r5, #20]
   12cb4:	mov	r0, r5
   12cb8:	bl	1210c <mythread_thread_attr_destroy@plt>
   12cbc:	ldr	r0, [r5, #24]
   12cc0:	bl	11d1c <mythread_nanosleep_destroy@plt>
   12cc4:	cmp	r8, #0
   12cc8:	beq	12cd8 <mythread_destroy@@Base+0x7c>
   12ccc:	mov	r0, r5
   12cd0:	bl	11eb4 <mycore_free@plt>
   12cd4:	b	12cdc <mythread_destroy@@Base+0x80>
   12cd8:	mov	r4, r5
   12cdc:	mov	r0, r4
   12ce0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012ce4 <mythread_resume@@Base>:
   12ce4:	push	{r4, r5, r6, r7, fp, lr}
   12ce8:	add	fp, sp, #16
   12cec:	mov	r4, r1
   12cf0:	ldr	r1, [r0, #36]	; 0x24
   12cf4:	mov	r5, r0
   12cf8:	str	r4, [r0, #36]	; 0x24
   12cfc:	mov	r0, #0
   12d00:	tst	r1, #1
   12d04:	bne	12d60 <mythread_resume@@Base+0x7c>
   12d08:	ldr	r1, [r5, #4]
   12d0c:	cmp	r1, #0
   12d10:	beq	12d60 <mythread_resume@@Base+0x7c>
   12d14:	mov	r6, #0
   12d18:	mov	r7, #0
   12d1c:	ldr	r0, [r5]
   12d20:	add	r0, r0, r6
   12d24:	ldr	r2, [r0, #16]
   12d28:	tst	r2, #4
   12d2c:	beq	12d4c <mythread_resume@@Base+0x68>
   12d30:	str	r4, [r0, #16]
   12d34:	ldr	r1, [r0, #24]
   12d38:	mov	r0, r5
   12d3c:	bl	11e00 <mythread_mutex_post@plt>
   12d40:	cmp	r0, #0
   12d44:	bne	12d64 <mythread_resume@@Base+0x80>
   12d48:	ldr	r1, [r5, #4]
   12d4c:	add	r7, r7, #1
   12d50:	add	r6, r6, #40	; 0x28
   12d54:	cmp	r7, r1
   12d58:	bcc	12d1c <mythread_resume@@Base+0x38>
   12d5c:	mov	r0, #0
   12d60:	pop	{r4, r5, r6, r7, fp, pc}
   12d64:	mov	r0, #1
   12d68:	pop	{r4, r5, r6, r7, fp, pc}

00012d6c <mythread_quit@@Base>:
   12d6c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12d70:	add	fp, sp, #24
   12d74:	mov	r6, r0
   12d78:	mov	r0, #2
   12d7c:	str	r0, [r6, #36]	; 0x24
   12d80:	ldr	r0, [r6, #4]
   12d84:	cmp	r0, #0
   12d88:	beq	12e00 <mythread_quit@@Base+0x94>
   12d8c:	mov	r8, r2
   12d90:	mov	r9, r1
   12d94:	mov	r4, #0
   12d98:	mov	r5, #0
   12d9c:	mov	r7, #1
   12da0:	cmp	r9, #0
   12da4:	beq	12dbc <mythread_quit@@Base+0x50>
   12da8:	ldr	r0, [r6]
   12dac:	mov	r2, r8
   12db0:	add	r1, r0, r4
   12db4:	mov	r0, r6
   12db8:	blx	r9
   12dbc:	ldr	r0, [r6]
   12dc0:	ldr	r1, [r0, r4]
   12dc4:	mov	r0, r6
   12dc8:	bl	117d0 <mythread_thread_join@plt>
   12dcc:	cmp	r0, #0
   12dd0:	bne	12e04 <mythread_quit@@Base+0x98>
   12dd4:	ldr	r0, [r6]
   12dd8:	ldr	r1, [r0, r4]
   12ddc:	mov	r0, r6
   12de0:	bl	11b90 <mythread_thread_destroy@plt>
   12de4:	cmp	r0, #0
   12de8:	bne	12e04 <mythread_quit@@Base+0x98>
   12dec:	ldr	r0, [r6, #4]
   12df0:	add	r5, r5, #1
   12df4:	add	r4, r4, #40	; 0x28
   12df8:	cmp	r5, r0
   12dfc:	bcc	12da0 <mythread_quit@@Base+0x34>
   12e00:	mov	r7, #0
   12e04:	mov	r0, r7
   12e08:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012e0c <myhread_entry_create@@Base>:
   12e0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e10:	add	fp, sp, #28
   12e14:	sub	sp, sp, #4
   12e18:	mov	r6, #0
   12e1c:	mov	r8, r1
   12e20:	mov	r4, r0
   12e24:	str	r6, [r0, #28]
   12e28:	ldmib	r0, {r1, r5}
   12e2c:	mov	r0, #15
   12e30:	cmp	r1, r5
   12e34:	bcs	12ef0 <myhread_entry_create@@Base+0xe4>
   12e38:	ldr	r9, [r4]
   12e3c:	add	sl, r1, r1, lsl #2
   12e40:	mov	r0, r4
   12e44:	add	r7, r9, sl, lsl #3
   12e48:	str	r5, [r7, #12]
   12e4c:	str	r2, [r7, #8]
   12e50:	str	r4, [r7, #32]
   12e54:	str	r6, [r7, #20]
   12e58:	mov	r6, r7
   12e5c:	str	r3, [r7, #16]
   12e60:	str	r1, [r6, #4]!
   12e64:	bl	11038 <mythread_nanosleep_create@plt>
   12e68:	str	r0, [r7, #28]
   12e6c:	mov	r0, r4
   12e70:	bl	11c68 <mythread_mutex_create@plt>
   12e74:	str	r0, [r7, #24]!
   12e78:	cmp	r0, #0
   12e7c:	beq	12ea8 <myhread_entry_create@@Base+0x9c>
   12e80:	mov	r1, r0
   12e84:	mov	r0, r4
   12e88:	bl	11e84 <mythread_mutex_wait@plt>
   12e8c:	cmp	r0, #0
   12e90:	beq	12eb0 <myhread_entry_create@@Base+0xa4>
   12e94:	ldr	r1, [r7]
   12e98:	mov	r0, r4
   12e9c:	bl	11860 <mythread_mutex_close@plt>
   12ea0:	mov	r0, #72	; 0x48
   12ea4:	b	12ef0 <myhread_entry_create@@Base+0xe4>
   12ea8:	mov	r0, #71	; 0x47
   12eac:	b	12ef0 <myhread_entry_create@@Base+0xe4>
   12eb0:	mov	r0, r4
   12eb4:	mov	r1, r8
   12eb8:	mov	r2, r6
   12ebc:	bl	11104 <mythread_thread_create@plt>
   12ec0:	cmp	r0, #0
   12ec4:	str	r0, [r9, sl, lsl #3]
   12ec8:	beq	12ee0 <myhread_entry_create@@Base+0xd4>
   12ecc:	ldr	r0, [r4, #4]
   12ed0:	add	r0, r0, #1
   12ed4:	str	r0, [r4, #4]
   12ed8:	mov	r0, #0
   12edc:	b	12ef0 <myhread_entry_create@@Base+0xe4>
   12ee0:	ldr	r1, [r7]
   12ee4:	mov	r0, r4
   12ee8:	bl	11860 <mythread_mutex_close@plt>
   12eec:	mov	r0, #1
   12ef0:	sub	sp, fp, #28
   12ef4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012ef8 <myhread_increase_id_by_entry_id@@Base>:
   12ef8:	ldr	r0, [r0, #12]
   12efc:	add	r0, r0, r1
   12f00:	bx	lr

00012f04 <mythread_join@@Base>:
   12f04:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12f08:	add	fp, sp, #24
   12f0c:	mov	r6, r0
   12f10:	ldr	r0, [r0, #4]
   12f14:	cmp	r0, #0
   12f18:	beq	12f74 <mythread_join@@Base+0x70>
   12f1c:	mov	r8, r2
   12f20:	mov	r5, r1
   12f24:	mov	r7, #0
   12f28:	mov	r4, #0
   12f2c:	cmp	r5, #0
   12f30:	beq	12f48 <mythread_join@@Base+0x44>
   12f34:	ldr	r0, [r6]
   12f38:	mov	r2, r8
   12f3c:	add	r1, r0, r7
   12f40:	mov	r0, r6
   12f44:	blx	r5
   12f48:	ldr	r0, [r6]
   12f4c:	ldr	r1, [r0, r7]
   12f50:	mov	r0, r6
   12f54:	bl	117d0 <mythread_thread_join@plt>
   12f58:	cmp	r0, #0
   12f5c:	bne	12f7c <mythread_join@@Base+0x78>
   12f60:	ldr	r0, [r6, #4]
   12f64:	add	r4, r4, #1
   12f68:	add	r7, r7, #40	; 0x28
   12f6c:	cmp	r4, r0
   12f70:	bcc	12f2c <mythread_join@@Base+0x28>
   12f74:	mov	r0, #0
   12f78:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12f7c:	mov	r0, #1
   12f80:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012f84 <mythread_option_set@@Base>:
   12f84:	str	r1, [r0, #36]	; 0x24
   12f88:	bx	lr

00012f8c <mythread_stop@@Base>:
   12f8c:	push	{r4, r5, r6, sl, fp, lr}
   12f90:	add	fp, sp, #16
   12f94:	mov	r4, r0
   12f98:	ldr	r0, [r0, #36]	; 0x24
   12f9c:	tst	r0, #4
   12fa0:	bne	13000 <mythread_stop@@Base+0x74>
   12fa4:	mov	r0, #4
   12fa8:	str	r0, [r4, #36]	; 0x24
   12fac:	ldr	r1, [r4, #4]
   12fb0:	cmp	r1, #0
   12fb4:	beq	13000 <mythread_stop@@Base+0x74>
   12fb8:	ldr	r0, [r4]
   12fbc:	mov	r5, #0
   12fc0:	add	r6, r5, r5, lsl #2
   12fc4:	add	r2, r0, r6, lsl #3
   12fc8:	ldr	r2, [r2, #16]
   12fcc:	tst	r2, #4
   12fd0:	bne	12ff4 <mythread_stop@@Base+0x68>
   12fd4:	ldr	r0, [r4, #24]
   12fd8:	bl	113a4 <mythread_nanosleep_sleep@plt>
   12fdc:	ldr	r0, [r4]
   12fe0:	add	r1, r0, r6, lsl #3
   12fe4:	ldr	r1, [r1, #16]
   12fe8:	tst	r1, #4
   12fec:	beq	12fd4 <mythread_stop@@Base+0x48>
   12ff0:	ldr	r1, [r4, #4]
   12ff4:	add	r5, r5, #1
   12ff8:	cmp	r5, r1
   12ffc:	bcc	12fc0 <mythread_stop@@Base+0x34>
   13000:	mov	r0, #0
   13004:	pop	{r4, r5, r6, sl, fp, pc}

00013008 <mythread_suspend@@Base>:
   13008:	push	{r4, r5, r6, sl, fp, lr}
   1300c:	add	fp, sp, #16
   13010:	mov	r4, r0
   13014:	ldr	r0, [r0, #36]	; 0x24
   13018:	tst	r0, #1
   1301c:	bne	13090 <mythread_suspend@@Base+0x88>
   13020:	mov	r0, #1
   13024:	str	r0, [r4, #36]	; 0x24
   13028:	ldr	r1, [r4, #4]
   1302c:	cmp	r1, #0
   13030:	beq	13090 <mythread_suspend@@Base+0x88>
   13034:	ldr	r0, [r4]
   13038:	mov	r5, #0
   1303c:	add	r6, r5, r5, lsl #2
   13040:	add	r2, r0, r6, lsl #3
   13044:	ldr	r3, [r2, #16]!
   13048:	tst	r3, #4
   1304c:	bne	13084 <mythread_suspend@@Base+0x7c>
   13050:	ldr	r1, [r2]
   13054:	tst	r1, #1
   13058:	bne	13080 <mythread_suspend@@Base+0x78>
   1305c:	ldr	r0, [r4, #24]
   13060:	bl	113a4 <mythread_nanosleep_sleep@plt>
   13064:	ldr	r0, [r4]
   13068:	add	r1, r0, r6, lsl #3
   1306c:	ldr	r2, [r1, #16]!
   13070:	tst	r2, #4
   13074:	bne	13080 <mythread_suspend@@Base+0x78>
   13078:	ldr	r1, [r1]
   1307c:	b	13054 <mythread_suspend@@Base+0x4c>
   13080:	ldr	r1, [r4, #4]
   13084:	add	r5, r5, #1
   13088:	cmp	r5, r1
   1308c:	bcc	1303c <mythread_suspend@@Base+0x34>
   13090:	mov	r0, #0
   13094:	pop	{r4, r5, r6, sl, fp, pc}

00013098 <mythread_check_status@@Base>:
   13098:	ldr	r1, [r0, #4]
   1309c:	cmp	r1, #0
   130a0:	beq	130cc <mythread_check_status@@Base+0x34>
   130a4:	ldr	r0, [r0]
   130a8:	mov	r3, #0
   130ac:	add	r2, r0, #20
   130b0:	ldr	r0, [r2]
   130b4:	cmp	r0, #0
   130b8:	bxne	lr
   130bc:	add	r3, r3, #1
   130c0:	add	r2, r2, #40	; 0x28
   130c4:	cmp	r3, r1
   130c8:	bcc	130b0 <mythread_check_status@@Base+0x18>
   130cc:	mov	r0, #0
   130d0:	bx	lr

000130d4 <mythread_option@@Base>:
   130d4:	ldr	r0, [r0, #36]	; 0x24
   130d8:	bx	lr

000130dc <mythread_entry_join@@Base>:
   130dc:	push	{r4, sl, fp, lr}
   130e0:	add	fp, sp, #8
   130e4:	mov	r4, r0
   130e8:	cmp	r1, #0
   130ec:	beq	13100 <mythread_entry_join@@Base+0x24>
   130f0:	ldr	r0, [r4, #32]
   130f4:	mov	r3, r1
   130f8:	mov	r1, r4
   130fc:	blx	r3
   13100:	ldr	r1, [r4]
   13104:	ldr	r0, [r4, #32]
   13108:	bl	117d0 <mythread_thread_join@plt>
   1310c:	cmp	r0, #0
   13110:	movwne	r0, #1
   13114:	pop	{r4, sl, fp, pc}

00013118 <mythread_entry_quit@@Base>:
   13118:	push	{r4, sl, fp, lr}
   1311c:	add	fp, sp, #8
   13120:	mov	r4, r0
   13124:	cmp	r1, #0
   13128:	beq	1313c <mythread_entry_quit@@Base+0x24>
   1312c:	ldr	r0, [r4, #32]
   13130:	mov	r3, r1
   13134:	mov	r1, r4
   13138:	blx	r3
   1313c:	ldr	r1, [r4]
   13140:	ldr	r0, [r4, #32]
   13144:	bl	117d0 <mythread_thread_join@plt>
   13148:	cmp	r0, #0
   1314c:	movne	r0, #1
   13150:	popne	{r4, sl, fp, pc}
   13154:	ldr	r1, [r4]
   13158:	ldr	r0, [r4, #32]
   1315c:	bl	11b90 <mythread_thread_destroy@plt>
   13160:	cmp	r0, #0
   13164:	movwne	r0, #1
   13168:	pop	{r4, sl, fp, pc}

0001316c <mythread_entry_stop@@Base>:
   1316c:	push	{r4, sl, fp, lr}
   13170:	add	fp, sp, #8
   13174:	mov	r4, r0
   13178:	ldr	r0, [r0, #16]
   1317c:	tst	r0, #4
   13180:	bne	131a8 <mythread_entry_stop@@Base+0x3c>
   13184:	mov	r0, #4
   13188:	str	r0, [r4, #16]
   1318c:	ldr	r0, [r4, #16]
   13190:	tst	r0, #4
   13194:	bne	131a8 <mythread_entry_stop@@Base+0x3c>
   13198:	ldr	r0, [r4, #32]
   1319c:	ldr	r0, [r0, #24]
   131a0:	bl	113a4 <mythread_nanosleep_sleep@plt>
   131a4:	b	1318c <mythread_entry_stop@@Base+0x20>
   131a8:	mov	r0, #0
   131ac:	pop	{r4, sl, fp, pc}

000131b0 <mythread_entry_suspend@@Base>:
   131b0:	push	{r4, sl, fp, lr}
   131b4:	add	fp, sp, #8
   131b8:	mov	r4, r0
   131bc:	ldr	r0, [r0, #16]
   131c0:	tst	r0, #1
   131c4:	bne	131f4 <mythread_entry_suspend@@Base+0x44>
   131c8:	mov	r0, #1
   131cc:	str	r0, [r4, #16]
   131d0:	b	131e0 <mythread_entry_suspend@@Base+0x30>
   131d4:	ldr	r0, [r4, #32]
   131d8:	ldr	r0, [r0, #24]
   131dc:	bl	113a4 <mythread_nanosleep_sleep@plt>
   131e0:	ldr	r0, [r4, #16]
   131e4:	tst	r0, #4
   131e8:	ldreq	r0, [r4, #16]
   131ec:	tsteq	r0, #1
   131f0:	beq	131d4 <mythread_entry_suspend@@Base+0x24>
   131f4:	mov	r0, #0
   131f8:	pop	{r4, sl, fp, pc}

000131fc <mythread_entry_resume@@Base>:
   131fc:	push	{fp, lr}
   13200:	mov	fp, sp
   13204:	ldr	r2, [r0, #16]
   13208:	tst	r2, #1
   1320c:	bne	13240 <mythread_entry_resume@@Base+0x44>
   13210:	ldr	r2, [r0, #16]
   13214:	str	r1, [r0, #16]
   13218:	tst	r2, #4
   1321c:	beq	13244 <mythread_entry_resume@@Base+0x48>
   13220:	ldr	r1, [r0, #24]
   13224:	ldr	r0, [r0, #32]
   13228:	bl	11e00 <mythread_mutex_post@plt>
   1322c:	mov	r1, r0
   13230:	mov	r0, #1
   13234:	cmp	r1, #0
   13238:	moveq	r0, #0
   1323c:	pop	{fp, pc}
   13240:	str	r1, [r0, #16]
   13244:	mov	r0, #0
   13248:	pop	{fp, pc}

0001324c <mythread_entry_status@@Base>:
   1324c:	ldr	r0, [r0, #20]
   13250:	bx	lr

00013254 <mythread_entry_mythread@@Base>:
   13254:	ldr	r0, [r0, #32]
   13258:	bx	lr

0001325c <mythread_callback_quit@@Base>:
   1325c:	push	{r4, r5, fp, lr}
   13260:	add	fp, sp, #8
   13264:	mov	r5, r0
   13268:	ldr	r0, [r1, #16]
   1326c:	tst	r0, #2
   13270:	popne	{r4, r5, fp, pc}
   13274:	mov	r4, r1
   13278:	ldr	r0, [r5, #24]
   1327c:	bl	113a4 <mythread_nanosleep_sleep@plt>
   13280:	ldr	r0, [r4, #16]
   13284:	tst	r0, #2
   13288:	beq	13278 <mythread_callback_quit@@Base+0x1c>
   1328c:	pop	{r4, r5, fp, pc}

00013290 <mythread_queue_create@@Base>:
   13290:	mov	r0, #1
   13294:	mov	r1, #28
   13298:	b	11248 <mycore_calloc@plt>

0001329c <mythread_queue_init@@Base>:
   1329c:	push	{r4, sl, fp, lr}
   132a0:	add	fp, sp, #8
   132a4:	cmp	r1, #32
   132a8:	mov	r4, r0
   132ac:	mov	r0, #512	; 0x200
   132b0:	movls	r1, #32
   132b4:	str	r0, [r4, #8]
   132b8:	mov	r0, #512	; 0x200
   132bc:	str	r1, [r4, #20]
   132c0:	mov	r1, #4
   132c4:	bl	11248 <mycore_calloc@plt>
   132c8:	cmp	r0, #0
   132cc:	str	r0, [r4]
   132d0:	beq	13314 <mythread_queue_init@@Base+0x78>
   132d4:	ldr	r0, [r4, #20]
   132d8:	add	r0, r0, r0, lsl #1
   132dc:	lsl	r0, r0, #2
   132e0:	bl	11dac <mycore_malloc@plt>
   132e4:	ldm	r4, {r1, r2}
   132e8:	str	r0, [r1, r2, lsl #2]
   132ec:	mov	r0, #0
   132f0:	ldr	r1, [r4]
   132f4:	ldr	r2, [r1, r2, lsl #2]
   132f8:	cmp	r2, #0
   132fc:	popne	{r4, sl, fp, pc}
   13300:	mov	r0, r1
   13304:	bl	11eb4 <mycore_free@plt>
   13308:	str	r0, [r4]
   1330c:	mov	r0, #62	; 0x3e
   13310:	pop	{r4, sl, fp, pc}
   13314:	mov	r0, #61	; 0x3d
   13318:	pop	{r4, sl, fp, pc}

0001331c <mythread_queue_clean@@Base>:
   1331c:	mov	r1, #0
   13320:	str	r1, [r0, #24]
   13324:	str	r1, [r0, #4]
   13328:	str	r1, [r0, #12]
   1332c:	str	r1, [r0, #16]
   13330:	bx	lr

00013334 <mythread_queue_destroy@@Base>:
   13334:	cmp	r0, #0
   13338:	beq	1339c <mythread_queue_destroy@@Base+0x68>
   1333c:	push	{r4, r5, fp, lr}
   13340:	add	fp, sp, #8
   13344:	mov	r4, r0
   13348:	ldr	r0, [r0]
   1334c:	cmp	r0, #0
   13350:	beq	13390 <mythread_queue_destroy@@Base+0x5c>
   13354:	ldr	r0, [r0]
   13358:	bl	11eb4 <mycore_free@plt>
   1335c:	ldr	r0, [r4, #4]
   13360:	cmp	r0, #0
   13364:	beq	13388 <mythread_queue_destroy@@Base+0x54>
   13368:	mov	r5, #1
   1336c:	ldr	r0, [r4]
   13370:	ldr	r0, [r0, r5, lsl #2]
   13374:	bl	11eb4 <mycore_free@plt>
   13378:	ldr	r0, [r4, #4]
   1337c:	add	r5, r5, #1
   13380:	cmp	r5, r0
   13384:	bls	1336c <mythread_queue_destroy@@Base+0x38>
   13388:	ldr	r0, [r4]
   1338c:	bl	11eb4 <mycore_free@plt>
   13390:	mov	r0, r4
   13394:	bl	11eb4 <mycore_free@plt>
   13398:	pop	{r4, r5, fp, lr}
   1339c:	mov	r0, #0
   133a0:	bx	lr

000133a4 <mythread_queue_node_clean@@Base>:
   133a4:	mov	r1, #0
   133a8:	str	r1, [r0]
   133ac:	str	r1, [r0, #4]
   133b0:	str	r1, [r0, #8]
   133b4:	bx	lr

000133b8 <mythread_queue_get_prev_node@@Base>:
   133b8:	ldr	r0, [r0, #8]
   133bc:	bx	lr

000133c0 <mythread_queue_get_current_node@@Base>:
   133c0:	ldm	r0, {r1, r2}
   133c4:	ldr	r0, [r0, #12]
   133c8:	ldr	r1, [r1, r2, lsl #2]
   133cc:	add	r0, r0, r0, lsl #1
   133d0:	add	r0, r1, r0, lsl #2
   133d4:	bx	lr

000133d8 <mythread_queue_get_first_node@@Base>:
   133d8:	ldr	r0, [r0]
   133dc:	ldr	r0, [r0]
   133e0:	bx	lr

000133e4 <mythread_queue_count_used_node@@Base>:
   133e4:	ldr	r0, [r0, #16]
   133e8:	bx	lr

000133ec <mythread_queue_node_malloc@@Base>:
   133ec:	push	{r4, r5, r6, r7, fp, lr}
   133f0:	add	fp, sp, #16
   133f4:	mov	r4, r1
   133f8:	ldr	r1, [r1, #12]
   133fc:	mov	r5, r2
   13400:	ldr	r3, [r4, #20]
   13404:	add	r2, r1, #1
   13408:	cmp	r2, r3
   1340c:	str	r2, [r4, #12]
   13410:	bcs	13420 <mythread_queue_node_malloc@@Base+0x34>
   13414:	ldr	r6, [r4]
   13418:	ldr	r1, [r4, #4]
   1341c:	b	134d0 <mythread_queue_node_malloc@@Base+0xe4>
   13420:	ldmib	r4, {r1, r2}
   13424:	add	r1, r1, #1
   13428:	cmp	r1, r2
   1342c:	str	r1, [r4, #4]
   13430:	bcs	1343c <mythread_queue_node_malloc@@Base+0x50>
   13434:	ldr	r6, [r4]
   13438:	b	13490 <mythread_queue_node_malloc@@Base+0xa4>
   1343c:	cmp	r0, #0
   13440:	beq	13450 <mythread_queue_node_malloc@@Base+0x64>
   13444:	ldr	r1, [r0, #16]
   13448:	bl	11ec0 <mythread_queue_list_wait_for_done@plt>
   1344c:	ldr	r2, [r4, #8]
   13450:	ldr	r0, [r4]
   13454:	add	r7, r2, #512	; 0x200
   13458:	lsl	r1, r7, #2
   1345c:	bl	10f78 <mycore_realloc@plt>
   13460:	cmp	r0, #0
   13464:	beq	134ec <mythread_queue_node_malloc@@Base+0x100>
   13468:	ldr	r1, [r4, #4]
   1346c:	mov	r6, r0
   13470:	add	r0, r0, r1, lsl #2
   13474:	sub	r1, r7, r1
   13478:	lsl	r2, r1, #2
   1347c:	mov	r1, #0
   13480:	bl	11a7c <memset@plt>
   13484:	str	r7, [r4, #8]
   13488:	str	r6, [r4]
   1348c:	ldr	r1, [r4, #4]
   13490:	ldr	r0, [r6, r1, lsl #2]
   13494:	cmp	r0, #0
   13498:	bne	134c8 <mythread_queue_node_malloc@@Base+0xdc>
   1349c:	ldr	r0, [r4, #20]
   134a0:	add	r0, r0, r0, lsl #1
   134a4:	lsl	r0, r0, #2
   134a8:	bl	11dac <mycore_malloc@plt>
   134ac:	ldr	r2, [r4]
   134b0:	ldr	r1, [r4, #4]
   134b4:	str	r0, [r2, r1, lsl #2]
   134b8:	ldr	r6, [r4]
   134bc:	ldr	r0, [r6, r1, lsl #2]
   134c0:	cmp	r0, #0
   134c4:	beq	13500 <mythread_queue_node_malloc@@Base+0x114>
   134c8:	mov	r2, #0
   134cc:	str	r2, [r4, #12]
   134d0:	ldr	r0, [r4, #16]
   134d4:	add	r0, r0, #1
   134d8:	str	r0, [r4, #16]
   134dc:	ldr	r0, [r6, r1, lsl #2]
   134e0:	add	r1, r2, r2, lsl #1
   134e4:	add	r0, r0, r1, lsl #2
   134e8:	pop	{r4, r5, r6, r7, fp, pc}
   134ec:	mov	r0, #0
   134f0:	cmp	r5, #0
   134f4:	beq	134e8 <mythread_queue_node_malloc@@Base+0xfc>
   134f8:	mov	r1, #61	; 0x3d
   134fc:	b	13510 <mythread_queue_node_malloc@@Base+0x124>
   13500:	mov	r0, #0
   13504:	cmp	r5, #0
   13508:	beq	134e8 <mythread_queue_node_malloc@@Base+0xfc>
   1350c:	mov	r1, #62	; 0x3e
   13510:	str	r1, [r5]
   13514:	pop	{r4, r5, r6, r7, fp, pc}

00013518 <mythread_queue_list_wait_for_done@@Base>:
   13518:	push	{r4, r5, r6, sl, fp, lr}
   1351c:	add	fp, sp, #16
   13520:	cmp	r1, #0
   13524:	beq	135a4 <mythread_queue_list_wait_for_done@@Base+0x8c>
   13528:	ldr	r5, [r1]
   1352c:	cmp	r5, #0
   13530:	beq	135a4 <mythread_queue_list_wait_for_done@@Base+0x8c>
   13534:	ldr	ip, [r0, #4]
   13538:	mov	r4, r0
   1353c:	mov	r3, ip
   13540:	cmp	r3, #0
   13544:	beq	13594 <mythread_queue_list_wait_for_done@@Base+0x7c>
   13548:	ldm	r5, {r1, r2}
   1354c:	mov	r6, #0
   13550:	ldr	r3, [r2, r6, lsl #2]
   13554:	ldr	r0, [r1, #16]
   13558:	cmp	r3, r0
   1355c:	bcs	13580 <mythread_queue_list_wait_for_done@@Base+0x68>
   13560:	ldr	r0, [r4, #24]
   13564:	bl	113a4 <mythread_nanosleep_sleep@plt>
   13568:	ldm	r5, {r1, r2}
   1356c:	ldr	r0, [r2, r6, lsl #2]
   13570:	ldr	r3, [r1, #16]
   13574:	cmp	r0, r3
   13578:	bcc	13560 <mythread_queue_list_wait_for_done@@Base+0x48>
   1357c:	ldr	ip, [r4, #4]
   13580:	add	r6, r6, #1
   13584:	mov	r3, ip
   13588:	cmp	r6, ip
   1358c:	bcc	13550 <mythread_queue_list_wait_for_done@@Base+0x38>
   13590:	b	13598 <mythread_queue_list_wait_for_done@@Base+0x80>
   13594:	mov	r3, #0
   13598:	ldr	r5, [r5, #12]
   1359c:	cmp	r5, #0
   135a0:	bne	13540 <mythread_queue_list_wait_for_done@@Base+0x28>
   135a4:	pop	{r4, r5, r6, sl, fp, pc}

000135a8 <mythread_queue_node_malloc_limit@@Base>:
   135a8:	push	{r4, r5, r6, r7, fp, lr}
   135ac:	add	fp, sp, #16
   135b0:	mov	r4, r1
   135b4:	ldr	r1, [r1, #12]
   135b8:	mov	r5, r3
   135bc:	ldr	r7, [r4, #16]
   135c0:	add	r3, r1, #1
   135c4:	cmp	r7, r2
   135c8:	str	r3, [r4, #12]
   135cc:	bcs	135fc <mythread_queue_node_malloc_limit@@Base+0x54>
   135d0:	ldr	r1, [r4, #4]
   135d4:	ldr	r2, [r4, #20]
   135d8:	cmp	r3, r2
   135dc:	bcc	136c8 <mythread_queue_node_malloc_limit@@Base+0x120>
   135e0:	add	r1, r1, #1
   135e4:	str	r1, [r4, #4]
   135e8:	ldr	r2, [r4, #8]
   135ec:	cmp	r1, r2
   135f0:	bcs	13634 <mythread_queue_node_malloc_limit@@Base+0x8c>
   135f4:	ldr	r6, [r4]
   135f8:	b	13688 <mythread_queue_node_malloc_limit@@Base+0xe0>
   135fc:	ldr	r1, [r4, #16]
   13600:	cmp	r0, #0
   13604:	add	r1, r1, #1
   13608:	str	r1, [r4, #16]
   1360c:	beq	13618 <mythread_queue_node_malloc_limit@@Base+0x70>
   13610:	ldr	r1, [r0, #16]
   13614:	bl	11ec0 <mythread_queue_list_wait_for_done@plt>
   13618:	mov	r3, #0
   1361c:	mov	r1, #0
   13620:	str	r3, [r4, #24]
   13624:	str	r3, [r4, #4]
   13628:	str	r3, [r4, #12]
   1362c:	str	r3, [r4, #16]
   13630:	b	136c8 <mythread_queue_node_malloc_limit@@Base+0x120>
   13634:	cmp	r0, #0
   13638:	beq	13648 <mythread_queue_node_malloc_limit@@Base+0xa0>
   1363c:	ldr	r1, [r0, #16]
   13640:	bl	11ec0 <mythread_queue_list_wait_for_done@plt>
   13644:	ldr	r2, [r4, #8]
   13648:	ldr	r0, [r4]
   1364c:	add	r7, r2, #512	; 0x200
   13650:	lsl	r1, r7, #2
   13654:	bl	10f78 <mycore_realloc@plt>
   13658:	cmp	r0, #0
   1365c:	beq	136e8 <mythread_queue_node_malloc_limit@@Base+0x140>
   13660:	ldr	r1, [r4, #4]
   13664:	mov	r6, r0
   13668:	add	r0, r0, r1, lsl #2
   1366c:	sub	r1, r7, r1
   13670:	lsl	r2, r1, #2
   13674:	mov	r1, #0
   13678:	bl	11a7c <memset@plt>
   1367c:	str	r7, [r4, #8]
   13680:	str	r6, [r4]
   13684:	ldr	r1, [r4, #4]
   13688:	ldr	r0, [r6, r1, lsl #2]
   1368c:	cmp	r0, #0
   13690:	bne	136c0 <mythread_queue_node_malloc_limit@@Base+0x118>
   13694:	ldr	r0, [r4, #20]
   13698:	add	r0, r0, r0, lsl #1
   1369c:	lsl	r0, r0, #2
   136a0:	bl	11dac <mycore_malloc@plt>
   136a4:	ldr	r2, [r4]
   136a8:	ldr	r1, [r4, #4]
   136ac:	str	r0, [r2, r1, lsl #2]
   136b0:	ldr	r0, [r4]
   136b4:	ldr	r0, [r0, r1, lsl #2]
   136b8:	cmp	r0, #0
   136bc:	beq	136fc <mythread_queue_node_malloc_limit@@Base+0x154>
   136c0:	mov	r3, #0
   136c4:	str	r3, [r4, #12]
   136c8:	ldr	r0, [r4]
   136cc:	ldr	r2, [r4, #16]
   136d0:	add	r2, r2, #1
   136d4:	str	r2, [r4, #16]
   136d8:	ldr	r0, [r0, r1, lsl #2]
   136dc:	add	r1, r3, r3, lsl #1
   136e0:	add	r0, r0, r1, lsl #2
   136e4:	pop	{r4, r5, r6, r7, fp, pc}
   136e8:	mov	r0, #0
   136ec:	cmp	r5, #0
   136f0:	beq	136e4 <mythread_queue_node_malloc_limit@@Base+0x13c>
   136f4:	mov	r1, #61	; 0x3d
   136f8:	b	1370c <mythread_queue_node_malloc_limit@@Base+0x164>
   136fc:	mov	r0, #0
   13700:	cmp	r5, #0
   13704:	beq	136e4 <mythread_queue_node_malloc_limit@@Base+0x13c>
   13708:	mov	r1, #62	; 0x3e
   1370c:	str	r1, [r5]
   13710:	pop	{r4, r5, r6, r7, fp, pc}

00013714 <mythread_queue_node_malloc_round@@Base>:
   13714:	push	{r4, r5, fp, lr}
   13718:	add	fp, sp, #8
   1371c:	ldr	r5, [r1]
   13720:	mov	r4, r1
   13724:	ldr	r1, [r5, #12]
   13728:	add	r1, r1, #1
   1372c:	str	r1, [r5, #12]
   13730:	ldr	r2, [r5, #20]
   13734:	ldr	r3, [r5, #16]
   13738:	add	r3, r3, #1
   1373c:	cmp	r1, r2
   13740:	str	r3, [r5, #16]
   13744:	bcc	13778 <mythread_queue_node_malloc_round@@Base+0x64>
   13748:	cmp	r0, #0
   1374c:	mov	r1, r5
   13750:	beq	13760 <mythread_queue_node_malloc_round@@Base+0x4c>
   13754:	mov	r1, r4
   13758:	bl	11b3c <mythread_queue_list_entry_wait_for_done@plt>
   1375c:	ldr	r1, [r4]
   13760:	mov	r0, #0
   13764:	str	r0, [r1, #24]
   13768:	str	r0, [r1, #4]
   1376c:	str	r0, [r1, #12]
   13770:	str	r0, [r1, #16]
   13774:	ldr	r1, [r5, #12]
   13778:	ldm	r5, {r0, r2}
   1377c:	add	r1, r1, r1, lsl #1
   13780:	ldr	r0, [r0, r2, lsl #2]
   13784:	add	r0, r0, r1, lsl #2
   13788:	pop	{r4, r5, fp, pc}

0001378c <mythread_queue_list_entry_wait_for_done@@Base>:
   1378c:	push	{r4, r5, r6, sl, fp, lr}
   13790:	add	fp, sp, #16
   13794:	cmp	r1, #0
   13798:	beq	137f4 <mythread_queue_list_entry_wait_for_done@@Base+0x68>
   1379c:	ldr	ip, [r1, #8]
   137a0:	mov	r4, r1
   137a4:	cmp	ip, #0
   137a8:	beq	137f4 <mythread_queue_list_entry_wait_for_done@@Base+0x68>
   137ac:	mov	r5, r0
   137b0:	ldm	r4, {r0, r1}
   137b4:	mov	r6, #0
   137b8:	ldr	r3, [r1, r6, lsl #2]
   137bc:	ldr	r2, [r0, #16]
   137c0:	cmp	r3, r2
   137c4:	bcs	137e8 <mythread_queue_list_entry_wait_for_done@@Base+0x5c>
   137c8:	ldr	r0, [r5, #24]
   137cc:	bl	113a4 <mythread_nanosleep_sleep@plt>
   137d0:	ldm	r4, {r0, r1}
   137d4:	ldr	r2, [r1, r6, lsl #2]
   137d8:	ldr	r3, [r0, #16]
   137dc:	cmp	r2, r3
   137e0:	bcc	137c8 <mythread_queue_list_entry_wait_for_done@@Base+0x3c>
   137e4:	ldr	ip, [r4, #8]
   137e8:	add	r6, r6, #1
   137ec:	cmp	r6, ip
   137f0:	bcc	137b8 <mythread_queue_list_entry_wait_for_done@@Base+0x2c>
   137f4:	pop	{r4, r5, r6, sl, fp, pc}

000137f8 <mythread_queue_list_entry_clean@@Base>:
   137f8:	cmp	r0, #0
   137fc:	bxeq	lr
   13800:	ldr	r0, [r0]
   13804:	mov	r1, #0
   13808:	str	r1, [r0, #24]
   1380c:	str	r1, [r0, #4]
   13810:	str	r1, [r0, #12]
   13814:	str	r1, [r0, #16]
   13818:	bx	lr

0001381c <mythread_queue_list_create@@Base>:
   1381c:	mov	r0, #1
   13820:	mov	r1, #12
   13824:	b	11248 <mycore_calloc@plt>

00013828 <mythread_queue_list_destroy@@Base>:
   13828:	cmp	r0, #0
   1382c:	bxeq	lr
   13830:	b	11eb4 <mycore_free@plt>

00013834 <mythread_queue_list_get_count@@Base>:
   13834:	ldr	r0, [r0, #8]
   13838:	bx	lr

0001383c <mythread_queue_list_see_for_done@@Base>:
   1383c:	push	{r4, r5, fp, lr}
   13840:	add	fp, sp, #8
   13844:	mov	r2, r0
   13848:	mov	r0, #1
   1384c:	cmp	r1, #0
   13850:	beq	138a0 <mythread_queue_list_see_for_done@@Base+0x64>
   13854:	ldr	ip, [r1]
   13858:	cmp	ip, #0
   1385c:	beq	138a0 <mythread_queue_list_see_for_done@@Base+0x64>
   13860:	ldr	lr, [r2, #4]
   13864:	cmp	lr, #0
   13868:	beq	13894 <mythread_queue_list_see_for_done@@Base+0x58>
   1386c:	ldr	r3, [ip]
   13870:	ldr	r1, [ip, #4]
   13874:	mov	r2, #0
   13878:	ldr	r4, [r1, r2, lsl #2]
   1387c:	ldr	r5, [r3, #16]
   13880:	cmp	r4, r5
   13884:	bcc	138a4 <mythread_queue_list_see_for_done@@Base+0x68>
   13888:	add	r2, r2, #1
   1388c:	cmp	r2, lr
   13890:	bcc	13878 <mythread_queue_list_see_for_done@@Base+0x3c>
   13894:	ldr	ip, [ip, #12]
   13898:	cmp	ip, #0
   1389c:	bne	13864 <mythread_queue_list_see_for_done@@Base+0x28>
   138a0:	pop	{r4, r5, fp, pc}
   138a4:	mov	r0, #0
   138a8:	pop	{r4, r5, fp, pc}

000138ac <mythread_queue_list_see_for_done_by_thread@@Base>:
   138ac:	push	{fp, lr}
   138b0:	mov	fp, sp
   138b4:	mov	r0, #1
   138b8:	cmp	r1, #0
   138bc:	popeq	{fp, pc}
   138c0:	ldr	r1, [r1]
   138c4:	cmp	r1, #0
   138c8:	beq	138f0 <mythread_queue_list_see_for_done_by_thread@@Base+0x44>
   138cc:	ldr	ip, [r1]
   138d0:	ldr	r3, [r1, #4]
   138d4:	ldr	lr, [r3, r2, lsl #2]
   138d8:	ldr	r3, [ip, #16]
   138dc:	cmp	lr, r3
   138e0:	bcc	138ec <mythread_queue_list_see_for_done_by_thread@@Base+0x40>
   138e4:	ldr	r1, [r1, #12]
   138e8:	b	138c4 <mythread_queue_list_see_for_done_by_thread@@Base+0x18>
   138ec:	mov	r0, #0
   138f0:	pop	{fp, pc}

000138f4 <mythread_queue_list_entry_push@@Base>:
   138f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   138f8:	add	fp, sp, #28
   138fc:	sub	sp, sp, #4
   13900:	ldr	r4, [fp, #12]
   13904:	mov	r8, r0
   13908:	mov	sl, r1
   1390c:	mov	r1, #20
   13910:	mov	r7, r3
   13914:	str	r2, [sp]
   13918:	cmp	r4, #0
   1391c:	movne	r0, #0
   13920:	strne	r0, [r4]
   13924:	mov	r0, #1
   13928:	bl	11248 <mycore_calloc@plt>
   1392c:	cmp	r0, #0
   13930:	beq	13964 <mythread_queue_list_entry_push@@Base+0x70>
   13934:	mov	r9, r0
   13938:	ldr	r0, [fp, #8]
   1393c:	cmp	r0, #0
   13940:	str	r0, [r9, #8]
   13944:	beq	13978 <mythread_queue_list_entry_push@@Base+0x84>
   13948:	mov	r1, #4
   1394c:	bl	11248 <mycore_calloc@plt>
   13950:	cmp	r0, #0
   13954:	str	r0, [r9, #4]
   13958:	bne	13980 <mythread_queue_list_entry_push@@Base+0x8c>
   1395c:	mov	r0, r9
   13960:	bl	11eb4 <mycore_free@plt>
   13964:	cmp	r4, #0
   13968:	mov	r9, #0
   1396c:	movne	r0, #60	; 0x3c
   13970:	strne	r0, [r4]
   13974:	b	13a70 <mythread_queue_list_entry_push@@Base+0x17c>
   13978:	mov	r0, #0
   1397c:	str	r0, [r9, #4]
   13980:	cmp	sl, #0
   13984:	str	r7, [r9]
   13988:	beq	13a0c <mythread_queue_list_entry_push@@Base+0x118>
   1398c:	mov	r7, #0
   13990:	mov	r4, #0
   13994:	ldr	r0, [r8, r4, lsl #2]
   13998:	ldr	r3, [r0, #32]
   1399c:	ldr	r1, [r0, #4]
   139a0:	ldr	r2, [r0, #12]
   139a4:	cmp	r3, #1
   139a8:	bne	139d8 <mythread_queue_list_entry_push@@Base+0xe4>
   139ac:	cmp	r2, r1
   139b0:	bhi	139fc <mythread_queue_list_entry_push@@Base+0x108>
   139b4:	ldr	r3, [r9, #4]
   139b8:	mov	r5, #0
   139bc:	add	r3, r3, r2, lsl #2
   139c0:	str	r5, [r3, r5, lsl #2]
   139c4:	add	r5, r5, #1
   139c8:	add	r6, r2, r5
   139cc:	cmp	r6, r1
   139d0:	bls	139c0 <mythread_queue_list_entry_push@@Base+0xcc>
   139d4:	b	139f4 <mythread_queue_list_entry_push@@Base+0x100>
   139d8:	cmp	r2, r1
   139dc:	bhi	139fc <mythread_queue_list_entry_push@@Base+0x108>
   139e0:	ldr	r3, [r9, #4]
   139e4:	str	r7, [r3, r2, lsl #2]
   139e8:	add	r2, r2, #1
   139ec:	cmp	r2, r1
   139f0:	bls	139e4 <mythread_queue_list_entry_push@@Base+0xf0>
   139f4:	cmp	r0, #0
   139f8:	beq	13a00 <mythread_queue_list_entry_push@@Base+0x10c>
   139fc:	bl	113e0 <mythread_suspend@plt>
   13a00:	add	r4, r4, #1
   13a04:	cmp	r4, sl
   13a08:	bne	13994 <mythread_queue_list_entry_push@@Base+0xa0>
   13a0c:	ldr	r2, [sp]
   13a10:	ldr	r0, [r2]
   13a14:	cmp	r0, #0
   13a18:	beq	13a30 <mythread_queue_list_entry_push@@Base+0x13c>
   13a1c:	mov	r0, r2
   13a20:	ldr	r1, [r0, #4]!
   13a24:	str	r9, [r1, #12]
   13a28:	str	r1, [r9, #16]
   13a2c:	b	13a38 <mythread_queue_list_entry_push@@Base+0x144>
   13a30:	mov	r0, r2
   13a34:	str	r9, [r0], #4
   13a38:	str	r9, [r0]
   13a3c:	cmp	sl, #0
   13a40:	ldr	r0, [r2, #8]
   13a44:	add	r0, r0, #1
   13a48:	str	r0, [r2, #8]
   13a4c:	beq	13a70 <mythread_queue_list_entry_push@@Base+0x17c>
   13a50:	ldr	r0, [r8]
   13a54:	cmp	r0, #0
   13a58:	beq	13a64 <mythread_queue_list_entry_push@@Base+0x170>
   13a5c:	mov	r1, #0
   13a60:	bl	11728 <mythread_resume@plt>
   13a64:	add	r8, r8, #4
   13a68:	subs	sl, sl, #1
   13a6c:	bne	13a50 <mythread_queue_list_entry_push@@Base+0x15c>
   13a70:	mov	r0, r9
   13a74:	sub	sp, fp, #28
   13a78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013a7c <mythread_queue_list_entry_make_batch@@Base>:
   13a7c:	cmp	r1, #0
   13a80:	beq	13ab4 <mythread_queue_list_entry_make_batch@@Base+0x38>
   13a84:	ldr	ip, [r0, #4]
   13a88:	ldr	r0, [r0, #12]
   13a8c:	cmp	r0, ip
   13a90:	bxhi	lr
   13a94:	ldr	r1, [r1, #4]
   13a98:	mov	r3, #0
   13a9c:	add	r1, r1, r0, lsl #2
   13aa0:	str	r3, [r1, r3, lsl #2]
   13aa4:	add	r3, r3, #1
   13aa8:	add	r2, r0, r3
   13aac:	cmp	r2, ip
   13ab0:	bls	13aa0 <mythread_queue_list_entry_make_batch@@Base+0x24>
   13ab4:	bx	lr

00013ab8 <mythread_queue_list_entry_make_stream@@Base>:
   13ab8:	cmp	r1, #0
   13abc:	beq	13ae8 <mythread_queue_list_entry_make_stream@@Base+0x30>
   13ac0:	ldr	r2, [r0, #4]
   13ac4:	ldr	r0, [r0, #12]
   13ac8:	cmp	r0, r2
   13acc:	bxhi	lr
   13ad0:	ldr	r1, [r1, #4]
   13ad4:	mov	r3, #0
   13ad8:	str	r3, [r1, r0, lsl #2]
   13adc:	add	r0, r0, #1
   13ae0:	cmp	r0, r2
   13ae4:	bls	13ad8 <mythread_queue_list_entry_make_stream@@Base+0x20>
   13ae8:	bx	lr

00013aec <mythread_queue_list_entry_delete@@Base>:
   13aec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13af0:	add	fp, sp, #28
   13af4:	sub	sp, sp, #4
   13af8:	mov	r9, r3
   13afc:	mov	sl, r2
   13b00:	mov	r7, r1
   13b04:	mov	r4, r0
   13b08:	cmp	r1, #0
   13b0c:	beq	13b34 <mythread_queue_list_entry_delete@@Base+0x48>
   13b10:	mov	r6, r4
   13b14:	mov	r5, r7
   13b18:	ldr	r0, [r6]
   13b1c:	cmp	r0, #0
   13b20:	beq	13b28 <mythread_queue_list_entry_delete@@Base+0x3c>
   13b24:	bl	113e0 <mythread_suspend@plt>
   13b28:	add	r6, r6, #4
   13b2c:	subs	r5, r5, #1
   13b30:	bne	13b18 <mythread_queue_list_entry_delete@@Base+0x2c>
   13b34:	ldr	r0, [r9, #16]
   13b38:	ldr	r1, [r9, #12]
   13b3c:	ldr	r8, [fp, #8]
   13b40:	cmp	r0, #0
   13b44:	strne	r1, [r0, #12]
   13b48:	cmp	r1, #0
   13b4c:	strne	r0, [r1, #16]
   13b50:	ldr	r2, [sl]
   13b54:	cmp	r2, r9
   13b58:	streq	r1, [sl]
   13b5c:	ldr	r1, [sl, #4]
   13b60:	cmp	r1, r9
   13b64:	streq	r0, [sl, #4]
   13b68:	cmp	r7, #0
   13b6c:	ldr	r0, [sl, #8]
   13b70:	sub	r0, r0, #1
   13b74:	str	r0, [sl, #8]
   13b78:	beq	13b9c <mythread_queue_list_entry_delete@@Base+0xb0>
   13b7c:	ldr	r0, [r4]
   13b80:	cmp	r0, #0
   13b84:	beq	13b90 <mythread_queue_list_entry_delete@@Base+0xa4>
   13b88:	mov	r1, #0
   13b8c:	bl	11728 <mythread_resume@plt>
   13b90:	add	r4, r4, #4
   13b94:	subs	r7, r7, #1
   13b98:	bne	13b7c <mythread_queue_list_entry_delete@@Base+0x90>
   13b9c:	cmp	r8, #0
   13ba0:	beq	13bb0 <mythread_queue_list_entry_delete@@Base+0xc4>
   13ba4:	ldr	r0, [r9]
   13ba8:	cmp	r0, #0
   13bac:	blne	11584 <mythread_queue_destroy@plt>
   13bb0:	ldr	r0, [r9, #4]
   13bb4:	cmp	r0, #0
   13bb8:	beq	13bc0 <mythread_queue_list_entry_delete@@Base+0xd4>
   13bbc:	bl	11eb4 <mycore_free@plt>
   13bc0:	mov	r0, r9
   13bc4:	bl	11eb4 <mycore_free@plt>
   13bc8:	mov	r0, #0
   13bcc:	sub	sp, fp, #28
   13bd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013bd4 <mythread_queue_list_entry_see_for_done@@Base>:
   13bd4:	push	{r4, sl, fp, lr}
   13bd8:	add	fp, sp, #8
   13bdc:	mov	r1, r0
   13be0:	mov	r0, #1
   13be4:	cmp	r1, #0
   13be8:	beq	13c20 <mythread_queue_list_entry_see_for_done@@Base+0x4c>
   13bec:	ldr	ip, [r1, #8]
   13bf0:	cmp	ip, #0
   13bf4:	beq	13c20 <mythread_queue_list_entry_see_for_done@@Base+0x4c>
   13bf8:	ldr	lr, [r1]
   13bfc:	ldr	r1, [r1, #4]
   13c00:	mov	r2, #0
   13c04:	ldr	r3, [r1, r2, lsl #2]
   13c08:	ldr	r4, [lr, #16]
   13c0c:	cmp	r3, r4
   13c10:	bcc	13c24 <mythread_queue_list_entry_see_for_done@@Base+0x50>
   13c14:	add	r2, r2, #1
   13c18:	cmp	r2, ip
   13c1c:	bcc	13c04 <mythread_queue_list_entry_see_for_done@@Base+0x30>
   13c20:	pop	{r4, sl, fp, pc}
   13c24:	mov	r0, #0
   13c28:	pop	{r4, sl, fp, pc}

00013c2c <mythread_function_see_opt@@Base>:
   13c2c:	push	{r4, r5, r6, sl, fp, lr}
   13c30:	add	fp, sp, #16
   13c34:	sub	sp, sp, #8
   13c38:	str	r1, [sp, #4]
   13c3c:	mov	r4, r0
   13c40:	mov	r6, #0
   13c44:	ldr	r0, [r0, #28]
   13c48:	ldr	r1, [r0, #16]
   13c4c:	ldr	r5, [r1, #8]
   13c50:	cmp	r5, r3
   13c54:	bne	13d14 <mythread_function_see_opt@@Base+0xe8>
   13c58:	ldr	r3, [sp, #4]
   13c5c:	tst	r3, #4
   13c60:	bne	13ca0 <mythread_function_see_opt@@Base+0x74>
   13c64:	ldr	r3, [sp, #4]
   13c68:	tst	r3, #2
   13c6c:	beq	13cd0 <mythread_function_see_opt@@Base+0xa4>
   13c70:	cmp	r1, #0
   13c74:	beq	13cf8 <mythread_function_see_opt@@Base+0xcc>
   13c78:	ldr	r1, [r1]
   13c7c:	cmp	r1, #0
   13c80:	beq	13cf8 <mythread_function_see_opt@@Base+0xcc>
   13c84:	ldm	r1, {r3, r5}
   13c88:	ldr	r5, [r5, r2, lsl #2]
   13c8c:	ldr	r3, [r3, #16]
   13c90:	cmp	r5, r3
   13c94:	bcc	13cd0 <mythread_function_see_opt@@Base+0xa4>
   13c98:	ldr	r1, [r1, #12]
   13c9c:	b	13c7c <mythread_function_see_opt@@Base+0x50>
   13ca0:	cmp	r1, #0
   13ca4:	beq	13cdc <mythread_function_see_opt@@Base+0xb0>
   13ca8:	ldr	r1, [r1]
   13cac:	cmp	r1, #0
   13cb0:	beq	13cdc <mythread_function_see_opt@@Base+0xb0>
   13cb4:	ldm	r1, {r3, r5}
   13cb8:	ldr	r5, [r5, r2, lsl #2]
   13cbc:	ldr	r3, [r3, #16]
   13cc0:	cmp	r5, r3
   13cc4:	bcc	13cd0 <mythread_function_see_opt@@Base+0xa4>
   13cc8:	ldr	r1, [r1, #12]
   13ccc:	b	13cac <mythread_function_see_opt@@Base+0x80>
   13cd0:	ldr	r0, [fp, #8]
   13cd4:	bl	113a4 <mythread_nanosleep_sleep@plt>
   13cd8:	b	13d14 <mythread_function_see_opt@@Base+0xe8>
   13cdc:	mov	r1, #4
   13ce0:	str	r1, [r4, #12]
   13ce4:	ldr	r1, [r4, #20]
   13ce8:	bl	11e84 <mythread_mutex_wait@plt>
   13cec:	mov	r6, #0
   13cf0:	str	r6, [r4, #12]
   13cf4:	b	13d14 <mythread_function_see_opt@@Base+0xe8>
   13cf8:	ldr	r1, [r4, #20]
   13cfc:	bl	11860 <mythread_mutex_close@plt>
   13d00:	ldr	r0, [r4, #24]
   13d04:	bl	11d1c <mythread_nanosleep_destroy@plt>
   13d08:	mov	r0, #2
   13d0c:	mov	r6, #1
   13d10:	str	r0, [r4, #12]
   13d14:	mov	r0, r6
   13d18:	sub	sp, fp, #16
   13d1c:	pop	{r4, r5, r6, sl, fp, pc}

00013d20 <mythread_function_queue_batch@@Base>:
   13d20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d24:	add	fp, sp, #28
   13d28:	sub	sp, sp, #12
   13d2c:	ldr	r4, [r0, #28]
   13d30:	ldr	r1, [r0]
   13d34:	mov	r5, r0
   13d38:	ldr	r6, [r4, #16]
   13d3c:	mov	r0, r4
   13d40:	bl	111a0 <myhread_increase_id_by_entry_id@plt>
   13d44:	ldr	r1, [r5, #20]
   13d48:	mov	r7, r0
   13d4c:	mov	r0, r4
   13d50:	bl	11e84 <mythread_mutex_wait@plt>
   13d54:	str	r6, [sp, #8]
   13d58:	ldr	r0, [r4, #36]	; 0x24
   13d5c:	tst	r0, #1
   13d60:	beq	13d8c <mythread_function_queue_batch@@Base+0x6c>
   13d64:	mov	r0, #1
   13d68:	str	r0, [r5, #12]
   13d6c:	ldr	r0, [r4, #36]	; 0x24
   13d70:	tst	r0, #1
   13d74:	beq	13d84 <mythread_function_queue_batch@@Base+0x64>
   13d78:	ldr	r0, [r5, #24]
   13d7c:	bl	113a4 <mythread_nanosleep_sleep@plt>
   13d80:	b	13d6c <mythread_function_queue_batch@@Base+0x4c>
   13d84:	mov	r0, #0
   13d88:	str	r0, [r5, #12]
   13d8c:	ldr	r9, [r6]
   13d90:	mov	r8, #0
   13d94:	cmp	r9, #0
   13d98:	beq	13e1c <mythread_function_queue_batch@@Base+0xfc>
   13d9c:	ldm	r9, {r0, sl}
   13da0:	ldr	r1, [sl, r7, lsl #2]
   13da4:	ldr	r2, [r0, #16]
   13da8:	cmp	r1, r2
   13dac:	bcs	13e10 <mythread_function_queue_batch@@Base+0xf0>
   13db0:	ldr	ip, [sl, r7, lsl #2]
   13db4:	ldr	r2, [r0, #20]
   13db8:	ldr	r3, [sl, r7, lsl #2]
   13dbc:	mov	r6, r5
   13dc0:	ldr	r5, [r0]
   13dc4:	ldr	r0, [r0, #20]
   13dc8:	mov	r1, r7
   13dcc:	mov	r7, r4
   13dd0:	udiv	r4, r3, r0
   13dd4:	mls	r0, r4, r0, r3
   13dd8:	mov	r4, r7
   13ddc:	mov	r7, r1
   13de0:	udiv	r1, ip, r2
   13de4:	add	r0, r0, r0, lsl #1
   13de8:	ldr	r1, [r5, r1, lsl #2]
   13dec:	mov	r5, r6
   13df0:	add	r1, r1, r0, lsl #2
   13df4:	ldm	r6, {r0, r2}
   13df8:	blx	r2
   13dfc:	ldr	r0, [r4, #4]
   13e00:	ldr	r1, [sl, r7, lsl #2]
   13e04:	add	r0, r1, r0
   13e08:	str	r0, [sl, r7, lsl #2]
   13e0c:	b	13e14 <mythread_function_queue_batch@@Base+0xf4>
   13e10:	add	r8, r8, #1
   13e14:	ldr	r9, [r9, #12]
   13e18:	b	13d94 <mythread_function_queue_batch@@Base+0x74>
   13e1c:	ldr	r6, [sp, #8]
   13e20:	ldr	r0, [r6, #8]
   13e24:	cmp	r8, r0
   13e28:	bne	13d58 <mythread_function_queue_batch@@Base+0x38>
   13e2c:	ldr	r1, [r4, #36]	; 0x24
   13e30:	ldr	r0, [r5, #24]
   13e34:	mov	r2, r7
   13e38:	mov	r3, r8
   13e3c:	str	r0, [sp]
   13e40:	mov	r0, r5
   13e44:	bl	11200 <mythread_function_see_opt@plt>
   13e48:	cmp	r0, #0
   13e4c:	beq	13d58 <mythread_function_queue_batch@@Base+0x38>
   13e50:	mov	r0, #0
   13e54:	sub	sp, fp, #28
   13e58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013e5c <mythread_function_queue_stream@@Base>:
   13e5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e60:	add	fp, sp, #28
   13e64:	sub	sp, sp, #12
   13e68:	ldr	r4, [r0, #28]
   13e6c:	ldr	r1, [r0]
   13e70:	mov	r8, r0
   13e74:	ldr	r5, [r4, #16]
   13e78:	mov	r0, r4
   13e7c:	bl	111a0 <myhread_increase_id_by_entry_id@plt>
   13e80:	ldr	r1, [r8, #20]
   13e84:	mov	r6, r0
   13e88:	mov	r0, r4
   13e8c:	bl	11e84 <mythread_mutex_wait@plt>
   13e90:	str	r4, [sp, #8]
   13e94:	str	r5, [sp, #4]
   13e98:	ldr	r0, [r4, #36]	; 0x24
   13e9c:	tst	r0, #1
   13ea0:	beq	13ecc <mythread_function_queue_stream@@Base+0x70>
   13ea4:	mov	r0, #1
   13ea8:	str	r0, [r8, #12]
   13eac:	ldr	r0, [r4, #36]	; 0x24
   13eb0:	tst	r0, #1
   13eb4:	beq	13ec4 <mythread_function_queue_stream@@Base+0x68>
   13eb8:	ldr	r0, [r8, #24]
   13ebc:	bl	113a4 <mythread_nanosleep_sleep@plt>
   13ec0:	b	13eac <mythread_function_queue_stream@@Base+0x50>
   13ec4:	mov	r0, #0
   13ec8:	str	r0, [r8, #12]
   13ecc:	ldr	r9, [r5]
   13ed0:	mov	r7, #0
   13ed4:	cmp	r9, #0
   13ed8:	beq	13f40 <mythread_function_queue_stream@@Base+0xe4>
   13edc:	ldm	r9, {r0, sl}
   13ee0:	ldr	r1, [sl, r6, lsl #2]
   13ee4:	ldr	r2, [r0, #16]
   13ee8:	cmp	r1, r2
   13eec:	bcs	13f34 <mythread_function_queue_stream@@Base+0xd8>
   13ef0:	ldr	r1, [sl, r6, lsl #2]
   13ef4:	ldr	r2, [r0, #20]
   13ef8:	ldr	r3, [sl, r6, lsl #2]
   13efc:	ldr	r5, [r0]
   13f00:	ldr	r0, [r0, #20]
   13f04:	udiv	r4, r3, r0
   13f08:	udiv	r1, r1, r2
   13f0c:	mls	r0, r4, r0, r3
   13f10:	ldr	r1, [r5, r1, lsl #2]
   13f14:	add	r0, r0, r0, lsl #1
   13f18:	add	r1, r1, r0, lsl #2
   13f1c:	ldm	r8, {r0, r2}
   13f20:	blx	r2
   13f24:	ldr	r0, [sl, r6, lsl #2]
   13f28:	add	r0, r0, #1
   13f2c:	str	r0, [sl, r6, lsl #2]
   13f30:	b	13f38 <mythread_function_queue_stream@@Base+0xdc>
   13f34:	add	r7, r7, #1
   13f38:	ldr	r9, [r9, #12]
   13f3c:	b	13ed4 <mythread_function_queue_stream@@Base+0x78>
   13f40:	ldr	r5, [sp, #4]
   13f44:	ldr	r0, [r5, #8]
   13f48:	ldr	r4, [sp, #8]
   13f4c:	cmp	r7, r0
   13f50:	bne	13e98 <mythread_function_queue_stream@@Base+0x3c>
   13f54:	ldr	r1, [r4, #36]	; 0x24
   13f58:	ldr	r0, [r8, #24]
   13f5c:	mov	r2, r6
   13f60:	mov	r3, r7
   13f64:	str	r0, [sp]
   13f68:	mov	r0, r8
   13f6c:	bl	11200 <mythread_function_see_opt@plt>
   13f70:	cmp	r0, #0
   13f74:	beq	13e98 <mythread_function_queue_stream@@Base+0x3c>
   13f78:	mov	r0, #0
   13f7c:	sub	sp, fp, #28
   13f80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013f84 <mythread_function@@Base>:
   13f84:	push	{r4, r5, r6, sl, fp, lr}
   13f88:	add	fp, sp, #16
   13f8c:	ldr	r5, [r0, #28]
   13f90:	ldr	r1, [r0, #20]
   13f94:	mov	r4, r0
   13f98:	mov	r0, r5
   13f9c:	bl	11e84 <mythread_mutex_wait@plt>
   13fa0:	mov	r6, #0
   13fa4:	ldm	r4, {r0, r2}
   13fa8:	mov	r1, r4
   13fac:	blx	r2
   13fb0:	ldr	r0, [r4, #12]
   13fb4:	orr	r0, r0, #8
   13fb8:	str	r0, [r4, #12]
   13fbc:	ldr	r1, [r4, #12]
   13fc0:	ldr	r0, [r4, #12]
   13fc4:	tst	r1, #1
   13fc8:	bne	13fe4 <mythread_function@@Base+0x60>
   13fcc:	orr	r0, r0, #4
   13fd0:	str	r0, [r4, #12]
   13fd4:	mov	r0, r5
   13fd8:	ldr	r1, [r4, #20]
   13fdc:	bl	11e84 <mythread_mutex_wait@plt>
   13fe0:	b	13ffc <mythread_function@@Base+0x78>
   13fe4:	tst	r0, #1
   13fe8:	beq	13ffc <mythread_function@@Base+0x78>
   13fec:	ldr	r0, [r4, #24]
   13ff0:	bl	113a4 <mythread_nanosleep_sleep@plt>
   13ff4:	ldr	r0, [r4, #12]
   13ff8:	b	13fe4 <mythread_function@@Base+0x60>
   13ffc:	ldr	r0, [r5, #36]	; 0x24
   14000:	tst	r0, #2
   14004:	ldreq	r0, [r4, #12]
   14008:	tsteq	r0, #2
   1400c:	bne	14018 <mythread_function@@Base+0x94>
   14010:	str	r6, [r4, #12]
   14014:	b	13fa4 <mythread_function@@Base+0x20>
   14018:	ldr	r1, [r4, #20]
   1401c:	mov	r0, r5
   14020:	bl	11860 <mythread_mutex_close@plt>
   14024:	ldr	r0, [r4, #24]
   14028:	bl	11d1c <mythread_nanosleep_destroy@plt>
   1402c:	mov	r0, #2
   14030:	str	r0, [r4, #12]
   14034:	mov	r0, #0
   14038:	pop	{r4, r5, r6, sl, fp, pc}

0001403c <mycore_power@@Base>:
   1403c:	cmp	r1, #0
   14040:	moveq	r0, #1
   14044:	bxeq	lr
   14048:	mov	r3, r0
   1404c:	mov	r0, #1
   14050:	mov	ip, #0
   14054:	tst	r1, #1
   14058:	mov	r2, r3
   1405c:	mul	r3, r3, r3
   14060:	movweq	r2, #1
   14064:	cmp	ip, r1, lsr #1
   14068:	mul	r0, r2, r0
   1406c:	lsr	r2, r1, #1
   14070:	mov	r1, r2
   14074:	bne	14054 <mycore_power@@Base+0x18>
   14078:	bx	lr

0001407c <mycore_strncasecmp@@Base>:
   1407c:	push	{r4, sl, fp, lr}
   14080:	add	fp, sp, #8
   14084:	cmp	r0, #0
   14088:	mov	lr, r0
   1408c:	cmpne	r1, #0
   14090:	bne	140a0 <mycore_strncasecmp@@Base+0x24>
   14094:	subs	r0, lr, r1
   14098:	movwne	r0, #1
   1409c:	pop	{r4, sl, fp, pc}
   140a0:	mov	r0, #0
   140a4:	cmp	r2, #0
   140a8:	beq	140dc <mycore_strncasecmp@@Base+0x60>
   140ac:	ldr	ip, [pc, #52]	; 140e8 <mycore_strncasecmp@@Base+0x6c>
   140b0:	add	ip, pc, ip
   140b4:	ldrb	r3, [r1]
   140b8:	ldrb	r4, [lr]
   140bc:	ldrb	r3, [ip, r3]
   140c0:	ldrb	r4, [ip, r4]
   140c4:	cmp	r4, r3
   140c8:	bne	140e0 <mycore_strncasecmp@@Base+0x64>
   140cc:	subs	r2, r2, #1
   140d0:	add	r1, r1, #1
   140d4:	add	lr, lr, #1
   140d8:	bne	140b4 <mycore_strncasecmp@@Base+0x38>
   140dc:	pop	{r4, sl, fp, pc}
   140e0:	mov	r0, r2
   140e4:	pop	{r4, sl, fp, pc}
   140e8:	andeq	r9, r1, r0, lsr #17

000140ec <mycore_strcasecmp@@Base>:
   140ec:	push	{r4, sl, fp, lr}
   140f0:	add	fp, sp, #8
   140f4:	cmp	r0, #0
   140f8:	cmpne	r1, #0
   140fc:	bne	14110 <mycore_strcasecmp@@Base+0x24>
   14100:	subs	r2, r0, r1
   14104:	movwne	r2, #1
   14108:	mov	r0, r2
   1410c:	pop	{r4, sl, fp, pc}
   14110:	ldrb	r2, [r1]
   14114:	ldr	ip, [pc, #76]	; 14168 <mycore_strcasecmp@@Base+0x7c>
   14118:	ldrb	r3, [r0]
   1411c:	add	ip, pc, ip
   14120:	ldrb	lr, [ip, r2]
   14124:	ldrb	r4, [ip, r3]
   14128:	mov	r2, #1
   1412c:	cmp	r4, lr
   14130:	bne	14108 <mycore_strcasecmp@@Base+0x1c>
   14134:	mov	r2, #1
   14138:	tst	r3, #255	; 0xff
   1413c:	beq	14160 <mycore_strcasecmp@@Base+0x74>
   14140:	ldrb	r3, [r1, r2]
   14144:	ldrb	lr, [ip, r3]
   14148:	ldrb	r3, [r0, r2]
   1414c:	add	r2, r2, #1
   14150:	ldrb	r4, [ip, r3]
   14154:	cmp	r4, lr
   14158:	beq	14138 <mycore_strcasecmp@@Base+0x4c>
   1415c:	b	14108 <mycore_strcasecmp@@Base+0x1c>
   14160:	mov	r2, #0
   14164:	b	14108 <mycore_strcasecmp@@Base+0x1c>
   14168:	andeq	r9, r1, r4, lsr r8

0001416c <mycore_strncmp@@Base>:
   1416c:	push	{fp, lr}
   14170:	mov	fp, sp
   14174:	cmp	r0, #0
   14178:	mov	lr, r0
   1417c:	cmpne	r1, #0
   14180:	bne	14190 <mycore_strncmp@@Base+0x24>
   14184:	subs	r0, lr, r1
   14188:	movwne	r0, #1
   1418c:	pop	{fp, pc}
   14190:	mov	r0, #0
   14194:	cmp	r2, #0
   14198:	popeq	{fp, pc}
   1419c:	ldrb	ip, [r1]
   141a0:	ldrb	r3, [lr]
   141a4:	cmp	r3, ip
   141a8:	bne	141c0 <mycore_strncmp@@Base+0x54>
   141ac:	subs	r2, r2, #1
   141b0:	add	r1, r1, #1
   141b4:	add	lr, lr, #1
   141b8:	bne	1419c <mycore_strncmp@@Base+0x30>
   141bc:	pop	{fp, pc}
   141c0:	mov	r0, r2
   141c4:	pop	{fp, pc}

000141c8 <mycore_strcmp@@Base>:
   141c8:	cmp	r0, #0
   141cc:	cmpne	r1, #0
   141d0:	bne	141e4 <mycore_strcmp@@Base+0x1c>
   141d4:	subs	r2, r0, r1
   141d8:	movwne	r2, #1
   141dc:	mov	r0, r2
   141e0:	bx	lr
   141e4:	ldrb	r3, [r0]
   141e8:	ldrb	ip, [r1]
   141ec:	mov	r2, #1
   141f0:	cmp	r3, ip
   141f4:	bne	141dc <mycore_strcmp@@Base+0x14>
   141f8:	mov	r2, #1
   141fc:	tst	r3, #255	; 0xff
   14200:	beq	1421c <mycore_strcmp@@Base+0x54>
   14204:	ldrb	r3, [r0, r2]
   14208:	ldrb	ip, [r1, r2]
   1420c:	add	r2, r2, #1
   14210:	cmp	r3, ip
   14214:	beq	141fc <mycore_strcmp@@Base+0x34>
   14218:	b	141dc <mycore_strcmp@@Base+0x14>
   1421c:	mov	r2, #0
   14220:	b	141dc <mycore_strcmp@@Base+0x14>

00014224 <mycore_strcmp_ws@@Base>:
   14224:	push	{r4, r5, fp, lr}
   14228:	add	fp, sp, #8
   1422c:	cmp	r0, #0
   14230:	cmpne	r1, #0
   14234:	bne	14248 <mycore_strcmp_ws@@Base+0x24>
   14238:	subs	r2, r0, r1
   1423c:	movwne	r2, #1
   14240:	mov	r0, r2
   14244:	pop	{r4, r5, fp, pc}
   14248:	ldrb	r3, [r0]
   1424c:	ldrb	r5, [r1]
   14250:	mov	r2, #1
   14254:	cmp	r3, r5
   14258:	bne	14240 <mycore_strcmp_ws@@Base+0x1c>
   1425c:	movw	r4, #27
   14260:	mov	ip, #1
   14264:	mvn	lr, #8
   14268:	mov	r2, #1
   1426c:	movt	r4, #128	; 0x80
   14270:	uxtab	r5, lr, r3
   14274:	cmp	r5, #23
   14278:	bhi	14284 <mycore_strcmp_ws@@Base+0x60>
   1427c:	tst	r4, ip, lsl r5
   14280:	bne	142a8 <mycore_strcmp_ws@@Base+0x84>
   14284:	uxtb	r3, r3
   14288:	cmp	r3, #0
   1428c:	beq	142a8 <mycore_strcmp_ws@@Base+0x84>
   14290:	ldrb	r3, [r0, r2]
   14294:	ldrb	r5, [r1, r2]
   14298:	add	r2, r2, #1
   1429c:	cmp	r3, r5
   142a0:	beq	14270 <mycore_strcmp_ws@@Base+0x4c>
   142a4:	b	14240 <mycore_strcmp_ws@@Base+0x1c>
   142a8:	mov	r2, #0
   142ac:	b	14240 <mycore_strcmp_ws@@Base+0x1c>

000142b0 <mycore_ustrcasecmp_without_checks_by_secondary@@Base>:
   142b0:	push	{fp, lr}
   142b4:	mov	fp, sp
   142b8:	ldrb	r3, [r0]
   142bc:	mov	r2, r0
   142c0:	mov	r0, #1
   142c4:	cmp	r3, #0
   142c8:	popeq	{fp, pc}
   142cc:	ldr	ip, [pc, #56]	; 1430c <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x5c>
   142d0:	add	r2, r2, #1
   142d4:	add	ip, pc, ip
   142d8:	uxtb	r3, r3
   142dc:	ldrb	lr, [ip, r3]
   142e0:	ldrb	r3, [r1]
   142e4:	ldrb	r3, [ip, r3]
   142e8:	cmp	lr, r3
   142ec:	bne	14304 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x54>
   142f0:	ldrb	r3, [r2], #1
   142f4:	add	r1, r1, #1
   142f8:	cmp	r3, #0
   142fc:	bne	142d8 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x28>
   14300:	pop	{fp, pc}
   14304:	mov	r0, #0
   14308:	pop	{fp, pc}
   1430c:	andeq	r9, r1, ip, ror r6

00014310 <mycore_utils_avl_tree_create@@Base>:
   14310:	mov	r0, #1
   14314:	mov	r1, #4
   14318:	b	11248 <mycore_calloc@plt>

0001431c <mycore_utils_avl_tree_init@@Base>:
   1431c:	push	{r4, sl, fp, lr}
   14320:	add	fp, sp, #8
   14324:	mov	r4, r0
   14328:	bl	11344 <mcobject_create@plt>
   1432c:	cmp	r0, #0
   14330:	str	r0, [r4]
   14334:	beq	14350 <mycore_utils_avl_tree_init@@Base+0x34>
   14338:	mov	r1, #256	; 0x100
   1433c:	mov	r2, #24
   14340:	bl	1198c <mcobject_init@plt>
   14344:	cmp	r0, #0
   14348:	movwne	r0, #1
   1434c:	pop	{r4, sl, fp, pc}
   14350:	mov	r0, #2
   14354:	pop	{r4, sl, fp, pc}

00014358 <mycore_utils_avl_tree_clean@@Base>:
   14358:	ldr	r0, [r0]
   1435c:	b	1201c <mcobject_clean@plt>

00014360 <mycore_utils_avl_tree_destroy@@Base>:
   14360:	push	{r4, r5, r6, sl, fp, lr}
   14364:	add	fp, sp, #16
   14368:	mov	r4, #0
   1436c:	cmp	r0, #0
   14370:	beq	143a0 <mycore_utils_avl_tree_destroy@@Base+0x40>
   14374:	mov	r5, r0
   14378:	ldr	r0, [r0]
   1437c:	mov	r6, r1
   14380:	mov	r1, #1
   14384:	bl	11134 <mcobject_destroy@plt>
   14388:	cmp	r6, #0
   1438c:	beq	1439c <mycore_utils_avl_tree_destroy@@Base+0x3c>
   14390:	mov	r0, r5
   14394:	bl	11eb4 <mycore_free@plt>
   14398:	b	143a0 <mycore_utils_avl_tree_destroy@@Base+0x40>
   1439c:	mov	r4, r5
   143a0:	mov	r0, r4
   143a4:	pop	{r4, r5, r6, sl, fp, pc}

000143a8 <mycore_utils_avl_tree_node_create_root@@Base>:
   143a8:	push	{r4, r5, fp, lr}
   143ac:	add	fp, sp, #8
   143b0:	ldr	r0, [r0]
   143b4:	mov	r5, r1
   143b8:	mov	r1, #0
   143bc:	mov	r4, r2
   143c0:	bl	11bf0 <mcobject_malloc@plt>
   143c4:	vmov.i32	q8, #0	; 0x00000000
   143c8:	add	r1, r0, #8
   143cc:	stm	r0, {r4, r5}
   143d0:	vst1.32	{d16-d17}, [r1]
   143d4:	pop	{r4, r5, fp, pc}

000143d8 <mycore_utils_avl_tree_node_clean@@Base>:
   143d8:	vmov.i32	q8, #0	; 0x00000000
   143dc:	mov	r1, #0
   143e0:	mov	r2, #20
   143e4:	str	r1, [r0, #16]
   143e8:	vst1.32	{d16-d17}, [r0], r2
   143ec:	str	r1, [r0]
   143f0:	bx	lr

000143f4 <mycore_utils_avl_tree_node_height@@Base>:
   143f4:	cmp	r0, #0
   143f8:	beq	14404 <mycore_utils_avl_tree_node_height@@Base+0x10>
   143fc:	ldrh	r0, [r0, #20]
   14400:	b	14408 <mycore_utils_avl_tree_node_height@@Base+0x14>
   14404:	mov	r0, #0
   14408:	sxth	r0, r0
   1440c:	bx	lr

00014410 <mycore_utils_avl_tree_node_balance_factor@@Base>:
   14410:	ldr	r3, [r0, #12]
   14414:	ldr	r0, [r0, #8]
   14418:	mov	r2, #0
   1441c:	mov	r1, #0
   14420:	cmp	r3, #0
   14424:	ldrhne	r2, [r3, #20]
   14428:	cmp	r0, #0
   1442c:	ldrhne	r1, [r0, #20]
   14430:	sub	r0, r2, r1
   14434:	sxth	r0, r0
   14438:	bx	lr

0001443c <mycore_utils_avl_tree_node_set_height@@Base>:
   1443c:	ldr	r3, [r0, #8]
   14440:	mov	r2, #0
   14444:	mov	r1, #0
   14448:	cmp	r3, #0
   1444c:	ldrhne	r2, [r3, #20]
   14450:	ldr	r3, [r0, #12]
   14454:	cmp	r3, #0
   14458:	ldrhne	r1, [r3, #20]
   1445c:	sxth	r3, r2
   14460:	sxth	ip, r1
   14464:	cmp	r3, ip
   14468:	movgt	r1, r2
   1446c:	add	r1, r1, #1
   14470:	strh	r1, [r0, #20]
   14474:	bx	lr

00014478 <mycore_utils_avl_tree_node_rotate_right@@Base>:
   14478:	push	{r4, sl, fp, lr}
   1447c:	add	fp, sp, #8
   14480:	mov	r1, r0
   14484:	ldr	r0, [r0, #8]
   14488:	ldr	r2, [r1, #16]
   1448c:	str	r2, [r0, #16]
   14490:	ldr	r2, [r0, #12]
   14494:	cmp	r2, #0
   14498:	beq	144b4 <mycore_utils_avl_tree_node_rotate_right@@Base+0x3c>
   1449c:	str	r1, [r2, #16]
   144a0:	str	r0, [r1, #16]
   144a4:	str	r2, [r1, #8]
   144a8:	str	r1, [r0, #12]
   144ac:	ldrh	ip, [r2, #20]
   144b0:	b	144c4 <mycore_utils_avl_tree_node_rotate_right@@Base+0x4c>
   144b4:	str	r0, [r1, #16]
   144b8:	str	r2, [r1, #8]
   144bc:	str	r1, [r0, #12]
   144c0:	mov	ip, #0
   144c4:	ldr	r2, [r1, #12]
   144c8:	mov	r3, #0
   144cc:	sxth	r4, ip
   144d0:	mov	lr, #0
   144d4:	cmp	r2, #0
   144d8:	ldrhne	r3, [r2, #20]
   144dc:	sxth	r2, r3
   144e0:	cmp	r4, r2
   144e4:	movgt	r3, ip
   144e8:	add	r2, r3, #1
   144ec:	strh	r2, [r1, #20]
   144f0:	sxth	r1, r2
   144f4:	ldr	r2, [r0, #8]
   144f8:	cmp	r2, #0
   144fc:	ldrhne	lr, [r2, #20]
   14500:	sxth	r2, lr
   14504:	cmp	r2, r1
   14508:	movgt	r1, lr
   1450c:	add	r1, r1, #1
   14510:	strh	r1, [r0, #20]
   14514:	pop	{r4, sl, fp, pc}

00014518 <mycore_utils_avl_tree_node_rotate_left@@Base>:
   14518:	push	{fp, lr}
   1451c:	mov	fp, sp
   14520:	mov	r1, r0
   14524:	ldr	r0, [r0, #12]
   14528:	mov	ip, #0
   1452c:	mov	r3, #0
   14530:	ldr	r2, [r1, #16]
   14534:	str	r2, [r0, #16]
   14538:	ldr	r2, [r0, #8]
   1453c:	cmp	r2, #0
   14540:	strne	r1, [r2, #16]
   14544:	str	r2, [r1, #12]
   14548:	str	r0, [r1, #16]
   1454c:	str	r1, [r0, #8]
   14550:	ldr	lr, [r1, #8]
   14554:	cmp	lr, #0
   14558:	ldrhne	ip, [lr, #20]
   1455c:	cmp	r2, #0
   14560:	ldrhne	r3, [r2, #20]
   14564:	sxth	r2, ip
   14568:	sxth	lr, r3
   1456c:	cmp	r2, lr
   14570:	movgt	r3, ip
   14574:	add	r2, r3, #1
   14578:	strh	r2, [r1, #20]
   1457c:	sxth	r1, r2
   14580:	ldr	r2, [r0, #12]
   14584:	cmp	r2, #0
   14588:	beq	14594 <mycore_utils_avl_tree_node_rotate_left@@Base+0x7c>
   1458c:	ldrh	r2, [r2, #20]
   14590:	b	14598 <mycore_utils_avl_tree_node_rotate_left@@Base+0x80>
   14594:	mov	r2, #0
   14598:	sxth	r3, r2
   1459c:	cmp	r1, r3
   145a0:	movgt	r2, r1
   145a4:	add	r1, r2, #1
   145a8:	strh	r1, [r0, #20]
   145ac:	pop	{fp, pc}

000145b0 <mycore_utils_avl_tree_node_balance@@Base>:
   145b0:	push	{r4, r5, r6, r7, fp, lr}
   145b4:	add	fp, sp, #16
   145b8:	mov	r7, r0
   145bc:	ldr	r0, [r0, #8]
   145c0:	mov	r4, #0
   145c4:	mov	r3, #0
   145c8:	ldr	r2, [r7, #12]
   145cc:	cmp	r0, #0
   145d0:	ldrhne	r4, [r0, #20]
   145d4:	cmp	r2, #0
   145d8:	ldrhne	r3, [r2, #20]
   145dc:	sxth	r5, r4
   145e0:	sxth	r6, r3
   145e4:	cmp	r6, r5
   145e8:	movlt	r3, r4
   145ec:	add	r3, r3, #1
   145f0:	strh	r3, [r7, #20]
   145f4:	sub	r3, r6, r5
   145f8:	cmn	r3, #2
   145fc:	beq	14660 <mycore_utils_avl_tree_node_balance@@Base+0xb0>
   14600:	cmp	r3, #2
   14604:	bne	146c0 <mycore_utils_avl_tree_node_balance@@Base+0x110>
   14608:	ldr	r3, [r2, #12]
   1460c:	mov	r1, #0
   14610:	mov	r0, #0
   14614:	cmp	r3, #0
   14618:	ldrhne	r1, [r3, #20]
   1461c:	ldr	r3, [r2, #8]
   14620:	cmp	r3, #0
   14624:	ldrhne	r0, [r3, #20]
   14628:	sub	r0, r1, r0
   1462c:	sxth	r0, r0
   14630:	cmn	r0, #1
   14634:	bgt	14644 <mycore_utils_avl_tree_node_balance@@Base+0x94>
   14638:	mov	r0, r2
   1463c:	bl	110c8 <mycore_utils_avl_tree_node_rotate_right@plt>
   14640:	str	r0, [r7, #12]
   14644:	ldr	r4, [r7, #16]
   14648:	cmp	r4, #0
   1464c:	beq	146d8 <mycore_utils_avl_tree_node_balance@@Base+0x128>
   14650:	ldr	r5, [r4, #12]
   14654:	mov	r0, r7
   14658:	bl	11d28 <mycore_utils_avl_tree_node_rotate_left@plt>
   1465c:	b	146b0 <mycore_utils_avl_tree_node_balance@@Base+0x100>
   14660:	ldr	r3, [r0, #12]
   14664:	mov	r2, #0
   14668:	mov	r1, #0
   1466c:	cmp	r3, #0
   14670:	ldrhne	r2, [r3, #20]
   14674:	ldr	r3, [r0, #8]
   14678:	cmp	r3, #0
   1467c:	ldrhne	r1, [r3, #20]
   14680:	sub	r1, r2, r1
   14684:	sxth	r1, r1
   14688:	cmp	r1, #1
   1468c:	blt	14698 <mycore_utils_avl_tree_node_balance@@Base+0xe8>
   14690:	bl	11d28 <mycore_utils_avl_tree_node_rotate_left@plt>
   14694:	str	r0, [r7, #8]
   14698:	ldr	r4, [r7, #16]
   1469c:	cmp	r4, #0
   146a0:	beq	146e4 <mycore_utils_avl_tree_node_balance@@Base+0x134>
   146a4:	ldr	r5, [r4, #12]
   146a8:	mov	r0, r7
   146ac:	bl	110c8 <mycore_utils_avl_tree_node_rotate_right@plt>
   146b0:	cmp	r5, r7
   146b4:	strne	r0, [r4, #8]
   146b8:	streq	r0, [r4, #12]
   146bc:	pop	{r4, r5, r6, r7, fp, pc}
   146c0:	ldr	r0, [r7, #16]
   146c4:	cmp	r0, #0
   146c8:	popne	{r4, r5, r6, r7, fp, pc}
   146cc:	str	r7, [r1]
   146d0:	ldr	r0, [r7, #16]
   146d4:	pop	{r4, r5, r6, r7, fp, pc}
   146d8:	mov	r0, r7
   146dc:	pop	{r4, r5, r6, r7, fp, lr}
   146e0:	b	14518 <mycore_utils_avl_tree_node_rotate_left@@Base>
   146e4:	mov	r0, r7
   146e8:	pop	{r4, r5, r6, r7, fp, lr}
   146ec:	b	14478 <mycore_utils_avl_tree_node_rotate_right@@Base>

000146f0 <mycore_utils_avl_tree_add@@Base>:
   146f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   146f4:	add	fp, sp, #24
   146f8:	ldr	r0, [r0]
   146fc:	ldr	r7, [r1]
   14700:	mov	r4, r1
   14704:	mov	r1, #0
   14708:	mov	r8, r3
   1470c:	mov	r6, r2
   14710:	mov	r5, #0
   14714:	bl	11bf0 <mcobject_malloc@plt>
   14718:	vmov.i32	q8, #0	; 0x00000000
   1471c:	cmp	r7, #0
   14720:	beq	14788 <mycore_utils_avl_tree_add@@Base+0x98>
   14724:	mov	r1, #20
   14728:	mov	r2, r0
   1472c:	str	r5, [r0, #16]
   14730:	vst1.32	{d16-d17}, [r2], r1
   14734:	str	r5, [r2]
   14738:	ldr	r2, [r7, #4]
   1473c:	cmp	r2, r6
   14740:	bne	1474c <mycore_utils_avl_tree_add@@Base+0x5c>
   14744:	mov	r1, r7
   14748:	b	14780 <mycore_utils_avl_tree_add@@Base+0x90>
   1474c:	cmp	r2, r6
   14750:	bls	14764 <mycore_utils_avl_tree_add@@Base+0x74>
   14754:	ldr	r1, [r7, #8]
   14758:	cmp	r1, #0
   1475c:	bne	14770 <mycore_utils_avl_tree_add@@Base+0x80>
   14760:	b	147a0 <mycore_utils_avl_tree_add@@Base+0xb0>
   14764:	ldr	r1, [r7, #12]
   14768:	cmp	r1, #0
   1476c:	beq	147a8 <mycore_utils_avl_tree_add@@Base+0xb8>
   14770:	ldr	r2, [r1, #4]
   14774:	mov	r7, r1
   14778:	cmp	r2, r6
   1477c:	bne	1474c <mycore_utils_avl_tree_add@@Base+0x5c>
   14780:	str	r8, [r1]
   14784:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14788:	add	r1, r0, #8
   1478c:	str	r8, [r0]
   14790:	str	r6, [r0, #4]
   14794:	vst1.32	{d16-d17}, [r1]
   14798:	str	r0, [r4]
   1479c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   147a0:	add	r1, r7, #8
   147a4:	b	147ac <mycore_utils_avl_tree_add@@Base+0xbc>
   147a8:	add	r1, r7, #12
   147ac:	str	r0, [r1]
   147b0:	str	r7, [r0, #16]
   147b4:	str	r8, [r0]
   147b8:	str	r6, [r0, #4]
   147bc:	mov	r1, r4
   147c0:	bl	11bb4 <mycore_utils_avl_tree_node_balance@plt>
   147c4:	cmp	r0, #0
   147c8:	bne	147bc <mycore_utils_avl_tree_add@@Base+0xcc>
   147cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000147d0 <mycore_utils_avl_tree_find_min@@Base>:
   147d0:	cmp	r0, #0
   147d4:	beq	147ec <mycore_utils_avl_tree_find_min@@Base+0x1c>
   147d8:	mov	r1, r0
   147dc:	ldr	r0, [r0, #12]
   147e0:	cmp	r0, #0
   147e4:	bne	147d8 <mycore_utils_avl_tree_find_min@@Base+0x8>
   147e8:	b	147f0 <mycore_utils_avl_tree_find_min@@Base+0x20>
   147ec:	mov	r1, #0
   147f0:	mov	r0, r1
   147f4:	bx	lr

000147f8 <mycore_utils_avl_tree_rotate_for_delete@@Base>:
   147f8:	push	{r4, sl, fp, lr}
   147fc:	add	fp, sp, #8
   14800:	mov	r4, r2
   14804:	cmp	r1, #0
   14808:	beq	14858 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x60>
   1480c:	ldr	r2, [r0, #8]
   14810:	cmp	r2, r1
   14814:	beq	1487c <mycore_utils_avl_tree_rotate_for_delete@@Base+0x84>
   14818:	ldr	ip, [r1, #16]
   1481c:	mov	r3, #0
   14820:	str	r3, [ip, #12]
   14824:	ldr	r3, [r0, #16]
   14828:	str	r3, [r1, #16]
   1482c:	ldr	r3, [r0, #12]
   14830:	str	r2, [r1, #8]
   14834:	str	r3, [r1, #12]
   14838:	ldr	r2, [r0, #8]
   1483c:	cmp	r2, #0
   14840:	strne	r1, [r2, #16]
   14844:	mov	r2, r1
   14848:	ldr	r3, [r0, #12]
   1484c:	cmp	r3, #0
   14850:	movne	r2, r1
   14854:	b	148a0 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xa8>
   14858:	ldr	r2, [r0, #16]
   1485c:	cmp	r2, #0
   14860:	beq	148e4 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xec>
   14864:	ldr	r3, [r2, #8]
   14868:	ldr	r1, [r0, #12]
   1486c:	cmp	r3, r0
   14870:	streq	r1, [r2, #8]
   14874:	strne	r1, [r2, #12]
   14878:	b	148c8 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xd0>
   1487c:	ldr	r2, [r0, #16]
   14880:	str	r2, [r1, #16]
   14884:	ldr	r2, [r0, #12]
   14888:	str	r2, [r1, #12]
   1488c:	ldr	r2, [r1, #8]
   14890:	ldr	r3, [r0, #12]
   14894:	cmp	r2, #0
   14898:	moveq	r2, r1
   1489c:	cmp	r3, #0
   148a0:	strne	r1, [r3, #16]
   148a4:	ldr	lr, [r0, #16]
   148a8:	mov	ip, r4
   148ac:	cmp	lr, #0
   148b0:	beq	148c4 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xcc>
   148b4:	ldr	r3, [lr, #8]!
   148b8:	cmp	r3, r0
   148bc:	addne	lr, lr, #4
   148c0:	mov	ip, lr
   148c4:	str	r1, [ip]
   148c8:	mov	r0, r2
   148cc:	mov	r1, r4
   148d0:	bl	11bb4 <mycore_utils_avl_tree_node_balance@plt>
   148d4:	mov	r2, r0
   148d8:	cmp	r0, #0
   148dc:	bne	148c8 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xd0>
   148e0:	pop	{r4, sl, fp, pc}
   148e4:	ldr	r0, [r0, #12]
   148e8:	str	r0, [r4]
   148ec:	pop	{r4, sl, fp, pc}

000148f0 <mycore_utils_avl_tree_delete@@Base>:
   148f0:	push	{r4, r5, r6, sl, fp, lr}
   148f4:	add	fp, sp, #16
   148f8:	ldr	r4, [r1]
   148fc:	mov	r6, #0
   14900:	cmp	r4, #0
   14904:	beq	14974 <mycore_utils_avl_tree_delete@@Base+0x84>
   14908:	mov	r3, r1
   1490c:	mov	r5, r0
   14910:	ldr	r0, [r4, #4]
   14914:	cmp	r0, r2
   14918:	beq	14934 <mycore_utils_avl_tree_delete@@Base+0x44>
   1491c:	mov	r0, #12
   14920:	movwhi	r0, #8
   14924:	ldr	r4, [r4, r0]
   14928:	cmp	r4, #0
   1492c:	bne	14910 <mycore_utils_avl_tree_delete@@Base+0x20>
   14930:	b	14974 <mycore_utils_avl_tree_delete@@Base+0x84>
   14934:	ldr	r0, [r4, #8]
   14938:	cmp	r0, #0
   1493c:	beq	14954 <mycore_utils_avl_tree_delete@@Base+0x64>
   14940:	mov	r1, r0
   14944:	ldr	r0, [r0, #12]
   14948:	cmp	r0, #0
   1494c:	bne	14940 <mycore_utils_avl_tree_delete@@Base+0x50>
   14950:	b	14958 <mycore_utils_avl_tree_delete@@Base+0x68>
   14954:	mov	r1, #0
   14958:	mov	r0, r4
   1495c:	mov	r2, r3
   14960:	bl	116e0 <mycore_utils_avl_tree_rotate_for_delete@plt>
   14964:	ldr	r0, [r5]
   14968:	ldr	r6, [r4]
   1496c:	mov	r1, r4
   14970:	bl	112b4 <mcobject_free@plt>
   14974:	mov	r0, r6
   14978:	pop	{r4, r5, r6, sl, fp, pc}

0001497c <mycore_utils_avl_tree_search_by_type@@Base>:
   1497c:	mov	r0, #0
   14980:	cmp	r1, #0
   14984:	bxeq	lr
   14988:	ldr	r3, [r1, #4]
   1498c:	cmp	r3, r2
   14990:	beq	149a4 <mycore_utils_avl_tree_search_by_type@@Base+0x28>
   14994:	mov	r3, #12
   14998:	movwhi	r3, #8
   1499c:	ldr	r1, [r1, r3]
   149a0:	b	14980 <mycore_utils_avl_tree_search_by_type@@Base+0x4>
   149a4:	mov	r0, r1
   149a8:	bx	lr

000149ac <mycore_utils_avl_tree_list_all_nodes@@Base>:
   149ac:	push	{r4, r5, r6, r7, fp, lr}
   149b0:	add	fp, sp, #16
   149b4:	cmp	r1, #0
   149b8:	beq	149f8 <mycore_utils_avl_tree_list_all_nodes@@Base+0x4c>
   149bc:	mov	r4, r3
   149c0:	mov	r5, r2
   149c4:	mov	r6, r1
   149c8:	mov	r7, r0
   149cc:	mov	r0, r6
   149d0:	mov	r1, r4
   149d4:	blx	r5
   149d8:	ldr	r1, [r6, #8]
   149dc:	mov	r0, r7
   149e0:	mov	r2, r5
   149e4:	mov	r3, r4
   149e8:	bl	1153c <mycore_utils_avl_tree_list_all_nodes@plt>
   149ec:	ldr	r6, [r6, #12]
   149f0:	cmp	r6, #0
   149f4:	bne	149cc <mycore_utils_avl_tree_list_all_nodes@@Base+0x20>
   149f8:	pop	{r4, r5, r6, r7, fp, pc}
   149fc:	andeq	r0, r0, r0

00014a00 <mchar_async_create@@Base>:
   14a00:	mov	r0, #1
   14a04:	mov	r1, #84	; 0x54
   14a08:	b	11248 <mycore_calloc@plt>

00014a0c <mchar_async_init@@Base>:
   14a0c:	push	{r4, r5, fp, lr}
   14a10:	add	fp, sp, #8
   14a14:	cmp	r2, #4096	; 0x1000
   14a18:	str	r1, [r0, #16]
   14a1c:	mov	r4, r0
   14a20:	mov	r0, #1024	; 0x400
   14a24:	mov	r1, #4
   14a28:	str	r0, [r4, #8]
   14a2c:	movls	r2, #4096	; 0x1000
   14a30:	mov	r0, #1024	; 0x400
   14a34:	str	r2, [r4]
   14a38:	bl	11248 <mycore_calloc@plt>
   14a3c:	mov	r5, #2
   14a40:	cmp	r0, #0
   14a44:	str	r0, [r4, #4]
   14a48:	beq	14a9c <mchar_async_init@@Base+0x90>
   14a4c:	ldr	r0, [r4, #16]
   14a50:	mov	r1, #20
   14a54:	bl	11248 <mycore_calloc@plt>
   14a58:	ldr	r1, [r4, #4]
   14a5c:	str	r0, [r1]
   14a60:	ldr	r0, [r4, #4]
   14a64:	ldr	r1, [r0]
   14a68:	cmp	r1, #0
   14a6c:	beq	14a94 <mchar_async_init@@Base+0x88>
   14a70:	add	r0, r4, #24
   14a74:	bl	11d4c <mchar_async_cache_init@plt>
   14a78:	cmp	r0, #0
   14a7c:	beq	14aa4 <mchar_async_init@@Base+0x98>
   14a80:	mov	r5, r0
   14a84:	ldr	r0, [r4, #4]
   14a88:	ldr	r0, [r0]
   14a8c:	bl	11eb4 <mycore_free@plt>
   14a90:	ldr	r0, [r4, #4]
   14a94:	bl	11eb4 <mycore_free@plt>
   14a98:	str	r0, [r4, #4]
   14a9c:	mov	r0, r5
   14aa0:	pop	{r4, r5, fp, pc}
   14aa4:	mov	r5, #0
   14aa8:	mov	r0, #64	; 0x40
   14aac:	mov	r1, #36	; 0x24
   14ab0:	str	r5, [r4, #60]	; 0x3c
   14ab4:	str	r0, [r4, #64]	; 0x40
   14ab8:	mov	r0, #64	; 0x40
   14abc:	bl	11248 <mycore_calloc@plt>
   14ac0:	cmp	r0, #0
   14ac4:	str	r0, [r4, #56]	; 0x38
   14ac8:	beq	14a9c <mchar_async_init@@Base+0x90>
   14acc:	ldr	r0, [r4, #64]	; 0x40
   14ad0:	mov	r5, #0
   14ad4:	str	r5, [r4, #72]	; 0x48
   14ad8:	str	r0, [r4, #76]	; 0x4c
   14adc:	lsl	r0, r0, #2
   14ae0:	bl	11dac <mycore_malloc@plt>
   14ae4:	cmp	r0, #0
   14ae8:	str	r0, [r4, #68]	; 0x44
   14aec:	beq	14a9c <mchar_async_init@@Base+0x90>
   14af0:	mov	r0, r4
   14af4:	bl	11cf8 <mchar_async_clean@plt>
   14af8:	bl	11110 <mcsync_create@plt>
   14afc:	cmp	r0, #0
   14b00:	mov	r5, #2
   14b04:	str	r0, [r4, #80]	; 0x50
   14b08:	beq	14a9c <mchar_async_init@@Base+0x90>
   14b0c:	pop	{r4, r5, fp, lr}
   14b10:	b	11a34 <mcsync_init@plt>
   14b14:	nop	{0}

00014b18 <mchar_async_cache_init@@Base>:
   14b18:	push	{r4, r5, fp, lr}
   14b1c:	add	fp, sp, #8
   14b20:	mov	r4, r0
   14b24:	add	r0, pc, #108	; 0x6c
   14b28:	vld1.64	{d16-d17}, [r0]
   14b2c:	add	r0, r4, #4
   14b30:	vst1.32	{d16-d17}, [r0]
   14b34:	mov	r0, #20480	; 0x5000
   14b38:	bl	11dac <mycore_malloc@plt>
   14b3c:	mov	r5, #2
   14b40:	cmp	r0, #0
   14b44:	str	r0, [r4]
   14b48:	beq	14b90 <mchar_async_cache_init@@Base+0x78>
   14b4c:	mov	r5, #0
   14b50:	str	r5, [r0]
   14b54:	str	r5, [r0, #4]
   14b58:	str	r5, [r0, #8]
   14b5c:	str	r5, [r0, #12]
   14b60:	ldr	r0, [r4, #4]
   14b64:	str	r5, [r4, #24]
   14b68:	str	r0, [r4, #28]
   14b6c:	lsl	r0, r0, #2
   14b70:	bl	11dac <mycore_malloc@plt>
   14b74:	cmp	r0, #0
   14b78:	str	r0, [r4, #20]
   14b7c:	bne	14b90 <mchar_async_cache_init@@Base+0x78>
   14b80:	ldr	r0, [r4]
   14b84:	bl	11eb4 <mycore_free@plt>
   14b88:	mov	r5, #2
   14b8c:	str	r0, [r4]
   14b90:	mov	r0, r5
   14b94:	pop	{r4, r5, fp, pc}
   14b98:	andeq	r0, r0, r0, lsl #8
   14b9c:	andeq	r0, r0, r1
	...

00014ba8 <mchar_async_clean@@Base>:
   14ba8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14bac:	add	fp, sp, #24
   14bb0:	vpush	{d8-d9}
   14bb4:	mov	r4, r0
   14bb8:	mov	r1, #1
   14bbc:	mov	r0, #0
   14bc0:	str	r1, [r4, #12]
   14bc4:	str	r0, [r4, #20]
   14bc8:	str	r0, [r4, #48]	; 0x30
   14bcc:	str	r1, [r4, #32]
   14bd0:	str	r0, [r4, #36]	; 0x24
   14bd4:	str	r0, [r4, #40]	; 0x28
   14bd8:	ldr	r1, [r4, #24]
   14bdc:	cmp	r1, #0
   14be0:	beq	14bec <mchar_async_clean@@Base+0x44>
   14be4:	vmov.i32	q8, #0	; 0x00000000
   14be8:	vst1.32	{d16-d17}, [r1]
   14bec:	ldr	r1, [r4, #60]	; 0x3c
   14bf0:	cmp	r1, #0
   14bf4:	beq	14c74 <mchar_async_clean@@Base+0xcc>
   14bf8:	vmov.i32	q4, #0	; 0x00000000
   14bfc:	mov	r9, #0
   14c00:	mov	r8, #1
   14c04:	mov	r7, #0
   14c08:	mov	r6, #0
   14c0c:	ldr	r5, [r4, #56]	; 0x38
   14c10:	add	r1, r5, r7
   14c14:	str	r9, [r1, #28]
   14c18:	str	r8, [r1, #12]
   14c1c:	str	r9, [r1, #16]
   14c20:	str	r9, [r1, #20]
   14c24:	ldr	r0, [r1, #4]
   14c28:	cmp	r0, #0
   14c2c:	beq	14c34 <mchar_async_clean@@Base+0x8c>
   14c30:	vst1.32	{d8-d9}, [r0]
   14c34:	ldr	r2, [r4]
   14c38:	mov	r0, r4
   14c3c:	bl	11b78 <mchar_async_chunk_malloc@plt>
   14c40:	cmp	r0, #0
   14c44:	str	r0, [r5, r7]
   14c48:	beq	14c70 <mchar_async_clean@@Base+0xc8>
   14c4c:	mov	r1, r0
   14c50:	mov	r0, #0
   14c54:	add	r6, r6, #1
   14c58:	add	r7, r7, #36	; 0x24
   14c5c:	str	r0, [r1, #16]
   14c60:	ldr	r1, [r4, #60]	; 0x3c
   14c64:	cmp	r6, r1
   14c68:	bcc	14c0c <mchar_async_clean@@Base+0x64>
   14c6c:	b	14c74 <mchar_async_clean@@Base+0xcc>
   14c70:	mov	r0, #2
   14c74:	vpop	{d8-d9}
   14c78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014c7c <mchar_async_cache_clean@@Base>:
   14c7c:	mov	r1, #0
   14c80:	mov	r2, #1
   14c84:	str	r1, [r0, #24]
   14c88:	str	r2, [r0, #8]
   14c8c:	str	r1, [r0, #12]
   14c90:	str	r1, [r0, #16]
   14c94:	ldr	r0, [r0]
   14c98:	cmp	r0, #0
   14c9c:	bxeq	lr
   14ca0:	vmov.i32	q8, #0	; 0x00000000
   14ca4:	vst1.32	{d16-d17}, [r0]
   14ca8:	bx	lr

00014cac <mchar_async_chunk_malloc@@Base>:
   14cac:	push	{r4, r5, fp, lr}
   14cb0:	add	fp, sp, #8
   14cb4:	mov	r5, r0
   14cb8:	ldr	r0, [r0, #80]	; 0x50
   14cbc:	mov	r4, r2
   14cc0:	bl	11a28 <mcsync_lock@plt>
   14cc4:	mov	r0, r5
   14cc8:	mov	r2, r4
   14ccc:	bl	11ce0 <mchar_async_chunk_malloc_without_lock@plt>
   14cd0:	mov	r4, r0
   14cd4:	ldr	r0, [r5, #80]	; 0x50
   14cd8:	bl	11f8c <mcsync_unlock@plt>
   14cdc:	mov	r0, r4
   14ce0:	pop	{r4, r5, fp, pc}

00014ce4 <mchar_async_destroy@@Base>:
   14ce4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14ce8:	add	fp, sp, #24
   14cec:	cmp	r0, #0
   14cf0:	beq	14e10 <mchar_async_destroy@@Base+0x12c>
   14cf4:	mov	r4, r0
   14cf8:	ldr	r0, [r0, #56]	; 0x38
   14cfc:	mov	r8, r1
   14d00:	cmp	r0, #0
   14d04:	beq	14d68 <mchar_async_destroy@@Base+0x84>
   14d08:	ldr	r1, [r4, #60]	; 0x3c
   14d0c:	cmp	r1, #0
   14d10:	beq	14d5c <mchar_async_destroy@@Base+0x78>
   14d14:	add	r0, r0, #4
   14d18:	mov	r1, #0
   14d1c:	bl	11a58 <mchar_async_cache_destroy@plt>
   14d20:	ldr	r0, [r4, #60]	; 0x3c
   14d24:	cmp	r0, #2
   14d28:	bcc	14d58 <mchar_async_destroy@@Base+0x74>
   14d2c:	mov	r5, #1
   14d30:	mov	r6, #40	; 0x28
   14d34:	ldr	r0, [r4, #56]	; 0x38
   14d38:	mov	r1, #0
   14d3c:	add	r0, r0, r6
   14d40:	bl	11a58 <mchar_async_cache_destroy@plt>
   14d44:	ldr	r0, [r4, #60]	; 0x3c
   14d48:	add	r5, r5, #1
   14d4c:	add	r6, r6, #36	; 0x24
   14d50:	cmp	r5, r0
   14d54:	bcc	14d34 <mchar_async_destroy@@Base+0x50>
   14d58:	ldr	r0, [r4, #56]	; 0x38
   14d5c:	bl	11eb4 <mycore_free@plt>
   14d60:	mov	r0, #0
   14d64:	str	r0, [r4, #56]	; 0x38
   14d68:	ldr	r0, [r4, #68]	; 0x44
   14d6c:	cmp	r0, #0
   14d70:	beq	14d78 <mchar_async_destroy@@Base+0x94>
   14d74:	bl	11eb4 <mycore_free@plt>
   14d78:	ldr	r0, [r4, #4]
   14d7c:	cmp	r0, #0
   14d80:	beq	14e28 <mchar_async_destroy@@Base+0x144>
   14d84:	ldr	r2, [r4, #12]
   14d88:	cmp	r2, #0
   14d8c:	beq	14e1c <mchar_async_destroy@@Base+0x138>
   14d90:	mov	r6, #0
   14d94:	mov	r1, r0
   14d98:	ldr	r3, [r1, r6, lsl #2]!
   14d9c:	cmp	r3, #0
   14da0:	beq	14dfc <mchar_async_destroy@@Base+0x118>
   14da4:	ldr	r2, [r4, #16]
   14da8:	cmp	r2, #0
   14dac:	beq	14df0 <mchar_async_destroy@@Base+0x10c>
   14db0:	mov	r7, #1
   14db4:	mov	r5, #0
   14db8:	ldr	r1, [r3, r5]
   14dbc:	cmp	r1, #0
   14dc0:	beq	14dd4 <mchar_async_destroy@@Base+0xf0>
   14dc4:	mov	r0, r1
   14dc8:	bl	11eb4 <mycore_free@plt>
   14dcc:	ldr	r0, [r4, #4]
   14dd0:	ldr	r2, [r4, #16]
   14dd4:	add	r1, r0, r6, lsl #2
   14dd8:	cmp	r7, r2
   14ddc:	bcs	14df0 <mchar_async_destroy@@Base+0x10c>
   14de0:	ldr	r3, [r1]
   14de4:	add	r5, r5, #20
   14de8:	add	r7, r7, #1
   14dec:	b	14db8 <mchar_async_destroy@@Base+0xd4>
   14df0:	ldr	r0, [r1]
   14df4:	bl	11eb4 <mycore_free@plt>
   14df8:	ldr	r2, [r4, #12]
   14dfc:	add	r6, r6, #1
   14e00:	cmp	r6, r2
   14e04:	bcs	14e18 <mchar_async_destroy@@Base+0x134>
   14e08:	ldr	r0, [r4, #4]
   14e0c:	b	14d94 <mchar_async_destroy@@Base+0xb0>
   14e10:	mov	r6, #0
   14e14:	b	14e6c <mchar_async_destroy@@Base+0x188>
   14e18:	ldr	r0, [r4, #4]
   14e1c:	bl	11eb4 <mycore_free@plt>
   14e20:	mov	r0, #0
   14e24:	str	r0, [r4, #4]
   14e28:	add	r0, r4, #24
   14e2c:	mov	r1, #0
   14e30:	mov	r6, #0
   14e34:	bl	11a58 <mchar_async_cache_destroy@plt>
   14e38:	ldr	r0, [r4, #80]	; 0x50
   14e3c:	mov	r1, #1
   14e40:	bl	1147c <mcsync_destroy@plt>
   14e44:	mov	r0, r4
   14e48:	mov	r1, #0
   14e4c:	mov	r2, #84	; 0x54
   14e50:	bl	11a7c <memset@plt>
   14e54:	cmp	r8, #0
   14e58:	beq	14e68 <mchar_async_destroy@@Base+0x184>
   14e5c:	mov	r0, r4
   14e60:	bl	11eb4 <mycore_free@plt>
   14e64:	b	14e6c <mchar_async_destroy@@Base+0x188>
   14e68:	mov	r6, r4
   14e6c:	mov	r0, r6
   14e70:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014e74 <mchar_async_cache_destroy@@Base>:
   14e74:	push	{r4, r5, r6, sl, fp, lr}
   14e78:	add	fp, sp, #16
   14e7c:	mov	r4, #0
   14e80:	cmp	r0, #0
   14e84:	beq	14ec8 <mchar_async_cache_destroy@@Base+0x54>
   14e88:	mov	r5, r0
   14e8c:	ldr	r0, [r0]
   14e90:	mov	r6, r1
   14e94:	cmp	r0, #0
   14e98:	beq	14ea0 <mchar_async_cache_destroy@@Base+0x2c>
   14e9c:	bl	11eb4 <mycore_free@plt>
   14ea0:	ldr	r0, [r5, #20]
   14ea4:	cmp	r0, #0
   14ea8:	beq	14eb0 <mchar_async_cache_destroy@@Base+0x3c>
   14eac:	bl	11eb4 <mycore_free@plt>
   14eb0:	cmp	r6, #0
   14eb4:	beq	14ec4 <mchar_async_cache_destroy@@Base+0x50>
   14eb8:	mov	r0, r5
   14ebc:	bl	11eb4 <mycore_free@plt>
   14ec0:	b	14ec8 <mchar_async_cache_destroy@@Base+0x54>
   14ec4:	mov	r4, r5
   14ec8:	mov	r0, r4
   14ecc:	pop	{r4, r5, r6, sl, fp, pc}

00014ed0 <mchar_async_mem_malloc@@Base>:
   14ed0:	cmp	r2, #0
   14ed4:	bxeq	lr
   14ed8:	push	{r4, r5, r6, sl, fp, lr}
   14edc:	add	fp, sp, #16
   14ee0:	mov	r6, r0
   14ee4:	ldr	r0, [r2]
   14ee8:	mov	r5, r3
   14eec:	mov	r4, r2
   14ef0:	cmp	r0, #0
   14ef4:	beq	14f14 <mchar_async_mem_malloc@@Base+0x44>
   14ef8:	ldr	r1, [r4, #8]
   14efc:	cmp	r1, r5
   14f00:	bcs	14f2c <mchar_async_mem_malloc@@Base+0x5c>
   14f04:	bl	11eb4 <mycore_free@plt>
   14f08:	ldr	r0, [r6]
   14f0c:	add	r0, r0, r5
   14f10:	b	14f20 <mchar_async_mem_malloc@@Base+0x50>
   14f14:	ldr	r0, [r6]
   14f18:	cmp	r0, r5
   14f1c:	movcc	r0, r5
   14f20:	str	r0, [r4, #8]
   14f24:	bl	11dac <mycore_malloc@plt>
   14f28:	str	r0, [r4]
   14f2c:	mov	r0, #0
   14f30:	str	r0, [r4, #4]
   14f34:	pop	{r4, r5, r6, sl, fp, lr}
   14f38:	bx	lr

00014f3c <mchar_async_chunk_malloc_without_lock@@Base>:
   14f3c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14f40:	add	fp, sp, #24
   14f44:	mov	r5, r0
   14f48:	ldr	r0, [r0, #40]	; 0x28
   14f4c:	mov	r8, r2
   14f50:	cmp	r0, #0
   14f54:	beq	14f80 <mchar_async_chunk_malloc_without_lock@@Base+0x44>
   14f58:	add	r5, r5, #24
   14f5c:	mov	r1, r8
   14f60:	mov	r0, r5
   14f64:	bl	12010 <mchar_async_cache_delete@plt>
   14f68:	cmp	r0, #0
   14f6c:	beq	15060 <mchar_async_chunk_malloc_without_lock@@Base+0x124>
   14f70:	ldr	r1, [r5]
   14f74:	add	r0, r0, r0, lsl #2
   14f78:	ldr	r0, [r1, r0, lsl #2]
   14f7c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14f80:	ldr	r1, [r5, #16]
   14f84:	ldr	r0, [r5, #20]
   14f88:	cmp	r0, r1
   14f8c:	bcc	15020 <mchar_async_chunk_malloc_without_lock@@Base+0xe4>
   14f90:	ldr	r7, [r5, #12]
   14f94:	ldr	r1, [r5, #8]
   14f98:	add	r0, r7, #1
   14f9c:	cmp	r0, r1
   14fa0:	str	r0, [r5, #12]
   14fa4:	bcs	14fb0 <mchar_async_chunk_malloc_without_lock@@Base+0x74>
   14fa8:	ldr	r6, [r5, #4]
   14fac:	b	14ff0 <mchar_async_chunk_malloc_without_lock@@Base+0xb4>
   14fb0:	lsl	r0, r1, #1
   14fb4:	lsl	r1, r1, #3
   14fb8:	str	r0, [r5, #8]
   14fbc:	ldr	r0, [r5, #4]
   14fc0:	bl	10f78 <mycore_realloc@plt>
   14fc4:	cmp	r0, #0
   14fc8:	beq	15060 <mchar_async_chunk_malloc_without_lock@@Base+0x124>
   14fcc:	ldr	r1, [r5, #8]
   14fd0:	ldr	r2, [r5, #12]
   14fd4:	mov	r6, r0
   14fd8:	add	r0, r0, r2, lsl #2
   14fdc:	sub	r1, r1, r2
   14fe0:	lsl	r2, r1, #2
   14fe4:	mov	r1, #0
   14fe8:	bl	11a7c <memset@plt>
   14fec:	str	r6, [r5, #4]
   14ff0:	ldr	r0, [r6, r7, lsl #2]
   14ff4:	cmp	r0, #0
   14ff8:	bne	15018 <mchar_async_chunk_malloc_without_lock@@Base+0xdc>
   14ffc:	ldr	r0, [r5, #16]
   15000:	mov	r1, #20
   15004:	bl	11248 <mycore_calloc@plt>
   15008:	cmp	r0, #0
   1500c:	beq	15060 <mchar_async_chunk_malloc_without_lock@@Base+0x124>
   15010:	ldr	r1, [r5, #4]
   15014:	str	r0, [r1, r7, lsl #2]
   15018:	mov	r0, #0
   1501c:	str	r0, [r5, #20]
   15020:	ldr	r1, [r5, #4]
   15024:	ldr	r2, [r5, #12]
   15028:	add	r4, r0, r0, lsl #2
   1502c:	mov	r3, r8
   15030:	add	r1, r1, r2, lsl #2
   15034:	ldr	r7, [r1, #-4]
   15038:	add	r1, r0, #1
   1503c:	mov	r0, r5
   15040:	str	r1, [r5, #20]
   15044:	add	r6, r7, r4, lsl #2
   15048:	mov	r2, r6
   1504c:	bl	120e8 <mchar_async_mem_malloc@plt>
   15050:	ldr	r0, [r7, r4, lsl #2]
   15054:	cmp	r0, #0
   15058:	movne	r0, r6
   1505c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15060:	mov	r0, #0
   15064:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015068 <mchar_async_cache_delete@@Base>:
   15068:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1506c:	add	fp, sp, #28
   15070:	sub	sp, sp, #4
   15074:	ldr	r2, [r0, #12]
   15078:	mov	r8, #0
   1507c:	cmp	r2, #0
   15080:	beq	152a4 <mchar_async_cache_delete@@Base+0x23c>
   15084:	mov	sl, r0
   15088:	ldr	r0, [r0]
   1508c:	add	r3, r2, r2, lsl #2
   15090:	add	r3, r0, r3, lsl #2
   15094:	ldr	r7, [r3, #4]
   15098:	cmp	r7, r1
   1509c:	bcs	150b0 <mchar_async_cache_delete@@Base+0x48>
   150a0:	ldr	r2, [r3, #12]
   150a4:	cmp	r2, #0
   150a8:	bne	1508c <mchar_async_cache_delete@@Base+0x24>
   150ac:	b	152a4 <mchar_async_cache_delete@@Base+0x23c>
   150b0:	mov	r6, r2
   150b4:	add	r2, r2, r2, lsl #2
   150b8:	add	r5, r0, r2, lsl #2
   150bc:	mov	r3, r5
   150c0:	ldr	r2, [r3, #12]!
   150c4:	add	r7, r2, r2, lsl #2
   150c8:	add	r7, r0, r7, lsl #2
   150cc:	ldr	r4, [r7, #4]
   150d0:	cmp	r4, r1
   150d4:	beq	150b0 <mchar_async_cache_delete@@Base+0x48>
   150d8:	ldr	lr, [r5, #16]
   150dc:	cmp	lr, #0
   150e0:	beq	1514c <mchar_async_cache_delete@@Base+0xe4>
   150e4:	add	r1, lr, lr, lsl #2
   150e8:	add	ip, r0, r1, lsl #2
   150ec:	mov	r9, ip
   150f0:	ldr	r1, [r9, #8]!
   150f4:	cmp	r1, r6
   150f8:	bne	151a4 <mchar_async_cache_delete@@Base+0x13c>
   150fc:	ldr	ip, [r5, #8]!
   15100:	cmp	r2, #0
   15104:	beq	15208 <mchar_async_cache_delete@@Base+0x1a0>
   15108:	cmp	ip, #0
   1510c:	beq	15234 <mchar_async_cache_delete@@Base+0x1cc>
   15110:	ldr	r3, [r7, #8]!
   15114:	add	r1, r3, r3, lsl #2
   15118:	mov	r4, r3
   1511c:	add	r1, r0, r1, lsl #2
   15120:	ldr	r3, [r1, #8]!
   15124:	cmp	r3, #0
   15128:	bne	15114 <mchar_async_cache_delete@@Base+0xac>
   1512c:	cmp	r4, #0
   15130:	beq	15230 <mchar_async_cache_delete@@Base+0x1c8>
   15134:	str	ip, [r1]
   15138:	ldr	r1, [r5]
   1513c:	add	r1, r1, r1, lsl #2
   15140:	add	r1, r0, r1, lsl #2
   15144:	str	r4, [r1, #16]
   15148:	b	15234 <mchar_async_cache_delete@@Base+0x1cc>
   1514c:	ldr	r1, [r5, #8]
   15150:	cmp	r1, #0
   15154:	beq	151fc <mchar_async_cache_delete@@Base+0x194>
   15158:	cmp	r2, #0
   1515c:	beq	15224 <mchar_async_cache_delete@@Base+0x1bc>
   15160:	add	r7, r1, r1, lsl #2
   15164:	add	ip, r0, r7, lsl #2
   15168:	ldr	r5, [ip, #12]!
   1516c:	add	r7, r5, r5, lsl #2
   15170:	mov	r4, r5
   15174:	add	r7, r0, r7, lsl #2
   15178:	ldr	r5, [r7, #12]!
   1517c:	cmp	r5, #0
   15180:	bne	1516c <mchar_async_cache_delete@@Base+0x104>
   15184:	cmp	r4, #0
   15188:	beq	15220 <mchar_async_cache_delete@@Base+0x1b8>
   1518c:	str	r2, [r7]
   15190:	ldr	r2, [r3]
   15194:	add	r2, r2, r2, lsl #2
   15198:	add	r2, r0, r2, lsl #2
   1519c:	str	r4, [r2, #16]
   151a0:	b	15224 <mchar_async_cache_delete@@Base+0x1bc>
   151a4:	ldr	r1, [r5, #8]
   151a8:	cmp	r1, #0
   151ac:	beq	15214 <mchar_async_cache_delete@@Base+0x1ac>
   151b0:	cmp	r2, #0
   151b4:	beq	15240 <mchar_async_cache_delete@@Base+0x1d8>
   151b8:	add	r4, r1, r1, lsl #2
   151bc:	add	r9, r0, r4, lsl #2
   151c0:	ldr	r4, [r9, #12]!
   151c4:	mov	r7, r4
   151c8:	add	r4, r4, r4, lsl #2
   151cc:	add	r5, r0, r4, lsl #2
   151d0:	ldr	r4, [r5, #12]!
   151d4:	cmp	r4, #0
   151d8:	bne	151c4 <mchar_async_cache_delete@@Base+0x15c>
   151dc:	cmp	r7, #0
   151e0:	beq	1523c <mchar_async_cache_delete@@Base+0x1d4>
   151e4:	str	r2, [r5]
   151e8:	ldr	r2, [r3]
   151ec:	add	r2, r2, r2, lsl #2
   151f0:	add	r2, r0, r2, lsl #2
   151f4:	str	r7, [r2, #16]
   151f8:	b	15240 <mchar_async_cache_delete@@Base+0x1d8>
   151fc:	mov	lr, #0
   15200:	str	r2, [sl, #12]
   15204:	b	15248 <mchar_async_cache_delete@@Base+0x1e0>
   15208:	str	ip, [r9]
   1520c:	ldr	r2, [r5]
   15210:	b	15248 <mchar_async_cache_delete@@Base+0x1e0>
   15214:	str	r2, [ip, #12]
   15218:	ldr	r2, [r3]
   1521c:	b	15248 <mchar_async_cache_delete@@Base+0x1e0>
   15220:	str	r2, [ip]
   15224:	str	r1, [sl, #12]
   15228:	mov	lr, #0
   1522c:	b	15244 <mchar_async_cache_delete@@Base+0x1dc>
   15230:	str	ip, [r7]
   15234:	str	r2, [r9]
   15238:	b	15248 <mchar_async_cache_delete@@Base+0x1e0>
   1523c:	str	r2, [r9]
   15240:	str	r1, [ip, #12]
   15244:	mov	r2, r1
   15248:	add	r1, r2, r2, lsl #2
   1524c:	add	r0, r0, r1, lsl #2
   15250:	str	lr, [r0, #16]
   15254:	ldr	r0, [sl, #20]
   15258:	ldr	r1, [sl, #24]
   1525c:	str	r6, [r0, r1, lsl #2]
   15260:	ldr	r1, [sl, #24]
   15264:	ldr	r5, [sl, #28]
   15268:	add	r1, r1, #1
   1526c:	cmp	r1, r5
   15270:	str	r1, [sl, #24]
   15274:	bcc	15294 <mchar_async_cache_delete@@Base+0x22c>
   15278:	lsl	r1, r5, #3
   1527c:	bl	10f78 <mycore_realloc@plt>
   15280:	cmp	r0, #0
   15284:	beq	152a4 <mchar_async_cache_delete@@Base+0x23c>
   15288:	str	r0, [sl, #20]
   1528c:	lsl	r0, r5, #1
   15290:	str	r0, [sl, #28]
   15294:	ldr	r0, [sl, #16]
   15298:	mov	r8, r6
   1529c:	sub	r0, r0, #1
   152a0:	str	r0, [sl, #16]
   152a4:	mov	r0, r8
   152a8:	sub	sp, fp, #28
   152ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000152b0 <mchar_async_node_add@@Base>:
   152b0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   152b4:	add	fp, sp, #24
   152b8:	mov	r5, r0
   152bc:	ldr	r0, [r0, #80]	; 0x50
   152c0:	mov	r4, r1
   152c4:	bl	11a28 <mcsync_lock@plt>
   152c8:	cmp	r0, #0
   152cc:	beq	152e4 <mchar_async_node_add@@Base+0x34>
   152d0:	cmp	r4, #0
   152d4:	mov	r6, #0
   152d8:	movne	r0, #96	; 0x60
   152dc:	strne	r0, [r4]
   152e0:	b	1539c <mchar_async_node_add@@Base+0xec>
   152e4:	ldr	r0, [r5, #72]	; 0x48
   152e8:	cmp	r0, #0
   152ec:	beq	15304 <mchar_async_node_add@@Base+0x54>
   152f0:	sub	r0, r0, #1
   152f4:	str	r0, [r5, #72]	; 0x48
   152f8:	ldr	r1, [r5, #68]	; 0x44
   152fc:	ldr	r6, [r1, r0, lsl #2]
   15300:	b	1531c <mchar_async_node_add@@Base+0x6c>
   15304:	ldr	r6, [r5, #60]	; 0x3c
   15308:	ldr	r0, [r5, #64]	; 0x40
   1530c:	cmp	r6, r0
   15310:	bcs	15380 <mchar_async_node_add@@Base+0xd0>
   15314:	add	r0, r6, #1
   15318:	str	r0, [r5, #60]	; 0x3c
   1531c:	ldr	r8, [r5, #56]	; 0x38
   15320:	add	r7, r6, r6, lsl #3
   15324:	add	r0, r8, r7, lsl #2
   15328:	add	r0, r0, #4
   1532c:	bl	11d4c <mchar_async_cache_init@plt>
   15330:	cmp	r0, #0
   15334:	beq	15348 <mchar_async_node_add@@Base+0x98>
   15338:	cmp	r4, #0
   1533c:	beq	15390 <mchar_async_node_add@@Base+0xe0>
   15340:	mov	r0, #2
   15344:	b	1538c <mchar_async_node_add@@Base+0xdc>
   15348:	ldr	r2, [r5]
   1534c:	mov	r0, r5
   15350:	bl	11ce0 <mchar_async_chunk_malloc_without_lock@plt>
   15354:	cmp	r0, #0
   15358:	str	r0, [r8, r7, lsl #2]
   1535c:	beq	15338 <mchar_async_node_add@@Base+0x88>
   15360:	mov	r7, #0
   15364:	str	r7, [r0, #12]
   15368:	str	r7, [r0, #16]
   1536c:	ldr	r0, [r5, #80]	; 0x50
   15370:	bl	11f8c <mcsync_unlock@plt>
   15374:	cmp	r4, #0
   15378:	strne	r7, [r4]
   1537c:	b	1539c <mchar_async_node_add@@Base+0xec>
   15380:	cmp	r4, #0
   15384:	beq	15390 <mchar_async_node_add@@Base+0xe0>
   15388:	mov	r0, #98	; 0x62
   1538c:	str	r0, [r4]
   15390:	ldr	r0, [r5, #80]	; 0x50
   15394:	bl	11f8c <mcsync_unlock@plt>
   15398:	mov	r6, #0
   1539c:	mov	r0, r6
   153a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000153a4 <mchar_async_node_clean@@Base>:
   153a4:	ldr	r2, [r0, #60]	; 0x3c
   153a8:	cmp	r2, r1
   153ac:	bls	15414 <mchar_async_node_clean@@Base+0x70>
   153b0:	ldr	ip, [r0, #56]	; 0x38
   153b4:	add	r1, r1, r1, lsl #3
   153b8:	mov	r3, ip
   153bc:	ldr	r0, [r3, r1, lsl #2]!
   153c0:	ldr	r2, [r0, #16]
   153c4:	cmp	r2, #0
   153c8:	beq	153e0 <mchar_async_node_clean@@Base+0x3c>
   153cc:	mov	r0, r2
   153d0:	ldr	r2, [r2, #16]
   153d4:	cmp	r2, #0
   153d8:	bne	153cc <mchar_async_node_clean@@Base+0x28>
   153dc:	str	r0, [r3]
   153e0:	mov	r2, #0
   153e4:	str	r2, [r0, #4]
   153e8:	add	r0, ip, r1, lsl #2
   153ec:	mov	r1, #1
   153f0:	str	r2, [r0, #28]
   153f4:	str	r1, [r0, #12]
   153f8:	str	r2, [r0, #16]
   153fc:	str	r2, [r0, #20]
   15400:	ldr	r0, [r0, #4]
   15404:	cmp	r0, #0
   15408:	bxeq	lr
   1540c:	vmov.i32	q8, #0	; 0x00000000
   15410:	vst1.32	{d16-d17}, [r0]
   15414:	bx	lr

00015418 <mchar_async_node_delete@@Base>:
   15418:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1541c:	add	fp, sp, #28
   15420:	sub	sp, sp, #4
   15424:	mov	r4, r0
   15428:	ldr	r0, [r0, #80]	; 0x50
   1542c:	mov	r8, r1
   15430:	bl	11a28 <mcsync_lock@plt>
   15434:	ldr	r0, [r4, #60]	; 0x3c
   15438:	cmp	r0, r8
   1543c:	bls	154fc <mchar_async_node_delete@@Base+0xe4>
   15440:	ldr	r9, [r4, #56]	; 0x38
   15444:	add	sl, r8, r8, lsl #3
   15448:	mov	r5, r9
   1544c:	ldr	r0, [r5, sl, lsl #2]!
   15450:	mov	r6, r0
   15454:	ldr	r0, [r0, #12]
   15458:	cmp	r0, #0
   1545c:	bne	15450 <mchar_async_node_delete@@Base+0x38>
   15460:	cmp	r6, #0
   15464:	beq	15488 <mchar_async_node_delete@@Base+0x70>
   15468:	add	r7, r4, #24
   1546c:	ldr	r2, [r6, #8]
   15470:	mov	r0, r7
   15474:	mov	r1, r6
   15478:	bl	11d94 <mchar_async_cache_add@plt>
   1547c:	ldr	r6, [r6, #16]
   15480:	cmp	r6, #0
   15484:	bne	1546c <mchar_async_node_delete@@Base+0x54>
   15488:	add	r0, r9, sl, lsl #2
   1548c:	ldr	r1, [r0, #4]!
   15490:	cmp	r1, #0
   15494:	movne	r1, #0
   15498:	blne	11a58 <mchar_async_cache_destroy@plt>
   1549c:	vmov.i32	q8, #0	; 0x00000000
   154a0:	mov	r0, #32
   154a4:	add	r1, r5, #16
   154a8:	vst1.32	{d16-d17}, [r5], r0
   154ac:	mov	r0, #0
   154b0:	vst1.32	{d16-d17}, [r1]
   154b4:	str	r0, [r5]
   154b8:	ldr	r0, [r4, #72]	; 0x48
   154bc:	ldr	r5, [r4, #76]	; 0x4c
   154c0:	cmp	r0, r5
   154c4:	bcc	154e4 <mchar_async_node_delete@@Base+0xcc>
   154c8:	ldr	r0, [r4, #68]	; 0x44
   154cc:	lsl	r1, r5, #2
   154d0:	bl	10f78 <mycore_realloc@plt>
   154d4:	cmp	r0, #0
   154d8:	strne	r0, [r4, #68]	; 0x44
   154dc:	lslne	r0, r5, #1
   154e0:	strne	r0, [r4, #76]	; 0x4c
   154e4:	ldr	r0, [r4, #68]	; 0x44
   154e8:	ldr	r1, [r4, #72]	; 0x48
   154ec:	str	r8, [r0, r1, lsl #2]
   154f0:	ldr	r0, [r4, #72]	; 0x48
   154f4:	add	r0, r0, #1
   154f8:	str	r0, [r4, #72]	; 0x48
   154fc:	ldr	r0, [r4, #80]	; 0x50
   15500:	sub	sp, fp, #28
   15504:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15508:	b	11f8c <mcsync_unlock@plt>

0001550c <mchar_async_cache_add@@Base>:
   1550c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15510:	add	fp, sp, #24
   15514:	mov	r7, r0
   15518:	mov	r6, r0
   1551c:	mov	r5, r2
   15520:	mov	r8, r1
   15524:	ldr	r4, [r7, #12]!
   15528:	ldr	r0, [r7, #4]
   1552c:	cmp	r4, #0
   15530:	add	r0, r0, #1
   15534:	str	r0, [r7, #4]
   15538:	beq	15594 <mchar_async_cache_add@@Base+0x88>
   1553c:	mov	r0, r6
   15540:	bl	111f4 <mchar_async_cache_malloc@plt>
   15544:	ldr	r3, [r6]
   15548:	add	r2, r4, r4, lsl #2
   1554c:	mov	r1, r4
   15550:	add	r2, r3, r2, lsl #2
   15554:	ldr	r6, [r2, #4]
   15558:	cmp	r6, r5
   1555c:	beq	155c4 <mchar_async_cache_add@@Base+0xb8>
   15560:	bhi	155f4 <mchar_async_cache_add@@Base+0xe8>
   15564:	ldr	r4, [r2, #12]!
   15568:	cmp	r4, #0
   1556c:	bne	15548 <mchar_async_cache_add@@Base+0x3c>
   15570:	str	r0, [r2]
   15574:	add	r0, r0, r0, lsl #2
   15578:	add	r7, r3, r0, lsl #2
   1557c:	mov	r0, #0
   15580:	str	r5, [r7, #4]
   15584:	str	r0, [r7, #8]
   15588:	str	r0, [r7, #12]
   1558c:	str	r1, [r7, #16]
   15590:	b	1565c <mchar_async_cache_add@@Base+0x150>
   15594:	ldr	r4, [r6]
   15598:	mov	r0, r6
   1559c:	bl	111f4 <mchar_async_cache_malloc@plt>
   155a0:	str	r0, [r6, #12]
   155a4:	add	r0, r0, r0, lsl #2
   155a8:	add	r7, r4, r0, lsl #2
   155ac:	mov	r0, #0
   155b0:	str	r5, [r7, #4]
   155b4:	str	r0, [r7, #8]
   155b8:	str	r0, [r7, #12]
   155bc:	str	r0, [r7, #16]
   155c0:	b	1565c <mchar_async_cache_add@@Base+0x150>
   155c4:	add	r7, r0, r0, lsl #2
   155c8:	ldr	r4, [r2, #12]!
   155cc:	add	r7, r3, r7, lsl #2
   155d0:	add	r6, r7, #12
   155d4:	cmp	r4, #0
   155d8:	beq	15640 <mchar_async_cache_add@@Base+0x134>
   155dc:	str	r4, [r6]
   155e0:	ldr	r6, [r2]
   155e4:	add	r6, r6, r6, lsl #2
   155e8:	add	r3, r3, r6, lsl #2
   155ec:	str	r0, [r3, #16]
   155f0:	b	15648 <mchar_async_cache_add@@Base+0x13c>
   155f4:	ldr	r4, [r2, #16]!
   155f8:	mov	ip, #0
   155fc:	mov	r6, #0
   15600:	cmp	r4, #0
   15604:	beq	15620 <mchar_async_cache_add@@Base+0x114>
   15608:	add	r7, r4, r4, lsl #2
   1560c:	add	r7, r3, r7, lsl #2
   15610:	ldr	r6, [r7, #8]!
   15614:	cmp	r6, r1
   15618:	mov	r6, r4
   1561c:	addne	r7, r7, #4
   15620:	str	r0, [r7]
   15624:	add	r7, r0, r0, lsl #2
   15628:	add	r7, r3, r7, lsl #2
   1562c:	str	r6, [r7, #16]
   15630:	str	r0, [r2]
   15634:	str	r1, [r7, #12]
   15638:	stmib	r7, {r5, ip}
   1563c:	b	1565c <mchar_async_cache_add@@Base+0x150>
   15640:	mov	r3, #0
   15644:	str	r3, [r6]
   15648:	str	r0, [r2]
   1564c:	mov	r0, #0
   15650:	str	r1, [r7, #16]
   15654:	str	r5, [r7, #4]
   15658:	str	r0, [r7, #8]
   1565c:	str	r8, [r7]
   15660:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015664 <mchar_sync_chunk_find_by_size@@Base>:
   15664:	ldr	r0, [r0]
   15668:	ldr	r0, [r0, #12]
   1566c:	cmp	r0, #0
   15670:	bxeq	lr
   15674:	ldr	r2, [r0, #8]
   15678:	cmp	r2, r1
   1567c:	bcc	15668 <mchar_sync_chunk_find_by_size@@Base+0x4>
   15680:	bx	lr

00015684 <mchar_sync_chunk_insert_after@@Base>:
   15684:	ldr	r2, [r0, #12]
   15688:	cmp	r2, r1
   1568c:	bxeq	lr
   15690:	ldr	r2, [r1, #16]
   15694:	cmp	r2, #0
   15698:	ldrne	r3, [r1, #12]
   1569c:	strne	r3, [r2, #12]
   156a0:	ldr	r3, [r1, #12]
   156a4:	cmp	r3, #0
   156a8:	strne	r2, [r3, #16]
   156ac:	ldr	r2, [r0, #12]
   156b0:	cmp	r2, #0
   156b4:	strne	r1, [r2, #16]
   156b8:	str	r2, [r1, #12]
   156bc:	str	r0, [r1, #16]
   156c0:	str	r1, [r0, #12]
   156c4:	bx	lr

000156c8 <mchar_async_malloc@@Base>:
   156c8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   156cc:	add	fp, sp, #24
   156d0:	cmp	r2, #0
   156d4:	beq	15790 <mchar_async_malloc@@Base+0xc8>
   156d8:	ldr	r5, [r0, #56]	; 0x38
   156dc:	mov	r8, r0
   156e0:	add	r0, r1, r1, lsl #3
   156e4:	mov	r4, r2
   156e8:	ldr	r6, [r5, r0, lsl #2]!
   156ec:	ldr	r0, [r5, #20]
   156f0:	add	r9, r5, #4
   156f4:	cmp	r0, #0
   156f8:	beq	15720 <mchar_async_malloc@@Base+0x58>
   156fc:	mov	r0, r9
   15700:	mov	r1, r4
   15704:	bl	12010 <mchar_async_cache_delete@plt>
   15708:	cmp	r0, #0
   1570c:	beq	15720 <mchar_async_malloc@@Base+0x58>
   15710:	ldr	r1, [r9]
   15714:	add	r0, r0, r0, lsl #2
   15718:	ldr	r0, [r1, r0, lsl #2]
   1571c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15720:	ldmib	r6, {r0, r2}
   15724:	add	r7, r4, #4
   15728:	add	r1, r7, r0
   1572c:	cmp	r1, r2
   15730:	bls	157c8 <mchar_async_malloc@@Base+0x100>
   15734:	add	r1, r0, #4
   15738:	cmp	r1, r2
   1573c:	bcs	15768 <mchar_async_malloc@@Base+0xa0>
   15740:	sub	r2, r2, r0
   15744:	subs	r2, r2, #4
   15748:	beq	15768 <mchar_async_malloc@@Base+0xa0>
   1574c:	ldr	r3, [r6]
   15750:	str	r2, [r3, r0]
   15754:	add	r1, r3, r1
   15758:	ldr	r0, [r6, #8]
   1575c:	str	r0, [r6, #4]
   15760:	mov	r0, r9
   15764:	bl	11d94 <mchar_async_cache_add@plt>
   15768:	ldr	r6, [r5]
   1576c:	ldr	r6, [r6, #12]
   15770:	cmp	r6, #0
   15774:	beq	15798 <mchar_async_malloc@@Base+0xd0>
   15778:	ldr	r0, [r6, #8]
   1577c:	cmp	r0, r7
   15780:	bcc	1576c <mchar_async_malloc@@Base+0xa4>
   15784:	mov	r0, #0
   15788:	str	r0, [r6, #4]
   1578c:	b	157b4 <mchar_async_malloc@@Base+0xec>
   15790:	mov	r0, #0
   15794:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15798:	ldr	r2, [r8]
   1579c:	mov	r0, r8
   157a0:	mov	r1, r5
   157a4:	cmp	r7, r2
   157a8:	addhi	r2, r2, r7
   157ac:	bl	11b78 <mchar_async_chunk_malloc@plt>
   157b0:	mov	r6, r0
   157b4:	ldr	r0, [r5]
   157b8:	mov	r1, r6
   157bc:	bl	11278 <mchar_sync_chunk_insert_after@plt>
   157c0:	str	r6, [r5]
   157c4:	ldr	r0, [r6, #4]
   157c8:	ldr	r1, [r6]
   157cc:	str	r4, [r1, r0]!
   157d0:	ldr	r0, [r6, #4]
   157d4:	add	r0, r7, r0
   157d8:	str	r0, [r6, #4]
   157dc:	add	r0, r1, #4
   157e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000157e4 <mchar_async_realloc@@Base>:
   157e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157e8:	add	fp, sp, #28
   157ec:	sub	sp, sp, #4
   157f0:	mov	r5, #0
   157f4:	cmp	r2, #0
   157f8:	beq	158a0 <mchar_async_realloc@@Base+0xbc>
   157fc:	mov	r4, r2
   15800:	ldr	r2, [fp, #8]
   15804:	ldr	r7, [r4, #-4]
   15808:	cmp	r7, r2
   1580c:	bcs	1589c <mchar_async_realloc@@Base+0xb8>
   15810:	ldr	r9, [r0, #56]	; 0x38
   15814:	add	sl, r1, r1, lsl #3
   15818:	mov	r8, r3
   1581c:	str	r9, [sp]
   15820:	ldr	r6, [r9, sl, lsl #2]!
   15824:	ldr	r3, [r6, #4]
   15828:	cmp	r3, r7
   1582c:	bcc	15854 <mchar_async_realloc@@Base+0x70>
   15830:	sub	lr, r3, r7
   15834:	ldr	r3, [r6]
   15838:	add	ip, r3, lr
   1583c:	cmp	ip, r4
   15840:	bne	15854 <mchar_async_realloc@@Base+0x70>
   15844:	ldr	r3, [r6, #8]
   15848:	add	lr, lr, r2
   1584c:	cmp	lr, r3
   15850:	bls	15890 <mchar_async_realloc@@Base+0xac>
   15854:	bl	11adc <mchar_async_malloc@plt>
   15858:	cmp	r0, #0
   1585c:	beq	158a0 <mchar_async_realloc@@Base+0xbc>
   15860:	mov	r1, r4
   15864:	mov	r2, r8
   15868:	mov	r6, r0
   1586c:	bl	11290 <memcpy@plt>
   15870:	ldr	r0, [sp]
   15874:	mov	r1, r4
   15878:	mov	r2, r7
   1587c:	add	r0, r0, sl, lsl #2
   15880:	add	r0, r0, #4
   15884:	bl	11d94 <mchar_async_cache_add@plt>
   15888:	mov	r5, r6
   1588c:	b	158a0 <mchar_async_realloc@@Base+0xbc>
   15890:	str	r2, [ip, #-4]
   15894:	ldr	r0, [r9]
   15898:	str	lr, [r0, #4]
   1589c:	mov	r5, r4
   158a0:	mov	r0, r5
   158a4:	sub	sp, fp, #28
   158a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000158ac <mchar_async_crop_first_chars@@Base>:
   158ac:	push	{r4, r5, fp, lr}
   158b0:	add	fp, sp, #8
   158b4:	cmp	r2, #0
   158b8:	beq	15900 <mchar_async_crop_first_chars@@Base+0x54>
   158bc:	ldr	r4, [r2, #-4]
   158c0:	add	r5, r2, r3
   158c4:	sub	r4, r4, r3
   158c8:	str	r4, [r5, #-4]
   158cc:	add	r4, r3, #4
   158d0:	cmp	r4, #5
   158d4:	bcc	15904 <mchar_async_crop_first_chars@@Base+0x58>
   158d8:	sub	r3, r3, #4
   158dc:	add	r1, r1, r1, lsl #3
   158e0:	str	r3, [r2, #-4]
   158e4:	ldr	r0, [r0, #56]	; 0x38
   158e8:	add	r0, r0, r1, lsl #2
   158ec:	mov	r1, r2
   158f0:	mov	r2, r3
   158f4:	add	r0, r0, #4
   158f8:	bl	11d94 <mchar_async_cache_add@plt>
   158fc:	b	15904 <mchar_async_crop_first_chars@@Base+0x58>
   15900:	mov	r5, #0
   15904:	mov	r0, r5
   15908:	pop	{r4, r5, fp, pc}

0001590c <mchar_async_crop_first_chars_without_cache@@Base>:
   1590c:	cmp	r0, #0
   15910:	moveq	r0, #0
   15914:	bxeq	lr
   15918:	mov	r2, r0
   1591c:	add	r0, r0, r1
   15920:	ldr	r2, [r2, #-4]
   15924:	sub	r1, r2, r1
   15928:	str	r1, [r0, #-4]
   1592c:	bx	lr

00015930 <mchar_async_get_size_by_data@@Base>:
   15930:	cmp	r0, #0
   15934:	ldrne	r0, [r0, #-4]
   15938:	moveq	r0, #0
   1593c:	bx	lr

00015940 <mchar_async_free@@Base>:
   15940:	cmp	r2, #0
   15944:	bxeq	lr
   15948:	ldr	r0, [r0, #56]	; 0x38
   1594c:	add	r1, r1, r1, lsl #3
   15950:	ldr	r3, [r2, #-4]
   15954:	add	r0, r0, r1, lsl #2
   15958:	mov	r1, r2
   1595c:	mov	r2, r3
   15960:	add	r0, r0, #4
   15964:	b	1550c <mchar_async_cache_add@@Base>

00015968 <mchar_async_cache_malloc@@Base>:
   15968:	push	{r4, sl, fp, lr}
   1596c:	add	fp, sp, #8
   15970:	mov	r4, r0
   15974:	ldr	r0, [r0, #24]
   15978:	cmp	r0, #0
   1597c:	beq	15994 <mchar_async_cache_malloc@@Base+0x2c>
   15980:	sub	r0, r0, #1
   15984:	str	r0, [r4, #24]
   15988:	ldr	r1, [r4, #20]
   1598c:	ldr	r0, [r1, r0, lsl #2]
   15990:	pop	{r4, sl, fp, pc}
   15994:	ldr	r0, [r4, #8]
   15998:	ldr	r1, [r4, #4]
   1599c:	add	r0, r0, #1
   159a0:	cmp	r0, r1
   159a4:	str	r0, [r4, #8]
   159a8:	bcc	159cc <mchar_async_cache_malloc@@Base+0x64>
   159ac:	lsl	r0, r1, #1
   159b0:	add	r1, r1, r1, lsl #2
   159b4:	str	r0, [r4, #4]
   159b8:	ldr	r0, [r4]
   159bc:	lsl	r1, r1, #3
   159c0:	bl	10f78 <mycore_realloc@plt>
   159c4:	cmp	r0, #0
   159c8:	strne	r0, [r4]
   159cc:	ldr	r0, [r4, #8]
   159d0:	sub	r0, r0, #1
   159d4:	pop	{r4, sl, fp, pc}

000159d8 <mcobject_create@@Base>:
   159d8:	mov	r0, #1
   159dc:	mov	r1, #24
   159e0:	b	11248 <mycore_calloc@plt>

000159e4 <mcobject_init@@Base>:
   159e4:	push	{r4, r5, fp, lr}
   159e8:	add	fp, sp, #8
   159ec:	mov	r5, #0
   159f0:	mov	r4, r0
   159f4:	str	r5, [r0]
   159f8:	str	r1, [r0, #8]
   159fc:	str	r5, [r0, #12]
   15a00:	str	r2, [r0, #16]
   15a04:	str	r1, [r0, #20]
   15a08:	lsl	r0, r1, #2
   15a0c:	bl	11dac <mycore_malloc@plt>
   15a10:	cmp	r0, #0
   15a14:	str	r0, [r4, #4]
   15a18:	movweq	r5, #85	; 0x55
   15a1c:	mov	r0, r5
   15a20:	pop	{r4, r5, fp, pc}

00015a24 <mcobject_clean@@Base>:
   15a24:	push	{r4, r5, r6, sl, fp, lr}
   15a28:	add	fp, sp, #16
   15a2c:	mov	r4, r0
   15a30:	ldr	r0, [r0]
   15a34:	cmp	r0, #0
   15a38:	beq	15a80 <mcobject_clean@@Base+0x5c>
   15a3c:	mov	r5, r0
   15a40:	ldr	r0, [r0, #12]
   15a44:	cmp	r0, #0
   15a48:	bne	15a3c <mcobject_clean@@Base+0x18>
   15a4c:	ldr	r0, [r5]
   15a50:	ldr	r6, [r5, #16]
   15a54:	cmp	r0, #0
   15a58:	beq	15a60 <mcobject_clean@@Base+0x3c>
   15a5c:	bl	11eb4 <mycore_free@plt>
   15a60:	mov	r0, r5
   15a64:	bl	11eb4 <mycore_free@plt>
   15a68:	cmp	r6, #0
   15a6c:	mov	r5, r6
   15a70:	bne	15a4c <mcobject_clean@@Base+0x28>
   15a74:	mov	r0, #0
   15a78:	str	r0, [r4, #12]
   15a7c:	str	r0, [r4]
   15a80:	pop	{r4, r5, r6, sl, fp, pc}

00015a84 <mcobject_destroy@@Base>:
   15a84:	push	{r4, r5, r6, sl, fp, lr}
   15a88:	add	fp, sp, #16
   15a8c:	mov	r4, #0
   15a90:	cmp	r0, #0
   15a94:	beq	15ad4 <mcobject_destroy@@Base+0x50>
   15a98:	mov	r6, r1
   15a9c:	mov	r5, r0
   15aa0:	bl	1201c <mcobject_clean@plt>
   15aa4:	ldr	r0, [r5, #4]
   15aa8:	cmp	r0, #0
   15aac:	beq	15abc <mcobject_destroy@@Base+0x38>
   15ab0:	bl	11eb4 <mycore_free@plt>
   15ab4:	mov	r0, #0
   15ab8:	str	r0, [r5, #4]
   15abc:	cmp	r6, #0
   15ac0:	beq	15ad0 <mcobject_destroy@@Base+0x4c>
   15ac4:	mov	r0, r5
   15ac8:	bl	11eb4 <mycore_free@plt>
   15acc:	b	15ad4 <mcobject_destroy@@Base+0x50>
   15ad0:	mov	r4, r5
   15ad4:	mov	r0, r4
   15ad8:	pop	{r4, r5, r6, sl, fp, pc}

00015adc <mcobject_chunk_malloc@@Base>:
   15adc:	push	{r4, r5, r6, sl, fp, lr}
   15ae0:	add	fp, sp, #16
   15ae4:	cmp	r1, #0
   15ae8:	mov	r5, r0
   15aec:	mov	r4, r1
   15af0:	movne	r0, #0
   15af4:	strne	r0, [r4]
   15af8:	ldr	r0, [r5]
   15afc:	cmp	r0, #0
   15b00:	beq	15b20 <mcobject_chunk_malloc@@Base+0x44>
   15b04:	ldr	r0, [r0, #12]
   15b08:	cmp	r0, #0
   15b0c:	beq	15b20 <mcobject_chunk_malloc@@Base+0x44>
   15b10:	mov	r1, #0
   15b14:	str	r0, [r5]
   15b18:	str	r1, [r0, #4]
   15b1c:	pop	{r4, r5, r6, sl, fp, pc}
   15b20:	mov	r0, #1
   15b24:	mov	r1, #20
   15b28:	bl	11248 <mycore_calloc@plt>
   15b2c:	cmp	r0, #0
   15b30:	beq	15b74 <mcobject_chunk_malloc@@Base+0x98>
   15b34:	mov	r6, r0
   15b38:	ldr	r0, [r5, #16]
   15b3c:	ldr	r1, [r5, #20]
   15b40:	mul	r0, r1, r0
   15b44:	bl	11dac <mycore_malloc@plt>
   15b48:	cmp	r0, #0
   15b4c:	str	r0, [r6]
   15b50:	beq	15b88 <mcobject_chunk_malloc@@Base+0xac>
   15b54:	ldr	r0, [r5, #20]
   15b58:	str	r0, [r6, #8]
   15b5c:	ldr	r0, [r5]
   15b60:	cmp	r0, #0
   15b64:	strne	r0, [r6, #16]
   15b68:	strne	r6, [r0, #12]
   15b6c:	str	r6, [r5]
   15b70:	pop	{r4, r5, r6, sl, fp, pc}
   15b74:	cmp	r4, #0
   15b78:	beq	15b84 <mcobject_chunk_malloc@@Base+0xa8>
   15b7c:	mov	r0, #86	; 0x56
   15b80:	str	r0, [r4]
   15b84:	pop	{r4, r5, r6, sl, fp, pc}
   15b88:	cmp	r4, #0
   15b8c:	movne	r0, #87	; 0x57
   15b90:	strne	r0, [r4]
   15b94:	mov	r0, r6
   15b98:	pop	{r4, r5, r6, sl, fp, lr}
   15b9c:	b	11eb4 <mycore_free@plt>

00015ba0 <mcobject_malloc@@Base>:
   15ba0:	push	{r4, r5, fp, lr}
   15ba4:	add	fp, sp, #8
   15ba8:	sub	sp, sp, #8
   15bac:	mov	r4, r0
   15bb0:	ldr	r0, [r0, #12]
   15bb4:	mov	r5, r1
   15bb8:	cmp	r0, #0
   15bbc:	beq	15be4 <mcobject_malloc@@Base+0x44>
   15bc0:	cmp	r5, #0
   15bc4:	movne	r0, #0
   15bc8:	strne	r0, [r5]
   15bcc:	ldrne	r0, [r4, #12]
   15bd0:	sub	r0, r0, #1
   15bd4:	str	r0, [r4, #12]
   15bd8:	ldr	r1, [r4, #4]
   15bdc:	ldr	r0, [r1, r0, lsl #2]
   15be0:	b	15c48 <mcobject_malloc@@Base+0xa8>
   15be4:	ldr	r0, [r4]
   15be8:	cmp	r0, #0
   15bec:	beq	15bfc <mcobject_malloc@@Base+0x5c>
   15bf0:	ldmib	r0, {r1, r2}
   15bf4:	cmp	r1, r2
   15bf8:	bcc	15c28 <mcobject_malloc@@Base+0x88>
   15bfc:	add	r1, sp, #4
   15c00:	mov	r0, r4
   15c04:	bl	11218 <mcobject_chunk_malloc@plt>
   15c08:	ldr	r0, [sp, #4]
   15c0c:	cmp	r0, #0
   15c10:	beq	15c24 <mcobject_malloc@@Base+0x84>
   15c14:	cmp	r5, #0
   15c18:	strne	r0, [r5]
   15c1c:	mov	r0, #0
   15c20:	b	15c48 <mcobject_malloc@@Base+0xa8>
   15c24:	ldr	r0, [r4]
   15c28:	cmp	r5, #0
   15c2c:	movne	r1, #0
   15c30:	strne	r1, [r5]
   15c34:	ldm	r0, {r1, r2}
   15c38:	add	r3, r2, #1
   15c3c:	str	r3, [r0, #4]
   15c40:	ldr	r0, [r4, #16]
   15c44:	mla	r0, r0, r2, r1
   15c48:	sub	sp, fp, #8
   15c4c:	pop	{r4, r5, fp, pc}

00015c50 <mcobject_free@@Base>:
   15c50:	push	{r4, r5, r6, sl, fp, lr}
   15c54:	add	fp, sp, #16
   15c58:	mov	r5, r1
   15c5c:	ldr	r6, [r0, #8]
   15c60:	ldr	r1, [r0, #12]
   15c64:	mov	r4, r0
   15c68:	cmp	r1, r6
   15c6c:	bcs	15c78 <mcobject_free@@Base+0x28>
   15c70:	ldr	r0, [r4, #4]
   15c74:	b	15c98 <mcobject_free@@Base+0x48>
   15c78:	ldr	r0, [r4, #4]
   15c7c:	lsl	r1, r6, #3
   15c80:	bl	10f78 <mycore_realloc@plt>
   15c84:	cmp	r0, #0
   15c88:	beq	15cac <mcobject_free@@Base+0x5c>
   15c8c:	lsl	r1, r6, #1
   15c90:	stmib	r4, {r0, r1}
   15c94:	ldr	r1, [r4, #12]
   15c98:	str	r5, [r0, r1, lsl #2]
   15c9c:	add	r0, r1, #1
   15ca0:	str	r0, [r4, #12]
   15ca4:	mov	r0, #0
   15ca8:	pop	{r4, r5, r6, sl, fp, pc}
   15cac:	mov	r0, #88	; 0x58
   15cb0:	pop	{r4, r5, r6, sl, fp, pc}

00015cb4 <mcobject_async_create@@Base>:
   15cb4:	mov	r0, #1
   15cb8:	mov	r1, #72	; 0x48
   15cbc:	b	11248 <mycore_calloc@plt>

00015cc0 <mcobject_async_chunk_up@@Base>:
   15cc0:	push	{r4, r5, fp, lr}
   15cc4:	add	fp, sp, #8
   15cc8:	mov	r4, #0
   15ccc:	mov	r5, r0
   15cd0:	str	r4, [r0, #40]	; 0x28
   15cd4:	ldr	r0, [r0, #24]
   15cd8:	ldr	r1, [r5, #32]
   15cdc:	ldr	r0, [r0, r1, lsl #2]
   15ce0:	cmp	r0, #0
   15ce4:	bne	15d10 <mcobject_async_chunk_up@@Base+0x50>
   15ce8:	ldr	r0, [r5, #36]	; 0x24
   15cec:	mov	r1, #20
   15cf0:	bl	11248 <mycore_calloc@plt>
   15cf4:	ldr	r1, [r5, #24]
   15cf8:	ldr	r2, [r5, #32]
   15cfc:	str	r0, [r1, r2, lsl #2]
   15d00:	ldr	r0, [r5, #24]
   15d04:	ldr	r0, [r0, r2, lsl #2]
   15d08:	cmp	r0, #0
   15d0c:	moveq	r4, #2
   15d10:	mov	r0, r4
   15d14:	pop	{r4, r5, fp, pc}

00015d18 <mcobject_async_init@@Base>:
   15d18:	push	{r4, r5, r6, sl, fp, lr}
   15d1c:	add	fp, sp, #16
   15d20:	mov	r4, r0
   15d24:	mov	r6, #128	; 0x80
   15d28:	mov	r0, #0
   15d2c:	str	r6, [r4, #28]
   15d30:	str	r0, [r4, #32]
   15d34:	add	r0, r3, #4
   15d38:	str	r1, [r4, #36]	; 0x24
   15d3c:	stm	r4, {r2, r3}
   15d40:	mov	r1, #4
   15d44:	str	r0, [r4, #8]
   15d48:	mov	r0, #128	; 0x80
   15d4c:	bl	11248 <mycore_calloc@plt>
   15d50:	cmp	r0, #0
   15d54:	str	r0, [r4, #24]
   15d58:	beq	15df8 <mcobject_async_init@@Base+0xe0>
   15d5c:	mov	r0, r4
   15d60:	bl	11464 <mcobject_async_chunk_up@plt>
   15d64:	ldr	r0, [r4, #36]	; 0x24
   15d68:	mov	r1, #4
   15d6c:	mov	r5, #4
   15d70:	str	r0, [r4, #16]
   15d74:	bl	11248 <mycore_calloc@plt>
   15d78:	cmp	r0, #0
   15d7c:	str	r0, [r4, #12]
   15d80:	beq	15e00 <mcobject_async_init@@Base+0xe8>
   15d84:	mov	r6, #0
   15d88:	mov	r0, #64	; 0x40
   15d8c:	mov	r1, #16
   15d90:	str	r6, [r4, #48]	; 0x30
   15d94:	str	r0, [r4, #52]	; 0x34
   15d98:	mov	r0, #64	; 0x40
   15d9c:	bl	11248 <mycore_calloc@plt>
   15da0:	cmp	r0, #0
   15da4:	str	r0, [r4, #44]	; 0x2c
   15da8:	beq	15e0c <mcobject_async_init@@Base+0xf4>
   15dac:	ldr	r0, [r4, #52]	; 0x34
   15db0:	str	r6, [r4, #60]	; 0x3c
   15db4:	str	r0, [r4, #64]	; 0x40
   15db8:	lsl	r0, r0, #2
   15dbc:	bl	11dac <mycore_malloc@plt>
   15dc0:	cmp	r0, #0
   15dc4:	str	r0, [r4, #56]	; 0x38
   15dc8:	beq	15e0c <mcobject_async_init@@Base+0xf4>
   15dcc:	mov	r0, r4
   15dd0:	bl	120dc <mcobject_async_clean@plt>
   15dd4:	bl	11110 <mcsync_create@plt>
   15dd8:	cmp	r0, #0
   15ddc:	str	r0, [r4, #68]	; 0x44
   15de0:	beq	15e08 <mcobject_async_init@@Base+0xf0>
   15de4:	bl	11a34 <mcsync_init@plt>
   15de8:	cmp	r0, #0
   15dec:	mov	r5, r0
   15df0:	movwne	r5, #1
   15df4:	b	15e0c <mcobject_async_init@@Base+0xf4>
   15df8:	mov	r5, #2
   15dfc:	b	15e0c <mcobject_async_init@@Base+0xf4>
   15e00:	mov	r5, #3
   15e04:	b	15e0c <mcobject_async_init@@Base+0xf4>
   15e08:	mov	r5, #1
   15e0c:	mov	r0, r5
   15e10:	pop	{r4, r5, r6, sl, fp, pc}

00015e14 <mcobject_async_clean@@Base>:
   15e14:	push	{r4, r5, r6, r7, fp, lr}
   15e18:	add	fp, sp, #16
   15e1c:	ldr	r1, [r0, #24]
   15e20:	mov	r4, r0
   15e24:	ldr	r0, [r0, #48]	; 0x30
   15e28:	mov	r5, #0
   15e2c:	ldr	r1, [r1]
   15e30:	str	r5, [r4, #40]	; 0x28
   15e34:	str	r5, [r4, #20]
   15e38:	cmp	r1, #0
   15e3c:	movwne	r1, #1
   15e40:	cmp	r0, #0
   15e44:	str	r1, [r4, #32]
   15e48:	beq	15e8c <mcobject_async_clean@@Base+0x78>
   15e4c:	mov	r6, #0
   15e50:	ldr	r7, [r4, #44]	; 0x2c
   15e54:	mov	r1, r7
   15e58:	ldr	r2, [r1, r6, lsl #4]!
   15e5c:	str	r5, [r1, #12]
   15e60:	cmp	r2, #0
   15e64:	beq	15e80 <mcobject_async_clean@@Base+0x6c>
   15e68:	ldr	r1, [r4]
   15e6c:	mov	r0, r4
   15e70:	mov	r2, #0
   15e74:	bl	11404 <mcobject_async_chunk_malloc@plt>
   15e78:	str	r0, [r7, r6, lsl #4]
   15e7c:	ldr	r0, [r4, #48]	; 0x30
   15e80:	add	r6, r6, #1
   15e84:	cmp	r6, r0
   15e88:	bcc	15e50 <mcobject_async_clean@@Base+0x3c>
   15e8c:	pop	{r4, r5, r6, r7, fp, pc}

00015e90 <mcobject_async_chunk_malloc@@Base>:
   15e90:	push	{r4, r5, r6, sl, fp, lr}
   15e94:	add	fp, sp, #16
   15e98:	mov	r5, r0
   15e9c:	ldr	r0, [r0, #68]	; 0x44
   15ea0:	mov	r4, r2
   15ea4:	mov	r6, r1
   15ea8:	bl	11a28 <mcsync_lock@plt>
   15eac:	cmp	r0, #0
   15eb0:	beq	15ec8 <mcobject_async_chunk_malloc@@Base+0x38>
   15eb4:	cmp	r4, #0
   15eb8:	movne	r0, #1
   15ebc:	strne	r0, [r4]
   15ec0:	mov	r0, #0
   15ec4:	pop	{r4, r5, r6, sl, fp, pc}
   15ec8:	mov	r0, r5
   15ecc:	mov	r1, r6
   15ed0:	mov	r2, r4
   15ed4:	bl	11aac <mcobject_async_chunk_malloc_without_lock@plt>
   15ed8:	mov	r4, r0
   15edc:	ldr	r0, [r5, #68]	; 0x44
   15ee0:	bl	11f8c <mcsync_unlock@plt>
   15ee4:	mov	r0, r4
   15ee8:	pop	{r4, r5, r6, sl, fp, pc}

00015eec <mcobject_async_destroy@@Base>:
   15eec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15ef0:	add	fp, sp, #24
   15ef4:	cmp	r0, #0
   15ef8:	beq	15f4c <mcobject_async_destroy@@Base+0x60>
   15efc:	mov	r4, r0
   15f00:	ldr	r0, [r0, #44]	; 0x2c
   15f04:	mov	r8, r1
   15f08:	cmp	r0, #0
   15f0c:	beq	15f5c <mcobject_async_destroy@@Base+0x70>
   15f10:	ldr	r1, [r4, #48]	; 0x30
   15f14:	cmp	r1, #0
   15f18:	beq	15f58 <mcobject_async_destroy@@Base+0x6c>
   15f1c:	mov	r5, #0
   15f20:	add	r0, r0, r5, lsl #4
   15f24:	ldr	r0, [r0, #4]
   15f28:	cmp	r0, #0
   15f2c:	beq	15f38 <mcobject_async_destroy@@Base+0x4c>
   15f30:	bl	11eb4 <mycore_free@plt>
   15f34:	ldr	r1, [r4, #48]	; 0x30
   15f38:	add	r5, r5, #1
   15f3c:	cmp	r5, r1
   15f40:	bcs	15f54 <mcobject_async_destroy@@Base+0x68>
   15f44:	ldr	r0, [r4, #44]	; 0x2c
   15f48:	b	15f20 <mcobject_async_destroy@@Base+0x34>
   15f4c:	mov	r6, #0
   15f50:	b	16054 <mcobject_async_destroy@@Base+0x168>
   15f54:	ldr	r0, [r4, #44]	; 0x2c
   15f58:	bl	11eb4 <mycore_free@plt>
   15f5c:	ldr	r0, [r4, #56]	; 0x38
   15f60:	cmp	r0, #0
   15f64:	beq	15f6c <mcobject_async_destroy@@Base+0x80>
   15f68:	bl	11eb4 <mycore_free@plt>
   15f6c:	ldr	r0, [r4, #24]
   15f70:	cmp	r0, #0
   15f74:	beq	1600c <mcobject_async_destroy@@Base+0x120>
   15f78:	ldr	r2, [r4, #32]
   15f7c:	cmp	r2, #0
   15f80:	beq	16008 <mcobject_async_destroy@@Base+0x11c>
   15f84:	mov	r6, #0
   15f88:	mov	r1, r0
   15f8c:	ldr	r3, [r1, r6, lsl #2]!
   15f90:	cmp	r3, #0
   15f94:	beq	15ff0 <mcobject_async_destroy@@Base+0x104>
   15f98:	ldr	r2, [r4, #36]	; 0x24
   15f9c:	cmp	r2, #0
   15fa0:	beq	15fe4 <mcobject_async_destroy@@Base+0xf8>
   15fa4:	mov	r7, #1
   15fa8:	mov	r5, #0
   15fac:	ldr	r1, [r3, r5]
   15fb0:	cmp	r1, #0
   15fb4:	beq	15fc8 <mcobject_async_destroy@@Base+0xdc>
   15fb8:	mov	r0, r1
   15fbc:	bl	11eb4 <mycore_free@plt>
   15fc0:	ldr	r0, [r4, #24]
   15fc4:	ldr	r2, [r4, #36]	; 0x24
   15fc8:	add	r1, r0, r6, lsl #2
   15fcc:	cmp	r7, r2
   15fd0:	bcs	15fe4 <mcobject_async_destroy@@Base+0xf8>
   15fd4:	ldr	r3, [r1]
   15fd8:	add	r5, r5, #20
   15fdc:	add	r7, r7, #1
   15fe0:	b	15fac <mcobject_async_destroy@@Base+0xc0>
   15fe4:	ldr	r0, [r1]
   15fe8:	bl	11eb4 <mycore_free@plt>
   15fec:	ldr	r2, [r4, #32]
   15ff0:	add	r6, r6, #1
   15ff4:	cmp	r6, r2
   15ff8:	bcs	16004 <mcobject_async_destroy@@Base+0x118>
   15ffc:	ldr	r0, [r4, #24]
   16000:	b	15f88 <mcobject_async_destroy@@Base+0x9c>
   16004:	ldr	r0, [r4, #24]
   16008:	bl	11eb4 <mycore_free@plt>
   1600c:	ldr	r0, [r4, #12]
   16010:	cmp	r0, #0
   16014:	beq	1601c <mcobject_async_destroy@@Base+0x130>
   16018:	bl	11eb4 <mycore_free@plt>
   1601c:	ldr	r0, [r4, #68]	; 0x44
   16020:	mov	r1, #1
   16024:	bl	1147c <mcsync_destroy@plt>
   16028:	mov	r0, r4
   1602c:	mov	r1, #0
   16030:	mov	r2, #72	; 0x48
   16034:	mov	r6, #0
   16038:	bl	11a7c <memset@plt>
   1603c:	cmp	r8, #0
   16040:	beq	16050 <mcobject_async_destroy@@Base+0x164>
   16044:	mov	r0, r4
   16048:	bl	11eb4 <mycore_free@plt>
   1604c:	b	16054 <mcobject_async_destroy@@Base+0x168>
   16050:	mov	r6, r4
   16054:	mov	r0, r6
   16058:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001605c <mcobject_async_mem_malloc@@Base>:
   1605c:	push	{r4, r5, r6, sl, fp, lr}
   16060:	add	fp, sp, #16
   16064:	mov	r5, r0
   16068:	ldr	r0, [r1]
   1606c:	mov	r6, r2
   16070:	mov	r4, r1
   16074:	cmp	r0, #0
   16078:	beq	160a0 <mcobject_async_mem_malloc@@Base+0x44>
   1607c:	ldr	r1, [r4, #8]
   16080:	cmp	r1, r6
   16084:	bcs	160c0 <mcobject_async_mem_malloc@@Base+0x64>
   16088:	bl	11eb4 <mycore_free@plt>
   1608c:	ldr	r0, [r5]
   16090:	add	r1, r0, r6
   16094:	str	r1, [r4, #8]
   16098:	ldr	r0, [r5, #8]
   1609c:	b	160b4 <mcobject_async_mem_malloc@@Base+0x58>
   160a0:	ldr	r0, [r5]
   160a4:	cmp	r0, r6
   160a8:	addcc	r0, r0, r6
   160ac:	str	r0, [r4, #8]
   160b0:	ldr	r1, [r5, #8]
   160b4:	mul	r0, r0, r1
   160b8:	bl	11dac <mycore_malloc@plt>
   160bc:	str	r0, [r4]
   160c0:	clz	r0, r0
   160c4:	mov	r1, #0
   160c8:	lsr	r0, r0, #5
   160cc:	str	r1, [r4, #4]
   160d0:	lsl	r0, r0, #1
   160d4:	pop	{r4, r5, r6, sl, fp, pc}

000160d8 <mcobject_async_chunk_malloc_without_lock@@Base>:
   160d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   160dc:	add	fp, sp, #24
   160e0:	cmp	r2, #0
   160e4:	mov	r5, r0
   160e8:	mov	r4, r2
   160ec:	mov	r6, r1
   160f0:	movne	r0, #0
   160f4:	strne	r0, [r4]
   160f8:	ldr	r0, [r5, #20]
   160fc:	cmp	r0, #0
   16100:	beq	16130 <mcobject_async_chunk_malloc_without_lock@@Base+0x58>
   16104:	sub	r0, r0, #1
   16108:	mov	r3, #0
   1610c:	str	r0, [r5, #20]
   16110:	ldr	r1, [r5, #12]
   16114:	ldr	r2, [r1, r0, lsl #2]
   16118:	str	r3, [r2, #12]
   1611c:	str	r3, [r2, #4]
   16120:	ldr	r2, [r1, r0, lsl #2]
   16124:	str	r3, [r2, #16]
   16128:	ldr	r7, [r1, r0, lsl #2]
   1612c:	b	16204 <mcobject_async_chunk_malloc_without_lock@@Base+0x12c>
   16130:	ldr	r2, [r5, #36]	; 0x24
   16134:	ldr	r0, [r5, #40]	; 0x28
   16138:	ldr	r1, [r5, #32]
   1613c:	cmp	r0, r2
   16140:	bcc	161c4 <mcobject_async_chunk_malloc_without_lock@@Base+0xec>
   16144:	ldr	r7, [r5, #28]
   16148:	cmp	r1, r7
   1614c:	bcc	1618c <mcobject_async_chunk_malloc_without_lock@@Base+0xb4>
   16150:	ldr	r0, [r5, #24]
   16154:	lsl	r1, r7, #3
   16158:	bl	10f78 <mycore_realloc@plt>
   1615c:	cmp	r0, #0
   16160:	beq	1619c <mcobject_async_chunk_malloc_without_lock@@Base+0xc4>
   16164:	ldr	r1, [r5, #32]
   16168:	lsl	r7, r7, #1
   1616c:	mov	r8, r0
   16170:	add	r0, r0, r1, lsl #2
   16174:	sub	r1, r7, r1
   16178:	lsl	r2, r1, #2
   1617c:	mov	r1, #0
   16180:	bl	11a7c <memset@plt>
   16184:	str	r8, [r5, #24]
   16188:	str	r7, [r5, #28]
   1618c:	mov	r0, r5
   16190:	bl	11464 <mcobject_async_chunk_up@plt>
   16194:	cmp	r0, #0
   16198:	beq	161b4 <mcobject_async_chunk_malloc_without_lock@@Base+0xdc>
   1619c:	mov	r7, #0
   161a0:	cmp	r4, #0
   161a4:	beq	16204 <mcobject_async_chunk_malloc_without_lock@@Base+0x12c>
   161a8:	mov	r0, #2
   161ac:	str	r0, [r4]
   161b0:	b	16204 <mcobject_async_chunk_malloc_without_lock@@Base+0x12c>
   161b4:	ldr	r1, [r5, #32]
   161b8:	ldr	r0, [r5, #40]	; 0x28
   161bc:	add	r1, r1, #1
   161c0:	str	r1, [r5, #32]
   161c4:	ldr	r2, [r5, #24]
   161c8:	add	r1, r2, r1, lsl #2
   161cc:	add	r2, r0, #1
   161d0:	add	r0, r0, r0, lsl #2
   161d4:	ldr	r1, [r1, #-4]
   161d8:	str	r2, [r5, #40]	; 0x28
   161dc:	mov	r2, r6
   161e0:	add	r7, r1, r0, lsl #2
   161e4:	mov	r0, #0
   161e8:	str	r0, [r7, #12]
   161ec:	str	r0, [r7, #16]
   161f0:	mov	r0, r5
   161f4:	mov	r1, r7
   161f8:	bl	11128 <mcobject_async_mem_malloc@plt>
   161fc:	cmp	r4, #0
   16200:	strne	r0, [r4]
   16204:	mov	r0, r7
   16208:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001620c <mcobject_async_node_add@@Base>:
   1620c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16210:	add	fp, sp, #24
   16214:	mov	r4, r0
   16218:	ldr	r0, [r0, #68]	; 0x44
   1621c:	mov	r5, r1
   16220:	bl	11a28 <mcsync_lock@plt>
   16224:	cmp	r5, #0
   16228:	movne	r0, #0
   1622c:	strne	r0, [r5]
   16230:	ldr	r0, [r4, #60]	; 0x3c
   16234:	cmp	r0, #0
   16238:	beq	16250 <mcobject_async_node_add@@Base+0x44>
   1623c:	sub	r0, r0, #1
   16240:	str	r0, [r4, #60]	; 0x3c
   16244:	ldr	r1, [r4, #56]	; 0x38
   16248:	ldr	r8, [r1, r0, lsl #2]
   1624c:	b	1626c <mcobject_async_node_add@@Base+0x60>
   16250:	ldr	r8, [r4, #48]	; 0x30
   16254:	ldr	r0, [r4, #52]	; 0x34
   16258:	mov	r6, #0
   1625c:	cmp	r8, r0
   16260:	bcs	162e4 <mcobject_async_node_add@@Base+0xd8>
   16264:	add	r0, r8, #1
   16268:	str	r0, [r4, #48]	; 0x30
   1626c:	ldr	r1, [r4]
   16270:	ldr	r7, [r4, #44]	; 0x2c
   16274:	mov	r0, r4
   16278:	mov	r2, r5
   1627c:	bl	11aac <mcobject_async_chunk_malloc_without_lock@plt>
   16280:	cmp	r5, #0
   16284:	str	r0, [r7, r8, lsl #4]
   16288:	beq	1629c <mcobject_async_node_add@@Base+0x90>
   1628c:	ldr	r1, [r5]
   16290:	mov	r6, #0
   16294:	cmp	r1, #0
   16298:	bne	162e4 <mcobject_async_node_add@@Base+0xd8>
   1629c:	add	r7, r7, r8, lsl #4
   162a0:	mov	r1, #0
   162a4:	str	r1, [r0, #12]
   162a8:	str	r1, [r0, #16]
   162ac:	str	r1, [r7, #12]
   162b0:	ldr	r0, [r4]
   162b4:	str	r0, [r7, #8]
   162b8:	lsl	r0, r0, #2
   162bc:	bl	11dac <mycore_malloc@plt>
   162c0:	cmp	r0, #0
   162c4:	mov	r6, r0
   162c8:	str	r0, [r7, #4]
   162cc:	movne	r6, r8
   162d0:	bne	162e4 <mcobject_async_node_add@@Base+0xd8>
   162d4:	cmp	r5, #0
   162d8:	movne	r0, #3
   162dc:	movne	r6, #0
   162e0:	strne	r0, [r5]
   162e4:	ldr	r0, [r4, #68]	; 0x44
   162e8:	bl	11f8c <mcsync_unlock@plt>
   162ec:	mov	r0, r6
   162f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000162f4 <mcobject_async_node_clean@@Base>:
   162f4:	ldr	r2, [r0, #48]	; 0x30
   162f8:	cmp	r2, r1
   162fc:	bls	16348 <mcobject_async_node_clean@@Base+0x54>
   16300:	ldr	ip, [r0, #44]	; 0x2c
   16304:	mov	r3, #0
   16308:	mov	r0, ip
   1630c:	ldr	r2, [r0, r1, lsl #4]!
   16310:	str	r3, [r0, #12]!
   16314:	cmp	r2, #0
   16318:	bxeq	lr
   1631c:	ldr	r3, [r2, #16]
   16320:	cmp	r3, #0
   16324:	beq	1633c <mcobject_async_node_clean@@Base+0x48>
   16328:	mov	r2, r3
   1632c:	ldr	r3, [r3, #16]
   16330:	cmp	r3, #0
   16334:	bne	16328 <mcobject_async_node_clean@@Base+0x34>
   16338:	str	r2, [ip, r1, lsl #4]
   1633c:	mov	r1, #0
   16340:	str	r1, [r2, #4]
   16344:	str	r1, [r0]
   16348:	bx	lr

0001634c <mcobject_async_node_all_clean@@Base>:
   1634c:	push	{r4, r5, fp, lr}
   16350:	add	fp, sp, #8
   16354:	mov	r4, r0
   16358:	ldr	r0, [r0, #48]	; 0x30
   1635c:	cmp	r0, #0
   16360:	popeq	{r4, r5, fp, pc}
   16364:	mov	r5, #0
   16368:	mov	r0, r4
   1636c:	mov	r1, r5
   16370:	bl	11a4c <mcobject_async_node_clean@plt>
   16374:	ldr	r0, [r4, #48]	; 0x30
   16378:	add	r5, r5, #1
   1637c:	cmp	r5, r0
   16380:	bcc	16368 <mcobject_async_node_all_clean@@Base+0x1c>
   16384:	pop	{r4, r5, fp, pc}

00016388 <mcobject_async_node_delete@@Base>:
   16388:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1638c:	add	fp, sp, #24
   16390:	mov	r4, r0
   16394:	ldr	r0, [r0, #68]	; 0x44
   16398:	mov	r5, r1
   1639c:	bl	11a28 <mcsync_lock@plt>
   163a0:	ldr	r0, [r4, #48]	; 0x30
   163a4:	cmp	r0, r5
   163a8:	bls	16484 <mcobject_async_node_delete@@Base+0xfc>
   163ac:	ldr	r8, [r4, #44]	; 0x2c
   163b0:	mov	r9, r8
   163b4:	ldr	r0, [r9, r5, lsl #4]!
   163b8:	mov	r7, r0
   163bc:	ldr	r0, [r0, #12]
   163c0:	cmp	r0, #0
   163c4:	bne	163b8 <mcobject_async_node_delete@@Base+0x30>
   163c8:	cmp	r7, #0
   163cc:	beq	16424 <mcobject_async_node_delete@@Base+0x9c>
   163d0:	ldr	r1, [r4, #20]
   163d4:	ldr	r6, [r4, #16]
   163d8:	cmp	r1, r6
   163dc:	bcs	163e8 <mcobject_async_node_delete@@Base+0x60>
   163e0:	ldr	r0, [r4, #12]
   163e4:	b	1640c <mcobject_async_node_delete@@Base+0x84>
   163e8:	ldr	r0, [r4, #12]
   163ec:	lsl	r1, r6, #3
   163f0:	bl	10f78 <mycore_realloc@plt>
   163f4:	cmp	r0, #0
   163f8:	beq	16484 <mcobject_async_node_delete@@Base+0xfc>
   163fc:	lsl	r1, r6, #1
   16400:	str	r0, [r4, #12]
   16404:	str	r1, [r4, #16]
   16408:	ldr	r1, [r4, #20]
   1640c:	str	r7, [r0, r1, lsl #2]
   16410:	add	r1, r1, #1
   16414:	str	r1, [r4, #20]
   16418:	ldr	r7, [r7, #16]
   1641c:	cmp	r7, #0
   16420:	bne	163d4 <mcobject_async_node_delete@@Base+0x4c>
   16424:	add	r0, r8, r5, lsl #4
   16428:	ldr	r0, [r0, #4]
   1642c:	cmp	r0, #0
   16430:	beq	16438 <mcobject_async_node_delete@@Base+0xb0>
   16434:	bl	11eb4 <mycore_free@plt>
   16438:	vmov.i32	q8, #0	; 0x00000000
   1643c:	vst1.32	{d16-d17}, [r9]
   16440:	ldr	r0, [r4, #60]	; 0x3c
   16444:	ldr	r6, [r4, #64]	; 0x40
   16448:	cmp	r0, r6
   1644c:	bcc	1646c <mcobject_async_node_delete@@Base+0xe4>
   16450:	ldr	r0, [r4, #56]	; 0x38
   16454:	lsl	r1, r6, #2
   16458:	bl	10f78 <mycore_realloc@plt>
   1645c:	cmp	r0, #0
   16460:	strne	r0, [r4, #56]	; 0x38
   16464:	lslne	r0, r6, #1
   16468:	strne	r0, [r4, #64]	; 0x40
   1646c:	ldr	r0, [r4, #56]	; 0x38
   16470:	ldr	r1, [r4, #60]	; 0x3c
   16474:	str	r5, [r0, r1, lsl #2]
   16478:	ldr	r0, [r4, #60]	; 0x3c
   1647c:	add	r0, r0, #1
   16480:	str	r0, [r4, #60]	; 0x3c
   16484:	ldr	r0, [r4, #68]	; 0x44
   16488:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   1648c:	b	11f8c <mcsync_unlock@plt>

00016490 <mcobject_async_malloc@@Base>:
   16490:	push	{r4, r5, r6, r7, fp, lr}
   16494:	add	fp, sp, #16
   16498:	sub	sp, sp, #8
   1649c:	ldr	r7, [r0, #44]	; 0x2c
   164a0:	mov	r6, r0
   164a4:	mov	r5, r1
   164a8:	mov	r4, r2
   164ac:	add	r0, r7, r1, lsl #4
   164b0:	mov	r1, r0
   164b4:	ldr	r2, [r1, #12]!
   164b8:	cmp	r2, #0
   164bc:	beq	164e4 <mcobject_async_malloc@@Base+0x54>
   164c0:	cmp	r4, #0
   164c4:	movne	r2, #0
   164c8:	strne	r2, [r4]
   164cc:	ldrne	r2, [r1]
   164d0:	sub	r2, r2, #1
   164d4:	str	r2, [r1]
   164d8:	ldr	r0, [r0, #4]
   164dc:	ldr	r0, [r0, r2, lsl #2]
   164e0:	b	1653c <mcobject_async_malloc@@Base+0xac>
   164e4:	ldr	r0, [r7, r5, lsl #4]
   164e8:	ldmib	r0, {r1, r2}
   164ec:	cmp	r1, r2
   164f0:	bcc	1650c <mcobject_async_malloc@@Base+0x7c>
   164f4:	ldr	r0, [r0, #12]
   164f8:	cmp	r0, #0
   164fc:	beq	16544 <mcobject_async_malloc@@Base+0xb4>
   16500:	mov	r1, #0
   16504:	str	r0, [r7, r5, lsl #4]
   16508:	str	r1, [r0, #4]
   1650c:	cmp	r4, #0
   16510:	movne	r0, #0
   16514:	strne	r0, [r4]
   16518:	ldr	r0, [r7, r5, lsl #4]
   1651c:	ldr	r3, [r6, #8]
   16520:	ldm	r0, {r1, r2}
   16524:	mul	r2, r3, r2
   16528:	str	r5, [r1, r2]!
   1652c:	ldr	r2, [r0, #4]
   16530:	add	r2, r2, #1
   16534:	str	r2, [r0, #4]
   16538:	add	r0, r1, #4
   1653c:	sub	sp, fp, #16
   16540:	pop	{r4, r5, r6, r7, fp, pc}
   16544:	ldr	r1, [r6]
   16548:	add	r2, sp, #4
   1654c:	mov	r0, r6
   16550:	bl	11404 <mcobject_async_chunk_malloc@plt>
   16554:	ldr	r1, [sp, #4]
   16558:	cmp	r1, #0
   1655c:	beq	16570 <mcobject_async_malloc@@Base+0xe0>
   16560:	cmp	r4, #0
   16564:	mov	r0, #0
   16568:	strne	r1, [r4]
   1656c:	b	1653c <mcobject_async_malloc@@Base+0xac>
   16570:	ldr	r1, [r7, r5, lsl #4]
   16574:	str	r1, [r0, #16]
   16578:	str	r0, [r1, #12]
   1657c:	str	r0, [r7, r5, lsl #4]
   16580:	b	1650c <mcobject_async_malloc@@Base+0x7c>

00016584 <mcobject_async_free@@Base>:
   16584:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16588:	add	fp, sp, #24
   1658c:	mov	r4, r1
   16590:	ldr	r3, [r0, #48]	; 0x30
   16594:	mov	r1, r0
   16598:	mov	r0, #5
   1659c:	ldr	r2, [r4, #-4]
   165a0:	cmp	r2, r3
   165a4:	bcs	16604 <mcobject_async_free@@Base+0x80>
   165a8:	ldr	r0, [r1, #44]	; 0x2c
   165ac:	add	r5, r0, r2, lsl #4
   165b0:	ldr	r1, [r5, #12]!
   165b4:	mov	r7, r5
   165b8:	sub	r8, r5, #8
   165bc:	ldr	r6, [r7, #-4]!
   165c0:	cmp	r1, r6
   165c4:	bcs	165d0 <mcobject_async_free@@Base+0x4c>
   165c8:	ldr	r0, [r8]
   165cc:	b	165f4 <mcobject_async_free@@Base+0x70>
   165d0:	ldr	r0, [r8]
   165d4:	lsl	r1, r6, #3
   165d8:	bl	10f78 <mycore_realloc@plt>
   165dc:	cmp	r0, #0
   165e0:	beq	16608 <mcobject_async_free@@Base+0x84>
   165e4:	lsl	r1, r6, #1
   165e8:	str	r0, [r8]
   165ec:	str	r1, [r7]
   165f0:	ldr	r1, [r5]
   165f4:	str	r4, [r0, r1, lsl #2]
   165f8:	add	r0, r1, #1
   165fc:	str	r0, [r5]
   16600:	mov	r0, #0
   16604:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16608:	mov	r0, #6
   1660c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016610 <mcsimple_create@@Base>:
   16610:	mov	r0, #1
   16614:	mov	r1, #28
   16618:	b	11248 <mycore_calloc@plt>

0001661c <mcsimple_init@@Base>:
   1661c:	push	{r4, r5, r6, sl, fp, lr}
   16620:	add	fp, sp, #16
   16624:	mov	r4, r0
   16628:	mov	r0, #0
   1662c:	mov	r5, r3
   16630:	mov	r6, r2
   16634:	str	r3, [r4]
   16638:	str	r1, [r4, #8]
   1663c:	str	r0, [r4, #12]
   16640:	str	r0, [r4, #16]
   16644:	mov	r0, r1
   16648:	mov	r1, #4
   1664c:	bl	11248 <mycore_calloc@plt>
   16650:	cmp	r0, #0
   16654:	str	r0, [r4, #4]
   16658:	beq	16674 <mcsimple_init@@Base+0x58>
   1665c:	mul	r0, r5, r6
   16660:	str	r0, [r4, #20]
   16664:	mov	r0, r4
   16668:	ldr	r1, [r4, #12]
   1666c:	pop	{r4, r5, r6, sl, fp, lr}
   16670:	b	16678 <mcsimple_init_list_entries@@Base>
   16674:	pop	{r4, r5, r6, sl, fp, pc}

00016678 <mcsimple_init_list_entries@@Base>:
   16678:	push	{r4, r5, r6, sl, fp, lr}
   1667c:	add	fp, sp, #16
   16680:	mov	r5, r0
   16684:	ldr	r6, [r0, #8]
   16688:	ldr	r0, [r0, #12]
   1668c:	mov	r4, r1
   16690:	cmp	r0, r6
   16694:	bcc	166d0 <mcsimple_init_list_entries@@Base+0x58>
   16698:	ldr	r0, [r5, #4]
   1669c:	lsl	r1, r6, #2
   166a0:	bl	10f78 <mycore_realloc@plt>
   166a4:	cmp	r0, #0
   166a8:	beq	16710 <mcsimple_init_list_entries@@Base+0x98>
   166ac:	str	r0, [r5, #4]
   166b0:	add	r6, r6, #128	; 0x80
   166b4:	add	r0, r0, r4, lsl #2
   166b8:	ldr	r1, [r5, #8]
   166bc:	sub	r1, r6, r1
   166c0:	lsl	r2, r1, #2
   166c4:	mov	r1, #0
   166c8:	bl	11a7c <memset@plt>
   166cc:	str	r6, [r5, #8]
   166d0:	mov	r0, #0
   166d4:	str	r0, [r5, #24]
   166d8:	ldr	r0, [r5, #4]
   166dc:	ldr	r0, [r0, r4, lsl #2]
   166e0:	cmp	r0, #0
   166e4:	popne	{r4, r5, r6, sl, fp, pc}
   166e8:	ldr	r1, [r5, #16]
   166ec:	ldr	r0, [r5, #20]
   166f0:	add	r1, r1, #1
   166f4:	str	r1, [r5, #16]
   166f8:	bl	11dac <mycore_malloc@plt>
   166fc:	ldr	r1, [r5, #4]
   16700:	str	r0, [r1, r4, lsl #2]
   16704:	ldr	r0, [r5, #4]
   16708:	ldr	r0, [r0, r4, lsl #2]
   1670c:	pop	{r4, r5, r6, sl, fp, pc}
   16710:	mov	r0, #0
   16714:	pop	{r4, r5, r6, sl, fp, pc}

00016718 <mcsimple_clean@@Base>:
   16718:	mov	r1, #0
   1671c:	str	r1, [r0, #12]
   16720:	str	r1, [r0, #24]
   16724:	bx	lr

00016728 <mcsimple_destroy@@Base>:
   16728:	push	{r4, r5, r6, r7, fp, lr}
   1672c:	add	fp, sp, #16
   16730:	mov	r4, #0
   16734:	cmp	r0, #0
   16738:	beq	167a8 <mcsimple_destroy@@Base+0x80>
   1673c:	mov	r5, r0
   16740:	ldr	r0, [r0, #4]
   16744:	mov	r6, r1
   16748:	cmp	r0, #0
   1674c:	beq	16790 <mcsimple_destroy@@Base+0x68>
   16750:	ldr	r1, [r5, #16]
   16754:	cmp	r1, #0
   16758:	beq	1678c <mcsimple_destroy@@Base+0x64>
   1675c:	mov	r7, #0
   16760:	ldr	r0, [r0, r7, lsl #2]
   16764:	cmp	r0, #0
   16768:	beq	16774 <mcsimple_destroy@@Base+0x4c>
   1676c:	bl	11eb4 <mycore_free@plt>
   16770:	ldr	r1, [r5, #16]
   16774:	add	r7, r7, #1
   16778:	cmp	r7, r1
   1677c:	bcs	16788 <mcsimple_destroy@@Base+0x60>
   16780:	ldr	r0, [r5, #4]
   16784:	b	16760 <mcsimple_destroy@@Base+0x38>
   16788:	ldr	r0, [r5, #4]
   1678c:	bl	11eb4 <mycore_free@plt>
   16790:	cmp	r6, #0
   16794:	beq	167a4 <mcsimple_destroy@@Base+0x7c>
   16798:	mov	r0, r5
   1679c:	bl	11eb4 <mycore_free@plt>
   167a0:	b	167a8 <mcsimple_destroy@@Base+0x80>
   167a4:	mov	r4, r5
   167a8:	mov	r0, r4
   167ac:	pop	{r4, r5, r6, r7, fp, pc}

000167b0 <mcsimple_malloc@@Base>:
   167b0:	push	{r4, sl, fp, lr}
   167b4:	add	fp, sp, #8
   167b8:	mov	r4, r0
   167bc:	ldr	r1, [r0, #20]
   167c0:	ldr	r0, [r0, #24]
   167c4:	cmp	r0, r1
   167c8:	bcc	167ec <mcsimple_malloc@@Base+0x3c>
   167cc:	ldr	r0, [r4, #12]
   167d0:	add	r1, r0, #1
   167d4:	mov	r0, r4
   167d8:	str	r1, [r4, #12]
   167dc:	bl	11b54 <mcsimple_init_list_entries@plt>
   167e0:	cmp	r0, #0
   167e4:	beq	16808 <mcsimple_malloc@@Base+0x58>
   167e8:	ldr	r0, [r4, #24]
   167ec:	ldm	r4, {r1, r2}
   167f0:	ldr	r3, [r4, #12]
   167f4:	add	r1, r1, r0
   167f8:	str	r1, [r4, #24]
   167fc:	ldr	r1, [r2, r3, lsl #2]
   16800:	add	r0, r1, r0
   16804:	pop	{r4, sl, fp, pc}
   16808:	mov	r0, #0
   1680c:	pop	{r4, sl, fp, pc}

00016810 <mcsimple_get_by_absolute_position@@Base>:
   16810:	push	{fp, lr}
   16814:	mov	fp, sp
   16818:	ldr	r2, [r0]
   1681c:	ldr	ip, [r0, #20]
   16820:	ldr	lr, [r0, #16]
   16824:	mul	r2, r2, r1
   16828:	mov	r1, #0
   1682c:	udiv	r3, r2, ip
   16830:	cmp	r3, lr
   16834:	bcs	16848 <mcsimple_get_by_absolute_position@@Base+0x38>
   16838:	ldr	r0, [r0, #4]
   1683c:	mls	r1, r3, ip, r2
   16840:	ldr	r0, [r0, r3, lsl #2]
   16844:	add	r1, r0, r1
   16848:	mov	r0, r1
   1684c:	pop	{fp, pc}

00016850 <mcsync_create@@Base>:
   16850:	mov	r0, #1
   16854:	mov	r1, #8
   16858:	b	11248 <mycore_calloc@plt>

0001685c <mcsync_init@@Base>:
   1685c:	push	{r4, r5, r6, sl, fp, lr}
   16860:	add	fp, sp, #16
   16864:	mov	r5, r0
   16868:	bl	117c4 <mcsync_spin_create@plt>
   1686c:	mov	r4, #1
   16870:	cmp	r0, #0
   16874:	str	r0, [r5]
   16878:	beq	16898 <mcsync_init@@Base+0x3c>
   1687c:	bl	11764 <mcsync_spin_init@plt>
   16880:	cmp	r0, #0
   16884:	beq	168a0 <mcsync_init@@Base+0x44>
   16888:	mov	r6, r0
   1688c:	ldr	r0, [r5]
   16890:	bl	112d8 <mcsync_spin_destroy@plt>
   16894:	mov	r4, r6
   16898:	mov	r0, r4
   1689c:	pop	{r4, r5, r6, sl, fp, pc}
   168a0:	bl	11a94 <mcsync_mutex_create@plt>
   168a4:	cmp	r0, #0
   168a8:	str	r0, [r5, #4]
   168ac:	beq	16898 <mcsync_init@@Base+0x3c>
   168b0:	bl	11ca4 <mcsync_mutex_init@plt>
   168b4:	cmp	r0, #0
   168b8:	beq	168d4 <mcsync_init@@Base+0x78>
   168bc:	mov	r4, r0
   168c0:	ldr	r0, [r5]
   168c4:	bl	112d8 <mcsync_spin_destroy@plt>
   168c8:	ldr	r0, [r5, #4]
   168cc:	bl	110ec <mcsync_mutex_destroy@plt>
   168d0:	b	16898 <mcsync_init@@Base+0x3c>
   168d4:	mov	r4, #0
   168d8:	b	16898 <mcsync_init@@Base+0x3c>

000168dc <mcsync_clean@@Base>:
   168dc:	push	{r4, sl, fp, lr}
   168e0:	add	fp, sp, #8
   168e4:	mov	r4, r0
   168e8:	ldr	r0, [r0]
   168ec:	bl	11bfc <mcsync_spin_clean@plt>
   168f0:	ldr	r0, [r4, #4]
   168f4:	pop	{r4, sl, fp, lr}
   168f8:	b	11f2c <mcsync_mutex_clean@plt>

000168fc <mcsync_destroy@@Base>:
   168fc:	push	{r4, r5, r6, sl, fp, lr}
   16900:	add	fp, sp, #16
   16904:	mov	r4, #0
   16908:	cmp	r0, #0
   1690c:	beq	16940 <mcsync_destroy@@Base+0x44>
   16910:	mov	r5, r0
   16914:	ldr	r0, [r0]
   16918:	mov	r6, r1
   1691c:	bl	112d8 <mcsync_spin_destroy@plt>
   16920:	ldr	r0, [r5, #4]
   16924:	bl	110ec <mcsync_mutex_destroy@plt>
   16928:	cmp	r6, #0
   1692c:	beq	1693c <mcsync_destroy@@Base+0x40>
   16930:	mov	r0, r5
   16934:	bl	11eb4 <mycore_free@plt>
   16938:	b	16940 <mcsync_destroy@@Base+0x44>
   1693c:	mov	r4, r5
   16940:	mov	r0, r4
   16944:	pop	{r4, r5, r6, sl, fp, pc}

00016948 <mcsync_lock@@Base>:
   16948:	ldr	r0, [r0]
   1694c:	b	11800 <mcsync_spin_lock@plt>

00016950 <mcsync_unlock@@Base>:
   16950:	ldr	r0, [r0]
   16954:	b	120b8 <mcsync_spin_unlock@plt>

00016958 <mctree_create@@Base>:
   16958:	push	{r4, r5, r6, sl, fp, lr}
   1695c:	add	fp, sp, #16
   16960:	mov	r5, r0
   16964:	mov	r0, #16
   16968:	bl	11dac <mycore_malloc@plt>
   1696c:	mov	r4, #0
   16970:	cmp	r0, #0
   16974:	beq	169b4 <mctree_create@@Base+0x5c>
   16978:	mov	r6, r0
   1697c:	add	r1, r5, #1
   16980:	add	r0, r5, #512	; 0x200
   16984:	str	r1, [r6, #4]
   16988:	mov	r1, #28
   1698c:	str	r0, [r6, #8]
   16990:	bl	11248 <mycore_calloc@plt>
   16994:	cmp	r0, #0
   16998:	str	r0, [r6]
   1699c:	beq	169ac <mctree_create@@Base+0x54>
   169a0:	mov	r4, r6
   169a4:	str	r5, [r6, #12]
   169a8:	b	169b4 <mctree_create@@Base+0x5c>
   169ac:	mov	r0, r6
   169b0:	bl	11eb4 <mycore_free@plt>
   169b4:	mov	r0, r4
   169b8:	pop	{r4, r5, r6, sl, fp, pc}

000169bc <mctree_clean@@Base>:
   169bc:	ldr	r3, [r0, #12]
   169c0:	ldr	r2, [r0, #8]
   169c4:	ldr	r1, [r0]
   169c8:	add	r3, r3, #1
   169cc:	str	r3, [r0, #4]
   169d0:	rsb	r0, r2, r2, lsl #3
   169d4:	lsl	r2, r0, #2
   169d8:	mov	r0, r1
   169dc:	mov	r1, #0
   169e0:	b	11a7c <memset@plt>

000169e4 <mctree_destroy@@Base>:
   169e4:	cmp	r0, #0
   169e8:	beq	16a14 <mctree_destroy@@Base+0x30>
   169ec:	push	{r4, sl, fp, lr}
   169f0:	add	fp, sp, #8
   169f4:	mov	r4, r0
   169f8:	ldr	r0, [r0]
   169fc:	cmp	r0, #0
   16a00:	beq	16a08 <mctree_destroy@@Base+0x24>
   16a04:	bl	11eb4 <mycore_free@plt>
   16a08:	mov	r0, r4
   16a0c:	bl	11eb4 <mycore_free@plt>
   16a10:	pop	{r4, sl, fp, lr}
   16a14:	mov	r0, #0
   16a18:	bx	lr

00016a1c <__mtree_search_lowercase_to_start@@Base>:
   16a1c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16a20:	add	fp, sp, #24
   16a24:	cmp	r1, #0
   16a28:	beq	16ab0 <__mtree_search_lowercase_to_start@@Base+0x94>
   16a2c:	ldr	r7, [r0]
   16a30:	mov	r5, r3
   16a34:	mov	r8, r2
   16a38:	mov	r4, r1
   16a3c:	rsb	r0, r4, r4, lsl #3
   16a40:	add	r6, r7, r0, lsl #2
   16a44:	ldr	r1, [r6, #4]
   16a48:	cmp	r1, r5
   16a4c:	bne	16a70 <__mtree_search_lowercase_to_start@@Base+0x54>
   16a50:	ldr	r1, [r7, r0, lsl #2]
   16a54:	mov	r0, r8
   16a58:	mov	r2, r5
   16a5c:	bl	11554 <mycore_strncasecmp@plt>
   16a60:	cmp	r0, #0
   16a64:	beq	16ab4 <__mtree_search_lowercase_to_start@@Base+0x98>
   16a68:	ldr	r4, [r6, #24]
   16a6c:	b	16aa8 <__mtree_search_lowercase_to_start@@Base+0x8c>
   16a70:	bcs	16a90 <__mtree_search_lowercase_to_start@@Base+0x74>
   16a74:	ldr	r4, [r6, #20]
   16a78:	rsb	r0, r4, r4, lsl #3
   16a7c:	add	r0, r7, r0, lsl #2
   16a80:	ldr	r0, [r0, #4]
   16a84:	cmp	r0, r5
   16a88:	bls	16aa8 <__mtree_search_lowercase_to_start@@Base+0x8c>
   16a8c:	b	16ab0 <__mtree_search_lowercase_to_start@@Base+0x94>
   16a90:	ldr	r4, [r6, #16]
   16a94:	rsb	r0, r4, r4, lsl #3
   16a98:	add	r0, r7, r0, lsl #2
   16a9c:	ldr	r0, [r0, #4]
   16aa0:	cmp	r0, r5
   16aa4:	bcc	16ab0 <__mtree_search_lowercase_to_start@@Base+0x94>
   16aa8:	cmp	r4, #0
   16aac:	bne	16a3c <__mtree_search_lowercase_to_start@@Base+0x20>
   16ab0:	mov	r4, #0
   16ab4:	mov	r0, r4
   16ab8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016abc <__mtree_search_to_start@@Base>:
   16abc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16ac0:	add	fp, sp, #24
   16ac4:	cmp	r1, #0
   16ac8:	beq	16b50 <__mtree_search_to_start@@Base+0x94>
   16acc:	ldr	r7, [r0]
   16ad0:	mov	r5, r3
   16ad4:	mov	r8, r2
   16ad8:	mov	r4, r1
   16adc:	rsb	r0, r4, r4, lsl #3
   16ae0:	add	r6, r7, r0, lsl #2
   16ae4:	ldr	r1, [r6, #4]
   16ae8:	cmp	r1, r5
   16aec:	bne	16b10 <__mtree_search_to_start@@Base+0x54>
   16af0:	ldr	r1, [r7, r0, lsl #2]
   16af4:	mov	r0, r8
   16af8:	mov	r2, r5
   16afc:	bl	11890 <bcmp@plt>
   16b00:	cmp	r0, #0
   16b04:	beq	16b54 <__mtree_search_to_start@@Base+0x98>
   16b08:	ldr	r4, [r6, #24]
   16b0c:	b	16b48 <__mtree_search_to_start@@Base+0x8c>
   16b10:	bcs	16b30 <__mtree_search_to_start@@Base+0x74>
   16b14:	ldr	r4, [r6, #20]
   16b18:	rsb	r0, r4, r4, lsl #3
   16b1c:	add	r0, r7, r0, lsl #2
   16b20:	ldr	r0, [r0, #4]
   16b24:	cmp	r0, r5
   16b28:	bls	16b48 <__mtree_search_to_start@@Base+0x8c>
   16b2c:	b	16b50 <__mtree_search_to_start@@Base+0x94>
   16b30:	ldr	r4, [r6, #16]
   16b34:	rsb	r0, r4, r4, lsl #3
   16b38:	add	r0, r7, r0, lsl #2
   16b3c:	ldr	r0, [r0, #4]
   16b40:	cmp	r0, r5
   16b44:	bcc	16b50 <__mtree_search_to_start@@Base+0x94>
   16b48:	cmp	r4, #0
   16b4c:	bne	16adc <__mtree_search_to_start@@Base+0x20>
   16b50:	mov	r4, #0
   16b54:	mov	r0, r4
   16b58:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016b5c <mctree_insert_child@@Base>:
   16b5c:	push	{r4, r5, fp, lr}
   16b60:	add	fp, sp, #8
   16b64:	mov	r5, r0
   16b68:	ldr	r0, [r0]
   16b6c:	rsb	r1, r1, r1, lsl #3
   16b70:	ldr	r4, [r5, #4]
   16b74:	add	r1, r0, r1, lsl #2
   16b78:	rsb	ip, r4, r4, lsl #3
   16b7c:	str	r4, [r1, #24]
   16b80:	mov	r1, r0
   16b84:	str	r2, [r1, ip, lsl #2]!
   16b88:	ldr	r2, [fp, #8]
   16b8c:	str	r3, [r1, #4]
   16b90:	str	r2, [r1, #8]
   16b94:	add	r1, r4, #1
   16b98:	str	r1, [r5, #4]
   16b9c:	ldr	r2, [r5, #8]
   16ba0:	cmp	r1, r2
   16ba4:	bcc	16bc8 <mctree_insert_child@@Base+0x6c>
   16ba8:	movw	r1, #4097	; 0x1001
   16bac:	add	r1, r4, r1
   16bb0:	str	r1, [r5, #8]
   16bb4:	rsb	r1, r1, r1, lsl #3
   16bb8:	lsl	r1, r1, #2
   16bbc:	bl	10f78 <mycore_realloc@plt>
   16bc0:	str	r0, [r5]
   16bc4:	ldr	r1, [r5, #4]
   16bc8:	rsb	r1, r1, r1, lsl #3
   16bcc:	mov	r2, #0
   16bd0:	vmov.i32	q8, #0	; 0x00000000
   16bd4:	str	r2, [r0, r1, lsl #2]!
   16bd8:	str	r2, [r0, #24]
   16bdc:	add	r0, r0, #8
   16be0:	vst1.32	{d16-d17}, [r0]
   16be4:	mov	r0, r4
   16be8:	pop	{r4, r5, fp, pc}

00016bec <mctree_insert_after@@Base>:
   16bec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16bf0:	add	fp, sp, #24
   16bf4:	mov	r5, r0
   16bf8:	ldr	r0, [r0]
   16bfc:	rsb	r6, r1, r1, lsl #3
   16c00:	ldr	ip, [fp, #8]
   16c04:	ldr	r8, [r5, #4]
   16c08:	add	r4, r0, r6, lsl #2
   16c0c:	ldr	r6, [r4, #20]!
   16c10:	cmp	r6, #0
   16c14:	beq	16c30 <mctree_insert_after@@Base+0x44>
   16c18:	rsb	r7, r6, r6, lsl #3
   16c1c:	add	r7, r0, r7, lsl #2
   16c20:	str	r8, [r7, #16]
   16c24:	rsb	r7, r8, r8, lsl #3
   16c28:	add	r7, r0, r7, lsl #2
   16c2c:	str	r6, [r7, #20]
   16c30:	rsb	r7, r8, r8, lsl #3
   16c34:	mov	r6, r0
   16c38:	str	r8, [r4]
   16c3c:	str	r2, [r6, r7, lsl #2]!
   16c40:	stmib	r6, {r3, ip}
   16c44:	str	r1, [r6, #16]
   16c48:	add	r1, r8, #1
   16c4c:	str	r1, [r5, #4]
   16c50:	ldr	r2, [r5, #8]
   16c54:	cmp	r1, r2
   16c58:	bcc	16c7c <mctree_insert_after@@Base+0x90>
   16c5c:	movw	r1, #4097	; 0x1001
   16c60:	add	r1, r8, r1
   16c64:	str	r1, [r5, #8]
   16c68:	rsb	r1, r1, r1, lsl #3
   16c6c:	lsl	r1, r1, #2
   16c70:	bl	10f78 <mycore_realloc@plt>
   16c74:	str	r0, [r5]
   16c78:	ldr	r1, [r5, #4]
   16c7c:	rsb	r1, r1, r1, lsl #3
   16c80:	mov	r2, #0
   16c84:	vmov.i32	q8, #0	; 0x00000000
   16c88:	str	r2, [r0, r1, lsl #2]!
   16c8c:	str	r2, [r0, #24]
   16c90:	add	r0, r0, #8
   16c94:	vst1.32	{d16-d17}, [r0]
   16c98:	mov	r0, r8
   16c9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016ca0 <mctree_insert_before@@Base>:
   16ca0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16ca4:	add	fp, sp, #24
   16ca8:	mov	r5, r0
   16cac:	ldr	r0, [r0]
   16cb0:	rsb	r6, r1, r1, lsl #3
   16cb4:	ldr	ip, [fp, #8]
   16cb8:	ldr	r8, [r5, #4]
   16cbc:	add	r4, r0, r6, lsl #2
   16cc0:	ldr	r6, [r4, #16]!
   16cc4:	cmp	r6, #0
   16cc8:	beq	16ce4 <mctree_insert_before@@Base+0x44>
   16ccc:	rsb	r7, r6, r6, lsl #3
   16cd0:	add	r7, r0, r7, lsl #2
   16cd4:	str	r8, [r7, #20]
   16cd8:	rsb	r7, r8, r8, lsl #3
   16cdc:	add	r7, r0, r7, lsl #2
   16ce0:	str	r6, [r7, #16]
   16ce4:	rsb	r7, r8, r8, lsl #3
   16ce8:	mov	r6, r0
   16cec:	str	r8, [r4]
   16cf0:	str	r2, [r6, r7, lsl #2]!
   16cf4:	stmib	r6, {r3, ip}
   16cf8:	str	r1, [r6, #20]
   16cfc:	add	r1, r8, #1
   16d00:	str	r1, [r5, #4]
   16d04:	ldr	r2, [r5, #8]
   16d08:	cmp	r1, r2
   16d0c:	bcc	16d30 <mctree_insert_before@@Base+0x90>
   16d10:	movw	r1, #4097	; 0x1001
   16d14:	add	r1, r8, r1
   16d18:	str	r1, [r5, #8]
   16d1c:	rsb	r1, r1, r1, lsl #3
   16d20:	lsl	r1, r1, #2
   16d24:	bl	10f78 <mycore_realloc@plt>
   16d28:	str	r0, [r5]
   16d2c:	ldr	r1, [r5, #4]
   16d30:	rsb	r1, r1, r1, lsl #3
   16d34:	mov	r2, #0
   16d38:	vmov.i32	q8, #0	; 0x00000000
   16d3c:	str	r2, [r0, r1, lsl #2]!
   16d40:	str	r2, [r0, #24]
   16d44:	add	r0, r0, #8
   16d48:	vst1.32	{d16-d17}, [r0]
   16d4c:	mov	r0, r8
   16d50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016d54 <__mtree_insert_to_start@@Base>:
   16d54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d58:	add	fp, sp, #28
   16d5c:	sub	sp, sp, #4
   16d60:	cmp	r1, #0
   16d64:	beq	16e40 <__mtree_insert_to_start@@Base+0xec>
   16d68:	ldr	r7, [r0]
   16d6c:	ldr	r8, [fp, #8]
   16d70:	mov	r5, r3
   16d74:	mov	r6, r2
   16d78:	mov	sl, r0
   16d7c:	rsb	r0, r1, r1, lsl #3
   16d80:	mov	r4, r1
   16d84:	add	r9, r7, r0, lsl #2
   16d88:	ldr	r1, [r9, #4]
   16d8c:	cmp	r1, r5
   16d90:	bne	16dbc <__mtree_insert_to_start@@Base+0x68>
   16d94:	ldr	r1, [r7, r0, lsl #2]
   16d98:	mov	r0, r6
   16d9c:	mov	r2, r5
   16da0:	bl	11890 <bcmp@plt>
   16da4:	cmp	r0, #0
   16da8:	beq	16e48 <__mtree_insert_to_start@@Base+0xf4>
   16dac:	ldr	r1, [r9, #24]
   16db0:	cmp	r1, #0
   16db4:	bne	16d7c <__mtree_insert_to_start@@Base+0x28>
   16db8:	b	16e90 <__mtree_insert_to_start@@Base+0x13c>
   16dbc:	bcs	16de4 <__mtree_insert_to_start@@Base+0x90>
   16dc0:	ldr	r1, [r9, #20]
   16dc4:	cmp	r1, #0
   16dc8:	beq	16e54 <__mtree_insert_to_start@@Base+0x100>
   16dcc:	rsb	r0, r1, r1, lsl #3
   16dd0:	add	r0, r7, r0, lsl #2
   16dd4:	ldr	r0, [r0, #4]
   16dd8:	cmp	r0, r5
   16ddc:	bls	16d7c <__mtree_insert_to_start@@Base+0x28>
   16de0:	b	16e54 <__mtree_insert_to_start@@Base+0x100>
   16de4:	ldr	r1, [r9, #16]
   16de8:	cmp	r1, #0
   16dec:	beq	16e04 <__mtree_insert_to_start@@Base+0xb0>
   16df0:	rsb	r0, r1, r1, lsl #3
   16df4:	add	r0, r7, r0, lsl #2
   16df8:	ldr	r0, [r0, #4]
   16dfc:	cmp	r0, r5
   16e00:	bcs	16d7c <__mtree_insert_to_start@@Base+0x28>
   16e04:	ldr	r3, [fp, #12]
   16e08:	cmp	r3, #0
   16e0c:	beq	16e24 <__mtree_insert_to_start@@Base+0xd0>
   16e10:	add	r2, fp, #8
   16e14:	mov	r0, r6
   16e18:	mov	r1, r5
   16e1c:	blx	r3
   16e20:	ldr	r8, [fp, #8]
   16e24:	mov	r0, sl
   16e28:	mov	r1, r4
   16e2c:	mov	r2, r6
   16e30:	mov	r3, r5
   16e34:	str	r8, [sp]
   16e38:	bl	113b0 <mctree_insert_before@plt>
   16e3c:	b	16ec8 <__mtree_insert_to_start@@Base+0x174>
   16e40:	mov	r4, #0
   16e44:	b	16ecc <__mtree_insert_to_start@@Base+0x178>
   16e48:	cmp	r8, #0
   16e4c:	strne	r8, [r9, #8]
   16e50:	b	16ecc <__mtree_insert_to_start@@Base+0x178>
   16e54:	ldr	r3, [fp, #12]
   16e58:	cmp	r3, #0
   16e5c:	beq	16e74 <__mtree_insert_to_start@@Base+0x120>
   16e60:	add	r2, fp, #8
   16e64:	mov	r0, r6
   16e68:	mov	r1, r5
   16e6c:	blx	r3
   16e70:	ldr	r8, [fp, #8]
   16e74:	mov	r0, sl
   16e78:	mov	r1, r4
   16e7c:	mov	r2, r6
   16e80:	mov	r3, r5
   16e84:	str	r8, [sp]
   16e88:	bl	11ddc <mctree_insert_after@plt>
   16e8c:	b	16ec8 <__mtree_insert_to_start@@Base+0x174>
   16e90:	ldr	r3, [fp, #12]
   16e94:	cmp	r3, #0
   16e98:	beq	16eb0 <__mtree_insert_to_start@@Base+0x15c>
   16e9c:	add	r2, fp, #8
   16ea0:	mov	r0, r6
   16ea4:	mov	r1, r5
   16ea8:	blx	r3
   16eac:	ldr	r8, [fp, #8]
   16eb0:	mov	r0, sl
   16eb4:	mov	r1, r4
   16eb8:	mov	r2, r6
   16ebc:	mov	r3, r5
   16ec0:	str	r8, [sp]
   16ec4:	bl	1150c <mctree_insert_child@plt>
   16ec8:	mov	r4, r0
   16ecc:	mov	r0, r4
   16ed0:	sub	sp, fp, #28
   16ed4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016ed8 <mctree_insert@@Base>:
   16ed8:	push	{r4, r5, r6, r7, fp, lr}
   16edc:	add	fp, sp, #16
   16ee0:	sub	sp, sp, #16
   16ee4:	cmp	r2, #0
   16ee8:	str	r3, [sp, #12]
   16eec:	beq	16f60 <mctree_insert@@Base+0x88>
   16ef0:	mov	r6, r0
   16ef4:	mov	r0, r1
   16ef8:	mov	r5, r1
   16efc:	mov	r4, r2
   16f00:	ldr	ip, [fp, #8]
   16f04:	ldrb	r1, [r0], r2
   16f08:	ldr	r2, [pc, #148]	; 16fa4 <mctree_insert@@Base+0xcc>
   16f0c:	ldrb	r0, [r0, #-1]
   16f10:	add	r2, pc, r2
   16f14:	ldrb	r1, [r2, r1]
   16f18:	ldrb	r0, [r2, r0]
   16f1c:	ldr	r2, [r6, #12]
   16f20:	add	r0, r0, r1
   16f24:	ldr	r1, [r6]
   16f28:	udiv	r7, r0, r2
   16f2c:	mls	r0, r7, r2, r0
   16f30:	add	r7, r0, #1
   16f34:	rsb	r0, r7, r7, lsl #3
   16f38:	add	r0, r1, r0, lsl #2
   16f3c:	ldr	r1, [r0, #24]
   16f40:	cmp	r1, #0
   16f44:	beq	16f68 <mctree_insert@@Base+0x90>
   16f48:	stm	sp, {r3, ip}
   16f4c:	mov	r0, r6
   16f50:	mov	r2, r5
   16f54:	mov	r3, r4
   16f58:	bl	11638 <__mtree_insert_to_start@plt>
   16f5c:	b	16f9c <mctree_insert@@Base+0xc4>
   16f60:	mov	r0, #0
   16f64:	b	16f9c <mctree_insert@@Base+0xc4>
   16f68:	cmp	ip, #0
   16f6c:	beq	16f84 <mctree_insert@@Base+0xac>
   16f70:	add	r2, sp, #12
   16f74:	mov	r0, r5
   16f78:	mov	r1, r4
   16f7c:	blx	ip
   16f80:	ldr	r3, [sp, #12]
   16f84:	str	r3, [sp]
   16f88:	mov	r0, r6
   16f8c:	mov	r1, r7
   16f90:	mov	r2, r5
   16f94:	mov	r3, r4
   16f98:	bl	1150c <mctree_insert_child@plt>
   16f9c:	sub	sp, fp, #16
   16fa0:	pop	{r4, r5, r6, r7, fp, pc}
   16fa4:	andeq	r6, r1, r0, asr #22

00016fa8 <mctree_search@@Base>:
   16fa8:	cmp	r2, #0
   16fac:	beq	1700c <mctree_search@@Base+0x64>
   16fb0:	push	{r4, sl, fp, lr}
   16fb4:	add	fp, sp, #8
   16fb8:	mov	r3, r2
   16fbc:	mov	ip, r1
   16fc0:	ldrb	r2, [r1], r2
   16fc4:	ldr	lr, [pc, #72]	; 17014 <mctree_search@@Base+0x6c>
   16fc8:	ldrb	r1, [r1, #-1]
   16fcc:	add	lr, pc, lr
   16fd0:	ldrb	r2, [lr, r2]
   16fd4:	ldrb	r1, [lr, r1]
   16fd8:	ldr	lr, [r0]
   16fdc:	add	r1, r1, r2
   16fe0:	ldr	r2, [r0, #12]
   16fe4:	udiv	r4, r1, r2
   16fe8:	mls	r1, r4, r2, r1
   16fec:	rsb	r1, r1, r1, lsl #3
   16ff0:	add	r1, lr, r1, lsl #2
   16ff4:	ldr	r1, [r1, #52]	; 0x34
   16ff8:	cmp	r1, #0
   16ffc:	pop	{r4, sl, fp, lr}
   17000:	beq	1700c <mctree_search@@Base+0x64>
   17004:	mov	r2, ip
   17008:	b	16abc <__mtree_search_to_start@@Base>
   1700c:	mov	r0, #0
   17010:	bx	lr
   17014:	andeq	r6, r1, r4, lsl #21

00017018 <mctree_search_lowercase@@Base>:
   17018:	cmp	r2, #0
   1701c:	beq	1707c <mctree_search_lowercase@@Base+0x64>
   17020:	push	{r4, sl, fp, lr}
   17024:	add	fp, sp, #8
   17028:	mov	r3, r2
   1702c:	mov	ip, r1
   17030:	ldrb	r2, [r1], r2
   17034:	ldr	lr, [pc, #72]	; 17084 <mctree_search_lowercase@@Base+0x6c>
   17038:	ldrb	r1, [r1, #-1]
   1703c:	add	lr, pc, lr
   17040:	ldrb	r2, [lr, r2]
   17044:	ldrb	r1, [lr, r1]
   17048:	ldr	lr, [r0]
   1704c:	add	r1, r1, r2
   17050:	ldr	r2, [r0, #12]
   17054:	udiv	r4, r1, r2
   17058:	mls	r1, r4, r2, r1
   1705c:	rsb	r1, r1, r1, lsl #3
   17060:	add	r1, lr, r1, lsl #2
   17064:	ldr	r1, [r1, #52]	; 0x34
   17068:	cmp	r1, #0
   1706c:	pop	{r4, sl, fp, lr}
   17070:	beq	1707c <mctree_search_lowercase@@Base+0x64>
   17074:	mov	r2, ip
   17078:	b	16a1c <__mtree_search_lowercase_to_start@@Base>
   1707c:	mov	r0, #0
   17080:	bx	lr
   17084:	andeq	r6, r1, r4, lsl sl

00017088 <mycore_utils_mhash_hash@@Base>:
   17088:	cmp	r1, #0
   1708c:	beq	170b4 <mycore_utils_mhash_hash@@Base+0x2c>
   17090:	mov	ip, #0
   17094:	ldrb	r3, [r0], #1
   17098:	subs	r1, r1, #1
   1709c:	add	r3, ip, r3
   170a0:	add	r3, r3, r3, lsl #10
   170a4:	eor	ip, r3, r3, lsr #6
   170a8:	bne	17094 <mycore_utils_mhash_hash@@Base+0xc>
   170ac:	add	r0, ip, ip, lsl #3
   170b0:	b	170b8 <mycore_utils_mhash_hash@@Base+0x30>
   170b4:	mov	r0, #0
   170b8:	eor	r0, r0, r0, lsr #11
   170bc:	add	r0, r0, r0, lsl #15
   170c0:	udiv	r1, r0, r2
   170c4:	mls	r0, r1, r2, r0
   170c8:	bx	lr

000170cc <mycore_utils_mhash_create@@Base>:
   170cc:	mov	r0, #1
   170d0:	mov	r1, #24
   170d4:	b	11248 <mycore_calloc@plt>

000170d8 <mycore_utils_mhash_init@@Base>:
   170d8:	push	{r4, r5, r6, sl, fp, lr}
   170dc:	add	fp, sp, #16
   170e0:	sub	sp, sp, #8
   170e4:	mov	r4, r2
   170e8:	mov	r6, r1
   170ec:	mov	r5, r0
   170f0:	bl	11434 <mchar_async_create@plt>
   170f4:	mov	r1, r0
   170f8:	str	r0, [r5]
   170fc:	mov	r0, #2
   17100:	cmp	r1, #0
   17104:	beq	17178 <mycore_utils_mhash_init@@Base+0xa0>
   17108:	mov	r0, r1
   1710c:	mov	r1, #128	; 0x80
   17110:	mov	r2, #4096	; 0x1000
   17114:	bl	11710 <mchar_async_init@plt>
   17118:	cmp	r0, #0
   1711c:	str	r0, [sp, #4]
   17120:	bne	17178 <mycore_utils_mhash_init@@Base+0xa0>
   17124:	ldr	r0, [r5]
   17128:	add	r1, sp, #4
   1712c:	bl	11548 <mchar_async_node_add@plt>
   17130:	str	r0, [r5, #4]
   17134:	ldr	r0, [sp, #4]
   17138:	cmp	r0, #0
   1713c:	bne	17178 <mycore_utils_mhash_init@@Base+0xa0>
   17140:	cmp	r6, #128	; 0x80
   17144:	mov	r1, #4
   17148:	movls	r6, #128	; 0x80
   1714c:	mov	r0, r6
   17150:	bl	11248 <mycore_calloc@plt>
   17154:	str	r0, [r5, #8]
   17158:	cmp	r0, #0
   1715c:	mov	r0, #2
   17160:	beq	17178 <mycore_utils_mhash_init@@Base+0xa0>
   17164:	cmp	r4, #0
   17168:	mov	r0, #0
   1716c:	str	r6, [r5, #12]
   17170:	movweq	r4, #1
   17174:	str	r4, [r5, #20]
   17178:	sub	sp, fp, #16
   1717c:	pop	{r4, r5, r6, sl, fp, pc}

00017180 <mycore_utils_mhash_clean@@Base>:
   17180:	push	{r4, sl, fp, lr}
   17184:	add	fp, sp, #8
   17188:	mov	r4, r0
   1718c:	ldr	r0, [r0]
   17190:	bl	11cf8 <mchar_async_clean@plt>
   17194:	ldr	r1, [r4, #12]
   17198:	ldr	r0, [r4, #8]
   1719c:	lsl	r2, r1, #2
   171a0:	mov	r1, #0
   171a4:	pop	{r4, sl, fp, lr}
   171a8:	b	11a7c <memset@plt>

000171ac <mycore_utils_mhash_destroy@@Base>:
   171ac:	push	{r4, r5, fp, lr}
   171b0:	add	fp, sp, #8
   171b4:	cmp	r0, #0
   171b8:	beq	171e8 <mycore_utils_mhash_destroy@@Base+0x3c>
   171bc:	mov	r4, r0
   171c0:	ldr	r0, [r0, #8]
   171c4:	mov	r5, r1
   171c8:	cmp	r0, #0
   171cc:	beq	171dc <mycore_utils_mhash_destroy@@Base+0x30>
   171d0:	bl	11eb4 <mycore_free@plt>
   171d4:	mov	r0, #0
   171d8:	str	r0, [r4, #8]
   171dc:	cmp	r5, #0
   171e0:	beq	171ec <mycore_utils_mhash_destroy@@Base+0x40>
   171e4:	bl	11eb4 <mycore_free@plt>
   171e8:	mov	r4, #0
   171ec:	mov	r0, r4
   171f0:	pop	{r4, r5, fp, pc}

000171f4 <mycore_utils_mhash_create_entry@@Base>:
   171f4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   171f8:	add	fp, sp, #24
   171fc:	mov	r5, r0
   17200:	mov	r7, r1
   17204:	ldr	r0, [r0]
   17208:	mov	r6, r2
   1720c:	mov	r2, #16
   17210:	mov	r8, r3
   17214:	ldr	r1, [r5, #4]
   17218:	bl	11adc <mchar_async_malloc@plt>
   1721c:	mov	r4, r0
   17220:	ldm	r5, {r0, r1}
   17224:	add	r2, r6, #1
   17228:	bl	11adc <mchar_async_malloc@plt>
   1722c:	cmp	r0, #0
   17230:	str	r0, [r4]
   17234:	beq	1725c <mycore_utils_mhash_create_entry@@Base+0x68>
   17238:	mov	r1, r7
   1723c:	mov	r2, r6
   17240:	bl	11290 <memcpy@plt>
   17244:	ldr	r0, [r4]
   17248:	mov	r1, #0
   1724c:	strb	r1, [r0, r6]
   17250:	stmib	r4, {r6, r8}
   17254:	str	r1, [r4, #12]
   17258:	b	1726c <mycore_utils_mhash_create_entry@@Base+0x78>
   1725c:	ldm	r5, {r0, r1}
   17260:	mov	r2, r4
   17264:	bl	11938 <mchar_async_free@plt>
   17268:	mov	r4, #0
   1726c:	mov	r0, r4
   17270:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017274 <mycore_utils_mhash_add_with_choice@@Base>:
   17274:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17278:	add	fp, sp, #24
   1727c:	cmp	r1, #0
   17280:	mov	r9, #0
   17284:	movne	r5, r2
   17288:	cmpne	r2, #0
   1728c:	bne	17298 <mycore_utils_mhash_add_with_choice@@Base+0x24>
   17290:	mov	r0, r9
   17294:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17298:	mov	r8, r0
   1729c:	ldr	r0, [r0, #12]
   172a0:	mov	r6, r1
   172a4:	mov	r1, #0
   172a8:	mov	r2, #0
   172ac:	ldrb	r3, [r6, r1]
   172b0:	add	r1, r1, #1
   172b4:	cmp	r5, r1
   172b8:	add	r2, r2, r3
   172bc:	add	r2, r2, r2, lsl #10
   172c0:	eor	r2, r2, r2, lsr #6
   172c4:	bne	172ac <mycore_utils_mhash_add_with_choice@@Base+0x38>
   172c8:	add	r1, r2, r2, lsl #3
   172cc:	eor	r1, r1, r1, lsr #11
   172d0:	add	r1, r1, r1, lsl #15
   172d4:	udiv	r2, r1, r0
   172d8:	mls	r4, r2, r0, r1
   172dc:	ldr	r1, [r8, #8]
   172e0:	ldr	r7, [r1, r4, lsl #2]
   172e4:	cmp	r7, #0
   172e8:	beq	1735c <mycore_utils_mhash_add_with_choice@@Base+0xe8>
   172ec:	mov	r4, #0
   172f0:	ldr	r0, [r7, #4]
   172f4:	cmp	r0, r5
   172f8:	bne	17314 <mycore_utils_mhash_add_with_choice@@Base+0xa0>
   172fc:	ldr	r0, [r7]
   17300:	mov	r1, r6
   17304:	mov	r2, r5
   17308:	bl	12040 <strncmp@plt>
   1730c:	cmp	r0, #0
   17310:	beq	17398 <mycore_utils_mhash_add_with_choice@@Base+0x124>
   17314:	ldr	r0, [r7, #12]
   17318:	cmp	r0, #0
   1731c:	beq	1732c <mycore_utils_mhash_add_with_choice@@Base+0xb8>
   17320:	add	r4, r4, #1
   17324:	mov	r7, r0
   17328:	b	172f0 <mycore_utils_mhash_add_with_choice@@Base+0x7c>
   1732c:	mov	r0, r8
   17330:	mov	r1, r6
   17334:	mov	r2, r5
   17338:	mov	r3, #0
   1733c:	bl	11fbc <mycore_utils_mhash_create_entry@plt>
   17340:	str	r0, [r7, #12]
   17344:	mov	r9, r0
   17348:	ldr	r0, [r8, #20]
   1734c:	cmp	r4, r0
   17350:	movhi	r0, r8
   17354:	blhi	11bd8 <mycore_utils_mhash_rebuld@plt>
   17358:	b	17290 <mycore_utils_mhash_add_with_choice@@Base+0x1c>
   1735c:	ldr	r1, [r8, #16]
   17360:	sub	r0, r0, r0, lsr #2
   17364:	cmp	r1, r0
   17368:	movcs	r0, r8
   1736c:	blcs	11bd8 <mycore_utils_mhash_rebuld@plt>
   17370:	mov	r0, r8
   17374:	mov	r1, r6
   17378:	mov	r2, r5
   1737c:	mov	r3, #0
   17380:	bl	11fbc <mycore_utils_mhash_create_entry@plt>
   17384:	ldr	r1, [r8, #8]
   17388:	str	r0, [r1, r4, lsl #2]
   1738c:	ldr	r0, [r8, #8]
   17390:	ldr	r9, [r0, r4, lsl #2]
   17394:	b	17290 <mycore_utils_mhash_add_with_choice@@Base+0x1c>
   17398:	mov	r9, r7
   1739c:	b	17290 <mycore_utils_mhash_add_with_choice@@Base+0x1c>

000173a0 <mycore_utils_mhash_rebuld@@Base>:
   173a0:	push	{r4, r5, r6, r7, fp, lr}
   173a4:	add	fp, sp, #16
   173a8:	ldr	r6, [r0, #12]
   173ac:	ldr	r5, [r0, #8]
   173b0:	mov	r4, r0
   173b4:	mov	r1, #4
   173b8:	lsl	r0, r6, #1
   173bc:	str	r0, [r4, #12]
   173c0:	bl	11248 <mycore_calloc@plt>
   173c4:	cmp	r0, #0
   173c8:	str	r0, [r4, #8]
   173cc:	beq	17428 <mycore_utils_mhash_rebuld@@Base+0x88>
   173d0:	ldr	r0, [r4, #12]
   173d4:	cmp	r0, #0
   173d8:	beq	17418 <mycore_utils_mhash_rebuld@@Base+0x78>
   173dc:	mov	r7, #0
   173e0:	ldr	r6, [r5, r7, lsl #2]
   173e4:	cmp	r6, #0
   173e8:	beq	1740c <mycore_utils_mhash_rebuld@@Base+0x6c>
   173ec:	ldm	r6, {r1, r2}
   173f0:	mov	r0, r4
   173f4:	mov	r3, r6
   173f8:	bl	11f74 <mycore_utils_mhash_rebuild_add_entry@plt>
   173fc:	ldr	r6, [r6, #12]
   17400:	cmp	r6, #0
   17404:	bne	173ec <mycore_utils_mhash_rebuld@@Base+0x4c>
   17408:	ldr	r0, [r4, #12]
   1740c:	add	r7, r7, #1
   17410:	cmp	r7, r0
   17414:	bcc	173e0 <mycore_utils_mhash_rebuld@@Base+0x40>
   17418:	mov	r0, r5
   1741c:	bl	11eb4 <mycore_free@plt>
   17420:	ldr	r0, [r4, #8]
   17424:	pop	{r4, r5, r6, r7, fp, pc}
   17428:	mov	r0, #0
   1742c:	str	r5, [r4, #8]
   17430:	str	r6, [r4, #12]
   17434:	pop	{r4, r5, r6, r7, fp, pc}

00017438 <mycore_utils_mhash_add@@Base>:
   17438:	push	{r4, sl, fp, lr}
   1743c:	add	fp, sp, #8
   17440:	mov	r4, r3
   17444:	bl	11e9c <mycore_utils_mhash_add_with_choice@plt>
   17448:	cmp	r0, #0
   1744c:	strne	r4, [r0, #8]
   17450:	pop	{r4, sl, fp, pc}

00017454 <mycore_utils_mhash_search@@Base>:
   17454:	push	{r4, r5, r6, r7, fp, lr}
   17458:	add	fp, sp, #16
   1745c:	cmp	r1, #0
   17460:	mov	r6, #0
   17464:	movne	r4, r2
   17468:	cmpne	r2, #0
   1746c:	beq	174f4 <mycore_utils_mhash_search@@Base+0xa0>
   17470:	mov	r5, r1
   17474:	ldr	r1, [r0, #12]
   17478:	mov	r2, #0
   1747c:	mov	r3, #0
   17480:	ldrb	r7, [r5, r2]
   17484:	add	r2, r2, #1
   17488:	cmp	r4, r2
   1748c:	add	r3, r3, r7
   17490:	add	r3, r3, r3, lsl #10
   17494:	eor	r3, r3, r3, lsr #6
   17498:	bne	17480 <mycore_utils_mhash_search@@Base+0x2c>
   1749c:	add	r2, r3, r3, lsl #3
   174a0:	ldr	r0, [r0, #8]
   174a4:	mov	r6, #0
   174a8:	eor	r2, r2, r2, lsr #11
   174ac:	add	r2, r2, r2, lsl #15
   174b0:	udiv	r3, r2, r1
   174b4:	mls	r1, r3, r1, r2
   174b8:	ldr	r7, [r0, r1, lsl #2]
   174bc:	cmp	r7, #0
   174c0:	beq	174f4 <mycore_utils_mhash_search@@Base+0xa0>
   174c4:	ldr	r0, [r7, #4]
   174c8:	cmp	r0, r4
   174cc:	bne	174e8 <mycore_utils_mhash_search@@Base+0x94>
   174d0:	ldr	r0, [r7]
   174d4:	mov	r1, r5
   174d8:	mov	r2, r4
   174dc:	bl	12040 <strncmp@plt>
   174e0:	cmp	r0, #0
   174e4:	beq	174f0 <mycore_utils_mhash_search@@Base+0x9c>
   174e8:	ldr	r7, [r7, #12]
   174ec:	b	174bc <mycore_utils_mhash_search@@Base+0x68>
   174f0:	mov	r6, r7
   174f4:	mov	r0, r6
   174f8:	pop	{r4, r5, r6, r7, fp, pc}

000174fc <mycore_utils_mhash_entry_by_id@@Base>:
   174fc:	ldr	r3, [r0, #12]
   17500:	mov	r2, r0
   17504:	mov	r0, #0
   17508:	cmp	r3, r1
   1750c:	bxls	lr
   17510:	ldr	r0, [r2, #8]
   17514:	ldr	r0, [r0, r1, lsl #2]
   17518:	bx	lr

0001751c <mycore_utils_mhash_get_table_size@@Base>:
   1751c:	ldr	r0, [r0, #12]
   17520:	bx	lr

00017524 <mycore_utils_mhash_rebuild_add_entry@@Base>:
   17524:	cmp	r1, #0
   17528:	mov	ip, #0
   1752c:	cmpne	r2, #0
   17530:	beq	175a4 <mycore_utils_mhash_rebuild_add_entry@@Base+0x80>
   17534:	push	{r4, sl, fp, lr}
   17538:	add	fp, sp, #8
   1753c:	mov	lr, #0
   17540:	str	lr, [r3, #12]
   17544:	ldr	ip, [r0, #12]
   17548:	ldrb	r4, [r1], #1
   1754c:	subs	r2, r2, #1
   17550:	add	r4, lr, r4
   17554:	add	r4, r4, r4, lsl #10
   17558:	eor	lr, r4, r4, lsr #6
   1755c:	bne	17548 <mycore_utils_mhash_rebuild_add_entry@@Base+0x24>
   17560:	add	r1, lr, lr, lsl #3
   17564:	eor	r1, r1, r1, lsr #11
   17568:	add	r1, r1, r1, lsl #15
   1756c:	udiv	r2, r1, ip
   17570:	mls	r2, r2, ip, r1
   17574:	ldr	r1, [r0, #8]
   17578:	ldr	r0, [r1, r2, lsl #2]!
   1757c:	cmp	r0, #0
   17580:	beq	17598 <mycore_utils_mhash_rebuild_add_entry@@Base+0x74>
   17584:	mov	r1, r0
   17588:	ldr	r0, [r0, #12]
   1758c:	cmp	r0, #0
   17590:	bne	17584 <mycore_utils_mhash_rebuild_add_entry@@Base+0x60>
   17594:	add	r1, r1, #12
   17598:	mov	ip, r3
   1759c:	str	r3, [r1]
   175a0:	pop	{r4, sl, fp, lr}
   175a4:	mov	r0, ip
   175a8:	bx	lr

000175ac <myencoding_detect_by_trigram@@Base>:
   175ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   175b0:	add	fp, sp, #28
   175b4:	sub	sp, sp, #20
   175b8:	str	r3, [sp, #12]
   175bc:	mov	r3, #0
   175c0:	mov	r8, r1
   175c4:	mov	r1, #0
   175c8:	subs	sl, r2, #3
   175cc:	str	r0, [sp]
   175d0:	str	r2, [sp, #4]
   175d4:	str	r3, [r0]
   175d8:	str	r1, [sp, #16]
   175dc:	str	r3, [r0, #4]
   175e0:	beq	17680 <myencoding_detect_by_trigram@@Base+0xd4>
   175e4:	ldr	r7, [fp, #8]
   175e8:	mov	r0, #0
   175ec:	mov	r9, #0
   175f0:	str	r0, [sp, #8]
   175f4:	mov	r6, r8
   175f8:	ldrsb	r0, [r6, r9]!
   175fc:	cmn	r0, #1
   17600:	bgt	17674 <myencoding_detect_by_trigram@@Base+0xc8>
   17604:	cmp	r7, #0
   17608:	beq	17674 <myencoding_detect_by_trigram@@Base+0xc8>
   1760c:	ldr	r4, [sp, #12]
   17610:	mov	r5, r7
   17614:	mov	r0, r4
   17618:	mov	r1, r6
   1761c:	mov	r2, #3
   17620:	bl	11890 <bcmp@plt>
   17624:	cmp	r0, #0
   17628:	beq	1763c <myencoding_detect_by_trigram@@Base+0x90>
   1762c:	subs	r7, r7, #1
   17630:	add	r4, r4, #8
   17634:	bne	17614 <myencoding_detect_by_trigram@@Base+0x68>
   17638:	b	17670 <myencoding_detect_by_trigram@@Base+0xc4>
   1763c:	ldr	r0, [r4, #4]
   17640:	ldr	r2, [sp, #8]
   17644:	ldr	r1, [sp, #16]
   17648:	add	r2, r2, r0
   1764c:	ldr	r0, [sp]
   17650:	add	r1, r1, #1
   17654:	str	r1, [sp, #16]
   17658:	str	r2, [sp, #8]
   1765c:	stm	r0, {r1, r2}
   17660:	ldr	r0, [fp, #12]
   17664:	cmp	r2, r0
   17668:	ldr	r0, [sp, #4]
   1766c:	movcs	r9, r0
   17670:	mov	r7, r5
   17674:	add	r9, r9, #1
   17678:	cmp	r9, sl
   1767c:	bcc	175f4 <myencoding_detect_by_trigram@@Base+0x48>
   17680:	sub	sp, fp, #28
   17684:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017688 <myencoding_detect_russian_has_end@@Base>:
   17688:	ldr	r3, [r0, #4]
   1768c:	cmp	r3, r2
   17690:	movcs	r0, #1
   17694:	bxcs	lr
   17698:	ldr	r2, [r0]
   1769c:	mov	r0, #0
   176a0:	cmp	r2, r1
   176a4:	movwcs	r0, #1
   176a8:	bx	lr

000176ac <myencoding_detect_unicode_has_end@@Base>:
   176ac:	ldmib	r0, {r2, ip}
   176b0:	clz	r3, ip
   176b4:	lsr	r3, r3, #5
   176b8:	cmp	r2, #0
   176bc:	mov	r0, r2
   176c0:	movwne	r0, #1
   176c4:	cmpne	ip, #0
   176c8:	orr	r0, r3, r0
   176cc:	bne	176d4 <myencoding_detect_unicode_has_end@@Base+0x28>
   176d0:	bx	lr
   176d4:	mov	r0, #100	; 0x64
   176d8:	mul	r0, ip, r0
   176dc:	udiv	r2, r0, r2
   176e0:	mov	r0, #0
   176e4:	cmp	r2, r1
   176e8:	movwcc	r0, #1
   176ec:	bx	lr

000176f0 <myencoding_detect_utf_8@@Base>:
   176f0:	push	{r4, r5, r6, sl, fp, lr}
   176f4:	add	fp, sp, #16
   176f8:	mov	r3, #0
   176fc:	cmp	r2, #0
   17700:	str	r3, [r0]
   17704:	str	r3, [r0, #4]
   17708:	str	r3, [r0, #8]
   1770c:	beq	177f4 <myencoding_detect_utf_8@@Base+0x104>
   17710:	mov	ip, #0
   17714:	mov	lr, #0
   17718:	mov	r4, #0
   1771c:	ldrb	r5, [r1, r4]
   17720:	tst	r5, #128	; 0x80
   17724:	bne	17738 <myencoding_detect_utf_8@@Base+0x48>
   17728:	add	r3, r3, #1
   1772c:	str	r3, [r0]
   17730:	add	r4, r4, #1
   17734:	b	177dc <myencoding_detect_utf_8@@Base+0xec>
   17738:	and	r6, r5, #224	; 0xe0
   1773c:	cmp	r6, #192	; 0xc0
   17740:	bne	17758 <myencoding_detect_utf_8@@Base+0x68>
   17744:	add	r5, r4, #2
   17748:	cmp	r5, r2
   1774c:	bcs	177f4 <myencoding_detect_utf_8@@Base+0x104>
   17750:	add	r4, r4, r1
   17754:	b	17784 <myencoding_detect_utf_8@@Base+0x94>
   17758:	and	r6, r5, #240	; 0xf0
   1775c:	cmp	r6, #224	; 0xe0
   17760:	bne	177a4 <myencoding_detect_utf_8@@Base+0xb4>
   17764:	add	r5, r4, #3
   17768:	cmp	r5, r2
   1776c:	bcs	177f4 <myencoding_detect_utf_8@@Base+0x104>
   17770:	add	r4, r4, r1
   17774:	ldrb	r6, [r4, #2]
   17778:	and	r6, r6, #192	; 0xc0
   1777c:	cmp	r6, #128	; 0x80
   17780:	bne	177d0 <myencoding_detect_utf_8@@Base+0xe0>
   17784:	ldrb	r4, [r4, #1]
   17788:	and	r4, r4, #192	; 0xc0
   1778c:	cmp	r4, #128	; 0x80
   17790:	bne	177d0 <myencoding_detect_utf_8@@Base+0xe0>
   17794:	add	ip, ip, #1
   17798:	mov	r4, r5
   1779c:	str	ip, [r0, #4]
   177a0:	b	177dc <myencoding_detect_utf_8@@Base+0xec>
   177a4:	and	r5, r5, #248	; 0xf8
   177a8:	cmp	r5, #240	; 0xf0
   177ac:	bne	177e8 <myencoding_detect_utf_8@@Base+0xf8>
   177b0:	add	r5, r4, #4
   177b4:	cmp	r5, r2
   177b8:	bcs	177f4 <myencoding_detect_utf_8@@Base+0x104>
   177bc:	add	r4, r4, r1
   177c0:	ldrb	r6, [r4, #3]
   177c4:	and	r6, r6, #192	; 0xc0
   177c8:	cmp	r6, #128	; 0x80
   177cc:	beq	17774 <myencoding_detect_utf_8@@Base+0x84>
   177d0:	add	lr, lr, #1
   177d4:	mov	r4, r5
   177d8:	str	lr, [r0, #8]
   177dc:	cmp	r4, r2
   177e0:	bcc	1771c <myencoding_detect_utf_8@@Base+0x2c>
   177e4:	b	177f4 <myencoding_detect_utf_8@@Base+0x104>
   177e8:	add	lr, lr, #1
   177ec:	str	lr, [r0, #8]
   177f0:	b	17730 <myencoding_detect_utf_8@@Base+0x40>
   177f4:	pop	{r4, r5, r6, sl, fp, pc}

000177f8 <myencoding_detect_utf_16@@Base>:
   177f8:	push	{r4, sl, fp, lr}
   177fc:	add	fp, sp, #8
   17800:	mov	lr, #0
   17804:	cmp	r2, #0
   17808:	str	lr, [r0]
   1780c:	str	lr, [r0, #4]
   17810:	str	lr, [r0, #8]
   17814:	popeq	{r4, sl, fp, pc}
   17818:	mov	ip, #0
   1781c:	mov	r3, #0
   17820:	ldrb	r4, [r1, r3]
   17824:	cmp	r4, #0
   17828:	bne	17870 <myencoding_detect_utf_16@@Base+0x78>
   1782c:	tst	r3, #1
   17830:	bne	17854 <myencoding_detect_utf_16@@Base+0x5c>
   17834:	add	r3, r3, #1
   17838:	ldrb	r4, [r1, r3]
   1783c:	sub	r4, r4, #32
   17840:	uxtb	r4, r4
   17844:	cmp	r4, #94	; 0x5e
   17848:	addls	lr, lr, #1
   1784c:	strls	lr, [r0, #8]
   17850:	b	17874 <myencoding_detect_utf_16@@Base+0x7c>
   17854:	add	r4, r3, r1
   17858:	ldrb	r4, [r4, #-1]
   1785c:	sub	r4, r4, #32
   17860:	uxtb	r4, r4
   17864:	cmp	r4, #94	; 0x5e
   17868:	addls	ip, ip, #1
   1786c:	strls	ip, [r0, #4]
   17870:	add	r3, r3, #1
   17874:	cmp	r3, r2
   17878:	bcc	17820 <myencoding_detect_utf_16@@Base+0x28>
   1787c:	pop	{r4, sl, fp, pc}

00017880 <myencoding_detect_bom@@Base>:
   17880:	mov	r3, r0
   17884:	cmp	r1, #3
   17888:	bcc	178bc <myencoding_detect_bom@@Base+0x3c>
   1788c:	ldrb	r1, [r3]
   17890:	cmp	r1, #239	; 0xef
   17894:	bne	178cc <myencoding_detect_bom@@Base+0x4c>
   17898:	ldrb	r1, [r3, #1]
   1789c:	mov	r0, #0
   178a0:	cmp	r1, #187	; 0xbb
   178a4:	bne	178ec <myencoding_detect_bom@@Base+0x6c>
   178a8:	ldrb	r1, [r3, #2]
   178ac:	cmp	r1, #191	; 0xbf
   178b0:	bne	178ec <myencoding_detect_bom@@Base+0x6c>
   178b4:	mov	r0, #0
   178b8:	b	17908 <myencoding_detect_bom@@Base+0x88>
   178bc:	mov	r0, #0
   178c0:	cmp	r1, #2
   178c4:	bne	178ec <myencoding_detect_bom@@Base+0x6c>
   178c8:	ldrb	r1, [r3]
   178cc:	mov	r0, #0
   178d0:	cmp	r1, #255	; 0xff
   178d4:	beq	178f0 <myencoding_detect_bom@@Base+0x70>
   178d8:	cmp	r1, #254	; 0xfe
   178dc:	bne	178ec <myencoding_detect_bom@@Base+0x6c>
   178e0:	ldrb	r1, [r3, #1]
   178e4:	cmp	r1, #255	; 0xff
   178e8:	beq	17904 <myencoding_detect_bom@@Base+0x84>
   178ec:	bx	lr
   178f0:	ldrb	r1, [r3, #1]
   178f4:	cmp	r1, #254	; 0xfe
   178f8:	bxne	lr
   178fc:	mov	r0, #4
   17900:	b	17908 <myencoding_detect_bom@@Base+0x88>
   17904:	mov	r0, #5
   17908:	str	r0, [r2]
   1790c:	mov	r0, #1
   17910:	bx	lr

00017914 <myencoding_detect_and_cut_bom@@Base>:
   17914:	push	{r4, r5, r6, r7, fp, lr}
   17918:	add	fp, sp, #16
   1791c:	mov	r5, r3
   17920:	mov	r7, r2
   17924:	mov	r4, r1
   17928:	mov	r6, r0
   1792c:	bl	114dc <myencoding_detect_bom@plt>
   17930:	mov	r1, r0
   17934:	mov	r0, #0
   17938:	cmp	r1, #0
   1793c:	beq	17970 <myencoding_detect_and_cut_bom@@Base+0x5c>
   17940:	ldr	r1, [r7]
   17944:	ldr	r0, [fp, #8]
   17948:	mov	r2, #2
   1794c:	cmp	r1, #0
   17950:	movweq	r2, #3
   17954:	add	r1, r6, r2
   17958:	str	r1, [r5]
   1795c:	mvn	r1, #1
   17960:	mvneq	r1, #2
   17964:	add	r1, r1, r4
   17968:	str	r1, [r0]
   1796c:	mov	r0, #1
   17970:	pop	{r4, r5, r6, r7, fp, pc}

00017974 <myencoding_detect_unicode@@Base>:
   17974:	push	{r4, r5, r6, sl, fp, lr}
   17978:	add	fp, sp, #16
   1797c:	sub	sp, sp, #16
   17980:	mov	r6, r0
   17984:	mov	r5, r1
   17988:	mov	r0, #0
   1798c:	mov	r4, r2
   17990:	str	r0, [r2]
   17994:	add	r0, sp, #4
   17998:	mov	r1, r6
   1799c:	mov	r2, r5
   179a0:	bl	1120c <myencoding_detect_utf_16@plt>
   179a4:	ldr	r0, [sp, #12]
   179a8:	cmp	r0, #0
   179ac:	beq	179cc <myencoding_detect_unicode@@Base+0x58>
   179b0:	cmp	r0, #3
   179b4:	bcc	179e0 <myencoding_detect_unicode@@Base+0x6c>
   179b8:	ldr	r0, [sp, #8]
   179bc:	cmp	r0, #0
   179c0:	bne	179e0 <myencoding_detect_unicode@@Base+0x6c>
   179c4:	mov	r0, #5
   179c8:	b	17a38 <myencoding_detect_unicode@@Base+0xc4>
   179cc:	ldr	r0, [sp, #8]
   179d0:	cmp	r0, #3
   179d4:	bcc	179e0 <myencoding_detect_unicode@@Base+0x6c>
   179d8:	mov	r0, #4
   179dc:	b	17a38 <myencoding_detect_unicode@@Base+0xc4>
   179e0:	add	r0, sp, #4
   179e4:	mov	r1, r6
   179e8:	mov	r2, r5
   179ec:	bl	120ac <myencoding_detect_utf_8@plt>
   179f0:	ldr	r1, [sp, #8]
   179f4:	ldr	r0, [sp, #12]
   179f8:	cmp	r1, #0
   179fc:	cmpne	r0, #0
   17a00:	bne	17a1c <myencoding_detect_unicode@@Base+0xa8>
   17a04:	cmp	r0, #0
   17a08:	beq	17a34 <myencoding_detect_unicode@@Base+0xc0>
   17a0c:	mov	r0, #0
   17a10:	cmp	r1, #0
   17a14:	beq	17a40 <myencoding_detect_unicode@@Base+0xcc>
   17a18:	b	17a34 <myencoding_detect_unicode@@Base+0xc0>
   17a1c:	mov	r2, #100	; 0x64
   17a20:	mul	r0, r0, r2
   17a24:	udiv	r1, r0, r1
   17a28:	mov	r0, #0
   17a2c:	cmp	r1, #10
   17a30:	bcs	17a40 <myencoding_detect_unicode@@Base+0xcc>
   17a34:	mov	r0, #0
   17a38:	str	r0, [r4]
   17a3c:	mov	r0, #1
   17a40:	sub	sp, fp, #16
   17a44:	pop	{r4, r5, r6, sl, fp, pc}

00017a48 <myencoding_detect_russian@@Base>:
   17a48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17a4c:	add	fp, sp, #28
   17a50:	sub	sp, sp, #28
   17a54:	movw	r8, #34463	; 0x869f
   17a58:	mov	r7, r0
   17a5c:	mov	r0, #0
   17a60:	mov	r6, r1
   17a64:	mov	sl, r2
   17a68:	movt	r8, #1
   17a6c:	str	r0, [r2]
   17a70:	mov	r0, #1000	; 0x3e8
   17a74:	mov	r1, r7
   17a78:	mov	r2, r6
   17a7c:	add	r5, r8, #1
   17a80:	stm	sp, {r0, r5}
   17a84:	add	r0, sp, #16
   17a88:	ldr	r3, [pc, #384]	; 17c10 <myencoding_detect_russian@@Base+0x1c8>
   17a8c:	add	r3, pc, r3
   17a90:	bl	1192c <myencoding_detect_by_trigram@plt>
   17a94:	ldr	r4, [sp, #20]
   17a98:	mov	r9, #1
   17a9c:	mov	r0, #32
   17aa0:	cmp	r4, r5
   17aa4:	bcs	17bf0 <myencoding_detect_russian@@Base+0x1a8>
   17aa8:	ldr	r1, [sp, #16]
   17aac:	cmp	r1, #49	; 0x31
   17ab0:	bhi	17bf0 <myencoding_detect_russian@@Base+0x1a8>
   17ab4:	cmp	r4, #0
   17ab8:	mov	r1, r7
   17abc:	mov	r2, r6
   17ac0:	movne	r0, #32
   17ac4:	strne	r0, [sl]
   17ac8:	mov	r0, #1000	; 0x3e8
   17acc:	stm	sp, {r0, r5}
   17ad0:	add	r0, sp, #8
   17ad4:	ldr	r3, [pc, #312]	; 17c14 <myencoding_detect_russian@@Base+0x1cc>
   17ad8:	add	r3, pc, r3
   17adc:	bl	1192c <myencoding_detect_by_trigram@plt>
   17ae0:	ldr	r1, [sp, #12]
   17ae4:	ldr	r2, [sp, #8]
   17ae8:	mov	r0, #27
   17aec:	cmp	r1, r8
   17af0:	str	r1, [sp, #20]
   17af4:	str	r2, [sp, #16]
   17af8:	cmpls	r2, #49	; 0x31
   17afc:	bhi	17bf0 <myencoding_detect_russian@@Base+0x1a8>
   17b00:	cmp	r4, r1
   17b04:	mov	r2, r6
   17b08:	movcc	r0, #27
   17b0c:	movcc	r4, r1
   17b10:	mov	r1, r7
   17b14:	strcc	r0, [sl]
   17b18:	mov	r0, #1000	; 0x3e8
   17b1c:	stm	sp, {r0, r5}
   17b20:	add	r0, sp, #8
   17b24:	ldr	r3, [pc, #236]	; 17c18 <myencoding_detect_russian@@Base+0x1d0>
   17b28:	add	r3, pc, r3
   17b2c:	bl	1192c <myencoding_detect_by_trigram@plt>
   17b30:	ldr	r1, [sp, #12]
   17b34:	ldr	r2, [sp, #8]
   17b38:	mov	r0, #22
   17b3c:	cmp	r1, r8
   17b40:	str	r1, [sp, #20]
   17b44:	str	r2, [sp, #16]
   17b48:	cmpls	r2, #49	; 0x31
   17b4c:	bhi	17bf0 <myencoding_detect_russian@@Base+0x1a8>
   17b50:	cmp	r4, r1
   17b54:	mov	r2, r6
   17b58:	movcc	r0, #22
   17b5c:	movcc	r4, r1
   17b60:	mov	r1, r7
   17b64:	strcc	r0, [sl]
   17b68:	mov	r0, #1000	; 0x3e8
   17b6c:	stm	sp, {r0, r5}
   17b70:	add	r0, sp, #8
   17b74:	ldr	r3, [pc, #160]	; 17c1c <myencoding_detect_russian@@Base+0x1d4>
   17b78:	add	r3, pc, r3
   17b7c:	bl	1192c <myencoding_detect_by_trigram@plt>
   17b80:	ldr	r1, [sp, #12]
   17b84:	ldr	r2, [sp, #8]
   17b88:	mov	r0, #41	; 0x29
   17b8c:	cmp	r1, r8
   17b90:	str	r1, [sp, #20]
   17b94:	str	r2, [sp, #16]
   17b98:	cmpls	r2, #49	; 0x31
   17b9c:	bhi	17bf0 <myencoding_detect_russian@@Base+0x1a8>
   17ba0:	cmp	r4, r1
   17ba4:	mov	r2, r6
   17ba8:	movcc	r0, #41	; 0x29
   17bac:	movcc	r4, r1
   17bb0:	mov	r1, r7
   17bb4:	strcc	r0, [sl]
   17bb8:	mov	r0, #1000	; 0x3e8
   17bbc:	stm	sp, {r0, r5}
   17bc0:	add	r0, sp, #8
   17bc4:	ldr	r3, [pc, #84]	; 17c20 <myencoding_detect_russian@@Base+0x1d8>
   17bc8:	add	r3, pc, r3
   17bcc:	bl	1192c <myencoding_detect_by_trigram@plt>
   17bd0:	ldr	r1, [sp, #12]
   17bd4:	ldr	r2, [sp, #8]
   17bd8:	mov	r0, #12
   17bdc:	cmp	r1, r8
   17be0:	str	r1, [sp, #20]
   17be4:	str	r2, [sp, #16]
   17be8:	cmpls	r2, #49	; 0x31
   17bec:	bls	17c00 <myencoding_detect_russian@@Base+0x1b8>
   17bf0:	str	r0, [sl]
   17bf4:	mov	r0, r9
   17bf8:	sub	sp, fp, #28
   17bfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17c00:	cmp	r4, r1
   17c04:	mov	r9, #0
   17c08:	strcc	r0, [sl]
   17c0c:	b	17bf4 <myencoding_detect_russian@@Base+0x1ac>
   17c10:	andeq	r6, r1, r4, asr #1
   17c14:	andeq	r7, r1, r8, ror #31
   17c18:	andeq	r9, r1, r8, lsl #30
   17c1c:	andeq	fp, r1, r8, lsr #28
   17c20:	andeq	sp, r1, r8, asr #26

00017c24 <myencoding_detect@@Base>:
   17c24:	push	{r4, r5, r6, sl, fp, lr}
   17c28:	add	fp, sp, #16
   17c2c:	mov	r6, r0
   17c30:	mov	r0, #0
   17c34:	mov	r4, r2
   17c38:	mov	r5, r1
   17c3c:	str	r0, [r2]
   17c40:	mov	r0, r6
   17c44:	bl	10fd8 <myencoding_detect_unicode@plt>
   17c48:	cmp	r0, #0
   17c4c:	beq	17c58 <myencoding_detect@@Base+0x34>
   17c50:	mov	r0, #1
   17c54:	pop	{r4, r5, r6, sl, fp, pc}
   17c58:	mov	r0, r6
   17c5c:	mov	r1, r5
   17c60:	mov	r2, r4
   17c64:	pop	{r4, r5, r6, sl, fp, lr}
   17c68:	b	17a48 <myencoding_detect_russian@@Base>

00017c6c <myencoding_name_entry_by_name@@Base>:
   17c6c:	push	{r4, r5, r6, r7, fp, lr}
   17c70:	add	fp, sp, #16
   17c74:	mov	r4, r1
   17c78:	mov	r5, r0
   17c7c:	ldrb	r1, [r0], r1
   17c80:	ldrb	r0, [r0, #-1]
   17c84:	ldr	r2, [pc, #164]	; 17d30 <myencoding_name_entry_by_name@@Base+0xc4>
   17c88:	ldr	r7, [pc, #164]	; 17d34 <myencoding_name_entry_by_name@@Base+0xc8>
   17c8c:	add	r2, pc, r2
   17c90:	add	r7, pc, r7
   17c94:	ldrb	r1, [r2, r1]
   17c98:	ldrb	r0, [r2, r0]
   17c9c:	mul	r1, r1, r4
   17ca0:	mul	r0, r1, r0
   17ca4:	movw	r1, #11575	; 0x2d37
   17ca8:	movt	r1, #14546	; 0x38d2
   17cac:	umull	r1, r2, r0, r1
   17cb0:	sub	r1, r0, r2
   17cb4:	add	r1, r2, r1, lsr #1
   17cb8:	movw	r2, #419	; 0x1a3
   17cbc:	lsr	r1, r1, #8
   17cc0:	mls	r0, r1, r2, r0
   17cc4:	add	r1, r0, #1
   17cc8:	rsb	r0, r1, r1, lsl #3
   17ccc:	add	r0, r7, r0, lsl #2
   17cd0:	ldr	r0, [r0, #8]
   17cd4:	cmp	r0, #0
   17cd8:	beq	17d24 <myencoding_name_entry_by_name@@Base+0xb8>
   17cdc:	rsb	r1, r1, r1, lsl #3
   17ce0:	add	r6, r7, r1, lsl #2
   17ce4:	ldr	r1, [r6, #12]
   17ce8:	cmp	r1, r4
   17cec:	bne	17d14 <myencoding_name_entry_by_name@@Base+0xa8>
   17cf0:	mov	r1, r5
   17cf4:	mov	r2, r4
   17cf8:	bl	11554 <mycore_strncasecmp@plt>
   17cfc:	cmp	r0, #0
   17d00:	beq	17d28 <myencoding_name_entry_by_name@@Base+0xbc>
   17d04:	ldr	r1, [r6, #20]
   17d08:	cmp	r1, #0
   17d0c:	bne	17d1c <myencoding_name_entry_by_name@@Base+0xb0>
   17d10:	b	17d24 <myencoding_name_entry_by_name@@Base+0xb8>
   17d14:	bhi	17d24 <myencoding_name_entry_by_name@@Base+0xb8>
   17d18:	ldr	r1, [r6, #20]
   17d1c:	rsb	r0, r1, r1, lsl #3
   17d20:	b	17ccc <myencoding_name_entry_by_name@@Base+0x60>
   17d24:	mov	r6, #0
   17d28:	mov	r0, r6
   17d2c:	pop	{r4, r5, r6, r7, fp, pc}
   17d30:	strdeq	pc, [r1], -r4
   17d34:	andeq	r4, pc, ip, asr #30

00017d38 <myencoding_by_name@@Base>:
   17d38:	push	{r4, sl, fp, lr}
   17d3c:	add	fp, sp, #8
   17d40:	mov	r4, r2
   17d44:	bl	1129c <myencoding_name_entry_by_name@plt>
   17d48:	cmp	r0, #0
   17d4c:	beq	17d68 <myencoding_by_name@@Base+0x30>
   17d50:	mov	r1, r0
   17d54:	cmp	r4, #0
   17d58:	mov	r0, #1
   17d5c:	ldrne	r1, [r1, #16]
   17d60:	strne	r1, [r4]
   17d64:	pop	{r4, sl, fp, pc}
   17d68:	mov	r0, #0
   17d6c:	pop	{r4, sl, fp, pc}

00017d70 <myencoding_name_by_id@@Base>:
   17d70:	cmp	r0, #42	; 0x2a
   17d74:	bcc	17d8c <myencoding_name_by_id@@Base+0x1c>
   17d78:	mov	r0, #0
   17d7c:	cmp	r1, #0
   17d80:	strne	r0, [r1]
   17d84:	bxne	lr
   17d88:	bx	lr
   17d8c:	ldr	r2, [pc, #28]	; 17db0 <myencoding_name_by_id@@Base+0x40>
   17d90:	cmp	r1, #0
   17d94:	add	r2, pc, r2
   17d98:	beq	17da8 <myencoding_name_by_id@@Base+0x38>
   17d9c:	add	r3, r2, r0, lsl #3
   17da0:	ldr	r3, [r3, #4]
   17da4:	str	r3, [r1]
   17da8:	ldr	r0, [r2, r0, lsl #3]
   17dac:	bx	lr
   17db0:	andeq	r8, pc, r0, asr r4	; <UNPREDICTABLE>

00017db4 <myencoding_extracting_character_encoding_from_charset@@Base>:
   17db4:	push	{fp, lr}
   17db8:	mov	fp, sp
   17dbc:	sub	sp, sp, #8
   17dc0:	mov	r3, #0
   17dc4:	str	r3, [sp]
   17dc8:	mov	r3, #0
   17dcc:	bl	11a1c <myencoding_extracting_character_encoding_from_charset_with_found@plt>
   17dd0:	mov	sp, fp
   17dd4:	pop	{fp, pc}

00017dd8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base>:
   17dd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ddc:	add	fp, sp, #28
   17de0:	sub	sp, sp, #12
   17de4:	mov	sl, r1
   17de8:	ldr	r1, [fp, #8]
   17dec:	mov	r7, r0
   17df0:	mov	r0, #2
   17df4:	cmp	r3, #0
   17df8:	mov	r6, #0
   17dfc:	str	r0, [r2]
   17e00:	movne	r0, #0
   17e04:	strne	r0, [r3]
   17e08:	cmp	r1, #0
   17e0c:	movne	r0, #0
   17e10:	strne	r0, [r1]
   17e14:	cmp	sl, #8
   17e18:	bcc	17ef0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x118>
   17e1c:	str	r3, [sp, #4]
   17e20:	str	r2, [sp, #8]
   17e24:	movw	r9, #27
   17e28:	mov	r4, #0
   17e2c:	mov	r5, #7
   17e30:	mov	r8, #1
   17e34:	ldr	r6, [pc, #636]	; 180b8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2e0>
   17e38:	movt	r9, #128	; 0x80
   17e3c:	add	r6, pc, r6
   17e40:	add	r1, r7, r4
   17e44:	mov	r0, r6
   17e48:	bl	11068 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   17e4c:	cmp	r0, #0
   17e50:	beq	17e94 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xbc>
   17e54:	cmp	r5, sl
   17e58:	bcs	17e84 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xac>
   17e5c:	ldrb	r0, [r7, r5]
   17e60:	sub	r0, r0, #9
   17e64:	cmp	r0, #23
   17e68:	bhi	17e84 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xac>
   17e6c:	tst	r9, r8, lsl r0
   17e70:	beq	17e84 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xac>
   17e74:	add	r5, r5, #1
   17e78:	cmp	sl, r5
   17e7c:	bne	17e5c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x84>
   17e80:	mov	r5, sl
   17e84:	ldrb	r0, [r7, r5]
   17e88:	cmp	r0, #61	; 0x3d
   17e8c:	beq	17eac <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xd4>
   17e90:	mov	r4, r5
   17e94:	add	r5, r4, #8
   17e98:	add	r4, r4, #1
   17e9c:	cmp	r5, sl
   17ea0:	bcc	17e40 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x68>
   17ea4:	mov	r6, #0
   17ea8:	b	17ef0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x118>
   17eac:	add	r0, r5, #1
   17eb0:	mov	r6, #0
   17eb4:	cmp	r0, sl
   17eb8:	bcs	17ef0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x118>
   17ebc:	sub	r3, sl, #1
   17ec0:	sub	ip, sl, #2
   17ec4:	mov	r4, #1
   17ec8:	add	r0, r7, r5
   17ecc:	ldrb	r2, [r0, #1]
   17ed0:	sub	r1, r2, #9
   17ed4:	cmp	r1, #30
   17ed8:	bhi	17f9c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1c4>
   17edc:	tst	r9, r4, lsl r1
   17ee0:	beq	17efc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x124>
   17ee4:	add	r5, r5, #1
   17ee8:	cmp	r3, r5
   17eec:	bne	17ec8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xf0>
   17ef0:	mov	r0, r6
   17ef4:	sub	sp, fp, #28
   17ef8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17efc:	cmp	r1, #25
   17f00:	beq	17f54 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x17c>
   17f04:	cmp	r1, #30
   17f08:	bne	17f9c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1c4>
   17f0c:	ldr	r8, [sp, #8]
   17f10:	ldr	lr, [fp, #8]
   17f14:	ldr	r4, [sp, #4]
   17f18:	add	r1, r5, #2
   17f1c:	cmp	r1, sl
   17f20:	bcs	17ef0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x118>
   17f24:	sub	r2, ip, r5
   17f28:	mov	r1, #0
   17f2c:	mov	r6, #0
   17f30:	add	r3, r7, r1
   17f34:	add	r3, r3, r5
   17f38:	ldrb	r3, [r3, #2]
   17f3c:	cmp	r3, #39	; 0x27
   17f40:	beq	17fdc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x204>
   17f44:	add	r1, r1, #1
   17f48:	cmp	r2, r1
   17f4c:	bne	17f30 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x158>
   17f50:	b	17ef0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x118>
   17f54:	ldr	r8, [sp, #8]
   17f58:	ldr	lr, [fp, #8]
   17f5c:	ldr	r4, [sp, #4]
   17f60:	add	r1, r5, #2
   17f64:	cmp	r1, sl
   17f68:	bcs	17ef0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x118>
   17f6c:	sub	r2, ip, r5
   17f70:	mov	r1, #0
   17f74:	mov	r6, #0
   17f78:	add	r3, r7, r1
   17f7c:	add	r3, r3, r5
   17f80:	ldrb	r3, [r3, #2]
   17f84:	cmp	r3, #34	; 0x22
   17f88:	beq	17fdc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x204>
   17f8c:	add	r1, r1, #1
   17f90:	cmp	r2, r1
   17f94:	bne	17f78 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1a0>
   17f98:	b	17ef0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x118>
   17f9c:	add	r0, r5, #1
   17fa0:	cmp	r0, sl
   17fa4:	bcs	17ef0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x118>
   17fa8:	mvn	r0, #8
   17fac:	mov	r3, #1
   17fb0:	uxtab	r1, r0, r2
   17fb4:	cmp	r1, #23
   17fb8:	bhi	18004 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x22c>
   17fbc:	tst	r9, r3, lsl r1
   17fc0:	beq	18004 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x22c>
   17fc4:	cmp	ip, r5
   17fc8:	beq	17ef0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x118>
   17fcc:	add	r1, r7, r5
   17fd0:	add	r5, r5, #1
   17fd4:	ldrb	r2, [r1, #2]
   17fd8:	b	17fb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1d8>
   17fdc:	cmp	r4, #0
   17fe0:	addne	r2, r0, #2
   17fe4:	add	r0, r0, #2
   17fe8:	strne	r2, [r4]
   17fec:	cmp	lr, #0
   17ff0:	strne	r1, [lr]
   17ff4:	bl	1129c <myencoding_name_entry_by_name@plt>
   17ff8:	cmp	r0, #0
   17ffc:	bne	180a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2cc>
   18000:	b	17ea4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xcc>
   18004:	add	r7, r7, r5
   18008:	add	r3, r5, #1
   1800c:	add	r0, r7, #1
   18010:	cmp	r3, sl
   18014:	bcs	18068 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x290>
   18018:	ldr	r4, [fp, #8]
   1801c:	ldr	r8, [sp, #8]
   18020:	uxtb	r1, r2
   18024:	cmp	r1, #59	; 0x3b
   18028:	mov	lr, r4
   1802c:	ldr	r4, [sp, #4]
   18030:	beq	18080 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2a8>
   18034:	sub	r1, ip, r5
   18038:	add	r3, r7, #2
   1803c:	mov	r2, #0
   18040:	cmp	r1, #0
   18044:	beq	1807c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2a4>
   18048:	ldrb	r7, [r3], #1
   1804c:	sub	r1, r1, #1
   18050:	sub	r2, r2, #1
   18054:	cmp	r7, #59	; 0x3b
   18058:	bne	18040 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x268>
   1805c:	sub	r1, r5, r2
   18060:	add	r3, r1, #1
   18064:	b	18080 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2a8>
   18068:	ldr	r4, [fp, #8]
   1806c:	ldr	r8, [sp, #8]
   18070:	mov	lr, r4
   18074:	ldr	r4, [sp, #4]
   18078:	b	18080 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2a8>
   1807c:	mov	r3, sl
   18080:	mvn	r1, r5
   18084:	cmp	r4, #0
   18088:	strne	r0, [r4]
   1808c:	add	r1, r1, r3
   18090:	cmp	lr, #0
   18094:	strne	r1, [lr]
   18098:	bl	1129c <myencoding_name_entry_by_name@plt>
   1809c:	cmp	r0, #0
   180a0:	beq	17ef0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x118>
   180a4:	cmp	r8, #0
   180a8:	mov	r6, #1
   180ac:	ldrne	r0, [r0, #16]
   180b0:	strne	r0, [r8]
   180b4:	b	17ef0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x118>
   180b8:	andeq	pc, r1, r4, asr #24

000180bc <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base>:
   180bc:	push	{r4, r5, r6, sl, fp, lr}
   180c0:	add	fp, sp, #16
   180c4:	mov	ip, r0
   180c8:	ldr	lr, [r1]
   180cc:	ldr	r0, [r3]
   180d0:	sub	r0, lr, r0
   180d4:	cmp	lr, r2
   180d8:	str	r0, [r3, #4]
   180dc:	mov	r0, #0
   180e0:	bcs	18134 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x78>
   180e4:	movw	r4, #27
   180e8:	mov	r3, #1
   180ec:	movt	r4, #128	; 0x80
   180f0:	ldrb	r5, [ip, lr]
   180f4:	sub	r6, r5, #9
   180f8:	cmp	r6, #23
   180fc:	bhi	18118 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x5c>
   18100:	tst	r4, r3, lsl r6
   18104:	beq	18118 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x5c>
   18108:	add	lr, lr, #1
   1810c:	cmp	r2, lr
   18110:	bne	180f0 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x34>
   18114:	b	18130 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x74>
   18118:	cmp	r5, #47	; 0x2f
   1811c:	beq	18108 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x4c>
   18120:	cmp	r5, #61	; 0x3d
   18124:	addeq	lr, lr, #1
   18128:	moveq	r0, #1
   1812c:	b	18134 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x78>
   18130:	mov	lr, r2
   18134:	str	lr, [r1]
   18138:	pop	{r4, r5, r6, sl, fp, pc}

0001813c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base>:
   1813c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18140:	add	fp, sp, #24
   18144:	ldr	r8, [fp, #8]
   18148:	mov	lr, r1
   1814c:	cmp	r1, r2
   18150:	bcs	18194 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x58>
   18154:	movw	ip, #27
   18158:	add	r1, r0, lr
   1815c:	rsb	r5, r2, #0
   18160:	mov	r6, #1
   18164:	movt	ip, #128	; 0x80
   18168:	ldrb	r7, [r0, lr]
   1816c:	sub	r4, r7, #9
   18170:	cmp	r4, #30
   18174:	bhi	181f4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xb8>
   18178:	tst	ip, r6, lsl r4
   1817c:	beq	181a4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x68>
   18180:	add	lr, lr, #1
   18184:	add	r1, r1, #1
   18188:	adds	r4, r5, lr
   1818c:	bne	18168 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x2c>
   18190:	mov	lr, r2
   18194:	mov	r0, #1
   18198:	strb	r0, [r8]
   1819c:	mov	r0, lr
   181a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   181a4:	cmp	r4, #25
   181a8:	beq	18208 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xcc>
   181ac:	cmp	r4, #30
   181b0:	bne	181f4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xb8>
   181b4:	add	ip, lr, #1
   181b8:	cmp	ip, r2
   181bc:	str	ip, [r3, #8]
   181c0:	bcs	18298 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x15c>
   181c4:	sub	r4, lr, r2
   181c8:	mov	r1, #0
   181cc:	add	r5, r0, r1
   181d0:	add	r5, r5, lr
   181d4:	ldrb	r5, [r5, #1]
   181d8:	cmp	r5, #39	; 0x27
   181dc:	beq	182a0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x164>
   181e0:	add	r5, r4, r1
   181e4:	add	r1, r1, #1
   181e8:	cmn	r5, #2
   181ec:	bne	181cc <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x90>
   181f0:	b	18290 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x154>
   181f4:	cmp	r7, #62	; 0x3e
   181f8:	bne	18248 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x10c>
   181fc:	mov	r0, #1
   18200:	add	lr, lr, #1
   18204:	b	18198 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x5c>
   18208:	add	ip, lr, #1
   1820c:	cmp	ip, r2
   18210:	str	ip, [r3, #8]
   18214:	bcs	18298 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x15c>
   18218:	sub	r4, lr, r2
   1821c:	mov	r1, #0
   18220:	add	r5, r0, r1
   18224:	add	r5, r5, lr
   18228:	ldrb	r5, [r5, #1]
   1822c:	cmp	r5, #34	; 0x22
   18230:	beq	182a0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x164>
   18234:	add	r5, r4, r1
   18238:	add	r1, r1, #1
   1823c:	cmn	r5, #2
   18240:	bne	18220 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xe4>
   18244:	b	18290 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x154>
   18248:	cmp	lr, r2
   1824c:	str	lr, [r3, #8]
   18250:	bcs	182b0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x174>
   18254:	sub	r4, lr, r2
   18258:	mov	r0, #0
   1825c:	mov	r5, #1
   18260:	ldrb	r6, [r1, -r0]
   18264:	sub	r7, r6, #9
   18268:	cmp	r7, #23
   1826c:	bhi	18278 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x13c>
   18270:	tst	ip, r5, lsl r7
   18274:	bne	182c0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x184>
   18278:	cmp	r6, #62	; 0x3e
   1827c:	beq	182c0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x184>
   18280:	sub	r0, r0, #1
   18284:	cmp	r4, r0
   18288:	bne	18260 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x124>
   1828c:	mov	ip, lr
   18290:	mov	lr, r2
   18294:	b	182b4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x178>
   18298:	mov	lr, ip
   1829c:	b	182b4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x178>
   182a0:	add	r0, lr, r1
   182a4:	str	r1, [r3, #12]
   182a8:	add	lr, r0, #2
   182ac:	b	1819c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x60>
   182b0:	mov	ip, lr
   182b4:	sub	r0, lr, ip
   182b8:	str	r0, [r3, #12]
   182bc:	b	1819c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x60>
   182c0:	rsb	r1, r0, #0
   182c4:	sub	r0, lr, r0
   182c8:	add	lr, r0, #1
   182cc:	str	r1, [r3, #12]
   182d0:	b	1819c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x60>

000182d4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base>:
   182d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   182d8:	add	fp, sp, #24
   182dc:	sub	sp, sp, #8
   182e0:	vmov.i32	q8, #0	; 0x00000000
   182e4:	mov	r6, r0
   182e8:	mov	r0, r3
   182ec:	mov	r4, r2
   182f0:	str	r1, [sp, #4]
   182f4:	mov	r2, #0
   182f8:	cmp	r1, r4
   182fc:	vst1.32	{d16-d17}, [r0]!
   18300:	str	r2, [r0]
   18304:	ldr	r8, [fp, #8]
   18308:	bcs	18368 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x94>
   1830c:	movw	r0, #27
   18310:	mov	r9, r3
   18314:	rsb	r2, r4, #0
   18318:	mov	r3, #1
   1831c:	movt	r0, #128	; 0x80
   18320:	ldrb	r7, [r6, r1]
   18324:	sub	r5, r7, #9
   18328:	cmp	r5, #23
   1832c:	bhi	18348 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x74>
   18330:	tst	r0, r3, lsl r5
   18334:	beq	18348 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x74>
   18338:	add	r1, r1, #1
   1833c:	adds	r7, r2, r1
   18340:	bne	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x4c>
   18344:	b	18370 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x9c>
   18348:	cmp	r7, #47	; 0x2f
   1834c:	beq	18338 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x64>
   18350:	cmp	r7, #62	; 0x3e
   18354:	str	r1, [sp, #4]
   18358:	bne	18388 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xb4>
   1835c:	mov	r0, #1
   18360:	add	r4, r1, #1
   18364:	b	18378 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xa4>
   18368:	mov	r4, r1
   1836c:	b	18374 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xa0>
   18370:	str	r4, [sp, #4]
   18374:	mov	r0, #1
   18378:	strb	r0, [r8]
   1837c:	mov	r0, r4
   18380:	sub	sp, fp, #24
   18384:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18388:	cmp	r1, r4
   1838c:	str	r1, [r9]
   18390:	bcs	18424 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x150>
   18394:	sub	r3, r1, r4
   18398:	mov	r2, #0
   1839c:	mov	ip, #1
   183a0:	add	r7, r6, r2
   183a4:	ldrb	r7, [r7, r1]
   183a8:	cmp	r7, #46	; 0x2e
   183ac:	bgt	183c8 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xf4>
   183b0:	sub	r7, r7, #9
   183b4:	cmp	r7, #23
   183b8:	bhi	183dc <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x108>
   183bc:	tst	r0, ip, lsl r7
   183c0:	beq	183dc <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x108>
   183c4:	b	18410 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x13c>
   183c8:	cmp	r7, #47	; 0x2f
   183cc:	cmpne	r7, #62	; 0x3e
   183d0:	beq	183f4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x120>
   183d4:	cmp	r7, #61	; 0x3d
   183d8:	beq	1846c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x198>
   183dc:	add	r7, r3, r2
   183e0:	add	r2, r2, #1
   183e4:	cmn	r7, #1
   183e8:	bne	183a0 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xcc>
   183ec:	str	r4, [sp, #4]
   183f0:	b	18424 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x150>
   183f4:	add	r0, r1, r2
   183f8:	mov	r1, #1
   183fc:	add	r4, r0, #1
   18400:	str	r0, [sp, #4]
   18404:	strb	r1, [r8]
   18408:	str	r2, [r9, #4]
   1840c:	b	1837c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xa8>
   18410:	add	r0, r1, r2
   18414:	str	r0, [sp, #4]
   18418:	add	r0, r1, r2
   1841c:	add	r0, r0, #1
   18420:	str	r0, [sp, #4]
   18424:	add	r1, sp, #4
   18428:	mov	r0, r6
   1842c:	mov	r2, r4
   18430:	mov	r3, r9
   18434:	bl	11734 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@plt>
   18438:	cmp	r0, #0
   1843c:	beq	1845c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x188>
   18440:	ldr	r1, [sp, #4]
   18444:	mov	r0, r6
   18448:	mov	r2, r4
   1844c:	mov	r3, r9
   18450:	sub	sp, fp, #24
   18454:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   18458:	b	1813c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base>
   1845c:	mov	r0, #1
   18460:	strb	r0, [r8]
   18464:	ldr	r4, [sp, #4]
   18468:	b	1837c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xa8>
   1846c:	add	r0, r1, r2
   18470:	cmp	r2, #1
   18474:	str	r0, [sp, #4]
   18478:	beq	18418 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x144>
   1847c:	add	r1, r0, #1
   18480:	str	r2, [r9, #4]
   18484:	str	r1, [sp, #4]
   18488:	b	18444 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x170>

0001848c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base>:
   1848c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18490:	add	fp, sp, #28
   18494:	sub	sp, sp, #52	; 0x34
   18498:	ldr	r4, [fp, #12]
   1849c:	ldr	sl, [fp, #8]
   184a0:	mov	r6, r0
   184a4:	mov	r0, #0
   184a8:	mov	r9, r1
   184ac:	mov	r1, #0
   184b0:	mov	r5, r2
   184b4:	add	r7, sp, #31
   184b8:	add	r8, sp, #32
   184bc:	str	r3, [sp, #12]
   184c0:	str	r2, [sp, #20]
   184c4:	str	r0, [sp, #8]
   184c8:	mov	r0, #0
   184cc:	strb	r1, [sp, #31]
   184d0:	str	r0, [sp, #16]
   184d4:	mov	r0, #0
   184d8:	str	r0, [sp, #24]
   184dc:	ldr	r1, [r9]
   184e0:	cmp	r1, r5
   184e4:	bcs	18688 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1fc>
   184e8:	mov	r0, r6
   184ec:	mov	r2, r5
   184f0:	mov	r3, r8
   184f4:	str	r7, [sp]
   184f8:	bl	11de8 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   184fc:	str	r0, [r9]
   18500:	ldr	r0, [sp, #36]	; 0x24
   18504:	cmp	r0, #7
   18508:	beq	18578 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xec>
   1850c:	cmp	r0, #10
   18510:	bne	1867c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1f0>
   18514:	ldr	r0, [sp, #32]
   18518:	add	r1, r6, r0
   1851c:	ldr	r0, [pc, #460]	; 186f0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x264>
   18520:	add	r0, pc, r0
   18524:	bl	11068 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   18528:	ldr	r1, [sp, #24]
   1852c:	tst	r1, #1
   18530:	bne	1867c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1f0>
   18534:	cmp	r0, #0
   18538:	beq	1867c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1f0>
   1853c:	ldr	r0, [sp, #24]
   18540:	orr	r0, r0, #1
   18544:	str	r0, [sp, #24]
   18548:	ldr	r0, [sp, #44]	; 0x2c
   1854c:	cmp	r0, #12
   18550:	bne	1867c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1f0>
   18554:	ldr	r0, [sp, #40]	; 0x28
   18558:	add	r1, r6, r0
   1855c:	ldr	r0, [pc, #400]	; 186f4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x268>
   18560:	add	r0, pc, r0
   18564:	bl	11068 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   18568:	ldr	r1, [sp, #8]
   1856c:	orr	r1, r1, r0
   18570:	str	r1, [sp, #8]
   18574:	b	1867c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1f0>
   18578:	ldr	r0, [sp, #32]
   1857c:	mov	r5, r8
   18580:	mov	r8, sl
   18584:	add	sl, r6, r0
   18588:	ldr	r0, [pc, #360]	; 186f8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x26c>
   1858c:	mov	r1, sl
   18590:	add	r0, pc, r0
   18594:	bl	11068 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   18598:	cmp	r0, #0
   1859c:	beq	185e4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x158>
   185a0:	ldr	sl, [sp, #24]
   185a4:	tst	sl, #2
   185a8:	bne	18670 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1e4>
   185ac:	ldr	r0, [sp, #40]	; 0x28
   185b0:	ldr	r1, [sp, #44]	; 0x2c
   185b4:	ldr	r2, [sp, #12]
   185b8:	mov	r3, r8
   185bc:	str	r4, [sp]
   185c0:	add	r0, r6, r0
   185c4:	bl	11a1c <myencoding_extracting_character_encoding_from_charset_with_found@plt>
   185c8:	cmp	r0, #0
   185cc:	ldr	r0, [sp, #16]
   185d0:	orr	sl, sl, #2
   185d4:	movwne	r0, #2
   185d8:	str	sl, [sp, #24]
   185dc:	str	r0, [sp, #16]
   185e0:	b	18670 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1e4>
   185e4:	ldr	r0, [pc, #272]	; 186fc <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x270>
   185e8:	mov	r1, sl
   185ec:	add	r0, pc, r0
   185f0:	bl	11068 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   185f4:	ldr	r1, [sp, #24]
   185f8:	tst	r1, #4
   185fc:	bne	18670 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1e4>
   18600:	cmp	r0, #0
   18604:	beq	18670 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1e4>
   18608:	cmp	r8, #0
   1860c:	mov	sl, r8
   18610:	mov	r8, r5
   18614:	ldr	r5, [sp, #20]
   18618:	ldrne	r0, [sp, #40]	; 0x28
   1861c:	addne	r0, r6, r0
   18620:	strne	r0, [sl]
   18624:	ldr	r0, [sp, #24]
   18628:	cmp	r4, #0
   1862c:	ldr	r1, [sp, #44]	; 0x2c
   18630:	orr	r0, r0, #4
   18634:	strne	r1, [r4]
   18638:	str	r0, [sp, #24]
   1863c:	ldr	r0, [sp, #40]	; 0x28
   18640:	add	r0, r6, r0
   18644:	bl	1129c <myencoding_name_entry_by_name@plt>
   18648:	mov	r1, #1
   1864c:	str	r1, [sp, #16]
   18650:	ldr	r1, [sp, #12]
   18654:	cmp	r1, #0
   18658:	cmpne	r0, #0
   1865c:	beq	1867c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1f0>
   18660:	ldr	r0, [r0, #16]
   18664:	ldr	r1, [sp, #12]
   18668:	str	r0, [r1]
   1866c:	b	1867c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1f0>
   18670:	mov	sl, r8
   18674:	mov	r8, r5
   18678:	ldr	r5, [sp, #20]
   1867c:	ldrb	r0, [sp, #31]
   18680:	cmp	r0, #0
   18684:	beq	184dc <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x50>
   18688:	ldr	r2, [sp, #16]
   1868c:	mov	r0, #0
   18690:	mov	r1, #2
   18694:	cmp	r2, #0
   18698:	beq	186e0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x254>
   1869c:	cmp	r2, #2
   186a0:	bne	186b0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x224>
   186a4:	ldr	r2, [sp, #8]
   186a8:	tst	r2, #1
   186ac:	beq	186e0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x254>
   186b0:	ldr	r0, [sp, #12]
   186b4:	ldr	r2, [r0]
   186b8:	bic	r0, r2, #1
   186bc:	cmp	r0, #4
   186c0:	bne	186d0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x244>
   186c4:	mov	r0, #1
   186c8:	mov	r1, #0
   186cc:	b	186e0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x254>
   186d0:	mov	r0, #1
   186d4:	mov	r1, #33	; 0x21
   186d8:	cmp	r2, #6
   186dc:	bne	186e8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x25c>
   186e0:	ldr	r2, [sp, #12]
   186e4:	str	r1, [r2]
   186e8:	sub	sp, fp, #28
   186ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   186f0:	andeq	pc, r1, r8, ror #10
   186f4:	andeq	pc, r1, r3, lsr r5	; <UNPREDICTABLE>
   186f8:	andeq	pc, r1, r0, lsl r5	; <UNPREDICTABLE>
   186fc:	muleq	r1, r4, r4

00018700 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base>:
   18700:	push	{r4, r5, r6, r7, fp, lr}
   18704:	add	fp, sp, #16
   18708:	sub	sp, sp, #32
   1870c:	cmp	r1, r2
   18710:	bcs	187a0 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xa0>
   18714:	mov	r4, r2
   18718:	movw	r2, #27
   1871c:	mov	r5, r0
   18720:	mov	r0, #1
   18724:	movt	r2, #128	; 0x80
   18728:	ldrb	r3, [r5, r1]
   1872c:	sub	r7, r3, #9
   18730:	cmp	r7, #23
   18734:	bhi	18754 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x54>
   18738:	tst	r2, r0, lsl r7
   1873c:	beq	18754 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x54>
   18740:	add	r1, r1, #1
   18744:	cmp	r4, r1
   18748:	bne	18728 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x28>
   1874c:	mov	r1, r4
   18750:	b	187a0 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xa0>
   18754:	cmp	r3, #62	; 0x3e
   18758:	bne	18764 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x64>
   1875c:	add	r1, r1, #1
   18760:	b	187a0 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xa0>
   18764:	mov	r0, #0
   18768:	add	r7, sp, #11
   1876c:	add	r6, sp, #12
   18770:	strb	r0, [sp, #11]
   18774:	cmp	r1, r4
   18778:	bcs	187a0 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xa0>
   1877c:	mov	r0, r5
   18780:	mov	r2, r4
   18784:	mov	r3, r6
   18788:	str	r7, [sp]
   1878c:	bl	11de8 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   18790:	mov	r1, r0
   18794:	ldrb	r0, [sp, #11]
   18798:	cmp	r0, #0
   1879c:	beq	18774 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x74>
   187a0:	mov	r0, r1
   187a4:	sub	sp, fp, #16
   187a8:	pop	{r4, r5, r6, r7, fp, pc}

000187ac <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base>:
   187ac:	push	{fp, lr}
   187b0:	mov	fp, sp
   187b4:	ldrb	r3, [r0, r1]
   187b8:	cmp	r3, #33	; 0x21
   187bc:	beq	1881c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x70>
   187c0:	cmp	r3, #63	; 0x3f
   187c4:	beq	188b0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x104>
   187c8:	cmp	r3, #47	; 0x2f
   187cc:	bne	187f8 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x4c>
   187d0:	add	lr, r1, #1
   187d4:	cmp	lr, r2
   187d8:	bcs	188cc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x120>
   187dc:	ldrb	ip, [r0, lr]
   187e0:	ldr	r1, [pc, #244]	; 188dc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x130>
   187e4:	add	r1, pc, r1
   187e8:	ldrb	r1, [r1, ip]
   187ec:	cmp	r1, #1
   187f0:	bne	18800 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x54>
   187f4:	mov	r1, lr
   187f8:	pop	{fp, lr}
   187fc:	b	18700 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base>
   18800:	cmp	lr, r2
   18804:	bcs	188cc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x120>
   18808:	ldrb	r1, [r0, lr]
   1880c:	add	lr, lr, #1
   18810:	cmp	r1, #62	; 0x3e
   18814:	beq	18800 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x54>
   18818:	b	188cc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x120>
   1881c:	add	r3, r1, #3
   18820:	add	lr, r1, #1
   18824:	cmp	r3, r2
   18828:	bcs	18894 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xe8>
   1882c:	ldrb	r3, [r0, lr]
   18830:	cmp	r3, #45	; 0x2d
   18834:	bne	18894 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xe8>
   18838:	add	r3, r1, r0
   1883c:	ldrb	r3, [r3, #2]
   18840:	cmp	r3, #45	; 0x2d
   18844:	bne	18894 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xe8>
   18848:	cmp	lr, r2
   1884c:	bcs	188cc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x120>
   18850:	add	lr, r1, #2
   18854:	mov	r1, #45	; 0x2d
   18858:	uxtb	r1, r1
   1885c:	cmp	r1, #62	; 0x3e
   18860:	beq	18880 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xd4>
   18864:	add	r1, r0, lr
   18868:	ldrb	r3, [r1, #-2]
   1886c:	cmp	r3, #45	; 0x2d
   18870:	bne	18880 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xd4>
   18874:	ldrb	r1, [r1, #-3]
   18878:	cmp	r1, #45	; 0x2d
   1887c:	beq	188cc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x120>
   18880:	cmp	r2, lr
   18884:	beq	188d4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x128>
   18888:	ldrb	r1, [r0, lr]
   1888c:	add	lr, lr, #1
   18890:	b	18858 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xac>
   18894:	cmp	lr, r2
   18898:	bcs	188cc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x120>
   1889c:	ldrb	r1, [r0, lr]
   188a0:	add	lr, lr, #1
   188a4:	cmp	r1, #62	; 0x3e
   188a8:	beq	18894 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xe8>
   188ac:	b	188cc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x120>
   188b0:	add	lr, r1, #1
   188b4:	cmp	lr, r2
   188b8:	bcs	188cc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x120>
   188bc:	ldrb	r1, [r0, lr]
   188c0:	add	lr, lr, #1
   188c4:	cmp	r1, #62	; 0x3e
   188c8:	beq	188b4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x108>
   188cc:	mov	r0, lr
   188d0:	pop	{fp, pc}
   188d4:	mov	lr, r2
   188d8:	b	188cc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x120>
   188dc:	muleq	r1, ip, r1

000188e0 <myencoding_prescan_stream_to_determine_encoding@@Base>:
   188e0:	mov	r2, #0
   188e4:	mov	r3, #0
   188e8:	b	188ec <myencoding_prescan_stream_to_determine_encoding_with_found@@Base>

000188ec <myencoding_prescan_stream_to_determine_encoding_with_found@@Base>:
   188ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   188f0:	add	fp, sp, #28
   188f4:	sub	sp, sp, #20
   188f8:	mov	r7, r0
   188fc:	mov	r0, #2
   18900:	cmp	r2, #0
   18904:	mov	r4, r3
   18908:	mov	r5, r2
   1890c:	mov	r6, r1
   18910:	mov	r9, #0
   18914:	str	r0, [sp, #16]
   18918:	movne	r0, #0
   1891c:	strne	r0, [r5]
   18920:	cmp	r4, #0
   18924:	movne	r0, #0
   18928:	strne	r0, [r4]
   1892c:	cmp	r6, #0
   18930:	str	r9, [sp, #12]
   18934:	beq	18a28 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x13c>
   18938:	ldrb	r0, [r7, r9]
   1893c:	mov	sl, r9
   18940:	cmp	r0, #60	; 0x3c
   18944:	bne	189e0 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xf4>
   18948:	add	r8, sl, #5
   1894c:	cmp	r8, r6
   18950:	bcs	18a20 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x134>
   18954:	add	r9, sl, #1
   18958:	mov	r1, r7
   1895c:	str	r9, [sp, #12]
   18960:	ldrb	r0, [r1, r9]!
   18964:	orr	r0, r0, #32
   18968:	cmp	r0, #109	; 0x6d
   1896c:	bne	189ec <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x100>
   18970:	ldr	r0, [pc, #188]	; 18a34 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x148>
   18974:	add	r0, pc, r0
   18978:	bl	11068 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   1897c:	cmp	r0, #0
   18980:	beq	18a04 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x118>
   18984:	str	r8, [sp, #12]
   18988:	ldrb	r0, [r7, r8]
   1898c:	sub	r1, r0, #9
   18990:	cmp	r1, #23
   18994:	bhi	18a10 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x124>
   18998:	movw	r3, #27
   1899c:	mov	r2, #1
   189a0:	movt	r3, #128	; 0x80
   189a4:	tst	r3, r2, lsl r1
   189a8:	beq	18a10 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x124>
   189ac:	add	r0, sl, #6
   189b0:	add	r1, sp, #12
   189b4:	mov	r2, r6
   189b8:	add	r3, sp, #16
   189bc:	str	r5, [sp]
   189c0:	str	r4, [sp, #4]
   189c4:	str	r0, [sp, #12]
   189c8:	mov	r0, r7
   189cc:	bl	1165c <myencoding_prescan_stream_to_determine_encoding_check_meta@plt>
   189d0:	cmp	r0, #0
   189d4:	bne	18a20 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x134>
   189d8:	ldr	r9, [sp, #12]
   189dc:	b	18a04 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x118>
   189e0:	add	r9, sl, #1
   189e4:	str	r9, [sp, #12]
   189e8:	b	18a04 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x118>
   189ec:	mov	r0, r7
   189f0:	mov	r1, r9
   189f4:	mov	r2, r6
   189f8:	bl	115d8 <myencoding_prescan_stream_to_determine_encoding_skip_other@plt>
   189fc:	mov	r9, r0
   18a00:	str	r0, [sp, #12]
   18a04:	cmp	r9, r6
   18a08:	bcc	18938 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x4c>
   18a0c:	b	18a20 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x134>
   18a10:	cmp	r0, #47	; 0x2f
   18a14:	mov	r9, r8
   18a18:	beq	189ac <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xc0>
   18a1c:	b	18a04 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x118>
   18a20:	ldr	r0, [sp, #16]
   18a24:	b	18a2c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x140>
   18a28:	mov	r0, #2
   18a2c:	sub	sp, fp, #28
   18a30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18a34:	andeq	pc, r1, r4, lsr r1	; <UNPREDICTABLE>

00018a38 <myencoding_get_function_by_id@@Base>:
   18a38:	ldr	r1, [pc, #8]	; 18a48 <myencoding_get_function_by_id@@Base+0x10>
   18a3c:	add	r1, pc, r1
   18a40:	ldr	r0, [r1, r0, lsl #2]
   18a44:	bx	lr
   18a48:	andeq	r7, pc, r0, lsl #18
   18a4c:	nop	{0}

00018a50 <myencoding_decode_utf_8@@Base>:
   18a50:	push	{fp, lr}
   18a54:	mov	fp, sp
   18a58:	ldr	r2, [r1, #20]
   18a5c:	cmp	r2, #0
   18a60:	beq	18ae8 <myencoding_decode_utf_8@@Base+0x98>
   18a64:	ldr	r3, [r1]
   18a68:	cmp	r3, r0
   18a6c:	bls	18a9c <myencoding_decode_utf_8@@Base+0x4c>
   18a70:	ldr	r3, [r1, #4]
   18a74:	cmp	r3, r0
   18a78:	bcs	18a9c <myencoding_decode_utf_8@@Base+0x4c>
   18a7c:	add	r0, pc, #300	; 0x12c
   18a80:	mov	r2, #5
   18a84:	vld1.64	{d16-d17}, [r0]
   18a88:	mov	r0, #20
   18a8c:	vst1.32	{d16-d17}, [r1], r0
   18a90:	mov	r0, #0
   18a94:	str	r0, [r1]
   18a98:	b	18ba8 <myencoding_decode_utf_8@@Base+0x158>
   18a9c:	mov	r3, #191	; 0xbf
   18aa0:	sub	r0, r0, #128	; 0x80
   18aa4:	str	r3, [r1, #4]
   18aa8:	mov	r3, #128	; 0x80
   18aac:	str	r3, [r1]
   18ab0:	ldr	r3, [r1, #8]
   18ab4:	ldr	ip, [r1, #12]
   18ab8:	add	r3, r3, #1
   18abc:	subs	r2, r2, r3
   18ac0:	str	r3, [r1, #8]
   18ac4:	add	r2, r2, r2, lsl #1
   18ac8:	lsl	r2, r2, #1
   18acc:	add	r0, ip, r0, lsl r2
   18ad0:	mov	r2, #2
   18ad4:	moveq	r2, #0
   18ad8:	str	r0, [r1, #12]
   18adc:	streq	r2, [r1, #8]
   18ae0:	streq	r2, [r1, #20]
   18ae4:	b	18ba8 <myencoding_decode_utf_8@@Base+0x158>
   18ae8:	sxtb	r2, r0
   18aec:	cmp	r2, #0
   18af0:	bmi	18b00 <myencoding_decode_utf_8@@Base+0xb0>
   18af4:	str	r0, [r1, #12]
   18af8:	mov	r2, #0
   18afc:	b	18ba8 <myencoding_decode_utf_8@@Base+0x158>
   18b00:	add	r2, r0, #62	; 0x3e
   18b04:	uxtb	r2, r2
   18b08:	cmp	r2, #30
   18b0c:	bcs	18b20 <myencoding_decode_utf_8@@Base+0xd0>
   18b10:	mov	ip, #6
   18b14:	mvn	lr, #191	; 0xbf
   18b18:	mov	r2, #1
   18b1c:	b	18b94 <myencoding_decode_utf_8@@Base+0x144>
   18b20:	and	r2, r0, #240	; 0xf0
   18b24:	cmp	r2, #224	; 0xe0
   18b28:	bne	18b4c <myencoding_decode_utf_8@@Base+0xfc>
   18b2c:	mov	ip, #12
   18b30:	mvn	lr, #223	; 0xdf
   18b34:	mov	r2, #2
   18b38:	cmp	r0, #237	; 0xed
   18b3c:	beq	18b84 <myencoding_decode_utf_8@@Base+0x134>
   18b40:	cmp	r0, #224	; 0xe0
   18b44:	moveq	r3, #160	; 0xa0
   18b48:	b	18b7c <myencoding_decode_utf_8@@Base+0x12c>
   18b4c:	add	r2, r0, #16
   18b50:	uxtb	r3, r2
   18b54:	mov	r2, #1
   18b58:	cmp	r3, #4
   18b5c:	bhi	18ba8 <myencoding_decode_utf_8@@Base+0x158>
   18b60:	mov	ip, #12
   18b64:	mvn	lr, #239	; 0xef
   18b68:	mov	r2, #2
   18b6c:	cmp	r0, #244	; 0xf4
   18b70:	beq	18b8c <myencoding_decode_utf_8@@Base+0x13c>
   18b74:	cmp	r0, #240	; 0xf0
   18b78:	moveq	r3, #144	; 0x90
   18b7c:	streq	r3, [r1]
   18b80:	b	18b94 <myencoding_decode_utf_8@@Base+0x144>
   18b84:	mov	r3, #159	; 0x9f
   18b88:	b	18b90 <myencoding_decode_utf_8@@Base+0x140>
   18b8c:	mov	r3, #143	; 0x8f
   18b90:	str	r3, [r1, #4]
   18b94:	add	r0, lr, r0
   18b98:	str	r2, [r1, #20]
   18b9c:	mov	r2, #2
   18ba0:	lsl	r0, r0, ip
   18ba4:	str	r0, [r1, #12]
   18ba8:	mov	r0, r2
   18bac:	pop	{fp, pc}
   18bb0:	andeq	r0, r0, r0, lsl #1
   18bb4:	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
	...

00018bc0 <myencoding_decode_ibm866@@Base>:
   18bc0:	sxtb	r2, r0
   18bc4:	cmn	r2, #1
   18bc8:	bgt	18bdc <myencoding_decode_ibm866@@Base+0x1c>
   18bcc:	ldr	r2, [pc, #20]	; 18be8 <myencoding_decode_ibm866@@Base+0x28>
   18bd0:	add	r2, pc, r2
   18bd4:	add	r0, r2, r0, lsl #2
   18bd8:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18bdc:	str	r0, [r1, #12]
   18be0:	mov	r0, #0
   18be4:	bx	lr
   18be8:	andeq	pc, r1, r4, lsr #16

00018bec <myencoding_decode_iso_8859_2@@Base>:
   18bec:	sxtb	r2, r0
   18bf0:	cmn	r2, #1
   18bf4:	bgt	18c08 <myencoding_decode_iso_8859_2@@Base+0x1c>
   18bf8:	ldr	r2, [pc, #20]	; 18c14 <myencoding_decode_iso_8859_2@@Base+0x28>
   18bfc:	add	r2, pc, r2
   18c00:	add	r0, r2, r0, lsl #2
   18c04:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18c08:	str	r0, [r1, #12]
   18c0c:	mov	r0, #0
   18c10:	bx	lr
   18c14:	strdeq	pc, [r1], -r8

00018c18 <myencoding_decode_iso_8859_3@@Base>:
   18c18:	sxtb	r2, r0
   18c1c:	cmn	r2, #1
   18c20:	bgt	18c34 <myencoding_decode_iso_8859_3@@Base+0x1c>
   18c24:	ldr	r2, [pc, #20]	; 18c40 <myencoding_decode_iso_8859_3@@Base+0x28>
   18c28:	add	r2, pc, r2
   18c2c:	add	r0, r2, r0, lsl #2
   18c30:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18c34:	str	r0, [r1, #12]
   18c38:	mov	r0, #0
   18c3c:	bx	lr
   18c40:	andeq	pc, r1, ip, asr #23

00018c44 <myencoding_decode_iso_8859_4@@Base>:
   18c44:	sxtb	r2, r0
   18c48:	cmn	r2, #1
   18c4c:	bgt	18c60 <myencoding_decode_iso_8859_4@@Base+0x1c>
   18c50:	ldr	r2, [pc, #20]	; 18c6c <myencoding_decode_iso_8859_4@@Base+0x28>
   18c54:	add	r2, pc, r2
   18c58:	add	r0, r2, r0, lsl #2
   18c5c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18c60:	str	r0, [r1, #12]
   18c64:	mov	r0, #0
   18c68:	bx	lr
   18c6c:	andeq	pc, r1, r0, lsr #27

00018c70 <myencoding_decode_iso_8859_5@@Base>:
   18c70:	sxtb	r2, r0
   18c74:	cmn	r2, #1
   18c78:	bgt	18c8c <myencoding_decode_iso_8859_5@@Base+0x1c>
   18c7c:	ldr	r2, [pc, #20]	; 18c98 <myencoding_decode_iso_8859_5@@Base+0x28>
   18c80:	add	r2, pc, r2
   18c84:	add	r0, r2, r0, lsl #2
   18c88:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18c8c:	str	r0, [r1, #12]
   18c90:	mov	r0, #0
   18c94:	bx	lr
   18c98:	andeq	pc, r1, r4, ror pc	; <UNPREDICTABLE>

00018c9c <myencoding_decode_iso_8859_6@@Base>:
   18c9c:	sxtb	r2, r0
   18ca0:	cmn	r2, #1
   18ca4:	bgt	18cb8 <myencoding_decode_iso_8859_6@@Base+0x1c>
   18ca8:	ldr	r2, [pc, #20]	; 18cc4 <myencoding_decode_iso_8859_6@@Base+0x28>
   18cac:	add	r2, pc, r2
   18cb0:	add	r0, r2, r0, lsl #2
   18cb4:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18cb8:	str	r0, [r1, #12]
   18cbc:	mov	r0, #0
   18cc0:	bx	lr
   18cc4:	andeq	sp, r4, r8, ror #27

00018cc8 <myencoding_decode_iso_8859_7@@Base>:
   18cc8:	sxtb	r2, r0
   18ccc:	cmn	r2, #1
   18cd0:	bgt	18ce4 <myencoding_decode_iso_8859_7@@Base+0x1c>
   18cd4:	ldr	r2, [pc, #20]	; 18cf0 <myencoding_decode_iso_8859_7@@Base+0x28>
   18cd8:	add	r2, pc, r2
   18cdc:	add	r0, r2, r0, lsl #2
   18ce0:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18ce4:	str	r0, [r1, #12]
   18ce8:	mov	r0, #0
   18cec:	bx	lr
   18cf0:	andeq	r0, r2, ip, lsl r1

00018cf4 <myencoding_decode_iso_8859_8@@Base>:
   18cf4:	sxtb	r2, r0
   18cf8:	cmn	r2, #1
   18cfc:	bgt	18d10 <myencoding_decode_iso_8859_8@@Base+0x1c>
   18d00:	ldr	r2, [pc, #20]	; 18d1c <myencoding_decode_iso_8859_8@@Base+0x28>
   18d04:	add	r2, pc, r2
   18d08:	add	r0, r2, r0, lsl #2
   18d0c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18d10:	str	r0, [r1, #12]
   18d14:	mov	r0, #0
   18d18:	bx	lr
   18d1c:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>

00018d20 <myencoding_decode_iso_8859_8_i@@Base>:
   18d20:	sxtb	r2, r0
   18d24:	cmn	r2, #1
   18d28:	bgt	18d3c <myencoding_decode_iso_8859_8_i@@Base+0x1c>
   18d2c:	ldr	r2, [pc, #20]	; 18d48 <myencoding_decode_iso_8859_8_i@@Base+0x28>
   18d30:	add	r2, pc, r2
   18d34:	add	r0, r2, r0, lsl #2
   18d38:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18d3c:	str	r0, [r1, #12]
   18d40:	mov	r0, #0
   18d44:	bx	lr
   18d48:	andeq	r0, r2, r4, asr #5

00018d4c <myencoding_decode_iso_8859_10@@Base>:
   18d4c:	sxtb	r2, r0
   18d50:	cmn	r2, #1
   18d54:	bgt	18d68 <myencoding_decode_iso_8859_10@@Base+0x1c>
   18d58:	ldr	r2, [pc, #20]	; 18d74 <myencoding_decode_iso_8859_10@@Base+0x28>
   18d5c:	add	r2, pc, r2
   18d60:	add	r0, r2, r0, lsl #2
   18d64:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18d68:	str	r0, [r1, #12]
   18d6c:	mov	r0, #0
   18d70:	bx	lr
   18d74:	muleq	r2, r8, r4

00018d78 <myencoding_decode_iso_8859_13@@Base>:
   18d78:	sxtb	r2, r0
   18d7c:	cmn	r2, #1
   18d80:	bgt	18d94 <myencoding_decode_iso_8859_13@@Base+0x1c>
   18d84:	ldr	r2, [pc, #20]	; 18da0 <myencoding_decode_iso_8859_13@@Base+0x28>
   18d88:	add	r2, pc, r2
   18d8c:	add	r0, r2, r0, lsl #2
   18d90:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18d94:	str	r0, [r1, #12]
   18d98:	mov	r0, #0
   18d9c:	bx	lr
   18da0:	andeq	r0, r2, ip, ror #12

00018da4 <myencoding_decode_iso_8859_14@@Base>:
   18da4:	sxtb	r2, r0
   18da8:	cmn	r2, #1
   18dac:	bgt	18dc0 <myencoding_decode_iso_8859_14@@Base+0x1c>
   18db0:	ldr	r2, [pc, #20]	; 18dcc <myencoding_decode_iso_8859_14@@Base+0x28>
   18db4:	add	r2, pc, r2
   18db8:	add	r0, r2, r0, lsl #2
   18dbc:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18dc0:	str	r0, [r1, #12]
   18dc4:	mov	r0, #0
   18dc8:	bx	lr
   18dcc:	andeq	r0, r2, r0, asr #16

00018dd0 <myencoding_decode_iso_8859_15@@Base>:
   18dd0:	sxtb	r2, r0
   18dd4:	cmn	r2, #1
   18dd8:	bgt	18dec <myencoding_decode_iso_8859_15@@Base+0x1c>
   18ddc:	ldr	r2, [pc, #20]	; 18df8 <myencoding_decode_iso_8859_15@@Base+0x28>
   18de0:	add	r2, pc, r2
   18de4:	add	r0, r2, r0, lsl #2
   18de8:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18dec:	str	r0, [r1, #12]
   18df0:	mov	r0, #0
   18df4:	bx	lr
   18df8:	andeq	r0, r2, r4, lsl sl

00018dfc <myencoding_decode_iso_8859_16@@Base>:
   18dfc:	sxtb	r2, r0
   18e00:	cmn	r2, #1
   18e04:	bgt	18e18 <myencoding_decode_iso_8859_16@@Base+0x1c>
   18e08:	ldr	r2, [pc, #20]	; 18e24 <myencoding_decode_iso_8859_16@@Base+0x28>
   18e0c:	add	r2, pc, r2
   18e10:	add	r0, r2, r0, lsl #2
   18e14:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18e18:	str	r0, [r1, #12]
   18e1c:	mov	r0, #0
   18e20:	bx	lr
   18e24:	andeq	r0, r2, r8, ror #23

00018e28 <myencoding_decode_koi8_r@@Base>:
   18e28:	sxtb	r2, r0
   18e2c:	cmn	r2, #1
   18e30:	bgt	18e44 <myencoding_decode_koi8_r@@Base+0x1c>
   18e34:	ldr	r2, [pc, #20]	; 18e50 <myencoding_decode_koi8_r@@Base+0x28>
   18e38:	add	r2, pc, r2
   18e3c:	add	r0, r2, r0, lsl #2
   18e40:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18e44:	str	r0, [r1, #12]
   18e48:	mov	r0, #0
   18e4c:	bx	lr
   18e50:			; <UNDEFINED> instruction: 0x00020dbc

00018e54 <myencoding_decode_koi8_u@@Base>:
   18e54:	sxtb	r2, r0
   18e58:	cmn	r2, #1
   18e5c:	bgt	18e70 <myencoding_decode_koi8_u@@Base+0x1c>
   18e60:	ldr	r2, [pc, #20]	; 18e7c <myencoding_decode_koi8_u@@Base+0x28>
   18e64:	add	r2, pc, r2
   18e68:	add	r0, r2, r0, lsl #2
   18e6c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18e70:	str	r0, [r1, #12]
   18e74:	mov	r0, #0
   18e78:	bx	lr
   18e7c:	muleq	r2, r0, pc	; <UNPREDICTABLE>

00018e80 <myencoding_decode_macintosh@@Base>:
   18e80:	sxtb	r2, r0
   18e84:	cmn	r2, #1
   18e88:	bgt	18e9c <myencoding_decode_macintosh@@Base+0x1c>
   18e8c:	ldr	r2, [pc, #20]	; 18ea8 <myencoding_decode_macintosh@@Base+0x28>
   18e90:	add	r2, pc, r2
   18e94:	add	r0, r2, r0, lsl #2
   18e98:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18e9c:	str	r0, [r1, #12]
   18ea0:	mov	r0, #0
   18ea4:	bx	lr
   18ea8:	andeq	r1, r2, r4, ror #2

00018eac <myencoding_decode_windows_874@@Base>:
   18eac:	sxtb	r2, r0
   18eb0:	cmn	r2, #1
   18eb4:	bgt	18ec8 <myencoding_decode_windows_874@@Base+0x1c>
   18eb8:	ldr	r2, [pc, #20]	; 18ed4 <myencoding_decode_windows_874@@Base+0x28>
   18ebc:	add	r2, pc, r2
   18ec0:	add	r0, r2, r0, lsl #2
   18ec4:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18ec8:	str	r0, [r1, #12]
   18ecc:	mov	r0, #0
   18ed0:	bx	lr
   18ed4:	andeq	r1, r2, r8, lsr r3

00018ed8 <myencoding_decode_windows_1250@@Base>:
   18ed8:	sxtb	r2, r0
   18edc:	cmn	r2, #1
   18ee0:	bgt	18ef4 <myencoding_decode_windows_1250@@Base+0x1c>
   18ee4:	ldr	r2, [pc, #20]	; 18f00 <myencoding_decode_windows_1250@@Base+0x28>
   18ee8:	add	r2, pc, r2
   18eec:	add	r0, r2, r0, lsl #2
   18ef0:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18ef4:	str	r0, [r1, #12]
   18ef8:	mov	r0, #0
   18efc:	bx	lr
   18f00:	andeq	r1, r2, ip, lsl #10

00018f04 <myencoding_decode_windows_1251@@Base>:
   18f04:	sxtb	r2, r0
   18f08:	cmn	r2, #1
   18f0c:	bgt	18f20 <myencoding_decode_windows_1251@@Base+0x1c>
   18f10:	ldr	r2, [pc, #20]	; 18f2c <myencoding_decode_windows_1251@@Base+0x28>
   18f14:	add	r2, pc, r2
   18f18:	add	r0, r2, r0, lsl #2
   18f1c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18f20:	str	r0, [r1, #12]
   18f24:	mov	r0, #0
   18f28:	bx	lr
   18f2c:	andeq	r1, r2, r0, ror #13

00018f30 <myencoding_decode_windows_1252@@Base>:
   18f30:	sxtb	r2, r0
   18f34:	cmn	r2, #1
   18f38:	bgt	18f4c <myencoding_decode_windows_1252@@Base+0x1c>
   18f3c:	ldr	r2, [pc, #20]	; 18f58 <myencoding_decode_windows_1252@@Base+0x28>
   18f40:	add	r2, pc, r2
   18f44:	add	r0, r2, r0, lsl #2
   18f48:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18f4c:	str	r0, [r1, #12]
   18f50:	mov	r0, #0
   18f54:	bx	lr
   18f58:			; <UNDEFINED> instruction: 0x000218b4

00018f5c <myencoding_decode_windows_1253@@Base>:
   18f5c:	sxtb	r2, r0
   18f60:	cmn	r2, #1
   18f64:	bgt	18f78 <myencoding_decode_windows_1253@@Base+0x1c>
   18f68:	ldr	r2, [pc, #20]	; 18f84 <myencoding_decode_windows_1253@@Base+0x28>
   18f6c:	add	r2, pc, r2
   18f70:	add	r0, r2, r0, lsl #2
   18f74:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18f78:	str	r0, [r1, #12]
   18f7c:	mov	r0, #0
   18f80:	bx	lr
   18f84:	andeq	r1, r2, r8, lsl #21

00018f88 <myencoding_decode_windows_1254@@Base>:
   18f88:	sxtb	r2, r0
   18f8c:	cmn	r2, #1
   18f90:	bgt	18fa4 <myencoding_decode_windows_1254@@Base+0x1c>
   18f94:	ldr	r2, [pc, #20]	; 18fb0 <myencoding_decode_windows_1254@@Base+0x28>
   18f98:	add	r2, pc, r2
   18f9c:	add	r0, r2, r0, lsl #2
   18fa0:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18fa4:	str	r0, [r1, #12]
   18fa8:	mov	r0, #0
   18fac:	bx	lr
   18fb0:	andeq	r1, r2, ip, asr ip

00018fb4 <myencoding_decode_windows_1255@@Base>:
   18fb4:	sxtb	r2, r0
   18fb8:	cmn	r2, #1
   18fbc:	bgt	18fd0 <myencoding_decode_windows_1255@@Base+0x1c>
   18fc0:	ldr	r2, [pc, #20]	; 18fdc <myencoding_decode_windows_1255@@Base+0x28>
   18fc4:	add	r2, pc, r2
   18fc8:	add	r0, r2, r0, lsl #2
   18fcc:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18fd0:	str	r0, [r1, #12]
   18fd4:	mov	r0, #0
   18fd8:	bx	lr
   18fdc:	andeq	r1, r2, r0, lsr lr

00018fe0 <myencoding_decode_windows_1256@@Base>:
   18fe0:	sxtb	r2, r0
   18fe4:	cmn	r2, #1
   18fe8:	bgt	18ffc <myencoding_decode_windows_1256@@Base+0x1c>
   18fec:	ldr	r2, [pc, #20]	; 19008 <myencoding_decode_windows_1256@@Base+0x28>
   18ff0:	add	r2, pc, r2
   18ff4:	add	r0, r2, r0, lsl #2
   18ff8:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18ffc:	str	r0, [r1, #12]
   19000:	mov	r0, #0
   19004:	bx	lr
   19008:	andeq	r2, r2, r4

0001900c <myencoding_decode_windows_1257@@Base>:
   1900c:	sxtb	r2, r0
   19010:	cmn	r2, #1
   19014:	bgt	19028 <myencoding_decode_windows_1257@@Base+0x1c>
   19018:	ldr	r2, [pc, #20]	; 19034 <myencoding_decode_windows_1257@@Base+0x28>
   1901c:	add	r2, pc, r2
   19020:	add	r0, r2, r0, lsl #2
   19024:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19028:	str	r0, [r1, #12]
   1902c:	mov	r0, #0
   19030:	bx	lr
   19034:	ldrdeq	r2, [r2], -r8

00019038 <myencoding_decode_windows_1258@@Base>:
   19038:	sxtb	r2, r0
   1903c:	cmn	r2, #1
   19040:	bgt	19054 <myencoding_decode_windows_1258@@Base+0x1c>
   19044:	ldr	r2, [pc, #20]	; 19060 <myencoding_decode_windows_1258@@Base+0x28>
   19048:	add	r2, pc, r2
   1904c:	add	r0, r2, r0, lsl #2
   19050:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19054:	str	r0, [r1, #12]
   19058:	mov	r0, #0
   1905c:	bx	lr
   19060:	andeq	r2, r2, ip, lsr #7

00019064 <myencoding_decode_x_mac_cyrillic@@Base>:
   19064:	sxtb	r2, r0
   19068:	cmn	r2, #1
   1906c:	bgt	19080 <myencoding_decode_x_mac_cyrillic@@Base+0x1c>
   19070:	ldr	r2, [pc, #20]	; 1908c <myencoding_decode_x_mac_cyrillic@@Base+0x28>
   19074:	add	r2, pc, r2
   19078:	add	r0, r2, r0, lsl #2
   1907c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19080:	str	r0, [r1, #12]
   19084:	mov	r0, #0
   19088:	bx	lr
   1908c:	andeq	r2, r2, r0, lsl #11

00019090 <myencoding_decode_gbk@@Base>:
   19090:	b	19094 <myencoding_decode_gb18030@@Base>

00019094 <myencoding_decode_gb18030@@Base>:
   19094:	push	{r4, sl, fp, lr}
   19098:	add	fp, sp, #8
   1909c:	mov	r4, r1
   190a0:	ldr	r1, [r1, #8]
   190a4:	cmp	r1, #0
   190a8:	beq	190f0 <myencoding_decode_gb18030@@Base+0x5c>
   190ac:	sub	r2, r0, #48	; 0x30
   190b0:	uxtb	r2, r2
   190b4:	cmp	r2, #10
   190b8:	bcs	19114 <myencoding_decode_gb18030@@Base+0x80>
   190bc:	ldm	r4, {r2, r3}
   190c0:	add	r2, r2, r2, lsl #2
   190c4:	add	r2, r3, r2, lsl #1
   190c8:	rsb	r2, r2, r2, lsl #6
   190cc:	add	r1, r1, r2, lsl #1
   190d0:	add	r1, r1, r1, lsl #2
   190d4:	add	r0, r0, r1, lsl #1
   190d8:	movw	r1, #16718	; 0x414e
   190dc:	movt	r1, #65510	; 0xffe6
   190e0:	add	r0, r0, r1
   190e4:	bl	11fd4 <myencoding_index_gb18030_ranges_code_point@plt>
   190e8:	str	r0, [r4, #12]
   190ec:	b	19118 <myencoding_decode_gb18030@@Base+0x84>
   190f0:	ldr	r1, [r4, #4]
   190f4:	cmp	r1, #0
   190f8:	beq	19134 <myencoding_decode_gb18030@@Base+0xa0>
   190fc:	cmp	r0, #129	; 0x81
   19100:	bcc	1915c <myencoding_decode_gb18030@@Base+0xc8>
   19104:	cmp	r0, #255	; 0xff
   19108:	beq	1915c <myencoding_decode_gb18030@@Base+0xc8>
   1910c:	str	r0, [r4, #8]
   19110:	b	19154 <myencoding_decode_gb18030@@Base+0xc0>
   19114:	ldr	r0, [r4, #12]
   19118:	mov	r1, #0
   1911c:	clz	r0, r0
   19120:	str	r1, [r4]
   19124:	str	r1, [r4, #4]
   19128:	str	r1, [r4, #8]
   1912c:	lsr	r1, r0, #5
   19130:	b	191f4 <myencoding_decode_gb18030@@Base+0x160>
   19134:	ldr	r2, [r4]
   19138:	cmp	r2, #0
   1913c:	beq	19170 <myencoding_decode_gb18030@@Base+0xdc>
   19140:	sub	r1, r0, #48	; 0x30
   19144:	uxtb	r1, r1
   19148:	cmp	r1, #9
   1914c:	bhi	19194 <myencoding_decode_gb18030@@Base+0x100>
   19150:	str	r0, [r4, #4]
   19154:	mov	r1, #2
   19158:	b	191f4 <myencoding_decode_gb18030@@Base+0x160>
   1915c:	mov	r0, #0
   19160:	str	r0, [r4]
   19164:	str	r0, [r4, #4]
   19168:	mov	r1, #1
   1916c:	b	191f4 <myencoding_decode_gb18030@@Base+0x160>
   19170:	sxtb	r1, r0
   19174:	cmp	r1, #0
   19178:	bpl	191ec <myencoding_decode_gb18030@@Base+0x158>
   1917c:	cmp	r0, #255	; 0xff
   19180:	beq	19168 <myencoding_decode_gb18030@@Base+0xd4>
   19184:	cmp	r0, #128	; 0x80
   19188:	bne	191fc <myencoding_decode_gb18030@@Base+0x168>
   1918c:	movw	r0, #8364	; 0x20ac
   19190:	b	191ec <myencoding_decode_gb18030@@Base+0x158>
   19194:	mov	r1, #0
   19198:	str	r1, [r4]
   1919c:	sxtb	r1, r0
   191a0:	cmn	r1, #1
   191a4:	blt	191bc <myencoding_decode_gb18030@@Base+0x128>
   191a8:	sub	r3, r0, #64	; 0x40
   191ac:	mov	r1, #1
   191b0:	uxtb	r3, r3
   191b4:	cmp	r3, #62	; 0x3e
   191b8:	bhi	191f4 <myencoding_decode_gb18030@@Base+0x160>
   191bc:	cmp	r0, #127	; 0x7f
   191c0:	mvn	r1, #64	; 0x40
   191c4:	mvncc	r1, #63	; 0x3f
   191c8:	add	r0, r0, r1
   191cc:	mov	r1, #190	; 0xbe
   191d0:	mla	r0, r2, r1, r0
   191d4:	ldr	r1, [pc, #40]	; 19204 <myencoding_decode_gb18030@@Base+0x170>
   191d8:	add	r1, pc, r1
   191dc:	add	r0, r1, r0, lsl #2
   191e0:	movw	r1, #33032	; 0x8108
   191e4:	movt	r1, #65534	; 0xfffe
   191e8:	ldr	r0, [r0, r1]
   191ec:	str	r0, [r4, #12]
   191f0:	mov	r1, #0
   191f4:	mov	r0, r1
   191f8:	pop	{r4, sl, fp, pc}
   191fc:	str	r0, [r4]
   19200:	b	19154 <myencoding_decode_gb18030@@Base+0xc0>
   19204:	muleq	r2, r4, ip

00019208 <myencoding_index_gb18030_ranges_code_point@@Base>:
   19208:	movw	r2, #57927	; 0xe247
   1920c:	mov	r1, #0
   19210:	movt	r2, #18
   19214:	cmp	r0, r2
   19218:	bhi	19284 <myencoding_index_gb18030_ranges_code_point@@Base+0x7c>
   1921c:	movw	r3, #18508	; 0x484c
   19220:	movw	r2, #39420	; 0x99fc
   19224:	movt	r3, #2
   19228:	sub	r2, r0, r2
   1922c:	cmp	r2, r3
   19230:	bcc	19284 <myencoding_index_gb18030_ranges_code_point@@Base+0x7c>
   19234:	movw	r2, #7457	; 0x1d21
   19238:	movw	r1, #59335	; 0xe7c7
   1923c:	cmp	r0, r2
   19240:	beq	19284 <myencoding_index_gb18030_ranges_code_point@@Base+0x7c>
   19244:	ldr	r1, [pc, #64]	; 1928c <myencoding_index_gb18030_ranges_code_point@@Base+0x84>
   19248:	add	r1, pc, r1
   1924c:	add	r2, r1, #1648	; 0x670
   19250:	mvn	r1, #206	; 0xce
   19254:	cmp	r1, #0
   19258:	beq	19274 <myencoding_index_gb18030_ranges_code_point@@Base+0x6c>
   1925c:	ldr	r3, [r2], #-8
   19260:	add	r1, r1, #1
   19264:	cmp	r3, r0
   19268:	bhi	19254 <myencoding_index_gb18030_ranges_code_point@@Base+0x4c>
   1926c:	ldr	r2, [r2, #12]
   19270:	b	1927c <myencoding_index_gb18030_ranges_code_point@@Base+0x74>
   19274:	mov	r1, #0
   19278:	mov	r2, #0
   1927c:	add	r0, r1, r0
   19280:	add	r1, r0, r2
   19284:	mov	r0, r1
   19288:	bx	lr
   1928c:	andeq	r2, r2, ip, lsr #11

00019290 <myencoding_decode_big5@@Base>:
   19290:	ldr	ip, [r1]
   19294:	mov	r2, r0
   19298:	cmp	ip, #0
   1929c:	beq	19324 <myencoding_decode_big5@@Base+0x94>
   192a0:	mov	r0, #0
   192a4:	cmp	r2, #127	; 0x7f
   192a8:	mov	r3, #98	; 0x62
   192ac:	str	r0, [r1]
   192b0:	sub	r0, r2, #64	; 0x40
   192b4:	movwcc	r3, #64	; 0x40
   192b8:	uxtb	r0, r0
   192bc:	cmp	r0, #63	; 0x3f
   192c0:	bcc	192d8 <myencoding_decode_big5@@Base+0x48>
   192c4:	mov	r0, #1
   192c8:	cmp	r2, #161	; 0xa1
   192cc:	bcc	1934c <myencoding_decode_big5@@Base+0xbc>
   192d0:	cmp	r2, #255	; 0xff
   192d4:	beq	1934c <myencoding_decode_big5@@Base+0xbc>
   192d8:	sub	r0, r2, r3
   192dc:	mov	r2, #157	; 0x9d
   192e0:	mla	r0, ip, r2, r0
   192e4:	movw	r2, #20253	; 0x4f1d
   192e8:	sub	r2, r0, r2
   192ec:	movw	r0, #1134	; 0x46e
   192f0:	cmp	r2, r0
   192f4:	ble	19350 <myencoding_decode_big5@@Base+0xc0>
   192f8:	movw	r0, #1135	; 0x46f
   192fc:	cmp	r2, r0
   19300:	beq	1938c <myencoding_decode_big5@@Base+0xfc>
   19304:	movw	r0, #1164	; 0x48c
   19308:	cmp	r2, r0
   1930c:	beq	19398 <myencoding_decode_big5@@Base+0x108>
   19310:	movw	r0, #1166	; 0x48e
   19314:	cmp	r2, r0
   19318:	bne	19370 <myencoding_decode_big5@@Base+0xe0>
   1931c:	mov	r0, #780	; 0x30c
   19320:	b	1939c <myencoding_decode_big5@@Base+0x10c>
   19324:	sxtb	r0, r2
   19328:	cmp	r0, #0
   1932c:	movpl	r0, #0
   19330:	strpl	r2, [r1, #12]
   19334:	bxpl	lr
   19338:	cmp	r2, #128	; 0x80
   1933c:	mov	r0, #1
   19340:	cmpne	r2, #255	; 0xff
   19344:	movne	r0, #2
   19348:	strne	r2, [r1]
   1934c:	bx	lr
   19350:	mov	r0, #1
   19354:	cmp	r2, #0
   19358:	bxeq	lr
   1935c:	movw	r0, #1133	; 0x46d
   19360:	cmp	r2, r0
   19364:	bne	19370 <myencoding_decode_big5@@Base+0xe0>
   19368:	mov	r0, #772	; 0x304
   1936c:	b	19390 <myencoding_decode_big5@@Base+0x100>
   19370:	mov	r0, #0
   19374:	str	r0, [r1, #16]
   19378:	ldr	r3, [pc, #48]	; 193b0 <myencoding_decode_big5@@Base+0x120>
   1937c:	add	r3, pc, r3
   19380:	ldr	r2, [r3, r2, lsl #2]
   19384:	str	r2, [r1, #12]
   19388:	bx	lr
   1938c:	mov	r0, #780	; 0x30c
   19390:	mov	r2, #202	; 0xca
   19394:	b	193a0 <myencoding_decode_big5@@Base+0x110>
   19398:	mov	r0, #772	; 0x304
   1939c:	mov	r2, #234	; 0xea
   193a0:	str	r2, [r1, #12]
   193a4:	str	r0, [r1, #16]
   193a8:	mov	r0, #0
   193ac:	bx	lr
   193b0:	andeq	sl, r3, r0, lsl #2

000193b4 <myencoding_decode_euc_jp@@Base>:
   193b4:	ldr	r2, [r1]
   193b8:	cmp	r2, #0
   193bc:	beq	19494 <myencoding_decode_euc_jp@@Base+0xe0>
   193c0:	cmp	r2, #143	; 0x8f
   193c4:	beq	193f8 <myencoding_decode_euc_jp@@Base+0x44>
   193c8:	cmp	r2, #142	; 0x8e
   193cc:	bne	19418 <myencoding_decode_euc_jp@@Base+0x64>
   193d0:	add	r2, r0, #95	; 0x5f
   193d4:	uxtb	r2, r2
   193d8:	cmp	r2, #62	; 0x3e
   193dc:	bhi	1948c <myencoding_decode_euc_jp@@Base+0xd8>
   193e0:	movw	r3, #65216	; 0xfec0
   193e4:	mov	r2, #0
   193e8:	add	r0, r0, r3
   193ec:	str	r2, [r1]
   193f0:	str	r0, [r1, #12]
   193f4:	b	194d4 <myencoding_decode_euc_jp@@Base+0x120>
   193f8:	cmp	r0, #161	; 0xa1
   193fc:	bcc	1948c <myencoding_decode_euc_jp@@Base+0xd8>
   19400:	cmp	r0, #255	; 0xff
   19404:	beq	1948c <myencoding_decode_euc_jp@@Base+0xd8>
   19408:	str	r0, [r1]
   1940c:	mov	r0, #1
   19410:	str	r0, [r1, #20]
   19414:	b	194d0 <myencoding_decode_euc_jp@@Base+0x11c>
   19418:	mov	r3, #0
   1941c:	str	r3, [r1]
   19420:	sub	r3, r2, #161	; 0xa1
   19424:	cmp	r3, #93	; 0x5d
   19428:	bhi	19494 <myencoding_decode_euc_jp@@Base+0xe0>
   1942c:	cmp	r0, #161	; 0xa1
   19430:	bcc	19494 <myencoding_decode_euc_jp@@Base+0xe0>
   19434:	cmp	r0, #255	; 0xff
   19438:	beq	19494 <myencoding_decode_euc_jp@@Base+0xe0>
   1943c:	mov	r3, #0
   19440:	ldr	ip, [r1, #20]
   19444:	str	r3, [r1, #20]
   19448:	mov	r3, #94	; 0x5e
   1944c:	mla	r0, r2, r3, r0
   19450:	movw	r2, #4356	; 0x1104
   19454:	movt	r2, #65535	; 0xffff
   19458:	cmp	ip, #0
   1945c:	add	r0, r2, r0, lsl #2
   19460:	ldr	r2, [pc, #116]	; 194dc <myencoding_decode_euc_jp@@Base+0x128>
   19464:	ldr	r3, [pc, #116]	; 194e0 <myencoding_decode_euc_jp@@Base+0x12c>
   19468:	add	r3, pc, r3
   1946c:	add	r2, pc, r2
   19470:	add	r3, r3, r0
   19474:	addeq	r3, r2, r0
   19478:	ldr	r0, [r3]
   1947c:	str	r0, [r1, #12]
   19480:	clz	r0, r0
   19484:	lsr	r2, r0, #5
   19488:	b	194d4 <myencoding_decode_euc_jp@@Base+0x120>
   1948c:	mov	r2, #0
   19490:	str	r2, [r1]
   19494:	sxtb	r2, r0
   19498:	cmp	r2, #0
   1949c:	bmi	194ac <myencoding_decode_euc_jp@@Base+0xf8>
   194a0:	str	r0, [r1, #12]
   194a4:	mov	r2, #0
   194a8:	b	194d4 <myencoding_decode_euc_jp@@Base+0x120>
   194ac:	and	r2, r0, #254	; 0xfe
   194b0:	cmp	r2, #142	; 0x8e
   194b4:	beq	194cc <myencoding_decode_euc_jp@@Base+0x118>
   194b8:	mov	r2, #1
   194bc:	cmp	r0, #161	; 0xa1
   194c0:	bcc	194d4 <myencoding_decode_euc_jp@@Base+0x120>
   194c4:	cmp	r0, #255	; 0xff
   194c8:	beq	194d4 <myencoding_decode_euc_jp@@Base+0x120>
   194cc:	str	r0, [r1]
   194d0:	mov	r2, #2
   194d4:	mov	r0, r2
   194d8:	bx	lr
   194dc:	andeq	r6, r5, r8, lsr r2
   194e0:	andeq	sp, r4, ip, lsr #16

000194e4 <myencoding_decode_iso_2022_jp@@Base>:
   194e4:	ldr	r3, [r1, #4]
   194e8:	mov	ip, #0
   194ec:	cmp	r3, #7
   194f0:	bhi	1974c <myencoding_decode_iso_2022_jp@@Base+0x268>
   194f4:	add	r2, pc, #4
   194f8:	ldr	r3, [r2, r3, lsl #2]
   194fc:	add	pc, r2, r3
   19500:	andeq	r0, r0, r0, lsr #32
   19504:	andeq	r0, r0, r4, asr r0
   19508:	andeq	r0, r0, ip, asr #4
   1950c:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   19510:	andeq	r0, r0, r4, ror #1
   19514:	strdeq	r0, [r0], -r8
   19518:	andeq	r0, r0, r0, lsl r1
   1951c:	andeq	r0, r0, r4, lsr #2
   19520:	cmp	r0, #27
   19524:	beq	195ec <myencoding_decode_iso_2022_jp@@Base+0x108>
   19528:	sxtb	r2, r0
   1952c:	cmp	r2, #0
   19530:	bmi	195a4 <myencoding_decode_iso_2022_jp@@Base+0xc0>
   19534:	cmp	r0, #27
   19538:	bhi	19740 <myencoding_decode_iso_2022_jp@@Base+0x25c>
   1953c:	movw	r3, #49152	; 0xc000
   19540:	mov	r2, #1
   19544:	movt	r3, #2048	; 0x800
   19548:	tst	r3, r2, lsl r0
   1954c:	bne	195a4 <myencoding_decode_iso_2022_jp@@Base+0xc0>
   19550:	b	19740 <myencoding_decode_iso_2022_jp@@Base+0x25c>
   19554:	cmp	r0, #126	; 0x7e
   19558:	beq	19734 <myencoding_decode_iso_2022_jp@@Base+0x250>
   1955c:	cmp	r0, #92	; 0x5c
   19560:	beq	1973c <myencoding_decode_iso_2022_jp@@Base+0x258>
   19564:	cmp	r0, #27
   19568:	beq	195ec <myencoding_decode_iso_2022_jp@@Base+0x108>
   1956c:	sxtb	r2, r0
   19570:	cmp	r2, #0
   19574:	bmi	195a4 <myencoding_decode_iso_2022_jp@@Base+0xc0>
   19578:	cmp	r0, #27
   1957c:	bhi	19594 <myencoding_decode_iso_2022_jp@@Base+0xb0>
   19580:	movw	r3, #49152	; 0xc000
   19584:	mov	r2, #1
   19588:	movt	r3, #2048	; 0x800
   1958c:	tst	r3, r2, lsl r0
   19590:	bne	195a4 <myencoding_decode_iso_2022_jp@@Base+0xc0>
   19594:	cmp	r0, #92	; 0x5c
   19598:	beq	195a4 <myencoding_decode_iso_2022_jp@@Base+0xc0>
   1959c:	cmp	r0, #126	; 0x7e
   195a0:	bne	19740 <myencoding_decode_iso_2022_jp@@Base+0x25c>
   195a4:	mov	r0, #0
   195a8:	str	r0, [r1, #20]
   195ac:	b	1972c <myencoding_decode_iso_2022_jp@@Base+0x248>
   195b0:	cmp	r0, #27
   195b4:	beq	195ec <myencoding_decode_iso_2022_jp@@Base+0x108>
   195b8:	mov	r2, #0
   195bc:	mov	ip, #1
   195c0:	str	r2, [r1, #20]
   195c4:	sub	r2, r0, #33	; 0x21
   195c8:	uxtb	r2, r2
   195cc:	cmp	r2, #62	; 0x3e
   195d0:	movwls	r2, #65344	; 0xff40
   195d4:	movls	ip, #0
   195d8:	addls	r0, r0, r2
   195dc:	strls	r0, [r1, #12]
   195e0:	b	1974c <myencoding_decode_iso_2022_jp@@Base+0x268>
   195e4:	cmp	r0, #27
   195e8:	bne	19694 <myencoding_decode_iso_2022_jp@@Base+0x1b0>
   195ec:	mov	r0, #6
   195f0:	mov	ip, #2
   195f4:	b	19608 <myencoding_decode_iso_2022_jp@@Base+0x124>
   195f8:	cmp	r0, #27
   195fc:	bne	196c4 <myencoding_decode_iso_2022_jp@@Base+0x1e0>
   19600:	mov	r0, #6
   19604:	mov	ip, #3
   19608:	str	r0, [r1, #4]
   1960c:	b	1974c <myencoding_decode_iso_2022_jp@@Base+0x268>
   19610:	cmp	r0, #40	; 0x28
   19614:	cmpne	r0, #36	; 0x24
   19618:	bne	1971c <myencoding_decode_iso_2022_jp@@Base+0x238>
   1961c:	mov	r2, #7
   19620:	b	196b4 <myencoding_decode_iso_2022_jp@@Base+0x1d0>
   19624:	mov	r3, #0
   19628:	cmp	r0, #66	; 0x42
   1962c:	str	r3, [r1, #4]
   19630:	ldr	r2, [r1]
   19634:	str	r3, [r1]
   19638:	cmpeq	r2, #40	; 0x28
   1963c:	beq	19714 <myencoding_decode_iso_2022_jp@@Base+0x230>
   19640:	cmp	r0, #74	; 0x4a
   19644:	moveq	r3, #1
   19648:	cmpeq	r2, #40	; 0x28
   1964c:	beq	19674 <myencoding_decode_iso_2022_jp@@Base+0x190>
   19650:	cmp	r0, #73	; 0x49
   19654:	moveq	r3, #2
   19658:	cmpeq	r2, #40	; 0x28
   1965c:	beq	19674 <myencoding_decode_iso_2022_jp@@Base+0x190>
   19660:	cmp	r2, #36	; 0x24
   19664:	orreq	r0, r0, #2
   19668:	moveq	r3, #4
   1966c:	cmpeq	r0, #66	; 0x42
   19670:	bne	1971c <myencoding_decode_iso_2022_jp@@Base+0x238>
   19674:	str	r3, [r1, #4]
   19678:	str	r3, [r1, #8]
   1967c:	mov	ip, #1
   19680:	ldr	r0, [r1, #20]
   19684:	str	ip, [r1, #20]
   19688:	cmp	r0, #0
   1968c:	movweq	ip, #2
   19690:	b	1974c <myencoding_decode_iso_2022_jp@@Base+0x268>
   19694:	mov	r2, #0
   19698:	mov	ip, #1
   1969c:	str	r2, [r1, #20]
   196a0:	sub	r2, r0, #33	; 0x21
   196a4:	uxtb	r2, r2
   196a8:	cmp	r2, #93	; 0x5d
   196ac:	bhi	1974c <myencoding_decode_iso_2022_jp@@Base+0x268>
   196b0:	mov	r2, #5
   196b4:	str	r0, [r1]
   196b8:	str	r2, [r1, #4]
   196bc:	mov	ip, #2
   196c0:	b	1974c <myencoding_decode_iso_2022_jp@@Base+0x268>
   196c4:	mov	r2, #4
   196c8:	mov	ip, #1
   196cc:	str	r2, [r1, #4]
   196d0:	sub	r2, r0, #33	; 0x21
   196d4:	uxtb	r2, r2
   196d8:	cmp	r2, #93	; 0x5d
   196dc:	bhi	1974c <myencoding_decode_iso_2022_jp@@Base+0x268>
   196e0:	ldr	r2, [r1]
   196e4:	mov	r3, #94	; 0x5e
   196e8:	mla	r0, r2, r3, r0
   196ec:	ldr	r2, [pc, #96]	; 19754 <myencoding_decode_iso_2022_jp@@Base+0x270>
   196f0:	add	r2, pc, r2
   196f4:	add	r0, r2, r0, lsl #2
   196f8:	movw	r2, #52996	; 0xcf04
   196fc:	movt	r2, #65535	; 0xffff
   19700:	ldr	r0, [r0, r2]
   19704:	str	r0, [r1, #12]
   19708:	clz	r0, r0
   1970c:	lsr	ip, r0, #5
   19710:	b	1974c <myencoding_decode_iso_2022_jp@@Base+0x268>
   19714:	mov	r0, #0
   19718:	str	r0, [r1, #4]
   1971c:	mov	r0, #0
   19720:	str	r0, [r1, #20]
   19724:	ldr	r0, [r1, #8]
   19728:	str	r0, [r1, #4]
   1972c:	mov	ip, #1
   19730:	b	1974c <myencoding_decode_iso_2022_jp@@Base+0x268>
   19734:	movw	r0, #8254	; 0x203e
   19738:	b	19740 <myencoding_decode_iso_2022_jp@@Base+0x25c>
   1973c:	mov	r0, #165	; 0xa5
   19740:	mov	ip, #0
   19744:	str	r0, [r1, #12]
   19748:	str	ip, [r1, #20]
   1974c:	mov	r0, ip
   19750:	bx	lr
   19754:			; <UNDEFINED> instruction: 0x00055fb4

00019758 <myencoding_decode_shift_jis@@Base>:
   19758:	ldr	r2, [r1]
   1975c:	cmp	r2, #0
   19760:	beq	197f0 <myencoding_decode_shift_jis@@Base+0x98>
   19764:	sub	r3, r0, #64	; 0x40
   19768:	cmp	r2, #160	; 0xa0
   1976c:	mov	ip, #193	; 0xc1
   19770:	uxtb	r3, r3
   19774:	movwcc	ip, #129	; 0x81
   19778:	cmp	r3, #63	; 0x3f
   1977c:	bcc	19794 <myencoding_decode_shift_jis@@Base+0x3c>
   19780:	sxtb	r3, r0
   19784:	cmn	r3, #1
   19788:	bgt	19828 <myencoding_decode_shift_jis@@Base+0xd0>
   1978c:	cmp	r0, #252	; 0xfc
   19790:	bhi	19828 <myencoding_decode_shift_jis@@Base+0xd0>
   19794:	cmp	r0, #127	; 0x7f
   19798:	mvn	r3, #64	; 0x40
   1979c:	sub	r2, r2, ip
   197a0:	mvncc	r3, #63	; 0x3f
   197a4:	add	r0, r3, r0
   197a8:	mov	r3, #188	; 0xbc
   197ac:	mla	r2, r2, r3, r0
   197b0:	cmp	r2, #0
   197b4:	beq	19828 <myencoding_decode_shift_jis@@Base+0xd0>
   197b8:	ldr	r0, [pc, #164]	; 19864 <myencoding_decode_shift_jis@@Base+0x10c>
   197bc:	movw	r3, #8836	; 0x2284
   197c0:	sub	ip, r2, r3
   197c4:	movw	r3, #1692	; 0x69c
   197c8:	cmp	ip, r3
   197cc:	add	r0, pc, r0
   197d0:	ldr	r0, [r0, r2, lsl #2]
   197d4:	str	r0, [r1, #12]
   197d8:	bhi	19830 <myencoding_decode_shift_jis@@Base+0xd8>
   197dc:	cmp	r0, #0
   197e0:	bne	19830 <myencoding_decode_shift_jis@@Base+0xd8>
   197e4:	movw	r0, #48508	; 0xbd7c
   197e8:	add	r0, r2, r0
   197ec:	b	1982c <myencoding_decode_shift_jis@@Base+0xd4>
   197f0:	sxtb	r2, r0
   197f4:	cmn	r2, #1
   197f8:	bgt	1981c <myencoding_decode_shift_jis@@Base+0xc4>
   197fc:	cmp	r0, #128	; 0x80
   19800:	beq	1981c <myencoding_decode_shift_jis@@Base+0xc4>
   19804:	add	r2, r0, #95	; 0x5f
   19808:	uxtb	r2, r2
   1980c:	cmp	r2, #62	; 0x3e
   19810:	bhi	19840 <myencoding_decode_shift_jis@@Base+0xe8>
   19814:	movw	r2, #65216	; 0xfec0
   19818:	add	r0, r0, r2
   1981c:	str	r0, [r1, #12]
   19820:	mov	r2, #0
   19824:	b	19838 <myencoding_decode_shift_jis@@Base+0xe0>
   19828:	mov	r0, #0
   1982c:	str	r0, [r1, #12]
   19830:	clz	r0, r0
   19834:	lsr	r2, r0, #5
   19838:	mov	r0, r2
   1983c:	bx	lr
   19840:	cmp	r0, #160	; 0xa0
   19844:	addcs	r3, r0, #32
   19848:	movcs	r2, #1
   1984c:	uxtbcs	r3, r3
   19850:	cmpcs	r3, #28
   19854:	bhi	19838 <myencoding_decode_shift_jis@@Base+0xe0>
   19858:	mov	r2, #2
   1985c:	str	r0, [r1]
   19860:	b	19838 <myencoding_decode_shift_jis@@Base+0xe0>
   19864:	ldrdeq	r5, [r5], -r8

00019868 <myencoding_decode_euc_kr@@Base>:
   19868:	ldr	r2, [r1]
   1986c:	cmp	r2, #0
   19870:	beq	198bc <myencoding_decode_euc_kr@@Base+0x54>
   19874:	mov	r3, #0
   19878:	cmp	r0, #65	; 0x41
   1987c:	str	r3, [r1]
   19880:	bcc	198ac <myencoding_decode_euc_kr@@Base+0x44>
   19884:	cmp	r0, #255	; 0xff
   19888:	movne	r3, #190	; 0xbe
   1988c:	mlane	r0, r2, r3, r0
   19890:	movwne	r2, #24575	; 0x5fff
   19894:	subsne	r0, r0, r2
   19898:	beq	198ac <myencoding_decode_euc_kr@@Base+0x44>
   1989c:	ldr	r2, [pc, #76]	; 198f0 <myencoding_decode_euc_kr@@Base+0x88>
   198a0:	add	r2, pc, r2
   198a4:	ldr	r0, [r2, r0, lsl #2]
   198a8:	str	r0, [r1, #12]
   198ac:	ldr	r0, [r1, #12]
   198b0:	clz	r0, r0
   198b4:	lsr	r2, r0, #5
   198b8:	b	198e8 <myencoding_decode_euc_kr@@Base+0x80>
   198bc:	sxtb	r2, r0
   198c0:	cmp	r2, #0
   198c4:	bmi	198d4 <myencoding_decode_euc_kr@@Base+0x6c>
   198c8:	str	r0, [r1, #12]
   198cc:	mov	r2, #0
   198d0:	b	198e8 <myencoding_decode_euc_kr@@Base+0x80>
   198d4:	cmp	r0, #128	; 0x80
   198d8:	mov	r2, #1
   198dc:	cmpne	r0, #255	; 0xff
   198e0:	movne	r2, #2
   198e4:	strne	r0, [r1]
   198e8:	mov	r0, r2
   198ec:	bx	lr
   198f0:	andeq	r0, r6, r4, asr #28

000198f4 <myencoding_decode_shared_utf_16@@Base>:
   198f4:	push	{fp, lr}
   198f8:	mov	fp, sp
   198fc:	ldr	r3, [r1]
   19900:	cmp	r3, #0
   19904:	beq	19954 <myencoding_decode_shared_utf_16@@Base+0x60>
   19908:	ldr	r2, [r1, #20]
   1990c:	mov	ip, #0
   19910:	str	ip, [r1]
   19914:	cmp	r2, #0
   19918:	addeq	lr, r3, r0, lsl #8
   1991c:	orrne	lr, r0, r3, lsl #8
   19920:	ldr	r3, [r1, #4]
   19924:	cmp	r3, #0
   19928:	beq	19960 <myencoding_decode_shared_utf_16@@Base+0x6c>
   1992c:	mov	r0, lr
   19930:	str	ip, [r1, #4]
   19934:	bfc	r0, #0, #10
   19938:	cmp	r0, #56320	; 0xdc00
   1993c:	bne	19984 <myencoding_decode_shared_utf_16@@Base+0x90>
   19940:	add	r0, lr, r3, lsl #10
   19944:	sub	r0, r0, #252928	; 0x3dc00
   19948:	sub	r0, r0, #56360960	; 0x35c0000
   1994c:	str	r0, [r1, #12]
   19950:	b	199a8 <myencoding_decode_shared_utf_16@@Base+0xb4>
   19954:	str	r0, [r1]
   19958:	mov	r0, #2
   1995c:	pop	{fp, pc}
   19960:	mov	r2, lr
   19964:	bfc	r2, #0, #10
   19968:	cmp	r2, #56320	; 0xdc00
   1996c:	beq	1999c <myencoding_decode_shared_utf_16@@Base+0xa8>
   19970:	cmp	r2, #55296	; 0xd800
   19974:	bne	199a4 <myencoding_decode_shared_utf_16@@Base+0xb0>
   19978:	mov	r0, #2
   1997c:	str	lr, [r1, #4]
   19980:	pop	{fp, pc}
   19984:	lsr	r3, lr, #8
   19988:	cmp	r2, #0
   1998c:	beq	199b0 <myencoding_decode_shared_utf_16@@Base+0xbc>
   19990:	uxtb	r0, lr
   19994:	uxtb	r2, r3
   19998:	b	199b8 <myencoding_decode_shared_utf_16@@Base+0xc4>
   1999c:	mov	r0, #1
   199a0:	pop	{fp, pc}
   199a4:	str	lr, [r1, #12]
   199a8:	mov	r0, #0
   199ac:	pop	{fp, pc}
   199b0:	uxtb	r0, r3
   199b4:	uxtb	r2, lr
   199b8:	str	r2, [r1, #12]
   199bc:	str	r0, [r1, #16]
   199c0:	mov	r0, #5
   199c4:	pop	{fp, pc}

000199c8 <myencoding_decode_utf_16be@@Base>:
   199c8:	ldr	r2, [r1, #20]
   199cc:	cmp	r2, #0
   199d0:	moveq	r2, #1
   199d4:	streq	r2, [r1, #20]
   199d8:	b	198f4 <myencoding_decode_shared_utf_16@@Base>

000199dc <myencoding_decode_utf_16le@@Base>:
   199dc:	ldr	r2, [r1, #20]
   199e0:	cmp	r2, #0
   199e4:	movne	r2, #0
   199e8:	strne	r2, [r1, #20]
   199ec:	b	198f4 <myencoding_decode_shared_utf_16@@Base>

000199f0 <myencoding_decode_x_user_defined@@Base>:
   199f0:	sxtb	r2, r0
   199f4:	cmn	r2, #1
   199f8:	orrle	r0, r0, #63232	; 0xf700
   199fc:	str	r0, [r1, #12]
   19a00:	mov	r0, #0
   19a04:	bx	lr

00019a08 <myencoding_result_clean@@Base>:
   19a08:	vmov.i32	q8, #0	; 0x00000000
   19a0c:	mov	r1, #0
   19a10:	mov	r2, #20
   19a14:	str	r1, [r0, #16]
   19a18:	vst1.32	{d16-d17}, [r0], r2
   19a1c:	str	r1, [r0]
   19a20:	bx	lr

00019a24 <myencoding_codepoint_ascii_length@@Base>:
   19a24:	mov	r1, #1
   19a28:	cmp	r0, #128	; 0x80
   19a2c:	bcc	19a44 <myencoding_codepoint_ascii_length@@Base+0x20>
   19a30:	cmp	r0, #2048	; 0x800
   19a34:	mov	r1, #2
   19a38:	movcs	r1, #3
   19a3c:	cmpcs	r0, #65536	; 0x10000
   19a40:	bcs	19a4c <myencoding_codepoint_ascii_length@@Base+0x28>
   19a44:	mov	r0, r1
   19a48:	bx	lr
   19a4c:	cmp	r0, #2097152	; 0x200000
   19a50:	mov	r1, #4
   19a54:	movcs	r1, #5
   19a58:	cmpcs	r0, #67108864	; 0x4000000
   19a5c:	bcc	19a44 <myencoding_codepoint_ascii_length@@Base+0x20>
   19a60:	cmn	r0, #1
   19a64:	mov	r1, #0
   19a68:	movwgt	r1, #6
   19a6c:	b	19a44 <myencoding_codepoint_ascii_length@@Base+0x20>

00019a70 <myencoding_ascii_utf_8_length@@Base>:
   19a70:	sxtb	r2, r0
   19a74:	mov	r1, #1
   19a78:	cmn	r2, #1
   19a7c:	bgt	19a9c <myencoding_ascii_utf_8_length@@Base+0x2c>
   19a80:	and	r2, r0, #224	; 0xe0
   19a84:	mov	r1, #2
   19a88:	cmp	r2, #192	; 0xc0
   19a8c:	andne	r2, r0, #240	; 0xf0
   19a90:	movne	r1, #3
   19a94:	cmpne	r2, #224	; 0xe0
   19a98:	bne	19aa4 <myencoding_ascii_utf_8_length@@Base+0x34>
   19a9c:	mov	r0, r1
   19aa0:	bx	lr
   19aa4:	and	r2, r0, #248	; 0xf8
   19aa8:	mov	r1, #4
   19aac:	cmp	r2, #240	; 0xf0
   19ab0:	andne	r2, r0, #252	; 0xfc
   19ab4:	movne	r1, #5
   19ab8:	cmpne	r2, #248	; 0xf8
   19abc:	beq	19a9c <myencoding_ascii_utf_8_length@@Base+0x2c>
   19ac0:	cmp	r0, #252	; 0xfc
   19ac4:	mov	r1, #0
   19ac8:	movweq	r1, #6
   19acc:	b	19a9c <myencoding_ascii_utf_8_length@@Base+0x2c>

00019ad0 <myencoding_codepoint_to_ascii_utf_8@@Base>:
   19ad0:	cmp	r0, #127	; 0x7f
   19ad4:	bhi	19ae4 <myencoding_codepoint_to_ascii_utf_8@@Base+0x14>
   19ad8:	strb	r0, [r1]
   19adc:	mov	r2, #1
   19ae0:	b	19b88 <myencoding_codepoint_to_ascii_utf_8@@Base+0xb8>
   19ae4:	mov	r2, #0
   19ae8:	cmp	r2, r0, lsr #11
   19aec:	bne	19b10 <myencoding_codepoint_to_ascii_utf_8@@Base+0x40>
   19af0:	mov	r2, #2
   19af4:	mov	r3, r0
   19af8:	bfi	r3, r2, #6, #26
   19afc:	strb	r3, [r1, #1]
   19b00:	mov	r3, #192	; 0xc0
   19b04:	orr	r0, r3, r0, lsr #6
   19b08:	strb	r0, [r1]
   19b0c:	b	19b88 <myencoding_codepoint_to_ascii_utf_8@@Base+0xb8>
   19b10:	cmp	r2, r0, lsr #16
   19b14:	bne	19b44 <myencoding_codepoint_to_ascii_utf_8@@Base+0x74>
   19b18:	mov	r2, #2
   19b1c:	mov	r3, r0
   19b20:	bfi	r3, r2, #6, #26
   19b24:	strb	r3, [r1, #2]
   19b28:	mov	r3, #224	; 0xe0
   19b2c:	orr	r3, r3, r0, lsr #12
   19b30:	lsr	r0, r0, #6
   19b34:	bfi	r0, r2, #6, #26
   19b38:	mov	r2, #3
   19b3c:	strb	r3, [r1]
   19b40:	b	19b84 <myencoding_codepoint_to_ascii_utf_8@@Base+0xb4>
   19b44:	mov	r2, #0
   19b48:	cmp	r2, r0, lsr #21
   19b4c:	bne	19b88 <myencoding_codepoint_to_ascii_utf_8@@Base+0xb8>
   19b50:	mov	r2, #2
   19b54:	mov	r3, r0
   19b58:	bfi	r3, r2, #6, #26
   19b5c:	strb	r3, [r1, #3]
   19b60:	mov	r3, #240	; 0xf0
   19b64:	orr	r3, r3, r0, lsr #18
   19b68:	strb	r3, [r1]
   19b6c:	lsr	r3, r0, #6
   19b70:	lsr	r0, r0, #12
   19b74:	bfi	r3, r2, #6, #26
   19b78:	bfi	r0, r2, #6, #26
   19b7c:	mov	r2, #4
   19b80:	strb	r3, [r1, #2]
   19b84:	strb	r0, [r1, #1]
   19b88:	mov	r0, r2
   19b8c:	bx	lr

00019b90 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base>:
   19b90:	cmp	r0, #127	; 0x7f
   19b94:	bhi	19bac <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x1c>
   19b98:	ldr	r2, [pc, #184]	; 19c58 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xc8>
   19b9c:	add	r2, pc, r2
   19ba0:	ldrb	r0, [r2, r0]
   19ba4:	mov	r2, #1
   19ba8:	b	19bd0 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x40>
   19bac:	mov	r2, #0
   19bb0:	cmp	r2, r0, lsr #11
   19bb4:	bne	19bd8 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x48>
   19bb8:	mov	r2, #2
   19bbc:	mov	r3, r0
   19bc0:	bfi	r3, r2, #6, #26
   19bc4:	strb	r3, [r1, #1]
   19bc8:	mov	r3, #192	; 0xc0
   19bcc:	orr	r0, r3, r0, lsr #6
   19bd0:	strb	r0, [r1]
   19bd4:	b	19c50 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xc0>
   19bd8:	cmp	r2, r0, lsr #16
   19bdc:	bne	19c0c <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x7c>
   19be0:	mov	r2, #2
   19be4:	mov	r3, r0
   19be8:	bfi	r3, r2, #6, #26
   19bec:	strb	r3, [r1, #2]
   19bf0:	mov	r3, #224	; 0xe0
   19bf4:	orr	r3, r3, r0, lsr #12
   19bf8:	lsr	r0, r0, #6
   19bfc:	bfi	r0, r2, #6, #26
   19c00:	mov	r2, #3
   19c04:	strb	r3, [r1]
   19c08:	b	19c4c <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xbc>
   19c0c:	mov	r2, #0
   19c10:	cmp	r2, r0, lsr #21
   19c14:	bne	19c50 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xc0>
   19c18:	mov	r2, #2
   19c1c:	mov	r3, r0
   19c20:	bfi	r3, r2, #6, #26
   19c24:	strb	r3, [r1, #3]
   19c28:	mov	r3, #240	; 0xf0
   19c2c:	orr	r3, r3, r0, lsr #18
   19c30:	strb	r3, [r1]
   19c34:	lsr	r3, r0, #6
   19c38:	lsr	r0, r0, #12
   19c3c:	bfi	r3, r2, #6, #26
   19c40:	bfi	r0, r2, #6, #26
   19c44:	mov	r2, #4
   19c48:	strb	r3, [r1, #2]
   19c4c:	strb	r0, [r1, #1]
   19c50:	mov	r0, r2
   19c54:	bx	lr
   19c58:	strdeq	ip, [r4], -r8

00019c5c <myencoding_ascii_utf_8_to_codepoint@@Base>:
   19c5c:	ldrsb	r2, [r0]
   19c60:	uxtb	r3, r2
   19c64:	cmn	r2, #1
   19c68:	ble	19c74 <myencoding_ascii_utf_8_to_codepoint@@Base+0x18>
   19c6c:	mov	r2, #1
   19c70:	b	19d14 <myencoding_ascii_utf_8_to_codepoint@@Base+0xb8>
   19c74:	and	r2, r3, #224	; 0xe0
   19c78:	cmp	r2, #192	; 0xc0
   19c7c:	bne	19c94 <myencoding_ascii_utf_8_to_codepoint@@Base+0x38>
   19c80:	mov	r2, #4032	; 0xfc0
   19c84:	mov	ip, #1
   19c88:	and	r3, r2, r3, lsl #6
   19c8c:	mov	r2, #2
   19c90:	b	19d04 <myencoding_ascii_utf_8_to_codepoint@@Base+0xa8>
   19c94:	and	r2, r3, #240	; 0xf0
   19c98:	cmp	r2, #224	; 0xe0
   19c9c:	bne	19cc4 <myencoding_ascii_utf_8_to_codepoint@@Base+0x68>
   19ca0:	mov	r2, #126976	; 0x1f000
   19ca4:	mov	ip, #2
   19ca8:	and	r2, r2, r3, lsl #12
   19cac:	str	r2, [r1]
   19cb0:	ldrb	r3, [r0, #1]
   19cb4:	and	r3, r3, #127	; 0x7f
   19cb8:	orr	r3, r2, r3, lsl #6
   19cbc:	mov	r2, #3
   19cc0:	b	19d04 <myencoding_ascii_utf_8_to_codepoint@@Base+0xa8>
   19cc4:	and	ip, r3, #248	; 0xf8
   19cc8:	mov	r2, #0
   19ccc:	cmp	ip, #240	; 0xf0
   19cd0:	bne	19d18 <myencoding_ascii_utf_8_to_codepoint@@Base+0xbc>
   19cd4:	mov	r2, #3932160	; 0x3c0000
   19cd8:	mov	ip, #3
   19cdc:	and	r2, r2, r3, lsl #18
   19ce0:	str	r2, [r1]
   19ce4:	ldrb	r3, [r0, #1]
   19ce8:	and	r3, r3, #127	; 0x7f
   19cec:	orr	r2, r2, r3, lsl #12
   19cf0:	str	r2, [r1]
   19cf4:	ldrb	r3, [r0, #2]
   19cf8:	and	r3, r3, #127	; 0x7f
   19cfc:	orr	r3, r2, r3, lsl #6
   19d00:	mov	r2, #4
   19d04:	str	r3, [r1]
   19d08:	ldrb	r0, [r0, ip]
   19d0c:	and	r0, r0, #127	; 0x7f
   19d10:	orr	r3, r3, r0
   19d14:	str	r3, [r1]
   19d18:	mov	r0, r2
   19d1c:	bx	lr

00019d20 <myencoding_codepoint_to_ascii_utf_16@@Base>:
   19d20:	cmp	r0, #65536	; 0x10000
   19d24:	bcc	19d58 <myencoding_codepoint_to_ascii_utf_16@@Base+0x38>
   19d28:	sub	r0, r0, #65536	; 0x10000
   19d2c:	mov	r2, #216	; 0xd8
   19d30:	mov	r3, #55	; 0x37
   19d34:	orr	r2, r2, r0, lsr #18
   19d38:	strb	r0, [r1, #3]
   19d3c:	strb	r2, [r1]
   19d40:	lsr	r2, r0, #8
   19d44:	lsr	r0, r0, #10
   19d48:	bfi	r2, r3, #2, #30
   19d4c:	strb	r2, [r1, #2]
   19d50:	mov	r2, #4
   19d54:	b	19d64 <myencoding_codepoint_to_ascii_utf_16@@Base+0x44>
   19d58:	lsr	r2, r0, #8
   19d5c:	strb	r2, [r1]
   19d60:	mov	r2, #2
   19d64:	strb	r0, [r1, #1]
   19d68:	mov	r0, r2
   19d6c:	bx	lr

00019d70 <myencoding_convert_to_ascii_utf_8@@Base>:
   19d70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19d74:	add	fp, sp, #28
   19d78:	sub	sp, sp, #36	; 0x24
   19d7c:	mov	r6, r0
   19d80:	ldr	r0, [r0]
   19d84:	mov	r8, r3
   19d88:	mov	r4, r2
   19d8c:	mov	r9, r1
   19d90:	cmp	r0, #0
   19d94:	bne	19db4 <myencoding_convert_to_ascii_utf_8@@Base+0x44>
   19d98:	add	r0, r4, #1
   19d9c:	mov	r7, #0
   19da0:	stmib	r6, {r0, r7}
   19da4:	bl	11dac <mycore_malloc@plt>
   19da8:	cmp	r0, #0
   19dac:	str	r0, [r6]
   19db0:	beq	19e70 <myencoding_convert_to_ascii_utf_8@@Base+0x100>
   19db4:	vmov.i32	q8, #0	; 0x00000000
   19db8:	mov	r0, #20
   19dbc:	add	r1, sp, #8
   19dc0:	mov	r7, #0
   19dc4:	cmp	r4, #0
   19dc8:	str	r7, [sp, #24]
   19dcc:	vst1.64	{d16-d17}, [r1], r0
   19dd0:	str	r7, [r1]
   19dd4:	beq	19e70 <myencoding_convert_to_ascii_utf_8@@Base+0x100>
   19dd8:	ldr	r0, [pc, #164]	; 19e84 <myencoding_convert_to_ascii_utf_8@@Base+0x114>
   19ddc:	mov	sl, #0
   19de0:	add	r0, pc, r0
   19de4:	ldr	r5, [r0, r8, lsl #2]
   19de8:	lsr	r0, r4, #1
   19dec:	add	r8, sp, #8
   19df0:	str	r0, [sp, #4]
   19df4:	ldrb	r0, [r9, sl]
   19df8:	mov	r1, r8
   19dfc:	blx	r5
   19e00:	cmp	r0, #0
   19e04:	bne	19e60 <myencoding_convert_to_ascii_utf_8@@Base+0xf0>
   19e08:	ldr	r1, [r6, #8]
   19e0c:	ldr	r2, [r6, #4]
   19e10:	add	r0, r1, #6
   19e14:	cmp	r0, r2
   19e18:	bcs	19e24 <myencoding_convert_to_ascii_utf_8@@Base+0xb4>
   19e1c:	ldr	r0, [r6]
   19e20:	b	19e48 <myencoding_convert_to_ascii_utf_8@@Base+0xd8>
   19e24:	ldr	r1, [sp, #4]
   19e28:	add	r7, r0, r1
   19e2c:	ldr	r0, [r6]
   19e30:	mov	r1, r7
   19e34:	bl	10f78 <mycore_realloc@plt>
   19e38:	cmp	r0, #0
   19e3c:	beq	19e7c <myencoding_convert_to_ascii_utf_8@@Base+0x10c>
   19e40:	stm	r6, {r0, r7}
   19e44:	ldr	r1, [r6, #8]
   19e48:	add	r1, r0, r1
   19e4c:	ldr	r0, [sp, #20]
   19e50:	bl	11f5c <myencoding_codepoint_to_ascii_utf_8@plt>
   19e54:	ldr	r1, [r6, #8]
   19e58:	add	r0, r1, r0
   19e5c:	str	r0, [r6, #8]
   19e60:	add	sl, sl, #1
   19e64:	cmp	r4, sl
   19e68:	bne	19df4 <myencoding_convert_to_ascii_utf_8@@Base+0x84>
   19e6c:	mov	r7, r4
   19e70:	mov	r0, r7
   19e74:	sub	sp, fp, #28
   19e78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19e7c:	mov	r7, #0
   19e80:	b	19e70 <myencoding_convert_to_ascii_utf_8@@Base+0x100>
   19e84:	andeq	r6, pc, ip, asr r5	; <UNPREDICTABLE>

00019e88 <myencoding_string_append@@Base>:
   19e88:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   19e8c:	add	fp, sp, #24
   19e90:	sub	sp, sp, #32
   19e94:	add	r8, sp, #8
   19e98:	mov	r7, r0
   19e9c:	mov	r4, r3
   19ea0:	mov	r5, r2
   19ea4:	mov	r6, r1
   19ea8:	mov	r0, r8
   19eac:	bl	11488 <myencoding_result_clean@plt>
   19eb0:	mov	r0, r7
   19eb4:	mov	r1, r8
   19eb8:	mov	r2, r6
   19ebc:	mov	r3, r5
   19ec0:	str	r4, [sp]
   19ec4:	bl	10fb4 <myencoding_string_append_chunk@plt>
   19ec8:	sub	sp, fp, #24
   19ecc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00019ed0 <myencoding_string_append_chunk@@Base>:
   19ed0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   19ed4:	add	fp, sp, #24
   19ed8:	mov	r4, r0
   19edc:	ldr	r0, [fp, #8]
   19ee0:	mov	r5, r3
   19ee4:	mov	r6, r2
   19ee8:	mov	r7, r1
   19eec:	bl	11a10 <myencoding_get_function_by_id@plt>
   19ef0:	cmp	r5, #0
   19ef4:	beq	19f58 <myencoding_string_append_chunk@@Base+0x88>
   19ef8:	mov	r8, r0
   19efc:	ldrb	r0, [r6]
   19f00:	mov	r1, r7
   19f04:	blx	r8
   19f08:	cmp	r0, #0
   19f0c:	bne	19f4c <myencoding_string_append_chunk@@Base+0x7c>
   19f10:	ldr	r0, [r4, #8]
   19f14:	ldr	r2, [r4, #4]
   19f18:	add	r1, r0, #5
   19f1c:	cmp	r1, r2
   19f20:	bcc	19f30 <myencoding_string_append_chunk@@Base+0x60>
   19f24:	mov	r0, r4
   19f28:	bl	11b24 <mycore_string_realloc@plt>
   19f2c:	ldr	r0, [r4, #8]
   19f30:	ldr	r1, [r4]
   19f34:	add	r1, r1, r0
   19f38:	ldr	r0, [r7, #12]
   19f3c:	bl	11f5c <myencoding_codepoint_to_ascii_utf_8@plt>
   19f40:	ldr	r1, [r4, #8]
   19f44:	add	r0, r1, r0
   19f48:	str	r0, [r4, #8]
   19f4c:	add	r6, r6, #1
   19f50:	subs	r5, r5, #1
   19f54:	bne	19efc <myencoding_string_append_chunk@@Base+0x2c>
   19f58:	ldr	r1, [r4, #4]
   19f5c:	ldr	r0, [r4, #8]
   19f60:	cmp	r0, r1
   19f64:	bcc	19f78 <myencoding_string_append_chunk@@Base+0xa8>
   19f68:	add	r1, r0, #1
   19f6c:	mov	r0, r4
   19f70:	bl	11b24 <mycore_string_realloc@plt>
   19f74:	ldr	r0, [r4, #8]
   19f78:	ldr	r1, [r4]
   19f7c:	mov	r2, #0
   19f80:	strb	r2, [r1, r0]
   19f84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00019f88 <myencoding_string_append_one@@Base>:
   19f88:	push	{r4, r5, r6, sl, fp, lr}
   19f8c:	add	fp, sp, #16
   19f90:	mov	r4, r0
   19f94:	mov	r0, r3
   19f98:	mov	r6, r2
   19f9c:	mov	r5, r1
   19fa0:	bl	11a10 <myencoding_get_function_by_id@plt>
   19fa4:	mov	r2, r0
   19fa8:	mov	r0, r6
   19fac:	mov	r1, r5
   19fb0:	blx	r2
   19fb4:	cmp	r0, #0
   19fb8:	popne	{r4, r5, r6, sl, fp, pc}
   19fbc:	ldr	r0, [r4, #8]
   19fc0:	ldr	r2, [r4, #4]
   19fc4:	add	r1, r0, #5
   19fc8:	cmp	r1, r2
   19fcc:	bcc	19fdc <myencoding_string_append_one@@Base+0x54>
   19fd0:	mov	r0, r4
   19fd4:	bl	11b24 <mycore_string_realloc@plt>
   19fd8:	ldr	r0, [r4, #8]
   19fdc:	ldr	r1, [r4]
   19fe0:	add	r1, r1, r0
   19fe4:	ldr	r0, [r5, #12]
   19fe8:	bl	11f5c <myencoding_codepoint_to_ascii_utf_8@plt>
   19fec:	ldr	r2, [r4, #8]
   19ff0:	ldr	r1, [r4]
   19ff4:	add	r0, r2, r0
   19ff8:	mov	r2, #0
   19ffc:	str	r0, [r4, #8]
   1a000:	strb	r2, [r1, r0]
   1a004:	pop	{r4, r5, r6, sl, fp, pc}

0001a008 <myencoding_string_append_lowercase_ascii@@Base>:
   1a008:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a00c:	add	fp, sp, #24
   1a010:	sub	sp, sp, #32
   1a014:	add	r8, sp, #8
   1a018:	mov	r7, r0
   1a01c:	mov	r4, r3
   1a020:	mov	r5, r2
   1a024:	mov	r6, r1
   1a028:	mov	r0, r8
   1a02c:	bl	11488 <myencoding_result_clean@plt>
   1a030:	mov	r0, r7
   1a034:	mov	r1, r8
   1a038:	mov	r2, r6
   1a03c:	mov	r3, r5
   1a040:	str	r4, [sp]
   1a044:	bl	11da0 <myencoding_string_append_chunk_lowercase_ascii@plt>
   1a048:	sub	sp, fp, #24
   1a04c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001a050 <myencoding_string_append_chunk_lowercase_ascii@@Base>:
   1a050:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a054:	add	fp, sp, #24
   1a058:	mov	r4, r0
   1a05c:	ldr	r0, [fp, #8]
   1a060:	mov	r5, r3
   1a064:	mov	r6, r2
   1a068:	mov	r7, r1
   1a06c:	bl	11a10 <myencoding_get_function_by_id@plt>
   1a070:	cmp	r5, #0
   1a074:	beq	1a100 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xb0>
   1a078:	ldr	r9, [pc, #176]	; 1a130 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xe0>
   1a07c:	mov	r8, r0
   1a080:	add	r9, pc, r9
   1a084:	ldrb	r0, [r6]
   1a088:	mov	r1, r7
   1a08c:	blx	r8
   1a090:	cmp	r0, #0
   1a094:	bne	1a0f4 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xa4>
   1a098:	ldr	r0, [r4, #8]
   1a09c:	ldr	r1, [r4, #4]
   1a0a0:	add	r2, r0, #5
   1a0a4:	cmp	r2, r1
   1a0a8:	bcc	1a0bc <myencoding_string_append_chunk_lowercase_ascii@@Base+0x6c>
   1a0ac:	add	r1, r0, #6
   1a0b0:	mov	r0, r4
   1a0b4:	bl	11b24 <mycore_string_realloc@plt>
   1a0b8:	ldr	r0, [r4, #8]
   1a0bc:	ldr	r1, [r4]
   1a0c0:	add	r1, r1, r0
   1a0c4:	ldr	r0, [r7, #12]
   1a0c8:	bl	11f5c <myencoding_codepoint_to_ascii_utf_8@plt>
   1a0cc:	cmp	r0, #1
   1a0d0:	bne	1a0e8 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x98>
   1a0d4:	ldrb	r1, [r6]
   1a0d8:	ldr	r2, [r4]
   1a0dc:	ldr	r3, [r4, #8]
   1a0e0:	ldrb	r1, [r9, r1]
   1a0e4:	strb	r1, [r2, r3]
   1a0e8:	ldr	r1, [r4, #8]
   1a0ec:	add	r0, r1, r0
   1a0f0:	str	r0, [r4, #8]
   1a0f4:	add	r6, r6, #1
   1a0f8:	subs	r5, r5, #1
   1a0fc:	bne	1a084 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x34>
   1a100:	ldr	r1, [r4, #4]
   1a104:	ldr	r0, [r4, #8]
   1a108:	cmp	r0, r1
   1a10c:	bcc	1a120 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xd0>
   1a110:	add	r1, r0, #1
   1a114:	mov	r0, r4
   1a118:	bl	11b24 <mycore_string_realloc@plt>
   1a11c:	ldr	r0, [r4, #8]
   1a120:	ldr	r1, [r4]
   1a124:	mov	r2, #0
   1a128:	strb	r2, [r1, r0]
   1a12c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a130:	andeq	r7, r7, r4, ror ip

0001a134 <myhtml_callback_before_token_done@@Base>:
   1a134:	ldr	r0, [r0, #220]	; 0xdc
   1a138:	bx	lr

0001a13c <myhtml_callback_after_token_done@@Base>:
   1a13c:	ldr	r0, [r0, #224]	; 0xe0
   1a140:	bx	lr

0001a144 <myhtml_callback_before_token_done_set@@Base>:
   1a144:	str	r2, [r0, #228]	; 0xe4
   1a148:	str	r1, [r0, #220]	; 0xdc
   1a14c:	bx	lr

0001a150 <myhtml_callback_after_token_done_set@@Base>:
   1a150:	str	r2, [r0, #232]	; 0xe8
   1a154:	str	r1, [r0, #224]	; 0xe0
   1a158:	bx	lr

0001a15c <myhtml_callback_tree_node_insert@@Base>:
   1a15c:	ldr	r0, [r0, #236]	; 0xec
   1a160:	bx	lr

0001a164 <myhtml_callback_tree_node_remove@@Base>:
   1a164:	ldr	r0, [r0, #240]	; 0xf0
   1a168:	bx	lr

0001a16c <myhtml_callback_tree_node_insert_set@@Base>:
   1a16c:	str	r2, [r0, #244]	; 0xf4
   1a170:	str	r1, [r0, #236]	; 0xec
   1a174:	bx	lr

0001a178 <myhtml_callback_tree_node_remove_set@@Base>:
   1a178:	str	r2, [r0, #248]	; 0xf8
   1a17c:	str	r1, [r0, #240]	; 0xf0
   1a180:	bx	lr

0001a184 <myhtml_charef_find@@Base>:
   1a184:	push	{r4, r5, r6, r7, fp, lr}
   1a188:	add	fp, sp, #16
   1a18c:	ldrb	r4, [r0]
   1a190:	ldr	lr, [pc, #160]	; 1a238 <myhtml_charef_find@@Base+0xb4>
   1a194:	mov	ip, r0
   1a198:	add	lr, pc, lr
   1a19c:	add	r5, r4, r4, lsl #1
   1a1a0:	mov	r0, lr
   1a1a4:	ldrb	r6, [r0, r5, lsl #3]!
   1a1a8:	cmp	r6, #0
   1a1ac:	beq	1a20c <myhtml_charef_find@@Base+0x88>
   1a1b0:	ldr	r5, [r1]
   1a1b4:	ldrb	r7, [ip, r5]
   1a1b8:	uxtb	r6, r6
   1a1bc:	cmp	r6, r7
   1a1c0:	bne	1a1ec <myhtml_charef_find@@Base+0x68>
   1a1c4:	add	r4, r4, r4, lsl #1
   1a1c8:	add	r5, r5, #1
   1a1cc:	cmp	r5, r2
   1a1d0:	str	r5, [r1]
   1a1d4:	add	r6, lr, r4, lsl #3
   1a1d8:	bcs	1a228 <myhtml_charef_find@@Base+0xa4>
   1a1dc:	ldr	r4, [r6, #4]
   1a1e0:	cmp	r4, #0
   1a1e4:	bne	1a1f8 <myhtml_charef_find@@Base+0x74>
   1a1e8:	b	1a228 <myhtml_charef_find@@Base+0xa4>
   1a1ec:	cmp	r7, r6
   1a1f0:	bls	1a20c <myhtml_charef_find@@Base+0x88>
   1a1f4:	add	r4, r4, #1
   1a1f8:	add	r6, r4, r4, lsl #1
   1a1fc:	mov	r0, lr
   1a200:	ldrb	r6, [r0, r6, lsl #3]!
   1a204:	cmp	r6, #0
   1a208:	bne	1a1b4 <myhtml_charef_find@@Base+0x30>
   1a20c:	cmp	r3, #0
   1a210:	beq	1a224 <myhtml_charef_find@@Base+0xa0>
   1a214:	add	r1, r4, r4, lsl #1
   1a218:	add	r1, lr, r1, lsl #3
   1a21c:	ldr	r1, [r1, #20]
   1a220:	str	r1, [r3]
   1a224:	pop	{r4, r5, r6, r7, fp, pc}
   1a228:	cmp	r3, #0
   1a22c:	beq	1a224 <myhtml_charef_find@@Base+0xa0>
   1a230:	ldr	r1, [r6, #20]
   1a234:	b	1a220 <myhtml_charef_find@@Base+0x9c>
   1a238:	andeq	r7, r7, ip, asr ip

0001a23c <myhtml_charef_get_first_position@@Base>:
   1a23c:	ldr	r1, [pc, #12]	; 1a250 <myhtml_charef_get_first_position@@Base+0x14>
   1a240:	add	r0, r0, r0, lsl #1
   1a244:	add	r1, pc, r1
   1a248:	add	r0, r1, r0, lsl #3
   1a24c:	bx	lr
   1a250:			; <UNDEFINED> instruction: 0x00077bb0

0001a254 <myhtml_charef_find_by_pos@@Base>:
   1a254:	push	{r4, r5, r6, r7, fp, lr}
   1a258:	add	fp, sp, #16
   1a25c:	mov	ip, r0
   1a260:	ldr	r0, [r2]
   1a264:	ldr	lr, [fp, #8]
   1a268:	ldrb	r0, [r1, r0]
   1a26c:	cmp	r0, #38	; 0x26
   1a270:	bne	1a2a4 <myhtml_charef_find_by_pos@@Base+0x50>
   1a274:	mov	r0, #1
   1a278:	str	r0, [lr, #12]
   1a27c:	ldr	r0, [lr]
   1a280:	ldr	r1, [r0, #20]
   1a284:	cmp	r1, #0
   1a288:	popne	{r4, r5, r6, r7, fp, pc}
   1a28c:	ldr	r0, [lr, #4]
   1a290:	cmp	r0, #0
   1a294:	beq	1a35c <myhtml_charef_find_by_pos@@Base+0x108>
   1a298:	ldr	r1, [lr, #8]
   1a29c:	str	r1, [r2]
   1a2a0:	pop	{r4, r5, r6, r7, fp, pc}
   1a2a4:	mov	r0, #0
   1a2a8:	add	r5, ip, ip, lsl #1
   1a2ac:	str	r0, [lr, #12]
   1a2b0:	ldr	r4, [pc, #248]	; 1a3b0 <myhtml_charef_find_by_pos@@Base+0x15c>
   1a2b4:	add	r4, pc, r4
   1a2b8:	mov	r0, r4
   1a2bc:	ldrb	r5, [r0, r5, lsl #3]!
   1a2c0:	cmp	r5, #0
   1a2c4:	beq	1a338 <myhtml_charef_find_by_pos@@Base+0xe4>
   1a2c8:	ldr	r6, [r2]
   1a2cc:	uxtb	r5, r5
   1a2d0:	ldrb	r7, [r1, r6]
   1a2d4:	cmp	r5, r7
   1a2d8:	bne	1a324 <myhtml_charef_find_by_pos@@Base+0xd0>
   1a2dc:	cmp	r5, #59	; 0x3b
   1a2e0:	beq	1a368 <myhtml_charef_find_by_pos@@Base+0x114>
   1a2e4:	add	r7, ip, ip, lsl #1
   1a2e8:	add	r5, r6, #1
   1a2ec:	str	r5, [r2]
   1a2f0:	add	r6, r4, r7, lsl #3
   1a2f4:	ldr	ip, [r6, #4]
   1a2f8:	cmp	ip, #0
   1a2fc:	beq	1a36c <myhtml_charef_find_by_pos@@Base+0x118>
   1a300:	cmp	r5, r3
   1a304:	bcs	1a378 <myhtml_charef_find_by_pos@@Base+0x124>
   1a308:	ldrb	r7, [r1, r5]
   1a30c:	cmp	r7, #38	; 0x26
   1a310:	beq	1a390 <myhtml_charef_find_by_pos@@Base+0x13c>
   1a314:	ldr	r6, [r6, #20]
   1a318:	cmp	r6, #0
   1a31c:	stmibne	lr, {r0, r5}
   1a320:	b	1a330 <myhtml_charef_find_by_pos@@Base+0xdc>
   1a324:	cmp	r7, r5
   1a328:	bls	1a338 <myhtml_charef_find_by_pos@@Base+0xe4>
   1a32c:	add	ip, ip, #1
   1a330:	add	r5, ip, ip, lsl #1
   1a334:	b	1a2b8 <myhtml_charef_find_by_pos@@Base+0x64>
   1a338:	mov	r0, #1
   1a33c:	str	r0, [lr, #12]
   1a340:	ldr	r1, [lr, #4]
   1a344:	mov	r0, r4
   1a348:	cmp	r1, #0
   1a34c:	ldrne	r0, [lr, #8]
   1a350:	strne	r0, [r2]
   1a354:	movne	r0, r1
   1a358:	pop	{r4, r5, r6, r7, fp, pc}
   1a35c:	ldr	r0, [pc, #72]	; 1a3ac <myhtml_charef_find_by_pos@@Base+0x158>
   1a360:	add	r0, pc, r0
   1a364:	pop	{r4, r5, r6, r7, fp, pc}
   1a368:	str	r0, [lr]
   1a36c:	mov	r1, #1
   1a370:	str	r1, [lr, #12]
   1a374:	pop	{r4, r5, r6, r7, fp, pc}
   1a378:	ldr	r1, [r6, #20]
   1a37c:	str	r0, [lr]
   1a380:	cmp	r1, #0
   1a384:	beq	1a358 <myhtml_charef_find_by_pos@@Base+0x104>
   1a388:	stmib	lr, {r0, r5}
   1a38c:	pop	{r4, r5, r6, r7, fp, pc}
   1a390:	mov	r1, #1
   1a394:	str	r0, [lr]
   1a398:	str	r1, [lr, #12]
   1a39c:	ldr	r1, [r6, #20]
   1a3a0:	cmp	r1, #0
   1a3a4:	bne	1a358 <myhtml_charef_find_by_pos@@Base+0x104>
   1a3a8:	b	1a340 <myhtml_charef_find_by_pos@@Base+0xec>
   1a3ac:	muleq	r7, r4, sl
   1a3b0:	andeq	r7, r7, r0, asr #22

0001a3b4 <myhtml_data_process_entry_clean@@Base>:
   1a3b4:	vmov.i32	q8, #0	; 0x00000000
   1a3b8:	add	r1, r0, #48	; 0x30
   1a3bc:	vst1.32	{d16-d17}, [r1]
   1a3c0:	add	r1, r0, #36	; 0x24
   1a3c4:	vst1.32	{d16-d17}, [r1]
   1a3c8:	add	r1, r0, #4
   1a3cc:	vst1.32	{d16-d17}, [r1]
   1a3d0:	ldr	r1, [pc, #12]	; 1a3e4 <myhtml_data_process_entry_clean@@Base+0x30>
   1a3d4:	ldr	r1, [pc, r1]
   1a3d8:	str	r1, [r0], #20
   1a3dc:	vst1.32	{d16-d17}, [r0]
   1a3e0:	bx	lr
   1a3e4:	ldrdeq	fp, [pc], -r0

0001a3e8 <myhtml_data_process_state_data@@Base>:
   1a3e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a3ec:	add	fp, sp, #24
   1a3f0:	sub	sp, sp, #8
   1a3f4:	mov	r4, r0
   1a3f8:	ldr	r0, [fp, #8]
   1a3fc:	mov	r6, r3
   1a400:	mov	r9, r2
   1a404:	mov	r8, r1
   1a408:	mov	r5, r3
   1a40c:	cmp	r3, r0
   1a410:	bcs	1a43c <myhtml_data_process_state_data@@Base+0x54>
   1a414:	sub	r1, r6, r0
   1a418:	add	r5, r9, r6
   1a41c:	mov	r7, #0
   1a420:	ldrb	r2, [r5, -r7]
   1a424:	cmp	r2, #38	; 0x26
   1a428:	beq	1a488 <myhtml_data_process_state_data@@Base+0xa0>
   1a42c:	sub	r7, r7, #1
   1a430:	cmp	r1, r7
   1a434:	bne	1a420 <myhtml_data_process_state_data@@Base+0x38>
   1a438:	mov	r5, r0
   1a43c:	ldr	r3, [r4, #32]
   1a440:	add	r1, r9, r6
   1a444:	sub	r2, r5, r6
   1a448:	mov	r0, r8
   1a44c:	bl	11d34 <myhtml_string_before_append_any_preprocessing@plt>
   1a450:	add	r0, r0, r6
   1a454:	cmp	r5, r0
   1a458:	beq	1a548 <myhtml_data_process_state_data@@Base+0x160>
   1a45c:	ldr	r1, [r4, #4]
   1a460:	cmp	r1, #0
   1a464:	beq	1a4e8 <myhtml_data_process_state_data@@Base+0x100>
   1a468:	ldrb	r2, [r4, #61]	; 0x3d
   1a46c:	stm	sp, {r1, r2}
   1a470:	add	r2, r9, r0
   1a474:	sub	r3, r5, r0
   1a478:	add	r1, r4, #8
   1a47c:	mov	r0, r8
   1a480:	bl	11efc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1a484:	b	1a4fc <myhtml_data_process_state_data@@Base+0x114>
   1a488:	ldr	r3, [r4, #32]
   1a48c:	rsb	r2, r7, #0
   1a490:	mov	r0, r8
   1a494:	mov	r1, r5
   1a498:	bl	11d34 <myhtml_string_before_append_any_preprocessing@plt>
   1a49c:	cmn	r7, r0
   1a4a0:	beq	1a520 <myhtml_data_process_state_data@@Base+0x138>
   1a4a4:	ldr	r2, [r4, #4]
   1a4a8:	add	r1, r0, r6
   1a4ac:	cmp	r2, #0
   1a4b0:	beq	1a504 <myhtml_data_process_state_data@@Base+0x11c>
   1a4b4:	ldrb	r3, [r4, #61]	; 0x3d
   1a4b8:	stm	sp, {r2, r3}
   1a4bc:	add	r2, r9, r1
   1a4c0:	add	r0, r0, r7
   1a4c4:	add	r9, r4, #8
   1a4c8:	rsb	r3, r0, #0
   1a4cc:	mov	r0, r8
   1a4d0:	mov	r1, r9
   1a4d4:	bl	11efc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1a4d8:	str	r0, [r4, #32]
   1a4dc:	mov	r0, r9
   1a4e0:	bl	11488 <myencoding_result_clean@plt>
   1a4e4:	b	1a520 <myhtml_data_process_state_data@@Base+0x138>
   1a4e8:	ldrb	r3, [r4, #61]	; 0x3d
   1a4ec:	add	r1, r9, r0
   1a4f0:	sub	r2, r5, r0
   1a4f4:	mov	r0, r8
   1a4f8:	bl	11494 <myhtml_string_append_with_preprocessing@plt>
   1a4fc:	str	r0, [r4, #32]
   1a500:	b	1a548 <myhtml_data_process_state_data@@Base+0x160>
   1a504:	ldrb	r3, [r4, #61]	; 0x3d
   1a508:	add	r0, r0, r7
   1a50c:	add	r1, r9, r1
   1a510:	rsb	r2, r0, #0
   1a514:	mov	r0, r8
   1a518:	bl	11494 <myhtml_string_append_with_preprocessing@plt>
   1a51c:	str	r0, [r4, #32]
   1a520:	ldr	r0, [r8, #8]
   1a524:	ldr	r1, [pc, #40]	; 1a554 <myhtml_data_process_state_data@@Base+0x16c>
   1a528:	ldr	r1, [pc, r1]
   1a52c:	str	r1, [r4]
   1a530:	str	r0, [r4, #36]	; 0x24
   1a534:	mov	r0, r8
   1a538:	ldrb	r1, [r5, -r7]
   1a53c:	bl	120f4 <myhtml_data_process_string_append_char@plt>
   1a540:	sub	r0, r6, r7
   1a544:	add	r5, r0, #1
   1a548:	mov	r0, r5
   1a54c:	sub	sp, fp, #24
   1a550:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a554:	andeq	fp, pc, r0, asr #6

0001a558 <myhtml_data_process_string_append_char@@Base>:
   1a558:	push	{r4, r5, fp, lr}
   1a55c:	add	fp, sp, #8
   1a560:	mov	r4, r0
   1a564:	ldr	r2, [r0, #4]
   1a568:	ldr	r0, [r0, #8]
   1a56c:	mov	r5, r1
   1a570:	add	r1, r0, #2
   1a574:	cmp	r1, r2
   1a578:	bcc	1a588 <myhtml_data_process_string_append_char@@Base+0x30>
   1a57c:	mov	r0, r4
   1a580:	bl	11b24 <mycore_string_realloc@plt>
   1a584:	ldr	r0, [r4, #8]
   1a588:	ldr	r1, [r4]
   1a58c:	mov	r2, #0
   1a590:	strb	r5, [r1, r0]
   1a594:	ldr	r1, [r4, #8]
   1a598:	ldr	r0, [r4]
   1a59c:	add	r1, r1, #1
   1a5a0:	str	r1, [r4, #8]
   1a5a4:	strb	r2, [r0, r1]
   1a5a8:	pop	{r4, r5, fp, pc}

0001a5ac <myhtml_data_process_state_ampersand@@Base>:
   1a5ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a5b0:	add	fp, sp, #24
   1a5b4:	mov	r5, r0
   1a5b8:	ldrb	r0, [r2, r3]
   1a5bc:	mov	r4, r3
   1a5c0:	mov	r7, r2
   1a5c4:	mov	r6, r1
   1a5c8:	cmp	r0, #35	; 0x23
   1a5cc:	bne	1a620 <myhtml_data_process_state_ampersand@@Base+0x74>
   1a5d0:	ldr	r8, [fp, #8]
   1a5d4:	mov	r0, r6
   1a5d8:	mov	r1, #35	; 0x23
   1a5dc:	bl	120f4 <myhtml_data_process_string_append_char@plt>
   1a5e0:	mov	r0, #0
   1a5e4:	str	r0, [r5, #40]	; 0x28
   1a5e8:	add	r0, r4, #1
   1a5ec:	cmp	r0, r8
   1a5f0:	bcs	1a660 <myhtml_data_process_state_ampersand@@Base+0xb4>
   1a5f4:	ldrb	r1, [r7, r0]
   1a5f8:	orr	r2, r1, #32
   1a5fc:	cmp	r2, #120	; 0x78
   1a600:	bne	1a680 <myhtml_data_process_state_ampersand@@Base+0xd4>
   1a604:	mov	r0, r6
   1a608:	bl	120f4 <myhtml_data_process_string_append_char@plt>
   1a60c:	ldr	r0, [pc, #128]	; 1a694 <myhtml_data_process_state_ampersand@@Base+0xe8>
   1a610:	ldr	r0, [pc, r0]
   1a614:	str	r0, [r5]
   1a618:	add	r0, r4, #2
   1a61c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a620:	mov	r0, #0
   1a624:	str	r0, [r5, #48]	; 0x30
   1a628:	ldrb	r0, [r7, r4]
   1a62c:	bl	11be4 <myhtml_charef_get_first_position@plt>
   1a630:	str	r0, [r5, #44]	; 0x2c
   1a634:	ldrb	r0, [r0]
   1a638:	cmp	r0, #0
   1a63c:	beq	1a66c <myhtml_data_process_state_ampersand@@Base+0xc0>
   1a640:	ldr	r0, [pc, #88]	; 1a6a0 <myhtml_data_process_state_ampersand@@Base+0xf4>
   1a644:	ldr	r0, [pc, r0]
   1a648:	str	r0, [r5]
   1a64c:	mov	r0, r6
   1a650:	ldrb	r1, [r7, r4]
   1a654:	bl	120f4 <myhtml_data_process_string_append_char@plt>
   1a658:	add	r0, r4, #1
   1a65c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a660:	ldr	r1, [pc, #40]	; 1a690 <myhtml_data_process_state_ampersand@@Base+0xe4>
   1a664:	ldr	r1, [pc, r1]
   1a668:	b	1a688 <myhtml_data_process_state_ampersand@@Base+0xdc>
   1a66c:	ldr	r0, [pc, #40]	; 1a69c <myhtml_data_process_state_ampersand@@Base+0xf0>
   1a670:	ldr	r0, [pc, r0]
   1a674:	str	r0, [r5]
   1a678:	mov	r0, r4
   1a67c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a680:	ldr	r1, [pc, #16]	; 1a698 <myhtml_data_process_state_ampersand@@Base+0xec>
   1a684:	ldr	r1, [pc, r1]
   1a688:	str	r1, [r5]
   1a68c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a690:	strdeq	sl, [pc], -ip
   1a694:	andeq	fp, pc, r8, asr r0	; <UNPREDICTABLE>
   1a698:	andeq	fp, pc, r8, lsl #4
   1a69c:	andeq	fp, pc, r4, lsr r2	; <UNPREDICTABLE>
   1a6a0:	strdeq	fp, [pc], -r8

0001a6a4 <myhtml_data_process_state_ampersand_hash@@Base>:
   1a6a4:	push	{r4, r5, fp, lr}
   1a6a8:	add	fp, sp, #8
   1a6ac:	ldrb	r2, [r2, r3]
   1a6b0:	mov	r5, r0
   1a6b4:	mov	r4, r3
   1a6b8:	orr	r0, r2, #32
   1a6bc:	cmp	r0, #120	; 0x78
   1a6c0:	bne	1a6e0 <myhtml_data_process_state_ampersand_hash@@Base+0x3c>
   1a6c4:	mov	r0, r1
   1a6c8:	mov	r1, r2
   1a6cc:	bl	120f4 <myhtml_data_process_string_append_char@plt>
   1a6d0:	ldr	r0, [pc, #32]	; 1a6f8 <myhtml_data_process_state_ampersand_hash@@Base+0x54>
   1a6d4:	add	r4, r4, #1
   1a6d8:	ldr	r0, [pc, r0]
   1a6dc:	b	1a6e8 <myhtml_data_process_state_ampersand_hash@@Base+0x44>
   1a6e0:	ldr	r0, [pc, #12]	; 1a6f4 <myhtml_data_process_state_ampersand_hash@@Base+0x50>
   1a6e4:	ldr	r0, [pc, r0]
   1a6e8:	str	r0, [r5]
   1a6ec:	mov	r0, r4
   1a6f0:	pop	{r4, r5, fp, pc}
   1a6f4:	andeq	fp, pc, r8, lsr #3
   1a6f8:	muleq	pc, r0, pc	; <UNPREDICTABLE>

0001a6fc <myhtml_data_process_state_ampersand_hash_x_data@@Base>:
   1a6fc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a700:	add	fp, sp, #24
   1a704:	sub	sp, sp, #8
   1a708:	ldr	ip, [fp, #8]
   1a70c:	mov	r5, r3
   1a710:	mov	r9, r2
   1a714:	mov	r8, r1
   1a718:	mov	r4, r0
   1a71c:	mov	r6, r3
   1a720:	cmp	r3, ip
   1a724:	bcs	1a784 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x88>
   1a728:	ldr	r3, [pc, #352]	; 1a890 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x194>
   1a72c:	add	r1, r9, r5
   1a730:	sub	r2, r5, ip
   1a734:	mov	r6, #0
   1a738:	add	r3, pc, r3
   1a73c:	ldrb	r7, [r1, -r6]
   1a740:	ldrb	r7, [r3, r7]
   1a744:	cmp	r7, #255	; 0xff
   1a748:	beq	1a7d0 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xd4>
   1a74c:	ldr	r7, [r4, #40]	; 0x28
   1a750:	lsr	r0, r7, #16
   1a754:	cmp	r0, #16
   1a758:	bhi	1a774 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x78>
   1a75c:	lsl	r0, r7, #4
   1a760:	str	r0, [r4, #40]	; 0x28
   1a764:	ldrb	r0, [r1, -r6]
   1a768:	ldrb	r0, [r3, r0]
   1a76c:	orr	r0, r0, r7, lsl #4
   1a770:	str	r0, [r4, #40]	; 0x28
   1a774:	sub	r6, r6, #1
   1a778:	cmp	r2, r6
   1a77c:	bne	1a73c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x40>
   1a780:	mov	r6, ip
   1a784:	ldr	r3, [r4, #32]
   1a788:	add	r1, r9, r5
   1a78c:	sub	r2, r6, r5
   1a790:	mov	r0, r8
   1a794:	bl	11d34 <myhtml_string_before_append_any_preprocessing@plt>
   1a798:	add	r0, r0, r5
   1a79c:	cmp	r6, r0
   1a7a0:	beq	1a81c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x120>
   1a7a4:	ldr	r1, [r4, #4]
   1a7a8:	cmp	r1, #0
   1a7ac:	beq	1a804 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x108>
   1a7b0:	ldrb	r2, [r4, #61]	; 0x3d
   1a7b4:	stm	sp, {r1, r2}
   1a7b8:	add	r2, r9, r0
   1a7bc:	sub	r3, r6, r0
   1a7c0:	add	r1, r4, #8
   1a7c4:	mov	r0, r8
   1a7c8:	bl	11efc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1a7cc:	b	1a818 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x11c>
   1a7d0:	ldr	r0, [pc, #188]	; 1a894 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x198>
   1a7d4:	cmp	r6, #0
   1a7d8:	ldr	r0, [pc, r0]
   1a7dc:	str	r0, [r4]
   1a7e0:	beq	1a82c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x130>
   1a7e4:	ldrb	r7, [r1, -r6]
   1a7e8:	mov	r0, r4
   1a7ec:	mov	r1, r8
   1a7f0:	bl	115fc <myhtml_data_process_state_end@plt>
   1a7f4:	cmp	r7, #59	; 0x3b
   1a7f8:	addeq	r5, r5, #1
   1a7fc:	sub	r5, r5, r6
   1a800:	b	1a820 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x124>
   1a804:	ldrb	r3, [r4, #61]	; 0x3d
   1a808:	add	r1, r9, r0
   1a80c:	sub	r2, r6, r0
   1a810:	mov	r0, r8
   1a814:	bl	11494 <myhtml_string_append_with_preprocessing@plt>
   1a818:	str	r0, [r4, #32]
   1a81c:	mov	r5, r6
   1a820:	mov	r0, r5
   1a824:	sub	sp, fp, #24
   1a828:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a82c:	ldr	r3, [r4, #32]
   1a830:	mov	r0, r8
   1a834:	mov	r2, #0
   1a838:	bl	11d34 <myhtml_string_before_append_any_preprocessing@plt>
   1a83c:	cmp	r0, #0
   1a840:	beq	1a820 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x124>
   1a844:	ldr	r2, [r4, #4]
   1a848:	add	r1, r0, r5
   1a84c:	cmp	r2, #0
   1a850:	beq	1a874 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x178>
   1a854:	ldrb	r3, [r4, #61]	; 0x3d
   1a858:	stm	sp, {r2, r3}
   1a85c:	add	r2, r9, r1
   1a860:	rsb	r3, r0, #0
   1a864:	add	r1, r4, #8
   1a868:	mov	r0, r8
   1a86c:	bl	11efc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1a870:	b	1a888 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x18c>
   1a874:	ldrb	r3, [r4, #61]	; 0x3d
   1a878:	rsb	r2, r0, #0
   1a87c:	add	r1, r9, r1
   1a880:	mov	r0, r8
   1a884:	bl	11494 <myhtml_string_append_with_preprocessing@plt>
   1a888:	str	r0, [r4, #32]
   1a88c:	b	1a820 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x124>
   1a890:	andeq	pc, sp, ip, lsr #30
   1a894:	andeq	fp, pc, ip, asr #1

0001a898 <myhtml_data_process_state_ampersand_hash_data@@Base>:
   1a898:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a89c:	add	fp, sp, #24
   1a8a0:	sub	sp, sp, #8
   1a8a4:	ldr	ip, [fp, #8]
   1a8a8:	mov	r5, r3
   1a8ac:	mov	r9, r2
   1a8b0:	mov	r8, r1
   1a8b4:	mov	r4, r0
   1a8b8:	mov	r6, r3
   1a8bc:	cmp	r3, ip
   1a8c0:	bcs	1a918 <myhtml_data_process_state_ampersand_hash_data@@Base+0x80>
   1a8c4:	ldr	lr, [pc, #344]	; 1aa24 <myhtml_data_process_state_ampersand_hash_data@@Base+0x18c>
   1a8c8:	sub	r2, r5, ip
   1a8cc:	add	r1, r9, r5
   1a8d0:	mov	r6, #0
   1a8d4:	add	lr, pc, lr
   1a8d8:	ldrb	r7, [r1, -r6]
   1a8dc:	sub	r0, r7, #48	; 0x30
   1a8e0:	cmp	r0, #10
   1a8e4:	bcs	1a964 <myhtml_data_process_state_ampersand_hash_data@@Base+0xcc>
   1a8e8:	ldr	r0, [r4, #40]	; 0x28
   1a8ec:	lsr	r3, r0, #16
   1a8f0:	cmp	r3, #16
   1a8f4:	bhi	1a908 <myhtml_data_process_state_ampersand_hash_data@@Base+0x70>
   1a8f8:	ldrb	r3, [lr, r7]
   1a8fc:	add	r0, r0, r0, lsl #2
   1a900:	add	r0, r3, r0, lsl #1
   1a904:	str	r0, [r4, #40]	; 0x28
   1a908:	sub	r6, r6, #1
   1a90c:	cmp	r2, r6
   1a910:	bne	1a8d8 <myhtml_data_process_state_ampersand_hash_data@@Base+0x40>
   1a914:	mov	r6, ip
   1a918:	ldr	r3, [r4, #32]
   1a91c:	add	r1, r9, r5
   1a920:	sub	r2, r6, r5
   1a924:	mov	r0, r8
   1a928:	bl	11d34 <myhtml_string_before_append_any_preprocessing@plt>
   1a92c:	add	r0, r0, r5
   1a930:	cmp	r6, r0
   1a934:	beq	1a9b0 <myhtml_data_process_state_ampersand_hash_data@@Base+0x118>
   1a938:	ldr	r1, [r4, #4]
   1a93c:	cmp	r1, #0
   1a940:	beq	1a998 <myhtml_data_process_state_ampersand_hash_data@@Base+0x100>
   1a944:	ldrb	r2, [r4, #61]	; 0x3d
   1a948:	stm	sp, {r1, r2}
   1a94c:	add	r2, r9, r0
   1a950:	sub	r3, r6, r0
   1a954:	add	r1, r4, #8
   1a958:	mov	r0, r8
   1a95c:	bl	11efc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1a960:	b	1a9ac <myhtml_data_process_state_ampersand_hash_data@@Base+0x114>
   1a964:	ldr	r0, [pc, #188]	; 1aa28 <myhtml_data_process_state_ampersand_hash_data@@Base+0x190>
   1a968:	cmp	r6, #0
   1a96c:	ldr	r0, [pc, r0]
   1a970:	str	r0, [r4]
   1a974:	beq	1a9c0 <myhtml_data_process_state_ampersand_hash_data@@Base+0x128>
   1a978:	ldrb	r7, [r1, -r6]
   1a97c:	mov	r0, r4
   1a980:	mov	r1, r8
   1a984:	bl	115fc <myhtml_data_process_state_end@plt>
   1a988:	cmp	r7, #59	; 0x3b
   1a98c:	addeq	r5, r5, #1
   1a990:	sub	r5, r5, r6
   1a994:	b	1a9b4 <myhtml_data_process_state_ampersand_hash_data@@Base+0x11c>
   1a998:	ldrb	r3, [r4, #61]	; 0x3d
   1a99c:	add	r1, r9, r0
   1a9a0:	sub	r2, r6, r0
   1a9a4:	mov	r0, r8
   1a9a8:	bl	11494 <myhtml_string_append_with_preprocessing@plt>
   1a9ac:	str	r0, [r4, #32]
   1a9b0:	mov	r5, r6
   1a9b4:	mov	r0, r5
   1a9b8:	sub	sp, fp, #24
   1a9bc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a9c0:	ldr	r3, [r4, #32]
   1a9c4:	mov	r0, r8
   1a9c8:	mov	r2, #0
   1a9cc:	bl	11d34 <myhtml_string_before_append_any_preprocessing@plt>
   1a9d0:	cmp	r0, #0
   1a9d4:	beq	1a9b4 <myhtml_data_process_state_ampersand_hash_data@@Base+0x11c>
   1a9d8:	ldr	r2, [r4, #4]
   1a9dc:	add	r1, r0, r5
   1a9e0:	cmp	r2, #0
   1a9e4:	beq	1aa08 <myhtml_data_process_state_ampersand_hash_data@@Base+0x170>
   1a9e8:	ldrb	r3, [r4, #61]	; 0x3d
   1a9ec:	stm	sp, {r2, r3}
   1a9f0:	add	r2, r9, r1
   1a9f4:	rsb	r3, r0, #0
   1a9f8:	add	r1, r4, #8
   1a9fc:	mov	r0, r8
   1aa00:	bl	11efc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1aa04:	b	1aa1c <myhtml_data_process_state_ampersand_hash_data@@Base+0x184>
   1aa08:	ldrb	r3, [r4, #61]	; 0x3d
   1aa0c:	rsb	r2, r0, #0
   1aa10:	add	r1, r9, r1
   1aa14:	mov	r0, r8
   1aa18:	bl	11494 <myhtml_string_append_with_preprocessing@plt>
   1aa1c:	str	r0, [r4, #32]
   1aa20:	b	1a9b4 <myhtml_data_process_state_ampersand_hash_data@@Base+0x11c>
   1aa24:	muleq	sp, r0, ip
   1aa28:	andeq	sl, pc, r8, lsr pc	; <UNPREDICTABLE>

0001aa2c <myhtml_data_process_state_ampersand_data@@Base>:
   1aa2c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1aa30:	add	fp, sp, #24
   1aa34:	sub	sp, sp, #16
   1aa38:	str	r3, [sp, #12]
   1aa3c:	mov	r6, r0
   1aa40:	mov	r4, r0
   1aa44:	mov	r7, r3
   1aa48:	ldr	r3, [fp, #8]
   1aa4c:	mov	r8, r2
   1aa50:	mov	r5, r1
   1aa54:	add	r2, sp, #12
   1aa58:	ldr	r0, [r6, #44]!	; 0x2c
   1aa5c:	mov	r1, r8
   1aa60:	ldr	r0, [r0, #4]
   1aa64:	str	r6, [sp]
   1aa68:	bl	119b0 <myhtml_charef_find_by_pos@plt>
   1aa6c:	mov	r9, r0
   1aa70:	ldr	r0, [r6, #12]
   1aa74:	cmp	r0, #0
   1aa78:	beq	1aaa4 <myhtml_data_process_state_ampersand_data@@Base+0x78>
   1aa7c:	ldr	r0, [pc, #424]	; 1ac2c <myhtml_data_process_state_ampersand_data@@Base+0x200>
   1aa80:	ldr	r0, [pc, r0]
   1aa84:	str	r0, [r4]
   1aa88:	ldr	r0, [sp, #12]
   1aa8c:	ldrb	r1, [r8, r0]
   1aa90:	cmp	r1, #59	; 0x3b
   1aa94:	bne	1aaac <myhtml_data_process_state_ampersand_data@@Base+0x80>
   1aa98:	add	r0, r0, #1
   1aa9c:	str	r0, [sp, #12]
   1aaa0:	b	1aad4 <myhtml_data_process_state_ampersand_data@@Base+0xa8>
   1aaa4:	ldr	r0, [sp, #12]
   1aaa8:	b	1ab44 <myhtml_data_process_state_ampersand_data@@Base+0x118>
   1aaac:	ldrb	r2, [r4, #60]	; 0x3c
   1aab0:	cmp	r2, #0
   1aab4:	beq	1aad4 <myhtml_data_process_state_ampersand_data@@Base+0xa8>
   1aab8:	cmp	r1, #61	; 0x3d
   1aabc:	beq	1ab44 <myhtml_data_process_state_ampersand_data@@Base+0x118>
   1aac0:	ldr	r2, [pc, #360]	; 1ac30 <myhtml_data_process_state_ampersand_data@@Base+0x204>
   1aac4:	add	r2, pc, r2
   1aac8:	ldr	r1, [r2, r1, lsl #2]
   1aacc:	cmp	r1, #255	; 0xff
   1aad0:	bne	1ab44 <myhtml_data_process_state_ampersand_data@@Base+0x118>
   1aad4:	ldr	r1, [r9, #20]
   1aad8:	cmp	r1, #0
   1aadc:	beq	1ab94 <myhtml_data_process_state_ampersand_data@@Base+0x168>
   1aae0:	add	r7, r9, #12
   1aae4:	mov	r6, #0
   1aae8:	ldmib	r5, {r0, r1}
   1aaec:	add	r1, r1, #5
   1aaf0:	cmp	r1, r0
   1aaf4:	bcc	1ab00 <myhtml_data_process_state_ampersand_data@@Base+0xd4>
   1aaf8:	mov	r0, r5
   1aafc:	bl	11b24 <mycore_string_realloc@plt>
   1ab00:	ldr	r1, [r4, #36]	; 0x24
   1ab04:	ldr	r2, [r5]
   1ab08:	ldr	r0, [r7, r6, lsl #2]
   1ab0c:	add	r1, r2, r1
   1ab10:	bl	11f5c <myencoding_codepoint_to_ascii_utf_8@plt>
   1ab14:	ldr	r1, [r4, #36]	; 0x24
   1ab18:	add	r6, r6, #1
   1ab1c:	add	r0, r1, r0
   1ab20:	str	r0, [r4, #36]	; 0x24
   1ab24:	ldr	r1, [r9, #20]
   1ab28:	cmp	r6, r1
   1ab2c:	bcc	1aae8 <myhtml_data_process_state_ampersand_data@@Base+0xbc>
   1ab30:	str	r0, [r5, #8]
   1ab34:	mov	r2, #0
   1ab38:	ldr	r1, [r5]
   1ab3c:	strb	r2, [r1, r0]
   1ab40:	b	1ac18 <myhtml_data_process_state_ampersand_data@@Base+0x1ec>
   1ab44:	add	r1, r8, r7
   1ab48:	ldr	r3, [r4, #32]
   1ab4c:	sub	r2, r0, r7
   1ab50:	mov	r0, r5
   1ab54:	bl	11d34 <myhtml_string_before_append_any_preprocessing@plt>
   1ab58:	ldr	r3, [sp, #12]
   1ab5c:	add	r0, r0, r7
   1ab60:	cmp	r3, r0
   1ab64:	beq	1ac20 <myhtml_data_process_state_ampersand_data@@Base+0x1f4>
   1ab68:	ldr	r1, [r4, #4]
   1ab6c:	cmp	r1, #0
   1ab70:	beq	1abe4 <myhtml_data_process_state_ampersand_data@@Base+0x1b8>
   1ab74:	ldrb	r2, [r4, #61]	; 0x3d
   1ab78:	stm	sp, {r1, r2}
   1ab7c:	add	r2, r8, r0
   1ab80:	sub	r3, r3, r0
   1ab84:	add	r1, r4, #8
   1ab88:	mov	r0, r5
   1ab8c:	bl	11efc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1ab90:	b	1abf8 <myhtml_data_process_state_ampersand_data@@Base+0x1cc>
   1ab94:	ldr	r3, [r4, #32]
   1ab98:	sub	r2, r0, r7
   1ab9c:	add	r1, r8, r7
   1aba0:	mov	r0, r5
   1aba4:	bl	11d34 <myhtml_string_before_append_any_preprocessing@plt>
   1aba8:	ldr	r3, [sp, #12]
   1abac:	add	r0, r0, r7
   1abb0:	cmp	r3, r0
   1abb4:	beq	1ac18 <myhtml_data_process_state_ampersand_data@@Base+0x1ec>
   1abb8:	ldr	r1, [r4, #4]
   1abbc:	cmp	r1, #0
   1abc0:	beq	1ac00 <myhtml_data_process_state_ampersand_data@@Base+0x1d4>
   1abc4:	ldrb	r2, [r4, #61]	; 0x3d
   1abc8:	stm	sp, {r1, r2}
   1abcc:	add	r2, r8, r0
   1abd0:	sub	r3, r3, r0
   1abd4:	add	r1, r4, #8
   1abd8:	mov	r0, r5
   1abdc:	bl	11efc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1abe0:	b	1ac14 <myhtml_data_process_state_ampersand_data@@Base+0x1e8>
   1abe4:	sub	r2, r3, r0
   1abe8:	ldrb	r3, [r4, #61]	; 0x3d
   1abec:	add	r1, r8, r0
   1abf0:	mov	r0, r5
   1abf4:	bl	11494 <myhtml_string_append_with_preprocessing@plt>
   1abf8:	str	r0, [r4, #32]
   1abfc:	b	1ac20 <myhtml_data_process_state_ampersand_data@@Base+0x1f4>
   1ac00:	sub	r2, r3, r0
   1ac04:	ldrb	r3, [r4, #61]	; 0x3d
   1ac08:	add	r1, r8, r0
   1ac0c:	mov	r0, r5
   1ac10:	bl	11494 <myhtml_string_append_with_preprocessing@plt>
   1ac14:	str	r0, [r4, #32]
   1ac18:	mov	r0, #0
   1ac1c:	str	r0, [r4, #48]	; 0x30
   1ac20:	ldr	r0, [sp, #12]
   1ac24:	sub	sp, fp, #24
   1ac28:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ac2c:	andeq	sl, pc, r4, lsr #28
   1ac30:	andeq	pc, sp, r0, lsr #13

0001ac34 <myhtml_data_process_state_end@@Base>:
   1ac34:	push	{r4, r5, fp, lr}
   1ac38:	add	fp, sp, #8
   1ac3c:	mov	r4, r1
   1ac40:	mov	r5, r0
   1ac44:	ldmib	r1, {r0, r1}
   1ac48:	add	r1, r1, #5
   1ac4c:	cmp	r1, r0
   1ac50:	bcc	1ac5c <myhtml_data_process_state_end@@Base+0x28>
   1ac54:	mov	r0, r4
   1ac58:	bl	11b24 <mycore_string_realloc@plt>
   1ac5c:	ldr	r0, [r5, #40]	; 0x28
   1ac60:	cmp	r0, #159	; 0x9f
   1ac64:	bhi	1ac80 <myhtml_data_process_state_end@@Base+0x4c>
   1ac68:	ldr	r1, [pc, #84]	; 1acc4 <myhtml_data_process_state_end@@Base+0x90>
   1ac6c:	add	r1, pc, r1
   1ac70:	ldr	r1, [r1, r0, lsl #2]
   1ac74:	mov	r0, r1
   1ac78:	str	r1, [r5, #40]	; 0x28
   1ac7c:	b	1ac9c <myhtml_data_process_state_end@@Base+0x68>
   1ac80:	mov	r2, r0
   1ac84:	movw	r1, #65533	; 0xfffd
   1ac88:	bfc	r2, #0, #11
   1ac8c:	cmp	r2, #55296	; 0xd800
   1ac90:	beq	1ac74 <myhtml_data_process_state_end@@Base+0x40>
   1ac94:	cmp	r0, #1114112	; 0x110000
   1ac98:	bcs	1ac74 <myhtml_data_process_state_end@@Base+0x40>
   1ac9c:	ldr	r5, [r5, #36]	; 0x24
   1aca0:	ldr	r1, [r4]
   1aca4:	add	r1, r1, r5
   1aca8:	bl	11f5c <myencoding_codepoint_to_ascii_utf_8@plt>
   1acac:	add	r0, r0, r5
   1acb0:	mov	r2, #0
   1acb4:	str	r0, [r4, #8]
   1acb8:	ldr	r1, [r4]
   1acbc:	strb	r2, [r1, r0]
   1acc0:	pop	{r4, r5, fp, pc}
   1acc4:	strdeq	pc, [sp], -r8

0001acc8 <myhtml_data_process@@Base>:
   1acc8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1accc:	add	fp, sp, #24
   1acd0:	sub	sp, sp, #8
   1acd4:	cmp	r3, #0
   1acd8:	beq	1ad14 <myhtml_data_process@@Base+0x4c>
   1acdc:	mov	r4, r3
   1ace0:	mov	r8, r2
   1ace4:	mov	r6, r1
   1ace8:	mov	r7, r0
   1acec:	mov	r3, #0
   1acf0:	ldr	r5, [r7]
   1acf4:	mov	r0, r7
   1acf8:	mov	r1, r6
   1acfc:	mov	r2, r8
   1ad00:	str	r4, [sp]
   1ad04:	blx	r5
   1ad08:	mov	r3, r0
   1ad0c:	cmp	r0, r4
   1ad10:	bcc	1acf0 <myhtml_data_process@@Base+0x28>
   1ad14:	sub	sp, fp, #24
   1ad18:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001ad1c <myhtml_data_process_end@@Base>:
   1ad1c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ad20:	add	fp, sp, #24
   1ad24:	mov	r5, r0
   1ad28:	mov	r4, r1
   1ad2c:	ldr	r0, [r0]
   1ad30:	ldr	r1, [pc, #224]	; 1ae18 <myhtml_data_process_end@@Base+0xfc>
   1ad34:	ldr	r1, [pc, r1]
   1ad38:	cmp	r0, r1
   1ad3c:	beq	1ad70 <myhtml_data_process_end@@Base+0x54>
   1ad40:	ldr	r1, [pc, #212]	; 1ae1c <myhtml_data_process_end@@Base+0x100>
   1ad44:	ldr	r1, [pc, r1]
   1ad48:	cmp	r0, r1
   1ad4c:	beq	1addc <myhtml_data_process_end@@Base+0xc0>
   1ad50:	ldr	r1, [pc, #200]	; 1ae20 <myhtml_data_process_end@@Base+0x104>
   1ad54:	ldr	r1, [pc, r1]
   1ad58:	cmp	r0, r1
   1ad5c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ad60:	ldr	r1, [r5, #36]	; 0x24
   1ad64:	ldr	r0, [r4, #8]
   1ad68:	add	r1, r1, #3
   1ad6c:	b	1ade8 <myhtml_data_process_end@@Base+0xcc>
   1ad70:	ldr	r6, [r5, #48]	; 0x30
   1ad74:	cmp	r6, #0
   1ad78:	beq	1ae14 <myhtml_data_process_end@@Base+0xf8>
   1ad7c:	ldr	r0, [r6, #20]
   1ad80:	cmp	r0, #0
   1ad84:	beq	1ae00 <myhtml_data_process_end@@Base+0xe4>
   1ad88:	add	r8, r6, #12
   1ad8c:	mov	r7, #0
   1ad90:	ldmib	r4, {r0, r1}
   1ad94:	add	r1, r1, #5
   1ad98:	cmp	r1, r0
   1ad9c:	bcc	1ada8 <myhtml_data_process_end@@Base+0x8c>
   1ada0:	mov	r0, r4
   1ada4:	bl	11b24 <mycore_string_realloc@plt>
   1ada8:	ldr	r1, [r5, #36]	; 0x24
   1adac:	ldr	r2, [r4]
   1adb0:	ldr	r0, [r8, r7, lsl #2]
   1adb4:	add	r1, r2, r1
   1adb8:	bl	11f5c <myencoding_codepoint_to_ascii_utf_8@plt>
   1adbc:	ldr	r1, [r5, #36]	; 0x24
   1adc0:	add	r7, r7, #1
   1adc4:	add	r0, r1, r0
   1adc8:	str	r0, [r5, #36]	; 0x24
   1adcc:	ldr	r1, [r6, #20]
   1add0:	cmp	r7, r1
   1add4:	bcc	1ad90 <myhtml_data_process_end@@Base+0x74>
   1add8:	b	1ae04 <myhtml_data_process_end@@Base+0xe8>
   1addc:	ldr	r1, [r5, #36]	; 0x24
   1ade0:	ldr	r0, [r4, #8]
   1ade4:	add	r1, r1, #2
   1ade8:	cmp	r0, r1
   1adec:	beq	1ae14 <myhtml_data_process_end@@Base+0xf8>
   1adf0:	mov	r0, r5
   1adf4:	mov	r1, r4
   1adf8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1adfc:	b	1ac34 <myhtml_data_process_state_end@@Base>
   1ae00:	ldr	r0, [r5, #36]	; 0x24
   1ae04:	str	r0, [r4, #8]
   1ae08:	mov	r2, #0
   1ae0c:	ldr	r1, [r4]
   1ae10:	strb	r2, [r1, r0]
   1ae14:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ae18:	andeq	sl, pc, r8, lsl #20
   1ae1c:	andeq	sl, pc, r8, asr #22
   1ae20:	andeq	sl, pc, r4, lsl r9	; <UNPREDICTABLE>

0001ae24 <myhtml_init_marker@@Base>:
   1ae24:	push	{r4, sl, fp, lr}
   1ae28:	add	fp, sp, #8
   1ae2c:	mov	r4, r0
   1ae30:	mov	r0, #44	; 0x2c
   1ae34:	bl	11dac <mycore_malloc@plt>
   1ae38:	cmp	r0, #0
   1ae3c:	str	r0, [r4, #36]	; 0x24
   1ae40:	popeq	{r4, sl, fp, pc}
   1ae44:	pop	{r4, sl, fp, lr}
   1ae48:	b	12124 <myhtml_tree_node_clean@plt>

0001ae4c <myhtml_destroy_marker@@Base>:
   1ae4c:	ldr	r0, [r0, #36]	; 0x24
   1ae50:	cmp	r0, #0
   1ae54:	bxeq	lr
   1ae58:	b	11eb4 <mycore_free@plt>

0001ae5c <myhtml_stream_create@@Base>:
   1ae5c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ae60:	add	fp, sp, #24
   1ae64:	mov	r4, r1
   1ae68:	mov	r5, r0
   1ae6c:	cmp	r2, #0
   1ae70:	beq	1aed0 <myhtml_stream_create@@Base+0x74>
   1ae74:	mov	r8, r3
   1ae78:	mov	r7, r2
   1ae7c:	bl	11170 <mythread_create@plt>
   1ae80:	cmp	r0, #0
   1ae84:	str	r0, [r5]
   1ae88:	mov	r2, r7
   1ae8c:	mov	r3, r8
   1ae90:	mov	r6, #0
   1ae94:	moveq	r1, #9
   1ae98:	streq	r1, [r4]
   1ae9c:	mov	r1, #0
   1aea0:	bl	12130 <mythread_init@plt>
   1aea4:	cmp	r0, #0
   1aea8:	str	r0, [r4]
   1aeac:	beq	1aedc <myhtml_stream_create@@Base+0x80>
   1aeb0:	ldr	r0, [r5]
   1aeb4:	mov	r1, #0
   1aeb8:	mov	r2, #0
   1aebc:	mov	r3, #1
   1aec0:	bl	11b6c <mythread_destroy@plt>
   1aec4:	str	r0, [r5]
   1aec8:	ldr	r6, [r4]
   1aecc:	b	1aedc <myhtml_stream_create@@Base+0x80>
   1aed0:	mov	r6, #0
   1aed4:	str	r6, [r5]
   1aed8:	str	r6, [r4]
   1aedc:	mov	r0, r6
   1aee0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001aee4 <myhtml_batch_create@@Base>:
   1aee4:	push	{r4, r5, r6, r7, fp, lr}
   1aee8:	add	fp, sp, #16
   1aeec:	mov	r4, r1
   1aef0:	mov	r5, r0
   1aef4:	cmp	r2, #0
   1aef8:	beq	1af78 <myhtml_batch_create@@Base+0x94>
   1aefc:	mov	r6, r3
   1af00:	mov	r7, r2
   1af04:	bl	11170 <mythread_create@plt>
   1af08:	str	r0, [r5, #4]
   1af0c:	ldr	r1, [r5]
   1af10:	cmp	r1, #0
   1af14:	bne	1af3c <myhtml_batch_create@@Base+0x58>
   1af18:	mov	r0, #0
   1af1c:	mov	r1, #0
   1af20:	mov	r2, #0
   1af24:	mov	r3, #1
   1af28:	bl	11b6c <mythread_destroy@plt>
   1af2c:	str	r0, [r5]
   1af30:	mov	r0, #9
   1af34:	str	r0, [r4]
   1af38:	ldr	r0, [r5, #4]
   1af3c:	mov	r1, #1
   1af40:	mov	r2, r7
   1af44:	mov	r3, r6
   1af48:	bl	12130 <mythread_init@plt>
   1af4c:	cmp	r0, #0
   1af50:	str	r0, [r4]
   1af54:	beq	1af88 <myhtml_batch_create@@Base+0xa4>
   1af58:	ldr	r0, [r5, #4]
   1af5c:	mov	r1, #0
   1af60:	mov	r2, #0
   1af64:	mov	r3, #1
   1af68:	bl	11b6c <mythread_destroy@plt>
   1af6c:	str	r0, [r5, #4]
   1af70:	ldr	r0, [r4]
   1af74:	pop	{r4, r5, r6, r7, fp, pc}
   1af78:	mov	r0, #0
   1af7c:	str	r0, [r5, #4]
   1af80:	str	r0, [r4]
   1af84:	pop	{r4, r5, r6, r7, fp, pc}
   1af88:	mov	r0, #0
   1af8c:	pop	{r4, r5, r6, r7, fp, pc}

0001af90 <myhtml_create_stream_and_batch@@Base>:
   1af90:	push	{r4, r5, r6, sl, fp, lr}
   1af94:	add	fp, sp, #16
   1af98:	sub	sp, sp, #8
   1af9c:	mov	r5, r1
   1afa0:	mov	r6, r2
   1afa4:	add	r1, sp, #4
   1afa8:	mov	r3, #0
   1afac:	mov	r4, r0
   1afb0:	mov	r2, r5
   1afb4:	bl	116a4 <myhtml_stream_create@plt>
   1afb8:	cmp	r0, #0
   1afbc:	bne	1aff4 <myhtml_create_stream_and_batch@@Base+0x64>
   1afc0:	add	r1, sp, #4
   1afc4:	mov	r0, r4
   1afc8:	mov	r2, r6
   1afcc:	mov	r3, r5
   1afd0:	bl	117f4 <myhtml_batch_create@plt>
   1afd4:	cmp	r0, #0
   1afd8:	beq	1aff4 <myhtml_create_stream_and_batch@@Base+0x64>
   1afdc:	ldr	r0, [r4]
   1afe0:	mov	r1, #0
   1afe4:	mov	r2, #0
   1afe8:	mov	r3, #1
   1afec:	bl	11b6c <mythread_destroy@plt>
   1aff0:	str	r0, [r4]
   1aff4:	ldr	r0, [sp, #4]
   1aff8:	sub	sp, fp, #16
   1affc:	pop	{r4, r5, r6, sl, fp, pc}

0001b000 <myhtml_create@@Base>:
   1b000:	mov	r0, #1
   1b004:	mov	r1, #40	; 0x28
   1b008:	b	11248 <mycore_calloc@plt>

0001b00c <myhtml_init@@Base>:
   1b00c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b010:	add	fp, sp, #24
   1b014:	sub	sp, sp, #8
   1b018:	mov	r4, r2
   1b01c:	mov	r6, r1
   1b020:	mov	r5, r0
   1b024:	str	r1, [r0, #32]
   1b028:	bl	11c38 <myhtml_init_marker@plt>
   1b02c:	mov	r0, r5
   1b030:	bl	11050 <myhtml_tokenizer_state_init@plt>
   1b034:	cmp	r0, #0
   1b038:	str	r0, [sp, #4]
   1b03c:	bne	1b054 <myhtml_init@@Base+0x48>
   1b040:	mov	r0, r5
   1b044:	bl	11d10 <myhtml_rules_init@plt>
   1b048:	cmp	r0, #0
   1b04c:	str	r0, [sp, #4]
   1b050:	beq	1b05c <myhtml_init@@Base+0x50>
   1b054:	sub	sp, fp, #24
   1b058:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b05c:	cmp	r4, #0
   1b060:	movweq	r4, #1
   1b064:	cmp	r6, #2
   1b068:	beq	1b098 <myhtml_init@@Base+0x8c>
   1b06c:	cmp	r6, #1
   1b070:	bne	1b0ec <myhtml_init@@Base+0xe0>
   1b074:	mov	r0, r5
   1b078:	mov	r1, #0
   1b07c:	mov	r2, #0
   1b080:	mov	r6, #0
   1b084:	bl	1174c <myhtml_create_stream_and_batch@plt>
   1b088:	cmp	r0, #0
   1b08c:	str	r0, [sp, #4]
   1b090:	bne	1b054 <myhtml_init@@Base+0x48>
   1b094:	b	1b1a8 <myhtml_init@@Base+0x19c>
   1b098:	mov	r0, r5
   1b09c:	mov	r1, #1
   1b0a0:	mov	r2, #0
   1b0a4:	bl	1174c <myhtml_create_stream_and_batch@plt>
   1b0a8:	cmp	r0, #0
   1b0ac:	str	r0, [sp, #4]
   1b0b0:	bne	1b054 <myhtml_init@@Base+0x48>
   1b0b4:	add	r0, sp, #4
   1b0b8:	bl	119c8 <mythread_queue_list_create@plt>
   1b0bc:	ldr	r3, [r5]
   1b0c0:	str	r0, [r3, #16]
   1b0c4:	mov	r0, r3
   1b0c8:	mov	r3, #4
   1b0cc:	ldr	r1, [pc, #244]	; 1b1c8 <myhtml_init@@Base+0x1bc>
   1b0d0:	ldr	r1, [pc, r1]
   1b0d4:	ldr	r2, [pc, #240]	; 1b1cc <myhtml_init@@Base+0x1c0>
   1b0d8:	ldr	r2, [pc, r2]
   1b0dc:	bl	11a88 <myhread_entry_create@plt>
   1b0e0:	mov	r6, r0
   1b0e4:	str	r0, [sp, #4]
   1b0e8:	b	1b1a8 <myhtml_init@@Base+0x19c>
   1b0ec:	cmp	r4, #2
   1b0f0:	mov	r0, r5
   1b0f4:	mov	r1, #1
   1b0f8:	movls	r4, #2
   1b0fc:	sub	r2, r4, #1
   1b100:	bl	1174c <myhtml_create_stream_and_batch@plt>
   1b104:	cmp	r0, #0
   1b108:	str	r0, [sp, #4]
   1b10c:	bne	1b054 <myhtml_init@@Base+0x48>
   1b110:	add	r0, sp, #4
   1b114:	bl	119c8 <mythread_queue_list_create@plt>
   1b118:	ldr	r3, [r5]
   1b11c:	str	r0, [r3, #16]
   1b120:	ldr	r1, [r5, #4]
   1b124:	str	r0, [r1, #16]
   1b128:	mov	r0, r3
   1b12c:	mov	r3, #4
   1b130:	ldr	r1, [pc, #152]	; 1b1d0 <myhtml_init@@Base+0x1c4>
   1b134:	ldr	r1, [pc, r1]
   1b138:	ldr	r2, [pc, #148]	; 1b1d4 <myhtml_init@@Base+0x1c8>
   1b13c:	ldr	r2, [pc, r2]
   1b140:	bl	11a88 <myhread_entry_create@plt>
   1b144:	cmp	r0, #0
   1b148:	str	r0, [sp, #4]
   1b14c:	bne	1b054 <myhtml_init@@Base+0x48>
   1b150:	ldr	r0, [r5, #4]
   1b154:	ldr	r1, [r0, #8]
   1b158:	cmp	r1, #0
   1b15c:	beq	1b1a4 <myhtml_init@@Base+0x198>
   1b160:	ldr	r8, [pc, #112]	; 1b1d8 <myhtml_init@@Base+0x1cc>
   1b164:	mov	r6, #0
   1b168:	ldr	r8, [pc, r8]
   1b16c:	ldr	r7, [pc, #104]	; 1b1dc <myhtml_init@@Base+0x1d0>
   1b170:	ldr	r7, [pc, r7]
   1b174:	mov	r1, r8
   1b178:	mov	r2, r7
   1b17c:	mov	r3, #4
   1b180:	bl	11a88 <myhread_entry_create@plt>
   1b184:	cmp	r0, #0
   1b188:	str	r0, [sp, #4]
   1b18c:	bne	1b054 <myhtml_init@@Base+0x48>
   1b190:	ldr	r0, [r5, #4]
   1b194:	add	r6, r6, #1
   1b198:	ldr	r1, [r0, #8]
   1b19c:	cmp	r6, r1
   1b1a0:	bcc	1b174 <myhtml_init@@Base+0x168>
   1b1a4:	mov	r6, #0
   1b1a8:	ldm	r5, {r1, r2}
   1b1ac:	mov	r0, #0
   1b1b0:	str	r1, [r5, #8]
   1b1b4:	str	r2, [r5, #12]
   1b1b8:	str	r0, [r5, #16]
   1b1bc:	str	r4, [r5, #20]
   1b1c0:	mov	r0, r6
   1b1c4:	b	1b054 <myhtml_init@@Base+0x48>
   1b1c8:	andeq	sl, pc, r0, ror #10
   1b1cc:	andeq	sl, pc, r4, ror #10
   1b1d0:	strdeq	sl, [pc], -ip
   1b1d4:	andeq	sl, pc, ip, ror r7	; <UNPREDICTABLE>
   1b1d8:			; <UNDEFINED> instruction: 0x000fa4bc
   1b1dc:	ldrdeq	sl, [pc], -r4

0001b1e0 <myhtml_clean@@Base>:
   1b1e0:	bx	lr

0001b1e4 <myhtml_destroy@@Base>:
   1b1e4:	cmp	r0, #0
   1b1e8:	beq	1b29c <myhtml_destroy@@Base+0xb8>
   1b1ec:	push	{r4, r5, fp, lr}
   1b1f0:	add	fp, sp, #8
   1b1f4:	mov	r4, r0
   1b1f8:	ldr	r0, [r0, #36]	; 0x24
   1b1fc:	cmp	r0, #0
   1b200:	beq	1b208 <myhtml_destroy@@Base+0x24>
   1b204:	bl	11eb4 <mycore_free@plt>
   1b208:	ldr	r0, [r4]
   1b20c:	cmp	r0, #0
   1b210:	beq	1b278 <myhtml_destroy@@Base+0x94>
   1b214:	ldr	r5, [r0, #16]
   1b218:	cmp	r5, #0
   1b21c:	beq	1b22c <myhtml_destroy@@Base+0x48>
   1b220:	mov	r1, r5
   1b224:	bl	11ec0 <mythread_queue_list_wait_for_done@plt>
   1b228:	ldr	r0, [r4]
   1b22c:	ldr	r1, [pc, #112]	; 1b2a4 <myhtml_destroy@@Base+0xc0>
   1b230:	mov	r2, #0
   1b234:	mov	r3, #1
   1b238:	ldr	r1, [pc, r1]
   1b23c:	bl	11b6c <mythread_destroy@plt>
   1b240:	str	r0, [r4]
   1b244:	ldr	r0, [r4, #4]
   1b248:	cmp	r0, #0
   1b24c:	beq	1b268 <myhtml_destroy@@Base+0x84>
   1b250:	ldr	r1, [pc, #80]	; 1b2a8 <myhtml_destroy@@Base+0xc4>
   1b254:	mov	r2, #0
   1b258:	mov	r3, #1
   1b25c:	ldr	r1, [pc, r1]
   1b260:	bl	11b6c <mythread_destroy@plt>
   1b264:	str	r0, [r4, #4]
   1b268:	cmp	r5, #0
   1b26c:	beq	1b278 <myhtml_destroy@@Base+0x94>
   1b270:	mov	r0, r5
   1b274:	bl	11410 <mythread_queue_list_destroy@plt>
   1b278:	mov	r0, r4
   1b27c:	bl	113ec <myhtml_tokenizer_state_destroy@plt>
   1b280:	ldr	r0, [r4, #28]
   1b284:	cmp	r0, #0
   1b288:	beq	1b290 <myhtml_destroy@@Base+0xac>
   1b28c:	bl	11eb4 <mycore_free@plt>
   1b290:	mov	r0, r4
   1b294:	bl	11eb4 <mycore_free@plt>
   1b298:	pop	{r4, r5, fp, lr}
   1b29c:	mov	r0, #0
   1b2a0:	bx	lr
   1b2a4:	andeq	sl, pc, r0, lsr #10
   1b2a8:	strdeq	sl, [pc], -ip

0001b2ac <myhtml_parse@@Base>:
   1b2ac:	push	{r4, r5, r6, r7, fp, lr}
   1b2b0:	add	fp, sp, #16
   1b2b4:	mov	r4, r0
   1b2b8:	ldr	r0, [r0, #180]	; 0xb4
   1b2bc:	mov	r5, r3
   1b2c0:	mov	r6, r2
   1b2c4:	mov	r7, r1
   1b2c8:	tst	r0, #32
   1b2cc:	beq	1b2d8 <myhtml_parse@@Base+0x2c>
   1b2d0:	mov	r0, r4
   1b2d4:	bl	118f0 <myhtml_tree_clean@plt>
   1b2d8:	cmp	r7, #41	; 0x29
   1b2dc:	mov	r0, r4
   1b2e0:	mov	r1, r6
   1b2e4:	mov	r2, r5
   1b2e8:	strls	r7, [r4, #200]	; 0xc8
   1b2ec:	strls	r7, [r4, #204]	; 0xcc
   1b2f0:	bl	11428 <myhtml_tokenizer_begin@plt>
   1b2f4:	cmp	r0, #0
   1b2f8:	popne	{r4, r5, r6, r7, fp, pc}
   1b2fc:	mov	r0, r4
   1b300:	pop	{r4, r5, r6, r7, fp, lr}
   1b304:	b	11530 <myhtml_tokenizer_end@plt>

0001b308 <myhtml_encoding_set@@Base>:
   1b308:	cmp	r1, #41	; 0x29
   1b30c:	strls	r1, [r0, #200]	; 0xc8
   1b310:	strls	r1, [r0, #204]	; 0xcc
   1b314:	bx	lr

0001b318 <myhtml_parse_fragment@@Base>:
   1b318:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b31c:	add	fp, sp, #24
   1b320:	mov	r4, r0
   1b324:	ldr	r0, [r0, #180]	; 0xb4
   1b328:	ldr	r5, [fp, #12]
   1b32c:	ldr	r6, [fp, #8]
   1b330:	mov	r8, r3
   1b334:	mov	r9, r2
   1b338:	mov	r7, r1
   1b33c:	tst	r0, #32
   1b340:	beq	1b34c <myhtml_parse_fragment@@Base+0x34>
   1b344:	mov	r0, r4
   1b348:	bl	118f0 <myhtml_tree_clean@plt>
   1b34c:	cmp	r6, #0
   1b350:	mov	r0, r4
   1b354:	movweq	r6, #42	; 0x2a
   1b358:	cmp	r5, #0
   1b35c:	movweq	r5, #1
   1b360:	mov	r1, r6
   1b364:	mov	r2, r5
   1b368:	bl	1102c <myhtml_tokenizer_fragment_init@plt>
   1b36c:	cmp	r0, #0
   1b370:	beq	1b39c <myhtml_parse_fragment@@Base+0x84>
   1b374:	cmp	r7, #41	; 0x29
   1b378:	mov	r0, r4
   1b37c:	mov	r1, r9
   1b380:	mov	r2, r8
   1b384:	strls	r7, [r4, #200]	; 0xc8
   1b388:	strls	r7, [r4, #204]	; 0xcc
   1b38c:	bl	11428 <myhtml_tokenizer_begin@plt>
   1b390:	cmp	r0, #0
   1b394:	beq	1b3a4 <myhtml_parse_fragment@@Base+0x8c>
   1b398:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b39c:	movw	r0, #37165	; 0x912d
   1b3a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b3a4:	mov	r0, r4
   1b3a8:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b3ac:	b	11530 <myhtml_tokenizer_end@plt>

0001b3b0 <myhtml_parse_single@@Base>:
   1b3b0:	push	{r4, r5, r6, r7, fp, lr}
   1b3b4:	add	fp, sp, #16
   1b3b8:	mov	r4, r0
   1b3bc:	ldr	r0, [r0, #180]	; 0xb4
   1b3c0:	mov	r5, r3
   1b3c4:	mov	r6, r2
   1b3c8:	mov	r7, r1
   1b3cc:	tst	r0, #32
   1b3d0:	beq	1b3dc <myhtml_parse_single@@Base+0x2c>
   1b3d4:	mov	r0, r4
   1b3d8:	bl	118f0 <myhtml_tree_clean@plt>
   1b3dc:	ldr	r0, [r4, #180]	; 0xb4
   1b3e0:	cmp	r7, #41	; 0x29
   1b3e4:	mov	r1, r6
   1b3e8:	mov	r2, r5
   1b3ec:	orr	r0, r0, #16
   1b3f0:	str	r0, [r4, #180]	; 0xb4
   1b3f4:	mov	r0, r4
   1b3f8:	strls	r7, [r4, #200]	; 0xc8
   1b3fc:	strls	r7, [r4, #204]	; 0xcc
   1b400:	bl	11428 <myhtml_tokenizer_begin@plt>
   1b404:	cmp	r0, #0
   1b408:	popne	{r4, r5, r6, r7, fp, pc}
   1b40c:	mov	r0, r4
   1b410:	pop	{r4, r5, r6, r7, fp, lr}
   1b414:	b	11530 <myhtml_tokenizer_end@plt>

0001b418 <myhtml_parse_fragment_single@@Base>:
   1b418:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b41c:	add	fp, sp, #24
   1b420:	mov	r4, r0
   1b424:	ldr	r0, [r0, #180]	; 0xb4
   1b428:	ldr	r5, [fp, #12]
   1b42c:	ldr	r6, [fp, #8]
   1b430:	mov	r8, r3
   1b434:	mov	r9, r2
   1b438:	mov	r7, r1
   1b43c:	tst	r0, #32
   1b440:	beq	1b44c <myhtml_parse_fragment_single@@Base+0x34>
   1b444:	mov	r0, r4
   1b448:	bl	118f0 <myhtml_tree_clean@plt>
   1b44c:	ldr	r0, [r4, #180]	; 0xb4
   1b450:	cmp	r6, #0
   1b454:	movweq	r6, #42	; 0x2a
   1b458:	cmp	r5, #0
   1b45c:	movweq	r5, #1
   1b460:	mov	r1, r6
   1b464:	mov	r2, r5
   1b468:	orr	r0, r0, #16
   1b46c:	str	r0, [r4, #180]	; 0xb4
   1b470:	mov	r0, r4
   1b474:	bl	1102c <myhtml_tokenizer_fragment_init@plt>
   1b478:	cmp	r0, #0
   1b47c:	beq	1b4a8 <myhtml_parse_fragment_single@@Base+0x90>
   1b480:	cmp	r7, #41	; 0x29
   1b484:	mov	r0, r4
   1b488:	mov	r1, r9
   1b48c:	mov	r2, r8
   1b490:	strls	r7, [r4, #200]	; 0xc8
   1b494:	strls	r7, [r4, #204]	; 0xcc
   1b498:	bl	11428 <myhtml_tokenizer_begin@plt>
   1b49c:	cmp	r0, #0
   1b4a0:	beq	1b4b0 <myhtml_parse_fragment_single@@Base+0x98>
   1b4a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b4a8:	movw	r0, #37165	; 0x912d
   1b4ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b4b0:	mov	r0, r4
   1b4b4:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b4b8:	b	11530 <myhtml_tokenizer_end@plt>

0001b4bc <myhtml_parse_chunk@@Base>:
   1b4bc:	push	{r4, r5, r6, sl, fp, lr}
   1b4c0:	add	fp, sp, #16
   1b4c4:	mov	r6, r0
   1b4c8:	ldr	r0, [r0, #180]	; 0xb4
   1b4cc:	mov	r4, r2
   1b4d0:	mov	r5, r1
   1b4d4:	tst	r0, #32
   1b4d8:	beq	1b4e4 <myhtml_parse_chunk@@Base+0x28>
   1b4dc:	mov	r0, r6
   1b4e0:	bl	118f0 <myhtml_tree_clean@plt>
   1b4e4:	mov	r0, r6
   1b4e8:	mov	r1, r5
   1b4ec:	mov	r2, r4
   1b4f0:	pop	{r4, r5, r6, sl, fp, lr}
   1b4f4:	b	113c8 <myhtml_tokenizer_chunk@plt>

0001b4f8 <myhtml_parse_chunk_fragment@@Base>:
   1b4f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b4fc:	add	fp, sp, #24
   1b500:	mov	r6, r0
   1b504:	ldr	r0, [r0, #180]	; 0xb4
   1b508:	ldr	r4, [fp, #8]
   1b50c:	mov	r7, r3
   1b510:	mov	r8, r2
   1b514:	mov	r5, r1
   1b518:	tst	r0, #32
   1b51c:	beq	1b528 <myhtml_parse_chunk_fragment@@Base+0x30>
   1b520:	mov	r0, r6
   1b524:	bl	118f0 <myhtml_tree_clean@plt>
   1b528:	cmp	r7, #0
   1b52c:	mov	r0, r6
   1b530:	movweq	r7, #42	; 0x2a
   1b534:	cmp	r4, #0
   1b538:	movweq	r4, #1
   1b53c:	mov	r1, r7
   1b540:	mov	r2, r4
   1b544:	bl	1102c <myhtml_tokenizer_fragment_init@plt>
   1b548:	cmp	r0, #0
   1b54c:	beq	1b564 <myhtml_parse_chunk_fragment@@Base+0x6c>
   1b550:	mov	r0, r6
   1b554:	mov	r1, r5
   1b558:	mov	r2, r8
   1b55c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b560:	b	113c8 <myhtml_tokenizer_chunk@plt>
   1b564:	movw	r0, #37165	; 0x912d
   1b568:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001b56c <myhtml_parse_chunk_single@@Base>:
   1b56c:	ldr	r3, [r0, #180]	; 0xb4
   1b570:	tst	r3, #16
   1b574:	bne	1b584 <myhtml_parse_chunk_single@@Base+0x18>
   1b578:	ldr	r3, [r0, #180]	; 0xb4
   1b57c:	orr	r3, r3, #16
   1b580:	str	r3, [r0, #180]	; 0xb4
   1b584:	b	1b4bc <myhtml_parse_chunk@@Base>

0001b588 <myhtml_parse_chunk_fragment_single@@Base>:
   1b588:	ldr	ip, [r0, #180]	; 0xb4
   1b58c:	tst	ip, #16
   1b590:	bne	1b5a0 <myhtml_parse_chunk_fragment_single@@Base+0x18>
   1b594:	ldr	ip, [r0, #180]	; 0xb4
   1b598:	orr	ip, ip, #16
   1b59c:	str	ip, [r0, #180]	; 0xb4
   1b5a0:	b	1b4f8 <myhtml_parse_chunk_fragment@@Base>

0001b5a4 <myhtml_parse_chunk_end@@Base>:
   1b5a4:	b	11530 <myhtml_tokenizer_end@plt>

0001b5a8 <myhtml_encoding_get@@Base>:
   1b5a8:	ldr	r0, [r0, #200]	; 0xc8
   1b5ac:	bx	lr

0001b5b0 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base>:
   1b5b0:	push	{r4, r5, r6, sl, fp, lr}
   1b5b4:	add	fp, sp, #16
   1b5b8:	cmp	r0, #0
   1b5bc:	beq	1b630 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x80>
   1b5c0:	mov	r4, r2
   1b5c4:	mov	r5, r1
   1b5c8:	mov	r6, r0
   1b5cc:	ldr	r0, [r6, #4]
   1b5d0:	cmp	r0, r4
   1b5d4:	bne	1b610 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x60>
   1b5d8:	ldr	r0, [r5]
   1b5dc:	ldr	r1, [r5, #8]
   1b5e0:	str	r6, [r0, r1, lsl #2]
   1b5e4:	add	r0, r1, #1
   1b5e8:	str	r0, [r5, #8]
   1b5ec:	ldr	r1, [r5, #4]
   1b5f0:	cmp	r0, r1
   1b5f4:	bcc	1b610 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x60>
   1b5f8:	mov	r0, r5
   1b5fc:	mov	r1, #1024	; 0x400
   1b600:	mov	r2, #0
   1b604:	bl	11ee4 <myhtml_collection_check_size@plt>
   1b608:	cmp	r0, #0
   1b60c:	bne	1b634 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x84>
   1b610:	ldr	r0, [r6, #20]
   1b614:	cmp	r0, #0
   1b618:	movne	r1, r5
   1b61c:	movne	r2, r4
   1b620:	blne	11d64 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>
   1b624:	ldr	r6, [r6, #16]
   1b628:	cmp	r6, #0
   1b62c:	bne	1b5cc <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x1c>
   1b630:	mov	r0, #0
   1b634:	pop	{r4, r5, r6, sl, fp, pc}

0001b638 <myhtml_collection_check_size@@Base>:
   1b638:	push	{r4, r5, r6, sl, fp, lr}
   1b63c:	add	fp, sp, #16
   1b640:	mov	r5, r0
   1b644:	ldr	r3, [r0, #4]
   1b648:	ldr	r0, [r0, #8]
   1b64c:	mov	r4, #0
   1b650:	add	r0, r0, r1
   1b654:	cmp	r0, r3
   1b658:	bcc	1b67c <myhtml_collection_check_size@@Base+0x44>
   1b65c:	add	r0, r2, r0
   1b660:	add	r6, r0, #1
   1b664:	ldr	r0, [r5]
   1b668:	lsl	r1, r6, #2
   1b66c:	bl	10f78 <mycore_realloc@plt>
   1b670:	cmp	r0, #0
   1b674:	moveq	r4, #2
   1b678:	stmne	r5, {r0, r6}
   1b67c:	mov	r0, r4
   1b680:	pop	{r4, r5, r6, sl, fp, pc}

0001b684 <myhtml_get_nodes_by_tag_id_in_scope@@Base>:
   1b684:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b688:	add	fp, sp, #24
   1b68c:	sub	sp, sp, #8
   1b690:	cmp	r2, #0
   1b694:	beq	1b6f4 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x70>
   1b698:	ldr	r8, [fp, #8]
   1b69c:	mov	r5, #0
   1b6a0:	mov	r6, r3
   1b6a4:	mov	r7, r2
   1b6a8:	mov	r4, r1
   1b6ac:	cmp	r1, #0
   1b6b0:	str	r5, [sp, #4]
   1b6b4:	beq	1b6fc <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x78>
   1b6b8:	ldr	r0, [r7, #20]
   1b6bc:	cmp	r0, #0
   1b6c0:	beq	1b6d8 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x54>
   1b6c4:	mov	r1, r4
   1b6c8:	mov	r2, r6
   1b6cc:	bl	11d64 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>
   1b6d0:	mov	r5, r0
   1b6d4:	str	r0, [sp, #4]
   1b6d8:	ldr	r0, [r4]
   1b6dc:	ldr	r1, [r4, #8]
   1b6e0:	mov	r2, #0
   1b6e4:	cmp	r8, #0
   1b6e8:	str	r2, [r0, r1, lsl #2]
   1b6ec:	strne	r5, [r8]
   1b6f0:	b	1b720 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x9c>
   1b6f4:	mov	r4, #0
   1b6f8:	b	1b720 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x9c>
   1b6fc:	add	r1, sp, #4
   1b700:	mov	r0, #1024	; 0x400
   1b704:	bl	115b4 <myhtml_collection_create@plt>
   1b708:	mov	r4, r0
   1b70c:	ldr	r0, [sp, #4]
   1b710:	cmp	r0, #0
   1b714:	beq	1b6b8 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x34>
   1b718:	cmp	r8, #0
   1b71c:	strne	r0, [r8]
   1b720:	mov	r0, r4
   1b724:	sub	sp, fp, #24
   1b728:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001b72c <myhtml_collection_create@@Base>:
   1b72c:	push	{r4, r5, r6, r7, fp, lr}
   1b730:	add	fp, sp, #16
   1b734:	mov	r7, r0
   1b738:	mov	r0, #12
   1b73c:	mov	r4, r1
   1b740:	bl	11dac <mycore_malloc@plt>
   1b744:	cmp	r0, #0
   1b748:	beq	1b780 <myhtml_collection_create@@Base+0x54>
   1b74c:	mov	r5, #0
   1b750:	str	r7, [r0, #4]
   1b754:	mov	r6, r0
   1b758:	str	r5, [r0, #8]
   1b75c:	lsl	r0, r7, #2
   1b760:	bl	11dac <mycore_malloc@plt>
   1b764:	cmp	r0, #0
   1b768:	str	r0, [r6]
   1b76c:	beq	1b788 <myhtml_collection_create@@Base+0x5c>
   1b770:	cmp	r4, #0
   1b774:	mov	r5, r6
   1b778:	movne	r0, #0
   1b77c:	b	1b798 <myhtml_collection_create@@Base+0x6c>
   1b780:	mov	r5, #0
   1b784:	b	1b790 <myhtml_collection_create@@Base+0x64>
   1b788:	mov	r0, r6
   1b78c:	bl	11eb4 <mycore_free@plt>
   1b790:	cmp	r4, #0
   1b794:	movne	r0, #2
   1b798:	strne	r0, [r4]
   1b79c:	mov	r0, r5
   1b7a0:	pop	{r4, r5, r6, r7, fp, pc}

0001b7a4 <myhtml_get_nodes_by_name_in_scope@@Base>:
   1b7a4:	push	{r4, r5, fp, lr}
   1b7a8:	add	fp, sp, #8
   1b7ac:	sub	sp, sp, #8
   1b7b0:	mov	r4, r2
   1b7b4:	ldr	r0, [r0, #28]
   1b7b8:	ldr	r2, [fp, #8]
   1b7bc:	mov	r5, r1
   1b7c0:	mov	r1, r3
   1b7c4:	bl	11cc8 <myhtml_tag_get_by_name@plt>
   1b7c8:	cmp	r0, #0
   1b7cc:	beq	1b7f0 <myhtml_get_nodes_by_name_in_scope@@Base+0x4c>
   1b7d0:	ldr	r1, [fp, #12]
   1b7d4:	ldr	r3, [r0]
   1b7d8:	mov	r2, r4
   1b7dc:	str	r1, [sp]
   1b7e0:	mov	r1, r5
   1b7e4:	bl	1126c <myhtml_get_nodes_by_tag_id_in_scope@plt>
   1b7e8:	sub	sp, fp, #8
   1b7ec:	pop	{r4, r5, fp, pc}
   1b7f0:	mov	r0, #0
   1b7f4:	sub	sp, fp, #8
   1b7f8:	pop	{r4, r5, fp, pc}

0001b7fc <myhtml_get_nodes_by_tag_id@@Base>:
   1b7fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b800:	add	fp, sp, #24
   1b804:	mov	r8, r3
   1b808:	mov	r6, r2
   1b80c:	mov	r5, r1
   1b810:	mov	r7, r0
   1b814:	cmp	r1, #0
   1b818:	bne	1b838 <myhtml_get_nodes_by_tag_id@@Base+0x3c>
   1b81c:	mov	r0, #1024	; 0x400
   1b820:	mov	r1, #0
   1b824:	mov	r4, #0
   1b828:	bl	115b4 <myhtml_collection_create@plt>
   1b82c:	mov	r5, r0
   1b830:	cmp	r0, #0
   1b834:	beq	1b8e8 <myhtml_get_nodes_by_tag_id@@Base+0xec>
   1b838:	ldr	r1, [r7, #96]	; 0x60
   1b83c:	cmp	r1, #0
   1b840:	beq	1b8ac <myhtml_get_nodes_by_tag_id@@Base+0xb0>
   1b844:	ldr	r0, [r1, #4]
   1b848:	mov	r4, r1
   1b84c:	cmp	r0, r6
   1b850:	bne	1b880 <myhtml_get_nodes_by_tag_id@@Base+0x84>
   1b854:	mov	r0, r5
   1b858:	mov	r1, #1
   1b85c:	mov	r2, #1024	; 0x400
   1b860:	bl	11ee4 <myhtml_collection_check_size@plt>
   1b864:	cmp	r0, #0
   1b868:	bne	1b8c4 <myhtml_get_nodes_by_tag_id@@Base+0xc8>
   1b86c:	ldr	r0, [r5]
   1b870:	ldr	r1, [r5, #8]
   1b874:	str	r4, [r0, r1, lsl #2]
   1b878:	add	r0, r1, #1
   1b87c:	str	r0, [r5, #8]
   1b880:	ldr	r1, [r4, #20]
   1b884:	cmp	r1, #0
   1b888:	bne	1b844 <myhtml_get_nodes_by_tag_id@@Base+0x48>
   1b88c:	ldr	r0, [r7, #96]	; 0x60
   1b890:	cmp	r4, r0
   1b894:	beq	1b8ac <myhtml_get_nodes_by_tag_id@@Base+0xb0>
   1b898:	ldr	r1, [r4, #16]
   1b89c:	cmp	r1, #0
   1b8a0:	bne	1b844 <myhtml_get_nodes_by_tag_id@@Base+0x48>
   1b8a4:	ldr	r4, [r4, #24]
   1b8a8:	b	1b890 <myhtml_get_nodes_by_tag_id@@Base+0x94>
   1b8ac:	mov	r0, r5
   1b8b0:	mov	r1, #1
   1b8b4:	mov	r2, #1024	; 0x400
   1b8b8:	bl	11ee4 <myhtml_collection_check_size@plt>
   1b8bc:	cmp	r0, #0
   1b8c0:	beq	1b8d4 <myhtml_get_nodes_by_tag_id@@Base+0xd8>
   1b8c4:	cmp	r8, #0
   1b8c8:	movne	r0, #2
   1b8cc:	strne	r0, [r8]
   1b8d0:	b	1b8e4 <myhtml_get_nodes_by_tag_id@@Base+0xe8>
   1b8d4:	ldr	r0, [r5]
   1b8d8:	ldr	r1, [r5, #8]
   1b8dc:	mov	r2, #0
   1b8e0:	str	r2, [r0, r1, lsl #2]
   1b8e4:	mov	r4, r5
   1b8e8:	mov	r0, r4
   1b8ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001b8f0 <myhtml_get_nodes_by_name@@Base>:
   1b8f0:	push	{r4, r5, fp, lr}
   1b8f4:	add	fp, sp, #8
   1b8f8:	mov	r5, r0
   1b8fc:	ldr	r0, [r0, #28]
   1b900:	mov	r4, r1
   1b904:	mov	r1, r2
   1b908:	mov	r2, r3
   1b90c:	bl	11cc8 <myhtml_tag_get_by_name@plt>
   1b910:	cmp	r0, #0
   1b914:	beq	1b930 <myhtml_get_nodes_by_name@@Base+0x40>
   1b918:	ldr	r2, [r0]
   1b91c:	ldr	r3, [fp, #8]
   1b920:	mov	r0, r5
   1b924:	mov	r1, r4
   1b928:	pop	{r4, r5, fp, lr}
   1b92c:	b	1b7fc <myhtml_get_nodes_by_tag_id@@Base>
   1b930:	mov	r0, #0
   1b934:	pop	{r4, r5, fp, pc}

0001b938 <myhtml_node_first@@Base>:
   1b938:	ldr	r1, [r0, #84]	; 0x54
   1b93c:	ldr	r0, [r0, #88]	; 0x58
   1b940:	cmp	r0, #0
   1b944:	beq	1b964 <myhtml_node_first@@Base+0x2c>
   1b948:	mov	r0, #0
   1b94c:	cmp	r1, #0
   1b950:	beq	1b978 <myhtml_node_first@@Base+0x40>
   1b954:	ldr	r1, [r1, #20]
   1b958:	cmp	r1, #0
   1b95c:	bxeq	lr
   1b960:	b	1b96c <myhtml_node_first@@Base+0x34>
   1b964:	cmp	r1, #0
   1b968:	beq	1b974 <myhtml_node_first@@Base+0x3c>
   1b96c:	ldr	r0, [r1, #20]
   1b970:	bx	lr
   1b974:	mov	r0, #0
   1b978:	bx	lr

0001b97c <myhtml_node_next@@Base>:
   1b97c:	ldr	r0, [r0, #16]
   1b980:	bx	lr

0001b984 <myhtml_node_prev@@Base>:
   1b984:	ldr	r0, [r0, #12]
   1b988:	bx	lr

0001b98c <myhtml_node_parent@@Base>:
   1b98c:	ldr	r0, [r0, #24]
   1b990:	bx	lr

0001b994 <myhtml_node_child@@Base>:
   1b994:	ldr	r0, [r0, #20]
   1b998:	bx	lr

0001b99c <myhtml_node_last_child@@Base>:
   1b99c:	ldr	r0, [r0, #28]
   1b9a0:	bx	lr

0001b9a4 <myhtml_node_create@@Base>:
   1b9a4:	push	{r4, r5, fp, lr}
   1b9a8:	add	fp, sp, #8
   1b9ac:	mov	r4, r2
   1b9b0:	mov	r5, r1
   1b9b4:	bl	11314 <myhtml_tree_node_create@plt>
   1b9b8:	str	r5, [r0, #4]
   1b9bc:	str	r4, [r0, #8]
   1b9c0:	pop	{r4, r5, fp, pc}

0001b9c4 <myhtml_node_remove@@Base>:
   1b9c4:	b	11ed8 <myhtml_tree_node_remove@plt>

0001b9c8 <myhtml_node_delete@@Base>:
   1b9c8:	b	11ea8 <myhtml_tree_node_delete@plt>

0001b9cc <myhtml_node_delete_recursive@@Base>:
   1b9cc:	b	11320 <myhtml_tree_node_delete_recursive@plt>

0001b9d0 <myhtml_node_free@@Base>:
   1b9d0:	b	11df4 <myhtml_tree_node_free@plt>

0001b9d4 <myhtml_node_insert_before@@Base>:
   1b9d4:	push	{r4, sl, fp, lr}
   1b9d8:	add	fp, sp, #8
   1b9dc:	mov	r4, r1
   1b9e0:	mov	r1, r0
   1b9e4:	mov	r0, #0
   1b9e8:	cmp	r1, #0
   1b9ec:	cmpne	r4, #0
   1b9f0:	bne	1b9f8 <myhtml_node_insert_before@@Base+0x24>
   1b9f4:	pop	{r4, sl, fp, pc}
   1b9f8:	mov	r0, r1
   1b9fc:	mov	r1, r4
   1ba00:	bl	11668 <myhtml_tree_node_insert_before@plt>
   1ba04:	mov	r0, r4
   1ba08:	pop	{r4, sl, fp, pc}

0001ba0c <myhtml_node_insert_after@@Base>:
   1ba0c:	push	{r4, sl, fp, lr}
   1ba10:	add	fp, sp, #8
   1ba14:	mov	r4, r1
   1ba18:	mov	r1, r0
   1ba1c:	mov	r0, #0
   1ba20:	cmp	r1, #0
   1ba24:	cmpne	r4, #0
   1ba28:	bne	1ba30 <myhtml_node_insert_after@@Base+0x24>
   1ba2c:	pop	{r4, sl, fp, pc}
   1ba30:	mov	r0, r1
   1ba34:	mov	r1, r4
   1ba38:	bl	115f0 <myhtml_tree_node_insert_after@plt>
   1ba3c:	mov	r0, r4
   1ba40:	pop	{r4, sl, fp, pc}

0001ba44 <myhtml_node_append_child@@Base>:
   1ba44:	push	{r4, sl, fp, lr}
   1ba48:	add	fp, sp, #8
   1ba4c:	mov	r4, r1
   1ba50:	mov	r1, r0
   1ba54:	mov	r0, #0
   1ba58:	cmp	r1, #0
   1ba5c:	cmpne	r4, #0
   1ba60:	bne	1ba68 <myhtml_node_append_child@@Base+0x24>
   1ba64:	pop	{r4, sl, fp, pc}
   1ba68:	mov	r0, r1
   1ba6c:	mov	r1, r4
   1ba70:	bl	118e4 <myhtml_tree_node_add_child@plt>
   1ba74:	mov	r0, r4
   1ba78:	pop	{r4, sl, fp, pc}

0001ba7c <myhtml_node_insert_to_appropriate_place@@Base>:
   1ba7c:	push	{r4, sl, fp, lr}
   1ba80:	add	fp, sp, #8
   1ba84:	sub	sp, sp, #8
   1ba88:	mov	r4, r1
   1ba8c:	cmp	r0, #0
   1ba90:	mov	r1, #0
   1ba94:	cmpne	r4, #0
   1ba98:	beq	1bacc <myhtml_node_insert_to_appropriate_place@@Base+0x50>
   1ba9c:	ldr	r1, [r0, #40]	; 0x28
   1baa0:	mov	r2, #1
   1baa4:	strb	r2, [r1, #188]	; 0xbc
   1baa8:	add	r1, sp, #4
   1baac:	bl	11bcc <myhtml_tree_appropriate_place_inserting_in_tree@plt>
   1bab0:	ldr	r1, [r0, #40]	; 0x28
   1bab4:	mov	r2, #0
   1bab8:	strb	r2, [r1, #188]	; 0xbc
   1babc:	mov	r1, r4
   1bac0:	ldr	r2, [sp, #4]
   1bac4:	bl	115e4 <myhtml_tree_node_insert_by_mode@plt>
   1bac8:	mov	r1, r4
   1bacc:	mov	r0, r1
   1bad0:	sub	sp, fp, #8
   1bad4:	pop	{r4, sl, fp, pc}

0001bad8 <myhtml_node_text_set@@Base>:
   1bad8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1badc:	add	fp, sp, #24
   1bae0:	mov	r7, #0
   1bae4:	cmp	r0, #0
   1bae8:	beq	1bbd4 <myhtml_node_text_set@@Base+0xfc>
   1baec:	mov	r6, r3
   1baf0:	cmp	r3, #41	; 0x29
   1baf4:	bhi	1bbd4 <myhtml_node_text_set@@Base+0xfc>
   1baf8:	mov	r4, r0
   1bafc:	ldr	r0, [r0, #32]
   1bb00:	mov	r9, r2
   1bb04:	mov	r8, r1
   1bb08:	ldr	r5, [r4, #40]	; 0x28
   1bb0c:	cmp	r0, #0
   1bb10:	bne	1bb38 <myhtml_node_text_set@@Base+0x60>
   1bb14:	ldr	r0, [r5, #8]
   1bb18:	ldr	r1, [r5, #40]	; 0x28
   1bb1c:	bl	11ba8 <myhtml_token_node_create@plt>
   1bb20:	cmp	r0, #0
   1bb24:	str	r0, [r4, #32]
   1bb28:	beq	1bbd4 <myhtml_node_text_set@@Base+0xfc>
   1bb2c:	ldr	r1, [r0, #48]	; 0x30
   1bb30:	orr	r1, r1, #4
   1bb34:	str	r1, [r0, #48]	; 0x30
   1bb38:	mov	r7, r0
   1bb3c:	ldr	r2, [r7, #4]!
   1bb40:	cmp	r2, #0
   1bb44:	beq	1bb78 <myhtml_node_text_set@@Base+0xa0>
   1bb48:	ldr	r1, [r0, #8]
   1bb4c:	cmp	r1, r9
   1bb50:	bcs	1bb90 <myhtml_node_text_set@@Base+0xb8>
   1bb54:	ldr	r1, [r0, #20]
   1bb58:	ldr	r0, [r5, #4]
   1bb5c:	bl	11938 <mchar_async_free@plt>
   1bb60:	ldr	r2, [r4, #32]
   1bb64:	ldr	r0, [r5, #4]
   1bb68:	ldr	r1, [r5, #52]	; 0x34
   1bb6c:	mov	r3, r9
   1bb70:	add	r2, r2, #4
   1bb74:	b	1bb88 <myhtml_node_text_set@@Base+0xb0>
   1bb78:	ldr	r0, [r5, #4]
   1bb7c:	ldr	r1, [r5, #52]	; 0x34
   1bb80:	add	r3, r9, #2
   1bb84:	mov	r2, r7
   1bb88:	bl	11848 <mycore_string_init@plt>
   1bb8c:	b	1bb98 <myhtml_node_text_set@@Base+0xc0>
   1bb90:	mov	r1, #0
   1bb94:	str	r1, [r0, #12]
   1bb98:	ldr	r0, [r4, #32]
   1bb9c:	mov	r1, r8
   1bba0:	mov	r2, r9
   1bba4:	cmp	r6, #0
   1bba8:	add	r0, r0, #4
   1bbac:	beq	1bbbc <myhtml_node_text_set@@Base+0xe4>
   1bbb0:	mov	r3, r6
   1bbb4:	bl	116c8 <myencoding_string_append@plt>
   1bbb8:	b	1bbc0 <myhtml_node_text_set@@Base+0xe8>
   1bbbc:	bl	11aa0 <mycore_string_append@plt>
   1bbc0:	ldr	r0, [r4, #32]
   1bbc4:	mov	r1, #0
   1bbc8:	add	r7, r0, #4
   1bbcc:	str	r1, [r0, #24]
   1bbd0:	str	r1, [r0, #28]
   1bbd4:	mov	r0, r7
   1bbd8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001bbdc <myhtml_node_text_set_with_charef@@Base>:
   1bbdc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1bbe0:	add	fp, sp, #24
   1bbe4:	sub	sp, sp, #64	; 0x40
   1bbe8:	mov	r6, #0
   1bbec:	cmp	r0, #0
   1bbf0:	beq	1bcf4 <myhtml_node_text_set_with_charef@@Base+0x118>
   1bbf4:	mov	r7, r3
   1bbf8:	cmp	r3, #41	; 0x29
   1bbfc:	bhi	1bcf4 <myhtml_node_text_set_with_charef@@Base+0x118>
   1bc00:	mov	r4, r0
   1bc04:	ldr	r0, [r0, #32]
   1bc08:	mov	r9, r2
   1bc0c:	mov	r8, r1
   1bc10:	ldr	r5, [r4, #40]	; 0x28
   1bc14:	cmp	r0, #0
   1bc18:	bne	1bc40 <myhtml_node_text_set_with_charef@@Base+0x64>
   1bc1c:	ldr	r0, [r5, #8]
   1bc20:	ldr	r1, [r5, #40]	; 0x28
   1bc24:	bl	11ba8 <myhtml_token_node_create@plt>
   1bc28:	cmp	r0, #0
   1bc2c:	str	r0, [r4, #32]
   1bc30:	beq	1bcf4 <myhtml_node_text_set_with_charef@@Base+0x118>
   1bc34:	ldr	r1, [r0, #48]	; 0x30
   1bc38:	orr	r1, r1, #4
   1bc3c:	str	r1, [r0, #48]	; 0x30
   1bc40:	mov	r6, r0
   1bc44:	ldr	r2, [r6, #4]!
   1bc48:	cmp	r2, #0
   1bc4c:	beq	1bc80 <myhtml_node_text_set_with_charef@@Base+0xa4>
   1bc50:	ldr	r1, [r0, #8]
   1bc54:	cmp	r1, r9
   1bc58:	bcs	1bc98 <myhtml_node_text_set_with_charef@@Base+0xbc>
   1bc5c:	ldr	r1, [r0, #20]
   1bc60:	ldr	r0, [r5, #4]
   1bc64:	bl	11938 <mchar_async_free@plt>
   1bc68:	ldr	r2, [r4, #32]
   1bc6c:	ldr	r0, [r5, #4]
   1bc70:	ldr	r1, [r5, #52]	; 0x34
   1bc74:	mov	r3, r9
   1bc78:	add	r2, r2, #4
   1bc7c:	b	1bc90 <myhtml_node_text_set_with_charef@@Base+0xb4>
   1bc80:	ldr	r0, [r5, #4]
   1bc84:	ldr	r1, [r5, #52]	; 0x34
   1bc88:	add	r3, r9, #2
   1bc8c:	mov	r2, r6
   1bc90:	bl	11848 <mycore_string_init@plt>
   1bc94:	b	1bca0 <myhtml_node_text_set_with_charef@@Base+0xc4>
   1bc98:	mov	r1, #0
   1bc9c:	str	r1, [r0, #12]
   1bca0:	mov	r6, sp
   1bca4:	mov	r0, r6
   1bca8:	bl	11758 <myhtml_data_process_entry_clean@plt>
   1bcac:	add	r0, r6, #8
   1bcb0:	str	r7, [sp, #4]
   1bcb4:	bl	11488 <myencoding_result_clean@plt>
   1bcb8:	ldr	r0, [r4, #32]
   1bcbc:	mov	r2, r8
   1bcc0:	mov	r3, r9
   1bcc4:	add	r1, r0, #4
   1bcc8:	mov	r0, r6
   1bccc:	bl	11968 <myhtml_data_process@plt>
   1bcd0:	ldr	r0, [r4, #32]
   1bcd4:	add	r1, r0, #4
   1bcd8:	mov	r0, r6
   1bcdc:	bl	11af4 <myhtml_data_process_end@plt>
   1bce0:	ldr	r0, [r4, #32]
   1bce4:	mov	r1, #0
   1bce8:	add	r6, r0, #4
   1bcec:	str	r1, [r0, #24]
   1bcf0:	str	r1, [r0, #28]
   1bcf4:	mov	r0, r6
   1bcf8:	sub	sp, fp, #24
   1bcfc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001bd00 <myhtml_node_token@@Base>:
   1bd00:	ldr	r0, [r0, #32]
   1bd04:	bx	lr

0001bd08 <myhtml_node_namespace@@Base>:
   1bd08:	ldr	r0, [r0, #8]
   1bd0c:	bx	lr

0001bd10 <myhtml_node_namespace_set@@Base>:
   1bd10:	str	r1, [r0, #8]
   1bd14:	bx	lr

0001bd18 <myhtml_node_tag_id@@Base>:
   1bd18:	ldr	r0, [r0, #4]
   1bd1c:	bx	lr

0001bd20 <myhtml_tag_name_by_id@@Base>:
   1bd20:	push	{r4, r5, fp, lr}
   1bd24:	add	fp, sp, #8
   1bd28:	cmp	r2, #0
   1bd2c:	mov	r4, r2
   1bd30:	mov	r5, #0
   1bd34:	movne	r2, #0
   1bd38:	strne	r2, [r4]
   1bd3c:	cmp	r0, #0
   1bd40:	beq	1bd6c <myhtml_tag_name_by_id@@Base+0x4c>
   1bd44:	ldr	r0, [r0, #28]
   1bd48:	cmp	r0, #0
   1bd4c:	beq	1bd6c <myhtml_tag_name_by_id@@Base+0x4c>
   1bd50:	bl	11bc0 <myhtml_tag_get_by_id@plt>
   1bd54:	cmp	r0, #0
   1bd58:	beq	1bd6c <myhtml_tag_name_by_id@@Base+0x4c>
   1bd5c:	cmp	r4, #0
   1bd60:	ldrne	r1, [r0, #8]
   1bd64:	strne	r1, [r4]
   1bd68:	ldr	r5, [r0, #4]
   1bd6c:	mov	r0, r5
   1bd70:	pop	{r4, r5, fp, pc}

0001bd74 <myhtml_tag_id_by_name@@Base>:
   1bd74:	push	{r4, sl, fp, lr}
   1bd78:	add	fp, sp, #8
   1bd7c:	mov	r4, #0
   1bd80:	cmp	r0, #0
   1bd84:	beq	1bda0 <myhtml_tag_id_by_name@@Base+0x2c>
   1bd88:	ldr	r0, [r0, #28]
   1bd8c:	cmp	r0, #0
   1bd90:	beq	1bda0 <myhtml_tag_id_by_name@@Base+0x2c>
   1bd94:	bl	11cc8 <myhtml_tag_get_by_name@plt>
   1bd98:	cmp	r0, #0
   1bd9c:	ldrne	r4, [r0]
   1bda0:	mov	r0, r4
   1bda4:	pop	{r4, sl, fp, pc}

0001bda8 <myhtml_node_is_close_self@@Base>:
   1bda8:	ldr	r0, [r0, #32]
   1bdac:	cmp	r0, #0
   1bdb0:	moveq	r0, #0
   1bdb4:	ldrne	r0, [r0, #48]	; 0x30
   1bdb8:	ubfxne	r0, r0, #1, #1
   1bdbc:	bx	lr

0001bdc0 <myhtml_node_is_void_element@@Base>:
   1bdc0:	ldr	r1, [r0, #4]
   1bdc4:	mov	r0, #1
   1bdc8:	cmp	r1, #77	; 0x4d
   1bdcc:	bgt	1bdf8 <myhtml_node_is_void_element@@Base+0x38>
   1bdd0:	sub	r2, r1, #10
   1bdd4:	cmp	r2, #23
   1bdd8:	bls	1be2c <myhtml_node_is_void_element@@Base+0x6c>
   1bddc:	sub	r1, r1, #46	; 0x2e
   1bde0:	cmp	r1, #28
   1bde4:	bhi	1be24 <myhtml_node_is_void_element@@Base+0x64>
   1bde8:	movw	r3, #1
   1bdec:	mov	r2, #1
   1bdf0:	movt	r3, #4484	; 0x1184
   1bdf4:	b	1be1c <myhtml_node_is_void_element@@Base+0x5c>
   1bdf8:	sub	r2, r1, #78	; 0x4e
   1bdfc:	cmp	r2, #22
   1be00:	bls	1be44 <myhtml_node_is_void_element@@Base+0x84>
   1be04:	sub	r1, r1, #116	; 0x74
   1be08:	cmp	r1, #26
   1be0c:	bhi	1be24 <myhtml_node_is_void_element@@Base+0x64>
   1be10:	movw	r3, #1
   1be14:	mov	r2, #1
   1be18:	movt	r3, #1040	; 0x410
   1be1c:	tst	r3, r2, lsl r1
   1be20:	bxne	lr
   1be24:	mov	r0, #0
   1be28:	bx	lr
   1be2c:	movw	r3, #16417	; 0x4021
   1be30:	mov	ip, #1
   1be34:	movt	r3, #160	; 0xa0
   1be38:	tst	r3, ip, lsl r2
   1be3c:	bne	1be58 <myhtml_node_is_void_element@@Base+0x98>
   1be40:	b	1bddc <myhtml_node_is_void_element@@Base+0x1c>
   1be44:	movw	r3, #257	; 0x101
   1be48:	mov	ip, #1
   1be4c:	movt	r3, #64	; 0x40
   1be50:	tst	r3, ip, lsl r2
   1be54:	beq	1be04 <myhtml_node_is_void_element@@Base+0x44>
   1be58:	bx	lr

0001be5c <myhtml_node_attribute_first@@Base>:
   1be5c:	ldr	r0, [r0, #32]
   1be60:	cmp	r0, #0
   1be64:	ldrne	r0, [r0, #40]	; 0x28
   1be68:	moveq	r0, #0
   1be6c:	bx	lr

0001be70 <myhtml_node_attribute_last@@Base>:
   1be70:	ldr	r0, [r0, #32]
   1be74:	cmp	r0, #0
   1be78:	ldrne	r0, [r0, #44]	; 0x2c
   1be7c:	moveq	r0, #0
   1be80:	bx	lr

0001be84 <myhtml_node_text@@Base>:
   1be84:	ldr	r0, [r0, #32]
   1be88:	cmp	r0, #0
   1be8c:	beq	1beb8 <myhtml_node_text@@Base+0x34>
   1be90:	ldr	r2, [r0, #12]
   1be94:	cmp	r2, #0
   1be98:	beq	1beb8 <myhtml_node_text@@Base+0x34>
   1be9c:	ldr	r0, [r0, #4]
   1bea0:	cmp	r0, #0
   1bea4:	beq	1beb8 <myhtml_node_text@@Base+0x34>
   1bea8:	cmp	r1, #0
   1beac:	strne	r2, [r1]
   1beb0:	bxne	lr
   1beb4:	bx	lr
   1beb8:	mov	r0, #0
   1bebc:	cmp	r1, #0
   1bec0:	strne	r0, [r1]
   1bec4:	bx	lr

0001bec8 <myhtml_node_string@@Base>:
   1bec8:	cmp	r0, #0
   1becc:	moveq	r0, #0
   1bed0:	bxeq	lr
   1bed4:	ldr	r0, [r0, #32]
   1bed8:	cmp	r0, #0
   1bedc:	addne	r0, r0, #4
   1bee0:	bx	lr

0001bee4 <myhtml_node_raw_position@@Base>:
   1bee4:	cmp	r1, #0
   1bee8:	beq	1bf08 <myhtml_node_raw_position@@Base+0x24>
   1beec:	ldr	r1, [r1, #32]
   1bef0:	cmp	r1, #0
   1bef4:	beq	1bf08 <myhtml_node_raw_position@@Base+0x24>
   1bef8:	ldr	r2, [r1, #24]
   1befc:	ldr	r1, [r1, #28]
   1bf00:	str	r2, [r0]
   1bf04:	b	1bf10 <myhtml_node_raw_position@@Base+0x2c>
   1bf08:	mov	r1, #0
   1bf0c:	str	r1, [r0]
   1bf10:	str	r1, [r0, #4]
   1bf14:	bx	lr

0001bf18 <myhtml_node_element_position@@Base>:
   1bf18:	cmp	r1, #0
   1bf1c:	beq	1bf3c <myhtml_node_element_position@@Base+0x24>
   1bf20:	ldr	r1, [r1, #32]
   1bf24:	cmp	r1, #0
   1bf28:	beq	1bf3c <myhtml_node_element_position@@Base+0x24>
   1bf2c:	ldr	r2, [r1, #32]
   1bf30:	ldr	r1, [r1, #36]	; 0x24
   1bf34:	str	r2, [r0]
   1bf38:	b	1bf44 <myhtml_node_element_position@@Base+0x2c>
   1bf3c:	mov	r1, #0
   1bf40:	str	r1, [r0]
   1bf44:	str	r1, [r0, #4]
   1bf48:	bx	lr

0001bf4c <myhtml_node_set_data@@Base>:
   1bf4c:	str	r1, [r0, #36]	; 0x24
   1bf50:	bx	lr

0001bf54 <myhtml_node_get_data@@Base>:
   1bf54:	ldr	r0, [r0, #36]	; 0x24
   1bf58:	bx	lr

0001bf5c <myhtml_node_tree@@Base>:
   1bf5c:	ldr	r0, [r0, #40]	; 0x28
   1bf60:	bx	lr

0001bf64 <myhtml_get_nodes_by_attribute_key_recursion@@Base>:
   1bf64:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1bf68:	add	fp, sp, #24
   1bf6c:	cmp	r0, #0
   1bf70:	beq	1c028 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xc4>
   1bf74:	mov	r4, r3
   1bf78:	mov	r8, r2
   1bf7c:	mov	r6, r1
   1bf80:	mov	r9, r0
   1bf84:	mov	r5, r0
   1bf88:	ldr	r0, [r0, #32]
   1bf8c:	cmp	r0, #0
   1bf90:	beq	1c004 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xa0>
   1bf94:	ldr	r7, [r0, #40]	; 0x28
   1bf98:	cmp	r7, #0
   1bf9c:	beq	1c004 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xa0>
   1bfa0:	ldr	r0, [r7, #16]
   1bfa4:	cmp	r0, r4
   1bfa8:	bne	1bffc <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x98>
   1bfac:	ldr	r0, [r7, #8]
   1bfb0:	mov	r1, r8
   1bfb4:	mov	r2, r4
   1bfb8:	bl	11554 <mycore_strncasecmp@plt>
   1bfbc:	cmp	r0, #0
   1bfc0:	bne	1bffc <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x98>
   1bfc4:	ldr	r0, [r6]
   1bfc8:	ldr	r1, [r6, #8]
   1bfcc:	str	r5, [r0, r1, lsl #2]
   1bfd0:	add	r0, r1, #1
   1bfd4:	str	r0, [r6, #8]
   1bfd8:	ldr	r1, [r6, #4]
   1bfdc:	cmp	r0, r1
   1bfe0:	bcc	1bffc <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x98>
   1bfe4:	mov	r0, r6
   1bfe8:	mov	r1, #1024	; 0x400
   1bfec:	mov	r2, #0
   1bff0:	bl	11ee4 <myhtml_collection_check_size@plt>
   1bff4:	cmp	r0, #0
   1bff8:	bne	1c02c <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xc8>
   1bffc:	ldr	r7, [r7]
   1c000:	b	1bf98 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x34>
   1c004:	ldr	r0, [r5, #20]
   1c008:	cmp	r0, #0
   1c00c:	bne	1bf84 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x20>
   1c010:	ldr	r0, [r5, #16]
   1c014:	cmp	r0, #0
   1c018:	bne	1bf84 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x20>
   1c01c:	ldr	r5, [r5, #24]
   1c020:	cmp	r5, r9
   1c024:	bne	1c010 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xac>
   1c028:	mov	r0, #0
   1c02c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001c030 <myhtml_get_nodes_by_attribute_key@@Base>:
   1c030:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c034:	add	fp, sp, #24
   1c038:	ldr	r8, [fp, #12]
   1c03c:	mov	r6, r3
   1c040:	mov	r7, r2
   1c044:	mov	r5, r1
   1c048:	mov	r4, r0
   1c04c:	cmp	r1, #0
   1c050:	beq	1c084 <myhtml_get_nodes_by_attribute_key@@Base+0x54>
   1c054:	cmp	r7, #0
   1c058:	ldr	r3, [fp, #8]
   1c05c:	mov	r1, r5
   1c060:	mov	r2, r6
   1c064:	ldreq	r7, [r4, #96]	; 0x60
   1c068:	mov	r0, r7
   1c06c:	bl	111dc <myhtml_get_nodes_by_attribute_key_recursion@plt>
   1c070:	cmp	r8, #0
   1c074:	cmpne	r0, #0
   1c078:	strne	r0, [r8]
   1c07c:	mov	r0, r5
   1c080:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c084:	mov	r0, #1024	; 0x400
   1c088:	mov	r1, r8
   1c08c:	bl	115b4 <myhtml_collection_create@plt>
   1c090:	mov	r5, r0
   1c094:	cmp	r8, #0
   1c098:	beq	1c0b8 <myhtml_get_nodes_by_attribute_key@@Base+0x88>
   1c09c:	mov	r0, #0
   1c0a0:	cmp	r5, #0
   1c0a4:	beq	1c0b4 <myhtml_get_nodes_by_attribute_key@@Base+0x84>
   1c0a8:	ldr	r1, [r8]
   1c0ac:	cmp	r1, #0
   1c0b0:	beq	1c054 <myhtml_get_nodes_by_attribute_key@@Base+0x24>
   1c0b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c0b8:	cmp	r5, #0
   1c0bc:	bne	1c054 <myhtml_get_nodes_by_attribute_key@@Base+0x24>
   1c0c0:	mov	r0, #0
   1c0c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001c0c8 <myhtml_get_nodes_by_attribute_value_recursion_eq@@Base>:
   1c0c8:	push	{fp, lr}
   1c0cc:	mov	fp, sp
   1c0d0:	ldr	ip, [r0, #8]
   1c0d4:	mov	r3, r0
   1c0d8:	mov	r0, #0
   1c0dc:	cmp	ip, r2
   1c0e0:	popne	{fp, pc}
   1c0e4:	ldr	r0, [r3]
   1c0e8:	bl	11fb0 <mycore_strncmp@plt>
   1c0ec:	clz	r0, r0
   1c0f0:	lsr	r0, r0, #5
   1c0f4:	pop	{fp, pc}

0001c0f8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base>:
   1c0f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c0fc:	add	fp, sp, #28
   1c100:	sub	sp, sp, #4
   1c104:	mov	r6, r0
   1c108:	ldr	r0, [r0, #8]
   1c10c:	cmp	r0, r2
   1c110:	bcc	1c214 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x11c>
   1c114:	ldr	r7, [r6]
   1c118:	mov	r4, r2
   1c11c:	mov	sl, r1
   1c120:	mov	r0, r7
   1c124:	bl	11fb0 <mycore_strncmp@plt>
   1c128:	ldr	r1, [r6, #8]
   1c12c:	cmp	r0, #0
   1c130:	bne	1c174 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x7c>
   1c134:	cmp	r1, r4
   1c138:	bls	1c168 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x70>
   1c13c:	ldrb	r0, [r7, r4]
   1c140:	sub	r0, r0, #9
   1c144:	uxtb	r2, r0
   1c148:	cmp	r2, #24
   1c14c:	bcs	1c168 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x70>
   1c150:	movw	r3, #27
   1c154:	mov	r0, #1
   1c158:	movt	r3, #128	; 0x80
   1c15c:	tst	r0, r3, lsr r2
   1c160:	beq	1c16c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x74>
   1c164:	b	1c218 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x120>
   1c168:	mov	r0, #1
   1c16c:	cmp	r1, r4
   1c170:	beq	1c218 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x120>
   1c174:	sub	r0, r1, #1
   1c178:	cmp	r0, r4
   1c17c:	bcc	1c214 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x11c>
   1c180:	movw	r9, #27
   1c184:	mov	r8, #1
   1c188:	mov	r5, #1
   1c18c:	movt	r9, #128	; 0x80
   1c190:	add	r0, r5, r7
   1c194:	ldrb	r2, [r0, #-1]
   1c198:	sub	r2, r2, #9
   1c19c:	cmp	r2, #23
   1c1a0:	bhi	1c204 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x10c>
   1c1a4:	tst	r9, r8, lsl r2
   1c1a8:	beq	1c204 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x10c>
   1c1ac:	mov	r1, sl
   1c1b0:	mov	r2, r4
   1c1b4:	bl	11fb0 <mycore_strncmp@plt>
   1c1b8:	cmp	r0, #0
   1c1bc:	beq	1c1c8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xd0>
   1c1c0:	ldr	r1, [r6, #8]
   1c1c4:	b	1c204 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x10c>
   1c1c8:	cmp	r5, r4
   1c1cc:	bls	1c1f4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xfc>
   1c1d0:	add	r0, r5, r4
   1c1d4:	ldrb	r0, [r7, r0]
   1c1d8:	sub	r0, r0, #9
   1c1dc:	uxtb	r1, r0
   1c1e0:	cmp	r1, #24
   1c1e4:	bcs	1c1f4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xfc>
   1c1e8:	mov	r0, #1
   1c1ec:	tst	r0, r9, lsr r1
   1c1f0:	bne	1c218 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x120>
   1c1f4:	ldr	r1, [r6, #8]
   1c1f8:	sub	r0, r1, r5
   1c1fc:	cmp	r0, r4
   1c200:	beq	1c220 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x128>
   1c204:	add	r5, r5, #1
   1c208:	sub	r0, r1, r5
   1c20c:	cmp	r0, r4
   1c210:	bcs	1c190 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x98>
   1c214:	mov	r0, #0
   1c218:	sub	sp, fp, #28
   1c21c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c220:	mov	r0, #1
   1c224:	b	1c218 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x120>

0001c228 <myhtml_get_nodes_by_attribute_value_recursion_begin@@Base>:
   1c228:	push	{fp, lr}
   1c22c:	mov	fp, sp
   1c230:	ldr	ip, [r0, #8]
   1c234:	mov	r3, r0
   1c238:	mov	r0, #0
   1c23c:	cmp	ip, r2
   1c240:	popcc	{fp, pc}
   1c244:	ldr	r0, [r3]
   1c248:	bl	11fb0 <mycore_strncmp@plt>
   1c24c:	clz	r0, r0
   1c250:	lsr	r0, r0, #5
   1c254:	pop	{fp, pc}

0001c258 <myhtml_get_nodes_by_attribute_value_recursion_end@@Base>:
   1c258:	push	{fp, lr}
   1c25c:	mov	fp, sp
   1c260:	ldr	r3, [r0, #8]
   1c264:	mov	ip, #0
   1c268:	cmp	r3, r2
   1c26c:	bcc	1c288 <myhtml_get_nodes_by_attribute_value_recursion_end@@Base+0x30>
   1c270:	ldr	r0, [r0]
   1c274:	sub	r3, r3, r2
   1c278:	add	r0, r0, r3
   1c27c:	bl	11fb0 <mycore_strncmp@plt>
   1c280:	clz	r0, r0
   1c284:	lsr	ip, r0, #5
   1c288:	mov	r0, ip
   1c28c:	pop	{fp, pc}

0001c290 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base>:
   1c290:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c294:	add	fp, sp, #24
   1c298:	mov	r8, r1
   1c29c:	ldr	r1, [r0, #8]
   1c2a0:	mov	r6, r0
   1c2a4:	mov	r0, #0
   1c2a8:	cmp	r1, r2
   1c2ac:	bcc	1c2f8 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x68>
   1c2b0:	ldr	r7, [r6]
   1c2b4:	mov	r4, r2
   1c2b8:	mov	r5, #0
   1c2bc:	mov	r0, r7
   1c2c0:	mov	r1, r8
   1c2c4:	mov	r2, r4
   1c2c8:	bl	11fb0 <mycore_strncmp@plt>
   1c2cc:	cmp	r0, #0
   1c2d0:	beq	1c2f4 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x64>
   1c2d4:	ldr	r0, [r6, #8]
   1c2d8:	sub	r5, r5, #1
   1c2dc:	add	r7, r7, #1
   1c2e0:	add	r0, r0, r5
   1c2e4:	cmp	r0, r4
   1c2e8:	bcs	1c2bc <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x2c>
   1c2ec:	mov	r0, #0
   1c2f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c2f4:	mov	r0, #1
   1c2f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001c2fc <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base>:
   1c2fc:	push	{r4, r5, r6, sl, fp, lr}
   1c300:	add	fp, sp, #16
   1c304:	mov	r4, r2
   1c308:	ldr	r2, [r0, #8]
   1c30c:	mov	r6, r1
   1c310:	mov	r1, r0
   1c314:	mov	r0, #0
   1c318:	cmp	r2, r4
   1c31c:	bcc	1c35c <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x60>
   1c320:	ldr	r5, [r1]
   1c324:	bne	1c340 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x44>
   1c328:	mov	r0, r5
   1c32c:	mov	r1, r6
   1c330:	mov	r2, r4
   1c334:	bl	11fb0 <mycore_strncmp@plt>
   1c338:	cmp	r0, #0
   1c33c:	beq	1c374 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x78>
   1c340:	mov	r0, r5
   1c344:	mov	r1, r6
   1c348:	mov	r2, r4
   1c34c:	bl	11fb0 <mycore_strncmp@plt>
   1c350:	cmp	r0, #0
   1c354:	beq	1c360 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x64>
   1c358:	mov	r0, #0
   1c35c:	pop	{r4, r5, r6, sl, fp, pc}
   1c360:	ldrb	r1, [r5, r4]
   1c364:	mov	r0, #1
   1c368:	cmp	r1, #45	; 0x2d
   1c36c:	movne	r0, #0
   1c370:	pop	{r4, r5, r6, sl, fp, pc}
   1c374:	mov	r0, #1
   1c378:	pop	{r4, r5, r6, sl, fp, pc}

0001c37c <myhtml_get_nodes_by_attribute_value_recursion_eq_i@@Base>:
   1c37c:	push	{fp, lr}
   1c380:	mov	fp, sp
   1c384:	ldr	ip, [r0, #8]
   1c388:	mov	r3, r0
   1c38c:	mov	r0, #0
   1c390:	cmp	ip, r2
   1c394:	popne	{fp, pc}
   1c398:	ldr	r0, [r3]
   1c39c:	bl	11554 <mycore_strncasecmp@plt>
   1c3a0:	clz	r0, r0
   1c3a4:	lsr	r0, r0, #5
   1c3a8:	pop	{fp, pc}

0001c3ac <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base>:
   1c3ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c3b0:	add	fp, sp, #28
   1c3b4:	sub	sp, sp, #4
   1c3b8:	mov	r6, r0
   1c3bc:	ldr	r0, [r0, #8]
   1c3c0:	cmp	r0, r2
   1c3c4:	bcc	1c4c8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x11c>
   1c3c8:	ldr	r7, [r6]
   1c3cc:	mov	r4, r2
   1c3d0:	mov	sl, r1
   1c3d4:	mov	r0, r7
   1c3d8:	bl	11554 <mycore_strncasecmp@plt>
   1c3dc:	ldr	r1, [r6, #8]
   1c3e0:	cmp	r0, #0
   1c3e4:	bne	1c428 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x7c>
   1c3e8:	cmp	r1, r4
   1c3ec:	bls	1c41c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x70>
   1c3f0:	ldrb	r0, [r7, r4]
   1c3f4:	sub	r0, r0, #9
   1c3f8:	uxtb	r2, r0
   1c3fc:	cmp	r2, #24
   1c400:	bcs	1c41c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x70>
   1c404:	movw	r3, #27
   1c408:	mov	r0, #1
   1c40c:	movt	r3, #128	; 0x80
   1c410:	tst	r0, r3, lsr r2
   1c414:	beq	1c420 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x74>
   1c418:	b	1c4cc <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x120>
   1c41c:	mov	r0, #1
   1c420:	cmp	r1, r4
   1c424:	beq	1c4cc <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x120>
   1c428:	sub	r0, r1, #1
   1c42c:	cmp	r0, r4
   1c430:	bcc	1c4c8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x11c>
   1c434:	movw	r9, #27
   1c438:	mov	r8, #1
   1c43c:	mov	r5, #1
   1c440:	movt	r9, #128	; 0x80
   1c444:	add	r0, r5, r7
   1c448:	ldrb	r2, [r0, #-1]
   1c44c:	sub	r2, r2, #9
   1c450:	cmp	r2, #23
   1c454:	bhi	1c4b8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x10c>
   1c458:	tst	r9, r8, lsl r2
   1c45c:	beq	1c4b8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x10c>
   1c460:	mov	r1, sl
   1c464:	mov	r2, r4
   1c468:	bl	11554 <mycore_strncasecmp@plt>
   1c46c:	cmp	r0, #0
   1c470:	beq	1c47c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xd0>
   1c474:	ldr	r1, [r6, #8]
   1c478:	b	1c4b8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x10c>
   1c47c:	cmp	r5, r4
   1c480:	bls	1c4a8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xfc>
   1c484:	add	r0, r5, r4
   1c488:	ldrb	r0, [r7, r0]
   1c48c:	sub	r0, r0, #9
   1c490:	uxtb	r1, r0
   1c494:	cmp	r1, #24
   1c498:	bcs	1c4a8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xfc>
   1c49c:	mov	r0, #1
   1c4a0:	tst	r0, r9, lsr r1
   1c4a4:	bne	1c4cc <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x120>
   1c4a8:	ldr	r1, [r6, #8]
   1c4ac:	sub	r0, r1, r5
   1c4b0:	cmp	r0, r4
   1c4b4:	beq	1c4d4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x128>
   1c4b8:	add	r5, r5, #1
   1c4bc:	sub	r0, r1, r5
   1c4c0:	cmp	r0, r4
   1c4c4:	bcs	1c444 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x98>
   1c4c8:	mov	r0, #0
   1c4cc:	sub	sp, fp, #28
   1c4d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c4d4:	mov	r0, #1
   1c4d8:	b	1c4cc <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x120>

0001c4dc <myhtml_get_nodes_by_attribute_value_recursion_begin_i@@Base>:
   1c4dc:	push	{fp, lr}
   1c4e0:	mov	fp, sp
   1c4e4:	ldr	ip, [r0, #8]
   1c4e8:	mov	r3, r0
   1c4ec:	mov	r0, #0
   1c4f0:	cmp	ip, r2
   1c4f4:	popcc	{fp, pc}
   1c4f8:	ldr	r0, [r3]
   1c4fc:	bl	11554 <mycore_strncasecmp@plt>
   1c500:	clz	r0, r0
   1c504:	lsr	r0, r0, #5
   1c508:	pop	{fp, pc}

0001c50c <myhtml_get_nodes_by_attribute_value_recursion_end_i@@Base>:
   1c50c:	push	{fp, lr}
   1c510:	mov	fp, sp
   1c514:	ldr	r3, [r0, #8]
   1c518:	mov	ip, #0
   1c51c:	cmp	r3, r2
   1c520:	bcc	1c53c <myhtml_get_nodes_by_attribute_value_recursion_end_i@@Base+0x30>
   1c524:	ldr	r0, [r0]
   1c528:	sub	r3, r3, r2
   1c52c:	add	r0, r0, r3
   1c530:	bl	11554 <mycore_strncasecmp@plt>
   1c534:	clz	r0, r0
   1c538:	lsr	ip, r0, #5
   1c53c:	mov	r0, ip
   1c540:	pop	{fp, pc}

0001c544 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base>:
   1c544:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c548:	add	fp, sp, #24
   1c54c:	mov	r8, r1
   1c550:	ldr	r1, [r0, #8]
   1c554:	mov	r6, r0
   1c558:	mov	r0, #0
   1c55c:	cmp	r1, r2
   1c560:	bcc	1c5ac <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x68>
   1c564:	ldr	r7, [r6]
   1c568:	mov	r4, r2
   1c56c:	mov	r5, #0
   1c570:	mov	r0, r7
   1c574:	mov	r1, r8
   1c578:	mov	r2, r4
   1c57c:	bl	11554 <mycore_strncasecmp@plt>
   1c580:	cmp	r0, #0
   1c584:	beq	1c5a8 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x64>
   1c588:	ldr	r0, [r6, #8]
   1c58c:	sub	r5, r5, #1
   1c590:	add	r7, r7, #1
   1c594:	add	r0, r0, r5
   1c598:	cmp	r0, r4
   1c59c:	bcs	1c570 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x2c>
   1c5a0:	mov	r0, #0
   1c5a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c5a8:	mov	r0, #1
   1c5ac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001c5b0 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base>:
   1c5b0:	push	{r4, r5, r6, sl, fp, lr}
   1c5b4:	add	fp, sp, #16
   1c5b8:	mov	r4, r2
   1c5bc:	ldr	r2, [r0, #8]
   1c5c0:	mov	r6, r1
   1c5c4:	mov	r1, r0
   1c5c8:	mov	r0, #0
   1c5cc:	cmp	r2, r4
   1c5d0:	bcc	1c610 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x60>
   1c5d4:	ldr	r5, [r1]
   1c5d8:	bne	1c5f4 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x44>
   1c5dc:	mov	r0, r5
   1c5e0:	mov	r1, r6
   1c5e4:	mov	r2, r4
   1c5e8:	bl	11554 <mycore_strncasecmp@plt>
   1c5ec:	cmp	r0, #0
   1c5f0:	beq	1c628 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x78>
   1c5f4:	mov	r0, r5
   1c5f8:	mov	r1, r6
   1c5fc:	mov	r2, r4
   1c600:	bl	11554 <mycore_strncasecmp@plt>
   1c604:	cmp	r0, #0
   1c608:	beq	1c614 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x64>
   1c60c:	mov	r0, #0
   1c610:	pop	{r4, r5, r6, sl, fp, pc}
   1c614:	ldrb	r1, [r5, r4]
   1c618:	mov	r0, #1
   1c61c:	cmp	r1, #45	; 0x2d
   1c620:	movne	r0, #0
   1c624:	pop	{r4, r5, r6, sl, fp, pc}
   1c628:	mov	r0, #1
   1c62c:	pop	{r4, r5, r6, sl, fp, pc}

0001c630 <myhtml_get_nodes_by_attribute_value_recursion@@Base>:
   1c630:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c634:	add	fp, sp, #28
   1c638:	sub	sp, sp, #4
   1c63c:	cmp	r0, #0
   1c640:	beq	1c6f0 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xc0>
   1c644:	ldr	r8, [fp, #8]
   1c648:	mov	sl, r3
   1c64c:	mov	r5, r2
   1c650:	mov	r6, r1
   1c654:	mov	r9, r0
   1c658:	mov	r7, r0
   1c65c:	ldr	r0, [r0, #32]
   1c660:	cmp	r0, #0
   1c664:	beq	1c6cc <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x9c>
   1c668:	ldr	r4, [r0, #40]	; 0x28
   1c66c:	cmp	r4, #0
   1c670:	beq	1c6cc <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x9c>
   1c674:	add	r0, r4, #28
   1c678:	mov	r1, sl
   1c67c:	mov	r2, r8
   1c680:	blx	r5
   1c684:	cmp	r0, #0
   1c688:	beq	1c6c4 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x94>
   1c68c:	ldr	r0, [r6]
   1c690:	ldr	r1, [r6, #8]
   1c694:	str	r7, [r0, r1, lsl #2]
   1c698:	add	r0, r1, #1
   1c69c:	str	r0, [r6, #8]
   1c6a0:	ldr	r1, [r6, #4]
   1c6a4:	cmp	r0, r1
   1c6a8:	bcc	1c6c4 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x94>
   1c6ac:	mov	r0, r6
   1c6b0:	mov	r1, #1024	; 0x400
   1c6b4:	mov	r2, #0
   1c6b8:	bl	11ee4 <myhtml_collection_check_size@plt>
   1c6bc:	cmp	r0, #0
   1c6c0:	bne	1c6f4 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xc4>
   1c6c4:	ldr	r4, [r4]
   1c6c8:	b	1c66c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x3c>
   1c6cc:	ldr	r0, [r7, #20]
   1c6d0:	cmp	r0, #0
   1c6d4:	bne	1c658 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x28>
   1c6d8:	ldr	r0, [r7, #16]
   1c6dc:	cmp	r0, #0
   1c6e0:	bne	1c658 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x28>
   1c6e4:	ldr	r7, [r7, #24]
   1c6e8:	cmp	r7, r9
   1c6ec:	bne	1c6d8 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xa8>
   1c6f0:	mov	r0, #0
   1c6f4:	sub	sp, fp, #28
   1c6f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c6fc <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base>:
   1c6fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c700:	add	fp, sp, #28
   1c704:	sub	sp, sp, #4
   1c708:	cmp	r0, #0
   1c70c:	beq	1c7e0 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xe4>
   1c710:	ldr	r5, [fp, #8]
   1c714:	mov	r4, r3
   1c718:	mov	sl, r2
   1c71c:	mov	r6, r1
   1c720:	mov	r7, r0
   1c724:	mov	r8, r0
   1c728:	ldr	r0, [r0, #32]
   1c72c:	cmp	r0, #0
   1c730:	beq	1c7bc <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xc0>
   1c734:	ldr	r9, [r0, #40]	; 0x28
   1c738:	cmp	r9, #0
   1c73c:	beq	1c7bc <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xc0>
   1c740:	ldr	r0, [r9, #16]
   1c744:	cmp	r0, r5
   1c748:	bne	1c7b4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xb8>
   1c74c:	ldr	r0, [r9, #8]
   1c750:	mov	r1, r4
   1c754:	mov	r2, r5
   1c758:	bl	11554 <mycore_strncasecmp@plt>
   1c75c:	cmp	r0, #0
   1c760:	bne	1c7b4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xb8>
   1c764:	ldr	r1, [fp, #12]
   1c768:	ldr	r2, [fp, #16]
   1c76c:	add	r0, r9, #28
   1c770:	blx	sl
   1c774:	cmp	r0, #0
   1c778:	beq	1c7b4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xb8>
   1c77c:	ldr	r0, [r6]
   1c780:	ldr	r1, [r6, #8]
   1c784:	str	r8, [r0, r1, lsl #2]
   1c788:	add	r0, r1, #1
   1c78c:	str	r0, [r6, #8]
   1c790:	ldr	r1, [r6, #4]
   1c794:	cmp	r0, r1
   1c798:	bcc	1c7b4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xb8>
   1c79c:	mov	r0, r6
   1c7a0:	mov	r1, #1024	; 0x400
   1c7a4:	mov	r2, #0
   1c7a8:	bl	11ee4 <myhtml_collection_check_size@plt>
   1c7ac:	cmp	r0, #0
   1c7b0:	bne	1c7e4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xe8>
   1c7b4:	ldr	r9, [r9]
   1c7b8:	b	1c738 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x3c>
   1c7bc:	ldr	r0, [r8, #20]
   1c7c0:	cmp	r0, #0
   1c7c4:	bne	1c724 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x28>
   1c7c8:	ldr	r0, [r8, #16]
   1c7cc:	cmp	r0, #0
   1c7d0:	bne	1c724 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x28>
   1c7d4:	ldr	r8, [r8, #24]
   1c7d8:	cmp	r8, r7
   1c7dc:	bne	1c7c8 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xcc>
   1c7e0:	mov	r0, #0
   1c7e4:	sub	sp, fp, #28
   1c7e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c7ec <_myhtml_get_nodes_by_attribute_value@@Base>:
   1c7ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c7f0:	add	fp, sp, #24
   1c7f4:	sub	sp, sp, #16
   1c7f8:	ldr	r8, [fp, #24]
   1c7fc:	mov	r6, r3
   1c800:	mov	r7, r2
   1c804:	mov	r5, r1
   1c808:	mov	r4, r0
   1c80c:	cmp	r1, #0
   1c810:	beq	1c854 <_myhtml_get_nodes_by_attribute_value@@Base+0x68>
   1c814:	ldr	r3, [fp, #8]
   1c818:	cmp	r7, #0
   1c81c:	ldr	r0, [fp, #20]
   1c820:	ldreq	r7, [r4, #96]	; 0x60
   1c824:	ldr	r4, [fp, #16]
   1c828:	cmp	r3, #0
   1c82c:	ldrne	r1, [fp, #12]
   1c830:	cmpne	r1, #0
   1c834:	bne	1c888 <_myhtml_get_nodes_by_attribute_value@@Base+0x9c>
   1c838:	str	r0, [sp]
   1c83c:	mov	r0, r7
   1c840:	mov	r1, r5
   1c844:	mov	r2, r6
   1c848:	mov	r3, r4
   1c84c:	bl	10f6c <myhtml_get_nodes_by_attribute_value_recursion@plt>
   1c850:	b	1c8a0 <_myhtml_get_nodes_by_attribute_value@@Base+0xb4>
   1c854:	mov	r0, #1024	; 0x400
   1c858:	mov	r1, r8
   1c85c:	bl	115b4 <myhtml_collection_create@plt>
   1c860:	mov	r5, r0
   1c864:	cmp	r8, #0
   1c868:	beq	1c8b8 <_myhtml_get_nodes_by_attribute_value@@Base+0xcc>
   1c86c:	mov	r0, #0
   1c870:	cmp	r5, #0
   1c874:	beq	1c8b0 <_myhtml_get_nodes_by_attribute_value@@Base+0xc4>
   1c878:	ldr	r1, [r8]
   1c87c:	cmp	r1, #0
   1c880:	beq	1c814 <_myhtml_get_nodes_by_attribute_value@@Base+0x28>
   1c884:	b	1c8b0 <_myhtml_get_nodes_by_attribute_value@@Base+0xc4>
   1c888:	stm	sp, {r1, r4}
   1c88c:	str	r0, [sp, #8]
   1c890:	mov	r0, r7
   1c894:	mov	r1, r5
   1c898:	mov	r2, r6
   1c89c:	bl	1114c <myhtml_get_nodes_by_attribute_value_recursion_by_key@plt>
   1c8a0:	cmp	r8, #0
   1c8a4:	cmpne	r0, #0
   1c8a8:	strne	r0, [r8]
   1c8ac:	mov	r0, r5
   1c8b0:	sub	sp, fp, #24
   1c8b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c8b8:	cmp	r5, #0
   1c8bc:	bne	1c814 <_myhtml_get_nodes_by_attribute_value@@Base+0x28>
   1c8c0:	mov	r0, #0
   1c8c4:	b	1c8b0 <_myhtml_get_nodes_by_attribute_value@@Base+0xc4>

0001c8c8 <myhtml_get_nodes_by_attribute_value@@Base>:
   1c8c8:	push	{fp, lr}
   1c8cc:	mov	fp, sp
   1c8d0:	ldr	lr, [pc, #28]	; 1c8f4 <myhtml_get_nodes_by_attribute_value@@Base+0x2c>
   1c8d4:	cmp	r3, #0
   1c8d8:	ldr	lr, [pc, lr]
   1c8dc:	ldr	ip, [pc, #20]	; 1c8f8 <myhtml_get_nodes_by_attribute_value@@Base+0x30>
   1c8e0:	ldr	ip, [pc, ip]
   1c8e4:	movne	ip, lr
   1c8e8:	mov	r3, ip
   1c8ec:	pop	{fp, lr}
   1c8f0:	b	1c7ec <_myhtml_get_nodes_by_attribute_value@@Base>
   1c8f4:	muleq	pc, ip, lr	; <UNPREDICTABLE>
   1c8f8:			; <UNDEFINED> instruction: 0x000f8ebc

0001c8fc <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base>:
   1c8fc:	push	{fp, lr}
   1c900:	mov	fp, sp
   1c904:	ldr	lr, [pc, #28]	; 1c928 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x2c>
   1c908:	cmp	r3, #0
   1c90c:	ldr	lr, [pc, lr]
   1c910:	ldr	ip, [pc, #20]	; 1c92c <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x30>
   1c914:	ldr	ip, [pc, ip]
   1c918:	movne	ip, lr
   1c91c:	mov	r3, ip
   1c920:	pop	{fp, lr}
   1c924:	b	1c7ec <_myhtml_get_nodes_by_attribute_value@@Base>
   1c928:	strdeq	r8, [pc], -ip
   1c92c:	andeq	r8, pc, r4, lsl #30

0001c930 <myhtml_get_nodes_by_attribute_value_begin@@Base>:
   1c930:	push	{fp, lr}
   1c934:	mov	fp, sp
   1c938:	ldr	lr, [pc, #28]	; 1c95c <myhtml_get_nodes_by_attribute_value_begin@@Base+0x2c>
   1c93c:	cmp	r3, #0
   1c940:	ldr	lr, [pc, lr]
   1c944:	ldr	ip, [pc, #20]	; 1c960 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x30>
   1c948:	ldr	ip, [pc, ip]
   1c94c:	movne	ip, lr
   1c950:	mov	r3, ip
   1c954:	pop	{fp, lr}
   1c958:	b	1c7ec <_myhtml_get_nodes_by_attribute_value@@Base>
   1c95c:	andeq	r8, pc, r4, lsr #26
   1c960:	andeq	r8, pc, ip, lsl #26

0001c964 <myhtml_get_nodes_by_attribute_value_end@@Base>:
   1c964:	push	{fp, lr}
   1c968:	mov	fp, sp
   1c96c:	ldr	lr, [pc, #28]	; 1c990 <myhtml_get_nodes_by_attribute_value_end@@Base+0x2c>
   1c970:	cmp	r3, #0
   1c974:	ldr	lr, [pc, lr]
   1c978:	ldr	ip, [pc, #20]	; 1c994 <myhtml_get_nodes_by_attribute_value_end@@Base+0x30>
   1c97c:	ldr	ip, [pc, ip]
   1c980:	movne	ip, lr
   1c984:	mov	r3, ip
   1c988:	pop	{fp, lr}
   1c98c:	b	1c7ec <_myhtml_get_nodes_by_attribute_value@@Base>
   1c990:	strdeq	r8, [pc], -ip
   1c994:	andeq	r8, pc, r8, ror #26

0001c998 <myhtml_get_nodes_by_attribute_value_contain@@Base>:
   1c998:	push	{fp, lr}
   1c99c:	mov	fp, sp
   1c9a0:	ldr	lr, [pc, #28]	; 1c9c4 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x2c>
   1c9a4:	cmp	r3, #0
   1c9a8:	ldr	lr, [pc, lr]
   1c9ac:	ldr	ip, [pc, #20]	; 1c9c8 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x30>
   1c9b0:	ldr	ip, [pc, ip]
   1c9b4:	movne	ip, lr
   1c9b8:	mov	r3, ip
   1c9bc:	pop	{fp, lr}
   1c9c0:	b	1c7ec <_myhtml_get_nodes_by_attribute_value@@Base>
   1c9c4:			; <UNDEFINED> instruction: 0x000f8cb0
   1c9c8:	andeq	r8, pc, r8, asr #27

0001c9cc <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base>:
   1c9cc:	push	{fp, lr}
   1c9d0:	mov	fp, sp
   1c9d4:	ldr	lr, [pc, #28]	; 1c9f8 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x2c>
   1c9d8:	cmp	r3, #0
   1c9dc:	ldr	lr, [pc, lr]
   1c9e0:	ldr	ip, [pc, #20]	; 1c9fc <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x30>
   1c9e4:	ldr	ip, [pc, ip]
   1c9e8:	movne	ip, lr
   1c9ec:	mov	r3, ip
   1c9f0:	pop	{fp, lr}
   1c9f4:	b	1c7ec <_myhtml_get_nodes_by_attribute_value@@Base>
   1c9f8:	andeq	r8, pc, r8, lsl sp	; <UNPREDICTABLE>
   1c9fc:	andeq	r8, pc, ip, ror sp	; <UNPREDICTABLE>

0001ca00 <myhtml_attribute_next@@Base>:
   1ca00:	ldr	r0, [r0]
   1ca04:	bx	lr

0001ca08 <myhtml_attribute_prev@@Base>:
   1ca08:	ldr	r0, [r0, #4]
   1ca0c:	bx	lr

0001ca10 <myhtml_attribute_namespace@@Base>:
   1ca10:	ldr	r0, [r0, #64]	; 0x40
   1ca14:	bx	lr

0001ca18 <myhtml_attribute_namespace_set@@Base>:
   1ca18:	str	r1, [r0, #64]	; 0x40
   1ca1c:	bx	lr

0001ca20 <myhtml_attribute_key@@Base>:
   1ca20:	mov	r2, r0
   1ca24:	ldr	r0, [r0, #8]
   1ca28:	cmp	r0, #0
   1ca2c:	beq	1ca4c <myhtml_attribute_key@@Base+0x2c>
   1ca30:	ldr	r2, [r2, #16]
   1ca34:	cmp	r2, #0
   1ca38:	beq	1ca4c <myhtml_attribute_key@@Base+0x2c>
   1ca3c:	cmp	r1, #0
   1ca40:	strne	r2, [r1]
   1ca44:	bxne	lr
   1ca48:	bx	lr
   1ca4c:	mov	r0, #0
   1ca50:	cmp	r1, #0
   1ca54:	strne	r0, [r1]
   1ca58:	bx	lr

0001ca5c <myhtml_attribute_value@@Base>:
   1ca5c:	mov	r2, r0
   1ca60:	ldr	r0, [r0, #28]
   1ca64:	cmp	r0, #0
   1ca68:	beq	1ca88 <myhtml_attribute_value@@Base+0x2c>
   1ca6c:	ldr	r2, [r2, #36]	; 0x24
   1ca70:	cmp	r2, #0
   1ca74:	beq	1ca88 <myhtml_attribute_value@@Base+0x2c>
   1ca78:	cmp	r1, #0
   1ca7c:	strne	r2, [r1]
   1ca80:	bxne	lr
   1ca84:	bx	lr
   1ca88:	mov	r0, #0
   1ca8c:	cmp	r1, #0
   1ca90:	strne	r0, [r1]
   1ca94:	bx	lr

0001ca98 <myhtml_attribute_key_string@@Base>:
   1ca98:	cmp	r0, #0
   1ca9c:	addne	r0, r0, #8
   1caa0:	bx	lr

0001caa4 <myhtml_attribute_value_string@@Base>:
   1caa4:	cmp	r0, #0
   1caa8:	addne	r0, r0, #28
   1caac:	bx	lr

0001cab0 <myhtml_attribute_by_key@@Base>:
   1cab0:	cmp	r0, #0
   1cab4:	beq	1cac8 <myhtml_attribute_by_key@@Base+0x18>
   1cab8:	ldr	r0, [r0, #32]
   1cabc:	cmp	r0, #0
   1cac0:	beq	1cac8 <myhtml_attribute_by_key@@Base+0x18>
   1cac4:	b	11f80 <myhtml_token_attr_by_name@plt>
   1cac8:	mov	r0, #0
   1cacc:	bx	lr

0001cad0 <myhtml_attribute_add@@Base>:
   1cad0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1cad4:	add	fp, sp, #24
   1cad8:	sub	sp, sp, #16
   1cadc:	cmp	r0, #0
   1cae0:	beq	1cb58 <myhtml_attribute_add@@Base+0x88>
   1cae4:	mov	r5, r1
   1cae8:	ldr	r1, [r0, #32]
   1caec:	ldr	r4, [r0, #40]	; 0x28
   1caf0:	mov	r6, r3
   1caf4:	mov	r8, r2
   1caf8:	mov	r7, r0
   1cafc:	cmp	r1, #0
   1cb00:	bne	1cb2c <myhtml_attribute_add@@Base+0x5c>
   1cb04:	ldr	r0, [r4, #8]
   1cb08:	ldr	r1, [r4, #40]	; 0x28
   1cb0c:	bl	11ba8 <myhtml_token_node_create@plt>
   1cb10:	cmp	r0, #0
   1cb14:	str	r0, [r7, #32]
   1cb18:	beq	1cb58 <myhtml_attribute_add@@Base+0x88>
   1cb1c:	mov	r1, r0
   1cb20:	ldr	r0, [r0, #48]	; 0x30
   1cb24:	orr	r0, r0, #4
   1cb28:	str	r0, [r1, #48]	; 0x30
   1cb2c:	ldr	r2, [fp, #12]
   1cb30:	ldr	r3, [fp, #8]
   1cb34:	ldr	r0, [r4, #8]
   1cb38:	ldr	r7, [r4, #40]	; 0x28
   1cb3c:	str	r6, [sp]
   1cb40:	stmib	sp, {r3, r7}
   1cb44:	str	r2, [sp, #12]
   1cb48:	mov	r2, r5
   1cb4c:	mov	r3, r8
   1cb50:	bl	119e0 <myhtml_token_node_attr_append_with_convert_encoding@plt>
   1cb54:	b	1cb5c <myhtml_attribute_add@@Base+0x8c>
   1cb58:	mov	r0, #0
   1cb5c:	sub	sp, fp, #24
   1cb60:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001cb64 <myhtml_attribute_remove@@Base>:
   1cb64:	cmp	r0, #0
   1cb68:	beq	1cb7c <myhtml_attribute_remove@@Base+0x18>
   1cb6c:	ldr	r0, [r0, #32]
   1cb70:	cmp	r0, #0
   1cb74:	beq	1cb7c <myhtml_attribute_remove@@Base+0x18>
   1cb78:	b	117dc <myhtml_token_attr_remove@plt>
   1cb7c:	mov	r0, #0
   1cb80:	bx	lr

0001cb84 <myhtml_attribute_remove_by_key@@Base>:
   1cb84:	cmp	r0, #0
   1cb88:	beq	1cb9c <myhtml_attribute_remove_by_key@@Base+0x18>
   1cb8c:	ldr	r0, [r0, #32]
   1cb90:	cmp	r0, #0
   1cb94:	beq	1cb9c <myhtml_attribute_remove_by_key@@Base+0x18>
   1cb98:	b	11f68 <myhtml_token_attr_remove_by_name@plt>
   1cb9c:	mov	r0, #0
   1cba0:	bx	lr

0001cba4 <myhtml_attribute_delete@@Base>:
   1cba4:	push	{r4, r5, fp, lr}
   1cba8:	add	fp, sp, #8
   1cbac:	cmp	r1, #0
   1cbb0:	popeq	{r4, r5, fp, pc}
   1cbb4:	mov	r5, r0
   1cbb8:	ldr	r0, [r1, #32]
   1cbbc:	cmp	r0, #0
   1cbc0:	beq	1cbe0 <myhtml_attribute_delete@@Base+0x3c>
   1cbc4:	mov	r1, r2
   1cbc8:	mov	r4, r2
   1cbcc:	bl	117dc <myhtml_token_attr_remove@plt>
   1cbd0:	mov	r0, r5
   1cbd4:	mov	r1, r4
   1cbd8:	pop	{r4, r5, fp, lr}
   1cbdc:	b	1cbe4 <myhtml_attribute_free@@Base>
   1cbe0:	pop	{r4, r5, fp, pc}

0001cbe4 <myhtml_attribute_free@@Base>:
   1cbe4:	push	{r4, r5, fp, lr}
   1cbe8:	add	fp, sp, #8
   1cbec:	ldr	r2, [r1, #8]
   1cbf0:	mov	r4, r1
   1cbf4:	mov	r5, r0
   1cbf8:	cmp	r2, #0
   1cbfc:	beq	1cc0c <myhtml_attribute_free@@Base+0x28>
   1cc00:	ldr	r0, [r4, #20]
   1cc04:	ldr	r1, [r4, #24]
   1cc08:	bl	11938 <mchar_async_free@plt>
   1cc0c:	ldr	r2, [r4, #28]
   1cc10:	cmp	r2, #0
   1cc14:	beq	1cc24 <myhtml_attribute_free@@Base+0x40>
   1cc18:	ldr	r0, [r4, #40]	; 0x28
   1cc1c:	ldr	r1, [r4, #44]	; 0x2c
   1cc20:	bl	11938 <mchar_async_free@plt>
   1cc24:	ldr	r0, [r5, #8]
   1cc28:	mov	r1, r4
   1cc2c:	ldr	r0, [r0, #8]
   1cc30:	pop	{r4, r5, fp, lr}
   1cc34:	b	11374 <mcobject_async_free@plt>

0001cc38 <myhtml_attribute_key_raw_position@@Base>:
   1cc38:	cmp	r1, #0
   1cc3c:	beq	1cc50 <myhtml_attribute_key_raw_position@@Base+0x18>
   1cc40:	ldr	r2, [r1, #48]	; 0x30
   1cc44:	ldr	r1, [r1, #52]	; 0x34
   1cc48:	str	r2, [r0]
   1cc4c:	b	1cc58 <myhtml_attribute_key_raw_position@@Base+0x20>
   1cc50:	mov	r1, #0
   1cc54:	str	r1, [r0]
   1cc58:	str	r1, [r0, #4]
   1cc5c:	bx	lr

0001cc60 <myhtml_attribute_value_raw_position@@Base>:
   1cc60:	cmp	r1, #0
   1cc64:	beq	1cc78 <myhtml_attribute_value_raw_position@@Base+0x18>
   1cc68:	ldr	r2, [r1, #56]	; 0x38
   1cc6c:	ldr	r1, [r1, #60]	; 0x3c
   1cc70:	str	r2, [r0]
   1cc74:	b	1cc80 <myhtml_attribute_value_raw_position@@Base+0x20>
   1cc78:	mov	r1, #0
   1cc7c:	str	r1, [r0]
   1cc80:	str	r1, [r0, #4]
   1cc84:	bx	lr

0001cc88 <myhtml_collection_clean@@Base>:
   1cc88:	cmp	r0, #0
   1cc8c:	movne	r1, #0
   1cc90:	strne	r1, [r0, #8]
   1cc94:	bx	lr

0001cc98 <myhtml_collection_destroy@@Base>:
   1cc98:	cmp	r0, #0
   1cc9c:	beq	1ccc8 <myhtml_collection_destroy@@Base+0x30>
   1cca0:	push	{r4, sl, fp, lr}
   1cca4:	add	fp, sp, #8
   1cca8:	mov	r4, r0
   1ccac:	ldr	r0, [r0]
   1ccb0:	cmp	r0, #0
   1ccb4:	beq	1ccbc <myhtml_collection_destroy@@Base+0x24>
   1ccb8:	bl	11eb4 <mycore_free@plt>
   1ccbc:	mov	r0, r4
   1ccc0:	bl	11eb4 <mycore_free@plt>
   1ccc4:	pop	{r4, sl, fp, lr}
   1ccc8:	mov	r0, #0
   1cccc:	bx	lr

0001ccd0 <myhtml_queue_add@@Base>:
   1ccd0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ccd4:	add	fp, sp, #24
   1ccd8:	mov	r5, r0
   1ccdc:	ldr	r7, [r0, #68]	; 0x44
   1cce0:	ldr	r0, [r0, #184]	; 0xb8
   1cce4:	cmp	r2, #0
   1cce8:	mov	r6, r2
   1ccec:	mov	r8, r1
   1ccf0:	andsne	r0, r0, #4
   1ccf4:	bne	1cdf4 <myhtml_queue_add@@Base+0x124>
   1ccf8:	ldr	r0, [r5, #180]	; 0xb4
   1ccfc:	tst	r0, #16
   1cd00:	bne	1cd58 <myhtml_queue_add@@Base+0x88>
   1cd04:	cmp	r7, #0
   1cd08:	strne	r6, [r7, #4]
   1cd0c:	ldr	r0, [r5]
   1cd10:	ldr	r1, [r5, #20]
   1cd14:	ldr	r0, [r0]
   1cd18:	bl	117a0 <mythread_queue_node_malloc_round@plt>
   1cd1c:	str	r0, [r5, #68]	; 0x44
   1cd20:	ldr	r1, [r5, #20]
   1cd24:	ldr	r2, [r1]
   1cd28:	ldr	r2, [r2, #12]
   1cd2c:	cmp	r2, #0
   1cd30:	bne	1cd9c <myhtml_queue_add@@Base+0xcc>
   1cd34:	ldr	r0, [r5]
   1cd38:	ldr	r0, [r0, #4]
   1cd3c:	bl	11e18 <mythread_queue_list_entry_make_batch@plt>
   1cd40:	ldr	r0, [r5]
   1cd44:	ldr	r1, [r5, #20]
   1cd48:	ldr	r0, [r0]
   1cd4c:	bl	11fa4 <mythread_queue_list_entry_make_stream@plt>
   1cd50:	ldr	r0, [r5, #68]	; 0x44
   1cd54:	b	1cd9c <myhtml_queue_add@@Base+0xcc>
   1cd58:	cmp	r6, #0
   1cd5c:	cmpne	r7, #0
   1cd60:	beq	1cd80 <myhtml_queue_add@@Base+0xb0>
   1cd64:	mov	r0, #0
   1cd68:	mov	r1, r7
   1cd6c:	str	r6, [r7, #4]
   1cd70:	bl	110f8 <myhtml_parser_worker@plt>
   1cd74:	mov	r0, #0
   1cd78:	mov	r1, r7
   1cd7c:	bl	12088 <myhtml_parser_stream@plt>
   1cd80:	ldr	r0, [r5]
   1cd84:	ldr	r1, [r5, #24]
   1cd88:	mov	r2, #4
   1cd8c:	mov	r3, #0
   1cd90:	ldr	r0, [r0]
   1cd94:	bl	11dc4 <mythread_queue_node_malloc_limit@plt>
   1cd98:	str	r0, [r5, #68]	; 0x44
   1cd9c:	mov	r4, #2
   1cda0:	cmp	r0, #0
   1cda4:	beq	1ce28 <myhtml_queue_add@@Base+0x158>
   1cda8:	cmp	r6, #0
   1cdac:	str	r7, [r0, #8]
   1cdb0:	str	r5, [r0]
   1cdb4:	cmpne	r7, #0
   1cdb8:	beq	1cdc8 <myhtml_queue_add@@Base+0xf8>
   1cdbc:	mov	r0, r5
   1cdc0:	mov	r1, r6
   1cdc4:	bl	114f4 <myhtml_tokenizer_calc_current_namespace@plt>
   1cdc8:	ldr	r0, [r5, #8]
   1cdcc:	ldr	r1, [r0, #12]
   1cdd0:	bl	11ba8 <myhtml_token_node_create@plt>
   1cdd4:	cmp	r0, #0
   1cdd8:	str	r0, [r5, #64]	; 0x40
   1cddc:	beq	1ce28 <myhtml_queue_add@@Base+0x158>
   1cde0:	ldr	r1, [r5, #192]	; 0xc0
   1cde4:	add	r1, r1, r8
   1cde8:	str	r1, [r0, #24]
   1cdec:	str	r1, [r0, #32]
   1cdf0:	b	1ce24 <myhtml_queue_add@@Base+0x154>
   1cdf4:	ldr	r0, [r6]
   1cdf8:	cmp	r0, #1
   1cdfc:	bne	1ccf8 <myhtml_queue_add@@Base+0x28>
   1ce00:	ldr	r0, [r6, #48]	; 0x30
   1ce04:	tst	r0, #8
   1ce08:	beq	1ccf8 <myhtml_queue_add@@Base+0x28>
   1ce0c:	mov	r0, r6
   1ce10:	bl	12028 <myhtml_token_node_clean@plt>
   1ce14:	ldr	r0, [r5, #192]	; 0xc0
   1ce18:	add	r0, r0, r8
   1ce1c:	str	r0, [r6, #24]
   1ce20:	str	r0, [r6, #32]
   1ce24:	mov	r4, #0
   1ce28:	mov	r0, r4
   1ce2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001ce30 <myhtml_utils_strcmp@@Base>:
   1ce30:	push	{fp, lr}
   1ce34:	mov	fp, sp
   1ce38:	mov	ip, r0
   1ce3c:	mov	r0, #1
   1ce40:	cmp	r2, #0
   1ce44:	popeq	{fp, pc}
   1ce48:	ldrb	lr, [r1]
   1ce4c:	sub	r3, lr, #65	; 0x41
   1ce50:	uxtb	r3, r3
   1ce54:	cmp	r3, #26
   1ce58:	ldrb	r3, [ip]
   1ce5c:	orrcc	lr, lr, #96	; 0x60
   1ce60:	uxtb	lr, lr
   1ce64:	cmp	lr, r3
   1ce68:	bne	1ce80 <myhtml_utils_strcmp@@Base+0x50>
   1ce6c:	add	r1, r1, #1
   1ce70:	add	ip, ip, #1
   1ce74:	subs	r2, r2, #1
   1ce78:	bne	1ce48 <myhtml_utils_strcmp@@Base+0x18>
   1ce7c:	pop	{fp, pc}
   1ce80:	mov	r0, #0
   1ce84:	pop	{fp, pc}

0001ce88 <myhtml_is_html_node@@Base>:
   1ce88:	mov	r2, r0
   1ce8c:	mov	r0, #0
   1ce90:	cmp	r2, #0
   1ce94:	beq	1ceb4 <myhtml_is_html_node@@Base+0x2c>
   1ce98:	ldr	r3, [r2, #4]
   1ce9c:	cmp	r3, r1
   1cea0:	bxne	lr
   1cea4:	ldr	r0, [r2, #8]
   1cea8:	sub	r0, r0, #1
   1ceac:	clz	r0, r0
   1ceb0:	lsr	r0, r0, #5
   1ceb4:	bx	lr

0001ceb8 <myhtml_version@@Base>:
   1ceb8:	mov	r3, #4
   1cebc:	mov	r1, #5
   1cec0:	mov	r2, #0
   1cec4:	str	r3, [r0]
   1cec8:	str	r2, [r0, #4]
   1cecc:	str	r1, [r0, #8]
   1ced0:	bx	lr

0001ced4 <myhtml_node_clone@@Base>:
   1ced4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1ced8:	add	fp, sp, #24
   1cedc:	sub	sp, sp, #8
   1cee0:	mov	r5, r1
   1cee4:	mov	r6, r0
   1cee8:	bl	11314 <myhtml_tree_node_create@plt>
   1ceec:	ldr	r7, [r5, #4]
   1cef0:	mov	r4, r0
   1cef4:	cmp	r7, #252	; 0xfc
   1cef8:	bcc	1cf68 <myhtml_node_clone@@Base+0x94>
   1cefc:	ldr	r0, [r6, #28]
   1cf00:	mov	r1, r7
   1cf04:	bl	11bc0 <myhtml_tag_get_by_id@plt>
   1cf08:	mov	r9, r0
   1cf0c:	ldr	r0, [r5, #40]	; 0x28
   1cf10:	ldr	r1, [r5, #4]
   1cf14:	ldr	r0, [r0, #28]
   1cf18:	bl	11bc0 <myhtml_tag_get_by_id@plt>
   1cf1c:	mov	r8, r0
   1cf20:	cmp	r9, #0
   1cf24:	beq	1cf4c <myhtml_node_clone@@Base+0x78>
   1cf28:	ldr	r2, [r9, #8]
   1cf2c:	ldr	r0, [r8, #8]
   1cf30:	cmp	r2, r0
   1cf34:	bne	1cf4c <myhtml_node_clone@@Base+0x78>
   1cf38:	ldr	r1, [r8, #4]
   1cf3c:	ldr	r0, [r9, #4]
   1cf40:	bl	11fb0 <mycore_strncmp@plt>
   1cf44:	cmp	r0, #0
   1cf48:	beq	1cf68 <myhtml_node_clone@@Base+0x94>
   1cf4c:	ldr	r0, [r6, #28]
   1cf50:	ldmib	r8, {r1, r2}
   1cf54:	mov	r3, #1
   1cf58:	str	r3, [sp]
   1cf5c:	mov	r3, #0
   1cf60:	bl	11338 <myhtml_tag_add@plt>
   1cf64:	mov	r7, r0
   1cf68:	ldr	r1, [r5, #32]
   1cf6c:	ldr	r0, [r6, #8]
   1cf70:	ldr	r2, [r6, #40]	; 0x28
   1cf74:	ldr	r3, [r6, #44]	; 0x2c
   1cf78:	bl	11260 <myhtml_token_node_clone@plt>
   1cf7c:	str	r0, [r4, #32]
   1cf80:	str	r7, [r4, #4]
   1cf84:	cmp	r0, #0
   1cf88:	ldr	r1, [r5, #8]
   1cf8c:	str	r1, [r4, #8]
   1cf90:	beq	1cfa4 <myhtml_node_clone@@Base+0xd0>
   1cf94:	str	r7, [r0]
   1cf98:	ldr	r1, [r0, #48]	; 0x30
   1cf9c:	orr	r1, r1, #4
   1cfa0:	str	r1, [r0, #48]	; 0x30
   1cfa4:	mov	r0, r4
   1cfa8:	sub	sp, fp, #24
   1cfac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001cfb0 <myhtml_node_clone_deep@@Base>:
   1cfb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cfb4:	add	fp, sp, #28
   1cfb8:	sub	sp, sp, #4
   1cfbc:	mov	r5, r1
   1cfc0:	mov	r9, r0
   1cfc4:	mov	r7, #0
   1cfc8:	cmp	r1, #0
   1cfcc:	mov	r4, #0
   1cfd0:	beq	1cff4 <myhtml_node_clone_deep@@Base+0x44>
   1cfd4:	ldr	r0, [r5, #40]	; 0x28
   1cfd8:	mov	r4, r5
   1cfdc:	cmp	r0, #0
   1cfe0:	beq	1cff4 <myhtml_node_clone_deep@@Base+0x44>
   1cfe4:	ldr	r0, [r0, #84]	; 0x54
   1cfe8:	mov	r4, r5
   1cfec:	cmp	r0, r5
   1cff0:	ldreq	r4, [r5, #20]
   1cff4:	mov	r0, r9
   1cff8:	mov	r1, r4
   1cffc:	bl	11fec <myhtml_node_clone@plt>
   1d000:	cmp	r0, #0
   1d004:	beq	1d09c <myhtml_node_clone_deep@@Base+0xec>
   1d008:	ldr	r4, [r4, #20]
   1d00c:	mov	sl, r0
   1d010:	cmp	r4, #0
   1d014:	beq	1d098 <myhtml_node_clone_deep@@Base+0xe8>
   1d018:	mov	r0, r9
   1d01c:	mov	r1, r4
   1d020:	bl	11fec <myhtml_node_clone@plt>
   1d024:	cmp	r0, #0
   1d028:	beq	1d09c <myhtml_node_clone_deep@@Base+0xec>
   1d02c:	mov	r6, r0
   1d030:	mov	r7, sl
   1d034:	mov	r0, r7
   1d038:	mov	r1, r6
   1d03c:	bl	118e4 <myhtml_tree_node_add_child@plt>
   1d040:	ldr	r8, [r4, #20]
   1d044:	cmp	r8, #0
   1d048:	bne	1d070 <myhtml_node_clone_deep@@Base+0xc0>
   1d04c:	b	1d058 <myhtml_node_clone_deep@@Base+0xa8>
   1d050:	ldr	r4, [r4, #24]
   1d054:	ldr	r7, [r7, #24]
   1d058:	cmp	r4, r5
   1d05c:	beq	1d098 <myhtml_node_clone_deep@@Base+0xe8>
   1d060:	ldr	r8, [r4, #16]
   1d064:	cmp	r8, #0
   1d068:	beq	1d050 <myhtml_node_clone_deep@@Base+0xa0>
   1d06c:	mov	r6, r7
   1d070:	mov	r0, r9
   1d074:	mov	r1, r8
   1d078:	mov	r7, r6
   1d07c:	bl	11fec <myhtml_node_clone@plt>
   1d080:	mov	r6, r0
   1d084:	cmp	r0, #0
   1d088:	mov	r4, r8
   1d08c:	bne	1d034 <myhtml_node_clone_deep@@Base+0x84>
   1d090:	mov	r7, #0
   1d094:	b	1d09c <myhtml_node_clone_deep@@Base+0xec>
   1d098:	mov	r7, sl
   1d09c:	mov	r0, r7
   1d0a0:	sub	sp, fp, #28
   1d0a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d0a8 <myhtml_namespace_name_entry_by_name@@Base>:
   1d0a8:	push	{r4, sl, fp, lr}
   1d0ac:	add	fp, sp, #8
   1d0b0:	mov	r2, r1
   1d0b4:	mov	ip, r0
   1d0b8:	ldrb	r1, [r0], r1
   1d0bc:	ldrb	r0, [r0, #-1]
   1d0c0:	ldr	r3, [pc, #156]	; 1d164 <myhtml_namespace_name_entry_by_name@@Base+0xbc>
   1d0c4:	ldr	lr, [pc, #156]	; 1d168 <myhtml_namespace_name_entry_by_name@@Base+0xc0>
   1d0c8:	add	r3, pc, r3
   1d0cc:	add	lr, pc, lr
   1d0d0:	ldrb	r1, [r3, r1]
   1d0d4:	ldrb	r0, [r3, r0]
   1d0d8:	mul	r1, r1, r2
   1d0dc:	mul	r0, r1, r0
   1d0e0:	movw	r1, #27595	; 0x6bcb
   1d0e4:	movt	r1, #44840	; 0xaf28
   1d0e8:	umull	r1, r3, r0, r1
   1d0ec:	sub	r1, r0, r3
   1d0f0:	add	r1, r3, r1, lsr #1
   1d0f4:	mov	r3, #19
   1d0f8:	lsr	r1, r1, #4
   1d0fc:	mls	r0, r1, r3, r0
   1d100:	add	r1, r0, #1
   1d104:	add	r3, r1, r1, lsl #2
   1d108:	mov	r4, lr
   1d10c:	ldr	r0, [r4, r3, lsl #2]!
   1d110:	cmp	r0, #0
   1d114:	beq	1d144 <myhtml_namespace_name_entry_by_name@@Base+0x9c>
   1d118:	add	r3, lr, r3, lsl #2
   1d11c:	ldr	r3, [r3, #4]
   1d120:	cmp	r3, r2
   1d124:	beq	1d14c <myhtml_namespace_name_entry_by_name@@Base+0xa4>
   1d128:	cmp	r3, r2
   1d12c:	bhi	1d144 <myhtml_namespace_name_entry_by_name@@Base+0x9c>
   1d130:	add	r0, r1, r1, lsl #2
   1d134:	add	r0, lr, r0, lsl #2
   1d138:	ldr	r1, [r0, #12]
   1d13c:	add	r3, r1, r1, lsl #2
   1d140:	b	1d108 <myhtml_namespace_name_entry_by_name@@Base+0x60>
   1d144:	mov	r0, #0
   1d148:	pop	{r4, sl, fp, pc}
   1d14c:	mov	r1, ip
   1d150:	bl	11554 <mycore_strncasecmp@plt>
   1d154:	cmp	r0, #0
   1d158:	movne	r4, #0
   1d15c:	mov	r0, r4
   1d160:	pop	{r4, sl, fp, pc}
   1d164:	andeq	sp, sp, ip, lsl r9
   1d168:	andeq	r3, pc, ip, lsl r3	; <UNPREDICTABLE>

0001d16c <myhtml_namespace_id_by_name@@Base>:
   1d16c:	push	{r4, sl, fp, lr}
   1d170:	add	fp, sp, #8
   1d174:	mov	r4, r2
   1d178:	bl	114d0 <myhtml_namespace_name_entry_by_name@plt>
   1d17c:	cmp	r0, #0
   1d180:	beq	1d19c <myhtml_namespace_id_by_name@@Base+0x30>
   1d184:	mov	r1, r0
   1d188:	cmp	r4, #0
   1d18c:	mov	r0, #1
   1d190:	ldrne	r1, [r1, #8]
   1d194:	strne	r1, [r4]
   1d198:	pop	{r4, sl, fp, pc}
   1d19c:	mov	r0, #0
   1d1a0:	pop	{r4, sl, fp, pc}

0001d1a4 <myhtml_namespace_name_by_id@@Base>:
   1d1a4:	push	{r4, r5, fp, lr}
   1d1a8:	add	fp, sp, #8
   1d1ac:	mov	r5, r1
   1d1b0:	cmp	r0, #8
   1d1b4:	bcc	1d1c8 <myhtml_namespace_name_by_id@@Base+0x24>
   1d1b8:	mov	r4, #0
   1d1bc:	cmp	r5, #0
   1d1c0:	strne	r4, [r5]
   1d1c4:	b	1d1e8 <myhtml_namespace_name_by_id@@Base+0x44>
   1d1c8:	ldr	r1, [pc, #32]	; 1d1f0 <myhtml_namespace_name_by_id@@Base+0x4c>
   1d1cc:	cmp	r5, #0
   1d1d0:	add	r1, pc, r1
   1d1d4:	add	r4, r1, r0, lsl #3
   1d1d8:	beq	1d1e8 <myhtml_namespace_name_by_id@@Base+0x44>
   1d1dc:	mov	r0, r4
   1d1e0:	bl	118a8 <strlen@plt>
   1d1e4:	str	r0, [r5]
   1d1e8:	mov	r0, r4
   1d1ec:	pop	{r4, r5, fp, pc}
   1d1f0:	andeq	sp, sp, r4, lsl r9

0001d1f4 <myhtml_namespace_url_by_id@@Base>:
   1d1f4:	cmp	r0, #8
   1d1f8:	bcc	1d210 <myhtml_namespace_url_by_id@@Base+0x1c>
   1d1fc:	mov	r0, #0
   1d200:	cmp	r1, #0
   1d204:	strne	r0, [r1]
   1d208:	bxne	lr
   1d20c:	bx	lr
   1d210:	ldr	r2, [pc, #36]	; 1d23c <myhtml_namespace_url_by_id@@Base+0x48>
   1d214:	cmp	r1, #0
   1d218:	add	r2, pc, r2
   1d21c:	beq	1d230 <myhtml_namespace_url_by_id@@Base+0x3c>
   1d220:	add	r3, r0, r0, lsl #1
   1d224:	add	r3, r2, r3, lsl #2
   1d228:	ldr	r3, [r3, #4]
   1d22c:	str	r3, [r1]
   1d230:	add	r0, r0, r0, lsl #1
   1d234:	ldr	r0, [r2, r0, lsl #2]
   1d238:	bx	lr
   1d23c:	andeq	r3, pc, r0, ror #6

0001d240 <myhtml_namespace_id_by_url@@Base>:
   1d240:	mov	r0, #0
   1d244:	bx	lr

0001d248 <myhtml_string_append_with_preprocessing@@Base>:
   1d248:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d24c:	add	fp, sp, #28
   1d250:	sub	sp, sp, #4
   1d254:	mov	r4, r0
   1d258:	mov	r7, r1
   1d25c:	ldr	r0, [r0, #4]
   1d260:	mov	r8, r3
   1d264:	mov	r6, r2
   1d268:	ldr	r1, [r4, #8]
   1d26c:	add	r1, r2, r1
   1d270:	add	r1, r1, #1
   1d274:	cmp	r1, r0
   1d278:	bcc	1d284 <myhtml_string_append_with_preprocessing@@Base+0x3c>
   1d27c:	mov	r0, r4
   1d280:	bl	11b24 <mycore_string_realloc@plt>
   1d284:	ldr	r1, [r4]
   1d288:	cmp	r6, #0
   1d28c:	beq	1d34c <myhtml_string_append_with_preprocessing@@Base+0x104>
   1d290:	mov	r5, #0
   1d294:	mov	r9, #189	; 0xbd
   1d298:	mov	sl, #10
   1d29c:	ldrb	r0, [r7, r5]
   1d2a0:	cmp	r0, #0
   1d2a4:	beq	1d2d4 <myhtml_string_append_with_preprocessing@@Base+0x8c>
   1d2a8:	cmp	r0, #13
   1d2ac:	bne	1d2dc <myhtml_string_append_with_preprocessing@@Base+0x94>
   1d2b0:	ldr	r0, [r4, #8]
   1d2b4:	strb	sl, [r1, r0]
   1d2b8:	add	r0, r5, #1
   1d2bc:	cmp	r0, r6
   1d2c0:	bcs	1d360 <myhtml_string_append_with_preprocessing@@Base+0x118>
   1d2c4:	ldrb	r2, [r7, r0]
   1d2c8:	cmp	r2, #10
   1d2cc:	moveq	r5, r0
   1d2d0:	b	1d32c <myhtml_string_append_with_preprocessing@@Base+0xe4>
   1d2d4:	cmp	r8, #0
   1d2d8:	beq	1d2e8 <myhtml_string_append_with_preprocessing@@Base+0xa0>
   1d2dc:	ldr	r2, [r4, #8]
   1d2e0:	strb	r0, [r1, r2]
   1d2e4:	b	1d32c <myhtml_string_append_with_preprocessing@@Base+0xe4>
   1d2e8:	ldr	r0, [r4, #4]
   1d2ec:	add	r1, r0, #5
   1d2f0:	mov	r0, r4
   1d2f4:	bl	11b24 <mycore_string_realloc@plt>
   1d2f8:	ldr	r1, [r4]
   1d2fc:	ldr	r0, [r4, #8]
   1d300:	mov	r2, #239	; 0xef
   1d304:	strb	r2, [r1, r0]
   1d308:	mov	r2, #191	; 0xbf
   1d30c:	ldr	r0, [r4, #8]
   1d310:	add	r0, r0, #1
   1d314:	str	r0, [r4, #8]
   1d318:	strb	r2, [r1, r0]
   1d31c:	ldr	r0, [r4, #8]
   1d320:	add	r0, r0, #1
   1d324:	str	r0, [r4, #8]
   1d328:	strb	r9, [r1, r0]
   1d32c:	ldr	r0, [r4, #8]
   1d330:	add	r5, r5, #1
   1d334:	cmp	r5, r6
   1d338:	add	r2, r0, #1
   1d33c:	str	r2, [r4, #8]
   1d340:	bcc	1d29c <myhtml_string_append_with_preprocessing@@Base+0x54>
   1d344:	ldr	r1, [r4]
   1d348:	b	1d350 <myhtml_string_append_with_preprocessing@@Base+0x108>
   1d34c:	ldr	r2, [r4, #8]
   1d350:	mov	r0, #0
   1d354:	strb	r0, [r1, r2]
   1d358:	sub	sp, fp, #28
   1d35c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d360:	ldr	r1, [r4, #8]
   1d364:	ldr	r2, [r4, #4]
   1d368:	add	r0, r1, #1
   1d36c:	cmp	r0, r2
   1d370:	str	r0, [r4, #8]
   1d374:	bcc	1d388 <myhtml_string_append_with_preprocessing@@Base+0x140>
   1d378:	add	r1, r1, #3
   1d37c:	mov	r0, r4
   1d380:	bl	11b24 <mycore_string_realloc@plt>
   1d384:	ldr	r0, [r4, #8]
   1d388:	ldr	r1, [r4]
   1d38c:	mov	r2, #0
   1d390:	strb	r2, [r1, r0]
   1d394:	ldr	r0, [r4, #8]
   1d398:	b	1d358 <myhtml_string_append_with_preprocessing@@Base+0x110>

0001d39c <myhtml_string_append_lowercase_with_preprocessing@@Base>:
   1d39c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d3a0:	add	fp, sp, #28
   1d3a4:	sub	sp, sp, #4
   1d3a8:	mov	r4, r0
   1d3ac:	mov	r7, r1
   1d3b0:	ldr	r0, [r0, #4]
   1d3b4:	mov	r8, r3
   1d3b8:	mov	r6, r2
   1d3bc:	ldr	r1, [r4, #8]
   1d3c0:	add	r1, r2, r1
   1d3c4:	add	r1, r1, #1
   1d3c8:	cmp	r1, r0
   1d3cc:	bcc	1d3d8 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x3c>
   1d3d0:	mov	r0, r4
   1d3d4:	bl	11b24 <mycore_string_realloc@plt>
   1d3d8:	ldr	r1, [r4]
   1d3dc:	cmp	r6, #0
   1d3e0:	beq	1d4ac <myhtml_string_append_lowercase_with_preprocessing@@Base+0x110>
   1d3e4:	ldr	sl, [pc, #272]	; 1d4fc <myhtml_string_append_lowercase_with_preprocessing@@Base+0x160>
   1d3e8:	mov	r5, #0
   1d3ec:	mov	r9, #10
   1d3f0:	add	sl, pc, sl
   1d3f4:	ldrb	r0, [r7, r5]
   1d3f8:	cmp	r0, #0
   1d3fc:	beq	1d42c <myhtml_string_append_lowercase_with_preprocessing@@Base+0x90>
   1d400:	cmp	r0, #13
   1d404:	bne	1d434 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x98>
   1d408:	ldr	r0, [r4, #8]
   1d40c:	strb	r9, [r1, r0]
   1d410:	add	r0, r5, #1
   1d414:	cmp	r0, r6
   1d418:	bcs	1d4c0 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x124>
   1d41c:	ldrb	r2, [r7, r0]
   1d420:	cmp	r2, #10
   1d424:	moveq	r5, r0
   1d428:	b	1d48c <myhtml_string_append_lowercase_with_preprocessing@@Base+0xf0>
   1d42c:	cmp	r8, #0
   1d430:	beq	1d444 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xa8>
   1d434:	ldrb	r0, [sl, r0]
   1d438:	ldr	r2, [r4, #8]
   1d43c:	strb	r0, [r1, r2]
   1d440:	b	1d48c <myhtml_string_append_lowercase_with_preprocessing@@Base+0xf0>
   1d444:	ldr	r0, [r4, #4]
   1d448:	add	r1, r0, #5
   1d44c:	mov	r0, r4
   1d450:	bl	11b24 <mycore_string_realloc@plt>
   1d454:	ldr	r1, [r4]
   1d458:	ldr	r0, [r4, #8]
   1d45c:	mov	r2, #239	; 0xef
   1d460:	strb	r2, [r1, r0]
   1d464:	mov	r2, #191	; 0xbf
   1d468:	ldr	r0, [r4, #8]
   1d46c:	add	r0, r0, #1
   1d470:	str	r0, [r4, #8]
   1d474:	strb	r2, [r1, r0]
   1d478:	mov	r2, #189	; 0xbd
   1d47c:	ldr	r0, [r4, #8]
   1d480:	add	r0, r0, #1
   1d484:	str	r0, [r4, #8]
   1d488:	strb	r2, [r1, r0]
   1d48c:	ldr	r0, [r4, #8]
   1d490:	add	r5, r5, #1
   1d494:	cmp	r5, r6
   1d498:	add	r2, r0, #1
   1d49c:	str	r2, [r4, #8]
   1d4a0:	bcc	1d3f4 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x58>
   1d4a4:	ldr	r1, [r4]
   1d4a8:	b	1d4b0 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x114>
   1d4ac:	ldr	r2, [r4, #8]
   1d4b0:	mov	r0, #0
   1d4b4:	strb	r0, [r1, r2]
   1d4b8:	sub	sp, fp, #28
   1d4bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d4c0:	ldr	r1, [r4, #8]
   1d4c4:	ldr	r2, [r4, #4]
   1d4c8:	add	r0, r1, #1
   1d4cc:	cmp	r0, r2
   1d4d0:	str	r0, [r4, #8]
   1d4d4:	bcc	1d4e8 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x14c>
   1d4d8:	add	r1, r1, #3
   1d4dc:	mov	r0, r4
   1d4e0:	bl	11b24 <mycore_string_realloc@plt>
   1d4e4:	ldr	r0, [r4, #8]
   1d4e8:	ldr	r1, [r4]
   1d4ec:	mov	r2, #0
   1d4f0:	strb	r2, [r1, r0]
   1d4f4:	ldr	r0, [r4, #8]
   1d4f8:	b	1d4b8 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x11c>
   1d4fc:	andeq	sp, sp, pc, lsl #16

0001d500 <myhtml_string_before_append_any_preprocessing@@Base>:
   1d500:	cmp	r2, #0
   1d504:	mov	r0, #0
   1d508:	cmpne	r3, #0
   1d50c:	ldrbne	r0, [r1]
   1d510:	subne	r0, r0, #10
   1d514:	clzne	r0, r0
   1d518:	lsrne	r0, r0, #5
   1d51c:	bx	lr

0001d520 <myhtml_string_append_with_convert_encoding_with_preprocessing@@Base>:
   1d520:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d524:	add	fp, sp, #24
   1d528:	sub	sp, sp, #32
   1d52c:	add	r8, sp, #8
   1d530:	mov	r7, r0
   1d534:	mov	r4, r3
   1d538:	mov	r5, r2
   1d53c:	mov	r6, r1
   1d540:	mov	r0, r8
   1d544:	bl	11488 <myencoding_result_clean@plt>
   1d548:	ldr	r0, [fp, #8]
   1d54c:	mov	r1, r8
   1d550:	mov	r2, r6
   1d554:	mov	r3, r5
   1d558:	str	r4, [sp]
   1d55c:	str	r0, [sp, #4]
   1d560:	mov	r0, r7
   1d564:	bl	11efc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1d568:	sub	sp, fp, #24
   1d56c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001d570 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base>:
   1d570:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d574:	add	fp, sp, #28
   1d578:	sub	sp, sp, #4
   1d57c:	mov	r4, r0
   1d580:	mov	r7, r1
   1d584:	ldr	r0, [r0, #4]
   1d588:	ldr	r6, [fp, #8]
   1d58c:	mov	r5, r3
   1d590:	mov	r8, r2
   1d594:	ldr	r1, [r4, #8]
   1d598:	add	r1, r3, r1
   1d59c:	add	r1, r1, #1
   1d5a0:	cmp	r1, r0
   1d5a4:	bcc	1d5b0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x40>
   1d5a8:	mov	r0, r4
   1d5ac:	bl	11b24 <mycore_string_realloc@plt>
   1d5b0:	mov	r0, r6
   1d5b4:	bl	11a10 <myencoding_get_function_by_id@plt>
   1d5b8:	cmp	r5, #0
   1d5bc:	beq	1d6d0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x160>
   1d5c0:	mov	r9, r0
   1d5c4:	mov	sl, #0
   1d5c8:	ldrb	r0, [r8, sl]
   1d5cc:	mov	r1, r7
   1d5d0:	blx	r9
   1d5d4:	cmp	r0, #0
   1d5d8:	bne	1d6c4 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x154>
   1d5dc:	ldr	r0, [r4, #8]
   1d5e0:	ldr	r1, [r4, #4]
   1d5e4:	add	r2, r0, #5
   1d5e8:	cmp	r2, r1
   1d5ec:	bcc	1d600 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x90>
   1d5f0:	add	r1, r0, #6
   1d5f4:	mov	r0, r4
   1d5f8:	bl	11b24 <mycore_string_realloc@plt>
   1d5fc:	ldr	r0, [r4, #8]
   1d600:	ldr	r1, [r4]
   1d604:	add	r1, r1, r0
   1d608:	ldr	r0, [r7, #12]
   1d60c:	bl	11f5c <myencoding_codepoint_to_ascii_utf_8@plt>
   1d610:	mov	r6, r0
   1d614:	cmp	r0, #1
   1d618:	bne	1d6b8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x148>
   1d61c:	ldr	r0, [r4]
   1d620:	ldr	r1, [r4, #8]
   1d624:	ldrb	r2, [r0, r1]
   1d628:	cmp	r2, #0
   1d62c:	beq	1d65c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0xec>
   1d630:	cmp	r2, #13
   1d634:	bne	1d6b8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x148>
   1d638:	mov	r2, #10
   1d63c:	strb	r2, [r0, r1]
   1d640:	add	r0, sl, #1
   1d644:	cmp	r0, r5
   1d648:	bcs	1d700 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x190>
   1d64c:	ldrb	r1, [r8, r0]
   1d650:	cmp	r1, #10
   1d654:	moveq	sl, r0
   1d658:	b	1d6b8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x148>
   1d65c:	ldr	r0, [fp, #12]
   1d660:	cmp	r0, #0
   1d664:	bne	1d6b8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x148>
   1d668:	ldr	r0, [r4, #4]
   1d66c:	add	r1, r0, #5
   1d670:	mov	r0, r4
   1d674:	bl	11b24 <mycore_string_realloc@plt>
   1d678:	ldr	r0, [r4]
   1d67c:	ldr	r1, [r4, #8]
   1d680:	mov	r2, #239	; 0xef
   1d684:	strb	r2, [r0, r1]
   1d688:	mov	r2, #191	; 0xbf
   1d68c:	ldr	r1, [r4, #8]
   1d690:	ldr	r0, [r4]
   1d694:	add	r1, r1, #1
   1d698:	str	r1, [r4, #8]
   1d69c:	strb	r2, [r0, r1]
   1d6a0:	mov	r2, #189	; 0xbd
   1d6a4:	ldr	r1, [r4, #8]
   1d6a8:	ldr	r0, [r4]
   1d6ac:	add	r1, r1, #1
   1d6b0:	str	r1, [r4, #8]
   1d6b4:	strb	r2, [r0, r1]
   1d6b8:	ldr	r0, [r4, #8]
   1d6bc:	add	r0, r0, r6
   1d6c0:	str	r0, [r4, #8]
   1d6c4:	add	sl, sl, #1
   1d6c8:	cmp	sl, r5
   1d6cc:	bcc	1d5c8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x58>
   1d6d0:	ldmib	r4, {r0, r1}
   1d6d4:	cmp	r1, r0
   1d6d8:	bcc	1d6ec <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x17c>
   1d6dc:	add	r1, r1, #1
   1d6e0:	mov	r0, r4
   1d6e4:	bl	11b24 <mycore_string_realloc@plt>
   1d6e8:	ldr	r1, [r4, #8]
   1d6ec:	ldr	r2, [r4]
   1d6f0:	mov	r0, #0
   1d6f4:	strb	r0, [r2, r1]
   1d6f8:	sub	sp, fp, #28
   1d6fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d700:	ldr	r1, [r4, #8]
   1d704:	ldr	r2, [r4, #4]
   1d708:	add	r0, r1, #1
   1d70c:	cmp	r0, r2
   1d710:	str	r0, [r4, #8]
   1d714:	bcc	1d728 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1b8>
   1d718:	add	r1, r1, #3
   1d71c:	mov	r0, r4
   1d720:	bl	11b24 <mycore_string_realloc@plt>
   1d724:	ldr	r0, [r4, #8]
   1d728:	ldr	r1, [r4]
   1d72c:	mov	r2, #0
   1d730:	strb	r2, [r1, r0]
   1d734:	ldr	r0, [r4, #8]
   1d738:	b	1d6f8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x188>

0001d73c <myhtml_string_append_lowercase_with_convert_encoding_with_preprocessing@@Base>:
   1d73c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d740:	add	fp, sp, #24
   1d744:	sub	sp, sp, #32
   1d748:	add	r8, sp, #8
   1d74c:	mov	r7, r0
   1d750:	mov	r4, r3
   1d754:	mov	r5, r2
   1d758:	mov	r6, r1
   1d75c:	mov	r0, r8
   1d760:	bl	11488 <myencoding_result_clean@plt>
   1d764:	ldr	r0, [fp, #8]
   1d768:	mov	r1, r8
   1d76c:	mov	r2, r6
   1d770:	mov	r3, r5
   1d774:	str	r4, [sp]
   1d778:	str	r0, [sp, #4]
   1d77c:	mov	r0, r7
   1d780:	bl	11e78 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1d784:	sub	sp, fp, #24
   1d788:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001d78c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base>:
   1d78c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d790:	add	fp, sp, #28
   1d794:	sub	sp, sp, #4
   1d798:	mov	r4, r0
   1d79c:	mov	r7, r1
   1d7a0:	ldr	r0, [r0, #4]
   1d7a4:	ldr	r6, [fp, #8]
   1d7a8:	mov	r5, r3
   1d7ac:	mov	r8, r2
   1d7b0:	ldr	r1, [r4, #8]
   1d7b4:	add	r1, r3, r1
   1d7b8:	add	r1, r1, #1
   1d7bc:	cmp	r1, r0
   1d7c0:	bcc	1d7cc <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x40>
   1d7c4:	mov	r0, r4
   1d7c8:	bl	11b24 <mycore_string_realloc@plt>
   1d7cc:	mov	r0, r6
   1d7d0:	bl	11a10 <myencoding_get_function_by_id@plt>
   1d7d4:	cmp	r5, #0
   1d7d8:	beq	1d8ec <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x160>
   1d7dc:	mov	r9, r0
   1d7e0:	mov	sl, #0
   1d7e4:	ldrb	r0, [r8, sl]
   1d7e8:	mov	r1, r7
   1d7ec:	blx	r9
   1d7f0:	cmp	r0, #0
   1d7f4:	bne	1d8e0 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x154>
   1d7f8:	ldr	r0, [r4, #8]
   1d7fc:	ldr	r1, [r4, #4]
   1d800:	add	r2, r0, #5
   1d804:	cmp	r2, r1
   1d808:	bcc	1d81c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x90>
   1d80c:	add	r1, r0, #6
   1d810:	mov	r0, r4
   1d814:	bl	11b24 <mycore_string_realloc@plt>
   1d818:	ldr	r0, [r4, #8]
   1d81c:	ldr	r1, [r4]
   1d820:	add	r1, r1, r0
   1d824:	ldr	r0, [r7, #12]
   1d828:	bl	1105c <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>
   1d82c:	mov	r6, r0
   1d830:	cmp	r0, #1
   1d834:	bne	1d8d4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x148>
   1d838:	ldr	r0, [r4]
   1d83c:	ldr	r1, [r4, #8]
   1d840:	ldrb	r2, [r0, r1]
   1d844:	cmp	r2, #0
   1d848:	beq	1d878 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0xec>
   1d84c:	cmp	r2, #13
   1d850:	bne	1d8d4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x148>
   1d854:	mov	r2, #10
   1d858:	strb	r2, [r0, r1]
   1d85c:	add	r0, sl, #1
   1d860:	cmp	r0, r5
   1d864:	bcs	1d91c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x190>
   1d868:	ldrb	r1, [r8, r0]
   1d86c:	cmp	r1, #10
   1d870:	moveq	sl, r0
   1d874:	b	1d8d4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x148>
   1d878:	ldr	r0, [fp, #12]
   1d87c:	cmp	r0, #0
   1d880:	bne	1d8d4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x148>
   1d884:	ldr	r0, [r4, #4]
   1d888:	add	r1, r0, #5
   1d88c:	mov	r0, r4
   1d890:	bl	11b24 <mycore_string_realloc@plt>
   1d894:	ldr	r0, [r4]
   1d898:	ldr	r1, [r4, #8]
   1d89c:	mov	r2, #239	; 0xef
   1d8a0:	strb	r2, [r0, r1]
   1d8a4:	mov	r2, #191	; 0xbf
   1d8a8:	ldr	r1, [r4, #8]
   1d8ac:	ldr	r0, [r4]
   1d8b0:	add	r1, r1, #1
   1d8b4:	str	r1, [r4, #8]
   1d8b8:	strb	r2, [r0, r1]
   1d8bc:	mov	r2, #189	; 0xbd
   1d8c0:	ldr	r1, [r4, #8]
   1d8c4:	ldr	r0, [r4]
   1d8c8:	add	r1, r1, #1
   1d8cc:	str	r1, [r4, #8]
   1d8d0:	strb	r2, [r0, r1]
   1d8d4:	ldr	r0, [r4, #8]
   1d8d8:	add	r0, r0, r6
   1d8dc:	str	r0, [r4, #8]
   1d8e0:	add	sl, sl, #1
   1d8e4:	cmp	sl, r5
   1d8e8:	bcc	1d7e4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x58>
   1d8ec:	ldmib	r4, {r0, r1}
   1d8f0:	cmp	r1, r0
   1d8f4:	bcc	1d908 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x17c>
   1d8f8:	add	r1, r1, #1
   1d8fc:	mov	r0, r4
   1d900:	bl	11b24 <mycore_string_realloc@plt>
   1d904:	ldr	r1, [r4, #8]
   1d908:	ldr	r2, [r4]
   1d90c:	mov	r0, #0
   1d910:	strb	r0, [r2, r1]
   1d914:	sub	sp, fp, #28
   1d918:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d91c:	ldr	r1, [r4, #8]
   1d920:	ldr	r2, [r4, #4]
   1d924:	add	r0, r1, #1
   1d928:	cmp	r0, r2
   1d92c:	str	r0, [r4, #8]
   1d930:	bcc	1d944 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1b8>
   1d934:	add	r1, r1, #3
   1d938:	mov	r0, r4
   1d93c:	bl	11b24 <mycore_string_realloc@plt>
   1d940:	ldr	r0, [r4, #8]
   1d944:	ldr	r1, [r4]
   1d948:	mov	r2, #0
   1d94c:	strb	r2, [r1, r0]
   1d950:	ldr	r0, [r4, #8]
   1d954:	b	1d914 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x188>

0001d958 <myhtml_parser_stream@@Base>:
   1d958:	push	{r4, sl, fp, lr}
   1d95c:	add	fp, sp, #8
   1d960:	ldr	r0, [r1]
   1d964:	mov	r4, r1
   1d968:	ldr	r1, [r0, #184]	; 0xb8
   1d96c:	tst	r1, #1
   1d970:	popne	{r4, sl, fp, pc}
   1d974:	ldr	r1, [r4, #4]
   1d978:	bl	111d0 <myhtml_rules_tree_dispatcher@plt>
   1d97c:	cmp	r0, #0
   1d980:	beq	1d98c <myhtml_parser_stream@@Base+0x34>
   1d984:	ldr	r0, [r4]
   1d988:	b	1d974 <myhtml_parser_stream@@Base+0x1c>
   1d98c:	pop	{r4, sl, fp, pc}

0001d990 <myhtml_parser_token_data_to_string_lowercase@@Base>:
   1d990:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d994:	add	fp, sp, #28
   1d998:	sub	sp, sp, #20
   1d99c:	mov	r4, r0
   1d9a0:	ldr	r0, [r0, #80]	; 0x50
   1d9a4:	mov	sl, r1
   1d9a8:	mov	r1, r3
   1d9ac:	mov	r5, r3
   1d9b0:	str	r2, [sp, #16]
   1d9b4:	bl	113f8 <mycore_incoming_buffer_find_by_position@plt>
   1d9b8:	mov	r7, r0
   1d9bc:	ldr	r6, [fp, #8]
   1d9c0:	ldr	r0, [r0, #8]
   1d9c4:	ldr	r1, [r7, #12]
   1d9c8:	sub	r8, r5, r1
   1d9cc:	add	r1, r8, r6
   1d9d0:	cmp	r1, r0
   1d9d4:	bls	1daf4 <myhtml_parser_token_data_to_string_lowercase@@Base+0x164>
   1d9d8:	cmp	r7, #0
   1d9dc:	beq	1db64 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1d4>
   1d9e0:	ldr	r2, [sp, #16]
   1d9e4:	mov	r5, #0
   1d9e8:	cmp	r1, r0
   1d9ec:	add	r2, r2, #8
   1d9f0:	str	r2, [sp, #12]
   1d9f4:	bls	1da9c <myhtml_parser_token_data_to_string_lowercase@@Base+0x10c>
   1d9f8:	mov	r5, #0
   1d9fc:	sub	r9, r0, r8
   1da00:	ldr	r0, [r7]
   1da04:	mov	r3, r5
   1da08:	mov	r2, r9
   1da0c:	add	r1, r0, r8
   1da10:	mov	r0, sl
   1da14:	bl	11d34 <myhtml_string_before_append_any_preprocessing@plt>
   1da18:	cmp	r9, #0
   1da1c:	beq	1da7c <myhtml_parser_token_data_to_string_lowercase@@Base+0xec>
   1da20:	ldr	r1, [r7]
   1da24:	sub	r3, r9, r0
   1da28:	add	r0, r0, r8
   1da2c:	add	r2, r1, r0
   1da30:	ldr	r0, [r4, #200]	; 0xc8
   1da34:	cmp	r0, #0
   1da38:	beq	1da5c <myhtml_parser_token_data_to_string_lowercase@@Base+0xcc>
   1da3c:	ldr	r1, [sp, #16]
   1da40:	ldr	r0, [r1, #4]
   1da44:	ldrb	r1, [r1, #61]	; 0x3d
   1da48:	stm	sp, {r0, r1}
   1da4c:	ldr	r1, [sp, #12]
   1da50:	mov	r0, sl
   1da54:	bl	11e78 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1da58:	b	1da78 <myhtml_parser_token_data_to_string_lowercase@@Base+0xe8>
   1da5c:	ldr	r0, [sp, #16]
   1da60:	mov	r1, r2
   1da64:	mov	r2, r3
   1da68:	ldrb	r5, [r0, #61]	; 0x3d
   1da6c:	mov	r0, sl
   1da70:	mov	r3, r5
   1da74:	bl	120c4 <myhtml_string_append_lowercase_with_preprocessing@plt>
   1da78:	mov	r5, r0
   1da7c:	ldr	r7, [r7, #20]
   1da80:	cmp	r7, #0
   1da84:	beq	1db64 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1d4>
   1da88:	ldr	r0, [r7, #8]
   1da8c:	sub	r6, r6, r9
   1da90:	mov	r8, #0
   1da94:	cmp	r6, r0
   1da98:	bhi	1d9fc <myhtml_parser_token_data_to_string_lowercase@@Base+0x6c>
   1da9c:	ldr	r0, [r7]
   1daa0:	mov	r2, r6
   1daa4:	mov	r3, r5
   1daa8:	add	r1, r0, r8
   1daac:	mov	r0, sl
   1dab0:	bl	11d34 <myhtml_string_before_append_any_preprocessing@plt>
   1dab4:	cmp	r6, #0
   1dab8:	beq	1db64 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1d4>
   1dabc:	ldr	r1, [r7]
   1dac0:	sub	r3, r6, r0
   1dac4:	add	r0, r0, r8
   1dac8:	add	r2, r1, r0
   1dacc:	ldr	r0, [r4, #200]	; 0xc8
   1dad0:	cmp	r0, #0
   1dad4:	beq	1db48 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1b8>
   1dad8:	ldr	r1, [sp, #16]
   1dadc:	ldr	r0, [r1, #4]
   1dae0:	ldrb	r1, [r1, #61]	; 0x3d
   1dae4:	stm	sp, {r0, r1}
   1dae8:	ldr	r1, [sp, #12]
   1daec:	mov	r0, sl
   1daf0:	b	1db24 <myhtml_parser_token_data_to_string_lowercase@@Base+0x194>
   1daf4:	ldr	r0, [r4, #200]	; 0xc8
   1daf8:	cmp	r0, #0
   1dafc:	beq	1db2c <myhtml_parser_token_data_to_string_lowercase@@Base+0x19c>
   1db00:	ldr	r3, [sp, #16]
   1db04:	ldr	r0, [r7]
   1db08:	ldr	r1, [r3, #4]
   1db0c:	ldrb	r2, [r3, #61]	; 0x3d
   1db10:	stm	sp, {r1, r2}
   1db14:	add	r2, r0, r8
   1db18:	add	r1, r3, #8
   1db1c:	mov	r0, sl
   1db20:	mov	r3, r6
   1db24:	bl	11e78 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1db28:	b	1db64 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1d4>
   1db2c:	ldr	r0, [r7]
   1db30:	mov	r2, r6
   1db34:	add	r1, r0, r8
   1db38:	ldr	r0, [sp, #16]
   1db3c:	ldrb	r3, [r0, #61]	; 0x3d
   1db40:	mov	r0, sl
   1db44:	b	1db60 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1d0>
   1db48:	ldr	r0, [sp, #16]
   1db4c:	mov	r1, r2
   1db50:	mov	r2, r3
   1db54:	ldrb	r7, [r0, #61]	; 0x3d
   1db58:	mov	r0, sl
   1db5c:	mov	r3, r7
   1db60:	bl	120c4 <myhtml_string_append_lowercase_with_preprocessing@plt>
   1db64:	ldr	r0, [sl, #8]
   1db68:	sub	sp, fp, #28
   1db6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001db70 <myhtml_parser_token_data_to_string@@Base>:
   1db70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1db74:	add	fp, sp, #28
   1db78:	sub	sp, sp, #20
   1db7c:	mov	r4, r0
   1db80:	ldr	r0, [r0, #80]	; 0x50
   1db84:	mov	sl, r1
   1db88:	mov	r1, r3
   1db8c:	mov	r5, r3
   1db90:	str	r2, [sp, #16]
   1db94:	bl	113f8 <mycore_incoming_buffer_find_by_position@plt>
   1db98:	mov	r7, r0
   1db9c:	ldr	r6, [fp, #8]
   1dba0:	ldr	r0, [r0, #8]
   1dba4:	ldr	r1, [r7, #12]
   1dba8:	sub	r8, r5, r1
   1dbac:	add	r1, r8, r6
   1dbb0:	cmp	r1, r0
   1dbb4:	bls	1dcd4 <myhtml_parser_token_data_to_string@@Base+0x164>
   1dbb8:	cmp	r7, #0
   1dbbc:	beq	1dd44 <myhtml_parser_token_data_to_string@@Base+0x1d4>
   1dbc0:	ldr	r2, [sp, #16]
   1dbc4:	mov	r5, #0
   1dbc8:	cmp	r1, r0
   1dbcc:	add	r2, r2, #8
   1dbd0:	str	r2, [sp, #12]
   1dbd4:	bls	1dc7c <myhtml_parser_token_data_to_string@@Base+0x10c>
   1dbd8:	mov	r5, #0
   1dbdc:	sub	r9, r0, r8
   1dbe0:	ldr	r0, [r7]
   1dbe4:	mov	r3, r5
   1dbe8:	mov	r2, r9
   1dbec:	add	r1, r0, r8
   1dbf0:	mov	r0, sl
   1dbf4:	bl	11d34 <myhtml_string_before_append_any_preprocessing@plt>
   1dbf8:	cmp	r9, #0
   1dbfc:	beq	1dc5c <myhtml_parser_token_data_to_string@@Base+0xec>
   1dc00:	ldr	r1, [r7]
   1dc04:	sub	r3, r9, r0
   1dc08:	add	r0, r0, r8
   1dc0c:	add	r2, r1, r0
   1dc10:	ldr	r0, [r4, #200]	; 0xc8
   1dc14:	cmp	r0, #0
   1dc18:	beq	1dc3c <myhtml_parser_token_data_to_string@@Base+0xcc>
   1dc1c:	ldr	r1, [sp, #16]
   1dc20:	ldr	r0, [r1, #4]
   1dc24:	ldrb	r1, [r1, #61]	; 0x3d
   1dc28:	stm	sp, {r0, r1}
   1dc2c:	ldr	r1, [sp, #12]
   1dc30:	mov	r0, sl
   1dc34:	bl	11efc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1dc38:	b	1dc58 <myhtml_parser_token_data_to_string@@Base+0xe8>
   1dc3c:	ldr	r0, [sp, #16]
   1dc40:	mov	r1, r2
   1dc44:	mov	r2, r3
   1dc48:	ldrb	r5, [r0, #61]	; 0x3d
   1dc4c:	mov	r0, sl
   1dc50:	mov	r3, r5
   1dc54:	bl	11494 <myhtml_string_append_with_preprocessing@plt>
   1dc58:	mov	r5, r0
   1dc5c:	ldr	r7, [r7, #20]
   1dc60:	cmp	r7, #0
   1dc64:	beq	1dd44 <myhtml_parser_token_data_to_string@@Base+0x1d4>
   1dc68:	ldr	r0, [r7, #8]
   1dc6c:	sub	r6, r6, r9
   1dc70:	mov	r8, #0
   1dc74:	cmp	r6, r0
   1dc78:	bhi	1dbdc <myhtml_parser_token_data_to_string@@Base+0x6c>
   1dc7c:	ldr	r0, [r7]
   1dc80:	mov	r2, r6
   1dc84:	mov	r3, r5
   1dc88:	add	r1, r0, r8
   1dc8c:	mov	r0, sl
   1dc90:	bl	11d34 <myhtml_string_before_append_any_preprocessing@plt>
   1dc94:	cmp	r6, #0
   1dc98:	beq	1dd44 <myhtml_parser_token_data_to_string@@Base+0x1d4>
   1dc9c:	ldr	r1, [r7]
   1dca0:	sub	r3, r6, r0
   1dca4:	add	r0, r0, r8
   1dca8:	add	r2, r1, r0
   1dcac:	ldr	r0, [r4, #200]	; 0xc8
   1dcb0:	cmp	r0, #0
   1dcb4:	beq	1dd28 <myhtml_parser_token_data_to_string@@Base+0x1b8>
   1dcb8:	ldr	r1, [sp, #16]
   1dcbc:	ldr	r0, [r1, #4]
   1dcc0:	ldrb	r1, [r1, #61]	; 0x3d
   1dcc4:	stm	sp, {r0, r1}
   1dcc8:	ldr	r1, [sp, #12]
   1dccc:	mov	r0, sl
   1dcd0:	b	1dd04 <myhtml_parser_token_data_to_string@@Base+0x194>
   1dcd4:	ldr	r0, [r4, #200]	; 0xc8
   1dcd8:	cmp	r0, #0
   1dcdc:	beq	1dd0c <myhtml_parser_token_data_to_string@@Base+0x19c>
   1dce0:	ldr	r3, [sp, #16]
   1dce4:	ldr	r0, [r7]
   1dce8:	ldr	r1, [r3, #4]
   1dcec:	ldrb	r2, [r3, #61]	; 0x3d
   1dcf0:	stm	sp, {r1, r2}
   1dcf4:	add	r2, r0, r8
   1dcf8:	add	r1, r3, #8
   1dcfc:	mov	r0, sl
   1dd00:	mov	r3, r6
   1dd04:	bl	11efc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1dd08:	b	1dd44 <myhtml_parser_token_data_to_string@@Base+0x1d4>
   1dd0c:	ldr	r0, [r7]
   1dd10:	mov	r2, r6
   1dd14:	add	r1, r0, r8
   1dd18:	ldr	r0, [sp, #16]
   1dd1c:	ldrb	r3, [r0, #61]	; 0x3d
   1dd20:	mov	r0, sl
   1dd24:	b	1dd40 <myhtml_parser_token_data_to_string@@Base+0x1d0>
   1dd28:	ldr	r0, [sp, #16]
   1dd2c:	mov	r1, r2
   1dd30:	mov	r2, r3
   1dd34:	ldrb	r7, [r0, #61]	; 0x3d
   1dd38:	mov	r0, sl
   1dd3c:	mov	r3, r7
   1dd40:	bl	11494 <myhtml_string_append_with_preprocessing@plt>
   1dd44:	ldr	r0, [sl, #8]
   1dd48:	sub	sp, fp, #28
   1dd4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001dd50 <myhtml_parser_token_data_to_string_charef@@Base>:
   1dd50:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1dd54:	add	fp, sp, #24
   1dd58:	ldr	r0, [r0, #80]	; 0x50
   1dd5c:	mov	r4, r1
   1dd60:	mov	r1, r3
   1dd64:	mov	r5, r3
   1dd68:	mov	r8, r2
   1dd6c:	bl	113f8 <mycore_incoming_buffer_find_by_position@plt>
   1dd70:	mov	r7, r0
   1dd74:	ldr	r1, [r0, #8]
   1dd78:	ldr	r0, [r0, #12]
   1dd7c:	ldr	r6, [fp, #8]
   1dd80:	sub	r0, r5, r0
   1dd84:	add	r2, r0, r6
   1dd88:	cmp	r2, r1
   1dd8c:	bls	1dddc <myhtml_parser_token_data_to_string_charef@@Base+0x8c>
   1dd90:	cmp	r7, #0
   1dd94:	beq	1ddf4 <myhtml_parser_token_data_to_string_charef@@Base+0xa4>
   1dd98:	cmp	r2, r1
   1dd9c:	bls	1dddc <myhtml_parser_token_data_to_string_charef@@Base+0x8c>
   1dda0:	sub	r5, r1, r0
   1dda4:	ldr	r1, [r7]
   1dda8:	mov	r3, r5
   1ddac:	add	r2, r1, r0
   1ddb0:	mov	r0, r8
   1ddb4:	mov	r1, r4
   1ddb8:	bl	11968 <myhtml_data_process@plt>
   1ddbc:	ldr	r7, [r7, #20]
   1ddc0:	cmp	r7, #0
   1ddc4:	beq	1ddf4 <myhtml_parser_token_data_to_string_charef@@Base+0xa4>
   1ddc8:	ldr	r1, [r7, #8]
   1ddcc:	sub	r6, r6, r5
   1ddd0:	mov	r0, #0
   1ddd4:	cmp	r6, r1
   1ddd8:	bhi	1dda0 <myhtml_parser_token_data_to_string_charef@@Base+0x50>
   1dddc:	ldr	r1, [r7]
   1dde0:	mov	r3, r6
   1dde4:	add	r2, r1, r0
   1dde8:	mov	r0, r8
   1ddec:	mov	r1, r4
   1ddf0:	bl	11968 <myhtml_data_process@plt>
   1ddf4:	mov	r0, r8
   1ddf8:	mov	r1, r4
   1ddfc:	bl	11af4 <myhtml_data_process_end@plt>
   1de00:	ldr	r0, [r4, #8]
   1de04:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001de08 <myhtml_parser_worker@@Base>:
   1de08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1de0c:	add	fp, sp, #28
   1de10:	sub	sp, sp, #68	; 0x44
   1de14:	ldm	r1, {r4, r8}
   1de18:	ldr	r1, [r4, #184]	; 0xb8
   1de1c:	tst	r1, #3
   1de20:	beq	1de30 <myhtml_parser_worker@@Base+0x28>
   1de24:	ldr	r1, [r4, #184]	; 0xb8
   1de28:	tst	r1, #2
   1de2c:	bne	1dff4 <myhtml_parser_worker@@Base+0x1ec>
   1de30:	ldr	r2, [r4]
   1de34:	ldr	r1, [r4, #144]	; 0x90
   1de38:	ldr	r3, [r4, #220]	; 0xdc
   1de3c:	ldr	r2, [r2, #4]
   1de40:	cmp	r2, #0
   1de44:	ldrne	r2, [r2, #12]
   1de48:	addne	r0, r2, r0
   1de4c:	cmp	r3, #0
   1de50:	ldr	r9, [r1, r0, lsl #2]
   1de54:	beq	1de6c <myhtml_parser_worker@@Base+0x64>
   1de58:	ldr	r2, [r4, #228]	; 0xe4
   1de5c:	mov	r0, r4
   1de60:	mov	r1, r8
   1de64:	blx	r3
   1de68:	str	r0, [r4, #228]	; 0xe4
   1de6c:	ldr	r0, [r8]
   1de70:	sub	r0, r0, #1
   1de74:	cmp	r0, #1
   1de78:	bhi	1def8 <myhtml_parser_worker@@Base+0xf0>
   1de7c:	ldr	r1, [r8, #28]
   1de80:	ldr	r0, [r4, #4]
   1de84:	add	r7, r8, #4
   1de88:	mov	r2, r7
   1de8c:	add	r3, r1, #1
   1de90:	mov	r1, r9
   1de94:	bl	11848 <mycore_string_init@plt>
   1de98:	mov	r0, #0
   1de9c:	str	r0, [r8, #40]	; 0x28
   1dea0:	str	r0, [r8, #44]	; 0x2c
   1dea4:	add	r0, sp, #4
   1dea8:	bl	11758 <myhtml_data_process_entry_clean@plt>
   1deac:	ldr	r0, [r4, #200]	; 0xc8
   1deb0:	str	r0, [sp, #8]
   1deb4:	ldr	r0, [r8, #48]	; 0x30
   1deb8:	tst	r0, #512	; 0x200
   1debc:	bne	1e018 <myhtml_parser_worker@@Base+0x210>
   1dec0:	ldr	r0, [r8, #48]	; 0x30
   1dec4:	tst	r0, #16
   1dec8:	bne	1e020 <myhtml_parser_worker@@Base+0x218>
   1decc:	ldr	r0, [r8, #48]	; 0x30
   1ded0:	tst	r0, #256	; 0x100
   1ded4:	bne	1e020 <myhtml_parser_worker@@Base+0x218>
   1ded8:	ldr	r0, [r8, #28]
   1dedc:	ldr	r3, [r8, #24]
   1dee0:	add	r2, sp, #4
   1dee4:	mov	r1, r7
   1dee8:	str	r0, [sp]
   1deec:	mov	r0, r4
   1def0:	bl	11c44 <myhtml_parser_token_data_to_string@plt>
   1def4:	b	1e054 <myhtml_parser_worker@@Base+0x24c>
   1def8:	ldr	r0, [r8, #40]	; 0x28
   1defc:	cmp	r0, #0
   1df00:	beq	1e040 <myhtml_parser_worker@@Base+0x238>
   1df04:	add	r0, r8, #4
   1df08:	bl	12118 <mycore_string_clean_all@plt>
   1df0c:	ldr	r6, [r8, #40]	; 0x28
   1df10:	cmp	r6, #0
   1df14:	beq	1e054 <myhtml_parser_worker@@Base+0x24c>
   1df18:	add	r7, sp, #4
   1df1c:	mov	sl, #1
   1df20:	ldr	r0, [r6, #52]	; 0x34
   1df24:	cmp	r0, #0
   1df28:	beq	1df78 <myhtml_parser_worker@@Base+0x170>
   1df2c:	mov	r0, r7
   1df30:	bl	11758 <myhtml_data_process_entry_clean@plt>
   1df34:	ldr	r0, [r4, #200]	; 0xc8
   1df38:	add	r5, r6, #8
   1df3c:	mov	r2, r5
   1df40:	str	r0, [sp, #8]
   1df44:	ldr	r1, [r6, #52]	; 0x34
   1df48:	ldr	r0, [r4, #4]
   1df4c:	add	r3, r1, #1
   1df50:	mov	r1, r9
   1df54:	bl	11848 <mycore_string_init@plt>
   1df58:	ldr	r0, [r6, #52]	; 0x34
   1df5c:	ldr	r3, [r6, #48]	; 0x30
   1df60:	mov	r1, r5
   1df64:	mov	r2, r7
   1df68:	str	r0, [sp]
   1df6c:	mov	r0, r4
   1df70:	bl	120a0 <myhtml_parser_token_data_to_string_lowercase@plt>
   1df74:	b	1df80 <myhtml_parser_worker@@Base+0x178>
   1df78:	add	r0, r6, #8
   1df7c:	bl	12118 <mycore_string_clean_all@plt>
   1df80:	ldr	r0, [r6, #60]	; 0x3c
   1df84:	cmp	r0, #0
   1df88:	beq	1dfdc <myhtml_parser_worker@@Base+0x1d4>
   1df8c:	mov	r0, r7
   1df90:	bl	11758 <myhtml_data_process_entry_clean@plt>
   1df94:	ldr	r0, [r4, #200]	; 0xc8
   1df98:	strb	sl, [sp, #64]	; 0x40
   1df9c:	add	r5, r6, #28
   1dfa0:	mov	r2, r5
   1dfa4:	str	r0, [sp, #8]
   1dfa8:	ldr	r1, [r6, #60]	; 0x3c
   1dfac:	ldr	r0, [r4, #4]
   1dfb0:	add	r3, r1, #1
   1dfb4:	mov	r1, r9
   1dfb8:	bl	11848 <mycore_string_init@plt>
   1dfbc:	ldr	r0, [r6, #60]	; 0x3c
   1dfc0:	ldr	r3, [r6, #56]	; 0x38
   1dfc4:	mov	r1, r5
   1dfc8:	mov	r2, r7
   1dfcc:	str	r0, [sp]
   1dfd0:	mov	r0, r4
   1dfd4:	bl	11674 <myhtml_parser_token_data_to_string_charef@plt>
   1dfd8:	b	1dfe4 <myhtml_parser_worker@@Base+0x1dc>
   1dfdc:	add	r0, r6, #28
   1dfe0:	bl	12118 <mycore_string_clean_all@plt>
   1dfe4:	ldr	r6, [r6]
   1dfe8:	cmp	r6, #0
   1dfec:	bne	1df20 <myhtml_parser_worker@@Base+0x118>
   1dff0:	b	1e054 <myhtml_parser_worker@@Base+0x24c>
   1dff4:	ldr	r3, [r4, #220]	; 0xdc
   1dff8:	cmp	r3, #0
   1dffc:	beq	1e054 <myhtml_parser_worker@@Base+0x24c>
   1e000:	ldr	r2, [r4, #228]	; 0xe4
   1e004:	mov	r0, r4
   1e008:	mov	r1, r8
   1e00c:	blx	r3
   1e010:	str	r0, [r4, #228]	; 0xe4
   1e014:	b	1e054 <myhtml_parser_worker@@Base+0x24c>
   1e018:	mov	r0, #1
   1e01c:	strb	r0, [sp, #65]	; 0x41
   1e020:	ldr	r0, [r8, #28]
   1e024:	ldr	r3, [r8, #24]
   1e028:	add	r2, sp, #4
   1e02c:	mov	r1, r7
   1e030:	str	r0, [sp]
   1e034:	mov	r0, r4
   1e038:	bl	11674 <myhtml_parser_token_data_to_string_charef@plt>
   1e03c:	b	1e054 <myhtml_parser_worker@@Base+0x24c>
   1e040:	mov	r0, #0
   1e044:	str	r0, [r8, #40]	; 0x28
   1e048:	str	r0, [r8, #44]	; 0x2c
   1e04c:	add	r0, r8, #4
   1e050:	bl	12118 <mycore_string_clean_all@plt>
   1e054:	ldr	r0, [r8, #48]	; 0x30
   1e058:	orr	r0, r0, #4
   1e05c:	str	r0, [r8, #48]	; 0x30
   1e060:	ldr	r3, [r4, #224]	; 0xe0
   1e064:	cmp	r3, #0
   1e068:	beq	1e080 <myhtml_parser_worker@@Base+0x278>
   1e06c:	ldr	r2, [r4, #232]	; 0xe8
   1e070:	mov	r0, r4
   1e074:	mov	r1, r8
   1e078:	blx	r3
   1e07c:	str	r0, [r4, #232]	; 0xe8
   1e080:	sub	sp, fp, #28
   1e084:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001e088 <myhtml_parser_worker_stream@@Base>:
   1e088:	push	{r4, sl, fp, lr}
   1e08c:	add	fp, sp, #8
   1e090:	mov	r4, r1
   1e094:	bl	110f8 <myhtml_parser_worker@plt>
   1e098:	ldr	r0, [r4]
   1e09c:	ldr	r1, [r0, #184]	; 0xb8
   1e0a0:	tst	r1, #1
   1e0a4:	popne	{r4, sl, fp, pc}
   1e0a8:	ldr	r1, [r4, #4]
   1e0ac:	bl	111d0 <myhtml_rules_tree_dispatcher@plt>
   1e0b0:	cmp	r0, #0
   1e0b4:	beq	1e0c0 <myhtml_parser_worker_stream@@Base+0x38>
   1e0b8:	ldr	r0, [r4]
   1e0bc:	b	1e0a8 <myhtml_parser_worker_stream@@Base+0x20>
   1e0c0:	pop	{r4, sl, fp, pc}

0001e0c4 <myhtml_insertion_fix_emit_for_text_begin_ws@@Base>:
   1e0c4:	push	{r4, sl, fp, lr}
   1e0c8:	add	fp, sp, #8
   1e0cc:	mov	r4, r1
   1e0d0:	bl	118b4 <myhtml_token_node_wait_for_done@plt>
   1e0d4:	add	r0, r4, #4
   1e0d8:	pop	{r4, sl, fp, lr}
   1e0dc:	b	1171c <mycore_string_crop_whitespace_from_begin@plt>

0001e0e0 <myhtml_insertion_fix_split_for_text_begin_ws@@Base>:
   1e0e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1e0e4:	add	fp, sp, #24
   1e0e8:	mov	r7, r0
   1e0ec:	ldr	r0, [r0, #8]
   1e0f0:	mov	r4, r1
   1e0f4:	bl	118b4 <myhtml_token_node_wait_for_done@plt>
   1e0f8:	add	r0, r4, #4
   1e0fc:	bl	11ecc <mycore_string_whitespace_from_begin@plt>
   1e100:	mov	r6, #0
   1e104:	cmp	r0, #0
   1e108:	beq	1e17c <myhtml_insertion_fix_split_for_text_begin_ws@@Base+0x9c>
   1e10c:	mov	r5, r0
   1e110:	ldr	r0, [r7, #8]
   1e114:	ldr	r1, [r7, #40]	; 0x28
   1e118:	bl	11ba8 <myhtml_token_node_create@plt>
   1e11c:	cmp	r0, #0
   1e120:	beq	1e17c <myhtml_insertion_fix_split_for_text_begin_ws@@Base+0x9c>
   1e124:	mov	r8, r0
   1e128:	ldr	r0, [r7, #4]
   1e12c:	ldr	r1, [r7, #52]	; 0x34
   1e130:	add	r3, r5, #2
   1e134:	add	r6, r8, #4
   1e138:	mov	r2, r6
   1e13c:	bl	11848 <mycore_string_init@plt>
   1e140:	ldr	r1, [r4, #4]
   1e144:	mov	r0, r6
   1e148:	mov	r2, r5
   1e14c:	bl	11aa0 <mycore_string_append@plt>
   1e150:	ldr	r0, [r8, #48]	; 0x30
   1e154:	mov	r1, r5
   1e158:	orr	r0, r0, #4
   1e15c:	str	r0, [r8, #48]	; 0x30
   1e160:	ldr	r0, [r4, #4]
   1e164:	bl	11d7c <mchar_async_crop_first_chars_without_cache@plt>
   1e168:	str	r0, [r4, #4]
   1e16c:	mov	r6, r8
   1e170:	ldr	r0, [r4, #12]
   1e174:	sub	r0, r0, r5
   1e178:	str	r0, [r4, #12]
   1e17c:	mov	r0, r6
   1e180:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001e184 <myhtml_insertion_fix_for_null_char_drop_all@@Base>:
   1e184:	push	{r4, r5, r6, r7, fp, lr}
   1e188:	add	fp, sp, #16
   1e18c:	ldr	r0, [r0, #8]
   1e190:	mov	r4, r1
   1e194:	bl	118b4 <myhtml_token_node_wait_for_done@plt>
   1e198:	ldr	r5, [r4, #12]
   1e19c:	cmp	r5, #0
   1e1a0:	beq	1e260 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xdc>
   1e1a4:	mov	r0, #0
   1e1a8:	mov	r6, #0
   1e1ac:	ldr	r3, [r4, #4]
   1e1b0:	ldrb	r1, [r3, r0]
   1e1b4:	cmp	r1, #0
   1e1b8:	bne	1e254 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xd0>
   1e1bc:	cmp	r0, r5
   1e1c0:	mov	r2, r0
   1e1c4:	bcs	1e1e8 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x64>
   1e1c8:	add	r1, r0, #1
   1e1cc:	cmp	r5, r1
   1e1d0:	beq	1e220 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x9c>
   1e1d4:	ldrb	r2, [r3, r1]
   1e1d8:	add	r1, r1, #1
   1e1dc:	cmp	r2, #0
   1e1e0:	beq	1e1cc <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x48>
   1e1e4:	sub	r2, r1, #1
   1e1e8:	ldr	r7, [r4, #12]
   1e1ec:	sub	r1, r0, r2
   1e1f0:	cmp	r2, r5
   1e1f4:	add	r1, r1, r7
   1e1f8:	mov	r7, r2
   1e1fc:	str	r1, [r4, #12]
   1e200:	bcs	1e238 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xb4>
   1e204:	ldrb	r1, [r3, r7]
   1e208:	cmp	r1, #0
   1e20c:	beq	1e238 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xb4>
   1e210:	add	r7, r7, #1
   1e214:	cmp	r5, r7
   1e218:	bne	1e204 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x80>
   1e21c:	b	1e234 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xb0>
   1e220:	ldr	r2, [r4, #12]
   1e224:	sub	r1, r0, r5
   1e228:	add	r1, r1, r2
   1e22c:	mov	r2, r5
   1e230:	str	r1, [r4, #12]
   1e234:	mov	r7, r5
   1e238:	sub	r0, r0, r6
   1e23c:	add	r1, r3, r2
   1e240:	sub	r2, r7, r2
   1e244:	add	r0, r3, r0
   1e248:	bl	111b8 <memmove@plt>
   1e24c:	add	r6, r6, #1
   1e250:	sub	r0, r7, #1
   1e254:	add	r0, r0, #1
   1e258:	cmp	r0, r5
   1e25c:	bcc	1e1ac <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x28>
   1e260:	pop	{r4, r5, r6, r7, fp, pc}

0001e264 <myhtml_insertion_mode_initial@@Base>:
   1e264:	push	{r4, r5, r6, sl, fp, lr}
   1e268:	add	fp, sp, #16
   1e26c:	mov	r4, r0
   1e270:	ldr	r0, [r1]
   1e274:	mov	r5, r1
   1e278:	cmp	r0, #3
   1e27c:	beq	1e2c4 <myhtml_insertion_mode_initial@@Base+0x60>
   1e280:	cmp	r0, #2
   1e284:	beq	1e334 <myhtml_insertion_mode_initial@@Base+0xd0>
   1e288:	cmp	r0, #1
   1e28c:	bne	1e34c <myhtml_insertion_mode_initial@@Base+0xe8>
   1e290:	ldr	r1, [r5, #48]	; 0x30
   1e294:	mov	r0, #0
   1e298:	tst	r1, #8
   1e29c:	bne	1e358 <myhtml_insertion_mode_initial@@Base+0xf4>
   1e2a0:	ldr	r0, [r4, #8]
   1e2a4:	mov	r1, r5
   1e2a8:	bl	118b4 <myhtml_token_node_wait_for_done@plt>
   1e2ac:	add	r0, r5, #4
   1e2b0:	bl	1171c <mycore_string_crop_whitespace_from_begin@plt>
   1e2b4:	mov	r0, #1
   1e2b8:	str	r0, [r4, #176]	; 0xb0
   1e2bc:	str	r0, [r4, #168]	; 0xa8
   1e2c0:	pop	{r4, r5, r6, sl, fp, pc}
   1e2c4:	ldr	r0, [r4, #8]
   1e2c8:	mov	r1, r5
   1e2cc:	bl	118b4 <myhtml_token_node_wait_for_done@plt>
   1e2d0:	ldr	r0, [r4, #8]
   1e2d4:	add	r6, r4, #108	; 0x6c
   1e2d8:	mov	r1, r5
   1e2dc:	mov	r2, r6
   1e2e0:	bl	10fc0 <myhtml_token_release_and_check_doctype_attributes@plt>
   1e2e4:	ldr	r0, [r4, #184]	; 0xb8
   1e2e8:	tst	r0, #8
   1e2ec:	bne	1e2fc <myhtml_insertion_mode_initial@@Base+0x98>
   1e2f0:	mov	r0, r4
   1e2f4:	mov	r1, r5
   1e2f8:	bl	11f08 <myhtml_tree_node_insert_doctype@plt>
   1e2fc:	ldrb	r0, [r6]
   1e300:	cmp	r0, #0
   1e304:	bne	1e328 <myhtml_insertion_mode_initial@@Base+0xc4>
   1e308:	ldr	r0, [r4, #116]	; 0x74
   1e30c:	cmp	r0, #0
   1e310:	beq	1e320 <myhtml_insertion_mode_initial@@Base+0xbc>
   1e314:	ldr	r0, [r4, #120]	; 0x78
   1e318:	cmp	r0, #0
   1e31c:	bne	1e328 <myhtml_insertion_mode_initial@@Base+0xc4>
   1e320:	mov	r0, #1
   1e324:	str	r0, [r4, #176]	; 0xb0
   1e328:	mov	r0, #1
   1e32c:	str	r0, [r4, #168]	; 0xa8
   1e330:	b	1e344 <myhtml_insertion_mode_initial@@Base+0xe0>
   1e334:	ldr	r2, [r4, #84]	; 0x54
   1e338:	mov	r0, r4
   1e33c:	mov	r1, r5
   1e340:	bl	11524 <myhtml_tree_node_insert_comment@plt>
   1e344:	mov	r0, #0
   1e348:	pop	{r4, r5, r6, sl, fp, pc}
   1e34c:	mov	r0, #1
   1e350:	str	r0, [r4, #168]	; 0xa8
   1e354:	str	r0, [r4, #176]	; 0xb0
   1e358:	pop	{r4, r5, r6, sl, fp, pc}

0001e35c <myhtml_insertion_mode_before_html@@Base>:
   1e35c:	push	{r4, r5, r6, sl, fp, lr}
   1e360:	add	fp, sp, #16
   1e364:	mov	r4, r0
   1e368:	mov	r6, r1
   1e36c:	ldr	r0, [r1]
   1e370:	ldr	r1, [r1, #48]	; 0x30
   1e374:	tst	r1, #1
   1e378:	bne	1e3ac <myhtml_insertion_mode_before_html@@Base+0x50>
   1e37c:	mov	r5, #0
   1e380:	cmp	r0, #2
   1e384:	bgt	1e3d0 <myhtml_insertion_mode_before_html@@Base+0x74>
   1e388:	cmp	r0, #1
   1e38c:	beq	1e3ec <myhtml_insertion_mode_before_html@@Base+0x90>
   1e390:	cmp	r0, #2
   1e394:	bne	1e40c <myhtml_insertion_mode_before_html@@Base+0xb0>
   1e398:	ldr	r2, [r4, #84]	; 0x54
   1e39c:	mov	r0, r4
   1e3a0:	mov	r1, r6
   1e3a4:	bl	11524 <myhtml_tree_node_insert_comment@plt>
   1e3a8:	b	1e428 <myhtml_insertion_mode_before_html@@Base+0xcc>
   1e3ac:	sub	r1, r0, #23
   1e3b0:	cmp	r1, #2
   1e3b4:	bcc	1e40c <myhtml_insertion_mode_before_html@@Base+0xb0>
   1e3b8:	cmp	r0, #65	; 0x41
   1e3bc:	beq	1e40c <myhtml_insertion_mode_before_html@@Base+0xb0>
   1e3c0:	mov	r5, #0
   1e3c4:	cmp	r0, #61	; 0x3d
   1e3c8:	beq	1e40c <myhtml_insertion_mode_before_html@@Base+0xb0>
   1e3cc:	b	1e428 <myhtml_insertion_mode_before_html@@Base+0xcc>
   1e3d0:	cmp	r0, #3
   1e3d4:	beq	1e428 <myhtml_insertion_mode_before_html@@Base+0xcc>
   1e3d8:	cmp	r0, #65	; 0x41
   1e3dc:	bne	1e40c <myhtml_insertion_mode_before_html@@Base+0xb0>
   1e3e0:	mov	r0, r4
   1e3e4:	mov	r1, r6
   1e3e8:	b	1e418 <myhtml_insertion_mode_before_html@@Base+0xbc>
   1e3ec:	ldr	r0, [r6, #48]	; 0x30
   1e3f0:	tst	r0, #8
   1e3f4:	bne	1e428 <myhtml_insertion_mode_before_html@@Base+0xcc>
   1e3f8:	ldr	r0, [r4, #8]
   1e3fc:	mov	r1, r6
   1e400:	bl	118b4 <myhtml_token_node_wait_for_done@plt>
   1e404:	add	r0, r6, #4
   1e408:	bl	1171c <mycore_string_crop_whitespace_from_begin@plt>
   1e40c:	mov	r5, #1
   1e410:	mov	r0, r4
   1e414:	mov	r1, #0
   1e418:	mov	r2, #1
   1e41c:	bl	10f9c <myhtml_tree_node_insert_root@plt>
   1e420:	mov	r0, #2
   1e424:	str	r0, [r4, #168]	; 0xa8
   1e428:	mov	r0, r5
   1e42c:	pop	{r4, r5, r6, sl, fp, pc}

0001e430 <myhtml_insertion_mode_before_head@@Base>:
   1e430:	push	{r4, r5, r6, sl, fp, lr}
   1e434:	add	fp, sp, #16
   1e438:	mov	r4, r0
   1e43c:	mov	r6, r1
   1e440:	ldr	r0, [r1]
   1e444:	ldr	r1, [r1, #48]	; 0x30
   1e448:	tst	r1, #1
   1e44c:	bne	1e484 <myhtml_insertion_mode_before_head@@Base+0x54>
   1e450:	mov	r5, #0
   1e454:	cmp	r0, #2
   1e458:	ble	1e4a8 <myhtml_insertion_mode_before_head@@Base+0x78>
   1e45c:	cmp	r0, #3
   1e460:	beq	1e520 <myhtml_insertion_mode_before_head@@Base+0xf0>
   1e464:	cmp	r0, #61	; 0x3d
   1e468:	beq	1e4d0 <myhtml_insertion_mode_before_head@@Base+0xa0>
   1e46c:	cmp	r0, #65	; 0x41
   1e470:	bne	1e500 <myhtml_insertion_mode_before_head@@Base+0xd0>
   1e474:	mov	r0, r4
   1e478:	mov	r1, r6
   1e47c:	pop	{r4, r5, r6, sl, fp, lr}
   1e480:	b	1e528 <myhtml_insertion_mode_in_body@@Base>
   1e484:	sub	r1, r0, #23
   1e488:	cmp	r1, #2
   1e48c:	bcc	1e500 <myhtml_insertion_mode_before_head@@Base+0xd0>
   1e490:	cmp	r0, #65	; 0x41
   1e494:	beq	1e500 <myhtml_insertion_mode_before_head@@Base+0xd0>
   1e498:	mov	r5, #0
   1e49c:	cmp	r0, #61	; 0x3d
   1e4a0:	beq	1e500 <myhtml_insertion_mode_before_head@@Base+0xd0>
   1e4a4:	b	1e520 <myhtml_insertion_mode_before_head@@Base+0xf0>
   1e4a8:	cmp	r0, #1
   1e4ac:	beq	1e4e0 <myhtml_insertion_mode_before_head@@Base+0xb0>
   1e4b0:	cmp	r0, #2
   1e4b4:	bne	1e500 <myhtml_insertion_mode_before_head@@Base+0xd0>
   1e4b8:	mov	r0, r4
   1e4bc:	mov	r1, r6
   1e4c0:	mov	r2, #0
   1e4c4:	mov	r5, #0
   1e4c8:	bl	11524 <myhtml_tree_node_insert_comment@plt>
   1e4cc:	b	1e520 <myhtml_insertion_mode_before_head@@Base+0xf0>
   1e4d0:	mov	r0, r4
   1e4d4:	mov	r1, r6
   1e4d8:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   1e4dc:	b	1e514 <myhtml_insertion_mode_before_head@@Base+0xe4>
   1e4e0:	ldr	r0, [r6, #48]	; 0x30
   1e4e4:	tst	r0, #8
   1e4e8:	bne	1e520 <myhtml_insertion_mode_before_head@@Base+0xf0>
   1e4ec:	ldr	r0, [r4, #8]
   1e4f0:	mov	r1, r6
   1e4f4:	bl	118b4 <myhtml_token_node_wait_for_done@plt>
   1e4f8:	add	r0, r6, #4
   1e4fc:	bl	1171c <mycore_string_crop_whitespace_from_begin@plt>
   1e500:	mov	r0, r4
   1e504:	mov	r1, #61	; 0x3d
   1e508:	mov	r2, #1
   1e50c:	mov	r5, #1
   1e510:	bl	11b30 <myhtml_tree_node_insert@plt>
   1e514:	mov	r1, #3
   1e518:	str	r1, [r4, #168]	; 0xa8
   1e51c:	str	r0, [r4, #92]	; 0x5c
   1e520:	mov	r0, r5
   1e524:	pop	{r4, r5, r6, sl, fp, pc}

0001e528 <myhtml_insertion_mode_in_body@@Base>:
   1e528:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e52c:	add	fp, sp, #28
   1e530:	sub	sp, sp, #12
   1e534:	mov	r8, r0
   1e538:	ldr	r2, [r1]
   1e53c:	ldr	r0, [r1, #48]	; 0x30
   1e540:	mov	r6, r1
   1e544:	tst	r0, #1
   1e548:	bne	1e980 <myhtml_insertion_mode_in_body@@Base+0x458>
   1e54c:	sub	r0, r2, #1
   1e550:	mov	r9, #0
   1e554:	cmp	r0, #250	; 0xfa
   1e558:	bhi	1f77c <myhtml_insertion_mode_in_body@@Base+0x1254>
   1e55c:	add	r1, pc, #4
   1e560:	ldr	r0, [r1, r0, lsl #2]
   1e564:	add	pc, r1, r0
   1e568:	muleq	r0, ip, ip
   1e56c:	andeq	r0, r0, r4, ror #25
   1e570:	andeq	r1, r0, r8, lsr #4
   1e574:	strdeq	r0, [r0], -ip
   1e578:	andeq	r1, r0, r4, lsl r2
   1e57c:	andeq	r1, r0, r4, lsl r2
   1e580:	andeq	r0, r0, ip, ror #7
   1e584:	andeq	r1, r0, r4, lsl r2
   1e588:	andeq	r0, r0, r8, lsl r9
   1e58c:	andeq	r0, r0, r4, lsr r7
   1e590:	andeq	r0, r0, ip, ror #7
   1e594:	andeq	r0, r0, ip, ror #7
   1e598:	andeq	r1, r0, r4, lsl r2
   1e59c:	andeq	r1, r0, r4, ror #3
   1e5a0:			; <UNDEFINED> instruction: 0x000006bc
   1e5a4:			; <UNDEFINED> instruction: 0x000006bc
   1e5a8:	andeq	r1, r0, r4, lsl r2
   1e5ac:	andeq	r1, r0, r4, lsl r2
   1e5b0:			; <UNDEFINED> instruction: 0x000006bc
   1e5b4:	andeq	r1, r0, r4, ror #3
   1e5b8:	andeq	r1, r0, r4, lsl r2
   1e5bc:	andeq	r0, r0, ip, ror #7
   1e5c0:	andeq	r0, r0, r0, ror #26
   1e5c4:	andeq	r0, r0, r4, lsr r7
   1e5c8:	andeq	r0, r0, r0, ror #27
   1e5cc:	andeq	r1, r0, r4, lsl r2
   1e5d0:	andeq	r1, r0, r8, lsr #4
   1e5d4:	andeq	r0, r0, ip, ror #7
   1e5d8:	andeq	r1, r0, r4, lsl r2
   1e5dc:	andeq	r1, r0, r4, ror #3
   1e5e0:	andeq	r1, r0, r8, lsr #4
   1e5e4:	andeq	r1, r0, r8, lsr #4
   1e5e8:	andeq	r1, r0, r4, lsl r2
   1e5ec:	andeq	r1, r0, r4, lsl r2
   1e5f0:	andeq	r1, r0, r4, lsl r2
   1e5f4:	andeq	r0, r0, r0, asr #18
   1e5f8:	andeq	r1, r0, r4, lsl r2
   1e5fc:	andeq	r0, r0, ip, ror #7
   1e600:	andeq	r1, r0, r4, lsl r2
   1e604:	andeq	r0, r0, ip, ror #7
   1e608:	andeq	r0, r0, ip, ror #7
   1e60c:	andeq	r0, r0, ip, ror #7
   1e610:	andeq	r0, r0, ip, ror #7
   1e614:	andeq	r0, r0, r0, asr #18
   1e618:	andeq	r1, r0, r4, ror #3
   1e61c:	andeq	r0, r0, r4, lsr r7
   1e620:	andeq	r0, r0, ip, ror #7
   1e624:	andeq	r0, r0, ip, ror #7
   1e628:	andeq	r0, r0, ip, ror #7
   1e62c:	andeq	r1, r0, r4, ror #3
   1e630:	andeq	r0, r0, ip, ror #7
   1e634:	andeq	r0, r0, r8, lsr lr
   1e638:	andeq	r1, r0, r8, lsr #4
   1e63c:	andeq	r0, r0, r8, lsr #29
   1e640:	andeq	r0, r0, r0, asr #14
   1e644:	andeq	r0, r0, r0, asr #14
   1e648:	andeq	r0, r0, r0, asr #14
   1e64c:	andeq	r0, r0, r0, asr #14
   1e650:	andeq	r0, r0, r0, asr #14
   1e654:	andeq	r0, r0, r0, asr #14
   1e658:	andeq	r1, r0, r8, lsr #4
   1e65c:	andeq	r0, r0, ip, ror #7
   1e660:	andeq	r0, r0, ip, ror #7
   1e664:	andeq	r0, r0, r0, lsl pc
   1e668:	andeq	r0, r0, r4, lsl #31
   1e66c:	andeq	r1, r0, r4, ror #3
   1e670:			; <UNDEFINED> instruction: 0x000013b8
   1e674:	strdeq	r0, [r0], -r8
   1e678:	andeq	r0, r0, r4, lsr r7
   1e67c:	andeq	r1, r0, r8
   1e680:	andeq	r1, r0, r4, lsl r2
   1e684:	andeq	r1, r0, r4, lsl r2
   1e688:	andeq	r1, r0, r4, lsl r2
   1e68c:	andeq	r0, r0, r4, lsr r7
   1e690:	andeq	r1, r0, r4, lsl r2
   1e694:	andeq	r1, r0, r4, lsl r2
   1e698:	andeq	r1, r0, r8, rrx
   1e69c:			; <UNDEFINED> instruction: 0x000006bc
   1e6a0:	andeq	r0, r0, ip, lsr #20
   1e6a4:	andeq	r0, r0, ip, ror #7
   1e6a8:	andeq	r1, r0, r4, lsl r2
   1e6ac:	andeq	r1, r0, r4, lsl r2
   1e6b0:	andeq	r0, r0, r8, lsl r9
   1e6b4:	andeq	r1, r0, r0, asr #2
   1e6b8:	andeq	r1, r0, ip, lsl #3
   1e6bc:			; <UNDEFINED> instruction: 0x000006bc
   1e6c0:	andeq	r1, r0, r4, lsl r2
   1e6c4:	andeq	r1, r0, r4, lsl r2
   1e6c8:	andeq	r0, r0, ip, ror #7
   1e6cc:			; <UNDEFINED> instruction: 0x000011b0
   1e6d0:	andeq	r1, r0, r4, lsr r2
   1e6d4:			; <UNDEFINED> instruction: 0x000006bc
   1e6d8:	andeq	r1, r0, r8, lsl #4
   1e6dc:	andeq	r0, r0, r8, lsl r9
   1e6e0:	andeq	r0, r0, ip, ror #7
   1e6e4:	andeq	r0, r0, r0, ror sl
   1e6e8:	andeq	r0, r0, r0, ror sl
   1e6ec:	andeq	r1, r0, r4, lsl r2
   1e6f0:	andeq	r0, r0, ip, ror #7
   1e6f4:	andeq	r0, r0, r8, lsl #18
   1e6f8:	andeq	r1, r0, r0, asr #4
   1e6fc:	andeq	r0, r0, ip, lsr #20
   1e700:	andeq	r1, r0, r4, lsl r2
   1e704:	andeq	r1, r0, r4, lsl r2
   1e708:	andeq	r0, r0, r0, lsl #21
   1e70c:	andeq	r0, r0, ip, lsr #21
   1e710:	andeq	r0, r0, ip, lsr #21
   1e714:	andeq	r0, r0, r0, lsl #21
   1e718:	andeq	r1, r0, r4, lsl r2
   1e71c:	andeq	r1, r0, r4, ror #3
   1e720:	andeq	r1, r0, r4, lsl r2
   1e724:			; <UNDEFINED> instruction: 0x000006bc
   1e728:	andeq	r0, r0, ip, ror #7
   1e72c:	andeq	r1, r0, r0, lsl #5
   1e730:	andeq	r1, r0, r4, ror #3
   1e734:	andeq	r0, r0, r8, lsl #18
   1e738:	andeq	r1, r0, r4, lsl r2
   1e73c:	andeq	r1, r0, r4, ror #3
   1e740:	andeq	r1, r0, r4, ror #3
   1e744:			; <UNDEFINED> instruction: 0x000006bc
   1e748:	andeq	r1, r0, r4, lsl r2
   1e74c:	andeq	r0, r0, ip, ror #7
   1e750:	andeq	r1, r0, r4, lsl r2
   1e754:	ldrdeq	r1, [r0], -r0
   1e758:	andeq	r1, r0, r8, lsl #6
   1e75c:	andeq	r1, r0, r8, lsr #4
   1e760:	andeq	r1, r0, r8, lsr #4
   1e764:			; <UNDEFINED> instruction: 0x000006bc
   1e768:	andeq	r1, r0, r4, asr r3
   1e76c:	andeq	r1, r0, r8, lsr #4
   1e770:	andeq	r1, r0, r8, lsr #4
   1e774:	andeq	r1, r0, r8, lsr #4
   1e778:	andeq	r1, r0, r4, lsl r2
   1e77c:			; <UNDEFINED> instruction: 0x000006bc
   1e780:	andeq	r1, r0, r8, lsr #4
   1e784:	andeq	r0, r0, r8, lsl #18
   1e788:	andeq	r1, r0, r4, ror #3
   1e78c:	andeq	r1, r0, r4, ror #3
   1e790:	andeq	r0, r0, ip, ror #7
   1e794:	andeq	r1, r0, r4, lsl r2
   1e798:	andeq	r1, r0, r4, lsl r2
   1e79c:	andeq	r0, r0, r4, lsr r7
   1e7a0:	andeq	r1, r0, r8, lsl #7
   1e7a4:	andeq	r1, r0, r4, lsl r2
   1e7a8:	andeq	r1, r0, r4, lsl r2
   1e7ac:	andeq	r1, r0, r4, lsl r2
   1e7b0:	andeq	r1, r0, r4, lsl r2
   1e7b4:	andeq	r1, r0, r4, lsl r2
   1e7b8:	andeq	r1, r0, r4, lsl r2
   1e7bc:	andeq	r1, r0, r4, lsl r2
   1e7c0:	andeq	r1, r0, r4, lsl r2
   1e7c4:	andeq	r1, r0, r4, lsl r2
   1e7c8:	andeq	r1, r0, r4, lsl r2
   1e7cc:	andeq	r1, r0, r4, lsl r2
   1e7d0:	andeq	r1, r0, r4, lsl r2
   1e7d4:	andeq	r1, r0, r4, lsl r2
   1e7d8:	andeq	r1, r0, r4, lsl r2
   1e7dc:	andeq	r1, r0, r4, lsl r2
   1e7e0:	andeq	r1, r0, r4, lsl r2
   1e7e4:	andeq	r1, r0, r4, lsl r2
   1e7e8:	andeq	r1, r0, r4, lsl r2
   1e7ec:	andeq	r1, r0, r4, lsl r2
   1e7f0:	andeq	r1, r0, r4, lsl r2
   1e7f4:	andeq	r1, r0, r4, lsl r2
   1e7f8:	andeq	r1, r0, r4, lsl r2
   1e7fc:	andeq	r1, r0, r4, lsl r2
   1e800:	andeq	r1, r0, r4, lsl r2
   1e804:	andeq	r1, r0, r4, lsl r2
   1e808:	andeq	r1, r0, r4, lsl r2
   1e80c:	andeq	r1, r0, r4, lsl r2
   1e810:	andeq	r1, r0, r4, lsl r2
   1e814:	andeq	r1, r0, r4, lsl r2
   1e818:	andeq	r1, r0, r4, lsl r2
   1e81c:	andeq	r1, r0, r4, lsl r2
   1e820:	andeq	r1, r0, r4, lsl r2
   1e824:	andeq	r1, r0, r4, lsl r2
   1e828:	andeq	r1, r0, r4, lsl r2
   1e82c:	andeq	r1, r0, r4, lsl r2
   1e830:	andeq	r1, r0, r4, lsl r2
   1e834:	andeq	r1, r0, r4, lsl r2
   1e838:	andeq	r1, r0, r4, lsl r2
   1e83c:	andeq	r1, r0, r4, lsl r2
   1e840:	andeq	r1, r0, r4, lsl r2
   1e844:	andeq	r1, r0, r4, lsl r2
   1e848:	andeq	r1, r0, r4, lsl r2
   1e84c:	andeq	r1, r0, r4, lsl r2
   1e850:	andeq	r1, r0, r4, lsl r2
   1e854:	andeq	r1, r0, r4, lsl r2
   1e858:	andeq	r1, r0, r4, lsl r2
   1e85c:	andeq	r1, r0, r4, lsl r2
   1e860:	andeq	r1, r0, r4, lsl r2
   1e864:	andeq	r1, r0, r4, lsl r2
   1e868:	andeq	r1, r0, r4, lsl r2
   1e86c:	andeq	r1, r0, r4, lsl r2
   1e870:	andeq	r1, r0, r4, lsl r2
   1e874:	andeq	r1, r0, r4, lsl r2
   1e878:	andeq	r1, r0, r4, lsl r2
   1e87c:	andeq	r1, r0, r4, lsl r2
   1e880:	andeq	r1, r0, r4, lsl r2
   1e884:	andeq	r1, r0, r4, lsl r2
   1e888:	andeq	r1, r0, r4, lsl r2
   1e88c:	andeq	r1, r0, r4, lsl r2
   1e890:	andeq	r1, r0, r4, lsl r2
   1e894:	andeq	r1, r0, r4, lsl r2
   1e898:	andeq	r1, r0, r4, lsl r2
   1e89c:	andeq	r1, r0, r4, lsl r2
   1e8a0:	andeq	r1, r0, r4, lsl r2
   1e8a4:	andeq	r1, r0, r4, lsl r2
   1e8a8:	andeq	r1, r0, r4, lsl r2
   1e8ac:	andeq	r1, r0, r4, lsl r2
   1e8b0:	andeq	r1, r0, r4, lsl r2
   1e8b4:	andeq	r1, r0, r4, lsl r2
   1e8b8:	andeq	r1, r0, r4, lsl r2
   1e8bc:	andeq	r1, r0, r4, lsl r2
   1e8c0:	andeq	r1, r0, r4, lsl r2
   1e8c4:	andeq	r1, r0, r4, lsl r2
   1e8c8:	andeq	r1, r0, r4, lsl r2
   1e8cc:	andeq	r1, r0, r4, ror #7
   1e8d0:	andeq	r1, r0, r4, lsl r2
   1e8d4:	andeq	r1, r0, r4, lsl r2
   1e8d8:	andeq	r1, r0, r4, lsl r2
   1e8dc:	andeq	r1, r0, r4, lsl r2
   1e8e0:	andeq	r1, r0, r4, lsl r2
   1e8e4:	andeq	r1, r0, r4, lsl r2
   1e8e8:	andeq	r1, r0, r4, lsl r2
   1e8ec:	andeq	r1, r0, r4, lsl r2
   1e8f0:	andeq	r1, r0, r4, lsl r2
   1e8f4:	andeq	r1, r0, r4, lsl r2
   1e8f8:	andeq	r1, r0, r4, lsl r2
   1e8fc:	andeq	r1, r0, r4, lsl r2
   1e900:	andeq	r1, r0, r4, lsl r2
   1e904:	andeq	r1, r0, r4, lsl r2
   1e908:	andeq	r1, r0, r4, lsl r2
   1e90c:	andeq	r1, r0, r4, lsl r2
   1e910:	andeq	r1, r0, r4, lsl r2
   1e914:	andeq	r1, r0, r4, lsl r2
   1e918:	andeq	r1, r0, r4, lsl r2
   1e91c:	andeq	r1, r0, r4, lsl r2
   1e920:	andeq	r1, r0, r4, lsl r2
   1e924:	andeq	r1, r0, r4, lsl r2
   1e928:	andeq	r1, r0, r4, lsl r2
   1e92c:	andeq	r1, r0, r4, lsl r2
   1e930:	andeq	r1, r0, r4, lsl r2
   1e934:	andeq	r1, r0, r4, lsl r2
   1e938:	andeq	r1, r0, r4, lsl r2
   1e93c:	andeq	r1, r0, r4, lsl r2
   1e940:	andeq	r1, r0, r4, lsl r2
   1e944:	andeq	r1, r0, r4, lsl r2
   1e948:	andeq	r1, r0, r4, lsl r2
   1e94c:	andeq	r1, r0, r4, lsl r2
   1e950:	andeq	r1, r0, r4, lsr r4
   1e954:	mov	r0, r8
   1e958:	mov	r1, #99	; 0x63
   1e95c:	mov	r2, #1
   1e960:	mov	r3, #32
   1e964:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   1e968:	cmp	r0, #0
   1e96c:	beq	1f784 <myhtml_insertion_mode_in_body@@Base+0x125c>
   1e970:	mov	r0, r8
   1e974:	mov	r1, r6
   1e978:	bl	116b0 <myhtml_tree_tags_close_p@plt>
   1e97c:	b	1f784 <myhtml_insertion_mode_in_body@@Base+0x125c>
   1e980:	sub	r0, r2, #4
   1e984:	cmp	r0, #135	; 0x87
   1e988:	bhi	1f04c <myhtml_insertion_mode_in_body@@Base+0xb24>
   1e98c:	add	r1, pc, #4
   1e990:	ldr	r0, [r1, r0, lsl #2]
   1e994:	add	pc, r1, r0
   1e998:	andeq	r0, r0, r8, ror r2
   1e99c:			; <UNDEFINED> instruction: 0x000006b4
   1e9a0:			; <UNDEFINED> instruction: 0x000006b4
   1e9a4:	andeq	r0, r0, r0, lsr #4
   1e9a8:			; <UNDEFINED> instruction: 0x000006b4
   1e9ac:	andeq	r0, r0, r0, ror #6
   1e9b0:			; <UNDEFINED> instruction: 0x000006b4
   1e9b4:	andeq	r0, r0, r0, lsr #4
   1e9b8:	andeq	r0, r0, r0, lsr #4
   1e9bc:			; <UNDEFINED> instruction: 0x000006b4
   1e9c0:	andeq	r0, r0, r8, ror r2
   1e9c4:			; <UNDEFINED> instruction: 0x000006b4
   1e9c8:			; <UNDEFINED> instruction: 0x000006b4
   1e9cc:			; <UNDEFINED> instruction: 0x000006b4
   1e9d0:			; <UNDEFINED> instruction: 0x000006b4
   1e9d4:			; <UNDEFINED> instruction: 0x000006b4
   1e9d8:	andeq	r0, r0, r8, ror r2
   1e9dc:			; <UNDEFINED> instruction: 0x000006b4
   1e9e0:	andeq	r0, r0, r0, lsr #4
   1e9e4:	andeq	r0, r0, r4, asr #13
   1e9e8:	andeq	r0, r0, r4, lsl #14
   1e9ec:	andeq	r0, r0, r0, lsr #4
   1e9f0:			; <UNDEFINED> instruction: 0x000006b4
   1e9f4:			; <UNDEFINED> instruction: 0x000006b4
   1e9f8:	andeq	r0, r0, r0, lsr #4
   1e9fc:			; <UNDEFINED> instruction: 0x000006b4
   1ea00:	andeq	r0, r0, r8, ror r2
   1ea04:			; <UNDEFINED> instruction: 0x000006b4
   1ea08:			; <UNDEFINED> instruction: 0x000006b4
   1ea0c:			; <UNDEFINED> instruction: 0x000006b4
   1ea10:			; <UNDEFINED> instruction: 0x000006b4
   1ea14:			; <UNDEFINED> instruction: 0x000006b4
   1ea18:	andeq	r0, r0, r0, asr #7
   1ea1c:			; <UNDEFINED> instruction: 0x000006b4
   1ea20:	andeq	r0, r0, r0, lsr #4
   1ea24:			; <UNDEFINED> instruction: 0x000006b4
   1ea28:	andeq	r0, r0, r0, lsr #4
   1ea2c:	andeq	r0, r0, r0, lsr #4
   1ea30:	andeq	r0, r0, r0, lsr #4
   1ea34:	andeq	r0, r0, r0, lsr #4
   1ea38:	andeq	r0, r0, r0, asr #7
   1ea3c:	andeq	r0, r0, r8, ror r2
   1ea40:			; <UNDEFINED> instruction: 0x000006b4
   1ea44:	andeq	r0, r0, r0, lsr #4
   1ea48:	andeq	r0, r0, r0, lsr #4
   1ea4c:	andeq	r0, r0, r0, lsr #4
   1ea50:	andeq	r0, r0, r8, ror r2
   1ea54:	andeq	r0, r0, r0, lsr #4
   1ea58:	andeq	r0, r0, r8, lsr r7
   1ea5c:			; <UNDEFINED> instruction: 0x000006b4
   1ea60:			; <UNDEFINED> instruction: 0x000006b4
   1ea64:	andeq	r0, r0, r0, lsr #5
   1ea68:	andeq	r0, r0, r0, lsr #5
   1ea6c:	andeq	r0, r0, r0, lsr #5
   1ea70:	andeq	r0, r0, r0, lsr #5
   1ea74:	andeq	r0, r0, r0, lsr #5
   1ea78:	andeq	r0, r0, r0, lsr #5
   1ea7c:			; <UNDEFINED> instruction: 0x000006b4
   1ea80:	andeq	r0, r0, r0, lsr #4
   1ea84:	andeq	r0, r0, r0, lsr #4
   1ea88:			; <UNDEFINED> instruction: 0x000006b4
   1ea8c:	andeq	r0, r0, r4, lsr #15
   1ea90:	andeq	r0, r0, r8, ror r2
   1ea94:			; <UNDEFINED> instruction: 0x000006b4
   1ea98:			; <UNDEFINED> instruction: 0x000006b4
   1ea9c:			; <UNDEFINED> instruction: 0x000006b4
   1eaa0:			; <UNDEFINED> instruction: 0x000006b4
   1eaa4:			; <UNDEFINED> instruction: 0x000006b4
   1eaa8:			; <UNDEFINED> instruction: 0x000006b4
   1eaac:			; <UNDEFINED> instruction: 0x000006b4
   1eab0:			; <UNDEFINED> instruction: 0x000006b4
   1eab4:			; <UNDEFINED> instruction: 0x000006b4
   1eab8:			; <UNDEFINED> instruction: 0x000006b4
   1eabc:	andeq	r0, r0, r4, ror #15
   1eac0:			; <UNDEFINED> instruction: 0x000006b4
   1eac4:	andeq	r0, r0, r0, lsr #4
   1eac8:	andeq	r0, r0, r0, lsr #4
   1eacc:			; <UNDEFINED> instruction: 0x000006b4
   1ead0:			; <UNDEFINED> instruction: 0x000006b4
   1ead4:	andeq	r0, r0, r0, ror #6
   1ead8:	andeq	r0, r0, r0, lsr #4
   1eadc:			; <UNDEFINED> instruction: 0x000006b4
   1eae0:			; <UNDEFINED> instruction: 0x000006b4
   1eae4:			; <UNDEFINED> instruction: 0x000006b4
   1eae8:			; <UNDEFINED> instruction: 0x000006b4
   1eaec:	andeq	r0, r0, r0, lsr #4
   1eaf0:	andeq	r0, r0, r8, ror r2
   1eaf4:			; <UNDEFINED> instruction: 0x000006b4
   1eaf8:			; <UNDEFINED> instruction: 0x000006b4
   1eafc:			; <UNDEFINED> instruction: 0x000006b4
   1eb00:	andeq	r0, r0, r0, ror #6
   1eb04:	andeq	r0, r0, r0, lsr #4
   1eb08:			; <UNDEFINED> instruction: 0x000006b4
   1eb0c:			; <UNDEFINED> instruction: 0x000006b4
   1eb10:			; <UNDEFINED> instruction: 0x000006b4
   1eb14:	andeq	r0, r0, r0, lsr r8
   1eb18:			; <UNDEFINED> instruction: 0x000006b4
   1eb1c:			; <UNDEFINED> instruction: 0x000006b4
   1eb20:	andeq	r0, r0, r0, lsr #4
   1eb24:			; <UNDEFINED> instruction: 0x000006b4
   1eb28:			; <UNDEFINED> instruction: 0x000006b4
   1eb2c:			; <UNDEFINED> instruction: 0x000006b4
   1eb30:			; <UNDEFINED> instruction: 0x000006b4
   1eb34:			; <UNDEFINED> instruction: 0x000006b4
   1eb38:			; <UNDEFINED> instruction: 0x000006b4
   1eb3c:			; <UNDEFINED> instruction: 0x000006b4
   1eb40:	andeq	r0, r0, r8, ror r2
   1eb44:			; <UNDEFINED> instruction: 0x000006b4
   1eb48:			; <UNDEFINED> instruction: 0x000006b4
   1eb4c:	andeq	r0, r0, r0, lsr #4
   1eb50:			; <UNDEFINED> instruction: 0x000006b4
   1eb54:	andeq	r0, r0, r8, ror r2
   1eb58:			; <UNDEFINED> instruction: 0x000006b4
   1eb5c:			; <UNDEFINED> instruction: 0x000006b4
   1eb60:	andeq	r0, r0, r8, ror r2
   1eb64:	andeq	r0, r0, r8, ror r2
   1eb68:			; <UNDEFINED> instruction: 0x000006b4
   1eb6c:			; <UNDEFINED> instruction: 0x000006b4
   1eb70:	andeq	r0, r0, r0, lsr #4
   1eb74:			; <UNDEFINED> instruction: 0x000006b4
   1eb78:			; <UNDEFINED> instruction: 0x000006b4
   1eb7c:			; <UNDEFINED> instruction: 0x000006b4
   1eb80:			; <UNDEFINED> instruction: 0x000006b4
   1eb84:			; <UNDEFINED> instruction: 0x000006b4
   1eb88:	andeq	r0, r0, ip, lsl #5
   1eb8c:			; <UNDEFINED> instruction: 0x000006b4
   1eb90:			; <UNDEFINED> instruction: 0x000006b4
   1eb94:			; <UNDEFINED> instruction: 0x000006b4
   1eb98:			; <UNDEFINED> instruction: 0x000006b4
   1eb9c:			; <UNDEFINED> instruction: 0x000006b4
   1eba0:			; <UNDEFINED> instruction: 0x000006b4
   1eba4:			; <UNDEFINED> instruction: 0x000006b4
   1eba8:			; <UNDEFINED> instruction: 0x000006b4
   1ebac:	andeq	r0, r0, r8, ror r2
   1ebb0:	andeq	r0, r0, r8, ror r2
   1ebb4:	andeq	r0, r0, r0, lsr #4
   1ebb8:	mov	r1, r2
   1ebbc:	mov	r0, r8
   1ebc0:	mov	r2, #1
   1ebc4:	mov	r3, #8
   1ebc8:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   1ebcc:	cmp	r0, #0
   1ebd0:	beq	1ec1c <myhtml_insertion_mode_in_body@@Base+0x6f4>
   1ebd4:	mov	r0, r8
   1ebd8:	mov	r1, #0
   1ebdc:	mov	r2, #0
   1ebe0:	mov	r9, #0
   1ebe4:	bl	118fc <myhtml_tree_generate_implied_end_tags@plt>
   1ebe8:	mov	r0, r8
   1ebec:	bl	11854 <myhtml_tree_current_node@plt>
   1ebf0:	ldr	r1, [r6]
   1ebf4:	bl	11c2c <myhtml_is_html_node@plt>
   1ebf8:	ldr	r1, [r6]
   1ebfc:	mov	r0, r8
   1ec00:	mov	r2, #1
   1ec04:	mov	r3, #0
   1ec08:	bl	11b0c <myhtml_tree_open_elements_pop_until@plt>
   1ec0c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1ec10:	mov	r0, r8
   1ec14:	mov	r1, r6
   1ec18:	bl	11a64 <myhtml_tree_adoption_agency_algorithm@plt>
   1ec1c:	mov	r9, #0
   1ec20:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1ec24:	mov	r0, r8
   1ec28:	mov	r1, r6
   1ec2c:	sub	sp, fp, #28
   1ec30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ec34:	b	1fad8 <myhtml_insertion_mode_in_head@@Base>
   1ec38:	ldr	r0, [r8, #128]	; 0x80
   1ec3c:	mov	r9, #0
   1ec40:	ldr	r4, [r0, #4]
   1ec44:	ldr	r7, [r0]
   1ec48:	sub	r5, r7, #4
   1ec4c:	cmp	r4, #0
   1ec50:	beq	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1ec54:	ldr	r0, [r5, r4, lsl #2]
   1ec58:	ldr	r1, [r0, #4]
   1ec5c:	ldr	r0, [r8, #28]
   1ec60:	bl	11bc0 <myhtml_tag_get_by_id@plt>
   1ec64:	ldr	r1, [r5, r4, lsl #2]
   1ec68:	ldr	r2, [r1, #4]
   1ec6c:	ldr	r1, [r1, #8]
   1ec70:	sub	r2, r2, #55	; 0x37
   1ec74:	cmp	r2, #5
   1ec78:	bhi	1ec84 <myhtml_insertion_mode_in_body@@Base+0x75c>
   1ec7c:	cmp	r1, #1
   1ec80:	beq	1eda0 <myhtml_insertion_mode_in_body@@Base+0x878>
   1ec84:	add	r0, r0, r1, lsl #2
   1ec88:	sub	r4, r4, #1
   1ec8c:	ldrb	r0, [r0, #16]
   1ec90:	tst	r0, #8
   1ec94:	beq	1ec4c <myhtml_insertion_mode_in_body@@Base+0x724>
   1ec98:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1ec9c:	mov	r0, r8
   1eca0:	bl	117ac <myhtml_tree_active_formatting_reconstruction@plt>
   1eca4:	b	1f4c0 <myhtml_insertion_mode_in_body@@Base+0xf98>
   1eca8:	mov	r0, r8
   1ecac:	mov	r1, #99	; 0x63
   1ecb0:	mov	r2, #1
   1ecb4:	mov	r3, #32
   1ecb8:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   1ecbc:	cmp	r0, #0
   1ecc0:	beq	1ecd0 <myhtml_insertion_mode_in_body@@Base+0x7a8>
   1ecc4:	mov	r0, r8
   1ecc8:	mov	r1, r6
   1eccc:	bl	116b0 <myhtml_tree_tags_close_p@plt>
   1ecd0:	mov	r0, r8
   1ecd4:	bl	11854 <myhtml_tree_current_node@plt>
   1ecd8:	ldr	r1, [r0, #4]
   1ecdc:	sub	r1, r1, #55	; 0x37
   1ece0:	cmp	r1, #5
   1ece4:	bhi	1f784 <myhtml_insertion_mode_in_body@@Base+0x125c>
   1ece8:	ldr	r0, [r0, #8]
   1ecec:	cmp	r0, #1
   1ecf0:	beq	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x11c0>
   1ecf4:	b	1f784 <myhtml_insertion_mode_in_body@@Base+0x125c>
   1ecf8:	mov	r1, r2
   1ecfc:	mov	r0, r8
   1ed00:	mov	r2, #1
   1ed04:	mov	r3, #8
   1ed08:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   1ed0c:	cmp	r0, #0
   1ed10:	beq	1ec1c <myhtml_insertion_mode_in_body@@Base+0x6f4>
   1ed14:	mov	r0, r8
   1ed18:	mov	r1, #0
   1ed1c:	mov	r2, #0
   1ed20:	mov	r9, #0
   1ed24:	bl	118fc <myhtml_tree_generate_implied_end_tags@plt>
   1ed28:	mov	r0, r8
   1ed2c:	bl	11854 <myhtml_tree_current_node@plt>
   1ed30:	ldr	r1, [r6]
   1ed34:	bl	11c2c <myhtml_is_html_node@plt>
   1ed38:	ldr	r1, [r6]
   1ed3c:	mov	r0, r8
   1ed40:	mov	r2, #1
   1ed44:	mov	r3, #0
   1ed48:	bl	11b0c <myhtml_tree_open_elements_pop_until@plt>
   1ed4c:	mov	r0, r8
   1ed50:	bl	11f38 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   1ed54:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1ed58:	mov	r1, r2
   1ed5c:	mov	r0, r8
   1ed60:	mov	r2, #1
   1ed64:	mov	r3, #8
   1ed68:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   1ed6c:	cmp	r0, #0
   1ed70:	beq	1ec1c <myhtml_insertion_mode_in_body@@Base+0x6f4>
   1ed74:	ldr	r1, [r6]
   1ed78:	mov	r0, r8
   1ed7c:	mov	r2, #1
   1ed80:	bl	118fc <myhtml_tree_generate_implied_end_tags@plt>
   1ed84:	mov	r0, r8
   1ed88:	bl	11854 <myhtml_tree_current_node@plt>
   1ed8c:	ldr	r1, [r6]
   1ed90:	bl	11c2c <myhtml_is_html_node@plt>
   1ed94:	ldr	r1, [r6]
   1ed98:	mov	r9, #0
   1ed9c:	b	1ebfc <myhtml_insertion_mode_in_body@@Base+0x6d4>
   1eda0:	mov	r0, r8
   1eda4:	mov	r1, #0
   1eda8:	mov	r2, #0
   1edac:	mov	r9, #0
   1edb0:	bl	118fc <myhtml_tree_generate_implied_end_tags@plt>
   1edb4:	mov	r0, r8
   1edb8:	bl	11854 <myhtml_tree_current_node@plt>
   1edbc:	ldr	r1, [r6]
   1edc0:	bl	11c2c <myhtml_is_html_node@plt>
   1edc4:	ldr	r0, [r8, #128]	; 0x80
   1edc8:	ldr	r1, [r0, #4]
   1edcc:	cmp	r1, #0
   1edd0:	beq	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1edd4:	ldr	r1, [r0, #4]
   1edd8:	sub	r1, r1, #1
   1eddc:	str	r1, [r0, #4]
   1ede0:	ldr	r1, [r0, #4]
   1ede4:	ldr	r1, [r7, r1, lsl #2]
   1ede8:	ldr	r1, [r1, #4]
   1edec:	cmp	r1, #55	; 0x37
   1edf0:	beq	1ee58 <myhtml_insertion_mode_in_body@@Base+0x930>
   1edf4:	ldr	r1, [r0, #4]
   1edf8:	ldr	r1, [r7, r1, lsl #2]
   1edfc:	ldr	r1, [r1, #4]
   1ee00:	cmp	r1, #56	; 0x38
   1ee04:	beq	1ee58 <myhtml_insertion_mode_in_body@@Base+0x930>
   1ee08:	ldr	r1, [r0, #4]
   1ee0c:	ldr	r1, [r7, r1, lsl #2]
   1ee10:	ldr	r1, [r1, #4]
   1ee14:	cmp	r1, #57	; 0x39
   1ee18:	beq	1ee58 <myhtml_insertion_mode_in_body@@Base+0x930>
   1ee1c:	ldr	r1, [r0, #4]
   1ee20:	ldr	r1, [r7, r1, lsl #2]
   1ee24:	ldr	r1, [r1, #4]
   1ee28:	cmp	r1, #58	; 0x3a
   1ee2c:	beq	1ee58 <myhtml_insertion_mode_in_body@@Base+0x930>
   1ee30:	ldr	r1, [r0, #4]
   1ee34:	ldr	r1, [r7, r1, lsl #2]
   1ee38:	ldr	r1, [r1, #4]
   1ee3c:	cmp	r1, #59	; 0x3b
   1ee40:	beq	1ee58 <myhtml_insertion_mode_in_body@@Base+0x930>
   1ee44:	ldr	r1, [r0, #4]
   1ee48:	ldr	r1, [r7, r1, lsl #2]
   1ee4c:	ldr	r1, [r1, #4]
   1ee50:	cmp	r1, #60	; 0x3c
   1ee54:	bne	1edc8 <myhtml_insertion_mode_in_body@@Base+0x8a0>
   1ee58:	ldr	r1, [r0, #4]
   1ee5c:	ldr	r1, [r7, r1, lsl #2]
   1ee60:	ldr	r1, [r1, #8]
   1ee64:	cmp	r1, #1
   1ee68:	bne	1edc8 <myhtml_insertion_mode_in_body@@Base+0x8a0>
   1ee6c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1ee70:	mov	r0, r8
   1ee74:	mov	r1, r6
   1ee78:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   1ee7c:	b	1f990 <myhtml_insertion_mode_in_body@@Base+0x1468>
   1ee80:	mov	r0, r8
   1ee84:	bl	117ac <myhtml_tree_active_formatting_reconstruction@plt>
   1ee88:	mov	r0, r8
   1ee8c:	mov	r1, r6
   1ee90:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   1ee94:	ldr	r0, [r8]
   1ee98:	ldr	r1, [r0, #36]	; 0x24
   1ee9c:	mov	r0, r8
   1eea0:	bl	113d4 <myhtml_tree_active_formatting_append@plt>
   1eea4:	b	1f4d4 <myhtml_insertion_mode_in_body@@Base+0xfac>
   1eea8:	ldr	r0, [r8, #128]	; 0x80
   1eeac:	ldr	r1, [r8, #180]	; 0xb4
   1eeb0:	ldr	r2, [r8, #180]	; 0xb4
   1eeb4:	and	r1, r1, #2
   1eeb8:	eor	r1, r2, r1
   1eebc:	str	r1, [r8, #180]	; 0xb4
   1eec0:	ldr	sl, [r0, #4]
   1eec4:	cmp	sl, #0
   1eec8:	beq	1e954 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1eecc:	ldr	r0, [r0]
   1eed0:	add	r0, r0, sl, lsl #2
   1eed4:	ldr	r4, [r0, #-4]
   1eed8:	ldr	r0, [r8, #28]
   1eedc:	mov	r7, r4
   1eee0:	ldr	r1, [r7, #4]!
   1eee4:	bl	11bc0 <myhtml_tag_get_by_id@plt>
   1eee8:	mov	r5, r0
   1eeec:	mov	r0, r4
   1eef0:	mov	r1, #36	; 0x24
   1eef4:	bl	11c2c <myhtml_is_html_node@plt>
   1eef8:	cmp	r0, #0
   1eefc:	bne	1f9c0 <myhtml_insertion_mode_in_body@@Base+0x1498>
   1ef00:	rsb	sl, sl, #2
   1ef04:	mov	r0, r4
   1ef08:	mov	r1, #44	; 0x2c
   1ef0c:	bl	11c2c <myhtml_is_html_node@plt>
   1ef10:	cmp	r0, #0
   1ef14:	bne	1fa88 <myhtml_insertion_mode_in_body@@Base+0x1560>
   1ef18:	ldr	r0, [r4, #8]
   1ef1c:	add	r1, r5, r0, lsl #2
   1ef20:	ldrb	r1, [r1, #16]
   1ef24:	tst	r1, #2
   1ef28:	beq	1ef44 <myhtml_insertion_mode_in_body@@Base+0xa1c>
   1ef2c:	ldr	r1, [r7]
   1ef30:	cmp	r1, #7
   1ef34:	cmpne	r1, #99	; 0x63
   1ef38:	bne	1ef88 <myhtml_insertion_mode_in_body@@Base+0xa60>
   1ef3c:	cmp	r0, #1
   1ef40:	bne	1e954 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1ef44:	cmp	sl, #1
   1ef48:	beq	1e954 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1ef4c:	ldr	r1, [r8, #128]	; 0x80
   1ef50:	ldr	r0, [r8, #28]
   1ef54:	ldr	r1, [r1]
   1ef58:	ldr	r4, [r1, -sl, lsl #2]
   1ef5c:	mov	r7, r4
   1ef60:	ldr	r1, [r7, #4]!
   1ef64:	bl	11bc0 <myhtml_tag_get_by_id@plt>
   1ef68:	mov	r5, r0
   1ef6c:	mov	r0, r4
   1ef70:	mov	r1, #36	; 0x24
   1ef74:	bl	11c2c <myhtml_is_html_node@plt>
   1ef78:	add	sl, sl, #1
   1ef7c:	cmp	r0, #0
   1ef80:	beq	1ef04 <myhtml_insertion_mode_in_body@@Base+0x9dc>
   1ef84:	b	1f9c0 <myhtml_insertion_mode_in_body@@Base+0x1498>
   1ef88:	cmp	r1, #42	; 0x2a
   1ef8c:	beq	1ef3c <myhtml_insertion_mode_in_body@@Base+0xa14>
   1ef90:	b	1e954 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1ef94:	mov	r0, r8
   1ef98:	mov	r1, #99	; 0x63
   1ef9c:	mov	r2, #1
   1efa0:	mov	r3, #32
   1efa4:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   1efa8:	cmp	r0, #0
   1efac:	beq	1efbc <myhtml_insertion_mode_in_body@@Base+0xa94>
   1efb0:	mov	r0, r8
   1efb4:	mov	r1, r6
   1efb8:	bl	116b0 <myhtml_tree_tags_close_p@plt>
   1efbc:	mov	r0, r8
   1efc0:	mov	r1, r6
   1efc4:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   1efc8:	ldr	r0, [r8, #180]	; 0xb4
   1efcc:	orr	r0, r0, #192	; 0xc0
   1efd0:	str	r0, [r8, #180]	; 0xb4
   1efd4:	b	1f4d4 <myhtml_insertion_mode_in_body@@Base+0xfac>
   1efd8:	mov	r0, r8
   1efdc:	bl	11854 <myhtml_tree_current_node@plt>
   1efe0:	mov	r1, #97	; 0x61
   1efe4:	b	1f700 <myhtml_insertion_mode_in_body@@Base+0x11d8>
   1efe8:	mov	r0, r8
   1efec:	mov	r1, #109	; 0x6d
   1eff0:	mov	r2, #1
   1eff4:	mov	r3, #8
   1eff8:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   1effc:	cmp	r0, #0
   1f000:	beq	1f040 <myhtml_insertion_mode_in_body@@Base+0xb18>
   1f004:	mov	r0, r8
   1f008:	mov	r1, #0
   1f00c:	mov	r2, #0
   1f010:	b	1f03c <myhtml_insertion_mode_in_body@@Base+0xb14>
   1f014:	mov	r0, r8
   1f018:	mov	r1, #109	; 0x6d
   1f01c:	mov	r2, #1
   1f020:	mov	r3, #8
   1f024:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   1f028:	cmp	r0, #0
   1f02c:	beq	1f040 <myhtml_insertion_mode_in_body@@Base+0xb18>
   1f030:	mov	r0, r8
   1f034:	mov	r1, #108	; 0x6c
   1f038:	mov	r2, #1
   1f03c:	bl	118fc <myhtml_tree_generate_implied_end_tags@plt>
   1f040:	mov	r0, r8
   1f044:	bl	11854 <myhtml_tree_current_node@plt>
   1f048:	b	1f784 <myhtml_insertion_mode_in_body@@Base+0x125c>
   1f04c:	mov	r0, r8
   1f050:	mov	r1, r6
   1f054:	bl	11098 <myhtml_insertion_mode_in_body_other_end_tag@plt>
   1f058:	b	1ec1c <myhtml_insertion_mode_in_body@@Base+0x6f4>
   1f05c:	mov	r0, r8
   1f060:	mov	r1, #23
   1f064:	mov	r2, #1
   1f068:	mov	r3, #8
   1f06c:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   1f070:	mov	r9, #0
   1f074:	cmp	r0, #0
   1f078:	beq	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f07c:	ldr	r0, [r8, #128]	; 0x80
   1f080:	mvn	r1, #0
   1f084:	ldr	r2, [r0, #4]
   1f088:	add	r1, r1, #1
   1f08c:	cmp	r1, r2
   1f090:	bcc	1f084 <myhtml_insertion_mode_in_body@@Base+0xb5c>
   1f094:	mov	r0, #18
   1f098:	b	1f830 <myhtml_insertion_mode_in_body@@Base+0x1308>
   1f09c:	ldr	r0, [r6, #40]	; 0x28
   1f0a0:	cmp	r0, #0
   1f0a4:	movne	r0, #0
   1f0a8:	strne	r0, [r6, #40]	; 0x28
   1f0ac:	ldr	r0, [r6, #44]	; 0x2c
   1f0b0:	cmp	r0, #0
   1f0b4:	movne	r0, #0
   1f0b8:	strne	r0, [r6, #44]	; 0x2c
   1f0bc:	mov	r0, r8
   1f0c0:	bl	117ac <myhtml_tree_active_formatting_reconstruction@plt>
   1f0c4:	mov	r9, #0
   1f0c8:	str	r9, [r6, #48]	; 0x30
   1f0cc:	b	1f4c0 <myhtml_insertion_mode_in_body@@Base+0xf98>
   1f0d0:	mov	r0, r8
   1f0d4:	mov	r1, #128	; 0x80
   1f0d8:	mov	r2, #1
   1f0dc:	mov	r3, #0
   1f0e0:	mov	r9, #0
   1f0e4:	bl	119ec <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1f0e8:	cmp	r0, #0
   1f0ec:	beq	1f9ec <myhtml_insertion_mode_in_body@@Base+0x14c4>
   1f0f0:	mov	r0, r8
   1f0f4:	mov	r1, #52	; 0x34
   1f0f8:	mov	r2, #1
   1f0fc:	mov	r3, #8
   1f100:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   1f104:	cmp	r0, #0
   1f108:	beq	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f10c:	mov	r0, r8
   1f110:	mov	r1, #0
   1f114:	mov	r2, #0
   1f118:	mov	r9, #0
   1f11c:	bl	118fc <myhtml_tree_generate_implied_end_tags@plt>
   1f120:	mov	r0, r8
   1f124:	bl	11854 <myhtml_tree_current_node@plt>
   1f128:	mov	r1, #52	; 0x34
   1f12c:	bl	11c2c <myhtml_is_html_node@plt>
   1f130:	mov	r0, r8
   1f134:	mov	r1, #52	; 0x34
   1f138:	b	1ec00 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1f13c:	mov	r0, r8
   1f140:	mov	r1, #23
   1f144:	mov	r2, #1
   1f148:	mov	r3, #8
   1f14c:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   1f150:	cmp	r0, #0
   1f154:	beq	1ec1c <myhtml_insertion_mode_in_body@@Base+0x6f4>
   1f158:	ldr	r0, [r8, #128]	; 0x80
   1f15c:	mvn	r1, #0
   1f160:	ldr	r2, [r0, #4]
   1f164:	add	r1, r1, #1
   1f168:	cmp	r1, r2
   1f16c:	bcc	1f160 <myhtml_insertion_mode_in_body@@Base+0xc38>
   1f170:	mov	r0, #18
   1f174:	mov	r9, #1
   1f178:	b	1f830 <myhtml_insertion_mode_in_body@@Base+0x1308>
   1f17c:	mov	r0, r8
   1f180:	mov	r1, #77	; 0x4d
   1f184:	mov	r2, #1
   1f188:	mov	r3, #16
   1f18c:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   1f190:	cmp	r0, #0
   1f194:	beq	1ec1c <myhtml_insertion_mode_in_body@@Base+0x6f4>
   1f198:	mov	r0, r8
   1f19c:	mov	r1, #77	; 0x4d
   1f1a0:	mov	r2, #1
   1f1a4:	bl	118fc <myhtml_tree_generate_implied_end_tags@plt>
   1f1a8:	mov	r0, r8
   1f1ac:	bl	11854 <myhtml_tree_current_node@plt>
   1f1b0:	mov	r1, #77	; 0x4d
   1f1b4:	bl	11c2c <myhtml_is_html_node@plt>
   1f1b8:	mov	r9, #0
   1f1bc:	mov	r0, r8
   1f1c0:	mov	r1, #77	; 0x4d
   1f1c4:	b	1ec00 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1f1c8:	mov	r0, r8
   1f1cc:	mov	r1, #99	; 0x63
   1f1d0:	mov	r2, #1
   1f1d4:	mov	r3, #32
   1f1d8:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   1f1dc:	cmp	r0, #0
   1f1e0:	bne	1f1f4 <myhtml_insertion_mode_in_body@@Base+0xccc>
   1f1e4:	mov	r0, r8
   1f1e8:	mov	r1, #99	; 0x63
   1f1ec:	mov	r2, #1
   1f1f0:	bl	11b30 <myhtml_tree_node_insert@plt>
   1f1f4:	mov	r0, r8
   1f1f8:	mov	r1, r6
   1f1fc:	bl	116b0 <myhtml_tree_tags_close_p@plt>
   1f200:	b	1ec1c <myhtml_insertion_mode_in_body@@Base+0x6f4>
   1f204:	ldr	r0, [r6, #48]	; 0x30
   1f208:	tst	r0, #2048	; 0x800
   1f20c:	beq	1f228 <myhtml_insertion_mode_in_body@@Base+0xd00>
   1f210:	mov	r0, r8
   1f214:	mov	r1, r6
   1f218:	bl	119bc <myhtml_insertion_fix_for_null_char_drop_all@plt>
   1f21c:	ldr	r0, [r6, #12]
   1f220:	cmp	r0, #0
   1f224:	beq	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f228:	mov	r0, r8
   1f22c:	bl	117ac <myhtml_tree_active_formatting_reconstruction@plt>
   1f230:	mov	r0, r8
   1f234:	mov	r1, r6
   1f238:	bl	112c0 <myhtml_tree_node_insert_text@plt>
   1f23c:	ldr	r0, [r6, #48]	; 0x30
   1f240:	tst	r0, #8
   1f244:	beq	1f4d4 <myhtml_insertion_mode_in_body@@Base+0xfac>
   1f248:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f24c:	mov	r0, r8
   1f250:	mov	r1, r6
   1f254:	mov	r2, #0
   1f258:	mov	r9, #0
   1f25c:	bl	11524 <myhtml_tree_node_insert_comment@plt>
   1f260:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f264:	mov	r0, r8
   1f268:	mov	r1, #4
   1f26c:	mov	r2, #0
   1f270:	mov	r9, #0
   1f274:	bl	11878 <myhtml_tree_active_formatting_between_last_marker@plt>
   1f278:	cmp	r0, #0
   1f27c:	beq	1f74c <myhtml_insertion_mode_in_body@@Base+0x1224>
   1f280:	mov	r0, r8
   1f284:	mov	r1, r6
   1f288:	mov	r2, #4
   1f28c:	bl	11a64 <myhtml_tree_adoption_agency_algorithm@plt>
   1f290:	mov	r0, r8
   1f294:	mov	r1, #4
   1f298:	mov	r2, #0
   1f29c:	bl	11878 <myhtml_tree_active_formatting_between_last_marker@plt>
   1f2a0:	cmp	r0, #0
   1f2a4:	beq	1f74c <myhtml_insertion_mode_in_body@@Base+0x1224>
   1f2a8:	mov	r7, r0
   1f2ac:	mov	r0, r8
   1f2b0:	mov	r1, r7
   1f2b4:	bl	11500 <myhtml_tree_open_elements_remove@plt>
   1f2b8:	mov	r0, r8
   1f2bc:	mov	r1, r7
   1f2c0:	bl	11a70 <myhtml_tree_active_formatting_remove@plt>
   1f2c4:	b	1f74c <myhtml_insertion_mode_in_body@@Base+0x1224>
   1f2c8:	ldr	r0, [r8, #128]	; 0x80
   1f2cc:	ldr	r1, [r0, #4]
   1f2d0:	cmp	r1, #2
   1f2d4:	bcc	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f2d8:	ldr	r0, [r0]
   1f2dc:	ldr	r0, [r0, #4]
   1f2e0:	ldr	r1, [r0, #4]
   1f2e4:	cmp	r1, #23
   1f2e8:	bne	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f2ec:	ldr	r0, [r0, #8]
   1f2f0:	cmp	r0, #1
   1f2f4:	bne	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f2f8:	mov	r0, r8
   1f2fc:	mov	r1, #128	; 0x80
   1f300:	mov	r2, #1
   1f304:	mov	r3, #0
   1f308:	mov	r9, #0
   1f30c:	bl	119ec <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1f310:	cmp	r0, #0
   1f314:	bne	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f318:	ldr	r0, [r8, #128]	; 0x80
   1f31c:	ldr	r1, [r8, #180]	; 0xb4
   1f320:	ldr	r2, [r8, #180]	; 0xb4
   1f324:	and	r1, r1, #2
   1f328:	eor	r1, r2, r1
   1f32c:	str	r1, [r8, #180]	; 0xb4
   1f330:	ldr	r1, [r0, #4]
   1f334:	cmp	r1, #2
   1f338:	bcc	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f33c:	ldr	r0, [r0]
   1f340:	ldr	r4, [r0, #4]
   1f344:	b	1f524 <myhtml_insertion_mode_in_body@@Base+0xffc>
   1f348:	mov	r0, r8
   1f34c:	mov	r1, #25
   1f350:	mov	r2, #1
   1f354:	mov	r3, #8
   1f358:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   1f35c:	cmp	r0, #0
   1f360:	beq	1f388 <myhtml_insertion_mode_in_body@@Base+0xe60>
   1f364:	mov	r0, r8
   1f368:	mov	r1, #0
   1f36c:	mov	r2, #0
   1f370:	bl	118fc <myhtml_tree_generate_implied_end_tags@plt>
   1f374:	mov	r0, r8
   1f378:	mov	r1, #25
   1f37c:	mov	r2, #1
   1f380:	mov	r3, #0
   1f384:	bl	11b0c <myhtml_tree_open_elements_pop_until@plt>
   1f388:	mov	r0, r8
   1f38c:	bl	117ac <myhtml_tree_active_formatting_reconstruction@plt>
   1f390:	mov	r0, r8
   1f394:	mov	r1, r6
   1f398:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   1f39c:	b	1f4d4 <myhtml_insertion_mode_in_body@@Base+0xfac>
   1f3a0:	mov	r0, r8
   1f3a4:	mov	r1, #128	; 0x80
   1f3a8:	mov	r2, #1
   1f3ac:	mov	r3, #0
   1f3b0:	mov	r9, #0
   1f3b4:	bl	119ec <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1f3b8:	mov	r7, r0
   1f3bc:	cmp	r0, #0
   1f3c0:	bne	1f3d0 <myhtml_insertion_mode_in_body@@Base+0xea8>
   1f3c4:	ldr	r0, [r8, #104]	; 0x68
   1f3c8:	cmp	r0, #0
   1f3cc:	bne	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f3d0:	mov	r0, r8
   1f3d4:	mov	r1, #99	; 0x63
   1f3d8:	mov	r2, #1
   1f3dc:	mov	r3, #32
   1f3e0:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   1f3e4:	cmp	r0, #0
   1f3e8:	beq	1f3f8 <myhtml_insertion_mode_in_body@@Base+0xed0>
   1f3ec:	mov	r0, r8
   1f3f0:	mov	r1, r6
   1f3f4:	bl	116b0 <myhtml_tree_tags_close_p@plt>
   1f3f8:	mov	r0, r8
   1f3fc:	mov	r1, r6
   1f400:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   1f404:	cmp	r7, #0
   1f408:	streq	r0, [r8, #104]	; 0x68
   1f40c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f410:	ldr	r0, [r8, #128]	; 0x80
   1f414:	ldr	r1, [r0, #4]
   1f418:	cmp	r1, #2
   1f41c:	bcc	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f420:	ldr	r0, [r0]
   1f424:	ldr	r0, [r0, #4]
   1f428:	ldr	r1, [r0, #4]
   1f42c:	cmp	r1, #23
   1f430:	bne	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f434:	ldr	r1, [r0, #8]
   1f438:	cmp	r1, #1
   1f43c:	bne	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f440:	ldr	r1, [r8, #180]	; 0xb4
   1f444:	tst	r1, #2
   1f448:	beq	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f44c:	bl	11ed8 <myhtml_tree_node_remove@plt>
   1f450:	mov	r0, r8
   1f454:	mov	r1, #65	; 0x41
   1f458:	mov	r2, #1
   1f45c:	mov	r3, #1
   1f460:	bl	11b0c <myhtml_tree_open_elements_pop_until@plt>
   1f464:	mov	r0, r8
   1f468:	mov	r1, r6
   1f46c:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   1f470:	mov	r0, #19
   1f474:	b	1f830 <myhtml_insertion_mode_in_body@@Base+0x1308>
   1f478:	mov	r0, r8
   1f47c:	mov	r1, #99	; 0x63
   1f480:	mov	r2, #1
   1f484:	mov	r3, #32
   1f488:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   1f48c:	cmp	r0, #0
   1f490:	beq	1f4a0 <myhtml_insertion_mode_in_body@@Base+0xf78>
   1f494:	mov	r0, r8
   1f498:	mov	r1, r6
   1f49c:	bl	116b0 <myhtml_tree_tags_close_p@plt>
   1f4a0:	mov	r0, r8
   1f4a4:	bl	11854 <myhtml_tree_current_node@plt>
   1f4a8:	mov	r1, #85	; 0x55
   1f4ac:	bl	11c2c <myhtml_is_html_node@plt>
   1f4b0:	cmp	r0, #0
   1f4b4:	beq	1f4c0 <myhtml_insertion_mode_in_body@@Base+0xf98>
   1f4b8:	mov	r0, r8
   1f4bc:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   1f4c0:	mov	r0, r8
   1f4c4:	mov	r1, r6
   1f4c8:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   1f4cc:	mov	r0, r8
   1f4d0:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   1f4d4:	ldr	r0, [r8, #180]	; 0xb4
   1f4d8:	ldr	r1, [r8, #180]	; 0xb4
   1f4dc:	and	r0, r0, #2
   1f4e0:	eor	r0, r1, r0
   1f4e4:	str	r0, [r8, #180]	; 0xb4
   1f4e8:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f4ec:	mov	r0, r8
   1f4f0:	mov	r1, #128	; 0x80
   1f4f4:	mov	r2, #1
   1f4f8:	mov	r3, #0
   1f4fc:	mov	r9, #0
   1f500:	bl	119ec <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1f504:	cmp	r0, #0
   1f508:	bne	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f50c:	ldr	r0, [r8, #128]	; 0x80
   1f510:	ldr	r1, [r0, #4]
   1f514:	cmp	r1, #0
   1f518:	beq	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f51c:	ldr	r0, [r0]
   1f520:	ldr	r4, [r0]
   1f524:	ldr	r0, [r4, #32]
   1f528:	cmp	r0, #0
   1f52c:	beq	1fac8 <myhtml_insertion_mode_in_body@@Base+0x15a0>
   1f530:	ldr	r0, [r8, #8]
   1f534:	mov	r1, r6
   1f538:	bl	118b4 <myhtml_token_node_wait_for_done@plt>
   1f53c:	ldr	r1, [r4, #32]
   1f540:	ldr	r0, [r8, #8]
   1f544:	bl	118b4 <myhtml_token_node_wait_for_done@plt>
   1f548:	ldr	r2, [r4, #32]
   1f54c:	ldr	r0, [r8, #8]
   1f550:	ldr	r3, [r8, #44]	; 0x2c
   1f554:	mov	r1, r6
   1f558:	bl	118cc <myhtml_token_node_attr_copy_with_check@plt>
   1f55c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f560:	mov	r0, #69	; 0x45
   1f564:	mov	r9, #1
   1f568:	str	r0, [r6]
   1f56c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f570:	mov	r0, r8
   1f574:	bl	117ac <myhtml_tree_active_formatting_reconstruction@plt>
   1f578:	mov	r0, r8
   1f57c:	mov	r1, r6
   1f580:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   1f584:	mov	r0, r8
   1f588:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   1f58c:	ldr	r0, [r8, #8]
   1f590:	mov	r1, r6
   1f594:	bl	118b4 <myhtml_token_node_wait_for_done@plt>
   1f598:	ldr	r0, [r8, #8]
   1f59c:	ldr	r2, [pc, #1324]	; 1fad0 <myhtml_insertion_mode_in_body@@Base+0x15a8>
   1f5a0:	mov	r1, #6
   1f5a4:	mov	r3, #4
   1f5a8:	str	r1, [sp, #4]
   1f5ac:	mov	r1, r6
   1f5b0:	add	r2, pc, r2
   1f5b4:	str	r2, [sp]
   1f5b8:	ldr	r2, [pc, #1300]	; 1fad4 <myhtml_insertion_mode_in_body@@Base+0x15ac>
   1f5bc:	add	r2, pc, r2
   1f5c0:	bl	110b0 <myhtml_token_attr_match_case@plt>
   1f5c4:	cmp	r0, #0
   1f5c8:	bne	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f5cc:	b	1f4d4 <myhtml_insertion_mode_in_body@@Base+0xfac>
   1f5d0:	ldr	r0, [r8, #128]	; 0x80
   1f5d4:	ldr	r1, [r8, #180]	; 0xb4
   1f5d8:	ldr	r2, [r8, #180]	; 0xb4
   1f5dc:	and	r1, r1, #2
   1f5e0:	eor	r1, r2, r1
   1f5e4:	str	r1, [r8, #180]	; 0xb4
   1f5e8:	ldr	r4, [r0, #4]
   1f5ec:	cmp	r4, #0
   1f5f0:	beq	1e954 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1f5f4:	ldr	r0, [r0]
   1f5f8:	add	r0, r0, r4, lsl #2
   1f5fc:	ldr	sl, [r0, #-4]
   1f600:	ldr	r0, [r8, #28]
   1f604:	mov	r7, sl
   1f608:	ldr	r1, [r7, #4]!
   1f60c:	bl	11bc0 <myhtml_tag_get_by_id@plt>
   1f610:	mov	r5, r0
   1f614:	mov	r0, sl
   1f618:	mov	r1, #77	; 0x4d
   1f61c:	bl	11c2c <myhtml_is_html_node@plt>
   1f620:	cmp	r0, #0
   1f624:	bne	1fa40 <myhtml_insertion_mode_in_body@@Base+0x1518>
   1f628:	rsb	r4, r4, #2
   1f62c:	ldr	r0, [sl, #8]
   1f630:	add	r1, r5, r0, lsl #2
   1f634:	ldrb	r1, [r1, #16]
   1f638:	tst	r1, #2
   1f63c:	beq	1f658 <myhtml_insertion_mode_in_body@@Base+0x1130>
   1f640:	ldr	r1, [r7]
   1f644:	cmp	r1, #7
   1f648:	cmpne	r1, #99	; 0x63
   1f64c:	bne	1f69c <myhtml_insertion_mode_in_body@@Base+0x1174>
   1f650:	cmp	r0, #1
   1f654:	bne	1e954 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1f658:	cmp	r4, #1
   1f65c:	beq	1e954 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1f660:	ldr	r1, [r8, #128]	; 0x80
   1f664:	ldr	r0, [r8, #28]
   1f668:	ldr	r1, [r1]
   1f66c:	ldr	sl, [r1, -r4, lsl #2]
   1f670:	mov	r7, sl
   1f674:	ldr	r1, [r7, #4]!
   1f678:	bl	11bc0 <myhtml_tag_get_by_id@plt>
   1f67c:	mov	r5, r0
   1f680:	mov	r0, sl
   1f684:	mov	r1, #77	; 0x4d
   1f688:	bl	11c2c <myhtml_is_html_node@plt>
   1f68c:	add	r4, r4, #1
   1f690:	cmp	r0, #0
   1f694:	beq	1f62c <myhtml_insertion_mode_in_body@@Base+0x1104>
   1f698:	b	1fa40 <myhtml_insertion_mode_in_body@@Base+0x1518>
   1f69c:	cmp	r1, #42	; 0x2a
   1f6a0:	beq	1f650 <myhtml_insertion_mode_in_body@@Base+0x1128>
   1f6a4:	b	1e954 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1f6a8:	mov	r0, r8
   1f6ac:	mov	r1, #99	; 0x63
   1f6b0:	mov	r2, #1
   1f6b4:	mov	r3, #32
   1f6b8:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   1f6bc:	cmp	r0, #0
   1f6c0:	beq	1f6d0 <myhtml_insertion_mode_in_body@@Base+0x11a8>
   1f6c4:	mov	r0, r8
   1f6c8:	mov	r1, r6
   1f6cc:	bl	116b0 <myhtml_tree_tags_close_p@plt>
   1f6d0:	mov	r0, r8
   1f6d4:	bl	11854 <myhtml_tree_current_node@plt>
   1f6d8:	mov	r1, #85	; 0x55
   1f6dc:	bl	11c2c <myhtml_is_html_node@plt>
   1f6e0:	cmp	r0, #0
   1f6e4:	beq	1f784 <myhtml_insertion_mode_in_body@@Base+0x125c>
   1f6e8:	mov	r0, r8
   1f6ec:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   1f6f0:	b	1f784 <myhtml_insertion_mode_in_body@@Base+0x125c>
   1f6f4:	mov	r0, r8
   1f6f8:	bl	11854 <myhtml_tree_current_node@plt>
   1f6fc:	mov	r1, #85	; 0x55
   1f700:	bl	11c2c <myhtml_is_html_node@plt>
   1f704:	cmp	r0, #0
   1f708:	beq	1f77c <myhtml_insertion_mode_in_body@@Base+0x1254>
   1f70c:	mov	r0, r8
   1f710:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   1f714:	b	1f77c <myhtml_insertion_mode_in_body@@Base+0x1254>
   1f718:	mov	r0, r8
   1f71c:	bl	117ac <myhtml_tree_active_formatting_reconstruction@plt>
   1f720:	mov	r0, r8
   1f724:	mov	r1, #90	; 0x5a
   1f728:	mov	r2, #1
   1f72c:	mov	r3, #8
   1f730:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   1f734:	cmp	r0, #0
   1f738:	beq	1f754 <myhtml_insertion_mode_in_body@@Base+0x122c>
   1f73c:	mov	r0, r8
   1f740:	mov	r1, r6
   1f744:	mov	r2, #90	; 0x5a
   1f748:	bl	11a64 <myhtml_tree_adoption_agency_algorithm@plt>
   1f74c:	mov	r0, r8
   1f750:	bl	117ac <myhtml_tree_active_formatting_reconstruction@plt>
   1f754:	mov	r0, r8
   1f758:	mov	r1, r6
   1f75c:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   1f760:	mov	r1, r0
   1f764:	mov	r0, r8
   1f768:	bl	11a04 <myhtml_tree_active_formatting_append_with_check@plt>
   1f76c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f770:	ldr	r0, [r8, #180]	; 0xb4
   1f774:	tst	r0, #1
   1f778:	bne	1f79c <myhtml_insertion_mode_in_body@@Base+0x1274>
   1f77c:	mov	r0, r8
   1f780:	bl	117ac <myhtml_tree_active_formatting_reconstruction@plt>
   1f784:	mov	r0, r8
   1f788:	mov	r1, r6
   1f78c:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   1f790:	mov	r0, r9
   1f794:	sub	sp, fp, #28
   1f798:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f79c:	mov	r0, #4
   1f7a0:	str	r0, [r8, #164]	; 0xa4
   1f7a4:	b	1f93c <myhtml_insertion_mode_in_body@@Base+0x1414>
   1f7a8:	mov	r0, r8
   1f7ac:	mov	r1, #99	; 0x63
   1f7b0:	mov	r2, #1
   1f7b4:	mov	r3, #32
   1f7b8:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   1f7bc:	cmp	r0, #0
   1f7c0:	beq	1f7d0 <myhtml_insertion_mode_in_body@@Base+0x12a8>
   1f7c4:	mov	r0, r8
   1f7c8:	mov	r1, r6
   1f7cc:	bl	116b0 <myhtml_tree_tags_close_p@plt>
   1f7d0:	mov	r0, r8
   1f7d4:	mov	r1, r6
   1f7d8:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   1f7dc:	mov	r0, #6
   1f7e0:	str	r0, [r8, #164]	; 0xa4
   1f7e4:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f7e8:	mov	r0, r8
   1f7ec:	bl	117ac <myhtml_tree_active_formatting_reconstruction@plt>
   1f7f0:	mov	r0, r8
   1f7f4:	mov	r1, r6
   1f7f8:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   1f7fc:	ldr	r0, [r8, #168]	; 0xa8
   1f800:	ldr	r1, [r8, #180]	; 0xb4
   1f804:	ldr	r2, [r8, #180]	; 0xb4
   1f808:	and	r1, r1, #2
   1f80c:	cmp	r0, #14
   1f810:	eor	r1, r2, r1
   1f814:	str	r1, [r8, #180]	; 0xb4
   1f818:	bhi	1fac0 <myhtml_insertion_mode_in_body@@Base+0x1598>
   1f81c:	mov	r1, #1
   1f820:	mov	r2, #29952	; 0x7500
   1f824:	tst	r2, r1, lsl r0
   1f828:	beq	1fac0 <myhtml_insertion_mode_in_body@@Base+0x1598>
   1f82c:	mov	r0, #16
   1f830:	str	r0, [r8, #168]	; 0xa8
   1f834:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f838:	mov	r0, r8
   1f83c:	bl	117ac <myhtml_tree_active_formatting_reconstruction@plt>
   1f840:	ldr	r0, [r8, #8]
   1f844:	mov	r1, r6
   1f848:	bl	118b4 <myhtml_token_node_wait_for_done@plt>
   1f84c:	mov	r0, r6
   1f850:	bl	114a0 <myhtml_token_adjust_svg_attributes@plt>
   1f854:	mov	r0, r6
   1f858:	bl	11d04 <myhtml_token_adjust_foreign_attributes@plt>
   1f85c:	mov	r0, r8
   1f860:	mov	r1, r6
   1f864:	bl	11e6c <myhtml_tree_node_insert_foreign_element@plt>
   1f868:	mov	r1, #3
   1f86c:	b	1f980 <myhtml_insertion_mode_in_body@@Base+0x1458>
   1f870:	ldrb	r0, [r8, #176]	; 0xb0
   1f874:	tst	r0, #1
   1f878:	bne	1f8a4 <myhtml_insertion_mode_in_body@@Base+0x137c>
   1f87c:	mov	r0, r8
   1f880:	mov	r1, #99	; 0x63
   1f884:	mov	r2, #1
   1f888:	mov	r3, #32
   1f88c:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   1f890:	cmp	r0, #0
   1f894:	beq	1f8a4 <myhtml_insertion_mode_in_body@@Base+0x137c>
   1f898:	mov	r0, r8
   1f89c:	mov	r1, r6
   1f8a0:	bl	116b0 <myhtml_tree_tags_close_p@plt>
   1f8a4:	mov	r0, r8
   1f8a8:	mov	r1, r6
   1f8ac:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   1f8b0:	mov	r0, #8
   1f8b4:	str	r0, [r8, #168]	; 0xa8
   1f8b8:	b	1f4d4 <myhtml_insertion_mode_in_body@@Base+0xfac>
   1f8bc:	mov	r0, r8
   1f8c0:	mov	r1, r6
   1f8c4:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   1f8c8:	ldr	r0, [r8, #168]	; 0xa8
   1f8cc:	ldr	r1, [r8, #180]	; 0xb4
   1f8d0:	mov	r2, #7
   1f8d4:	orr	r1, r1, #192	; 0xc0
   1f8d8:	str	r1, [r8, #180]	; 0xb4
   1f8dc:	mov	r1, #2
   1f8e0:	str	r1, [r8, #164]	; 0xa4
   1f8e4:	str	r2, [r8, #168]	; 0xa8
   1f8e8:	str	r0, [r8, #172]	; 0xac
   1f8ec:	b	1f4d4 <myhtml_insertion_mode_in_body@@Base+0xfac>
   1f8f0:	mov	r0, r8
   1f8f4:	mov	r1, #99	; 0x63
   1f8f8:	mov	r2, #1
   1f8fc:	mov	r3, #32
   1f900:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   1f904:	cmp	r0, #0
   1f908:	beq	1f918 <myhtml_insertion_mode_in_body@@Base+0x13f0>
   1f90c:	mov	r0, r8
   1f910:	mov	r1, r6
   1f914:	bl	116b0 <myhtml_tree_tags_close_p@plt>
   1f918:	mov	r0, r8
   1f91c:	bl	117ac <myhtml_tree_active_formatting_reconstruction@plt>
   1f920:	mov	r0, #4
   1f924:	str	r0, [r8, #164]	; 0xa4
   1f928:	ldr	r0, [r8, #180]	; 0xb4
   1f92c:	ldr	r1, [r8, #180]	; 0xb4
   1f930:	and	r0, r0, #2
   1f934:	eor	r0, r1, r0
   1f938:	str	r0, [r8, #180]	; 0xb4
   1f93c:	mov	r0, r8
   1f940:	mov	r1, r6
   1f944:	bl	11ff8 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>
   1f948:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f94c:	mov	r0, r8
   1f950:	bl	117ac <myhtml_tree_active_formatting_reconstruction@plt>
   1f954:	ldr	r0, [r8, #8]
   1f958:	mov	r1, r6
   1f95c:	bl	118b4 <myhtml_token_node_wait_for_done@plt>
   1f960:	mov	r0, r6
   1f964:	bl	112a8 <myhtml_token_adjust_mathml_attributes@plt>
   1f968:	mov	r0, r6
   1f96c:	bl	11d04 <myhtml_token_adjust_foreign_attributes@plt>
   1f970:	mov	r0, r8
   1f974:	mov	r1, r6
   1f978:	bl	11e6c <myhtml_tree_node_insert_foreign_element@plt>
   1f97c:	mov	r1, #2
   1f980:	str	r1, [r0, #8]
   1f984:	ldr	r0, [r6, #48]	; 0x30
   1f988:	tst	r0, #2
   1f98c:	beq	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f990:	mov	r0, r8
   1f994:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   1f998:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1f99c:	ldr	r0, [r8, #140]	; 0x8c
   1f9a0:	ldr	r0, [r0, #4]
   1f9a4:	cmp	r0, #0
   1f9a8:	beq	1fa6c <myhtml_insertion_mode_in_body@@Base+0x1544>
   1f9ac:	mov	r0, r8
   1f9b0:	mov	r1, r6
   1f9b4:	sub	sp, fp, #28
   1f9b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f9bc:	b	201a0 <myhtml_insertion_mode_in_template@@Base>
   1f9c0:	mov	r0, r8
   1f9c4:	mov	r1, #36	; 0x24
   1f9c8:	mov	r2, #1
   1f9cc:	bl	118fc <myhtml_tree_generate_implied_end_tags@plt>
   1f9d0:	mov	r0, r8
   1f9d4:	bl	11854 <myhtml_tree_current_node@plt>
   1f9d8:	mov	r1, #36	; 0x24
   1f9dc:	bl	11c2c <myhtml_is_html_node@plt>
   1f9e0:	mov	r0, r8
   1f9e4:	mov	r1, #36	; 0x24
   1f9e8:	b	1fab0 <myhtml_insertion_mode_in_body@@Base+0x1588>
   1f9ec:	ldr	r6, [r8, #104]	; 0x68
   1f9f0:	mov	r9, #0
   1f9f4:	str	r9, [r8, #104]	; 0x68
   1f9f8:	cmp	r6, #0
   1f9fc:	beq	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1fa00:	mov	r0, r6
   1fa04:	mov	r1, #8
   1fa08:	bl	10fe4 <myhtml_tree_element_in_scope_by_node@plt>
   1fa0c:	cmp	r0, #0
   1fa10:	beq	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1fa14:	mov	r0, r8
   1fa18:	mov	r1, #0
   1fa1c:	mov	r2, #0
   1fa20:	mov	r9, #0
   1fa24:	bl	118fc <myhtml_tree_generate_implied_end_tags@plt>
   1fa28:	mov	r0, r8
   1fa2c:	bl	11854 <myhtml_tree_current_node@plt>
   1fa30:	mov	r0, r8
   1fa34:	mov	r1, r6
   1fa38:	bl	11500 <myhtml_tree_open_elements_remove@plt>
   1fa3c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1fa40:	mov	r0, r8
   1fa44:	mov	r1, #77	; 0x4d
   1fa48:	mov	r2, #1
   1fa4c:	bl	118fc <myhtml_tree_generate_implied_end_tags@plt>
   1fa50:	mov	r0, r8
   1fa54:	bl	11854 <myhtml_tree_current_node@plt>
   1fa58:	mov	r1, #77	; 0x4d
   1fa5c:	bl	11c2c <myhtml_is_html_node@plt>
   1fa60:	mov	r0, r8
   1fa64:	mov	r1, #77	; 0x4d
   1fa68:	b	1fab0 <myhtml_insertion_mode_in_body@@Base+0x1588>
   1fa6c:	ldr	r0, [r8, #128]	; 0x80
   1fa70:	mvn	r1, #0
   1fa74:	ldr	r2, [r0, #4]
   1fa78:	add	r1, r1, #1
   1fa7c:	cmp	r1, r2
   1fa80:	bcc	1fa74 <myhtml_insertion_mode_in_body@@Base+0x154c>
   1fa84:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1fa88:	mov	r0, r8
   1fa8c:	mov	r1, #44	; 0x2c
   1fa90:	mov	r2, #1
   1fa94:	bl	118fc <myhtml_tree_generate_implied_end_tags@plt>
   1fa98:	mov	r0, r8
   1fa9c:	bl	11854 <myhtml_tree_current_node@plt>
   1faa0:	mov	r1, #44	; 0x2c
   1faa4:	bl	11c2c <myhtml_is_html_node@plt>
   1faa8:	mov	r0, r8
   1faac:	mov	r1, #44	; 0x2c
   1fab0:	mov	r2, #1
   1fab4:	mov	r3, #0
   1fab8:	bl	11b0c <myhtml_tree_open_elements_pop_until@plt>
   1fabc:	b	1e954 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1fac0:	mov	r0, #15
   1fac4:	b	1f830 <myhtml_insertion_mode_in_body@@Base+0x1308>
   1fac8:	str	r6, [r4, #32]
   1facc:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1fad0:	andeq	fp, sp, pc, asr #14
   1fad4:	ldrdeq	r8, [r1], -pc	; <UNPREDICTABLE>

0001fad8 <myhtml_insertion_mode_in_head@@Base>:
   1fad8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1fadc:	add	fp, sp, #24
   1fae0:	sub	sp, sp, #8
   1fae4:	mov	r5, r0
   1fae8:	mov	r6, r1
   1faec:	ldr	r0, [r1]
   1faf0:	ldr	r1, [r1, #48]	; 0x30
   1faf4:	mov	r4, #0
   1faf8:	tst	r1, #1
   1fafc:	bne	1fb30 <myhtml_insertion_mode_in_head@@Base+0x58>
   1fb00:	cmp	r0, #77	; 0x4d
   1fb04:	bgt	1fb5c <myhtml_insertion_mode_in_head@@Base+0x84>
   1fb08:	cmp	r0, #14
   1fb0c:	ble	1fc28 <myhtml_insertion_mode_in_head@@Base+0x150>
   1fb10:	cmp	r0, #60	; 0x3c
   1fb14:	bgt	1fc44 <myhtml_insertion_mode_in_head@@Base+0x16c>
   1fb18:	sub	r1, r0, #15
   1fb1c:	cmp	r1, #2
   1fb20:	bcc	1fb78 <myhtml_insertion_mode_in_head@@Base+0xa0>
   1fb24:	cmp	r0, #19
   1fb28:	beq	1fb78 <myhtml_insertion_mode_in_head@@Base+0xa0>
   1fb2c:	b	1fd70 <myhtml_insertion_mode_in_head@@Base+0x298>
   1fb30:	cmp	r0, #64	; 0x40
   1fb34:	bgt	1fb90 <myhtml_insertion_mode_in_head@@Base+0xb8>
   1fb38:	sub	r1, r0, #23
   1fb3c:	cmp	r1, #2
   1fb40:	bcc	1fd70 <myhtml_insertion_mode_in_head@@Base+0x298>
   1fb44:	cmp	r0, #61	; 0x3d
   1fb48:	bne	1fd84 <myhtml_insertion_mode_in_head@@Base+0x2ac>
   1fb4c:	mov	r0, r5
   1fb50:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   1fb54:	mov	r0, #5
   1fb58:	b	1fd80 <myhtml_insertion_mode_in_head@@Base+0x2a8>
   1fb5c:	cmp	r0, #111	; 0x6f
   1fb60:	bgt	1fc0c <myhtml_insertion_mode_in_head@@Base+0x134>
   1fb64:	cmp	r0, #91	; 0x5b
   1fb68:	bgt	1fc68 <myhtml_insertion_mode_in_head@@Base+0x190>
   1fb6c:	cmp	r0, #78	; 0x4e
   1fb70:	cmpne	r0, #86	; 0x56
   1fb74:	bne	1fd70 <myhtml_insertion_mode_in_head@@Base+0x298>
   1fb78:	mov	r0, r5
   1fb7c:	mov	r1, r6
   1fb80:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   1fb84:	mov	r0, r5
   1fb88:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   1fb8c:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x2ac>
   1fb90:	cmp	r0, #65	; 0x41
   1fb94:	beq	1fd70 <myhtml_insertion_mode_in_head@@Base+0x298>
   1fb98:	cmp	r0, #128	; 0x80
   1fb9c:	bne	1fd84 <myhtml_insertion_mode_in_head@@Base+0x2ac>
   1fba0:	mov	r0, r5
   1fba4:	mov	r1, #128	; 0x80
   1fba8:	mov	r2, #1
   1fbac:	mov	r3, #0
   1fbb0:	mov	r4, #0
   1fbb4:	bl	11044 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   1fbb8:	cmp	r0, #0
   1fbbc:	beq	1fd84 <myhtml_insertion_mode_in_head@@Base+0x2ac>
   1fbc0:	mov	r0, r5
   1fbc4:	mov	r1, #0
   1fbc8:	mov	r2, #0
   1fbcc:	mov	r4, #0
   1fbd0:	bl	11188 <myhtml_tree_generate_all_implied_end_tags@plt>
   1fbd4:	mov	r0, r5
   1fbd8:	bl	11854 <myhtml_tree_current_node@plt>
   1fbdc:	mov	r0, r5
   1fbe0:	mov	r1, #128	; 0x80
   1fbe4:	mov	r2, #1
   1fbe8:	mov	r3, #0
   1fbec:	bl	11b0c <myhtml_tree_open_elements_pop_until@plt>
   1fbf0:	mov	r0, r5
   1fbf4:	bl	11f38 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   1fbf8:	mov	r0, r5
   1fbfc:	bl	11b84 <myhtml_tree_template_insertion_pop@plt>
   1fc00:	mov	r0, r5
   1fc04:	bl	11944 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   1fc08:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x2ac>
   1fc0c:	cmp	r0, #127	; 0x7f
   1fc10:	bgt	1fc98 <myhtml_insertion_mode_in_head@@Base+0x1c0>
   1fc14:	cmp	r0, #112	; 0x70
   1fc18:	beq	1fcd0 <myhtml_insertion_mode_in_head@@Base+0x1f8>
   1fc1c:	cmp	r0, #120	; 0x78
   1fc20:	beq	1fcbc <myhtml_insertion_mode_in_head@@Base+0x1e4>
   1fc24:	b	1fd70 <myhtml_insertion_mode_in_head@@Base+0x298>
   1fc28:	cmp	r0, #1
   1fc2c:	beq	1fd44 <myhtml_insertion_mode_in_head@@Base+0x26c>
   1fc30:	cmp	r0, #2
   1fc34:	beq	1fd90 <myhtml_insertion_mode_in_head@@Base+0x2b8>
   1fc38:	cmp	r0, #3
   1fc3c:	beq	1fd84 <myhtml_insertion_mode_in_head@@Base+0x2ac>
   1fc40:	b	1fd70 <myhtml_insertion_mode_in_head@@Base+0x298>
   1fc44:	cmp	r0, #61	; 0x3d
   1fc48:	beq	1fd84 <myhtml_insertion_mode_in_head@@Base+0x2ac>
   1fc4c:	cmp	r0, #65	; 0x41
   1fc50:	bne	1fd70 <myhtml_insertion_mode_in_head@@Base+0x298>
   1fc54:	mov	r0, r5
   1fc58:	mov	r1, r6
   1fc5c:	sub	sp, fp, #24
   1fc60:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1fc64:	b	1e528 <myhtml_insertion_mode_in_body@@Base>
   1fc68:	cmp	r0, #92	; 0x5c
   1fc6c:	beq	1fcbc <myhtml_insertion_mode_in_head@@Base+0x1e4>
   1fc70:	cmp	r0, #93	; 0x5d
   1fc74:	bne	1fd70 <myhtml_insertion_mode_in_head@@Base+0x298>
   1fc78:	ldr	r7, [r5, #180]	; 0xb4
   1fc7c:	mov	r0, r5
   1fc80:	mov	r1, r6
   1fc84:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   1fc88:	tst	r7, #1
   1fc8c:	bne	1fcc8 <myhtml_insertion_mode_in_head@@Base+0x1f0>
   1fc90:	mov	r0, #4
   1fc94:	b	1fd80 <myhtml_insertion_mode_in_head@@Base+0x2a8>
   1fc98:	cmp	r0, #128	; 0x80
   1fc9c:	beq	1fda8 <myhtml_insertion_mode_in_head@@Base+0x2d0>
   1fca0:	cmp	r0, #134	; 0x86
   1fca4:	bne	1fd70 <myhtml_insertion_mode_in_head@@Base+0x298>
   1fca8:	mov	r0, r5
   1fcac:	mov	r1, r6
   1fcb0:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   1fcb4:	mov	r0, #2
   1fcb8:	b	1fd2c <myhtml_insertion_mode_in_head@@Base+0x254>
   1fcbc:	mov	r0, r5
   1fcc0:	mov	r1, r6
   1fcc4:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   1fcc8:	mov	r0, #4
   1fccc:	b	1fd2c <myhtml_insertion_mode_in_head@@Base+0x254>
   1fcd0:	add	r2, sp, #4
   1fcd4:	mov	r0, r5
   1fcd8:	mov	r1, #0
   1fcdc:	mov	r4, #0
   1fce0:	bl	11f50 <myhtml_tree_appropriate_place_inserting@plt>
   1fce4:	mov	r8, r0
   1fce8:	mov	r0, r5
   1fcec:	bl	11314 <myhtml_tree_node_create@plt>
   1fcf0:	mov	r7, r0
   1fcf4:	str	r6, [r0, #32]
   1fcf8:	mov	r2, #3
   1fcfc:	mov	r0, #112	; 0x70
   1fd00:	mov	r1, #1
   1fd04:	str	r2, [r7]
   1fd08:	stmib	r7, {r0, r1}
   1fd0c:	mov	r0, r8
   1fd10:	mov	r1, r7
   1fd14:	ldr	r2, [sp, #4]
   1fd18:	bl	115e4 <myhtml_tree_node_insert_by_mode@plt>
   1fd1c:	mov	r0, r5
   1fd20:	mov	r1, r7
   1fd24:	bl	11b48 <myhtml_tree_open_elements_append@plt>
   1fd28:	mov	r0, #5
   1fd2c:	str	r0, [r5, #164]	; 0xa4
   1fd30:	mov	r1, #7
   1fd34:	ldr	r0, [r5, #168]	; 0xa8
   1fd38:	str	r1, [r5, #168]	; 0xa8
   1fd3c:	str	r0, [r5, #172]	; 0xac
   1fd40:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x2ac>
   1fd44:	ldr	r0, [r6, #48]	; 0x30
   1fd48:	tst	r0, #8
   1fd4c:	bne	1fdf0 <myhtml_insertion_mode_in_head@@Base+0x318>
   1fd50:	mov	r0, r5
   1fd54:	mov	r1, r6
   1fd58:	bl	11224 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   1fd5c:	cmp	r0, #0
   1fd60:	beq	1fd70 <myhtml_insertion_mode_in_head@@Base+0x298>
   1fd64:	mov	r1, r0
   1fd68:	mov	r0, r5
   1fd6c:	bl	112c0 <myhtml_tree_node_insert_text@plt>
   1fd70:	mov	r0, r5
   1fd74:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   1fd78:	mov	r0, #5
   1fd7c:	mov	r4, #1
   1fd80:	str	r0, [r5, #168]	; 0xa8
   1fd84:	mov	r0, r4
   1fd88:	sub	sp, fp, #24
   1fd8c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1fd90:	mov	r0, r5
   1fd94:	mov	r1, r6
   1fd98:	mov	r2, #0
   1fd9c:	mov	r4, #0
   1fda0:	bl	11524 <myhtml_tree_node_insert_comment@plt>
   1fda4:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x2ac>
   1fda8:	mov	r0, r5
   1fdac:	mov	r1, r6
   1fdb0:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   1fdb4:	ldr	r0, [r5]
   1fdb8:	ldr	r1, [r0, #36]	; 0x24
   1fdbc:	mov	r0, r5
   1fdc0:	bl	113d4 <myhtml_tree_active_formatting_append@plt>
   1fdc4:	mov	r0, #17
   1fdc8:	str	r0, [r5, #168]	; 0xa8
   1fdcc:	ldr	r0, [r5, #180]	; 0xb4
   1fdd0:	ldr	r1, [r5, #180]	; 0xb4
   1fdd4:	and	r0, r0, #2
   1fdd8:	eor	r0, r1, r0
   1fddc:	mov	r1, #17
   1fde0:	str	r0, [r5, #180]	; 0xb4
   1fde4:	mov	r0, r5
   1fde8:	bl	112e4 <myhtml_tree_template_insertion_append@plt>
   1fdec:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x2ac>
   1fdf0:	mov	r0, r5
   1fdf4:	mov	r1, r6
   1fdf8:	bl	112c0 <myhtml_tree_node_insert_text@plt>
   1fdfc:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x2ac>

0001fe00 <myhtml_insertion_mode_in_head_noscript@@Base>:
   1fe00:	push	{r4, r5, fp, lr}
   1fe04:	add	fp, sp, #8
   1fe08:	mov	r4, r0
   1fe0c:	ldr	r0, [r1]
   1fe10:	ldr	r2, [r1, #48]	; 0x30
   1fe14:	tst	r2, #1
   1fe18:	bne	1fe4c <myhtml_insertion_mode_in_head_noscript@@Base+0x4c>
   1fe1c:	mov	r5, #0
   1fe20:	cmp	r0, #64	; 0x40
   1fe24:	bgt	1fe70 <myhtml_insertion_mode_in_head_noscript@@Base+0x70>
   1fe28:	cmp	r0, #15
   1fe2c:	bgt	1fe94 <myhtml_insertion_mode_in_head_noscript@@Base+0x94>
   1fe30:	cmp	r0, #1
   1fe34:	beq	1fed0 <myhtml_insertion_mode_in_head_noscript@@Base+0xd0>
   1fe38:	cmp	r0, #2
   1fe3c:	beq	1fec4 <myhtml_insertion_mode_in_head_noscript@@Base+0xc4>
   1fe40:	cmp	r0, #3
   1fe44:	beq	1fef0 <myhtml_insertion_mode_in_head_noscript@@Base+0xf0>
   1fe48:	b	1fedc <myhtml_insertion_mode_in_head_noscript@@Base+0xdc>
   1fe4c:	cmp	r0, #24
   1fe50:	beq	1fedc <myhtml_insertion_mode_in_head_noscript@@Base+0xdc>
   1fe54:	mov	r5, #0
   1fe58:	cmp	r0, #93	; 0x5d
   1fe5c:	bne	1fef0 <myhtml_insertion_mode_in_head_noscript@@Base+0xf0>
   1fe60:	mov	r0, r4
   1fe64:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   1fe68:	mov	r0, #3
   1fe6c:	b	1feec <myhtml_insertion_mode_in_head_noscript@@Base+0xec>
   1fe70:	cmp	r0, #91	; 0x5b
   1fe74:	bgt	1feac <myhtml_insertion_mode_in_head_noscript@@Base+0xac>
   1fe78:	cmp	r0, #65	; 0x41
   1fe7c:	beq	1fef8 <myhtml_insertion_mode_in_head_noscript@@Base+0xf8>
   1fe80:	cmp	r0, #78	; 0x4e
   1fe84:	beq	1fec4 <myhtml_insertion_mode_in_head_noscript@@Base+0xc4>
   1fe88:	cmp	r0, #86	; 0x56
   1fe8c:	beq	1fec4 <myhtml_insertion_mode_in_head_noscript@@Base+0xc4>
   1fe90:	b	1fedc <myhtml_insertion_mode_in_head_noscript@@Base+0xdc>
   1fe94:	cmp	r0, #16
   1fe98:	cmpne	r0, #19
   1fe9c:	beq	1fec4 <myhtml_insertion_mode_in_head_noscript@@Base+0xc4>
   1fea0:	cmp	r0, #61	; 0x3d
   1fea4:	beq	1fef0 <myhtml_insertion_mode_in_head_noscript@@Base+0xf0>
   1fea8:	b	1fedc <myhtml_insertion_mode_in_head_noscript@@Base+0xdc>
   1feac:	cmp	r0, #92	; 0x5c
   1feb0:	beq	1fec4 <myhtml_insertion_mode_in_head_noscript@@Base+0xc4>
   1feb4:	cmp	r0, #93	; 0x5d
   1feb8:	beq	1fef0 <myhtml_insertion_mode_in_head_noscript@@Base+0xf0>
   1febc:	cmp	r0, #120	; 0x78
   1fec0:	bne	1fedc <myhtml_insertion_mode_in_head_noscript@@Base+0xdc>
   1fec4:	mov	r0, r4
   1fec8:	pop	{r4, r5, fp, lr}
   1fecc:	b	1fad8 <myhtml_insertion_mode_in_head@@Base>
   1fed0:	ldr	r0, [r1, #48]	; 0x30
   1fed4:	tst	r0, #8
   1fed8:	bne	1fec4 <myhtml_insertion_mode_in_head_noscript@@Base+0xc4>
   1fedc:	mov	r0, r4
   1fee0:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   1fee4:	mov	r0, #3
   1fee8:	mov	r5, #1
   1feec:	str	r0, [r4, #168]	; 0xa8
   1fef0:	mov	r0, r5
   1fef4:	pop	{r4, r5, fp, pc}
   1fef8:	mov	r0, r4
   1fefc:	pop	{r4, r5, fp, lr}
   1ff00:	b	1e528 <myhtml_insertion_mode_in_body@@Base>

0001ff04 <myhtml_insertion_mode_after_head@@Base>:
   1ff04:	push	{r4, r5, r6, sl, fp, lr}
   1ff08:	add	fp, sp, #16
   1ff0c:	mov	r4, r0
   1ff10:	mov	r6, r1
   1ff14:	ldr	r0, [r1]
   1ff18:	ldr	r1, [r1, #48]	; 0x30
   1ff1c:	tst	r1, #1
   1ff20:	bne	1ff54 <myhtml_insertion_mode_after_head@@Base+0x50>
   1ff24:	mov	r5, #0
   1ff28:	cmp	r0, #60	; 0x3c
   1ff2c:	ble	1ff98 <myhtml_insertion_mode_after_head@@Base+0x94>
   1ff30:	cmp	r0, #85	; 0x55
   1ff34:	bgt	1ffc0 <myhtml_insertion_mode_after_head@@Base+0xbc>
   1ff38:	cmp	r0, #61	; 0x3d
   1ff3c:	beq	20010 <myhtml_insertion_mode_after_head@@Base+0x10c>
   1ff40:	cmp	r0, #65	; 0x41
   1ff44:	beq	2006c <myhtml_insertion_mode_after_head@@Base+0x168>
   1ff48:	cmp	r0, #78	; 0x4e
   1ff4c:	beq	1ffec <myhtml_insertion_mode_after_head@@Base+0xe8>
   1ff50:	b	1ff74 <myhtml_insertion_mode_after_head@@Base+0x70>
   1ff54:	sub	r1, r0, #23
   1ff58:	cmp	r1, #2
   1ff5c:	bcc	1ff74 <myhtml_insertion_mode_after_head@@Base+0x70>
   1ff60:	cmp	r0, #128	; 0x80
   1ff64:	beq	20018 <myhtml_insertion_mode_after_head@@Base+0x114>
   1ff68:	mov	r5, #0
   1ff6c:	cmp	r0, #65	; 0x41
   1ff70:	bne	20010 <myhtml_insertion_mode_after_head@@Base+0x10c>
   1ff74:	mov	r0, r4
   1ff78:	mov	r1, #23
   1ff7c:	mov	r2, #1
   1ff80:	mov	r5, #1
   1ff84:	bl	11b30 <myhtml_tree_node_insert@plt>
   1ff88:	mov	r1, #6
   1ff8c:	str	r1, [r4, #168]	; 0xa8
   1ff90:	str	r0, [r4, #100]	; 0x64
   1ff94:	b	20010 <myhtml_insertion_mode_after_head@@Base+0x10c>
   1ff98:	cmp	r0, #14
   1ff9c:	ble	20028 <myhtml_insertion_mode_after_head@@Base+0x124>
   1ffa0:	cmp	r0, #22
   1ffa4:	bgt	20044 <myhtml_insertion_mode_after_head@@Base+0x140>
   1ffa8:	sub	r1, r0, #15
   1ffac:	cmp	r1, #2
   1ffb0:	bcc	1ffec <myhtml_insertion_mode_after_head@@Base+0xe8>
   1ffb4:	cmp	r0, #19
   1ffb8:	beq	1ffec <myhtml_insertion_mode_after_head@@Base+0xe8>
   1ffbc:	b	1ff74 <myhtml_insertion_mode_after_head@@Base+0x70>
   1ffc0:	sub	r1, r0, #112	; 0x70
   1ffc4:	cmp	r1, #22
   1ffc8:	bhi	1ffe0 <myhtml_insertion_mode_after_head@@Base+0xdc>
   1ffcc:	movw	r3, #257	; 0x101
   1ffd0:	mov	r2, #1
   1ffd4:	movt	r3, #65	; 0x41
   1ffd8:	tst	r3, r2, lsl r1
   1ffdc:	bne	1ffec <myhtml_insertion_mode_after_head@@Base+0xe8>
   1ffe0:	cmp	r0, #86	; 0x56
   1ffe4:	cmpne	r0, #92	; 0x5c
   1ffe8:	bne	1ff74 <myhtml_insertion_mode_after_head@@Base+0x70>
   1ffec:	ldr	r1, [r4, #92]	; 0x5c
   1fff0:	mov	r0, r4
   1fff4:	bl	11b48 <myhtml_tree_open_elements_append@plt>
   1fff8:	mov	r0, r4
   1fffc:	mov	r1, r6
   20000:	bl	11380 <myhtml_insertion_mode_in_head@plt>
   20004:	ldr	r1, [r4, #92]	; 0x5c
   20008:	mov	r0, r4
   2000c:	bl	11500 <myhtml_tree_open_elements_remove@plt>
   20010:	mov	r0, r5
   20014:	pop	{r4, r5, r6, sl, fp, pc}
   20018:	mov	r0, r4
   2001c:	mov	r1, r6
   20020:	pop	{r4, r5, r6, sl, fp, lr}
   20024:	b	1fad8 <myhtml_insertion_mode_in_head@@Base>
   20028:	cmp	r0, #1
   2002c:	beq	2007c <myhtml_insertion_mode_after_head@@Base+0x178>
   20030:	cmp	r0, #2
   20034:	beq	200ac <myhtml_insertion_mode_after_head@@Base+0x1a8>
   20038:	cmp	r0, #3
   2003c:	beq	20010 <myhtml_insertion_mode_after_head@@Base+0x10c>
   20040:	b	1ff74 <myhtml_insertion_mode_after_head@@Base+0x70>
   20044:	cmp	r0, #23
   20048:	beq	200c4 <myhtml_insertion_mode_after_head@@Base+0x1c0>
   2004c:	cmp	r0, #54	; 0x36
   20050:	bne	1ff74 <myhtml_insertion_mode_after_head@@Base+0x70>
   20054:	mov	r0, r4
   20058:	mov	r1, r6
   2005c:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   20060:	mov	r0, #19
   20064:	str	r0, [r4, #168]	; 0xa8
   20068:	b	20010 <myhtml_insertion_mode_after_head@@Base+0x10c>
   2006c:	mov	r0, r4
   20070:	mov	r1, r6
   20074:	pop	{r4, r5, r6, sl, fp, lr}
   20078:	b	1e528 <myhtml_insertion_mode_in_body@@Base>
   2007c:	ldr	r0, [r6, #48]	; 0x30
   20080:	tst	r0, #8
   20084:	bne	200f4 <myhtml_insertion_mode_after_head@@Base+0x1f0>
   20088:	mov	r0, r4
   2008c:	mov	r1, r6
   20090:	bl	11224 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   20094:	cmp	r0, #0
   20098:	beq	1ff74 <myhtml_insertion_mode_after_head@@Base+0x70>
   2009c:	mov	r1, r0
   200a0:	mov	r0, r4
   200a4:	bl	112c0 <myhtml_tree_node_insert_text@plt>
   200a8:	b	1ff74 <myhtml_insertion_mode_after_head@@Base+0x70>
   200ac:	mov	r0, r4
   200b0:	mov	r1, r6
   200b4:	mov	r2, #0
   200b8:	mov	r5, #0
   200bc:	bl	11524 <myhtml_tree_node_insert_comment@plt>
   200c0:	b	20010 <myhtml_insertion_mode_after_head@@Base+0x10c>
   200c4:	mov	r0, r4
   200c8:	mov	r1, r6
   200cc:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   200d0:	str	r0, [r4, #100]	; 0x64
   200d4:	mov	r0, #6
   200d8:	str	r0, [r4, #168]	; 0xa8
   200dc:	ldr	r0, [r4, #180]	; 0xb4
   200e0:	ldr	r1, [r4, #180]	; 0xb4
   200e4:	and	r0, r0, #2
   200e8:	eor	r0, r1, r0
   200ec:	str	r0, [r4, #180]	; 0xb4
   200f0:	b	20010 <myhtml_insertion_mode_after_head@@Base+0x10c>
   200f4:	mov	r0, r4
   200f8:	mov	r1, r6
   200fc:	bl	112c0 <myhtml_tree_node_insert_text@plt>
   20100:	b	20010 <myhtml_insertion_mode_after_head@@Base+0x10c>

00020104 <myhtml_insertion_mode_in_body_other_end_tag@@Base>:
   20104:	push	{r4, r5, r6, r7, fp, lr}
   20108:	add	fp, sp, #16
   2010c:	mov	r4, r0
   20110:	ldr	r0, [r0, #128]	; 0x80
   20114:	mov	r5, r1
   20118:	ldr	r0, [r0, #4]
   2011c:	rsb	r7, r0, #1
   20120:	cmp	r7, #1
   20124:	beq	20198 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x94>
   20128:	ldr	r0, [r4, #128]	; 0x80
   2012c:	ldr	r0, [r0]
   20130:	ldr	r6, [r0, -r7, lsl #2]
   20134:	ldr	r0, [r5]
   20138:	ldr	r1, [r6, #4]
   2013c:	cmp	r1, r0
   20140:	bne	20150 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x4c>
   20144:	ldr	r0, [r6, #8]
   20148:	cmp	r0, #1
   2014c:	beq	20174 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x70>
   20150:	ldr	r0, [r4, #28]
   20154:	bl	11bc0 <myhtml_tag_get_by_id@plt>
   20158:	ldr	r1, [r6, #8]
   2015c:	add	r7, r7, #1
   20160:	add	r0, r0, r1, lsl #2
   20164:	ldrb	r0, [r0, #16]
   20168:	tst	r0, #2
   2016c:	beq	20120 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x1c>
   20170:	b	20198 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x94>
   20174:	mov	r0, r4
   20178:	mov	r2, #1
   2017c:	bl	118fc <myhtml_tree_generate_implied_end_tags@plt>
   20180:	mov	r0, r4
   20184:	bl	11854 <myhtml_tree_current_node@plt>
   20188:	mov	r0, r4
   2018c:	mov	r1, r6
   20190:	mov	r2, #0
   20194:	bl	1141c <myhtml_tree_open_elements_pop_until_by_node@plt>
   20198:	mov	r0, #0
   2019c:	pop	{r4, r5, r6, r7, fp, pc}

000201a0 <myhtml_insertion_mode_in_template@@Base>:
   201a0:	push	{r4, r5, fp, lr}
   201a4:	add	fp, sp, #8
   201a8:	mov	r4, r0
   201ac:	ldr	r0, [r1]
   201b0:	ldr	r2, [r1, #48]	; 0x30
   201b4:	tst	r2, #1
   201b8:	bne	201fc <myhtml_insertion_mode_in_template@@Base+0x5c>
   201bc:	cmp	r0, #111	; 0x6f
   201c0:	bgt	20214 <myhtml_insertion_mode_in_template@@Base+0x74>
   201c4:	sub	r2, r0, #15
   201c8:	cmp	r2, #17
   201cc:	bls	202a4 <myhtml_insertion_mode_in_template@@Base+0x104>
   201d0:	sub	r2, r0, #1
   201d4:	cmp	r2, #3
   201d8:	bcc	20208 <myhtml_insertion_mode_in_template@@Base+0x68>
   201dc:	sub	r0, r0, #78	; 0x4e
   201e0:	cmp	r0, #14
   201e4:	bhi	20380 <myhtml_insertion_mode_in_template@@Base+0x1e0>
   201e8:	mov	r2, #1
   201ec:	movw	r3, #16641	; 0x4101
   201f0:	tst	r3, r2, lsl r0
   201f4:	bne	202e8 <myhtml_insertion_mode_in_template@@Base+0x148>
   201f8:	b	20380 <myhtml_insertion_mode_in_template@@Base+0x1e0>
   201fc:	mov	r5, #0
   20200:	cmp	r0, #128	; 0x80
   20204:	bne	202e0 <myhtml_insertion_mode_in_template@@Base+0x140>
   20208:	mov	r0, r4
   2020c:	pop	{r4, r5, fp, lr}
   20210:	b	1e528 <myhtml_insertion_mode_in_body@@Base>
   20214:	sub	r2, r0, #112	; 0x70
   20218:	cmp	r2, #23
   2021c:	bhi	202f4 <myhtml_insertion_mode_in_template@@Base+0x154>
   20220:	add	r0, pc, #4
   20224:	ldr	r2, [r0, r2, lsl #2]
   20228:	add	pc, r0, r2
   2022c:	strheq	r0, [r0], -ip
   20230:	andeq	r0, r0, r4, asr r1
   20234:	andeq	r0, r0, r4, asr r1
   20238:	andeq	r0, r0, r4, asr r1
   2023c:	andeq	r0, r0, r4, asr r1
   20240:	andeq	r0, r0, r4, asr r1
   20244:	andeq	r0, r0, r4, asr r1
   20248:	andeq	r0, r0, r4, asr r1
   2024c:	strheq	r0, [r0], -ip
   20250:	andeq	r0, r0, r4, asr r1
   20254:	andeq	r0, r0, r4, asr r1
   20258:	andeq	r0, r0, r4, asr r1
   2025c:	andeq	r0, r0, r4, asr r1
   20260:	andeq	r0, r0, r4, asr r1
   20264:	muleq	r0, r4, r0
   20268:	andeq	r0, r0, r0, rrx
   2026c:	strheq	r0, [r0], -ip
   20270:	andeq	r0, r0, r4, asr r1
   20274:	muleq	r0, r4, r0
   20278:	andeq	r0, r0, r0, rrx
   2027c:	muleq	r0, r4, r0
   20280:	andeq	r0, r0, r4, asr r1
   20284:	strheq	r0, [r0], -ip
   20288:	andeq	r0, r0, ip, lsr r1
   2028c:	mov	r0, r4
   20290:	bl	11b84 <myhtml_tree_template_insertion_pop@plt>
   20294:	mov	r5, #13
   20298:	mov	r0, r4
   2029c:	mov	r1, #13
   202a0:	b	202d4 <myhtml_insertion_mode_in_template@@Base+0x134>
   202a4:	mov	r3, #1
   202a8:	mov	r5, #19
   202ac:	tst	r5, r3, lsl r2
   202b0:	bne	202e8 <myhtml_insertion_mode_in_template@@Base+0x148>
   202b4:	mov	r5, #135168	; 0x21000
   202b8:	tst	r5, r3, lsl r2
   202bc:	beq	20348 <myhtml_insertion_mode_in_template@@Base+0x1a8>
   202c0:	mov	r0, r4
   202c4:	bl	11b84 <myhtml_tree_template_insertion_pop@plt>
   202c8:	mov	r5, #8
   202cc:	mov	r0, r4
   202d0:	mov	r1, #8
   202d4:	bl	112e4 <myhtml_tree_template_insertion_append@plt>
   202d8:	str	r5, [r4, #168]	; 0xa8
   202dc:	mov	r5, #1
   202e0:	mov	r0, r5
   202e4:	pop	{r4, r5, fp, pc}
   202e8:	mov	r0, r4
   202ec:	pop	{r4, r5, fp, lr}
   202f0:	b	1fad8 <myhtml_insertion_mode_in_head@@Base>
   202f4:	cmp	r0, #251	; 0xfb
   202f8:	bne	20380 <myhtml_insertion_mode_in_template@@Base+0x1e0>
   202fc:	mov	r0, r4
   20300:	mov	r1, #128	; 0x80
   20304:	mov	r2, #1
   20308:	mov	r3, #0
   2030c:	mov	r5, #0
   20310:	bl	119ec <myhtml_tree_open_elements_find_by_tag_idx@plt>
   20314:	cmp	r0, #0
   20318:	beq	202e0 <myhtml_insertion_mode_in_template@@Base+0x140>
   2031c:	mov	r1, r0
   20320:	mov	r0, r4
   20324:	mov	r2, #0
   20328:	bl	1141c <myhtml_tree_open_elements_pop_until_by_node@plt>
   2032c:	mov	r0, r4
   20330:	bl	11f38 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   20334:	mov	r0, r4
   20338:	bl	11b84 <myhtml_tree_template_insertion_pop@plt>
   2033c:	mov	r0, r4
   20340:	bl	11944 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   20344:	b	202dc <myhtml_insertion_mode_in_template@@Base+0x13c>
   20348:	cmp	r2, #16
   2034c:	bne	201d0 <myhtml_insertion_mode_in_template@@Base+0x30>
   20350:	mov	r0, r4
   20354:	bl	11b84 <myhtml_tree_template_insertion_pop@plt>
   20358:	mov	r5, #11
   2035c:	mov	r0, r4
   20360:	mov	r1, #11
   20364:	b	202d4 <myhtml_insertion_mode_in_template@@Base+0x134>
   20368:	mov	r0, r4
   2036c:	bl	11b84 <myhtml_tree_template_insertion_pop@plt>
   20370:	mov	r5, #12
   20374:	mov	r0, r4
   20378:	mov	r1, #12
   2037c:	b	202d4 <myhtml_insertion_mode_in_template@@Base+0x134>
   20380:	mov	r0, r4
   20384:	bl	11b84 <myhtml_tree_template_insertion_pop@plt>
   20388:	mov	r5, #6
   2038c:	mov	r0, r4
   20390:	mov	r1, #6
   20394:	b	202d4 <myhtml_insertion_mode_in_template@@Base+0x134>

00020398 <myhtml_rules_stop_parsing@@Base>:
   20398:	bx	lr

0002039c <myhtml_insertion_mode_text@@Base>:
   2039c:	push	{r4, sl, fp, lr}
   203a0:	add	fp, sp, #8
   203a4:	mov	r4, r0
   203a8:	ldr	r0, [r1, #48]	; 0x30
   203ac:	tst	r0, #1
   203b0:	bne	203f8 <myhtml_insertion_mode_text@@Base+0x5c>
   203b4:	ldr	r0, [r1]
   203b8:	cmp	r0, #251	; 0xfb
   203bc:	bne	2040c <myhtml_insertion_mode_text@@Base+0x70>
   203c0:	mov	r0, r4
   203c4:	bl	11854 <myhtml_tree_current_node@plt>
   203c8:	ldr	r1, [r0, #4]
   203cc:	cmp	r1, #112	; 0x70
   203d0:	bne	203e0 <myhtml_insertion_mode_text@@Base+0x44>
   203d4:	ldr	r1, [r0]
   203d8:	orr	r1, r1, #8
   203dc:	str	r1, [r0]
   203e0:	mov	r0, r4
   203e4:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   203e8:	ldr	r0, [r4, #172]	; 0xac
   203ec:	str	r0, [r4, #168]	; 0xa8
   203f0:	mov	r0, #1
   203f4:	pop	{r4, sl, fp, pc}
   203f8:	mov	r0, r4
   203fc:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   20400:	ldr	r0, [r4, #172]	; 0xac
   20404:	str	r0, [r4, #168]	; 0xa8
   20408:	b	20414 <myhtml_insertion_mode_text@@Base+0x78>
   2040c:	mov	r0, r4
   20410:	bl	112c0 <myhtml_tree_node_insert_text@plt>
   20414:	mov	r0, #0
   20418:	pop	{r4, sl, fp, pc}

0002041c <myhtml_insertion_mode_in_table@@Base>:
   2041c:	push	{r4, r5, r6, sl, fp, lr}
   20420:	add	fp, sp, #16
   20424:	sub	sp, sp, #8
   20428:	mov	r4, r0
   2042c:	mov	r6, r1
   20430:	ldr	r0, [r1]
   20434:	ldr	r1, [r1, #48]	; 0x30
   20438:	tst	r1, #1
   2043c:	bne	204dc <myhtml_insertion_mode_in_table@@Base+0xc0>
   20440:	mov	r5, #0
   20444:	cmp	r0, #69	; 0x45
   20448:	ble	20548 <myhtml_insertion_mode_in_table@@Base+0x12c>
   2044c:	sub	r1, r0, #112	; 0x70
   20450:	cmp	r1, #23
   20454:	bhi	20618 <myhtml_insertion_mode_in_table@@Base+0x1fc>
   20458:	add	r0, pc, #4
   2045c:	ldr	r1, [r0, r1, lsl #2]
   20460:	add	pc, r0, r1
   20464:	andeq	r0, r0, r8, lsr #1
   20468:	andeq	r0, r0, r0, ror r3
   2046c:	andeq	r0, r0, r0, ror r3
   20470:	andeq	r0, r0, r0, ror r3
   20474:	andeq	r0, r0, r0, ror r3
   20478:	andeq	r0, r0, r0, ror r3
   2047c:	andeq	r0, r0, r0, ror r3
   20480:	andeq	r0, r0, r0, ror r3
   20484:	andeq	r0, r0, r8, lsr #1
   20488:	andeq	r0, r0, r0, ror r3
   2048c:	andeq	r0, r0, r0, ror r3
   20490:	andeq	r0, r0, r0, ror r3
   20494:	andeq	r0, r0, r0, ror r3
   20498:	andeq	r0, r0, ip, asr #5
   2049c:	andeq	r0, r0, r0, rrx
   204a0:	andeq	r0, r0, r0, asr #2
   204a4:	andeq	r0, r0, r8, lsr #1
   204a8:	andeq	r0, r0, r0, ror r3
   204ac:	andeq	r0, r0, r0, rrx
   204b0:	andeq	r0, r0, r0, asr #2
   204b4:	andeq	r0, r0, r0, rrx
   204b8:	andeq	r0, r0, r0, ror r3
   204bc:	andeq	r0, r0, r0, ror r3
   204c0:	andeq	r0, r0, r0, asr #2
   204c4:	mov	r0, r4
   204c8:	bl	12064 <myhtml_tree_clear_stack_back_table_context@plt>
   204cc:	mov	r0, r4
   204d0:	mov	r1, r6
   204d4:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   204d8:	b	205c0 <myhtml_insertion_mode_in_table@@Base+0x1a4>
   204dc:	sub	r1, r0, #125	; 0x7d
   204e0:	mov	r5, #0
   204e4:	cmp	r1, #10
   204e8:	bhi	20520 <myhtml_insertion_mode_in_table@@Base+0x104>
   204ec:	mov	r2, #1
   204f0:	movw	r3, #1254	; 0x4e6
   204f4:	tst	r3, r2, lsl r1
   204f8:	bne	207f0 <myhtml_insertion_mode_in_table@@Base+0x3d4>
   204fc:	cmp	r1, #0
   20500:	beq	2063c <myhtml_insertion_mode_in_table@@Base+0x220>
   20504:	cmp	r1, #3
   20508:	bne	20520 <myhtml_insertion_mode_in_table@@Base+0x104>
   2050c:	mov	r0, r4
   20510:	mov	r1, r6
   20514:	sub	sp, fp, #16
   20518:	pop	{r4, r5, r6, sl, fp, lr}
   2051c:	b	1fad8 <myhtml_insertion_mode_in_head@@Base>
   20520:	sub	r1, r0, #23
   20524:	cmp	r1, #9
   20528:	bhi	2053c <myhtml_insertion_mode_in_table@@Base+0x120>
   2052c:	mov	r2, #1
   20530:	movw	r3, #785	; 0x311
   20534:	tst	r3, r2, lsl r1
   20538:	bne	207f0 <myhtml_insertion_mode_in_table@@Base+0x3d4>
   2053c:	cmp	r0, #65	; 0x41
   20540:	bne	207d4 <myhtml_insertion_mode_in_table@@Base+0x3b8>
   20544:	b	207f0 <myhtml_insertion_mode_in_table@@Base+0x3d4>
   20548:	cmp	r0, #26
   2054c:	ble	20588 <myhtml_insertion_mode_in_table@@Base+0x16c>
   20550:	cmp	r0, #31
   20554:	bgt	205c8 <myhtml_insertion_mode_in_table@@Base+0x1ac>
   20558:	cmp	r0, #27
   2055c:	beq	20678 <myhtml_insertion_mode_in_table@@Base+0x25c>
   20560:	cmp	r0, #31
   20564:	bne	207d4 <myhtml_insertion_mode_in_table@@Base+0x3b8>
   20568:	mov	r0, r4
   2056c:	bl	12064 <myhtml_tree_clear_stack_back_table_context@plt>
   20570:	mov	r0, r4
   20574:	mov	r1, #32
   20578:	mov	r2, #1
   2057c:	mov	r5, #1
   20580:	bl	11b30 <myhtml_tree_node_insert@plt>
   20584:	b	20724 <myhtml_insertion_mode_in_table@@Base+0x308>
   20588:	cmp	r0, #1
   2058c:	beq	206a4 <myhtml_insertion_mode_in_table@@Base+0x288>
   20590:	cmp	r0, #2
   20594:	beq	206f8 <myhtml_insertion_mode_in_table@@Base+0x2dc>
   20598:	cmp	r0, #3
   2059c:	beq	207f0 <myhtml_insertion_mode_in_table@@Base+0x3d4>
   205a0:	b	207d4 <myhtml_insertion_mode_in_table@@Base+0x3b8>
   205a4:	mov	r0, r4
   205a8:	bl	12064 <myhtml_tree_clear_stack_back_table_context@plt>
   205ac:	mov	r0, r4
   205b0:	mov	r1, #126	; 0x7e
   205b4:	mov	r2, #1
   205b8:	mov	r5, #1
   205bc:	bl	11b30 <myhtml_tree_node_insert@plt>
   205c0:	mov	r0, #12
   205c4:	b	20728 <myhtml_insertion_mode_in_table@@Base+0x30c>
   205c8:	cmp	r0, #32
   205cc:	beq	20710 <myhtml_insertion_mode_in_table@@Base+0x2f4>
   205d0:	cmp	r0, #52	; 0x34
   205d4:	bne	207d4 <myhtml_insertion_mode_in_table@@Base+0x3b8>
   205d8:	mov	r0, r4
   205dc:	mov	r1, #128	; 0x80
   205e0:	mov	r2, #1
   205e4:	mov	r3, #0
   205e8:	mov	r5, #0
   205ec:	bl	119ec <myhtml_tree_open_elements_find_by_tag_idx@plt>
   205f0:	ldr	r1, [r4, #104]	; 0x68
   205f4:	orrs	r0, r0, r1
   205f8:	bne	207f0 <myhtml_insertion_mode_in_table@@Base+0x3d4>
   205fc:	mov	r0, r4
   20600:	mov	r1, r6
   20604:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   20608:	str	r0, [r4, #104]	; 0x68
   2060c:	mov	r0, r4
   20610:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   20614:	b	20628 <myhtml_insertion_mode_in_table@@Base+0x20c>
   20618:	cmp	r0, #70	; 0x46
   2061c:	beq	20770 <myhtml_insertion_mode_in_table@@Base+0x354>
   20620:	cmp	r0, #251	; 0xfb
   20624:	bne	207d4 <myhtml_insertion_mode_in_table@@Base+0x3b8>
   20628:	mov	r0, r4
   2062c:	mov	r1, r6
   20630:	sub	sp, fp, #16
   20634:	pop	{r4, r5, r6, sl, fp, lr}
   20638:	b	1e528 <myhtml_insertion_mode_in_body@@Base>
   2063c:	mov	r0, r4
   20640:	mov	r1, #125	; 0x7d
   20644:	mov	r2, #1
   20648:	mov	r3, #64	; 0x40
   2064c:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   20650:	cmp	r0, #0
   20654:	beq	207f0 <myhtml_insertion_mode_in_table@@Base+0x3d4>
   20658:	mov	r1, r0
   2065c:	mov	r0, r4
   20660:	mov	r2, #0
   20664:	mov	r5, #0
   20668:	bl	1141c <myhtml_tree_open_elements_pop_until_by_node@plt>
   2066c:	mov	r0, r4
   20670:	bl	11944 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   20674:	b	207f0 <myhtml_insertion_mode_in_table@@Base+0x3d4>
   20678:	mov	r0, r4
   2067c:	bl	12064 <myhtml_tree_clear_stack_back_table_context@plt>
   20680:	mov	r0, r4
   20684:	mov	r1, r6
   20688:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   2068c:	ldr	r0, [r4]
   20690:	ldr	r1, [r0, #36]	; 0x24
   20694:	mov	r0, r4
   20698:	bl	113d4 <myhtml_tree_active_formatting_append@plt>
   2069c:	mov	r0, #10
   206a0:	b	20728 <myhtml_insertion_mode_in_table@@Base+0x30c>
   206a4:	mov	r0, r4
   206a8:	bl	11854 <myhtml_tree_current_node@plt>
   206ac:	ldr	r1, [r0, #4]
   206b0:	sub	r1, r1, #125	; 0x7d
   206b4:	cmp	r1, #10
   206b8:	bhi	207d4 <myhtml_insertion_mode_in_table@@Base+0x3b8>
   206bc:	mov	r2, #1
   206c0:	movw	r3, #1187	; 0x4a3
   206c4:	tst	r3, r2, lsl r1
   206c8:	beq	207d4 <myhtml_insertion_mode_in_table@@Base+0x3b8>
   206cc:	ldr	r0, [r0, #8]
   206d0:	cmp	r0, #1
   206d4:	bne	207d4 <myhtml_insertion_mode_in_table@@Base+0x3b8>
   206d8:	ldr	r0, [r4, #136]	; 0x88
   206dc:	bl	1207c <myhtml_tree_token_list_clean@plt>
   206e0:	ldr	r0, [r4, #168]	; 0xa8
   206e4:	mov	r1, #9
   206e8:	mov	r5, #1
   206ec:	str	r1, [r4, #168]	; 0xa8
   206f0:	str	r0, [r4, #172]	; 0xac
   206f4:	b	207f0 <myhtml_insertion_mode_in_table@@Base+0x3d4>
   206f8:	mov	r0, r4
   206fc:	mov	r1, r6
   20700:	mov	r2, #0
   20704:	mov	r5, #0
   20708:	bl	11524 <myhtml_tree_node_insert_comment@plt>
   2070c:	b	207f0 <myhtml_insertion_mode_in_table@@Base+0x3d4>
   20710:	mov	r0, r4
   20714:	bl	12064 <myhtml_tree_clear_stack_back_table_context@plt>
   20718:	mov	r0, r4
   2071c:	mov	r1, r6
   20720:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   20724:	mov	r0, #11
   20728:	str	r0, [r4, #168]	; 0xa8
   2072c:	b	207f0 <myhtml_insertion_mode_in_table@@Base+0x3d4>
   20730:	mov	r0, r4
   20734:	mov	r1, #125	; 0x7d
   20738:	mov	r2, #1
   2073c:	mov	r3, #64	; 0x40
   20740:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   20744:	cmp	r0, #0
   20748:	beq	207f0 <myhtml_insertion_mode_in_table@@Base+0x3d4>
   2074c:	mov	r0, r4
   20750:	mov	r1, #125	; 0x7d
   20754:	mov	r2, #1
   20758:	mov	r3, #0
   2075c:	bl	11b0c <myhtml_tree_open_elements_pop_until@plt>
   20760:	mov	r0, r4
   20764:	bl	11944 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   20768:	mov	r5, #1
   2076c:	b	207f0 <myhtml_insertion_mode_in_table@@Base+0x3d4>
   20770:	ldr	r0, [r4, #8]
   20774:	mov	r1, r6
   20778:	bl	118b4 <myhtml_token_node_wait_for_done@plt>
   2077c:	ldr	r0, [r4, #8]
   20780:	ldr	r2, [pc, #116]	; 207fc <myhtml_insertion_mode_in_table@@Base+0x3e0>
   20784:	mov	r1, #6
   20788:	mov	r3, #4
   2078c:	str	r1, [sp, #4]
   20790:	mov	r1, r6
   20794:	add	r2, pc, r2
   20798:	str	r2, [sp]
   2079c:	ldr	r2, [pc, #92]	; 20800 <myhtml_insertion_mode_in_table@@Base+0x3e4>
   207a0:	add	r2, pc, r2
   207a4:	bl	110b0 <myhtml_token_attr_match_case@plt>
   207a8:	cmp	r0, #0
   207ac:	beq	207d4 <myhtml_insertion_mode_in_table@@Base+0x3b8>
   207b0:	mov	r0, r4
   207b4:	mov	r1, r6
   207b8:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   207bc:	mov	r0, r4
   207c0:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   207c4:	ldr	r0, [r6, #48]	; 0x30
   207c8:	orr	r0, r0, #2
   207cc:	str	r0, [r6, #48]	; 0x30
   207d0:	b	207f0 <myhtml_insertion_mode_in_table@@Base+0x3d4>
   207d4:	mov	r0, #1
   207d8:	mov	r1, r6
   207dc:	strb	r0, [r4, #188]	; 0xbc
   207e0:	mov	r0, r4
   207e4:	bl	1186c <myhtml_insertion_mode_in_body@plt>
   207e8:	mov	r5, #0
   207ec:	strb	r5, [r4, #188]	; 0xbc
   207f0:	mov	r0, r5
   207f4:	sub	sp, fp, #16
   207f8:	pop	{r4, r5, r6, sl, fp, pc}
   207fc:	andeq	sl, sp, fp, ror #10
   20800:	strdeq	r7, [r1], -fp

00020804 <myhtml_insertion_mode_in_table_text@@Base>:
   20804:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   20808:	add	fp, sp, #24
   2080c:	mov	r4, r0
   20810:	ldr	r0, [r1]
   20814:	cmp	r0, #1
   20818:	bne	20840 <myhtml_insertion_mode_in_table_text@@Base+0x3c>
   2081c:	ldr	r0, [r1, #48]	; 0x30
   20820:	mov	r5, r1
   20824:	tst	r0, #2048	; 0x800
   20828:	bne	2089c <myhtml_insertion_mode_in_table_text@@Base+0x98>
   2082c:	ldr	r0, [r4, #136]	; 0x88
   20830:	mov	r1, r5
   20834:	bl	11f98 <myhtml_tree_token_list_append@plt>
   20838:	mov	r6, #0
   2083c:	b	20928 <myhtml_insertion_mode_in_table_text@@Base+0x124>
   20840:	ldr	r5, [r4, #136]	; 0x88
   20844:	ldr	r0, [r5, #4]
   20848:	cmp	r0, #0
   2084c:	beq	2091c <myhtml_insertion_mode_in_table_text@@Base+0x118>
   20850:	ldr	r1, [r5]
   20854:	mov	r2, #0
   20858:	ldr	r3, [r1, r2, lsl #2]
   2085c:	ldr	r3, [r3, #48]	; 0x30
   20860:	tst	r3, #8
   20864:	beq	208c8 <myhtml_insertion_mode_in_table_text@@Base+0xc4>
   20868:	add	r2, r2, #1
   2086c:	cmp	r2, r0
   20870:	bcc	20858 <myhtml_insertion_mode_in_table_text@@Base+0x54>
   20874:	mov	r6, #0
   20878:	ldr	r0, [r5]
   2087c:	ldr	r1, [r0, r6, lsl #2]
   20880:	mov	r0, r4
   20884:	bl	112c0 <myhtml_tree_node_insert_text@plt>
   20888:	ldr	r0, [r5, #4]
   2088c:	add	r6, r6, #1
   20890:	cmp	r6, r0
   20894:	bcc	20878 <myhtml_insertion_mode_in_table_text@@Base+0x74>
   20898:	b	2091c <myhtml_insertion_mode_in_table_text@@Base+0x118>
   2089c:	mov	r0, r4
   208a0:	mov	r1, r5
   208a4:	bl	119bc <myhtml_insertion_fix_for_null_char_drop_all@plt>
   208a8:	ldr	r0, [r5, #12]
   208ac:	mov	r6, #0
   208b0:	cmp	r0, #0
   208b4:	beq	20928 <myhtml_insertion_mode_in_table_text@@Base+0x124>
   208b8:	ldr	r0, [r4, #136]	; 0x88
   208bc:	mov	r1, r5
   208c0:	bl	11f98 <myhtml_tree_token_list_append@plt>
   208c4:	b	20928 <myhtml_insertion_mode_in_table_text@@Base+0x124>
   208c8:	mov	r8, #1
   208cc:	mov	r0, r4
   208d0:	strb	r8, [r4, #188]	; 0xbc
   208d4:	ldr	r1, [r1]
   208d8:	bl	1186c <myhtml_insertion_mode_in_body@plt>
   208dc:	mov	r7, #0
   208e0:	strb	r7, [r4, #188]	; 0xbc
   208e4:	ldr	r0, [r5, #4]
   208e8:	cmp	r0, #2
   208ec:	bcc	2091c <myhtml_insertion_mode_in_table_text@@Base+0x118>
   208f0:	mov	r6, #1
   208f4:	ldr	r0, [r5]
   208f8:	strb	r8, [r4, #188]	; 0xbc
   208fc:	ldr	r1, [r0, r6, lsl #2]
   20900:	mov	r0, r4
   20904:	bl	1186c <myhtml_insertion_mode_in_body@plt>
   20908:	strb	r7, [r4, #188]	; 0xbc
   2090c:	add	r6, r6, #1
   20910:	ldr	r0, [r5, #4]
   20914:	cmp	r6, r0
   20918:	bcc	208f4 <myhtml_insertion_mode_in_table_text@@Base+0xf0>
   2091c:	ldr	r0, [r4, #172]	; 0xac
   20920:	mov	r6, #1
   20924:	str	r0, [r4, #168]	; 0xa8
   20928:	mov	r0, r6
   2092c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00020930 <myhtml_insertion_mode_in_caption@@Base>:
   20930:	push	{r4, r5, fp, lr}
   20934:	add	fp, sp, #8
   20938:	mov	r4, r0
   2093c:	ldr	r0, [r1]
   20940:	ldr	r2, [r1, #48]	; 0x30
   20944:	tst	r2, #1
   20948:	bne	209ec <myhtml_insertion_mode_in_caption@@Base+0xbc>
   2094c:	sub	r2, r0, #126	; 0x7e
   20950:	cmp	r2, #9
   20954:	bhi	20968 <myhtml_insertion_mode_in_caption@@Base+0x38>
   20958:	mov	r3, #1
   2095c:	movw	r5, #627	; 0x273
   20960:	tst	r5, r3, lsl r2
   20964:	bne	20984 <myhtml_insertion_mode_in_caption@@Base+0x54>
   20968:	sub	r0, r0, #27
   2096c:	cmp	r0, #5
   20970:	bhi	20ad4 <myhtml_insertion_mode_in_caption@@Base+0x1a4>
   20974:	mov	r2, #1
   20978:	mov	r3, #49	; 0x31
   2097c:	tst	r3, r2, lsl r0
   20980:	beq	20ad4 <myhtml_insertion_mode_in_caption@@Base+0x1a4>
   20984:	mov	r0, r4
   20988:	mov	r1, #27
   2098c:	mov	r2, #1
   20990:	mov	r3, #64	; 0x40
   20994:	mov	r5, #1
   20998:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   2099c:	cmp	r0, #0
   209a0:	beq	20ac0 <myhtml_insertion_mode_in_caption@@Base+0x190>
   209a4:	mov	r0, r4
   209a8:	mov	r1, #0
   209ac:	mov	r2, #0
   209b0:	bl	118fc <myhtml_tree_generate_implied_end_tags@plt>
   209b4:	mov	r0, r4
   209b8:	bl	11854 <myhtml_tree_current_node@plt>
   209bc:	mov	r1, #27
   209c0:	bl	11c2c <myhtml_is_html_node@plt>
   209c4:	mov	r0, r4
   209c8:	mov	r1, #27
   209cc:	mov	r2, #1
   209d0:	mov	r3, #0
   209d4:	bl	11b0c <myhtml_tree_open_elements_pop_until@plt>
   209d8:	mov	r0, r4
   209dc:	bl	11f38 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   209e0:	mov	r0, #8
   209e4:	str	r0, [r4, #168]	; 0xa8
   209e8:	b	20ac4 <myhtml_insertion_mode_in_caption@@Base+0x194>
   209ec:	mov	r5, #0
   209f0:	cmp	r0, #64	; 0x40
   209f4:	ble	20a80 <myhtml_insertion_mode_in_caption@@Base+0x150>
   209f8:	sub	r2, r0, #125	; 0x7d
   209fc:	cmp	r2, #10
   20a00:	bhi	20acc <myhtml_insertion_mode_in_caption@@Base+0x19c>
   20a04:	mov	ip, #1
   20a08:	movw	r3, #1254	; 0x4e6
   20a0c:	tst	r3, ip, lsl r2
   20a10:	bne	20ac4 <myhtml_insertion_mode_in_caption@@Base+0x194>
   20a14:	cmp	r2, #0
   20a18:	bne	20acc <myhtml_insertion_mode_in_caption@@Base+0x19c>
   20a1c:	mov	r0, r4
   20a20:	mov	r1, #27
   20a24:	mov	r2, #1
   20a28:	mov	r3, #64	; 0x40
   20a2c:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   20a30:	cmp	r0, #0
   20a34:	beq	20ac4 <myhtml_insertion_mode_in_caption@@Base+0x194>
   20a38:	mov	r0, r4
   20a3c:	mov	r1, #0
   20a40:	mov	r2, #0
   20a44:	bl	118fc <myhtml_tree_generate_implied_end_tags@plt>
   20a48:	mov	r0, r4
   20a4c:	bl	11854 <myhtml_tree_current_node@plt>
   20a50:	mov	r1, #27
   20a54:	bl	11c2c <myhtml_is_html_node@plt>
   20a58:	mov	r0, r4
   20a5c:	mov	r1, #27
   20a60:	mov	r2, #1
   20a64:	mov	r3, #0
   20a68:	bl	11b0c <myhtml_tree_open_elements_pop_until@plt>
   20a6c:	mov	r0, r4
   20a70:	bl	11f38 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   20a74:	mov	r0, #8
   20a78:	mov	r5, #1
   20a7c:	b	209e4 <myhtml_insertion_mode_in_caption@@Base+0xb4>
   20a80:	sub	r2, r0, #31
   20a84:	cmp	r2, #2
   20a88:	bcc	20ac4 <myhtml_insertion_mode_in_caption@@Base+0x194>
   20a8c:	cmp	r0, #23
   20a90:	beq	20ac4 <myhtml_insertion_mode_in_caption@@Base+0x194>
   20a94:	cmp	r0, #27
   20a98:	bne	20ad4 <myhtml_insertion_mode_in_caption@@Base+0x1a4>
   20a9c:	mov	r0, r4
   20aa0:	mov	r1, #27
   20aa4:	mov	r2, #1
   20aa8:	mov	r3, #64	; 0x40
   20aac:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   20ab0:	cmp	r0, #0
   20ab4:	beq	20ac4 <myhtml_insertion_mode_in_caption@@Base+0x194>
   20ab8:	mov	r5, #0
   20abc:	b	209a4 <myhtml_insertion_mode_in_caption@@Base+0x74>
   20ac0:	mov	r5, #0
   20ac4:	mov	r0, r5
   20ac8:	pop	{r4, r5, fp, pc}
   20acc:	cmp	r0, #65	; 0x41
   20ad0:	beq	20ac4 <myhtml_insertion_mode_in_caption@@Base+0x194>
   20ad4:	mov	r0, r4
   20ad8:	pop	{r4, r5, fp, lr}
   20adc:	b	1e528 <myhtml_insertion_mode_in_body@@Base>

00020ae0 <myhtml_insertion_mode_in_column_group@@Base>:
   20ae0:	push	{r4, r5, fp, lr}
   20ae4:	add	fp, sp, #8
   20ae8:	mov	r5, r0
   20aec:	ldr	r0, [r1]
   20af0:	ldr	r2, [r1, #48]	; 0x30
   20af4:	mov	r4, #0
   20af8:	tst	r2, #1
   20afc:	bne	20b24 <myhtml_insertion_mode_in_column_group@@Base+0x44>
   20b00:	cmp	r0, #30
   20b04:	ble	20b6c <myhtml_insertion_mode_in_column_group@@Base+0x8c>
   20b08:	cmp	r0, #127	; 0x7f
   20b0c:	bgt	20b88 <myhtml_insertion_mode_in_column_group@@Base+0xa8>
   20b10:	cmp	r0, #31
   20b14:	beq	20bb0 <myhtml_insertion_mode_in_column_group@@Base+0xd0>
   20b18:	cmp	r0, #65	; 0x41
   20b1c:	beq	20b98 <myhtml_insertion_mode_in_column_group@@Base+0xb8>
   20b20:	b	20bec <myhtml_insertion_mode_in_column_group@@Base+0x10c>
   20b24:	cmp	r0, #31
   20b28:	beq	20c40 <myhtml_insertion_mode_in_column_group@@Base+0x160>
   20b2c:	cmp	r0, #128	; 0x80
   20b30:	beq	20ba4 <myhtml_insertion_mode_in_column_group@@Base+0xc4>
   20b34:	cmp	r0, #32
   20b38:	bne	20bec <myhtml_insertion_mode_in_column_group@@Base+0x10c>
   20b3c:	mov	r0, r5
   20b40:	bl	11854 <myhtml_tree_current_node@plt>
   20b44:	cmp	r0, #0
   20b48:	beq	20c40 <myhtml_insertion_mode_in_column_group@@Base+0x160>
   20b4c:	mov	r1, #32
   20b50:	bl	11c2c <myhtml_is_html_node@plt>
   20b54:	cmp	r0, #0
   20b58:	beq	20c40 <myhtml_insertion_mode_in_column_group@@Base+0x160>
   20b5c:	mov	r0, r5
   20b60:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   20b64:	mov	r0, #8
   20b68:	b	20c1c <myhtml_insertion_mode_in_column_group@@Base+0x13c>
   20b6c:	cmp	r0, #1
   20b70:	beq	20bc4 <myhtml_insertion_mode_in_column_group@@Base+0xe4>
   20b74:	cmp	r0, #2
   20b78:	beq	20c24 <myhtml_insertion_mode_in_column_group@@Base+0x144>
   20b7c:	cmp	r0, #3
   20b80:	beq	20c40 <myhtml_insertion_mode_in_column_group@@Base+0x160>
   20b84:	b	20bec <myhtml_insertion_mode_in_column_group@@Base+0x10c>
   20b88:	cmp	r0, #128	; 0x80
   20b8c:	beq	20ba4 <myhtml_insertion_mode_in_column_group@@Base+0xc4>
   20b90:	cmp	r0, #251	; 0xfb
   20b94:	bne	20bec <myhtml_insertion_mode_in_column_group@@Base+0x10c>
   20b98:	mov	r0, r5
   20b9c:	pop	{r4, r5, fp, lr}
   20ba0:	b	1e528 <myhtml_insertion_mode_in_body@@Base>
   20ba4:	mov	r0, r5
   20ba8:	pop	{r4, r5, fp, lr}
   20bac:	b	1fad8 <myhtml_insertion_mode_in_head@@Base>
   20bb0:	mov	r0, r5
   20bb4:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   20bb8:	mov	r0, r5
   20bbc:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   20bc0:	b	20c40 <myhtml_insertion_mode_in_column_group@@Base+0x160>
   20bc4:	ldr	r0, [r1, #48]	; 0x30
   20bc8:	tst	r0, #8
   20bcc:	bne	20c38 <myhtml_insertion_mode_in_column_group@@Base+0x158>
   20bd0:	mov	r0, r5
   20bd4:	bl	11224 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   20bd8:	cmp	r0, #0
   20bdc:	beq	20bec <myhtml_insertion_mode_in_column_group@@Base+0x10c>
   20be0:	mov	r1, r0
   20be4:	mov	r0, r5
   20be8:	bl	112c0 <myhtml_tree_node_insert_text@plt>
   20bec:	mov	r0, r5
   20bf0:	bl	11854 <myhtml_tree_current_node@plt>
   20bf4:	cmp	r0, #0
   20bf8:	beq	20c40 <myhtml_insertion_mode_in_column_group@@Base+0x160>
   20bfc:	mov	r1, #32
   20c00:	bl	11c2c <myhtml_is_html_node@plt>
   20c04:	cmp	r0, #0
   20c08:	beq	20c40 <myhtml_insertion_mode_in_column_group@@Base+0x160>
   20c0c:	mov	r0, r5
   20c10:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   20c14:	mov	r0, #8
   20c18:	mov	r4, #1
   20c1c:	str	r0, [r5, #168]	; 0xa8
   20c20:	b	20c40 <myhtml_insertion_mode_in_column_group@@Base+0x160>
   20c24:	mov	r0, r5
   20c28:	mov	r2, #0
   20c2c:	mov	r4, #0
   20c30:	bl	11524 <myhtml_tree_node_insert_comment@plt>
   20c34:	b	20c40 <myhtml_insertion_mode_in_column_group@@Base+0x160>
   20c38:	mov	r0, r5
   20c3c:	bl	112c0 <myhtml_tree_node_insert_text@plt>
   20c40:	mov	r0, r4
   20c44:	pop	{r4, r5, fp, pc}

00020c48 <myhtml_insertion_mode_in_table_body@@Base>:
   20c48:	push	{r4, r5, r6, r7, fp, lr}
   20c4c:	add	fp, sp, #16
   20c50:	mov	r6, r1
   20c54:	mov	r4, r0
   20c58:	ldr	r1, [r1]
   20c5c:	ldr	r0, [r6, #48]	; 0x30
   20c60:	tst	r0, #1
   20c64:	bne	20cb4 <myhtml_insertion_mode_in_table_body@@Base+0x6c>
   20c68:	sub	r0, r1, #126	; 0x7e
   20c6c:	cmp	r0, #9
   20c70:	bhi	20dbc <myhtml_insertion_mode_in_table_body@@Base+0x174>
   20c74:	mov	r2, #1
   20c78:	mov	r3, #81	; 0x51
   20c7c:	tst	r3, r2, lsl r0
   20c80:	bne	20dd8 <myhtml_insertion_mode_in_table_body@@Base+0x190>
   20c84:	mov	r3, #34	; 0x22
   20c88:	tst	r3, r2, lsl r0
   20c8c:	beq	20d94 <myhtml_insertion_mode_in_table_body@@Base+0x14c>
   20c90:	mov	r0, r4
   20c94:	bl	11614 <myhtml_tree_clear_stack_back_table_body_context@plt>
   20c98:	mov	r0, r4
   20c9c:	mov	r1, #135	; 0x87
   20ca0:	mov	r2, #1
   20ca4:	mov	r5, #1
   20ca8:	bl	11b30 <myhtml_tree_node_insert@plt>
   20cac:	mov	r0, #13
   20cb0:	b	20e40 <myhtml_insertion_mode_in_table_body@@Base+0x1f8>
   20cb4:	sub	r0, r1, #125	; 0x7d
   20cb8:	mov	r5, #0
   20cbc:	cmp	r0, #10
   20cc0:	bhi	20d3c <myhtml_insertion_mode_in_table_body@@Base+0xf4>
   20cc4:	mov	r2, #1
   20cc8:	mov	r3, #162	; 0xa2
   20ccc:	tst	r3, r2, lsl r0
   20cd0:	bne	20d64 <myhtml_insertion_mode_in_table_body@@Base+0x11c>
   20cd4:	movw	r3, #1092	; 0x444
   20cd8:	tst	r3, r2, lsl r0
   20cdc:	bne	20e44 <myhtml_insertion_mode_in_table_body@@Base+0x1fc>
   20ce0:	cmp	r0, #0
   20ce4:	bne	20d3c <myhtml_insertion_mode_in_table_body@@Base+0xf4>
   20ce8:	mov	r0, r4
   20cec:	mov	r1, #126	; 0x7e
   20cf0:	mov	r2, #1
   20cf4:	mov	r3, #64	; 0x40
   20cf8:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   20cfc:	mov	r7, r0
   20d00:	mov	r0, r4
   20d04:	mov	r1, #130	; 0x82
   20d08:	mov	r2, #1
   20d0c:	mov	r3, #64	; 0x40
   20d10:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   20d14:	mov	r6, r0
   20d18:	mov	r0, r4
   20d1c:	mov	r1, #132	; 0x84
   20d20:	mov	r2, #1
   20d24:	mov	r3, #64	; 0x40
   20d28:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   20d2c:	cmp	r7, #0
   20d30:	cmpeq	r6, #0
   20d34:	bne	20e28 <myhtml_insertion_mode_in_table_body@@Base+0x1e0>
   20d38:	b	20e50 <myhtml_insertion_mode_in_table_body@@Base+0x208>
   20d3c:	sub	r0, r1, #23
   20d40:	cmp	r0, #9
   20d44:	bhi	20d58 <myhtml_insertion_mode_in_table_body@@Base+0x110>
   20d48:	mov	r2, #1
   20d4c:	movw	r3, #785	; 0x311
   20d50:	tst	r3, r2, lsl r0
   20d54:	bne	20e44 <myhtml_insertion_mode_in_table_body@@Base+0x1fc>
   20d58:	cmp	r1, #65	; 0x41
   20d5c:	beq	20e44 <myhtml_insertion_mode_in_table_body@@Base+0x1fc>
   20d60:	b	20e5c <myhtml_insertion_mode_in_table_body@@Base+0x214>
   20d64:	mov	r0, r4
   20d68:	mov	r2, #1
   20d6c:	mov	r3, #64	; 0x40
   20d70:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   20d74:	cmp	r0, #0
   20d78:	beq	20e44 <myhtml_insertion_mode_in_table_body@@Base+0x1fc>
   20d7c:	mov	r0, r4
   20d80:	bl	11614 <myhtml_tree_clear_stack_back_table_body_context@plt>
   20d84:	mov	r0, r4
   20d88:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   20d8c:	mov	r0, #8
   20d90:	b	20e40 <myhtml_insertion_mode_in_table_body@@Base+0x1f8>
   20d94:	cmp	r0, #9
   20d98:	bne	20dbc <myhtml_insertion_mode_in_table_body@@Base+0x174>
   20d9c:	mov	r0, r4
   20da0:	bl	11614 <myhtml_tree_clear_stack_back_table_body_context@plt>
   20da4:	mov	r0, r4
   20da8:	mov	r1, r6
   20dac:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   20db0:	mov	r0, #13
   20db4:	mov	r5, #0
   20db8:	b	20e40 <myhtml_insertion_mode_in_table_body@@Base+0x1f8>
   20dbc:	sub	r0, r1, #27
   20dc0:	cmp	r0, #5
   20dc4:	bhi	20e5c <myhtml_insertion_mode_in_table_body@@Base+0x214>
   20dc8:	mov	r1, #1
   20dcc:	mov	r2, #49	; 0x31
   20dd0:	tst	r2, r1, lsl r0
   20dd4:	beq	20e5c <myhtml_insertion_mode_in_table_body@@Base+0x214>
   20dd8:	mov	r0, r4
   20ddc:	mov	r1, #126	; 0x7e
   20de0:	mov	r2, #1
   20de4:	mov	r3, #64	; 0x40
   20de8:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   20dec:	mov	r6, r0
   20df0:	mov	r0, r4
   20df4:	mov	r1, #130	; 0x82
   20df8:	mov	r2, #1
   20dfc:	mov	r3, #64	; 0x40
   20e00:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   20e04:	mov	r5, r0
   20e08:	mov	r0, r4
   20e0c:	mov	r1, #132	; 0x84
   20e10:	mov	r2, #1
   20e14:	mov	r3, #64	; 0x40
   20e18:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   20e1c:	cmp	r6, #0
   20e20:	cmpeq	r5, #0
   20e24:	beq	20e4c <myhtml_insertion_mode_in_table_body@@Base+0x204>
   20e28:	mov	r0, r4
   20e2c:	bl	11614 <myhtml_tree_clear_stack_back_table_body_context@plt>
   20e30:	mov	r0, r4
   20e34:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   20e38:	mov	r0, #8
   20e3c:	mov	r5, #1
   20e40:	str	r0, [r4, #168]	; 0xa8
   20e44:	mov	r0, r5
   20e48:	pop	{r4, r5, r6, r7, fp, pc}
   20e4c:	mov	r5, #0
   20e50:	cmp	r0, #0
   20e54:	beq	20e44 <myhtml_insertion_mode_in_table_body@@Base+0x1fc>
   20e58:	b	20e28 <myhtml_insertion_mode_in_table_body@@Base+0x1e0>
   20e5c:	mov	r0, r4
   20e60:	mov	r1, r6
   20e64:	pop	{r4, r5, r6, r7, fp, lr}
   20e68:	b	2041c <myhtml_insertion_mode_in_table@@Base>

00020e6c <myhtml_insertion_mode_in_row@@Base>:
   20e6c:	push	{r4, r5, r6, sl, fp, lr}
   20e70:	add	fp, sp, #16
   20e74:	mov	r6, r1
   20e78:	mov	r4, r0
   20e7c:	ldr	r1, [r1]
   20e80:	ldr	r0, [r6, #48]	; 0x30
   20e84:	tst	r0, #1
   20e88:	bne	20ee4 <myhtml_insertion_mode_in_row@@Base+0x78>
   20e8c:	sub	r0, r1, #126	; 0x7e
   20e90:	cmp	r0, #9
   20e94:	bhi	20fa4 <myhtml_insertion_mode_in_row@@Base+0x138>
   20e98:	mov	r2, #1
   20e9c:	movw	r3, #593	; 0x251
   20ea0:	tst	r3, r2, lsl r0
   20ea4:	bne	20fc0 <myhtml_insertion_mode_in_row@@Base+0x154>
   20ea8:	mov	r3, #34	; 0x22
   20eac:	tst	r3, r2, lsl r0
   20eb0:	beq	20fa4 <myhtml_insertion_mode_in_row@@Base+0x138>
   20eb4:	mov	r0, r4
   20eb8:	bl	1168c <myhtml_tree_clear_stack_back_table_row_context@plt>
   20ebc:	mov	r0, r4
   20ec0:	mov	r1, r6
   20ec4:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   20ec8:	ldr	r0, [r4]
   20ecc:	ldr	r1, [r0, #36]	; 0x24
   20ed0:	mov	r0, r4
   20ed4:	bl	113d4 <myhtml_tree_active_formatting_append@plt>
   20ed8:	mov	r0, #14
   20edc:	str	r0, [r4, #168]	; 0xa8
   20ee0:	b	20ffc <myhtml_insertion_mode_in_row@@Base+0x190>
   20ee4:	sub	r0, r1, #125	; 0x7d
   20ee8:	mov	r5, #0
   20eec:	cmp	r0, #10
   20ef0:	bhi	20f7c <myhtml_insertion_mode_in_row@@Base+0x110>
   20ef4:	add	r2, pc, #4
   20ef8:	ldr	r0, [r2, r0, lsl #2]
   20efc:	add	pc, r2, r0
   20f00:	andeq	r0, r0, r4, asr #32
   20f04:	andeq	r0, r0, ip, lsr #32
   20f08:	andeq	r0, r0, r0, lsl #2
   20f0c:	andeq	r0, r0, r8, lsl #2
   20f10:	andeq	r0, r0, r8, lsl #2
   20f14:	andeq	r0, r0, ip, lsr #32
   20f18:	andeq	r0, r0, r0, lsl #2
   20f1c:	andeq	r0, r0, ip, lsr #32
   20f20:	andeq	r0, r0, r8, lsl #2
   20f24:	andeq	r0, r0, r8, lsl #2
   20f28:	andeq	r0, r0, r8, lsl r1
   20f2c:	mov	r0, r4
   20f30:	mov	r2, #1
   20f34:	mov	r3, #64	; 0x40
   20f38:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   20f3c:	cmp	r0, #0
   20f40:	beq	21000 <myhtml_insertion_mode_in_row@@Base+0x194>
   20f44:	mov	r0, r4
   20f48:	mov	r1, #135	; 0x87
   20f4c:	mov	r2, #1
   20f50:	mov	r3, #64	; 0x40
   20f54:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   20f58:	cmp	r0, #0
   20f5c:	beq	21000 <myhtml_insertion_mode_in_row@@Base+0x194>
   20f60:	mov	r0, r4
   20f64:	bl	1168c <myhtml_tree_clear_stack_back_table_row_context@plt>
   20f68:	mov	r0, r4
   20f6c:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   20f70:	mov	r0, #12
   20f74:	mov	r5, #1
   20f78:	b	20ff4 <myhtml_insertion_mode_in_row@@Base+0x188>
   20f7c:	sub	r0, r1, #23
   20f80:	cmp	r0, #9
   20f84:	bhi	20f98 <myhtml_insertion_mode_in_row@@Base+0x12c>
   20f88:	mov	r2, #1
   20f8c:	movw	r3, #785	; 0x311
   20f90:	tst	r3, r2, lsl r0
   20f94:	bne	21000 <myhtml_insertion_mode_in_row@@Base+0x194>
   20f98:	cmp	r1, #65	; 0x41
   20f9c:	beq	21000 <myhtml_insertion_mode_in_row@@Base+0x194>
   20fa0:	b	21008 <myhtml_insertion_mode_in_row@@Base+0x19c>
   20fa4:	sub	r0, r1, #27
   20fa8:	cmp	r0, #5
   20fac:	bhi	21008 <myhtml_insertion_mode_in_row@@Base+0x19c>
   20fb0:	mov	r1, #1
   20fb4:	mov	r2, #49	; 0x31
   20fb8:	tst	r2, r1, lsl r0
   20fbc:	beq	21008 <myhtml_insertion_mode_in_row@@Base+0x19c>
   20fc0:	mov	r0, r4
   20fc4:	mov	r1, #135	; 0x87
   20fc8:	mov	r2, #1
   20fcc:	mov	r3, #64	; 0x40
   20fd0:	mov	r5, #1
   20fd4:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   20fd8:	cmp	r0, #0
   20fdc:	beq	20ffc <myhtml_insertion_mode_in_row@@Base+0x190>
   20fe0:	mov	r0, r4
   20fe4:	bl	1168c <myhtml_tree_clear_stack_back_table_row_context@plt>
   20fe8:	mov	r0, r4
   20fec:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   20ff0:	mov	r0, #12
   20ff4:	str	r0, [r4, #168]	; 0xa8
   20ff8:	b	21000 <myhtml_insertion_mode_in_row@@Base+0x194>
   20ffc:	mov	r5, #0
   21000:	mov	r0, r5
   21004:	pop	{r4, r5, r6, sl, fp, pc}
   21008:	mov	r0, r4
   2100c:	mov	r1, r6
   21010:	pop	{r4, r5, r6, sl, fp, lr}
   21014:	b	2041c <myhtml_insertion_mode_in_table@@Base>
   21018:	mov	r0, r4
   2101c:	mov	r1, #135	; 0x87
   21020:	mov	r2, #1
   21024:	mov	r3, #64	; 0x40
   21028:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   2102c:	cmp	r0, #0
   21030:	bne	20fe0 <myhtml_insertion_mode_in_row@@Base+0x174>
   21034:	b	21000 <myhtml_insertion_mode_in_row@@Base+0x194>

00021038 <myhtml_insertion_mode_in_cell@@Base>:
   21038:	push	{r4, r5, r6, r7, fp, lr}
   2103c:	add	fp, sp, #16
   21040:	mov	r5, r1
   21044:	mov	r4, r0
   21048:	ldr	r1, [r1]
   2104c:	ldr	r0, [r5, #48]	; 0x30
   21050:	tst	r0, #1
   21054:	bne	210e8 <myhtml_insertion_mode_in_cell@@Base+0xb0>
   21058:	sub	r0, r1, #126	; 0x7e
   2105c:	cmp	r0, #9
   21060:	bhi	21074 <myhtml_insertion_mode_in_cell@@Base+0x3c>
   21064:	mov	r2, #1
   21068:	movw	r3, #627	; 0x273
   2106c:	tst	r3, r2, lsl r0
   21070:	bne	21090 <myhtml_insertion_mode_in_cell@@Base+0x58>
   21074:	sub	r0, r1, #27
   21078:	cmp	r0, #5
   2107c:	bhi	21210 <myhtml_insertion_mode_in_cell@@Base+0x1d8>
   21080:	mov	r1, #1
   21084:	mov	r2, #49	; 0x31
   21088:	tst	r2, r1, lsl r0
   2108c:	beq	21210 <myhtml_insertion_mode_in_cell@@Base+0x1d8>
   21090:	mov	r0, r4
   21094:	mov	r1, #127	; 0x7f
   21098:	mov	r2, #1
   2109c:	mov	r3, #64	; 0x40
   210a0:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   210a4:	mov	r7, r0
   210a8:	mov	r0, r4
   210ac:	mov	r1, #131	; 0x83
   210b0:	mov	r2, #1
   210b4:	mov	r3, #64	; 0x40
   210b8:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   210bc:	mov	r1, r0
   210c0:	orrs	r0, r7, r0
   210c4:	mov	r6, #0
   210c8:	beq	21208 <myhtml_insertion_mode_in_cell@@Base+0x1d0>
   210cc:	cmp	r7, #0
   210d0:	mov	r0, r4
   210d4:	mov	r2, r5
   210d8:	movne	r1, r7
   210dc:	bl	11e30 <myhtml_tree_close_cell@plt>
   210e0:	mov	r6, #1
   210e4:	b	21208 <myhtml_insertion_mode_in_cell@@Base+0x1d0>
   210e8:	sub	r0, r1, #125	; 0x7d
   210ec:	mov	r6, #0
   210f0:	cmp	r0, #10
   210f4:	bhi	211e4 <myhtml_insertion_mode_in_cell@@Base+0x1ac>
   210f8:	mov	r2, #1
   210fc:	movw	r3, #1187	; 0x4a3
   21100:	tst	r3, r2, lsl r0
   21104:	beq	21174 <myhtml_insertion_mode_in_cell@@Base+0x13c>
   21108:	mov	r0, r4
   2110c:	mov	r2, #1
   21110:	mov	r3, #64	; 0x40
   21114:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   21118:	cmp	r0, #0
   2111c:	beq	21208 <myhtml_insertion_mode_in_cell@@Base+0x1d0>
   21120:	mov	r0, r4
   21124:	mov	r1, #127	; 0x7f
   21128:	mov	r2, #1
   2112c:	mov	r3, #64	; 0x40
   21130:	mov	r6, #1
   21134:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   21138:	cmp	r0, #0
   2113c:	bne	21160 <myhtml_insertion_mode_in_cell@@Base+0x128>
   21140:	mov	r0, r4
   21144:	mov	r1, #131	; 0x83
   21148:	mov	r2, #1
   2114c:	mov	r3, #64	; 0x40
   21150:	mov	r6, #1
   21154:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   21158:	cmp	r0, #0
   2115c:	beq	21208 <myhtml_insertion_mode_in_cell@@Base+0x1d0>
   21160:	mov	r1, r0
   21164:	mov	r0, r4
   21168:	mov	r2, r5
   2116c:	bl	11e30 <myhtml_tree_close_cell@plt>
   21170:	b	21208 <myhtml_insertion_mode_in_cell@@Base+0x1d0>
   21174:	mov	r3, #68	; 0x44
   21178:	tst	r3, r2, lsl r0
   2117c:	beq	211e4 <myhtml_insertion_mode_in_cell@@Base+0x1ac>
   21180:	mov	r0, r4
   21184:	mov	r2, #1
   21188:	mov	r3, #64	; 0x40
   2118c:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   21190:	cmp	r0, #0
   21194:	beq	21208 <myhtml_insertion_mode_in_cell@@Base+0x1d0>
   21198:	mov	r0, r4
   2119c:	mov	r1, #0
   211a0:	mov	r2, #0
   211a4:	mov	r6, #0
   211a8:	bl	118fc <myhtml_tree_generate_implied_end_tags@plt>
   211ac:	mov	r0, r4
   211b0:	bl	11854 <myhtml_tree_current_node@plt>
   211b4:	ldr	r1, [r5]
   211b8:	bl	11c2c <myhtml_is_html_node@plt>
   211bc:	ldr	r1, [r5]
   211c0:	mov	r0, r4
   211c4:	mov	r2, #1
   211c8:	mov	r3, #0
   211cc:	bl	11b0c <myhtml_tree_open_elements_pop_until@plt>
   211d0:	mov	r0, r4
   211d4:	bl	11f38 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   211d8:	mov	r0, #13
   211dc:	str	r0, [r4, #168]	; 0xa8
   211e0:	b	21208 <myhtml_insertion_mode_in_cell@@Base+0x1d0>
   211e4:	sub	r0, r1, #23
   211e8:	cmp	r0, #9
   211ec:	bhi	21200 <myhtml_insertion_mode_in_cell@@Base+0x1c8>
   211f0:	mov	r2, #1
   211f4:	movw	r3, #785	; 0x311
   211f8:	tst	r3, r2, lsl r0
   211fc:	bne	21208 <myhtml_insertion_mode_in_cell@@Base+0x1d0>
   21200:	cmp	r1, #65	; 0x41
   21204:	bne	21220 <myhtml_insertion_mode_in_cell@@Base+0x1e8>
   21208:	mov	r0, r6
   2120c:	pop	{r4, r5, r6, r7, fp, pc}
   21210:	mov	r0, r4
   21214:	mov	r1, r5
   21218:	pop	{r4, r5, r6, r7, fp, lr}
   2121c:	b	1e528 <myhtml_insertion_mode_in_body@@Base>
   21220:	mov	r0, r4
   21224:	mov	r1, r5
   21228:	pop	{r4, r5, r6, r7, fp, lr}
   2122c:	b	2041c <myhtml_insertion_mode_in_table@@Base>

00021230 <myhtml_insertion_mode_in_select@@Base>:
   21230:	push	{r4, r5, r6, sl, fp, lr}
   21234:	add	fp, sp, #16
   21238:	mov	r5, r0
   2123c:	mov	r6, r1
   21240:	ldr	r0, [r1]
   21244:	ldr	r1, [r1, #48]	; 0x30
   21248:	mov	r4, #0
   2124c:	tst	r1, #1
   21250:	bne	21280 <myhtml_insertion_mode_in_select@@Base+0x50>
   21254:	cmp	r0, #96	; 0x60
   21258:	bgt	212a8 <myhtml_insertion_mode_in_select@@Base+0x78>
   2125c:	cmp	r0, #69	; 0x45
   21260:	bgt	2131c <myhtml_insertion_mode_in_select@@Base+0xec>
   21264:	cmp	r0, #1
   21268:	beq	21468 <myhtml_insertion_mode_in_select@@Base+0x238>
   2126c:	cmp	r0, #2
   21270:	beq	2149c <myhtml_insertion_mode_in_select@@Base+0x26c>
   21274:	cmp	r0, #65	; 0x41
   21278:	beq	21398 <myhtml_insertion_mode_in_select@@Base+0x168>
   2127c:	b	214e0 <myhtml_insertion_mode_in_select@@Base+0x2b0>
   21280:	cmp	r0, #113	; 0x71
   21284:	bgt	212cc <myhtml_insertion_mode_in_select@@Base+0x9c>
   21288:	cmp	r0, #96	; 0x60
   2128c:	beq	213f4 <myhtml_insertion_mode_in_select@@Base+0x1c4>
   21290:	cmp	r0, #97	; 0x61
   21294:	bne	214e0 <myhtml_insertion_mode_in_select@@Base+0x2b0>
   21298:	mov	r0, r5
   2129c:	bl	11854 <myhtml_tree_current_node@plt>
   212a0:	mov	r1, #97	; 0x61
   212a4:	b	21450 <myhtml_insertion_mode_in_select@@Base+0x220>
   212a8:	cmp	r0, #127	; 0x7f
   212ac:	bgt	21380 <myhtml_insertion_mode_in_select@@Base+0x150>
   212b0:	cmp	r0, #97	; 0x61
   212b4:	beq	214b4 <myhtml_insertion_mode_in_select@@Base+0x284>
   212b8:	cmp	r0, #112	; 0x70
   212bc:	beq	213a8 <myhtml_insertion_mode_in_select@@Base+0x178>
   212c0:	cmp	r0, #114	; 0x72
   212c4:	beq	212e0 <myhtml_insertion_mode_in_select@@Base+0xb0>
   212c8:	b	214e0 <myhtml_insertion_mode_in_select@@Base+0x2b0>
   212cc:	cmp	r0, #114	; 0x72
   212d0:	beq	212e0 <myhtml_insertion_mode_in_select@@Base+0xb0>
   212d4:	cmp	r0, #128	; 0x80
   212d8:	beq	213a8 <myhtml_insertion_mode_in_select@@Base+0x178>
   212dc:	b	214e0 <myhtml_insertion_mode_in_select@@Base+0x2b0>
   212e0:	mov	r0, r5
   212e4:	mov	r1, #114	; 0x72
   212e8:	mov	r2, #1
   212ec:	mov	r3, #128	; 0x80
   212f0:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   212f4:	cmp	r0, #0
   212f8:	beq	214e0 <myhtml_insertion_mode_in_select@@Base+0x2b0>
   212fc:	mov	r1, r0
   21300:	mov	r0, r5
   21304:	mov	r2, #0
   21308:	mov	r4, #0
   2130c:	bl	1141c <myhtml_tree_open_elements_pop_until_by_node@plt>
   21310:	mov	r0, r5
   21314:	bl	11944 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   21318:	b	214e0 <myhtml_insertion_mode_in_select@@Base+0x2b0>
   2131c:	cmp	r0, #70	; 0x46
   21320:	cmpne	r0, #74	; 0x4a
   21324:	beq	213b8 <myhtml_insertion_mode_in_select@@Base+0x188>
   21328:	cmp	r0, #96	; 0x60
   2132c:	bne	214e0 <myhtml_insertion_mode_in_select@@Base+0x2b0>
   21330:	mov	r0, r5
   21334:	bl	11854 <myhtml_tree_current_node@plt>
   21338:	ldr	r1, [r0, #4]
   2133c:	cmp	r1, #97	; 0x61
   21340:	bne	21358 <myhtml_insertion_mode_in_select@@Base+0x128>
   21344:	ldr	r0, [r0, #8]
   21348:	cmp	r0, #1
   2134c:	bne	21358 <myhtml_insertion_mode_in_select@@Base+0x128>
   21350:	mov	r0, r5
   21354:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   21358:	mov	r0, r5
   2135c:	bl	11854 <myhtml_tree_current_node@plt>
   21360:	ldr	r1, [r6]
   21364:	ldr	r2, [r0, #4]
   21368:	cmp	r2, r1
   2136c:	bne	214d4 <myhtml_insertion_mode_in_select@@Base+0x2a4>
   21370:	ldr	r0, [r0, #8]
   21374:	cmp	r0, #1
   21378:	beq	214cc <myhtml_insertion_mode_in_select@@Base+0x29c>
   2137c:	b	214d4 <myhtml_insertion_mode_in_select@@Base+0x2a4>
   21380:	cmp	r0, #128	; 0x80
   21384:	beq	213a8 <myhtml_insertion_mode_in_select@@Base+0x178>
   21388:	cmp	r0, #129	; 0x81
   2138c:	beq	213b8 <myhtml_insertion_mode_in_select@@Base+0x188>
   21390:	cmp	r0, #251	; 0xfb
   21394:	bne	214e0 <myhtml_insertion_mode_in_select@@Base+0x2b0>
   21398:	mov	r0, r5
   2139c:	mov	r1, r6
   213a0:	pop	{r4, r5, r6, sl, fp, lr}
   213a4:	b	1e528 <myhtml_insertion_mode_in_body@@Base>
   213a8:	mov	r0, r5
   213ac:	mov	r1, r6
   213b0:	pop	{r4, r5, r6, sl, fp, lr}
   213b4:	b	1fad8 <myhtml_insertion_mode_in_head@@Base>
   213b8:	mov	r0, r5
   213bc:	mov	r1, #114	; 0x72
   213c0:	mov	r2, #1
   213c4:	mov	r3, #128	; 0x80
   213c8:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   213cc:	cmp	r0, #0
   213d0:	beq	214e0 <myhtml_insertion_mode_in_select@@Base+0x2b0>
   213d4:	mov	r1, r0
   213d8:	mov	r0, r5
   213dc:	mov	r2, #0
   213e0:	bl	1141c <myhtml_tree_open_elements_pop_until_by_node@plt>
   213e4:	mov	r0, r5
   213e8:	bl	11944 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   213ec:	mov	r4, #1
   213f0:	b	214e0 <myhtml_insertion_mode_in_select@@Base+0x2b0>
   213f4:	mov	r0, r5
   213f8:	bl	11854 <myhtml_tree_current_node@plt>
   213fc:	mov	r1, #97	; 0x61
   21400:	bl	11c2c <myhtml_is_html_node@plt>
   21404:	cmp	r0, #0
   21408:	beq	21444 <myhtml_insertion_mode_in_select@@Base+0x214>
   2140c:	ldr	r0, [r5, #128]	; 0x80
   21410:	ldr	r1, [r0, #4]
   21414:	cmp	r1, #2
   21418:	bcc	21444 <myhtml_insertion_mode_in_select@@Base+0x214>
   2141c:	ldr	r1, [r0]
   21420:	ldr	r0, [r0, #4]
   21424:	add	r0, r1, r0, lsl #2
   21428:	mov	r1, #96	; 0x60
   2142c:	ldr	r0, [r0, #-8]
   21430:	bl	11c2c <myhtml_is_html_node@plt>
   21434:	cmp	r0, #0
   21438:	beq	21444 <myhtml_insertion_mode_in_select@@Base+0x214>
   2143c:	mov	r0, r5
   21440:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   21444:	mov	r0, r5
   21448:	bl	11854 <myhtml_tree_current_node@plt>
   2144c:	mov	r1, #96	; 0x60
   21450:	bl	11c2c <myhtml_is_html_node@plt>
   21454:	cmp	r0, #0
   21458:	beq	214e0 <myhtml_insertion_mode_in_select@@Base+0x2b0>
   2145c:	mov	r0, r5
   21460:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   21464:	b	214e0 <myhtml_insertion_mode_in_select@@Base+0x2b0>
   21468:	ldr	r0, [r6, #48]	; 0x30
   2146c:	tst	r0, #2048	; 0x800
   21470:	beq	2148c <myhtml_insertion_mode_in_select@@Base+0x25c>
   21474:	mov	r0, r5
   21478:	mov	r1, r6
   2147c:	bl	119bc <myhtml_insertion_fix_for_null_char_drop_all@plt>
   21480:	ldr	r0, [r6, #12]
   21484:	cmp	r0, #0
   21488:	beq	214e0 <myhtml_insertion_mode_in_select@@Base+0x2b0>
   2148c:	mov	r0, r5
   21490:	mov	r1, r6
   21494:	bl	112c0 <myhtml_tree_node_insert_text@plt>
   21498:	b	214e0 <myhtml_insertion_mode_in_select@@Base+0x2b0>
   2149c:	mov	r0, r5
   214a0:	mov	r1, r6
   214a4:	mov	r2, #0
   214a8:	mov	r4, #0
   214ac:	bl	11524 <myhtml_tree_node_insert_comment@plt>
   214b0:	b	214e0 <myhtml_insertion_mode_in_select@@Base+0x2b0>
   214b4:	mov	r0, r5
   214b8:	bl	11854 <myhtml_tree_current_node@plt>
   214bc:	ldr	r1, [r6]
   214c0:	bl	11c2c <myhtml_is_html_node@plt>
   214c4:	cmp	r0, #0
   214c8:	beq	214d4 <myhtml_insertion_mode_in_select@@Base+0x2a4>
   214cc:	mov	r0, r5
   214d0:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   214d4:	mov	r0, r5
   214d8:	mov	r1, r6
   214dc:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   214e0:	mov	r0, r4
   214e4:	pop	{r4, r5, r6, sl, fp, pc}

000214e8 <myhtml_insertion_mode_in_select_in_table@@Base>:
   214e8:	push	{r4, r5, fp, lr}
   214ec:	add	fp, sp, #8
   214f0:	mov	r4, r0
   214f4:	ldr	r2, [r1]
   214f8:	ldr	r0, [r1, #48]	; 0x30
   214fc:	tst	r0, #1
   21500:	bne	21528 <myhtml_insertion_mode_in_select_in_table@@Base+0x40>
   21504:	sub	r0, r2, #125	; 0x7d
   21508:	cmp	r0, #10
   2150c:	bhi	21590 <myhtml_insertion_mode_in_select_in_table@@Base+0xa8>
   21510:	mov	r3, #1
   21514:	movw	r5, #1255	; 0x4e7
   21518:	tst	r5, r3, lsl r0
   2151c:	beq	21590 <myhtml_insertion_mode_in_select_in_table@@Base+0xa8>
   21520:	mov	r5, #1
   21524:	b	21564 <myhtml_insertion_mode_in_select_in_table@@Base+0x7c>
   21528:	sub	r0, r2, #125	; 0x7d
   2152c:	cmp	r0, #10
   21530:	bhi	2159c <myhtml_insertion_mode_in_select_in_table@@Base+0xb4>
   21534:	mov	r3, #1
   21538:	movw	r5, #1255	; 0x4e7
   2153c:	tst	r5, r3, lsl r0
   21540:	beq	2159c <myhtml_insertion_mode_in_select_in_table@@Base+0xb4>
   21544:	mov	r1, r2
   21548:	mov	r0, r4
   2154c:	mov	r2, #1
   21550:	mov	r3, #64	; 0x40
   21554:	mov	r5, #1
   21558:	bl	11fc8 <myhtml_tree_element_in_scope@plt>
   2155c:	cmp	r0, #0
   21560:	beq	21588 <myhtml_insertion_mode_in_select_in_table@@Base+0xa0>
   21564:	mov	r0, r4
   21568:	mov	r1, #114	; 0x72
   2156c:	mov	r2, #1
   21570:	mov	r3, #0
   21574:	bl	11b0c <myhtml_tree_open_elements_pop_until@plt>
   21578:	mov	r0, r4
   2157c:	bl	11944 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   21580:	mov	r0, r5
   21584:	pop	{r4, r5, fp, pc}
   21588:	mov	r5, #0
   2158c:	b	21580 <myhtml_insertion_mode_in_select_in_table@@Base+0x98>
   21590:	cmp	r2, #27
   21594:	beq	21520 <myhtml_insertion_mode_in_select_in_table@@Base+0x38>
   21598:	b	215a4 <myhtml_insertion_mode_in_select_in_table@@Base+0xbc>
   2159c:	cmp	r2, #27
   215a0:	beq	21544 <myhtml_insertion_mode_in_select_in_table@@Base+0x5c>
   215a4:	mov	r0, r4
   215a8:	pop	{r4, r5, fp, lr}
   215ac:	b	21230 <myhtml_insertion_mode_in_select@@Base>

000215b0 <myhtml_insertion_mode_after_body@@Base>:
   215b0:	push	{r4, r5, r6, sl, fp, lr}
   215b4:	add	fp, sp, #16
   215b8:	mov	r5, r1
   215bc:	ldr	r1, [r1]
   215c0:	ldr	r2, [r5, #48]	; 0x30
   215c4:	tst	r2, #1
   215c8:	bne	215f4 <myhtml_insertion_mode_after_body@@Base+0x44>
   215cc:	mov	r4, #0
   215d0:	cmp	r1, #2
   215d4:	ble	21614 <myhtml_insertion_mode_after_body@@Base+0x64>
   215d8:	cmp	r1, #3
   215dc:	beq	2167c <myhtml_insertion_mode_after_body@@Base+0xcc>
   215e0:	cmp	r1, #65	; 0x41
   215e4:	beq	21684 <myhtml_insertion_mode_after_body@@Base+0xd4>
   215e8:	cmp	r1, #251	; 0xfb
   215ec:	beq	2167c <myhtml_insertion_mode_after_body@@Base+0xcc>
   215f0:	b	21670 <myhtml_insertion_mode_after_body@@Base+0xc0>
   215f4:	cmp	r1, #65	; 0x41
   215f8:	bne	21670 <myhtml_insertion_mode_after_body@@Base+0xc0>
   215fc:	ldr	r1, [r0, #88]	; 0x58
   21600:	mov	r4, #0
   21604:	cmp	r1, #0
   21608:	moveq	r1, #21
   2160c:	streq	r1, [r0, #168]	; 0xa8
   21610:	b	2167c <myhtml_insertion_mode_after_body@@Base+0xcc>
   21614:	cmp	r1, #1
   21618:	beq	21664 <myhtml_insertion_mode_after_body@@Base+0xb4>
   2161c:	cmp	r1, #2
   21620:	bne	21670 <myhtml_insertion_mode_after_body@@Base+0xc0>
   21624:	ldr	r1, [r0, #128]	; 0x80
   21628:	ldr	r2, [r1, #4]
   2162c:	cmp	r2, #0
   21630:	beq	2167c <myhtml_insertion_mode_after_body@@Base+0xcc>
   21634:	ldr	r1, [r1]
   21638:	ldr	r6, [r1]
   2163c:	bl	11314 <myhtml_tree_node_create@plt>
   21640:	mov	r1, r0
   21644:	str	r5, [r0, #32]
   21648:	mov	r0, #2
   2164c:	str	r0, [r1, #4]
   21650:	ldr	r0, [r6, #8]
   21654:	str	r0, [r1, #8]
   21658:	mov	r0, r6
   2165c:	bl	118e4 <myhtml_tree_node_add_child@plt>
   21660:	b	2167c <myhtml_insertion_mode_after_body@@Base+0xcc>
   21664:	ldr	r1, [r5, #48]	; 0x30
   21668:	tst	r1, #8
   2166c:	bne	21684 <myhtml_insertion_mode_after_body@@Base+0xd4>
   21670:	mov	r1, #6
   21674:	mov	r4, #1
   21678:	str	r1, [r0, #168]	; 0xa8
   2167c:	mov	r0, r4
   21680:	pop	{r4, r5, r6, sl, fp, pc}
   21684:	mov	r1, r5
   21688:	pop	{r4, r5, r6, sl, fp, lr}
   2168c:	b	1e528 <myhtml_insertion_mode_in_body@@Base>

00021690 <myhtml_insertion_mode_in_frameset@@Base>:
   21690:	push	{r4, r5, fp, lr}
   21694:	add	fp, sp, #8
   21698:	mov	r4, r0
   2169c:	mov	r5, r1
   216a0:	ldr	r0, [r1]
   216a4:	ldr	r1, [r1, #48]	; 0x30
   216a8:	tst	r1, #1
   216ac:	bne	216e0 <myhtml_insertion_mode_in_frameset@@Base+0x50>
   216b0:	cmp	r0, #53	; 0x35
   216b4:	ble	21740 <myhtml_insertion_mode_in_frameset@@Base+0xb0>
   216b8:	cmp	r0, #91	; 0x5b
   216bc:	bgt	21770 <myhtml_insertion_mode_in_frameset@@Base+0xe0>
   216c0:	cmp	r0, #54	; 0x36
   216c4:	beq	2178c <myhtml_insertion_mode_in_frameset@@Base+0xfc>
   216c8:	cmp	r0, #65	; 0x41
   216cc:	bne	217e8 <myhtml_insertion_mode_in_frameset@@Base+0x158>
   216d0:	mov	r0, r4
   216d4:	mov	r1, r5
   216d8:	pop	{r4, r5, fp, lr}
   216dc:	b	1e528 <myhtml_insertion_mode_in_body@@Base>
   216e0:	cmp	r0, #54	; 0x36
   216e4:	bne	217e8 <myhtml_insertion_mode_in_frameset@@Base+0x158>
   216e8:	mov	r0, r4
   216ec:	bl	11854 <myhtml_tree_current_node@plt>
   216f0:	ldr	r1, [r4, #84]	; 0x54
   216f4:	ldr	r1, [r1, #20]
   216f8:	cmp	r0, r1
   216fc:	beq	217e8 <myhtml_insertion_mode_in_frameset@@Base+0x158>
   21700:	mov	r0, r4
   21704:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   21708:	mov	r0, r4
   2170c:	bl	11854 <myhtml_tree_current_node@plt>
   21710:	ldr	r1, [r4, #88]	; 0x58
   21714:	cmp	r1, #0
   21718:	bne	217e8 <myhtml_insertion_mode_in_frameset@@Base+0x158>
   2171c:	ldr	r1, [r0, #4]
   21720:	cmp	r1, #54	; 0x36
   21724:	bne	21734 <myhtml_insertion_mode_in_frameset@@Base+0xa4>
   21728:	ldr	r0, [r0, #8]
   2172c:	cmp	r0, #1
   21730:	beq	217e8 <myhtml_insertion_mode_in_frameset@@Base+0x158>
   21734:	mov	r0, #20
   21738:	str	r0, [r4, #168]	; 0xa8
   2173c:	b	217e8 <myhtml_insertion_mode_in_frameset@@Base+0x158>
   21740:	cmp	r0, #1
   21744:	beq	2179c <myhtml_insertion_mode_in_frameset@@Base+0x10c>
   21748:	cmp	r0, #2
   2174c:	beq	217d8 <myhtml_insertion_mode_in_frameset@@Base+0x148>
   21750:	cmp	r0, #53	; 0x35
   21754:	bne	217e8 <myhtml_insertion_mode_in_frameset@@Base+0x158>
   21758:	mov	r0, r4
   2175c:	mov	r1, r5
   21760:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   21764:	mov	r0, r4
   21768:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   2176c:	b	217e8 <myhtml_insertion_mode_in_frameset@@Base+0x158>
   21770:	cmp	r0, #92	; 0x5c
   21774:	beq	217f0 <myhtml_insertion_mode_in_frameset@@Base+0x160>
   21778:	cmp	r0, #251	; 0xfb
   2177c:	bne	217e8 <myhtml_insertion_mode_in_frameset@@Base+0x158>
   21780:	mov	r0, r4
   21784:	bl	11854 <myhtml_tree_current_node@plt>
   21788:	b	217e8 <myhtml_insertion_mode_in_frameset@@Base+0x158>
   2178c:	mov	r0, r4
   21790:	mov	r1, r5
   21794:	bl	10ffc <myhtml_tree_node_insert_html_element@plt>
   21798:	b	217e8 <myhtml_insertion_mode_in_frameset@@Base+0x158>
   2179c:	ldr	r0, [r5, #48]	; 0x30
   217a0:	tst	r0, #8
   217a4:	bne	217c8 <myhtml_insertion_mode_in_frameset@@Base+0x138>
   217a8:	ldr	r0, [r4, #8]
   217ac:	mov	r1, r5
   217b0:	bl	118b4 <myhtml_token_node_wait_for_done@plt>
   217b4:	add	r0, r5, #4
   217b8:	bl	1159c <mycore_string_stay_only_whitespace@plt>
   217bc:	ldr	r0, [r5, #12]
   217c0:	cmp	r0, #0
   217c4:	beq	217e8 <myhtml_insertion_mode_in_frameset@@Base+0x158>
   217c8:	mov	r0, r4
   217cc:	mov	r1, r5
   217d0:	bl	112c0 <myhtml_tree_node_insert_text@plt>
   217d4:	b	217e8 <myhtml_insertion_mode_in_frameset@@Base+0x158>
   217d8:	mov	r0, r4
   217dc:	mov	r1, r5
   217e0:	mov	r2, #0
   217e4:	bl	11524 <myhtml_tree_node_insert_comment@plt>
   217e8:	mov	r0, #0
   217ec:	pop	{r4, r5, fp, pc}
   217f0:	mov	r0, r4
   217f4:	mov	r1, r5
   217f8:	pop	{r4, r5, fp, lr}
   217fc:	b	1fad8 <myhtml_insertion_mode_in_head@@Base>

00021800 <myhtml_insertion_mode_after_frameset@@Base>:
   21800:	push	{r4, r5, fp, lr}
   21804:	add	fp, sp, #8
   21808:	mov	r4, r0
   2180c:	mov	r5, r1
   21810:	ldr	r0, [r1]
   21814:	ldr	r1, [r1, #48]	; 0x30
   21818:	tst	r1, #1
   2181c:	bne	2184c <myhtml_insertion_mode_after_frameset@@Base+0x4c>
   21820:	cmp	r0, #64	; 0x40
   21824:	bgt	21860 <myhtml_insertion_mode_after_frameset@@Base+0x60>
   21828:	cmp	r0, #1
   2182c:	beq	21880 <myhtml_insertion_mode_after_frameset@@Base+0x80>
   21830:	cmp	r0, #2
   21834:	bne	21858 <myhtml_insertion_mode_after_frameset@@Base+0x58>
   21838:	mov	r0, r4
   2183c:	mov	r1, r5
   21840:	mov	r2, #0
   21844:	bl	11524 <myhtml_tree_node_insert_comment@plt>
   21848:	b	21858 <myhtml_insertion_mode_after_frameset@@Base+0x58>
   2184c:	cmp	r0, #65	; 0x41
   21850:	moveq	r0, #22
   21854:	streq	r0, [r4, #168]	; 0xa8
   21858:	mov	r0, #0
   2185c:	pop	{r4, r5, fp, pc}
   21860:	cmp	r0, #65	; 0x41
   21864:	beq	218bc <myhtml_insertion_mode_after_frameset@@Base+0xbc>
   21868:	cmp	r0, #92	; 0x5c
   2186c:	bne	21858 <myhtml_insertion_mode_after_frameset@@Base+0x58>
   21870:	mov	r0, r4
   21874:	mov	r1, r5
   21878:	pop	{r4, r5, fp, lr}
   2187c:	b	1fad8 <myhtml_insertion_mode_in_head@@Base>
   21880:	ldr	r0, [r5, #48]	; 0x30
   21884:	tst	r0, #8
   21888:	bne	218ac <myhtml_insertion_mode_after_frameset@@Base+0xac>
   2188c:	ldr	r0, [r4, #8]
   21890:	mov	r1, r5
   21894:	bl	118b4 <myhtml_token_node_wait_for_done@plt>
   21898:	add	r0, r5, #4
   2189c:	bl	1159c <mycore_string_stay_only_whitespace@plt>
   218a0:	ldr	r0, [r5, #12]
   218a4:	cmp	r0, #0
   218a8:	beq	21858 <myhtml_insertion_mode_after_frameset@@Base+0x58>
   218ac:	mov	r0, r4
   218b0:	mov	r1, r5
   218b4:	bl	112c0 <myhtml_tree_node_insert_text@plt>
   218b8:	b	21858 <myhtml_insertion_mode_after_frameset@@Base+0x58>
   218bc:	mov	r0, r4
   218c0:	mov	r1, r5
   218c4:	pop	{r4, r5, fp, lr}
   218c8:	b	1e528 <myhtml_insertion_mode_in_body@@Base>

000218cc <myhtml_insertion_mode_after_after_body@@Base>:
   218cc:	push	{r4, r5, r6, sl, fp, lr}
   218d0:	add	fp, sp, #16
   218d4:	mov	r5, r1
   218d8:	ldr	r1, [r1, #48]	; 0x30
   218dc:	tst	r1, #1
   218e0:	bne	21960 <myhtml_insertion_mode_after_after_body@@Base+0x94>
   218e4:	ldr	r1, [r5]
   218e8:	mov	r4, #0
   218ec:	cmp	r1, #2
   218f0:	ble	2190c <myhtml_insertion_mode_after_after_body@@Base+0x40>
   218f4:	cmp	r1, #3
   218f8:	cmpne	r1, #65	; 0x41
   218fc:	bne	21948 <myhtml_insertion_mode_after_after_body@@Base+0x7c>
   21900:	mov	r1, r5
   21904:	pop	{r4, r5, r6, sl, fp, lr}
   21908:	b	1e528 <myhtml_insertion_mode_in_body@@Base>
   2190c:	cmp	r1, #1
   21910:	beq	21954 <myhtml_insertion_mode_after_after_body@@Base+0x88>
   21914:	cmp	r1, #2
   21918:	bne	21960 <myhtml_insertion_mode_after_after_body@@Base+0x94>
   2191c:	ldr	r6, [r0, #84]	; 0x54
   21920:	bl	11314 <myhtml_tree_node_create@plt>
   21924:	mov	r1, r0
   21928:	str	r5, [r0, #32]
   2192c:	mov	r0, #2
   21930:	str	r0, [r1, #4]
   21934:	ldr	r0, [r6, #8]
   21938:	str	r0, [r1, #8]
   2193c:	mov	r0, r6
   21940:	bl	118e4 <myhtml_tree_node_add_child@plt>
   21944:	b	2196c <myhtml_insertion_mode_after_after_body@@Base+0xa0>
   21948:	cmp	r1, #251	; 0xfb
   2194c:	beq	2196c <myhtml_insertion_mode_after_after_body@@Base+0xa0>
   21950:	b	21960 <myhtml_insertion_mode_after_after_body@@Base+0x94>
   21954:	ldr	r1, [r5, #48]	; 0x30
   21958:	tst	r1, #8
   2195c:	bne	21900 <myhtml_insertion_mode_after_after_body@@Base+0x34>
   21960:	mov	r1, #6
   21964:	mov	r4, #1
   21968:	str	r1, [r0, #168]	; 0xa8
   2196c:	mov	r0, r4
   21970:	pop	{r4, r5, r6, sl, fp, pc}

00021974 <myhtml_insertion_mode_after_after_frameset@@Base>:
   21974:	push	{r4, r5, r6, sl, fp, lr}
   21978:	add	fp, sp, #16
   2197c:	mov	r4, r0
   21980:	ldr	r0, [r1, #48]	; 0x30
   21984:	tst	r0, #1
   21988:	bne	21a3c <myhtml_insertion_mode_after_after_frameset@@Base+0xc8>
   2198c:	ldr	r0, [r1]
   21990:	mov	r5, r1
   21994:	cmp	r0, #2
   21998:	ble	219b8 <myhtml_insertion_mode_after_after_frameset@@Base+0x44>
   2199c:	cmp	r0, #3
   219a0:	cmpne	r0, #65	; 0x41
   219a4:	bne	219f8 <myhtml_insertion_mode_after_after_frameset@@Base+0x84>
   219a8:	mov	r0, r4
   219ac:	mov	r1, r5
   219b0:	pop	{r4, r5, r6, sl, fp, lr}
   219b4:	b	1e528 <myhtml_insertion_mode_in_body@@Base>
   219b8:	cmp	r0, #1
   219bc:	beq	21a10 <myhtml_insertion_mode_after_after_frameset@@Base+0x9c>
   219c0:	cmp	r0, #2
   219c4:	bne	21a3c <myhtml_insertion_mode_after_after_frameset@@Base+0xc8>
   219c8:	ldr	r6, [r4, #84]	; 0x54
   219cc:	mov	r0, r4
   219d0:	bl	11314 <myhtml_tree_node_create@plt>
   219d4:	mov	r1, r0
   219d8:	str	r5, [r0, #32]
   219dc:	mov	r0, #2
   219e0:	str	r0, [r1, #4]
   219e4:	ldr	r0, [r6, #8]
   219e8:	str	r0, [r1, #8]
   219ec:	mov	r0, r6
   219f0:	bl	118e4 <myhtml_tree_node_add_child@plt>
   219f4:	b	21a3c <myhtml_insertion_mode_after_after_frameset@@Base+0xc8>
   219f8:	cmp	r0, #92	; 0x5c
   219fc:	bne	21a3c <myhtml_insertion_mode_after_after_frameset@@Base+0xc8>
   21a00:	mov	r0, r4
   21a04:	mov	r1, r5
   21a08:	pop	{r4, r5, r6, sl, fp, lr}
   21a0c:	b	1fad8 <myhtml_insertion_mode_in_head@@Base>
   21a10:	ldr	r0, [r5, #48]	; 0x30
   21a14:	tst	r0, #8
   21a18:	bne	219a8 <myhtml_insertion_mode_after_after_frameset@@Base+0x34>
   21a1c:	mov	r0, r4
   21a20:	mov	r1, r5
   21a24:	bl	11224 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   21a28:	cmp	r0, #0
   21a2c:	beq	21a3c <myhtml_insertion_mode_after_after_frameset@@Base+0xc8>
   21a30:	mov	r1, r0
   21a34:	mov	r0, r4
   21a38:	b	219b0 <myhtml_insertion_mode_after_after_frameset@@Base+0x3c>
   21a3c:	mov	r0, #0
   21a40:	pop	{r4, r5, r6, sl, fp, pc}

00021a44 <myhtml_insertion_mode_in_foreign_content_end_other@@Base>:
   21a44:	push	{r4, sl, fp, lr}
   21a48:	add	fp, sp, #8
   21a4c:	ldr	r1, [r0, #128]	; 0x80
   21a50:	ldr	r3, [r1, #4]
   21a54:	cmp	r3, #0
   21a58:	beq	21a9c <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x58>
   21a5c:	ldr	r3, [r1]
   21a60:	ldr	r1, [r1, #4]
   21a64:	sub	ip, r1, #1
   21a68:	add	r3, r3, ip, lsl #2
   21a6c:	cmp	ip, #0
   21a70:	beq	21a9c <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x58>
   21a74:	ldr	r1, [r3]
   21a78:	ldr	lr, [r2]
   21a7c:	ldr	r4, [r1, #4]
   21a80:	cmp	r4, lr
   21a84:	beq	21ab8 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x74>
   21a88:	ldr	r1, [r3, #-4]!
   21a8c:	sub	ip, ip, #1
   21a90:	ldr	r1, [r1, #8]
   21a94:	cmp	r1, #1
   21a98:	bne	21a6c <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x28>
   21a9c:	ldr	r1, [r0]
   21aa0:	ldr	r3, [r0, #168]	; 0xa8
   21aa4:	ldr	r1, [r1, #28]
   21aa8:	ldr	r3, [r1, r3, lsl #2]
   21aac:	mov	r1, r2
   21ab0:	pop	{r4, sl, fp, lr}
   21ab4:	bx	r3
   21ab8:	mov	r2, #0
   21abc:	bl	1141c <myhtml_tree_open_elements_pop_until_by_node@plt>
   21ac0:	mov	r0, #0
   21ac4:	pop	{r4, sl, fp, pc}

00021ac8 <myhtml_insertion_mode_in_foreign_content_start_other@@Base>:
   21ac8:	push	{r4, r5, r6, sl, fp, lr}
   21acc:	add	fp, sp, #16
   21ad0:	mov	r4, r1
   21ad4:	mov	r5, r0
   21ad8:	bl	11e3c <myhtml_tree_adjusted_current_node@plt>
   21adc:	mov	r6, r0
   21ae0:	ldr	r0, [r5, #8]
   21ae4:	mov	r1, r4
   21ae8:	bl	118b4 <myhtml_token_node_wait_for_done@plt>
   21aec:	ldr	r0, [r6, #8]
   21af0:	cmp	r0, #3
   21af4:	beq	21b0c <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x44>
   21af8:	cmp	r0, #2
   21afc:	bne	21b14 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x4c>
   21b00:	mov	r0, r4
   21b04:	bl	112a8 <myhtml_token_adjust_mathml_attributes@plt>
   21b08:	b	21b14 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x4c>
   21b0c:	mov	r0, r4
   21b10:	bl	114a0 <myhtml_token_adjust_svg_attributes@plt>
   21b14:	mov	r0, r4
   21b18:	bl	11d04 <myhtml_token_adjust_foreign_attributes@plt>
   21b1c:	mov	r0, r5
   21b20:	mov	r1, r4
   21b24:	bl	11e6c <myhtml_tree_node_insert_foreign_element@plt>
   21b28:	ldr	r1, [r6, #8]
   21b2c:	str	r1, [r0, #8]
   21b30:	ldr	r0, [r4, #48]	; 0x30
   21b34:	tst	r0, #2
   21b38:	beq	21b54 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x8c>
   21b3c:	cmp	r1, #3
   21b40:	ldreq	r0, [r4]
   21b44:	cmpeq	r0, #112	; 0x70
   21b48:	beq	21b5c <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x94>
   21b4c:	mov	r0, r5
   21b50:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   21b54:	mov	r0, #0
   21b58:	pop	{r4, r5, r6, sl, fp, pc}
   21b5c:	mov	r0, r5
   21b60:	bl	11854 <myhtml_tree_current_node@plt>
   21b64:	mov	r1, r0
   21b68:	mov	r0, r5
   21b6c:	mov	r2, r4
   21b70:	pop	{r4, r5, r6, sl, fp, lr}
   21b74:	b	21a44 <myhtml_insertion_mode_in_foreign_content_end_other@@Base>

00021b78 <myhtml_insertion_mode_in_foreign_content@@Base>:
   21b78:	push	{r4, r5, r6, sl, fp, lr}
   21b7c:	add	fp, sp, #16
   21b80:	mov	r4, r0
   21b84:	ldr	r0, [r1, #48]	; 0x30
   21b88:	mov	r5, r1
   21b8c:	tst	r0, #1
   21b90:	bne	21be4 <myhtml_insertion_mode_in_foreign_content@@Base+0x6c>
   21b94:	ldr	r0, [r5]
   21b98:	cmp	r0, #41	; 0x29
   21b9c:	bgt	21c34 <myhtml_insertion_mode_in_foreign_content@@Base+0xbc>
   21ba0:	mov	r6, #0
   21ba4:	cmp	r0, #30
   21ba8:	bhi	21bd0 <myhtml_insertion_mode_in_foreign_content@@Base+0x58>
   21bac:	movw	r2, #16384	; 0x4000
   21bb0:	mov	r1, #1
   21bb4:	movt	r2, #20944	; 0x51d0
   21bb8:	tst	r2, r1, lsl r0
   21bbc:	bne	21db4 <myhtml_insertion_mode_in_foreign_content@@Base+0x23c>
   21bc0:	cmp	r0, #2
   21bc4:	beq	21e28 <myhtml_insertion_mode_in_foreign_content@@Base+0x2b0>
   21bc8:	cmp	r0, #3
   21bcc:	beq	21e90 <myhtml_insertion_mode_in_foreign_content@@Base+0x318>
   21bd0:	cmp	r0, #1
   21bd4:	beq	21e40 <myhtml_insertion_mode_in_foreign_content@@Base+0x2c8>
   21bd8:	cmp	r0, #36	; 0x24
   21bdc:	beq	21db4 <myhtml_insertion_mode_in_foreign_content@@Base+0x23c>
   21be0:	b	21dc0 <myhtml_insertion_mode_in_foreign_content@@Base+0x248>
   21be4:	mov	r0, r4
   21be8:	bl	11854 <myhtml_tree_current_node@plt>
   21bec:	mov	r1, r0
   21bf0:	ldr	r0, [r5]
   21bf4:	cmp	r0, #112	; 0x70
   21bf8:	bne	21c24 <myhtml_insertion_mode_in_foreign_content@@Base+0xac>
   21bfc:	ldr	r0, [r1, #4]
   21c00:	cmp	r0, #112	; 0x70
   21c04:	bne	21c24 <myhtml_insertion_mode_in_foreign_content@@Base+0xac>
   21c08:	ldr	r0, [r1, #8]
   21c0c:	cmp	r0, #3
   21c10:	bne	21c24 <myhtml_insertion_mode_in_foreign_content@@Base+0xac>
   21c14:	mov	r0, r4
   21c18:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   21c1c:	mov	r6, #0
   21c20:	b	21e90 <myhtml_insertion_mode_in_foreign_content@@Base+0x318>
   21c24:	mov	r0, r4
   21c28:	mov	r2, r5
   21c2c:	pop	{r4, r5, r6, sl, fp, lr}
   21c30:	b	21a44 <myhtml_insertion_mode_in_foreign_content_end_other@@Base>
   21c34:	sub	r1, r0, #42	; 0x2a
   21c38:	cmp	r1, #53	; 0x35
   21c3c:	bhi	21d88 <myhtml_insertion_mode_in_foreign_content@@Base+0x210>
   21c40:	add	r0, pc, #4
   21c44:	ldr	r1, [r0, r1, lsl #2]
   21c48:	add	pc, r0, r1
   21c4c:	andeq	r0, r0, r8, ror #2
   21c50:	andeq	r0, r0, r8, ror #2
   21c54:	andeq	r0, r0, r8, ror #2
   21c58:	andeq	r0, r0, r8, ror #2
   21c5c:	andeq	r0, r0, r8, ror #2
   21c60:	andeq	r0, r0, r4, ror r1
   21c64:	andeq	r0, r0, r4, ror r1
   21c68:	andeq	r0, r0, r4, ror r1
   21c6c:	ldrdeq	r0, [r0], -r8
   21c70:	andeq	r0, r0, r4, ror r1
   21c74:	andeq	r0, r0, r4, ror r1
   21c78:	andeq	r0, r0, r4, ror r1
   21c7c:	andeq	r0, r0, r4, ror r1
   21c80:	andeq	r0, r0, r8, ror #2
   21c84:	andeq	r0, r0, r8, ror #2
   21c88:	andeq	r0, r0, r8, ror #2
   21c8c:	andeq	r0, r0, r8, ror #2
   21c90:	andeq	r0, r0, r8, ror #2
   21c94:	andeq	r0, r0, r8, ror #2
   21c98:	andeq	r0, r0, r8, ror #2
   21c9c:	andeq	r0, r0, r4, ror r1
   21ca0:	andeq	r0, r0, r4, ror r1
   21ca4:	andeq	r0, r0, r8, ror #2
   21ca8:	andeq	r0, r0, r4, ror r1
   21cac:	andeq	r0, r0, r8, ror #2
   21cb0:	andeq	r0, r0, r4, ror r1
   21cb4:	andeq	r0, r0, r4, ror r1
   21cb8:	andeq	r0, r0, r8, ror #2
   21cbc:	andeq	r0, r0, r4, ror r1
   21cc0:	andeq	r0, r0, r4, ror r1
   21cc4:	andeq	r0, r0, r4, ror r1
   21cc8:	andeq	r0, r0, r4, ror r1
   21ccc:	andeq	r0, r0, r4, ror r1
   21cd0:	andeq	r0, r0, r4, ror r1
   21cd4:	andeq	r0, r0, r4, ror r1
   21cd8:	andeq	r0, r0, r8, ror #2
   21cdc:	andeq	r0, r0, r4, ror r1
   21ce0:	andeq	r0, r0, r8, ror #2
   21ce4:	andeq	r0, r0, r4, ror r1
   21ce8:	andeq	r0, r0, r4, ror r1
   21cec:	andeq	r0, r0, r4, ror r1
   21cf0:	andeq	r0, r0, r4, ror r1
   21cf4:	andeq	r0, r0, r8, ror #2
   21cf8:	andeq	r0, r0, r4, ror r1
   21cfc:	andeq	r0, r0, r8, ror #2
   21d00:	andeq	r0, r0, r4, ror r1
   21d04:	andeq	r0, r0, r4, ror r1
   21d08:	andeq	r0, r0, r4, ror r1
   21d0c:	andeq	r0, r0, r8, ror #2
   21d10:	andeq	r0, r0, r4, ror r1
   21d14:	andeq	r0, r0, r4, ror r1
   21d18:	andeq	r0, r0, r4, ror r1
   21d1c:	andeq	r0, r0, r4, ror r1
   21d20:	andeq	r0, r0, r8, ror #2
   21d24:	ldr	r0, [r4, #8]
   21d28:	mov	r1, r5
   21d2c:	bl	118b4 <myhtml_token_node_wait_for_done@plt>
   21d30:	ldr	r1, [pc, #352]	; 21e98 <myhtml_insertion_mode_in_foreign_content@@Base+0x320>
   21d34:	mov	r0, r5
   21d38:	mov	r2, #5
   21d3c:	add	r1, pc, r1
   21d40:	bl	11f80 <myhtml_token_attr_by_name@plt>
   21d44:	cmp	r0, #0
   21d48:	bne	21db4 <myhtml_insertion_mode_in_foreign_content@@Base+0x23c>
   21d4c:	ldr	r1, [pc, #328]	; 21e9c <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   21d50:	mov	r0, r5
   21d54:	mov	r2, #4
   21d58:	add	r1, pc, r1
   21d5c:	bl	11f80 <myhtml_token_attr_by_name@plt>
   21d60:	cmp	r0, #0
   21d64:	bne	21db4 <myhtml_insertion_mode_in_foreign_content@@Base+0x23c>
   21d68:	ldr	r1, [pc, #304]	; 21ea0 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   21d6c:	mov	r0, r5
   21d70:	mov	r2, #4
   21d74:	add	r1, pc, r1
   21d78:	bl	11f80 <myhtml_token_attr_by_name@plt>
   21d7c:	cmp	r0, #0
   21d80:	bne	21db4 <myhtml_insertion_mode_in_foreign_content@@Base+0x23c>
   21d84:	b	21dc0 <myhtml_insertion_mode_in_foreign_content@@Base+0x248>
   21d88:	sub	r1, r0, #99	; 0x63
   21d8c:	cmp	r1, #26
   21d90:	bhi	21da8 <myhtml_insertion_mode_in_foreign_content@@Base+0x230>
   21d94:	movw	r3, #3081	; 0xc09
   21d98:	mov	r2, #1
   21d9c:	movt	r3, #1373	; 0x55d
   21da0:	tst	r3, r2, lsl r1
   21da4:	bne	21db4 <myhtml_insertion_mode_in_foreign_content@@Base+0x23c>
   21da8:	sub	r0, r0, #137	; 0x89
   21dac:	cmp	r0, #4
   21db0:	bcs	21dc0 <myhtml_insertion_mode_in_foreign_content@@Base+0x248>
   21db4:	ldr	r0, [r4, #88]	; 0x58
   21db8:	cmp	r0, #0
   21dbc:	beq	21dd0 <myhtml_insertion_mode_in_foreign_content@@Base+0x258>
   21dc0:	mov	r0, r4
   21dc4:	mov	r1, r5
   21dc8:	pop	{r4, r5, r6, sl, fp, lr}
   21dcc:	b	21ac8 <myhtml_insertion_mode_in_foreign_content_start_other@@Base>
   21dd0:	mov	r6, #1
   21dd4:	mov	r0, r4
   21dd8:	bl	11470 <myhtml_tree_open_elements_pop@plt>
   21ddc:	mov	r0, r4
   21de0:	bl	11854 <myhtml_tree_current_node@plt>
   21de4:	cmp	r0, #0
   21de8:	beq	21e90 <myhtml_insertion_mode_in_foreign_content@@Base+0x318>
   21dec:	mov	r5, r0
   21df0:	mov	r0, r4
   21df4:	mov	r1, r5
   21df8:	bl	11368 <myhtml_tree_is_mathml_integration_point@plt>
   21dfc:	cmp	r0, #0
   21e00:	bne	21e90 <myhtml_insertion_mode_in_foreign_content@@Base+0x318>
   21e04:	mov	r0, r4
   21e08:	mov	r1, r5
   21e0c:	bl	114c4 <myhtml_tree_is_html_integration_point@plt>
   21e10:	cmp	r0, #0
   21e14:	bne	21e90 <myhtml_insertion_mode_in_foreign_content@@Base+0x318>
   21e18:	ldr	r0, [r5, #8]
   21e1c:	cmp	r0, #1
   21e20:	bne	21dd4 <myhtml_insertion_mode_in_foreign_content@@Base+0x25c>
   21e24:	b	21e90 <myhtml_insertion_mode_in_foreign_content@@Base+0x318>
   21e28:	mov	r0, r4
   21e2c:	mov	r1, r5
   21e30:	mov	r2, #0
   21e34:	mov	r6, #0
   21e38:	bl	11524 <myhtml_tree_node_insert_comment@plt>
   21e3c:	b	21e90 <myhtml_insertion_mode_in_foreign_content@@Base+0x318>
   21e40:	ldr	r0, [r5, #48]	; 0x30
   21e44:	tst	r0, #2048	; 0x800
   21e48:	beq	21e64 <myhtml_insertion_mode_in_foreign_content@@Base+0x2ec>
   21e4c:	ldr	r0, [r4, #8]
   21e50:	mov	r1, r5
   21e54:	bl	118b4 <myhtml_token_node_wait_for_done@plt>
   21e58:	mov	r0, r4
   21e5c:	mov	r1, r5
   21e60:	bl	115c0 <myhtml_token_set_replacement_character_for_null_token@plt>
   21e64:	mov	r0, r4
   21e68:	mov	r1, r5
   21e6c:	bl	112c0 <myhtml_tree_node_insert_text@plt>
   21e70:	ldr	r0, [r5, #48]	; 0x30
   21e74:	tst	r0, #8
   21e78:	bne	21e90 <myhtml_insertion_mode_in_foreign_content@@Base+0x318>
   21e7c:	ldr	r0, [r4, #180]	; 0xb4
   21e80:	ldr	r1, [r4, #180]	; 0xb4
   21e84:	and	r0, r0, #2
   21e88:	eor	r0, r1, r0
   21e8c:	str	r0, [r4, #180]	; 0xb4
   21e90:	mov	r0, r6
   21e94:	pop	{r4, r5, r6, sl, fp, pc}
   21e98:	andeq	r8, sp, sl, asr #31
   21e9c:	muleq	sp, r3, r5
   21ea0:	muleq	sp, r8, pc	; <UNPREDICTABLE>

00021ea4 <myhtml_rules_check_for_first_newline@@Base>:
   21ea4:	push	{r4, r5, r6, sl, fp, lr}
   21ea8:	add	fp, sp, #16
   21eac:	mov	r5, r0
   21eb0:	ldr	r0, [r0, #180]	; 0xb4
   21eb4:	mov	r4, #0
   21eb8:	tst	r0, #64	; 0x40
   21ebc:	beq	21f34 <myhtml_rules_check_for_first_newline@@Base+0x90>
   21ec0:	ldr	r0, [r5, #180]	; 0xb4
   21ec4:	tst	r0, #128	; 0x80
   21ec8:	beq	21f20 <myhtml_rules_check_for_first_newline@@Base+0x7c>
   21ecc:	ldr	r0, [r1]
   21ed0:	mov	r6, r1
   21ed4:	cmp	r0, #1
   21ed8:	bne	21f20 <myhtml_rules_check_for_first_newline@@Base+0x7c>
   21edc:	ldr	r0, [r5, #8]
   21ee0:	mov	r1, r6
   21ee4:	bl	118b4 <myhtml_token_node_wait_for_done@plt>
   21ee8:	ldr	r0, [r6, #12]
   21eec:	cmp	r0, #0
   21ef0:	beq	21f50 <myhtml_rules_check_for_first_newline@@Base+0xac>
   21ef4:	ldr	r0, [r6, #4]
   21ef8:	ldrb	r1, [r0]
   21efc:	cmp	r1, #10
   21f00:	bne	21f20 <myhtml_rules_check_for_first_newline@@Base+0x7c>
   21f04:	mov	r1, #1
   21f08:	bl	11d7c <mchar_async_crop_first_chars_without_cache@plt>
   21f0c:	str	r0, [r6, #4]
   21f10:	ldr	r0, [r6, #12]
   21f14:	subs	r0, r0, #1
   21f18:	str	r0, [r6, #12]
   21f1c:	beq	21f3c <myhtml_rules_check_for_first_newline@@Base+0x98>
   21f20:	ldr	r0, [r5, #180]	; 0xb4
   21f24:	ldr	r1, [r5, #180]	; 0xb4
   21f28:	and	r0, r0, #64	; 0x40
   21f2c:	eor	r0, r1, r0
   21f30:	str	r0, [r5, #180]	; 0xb4
   21f34:	mov	r0, r4
   21f38:	pop	{r4, r5, r6, sl, fp, pc}
   21f3c:	ldr	r0, [r5, #180]	; 0xb4
   21f40:	ldr	r1, [r5, #180]	; 0xb4
   21f44:	and	r0, r0, #64	; 0x40
   21f48:	eor	r0, r1, r0
   21f4c:	str	r0, [r5, #180]	; 0xb4
   21f50:	mov	r4, #1
   21f54:	b	21f34 <myhtml_rules_check_for_first_newline@@Base+0x90>

00021f58 <myhtml_rules_tree_dispatcher@@Base>:
   21f58:	push	{r4, r5, r6, sl, fp, lr}
   21f5c:	add	fp, sp, #16
   21f60:	mov	r4, r1
   21f64:	mov	r5, r0
   21f68:	bl	11e48 <myhtml_rules_check_for_first_newline@plt>
   21f6c:	cmp	r0, #0
   21f70:	bne	22084 <myhtml_rules_tree_dispatcher@@Base+0x12c>
   21f74:	ldr	r0, [r5, #164]	; 0xa4
   21f78:	cmp	r0, #0
   21f7c:	movne	r0, #0
   21f80:	strne	r0, [r5, #164]	; 0xa4
   21f84:	mov	r0, r5
   21f88:	bl	11e3c <myhtml_tree_adjusted_current_node@plt>
   21f8c:	mov	r6, r0
   21f90:	ldr	r0, [r5, #128]	; 0x80
   21f94:	ldr	r0, [r0, #4]
   21f98:	cmp	r0, #0
   21f9c:	beq	22058 <myhtml_rules_tree_dispatcher@@Base+0x100>
   21fa0:	ldr	r0, [r6, #8]
   21fa4:	cmp	r0, #1
   21fa8:	beq	22058 <myhtml_rules_tree_dispatcher@@Base+0x100>
   21fac:	mov	r0, r5
   21fb0:	mov	r1, r6
   21fb4:	bl	11368 <myhtml_tree_is_mathml_integration_point@plt>
   21fb8:	cmp	r0, #0
   21fbc:	beq	21fd0 <myhtml_rules_tree_dispatcher@@Base+0x78>
   21fc0:	ldr	r0, [r4]
   21fc4:	cmp	r0, #221	; 0xdd
   21fc8:	cmpne	r0, #226	; 0xe2
   21fcc:	bne	2204c <myhtml_rules_tree_dispatcher@@Base+0xf4>
   21fd0:	ldr	r0, [r6, #4]
   21fd4:	cmp	r0, #8
   21fd8:	bne	22000 <myhtml_rules_tree_dispatcher@@Base+0xa8>
   21fdc:	ldr	r0, [r6, #8]
   21fe0:	cmp	r0, #2
   21fe4:	bne	22000 <myhtml_rules_tree_dispatcher@@Base+0xa8>
   21fe8:	ldr	r0, [r4]
   21fec:	cmp	r0, #124	; 0x7c
   21ff0:	bne	22000 <myhtml_rules_tree_dispatcher@@Base+0xa8>
   21ff4:	ldr	r0, [r4, #48]	; 0x30
   21ff8:	tst	r0, #1
   21ffc:	beq	22058 <myhtml_rules_tree_dispatcher@@Base+0x100>
   22000:	mov	r0, r5
   22004:	mov	r1, r6
   22008:	bl	114c4 <myhtml_tree_is_html_integration_point@plt>
   2200c:	cmp	r0, #0
   22010:	beq	22030 <myhtml_rules_tree_dispatcher@@Base+0xd8>
   22014:	ldr	r0, [r4, #48]	; 0x30
   22018:	tst	r0, #1
   2201c:	beq	22058 <myhtml_rules_tree_dispatcher@@Base+0x100>
   22020:	ldr	r0, [r4]
   22024:	cmp	r0, #1
   22028:	bne	22034 <myhtml_rules_tree_dispatcher@@Base+0xdc>
   2202c:	b	22058 <myhtml_rules_tree_dispatcher@@Base+0x100>
   22030:	ldr	r0, [r4]
   22034:	cmp	r0, #251	; 0xfb
   22038:	beq	22058 <myhtml_rules_tree_dispatcher@@Base+0x100>
   2203c:	mov	r0, r5
   22040:	mov	r1, r4
   22044:	bl	1117c <myhtml_insertion_mode_in_foreign_content@plt>
   22048:	b	22074 <myhtml_rules_tree_dispatcher@@Base+0x11c>
   2204c:	ldr	r0, [r4, #48]	; 0x30
   22050:	tst	r0, #1
   22054:	bne	21fd0 <myhtml_rules_tree_dispatcher@@Base+0x78>
   22058:	ldr	r0, [r5]
   2205c:	ldr	r1, [r5, #168]	; 0xa8
   22060:	ldr	r0, [r0, #28]
   22064:	ldr	r2, [r0, r1, lsl #2]
   22068:	mov	r0, r5
   2206c:	mov	r1, r4
   22070:	blx	r2
   22074:	mov	r1, r0
   22078:	mov	r0, #1
   2207c:	cmp	r1, #0
   22080:	bne	2208c <myhtml_rules_tree_dispatcher@@Base+0x134>
   22084:	mov	r0, #0
   22088:	str	r4, [r5, #152]	; 0x98
   2208c:	pop	{r4, r5, r6, sl, fp, pc}

00022090 <myhtml_rules_init@@Base>:
   22090:	push	{r4, sl, fp, lr}
   22094:	add	fp, sp, #8
   22098:	mov	r4, r0
   2209c:	mov	r0, #92	; 0x5c
   220a0:	bl	11dac <mycore_malloc@plt>
   220a4:	str	r0, [r4, #28]!
   220a8:	cmp	r0, #0
   220ac:	beq	22224 <myhtml_rules_init@@Base+0x194>
   220b0:	ldr	r1, [pc, #372]	; 2222c <myhtml_rules_init@@Base+0x19c>
   220b4:	ldr	r1, [pc, r1]
   220b8:	str	r1, [r0]
   220bc:	ldr	r0, [r4]
   220c0:	ldr	r1, [pc, #360]	; 22230 <myhtml_rules_init@@Base+0x1a0>
   220c4:	ldr	r1, [pc, r1]
   220c8:	str	r1, [r0, #4]
   220cc:	ldr	r0, [r4]
   220d0:	ldr	r1, [pc, #348]	; 22234 <myhtml_rules_init@@Base+0x1a4>
   220d4:	ldr	r1, [pc, r1]
   220d8:	str	r1, [r0, #8]
   220dc:	ldr	r0, [r4]
   220e0:	ldr	r1, [pc, #336]	; 22238 <myhtml_rules_init@@Base+0x1a8>
   220e4:	ldr	r1, [pc, r1]
   220e8:	str	r1, [r0, #12]
   220ec:	ldr	r0, [r4]
   220f0:	ldr	r1, [pc, #324]	; 2223c <myhtml_rules_init@@Base+0x1ac>
   220f4:	ldr	r1, [pc, r1]
   220f8:	str	r1, [r0, #16]
   220fc:	ldr	r0, [r4]
   22100:	ldr	r1, [pc, #312]	; 22240 <myhtml_rules_init@@Base+0x1b0>
   22104:	ldr	r1, [pc, r1]
   22108:	str	r1, [r0, #20]
   2210c:	ldr	r0, [r4]
   22110:	ldr	r1, [pc, #300]	; 22244 <myhtml_rules_init@@Base+0x1b4>
   22114:	ldr	r1, [pc, r1]
   22118:	str	r1, [r0, #24]
   2211c:	ldr	r0, [r4]
   22120:	ldr	r1, [pc, #288]	; 22248 <myhtml_rules_init@@Base+0x1b8>
   22124:	ldr	r1, [pc, r1]
   22128:	str	r1, [r0, #28]
   2212c:	ldr	r0, [r4]
   22130:	ldr	r1, [pc, #276]	; 2224c <myhtml_rules_init@@Base+0x1bc>
   22134:	ldr	r1, [pc, r1]
   22138:	str	r1, [r0, #32]
   2213c:	ldr	r0, [r4]
   22140:	ldr	r1, [pc, #264]	; 22250 <myhtml_rules_init@@Base+0x1c0>
   22144:	ldr	r1, [pc, r1]
   22148:	str	r1, [r0, #36]	; 0x24
   2214c:	ldr	r0, [r4]
   22150:	ldr	r1, [pc, #252]	; 22254 <myhtml_rules_init@@Base+0x1c4>
   22154:	ldr	r1, [pc, r1]
   22158:	str	r1, [r0, #40]	; 0x28
   2215c:	ldr	r0, [r4]
   22160:	ldr	r1, [pc, #240]	; 22258 <myhtml_rules_init@@Base+0x1c8>
   22164:	ldr	r1, [pc, r1]
   22168:	str	r1, [r0, #44]	; 0x2c
   2216c:	ldr	r0, [r4]
   22170:	ldr	r1, [pc, #228]	; 2225c <myhtml_rules_init@@Base+0x1cc>
   22174:	ldr	r1, [pc, r1]
   22178:	str	r1, [r0, #48]	; 0x30
   2217c:	ldr	r0, [r4]
   22180:	ldr	r1, [pc, #216]	; 22260 <myhtml_rules_init@@Base+0x1d0>
   22184:	ldr	r1, [pc, r1]
   22188:	str	r1, [r0, #52]	; 0x34
   2218c:	ldr	r0, [r4]
   22190:	ldr	r1, [pc, #204]	; 22264 <myhtml_rules_init@@Base+0x1d4>
   22194:	ldr	r1, [pc, r1]
   22198:	str	r1, [r0, #56]	; 0x38
   2219c:	ldr	r0, [r4]
   221a0:	ldr	r1, [pc, #192]	; 22268 <myhtml_rules_init@@Base+0x1d8>
   221a4:	ldr	r1, [pc, r1]
   221a8:	str	r1, [r0, #60]	; 0x3c
   221ac:	ldr	r0, [r4]
   221b0:	ldr	r1, [pc, #180]	; 2226c <myhtml_rules_init@@Base+0x1dc>
   221b4:	ldr	r1, [pc, r1]
   221b8:	str	r1, [r0, #64]	; 0x40
   221bc:	ldr	r0, [r4]
   221c0:	ldr	r1, [pc, #168]	; 22270 <myhtml_rules_init@@Base+0x1e0>
   221c4:	ldr	r1, [pc, r1]
   221c8:	str	r1, [r0, #68]	; 0x44
   221cc:	ldr	r0, [r4]
   221d0:	ldr	r1, [pc, #156]	; 22274 <myhtml_rules_init@@Base+0x1e4>
   221d4:	ldr	r1, [pc, r1]
   221d8:	str	r1, [r0, #72]	; 0x48
   221dc:	ldr	r0, [r4]
   221e0:	ldr	r1, [pc, #144]	; 22278 <myhtml_rules_init@@Base+0x1e8>
   221e4:	ldr	r1, [pc, r1]
   221e8:	str	r1, [r0, #76]	; 0x4c
   221ec:	ldr	r0, [r4]
   221f0:	ldr	r1, [pc, #132]	; 2227c <myhtml_rules_init@@Base+0x1ec>
   221f4:	ldr	r1, [pc, r1]
   221f8:	str	r1, [r0, #80]	; 0x50
   221fc:	ldr	r0, [r4]
   22200:	ldr	r1, [pc, #120]	; 22280 <myhtml_rules_init@@Base+0x1f0>
   22204:	ldr	r1, [pc, r1]
   22208:	str	r1, [r0, #84]	; 0x54
   2220c:	ldr	r0, [r4]
   22210:	ldr	r1, [pc, #108]	; 22284 <myhtml_rules_init@@Base+0x1f4>
   22214:	ldr	r1, [pc, r1]
   22218:	str	r1, [r0, #88]	; 0x58
   2221c:	mov	r0, #0
   22220:	pop	{r4, sl, fp, pc}
   22224:	movw	r0, #36964	; 0x9064
   22228:	pop	{r4, sl, fp, pc}
   2222c:	andeq	r3, pc, r4, ror #12
   22230:	andeq	r3, pc, r0, lsl #15
   22234:	andeq	r3, pc, ip, ror r7	; <UNPREDICTABLE>
   22238:			; <UNDEFINED> instruction: 0x000f35b8
   2223c:	strdeq	r3, [pc], -ip
   22240:	andeq	r3, pc, r8, lsl r7	; <UNPREDICTABLE>
   22244:	andeq	r3, pc, r4, ror r6	; <UNPREDICTABLE>
   22248:	andeq	r3, pc, ip, asr #11
   2224c:	muleq	pc, r8, r5	; <UNPREDICTABLE>
   22250:	muleq	pc, r0, r6	; <UNPREDICTABLE>
   22254:	andeq	r3, pc, r0, asr #13
   22258:	andeq	r3, pc, r0, lsr #13
   2225c:	muleq	pc, r8, r6	; <UNPREDICTABLE>
   22260:	andeq	r3, pc, r4, lsl r5	; <UNPREDICTABLE>
   22264:	andeq	r3, pc, r0, lsl #14
   22268:	andeq	r3, pc, r4, lsl #11
   2226c:	ldrdeq	r3, [pc], -r8
   22270:	andeq	r3, pc, ip, lsl #9
   22274:	andeq	r3, pc, r8, ror #13
   22278:	andeq	r3, pc, ip, ror r6	; <UNPREDICTABLE>
   2227c:	andeq	r3, pc, r0, lsr #8
   22280:	andeq	r3, pc, ip, lsl #8
   22284:	strdeq	r3, [pc], -ip

00022288 <myhtml_serialization@@Base>:
   22288:	b	2228c <myhtml_serialization_tree_buffer@@Base>

0002228c <myhtml_serialization_tree_buffer@@Base>:
   2228c:	push	{r4, r5, r6, sl, fp, lr}
   22290:	add	fp, sp, #16
   22294:	cmp	r1, #0
   22298:	beq	222e8 <myhtml_serialization_tree_buffer@@Base+0x5c>
   2229c:	mov	r5, r0
   222a0:	ldr	r0, [r1]
   222a4:	mov	r4, r1
   222a8:	cmp	r0, #0
   222ac:	bne	222d0 <myhtml_serialization_tree_buffer@@Base+0x44>
   222b0:	movw	r0, #20490	; 0x500a
   222b4:	mov	r6, #0
   222b8:	stmib	r4, {r0, r6}
   222bc:	movw	r0, #20490	; 0x500a
   222c0:	bl	11dac <mycore_malloc@plt>
   222c4:	cmp	r0, #0
   222c8:	str	r0, [r4]
   222cc:	beq	222f0 <myhtml_serialization_tree_buffer@@Base+0x64>
   222d0:	ldr	r1, [pc, #36]	; 222fc <myhtml_serialization_tree_buffer@@Base+0x70>
   222d4:	mov	r0, r5
   222d8:	mov	r2, r4
   222dc:	ldr	r1, [pc, r1]
   222e0:	pop	{r4, r5, r6, sl, fp, lr}
   222e4:	b	22370 <myhtml_serialization_tree_callback@@Base>
   222e8:	mov	r0, #0
   222ec:	pop	{r4, r5, r6, sl, fp, pc}
   222f0:	mov	r0, #2
   222f4:	str	r6, [r4, #4]
   222f8:	pop	{r4, r5, r6, sl, fp, pc}
   222fc:			; <UNDEFINED> instruction: 0x000f34bc

00022300 <myhtml_serialization_node@@Base>:
   22300:	b	22304 <myhtml_serialization_node_buffer@@Base>

00022304 <myhtml_serialization_node_buffer@@Base>:
   22304:	push	{r4, r5, r6, sl, fp, lr}
   22308:	add	fp, sp, #16
   2230c:	cmp	r1, #0
   22310:	beq	22364 <myhtml_serialization_node_buffer@@Base+0x60>
   22314:	mov	r5, r0
   22318:	ldr	r0, [r1]
   2231c:	mov	r4, r1
   22320:	cmp	r0, #0
   22324:	bne	22348 <myhtml_serialization_node_buffer@@Base+0x44>
   22328:	mov	r0, #2048	; 0x800
   2232c:	mov	r6, #0
   22330:	stmib	r4, {r0, r6}
   22334:	mov	r0, #2048	; 0x800
   22338:	bl	11dac <mycore_malloc@plt>
   2233c:	cmp	r0, #0
   22340:	str	r0, [r4]
   22344:	beq	22360 <myhtml_serialization_node_buffer@@Base+0x5c>
   22348:	ldr	r1, [pc, #28]	; 2236c <myhtml_serialization_node_buffer@@Base+0x68>
   2234c:	mov	r0, r5
   22350:	mov	r2, r4
   22354:	ldr	r1, [pc, r1]
   22358:	pop	{r4, r5, r6, sl, fp, lr}
   2235c:	b	22468 <myhtml_serialization_node_callback@@Base>
   22360:	str	r6, [r4, #4]
   22364:	mov	r0, #0
   22368:	pop	{r4, r5, r6, sl, fp, pc}
   2236c:	andeq	r3, pc, r4, asr #8

00022370 <myhtml_serialization_tree_callback@@Base>:
   22370:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   22374:	add	fp, sp, #24
   22378:	cmp	r0, #0
   2237c:	beq	2245c <myhtml_serialization_tree_callback@@Base+0xec>
   22380:	mov	r7, r0
   22384:	ldr	r0, [r0, #40]	; 0x28
   22388:	mov	r9, r2
   2238c:	mov	r5, r1
   22390:	mov	r6, r7
   22394:	cmp	r0, #0
   22398:	beq	223b8 <myhtml_serialization_tree_callback@@Base+0x48>
   2239c:	ldr	r0, [r0, #84]	; 0x54
   223a0:	mov	r6, r7
   223a4:	cmp	r0, r7
   223a8:	bne	223b8 <myhtml_serialization_tree_callback@@Base+0x48>
   223ac:	ldr	r6, [r7, #20]
   223b0:	cmp	r6, #0
   223b4:	beq	2245c <myhtml_serialization_tree_callback@@Base+0xec>
   223b8:	mov	r8, #2
   223bc:	mov	r0, r6
   223c0:	mov	r1, r5
   223c4:	mov	r2, r9
   223c8:	bl	11920 <myhtml_serialization_node_callback@plt>
   223cc:	cmp	r0, #0
   223d0:	bne	22460 <myhtml_serialization_tree_callback@@Base+0xf0>
   223d4:	ldr	r0, [r6, #20]
   223d8:	cmp	r0, #0
   223dc:	beq	223fc <myhtml_serialization_tree_callback@@Base+0x8c>
   223e0:	cmp	r0, #0
   223e4:	mov	r6, r0
   223e8:	bne	223bc <myhtml_serialization_tree_callback@@Base+0x4c>
   223ec:	b	2245c <myhtml_serialization_tree_callback@@Base+0xec>
   223f0:	cmp	r0, #0
   223f4:	bne	22460 <myhtml_serialization_tree_callback@@Base+0xf0>
   223f8:	ldr	r6, [r6, #24]
   223fc:	cmp	r6, r7
   22400:	beq	22430 <myhtml_serialization_tree_callback@@Base+0xc0>
   22404:	ldr	r4, [r6, #16]
   22408:	mov	r0, r6
   2240c:	mov	r1, r5
   22410:	mov	r2, r9
   22414:	bl	22ac0 <myhtml_serialization_node_callback@@Base+0x658>
   22418:	cmp	r4, #0
   2241c:	beq	223f0 <myhtml_serialization_tree_callback@@Base+0x80>
   22420:	cmp	r0, #0
   22424:	bne	22460 <myhtml_serialization_tree_callback@@Base+0xf0>
   22428:	ldr	r0, [r6, #16]
   2242c:	b	223e0 <myhtml_serialization_tree_callback@@Base+0x70>
   22430:	ldr	r0, [r7, #40]	; 0x28
   22434:	ldr	r0, [r0, #84]	; 0x54
   22438:	cmp	r0, r7
   2243c:	beq	2245c <myhtml_serialization_tree_callback@@Base+0xec>
   22440:	mov	r0, r7
   22444:	mov	r1, r5
   22448:	mov	r2, r9
   2244c:	bl	22ac0 <myhtml_serialization_node_callback@@Base+0x658>
   22450:	cmp	r0, #0
   22454:	moveq	r8, #0
   22458:	b	22460 <myhtml_serialization_tree_callback@@Base+0xf0>
   2245c:	mov	r8, #0
   22460:	mov	r0, r8
   22464:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00022468 <myhtml_serialization_node_callback@@Base>:
   22468:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2246c:	add	fp, sp, #28
   22470:	sub	sp, sp, #12
   22474:	mov	r4, r1
   22478:	ldr	r1, [r0, #4]
   2247c:	mov	r5, r2
   22480:	mov	r7, r0
   22484:	cmp	r1, #3
   22488:	beq	224f8 <myhtml_serialization_node_callback@@Base+0x90>
   2248c:	cmp	r1, #2
   22490:	beq	22630 <myhtml_serialization_node_callback@@Base+0x1c8>
   22494:	cmp	r1, #1
   22498:	bne	22694 <myhtml_serialization_node_callback@@Base+0x22c>
   2249c:	ldr	r1, [r7, #32]
   224a0:	cmp	r1, #0
   224a4:	beq	22970 <myhtml_serialization_node_callback@@Base+0x508>
   224a8:	ldr	r0, [r1, #4]
   224ac:	cmp	r0, #0
   224b0:	beq	22970 <myhtml_serialization_node_callback@@Base+0x508>
   224b4:	ldr	r2, [r7, #24]
   224b8:	cmp	r2, #0
   224bc:	beq	226e0 <myhtml_serialization_node_callback@@Base+0x278>
   224c0:	ldr	r2, [r2, #4]
   224c4:	sub	r3, r2, #91	; 0x5b
   224c8:	cmp	r3, #29
   224cc:	bhi	224e4 <myhtml_serialization_node_callback@@Base+0x7c>
   224d0:	movw	r6, #1027	; 0x403
   224d4:	mov	r7, #1
   224d8:	movt	r6, #8224	; 0x2020
   224dc:	tst	r6, r7, lsl r3
   224e0:	bne	224f0 <myhtml_serialization_node_callback@@Base+0x88>
   224e4:	cmp	r2, #143	; 0x8f
   224e8:	cmpne	r2, #67	; 0x43
   224ec:	bne	226e0 <myhtml_serialization_node_callback@@Base+0x278>
   224f0:	ldr	r1, [r1, #12]
   224f4:	b	2295c <myhtml_serialization_node_callback@@Base+0x4f4>
   224f8:	ldr	r0, [pc, #1384]	; 22a68 <myhtml_serialization_node_callback@@Base+0x600>
   224fc:	mov	r1, #9
   22500:	mov	r2, r5
   22504:	add	r0, pc, r0
   22508:	blx	r4
   2250c:	mov	r6, #2
   22510:	cmp	r0, #0
   22514:	bne	22974 <myhtml_serialization_node_callback@@Base+0x50c>
   22518:	ldr	r0, [pc, #1356]	; 22a6c <myhtml_serialization_node_callback@@Base+0x604>
   2251c:	mov	r1, #1
   22520:	mov	r2, r5
   22524:	add	r0, pc, r0
   22528:	blx	r4
   2252c:	cmp	r0, #0
   22530:	bne	22974 <myhtml_serialization_node_callback@@Base+0x50c>
   22534:	ldr	r0, [r7, #32]
   22538:	cmp	r0, #0
   2253c:	beq	22a34 <myhtml_serialization_node_callback@@Base+0x5cc>
   22540:	ldr	r7, [r0, #40]	; 0x28
   22544:	cmp	r7, #0
   22548:	beq	22a34 <myhtml_serialization_node_callback@@Base+0x5cc>
   2254c:	ldr	r0, [r7, #8]
   22550:	cmp	r0, #0
   22554:	beq	22a34 <myhtml_serialization_node_callback@@Base+0x5cc>
   22558:	ldr	r1, [r7, #16]
   2255c:	cmp	r1, #0
   22560:	beq	22a34 <myhtml_serialization_node_callback@@Base+0x5cc>
   22564:	mov	r2, r5
   22568:	blx	r4
   2256c:	cmp	r0, #0
   22570:	bne	22974 <myhtml_serialization_node_callback@@Base+0x50c>
   22574:	ldr	r7, [r7]
   22578:	cmp	r7, #0
   2257c:	beq	22a34 <myhtml_serialization_node_callback@@Base+0x5cc>
   22580:	ldr	r0, [r7, #36]	; 0x24
   22584:	cmp	r0, #6
   22588:	bne	22a34 <myhtml_serialization_node_callback@@Base+0x5cc>
   2258c:	ldr	r0, [r7, #28]
   22590:	ldr	r1, [pc, #1240]	; 22a70 <myhtml_serialization_node_callback@@Base+0x608>
   22594:	add	r1, pc, r1
   22598:	bl	11794 <mycore_strcasecmp@plt>
   2259c:	cmp	r0, #0
   225a0:	beq	22980 <myhtml_serialization_node_callback@@Base+0x518>
   225a4:	ldr	r0, [r7, #28]
   225a8:	ldr	r1, [pc, #1220]	; 22a74 <myhtml_serialization_node_callback@@Base+0x60c>
   225ac:	add	r1, pc, r1
   225b0:	bl	11794 <mycore_strcasecmp@plt>
   225b4:	cmp	r0, #0
   225b8:	bne	22a34 <myhtml_serialization_node_callback@@Base+0x5cc>
   225bc:	ldr	r7, [r7]
   225c0:	cmp	r7, #0
   225c4:	beq	22a34 <myhtml_serialization_node_callback@@Base+0x5cc>
   225c8:	ldr	r0, [r7, #36]	; 0x24
   225cc:	ldr	r8, [r7]
   225d0:	cmp	r0, #0
   225d4:	beq	22a58 <myhtml_serialization_node_callback@@Base+0x5f0>
   225d8:	ldr	r0, [pc, #1176]	; 22a78 <myhtml_serialization_node_callback@@Base+0x610>
   225dc:	mov	r1, #9
   225e0:	mov	r2, r5
   225e4:	add	r0, pc, r0
   225e8:	blx	r4
   225ec:	cmp	r0, #0
   225f0:	bne	22974 <myhtml_serialization_node_callback@@Base+0x50c>
   225f4:	ldr	r0, [r7, #28]
   225f8:	ldr	r1, [r7, #36]	; 0x24
   225fc:	mov	r2, r5
   22600:	blx	r4
   22604:	cmp	r0, #0
   22608:	bne	22974 <myhtml_serialization_node_callback@@Base+0x50c>
   2260c:	ldr	r0, [pc, #1128]	; 22a7c <myhtml_serialization_node_callback@@Base+0x614>
   22610:	mov	r1, #1
   22614:	mov	r2, r5
   22618:	mov	r9, #1
   2261c:	add	r0, pc, r0
   22620:	blx	r4
   22624:	cmp	r0, #0
   22628:	bne	22974 <myhtml_serialization_node_callback@@Base+0x50c>
   2262c:	b	2298c <myhtml_serialization_node_callback@@Base+0x524>
   22630:	ldr	r0, [pc, #1064]	; 22a60 <myhtml_serialization_node_callback@@Base+0x5f8>
   22634:	mov	r1, #4
   22638:	mov	r2, r5
   2263c:	add	r0, pc, r0
   22640:	blx	r4
   22644:	mov	r6, #2
   22648:	cmp	r0, #0
   2264c:	bne	22974 <myhtml_serialization_node_callback@@Base+0x50c>
   22650:	ldr	r1, [r7, #32]
   22654:	cmp	r1, #0
   22658:	beq	2267c <myhtml_serialization_node_callback@@Base+0x214>
   2265c:	ldr	r0, [r1, #4]
   22660:	cmp	r0, #0
   22664:	beq	2267c <myhtml_serialization_node_callback@@Base+0x214>
   22668:	ldr	r1, [r1, #12]
   2266c:	mov	r2, r5
   22670:	blx	r4
   22674:	cmp	r0, #0
   22678:	bne	22974 <myhtml_serialization_node_callback@@Base+0x50c>
   2267c:	ldr	r0, [pc, #992]	; 22a64 <myhtml_serialization_node_callback@@Base+0x5fc>
   22680:	mov	r1, #3
   22684:	mov	r2, r5
   22688:	add	r0, pc, r0
   2268c:	blx	r4
   22690:	b	22968 <myhtml_serialization_node_callback@@Base+0x500>
   22694:	ldr	r0, [r7, #40]	; 0x28
   22698:	add	r2, sp, #4
   2269c:	bl	11c5c <myhtml_tag_name_by_id@plt>
   226a0:	mov	r6, r0
   226a4:	ldr	r0, [pc, #996]	; 22a90 <myhtml_serialization_node_callback@@Base+0x628>
   226a8:	mov	r1, #1
   226ac:	mov	r2, r5
   226b0:	add	r0, pc, r0
   226b4:	blx	r4
   226b8:	cmp	r0, #0
   226bc:	bne	226d8 <myhtml_serialization_node_callback@@Base+0x270>
   226c0:	ldr	r1, [sp, #4]
   226c4:	mov	r0, r6
   226c8:	mov	r2, r5
   226cc:	blx	r4
   226d0:	cmp	r0, #0
   226d4:	beq	226f4 <myhtml_serialization_node_callback@@Base+0x28c>
   226d8:	mov	r6, #2
   226dc:	b	22974 <myhtml_serialization_node_callback@@Base+0x50c>
   226e0:	ldr	r1, [r1, #12]
   226e4:	mov	r2, r4
   226e8:	mov	r3, r5
   226ec:	bl	22cd4 <myhtml_serialization_concatenate@@Base+0x90>
   226f0:	b	22964 <myhtml_serialization_node_callback@@Base+0x4fc>
   226f4:	ldr	r0, [r7, #32]
   226f8:	cmp	r0, #0
   226fc:	beq	22950 <myhtml_serialization_node_callback@@Base+0x4e8>
   22700:	ldr	r6, [r0, #40]	; 0x28
   22704:	cmp	r6, #0
   22708:	beq	22950 <myhtml_serialization_node_callback@@Base+0x4e8>
   2270c:	add	r7, sp, #8
   22710:	ldr	r0, [pc, #892]	; 22a94 <myhtml_serialization_node_callback@@Base+0x62c>
   22714:	mov	r1, #1
   22718:	mov	r2, r5
   2271c:	add	r0, pc, r0
   22720:	blx	r4
   22724:	cmp	r0, #0
   22728:	bne	226d8 <myhtml_serialization_node_callback@@Base+0x270>
   2272c:	ldr	r0, [r6, #64]	; 0x40
   22730:	cmp	r0, #4
   22734:	beq	22758 <myhtml_serialization_node_callback@@Base+0x2f0>
   22738:	cmp	r0, #6
   2273c:	beq	22918 <myhtml_serialization_node_callback@@Base+0x4b0>
   22740:	cmp	r0, #5
   22744:	bne	22774 <myhtml_serialization_node_callback@@Base+0x30c>
   22748:	ldr	r0, [pc, #840]	; 22a98 <myhtml_serialization_node_callback@@Base+0x630>
   2274c:	mov	r1, #4
   22750:	add	r0, pc, r0
   22754:	b	22764 <myhtml_serialization_node_callback@@Base+0x2fc>
   22758:	ldr	r0, [pc, #836]	; 22aa4 <myhtml_serialization_node_callback@@Base+0x63c>
   2275c:	add	r0, pc, r0
   22760:	mov	r1, #6
   22764:	mov	r2, r5
   22768:	blx	r4
   2276c:	cmp	r0, #0
   22770:	bne	226d8 <myhtml_serialization_node_callback@@Base+0x270>
   22774:	mov	r0, r6
   22778:	mov	r1, r7
   2277c:	bl	11c74 <myhtml_attribute_key@plt>
   22780:	cmp	r0, #0
   22784:	beq	2279c <myhtml_serialization_node_callback@@Base+0x334>
   22788:	ldr	r1, [sp, #8]
   2278c:	mov	r2, r5
   22790:	blx	r4
   22794:	cmp	r0, #0
   22798:	bne	226d8 <myhtml_serialization_node_callback@@Base+0x270>
   2279c:	ldr	r0, [pc, #772]	; 22aa8 <myhtml_serialization_node_callback@@Base+0x640>
   227a0:	mov	r1, #2
   227a4:	mov	r2, r5
   227a8:	add	r0, pc, r0
   227ac:	blx	r4
   227b0:	cmp	r0, #0
   227b4:	bne	226d8 <myhtml_serialization_node_callback@@Base+0x270>
   227b8:	mov	r0, r6
   227bc:	mov	r1, r7
   227c0:	bl	116f8 <myhtml_attribute_value@plt>
   227c4:	cmp	r0, #0
   227c8:	beq	228ec <myhtml_serialization_node_callback@@Base+0x484>
   227cc:	ldr	r8, [sp, #8]
   227d0:	cmp	r8, #0
   227d4:	beq	228ec <myhtml_serialization_node_callback@@Base+0x484>
   227d8:	mov	r9, r0
   227dc:	mov	sl, #0
   227e0:	mov	r1, #0
   227e4:	ldrb	r0, [r9, sl]
   227e8:	cmp	r0, #34	; 0x22
   227ec:	beq	22830 <myhtml_serialization_node_callback@@Base+0x3c8>
   227f0:	cmp	r0, #160	; 0xa0
   227f4:	beq	2285c <myhtml_serialization_node_callback@@Base+0x3f4>
   227f8:	cmp	r0, #38	; 0x26
   227fc:	bne	228bc <myhtml_serialization_node_callback@@Base+0x454>
   22800:	cmp	r1, #0
   22804:	beq	22820 <myhtml_serialization_node_callback@@Base+0x3b8>
   22808:	sub	r0, sl, r1
   2280c:	mov	r2, r5
   22810:	add	r0, r9, r0
   22814:	blx	r4
   22818:	cmp	r0, #0
   2281c:	bne	226d8 <myhtml_serialization_node_callback@@Base+0x270>
   22820:	ldr	r0, [pc, #644]	; 22aac <myhtml_serialization_node_callback@@Base+0x644>
   22824:	mov	r1, #5
   22828:	add	r0, pc, r0
   2282c:	b	228a4 <myhtml_serialization_node_callback@@Base+0x43c>
   22830:	cmp	r1, #0
   22834:	beq	22850 <myhtml_serialization_node_callback@@Base+0x3e8>
   22838:	sub	r0, sl, r1
   2283c:	mov	r2, r5
   22840:	add	r0, r9, r0
   22844:	blx	r4
   22848:	cmp	r0, #0
   2284c:	bne	226d8 <myhtml_serialization_node_callback@@Base+0x270>
   22850:	ldr	r0, [pc, #600]	; 22ab0 <myhtml_serialization_node_callback@@Base+0x648>
   22854:	add	r0, pc, r0
   22858:	b	228a0 <myhtml_serialization_node_callback@@Base+0x438>
   2285c:	cmp	sl, #0
   22860:	beq	228bc <myhtml_serialization_node_callback@@Base+0x454>
   22864:	add	r0, r9, sl
   22868:	ldrb	r0, [r0, #-1]
   2286c:	cmp	r0, #194	; 0xc2
   22870:	bne	228bc <myhtml_serialization_node_callback@@Base+0x454>
   22874:	cmp	r1, #0
   22878:	beq	22898 <myhtml_serialization_node_callback@@Base+0x430>
   2287c:	sub	r0, sl, r1
   22880:	sub	r1, r1, #1
   22884:	mov	r2, r5
   22888:	add	r0, r9, r0
   2288c:	blx	r4
   22890:	cmp	r0, #0
   22894:	bne	226d8 <myhtml_serialization_node_callback@@Base+0x270>
   22898:	ldr	r0, [pc, #532]	; 22ab4 <myhtml_serialization_node_callback@@Base+0x64c>
   2289c:	add	r0, pc, r0
   228a0:	mov	r1, #6
   228a4:	mov	r2, r5
   228a8:	blx	r4
   228ac:	mov	r1, #0
   228b0:	cmp	r0, #0
   228b4:	beq	228c0 <myhtml_serialization_node_callback@@Base+0x458>
   228b8:	b	226d8 <myhtml_serialization_node_callback@@Base+0x270>
   228bc:	add	r1, r1, #1
   228c0:	add	sl, sl, #1
   228c4:	cmp	r8, sl
   228c8:	bne	227e4 <myhtml_serialization_node_callback@@Base+0x37c>
   228cc:	cmp	r1, #0
   228d0:	beq	228ec <myhtml_serialization_node_callback@@Base+0x484>
   228d4:	add	r0, r9, r8
   228d8:	mov	r2, r5
   228dc:	sub	r0, r0, r1
   228e0:	blx	r4
   228e4:	cmp	r0, #0
   228e8:	bne	226d8 <myhtml_serialization_node_callback@@Base+0x270>
   228ec:	ldr	r0, [pc, #452]	; 22ab8 <myhtml_serialization_node_callback@@Base+0x650>
   228f0:	mov	r1, #1
   228f4:	mov	r2, r5
   228f8:	add	r0, pc, r0
   228fc:	blx	r4
   22900:	cmp	r0, #0
   22904:	bne	226d8 <myhtml_serialization_node_callback@@Base+0x270>
   22908:	ldr	r6, [r6]
   2290c:	cmp	r6, #0
   22910:	bne	22710 <myhtml_serialization_node_callback@@Base+0x2a8>
   22914:	b	22950 <myhtml_serialization_node_callback@@Base+0x4e8>
   22918:	ldr	r0, [r6, #8]
   2291c:	cmp	r0, #0
   22920:	beq	22774 <myhtml_serialization_node_callback@@Base+0x30c>
   22924:	ldr	r1, [r6, #16]
   22928:	cmp	r1, #5
   2292c:	bne	22774 <myhtml_serialization_node_callback@@Base+0x30c>
   22930:	ldr	r1, [pc, #356]	; 22a9c <myhtml_serialization_node_callback@@Base+0x634>
   22934:	add	r1, pc, r1
   22938:	bl	10f90 <mycore_strcmp@plt>
   2293c:	cmp	r0, #0
   22940:	beq	22774 <myhtml_serialization_node_callback@@Base+0x30c>
   22944:	ldr	r0, [pc, #340]	; 22aa0 <myhtml_serialization_node_callback@@Base+0x638>
   22948:	add	r0, pc, r0
   2294c:	b	22760 <myhtml_serialization_node_callback@@Base+0x2f8>
   22950:	ldr	r0, [pc, #356]	; 22abc <myhtml_serialization_node_callback@@Base+0x654>
   22954:	mov	r1, #1
   22958:	add	r0, pc, r0
   2295c:	mov	r2, r5
   22960:	blx	r4
   22964:	mov	r6, #2
   22968:	cmp	r0, #0
   2296c:	bne	22974 <myhtml_serialization_node_callback@@Base+0x50c>
   22970:	mov	r6, #0
   22974:	mov	r0, r6
   22978:	sub	sp, fp, #28
   2297c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22980:	ldr	r8, [r7]
   22984:	mov	r9, #0
   22988:	mov	r7, #0
   2298c:	cmp	r8, #0
   22990:	beq	22a34 <myhtml_serialization_node_callback@@Base+0x5cc>
   22994:	ldr	r0, [r8, #36]	; 0x24
   22998:	cmp	r0, #0
   2299c:	beq	22a34 <myhtml_serialization_node_callback@@Base+0x5cc>
   229a0:	cmp	r9, #0
   229a4:	beq	229b4 <myhtml_serialization_node_callback@@Base+0x54c>
   229a8:	ldr	r0, [r7, #36]	; 0x24
   229ac:	cmp	r0, #0
   229b0:	bne	229d0 <myhtml_serialization_node_callback@@Base+0x568>
   229b4:	ldr	r0, [pc, #196]	; 22a80 <myhtml_serialization_node_callback@@Base+0x618>
   229b8:	mov	r1, #7
   229bc:	mov	r2, r5
   229c0:	add	r0, pc, r0
   229c4:	blx	r4
   229c8:	cmp	r0, #0
   229cc:	bne	22974 <myhtml_serialization_node_callback@@Base+0x50c>
   229d0:	ldr	r0, [pc, #172]	; 22a84 <myhtml_serialization_node_callback@@Base+0x61c>
   229d4:	mov	r1, #2
   229d8:	mov	r2, r5
   229dc:	mov	r6, #2
   229e0:	add	r0, pc, r0
   229e4:	blx	r4
   229e8:	cmp	r0, #0
   229ec:	bne	22974 <myhtml_serialization_node_callback@@Base+0x50c>
   229f0:	ldr	r0, [r8, #28]
   229f4:	cmp	r0, #0
   229f8:	beq	22a18 <myhtml_serialization_node_callback@@Base+0x5b0>
   229fc:	ldr	r1, [r8, #36]	; 0x24
   22a00:	cmp	r1, #0
   22a04:	beq	22a18 <myhtml_serialization_node_callback@@Base+0x5b0>
   22a08:	mov	r2, r5
   22a0c:	blx	r4
   22a10:	cmp	r0, #0
   22a14:	bne	22974 <myhtml_serialization_node_callback@@Base+0x50c>
   22a18:	ldr	r0, [pc, #104]	; 22a88 <myhtml_serialization_node_callback@@Base+0x620>
   22a1c:	mov	r1, #1
   22a20:	mov	r2, r5
   22a24:	add	r0, pc, r0
   22a28:	blx	r4
   22a2c:	cmp	r0, #0
   22a30:	bne	22974 <myhtml_serialization_node_callback@@Base+0x50c>
   22a34:	ldr	r0, [pc, #80]	; 22a8c <myhtml_serialization_node_callback@@Base+0x624>
   22a38:	mov	r1, #1
   22a3c:	mov	r2, r5
   22a40:	add	r0, pc, r0
   22a44:	blx	r4
   22a48:	cmp	r0, #0
   22a4c:	mov	r6, #2
   22a50:	moveq	r6, #0
   22a54:	b	22974 <myhtml_serialization_node_callback@@Base+0x50c>
   22a58:	mov	r9, #1
   22a5c:	b	2298c <myhtml_serialization_node_callback@@Base+0x524>
   22a60:	ldrdeq	r8, [sp], -r5
   22a64:	andeq	r8, sp, lr, lsl #13
   22a68:	andeq	r8, sp, r6, lsl r8
   22a6c:	andeq	r8, sp, r0, lsl #16
   22a70:	andeq	r8, sp, r4, lsr #15
   22a74:	andeq	r8, sp, sl, ror r7
   22a78:	andeq	r8, sp, r9, asr #14
   22a7c:	andeq	r8, sp, r9, lsl r7
   22a80:	andeq	r8, sp, r7, ror r3
   22a84:	andeq	r8, sp, r4, asr r3
   22a88:	andeq	r8, sp, r1, lsl r3
   22a8c:	ldrdeq	r8, [sp], -r8	; <UNPREDICTABLE>
   22a90:	andeq	r8, sp, pc, lsl #13
   22a94:	andeq	r8, sp, r8, lsl #12
   22a98:	strdeq	r8, [sp], -r1
   22a9c:	andeq	r8, sp, r2, lsl r4
   22aa0:	andeq	r8, sp, r4, lsl #8
   22aa4:	strdeq	r8, [sp], -r7
   22aa8:			; <UNDEFINED> instruction: 0x000d85b2
   22aac:	andeq	r8, sp, r5, lsr r5
   22ab0:	andeq	r8, sp, pc, lsl #10
   22ab4:	andeq	r8, sp, lr, asr #9
   22ab8:	andeq	r8, sp, sp, lsr r4
   22abc:	andeq	r8, sp, r0, asr #7
   22ac0:	push	{r4, r5, r6, r7, fp, lr}
   22ac4:	add	fp, sp, #16
   22ac8:	sub	sp, sp, #8
   22acc:	mov	r4, r1
   22ad0:	ldr	r1, [r0, #4]
   22ad4:	mov	r5, r2
   22ad8:	mov	r6, #0
   22adc:	cmp	r1, #45	; 0x2d
   22ae0:	ble	22b20 <myhtml_serialization_node_callback@@Base+0x6b8>
   22ae4:	sub	r2, r1, #46	; 0x2e
   22ae8:	cmp	r2, #28
   22aec:	bls	22b4c <myhtml_serialization_node_callback@@Base+0x6e4>
   22af0:	sub	r2, r1, #78	; 0x4e
   22af4:	cmp	r2, #22
   22af8:	bls	22b64 <myhtml_serialization_node_callback@@Base+0x6fc>
   22afc:	sub	r2, r1, #116	; 0x74
   22b00:	cmp	r2, #26
   22b04:	bhi	22b84 <myhtml_serialization_node_callback@@Base+0x71c>
   22b08:	movw	r7, #1
   22b0c:	mov	r3, #1
   22b10:	movt	r7, #1040	; 0x410
   22b14:	tst	r7, r3, lsl r2
   22b18:	bne	22b78 <myhtml_serialization_node_callback@@Base+0x710>
   22b1c:	b	22b84 <myhtml_serialization_node_callback@@Base+0x71c>
   22b20:	cmp	r1, #31
   22b24:	bhi	22b84 <myhtml_serialization_node_callback@@Base+0x71c>
   22b28:	movw	r3, #33792	; 0x8400
   22b2c:	mov	r2, #1
   22b30:	movt	r3, #33032	; 0x8108
   22b34:	tst	r3, r2, lsl r1
   22b38:	bne	22b78 <myhtml_serialization_node_callback@@Base+0x710>
   22b3c:	mov	r3, #14
   22b40:	tst	r3, r2, lsl r1
   22b44:	bne	22bec <myhtml_serialization_node_callback@@Base+0x784>
   22b48:	b	22b84 <myhtml_serialization_node_callback@@Base+0x71c>
   22b4c:	movw	r7, #129	; 0x81
   22b50:	mov	r3, #1
   22b54:	movt	r7, #4484	; 0x1184
   22b58:	tst	r7, r3, lsl r2
   22b5c:	bne	22b78 <myhtml_serialization_node_callback@@Base+0x710>
   22b60:	b	22af0 <myhtml_serialization_node_callback@@Base+0x688>
   22b64:	movw	r7, #257	; 0x101
   22b68:	mov	r3, #1
   22b6c:	movt	r7, #64	; 0x40
   22b70:	tst	r7, r3, lsl r2
   22b74:	beq	22afc <myhtml_serialization_node_callback@@Base+0x694>
   22b78:	ldr	r2, [r0, #8]
   22b7c:	cmp	r2, #1
   22b80:	beq	22bec <myhtml_serialization_node_callback@@Base+0x784>
   22b84:	ldr	r0, [r0, #40]	; 0x28
   22b88:	add	r2, sp, #4
   22b8c:	bl	11c5c <myhtml_tag_name_by_id@plt>
   22b90:	mov	r7, r0
   22b94:	ldr	r0, [pc, #92]	; 22bf8 <myhtml_serialization_node_callback@@Base+0x790>
   22b98:	mov	r1, #2
   22b9c:	mov	r2, r5
   22ba0:	mov	r6, #2
   22ba4:	add	r0, pc, r0
   22ba8:	blx	r4
   22bac:	cmp	r0, #0
   22bb0:	bne	22bec <myhtml_serialization_node_callback@@Base+0x784>
   22bb4:	ldr	r1, [sp, #4]
   22bb8:	mov	r0, r7
   22bbc:	mov	r2, r5
   22bc0:	blx	r4
   22bc4:	cmp	r0, #0
   22bc8:	bne	22bec <myhtml_serialization_node_callback@@Base+0x784>
   22bcc:	ldr	r0, [pc, #40]	; 22bfc <myhtml_serialization_node_callback@@Base+0x794>
   22bd0:	mov	r1, #1
   22bd4:	mov	r2, r5
   22bd8:	add	r0, pc, r0
   22bdc:	blx	r4
   22be0:	cmp	r0, #0
   22be4:	movwne	r0, #1
   22be8:	lsl	r6, r0, #1
   22bec:	mov	r0, r6
   22bf0:	sub	sp, fp, #16
   22bf4:	pop	{r4, r5, r6, r7, fp, pc}
   22bf8:	andeq	r8, sp, sp, asr #3
   22bfc:	andeq	r8, sp, r0, asr #2

00022c00 <myhtml_serialization_reallocate@@Base>:
   22c00:	push	{r4, r5, fp, lr}
   22c04:	add	fp, sp, #8
   22c08:	mov	r4, r0
   22c0c:	ldr	r0, [r0]
   22c10:	mov	r5, r1
   22c14:	bl	10f78 <mycore_realloc@plt>
   22c18:	cmp	r0, #0
   22c1c:	beq	22c2c <myhtml_serialization_reallocate@@Base+0x2c>
   22c20:	stm	r4, {r0, r5}
   22c24:	mov	r0, #0
   22c28:	pop	{r4, r5, fp, pc}
   22c2c:	mov	r0, #0
   22c30:	str	r0, [r4]
   22c34:	str	r0, [r4, #4]
   22c38:	str	r0, [r4, #8]
   22c3c:	mov	r0, #2
   22c40:	pop	{r4, r5, fp, pc}

00022c44 <myhtml_serialization_concatenate@@Base>:
   22c44:	push	{r4, r5, r6, r7, fp, lr}
   22c48:	add	fp, sp, #16
   22c4c:	mov	r5, r1
   22c50:	mov	r6, r0
   22c54:	ldmib	r2, {r0, r1}
   22c58:	mov	r4, r2
   22c5c:	add	r2, r1, r5
   22c60:	cmp	r2, r0
   22c64:	bcs	22c70 <myhtml_serialization_concatenate@@Base+0x2c>
   22c68:	ldr	r0, [r4]
   22c6c:	b	22c90 <myhtml_serialization_concatenate@@Base+0x4c>
   22c70:	ldr	r0, [r4]
   22c74:	add	r7, r2, #4096	; 0x1000
   22c78:	mov	r1, r7
   22c7c:	bl	10f78 <mycore_realloc@plt>
   22c80:	cmp	r0, #0
   22c84:	beq	22cbc <myhtml_serialization_concatenate@@Base+0x78>
   22c88:	stm	r4, {r0, r7}
   22c8c:	ldr	r1, [r4, #8]
   22c90:	add	r0, r0, r1
   22c94:	mov	r1, r6
   22c98:	mov	r2, r5
   22c9c:	bl	11ab8 <strncpy@plt>
   22ca0:	ldr	r0, [r4, #8]
   22ca4:	ldr	r1, [r4]
   22ca8:	add	r2, r0, r5
   22cac:	mov	r0, #0
   22cb0:	str	r2, [r4, #8]
   22cb4:	strb	r0, [r1, r2]
   22cb8:	pop	{r4, r5, r6, r7, fp, pc}
   22cbc:	mov	r0, #0
   22cc0:	str	r0, [r4]
   22cc4:	str	r0, [r4, #4]
   22cc8:	str	r0, [r4, #8]
   22ccc:	mov	r0, #2
   22cd0:	pop	{r4, r5, r6, r7, fp, pc}
   22cd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22cd8:	add	fp, sp, #28
   22cdc:	sub	sp, sp, #4
   22ce0:	cmp	r1, #0
   22ce4:	beq	22e5c <myhtml_serialization_concatenate@@Base+0x218>
   22ce8:	ldr	r9, [pc, #384]	; 22e70 <myhtml_serialization_concatenate@@Base+0x22c>
   22cec:	ldr	sl, [pc, #384]	; 22e74 <myhtml_serialization_concatenate@@Base+0x230>
   22cf0:	mov	r6, r1
   22cf4:	mov	r5, r3
   22cf8:	mov	r4, r2
   22cfc:	mov	r7, r0
   22d00:	mov	r8, #0
   22d04:	mov	r1, #0
   22d08:	add	r9, pc, r9
   22d0c:	add	sl, pc, sl
   22d10:	ldrb	r0, [r7, r8]
   22d14:	cmp	r0, #61	; 0x3d
   22d18:	bgt	22d54 <myhtml_serialization_concatenate@@Base+0x110>
   22d1c:	cmp	r0, #38	; 0x26
   22d20:	beq	22db8 <myhtml_serialization_concatenate@@Base+0x174>
   22d24:	cmp	r0, #60	; 0x3c
   22d28:	bne	22db0 <myhtml_serialization_concatenate@@Base+0x16c>
   22d2c:	cmp	r1, #0
   22d30:	beq	22d4c <myhtml_serialization_concatenate@@Base+0x108>
   22d34:	sub	r0, r8, r1
   22d38:	mov	r2, r5
   22d3c:	add	r0, r7, r0
   22d40:	blx	r4
   22d44:	cmp	r0, #0
   22d48:	bne	22e64 <myhtml_serialization_concatenate@@Base+0x220>
   22d4c:	mov	r0, r9
   22d50:	b	22e0c <myhtml_serialization_concatenate@@Base+0x1c8>
   22d54:	cmp	r0, #62	; 0x3e
   22d58:	beq	22de8 <myhtml_serialization_concatenate@@Base+0x1a4>
   22d5c:	cmp	r0, #160	; 0xa0
   22d60:	bne	22db0 <myhtml_serialization_concatenate@@Base+0x16c>
   22d64:	cmp	r8, #0
   22d68:	beq	22db0 <myhtml_serialization_concatenate@@Base+0x16c>
   22d6c:	add	r0, r7, r8
   22d70:	ldrb	r0, [r0, #-1]
   22d74:	cmp	r0, #194	; 0xc2
   22d78:	bne	22db0 <myhtml_serialization_concatenate@@Base+0x16c>
   22d7c:	cmp	r1, #0
   22d80:	beq	22da0 <myhtml_serialization_concatenate@@Base+0x15c>
   22d84:	sub	r0, r8, r1
   22d88:	sub	r1, r1, #1
   22d8c:	mov	r2, r5
   22d90:	add	r0, r7, r0
   22d94:	blx	r4
   22d98:	cmp	r0, #0
   22d9c:	bne	22e64 <myhtml_serialization_concatenate@@Base+0x220>
   22da0:	ldr	r0, [pc, #208]	; 22e78 <myhtml_serialization_concatenate@@Base+0x234>
   22da4:	mov	r1, #6
   22da8:	add	r0, pc, r0
   22dac:	b	22e10 <myhtml_serialization_concatenate@@Base+0x1cc>
   22db0:	add	r1, r1, #1
   22db4:	b	22e24 <myhtml_serialization_concatenate@@Base+0x1e0>
   22db8:	cmp	r1, #0
   22dbc:	beq	22dd8 <myhtml_serialization_concatenate@@Base+0x194>
   22dc0:	sub	r0, r8, r1
   22dc4:	mov	r2, r5
   22dc8:	add	r0, r7, r0
   22dcc:	blx	r4
   22dd0:	cmp	r0, #0
   22dd4:	bne	22e64 <myhtml_serialization_concatenate@@Base+0x220>
   22dd8:	ldr	r0, [pc, #156]	; 22e7c <myhtml_serialization_concatenate@@Base+0x238>
   22ddc:	mov	r1, #5
   22de0:	add	r0, pc, r0
   22de4:	b	22e10 <myhtml_serialization_concatenate@@Base+0x1cc>
   22de8:	cmp	r1, #0
   22dec:	beq	22e08 <myhtml_serialization_concatenate@@Base+0x1c4>
   22df0:	sub	r0, r8, r1
   22df4:	mov	r2, r5
   22df8:	add	r0, r7, r0
   22dfc:	blx	r4
   22e00:	cmp	r0, #0
   22e04:	bne	22e64 <myhtml_serialization_concatenate@@Base+0x220>
   22e08:	mov	r0, sl
   22e0c:	mov	r1, #4
   22e10:	mov	r2, r5
   22e14:	blx	r4
   22e18:	mov	r1, #0
   22e1c:	cmp	r0, #0
   22e20:	bne	22e64 <myhtml_serialization_concatenate@@Base+0x220>
   22e24:	add	r8, r8, #1
   22e28:	cmp	r6, r8
   22e2c:	bne	22d10 <myhtml_serialization_concatenate@@Base+0xcc>
   22e30:	cmp	r1, #0
   22e34:	beq	22e5c <myhtml_serialization_concatenate@@Base+0x218>
   22e38:	add	r0, r7, r6
   22e3c:	mov	r2, r5
   22e40:	sub	r0, r0, r1
   22e44:	blx	r4
   22e48:	mov	r1, r0
   22e4c:	mov	r0, #2
   22e50:	cmp	r1, #0
   22e54:	moveq	r0, #0
   22e58:	b	22e68 <myhtml_serialization_concatenate@@Base+0x224>
   22e5c:	mov	r0, #0
   22e60:	b	22e68 <myhtml_serialization_concatenate@@Base+0x224>
   22e64:	mov	r0, #2
   22e68:	sub	sp, fp, #28
   22e6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22e70:	andeq	r8, sp, ip, rrx
   22e74:	andeq	r8, sp, sp, rrx
   22e78:	andeq	r7, sp, r2, asr #31
   22e7c:	andeq	r7, sp, sp, ror pc

00022e80 <myhtml_stream_buffer_create@@Base>:
   22e80:	mov	r0, #1
   22e84:	mov	r1, #36	; 0x24
   22e88:	b	11248 <mycore_calloc@plt>

00022e8c <myhtml_stream_buffer_init@@Base>:
   22e8c:	push	{r4, r5, fp, lr}
   22e90:	add	fp, sp, #8
   22e94:	mov	r5, #0
   22e98:	mov	r4, r0
   22e9c:	str	r5, [r0, #4]
   22ea0:	str	r1, [r0, #8]
   22ea4:	mov	r0, r1
   22ea8:	mov	r1, #12
   22eac:	bl	11248 <mycore_calloc@plt>
   22eb0:	cmp	r0, #0
   22eb4:	str	r0, [r4]
   22eb8:	movweq	r5, #37633	; 0x9301
   22ebc:	mov	r0, r5
   22ec0:	pop	{r4, r5, fp, pc}

00022ec4 <myhtml_stream_buffer_entry_init@@Base>:
   22ec4:	push	{r4, r5, r6, sl, fp, lr}
   22ec8:	add	fp, sp, #16
   22ecc:	mov	r4, r0
   22ed0:	ldr	r0, [r0]
   22ed4:	mov	r5, r1
   22ed8:	cmp	r0, #0
   22edc:	beq	22ef4 <myhtml_stream_buffer_entry_init@@Base+0x30>
   22ee0:	ldr	r1, [r4, #8]
   22ee4:	mov	r6, #0
   22ee8:	cmp	r1, r5
   22eec:	bcs	22f14 <myhtml_stream_buffer_entry_init@@Base+0x50>
   22ef0:	bl	11eb4 <mycore_free@plt>
   22ef4:	mov	r6, #0
   22ef8:	mov	r0, r5
   22efc:	str	r6, [r4, #4]
   22f00:	str	r5, [r4, #8]
   22f04:	bl	11dac <mycore_malloc@plt>
   22f08:	cmp	r0, #0
   22f0c:	str	r0, [r4]
   22f10:	movweq	r6, #37635	; 0x9303
   22f14:	mov	r0, r6
   22f18:	pop	{r4, r5, r6, sl, fp, pc}

00022f1c <myhtml_stream_buffer_entry_clean@@Base>:
   22f1c:	cmp	r0, #0
   22f20:	movne	r1, #0
   22f24:	strne	r1, [r0, #4]
   22f28:	bx	lr

00022f2c <myhtml_stream_buffer_entry_destroy@@Base>:
   22f2c:	push	{r4, r5, r6, sl, fp, lr}
   22f30:	add	fp, sp, #16
   22f34:	mov	r4, #0
   22f38:	cmp	r0, #0
   22f3c:	beq	22f70 <myhtml_stream_buffer_entry_destroy@@Base+0x44>
   22f40:	mov	r5, r0
   22f44:	ldr	r0, [r0]
   22f48:	mov	r6, r1
   22f4c:	cmp	r0, #0
   22f50:	beq	22f58 <myhtml_stream_buffer_entry_destroy@@Base+0x2c>
   22f54:	bl	11eb4 <mycore_free@plt>
   22f58:	cmp	r6, #0
   22f5c:	beq	22f6c <myhtml_stream_buffer_entry_destroy@@Base+0x40>
   22f60:	mov	r0, r5
   22f64:	bl	11eb4 <mycore_free@plt>
   22f68:	b	22f70 <myhtml_stream_buffer_entry_destroy@@Base+0x44>
   22f6c:	mov	r4, r5
   22f70:	mov	r0, r4
   22f74:	pop	{r4, r5, r6, sl, fp, pc}

00022f78 <myhtml_stream_buffer_clean@@Base>:
   22f78:	cmp	r0, #0
   22f7c:	movne	r1, #0
   22f80:	strne	r1, [r0, #4]
   22f84:	bx	lr

00022f88 <myhtml_stream_buffer_destroy@@Base>:
   22f88:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   22f8c:	add	fp, sp, #24
   22f90:	mov	r4, #0
   22f94:	cmp	r0, #0
   22f98:	beq	23018 <myhtml_stream_buffer_destroy@@Base+0x90>
   22f9c:	mov	r5, r0
   22fa0:	ldr	r0, [r0]
   22fa4:	mov	r8, r1
   22fa8:	cmp	r0, #0
   22fac:	beq	23000 <myhtml_stream_buffer_destroy@@Base+0x78>
   22fb0:	ldr	r1, [r5, #4]
   22fb4:	cmp	r1, #0
   22fb8:	beq	22ffc <myhtml_stream_buffer_destroy@@Base+0x74>
   22fbc:	mov	r7, #1
   22fc0:	mov	r6, #0
   22fc4:	cmp	r0, r6
   22fc8:	beq	22fe0 <myhtml_stream_buffer_destroy@@Base+0x58>
   22fcc:	ldr	r0, [r0, -r6]
   22fd0:	cmp	r0, #0
   22fd4:	beq	22fe0 <myhtml_stream_buffer_destroy@@Base+0x58>
   22fd8:	bl	11eb4 <mycore_free@plt>
   22fdc:	ldr	r1, [r5, #4]
   22fe0:	cmp	r7, r1
   22fe4:	bcs	22ff8 <myhtml_stream_buffer_destroy@@Base+0x70>
   22fe8:	ldr	r0, [r5]
   22fec:	sub	r6, r6, #12
   22ff0:	add	r7, r7, #1
   22ff4:	b	22fc4 <myhtml_stream_buffer_destroy@@Base+0x3c>
   22ff8:	ldr	r0, [r5]
   22ffc:	bl	11eb4 <mycore_free@plt>
   23000:	cmp	r8, #0
   23004:	beq	23014 <myhtml_stream_buffer_destroy@@Base+0x8c>
   23008:	mov	r0, r5
   2300c:	bl	11eb4 <mycore_free@plt>
   23010:	b	23018 <myhtml_stream_buffer_destroy@@Base+0x90>
   23014:	mov	r4, r5
   23018:	mov	r0, r4
   2301c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00023020 <myhtml_stream_buffer_add_entry@@Base>:
   23020:	push	{r4, r5, r6, r7, fp, lr}
   23024:	add	fp, sp, #16
   23028:	mov	r4, r0
   2302c:	ldr	r0, [r0, #4]
   23030:	mov	r5, r1
   23034:	ldr	r7, [r4, #8]
   23038:	cmp	r0, r7
   2303c:	bcs	23048 <myhtml_stream_buffer_add_entry@@Base+0x28>
   23040:	ldr	r6, [r4]
   23044:	b	2308c <myhtml_stream_buffer_add_entry@@Base+0x6c>
   23048:	add	r0, r7, r7, lsl #1
   2304c:	lsl	r1, r0, #3
   23050:	mov	r0, r4
   23054:	bl	10f78 <mycore_realloc@plt>
   23058:	cmp	r0, #0
   2305c:	beq	230c4 <myhtml_stream_buffer_add_entry@@Base+0xa4>
   23060:	mov	r6, r0
   23064:	ldr	r0, [r4, #8]
   23068:	lsl	r7, r7, #1
   2306c:	mov	r1, #0
   23070:	sub	r2, r7, r0
   23074:	add	r0, r0, r0, lsl #1
   23078:	add	r0, r6, r0, lsl #2
   2307c:	bl	11a7c <memset@plt>
   23080:	str	r7, [r4, #8]
   23084:	str	r6, [r4]
   23088:	ldr	r0, [r4, #4]
   2308c:	add	r0, r0, r0, lsl #1
   23090:	mov	r1, r5
   23094:	add	r6, r6, r0, lsl #2
   23098:	mov	r0, r6
   2309c:	bl	119f8 <myhtml_stream_buffer_entry_init@plt>
   230a0:	mov	r1, r0
   230a4:	mov	r0, #0
   230a8:	cmp	r1, #0
   230ac:	popne	{r4, r5, r6, r7, fp, pc}
   230b0:	ldr	r0, [r4, #4]
   230b4:	add	r0, r0, #1
   230b8:	str	r0, [r4, #4]
   230bc:	mov	r0, r6
   230c0:	pop	{r4, r5, r6, r7, fp, pc}
   230c4:	mov	r0, #0
   230c8:	pop	{r4, r5, r6, r7, fp, pc}

000230cc <myhtml_stream_buffer_current_entry@@Base>:
   230cc:	ldr	r1, [r0, #4]
   230d0:	cmp	r1, #0
   230d4:	moveq	r0, #0
   230d8:	bxeq	lr
   230dc:	ldr	r0, [r0]
   230e0:	add	r1, r1, r1, lsl #1
   230e4:	add	r0, r0, r1, lsl #2
   230e8:	sub	r0, r0, #12
   230ec:	bx	lr

000230f0 <myhtml_tag_create@@Base>:
   230f0:	mov	r0, #20
   230f4:	b	11dac <mycore_malloc@plt>

000230f8 <myhtml_tag_init@@Base>:
   230f8:	push	{r4, r5, fp, lr}
   230fc:	add	fp, sp, #8
   23100:	sub	sp, sp, #8
   23104:	mov	r4, r1
   23108:	mov	r5, r0
   2310c:	bl	11578 <mcsimple_create@plt>
   23110:	cmp	r0, #0
   23114:	str	r0, [r4, #4]
   23118:	beq	23184 <myhtml_tag_init@@Base+0x8c>
   2311c:	mov	r1, #128	; 0x80
   23120:	mov	r2, #1024	; 0x400
   23124:	mov	r3, #44	; 0x2c
   23128:	bl	116bc <mcsimple_init@plt>
   2312c:	ldr	r0, [r5, #4]
   23130:	add	r1, sp, #4
   23134:	bl	11548 <mchar_async_node_add@plt>
   23138:	str	r0, [r4, #12]
   2313c:	mov	r0, #2
   23140:	bl	11884 <mctree_create@plt>
   23144:	str	r0, [r4]
   23148:	mov	r1, r0
   2314c:	mov	r2, #252	; 0xfc
   23150:	ldr	r0, [r5, #4]
   23154:	str	r2, [r4, #8]
   23158:	str	r0, [r4, #16]
   2315c:	ldr	r0, [sp, #4]
   23160:	cmp	r0, #0
   23164:	bne	23188 <myhtml_tag_init@@Base+0x90>
   23168:	cmp	r1, #0
   2316c:	mov	r0, #2
   23170:	beq	23188 <myhtml_tag_init@@Base+0x90>
   23174:	mov	r0, r4
   23178:	bl	12100 <myhtml_tag_clean@plt>
   2317c:	mov	r0, #0
   23180:	b	23188 <myhtml_tag_init@@Base+0x90>
   23184:	movw	r0, #37264	; 0x9190
   23188:	sub	sp, fp, #8
   2318c:	pop	{r4, r5, fp, pc}

00023190 <myhtml_tag_clean@@Base>:
   23190:	push	{r4, sl, fp, lr}
   23194:	add	fp, sp, #8
   23198:	mov	r4, r0
   2319c:	mov	r0, #252	; 0xfc
   231a0:	str	r0, [r4, #8]
   231a4:	ldr	r0, [r4, #4]
   231a8:	bl	11518 <mcsimple_clean@plt>
   231ac:	ldr	r1, [r4, #12]
   231b0:	ldr	r0, [r4, #16]
   231b4:	bl	11908 <mchar_async_node_clean@plt>
   231b8:	ldr	r0, [r4]
   231bc:	pop	{r4, sl, fp, lr}
   231c0:	b	115a8 <mctree_clean@plt>

000231c4 <myhtml_tag_destroy@@Base>:
   231c4:	cmp	r0, #0
   231c8:	beq	2320c <myhtml_tag_destroy@@Base+0x48>
   231cc:	push	{r4, sl, fp, lr}
   231d0:	add	fp, sp, #8
   231d4:	mov	r4, r0
   231d8:	ldr	r0, [r0]
   231dc:	bl	113bc <mctree_destroy@plt>
   231e0:	str	r0, [r4]
   231e4:	mov	r1, #1
   231e8:	ldr	r0, [r4, #4]
   231ec:	bl	11620 <mcsimple_destroy@plt>
   231f0:	str	r0, [r4, #4]
   231f4:	ldr	r1, [r4, #12]
   231f8:	ldr	r0, [r4, #16]
   231fc:	bl	11d70 <mchar_async_node_delete@plt>
   23200:	mov	r0, r4
   23204:	bl	11eb4 <mycore_free@plt>
   23208:	pop	{r4, sl, fp, lr}
   2320c:	mov	r0, #0
   23210:	bx	lr

00023214 <myhtml_tag_add@@Base>:
   23214:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   23218:	add	fp, sp, #24
   2321c:	sub	sp, sp, #8
   23220:	mov	r4, r1
   23224:	mov	r5, r0
   23228:	ldr	r1, [r0, #12]
   2322c:	ldr	r0, [r0, #16]
   23230:	mov	r6, r2
   23234:	add	r2, r2, #1
   23238:	mov	r8, r3
   2323c:	bl	11adc <mchar_async_malloc@plt>
   23240:	mov	r7, r0
   23244:	ldr	r0, [fp, #8]
   23248:	cmp	r0, #0
   2324c:	beq	23284 <myhtml_tag_add@@Base+0x70>
   23250:	cmp	r6, #0
   23254:	beq	23294 <myhtml_tag_add@@Base+0x80>
   23258:	mov	r0, r7
   2325c:	mov	r1, r6
   23260:	ldrb	r2, [r4], #1
   23264:	sub	r3, r2, #65	; 0x41
   23268:	uxtb	r3, r3
   2326c:	cmp	r3, #26
   23270:	orrcc	r2, r2, #96	; 0x60
   23274:	subs	r1, r1, #1
   23278:	strb	r2, [r0], #1
   2327c:	bne	23260 <myhtml_tag_add@@Base+0x4c>
   23280:	b	23294 <myhtml_tag_add@@Base+0x80>
   23284:	mov	r0, r7
   23288:	mov	r1, r4
   2328c:	mov	r2, r6
   23290:	bl	11ab8 <strncpy@plt>
   23294:	mov	r9, #0
   23298:	strb	r9, [r7, r6]
   2329c:	ldr	r0, [r5, #4]
   232a0:	bl	11950 <mcsimple_malloc@plt>
   232a4:	mov	r4, r0
   232a8:	ldr	r0, [r5]
   232ac:	mov	r1, r7
   232b0:	mov	r2, r6
   232b4:	str	r9, [sp]
   232b8:	mov	r3, r4
   232bc:	bl	11b18 <mctree_insert@plt>
   232c0:	ldr	r0, [r5, #8]
   232c4:	vmov.i32	q8, #0	; 0x00000000
   232c8:	add	r1, r0, #1
   232cc:	stm	r4, {r0, r7}
   232d0:	str	r6, [r4, #8]
   232d4:	str	r8, [r4, #12]
   232d8:	str	r1, [r5, #8]
   232dc:	add	r1, r4, #28
   232e0:	vst1.32	{d16-d17}, [r1]
   232e4:	add	r1, r4, #16
   232e8:	vst1.32	{d16-d17}, [r1]
   232ec:	sub	sp, fp, #24
   232f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000232f4 <myhtml_tag_set_category@@Base>:
   232f4:	cmp	r1, #252	; 0xfc
   232f8:	bxcc	lr
   232fc:	push	{r4, r5, fp, lr}
   23300:	add	fp, sp, #8
   23304:	ldr	r0, [r0, #4]
   23308:	sub	r1, r1, #252	; 0xfc
   2330c:	mov	r4, r3
   23310:	mov	r5, r2
   23314:	bl	1204c <mcsimple_get_by_absolute_position@plt>
   23318:	add	r0, r0, r5, lsl #2
   2331c:	str	r4, [r0, #16]
   23320:	pop	{r4, r5, fp, lr}
   23324:	bx	lr

00023328 <myhtml_tag_get_by_id@@Base>:
   23328:	cmp	r1, #252	; 0xfc
   2332c:	bcc	2333c <myhtml_tag_get_by_id@@Base+0x14>
   23330:	ldr	r0, [r0, #4]
   23334:	sub	r1, r1, #252	; 0xfc
   23338:	b	1204c <mcsimple_get_by_absolute_position@plt>
   2333c:	mov	r0, r1
   23340:	b	1132c <myhtml_tag_static_get_by_id@plt>

00023344 <myhtml_tag_get_by_name@@Base>:
   23344:	push	{r4, r5, r6, sl, fp, lr}
   23348:	add	fp, sp, #16
   2334c:	mov	r4, r0
   23350:	mov	r6, r1
   23354:	mov	r0, r1
   23358:	mov	r1, r2
   2335c:	mov	r5, r2
   23360:	bl	11ae8 <myhtml_tag_static_search@plt>
   23364:	cmp	r0, #0
   23368:	popne	{r4, r5, r6, sl, fp, pc}
   2336c:	ldr	r0, [r4]
   23370:	mov	r1, r6
   23374:	mov	r2, r5
   23378:	bl	1195c <mctree_search_lowercase@plt>
   2337c:	ldr	r1, [r4]
   23380:	rsb	r0, r0, r0, lsl #3
   23384:	ldr	r1, [r1]
   23388:	add	r0, r1, r0, lsl #2
   2338c:	ldr	r0, [r0, #8]
   23390:	pop	{r4, r5, r6, sl, fp, pc}

00023394 <myhtml_tag_static_search@@Base>:
   23394:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   23398:	add	fp, sp, #24
   2339c:	mov	r4, r1
   233a0:	mov	r8, r0
   233a4:	ldrb	r1, [r0], r1
   233a8:	ldrb	r0, [r0, #-1]
   233ac:	ldr	r2, [pc, #172]	; 23460 <myhtml_tag_static_search@@Base+0xcc>
   233b0:	ldr	r7, [pc, #172]	; 23464 <myhtml_tag_static_search@@Base+0xd0>
   233b4:	add	r2, pc, r2
   233b8:	add	r7, pc, r7
   233bc:	ldrb	r1, [r2, r1]
   233c0:	ldrb	r0, [r2, r0]
   233c4:	mul	r1, r1, r4
   233c8:	mul	r0, r1, r0
   233cc:	movw	r1, #411	; 0x19b
   233d0:	movt	r1, #4515	; 0x11a3
   233d4:	umull	r1, r2, r0, r1
   233d8:	sub	r1, r0, r2
   233dc:	add	r1, r2, r1, lsr #1
   233e0:	movw	r2, #479	; 0x1df
   233e4:	lsr	r1, r1, #8
   233e8:	mls	r0, r1, r2, r0
   233ec:	add	r5, r0, #1
   233f0:	add	r0, r5, r5, lsl #1
   233f4:	ldr	r6, [r7, r0, lsl #2]
   233f8:	cmp	r6, #0
   233fc:	beq	23454 <myhtml_tag_static_search@@Base+0xc0>
   23400:	ldr	r0, [r6, #8]
   23404:	cmp	r0, r4
   23408:	bne	2343c <myhtml_tag_static_search@@Base+0xa8>
   2340c:	ldr	r0, [r6, #4]
   23410:	mov	r1, r8
   23414:	mov	r2, r4
   23418:	bl	11554 <mycore_strncasecmp@plt>
   2341c:	cmp	r0, #0
   23420:	beq	23458 <myhtml_tag_static_search@@Base+0xc4>
   23424:	add	r0, r5, r5, lsl #1
   23428:	add	r0, r7, r0, lsl #2
   2342c:	ldr	r5, [r0, #4]
   23430:	cmp	r5, #0
   23434:	bne	2344c <myhtml_tag_static_search@@Base+0xb8>
   23438:	b	23454 <myhtml_tag_static_search@@Base+0xc0>
   2343c:	bhi	23454 <myhtml_tag_static_search@@Base+0xc0>
   23440:	add	r0, r5, r5, lsl #1
   23444:	add	r0, r7, r0, lsl #2
   23448:	ldr	r5, [r0, #4]
   2344c:	add	r0, r5, r5, lsl #1
   23450:	b	233f4 <myhtml_tag_static_search@@Base+0x60>
   23454:	mov	r6, #0
   23458:	mov	r0, r6
   2345c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23460:	andeq	r7, sp, sl, asr #19
   23464:	andeq	sp, lr, r0, lsr #4

00023468 <myhtml_tag_static_get_by_id@@Base>:
   23468:	ldr	r1, [pc, #12]	; 2347c <myhtml_tag_static_get_by_id@@Base+0x14>
   2346c:	mov	r2, #44	; 0x2c
   23470:	add	r1, pc, r1
   23474:	mla	r0, r0, r2, r1
   23478:	bx	lr
   2347c:	andeq	lr, lr, r4, asr #21

00023480 <myhtml_token_create@@Base>:
   23480:	push	{r4, r5, r6, r7, fp, lr}
   23484:	add	fp, sp, #16
   23488:	mov	r5, r0
   2348c:	mov	r0, #24
   23490:	cmp	r1, #0
   23494:	mov	r6, r1
   23498:	movweq	r6, #4096	; 0x1000
   2349c:	bl	11dac <mycore_malloc@plt>
   234a0:	mov	r7, #0
   234a4:	cmp	r0, #0
   234a8:	beq	23534 <myhtml_token_create@@Base+0xb4>
   234ac:	mov	r4, r0
   234b0:	bl	110d4 <mcobject_async_create@plt>
   234b4:	cmp	r0, #0
   234b8:	str	r0, [r4, #4]
   234bc:	beq	2352c <myhtml_token_create@@Base+0xac>
   234c0:	bl	110d4 <mcobject_async_create@plt>
   234c4:	str	r0, [r4, #8]
   234c8:	mov	r1, r0
   234cc:	ldr	r0, [r4, #4]
   234d0:	cmp	r1, #0
   234d4:	beq	23528 <myhtml_token_create@@Base+0xa8>
   234d8:	mov	r1, #128	; 0x80
   234dc:	mov	r2, r6
   234e0:	mov	r3, #52	; 0x34
   234e4:	bl	11014 <mcobject_async_init@plt>
   234e8:	ldr	r0, [r4, #8]
   234ec:	mov	r1, #128	; 0x80
   234f0:	mov	r2, r6
   234f4:	mov	r3, #68	; 0x44
   234f8:	bl	11014 <mcobject_async_init@plt>
   234fc:	ldr	r0, [r4, #4]
   23500:	mov	r1, #0
   23504:	bl	11c14 <mcobject_async_node_add@plt>
   23508:	str	r0, [r4, #12]
   2350c:	mov	r1, #0
   23510:	ldr	r0, [r4, #8]
   23514:	bl	11c14 <mcobject_async_node_add@plt>
   23518:	mov	r7, r4
   2351c:	str	r0, [r4, #16]
   23520:	str	r5, [r4]
   23524:	b	23534 <myhtml_token_create@@Base+0xb4>
   23528:	bl	11eb4 <mycore_free@plt>
   2352c:	mov	r0, r4
   23530:	bl	11eb4 <mycore_free@plt>
   23534:	mov	r0, r7
   23538:	pop	{r4, r5, r6, r7, fp, pc}

0002353c <myhtml_token_clean@@Base>:
   2353c:	push	{r4, sl, fp, lr}
   23540:	add	fp, sp, #8
   23544:	mov	r4, r0
   23548:	ldr	r0, [r0, #4]
   2354c:	ldr	r1, [r4, #12]
   23550:	bl	11a4c <mcobject_async_node_clean@plt>
   23554:	ldr	r0, [r4, #8]
   23558:	ldr	r1, [r4, #16]
   2355c:	pop	{r4, sl, fp, lr}
   23560:	b	11a4c <mcobject_async_node_clean@plt>

00023564 <myhtml_token_clean_all@@Base>:
   23564:	push	{r4, sl, fp, lr}
   23568:	add	fp, sp, #8
   2356c:	mov	r4, r0
   23570:	ldr	r0, [r0, #4]
   23574:	bl	120dc <mcobject_async_clean@plt>
   23578:	ldr	r0, [r4, #8]
   2357c:	pop	{r4, sl, fp, lr}
   23580:	b	120dc <mcobject_async_clean@plt>

00023584 <myhtml_token_destroy@@Base>:
   23584:	cmp	r0, #0
   23588:	beq	235d4 <myhtml_token_destroy@@Base+0x50>
   2358c:	push	{r4, sl, fp, lr}
   23590:	add	fp, sp, #8
   23594:	mov	r4, r0
   23598:	ldr	r0, [r0, #4]
   2359c:	cmp	r0, #0
   235a0:	beq	235b0 <myhtml_token_destroy@@Base+0x2c>
   235a4:	mov	r1, #1
   235a8:	bl	11c80 <mcobject_async_destroy@plt>
   235ac:	str	r0, [r4, #4]
   235b0:	ldr	r0, [r4, #8]
   235b4:	cmp	r0, #0
   235b8:	beq	235c8 <myhtml_token_destroy@@Base+0x44>
   235bc:	mov	r1, #1
   235c0:	bl	11c80 <mcobject_async_destroy@plt>
   235c4:	str	r0, [r4, #8]
   235c8:	mov	r0, r4
   235cc:	bl	11eb4 <mycore_free@plt>
   235d0:	pop	{r4, sl, fp, lr}
   235d4:	mov	r0, #0
   235d8:	bx	lr

000235dc <myhtml_token_node_create@@Base>:
   235dc:	push	{r4, r5, fp, lr}
   235e0:	add	fp, sp, #8
   235e4:	ldr	r0, [r0, #4]
   235e8:	mov	r2, #0
   235ec:	mov	r5, #0
   235f0:	bl	11cec <mcobject_async_malloc@plt>
   235f4:	cmp	r0, #0
   235f8:	beq	23638 <myhtml_token_node_create@@Base+0x5c>
   235fc:	vmov.i32	q8, #0	; 0x00000000
   23600:	mov	r4, r0
   23604:	mov	r0, #0
   23608:	mov	r1, #4
   2360c:	str	r0, [r4, #48]	; 0x30
   23610:	add	r0, r4, #32
   23614:	vst1.32	{d16-d17}, [r0]
   23618:	add	r0, r4, #16
   2361c:	vst1.32	{d16-d17}, [r0]
   23620:	mov	r0, #8
   23624:	str	r0, [r4, #48]	; 0x30
   23628:	mov	r0, r4
   2362c:	vst1.32	{d16-d17}, [r0], r1
   23630:	bl	12118 <mycore_string_clean_all@plt>
   23634:	mov	r5, r4
   23638:	mov	r0, r5
   2363c:	pop	{r4, r5, fp, pc}

00023640 <myhtml_token_node_clean@@Base>:
   23640:	vmov.i32	q8, #0	; 0x00000000
   23644:	mov	r1, #0
   23648:	str	r1, [r0, #48]	; 0x30
   2364c:	add	r1, r0, #32
   23650:	vst1.32	{d16-d17}, [r1]
   23654:	add	r1, r0, #16
   23658:	vst1.32	{d16-d17}, [r1]
   2365c:	mov	r1, #8
   23660:	str	r1, [r0, #48]	; 0x30
   23664:	mov	r1, #4
   23668:	vst1.32	{d16-d17}, [r0], r1
   2366c:	b	12118 <mycore_string_clean_all@plt>

00023670 <myhtml_token_attr_create@@Base>:
   23670:	push	{r4, r5, fp, lr}
   23674:	add	fp, sp, #8
   23678:	ldr	r0, [r0, #8]
   2367c:	mov	r2, #0
   23680:	mov	r5, #0
   23684:	bl	11cec <mcobject_async_malloc@plt>
   23688:	cmp	r0, #0
   2368c:	beq	236d8 <myhtml_token_attr_create@@Base+0x68>
   23690:	vmov.i32	q8, #0	; 0x00000000
   23694:	mov	r4, r0
   23698:	mov	r0, #1
   2369c:	str	r0, [r4, #64]	; 0x40
   236a0:	add	r0, r4, #48	; 0x30
   236a4:	mov	r5, r4
   236a8:	vst1.32	{d16-d17}, [r0]
   236ac:	add	r0, r4, #32
   236b0:	vst1.32	{d16-d17}, [r0]
   236b4:	add	r0, r4, #16
   236b8:	vst1.32	{d16-d17}, [r0]
   236bc:	mov	r0, #28
   236c0:	vst1.32	{d16-d17}, [r5], r0
   236c4:	add	r0, r4, #8
   236c8:	bl	12118 <mycore_string_clean_all@plt>
   236cc:	mov	r0, r5
   236d0:	bl	12118 <mycore_string_clean_all@plt>
   236d4:	mov	r5, r4
   236d8:	mov	r0, r5
   236dc:	pop	{r4, r5, fp, pc}

000236e0 <myhtml_token_attr_clean@@Base>:
   236e0:	push	{r4, sl, fp, lr}
   236e4:	add	fp, sp, #8
   236e8:	vmov.i32	q8, #0	; 0x00000000
   236ec:	mov	r1, #1
   236f0:	mov	r4, r0
   236f4:	str	r1, [r0, #64]	; 0x40
   236f8:	add	r1, r0, #48	; 0x30
   236fc:	vst1.32	{d16-d17}, [r1]
   23700:	add	r1, r0, #32
   23704:	vst1.32	{d16-d17}, [r1]
   23708:	add	r1, r0, #16
   2370c:	add	r0, r0, #8
   23710:	vst1.32	{d16-d17}, [r1]
   23714:	mov	r1, #28
   23718:	vst1.32	{d16-d17}, [r4], r1
   2371c:	bl	12118 <mycore_string_clean_all@plt>
   23720:	mov	r0, r4
   23724:	pop	{r4, sl, fp, lr}
   23728:	b	12118 <mycore_string_clean_all@plt>

0002372c <myhtml_token_node_tag_id@@Base>:
   2372c:	ldr	r0, [r0]
   23730:	bx	lr

00023734 <myhtml_token_node_raw_position@@Base>:
   23734:	cmp	r1, #0
   23738:	beq	2374c <myhtml_token_node_raw_position@@Base+0x18>
   2373c:	ldr	r2, [r1, #24]
   23740:	ldr	r1, [r1, #28]
   23744:	str	r2, [r0]
   23748:	b	23754 <myhtml_token_node_raw_position@@Base+0x20>
   2374c:	mov	r1, #0
   23750:	str	r1, [r0]
   23754:	str	r1, [r0, #4]
   23758:	bx	lr

0002375c <myhtml_token_node_element_position@@Base>:
   2375c:	cmp	r1, #0
   23760:	beq	23774 <myhtml_token_node_element_position@@Base+0x18>
   23764:	ldr	r2, [r1, #32]
   23768:	ldr	r1, [r1, #36]	; 0x24
   2376c:	str	r2, [r0]
   23770:	b	2377c <myhtml_token_node_element_position@@Base+0x20>
   23774:	mov	r1, #0
   23778:	str	r1, [r0]
   2377c:	str	r1, [r0, #4]
   23780:	bx	lr

00023784 <myhtml_token_node_attribute_first@@Base>:
   23784:	ldr	r0, [r0, #40]	; 0x28
   23788:	bx	lr

0002378c <myhtml_token_node_attribute_last@@Base>:
   2378c:	ldr	r0, [r0, #44]	; 0x2c
   23790:	bx	lr

00023794 <myhtml_token_node_text@@Base>:
   23794:	cmp	r1, #0
   23798:	ldrne	r2, [r0, #12]
   2379c:	strne	r2, [r1]
   237a0:	ldr	r0, [r0, #4]
   237a4:	bx	lr

000237a8 <myhtml_token_node_string@@Base>:
   237a8:	add	r0, r0, #4
   237ac:	bx	lr

000237b0 <myhtml_token_node_is_close@@Base>:
   237b0:	ldr	r0, [r0, #48]	; 0x30
   237b4:	and	r0, r0, #1
   237b8:	bx	lr

000237bc <myhtml_token_node_is_close_self@@Base>:
   237bc:	ldr	r0, [r0, #48]	; 0x30
   237c0:	ubfx	r0, r0, #1, #1
   237c4:	bx	lr

000237c8 <myhtml_token_node_wait_for_done@@Base>:
   237c8:	push	{r4, r5, fp, lr}
   237cc:	add	fp, sp, #8
   237d0:	mov	r5, r0
   237d4:	ldr	r0, [r1, #48]	; 0x30
   237d8:	tst	r0, #4
   237dc:	popne	{r4, r5, fp, pc}
   237e0:	mov	r4, r1
   237e4:	ldr	r0, [r5]
   237e8:	ldr	r0, [r0]
   237ec:	ldr	r0, [r0]
   237f0:	ldr	r0, [r0, #24]
   237f4:	bl	113a4 <mythread_nanosleep_sleep@plt>
   237f8:	ldr	r0, [r4, #48]	; 0x30
   237fc:	tst	r0, #4
   23800:	beq	237e4 <myhtml_token_node_wait_for_done@@Base+0x1c>
   23804:	pop	{r4, r5, fp, pc}

00023808 <myhtml_token_set_done@@Base>:
   23808:	ldr	r1, [r0, #48]	; 0x30
   2380c:	orr	r1, r1, #4
   23810:	str	r1, [r0, #48]	; 0x30
   23814:	bx	lr

00023818 <myhtml_token_node_clone@@Base>:
   23818:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2381c:	add	fp, sp, #24
   23820:	mov	r8, #0
   23824:	cmp	r1, #0
   23828:	beq	238e8 <myhtml_token_node_clone@@Base+0xd0>
   2382c:	ldr	r9, [r0]
   23830:	mov	r7, r1
   23834:	mov	r1, r2
   23838:	mov	r4, r3
   2383c:	mov	r5, r0
   23840:	bl	11ba8 <myhtml_token_node_create@plt>
   23844:	cmp	r0, #0
   23848:	beq	238e8 <myhtml_token_node_clone@@Base+0xd0>
   2384c:	mov	r6, r0
   23850:	ldr	r0, [r7]
   23854:	mov	r1, #0
   23858:	str	r0, [r6]
   2385c:	ldr	r0, [r7, #48]	; 0x30
   23860:	str	r1, [r6, #40]	; 0x28
   23864:	str	r1, [r6, #44]	; 0x2c
   23868:	str	r0, [r6, #48]	; 0x30
   2386c:	add	r0, r7, #24
   23870:	vld1.32	{d16-d17}, [r0]
   23874:	add	r0, r6, #24
   23878:	vst1.32	{d16-d17}, [r0]
   2387c:	ldr	r2, [r7, #12]
   23880:	cmp	r2, #0
   23884:	beq	238b4 <myhtml_token_node_clone@@Base+0x9c>
   23888:	ldr	r0, [r9, #4]
   2388c:	ldr	r1, [r9, #52]	; 0x34
   23890:	add	r8, r6, #4
   23894:	add	r3, r2, #1
   23898:	mov	r2, r8
   2389c:	bl	11848 <mycore_string_init@plt>
   238a0:	ldr	r1, [r7, #4]
   238a4:	ldr	r2, [r7, #12]
   238a8:	mov	r0, r8
   238ac:	bl	11aa0 <mycore_string_append@plt>
   238b0:	b	238bc <myhtml_token_node_clone@@Base+0xa4>
   238b4:	add	r0, r6, #4
   238b8:	bl	12118 <mycore_string_clean_all@plt>
   238bc:	ldr	r7, [r7, #40]	; 0x28
   238c0:	cmp	r7, #0
   238c4:	beq	238e4 <myhtml_token_node_clone@@Base+0xcc>
   238c8:	mov	r0, r5
   238cc:	mov	r1, r7
   238d0:	mov	r2, r6
   238d4:	mov	r3, r4
   238d8:	bl	11974 <myhtml_token_attr_copy@plt>
   238dc:	ldr	r7, [r7]
   238e0:	b	238c0 <myhtml_token_node_clone@@Base+0xa8>
   238e4:	mov	r8, r6
   238e8:	mov	r0, r8
   238ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000238f0 <myhtml_token_node_attr_copy@@Base>:
   238f0:	push	{r4, r5, r6, r7, fp, lr}
   238f4:	add	fp, sp, #16
   238f8:	ldr	r7, [r1, #40]	; 0x28
   238fc:	cmp	r7, #0
   23900:	beq	23930 <myhtml_token_node_attr_copy@@Base+0x40>
   23904:	mov	r4, r3
   23908:	mov	r5, r2
   2390c:	mov	r6, r0
   23910:	mov	r0, r6
   23914:	mov	r1, r7
   23918:	mov	r2, r5
   2391c:	mov	r3, r4
   23920:	bl	11974 <myhtml_token_attr_copy@plt>
   23924:	ldr	r7, [r7]
   23928:	cmp	r7, #0
   2392c:	bne	23910 <myhtml_token_node_attr_copy@@Base+0x20>
   23930:	pop	{r4, r5, r6, r7, fp, pc}

00023934 <myhtml_token_node_text_append@@Base>:
   23934:	push	{r4, r5, r6, sl, fp, lr}
   23938:	add	fp, sp, #16
   2393c:	mov	r5, r2
   23940:	ldr	r2, [r0]
   23944:	add	r6, r1, #4
   23948:	mov	r4, r3
   2394c:	add	r3, r3, #2
   23950:	ldr	r0, [r2, #4]
   23954:	ldr	r2, [r2, #52]	; 0x34
   23958:	mov	r1, r2
   2395c:	mov	r2, r6
   23960:	bl	11848 <mycore_string_init@plt>
   23964:	mov	r0, r6
   23968:	mov	r1, r5
   2396c:	mov	r2, r4
   23970:	pop	{r4, r5, r6, sl, fp, lr}
   23974:	b	11aa0 <mycore_string_append@plt>

00023978 <myhtml_token_node_attr_append@@Base>:
   23978:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2397c:	add	fp, sp, #28
   23980:	sub	sp, sp, #4
   23984:	mov	r4, r1
   23988:	mov	sl, r0
   2398c:	ldr	r0, [r0, #8]
   23990:	ldr	r1, [fp, #16]
   23994:	mov	r9, r2
   23998:	mov	r2, #0
   2399c:	mov	r6, r3
   239a0:	mov	r7, #0
   239a4:	bl	11cec <mcobject_async_malloc@plt>
   239a8:	ldr	r8, [fp, #12]
   239ac:	mov	r5, r0
   239b0:	cmp	r6, #0
   239b4:	str	r7, [r0]
   239b8:	beq	239ec <myhtml_token_node_attr_append@@Base+0x74>
   239bc:	ldr	r1, [sl]
   239c0:	add	r7, r5, #8
   239c4:	add	r3, r6, #1
   239c8:	mov	r2, r7
   239cc:	ldr	r0, [r1, #4]
   239d0:	ldr	r1, [r1, #52]	; 0x34
   239d4:	bl	11848 <mycore_string_init@plt>
   239d8:	mov	r0, r7
   239dc:	mov	r1, r9
   239e0:	mov	r2, r6
   239e4:	bl	118c0 <mycore_string_append_lowercase@plt>
   239e8:	b	239f4 <myhtml_token_node_attr_append@@Base+0x7c>
   239ec:	add	r0, r5, #8
   239f0:	bl	12118 <mycore_string_clean_all@plt>
   239f4:	cmp	r8, #0
   239f8:	beq	23a30 <myhtml_token_node_attr_append@@Base+0xb8>
   239fc:	ldr	r1, [sl]
   23a00:	ldr	r6, [fp, #8]
   23a04:	add	r7, r5, #28
   23a08:	add	r3, r8, #1
   23a0c:	mov	r2, r7
   23a10:	ldr	r0, [r1, #4]
   23a14:	ldr	r1, [r1, #52]	; 0x34
   23a18:	bl	11848 <mycore_string_init@plt>
   23a1c:	mov	r0, r7
   23a20:	mov	r1, r6
   23a24:	mov	r2, r8
   23a28:	bl	11aa0 <mycore_string_append@plt>
   23a2c:	b	23a38 <myhtml_token_node_attr_append@@Base+0xc0>
   23a30:	add	r0, r5, #28
   23a34:	bl	12118 <mycore_string_clean_all@plt>
   23a38:	ldr	r0, [r4, #40]	; 0x28
   23a3c:	cmp	r0, #0
   23a40:	beq	23a54 <myhtml_token_node_attr_append@@Base+0xdc>
   23a44:	ldr	r0, [r4, #44]!	; 0x2c
   23a48:	str	r5, [r0]
   23a4c:	str	r0, [r5, #4]
   23a50:	b	23a64 <myhtml_token_node_attr_append@@Base+0xec>
   23a54:	mov	r0, #0
   23a58:	str	r0, [r5, #4]
   23a5c:	str	r5, [r4, #40]	; 0x28
   23a60:	add	r4, r4, #44	; 0x2c
   23a64:	mov	r0, #1
   23a68:	str	r5, [r4]
   23a6c:	str	r0, [r5, #64]	; 0x40
   23a70:	mov	r0, r5
   23a74:	sub	sp, fp, #28
   23a78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00023a7c <myhtml_token_node_attr_append_with_convert_encoding@@Base>:
   23a7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23a80:	add	fp, sp, #28
   23a84:	sub	sp, sp, #4
   23a88:	mov	r9, r1
   23a8c:	mov	sl, r0
   23a90:	ldr	r0, [r0, #8]
   23a94:	ldr	r1, [fp, #16]
   23a98:	str	r2, [sp]
   23a9c:	mov	r2, #0
   23aa0:	mov	r6, r3
   23aa4:	mov	r8, #0
   23aa8:	bl	11cec <mcobject_async_malloc@plt>
   23aac:	ldr	r4, [fp, #20]
   23ab0:	ldr	r7, [fp, #12]
   23ab4:	mov	r5, r0
   23ab8:	cmp	r6, #0
   23abc:	str	r8, [r0]
   23ac0:	beq	23b00 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x84>
   23ac4:	ldr	r1, [sl]
   23ac8:	add	r8, r5, #8
   23acc:	add	r3, r6, #1
   23ad0:	mov	r2, r8
   23ad4:	ldr	r0, [r1, #4]
   23ad8:	ldr	r1, [r1, #52]	; 0x34
   23adc:	bl	11848 <mycore_string_init@plt>
   23ae0:	mov	r0, r8
   23ae4:	cmp	r4, #0
   23ae8:	beq	23b0c <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x90>
   23aec:	ldr	r1, [sp]
   23af0:	mov	r2, r6
   23af4:	mov	r3, r4
   23af8:	bl	11194 <myencoding_string_append_lowercase_ascii@plt>
   23afc:	b	23b18 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x9c>
   23b00:	add	r0, r5, #8
   23b04:	bl	12118 <mycore_string_clean_all@plt>
   23b08:	b	23b18 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x9c>
   23b0c:	ldr	r1, [sp]
   23b10:	mov	r2, r6
   23b14:	bl	118c0 <mycore_string_append_lowercase@plt>
   23b18:	cmp	r7, #0
   23b1c:	beq	23b60 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xe4>
   23b20:	ldr	r1, [sl]
   23b24:	ldr	r8, [fp, #8]
   23b28:	add	r6, r5, #28
   23b2c:	add	r3, r7, #1
   23b30:	mov	r2, r6
   23b34:	ldr	r0, [r1, #4]
   23b38:	ldr	r1, [r1, #52]	; 0x34
   23b3c:	bl	11848 <mycore_string_init@plt>
   23b40:	mov	r0, r6
   23b44:	mov	r1, r8
   23b48:	mov	r2, r7
   23b4c:	cmp	r4, #0
   23b50:	beq	23b6c <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xf0>
   23b54:	mov	r3, r4
   23b58:	bl	116c8 <myencoding_string_append@plt>
   23b5c:	b	23b70 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xf4>
   23b60:	add	r0, r5, #28
   23b64:	bl	12118 <mycore_string_clean_all@plt>
   23b68:	b	23b70 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xf4>
   23b6c:	bl	11aa0 <mycore_string_append@plt>
   23b70:	ldr	r0, [r9, #40]	; 0x28
   23b74:	cmp	r0, #0
   23b78:	beq	23b8c <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x110>
   23b7c:	ldr	r0, [r9, #44]!	; 0x2c
   23b80:	str	r5, [r0]
   23b84:	str	r0, [r5, #4]
   23b88:	b	23b9c <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x120>
   23b8c:	mov	r0, #0
   23b90:	str	r0, [r5, #4]
   23b94:	str	r5, [r9, #40]	; 0x28
   23b98:	add	r9, r9, #44	; 0x2c
   23b9c:	mov	r0, #1
   23ba0:	str	r5, [r9]
   23ba4:	str	r0, [r5, #64]	; 0x40
   23ba8:	mov	r0, r5
   23bac:	sub	sp, fp, #28
   23bb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00023bb4 <myhtml_token_node_attr_copy_with_check@@Base>:
   23bb4:	push	{r4, r5, r6, r7, fp, lr}
   23bb8:	add	fp, sp, #16
   23bbc:	ldr	r7, [r1, #40]	; 0x28
   23bc0:	cmp	r7, #0
   23bc4:	beq	23c14 <myhtml_token_node_attr_copy_with_check@@Base+0x60>
   23bc8:	mov	r4, r3
   23bcc:	mov	r5, r2
   23bd0:	mov	r6, r0
   23bd4:	ldr	r2, [r7, #16]
   23bd8:	cmp	r2, #0
   23bdc:	beq	23c08 <myhtml_token_node_attr_copy_with_check@@Base+0x54>
   23be0:	ldr	r1, [r7, #8]
   23be4:	mov	r0, r5
   23be8:	bl	11f80 <myhtml_token_attr_by_name@plt>
   23bec:	cmp	r0, #0
   23bf0:	bne	23c08 <myhtml_token_node_attr_copy_with_check@@Base+0x54>
   23bf4:	mov	r0, r6
   23bf8:	mov	r1, r7
   23bfc:	mov	r2, r5
   23c00:	mov	r3, r4
   23c04:	bl	11974 <myhtml_token_attr_copy@plt>
   23c08:	ldr	r7, [r7]
   23c0c:	cmp	r7, #0
   23c10:	bne	23bd4 <myhtml_token_node_attr_copy_with_check@@Base+0x20>
   23c14:	pop	{r4, r5, r6, r7, fp, pc}

00023c18 <myhtml_token_attr_by_name@@Base>:
   23c18:	push	{r4, r5, r6, r7, fp, lr}
   23c1c:	add	fp, sp, #16
   23c20:	ldr	r7, [r0, #40]	; 0x28
   23c24:	mov	r4, #0
   23c28:	cmp	r7, #0
   23c2c:	beq	23c6c <myhtml_token_attr_by_name@@Base+0x54>
   23c30:	mov	r5, r2
   23c34:	mov	r6, r1
   23c38:	ldr	r0, [r7, #16]
   23c3c:	cmp	r0, r5
   23c40:	bne	23c58 <myhtml_token_attr_by_name@@Base+0x40>
   23c44:	ldr	r0, [r7, #8]
   23c48:	mov	r1, r6
   23c4c:	bl	10f90 <mycore_strcmp@plt>
   23c50:	cmp	r0, #0
   23c54:	beq	23c68 <myhtml_token_attr_by_name@@Base+0x50>
   23c58:	ldr	r7, [r7]
   23c5c:	cmp	r7, #0
   23c60:	bne	23c38 <myhtml_token_attr_by_name@@Base+0x20>
   23c64:	b	23c6c <myhtml_token_attr_by_name@@Base+0x54>
   23c68:	mov	r4, r7
   23c6c:	mov	r0, r4
   23c70:	pop	{r4, r5, r6, r7, fp, pc}

00023c74 <myhtml_token_attr_copy@@Base>:
   23c74:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   23c78:	add	fp, sp, #24
   23c7c:	mov	r7, r0
   23c80:	ldr	r0, [r0, #8]
   23c84:	mov	r8, r2
   23c88:	mov	r4, r1
   23c8c:	mov	r1, r3
   23c90:	mov	r2, #0
   23c94:	mov	r5, #0
   23c98:	bl	11cec <mcobject_async_malloc@plt>
   23c9c:	str	r5, [r0]
   23ca0:	mov	r6, r0
   23ca4:	ldr	r2, [r4, #16]
   23ca8:	cmp	r2, #0
   23cac:	beq	23ce0 <myhtml_token_attr_copy@@Base+0x6c>
   23cb0:	ldr	r1, [r7]
   23cb4:	add	r5, r6, #8
   23cb8:	add	r3, r2, #1
   23cbc:	mov	r2, r5
   23cc0:	ldr	r0, [r1, #4]
   23cc4:	ldr	r1, [r1, #52]	; 0x34
   23cc8:	bl	11848 <mycore_string_init@plt>
   23ccc:	ldr	r1, [r4, #8]
   23cd0:	ldr	r2, [r4, #16]
   23cd4:	mov	r0, r5
   23cd8:	bl	118c0 <mycore_string_append_lowercase@plt>
   23cdc:	b	23ce8 <myhtml_token_attr_copy@@Base+0x74>
   23ce0:	add	r0, r6, #8
   23ce4:	bl	12118 <mycore_string_clean_all@plt>
   23ce8:	ldr	r2, [r4, #36]	; 0x24
   23cec:	cmp	r2, #0
   23cf0:	beq	23d24 <myhtml_token_attr_copy@@Base+0xb0>
   23cf4:	ldr	r1, [r7]
   23cf8:	add	r5, r6, #28
   23cfc:	add	r3, r2, #1
   23d00:	mov	r2, r5
   23d04:	ldr	r0, [r1, #4]
   23d08:	ldr	r1, [r1, #52]	; 0x34
   23d0c:	bl	11848 <mycore_string_init@plt>
   23d10:	ldr	r1, [r4, #28]
   23d14:	ldr	r2, [r4, #36]	; 0x24
   23d18:	mov	r0, r5
   23d1c:	bl	11aa0 <mycore_string_append@plt>
   23d20:	b	23d2c <myhtml_token_attr_copy@@Base+0xb8>
   23d24:	add	r0, r6, #28
   23d28:	bl	12118 <mycore_string_clean_all@plt>
   23d2c:	ldr	r0, [r8, #40]	; 0x28
   23d30:	cmp	r0, #0
   23d34:	beq	23d48 <myhtml_token_attr_copy@@Base+0xd4>
   23d38:	ldr	r0, [r8, #44]!	; 0x2c
   23d3c:	str	r6, [r0]
   23d40:	str	r0, [r6, #4]
   23d44:	b	23d58 <myhtml_token_attr_copy@@Base+0xe4>
   23d48:	mov	r0, #0
   23d4c:	str	r0, [r6, #4]
   23d50:	str	r6, [r8, #40]	; 0x28
   23d54:	add	r8, r8, #44	; 0x2c
   23d58:	str	r6, [r8]
   23d5c:	ldr	r0, [r4, #64]	; 0x40
   23d60:	str	r0, [r6, #64]	; 0x40
   23d64:	mov	r0, #1
   23d68:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00023d6c <myhtml_token_attr_match@@Base>:
   23d6c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   23d70:	add	fp, sp, #24
   23d74:	ldr	r4, [r1, #40]	; 0x28
   23d78:	cmp	r4, #0
   23d7c:	beq	23dc8 <myhtml_token_attr_match@@Base+0x5c>
   23d80:	ldr	r7, [fp, #12]
   23d84:	ldr	r8, [fp, #8]
   23d88:	mov	r5, r3
   23d8c:	mov	r6, r2
   23d90:	ldr	r0, [r4, #16]
   23d94:	cmp	r0, r5
   23d98:	bne	23dbc <myhtml_token_attr_match@@Base+0x50>
   23d9c:	ldr	r0, [r4, #36]	; 0x24
   23da0:	cmp	r0, r7
   23da4:	bne	23dbc <myhtml_token_attr_match@@Base+0x50>
   23da8:	ldr	r0, [r4, #8]
   23dac:	mov	r1, r6
   23db0:	bl	10f90 <mycore_strcmp@plt>
   23db4:	cmp	r0, #0
   23db8:	beq	23dd4 <myhtml_token_attr_match@@Base+0x68>
   23dbc:	ldr	r4, [r4]
   23dc0:	cmp	r4, #0
   23dc4:	bne	23d90 <myhtml_token_attr_match@@Base+0x24>
   23dc8:	mov	r4, #0
   23dcc:	mov	r0, r4
   23dd0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23dd4:	ldr	r0, [r4, #28]
   23dd8:	mov	r1, r8
   23ddc:	bl	10f90 <mycore_strcmp@plt>
   23de0:	cmp	r0, #0
   23de4:	movne	r4, #0
   23de8:	b	23dcc <myhtml_token_attr_match@@Base+0x60>

00023dec <myhtml_token_attr_match_case@@Base>:
   23dec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   23df0:	add	fp, sp, #24
   23df4:	ldr	r4, [r1, #40]	; 0x28
   23df8:	cmp	r4, #0
   23dfc:	beq	23e48 <myhtml_token_attr_match_case@@Base+0x5c>
   23e00:	ldr	r7, [fp, #12]
   23e04:	ldr	r8, [fp, #8]
   23e08:	mov	r5, r3
   23e0c:	mov	r6, r2
   23e10:	ldr	r0, [r4, #16]
   23e14:	cmp	r0, r5
   23e18:	bne	23e3c <myhtml_token_attr_match_case@@Base+0x50>
   23e1c:	ldr	r0, [r4, #36]	; 0x24
   23e20:	cmp	r0, r7
   23e24:	bne	23e3c <myhtml_token_attr_match_case@@Base+0x50>
   23e28:	ldr	r0, [r4, #8]
   23e2c:	mov	r1, r6
   23e30:	bl	10f90 <mycore_strcmp@plt>
   23e34:	cmp	r0, #0
   23e38:	beq	23e54 <myhtml_token_attr_match_case@@Base+0x68>
   23e3c:	ldr	r4, [r4]
   23e40:	cmp	r4, #0
   23e44:	bne	23e10 <myhtml_token_attr_match_case@@Base+0x24>
   23e48:	mov	r4, #0
   23e4c:	mov	r0, r4
   23e50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23e54:	ldr	r0, [r4, #28]
   23e58:	mov	r1, r8
   23e5c:	bl	11794 <mycore_strcasecmp@plt>
   23e60:	cmp	r0, #0
   23e64:	movne	r4, #0
   23e68:	b	23e4c <myhtml_token_attr_match_case@@Base+0x60>

00023e6c <myhtml_token_adjust_mathml_attributes@@Base>:
   23e6c:	push	{fp, lr}
   23e70:	mov	fp, sp
   23e74:	ldr	r1, [pc, #56]	; 23eb4 <myhtml_token_adjust_mathml_attributes@@Base+0x48>
   23e78:	mov	r2, #13
   23e7c:	add	r1, pc, r1
   23e80:	bl	11f80 <myhtml_token_attr_by_name@plt>
   23e84:	cmp	r0, #0
   23e88:	popeq	{fp, pc}
   23e8c:	ldr	r0, [r0, #8]
   23e90:	ldr	r1, [pc, #32]	; 23eb8 <myhtml_token_adjust_mathml_attributes@@Base+0x4c>
   23e94:	add	r1, pc, r1
   23e98:	vldr	d16, [r1]
   23e9c:	add	r1, r1, #5
   23ea0:	vld1.8	{d17}, [r1]
   23ea4:	vst1.8	{d16}, [r0]
   23ea8:	add	r0, r0, #5
   23eac:	vst1.8	{d17}, [r0]
   23eb0:	pop	{fp, pc}
   23eb4:	andeq	r7, sp, r2, ror #12
   23eb8:	andeq	r7, sp, r4, asr #27

00023ebc <_myhtml_token_create_copy_srt@@Base>:
   23ebc:	push	{r4, r5, r6, sl, fp, lr}
   23ec0:	add	fp, sp, #16
   23ec4:	mov	r6, r1
   23ec8:	ldr	r1, [r0]
   23ecc:	mov	r5, r2
   23ed0:	add	r2, r2, #2
   23ed4:	mov	r4, r3
   23ed8:	ldr	r0, [r1, #4]
   23edc:	ldr	r1, [r1, #52]	; 0x34
   23ee0:	bl	11adc <mchar_async_malloc@plt>
   23ee4:	str	r0, [r4]
   23ee8:	mov	r1, r6
   23eec:	mov	r2, r5
   23ef0:	pop	{r4, r5, r6, sl, fp, lr}
   23ef4:	b	11590 <mycore_string_raw_copy@plt>

00023ef8 <myhtml_token_strict_doctype_by_token@@Base>:
   23ef8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   23efc:	add	fp, sp, #24
   23f00:	ldr	r5, [r1, #40]	; 0x28
   23f04:	mov	r4, r2
   23f08:	mov	r8, r0
   23f0c:	cmp	r5, #0
   23f10:	beq	24018 <myhtml_token_strict_doctype_by_token@@Base+0x120>
   23f14:	ldr	r6, [r5, #16]
   23f18:	cmp	r6, #0
   23f1c:	beq	24018 <myhtml_token_strict_doctype_by_token@@Base+0x120>
   23f20:	ldr	r1, [r8]
   23f24:	ldr	r7, [r5, #8]
   23f28:	add	r2, r6, #2
   23f2c:	ldr	r0, [r1, #4]
   23f30:	ldr	r1, [r1, #52]	; 0x34
   23f34:	bl	11adc <mchar_async_malloc@plt>
   23f38:	mov	r1, r7
   23f3c:	mov	r2, r6
   23f40:	str	r0, [r4, #4]
   23f44:	bl	11590 <mycore_string_raw_copy@plt>
   23f48:	ldr	r1, [r4, #4]
   23f4c:	ldr	r0, [pc, #528]	; 24164 <myhtml_token_strict_doctype_by_token@@Base+0x26c>
   23f50:	add	r0, pc, r0
   23f54:	bl	10f90 <mycore_strcmp@plt>
   23f58:	clz	r0, r0
   23f5c:	lsr	r0, r0, #5
   23f60:	strb	r0, [r4]
   23f64:	ldr	r5, [r5]
   23f68:	cmp	r5, #0
   23f6c:	beq	24124 <myhtml_token_strict_doctype_by_token@@Base+0x22c>
   23f70:	ldr	r0, [r5, #36]	; 0x24
   23f74:	cmp	r0, #0
   23f78:	beq	24124 <myhtml_token_strict_doctype_by_token@@Base+0x22c>
   23f7c:	ldr	r0, [r5, #28]
   23f80:	ldr	r1, [pc, #480]	; 24168 <myhtml_token_strict_doctype_by_token@@Base+0x270>
   23f84:	add	r1, pc, r1
   23f88:	bl	11794 <mycore_strcasecmp@plt>
   23f8c:	cmp	r0, #0
   23f90:	beq	24078 <myhtml_token_strict_doctype_by_token@@Base+0x180>
   23f94:	ldr	r0, [r5, #28]
   23f98:	ldr	r2, [r5, #36]	; 0x24
   23f9c:	ldr	r1, [pc, #464]	; 24174 <myhtml_token_strict_doctype_by_token@@Base+0x27c>
   23fa0:	add	r1, pc, r1
   23fa4:	bl	11554 <mycore_strncasecmp@plt>
   23fa8:	cmp	r0, #0
   23fac:	bne	240f8 <myhtml_token_strict_doctype_by_token@@Base+0x200>
   23fb0:	ldr	r6, [r5]
   23fb4:	cmp	r6, #0
   23fb8:	beq	240f8 <myhtml_token_strict_doctype_by_token@@Base+0x200>
   23fbc:	ldr	r0, [r6, #36]	; 0x24
   23fc0:	cmp	r0, #0
   23fc4:	beq	240f8 <myhtml_token_strict_doctype_by_token@@Base+0x200>
   23fc8:	ldr	r1, [r8]
   23fcc:	mov	r2, #3
   23fd0:	ldr	r0, [r1, #4]
   23fd4:	ldr	r1, [r1, #52]	; 0x34
   23fd8:	bl	11adc <mchar_async_malloc@plt>
   23fdc:	str	r0, [r4, #8]
   23fe0:	mov	r2, #1
   23fe4:	ldr	r1, [pc, #396]	; 24178 <myhtml_token_strict_doctype_by_token@@Base+0x280>
   23fe8:	add	r1, pc, r1
   23fec:	bl	11590 <mycore_string_raw_copy@plt>
   23ff0:	ldr	r1, [r8]
   23ff4:	ldr	r5, [r6, #28]
   23ff8:	ldr	r6, [r6, #36]	; 0x24
   23ffc:	ldr	r0, [r1, #4]
   24000:	ldr	r1, [r1, #52]	; 0x34
   24004:	add	r2, r6, #2
   24008:	bl	11adc <mchar_async_malloc@plt>
   2400c:	str	r0, [r4, #12]
   24010:	mov	r1, r5
   24014:	b	240f0 <myhtml_token_strict_doctype_by_token@@Base+0x1f8>
   24018:	mov	r5, #0
   2401c:	mov	r2, #3
   24020:	strb	r5, [r4]
   24024:	ldr	r1, [r8]
   24028:	ldr	r0, [r1, #4]
   2402c:	ldr	r1, [r1, #52]	; 0x34
   24030:	bl	11adc <mchar_async_malloc@plt>
   24034:	str	r0, [r4, #4]
   24038:	mov	r2, #1
   2403c:	ldr	r1, [pc, #296]	; 2416c <myhtml_token_strict_doctype_by_token@@Base+0x274>
   24040:	add	r1, pc, r1
   24044:	bl	11590 <mycore_string_raw_copy@plt>
   24048:	ldr	r0, [r4, #8]
   2404c:	cmp	r0, #0
   24050:	beq	24058 <myhtml_token_strict_doctype_by_token@@Base+0x160>
   24054:	bl	11eb4 <mycore_free@plt>
   24058:	str	r5, [r4, #8]
   2405c:	ldr	r0, [r4, #12]
   24060:	cmp	r0, #0
   24064:	beq	2406c <myhtml_token_strict_doctype_by_token@@Base+0x174>
   24068:	bl	11eb4 <mycore_free@plt>
   2406c:	mov	r0, #0
   24070:	str	r0, [r4, #12]
   24074:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   24078:	ldr	r5, [r5]
   2407c:	cmp	r5, #0
   24080:	beq	240f8 <myhtml_token_strict_doctype_by_token@@Base+0x200>
   24084:	ldr	r6, [r5, #36]	; 0x24
   24088:	cmp	r6, #0
   2408c:	beq	240f8 <myhtml_token_strict_doctype_by_token@@Base+0x200>
   24090:	ldr	r1, [r8]
   24094:	ldr	r7, [r5, #28]
   24098:	add	r2, r6, #2
   2409c:	ldr	r0, [r1, #4]
   240a0:	ldr	r1, [r1, #52]	; 0x34
   240a4:	bl	11adc <mchar_async_malloc@plt>
   240a8:	mov	r1, r7
   240ac:	mov	r2, r6
   240b0:	str	r0, [r4, #8]
   240b4:	bl	11590 <mycore_string_raw_copy@plt>
   240b8:	ldr	r0, [r5]
   240bc:	cmp	r0, #0
   240c0:	beq	24128 <myhtml_token_strict_doctype_by_token@@Base+0x230>
   240c4:	ldr	r6, [r0, #36]	; 0x24
   240c8:	cmp	r6, #0
   240cc:	beq	24128 <myhtml_token_strict_doctype_by_token@@Base+0x230>
   240d0:	ldr	r1, [r8]
   240d4:	ldr	r7, [r0, #28]
   240d8:	add	r2, r6, #2
   240dc:	ldr	r0, [r1, #4]
   240e0:	ldr	r1, [r1, #52]	; 0x34
   240e4:	bl	11adc <mchar_async_malloc@plt>
   240e8:	mov	r1, r7
   240ec:	str	r0, [r4, #12]
   240f0:	mov	r2, r6
   240f4:	b	2415c <myhtml_token_strict_doctype_by_token@@Base+0x264>
   240f8:	ldr	r0, [r4, #8]
   240fc:	cmp	r0, #0
   24100:	beq	24108 <myhtml_token_strict_doctype_by_token@@Base+0x210>
   24104:	bl	11eb4 <mycore_free@plt>
   24108:	mov	r5, #0
   2410c:	str	r5, [r4, #8]
   24110:	ldr	r0, [r4, #12]
   24114:	cmp	r0, #0
   24118:	beq	24120 <myhtml_token_strict_doctype_by_token@@Base+0x228>
   2411c:	bl	11eb4 <mycore_free@plt>
   24120:	str	r5, [r4, #12]
   24124:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   24128:	ldr	r0, [r4, #12]
   2412c:	cmp	r0, #0
   24130:	beq	24138 <myhtml_token_strict_doctype_by_token@@Base+0x240>
   24134:	bl	11eb4 <mycore_free@plt>
   24138:	ldr	r1, [r8]
   2413c:	mov	r2, #3
   24140:	ldr	r0, [r1, #4]
   24144:	ldr	r1, [r1, #52]	; 0x34
   24148:	bl	11adc <mchar_async_malloc@plt>
   2414c:	str	r0, [r4, #12]
   24150:	mov	r2, #1
   24154:	ldr	r1, [pc, #20]	; 24170 <myhtml_token_strict_doctype_by_token@@Base+0x278>
   24158:	add	r1, pc, r1
   2415c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   24160:	b	11590 <mycore_string_raw_copy@plt>
   24164:	andeq	r7, sp, r0, lsr lr
   24168:	andeq	r6, sp, r2, lsr #27
   2416c:	andeq	r7, sp, r8, lsr #24
   24170:	andeq	r7, sp, r0, lsl fp
   24174:	muleq	sp, r8, sp
   24178:	andeq	r7, sp, r0, lsl #25

0002417c <myhtml_token_doctype_check_html_4_0@@Base>:
   2417c:	push	{r4, sl, fp, lr}
   24180:	add	fp, sp, #8
   24184:	mov	r4, r0
   24188:	ldr	r0, [r0, #8]
   2418c:	ldr	r1, [pc, #64]	; 241d4 <myhtml_token_doctype_check_html_4_0@@Base+0x58>
   24190:	add	r1, pc, r1
   24194:	bl	10f90 <mycore_strcmp@plt>
   24198:	cmp	r0, #0
   2419c:	beq	241c4 <myhtml_token_doctype_check_html_4_0@@Base+0x48>
   241a0:	ldr	r0, [r4, #12]
   241a4:	cmp	r0, #0
   241a8:	beq	241cc <myhtml_token_doctype_check_html_4_0@@Base+0x50>
   241ac:	ldr	r1, [pc, #36]	; 241d8 <myhtml_token_doctype_check_html_4_0@@Base+0x5c>
   241b0:	add	r1, pc, r1
   241b4:	bl	10f90 <mycore_strcmp@plt>
   241b8:	cmp	r0, #0
   241bc:	movwne	r0, #1
   241c0:	pop	{r4, sl, fp, pc}
   241c4:	mov	r0, #0
   241c8:	pop	{r4, sl, fp, pc}
   241cc:	mov	r0, #1
   241d0:	pop	{r4, sl, fp, pc}
   241d4:	andeq	r7, sp, ip, asr r3
   241d8:	andeq	r7, sp, r5, asr r3

000241dc <myhtml_token_doctype_check_html_4_01@@Base>:
   241dc:	push	{r4, sl, fp, lr}
   241e0:	add	fp, sp, #8
   241e4:	mov	r4, r0
   241e8:	ldr	r0, [r0, #8]
   241ec:	ldr	r1, [pc, #64]	; 24234 <myhtml_token_doctype_check_html_4_01@@Base+0x58>
   241f0:	add	r1, pc, r1
   241f4:	bl	10f90 <mycore_strcmp@plt>
   241f8:	cmp	r0, #0
   241fc:	beq	24224 <myhtml_token_doctype_check_html_4_01@@Base+0x48>
   24200:	ldr	r0, [r4, #12]
   24204:	cmp	r0, #0
   24208:	beq	2422c <myhtml_token_doctype_check_html_4_01@@Base+0x50>
   2420c:	ldr	r1, [pc, #36]	; 24238 <myhtml_token_doctype_check_html_4_01@@Base+0x5c>
   24210:	add	r1, pc, r1
   24214:	bl	10f90 <mycore_strcmp@plt>
   24218:	cmp	r0, #0
   2421c:	movwne	r0, #1
   24220:	pop	{r4, sl, fp, pc}
   24224:	mov	r0, #0
   24228:	pop	{r4, sl, fp, pc}
   2422c:	mov	r0, #1
   24230:	pop	{r4, sl, fp, pc}
   24234:	andeq	r7, sp, r0, asr #6
   24238:	andeq	r7, sp, sl, lsr r3

0002423c <myhtml_token_doctype_check_xhtml_1_0@@Base>:
   2423c:	push	{r4, sl, fp, lr}
   24240:	add	fp, sp, #8
   24244:	mov	r4, r0
   24248:	ldr	r0, [r0, #12]
   2424c:	cmp	r0, #0
   24250:	beq	24288 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x4c>
   24254:	ldr	r0, [r4, #8]
   24258:	ldr	r1, [pc, #56]	; 24298 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x5c>
   2425c:	add	r1, pc, r1
   24260:	bl	10f90 <mycore_strcmp@plt>
   24264:	cmp	r0, #0
   24268:	beq	24290 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x54>
   2426c:	ldr	r0, [r4, #12]
   24270:	ldr	r1, [pc, #36]	; 2429c <myhtml_token_doctype_check_xhtml_1_0@@Base+0x60>
   24274:	add	r1, pc, r1
   24278:	bl	10f90 <mycore_strcmp@plt>
   2427c:	cmp	r0, #0
   24280:	movwne	r0, #1
   24284:	pop	{r4, sl, fp, pc}
   24288:	mov	r0, #1
   2428c:	pop	{r4, sl, fp, pc}
   24290:	mov	r0, #0
   24294:	pop	{r4, sl, fp, pc}
   24298:	andeq	r7, sp, r4, lsl r3
   2429c:	andeq	r7, sp, sp, lsl r3

000242a0 <myhtml_token_doctype_check_xhtml_1_1@@Base>:
   242a0:	push	{r4, sl, fp, lr}
   242a4:	add	fp, sp, #8
   242a8:	mov	r4, r0
   242ac:	ldr	r0, [r0, #12]
   242b0:	cmp	r0, #0
   242b4:	beq	242ec <myhtml_token_doctype_check_xhtml_1_1@@Base+0x4c>
   242b8:	ldr	r0, [r4, #8]
   242bc:	ldr	r1, [pc, #56]	; 242fc <myhtml_token_doctype_check_xhtml_1_1@@Base+0x5c>
   242c0:	add	r1, pc, r1
   242c4:	bl	10f90 <mycore_strcmp@plt>
   242c8:	cmp	r0, #0
   242cc:	beq	242f4 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x54>
   242d0:	ldr	r0, [r4, #12]
   242d4:	ldr	r1, [pc, #36]	; 24300 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x60>
   242d8:	add	r1, pc, r1
   242dc:	bl	10f90 <mycore_strcmp@plt>
   242e0:	cmp	r0, #0
   242e4:	movwne	r0, #1
   242e8:	pop	{r4, sl, fp, pc}
   242ec:	mov	r0, #1
   242f0:	pop	{r4, sl, fp, pc}
   242f4:	mov	r0, #0
   242f8:	pop	{r4, sl, fp, pc}
   242fc:	andeq	r7, sp, r3, lsl #6
   24300:	andeq	r7, sp, r5, lsl #6

00024304 <myhtml_token_release_and_check_doctype_attributes@@Base>:
   24304:	push	{r4, r5, fp, lr}
   24308:	add	fp, sp, #8
   2430c:	mov	r4, #0
   24310:	cmp	r2, #0
   24314:	beq	243c4 <myhtml_token_release_and_check_doctype_attributes@@Base+0xc0>
   24318:	mov	r5, r2
   2431c:	bl	11704 <myhtml_token_strict_doctype_by_token@plt>
   24320:	ldr	r0, [r5, #4]
   24324:	cmp	r0, #0
   24328:	beq	243c4 <myhtml_token_release_and_check_doctype_attributes@@Base+0xc0>
   2432c:	ldrb	r0, [r5]
   24330:	cmp	r0, #0
   24334:	bne	24344 <myhtml_token_release_and_check_doctype_attributes@@Base+0x40>
   24338:	ldr	r0, [r5, #8]
   2433c:	cmp	r0, #0
   24340:	beq	243a0 <myhtml_token_release_and_check_doctype_attributes@@Base+0x9c>
   24344:	ldr	r0, [r5, #8]
   24348:	cmp	r0, #0
   2434c:	beq	243c4 <myhtml_token_release_and_check_doctype_attributes@@Base+0xc0>
   24350:	ldrb	r0, [r5]
   24354:	cmp	r0, #0
   24358:	beq	243c0 <myhtml_token_release_and_check_doctype_attributes@@Base+0xbc>
   2435c:	mov	r0, r5
   24360:	bl	11788 <myhtml_token_doctype_check_html_4_0@plt>
   24364:	cmp	r0, #0
   24368:	beq	243c0 <myhtml_token_release_and_check_doctype_attributes@@Base+0xbc>
   2436c:	mov	r0, r5
   24370:	bl	1162c <myhtml_token_doctype_check_html_4_01@plt>
   24374:	cmp	r0, #0
   24378:	beq	243c0 <myhtml_token_release_and_check_doctype_attributes@@Base+0xbc>
   2437c:	mov	r0, r5
   24380:	bl	1189c <myhtml_token_doctype_check_xhtml_1_0@plt>
   24384:	cmp	r0, #0
   24388:	beq	243c0 <myhtml_token_release_and_check_doctype_attributes@@Base+0xbc>
   2438c:	mov	r0, r5
   24390:	bl	10fcc <myhtml_token_doctype_check_xhtml_1_1@plt>
   24394:	cmp	r0, #0
   24398:	moveq	r4, #1
   2439c:	b	243c4 <myhtml_token_release_and_check_doctype_attributes@@Base+0xc0>
   243a0:	ldr	r0, [r5, #12]
   243a4:	cmp	r0, #0
   243a8:	beq	243c0 <myhtml_token_release_and_check_doctype_attributes@@Base+0xbc>
   243ac:	ldr	r1, [pc, #24]	; 243cc <myhtml_token_release_and_check_doctype_attributes@@Base+0xc8>
   243b0:	add	r1, pc, r1
   243b4:	bl	10f90 <mycore_strcmp@plt>
   243b8:	cmp	r0, #0
   243bc:	bne	24344 <myhtml_token_release_and_check_doctype_attributes@@Base+0x40>
   243c0:	mov	r4, #1
   243c4:	mov	r0, r4
   243c8:	pop	{r4, r5, fp, pc}
   243cc:	andeq	r7, sp, sl, asr r2

000243d0 <myhtml_token_adjust_svg_attributes@@Base>:
   243d0:	push	{r4, r5, r6, r7, fp, lr}
   243d4:	add	fp, sp, #16
   243d8:	ldr	r7, [pc, #84]	; 24434 <myhtml_token_adjust_svg_attributes@@Base+0x64>
   243dc:	mov	r4, r0
   243e0:	mov	r6, #0
   243e4:	add	r7, pc, r7
   243e8:	mov	r0, r7
   243ec:	ldr	r1, [r0, r6]!
   243f0:	ldr	r2, [r0, #4]
   243f4:	mov	r0, r4
   243f8:	bl	11f80 <myhtml_token_attr_by_name@plt>
   243fc:	cmp	r0, #0
   24400:	beq	24424 <myhtml_token_adjust_svg_attributes@@Base+0x54>
   24404:	add	r5, r0, #8
   24408:	mov	r0, r5
   2440c:	bl	11e0c <mycore_string_clean@plt>
   24410:	add	r0, r7, r6
   24414:	ldr	r1, [r0, #8]
   24418:	ldr	r2, [r0, #12]
   2441c:	mov	r0, r5
   24420:	bl	11aa0 <mycore_string_append@plt>
   24424:	add	r6, r6, #16
   24428:	cmp	r6, #928	; 0x3a0
   2442c:	bne	243e8 <myhtml_token_adjust_svg_attributes@@Base+0x18>
   24430:	pop	{r4, r5, r6, r7, fp, pc}
   24434:	andeq	r0, pc, r0, lsr #13

00024438 <myhtml_token_adjust_foreign_attributes@@Base>:
   24438:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2443c:	add	fp, sp, #24
   24440:	ldr	r8, [pc, #92]	; 244a4 <myhtml_token_adjust_foreign_attributes@@Base+0x6c>
   24444:	mov	r9, r0
   24448:	mov	r7, #0
   2444c:	add	r8, pc, r8
   24450:	mov	r0, r8
   24454:	ldr	r1, [r0, r7]!
   24458:	ldr	r2, [r0, #4]
   2445c:	mov	r0, r9
   24460:	bl	11f80 <myhtml_token_attr_by_name@plt>
   24464:	cmp	r0, #0
   24468:	beq	24494 <myhtml_token_adjust_foreign_attributes@@Base+0x5c>
   2446c:	add	r6, r0, #8
   24470:	mov	r5, r0
   24474:	mov	r0, r6
   24478:	bl	11e0c <mycore_string_clean@plt>
   2447c:	add	r0, r8, r7
   24480:	add	r4, r0, #8
   24484:	mov	r0, r6
   24488:	ldm	r4, {r1, r2, r4}
   2448c:	bl	11aa0 <mycore_string_append@plt>
   24490:	str	r4, [r5, #64]	; 0x40
   24494:	add	r7, r7, #20
   24498:	cmp	r7, #220	; 0xdc
   2449c:	bne	24450 <myhtml_token_adjust_foreign_attributes@@Base+0x18>
   244a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   244a4:	ldrdeq	r0, [pc], -r8

000244a8 <myhtml_token_attr_compare@@Base>:
   244a8:	mov	r2, r0
   244ac:	mov	r0, #0
   244b0:	cmp	r2, #0
   244b4:	cmpne	r1, #0
   244b8:	bne	244c0 <myhtml_token_attr_compare@@Base+0x18>
   244bc:	bx	lr
   244c0:	push	{r4, r5, fp, lr}
   244c4:	add	fp, sp, #8
   244c8:	ldr	r4, [r2, #40]	; 0x28
   244cc:	ldr	r5, [r1, #40]	; 0x28
   244d0:	b	24520 <myhtml_token_attr_compare@@Base+0x78>
   244d4:	ldr	r0, [r5, #16]
   244d8:	ldr	r1, [r4, #16]
   244dc:	cmp	r1, r0
   244e0:	ldreq	r0, [r5, #36]	; 0x24
   244e4:	ldreq	r1, [r4, #36]	; 0x24
   244e8:	cmpeq	r1, r0
   244ec:	bne	2452c <myhtml_token_attr_compare@@Base+0x84>
   244f0:	ldr	r1, [r5, #8]
   244f4:	ldr	r0, [r4, #8]
   244f8:	bl	10f90 <mycore_strcmp@plt>
   244fc:	cmp	r0, #0
   24500:	bne	2452c <myhtml_token_attr_compare@@Base+0x84>
   24504:	ldr	r1, [r5, #28]
   24508:	ldr	r0, [r4, #28]
   2450c:	bl	11794 <mycore_strcasecmp@plt>
   24510:	cmp	r0, #0
   24514:	bne	2452c <myhtml_token_attr_compare@@Base+0x84>
   24518:	ldr	r4, [r4]
   2451c:	ldr	r5, [r5]
   24520:	cmp	r5, #0
   24524:	cmpne	r4, #0
   24528:	bne	244d4 <myhtml_token_attr_compare@@Base+0x2c>
   2452c:	orr	r0, r5, r4
   24530:	clz	r0, r0
   24534:	lsr	r0, r0, #5
   24538:	pop	{r4, r5, fp, lr}
   2453c:	bx	lr

00024540 <myhtml_token_delete@@Base>:
   24540:	push	{r4, r5, fp, lr}
   24544:	add	fp, sp, #8
   24548:	ldr	r2, [r1, #4]
   2454c:	mov	r4, r1
   24550:	mov	r5, r0
   24554:	cmp	r2, #0
   24558:	beq	24570 <myhtml_token_delete@@Base+0x30>
   2455c:	ldr	r0, [r4, #16]
   24560:	cmp	r0, #0
   24564:	beq	24570 <myhtml_token_delete@@Base+0x30>
   24568:	ldr	r1, [r4, #20]
   2456c:	bl	11938 <mchar_async_free@plt>
   24570:	ldr	r0, [r5, #4]
   24574:	mov	r1, r4
   24578:	pop	{r4, r5, fp, lr}
   2457c:	b	11374 <mcobject_async_free@plt>

00024580 <myhtml_token_attr_delete_all@@Base>:
   24580:	push	{r4, sl, fp, lr}
   24584:	add	fp, sp, #8
   24588:	ldr	r4, [r1, #40]	; 0x28
   2458c:	cmp	r4, #0
   24590:	beq	245dc <myhtml_token_attr_delete_all@@Base+0x5c>
   24594:	ldr	r2, [r4, #8]
   24598:	cmp	r2, #0
   2459c:	beq	245b4 <myhtml_token_attr_delete_all@@Base+0x34>
   245a0:	ldr	r0, [r4, #20]
   245a4:	cmp	r0, #0
   245a8:	beq	245b4 <myhtml_token_attr_delete_all@@Base+0x34>
   245ac:	ldr	r1, [r4, #24]
   245b0:	bl	11938 <mchar_async_free@plt>
   245b4:	ldr	r2, [r4, #28]
   245b8:	cmp	r2, #0
   245bc:	beq	245d4 <myhtml_token_attr_delete_all@@Base+0x54>
   245c0:	ldr	r0, [r4, #40]	; 0x28
   245c4:	cmp	r0, #0
   245c8:	beq	245d4 <myhtml_token_attr_delete_all@@Base+0x54>
   245cc:	ldr	r1, [r4, #44]	; 0x2c
   245d0:	bl	11938 <mchar_async_free@plt>
   245d4:	ldr	r4, [r4]
   245d8:	b	2458c <myhtml_token_attr_delete_all@@Base+0xc>
   245dc:	pop	{r4, sl, fp, pc}

000245e0 <myhtml_token_attr_remove@@Base>:
   245e0:	cmp	r1, #0
   245e4:	beq	24620 <myhtml_token_attr_remove@@Base+0x40>
   245e8:	ldm	r1, {r3, ip}
   245ec:	cmp	ip, #0
   245f0:	beq	24600 <myhtml_token_attr_remove@@Base+0x20>
   245f4:	str	r3, [ip]
   245f8:	ldr	r3, [r1]
   245fc:	b	24604 <myhtml_token_attr_remove@@Base+0x24>
   24600:	str	r3, [r0, #40]	; 0x28
   24604:	cmp	r3, #0
   24608:	add	r2, r3, #4
   2460c:	addeq	r2, r0, #44	; 0x2c
   24610:	mov	r0, #0
   24614:	str	ip, [r2]
   24618:	str	r0, [r1]
   2461c:	str	r0, [r1, #4]
   24620:	mov	r0, r1
   24624:	bx	lr

00024628 <myhtml_token_attr_remove_by_name@@Base>:
   24628:	push	{r4, sl, fp, lr}
   2462c:	add	fp, sp, #8
   24630:	mov	r4, r0
   24634:	bl	11f80 <myhtml_token_attr_by_name@plt>
   24638:	cmp	r0, #0
   2463c:	beq	2467c <myhtml_token_attr_remove_by_name@@Base+0x54>
   24640:	ldr	r1, [r0, #4]
   24644:	ldr	r2, [r0]
   24648:	cmp	r1, #0
   2464c:	beq	2465c <myhtml_token_attr_remove_by_name@@Base+0x34>
   24650:	str	r2, [r1]
   24654:	ldr	r2, [r0]
   24658:	b	24660 <myhtml_token_attr_remove_by_name@@Base+0x38>
   2465c:	str	r2, [r4, #40]	; 0x28
   24660:	cmp	r2, #0
   24664:	add	r3, r2, #4
   24668:	addeq	r3, r4, #44	; 0x2c
   2466c:	str	r1, [r3]
   24670:	mov	r1, #0
   24674:	str	r1, [r0]
   24678:	str	r1, [r0, #4]
   2467c:	pop	{r4, sl, fp, pc}

00024680 <myhtml_token_merged_two_token_string@@Base>:
   24680:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   24684:	add	fp, sp, #24
   24688:	sub	sp, sp, #24
   2468c:	mov	r7, r0
   24690:	ldr	r0, [r0, #8]
   24694:	mov	r8, r3
   24698:	mov	r6, r2
   2469c:	mov	r4, r1
   246a0:	bl	118b4 <myhtml_token_node_wait_for_done@plt>
   246a4:	ldr	r0, [r7, #8]
   246a8:	mov	r1, r6
   246ac:	bl	118b4 <myhtml_token_node_wait_for_done@plt>
   246b0:	mov	r0, #0
   246b4:	add	r9, r6, #4
   246b8:	add	r5, r4, #4
   246bc:	str	r0, [r4, #24]
   246c0:	str	r0, [r4, #28]
   246c4:	ldr	r1, [r7, #52]	; 0x34
   246c8:	ldr	r0, [r4, #20]
   246cc:	cmp	r0, r1
   246d0:	bne	246ec <myhtml_token_merged_two_token_string@@Base+0x6c>
   246d4:	cmp	r8, #0
   246d8:	bne	24770 <myhtml_token_merged_two_token_string@@Base+0xf0>
   246dc:	mov	r0, r5
   246e0:	mov	r1, r9
   246e4:	bl	11440 <mycore_string_copy@plt>
   246e8:	b	24770 <myhtml_token_merged_two_token_string@@Base+0xf0>
   246ec:	ldr	r0, [r6, #20]
   246f0:	cmp	r0, r1
   246f4:	bne	24718 <myhtml_token_merged_two_token_string@@Base+0x98>
   246f8:	cmp	r8, #0
   246fc:	movne	r0, r9
   24700:	movne	r1, r5
   24704:	moveq	r0, r5
   24708:	moveq	r1, r9
   2470c:	bl	11440 <mycore_string_copy@plt>
   24710:	mov	r4, r6
   24714:	b	24770 <myhtml_token_merged_two_token_string@@Base+0xf0>
   24718:	ldr	r0, [r6, #12]
   2471c:	ldr	r2, [r4, #12]
   24720:	mov	r6, sp
   24724:	add	r0, r2, r0
   24728:	mov	r2, r6
   2472c:	add	r3, r0, #2
   24730:	ldr	r0, [r7, #4]
   24734:	bl	11848 <mycore_string_init@plt>
   24738:	cmp	r8, #0
   2473c:	mov	r1, r5
   24740:	mov	r0, r6
   24744:	movne	r1, r9
   24748:	bl	11440 <mycore_string_copy@plt>
   2474c:	cmp	r8, #0
   24750:	mov	r0, r6
   24754:	movne	r9, r5
   24758:	mov	r1, r9
   2475c:	bl	11440 <mycore_string_copy@plt>
   24760:	vld1.32	{d16-d17}, [r6]!
   24764:	vst1.32	{d16-d17}, [r5]!
   24768:	ldr	r0, [r6]
   2476c:	str	r0, [r5]
   24770:	mov	r0, r4
   24774:	sub	sp, fp, #24
   24778:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002477c <myhtml_token_set_replacement_character_for_null_token@@Base>:
   2477c:	push	{r4, r5, r6, sl, fp, lr}
   24780:	add	fp, sp, #16
   24784:	sub	sp, sp, #24
   24788:	mov	r5, r0
   2478c:	ldr	r0, [r0, #8]
   24790:	mov	r4, r1
   24794:	bl	118b4 <myhtml_token_node_wait_for_done@plt>
   24798:	ldr	r2, [r4, #12]
   2479c:	ldr	r0, [r5, #4]
   247a0:	ldr	r1, [r5, #52]	; 0x34
   247a4:	mov	r5, sp
   247a8:	add	r3, r2, #2
   247ac:	mov	r2, r5
   247b0:	bl	11848 <mycore_string_init@plt>
   247b4:	mov	r6, r4
   247b8:	ldr	r2, [r4, #12]
   247bc:	mov	r0, r5
   247c0:	ldr	r1, [r6, #4]!
   247c4:	bl	11608 <mycore_string_append_with_replacement_null_characters@plt>
   247c8:	vld1.64	{d16-d17}, [r5]!
   247cc:	vst1.32	{d16-d17}, [r6]
   247d0:	ldr	r0, [r5]
   247d4:	str	r0, [r6, #16]
   247d8:	sub	sp, fp, #16
   247dc:	pop	{r4, r5, r6, sl, fp, pc}

000247e0 <myhtml_tokenizer_set_first_settings@@Base>:
   247e0:	push	{r4, sl, fp, lr}
   247e4:	add	fp, sp, #8
   247e8:	mov	r4, r0
   247ec:	ldr	r0, [r0, #24]
   247f0:	bl	11458 <mythread_queue_get_current_node@plt>
   247f4:	str	r0, [r4, #68]	; 0x44
   247f8:	bl	11e60 <mythread_queue_node_clean@plt>
   247fc:	ldr	r0, [r4, #68]	; 0x44
   24800:	str	r4, [r0]
   24804:	ldr	r0, [r4, #8]
   24808:	ldr	r1, [r0, #12]
   2480c:	bl	11ba8 <myhtml_token_node_create@plt>
   24810:	cmp	r0, #0
   24814:	str	r0, [r4, #64]	; 0x40
   24818:	beq	2482c <myhtml_tokenizer_set_first_settings@@Base+0x4c>
   2481c:	ldr	r0, [r4, #76]	; 0x4c
   24820:	str	r0, [r4, #80]	; 0x50
   24824:	mov	r0, #0
   24828:	pop	{r4, sl, fp, pc}
   2482c:	mov	r0, #2
   24830:	pop	{r4, sl, fp, pc}

00024834 <myhtml_tokenizer_begin@@Base>:
   24834:	b	24838 <myhtml_tokenizer_chunk@@Base>

00024838 <myhtml_tokenizer_chunk@@Base>:
   24838:	ldr	r3, [r0, #204]	; 0xcc
   2483c:	bic	r3, r3, #1
   24840:	cmp	r3, #4
   24844:	bne	2484c <myhtml_tokenizer_chunk@@Base+0x14>
   24848:	b	249ac <myhtml_tokenizer_chunk_with_stream_buffer@@Base>
   2484c:	b	24850 <myhtml_tokenizer_chunk_process@@Base>

00024850 <myhtml_tokenizer_chunk_process@@Base>:
   24850:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   24854:	add	fp, sp, #24
   24858:	sub	sp, sp, #16
   2485c:	ldr	r8, [r0]
   24860:	mov	r6, r1
   24864:	mov	r5, r0
   24868:	ldr	r1, [r0, #72]	; 0x48
   2486c:	ldr	r0, [r0, #76]	; 0x4c
   24870:	mov	r4, r2
   24874:	mov	r2, r6
   24878:	mov	r3, r4
   2487c:	ldr	r9, [r8, #24]
   24880:	bl	11398 <mycore_incoming_buffer_add@plt>
   24884:	str	r0, [r5, #76]	; 0x4c
   24888:	ldrb	r0, [r8, #32]
   2488c:	tst	r0, #1
   24890:	beq	248a0 <myhtml_tokenizer_chunk_process@@Base+0x50>
   24894:	ldr	r0, [r5, #180]	; 0xb4
   24898:	orr	r0, r0, #16
   2489c:	str	r0, [r5, #180]	; 0xb4
   248a0:	ldr	r0, [r5, #180]	; 0xb4
   248a4:	tst	r0, #16
   248a8:	bne	24900 <myhtml_tokenizer_chunk_process@@Base+0xb0>
   248ac:	ldr	r0, [r5, #20]
   248b0:	cmp	r0, #0
   248b4:	bne	248f8 <myhtml_tokenizer_chunk_process@@Base+0xa8>
   248b8:	mov	r0, #0
   248bc:	str	r0, [sp, #12]
   248c0:	ldr	r0, [r8]
   248c4:	ldr	r1, [r8, #20]
   248c8:	ldr	r3, [r5, #24]
   248cc:	ldr	r2, [r0, #16]
   248d0:	add	r0, sp, #12
   248d4:	str	r1, [sp]
   248d8:	mov	r1, #2
   248dc:	str	r0, [sp, #4]
   248e0:	add	r0, r8, #8
   248e4:	bl	1144c <mythread_queue_list_entry_push@plt>
   248e8:	str	r0, [r5, #20]
   248ec:	ldr	r0, [sp, #12]
   248f0:	cmp	r0, #0
   248f4:	bne	24964 <myhtml_tokenizer_chunk_process@@Base+0x114>
   248f8:	mov	r0, r5
   248fc:	bl	11560 <myhtml_tokenizer_post@plt>
   24900:	ldr	r0, [r5, #68]	; 0x44
   24904:	cmp	r0, #0
   24908:	beq	24954 <myhtml_tokenizer_chunk_process@@Base+0x104>
   2490c:	cmp	r4, #0
   24910:	beq	24940 <myhtml_tokenizer_chunk_process@@Base+0xf0>
   24914:	mov	r3, #0
   24918:	ldr	r0, [r5, #160]	; 0xa0
   2491c:	ldr	r1, [r5, #64]	; 0x40
   24920:	mov	r2, r6
   24924:	ldr	r7, [r9, r0, lsl #2]
   24928:	mov	r0, r5
   2492c:	str	r4, [sp]
   24930:	blx	r7
   24934:	mov	r3, r0
   24938:	cmp	r0, r4
   2493c:	bcc	24918 <myhtml_tokenizer_chunk_process@@Base+0xc8>
   24940:	ldr	r0, [r5, #192]	; 0xc0
   24944:	add	r0, r0, r4
   24948:	str	r0, [r5, #192]	; 0xc0
   2494c:	mov	r0, #0
   24950:	b	24964 <myhtml_tokenizer_chunk_process@@Base+0x114>
   24954:	mov	r0, r5
   24958:	bl	1183c <myhtml_tokenizer_set_first_settings@plt>
   2495c:	cmp	r0, #0
   24960:	beq	2490c <myhtml_tokenizer_chunk_process@@Base+0xbc>
   24964:	sub	sp, fp, #24
   24968:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002496c <myhtml_tokenizer_post@@Base>:
   2496c:	push	{r4, sl, fp, lr}
   24970:	add	fp, sp, #8
   24974:	ldr	r1, [r0]
   24978:	mov	r4, r0
   2497c:	ldr	r0, [r1]
   24980:	cmp	r0, #0
   24984:	beq	24994 <myhtml_tokenizer_post@@Base+0x28>
   24988:	mov	r1, #0
   2498c:	bl	11728 <mythread_resume@plt>
   24990:	ldr	r1, [r4]
   24994:	ldr	r0, [r1, #4]
   24998:	cmp	r0, #0
   2499c:	popeq	{r4, sl, fp, pc}
   249a0:	mov	r1, #0
   249a4:	pop	{r4, sl, fp, lr}
   249a8:	b	11728 <mythread_resume@plt>

000249ac <myhtml_tokenizer_chunk_with_stream_buffer@@Base>:
   249ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   249b0:	add	fp, sp, #28
   249b4:	sub	sp, sp, #4
   249b8:	mov	r7, r0
   249bc:	ldr	r0, [r0, #200]	; 0xc8
   249c0:	mov	r5, r2
   249c4:	mov	r6, r1
   249c8:	bl	11a10 <myencoding_get_function_by_id@plt>
   249cc:	ldr	r9, [r7, #148]	; 0x94
   249d0:	mov	sl, r0
   249d4:	cmp	r9, #0
   249d8:	beq	24ab8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x10c>
   249dc:	mov	r0, r9
   249e0:	bl	11cd4 <myhtml_stream_buffer_current_entry@plt>
   249e4:	cmp	r5, #0
   249e8:	beq	24b00 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x154>
   249ec:	ldr	r8, [r0, #4]
   249f0:	str	r7, [sp]
   249f4:	mov	r4, r0
   249f8:	add	r7, r9, #12
   249fc:	ldrb	r0, [r6]
   24a00:	mov	r1, r7
   24a04:	blx	sl
   24a08:	cmp	r0, #0
   24a0c:	bne	24a7c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xd0>
   24a10:	ldr	r3, [r4, #4]
   24a14:	ldr	r1, [r4, #8]
   24a18:	add	r2, r3, #4
   24a1c:	cmp	r2, r1
   24a20:	bcc	24a60 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xb4>
   24a24:	ldr	r0, [sp]
   24a28:	mov	r1, #0
   24a2c:	sub	r2, r3, r8
   24a30:	str	r1, [r0, #200]	; 0xc8
   24a34:	ldr	r1, [r4]
   24a38:	add	r1, r1, r8
   24a3c:	bl	11698 <myhtml_tokenizer_chunk_process@plt>
   24a40:	mov	r0, r9
   24a44:	mov	r1, #16384	; 0x4000
   24a48:	bl	11b00 <myhtml_stream_buffer_add_entry@plt>
   24a4c:	cmp	r0, #0
   24a50:	beq	24b10 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x164>
   24a54:	ldr	r3, [r0, #4]
   24a58:	mov	r4, r0
   24a5c:	mov	r8, r3
   24a60:	ldr	r1, [r4]
   24a64:	ldr	r0, [r9, #24]
   24a68:	add	r1, r1, r3
   24a6c:	bl	11f5c <myencoding_codepoint_to_ascii_utf_8@plt>
   24a70:	ldr	r1, [r4, #4]
   24a74:	add	r0, r1, r0
   24a78:	str	r0, [r4, #4]
   24a7c:	add	r6, r6, #1
   24a80:	subs	r5, r5, #1
   24a84:	bne	249fc <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x50>
   24a88:	ldr	r1, [r4, #4]
   24a8c:	mov	r7, #0
   24a90:	cmp	r1, r8
   24a94:	beq	24b14 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x168>
   24a98:	ldr	r0, [sp]
   24a9c:	mov	r7, #0
   24aa0:	sub	r2, r1, r8
   24aa4:	str	r7, [r0, #200]	; 0xc8
   24aa8:	ldr	r1, [r4]
   24aac:	add	r1, r1, r8
   24ab0:	bl	11698 <myhtml_tokenizer_chunk_process@plt>
   24ab4:	b	24b14 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x168>
   24ab8:	bl	11f44 <myhtml_stream_buffer_create@plt>
   24abc:	cmp	r0, #0
   24ac0:	str	r0, [r7, #148]	; 0x94
   24ac4:	beq	24b08 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x15c>
   24ac8:	mov	r1, #1024	; 0x400
   24acc:	mov	r4, r7
   24ad0:	bl	11e54 <myhtml_stream_buffer_init@plt>
   24ad4:	mov	r7, r0
   24ad8:	cmp	r0, #0
   24adc:	bne	24b14 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x168>
   24ae0:	ldr	r0, [r4, #148]	; 0x94
   24ae4:	mov	r1, #16384	; 0x4000
   24ae8:	mov	r7, r4
   24aec:	bl	11b00 <myhtml_stream_buffer_add_entry@plt>
   24af0:	cmp	r0, #0
   24af4:	beq	24b10 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x164>
   24af8:	ldr	r9, [r7, #148]	; 0x94
   24afc:	b	249dc <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x30>
   24b00:	mov	r7, #0
   24b04:	b	24b14 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x168>
   24b08:	mov	r7, #37632	; 0x9300
   24b0c:	b	24b14 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x168>
   24b10:	movw	r7, #37636	; 0x9304
   24b14:	mov	r0, r7
   24b18:	sub	sp, fp, #28
   24b1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00024b20 <myhtml_tokenizer_end@@Base>:
   24b20:	push	{r4, r5, fp, lr}
   24b24:	add	fp, sp, #8
   24b28:	sub	sp, sp, #8
   24b2c:	mov	r4, r0
   24b30:	ldr	r0, [r0, #76]	; 0x4c
   24b34:	cmp	r0, #0
   24b38:	beq	24b74 <myhtml_tokenizer_end@@Base+0x54>
   24b3c:	ldr	r3, [r0, #8]
   24b40:	ldr	r2, [r4, #192]	; 0xc0
   24b44:	ldr	ip, [r4]
   24b48:	ldr	r1, [r4, #64]	; 0x40
   24b4c:	ldr	r5, [r4, #160]	; 0xa0
   24b50:	sub	r2, r2, r3
   24b54:	str	r2, [r4, #192]	; 0xc0
   24b58:	ldr	r2, [ip, #24]
   24b5c:	add	r2, r2, r5, lsl #2
   24b60:	ldr	r5, [r2, #280]	; 0x118
   24b64:	ldr	r2, [r0]
   24b68:	mov	r0, r4
   24b6c:	str	r3, [sp]
   24b70:	blx	r5
   24b74:	ldr	r2, [r4, #64]	; 0x40
   24b78:	mov	r0, #251	; 0xfb
   24b7c:	mov	r1, #0
   24b80:	str	r0, [r2]
   24b84:	mov	r0, r4
   24b88:	bl	11350 <myhtml_queue_add@plt>
   24b8c:	cmp	r0, #0
   24b90:	beq	24ba0 <myhtml_tokenizer_end@@Base+0x80>
   24b94:	mov	r5, #2
   24b98:	str	r5, [r4, #196]	; 0xc4
   24b9c:	b	24ba4 <myhtml_tokenizer_end@@Base+0x84>
   24ba0:	ldr	r5, [r4, #196]	; 0xc4
   24ba4:	ldr	r0, [r4, #180]	; 0xb4
   24ba8:	tst	r0, #16
   24bac:	bne	24c18 <myhtml_tokenizer_end@@Base+0xf8>
   24bb0:	ldr	r0, [r4]
   24bb4:	ldr	r1, [r4, #20]
   24bb8:	ldr	r0, [r0]
   24bbc:	bl	11b3c <mythread_queue_list_entry_wait_for_done@plt>
   24bc0:	ldr	r0, [r4]
   24bc4:	ldr	r3, [r4, #20]
   24bc8:	ldr	r1, [r0], #8
   24bcc:	ldr	r2, [r1, #16]
   24bd0:	mov	r1, #0
   24bd4:	str	r1, [sp]
   24bd8:	mov	r1, #2
   24bdc:	bl	10fa8 <mythread_queue_list_entry_delete@plt>
   24be0:	str	r0, [r4, #20]
   24be4:	ldr	r0, [r4]
   24be8:	ldr	r0, [r0]
   24bec:	ldr	r0, [r0, #16]
   24bf0:	bl	11818 <mythread_queue_list_get_count@plt>
   24bf4:	cmp	r0, #0
   24bf8:	moveq	r0, r4
   24bfc:	bleq	11830 <myhtml_tokenizer_pause@plt>
   24c00:	cmp	r5, #0
   24c04:	bne	24c18 <myhtml_tokenizer_end@@Base+0xf8>
   24c08:	ldr	r0, [r4]
   24c0c:	ldr	r0, [r0]
   24c10:	bl	1177c <mythread_check_status@plt>
   24c14:	mov	r5, r0
   24c18:	ldr	r0, [r4, #180]	; 0xb4
   24c1c:	orr	r0, r0, #32
   24c20:	str	r0, [r4, #180]	; 0xb4
   24c24:	mov	r0, r5
   24c28:	sub	sp, fp, #8
   24c2c:	pop	{r4, r5, fp, pc}

00024c30 <myhtml_tokenizer_pause@@Base>:
   24c30:	push	{r4, sl, fp, lr}
   24c34:	add	fp, sp, #8
   24c38:	ldr	r1, [r0]
   24c3c:	mov	r4, r0
   24c40:	ldr	r0, [r1]
   24c44:	cmp	r0, #0
   24c48:	beq	24c54 <myhtml_tokenizer_pause@@Base+0x24>
   24c4c:	bl	11c50 <mythread_stop@plt>
   24c50:	ldr	r1, [r4]
   24c54:	ldr	r0, [r1, #4]
   24c58:	cmp	r0, #0
   24c5c:	popeq	{r4, sl, fp, pc}
   24c60:	pop	{r4, sl, fp, lr}
   24c64:	b	11c50 <mythread_stop@plt>

00024c68 <myhtml_tokenizer_fragment_init@@Base>:
   24c68:	push	{r4, r5, r6, sl, fp, lr}
   24c6c:	add	fp, sp, #16
   24c70:	mov	r6, r2
   24c74:	mov	r5, r1
   24c78:	mov	r4, r0
   24c7c:	bl	11314 <myhtml_tree_node_create@plt>
   24c80:	cmp	r6, #1
   24c84:	str	r0, [r4, #88]	; 0x58
   24c88:	stmib	r0, {r5, r6}
   24c8c:	bne	24cc0 <myhtml_tokenizer_fragment_init@@Base+0x58>
   24c90:	cmp	r5, #93	; 0x5d
   24c94:	bne	24cac <myhtml_tokenizer_fragment_init@@Base+0x44>
   24c98:	ldr	r0, [r4, #180]	; 0xb4
   24c9c:	tst	r0, #1
   24ca0:	moveq	r0, #0
   24ca4:	movne	r0, #4
   24ca8:	b	24cbc <myhtml_tokenizer_fragment_init@@Base+0x54>
   24cac:	ldr	r0, [r4, #28]
   24cb0:	mov	r1, r5
   24cb4:	bl	11bc0 <myhtml_tag_get_by_id@plt>
   24cb8:	ldr	r0, [r0, #12]
   24cbc:	str	r0, [r4, #160]	; 0xa0
   24cc0:	ldr	r0, [r4, #8]
   24cc4:	ldr	r1, [r0, #12]
   24cc8:	bl	11ba8 <myhtml_token_node_create@plt>
   24ccc:	ldr	r1, [r4, #88]	; 0x58
   24cd0:	cmp	r0, #0
   24cd4:	str	r0, [r1, #32]
   24cd8:	beq	24d20 <myhtml_tokenizer_fragment_init@@Base+0xb8>
   24cdc:	bl	117b8 <myhtml_token_set_done@plt>
   24ce0:	ldr	r0, [r4, #88]	; 0x58
   24ce4:	mov	r1, #0
   24ce8:	mov	r2, #1
   24cec:	ldr	r0, [r0, #32]
   24cf0:	str	r0, [r4, #156]	; 0x9c
   24cf4:	mov	r0, r4
   24cf8:	bl	10f9c <myhtml_tree_node_insert_root@plt>
   24cfc:	mov	r6, r0
   24d00:	cmp	r5, #128	; 0x80
   24d04:	bne	24d14 <myhtml_tokenizer_fragment_init@@Base+0xac>
   24d08:	mov	r0, r4
   24d0c:	mov	r1, #17
   24d10:	bl	112e4 <myhtml_tree_template_insertion_append@plt>
   24d14:	mov	r0, r4
   24d18:	bl	11944 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   24d1c:	b	24d24 <myhtml_tokenizer_fragment_init@@Base+0xbc>
   24d20:	mov	r6, #0
   24d24:	mov	r0, r6
   24d28:	pop	{r4, r5, r6, sl, fp, pc}

00024d2c <myhtml_tokenizer_wait@@Base>:
   24d2c:	ldr	r1, [r0]
   24d30:	ldr	r2, [r1]
   24d34:	cmp	r2, #0
   24d38:	bxeq	lr
   24d3c:	ldr	r1, [r0, #20]
   24d40:	mov	r0, r2
   24d44:	b	11b3c <mythread_queue_list_entry_wait_for_done@plt>

00024d48 <myhtml_tokenizer_calc_current_namespace@@Base>:
   24d48:	push	{r4, r5, fp, lr}
   24d4c:	add	fp, sp, #8
   24d50:	mov	r4, r0
   24d54:	ldr	r0, [r0, #184]	; 0xb8
   24d58:	tst	r0, #1
   24d5c:	bne	24dd0 <myhtml_tokenizer_calc_current_namespace@@Base+0x88>
   24d60:	ldr	r0, [r4, #180]	; 0xb4
   24d64:	tst	r0, #16
   24d68:	bne	24dc8 <myhtml_tokenizer_calc_current_namespace@@Base+0x80>
   24d6c:	mov	r5, r1
   24d70:	ldr	r1, [r1]
   24d74:	cmp	r1, #54	; 0x36
   24d78:	beq	24d88 <myhtml_tokenizer_calc_current_namespace@@Base+0x40>
   24d7c:	cmp	r1, #218	; 0xda
   24d80:	cmpne	r1, #124	; 0x7c
   24d84:	bne	24d90 <myhtml_tokenizer_calc_current_namespace@@Base+0x48>
   24d88:	str	r5, [r4, #156]	; 0x9c
   24d8c:	pop	{r4, r5, fp, pc}
   24d90:	ldr	r0, [r4, #156]	; 0x9c
   24d94:	cmp	r0, #0
   24d98:	beq	24dd0 <myhtml_tokenizer_calc_current_namespace@@Base+0x88>
   24d9c:	ldr	r0, [r5, #48]	; 0x30
   24da0:	tst	r0, #1
   24da4:	bne	24dd0 <myhtml_tokenizer_calc_current_namespace@@Base+0x88>
   24da8:	ldr	r0, [r4, #28]
   24dac:	bl	11bc0 <myhtml_tag_get_by_id@plt>
   24db0:	ldr	r0, [r0, #12]
   24db4:	cmp	r0, #0
   24db8:	popeq	{r4, r5, fp, pc}
   24dbc:	mov	r0, r4
   24dc0:	mov	r1, r5
   24dc4:	bl	11074 <myhtml_tree_wait_for_last_done_token@plt>
   24dc8:	ldr	r0, [r4, #164]	; 0xa4
   24dcc:	str	r0, [r4, #160]	; 0xa0
   24dd0:	pop	{r4, r5, fp, pc}

00024dd4 <myhtml_check_tag_parser@@Base>:
   24dd4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   24dd8:	add	fp, sp, #24
   24ddc:	sub	sp, sp, #8
   24de0:	mov	r4, r1
   24de4:	mov	r8, r2
   24de8:	ldr	r1, [r1, #24]
   24dec:	ldr	r5, [r0, #28]
   24df0:	mov	r6, r3
   24df4:	mov	r7, r0
   24df8:	ldr	r2, [r4, #28]
   24dfc:	cmp	r2, r3
   24e00:	bls	24e18 <myhtml_check_tag_parser@@Base+0x44>
   24e04:	mov	r0, r7
   24e08:	bl	111ac <myhtml_tree_incomming_buffer_make_data@plt>
   24e0c:	ldr	r2, [r4, #28]
   24e10:	mov	r1, r0
   24e14:	b	24e24 <myhtml_check_tag_parser@@Base+0x50>
   24e18:	ldr	r0, [r7, #192]	; 0xc0
   24e1c:	sub	r0, r1, r0
   24e20:	add	r1, r8, r0
   24e24:	mov	r0, r5
   24e28:	bl	11cc8 <myhtml_tag_get_by_name@plt>
   24e2c:	cmp	r0, #0
   24e30:	beq	24e44 <myhtml_check_tag_parser@@Base+0x70>
   24e34:	ldr	r0, [r0]
   24e38:	str	r0, [r4]
   24e3c:	sub	sp, fp, #24
   24e40:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   24e44:	ldr	r2, [r4, #28]
   24e48:	ldr	r1, [r4, #24]
   24e4c:	cmp	r2, r6
   24e50:	bls	24e70 <myhtml_check_tag_parser@@Base+0x9c>
   24e54:	mov	r0, r7
   24e58:	bl	111ac <myhtml_tree_incomming_buffer_make_data@plt>
   24e5c:	ldr	r2, [r4, #28]
   24e60:	mov	r1, r0
   24e64:	mov	r0, #1
   24e68:	str	r0, [sp]
   24e6c:	b	24e84 <myhtml_check_tag_parser@@Base+0xb0>
   24e70:	ldr	r0, [r7, #192]	; 0xc0
   24e74:	mov	r3, #1
   24e78:	str	r3, [sp]
   24e7c:	sub	r0, r1, r0
   24e80:	add	r1, r8, r0
   24e84:	mov	r0, r5
   24e88:	mov	r3, #0
   24e8c:	bl	11338 <myhtml_tag_add@plt>
   24e90:	mov	r1, r0
   24e94:	str	r0, [r4]
   24e98:	mov	r0, r5
   24e9c:	mov	r2, #1
   24ea0:	mov	r3, #1
   24ea4:	sub	sp, fp, #24
   24ea8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   24eac:	b	112cc <myhtml_tag_set_category@plt>

00024eb0 <myhtml_tokenizer_queue_create_text_node_if_need@@Base>:
   24eb0:	push	{r4, sl, fp, lr}
   24eb4:	add	fp, sp, #8
   24eb8:	mov	r4, r0
   24ebc:	ldr	r0, [r1]
   24ec0:	mov	r2, r1
   24ec4:	cmp	r0, #0
   24ec8:	bne	24f18 <myhtml_tokenizer_queue_create_text_node_if_need@@Base+0x68>
   24ecc:	ldr	r0, [r2, #24]
   24ed0:	cmp	r0, r3
   24ed4:	bcs	24f18 <myhtml_tokenizer_queue_create_text_node_if_need@@Base+0x68>
   24ed8:	mov	r1, #1
   24edc:	sub	r3, r3, r0
   24ee0:	ldr	ip, [fp, #8]
   24ee4:	str	r1, [r2]
   24ee8:	str	r3, [r2, #36]	; 0x24
   24eec:	ldr	r1, [r2, #32]
   24ef0:	ldr	lr, [r2, #48]	; 0x30
   24ef4:	str	r0, [r2, #32]
   24ef8:	str	r3, [r2, #28]
   24efc:	orr	r0, lr, ip
   24f00:	str	r0, [r2, #48]	; 0x30
   24f04:	mov	r0, r4
   24f08:	bl	11350 <myhtml_queue_add@plt>
   24f0c:	cmp	r0, #0
   24f10:	mov	r2, #0
   24f14:	ldreq	r2, [r4, #64]	; 0x40
   24f18:	mov	r0, r2
   24f1c:	pop	{r4, sl, fp, pc}

00024f20 <myhtml_tokenizer_set_state@@Base>:
   24f20:	push	{r4, sl, fp, lr}
   24f24:	add	fp, sp, #8
   24f28:	ldr	r2, [r1, #48]	; 0x30
   24f2c:	mov	r4, r0
   24f30:	mov	r0, #0
   24f34:	tst	r2, #1
   24f38:	bne	24f60 <myhtml_tokenizer_set_state@@Base+0x40>
   24f3c:	ldr	r1, [r1]
   24f40:	cmp	r1, #93	; 0x5d
   24f44:	bne	24f54 <myhtml_tokenizer_set_state@@Base+0x34>
   24f48:	ldr	r2, [r4, #180]	; 0xb4
   24f4c:	tst	r2, #1
   24f50:	beq	24f60 <myhtml_tokenizer_set_state@@Base+0x40>
   24f54:	ldr	r0, [r4, #28]
   24f58:	bl	11bc0 <myhtml_tag_get_by_id@plt>
   24f5c:	ldr	r0, [r0, #12]
   24f60:	str	r0, [r4, #160]	; 0xa0
   24f64:	pop	{r4, sl, fp, pc}

00024f68 <myhtml_tokenizer_state_rcdata@@Base>:
   24f68:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   24f6c:	add	fp, sp, #24
   24f70:	mov	r5, r0
   24f74:	ldr	r0, [r0, #60]	; 0x3c
   24f78:	ldr	r6, [fp, #8]
   24f7c:	mov	r4, r3
   24f80:	mov	r7, r2
   24f84:	mov	r8, r1
   24f88:	cmp	r0, #0
   24f8c:	bne	24fd4 <myhtml_tokenizer_state_rcdata@@Base+0x6c>
   24f90:	ldr	r0, [r5, #192]	; 0xc0
   24f94:	add	r0, r0, r4
   24f98:	str	r0, [r8, #24]
   24f9c:	ldr	r0, [r5, #68]	; 0x44
   24fa0:	bl	11080 <mythread_queue_get_prev_node@plt>
   24fa4:	cmp	r0, #0
   24fa8:	beq	24fc0 <myhtml_tokenizer_state_rcdata@@Base+0x58>
   24fac:	ldr	r0, [r0, #4]
   24fb0:	cmp	r0, #0
   24fb4:	beq	24fc0 <myhtml_tokenizer_state_rcdata@@Base+0x58>
   24fb8:	ldr	r0, [r0]
   24fbc:	b	24fd0 <myhtml_tokenizer_state_rcdata@@Base+0x68>
   24fc0:	ldr	r0, [r5, #88]	; 0x58
   24fc4:	cmp	r0, #0
   24fc8:	beq	24fd4 <myhtml_tokenizer_state_rcdata@@Base+0x6c>
   24fcc:	ldr	r0, [r0, #4]
   24fd0:	str	r0, [r5, #60]	; 0x3c
   24fd4:	cmp	r4, r6
   24fd8:	bcs	25014 <myhtml_tokenizer_state_rcdata@@Base+0xac>
   24fdc:	ldrb	r0, [r7, r4]
   24fe0:	cmp	r0, #60	; 0x3c
   24fe4:	beq	24ffc <myhtml_tokenizer_state_rcdata@@Base+0x94>
   24fe8:	add	r4, r4, #1
   24fec:	cmp	r6, r4
   24ff0:	bne	24fdc <myhtml_tokenizer_state_rcdata@@Base+0x74>
   24ff4:	mov	r4, r6
   24ff8:	b	25014 <myhtml_tokenizer_state_rcdata@@Base+0xac>
   24ffc:	ldr	r0, [r5, #192]	; 0xc0
   25000:	add	r0, r0, r4
   25004:	add	r4, r4, #1
   25008:	str	r0, [r8, #32]
   2500c:	mov	r0, #10
   25010:	str	r0, [r5, #160]	; 0xa0
   25014:	mov	r0, r4
   25018:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002501c <myhtml_tokenizer_state_rcdata_less_than_sign@@Base>:
   2501c:	ldrb	r1, [r2, r3]
   25020:	mov	r2, #2
   25024:	cmp	r1, #47	; 0x2f
   25028:	movweq	r2, #11
   2502c:	addeq	r3, r3, #1
   25030:	str	r2, [r0, #160]	; 0xa0
   25034:	mov	r0, r3
   25038:	bx	lr

0002503c <myhtml_tokenizer_state_rcdata_end_tag_open@@Base>:
   2503c:	ldrb	r1, [r2, r3]
   25040:	ldr	r2, [pc, #28]	; 25064 <myhtml_tokenizer_state_rcdata_end_tag_open@@Base+0x28>
   25044:	add	r2, pc, r2
   25048:	ldrb	r1, [r2, r1]
   2504c:	mov	r2, #2
   25050:	cmp	r1, #1
   25054:	movweq	r2, #12
   25058:	str	r2, [r0, #160]	; 0xa0
   2505c:	mov	r0, r3
   25060:	bx	lr
   25064:	andeq	r6, sp, lr, lsr #24

00025068 <_myhtml_tokenizer_state_andata_end_tag_name@@Base>:
   25068:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2506c:	add	fp, sp, #24
   25070:	mov	r5, r0
   25074:	mov	r6, r1
   25078:	ldr	r0, [r3]
   2507c:	mov	r4, r3
   25080:	ldr	r1, [r5, #192]	; 0xc0
   25084:	add	r0, r1, r0
   25088:	ldr	r1, [r6, #24]
   2508c:	sub	r0, r0, r1
   25090:	mov	r1, r6
   25094:	str	r0, [r6, #28]
   25098:	mov	r0, r5
   2509c:	ldr	r3, [r3]
   250a0:	bl	11d58 <myhtml_check_tag_parser@plt>
   250a4:	ldr	r0, [r6]
   250a8:	ldr	r2, [r5, #60]	; 0x3c
   250ac:	ldr	r1, [fp, #8]
   250b0:	cmp	r0, r2
   250b4:	bne	25158 <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0xf0>
   250b8:	ldr	r7, [r6, #24]
   250bc:	sub	r2, r7, #2
   250c0:	cmp	r2, r1
   250c4:	bls	2512c <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0xc4>
   250c8:	ldr	r8, [r6, #32]
   250cc:	ldr	r0, [fp, #12]
   250d0:	ldr	r3, [r6, #48]	; 0x30
   250d4:	orr	r0, r3, r0
   250d8:	str	r0, [r6, #48]	; 0x30
   250dc:	mov	r0, #1
   250e0:	str	r0, [r6]
   250e4:	sub	r0, r2, r1
   250e8:	str	r1, [r6, #24]
   250ec:	mov	r2, r6
   250f0:	str	r0, [r6, #28]
   250f4:	str	r1, [r6, #32]
   250f8:	str	r0, [r6, #36]	; 0x24
   250fc:	ldr	r0, [r6, #48]	; 0x30
   25100:	ldr	r1, [r6, #48]	; 0x30
   25104:	and	r0, r0, #8
   25108:	eor	r0, r1, r0
   2510c:	str	r0, [r6, #48]	; 0x30
   25110:	mov	r0, r5
   25114:	ldr	r1, [r4]
   25118:	bl	11350 <myhtml_queue_add@plt>
   2511c:	ldr	r6, [r5, #64]	; 0x40
   25120:	str	r8, [r6, #32]
   25124:	str	r7, [r6, #24]
   25128:	ldr	r0, [r5, #60]	; 0x3c
   2512c:	str	r0, [r6]
   25130:	ldr	r0, [r6, #48]	; 0x30
   25134:	orr	r0, r0, #1
   25138:	str	r0, [r6, #48]	; 0x30
   2513c:	ldr	r0, [r5, #192]	; 0xc0
   25140:	ldr	r1, [r4]
   25144:	add	r0, r1, r0
   25148:	sub	r0, r0, r7
   2514c:	str	r0, [r6, #28]
   25150:	mov	r0, #1
   25154:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   25158:	mov	r0, #0
   2515c:	str	r1, [r6, #24]
   25160:	mov	r1, #2
   25164:	str	r0, [r6, #28]
   25168:	str	r1, [r5, #160]	; 0xa0
   2516c:	ldr	r1, [r4]
   25170:	add	r1, r1, #1
   25174:	str	r1, [r4]
   25178:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002517c <myhtml_tokenizer_state_rcdata_end_tag_name@@Base>:
   2517c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   25180:	add	fp, sp, #24
   25184:	sub	sp, sp, #16
   25188:	str	r3, [sp, #12]
   2518c:	mov	r4, r0
   25190:	mov	r5, r1
   25194:	ldr	r0, [r0, #192]	; 0xc0
   25198:	ldr	r8, [r1, #24]
   2519c:	add	r0, r0, r3
   251a0:	str	r0, [r1, #24]
   251a4:	ldr	r0, [fp, #8]
   251a8:	cmp	r3, r0
   251ac:	bcs	252b8 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x13c>
   251b0:	ldr	r1, [pc, #292]	; 252dc <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x160>
   251b4:	add	r1, pc, r1
   251b8:	ldrb	r7, [r2, r3]
   251bc:	ldrb	r6, [r1, r7]
   251c0:	cmp	r6, #2
   251c4:	cmpne	r7, #47	; 0x2f
   251c8:	beq	251f0 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x74>
   251cc:	cmp	r7, #62	; 0x3e
   251d0:	beq	25248 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xcc>
   251d4:	cmp	r6, #1
   251d8:	bne	25238 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xbc>
   251dc:	add	r3, r3, #1
   251e0:	cmp	r0, r3
   251e4:	bne	251b8 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x3c>
   251e8:	str	r0, [sp, #12]
   251ec:	b	252b8 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x13c>
   251f0:	mov	r0, #16
   251f4:	str	r3, [sp, #12]
   251f8:	add	r3, sp, #12
   251fc:	mov	r1, r5
   25200:	str	r8, [sp]
   25204:	str	r0, [sp, #4]
   25208:	mov	r0, r4
   2520c:	bl	11d88 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   25210:	cmp	r0, #0
   25214:	beq	252b8 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x13c>
   25218:	mov	r0, #0
   2521c:	str	r0, [r4, #60]	; 0x3c
   25220:	mov	r0, #33	; 0x21
   25224:	str	r0, [r4, #160]	; 0xa0
   25228:	ldr	r0, [sp, #12]
   2522c:	add	r5, r0, #1
   25230:	str	r5, [sp, #12]
   25234:	b	252c0 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x144>
   25238:	mov	r0, #2
   2523c:	str	r3, [sp, #12]
   25240:	str	r0, [r4, #160]	; 0xa0
   25244:	b	252b8 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x13c>
   25248:	mov	r0, #16
   2524c:	str	r3, [sp, #12]
   25250:	add	r3, sp, #12
   25254:	mov	r1, r5
   25258:	str	r8, [sp]
   2525c:	str	r0, [sp, #4]
   25260:	mov	r0, r4
   25264:	bl	11d88 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   25268:	cmp	r0, #0
   2526c:	beq	252b8 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x13c>
   25270:	ldr	r0, [sp, #12]
   25274:	add	r5, r0, #1
   25278:	str	r5, [sp, #12]
   2527c:	ldr	r2, [r4, #64]	; 0x40
   25280:	ldr	r0, [r4, #192]	; 0xc0
   25284:	ldr	r1, [r2, #32]
   25288:	add	r0, r0, r5
   2528c:	sub	r0, r0, r1
   25290:	mov	r1, r5
   25294:	str	r0, [r2, #36]	; 0x24
   25298:	mov	r0, r4
   2529c:	bl	11350 <myhtml_queue_add@plt>
   252a0:	cmp	r0, #0
   252a4:	beq	252cc <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x150>
   252a8:	mov	r0, #69	; 0x45
   252ac:	mov	r5, #0
   252b0:	str	r0, [r4, #160]	; 0xa0
   252b4:	b	252c0 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x144>
   252b8:	str	r8, [r5, #24]
   252bc:	ldr	r5, [sp, #12]
   252c0:	mov	r0, r5
   252c4:	sub	sp, fp, #24
   252c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   252cc:	mov	r0, #0
   252d0:	str	r0, [r4, #160]	; 0xa0
   252d4:	str	r0, [r4, #60]	; 0x3c
   252d8:	b	252c0 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x144>
   252dc:			; <UNDEFINED> instruction: 0x000d6abe

000252e0 <myhtml_tokenizer_state_rawtext@@Base>:
   252e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   252e4:	add	fp, sp, #24
   252e8:	mov	r5, r0
   252ec:	ldr	r0, [r0, #60]	; 0x3c
   252f0:	ldr	r6, [fp, #8]
   252f4:	mov	r4, r3
   252f8:	mov	r7, r2
   252fc:	mov	r8, r1
   25300:	cmp	r0, #0
   25304:	bne	2534c <myhtml_tokenizer_state_rawtext@@Base+0x6c>
   25308:	ldr	r0, [r5, #192]	; 0xc0
   2530c:	add	r0, r0, r4
   25310:	str	r0, [r8, #24]
   25314:	ldr	r0, [r5, #68]	; 0x44
   25318:	bl	11080 <mythread_queue_get_prev_node@plt>
   2531c:	cmp	r0, #0
   25320:	beq	25338 <myhtml_tokenizer_state_rawtext@@Base+0x58>
   25324:	ldr	r0, [r0, #4]
   25328:	cmp	r0, #0
   2532c:	beq	25338 <myhtml_tokenizer_state_rawtext@@Base+0x58>
   25330:	ldr	r0, [r0]
   25334:	b	25348 <myhtml_tokenizer_state_rawtext@@Base+0x68>
   25338:	ldr	r0, [r5, #88]	; 0x58
   2533c:	cmp	r0, #0
   25340:	beq	2534c <myhtml_tokenizer_state_rawtext@@Base+0x6c>
   25344:	ldr	r0, [r0, #4]
   25348:	str	r0, [r5, #60]	; 0x3c
   2534c:	cmp	r4, r6
   25350:	bcs	2538c <myhtml_tokenizer_state_rawtext@@Base+0xac>
   25354:	ldrb	r0, [r7, r4]
   25358:	cmp	r0, #60	; 0x3c
   2535c:	beq	25374 <myhtml_tokenizer_state_rawtext@@Base+0x94>
   25360:	add	r4, r4, #1
   25364:	cmp	r6, r4
   25368:	bne	25354 <myhtml_tokenizer_state_rawtext@@Base+0x74>
   2536c:	mov	r4, r6
   25370:	b	2538c <myhtml_tokenizer_state_rawtext@@Base+0xac>
   25374:	ldr	r0, [r5, #192]	; 0xc0
   25378:	add	r0, r0, r4
   2537c:	add	r4, r4, #1
   25380:	str	r0, [r8, #32]
   25384:	mov	r0, #13
   25388:	str	r0, [r5, #160]	; 0xa0
   2538c:	mov	r0, r4
   25390:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00025394 <myhtml_tokenizer_state_rawtext_less_than_sign@@Base>:
   25394:	ldrb	r1, [r2, r3]
   25398:	mov	r2, #4
   2539c:	cmp	r1, #47	; 0x2f
   253a0:	movweq	r2, #14
   253a4:	addeq	r3, r3, #1
   253a8:	str	r2, [r0, #160]	; 0xa0
   253ac:	mov	r0, r3
   253b0:	bx	lr

000253b4 <myhtml_tokenizer_state_rawtext_end_tag_open@@Base>:
   253b4:	ldrb	r1, [r2, r3]
   253b8:	ldr	r2, [pc, #28]	; 253dc <myhtml_tokenizer_state_rawtext_end_tag_open@@Base+0x28>
   253bc:	add	r2, pc, r2
   253c0:	ldrb	r1, [r2, r1]
   253c4:	mov	r2, #4
   253c8:	cmp	r1, #1
   253cc:	movweq	r2, #15
   253d0:	str	r2, [r0, #160]	; 0xa0
   253d4:	mov	r0, r3
   253d8:	bx	lr
   253dc:			; <UNDEFINED> instruction: 0x000d68b6

000253e0 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base>:
   253e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   253e4:	add	fp, sp, #24
   253e8:	sub	sp, sp, #16
   253ec:	str	r3, [sp, #12]
   253f0:	mov	r8, r0
   253f4:	mov	r5, r3
   253f8:	ldr	r0, [r0, #192]	; 0xc0
   253fc:	add	r3, r0, r3
   25400:	ldr	r0, [r1, #24]
   25404:	str	r3, [r1, #24]
   25408:	ldr	r3, [fp, #8]
   2540c:	cmp	r5, r3
   25410:	bcs	25454 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x74>
   25414:	ldr	r4, [pc, #280]	; 25534 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x154>
   25418:	add	r4, pc, r4
   2541c:	ldrb	r7, [r2, r5]
   25420:	ldrb	r6, [r4, r7]
   25424:	cmp	r6, #2
   25428:	cmpne	r7, #47	; 0x2f
   2542c:	beq	25464 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x84>
   25430:	cmp	r7, #62	; 0x3e
   25434:	beq	254c0 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xe0>
   25438:	cmp	r6, #1
   2543c:	bne	254a4 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xc4>
   25440:	add	r5, r5, #1
   25444:	cmp	r3, r5
   25448:	bne	2541c <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x3c>
   2544c:	mov	r5, r3
   25450:	str	r3, [sp, #12]
   25454:	str	r0, [r1, #24]
   25458:	mov	r0, r5
   2545c:	sub	sp, fp, #24
   25460:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   25464:	mov	r3, #32
   25468:	stm	sp, {r0, r3}
   2546c:	add	r3, sp, #12
   25470:	mov	r0, r8
   25474:	str	r5, [sp, #12]
   25478:	bl	11d88 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   2547c:	cmp	r0, #0
   25480:	beq	254b8 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xd8>
   25484:	mov	r0, #0
   25488:	str	r0, [r8, #60]	; 0x3c
   2548c:	mov	r0, #33	; 0x21
   25490:	str	r0, [r8, #160]	; 0xa0
   25494:	ldr	r0, [sp, #12]
   25498:	add	r5, r0, #1
   2549c:	str	r5, [sp, #12]
   254a0:	b	25458 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x78>
   254a4:	str	r5, [sp, #12]
   254a8:	str	r0, [r1, #24]
   254ac:	mov	r0, #4
   254b0:	str	r0, [r8, #160]	; 0xa0
   254b4:	b	25458 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x78>
   254b8:	ldr	r5, [sp, #12]
   254bc:	b	25458 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x78>
   254c0:	mov	r3, #32
   254c4:	stm	sp, {r0, r3}
   254c8:	add	r3, sp, #12
   254cc:	mov	r0, r8
   254d0:	str	r5, [sp, #12]
   254d4:	bl	11d88 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   254d8:	ldr	r5, [sp, #12]
   254dc:	cmp	r0, #0
   254e0:	beq	25458 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x78>
   254e4:	add	r5, r5, #1
   254e8:	str	r5, [sp, #12]
   254ec:	ldr	r2, [r8, #64]	; 0x40
   254f0:	ldr	r0, [r8, #192]	; 0xc0
   254f4:	ldr	r1, [r2, #32]
   254f8:	add	r0, r0, r5
   254fc:	sub	r0, r0, r1
   25500:	mov	r1, r5
   25504:	str	r0, [r2, #36]	; 0x24
   25508:	mov	r0, r8
   2550c:	bl	11350 <myhtml_queue_add@plt>
   25510:	cmp	r0, #0
   25514:	beq	25524 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x144>
   25518:	mov	r0, #69	; 0x45
   2551c:	mov	r5, #0
   25520:	b	254b0 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xd0>
   25524:	mov	r0, #0
   25528:	str	r0, [r8, #160]	; 0xa0
   2552c:	str	r0, [r8, #60]	; 0x3c
   25530:	b	25458 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x78>
   25534:	andeq	r6, sp, sl, asr r8

00025538 <myhtml_tokenizer_state_plaintext@@Base>:
   25538:	push	{r4, r5, fp, lr}
   2553c:	add	fp, sp, #8
   25540:	mov	r4, r0
   25544:	ldr	r0, [r1, #48]	; 0x30
   25548:	ldr	r5, [fp, #8]
   2554c:	mov	r2, r1
   25550:	tst	r0, #128	; 0x80
   25554:	bne	25564 <myhtml_tokenizer_state_plaintext@@Base+0x2c>
   25558:	ldr	r0, [r2, #48]	; 0x30
   2555c:	orr	r0, r0, #128	; 0x80
   25560:	str	r0, [r2, #48]	; 0x30
   25564:	ldr	r0, [r2, #48]	; 0x30
   25568:	ldr	r1, [r2, #48]	; 0x30
   2556c:	and	r0, r0, #8
   25570:	eor	r0, r1, r0
   25574:	mov	r1, #1
   25578:	str	r0, [r2, #48]	; 0x30
   2557c:	ldr	r0, [r4, #192]	; 0xc0
   25580:	str	r1, [r2]
   25584:	add	r1, r0, r3
   25588:	add	r0, r0, r5
   2558c:	sub	r0, r0, r1
   25590:	str	r0, [r2, #36]	; 0x24
   25594:	str	r1, [r2, #24]
   25598:	str	r0, [r2, #28]
   2559c:	mov	r0, #0
   255a0:	mov	r1, r5
   255a4:	str	r0, [r4, #160]	; 0xa0
   255a8:	mov	r0, r4
   255ac:	bl	11350 <myhtml_queue_add@plt>
   255b0:	cmp	r0, #0
   255b4:	movne	r0, #69	; 0x45
   255b8:	movne	r5, #0
   255bc:	strne	r0, [r4, #160]	; 0xa0
   255c0:	mov	r0, r5
   255c4:	pop	{r4, r5, fp, pc}

000255c8 <myhtml_tokenizer_state_cdata_section@@Base>:
   255c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   255cc:	add	fp, sp, #28
   255d0:	sub	sp, sp, #4
   255d4:	mov	r4, r0
   255d8:	ldr	r0, [r1, #48]	; 0x30
   255dc:	ldr	r8, [fp, #8]
   255e0:	mov	sl, r3
   255e4:	mov	r6, r2
   255e8:	mov	r9, r1
   255ec:	tst	r0, #256	; 0x100
   255f0:	bne	25600 <myhtml_tokenizer_state_cdata_section@@Base+0x38>
   255f4:	ldr	r0, [r9, #48]	; 0x30
   255f8:	orr	r0, r0, #256	; 0x100
   255fc:	str	r0, [r9, #48]	; 0x30
   25600:	cmp	sl, r8
   25604:	bcs	2566c <myhtml_tokenizer_state_cdata_section@@Base+0xa4>
   25608:	rsb	r7, r8, #0
   2560c:	sub	r5, sl, #2
   25610:	add	r0, r6, r5
   25614:	ldrb	r1, [r0, #2]
   25618:	cmp	r1, #62	; 0x3e
   2561c:	bne	25658 <myhtml_tokenizer_state_cdata_section@@Base+0x90>
   25620:	add	r1, r5, #2
   25624:	cmp	r1, #1
   25628:	bhi	25640 <myhtml_tokenizer_state_cdata_section@@Base+0x78>
   2562c:	ldr	r0, [r4, #192]	; 0xc0
   25630:	mov	r2, #2
   25634:	add	r1, r5, r0
   25638:	mov	r0, r4
   2563c:	bl	111ac <myhtml_tree_incomming_buffer_make_data@plt>
   25640:	ldrb	r1, [r0]
   25644:	cmp	r1, #93	; 0x5d
   25648:	bne	25658 <myhtml_tokenizer_state_cdata_section@@Base+0x90>
   2564c:	ldrb	r0, [r0, #1]
   25650:	cmp	r0, #93	; 0x5d
   25654:	beq	25678 <myhtml_tokenizer_state_cdata_section@@Base+0xb0>
   25658:	add	r5, r5, #1
   2565c:	add	r0, r7, r5
   25660:	cmn	r0, #2
   25664:	bne	25610 <myhtml_tokenizer_state_cdata_section@@Base+0x48>
   25668:	mov	sl, r8
   2566c:	mov	r0, sl
   25670:	sub	sp, fp, #28
   25674:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25678:	ldr	r1, [r9, #24]
   2567c:	ldr	r0, [r4, #192]	; 0xc0
   25680:	add	sl, r5, #3
   25684:	sub	r1, r0, r1
   25688:	adds	r1, r1, r5
   2568c:	str	r1, [r9, #28]
   25690:	beq	256cc <myhtml_tokenizer_state_cdata_section@@Base+0x104>
   25694:	ldr	r1, [r9, #32]
   25698:	mov	r2, r9
   2569c:	sub	r0, r0, r1
   256a0:	mov	r1, sl
   256a4:	add	r0, r0, r5
   256a8:	add	r0, r0, #3
   256ac:	str	r0, [r9, #36]	; 0x24
   256b0:	mov	r0, r4
   256b4:	bl	11350 <myhtml_queue_add@plt>
   256b8:	cmp	r0, #0
   256bc:	beq	256d8 <myhtml_tokenizer_state_cdata_section@@Base+0x110>
   256c0:	mov	r0, #69	; 0x45
   256c4:	mov	sl, #0
   256c8:	b	256dc <myhtml_tokenizer_state_cdata_section@@Base+0x114>
   256cc:	add	r0, r0, r5
   256d0:	add	r0, r0, #3
   256d4:	str	r0, [r9, #24]
   256d8:	mov	r0, #0
   256dc:	str	r0, [r4, #160]	; 0xa0
   256e0:	b	2566c <myhtml_tokenizer_state_cdata_section@@Base+0xa4>

000256e4 <myhtml_tokenizer_state_data@@Base>:
   256e4:	push	{r4, r5, fp, lr}
   256e8:	add	fp, sp, #8
   256ec:	ldr	ip, [fp, #8]
   256f0:	cmp	r3, ip
   256f4:	bcs	25794 <myhtml_tokenizer_state_data@@Base+0xb0>
   256f8:	ldr	lr, [pc, #156]	; 2579c <myhtml_tokenizer_state_data@@Base+0xb8>
   256fc:	add	lr, pc, lr
   25700:	ldrb	r4, [r2, r3]
   25704:	cmp	r4, #0
   25708:	beq	25718 <myhtml_tokenizer_state_data@@Base+0x34>
   2570c:	cmp	r4, #60	; 0x3c
   25710:	bne	25730 <myhtml_tokenizer_state_data@@Base+0x4c>
   25714:	b	2577c <myhtml_tokenizer_state_data@@Base+0x98>
   25718:	ldr	r5, [r1, #48]	; 0x30
   2571c:	tst	r5, #2048	; 0x800
   25720:	bne	25730 <myhtml_tokenizer_state_data@@Base+0x4c>
   25724:	ldr	r4, [r1, #48]	; 0x30
   25728:	orr	r4, r4, #2048	; 0x800
   2572c:	b	25764 <myhtml_tokenizer_state_data@@Base+0x80>
   25730:	ldr	r5, [r1, #48]	; 0x30
   25734:	tst	r5, #8
   25738:	beq	25768 <myhtml_tokenizer_state_data@@Base+0x84>
   2573c:	ldrb	r4, [lr, r4]
   25740:	cmp	r4, #2
   25744:	beq	25768 <myhtml_tokenizer_state_data@@Base+0x84>
   25748:	ldr	r4, [r1, #48]	; 0x30
   2574c:	ldr	r5, [r1, #48]	; 0x30
   25750:	and	r4, r4, #8
   25754:	eor	r4, r5, r4
   25758:	str	r4, [r1, #48]	; 0x30
   2575c:	ldr	r4, [r1, #48]	; 0x30
   25760:	orr	r4, r4, #512	; 0x200
   25764:	str	r4, [r1, #48]	; 0x30
   25768:	add	r3, r3, #1
   2576c:	cmp	ip, r3
   25770:	bne	25700 <myhtml_tokenizer_state_data@@Base+0x1c>
   25774:	mov	r3, ip
   25778:	b	25794 <myhtml_tokenizer_state_data@@Base+0xb0>
   2577c:	ldr	r2, [r0, #192]	; 0xc0
   25780:	add	r2, r2, r3
   25784:	add	r3, r3, #1
   25788:	str	r2, [r1, #32]
   2578c:	mov	r1, #7
   25790:	str	r1, [r0, #160]	; 0xa0
   25794:	mov	r0, r3
   25798:	pop	{r4, r5, fp, pc}
   2579c:	andeq	r6, sp, r6, ror r5

000257a0 <myhtml_tokenizer_state_tag_open@@Base>:
   257a0:	push	{r4, r5, fp, lr}
   257a4:	add	fp, sp, #8
   257a8:	sub	sp, sp, #8
   257ac:	mov	r5, r0
   257b0:	ldrb	r0, [r2, r3]
   257b4:	ldr	r2, [pc, #276]	; 258d0 <myhtml_tokenizer_state_tag_open@@Base+0x130>
   257b8:	mov	r4, r3
   257bc:	add	r2, pc, r2
   257c0:	ldrb	r2, [r2, r0]
   257c4:	cmp	r2, #1
   257c8:	bne	25804 <myhtml_tokenizer_state_tag_open@@Base+0x64>
   257cc:	ldr	r0, [r5, #192]	; 0xc0
   257d0:	mov	r2, #512	; 0x200
   257d4:	str	r2, [sp]
   257d8:	add	r0, r4, r0
   257dc:	sub	r3, r0, #1
   257e0:	mov	r0, r5
   257e4:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   257e8:	cmp	r0, #0
   257ec:	beq	25890 <myhtml_tokenizer_state_tag_open@@Base+0xf0>
   257f0:	ldr	r1, [r5, #192]	; 0xc0
   257f4:	add	r1, r1, r4
   257f8:	str	r1, [r0, #24]
   257fc:	mov	r0, #9
   25800:	b	258c0 <myhtml_tokenizer_state_tag_open@@Base+0x120>
   25804:	cmp	r0, #63	; 0x3f
   25808:	beq	25858 <myhtml_tokenizer_state_tag_open@@Base+0xb8>
   2580c:	cmp	r0, #47	; 0x2f
   25810:	beq	2589c <myhtml_tokenizer_state_tag_open@@Base+0xfc>
   25814:	cmp	r0, #33	; 0x21
   25818:	bne	258a8 <myhtml_tokenizer_state_tag_open@@Base+0x108>
   2581c:	ldr	r0, [r5, #192]	; 0xc0
   25820:	mov	r2, #512	; 0x200
   25824:	str	r2, [sp]
   25828:	add	r0, r4, r0
   2582c:	sub	r3, r0, #1
   25830:	mov	r0, r5
   25834:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   25838:	cmp	r0, #0
   2583c:	beq	25890 <myhtml_tokenizer_state_tag_open@@Base+0xf0>
   25840:	ldr	r1, [r5, #192]	; 0xc0
   25844:	add	r4, r4, #1
   25848:	add	r1, r1, r4
   2584c:	str	r1, [r0, #24]
   25850:	mov	r0, #44	; 0x2c
   25854:	b	258c0 <myhtml_tokenizer_state_tag_open@@Base+0x120>
   25858:	ldr	r0, [r5, #192]	; 0xc0
   2585c:	mov	r2, #512	; 0x200
   25860:	str	r2, [sp]
   25864:	add	r0, r4, r0
   25868:	sub	r3, r0, #1
   2586c:	mov	r0, r5
   25870:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   25874:	cmp	r0, #0
   25878:	beq	25890 <myhtml_tokenizer_state_tag_open@@Base+0xf0>
   2587c:	ldr	r1, [r5, #192]	; 0xc0
   25880:	add	r1, r1, r4
   25884:	str	r1, [r0, #24]
   25888:	mov	r0, #43	; 0x2b
   2588c:	b	258c0 <myhtml_tokenizer_state_tag_open@@Base+0x120>
   25890:	mov	r4, #0
   25894:	mov	r0, #69	; 0x45
   25898:	b	258c0 <myhtml_tokenizer_state_tag_open@@Base+0x120>
   2589c:	add	r4, r4, #1
   258a0:	mov	r0, #8
   258a4:	b	258c0 <myhtml_tokenizer_state_tag_open@@Base+0x120>
   258a8:	ldr	r0, [r1, #48]	; 0x30
   258ac:	ldr	r2, [r1, #48]	; 0x30
   258b0:	and	r0, r0, #8
   258b4:	eor	r0, r2, r0
   258b8:	str	r0, [r1, #48]	; 0x30
   258bc:	mov	r0, #0
   258c0:	str	r0, [r5, #160]	; 0xa0
   258c4:	mov	r0, r4
   258c8:	sub	sp, fp, #8
   258cc:	pop	{r4, r5, fp, pc}
   258d0:			; <UNDEFINED> instruction: 0x000d64b6

000258d4 <myhtml_tokenizer_state_end_tag_open@@Base>:
   258d4:	push	{r4, r5, fp, lr}
   258d8:	add	fp, sp, #8
   258dc:	sub	sp, sp, #8
   258e0:	mov	r5, r0
   258e4:	ldrb	r0, [r2, r3]
   258e8:	ldr	r2, [pc, #180]	; 259a4 <myhtml_tokenizer_state_end_tag_open@@Base+0xd0>
   258ec:	mov	r4, r3
   258f0:	add	r2, pc, r2
   258f4:	ldrb	r2, [r2, r0]
   258f8:	cmp	r2, #1
   258fc:	bne	25940 <myhtml_tokenizer_state_end_tag_open@@Base+0x6c>
   25900:	ldr	r0, [r5, #192]	; 0xc0
   25904:	mov	r2, #512	; 0x200
   25908:	str	r2, [sp]
   2590c:	add	r0, r4, r0
   25910:	sub	r3, r0, #2
   25914:	mov	r0, r5
   25918:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2591c:	cmp	r0, #0
   25920:	beq	2598c <myhtml_tokenizer_state_end_tag_open@@Base+0xb8>
   25924:	ldr	r1, [r5, #192]	; 0xc0
   25928:	mov	r2, #1
   2592c:	str	r2, [r0, #48]	; 0x30
   25930:	add	r1, r1, r4
   25934:	str	r1, [r0, #24]
   25938:	mov	r0, #9
   2593c:	b	25994 <myhtml_tokenizer_state_end_tag_open@@Base+0xc0>
   25940:	cmp	r0, #62	; 0x3e
   25944:	bne	25954 <myhtml_tokenizer_state_end_tag_open@@Base+0x80>
   25948:	add	r4, r4, #1
   2594c:	mov	r0, #0
   25950:	b	25994 <myhtml_tokenizer_state_end_tag_open@@Base+0xc0>
   25954:	ldr	r0, [r5, #192]	; 0xc0
   25958:	mov	r2, #512	; 0x200
   2595c:	str	r2, [sp]
   25960:	add	r0, r4, r0
   25964:	sub	r3, r0, #2
   25968:	mov	r0, r5
   2596c:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   25970:	cmp	r0, #0
   25974:	beq	2598c <myhtml_tokenizer_state_end_tag_open@@Base+0xb8>
   25978:	ldr	r1, [r5, #192]	; 0xc0
   2597c:	add	r1, r1, r4
   25980:	str	r1, [r0, #24]
   25984:	mov	r0, #43	; 0x2b
   25988:	b	25994 <myhtml_tokenizer_state_end_tag_open@@Base+0xc0>
   2598c:	mov	r4, #0
   25990:	mov	r0, #69	; 0x45
   25994:	str	r0, [r5, #160]	; 0xa0
   25998:	mov	r0, r4
   2599c:	sub	sp, fp, #8
   259a0:	pop	{r4, r5, fp, pc}
   259a4:	andeq	r6, sp, r2, lsl #7

000259a8 <myhtml_tokenizer_state_markup_declaration_open@@Base>:
   259a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   259ac:	add	fp, sp, #24
   259b0:	mov	r4, r1
   259b4:	mov	r6, r0
   259b8:	ldr	r1, [r1, #24]
   259bc:	ldr	r0, [r0, #192]	; 0xc0
   259c0:	ldr	r7, [fp, #8]
   259c4:	mov	r5, r3
   259c8:	add	r0, r0, r7
   259cc:	add	r2, r1, #2
   259d0:	cmp	r2, r0
   259d4:	bhi	25a38 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x90>
   259d8:	mov	r0, r6
   259dc:	mov	r2, #2
   259e0:	bl	111ac <myhtml_tree_incomming_buffer_make_data@plt>
   259e4:	ldrb	r1, [r0]
   259e8:	cmp	r1, #45	; 0x2d
   259ec:	bne	25a20 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x78>
   259f0:	ldrb	r0, [r0, #1]
   259f4:	cmp	r0, #45	; 0x2d
   259f8:	bne	25a20 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x78>
   259fc:	mov	r0, #45	; 0x2d
   25a00:	add	r5, r5, #2
   25a04:	mov	r1, #0
   25a08:	str	r0, [r6, #160]	; 0xa0
   25a0c:	ldr	r0, [r6, #192]	; 0xc0
   25a10:	add	r0, r0, r5
   25a14:	str	r0, [r4, #24]
   25a18:	str	r1, [r4, #28]
   25a1c:	b	25a44 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x9c>
   25a20:	ldr	r0, [r6, #192]	; 0xc0
   25a24:	ldr	r1, [r4, #24]
   25a28:	add	r0, r0, r7
   25a2c:	add	r2, r1, #7
   25a30:	cmp	r2, r0
   25a34:	bls	25a4c <myhtml_tokenizer_state_markup_declaration_open@@Base+0xa4>
   25a38:	ldr	r0, [r6, #76]	; 0x4c
   25a3c:	str	r5, [r0, #4]
   25a40:	mov	r5, r7
   25a44:	mov	r0, r5
   25a48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   25a4c:	mov	r0, r6
   25a50:	mov	r2, #7
   25a54:	mov	r8, #7
   25a58:	bl	111ac <myhtml_tree_incomming_buffer_make_data@plt>
   25a5c:	ldr	r1, [pc, #248]	; 25b5c <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1b4>
   25a60:	mov	r2, #7
   25a64:	mov	r7, r0
   25a68:	add	r1, pc, r1
   25a6c:	bl	11554 <mycore_strncasecmp@plt>
   25a70:	cmp	r0, #0
   25a74:	beq	25aa8 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x100>
   25a78:	ldr	r1, [pc, #224]	; 25b60 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1b8>
   25a7c:	mov	r0, r7
   25a80:	mov	r2, #7
   25a84:	add	r1, pc, r1
   25a88:	bl	12040 <strncmp@plt>
   25a8c:	cmp	r0, #0
   25a90:	beq	25ad4 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x12c>
   25a94:	mov	r0, #0
   25a98:	str	r0, [r4, #28]
   25a9c:	mov	r0, #43	; 0x2b
   25aa0:	str	r0, [r6, #160]	; 0xa0
   25aa4:	b	25a44 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x9c>
   25aa8:	mov	r0, #51	; 0x33
   25aac:	mov	r1, #3
   25ab0:	str	r0, [r6, #160]	; 0xa0
   25ab4:	ldr	r0, [r6, #76]	; 0x4c
   25ab8:	ldr	r0, [r0, #12]
   25abc:	str	r8, [r4, #28]
   25ac0:	str	r1, [r4]
   25ac4:	ldr	r1, [r4, #24]
   25ac8:	sub	r0, r1, r0
   25acc:	add	r5, r0, #7
   25ad0:	b	25a44 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x9c>
   25ad4:	ldr	r0, [r6, #68]	; 0x44
   25ad8:	ldr	r0, [r0, #8]
   25adc:	cmp	r0, #0
   25ae0:	beq	25a94 <myhtml_tokenizer_state_markup_declaration_open@@Base+0xec>
   25ae4:	ldr	r1, [r0, #4]
   25ae8:	cmp	r1, #0
   25aec:	beq	25a94 <myhtml_tokenizer_state_markup_declaration_open@@Base+0xec>
   25af0:	mov	r0, r6
   25af4:	bl	11074 <myhtml_tree_wait_for_last_done_token@plt>
   25af8:	mov	r0, r6
   25afc:	bl	11e3c <myhtml_tree_adjusted_current_node@plt>
   25b00:	cmp	r0, #0
   25b04:	beq	25a94 <myhtml_tokenizer_state_markup_declaration_open@@Base+0xec>
   25b08:	ldr	r0, [r0, #8]
   25b0c:	cmp	r0, #1
   25b10:	beq	25a94 <myhtml_tokenizer_state_markup_declaration_open@@Base+0xec>
   25b14:	mov	r0, #67	; 0x43
   25b18:	mov	r1, #1
   25b1c:	str	r0, [r6, #160]	; 0xa0
   25b20:	ldr	r0, [r6, #76]	; 0x4c
   25b24:	ldr	r0, [r0, #12]
   25b28:	str	r1, [r4]
   25b2c:	mov	r1, #0
   25b30:	str	r1, [r4, #28]
   25b34:	ldr	r1, [r4, #24]
   25b38:	add	r1, r1, #7
   25b3c:	str	r1, [r4, #24]
   25b40:	sub	r5, r1, r0
   25b44:	ldr	r2, [r4, #48]	; 0x30
   25b48:	ldr	r3, [r4, #48]	; 0x30
   25b4c:	and	r2, r2, #8
   25b50:	eor	r2, r3, r2
   25b54:	str	r2, [r4, #48]	; 0x30
   25b58:	b	25a44 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x9c>
   25b5c:			; <UNDEFINED> instruction: 0x000d52b4
   25b60:	andeq	r6, sp, r6, ror #3

00025b64 <myhtml_tokenizer_state_tag_name@@Base>:
   25b64:	push	{r4, r5, r6, r7, fp, lr}
   25b68:	add	fp, sp, #16
   25b6c:	mov	r7, r0
   25b70:	ldr	r0, [fp, #8]
   25b74:	mov	r4, r3
   25b78:	cmp	r3, r0
   25b7c:	bcs	25c8c <myhtml_tokenizer_state_tag_name@@Base+0x128>
   25b80:	mov	r6, r1
   25b84:	ldr	r1, [pc, #264]	; 25c94 <myhtml_tokenizer_state_tag_name@@Base+0x130>
   25b88:	add	r1, pc, r1
   25b8c:	ldrb	r3, [r2, r4]
   25b90:	ldrb	r5, [r1, r3]
   25b94:	cmp	r5, #2
   25b98:	beq	25bc0 <myhtml_tokenizer_state_tag_name@@Base+0x5c>
   25b9c:	cmp	r3, #62	; 0x3e
   25ba0:	beq	25bec <myhtml_tokenizer_state_tag_name@@Base+0x88>
   25ba4:	cmp	r3, #47	; 0x2f
   25ba8:	beq	25c5c <myhtml_tokenizer_state_tag_name@@Base+0xf8>
   25bac:	add	r4, r4, #1
   25bb0:	cmp	r0, r4
   25bb4:	bne	25b8c <myhtml_tokenizer_state_tag_name@@Base+0x28>
   25bb8:	mov	r4, r0
   25bbc:	b	25c8c <myhtml_tokenizer_state_tag_name@@Base+0x128>
   25bc0:	ldr	r0, [r6, #24]
   25bc4:	ldr	r1, [r7, #192]	; 0xc0
   25bc8:	mov	r3, r4
   25bcc:	sub	r0, r1, r0
   25bd0:	mov	r1, r6
   25bd4:	add	r0, r0, r4
   25bd8:	str	r0, [r6, #28]
   25bdc:	mov	r0, r7
   25be0:	bl	11d58 <myhtml_check_tag_parser@plt>
   25be4:	mov	r0, #33	; 0x21
   25be8:	b	25c84 <myhtml_tokenizer_state_tag_name@@Base+0x120>
   25bec:	ldr	r0, [r6, #24]
   25bf0:	ldr	r1, [r7, #192]	; 0xc0
   25bf4:	mov	r3, r4
   25bf8:	sub	r0, r1, r0
   25bfc:	mov	r1, r6
   25c00:	add	r0, r0, r4
   25c04:	str	r0, [r6, #28]
   25c08:	mov	r0, r7
   25c0c:	bl	11d58 <myhtml_check_tag_parser@plt>
   25c10:	mov	r0, r7
   25c14:	mov	r1, r6
   25c18:	bl	11c98 <myhtml_tokenizer_set_state@plt>
   25c1c:	ldr	r0, [r6, #32]
   25c20:	ldr	r1, [r7, #192]	; 0xc0
   25c24:	mov	r2, r6
   25c28:	sub	r0, r1, r0
   25c2c:	add	r0, r0, r4
   25c30:	add	r4, r4, #1
   25c34:	add	r0, r0, #1
   25c38:	mov	r1, r4
   25c3c:	str	r0, [r6, #36]	; 0x24
   25c40:	mov	r0, r7
   25c44:	bl	11350 <myhtml_queue_add@plt>
   25c48:	cmp	r0, #0
   25c4c:	movne	r0, #69	; 0x45
   25c50:	movne	r4, #0
   25c54:	strne	r0, [r7, #160]	; 0xa0
   25c58:	b	25c8c <myhtml_tokenizer_state_tag_name@@Base+0x128>
   25c5c:	ldr	r0, [r6, #24]
   25c60:	ldr	r1, [r7, #192]	; 0xc0
   25c64:	mov	r3, r4
   25c68:	sub	r0, r1, r0
   25c6c:	mov	r1, r6
   25c70:	add	r0, r0, r4
   25c74:	str	r0, [r6, #28]
   25c78:	mov	r0, r7
   25c7c:	bl	11d58 <myhtml_check_tag_parser@plt>
   25c80:	mov	r0, #42	; 0x2a
   25c84:	str	r0, [r7, #160]	; 0xa0
   25c88:	add	r4, r4, #1
   25c8c:	mov	r0, r4
   25c90:	pop	{r4, r5, r6, r7, fp, pc}
   25c94:	andeq	r6, sp, sl, ror #1

00025c98 <myhtml_tokenizer_state_self_closing_start_tag@@Base>:
   25c98:	push	{r4, r5, r6, sl, fp, lr}
   25c9c:	add	fp, sp, #16
   25ca0:	mov	r6, r1
   25ca4:	ldrb	r1, [r2, r3]
   25ca8:	mov	r5, r0
   25cac:	mov	r4, r3
   25cb0:	mov	r0, #33	; 0x21
   25cb4:	cmp	r1, #62	; 0x3e
   25cb8:	bne	25d0c <myhtml_tokenizer_state_self_closing_start_tag@@Base+0x74>
   25cbc:	ldr	r0, [r6, #48]	; 0x30
   25cc0:	mov	r1, r6
   25cc4:	orr	r0, r0, #2
   25cc8:	str	r0, [r6, #48]	; 0x30
   25ccc:	mov	r0, r5
   25cd0:	bl	11c98 <myhtml_tokenizer_set_state@plt>
   25cd4:	ldr	r0, [r5, #192]	; 0xc0
   25cd8:	ldr	r1, [r6, #32]
   25cdc:	add	r4, r4, #1
   25ce0:	mov	r2, r6
   25ce4:	add	r0, r0, r4
   25ce8:	sub	r0, r0, r1
   25cec:	mov	r1, r4
   25cf0:	str	r0, [r6, #36]	; 0x24
   25cf4:	mov	r0, r5
   25cf8:	bl	11350 <myhtml_queue_add@plt>
   25cfc:	cmp	r0, #0
   25d00:	beq	25d10 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0x78>
   25d04:	mov	r4, #0
   25d08:	mov	r0, #69	; 0x45
   25d0c:	str	r0, [r5, #160]	; 0xa0
   25d10:	mov	r0, r4
   25d14:	pop	{r4, r5, r6, sl, fp, pc}

00025d18 <myhtml_tokenizer_state_before_attribute_name@@Base>:
   25d18:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   25d1c:	add	fp, sp, #24
   25d20:	mov	r5, r3
   25d24:	ldrb	r3, [r2, r3]
   25d28:	mov	r8, r0
   25d2c:	ldr	r0, [fp, #8]
   25d30:	mov	r6, r1
   25d34:	sub	r7, r3, #9
   25d38:	cmp	r7, #23
   25d3c:	bhi	25d94 <myhtml_tokenizer_state_before_attribute_name@@Base+0x7c>
   25d40:	movw	r1, #27
   25d44:	mov	r4, #1
   25d48:	movt	r1, #128	; 0x80
   25d4c:	tst	r1, r4, lsl r7
   25d50:	beq	25d94 <myhtml_tokenizer_state_before_attribute_name@@Base+0x7c>
   25d54:	cmp	r5, r0
   25d58:	bcs	25d94 <myhtml_tokenizer_state_before_attribute_name@@Base+0x7c>
   25d5c:	add	r5, r5, #1
   25d60:	mvn	r4, #8
   25d64:	mov	r7, #1
   25d68:	uxtab	r3, r4, r3
   25d6c:	cmp	r3, #23
   25d70:	bhi	25d90 <myhtml_tokenizer_state_before_attribute_name@@Base+0x78>
   25d74:	tst	r1, r7, lsl r3
   25d78:	beq	25d90 <myhtml_tokenizer_state_before_attribute_name@@Base+0x78>
   25d7c:	cmp	r0, r5
   25d80:	beq	25df8 <myhtml_tokenizer_state_before_attribute_name@@Base+0xe0>
   25d84:	ldrb	r3, [r2, r5]
   25d88:	add	r5, r5, #1
   25d8c:	b	25d68 <myhtml_tokenizer_state_before_attribute_name@@Base+0x50>
   25d90:	sub	r5, r5, #1
   25d94:	cmp	r5, r0
   25d98:	bcs	25e80 <myhtml_tokenizer_state_before_attribute_name@@Base+0x168>
   25d9c:	ldrb	r0, [r2, r5]
   25da0:	cmp	r0, #47	; 0x2f
   25da4:	beq	25e00 <myhtml_tokenizer_state_before_attribute_name@@Base+0xe8>
   25da8:	cmp	r0, #62	; 0x3e
   25dac:	bne	25e14 <myhtml_tokenizer_state_before_attribute_name@@Base+0xfc>
   25db0:	mov	r0, r8
   25db4:	mov	r1, r6
   25db8:	bl	11c98 <myhtml_tokenizer_set_state@plt>
   25dbc:	ldr	r0, [r8, #192]	; 0xc0
   25dc0:	ldr	r1, [r6, #32]
   25dc4:	add	r5, r5, #1
   25dc8:	mov	r2, r6
   25dcc:	add	r0, r0, r5
   25dd0:	sub	r0, r0, r1
   25dd4:	mov	r1, r5
   25dd8:	str	r0, [r6, #36]	; 0x24
   25ddc:	mov	r0, r8
   25de0:	bl	11350 <myhtml_queue_add@plt>
   25de4:	cmp	r0, #0
   25de8:	movne	r0, #69	; 0x45
   25dec:	movne	r5, #0
   25df0:	strne	r0, [r8, #160]	; 0xa0
   25df4:	b	25e80 <myhtml_tokenizer_state_before_attribute_name@@Base+0x168>
   25df8:	mov	r5, r0
   25dfc:	b	25e80 <myhtml_tokenizer_state_before_attribute_name@@Base+0x168>
   25e00:	ldr	r0, [r6, #48]	; 0x30
   25e04:	add	r5, r5, #1
   25e08:	orr	r0, r0, #2
   25e0c:	str	r0, [r6, #48]	; 0x30
   25e10:	b	25e80 <myhtml_tokenizer_state_before_attribute_name@@Base+0x168>
   25e14:	ldr	r1, [r6, #40]	; 0x28
   25e18:	ldr	r0, [r8, #56]	; 0x38
   25e1c:	cmp	r1, #0
   25e20:	beq	25e38 <myhtml_tokenizer_state_before_attribute_name@@Base+0x120>
   25e24:	ldr	r1, [r6, #44]	; 0x2c
   25e28:	str	r0, [r1]
   25e2c:	str	r0, [r6, #44]	; 0x2c
   25e30:	str	r0, [r8, #56]	; 0x38
   25e34:	b	25e44 <myhtml_tokenizer_state_before_attribute_name@@Base+0x12c>
   25e38:	str	r0, [r6, #40]	; 0x28
   25e3c:	str	r0, [r6, #44]	; 0x2c
   25e40:	mov	r1, #0
   25e44:	mov	r3, #0
   25e48:	str	r3, [r0]
   25e4c:	str	r1, [r0, #4]
   25e50:	ldr	r1, [r8, #192]	; 0xc0
   25e54:	ldr	r0, [r8, #56]	; 0x38
   25e58:	add	r1, r1, r5
   25e5c:	str	r1, [r0, #48]	; 0x30
   25e60:	str	r3, [r0, #52]	; 0x34
   25e64:	str	r3, [r0, #56]	; 0x38
   25e68:	str	r3, [r0, #60]	; 0x3c
   25e6c:	mov	r1, #34	; 0x22
   25e70:	ldrb	r0, [r2, r5]
   25e74:	str	r1, [r8, #160]	; 0xa0
   25e78:	cmp	r0, #61	; 0x3d
   25e7c:	addeq	r5, r5, #1
   25e80:	mov	r0, r5
   25e84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00025e88 <myhtml_tokenizer_state_attribute_name@@Base>:
   25e88:	push	{r4, r5, r6, r7, fp, lr}
   25e8c:	add	fp, sp, #16
   25e90:	mov	r5, r0
   25e94:	ldr	r0, [fp, #8]
   25e98:	mov	r4, r3
   25e9c:	cmp	r3, r0
   25ea0:	bcs	25f28 <myhtml_tokenizer_state_attribute_name@@Base+0xa0>
   25ea4:	movw	r3, #27
   25ea8:	mov	r7, r1
   25eac:	mov	r1, #1
   25eb0:	movt	r3, #128	; 0x80
   25eb4:	ldrb	r6, [r2, r4]
   25eb8:	cmp	r6, #46	; 0x2e
   25ebc:	bgt	25ed8 <myhtml_tokenizer_state_attribute_name@@Base+0x50>
   25ec0:	sub	r6, r6, #9
   25ec4:	cmp	r6, #23
   25ec8:	bhi	25ef0 <myhtml_tokenizer_state_attribute_name@@Base+0x68>
   25ecc:	tst	r3, r1, lsl r6
   25ed0:	beq	25ef0 <myhtml_tokenizer_state_attribute_name@@Base+0x68>
   25ed4:	b	25f04 <myhtml_tokenizer_state_attribute_name@@Base+0x7c>
   25ed8:	cmp	r6, #47	; 0x2f
   25edc:	beq	25f30 <myhtml_tokenizer_state_attribute_name@@Base+0xa8>
   25ee0:	cmp	r6, #61	; 0x3d
   25ee4:	beq	25f78 <myhtml_tokenizer_state_attribute_name@@Base+0xf0>
   25ee8:	cmp	r6, #62	; 0x3e
   25eec:	beq	25f98 <myhtml_tokenizer_state_attribute_name@@Base+0x110>
   25ef0:	add	r4, r4, #1
   25ef4:	cmp	r0, r4
   25ef8:	bne	25eb4 <myhtml_tokenizer_state_attribute_name@@Base+0x2c>
   25efc:	mov	r4, r0
   25f00:	b	25f28 <myhtml_tokenizer_state_attribute_name@@Base+0xa0>
   25f04:	ldr	r0, [r5, #56]	; 0x38
   25f08:	ldr	r1, [r5, #192]	; 0xc0
   25f0c:	ldr	r2, [r0, #48]	; 0x30
   25f10:	sub	r1, r1, r2
   25f14:	add	r1, r1, r4
   25f18:	str	r1, [r0, #52]	; 0x34
   25f1c:	mov	r0, #35	; 0x23
   25f20:	str	r0, [r5, #160]	; 0xa0
   25f24:	add	r4, r4, #1
   25f28:	mov	r0, r4
   25f2c:	pop	{r4, r5, r6, r7, fp, pc}
   25f30:	ldr	r0, [r5, #56]	; 0x38
   25f34:	ldr	r1, [r5, #192]	; 0xc0
   25f38:	ldr	r2, [r0, #48]	; 0x30
   25f3c:	sub	r1, r1, r2
   25f40:	add	r1, r1, r4
   25f44:	str	r1, [r0, #52]	; 0x34
   25f48:	ldr	r0, [r7, #48]	; 0x30
   25f4c:	orr	r0, r0, #2
   25f50:	str	r0, [r7, #48]	; 0x30
   25f54:	mov	r0, #33	; 0x21
   25f58:	str	r0, [r5, #160]	; 0xa0
   25f5c:	ldr	r0, [r5, #8]
   25f60:	ldr	r1, [r0, #16]
   25f64:	bl	11ad0 <myhtml_token_attr_create@plt>
   25f68:	cmp	r0, #0
   25f6c:	str	r0, [r5, #56]	; 0x38
   25f70:	bne	25f24 <myhtml_tokenizer_state_attribute_name@@Base+0x9c>
   25f74:	b	26008 <myhtml_tokenizer_state_attribute_name@@Base+0x180>
   25f78:	ldr	r0, [r5, #56]	; 0x38
   25f7c:	ldr	r1, [r5, #192]	; 0xc0
   25f80:	ldr	r2, [r0, #48]	; 0x30
   25f84:	sub	r1, r1, r2
   25f88:	add	r1, r1, r4
   25f8c:	str	r1, [r0, #52]	; 0x34
   25f90:	mov	r0, #36	; 0x24
   25f94:	b	25f20 <myhtml_tokenizer_state_attribute_name@@Base+0x98>
   25f98:	ldr	r0, [r5, #56]	; 0x38
   25f9c:	ldr	r1, [r5, #192]	; 0xc0
   25fa0:	ldr	r2, [r0, #48]	; 0x30
   25fa4:	sub	r1, r1, r2
   25fa8:	add	r1, r1, r4
   25fac:	str	r1, [r0, #52]	; 0x34
   25fb0:	mov	r0, r5
   25fb4:	mov	r1, r7
   25fb8:	bl	11c98 <myhtml_tokenizer_set_state@plt>
   25fbc:	ldr	r0, [r7, #32]
   25fc0:	ldr	r1, [r5, #192]	; 0xc0
   25fc4:	mov	r2, r7
   25fc8:	sub	r0, r1, r0
   25fcc:	add	r0, r0, r4
   25fd0:	add	r4, r4, #1
   25fd4:	add	r0, r0, #1
   25fd8:	mov	r1, r4
   25fdc:	str	r0, [r7, #36]	; 0x24
   25fe0:	mov	r0, r5
   25fe4:	bl	11350 <myhtml_queue_add@plt>
   25fe8:	cmp	r0, #0
   25fec:	bne	26008 <myhtml_tokenizer_state_attribute_name@@Base+0x180>
   25ff0:	ldr	r0, [r5, #8]
   25ff4:	ldr	r1, [r0, #16]
   25ff8:	bl	11ad0 <myhtml_token_attr_create@plt>
   25ffc:	cmp	r0, #0
   26000:	str	r0, [r5, #56]	; 0x38
   26004:	bne	25f28 <myhtml_tokenizer_state_attribute_name@@Base+0xa0>
   26008:	mov	r0, #69	; 0x45
   2600c:	mov	r4, #0
   26010:	str	r0, [r5, #160]	; 0xa0
   26014:	b	25f28 <myhtml_tokenizer_state_attribute_name@@Base+0xa0>

00026018 <myhtml_tokenizer_state_after_attribute_name@@Base>:
   26018:	push	{r4, r5, r6, r7, fp, lr}
   2601c:	add	fp, sp, #16
   26020:	mov	r7, r0
   26024:	ldr	r0, [fp, #8]
   26028:	mov	r4, r3
   2602c:	cmp	r3, r0
   26030:	bcs	26184 <myhtml_tokenizer_state_after_attribute_name@@Base+0x16c>
   26034:	movw	r3, #27
   26038:	mov	r6, r1
   2603c:	mov	r1, #1
   26040:	movt	r3, #128	; 0x80
   26044:	ldrb	r5, [r2, r4]
   26048:	cmp	r5, #59	; 0x3b
   2604c:	bgt	26078 <myhtml_tokenizer_state_after_attribute_name@@Base+0x60>
   26050:	sub	r5, r5, #9
   26054:	cmp	r5, #30
   26058:	bhi	260a8 <myhtml_tokenizer_state_after_attribute_name@@Base+0x90>
   2605c:	tst	r3, r1, lsl r5
   26060:	beq	2609c <myhtml_tokenizer_state_after_attribute_name@@Base+0x84>
   26064:	add	r4, r4, #1
   26068:	cmp	r0, r4
   2606c:	bne	26044 <myhtml_tokenizer_state_after_attribute_name@@Base+0x2c>
   26070:	mov	r4, r0
   26074:	b	26184 <myhtml_tokenizer_state_after_attribute_name@@Base+0x16c>
   26078:	cmp	r5, #60	; 0x3c
   2607c:	beq	260a8 <myhtml_tokenizer_state_after_attribute_name@@Base+0x90>
   26080:	cmp	r5, #62	; 0x3e
   26084:	beq	260e0 <myhtml_tokenizer_state_after_attribute_name@@Base+0xc8>
   26088:	cmp	r5, #61	; 0x3d
   2608c:	bne	260a8 <myhtml_tokenizer_state_after_attribute_name@@Base+0x90>
   26090:	mov	r0, #36	; 0x24
   26094:	add	r4, r4, #1
   26098:	b	26180 <myhtml_tokenizer_state_after_attribute_name@@Base+0x168>
   2609c:	mov	r0, #1
   260a0:	mov	r1, #1107296256	; 0x42000000
   260a4:	tst	r1, r0, lsl r5
   260a8:	ldr	r0, [r7, #8]
   260ac:	ldr	r1, [r0, #16]
   260b0:	bl	11ad0 <myhtml_token_attr_create@plt>
   260b4:	cmp	r0, #0
   260b8:	str	r0, [r7, #56]	; 0x38
   260bc:	beq	26138 <myhtml_tokenizer_state_after_attribute_name@@Base+0x120>
   260c0:	ldr	r1, [r6, #40]	; 0x28
   260c4:	cmp	r1, #0
   260c8:	beq	26144 <myhtml_tokenizer_state_after_attribute_name@@Base+0x12c>
   260cc:	ldr	r1, [r6, #44]	; 0x2c
   260d0:	str	r0, [r1]
   260d4:	str	r0, [r6, #44]	; 0x2c
   260d8:	str	r0, [r7, #56]	; 0x38
   260dc:	b	26154 <myhtml_tokenizer_state_after_attribute_name@@Base+0x13c>
   260e0:	mov	r0, r7
   260e4:	mov	r1, r6
   260e8:	bl	11c98 <myhtml_tokenizer_set_state@plt>
   260ec:	ldr	r0, [r6, #32]
   260f0:	ldr	r1, [r7, #192]	; 0xc0
   260f4:	mov	r2, r6
   260f8:	sub	r0, r1, r0
   260fc:	add	r0, r0, r4
   26100:	add	r4, r4, #1
   26104:	add	r0, r0, #1
   26108:	mov	r1, r4
   2610c:	str	r0, [r6, #36]	; 0x24
   26110:	mov	r0, r7
   26114:	bl	11350 <myhtml_queue_add@plt>
   26118:	cmp	r0, #0
   2611c:	bne	26138 <myhtml_tokenizer_state_after_attribute_name@@Base+0x120>
   26120:	ldr	r0, [r7, #8]
   26124:	ldr	r1, [r0, #16]
   26128:	bl	11ad0 <myhtml_token_attr_create@plt>
   2612c:	cmp	r0, #0
   26130:	str	r0, [r7, #56]	; 0x38
   26134:	bne	26184 <myhtml_tokenizer_state_after_attribute_name@@Base+0x16c>
   26138:	mov	r0, #69	; 0x45
   2613c:	mov	r4, #0
   26140:	b	26180 <myhtml_tokenizer_state_after_attribute_name@@Base+0x168>
   26144:	str	r0, [r6, #40]	; 0x28
   26148:	str	r0, [r6, #44]	; 0x2c
   2614c:	str	r0, [r7, #56]	; 0x38
   26150:	mov	r1, #0
   26154:	mov	r2, #0
   26158:	str	r2, [r0]
   2615c:	str	r1, [r0, #4]
   26160:	ldr	r1, [r7, #192]	; 0xc0
   26164:	ldr	r0, [r7, #56]	; 0x38
   26168:	add	r1, r1, r4
   2616c:	str	r1, [r0, #48]	; 0x30
   26170:	str	r2, [r0, #52]	; 0x34
   26174:	str	r2, [r0, #56]	; 0x38
   26178:	str	r2, [r0, #60]	; 0x3c
   2617c:	mov	r0, #34	; 0x22
   26180:	str	r0, [r7, #160]	; 0xa0
   26184:	mov	r0, r4
   26188:	pop	{r4, r5, r6, r7, fp, pc}

0002618c <myhtml_tokenizer_state_before_attribute_value@@Base>:
   2618c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   26190:	add	fp, sp, #24
   26194:	mov	r8, r0
   26198:	ldr	r0, [fp, #8]
   2619c:	mov	r4, r3
   261a0:	cmp	r3, r0
   261a4:	bcs	2627c <myhtml_tokenizer_state_before_attribute_value@@Base+0xf0>
   261a8:	movw	r3, #27
   261ac:	mov	r6, r1
   261b0:	mov	r1, #1
   261b4:	movt	r3, #128	; 0x80
   261b8:	ldrb	r5, [r2, r4]
   261bc:	sub	r7, r5, #9
   261c0:	cmp	r7, #30
   261c4:	bhi	26200 <myhtml_tokenizer_state_before_attribute_value@@Base+0x74>
   261c8:	tst	r3, r1, lsl r7
   261cc:	beq	261e4 <myhtml_tokenizer_state_before_attribute_value@@Base+0x58>
   261d0:	add	r4, r4, #1
   261d4:	cmp	r0, r4
   261d8:	bne	261b8 <myhtml_tokenizer_state_before_attribute_value@@Base+0x2c>
   261dc:	mov	r4, r0
   261e0:	b	2627c <myhtml_tokenizer_state_before_attribute_value@@Base+0xf0>
   261e4:	cmp	r7, #25
   261e8:	beq	26258 <myhtml_tokenizer_state_before_attribute_value@@Base+0xcc>
   261ec:	cmp	r7, #30
   261f0:	bne	26200 <myhtml_tokenizer_state_before_attribute_value@@Base+0x74>
   261f4:	add	r4, r4, #1
   261f8:	mov	r0, #38	; 0x26
   261fc:	b	26268 <myhtml_tokenizer_state_before_attribute_value@@Base+0xdc>
   26200:	cmp	r5, #62	; 0x3e
   26204:	bne	26264 <myhtml_tokenizer_state_before_attribute_value@@Base+0xd8>
   26208:	mov	r0, r8
   2620c:	mov	r1, r6
   26210:	bl	11c98 <myhtml_tokenizer_set_state@plt>
   26214:	ldr	r0, [r6, #32]
   26218:	ldr	r1, [r8, #192]	; 0xc0
   2621c:	mov	r2, r6
   26220:	sub	r0, r1, r0
   26224:	add	r0, r0, r4
   26228:	add	r4, r4, #1
   2622c:	add	r0, r0, #1
   26230:	mov	r1, r4
   26234:	str	r0, [r6, #36]	; 0x24
   26238:	mov	r0, r8
   2623c:	bl	11350 <myhtml_queue_add@plt>
   26240:	cmp	r0, #0
   26244:	beq	26284 <myhtml_tokenizer_state_before_attribute_value@@Base+0xf8>
   26248:	mov	r0, #69	; 0x45
   2624c:	mov	r4, #0
   26250:	str	r0, [r8, #160]	; 0xa0
   26254:	b	2627c <myhtml_tokenizer_state_before_attribute_value@@Base+0xf0>
   26258:	add	r4, r4, #1
   2625c:	mov	r0, #37	; 0x25
   26260:	b	26268 <myhtml_tokenizer_state_before_attribute_value@@Base+0xdc>
   26264:	mov	r0, #39	; 0x27
   26268:	str	r0, [r8, #160]	; 0xa0
   2626c:	ldr	r1, [r8, #192]	; 0xc0
   26270:	ldr	r0, [r8, #56]	; 0x38
   26274:	add	r1, r1, r4
   26278:	str	r1, [r0, #56]	; 0x38
   2627c:	mov	r0, r4
   26280:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   26284:	ldr	r0, [r8, #8]
   26288:	ldr	r1, [r0, #16]
   2628c:	bl	11ad0 <myhtml_token_attr_create@plt>
   26290:	cmp	r0, #0
   26294:	str	r0, [r8, #56]	; 0x38
   26298:	bne	2627c <myhtml_tokenizer_state_before_attribute_value@@Base+0xf0>
   2629c:	b	26248 <myhtml_tokenizer_state_before_attribute_value@@Base+0xbc>

000262a0 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base>:
   262a0:	push	{r4, r5, fp, lr}
   262a4:	add	fp, sp, #8
   262a8:	mov	r5, r0
   262ac:	ldr	r0, [fp, #8]
   262b0:	mov	r4, r3
   262b4:	cmp	r3, r0
   262b8:	bcs	26324 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x84>
   262bc:	ldrb	r1, [r2, r4]
   262c0:	cmp	r1, #34	; 0x22
   262c4:	beq	262dc <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x3c>
   262c8:	add	r4, r4, #1
   262cc:	cmp	r0, r4
   262d0:	bne	262bc <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x1c>
   262d4:	mov	r4, r0
   262d8:	b	26324 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x84>
   262dc:	ldr	r0, [r5, #56]	; 0x38
   262e0:	ldr	r1, [r5, #192]	; 0xc0
   262e4:	ldr	r2, [r0, #56]	; 0x38
   262e8:	sub	r1, r1, r2
   262ec:	add	r1, r1, r4
   262f0:	str	r1, [r0, #60]	; 0x3c
   262f4:	ldr	r0, [r5, #8]
   262f8:	ldr	r1, [r0, #16]
   262fc:	bl	11ad0 <myhtml_token_attr_create@plt>
   26300:	cmp	r0, #0
   26304:	str	r0, [r5, #56]	; 0x38
   26308:	beq	26318 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x78>
   2630c:	mov	r0, #41	; 0x29
   26310:	add	r4, r4, #1
   26314:	b	26320 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x80>
   26318:	mov	r0, #69	; 0x45
   2631c:	mov	r4, #0
   26320:	str	r0, [r5, #160]	; 0xa0
   26324:	mov	r0, r4
   26328:	pop	{r4, r5, fp, pc}

0002632c <myhtml_tokenizer_state_attribute_value_single_quoted@@Base>:
   2632c:	push	{r4, r5, fp, lr}
   26330:	add	fp, sp, #8
   26334:	mov	r5, r0
   26338:	ldr	r0, [fp, #8]
   2633c:	mov	r4, r3
   26340:	cmp	r3, r0
   26344:	bcs	263b0 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x84>
   26348:	ldrb	r1, [r2, r4]
   2634c:	cmp	r1, #39	; 0x27
   26350:	beq	26368 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x3c>
   26354:	add	r4, r4, #1
   26358:	cmp	r0, r4
   2635c:	bne	26348 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x1c>
   26360:	mov	r4, r0
   26364:	b	263b0 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x84>
   26368:	ldr	r0, [r5, #56]	; 0x38
   2636c:	ldr	r1, [r5, #192]	; 0xc0
   26370:	ldr	r2, [r0, #56]	; 0x38
   26374:	sub	r1, r1, r2
   26378:	add	r1, r1, r4
   2637c:	str	r1, [r0, #60]	; 0x3c
   26380:	ldr	r0, [r5, #8]
   26384:	ldr	r1, [r0, #16]
   26388:	bl	11ad0 <myhtml_token_attr_create@plt>
   2638c:	cmp	r0, #0
   26390:	str	r0, [r5, #56]	; 0x38
   26394:	beq	263a4 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x78>
   26398:	mov	r0, #41	; 0x29
   2639c:	add	r4, r4, #1
   263a0:	b	263ac <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x80>
   263a4:	mov	r0, #69	; 0x45
   263a8:	mov	r4, #0
   263ac:	str	r0, [r5, #160]	; 0xa0
   263b0:	mov	r0, r4
   263b4:	pop	{r4, r5, fp, pc}

000263b8 <myhtml_tokenizer_state_attribute_value_unquoted@@Base>:
   263b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   263bc:	add	fp, sp, #24
   263c0:	mov	r5, r0
   263c4:	ldr	r0, [fp, #8]
   263c8:	mov	r4, r3
   263cc:	cmp	r3, r0
   263d0:	bcs	264d4 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x11c>
   263d4:	movw	r3, #27
   263d8:	mov	r8, r1
   263dc:	mov	r1, #1
   263e0:	movt	r3, #128	; 0x80
   263e4:	ldrb	r6, [r2, r4]
   263e8:	sub	r7, r6, #9
   263ec:	cmp	r7, #23
   263f0:	bhi	263fc <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x44>
   263f4:	tst	r3, r1, lsl r7
   263f8:	bne	26418 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x60>
   263fc:	cmp	r6, #62	; 0x3e
   26400:	beq	26458 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0xa0>
   26404:	add	r4, r4, #1
   26408:	cmp	r0, r4
   2640c:	bne	263e4 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x2c>
   26410:	mov	r4, r0
   26414:	b	264d4 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x11c>
   26418:	mov	r0, #33	; 0x21
   2641c:	str	r0, [r5, #160]	; 0xa0
   26420:	ldr	r0, [r5, #56]	; 0x38
   26424:	ldr	r1, [r5, #192]	; 0xc0
   26428:	ldr	r2, [r0, #56]	; 0x38
   2642c:	sub	r1, r1, r2
   26430:	add	r1, r1, r4
   26434:	str	r1, [r0, #60]	; 0x3c
   26438:	ldr	r0, [r5, #8]
   2643c:	ldr	r1, [r0, #16]
   26440:	bl	11ad0 <myhtml_token_attr_create@plt>
   26444:	cmp	r0, #0
   26448:	str	r0, [r5, #56]	; 0x38
   2644c:	beq	264c8 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x110>
   26450:	add	r4, r4, #1
   26454:	b	264d4 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x11c>
   26458:	ldr	r0, [r5, #56]	; 0x38
   2645c:	ldr	r1, [r5, #192]	; 0xc0
   26460:	ldr	r2, [r0, #56]	; 0x38
   26464:	sub	r1, r1, r2
   26468:	add	r1, r1, r4
   2646c:	str	r1, [r0, #60]	; 0x3c
   26470:	mov	r0, r5
   26474:	mov	r1, r8
   26478:	bl	11c98 <myhtml_tokenizer_set_state@plt>
   2647c:	ldr	r0, [r8, #32]
   26480:	ldr	r1, [r5, #192]	; 0xc0
   26484:	mov	r2, r8
   26488:	sub	r0, r1, r0
   2648c:	add	r0, r0, r4
   26490:	add	r4, r4, #1
   26494:	add	r0, r0, #1
   26498:	mov	r1, r4
   2649c:	str	r0, [r8, #36]	; 0x24
   264a0:	mov	r0, r5
   264a4:	bl	11350 <myhtml_queue_add@plt>
   264a8:	cmp	r0, #0
   264ac:	bne	264c8 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x110>
   264b0:	ldr	r0, [r5, #8]
   264b4:	ldr	r1, [r0, #16]
   264b8:	bl	11ad0 <myhtml_token_attr_create@plt>
   264bc:	cmp	r0, #0
   264c0:	str	r0, [r5, #56]	; 0x38
   264c4:	bne	264d4 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x11c>
   264c8:	mov	r0, #69	; 0x45
   264cc:	mov	r4, #0
   264d0:	str	r0, [r5, #160]	; 0xa0
   264d4:	mov	r0, r4
   264d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000264dc <myhtml_tokenizer_state_after_attribute_value_quoted@@Base>:
   264dc:	push	{r4, r5, r6, sl, fp, lr}
   264e0:	add	fp, sp, #16
   264e4:	mov	r5, r0
   264e8:	ldrb	r0, [r2, r3]
   264ec:	mov	r6, r1
   264f0:	mov	r4, r3
   264f4:	sub	r1, r0, #9
   264f8:	cmp	r1, #23
   264fc:	bhi	26528 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x4c>
   26500:	movw	r3, #27
   26504:	mov	r2, #1
   26508:	movt	r3, #128	; 0x80
   2650c:	tst	r3, r2, lsl r1
   26510:	beq	26528 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x4c>
   26514:	mov	r0, #33	; 0x21
   26518:	str	r0, [r5, #160]	; 0xa0
   2651c:	add	r4, r4, #1
   26520:	mov	r0, r4
   26524:	pop	{r4, r5, r6, sl, fp, pc}
   26528:	cmp	r0, #47	; 0x2f
   2652c:	beq	26580 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0xa4>
   26530:	cmp	r0, #62	; 0x3e
   26534:	bne	26588 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0xac>
   26538:	mov	r0, r5
   2653c:	mov	r1, r6
   26540:	bl	11c98 <myhtml_tokenizer_set_state@plt>
   26544:	ldr	r0, [r5, #192]	; 0xc0
   26548:	ldr	r1, [r6, #32]
   2654c:	add	r4, r4, #1
   26550:	mov	r2, r6
   26554:	add	r0, r0, r4
   26558:	sub	r0, r0, r1
   2655c:	mov	r1, r4
   26560:	str	r0, [r6, #36]	; 0x24
   26564:	mov	r0, r5
   26568:	bl	11350 <myhtml_queue_add@plt>
   2656c:	cmp	r0, #0
   26570:	movne	r0, #69	; 0x45
   26574:	movne	r4, #0
   26578:	strne	r0, [r5, #160]	; 0xa0
   2657c:	b	26520 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x44>
   26580:	mov	r0, #42	; 0x2a
   26584:	b	26518 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x3c>
   26588:	mov	r0, #33	; 0x21
   2658c:	str	r0, [r5, #160]	; 0xa0
   26590:	b	26520 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x44>

00026594 <myhtml_tokenizer_state_comment_start@@Base>:
   26594:	push	{r4, r5, r6, r7, fp, lr}
   26598:	add	fp, sp, #16
   2659c:	mov	r4, r0
   265a0:	mov	r0, #2
   265a4:	str	r0, [r1]
   265a8:	ldrb	r0, [r2, r3]
   265ac:	cmp	r0, #45	; 0x2d
   265b0:	beq	26600 <myhtml_tokenizer_state_comment_start@@Base+0x6c>
   265b4:	cmp	r0, #62	; 0x3e
   265b8:	bne	26608 <myhtml_tokenizer_state_comment_start@@Base+0x74>
   265bc:	mov	r5, #0
   265c0:	ldr	r0, [r4, #192]	; 0xc0
   265c4:	mov	r6, r1
   265c8:	add	r7, r3, #1
   265cc:	str	r5, [r1, #28]
   265d0:	mov	r2, r6
   265d4:	ldr	r1, [r1, #32]
   265d8:	add	r0, r0, r7
   265dc:	sub	r0, r0, r1
   265e0:	mov	r1, r7
   265e4:	str	r0, [r6, #36]	; 0x24
   265e8:	mov	r0, r4
   265ec:	bl	11350 <myhtml_queue_add@plt>
   265f0:	cmp	r0, #0
   265f4:	beq	2661c <myhtml_tokenizer_state_comment_start@@Base+0x88>
   265f8:	mov	r0, #69	; 0x45
   265fc:	b	26610 <myhtml_tokenizer_state_comment_start@@Base+0x7c>
   26600:	mov	r0, #46	; 0x2e
   26604:	b	2660c <myhtml_tokenizer_state_comment_start@@Base+0x78>
   26608:	mov	r0, #47	; 0x2f
   2660c:	add	r5, r3, #1
   26610:	str	r0, [r4, #160]	; 0xa0
   26614:	mov	r0, r5
   26618:	pop	{r4, r5, r6, r7, fp, pc}
   2661c:	mov	r0, #0
   26620:	mov	r5, r7
   26624:	b	26610 <myhtml_tokenizer_state_comment_start@@Base+0x7c>

00026628 <myhtml_tokenizer_state_comment_start_dash@@Base>:
   26628:	push	{r4, r5, r6, r7, fp, lr}
   2662c:	add	fp, sp, #16
   26630:	mov	r4, r0
   26634:	mov	r0, #2
   26638:	str	r0, [r1]
   2663c:	ldrb	r0, [r2, r3]
   26640:	cmp	r0, #45	; 0x2d
   26644:	beq	26694 <myhtml_tokenizer_state_comment_start_dash@@Base+0x6c>
   26648:	cmp	r0, #62	; 0x3e
   2664c:	bne	2669c <myhtml_tokenizer_state_comment_start_dash@@Base+0x74>
   26650:	mov	r5, #0
   26654:	ldr	r0, [r4, #192]	; 0xc0
   26658:	mov	r6, r1
   2665c:	add	r7, r3, #1
   26660:	str	r5, [r1, #28]
   26664:	mov	r2, r6
   26668:	ldr	r1, [r1, #32]
   2666c:	add	r0, r0, r7
   26670:	sub	r0, r0, r1
   26674:	mov	r1, r7
   26678:	str	r0, [r6, #36]	; 0x24
   2667c:	mov	r0, r4
   26680:	bl	11350 <myhtml_queue_add@plt>
   26684:	cmp	r0, #0
   26688:	beq	266b0 <myhtml_tokenizer_state_comment_start_dash@@Base+0x88>
   2668c:	mov	r0, #69	; 0x45
   26690:	b	266a4 <myhtml_tokenizer_state_comment_start_dash@@Base+0x7c>
   26694:	mov	r0, #49	; 0x31
   26698:	b	266a0 <myhtml_tokenizer_state_comment_start_dash@@Base+0x78>
   2669c:	mov	r0, #47	; 0x2f
   266a0:	add	r5, r3, #1
   266a4:	str	r0, [r4, #160]	; 0xa0
   266a8:	mov	r0, r5
   266ac:	pop	{r4, r5, r6, r7, fp, pc}
   266b0:	mov	r0, #0
   266b4:	mov	r5, r7
   266b8:	b	266a4 <myhtml_tokenizer_state_comment_start_dash@@Base+0x7c>

000266bc <myhtml_tokenizer_state_comment@@Base>:
   266bc:	mov	ip, r3
   266c0:	mov	r3, #2
   266c4:	str	r3, [r1]
   266c8:	ldr	r1, [sp]
   266cc:	cmp	ip, r1
   266d0:	bcs	26700 <myhtml_tokenizer_state_comment@@Base+0x44>
   266d4:	ldrb	r3, [r2, ip]
   266d8:	cmp	r3, #45	; 0x2d
   266dc:	beq	266f4 <myhtml_tokenizer_state_comment@@Base+0x38>
   266e0:	add	ip, ip, #1
   266e4:	cmp	r1, ip
   266e8:	bne	266d4 <myhtml_tokenizer_state_comment@@Base+0x18>
   266ec:	mov	ip, r1
   266f0:	b	26700 <myhtml_tokenizer_state_comment@@Base+0x44>
   266f4:	mov	r1, #48	; 0x30
   266f8:	add	ip, ip, #1
   266fc:	str	r1, [r0, #160]	; 0xa0
   26700:	mov	r0, ip
   26704:	bx	lr

00026708 <myhtml_tokenizer_state_comment_end_dash@@Base>:
   26708:	ldrb	r1, [r2, r3]
   2670c:	mov	r2, #47	; 0x2f
   26710:	cmp	r1, #45	; 0x2d
   26714:	movweq	r2, #49	; 0x31
   26718:	str	r2, [r0, #160]	; 0xa0
   2671c:	add	r0, r3, #1
   26720:	bx	lr

00026724 <myhtml_tokenizer_state_comment_end@@Base>:
   26724:	push	{r4, r5, r6, r7, fp, lr}
   26728:	add	fp, sp, #16
   2672c:	mov	r4, r0
   26730:	ldrb	r0, [r2, r3]
   26734:	cmp	r0, #33	; 0x21
   26738:	beq	267a0 <myhtml_tokenizer_state_comment_end@@Base+0x7c>
   2673c:	cmp	r0, #62	; 0x3e
   26740:	bne	267ac <myhtml_tokenizer_state_comment_end@@Base+0x88>
   26744:	mov	r6, r1
   26748:	ldr	r0, [r4, #192]	; 0xc0
   2674c:	add	r7, r3, #1
   26750:	ldr	r2, [r6, #24]
   26754:	ldr	r5, [r6, #32]
   26758:	add	r1, r0, r7
   2675c:	add	r0, r0, r3
   26760:	sub	r0, r0, r2
   26764:	sub	r1, r1, r5
   26768:	mov	r2, r6
   2676c:	mov	r5, #0
   26770:	cmp	r0, #1
   26774:	str	r1, [r6, #36]	; 0x24
   26778:	mov	r1, #0
   2677c:	subhi	r1, r0, #2
   26780:	mov	r0, r4
   26784:	str	r1, [r6, #28]
   26788:	mov	r1, r7
   2678c:	bl	11350 <myhtml_queue_add@plt>
   26790:	cmp	r0, #0
   26794:	beq	267c0 <myhtml_tokenizer_state_comment_end@@Base+0x9c>
   26798:	mov	r0, #69	; 0x45
   2679c:	b	267c8 <myhtml_tokenizer_state_comment_end@@Base+0xa4>
   267a0:	mov	r0, #50	; 0x32
   267a4:	add	r5, r3, #1
   267a8:	b	267c8 <myhtml_tokenizer_state_comment_end@@Base+0xa4>
   267ac:	add	r5, r3, #1
   267b0:	cmp	r0, #45	; 0x2d
   267b4:	beq	267cc <myhtml_tokenizer_state_comment_end@@Base+0xa8>
   267b8:	mov	r0, #47	; 0x2f
   267bc:	b	267c8 <myhtml_tokenizer_state_comment_end@@Base+0xa4>
   267c0:	mov	r0, #0
   267c4:	mov	r5, r7
   267c8:	str	r0, [r4, #160]	; 0xa0
   267cc:	mov	r0, r5
   267d0:	pop	{r4, r5, r6, r7, fp, pc}

000267d4 <myhtml_tokenizer_state_comment_end_bang@@Base>:
   267d4:	push	{r4, r5, r6, sl, fp, lr}
   267d8:	add	fp, sp, #16
   267dc:	mov	r6, r0
   267e0:	ldrb	r0, [r2, r3]
   267e4:	cmp	r0, #62	; 0x3e
   267e8:	bne	2684c <myhtml_tokenizer_state_comment_end_bang@@Base+0x78>
   267ec:	ldr	r0, [r6, #192]	; 0xc0
   267f0:	mov	r4, r1
   267f4:	ldr	r2, [r4, #24]
   267f8:	add	r1, r0, r3
   267fc:	sub	r5, r1, #3
   26800:	cmp	r5, r2
   26804:	add	r5, r3, #1
   26808:	movcc	r1, #0
   2680c:	add	r0, r0, r5
   26810:	subcs	r1, r1, r2
   26814:	mov	r2, r4
   26818:	subcs	r1, r1, #3
   2681c:	str	r1, [r4, #28]
   26820:	ldr	r1, [r4, #32]
   26824:	sub	r0, r0, r1
   26828:	mov	r1, r5
   2682c:	str	r0, [r4, #36]	; 0x24
   26830:	mov	r0, r6
   26834:	bl	11350 <myhtml_queue_add@plt>
   26838:	cmp	r0, #0
   2683c:	beq	26860 <myhtml_tokenizer_state_comment_end_bang@@Base+0x8c>
   26840:	mov	r0, #69	; 0x45
   26844:	mov	r5, #0
   26848:	b	26864 <myhtml_tokenizer_state_comment_end_bang@@Base+0x90>
   2684c:	cmp	r0, #45	; 0x2d
   26850:	add	r5, r3, #1
   26854:	movne	r0, #47	; 0x2f
   26858:	moveq	r0, #48	; 0x30
   2685c:	b	26864 <myhtml_tokenizer_state_comment_end_bang@@Base+0x90>
   26860:	mov	r0, #0
   26864:	str	r0, [r6, #160]	; 0xa0
   26868:	mov	r0, r5
   2686c:	pop	{r4, r5, r6, sl, fp, pc}

00026870 <myhtml_tokenizer_state_bogus_comment@@Base>:
   26870:	push	{r4, r5, fp, lr}
   26874:	add	fp, sp, #8
   26878:	mov	r4, r0
   2687c:	mov	r0, #2
   26880:	mov	r5, r3
   26884:	mov	r3, r1
   26888:	str	r0, [r1]
   2688c:	ldr	r0, [r1, #48]	; 0x30
   26890:	orr	r0, r0, #1024	; 0x400
   26894:	str	r0, [r1, #48]	; 0x30
   26898:	ldr	r1, [fp, #8]
   2689c:	cmp	r5, r1
   268a0:	bcs	26920 <myhtml_tokenizer_state_bogus_comment@@Base+0xb0>
   268a4:	rsb	r0, r5, #0
   268a8:	ldrb	r5, [r2, -r0]
   268ac:	cmp	r5, #62	; 0x3e
   268b0:	beq	268c8 <myhtml_tokenizer_state_bogus_comment@@Base+0x58>
   268b4:	sub	r0, r0, #1
   268b8:	adds	r5, r1, r0
   268bc:	bne	268a8 <myhtml_tokenizer_state_bogus_comment@@Base+0x38>
   268c0:	mov	r5, r1
   268c4:	b	26920 <myhtml_tokenizer_state_bogus_comment@@Base+0xb0>
   268c8:	ldr	r1, [r3, #24]
   268cc:	ldr	r5, [r4, #192]	; 0xc0
   268d0:	ldr	r2, [r3, #32]
   268d4:	sub	r1, r5, r1
   268d8:	sub	r1, r1, r0
   268dc:	str	r1, [r3, #28]
   268e0:	sub	r1, r5, r2
   268e4:	rsb	r5, r0, #1
   268e8:	mov	r2, r3
   268ec:	sub	r1, r1, r0
   268f0:	mov	r0, r4
   268f4:	add	r1, r1, #1
   268f8:	str	r1, [r3, #36]	; 0x24
   268fc:	mov	r1, r5
   26900:	bl	11350 <myhtml_queue_add@plt>
   26904:	cmp	r0, #0
   26908:	beq	26918 <myhtml_tokenizer_state_bogus_comment@@Base+0xa8>
   2690c:	mov	r0, #69	; 0x45
   26910:	mov	r5, #0
   26914:	b	2691c <myhtml_tokenizer_state_bogus_comment@@Base+0xac>
   26918:	mov	r0, #0
   2691c:	str	r0, [r4, #160]	; 0xa0
   26920:	mov	r0, r5
   26924:	pop	{r4, r5, fp, pc}

00026928 <myhtml_tokenizer_state_parse_error_stop@@Base>:
   26928:	movw	r1, #37164	; 0x912c
   2692c:	str	r1, [r0, #196]	; 0xc4
   26930:	ldr	r0, [sp]
   26934:	bx	lr

00026938 <myhtml_tokenizer_state_init@@Base>:
   26938:	push	{r4, sl, fp, lr}
   2693c:	add	fp, sp, #8
   26940:	mov	r4, r0
   26944:	movw	r0, #19604	; 0x4c94
   26948:	bl	11dac <mycore_malloc@plt>
   2694c:	str	r0, [r4, #24]!
   26950:	cmp	r0, #0
   26954:	beq	2713c <myhtml_tokenizer_state_init@@Base+0x804>
   26958:	ldr	r1, [pc, #2020]	; 27144 <myhtml_tokenizer_state_init@@Base+0x80c>
   2695c:	ldr	r1, [pc, r1]
   26960:	str	r1, [r0]
   26964:	ldr	r0, [r4]
   26968:	ldr	r1, [pc, #2008]	; 27148 <myhtml_tokenizer_state_init@@Base+0x810>
   2696c:	ldr	r1, [pc, r1]
   26970:	str	r1, [r0, #28]
   26974:	ldr	r0, [r4]
   26978:	ldr	r1, [pc, #1996]	; 2714c <myhtml_tokenizer_state_init@@Base+0x814>
   2697c:	ldr	r1, [pc, r1]
   26980:	str	r1, [r0, #36]	; 0x24
   26984:	ldr	r0, [r4]
   26988:	ldr	r1, [pc, #1984]	; 27150 <myhtml_tokenizer_state_init@@Base+0x818>
   2698c:	ldr	r1, [pc, r1]
   26990:	str	r1, [r0, #32]
   26994:	ldr	r0, [r4]
   26998:	ldr	r1, [pc, #1972]	; 27154 <myhtml_tokenizer_state_init@@Base+0x81c>
   2699c:	ldr	r1, [pc, r1]
   269a0:	str	r1, [r0, #168]	; 0xa8
   269a4:	ldr	r0, [r4]
   269a8:	ldr	r1, [pc, #1960]	; 27158 <myhtml_tokenizer_state_init@@Base+0x820>
   269ac:	ldr	r1, [pc, r1]
   269b0:	str	r1, [r0, #176]	; 0xb0
   269b4:	ldr	r0, [r4]
   269b8:	ldr	r1, [pc, #1948]	; 2715c <myhtml_tokenizer_state_init@@Base+0x824>
   269bc:	ldr	r1, [pc, r1]
   269c0:	str	r1, [r0, #132]	; 0x84
   269c4:	ldr	r0, [r4]
   269c8:	ldr	r1, [pc, #1936]	; 27160 <myhtml_tokenizer_state_init@@Base+0x828>
   269cc:	ldr	r1, [pc, r1]
   269d0:	str	r1, [r0, #136]	; 0x88
   269d4:	ldr	r0, [r4]
   269d8:	ldr	r1, [pc, #1924]	; 27164 <myhtml_tokenizer_state_init@@Base+0x82c>
   269dc:	ldr	r1, [pc, r1]
   269e0:	str	r1, [r0, #140]	; 0x8c
   269e4:	ldr	r0, [r4]
   269e8:	ldr	r1, [pc, #1912]	; 27168 <myhtml_tokenizer_state_init@@Base+0x830>
   269ec:	ldr	r1, [pc, r1]
   269f0:	str	r1, [r0, #144]	; 0x90
   269f4:	ldr	r0, [r4]
   269f8:	ldr	r1, [pc, #1900]	; 2716c <myhtml_tokenizer_state_init@@Base+0x834>
   269fc:	ldr	r1, [pc, r1]
   26a00:	str	r1, [r0, #164]	; 0xa4
   26a04:	ldr	r0, [r4]
   26a08:	ldr	r1, [pc, #1888]	; 27170 <myhtml_tokenizer_state_init@@Base+0x838>
   26a0c:	ldr	r1, [pc, r1]
   26a10:	str	r1, [r0, #148]	; 0x94
   26a14:	ldr	r0, [r4]
   26a18:	ldr	r1, [pc, #1876]	; 27174 <myhtml_tokenizer_state_init@@Base+0x83c>
   26a1c:	ldr	r1, [pc, r1]
   26a20:	str	r1, [r0, #152]	; 0x98
   26a24:	ldr	r0, [r4]
   26a28:	ldr	r1, [pc, #1864]	; 27178 <myhtml_tokenizer_state_init@@Base+0x840>
   26a2c:	ldr	r1, [pc, r1]
   26a30:	str	r1, [r0, #156]	; 0x9c
   26a34:	ldr	r0, [r4]
   26a38:	ldr	r1, [pc, #1852]	; 2717c <myhtml_tokenizer_state_init@@Base+0x844>
   26a3c:	ldr	r1, [pc, r1]
   26a40:	str	r1, [r0, #180]	; 0xb4
   26a44:	ldr	r0, [r4]
   26a48:	ldr	r1, [pc, #1840]	; 27180 <myhtml_tokenizer_state_init@@Base+0x848>
   26a4c:	ldr	r1, [pc, r1]
   26a50:	str	r1, [r0, #184]	; 0xb8
   26a54:	ldr	r0, [r4]
   26a58:	ldr	r1, [pc, #1828]	; 27184 <myhtml_tokenizer_state_init@@Base+0x84c>
   26a5c:	ldr	r1, [pc, r1]
   26a60:	str	r1, [r0, #188]	; 0xbc
   26a64:	ldr	r0, [r4]
   26a68:	ldr	r1, [pc, #1816]	; 27188 <myhtml_tokenizer_state_init@@Base+0x850>
   26a6c:	ldr	r1, [pc, r1]
   26a70:	str	r1, [r0, #196]	; 0xc4
   26a74:	ldr	r0, [r4]
   26a78:	ldr	r1, [pc, #1804]	; 2718c <myhtml_tokenizer_state_init@@Base+0x854>
   26a7c:	ldr	r1, [pc, r1]
   26a80:	str	r1, [r0, #192]	; 0xc0
   26a84:	ldr	r0, [r4]
   26a88:	ldr	r1, [pc, #1792]	; 27190 <myhtml_tokenizer_state_init@@Base+0x858>
   26a8c:	ldr	r1, [pc, r1]
   26a90:	str	r1, [r0, #200]	; 0xc8
   26a94:	ldr	r0, [r4]
   26a98:	ldr	r1, [pc, #1780]	; 27194 <myhtml_tokenizer_state_init@@Base+0x85c>
   26a9c:	ldr	r1, [pc, r1]
   26aa0:	str	r1, [r0, #172]	; 0xac
   26aa4:	ldr	r0, [r4]
   26aa8:	ldr	r1, [pc, #1768]	; 27198 <myhtml_tokenizer_state_init@@Base+0x860>
   26aac:	ldr	r1, [pc, r1]
   26ab0:	str	r1, [r0, #268]	; 0x10c
   26ab4:	ldr	r0, [r4]
   26ab8:	ldr	r1, [pc, #1756]	; 2719c <myhtml_tokenizer_state_init@@Base+0x864>
   26abc:	ldr	r1, [pc, r1]
   26ac0:	str	r1, [r0, #8]
   26ac4:	ldr	r0, [r4]
   26ac8:	ldr	r1, [pc, #1744]	; 271a0 <myhtml_tokenizer_state_init@@Base+0x868>
   26acc:	ldr	r1, [pc, r1]
   26ad0:	str	r1, [r0, #40]	; 0x28
   26ad4:	ldr	r0, [r4]
   26ad8:	ldr	r1, [pc, #1732]	; 271a4 <myhtml_tokenizer_state_init@@Base+0x86c>
   26adc:	ldr	r1, [pc, r1]
   26ae0:	str	r1, [r0, #44]	; 0x2c
   26ae4:	ldr	r0, [r4]
   26ae8:	ldr	r1, [pc, #1720]	; 271a8 <myhtml_tokenizer_state_init@@Base+0x870>
   26aec:	ldr	r1, [pc, r1]
   26af0:	str	r1, [r0, #48]	; 0x30
   26af4:	ldr	r0, [r4]
   26af8:	ldr	r1, [pc, #1708]	; 271ac <myhtml_tokenizer_state_init@@Base+0x874>
   26afc:	ldr	r1, [pc, r1]
   26b00:	str	r1, [r0, #16]
   26b04:	ldr	r0, [r4]
   26b08:	ldr	r1, [pc, #1696]	; 271b0 <myhtml_tokenizer_state_init@@Base+0x878>
   26b0c:	ldr	r1, [pc, r1]
   26b10:	str	r1, [r0, #52]	; 0x34
   26b14:	ldr	r0, [r4]
   26b18:	ldr	r1, [pc, #1684]	; 271b4 <myhtml_tokenizer_state_init@@Base+0x87c>
   26b1c:	ldr	r1, [pc, r1]
   26b20:	str	r1, [r0, #56]	; 0x38
   26b24:	ldr	r0, [r4]
   26b28:	ldr	r1, [pc, #1672]	; 271b8 <myhtml_tokenizer_state_init@@Base+0x880>
   26b2c:	ldr	r1, [pc, r1]
   26b30:	str	r1, [r0, #60]	; 0x3c
   26b34:	ldr	r0, [r4]
   26b38:	ldr	r1, [pc, #1660]	; 271bc <myhtml_tokenizer_state_init@@Base+0x884>
   26b3c:	ldr	r1, [pc, r1]
   26b40:	str	r1, [r0, #24]
   26b44:	ldr	r0, [r4]
   26b48:	ldr	r1, [pc, #1648]	; 271c0 <myhtml_tokenizer_state_init@@Base+0x888>
   26b4c:	ldr	r1, [pc, r1]
   26b50:	str	r1, [r0, #204]	; 0xcc
   26b54:	ldr	r0, [r4]
   26b58:	ldr	r1, [pc, #1636]	; 271c4 <myhtml_tokenizer_state_init@@Base+0x88c>
   26b5c:	ldr	r1, [pc, r1]
   26b60:	str	r1, [r0, #208]	; 0xd0
   26b64:	ldr	r0, [r4]
   26b68:	ldr	r1, [pc, #1624]	; 271c8 <myhtml_tokenizer_state_init@@Base+0x890>
   26b6c:	ldr	r1, [pc, r1]
   26b70:	str	r1, [r0, #212]	; 0xd4
   26b74:	ldr	r0, [r4]
   26b78:	ldr	r1, [pc, #1612]	; 271cc <myhtml_tokenizer_state_init@@Base+0x894>
   26b7c:	ldr	r1, [pc, r1]
   26b80:	str	r1, [r0, #216]	; 0xd8
   26b84:	ldr	r0, [r4]
   26b88:	ldr	r1, [pc, #1600]	; 271d0 <myhtml_tokenizer_state_init@@Base+0x898>
   26b8c:	ldr	r1, [pc, r1]
   26b90:	str	r1, [r0, #272]	; 0x110
   26b94:	ldr	r0, [r4]
   26b98:	ldr	r1, [pc, #1588]	; 271d4 <myhtml_tokenizer_state_init@@Base+0x89c>
   26b9c:	ldr	r1, [pc, r1]
   26ba0:	str	r1, [r0, #224]	; 0xe0
   26ba4:	ldr	r0, [r4]
   26ba8:	ldr	r1, [pc, #1576]	; 271d8 <myhtml_tokenizer_state_init@@Base+0x8a0>
   26bac:	ldr	r1, [pc, r1]
   26bb0:	str	r1, [r0, #228]	; 0xe4
   26bb4:	ldr	r0, [r4]
   26bb8:	ldr	r1, [pc, #1564]	; 271dc <myhtml_tokenizer_state_init@@Base+0x8a4>
   26bbc:	ldr	r1, [pc, r1]
   26bc0:	str	r1, [r0, #232]	; 0xe8
   26bc4:	ldr	r0, [r4]
   26bc8:	ldr	r1, [pc, #1552]	; 271e0 <myhtml_tokenizer_state_init@@Base+0x8a8>
   26bcc:	ldr	r1, [pc, r1]
   26bd0:	str	r1, [r0, #236]	; 0xec
   26bd4:	ldr	r0, [r4]
   26bd8:	ldr	r1, [pc, #1540]	; 271e4 <myhtml_tokenizer_state_init@@Base+0x8ac>
   26bdc:	ldr	r1, [pc, r1]
   26be0:	str	r1, [r0, #252]	; 0xfc
   26be4:	ldr	r0, [r4]
   26be8:	ldr	r1, [pc, #1528]	; 271e8 <myhtml_tokenizer_state_init@@Base+0x8b0>
   26bec:	ldr	r1, [pc, r1]
   26bf0:	str	r1, [r0, #256]	; 0x100
   26bf4:	ldr	r0, [r4]
   26bf8:	ldr	r1, [pc, #1516]	; 271ec <myhtml_tokenizer_state_init@@Base+0x8b4>
   26bfc:	ldr	r1, [pc, r1]
   26c00:	str	r1, [r0, #260]	; 0x104
   26c04:	ldr	r0, [r4]
   26c08:	ldr	r1, [pc, #1504]	; 271f0 <myhtml_tokenizer_state_init@@Base+0x8b8>
   26c0c:	ldr	r1, [pc, r1]
   26c10:	str	r1, [r0, #264]	; 0x108
   26c14:	ldr	r0, [r4]
   26c18:	ldr	r1, [pc, #1492]	; 271f4 <myhtml_tokenizer_state_init@@Base+0x8bc>
   26c1c:	ldr	r1, [pc, r1]
   26c20:	str	r1, [r0, #20]
   26c24:	ldr	r0, [r4]
   26c28:	ldr	r1, [pc, #1480]	; 271f8 <myhtml_tokenizer_state_init@@Base+0x8c0>
   26c2c:	ldr	r1, [pc, r1]
   26c30:	str	r1, [r0, #64]	; 0x40
   26c34:	ldr	r0, [r4]
   26c38:	ldr	r1, [pc, #1468]	; 271fc <myhtml_tokenizer_state_init@@Base+0x8c4>
   26c3c:	ldr	r1, [pc, r1]
   26c40:	str	r1, [r0, #68]	; 0x44
   26c44:	ldr	r0, [r4]
   26c48:	ldr	r1, [pc, #1456]	; 27200 <myhtml_tokenizer_state_init@@Base+0x8c8>
   26c4c:	ldr	r1, [pc, r1]
   26c50:	str	r1, [r0, #72]	; 0x48
   26c54:	ldr	r0, [r4]
   26c58:	ldr	r1, [pc, #1444]	; 27204 <myhtml_tokenizer_state_init@@Base+0x8cc>
   26c5c:	ldr	r1, [pc, r1]
   26c60:	str	r1, [r0, #76]	; 0x4c
   26c64:	ldr	r0, [r4]
   26c68:	ldr	r1, [pc, #1432]	; 27208 <myhtml_tokenizer_state_init@@Base+0x8d0>
   26c6c:	ldr	r1, [pc, r1]
   26c70:	str	r1, [r0, #80]	; 0x50
   26c74:	ldr	r0, [r4]
   26c78:	ldr	r1, [pc, #1420]	; 2720c <myhtml_tokenizer_state_init@@Base+0x8d4>
   26c7c:	ldr	r1, [pc, r1]
   26c80:	str	r1, [r0, #84]	; 0x54
   26c84:	ldr	r0, [r4]
   26c88:	ldr	r1, [pc, #1408]	; 27210 <myhtml_tokenizer_state_init@@Base+0x8d8>
   26c8c:	ldr	r1, [pc, r1]
   26c90:	str	r1, [r0, #88]	; 0x58
   26c94:	ldr	r0, [r4]
   26c98:	ldr	r1, [pc, #1396]	; 27214 <myhtml_tokenizer_state_init@@Base+0x8dc>
   26c9c:	ldr	r1, [pc, r1]
   26ca0:	str	r1, [r0, #92]	; 0x5c
   26ca4:	ldr	r0, [r4]
   26ca8:	ldr	r1, [pc, #1384]	; 27218 <myhtml_tokenizer_state_init@@Base+0x8e0>
   26cac:	ldr	r1, [pc, r1]
   26cb0:	str	r1, [r0, #96]	; 0x60
   26cb4:	ldr	r0, [r4]
   26cb8:	ldr	r1, [pc, #1372]	; 2721c <myhtml_tokenizer_state_init@@Base+0x8e4>
   26cbc:	ldr	r1, [pc, r1]
   26cc0:	str	r1, [r0, #100]	; 0x64
   26cc4:	ldr	r0, [r4]
   26cc8:	ldr	r1, [pc, #1360]	; 27220 <myhtml_tokenizer_state_init@@Base+0x8e8>
   26ccc:	ldr	r1, [pc, r1]
   26cd0:	str	r1, [r0, #104]	; 0x68
   26cd4:	ldr	r0, [r4]
   26cd8:	ldr	r1, [pc, #1348]	; 27224 <myhtml_tokenizer_state_init@@Base+0x8ec>
   26cdc:	ldr	r1, [pc, r1]
   26ce0:	str	r1, [r0, #108]	; 0x6c
   26ce4:	ldr	r0, [r4]
   26ce8:	ldr	r1, [pc, #1336]	; 27228 <myhtml_tokenizer_state_init@@Base+0x8f0>
   26cec:	ldr	r1, [pc, r1]
   26cf0:	str	r1, [r0, #112]	; 0x70
   26cf4:	ldr	r0, [r4]
   26cf8:	ldr	r1, [pc, #1324]	; 2722c <myhtml_tokenizer_state_init@@Base+0x8f4>
   26cfc:	ldr	r1, [pc, r1]
   26d00:	str	r1, [r0, #116]	; 0x74
   26d04:	ldr	r0, [r4]
   26d08:	ldr	r1, [pc, #1312]	; 27230 <myhtml_tokenizer_state_init@@Base+0x8f8>
   26d0c:	ldr	r1, [pc, r1]
   26d10:	str	r1, [r0, #120]	; 0x78
   26d14:	ldr	r0, [r4]
   26d18:	ldr	r1, [pc, #1300]	; 27234 <myhtml_tokenizer_state_init@@Base+0x8fc>
   26d1c:	ldr	r1, [pc, r1]
   26d20:	str	r1, [r0, #124]	; 0x7c
   26d24:	ldr	r0, [r4]
   26d28:	ldr	r1, [pc, #1288]	; 27238 <myhtml_tokenizer_state_init@@Base+0x900>
   26d2c:	ldr	r1, [pc, r1]
   26d30:	str	r1, [r0, #128]	; 0x80
   26d34:	ldr	r0, [r4]
   26d38:	ldr	r1, [pc, #1276]	; 2723c <myhtml_tokenizer_state_init@@Base+0x904>
   26d3c:	ldr	r1, [pc, r1]
   26d40:	str	r1, [r0, #276]	; 0x114
   26d44:	ldr	r0, [r4]
   26d48:	ldr	r1, [pc, #1264]	; 27240 <myhtml_tokenizer_state_init@@Base+0x908>
   26d4c:	ldr	r1, [pc, r1]
   26d50:	str	r1, [r0, #280]	; 0x118
   26d54:	ldr	r0, [r4]
   26d58:	ldr	r1, [pc, #1252]	; 27244 <myhtml_tokenizer_state_init@@Base+0x90c>
   26d5c:	ldr	r1, [pc, r1]
   26d60:	str	r1, [r0, #308]	; 0x134
   26d64:	ldr	r0, [r4]
   26d68:	ldr	r1, [pc, #1240]	; 27248 <myhtml_tokenizer_state_init@@Base+0x910>
   26d6c:	ldr	r1, [pc, r1]
   26d70:	str	r1, [r0, #316]	; 0x13c
   26d74:	ldr	r0, [r4]
   26d78:	ldr	r1, [pc, #1228]	; 2724c <myhtml_tokenizer_state_init@@Base+0x914>
   26d7c:	ldr	r1, [pc, r1]
   26d80:	str	r1, [r0, #312]	; 0x138
   26d84:	ldr	r0, [r4]
   26d88:	ldr	r1, [pc, #1216]	; 27250 <myhtml_tokenizer_state_init@@Base+0x918>
   26d8c:	ldr	r1, [pc, r1]
   26d90:	str	r1, [r0, #448]	; 0x1c0
   26d94:	ldr	r0, [r4]
   26d98:	ldr	r1, [pc, #1204]	; 27254 <myhtml_tokenizer_state_init@@Base+0x91c>
   26d9c:	ldr	r1, [pc, r1]
   26da0:	str	r1, [r0, #456]	; 0x1c8
   26da4:	ldr	r0, [r4]
   26da8:	ldr	r1, [pc, #1192]	; 27258 <myhtml_tokenizer_state_init@@Base+0x920>
   26dac:	ldr	r1, [pc, r1]
   26db0:	str	r1, [r0, #412]	; 0x19c
   26db4:	ldr	r0, [r4]
   26db8:	ldr	r1, [pc, #1180]	; 2725c <myhtml_tokenizer_state_init@@Base+0x924>
   26dbc:	ldr	r1, [pc, r1]
   26dc0:	str	r1, [r0, #416]	; 0x1a0
   26dc4:	ldr	r0, [r4]
   26dc8:	ldr	r1, [pc, #1168]	; 27260 <myhtml_tokenizer_state_init@@Base+0x928>
   26dcc:	ldr	r1, [pc, r1]
   26dd0:	str	r1, [r0, #420]	; 0x1a4
   26dd4:	ldr	r0, [r4]
   26dd8:	ldr	r1, [pc, #1156]	; 27264 <myhtml_tokenizer_state_init@@Base+0x92c>
   26ddc:	ldr	r1, [pc, r1]
   26de0:	str	r1, [r0, #424]	; 0x1a8
   26de4:	ldr	r0, [r4]
   26de8:	ldr	r1, [pc, #1144]	; 27268 <myhtml_tokenizer_state_init@@Base+0x930>
   26dec:	ldr	r1, [pc, r1]
   26df0:	str	r1, [r0, #428]	; 0x1ac
   26df4:	ldr	r0, [r4]
   26df8:	ldr	r1, [pc, #1132]	; 2726c <myhtml_tokenizer_state_init@@Base+0x934>
   26dfc:	ldr	r1, [pc, r1]
   26e00:	str	r1, [r0, #432]	; 0x1b0
   26e04:	ldr	r0, [r4]
   26e08:	ldr	r1, [pc, #1120]	; 27270 <myhtml_tokenizer_state_init@@Base+0x938>
   26e0c:	ldr	r1, [pc, r1]
   26e10:	str	r1, [r0, #436]	; 0x1b4
   26e14:	ldr	r0, [r4]
   26e18:	ldr	r1, [pc, #1108]	; 27274 <myhtml_tokenizer_state_init@@Base+0x93c>
   26e1c:	ldr	r1, [pc, r1]
   26e20:	str	r1, [r0, #444]	; 0x1bc
   26e24:	ldr	r0, [r4]
   26e28:	ldr	r1, [pc, #1096]	; 27278 <myhtml_tokenizer_state_init@@Base+0x940>
   26e2c:	ldr	r1, [pc, r1]
   26e30:	str	r1, [r0, #460]	; 0x1cc
   26e34:	ldr	r0, [r4]
   26e38:	ldr	r1, [pc, #1084]	; 2727c <myhtml_tokenizer_state_init@@Base+0x944>
   26e3c:	ldr	r1, [pc, r1]
   26e40:	str	r1, [r0, #464]	; 0x1d0
   26e44:	ldr	r0, [r4]
   26e48:	ldr	r1, [pc, #1072]	; 27280 <myhtml_tokenizer_state_init@@Base+0x948>
   26e4c:	ldr	r1, [pc, r1]
   26e50:	str	r1, [r0, #468]	; 0x1d4
   26e54:	ldr	r0, [r4]
   26e58:	ldr	r1, [pc, #1060]	; 27284 <myhtml_tokenizer_state_init@@Base+0x94c>
   26e5c:	ldr	r1, [pc, r1]
   26e60:	str	r1, [r0, #476]	; 0x1dc
   26e64:	ldr	r0, [r4]
   26e68:	ldr	r1, [pc, #1048]	; 27288 <myhtml_tokenizer_state_init@@Base+0x950>
   26e6c:	ldr	r1, [pc, r1]
   26e70:	str	r1, [r0, #472]	; 0x1d8
   26e74:	ldr	r0, [r4]
   26e78:	ldr	r1, [pc, #1036]	; 2728c <myhtml_tokenizer_state_init@@Base+0x954>
   26e7c:	ldr	r1, [pc, r1]
   26e80:	str	r1, [r0, #480]	; 0x1e0
   26e84:	ldr	r0, [r4]
   26e88:	ldr	r1, [pc, #1024]	; 27290 <myhtml_tokenizer_state_init@@Base+0x958>
   26e8c:	ldr	r1, [pc, r1]
   26e90:	str	r1, [r0, #452]	; 0x1c4
   26e94:	ldr	r0, [r4]
   26e98:	ldr	r1, [pc, #1012]	; 27294 <myhtml_tokenizer_state_init@@Base+0x95c>
   26e9c:	ldr	r1, [pc, r1]
   26ea0:	str	r1, [r0, #548]	; 0x224
   26ea4:	ldr	r0, [r4]
   26ea8:	ldr	r1, [pc, #1000]	; 27298 <myhtml_tokenizer_state_init@@Base+0x960>
   26eac:	ldr	r1, [pc, r1]
   26eb0:	str	r1, [r0, #288]	; 0x120
   26eb4:	ldr	r0, [r4]
   26eb8:	ldr	r1, [pc, #988]	; 2729c <myhtml_tokenizer_state_init@@Base+0x964>
   26ebc:	ldr	r1, [pc, r1]
   26ec0:	str	r1, [r0, #320]	; 0x140
   26ec4:	ldr	r0, [r4]
   26ec8:	ldr	r1, [pc, #976]	; 272a0 <myhtml_tokenizer_state_init@@Base+0x968>
   26ecc:	ldr	r1, [pc, r1]
   26ed0:	str	r1, [r0, #324]	; 0x144
   26ed4:	ldr	r0, [r4]
   26ed8:	ldr	r1, [pc, #964]	; 272a4 <myhtml_tokenizer_state_init@@Base+0x96c>
   26edc:	ldr	r1, [pc, r1]
   26ee0:	str	r1, [r0, #328]	; 0x148
   26ee4:	ldr	r0, [r4]
   26ee8:	ldr	r1, [pc, #952]	; 272a8 <myhtml_tokenizer_state_init@@Base+0x970>
   26eec:	ldr	r1, [pc, r1]
   26ef0:	str	r1, [r0, #296]	; 0x128
   26ef4:	ldr	r0, [r4]
   26ef8:	ldr	r1, [pc, #940]	; 272ac <myhtml_tokenizer_state_init@@Base+0x974>
   26efc:	ldr	r1, [pc, r1]
   26f00:	str	r1, [r0, #332]	; 0x14c
   26f04:	ldr	r0, [r4]
   26f08:	ldr	r1, [pc, #928]	; 272b0 <myhtml_tokenizer_state_init@@Base+0x978>
   26f0c:	ldr	r1, [pc, r1]
   26f10:	str	r1, [r0, #336]	; 0x150
   26f14:	ldr	r0, [r4]
   26f18:	ldr	r1, [pc, #916]	; 272b4 <myhtml_tokenizer_state_init@@Base+0x97c>
   26f1c:	ldr	r1, [pc, r1]
   26f20:	str	r1, [r0, #340]	; 0x154
   26f24:	ldr	r0, [r4]
   26f28:	ldr	r1, [pc, #904]	; 272b8 <myhtml_tokenizer_state_init@@Base+0x980>
   26f2c:	ldr	r1, [pc, r1]
   26f30:	str	r1, [r0, #304]	; 0x130
   26f34:	ldr	r0, [r4]
   26f38:	ldr	r1, [pc, #892]	; 272bc <myhtml_tokenizer_state_init@@Base+0x984>
   26f3c:	ldr	r1, [pc, r1]
   26f40:	str	r1, [r0, #484]	; 0x1e4
   26f44:	ldr	r0, [r4]
   26f48:	ldr	r1, [pc, #880]	; 272c0 <myhtml_tokenizer_state_init@@Base+0x988>
   26f4c:	ldr	r1, [pc, r1]
   26f50:	str	r1, [r0, #488]	; 0x1e8
   26f54:	ldr	r0, [r4]
   26f58:	ldr	r1, [pc, #868]	; 272c4 <myhtml_tokenizer_state_init@@Base+0x98c>
   26f5c:	ldr	r1, [pc, r1]
   26f60:	str	r1, [r0, #492]	; 0x1ec
   26f64:	ldr	r0, [r4]
   26f68:	ldr	r1, [pc, #856]	; 272c8 <myhtml_tokenizer_state_init@@Base+0x990>
   26f6c:	ldr	r1, [pc, r1]
   26f70:	str	r1, [r0, #496]	; 0x1f0
   26f74:	ldr	r0, [r4]
   26f78:	ldr	r1, [pc, #844]	; 272cc <myhtml_tokenizer_state_init@@Base+0x994>
   26f7c:	ldr	r1, [pc, r1]
   26f80:	str	r1, [r0, #552]	; 0x228
   26f84:	ldr	r0, [r4]
   26f88:	ldr	r1, [pc, #832]	; 272d0 <myhtml_tokenizer_state_init@@Base+0x998>
   26f8c:	ldr	r1, [pc, r1]
   26f90:	str	r1, [r0, #504]	; 0x1f8
   26f94:	ldr	r0, [r4]
   26f98:	ldr	r1, [pc, #820]	; 272d4 <myhtml_tokenizer_state_init@@Base+0x99c>
   26f9c:	ldr	r1, [pc, r1]
   26fa0:	str	r1, [r0, #508]	; 0x1fc
   26fa4:	ldr	r0, [r4]
   26fa8:	ldr	r1, [pc, #808]	; 272d8 <myhtml_tokenizer_state_init@@Base+0x9a0>
   26fac:	ldr	r1, [pc, r1]
   26fb0:	str	r1, [r0, #512]	; 0x200
   26fb4:	ldr	r0, [r4]
   26fb8:	ldr	r1, [pc, #796]	; 272dc <myhtml_tokenizer_state_init@@Base+0x9a4>
   26fbc:	ldr	r1, [pc, r1]
   26fc0:	str	r1, [r0, #516]	; 0x204
   26fc4:	ldr	r0, [r4]
   26fc8:	ldr	r1, [pc, #784]	; 272e0 <myhtml_tokenizer_state_init@@Base+0x9a8>
   26fcc:	ldr	r1, [pc, r1]
   26fd0:	str	r1, [r0, #532]	; 0x214
   26fd4:	ldr	r0, [r4]
   26fd8:	ldr	r1, [pc, #772]	; 272e4 <myhtml_tokenizer_state_init@@Base+0x9ac>
   26fdc:	ldr	r1, [pc, r1]
   26fe0:	str	r1, [r0, #536]	; 0x218
   26fe4:	ldr	r0, [r4]
   26fe8:	ldr	r1, [pc, #760]	; 272e8 <myhtml_tokenizer_state_init@@Base+0x9b0>
   26fec:	ldr	r1, [pc, r1]
   26ff0:	str	r1, [r0, #540]	; 0x21c
   26ff4:	ldr	r0, [r4]
   26ff8:	ldr	r1, [pc, #748]	; 272ec <myhtml_tokenizer_state_init@@Base+0x9b4>
   26ffc:	ldr	r1, [pc, r1]
   27000:	str	r1, [r0, #544]	; 0x220
   27004:	ldr	r0, [r4]
   27008:	ldr	r1, [pc, #736]	; 272f0 <myhtml_tokenizer_state_init@@Base+0x9b8>
   2700c:	ldr	r1, [pc, r1]
   27010:	str	r1, [r0, #300]	; 0x12c
   27014:	ldr	r0, [r4]
   27018:	ldr	r1, [pc, #724]	; 272f4 <myhtml_tokenizer_state_init@@Base+0x9bc>
   2701c:	ldr	r1, [pc, r1]
   27020:	str	r1, [r0, #344]	; 0x158
   27024:	ldr	r0, [r4]
   27028:	ldr	r1, [pc, #712]	; 272f8 <myhtml_tokenizer_state_init@@Base+0x9c0>
   2702c:	ldr	r1, [pc, r1]
   27030:	str	r1, [r0, #348]	; 0x15c
   27034:	ldr	r0, [r4]
   27038:	ldr	r1, [pc, #700]	; 272fc <myhtml_tokenizer_state_init@@Base+0x9c4>
   2703c:	ldr	r1, [pc, r1]
   27040:	str	r1, [r0, #352]	; 0x160
   27044:	ldr	r0, [r4]
   27048:	ldr	r1, [pc, #688]	; 27300 <myhtml_tokenizer_state_init@@Base+0x9c8>
   2704c:	ldr	r1, [pc, r1]
   27050:	str	r1, [r0, #356]	; 0x164
   27054:	ldr	r0, [r4]
   27058:	ldr	r1, [pc, #676]	; 27304 <myhtml_tokenizer_state_init@@Base+0x9cc>
   2705c:	ldr	r1, [pc, r1]
   27060:	str	r1, [r0, #360]	; 0x168
   27064:	ldr	r0, [r4]
   27068:	ldr	r1, [pc, #664]	; 27308 <myhtml_tokenizer_state_init@@Base+0x9d0>
   2706c:	ldr	r1, [pc, r1]
   27070:	str	r1, [r0, #364]	; 0x16c
   27074:	ldr	r0, [r4]
   27078:	ldr	r1, [pc, #652]	; 2730c <myhtml_tokenizer_state_init@@Base+0x9d4>
   2707c:	ldr	r1, [pc, r1]
   27080:	str	r1, [r0, #368]	; 0x170
   27084:	ldr	r0, [r4]
   27088:	ldr	r1, [pc, #640]	; 27310 <myhtml_tokenizer_state_init@@Base+0x9d8>
   2708c:	ldr	r1, [pc, r1]
   27090:	str	r1, [r0, #372]	; 0x174
   27094:	ldr	r0, [r4]
   27098:	ldr	r1, [pc, #628]	; 27314 <myhtml_tokenizer_state_init@@Base+0x9dc>
   2709c:	ldr	r1, [pc, r1]
   270a0:	str	r1, [r0, #376]	; 0x178
   270a4:	ldr	r0, [r4]
   270a8:	ldr	r1, [pc, #616]	; 27318 <myhtml_tokenizer_state_init@@Base+0x9e0>
   270ac:	ldr	r1, [pc, r1]
   270b0:	str	r1, [r0, #380]	; 0x17c
   270b4:	ldr	r0, [r4]
   270b8:	ldr	r1, [pc, #604]	; 2731c <myhtml_tokenizer_state_init@@Base+0x9e4>
   270bc:	ldr	r1, [pc, r1]
   270c0:	str	r1, [r0, #384]	; 0x180
   270c4:	ldr	r0, [r4]
   270c8:	ldr	r1, [pc, #592]	; 27320 <myhtml_tokenizer_state_init@@Base+0x9e8>
   270cc:	ldr	r1, [pc, r1]
   270d0:	str	r1, [r0, #388]	; 0x184
   270d4:	ldr	r0, [r4]
   270d8:	ldr	r1, [pc, #580]	; 27324 <myhtml_tokenizer_state_init@@Base+0x9ec>
   270dc:	ldr	r1, [pc, r1]
   270e0:	str	r1, [r0, #392]	; 0x188
   270e4:	ldr	r0, [r4]
   270e8:	ldr	r1, [pc, #568]	; 27328 <myhtml_tokenizer_state_init@@Base+0x9f0>
   270ec:	ldr	r1, [pc, r1]
   270f0:	str	r1, [r0, #396]	; 0x18c
   270f4:	ldr	r0, [r4]
   270f8:	ldr	r1, [pc, #556]	; 2732c <myhtml_tokenizer_state_init@@Base+0x9f4>
   270fc:	ldr	r1, [pc, r1]
   27100:	str	r1, [r0, #400]	; 0x190
   27104:	ldr	r0, [r4]
   27108:	ldr	r1, [pc, #544]	; 27330 <myhtml_tokenizer_state_init@@Base+0x9f8>
   2710c:	ldr	r1, [pc, r1]
   27110:	str	r1, [r0, #404]	; 0x194
   27114:	ldr	r0, [r4]
   27118:	ldr	r1, [pc, #532]	; 27334 <myhtml_tokenizer_state_init@@Base+0x9fc>
   2711c:	ldr	r1, [pc, r1]
   27120:	str	r1, [r0, #408]	; 0x198
   27124:	ldr	r0, [r4]
   27128:	ldr	r1, [pc, #520]	; 27338 <myhtml_tokenizer_state_init@@Base+0xa00>
   2712c:	ldr	r1, [pc, r1]
   27130:	str	r1, [r0, #556]	; 0x22c
   27134:	mov	r0, #0
   27138:	pop	{r4, sl, fp, pc}
   2713c:	movw	r0, #37164	; 0x912c
   27140:	pop	{r4, sl, fp, pc}
   27144:	andeq	lr, lr, r4, lsr #26
   27148:			; <UNDEFINED> instruction: 0x000eeeb4
   2714c:	andeq	lr, lr, r0, ror #28
   27150:			; <UNDEFINED> instruction: 0x000eeebc
   27154:	ldrdeq	lr, [lr], -r4
   27158:	andeq	lr, lr, r4, lsr sp
   2715c:	andeq	lr, lr, r0, lsl #28
   27160:	andeq	lr, lr, ip, lsr #24
   27164:	andeq	lr, lr, ip, asr #28
   27168:	andeq	lr, lr, r8, ror lr
   2716c:	andeq	lr, lr, r4, lsl lr
   27170:	strdeq	lr, [lr], -r0
   27174:	andeq	lr, lr, r4, lsr #28
   27178:	andeq	lr, lr, r0, lsl #26
   2717c:	andeq	lr, lr, ip, lsl lr
   27180:	andeq	lr, lr, r0, lsl #26
   27184:	muleq	lr, ip, sp
   27188:	muleq	lr, r0, fp
   2718c:	andeq	lr, lr, r4, lsr #24
   27190:	strdeq	lr, [lr], -r8
   27194:	andeq	lr, lr, ip, ror #23
   27198:	andeq	lr, lr, r8, lsl #28
   2719c:	ldrdeq	lr, [lr], -r8
   271a0:	andeq	lr, lr, ip, ror #23
   271a4:	andeq	lr, lr, r0, asr #22
   271a8:	ldrdeq	lr, [lr], -r0
   271ac:	andeq	lr, lr, r0, ror fp
   271b0:	ldrdeq	lr, [lr], -r0
   271b4:	andeq	lr, lr, ip, lsr #22
   271b8:	andeq	lr, lr, r0, lsr #26
   271bc:	andeq	lr, lr, r0, ror #26
   271c0:			; <UNDEFINED> instruction: 0x000eebb0
   271c4:	andeq	lr, lr, r8, lsr #21
   271c8:	ldrdeq	lr, [lr], -r8
   271cc:	andeq	lr, lr, r0, lsl #26
   271d0:	andeq	lr, lr, r0, ror #23
   271d4:	andeq	lr, lr, r8, lsl #22
   271d8:			; <UNDEFINED> instruction: 0x000eebb0
   271dc:			; <UNDEFINED> instruction: 0x000eebb4
   271e0:	andeq	lr, lr, r0, ror #25
   271e4:	andeq	lr, lr, r0, lsl #21
   271e8:	andeq	lr, lr, r0, lsr #22
   271ec:			; <UNDEFINED> instruction: 0x000eeab4
   271f0:	andeq	lr, lr, r0, lsl fp
   271f4:	muleq	lr, r0, sl
   271f8:	andeq	lr, lr, r8, ror #21
   271fc:	muleq	lr, r4, sl
   27200:	andeq	lr, lr, r8, lsl #24
   27204:	muleq	lr, r0, sl
   27208:	ldrdeq	lr, [lr], -ip
   2720c:	andeq	lr, lr, r8, ror fp
   27210:	muleq	lr, r4, sl
   27214:	andeq	lr, lr, r4, lsr #21
   27218:	ldrdeq	lr, [lr], -ip
   2721c:	andeq	lr, lr, r8, asr #19
   27220:	andeq	lr, lr, r4, asr #19
   27224:	andeq	lr, lr, ip, lsr #20
   27228:	andeq	lr, lr, ip, asr #22
   2722c:	andeq	lr, lr, ip, lsr #18
   27230:			; <UNDEFINED> instruction: 0x000ee9b4
   27234:	muleq	lr, r8, r9
   27238:	ldrdeq	lr, [lr], -r4
   2723c:	andeq	lr, lr, r8, asr r9
   27240:	andeq	lr, lr, ip, lsl #19
   27244:	andeq	lr, lr, r4, lsr #19
   27248:	andeq	lr, lr, r4, lsl fp
   2724c:	andeq	lr, lr, r8, lsl #22
   27250:	andeq	lr, lr, r8, lsr sl
   27254:	andeq	lr, lr, r4, asr #20
   27258:	andeq	lr, lr, r8, lsr sl
   2725c:	andeq	lr, lr, r0, ror sl
   27260:	andeq	lr, lr, r0, lsl #17
   27264:	andeq	lr, lr, r4, asr #19
   27268:	andeq	lr, lr, r8, lsr r9
   2726c:	strdeq	lr, [lr], -r0
   27270:	andeq	lr, lr, r8, asr #17
   27274:	muleq	lr, r8, r9
   27278:	andeq	lr, lr, r0, lsr sl
   2727c:	andeq	lr, lr, ip, lsl #17
   27280:	andeq	lr, lr, r4, asr #18
   27284:	andeq	lr, lr, r0, lsr #16
   27288:	andeq	lr, lr, ip, lsr #20
   2728c:	strdeq	lr, [lr], -r8
   27290:	andeq	lr, lr, r8, asr #17
   27294:	andeq	lr, lr, ip, asr #16
   27298:	muleq	lr, r0, r9
   2729c:	ldrdeq	lr, [lr], -r0
   272a0:	andeq	lr, lr, r4, lsl #18
   272a4:	ldrdeq	lr, [lr], -r0
   272a8:	andeq	lr, lr, r8, ror r8
   272ac:			; <UNDEFINED> instruction: 0x000ee9b4
   272b0:	andeq	lr, lr, ip, asr #17
   272b4:	andeq	lr, lr, r8, lsl #17
   272b8:	andeq	lr, lr, ip, lsl #16
   272bc:	ldrdeq	lr, [lr], -r0
   272c0:			; <UNDEFINED> instruction: 0x000ee8bc
   272c4:			; <UNDEFINED> instruction: 0x000ee6bc
   272c8:	andeq	lr, lr, r0, asr #13
   272cc:			; <UNDEFINED> instruction: 0x000ee6bc
   272d0:	strdeq	lr, [lr], -r0
   272d4:	muleq	lr, r8, r8
   272d8:	andeq	lr, lr, ip, asr #13
   272dc:	andeq	lr, lr, r4, ror #17
   272e0:	andeq	lr, lr, r8, lsr #17
   272e4:	andeq	lr, lr, ip, asr #15
   272e8:	andeq	lr, lr, r0, lsl #17
   272ec:	andeq	lr, lr, r4, asr r7
   272f0:	muleq	lr, ip, r6
   272f4:	andeq	lr, lr, r4, ror #14
   272f8:	andeq	lr, lr, r0, lsr #15
   272fc:	andeq	lr, lr, ip, lsl #15
   27300:	ldrdeq	lr, [lr], -r8
   27304:	andeq	lr, lr, r8, lsr #13
   27308:	muleq	lr, r4, r5
   2730c:	andeq	lr, lr, r4, lsl r8
   27310:	andeq	lr, lr, r4, lsr r7
   27314:	andeq	lr, lr, ip, lsl #16
   27318:	muleq	lr, r4, r5
   2731c:	strdeq	lr, [lr], -ip
   27320:	andeq	lr, lr, ip, lsl r7
   27324:	andeq	lr, lr, r8, asr r6
   27328:	andeq	lr, lr, r4, asr #14
   2732c:	andeq	lr, lr, r4, lsr r6
   27330:	andeq	lr, lr, r4, lsr #13
   27334:	andeq	lr, lr, r8, lsr #11
   27338:	andeq	lr, lr, ip, asr #11

0002733c <myhtml_tokenizer_state_destroy@@Base>:
   2733c:	ldr	r0, [r0, #24]
   27340:	cmp	r0, #0
   27344:	bxeq	lr
   27348:	b	11eb4 <mycore_free@plt>

0002734c <myhtml_tokenizer_state_doctype@@Base>:
   2734c:	mov	r1, #52	; 0x34
   27350:	str	r1, [r0, #160]	; 0xa0
   27354:	mov	r0, r3
   27358:	bx	lr

0002735c <myhtml_tokenizer_state_before_doctype_name@@Base>:
   2735c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   27360:	add	fp, sp, #24
   27364:	mov	r5, r3
   27368:	mov	r8, r0
   2736c:	ldr	r0, [fp, #8]
   27370:	mov	r3, r1
   27374:	ldrb	r4, [r2, r5]
   27378:	sub	r7, r4, #9
   2737c:	cmp	r7, #23
   27380:	bhi	273d8 <myhtml_tokenizer_state_before_doctype_name@@Base+0x7c>
   27384:	movw	r1, #27
   27388:	mov	r6, #1
   2738c:	movt	r1, #128	; 0x80
   27390:	tst	r1, r6, lsl r7
   27394:	beq	273d8 <myhtml_tokenizer_state_before_doctype_name@@Base+0x7c>
   27398:	cmp	r5, r0
   2739c:	bcs	273d8 <myhtml_tokenizer_state_before_doctype_name@@Base+0x7c>
   273a0:	add	r5, r5, #1
   273a4:	mvn	r6, #8
   273a8:	mov	r7, #1
   273ac:	uxtab	r4, r6, r4
   273b0:	cmp	r4, #23
   273b4:	bhi	273d4 <myhtml_tokenizer_state_before_doctype_name@@Base+0x78>
   273b8:	tst	r1, r7, lsl r4
   273bc:	beq	273d4 <myhtml_tokenizer_state_before_doctype_name@@Base+0x78>
   273c0:	cmp	r0, r5
   273c4:	beq	27430 <myhtml_tokenizer_state_before_doctype_name@@Base+0xd4>
   273c8:	ldrb	r4, [r2, r5]
   273cc:	add	r5, r5, #1
   273d0:	b	273ac <myhtml_tokenizer_state_before_doctype_name@@Base+0x50>
   273d4:	sub	r5, r5, #1
   273d8:	cmp	r5, r0
   273dc:	bcs	274ac <myhtml_tokenizer_state_before_doctype_name@@Base+0x150>
   273e0:	ldrb	r0, [r2, r5]
   273e4:	cmp	r0, #62	; 0x3e
   273e8:	bne	27438 <myhtml_tokenizer_state_before_doctype_name@@Base+0xdc>
   273ec:	mov	r0, #1
   273f0:	add	r5, r5, #1
   273f4:	mov	r2, r3
   273f8:	str	r0, [r8, #176]	; 0xb0
   273fc:	ldr	r0, [r8, #192]	; 0xc0
   27400:	ldr	r1, [r3, #32]
   27404:	add	r0, r0, r5
   27408:	sub	r0, r0, r1
   2740c:	mov	r1, r5
   27410:	str	r0, [r3, #36]	; 0x24
   27414:	mov	r0, r8
   27418:	bl	11350 <myhtml_queue_add@plt>
   2741c:	cmp	r0, #0
   27420:	beq	2745c <myhtml_tokenizer_state_before_doctype_name@@Base+0x100>
   27424:	mov	r0, #69	; 0x45
   27428:	mov	r5, #0
   2742c:	b	274a8 <myhtml_tokenizer_state_before_doctype_name@@Base+0x14c>
   27430:	mov	r5, r0
   27434:	b	274ac <myhtml_tokenizer_state_before_doctype_name@@Base+0x150>
   27438:	ldr	r1, [r3, #40]	; 0x28
   2743c:	ldr	r0, [r8, #56]	; 0x38
   27440:	cmp	r1, #0
   27444:	beq	2747c <myhtml_tokenizer_state_before_doctype_name@@Base+0x120>
   27448:	ldr	r1, [r3, #44]	; 0x2c
   2744c:	str	r0, [r1]
   27450:	str	r0, [r3, #44]	; 0x2c
   27454:	str	r0, [r8, #56]	; 0x38
   27458:	b	27488 <myhtml_tokenizer_state_before_doctype_name@@Base+0x12c>
   2745c:	ldr	r0, [r8, #8]
   27460:	ldr	r1, [r0, #16]
   27464:	bl	11ad0 <myhtml_token_attr_create@plt>
   27468:	cmp	r0, #0
   2746c:	str	r0, [r8, #56]	; 0x38
   27470:	beq	27424 <myhtml_tokenizer_state_before_doctype_name@@Base+0xc8>
   27474:	mov	r0, #0
   27478:	b	274a8 <myhtml_tokenizer_state_before_doctype_name@@Base+0x14c>
   2747c:	str	r0, [r3, #40]	; 0x28
   27480:	str	r0, [r3, #44]	; 0x2c
   27484:	mov	r1, #0
   27488:	mov	r2, #0
   2748c:	str	r2, [r0]
   27490:	str	r1, [r0, #4]
   27494:	ldr	r1, [r8, #192]	; 0xc0
   27498:	ldr	r0, [r8, #56]	; 0x38
   2749c:	add	r1, r1, r5
   274a0:	str	r1, [r0, #48]	; 0x30
   274a4:	mov	r0, #53	; 0x35
   274a8:	str	r0, [r8, #160]	; 0xa0
   274ac:	mov	r0, r5
   274b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000274b4 <myhtml_tokenizer_state_doctype_name@@Base>:
   274b4:	push	{r4, r5, r6, r7, fp, lr}
   274b8:	add	fp, sp, #16
   274bc:	mov	r7, r0
   274c0:	ldr	r0, [fp, #8]
   274c4:	mov	r4, r3
   274c8:	cmp	r3, r0
   274cc:	bcs	275a4 <myhtml_tokenizer_state_doctype_name@@Base+0xf0>
   274d0:	movw	r3, #27
   274d4:	mov	ip, r1
   274d8:	mov	r1, #1
   274dc:	movt	r3, #128	; 0x80
   274e0:	ldrb	r5, [r2, r4]
   274e4:	sub	r6, r5, #9
   274e8:	cmp	r6, #23
   274ec:	bhi	274f8 <myhtml_tokenizer_state_doctype_name@@Base+0x44>
   274f0:	tst	r3, r1, lsl r6
   274f4:	bne	27514 <myhtml_tokenizer_state_doctype_name@@Base+0x60>
   274f8:	cmp	r5, #62	; 0x3e
   274fc:	beq	27550 <myhtml_tokenizer_state_doctype_name@@Base+0x9c>
   27500:	add	r4, r4, #1
   27504:	cmp	r0, r4
   27508:	bne	274e0 <myhtml_tokenizer_state_doctype_name@@Base+0x2c>
   2750c:	mov	r4, r0
   27510:	b	275a4 <myhtml_tokenizer_state_doctype_name@@Base+0xf0>
   27514:	ldr	r0, [r7, #56]	; 0x38
   27518:	ldr	r1, [r7, #192]	; 0xc0
   2751c:	ldr	r2, [r0, #48]	; 0x30
   27520:	sub	r1, r1, r2
   27524:	add	r1, r1, r4
   27528:	str	r1, [r0, #52]	; 0x34
   2752c:	ldr	r0, [r7, #8]
   27530:	ldr	r1, [r0, #16]
   27534:	bl	11ad0 <myhtml_token_attr_create@plt>
   27538:	cmp	r0, #0
   2753c:	str	r0, [r7, #56]	; 0x38
   27540:	beq	27598 <myhtml_tokenizer_state_doctype_name@@Base+0xe4>
   27544:	mov	r0, #54	; 0x36
   27548:	add	r4, r4, #1
   2754c:	b	275a0 <myhtml_tokenizer_state_doctype_name@@Base+0xec>
   27550:	ldr	r0, [r7, #56]	; 0x38
   27554:	ldr	r1, [r7, #192]	; 0xc0
   27558:	ldr	r2, [r0, #48]	; 0x30
   2755c:	sub	r2, r1, r2
   27560:	add	r2, r2, r4
   27564:	str	r2, [r0, #52]	; 0x34
   27568:	mov	r2, ip
   2756c:	ldr	r0, [ip, #32]
   27570:	sub	r0, r1, r0
   27574:	add	r0, r0, r4
   27578:	add	r4, r4, #1
   2757c:	add	r0, r0, #1
   27580:	mov	r1, r4
   27584:	str	r0, [ip, #36]	; 0x24
   27588:	mov	r0, r7
   2758c:	bl	11350 <myhtml_queue_add@plt>
   27590:	cmp	r0, #0
   27594:	beq	275ac <myhtml_tokenizer_state_doctype_name@@Base+0xf8>
   27598:	mov	r0, #69	; 0x45
   2759c:	mov	r4, #0
   275a0:	str	r0, [r7, #160]	; 0xa0
   275a4:	mov	r0, r4
   275a8:	pop	{r4, r5, r6, r7, fp, pc}
   275ac:	ldr	r0, [r7, #8]
   275b0:	ldr	r1, [r0, #16]
   275b4:	bl	11ad0 <myhtml_token_attr_create@plt>
   275b8:	cmp	r0, #0
   275bc:	str	r0, [r7, #56]	; 0x38
   275c0:	beq	27598 <myhtml_tokenizer_state_doctype_name@@Base+0xe4>
   275c4:	mov	r0, #0
   275c8:	b	275a0 <myhtml_tokenizer_state_doctype_name@@Base+0xec>

000275cc <myhtml_tokenizer_state_after_doctype_name@@Base>:
   275cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   275d0:	add	fp, sp, #24
   275d4:	mov	r5, r3
   275d8:	mov	r8, r0
   275dc:	ldr	r0, [fp, #8]
   275e0:	mov	r3, r1
   275e4:	ldrb	r4, [r2, r5]
   275e8:	sub	r7, r4, #9
   275ec:	cmp	r7, #23
   275f0:	bhi	27648 <myhtml_tokenizer_state_after_doctype_name@@Base+0x7c>
   275f4:	movw	r1, #27
   275f8:	mov	r6, #1
   275fc:	movt	r1, #128	; 0x80
   27600:	tst	r1, r6, lsl r7
   27604:	beq	27648 <myhtml_tokenizer_state_after_doctype_name@@Base+0x7c>
   27608:	cmp	r5, r0
   2760c:	bcs	27648 <myhtml_tokenizer_state_after_doctype_name@@Base+0x7c>
   27610:	add	r5, r5, #1
   27614:	mvn	r6, #8
   27618:	mov	r7, #1
   2761c:	uxtab	r4, r6, r4
   27620:	cmp	r4, #23
   27624:	bhi	27644 <myhtml_tokenizer_state_after_doctype_name@@Base+0x78>
   27628:	tst	r1, r7, lsl r4
   2762c:	beq	27644 <myhtml_tokenizer_state_after_doctype_name@@Base+0x78>
   27630:	cmp	r0, r5
   27634:	beq	27698 <myhtml_tokenizer_state_after_doctype_name@@Base+0xcc>
   27638:	ldrb	r4, [r2, r5]
   2763c:	add	r5, r5, #1
   27640:	b	2761c <myhtml_tokenizer_state_after_doctype_name@@Base+0x50>
   27644:	sub	r5, r5, #1
   27648:	cmp	r5, r0
   2764c:	bcs	276bc <myhtml_tokenizer_state_after_doctype_name@@Base+0xf0>
   27650:	ldrb	r0, [r2, r5]
   27654:	cmp	r0, #62	; 0x3e
   27658:	bne	276a0 <myhtml_tokenizer_state_after_doctype_name@@Base+0xd4>
   2765c:	ldr	r0, [r8, #192]	; 0xc0
   27660:	ldr	r1, [r3, #32]
   27664:	add	r5, r5, #1
   27668:	mov	r2, r3
   2766c:	add	r0, r0, r5
   27670:	sub	r0, r0, r1
   27674:	mov	r1, r5
   27678:	str	r0, [r3, #36]	; 0x24
   2767c:	mov	r0, r8
   27680:	bl	11350 <myhtml_queue_add@plt>
   27684:	cmp	r0, #0
   27688:	beq	276b4 <myhtml_tokenizer_state_after_doctype_name@@Base+0xe8>
   2768c:	mov	r0, #69	; 0x45
   27690:	mov	r5, #0
   27694:	b	276b8 <myhtml_tokenizer_state_after_doctype_name@@Base+0xec>
   27698:	mov	r5, r0
   2769c:	b	276bc <myhtml_tokenizer_state_after_doctype_name@@Base+0xf0>
   276a0:	ldr	r0, [r8, #192]	; 0xc0
   276a4:	add	r0, r0, r5
   276a8:	str	r0, [r3, #12]
   276ac:	mov	r0, #68	; 0x44
   276b0:	b	276b8 <myhtml_tokenizer_state_after_doctype_name@@Base+0xec>
   276b4:	mov	r0, #0
   276b8:	str	r0, [r8, #160]	; 0xa0
   276bc:	mov	r0, r5
   276c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000276c4 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base>:
   276c4:	push	{r4, r5, r6, r7, fp, lr}
   276c8:	add	fp, sp, #16
   276cc:	mov	r5, r1
   276d0:	mov	r4, r0
   276d4:	ldr	r1, [r1, #12]
   276d8:	ldr	r0, [r0, #192]	; 0xc0
   276dc:	ldr	r6, [fp, #8]
   276e0:	add	r0, r0, r6
   276e4:	add	r2, r1, #6
   276e8:	cmp	r2, r0
   276ec:	bhi	27850 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x18c>
   276f0:	mov	r0, r4
   276f4:	mov	r2, #6
   276f8:	mov	r7, r3
   276fc:	bl	111ac <myhtml_tree_incomming_buffer_make_data@plt>
   27700:	ldr	r1, [pc, #336]	; 27858 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x194>
   27704:	mov	r2, #6
   27708:	mov	r6, r0
   2770c:	add	r1, pc, r1
   27710:	bl	11554 <mycore_strncasecmp@plt>
   27714:	cmp	r0, #0
   27718:	beq	27750 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x8c>
   2771c:	ldr	r1, [pc, #312]	; 2785c <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x198>
   27720:	mov	r0, r6
   27724:	mov	r2, #6
   27728:	add	r1, pc, r1
   2772c:	bl	11554 <mycore_strncasecmp@plt>
   27730:	cmp	r0, #0
   27734:	beq	27774 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xb0>
   27738:	mov	r0, #66	; 0x42
   2773c:	mov	r6, r7
   27740:	str	r0, [r4, #160]	; 0xa0
   27744:	mov	r0, #1
   27748:	str	r0, [r4, #176]	; 0xb0
   2774c:	b	27850 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x18c>
   27750:	ldr	r1, [r5, #40]	; 0x28
   27754:	ldr	r0, [r4, #56]	; 0x38
   27758:	cmp	r1, #0
   2775c:	beq	27798 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xd4>
   27760:	ldr	r1, [r5, #44]	; 0x2c
   27764:	str	r0, [r1]
   27768:	str	r0, [r5, #44]	; 0x2c
   2776c:	str	r0, [r4, #56]	; 0x38
   27770:	b	277a4 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xe0>
   27774:	ldr	r1, [r5, #40]	; 0x28
   27778:	ldr	r0, [r4, #56]	; 0x38
   2777c:	cmp	r1, #0
   27780:	beq	277e4 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x120>
   27784:	ldr	r1, [r5, #44]	; 0x2c
   27788:	str	r0, [r1]
   2778c:	str	r0, [r5, #44]	; 0x2c
   27790:	str	r0, [r4, #56]	; 0x38
   27794:	b	277f0 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x12c>
   27798:	str	r0, [r5, #40]	; 0x28
   2779c:	str	r0, [r5, #44]	; 0x2c
   277a0:	mov	r1, #0
   277a4:	mov	r6, #0
   277a8:	mov	r2, #6
   277ac:	str	r6, [r0]
   277b0:	str	r1, [r0, #4]
   277b4:	ldr	r0, [r5, #12]
   277b8:	ldr	r1, [r4, #56]	; 0x38
   277bc:	str	r0, [r1, #56]	; 0x38
   277c0:	str	r2, [r1, #60]	; 0x3c
   277c4:	ldr	r0, [r4, #8]
   277c8:	ldr	r1, [r0, #16]
   277cc:	bl	11ad0 <myhtml_token_attr_create@plt>
   277d0:	cmp	r0, #0
   277d4:	str	r0, [r4, #56]	; 0x38
   277d8:	beq	27848 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x184>
   277dc:	mov	r0, #56	; 0x38
   277e0:	b	2782c <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x168>
   277e4:	str	r0, [r5, #40]	; 0x28
   277e8:	str	r0, [r5, #44]	; 0x2c
   277ec:	mov	r1, #0
   277f0:	mov	r6, #0
   277f4:	mov	r2, #6
   277f8:	str	r6, [r0]
   277fc:	str	r1, [r0, #4]
   27800:	ldr	r0, [r5, #12]
   27804:	ldr	r1, [r4, #56]	; 0x38
   27808:	str	r0, [r1, #56]	; 0x38
   2780c:	str	r2, [r1, #60]	; 0x3c
   27810:	ldr	r0, [r4, #8]
   27814:	ldr	r1, [r0, #16]
   27818:	bl	11ad0 <myhtml_token_attr_create@plt>
   2781c:	cmp	r0, #0
   27820:	str	r0, [r4, #56]	; 0x38
   27824:	beq	27848 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x184>
   27828:	mov	r0, #59	; 0x3b
   2782c:	str	r0, [r4, #160]	; 0xa0
   27830:	ldr	r1, [r4, #76]	; 0x4c
   27834:	ldr	r0, [r5, #12]
   27838:	ldr	r1, [r1, #12]
   2783c:	sub	r0, r0, r1
   27840:	add	r6, r0, #6
   27844:	b	27850 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x18c>
   27848:	mov	r0, #69	; 0x45
   2784c:	str	r0, [r4, #160]	; 0xa0
   27850:	mov	r0, r6
   27854:	pop	{r4, r5, r6, r7, fp, pc}
   27858:	andeq	r3, sp, sl, lsl r6
   2785c:	andeq	r3, sp, r0, lsl r6

00027860 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base>:
   27860:	push	{r4, r5, r6, r7, fp, lr}
   27864:	add	fp, sp, #16
   27868:	mov	ip, r1
   2786c:	ldrb	r1, [r2, r3]
   27870:	ldr	r5, [fp, #8]
   27874:	mov	r7, r0
   27878:	sub	r6, r1, #9
   2787c:	cmp	r6, #23
   27880:	bhi	278d8 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x78>
   27884:	movw	r0, #27
   27888:	mov	r4, #1
   2788c:	movt	r0, #128	; 0x80
   27890:	tst	r0, r4, lsl r6
   27894:	beq	278d8 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x78>
   27898:	cmp	r3, r5
   2789c:	bcs	278d8 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x78>
   278a0:	add	r3, r3, #1
   278a4:	mvn	r4, #8
   278a8:	mov	r6, #1
   278ac:	uxtab	r1, r4, r1
   278b0:	cmp	r1, #23
   278b4:	bhi	278d4 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x74>
   278b8:	tst	r0, r6, lsl r1
   278bc:	beq	278d4 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x74>
   278c0:	cmp	r5, r3
   278c4:	beq	279a4 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x144>
   278c8:	ldrb	r1, [r2, r3]
   278cc:	add	r3, r3, #1
   278d0:	b	278ac <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x4c>
   278d4:	sub	r3, r3, #1
   278d8:	cmp	r3, r5
   278dc:	bcs	27918 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xb8>
   278e0:	ldrb	r0, [r2, r3]
   278e4:	cmp	r0, #39	; 0x27
   278e8:	beq	27920 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xc0>
   278ec:	cmp	r0, #34	; 0x22
   278f0:	bne	27944 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xe4>
   278f4:	ldr	r1, [r7, #192]	; 0xc0
   278f8:	ldr	r0, [r7, #56]	; 0x38
   278fc:	add	r5, r3, #1
   27900:	mov	r2, #0
   27904:	add	r1, r5, r1
   27908:	str	r1, [r0, #56]	; 0x38
   2790c:	str	r2, [r0, #60]	; 0x3c
   27910:	mov	r0, #57	; 0x39
   27914:	b	279a0 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x140>
   27918:	mov	r5, r3
   2791c:	b	279a4 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x144>
   27920:	ldr	r1, [r7, #192]	; 0xc0
   27924:	ldr	r0, [r7, #56]	; 0x38
   27928:	add	r5, r3, #1
   2792c:	mov	r2, #0
   27930:	add	r1, r5, r1
   27934:	str	r1, [r0, #56]	; 0x38
   27938:	str	r2, [r0, #60]	; 0x3c
   2793c:	mov	r0, #58	; 0x3a
   27940:	b	279a0 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x140>
   27944:	mov	r1, #1
   27948:	cmp	r0, #62	; 0x3e
   2794c:	str	r1, [r7, #176]	; 0xb0
   27950:	bne	27990 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x130>
   27954:	ldr	r0, [r7, #192]	; 0xc0
   27958:	ldr	r1, [ip, #32]
   2795c:	add	r5, r3, #1
   27960:	mov	r2, ip
   27964:	add	r0, r0, r5
   27968:	sub	r0, r0, r1
   2796c:	mov	r1, r5
   27970:	str	r0, [ip, #36]	; 0x24
   27974:	mov	r0, r7
   27978:	bl	11350 <myhtml_queue_add@plt>
   2797c:	cmp	r0, #0
   27980:	beq	2799c <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x13c>
   27984:	mov	r0, #69	; 0x45
   27988:	mov	r5, #0
   2798c:	b	279a0 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x140>
   27990:	mov	r0, #66	; 0x42
   27994:	add	r5, r3, #1
   27998:	b	279a0 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x140>
   2799c:	mov	r0, #0
   279a0:	str	r0, [r7, #160]	; 0xa0
   279a4:	mov	r0, r5
   279a8:	pop	{r4, r5, r6, r7, fp, pc}

000279ac <myhtml_tokenizer_doctype_public_identifier_dsq@@Base>:
   279ac:	push	{r4, r5, r6, r7, fp, lr}
   279b0:	add	fp, sp, #16
   279b4:	ldr	r7, [fp, #8]
   279b8:	mov	r5, r3
   279bc:	cmp	r3, r7
   279c0:	bcs	279f4 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x48>
   279c4:	mov	r4, r0
   279c8:	ldr	r0, [fp, #12]
   279cc:	mov	r6, r1
   279d0:	ldrb	r1, [r2, r5]
   279d4:	cmp	r1, r0
   279d8:	beq	279fc <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x50>
   279dc:	cmp	r1, #62	; 0x3e
   279e0:	beq	27a34 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x88>
   279e4:	add	r5, r5, #1
   279e8:	cmp	r7, r5
   279ec:	bne	279d0 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x24>
   279f0:	b	27b3c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x190>
   279f4:	mov	r7, r5
   279f8:	b	27b3c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x190>
   279fc:	ldr	r0, [r4, #56]	; 0x38
   27a00:	ldr	r1, [r4, #192]	; 0xc0
   27a04:	ldr	r2, [r0, #56]	; 0x38
   27a08:	sub	r1, r1, r2
   27a0c:	add	r1, r1, r5
   27a10:	str	r1, [r0, #60]	; 0x3c
   27a14:	ldr	r1, [r6, #40]	; 0x28
   27a18:	cmp	r1, #0
   27a1c:	beq	27a80 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xd4>
   27a20:	ldr	r1, [r6, #44]	; 0x2c
   27a24:	str	r0, [r1]
   27a28:	str	r0, [r6, #44]	; 0x2c
   27a2c:	str	r0, [r4, #56]	; 0x38
   27a30:	b	27a8c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xe0>
   27a34:	mov	r0, #1
   27a38:	str	r0, [r4, #176]	; 0xb0
   27a3c:	ldr	r0, [r4, #56]	; 0x38
   27a40:	ldr	r1, [r4, #192]	; 0xc0
   27a44:	ldr	r2, [r0, #56]	; 0x38
   27a48:	add	r3, r1, r5
   27a4c:	cmp	r3, r2
   27a50:	bls	27af0 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x144>
   27a54:	sub	r1, r1, r2
   27a58:	add	r1, r1, r5
   27a5c:	str	r1, [r0, #60]	; 0x3c
   27a60:	ldr	r1, [r6, #40]	; 0x28
   27a64:	cmp	r1, #0
   27a68:	beq	27abc <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x110>
   27a6c:	ldr	r1, [r6, #44]	; 0x2c
   27a70:	str	r0, [r1]
   27a74:	str	r0, [r6, #44]	; 0x2c
   27a78:	str	r0, [r4, #56]	; 0x38
   27a7c:	b	27ac8 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x11c>
   27a80:	str	r0, [r6, #40]	; 0x28
   27a84:	str	r0, [r6, #44]	; 0x2c
   27a88:	mov	r1, #0
   27a8c:	mov	r7, #0
   27a90:	str	r7, [r0]
   27a94:	str	r1, [r0, #4]
   27a98:	ldr	r0, [r4, #8]
   27a9c:	ldr	r1, [r0, #16]
   27aa0:	bl	11ad0 <myhtml_token_attr_create@plt>
   27aa4:	cmp	r0, #0
   27aa8:	str	r0, [r4, #56]	; 0x38
   27aac:	beq	27b2c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x180>
   27ab0:	mov	r0, #59	; 0x3b
   27ab4:	add	r7, r5, #1
   27ab8:	b	27b38 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x18c>
   27abc:	str	r0, [r6, #40]	; 0x28
   27ac0:	str	r0, [r6, #44]	; 0x2c
   27ac4:	mov	r1, #0
   27ac8:	mov	r7, #0
   27acc:	str	r7, [r0]
   27ad0:	str	r1, [r0, #4]
   27ad4:	ldr	r0, [r4, #8]
   27ad8:	ldr	r1, [r0, #16]
   27adc:	bl	11ad0 <myhtml_token_attr_create@plt>
   27ae0:	cmp	r0, #0
   27ae4:	str	r0, [r4, #56]	; 0x38
   27ae8:	beq	27b2c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x180>
   27aec:	ldr	r1, [r4, #192]	; 0xc0
   27af0:	ldr	r0, [r6, #32]
   27af4:	add	r7, r5, #1
   27af8:	mov	r2, r6
   27afc:	sub	r0, r1, r0
   27b00:	mov	r1, r7
   27b04:	add	r0, r0, r5
   27b08:	add	r0, r0, #1
   27b0c:	str	r0, [r6, #36]	; 0x24
   27b10:	mov	r0, r4
   27b14:	bl	11350 <myhtml_queue_add@plt>
   27b18:	cmp	r0, #0
   27b1c:	beq	27b34 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x188>
   27b20:	mov	r0, #69	; 0x45
   27b24:	mov	r7, #0
   27b28:	b	27b38 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x18c>
   27b2c:	mov	r0, #69	; 0x45
   27b30:	b	27b38 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x18c>
   27b34:	mov	r0, #0
   27b38:	str	r0, [r4, #160]	; 0xa0
   27b3c:	mov	r0, r7
   27b40:	pop	{r4, r5, r6, r7, fp, pc}

00027b44 <myhtml_tokenizer_state_doctype_public_identifier_double_quoted@@Base>:
   27b44:	push	{fp, lr}
   27b48:	mov	fp, sp
   27b4c:	sub	sp, sp, #8
   27b50:	mov	ip, #34	; 0x22
   27b54:	str	ip, [sp, #4]
   27b58:	ldr	ip, [fp, #8]
   27b5c:	str	ip, [sp]
   27b60:	bl	11740 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>
   27b64:	mov	sp, fp
   27b68:	pop	{fp, pc}

00027b6c <myhtml_tokenizer_state_doctype_public_identifier_single_quoted@@Base>:
   27b6c:	push	{fp, lr}
   27b70:	mov	fp, sp
   27b74:	sub	sp, sp, #8
   27b78:	mov	ip, #39	; 0x27
   27b7c:	str	ip, [sp, #4]
   27b80:	ldr	ip, [fp, #8]
   27b84:	str	ip, [sp]
   27b88:	bl	11740 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>
   27b8c:	mov	sp, fp
   27b90:	pop	{fp, pc}

00027b94 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base>:
   27b94:	push	{r4, r5, r6, r7, fp, lr}
   27b98:	add	fp, sp, #16
   27b9c:	mov	r5, r3
   27ba0:	ldrb	r3, [r2, r3]
   27ba4:	mov	r7, r0
   27ba8:	ldr	r0, [fp, #8]
   27bac:	mov	ip, r1
   27bb0:	sub	r6, r3, #9
   27bb4:	cmp	r6, #23
   27bb8:	bhi	27c10 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x7c>
   27bbc:	movw	r1, #27
   27bc0:	mov	r4, #1
   27bc4:	movt	r1, #128	; 0x80
   27bc8:	tst	r1, r4, lsl r6
   27bcc:	beq	27c10 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x7c>
   27bd0:	cmp	r5, r0
   27bd4:	bcs	27c10 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x7c>
   27bd8:	add	r5, r5, #1
   27bdc:	mvn	r4, #8
   27be0:	mov	r6, #1
   27be4:	uxtab	r3, r4, r3
   27be8:	cmp	r3, #23
   27bec:	bhi	27c0c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x78>
   27bf0:	tst	r1, r6, lsl r3
   27bf4:	beq	27c0c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x78>
   27bf8:	cmp	r0, r5
   27bfc:	beq	27c58 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xc4>
   27c00:	ldrb	r3, [r2, r5]
   27c04:	add	r5, r5, #1
   27c08:	b	27be4 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x50>
   27c0c:	sub	r5, r5, #1
   27c10:	cmp	r5, r0
   27c14:	bcs	27cdc <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x148>
   27c18:	ldrb	r0, [r2, r5]
   27c1c:	cmp	r0, #62	; 0x3e
   27c20:	beq	27c60 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xcc>
   27c24:	cmp	r0, #39	; 0x27
   27c28:	beq	27c9c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x108>
   27c2c:	cmp	r0, #34	; 0x22
   27c30:	bne	27cc0 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x12c>
   27c34:	ldr	r1, [r7, #192]	; 0xc0
   27c38:	ldr	r0, [r7, #56]	; 0x38
   27c3c:	add	r5, r5, #1
   27c40:	mov	r2, #0
   27c44:	add	r1, r5, r1
   27c48:	str	r1, [r0, #56]	; 0x38
   27c4c:	str	r2, [r0, #60]	; 0x3c
   27c50:	mov	r0, #63	; 0x3f
   27c54:	b	27cd8 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x144>
   27c58:	mov	r5, r0
   27c5c:	b	27cdc <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x148>
   27c60:	ldr	r0, [r7, #192]	; 0xc0
   27c64:	ldr	r1, [ip, #32]
   27c68:	add	r5, r5, #1
   27c6c:	mov	r2, ip
   27c70:	add	r0, r0, r5
   27c74:	sub	r0, r0, r1
   27c78:	mov	r1, r5
   27c7c:	str	r0, [ip, #36]	; 0x24
   27c80:	mov	r0, r7
   27c84:	bl	11350 <myhtml_queue_add@plt>
   27c88:	cmp	r0, #0
   27c8c:	beq	27cd4 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x140>
   27c90:	mov	r0, #69	; 0x45
   27c94:	mov	r5, #0
   27c98:	b	27cd8 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x144>
   27c9c:	ldr	r1, [r7, #192]	; 0xc0
   27ca0:	ldr	r0, [r7, #56]	; 0x38
   27ca4:	add	r5, r5, #1
   27ca8:	mov	r2, #0
   27cac:	add	r1, r5, r1
   27cb0:	str	r1, [r0, #56]	; 0x38
   27cb4:	str	r2, [r0, #60]	; 0x3c
   27cb8:	mov	r0, #64	; 0x40
   27cbc:	b	27cd8 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x144>
   27cc0:	mov	r0, #66	; 0x42
   27cc4:	str	r0, [r7, #160]	; 0xa0
   27cc8:	mov	r0, #1
   27ccc:	str	r0, [r7, #176]	; 0xb0
   27cd0:	b	27cdc <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x148>
   27cd4:	mov	r0, #0
   27cd8:	str	r0, [r7, #160]	; 0xa0
   27cdc:	mov	r0, r5
   27ce0:	pop	{r4, r5, r6, r7, fp, pc}

00027ce4 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base>:
   27ce4:	push	{r4, r5, r6, r7, fp, lr}
   27ce8:	add	fp, sp, #16
   27cec:	ldr	r7, [fp, #8]
   27cf0:	mov	r5, r3
   27cf4:	cmp	r3, r7
   27cf8:	bcs	27d2c <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x48>
   27cfc:	mov	r4, r0
   27d00:	ldr	r0, [fp, #12]
   27d04:	mov	r6, r1
   27d08:	ldrb	r1, [r2, r5]
   27d0c:	cmp	r1, r0
   27d10:	beq	27d34 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x50>
   27d14:	cmp	r1, #62	; 0x3e
   27d18:	beq	27d6c <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x88>
   27d1c:	add	r5, r5, #1
   27d20:	cmp	r7, r5
   27d24:	bne	27d08 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x24>
   27d28:	b	27e74 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x190>
   27d2c:	mov	r7, r5
   27d30:	b	27e74 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x190>
   27d34:	ldr	r0, [r4, #56]	; 0x38
   27d38:	ldr	r1, [r4, #192]	; 0xc0
   27d3c:	ldr	r2, [r0, #56]	; 0x38
   27d40:	sub	r1, r1, r2
   27d44:	add	r1, r1, r5
   27d48:	str	r1, [r0, #60]	; 0x3c
   27d4c:	ldr	r1, [r6, #40]	; 0x28
   27d50:	cmp	r1, #0
   27d54:	beq	27db8 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xd4>
   27d58:	ldr	r1, [r6, #44]	; 0x2c
   27d5c:	str	r0, [r1]
   27d60:	str	r0, [r6, #44]	; 0x2c
   27d64:	str	r0, [r4, #56]	; 0x38
   27d68:	b	27dc4 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xe0>
   27d6c:	mov	r0, #1
   27d70:	str	r0, [r4, #176]	; 0xb0
   27d74:	ldr	r0, [r4, #56]	; 0x38
   27d78:	ldr	r1, [r4, #192]	; 0xc0
   27d7c:	ldr	r2, [r0, #56]	; 0x38
   27d80:	add	r3, r1, r5
   27d84:	cmp	r3, r2
   27d88:	bls	27e28 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x144>
   27d8c:	sub	r1, r1, r2
   27d90:	add	r1, r1, r5
   27d94:	str	r1, [r0, #60]	; 0x3c
   27d98:	ldr	r1, [r6, #40]	; 0x28
   27d9c:	cmp	r1, #0
   27da0:	beq	27df4 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x110>
   27da4:	ldr	r1, [r6, #44]	; 0x2c
   27da8:	str	r0, [r1]
   27dac:	str	r0, [r6, #44]	; 0x2c
   27db0:	str	r0, [r4, #56]	; 0x38
   27db4:	b	27e00 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x11c>
   27db8:	str	r0, [r6, #40]	; 0x28
   27dbc:	str	r0, [r6, #44]	; 0x2c
   27dc0:	mov	r1, #0
   27dc4:	mov	r7, #0
   27dc8:	str	r7, [r0]
   27dcc:	str	r1, [r0, #4]
   27dd0:	ldr	r0, [r4, #8]
   27dd4:	ldr	r1, [r0, #16]
   27dd8:	bl	11ad0 <myhtml_token_attr_create@plt>
   27ddc:	cmp	r0, #0
   27de0:	str	r0, [r4, #56]	; 0x38
   27de4:	beq	27e64 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x180>
   27de8:	mov	r0, #65	; 0x41
   27dec:	add	r7, r5, #1
   27df0:	b	27e70 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x18c>
   27df4:	str	r0, [r6, #40]	; 0x28
   27df8:	str	r0, [r6, #44]	; 0x2c
   27dfc:	mov	r1, #0
   27e00:	mov	r7, #0
   27e04:	str	r7, [r0]
   27e08:	str	r1, [r0, #4]
   27e0c:	ldr	r0, [r4, #8]
   27e10:	ldr	r1, [r0, #16]
   27e14:	bl	11ad0 <myhtml_token_attr_create@plt>
   27e18:	cmp	r0, #0
   27e1c:	str	r0, [r4, #56]	; 0x38
   27e20:	beq	27e64 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x180>
   27e24:	ldr	r1, [r4, #192]	; 0xc0
   27e28:	ldr	r0, [r6, #32]
   27e2c:	add	r7, r5, #1
   27e30:	mov	r2, r6
   27e34:	sub	r0, r1, r0
   27e38:	mov	r1, r7
   27e3c:	add	r0, r0, r5
   27e40:	add	r0, r0, #1
   27e44:	str	r0, [r6, #36]	; 0x24
   27e48:	mov	r0, r4
   27e4c:	bl	11350 <myhtml_queue_add@plt>
   27e50:	cmp	r0, #0
   27e54:	beq	27e6c <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x188>
   27e58:	mov	r0, #69	; 0x45
   27e5c:	mov	r7, #0
   27e60:	b	27e70 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x18c>
   27e64:	mov	r0, #69	; 0x45
   27e68:	b	27e70 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x18c>
   27e6c:	mov	r0, #0
   27e70:	str	r0, [r4, #160]	; 0xa0
   27e74:	mov	r0, r7
   27e78:	pop	{r4, r5, r6, r7, fp, pc}

00027e7c <myhtml_tokenizer_state_doctype_system_identifier_double_quoted@@Base>:
   27e7c:	push	{fp, lr}
   27e80:	mov	fp, sp
   27e84:	sub	sp, sp, #8
   27e88:	mov	ip, #34	; 0x22
   27e8c:	str	ip, [sp, #4]
   27e90:	ldr	ip, [fp, #8]
   27e94:	str	ip, [sp]
   27e98:	bl	11c20 <myhtml_tokenizer_doctype_system_identifier_dsq@plt>
   27e9c:	mov	sp, fp
   27ea0:	pop	{fp, pc}

00027ea4 <myhtml_tokenizer_state_doctype_system_identifier_single_quoted@@Base>:
   27ea4:	push	{fp, lr}
   27ea8:	mov	fp, sp
   27eac:	sub	sp, sp, #8
   27eb0:	mov	ip, #39	; 0x27
   27eb4:	str	ip, [sp, #4]
   27eb8:	ldr	ip, [fp, #8]
   27ebc:	str	ip, [sp]
   27ec0:	bl	11c20 <myhtml_tokenizer_doctype_system_identifier_dsq@plt>
   27ec4:	mov	sp, fp
   27ec8:	pop	{fp, pc}

00027ecc <myhtml_tokenizer_state_after_doctype_system_identifier@@Base>:
   27ecc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   27ed0:	add	fp, sp, #24
   27ed4:	mov	r5, r3
   27ed8:	mov	r8, r0
   27edc:	ldr	r0, [fp, #8]
   27ee0:	mov	r3, r1
   27ee4:	ldrb	r4, [r2, r5]
   27ee8:	sub	r7, r4, #9
   27eec:	cmp	r7, #23
   27ef0:	bhi	27f48 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x7c>
   27ef4:	movw	r1, #27
   27ef8:	mov	r6, #1
   27efc:	movt	r1, #128	; 0x80
   27f00:	tst	r1, r6, lsl r7
   27f04:	beq	27f48 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x7c>
   27f08:	cmp	r5, r0
   27f0c:	bcs	27f48 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x7c>
   27f10:	add	r5, r5, #1
   27f14:	mvn	r6, #8
   27f18:	mov	r7, #1
   27f1c:	uxtab	r4, r6, r4
   27f20:	cmp	r4, #23
   27f24:	bhi	27f44 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x78>
   27f28:	tst	r1, r7, lsl r4
   27f2c:	beq	27f44 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x78>
   27f30:	cmp	r0, r5
   27f34:	beq	27f98 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xcc>
   27f38:	ldrb	r4, [r2, r5]
   27f3c:	add	r5, r5, #1
   27f40:	b	27f1c <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x50>
   27f44:	sub	r5, r5, #1
   27f48:	cmp	r5, r0
   27f4c:	bcs	27fb0 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xe4>
   27f50:	ldrb	r0, [r2, r5]
   27f54:	cmp	r0, #62	; 0x3e
   27f58:	bne	27fa0 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xd4>
   27f5c:	ldr	r0, [r8, #192]	; 0xc0
   27f60:	ldr	r1, [r3, #32]
   27f64:	add	r5, r5, #1
   27f68:	mov	r2, r3
   27f6c:	add	r0, r0, r5
   27f70:	sub	r0, r0, r1
   27f74:	mov	r1, r5
   27f78:	str	r0, [r3, #36]	; 0x24
   27f7c:	mov	r0, r8
   27f80:	bl	11350 <myhtml_queue_add@plt>
   27f84:	cmp	r0, #0
   27f88:	beq	27fa8 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xdc>
   27f8c:	mov	r0, #69	; 0x45
   27f90:	mov	r5, #0
   27f94:	b	27fac <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xe0>
   27f98:	mov	r5, r0
   27f9c:	b	27fb0 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xe4>
   27fa0:	mov	r0, #66	; 0x42
   27fa4:	b	27fac <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xe0>
   27fa8:	mov	r0, #0
   27fac:	str	r0, [r8, #160]	; 0xa0
   27fb0:	mov	r0, r5
   27fb4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00027fb8 <myhtml_tokenizer_state_bogus_doctype@@Base>:
   27fb8:	push	{r4, r5, fp, lr}
   27fbc:	add	fp, sp, #8
   27fc0:	mov	r5, r0
   27fc4:	ldr	r0, [fp, #8]
   27fc8:	mov	r4, r3
   27fcc:	mov	r3, r1
   27fd0:	cmp	r4, r0
   27fd4:	bcs	2801c <myhtml_tokenizer_state_bogus_doctype@@Base+0x64>
   27fd8:	ldrb	r1, [r2, r4]
   27fdc:	add	r4, r4, #1
   27fe0:	cmp	r1, #62	; 0x3e
   27fe4:	bne	27fd0 <myhtml_tokenizer_state_bogus_doctype@@Base+0x18>
   27fe8:	ldr	r0, [r3, #32]
   27fec:	ldr	r1, [r5, #192]	; 0xc0
   27ff0:	mov	r2, r3
   27ff4:	sub	r0, r1, r0
   27ff8:	mov	r1, r4
   27ffc:	add	r0, r0, r4
   28000:	str	r0, [r3, #36]	; 0x24
   28004:	mov	r0, r5
   28008:	bl	11350 <myhtml_queue_add@plt>
   2800c:	cmp	r0, #0
   28010:	movwne	r0, #69	; 0x45
   28014:	movne	r4, #0
   28018:	str	r0, [r5, #160]	; 0xa0
   2801c:	mov	r0, r4
   28020:	pop	{r4, r5, fp, pc}

00028024 <myhtml_tokenizer_end_state_data@@Base>:
   28024:	push	{r4, r5, fp, lr}
   28028:	add	fp, sp, #8
   2802c:	sub	sp, sp, #8
   28030:	mov	r5, r3
   28034:	ldr	r3, [r0, #192]	; 0xc0
   28038:	ldr	r4, [fp, #8]
   2803c:	add	r3, r3, r4
   28040:	ldr	r4, [r1, #32]
   28044:	sub	r4, r3, r4
   28048:	str	r4, [r1, #36]	; 0x24
   2804c:	mov	r4, #512	; 0x200
   28050:	str	r4, [sp]
   28054:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   28058:	mov	r0, r5
   2805c:	sub	sp, fp, #8
   28060:	pop	{r4, r5, fp, pc}

00028064 <myhtml_tokenizer_end_state_tag_open@@Base>:
   28064:	push	{r4, r5, r6, r7, fp, lr}
   28068:	add	fp, sp, #16
   2806c:	sub	sp, sp, #8
   28070:	mov	r6, r1
   28074:	mov	r5, r0
   28078:	ldr	r0, [r0, #192]	; 0xc0
   2807c:	ldr	r1, [fp, #8]
   28080:	mov	r7, r3
   28084:	ldr	r4, [r6, #32]
   28088:	add	r3, r0, r1
   2808c:	ldr	r1, [r6, #24]
   28090:	sub	r4, r3, r4
   28094:	str	r4, [r6, #36]	; 0x24
   28098:	cmp	r1, r3
   2809c:	bcs	28110 <myhtml_tokenizer_end_state_tag_open@@Base+0xac>
   280a0:	cmp	r1, #0
   280a4:	beq	280e8 <myhtml_tokenizer_end_state_tag_open@@Base+0x84>
   280a8:	add	r0, r0, r7
   280ac:	mov	r3, r7
   280b0:	sub	r0, r0, r1
   280b4:	mov	r1, r6
   280b8:	str	r0, [r6, #28]
   280bc:	mov	r0, r5
   280c0:	bl	11d58 <myhtml_check_tag_parser@plt>
   280c4:	mov	r0, r5
   280c8:	mov	r1, r7
   280cc:	mov	r2, r6
   280d0:	bl	11350 <myhtml_queue_add@plt>
   280d4:	cmp	r0, #0
   280d8:	movne	r0, #69	; 0x45
   280dc:	movne	r7, #0
   280e0:	strne	r0, [r5, #160]	; 0xa0
   280e4:	b	28110 <myhtml_tokenizer_end_state_tag_open@@Base+0xac>
   280e8:	ldr	r0, [r6, #48]	; 0x30
   280ec:	ldr	r1, [r6, #48]	; 0x30
   280f0:	and	r0, r0, #8
   280f4:	eor	r0, r1, r0
   280f8:	mov	r1, r6
   280fc:	str	r0, [r6, #48]	; 0x30
   28100:	mov	r0, #512	; 0x200
   28104:	str	r0, [sp]
   28108:	mov	r0, r5
   2810c:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   28110:	mov	r0, r7
   28114:	sub	sp, fp, #16
   28118:	pop	{r4, r5, r6, r7, fp, pc}

0002811c <myhtml_tokenizer_end_state_tag_name@@Base>:
   2811c:	push	{r4, r5, fp, lr}
   28120:	add	fp, sp, #8
   28124:	sub	sp, sp, #8
   28128:	mov	r5, r3
   2812c:	ldr	r3, [r0, #192]	; 0xc0
   28130:	ldr	r4, [fp, #8]
   28134:	add	r3, r3, r4
   28138:	ldr	r4, [r1, #32]
   2813c:	sub	r4, r3, r4
   28140:	str	r4, [r1, #36]	; 0x24
   28144:	mov	r4, #512	; 0x200
   28148:	str	r4, [sp]
   2814c:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   28150:	mov	r0, r5
   28154:	sub	sp, fp, #8
   28158:	pop	{r4, r5, fp, pc}

0002815c <myhtml_tokenizer_end_state_end_tag_open@@Base>:
   2815c:	push	{r4, r5, r6, r7, fp, lr}
   28160:	add	fp, sp, #16
   28164:	sub	sp, sp, #8
   28168:	mov	r7, r3
   2816c:	ldr	r4, [r0, #192]	; 0xc0
   28170:	ldr	r3, [fp, #8]
   28174:	ldr	r5, [r1, #24]
   28178:	ldr	r6, [r1, #32]
   2817c:	add	r3, r4, r3
   28180:	sub	r6, r3, r6
   28184:	cmp	r5, r3
   28188:	str	r6, [r1, #36]	; 0x24
   2818c:	bcs	281bc <myhtml_tokenizer_end_state_end_tag_open@@Base+0x60>
   28190:	add	r6, r4, r7
   28194:	sub	r6, r6, r5
   28198:	str	r6, [r1, #28]
   2819c:	ldr	r6, [r1, #48]	; 0x30
   281a0:	ldr	r5, [r1, #48]	; 0x30
   281a4:	and	r6, r6, #8
   281a8:	eor	r6, r5, r6
   281ac:	str	r6, [r1, #48]	; 0x30
   281b0:	mov	r6, #512	; 0x200
   281b4:	str	r6, [sp]
   281b8:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   281bc:	mov	r0, r7
   281c0:	sub	sp, fp, #16
   281c4:	pop	{r4, r5, r6, r7, fp, pc}

000281c8 <myhtml_tokenizer_end_state_self_closing_start_tag@@Base>:
   281c8:	push	{r4, r5, fp, lr}
   281cc:	add	fp, sp, #8
   281d0:	sub	sp, sp, #8
   281d4:	mov	r5, r3
   281d8:	ldr	r3, [r0, #192]	; 0xc0
   281dc:	ldr	r4, [fp, #8]
   281e0:	add	r3, r3, r4
   281e4:	ldr	r4, [r1, #32]
   281e8:	sub	r4, r3, r4
   281ec:	str	r4, [r1, #36]	; 0x24
   281f0:	mov	r4, #512	; 0x200
   281f4:	str	r4, [sp]
   281f8:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   281fc:	mov	r0, r5
   28200:	sub	sp, fp, #8
   28204:	pop	{r4, r5, fp, pc}

00028208 <myhtml_tokenizer_end_state_markup_declaration_open@@Base>:
   28208:	push	{r4, r5, r6, r7, fp, lr}
   2820c:	add	fp, sp, #16
   28210:	sub	sp, sp, #8
   28214:	mov	r5, r0
   28218:	ldr	r0, [r0, #192]	; 0xc0
   2821c:	ldr	r7, [fp, #8]
   28220:	mov	r4, r3
   28224:	ldr	r3, [r1, #24]
   28228:	mov	r6, r1
   2822c:	ldr	r1, [r1, #32]
   28230:	add	r0, r0, r7
   28234:	cmp	r3, #2
   28238:	sub	r0, r0, r1
   2823c:	str	r0, [r6, #36]	; 0x24
   28240:	bcc	28310 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x108>
   28244:	mov	r0, r5
   28248:	mov	r1, r6
   2824c:	str	r7, [sp]
   28250:	bl	11308 <myhtml_tokenizer_state_bogus_comment@plt>
   28254:	ldr	r1, [r5, #76]	; 0x4c
   28258:	str	r0, [r1, #4]
   2825c:	ldr	r2, [r5, #64]	; 0x40
   28260:	cmp	r2, r6
   28264:	beq	282b4 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0xac>
   28268:	ldr	r0, [r5, #192]	; 0xc0
   2826c:	ldr	r1, [r2, #24]
   28270:	add	r0, r0, r7
   28274:	subs	r0, r0, r1
   28278:	str	r0, [r2, #28]
   2827c:	beq	28310 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x108>
   28280:	ldr	r1, [r2, #48]	; 0x30
   28284:	ldr	r3, [r2, #48]	; 0x30
   28288:	and	r1, r1, #8
   2828c:	eor	r1, r3, r1
   28290:	str	r1, [r2, #48]	; 0x30
   28294:	mov	r1, #1
   28298:	str	r1, [r2]
   2829c:	str	r0, [r2, #28]
   282a0:	mov	r1, r4
   282a4:	ldr	r0, [r2, #48]	; 0x30
   282a8:	orr	r0, r0, #512	; 0x200
   282ac:	str	r0, [r2, #48]	; 0x30
   282b0:	b	282f8 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0xf0>
   282b4:	ldr	r0, [r6, #24]
   282b8:	ldr	r1, [r6, #48]	; 0x30
   282bc:	ldr	r2, [r6, #48]	; 0x30
   282c0:	and	r1, r1, #8
   282c4:	eor	r1, r2, r1
   282c8:	mov	r2, r6
   282cc:	str	r1, [r6, #48]	; 0x30
   282d0:	mov	r1, #2
   282d4:	str	r1, [r6]
   282d8:	ldr	r1, [r6, #48]	; 0x30
   282dc:	orr	r1, r1, #1024	; 0x400
   282e0:	str	r1, [r6, #48]	; 0x30
   282e4:	ldr	r1, [r5, #192]	; 0xc0
   282e8:	add	r1, r1, r7
   282ec:	sub	r0, r1, r0
   282f0:	mov	r1, r4
   282f4:	str	r0, [r6, #28]
   282f8:	mov	r0, r5
   282fc:	bl	11350 <myhtml_queue_add@plt>
   28300:	cmp	r0, #0
   28304:	movne	r0, #69	; 0x45
   28308:	movne	r4, #0
   2830c:	strne	r0, [r5, #160]	; 0xa0
   28310:	mov	r0, r4
   28314:	sub	sp, fp, #16
   28318:	pop	{r4, r5, r6, r7, fp, pc}

0002831c <myhtml_tokenizer_end_state_before_attribute_name@@Base>:
   2831c:	push	{r4, r5, fp, lr}
   28320:	add	fp, sp, #8
   28324:	mov	r2, r1
   28328:	mov	r5, r0
   2832c:	ldr	r0, [r0, #192]	; 0xc0
   28330:	ldr	r1, [fp, #8]
   28334:	mov	r4, r3
   28338:	add	r0, r0, r1
   2833c:	ldr	r1, [r2, #32]
   28340:	sub	r0, r0, r1
   28344:	mov	r1, r3
   28348:	str	r0, [r2, #36]	; 0x24
   2834c:	mov	r0, r5
   28350:	bl	11350 <myhtml_queue_add@plt>
   28354:	cmp	r0, #0
   28358:	movne	r0, #69	; 0x45
   2835c:	movne	r4, #0
   28360:	strne	r0, [r5, #160]	; 0xa0
   28364:	mov	r0, r4
   28368:	pop	{r4, r5, fp, pc}

0002836c <myhtml_tokenizer_end_state_attribute_name@@Base>:
   2836c:	push	{r4, r5, fp, lr}
   28370:	add	fp, sp, #8
   28374:	mov	r2, r1
   28378:	mov	r5, r0
   2837c:	ldr	r0, [r0, #192]	; 0xc0
   28380:	ldr	r1, [fp, #8]
   28384:	mov	r4, r3
   28388:	ldr	r3, [r2, #32]
   2838c:	add	r1, r0, r1
   28390:	add	r0, r0, r4
   28394:	sub	r1, r1, r3
   28398:	str	r1, [r2, #36]	; 0x24
   2839c:	ldr	r1, [r5, #56]	; 0x38
   283a0:	ldr	r3, [r1, #48]	; 0x30
   283a4:	sub	r0, r0, r3
   283a8:	str	r0, [r1, #52]	; 0x34
   283ac:	mov	r0, r5
   283b0:	mov	r1, r4
   283b4:	bl	11350 <myhtml_queue_add@plt>
   283b8:	cmp	r0, #0
   283bc:	movne	r0, #69	; 0x45
   283c0:	movne	r4, #0
   283c4:	strne	r0, [r5, #160]	; 0xa0
   283c8:	mov	r0, r4
   283cc:	pop	{r4, r5, fp, pc}

000283d0 <myhtml_tokenizer_end_state_after_attribute_name@@Base>:
   283d0:	push	{r4, r5, fp, lr}
   283d4:	add	fp, sp, #8
   283d8:	mov	r2, r1
   283dc:	mov	r5, r0
   283e0:	ldr	r0, [r0, #192]	; 0xc0
   283e4:	ldr	r1, [fp, #8]
   283e8:	mov	r4, r3
   283ec:	add	r0, r0, r1
   283f0:	ldr	r1, [r2, #32]
   283f4:	sub	r0, r0, r1
   283f8:	mov	r1, r3
   283fc:	str	r0, [r2, #36]	; 0x24
   28400:	mov	r0, r5
   28404:	bl	11350 <myhtml_queue_add@plt>
   28408:	cmp	r0, #0
   2840c:	movne	r0, #69	; 0x45
   28410:	movne	r4, #0
   28414:	strne	r0, [r5, #160]	; 0xa0
   28418:	mov	r0, r4
   2841c:	pop	{r4, r5, fp, pc}

00028420 <myhtml_tokenizer_end_state_before_attribute_value@@Base>:
   28420:	push	{r4, r5, fp, lr}
   28424:	add	fp, sp, #8
   28428:	mov	r2, r1
   2842c:	mov	r5, r0
   28430:	ldr	r0, [r0, #192]	; 0xc0
   28434:	ldr	r1, [fp, #8]
   28438:	mov	r4, r3
   2843c:	add	r0, r0, r1
   28440:	ldr	r1, [r2, #32]
   28444:	sub	r0, r0, r1
   28448:	mov	r1, r3
   2844c:	str	r0, [r2, #36]	; 0x24
   28450:	mov	r0, r5
   28454:	bl	11350 <myhtml_queue_add@plt>
   28458:	cmp	r0, #0
   2845c:	bne	28478 <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x58>
   28460:	ldr	r0, [r5, #8]
   28464:	ldr	r1, [r0, #16]
   28468:	bl	11ad0 <myhtml_token_attr_create@plt>
   2846c:	cmp	r0, #0
   28470:	str	r0, [r5, #56]	; 0x38
   28474:	bne	28484 <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x64>
   28478:	mov	r0, #69	; 0x45
   2847c:	mov	r4, #0
   28480:	str	r0, [r5, #160]	; 0xa0
   28484:	mov	r0, r4
   28488:	pop	{r4, r5, fp, pc}

0002848c <myhtml_tokenizer_end_state_attribute_value_double_quoted@@Base>:
   2848c:	ldr	r0, [r0, #192]	; 0xc0
   28490:	ldr	r2, [sp]
   28494:	add	r0, r0, r2
   28498:	ldr	r2, [r1, #32]
   2849c:	sub	r0, r0, r2
   284a0:	str	r0, [r1, #36]	; 0x24
   284a4:	mov	r0, r3
   284a8:	bx	lr

000284ac <myhtml_tokenizer_end_state_attribute_value_single_quoted@@Base>:
   284ac:	ldr	r0, [r0, #192]	; 0xc0
   284b0:	ldr	r2, [sp]
   284b4:	add	r0, r0, r2
   284b8:	ldr	r2, [r1, #32]
   284bc:	sub	r0, r0, r2
   284c0:	str	r0, [r1, #36]	; 0x24
   284c4:	mov	r0, r3
   284c8:	bx	lr

000284cc <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base>:
   284cc:	push	{r4, r5, fp, lr}
   284d0:	add	fp, sp, #8
   284d4:	mov	r2, r1
   284d8:	mov	r5, r0
   284dc:	ldr	r0, [r0, #192]	; 0xc0
   284e0:	ldr	r1, [fp, #8]
   284e4:	mov	r4, r3
   284e8:	ldr	r3, [r2, #32]
   284ec:	add	r1, r0, r1
   284f0:	add	r0, r0, r4
   284f4:	sub	r1, r1, r3
   284f8:	str	r1, [r2, #36]	; 0x24
   284fc:	ldr	r1, [r5, #56]	; 0x38
   28500:	ldr	r3, [r1, #56]	; 0x38
   28504:	sub	r0, r0, r3
   28508:	str	r0, [r1, #60]	; 0x3c
   2850c:	mov	r0, r5
   28510:	mov	r1, r4
   28514:	bl	11350 <myhtml_queue_add@plt>
   28518:	cmp	r0, #0
   2851c:	bne	28538 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x6c>
   28520:	ldr	r0, [r5, #8]
   28524:	ldr	r1, [r0, #16]
   28528:	bl	11ad0 <myhtml_token_attr_create@plt>
   2852c:	cmp	r0, #0
   28530:	str	r0, [r5, #56]	; 0x38
   28534:	bne	28544 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x78>
   28538:	mov	r0, #69	; 0x45
   2853c:	mov	r4, #0
   28540:	str	r0, [r5, #160]	; 0xa0
   28544:	mov	r0, r4
   28548:	pop	{r4, r5, fp, pc}

0002854c <myhtml_tokenizer_end_state_after_attribute_value_quoted@@Base>:
   2854c:	push	{r4, r5, fp, lr}
   28550:	add	fp, sp, #8
   28554:	mov	r2, r1
   28558:	mov	r5, r0
   2855c:	ldr	r0, [r0, #192]	; 0xc0
   28560:	ldr	r1, [fp, #8]
   28564:	mov	r4, r3
   28568:	ldr	ip, [r2, #24]
   2856c:	ldr	r3, [r2, #32]
   28570:	add	r1, r0, r1
   28574:	add	r0, r0, r4
   28578:	sub	r1, r1, r3
   2857c:	sub	r0, r0, ip
   28580:	str	r1, [r2, #36]	; 0x24
   28584:	str	r0, [r2, #28]
   28588:	mov	r0, r5
   2858c:	mov	r1, r4
   28590:	bl	11350 <myhtml_queue_add@plt>
   28594:	cmp	r0, #0
   28598:	movne	r0, #69	; 0x45
   2859c:	movne	r4, #0
   285a0:	strne	r0, [r5, #160]	; 0xa0
   285a4:	mov	r0, r4
   285a8:	pop	{r4, r5, fp, pc}

000285ac <myhtml_tokenizer_end_state_comment_start@@Base>:
   285ac:	push	{r4, r5, fp, lr}
   285b0:	add	fp, sp, #8
   285b4:	mov	r2, r1
   285b8:	mov	r5, r0
   285bc:	ldr	r0, [r0, #192]	; 0xc0
   285c0:	ldr	r1, [fp, #8]
   285c4:	mov	r4, r3
   285c8:	ldr	ip, [r2, #24]
   285cc:	ldr	r3, [r2, #32]
   285d0:	add	r1, r0, r1
   285d4:	add	r0, r0, r4
   285d8:	sub	r1, r1, r3
   285dc:	sub	r0, r0, ip
   285e0:	str	r1, [r2, #36]	; 0x24
   285e4:	str	r0, [r2, #28]
   285e8:	mov	r0, r5
   285ec:	mov	r1, r4
   285f0:	bl	11350 <myhtml_queue_add@plt>
   285f4:	cmp	r0, #0
   285f8:	movne	r0, #69	; 0x45
   285fc:	movne	r4, #0
   28600:	strne	r0, [r5, #160]	; 0xa0
   28604:	mov	r0, r4
   28608:	pop	{r4, r5, fp, pc}

0002860c <myhtml_tokenizer_end_state_comment_start_dash@@Base>:
   2860c:	push	{r4, r5, fp, lr}
   28610:	add	fp, sp, #8
   28614:	mov	r2, r1
   28618:	mov	r5, r0
   2861c:	ldr	r0, [r0, #192]	; 0xc0
   28620:	ldr	r1, [fp, #8]
   28624:	mov	r4, r3
   28628:	ldr	ip, [r2, #24]
   2862c:	ldr	r3, [r2, #32]
   28630:	add	r1, r0, r1
   28634:	add	r0, r0, r4
   28638:	sub	r1, r1, r3
   2863c:	sub	r0, r0, ip
   28640:	str	r1, [r2, #36]	; 0x24
   28644:	str	r0, [r2, #28]
   28648:	mov	r0, r5
   2864c:	mov	r1, r4
   28650:	bl	11350 <myhtml_queue_add@plt>
   28654:	cmp	r0, #0
   28658:	movne	r0, #69	; 0x45
   2865c:	movne	r4, #0
   28660:	strne	r0, [r5, #160]	; 0xa0
   28664:	mov	r0, r4
   28668:	pop	{r4, r5, fp, pc}

0002866c <myhtml_tokenizer_end_state_comment@@Base>:
   2866c:	push	{r4, r5, fp, lr}
   28670:	add	fp, sp, #8
   28674:	mov	r2, r1
   28678:	mov	r5, r0
   2867c:	ldr	r0, [r0, #192]	; 0xc0
   28680:	ldr	r1, [fp, #8]
   28684:	mov	r4, r3
   28688:	ldr	ip, [r2, #24]
   2868c:	ldr	r3, [r2, #32]
   28690:	add	r1, r0, r1
   28694:	add	r0, r0, r4
   28698:	sub	r1, r1, r3
   2869c:	sub	r0, r0, ip
   286a0:	str	r1, [r2, #36]	; 0x24
   286a4:	str	r0, [r2, #28]
   286a8:	mov	r0, r5
   286ac:	mov	r1, r4
   286b0:	bl	11350 <myhtml_queue_add@plt>
   286b4:	cmp	r0, #0
   286b8:	movne	r0, #69	; 0x45
   286bc:	movne	r4, #0
   286c0:	strne	r0, [r5, #160]	; 0xa0
   286c4:	mov	r0, r4
   286c8:	pop	{r4, r5, fp, pc}

000286cc <myhtml_tokenizer_end_state_comment_end@@Base>:
   286cc:	push	{r4, r5, r6, sl, fp, lr}
   286d0:	add	fp, sp, #16
   286d4:	mov	r2, r1
   286d8:	mov	r6, r0
   286dc:	ldr	r0, [r0, #192]	; 0xc0
   286e0:	ldr	r1, [fp, #8]
   286e4:	mov	r4, r3
   286e8:	ldr	r3, [r2, #24]
   286ec:	ldr	r5, [r2, #32]
   286f0:	add	r1, r0, r1
   286f4:	add	r0, r0, r4
   286f8:	sub	r0, r0, r3
   286fc:	sub	r1, r1, r5
   28700:	cmp	r0, #3
   28704:	str	r1, [r2, #36]	; 0x24
   28708:	str	r0, [r2, #28]
   2870c:	bcc	28734 <myhtml_tokenizer_end_state_comment_end@@Base+0x68>
   28710:	sub	r0, r0, #2
   28714:	mov	r1, r4
   28718:	str	r0, [r2, #28]
   2871c:	mov	r0, r6
   28720:	bl	11350 <myhtml_queue_add@plt>
   28724:	cmp	r0, #0
   28728:	movne	r0, #69	; 0x45
   2872c:	movne	r4, #0
   28730:	strne	r0, [r6, #160]	; 0xa0
   28734:	mov	r0, r4
   28738:	pop	{r4, r5, r6, sl, fp, pc}

0002873c <myhtml_tokenizer_end_state_comment_end_dash@@Base>:
   2873c:	push	{r4, r5, fp, lr}
   28740:	add	fp, sp, #8
   28744:	mov	r2, r1
   28748:	mov	r5, r0
   2874c:	ldr	r0, [r0, #192]	; 0xc0
   28750:	ldr	r1, [fp, #8]
   28754:	mov	r4, r3
   28758:	ldr	ip, [r2, #24]
   2875c:	ldr	r3, [r2, #32]
   28760:	add	r1, r0, r1
   28764:	add	r0, r0, r4
   28768:	sub	r1, r1, r3
   2876c:	sub	r0, r0, ip
   28770:	str	r1, [r2, #36]	; 0x24
   28774:	str	r0, [r2, #28]
   28778:	mov	r0, r5
   2877c:	mov	r1, r4
   28780:	bl	11350 <myhtml_queue_add@plt>
   28784:	cmp	r0, #0
   28788:	movne	r0, #69	; 0x45
   2878c:	movne	r4, #0
   28790:	strne	r0, [r5, #160]	; 0xa0
   28794:	mov	r0, r4
   28798:	pop	{r4, r5, fp, pc}

0002879c <myhtml_tokenizer_end_state_comment_end_bang@@Base>:
   2879c:	push	{r4, r5, fp, lr}
   287a0:	add	fp, sp, #8
   287a4:	mov	r2, r1
   287a8:	mov	r5, r0
   287ac:	ldr	r0, [r0, #192]	; 0xc0
   287b0:	ldr	r1, [fp, #8]
   287b4:	mov	r4, r3
   287b8:	ldr	ip, [r2, #24]
   287bc:	ldr	r3, [r2, #32]
   287c0:	add	r1, r0, r1
   287c4:	add	r0, r0, r4
   287c8:	sub	r1, r1, r3
   287cc:	sub	r0, r0, ip
   287d0:	str	r1, [r2, #36]	; 0x24
   287d4:	str	r0, [r2, #28]
   287d8:	mov	r0, r5
   287dc:	mov	r1, r4
   287e0:	bl	11350 <myhtml_queue_add@plt>
   287e4:	cmp	r0, #0
   287e8:	movne	r0, #69	; 0x45
   287ec:	movne	r4, #0
   287f0:	strne	r0, [r5, #160]	; 0xa0
   287f4:	mov	r0, r4
   287f8:	pop	{r4, r5, fp, pc}

000287fc <myhtml_tokenizer_end_state_bogus_comment@@Base>:
   287fc:	push	{r4, r5, fp, lr}
   28800:	add	fp, sp, #8
   28804:	mov	r2, r1
   28808:	mov	r5, r0
   2880c:	ldr	r0, [r0, #192]	; 0xc0
   28810:	ldr	r1, [fp, #8]
   28814:	mov	r4, r3
   28818:	ldr	ip, [r2, #24]
   2881c:	ldr	r3, [r2, #32]
   28820:	add	r1, r0, r1
   28824:	add	r0, r0, r4
   28828:	sub	r1, r1, r3
   2882c:	sub	r0, r0, ip
   28830:	str	r1, [r2, #36]	; 0x24
   28834:	str	r0, [r2, #28]
   28838:	mov	r0, r5
   2883c:	mov	r1, r4
   28840:	bl	11350 <myhtml_queue_add@plt>
   28844:	cmp	r0, #0
   28848:	movne	r0, #69	; 0x45
   2884c:	movne	r4, #0
   28850:	strne	r0, [r5, #160]	; 0xa0
   28854:	mov	r0, r4
   28858:	pop	{r4, r5, fp, pc}

0002885c <myhtml_tokenizer_end_state_cdata_section@@Base>:
   2885c:	push	{r4, r5, r6, sl, fp, lr}
   28860:	add	fp, sp, #16
   28864:	mov	r2, r1
   28868:	mov	r6, r0
   2886c:	ldr	r0, [r0, #192]	; 0xc0
   28870:	ldr	r1, [fp, #8]
   28874:	mov	r4, r3
   28878:	ldr	r3, [r2, #24]
   2887c:	ldr	r5, [r2, #32]
   28880:	add	r1, r0, r1
   28884:	add	r0, r0, r4
   28888:	sub	r1, r1, r5
   2888c:	subs	r0, r0, r3
   28890:	str	r1, [r2, #36]	; 0x24
   28894:	str	r0, [r2, #28]
   28898:	beq	288b8 <myhtml_tokenizer_end_state_cdata_section@@Base+0x5c>
   2889c:	mov	r0, r6
   288a0:	mov	r1, r4
   288a4:	bl	11350 <myhtml_queue_add@plt>
   288a8:	cmp	r0, #0
   288ac:	movne	r0, #69	; 0x45
   288b0:	movne	r4, #0
   288b4:	strne	r0, [r6, #160]	; 0xa0
   288b8:	mov	r0, r4
   288bc:	pop	{r4, r5, r6, sl, fp, pc}

000288c0 <myhtml_tokenizer_end_state_rcdata@@Base>:
   288c0:	push	{r4, r5, fp, lr}
   288c4:	add	fp, sp, #8
   288c8:	mov	r2, r1
   288cc:	mov	r5, r0
   288d0:	ldr	r0, [r0, #192]	; 0xc0
   288d4:	ldr	r1, [fp, #8]
   288d8:	mov	r4, r3
   288dc:	ldr	r3, [r2, #32]
   288e0:	add	r0, r0, r1
   288e4:	ldr	r1, [r2, #24]
   288e8:	sub	r3, r0, r3
   288ec:	str	r3, [r2, #36]	; 0x24
   288f0:	cmp	r0, r1
   288f4:	bls	28930 <myhtml_tokenizer_end_state_rcdata@@Base+0x70>
   288f8:	mov	r3, #1
   288fc:	sub	r0, r0, r1
   28900:	mov	r1, #0
   28904:	str	r3, [r2]
   28908:	str	r0, [r2, #28]
   2890c:	ldr	r0, [r2, #48]	; 0x30
   28910:	orr	r0, r0, #16
   28914:	str	r0, [r2, #48]	; 0x30
   28918:	mov	r0, r5
   2891c:	bl	11350 <myhtml_queue_add@plt>
   28920:	cmp	r0, #0
   28924:	movne	r0, #69	; 0x45
   28928:	movne	r4, #0
   2892c:	strne	r0, [r5, #160]	; 0xa0
   28930:	mov	r0, r4
   28934:	pop	{r4, r5, fp, pc}

00028938 <myhtml_tokenizer_end_state_rcdata_less_than_sign@@Base>:
   28938:	push	{r4, r5, r6, sl, fp, lr}
   2893c:	add	fp, sp, #16
   28940:	sub	sp, sp, #8
   28944:	mov	r6, r3
   28948:	ldr	r3, [r0, #192]	; 0xc0
   2894c:	ldr	r4, [fp, #8]
   28950:	ldr	r5, [r1, #32]
   28954:	add	r4, r3, r4
   28958:	add	r3, r3, r6
   2895c:	sub	r5, r4, r5
   28960:	str	r5, [r1, #36]	; 0x24
   28964:	mov	r5, #16
   28968:	str	r5, [sp]
   2896c:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   28970:	mov	r0, r6
   28974:	sub	sp, fp, #16
   28978:	pop	{r4, r5, r6, sl, fp, pc}

0002897c <myhtml_tokenizer_end_state_rcdata_end_tag_open@@Base>:
   2897c:	push	{r4, r5, r6, sl, fp, lr}
   28980:	add	fp, sp, #16
   28984:	sub	sp, sp, #8
   28988:	mov	r6, r3
   2898c:	ldr	r3, [r0, #192]	; 0xc0
   28990:	ldr	r4, [fp, #8]
   28994:	ldr	r5, [r1, #32]
   28998:	add	r4, r3, r4
   2899c:	add	r3, r3, r6
   289a0:	sub	r5, r4, r5
   289a4:	str	r5, [r1, #36]	; 0x24
   289a8:	mov	r5, #16
   289ac:	str	r5, [sp]
   289b0:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   289b4:	mov	r0, r6
   289b8:	sub	sp, fp, #16
   289bc:	pop	{r4, r5, r6, sl, fp, pc}

000289c0 <myhtml_tokenizer_end_state_rcdata_end_tag_name@@Base>:
   289c0:	push	{r4, r5, r6, sl, fp, lr}
   289c4:	add	fp, sp, #16
   289c8:	sub	sp, sp, #8
   289cc:	mov	r6, r3
   289d0:	ldr	r3, [r0, #192]	; 0xc0
   289d4:	ldr	r4, [fp, #8]
   289d8:	ldr	r5, [r1, #32]
   289dc:	add	r4, r3, r4
   289e0:	add	r3, r3, r6
   289e4:	sub	r5, r4, r5
   289e8:	str	r5, [r1, #36]	; 0x24
   289ec:	mov	r5, #16
   289f0:	str	r5, [sp]
   289f4:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   289f8:	mov	r0, r6
   289fc:	sub	sp, fp, #16
   28a00:	pop	{r4, r5, r6, sl, fp, pc}

00028a04 <myhtml_tokenizer_end_state_rawtext@@Base>:
   28a04:	push	{r4, r5, r6, sl, fp, lr}
   28a08:	add	fp, sp, #16
   28a0c:	sub	sp, sp, #8
   28a10:	mov	r6, r3
   28a14:	ldr	r3, [r0, #192]	; 0xc0
   28a18:	ldr	r4, [fp, #8]
   28a1c:	ldr	r5, [r1, #32]
   28a20:	add	r4, r3, r4
   28a24:	add	r3, r3, r6
   28a28:	sub	r5, r4, r5
   28a2c:	str	r5, [r1, #36]	; 0x24
   28a30:	mov	r5, #32
   28a34:	str	r5, [sp]
   28a38:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   28a3c:	mov	r0, r6
   28a40:	sub	sp, fp, #16
   28a44:	pop	{r4, r5, r6, sl, fp, pc}

00028a48 <myhtml_tokenizer_end_state_rawtext_less_than_sign@@Base>:
   28a48:	push	{r4, r5, r6, sl, fp, lr}
   28a4c:	add	fp, sp, #16
   28a50:	sub	sp, sp, #8
   28a54:	mov	r6, r3
   28a58:	ldr	r3, [r0, #192]	; 0xc0
   28a5c:	ldr	r4, [fp, #8]
   28a60:	ldr	r5, [r1, #32]
   28a64:	add	r4, r3, r4
   28a68:	add	r3, r3, r6
   28a6c:	sub	r5, r4, r5
   28a70:	str	r5, [r1, #36]	; 0x24
   28a74:	mov	r5, #32
   28a78:	str	r5, [sp]
   28a7c:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   28a80:	mov	r0, r6
   28a84:	sub	sp, fp, #16
   28a88:	pop	{r4, r5, r6, sl, fp, pc}

00028a8c <myhtml_tokenizer_end_state_rawtext_end_tag_open@@Base>:
   28a8c:	push	{r4, r5, r6, sl, fp, lr}
   28a90:	add	fp, sp, #16
   28a94:	sub	sp, sp, #8
   28a98:	mov	r6, r3
   28a9c:	ldr	r3, [r0, #192]	; 0xc0
   28aa0:	ldr	r4, [fp, #8]
   28aa4:	ldr	r5, [r1, #32]
   28aa8:	add	r4, r3, r4
   28aac:	add	r3, r3, r6
   28ab0:	sub	r5, r4, r5
   28ab4:	str	r5, [r1, #36]	; 0x24
   28ab8:	mov	r5, #32
   28abc:	str	r5, [sp]
   28ac0:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   28ac4:	mov	r0, r6
   28ac8:	sub	sp, fp, #16
   28acc:	pop	{r4, r5, r6, sl, fp, pc}

00028ad0 <myhtml_tokenizer_end_state_rawtext_end_tag_name@@Base>:
   28ad0:	push	{r4, r5, r6, sl, fp, lr}
   28ad4:	add	fp, sp, #16
   28ad8:	sub	sp, sp, #8
   28adc:	mov	r6, r3
   28ae0:	ldr	r3, [r0, #192]	; 0xc0
   28ae4:	ldr	r4, [fp, #8]
   28ae8:	ldr	r5, [r1, #32]
   28aec:	add	r4, r3, r4
   28af0:	add	r3, r3, r6
   28af4:	sub	r5, r4, r5
   28af8:	str	r5, [r1, #36]	; 0x24
   28afc:	mov	r5, #32
   28b00:	str	r5, [sp]
   28b04:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   28b08:	mov	r0, r6
   28b0c:	sub	sp, fp, #16
   28b10:	pop	{r4, r5, r6, sl, fp, pc}

00028b14 <myhtml_tokenizer_end_state_plaintext@@Base>:
   28b14:	ldr	r0, [r0, #192]	; 0xc0
   28b18:	ldr	r2, [sp]
   28b1c:	add	r0, r0, r2
   28b20:	ldr	r2, [r1, #32]
   28b24:	sub	r0, r0, r2
   28b28:	str	r0, [r1, #36]	; 0x24
   28b2c:	mov	r0, r3
   28b30:	bx	lr

00028b34 <myhtml_tokenizer_end_state_doctype@@Base>:
   28b34:	push	{r4, r5, r6, sl, fp, lr}
   28b38:	add	fp, sp, #16
   28b3c:	sub	sp, sp, #8
   28b40:	mov	r6, r3
   28b44:	ldr	r3, [r0, #192]	; 0xc0
   28b48:	ldr	r4, [fp, #8]
   28b4c:	ldr	r5, [r1, #32]
   28b50:	add	r4, r3, r4
   28b54:	add	r3, r3, r6
   28b58:	sub	r5, r4, r5
   28b5c:	str	r5, [r1, #36]	; 0x24
   28b60:	mov	r5, #32
   28b64:	str	r5, [sp]
   28b68:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   28b6c:	mov	r0, r6
   28b70:	sub	sp, fp, #16
   28b74:	pop	{r4, r5, r6, sl, fp, pc}

00028b78 <myhtml_tokenizer_end_state_before_doctype_name@@Base>:
   28b78:	push	{r4, r5, fp, lr}
   28b7c:	add	fp, sp, #8
   28b80:	mov	r2, r1
   28b84:	mov	r5, r0
   28b88:	ldr	r0, [r0, #192]	; 0xc0
   28b8c:	ldr	r1, [fp, #8]
   28b90:	mov	r4, r3
   28b94:	add	r0, r0, r1
   28b98:	ldr	r1, [r2, #32]
   28b9c:	sub	r0, r0, r1
   28ba0:	mov	r1, r3
   28ba4:	str	r0, [r2, #36]	; 0x24
   28ba8:	mov	r0, #1
   28bac:	str	r0, [r5, #176]	; 0xb0
   28bb0:	mov	r0, r5
   28bb4:	bl	11350 <myhtml_queue_add@plt>
   28bb8:	cmp	r0, #0
   28bbc:	movne	r0, #69	; 0x45
   28bc0:	movne	r4, #0
   28bc4:	strne	r0, [r5, #160]	; 0xa0
   28bc8:	mov	r0, r4
   28bcc:	pop	{r4, r5, fp, pc}

00028bd0 <myhtml_tokenizer_end_state_doctype_name@@Base>:
   28bd0:	push	{r4, r5, fp, lr}
   28bd4:	add	fp, sp, #8
   28bd8:	mov	r2, r1
   28bdc:	mov	r5, r0
   28be0:	ldr	r0, [r0, #192]	; 0xc0
   28be4:	ldr	r1, [fp, #8]
   28be8:	mov	r4, r3
   28bec:	ldr	r3, [r2, #32]
   28bf0:	add	r1, r0, r1
   28bf4:	add	r0, r0, r4
   28bf8:	sub	r1, r1, r3
   28bfc:	str	r1, [r2, #36]	; 0x24
   28c00:	ldr	r1, [r5, #56]	; 0x38
   28c04:	ldr	r3, [r1, #48]	; 0x30
   28c08:	sub	r0, r0, r3
   28c0c:	str	r0, [r1, #52]	; 0x34
   28c10:	mov	r0, r5
   28c14:	mov	r1, r4
   28c18:	bl	11350 <myhtml_queue_add@plt>
   28c1c:	cmp	r0, #0
   28c20:	movne	r0, #69	; 0x45
   28c24:	movne	r4, #0
   28c28:	strne	r0, [r5, #160]	; 0xa0
   28c2c:	mov	r0, r4
   28c30:	pop	{r4, r5, fp, pc}

00028c34 <myhtml_tokenizer_end_state_after_doctype_name@@Base>:
   28c34:	push	{r4, r5, fp, lr}
   28c38:	add	fp, sp, #8
   28c3c:	mov	r2, r1
   28c40:	mov	r5, r0
   28c44:	ldr	r0, [r0, #192]	; 0xc0
   28c48:	ldr	r1, [fp, #8]
   28c4c:	mov	r4, r3
   28c50:	add	r0, r0, r1
   28c54:	ldr	r1, [r2, #32]
   28c58:	sub	r0, r0, r1
   28c5c:	mov	r1, r3
   28c60:	str	r0, [r2, #36]	; 0x24
   28c64:	mov	r0, r5
   28c68:	bl	11350 <myhtml_queue_add@plt>
   28c6c:	cmp	r0, #0
   28c70:	movne	r0, #69	; 0x45
   28c74:	movne	r4, #0
   28c78:	strne	r0, [r5, #160]	; 0xa0
   28c7c:	mov	r0, r4
   28c80:	pop	{r4, r5, fp, pc}

00028c84 <myhtml_tokenizer_end_state_custom_after_doctype_name_a_z@@Base>:
   28c84:	push	{r4, r5, fp, lr}
   28c88:	add	fp, sp, #8
   28c8c:	mov	r2, r1
   28c90:	mov	r5, r0
   28c94:	ldr	r0, [r0, #192]	; 0xc0
   28c98:	ldr	r1, [fp, #8]
   28c9c:	mov	r4, r3
   28ca0:	add	r0, r0, r1
   28ca4:	ldr	r1, [r2, #32]
   28ca8:	sub	r0, r0, r1
   28cac:	mov	r1, r3
   28cb0:	str	r0, [r2, #36]	; 0x24
   28cb4:	mov	r0, r5
   28cb8:	bl	11350 <myhtml_queue_add@plt>
   28cbc:	cmp	r0, #0
   28cc0:	movne	r0, #69	; 0x45
   28cc4:	movne	r4, #0
   28cc8:	strne	r0, [r5, #160]	; 0xa0
   28ccc:	mov	r0, r4
   28cd0:	pop	{r4, r5, fp, pc}

00028cd4 <myhtml_tokenizer_end_state_before_doctype_public_identifier@@Base>:
   28cd4:	push	{r4, r5, fp, lr}
   28cd8:	add	fp, sp, #8
   28cdc:	mov	r2, r1
   28ce0:	mov	r5, r0
   28ce4:	ldr	r0, [r0, #192]	; 0xc0
   28ce8:	ldr	r1, [fp, #8]
   28cec:	mov	r4, r3
   28cf0:	add	r0, r0, r1
   28cf4:	ldr	r1, [r2, #32]
   28cf8:	sub	r0, r0, r1
   28cfc:	mov	r1, r3
   28d00:	str	r0, [r2, #36]	; 0x24
   28d04:	mov	r0, #1
   28d08:	str	r0, [r5, #176]	; 0xb0
   28d0c:	mov	r0, r5
   28d10:	bl	11350 <myhtml_queue_add@plt>
   28d14:	cmp	r0, #0
   28d18:	movne	r0, #69	; 0x45
   28d1c:	movne	r4, #0
   28d20:	strne	r0, [r5, #160]	; 0xa0
   28d24:	mov	r0, r4
   28d28:	pop	{r4, r5, fp, pc}

00028d2c <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@@Base>:
   28d2c:	push	{r4, r5, fp, lr}
   28d30:	add	fp, sp, #8
   28d34:	mov	r5, r0
   28d38:	ldr	ip, [fp, #8]
   28d3c:	ldr	r0, [r0, #192]	; 0xc0
   28d40:	mov	r2, r1
   28d44:	ldr	r1, [r1, #32]
   28d48:	mov	r4, r3
   28d4c:	add	r3, r0, ip
   28d50:	cmp	ip, #0
   28d54:	sub	r1, r3, r1
   28d58:	str	r1, [r2, #36]	; 0x24
   28d5c:	mov	r1, #1
   28d60:	str	r1, [r5, #176]	; 0xb0
   28d64:	beq	28d80 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@@Base+0x54>
   28d68:	ldr	r1, [r5, #56]	; 0x38
   28d6c:	ldr	r3, [r1, #48]	; 0x30
   28d70:	cmp	r3, #0
   28d74:	addne	r0, r0, r4
   28d78:	subne	r0, r0, r3
   28d7c:	strne	r0, [r1, #52]	; 0x34
   28d80:	mov	r0, r5
   28d84:	mov	r1, r4
   28d88:	bl	11350 <myhtml_queue_add@plt>
   28d8c:	cmp	r0, #0
   28d90:	movne	r0, #69	; 0x45
   28d94:	movne	r4, #0
   28d98:	strne	r0, [r5, #160]	; 0xa0
   28d9c:	mov	r0, r4
   28da0:	pop	{r4, r5, fp, pc}

00028da4 <myhtml_tokenizer_end_state_doctype_public_identifier_single_quoted@@Base>:
   28da4:	push	{r4, r5, fp, lr}
   28da8:	add	fp, sp, #8
   28dac:	sub	sp, sp, #8
   28db0:	ldr	r2, [r0, #192]	; 0xc0
   28db4:	ldr	ip, [fp, #8]
   28db8:	ldr	r4, [r1, #32]
   28dbc:	mov	r5, r3
   28dc0:	add	r3, r2, ip
   28dc4:	sub	r3, r3, r4
   28dc8:	str	r3, [r1, #36]	; 0x24
   28dcc:	add	r3, r2, r5
   28dd0:	str	ip, [sp]
   28dd4:	bl	11d40 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@plt>
   28dd8:	mov	r0, r5
   28ddc:	sub	sp, fp, #8
   28de0:	pop	{r4, r5, fp, pc}

00028de4 <myhtml_tokenizer_end_state_after_doctype_public_identifier@@Base>:
   28de4:	push	{r4, r5, fp, lr}
   28de8:	add	fp, sp, #8
   28dec:	mov	r2, r1
   28df0:	mov	r5, r0
   28df4:	ldr	r0, [r0, #192]	; 0xc0
   28df8:	ldr	r1, [fp, #8]
   28dfc:	mov	r4, r3
   28e00:	add	r0, r0, r1
   28e04:	ldr	r1, [r2, #32]
   28e08:	sub	r0, r0, r1
   28e0c:	mov	r1, r3
   28e10:	str	r0, [r2, #36]	; 0x24
   28e14:	mov	r0, r5
   28e18:	bl	11350 <myhtml_queue_add@plt>
   28e1c:	cmp	r0, #0
   28e20:	movne	r0, #69	; 0x45
   28e24:	movne	r4, #0
   28e28:	strne	r0, [r5, #160]	; 0xa0
   28e2c:	mov	r0, r4
   28e30:	pop	{r4, r5, fp, pc}

00028e34 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@@Base>:
   28e34:	push	{r4, r5, fp, lr}
   28e38:	add	fp, sp, #8
   28e3c:	mov	r5, r0
   28e40:	ldr	ip, [fp, #8]
   28e44:	ldr	r0, [r0, #192]	; 0xc0
   28e48:	mov	r2, r1
   28e4c:	ldr	r1, [r1, #32]
   28e50:	mov	r4, r3
   28e54:	add	r3, r0, ip
   28e58:	cmp	ip, #0
   28e5c:	sub	r1, r3, r1
   28e60:	str	r1, [r2, #36]	; 0x24
   28e64:	mov	r1, #1
   28e68:	str	r1, [r5, #176]	; 0xb0
   28e6c:	beq	28e88 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@@Base+0x54>
   28e70:	ldr	r1, [r5, #56]	; 0x38
   28e74:	ldr	r3, [r1, #48]	; 0x30
   28e78:	cmp	r3, #0
   28e7c:	addne	r0, r0, r4
   28e80:	subne	r0, r0, r3
   28e84:	strne	r0, [r1, #52]	; 0x34
   28e88:	mov	r0, r5
   28e8c:	mov	r1, r4
   28e90:	bl	11350 <myhtml_queue_add@plt>
   28e94:	cmp	r0, #0
   28e98:	movne	r0, #69	; 0x45
   28e9c:	movne	r4, #0
   28ea0:	strne	r0, [r5, #160]	; 0xa0
   28ea4:	mov	r0, r4
   28ea8:	pop	{r4, r5, fp, pc}

00028eac <myhtml_tokenizer_end_state_doctype_system_identifier_single_quoted@@Base>:
   28eac:	push	{r4, r5, fp, lr}
   28eb0:	add	fp, sp, #8
   28eb4:	sub	sp, sp, #8
   28eb8:	ldr	r2, [r0, #192]	; 0xc0
   28ebc:	ldr	ip, [fp, #8]
   28ec0:	ldr	r4, [r1, #32]
   28ec4:	mov	r5, r3
   28ec8:	add	r3, r2, ip
   28ecc:	sub	r3, r3, r4
   28ed0:	str	r3, [r1, #36]	; 0x24
   28ed4:	add	r3, r2, r5
   28ed8:	str	ip, [sp]
   28edc:	bl	11ef0 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@plt>
   28ee0:	mov	r0, r5
   28ee4:	sub	sp, fp, #8
   28ee8:	pop	{r4, r5, fp, pc}

00028eec <myhtml_tokenizer_end_state_after_doctype_system_identifier@@Base>:
   28eec:	push	{r4, r5, fp, lr}
   28ef0:	add	fp, sp, #8
   28ef4:	mov	r2, r1
   28ef8:	mov	r5, r0
   28efc:	ldr	r0, [r0, #192]	; 0xc0
   28f00:	ldr	r1, [fp, #8]
   28f04:	mov	r4, r3
   28f08:	add	r0, r0, r1
   28f0c:	ldr	r1, [r2, #32]
   28f10:	sub	r0, r0, r1
   28f14:	mov	r1, r3
   28f18:	str	r0, [r2, #36]	; 0x24
   28f1c:	mov	r0, r5
   28f20:	bl	11350 <myhtml_queue_add@plt>
   28f24:	cmp	r0, #0
   28f28:	movne	r0, #69	; 0x45
   28f2c:	movne	r4, #0
   28f30:	strne	r0, [r5, #160]	; 0xa0
   28f34:	mov	r0, r4
   28f38:	pop	{r4, r5, fp, pc}

00028f3c <myhtml_tokenizer_end_state_bogus_doctype@@Base>:
   28f3c:	push	{r4, r5, fp, lr}
   28f40:	add	fp, sp, #8
   28f44:	mov	r2, r1
   28f48:	mov	r5, r0
   28f4c:	ldr	r0, [r0, #192]	; 0xc0
   28f50:	ldr	r1, [fp, #8]
   28f54:	mov	r4, r3
   28f58:	add	r0, r0, r1
   28f5c:	ldr	r1, [r2, #32]
   28f60:	sub	r0, r0, r1
   28f64:	mov	r1, r3
   28f68:	str	r0, [r2, #36]	; 0x24
   28f6c:	mov	r0, r5
   28f70:	bl	11350 <myhtml_queue_add@plt>
   28f74:	cmp	r0, #0
   28f78:	movne	r0, #69	; 0x45
   28f7c:	movne	r4, #0
   28f80:	strne	r0, [r5, #160]	; 0xa0
   28f84:	mov	r0, r4
   28f88:	pop	{r4, r5, fp, pc}

00028f8c <myhtml_tokenizer_end_state_script_data@@Base>:
   28f8c:	push	{r4, r5, r6, sl, fp, lr}
   28f90:	add	fp, sp, #16
   28f94:	sub	sp, sp, #8
   28f98:	mov	r6, r3
   28f9c:	ldr	r3, [r0, #192]	; 0xc0
   28fa0:	ldr	r4, [fp, #8]
   28fa4:	ldr	r5, [r1, #32]
   28fa8:	add	r4, r3, r4
   28fac:	add	r3, r3, r6
   28fb0:	sub	r5, r4, r5
   28fb4:	str	r5, [r1, #36]	; 0x24
   28fb8:	mov	r5, #64	; 0x40
   28fbc:	str	r5, [sp]
   28fc0:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   28fc4:	mov	r0, r6
   28fc8:	sub	sp, fp, #16
   28fcc:	pop	{r4, r5, r6, sl, fp, pc}

00028fd0 <myhtml_tokenizer_end_state_script_data_less_than_sign@@Base>:
   28fd0:	push	{r4, r5, r6, sl, fp, lr}
   28fd4:	add	fp, sp, #16
   28fd8:	sub	sp, sp, #8
   28fdc:	mov	r6, r3
   28fe0:	ldr	r3, [r0, #192]	; 0xc0
   28fe4:	ldr	r4, [fp, #8]
   28fe8:	ldr	r5, [r1, #32]
   28fec:	add	r4, r3, r4
   28ff0:	add	r3, r3, r6
   28ff4:	sub	r5, r4, r5
   28ff8:	str	r5, [r1, #36]	; 0x24
   28ffc:	mov	r5, #64	; 0x40
   29000:	str	r5, [sp]
   29004:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29008:	mov	r0, r6
   2900c:	sub	sp, fp, #16
   29010:	pop	{r4, r5, r6, sl, fp, pc}

00029014 <myhtml_tokenizer_end_state_script_data_end_tag_open@@Base>:
   29014:	push	{r4, r5, r6, sl, fp, lr}
   29018:	add	fp, sp, #16
   2901c:	sub	sp, sp, #8
   29020:	mov	r6, r3
   29024:	ldr	r3, [r0, #192]	; 0xc0
   29028:	ldr	r4, [fp, #8]
   2902c:	ldr	r5, [r1, #32]
   29030:	add	r4, r3, r4
   29034:	add	r3, r3, r6
   29038:	sub	r5, r4, r5
   2903c:	str	r5, [r1, #36]	; 0x24
   29040:	mov	r5, #64	; 0x40
   29044:	str	r5, [sp]
   29048:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2904c:	mov	r0, r6
   29050:	sub	sp, fp, #16
   29054:	pop	{r4, r5, r6, sl, fp, pc}

00029058 <myhtml_tokenizer_end_state_script_data_end_tag_name@@Base>:
   29058:	push	{r4, r5, r6, sl, fp, lr}
   2905c:	add	fp, sp, #16
   29060:	sub	sp, sp, #8
   29064:	mov	r6, r3
   29068:	ldr	r3, [r0, #192]	; 0xc0
   2906c:	ldr	r4, [fp, #8]
   29070:	ldr	r5, [r1, #32]
   29074:	add	r4, r3, r4
   29078:	add	r3, r3, r6
   2907c:	sub	r5, r4, r5
   29080:	str	r5, [r1, #36]	; 0x24
   29084:	mov	r5, #64	; 0x40
   29088:	str	r5, [sp]
   2908c:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29090:	mov	r0, r6
   29094:	sub	sp, fp, #16
   29098:	pop	{r4, r5, r6, sl, fp, pc}

0002909c <myhtml_tokenizer_end_state_script_data_escape_start@@Base>:
   2909c:	push	{r4, r5, r6, sl, fp, lr}
   290a0:	add	fp, sp, #16
   290a4:	sub	sp, sp, #8
   290a8:	mov	r6, r3
   290ac:	ldr	r3, [r0, #192]	; 0xc0
   290b0:	ldr	r4, [fp, #8]
   290b4:	ldr	r5, [r1, #32]
   290b8:	add	r4, r3, r4
   290bc:	add	r3, r3, r6
   290c0:	sub	r5, r4, r5
   290c4:	str	r5, [r1, #36]	; 0x24
   290c8:	mov	r5, #64	; 0x40
   290cc:	str	r5, [sp]
   290d0:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   290d4:	mov	r0, r6
   290d8:	sub	sp, fp, #16
   290dc:	pop	{r4, r5, r6, sl, fp, pc}

000290e0 <myhtml_tokenizer_end_state_script_data_escape_start_dash@@Base>:
   290e0:	push	{r4, r5, r6, sl, fp, lr}
   290e4:	add	fp, sp, #16
   290e8:	sub	sp, sp, #8
   290ec:	mov	r6, r3
   290f0:	ldr	r3, [r0, #192]	; 0xc0
   290f4:	ldr	r4, [fp, #8]
   290f8:	ldr	r5, [r1, #32]
   290fc:	add	r4, r3, r4
   29100:	add	r3, r3, r6
   29104:	sub	r5, r4, r5
   29108:	str	r5, [r1, #36]	; 0x24
   2910c:	mov	r5, #64	; 0x40
   29110:	str	r5, [sp]
   29114:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29118:	mov	r0, r6
   2911c:	sub	sp, fp, #16
   29120:	pop	{r4, r5, r6, sl, fp, pc}

00029124 <myhtml_tokenizer_end_state_script_data_escaped@@Base>:
   29124:	push	{r4, r5, r6, sl, fp, lr}
   29128:	add	fp, sp, #16
   2912c:	sub	sp, sp, #8
   29130:	mov	r6, r3
   29134:	ldr	r3, [r0, #192]	; 0xc0
   29138:	ldr	r4, [fp, #8]
   2913c:	ldr	r5, [r1, #32]
   29140:	add	r4, r3, r4
   29144:	add	r3, r3, r6
   29148:	sub	r5, r4, r5
   2914c:	str	r5, [r1, #36]	; 0x24
   29150:	mov	r5, #64	; 0x40
   29154:	str	r5, [sp]
   29158:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2915c:	mov	r0, r6
   29160:	sub	sp, fp, #16
   29164:	pop	{r4, r5, r6, sl, fp, pc}

00029168 <myhtml_tokenizer_end_state_script_data_escaped_dash@@Base>:
   29168:	push	{r4, r5, r6, sl, fp, lr}
   2916c:	add	fp, sp, #16
   29170:	sub	sp, sp, #8
   29174:	mov	r6, r3
   29178:	ldr	r3, [r0, #192]	; 0xc0
   2917c:	ldr	r4, [fp, #8]
   29180:	ldr	r5, [r1, #32]
   29184:	add	r4, r3, r4
   29188:	add	r3, r3, r6
   2918c:	sub	r5, r4, r5
   29190:	str	r5, [r1, #36]	; 0x24
   29194:	mov	r5, #64	; 0x40
   29198:	str	r5, [sp]
   2919c:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   291a0:	mov	r0, r6
   291a4:	sub	sp, fp, #16
   291a8:	pop	{r4, r5, r6, sl, fp, pc}

000291ac <myhtml_tokenizer_end_state_script_data_escaped_dash_dash@@Base>:
   291ac:	push	{r4, r5, r6, sl, fp, lr}
   291b0:	add	fp, sp, #16
   291b4:	sub	sp, sp, #8
   291b8:	mov	r6, r3
   291bc:	ldr	r3, [r0, #192]	; 0xc0
   291c0:	ldr	r4, [fp, #8]
   291c4:	ldr	r5, [r1, #32]
   291c8:	add	r4, r3, r4
   291cc:	add	r3, r3, r6
   291d0:	sub	r5, r4, r5
   291d4:	str	r5, [r1, #36]	; 0x24
   291d8:	mov	r5, #64	; 0x40
   291dc:	str	r5, [sp]
   291e0:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   291e4:	mov	r0, r6
   291e8:	sub	sp, fp, #16
   291ec:	pop	{r4, r5, r6, sl, fp, pc}

000291f0 <myhtml_tokenizer_end_state_script_data_escaped_less_than_sign@@Base>:
   291f0:	push	{r4, r5, r6, sl, fp, lr}
   291f4:	add	fp, sp, #16
   291f8:	sub	sp, sp, #8
   291fc:	mov	r6, r3
   29200:	ldr	r3, [r0, #192]	; 0xc0
   29204:	ldr	r4, [fp, #8]
   29208:	ldr	r5, [r1, #32]
   2920c:	add	r4, r3, r4
   29210:	add	r3, r3, r6
   29214:	sub	r5, r4, r5
   29218:	str	r5, [r1, #36]	; 0x24
   2921c:	mov	r5, #64	; 0x40
   29220:	str	r5, [sp]
   29224:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29228:	mov	r0, r6
   2922c:	sub	sp, fp, #16
   29230:	pop	{r4, r5, r6, sl, fp, pc}

00029234 <myhtml_tokenizer_end_state_script_data_escaped_end_tag_open@@Base>:
   29234:	push	{r4, r5, r6, sl, fp, lr}
   29238:	add	fp, sp, #16
   2923c:	sub	sp, sp, #8
   29240:	mov	r6, r3
   29244:	ldr	r3, [r0, #192]	; 0xc0
   29248:	ldr	r4, [fp, #8]
   2924c:	ldr	r5, [r1, #32]
   29250:	add	r4, r3, r4
   29254:	add	r3, r3, r6
   29258:	sub	r5, r4, r5
   2925c:	str	r5, [r1, #36]	; 0x24
   29260:	mov	r5, #64	; 0x40
   29264:	str	r5, [sp]
   29268:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2926c:	mov	r0, r6
   29270:	sub	sp, fp, #16
   29274:	pop	{r4, r5, r6, sl, fp, pc}

00029278 <myhtml_tokenizer_end_state_script_data_escaped_end_tag_name@@Base>:
   29278:	push	{r4, r5, r6, sl, fp, lr}
   2927c:	add	fp, sp, #16
   29280:	sub	sp, sp, #8
   29284:	mov	r6, r3
   29288:	ldr	r3, [r0, #192]	; 0xc0
   2928c:	ldr	r4, [fp, #8]
   29290:	ldr	r5, [r1, #32]
   29294:	add	r4, r3, r4
   29298:	add	r3, r3, r6
   2929c:	sub	r5, r4, r5
   292a0:	str	r5, [r1, #36]	; 0x24
   292a4:	mov	r5, #64	; 0x40
   292a8:	str	r5, [sp]
   292ac:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   292b0:	mov	r0, r6
   292b4:	sub	sp, fp, #16
   292b8:	pop	{r4, r5, r6, sl, fp, pc}

000292bc <myhtml_tokenizer_end_state_script_data_double_escape_start@@Base>:
   292bc:	push	{r4, r5, r6, sl, fp, lr}
   292c0:	add	fp, sp, #16
   292c4:	sub	sp, sp, #8
   292c8:	mov	r6, r3
   292cc:	ldr	r3, [r0, #192]	; 0xc0
   292d0:	ldr	r4, [fp, #8]
   292d4:	ldr	r5, [r1, #32]
   292d8:	add	r4, r3, r4
   292dc:	add	r3, r3, r6
   292e0:	sub	r5, r4, r5
   292e4:	str	r5, [r1, #36]	; 0x24
   292e8:	mov	r5, #64	; 0x40
   292ec:	str	r5, [sp]
   292f0:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   292f4:	mov	r0, r6
   292f8:	sub	sp, fp, #16
   292fc:	pop	{r4, r5, r6, sl, fp, pc}

00029300 <myhtml_tokenizer_end_state_script_data_double_escaped@@Base>:
   29300:	push	{r4, r5, r6, sl, fp, lr}
   29304:	add	fp, sp, #16
   29308:	sub	sp, sp, #8
   2930c:	mov	r6, r3
   29310:	ldr	r3, [r0, #192]	; 0xc0
   29314:	ldr	r4, [fp, #8]
   29318:	ldr	r5, [r1, #32]
   2931c:	add	r4, r3, r4
   29320:	add	r3, r3, r6
   29324:	sub	r5, r4, r5
   29328:	str	r5, [r1, #36]	; 0x24
   2932c:	mov	r5, #64	; 0x40
   29330:	str	r5, [sp]
   29334:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29338:	mov	r0, r6
   2933c:	sub	sp, fp, #16
   29340:	pop	{r4, r5, r6, sl, fp, pc}

00029344 <myhtml_tokenizer_end_state_script_data_double_escaped_dash@@Base>:
   29344:	push	{r4, r5, r6, sl, fp, lr}
   29348:	add	fp, sp, #16
   2934c:	sub	sp, sp, #8
   29350:	mov	r6, r3
   29354:	ldr	r3, [r0, #192]	; 0xc0
   29358:	ldr	r4, [fp, #8]
   2935c:	ldr	r5, [r1, #32]
   29360:	add	r4, r3, r4
   29364:	add	r3, r3, r6
   29368:	sub	r5, r4, r5
   2936c:	str	r5, [r1, #36]	; 0x24
   29370:	mov	r5, #64	; 0x40
   29374:	str	r5, [sp]
   29378:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2937c:	mov	r0, r6
   29380:	sub	sp, fp, #16
   29384:	pop	{r4, r5, r6, sl, fp, pc}

00029388 <myhtml_tokenizer_end_state_script_data_double_escaped_dash_dash@@Base>:
   29388:	push	{r4, r5, r6, sl, fp, lr}
   2938c:	add	fp, sp, #16
   29390:	sub	sp, sp, #8
   29394:	mov	r6, r3
   29398:	ldr	r3, [r0, #192]	; 0xc0
   2939c:	ldr	r4, [fp, #8]
   293a0:	ldr	r5, [r1, #32]
   293a4:	add	r4, r3, r4
   293a8:	add	r3, r3, r6
   293ac:	sub	r5, r4, r5
   293b0:	str	r5, [r1, #36]	; 0x24
   293b4:	mov	r5, #64	; 0x40
   293b8:	str	r5, [sp]
   293bc:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   293c0:	mov	r0, r6
   293c4:	sub	sp, fp, #16
   293c8:	pop	{r4, r5, r6, sl, fp, pc}

000293cc <myhtml_tokenizer_end_state_script_data_double_escaped_less_than_sign@@Base>:
   293cc:	push	{r4, r5, r6, sl, fp, lr}
   293d0:	add	fp, sp, #16
   293d4:	sub	sp, sp, #8
   293d8:	mov	r6, r3
   293dc:	ldr	r3, [r0, #192]	; 0xc0
   293e0:	ldr	r4, [fp, #8]
   293e4:	ldr	r5, [r1, #32]
   293e8:	add	r4, r3, r4
   293ec:	add	r3, r3, r6
   293f0:	sub	r5, r4, r5
   293f4:	str	r5, [r1, #36]	; 0x24
   293f8:	mov	r5, #64	; 0x40
   293fc:	str	r5, [sp]
   29400:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29404:	mov	r0, r6
   29408:	sub	sp, fp, #16
   2940c:	pop	{r4, r5, r6, sl, fp, pc}

00029410 <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>:
   29410:	push	{r4, r5, r6, sl, fp, lr}
   29414:	add	fp, sp, #16
   29418:	sub	sp, sp, #8
   2941c:	mov	r6, r3
   29420:	ldr	r3, [r0, #192]	; 0xc0
   29424:	ldr	r4, [fp, #8]
   29428:	ldr	r5, [r1, #32]
   2942c:	add	r4, r3, r4
   29430:	add	r3, r3, r6
   29434:	sub	r5, r4, r5
   29438:	str	r5, [r1, #36]	; 0x24
   2943c:	mov	r5, #64	; 0x40
   29440:	str	r5, [sp]
   29444:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29448:	mov	r0, r6
   2944c:	sub	sp, fp, #16
   29450:	pop	{r4, r5, r6, sl, fp, pc}

00029454 <myhtml_tokenizer_end_state_parse_error_stop@@Base>:
   29454:	ldr	r0, [sp]
   29458:	bx	lr

0002945c <myhtml_tokenizer_state_script_data@@Base>:
   2945c:	push	{fp, lr}
   29460:	mov	fp, sp
   29464:	ldr	ip, [fp, #8]
   29468:	mov	lr, r3
   2946c:	cmp	r3, ip
   29470:	bcs	294ac <myhtml_tokenizer_state_script_data@@Base+0x50>
   29474:	ldrb	r3, [r2, lr]
   29478:	cmp	r3, #60	; 0x3c
   2947c:	beq	29494 <myhtml_tokenizer_state_script_data@@Base+0x38>
   29480:	add	lr, lr, #1
   29484:	cmp	ip, lr
   29488:	bne	29474 <myhtml_tokenizer_state_script_data@@Base+0x18>
   2948c:	mov	lr, ip
   29490:	b	294ac <myhtml_tokenizer_state_script_data@@Base+0x50>
   29494:	ldr	r2, [r0, #192]	; 0xc0
   29498:	add	r2, r2, lr
   2949c:	add	lr, lr, #1
   294a0:	str	r2, [r1, #32]
   294a4:	mov	r1, #16
   294a8:	str	r1, [r0, #160]	; 0xa0
   294ac:	mov	r0, lr
   294b0:	pop	{fp, pc}

000294b4 <myhtml_tokenizer_state_script_data_less_than_sign@@Base>:
   294b4:	ldrb	r2, [r2, r3]
   294b8:	cmp	r2, #33	; 0x21
   294bc:	beq	294d4 <myhtml_tokenizer_state_script_data_less_than_sign@@Base+0x20>
   294c0:	cmp	r2, #47	; 0x2f
   294c4:	mov	r1, #5
   294c8:	addeq	r3, r3, #1
   294cc:	moveq	r1, #17
   294d0:	b	294dc <myhtml_tokenizer_state_script_data_less_than_sign@@Base+0x28>
   294d4:	add	r3, r3, #1
   294d8:	mov	r1, #19
   294dc:	str	r1, [r0, #160]	; 0xa0
   294e0:	mov	r0, r3
   294e4:	bx	lr

000294e8 <myhtml_tokenizer_state_script_data_escape_start@@Base>:
   294e8:	ldrb	r1, [r2, r3]
   294ec:	mov	r2, #5
   294f0:	cmp	r1, #45	; 0x2d
   294f4:	movweq	r2, #20
   294f8:	addeq	r3, r3, #1
   294fc:	str	r2, [r0, #160]	; 0xa0
   29500:	mov	r0, r3
   29504:	bx	lr

00029508 <myhtml_tokenizer_state_script_data_escape_start_dash@@Base>:
   29508:	ldrb	r1, [r2, r3]
   2950c:	mov	r2, #5
   29510:	cmp	r1, #45	; 0x2d
   29514:	movweq	r2, #23
   29518:	addeq	r3, r3, #1
   2951c:	str	r2, [r0, #160]	; 0xa0
   29520:	mov	r0, r3
   29524:	bx	lr

00029528 <myhtml_tokenizer_state_script_data_end_tag_open@@Base>:
   29528:	ldrb	r2, [r2, r3]
   2952c:	mov	ip, #5
   29530:	and	r2, r2, #223	; 0xdf
   29534:	sub	r2, r2, #65	; 0x41
   29538:	uxtb	r2, r2
   2953c:	cmp	r2, #25
   29540:	bhi	29554 <myhtml_tokenizer_state_script_data_end_tag_open@@Base+0x2c>
   29544:	ldr	r2, [r0, #192]	; 0xc0
   29548:	mov	ip, #18
   2954c:	add	r2, r2, r3
   29550:	str	r2, [r1, #12]
   29554:	str	ip, [r0, #160]	; 0xa0
   29558:	mov	r0, r3
   2955c:	bx	lr

00029560 <myhtml_tokenizer_state_script_data_end_tag_name@@Base>:
   29560:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29564:	add	fp, sp, #28
   29568:	sub	sp, sp, #4
   2956c:	mov	r9, r0
   29570:	ldr	r0, [fp, #8]
   29574:	mov	r4, r3
   29578:	cmp	r3, r0
   2957c:	bcs	29734 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1d4>
   29580:	movw	r3, #27
   29584:	mov	r6, r2
   29588:	mov	sl, r1
   2958c:	rsb	r1, r0, #0
   29590:	add	r4, r4, #1
   29594:	mov	r2, #1
   29598:	movt	r3, #128	; 0x80
   2959c:	add	r7, r6, r4
   295a0:	ldrb	r5, [r7, #-1]
   295a4:	sub	r7, r5, #9
   295a8:	cmp	r7, #23
   295ac:	bhi	295b8 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x58>
   295b0:	tst	r3, r2, lsl r7
   295b4:	bne	2960c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xac>
   295b8:	cmp	r5, #47	; 0x2f
   295bc:	beq	296a0 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x140>
   295c0:	cmp	r5, #62	; 0x3e
   295c4:	beq	296ec <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x18c>
   295c8:	sub	r7, r5, #97	; 0x61
   295cc:	uxtb	r7, r7
   295d0:	cmp	r7, #26
   295d4:	bcc	295e8 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x88>
   295d8:	sub	r7, r5, #65	; 0x41
   295dc:	uxtb	r7, r7
   295e0:	cmp	r7, #26
   295e4:	bcs	29600 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xa0>
   295e8:	add	r4, r4, #1
   295ec:	add	r7, r1, r4
   295f0:	cmp	r7, #1
   295f4:	bne	2959c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x3c>
   295f8:	mov	r4, r0
   295fc:	b	29734 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1d4>
   29600:	mov	r0, #5
   29604:	sub	r4, r4, #1
   29608:	b	29730 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1d0>
   2960c:	ldr	r8, [sl, #12]
   29610:	ldr	r0, [r9, #192]	; 0xc0
   29614:	sub	r0, r0, r8
   29618:	add	r0, r0, r4
   2961c:	cmp	r0, #7
   29620:	bne	2972c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1cc>
   29624:	mov	r0, r9
   29628:	mov	r1, r8
   2962c:	mov	r2, #6
   29630:	bl	111ac <myhtml_tree_incomming_buffer_make_data@plt>
   29634:	ldr	r1, [pc, #460]	; 29808 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2a8>
   29638:	mov	r2, #6
   2963c:	add	r1, pc, r1
   29640:	bl	11554 <mycore_strncasecmp@plt>
   29644:	mov	r1, #5
   29648:	cmp	r0, #0
   2964c:	bne	296e4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x184>
   29650:	ldr	r0, [r9, #192]	; 0xc0
   29654:	mov	r1, #64	; 0x40
   29658:	mov	r2, r6
   2965c:	str	r1, [sp]
   29660:	mov	r1, sl
   29664:	add	r0, r0, r4
   29668:	sub	r3, r0, #9
   2966c:	mov	r0, r9
   29670:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29674:	cmp	r0, #0
   29678:	beq	297f4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x294>
   2967c:	mov	r1, #6
   29680:	str	r8, [r0, #24]
   29684:	str	r1, [r0, #28]
   29688:	mov	r1, #1
   2968c:	str	r1, [r0, #48]	; 0x30
   29690:	mov	r1, #112	; 0x70
   29694:	str	r1, [r0]
   29698:	mov	r1, #33	; 0x21
   2969c:	b	296e4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x184>
   296a0:	ldr	r8, [sl, #12]
   296a4:	ldr	r0, [r9, #192]	; 0xc0
   296a8:	sub	r0, r0, r8
   296ac:	add	r0, r0, r4
   296b0:	cmp	r0, #7
   296b4:	bne	2972c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1cc>
   296b8:	mov	r0, r9
   296bc:	mov	r1, r8
   296c0:	mov	r2, #6
   296c4:	bl	111ac <myhtml_tree_incomming_buffer_make_data@plt>
   296c8:	ldr	r1, [pc, #316]	; 2980c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2ac>
   296cc:	mov	r2, #6
   296d0:	add	r1, pc, r1
   296d4:	bl	11554 <mycore_strncasecmp@plt>
   296d8:	mov	r1, #5
   296dc:	cmp	r0, #0
   296e0:	beq	29740 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1e0>
   296e4:	str	r1, [r9, #160]	; 0xa0
   296e8:	b	29734 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1d4>
   296ec:	ldr	r8, [sl, #12]
   296f0:	ldr	r0, [r9, #192]	; 0xc0
   296f4:	sub	r0, r0, r8
   296f8:	add	r0, r0, r4
   296fc:	cmp	r0, #7
   29700:	bne	2972c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1cc>
   29704:	mov	r0, r9
   29708:	mov	r1, r8
   2970c:	mov	r2, #6
   29710:	bl	111ac <myhtml_tree_incomming_buffer_make_data@plt>
   29714:	ldr	r1, [pc, #244]	; 29810 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2b0>
   29718:	mov	r2, #6
   2971c:	add	r1, pc, r1
   29720:	bl	11554 <mycore_strncasecmp@plt>
   29724:	cmp	r0, #0
   29728:	beq	29780 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x220>
   2972c:	mov	r0, #5
   29730:	str	r0, [r9, #160]	; 0xa0
   29734:	mov	r0, r4
   29738:	sub	sp, fp, #28
   2973c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29740:	ldr	r0, [r9, #192]	; 0xc0
   29744:	mov	r1, #64	; 0x40
   29748:	mov	r2, r6
   2974c:	str	r1, [sp]
   29750:	mov	r1, sl
   29754:	add	r0, r0, r4
   29758:	sub	r3, r0, #9
   2975c:	mov	r0, r9
   29760:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29764:	cmp	r0, #0
   29768:	beq	297f4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x294>
   2976c:	mov	r1, #6
   29770:	str	r8, [r0, #24]
   29774:	str	r1, [r0, #28]
   29778:	mov	r1, #3
   2977c:	b	2968c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x12c>
   29780:	ldr	r0, [r9, #192]	; 0xc0
   29784:	mov	r1, #64	; 0x40
   29788:	mov	r2, r6
   2978c:	str	r1, [sp]
   29790:	mov	r1, sl
   29794:	add	r0, r0, r4
   29798:	sub	r3, r0, #9
   2979c:	mov	r0, r9
   297a0:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   297a4:	cmp	r0, #0
   297a8:	beq	297f4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x294>
   297ac:	mov	r2, r0
   297b0:	mov	r0, #6
   297b4:	str	r8, [r2, #24]
   297b8:	str	r0, [r2, #28]
   297bc:	mov	r0, #1
   297c0:	str	r0, [r2, #48]	; 0x30
   297c4:	mov	r0, #112	; 0x70
   297c8:	str	r0, [r2]
   297cc:	ldr	r0, [r2, #32]
   297d0:	ldr	r1, [r9, #192]	; 0xc0
   297d4:	sub	r0, r1, r0
   297d8:	mov	r1, r4
   297dc:	add	r0, r0, r4
   297e0:	str	r0, [r2, #36]	; 0x24
   297e4:	mov	r0, r9
   297e8:	bl	11350 <myhtml_queue_add@plt>
   297ec:	cmp	r0, #0
   297f0:	beq	29800 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2a0>
   297f4:	mov	r0, #69	; 0x45
   297f8:	mov	r4, #0
   297fc:	b	29730 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1d0>
   29800:	mov	r0, #0
   29804:	b	29730 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1d0>
   29808:	andeq	r1, sp, pc, lsl #20
   2980c:	andeq	r1, sp, fp, ror r9
   29810:	andeq	r1, sp, pc, lsr #18

00029814 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base>:
   29814:	ldrb	r1, [r2, r3]
   29818:	cmp	r1, #45	; 0x2d
   2981c:	beq	29840 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x2c>
   29820:	cmp	r1, #60	; 0x3c
   29824:	bne	29830 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x1c>
   29828:	mov	r1, #24
   2982c:	b	2983c <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x28>
   29830:	cmp	r1, #62	; 0x3e
   29834:	movne	r1, #21
   29838:	moveq	r1, #5
   2983c:	str	r1, [r0, #160]	; 0xa0
   29840:	add	r0, r3, #1
   29844:	bx	lr

00029848 <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base>:
   29848:	ldrb	r2, [r2, r3]
   2984c:	cmp	r2, #47	; 0x2f
   29850:	bne	29860 <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base+0x18>
   29854:	mov	r1, #25
   29858:	add	r3, r3, #1
   2985c:	b	2988c <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base+0x44>
   29860:	and	r2, r2, #223	; 0xdf
   29864:	sub	r2, r2, #65	; 0x41
   29868:	uxtb	r2, r2
   2986c:	cmp	r2, #25
   29870:	bhi	29888 <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base+0x40>
   29874:	ldr	r2, [r0, #192]	; 0xc0
   29878:	add	r2, r2, r3
   2987c:	str	r2, [r1, #12]
   29880:	mov	r1, #27
   29884:	b	2988c <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base+0x44>
   29888:	mov	r1, #21
   2988c:	str	r1, [r0, #160]	; 0xa0
   29890:	mov	r0, r3
   29894:	bx	lr

00029898 <myhtml_tokenizer_state_script_data_escaped_end_tag_open@@Base>:
   29898:	ldrb	r2, [r2, r3]
   2989c:	mov	ip, #21
   298a0:	and	r2, r2, #223	; 0xdf
   298a4:	sub	r2, r2, #65	; 0x41
   298a8:	uxtb	r2, r2
   298ac:	cmp	r2, #25
   298b0:	bhi	298c4 <myhtml_tokenizer_state_script_data_escaped_end_tag_open@@Base+0x2c>
   298b4:	ldr	r2, [r0, #192]	; 0xc0
   298b8:	mov	ip, #26
   298bc:	add	r2, r2, r3
   298c0:	str	r2, [r1, #12]
   298c4:	str	ip, [r0, #160]	; 0xa0
   298c8:	mov	r0, r3
   298cc:	bx	lr

000298d0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base>:
   298d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   298d4:	add	fp, sp, #28
   298d8:	sub	sp, sp, #4
   298dc:	mov	r9, r0
   298e0:	ldr	r0, [fp, #8]
   298e4:	mov	r4, r3
   298e8:	cmp	r3, r0
   298ec:	bcs	29aa4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1d4>
   298f0:	movw	r3, #27
   298f4:	mov	r6, r2
   298f8:	mov	sl, r1
   298fc:	rsb	r1, r0, #0
   29900:	add	r4, r4, #1
   29904:	mov	r2, #1
   29908:	movt	r3, #128	; 0x80
   2990c:	add	r7, r6, r4
   29910:	ldrb	r5, [r7, #-1]
   29914:	sub	r7, r5, #9
   29918:	cmp	r7, #23
   2991c:	bhi	29928 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x58>
   29920:	tst	r3, r2, lsl r7
   29924:	bne	2997c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xac>
   29928:	cmp	r5, #47	; 0x2f
   2992c:	beq	29a10 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x140>
   29930:	cmp	r5, #62	; 0x3e
   29934:	beq	29a5c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x18c>
   29938:	sub	r7, r5, #97	; 0x61
   2993c:	uxtb	r7, r7
   29940:	cmp	r7, #26
   29944:	bcc	29958 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x88>
   29948:	sub	r7, r5, #65	; 0x41
   2994c:	uxtb	r7, r7
   29950:	cmp	r7, #26
   29954:	bcs	29970 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xa0>
   29958:	add	r4, r4, #1
   2995c:	add	r7, r1, r4
   29960:	cmp	r7, #1
   29964:	bne	2990c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x3c>
   29968:	mov	r4, r0
   2996c:	b	29aa4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1d4>
   29970:	mov	r0, #21
   29974:	sub	r4, r4, #1
   29978:	b	29aa0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1d0>
   2997c:	ldr	r8, [sl, #12]
   29980:	ldr	r0, [r9, #192]	; 0xc0
   29984:	sub	r0, r0, r8
   29988:	add	r0, r0, r4
   2998c:	cmp	r0, #7
   29990:	bne	29a9c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1cc>
   29994:	mov	r0, r9
   29998:	mov	r1, r8
   2999c:	mov	r2, #6
   299a0:	bl	111ac <myhtml_tree_incomming_buffer_make_data@plt>
   299a4:	ldr	r1, [pc, #460]	; 29b78 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2a8>
   299a8:	mov	r2, #6
   299ac:	add	r1, pc, r1
   299b0:	bl	11554 <mycore_strncasecmp@plt>
   299b4:	mov	r1, #21
   299b8:	cmp	r0, #0
   299bc:	bne	29a54 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x184>
   299c0:	ldr	r0, [r9, #192]	; 0xc0
   299c4:	mov	r1, #64	; 0x40
   299c8:	mov	r2, r6
   299cc:	str	r1, [sp]
   299d0:	mov	r1, sl
   299d4:	add	r0, r0, r4
   299d8:	sub	r3, r0, #9
   299dc:	mov	r0, r9
   299e0:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   299e4:	cmp	r0, #0
   299e8:	beq	29b6c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x29c>
   299ec:	mov	r1, #6
   299f0:	str	r8, [r0, #24]
   299f4:	str	r1, [r0, #28]
   299f8:	mov	r1, #1
   299fc:	str	r1, [r0, #48]	; 0x30
   29a00:	mov	r1, #112	; 0x70
   29a04:	str	r1, [r0]
   29a08:	mov	r1, #33	; 0x21
   29a0c:	b	29a54 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x184>
   29a10:	ldr	r8, [sl, #12]
   29a14:	ldr	r0, [r9, #192]	; 0xc0
   29a18:	sub	r0, r0, r8
   29a1c:	add	r0, r0, r4
   29a20:	cmp	r0, #7
   29a24:	bne	29a9c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1cc>
   29a28:	mov	r0, r9
   29a2c:	mov	r1, r8
   29a30:	mov	r2, #6
   29a34:	bl	111ac <myhtml_tree_incomming_buffer_make_data@plt>
   29a38:	ldr	r1, [pc, #316]	; 29b7c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2ac>
   29a3c:	mov	r2, #6
   29a40:	add	r1, pc, r1
   29a44:	bl	11554 <mycore_strncasecmp@plt>
   29a48:	mov	r1, #21
   29a4c:	cmp	r0, #0
   29a50:	beq	29ab0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1e0>
   29a54:	str	r1, [r9, #160]	; 0xa0
   29a58:	b	29aa4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1d4>
   29a5c:	ldr	r8, [sl, #12]
   29a60:	ldr	r0, [r9, #192]	; 0xc0
   29a64:	sub	r0, r0, r8
   29a68:	add	r0, r0, r4
   29a6c:	cmp	r0, #7
   29a70:	bne	29a9c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1cc>
   29a74:	mov	r0, r9
   29a78:	mov	r1, r8
   29a7c:	mov	r2, #6
   29a80:	bl	111ac <myhtml_tree_incomming_buffer_make_data@plt>
   29a84:	ldr	r1, [pc, #244]	; 29b80 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2b0>
   29a88:	mov	r2, #6
   29a8c:	add	r1, pc, r1
   29a90:	bl	11554 <mycore_strncasecmp@plt>
   29a94:	cmp	r0, #0
   29a98:	beq	29af0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x220>
   29a9c:	mov	r0, #21
   29aa0:	str	r0, [r9, #160]	; 0xa0
   29aa4:	mov	r0, r4
   29aa8:	sub	sp, fp, #28
   29aac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29ab0:	ldr	r0, [r9, #192]	; 0xc0
   29ab4:	mov	r1, #64	; 0x40
   29ab8:	mov	r2, r6
   29abc:	str	r1, [sp]
   29ac0:	mov	r1, sl
   29ac4:	add	r0, r0, r4
   29ac8:	sub	r3, r0, #9
   29acc:	mov	r0, r9
   29ad0:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29ad4:	cmp	r0, #0
   29ad8:	beq	29b6c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x29c>
   29adc:	mov	r1, #6
   29ae0:	str	r8, [r0, #24]
   29ae4:	str	r1, [r0, #28]
   29ae8:	mov	r1, #3
   29aec:	b	299fc <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x12c>
   29af0:	ldr	r0, [r9, #192]	; 0xc0
   29af4:	mov	r1, #64	; 0x40
   29af8:	mov	r2, r6
   29afc:	str	r1, [sp]
   29b00:	mov	r1, sl
   29b04:	add	r0, r0, r4
   29b08:	sub	r3, r0, #9
   29b0c:	mov	r0, r9
   29b10:	bl	11db8 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29b14:	cmp	r0, #0
   29b18:	beq	29b6c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x29c>
   29b1c:	mov	r2, r0
   29b20:	mov	r0, #6
   29b24:	str	r8, [r2, #24]
   29b28:	str	r0, [r2, #28]
   29b2c:	mov	r0, #1
   29b30:	str	r0, [r2, #48]	; 0x30
   29b34:	mov	r0, #112	; 0x70
   29b38:	str	r0, [r2]
   29b3c:	mov	r0, #0
   29b40:	str	r0, [r9, #160]	; 0xa0
   29b44:	ldr	r0, [r9, #192]	; 0xc0
   29b48:	ldr	r1, [r2, #32]
   29b4c:	sub	r0, r0, r1
   29b50:	mov	r1, r4
   29b54:	add	r0, r0, r4
   29b58:	str	r0, [r2, #36]	; 0x24
   29b5c:	mov	r0, r9
   29b60:	bl	11350 <myhtml_queue_add@plt>
   29b64:	cmp	r0, #0
   29b68:	beq	29aa4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1d4>
   29b6c:	mov	r0, #69	; 0x45
   29b70:	mov	r4, #0
   29b74:	b	29aa0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1d0>
   29b78:	muleq	sp, pc, r6	; <UNPREDICTABLE>
   29b7c:	andeq	r1, sp, fp, lsl #12
   29b80:			; <UNDEFINED> instruction: 0x000d15bf

00029b84 <myhtml_tokenizer_state_script_data_escaped@@Base>:
   29b84:	ldr	ip, [sp]
   29b88:	cmp	r3, ip
   29b8c:	bcs	29bcc <myhtml_tokenizer_state_script_data_escaped@@Base+0x48>
   29b90:	ldrb	r1, [r2, r3]
   29b94:	cmp	r1, #60	; 0x3c
   29b98:	beq	29bb8 <myhtml_tokenizer_state_script_data_escaped@@Base+0x34>
   29b9c:	cmp	r1, #45	; 0x2d
   29ba0:	beq	29bc0 <myhtml_tokenizer_state_script_data_escaped@@Base+0x3c>
   29ba4:	add	r3, r3, #1
   29ba8:	cmp	ip, r3
   29bac:	bne	29b90 <myhtml_tokenizer_state_script_data_escaped@@Base+0xc>
   29bb0:	mov	r3, ip
   29bb4:	b	29bcc <myhtml_tokenizer_state_script_data_escaped@@Base+0x48>
   29bb8:	mov	r1, #24
   29bbc:	b	29bc4 <myhtml_tokenizer_state_script_data_escaped@@Base+0x40>
   29bc0:	mov	r1, #22
   29bc4:	str	r1, [r0, #160]	; 0xa0
   29bc8:	add	r3, r3, #1
   29bcc:	mov	r0, r3
   29bd0:	bx	lr

00029bd4 <myhtml_tokenizer_state_script_data_escaped_dash@@Base>:
   29bd4:	ldrb	r1, [r2, r3]
   29bd8:	cmp	r1, #60	; 0x3c
   29bdc:	beq	29bf4 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x20>
   29be0:	cmp	r1, #45	; 0x2d
   29be4:	bne	29c00 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x2c>
   29be8:	mov	r1, #23
   29bec:	add	r3, r3, #1
   29bf0:	b	29bf8 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x24>
   29bf4:	mov	r1, #24
   29bf8:	str	r1, [r0, #160]	; 0xa0
   29bfc:	b	29c10 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x3c>
   29c00:	cmp	r1, #0
   29c04:	mov	r2, #21
   29c08:	addne	r3, r3, #1
   29c0c:	str	r2, [r0, #160]	; 0xa0
   29c10:	mov	r0, r3
   29c14:	bx	lr

00029c18 <myhtml_tokenizer_state_script_data_double_escape_start@@Base>:
   29c18:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29c1c:	add	fp, sp, #24
   29c20:	ldr	ip, [fp, #8]
   29c24:	mov	r4, r3
   29c28:	cmp	r3, ip
   29c2c:	bcs	29d04 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xec>
   29c30:	movw	r6, #27
   29c34:	mov	r8, r0
   29c38:	rsb	r3, ip, #0
   29c3c:	add	r4, r4, #1
   29c40:	mov	r5, #1
   29c44:	movt	r6, #128	; 0x80
   29c48:	add	r0, r2, r4
   29c4c:	ldrb	r7, [r0, #-1]
   29c50:	sub	r0, r7, #9
   29c54:	cmp	r0, #23
   29c58:	bhi	29c64 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x4c>
   29c5c:	tst	r6, r5, lsl r0
   29c60:	bne	29ca8 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x90>
   29c64:	cmp	r7, #62	; 0x3e
   29c68:	cmpne	r7, #47	; 0x2f
   29c6c:	beq	29ca8 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x90>
   29c70:	sub	r0, r7, #97	; 0x61
   29c74:	uxtb	r0, r0
   29c78:	cmp	r0, #26
   29c7c:	bcc	29c90 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x78>
   29c80:	sub	r0, r7, #65	; 0x41
   29c84:	uxtb	r0, r0
   29c88:	cmp	r0, #26
   29c8c:	bcs	29cf0 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xd8>
   29c90:	add	r4, r4, #1
   29c94:	add	r0, r3, r4
   29c98:	cmp	r0, #1
   29c9c:	bne	29c48 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x30>
   29ca0:	mov	r4, ip
   29ca4:	b	29d04 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xec>
   29ca8:	ldr	r1, [r1, #12]
   29cac:	ldr	r0, [r8, #192]	; 0xc0
   29cb0:	sub	r0, r0, r1
   29cb4:	add	r0, r0, r4
   29cb8:	cmp	r0, #7
   29cbc:	bne	29cfc <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xe4>
   29cc0:	mov	r0, r8
   29cc4:	mov	r2, #6
   29cc8:	bl	111ac <myhtml_tree_incomming_buffer_make_data@plt>
   29ccc:	ldr	r1, [pc, #56]	; 29d0c <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xf4>
   29cd0:	mov	r2, #6
   29cd4:	add	r1, pc, r1
   29cd8:	bl	11554 <mycore_strncasecmp@plt>
   29cdc:	cmp	r0, #0
   29ce0:	mov	r1, #21
   29ce4:	movweq	r1, #28
   29ce8:	str	r1, [r8, #160]	; 0xa0
   29cec:	b	29d04 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xec>
   29cf0:	mov	r0, #21
   29cf4:	sub	r4, r4, #1
   29cf8:	b	29d00 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xe8>
   29cfc:	mov	r0, #21
   29d00:	str	r0, [r8, #160]	; 0xa0
   29d04:	mov	r0, r4
   29d08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   29d0c:	andeq	r1, sp, r7, ror r3

00029d10 <myhtml_tokenizer_state_script_data_double_escaped@@Base>:
   29d10:	ldr	ip, [sp]
   29d14:	cmp	r3, ip
   29d18:	bcs	29d58 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x48>
   29d1c:	ldrb	r1, [r2, r3]
   29d20:	cmp	r1, #60	; 0x3c
   29d24:	beq	29d44 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x34>
   29d28:	cmp	r1, #45	; 0x2d
   29d2c:	beq	29d4c <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x3c>
   29d30:	add	r3, r3, #1
   29d34:	cmp	ip, r3
   29d38:	bne	29d1c <myhtml_tokenizer_state_script_data_double_escaped@@Base+0xc>
   29d3c:	mov	r3, ip
   29d40:	b	29d58 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x48>
   29d44:	mov	r1, #31
   29d48:	b	29d50 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x40>
   29d4c:	mov	r1, #29
   29d50:	str	r1, [r0, #160]	; 0xa0
   29d54:	add	r3, r3, #1
   29d58:	mov	r0, r3
   29d5c:	bx	lr

00029d60 <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base>:
   29d60:	ldrb	r1, [r2, r3]
   29d64:	cmp	r1, #45	; 0x2d
   29d68:	bne	29d74 <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base+0x14>
   29d6c:	mov	r1, #30
   29d70:	b	29d80 <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base+0x20>
   29d74:	cmp	r1, #60	; 0x3c
   29d78:	movne	r1, #28
   29d7c:	moveq	r1, #31
   29d80:	str	r1, [r0, #160]	; 0xa0
   29d84:	add	r0, r3, #1
   29d88:	bx	lr

00029d8c <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base>:
   29d8c:	ldrb	r1, [r2, r3]
   29d90:	cmp	r1, #45	; 0x2d
   29d94:	beq	29db8 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x2c>
   29d98:	cmp	r1, #60	; 0x3c
   29d9c:	bne	29da8 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x1c>
   29da0:	mov	r1, #31
   29da4:	b	29db4 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x28>
   29da8:	cmp	r1, #62	; 0x3e
   29dac:	movne	r1, #28
   29db0:	moveq	r1, #5
   29db4:	str	r1, [r0, #160]	; 0xa0
   29db8:	add	r0, r3, #1
   29dbc:	bx	lr

00029dc0 <myhtml_tokenizer_state_script_data_double_escaped_less_than_sign@@Base>:
   29dc0:	ldrb	r2, [r2, r3]
   29dc4:	cmp	r2, #47	; 0x2f
   29dc8:	bne	29de8 <myhtml_tokenizer_state_script_data_double_escaped_less_than_sign@@Base+0x28>
   29dcc:	mov	r2, #32
   29dd0:	add	r3, r3, #1
   29dd4:	str	r2, [r0, #160]	; 0xa0
   29dd8:	ldr	r0, [r0, #192]	; 0xc0
   29ddc:	add	r0, r0, r3
   29de0:	str	r0, [r1, #12]
   29de4:	b	29df0 <myhtml_tokenizer_state_script_data_double_escaped_less_than_sign@@Base+0x30>
   29de8:	mov	r1, #28
   29dec:	str	r1, [r0, #160]	; 0xa0
   29df0:	mov	r0, r3
   29df4:	bx	lr

00029df8 <myhtml_tokenizer_state_script_data_double_escape_end@@Base>:
   29df8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29dfc:	add	fp, sp, #24
   29e00:	ldr	ip, [fp, #8]
   29e04:	mov	r4, r3
   29e08:	cmp	r3, ip
   29e0c:	bcs	29ee4 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xec>
   29e10:	movw	r6, #27
   29e14:	mov	r8, r0
   29e18:	rsb	r3, ip, #0
   29e1c:	add	r4, r4, #1
   29e20:	mov	r5, #1
   29e24:	movt	r6, #128	; 0x80
   29e28:	add	r0, r2, r4
   29e2c:	ldrb	r7, [r0, #-1]
   29e30:	sub	r0, r7, #9
   29e34:	cmp	r0, #23
   29e38:	bhi	29e44 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x4c>
   29e3c:	tst	r6, r5, lsl r0
   29e40:	bne	29e88 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x90>
   29e44:	cmp	r7, #62	; 0x3e
   29e48:	cmpne	r7, #47	; 0x2f
   29e4c:	beq	29e88 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x90>
   29e50:	sub	r0, r7, #97	; 0x61
   29e54:	uxtb	r0, r0
   29e58:	cmp	r0, #26
   29e5c:	bcc	29e70 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x78>
   29e60:	sub	r0, r7, #65	; 0x41
   29e64:	uxtb	r0, r0
   29e68:	cmp	r0, #26
   29e6c:	bcs	29ed0 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xd8>
   29e70:	add	r4, r4, #1
   29e74:	add	r0, r3, r4
   29e78:	cmp	r0, #1
   29e7c:	bne	29e28 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x30>
   29e80:	mov	r4, ip
   29e84:	b	29ee4 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xec>
   29e88:	ldr	r1, [r1, #12]
   29e8c:	ldr	r0, [r8, #192]	; 0xc0
   29e90:	sub	r0, r0, r1
   29e94:	add	r0, r0, r4
   29e98:	cmp	r0, #7
   29e9c:	bne	29edc <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xe4>
   29ea0:	mov	r0, r8
   29ea4:	mov	r2, #6
   29ea8:	bl	111ac <myhtml_tree_incomming_buffer_make_data@plt>
   29eac:	ldr	r1, [pc, #56]	; 29eec <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xf4>
   29eb0:	mov	r2, #6
   29eb4:	add	r1, pc, r1
   29eb8:	bl	11554 <mycore_strncasecmp@plt>
   29ebc:	cmp	r0, #0
   29ec0:	mov	r1, #28
   29ec4:	movweq	r1, #21
   29ec8:	str	r1, [r8, #160]	; 0xa0
   29ecc:	b	29ee4 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xec>
   29ed0:	mov	r0, #28
   29ed4:	sub	r4, r4, #1
   29ed8:	b	29ee0 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xe8>
   29edc:	mov	r0, #28
   29ee0:	str	r0, [r8, #160]	; 0xa0
   29ee4:	mov	r0, r4
   29ee8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   29eec:	muleq	sp, r7, r1

00029ef0 <myhtml_tree_create@@Base>:
   29ef0:	mov	r0, #1
   29ef4:	mov	r1, #252	; 0xfc
   29ef8:	b	11248 <mycore_calloc@plt>

00029efc <myhtml_tree_init@@Base>:
   29efc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   29f00:	add	fp, sp, #24
   29f04:	sub	sp, sp, #8
   29f08:	mov	r6, #0
   29f0c:	mov	r5, r1
   29f10:	mov	r4, r0
   29f14:	str	r6, [sp, #4]
   29f18:	str	r1, [r0]
   29f1c:	mov	r1, #512	; 0x200
   29f20:	bl	12094 <myhtml_token_create@plt>
   29f24:	cmp	r0, #0
   29f28:	str	r0, [r4, #8]
   29f2c:	beq	2a1d8 <myhtml_tree_init@@Base+0x2dc>
   29f30:	vmov.i32	q8, #0	; 0x00000000
   29f34:	add	r0, r4, #220	; 0xdc
   29f38:	str	r6, [r4, #184]	; 0xb8
   29f3c:	str	r6, [r4, #148]	; 0x94
   29f40:	str	r6, [r4, #208]	; 0xd0
   29f44:	str	r6, [r4, #36]	; 0x24
   29f48:	vst1.32	{d16-d17}, [r0]
   29f4c:	add	r0, r4, #236	; 0xec
   29f50:	vst1.32	{d16-d17}, [r0]
   29f54:	bl	11c08 <mythread_queue_create@plt>
   29f58:	cmp	r0, #0
   29f5c:	str	r0, [r4, #24]
   29f60:	beq	2a1e0 <myhtml_tree_init@@Base+0x2e4>
   29f64:	movw	r1, #9182	; 0x23de
   29f68:	bl	118d8 <mythread_queue_init@plt>
   29f6c:	mov	r6, r0
   29f70:	cmp	r0, #0
   29f74:	str	r0, [sp, #4]
   29f78:	bne	2a1e4 <myhtml_tree_init@@Base+0x2e8>
   29f7c:	bl	11344 <mcobject_create@plt>
   29f80:	cmp	r0, #0
   29f84:	str	r0, [r4, #72]	; 0x48
   29f88:	beq	2a1f0 <myhtml_tree_init@@Base+0x2f4>
   29f8c:	mov	r1, #256	; 0x100
   29f90:	mov	r2, #24
   29f94:	bl	1198c <mcobject_init@plt>
   29f98:	mov	r6, r0
   29f9c:	cmp	r0, #0
   29fa0:	str	r0, [sp, #4]
   29fa4:	bne	2a1e4 <myhtml_tree_init@@Base+0x2e8>
   29fa8:	bl	110d4 <mcobject_async_create@plt>
   29fac:	cmp	r0, #0
   29fb0:	str	r0, [r4, #12]
   29fb4:	beq	2a1f8 <myhtml_tree_init@@Base+0x2fc>
   29fb8:	mov	r1, #128	; 0x80
   29fbc:	mov	r2, #1024	; 0x400
   29fc0:	mov	r3, #44	; 0x2c
   29fc4:	mov	r8, #1024	; 0x400
   29fc8:	bl	11014 <mcobject_async_init@plt>
   29fcc:	movw	r6, #37366	; 0x91f6
   29fd0:	cmp	r0, #0
   29fd4:	str	r0, [sp]
   29fd8:	bne	2a1e4 <myhtml_tree_init@@Base+0x2e8>
   29fdc:	bl	11434 <mchar_async_create@plt>
   29fe0:	str	r0, [r4, #4]
   29fe4:	mov	r0, #12
   29fe8:	bl	11dac <mycore_malloc@plt>
   29fec:	mov	r9, #0
   29ff0:	mov	r7, #4096	; 0x1000
   29ff4:	mov	r6, r0
   29ff8:	str	r9, [r0, #4]
   29ffc:	str	r7, [r0, #8]
   2a000:	mov	r0, #16384	; 0x4000
   2a004:	bl	11dac <mycore_malloc@plt>
   2a008:	str	r0, [r6]
   2a00c:	mov	r0, #12
   2a010:	str	r6, [r4, #124]	; 0x7c
   2a014:	bl	11dac <mycore_malloc@plt>
   2a018:	str	r9, [r0, #4]
   2a01c:	mov	r6, r0
   2a020:	str	r7, [r0, #8]
   2a024:	mov	r0, #16384	; 0x4000
   2a028:	bl	11dac <mycore_malloc@plt>
   2a02c:	str	r0, [r6]
   2a030:	mov	r0, #12
   2a034:	str	r6, [r4, #128]	; 0x80
   2a038:	bl	11dac <mycore_malloc@plt>
   2a03c:	str	r9, [r0, #4]
   2a040:	mov	r6, r0
   2a044:	str	r7, [r0, #8]
   2a048:	mov	r0, #16384	; 0x4000
   2a04c:	bl	11dac <mycore_malloc@plt>
   2a050:	str	r0, [r6]
   2a054:	mov	r0, #12
   2a058:	str	r6, [r4, #132]	; 0x84
   2a05c:	bl	11dac <mycore_malloc@plt>
   2a060:	str	r9, [r0, #4]
   2a064:	mov	r6, r0
   2a068:	str	r7, [r0, #8]
   2a06c:	mov	r0, #16384	; 0x4000
   2a070:	bl	11dac <mycore_malloc@plt>
   2a074:	str	r0, [r6]
   2a078:	mov	r0, #12
   2a07c:	str	r6, [r4, #136]	; 0x88
   2a080:	bl	11dac <mycore_malloc@plt>
   2a084:	str	r9, [r0, #4]
   2a088:	mov	r6, r0
   2a08c:	str	r8, [r0, #8]
   2a090:	mov	r0, #4096	; 0x1000
   2a094:	bl	11dac <mycore_malloc@plt>
   2a098:	str	r0, [r6]
   2a09c:	str	r6, [r4, #140]	; 0x8c
   2a0a0:	ldr	r0, [r4, #4]
   2a0a4:	cmp	r0, #0
   2a0a8:	beq	2a1e0 <myhtml_tree_init@@Base+0x2e4>
   2a0ac:	mov	r1, #128	; 0x80
   2a0b0:	mov	r2, #20480	; 0x5000
   2a0b4:	bl	11710 <mchar_async_init@plt>
   2a0b8:	mov	r6, r0
   2a0bc:	cmp	r0, #0
   2a0c0:	str	r0, [sp, #4]
   2a0c4:	bne	2a1e4 <myhtml_tree_init@@Base+0x2e8>
   2a0c8:	ldr	r0, [r4, #12]
   2a0cc:	mov	r1, sp
   2a0d0:	bl	11c14 <mcobject_async_node_add@plt>
   2a0d4:	str	r0, [r4, #48]	; 0x30
   2a0d8:	movw	r6, #37367	; 0x91f7
   2a0dc:	ldr	r0, [sp]
   2a0e0:	cmp	r0, #0
   2a0e4:	bne	2a1e4 <myhtml_tree_init@@Base+0x2e8>
   2a0e8:	ldr	r0, [r4, #8]
   2a0ec:	mov	r1, sp
   2a0f0:	ldr	r0, [r0, #4]
   2a0f4:	bl	11c14 <mcobject_async_node_add@plt>
   2a0f8:	str	r0, [r4, #40]	; 0x28
   2a0fc:	ldr	r0, [sp]
   2a100:	cmp	r0, #0
   2a104:	bne	2a1e4 <myhtml_tree_init@@Base+0x2e8>
   2a108:	ldr	r0, [r4, #8]
   2a10c:	mov	r1, sp
   2a110:	ldr	r0, [r0, #8]
   2a114:	bl	11c14 <mcobject_async_node_add@plt>
   2a118:	str	r0, [r4, #44]	; 0x2c
   2a11c:	ldr	r0, [sp]
   2a120:	cmp	r0, #0
   2a124:	bne	2a1e4 <myhtml_tree_init@@Base+0x2e8>
   2a128:	ldr	r0, [r5, #20]
   2a12c:	mov	r1, #4
   2a130:	bl	11248 <mycore_calloc@plt>
   2a134:	cmp	r0, #0
   2a138:	str	r0, [r4, #144]	; 0x90
   2a13c:	beq	2a1e0 <myhtml_tree_init@@Base+0x2e4>
   2a140:	ldr	r1, [r5, #20]
   2a144:	cmp	r1, #0
   2a148:	beq	2a188 <myhtml_tree_init@@Base+0x28c>
   2a14c:	mov	r7, #0
   2a150:	add	r8, sp, #4
   2a154:	ldr	r0, [r4, #4]
   2a158:	mov	r1, r8
   2a15c:	bl	11548 <mchar_async_node_add@plt>
   2a160:	mov	r1, r0
   2a164:	ldr	r0, [r4, #144]	; 0x90
   2a168:	str	r1, [r0, r7, lsl #2]
   2a16c:	ldr	r6, [sp, #4]
   2a170:	cmp	r6, #0
   2a174:	bne	2a1e4 <myhtml_tree_init@@Base+0x2e8>
   2a178:	ldr	r1, [r5, #20]
   2a17c:	add	r7, r7, #1
   2a180:	cmp	r7, r1
   2a184:	bcc	2a154 <myhtml_tree_init@@Base+0x258>
   2a188:	ldr	r0, [r0]
   2a18c:	str	r0, [r4, #52]	; 0x34
   2a190:	bl	11110 <mcsync_create@plt>
   2a194:	cmp	r0, #0
   2a198:	str	r0, [r4, #16]
   2a19c:	beq	2a1e0 <myhtml_tree_init@@Base+0x2e4>
   2a1a0:	bl	11a34 <mcsync_init@plt>
   2a1a4:	cmp	r0, #0
   2a1a8:	mov	r6, #2
   2a1ac:	bne	2a1e4 <myhtml_tree_init@@Base+0x2e8>
   2a1b0:	bl	11e24 <myhtml_tag_create@plt>
   2a1b4:	mov	r1, r0
   2a1b8:	str	r0, [r4, #28]
   2a1bc:	mov	r0, r4
   2a1c0:	bl	11cb0 <myhtml_tag_init@plt>
   2a1c4:	str	r0, [sp, #4]
   2a1c8:	mov	r0, r4
   2a1cc:	bl	118f0 <myhtml_tree_clean@plt>
   2a1d0:	ldr	r6, [sp, #4]
   2a1d4:	b	2a1e4 <myhtml_tree_init@@Base+0x2e8>
   2a1d8:	movw	r6, #37164	; 0x912c
   2a1dc:	b	2a1e4 <myhtml_tree_init@@Base+0x2e8>
   2a1e0:	mov	r6, #2
   2a1e4:	mov	r0, r6
   2a1e8:	sub	sp, fp, #24
   2a1ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2a1f0:	movw	r6, #37368	; 0x91f8
   2a1f4:	b	2a1e4 <myhtml_tree_init@@Base+0x2e8>
   2a1f8:	movw	r6, #37365	; 0x91f5
   2a1fc:	b	2a1e4 <myhtml_tree_init@@Base+0x2e8>

0002a200 <myhtml_tree_active_formatting_init@@Base>:
   2a200:	push	{r4, sl, fp, lr}
   2a204:	add	fp, sp, #8
   2a208:	mov	r0, #12
   2a20c:	bl	11dac <mycore_malloc@plt>
   2a210:	mov	r4, r0
   2a214:	mov	r0, #0
   2a218:	str	r0, [r4, #4]
   2a21c:	mov	r0, #4096	; 0x1000
   2a220:	str	r0, [r4, #8]
   2a224:	mov	r0, #16384	; 0x4000
   2a228:	bl	11dac <mycore_malloc@plt>
   2a22c:	str	r0, [r4]
   2a230:	mov	r0, r4
   2a234:	pop	{r4, sl, fp, pc}

0002a238 <myhtml_tree_open_elements_init@@Base>:
   2a238:	push	{r4, sl, fp, lr}
   2a23c:	add	fp, sp, #8
   2a240:	mov	r0, #12
   2a244:	bl	11dac <mycore_malloc@plt>
   2a248:	mov	r4, r0
   2a24c:	mov	r0, #0
   2a250:	str	r0, [r4, #4]
   2a254:	mov	r0, #4096	; 0x1000
   2a258:	str	r0, [r4, #8]
   2a25c:	mov	r0, #16384	; 0x4000
   2a260:	bl	11dac <mycore_malloc@plt>
   2a264:	str	r0, [r4]
   2a268:	mov	r0, r4
   2a26c:	pop	{r4, sl, fp, pc}

0002a270 <myhtml_tree_list_init@@Base>:
   2a270:	push	{r4, sl, fp, lr}
   2a274:	add	fp, sp, #8
   2a278:	mov	r0, #12
   2a27c:	bl	11dac <mycore_malloc@plt>
   2a280:	mov	r4, r0
   2a284:	mov	r0, #0
   2a288:	str	r0, [r4, #4]
   2a28c:	mov	r0, #4096	; 0x1000
   2a290:	str	r0, [r4, #8]
   2a294:	mov	r0, #16384	; 0x4000
   2a298:	bl	11dac <mycore_malloc@plt>
   2a29c:	str	r0, [r4]
   2a2a0:	mov	r0, r4
   2a2a4:	pop	{r4, sl, fp, pc}

0002a2a8 <myhtml_tree_token_list_init@@Base>:
   2a2a8:	push	{r4, sl, fp, lr}
   2a2ac:	add	fp, sp, #8
   2a2b0:	mov	r0, #12
   2a2b4:	bl	11dac <mycore_malloc@plt>
   2a2b8:	mov	r4, r0
   2a2bc:	mov	r1, #0
   2a2c0:	mov	r0, #4096	; 0x1000
   2a2c4:	str	r1, [r4, #4]
   2a2c8:	str	r0, [r4, #8]
   2a2cc:	mov	r0, #16384	; 0x4000
   2a2d0:	bl	11dac <mycore_malloc@plt>
   2a2d4:	str	r0, [r4]
   2a2d8:	mov	r0, r4
   2a2dc:	pop	{r4, sl, fp, pc}

0002a2e0 <myhtml_tree_template_insertion_init@@Base>:
   2a2e0:	push	{r4, r5, fp, lr}
   2a2e4:	add	fp, sp, #8
   2a2e8:	mov	r4, r0
   2a2ec:	mov	r0, #12
   2a2f0:	bl	11dac <mycore_malloc@plt>
   2a2f4:	mov	r5, r0
   2a2f8:	mov	r1, #0
   2a2fc:	mov	r0, #1024	; 0x400
   2a300:	str	r1, [r5, #4]
   2a304:	str	r0, [r5, #8]
   2a308:	mov	r0, #4096	; 0x1000
   2a30c:	bl	11dac <mycore_malloc@plt>
   2a310:	str	r0, [r5]
   2a314:	mov	r0, r5
   2a318:	str	r5, [r4, #140]	; 0x8c
   2a31c:	pop	{r4, r5, fp, pc}

0002a320 <myhtml_tree_clean@@Base>:
   2a320:	push	{r4, r5, r6, r7, fp, lr}
   2a324:	add	fp, sp, #16
   2a328:	vpush	{d8-d9}
   2a32c:	ldr	r5, [r0]
   2a330:	mov	r4, r0
   2a334:	ldr	r0, [r5, #20]
   2a338:	cmp	r0, #0
   2a33c:	beq	2a364 <myhtml_tree_clean@@Base+0x44>
   2a340:	mov	r6, #0
   2a344:	ldr	r1, [r4, #144]	; 0x90
   2a348:	ldr	r0, [r4, #4]
   2a34c:	ldr	r1, [r1, r6, lsl #2]
   2a350:	bl	11908 <mchar_async_node_clean@plt>
   2a354:	ldr	r0, [r5, #20]
   2a358:	add	r6, r6, #1
   2a35c:	cmp	r6, r0
   2a360:	bcc	2a344 <myhtml_tree_clean@@Base+0x24>
   2a364:	ldr	r0, [r4, #12]
   2a368:	ldr	r1, [r4, #48]	; 0x30
   2a36c:	bl	11a4c <mcobject_async_node_clean@plt>
   2a370:	ldr	r0, [r4, #8]
   2a374:	ldr	r1, [r4, #40]	; 0x28
   2a378:	ldr	r0, [r0, #4]
   2a37c:	bl	11a4c <mcobject_async_node_clean@plt>
   2a380:	ldr	r0, [r4, #8]
   2a384:	ldr	r1, [r4, #44]	; 0x2c
   2a388:	ldr	r0, [r0, #8]
   2a38c:	bl	11a4c <mcobject_async_node_clean@plt>
   2a390:	ldr	r0, [r4, #20]
   2a394:	bl	11b60 <mythread_queue_list_entry_clean@plt>
   2a398:	ldr	r0, [r4]
   2a39c:	ldr	r1, [r4, #20]
   2a3a0:	ldr	r0, [r0, #4]
   2a3a4:	bl	11e18 <mythread_queue_list_entry_make_batch@plt>
   2a3a8:	ldr	r0, [r4]
   2a3ac:	ldr	r1, [r4, #20]
   2a3b0:	ldr	r0, [r0]
   2a3b4:	bl	11fa4 <mythread_queue_list_entry_make_stream@plt>
   2a3b8:	ldr	r0, [r4, #8]
   2a3bc:	bl	1180c <myhtml_token_clean@plt>
   2a3c0:	ldr	r0, [r4, #12]
   2a3c4:	ldr	r1, [r4, #48]	; 0x30
   2a3c8:	mov	r2, #0
   2a3cc:	mov	r5, #0
   2a3d0:	bl	11cec <mcobject_async_malloc@plt>
   2a3d4:	vmov.i32	q4, #0	; 0x00000000
   2a3d8:	mov	r6, #36	; 0x24
   2a3dc:	mov	r1, r0
   2a3e0:	mov	r7, #1
   2a3e4:	str	r5, [r0, #32]
   2a3e8:	str	r4, [r0, #40]	; 0x28
   2a3ec:	mov	r2, #0
   2a3f0:	vst1.32	{d8-d9}, [r1], r6
   2a3f4:	str	r7, [r0, #8]
   2a3f8:	add	r0, r0, #16
   2a3fc:	vst1.32	{d8-d9}, [r0]
   2a400:	str	r5, [r1]
   2a404:	ldr	r0, [r4, #12]
   2a408:	ldr	r1, [r4, #48]	; 0x30
   2a40c:	bl	11cec <mcobject_async_malloc@plt>
   2a410:	mov	r1, r0
   2a414:	str	r5, [r0, #32]
   2a418:	str	r4, [r0, #40]	; 0x28
   2a41c:	add	r2, r0, #16
   2a420:	vst1.32	{d8-d9}, [r1], r6
   2a424:	str	r7, [r0, #8]
   2a428:	vst1.32	{d8-d9}, [r2]
   2a42c:	str	r5, [r1]
   2a430:	mov	r1, #2
   2a434:	str	r1, [r4, #180]	; 0xb4
   2a438:	str	r5, [r4, #68]	; 0x44
   2a43c:	str	r5, [r4, #76]	; 0x4c
   2a440:	str	r5, [r4, #80]	; 0x50
   2a444:	str	r0, [r4, #84]	; 0x54
   2a448:	add	r0, r4, #160	; 0xa0
   2a44c:	str	r5, [r4, #192]	; 0xc0
   2a450:	str	r5, [r4, #196]	; 0xc4
   2a454:	str	r5, [r4, #200]	; 0xc8
   2a458:	str	r5, [r4, #204]	; 0xcc
   2a45c:	str	r5, [r4, #156]	; 0x9c
   2a460:	strb	r5, [r4, #188]	; 0xbc
   2a464:	str	r5, [r4, #176]	; 0xb0
   2a468:	vst1.32	{d8-d9}, [r0]
   2a46c:	add	r0, r4, #88	; 0x58
   2a470:	str	r5, [r4, #101]	; 0x65
   2a474:	str	r5, [r4, #105]	; 0x69
   2a478:	str	r5, [r4, #60]	; 0x3c
   2a47c:	vst1.32	{d8-d9}, [r0]
   2a480:	str	r5, [r4, #112]	; 0x70
   2a484:	str	r5, [r4, #116]	; 0x74
   2a488:	str	r5, [r4, #120]	; 0x78
   2a48c:	str	r5, [r4, #152]	; 0x98
   2a490:	ldr	r0, [r4, #148]	; 0x94
   2a494:	bl	116d4 <myhtml_stream_buffer_clean@plt>
   2a498:	ldr	r0, [r4, #124]	; 0x7c
   2a49c:	str	r5, [r0, #4]
   2a4a0:	ldr	r0, [r4, #128]	; 0x80
   2a4a4:	str	r5, [r0, #4]
   2a4a8:	ldr	r0, [r4, #132]	; 0x84
   2a4ac:	str	r5, [r0, #4]
   2a4b0:	ldr	r0, [r4, #136]	; 0x88
   2a4b4:	str	r5, [r0, #4]
   2a4b8:	ldr	r0, [r4, #140]	; 0x8c
   2a4bc:	str	r5, [r0, #4]
   2a4c0:	ldr	r0, [r4, #72]	; 0x48
   2a4c4:	bl	1201c <mcobject_clean@plt>
   2a4c8:	ldr	r0, [r4, #28]
   2a4cc:	bl	12100 <myhtml_tag_clean@plt>
   2a4d0:	ldr	r0, [r4, #24]
   2a4d4:	bl	110e0 <mythread_queue_clean@plt>
   2a4d8:	ldr	r0, [r4, #8]
   2a4dc:	ldr	r1, [r0, #16]
   2a4e0:	bl	11ad0 <myhtml_token_attr_create@plt>
   2a4e4:	str	r0, [r4, #56]	; 0x38
   2a4e8:	vpop	{d8-d9}
   2a4ec:	pop	{r4, r5, r6, r7, fp, pc}

0002a4f0 <myhtml_tree_node_create@@Base>:
   2a4f0:	push	{r4, r5, fp, lr}
   2a4f4:	add	fp, sp, #8
   2a4f8:	mov	r4, r0
   2a4fc:	ldr	r0, [r0, #12]
   2a500:	mov	r2, #0
   2a504:	mov	r5, #0
   2a508:	ldr	r1, [r4, #48]	; 0x30
   2a50c:	bl	11cec <mcobject_async_malloc@plt>
   2a510:	vmov.i32	q8, #0	; 0x00000000
   2a514:	mov	r1, #36	; 0x24
   2a518:	mov	r2, r0
   2a51c:	str	r5, [r0, #32]
   2a520:	str	r4, [r0, #40]	; 0x28
   2a524:	vst1.32	{d16-d17}, [r2], r1
   2a528:	mov	r1, #1
   2a52c:	str	r1, [r0, #8]
   2a530:	add	r1, r0, #16
   2a534:	str	r5, [r2]
   2a538:	vst1.32	{d16-d17}, [r1]
   2a53c:	pop	{r4, r5, fp, pc}

0002a540 <myhtml_tree_active_formatting_clean@@Base>:
   2a540:	ldr	r0, [r0, #124]	; 0x7c
   2a544:	mov	r1, #0
   2a548:	str	r1, [r0, #4]
   2a54c:	bx	lr

0002a550 <myhtml_tree_open_elements_clean@@Base>:
   2a550:	ldr	r0, [r0, #128]	; 0x80
   2a554:	mov	r1, #0
   2a558:	str	r1, [r0, #4]
   2a55c:	bx	lr

0002a560 <myhtml_tree_list_clean@@Base>:
   2a560:	mov	r1, #0
   2a564:	str	r1, [r0, #4]
   2a568:	bx	lr

0002a56c <myhtml_tree_token_list_clean@@Base>:
   2a56c:	mov	r1, #0
   2a570:	str	r1, [r0, #4]
   2a574:	bx	lr

0002a578 <myhtml_tree_template_insertion_clean@@Base>:
   2a578:	ldr	r0, [r0, #140]	; 0x8c
   2a57c:	mov	r1, #0
   2a580:	str	r1, [r0, #4]
   2a584:	bx	lr

0002a588 <myhtml_tree_clean_all@@Base>:
   2a588:	push	{r4, r5, r6, r7, fp, lr}
   2a58c:	add	fp, sp, #16
   2a590:	vpush	{d8-d9}
   2a594:	mov	r4, r0
   2a598:	ldr	r0, [r0, #12]
   2a59c:	bl	120dc <mcobject_async_clean@plt>
   2a5a0:	ldr	r0, [r4, #8]
   2a5a4:	bl	1180c <myhtml_token_clean@plt>
   2a5a8:	ldr	r0, [r4, #4]
   2a5ac:	bl	11cf8 <mchar_async_clean@plt>
   2a5b0:	ldr	r0, [r4, #12]
   2a5b4:	ldr	r1, [r4, #48]	; 0x30
   2a5b8:	mov	r2, #0
   2a5bc:	mov	r5, #0
   2a5c0:	bl	11cec <mcobject_async_malloc@plt>
   2a5c4:	vmov.i32	q4, #0	; 0x00000000
   2a5c8:	mov	r6, #36	; 0x24
   2a5cc:	mov	r1, r0
   2a5d0:	mov	r7, #1
   2a5d4:	str	r5, [r0, #32]
   2a5d8:	str	r4, [r0, #40]	; 0x28
   2a5dc:	mov	r2, #0
   2a5e0:	vst1.32	{d8-d9}, [r1], r6
   2a5e4:	str	r7, [r0, #8]
   2a5e8:	add	r0, r0, #16
   2a5ec:	vst1.32	{d8-d9}, [r0]
   2a5f0:	str	r5, [r1]
   2a5f4:	ldr	r0, [r4, #12]
   2a5f8:	ldr	r1, [r4, #48]	; 0x30
   2a5fc:	bl	11cec <mcobject_async_malloc@plt>
   2a600:	mov	r1, r0
   2a604:	str	r5, [r0, #32]
   2a608:	str	r4, [r0, #40]	; 0x28
   2a60c:	add	r2, r0, #16
   2a610:	vst1.32	{d8-d9}, [r1], r6
   2a614:	str	r7, [r0, #8]
   2a618:	vst1.32	{d8-d9}, [r2]
   2a61c:	str	r5, [r1]
   2a620:	mov	r1, #2
   2a624:	str	r1, [r4, #180]	; 0xb4
   2a628:	str	r5, [r4, #68]	; 0x44
   2a62c:	str	r5, [r4, #76]	; 0x4c
   2a630:	str	r5, [r4, #80]	; 0x50
   2a634:	str	r0, [r4, #84]	; 0x54
   2a638:	add	r0, r4, #160	; 0xa0
   2a63c:	str	r5, [r4, #192]	; 0xc0
   2a640:	str	r5, [r4, #196]	; 0xc4
   2a644:	str	r5, [r4, #200]	; 0xc8
   2a648:	str	r5, [r4, #204]	; 0xcc
   2a64c:	str	r5, [r4, #156]	; 0x9c
   2a650:	strb	r5, [r4, #188]	; 0xbc
   2a654:	str	r5, [r4, #176]	; 0xb0
   2a658:	vst1.32	{d8-d9}, [r0]
   2a65c:	add	r0, r4, #88	; 0x58
   2a660:	str	r5, [r4, #101]	; 0x65
   2a664:	str	r5, [r4, #105]	; 0x69
   2a668:	str	r5, [r4, #60]	; 0x3c
   2a66c:	vst1.32	{d8-d9}, [r0]
   2a670:	str	r5, [r4, #112]	; 0x70
   2a674:	str	r5, [r4, #116]	; 0x74
   2a678:	str	r5, [r4, #120]	; 0x78
   2a67c:	str	r5, [r4, #152]	; 0x98
   2a680:	ldr	r0, [r4, #148]	; 0x94
   2a684:	bl	116d4 <myhtml_stream_buffer_clean@plt>
   2a688:	ldr	r0, [r4, #124]	; 0x7c
   2a68c:	str	r5, [r0, #4]
   2a690:	ldr	r0, [r4, #128]	; 0x80
   2a694:	str	r5, [r0, #4]
   2a698:	ldr	r0, [r4, #132]	; 0x84
   2a69c:	str	r5, [r0, #4]
   2a6a0:	ldr	r0, [r4, #136]	; 0x88
   2a6a4:	str	r5, [r0, #4]
   2a6a8:	ldr	r0, [r4, #140]	; 0x8c
   2a6ac:	str	r5, [r0, #4]
   2a6b0:	ldr	r0, [r4, #72]	; 0x48
   2a6b4:	bl	1201c <mcobject_clean@plt>
   2a6b8:	ldr	r0, [r4, #28]
   2a6bc:	bl	12100 <myhtml_tag_clean@plt>
   2a6c0:	ldr	r0, [r4, #20]
   2a6c4:	bl	11b60 <mythread_queue_list_entry_clean@plt>
   2a6c8:	ldr	r0, [r4]
   2a6cc:	ldr	r1, [r4, #20]
   2a6d0:	ldr	r0, [r0, #4]
   2a6d4:	bl	11e18 <mythread_queue_list_entry_make_batch@plt>
   2a6d8:	ldr	r0, [r4]
   2a6dc:	ldr	r1, [r4, #20]
   2a6e0:	ldr	r0, [r0]
   2a6e4:	bl	11fa4 <mythread_queue_list_entry_make_stream@plt>
   2a6e8:	ldr	r0, [r4, #8]
   2a6ec:	ldr	r1, [r0, #16]
   2a6f0:	bl	11ad0 <myhtml_token_attr_create@plt>
   2a6f4:	str	r0, [r4, #56]	; 0x38
   2a6f8:	vpop	{d8-d9}
   2a6fc:	pop	{r4, r5, r6, r7, fp, pc}

0002a700 <myhtml_tree_destroy@@Base>:
   2a700:	cmp	r0, #0
   2a704:	beq	2a800 <myhtml_tree_destroy@@Base+0x100>
   2a708:	push	{r4, r5, fp, lr}
   2a70c:	add	fp, sp, #8
   2a710:	mov	r4, r0
   2a714:	ldr	r0, [r0, #28]
   2a718:	bl	11f20 <myhtml_tag_destroy@plt>
   2a71c:	str	r0, [r4, #28]
   2a720:	mov	r1, #1
   2a724:	ldr	r0, [r4, #124]	; 0x7c
   2a728:	bl	11914 <myhtml_tree_list_destroy@plt>
   2a72c:	str	r0, [r4, #124]	; 0x7c
   2a730:	mov	r1, #1
   2a734:	ldr	r0, [r4, #128]	; 0x80
   2a738:	bl	11914 <myhtml_tree_list_destroy@plt>
   2a73c:	str	r0, [r4, #128]	; 0x80
   2a740:	mov	r1, #1
   2a744:	ldr	r0, [r4, #132]	; 0x84
   2a748:	bl	11914 <myhtml_tree_list_destroy@plt>
   2a74c:	str	r0, [r4, #132]	; 0x84
   2a750:	mov	r1, #1
   2a754:	ldr	r0, [r4, #136]	; 0x88
   2a758:	bl	11008 <myhtml_tree_token_list_destroy@plt>
   2a75c:	str	r0, [r4, #136]	; 0x88
   2a760:	mov	r0, r4
   2a764:	bl	11f14 <myhtml_tree_template_insertion_destroy@plt>
   2a768:	mov	r5, #0
   2a76c:	mov	r1, #1
   2a770:	str	r5, [r4, #140]	; 0x8c
   2a774:	ldr	r0, [r4, #16]
   2a778:	bl	1147c <mcsync_destroy@plt>
   2a77c:	str	r0, [r4, #16]
   2a780:	mov	r1, #1
   2a784:	ldr	r0, [r4, #12]
   2a788:	bl	11c80 <mcobject_async_destroy@plt>
   2a78c:	str	r0, [r4, #12]
   2a790:	ldr	r0, [r4, #8]
   2a794:	bl	11998 <myhtml_token_destroy@plt>
   2a798:	str	r0, [r4, #8]
   2a79c:	mov	r1, #1
   2a7a0:	ldr	r0, [r4, #4]
   2a7a4:	bl	11e90 <mchar_async_destroy@plt>
   2a7a8:	str	r0, [r4, #4]
   2a7ac:	mov	r1, #1
   2a7b0:	ldr	r0, [r4, #148]	; 0x94
   2a7b4:	bl	110a4 <myhtml_stream_buffer_destroy@plt>
   2a7b8:	str	r0, [r4, #148]	; 0x94
   2a7bc:	ldr	r0, [r4, #24]
   2a7c0:	bl	11584 <mythread_queue_destroy@plt>
   2a7c4:	str	r0, [r4, #24]
   2a7c8:	mov	r1, #1
   2a7cc:	ldr	r0, [r4, #72]	; 0x48
   2a7d0:	bl	11134 <mcobject_destroy@plt>
   2a7d4:	str	r0, [r4, #72]	; 0x48
   2a7d8:	ldr	r0, [r4, #208]	; 0xd0
   2a7dc:	cmp	r0, #0
   2a7e0:	beq	2a7ec <myhtml_tree_destroy@@Base+0xec>
   2a7e4:	bl	11eb4 <mycore_free@plt>
   2a7e8:	str	r5, [r4, #208]	; 0xd0
   2a7ec:	ldr	r0, [r4, #144]	; 0x90
   2a7f0:	bl	11eb4 <mycore_free@plt>
   2a7f4:	mov	r0, r4
   2a7f8:	bl	11eb4 <mycore_free@plt>
   2a7fc:	pop	{r4, r5, fp, lr}
   2a800:	mov	r0, #0
   2a804:	bx	lr

0002a808 <myhtml_tree_active_formatting_destroy@@Base>:
   2a808:	ldr	r0, [r0, #124]	; 0x7c
   2a80c:	mov	r1, #1
   2a810:	b	2a820 <myhtml_tree_list_destroy@@Base>

0002a814 <myhtml_tree_open_elements_destroy@@Base>:
   2a814:	ldr	r0, [r0, #128]	; 0x80
   2a818:	mov	r1, #1
   2a81c:	b	2a820 <myhtml_tree_list_destroy@@Base>

0002a820 <myhtml_tree_list_destroy@@Base>:
   2a820:	push	{r4, r5, r6, sl, fp, lr}
   2a824:	add	fp, sp, #16
   2a828:	mov	r4, #0
   2a82c:	cmp	r0, #0
   2a830:	beq	2a864 <myhtml_tree_list_destroy@@Base+0x44>
   2a834:	mov	r5, r0
   2a838:	ldr	r0, [r0]
   2a83c:	mov	r6, r1
   2a840:	cmp	r0, #0
   2a844:	beq	2a84c <myhtml_tree_list_destroy@@Base+0x2c>
   2a848:	bl	11eb4 <mycore_free@plt>
   2a84c:	cmp	r6, #0
   2a850:	beq	2a860 <myhtml_tree_list_destroy@@Base+0x40>
   2a854:	mov	r0, r5
   2a858:	bl	11eb4 <mycore_free@plt>
   2a85c:	b	2a864 <myhtml_tree_list_destroy@@Base+0x44>
   2a860:	mov	r4, r5
   2a864:	mov	r0, r4
   2a868:	pop	{r4, r5, r6, sl, fp, pc}

0002a86c <myhtml_tree_token_list_destroy@@Base>:
   2a86c:	push	{r4, r5, r6, sl, fp, lr}
   2a870:	add	fp, sp, #16
   2a874:	mov	r4, #0
   2a878:	cmp	r0, #0
   2a87c:	beq	2a8b0 <myhtml_tree_token_list_destroy@@Base+0x44>
   2a880:	mov	r5, r0
   2a884:	ldr	r0, [r0]
   2a888:	mov	r6, r1
   2a88c:	cmp	r0, #0
   2a890:	beq	2a898 <myhtml_tree_token_list_destroy@@Base+0x2c>
   2a894:	bl	11eb4 <mycore_free@plt>
   2a898:	cmp	r6, #0
   2a89c:	beq	2a8ac <myhtml_tree_token_list_destroy@@Base+0x40>
   2a8a0:	mov	r0, r5
   2a8a4:	bl	11eb4 <mycore_free@plt>
   2a8a8:	b	2a8b0 <myhtml_tree_token_list_destroy@@Base+0x44>
   2a8ac:	mov	r4, r5
   2a8b0:	mov	r0, r4
   2a8b4:	pop	{r4, r5, r6, sl, fp, pc}

0002a8b8 <myhtml_tree_template_insertion_destroy@@Base>:
   2a8b8:	push	{r4, sl, fp, lr}
   2a8bc:	add	fp, sp, #8
   2a8c0:	mov	r4, r0
   2a8c4:	ldr	r0, [r0, #140]	; 0x8c
   2a8c8:	cmp	r0, #0
   2a8cc:	beq	2a8f4 <myhtml_tree_template_insertion_destroy@@Base+0x3c>
   2a8d0:	ldr	r1, [r0]
   2a8d4:	cmp	r1, #0
   2a8d8:	beq	2a8f0 <myhtml_tree_template_insertion_destroy@@Base+0x38>
   2a8dc:	mov	r0, r1
   2a8e0:	bl	11eb4 <mycore_free@plt>
   2a8e4:	ldr	r0, [r4, #140]	; 0x8c
   2a8e8:	cmp	r0, #0
   2a8ec:	beq	2a8f4 <myhtml_tree_template_insertion_destroy@@Base+0x3c>
   2a8f0:	bl	11eb4 <mycore_free@plt>
   2a8f4:	mov	r0, #0
   2a8f8:	pop	{r4, sl, fp, pc}

0002a8fc <myhtml_tree_temp_tag_name_destroy@@Base>:
   2a8fc:	push	{r4, r5, r6, sl, fp, lr}
   2a900:	add	fp, sp, #16
   2a904:	mov	r4, #0
   2a908:	cmp	r0, #0
   2a90c:	beq	2a948 <myhtml_tree_temp_tag_name_destroy@@Base+0x4c>
   2a910:	mov	r5, r0
   2a914:	ldr	r0, [r0]
   2a918:	mov	r6, r1
   2a91c:	cmp	r0, #0
   2a920:	beq	2a930 <myhtml_tree_temp_tag_name_destroy@@Base+0x34>
   2a924:	bl	11eb4 <mycore_free@plt>
   2a928:	mov	r0, #0
   2a92c:	str	r0, [r5]
   2a930:	cmp	r6, #0
   2a934:	beq	2a944 <myhtml_tree_temp_tag_name_destroy@@Base+0x48>
   2a938:	mov	r0, r5
   2a93c:	bl	11eb4 <mycore_free@plt>
   2a940:	b	2a948 <myhtml_tree_temp_tag_name_destroy@@Base+0x4c>
   2a944:	mov	r4, r5
   2a948:	mov	r0, r4
   2a94c:	pop	{r4, r5, r6, sl, fp, pc}

0002a950 <myhtml_tree_node_clean@@Base>:
   2a950:	vmov.i32	q8, #0	; 0x00000000
   2a954:	add	r1, r0, #28
   2a958:	vst1.32	{d16-d17}, [r1]
   2a95c:	add	r1, r0, #16
   2a960:	vst1.32	{d16-d17}, [r1]
   2a964:	mov	r1, #8
   2a968:	vst1.32	{d16-d17}, [r0], r1
   2a96c:	mov	r1, #1
   2a970:	str	r1, [r0]
   2a974:	bx	lr

0002a978 <myhtml_tree_parse_flags@@Base>:
   2a978:	ldr	r0, [r0, #184]	; 0xb8
   2a97c:	bx	lr

0002a980 <myhtml_tree_parse_flags_set@@Base>:
   2a980:	str	r1, [r0, #184]	; 0xb8
   2a984:	bx	lr

0002a988 <myhtml_tree_get_myhtml@@Base>:
   2a988:	cmp	r0, #0
   2a98c:	ldrne	r0, [r0]
   2a990:	moveq	r0, #0
   2a994:	bx	lr

0002a998 <myhtml_tree_get_tag@@Base>:
   2a998:	cmp	r0, #0
   2a99c:	ldrne	r0, [r0, #28]
   2a9a0:	moveq	r0, #0
   2a9a4:	bx	lr

0002a9a8 <myhtml_tree_get_document@@Base>:
   2a9a8:	ldr	r0, [r0, #84]	; 0x54
   2a9ac:	bx	lr

0002a9b0 <myhtml_tree_get_node_html@@Base>:
   2a9b0:	ldr	r0, [r0, #96]	; 0x60
   2a9b4:	bx	lr

0002a9b8 <myhtml_tree_get_node_body@@Base>:
   2a9b8:	ldr	r0, [r0, #100]	; 0x64
   2a9bc:	bx	lr

0002a9c0 <myhtml_tree_get_node_head@@Base>:
   2a9c0:	ldr	r0, [r0, #92]	; 0x5c
   2a9c4:	bx	lr

0002a9c8 <myhtml_tree_get_mchar@@Base>:
   2a9c8:	ldr	r0, [r0, #4]
   2a9cc:	bx	lr

0002a9d0 <myhtml_tree_get_mchar_node_id@@Base>:
   2a9d0:	ldr	r0, [r0, #52]	; 0x34
   2a9d4:	bx	lr

0002a9d8 <myhtml_tree_node_add_child@@Base>:
   2a9d8:	ldr	r2, [r0, #28]
   2a9dc:	cmp	r2, #0
   2a9e0:	streq	r1, [r0, #20]
   2a9e4:	strne	r1, [r2, #16]
   2a9e8:	strne	r2, [r1, #12]
   2a9ec:	str	r0, [r1, #24]
   2a9f0:	str	r1, [r0, #28]
   2a9f4:	ldr	r0, [r1, #40]	; 0x28
   2a9f8:	ldr	r3, [r0, #236]	; 0xec
   2a9fc:	cmp	r3, #0
   2aa00:	bxeq	lr
   2aa04:	ldr	r2, [r0, #244]	; 0xf4
   2aa08:	bx	r3

0002aa0c <myhtml_tree_node_insert_before@@Base>:
   2aa0c:	ldr	r2, [r0, #12]
   2aa10:	cmp	r2, #0
   2aa14:	beq	2aa28 <myhtml_tree_node_insert_before@@Base+0x1c>
   2aa18:	str	r1, [r2, #16]
   2aa1c:	str	r2, [r1, #12]
   2aa20:	ldr	r2, [r0, #24]
   2aa24:	b	2aa30 <myhtml_tree_node_insert_before@@Base+0x24>
   2aa28:	ldr	r2, [r0, #24]
   2aa2c:	str	r1, [r2, #20]
   2aa30:	str	r0, [r1, #16]
   2aa34:	str	r2, [r1, #24]
   2aa38:	str	r1, [r0, #12]
   2aa3c:	ldr	r0, [r1, #40]	; 0x28
   2aa40:	ldr	r3, [r0, #236]	; 0xec
   2aa44:	cmp	r3, #0
   2aa48:	bxeq	lr
   2aa4c:	ldr	r2, [r0, #244]	; 0xf4
   2aa50:	bx	r3

0002aa54 <myhtml_tree_node_insert_after@@Base>:
   2aa54:	ldr	r2, [r0, #16]
   2aa58:	cmp	r2, #0
   2aa5c:	beq	2aa70 <myhtml_tree_node_insert_after@@Base+0x1c>
   2aa60:	str	r1, [r2, #12]
   2aa64:	str	r2, [r1, #16]
   2aa68:	ldr	r2, [r0, #24]
   2aa6c:	b	2aa78 <myhtml_tree_node_insert_after@@Base+0x24>
   2aa70:	ldr	r2, [r0, #24]
   2aa74:	str	r1, [r2, #28]
   2aa78:	str	r0, [r1, #12]
   2aa7c:	str	r2, [r1, #24]
   2aa80:	str	r1, [r0, #16]
   2aa84:	ldr	r0, [r1, #40]	; 0x28
   2aa88:	ldr	r3, [r0, #236]	; 0xec
   2aa8c:	cmp	r3, #0
   2aa90:	bxeq	lr
   2aa94:	ldr	r2, [r0, #244]	; 0xf4
   2aa98:	bx	r3

0002aa9c <myhtml_tree_node_find_parent_by_tag_id@@Base>:
   2aa9c:	ldr	r0, [r0, #24]
   2aaa0:	cmp	r0, #0
   2aaa4:	ldrne	r2, [r0, #4]
   2aaa8:	cmpne	r2, r1
   2aaac:	bne	2aa9c <myhtml_tree_node_find_parent_by_tag_id@@Base>
   2aab0:	bx	lr

0002aab4 <myhtml_tree_node_remove@@Base>:
   2aab4:	push	{r4, sl, fp, lr}
   2aab8:	add	fp, sp, #8
   2aabc:	mov	r4, r0
   2aac0:	ldr	r0, [r0, #16]
   2aac4:	cmp	r0, #0
   2aac8:	beq	2aad4 <myhtml_tree_node_remove@@Base+0x20>
   2aacc:	add	r1, r0, #12
   2aad0:	b	2aae4 <myhtml_tree_node_remove@@Base+0x30>
   2aad4:	ldr	r1, [r4, #24]
   2aad8:	cmp	r1, #0
   2aadc:	beq	2aaec <myhtml_tree_node_remove@@Base+0x38>
   2aae0:	add	r1, r1, #28
   2aae4:	ldr	r2, [r4, #12]
   2aae8:	str	r2, [r1]
   2aaec:	ldr	r1, [r4, #12]
   2aaf0:	cmp	r1, #0
   2aaf4:	beq	2ab00 <myhtml_tree_node_remove@@Base+0x4c>
   2aaf8:	add	r1, r1, #16
   2aafc:	b	2ab10 <myhtml_tree_node_remove@@Base+0x5c>
   2ab00:	ldr	r1, [r4, #24]
   2ab04:	cmp	r1, #0
   2ab08:	beq	2ab14 <myhtml_tree_node_remove@@Base+0x60>
   2ab0c:	add	r1, r1, #20
   2ab10:	str	r0, [r1]
   2ab14:	ldr	r0, [r4, #40]	; 0x28
   2ab18:	ldr	r3, [r0, #240]	; 0xf0
   2ab1c:	cmp	r3, #0
   2ab20:	beq	2ab30 <myhtml_tree_node_remove@@Base+0x7c>
   2ab24:	ldr	r2, [r0, #248]	; 0xf8
   2ab28:	mov	r1, r4
   2ab2c:	blx	r3
   2ab30:	mov	r0, #0
   2ab34:	str	r0, [r4, #24]
   2ab38:	str	r0, [r4, #12]
   2ab3c:	str	r0, [r4, #16]
   2ab40:	mov	r0, r4
   2ab44:	pop	{r4, sl, fp, pc}

0002ab48 <myhtml_tree_node_free@@Base>:
   2ab48:	cmp	r0, #0
   2ab4c:	bxeq	lr
   2ab50:	push	{r4, sl, fp, lr}
   2ab54:	add	fp, sp, #8
   2ab58:	ldr	r1, [r0, #32]
   2ab5c:	mov	r4, r0
   2ab60:	cmp	r1, #0
   2ab64:	beq	2ab84 <myhtml_tree_node_free@@Base+0x3c>
   2ab68:	ldr	r0, [r4, #40]	; 0x28
   2ab6c:	ldr	r0, [r0, #8]
   2ab70:	bl	119d4 <myhtml_token_attr_delete_all@plt>
   2ab74:	ldr	r0, [r4, #40]	; 0x28
   2ab78:	ldr	r1, [r4, #32]
   2ab7c:	ldr	r0, [r0, #8]
   2ab80:	bl	12034 <myhtml_token_delete@plt>
   2ab84:	ldr	r0, [r4, #40]	; 0x28
   2ab88:	mov	r1, r4
   2ab8c:	ldr	r0, [r0, #12]
   2ab90:	pop	{r4, sl, fp, lr}
   2ab94:	b	11374 <mcobject_async_free@plt>

0002ab98 <myhtml_tree_node_delete@@Base>:
   2ab98:	cmp	r0, #0
   2ab9c:	bxeq	lr
   2aba0:	push	{fp, lr}
   2aba4:	mov	fp, sp
   2aba8:	bl	11ed8 <myhtml_tree_node_remove@plt>
   2abac:	pop	{fp, lr}
   2abb0:	b	2ab48 <myhtml_tree_node_free@@Base>

0002abb4 <myhtml_tree_node_delete_recursive@@Base>:
   2abb4:	cmp	r0, #0
   2abb8:	bxeq	lr
   2abbc:	push	{r4, sl, fp, lr}
   2abc0:	add	fp, sp, #8
   2abc4:	mov	r4, r0
   2abc8:	ldr	r0, [r0, #20]
   2abcc:	cmp	r0, #0
   2abd0:	blne	2abe4 <myhtml_tree_node_delete_recursive@@Base+0x30>
   2abd4:	mov	r0, r4
   2abd8:	bl	11ed8 <myhtml_tree_node_remove@plt>
   2abdc:	pop	{r4, sl, fp, lr}
   2abe0:	b	2ab48 <myhtml_tree_node_free@@Base>
   2abe4:	push	{r4, sl, fp, lr}
   2abe8:	add	fp, sp, #8
   2abec:	cmp	r0, #0
   2abf0:	popeq	{r4, sl, fp, pc}
   2abf4:	mov	r4, r0
   2abf8:	ldr	r0, [r4, #20]
   2abfc:	cmp	r0, #0
   2ac00:	blne	2abe4 <myhtml_tree_node_delete_recursive@@Base+0x30>
   2ac04:	ldr	r4, [r4, #16]
   2ac08:	cmp	r4, #0
   2ac0c:	beq	2ac20 <myhtml_tree_node_delete_recursive@@Base+0x6c>
   2ac10:	mov	r0, r4
   2ac14:	bl	11ed8 <myhtml_tree_node_remove@plt>
   2ac18:	bl	11df4 <myhtml_tree_node_free@plt>
   2ac1c:	b	2abf8 <myhtml_tree_node_delete_recursive@@Base+0x44>
   2ac20:	pop	{r4, sl, fp, pc}

0002ac24 <myhtml_tree_node_clone@@Base>:
   2ac24:	push	{r4, r5, r6, r7, fp, lr}
   2ac28:	add	fp, sp, #16
   2ac2c:	ldr	r7, [r0, #40]	; 0x28
   2ac30:	mov	r5, r0
   2ac34:	mov	r2, #0
   2ac38:	mov	r6, #0
   2ac3c:	ldr	r0, [r7, #12]
   2ac40:	ldr	r1, [r7, #48]	; 0x30
   2ac44:	bl	11cec <mcobject_async_malloc@plt>
   2ac48:	vmov.i32	q8, #0	; 0x00000000
   2ac4c:	mov	r4, r0
   2ac50:	str	r7, [r0, #40]	; 0x28
   2ac54:	str	r6, [r0, #32]
   2ac58:	mov	r0, #36	; 0x24
   2ac5c:	mov	r1, r4
   2ac60:	vst1.32	{d16-d17}, [r1], r0
   2ac64:	mov	r0, #1
   2ac68:	str	r0, [r4, #8]
   2ac6c:	add	r0, r4, #16
   2ac70:	str	r6, [r1]
   2ac74:	vst1.32	{d16-d17}, [r0]
   2ac78:	ldr	r1, [r5, #32]
   2ac7c:	cmp	r1, #0
   2ac80:	beq	2ac94 <myhtml_tree_node_clone@@Base+0x70>
   2ac84:	ldr	r0, [r5, #40]	; 0x28
   2ac88:	ldr	r0, [r0, #8]
   2ac8c:	bl	118b4 <myhtml_token_node_wait_for_done@plt>
   2ac90:	ldr	r6, [r5, #32]
   2ac94:	ldr	r1, [r5, #40]	; 0x28
   2ac98:	ldr	r0, [r1, #8]
   2ac9c:	ldr	r2, [r1, #40]	; 0x28
   2aca0:	ldr	r3, [r1, #44]	; 0x2c
   2aca4:	mov	r1, r6
   2aca8:	bl	11260 <myhtml_token_node_clone@plt>
   2acac:	str	r0, [r4, #32]
   2acb0:	cmp	r0, #0
   2acb4:	ldr	r1, [r5, #4]
   2acb8:	str	r1, [r4, #4]
   2acbc:	ldr	r1, [r5, #8]
   2acc0:	str	r1, [r4, #8]
   2acc4:	ldrne	r1, [r0, #48]	; 0x30
   2acc8:	orrne	r1, r1, #4
   2accc:	strne	r1, [r0, #48]	; 0x30
   2acd0:	mov	r0, r4
   2acd4:	pop	{r4, r5, r6, r7, fp, pc}

0002acd8 <myhtml_tree_node_insert_by_mode@@Base>:
   2acd8:	cmp	r2, #1
   2acdc:	beq	2ad1c <myhtml_tree_node_insert_by_mode@@Base+0x44>
   2ace0:	cmp	r2, #0
   2ace4:	bne	2ad20 <myhtml_tree_node_insert_by_mode@@Base+0x48>
   2ace8:	ldr	r2, [r0, #28]
   2acec:	cmp	r2, #0
   2acf0:	streq	r1, [r0, #20]
   2acf4:	strne	r1, [r2, #16]
   2acf8:	strne	r2, [r1, #12]
   2acfc:	str	r0, [r1, #24]
   2ad00:	str	r1, [r0, #28]
   2ad04:	ldr	r0, [r1, #40]	; 0x28
   2ad08:	ldr	r3, [r0, #236]	; 0xec
   2ad0c:	cmp	r3, #0
   2ad10:	bxeq	lr
   2ad14:	ldr	r2, [r0, #244]	; 0xf4
   2ad18:	bx	r3
   2ad1c:	b	2aa0c <myhtml_tree_node_insert_before@@Base>
   2ad20:	b	2aa54 <myhtml_tree_node_insert_after@@Base>

0002ad24 <myhtml_tree_node_insert_by_token@@Base>:
   2ad24:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ad28:	add	fp, sp, #24
   2ad2c:	sub	sp, sp, #8
   2ad30:	mov	r4, r0
   2ad34:	mov	r7, r1
   2ad38:	ldr	r0, [r0, #12]
   2ad3c:	mov	r6, r2
   2ad40:	mov	r2, #0
   2ad44:	mov	r8, #0
   2ad48:	ldr	r1, [r4, #48]	; 0x30
   2ad4c:	bl	11cec <mcobject_async_malloc@plt>
   2ad50:	vmov.i32	q8, #0	; 0x00000000
   2ad54:	mov	r5, r0
   2ad58:	str	r8, [r0, #32]
   2ad5c:	str	r4, [r0, #40]	; 0x28
   2ad60:	add	r0, r0, #16
   2ad64:	add	r2, sp, #4
   2ad68:	mov	r1, r5
   2ad6c:	vst1.32	{d16-d17}, [r0]
   2ad70:	mov	r0, #36	; 0x24
   2ad74:	vst1.32	{d16-d17}, [r1], r0
   2ad78:	str	r8, [r1]
   2ad7c:	mov	r1, #0
   2ad80:	ldr	r0, [r7]
   2ad84:	str	r7, [r5, #32]
   2ad88:	stmib	r5, {r0, r6}
   2ad8c:	mov	r0, r4
   2ad90:	bl	11f50 <myhtml_tree_appropriate_place_inserting@plt>
   2ad94:	ldr	r2, [sp, #4]
   2ad98:	mov	r1, r5
   2ad9c:	bl	115e4 <myhtml_tree_node_insert_by_mode@plt>
   2ada0:	ldr	r0, [r4, #128]	; 0x80
   2ada4:	mov	r1, r5
   2ada8:	bl	114e8 <myhtml_tree_list_append@plt>
   2adac:	mov	r0, r5
   2adb0:	sub	sp, fp, #24
   2adb4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002adb8 <myhtml_tree_appropriate_place_inserting@@Base>:
   2adb8:	push	{r4, sl, fp, lr}
   2adbc:	add	fp, sp, #8
   2adc0:	mov	r3, #0
   2adc4:	cmp	r1, #0
   2adc8:	str	r3, [r2]
   2adcc:	bne	2adf4 <myhtml_tree_appropriate_place_inserting@@Base+0x3c>
   2add0:	ldr	r3, [r0, #128]	; 0x80
   2add4:	ldr	r1, [r3, #4]
   2add8:	cmp	r1, #0
   2addc:	mov	r1, #0
   2ade0:	beq	2adf4 <myhtml_tree_appropriate_place_inserting@@Base+0x3c>
   2ade4:	ldr	r1, [r3]
   2ade8:	ldr	r3, [r3, #4]
   2adec:	add	r1, r1, r3, lsl #2
   2adf0:	ldr	r1, [r1, #-4]
   2adf4:	ldrb	r3, [r0, #188]	; 0xbc
   2adf8:	cmp	r3, #0
   2adfc:	beq	2af1c <myhtml_tree_appropriate_place_inserting@@Base+0x164>
   2ae00:	ldr	r3, [r1, #8]
   2ae04:	cmp	r3, #1
   2ae08:	bne	2af1c <myhtml_tree_appropriate_place_inserting@@Base+0x164>
   2ae0c:	ldr	r3, [r1, #4]
   2ae10:	sub	lr, r3, #125	; 0x7d
   2ae14:	cmp	lr, #10
   2ae18:	bhi	2af1c <myhtml_tree_appropriate_place_inserting@@Base+0x164>
   2ae1c:	mov	ip, #1
   2ae20:	movw	r3, #1187	; 0x4a3
   2ae24:	tst	r3, ip, lsl lr
   2ae28:	beq	2af1c <myhtml_tree_appropriate_place_inserting@@Base+0x164>
   2ae2c:	ldr	r3, [r0, #128]	; 0x80
   2ae30:	mov	lr, #0
   2ae34:	ldr	r0, [r3, #4]
   2ae38:	ldr	ip, [r3]
   2ae3c:	cmp	r0, #0
   2ae40:	beq	2ae78 <myhtml_tree_appropriate_place_inserting@@Base+0xc0>
   2ae44:	sub	r0, r0, #1
   2ae48:	ldr	r1, [ip, r0, lsl #2]
   2ae4c:	ldr	r4, [r1, #4]
   2ae50:	cmp	r4, #128	; 0x80
   2ae54:	bne	2ae64 <myhtml_tree_appropriate_place_inserting@@Base+0xac>
   2ae58:	ldr	r4, [r1, #8]
   2ae5c:	cmp	r4, #1
   2ae60:	beq	2ae7c <myhtml_tree_appropriate_place_inserting@@Base+0xc4>
   2ae64:	sub	r0, r0, #1
   2ae68:	cmn	r0, #1
   2ae6c:	bne	2ae48 <myhtml_tree_appropriate_place_inserting@@Base+0x90>
   2ae70:	mov	r0, #0
   2ae74:	b	2ae78 <myhtml_tree_appropriate_place_inserting@@Base+0xc0>
   2ae78:	mov	r1, #0
   2ae7c:	ldr	r3, [r3, #4]
   2ae80:	cmp	r3, #0
   2ae84:	beq	2aec0 <myhtml_tree_appropriate_place_inserting@@Base+0x108>
   2ae88:	sub	r3, r3, #1
   2ae8c:	ldr	lr, [ip, r3, lsl #2]
   2ae90:	ldr	r4, [lr, #4]
   2ae94:	cmp	r4, #125	; 0x7d
   2ae98:	bne	2aea8 <myhtml_tree_appropriate_place_inserting@@Base+0xf0>
   2ae9c:	ldr	r4, [lr, #8]
   2aea0:	cmp	r4, #1
   2aea4:	beq	2aec0 <myhtml_tree_appropriate_place_inserting@@Base+0x108>
   2aea8:	sub	r3, r3, #1
   2aeac:	cmn	r3, #1
   2aeb0:	bne	2ae8c <myhtml_tree_appropriate_place_inserting@@Base+0xd4>
   2aeb4:	mov	r3, #0
   2aeb8:	mov	lr, #0
   2aebc:	b	2aec0 <myhtml_tree_appropriate_place_inserting@@Base+0x108>
   2aec0:	cmp	r1, #0
   2aec4:	beq	2aedc <myhtml_tree_appropriate_place_inserting@@Base+0x124>
   2aec8:	cmp	r0, r3
   2aecc:	bhi	2af1c <myhtml_tree_appropriate_place_inserting@@Base+0x164>
   2aed0:	cmp	lr, #0
   2aed4:	bne	2aee4 <myhtml_tree_appropriate_place_inserting@@Base+0x12c>
   2aed8:	b	2af1c <myhtml_tree_appropriate_place_inserting@@Base+0x164>
   2aedc:	cmp	lr, #0
   2aee0:	beq	2af18 <myhtml_tree_appropriate_place_inserting@@Base+0x160>
   2aee4:	ldr	r0, [lr, #24]
   2aee8:	cmp	r0, #0
   2aeec:	beq	2af0c <myhtml_tree_appropriate_place_inserting@@Base+0x154>
   2aef0:	ldr	r1, [lr, #12]
   2aef4:	mov	r0, #2
   2aef8:	cmp	r1, #0
   2aefc:	movweq	r0, #1
   2af00:	moveq	r1, lr
   2af04:	str	r0, [r2]
   2af08:	b	2af1c <myhtml_tree_appropriate_place_inserting@@Base+0x164>
   2af0c:	add	r0, ip, r3, lsl #2
   2af10:	ldr	r1, [r0, #-4]
   2af14:	b	2af1c <myhtml_tree_appropriate_place_inserting@@Base+0x164>
   2af18:	ldr	r1, [ip]
   2af1c:	mov	r0, r1
   2af20:	pop	{r4, sl, fp, pc}

0002af24 <myhtml_tree_open_elements_append@@Base>:
   2af24:	ldr	r0, [r0, #128]	; 0x80
   2af28:	b	2b608 <myhtml_tree_list_append@@Base>

0002af2c <myhtml_tree_node_insert@@Base>:
   2af2c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2af30:	add	fp, sp, #24
   2af34:	sub	sp, sp, #8
   2af38:	mov	r4, r0
   2af3c:	mov	r7, r1
   2af40:	ldr	r0, [r0, #12]
   2af44:	mov	r6, r2
   2af48:	mov	r2, #0
   2af4c:	mov	r8, #0
   2af50:	ldr	r1, [r4, #48]	; 0x30
   2af54:	bl	11cec <mcobject_async_malloc@plt>
   2af58:	vmov.i32	q8, #0	; 0x00000000
   2af5c:	mov	r5, r0
   2af60:	str	r8, [r0, #32]
   2af64:	str	r4, [r0, #40]	; 0x28
   2af68:	mov	r0, #36	; 0x24
   2af6c:	add	r2, sp, #4
   2af70:	mov	r1, r5
   2af74:	vst1.32	{d16-d17}, [r1], r0
   2af78:	add	r0, r5, #16
   2af7c:	str	r7, [r5, #4]
   2af80:	str	r6, [r5, #8]
   2af84:	vst1.32	{d16-d17}, [r0]
   2af88:	str	r8, [r1]
   2af8c:	mov	r0, r4
   2af90:	mov	r1, #0
   2af94:	bl	11f50 <myhtml_tree_appropriate_place_inserting@plt>
   2af98:	ldr	r2, [sp, #4]
   2af9c:	mov	r1, r5
   2afa0:	bl	115e4 <myhtml_tree_node_insert_by_mode@plt>
   2afa4:	ldr	r0, [r4, #128]	; 0x80
   2afa8:	mov	r1, r5
   2afac:	bl	114e8 <myhtml_tree_list_append@plt>
   2afb0:	mov	r0, r5
   2afb4:	sub	sp, fp, #24
   2afb8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002afbc <myhtml_tree_node_insert_comment@@Base>:
   2afbc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2afc0:	add	fp, sp, #24
   2afc4:	sub	sp, sp, #8
   2afc8:	mov	r7, r0
   2afcc:	mov	r8, r1
   2afd0:	ldr	r0, [r0, #12]
   2afd4:	mov	r4, r2
   2afd8:	mov	r2, #0
   2afdc:	mov	r6, #0
   2afe0:	ldr	r1, [r7, #48]	; 0x30
   2afe4:	bl	11cec <mcobject_async_malloc@plt>
   2afe8:	vmov.i32	q8, #0	; 0x00000000
   2afec:	mov	r5, r0
   2aff0:	str	r8, [r0, #32]
   2aff4:	str	r7, [r0, #40]	; 0x28
   2aff8:	mov	r0, #36	; 0x24
   2affc:	cmp	r4, #0
   2b000:	mov	r2, #1
   2b004:	mov	r1, r5
   2b008:	vst1.32	{d16-d17}, [r1], r0
   2b00c:	mov	r0, #2
   2b010:	stmib	r5, {r0, r2}
   2b014:	add	r0, r5, #16
   2b018:	str	r6, [r1]
   2b01c:	vst1.32	{d16-d17}, [r0]
   2b020:	str	r6, [sp, #4]
   2b024:	bne	2b040 <myhtml_tree_node_insert_comment@@Base+0x84>
   2b028:	add	r2, sp, #4
   2b02c:	mov	r0, r7
   2b030:	mov	r1, #0
   2b034:	bl	11f50 <myhtml_tree_appropriate_place_inserting@plt>
   2b038:	ldr	r6, [sp, #4]
   2b03c:	mov	r4, r0
   2b040:	mov	r0, r4
   2b044:	mov	r1, r5
   2b048:	mov	r2, r6
   2b04c:	bl	115e4 <myhtml_tree_node_insert_by_mode@plt>
   2b050:	ldr	r0, [r4, #8]
   2b054:	str	r0, [r5, #8]
   2b058:	mov	r0, r5
   2b05c:	sub	sp, fp, #24
   2b060:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002b064 <myhtml_tree_node_insert_doctype@@Base>:
   2b064:	push	{r4, r5, r6, r7, fp, lr}
   2b068:	add	fp, sp, #16
   2b06c:	mov	r4, r0
   2b070:	mov	r6, r1
   2b074:	ldr	r0, [r0, #12]
   2b078:	mov	r2, #0
   2b07c:	mov	r7, #0
   2b080:	ldr	r1, [r4, #48]	; 0x30
   2b084:	bl	11cec <mcobject_async_malloc@plt>
   2b088:	vmov.i32	q8, #0	; 0x00000000
   2b08c:	mov	r5, r0
   2b090:	str	r6, [r0, #32]
   2b094:	str	r4, [r0, #40]	; 0x28
   2b098:	add	r0, r0, #16
   2b09c:	mov	r1, r5
   2b0a0:	vst1.32	{d16-d17}, [r0]
   2b0a4:	mov	r0, #36	; 0x24
   2b0a8:	vst1.32	{d16-d17}, [r1], r0
   2b0ac:	mov	r0, #1
   2b0b0:	str	r7, [r1]
   2b0b4:	mov	r1, #3
   2b0b8:	str	r1, [r5, #4]
   2b0bc:	str	r0, [r5, #8]
   2b0c0:	ldr	r0, [r4, #84]	; 0x54
   2b0c4:	ldr	r1, [r0, #28]
   2b0c8:	cmp	r1, #0
   2b0cc:	streq	r5, [r0, #20]
   2b0d0:	strne	r5, [r1, #16]
   2b0d4:	strne	r1, [r5, #12]
   2b0d8:	str	r0, [r5, #24]
   2b0dc:	str	r5, [r0, #28]
   2b0e0:	ldr	r3, [r4, #236]	; 0xec
   2b0e4:	cmp	r3, #0
   2b0e8:	beq	2b0fc <myhtml_tree_node_insert_doctype@@Base+0x98>
   2b0ec:	ldr	r2, [r4, #244]	; 0xf4
   2b0f0:	mov	r0, r4
   2b0f4:	mov	r1, r5
   2b0f8:	blx	r3
   2b0fc:	mov	r0, r5
   2b100:	pop	{r4, r5, r6, r7, fp, pc}

0002b104 <myhtml_tree_node_insert_root@@Base>:
   2b104:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b108:	add	fp, sp, #24
   2b10c:	mov	r4, r0
   2b110:	mov	r7, r1
   2b114:	ldr	r0, [r0, #12]
   2b118:	mov	r8, r2
   2b11c:	mov	r2, #0
   2b120:	mov	r6, #0
   2b124:	ldr	r1, [r4, #48]	; 0x30
   2b128:	bl	11cec <mcobject_async_malloc@plt>
   2b12c:	vmov.i32	q8, #0	; 0x00000000
   2b130:	mov	r5, r0
   2b134:	str	r6, [r0, #32]
   2b138:	str	r4, [r0, #40]	; 0x28
   2b13c:	mov	r0, #36	; 0x24
   2b140:	cmp	r7, #0
   2b144:	mov	r1, r5
   2b148:	vst1.32	{d16-d17}, [r1], r0
   2b14c:	mov	r0, #1
   2b150:	str	r0, [r5, #8]
   2b154:	add	r0, r5, #16
   2b158:	str	r6, [r1]
   2b15c:	vst1.32	{d16-d17}, [r0]
   2b160:	beq	2b16c <myhtml_tree_node_insert_root@@Base+0x68>
   2b164:	ldr	r0, [r7]
   2b168:	b	2b170 <myhtml_tree_node_insert_root@@Base+0x6c>
   2b16c:	mov	r0, #65	; 0x41
   2b170:	str	r7, [r5, #32]
   2b174:	stmib	r5, {r0, r8}
   2b178:	ldr	r0, [r4, #84]	; 0x54
   2b17c:	ldr	r1, [r0, #28]
   2b180:	cmp	r1, #0
   2b184:	streq	r5, [r0, #20]
   2b188:	strne	r5, [r1, #16]
   2b18c:	strne	r1, [r5, #12]
   2b190:	str	r0, [r5, #24]
   2b194:	str	r5, [r0, #28]
   2b198:	ldr	r3, [r4, #236]	; 0xec
   2b19c:	cmp	r3, #0
   2b1a0:	beq	2b1b4 <myhtml_tree_node_insert_root@@Base+0xb0>
   2b1a4:	ldr	r2, [r4, #244]	; 0xf4
   2b1a8:	mov	r0, r4
   2b1ac:	mov	r1, r5
   2b1b0:	blx	r3
   2b1b4:	ldr	r0, [r4, #128]	; 0x80
   2b1b8:	mov	r1, r5
   2b1bc:	bl	114e8 <myhtml_tree_list_append@plt>
   2b1c0:	mov	r0, r5
   2b1c4:	str	r5, [r4, #96]	; 0x60
   2b1c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002b1cc <myhtml_tree_node_insert_text@@Base>:
   2b1cc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2b1d0:	add	fp, sp, #24
   2b1d4:	sub	sp, sp, #8
   2b1d8:	mov	r8, r1
   2b1dc:	add	r2, sp, #4
   2b1e0:	mov	r1, #0
   2b1e4:	mov	r6, r0
   2b1e8:	mov	r4, #0
   2b1ec:	bl	11f50 <myhtml_tree_appropriate_place_inserting@plt>
   2b1f0:	mov	r5, r0
   2b1f4:	ldr	r0, [r6, #84]	; 0x54
   2b1f8:	cmp	r5, r0
   2b1fc:	beq	2b308 <myhtml_tree_node_insert_text@@Base+0x13c>
   2b200:	ldr	r7, [sp, #4]
   2b204:	cmp	r7, #1
   2b208:	beq	2b23c <myhtml_tree_node_insert_text@@Base+0x70>
   2b20c:	cmp	r7, #2
   2b210:	bne	2b26c <myhtml_tree_node_insert_text@@Base+0xa0>
   2b214:	ldr	r0, [r5, #4]
   2b218:	cmp	r0, #1
   2b21c:	bne	2b2a8 <myhtml_tree_node_insert_text@@Base+0xdc>
   2b220:	ldr	r1, [r5, #32]
   2b224:	cmp	r1, #0
   2b228:	beq	2b2a8 <myhtml_tree_node_insert_text@@Base+0xdc>
   2b22c:	mov	r0, r6
   2b230:	mov	r2, r8
   2b234:	mov	r3, #0
   2b238:	b	2b260 <myhtml_tree_node_insert_text@@Base+0x94>
   2b23c:	ldr	r0, [r5, #4]
   2b240:	cmp	r0, #1
   2b244:	bne	2b2a8 <myhtml_tree_node_insert_text@@Base+0xdc>
   2b248:	ldr	r2, [r5, #32]
   2b24c:	cmp	r2, #0
   2b250:	beq	2b2a8 <myhtml_tree_node_insert_text@@Base+0xdc>
   2b254:	mov	r0, r6
   2b258:	mov	r1, r8
   2b25c:	mov	r3, #1
   2b260:	bl	116ec <myhtml_token_merged_two_token_string@plt>
   2b264:	mov	r4, r5
   2b268:	b	2b308 <myhtml_tree_node_insert_text@@Base+0x13c>
   2b26c:	ldr	r0, [r5, #28]
   2b270:	cmp	r0, #0
   2b274:	beq	2b2a8 <myhtml_tree_node_insert_text@@Base+0xdc>
   2b278:	ldr	r1, [r0, #4]
   2b27c:	cmp	r1, #1
   2b280:	bne	2b2a8 <myhtml_tree_node_insert_text@@Base+0xdc>
   2b284:	ldr	r1, [r0, #32]
   2b288:	cmp	r1, #0
   2b28c:	beq	2b2a8 <myhtml_tree_node_insert_text@@Base+0xdc>
   2b290:	mov	r0, r6
   2b294:	mov	r2, r8
   2b298:	mov	r3, #0
   2b29c:	bl	116ec <myhtml_token_merged_two_token_string@plt>
   2b2a0:	ldr	r4, [r5, #28]
   2b2a4:	b	2b308 <myhtml_tree_node_insert_text@@Base+0x13c>
   2b2a8:	ldr	r0, [r6, #12]
   2b2ac:	ldr	r1, [r6, #48]	; 0x30
   2b2b0:	mov	r2, #0
   2b2b4:	mov	r9, #0
   2b2b8:	bl	11cec <mcobject_async_malloc@plt>
   2b2bc:	vmov.i32	q8, #0	; 0x00000000
   2b2c0:	mov	r4, r0
   2b2c4:	str	r8, [r0, #32]
   2b2c8:	str	r6, [r0, #40]	; 0x28
   2b2cc:	mov	r0, #36	; 0x24
   2b2d0:	mov	r2, r7
   2b2d4:	mov	r1, r4
   2b2d8:	vst1.32	{d16-d17}, [r1], r0
   2b2dc:	mov	r0, #1
   2b2e0:	str	r0, [r4, #4]
   2b2e4:	str	r0, [r4, #8]
   2b2e8:	add	r0, r4, #16
   2b2ec:	str	r9, [r1]
   2b2f0:	mov	r1, r4
   2b2f4:	vst1.32	{d16-d17}, [r0]
   2b2f8:	ldr	r0, [r5, #8]
   2b2fc:	str	r0, [r4, #8]
   2b300:	mov	r0, r5
   2b304:	bl	115e4 <myhtml_tree_node_insert_by_mode@plt>
   2b308:	mov	r0, r4
   2b30c:	sub	sp, fp, #24
   2b310:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002b314 <myhtml_tree_node_insert_by_node@@Base>:
   2b314:	push	{r4, r5, fp, lr}
   2b318:	add	fp, sp, #8
   2b31c:	sub	sp, sp, #8
   2b320:	mov	r4, r1
   2b324:	add	r2, sp, #4
   2b328:	mov	r1, #0
   2b32c:	mov	r5, r0
   2b330:	bl	11f50 <myhtml_tree_appropriate_place_inserting@plt>
   2b334:	ldr	r2, [sp, #4]
   2b338:	mov	r1, r4
   2b33c:	bl	115e4 <myhtml_tree_node_insert_by_mode@plt>
   2b340:	ldr	r0, [r5, #128]	; 0x80
   2b344:	mov	r1, r4
   2b348:	bl	114e8 <myhtml_tree_list_append@plt>
   2b34c:	mov	r0, r4
   2b350:	sub	sp, fp, #8
   2b354:	pop	{r4, r5, fp, pc}

0002b358 <myhtml_tree_node_insert_foreign_element@@Base>:
   2b358:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b35c:	add	fp, sp, #24
   2b360:	sub	sp, sp, #8
   2b364:	mov	r5, r1
   2b368:	add	r2, sp, #4
   2b36c:	mov	r1, #0
   2b370:	mov	r4, r0
   2b374:	mov	r8, #0
   2b378:	bl	11f50 <myhtml_tree_appropriate_place_inserting@plt>
   2b37c:	mov	r6, r0
   2b380:	ldr	r0, [r4, #12]
   2b384:	ldr	r1, [r4, #48]	; 0x30
   2b388:	mov	r2, #0
   2b38c:	bl	11cec <mcobject_async_malloc@plt>
   2b390:	vmov.i32	q8, #0	; 0x00000000
   2b394:	mov	r7, r0
   2b398:	str	r8, [r0, #32]
   2b39c:	str	r4, [r0, #40]	; 0x28
   2b3a0:	mov	r0, #36	; 0x24
   2b3a4:	mov	r1, r7
   2b3a8:	vst1.32	{d16-d17}, [r1], r0
   2b3ac:	mov	r0, #1
   2b3b0:	str	r0, [r7, #8]
   2b3b4:	add	r0, r7, #16
   2b3b8:	str	r8, [r1]
   2b3bc:	mov	r1, r7
   2b3c0:	vst1.32	{d16-d17}, [r0]
   2b3c4:	ldr	r0, [r5]
   2b3c8:	str	r5, [r7, #32]
   2b3cc:	str	r0, [r7, #4]
   2b3d0:	ldr	r0, [r6, #8]
   2b3d4:	str	r0, [r7, #8]
   2b3d8:	mov	r0, r6
   2b3dc:	ldr	r2, [sp, #4]
   2b3e0:	bl	115e4 <myhtml_tree_node_insert_by_mode@plt>
   2b3e4:	ldr	r0, [r4, #128]	; 0x80
   2b3e8:	mov	r1, r7
   2b3ec:	bl	114e8 <myhtml_tree_list_append@plt>
   2b3f0:	mov	r0, r7
   2b3f4:	sub	sp, fp, #24
   2b3f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002b3fc <myhtml_tree_node_insert_html_element@@Base>:
   2b3fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b400:	add	fp, sp, #24
   2b404:	sub	sp, sp, #8
   2b408:	mov	r5, r1
   2b40c:	add	r2, sp, #4
   2b410:	mov	r1, #0
   2b414:	mov	r4, r0
   2b418:	mov	r8, #0
   2b41c:	bl	11f50 <myhtml_tree_appropriate_place_inserting@plt>
   2b420:	mov	r6, r0
   2b424:	ldr	r0, [r4, #12]
   2b428:	ldr	r1, [r4, #48]	; 0x30
   2b42c:	mov	r2, #0
   2b430:	bl	11cec <mcobject_async_malloc@plt>
   2b434:	vmov.i32	q8, #0	; 0x00000000
   2b438:	mov	r7, r0
   2b43c:	str	r8, [r0, #32]
   2b440:	str	r4, [r0, #40]	; 0x28
   2b444:	add	r0, r0, #16
   2b448:	mov	r1, r7
   2b44c:	vst1.32	{d16-d17}, [r0]
   2b450:	mov	r0, #36	; 0x24
   2b454:	vst1.32	{d16-d17}, [r1], r0
   2b458:	str	r8, [r1]
   2b45c:	mov	r1, #1
   2b460:	ldr	r0, [r5]
   2b464:	str	r5, [r7, #32]
   2b468:	stmib	r7, {r0, r1}
   2b46c:	mov	r0, r6
   2b470:	mov	r1, r7
   2b474:	ldr	r2, [sp, #4]
   2b478:	bl	115e4 <myhtml_tree_node_insert_by_mode@plt>
   2b47c:	ldr	r0, [r4, #128]	; 0x80
   2b480:	mov	r1, r7
   2b484:	bl	114e8 <myhtml_tree_list_append@plt>
   2b488:	mov	r0, r7
   2b48c:	sub	sp, fp, #24
   2b490:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002b494 <myhtml_tree_element_in_scope@@Base>:
   2b494:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2b498:	add	fp, sp, #24
   2b49c:	mov	r9, r1
   2b4a0:	ldr	r1, [r0, #128]	; 0x80
   2b4a4:	mov	r7, r0
   2b4a8:	ldr	r0, [r1, #4]
   2b4ac:	cmp	r0, #0
   2b4b0:	beq	2b540 <myhtml_tree_element_in_scope@@Base+0xac>
   2b4b4:	ldr	r5, [r1]
   2b4b8:	mov	r4, r3
   2b4bc:	mov	r8, r2
   2b4c0:	sub	r6, r0, #1
   2b4c4:	b	2b508 <myhtml_tree_element_in_scope@@Base+0x74>
   2b4c8:	ldr	r2, [r0, #8]
   2b4cc:	add	r0, r1, r2, lsl #2
   2b4d0:	cmp	r4, #128	; 0x80
   2b4d4:	ldr	r0, [r0, #16]
   2b4d8:	and	r0, r0, r4
   2b4dc:	bne	2b4f4 <myhtml_tree_element_in_scope@@Base+0x60>
   2b4e0:	cmp	r0, #0
   2b4e4:	beq	2b540 <myhtml_tree_element_in_scope@@Base+0xac>
   2b4e8:	cmp	r6, #0
   2b4ec:	bne	2b504 <myhtml_tree_element_in_scope@@Base+0x70>
   2b4f0:	b	2b540 <myhtml_tree_element_in_scope@@Base+0xac>
   2b4f4:	cmp	r6, #0
   2b4f8:	beq	2b540 <myhtml_tree_element_in_scope@@Base+0xac>
   2b4fc:	cmp	r0, #0
   2b500:	bne	2b540 <myhtml_tree_element_in_scope@@Base+0xac>
   2b504:	sub	r6, r6, #1
   2b508:	ldr	r0, [r5, r6, lsl #2]
   2b50c:	ldr	r1, [r0, #4]
   2b510:	ldr	r0, [r7, #28]
   2b514:	bl	11bc0 <myhtml_tag_get_by_id@plt>
   2b518:	mov	r1, r0
   2b51c:	ldr	r0, [r5, r6, lsl #2]
   2b520:	ldr	r2, [r0, #4]
   2b524:	cmp	r2, r9
   2b528:	bne	2b4c8 <myhtml_tree_element_in_scope@@Base+0x34>
   2b52c:	cmp	r8, #0
   2b530:	ldrne	r2, [r0, #8]
   2b534:	cmpne	r2, r8
   2b538:	bne	2b4cc <myhtml_tree_element_in_scope@@Base+0x38>
   2b53c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2b540:	mov	r0, #0
   2b544:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002b548 <myhtml_tree_element_in_scope_by_node@@Base>:
   2b548:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b54c:	add	fp, sp, #28
   2b550:	sub	sp, sp, #4
   2b554:	ldr	r7, [r0, #40]	; 0x28
   2b558:	mov	r9, r0
   2b55c:	mov	r8, #0
   2b560:	ldr	r0, [r7, #128]	; 0x80
   2b564:	ldr	r4, [r0, #4]
   2b568:	cmp	r4, #0
   2b56c:	beq	2b5fc <myhtml_tree_element_in_scope_by_node@@Base+0xb4>
   2b570:	ldr	sl, [r0]
   2b574:	mov	r5, r1
   2b578:	add	r6, sl, r4, lsl #2
   2b57c:	ldr	r0, [r6, #-4]
   2b580:	ldr	r1, [r0, #4]
   2b584:	ldr	r0, [r7, #28]
   2b588:	bl	11bc0 <myhtml_tag_get_by_id@plt>
   2b58c:	ldr	r1, [r6, #-4]
   2b590:	cmp	r1, r9
   2b594:	beq	2b5f8 <myhtml_tree_element_in_scope_by_node@@Base+0xb0>
   2b598:	sub	r6, sl, #8
   2b59c:	ldr	r1, [r1, #8]
   2b5a0:	cmp	r5, #128	; 0x80
   2b5a4:	add	r0, r0, r1, lsl #2
   2b5a8:	ldr	r0, [r0, #16]
   2b5ac:	and	r0, r0, r5
   2b5b0:	bne	2b5c8 <myhtml_tree_element_in_scope_by_node@@Base+0x80>
   2b5b4:	cmp	r0, #0
   2b5b8:	beq	2b5fc <myhtml_tree_element_in_scope_by_node@@Base+0xb4>
   2b5bc:	cmp	r4, #1
   2b5c0:	bne	2b5d8 <myhtml_tree_element_in_scope_by_node@@Base+0x90>
   2b5c4:	b	2b5fc <myhtml_tree_element_in_scope_by_node@@Base+0xb4>
   2b5c8:	cmp	r4, #1
   2b5cc:	beq	2b5fc <myhtml_tree_element_in_scope_by_node@@Base+0xb4>
   2b5d0:	cmp	r0, #0
   2b5d4:	bne	2b5fc <myhtml_tree_element_in_scope_by_node@@Base+0xb4>
   2b5d8:	ldr	r0, [r6, r4, lsl #2]
   2b5dc:	ldr	r1, [r0, #4]
   2b5e0:	ldr	r0, [r7, #28]
   2b5e4:	bl	11bc0 <myhtml_tag_get_by_id@plt>
   2b5e8:	ldr	r1, [r6, r4, lsl #2]
   2b5ec:	sub	r4, r4, #1
   2b5f0:	cmp	r1, r9
   2b5f4:	bne	2b59c <myhtml_tree_element_in_scope_by_node@@Base+0x54>
   2b5f8:	mov	r8, #1
   2b5fc:	mov	r0, r8
   2b600:	sub	sp, fp, #28
   2b604:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002b608 <myhtml_tree_list_append@@Base>:
   2b608:	push	{r4, r5, fp, lr}
   2b60c:	add	fp, sp, #8
   2b610:	mov	r4, r0
   2b614:	mov	r5, r1
   2b618:	ldr	r0, [r0, #4]
   2b61c:	ldr	r1, [r4, #8]
   2b620:	cmp	r0, r1
   2b624:	bcc	2b644 <myhtml_tree_list_append@@Base+0x3c>
   2b628:	lsl	r0, r1, #1
   2b62c:	lsl	r1, r1, #3
   2b630:	str	r0, [r4, #8]
   2b634:	ldr	r0, [r4]
   2b638:	bl	10f78 <mycore_realloc@plt>
   2b63c:	cmp	r0, #0
   2b640:	strne	r0, [r4]
   2b644:	ldr	r0, [r4]
   2b648:	ldr	r1, [r4, #4]
   2b64c:	str	r5, [r0, r1, lsl #2]
   2b650:	ldr	r0, [r4, #4]
   2b654:	add	r0, r0, #1
   2b658:	str	r0, [r4, #4]
   2b65c:	pop	{r4, r5, fp, pc}

0002b660 <myhtml_tree_list_append_after_index@@Base>:
   2b660:	add	r2, r2, #1
   2b664:	b	2b668 <myhtml_tree_list_insert_by_index@@Base>

0002b668 <myhtml_tree_list_insert_by_index@@Base>:
   2b668:	push	{r4, r5, r6, sl, fp, lr}
   2b66c:	add	fp, sp, #16
   2b670:	mov	r4, r0
   2b674:	mov	r6, r1
   2b678:	ldr	r0, [r0, #4]
   2b67c:	mov	r5, r2
   2b680:	ldr	r1, [r4, #8]
   2b684:	cmp	r0, r1
   2b688:	bcc	2b6a8 <myhtml_tree_list_insert_by_index@@Base+0x40>
   2b68c:	lsl	r0, r1, #1
   2b690:	lsl	r1, r1, #3
   2b694:	str	r0, [r4, #8]
   2b698:	ldr	r0, [r4]
   2b69c:	bl	10f78 <mycore_realloc@plt>
   2b6a0:	cmp	r0, #0
   2b6a4:	strne	r0, [r4]
   2b6a8:	ldr	r0, [r4]
   2b6ac:	ldr	r2, [r4, #4]
   2b6b0:	add	r1, r0, r5, lsl #2
   2b6b4:	sub	r2, r2, r5
   2b6b8:	lsl	r2, r2, #2
   2b6bc:	add	r0, r1, #4
   2b6c0:	bl	111b8 <memmove@plt>
   2b6c4:	ldr	r0, [r4]
   2b6c8:	str	r6, [r0, r5, lsl #2]
   2b6cc:	ldr	r0, [r4, #4]
   2b6d0:	add	r0, r0, #1
   2b6d4:	str	r0, [r4, #4]
   2b6d8:	pop	{r4, r5, r6, sl, fp, pc}

0002b6dc <myhtml_tree_list_current_node@@Base>:
   2b6dc:	ldr	r1, [r0, #4]
   2b6e0:	cmp	r1, #0
   2b6e4:	moveq	r0, #0
   2b6e8:	bxeq	lr
   2b6ec:	ldr	r1, [r0]
   2b6f0:	ldr	r0, [r0, #4]
   2b6f4:	add	r0, r1, r0, lsl #2
   2b6f8:	ldr	r0, [r0, #-4]
   2b6fc:	bx	lr

0002b700 <myhtml_tree_current_node@@Base>:
   2b700:	ldr	r0, [r0, #128]	; 0x80
   2b704:	ldr	r1, [r0, #4]
   2b708:	cmp	r1, #0
   2b70c:	moveq	r0, #0
   2b710:	bxeq	lr
   2b714:	ldr	r1, [r0]
   2b718:	ldr	r0, [r0, #4]
   2b71c:	add	r0, r1, r0, lsl #2
   2b720:	ldr	r0, [r0, #-4]
   2b724:	bx	lr

0002b728 <myhtml_tree_adjusted_current_node@@Base>:
   2b728:	ldr	r1, [r0, #128]	; 0x80
   2b72c:	ldr	r2, [r1, #4]
   2b730:	cmp	r2, #1
   2b734:	bne	2b744 <myhtml_tree_adjusted_current_node@@Base+0x1c>
   2b738:	ldr	r0, [r0, #88]	; 0x58
   2b73c:	cmp	r0, #0
   2b740:	bxne	lr
   2b744:	ldr	r0, [r1, #4]
   2b748:	cmp	r0, #0
   2b74c:	moveq	r0, #0
   2b750:	bxeq	lr
   2b754:	ldr	r0, [r1]
   2b758:	ldr	r1, [r1, #4]
   2b75c:	add	r0, r0, r1, lsl #2
   2b760:	ldr	r0, [r0, #-4]
   2b764:	bx	lr

0002b768 <myhtml_tree_open_elements_append_after_index@@Base>:
   2b768:	ldr	r0, [r0, #128]	; 0x80
   2b76c:	add	r2, r2, #1
   2b770:	b	2b668 <myhtml_tree_list_insert_by_index@@Base>

0002b774 <myhtml_tree_open_elements_pop@@Base>:
   2b774:	ldr	r0, [r0, #128]	; 0x80
   2b778:	ldr	r1, [r0, #4]
   2b77c:	cmp	r1, #0
   2b780:	ldrne	r1, [r0, #4]
   2b784:	subne	r1, r1, #1
   2b788:	strne	r1, [r0, #4]
   2b78c:	bx	lr

0002b790 <myhtml_tree_open_elements_remove@@Base>:
   2b790:	push	{r4, r5, fp, lr}
   2b794:	add	fp, sp, #8
   2b798:	mov	r5, r0
   2b79c:	ldr	r0, [r0, #128]	; 0x80
   2b7a0:	ldr	r2, [r0, #4]
   2b7a4:	ldr	r3, [r0]
   2b7a8:	add	r3, r3, r2, lsl #2
   2b7ac:	add	r3, r3, #4
   2b7b0:	cmp	r2, #0
   2b7b4:	beq	2b7f8 <myhtml_tree_open_elements_remove@@Base+0x68>
   2b7b8:	sub	r4, r3, #4
   2b7bc:	ldr	r3, [r3, #-8]
   2b7c0:	sub	r2, r2, #1
   2b7c4:	cmp	r3, r1
   2b7c8:	mov	r3, r4
   2b7cc:	bne	2b7b0 <myhtml_tree_open_elements_remove@@Base+0x20>
   2b7d0:	ldr	r0, [r0, #4]
   2b7d4:	mov	r1, r4
   2b7d8:	sub	r0, r0, r2
   2b7dc:	lsl	r2, r0, #2
   2b7e0:	sub	r0, r4, #4
   2b7e4:	bl	111b8 <memmove@plt>
   2b7e8:	ldr	r0, [r5, #128]	; 0x80
   2b7ec:	ldr	r1, [r0, #4]
   2b7f0:	sub	r1, r1, #1
   2b7f4:	str	r1, [r0, #4]
   2b7f8:	pop	{r4, r5, fp, pc}

0002b7fc <myhtml_tree_open_elements_pop_until@@Base>:
   2b7fc:	push	{fp, lr}
   2b800:	mov	fp, sp
   2b804:	ldr	lr, [r0, #128]	; 0x80
   2b808:	ldr	ip, [lr]
   2b80c:	ldr	r0, [lr, #4]
   2b810:	cmp	r0, #0
   2b814:	beq	2b864 <myhtml_tree_open_elements_pop_until@@Base+0x68>
   2b818:	ldr	r0, [lr, #4]
   2b81c:	sub	r0, r0, #1
   2b820:	str	r0, [lr, #4]
   2b824:	ldr	r0, [lr, #4]
   2b828:	ldr	r0, [ip, r0, lsl #2]
   2b82c:	ldr	r0, [r0, #4]
   2b830:	cmp	r0, r1
   2b834:	bne	2b80c <myhtml_tree_open_elements_pop_until@@Base+0x10>
   2b838:	cmp	r2, #0
   2b83c:	ldrne	r0, [lr, #4]
   2b840:	ldrne	r0, [ip, r0, lsl #2]
   2b844:	ldrne	r0, [r0, #8]
   2b848:	cmpne	r0, r2
   2b84c:	bne	2b80c <myhtml_tree_open_elements_pop_until@@Base+0x10>
   2b850:	cmp	r3, #0
   2b854:	popeq	{fp, pc}
   2b858:	ldr	r0, [lr, #4]
   2b85c:	add	r0, r0, #1
   2b860:	str	r0, [lr, #4]
   2b864:	pop	{fp, pc}

0002b868 <myhtml_tree_open_elements_pop_until_by_node@@Base>:
   2b868:	ldr	r0, [r0, #128]	; 0x80
   2b86c:	ldr	ip, [r0]
   2b870:	ldr	r3, [r0, #4]
   2b874:	cmp	r3, #0
   2b878:	beq	2b8ac <myhtml_tree_open_elements_pop_until_by_node@@Base+0x44>
   2b87c:	ldr	r3, [r0, #4]
   2b880:	sub	r3, r3, #1
   2b884:	str	r3, [r0, #4]
   2b888:	ldr	r3, [r0, #4]
   2b88c:	ldr	r3, [ip, r3, lsl #2]
   2b890:	cmp	r3, r1
   2b894:	bne	2b870 <myhtml_tree_open_elements_pop_until_by_node@@Base+0x8>
   2b898:	cmp	r2, #0
   2b89c:	bxeq	lr
   2b8a0:	ldr	r1, [r0, #4]
   2b8a4:	add	r1, r1, #1
   2b8a8:	str	r1, [r0, #4]
   2b8ac:	bx	lr

0002b8b0 <myhtml_tree_open_elements_pop_until_by_index@@Base>:
   2b8b0:	ldr	r0, [r0, #128]	; 0x80
   2b8b4:	ldr	r3, [r0, #4]
   2b8b8:	cmp	r3, #0
   2b8bc:	beq	2b8ec <myhtml_tree_open_elements_pop_until_by_index@@Base+0x3c>
   2b8c0:	ldr	r3, [r0, #4]
   2b8c4:	sub	r3, r3, #1
   2b8c8:	str	r3, [r0, #4]
   2b8cc:	ldr	r3, [r0, #4]
   2b8d0:	cmp	r3, r1
   2b8d4:	bne	2b8b4 <myhtml_tree_open_elements_pop_until_by_index@@Base+0x4>
   2b8d8:	cmp	r2, #0
   2b8dc:	bxeq	lr
   2b8e0:	ldr	r1, [r0, #4]
   2b8e4:	add	r1, r1, #1
   2b8e8:	str	r1, [r0, #4]
   2b8ec:	bx	lr

0002b8f0 <myhtml_tree_open_elements_find_reverse@@Base>:
   2b8f0:	ldr	r0, [r0, #128]	; 0x80
   2b8f4:	ldr	r3, [r0, #4]
   2b8f8:	ldr	r0, [r0]
   2b8fc:	sub	ip, r0, #4
   2b900:	cmp	r3, #0
   2b904:	moveq	r0, #0
   2b908:	bxeq	lr
   2b90c:	ldr	r0, [ip, r3, lsl #2]
   2b910:	sub	r3, r3, #1
   2b914:	cmp	r0, r1
   2b918:	bne	2b900 <myhtml_tree_open_elements_find_reverse@@Base+0x10>
   2b91c:	mov	r0, #1
   2b920:	cmp	r2, #0
   2b924:	strne	r3, [r2]
   2b928:	bx	lr

0002b92c <myhtml_tree_open_elements_find@@Base>:
   2b92c:	push	{fp, lr}
   2b930:	mov	fp, sp
   2b934:	ldr	lr, [r0, #128]	; 0x80
   2b938:	ldr	ip, [lr]
   2b93c:	ldr	r3, [lr, #4]
   2b940:	cmp	r3, #0
   2b944:	beq	2b968 <myhtml_tree_open_elements_find@@Base+0x3c>
   2b948:	mov	r3, #0
   2b94c:	ldr	r0, [ip, r3, lsl #2]
   2b950:	cmp	r0, r1
   2b954:	beq	2b970 <myhtml_tree_open_elements_find@@Base+0x44>
   2b958:	ldr	r0, [lr, #4]
   2b95c:	add	r3, r3, #1
   2b960:	cmp	r3, r0
   2b964:	bcc	2b94c <myhtml_tree_open_elements_find@@Base+0x20>
   2b968:	mov	r0, #0
   2b96c:	pop	{fp, pc}
   2b970:	cmp	r2, #0
   2b974:	mov	r0, #1
   2b978:	strne	r3, [r2]
   2b97c:	popne	{fp, pc}
   2b980:	pop	{fp, pc}

0002b984 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base>:
   2b984:	push	{r4, sl, fp, lr}
   2b988:	add	fp, sp, #8
   2b98c:	ldr	ip, [r0, #128]	; 0x80
   2b990:	ldr	r0, [ip, #4]
   2b994:	cmp	r0, #0
   2b998:	beq	2b9d0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x4c>
   2b99c:	ldr	lr, [ip]
   2b9a0:	rsb	ip, r0, #1
   2b9a4:	ldr	r0, [lr, -ip, lsl #2]
   2b9a8:	ldr	r4, [r0, #4]
   2b9ac:	cmp	r4, r1
   2b9b0:	bne	2b9c4 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x40>
   2b9b4:	cmp	r2, #0
   2b9b8:	ldrne	r4, [r0, #8]
   2b9bc:	cmpne	r4, r2
   2b9c0:	beq	2b9d8 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x54>
   2b9c4:	add	ip, ip, #1
   2b9c8:	cmp	ip, #1
   2b9cc:	bne	2b9a4 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x20>
   2b9d0:	mov	r0, #0
   2b9d4:	pop	{r4, sl, fp, pc}
   2b9d8:	cmp	r3, #0
   2b9dc:	beq	2b9d4 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x50>
   2b9e0:	rsb	r1, ip, #0
   2b9e4:	str	r1, [r3]
   2b9e8:	pop	{r4, sl, fp, pc}

0002b9ec <myhtml_tree_open_elements_find_by_tag_idx@@Base>:
   2b9ec:	push	{r4, r5, fp, lr}
   2b9f0:	add	fp, sp, #8
   2b9f4:	ldr	ip, [r0, #128]	; 0x80
   2b9f8:	ldr	lr, [ip]
   2b9fc:	ldr	r0, [ip, #4]
   2ba00:	cmp	r0, #0
   2ba04:	beq	2ba3c <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x50>
   2ba08:	mov	r4, #0
   2ba0c:	ldr	r0, [lr, r4, lsl #2]
   2ba10:	ldr	r5, [r0, #4]
   2ba14:	cmp	r5, r1
   2ba18:	bne	2ba2c <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x40>
   2ba1c:	cmp	r2, #0
   2ba20:	ldrne	r5, [r0, #8]
   2ba24:	cmpne	r5, r2
   2ba28:	beq	2ba44 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x58>
   2ba2c:	ldr	r0, [ip, #4]
   2ba30:	add	r4, r4, #1
   2ba34:	cmp	r4, r0
   2ba38:	bcc	2ba0c <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x20>
   2ba3c:	mov	r0, #0
   2ba40:	pop	{r4, r5, fp, pc}
   2ba44:	cmp	r3, #0
   2ba48:	strne	r4, [r3]
   2ba4c:	popne	{r4, r5, fp, pc}
   2ba50:	pop	{r4, r5, fp, pc}

0002ba54 <myhtml_tree_generate_implied_end_tags@@Base>:
   2ba54:	push	{r4, r5, fp, lr}
   2ba58:	add	fp, sp, #8
   2ba5c:	ldr	r0, [r0, #128]	; 0x80
   2ba60:	ldr	r3, [r0, #4]
   2ba64:	cmp	r3, #0
   2ba68:	beq	2bb08 <myhtml_tree_generate_implied_end_tags@@Base+0xb4>
   2ba6c:	ldr	r3, [r0, #4]
   2ba70:	cmp	r3, #0
   2ba74:	popeq	{r4, r5, fp, pc}
   2ba78:	movw	lr, #257	; 0x101
   2ba7c:	mov	ip, #1
   2ba80:	movt	lr, #61528	; 0xf058
   2ba84:	ldr	r3, [r0, #4]
   2ba88:	cmp	r3, #0
   2ba8c:	beq	2baa4 <myhtml_tree_generate_implied_end_tags@@Base+0x50>
   2ba90:	ldr	r3, [r0]
   2ba94:	ldr	r4, [r0, #4]
   2ba98:	add	r3, r3, r4, lsl #2
   2ba9c:	ldr	r3, [r3, #-4]
   2baa0:	b	2baa8 <myhtml_tree_generate_implied_end_tags@@Base+0x54>
   2baa4:	mov	r3, #0
   2baa8:	ldr	r4, [r3, #4]
   2baac:	sub	r5, r4, #77	; 0x4d
   2bab0:	cmp	r5, #31
   2bab4:	bhi	2bafc <myhtml_tree_generate_implied_end_tags@@Base+0xa8>
   2bab8:	tst	lr, ip, lsl r5
   2babc:	beq	2bafc <myhtml_tree_generate_implied_end_tags@@Base+0xa8>
   2bac0:	cmp	r4, r1
   2bac4:	bne	2bad8 <myhtml_tree_generate_implied_end_tags@@Base+0x84>
   2bac8:	cmp	r2, #0
   2bacc:	ldrne	r3, [r3, #8]
   2bad0:	cmpne	r3, r2
   2bad4:	beq	2bb08 <myhtml_tree_generate_implied_end_tags@@Base+0xb4>
   2bad8:	ldr	r3, [r0, #4]
   2badc:	cmp	r3, #0
   2bae0:	ldrne	r3, [r0, #4]
   2bae4:	subne	r3, r3, #1
   2bae8:	strne	r3, [r0, #4]
   2baec:	ldr	r3, [r0, #4]
   2baf0:	cmp	r3, #0
   2baf4:	bne	2ba84 <myhtml_tree_generate_implied_end_tags@@Base+0x30>
   2baf8:	b	2bb08 <myhtml_tree_generate_implied_end_tags@@Base+0xb4>
   2bafc:	cmp	r4, #44	; 0x2c
   2bb00:	cmpne	r4, #36	; 0x24
   2bb04:	beq	2bac0 <myhtml_tree_generate_implied_end_tags@@Base+0x6c>
   2bb08:	pop	{r4, r5, fp, pc}

0002bb0c <myhtml_tree_generate_all_implied_end_tags@@Base>:
   2bb0c:	push	{r4, r5, r6, r7, fp, lr}
   2bb10:	add	fp, sp, #16
   2bb14:	ldr	r0, [r0, #128]	; 0x80
   2bb18:	ldr	r3, [r0, #4]
   2bb1c:	cmp	r3, #0
   2bb20:	beq	2bbe8 <myhtml_tree_generate_all_implied_end_tags@@Base+0xdc>
   2bb24:	ldr	r3, [r0, #4]
   2bb28:	cmp	r3, #0
   2bb2c:	beq	2bbe8 <myhtml_tree_generate_all_implied_end_tags@@Base+0xdc>
   2bb30:	movw	ip, #545	; 0x221
   2bb34:	movw	r4, #1
   2bb38:	mov	r3, #1
   2bb3c:	movw	lr, #627	; 0x273
   2bb40:	movt	ip, #2
   2bb44:	movt	r4, #61528	; 0xf058
   2bb48:	ldr	r5, [r0, #4]
   2bb4c:	cmp	r5, #0
   2bb50:	beq	2bb68 <myhtml_tree_generate_all_implied_end_tags@@Base+0x5c>
   2bb54:	ldr	r5, [r0]
   2bb58:	ldr	r6, [r0, #4]
   2bb5c:	add	r5, r5, r6, lsl #2
   2bb60:	ldr	r5, [r5, #-4]
   2bb64:	b	2bb6c <myhtml_tree_generate_all_implied_end_tags@@Base+0x60>
   2bb68:	mov	r5, #0
   2bb6c:	ldr	r6, [r5, #4]
   2bb70:	sub	r7, r6, #77	; 0x4d
   2bb74:	cmp	r7, #31
   2bb78:	bls	2bba8 <myhtml_tree_generate_all_implied_end_tags@@Base+0x9c>
   2bb7c:	sub	r7, r6, #126	; 0x7e
   2bb80:	cmp	r7, #9
   2bb84:	bhi	2bb90 <myhtml_tree_generate_all_implied_end_tags@@Base+0x84>
   2bb88:	tst	lr, r3, lsl r7
   2bb8c:	bne	2bbb0 <myhtml_tree_generate_all_implied_end_tags@@Base+0xa4>
   2bb90:	sub	r7, r6, #27
   2bb94:	cmp	r7, #17
   2bb98:	bhi	2bbe8 <myhtml_tree_generate_all_implied_end_tags@@Base+0xdc>
   2bb9c:	tst	ip, r3, lsl r7
   2bba0:	bne	2bbb0 <myhtml_tree_generate_all_implied_end_tags@@Base+0xa4>
   2bba4:	b	2bbe8 <myhtml_tree_generate_all_implied_end_tags@@Base+0xdc>
   2bba8:	tst	r4, r3, lsl r7
   2bbac:	beq	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x70>
   2bbb0:	cmp	r6, r1
   2bbb4:	bne	2bbc8 <myhtml_tree_generate_all_implied_end_tags@@Base+0xbc>
   2bbb8:	cmp	r2, #0
   2bbbc:	ldrne	r5, [r5, #8]
   2bbc0:	cmpne	r5, r2
   2bbc4:	beq	2bbe8 <myhtml_tree_generate_all_implied_end_tags@@Base+0xdc>
   2bbc8:	ldr	r5, [r0, #4]
   2bbcc:	cmp	r5, #0
   2bbd0:	ldrne	r5, [r0, #4]
   2bbd4:	subne	r5, r5, #1
   2bbd8:	strne	r5, [r0, #4]
   2bbdc:	ldr	r5, [r0, #4]
   2bbe0:	cmp	r5, #0
   2bbe4:	bne	2bb48 <myhtml_tree_generate_all_implied_end_tags@@Base+0x3c>
   2bbe8:	pop	{r4, r5, r6, r7, fp, pc}

0002bbec <myhtml_tree_reset_insertion_mode_appropriately@@Base>:
   2bbec:	push	{r4, sl, fp, lr}
   2bbf0:	add	fp, sp, #8
   2bbf4:	ldr	r1, [r0, #128]	; 0x80
   2bbf8:	ldr	r2, [r1, #4]
   2bbfc:	cmp	r2, #0
   2bc00:	popeq	{r4, sl, fp, pc}
   2bc04:	ldr	ip, [r1]
   2bc08:	ldr	r1, [r1, #4]
   2bc0c:	cmp	r1, #0
   2bc10:	beq	2bd10 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x124>
   2bc14:	sub	lr, ip, #4
   2bc18:	ldr	r3, [lr, r1, lsl #2]
   2bc1c:	mov	r2, #0
   2bc20:	cmp	r1, #1
   2bc24:	bne	2bc38 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x4c>
   2bc28:	ldr	r2, [r0, #88]	; 0x58
   2bc2c:	cmp	r2, #0
   2bc30:	movne	r3, r2
   2bc34:	mov	r2, #1
   2bc38:	ldr	r4, [r3, #8]
   2bc3c:	cmp	r4, #1
   2bc40:	bne	2bd00 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x114>
   2bc44:	ldr	r3, [r3, #4]
   2bc48:	cmp	r3, #60	; 0x3c
   2bc4c:	ble	2bcc0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0xd4>
   2bc50:	sub	r4, r3, #114	; 0x72
   2bc54:	cmp	r4, #21
   2bc58:	bhi	2bcf0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x104>
   2bc5c:	add	r3, pc, #4
   2bc60:	ldr	r4, [r3, r4, lsl #2]
   2bc64:	add	pc, r3, r4
   2bc68:	andeq	r0, r0, ip, asr #1
   2bc6c:	muleq	r0, r8, r0
   2bc70:	muleq	r0, r8, r0
   2bc74:	muleq	r0, r8, r0
   2bc78:	muleq	r0, r8, r0
   2bc7c:	muleq	r0, r8, r0
   2bc80:	muleq	r0, r8, r0
   2bc84:	muleq	r0, r8, r0
   2bc88:	muleq	r0, r8, r0
   2bc8c:	muleq	r0, r8, r0
   2bc90:	muleq	r0, r8, r0
   2bc94:	andeq	r0, r0, r4, lsl #2
   2bc98:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   2bc9c:	strheq	r0, [r0], -r8
   2bca0:	andeq	r0, r0, ip, lsl #2
   2bca4:	muleq	r0, r8, r0
   2bca8:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   2bcac:	strheq	r0, [r0], -r8
   2bcb0:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   2bcb4:	muleq	r0, r8, r0
   2bcb8:	muleq	r0, r8, r0
   2bcbc:	andeq	r0, r0, r4, lsr #2
   2bcc0:	cmp	r3, #31
   2bcc4:	bgt	2bcdc <myhtml_tree_reset_insertion_mode_appropriately@@Base+0xf0>
   2bcc8:	cmp	r3, #23
   2bccc:	beq	2bd28 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x13c>
   2bcd0:	cmp	r3, #27
   2bcd4:	bne	2bd00 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x114>
   2bcd8:	b	2bd94 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1a8>
   2bcdc:	cmp	r3, #32
   2bce0:	beq	2bd9c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1b0>
   2bce4:	cmp	r3, #54	; 0x36
   2bce8:	bne	2bd00 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x114>
   2bcec:	b	2bda4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1b8>
   2bcf0:	cmp	r3, #61	; 0x3d
   2bcf4:	beq	2bdb4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   2bcf8:	cmp	r3, #65	; 0x41
   2bcfc:	beq	2bdc4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1d8>
   2bd00:	cmp	r2, #0
   2bd04:	bne	2bd28 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x13c>
   2bd08:	subs	r1, r1, #1
   2bd0c:	bne	2bc18 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2c>
   2bd10:	mov	r1, #0
   2bd14:	b	2bd2c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x140>
   2bd18:	mov	r1, #12
   2bd1c:	b	2bd2c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x140>
   2bd20:	cmp	r2, #0
   2bd24:	beq	2bdac <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c0>
   2bd28:	mov	r1, #6
   2bd2c:	str	r1, [r0, #168]	; 0xa8
   2bd30:	pop	{r4, sl, fp, pc}
   2bd34:	cmp	r2, #0
   2bd38:	bne	2bd64 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x178>
   2bd3c:	sub	r2, ip, #8
   2bd40:	cmp	r1, #1
   2bd44:	beq	2bd64 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x178>
   2bd48:	ldr	r3, [r2, r1, lsl #2]
   2bd4c:	ldr	r3, [r3, #4]
   2bd50:	cmp	r3, #125	; 0x7d
   2bd54:	beq	2bdd8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1ec>
   2bd58:	sub	r1, r1, #1
   2bd5c:	cmp	r3, #128	; 0x80
   2bd60:	bne	2bd40 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x154>
   2bd64:	mov	r1, #15
   2bd68:	b	2bd2c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x140>
   2bd6c:	mov	r1, #8
   2bd70:	b	2bd2c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x140>
   2bd74:	ldr	r1, [r0, #140]	; 0x8c
   2bd78:	ldr	r2, [r1]
   2bd7c:	ldr	r1, [r1, #4]
   2bd80:	add	r1, r2, r1, lsl #2
   2bd84:	ldr	r1, [r1, #-4]
   2bd88:	b	2bd2c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x140>
   2bd8c:	mov	r1, #13
   2bd90:	b	2bd2c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x140>
   2bd94:	mov	r1, #10
   2bd98:	b	2bd2c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x140>
   2bd9c:	mov	r1, #11
   2bda0:	b	2bd2c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x140>
   2bda4:	mov	r1, #19
   2bda8:	b	2bd2c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x140>
   2bdac:	mov	r1, #14
   2bdb0:	b	2bd2c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x140>
   2bdb4:	cmp	r2, #0
   2bdb8:	bne	2bd28 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x13c>
   2bdbc:	mov	r1, #3
   2bdc0:	b	2bd2c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x140>
   2bdc4:	ldr	r1, [r0, #92]	; 0x5c
   2bdc8:	cmp	r1, #0
   2bdcc:	moveq	r1, #2
   2bdd0:	movne	r1, #5
   2bdd4:	b	2bd2c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x140>
   2bdd8:	mov	r1, #16
   2bddc:	b	2bd2c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x140>

0002bde0 <myhtml_tree_active_formatting_is_marker@@Base>:
   2bde0:	ldr	r0, [r0]
   2bde4:	ldr	r2, [r0, #36]	; 0x24
   2bde8:	mov	r0, #1
   2bdec:	cmp	r2, r1
   2bdf0:	bxeq	lr
   2bdf4:	ldr	r1, [r1, #4]
   2bdf8:	cmp	r1, #82	; 0x52
   2bdfc:	ble	2be1c <myhtml_tree_active_formatting_is_marker@@Base+0x3c>
   2be00:	cmp	r1, #126	; 0x7e
   2be04:	bgt	2be3c <myhtml_tree_active_formatting_is_marker@@Base+0x5c>
   2be08:	cmp	r1, #83	; 0x53
   2be0c:	beq	2be38 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   2be10:	cmp	r1, #94	; 0x5e
   2be14:	movne	r0, #0
   2be18:	bx	lr
   2be1c:	cmp	r1, #27
   2be20:	bhi	2be48 <myhtml_tree_active_formatting_is_marker@@Base+0x68>
   2be24:	movw	r3, #512	; 0x200
   2be28:	mov	r2, #1
   2be2c:	movt	r3, #2560	; 0xa00
   2be30:	tst	r3, r2, lsl r1
   2be34:	beq	2be48 <myhtml_tree_active_formatting_is_marker@@Base+0x68>
   2be38:	bx	lr
   2be3c:	cmp	r1, #127	; 0x7f
   2be40:	cmpne	r1, #131	; 0x83
   2be44:	beq	2be38 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   2be48:	mov	r0, #0
   2be4c:	bx	lr

0002be50 <myhtml_tree_active_formatting_append@@Base>:
   2be50:	ldr	r0, [r0, #124]	; 0x7c
   2be54:	b	2b608 <myhtml_tree_list_append@@Base>

0002be58 <myhtml_tree_active_formatting_pop@@Base>:
   2be58:	ldr	r0, [r0, #124]	; 0x7c
   2be5c:	ldr	r1, [r0, #4]
   2be60:	cmp	r1, #0
   2be64:	ldrne	r1, [r0, #4]
   2be68:	subne	r1, r1, #1
   2be6c:	strne	r1, [r0, #4]
   2be70:	bx	lr

0002be74 <myhtml_tree_active_formatting_remove@@Base>:
   2be74:	push	{r4, r5, fp, lr}
   2be78:	add	fp, sp, #8
   2be7c:	mov	r5, r0
   2be80:	ldr	r0, [r0, #124]	; 0x7c
   2be84:	ldr	r2, [r0, #4]
   2be88:	ldr	r3, [r0]
   2be8c:	add	r3, r3, r2, lsl #2
   2be90:	add	r3, r3, #4
   2be94:	cmp	r2, #0
   2be98:	beq	2bedc <myhtml_tree_active_formatting_remove@@Base+0x68>
   2be9c:	sub	r4, r3, #4
   2bea0:	ldr	r3, [r3, #-8]
   2bea4:	sub	r2, r2, #1
   2bea8:	cmp	r3, r1
   2beac:	mov	r3, r4
   2beb0:	bne	2be94 <myhtml_tree_active_formatting_remove@@Base+0x20>
   2beb4:	ldr	r0, [r0, #4]
   2beb8:	mov	r1, r4
   2bebc:	sub	r0, r0, r2
   2bec0:	lsl	r2, r0, #2
   2bec4:	sub	r0, r4, #4
   2bec8:	bl	111b8 <memmove@plt>
   2becc:	ldr	r0, [r5, #124]	; 0x7c
   2bed0:	ldr	r1, [r0, #4]
   2bed4:	sub	r1, r1, #1
   2bed8:	str	r1, [r0, #4]
   2bedc:	pop	{r4, r5, fp, pc}

0002bee0 <myhtml_tree_active_formatting_remove_by_index@@Base>:
   2bee0:	push	{r4, sl, fp, lr}
   2bee4:	add	fp, sp, #8
   2bee8:	ldr	r2, [r0, #124]	; 0x7c
   2beec:	mov	r4, r0
   2bef0:	ldr	r0, [r2]
   2bef4:	ldr	r2, [r2, #4]
   2bef8:	add	r0, r0, r1, lsl #2
   2befc:	sub	r1, r2, r1
   2bf00:	lsl	r2, r1, #2
   2bf04:	add	r3, r0, #4
   2bf08:	mov	r1, r3
   2bf0c:	bl	111b8 <memmove@plt>
   2bf10:	ldr	r0, [r4, #124]	; 0x7c
   2bf14:	ldr	r1, [r0, #4]
   2bf18:	sub	r1, r1, #1
   2bf1c:	str	r1, [r0, #4]
   2bf20:	pop	{r4, sl, fp, pc}

0002bf24 <myhtml_tree_active_formatting_append_with_check@@Base>:
   2bf24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bf28:	add	fp, sp, #28
   2bf2c:	sub	sp, sp, #4
   2bf30:	mov	sl, r1
   2bf34:	ldr	r1, [r0, #124]	; 0x7c
   2bf38:	mov	r5, r0
   2bf3c:	ldr	r0, [r1, #4]
   2bf40:	cmp	r0, #0
   2bf44:	beq	2c020 <myhtml_tree_active_formatting_append_with_check@@Base+0xfc>
   2bf48:	ldr	r7, [r1]
   2bf4c:	sub	r4, r0, #1
   2bf50:	mov	r9, #0
   2bf54:	mov	r8, r4
   2bf58:	ldr	r6, [r7, r4, lsl #2]
   2bf5c:	mov	r0, r5
   2bf60:	mov	r1, r6
   2bf64:	bl	11a40 <myhtml_tree_active_formatting_is_marker@plt>
   2bf68:	cmp	r0, #0
   2bf6c:	bne	2bfe4 <myhtml_tree_active_formatting_append_with_check@@Base+0xc0>
   2bf70:	ldr	r1, [r6, #32]
   2bf74:	cmp	r1, #0
   2bf78:	beq	2bfd8 <myhtml_tree_active_formatting_append_with_check@@Base+0xb4>
   2bf7c:	ldr	r0, [sl, #32]
   2bf80:	cmp	r0, #0
   2bf84:	beq	2bfd8 <myhtml_tree_active_formatting_append_with_check@@Base+0xb4>
   2bf88:	ldr	r0, [r5, #8]
   2bf8c:	bl	118b4 <myhtml_token_node_wait_for_done@plt>
   2bf90:	ldr	r1, [sl, #32]
   2bf94:	ldr	r0, [r5, #8]
   2bf98:	bl	118b4 <myhtml_token_node_wait_for_done@plt>
   2bf9c:	ldr	r0, [r7, r4, lsl #2]
   2bfa0:	ldr	r2, [sl, #8]
   2bfa4:	ldr	r1, [r0, #8]
   2bfa8:	cmp	r1, r2
   2bfac:	bne	2bfd8 <myhtml_tree_active_formatting_append_with_check@@Base+0xb4>
   2bfb0:	ldr	r1, [sl, #4]
   2bfb4:	ldr	r2, [r0, #4]
   2bfb8:	cmp	r2, r1
   2bfbc:	bne	2bfd8 <myhtml_tree_active_formatting_append_with_check@@Base+0xb4>
   2bfc0:	ldr	r1, [sl, #32]
   2bfc4:	ldr	r0, [r0, #32]
   2bfc8:	bl	11c8c <myhtml_token_attr_compare@plt>
   2bfcc:	cmp	r0, #0
   2bfd0:	add	r9, r9, r0
   2bfd4:	movne	r8, r4
   2bfd8:	sub	r4, r4, #1
   2bfdc:	cmn	r4, #1
   2bfe0:	bne	2bf58 <myhtml_tree_active_formatting_append_with_check@@Base+0x34>
   2bfe4:	cmp	r9, #2
   2bfe8:	bls	2c020 <myhtml_tree_active_formatting_append_with_check@@Base+0xfc>
   2bfec:	ldr	r2, [r5, #124]	; 0x7c
   2bff0:	ldr	r0, [r2]
   2bff4:	ldr	r2, [r2, #4]
   2bff8:	add	r0, r0, r8, lsl #2
   2bffc:	sub	r2, r2, r8
   2c000:	lsl	r2, r2, #2
   2c004:	add	r1, r0, #4
   2c008:	bl	111b8 <memmove@plt>
   2c00c:	ldr	r0, [r5, #124]	; 0x7c
   2c010:	ldr	r1, [r0, #4]
   2c014:	sub	r1, r1, #1
   2c018:	str	r1, [r0, #4]
   2c01c:	b	2c024 <myhtml_tree_active_formatting_append_with_check@@Base+0x100>
   2c020:	ldr	r0, [r5, #124]	; 0x7c
   2c024:	mov	r1, sl
   2c028:	sub	sp, fp, #28
   2c02c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c030:	b	2b608 <myhtml_tree_list_append@@Base>

0002c034 <myhtml_tree_active_formatting_current_node@@Base>:
   2c034:	ldr	r0, [r0, #124]	; 0x7c
   2c038:	ldr	r1, [r0, #4]
   2c03c:	cmp	r1, #0
   2c040:	moveq	r0, #0
   2c044:	bxeq	lr
   2c048:	ldr	r1, [r0]
   2c04c:	ldr	r0, [r0, #4]
   2c050:	add	r0, r1, r0, lsl #2
   2c054:	ldr	r0, [r0, #-4]
   2c058:	bx	lr

0002c05c <myhtml_tree_active_formatting_find@@Base>:
   2c05c:	ldr	r0, [r0, #124]	; 0x7c
   2c060:	ldr	r3, [r0, #4]
   2c064:	ldr	r0, [r0]
   2c068:	sub	ip, r0, #4
   2c06c:	cmp	r3, #0
   2c070:	moveq	r0, #0
   2c074:	bxeq	lr
   2c078:	ldr	r0, [ip, r3, lsl #2]
   2c07c:	sub	r3, r3, #1
   2c080:	cmp	r0, r1
   2c084:	bne	2c06c <myhtml_tree_active_formatting_find@@Base+0x10>
   2c088:	mov	r0, #1
   2c08c:	cmp	r2, #0
   2c090:	strne	r3, [r2]
   2c094:	bx	lr

0002c098 <myhtml_tree_active_formatting_up_to_last_marker@@Base>:
   2c098:	push	{r4, r5, r6, sl, fp, lr}
   2c09c:	add	fp, sp, #16
   2c0a0:	ldr	r5, [r0, #124]	; 0x7c
   2c0a4:	mov	r4, r0
   2c0a8:	ldr	r6, [r5]
   2c0ac:	ldr	r0, [r5, #4]
   2c0b0:	cmp	r0, #0
   2c0b4:	beq	2c0e8 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x50>
   2c0b8:	ldr	r0, [r5, #4]
   2c0bc:	cmp	r0, #0
   2c0c0:	beq	2c0e8 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x50>
   2c0c4:	ldr	r0, [r5, #4]
   2c0c8:	sub	r0, r0, #1
   2c0cc:	str	r0, [r5, #4]
   2c0d0:	ldr	r0, [r5, #4]
   2c0d4:	ldr	r1, [r6, r0, lsl #2]
   2c0d8:	mov	r0, r4
   2c0dc:	bl	11a40 <myhtml_tree_active_formatting_is_marker@plt>
   2c0e0:	cmp	r0, #0
   2c0e4:	beq	2c0b8 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x20>
   2c0e8:	pop	{r4, r5, r6, sl, fp, pc}

0002c0ec <myhtml_tree_active_formatting_between_last_marker@@Base>:
   2c0ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2c0f0:	add	fp, sp, #24
   2c0f4:	mov	r9, r1
   2c0f8:	ldr	r1, [r0, #124]	; 0x7c
   2c0fc:	mov	r7, r0
   2c100:	ldr	r0, [r1, #4]
   2c104:	cmp	r0, #0
   2c108:	beq	2c154 <myhtml_tree_active_formatting_between_last_marker@@Base+0x68>
   2c10c:	ldr	r5, [r1]
   2c110:	mov	r8, r2
   2c114:	rsb	r4, r0, #1
   2c118:	ldr	r6, [r5, -r4, lsl #2]
   2c11c:	mov	r0, r7
   2c120:	mov	r1, r6
   2c124:	bl	11a40 <myhtml_tree_active_formatting_is_marker@plt>
   2c128:	cmp	r0, #0
   2c12c:	bne	2c154 <myhtml_tree_active_formatting_between_last_marker@@Base+0x68>
   2c130:	ldr	r0, [r6, #4]
   2c134:	cmp	r0, r9
   2c138:	bne	2c148 <myhtml_tree_active_formatting_between_last_marker@@Base+0x5c>
   2c13c:	ldr	r0, [r6, #8]
   2c140:	cmp	r0, #1
   2c144:	beq	2c160 <myhtml_tree_active_formatting_between_last_marker@@Base+0x74>
   2c148:	add	r4, r4, #1
   2c14c:	cmp	r4, #1
   2c150:	bne	2c118 <myhtml_tree_active_formatting_between_last_marker@@Base+0x2c>
   2c154:	mov	r6, #0
   2c158:	mov	r0, r6
   2c15c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2c160:	cmp	r8, #0
   2c164:	rsbne	r0, r4, #0
   2c168:	strne	r0, [r8]
   2c16c:	b	2c158 <myhtml_tree_active_formatting_between_last_marker@@Base+0x6c>

0002c170 <myhtml_tree_active_formatting_reconstruction@@Base>:
   2c170:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c174:	add	fp, sp, #28
   2c178:	sub	sp, sp, #12
   2c17c:	ldr	sl, [r0, #124]	; 0x7c
   2c180:	mov	r8, r0
   2c184:	ldr	r7, [sl]
   2c188:	ldr	r0, [sl, #4]
   2c18c:	cmp	r0, #0
   2c190:	beq	2c288 <myhtml_tree_active_formatting_reconstruction@@Base+0x118>
   2c194:	ldr	r0, [sl, #4]
   2c198:	sub	r0, r0, #1
   2c19c:	ldr	r5, [r7, r0, lsl #2]
   2c1a0:	str	r0, [sp, #8]
   2c1a4:	mov	r0, r8
   2c1a8:	mov	r1, r5
   2c1ac:	bl	11a40 <myhtml_tree_active_formatting_is_marker@plt>
   2c1b0:	cmp	r0, #0
   2c1b4:	bne	2c288 <myhtml_tree_active_formatting_reconstruction@@Base+0x118>
   2c1b8:	ldr	r6, [r8, #128]	; 0x80
   2c1bc:	ldr	r9, [r6]
   2c1c0:	ldr	r0, [r6, #4]
   2c1c4:	cmp	r0, #0
   2c1c8:	beq	2c1ec <myhtml_tree_active_formatting_reconstruction@@Base+0x7c>
   2c1cc:	mov	r0, #0
   2c1d0:	ldr	r1, [r9, r0, lsl #2]
   2c1d4:	cmp	r1, r5
   2c1d8:	beq	2c288 <myhtml_tree_active_formatting_reconstruction@@Base+0x118>
   2c1dc:	ldr	r1, [r6, #4]
   2c1e0:	add	r0, r0, #1
   2c1e4:	cmp	r0, r1
   2c1e8:	bcc	2c1d0 <myhtml_tree_active_formatting_reconstruction@@Base+0x60>
   2c1ec:	ldr	r0, [sp, #8]
   2c1f0:	mov	r4, #0
   2c1f4:	cmp	r0, #0
   2c1f8:	beq	2c27c <myhtml_tree_active_formatting_reconstruction@@Base+0x10c>
   2c1fc:	str	r0, [sp, #8]
   2c200:	sub	r0, r0, #1
   2c204:	ldr	r5, [r7, r0, lsl #2]
   2c208:	str	r0, [sp, #4]
   2c20c:	mov	r0, r8
   2c210:	mov	r1, r5
   2c214:	bl	11a40 <myhtml_tree_active_formatting_is_marker@plt>
   2c218:	cmp	r0, #0
   2c21c:	bne	2c254 <myhtml_tree_active_formatting_reconstruction@@Base+0xe4>
   2c220:	ldr	r0, [r6, #4]
   2c224:	cmp	r0, #0
   2c228:	beq	2c24c <myhtml_tree_active_formatting_reconstruction@@Base+0xdc>
   2c22c:	mov	r0, #0
   2c230:	ldr	r1, [r9, r0, lsl #2]
   2c234:	cmp	r1, r5
   2c238:	beq	2c254 <myhtml_tree_active_formatting_reconstruction@@Base+0xe4>
   2c23c:	ldr	r1, [r6, #4]
   2c240:	add	r0, r0, #1
   2c244:	cmp	r0, r1
   2c248:	bcc	2c230 <myhtml_tree_active_formatting_reconstruction@@Base+0xc0>
   2c24c:	ldr	r0, [sp, #4]
   2c250:	b	2c1f4 <myhtml_tree_active_formatting_reconstruction@@Base+0x84>
   2c254:	ldr	r4, [sp, #8]
   2c258:	b	2c27c <myhtml_tree_active_formatting_reconstruction@@Base+0x10c>
   2c25c:	ldr	r0, [r7, r4, lsl #2]
   2c260:	bl	12070 <myhtml_tree_node_clone@plt>
   2c264:	mov	r5, r0
   2c268:	mov	r0, r8
   2c26c:	mov	r1, r5
   2c270:	bl	11980 <myhtml_tree_node_insert_by_node@plt>
   2c274:	str	r5, [r7, r4, lsl #2]
   2c278:	add	r4, r4, #1
   2c27c:	ldr	r0, [sl, #4]
   2c280:	cmp	r4, r0
   2c284:	bcc	2c25c <myhtml_tree_active_formatting_reconstruction@@Base+0xec>
   2c288:	sub	sp, fp, #28
   2c28c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002c290 <myhtml_tree_adoption_agency_algorithm@@Base>:
   2c290:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c294:	add	fp, sp, #28
   2c298:	sub	sp, sp, #44	; 0x2c
   2c29c:	mov	r8, r0
   2c2a0:	ldr	r0, [r0, #128]	; 0x80
   2c2a4:	mov	r6, #0
   2c2a8:	ldr	r1, [r0, #4]
   2c2ac:	cmp	r1, #0
   2c2b0:	beq	2c8d4 <myhtml_tree_adoption_agency_algorithm@@Base+0x644>
   2c2b4:	ldr	r5, [r0]
   2c2b8:	ldr	r1, [r0, #4]
   2c2bc:	ldr	r4, [r8, #124]	; 0x7c
   2c2c0:	mov	sl, r2
   2c2c4:	add	r1, r5, r1, lsl #2
   2c2c8:	ldr	ip, [r4]
   2c2cc:	ldr	r1, [r1, #-4]
   2c2d0:	ldr	r2, [r1, #8]
   2c2d4:	cmp	r2, #1
   2c2d8:	bne	2c308 <myhtml_tree_adoption_agency_algorithm@@Base+0x78>
   2c2dc:	ldr	r2, [r1, #4]
   2c2e0:	cmp	r2, sl
   2c2e4:	bne	2c308 <myhtml_tree_adoption_agency_algorithm@@Base+0x78>
   2c2e8:	ldr	r3, [r4, #4]
   2c2ec:	sub	r2, ip, #4
   2c2f0:	cmp	r3, #0
   2c2f4:	beq	2c8bc <myhtml_tree_adoption_agency_algorithm@@Base+0x62c>
   2c2f8:	ldr	r7, [r2, r3, lsl #2]
   2c2fc:	sub	r3, r3, #1
   2c300:	cmp	r7, r1
   2c304:	bne	2c2f0 <myhtml_tree_adoption_agency_algorithm@@Base+0x60>
   2c308:	sub	r0, r5, #4
   2c30c:	mov	r7, #0
   2c310:	str	r5, [sp, #32]
   2c314:	str	ip, [sp, #16]
   2c318:	str	r0, [sp, #24]
   2c31c:	add	r7, r7, #1
   2c320:	str	ip, [sp, #28]
   2c324:	sub	r5, ip, #4
   2c328:	str	r7, [sp, #20]
   2c32c:	mov	r7, r4
   2c330:	ldr	r4, [r4, #4]
   2c334:	cmp	r4, #0
   2c338:	beq	2c854 <myhtml_tree_adoption_agency_algorithm@@Base+0x5c4>
   2c33c:	ldr	r9, [r5, r4, lsl #2]
   2c340:	mov	r0, r8
   2c344:	mov	r1, r9
   2c348:	bl	11a40 <myhtml_tree_active_formatting_is_marker@plt>
   2c34c:	mov	r6, #0
   2c350:	cmp	r0, #0
   2c354:	bne	2c8d4 <myhtml_tree_adoption_agency_algorithm@@Base+0x644>
   2c358:	ldr	r0, [r9, #4]
   2c35c:	sub	r4, r4, #1
   2c360:	cmp	r0, sl
   2c364:	bne	2c334 <myhtml_tree_adoption_agency_algorithm@@Base+0xa4>
   2c368:	ldr	r0, [r8, #128]	; 0x80
   2c36c:	str	sl, [sp, #12]
   2c370:	str	r8, [sp, #36]	; 0x24
   2c374:	ldr	r1, [r0]
   2c378:	ldr	r2, [r0, #4]
   2c37c:	ldr	r5, [sp, #32]
   2c380:	cmp	r2, #0
   2c384:	beq	2c85c <myhtml_tree_adoption_agency_algorithm@@Base+0x5cc>
   2c388:	add	r3, r4, #1
   2c38c:	mov	sl, #0
   2c390:	ldr	r2, [r1, sl, lsl #2]
   2c394:	cmp	r2, r9
   2c398:	beq	2c3b0 <myhtml_tree_adoption_agency_algorithm@@Base+0x120>
   2c39c:	ldr	r2, [r0, #4]
   2c3a0:	add	sl, sl, #1
   2c3a4:	cmp	sl, r2
   2c3a8:	bcc	2c390 <myhtml_tree_adoption_agency_algorithm@@Base+0x100>
   2c3ac:	b	2c85c <myhtml_tree_adoption_agency_algorithm@@Base+0x5cc>
   2c3b0:	mov	r0, r9
   2c3b4:	mov	r1, #8
   2c3b8:	str	r3, [sp, #28]
   2c3bc:	bl	10fe4 <myhtml_tree_element_in_scope_by_node@plt>
   2c3c0:	cmp	r0, #0
   2c3c4:	beq	2c8b4 <myhtml_tree_adoption_agency_algorithm@@Base+0x624>
   2c3c8:	ldr	r0, [sp, #36]	; 0x24
   2c3cc:	ldr	r0, [r0, #128]	; 0x80
   2c3d0:	ldr	r1, [r0, #4]
   2c3d4:	cmp	r1, #0
   2c3d8:	ldrne	r1, [r0, #4]
   2c3dc:	ldr	r0, [r0, #4]
   2c3e0:	cmp	sl, r0
   2c3e4:	bcs	2c8e0 <myhtml_tree_adoption_agency_algorithm@@Base+0x650>
   2c3e8:	ldr	r4, [sp, #36]	; 0x24
   2c3ec:	mov	r8, sl
   2c3f0:	ldr	r0, [r5, r8, lsl #2]
   2c3f4:	ldr	r1, [r0, #4]
   2c3f8:	ldr	r0, [r4, #28]
   2c3fc:	bl	11bc0 <myhtml_tag_get_by_id@plt>
   2c400:	ldr	r2, [r5, r8, lsl #2]
   2c404:	ldr	r1, [r2, #8]
   2c408:	add	r0, r0, r1, lsl #2
   2c40c:	ldrb	r0, [r0, #16]
   2c410:	tst	r0, #2
   2c414:	bne	2c430 <myhtml_tree_adoption_agency_algorithm@@Base+0x1a0>
   2c418:	ldr	r0, [r4, #128]	; 0x80
   2c41c:	add	r8, r8, #1
   2c420:	ldr	r0, [r0, #4]
   2c424:	cmp	r8, r0
   2c428:	bcc	2c3f0 <myhtml_tree_adoption_agency_algorithm@@Base+0x160>
   2c42c:	mov	r2, #0
   2c430:	cmp	r2, #0
   2c434:	beq	2c8e0 <myhtml_tree_adoption_agency_algorithm@@Base+0x650>
   2c438:	ldr	r0, [sp, #24]
   2c43c:	mov	r5, r2
   2c440:	mov	ip, #0
   2c444:	str	r2, [sp, #8]
   2c448:	ldr	r0, [r0, sl, lsl #2]
   2c44c:	str	r0, [sp]
   2c450:	str	r5, [sp, #4]
   2c454:	ldr	r4, [sp, #36]	; 0x24
   2c458:	ldr	r0, [r4, #128]	; 0x80
   2c45c:	ldr	r3, [r0]
   2c460:	ldr	r1, [r0, #4]
   2c464:	cmp	r1, #0
   2c468:	beq	2c494 <myhtml_tree_adoption_agency_algorithm@@Base+0x204>
   2c46c:	mov	r1, #0
   2c470:	ldr	r2, [r3, r1, lsl #2]
   2c474:	cmp	r2, r5
   2c478:	beq	2c490 <myhtml_tree_adoption_agency_algorithm@@Base+0x200>
   2c47c:	ldr	r2, [r0, #4]
   2c480:	add	r1, r1, #1
   2c484:	cmp	r1, r2
   2c488:	bcc	2c470 <myhtml_tree_adoption_agency_algorithm@@Base+0x1e0>
   2c48c:	b	2c494 <myhtml_tree_adoption_agency_algorithm@@Base+0x204>
   2c490:	mov	r8, r1
   2c494:	ldr	r1, [sp, #32]
   2c498:	mov	r6, #0
   2c49c:	cmp	r8, #0
   2c4a0:	beq	2c8d4 <myhtml_tree_adoption_agency_algorithm@@Base+0x644>
   2c4a4:	sub	r8, r8, #1
   2c4a8:	ldr	r5, [r1, r8, lsl #2]
   2c4ac:	cmp	r5, r9
   2c4b0:	beq	2c630 <myhtml_tree_adoption_agency_algorithm@@Base+0x3a0>
   2c4b4:	ldr	r4, [r4, #124]	; 0x7c
   2c4b8:	add	sl, ip, #1
   2c4bc:	ldr	r6, [r4, #4]
   2c4c0:	ldr	r2, [r4]
   2c4c4:	add	r1, r2, r6, lsl #2
   2c4c8:	sub	r2, r2, #4
   2c4cc:	add	r1, r1, #4
   2c4d0:	cmp	r6, #0
   2c4d4:	beq	2c4f0 <myhtml_tree_adoption_agency_algorithm@@Base+0x260>
   2c4d8:	ldr	r7, [r2, r6, lsl #2]
   2c4dc:	sub	r1, r1, #4
   2c4e0:	sub	r6, r6, #1
   2c4e4:	cmp	r7, r5
   2c4e8:	bne	2c4d0 <myhtml_tree_adoption_agency_algorithm@@Base+0x240>
   2c4ec:	b	2c54c <myhtml_tree_adoption_agency_algorithm@@Base+0x2bc>
   2c4f0:	ldr	r2, [r0, #4]
   2c4f4:	add	r1, r3, r2, lsl #2
   2c4f8:	add	r3, r1, #4
   2c4fc:	cmp	r2, #0
   2c500:	beq	2c58c <myhtml_tree_adoption_agency_algorithm@@Base+0x2fc>
   2c504:	sub	r1, r3, #4
   2c508:	ldr	r3, [r3, #-8]
   2c50c:	sub	r2, r2, #1
   2c510:	cmp	r3, r5
   2c514:	mov	r3, r1
   2c518:	bne	2c4fc <myhtml_tree_adoption_agency_algorithm@@Base+0x26c>
   2c51c:	ldr	r0, [r0, #4]
   2c520:	sub	r0, r0, r2
   2c524:	lsl	r2, r0, #2
   2c528:	sub	r0, r1, #4
   2c52c:	bl	111b8 <memmove@plt>
   2c530:	ldr	r4, [sp, #36]	; 0x24
   2c534:	mov	ip, sl
   2c538:	ldr	r0, [r4, #128]	; 0x80
   2c53c:	ldr	r1, [r0, #4]
   2c540:	sub	r1, r1, #1
   2c544:	str	r1, [r0, #4]
   2c548:	b	2c458 <myhtml_tree_adoption_agency_algorithm@@Base+0x1c8>
   2c54c:	cmp	ip, #3
   2c550:	bcc	2c594 <myhtml_tree_adoption_agency_algorithm@@Base+0x304>
   2c554:	ldr	r0, [r4, #4]
   2c558:	sub	r0, r0, r6
   2c55c:	lsl	r2, r0, #2
   2c560:	sub	r0, r1, #4
   2c564:	bl	111b8 <memmove@plt>
   2c568:	ldr	r0, [sp, #36]	; 0x24
   2c56c:	ldr	r0, [r0, #124]	; 0x7c
   2c570:	ldr	r1, [r0, #4]
   2c574:	sub	r1, r1, #1
   2c578:	str	r1, [r0, #4]
   2c57c:	ldr	r0, [sp, #28]
   2c580:	cmp	r6, r0
   2c584:	subcc	r0, r0, #1
   2c588:	str	r0, [sp, #28]
   2c58c:	mov	ip, sl
   2c590:	b	2c454 <myhtml_tree_adoption_agency_algorithm@@Base+0x1c4>
   2c594:	mov	r0, r5
   2c598:	bl	12070 <myhtml_tree_node_clone@plt>
   2c59c:	mov	r5, r0
   2c5a0:	mov	r0, #1
   2c5a4:	ldr	r2, [sp, #4]
   2c5a8:	ldr	r1, [sp, #28]
   2c5ac:	str	r0, [r5, #8]
   2c5b0:	ldr	r0, [sp, #16]
   2c5b4:	str	r5, [r0, r6, lsl #2]
   2c5b8:	ldr	r0, [sp, #32]
   2c5bc:	str	r5, [r0, r8, lsl #2]
   2c5c0:	ldr	r0, [sp, #8]
   2c5c4:	cmp	r2, r0
   2c5c8:	ldr	r0, [r2, #24]
   2c5cc:	addeq	r1, r6, #1
   2c5d0:	cmp	r0, #0
   2c5d4:	beq	2c5e8 <myhtml_tree_adoption_agency_algorithm@@Base+0x358>
   2c5d8:	mov	r0, r2
   2c5dc:	mov	r4, r1
   2c5e0:	bl	11ed8 <myhtml_tree_node_remove@plt>
   2c5e4:	mov	r1, r4
   2c5e8:	ldr	r0, [r5, #28]
   2c5ec:	str	r1, [sp, #28]
   2c5f0:	ldr	r1, [sp, #4]
   2c5f4:	mov	ip, sl
   2c5f8:	cmp	r0, #0
   2c5fc:	streq	r1, [r5, #20]
   2c600:	strne	r1, [r0, #16]
   2c604:	strne	r0, [r1, #12]
   2c608:	str	r5, [r1, #24]
   2c60c:	str	r1, [r5, #28]
   2c610:	ldr	r0, [r1, #40]	; 0x28
   2c614:	ldr	r3, [r0, #236]	; 0xec
   2c618:	cmp	r3, #0
   2c61c:	beq	2c450 <myhtml_tree_adoption_agency_algorithm@@Base+0x1c0>
   2c620:	ldr	r2, [r0, #244]	; 0xf4
   2c624:	blx	r3
   2c628:	mov	ip, sl
   2c62c:	b	2c450 <myhtml_tree_adoption_agency_algorithm@@Base+0x1c0>
   2c630:	ldr	r5, [sp, #4]
   2c634:	ldr	r0, [r5, #24]
   2c638:	cmp	r0, #0
   2c63c:	movne	r0, r5
   2c640:	blne	11ed8 <myhtml_tree_node_remove@plt>
   2c644:	ldr	r1, [sp]
   2c648:	mov	r0, r4
   2c64c:	sub	r2, fp, #32
   2c650:	bl	11f50 <myhtml_tree_appropriate_place_inserting@plt>
   2c654:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2c658:	mov	r1, r5
   2c65c:	bl	115e4 <myhtml_tree_node_insert_by_mode@plt>
   2c660:	mov	r0, r9
   2c664:	bl	12070 <myhtml_tree_node_clone@plt>
   2c668:	mov	sl, r0
   2c66c:	mov	r0, #1
   2c670:	str	r0, [sl, #8]
   2c674:	ldr	r0, [sp, #8]
   2c678:	ldr	r5, [r0, #20]
   2c67c:	cmp	r5, #0
   2c680:	beq	2c6d4 <myhtml_tree_adoption_agency_algorithm@@Base+0x444>
   2c684:	ldr	r4, [r5, #16]
   2c688:	mov	r0, r5
   2c68c:	bl	11ed8 <myhtml_tree_node_remove@plt>
   2c690:	ldr	r0, [sl, #28]
   2c694:	cmp	r0, #0
   2c698:	streq	r5, [sl, #20]
   2c69c:	strne	r5, [r0, #16]
   2c6a0:	strne	r0, [r5, #12]
   2c6a4:	str	sl, [r5, #24]
   2c6a8:	str	r5, [sl, #28]
   2c6ac:	ldr	r0, [r5, #40]	; 0x28
   2c6b0:	ldr	r3, [r0, #236]	; 0xec
   2c6b4:	cmp	r3, #0
   2c6b8:	beq	2c6c8 <myhtml_tree_adoption_agency_algorithm@@Base+0x438>
   2c6bc:	ldr	r2, [r0, #244]	; 0xf4
   2c6c0:	mov	r1, r5
   2c6c4:	blx	r3
   2c6c8:	cmp	r4, #0
   2c6cc:	mov	r5, r4
   2c6d0:	bne	2c684 <myhtml_tree_adoption_agency_algorithm@@Base+0x3f4>
   2c6d4:	ldr	r1, [sp, #8]
   2c6d8:	mov	r6, #0
   2c6dc:	ldr	r0, [r1, #28]
   2c6e0:	cmp	r0, #0
   2c6e4:	streq	sl, [r1, #20]
   2c6e8:	strne	sl, [r0, #16]
   2c6ec:	strne	r0, [sl, #12]
   2c6f0:	str	r1, [sl, #24]
   2c6f4:	str	sl, [r1, #28]
   2c6f8:	ldr	r0, [sl, #40]	; 0x28
   2c6fc:	ldr	r3, [r0, #236]	; 0xec
   2c700:	cmp	r3, #0
   2c704:	beq	2c718 <myhtml_tree_adoption_agency_algorithm@@Base+0x488>
   2c708:	ldr	r2, [r0, #244]	; 0xf4
   2c70c:	mov	r1, sl
   2c710:	blx	r3
   2c714:	mov	r6, #0
   2c718:	ldr	r0, [sp, #36]	; 0x24
   2c71c:	ldr	r0, [r0, #124]	; 0x7c
   2c720:	ldr	r5, [r0, #4]
   2c724:	ldr	r1, [r0]
   2c728:	add	r1, r1, r5, lsl #2
   2c72c:	add	r2, r1, #4
   2c730:	cmp	r5, #0
   2c734:	beq	2c8d4 <myhtml_tree_adoption_agency_algorithm@@Base+0x644>
   2c738:	sub	r1, r2, #4
   2c73c:	ldr	r2, [r2, #-8]
   2c740:	sub	r5, r5, #1
   2c744:	cmp	r2, r9
   2c748:	mov	r2, r1
   2c74c:	bne	2c730 <myhtml_tree_adoption_agency_algorithm@@Base+0x4a0>
   2c750:	ldr	r0, [r0, #4]
   2c754:	sub	r0, r0, r5
   2c758:	lsl	r2, r0, #2
   2c75c:	sub	r0, r1, #4
   2c760:	bl	111b8 <memmove@plt>
   2c764:	ldr	r4, [sp, #36]	; 0x24
   2c768:	ldr	r0, [r4, #124]	; 0x7c
   2c76c:	ldr	r1, [r0, #4]
   2c770:	sub	r1, r1, #1
   2c774:	str	r1, [r0, #4]
   2c778:	mov	r1, sl
   2c77c:	ldr	r2, [sp, #28]
   2c780:	cmp	r5, r2
   2c784:	subcc	r2, r2, #1
   2c788:	bl	1156c <myhtml_tree_list_insert_by_index@plt>
   2c78c:	ldr	r0, [r4, #128]	; 0x80
   2c790:	ldr	r3, [r0, #4]
   2c794:	ldr	r2, [r0]
   2c798:	add	r1, r2, r3, lsl #2
   2c79c:	add	r5, r1, #4
   2c7a0:	cmp	r3, #0
   2c7a4:	beq	2c7ec <myhtml_tree_adoption_agency_algorithm@@Base+0x55c>
   2c7a8:	ldr	r7, [r5, #-8]
   2c7ac:	sub	r1, r5, #4
   2c7b0:	sub	r3, r3, #1
   2c7b4:	mov	r5, r1
   2c7b8:	cmp	r7, r9
   2c7bc:	bne	2c7a0 <myhtml_tree_adoption_agency_algorithm@@Base+0x510>
   2c7c0:	ldr	r0, [r0, #4]
   2c7c4:	sub	r0, r0, r3
   2c7c8:	lsl	r2, r0, #2
   2c7cc:	sub	r0, r1, #4
   2c7d0:	bl	111b8 <memmove@plt>
   2c7d4:	ldr	r0, [sp, #36]	; 0x24
   2c7d8:	ldr	r0, [r0, #128]	; 0x80
   2c7dc:	ldr	r1, [r0, #4]
   2c7e0:	sub	r1, r1, #1
   2c7e4:	str	r1, [r0, #4]
   2c7e8:	ldr	r2, [r0]
   2c7ec:	ldr	r7, [sp, #20]
   2c7f0:	ldr	r5, [sp, #8]
   2c7f4:	ldr	r1, [r0, #4]
   2c7f8:	mov	r6, #0
   2c7fc:	cmp	r1, #0
   2c800:	beq	2c838 <myhtml_tree_adoption_agency_algorithm@@Base+0x5a8>
   2c804:	mov	r1, #0
   2c808:	ldr	r3, [r2, r1, lsl #2]
   2c80c:	cmp	r3, r5
   2c810:	beq	2c828 <myhtml_tree_adoption_agency_algorithm@@Base+0x598>
   2c814:	ldr	r3, [r0, #4]
   2c818:	add	r1, r1, #1
   2c81c:	cmp	r1, r3
   2c820:	bcc	2c808 <myhtml_tree_adoption_agency_algorithm@@Base+0x578>
   2c824:	b	2c838 <myhtml_tree_adoption_agency_algorithm@@Base+0x5a8>
   2c828:	add	r2, r1, #1
   2c82c:	mov	r1, sl
   2c830:	bl	1156c <myhtml_tree_list_insert_by_index@plt>
   2c834:	mov	r6, #0
   2c838:	cmp	r7, #8
   2c83c:	beq	2c8d4 <myhtml_tree_adoption_agency_algorithm@@Base+0x644>
   2c840:	ldr	r8, [sp, #36]	; 0x24
   2c844:	ldr	sl, [sp, #12]
   2c848:	ldr	r4, [r8, #124]	; 0x7c
   2c84c:	ldr	ip, [r4]
   2c850:	b	2c31c <myhtml_tree_adoption_agency_algorithm@@Base+0x8c>
   2c854:	mov	r6, #1
   2c858:	b	2c8d4 <myhtml_tree_adoption_agency_algorithm@@Base+0x644>
   2c85c:	ldr	r0, [r7, #4]
   2c860:	ldr	r1, [sp, #28]
   2c864:	ldr	r4, [sp, #36]	; 0x24
   2c868:	add	r1, r1, r0, lsl #2
   2c86c:	add	r2, r1, #4
   2c870:	cmp	r0, #0
   2c874:	beq	2c8b4 <myhtml_tree_adoption_agency_algorithm@@Base+0x624>
   2c878:	sub	r1, r2, #4
   2c87c:	ldr	r2, [r2, #-8]
   2c880:	sub	r0, r0, #1
   2c884:	cmp	r2, r9
   2c888:	mov	r2, r1
   2c88c:	bne	2c870 <myhtml_tree_adoption_agency_algorithm@@Base+0x5e0>
   2c890:	ldr	r2, [r7, #4]
   2c894:	sub	r0, r2, r0
   2c898:	lsl	r2, r0, #2
   2c89c:	sub	r0, r1, #4
   2c8a0:	bl	111b8 <memmove@plt>
   2c8a4:	ldr	r0, [r4, #124]	; 0x7c
   2c8a8:	ldr	r1, [r0, #4]
   2c8ac:	sub	r1, r1, #1
   2c8b0:	str	r1, [r0, #4]
   2c8b4:	mov	r6, #0
   2c8b8:	b	2c8d4 <myhtml_tree_adoption_agency_algorithm@@Base+0x644>
   2c8bc:	ldr	r1, [r0, #4]
   2c8c0:	cmp	r1, #0
   2c8c4:	beq	2c8d4 <myhtml_tree_adoption_agency_algorithm@@Base+0x644>
   2c8c8:	ldr	r1, [r0, #4]
   2c8cc:	sub	r1, r1, #1
   2c8d0:	str	r1, [r0, #4]
   2c8d4:	mov	r0, r6
   2c8d8:	sub	sp, fp, #28
   2c8dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c8e0:	ldr	r4, [sp, #36]	; 0x24
   2c8e4:	ldr	r0, [r4, #128]	; 0x80
   2c8e8:	ldr	r1, [r0, #4]
   2c8ec:	cmp	r1, #0
   2c8f0:	beq	2c908 <myhtml_tree_adoption_agency_algorithm@@Base+0x678>
   2c8f4:	ldr	r1, [r0]
   2c8f8:	ldr	r2, [r0, #4]
   2c8fc:	add	r1, r1, r2, lsl #2
   2c900:	ldr	r1, [r1, #-4]
   2c904:	b	2c90c <myhtml_tree_adoption_agency_algorithm@@Base+0x67c>
   2c908:	mov	r1, #0
   2c90c:	ldr	r2, [r0, #4]
   2c910:	cmp	r2, #0
   2c914:	ldrne	r2, [r0, #4]
   2c918:	subne	r2, r2, #1
   2c91c:	strne	r2, [r0, #4]
   2c920:	cmp	r1, r9
   2c924:	bne	2c8e8 <myhtml_tree_adoption_agency_algorithm@@Base+0x658>
   2c928:	ldr	r0, [r4, #124]	; 0x7c
   2c92c:	mov	r6, #0
   2c930:	ldr	r2, [r0, #4]
   2c934:	ldr	r1, [r0]
   2c938:	add	r1, r1, r2, lsl #2
   2c93c:	add	r3, r1, #4
   2c940:	cmp	r2, #0
   2c944:	beq	2c8d4 <myhtml_tree_adoption_agency_algorithm@@Base+0x644>
   2c948:	sub	r1, r3, #4
   2c94c:	ldr	r3, [r3, #-8]
   2c950:	sub	r2, r2, #1
   2c954:	cmp	r3, r9
   2c958:	mov	r3, r1
   2c95c:	bne	2c940 <myhtml_tree_adoption_agency_algorithm@@Base+0x6b0>
   2c960:	ldr	r0, [r0, #4]
   2c964:	sub	r0, r0, r2
   2c968:	lsl	r2, r0, #2
   2c96c:	sub	r0, r1, #4
   2c970:	bl	111b8 <memmove@plt>
   2c974:	ldr	r0, [r4, #124]	; 0x7c
   2c978:	mov	r6, #0
   2c97c:	b	2c8c8 <myhtml_tree_adoption_agency_algorithm@@Base+0x638>

0002c980 <myhtml_tree_appropriate_place_inserting_in_tree@@Base>:
   2c980:	push	{r4, sl, fp, lr}
   2c984:	add	fp, sp, #8
   2c988:	mov	r2, #1
   2c98c:	str	r2, [r1]
   2c990:	ldr	r2, [r0, #40]	; 0x28
   2c994:	ldrb	r2, [r2, #188]	; 0xbc
   2c998:	cmp	r2, #0
   2c99c:	beq	2ca08 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x88>
   2c9a0:	ldr	r2, [r0, #8]
   2c9a4:	cmp	r2, #1
   2c9a8:	bne	2ca10 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x90>
   2c9ac:	ldr	r2, [r0, #4]
   2c9b0:	sub	r2, r2, #125	; 0x7d
   2c9b4:	cmp	r2, #10
   2c9b8:	bhi	2ca08 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x88>
   2c9bc:	mov	ip, #1
   2c9c0:	movw	r3, #1187	; 0x4a3
   2c9c4:	tst	r3, ip, lsl r2
   2c9c8:	beq	2ca08 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x88>
   2c9cc:	mov	lr, r0
   2c9d0:	ldr	lr, [lr, #24]
   2c9d4:	cmp	lr, #0
   2c9d8:	ldrne	r2, [lr, #4]
   2c9dc:	cmpne	r2, #128	; 0x80
   2c9e0:	bne	2c9d0 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x50>
   2c9e4:	mov	r3, r0
   2c9e8:	ldr	r3, [r3, #24]
   2c9ec:	cmp	r3, #0
   2c9f0:	beq	2ca1c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x9c>
   2c9f4:	ldr	r2, [r3, #4]
   2c9f8:	cmp	r2, #125	; 0x7d
   2c9fc:	bne	2c9e8 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x68>
   2ca00:	mov	ip, #0
   2ca04:	b	2ca20 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xa0>
   2ca08:	mov	r2, #0
   2ca0c:	str	r2, [r1]
   2ca10:	mov	lr, r0
   2ca14:	mov	r0, lr
   2ca18:	pop	{r4, sl, fp, pc}
   2ca1c:	mov	ip, #1
   2ca20:	cmp	lr, #0
   2ca24:	beq	2ca50 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xd0>
   2ca28:	mov	r2, lr
   2ca2c:	ldr	r2, [r2, #24]
   2ca30:	cmp	r2, #0
   2ca34:	ldrne	r4, [r2, #4]
   2ca38:	cmpne	r4, #125	; 0x7d
   2ca3c:	bne	2ca2c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xac>
   2ca40:	cmp	r3, #0
   2ca44:	beq	2ca80 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x100>
   2ca48:	cmp	r3, r2
   2ca4c:	bne	2ca80 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x100>
   2ca50:	cmp	ip, #0
   2ca54:	bne	2ca10 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x90>
   2ca58:	ldr	r2, [r3, #24]
   2ca5c:	mov	lr, r0
   2ca60:	cmp	r2, #0
   2ca64:	beq	2ca14 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x94>
   2ca68:	ldr	r0, [r3, #12]
   2ca6c:	mov	lr, r3
   2ca70:	cmp	r0, #0
   2ca74:	beq	2ca14 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x94>
   2ca78:	mov	r2, #2
   2ca7c:	b	2ca0c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x8c>
   2ca80:	mov	r0, #0
   2ca84:	str	r0, [r1]
   2ca88:	b	2ca14 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x94>

0002ca8c <myhtml_tree_template_insertion_append@@Base>:
   2ca8c:	push	{r4, r5, fp, lr}
   2ca90:	add	fp, sp, #8
   2ca94:	ldr	r5, [r0, #140]	; 0x8c
   2ca98:	mov	r4, r1
   2ca9c:	ldmib	r5, {r0, r1}
   2caa0:	cmp	r0, r1
   2caa4:	bcc	2cac4 <myhtml_tree_template_insertion_append@@Base+0x38>
   2caa8:	lsl	r0, r1, #1
   2caac:	lsl	r1, r1, #3
   2cab0:	str	r0, [r5, #8]
   2cab4:	ldr	r0, [r5]
   2cab8:	bl	10f78 <mycore_realloc@plt>
   2cabc:	cmp	r0, #0
   2cac0:	strne	r0, [r5]
   2cac4:	ldm	r5, {r0, r1}
   2cac8:	str	r4, [r0, r1, lsl #2]
   2cacc:	ldr	r0, [r5, #4]
   2cad0:	add	r0, r0, #1
   2cad4:	str	r0, [r5, #4]
   2cad8:	pop	{r4, r5, fp, pc}

0002cadc <myhtml_tree_template_insertion_pop@@Base>:
   2cadc:	ldr	r0, [r0, #140]	; 0x8c
   2cae0:	ldr	r1, [r0, #4]
   2cae4:	cmp	r1, #0
   2cae8:	subne	r1, r1, #1
   2caec:	strne	r1, [r0, #4]
   2caf0:	bx	lr

0002caf4 <myhtml_tree_template_insertion_length@@Base>:
   2caf4:	ldr	r0, [r0, #140]	; 0x8c
   2caf8:	ldr	r0, [r0, #4]
   2cafc:	bx	lr

0002cb00 <myhtml_tree_token_list_append@@Base>:
   2cb00:	push	{r4, r5, fp, lr}
   2cb04:	add	fp, sp, #8
   2cb08:	mov	r4, r0
   2cb0c:	mov	r5, r1
   2cb10:	ldr	r0, [r0, #4]
   2cb14:	ldr	r1, [r4, #8]
   2cb18:	cmp	r0, r1
   2cb1c:	bcc	2cb3c <myhtml_tree_token_list_append@@Base+0x3c>
   2cb20:	lsl	r0, r1, #1
   2cb24:	lsl	r1, r1, #3
   2cb28:	str	r0, [r4, #8]
   2cb2c:	ldr	r0, [r4]
   2cb30:	bl	10f78 <mycore_realloc@plt>
   2cb34:	cmp	r0, #0
   2cb38:	strne	r0, [r4]
   2cb3c:	ldm	r4, {r0, r1}
   2cb40:	str	r5, [r0, r1, lsl #2]
   2cb44:	add	r0, r1, #1
   2cb48:	str	r0, [r4, #4]
   2cb4c:	pop	{r4, r5, fp, pc}

0002cb50 <myhtml_tree_token_list_append_after_index@@Base>:
   2cb50:	push	{r4, r5, r6, sl, fp, lr}
   2cb54:	add	fp, sp, #16
   2cb58:	mov	r4, r0
   2cb5c:	mov	r5, r1
   2cb60:	ldr	r0, [r0, #4]
   2cb64:	mov	r6, r2
   2cb68:	ldr	r1, [r4, #8]
   2cb6c:	cmp	r0, r1
   2cb70:	bcc	2cb90 <myhtml_tree_token_list_append_after_index@@Base+0x40>
   2cb74:	lsl	r0, r1, #1
   2cb78:	lsl	r1, r1, #3
   2cb7c:	str	r0, [r4, #8]
   2cb80:	ldr	r0, [r4]
   2cb84:	bl	10f78 <mycore_realloc@plt>
   2cb88:	cmp	r0, #0
   2cb8c:	strne	r0, [r4]
   2cb90:	ldr	r0, [r4, #4]
   2cb94:	ldr	r1, [r4]
   2cb98:	cmp	r0, r6
   2cb9c:	bcs	2cbc0 <myhtml_tree_token_list_append_after_index@@Base+0x70>
   2cba0:	ldr	r2, [r1, r6, lsl #2]
   2cba4:	add	r1, r1, #4
   2cba8:	mov	r3, r6
   2cbac:	str	r2, [r1, r3, lsl #2]
   2cbb0:	add	r3, r3, #1
   2cbb4:	cmp	r3, r0
   2cbb8:	bhi	2cbac <myhtml_tree_token_list_append_after_index@@Base+0x5c>
   2cbbc:	ldr	r1, [r4]
   2cbc0:	add	r1, r1, r6, lsl #2
   2cbc4:	add	r0, r0, #1
   2cbc8:	str	r5, [r1, #4]
   2cbcc:	str	r0, [r4, #4]
   2cbd0:	pop	{r4, r5, r6, sl, fp, pc}

0002cbd4 <myhtml_tree_token_list_current_node@@Base>:
   2cbd4:	ldr	r1, [r0, #4]
   2cbd8:	cmp	r1, #0
   2cbdc:	moveq	r0, #0
   2cbe0:	bxeq	lr
   2cbe4:	ldr	r0, [r0]
   2cbe8:	add	r0, r0, r1, lsl #2
   2cbec:	ldr	r0, [r0, #-4]
   2cbf0:	bx	lr

0002cbf4 <myhtml_tree_tags_close_p@@Base>:
   2cbf4:	push	{r4, sl, fp, lr}
   2cbf8:	add	fp, sp, #8
   2cbfc:	mov	r1, #99	; 0x63
   2cc00:	mov	r2, #1
   2cc04:	mov	r4, r0
   2cc08:	bl	118fc <myhtml_tree_generate_implied_end_tags@plt>
   2cc0c:	ldr	r0, [r4, #128]	; 0x80
   2cc10:	ldr	r1, [r0, #4]
   2cc14:	cmp	r1, #0
   2cc18:	beq	2cc30 <myhtml_tree_tags_close_p@@Base+0x3c>
   2cc1c:	ldr	r1, [r0]
   2cc20:	ldr	r0, [r0, #4]
   2cc24:	add	r0, r1, r0, lsl #2
   2cc28:	ldr	r0, [r0, #-4]
   2cc2c:	b	2cc34 <myhtml_tree_tags_close_p@@Base+0x40>
   2cc30:	mov	r0, #0
   2cc34:	mov	r1, #99	; 0x63
   2cc38:	bl	11c2c <myhtml_is_html_node@plt>
   2cc3c:	mov	r0, r4
   2cc40:	mov	r1, #99	; 0x63
   2cc44:	mov	r2, #1
   2cc48:	mov	r3, #0
   2cc4c:	pop	{r4, sl, fp, lr}
   2cc50:	b	2b7fc <myhtml_tree_open_elements_pop_until@@Base>

0002cc54 <myhtml_tree_generic_raw_text_element_parsing_algorithm@@Base>:
   2cc54:	push	{r4, sl, fp, lr}
   2cc58:	add	fp, sp, #8
   2cc5c:	mov	r2, #1
   2cc60:	mov	r4, r0
   2cc64:	bl	11dd0 <myhtml_tree_node_insert_by_token@plt>
   2cc68:	ldr	r1, [r4, #168]	; 0xa8
   2cc6c:	mov	r2, #7
   2cc70:	str	r2, [r4, #168]	; 0xa8
   2cc74:	str	r1, [r4, #172]	; 0xac
   2cc78:	pop	{r4, sl, fp, pc}

0002cc7c <myhtml_tree_clear_stack_back_table_context@@Base>:
   2cc7c:	ldr	r0, [r0, #128]	; 0x80
   2cc80:	ldr	r1, [r0, #4]
   2cc84:	cmp	r1, #0
   2cc88:	bne	2cc94 <myhtml_tree_clear_stack_back_table_context@@Base+0x18>
   2cc8c:	mov	r1, #0
   2cc90:	b	2cca4 <myhtml_tree_clear_stack_back_table_context@@Base+0x28>
   2cc94:	ldr	r1, [r0]
   2cc98:	ldr	r2, [r0, #4]
   2cc9c:	add	r1, r1, r2, lsl #2
   2cca0:	ldr	r1, [r1, #-4]
   2cca4:	ldr	r2, [r1, #4]
   2cca8:	cmp	r2, #65	; 0x41
   2ccac:	cmpne	r2, #128	; 0x80
   2ccb0:	bne	2cce8 <myhtml_tree_clear_stack_back_table_context@@Base+0x6c>
   2ccb4:	ldr	r1, [r1, #8]
   2ccb8:	cmp	r1, #1
   2ccbc:	bxeq	lr
   2ccc0:	ldr	r1, [r0, #4]
   2ccc4:	cmp	r1, #0
   2ccc8:	ldrne	r1, [r0, #4]
   2cccc:	subne	r1, r1, #1
   2ccd0:	strne	r1, [r0, #4]
   2ccd4:	mov	r1, #0
   2ccd8:	ldr	r2, [r0, #4]
   2ccdc:	cmp	r2, #0
   2cce0:	bne	2cc94 <myhtml_tree_clear_stack_back_table_context@@Base+0x18>
   2cce4:	b	2cca4 <myhtml_tree_clear_stack_back_table_context@@Base+0x28>
   2cce8:	cmp	r2, #125	; 0x7d
   2ccec:	beq	2ccb4 <myhtml_tree_clear_stack_back_table_context@@Base+0x38>
   2ccf0:	b	2ccc0 <myhtml_tree_clear_stack_back_table_context@@Base+0x44>

0002ccf4 <myhtml_tree_clear_stack_back_table_body_context@@Base>:
   2ccf4:	push	{fp, lr}
   2ccf8:	mov	fp, sp
   2ccfc:	ldr	r0, [r0, #128]	; 0x80
   2cd00:	ldr	r1, [r0, #4]
   2cd04:	cmp	r1, #0
   2cd08:	beq	2cd20 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x2c>
   2cd0c:	ldr	r1, [r0]
   2cd10:	ldr	r2, [r0, #4]
   2cd14:	add	r1, r1, r2, lsl #2
   2cd18:	ldr	r3, [r1, #-4]
   2cd1c:	b	2cd24 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x30>
   2cd20:	mov	r3, #0
   2cd24:	mov	ip, #1
   2cd28:	mov	lr, #85	; 0x55
   2cd2c:	ldr	r1, [r3, #4]
   2cd30:	sub	r2, r1, #126	; 0x7e
   2cd34:	cmp	r2, #6
   2cd38:	bhi	2cd88 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x94>
   2cd3c:	tst	lr, ip, lsl r2
   2cd40:	beq	2cd88 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x94>
   2cd44:	ldr	r1, [r3, #8]
   2cd48:	cmp	r1, #1
   2cd4c:	beq	2cd94 <myhtml_tree_clear_stack_back_table_body_context@@Base+0xa0>
   2cd50:	ldr	r1, [r0, #4]
   2cd54:	mov	r3, #0
   2cd58:	cmp	r1, #0
   2cd5c:	ldrne	r1, [r0, #4]
   2cd60:	subne	r1, r1, #1
   2cd64:	strne	r1, [r0, #4]
   2cd68:	ldr	r1, [r0, #4]
   2cd6c:	cmp	r1, #0
   2cd70:	beq	2cd2c <myhtml_tree_clear_stack_back_table_body_context@@Base+0x38>
   2cd74:	ldr	r1, [r0]
   2cd78:	ldr	r2, [r0, #4]
   2cd7c:	add	r1, r1, r2, lsl #2
   2cd80:	ldr	r3, [r1, #-4]
   2cd84:	b	2cd2c <myhtml_tree_clear_stack_back_table_body_context@@Base+0x38>
   2cd88:	cmp	r1, #65	; 0x41
   2cd8c:	beq	2cd44 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x50>
   2cd90:	b	2cd50 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x5c>
   2cd94:	pop	{fp, pc}

0002cd98 <myhtml_tree_clear_stack_back_table_row_context@@Base>:
   2cd98:	ldr	r0, [r0, #128]	; 0x80
   2cd9c:	ldr	r1, [r0, #4]
   2cda0:	cmp	r1, #0
   2cda4:	bne	2cdb0 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x18>
   2cda8:	mov	r1, #0
   2cdac:	b	2cdc0 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x28>
   2cdb0:	ldr	r1, [r0]
   2cdb4:	ldr	r2, [r0, #4]
   2cdb8:	add	r1, r1, r2, lsl #2
   2cdbc:	ldr	r1, [r1, #-4]
   2cdc0:	ldr	r2, [r1, #4]
   2cdc4:	cmp	r2, #65	; 0x41
   2cdc8:	cmpne	r2, #135	; 0x87
   2cdcc:	bne	2ce04 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x6c>
   2cdd0:	ldr	r1, [r1, #8]
   2cdd4:	cmp	r1, #1
   2cdd8:	bxeq	lr
   2cddc:	ldr	r1, [r0, #4]
   2cde0:	cmp	r1, #0
   2cde4:	ldrne	r1, [r0, #4]
   2cde8:	subne	r1, r1, #1
   2cdec:	strne	r1, [r0, #4]
   2cdf0:	mov	r1, #0
   2cdf4:	ldr	r2, [r0, #4]
   2cdf8:	cmp	r2, #0
   2cdfc:	bne	2cdb0 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x18>
   2ce00:	b	2cdc0 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x28>
   2ce04:	cmp	r2, #128	; 0x80
   2ce08:	beq	2cdd0 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x38>
   2ce0c:	b	2cddc <myhtml_tree_clear_stack_back_table_row_context@@Base+0x44>

0002ce10 <myhtml_tree_close_cell@@Base>:
   2ce10:	push	{r4, r5, fp, lr}
   2ce14:	add	fp, sp, #8
   2ce18:	mov	r5, r1
   2ce1c:	mov	r1, #0
   2ce20:	mov	r2, #0
   2ce24:	mov	r4, r0
   2ce28:	bl	118fc <myhtml_tree_generate_implied_end_tags@plt>
   2ce2c:	ldr	r0, [r4, #128]	; 0x80
   2ce30:	mov	r3, #0
   2ce34:	ldr	r1, [r0, #4]
   2ce38:	cmp	r1, #0
   2ce3c:	ldrne	r0, [r0, #4]
   2ce40:	ldmib	r5, {r1, r2}
   2ce44:	mov	r0, r4
   2ce48:	bl	11b0c <myhtml_tree_open_elements_pop_until@plt>
   2ce4c:	mov	r0, r4
   2ce50:	bl	11f38 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   2ce54:	mov	r0, #13
   2ce58:	str	r0, [r4, #168]	; 0xa8
   2ce5c:	pop	{r4, r5, fp, pc}

0002ce60 <myhtml_tree_is_mathml_integration_point@@Base>:
   2ce60:	ldr	r0, [r1, #8]
   2ce64:	cmp	r0, #2
   2ce68:	bne	2ce9c <myhtml_tree_is_mathml_integration_point@@Base+0x3c>
   2ce6c:	ldr	r1, [r1, #4]
   2ce70:	mov	r0, #1
   2ce74:	sub	r2, r1, #227	; 0xe3
   2ce78:	cmp	r2, #11
   2ce7c:	bhi	2ce94 <myhtml_tree_is_mathml_integration_point@@Base+0x34>
   2ce80:	mov	ip, #1
   2ce84:	movw	r3, #2097	; 0x831
   2ce88:	tst	r3, ip, lsl r2
   2ce8c:	beq	2ce94 <myhtml_tree_is_mathml_integration_point@@Base+0x34>
   2ce90:	bx	lr
   2ce94:	cmp	r1, #88	; 0x58
   2ce98:	bxeq	lr
   2ce9c:	mov	r0, #0
   2cea0:	bx	lr

0002cea4 <myhtml_tree_is_html_integration_point@@Base>:
   2cea4:	push	{r4, r5, r6, sl, fp, lr}
   2cea8:	add	fp, sp, #16
   2ceac:	sub	sp, sp, #8
   2ceb0:	mov	r5, r0
   2ceb4:	ldr	r0, [r1, #8]
   2ceb8:	mov	r4, r1
   2cebc:	cmp	r0, #2
   2cec0:	beq	2ceec <myhtml_tree_is_html_integration_point@@Base+0x48>
   2cec4:	cmp	r0, #3
   2cec8:	bne	2cf84 <myhtml_tree_is_html_integration_point@@Base+0xe0>
   2cecc:	ldr	r0, [r4, #4]
   2ced0:	mov	r6, #1
   2ced4:	cmp	r0, #134	; 0x86
   2ced8:	cmpne	r0, #156	; 0x9c
   2cedc:	beq	2cf88 <myhtml_tree_is_html_integration_point@@Base+0xe4>
   2cee0:	cmp	r0, #189	; 0xbd
   2cee4:	movne	r6, #0
   2cee8:	b	2cf88 <myhtml_tree_is_html_integration_point@@Base+0xe4>
   2ceec:	ldr	r0, [r4, #4]
   2cef0:	cmp	r0, #8
   2cef4:	bne	2cf84 <myhtml_tree_is_html_integration_point@@Base+0xe0>
   2cef8:	ldr	r1, [r4, #32]
   2cefc:	cmp	r1, #0
   2cf00:	beq	2cf84 <myhtml_tree_is_html_integration_point@@Base+0xe0>
   2cf04:	ldr	r0, [r1, #48]	; 0x30
   2cf08:	tst	r0, #1
   2cf0c:	bne	2cf84 <myhtml_tree_is_html_integration_point@@Base+0xe0>
   2cf10:	ldr	r0, [r5, #8]
   2cf14:	bl	118b4 <myhtml_token_node_wait_for_done@plt>
   2cf18:	ldr	r1, [r4, #32]
   2cf1c:	ldr	r0, [r5, #8]
   2cf20:	ldr	r3, [pc, #108]	; 2cf94 <myhtml_tree_is_html_integration_point@@Base+0xf0>
   2cf24:	mov	r2, #9
   2cf28:	str	r2, [sp, #4]
   2cf2c:	add	r3, pc, r3
   2cf30:	str	r3, [sp]
   2cf34:	mov	r3, #8
   2cf38:	ldr	r2, [pc, #88]	; 2cf98 <myhtml_tree_is_html_integration_point@@Base+0xf4>
   2cf3c:	add	r2, pc, r2
   2cf40:	bl	110b0 <myhtml_token_attr_match_case@plt>
   2cf44:	mov	r6, #1
   2cf48:	cmp	r0, #0
   2cf4c:	bne	2cf88 <myhtml_tree_is_html_integration_point@@Base+0xe4>
   2cf50:	ldr	r1, [r4, #32]
   2cf54:	ldr	r0, [r5, #8]
   2cf58:	ldr	r3, [pc, #60]	; 2cf9c <myhtml_tree_is_html_integration_point@@Base+0xf8>
   2cf5c:	mov	r2, #21
   2cf60:	str	r2, [sp, #4]
   2cf64:	add	r3, pc, r3
   2cf68:	str	r3, [sp]
   2cf6c:	mov	r3, #8
   2cf70:	ldr	r2, [pc, #40]	; 2cfa0 <myhtml_tree_is_html_integration_point@@Base+0xfc>
   2cf74:	add	r2, pc, r2
   2cf78:	bl	110b0 <myhtml_token_attr_match_case@plt>
   2cf7c:	cmp	r0, #0
   2cf80:	bne	2cf88 <myhtml_tree_is_html_integration_point@@Base+0xe4>
   2cf84:	mov	r6, #0
   2cf88:	mov	r0, r6
   2cf8c:	sub	sp, fp, #16
   2cf90:	pop	{r4, r5, r6, sl, fp, pc}
   2cf94:	andeq	lr, ip, pc, asr #28
   2cf98:	andeq	lr, ip, r6, lsr lr
   2cf9c:	andeq	lr, ip, r1, lsr #28
   2cfa0:	strdeq	lr, [ip], -lr	; <UNPREDICTABLE>

0002cfa4 <myhtml_tree_temp_tag_name_init@@Base>:
   2cfa4:	push	{r4, sl, fp, lr}
   2cfa8:	add	fp, sp, #8
   2cfac:	mov	r4, r0
   2cfb0:	mov	r0, #0
   2cfb4:	mov	r1, #1024	; 0x400
   2cfb8:	stmib	r4, {r0, r1}
   2cfbc:	mov	r0, #1024	; 0x400
   2cfc0:	bl	11dac <mycore_malloc@plt>
   2cfc4:	str	r0, [r4]
   2cfc8:	clz	r0, r0
   2cfcc:	lsr	r0, r0, #5
   2cfd0:	lsl	r0, r0, #1
   2cfd4:	pop	{r4, sl, fp, pc}

0002cfd8 <myhtml_tree_temp_tag_name_clean@@Base>:
   2cfd8:	mov	r1, #0
   2cfdc:	str	r1, [r0, #4]
   2cfe0:	bx	lr

0002cfe4 <myhtml_tree_temp_tag_name_append_one@@Base>:
   2cfe4:	push	{r4, r5, r6, sl, fp, lr}
   2cfe8:	add	fp, sp, #16
   2cfec:	mov	r5, r1
   2cff0:	ldmib	r0, {r1, r2}
   2cff4:	mov	r4, r0
   2cff8:	cmp	r1, r2
   2cffc:	bcs	2d008 <myhtml_tree_temp_tag_name_append_one@@Base+0x24>
   2d000:	ldr	r0, [r4]
   2d004:	b	2d02c <myhtml_tree_temp_tag_name_append_one@@Base+0x48>
   2d008:	ldr	r0, [r4]
   2d00c:	lsl	r6, r2, #1
   2d010:	mov	r1, r6
   2d014:	bl	10f78 <mycore_realloc@plt>
   2d018:	cmp	r0, #0
   2d01c:	beq	2d044 <myhtml_tree_temp_tag_name_append_one@@Base+0x60>
   2d020:	str	r0, [r4]
   2d024:	str	r6, [r4, #8]
   2d028:	ldr	r1, [r4, #4]
   2d02c:	strb	r5, [r0, r1]
   2d030:	ldr	r0, [r4, #4]
   2d034:	add	r0, r0, #1
   2d038:	str	r0, [r4, #4]
   2d03c:	mov	r0, #0
   2d040:	pop	{r4, r5, r6, sl, fp, pc}
   2d044:	mov	r0, #2
   2d048:	pop	{r4, r5, r6, sl, fp, pc}

0002d04c <myhtml_tree_temp_tag_name_append@@Base>:
   2d04c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2d050:	add	fp, sp, #24
   2d054:	cmp	r2, #0
   2d058:	mov	r4, #0
   2d05c:	movne	r6, r0
   2d060:	ldrne	r0, [r0]
   2d064:	cmpne	r0, #0
   2d068:	beq	2d0c8 <myhtml_tree_temp_tag_name_append@@Base+0x7c>
   2d06c:	mov	r5, r2
   2d070:	mov	r7, r1
   2d074:	ldmib	r6, {r1, r2}
   2d078:	add	r3, r1, r5
   2d07c:	cmp	r3, r2
   2d080:	bcc	2d0a4 <myhtml_tree_temp_tag_name_append@@Base+0x58>
   2d084:	add	r8, r5, r2, lsl #1
   2d088:	mov	r1, r8
   2d08c:	bl	10f78 <mycore_realloc@plt>
   2d090:	cmp	r0, #0
   2d094:	beq	2d0c4 <myhtml_tree_temp_tag_name_append@@Base+0x78>
   2d098:	str	r0, [r6]
   2d09c:	str	r8, [r6, #8]
   2d0a0:	ldr	r1, [r6, #4]
   2d0a4:	add	r0, r0, r1
   2d0a8:	mov	r1, r7
   2d0ac:	mov	r2, r5
   2d0b0:	bl	11290 <memcpy@plt>
   2d0b4:	ldr	r0, [r6, #4]
   2d0b8:	add	r0, r0, r5
   2d0bc:	str	r0, [r6, #4]
   2d0c0:	b	2d0c8 <myhtml_tree_temp_tag_name_append@@Base+0x7c>
   2d0c4:	mov	r4, #2
   2d0c8:	mov	r0, r4
   2d0cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002d0d0 <myhtml_tree_wait_for_last_done_token@@Base>:
   2d0d0:	push	{r4, r5, fp, lr}
   2d0d4:	add	fp, sp, #8
   2d0d8:	mov	r5, r0
   2d0dc:	ldr	r0, [r0, #152]	; 0x98
   2d0e0:	cmp	r0, r1
   2d0e4:	popeq	{r4, r5, fp, pc}
   2d0e8:	mov	r4, r1
   2d0ec:	ldr	r0, [r5]
   2d0f0:	ldr	r0, [r0]
   2d0f4:	ldr	r0, [r0, #24]
   2d0f8:	bl	113a4 <mythread_nanosleep_sleep@plt>
   2d0fc:	ldr	r0, [r5, #152]	; 0x98
   2d100:	cmp	r0, r4
   2d104:	bne	2d0ec <myhtml_tree_wait_for_last_done_token@@Base+0x1c>
   2d108:	pop	{r4, r5, fp, pc}

0002d10c <myhtml_tree_special_list_init@@Base>:
   2d10c:	push	{r4, sl, fp, lr}
   2d110:	add	fp, sp, #8
   2d114:	mov	r4, r0
   2d118:	mov	r0, #0
   2d11c:	mov	r1, #1024	; 0x400
   2d120:	stmib	r4, {r0, r1}
   2d124:	mov	r0, #8192	; 0x2000
   2d128:	bl	11dac <mycore_malloc@plt>
   2d12c:	str	r0, [r4]
   2d130:	clz	r0, r0
   2d134:	lsr	r0, r0, #5
   2d138:	lsl	r0, r0, #1
   2d13c:	pop	{r4, sl, fp, pc}

0002d140 <myhtml_tree_special_list_clean@@Base>:
   2d140:	mov	r1, #0
   2d144:	str	r1, [r0, #4]
   2d148:	bx	lr

0002d14c <myhtml_tree_special_list_destroy@@Base>:
   2d14c:	push	{r4, r5, r6, sl, fp, lr}
   2d150:	add	fp, sp, #16
   2d154:	mov	r4, #0
   2d158:	cmp	r0, #0
   2d15c:	beq	2d198 <myhtml_tree_special_list_destroy@@Base+0x4c>
   2d160:	mov	r5, r0
   2d164:	ldr	r0, [r0]
   2d168:	mov	r6, r1
   2d16c:	cmp	r0, #0
   2d170:	beq	2d180 <myhtml_tree_special_list_destroy@@Base+0x34>
   2d174:	bl	11eb4 <mycore_free@plt>
   2d178:	mov	r0, #0
   2d17c:	str	r0, [r5]
   2d180:	cmp	r6, #0
   2d184:	beq	2d194 <myhtml_tree_special_list_destroy@@Base+0x48>
   2d188:	mov	r0, r5
   2d18c:	bl	11eb4 <mycore_free@plt>
   2d190:	b	2d198 <myhtml_tree_special_list_destroy@@Base+0x4c>
   2d194:	mov	r4, r5
   2d198:	mov	r0, r4
   2d19c:	pop	{r4, r5, r6, sl, fp, pc}

0002d1a0 <myhtml_tree_special_list_append@@Base>:
   2d1a0:	push	{r4, r5, r6, r7, fp, lr}
   2d1a4:	add	fp, sp, #16
   2d1a8:	mov	r6, r1
   2d1ac:	ldmib	r0, {r1, r7}
   2d1b0:	mov	r5, r2
   2d1b4:	mov	r4, r0
   2d1b8:	cmp	r1, r7
   2d1bc:	bcs	2d1c8 <myhtml_tree_special_list_append@@Base+0x28>
   2d1c0:	ldr	r0, [r4]
   2d1c4:	b	2d1ec <myhtml_tree_special_list_append@@Base+0x4c>
   2d1c8:	ldr	r0, [r4]
   2d1cc:	lsl	r1, r7, #4
   2d1d0:	bl	10f78 <mycore_realloc@plt>
   2d1d4:	cmp	r0, #0
   2d1d8:	beq	2d204 <myhtml_tree_special_list_append@@Base+0x64>
   2d1dc:	lsl	r1, r7, #1
   2d1e0:	str	r0, [r4]
   2d1e4:	str	r1, [r4, #8]
   2d1e8:	ldr	r1, [r4, #4]
   2d1ec:	str	r6, [r0, r1, lsl #3]!
   2d1f0:	str	r5, [r0, #4]
   2d1f4:	add	r0, r1, #1
   2d1f8:	str	r0, [r4, #4]
   2d1fc:	mov	r0, #0
   2d200:	pop	{r4, r5, r6, r7, fp, pc}
   2d204:	mov	r0, #2
   2d208:	pop	{r4, r5, r6, r7, fp, pc}

0002d20c <myhtml_tree_special_list_length@@Base>:
   2d20c:	ldr	r0, [r0, #4]
   2d210:	bx	lr

0002d214 <myhtml_tree_special_list_pop@@Base>:
   2d214:	mov	r1, r0
   2d218:	ldr	r0, [r0, #4]
   2d21c:	cmp	r0, #0
   2d220:	moveq	r0, #0
   2d224:	subne	r0, r0, #1
   2d228:	strne	r0, [r1, #4]
   2d22c:	bx	lr

0002d230 <myhtml_tree_special_list_get_last@@Base>:
   2d230:	ldr	r1, [r0, #4]
   2d234:	cmp	r1, #0
   2d238:	moveq	r0, #0
   2d23c:	bxeq	lr
   2d240:	ldr	r0, [r0]
   2d244:	add	r0, r0, r1, lsl #3
   2d248:	bx	lr

0002d24c <myhtml_tree_incoming_buffer_first@@Base>:
   2d24c:	ldr	r0, [r0, #80]	; 0x50
   2d250:	bx	lr

0002d254 <myhtml_tree_incomming_buffer_make_data@@Base>:
   2d254:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2d258:	add	fp, sp, #24
   2d25c:	mov	r7, r0
   2d260:	ldr	r0, [r0, #80]	; 0x50
   2d264:	mov	r4, r2
   2d268:	mov	r6, r1
   2d26c:	bl	113f8 <mycore_incoming_buffer_find_by_position@plt>
   2d270:	mov	r5, r0
   2d274:	ldr	r0, [r0, #8]
   2d278:	ldr	r1, [r5, #12]
   2d27c:	sub	r6, r6, r1
   2d280:	add	r1, r6, r4
   2d284:	cmp	r1, r0
   2d288:	bls	2d2a8 <myhtml_tree_incomming_buffer_make_data@@Base+0x54>
   2d28c:	mov	r8, r7
   2d290:	ldr	r0, [r8, #208]!	; 0xd0
   2d294:	cmp	r0, #0
   2d298:	beq	2d2b4 <myhtml_tree_incomming_buffer_make_data@@Base+0x60>
   2d29c:	mov	r0, #0
   2d2a0:	str	r0, [r7, #212]	; 0xd4
   2d2a4:	b	2d308 <myhtml_tree_incomming_buffer_make_data@@Base+0xb4>
   2d2a8:	ldr	r0, [r5]
   2d2ac:	add	r0, r0, r6
   2d2b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d2b4:	mov	r0, #0
   2d2b8:	mov	r1, #1024	; 0x400
   2d2bc:	str	r0, [r7, #212]	; 0xd4
   2d2c0:	mov	r0, #1024	; 0x400
   2d2c4:	str	r1, [r7, #216]	; 0xd8
   2d2c8:	bl	11dac <mycore_malloc@plt>
   2d2cc:	str	r0, [r7, #208]	; 0xd0
   2d2d0:	b	2d308 <myhtml_tree_incomming_buffer_make_data@@Base+0xb4>
   2d2d4:	ldr	r0, [r5, #8]
   2d2d8:	add	r1, r6, r4
   2d2dc:	cmp	r1, r0
   2d2e0:	bls	2d314 <myhtml_tree_incomming_buffer_make_data@@Base+0xc0>
   2d2e4:	sub	r7, r0, r6
   2d2e8:	ldr	r0, [r5]
   2d2ec:	mov	r2, r7
   2d2f0:	add	r1, r0, r6
   2d2f4:	mov	r0, r8
   2d2f8:	bl	11020 <myhtml_tree_temp_tag_name_append@plt>
   2d2fc:	ldr	r5, [r5, #20]
   2d300:	sub	r4, r4, r7
   2d304:	mov	r6, #0
   2d308:	cmp	r5, #0
   2d30c:	bne	2d2d4 <myhtml_tree_incomming_buffer_make_data@@Base+0x80>
   2d310:	b	2d328 <myhtml_tree_incomming_buffer_make_data@@Base+0xd4>
   2d314:	ldr	r0, [r5]
   2d318:	mov	r2, r4
   2d31c:	add	r1, r0, r6
   2d320:	mov	r0, r8
   2d324:	bl	11020 <myhtml_tree_temp_tag_name_append@plt>
   2d328:	ldr	r0, [r8]
   2d32c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002d330 <mycore_fopen@@Base>:
   2d330:	b	1111c <fopen@plt>

0002d334 <mycore_fclose@@Base>:
   2d334:	b	11b9c <fclose@plt>

0002d338 <mycore_fread@@Base>:
   2d338:	b	11644 <fread@plt>

0002d33c <mycore_fwrite@@Base>:
   2d33c:	b	115cc <fwrite@plt>

0002d340 <mycore_fflush@@Base>:
   2d340:	b	11164 <fflush@plt>

0002d344 <mycore_fseek@@Base>:
   2d344:	b	11fe0 <fseek@plt>

0002d348 <mycore_ftell@@Base>:
   2d348:	b	1138c <ftell@plt>

0002d34c <mycore_ferror@@Base>:
   2d34c:	b	11284 <ferror@plt>

0002d350 <mycore_setbuf@@Base>:
   2d350:	b	1108c <setbuf@plt>

0002d354 <mycore_malloc@@Base>:
   2d354:	b	11770 <malloc@plt>

0002d358 <mycore_realloc@@Base>:
   2d358:	b	114ac <realloc@plt>

0002d35c <mycore_calloc@@Base>:
   2d35c:	b	10f84 <calloc@plt>

0002d360 <mycore_free@@Base>:
   2d360:	push	{fp, lr}
   2d364:	mov	fp, sp
   2d368:	bl	111e8 <free@plt>
   2d36c:	mov	r0, #0
   2d370:	pop	{fp, pc}

0002d374 <mythread_thread_create@@Base>:
   2d374:	push	{r4, r5, r6, r7, fp, lr}
   2d378:	add	fp, sp, #16
   2d37c:	mov	r6, r1
   2d380:	mov	r7, r0
   2d384:	mov	r0, #1
   2d388:	mov	r1, #4
   2d38c:	mov	r5, r2
   2d390:	bl	11248 <mycore_calloc@plt>
   2d394:	cmp	r0, #0
   2d398:	beq	2d3bc <mythread_thread_create@@Base+0x48>
   2d39c:	ldr	r1, [r7, #20]
   2d3a0:	mov	r2, r6
   2d3a4:	mov	r3, r5
   2d3a8:	mov	r4, r0
   2d3ac:	bl	11650 <pthread_create@plt>
   2d3b0:	cmp	r0, #0
   2d3b4:	movne	r4, #0
   2d3b8:	b	2d3c0 <mythread_thread_create@@Base+0x4c>
   2d3bc:	mov	r4, #0
   2d3c0:	mov	r0, r4
   2d3c4:	pop	{r4, r5, r6, r7, fp, pc}

0002d3c8 <mythread_thread_join@@Base>:
   2d3c8:	push	{fp, lr}
   2d3cc:	mov	fp, sp
   2d3d0:	ldr	r0, [r1]
   2d3d4:	mov	r1, #0
   2d3d8:	bl	11cbc <pthread_join@plt>
   2d3dc:	cmp	r0, #0
   2d3e0:	movwne	r0, #1
   2d3e4:	pop	{fp, pc}

0002d3e8 <mythread_thread_cancel@@Base>:
   2d3e8:	push	{fp, lr}
   2d3ec:	mov	fp, sp
   2d3f0:	ldr	r0, [r1]
   2d3f4:	bl	11ac4 <pthread_cancel@plt>
   2d3f8:	cmp	r0, #0
   2d3fc:	movwne	r0, #1
   2d400:	pop	{fp, pc}

0002d404 <mythread_thread_destroy@@Base>:
   2d404:	push	{fp, lr}
   2d408:	mov	fp, sp
   2d40c:	mov	r0, r1
   2d410:	bl	11eb4 <mycore_free@plt>
   2d414:	mov	r0, #0
   2d418:	pop	{fp, pc}

0002d41c <mythread_thread_attr_init@@Base>:
   2d41c:	push	{r4, r5, r6, sl, fp, lr}
   2d420:	add	fp, sp, #16
   2d424:	mov	r6, r0
   2d428:	mov	r0, #1
   2d42c:	mov	r1, #36	; 0x24
   2d430:	bl	11248 <mycore_calloc@plt>
   2d434:	mov	r4, #0
   2d438:	cmp	r0, #0
   2d43c:	beq	2d478 <mythread_thread_attr_init@@Base+0x5c>
   2d440:	mov	r5, r0
   2d444:	bl	119a4 <pthread_attr_init@plt>
   2d448:	cmp	r0, #0
   2d44c:	str	r0, [r6, #28]
   2d450:	bne	2d470 <mythread_thread_attr_init@@Base+0x54>
   2d454:	mov	r0, r5
   2d458:	mov	r1, #0
   2d45c:	mov	r4, #0
   2d460:	bl	12004 <pthread_attr_setdetachstate@plt>
   2d464:	cmp	r0, #0
   2d468:	str	r0, [r6, #28]
   2d46c:	beq	2d480 <mythread_thread_attr_init@@Base+0x64>
   2d470:	mov	r0, r5
   2d474:	bl	11eb4 <mycore_free@plt>
   2d478:	mov	r0, r4
   2d47c:	pop	{r4, r5, r6, sl, fp, pc}
   2d480:	mov	r4, r5
   2d484:	b	2d478 <mythread_thread_attr_init@@Base+0x5c>

0002d488 <mythread_thread_attr_clean@@Base>:
   2d488:	bx	lr

0002d48c <mythread_thread_attr_destroy@@Base>:
   2d48c:	cmp	r1, #0
   2d490:	bxeq	lr
   2d494:	push	{r4, r5, fp, lr}
   2d498:	add	fp, sp, #8
   2d49c:	mov	r5, r0
   2d4a0:	mov	r0, r1
   2d4a4:	mov	r4, r1
   2d4a8:	bl	11140 <pthread_attr_destroy@plt>
   2d4ac:	str	r0, [r5, #28]
   2d4b0:	mov	r0, r4
   2d4b4:	pop	{r4, r5, fp, lr}
   2d4b8:	b	11eb4 <mycore_free@plt>

0002d4bc <mythread_mutex_create@@Base>:
   2d4bc:	push	{r4, r5, fp, lr}
   2d4c0:	add	fp, sp, #8
   2d4c4:	bl	11a94 <mcsync_mutex_create@plt>
   2d4c8:	mov	r4, #0
   2d4cc:	cmp	r0, #0
   2d4d0:	beq	2d4f4 <mythread_mutex_create@@Base+0x38>
   2d4d4:	mov	r5, r0
   2d4d8:	bl	11ca4 <mcsync_mutex_init@plt>
   2d4dc:	cmp	r0, #0
   2d4e0:	beq	2d4f0 <mythread_mutex_create@@Base+0x34>
   2d4e4:	mov	r0, r5
   2d4e8:	bl	11eb4 <mycore_free@plt>
   2d4ec:	b	2d4f4 <mythread_mutex_create@@Base+0x38>
   2d4f0:	mov	r4, r5
   2d4f4:	mov	r0, r4
   2d4f8:	pop	{r4, r5, fp, pc}

0002d4fc <mythread_mutex_post@@Base>:
   2d4fc:	mov	r0, r1
   2d500:	b	11230 <mcsync_mutex_unlock@plt>

0002d504 <mythread_mutex_wait@@Base>:
   2d504:	mov	r0, r1
   2d508:	b	120d0 <mcsync_mutex_lock@plt>

0002d50c <mythread_mutex_try_wait@@Base>:
   2d50c:	mov	r0, r1
   2d510:	b	12058 <mcsync_mutex_try_lock@plt>

0002d514 <mythread_mutex_close@@Base>:
   2d514:	mov	r0, r1
   2d518:	b	110ec <mcsync_mutex_destroy@plt>

0002d51c <mythread_nanosleep_create@@Base>:
   2d51c:	mov	r0, #1
   2d520:	mov	r1, #8
   2d524:	b	11248 <mycore_calloc@plt>

0002d528 <mythread_nanosleep_clean@@Base>:
   2d528:	mov	r1, #0
   2d52c:	str	r1, [r0, #4]
   2d530:	str	r1, [r0]
   2d534:	bx	lr

0002d538 <mythread_nanosleep_destroy@@Base>:
   2d538:	b	11eb4 <mycore_free@plt>

0002d53c <mythread_nanosleep_sleep@@Base>:
   2d53c:	push	{fp, lr}
   2d540:	mov	fp, sp
   2d544:	mov	r1, #0
   2d548:	bl	11254 <nanosleep@plt>
   2d54c:	cmp	r0, #0
   2d550:	movwne	r0, #1
   2d554:	pop	{fp, pc}

0002d558 <mcsync_spin_create@@Base>:
   2d558:	mov	r0, #1
   2d55c:	mov	r1, #4
   2d560:	b	11248 <mycore_calloc@plt>

0002d564 <mcsync_spin_init@@Base>:
   2d564:	mov	r0, #0
   2d568:	bx	lr

0002d56c <mcsync_spin_clean@@Base>:
   2d56c:	mov	r1, #0
   2d570:	str	r1, [r0]
   2d574:	bx	lr

0002d578 <mcsync_spin_destroy@@Base>:
   2d578:	b	11eb4 <mycore_free@plt>

0002d57c <mcsync_spin_lock@@Base>:
   2d57c:	mov	r2, #0
   2d580:	mov	r1, #1
   2d584:	ldaex	r3, [r0]
   2d588:	cmp	r3, r2
   2d58c:	bne	2d5a4 <mcsync_spin_lock@@Base+0x28>
   2d590:	stlex	r3, r1, [r0]
   2d594:	cmp	r3, #0
   2d598:	moveq	r0, #0
   2d59c:	bxeq	lr
   2d5a0:	b	2d584 <mcsync_spin_lock@@Base+0x8>
   2d5a4:	clrex
   2d5a8:	mov	r2, r3
   2d5ac:	b	2d584 <mcsync_spin_lock@@Base+0x8>

0002d5b0 <mcsync_spin_unlock@@Base>:
   2d5b0:	mov	r1, #0
   2d5b4:	stl	r1, [r0]
   2d5b8:	mov	r0, #0
   2d5bc:	bx	lr

0002d5c0 <mcsync_mutex_create@@Base>:
   2d5c0:	mov	r0, #1
   2d5c4:	mov	r1, #24
   2d5c8:	b	11248 <mycore_calloc@plt>

0002d5cc <mcsync_mutex_init@@Base>:
   2d5cc:	push	{fp, lr}
   2d5d0:	mov	fp, sp
   2d5d4:	mov	r1, #0
   2d5d8:	bl	112fc <pthread_mutex_init@plt>
   2d5dc:	cmp	r0, #0
   2d5e0:	movwne	r0, #1
   2d5e4:	pop	{fp, pc}

0002d5e8 <mcsync_mutex_clean@@Base>:
   2d5e8:	bx	lr

0002d5ec <mcsync_mutex_destroy@@Base>:
   2d5ec:	push	{r4, sl, fp, lr}
   2d5f0:	add	fp, sp, #8
   2d5f4:	mov	r4, r0
   2d5f8:	bl	11158 <pthread_mutex_destroy@plt>
   2d5fc:	mov	r0, r4
   2d600:	pop	{r4, sl, fp, lr}
   2d604:	b	11eb4 <mycore_free@plt>

0002d608 <mcsync_mutex_lock@@Base>:
   2d608:	push	{fp, lr}
   2d60c:	mov	fp, sp
   2d610:	bl	1123c <pthread_mutex_lock@plt>
   2d614:	cmp	r0, #0
   2d618:	movwne	r0, #1
   2d61c:	pop	{fp, pc}

0002d620 <mcsync_mutex_try_lock@@Base>:
   2d620:	push	{fp, lr}
   2d624:	mov	fp, sp
   2d628:	bl	1135c <pthread_mutex_trylock@plt>
   2d62c:	cmp	r0, #0
   2d630:	movwne	r0, #1
   2d634:	pop	{fp, pc}

0002d638 <mcsync_mutex_unlock@@Base>:
   2d638:	push	{fp, lr}
   2d63c:	mov	fp, sp
   2d640:	bl	10f60 <pthread_mutex_unlock@plt>
   2d644:	cmp	r0, #0
   2d648:	movwne	r0, #1
   2d64c:	pop	{fp, pc}

Disassembly of section .fini:

0002d650 <.fini>:
   2d650:	push	{r3, lr}
   2d654:	pop	{r3, pc}
