
../repos/coreutils/src/cat:     file format elf32-littlearm


Disassembly of section .init:

00010cb4 <.init>:
   10cb4:	push	{r3, lr}
   10cb8:	bl	11d68 <close@plt+0xe0c>
   10cbc:	pop	{r3, pc}

Disassembly of section .plt:

00010cc0 <calloc@plt-0x14>:
   10cc0:	push	{lr}		; (str lr, [sp, #-4]!)
   10cc4:	ldr	lr, [pc, #4]	; 10cd0 <calloc@plt-0x4>
   10cc8:	add	lr, pc, lr
   10ccc:	ldr	pc, [lr, #8]!
   10cd0:	andeq	r8, r1, r0, lsr r3

00010cd4 <calloc@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #24, 20	; 0x18000
   10cdc:	ldr	pc, [ip, #816]!	; 0x330

00010ce0 <fputs_unlocked@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #24, 20	; 0x18000
   10ce8:	ldr	pc, [ip, #808]!	; 0x328

00010cec <raise@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #24, 20	; 0x18000
   10cf4:	ldr	pc, [ip, #800]!	; 0x320

00010cf8 <strcmp@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #24, 20	; 0x18000
   10d00:	ldr	pc, [ip, #792]!	; 0x318

00010d04 <posix_fadvise64@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #24, 20	; 0x18000
   10d0c:	ldr	pc, [ip, #784]!	; 0x310

00010d10 <read@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #24, 20	; 0x18000
   10d18:	ldr	pc, [ip, #776]!	; 0x308

00010d1c <fflush@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #24, 20	; 0x18000
   10d24:	ldr	pc, [ip, #768]!	; 0x300

00010d28 <memmove@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #24, 20	; 0x18000
   10d30:	ldr	pc, [ip, #760]!	; 0x2f8

00010d34 <free@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #24, 20	; 0x18000
   10d3c:	ldr	pc, [ip, #752]!	; 0x2f0

00010d40 <_exit@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #24, 20	; 0x18000
   10d48:	ldr	pc, [ip, #744]!	; 0x2e8

00010d4c <memcpy@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #24, 20	; 0x18000
   10d54:	ldr	pc, [ip, #736]!	; 0x2e0

00010d58 <mbsinit@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #24, 20	; 0x18000
   10d60:	ldr	pc, [ip, #728]!	; 0x2d8

00010d64 <memcmp@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #24, 20	; 0x18000
   10d6c:	ldr	pc, [ip, #720]!	; 0x2d0

00010d70 <stpcpy@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #24, 20	; 0x18000
   10d78:	ldr	pc, [ip, #712]!	; 0x2c8

00010d7c <fputc_unlocked@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #24, 20	; 0x18000
   10d84:	ldr	pc, [ip, #704]!	; 0x2c0

00010d88 <dcgettext@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #24, 20	; 0x18000
   10d90:	ldr	pc, [ip, #696]!	; 0x2b8

00010d94 <realloc@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #24, 20	; 0x18000
   10d9c:	ldr	pc, [ip, #688]!	; 0x2b0

00010da0 <textdomain@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #24, 20	; 0x18000
   10da8:	ldr	pc, [ip, #680]!	; 0x2a8

00010dac <iswprint@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #24, 20	; 0x18000
   10db4:	ldr	pc, [ip, #672]!	; 0x2a0

00010db8 <__fxstat64@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #24, 20	; 0x18000
   10dc0:	ldr	pc, [ip, #664]!	; 0x298

00010dc4 <copy_file_range@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #24, 20	; 0x18000
   10dcc:	ldr	pc, [ip, #656]!	; 0x290

00010dd0 <fwrite@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #24, 20	; 0x18000
   10dd8:	ldr	pc, [ip, #648]!	; 0x288

00010ddc <ioctl@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #24, 20	; 0x18000
   10de4:	ldr	pc, [ip, #640]!	; 0x280

00010de8 <lseek64@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #24, 20	; 0x18000
   10df0:	ldr	pc, [ip, #632]!	; 0x278

00010df4 <__ctype_get_mb_cur_max@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #24, 20	; 0x18000
   10dfc:	ldr	pc, [ip, #624]!	; 0x270

00010e00 <__fpending@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #24, 20	; 0x18000
   10e08:	ldr	pc, [ip, #616]!	; 0x268

00010e0c <mbrtowc@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #24, 20	; 0x18000
   10e14:	ldr	pc, [ip, #608]!	; 0x260

00010e18 <error@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #24, 20	; 0x18000
   10e20:	ldr	pc, [ip, #600]!	; 0x258

00010e24 <open64@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #24, 20	; 0x18000
   10e2c:	ldr	pc, [ip, #592]!	; 0x250

00010e30 <malloc@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #24, 20	; 0x18000
   10e38:	ldr	pc, [ip, #584]!	; 0x248

00010e3c <__libc_start_main@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #24, 20	; 0x18000
   10e44:	ldr	pc, [ip, #576]!	; 0x240

00010e48 <__freading@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #24, 20	; 0x18000
   10e50:	ldr	pc, [ip, #568]!	; 0x238

00010e54 <__gmon_start__@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #24, 20	; 0x18000
   10e5c:	ldr	pc, [ip, #560]!	; 0x230

00010e60 <getopt_long@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #24, 20	; 0x18000
   10e68:	ldr	pc, [ip, #552]!	; 0x228

00010e6c <__ctype_b_loc@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #24, 20	; 0x18000
   10e74:	ldr	pc, [ip, #544]!	; 0x220

00010e78 <exit@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #24, 20	; 0x18000
   10e80:	ldr	pc, [ip, #536]!	; 0x218

00010e84 <strlen@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #24, 20	; 0x18000
   10e8c:	ldr	pc, [ip, #528]!	; 0x210

00010e90 <getpagesize@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #24, 20	; 0x18000
   10e98:	ldr	pc, [ip, #520]!	; 0x208

00010e9c <__errno_location@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #24, 20	; 0x18000
   10ea4:	ldr	pc, [ip, #512]!	; 0x200

00010ea8 <__cxa_atexit@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #24, 20	; 0x18000
   10eb0:	ldr	pc, [ip, #504]!	; 0x1f8

00010eb4 <memset@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #24, 20	; 0x18000
   10ebc:	ldr	pc, [ip, #496]!	; 0x1f0

00010ec0 <__printf_chk@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #24, 20	; 0x18000
   10ec8:	ldr	pc, [ip, #488]!	; 0x1e8

00010ecc <write@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #24, 20	; 0x18000
   10ed4:	ldr	pc, [ip, #480]!	; 0x1e0

00010ed8 <fileno@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #24, 20	; 0x18000
   10ee0:	ldr	pc, [ip, #472]!	; 0x1d8

00010ee4 <__fprintf_chk@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #24, 20	; 0x18000
   10eec:	ldr	pc, [ip, #464]!	; 0x1d0

00010ef0 <fclose@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #24, 20	; 0x18000
   10ef8:	ldr	pc, [ip, #456]!	; 0x1c8

00010efc <fseeko64@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #24, 20	; 0x18000
   10f04:	ldr	pc, [ip, #448]!	; 0x1c0

00010f08 <setlocale@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #24, 20	; 0x18000
   10f10:	ldr	pc, [ip, #440]!	; 0x1b8

00010f14 <strrchr@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #24, 20	; 0x18000
   10f1c:	ldr	pc, [ip, #432]!	; 0x1b0

00010f20 <nl_langinfo@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #24, 20	; 0x18000
   10f28:	ldr	pc, [ip, #424]!	; 0x1a8

00010f2c <bindtextdomain@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #24, 20	; 0x18000
   10f34:	ldr	pc, [ip, #416]!	; 0x1a0

00010f38 <aligned_alloc@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #24, 20	; 0x18000
   10f40:	ldr	pc, [ip, #408]!	; 0x198

00010f44 <strncmp@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #24, 20	; 0x18000
   10f4c:	ldr	pc, [ip, #400]!	; 0x190

00010f50 <abort@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #24, 20	; 0x18000
   10f58:	ldr	pc, [ip, #392]!	; 0x188

00010f5c <close@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #24, 20	; 0x18000
   10f64:	ldr	pc, [ip, #384]!	; 0x180

Disassembly of section .text:

00010f68 <.text>:
   10f68:	push	{r4, lr}
   10f6c:	bl	10e9c <__errno_location@plt>
   10f70:	mov	r2, #5
   10f74:	ldr	r1, [pc, #24]	; 10f94 <close@plt+0x38>
   10f78:	ldr	r4, [r0]
   10f7c:	mov	r0, #0
   10f80:	bl	10d88 <dcgettext@plt>
   10f84:	mov	r1, r4
   10f88:	mov	r2, r0
   10f8c:	mov	r0, #1
   10f90:	bl	10e18 <error@plt>
   10f94:	andeq	r8, r1, r8
   10f98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f9c:	sub	sp, sp, #260	; 0x104
   10fa0:	mov	r9, r0
   10fa4:	str	r0, [sp, #84]	; 0x54
   10fa8:	ldr	r0, [r1]
   10fac:	mov	fp, r1
   10fb0:	str	r1, [sp, #92]	; 0x5c
   10fb4:	bl	123a4 <close@plt+0x1448>
   10fb8:	ldr	r1, [pc, #3328]	; 11cc0 <close@plt+0xd64>
   10fbc:	mov	r0, #6
   10fc0:	mov	sl, #0
   10fc4:	bl	10f08 <setlocale@plt>
   10fc8:	ldr	r7, [pc, #3316]	; 11cc4 <close@plt+0xd68>
   10fcc:	ldr	r1, [pc, #3316]	; 11cc8 <close@plt+0xd6c>
   10fd0:	ldr	r0, [pc, #3316]	; 11ccc <close@plt+0xd70>
   10fd4:	ldr	r5, [pc, #3316]	; 11cd0 <close@plt+0xd74>
   10fd8:	bl	10f2c <bindtextdomain@plt>
   10fdc:	mov	r6, sl
   10fe0:	ldr	r0, [pc, #3300]	; 11ccc <close@plt+0xd70>
   10fe4:	mov	r4, sl
   10fe8:	mov	r8, #1
   10fec:	bl	10da0 <textdomain@plt>
   10ff0:	ldr	r0, [pc, #3292]	; 11cd4 <close@plt+0xd78>
   10ff4:	bl	17f0c <close@plt+0x6fb0>
   10ff8:	str	sl, [sp, #44]	; 0x2c
   10ffc:	str	sl, [sp, #24]
   11000:	str	sl, [sp, #68]	; 0x44
   11004:	str	sl, [sp, #48]	; 0x30
   11008:	str	r4, [sp]
   1100c:	mov	r3, r7
   11010:	mov	r2, r5
   11014:	mov	r1, fp
   11018:	mov	r0, r9
   1101c:	bl	10e60 <getopt_long@plt>
   11020:	cmn	r0, #1
   11024:	beq	1111c <close@plt+0x1c0>
   11028:	cmp	r0, #98	; 0x62
   1102c:	beq	11114 <close@plt+0x1b8>
   11030:	ble	1105c <close@plt+0x100>
   11034:	cmp	r0, #115	; 0x73
   11038:	beq	11104 <close@plt+0x1a8>
   1103c:	ble	11080 <close@plt+0x124>
   11040:	cmp	r0, #117	; 0x75
   11044:	beq	11008 <close@plt+0xac>
   11048:	blt	110f8 <close@plt+0x19c>
   1104c:	cmp	r0, #118	; 0x76
   11050:	bne	1110c <close@plt+0x1b0>
   11054:	str	r8, [sp, #44]	; 0x2c
   11058:	b	11008 <close@plt+0xac>
   1105c:	cmp	r0, #65	; 0x41
   11060:	beq	11098 <close@plt+0x13c>
   11064:	bgt	110a8 <close@plt+0x14c>
   11068:	cmn	r0, #3
   1106c:	beq	110c0 <close@plt+0x164>
   11070:	cmn	r0, #2
   11074:	bne	1110c <close@plt+0x1b0>
   11078:	mov	r0, #0
   1107c:	bl	11e54 <close@plt+0xef8>
   11080:	cmp	r0, #101	; 0x65
   11084:	beq	1109c <close@plt+0x140>
   11088:	cmp	r0, #110	; 0x6e
   1108c:	bne	1110c <close@plt+0x1b0>
   11090:	str	r8, [sp, #48]	; 0x30
   11094:	b	11008 <close@plt+0xac>
   11098:	mov	sl, r8
   1109c:	str	r8, [sp, #44]	; 0x2c
   110a0:	str	r8, [sp, #24]
   110a4:	b	11008 <close@plt+0xac>
   110a8:	cmp	r0, #69	; 0x45
   110ac:	beq	110a0 <close@plt+0x144>
   110b0:	cmp	r0, #84	; 0x54
   110b4:	bne	1110c <close@plt+0x1b0>
   110b8:	mov	sl, r8
   110bc:	b	11008 <close@plt+0xac>
   110c0:	ldr	r3, [pc, #3088]	; 11cd8 <close@plt+0xd7c>
   110c4:	ldr	r0, [pc, #3088]	; 11cdc <close@plt+0xd80>
   110c8:	ldr	r1, [pc, #3088]	; 11ce0 <close@plt+0xd84>
   110cc:	ldr	r2, [pc, #3088]	; 11ce4 <close@plt+0xd88>
   110d0:	str	r4, [sp, #8]
   110d4:	ldr	r0, [r0]
   110d8:	ldr	r3, [r3]
   110dc:	str	r1, [sp, #4]
   110e0:	str	r2, [sp]
   110e4:	ldr	r1, [pc, #3068]	; 11ce8 <close@plt+0xd8c>
   110e8:	ldr	r2, [pc, #3068]	; 11cec <close@plt+0xd90>
   110ec:	bl	16d14 <close@plt+0x5db8>
   110f0:	mov	r0, #0
   110f4:	bl	10e78 <exit@plt>
   110f8:	mov	sl, r8
   110fc:	str	r8, [sp, #44]	; 0x2c
   11100:	b	11008 <close@plt+0xac>
   11104:	str	r8, [sp, #68]	; 0x44
   11108:	b	11008 <close@plt+0xac>
   1110c:	mov	r0, #1
   11110:	bl	11e54 <close@plt+0xef8>
   11114:	mov	r6, r8
   11118:	b	11090 <close@plt+0x134>
   1111c:	str	r0, [sp, #52]	; 0x34
   11120:	add	r2, sp, #152	; 0x98
   11124:	mov	r1, #1
   11128:	mov	r0, #3
   1112c:	bl	10db8 <__fxstat64@plt>
   11130:	cmp	r0, #0
   11134:	blt	11bd8 <close@plt+0xc7c>
   11138:	ldr	r3, [sp, #208]	; 0xd0
   1113c:	ldr	r1, [pc, #2988]	; 11cf0 <close@plt+0xd94>
   11140:	ldr	r5, [pc, #2988]	; 11cf4 <close@plt+0xd98>
   11144:	sub	r0, r3, #131072	; 0x20000
   11148:	cmp	r0, r5
   1114c:	ldr	r2, [sp, #168]	; 0xa8
   11150:	movls	fp, r3
   11154:	ldr	r3, [r1]
   11158:	ldr	r9, [pc, #2968]	; 11cf8 <close@plt+0xd9c>
   1115c:	ldr	r4, [pc, #2968]	; 11cfc <close@plt+0xda0>
   11160:	str	r3, [sp, #80]	; 0x50
   11164:	and	r3, r2, #61440	; 0xf000
   11168:	str	r3, [sp, #96]	; 0x60
   1116c:	mvn	r3, #-2147483648	; 0x80000000
   11170:	mov	r7, r3
   11174:	movhi	fp, #131072	; 0x20000
   11178:	str	r4, [r9]
   1117c:	bl	10e90 <getpagesize@plt>
   11180:	sub	r2, r7, fp
   11184:	str	r2, [sp, #140]	; 0x8c
   11188:	ldr	r2, [sp, #48]	; 0x30
   1118c:	eor	r6, r6, #1
   11190:	ldr	r3, [sp, #44]	; 0x2c
   11194:	mov	r8, sl
   11198:	orr	r3, r3, sl
   1119c:	str	r5, [sp, #136]	; 0x88
   111a0:	str	r4, [sp, #116]	; 0x74
   111a4:	str	r0, [sp, #88]	; 0x58
   111a8:	ldrd	r0, [sp, #152]	; 0x98
   111ac:	strd	r0, [sp, #120]	; 0x78
   111b0:	ldrd	r0, [sp, #248]	; 0xf8
   111b4:	strd	r0, [sp, #128]	; 0x80
   111b8:	and	r1, r2, r6
   111bc:	str	r1, [sp, #72]	; 0x48
   111c0:	ldr	r1, [sp, #68]	; 0x44
   111c4:	orr	r3, r1, r3
   111c8:	str	r3, [sp, #104]	; 0x68
   111cc:	ldr	r3, [sp, #24]
   111d0:	orr	r3, r2, r3
   111d4:	str	r3, [sp, #112]	; 0x70
   111d8:	mov	r3, #1
   111dc:	str	r3, [sp, #76]	; 0x4c
   111e0:	mov	r3, #0
   111e4:	str	r3, [sp, #108]	; 0x6c
   111e8:	ldr	r2, [sp, #84]	; 0x54
   111ec:	ldr	r3, [sp, #80]	; 0x50
   111f0:	cmp	r3, r2
   111f4:	movlt	r2, r3
   111f8:	ldrlt	r3, [sp, #92]	; 0x5c
   111fc:	ldrge	r4, [r9]
   11200:	ldr	r1, [sp, #116]	; 0x74
   11204:	ldrlt	r3, [r3, r2, lsl #2]
   11208:	movlt	r4, r3
   1120c:	mov	r0, r4
   11210:	strlt	r3, [r9]
   11214:	bl	10cf8 <strcmp@plt>
   11218:	subs	r3, r0, #0
   1121c:	str	r3, [sp, #100]	; 0x64
   11220:	bne	119e8 <close@plt+0xa8c>
   11224:	str	r3, [r9, #4]
   11228:	mov	r3, #1
   1122c:	str	r3, [sp, #108]	; 0x6c
   11230:	ldr	r4, [r9, #4]
   11234:	add	r2, sp, #152	; 0x98
   11238:	mov	r1, r4
   1123c:	mov	r0, #3
   11240:	bl	10db8 <__fxstat64@plt>
   11244:	cmp	r0, #0
   11248:	blt	11ae0 <close@plt+0xb84>
   1124c:	ldr	r1, [sp, #208]	; 0xd0
   11250:	ldr	lr, [sp, #136]	; 0x88
   11254:	sub	ip, r1, #131072	; 0x20000
   11258:	mov	r6, #0
   1125c:	mov	r7, #0
   11260:	cmp	ip, lr
   11264:	mov	r3, #2
   11268:	movhi	r1, #131072	; 0x20000
   1126c:	str	r3, [sp, #8]
   11270:	strd	r6, [sp]
   11274:	mov	r3, r7
   11278:	mov	r0, r4
   1127c:	mov	r2, r6
   11280:	str	r1, [sp, #56]	; 0x38
   11284:	bl	1229c <close@plt+0x1340>
   11288:	ldr	r3, [sp, #96]	; 0x60
   1128c:	cmp	r3, #32768	; 0x8000
   11290:	beq	11a38 <close@plt+0xadc>
   11294:	ldr	r3, [sp, #112]	; 0x70
   11298:	cmp	r3, #0
   1129c:	bne	113b0 <close@plt+0x454>
   112a0:	ldr	r3, [sp, #104]	; 0x68
   112a4:	cmp	r3, #0
   112a8:	bne	113b0 <close@plt+0x454>
   112ac:	ldr	r3, [sp, #96]	; 0x60
   112b0:	cmp	r3, #32768	; 0x8000
   112b4:	beq	11b60 <close@plt+0xc04>
   112b8:	ldr	r3, [sp, #56]	; 0x38
   112bc:	ldr	r0, [sp, #88]	; 0x58
   112c0:	cmp	fp, r3
   112c4:	movge	r4, fp
   112c8:	movlt	r4, r3
   112cc:	mov	r1, r4
   112d0:	bl	16ec8 <close@plt+0x5f6c>
   112d4:	mov	r5, #1
   112d8:	str	r0, [sp, #32]
   112dc:	mov	r7, r0
   112e0:	b	11304 <close@plt+0x3a8>
   112e4:	cmp	r0, #0
   112e8:	beq	11b58 <close@plt+0xbfc>
   112ec:	mov	r2, r0
   112f0:	mov	r1, r7
   112f4:	mov	r0, r5
   112f8:	bl	12334 <close@plt+0x13d8>
   112fc:	cmp	r6, r0
   11300:	bne	11b30 <close@plt+0xbd4>
   11304:	mov	r2, r4
   11308:	mov	r1, r7
   1130c:	ldr	r0, [r9, #4]
   11310:	bl	163f0 <close@plt+0x5494>
   11314:	cmn	r0, #1
   11318:	mov	r6, r0
   1131c:	bne	112e4 <close@plt+0x388>
   11320:	bl	10e9c <__errno_location@plt>
   11324:	ldr	r2, [r9]
   11328:	mov	r1, #3
   1132c:	ldr	r4, [r0]
   11330:	mov	r0, #0
   11334:	bl	1537c <close@plt+0x4420>
   11338:	mov	r1, r4
   1133c:	ldr	r2, [pc, #2492]	; 11d00 <close@plt+0xda4>
   11340:	mov	r3, r0
   11344:	mov	r0, #0
   11348:	bl	10e18 <error@plt>
   1134c:	ldr	r3, [sp, #104]	; 0x68
   11350:	ldr	r2, [sp, #76]	; 0x4c
   11354:	and	r2, r2, r3
   11358:	str	r2, [sp, #76]	; 0x4c
   1135c:	ldr	r0, [sp, #32]
   11360:	bl	122dc <close@plt+0x1380>
   11364:	ldr	r3, [sp, #100]	; 0x64
   11368:	cmp	r3, #0
   1136c:	bne	11acc <close@plt+0xb70>
   11370:	ldr	r3, [sp, #80]	; 0x50
   11374:	ldr	r2, [sp, #84]	; 0x54
   11378:	add	r3, r3, #1
   1137c:	cmp	r2, r3
   11380:	str	r3, [sp, #80]	; 0x50
   11384:	bgt	111f0 <close@plt+0x294>
   11388:	ldrb	r3, [r9, #12]
   1138c:	cmp	r3, #0
   11390:	bne	11b18 <close@plt+0xbbc>
   11394:	ldr	r3, [sp, #108]	; 0x6c
   11398:	cmp	r3, #0
   1139c:	bne	11bec <close@plt+0xc90>
   113a0:	ldr	r3, [sp, #76]	; 0x4c
   113a4:	eor	r0, r3, #1
   113a8:	add	sp, sp, #260	; 0x104
   113ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   113b0:	ldr	r3, [sp, #56]	; 0x38
   113b4:	ldr	r0, [sp, #88]	; 0x58
   113b8:	add	r1, r3, #1
   113bc:	bl	16ec8 <close@plt+0x5f6c>
   113c0:	ldr	r3, [sp, #56]	; 0x38
   113c4:	cmp	r3, #536870912	; 0x20000000
   113c8:	str	r0, [sp, #32]
   113cc:	beq	11be8 <close@plt+0xc8c>
   113d0:	ldr	r3, [sp, #56]	; 0x38
   113d4:	ldr	r2, [sp, #140]	; 0x8c
   113d8:	lsl	r3, r3, #2
   113dc:	cmp	r2, r3
   113e0:	blt	11be8 <close@plt+0xc8c>
   113e4:	add	r3, fp, r3
   113e8:	cmn	r3, #-2147483628	; 0x80000014
   113ec:	bgt	11be8 <close@plt+0xc8c>
   113f0:	add	r1, r3, #19
   113f4:	ldr	r0, [sp, #88]	; 0x58
   113f8:	bl	16ec8 <close@plt+0x5f6c>
   113fc:	ldr	r1, [sp, #32]
   11400:	add	r2, r1, #1
   11404:	mov	r6, r2
   11408:	str	r2, [sp, #64]	; 0x40
   1140c:	str	r1, [sp, #20]
   11410:	mov	r3, r0
   11414:	add	ip, r3, fp
   11418:	mov	r5, r3
   1141c:	ldr	r3, [r9, #8]
   11420:	str	r0, [sp, #28]
   11424:	mov	r0, #1
   11428:	mov	r7, r0
   1142c:	mov	sl, r3
   11430:	str	r0, [sp, #60]	; 0x3c
   11434:	str	ip, [sp, #36]	; 0x24
   11438:	ldr	r3, [sp, #36]	; 0x24
   1143c:	cmp	r3, r5
   11440:	bhi	11490 <close@plt+0x534>
   11444:	ldr	r4, [sp, #28]
   11448:	mov	r2, fp
   1144c:	mov	r1, r4
   11450:	mov	r0, r7
   11454:	bl	12334 <close@plt+0x13d8>
   11458:	cmp	fp, r0
   1145c:	bne	11b30 <close@plt+0xbd4>
   11460:	add	r4, r4, fp
   11464:	sub	r3, r5, r4
   11468:	cmp	fp, r3
   1146c:	ble	11448 <close@plt+0x4ec>
   11470:	mov	r1, r4
   11474:	ldr	r4, [sp, #28]
   11478:	mov	r2, r3
   1147c:	mov	r0, r4
   11480:	str	r3, [sp, #40]	; 0x28
   11484:	bl	10d28 <memmove@plt>
   11488:	ldr	r3, [sp, #40]	; 0x28
   1148c:	add	r5, r4, r3
   11490:	ldr	r3, [sp, #20]
   11494:	cmp	r3, r6
   11498:	bcs	11614 <close@plt+0x6b8>
   1149c:	ldr	r3, [sp, #60]	; 0x3c
   114a0:	cmp	r3, #0
   114a4:	mov	r3, #0
   114a8:	str	r3, [sp, #148]	; 0x94
   114ac:	bne	11824 <close@plt+0x8c8>
   114b0:	ldr	r3, [sp, #28]
   114b4:	sub	r4, r5, r3
   114b8:	cmp	r4, #0
   114bc:	ble	114dc <close@plt+0x580>
   114c0:	mov	r2, r4
   114c4:	mov	r1, r3
   114c8:	mov	r0, r7
   114cc:	mov	r5, r3
   114d0:	bl	12334 <close@plt+0x13d8>
   114d4:	cmp	r4, r0
   114d8:	bne	11cbc <close@plt+0xd60>
   114dc:	ldr	r6, [r9, #4]
   114e0:	mov	r0, r6
   114e4:	ldr	r2, [sp, #56]	; 0x38
   114e8:	ldr	r1, [sp, #32]
   114ec:	bl	163f0 <close@plt+0x5494>
   114f0:	cmn	r0, #1
   114f4:	beq	11938 <close@plt+0x9dc>
   114f8:	cmp	r0, #0
   114fc:	beq	119b0 <close@plt+0xa54>
   11500:	ldr	r2, [sp, #32]
   11504:	mov	r3, #10
   11508:	ldr	r6, [sp, #64]	; 0x40
   1150c:	strb	r3, [r2, r0]
   11510:	add	r3, r2, r0
   11514:	str	r3, [sp, #20]
   11518:	mov	r3, r2
   1151c:	ldrb	r4, [r3]
   11520:	cmp	r4, #10
   11524:	beq	11438 <close@plt+0x4dc>
   11528:	ldrb	r3, [r9, #12]
   1152c:	cmp	r3, #0
   11530:	movne	r3, #13
   11534:	strbne	r3, [r5]
   11538:	movne	r3, #0
   1153c:	strbne	r3, [r9, #12]
   11540:	ldr	r3, [sp, #48]	; 0x30
   11544:	addne	r5, r5, #1
   11548:	cmp	sl, #0
   1154c:	movlt	r3, #0
   11550:	andge	r3, r3, #1
   11554:	cmp	r3, #0
   11558:	bne	117d8 <close@plt+0x87c>
   1155c:	ldr	r3, [sp, #44]	; 0x2c
   11560:	cmp	r3, #0
   11564:	bne	11708 <close@plt+0x7ac>
   11568:	ldrb	r2, [r9, #12]
   1156c:	mov	ip, r3
   11570:	mov	lr, #10
   11574:	str	r2, [sp, #40]	; 0x28
   11578:	mov	sl, #77	; 0x4d
   1157c:	mov	r2, #94	; 0x5e
   11580:	mov	r1, #73	; 0x49
   11584:	b	115a4 <close@plt+0x648>
   11588:	mov	r0, r5
   1158c:	ldrb	r3, [r6]
   11590:	strb	r2, [r0], #2
   11594:	strb	r1, [r5, #1]
   11598:	mov	r5, r0
   1159c:	add	r6, r6, #1
   115a0:	mov	r4, r3
   115a4:	cmp	r4, #9
   115a8:	movne	r3, #0
   115ac:	andeq	r3, r8, #1
   115b0:	cmp	r3, #0
   115b4:	bne	11588 <close@plt+0x62c>
   115b8:	cmp	r4, #10
   115bc:	beq	116f4 <close@plt+0x798>
   115c0:	cmp	r4, #13
   115c4:	ldrb	r3, [r6]
   115c8:	beq	115d8 <close@plt+0x67c>
   115cc:	strb	r4, [r5]
   115d0:	add	r5, r5, #1
   115d4:	b	1159c <close@plt+0x640>
   115d8:	ldr	r0, [sp, #24]
   115dc:	cmp	r3, #10
   115e0:	movne	r0, #0
   115e4:	andeq	r0, r0, #1
   115e8:	cmp	r0, #0
   115ec:	beq	115cc <close@plt+0x670>
   115f0:	ldr	r3, [sp, #20]
   115f4:	cmp	r6, r3
   115f8:	beq	11928 <close@plt+0x9cc>
   115fc:	mov	r0, r5
   11600:	mov	r3, lr
   11604:	strb	r2, [r0], #2
   11608:	strb	sl, [r5, #1]
   1160c:	mov	r5, r0
   11610:	b	1159c <close@plt+0x640>
   11614:	add	sl, sl, #1
   11618:	cmp	sl, #0
   1161c:	ble	11698 <close@plt+0x73c>
   11620:	cmp	sl, #1
   11624:	beq	11644 <close@plt+0x6e8>
   11628:	ldr	r3, [sp, #68]	; 0x44
   1162c:	cmp	r3, #0
   11630:	ldrbne	r4, [r6]
   11634:	movne	sl, #2
   11638:	addne	r6, r6, #1
   1163c:	bne	11520 <close@plt+0x5c4>
   11640:	mov	sl, #2
   11644:	ldr	r3, [sp, #72]	; 0x48
   11648:	cmp	r3, #0
   1164c:	beq	11698 <close@plt+0x73c>
   11650:	ldr	r3, [pc, #1708]	; 11d04 <close@plt+0xda8>
   11654:	mov	r0, #48	; 0x30
   11658:	add	r3, r3, #17
   1165c:	ldr	r1, [r3, #3]
   11660:	b	11670 <close@plt+0x714>
   11664:	strb	r0, [r3], #-1
   11668:	cmp	r3, r1
   1166c:	bcc	118dc <close@plt+0x980>
   11670:	ldrb	r2, [r3]
   11674:	cmp	r2, #56	; 0x38
   11678:	bhi	11664 <close@plt+0x708>
   1167c:	add	r2, r2, #1
   11680:	strb	r2, [r3]
   11684:	ldr	r3, [pc, #1656]	; 11d04 <close@plt+0xda8>
   11688:	mov	r0, r5
   1168c:	ldr	r1, [r3, #24]
   11690:	bl	10d70 <stpcpy@plt>
   11694:	mov	r5, r0
   11698:	ldr	r3, [sp, #24]
   1169c:	cmp	r3, #0
   116a0:	beq	116dc <close@plt+0x780>
   116a4:	ldrb	r3, [r9, #12]
   116a8:	cmp	r3, #0
   116ac:	beq	116d0 <close@plt+0x774>
   116b0:	mov	r3, r5
   116b4:	mov	r1, #94	; 0x5e
   116b8:	mov	r2, #77	; 0x4d
   116bc:	strb	r1, [r3], #2
   116c0:	strb	r2, [r5, #1]
   116c4:	mov	r5, r3
   116c8:	mov	r3, #0
   116cc:	strb	r3, [r9, #12]
   116d0:	mov	r3, #36	; 0x24
   116d4:	strb	r3, [r5]
   116d8:	add	r5, r5, #1
   116dc:	mov	r3, #10
   116e0:	strb	r3, [r5]
   116e4:	mov	r3, r6
   116e8:	add	r5, r5, #1
   116ec:	add	r6, r6, #1
   116f0:	b	1151c <close@plt+0x5c0>
   116f4:	cmp	ip, #0
   116f8:	ldrbne	r3, [sp, #40]	; 0x28
   116fc:	strbne	r3, [r9, #12]
   11700:	ldr	sl, [sp, #52]	; 0x34
   11704:	b	11438 <close@plt+0x4dc>
   11708:	eor	r2, r8, #1
   1170c:	mov	r1, #94	; 0x5e
   11710:	mov	r0, #9
   11714:	mov	lr, #77	; 0x4d
   11718:	mov	ip, #45	; 0x2d
   1171c:	mov	sl, #63	; 0x3f
   11720:	b	1176c <close@plt+0x810>
   11724:	cmp	r4, #126	; 0x7e
   11728:	strbls	r4, [r5]
   1172c:	addls	r5, r5, #1
   11730:	bls	11768 <close@plt+0x80c>
   11734:	cmp	r4, #127	; 0x7f
   11738:	beq	117c4 <close@plt+0x868>
   1173c:	cmp	r4, #159	; 0x9f
   11740:	strb	lr, [r5]
   11744:	strb	ip, [r5, #1]
   11748:	bls	117b0 <close@plt+0x854>
   1174c:	cmp	r4, #255	; 0xff
   11750:	subne	r4, r4, #128	; 0x80
   11754:	strbne	r4, [r5, #2]
   11758:	strbeq	r1, [r5, #2]
   1175c:	strbeq	sl, [r5, #3]
   11760:	addne	r5, r5, #3
   11764:	addeq	r5, r5, #4
   11768:	ldrb	r4, [r6], #1
   1176c:	cmp	r4, #31
   11770:	bhi	11724 <close@plt+0x7c8>
   11774:	cmp	r4, #9
   11778:	movne	r3, #0
   1177c:	andeq	r3, r2, #1
   11780:	cmp	r3, #0
   11784:	strbne	r0, [r5]
   11788:	addne	r5, r5, #1
   1178c:	bne	11768 <close@plt+0x80c>
   11790:	cmp	r4, #10
   11794:	beq	11700 <close@plt+0x7a4>
   11798:	mov	r3, r5
   1179c:	add	r4, r4, #64	; 0x40
   117a0:	strb	r1, [r3], #2
   117a4:	strb	r4, [r5, #1]
   117a8:	mov	r5, r3
   117ac:	b	11768 <close@plt+0x80c>
   117b0:	sub	r4, r4, #64	; 0x40
   117b4:	strb	r4, [r5, #3]
   117b8:	strb	r1, [r5, #2]
   117bc:	add	r5, r5, #4
   117c0:	b	11768 <close@plt+0x80c>
   117c4:	mov	r3, r5
   117c8:	strb	r1, [r3], #2
   117cc:	strb	sl, [r5, #1]
   117d0:	mov	r5, r3
   117d4:	b	11768 <close@plt+0x80c>
   117d8:	ldr	r3, [pc, #1316]	; 11d04 <close@plt+0xda8>
   117dc:	mov	r0, #48	; 0x30
   117e0:	add	r2, r3, #17
   117e4:	ldr	r1, [r3, #20]
   117e8:	b	117f8 <close@plt+0x89c>
   117ec:	strb	r0, [r2], #-1
   117f0:	cmp	r2, r1
   117f4:	bcc	11850 <close@plt+0x8f4>
   117f8:	ldrb	r3, [r2]
   117fc:	cmp	r3, #56	; 0x38
   11800:	add	r3, r3, #1
   11804:	strb	r3, [r2]
   11808:	bhi	117ec <close@plt+0x890>
   1180c:	ldr	r3, [pc, #1264]	; 11d04 <close@plt+0xda8>
   11810:	ldr	r1, [r3, #24]
   11814:	mov	r0, r5
   11818:	bl	10d70 <stpcpy@plt>
   1181c:	mov	r5, r0
   11820:	b	1155c <close@plt+0x600>
   11824:	ldr	r6, [r9, #4]
   11828:	add	r2, sp, #148	; 0x94
   1182c:	mov	r0, r6
   11830:	ldr	r1, [pc, #1232]	; 11d08 <close@plt+0xdac>
   11834:	bl	10ddc <ioctl@plt>
   11838:	cmp	r0, #0
   1183c:	blt	11898 <close@plt+0x93c>
   11840:	ldr	r3, [sp, #148]	; 0x94
   11844:	cmp	r3, #0
   11848:	bne	114e0 <close@plt+0x584>
   1184c:	b	114b0 <close@plt+0x554>
   11850:	ldr	r3, [pc, #1196]	; 11d04 <close@plt+0xda8>
   11854:	cmp	r1, r3
   11858:	movhi	r2, #49	; 0x31
   1185c:	strbhi	r2, [r1, #-1]
   11860:	ldrls	r2, [pc, #1180]	; 11d04 <close@plt+0xda8>
   11864:	ldrhi	r2, [pc, #1176]	; 11d04 <close@plt+0xda8>
   11868:	subhi	r3, r1, #1
   1186c:	movls	r3, r1
   11870:	movls	r1, #62	; 0x3e
   11874:	strhi	r3, [r2, #20]
   11878:	strbls	r1, [r2]
   1187c:	ldr	r2, [pc, #1152]	; 11d04 <close@plt+0xda8>
   11880:	ldr	r1, [r2, #24]
   11884:	cmp	r1, r3
   11888:	movhi	r3, r2
   1188c:	subhi	r1, r1, #1
   11890:	strhi	r1, [r3, #24]
   11894:	b	11814 <close@plt+0x8b8>
   11898:	bl	10e9c <__errno_location@plt>
   1189c:	ldr	r1, [r0]
   118a0:	sub	r3, r1, #19
   118a4:	cmp	r3, #19
   118a8:	movhi	r3, r7
   118ac:	ldrls	r0, [pc, #1112]	; 11d0c <close@plt+0xdb0>
   118b0:	sub	r2, r1, #95	; 0x5f
   118b4:	clz	r2, r2
   118b8:	mvnls	r3, r0, lsr r3
   118bc:	and	r3, r3, #1
   118c0:	lsr	r2, r2, #5
   118c4:	eor	r3, r3, #1
   118c8:	orrs	r4, r2, r3
   118cc:	beq	11c78 <close@plt+0xd1c>
   118d0:	mov	r3, #0
   118d4:	str	r3, [sp, #60]	; 0x3c
   118d8:	b	11840 <close@plt+0x8e4>
   118dc:	ldr	r3, [pc, #1056]	; 11d04 <close@plt+0xda8>
   118e0:	cmp	r1, r3
   118e4:	movhi	r2, #49	; 0x31
   118e8:	strbhi	r2, [r1, #-1]
   118ec:	ldrls	r3, [pc, #1040]	; 11d04 <close@plt+0xda8>
   118f0:	ldrhi	r2, [pc, #1036]	; 11d04 <close@plt+0xda8>
   118f4:	subhi	r3, r1, #1
   118f8:	movls	r2, #62	; 0x3e
   118fc:	strhi	r3, [r2, #20]
   11900:	strbls	r2, [r3]
   11904:	ldr	r3, [pc, #1016]	; 11d04 <close@plt+0xda8>
   11908:	ldr	r2, [pc, #1012]	; 11d04 <close@plt+0xda8>
   1190c:	ldr	r3, [r3, #24]
   11910:	ldr	r2, [r2, #20]
   11914:	cmp	r2, r3
   11918:	subcc	r3, r3, #1
   1191c:	ldrcc	r2, [pc, #992]	; 11d04 <close@plt+0xda8>
   11920:	strcc	r3, [r2, #24]
   11924:	b	11684 <close@plt+0x728>
   11928:	mov	ip, r0
   1192c:	str	r0, [sp, #40]	; 0x28
   11930:	mov	r3, lr
   11934:	b	1159c <close@plt+0x640>
   11938:	bl	10e9c <__errno_location@plt>
   1193c:	ldr	r2, [r9]
   11940:	mov	r1, #3
   11944:	ldr	r6, [sp, #28]
   11948:	mov	r7, sl
   1194c:	sub	r5, r5, r6
   11950:	ldr	r4, [r0]
   11954:	mov	r0, #0
   11958:	bl	1537c <close@plt+0x4420>
   1195c:	mov	r1, r4
   11960:	ldr	r2, [pc, #920]	; 11d00 <close@plt+0xda4>
   11964:	mov	r3, r0
   11968:	mov	r0, #0
   1196c:	bl	10e18 <error@plt>
   11970:	cmp	r5, #0
   11974:	ble	11990 <close@plt+0xa34>
   11978:	mov	r2, r5
   1197c:	mov	r1, r6
   11980:	mov	r0, #1
   11984:	bl	12334 <close@plt+0x13d8>
   11988:	cmp	r5, r0
   1198c:	bne	11cbc <close@plt+0xd60>
   11990:	mov	r4, #0
   11994:	str	r7, [r9, #8]
   11998:	ldr	r3, [sp, #76]	; 0x4c
   1199c:	ldr	r0, [sp, #28]
   119a0:	and	r3, r3, r4
   119a4:	str	r3, [sp, #76]	; 0x4c
   119a8:	bl	122dc <close@plt+0x1380>
   119ac:	b	1135c <close@plt+0x400>
   119b0:	ldr	r3, [sp, #28]
   119b4:	mov	r7, sl
   119b8:	sub	r5, r5, r3
   119bc:	cmp	r5, #0
   119c0:	ble	119dc <close@plt+0xa80>
   119c4:	mov	r2, r5
   119c8:	mov	r1, r3
   119cc:	mov	r0, #1
   119d0:	bl	12334 <close@plt+0x13d8>
   119d4:	cmp	r5, r0
   119d8:	bne	11cbc <close@plt+0xd60>
   119dc:	str	r7, [r9, #8]
   119e0:	mov	r4, #1
   119e4:	b	11998 <close@plt+0xa3c>
   119e8:	mov	r0, r4
   119ec:	mov	r1, #0
   119f0:	bl	10e24 <open64@plt>
   119f4:	cmp	r0, #0
   119f8:	str	r0, [r9, #4]
   119fc:	bge	11230 <close@plt+0x2d4>
   11a00:	bl	10e9c <__errno_location@plt>
   11a04:	mov	r3, #0
   11a08:	ldr	r2, [r9]
   11a0c:	mov	r1, #3
   11a10:	str	r3, [sp, #76]	; 0x4c
   11a14:	ldr	r4, [r0]
   11a18:	mov	r0, r3
   11a1c:	bl	1537c <close@plt+0x4420>
   11a20:	mov	r1, r4
   11a24:	ldr	r2, [pc, #724]	; 11d00 <close@plt+0xda4>
   11a28:	mov	r3, r0
   11a2c:	mov	r0, #0
   11a30:	bl	10e18 <error@plt>
   11a34:	b	11370 <close@plt+0x414>
   11a38:	ldrd	r2, [sp, #152]	; 0x98
   11a3c:	ldrd	r0, [sp, #120]	; 0x78
   11a40:	cmp	r1, r3
   11a44:	cmpeq	r0, r2
   11a48:	bne	11294 <close@plt+0x338>
   11a4c:	ldrd	r2, [sp, #248]	; 0xf8
   11a50:	ldrd	r0, [sp, #128]	; 0x80
   11a54:	cmp	r1, r3
   11a58:	cmpeq	r0, r2
   11a5c:	bne	11294 <close@plt+0x338>
   11a60:	mov	r3, #1
   11a64:	str	r3, [sp]
   11a68:	mov	r2, r6
   11a6c:	mov	r3, r7
   11a70:	ldr	r0, [r9, #4]
   11a74:	bl	10de8 <lseek64@plt>
   11a78:	ldrd	r2, [sp, #200]	; 0xc8
   11a7c:	cmp	r0, r2
   11a80:	sbcs	r3, r1, r3
   11a84:	bge	11294 <close@plt+0x338>
   11a88:	mov	r2, #5
   11a8c:	ldr	r1, [pc, #636]	; 11d10 <close@plt+0xdb4>
   11a90:	mov	r0, #0
   11a94:	bl	10d88 <dcgettext@plt>
   11a98:	ldr	r2, [r9]
   11a9c:	mov	r1, #3
   11aa0:	mov	r4, r0
   11aa4:	mov	r0, #0
   11aa8:	bl	1537c <close@plt+0x4420>
   11aac:	mov	r1, #0
   11ab0:	mov	r2, r4
   11ab4:	mov	r3, r0
   11ab8:	mov	r0, r1
   11abc:	bl	10e18 <error@plt>
   11ac0:	mov	r3, #0
   11ac4:	str	r3, [sp, #76]	; 0x4c
   11ac8:	b	11364 <close@plt+0x408>
   11acc:	ldr	r0, [r9, #4]
   11ad0:	bl	10f5c <close@plt>
   11ad4:	cmp	r0, #0
   11ad8:	bge	11370 <close@plt+0x414>
   11adc:	b	11a00 <close@plt+0xaa4>
   11ae0:	bl	10e9c <__errno_location@plt>
   11ae4:	mov	r3, #0
   11ae8:	ldr	r2, [r9]
   11aec:	mov	r1, #3
   11af0:	str	r3, [sp, #76]	; 0x4c
   11af4:	ldr	r4, [r0]
   11af8:	mov	r0, r3
   11afc:	bl	1537c <close@plt+0x4420>
   11b00:	mov	r1, r4
   11b04:	ldr	r2, [pc, #500]	; 11d00 <close@plt+0xda4>
   11b08:	mov	r3, r0
   11b0c:	mov	r0, #0
   11b10:	bl	10e18 <error@plt>
   11b14:	b	11364 <close@plt+0x408>
   11b18:	mov	r2, #1
   11b1c:	mov	r0, r2
   11b20:	ldr	r1, [pc, #492]	; 11d14 <close@plt+0xdb8>
   11b24:	bl	12334 <close@plt+0x13d8>
   11b28:	cmp	r0, #1
   11b2c:	beq	11394 <close@plt+0x438>
   11b30:	bl	10e9c <__errno_location@plt>
   11b34:	ldr	r1, [pc, #476]	; 11d18 <close@plt+0xdbc>
   11b38:	mov	r2, #5
   11b3c:	ldr	r4, [r0]
   11b40:	mov	r0, #0
   11b44:	bl	10d88 <dcgettext@plt>
   11b48:	mov	r1, r4
   11b4c:	mov	r2, r0
   11b50:	mov	r0, #1
   11b54:	bl	10e18 <error@plt>
   11b58:	mov	r3, #1
   11b5c:	b	11350 <close@plt+0x3f4>
   11b60:	ldr	r3, [sp, #168]	; 0xa8
   11b64:	and	r3, r3, #61440	; 0xf000
   11b68:	cmp	r3, #32768	; 0x8000
   11b6c:	bne	112b8 <close@plt+0x35c>
   11b70:	ldr	r7, [sp, #104]	; 0x68
   11b74:	mov	sl, #1073741824	; 0x40000000
   11b78:	mov	r5, r7
   11b7c:	mov	r4, #1
   11b80:	mov	r3, #0
   11b84:	str	r7, [sp, #4]
   11b88:	str	sl, [sp]
   11b8c:	mov	r1, r3
   11b90:	mov	r2, r4
   11b94:	ldr	r0, [r9, #4]
   11b98:	bl	10dc4 <copy_file_range@plt>
   11b9c:	cmn	r0, #1
   11ba0:	beq	11c14 <close@plt+0xcb8>
   11ba4:	cmp	r0, #0
   11ba8:	bne	11c0c <close@plt+0xcb0>
   11bac:	cmp	r5, #0
   11bb0:	movne	r6, #1
   11bb4:	beq	112b8 <close@plt+0x35c>
   11bb8:	ldr	r3, [sp, #76]	; 0x4c
   11bbc:	cmp	r6, #0
   11bc0:	movle	r3, #0
   11bc4:	andgt	r3, r3, #1
   11bc8:	str	r3, [sp, #76]	; 0x4c
   11bcc:	mov	r3, #0
   11bd0:	str	r3, [sp, #32]
   11bd4:	b	1135c <close@plt+0x400>
   11bd8:	bl	10e9c <__errno_location@plt>
   11bdc:	mov	r2, #5
   11be0:	ldr	r1, [pc, #308]	; 11d1c <close@plt+0xdc0>
   11be4:	b	11b3c <close@plt+0xbe0>
   11be8:	bl	17558 <close@plt+0x65fc>
   11bec:	mov	r0, #0
   11bf0:	bl	10f5c <close@plt>
   11bf4:	cmp	r0, #0
   11bf8:	bge	113a0 <close@plt+0x444>
   11bfc:	bl	10e9c <__errno_location@plt>
   11c00:	mov	r2, #5
   11c04:	ldr	r1, [pc, #276]	; 11d20 <close@plt+0xdc4>
   11c08:	b	11b3c <close@plt+0xbe0>
   11c0c:	mov	r5, r4
   11c10:	b	11b80 <close@plt+0xc24>
   11c14:	mov	r6, r0
   11c18:	bl	10e9c <__errno_location@plt>
   11c1c:	ldr	r5, [r0]
   11c20:	cmp	r5, #38	; 0x26
   11c24:	cmpne	r5, #95	; 0x5f
   11c28:	moveq	r4, #1
   11c2c:	movne	r4, #0
   11c30:	cmp	r5, #26
   11c34:	movhi	r3, #1
   11c38:	ldrls	r3, [pc, #228]	; 11d24 <close@plt+0xdc8>
   11c3c:	mvnls	r3, r3, lsr r5
   11c40:	and	r3, r3, #1
   11c44:	eor	r3, r3, #1
   11c48:	orrs	r4, r4, r3
   11c4c:	bne	112b8 <close@plt+0x35c>
   11c50:	ldr	r2, [r9]
   11c54:	mov	r1, #3
   11c58:	mov	r0, r4
   11c5c:	bl	1537c <close@plt+0x4420>
   11c60:	mov	r1, r5
   11c64:	ldr	r2, [pc, #148]	; 11d00 <close@plt+0xda4>
   11c68:	mov	r3, r0
   11c6c:	mov	r0, r4
   11c70:	bl	10e18 <error@plt>
   11c74:	b	11bb8 <close@plt+0xc5c>
   11c78:	mov	r2, #5
   11c7c:	mov	r6, sl
   11c80:	mov	r0, r4
   11c84:	mov	sl, r1
   11c88:	ldr	r1, [pc, #152]	; 11d28 <close@plt+0xdcc>
   11c8c:	bl	10d88 <dcgettext@plt>
   11c90:	ldr	r1, [r9]
   11c94:	mov	r5, r0
   11c98:	mov	r0, #4
   11c9c:	bl	14900 <close@plt+0x39a4>
   11ca0:	mov	r2, r5
   11ca4:	mov	r1, sl
   11ca8:	mov	r3, r0
   11cac:	mov	r0, r4
   11cb0:	bl	10e18 <error@plt>
   11cb4:	str	r6, [r9, #8]
   11cb8:	b	11998 <close@plt+0xa3c>
   11cbc:	bl	10f68 <close@plt+0xc>
   11cc0:	andeq	r8, r1, r0, rrx
   11cc4:	andeq	r7, r1, r8, ror #30
   11cc8:	andeq	r8, r1, ip, asr #9
   11ccc:	andeq	r8, r1, r4, lsr #8
   11cd0:	andeq	r8, r1, ip, lsl #10
   11cd4:			; <UNDEFINED> instruction: 0x000121b8
   11cd8:	andeq	r9, r2, r0, lsl r1
   11cdc:	andeq	r9, r2, ip, ror #2
   11ce0:	andeq	r8, r1, r4, ror #9
   11ce4:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   11ce8:	andeq	r8, r1, r4, lsl r0
   11cec:	andeq	r8, r1, r0, lsr #8
   11cf0:	andeq	r9, r2, r0, ror #2
   11cf4:	svcne	0x00fe0000
   11cf8:	andeq	r9, r2, r4, ror r1
   11cfc:	andeq	r8, r1, r8, lsr #10
   11d00:	andeq	r8, r1, r0, ror r6
   11d04:	strdeq	r9, [r2], -r4
   11d08:	andeq	r5, r0, fp, lsl r4
   11d0c:	andeq	r0, r8, r9, asr #32
   11d10:	andeq	r8, r1, ip, lsr #10
   11d14:	andeq	r8, r1, r4, ror #10
   11d18:	andeq	r8, r1, r8
   11d1c:	andeq	r8, r1, r8, lsl r5
   11d20:	andeq	r8, r1, r8, ror #10
   11d24:	strbeq	r0, [r4], #-514	; 0xfffffdfe
   11d28:	andeq	r8, r1, ip, asr #10
   11d2c:	mov	fp, #0
   11d30:	mov	lr, #0
   11d34:	pop	{r1}		; (ldr r1, [sp], #4)
   11d38:	mov	r2, sp
   11d3c:	push	{r2}		; (str r2, [sp, #-4]!)
   11d40:	push	{r0}		; (str r0, [sp, #-4]!)
   11d44:	ldr	ip, [pc, #16]	; 11d5c <close@plt+0xe00>
   11d48:	push	{ip}		; (str ip, [sp, #-4]!)
   11d4c:	ldr	r0, [pc, #12]	; 11d60 <close@plt+0xe04>
   11d50:	ldr	r3, [pc, #12]	; 11d64 <close@plt+0xe08>
   11d54:	bl	10e3c <__libc_start_main@plt>
   11d58:	bl	10f50 <abort@plt>
   11d5c:	andeq	r7, r1, r8, lsl #30
   11d60:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   11d64:	andeq	r7, r1, r8, lsr #29
   11d68:	ldr	r3, [pc, #20]	; 11d84 <close@plt+0xe28>
   11d6c:	ldr	r2, [pc, #20]	; 11d88 <close@plt+0xe2c>
   11d70:	add	r3, pc, r3
   11d74:	ldr	r2, [r3, r2]
   11d78:	cmp	r2, #0
   11d7c:	bxeq	lr
   11d80:	b	10e54 <__gmon_start__@plt>
   11d84:	andeq	r7, r1, r8, lsl #5
   11d88:	andeq	r0, r0, r8, ror #1
   11d8c:	ldr	r3, [pc, #28]	; 11db0 <close@plt+0xe54>
   11d90:	ldr	r0, [pc, #28]	; 11db4 <close@plt+0xe58>
   11d94:	sub	r3, r3, r0
   11d98:	cmp	r3, #6
   11d9c:	bxls	lr
   11da0:	ldr	r3, [pc, #16]	; 11db8 <close@plt+0xe5c>
   11da4:	cmp	r3, #0
   11da8:	bxeq	lr
   11dac:	bx	r3
   11db0:	andeq	r9, r2, fp, asr r1
   11db4:	andeq	r9, r2, r8, asr r1
   11db8:	andeq	r0, r0, r0
   11dbc:	ldr	r1, [pc, #36]	; 11de8 <close@plt+0xe8c>
   11dc0:	ldr	r0, [pc, #36]	; 11dec <close@plt+0xe90>
   11dc4:	sub	r1, r1, r0
   11dc8:	asr	r1, r1, #2
   11dcc:	add	r1, r1, r1, lsr #31
   11dd0:	asrs	r1, r1, #1
   11dd4:	bxeq	lr
   11dd8:	ldr	r3, [pc, #16]	; 11df0 <close@plt+0xe94>
   11ddc:	cmp	r3, #0
   11de0:	bxeq	lr
   11de4:	bx	r3
   11de8:	andeq	r9, r2, r8, asr r1
   11dec:	andeq	r9, r2, r8, asr r1
   11df0:	andeq	r0, r0, r0
   11df4:	push	{r4, lr}
   11df8:	ldr	r4, [pc, #24]	; 11e18 <close@plt+0xebc>
   11dfc:	ldrb	r3, [r4]
   11e00:	cmp	r3, #0
   11e04:	popne	{r4, pc}
   11e08:	bl	11d8c <close@plt+0xe30>
   11e0c:	mov	r3, #1
   11e10:	strb	r3, [r4]
   11e14:	pop	{r4, pc}
   11e18:	andeq	r9, r2, r0, ror r1
   11e1c:	ldr	r0, [pc, #40]	; 11e4c <close@plt+0xef0>
   11e20:	ldr	r3, [r0]
   11e24:	cmp	r3, #0
   11e28:	bne	11e30 <close@plt+0xed4>
   11e2c:	b	11dbc <close@plt+0xe60>
   11e30:	ldr	r3, [pc, #24]	; 11e50 <close@plt+0xef4>
   11e34:	cmp	r3, #0
   11e38:	beq	11e2c <close@plt+0xed0>
   11e3c:	push	{r4, lr}
   11e40:	blx	r3
   11e44:	pop	{r4, lr}
   11e48:	b	11dbc <close@plt+0xe60>
   11e4c:	andeq	r8, r2, r4, lsl pc
   11e50:	andeq	r0, r0, r0
   11e54:	subs	r6, r0, #0
   11e58:	push	{r7, lr}
   11e5c:	sub	sp, sp, #56	; 0x38
   11e60:	beq	11e9c <close@plt+0xf40>
   11e64:	ldr	r3, [pc, #720]	; 1213c <close@plt+0x11e0>
   11e68:	mov	r2, #5
   11e6c:	ldr	r1, [pc, #716]	; 12140 <close@plt+0x11e4>
   11e70:	mov	r0, #0
   11e74:	ldr	r4, [r3]
   11e78:	bl	10d88 <dcgettext@plt>
   11e7c:	ldr	r3, [pc, #704]	; 12144 <close@plt+0x11e8>
   11e80:	mov	r1, #1
   11e84:	ldr	r3, [r3]
   11e88:	mov	r2, r0
   11e8c:	mov	r0, r4
   11e90:	bl	10ee4 <__fprintf_chk@plt>
   11e94:	mov	r0, r6
   11e98:	bl	10e78 <exit@plt>
   11e9c:	mov	r2, #5
   11ea0:	ldr	r1, [pc, #672]	; 12148 <close@plt+0x11ec>
   11ea4:	bl	10d88 <dcgettext@plt>
   11ea8:	ldr	r4, [pc, #660]	; 12144 <close@plt+0x11e8>
   11eac:	ldr	r7, [pc, #664]	; 1214c <close@plt+0x11f0>
   11eb0:	ldr	r2, [r4]
   11eb4:	mov	r1, r0
   11eb8:	mov	r0, #1
   11ebc:	bl	10ec0 <__printf_chk@plt>
   11ec0:	mov	r2, #5
   11ec4:	ldr	r1, [pc, #644]	; 12150 <close@plt+0x11f4>
   11ec8:	mov	r0, r6
   11ecc:	bl	10d88 <dcgettext@plt>
   11ed0:	ldr	r1, [r7]
   11ed4:	bl	10ce0 <fputs_unlocked@plt>
   11ed8:	mov	r2, #5
   11edc:	ldr	r1, [pc, #624]	; 12154 <close@plt+0x11f8>
   11ee0:	mov	r0, r6
   11ee4:	bl	10d88 <dcgettext@plt>
   11ee8:	ldr	r1, [r7]
   11eec:	bl	10ce0 <fputs_unlocked@plt>
   11ef0:	mov	r2, #5
   11ef4:	ldr	r1, [pc, #604]	; 12158 <close@plt+0x11fc>
   11ef8:	mov	r0, r6
   11efc:	bl	10d88 <dcgettext@plt>
   11f00:	ldr	r1, [r7]
   11f04:	bl	10ce0 <fputs_unlocked@plt>
   11f08:	mov	r2, #5
   11f0c:	ldr	r1, [pc, #584]	; 1215c <close@plt+0x1200>
   11f10:	mov	r0, r6
   11f14:	bl	10d88 <dcgettext@plt>
   11f18:	ldr	r1, [r7]
   11f1c:	bl	10ce0 <fputs_unlocked@plt>
   11f20:	mov	r2, #5
   11f24:	ldr	r1, [pc, #564]	; 12160 <close@plt+0x1204>
   11f28:	mov	r0, r6
   11f2c:	bl	10d88 <dcgettext@plt>
   11f30:	ldr	r1, [r7]
   11f34:	bl	10ce0 <fputs_unlocked@plt>
   11f38:	mov	r2, #5
   11f3c:	ldr	r1, [pc, #544]	; 12164 <close@plt+0x1208>
   11f40:	mov	r0, r6
   11f44:	bl	10d88 <dcgettext@plt>
   11f48:	ldr	r1, [r7]
   11f4c:	bl	10ce0 <fputs_unlocked@plt>
   11f50:	mov	r2, #5
   11f54:	ldr	r1, [pc, #524]	; 12168 <close@plt+0x120c>
   11f58:	mov	r0, r6
   11f5c:	bl	10d88 <dcgettext@plt>
   11f60:	ldr	r3, [r4]
   11f64:	ldr	r4, [pc, #512]	; 1216c <close@plt+0x1210>
   11f68:	mov	r2, r3
   11f6c:	mov	r1, r0
   11f70:	mov	r0, #1
   11f74:	bl	10ec0 <__printf_chk@plt>
   11f78:	ldm	r4!, {r0, r1, r2, r3}
   11f7c:	mov	lr, sp
   11f80:	stmia	lr!, {r0, r1, r2, r3}
   11f84:	ldm	r4!, {r0, r1, r2, r3}
   11f88:	ldr	ip, [sp]
   11f8c:	stmia	lr!, {r0, r1, r2, r3}
   11f90:	cmp	ip, #0
   11f94:	ldm	r4!, {r0, r1, r2, r3}
   11f98:	stmia	lr!, {r0, r1, r2, r3}
   11f9c:	ldm	r4, {r0, r1}
   11fa0:	moveq	r4, sp
   11fa4:	stm	lr, {r0, r1}
   11fa8:	beq	11fd8 <close@plt+0x107c>
   11fac:	ldr	r5, [pc, #444]	; 12170 <close@plt+0x1214>
   11fb0:	mov	r4, sp
   11fb4:	b	11fc4 <close@plt+0x1068>
   11fb8:	ldr	ip, [r4, #8]!
   11fbc:	cmp	ip, #0
   11fc0:	beq	11fd8 <close@plt+0x107c>
   11fc4:	mov	r1, ip
   11fc8:	mov	r0, r5
   11fcc:	bl	10cf8 <strcmp@plt>
   11fd0:	cmp	r0, #0
   11fd4:	bne	11fb8 <close@plt+0x105c>
   11fd8:	ldr	r4, [r4, #4]
   11fdc:	mov	r2, #5
   11fe0:	cmp	r4, #0
   11fe4:	ldr	r1, [pc, #392]	; 12174 <close@plt+0x1218>
   11fe8:	beq	12090 <close@plt+0x1134>
   11fec:	mov	r0, #0
   11ff0:	bl	10d88 <dcgettext@plt>
   11ff4:	ldr	r3, [pc, #380]	; 12178 <close@plt+0x121c>
   11ff8:	ldr	r2, [pc, #380]	; 1217c <close@plt+0x1220>
   11ffc:	mov	r1, r0
   12000:	mov	r0, #1
   12004:	bl	10ec0 <__printf_chk@plt>
   12008:	mov	r1, #0
   1200c:	mov	r0, #5
   12010:	bl	10f08 <setlocale@plt>
   12014:	cmp	r0, #0
   12018:	ldreq	r5, [pc, #336]	; 12170 <close@plt+0x1214>
   1201c:	beq	12038 <close@plt+0x10dc>
   12020:	mov	r2, #3
   12024:	ldr	r1, [pc, #340]	; 12180 <close@plt+0x1224>
   12028:	bl	10f44 <strncmp@plt>
   1202c:	ldr	r5, [pc, #316]	; 12170 <close@plt+0x1214>
   12030:	cmp	r0, #0
   12034:	bne	12120 <close@plt+0x11c4>
   12038:	mov	r2, #5
   1203c:	ldr	r1, [pc, #320]	; 12184 <close@plt+0x1228>
   12040:	mov	r0, #0
   12044:	bl	10d88 <dcgettext@plt>
   12048:	ldr	r3, [pc, #288]	; 12170 <close@plt+0x1214>
   1204c:	ldr	r2, [pc, #292]	; 12178 <close@plt+0x121c>
   12050:	mov	r1, r0
   12054:	mov	r0, #1
   12058:	bl	10ec0 <__printf_chk@plt>
   1205c:	mov	r2, #5
   12060:	ldr	r1, [pc, #288]	; 12188 <close@plt+0x122c>
   12064:	mov	r0, #0
   12068:	bl	10d88 <dcgettext@plt>
   1206c:	ldr	r2, [pc, #280]	; 1218c <close@plt+0x1230>
   12070:	cmp	r4, r5
   12074:	ldr	r3, [pc, #276]	; 12190 <close@plt+0x1234>
   12078:	movne	r3, r2
   1207c:	mov	r1, r0
   12080:	mov	r2, r4
   12084:	mov	r0, #1
   12088:	bl	10ec0 <__printf_chk@plt>
   1208c:	b	11e94 <close@plt+0xf38>
   12090:	mov	r0, r4
   12094:	bl	10d88 <dcgettext@plt>
   12098:	ldr	r3, [pc, #216]	; 12178 <close@plt+0x121c>
   1209c:	ldr	r2, [pc, #216]	; 1217c <close@plt+0x1220>
   120a0:	mov	r1, r0
   120a4:	mov	r0, #1
   120a8:	bl	10ec0 <__printf_chk@plt>
   120ac:	mov	r1, r4
   120b0:	mov	r0, #5
   120b4:	bl	10f08 <setlocale@plt>
   120b8:	cmp	r0, #0
   120bc:	beq	120d4 <close@plt+0x1178>
   120c0:	mov	r2, #3
   120c4:	ldr	r1, [pc, #180]	; 12180 <close@plt+0x1224>
   120c8:	bl	10f44 <strncmp@plt>
   120cc:	cmp	r0, #0
   120d0:	bne	12118 <close@plt+0x11bc>
   120d4:	mov	r2, #5
   120d8:	ldr	r1, [pc, #164]	; 12184 <close@plt+0x1228>
   120dc:	mov	r0, #0
   120e0:	bl	10d88 <dcgettext@plt>
   120e4:	ldr	r3, [pc, #132]	; 12170 <close@plt+0x1214>
   120e8:	ldr	r2, [pc, #136]	; 12178 <close@plt+0x121c>
   120ec:	mov	r4, r3
   120f0:	mov	r1, r0
   120f4:	mov	r0, #1
   120f8:	bl	10ec0 <__printf_chk@plt>
   120fc:	ldr	r1, [pc, #132]	; 12188 <close@plt+0x122c>
   12100:	mov	r2, #5
   12104:	mov	r0, #0
   12108:	bl	10d88 <dcgettext@plt>
   1210c:	ldr	r3, [pc, #124]	; 12190 <close@plt+0x1234>
   12110:	mov	r1, r0
   12114:	b	12080 <close@plt+0x1124>
   12118:	ldr	r5, [pc, #80]	; 12170 <close@plt+0x1214>
   1211c:	mov	r4, r5
   12120:	mov	r2, #5
   12124:	ldr	r1, [pc, #104]	; 12194 <close@plt+0x1238>
   12128:	mov	r0, #0
   1212c:	bl	10d88 <dcgettext@plt>
   12130:	ldr	r1, [r7]
   12134:	bl	10ce0 <fputs_unlocked@plt>
   12138:	b	12038 <close@plt+0x10dc>
   1213c:	andeq	r9, r2, r8, ror #2
   12140:	andeq	r8, r1, r8, lsl r0
   12144:	andeq	r9, r2, ip, lsl #3
   12148:	andeq	r8, r1, r0, asr #32
   1214c:	andeq	r9, r2, ip, ror #2
   12150:	andeq	r8, r1, r4, rrx
   12154:	muleq	r1, r0, r0
   12158:	andeq	r8, r1, r8, asr #1
   1215c:	andeq	r8, r1, r8, lsl r2
   12160:	andeq	r8, r1, ip, ror #5
   12164:	andeq	r8, r1, ip, lsl r3
   12168:	andeq	r8, r1, r4, asr r3
   1216c:	andeq	r7, r1, r0, lsr pc
   12170:	andeq	r8, r1, r4, lsl r0
   12174:	andeq	r8, r1, r0, ror #7
   12178:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   1217c:	andeq	r8, r1, r0, lsr #8
   12180:	andeq	r8, r1, r0, lsr r4
   12184:	andeq	r8, r1, ip, ror r4
   12188:	muleq	r1, r8, r4
   1218c:	andeq	r8, r1, r0, rrx
   12190:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   12194:	andeq	r8, r1, r4, lsr r4
   12198:	ldr	r3, [pc, #4]	; 121a4 <close@plt+0x1248>
   1219c:	str	r0, [r3]
   121a0:	bx	lr
   121a4:	andeq	r9, r2, r4, lsl #3
   121a8:	ldr	r3, [pc, #4]	; 121b4 <close@plt+0x1258>
   121ac:	strb	r0, [r3, #4]
   121b0:	bx	lr
   121b4:	andeq	r9, r2, r4, lsl #3
   121b8:	ldr	r3, [pc, #192]	; 12280 <close@plt+0x1324>
   121bc:	push	{r4, r5, r6, lr}
   121c0:	sub	sp, sp, #8
   121c4:	ldr	r0, [r3]
   121c8:	bl	17668 <close@plt+0x670c>
   121cc:	cmp	r0, #0
   121d0:	beq	121f4 <close@plt+0x1298>
   121d4:	ldr	r4, [pc, #168]	; 12284 <close@plt+0x1328>
   121d8:	ldrb	r3, [r4, #4]
   121dc:	cmp	r3, #0
   121e0:	beq	12210 <close@plt+0x12b4>
   121e4:	bl	10e9c <__errno_location@plt>
   121e8:	ldr	r3, [r0]
   121ec:	cmp	r3, #32
   121f0:	bne	12210 <close@plt+0x12b4>
   121f4:	ldr	r3, [pc, #140]	; 12288 <close@plt+0x132c>
   121f8:	ldr	r0, [r3]
   121fc:	bl	17668 <close@plt+0x670c>
   12200:	cmp	r0, #0
   12204:	bne	12258 <close@plt+0x12fc>
   12208:	add	sp, sp, #8
   1220c:	pop	{r4, r5, r6, pc}
   12210:	mov	r2, #5
   12214:	ldr	r1, [pc, #112]	; 1228c <close@plt+0x1330>
   12218:	mov	r0, #0
   1221c:	bl	10d88 <dcgettext@plt>
   12220:	ldr	r4, [r4]
   12224:	cmp	r4, #0
   12228:	mov	r5, r0
   1222c:	beq	12264 <close@plt+0x1308>
   12230:	bl	10e9c <__errno_location@plt>
   12234:	ldr	r6, [r0]
   12238:	mov	r0, r4
   1223c:	bl	15010 <close@plt+0x40b4>
   12240:	mov	r1, r6
   12244:	str	r5, [sp]
   12248:	ldr	r2, [pc, #64]	; 12290 <close@plt+0x1334>
   1224c:	mov	r3, r0
   12250:	mov	r0, #0
   12254:	bl	10e18 <error@plt>
   12258:	ldr	r3, [pc, #52]	; 12294 <close@plt+0x1338>
   1225c:	ldr	r0, [r3]
   12260:	bl	10d40 <_exit@plt>
   12264:	bl	10e9c <__errno_location@plt>
   12268:	mov	r3, r5
   1226c:	ldr	r2, [pc, #36]	; 12298 <close@plt+0x133c>
   12270:	ldr	r1, [r0]
   12274:	mov	r0, r4
   12278:	bl	10e18 <error@plt>
   1227c:	b	12258 <close@plt+0x12fc>
   12280:	andeq	r9, r2, ip, ror #2
   12284:	andeq	r9, r2, r4, lsl #3
   12288:	andeq	r9, r2, r8, ror #2
   1228c:	andeq	r8, r1, r8
   12290:	andeq	r8, r1, ip, ror #12
   12294:	andeq	r9, r2, r4, lsl r1
   12298:	andeq	r8, r1, r0, ror r6
   1229c:	push	{r4, r5}
   122a0:	pop	{r4, r5}
   122a4:	b	10d04 <posix_fadvise64@plt>
   122a8:	cmp	r0, #0
   122ac:	bxeq	lr
   122b0:	push	{r4, lr}
   122b4:	sub	sp, sp, #16
   122b8:	mov	r4, r1
   122bc:	bl	10ed8 <fileno@plt>
   122c0:	mov	r2, #0
   122c4:	mov	r3, #0
   122c8:	str	r4, [sp, #8]
   122cc:	strd	r2, [sp]
   122d0:	bl	10d04 <posix_fadvise64@plt>
   122d4:	add	sp, sp, #16
   122d8:	pop	{r4, pc}
   122dc:	push	{r4, r5, lr}
   122e0:	sub	sp, sp, #12
   122e4:	mov	r5, r0
   122e8:	bl	10e9c <__errno_location@plt>
   122ec:	mov	r2, #0
   122f0:	mov	r4, r0
   122f4:	ldr	r3, [r0]
   122f8:	str	r2, [r4]
   122fc:	mov	r0, r5
   12300:	str	r3, [sp]
   12304:	str	r3, [sp, #4]
   12308:	bl	10d34 <free@plt>
   1230c:	ldr	r3, [r4]
   12310:	add	r2, sp, #8
   12314:	cmp	r3, #0
   12318:	moveq	r3, #4
   1231c:	movne	r3, #0
   12320:	add	r3, r2, r3
   12324:	ldr	r3, [r3, #-8]
   12328:	str	r3, [r4]
   1232c:	add	sp, sp, #12
   12330:	pop	{r4, r5, pc}
   12334:	push	{r4, r5, r6, r7, r8, lr}
   12338:	subs	r4, r2, #0
   1233c:	beq	1239c <close@plt+0x1440>
   12340:	mov	r7, r0
   12344:	mov	r5, r1
   12348:	mov	r6, #0
   1234c:	b	12368 <close@plt+0x140c>
   12350:	cmp	r0, #0
   12354:	beq	12388 <close@plt+0x142c>
   12358:	subs	r4, r4, r0
   1235c:	add	r6, r6, r0
   12360:	add	r5, r5, r0
   12364:	beq	12380 <close@plt+0x1424>
   12368:	mov	r2, r4
   1236c:	mov	r1, r5
   12370:	mov	r0, r7
   12374:	bl	16458 <close@plt+0x54fc>
   12378:	cmn	r0, #1
   1237c:	bne	12350 <close@plt+0x13f4>
   12380:	mov	r0, r6
   12384:	pop	{r4, r5, r6, r7, r8, pc}
   12388:	bl	10e9c <__errno_location@plt>
   1238c:	mov	r3, #28
   12390:	str	r3, [r0]
   12394:	mov	r0, r6
   12398:	pop	{r4, r5, r6, r7, r8, pc}
   1239c:	mov	r6, r4
   123a0:	b	12380 <close@plt+0x1424>
   123a4:	push	{r4, r5, r6, lr}
   123a8:	subs	r4, r0, #0
   123ac:	beq	12420 <close@plt+0x14c4>
   123b0:	mov	r1, #47	; 0x2f
   123b4:	bl	10f14 <strrchr@plt>
   123b8:	subs	r5, r0, #0
   123bc:	beq	1240c <close@plt+0x14b0>
   123c0:	add	r6, r5, #1
   123c4:	sub	r3, r6, r4
   123c8:	cmp	r3, #6
   123cc:	ble	1240c <close@plt+0x14b0>
   123d0:	mov	r2, #7
   123d4:	ldr	r1, [pc, #96]	; 1243c <close@plt+0x14e0>
   123d8:	sub	r0, r5, #6
   123dc:	bl	10f44 <strncmp@plt>
   123e0:	cmp	r0, #0
   123e4:	bne	1240c <close@plt+0x14b0>
   123e8:	mov	r2, #3
   123ec:	ldr	r1, [pc, #76]	; 12440 <close@plt+0x14e4>
   123f0:	mov	r0, r6
   123f4:	bl	10f44 <strncmp@plt>
   123f8:	cmp	r0, #0
   123fc:	movne	r4, r6
   12400:	ldreq	r3, [pc, #60]	; 12444 <close@plt+0x14e8>
   12404:	addeq	r4, r5, #4
   12408:	streq	r4, [r3]
   1240c:	ldr	r2, [pc, #52]	; 12448 <close@plt+0x14ec>
   12410:	ldr	r3, [pc, #52]	; 1244c <close@plt+0x14f0>
   12414:	str	r4, [r2]
   12418:	str	r4, [r3]
   1241c:	pop	{r4, r5, r6, pc}
   12420:	ldr	r3, [pc, #40]	; 12450 <close@plt+0x14f4>
   12424:	mov	r2, #55	; 0x37
   12428:	mov	r1, #1
   1242c:	ldr	r3, [r3]
   12430:	ldr	r0, [pc, #28]	; 12454 <close@plt+0x14f8>
   12434:	bl	10dd0 <fwrite@plt>
   12438:	bl	10f50 <abort@plt>
   1243c:	andeq	r8, r1, ip, lsr #13
   12440:			; <UNDEFINED> instruction: 0x000186b4
   12444:	andeq	r9, r2, r8, asr r1
   12448:	andeq	r9, r2, ip, lsl #3
   1244c:	andeq	r9, r2, ip, asr r1
   12450:	andeq	r9, r2, r8, ror #2
   12454:	andeq	r8, r1, r4, ror r6
   12458:	push	{r4, r5, r6, lr}
   1245c:	mov	r4, r0
   12460:	mov	r5, r1
   12464:	bl	17884 <close@plt+0x6928>
   12468:	ldrb	r3, [r0]
   1246c:	bic	r3, r3, #32
   12470:	cmp	r3, #85	; 0x55
   12474:	bne	124d4 <close@plt+0x1578>
   12478:	ldrb	r3, [r0, #1]
   1247c:	bic	r3, r3, #32
   12480:	cmp	r3, #84	; 0x54
   12484:	bne	12510 <close@plt+0x15b4>
   12488:	ldrb	r3, [r0, #2]
   1248c:	bic	r3, r3, #32
   12490:	cmp	r3, #70	; 0x46
   12494:	bne	12510 <close@plt+0x15b4>
   12498:	ldrb	r3, [r0, #3]
   1249c:	cmp	r3, #45	; 0x2d
   124a0:	bne	12510 <close@plt+0x15b4>
   124a4:	ldrb	r3, [r0, #4]
   124a8:	cmp	r3, #56	; 0x38
   124ac:	bne	12510 <close@plt+0x15b4>
   124b0:	ldrb	r3, [r0, #5]
   124b4:	cmp	r3, #0
   124b8:	bne	12510 <close@plt+0x15b4>
   124bc:	ldrb	r2, [r4]
   124c0:	ldr	r3, [pc, #152]	; 12560 <close@plt+0x1604>
   124c4:	ldr	r0, [pc, #152]	; 12564 <close@plt+0x1608>
   124c8:	cmp	r2, #96	; 0x60
   124cc:	movne	r0, r3
   124d0:	pop	{r4, r5, r6, pc}
   124d4:	cmp	r3, #71	; 0x47
   124d8:	bne	12510 <close@plt+0x15b4>
   124dc:	ldrb	r3, [r0, #1]
   124e0:	bic	r3, r3, #32
   124e4:	cmp	r3, #66	; 0x42
   124e8:	bne	12510 <close@plt+0x15b4>
   124ec:	ldrb	r3, [r0, #2]
   124f0:	cmp	r3, #49	; 0x31
   124f4:	bne	12510 <close@plt+0x15b4>
   124f8:	ldrb	r3, [r0, #3]
   124fc:	cmp	r3, #56	; 0x38
   12500:	bne	12510 <close@plt+0x15b4>
   12504:	ldrb	r3, [r0, #4]
   12508:	cmp	r3, #48	; 0x30
   1250c:	beq	12524 <close@plt+0x15c8>
   12510:	ldr	r3, [pc, #80]	; 12568 <close@plt+0x160c>
   12514:	cmp	r5, #9
   12518:	ldr	r0, [pc, #76]	; 1256c <close@plt+0x1610>
   1251c:	movne	r0, r3
   12520:	pop	{r4, r5, r6, pc}
   12524:	ldrb	r3, [r0, #5]
   12528:	cmp	r3, #51	; 0x33
   1252c:	bne	12510 <close@plt+0x15b4>
   12530:	ldrb	r3, [r0, #6]
   12534:	cmp	r3, #48	; 0x30
   12538:	bne	12510 <close@plt+0x15b4>
   1253c:	ldrb	r3, [r0, #7]
   12540:	cmp	r3, #0
   12544:	bne	12510 <close@plt+0x15b4>
   12548:	ldrb	r2, [r4]
   1254c:	ldr	r3, [pc, #28]	; 12570 <close@plt+0x1614>
   12550:	ldr	r0, [pc, #28]	; 12574 <close@plt+0x1618>
   12554:	cmp	r2, #96	; 0x60
   12558:	movne	r0, r3
   1255c:	pop	{r4, r5, r6, pc}
   12560:	andeq	r8, r1, r0, lsl r7
   12564:	andeq	r8, r1, ip, lsl #14
   12568:	andeq	r8, r1, r0, lsr #14
   1256c:	andeq	r8, r1, ip, lsl r7
   12570:	andeq	r8, r1, r8, lsl r7
   12574:	andeq	r8, r1, r4, lsl r7
   12578:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1257c:	sub	sp, sp, #140	; 0x8c
   12580:	mov	r9, r1
   12584:	str	r3, [sp, #24]
   12588:	mov	r3, #1
   1258c:	mov	sl, r0
   12590:	str	r2, [sp, #44]	; 0x2c
   12594:	str	r3, [sp, #28]
   12598:	bl	10df4 <__ctype_get_mb_cur_max@plt>
   1259c:	ldr	r3, [sp, #180]	; 0xb4
   125a0:	mov	fp, r9
   125a4:	mov	r9, sl
   125a8:	lsr	r3, r3, #1
   125ac:	and	r3, r3, #1
   125b0:	str	r3, [sp, #40]	; 0x28
   125b4:	ldr	r3, [sp, #180]	; 0xb4
   125b8:	mov	r2, #0
   125bc:	and	r3, r3, #4
   125c0:	str	r3, [sp, #100]	; 0x64
   125c4:	ldr	r3, [sp, #180]	; 0xb4
   125c8:	str	r2, [sp, #76]	; 0x4c
   125cc:	and	r3, r3, #1
   125d0:	str	r3, [sp, #96]	; 0x60
   125d4:	str	r2, [sp, #36]	; 0x24
   125d8:	str	r2, [sp, #56]	; 0x38
   125dc:	str	r2, [sp, #68]	; 0x44
   125e0:	str	r2, [sp, #72]	; 0x48
   125e4:	str	r2, [sp, #84]	; 0x54
   125e8:	str	r0, [sp, #80]	; 0x50
   125ec:	ldr	r3, [sp, #176]	; 0xb0
   125f0:	cmp	r3, #10
   125f4:	ldrls	pc, [pc, r3, lsl #2]
   125f8:	b	137d0 <close@plt+0x2874>
   125fc:	andeq	r2, r1, r8, lsr #12
   12600:	andeq	r2, r1, r8, asr #18
   12604:	andeq	r2, r1, r0, lsr #21
   12608:	andeq	r2, r1, ip, ror r9
   1260c:	strdeq	r2, [r1], -r4
   12610:	ldrdeq	r2, [r1], -r4
   12614:	muleq	r1, ip, r9
   12618:	andeq	r2, r1, r0, asr #19
   1261c:	andeq	r2, r1, r8, ror #19
   12620:	andeq	r2, r1, r8, ror #19
   12624:	andeq	r2, r1, r8, ror #19
   12628:	mov	r3, #0
   1262c:	ldr	r1, [sp, #56]	; 0x38
   12630:	ldr	r2, [sp, #176]	; 0xb0
   12634:	ldr	lr, [sp, #176]	; 0xb0
   12638:	mov	r8, r3
   1263c:	mov	ip, r3
   12640:	str	r3, [sp, #40]	; 0x28
   12644:	mov	r3, r1
   12648:	cmp	r2, #2
   1264c:	moveq	r3, #0
   12650:	andne	r3, r3, #1
   12654:	mov	r0, r3
   12658:	str	r3, [sp, #92]	; 0x5c
   1265c:	ldr	r3, [sp, #68]	; 0x44
   12660:	sub	lr, lr, #2
   12664:	adds	r2, r3, #0
   12668:	movne	r2, #1
   1266c:	and	r3, r1, ip
   12670:	and	r3, r2, r3
   12674:	clz	lr, lr
   12678:	str	r3, [sp, #88]	; 0x58
   1267c:	lsr	lr, lr, #5
   12680:	mov	r3, ip
   12684:	and	r3, r3, lr
   12688:	mov	sl, #0
   1268c:	and	r0, r2, r0
   12690:	str	r3, [sp, #64]	; 0x40
   12694:	eor	r3, r1, #1
   12698:	str	lr, [sp, #52]	; 0x34
   1269c:	str	r0, [sp, #48]	; 0x30
   126a0:	str	r3, [sp, #60]	; 0x3c
   126a4:	ldr	r3, [sp, #24]
   126a8:	cmn	r3, #1
   126ac:	beq	12bdc <close@plt+0x1c80>
   126b0:	subs	r7, r3, sl
   126b4:	movne	r7, #1
   126b8:	cmp	r7, #0
   126bc:	beq	12bf4 <close@plt+0x1c98>
   126c0:	ldr	r3, [sp, #48]	; 0x30
   126c4:	cmp	r3, #0
   126c8:	beq	12f60 <close@plt+0x2004>
   126cc:	ldr	r2, [sp, #68]	; 0x44
   126d0:	ldr	r1, [sp, #24]
   126d4:	cmp	r2, #1
   126d8:	mov	r3, r2
   126dc:	movls	r3, #0
   126e0:	movhi	r3, #1
   126e4:	cmn	r1, #1
   126e8:	movne	r3, #0
   126ec:	cmp	r3, #0
   126f0:	add	r4, sl, r2
   126f4:	beq	12704 <close@plt+0x17a8>
   126f8:	ldr	r0, [sp, #44]	; 0x2c
   126fc:	bl	10e84 <strlen@plt>
   12700:	str	r0, [sp, #24]
   12704:	ldr	r3, [sp, #24]
   12708:	cmp	r3, r4
   1270c:	ldr	r3, [sp, #44]	; 0x2c
   12710:	add	r5, r3, sl
   12714:	bcc	12f68 <close@plt+0x200c>
   12718:	mov	r0, r5
   1271c:	ldr	r2, [sp, #68]	; 0x44
   12720:	ldr	r1, [sp, #72]	; 0x48
   12724:	bl	10d64 <memcmp@plt>
   12728:	cmp	r0, #0
   1272c:	bne	12f68 <close@plt+0x200c>
   12730:	ldr	r3, [sp, #40]	; 0x28
   12734:	cmp	r3, #0
   12738:	bne	13924 <close@plt+0x29c8>
   1273c:	ldrb	r4, [r5]
   12740:	cmp	r4, #126	; 0x7e
   12744:	ldrls	pc, [pc, r4, lsl #2]
   12748:	b	13860 <close@plt+0x2904>
   1274c:	andeq	r2, r1, r0, lsr #28
   12750:	andeq	r3, r1, r0, ror #16
   12754:	andeq	r3, r1, r0, ror #16
   12758:	andeq	r3, r1, r0, ror #16
   1275c:	andeq	r3, r1, r0, ror #16
   12760:	andeq	r3, r1, r0, ror #16
   12764:	andeq	r3, r1, r0, ror #16
   12768:	andeq	r2, r1, ip, lsl #28
   1276c:	strdeq	r2, [r1], -r8
   12770:	ldrdeq	r2, [r1], -r4
   12774:			; <UNDEFINED> instruction: 0x00012db4
   12778:	andeq	r2, r1, r4, ror #27
   1277c:	andeq	r2, r1, ip, lsl sp
   12780:	andeq	r2, r1, r0, asr pc
   12784:	andeq	r3, r1, r0, ror #16
   12788:	andeq	r3, r1, r0, ror #16
   1278c:	andeq	r3, r1, r0, ror #16
   12790:	andeq	r3, r1, r0, ror #16
   12794:	andeq	r3, r1, r0, ror #16
   12798:	andeq	r3, r1, r0, ror #16
   1279c:	andeq	r3, r1, r0, ror #16
   127a0:	andeq	r3, r1, r0, ror #16
   127a4:	andeq	r3, r1, r0, ror #16
   127a8:	andeq	r3, r1, r0, ror #16
   127ac:	andeq	r3, r1, r0, ror #16
   127b0:	andeq	r3, r1, r0, ror #16
   127b4:	andeq	r3, r1, r0, ror #16
   127b8:	andeq	r3, r1, r0, ror #16
   127bc:	andeq	r3, r1, r0, ror #16
   127c0:	andeq	r3, r1, r0, ror #16
   127c4:	andeq	r3, r1, r0, ror #16
   127c8:	andeq	r3, r1, r0, ror #16
   127cc:	andeq	r2, r1, r0, asr #30
   127d0:	andeq	r2, r1, r0, lsr #30
   127d4:	andeq	r2, r1, r0, lsr #30
   127d8:	andeq	r2, r1, r0, lsl #30
   127dc:	andeq	r2, r1, r0, lsr #30
   127e0:	andeq	r2, r1, ip, lsl #26
   127e4:	andeq	r2, r1, r0, lsr #30
   127e8:	andeq	r2, r1, r8, ror #25
   127ec:	andeq	r2, r1, r0, lsr #30
   127f0:	andeq	r2, r1, r0, lsr #30
   127f4:	andeq	r2, r1, r0, lsr #30
   127f8:	andeq	r2, r1, ip, lsl #26
   127fc:	andeq	r2, r1, ip, lsl #26
   12800:	andeq	r2, r1, ip, lsl #26
   12804:	andeq	r2, r1, ip, lsl #26
   12808:	andeq	r2, r1, ip, lsl #26
   1280c:	andeq	r2, r1, ip, lsl #26
   12810:	andeq	r2, r1, ip, lsl #26
   12814:	andeq	r2, r1, ip, lsl #26
   12818:	andeq	r2, r1, ip, lsl #26
   1281c:	andeq	r2, r1, ip, lsl #26
   12820:	andeq	r2, r1, ip, lsl #26
   12824:	andeq	r2, r1, ip, lsl #26
   12828:	andeq	r2, r1, ip, lsl #26
   1282c:	andeq	r2, r1, ip, lsl #26
   12830:	andeq	r2, r1, ip, lsl #26
   12834:	andeq	r2, r1, ip, lsl #26
   12838:	andeq	r2, r1, r0, lsr #30
   1283c:	andeq	r2, r1, r0, lsr #30
   12840:	andeq	r2, r1, r0, lsr #30
   12844:	andeq	r2, r1, r0, lsr #30
   12848:	muleq	r1, r8, ip
   1284c:	andeq	r3, r1, r0, ror #16
   12850:	andeq	r2, r1, ip, lsl #26
   12854:	andeq	r2, r1, ip, lsl #26
   12858:	andeq	r2, r1, ip, lsl #26
   1285c:	andeq	r2, r1, ip, lsl #26
   12860:	andeq	r2, r1, ip, lsl #26
   12864:	andeq	r2, r1, ip, lsl #26
   12868:	andeq	r2, r1, ip, lsl #26
   1286c:	andeq	r2, r1, ip, lsl #26
   12870:	andeq	r2, r1, ip, lsl #26
   12874:	andeq	r2, r1, ip, lsl #26
   12878:	andeq	r2, r1, ip, lsl #26
   1287c:	andeq	r2, r1, ip, lsl #26
   12880:	andeq	r2, r1, ip, lsl #26
   12884:	andeq	r2, r1, ip, lsl #26
   12888:	andeq	r2, r1, ip, lsl #26
   1288c:	andeq	r2, r1, ip, lsl #26
   12890:	andeq	r2, r1, ip, lsl #26
   12894:	andeq	r2, r1, ip, lsl #26
   12898:	andeq	r2, r1, ip, lsl #26
   1289c:	andeq	r2, r1, ip, lsl #26
   128a0:	andeq	r2, r1, ip, lsl #26
   128a4:	andeq	r2, r1, ip, lsl #26
   128a8:	andeq	r2, r1, ip, lsl #26
   128ac:	andeq	r2, r1, ip, lsl #26
   128b0:	andeq	r2, r1, ip, lsl #26
   128b4:	andeq	r2, r1, ip, lsl #26
   128b8:	andeq	r2, r1, r0, lsr #30
   128bc:	andeq	r2, r1, r4, ror #24
   128c0:	andeq	r2, r1, ip, lsl #26
   128c4:	andeq	r2, r1, r0, lsr #30
   128c8:	andeq	r2, r1, ip, lsl #26
   128cc:	andeq	r2, r1, r0, lsr #30
   128d0:	andeq	r2, r1, ip, lsl #26
   128d4:	andeq	r2, r1, ip, lsl #26
   128d8:	andeq	r2, r1, ip, lsl #26
   128dc:	andeq	r2, r1, ip, lsl #26
   128e0:	andeq	r2, r1, ip, lsl #26
   128e4:	andeq	r2, r1, ip, lsl #26
   128e8:	andeq	r2, r1, ip, lsl #26
   128ec:	andeq	r2, r1, ip, lsl #26
   128f0:	andeq	r2, r1, ip, lsl #26
   128f4:	andeq	r2, r1, ip, lsl #26
   128f8:	andeq	r2, r1, ip, lsl #26
   128fc:	andeq	r2, r1, ip, lsl #26
   12900:	andeq	r2, r1, ip, lsl #26
   12904:	andeq	r2, r1, ip, lsl #26
   12908:	andeq	r2, r1, ip, lsl #26
   1290c:	andeq	r2, r1, ip, lsl #26
   12910:	andeq	r2, r1, ip, lsl #26
   12914:	andeq	r2, r1, ip, lsl #26
   12918:	andeq	r2, r1, ip, lsl #26
   1291c:	andeq	r2, r1, ip, lsl #26
   12920:	andeq	r2, r1, ip, lsl #26
   12924:	andeq	r2, r1, ip, lsl #26
   12928:	andeq	r2, r1, ip, lsl #26
   1292c:	andeq	r2, r1, ip, lsl #26
   12930:	andeq	r2, r1, ip, lsl #26
   12934:	andeq	r2, r1, ip, lsl #26
   12938:	andeq	r2, r1, ip, lsl fp
   1293c:	andeq	r2, r1, r0, lsr #30
   12940:	andeq	r2, r1, ip, lsl fp
   12944:	andeq	r2, r1, r0, lsl #30
   12948:	mov	r3, #1
   1294c:	str	r3, [sp, #40]	; 0x28
   12950:	str	r3, [sp, #68]	; 0x44
   12954:	mov	r8, #0
   12958:	ldr	r3, [pc, #4056]	; 13938 <close@plt+0x29dc>
   1295c:	str	r3, [sp, #72]	; 0x48
   12960:	mov	r3, #2
   12964:	str	r3, [sp, #176]	; 0xb0
   12968:	ldr	r1, [sp, #56]	; 0x38
   1296c:	mov	r2, r3
   12970:	ldr	ip, [sp, #40]	; 0x28
   12974:	mov	lr, r3
   12978:	b	12644 <close@plt+0x16e8>
   1297c:	mov	r3, #1
   12980:	str	r3, [sp, #56]	; 0x38
   12984:	str	r3, [sp, #68]	; 0x44
   12988:	str	r3, [sp, #40]	; 0x28
   1298c:	ldr	r3, [pc, #4004]	; 13938 <close@plt+0x29dc>
   12990:	mov	r8, #0
   12994:	str	r3, [sp, #72]	; 0x48
   12998:	b	12960 <close@plt+0x1a04>
   1299c:	mov	r3, #1
   129a0:	str	r3, [sp, #56]	; 0x38
   129a4:	str	r3, [sp, #68]	; 0x44
   129a8:	str	r3, [sp, #40]	; 0x28
   129ac:	ldr	r3, [pc, #3976]	; 1393c <close@plt+0x29e0>
   129b0:	mov	r8, #0
   129b4:	str	r3, [sp, #72]	; 0x48
   129b8:	mov	r3, #5
   129bc:	b	12964 <close@plt+0x1a08>
   129c0:	mov	r3, #0
   129c4:	str	r3, [sp, #40]	; 0x28
   129c8:	mov	r3, #1
   129cc:	str	r3, [sp, #56]	; 0x38
   129d0:	mov	r8, #0
   129d4:	mov	r1, r3
   129d8:	ldr	r2, [sp, #176]	; 0xb0
   129dc:	ldr	ip, [sp, #40]	; 0x28
   129e0:	ldr	lr, [sp, #176]	; 0xb0
   129e4:	b	12644 <close@plt+0x16e8>
   129e8:	ldr	r3, [sp, #176]	; 0xb0
   129ec:	cmp	r3, #10
   129f0:	beq	12a34 <close@plt+0x1ad8>
   129f4:	mov	r2, #5
   129f8:	ldr	r1, [pc, #3904]	; 13940 <close@plt+0x29e4>
   129fc:	mov	r0, #0
   12a00:	bl	10d88 <dcgettext@plt>
   12a04:	ldr	r2, [pc, #3892]	; 13940 <close@plt+0x29e4>
   12a08:	cmp	r0, r2
   12a0c:	str	r0, [sp, #188]	; 0xbc
   12a10:	beq	13acc <close@plt+0x2b70>
   12a14:	mov	r2, #5
   12a18:	ldr	r1, [pc, #3864]	; 13938 <close@plt+0x29dc>
   12a1c:	mov	r0, #0
   12a20:	bl	10d88 <dcgettext@plt>
   12a24:	ldr	r2, [pc, #3852]	; 13938 <close@plt+0x29dc>
   12a28:	cmp	r0, r2
   12a2c:	str	r0, [sp, #192]	; 0xc0
   12a30:	beq	13abc <close@plt+0x2b60>
   12a34:	ldr	r8, [sp, #40]	; 0x28
   12a38:	cmp	r8, #0
   12a3c:	movne	r8, #0
   12a40:	bne	12a70 <close@plt+0x1b14>
   12a44:	ldr	r3, [sp, #188]	; 0xbc
   12a48:	ldrb	r3, [r3]
   12a4c:	cmp	r3, #0
   12a50:	beq	12a70 <close@plt+0x1b14>
   12a54:	ldr	r2, [sp, #188]	; 0xbc
   12a58:	cmp	fp, r8
   12a5c:	strbhi	r3, [r9, r8]
   12a60:	ldrb	r3, [r2, #1]!
   12a64:	add	r8, r8, #1
   12a68:	cmp	r3, #0
   12a6c:	bne	12a58 <close@plt+0x1afc>
   12a70:	ldr	r0, [sp, #192]	; 0xc0
   12a74:	bl	10e84 <strlen@plt>
   12a78:	ldr	r3, [sp, #192]	; 0xc0
   12a7c:	ldr	r2, [sp, #176]	; 0xb0
   12a80:	str	r3, [sp, #72]	; 0x48
   12a84:	mov	r3, #1
   12a88:	str	r3, [sp, #56]	; 0x38
   12a8c:	mov	r1, r3
   12a90:	ldr	ip, [sp, #40]	; 0x28
   12a94:	ldr	lr, [sp, #176]	; 0xb0
   12a98:	str	r0, [sp, #68]	; 0x44
   12a9c:	b	12644 <close@plt+0x16e8>
   12aa0:	ldr	r3, [sp, #40]	; 0x28
   12aa4:	cmp	r3, #0
   12aa8:	beq	13750 <close@plt+0x27f4>
   12aac:	mov	r3, #1
   12ab0:	str	r3, [sp, #68]	; 0x44
   12ab4:	ldr	r3, [pc, #3708]	; 13938 <close@plt+0x29dc>
   12ab8:	str	r3, [sp, #72]	; 0x48
   12abc:	mov	r8, #0
   12ac0:	ldr	r1, [sp, #56]	; 0x38
   12ac4:	ldr	r2, [sp, #176]	; 0xb0
   12ac8:	ldr	ip, [sp, #40]	; 0x28
   12acc:	ldr	lr, [sp, #176]	; 0xb0
   12ad0:	b	12644 <close@plt+0x16e8>
   12ad4:	ldr	r3, [sp, #40]	; 0x28
   12ad8:	cmp	r3, #0
   12adc:	beq	137d4 <close@plt+0x2878>
   12ae0:	str	r3, [sp, #56]	; 0x38
   12ae4:	mov	r3, #1
   12ae8:	str	r3, [sp, #68]	; 0x44
   12aec:	ldr	r3, [pc, #3656]	; 1393c <close@plt+0x29e0>
   12af0:	b	12ab8 <close@plt+0x1b5c>
   12af4:	ldr	r3, [sp, #40]	; 0x28
   12af8:	cmp	r3, #0
   12afc:	mov	r3, #1
   12b00:	streq	r3, [sp, #56]	; 0x38
   12b04:	beq	13750 <close@plt+0x27f4>
   12b08:	str	r3, [sp, #68]	; 0x44
   12b0c:	ldr	r3, [pc, #3620]	; 13938 <close@plt+0x29dc>
   12b10:	mov	r8, #0
   12b14:	str	r3, [sp, #72]	; 0x48
   12b18:	b	12960 <close@plt+0x1a04>
   12b1c:	ldr	r3, [sp, #24]
   12b20:	ldr	r6, [sp, #48]	; 0x30
   12b24:	cmn	r3, #1
   12b28:	beq	13184 <close@plt+0x2228>
   12b2c:	subs	r3, r3, #1
   12b30:	movne	r3, #1
   12b34:	cmp	r3, #0
   12b38:	beq	12f04 <close@plt+0x1fa8>
   12b3c:	ldr	r1, [sp, #52]	; 0x34
   12b40:	mov	r7, r3
   12b44:	mov	r3, #0
   12b48:	str	r3, [sp, #32]
   12b4c:	ldr	r3, [sp, #60]	; 0x3c
   12b50:	orr	r2, r1, r3
   12b54:	ldr	r3, [sp, #40]	; 0x28
   12b58:	eor	r2, r2, #1
   12b5c:	orr	r2, r3, r2
   12b60:	tst	r2, #255	; 0xff
   12b64:	bne	13488 <close@plt+0x252c>
   12b68:	cmp	r6, #0
   12b6c:	bne	12d48 <close@plt+0x1dec>
   12b70:	ldr	r3, [sp, #36]	; 0x24
   12b74:	add	sl, sl, #1
   12b78:	and	r3, r3, r7
   12b7c:	uxtb	r6, r3
   12b80:	cmp	r6, #0
   12b84:	beq	12bb0 <close@plt+0x1c54>
   12b88:	cmp	fp, r8
   12b8c:	movhi	r3, #39	; 0x27
   12b90:	strbhi	r3, [r9, r8]
   12b94:	add	r3, r8, #1
   12b98:	cmp	fp, r3
   12b9c:	movhi	r2, #39	; 0x27
   12ba0:	add	r8, r8, #2
   12ba4:	strbhi	r2, [r9, r3]
   12ba8:	mov	r3, #0
   12bac:	str	r3, [sp, #36]	; 0x24
   12bb0:	ldr	r2, [sp, #32]
   12bb4:	cmp	r8, fp
   12bb8:	ldr	r3, [sp, #28]
   12bbc:	strbcc	r4, [r9, r8]
   12bc0:	cmp	r2, #0
   12bc4:	moveq	r3, #0
   12bc8:	str	r3, [sp, #28]
   12bcc:	ldr	r3, [sp, #24]
   12bd0:	add	r8, r8, #1
   12bd4:	cmn	r3, #1
   12bd8:	bne	126b0 <close@plt+0x1754>
   12bdc:	ldr	r3, [sp, #44]	; 0x2c
   12be0:	ldrb	r3, [r3, sl]
   12be4:	adds	r7, r3, #0
   12be8:	movne	r7, #1
   12bec:	cmp	r7, #0
   12bf0:	bne	126c0 <close@plt+0x1764>
   12bf4:	ldr	r3, [sp, #64]	; 0x40
   12bf8:	cmp	r8, #0
   12bfc:	movne	r3, #0
   12c00:	andeq	r3, r3, #1
   12c04:	cmp	r3, #0
   12c08:	str	r3, [sp, #64]	; 0x40
   12c0c:	bne	136b0 <close@plt+0x2754>
   12c10:	ldr	r3, [sp, #40]	; 0x28
   12c14:	ldr	r2, [sp, #52]	; 0x34
   12c18:	eor	r3, r3, #1
   12c1c:	ands	r2, r2, r3
   12c20:	beq	13adc <close@plt+0x2b80>
   12c24:	ldr	r3, [sp, #76]	; 0x4c
   12c28:	cmp	r3, #0
   12c2c:	beq	13aac <close@plt+0x2b50>
   12c30:	ldr	r3, [sp, #28]
   12c34:	cmp	r3, #0
   12c38:	bne	13a68 <close@plt+0x2b0c>
   12c3c:	ldr	r2, [sp, #84]	; 0x54
   12c40:	clz	r3, fp
   12c44:	cmp	r2, #0
   12c48:	lsr	r3, r3, #5
   12c4c:	moveq	r3, #0
   12c50:	cmp	r3, #0
   12c54:	beq	13a08 <close@plt+0x2aac>
   12c58:	mov	fp, r2
   12c5c:	str	r3, [sp, #76]	; 0x4c
   12c60:	b	125ec <close@plt+0x1690>
   12c64:	ldr	r3, [sp, #176]	; 0xb0
   12c68:	ldr	r6, [sp, #48]	; 0x30
   12c6c:	cmp	r3, #2
   12c70:	beq	131a8 <close@plt+0x224c>
   12c74:	ldr	r3, [sp, #88]	; 0x58
   12c78:	cmp	r3, #0
   12c7c:	beq	1372c <close@plt+0x27d0>
   12c80:	mov	r3, #0
   12c84:	add	sl, sl, #1
   12c88:	ldr	r6, [sp, #36]	; 0x24
   12c8c:	str	r3, [sp, #32]
   12c90:	mov	r4, #92	; 0x5c
   12c94:	b	12b80 <close@plt+0x1c24>
   12c98:	ldr	r3, [sp, #176]	; 0xb0
   12c9c:	ldr	r6, [sp, #48]	; 0x30
   12ca0:	cmp	r3, #2
   12ca4:	beq	131d8 <close@plt+0x227c>
   12ca8:	cmp	r3, #5
   12cac:	bne	1373c <close@plt+0x27e0>
   12cb0:	ldr	r3, [sp, #100]	; 0x64
   12cb4:	cmp	r3, #0
   12cb8:	beq	137a0 <close@plt+0x2844>
   12cbc:	ldr	r2, [sp, #24]
   12cc0:	add	r3, sl, #2
   12cc4:	cmp	r2, r3
   12cc8:	bls	12cd8 <close@plt+0x1d7c>
   12ccc:	ldrb	r4, [r5, #1]
   12cd0:	cmp	r4, #63	; 0x3f
   12cd4:	beq	13948 <close@plt+0x29ec>
   12cd8:	mov	r1, #0
   12cdc:	str	r1, [sp, #32]
   12ce0:	mov	r4, #63	; 0x3f
   12ce4:	b	12b4c <close@plt+0x1bf0>
   12ce8:	ldr	r3, [sp, #176]	; 0xb0
   12cec:	ldr	r6, [sp, #48]	; 0x30
   12cf0:	cmp	r3, #2
   12cf4:	beq	13204 <close@plt+0x22a8>
   12cf8:	str	r7, [sp, #32]
   12cfc:	str	r7, [sp, #76]	; 0x4c
   12d00:	mov	r1, #0
   12d04:	mov	r4, #39	; 0x27
   12d08:	b	12b4c <close@plt+0x1bf0>
   12d0c:	ldr	r6, [sp, #48]	; 0x30
   12d10:	ldr	r1, [sp, #52]	; 0x34
   12d14:	str	r7, [sp, #32]
   12d18:	b	12b4c <close@plt+0x1bf0>
   12d1c:	ldr	r6, [sp, #48]	; 0x30
   12d20:	ldr	r1, [sp, #52]	; 0x34
   12d24:	mov	r4, #12
   12d28:	mov	r3, #102	; 0x66
   12d2c:	ldr	r2, [sp, #56]	; 0x38
   12d30:	cmp	r2, #0
   12d34:	streq	r2, [sp, #32]
   12d38:	beq	12b4c <close@plt+0x1bf0>
   12d3c:	mov	r4, r3
   12d40:	mov	r3, #0
   12d44:	str	r3, [sp, #32]
   12d48:	ldr	r3, [sp, #40]	; 0x28
   12d4c:	cmp	r3, #0
   12d50:	bne	134c0 <close@plt+0x2564>
   12d54:	ldr	r3, [sp, #36]	; 0x24
   12d58:	eor	r3, r3, #1
   12d5c:	and	r3, r3, r1
   12d60:	ands	r3, r3, #255	; 0xff
   12d64:	beq	12d9c <close@plt+0x1e40>
   12d68:	cmp	fp, r8
   12d6c:	movhi	r2, #39	; 0x27
   12d70:	strbhi	r2, [r9, r8]
   12d74:	add	r2, r8, #1
   12d78:	cmp	fp, r2
   12d7c:	movhi	r1, #36	; 0x24
   12d80:	strbhi	r1, [r9, r2]
   12d84:	add	r2, r8, #2
   12d88:	cmp	fp, r2
   12d8c:	add	r8, r8, #3
   12d90:	movhi	r1, #39	; 0x27
   12d94:	strbhi	r1, [r9, r2]
   12d98:	str	r3, [sp, #36]	; 0x24
   12d9c:	cmp	fp, r8
   12da0:	movhi	r3, #92	; 0x5c
   12da4:	strbhi	r3, [r9, r8]
   12da8:	add	sl, sl, #1
   12dac:	add	r8, r8, #1
   12db0:	b	12bb0 <close@plt+0x1c54>
   12db4:	ldr	r6, [sp, #48]	; 0x30
   12db8:	mov	r4, #10
   12dbc:	mov	r3, #110	; 0x6e
   12dc0:	ldr	r2, [sp, #64]	; 0x40
   12dc4:	cmp	r2, #0
   12dc8:	bne	13848 <close@plt+0x28ec>
   12dcc:	ldr	r1, [sp, #52]	; 0x34
   12dd0:	b	12d2c <close@plt+0x1dd0>
   12dd4:	ldr	r6, [sp, #48]	; 0x30
   12dd8:	ldr	r1, [sp, #52]	; 0x34
   12ddc:	mov	r3, #116	; 0x74
   12de0:	b	12d2c <close@plt+0x1dd0>
   12de4:	ldr	r6, [sp, #48]	; 0x30
   12de8:	ldr	r1, [sp, #52]	; 0x34
   12dec:	mov	r4, #11
   12df0:	mov	r3, #118	; 0x76
   12df4:	b	12d2c <close@plt+0x1dd0>
   12df8:	ldr	r6, [sp, #48]	; 0x30
   12dfc:	ldr	r1, [sp, #52]	; 0x34
   12e00:	mov	r4, #8
   12e04:	mov	r3, #98	; 0x62
   12e08:	b	12d2c <close@plt+0x1dd0>
   12e0c:	ldr	r6, [sp, #48]	; 0x30
   12e10:	ldr	r1, [sp, #52]	; 0x34
   12e14:	mov	r4, #7
   12e18:	mov	r3, #97	; 0x61
   12e1c:	b	12d2c <close@plt+0x1dd0>
   12e20:	ldr	r3, [sp, #56]	; 0x38
   12e24:	ldr	r6, [sp, #48]	; 0x30
   12e28:	cmp	r3, #0
   12e2c:	beq	132f0 <close@plt+0x2394>
   12e30:	ldr	r3, [sp, #40]	; 0x28
   12e34:	cmp	r3, #0
   12e38:	bne	13924 <close@plt+0x29c8>
   12e3c:	ldr	r3, [sp, #36]	; 0x24
   12e40:	ldr	r2, [sp, #52]	; 0x34
   12e44:	eor	r3, r3, #1
   12e48:	ands	r3, r2, r3
   12e4c:	moveq	r2, r8
   12e50:	beq	12e88 <close@plt+0x1f2c>
   12e54:	cmp	fp, r8
   12e58:	movhi	r2, #39	; 0x27
   12e5c:	strbhi	r2, [r9, r8]
   12e60:	add	r2, r8, #1
   12e64:	cmp	fp, r2
   12e68:	movhi	r1, #36	; 0x24
   12e6c:	strbhi	r1, [r9, r2]
   12e70:	add	r2, r8, #2
   12e74:	cmp	fp, r2
   12e78:	movhi	r1, #39	; 0x27
   12e7c:	strbhi	r1, [r9, r2]
   12e80:	add	r2, r8, #3
   12e84:	str	r3, [sp, #36]	; 0x24
   12e88:	cmp	fp, r2
   12e8c:	movhi	r3, #92	; 0x5c
   12e90:	strbhi	r3, [r9, r2]
   12e94:	ldr	r3, [sp, #92]	; 0x5c
   12e98:	add	r8, r2, #1
   12e9c:	cmp	r3, #0
   12ea0:	beq	13824 <close@plt+0x28c8>
   12ea4:	ldr	r1, [sp, #24]
   12ea8:	add	r3, sl, #1
   12eac:	cmp	r1, r3
   12eb0:	bls	12ee8 <close@plt+0x1f8c>
   12eb4:	ldr	r1, [sp, #44]	; 0x2c
   12eb8:	ldrb	r3, [r1, r3]
   12ebc:	sub	r3, r3, #48	; 0x30
   12ec0:	cmp	r3, #9
   12ec4:	bhi	12ee8 <close@plt+0x1f8c>
   12ec8:	cmp	fp, r8
   12ecc:	movhi	r3, #48	; 0x30
   12ed0:	strbhi	r3, [r9, r8]
   12ed4:	add	r3, r2, #2
   12ed8:	cmp	fp, r3
   12edc:	add	r8, r2, #3
   12ee0:	movhi	r1, #48	; 0x30
   12ee4:	strbhi	r1, [r9, r3]
   12ee8:	ldr	r3, [sp, #40]	; 0x28
   12eec:	ldr	r1, [sp, #52]	; 0x34
   12ef0:	mov	r7, r3
   12ef4:	str	r3, [sp, #32]
   12ef8:	mov	r4, #48	; 0x30
   12efc:	b	12b4c <close@plt+0x1bf0>
   12f00:	ldr	r6, [sp, #48]	; 0x30
   12f04:	cmp	sl, #0
   12f08:	streq	r7, [sp, #32]
   12f0c:	beq	12f2c <close@plt+0x1fd0>
   12f10:	mov	r3, #0
   12f14:	ldr	r1, [sp, #52]	; 0x34
   12f18:	str	r3, [sp, #32]
   12f1c:	b	12b4c <close@plt+0x1bf0>
   12f20:	ldr	r6, [sp, #48]	; 0x30
   12f24:	mov	r3, #0
   12f28:	str	r3, [sp, #32]
   12f2c:	ldr	r3, [sp, #64]	; 0x40
   12f30:	cmp	r3, #0
   12f34:	bne	136b0 <close@plt+0x2754>
   12f38:	ldr	r1, [sp, #52]	; 0x34
   12f3c:	b	12b4c <close@plt+0x1bf0>
   12f40:	ldr	r3, [sp, #48]	; 0x30
   12f44:	mov	r6, r3
   12f48:	str	r3, [sp, #32]
   12f4c:	b	12f2c <close@plt+0x1fd0>
   12f50:	ldr	r6, [sp, #48]	; 0x30
   12f54:	mov	r4, #13
   12f58:	mov	r3, #114	; 0x72
   12f5c:	b	12dc0 <close@plt+0x1e64>
   12f60:	ldr	r3, [sp, #44]	; 0x2c
   12f64:	add	r5, r3, sl
   12f68:	ldrb	r4, [r5]
   12f6c:	cmp	r4, #126	; 0x7e
   12f70:	ldrls	pc, [pc, r4, lsl #2]
   12f74:	b	13310 <close@plt+0x23b4>
   12f78:	andeq	r3, r1, r0, ror #5
   12f7c:	andeq	r3, r1, r0, lsl r3
   12f80:	andeq	r3, r1, r0, lsl r3
   12f84:	andeq	r3, r1, r0, lsl r3
   12f88:	andeq	r3, r1, r0, lsl r3
   12f8c:	andeq	r3, r1, r0, lsl r3
   12f90:	andeq	r3, r1, r0, lsl r3
   12f94:	ldrdeq	r3, [r1], -r8
   12f98:	ldrdeq	r3, [r1], -r0
   12f9c:	andeq	r3, r1, r4, asr #5
   12fa0:			; <UNDEFINED> instruction: 0x000132bc
   12fa4:			; <UNDEFINED> instruction: 0x000132b4
   12fa8:	andeq	r3, r1, ip, lsr #5
   12fac:	andeq	r3, r1, r4, lsr #5
   12fb0:	andeq	r3, r1, r0, lsl r3
   12fb4:	andeq	r3, r1, r0, lsl r3
   12fb8:	andeq	r3, r1, r0, lsl r3
   12fbc:	andeq	r3, r1, r0, lsl r3
   12fc0:	andeq	r3, r1, r0, lsl r3
   12fc4:	andeq	r3, r1, r0, lsl r3
   12fc8:	andeq	r3, r1, r0, lsl r3
   12fcc:	andeq	r3, r1, r0, lsl r3
   12fd0:	andeq	r3, r1, r0, lsl r3
   12fd4:	andeq	r3, r1, r0, lsl r3
   12fd8:	andeq	r3, r1, r0, lsl r3
   12fdc:	andeq	r3, r1, r0, lsl r3
   12fe0:	andeq	r3, r1, r0, lsl r3
   12fe4:	andeq	r3, r1, r0, lsl r3
   12fe8:	andeq	r3, r1, r0, lsl r3
   12fec:	andeq	r3, r1, r0, lsl r3
   12ff0:	andeq	r3, r1, r0, lsl r3
   12ff4:	andeq	r3, r1, r0, lsl r3
   12ff8:	muleq	r1, r8, r2
   12ffc:	muleq	r1, r0, r2
   13000:	muleq	r1, r0, r2
   13004:	andeq	r3, r1, r8, lsl #5
   13008:	muleq	r1, r0, r2
   1300c:	andeq	r3, r1, r0, lsl #5
   13010:	muleq	r1, r0, r2
   13014:	strdeq	r3, [r1], -r4
   13018:	muleq	r1, r0, r2
   1301c:	muleq	r1, r0, r2
   13020:	muleq	r1, r0, r2
   13024:	andeq	r3, r1, r0, lsl #5
   13028:	andeq	r3, r1, r0, lsl #5
   1302c:	andeq	r3, r1, r0, lsl #5
   13030:	andeq	r3, r1, r0, lsl #5
   13034:	andeq	r3, r1, r0, lsl #5
   13038:	andeq	r3, r1, r0, lsl #5
   1303c:	andeq	r3, r1, r0, lsl #5
   13040:	andeq	r3, r1, r0, lsl #5
   13044:	andeq	r3, r1, r0, lsl #5
   13048:	andeq	r3, r1, r0, lsl #5
   1304c:	andeq	r3, r1, r0, lsl #5
   13050:	andeq	r3, r1, r0, lsl #5
   13054:	andeq	r3, r1, r0, lsl #5
   13058:	andeq	r3, r1, r0, lsl #5
   1305c:	andeq	r3, r1, r0, lsl #5
   13060:	andeq	r3, r1, r0, lsl #5
   13064:	muleq	r1, r0, r2
   13068:	muleq	r1, r0, r2
   1306c:	muleq	r1, r0, r2
   13070:	muleq	r1, r0, r2
   13074:	andeq	r3, r1, r8, asr #3
   13078:	andeq	r3, r1, r0, lsl r3
   1307c:	andeq	r3, r1, r0, lsl #5
   13080:	andeq	r3, r1, r0, lsl #5
   13084:	andeq	r3, r1, r0, lsl #5
   13088:	andeq	r3, r1, r0, lsl #5
   1308c:	andeq	r3, r1, r0, lsl #5
   13090:	andeq	r3, r1, r0, lsl #5
   13094:	andeq	r3, r1, r0, lsl #5
   13098:	andeq	r3, r1, r0, lsl #5
   1309c:	andeq	r3, r1, r0, lsl #5
   130a0:	andeq	r3, r1, r0, lsl #5
   130a4:	andeq	r3, r1, r0, lsl #5
   130a8:	andeq	r3, r1, r0, lsl #5
   130ac:	andeq	r3, r1, r0, lsl #5
   130b0:	andeq	r3, r1, r0, lsl #5
   130b4:	andeq	r3, r1, r0, lsl #5
   130b8:	andeq	r3, r1, r0, lsl #5
   130bc:	andeq	r3, r1, r0, lsl #5
   130c0:	andeq	r3, r1, r0, lsl #5
   130c4:	andeq	r3, r1, r0, lsl #5
   130c8:	andeq	r3, r1, r0, lsl #5
   130cc:	andeq	r3, r1, r0, lsl #5
   130d0:	andeq	r3, r1, r0, lsl #5
   130d4:	andeq	r3, r1, r0, lsl #5
   130d8:	andeq	r3, r1, r0, lsl #5
   130dc:	andeq	r3, r1, r0, lsl #5
   130e0:	andeq	r3, r1, r0, lsl #5
   130e4:	muleq	r1, r0, r2
   130e8:	muleq	r1, r8, r1
   130ec:	andeq	r3, r1, r0, lsl #5
   130f0:	muleq	r1, r0, r2
   130f4:	andeq	r3, r1, r0, lsl #5
   130f8:	muleq	r1, r0, r2
   130fc:	andeq	r3, r1, r0, lsl #5
   13100:	andeq	r3, r1, r0, lsl #5
   13104:	andeq	r3, r1, r0, lsl #5
   13108:	andeq	r3, r1, r0, lsl #5
   1310c:	andeq	r3, r1, r0, lsl #5
   13110:	andeq	r3, r1, r0, lsl #5
   13114:	andeq	r3, r1, r0, lsl #5
   13118:	andeq	r3, r1, r0, lsl #5
   1311c:	andeq	r3, r1, r0, lsl #5
   13120:	andeq	r3, r1, r0, lsl #5
   13124:	andeq	r3, r1, r0, lsl #5
   13128:	andeq	r3, r1, r0, lsl #5
   1312c:	andeq	r3, r1, r0, lsl #5
   13130:	andeq	r3, r1, r0, lsl #5
   13134:	andeq	r3, r1, r0, lsl #5
   13138:	andeq	r3, r1, r0, lsl #5
   1313c:	andeq	r3, r1, r0, lsl #5
   13140:	andeq	r3, r1, r0, lsl #5
   13144:	andeq	r3, r1, r0, lsl #5
   13148:	andeq	r3, r1, r0, lsl #5
   1314c:	andeq	r3, r1, r0, lsl #5
   13150:	andeq	r3, r1, r0, lsl #5
   13154:	andeq	r3, r1, r0, lsl #5
   13158:	andeq	r3, r1, r0, lsl #5
   1315c:	andeq	r3, r1, r0, lsl #5
   13160:	andeq	r3, r1, r0, lsl #5
   13164:	andeq	r3, r1, r4, ror r1
   13168:	muleq	r1, r0, r2
   1316c:	andeq	r3, r1, r4, ror r1
   13170:	andeq	r3, r1, r8, lsl #5
   13174:	ldr	r3, [sp, #24]
   13178:	mov	r6, #0
   1317c:	cmn	r3, #1
   13180:	bne	12b2c <close@plt+0x1bd0>
   13184:	ldr	r3, [sp, #44]	; 0x2c
   13188:	ldrb	r3, [r3, #1]
   1318c:	adds	r3, r3, #0
   13190:	movne	r3, #1
   13194:	b	12b34 <close@plt+0x1bd8>
   13198:	ldr	r3, [sp, #176]	; 0xb0
   1319c:	mov	r6, #0
   131a0:	cmp	r3, #2
   131a4:	bne	12c74 <close@plt+0x1d18>
   131a8:	ldr	r3, [sp, #64]	; 0x40
   131ac:	cmp	r3, #0
   131b0:	bne	139e8 <close@plt+0x2a8c>
   131b4:	add	sl, sl, #1
   131b8:	ldr	r6, [sp, #36]	; 0x24
   131bc:	str	r3, [sp, #32]
   131c0:	mov	r4, #92	; 0x5c
   131c4:	b	12b80 <close@plt+0x1c24>
   131c8:	ldr	r3, [sp, #176]	; 0xb0
   131cc:	mov	r6, #0
   131d0:	cmp	r3, #2
   131d4:	bne	12ca8 <close@plt+0x1d4c>
   131d8:	ldr	r3, [sp, #40]	; 0x28
   131dc:	cmp	r3, #0
   131e0:	bne	134c4 <close@plt+0x2568>
   131e4:	mov	r1, r7
   131e8:	str	r3, [sp, #32]
   131ec:	mov	r4, #63	; 0x3f
   131f0:	b	12b4c <close@plt+0x1bf0>
   131f4:	ldr	r3, [sp, #176]	; 0xb0
   131f8:	mov	r6, #0
   131fc:	cmp	r3, #2
   13200:	bne	12cf8 <close@plt+0x1d9c>
   13204:	ldr	r3, [sp, #64]	; 0x40
   13208:	cmp	r3, #0
   1320c:	bne	139e8 <close@plt+0x2a8c>
   13210:	ldr	r2, [sp, #84]	; 0x54
   13214:	adds	r3, fp, #0
   13218:	movne	r3, #1
   1321c:	cmp	r2, #0
   13220:	movne	r3, #0
   13224:	cmp	r3, #0
   13228:	strne	fp, [sp, #84]	; 0x54
   1322c:	movne	fp, #0
   13230:	bne	13260 <close@plt+0x2304>
   13234:	cmp	fp, r8
   13238:	movhi	r3, #39	; 0x27
   1323c:	strbhi	r3, [r9, r8]
   13240:	add	r3, r8, #1
   13244:	cmp	fp, r3
   13248:	movhi	r2, #92	; 0x5c
   1324c:	strbhi	r2, [r9, r3]
   13250:	add	r3, r8, #2
   13254:	cmp	fp, r3
   13258:	movhi	r2, #39	; 0x27
   1325c:	strbhi	r2, [r9, r3]
   13260:	ldr	r3, [sp, #64]	; 0x40
   13264:	add	r8, r8, #3
   13268:	mov	r1, r7
   1326c:	str	r7, [sp, #32]
   13270:	str	r7, [sp, #76]	; 0x4c
   13274:	str	r3, [sp, #36]	; 0x24
   13278:	mov	r4, #39	; 0x27
   1327c:	b	12b4c <close@plt+0x1bf0>
   13280:	mov	r6, #0
   13284:	b	12d10 <close@plt+0x1db4>
   13288:	mov	r6, #0
   1328c:	b	12f04 <close@plt+0x1fa8>
   13290:	mov	r6, #0
   13294:	b	12f24 <close@plt+0x1fc8>
   13298:	str	r7, [sp, #32]
   1329c:	mov	r6, #0
   132a0:	b	12f2c <close@plt+0x1fd0>
   132a4:	mov	r6, #0
   132a8:	b	12f54 <close@plt+0x1ff8>
   132ac:	mov	r6, #0
   132b0:	b	12d20 <close@plt+0x1dc4>
   132b4:	mov	r6, #0
   132b8:	b	12de8 <close@plt+0x1e8c>
   132bc:	mov	r6, #0
   132c0:	b	12db8 <close@plt+0x1e5c>
   132c4:	mov	r6, #0
   132c8:	mov	r3, #116	; 0x74
   132cc:	b	12dc0 <close@plt+0x1e64>
   132d0:	mov	r6, #0
   132d4:	b	12dfc <close@plt+0x1ea0>
   132d8:	mov	r6, #0
   132dc:	b	12e10 <close@plt+0x1eb4>
   132e0:	ldr	r3, [sp, #56]	; 0x38
   132e4:	mov	r6, #0
   132e8:	cmp	r3, #0
   132ec:	bne	12e30 <close@plt+0x1ed4>
   132f0:	ldr	r3, [sp, #96]	; 0x60
   132f4:	cmp	r3, #0
   132f8:	addne	sl, sl, #1
   132fc:	bne	126a4 <close@plt+0x1748>
   13300:	ldr	r1, [sp, #52]	; 0x34
   13304:	str	r3, [sp, #32]
   13308:	mov	r4, r3
   1330c:	b	12b4c <close@plt+0x1bf0>
   13310:	mov	r6, #0
   13314:	ldr	r3, [sp, #80]	; 0x50
   13318:	cmp	r3, #1
   1331c:	bne	1350c <close@plt+0x25b0>
   13320:	bl	10e6c <__ctype_b_loc@plt>
   13324:	ldr	r2, [sp, #80]	; 0x50
   13328:	sxth	r3, r4
   1332c:	mov	r1, r2
   13330:	lsl	r3, r3, #1
   13334:	ldr	r2, [r0]
   13338:	ldrh	r3, [r2, r3]
   1333c:	and	r3, r3, #16384	; 0x4000
   13340:	cmp	r3, #0
   13344:	movne	r3, #1
   13348:	moveq	r3, #0
   1334c:	str	r3, [sp, #32]
   13350:	moveq	r3, #1
   13354:	movne	r3, #0
   13358:	ldr	r2, [sp, #56]	; 0x38
   1335c:	and	r3, r3, r2
   13360:	ands	r3, r3, #255	; 0xff
   13364:	beq	12f38 <close@plt+0x1fdc>
   13368:	add	r1, sl, r1
   1336c:	mov	r0, #0
   13370:	ldr	r7, [sp, #40]	; 0x28
   13374:	ldr	r2, [sp, #36]	; 0x24
   13378:	ldr	lr, [sp, #52]	; 0x34
   1337c:	b	1342c <close@plt+0x24d0>
   13380:	cmp	r7, #0
   13384:	bne	13780 <close@plt+0x2824>
   13388:	eor	r0, r2, #1
   1338c:	ands	r0, lr, r0
   13390:	beq	133c8 <close@plt+0x246c>
   13394:	cmp	fp, r8
   13398:	movhi	r2, #39	; 0x27
   1339c:	strbhi	r2, [r9, r8]
   133a0:	add	r2, r8, #1
   133a4:	cmp	fp, r2
   133a8:	movhi	ip, #36	; 0x24
   133ac:	strbhi	ip, [r9, r2]
   133b0:	add	r2, r8, #2
   133b4:	cmp	fp, r2
   133b8:	movhi	ip, #39	; 0x27
   133bc:	strbhi	ip, [r9, r2]
   133c0:	add	r8, r8, #3
   133c4:	mov	r2, r0
   133c8:	cmp	fp, r8
   133cc:	movhi	r0, #92	; 0x5c
   133d0:	strbhi	r0, [r9, r8]
   133d4:	add	r0, r8, #1
   133d8:	cmp	fp, r0
   133dc:	lsrhi	ip, r4, #6
   133e0:	addhi	ip, ip, #48	; 0x30
   133e4:	strbhi	ip, [r9, r0]
   133e8:	add	ip, r8, #2
   133ec:	cmp	fp, ip
   133f0:	lsrhi	r0, r4, #3
   133f4:	andhi	r0, r0, #7
   133f8:	addhi	r0, r0, #48	; 0x30
   133fc:	add	sl, sl, #1
   13400:	strbhi	r0, [r9, ip]
   13404:	and	r4, r4, #7
   13408:	cmp	sl, r1
   1340c:	add	r4, r4, #48	; 0x30
   13410:	add	r8, r8, #3
   13414:	bcs	13798 <close@plt+0x283c>
   13418:	mov	r0, r3
   1341c:	cmp	fp, r8
   13420:	strbhi	r4, [r9, r8]
   13424:	ldrb	r4, [r5, #1]!
   13428:	add	r8, r8, #1
   1342c:	cmp	r3, #0
   13430:	bne	13380 <close@plt+0x2424>
   13434:	cmp	r6, #0
   13438:	bne	134dc <close@plt+0x2580>
   1343c:	eor	r6, r0, #1
   13440:	and	r6, r6, r2
   13444:	add	sl, sl, #1
   13448:	cmp	r1, sl
   1344c:	uxtb	r6, r6
   13450:	bls	13504 <close@plt+0x25a8>
   13454:	cmp	r6, #0
   13458:	beq	1341c <close@plt+0x24c0>
   1345c:	cmp	fp, r8
   13460:	movhi	r2, #39	; 0x27
   13464:	strbhi	r2, [r9, r8]
   13468:	add	r2, r8, #1
   1346c:	cmp	fp, r2
   13470:	movhi	ip, #39	; 0x27
   13474:	strbhi	ip, [r9, r2]
   13478:	add	r8, r8, #2
   1347c:	mov	r6, r3
   13480:	mov	r2, r3
   13484:	b	1341c <close@plt+0x24c0>
   13488:	ldr	r3, [sp, #184]	; 0xb8
   1348c:	cmp	r3, #0
   13490:	beq	12b68 <close@plt+0x1c0c>
   13494:	lsr	r2, r4, #5
   13498:	mov	r0, r3
   1349c:	uxtb	r2, r2
   134a0:	and	r3, r4, #31
   134a4:	ldr	r2, [r0, r2, lsl #2]
   134a8:	lsr	r3, r2, r3
   134ac:	tst	r3, #1
   134b0:	beq	12b68 <close@plt+0x1c0c>
   134b4:	ldr	r3, [sp, #40]	; 0x28
   134b8:	cmp	r3, #0
   134bc:	beq	12d54 <close@plt+0x1df8>
   134c0:	mov	r3, r1
   134c4:	str	r3, [sp, #64]	; 0x40
   134c8:	mov	sl, r9
   134cc:	ldr	r3, [sp, #56]	; 0x38
   134d0:	mov	r9, fp
   134d4:	ldr	r2, [sp, #64]	; 0x40
   134d8:	b	136c8 <close@plt+0x276c>
   134dc:	cmp	fp, r8
   134e0:	eor	r6, r0, #1
   134e4:	movhi	ip, #92	; 0x5c
   134e8:	and	r6, r6, r2
   134ec:	add	sl, sl, #1
   134f0:	strbhi	ip, [r9, r8]
   134f4:	cmp	r1, sl
   134f8:	add	r8, r8, #1
   134fc:	uxtb	r6, r6
   13500:	bhi	13454 <close@plt+0x24f8>
   13504:	str	r2, [sp, #36]	; 0x24
   13508:	b	12b80 <close@plt+0x1c24>
   1350c:	ldr	r3, [sp, #24]
   13510:	cmn	r3, #1
   13514:	mov	r3, #0
   13518:	str	r3, [sp, #128]	; 0x80
   1351c:	str	r3, [sp, #132]	; 0x84
   13520:	beq	13814 <close@plt+0x28b8>
   13524:	mov	r2, r7
   13528:	mov	r3, #0
   1352c:	str	r7, [sp, #104]	; 0x68
   13530:	str	r5, [sp, #116]	; 0x74
   13534:	mov	r7, r3
   13538:	mov	r5, r2
   1353c:	str	r4, [sp, #32]
   13540:	str	r6, [sp, #108]	; 0x6c
   13544:	str	r8, [sp, #112]	; 0x70
   13548:	ldr	r3, [sp, #44]	; 0x2c
   1354c:	add	r6, sl, r7
   13550:	add	r4, r3, r6
   13554:	ldr	r3, [sp, #24]
   13558:	mov	r1, r4
   1355c:	sub	r2, r3, r6
   13560:	add	r0, sp, #124	; 0x7c
   13564:	add	r3, sp, #128	; 0x80
   13568:	bl	178b8 <close@plt+0x695c>
   1356c:	subs	r8, r0, #0
   13570:	beq	138f8 <close@plt+0x299c>
   13574:	cmn	r8, #1
   13578:	beq	138d0 <close@plt+0x2974>
   1357c:	cmn	r8, #2
   13580:	beq	13868 <close@plt+0x290c>
   13584:	ldr	r3, [sp, #64]	; 0x40
   13588:	cmp	r3, #0
   1358c:	beq	1364c <close@plt+0x26f0>
   13590:	cmp	r8, #1
   13594:	beq	1364c <close@plt+0x26f0>
   13598:	sub	r3, r8, #1
   1359c:	add	r6, r3, r6
   135a0:	ldr	r3, [sp, #44]	; 0x2c
   135a4:	add	r6, r3, r6
   135a8:	ldrb	r3, [r4, #1]!
   135ac:	sub	r3, r3, #91	; 0x5b
   135b0:	cmp	r3, #33	; 0x21
   135b4:	ldrls	pc, [pc, r3, lsl #2]
   135b8:	b	13644 <close@plt+0x26e8>
   135bc:			; <UNDEFINED> instruction: 0x000136b0
   135c0:			; <UNDEFINED> instruction: 0x000136b0
   135c4:	andeq	r3, r1, r4, asr #12
   135c8:			; <UNDEFINED> instruction: 0x000136b0
   135cc:	andeq	r3, r1, r4, asr #12
   135d0:			; <UNDEFINED> instruction: 0x000136b0
   135d4:	andeq	r3, r1, r4, asr #12
   135d8:	andeq	r3, r1, r4, asr #12
   135dc:	andeq	r3, r1, r4, asr #12
   135e0:	andeq	r3, r1, r4, asr #12
   135e4:	andeq	r3, r1, r4, asr #12
   135e8:	andeq	r3, r1, r4, asr #12
   135ec:	andeq	r3, r1, r4, asr #12
   135f0:	andeq	r3, r1, r4, asr #12
   135f4:	andeq	r3, r1, r4, asr #12
   135f8:	andeq	r3, r1, r4, asr #12
   135fc:	andeq	r3, r1, r4, asr #12
   13600:	andeq	r3, r1, r4, asr #12
   13604:	andeq	r3, r1, r4, asr #12
   13608:	andeq	r3, r1, r4, asr #12
   1360c:	andeq	r3, r1, r4, asr #12
   13610:	andeq	r3, r1, r4, asr #12
   13614:	andeq	r3, r1, r4, asr #12
   13618:	andeq	r3, r1, r4, asr #12
   1361c:	andeq	r3, r1, r4, asr #12
   13620:	andeq	r3, r1, r4, asr #12
   13624:	andeq	r3, r1, r4, asr #12
   13628:	andeq	r3, r1, r4, asr #12
   1362c:	andeq	r3, r1, r4, asr #12
   13630:	andeq	r3, r1, r4, asr #12
   13634:	andeq	r3, r1, r4, asr #12
   13638:	andeq	r3, r1, r4, asr #12
   1363c:	andeq	r3, r1, r4, asr #12
   13640:			; <UNDEFINED> instruction: 0x000136b0
   13644:	cmp	r6, r4
   13648:	bne	135a8 <close@plt+0x264c>
   1364c:	ldr	r0, [sp, #124]	; 0x7c
   13650:	bl	10dac <iswprint@plt>
   13654:	add	r7, r7, r8
   13658:	cmp	r0, #0
   1365c:	add	r0, sp, #128	; 0x80
   13660:	moveq	r5, #0
   13664:	bl	10d58 <mbsinit@plt>
   13668:	cmp	r0, #0
   1366c:	beq	13548 <close@plt+0x25ec>
   13670:	ldr	r4, [sp, #32]
   13674:	str	r5, [sp, #32]
   13678:	ldr	r3, [sp, #32]
   1367c:	mov	r1, r7
   13680:	eor	r3, r3, #1
   13684:	ldr	r7, [sp, #104]	; 0x68
   13688:	ldr	r6, [sp, #108]	; 0x6c
   1368c:	ldr	r8, [sp, #112]	; 0x70
   13690:	ldr	r5, [sp, #116]	; 0x74
   13694:	uxtb	r3, r3
   13698:	cmp	r1, #1
   1369c:	bls	13358 <close@plt+0x23fc>
   136a0:	ldr	r2, [sp, #56]	; 0x38
   136a4:	and	r3, r3, r2
   136a8:	uxtb	r3, r3
   136ac:	b	13368 <close@plt+0x240c>
   136b0:	mov	r3, #2
   136b4:	str	r3, [sp, #176]	; 0xb0
   136b8:	ldr	r2, [sp, #64]	; 0x40
   136bc:	ldr	r3, [sp, #56]	; 0x38
   136c0:	mov	sl, r9
   136c4:	mov	r9, fp
   136c8:	and	r3, r3, r2
   136cc:	tst	r3, #255	; 0xff
   136d0:	ldr	r3, [sp, #176]	; 0xb0
   136d4:	movne	r3, #4
   136d8:	str	r3, [sp, #176]	; 0xb0
   136dc:	ldr	r3, [sp, #180]	; 0xb4
   136e0:	mov	ip, #0
   136e4:	bic	r3, r3, #2
   136e8:	str	r3, [sp, #4]
   136ec:	ldr	r3, [sp, #192]	; 0xc0
   136f0:	ldr	r2, [sp, #44]	; 0x2c
   136f4:	str	r3, [sp, #16]
   136f8:	ldr	r3, [sp, #188]	; 0xbc
   136fc:	mov	r1, r9
   13700:	str	r3, [sp, #12]
   13704:	ldr	r3, [sp, #176]	; 0xb0
   13708:	mov	r0, sl
   1370c:	str	r3, [sp]
   13710:	str	ip, [sp, #8]
   13714:	ldr	r3, [sp, #24]
   13718:	bl	12578 <close@plt+0x161c>
   1371c:	mov	fp, r0
   13720:	mov	r0, fp
   13724:	add	sp, sp, #140	; 0x8c
   13728:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1372c:	mov	r4, #92	; 0x5c
   13730:	mov	r1, #0
   13734:	mov	r3, r4
   13738:	b	12d2c <close@plt+0x1dd0>
   1373c:	mov	r3, #0
   13740:	ldr	r1, [sp, #52]	; 0x34
   13744:	str	r3, [sp, #32]
   13748:	mov	r4, #63	; 0x3f
   1374c:	b	12b4c <close@plt+0x1bf0>
   13750:	cmp	fp, #0
   13754:	beq	137b0 <close@plt+0x2854>
   13758:	mov	r3, #39	; 0x27
   1375c:	strb	r3, [r9]
   13760:	mov	r3, #0
   13764:	str	r3, [sp, #40]	; 0x28
   13768:	mov	r3, #1
   1376c:	str	r3, [sp, #68]	; 0x44
   13770:	ldr	r3, [pc, #448]	; 13938 <close@plt+0x29dc>
   13774:	mov	r8, #1
   13778:	str	r3, [sp, #72]	; 0x48
   1377c:	b	12960 <close@plt+0x1a04>
   13780:	ldr	r3, [sp, #40]	; 0x28
   13784:	mov	sl, r9
   13788:	str	r3, [sp, #56]	; 0x38
   1378c:	mov	r9, fp
   13790:	ldr	r2, [sp, #64]	; 0x40
   13794:	b	136c8 <close@plt+0x276c>
   13798:	str	r2, [sp, #36]	; 0x24
   1379c:	b	12bb0 <close@plt+0x1c54>
   137a0:	mov	r1, #0
   137a4:	str	r3, [sp, #32]
   137a8:	mov	r4, #63	; 0x3f
   137ac:	b	12b4c <close@plt+0x1bf0>
   137b0:	ldr	r3, [pc, #384]	; 13938 <close@plt+0x29dc>
   137b4:	str	r3, [sp, #72]	; 0x48
   137b8:	mov	r3, #0
   137bc:	str	r3, [sp, #40]	; 0x28
   137c0:	mov	r3, #1
   137c4:	str	r3, [sp, #68]	; 0x44
   137c8:	mov	r8, r3
   137cc:	b	12960 <close@plt+0x1a04>
   137d0:	bl	10f50 <abort@plt>
   137d4:	cmp	fp, #0
   137d8:	beq	13838 <close@plt+0x28dc>
   137dc:	mov	r2, #1
   137e0:	mov	r3, #34	; 0x22
   137e4:	strb	r3, [r9]
   137e8:	mov	r8, r2
   137ec:	mov	r3, r2
   137f0:	str	r2, [sp, #68]	; 0x44
   137f4:	str	r3, [sp, #56]	; 0x38
   137f8:	ldr	r3, [pc, #316]	; 1393c <close@plt+0x29e0>
   137fc:	ldr	r1, [sp, #56]	; 0x38
   13800:	str	r3, [sp, #72]	; 0x48
   13804:	ldr	r2, [sp, #176]	; 0xb0
   13808:	ldr	ip, [sp, #40]	; 0x28
   1380c:	ldr	lr, [sp, #176]	; 0xb0
   13810:	b	12644 <close@plt+0x16e8>
   13814:	ldr	r0, [sp, #44]	; 0x2c
   13818:	bl	10e84 <strlen@plt>
   1381c:	str	r0, [sp, #24]
   13820:	b	13524 <close@plt+0x25c8>
   13824:	mov	r7, #0
   13828:	ldr	r1, [sp, #52]	; 0x34
   1382c:	str	r3, [sp, #32]
   13830:	mov	r4, #48	; 0x30
   13834:	b	12b4c <close@plt+0x1bf0>
   13838:	mov	r3, #1
   1383c:	str	r3, [sp, #68]	; 0x44
   13840:	mov	r8, r3
   13844:	b	137f4 <close@plt+0x2898>
   13848:	mov	r3, #2
   1384c:	mov	sl, r9
   13850:	str	r3, [sp, #176]	; 0xb0
   13854:	mov	r9, fp
   13858:	ldr	r3, [sp, #56]	; 0x38
   1385c:	b	136c8 <close@plt+0x276c>
   13860:	ldr	r6, [sp, #48]	; 0x30
   13864:	b	13314 <close@plt+0x23b8>
   13868:	ldr	r0, [sp, #24]
   1386c:	mov	ip, r6
   13870:	cmp	r0, ip
   13874:	mov	r1, r7
   13878:	mov	r2, r4
   1387c:	ldr	r7, [sp, #104]	; 0x68
   13880:	ldr	r4, [sp, #32]
   13884:	ldr	r6, [sp, #108]	; 0x6c
   13888:	ldr	r8, [sp, #112]	; 0x70
   1388c:	ldr	r5, [sp, #116]	; 0x74
   13890:	bls	138c0 <close@plt+0x2964>
   13894:	ldrb	r3, [r2]
   13898:	cmp	r3, #0
   1389c:	bne	138b0 <close@plt+0x2954>
   138a0:	b	139d0 <close@plt+0x2a74>
   138a4:	ldrb	r3, [r2, #1]!
   138a8:	cmp	r3, #0
   138ac:	beq	139d0 <close@plt+0x2a74>
   138b0:	add	r1, r1, #1
   138b4:	add	r3, sl, r1
   138b8:	cmp	r0, r3
   138bc:	bhi	138a4 <close@plt+0x2948>
   138c0:	mov	r2, #0
   138c4:	mov	r3, r7
   138c8:	str	r2, [sp, #32]
   138cc:	b	13698 <close@plt+0x273c>
   138d0:	mov	r1, r7
   138d4:	ldr	r7, [sp, #104]	; 0x68
   138d8:	mov	r2, #0
   138dc:	ldr	r4, [sp, #32]
   138e0:	ldr	r6, [sp, #108]	; 0x6c
   138e4:	ldr	r8, [sp, #112]	; 0x70
   138e8:	ldr	r5, [sp, #116]	; 0x74
   138ec:	mov	r3, r7
   138f0:	str	r2, [sp, #32]
   138f4:	b	13698 <close@plt+0x273c>
   138f8:	mov	r3, r5
   138fc:	eor	r3, r3, #1
   13900:	ldr	r4, [sp, #32]
   13904:	mov	r1, r7
   13908:	str	r5, [sp, #32]
   1390c:	ldr	r7, [sp, #104]	; 0x68
   13910:	ldr	r6, [sp, #108]	; 0x6c
   13914:	ldr	r8, [sp, #112]	; 0x70
   13918:	ldr	r5, [sp, #116]	; 0x74
   1391c:	uxtb	r3, r3
   13920:	b	13698 <close@plt+0x273c>
   13924:	mov	sl, r9
   13928:	str	r3, [sp, #56]	; 0x38
   1392c:	mov	r9, fp
   13930:	ldr	r2, [sp, #64]	; 0x40
   13934:	b	136c8 <close@plt+0x276c>
   13938:	andeq	r8, r1, r0, lsr #14
   1393c:	andeq	r8, r1, ip, lsl r7
   13940:	andeq	r8, r1, r4, lsr #14
   13944:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   13948:	ldr	r2, [sp, #44]	; 0x2c
   1394c:	ldrb	r1, [r2, r3]
   13950:	sub	r2, r1, #33	; 0x21
   13954:	uxtb	r2, r2
   13958:	cmp	r2, #29
   1395c:	bhi	139dc <close@plt+0x2a80>
   13960:	ldr	r0, [pc, #-36]	; 13944 <close@plt+0x29e8>
   13964:	mov	ip, #1
   13968:	ands	r2, r0, ip, lsl r2
   1396c:	beq	139fc <close@plt+0x2aa0>
   13970:	ldr	r2, [sp, #40]	; 0x28
   13974:	cmp	r2, #0
   13978:	bne	13af0 <close@plt+0x2b94>
   1397c:	add	r2, r8, #1
   13980:	cmp	fp, r8
   13984:	strbhi	r4, [r9, r8]
   13988:	cmp	fp, r2
   1398c:	movhi	r0, #34	; 0x22
   13990:	strbhi	r0, [r9, r2]
   13994:	add	r2, r8, #2
   13998:	cmp	fp, r2
   1399c:	movhi	r0, #34	; 0x22
   139a0:	strbhi	r0, [r9, r2]
   139a4:	add	r2, r8, #3
   139a8:	cmp	fp, r2
   139ac:	mov	sl, r3
   139b0:	ldr	r3, [sp, #40]	; 0x28
   139b4:	movhi	r0, #63	; 0x3f
   139b8:	mov	r4, r1
   139bc:	strbhi	r0, [r9, r2]
   139c0:	add	r8, r8, #4
   139c4:	mov	r1, r3
   139c8:	str	r3, [sp, #32]
   139cc:	b	12b4c <close@plt+0x1bf0>
   139d0:	str	r3, [sp, #32]
   139d4:	mov	r3, r7
   139d8:	b	13698 <close@plt+0x273c>
   139dc:	mov	r1, #0
   139e0:	str	r1, [sp, #32]
   139e4:	b	12b4c <close@plt+0x1bf0>
   139e8:	mov	sl, r9
   139ec:	ldr	r3, [sp, #56]	; 0x38
   139f0:	mov	r9, fp
   139f4:	ldr	r2, [sp, #64]	; 0x40
   139f8:	b	136c8 <close@plt+0x276c>
   139fc:	str	r2, [sp, #32]
   13a00:	mov	r1, #0
   13a04:	b	12b4c <close@plt+0x1bf0>
   13a08:	ldr	r2, [sp, #76]	; 0x4c
   13a0c:	mov	sl, r9
   13a10:	mov	r9, fp
   13a14:	mov	fp, r8
   13a18:	ldr	r1, [sp, #72]	; 0x48
   13a1c:	cmp	r1, #0
   13a20:	moveq	r3, #0
   13a24:	andne	r3, r2, #1
   13a28:	cmp	r3, #0
   13a2c:	beq	13a58 <close@plt+0x2afc>
   13a30:	ldrb	r3, [r1]
   13a34:	cmp	r3, #0
   13a38:	beq	13a58 <close@plt+0x2afc>
   13a3c:	mov	r2, r1
   13a40:	cmp	r9, fp
   13a44:	strbhi	r3, [sl, fp]
   13a48:	ldrb	r3, [r2, #1]!
   13a4c:	add	fp, fp, #1
   13a50:	cmp	r3, #0
   13a54:	bne	13a40 <close@plt+0x2ae4>
   13a58:	cmp	r9, fp
   13a5c:	movhi	r3, #0
   13a60:	strbhi	r3, [sl, fp]
   13a64:	b	13720 <close@plt+0x27c4>
   13a68:	ldr	r3, [sp, #192]	; 0xc0
   13a6c:	mov	ip, #5
   13a70:	str	r3, [sp, #16]
   13a74:	ldr	r3, [sp, #188]	; 0xbc
   13a78:	ldr	r2, [sp, #44]	; 0x2c
   13a7c:	str	r3, [sp, #12]
   13a80:	ldr	r3, [sp, #184]	; 0xb8
   13a84:	ldr	r1, [sp, #84]	; 0x54
   13a88:	str	r3, [sp, #8]
   13a8c:	ldr	r3, [sp, #180]	; 0xb4
   13a90:	mov	r0, r9
   13a94:	str	r3, [sp, #4]
   13a98:	str	ip, [sp]
   13a9c:	ldr	r3, [sp, #24]
   13aa0:	bl	12578 <close@plt+0x161c>
   13aa4:	mov	fp, r0
   13aa8:	b	13720 <close@plt+0x27c4>
   13aac:	mov	sl, r9
   13ab0:	mov	r9, fp
   13ab4:	mov	fp, r8
   13ab8:	b	13a18 <close@plt+0x2abc>
   13abc:	ldr	r1, [sp, #176]	; 0xb0
   13ac0:	bl	12458 <close@plt+0x14fc>
   13ac4:	str	r0, [sp, #192]	; 0xc0
   13ac8:	b	12a34 <close@plt+0x1ad8>
   13acc:	ldr	r1, [sp, #176]	; 0xb0
   13ad0:	bl	12458 <close@plt+0x14fc>
   13ad4:	str	r0, [sp, #188]	; 0xbc
   13ad8:	b	12a14 <close@plt+0x1ab8>
   13adc:	mov	sl, r9
   13ae0:	mov	r2, r3
   13ae4:	mov	r9, fp
   13ae8:	mov	fp, r8
   13aec:	b	13a18 <close@plt+0x2abc>
   13af0:	mov	sl, r9
   13af4:	mov	r9, fp
   13af8:	b	136dc <close@plt+0x2780>
   13afc:	push	{r4, r5, r6, lr}
   13b00:	mov	r5, r0
   13b04:	bl	10e9c <__errno_location@plt>
   13b08:	cmp	r5, #0
   13b0c:	mov	r1, #48	; 0x30
   13b10:	mov	r4, r0
   13b14:	ldr	r0, [pc, #16]	; 13b2c <close@plt+0x2bd0>
   13b18:	ldr	r6, [r4]
   13b1c:	movne	r0, r5
   13b20:	bl	1747c <close@plt+0x6520>
   13b24:	str	r6, [r4]
   13b28:	pop	{r4, r5, r6, pc}
   13b2c:	muleq	r2, r0, r1
   13b30:	ldr	r3, [pc, #12]	; 13b44 <close@plt+0x2be8>
   13b34:	cmp	r0, #0
   13b38:	moveq	r0, r3
   13b3c:	ldr	r0, [r0]
   13b40:	bx	lr
   13b44:	muleq	r2, r0, r1
   13b48:	ldr	r3, [pc, #12]	; 13b5c <close@plt+0x2c00>
   13b4c:	cmp	r0, #0
   13b50:	moveq	r0, r3
   13b54:	str	r1, [r0]
   13b58:	bx	lr
   13b5c:	muleq	r2, r0, r1
   13b60:	ldr	r3, [pc, #52]	; 13b9c <close@plt+0x2c40>
   13b64:	cmp	r0, #0
   13b68:	moveq	r0, r3
   13b6c:	add	r3, r0, #8
   13b70:	push	{lr}		; (str lr, [sp, #-4]!)
   13b74:	lsr	lr, r1, #5
   13b78:	and	r1, r1, #31
   13b7c:	ldr	ip, [r3, lr, lsl #2]
   13b80:	lsr	r0, ip, r1
   13b84:	eor	r2, r2, r0
   13b88:	and	r2, r2, #1
   13b8c:	and	r0, r0, #1
   13b90:	eor	r1, ip, r2, lsl r1
   13b94:	str	r1, [r3, lr, lsl #2]
   13b98:	pop	{pc}		; (ldr pc, [sp], #4)
   13b9c:	muleq	r2, r0, r1
   13ba0:	ldr	r3, [pc, #16]	; 13bb8 <close@plt+0x2c5c>
   13ba4:	cmp	r0, #0
   13ba8:	movne	r3, r0
   13bac:	ldr	r0, [r3, #4]
   13bb0:	str	r1, [r3, #4]
   13bb4:	bx	lr
   13bb8:	muleq	r2, r0, r1
   13bbc:	ldr	r3, [pc, #44]	; 13bf0 <close@plt+0x2c94>
   13bc0:	cmp	r0, #0
   13bc4:	moveq	r0, r3
   13bc8:	mov	ip, #10
   13bcc:	cmp	r2, #0
   13bd0:	cmpne	r1, #0
   13bd4:	str	ip, [r0]
   13bd8:	beq	13be8 <close@plt+0x2c8c>
   13bdc:	str	r1, [r0, #40]	; 0x28
   13be0:	str	r2, [r0, #44]	; 0x2c
   13be4:	bx	lr
   13be8:	push	{r4, lr}
   13bec:	bl	10f50 <abort@plt>
   13bf0:	muleq	r2, r0, r1
   13bf4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13bf8:	sub	sp, sp, #24
   13bfc:	ldr	ip, [pc, #108]	; 13c70 <close@plt+0x2d14>
   13c00:	ldr	r4, [sp, #56]	; 0x38
   13c04:	mov	r9, r2
   13c08:	cmp	r4, #0
   13c0c:	moveq	r4, ip
   13c10:	mov	sl, r3
   13c14:	mov	r7, r0
   13c18:	mov	r8, r1
   13c1c:	bl	10e9c <__errno_location@plt>
   13c20:	ldr	r3, [r4, #44]	; 0x2c
   13c24:	mov	r1, r8
   13c28:	ldr	r6, [r0]
   13c2c:	str	r3, [sp, #16]
   13c30:	ldr	r2, [r4, #40]	; 0x28
   13c34:	add	r3, r4, #8
   13c38:	str	r3, [sp, #8]
   13c3c:	str	r2, [sp, #12]
   13c40:	ldr	r2, [r4, #4]
   13c44:	mov	r5, r0
   13c48:	str	r2, [sp, #4]
   13c4c:	ldr	ip, [r4]
   13c50:	mov	r3, sl
   13c54:	mov	r2, r9
   13c58:	mov	r0, r7
   13c5c:	str	ip, [sp]
   13c60:	bl	12578 <close@plt+0x161c>
   13c64:	str	r6, [r5]
   13c68:	add	sp, sp, #24
   13c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13c70:	muleq	r2, r0, r1
   13c74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c78:	cmp	r2, #0
   13c7c:	sub	sp, sp, #36	; 0x24
   13c80:	ldr	r4, [pc, #164]	; 13d2c <close@plt+0x2dd0>
   13c84:	mov	r8, r1
   13c88:	movne	r4, r2
   13c8c:	mov	r7, r0
   13c90:	bl	10e9c <__errno_location@plt>
   13c94:	ldr	r3, [r4, #44]	; 0x2c
   13c98:	ldr	r5, [r4, #4]
   13c9c:	add	r9, r4, #8
   13ca0:	orr	r5, r5, #1
   13ca4:	mov	r1, #0
   13ca8:	mov	r2, r7
   13cac:	ldr	fp, [r0]
   13cb0:	str	r3, [sp, #16]
   13cb4:	ldr	r3, [r4, #40]	; 0x28
   13cb8:	stmib	sp, {r5, r9}
   13cbc:	str	r3, [sp, #12]
   13cc0:	ldr	r3, [r4]
   13cc4:	mov	r6, r0
   13cc8:	str	r3, [sp]
   13ccc:	mov	r0, r1
   13cd0:	mov	r3, r8
   13cd4:	bl	12578 <close@plt+0x161c>
   13cd8:	add	r1, r0, #1
   13cdc:	mov	r0, r1
   13ce0:	str	r1, [sp, #28]
   13ce4:	bl	16f38 <close@plt+0x5fdc>
   13ce8:	ldr	r3, [r4, #44]	; 0x2c
   13cec:	ldr	r1, [sp, #28]
   13cf0:	str	r3, [sp, #16]
   13cf4:	ldr	r3, [r4, #40]	; 0x28
   13cf8:	str	r5, [sp, #4]
   13cfc:	str	r3, [sp, #12]
   13d00:	str	r9, [sp, #8]
   13d04:	ldr	ip, [r4]
   13d08:	mov	r3, r8
   13d0c:	mov	r2, r7
   13d10:	str	ip, [sp]
   13d14:	mov	sl, r0
   13d18:	bl	12578 <close@plt+0x161c>
   13d1c:	mov	r0, sl
   13d20:	str	fp, [r6]
   13d24:	add	sp, sp, #36	; 0x24
   13d28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d2c:	muleq	r2, r0, r1
   13d30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d34:	cmp	r3, #0
   13d38:	sub	sp, sp, #44	; 0x2c
   13d3c:	ldr	r4, [pc, #192]	; 13e04 <close@plt+0x2ea8>
   13d40:	mov	r6, r2
   13d44:	movne	r4, r3
   13d48:	mov	r9, r1
   13d4c:	mov	r8, r0
   13d50:	bl	10e9c <__errno_location@plt>
   13d54:	ldr	r3, [r4, #44]	; 0x2c
   13d58:	ldr	r5, [r4, #4]
   13d5c:	add	sl, r4, #8
   13d60:	cmp	r6, #0
   13d64:	orreq	r5, r5, #1
   13d68:	mov	r1, #0
   13d6c:	ldr	r2, [r0]
   13d70:	str	r3, [sp, #16]
   13d74:	ldr	r3, [r4, #40]	; 0x28
   13d78:	stmib	sp, {r5, sl}
   13d7c:	str	r3, [sp, #12]
   13d80:	ldr	r3, [r4]
   13d84:	mov	r7, r0
   13d88:	str	r2, [sp, #28]
   13d8c:	str	r3, [sp]
   13d90:	mov	r2, r8
   13d94:	mov	r3, r9
   13d98:	mov	r0, r1
   13d9c:	bl	12578 <close@plt+0x161c>
   13da0:	add	r1, r0, #1
   13da4:	mov	fp, r0
   13da8:	mov	r0, r1
   13dac:	str	r1, [sp, #36]	; 0x24
   13db0:	bl	16f38 <close@plt+0x5fdc>
   13db4:	ldr	r3, [r4, #44]	; 0x2c
   13db8:	mov	r2, r8
   13dbc:	str	r3, [sp, #16]
   13dc0:	ldr	r3, [r4, #40]	; 0x28
   13dc4:	str	r5, [sp, #4]
   13dc8:	str	r3, [sp, #12]
   13dcc:	str	sl, [sp, #8]
   13dd0:	ldr	ip, [r4]
   13dd4:	ldr	r1, [sp, #36]	; 0x24
   13dd8:	mov	r3, r9
   13ddc:	str	ip, [sp]
   13de0:	str	r0, [sp, #32]
   13de4:	bl	12578 <close@plt+0x161c>
   13de8:	ldr	r2, [sp, #28]
   13dec:	cmp	r6, #0
   13df0:	str	r2, [r7]
   13df4:	ldr	r0, [sp, #32]
   13df8:	strne	fp, [r6]
   13dfc:	add	sp, sp, #44	; 0x2c
   13e00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e04:	muleq	r2, r0, r1
   13e08:	push	{r4, r5, r6, r7, r8, lr}
   13e0c:	ldr	r6, [pc, #116]	; 13e88 <close@plt+0x2f2c>
   13e10:	ldr	r3, [r6, #4]
   13e14:	ldr	r7, [r6]
   13e18:	cmp	r3, #1
   13e1c:	movgt	r5, r7
   13e20:	movgt	r4, #1
   13e24:	ble	13e44 <close@plt+0x2ee8>
   13e28:	ldr	r0, [r5, #12]
   13e2c:	bl	122dc <close@plt+0x1380>
   13e30:	ldr	r3, [r6, #4]
   13e34:	add	r4, r4, #1
   13e38:	cmp	r3, r4
   13e3c:	add	r5, r5, #8
   13e40:	bgt	13e28 <close@plt+0x2ecc>
   13e44:	ldr	r0, [r7, #4]
   13e48:	ldr	r4, [pc, #60]	; 13e8c <close@plt+0x2f30>
   13e4c:	cmp	r0, r4
   13e50:	beq	13e64 <close@plt+0x2f08>
   13e54:	bl	122dc <close@plt+0x1380>
   13e58:	mov	r3, #256	; 0x100
   13e5c:	str	r4, [r6, #12]
   13e60:	str	r3, [r6, #8]
   13e64:	ldr	r4, [pc, #36]	; 13e90 <close@plt+0x2f34>
   13e68:	cmp	r7, r4
   13e6c:	beq	13e7c <close@plt+0x2f20>
   13e70:	mov	r0, r7
   13e74:	bl	122dc <close@plt+0x1380>
   13e78:	str	r4, [r6]
   13e7c:	mov	r3, #1
   13e80:	str	r3, [r6, #4]
   13e84:	pop	{r4, r5, r6, r7, r8, pc}
   13e88:	andeq	r9, r2, r8, lsl r1
   13e8c:	andeq	r9, r2, r0, asr #3
   13e90:	andeq	r9, r2, r0, lsr #2
   13e94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e98:	sub	sp, sp, #44	; 0x2c
   13e9c:	mov	r5, r0
   13ea0:	mov	sl, r1
   13ea4:	bl	10e9c <__errno_location@plt>
   13ea8:	ldr	r4, [pc, #400]	; 14040 <close@plt+0x30e4>
   13eac:	cmn	r5, #-2147483647	; 0x80000001
   13eb0:	ldr	r6, [r4]
   13eb4:	mov	r8, r0
   13eb8:	movne	r0, #0
   13ebc:	moveq	r0, #1
   13ec0:	ldr	r3, [r8]
   13ec4:	orrs	r0, r0, r5, lsr #31
   13ec8:	str	r3, [sp, #24]
   13ecc:	bne	1403c <close@plt+0x30e0>
   13ed0:	ldr	r2, [r4, #4]
   13ed4:	cmp	r5, r2
   13ed8:	blt	13f38 <close@plt+0x2fdc>
   13edc:	add	r7, r4, #8
   13ee0:	cmp	r6, r7
   13ee4:	str	r2, [sp, #36]	; 0x24
   13ee8:	beq	1400c <close@plt+0x30b0>
   13eec:	mov	r3, #8
   13ef0:	sub	r2, r5, r2
   13ef4:	mov	r0, r6
   13ef8:	str	r3, [sp]
   13efc:	add	r2, r2, #1
   13f00:	mvn	r3, #-2147483648	; 0x80000000
   13f04:	add	r1, sp, #36	; 0x24
   13f08:	bl	17154 <close@plt+0x61f8>
   13f0c:	mov	r6, r0
   13f10:	str	r0, [r4]
   13f14:	ldr	r0, [r4, #4]
   13f18:	ldr	r2, [sp, #36]	; 0x24
   13f1c:	mov	r1, #0
   13f20:	sub	r2, r2, r0
   13f24:	add	r0, r6, r0, lsl #3
   13f28:	lsl	r2, r2, #3
   13f2c:	bl	10eb4 <memset@plt>
   13f30:	ldr	r3, [sp, #36]	; 0x24
   13f34:	str	r3, [r4, #4]
   13f38:	ldr	r4, [pc, #260]	; 14044 <close@plt+0x30e8>
   13f3c:	add	fp, r6, r5, lsl #3
   13f40:	ldr	r9, [r6, r5, lsl #3]
   13f44:	ldr	r0, [r4, #4]
   13f48:	ldr	r3, [r4]
   13f4c:	ldr	r7, [fp, #4]
   13f50:	ldr	r1, [r4, #44]	; 0x2c
   13f54:	ldr	r2, [r4, #40]	; 0x28
   13f58:	orr	r0, r0, #1
   13f5c:	str	r3, [sp]
   13f60:	add	r3, r4, #8
   13f64:	str	r0, [sp, #28]
   13f68:	str	r0, [sp, #4]
   13f6c:	str	r1, [sp, #16]
   13f70:	str	r2, [sp, #12]
   13f74:	str	r3, [sp, #8]
   13f78:	mov	r0, r7
   13f7c:	mov	r1, r9
   13f80:	mvn	r3, #0
   13f84:	mov	r2, sl
   13f88:	bl	12578 <close@plt+0x161c>
   13f8c:	cmp	r9, r0
   13f90:	bhi	13ff8 <close@plt+0x309c>
   13f94:	add	r3, r4, #48	; 0x30
   13f98:	add	r9, r0, #1
   13f9c:	cmp	r7, r3
   13fa0:	str	r9, [r6, r5, lsl #3]
   13fa4:	beq	13fb0 <close@plt+0x3054>
   13fa8:	mov	r0, r7
   13fac:	bl	122dc <close@plt+0x1380>
   13fb0:	mov	r0, r9
   13fb4:	bl	16f38 <close@plt+0x5fdc>
   13fb8:	ldr	ip, [r4, #44]	; 0x2c
   13fbc:	ldr	r3, [r4]
   13fc0:	ldr	lr, [r4, #40]	; 0x28
   13fc4:	ldr	r4, [pc, #124]	; 14048 <close@plt+0x30ec>
   13fc8:	mov	r2, sl
   13fcc:	mov	r1, r9
   13fd0:	str	r0, [fp, #4]
   13fd4:	str	r4, [sp, #8]
   13fd8:	ldr	r4, [sp, #28]
   13fdc:	str	r3, [sp]
   13fe0:	str	r4, [sp, #4]
   13fe4:	str	ip, [sp, #16]
   13fe8:	str	lr, [sp, #12]
   13fec:	mvn	r3, #0
   13ff0:	mov	r7, r0
   13ff4:	bl	12578 <close@plt+0x161c>
   13ff8:	ldr	r3, [sp, #24]
   13ffc:	mov	r0, r7
   14000:	str	r3, [r8]
   14004:	add	sp, sp, #44	; 0x2c
   14008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1400c:	mov	r3, #8
   14010:	sub	r2, r5, r2
   14014:	str	r3, [sp]
   14018:	add	r1, sp, #36	; 0x24
   1401c:	add	r2, r2, #1
   14020:	mvn	r3, #-2147483648	; 0x80000000
   14024:	bl	17154 <close@plt+0x61f8>
   14028:	mov	r6, r0
   1402c:	ldm	r7, {r0, r1}
   14030:	str	r6, [r4]
   14034:	stm	r6, {r0, r1}
   14038:	b	13f14 <close@plt+0x2fb8>
   1403c:	bl	10f50 <abort@plt>
   14040:	andeq	r9, r2, r8, lsl r1
   14044:	muleq	r2, r0, r1
   14048:	muleq	r2, r8, r1
   1404c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14050:	sub	sp, sp, #52	; 0x34
   14054:	mov	r5, r0
   14058:	mov	sl, r1
   1405c:	mov	fp, r2
   14060:	bl	10e9c <__errno_location@plt>
   14064:	ldr	r4, [pc, #408]	; 14204 <close@plt+0x32a8>
   14068:	cmn	r5, #-2147483647	; 0x80000001
   1406c:	ldr	r6, [r4]
   14070:	mov	r8, r0
   14074:	movne	r0, #0
   14078:	moveq	r0, #1
   1407c:	ldr	r3, [r8]
   14080:	orrs	r0, r0, r5, lsr #31
   14084:	str	r3, [sp, #28]
   14088:	bne	14200 <close@plt+0x32a4>
   1408c:	ldr	r2, [r4, #4]
   14090:	cmp	r5, r2
   14094:	blt	140f4 <close@plt+0x3198>
   14098:	add	r7, r4, #8
   1409c:	cmp	r6, r7
   140a0:	str	r2, [sp, #44]	; 0x2c
   140a4:	beq	141d0 <close@plt+0x3274>
   140a8:	mov	r3, #8
   140ac:	sub	r2, r5, r2
   140b0:	mov	r0, r6
   140b4:	str	r3, [sp]
   140b8:	add	r2, r2, #1
   140bc:	mvn	r3, #-2147483648	; 0x80000000
   140c0:	add	r1, sp, #44	; 0x2c
   140c4:	bl	17154 <close@plt+0x61f8>
   140c8:	mov	r6, r0
   140cc:	str	r0, [r4]
   140d0:	ldr	r0, [r4, #4]
   140d4:	ldr	r2, [sp, #44]	; 0x2c
   140d8:	mov	r1, #0
   140dc:	sub	r2, r2, r0
   140e0:	add	r0, r6, r0, lsl #3
   140e4:	lsl	r2, r2, #3
   140e8:	bl	10eb4 <memset@plt>
   140ec:	ldr	r3, [sp, #44]	; 0x2c
   140f0:	str	r3, [r4, #4]
   140f4:	ldr	r4, [pc, #268]	; 14208 <close@plt+0x32ac>
   140f8:	add	r3, r6, r5, lsl #3
   140fc:	str	r3, [sp, #32]
   14100:	ldr	r7, [r3, #4]
   14104:	ldr	r0, [r4, #4]
   14108:	ldr	r3, [r4]
   1410c:	ldr	r9, [r6, r5, lsl #3]
   14110:	ldr	r1, [r4, #44]	; 0x2c
   14114:	ldr	r2, [r4, #40]	; 0x28
   14118:	orr	r0, r0, #1
   1411c:	str	r3, [sp]
   14120:	add	r3, r4, #8
   14124:	str	r0, [sp, #36]	; 0x24
   14128:	str	r0, [sp, #4]
   1412c:	str	r1, [sp, #16]
   14130:	str	r2, [sp, #12]
   14134:	str	r3, [sp, #8]
   14138:	mov	r0, r7
   1413c:	mov	r1, r9
   14140:	mov	r3, fp
   14144:	mov	r2, sl
   14148:	bl	12578 <close@plt+0x161c>
   1414c:	cmp	r9, r0
   14150:	bhi	141bc <close@plt+0x3260>
   14154:	add	r3, r4, #48	; 0x30
   14158:	add	r9, r0, #1
   1415c:	cmp	r7, r3
   14160:	str	r9, [r6, r5, lsl #3]
   14164:	beq	14170 <close@plt+0x3214>
   14168:	mov	r0, r7
   1416c:	bl	122dc <close@plt+0x1380>
   14170:	mov	r0, r9
   14174:	bl	16f38 <close@plt+0x5fdc>
   14178:	ldr	ip, [sp, #32]
   1417c:	ldr	lr, [r4, #44]	; 0x2c
   14180:	ldr	r5, [r4, #40]	; 0x28
   14184:	mov	r3, fp
   14188:	mov	r2, sl
   1418c:	mov	r1, r9
   14190:	str	r0, [ip, #4]
   14194:	ldr	ip, [r4]
   14198:	ldr	r4, [pc, #108]	; 1420c <close@plt+0x32b0>
   1419c:	str	lr, [sp, #16]
   141a0:	str	r4, [sp, #8]
   141a4:	ldr	r4, [sp, #36]	; 0x24
   141a8:	str	r5, [sp, #12]
   141ac:	str	r4, [sp, #4]
   141b0:	str	ip, [sp]
   141b4:	mov	r7, r0
   141b8:	bl	12578 <close@plt+0x161c>
   141bc:	ldr	r3, [sp, #28]
   141c0:	mov	r0, r7
   141c4:	str	r3, [r8]
   141c8:	add	sp, sp, #52	; 0x34
   141cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141d0:	mov	r3, #8
   141d4:	sub	r2, r5, r2
   141d8:	str	r3, [sp]
   141dc:	add	r1, sp, #44	; 0x2c
   141e0:	add	r2, r2, #1
   141e4:	mvn	r3, #-2147483648	; 0x80000000
   141e8:	bl	17154 <close@plt+0x61f8>
   141ec:	mov	r6, r0
   141f0:	ldm	r7, {r0, r1}
   141f4:	str	r6, [r4]
   141f8:	stm	r6, {r0, r1}
   141fc:	b	140d0 <close@plt+0x3174>
   14200:	bl	10f50 <abort@plt>
   14204:	andeq	r9, r2, r8, lsl r1
   14208:	muleq	r2, r0, r1
   1420c:	muleq	r2, r8, r1
   14210:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14214:	sub	sp, sp, #44	; 0x2c
   14218:	mov	sl, r0
   1421c:	bl	10e9c <__errno_location@plt>
   14220:	ldr	r4, [pc, #352]	; 14388 <close@plt+0x342c>
   14224:	ldr	r2, [r4, #4]
   14228:	ldr	r5, [r4]
   1422c:	cmp	r2, #0
   14230:	ldr	r3, [r0]
   14234:	mov	r8, r0
   14238:	str	r3, [sp, #28]
   1423c:	bgt	14298 <close@plt+0x333c>
   14240:	add	r6, r4, #8
   14244:	cmp	r5, r6
   14248:	str	r2, [sp, #36]	; 0x24
   1424c:	beq	14358 <close@plt+0x33fc>
   14250:	mov	r3, #8
   14254:	mov	r0, r5
   14258:	str	r3, [sp]
   1425c:	rsb	r2, r2, #1
   14260:	mvn	r3, #-2147483648	; 0x80000000
   14264:	add	r1, sp, #36	; 0x24
   14268:	bl	17154 <close@plt+0x61f8>
   1426c:	mov	r5, r0
   14270:	str	r0, [r4]
   14274:	ldr	r0, [r4, #4]
   14278:	ldr	r2, [sp, #36]	; 0x24
   1427c:	mov	r1, #0
   14280:	sub	r2, r2, r0
   14284:	add	r0, r5, r0, lsl #3
   14288:	lsl	r2, r2, #3
   1428c:	bl	10eb4 <memset@plt>
   14290:	ldr	r3, [sp, #36]	; 0x24
   14294:	str	r3, [r4, #4]
   14298:	ldr	r4, [pc, #236]	; 1438c <close@plt+0x3430>
   1429c:	ldr	r9, [r5]
   142a0:	ldr	r6, [r5, #4]
   142a4:	ldr	r7, [r4, #4]
   142a8:	ldr	r1, [r4, #44]	; 0x2c
   142ac:	ldr	r2, [r4, #40]	; 0x28
   142b0:	ldr	r3, [r4]
   142b4:	orr	r7, r7, #1
   142b8:	add	fp, r4, #8
   142bc:	str	r1, [sp, #16]
   142c0:	str	r2, [sp, #12]
   142c4:	str	r3, [sp]
   142c8:	str	r7, [sp, #4]
   142cc:	str	fp, [sp, #8]
   142d0:	mov	r1, r9
   142d4:	mov	r0, r6
   142d8:	mvn	r3, #0
   142dc:	mov	r2, sl
   142e0:	bl	12578 <close@plt+0x161c>
   142e4:	cmp	r9, r0
   142e8:	bhi	14344 <close@plt+0x33e8>
   142ec:	add	r3, r4, #48	; 0x30
   142f0:	add	r9, r0, #1
   142f4:	cmp	r6, r3
   142f8:	str	r9, [r5]
   142fc:	beq	14308 <close@plt+0x33ac>
   14300:	mov	r0, r6
   14304:	bl	122dc <close@plt+0x1380>
   14308:	mov	r0, r9
   1430c:	bl	16f38 <close@plt+0x5fdc>
   14310:	ldr	ip, [r4, #44]	; 0x2c
   14314:	ldr	r3, [r4]
   14318:	ldr	lr, [r4, #40]	; 0x28
   1431c:	mov	r2, sl
   14320:	mov	r1, r9
   14324:	str	r0, [r5, #4]
   14328:	str	r3, [sp]
   1432c:	stmib	sp, {r7, fp}
   14330:	str	ip, [sp, #16]
   14334:	str	lr, [sp, #12]
   14338:	mvn	r3, #0
   1433c:	mov	r6, r0
   14340:	bl	12578 <close@plt+0x161c>
   14344:	ldr	r3, [sp, #28]
   14348:	mov	r0, r6
   1434c:	str	r3, [r8]
   14350:	add	sp, sp, #44	; 0x2c
   14354:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14358:	mov	r3, #8
   1435c:	str	r3, [sp]
   14360:	add	r1, sp, #36	; 0x24
   14364:	rsb	r2, r2, #1
   14368:	mvn	r3, #-2147483648	; 0x80000000
   1436c:	mov	r0, #0
   14370:	bl	17154 <close@plt+0x61f8>
   14374:	mov	r5, r0
   14378:	ldm	r6, {r0, r1}
   1437c:	str	r5, [r4]
   14380:	stm	r5, {r0, r1}
   14384:	b	14274 <close@plt+0x3318>
   14388:	andeq	r9, r2, r8, lsl r1
   1438c:	muleq	r2, r0, r1
   14390:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14394:	sub	sp, sp, #44	; 0x2c
   14398:	mov	r9, r0
   1439c:	mov	sl, r1
   143a0:	bl	10e9c <__errno_location@plt>
   143a4:	ldr	r4, [pc, #364]	; 14518 <close@plt+0x35bc>
   143a8:	ldr	r2, [r4, #4]
   143ac:	ldr	r5, [r4]
   143b0:	cmp	r2, #0
   143b4:	ldr	r3, [r0]
   143b8:	mov	r7, r0
   143bc:	str	r3, [sp, #24]
   143c0:	bgt	1441c <close@plt+0x34c0>
   143c4:	add	r6, r4, #8
   143c8:	cmp	r5, r6
   143cc:	str	r2, [sp, #36]	; 0x24
   143d0:	beq	144e8 <close@plt+0x358c>
   143d4:	mov	r3, #8
   143d8:	mov	r0, r5
   143dc:	str	r3, [sp]
   143e0:	rsb	r2, r2, #1
   143e4:	mvn	r3, #-2147483648	; 0x80000000
   143e8:	add	r1, sp, #36	; 0x24
   143ec:	bl	17154 <close@plt+0x61f8>
   143f0:	mov	r5, r0
   143f4:	str	r0, [r4]
   143f8:	ldr	r0, [r4, #4]
   143fc:	ldr	r2, [sp, #36]	; 0x24
   14400:	mov	r1, #0
   14404:	sub	r2, r2, r0
   14408:	add	r0, r5, r0, lsl #3
   1440c:	lsl	r2, r2, #3
   14410:	bl	10eb4 <memset@plt>
   14414:	ldr	r3, [sp, #36]	; 0x24
   14418:	str	r3, [r4, #4]
   1441c:	ldr	r4, [pc, #248]	; 1451c <close@plt+0x35c0>
   14420:	ldr	r8, [r5]
   14424:	ldr	r6, [r5, #4]
   14428:	ldr	r0, [r4, #4]
   1442c:	ldr	r1, [r4, #44]	; 0x2c
   14430:	ldr	r2, [r4, #40]	; 0x28
   14434:	ldr	r3, [r4]
   14438:	orr	r0, r0, #1
   1443c:	add	fp, r4, #8
   14440:	str	r0, [sp, #28]
   14444:	str	r0, [sp, #4]
   14448:	str	r1, [sp, #16]
   1444c:	str	r2, [sp, #12]
   14450:	str	r3, [sp]
   14454:	str	fp, [sp, #8]
   14458:	mov	r1, r8
   1445c:	mov	r0, r6
   14460:	mov	r3, sl
   14464:	mov	r2, r9
   14468:	bl	12578 <close@plt+0x161c>
   1446c:	cmp	r8, r0
   14470:	bhi	144d4 <close@plt+0x3578>
   14474:	add	r3, r4, #48	; 0x30
   14478:	add	r8, r0, #1
   1447c:	cmp	r6, r3
   14480:	str	r8, [r5]
   14484:	beq	14490 <close@plt+0x3534>
   14488:	mov	r0, r6
   1448c:	bl	122dc <close@plt+0x1380>
   14490:	mov	r0, r8
   14494:	bl	16f38 <close@plt+0x5fdc>
   14498:	ldr	lr, [r4, #44]	; 0x2c
   1449c:	ldr	ip, [r4]
   144a0:	mov	r3, sl
   144a4:	mov	r2, r9
   144a8:	mov	r1, r8
   144ac:	str	r0, [r5, #4]
   144b0:	ldr	r5, [r4, #40]	; 0x28
   144b4:	ldr	r4, [sp, #28]
   144b8:	str	fp, [sp, #8]
   144bc:	str	r4, [sp, #4]
   144c0:	str	lr, [sp, #16]
   144c4:	str	r5, [sp, #12]
   144c8:	str	ip, [sp]
   144cc:	mov	r6, r0
   144d0:	bl	12578 <close@plt+0x161c>
   144d4:	ldr	r3, [sp, #24]
   144d8:	mov	r0, r6
   144dc:	str	r3, [r7]
   144e0:	add	sp, sp, #44	; 0x2c
   144e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   144e8:	mov	r3, #8
   144ec:	str	r3, [sp]
   144f0:	add	r1, sp, #36	; 0x24
   144f4:	rsb	r2, r2, #1
   144f8:	mvn	r3, #-2147483648	; 0x80000000
   144fc:	mov	r0, #0
   14500:	bl	17154 <close@plt+0x61f8>
   14504:	mov	r5, r0
   14508:	ldm	r6, {r0, r1}
   1450c:	str	r5, [r4]
   14510:	stm	r5, {r0, r1}
   14514:	b	143f8 <close@plt+0x349c>
   14518:	andeq	r9, r2, r8, lsl r1
   1451c:	muleq	r2, r0, r1
   14520:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14524:	sub	sp, sp, #132	; 0x84
   14528:	mov	r5, r1
   1452c:	mov	r4, r0
   14530:	mov	r9, r2
   14534:	add	r0, sp, #80	; 0x50
   14538:	mov	r2, #48	; 0x30
   1453c:	mov	r1, #0
   14540:	bl	10eb4 <memset@plt>
   14544:	cmp	r5, #10
   14548:	beq	14700 <close@plt+0x37a4>
   1454c:	add	lr, sp, #80	; 0x50
   14550:	str	r5, [sp, #80]	; 0x50
   14554:	ldm	lr!, {r0, r1, r2, r3}
   14558:	add	ip, sp, #32
   1455c:	ldr	r6, [pc, #416]	; 14704 <close@plt+0x37a8>
   14560:	stmia	ip!, {r0, r1, r2, r3}
   14564:	ldm	lr!, {r0, r1, r2, r3}
   14568:	stmia	ip!, {r0, r1, r2, r3}
   1456c:	ldm	lr, {r0, r1, r2, r3}
   14570:	stm	ip, {r0, r1, r2, r3}
   14574:	bl	10e9c <__errno_location@plt>
   14578:	cmn	r4, #-2147483647	; 0x80000001
   1457c:	ldr	r5, [r6]
   14580:	mov	r7, r0
   14584:	movne	r0, #0
   14588:	moveq	r0, #1
   1458c:	ldr	r3, [r7]
   14590:	orrs	r0, r0, r4, lsr #31
   14594:	str	r3, [sp, #24]
   14598:	bne	14700 <close@plt+0x37a4>
   1459c:	ldr	r2, [r6, #4]
   145a0:	cmp	r4, r2
   145a4:	blt	14604 <close@plt+0x36a8>
   145a8:	add	r8, r6, #8
   145ac:	cmp	r5, r8
   145b0:	str	r2, [sp, #80]	; 0x50
   145b4:	beq	146d0 <close@plt+0x3774>
   145b8:	mov	r3, #8
   145bc:	sub	r2, r4, r2
   145c0:	mov	r0, r5
   145c4:	str	r3, [sp]
   145c8:	add	r2, r2, #1
   145cc:	add	r1, sp, #80	; 0x50
   145d0:	mvn	r3, #-2147483648	; 0x80000000
   145d4:	bl	17154 <close@plt+0x61f8>
   145d8:	mov	r5, r0
   145dc:	str	r0, [r6]
   145e0:	ldr	r0, [r6, #4]
   145e4:	ldr	r2, [sp, #80]	; 0x50
   145e8:	mov	r1, #0
   145ec:	sub	r2, r2, r0
   145f0:	add	r0, r5, r0, lsl #3
   145f4:	lsl	r2, r2, #3
   145f8:	bl	10eb4 <memset@plt>
   145fc:	ldr	r3, [sp, #80]	; 0x50
   14600:	str	r3, [r6, #4]
   14604:	add	fp, r5, r4, lsl #3
   14608:	ldr	r1, [sp, #36]	; 0x24
   1460c:	ldr	r8, [r5, r4, lsl #3]
   14610:	ldr	r6, [fp, #4]
   14614:	ldr	r2, [sp, #72]	; 0x48
   14618:	ldr	r3, [sp, #32]
   1461c:	ldr	ip, [sp, #76]	; 0x4c
   14620:	orr	r1, r1, #1
   14624:	add	sl, sp, #40	; 0x28
   14628:	str	r1, [sp, #28]
   1462c:	str	r1, [sp, #4]
   14630:	str	r2, [sp, #12]
   14634:	str	r3, [sp]
   14638:	mov	r0, r6
   1463c:	mov	r1, r8
   14640:	str	ip, [sp, #16]
   14644:	str	sl, [sp, #8]
   14648:	mvn	r3, #0
   1464c:	mov	r2, r9
   14650:	bl	12578 <close@plt+0x161c>
   14654:	cmp	r8, r0
   14658:	bhi	146bc <close@plt+0x3760>
   1465c:	ldr	r3, [pc, #164]	; 14708 <close@plt+0x37ac>
   14660:	add	r8, r0, #1
   14664:	cmp	r6, r3
   14668:	str	r8, [r5, r4, lsl #3]
   1466c:	beq	14678 <close@plt+0x371c>
   14670:	mov	r0, r6
   14674:	bl	122dc <close@plt+0x1380>
   14678:	mov	r0, r8
   1467c:	bl	16f38 <close@plt+0x5fdc>
   14680:	ldr	lr, [sp, #76]	; 0x4c
   14684:	ldr	r3, [sp, #32]
   14688:	ldr	ip, [sp, #72]	; 0x48
   1468c:	ldr	r4, [sp, #28]
   14690:	mov	r2, r9
   14694:	mov	r1, r8
   14698:	str	r0, [fp, #4]
   1469c:	str	r3, [sp]
   146a0:	str	sl, [sp, #8]
   146a4:	str	r4, [sp, #4]
   146a8:	str	lr, [sp, #16]
   146ac:	str	ip, [sp, #12]
   146b0:	mvn	r3, #0
   146b4:	mov	r6, r0
   146b8:	bl	12578 <close@plt+0x161c>
   146bc:	ldr	r3, [sp, #24]
   146c0:	mov	r0, r6
   146c4:	str	r3, [r7]
   146c8:	add	sp, sp, #132	; 0x84
   146cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146d0:	mov	r3, #8
   146d4:	sub	r2, r4, r2
   146d8:	add	r1, sp, #80	; 0x50
   146dc:	str	r3, [sp]
   146e0:	add	r2, r2, #1
   146e4:	mvn	r3, #-2147483648	; 0x80000000
   146e8:	bl	17154 <close@plt+0x61f8>
   146ec:	mov	r5, r0
   146f0:	ldm	r8, {r0, r1}
   146f4:	str	r5, [r6]
   146f8:	stm	r5, {r0, r1}
   146fc:	b	145e0 <close@plt+0x3684>
   14700:	bl	10f50 <abort@plt>
   14704:	andeq	r9, r2, r8, lsl r1
   14708:	andeq	r9, r2, r0, asr #3
   1470c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14710:	sub	sp, sp, #132	; 0x84
   14714:	mov	r5, r1
   14718:	mov	r4, r0
   1471c:	mov	r9, r2
   14720:	add	r0, sp, #80	; 0x50
   14724:	mov	r2, #48	; 0x30
   14728:	mov	r1, #0
   1472c:	mov	sl, r3
   14730:	bl	10eb4 <memset@plt>
   14734:	cmp	r5, #10
   14738:	beq	148f4 <close@plt+0x3998>
   1473c:	add	lr, sp, #80	; 0x50
   14740:	str	r5, [sp, #80]	; 0x50
   14744:	ldm	lr!, {r0, r1, r2, r3}
   14748:	add	ip, sp, #32
   1474c:	ldr	r6, [pc, #420]	; 148f8 <close@plt+0x399c>
   14750:	stmia	ip!, {r0, r1, r2, r3}
   14754:	ldm	lr!, {r0, r1, r2, r3}
   14758:	stmia	ip!, {r0, r1, r2, r3}
   1475c:	ldm	lr, {r0, r1, r2, r3}
   14760:	stm	ip, {r0, r1, r2, r3}
   14764:	bl	10e9c <__errno_location@plt>
   14768:	cmn	r4, #-2147483647	; 0x80000001
   1476c:	ldr	r5, [r6]
   14770:	mov	r7, r0
   14774:	movne	r0, #0
   14778:	moveq	r0, #1
   1477c:	ldr	r3, [r7]
   14780:	orrs	r0, r0, r4, lsr #31
   14784:	str	r3, [sp, #24]
   14788:	bne	148f4 <close@plt+0x3998>
   1478c:	ldr	r2, [r6, #4]
   14790:	cmp	r4, r2
   14794:	blt	147f4 <close@plt+0x3898>
   14798:	add	r8, r6, #8
   1479c:	cmp	r5, r8
   147a0:	str	r2, [sp, #80]	; 0x50
   147a4:	beq	148c4 <close@plt+0x3968>
   147a8:	mov	r3, #8
   147ac:	sub	r2, r4, r2
   147b0:	mov	r0, r5
   147b4:	str	r3, [sp]
   147b8:	add	r2, r2, #1
   147bc:	add	r1, sp, #80	; 0x50
   147c0:	mvn	r3, #-2147483648	; 0x80000000
   147c4:	bl	17154 <close@plt+0x61f8>
   147c8:	mov	r5, r0
   147cc:	str	r0, [r6]
   147d0:	ldr	r0, [r6, #4]
   147d4:	ldr	r2, [sp, #80]	; 0x50
   147d8:	mov	r1, #0
   147dc:	sub	r2, r2, r0
   147e0:	add	r0, r5, r0, lsl #3
   147e4:	lsl	r2, r2, #3
   147e8:	bl	10eb4 <memset@plt>
   147ec:	ldr	r3, [sp, #80]	; 0x50
   147f0:	str	r3, [r6, #4]
   147f4:	add	fp, r5, r4, lsl #3
   147f8:	ldr	r3, [sp, #32]
   147fc:	ldr	r1, [sp, #36]	; 0x24
   14800:	ldr	r8, [r5, r4, lsl #3]
   14804:	ldr	r6, [fp, #4]
   14808:	ldr	r2, [sp, #72]	; 0x48
   1480c:	ldr	ip, [sp, #76]	; 0x4c
   14810:	orr	r1, r1, #1
   14814:	str	r3, [sp]
   14818:	add	r3, sp, #40	; 0x28
   1481c:	str	r1, [sp, #28]
   14820:	str	r1, [sp, #4]
   14824:	str	r2, [sp, #12]
   14828:	str	r3, [sp, #8]
   1482c:	mov	r0, r6
   14830:	mov	r1, r8
   14834:	str	ip, [sp, #16]
   14838:	mov	r3, sl
   1483c:	mov	r2, r9
   14840:	bl	12578 <close@plt+0x161c>
   14844:	cmp	r8, r0
   14848:	bhi	148b0 <close@plt+0x3954>
   1484c:	ldr	r3, [pc, #168]	; 148fc <close@plt+0x39a0>
   14850:	add	r8, r0, #1
   14854:	cmp	r6, r3
   14858:	str	r8, [r5, r4, lsl #3]
   1485c:	beq	14868 <close@plt+0x390c>
   14860:	mov	r0, r6
   14864:	bl	122dc <close@plt+0x1380>
   14868:	mov	r0, r8
   1486c:	bl	16f38 <close@plt+0x5fdc>
   14870:	add	lr, sp, #40	; 0x28
   14874:	ldr	ip, [sp, #76]	; 0x4c
   14878:	ldr	r4, [sp, #72]	; 0x48
   1487c:	ldr	r5, [sp, #28]
   14880:	mov	r3, sl
   14884:	mov	r2, r9
   14888:	mov	r1, r8
   1488c:	str	r0, [fp, #4]
   14890:	str	lr, [sp, #8]
   14894:	ldr	lr, [sp, #32]
   14898:	str	r5, [sp, #4]
   1489c:	str	ip, [sp, #16]
   148a0:	str	r4, [sp, #12]
   148a4:	str	lr, [sp]
   148a8:	mov	r6, r0
   148ac:	bl	12578 <close@plt+0x161c>
   148b0:	ldr	r3, [sp, #24]
   148b4:	mov	r0, r6
   148b8:	str	r3, [r7]
   148bc:	add	sp, sp, #132	; 0x84
   148c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148c4:	mov	r3, #8
   148c8:	sub	r2, r4, r2
   148cc:	add	r1, sp, #80	; 0x50
   148d0:	str	r3, [sp]
   148d4:	add	r2, r2, #1
   148d8:	mvn	r3, #-2147483648	; 0x80000000
   148dc:	bl	17154 <close@plt+0x61f8>
   148e0:	mov	r5, r0
   148e4:	ldm	r8, {r0, r1}
   148e8:	str	r5, [r6]
   148ec:	stm	r5, {r0, r1}
   148f0:	b	147d0 <close@plt+0x3874>
   148f4:	bl	10f50 <abort@plt>
   148f8:	andeq	r9, r2, r8, lsl r1
   148fc:	andeq	r9, r2, r0, asr #3
   14900:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14904:	sub	sp, sp, #124	; 0x7c
   14908:	mov	r4, r0
   1490c:	mov	r9, r1
   14910:	add	r0, sp, #72	; 0x48
   14914:	mov	r2, #48	; 0x30
   14918:	mov	r1, #0
   1491c:	bl	10eb4 <memset@plt>
   14920:	cmp	r4, #10
   14924:	beq	14ab0 <close@plt+0x3b54>
   14928:	add	lr, sp, #72	; 0x48
   1492c:	str	r4, [sp, #72]	; 0x48
   14930:	ldm	lr!, {r0, r1, r2, r3}
   14934:	add	ip, sp, #24
   14938:	ldr	r5, [pc, #372]	; 14ab4 <close@plt+0x3b58>
   1493c:	stmia	ip!, {r0, r1, r2, r3}
   14940:	ldm	lr!, {r0, r1, r2, r3}
   14944:	stmia	ip!, {r0, r1, r2, r3}
   14948:	ldm	lr, {r0, r1, r2, r3}
   1494c:	stm	ip, {r0, r1, r2, r3}
   14950:	bl	10e9c <__errno_location@plt>
   14954:	ldr	r2, [r5, #4]
   14958:	ldr	r4, [r5]
   1495c:	cmp	r2, #0
   14960:	mov	r7, r0
   14964:	ldr	fp, [r0]
   14968:	bgt	149c4 <close@plt+0x3a68>
   1496c:	add	r6, r5, #8
   14970:	cmp	r4, r6
   14974:	str	r2, [sp, #72]	; 0x48
   14978:	beq	14a80 <close@plt+0x3b24>
   1497c:	mov	r3, #8
   14980:	mov	r0, r4
   14984:	str	r3, [sp]
   14988:	rsb	r2, r2, #1
   1498c:	add	r1, sp, #72	; 0x48
   14990:	mvn	r3, #-2147483648	; 0x80000000
   14994:	bl	17154 <close@plt+0x61f8>
   14998:	mov	r4, r0
   1499c:	str	r0, [r5]
   149a0:	ldr	r0, [r5, #4]
   149a4:	ldr	r2, [sp, #72]	; 0x48
   149a8:	mov	r1, #0
   149ac:	sub	r2, r2, r0
   149b0:	add	r0, r4, r0, lsl #3
   149b4:	lsl	r2, r2, #3
   149b8:	bl	10eb4 <memset@plt>
   149bc:	ldr	r3, [sp, #72]	; 0x48
   149c0:	str	r3, [r5, #4]
   149c4:	ldr	r6, [sp, #28]
   149c8:	ldr	r8, [r4]
   149cc:	ldr	r5, [r4, #4]
   149d0:	ldr	r2, [sp, #64]	; 0x40
   149d4:	ldr	r3, [sp, #24]
   149d8:	ldr	ip, [sp, #68]	; 0x44
   149dc:	orr	r6, r6, #1
   149e0:	add	sl, sp, #32
   149e4:	str	r2, [sp, #12]
   149e8:	str	r3, [sp]
   149ec:	str	r6, [sp, #4]
   149f0:	mov	r1, r8
   149f4:	mov	r0, r5
   149f8:	str	ip, [sp, #16]
   149fc:	str	sl, [sp, #8]
   14a00:	mvn	r3, #0
   14a04:	mov	r2, r9
   14a08:	bl	12578 <close@plt+0x161c>
   14a0c:	cmp	r8, r0
   14a10:	bhi	14a70 <close@plt+0x3b14>
   14a14:	ldr	r3, [pc, #156]	; 14ab8 <close@plt+0x3b5c>
   14a18:	add	r8, r0, #1
   14a1c:	cmp	r5, r3
   14a20:	str	r8, [r4]
   14a24:	beq	14a30 <close@plt+0x3ad4>
   14a28:	mov	r0, r5
   14a2c:	bl	122dc <close@plt+0x1380>
   14a30:	mov	r0, r8
   14a34:	bl	16f38 <close@plt+0x5fdc>
   14a38:	ldr	lr, [sp, #68]	; 0x44
   14a3c:	ldr	r3, [sp, #24]
   14a40:	ldr	ip, [sp, #64]	; 0x40
   14a44:	mov	r2, r9
   14a48:	mov	r1, r8
   14a4c:	str	r0, [r4, #4]
   14a50:	str	r3, [sp]
   14a54:	str	sl, [sp, #8]
   14a58:	str	r6, [sp, #4]
   14a5c:	str	lr, [sp, #16]
   14a60:	str	ip, [sp, #12]
   14a64:	mvn	r3, #0
   14a68:	mov	r5, r0
   14a6c:	bl	12578 <close@plt+0x161c>
   14a70:	mov	r0, r5
   14a74:	str	fp, [r7]
   14a78:	add	sp, sp, #124	; 0x7c
   14a7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a80:	mov	r3, #8
   14a84:	add	r1, sp, #72	; 0x48
   14a88:	str	r3, [sp]
   14a8c:	rsb	r2, r2, #1
   14a90:	mvn	r3, #-2147483648	; 0x80000000
   14a94:	mov	r0, #0
   14a98:	bl	17154 <close@plt+0x61f8>
   14a9c:	mov	r4, r0
   14aa0:	ldm	r6, {r0, r1}
   14aa4:	str	r4, [r5]
   14aa8:	stm	r4, {r0, r1}
   14aac:	b	149a0 <close@plt+0x3a44>
   14ab0:	bl	10f50 <abort@plt>
   14ab4:	andeq	r9, r2, r8, lsl r1
   14ab8:	andeq	r9, r2, r0, asr #3
   14abc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ac0:	sub	sp, sp, #132	; 0x84
   14ac4:	mov	r4, r0
   14ac8:	mov	r9, r1
   14acc:	mov	sl, r2
   14ad0:	add	r0, sp, #80	; 0x50
   14ad4:	mov	r2, #48	; 0x30
   14ad8:	mov	r1, #0
   14adc:	bl	10eb4 <memset@plt>
   14ae0:	cmp	r4, #10
   14ae4:	beq	14c78 <close@plt+0x3d1c>
   14ae8:	add	lr, sp, #80	; 0x50
   14aec:	str	r4, [sp, #80]	; 0x50
   14af0:	ldm	lr!, {r0, r1, r2, r3}
   14af4:	add	ip, sp, #32
   14af8:	ldr	r5, [pc, #380]	; 14c7c <close@plt+0x3d20>
   14afc:	stmia	ip!, {r0, r1, r2, r3}
   14b00:	ldm	lr!, {r0, r1, r2, r3}
   14b04:	stmia	ip!, {r0, r1, r2, r3}
   14b08:	ldm	lr, {r0, r1, r2, r3}
   14b0c:	stm	ip, {r0, r1, r2, r3}
   14b10:	bl	10e9c <__errno_location@plt>
   14b14:	ldr	r2, [r5, #4]
   14b18:	ldr	r4, [r5]
   14b1c:	cmp	r2, #0
   14b20:	ldr	r3, [r0]
   14b24:	mov	r7, r0
   14b28:	str	r3, [sp, #28]
   14b2c:	bgt	14b88 <close@plt+0x3c2c>
   14b30:	add	r6, r5, #8
   14b34:	cmp	r4, r6
   14b38:	str	r2, [sp, #80]	; 0x50
   14b3c:	beq	14c48 <close@plt+0x3cec>
   14b40:	mov	r3, #8
   14b44:	mov	r0, r4
   14b48:	str	r3, [sp]
   14b4c:	rsb	r2, r2, #1
   14b50:	add	r1, sp, #80	; 0x50
   14b54:	mvn	r3, #-2147483648	; 0x80000000
   14b58:	bl	17154 <close@plt+0x61f8>
   14b5c:	mov	r4, r0
   14b60:	str	r0, [r5]
   14b64:	ldr	r0, [r5, #4]
   14b68:	ldr	r2, [sp, #80]	; 0x50
   14b6c:	mov	r1, #0
   14b70:	sub	r2, r2, r0
   14b74:	add	r0, r4, r0, lsl #3
   14b78:	lsl	r2, r2, #3
   14b7c:	bl	10eb4 <memset@plt>
   14b80:	ldr	r3, [sp, #80]	; 0x50
   14b84:	str	r3, [r5, #4]
   14b88:	ldr	r6, [sp, #36]	; 0x24
   14b8c:	ldr	r8, [r4]
   14b90:	ldr	r5, [r4, #4]
   14b94:	ldr	r2, [sp, #72]	; 0x48
   14b98:	ldr	r3, [sp, #32]
   14b9c:	ldr	ip, [sp, #76]	; 0x4c
   14ba0:	orr	r6, r6, #1
   14ba4:	add	fp, sp, #40	; 0x28
   14ba8:	str	r2, [sp, #12]
   14bac:	str	r3, [sp]
   14bb0:	str	r6, [sp, #4]
   14bb4:	mov	r1, r8
   14bb8:	mov	r0, r5
   14bbc:	str	ip, [sp, #16]
   14bc0:	str	fp, [sp, #8]
   14bc4:	mov	r3, sl
   14bc8:	mov	r2, r9
   14bcc:	bl	12578 <close@plt+0x161c>
   14bd0:	cmp	r8, r0
   14bd4:	bhi	14c34 <close@plt+0x3cd8>
   14bd8:	ldr	r3, [pc, #160]	; 14c80 <close@plt+0x3d24>
   14bdc:	add	r8, r0, #1
   14be0:	cmp	r5, r3
   14be4:	str	r8, [r4]
   14be8:	beq	14bf4 <close@plt+0x3c98>
   14bec:	mov	r0, r5
   14bf0:	bl	122dc <close@plt+0x1380>
   14bf4:	mov	r0, r8
   14bf8:	bl	16f38 <close@plt+0x5fdc>
   14bfc:	ldr	ip, [sp, #76]	; 0x4c
   14c00:	ldr	lr, [sp, #32]
   14c04:	mov	r3, sl
   14c08:	mov	r2, r9
   14c0c:	mov	r1, r8
   14c10:	str	r0, [r4, #4]
   14c14:	ldr	r4, [sp, #72]	; 0x48
   14c18:	str	fp, [sp, #8]
   14c1c:	str	r6, [sp, #4]
   14c20:	str	ip, [sp, #16]
   14c24:	str	r4, [sp, #12]
   14c28:	str	lr, [sp]
   14c2c:	mov	r5, r0
   14c30:	bl	12578 <close@plt+0x161c>
   14c34:	ldr	r3, [sp, #28]
   14c38:	mov	r0, r5
   14c3c:	str	r3, [r7]
   14c40:	add	sp, sp, #132	; 0x84
   14c44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c48:	mov	r3, #8
   14c4c:	add	r1, sp, #80	; 0x50
   14c50:	str	r3, [sp]
   14c54:	rsb	r2, r2, #1
   14c58:	mvn	r3, #-2147483648	; 0x80000000
   14c5c:	mov	r0, #0
   14c60:	bl	17154 <close@plt+0x61f8>
   14c64:	mov	r4, r0
   14c68:	ldm	r6, {r0, r1}
   14c6c:	str	r4, [r5]
   14c70:	stm	r4, {r0, r1}
   14c74:	b	14b64 <close@plt+0x3c08>
   14c78:	bl	10f50 <abort@plt>
   14c7c:	andeq	r9, r2, r8, lsl r1
   14c80:	andeq	r9, r2, r0, asr #3
   14c84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c88:	mov	r4, r2
   14c8c:	ldr	lr, [pc, #432]	; 14e44 <close@plt+0x3ee8>
   14c90:	mov	sl, r0
   14c94:	mov	fp, r1
   14c98:	ldm	lr!, {r0, r1, r2, r3}
   14c9c:	sub	sp, sp, #92	; 0x5c
   14ca0:	add	ip, sp, #40	; 0x28
   14ca4:	lsr	r7, r4, #5
   14ca8:	stmia	ip!, {r0, r1, r2, r3}
   14cac:	add	r6, sp, #48	; 0x30
   14cb0:	ldm	lr!, {r0, r1, r2, r3}
   14cb4:	and	r4, r4, #31
   14cb8:	ldr	r5, [pc, #392]	; 14e48 <close@plt+0x3eec>
   14cbc:	stmia	ip!, {r0, r1, r2, r3}
   14cc0:	ldm	lr, {r0, r1, r2, r3}
   14cc4:	stm	ip, {r0, r1, r2, r3}
   14cc8:	ldr	r2, [r6, r7, lsl #2]
   14ccc:	lsr	r3, r2, r4
   14cd0:	eor	r3, r3, #1
   14cd4:	and	r3, r3, #1
   14cd8:	eor	r4, r2, r3, lsl r4
   14cdc:	str	r4, [r6, r7, lsl #2]
   14ce0:	bl	10e9c <__errno_location@plt>
   14ce4:	ldr	r2, [r5, #4]
   14ce8:	ldr	r4, [r5]
   14cec:	cmp	r2, #0
   14cf0:	ldr	r3, [r0]
   14cf4:	mov	r8, r0
   14cf8:	str	r3, [sp, #28]
   14cfc:	bgt	14d58 <close@plt+0x3dfc>
   14d00:	add	r7, r5, #8
   14d04:	cmp	r4, r7
   14d08:	str	r2, [sp, #36]	; 0x24
   14d0c:	beq	14e14 <close@plt+0x3eb8>
   14d10:	mov	r3, #8
   14d14:	mov	r0, r4
   14d18:	str	r3, [sp]
   14d1c:	rsb	r2, r2, #1
   14d20:	mvn	r3, #-2147483648	; 0x80000000
   14d24:	add	r1, sp, #36	; 0x24
   14d28:	bl	17154 <close@plt+0x61f8>
   14d2c:	mov	r4, r0
   14d30:	str	r0, [r5]
   14d34:	ldr	r0, [r5, #4]
   14d38:	ldr	r2, [sp, #36]	; 0x24
   14d3c:	mov	r1, #0
   14d40:	sub	r2, r2, r0
   14d44:	add	r0, r4, r0, lsl #3
   14d48:	lsl	r2, r2, #3
   14d4c:	bl	10eb4 <memset@plt>
   14d50:	ldr	r3, [sp, #36]	; 0x24
   14d54:	str	r3, [r5, #4]
   14d58:	ldr	r7, [sp, #44]	; 0x2c
   14d5c:	ldr	r9, [r4]
   14d60:	ldr	r5, [r4, #4]
   14d64:	ldr	r2, [sp, #80]	; 0x50
   14d68:	ldr	r3, [sp, #40]	; 0x28
   14d6c:	ldr	ip, [sp, #84]	; 0x54
   14d70:	orr	r7, r7, #1
   14d74:	str	r2, [sp, #12]
   14d78:	str	r3, [sp]
   14d7c:	str	r7, [sp, #4]
   14d80:	str	r6, [sp, #8]
   14d84:	mov	r1, r9
   14d88:	mov	r0, r5
   14d8c:	str	ip, [sp, #16]
   14d90:	mov	r3, fp
   14d94:	mov	r2, sl
   14d98:	bl	12578 <close@plt+0x161c>
   14d9c:	cmp	r9, r0
   14da0:	bhi	14e00 <close@plt+0x3ea4>
   14da4:	ldr	r3, [pc, #160]	; 14e4c <close@plt+0x3ef0>
   14da8:	add	r9, r0, #1
   14dac:	cmp	r5, r3
   14db0:	str	r9, [r4]
   14db4:	beq	14dc0 <close@plt+0x3e64>
   14db8:	mov	r0, r5
   14dbc:	bl	122dc <close@plt+0x1380>
   14dc0:	mov	r0, r9
   14dc4:	bl	16f38 <close@plt+0x5fdc>
   14dc8:	ldr	ip, [sp, #84]	; 0x54
   14dcc:	ldr	lr, [sp, #40]	; 0x28
   14dd0:	mov	r3, fp
   14dd4:	mov	r2, sl
   14dd8:	mov	r1, r9
   14ddc:	str	r0, [r4, #4]
   14de0:	ldr	r4, [sp, #80]	; 0x50
   14de4:	str	r6, [sp, #8]
   14de8:	str	r7, [sp, #4]
   14dec:	str	ip, [sp, #16]
   14df0:	str	r4, [sp, #12]
   14df4:	str	lr, [sp]
   14df8:	mov	r5, r0
   14dfc:	bl	12578 <close@plt+0x161c>
   14e00:	ldr	r3, [sp, #28]
   14e04:	mov	r0, r5
   14e08:	str	r3, [r8]
   14e0c:	add	sp, sp, #92	; 0x5c
   14e10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e14:	mov	r3, #8
   14e18:	str	r3, [sp]
   14e1c:	add	r1, sp, #36	; 0x24
   14e20:	rsb	r2, r2, #1
   14e24:	mvn	r3, #-2147483648	; 0x80000000
   14e28:	mov	r0, #0
   14e2c:	bl	17154 <close@plt+0x61f8>
   14e30:	mov	r4, r0
   14e34:	ldm	r7, {r0, r1}
   14e38:	str	r4, [r5]
   14e3c:	stm	r4, {r0, r1}
   14e40:	b	14d34 <close@plt+0x3dd8>
   14e44:	muleq	r2, r0, r1
   14e48:	andeq	r9, r2, r8, lsl r1
   14e4c:	andeq	r9, r2, r0, asr #3
   14e50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e54:	mov	r4, r1
   14e58:	ldr	lr, [pc, #420]	; 15004 <close@plt+0x40a8>
   14e5c:	mov	r6, r0
   14e60:	sub	sp, sp, #84	; 0x54
   14e64:	ldm	lr!, {r0, r1, r2, r3}
   14e68:	add	ip, sp, #32
   14e6c:	lsr	r8, r4, #5
   14e70:	add	r5, sp, #40	; 0x28
   14e74:	stmia	ip!, {r0, r1, r2, r3}
   14e78:	and	r4, r4, #31
   14e7c:	ldm	lr!, {r0, r1, r2, r3}
   14e80:	ldr	r7, [pc, #384]	; 15008 <close@plt+0x40ac>
   14e84:	stmia	ip!, {r0, r1, r2, r3}
   14e88:	ldm	lr, {r0, r1, r2, r3}
   14e8c:	stm	ip, {r0, r1, r2, r3}
   14e90:	ldr	r2, [r5, r8, lsl #2]
   14e94:	lsr	r3, r2, r4
   14e98:	eor	r3, r3, #1
   14e9c:	and	r3, r3, #1
   14ea0:	eor	r4, r2, r3, lsl r4
   14ea4:	str	r4, [r5, r8, lsl #2]
   14ea8:	bl	10e9c <__errno_location@plt>
   14eac:	ldr	r2, [r7, #4]
   14eb0:	ldr	r4, [r7]
   14eb4:	cmp	r2, #0
   14eb8:	mov	r9, r0
   14ebc:	ldr	sl, [r0]
   14ec0:	bgt	14f1c <close@plt+0x3fc0>
   14ec4:	add	r8, r7, #8
   14ec8:	cmp	r4, r8
   14ecc:	str	r2, [sp, #28]
   14ed0:	beq	14fd4 <close@plt+0x4078>
   14ed4:	mov	r3, #8
   14ed8:	mov	r0, r4
   14edc:	str	r3, [sp]
   14ee0:	rsb	r2, r2, #1
   14ee4:	mvn	r3, #-2147483648	; 0x80000000
   14ee8:	add	r1, sp, #28
   14eec:	bl	17154 <close@plt+0x61f8>
   14ef0:	mov	r4, r0
   14ef4:	str	r0, [r7]
   14ef8:	ldr	r0, [r7, #4]
   14efc:	ldr	r2, [sp, #28]
   14f00:	mov	r1, #0
   14f04:	sub	r2, r2, r0
   14f08:	add	r0, r4, r0, lsl #3
   14f0c:	lsl	r2, r2, #3
   14f10:	bl	10eb4 <memset@plt>
   14f14:	ldr	r3, [sp, #28]
   14f18:	str	r3, [r7, #4]
   14f1c:	ldr	r8, [sp, #36]	; 0x24
   14f20:	ldr	fp, [r4]
   14f24:	ldr	r7, [r4, #4]
   14f28:	ldr	r2, [sp, #72]	; 0x48
   14f2c:	ldr	r3, [sp, #32]
   14f30:	ldr	ip, [sp, #76]	; 0x4c
   14f34:	orr	r8, r8, #1
   14f38:	str	r2, [sp, #12]
   14f3c:	str	r3, [sp]
   14f40:	str	r8, [sp, #4]
   14f44:	str	r5, [sp, #8]
   14f48:	mov	r1, fp
   14f4c:	mov	r0, r7
   14f50:	str	ip, [sp, #16]
   14f54:	mvn	r3, #0
   14f58:	mov	r2, r6
   14f5c:	bl	12578 <close@plt+0x161c>
   14f60:	cmp	fp, r0
   14f64:	bhi	14fc4 <close@plt+0x4068>
   14f68:	ldr	r3, [pc, #156]	; 1500c <close@plt+0x40b0>
   14f6c:	add	fp, r0, #1
   14f70:	cmp	r7, r3
   14f74:	str	fp, [r4]
   14f78:	beq	14f84 <close@plt+0x4028>
   14f7c:	mov	r0, r7
   14f80:	bl	122dc <close@plt+0x1380>
   14f84:	mov	r0, fp
   14f88:	bl	16f38 <close@plt+0x5fdc>
   14f8c:	ldr	lr, [sp, #76]	; 0x4c
   14f90:	ldr	r3, [sp, #32]
   14f94:	ldr	ip, [sp, #72]	; 0x48
   14f98:	mov	r2, r6
   14f9c:	mov	r1, fp
   14fa0:	str	r0, [r4, #4]
   14fa4:	str	r3, [sp]
   14fa8:	str	r5, [sp, #8]
   14fac:	str	r8, [sp, #4]
   14fb0:	str	lr, [sp, #16]
   14fb4:	str	ip, [sp, #12]
   14fb8:	mvn	r3, #0
   14fbc:	mov	r7, r0
   14fc0:	bl	12578 <close@plt+0x161c>
   14fc4:	mov	r0, r7
   14fc8:	str	sl, [r9]
   14fcc:	add	sp, sp, #84	; 0x54
   14fd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14fd4:	mov	r3, #8
   14fd8:	str	r3, [sp]
   14fdc:	add	r1, sp, #28
   14fe0:	rsb	r2, r2, #1
   14fe4:	mvn	r3, #-2147483648	; 0x80000000
   14fe8:	mov	r0, #0
   14fec:	bl	17154 <close@plt+0x61f8>
   14ff0:	mov	r4, r0
   14ff4:	ldm	r8, {r0, r1}
   14ff8:	str	r4, [r7]
   14ffc:	stm	r4, {r0, r1}
   15000:	b	14ef8 <close@plt+0x3f9c>
   15004:	muleq	r2, r0, r1
   15008:	andeq	r9, r2, r8, lsl r1
   1500c:	andeq	r9, r2, r0, asr #3
   15010:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15014:	mov	r6, r0
   15018:	ldr	lr, [pc, #404]	; 151b4 <close@plt+0x4258>
   1501c:	sub	sp, sp, #84	; 0x54
   15020:	add	ip, sp, #32
   15024:	ldm	lr!, {r0, r1, r2, r3}
   15028:	ldr	r5, [pc, #392]	; 151b8 <close@plt+0x425c>
   1502c:	stmia	ip!, {r0, r1, r2, r3}
   15030:	ldm	lr!, {r0, r1, r2, r3}
   15034:	ldr	r4, [sp, #44]	; 0x2c
   15038:	stmia	ip!, {r0, r1, r2, r3}
   1503c:	ldm	lr, {r0, r1, r2, r3}
   15040:	mvn	lr, r4
   15044:	and	lr, lr, #67108864	; 0x4000000
   15048:	eor	lr, lr, r4
   1504c:	stm	ip, {r0, r1, r2, r3}
   15050:	str	lr, [sp, #44]	; 0x2c
   15054:	bl	10e9c <__errno_location@plt>
   15058:	ldr	r2, [r5, #4]
   1505c:	ldr	r4, [r5]
   15060:	cmp	r2, #0
   15064:	mov	r8, r0
   15068:	ldr	sl, [r0]
   1506c:	bgt	150c8 <close@plt+0x416c>
   15070:	add	r7, r5, #8
   15074:	cmp	r4, r7
   15078:	str	r2, [sp, #28]
   1507c:	beq	15184 <close@plt+0x4228>
   15080:	mov	r3, #8
   15084:	mov	r0, r4
   15088:	str	r3, [sp]
   1508c:	rsb	r2, r2, #1
   15090:	mvn	r3, #-2147483648	; 0x80000000
   15094:	add	r1, sp, #28
   15098:	bl	17154 <close@plt+0x61f8>
   1509c:	mov	r4, r0
   150a0:	str	r0, [r5]
   150a4:	ldr	r0, [r5, #4]
   150a8:	ldr	r2, [sp, #28]
   150ac:	mov	r1, #0
   150b0:	sub	r2, r2, r0
   150b4:	add	r0, r4, r0, lsl #3
   150b8:	lsl	r2, r2, #3
   150bc:	bl	10eb4 <memset@plt>
   150c0:	ldr	r3, [sp, #28]
   150c4:	str	r3, [r5, #4]
   150c8:	ldr	r7, [sp, #36]	; 0x24
   150cc:	ldr	r9, [r4]
   150d0:	ldr	r5, [r4, #4]
   150d4:	ldr	r2, [sp, #72]	; 0x48
   150d8:	ldr	r3, [sp, #32]
   150dc:	ldr	ip, [sp, #76]	; 0x4c
   150e0:	orr	r7, r7, #1
   150e4:	add	fp, sp, #40	; 0x28
   150e8:	str	r2, [sp, #12]
   150ec:	str	r3, [sp]
   150f0:	str	r7, [sp, #4]
   150f4:	mov	r1, r9
   150f8:	mov	r0, r5
   150fc:	str	ip, [sp, #16]
   15100:	str	fp, [sp, #8]
   15104:	mvn	r3, #0
   15108:	mov	r2, r6
   1510c:	bl	12578 <close@plt+0x161c>
   15110:	cmp	r9, r0
   15114:	bhi	15174 <close@plt+0x4218>
   15118:	ldr	r3, [pc, #156]	; 151bc <close@plt+0x4260>
   1511c:	add	r9, r0, #1
   15120:	cmp	r5, r3
   15124:	str	r9, [r4]
   15128:	beq	15134 <close@plt+0x41d8>
   1512c:	mov	r0, r5
   15130:	bl	122dc <close@plt+0x1380>
   15134:	mov	r0, r9
   15138:	bl	16f38 <close@plt+0x5fdc>
   1513c:	ldr	lr, [sp, #76]	; 0x4c
   15140:	ldr	r3, [sp, #32]
   15144:	ldr	ip, [sp, #72]	; 0x48
   15148:	mov	r2, r6
   1514c:	mov	r1, r9
   15150:	str	r0, [r4, #4]
   15154:	str	r3, [sp]
   15158:	str	fp, [sp, #8]
   1515c:	str	r7, [sp, #4]
   15160:	str	lr, [sp, #16]
   15164:	str	ip, [sp, #12]
   15168:	mvn	r3, #0
   1516c:	mov	r5, r0
   15170:	bl	12578 <close@plt+0x161c>
   15174:	mov	r0, r5
   15178:	str	sl, [r8]
   1517c:	add	sp, sp, #84	; 0x54
   15180:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15184:	mov	r3, #8
   15188:	str	r3, [sp]
   1518c:	add	r1, sp, #28
   15190:	rsb	r2, r2, #1
   15194:	mvn	r3, #-2147483648	; 0x80000000
   15198:	mov	r0, #0
   1519c:	bl	17154 <close@plt+0x61f8>
   151a0:	mov	r4, r0
   151a4:	ldm	r7, {r0, r1}
   151a8:	str	r4, [r5]
   151ac:	stm	r4, {r0, r1}
   151b0:	b	150a4 <close@plt+0x4148>
   151b4:	muleq	r2, r0, r1
   151b8:	andeq	r9, r2, r8, lsl r1
   151bc:	andeq	r9, r2, r0, asr #3
   151c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151c4:	mov	r9, r0
   151c8:	ldr	lr, [pc, #416]	; 15370 <close@plt+0x4414>
   151cc:	mov	sl, r1
   151d0:	sub	sp, sp, #92	; 0x5c
   151d4:	ldm	lr!, {r0, r1, r2, r3}
   151d8:	add	ip, sp, #40	; 0x28
   151dc:	ldr	r5, [pc, #400]	; 15374 <close@plt+0x4418>
   151e0:	stmia	ip!, {r0, r1, r2, r3}
   151e4:	ldm	lr!, {r0, r1, r2, r3}
   151e8:	ldr	r4, [sp, #52]	; 0x34
   151ec:	stmia	ip!, {r0, r1, r2, r3}
   151f0:	ldm	lr, {r0, r1, r2, r3}
   151f4:	mvn	lr, r4
   151f8:	and	lr, lr, #67108864	; 0x4000000
   151fc:	eor	lr, lr, r4
   15200:	stm	ip, {r0, r1, r2, r3}
   15204:	str	lr, [sp, #52]	; 0x34
   15208:	bl	10e9c <__errno_location@plt>
   1520c:	ldr	r2, [r5, #4]
   15210:	ldr	r4, [r5]
   15214:	cmp	r2, #0
   15218:	ldr	r3, [r0]
   1521c:	mov	r7, r0
   15220:	str	r3, [sp, #28]
   15224:	bgt	15280 <close@plt+0x4324>
   15228:	add	r6, r5, #8
   1522c:	cmp	r4, r6
   15230:	str	r2, [sp, #36]	; 0x24
   15234:	beq	15340 <close@plt+0x43e4>
   15238:	mov	r3, #8
   1523c:	mov	r0, r4
   15240:	str	r3, [sp]
   15244:	rsb	r2, r2, #1
   15248:	mvn	r3, #-2147483648	; 0x80000000
   1524c:	add	r1, sp, #36	; 0x24
   15250:	bl	17154 <close@plt+0x61f8>
   15254:	mov	r4, r0
   15258:	str	r0, [r5]
   1525c:	ldr	r0, [r5, #4]
   15260:	ldr	r2, [sp, #36]	; 0x24
   15264:	mov	r1, #0
   15268:	sub	r2, r2, r0
   1526c:	add	r0, r4, r0, lsl #3
   15270:	lsl	r2, r2, #3
   15274:	bl	10eb4 <memset@plt>
   15278:	ldr	r3, [sp, #36]	; 0x24
   1527c:	str	r3, [r5, #4]
   15280:	ldr	r6, [sp, #44]	; 0x2c
   15284:	ldr	r8, [r4]
   15288:	ldr	r5, [r4, #4]
   1528c:	ldr	r2, [sp, #80]	; 0x50
   15290:	ldr	r3, [sp, #40]	; 0x28
   15294:	ldr	ip, [sp, #84]	; 0x54
   15298:	orr	r6, r6, #1
   1529c:	add	fp, sp, #48	; 0x30
   152a0:	str	r2, [sp, #12]
   152a4:	str	r3, [sp]
   152a8:	str	r6, [sp, #4]
   152ac:	mov	r1, r8
   152b0:	mov	r0, r5
   152b4:	str	ip, [sp, #16]
   152b8:	str	fp, [sp, #8]
   152bc:	mov	r3, sl
   152c0:	mov	r2, r9
   152c4:	bl	12578 <close@plt+0x161c>
   152c8:	cmp	r8, r0
   152cc:	bhi	1532c <close@plt+0x43d0>
   152d0:	ldr	r3, [pc, #160]	; 15378 <close@plt+0x441c>
   152d4:	add	r8, r0, #1
   152d8:	cmp	r5, r3
   152dc:	str	r8, [r4]
   152e0:	beq	152ec <close@plt+0x4390>
   152e4:	mov	r0, r5
   152e8:	bl	122dc <close@plt+0x1380>
   152ec:	mov	r0, r8
   152f0:	bl	16f38 <close@plt+0x5fdc>
   152f4:	ldr	ip, [sp, #84]	; 0x54
   152f8:	ldr	lr, [sp, #40]	; 0x28
   152fc:	mov	r3, sl
   15300:	mov	r2, r9
   15304:	mov	r1, r8
   15308:	str	r0, [r4, #4]
   1530c:	ldr	r4, [sp, #80]	; 0x50
   15310:	str	fp, [sp, #8]
   15314:	str	r6, [sp, #4]
   15318:	str	ip, [sp, #16]
   1531c:	str	r4, [sp, #12]
   15320:	str	lr, [sp]
   15324:	mov	r5, r0
   15328:	bl	12578 <close@plt+0x161c>
   1532c:	ldr	r3, [sp, #28]
   15330:	mov	r0, r5
   15334:	str	r3, [r7]
   15338:	add	sp, sp, #92	; 0x5c
   1533c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15340:	mov	r3, #8
   15344:	str	r3, [sp]
   15348:	add	r1, sp, #36	; 0x24
   1534c:	rsb	r2, r2, #1
   15350:	mvn	r3, #-2147483648	; 0x80000000
   15354:	mov	r0, #0
   15358:	bl	17154 <close@plt+0x61f8>
   1535c:	mov	r4, r0
   15360:	ldm	r6, {r0, r1}
   15364:	str	r4, [r5]
   15368:	stm	r4, {r0, r1}
   1536c:	b	1525c <close@plt+0x4300>
   15370:	muleq	r2, r0, r1
   15374:	andeq	r9, r2, r8, lsl r1
   15378:	andeq	r9, r2, r0, asr #3
   1537c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15380:	sub	sp, sp, #180	; 0xb4
   15384:	mov	r6, r1
   15388:	mov	r4, r0
   1538c:	mov	r9, r2
   15390:	add	r0, sp, #80	; 0x50
   15394:	mov	r2, #48	; 0x30
   15398:	mov	r1, #0
   1539c:	bl	10eb4 <memset@plt>
   153a0:	cmp	r6, #10
   153a4:	beq	15584 <close@plt+0x4628>
   153a8:	add	r5, sp, #80	; 0x50
   153ac:	str	r6, [sp, #80]	; 0x50
   153b0:	ldm	r5!, {r0, r1, r2, r3}
   153b4:	add	ip, sp, #128	; 0x80
   153b8:	mov	r7, ip
   153bc:	add	lr, sp, #32
   153c0:	stmia	ip!, {r0, r1, r2, r3}
   153c4:	mov	r8, #67108864	; 0x4000000
   153c8:	ldm	r5!, {r0, r1, r2, r3}
   153cc:	ldr	r6, [pc, #436]	; 15588 <close@plt+0x462c>
   153d0:	stmia	ip!, {r0, r1, r2, r3}
   153d4:	ldm	r5, {r0, r1, r2, r3}
   153d8:	stm	ip, {r0, r1, r2, r3}
   153dc:	ldm	r7!, {r0, r1, r2, r3}
   153e0:	stmia	lr!, {r0, r1, r2, r3}
   153e4:	ldm	r7!, {r0, r1, r2, r3}
   153e8:	str	r8, [sp, #44]	; 0x2c
   153ec:	stmia	lr!, {r0, r1, r2, r3}
   153f0:	ldm	ip, {r0, r1, r2, r3}
   153f4:	stm	lr, {r0, r1, r2, r3}
   153f8:	bl	10e9c <__errno_location@plt>
   153fc:	cmn	r4, #-2147483647	; 0x80000001
   15400:	ldr	r5, [r6]
   15404:	mov	r7, r0
   15408:	movne	r0, #0
   1540c:	moveq	r0, #1
   15410:	ldr	r3, [r7]
   15414:	orrs	r0, r0, r4, lsr #31
   15418:	str	r3, [sp, #24]
   1541c:	bne	15584 <close@plt+0x4628>
   15420:	ldr	r2, [r6, #4]
   15424:	cmp	r4, r2
   15428:	blt	15488 <close@plt+0x452c>
   1542c:	add	r8, r6, #8
   15430:	cmp	r5, r8
   15434:	str	r2, [sp, #80]	; 0x50
   15438:	beq	15554 <close@plt+0x45f8>
   1543c:	mov	r3, #8
   15440:	sub	r2, r4, r2
   15444:	mov	r0, r5
   15448:	str	r3, [sp]
   1544c:	add	r2, r2, #1
   15450:	add	r1, sp, #80	; 0x50
   15454:	mvn	r3, #-2147483648	; 0x80000000
   15458:	bl	17154 <close@plt+0x61f8>
   1545c:	mov	r5, r0
   15460:	str	r0, [r6]
   15464:	ldr	r0, [r6, #4]
   15468:	ldr	r2, [sp, #80]	; 0x50
   1546c:	mov	r1, #0
   15470:	sub	r2, r2, r0
   15474:	add	r0, r5, r0, lsl #3
   15478:	lsl	r2, r2, #3
   1547c:	bl	10eb4 <memset@plt>
   15480:	ldr	r3, [sp, #80]	; 0x50
   15484:	str	r3, [r6, #4]
   15488:	add	fp, r5, r4, lsl #3
   1548c:	ldr	r1, [sp, #36]	; 0x24
   15490:	ldr	r8, [r5, r4, lsl #3]
   15494:	ldr	r6, [fp, #4]
   15498:	ldr	r2, [sp, #72]	; 0x48
   1549c:	ldr	r3, [sp, #32]
   154a0:	ldr	ip, [sp, #76]	; 0x4c
   154a4:	orr	r1, r1, #1
   154a8:	add	sl, sp, #40	; 0x28
   154ac:	str	r1, [sp, #28]
   154b0:	str	r1, [sp, #4]
   154b4:	str	r2, [sp, #12]
   154b8:	str	r3, [sp]
   154bc:	mov	r0, r6
   154c0:	mov	r1, r8
   154c4:	str	ip, [sp, #16]
   154c8:	str	sl, [sp, #8]
   154cc:	mvn	r3, #0
   154d0:	mov	r2, r9
   154d4:	bl	12578 <close@plt+0x161c>
   154d8:	cmp	r8, r0
   154dc:	bhi	15540 <close@plt+0x45e4>
   154e0:	ldr	r3, [pc, #164]	; 1558c <close@plt+0x4630>
   154e4:	add	r8, r0, #1
   154e8:	cmp	r6, r3
   154ec:	str	r8, [r5, r4, lsl #3]
   154f0:	beq	154fc <close@plt+0x45a0>
   154f4:	mov	r0, r6
   154f8:	bl	122dc <close@plt+0x1380>
   154fc:	mov	r0, r8
   15500:	bl	16f38 <close@plt+0x5fdc>
   15504:	ldr	lr, [sp, #76]	; 0x4c
   15508:	ldr	r3, [sp, #32]
   1550c:	ldr	ip, [sp, #72]	; 0x48
   15510:	ldr	r4, [sp, #28]
   15514:	mov	r2, r9
   15518:	mov	r1, r8
   1551c:	str	r0, [fp, #4]
   15520:	str	r3, [sp]
   15524:	str	sl, [sp, #8]
   15528:	str	r4, [sp, #4]
   1552c:	str	lr, [sp, #16]
   15530:	str	ip, [sp, #12]
   15534:	mvn	r3, #0
   15538:	mov	r6, r0
   1553c:	bl	12578 <close@plt+0x161c>
   15540:	ldr	r3, [sp, #24]
   15544:	mov	r0, r6
   15548:	str	r3, [r7]
   1554c:	add	sp, sp, #180	; 0xb4
   15550:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15554:	mov	r3, #8
   15558:	sub	r2, r4, r2
   1555c:	add	r1, sp, #80	; 0x50
   15560:	str	r3, [sp]
   15564:	add	r2, r2, #1
   15568:	mvn	r3, #-2147483648	; 0x80000000
   1556c:	bl	17154 <close@plt+0x61f8>
   15570:	mov	r5, r0
   15574:	ldm	r8, {r0, r1}
   15578:	str	r5, [r6]
   1557c:	stm	r5, {r0, r1}
   15580:	b	15464 <close@plt+0x4508>
   15584:	bl	10f50 <abort@plt>
   15588:	andeq	r9, r2, r8, lsl r1
   1558c:	andeq	r9, r2, r0, asr #3
   15590:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15594:	mov	r7, r1
   15598:	ldr	lr, [pc, #492]	; 1578c <close@plt+0x4830>
   1559c:	mov	r8, r2
   155a0:	mov	r4, r0
   155a4:	mov	fp, r3
   155a8:	ldm	lr!, {r0, r1, r2, r3}
   155ac:	sub	sp, sp, #100	; 0x64
   155b0:	add	ip, sp, #48	; 0x30
   155b4:	mov	sl, #10
   155b8:	stmia	ip!, {r0, r1, r2, r3}
   155bc:	cmp	r8, #0
   155c0:	cmpne	r7, #0
   155c4:	ldm	lr!, {r0, r1, r2, r3}
   155c8:	str	sl, [sp, #48]	; 0x30
   155cc:	stmia	ip!, {r0, r1, r2, r3}
   155d0:	ldm	lr, {r0, r1, r2, r3}
   155d4:	stm	ip, {r0, r1, r2, r3}
   155d8:	beq	15788 <close@plt+0x482c>
   155dc:	str	r7, [sp, #88]	; 0x58
   155e0:	str	r8, [sp, #92]	; 0x5c
   155e4:	bl	10e9c <__errno_location@plt>
   155e8:	ldr	r6, [pc, #416]	; 15790 <close@plt+0x4834>
   155ec:	cmn	r4, #-2147483647	; 0x80000001
   155f0:	ldr	r5, [r6]
   155f4:	mov	r9, r0
   155f8:	movne	r0, #0
   155fc:	moveq	r0, #1
   15600:	ldr	r3, [r9]
   15604:	orrs	r0, r0, r4, lsr #31
   15608:	str	r3, [sp, #28]
   1560c:	bne	15788 <close@plt+0x482c>
   15610:	ldr	r2, [r6, #4]
   15614:	cmp	r4, r2
   15618:	movlt	r3, sl
   1561c:	blt	15688 <close@plt+0x472c>
   15620:	add	r7, r6, #8
   15624:	cmp	r5, r7
   15628:	str	r2, [sp, #44]	; 0x2c
   1562c:	beq	15758 <close@plt+0x47fc>
   15630:	mov	r3, #8
   15634:	sub	r2, r4, r2
   15638:	mov	r0, r5
   1563c:	str	r3, [sp]
   15640:	add	r2, r2, #1
   15644:	mvn	r3, #-2147483648	; 0x80000000
   15648:	add	r1, sp, #44	; 0x2c
   1564c:	bl	17154 <close@plt+0x61f8>
   15650:	mov	r5, r0
   15654:	str	r0, [r6]
   15658:	ldr	r0, [r6, #4]
   1565c:	ldr	r2, [sp, #44]	; 0x2c
   15660:	mov	r1, #0
   15664:	sub	r2, r2, r0
   15668:	add	r0, r5, r0, lsl #3
   1566c:	lsl	r2, r2, #3
   15670:	bl	10eb4 <memset@plt>
   15674:	ldr	r3, [sp, #48]	; 0x30
   15678:	ldr	r7, [sp, #88]	; 0x58
   1567c:	ldr	r8, [sp, #92]	; 0x5c
   15680:	ldr	r2, [sp, #44]	; 0x2c
   15684:	str	r2, [r6, #4]
   15688:	add	r2, r5, r4, lsl #3
   1568c:	mov	r1, r2
   15690:	str	r2, [sp, #32]
   15694:	ldr	r2, [sp, #52]	; 0x34
   15698:	ldr	r6, [r1, #4]
   1569c:	ldr	sl, [r5, r4, lsl #3]
   156a0:	orr	r2, r2, #1
   156a4:	str	r3, [sp]
   156a8:	add	r3, sp, #56	; 0x38
   156ac:	str	r2, [sp, #36]	; 0x24
   156b0:	str	r2, [sp, #4]
   156b4:	str	r3, [sp, #8]
   156b8:	mov	r0, r6
   156bc:	str	r8, [sp, #16]
   156c0:	str	r7, [sp, #12]
   156c4:	mov	r1, sl
   156c8:	mvn	r3, #0
   156cc:	mov	r2, fp
   156d0:	bl	12578 <close@plt+0x161c>
   156d4:	cmp	sl, r0
   156d8:	bhi	15744 <close@plt+0x47e8>
   156dc:	ldr	r3, [pc, #176]	; 15794 <close@plt+0x4838>
   156e0:	add	r7, r0, #1
   156e4:	cmp	r6, r3
   156e8:	str	r7, [r5, r4, lsl #3]
   156ec:	beq	156f8 <close@plt+0x479c>
   156f0:	mov	r0, r6
   156f4:	bl	122dc <close@plt+0x1380>
   156f8:	mov	r0, r7
   156fc:	bl	16f38 <close@plt+0x5fdc>
   15700:	ldr	r3, [sp, #32]
   15704:	ldr	lr, [sp, #92]	; 0x5c
   15708:	ldr	ip, [sp, #88]	; 0x58
   1570c:	ldr	r4, [sp, #36]	; 0x24
   15710:	mov	r2, fp
   15714:	mov	r1, r7
   15718:	str	r0, [r3, #4]
   1571c:	add	r3, sp, #56	; 0x38
   15720:	str	r3, [sp, #8]
   15724:	ldr	r3, [sp, #48]	; 0x30
   15728:	str	r4, [sp, #4]
   1572c:	str	r3, [sp]
   15730:	str	lr, [sp, #16]
   15734:	str	ip, [sp, #12]
   15738:	mvn	r3, #0
   1573c:	mov	r6, r0
   15740:	bl	12578 <close@plt+0x161c>
   15744:	ldr	r3, [sp, #28]
   15748:	mov	r0, r6
   1574c:	str	r3, [r9]
   15750:	add	sp, sp, #100	; 0x64
   15754:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15758:	mov	r3, #8
   1575c:	sub	r2, r4, r2
   15760:	str	r3, [sp]
   15764:	add	r1, sp, #44	; 0x2c
   15768:	add	r2, r2, #1
   1576c:	mvn	r3, #-2147483648	; 0x80000000
   15770:	bl	17154 <close@plt+0x61f8>
   15774:	mov	r5, r0
   15778:	ldm	r7, {r0, r1}
   1577c:	str	r5, [r6]
   15780:	stm	r5, {r0, r1}
   15784:	b	15658 <close@plt+0x46fc>
   15788:	bl	10f50 <abort@plt>
   1578c:	muleq	r2, r0, r1
   15790:	andeq	r9, r2, r8, lsl r1
   15794:	andeq	r9, r2, r0, asr #3
   15798:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1579c:	mov	r7, r1
   157a0:	ldr	lr, [pc, #492]	; 15994 <close@plt+0x4a38>
   157a4:	mov	r8, r2
   157a8:	mov	r4, r0
   157ac:	mov	fp, r3
   157b0:	ldm	lr!, {r0, r1, r2, r3}
   157b4:	sub	sp, sp, #100	; 0x64
   157b8:	add	ip, sp, #48	; 0x30
   157bc:	mov	sl, #10
   157c0:	stmia	ip!, {r0, r1, r2, r3}
   157c4:	cmp	r8, #0
   157c8:	cmpne	r7, #0
   157cc:	ldm	lr!, {r0, r1, r2, r3}
   157d0:	str	sl, [sp, #48]	; 0x30
   157d4:	stmia	ip!, {r0, r1, r2, r3}
   157d8:	ldm	lr, {r0, r1, r2, r3}
   157dc:	stm	ip, {r0, r1, r2, r3}
   157e0:	beq	15990 <close@plt+0x4a34>
   157e4:	str	r7, [sp, #88]	; 0x58
   157e8:	str	r8, [sp, #92]	; 0x5c
   157ec:	bl	10e9c <__errno_location@plt>
   157f0:	ldr	r6, [pc, #416]	; 15998 <close@plt+0x4a3c>
   157f4:	cmn	r4, #-2147483647	; 0x80000001
   157f8:	ldr	r5, [r6]
   157fc:	mov	r9, r0
   15800:	movne	r0, #0
   15804:	moveq	r0, #1
   15808:	ldr	r3, [r9]
   1580c:	orrs	r0, r0, r4, lsr #31
   15810:	str	r3, [sp, #28]
   15814:	bne	15990 <close@plt+0x4a34>
   15818:	ldr	r2, [r6, #4]
   1581c:	cmp	r4, r2
   15820:	movlt	r3, sl
   15824:	blt	15890 <close@plt+0x4934>
   15828:	add	r7, r6, #8
   1582c:	cmp	r5, r7
   15830:	str	r2, [sp, #44]	; 0x2c
   15834:	beq	15960 <close@plt+0x4a04>
   15838:	mov	r3, #8
   1583c:	sub	r2, r4, r2
   15840:	mov	r0, r5
   15844:	str	r3, [sp]
   15848:	add	r2, r2, #1
   1584c:	mvn	r3, #-2147483648	; 0x80000000
   15850:	add	r1, sp, #44	; 0x2c
   15854:	bl	17154 <close@plt+0x61f8>
   15858:	mov	r5, r0
   1585c:	str	r0, [r6]
   15860:	ldr	r0, [r6, #4]
   15864:	ldr	r2, [sp, #44]	; 0x2c
   15868:	mov	r1, #0
   1586c:	sub	r2, r2, r0
   15870:	add	r0, r5, r0, lsl #3
   15874:	lsl	r2, r2, #3
   15878:	bl	10eb4 <memset@plt>
   1587c:	ldr	r3, [sp, #48]	; 0x30
   15880:	ldr	r7, [sp, #88]	; 0x58
   15884:	ldr	r8, [sp, #92]	; 0x5c
   15888:	ldr	r2, [sp, #44]	; 0x2c
   1588c:	str	r2, [r6, #4]
   15890:	add	r2, r5, r4, lsl #3
   15894:	mov	r1, r2
   15898:	str	r2, [sp, #32]
   1589c:	ldr	r2, [sp, #52]	; 0x34
   158a0:	ldr	r6, [r1, #4]
   158a4:	ldr	sl, [r5, r4, lsl #3]
   158a8:	orr	r2, r2, #1
   158ac:	str	r3, [sp]
   158b0:	add	r3, sp, #56	; 0x38
   158b4:	str	r2, [sp, #36]	; 0x24
   158b8:	str	r2, [sp, #4]
   158bc:	str	r3, [sp, #8]
   158c0:	mov	r0, r6
   158c4:	str	r8, [sp, #16]
   158c8:	str	r7, [sp, #12]
   158cc:	mov	r1, sl
   158d0:	ldr	r3, [sp, #136]	; 0x88
   158d4:	mov	r2, fp
   158d8:	bl	12578 <close@plt+0x161c>
   158dc:	cmp	sl, r0
   158e0:	bhi	1594c <close@plt+0x49f0>
   158e4:	ldr	r3, [pc, #176]	; 1599c <close@plt+0x4a40>
   158e8:	add	r7, r0, #1
   158ec:	cmp	r6, r3
   158f0:	str	r7, [r5, r4, lsl #3]
   158f4:	beq	15900 <close@plt+0x49a4>
   158f8:	mov	r0, r6
   158fc:	bl	122dc <close@plt+0x1380>
   15900:	mov	r0, r7
   15904:	bl	16f38 <close@plt+0x5fdc>
   15908:	ldr	r3, [sp, #32]
   1590c:	ldr	lr, [sp, #92]	; 0x5c
   15910:	ldr	ip, [sp, #88]	; 0x58
   15914:	ldr	r4, [sp, #36]	; 0x24
   15918:	mov	r2, fp
   1591c:	mov	r1, r7
   15920:	str	r0, [r3, #4]
   15924:	add	r3, sp, #56	; 0x38
   15928:	str	r3, [sp, #8]
   1592c:	ldr	r3, [sp, #48]	; 0x30
   15930:	str	r4, [sp, #4]
   15934:	str	r3, [sp]
   15938:	str	lr, [sp, #16]
   1593c:	str	ip, [sp, #12]
   15940:	ldr	r3, [sp, #136]	; 0x88
   15944:	mov	r6, r0
   15948:	bl	12578 <close@plt+0x161c>
   1594c:	ldr	r3, [sp, #28]
   15950:	mov	r0, r6
   15954:	str	r3, [r9]
   15958:	add	sp, sp, #100	; 0x64
   1595c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15960:	mov	r3, #8
   15964:	sub	r2, r4, r2
   15968:	str	r3, [sp]
   1596c:	add	r1, sp, #44	; 0x2c
   15970:	add	r2, r2, #1
   15974:	mvn	r3, #-2147483648	; 0x80000000
   15978:	bl	17154 <close@plt+0x61f8>
   1597c:	mov	r5, r0
   15980:	ldm	r7, {r0, r1}
   15984:	str	r5, [r6]
   15988:	stm	r5, {r0, r1}
   1598c:	b	15860 <close@plt+0x4904>
   15990:	bl	10f50 <abort@plt>
   15994:	muleq	r2, r0, r1
   15998:	andeq	r9, r2, r8, lsl r1
   1599c:	andeq	r9, r2, r0, asr #3
   159a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159a4:	mov	r5, r0
   159a8:	ldr	lr, [pc, #452]	; 15b74 <close@plt+0x4c18>
   159ac:	mov	r6, r1
   159b0:	mov	sl, r2
   159b4:	ldm	lr!, {r0, r1, r2, r3}
   159b8:	sub	sp, sp, #92	; 0x5c
   159bc:	add	ip, sp, #40	; 0x28
   159c0:	cmp	r6, #0
   159c4:	cmpne	r5, #0
   159c8:	stmia	ip!, {r0, r1, r2, r3}
   159cc:	mov	r9, #10
   159d0:	ldm	lr!, {r0, r1, r2, r3}
   159d4:	moveq	fp, #1
   159d8:	movne	fp, #0
   159dc:	str	r9, [sp, #40]	; 0x28
   159e0:	stmia	ip!, {r0, r1, r2, r3}
   159e4:	ldm	lr, {r0, r1, r2, r3}
   159e8:	stm	ip, {r0, r1, r2, r3}
   159ec:	beq	15b70 <close@plt+0x4c14>
   159f0:	str	r5, [sp, #80]	; 0x50
   159f4:	str	r6, [sp, #84]	; 0x54
   159f8:	bl	10e9c <__errno_location@plt>
   159fc:	ldr	r7, [pc, #372]	; 15b78 <close@plt+0x4c1c>
   15a00:	ldr	r2, [r7, #4]
   15a04:	ldr	r4, [r7]
   15a08:	cmp	r2, #0
   15a0c:	ldr	r3, [r0]
   15a10:	mov	r8, r0
   15a14:	str	r3, [sp, #24]
   15a18:	movgt	r3, r9
   15a1c:	bgt	15a84 <close@plt+0x4b28>
   15a20:	add	r5, r7, #8
   15a24:	cmp	r4, r5
   15a28:	str	r2, [sp, #36]	; 0x24
   15a2c:	beq	15b40 <close@plt+0x4be4>
   15a30:	mov	r3, #8
   15a34:	mov	r0, r4
   15a38:	str	r3, [sp]
   15a3c:	rsb	r2, r2, #1
   15a40:	mvn	r3, #-2147483648	; 0x80000000
   15a44:	add	r1, sp, #36	; 0x24
   15a48:	bl	17154 <close@plt+0x61f8>
   15a4c:	mov	r4, r0
   15a50:	str	r0, [r7]
   15a54:	ldr	r0, [r7, #4]
   15a58:	ldr	r2, [sp, #36]	; 0x24
   15a5c:	mov	r1, #0
   15a60:	sub	r2, r2, r0
   15a64:	add	r0, r4, r0, lsl #3
   15a68:	lsl	r2, r2, #3
   15a6c:	bl	10eb4 <memset@plt>
   15a70:	ldr	r3, [sp, #40]	; 0x28
   15a74:	ldr	r5, [sp, #80]	; 0x50
   15a78:	ldr	r6, [sp, #84]	; 0x54
   15a7c:	ldr	r2, [sp, #36]	; 0x24
   15a80:	str	r2, [r7, #4]
   15a84:	ldr	r2, [sp, #44]	; 0x2c
   15a88:	ldr	r9, [r4]
   15a8c:	ldr	r7, [r4, #4]
   15a90:	orr	r2, r2, #1
   15a94:	add	fp, sp, #48	; 0x30
   15a98:	str	r2, [sp, #28]
   15a9c:	str	r2, [sp, #4]
   15aa0:	str	r3, [sp]
   15aa4:	str	r6, [sp, #16]
   15aa8:	str	r5, [sp, #12]
   15aac:	mov	r1, r9
   15ab0:	mov	r0, r7
   15ab4:	str	fp, [sp, #8]
   15ab8:	mvn	r3, #0
   15abc:	mov	r2, sl
   15ac0:	bl	12578 <close@plt+0x161c>
   15ac4:	cmp	r9, r0
   15ac8:	bhi	15b2c <close@plt+0x4bd0>
   15acc:	ldr	r3, [pc, #168]	; 15b7c <close@plt+0x4c20>
   15ad0:	add	r5, r0, #1
   15ad4:	cmp	r7, r3
   15ad8:	str	r5, [r4]
   15adc:	beq	15ae8 <close@plt+0x4b8c>
   15ae0:	mov	r0, r7
   15ae4:	bl	122dc <close@plt+0x1380>
   15ae8:	mov	r0, r5
   15aec:	bl	16f38 <close@plt+0x5fdc>
   15af0:	ldr	lr, [sp, #84]	; 0x54
   15af4:	ldr	r3, [sp, #40]	; 0x28
   15af8:	ldr	ip, [sp, #80]	; 0x50
   15afc:	mov	r2, sl
   15b00:	mov	r1, r5
   15b04:	str	r0, [r4, #4]
   15b08:	ldr	r4, [sp, #28]
   15b0c:	str	r3, [sp]
   15b10:	str	fp, [sp, #8]
   15b14:	str	r4, [sp, #4]
   15b18:	str	lr, [sp, #16]
   15b1c:	str	ip, [sp, #12]
   15b20:	mvn	r3, #0
   15b24:	mov	r7, r0
   15b28:	bl	12578 <close@plt+0x161c>
   15b2c:	ldr	r3, [sp, #24]
   15b30:	mov	r0, r7
   15b34:	str	r3, [r8]
   15b38:	add	sp, sp, #92	; 0x5c
   15b3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b40:	mov	r3, #8
   15b44:	str	r3, [sp]
   15b48:	add	r1, sp, #36	; 0x24
   15b4c:	rsb	r2, r2, #1
   15b50:	mov	r0, fp
   15b54:	mvn	r3, #-2147483648	; 0x80000000
   15b58:	bl	17154 <close@plt+0x61f8>
   15b5c:	mov	r4, r0
   15b60:	ldm	r5, {r0, r1}
   15b64:	str	r4, [r7]
   15b68:	stm	r4, {r0, r1}
   15b6c:	b	15a54 <close@plt+0x4af8>
   15b70:	bl	10f50 <abort@plt>
   15b74:	muleq	r2, r0, r1
   15b78:	andeq	r9, r2, r8, lsl r1
   15b7c:	andeq	r9, r2, r0, asr #3
   15b80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b84:	mov	r5, r0
   15b88:	ldr	lr, [pc, #464]	; 15d60 <close@plt+0x4e04>
   15b8c:	mov	r6, r1
   15b90:	mov	sl, r2
   15b94:	mov	fp, r3
   15b98:	ldm	lr!, {r0, r1, r2, r3}
   15b9c:	sub	sp, sp, #92	; 0x5c
   15ba0:	add	ip, sp, #40	; 0x28
   15ba4:	cmp	r6, #0
   15ba8:	cmpne	r5, #0
   15bac:	stmia	ip!, {r0, r1, r2, r3}
   15bb0:	moveq	r4, #1
   15bb4:	ldm	lr!, {r0, r1, r2, r3}
   15bb8:	movne	r4, #0
   15bbc:	mov	r9, #10
   15bc0:	str	r4, [sp, #28]
   15bc4:	stmia	ip!, {r0, r1, r2, r3}
   15bc8:	ldm	lr, {r0, r1, r2, r3}
   15bcc:	str	r9, [sp, #40]	; 0x28
   15bd0:	stm	ip, {r0, r1, r2, r3}
   15bd4:	beq	15d5c <close@plt+0x4e00>
   15bd8:	str	r5, [sp, #80]	; 0x50
   15bdc:	str	r6, [sp, #84]	; 0x54
   15be0:	bl	10e9c <__errno_location@plt>
   15be4:	ldr	r7, [pc, #376]	; 15d64 <close@plt+0x4e08>
   15be8:	ldr	r2, [r7, #4]
   15bec:	ldr	r4, [r7]
   15bf0:	cmp	r2, #0
   15bf4:	ldr	r3, [r0]
   15bf8:	mov	r8, r0
   15bfc:	str	r3, [sp, #24]
   15c00:	movgt	r3, r9
   15c04:	bgt	15c6c <close@plt+0x4d10>
   15c08:	add	r5, r7, #8
   15c0c:	cmp	r4, r5
   15c10:	str	r2, [sp, #36]	; 0x24
   15c14:	beq	15d2c <close@plt+0x4dd0>
   15c18:	mov	r3, #8
   15c1c:	mov	r0, r4
   15c20:	str	r3, [sp]
   15c24:	rsb	r2, r2, #1
   15c28:	mvn	r3, #-2147483648	; 0x80000000
   15c2c:	add	r1, sp, #36	; 0x24
   15c30:	bl	17154 <close@plt+0x61f8>
   15c34:	mov	r4, r0
   15c38:	str	r0, [r7]
   15c3c:	ldr	r0, [r7, #4]
   15c40:	ldr	r2, [sp, #36]	; 0x24
   15c44:	mov	r1, #0
   15c48:	sub	r2, r2, r0
   15c4c:	add	r0, r4, r0, lsl #3
   15c50:	lsl	r2, r2, #3
   15c54:	bl	10eb4 <memset@plt>
   15c58:	ldr	r3, [sp, #40]	; 0x28
   15c5c:	ldr	r5, [sp, #80]	; 0x50
   15c60:	ldr	r6, [sp, #84]	; 0x54
   15c64:	ldr	r2, [sp, #36]	; 0x24
   15c68:	str	r2, [r7, #4]
   15c6c:	ldr	r2, [sp, #44]	; 0x2c
   15c70:	ldr	r9, [r4]
   15c74:	ldr	r7, [r4, #4]
   15c78:	orr	r2, r2, #1
   15c7c:	str	r3, [sp]
   15c80:	add	r3, sp, #48	; 0x30
   15c84:	str	r2, [sp, #28]
   15c88:	str	r2, [sp, #4]
   15c8c:	str	r3, [sp, #8]
   15c90:	str	r6, [sp, #16]
   15c94:	str	r5, [sp, #12]
   15c98:	mov	r1, r9
   15c9c:	mov	r0, r7
   15ca0:	mov	r3, fp
   15ca4:	mov	r2, sl
   15ca8:	bl	12578 <close@plt+0x161c>
   15cac:	cmp	r9, r0
   15cb0:	bhi	15d18 <close@plt+0x4dbc>
   15cb4:	ldr	r3, [pc, #172]	; 15d68 <close@plt+0x4e0c>
   15cb8:	add	r5, r0, #1
   15cbc:	cmp	r7, r3
   15cc0:	str	r5, [r4]
   15cc4:	beq	15cd0 <close@plt+0x4d74>
   15cc8:	mov	r0, r7
   15ccc:	bl	122dc <close@plt+0x1380>
   15cd0:	mov	r0, r5
   15cd4:	bl	16f38 <close@plt+0x5fdc>
   15cd8:	add	lr, sp, #48	; 0x30
   15cdc:	ldr	ip, [sp, #84]	; 0x54
   15ce0:	mov	r1, r5
   15ce4:	ldr	r5, [sp, #28]
   15ce8:	mov	r3, fp
   15cec:	mov	r2, sl
   15cf0:	str	r0, [r4, #4]
   15cf4:	ldr	r4, [sp, #80]	; 0x50
   15cf8:	str	lr, [sp, #8]
   15cfc:	ldr	lr, [sp, #40]	; 0x28
   15d00:	str	r5, [sp, #4]
   15d04:	str	ip, [sp, #16]
   15d08:	str	r4, [sp, #12]
   15d0c:	str	lr, [sp]
   15d10:	mov	r7, r0
   15d14:	bl	12578 <close@plt+0x161c>
   15d18:	ldr	r3, [sp, #24]
   15d1c:	mov	r0, r7
   15d20:	str	r3, [r8]
   15d24:	add	sp, sp, #92	; 0x5c
   15d28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d2c:	mov	r3, #8
   15d30:	str	r3, [sp]
   15d34:	add	r1, sp, #36	; 0x24
   15d38:	rsb	r2, r2, #1
   15d3c:	ldr	r0, [sp, #28]
   15d40:	mvn	r3, #-2147483648	; 0x80000000
   15d44:	bl	17154 <close@plt+0x61f8>
   15d48:	mov	r4, r0
   15d4c:	ldm	r5, {r0, r1}
   15d50:	str	r4, [r7]
   15d54:	stm	r4, {r0, r1}
   15d58:	b	15c3c <close@plt+0x4ce0>
   15d5c:	bl	10f50 <abort@plt>
   15d60:	muleq	r2, r0, r1
   15d64:	andeq	r9, r2, r8, lsl r1
   15d68:	andeq	r9, r2, r0, asr #3
   15d6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d70:	sub	sp, sp, #52	; 0x34
   15d74:	mov	r5, r0
   15d78:	mov	sl, r1
   15d7c:	mov	fp, r2
   15d80:	bl	10e9c <__errno_location@plt>
   15d84:	ldr	r4, [pc, #404]	; 15f20 <close@plt+0x4fc4>
   15d88:	cmn	r5, #-2147483647	; 0x80000001
   15d8c:	ldr	r6, [r4]
   15d90:	mov	r8, r0
   15d94:	movne	r0, #0
   15d98:	moveq	r0, #1
   15d9c:	ldr	r3, [r8]
   15da0:	orrs	r0, r0, r5, lsr #31
   15da4:	str	r3, [sp, #28]
   15da8:	bne	15f1c <close@plt+0x4fc0>
   15dac:	ldr	r2, [r4, #4]
   15db0:	cmp	r5, r2
   15db4:	blt	15e14 <close@plt+0x4eb8>
   15db8:	add	r7, r4, #8
   15dbc:	cmp	r6, r7
   15dc0:	str	r2, [sp, #44]	; 0x2c
   15dc4:	beq	15eec <close@plt+0x4f90>
   15dc8:	mov	r3, #8
   15dcc:	sub	r2, r5, r2
   15dd0:	mov	r0, r6
   15dd4:	str	r3, [sp]
   15dd8:	add	r2, r2, #1
   15ddc:	mvn	r3, #-2147483648	; 0x80000000
   15de0:	add	r1, sp, #44	; 0x2c
   15de4:	bl	17154 <close@plt+0x61f8>
   15de8:	mov	r6, r0
   15dec:	str	r0, [r4]
   15df0:	ldr	r0, [r4, #4]
   15df4:	ldr	r2, [sp, #44]	; 0x2c
   15df8:	mov	r1, #0
   15dfc:	sub	r2, r2, r0
   15e00:	add	r0, r6, r0, lsl #3
   15e04:	lsl	r2, r2, #3
   15e08:	bl	10eb4 <memset@plt>
   15e0c:	ldr	r3, [sp, #44]	; 0x2c
   15e10:	str	r3, [r4, #4]
   15e14:	ldr	r2, [r4, #56]	; 0x38
   15e18:	add	r3, r6, r5, lsl #3
   15e1c:	ldr	r1, [r4, #20]
   15e20:	ldr	r7, [r3, #4]
   15e24:	ldr	r9, [r6, r5, lsl #3]
   15e28:	ldr	ip, [r4, #60]	; 0x3c
   15e2c:	str	r3, [sp, #32]
   15e30:	ldr	r3, [r4, #16]
   15e34:	str	r2, [sp, #12]
   15e38:	ldr	r2, [pc, #228]	; 15f24 <close@plt+0x4fc8>
   15e3c:	orr	r1, r1, #1
   15e40:	str	r1, [sp, #36]	; 0x24
   15e44:	str	r1, [sp, #4]
   15e48:	str	r2, [sp, #8]
   15e4c:	str	r3, [sp]
   15e50:	mov	r0, r7
   15e54:	mov	r1, r9
   15e58:	str	ip, [sp, #16]
   15e5c:	mov	r3, fp
   15e60:	mov	r2, sl
   15e64:	bl	12578 <close@plt+0x161c>
   15e68:	cmp	r9, r0
   15e6c:	bhi	15ed8 <close@plt+0x4f7c>
   15e70:	ldr	r3, [pc, #176]	; 15f28 <close@plt+0x4fcc>
   15e74:	add	r9, r0, #1
   15e78:	cmp	r7, r3
   15e7c:	str	r9, [r6, r5, lsl #3]
   15e80:	beq	15e8c <close@plt+0x4f30>
   15e84:	mov	r0, r7
   15e88:	bl	122dc <close@plt+0x1380>
   15e8c:	mov	r0, r9
   15e90:	bl	16f38 <close@plt+0x5fdc>
   15e94:	ldr	ip, [sp, #32]
   15e98:	ldr	lr, [r4, #60]	; 0x3c
   15e9c:	ldr	r5, [r4, #56]	; 0x38
   15ea0:	mov	r3, fp
   15ea4:	mov	r2, sl
   15ea8:	mov	r1, r9
   15eac:	str	r0, [ip, #4]
   15eb0:	ldr	ip, [r4, #16]
   15eb4:	ldr	r4, [pc, #104]	; 15f24 <close@plt+0x4fc8>
   15eb8:	str	lr, [sp, #16]
   15ebc:	str	r4, [sp, #8]
   15ec0:	ldr	r4, [sp, #36]	; 0x24
   15ec4:	str	r5, [sp, #12]
   15ec8:	str	r4, [sp, #4]
   15ecc:	str	ip, [sp]
   15ed0:	mov	r7, r0
   15ed4:	bl	12578 <close@plt+0x161c>
   15ed8:	ldr	r3, [sp, #28]
   15edc:	mov	r0, r7
   15ee0:	str	r3, [r8]
   15ee4:	add	sp, sp, #52	; 0x34
   15ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15eec:	mov	r3, #8
   15ef0:	sub	r2, r5, r2
   15ef4:	str	r3, [sp]
   15ef8:	add	r1, sp, #44	; 0x2c
   15efc:	add	r2, r2, #1
   15f00:	mvn	r3, #-2147483648	; 0x80000000
   15f04:	bl	17154 <close@plt+0x61f8>
   15f08:	mov	r6, r0
   15f0c:	ldm	r7, {r0, r1}
   15f10:	str	r6, [r4]
   15f14:	stm	r6, {r0, r1}
   15f18:	b	15df0 <close@plt+0x4e94>
   15f1c:	bl	10f50 <abort@plt>
   15f20:	andeq	r9, r2, r8, lsl r1
   15f24:	andeq	r9, r2, r0, lsr r1
   15f28:	andeq	r9, r2, r0, asr #3
   15f2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f30:	sub	sp, sp, #44	; 0x2c
   15f34:	mov	r9, r0
   15f38:	mov	sl, r1
   15f3c:	bl	10e9c <__errno_location@plt>
   15f40:	ldr	r4, [pc, #360]	; 160b0 <close@plt+0x5154>
   15f44:	ldr	r2, [r4, #4]
   15f48:	ldr	r5, [r4]
   15f4c:	cmp	r2, #0
   15f50:	ldr	r3, [r0]
   15f54:	mov	r7, r0
   15f58:	str	r3, [sp, #24]
   15f5c:	bgt	15fb8 <close@plt+0x505c>
   15f60:	add	r6, r4, #8
   15f64:	cmp	r5, r6
   15f68:	str	r2, [sp, #36]	; 0x24
   15f6c:	beq	16080 <close@plt+0x5124>
   15f70:	mov	r3, #8
   15f74:	mov	r0, r5
   15f78:	str	r3, [sp]
   15f7c:	rsb	r2, r2, #1
   15f80:	mvn	r3, #-2147483648	; 0x80000000
   15f84:	add	r1, sp, #36	; 0x24
   15f88:	bl	17154 <close@plt+0x61f8>
   15f8c:	mov	r5, r0
   15f90:	str	r0, [r4]
   15f94:	ldr	r0, [r4, #4]
   15f98:	ldr	r2, [sp, #36]	; 0x24
   15f9c:	mov	r1, #0
   15fa0:	sub	r2, r2, r0
   15fa4:	add	r0, r5, r0, lsl #3
   15fa8:	lsl	r2, r2, #3
   15fac:	bl	10eb4 <memset@plt>
   15fb0:	ldr	r3, [sp, #36]	; 0x24
   15fb4:	str	r3, [r4, #4]
   15fb8:	ldr	r1, [r4, #20]
   15fbc:	ldr	r8, [r5]
   15fc0:	ldr	r6, [r5, #4]
   15fc4:	ldr	r2, [r4, #56]	; 0x38
   15fc8:	ldr	r3, [r4, #16]
   15fcc:	ldr	ip, [r4, #60]	; 0x3c
   15fd0:	ldr	fp, [pc, #220]	; 160b4 <close@plt+0x5158>
   15fd4:	orr	r1, r1, #1
   15fd8:	str	r1, [sp, #28]
   15fdc:	str	r1, [sp, #4]
   15fe0:	str	r2, [sp, #12]
   15fe4:	str	r3, [sp]
   15fe8:	mov	r1, r8
   15fec:	mov	r0, r6
   15ff0:	str	ip, [sp, #16]
   15ff4:	str	fp, [sp, #8]
   15ff8:	mov	r3, sl
   15ffc:	mov	r2, r9
   16000:	bl	12578 <close@plt+0x161c>
   16004:	cmp	r8, r0
   16008:	bhi	1606c <close@plt+0x5110>
   1600c:	ldr	r3, [pc, #164]	; 160b8 <close@plt+0x515c>
   16010:	add	r8, r0, #1
   16014:	cmp	r6, r3
   16018:	str	r8, [r5]
   1601c:	beq	16028 <close@plt+0x50cc>
   16020:	mov	r0, r6
   16024:	bl	122dc <close@plt+0x1380>
   16028:	mov	r0, r8
   1602c:	bl	16f38 <close@plt+0x5fdc>
   16030:	ldr	lr, [r4, #60]	; 0x3c
   16034:	ldr	ip, [r4, #16]
   16038:	mov	r3, sl
   1603c:	mov	r2, r9
   16040:	mov	r1, r8
   16044:	str	r0, [r5, #4]
   16048:	ldr	r5, [r4, #56]	; 0x38
   1604c:	ldr	r4, [sp, #28]
   16050:	str	fp, [sp, #8]
   16054:	str	r4, [sp, #4]
   16058:	str	lr, [sp, #16]
   1605c:	str	r5, [sp, #12]
   16060:	str	ip, [sp]
   16064:	mov	r6, r0
   16068:	bl	12578 <close@plt+0x161c>
   1606c:	ldr	r3, [sp, #24]
   16070:	mov	r0, r6
   16074:	str	r3, [r7]
   16078:	add	sp, sp, #44	; 0x2c
   1607c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16080:	mov	r3, #8
   16084:	str	r3, [sp]
   16088:	add	r1, sp, #36	; 0x24
   1608c:	rsb	r2, r2, #1
   16090:	mvn	r3, #-2147483648	; 0x80000000
   16094:	mov	r0, #0
   16098:	bl	17154 <close@plt+0x61f8>
   1609c:	mov	r5, r0
   160a0:	ldm	r6, {r0, r1}
   160a4:	str	r5, [r4]
   160a8:	stm	r5, {r0, r1}
   160ac:	b	15f94 <close@plt+0x5038>
   160b0:	andeq	r9, r2, r8, lsl r1
   160b4:	andeq	r9, r2, r0, lsr r1
   160b8:	andeq	r9, r2, r0, asr #3
   160bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160c0:	sub	sp, sp, #44	; 0x2c
   160c4:	mov	r5, r0
   160c8:	mov	sl, r1
   160cc:	bl	10e9c <__errno_location@plt>
   160d0:	ldr	r4, [pc, #396]	; 16264 <close@plt+0x5308>
   160d4:	cmn	r5, #-2147483647	; 0x80000001
   160d8:	ldr	r6, [r4]
   160dc:	mov	r8, r0
   160e0:	movne	r0, #0
   160e4:	moveq	r0, #1
   160e8:	ldr	r3, [r8]
   160ec:	orrs	r0, r0, r5, lsr #31
   160f0:	str	r3, [sp, #24]
   160f4:	bne	16260 <close@plt+0x5304>
   160f8:	ldr	r2, [r4, #4]
   160fc:	cmp	r5, r2
   16100:	blt	16160 <close@plt+0x5204>
   16104:	add	r7, r4, #8
   16108:	cmp	r6, r7
   1610c:	str	r2, [sp, #36]	; 0x24
   16110:	beq	16230 <close@plt+0x52d4>
   16114:	mov	r3, #8
   16118:	sub	r2, r5, r2
   1611c:	mov	r0, r6
   16120:	str	r3, [sp]
   16124:	add	r2, r2, #1
   16128:	mvn	r3, #-2147483648	; 0x80000000
   1612c:	add	r1, sp, #36	; 0x24
   16130:	bl	17154 <close@plt+0x61f8>
   16134:	mov	r6, r0
   16138:	str	r0, [r4]
   1613c:	ldr	r0, [r4, #4]
   16140:	ldr	r2, [sp, #36]	; 0x24
   16144:	mov	r1, #0
   16148:	sub	r2, r2, r0
   1614c:	add	r0, r6, r0, lsl #3
   16150:	lsl	r2, r2, #3
   16154:	bl	10eb4 <memset@plt>
   16158:	ldr	r3, [sp, #36]	; 0x24
   1615c:	str	r3, [r4, #4]
   16160:	ldr	r2, [r4, #56]	; 0x38
   16164:	add	fp, r6, r5, lsl #3
   16168:	ldr	r1, [r4, #20]
   1616c:	ldr	r9, [r6, r5, lsl #3]
   16170:	ldr	r7, [fp, #4]
   16174:	ldr	r3, [r4, #16]
   16178:	ldr	ip, [r4, #60]	; 0x3c
   1617c:	str	r2, [sp, #12]
   16180:	ldr	r2, [pc, #224]	; 16268 <close@plt+0x530c>
   16184:	orr	r1, r1, #1
   16188:	str	r1, [sp, #28]
   1618c:	str	r1, [sp, #4]
   16190:	str	r2, [sp, #8]
   16194:	str	r3, [sp]
   16198:	mov	r0, r7
   1619c:	mov	r1, r9
   161a0:	str	ip, [sp, #16]
   161a4:	mvn	r3, #0
   161a8:	mov	r2, sl
   161ac:	bl	12578 <close@plt+0x161c>
   161b0:	cmp	r9, r0
   161b4:	bhi	1621c <close@plt+0x52c0>
   161b8:	ldr	r3, [pc, #172]	; 1626c <close@plt+0x5310>
   161bc:	add	r9, r0, #1
   161c0:	cmp	r7, r3
   161c4:	str	r9, [r6, r5, lsl #3]
   161c8:	beq	161d4 <close@plt+0x5278>
   161cc:	mov	r0, r7
   161d0:	bl	122dc <close@plt+0x1380>
   161d4:	mov	r0, r9
   161d8:	bl	16f38 <close@plt+0x5fdc>
   161dc:	ldr	ip, [r4, #60]	; 0x3c
   161e0:	ldr	r3, [r4, #16]
   161e4:	ldr	lr, [r4, #56]	; 0x38
   161e8:	ldr	r4, [pc, #120]	; 16268 <close@plt+0x530c>
   161ec:	mov	r2, sl
   161f0:	mov	r1, r9
   161f4:	str	r0, [fp, #4]
   161f8:	str	r4, [sp, #8]
   161fc:	ldr	r4, [sp, #28]
   16200:	str	r3, [sp]
   16204:	str	r4, [sp, #4]
   16208:	str	ip, [sp, #16]
   1620c:	str	lr, [sp, #12]
   16210:	mvn	r3, #0
   16214:	mov	r7, r0
   16218:	bl	12578 <close@plt+0x161c>
   1621c:	ldr	r3, [sp, #24]
   16220:	mov	r0, r7
   16224:	str	r3, [r8]
   16228:	add	sp, sp, #44	; 0x2c
   1622c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16230:	mov	r3, #8
   16234:	sub	r2, r5, r2
   16238:	str	r3, [sp]
   1623c:	add	r1, sp, #36	; 0x24
   16240:	add	r2, r2, #1
   16244:	mvn	r3, #-2147483648	; 0x80000000
   16248:	bl	17154 <close@plt+0x61f8>
   1624c:	mov	r6, r0
   16250:	ldm	r7, {r0, r1}
   16254:	str	r6, [r4]
   16258:	stm	r6, {r0, r1}
   1625c:	b	1613c <close@plt+0x51e0>
   16260:	bl	10f50 <abort@plt>
   16264:	andeq	r9, r2, r8, lsl r1
   16268:	andeq	r9, r2, r0, lsr r1
   1626c:	andeq	r9, r2, r0, asr #3
   16270:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16274:	sub	sp, sp, #44	; 0x2c
   16278:	mov	sl, r0
   1627c:	bl	10e9c <__errno_location@plt>
   16280:	ldr	r4, [pc, #348]	; 163e4 <close@plt+0x5488>
   16284:	ldr	r2, [r4, #4]
   16288:	ldr	r5, [r4]
   1628c:	cmp	r2, #0
   16290:	ldr	r3, [r0]
   16294:	mov	r8, r0
   16298:	str	r3, [sp, #28]
   1629c:	bgt	162f8 <close@plt+0x539c>
   162a0:	add	r6, r4, #8
   162a4:	cmp	r5, r6
   162a8:	str	r2, [sp, #36]	; 0x24
   162ac:	beq	163b4 <close@plt+0x5458>
   162b0:	mov	r3, #8
   162b4:	mov	r0, r5
   162b8:	str	r3, [sp]
   162bc:	rsb	r2, r2, #1
   162c0:	mvn	r3, #-2147483648	; 0x80000000
   162c4:	add	r1, sp, #36	; 0x24
   162c8:	bl	17154 <close@plt+0x61f8>
   162cc:	mov	r5, r0
   162d0:	str	r0, [r4]
   162d4:	ldr	r0, [r4, #4]
   162d8:	ldr	r2, [sp, #36]	; 0x24
   162dc:	mov	r1, #0
   162e0:	sub	r2, r2, r0
   162e4:	add	r0, r5, r0, lsl #3
   162e8:	lsl	r2, r2, #3
   162ec:	bl	10eb4 <memset@plt>
   162f0:	ldr	r3, [sp, #36]	; 0x24
   162f4:	str	r3, [r4, #4]
   162f8:	ldr	r7, [r4, #20]
   162fc:	ldr	r9, [r5]
   16300:	ldr	r6, [r5, #4]
   16304:	ldr	r2, [r4, #56]	; 0x38
   16308:	ldr	r3, [r4, #16]
   1630c:	ldr	ip, [r4, #60]	; 0x3c
   16310:	ldr	fp, [pc, #208]	; 163e8 <close@plt+0x548c>
   16314:	orr	r7, r7, #1
   16318:	str	r2, [sp, #12]
   1631c:	str	r3, [sp]
   16320:	str	r7, [sp, #4]
   16324:	mov	r1, r9
   16328:	mov	r0, r6
   1632c:	str	ip, [sp, #16]
   16330:	str	fp, [sp, #8]
   16334:	mvn	r3, #0
   16338:	mov	r2, sl
   1633c:	bl	12578 <close@plt+0x161c>
   16340:	cmp	r9, r0
   16344:	bhi	163a0 <close@plt+0x5444>
   16348:	ldr	r3, [pc, #156]	; 163ec <close@plt+0x5490>
   1634c:	add	r9, r0, #1
   16350:	cmp	r6, r3
   16354:	str	r9, [r5]
   16358:	beq	16364 <close@plt+0x5408>
   1635c:	mov	r0, r6
   16360:	bl	122dc <close@plt+0x1380>
   16364:	mov	r0, r9
   16368:	bl	16f38 <close@plt+0x5fdc>
   1636c:	ldr	ip, [r4, #60]	; 0x3c
   16370:	ldr	r3, [r4, #16]
   16374:	ldr	lr, [r4, #56]	; 0x38
   16378:	mov	r2, sl
   1637c:	mov	r1, r9
   16380:	str	r0, [r5, #4]
   16384:	str	r3, [sp]
   16388:	stmib	sp, {r7, fp}
   1638c:	str	ip, [sp, #16]
   16390:	str	lr, [sp, #12]
   16394:	mvn	r3, #0
   16398:	mov	r6, r0
   1639c:	bl	12578 <close@plt+0x161c>
   163a0:	ldr	r3, [sp, #28]
   163a4:	mov	r0, r6
   163a8:	str	r3, [r8]
   163ac:	add	sp, sp, #44	; 0x2c
   163b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163b4:	mov	r3, #8
   163b8:	str	r3, [sp]
   163bc:	add	r1, sp, #36	; 0x24
   163c0:	rsb	r2, r2, #1
   163c4:	mvn	r3, #-2147483648	; 0x80000000
   163c8:	mov	r0, #0
   163cc:	bl	17154 <close@plt+0x61f8>
   163d0:	mov	r5, r0
   163d4:	ldm	r6, {r0, r1}
   163d8:	str	r5, [r4]
   163dc:	stm	r5, {r0, r1}
   163e0:	b	162d4 <close@plt+0x5378>
   163e4:	andeq	r9, r2, r8, lsl r1
   163e8:	andeq	r9, r2, r0, lsr r1
   163ec:	andeq	r9, r2, r0, asr #3
   163f0:	push	{r4, r5, r6, r7, r8, lr}
   163f4:	mov	r8, r0
   163f8:	ldr	r5, [pc, #84]	; 16454 <close@plt+0x54f8>
   163fc:	mov	r7, r1
   16400:	mov	r4, r2
   16404:	mov	r2, r4
   16408:	mov	r1, r7
   1640c:	mov	r0, r8
   16410:	bl	10d10 <read@plt>
   16414:	subs	r6, r0, #0
   16418:	bge	1644c <close@plt+0x54f0>
   1641c:	bl	10e9c <__errno_location@plt>
   16420:	ldr	r3, [r0]
   16424:	cmp	r3, #4
   16428:	beq	16404 <close@plt+0x54a8>
   1642c:	cmp	r4, r5
   16430:	movls	r2, #0
   16434:	movhi	r2, #1
   16438:	cmp	r3, #22
   1643c:	movne	r2, #0
   16440:	cmp	r2, #0
   16444:	mov	r4, r5
   16448:	bne	16404 <close@plt+0x54a8>
   1644c:	mov	r0, r6
   16450:	pop	{r4, r5, r6, r7, r8, pc}
   16454:	svcvc	0x00f00000	; IMB
   16458:	push	{r4, r5, r6, r7, r8, lr}
   1645c:	mov	r8, r0
   16460:	ldr	r5, [pc, #84]	; 164bc <close@plt+0x5560>
   16464:	mov	r7, r1
   16468:	mov	r4, r2
   1646c:	mov	r2, r4
   16470:	mov	r1, r7
   16474:	mov	r0, r8
   16478:	bl	10ecc <write@plt>
   1647c:	subs	r6, r0, #0
   16480:	bge	164b4 <close@plt+0x5558>
   16484:	bl	10e9c <__errno_location@plt>
   16488:	ldr	r3, [r0]
   1648c:	cmp	r3, #4
   16490:	beq	1646c <close@plt+0x5510>
   16494:	cmp	r4, r5
   16498:	sub	r3, r3, #22
   1649c:	clz	r3, r3
   164a0:	lsr	r3, r3, #5
   164a4:	movls	r3, #0
   164a8:	cmp	r3, #0
   164ac:	mov	r4, r5
   164b0:	bne	1646c <close@plt+0x5510>
   164b4:	mov	r0, r6
   164b8:	pop	{r4, r5, r6, r7, r8, pc}
   164bc:	svcvc	0x00f00000	; IMB
   164c0:	push	{r4, r5, r6, lr}
   164c4:	sub	sp, sp, #32
   164c8:	cmp	r1, #0
   164cc:	mov	r4, r0
   164d0:	ldr	r5, [sp, #48]	; 0x30
   164d4:	ldr	r6, [sp, #52]	; 0x34
   164d8:	beq	167f0 <close@plt+0x5894>
   164dc:	stm	sp, {r2, r3}
   164e0:	mov	r3, r1
   164e4:	ldr	r2, [pc, #808]	; 16814 <close@plt+0x58b8>
   164e8:	mov	r1, #1
   164ec:	bl	10ee4 <__fprintf_chk@plt>
   164f0:	mov	r2, #5
   164f4:	ldr	r1, [pc, #796]	; 16818 <close@plt+0x58bc>
   164f8:	mov	r0, #0
   164fc:	bl	10d88 <dcgettext@plt>
   16500:	ldr	r3, [pc, #788]	; 1681c <close@plt+0x58c0>
   16504:	ldr	r2, [pc, #788]	; 16820 <close@plt+0x58c4>
   16508:	str	r3, [sp]
   1650c:	mov	r1, #1
   16510:	mov	r3, r0
   16514:	mov	r0, r4
   16518:	bl	10ee4 <__fprintf_chk@plt>
   1651c:	mov	r1, r4
   16520:	mov	r0, #10
   16524:	bl	10d7c <fputc_unlocked@plt>
   16528:	mov	r2, #5
   1652c:	ldr	r1, [pc, #752]	; 16824 <close@plt+0x58c8>
   16530:	mov	r0, #0
   16534:	bl	10d88 <dcgettext@plt>
   16538:	mov	r1, #1
   1653c:	ldr	r3, [pc, #740]	; 16828 <close@plt+0x58cc>
   16540:	mov	r2, r0
   16544:	mov	r0, r4
   16548:	bl	10ee4 <__fprintf_chk@plt>
   1654c:	mov	r1, r4
   16550:	mov	r0, #10
   16554:	bl	10d7c <fputc_unlocked@plt>
   16558:	cmp	r6, #9
   1655c:	ldrls	pc, [pc, r6, lsl #2]
   16560:	b	16808 <close@plt+0x58ac>
   16564:	andeq	r6, r1, r8, ror #11
   16568:	strdeq	r6, [r1], -r0
   1656c:	andeq	r6, r1, ip, lsl r6
   16570:	andeq	r6, r1, r0, asr r6
   16574:	andeq	r6, r1, ip, lsl #13
   16578:	andeq	r6, r1, r8, asr #13
   1657c:	andeq	r6, r1, r4, lsl #14
   16580:	andeq	r6, r1, r8, asr #14
   16584:	muleq	r1, r8, r7
   16588:	andeq	r6, r1, ip, lsl #11
   1658c:	ldr	r1, [pc, #664]	; 1682c <close@plt+0x58d0>
   16590:	mov	r2, #5
   16594:	mov	r0, #0
   16598:	bl	10d88 <dcgettext@plt>
   1659c:	ldr	ip, [r5, #32]
   165a0:	ldr	r1, [r5, #28]
   165a4:	ldr	r2, [r5, #24]
   165a8:	ldr	r3, [r5]
   165ac:	ldr	r6, [r5, #20]
   165b0:	str	ip, [sp, #28]
   165b4:	ldr	lr, [r5, #16]
   165b8:	str	r1, [sp, #24]
   165bc:	ldr	ip, [r5, #12]
   165c0:	str	r2, [sp, #20]
   165c4:	ldr	r1, [r5, #8]
   165c8:	ldr	r2, [r5, #4]
   165cc:	str	r6, [sp, #16]
   165d0:	stmib	sp, {r1, ip, lr}
   165d4:	mov	r1, #1
   165d8:	str	r2, [sp]
   165dc:	mov	r2, r0
   165e0:	mov	r0, r4
   165e4:	bl	10ee4 <__fprintf_chk@plt>
   165e8:	add	sp, sp, #32
   165ec:	pop	{r4, r5, r6, pc}
   165f0:	mov	r2, #5
   165f4:	ldr	r1, [pc, #564]	; 16830 <close@plt+0x58d4>
   165f8:	mov	r0, #0
   165fc:	bl	10d88 <dcgettext@plt>
   16600:	ldr	r3, [r5]
   16604:	mov	r1, #1
   16608:	mov	r2, r0
   1660c:	mov	r0, r4
   16610:	add	sp, sp, #32
   16614:	pop	{r4, r5, r6, lr}
   16618:	b	10ee4 <__fprintf_chk@plt>
   1661c:	mov	r2, #5
   16620:	ldr	r1, [pc, #524]	; 16834 <close@plt+0x58d8>
   16624:	mov	r0, #0
   16628:	bl	10d88 <dcgettext@plt>
   1662c:	ldr	r2, [r5, #4]
   16630:	ldr	r3, [r5]
   16634:	mov	r1, #1
   16638:	str	r2, [sp, #48]	; 0x30
   1663c:	mov	r2, r0
   16640:	mov	r0, r4
   16644:	add	sp, sp, #32
   16648:	pop	{r4, r5, r6, lr}
   1664c:	b	10ee4 <__fprintf_chk@plt>
   16650:	mov	r2, #5
   16654:	ldr	r1, [pc, #476]	; 16838 <close@plt+0x58dc>
   16658:	mov	r0, #0
   1665c:	bl	10d88 <dcgettext@plt>
   16660:	ldr	r1, [r5, #8]
   16664:	ldr	r2, [r5, #4]
   16668:	ldr	r3, [r5]
   1666c:	str	r1, [sp, #52]	; 0x34
   16670:	str	r2, [sp, #48]	; 0x30
   16674:	mov	r1, #1
   16678:	mov	r2, r0
   1667c:	mov	r0, r4
   16680:	add	sp, sp, #32
   16684:	pop	{r4, r5, r6, lr}
   16688:	b	10ee4 <__fprintf_chk@plt>
   1668c:	mov	r2, #5
   16690:	ldr	r1, [pc, #420]	; 1683c <close@plt+0x58e0>
   16694:	mov	r0, #0
   16698:	bl	10d88 <dcgettext@plt>
   1669c:	ldr	r1, [r5, #8]
   166a0:	ldr	ip, [r5, #12]
   166a4:	ldr	r2, [r5, #4]
   166a8:	ldr	r3, [r5]
   166ac:	stmib	sp, {r1, ip}
   166b0:	str	r2, [sp]
   166b4:	mov	r1, #1
   166b8:	mov	r2, r0
   166bc:	mov	r0, r4
   166c0:	bl	10ee4 <__fprintf_chk@plt>
   166c4:	b	165e8 <close@plt+0x568c>
   166c8:	mov	r2, #5
   166cc:	ldr	r1, [pc, #364]	; 16840 <close@plt+0x58e4>
   166d0:	mov	r0, #0
   166d4:	bl	10d88 <dcgettext@plt>
   166d8:	add	r1, r5, #8
   166dc:	ldr	r2, [r5, #4]
   166e0:	ldm	r1, {r1, ip, lr}
   166e4:	ldr	r3, [r5]
   166e8:	str	r2, [sp]
   166ec:	stmib	sp, {r1, ip, lr}
   166f0:	mov	r1, #1
   166f4:	mov	r2, r0
   166f8:	mov	r0, r4
   166fc:	bl	10ee4 <__fprintf_chk@plt>
   16700:	b	165e8 <close@plt+0x568c>
   16704:	mov	r2, #5
   16708:	ldr	r1, [pc, #308]	; 16844 <close@plt+0x58e8>
   1670c:	mov	r0, #0
   16710:	bl	10d88 <dcgettext@plt>
   16714:	add	r1, r5, #8
   16718:	ldr	r2, [r5, #4]
   1671c:	ldm	r1, {r1, ip, lr}
   16720:	ldr	r6, [r5, #20]
   16724:	ldr	r3, [r5]
   16728:	stmib	sp, {r1, ip, lr}
   1672c:	mov	r1, #1
   16730:	str	r2, [sp]
   16734:	str	r6, [sp, #16]
   16738:	mov	r2, r0
   1673c:	mov	r0, r4
   16740:	bl	10ee4 <__fprintf_chk@plt>
   16744:	b	165e8 <close@plt+0x568c>
   16748:	mov	r2, #5
   1674c:	ldr	r1, [pc, #244]	; 16848 <close@plt+0x58ec>
   16750:	mov	r0, #0
   16754:	bl	10d88 <dcgettext@plt>
   16758:	ldr	r2, [r5, #24]
   1675c:	ldr	r3, [r5]
   16760:	ldr	r6, [r5, #20]
   16764:	ldr	lr, [r5, #16]
   16768:	ldr	ip, [r5, #12]
   1676c:	str	r2, [sp, #20]
   16770:	ldr	r1, [r5, #8]
   16774:	ldr	r2, [r5, #4]
   16778:	str	r6, [sp, #16]
   1677c:	stmib	sp, {r1, ip, lr}
   16780:	mov	r1, #1
   16784:	str	r2, [sp]
   16788:	mov	r2, r0
   1678c:	mov	r0, r4
   16790:	bl	10ee4 <__fprintf_chk@plt>
   16794:	b	165e8 <close@plt+0x568c>
   16798:	mov	r2, #5
   1679c:	ldr	r1, [pc, #168]	; 1684c <close@plt+0x58f0>
   167a0:	mov	r0, #0
   167a4:	bl	10d88 <dcgettext@plt>
   167a8:	ldr	r1, [r5, #28]
   167ac:	ldr	r2, [r5, #24]
   167b0:	ldr	r3, [r5]
   167b4:	ldr	r6, [r5, #20]
   167b8:	ldr	lr, [r5, #16]
   167bc:	str	r1, [sp, #24]
   167c0:	ldr	ip, [r5, #12]
   167c4:	str	r2, [sp, #20]
   167c8:	ldr	r1, [r5, #8]
   167cc:	ldr	r2, [r5, #4]
   167d0:	str	r6, [sp, #16]
   167d4:	stmib	sp, {r1, ip, lr}
   167d8:	mov	r1, #1
   167dc:	str	r2, [sp]
   167e0:	mov	r2, r0
   167e4:	mov	r0, r4
   167e8:	bl	10ee4 <__fprintf_chk@plt>
   167ec:	b	165e8 <close@plt+0x568c>
   167f0:	str	r3, [sp]
   167f4:	mov	r1, #1
   167f8:	mov	r3, r2
   167fc:	ldr	r2, [pc, #76]	; 16850 <close@plt+0x58f4>
   16800:	bl	10ee4 <__fprintf_chk@plt>
   16804:	b	164f0 <close@plt+0x5594>
   16808:	mov	r2, #5
   1680c:	ldr	r1, [pc, #64]	; 16854 <close@plt+0x58f8>
   16810:	b	16594 <close@plt+0x5638>
   16814:	muleq	r1, r0, r7
   16818:	andeq	r8, r1, r4, lsr #15
   1681c:	andeq	r0, r0, r6, ror #15
   16820:	andeq	r8, r1, ip, ror sl
   16824:	andeq	r8, r1, r8, lsr #15
   16828:	andeq	r8, r1, r4, asr r8
   1682c:	andeq	r8, r1, r4, lsl #19
   16830:	andeq	r8, r1, r8, ror r8
   16834:	andeq	r8, r1, r8, lsl #17
   16838:	andeq	r8, r1, r0, lsr #17
   1683c:			; <UNDEFINED> instruction: 0x000188bc
   16840:	ldrdeq	r8, [r1], -ip
   16844:	andeq	r8, r1, r0, lsl #18
   16848:	andeq	r8, r1, r8, lsr #18
   1684c:	andeq	r8, r1, r4, asr r9
   16850:	muleq	r1, ip, r7
   16854:			; <UNDEFINED> instruction: 0x000189b8
   16858:	push	{r4, r5, lr}
   1685c:	sub	sp, sp, #12
   16860:	ldr	r5, [sp, #24]
   16864:	ldr	ip, [r5]
   16868:	cmp	ip, #0
   1686c:	beq	16888 <close@plt+0x592c>
   16870:	mov	lr, r5
   16874:	mov	ip, #0
   16878:	ldr	r4, [lr, #4]!
   1687c:	add	ip, ip, #1
   16880:	cmp	r4, #0
   16884:	bne	16878 <close@plt+0x591c>
   16888:	stm	sp, {r5, ip}
   1688c:	bl	164c0 <close@plt+0x5564>
   16890:	add	sp, sp, #12
   16894:	pop	{r4, r5, pc}
   16898:	push	{r4, r5, lr}
   1689c:	sub	sp, sp, #76	; 0x4c
   168a0:	mov	r5, r0
   168a4:	ldr	ip, [sp, #88]	; 0x58
   168a8:	ldr	r0, [ip]
   168ac:	cmp	r0, #0
   168b0:	str	r0, [sp, #32]
   168b4:	beq	16c88 <close@plt+0x5d2c>
   168b8:	ldr	r0, [ip, #4]
   168bc:	cmp	r0, #0
   168c0:	str	r0, [sp, #36]	; 0x24
   168c4:	beq	16c90 <close@plt+0x5d34>
   168c8:	ldr	r0, [ip, #8]
   168cc:	cmp	r0, #0
   168d0:	str	r0, [sp, #40]	; 0x28
   168d4:	beq	16c98 <close@plt+0x5d3c>
   168d8:	ldr	r0, [ip, #12]
   168dc:	cmp	r0, #0
   168e0:	str	r0, [sp, #44]	; 0x2c
   168e4:	beq	16ca0 <close@plt+0x5d44>
   168e8:	ldr	r0, [ip, #16]
   168ec:	cmp	r0, #0
   168f0:	str	r0, [sp, #48]	; 0x30
   168f4:	beq	16ca8 <close@plt+0x5d4c>
   168f8:	ldr	r0, [ip, #20]
   168fc:	cmp	r0, #0
   16900:	str	r0, [sp, #52]	; 0x34
   16904:	beq	16cb0 <close@plt+0x5d54>
   16908:	ldr	r0, [ip, #24]
   1690c:	cmp	r0, #0
   16910:	str	r0, [sp, #56]	; 0x38
   16914:	beq	16cb8 <close@plt+0x5d5c>
   16918:	ldr	r0, [ip, #28]
   1691c:	cmp	r0, #0
   16920:	str	r0, [sp, #60]	; 0x3c
   16924:	beq	16cc0 <close@plt+0x5d64>
   16928:	ldr	r0, [ip, #32]
   1692c:	cmp	r0, #0
   16930:	str	r0, [sp, #64]	; 0x40
   16934:	beq	16cc8 <close@plt+0x5d6c>
   16938:	ldr	r0, [ip, #36]	; 0x24
   1693c:	cmp	r0, #0
   16940:	movne	r4, #10
   16944:	moveq	r4, #9
   16948:	cmp	r1, #0
   1694c:	beq	16c60 <close@plt+0x5d04>
   16950:	stm	sp, {r2, r3}
   16954:	mov	r0, r5
   16958:	mov	r3, r1
   1695c:	ldr	r2, [pc, #876]	; 16cd0 <close@plt+0x5d74>
   16960:	mov	r1, #1
   16964:	bl	10ee4 <__fprintf_chk@plt>
   16968:	mov	r2, #5
   1696c:	ldr	r1, [pc, #864]	; 16cd4 <close@plt+0x5d78>
   16970:	mov	r0, #0
   16974:	bl	10d88 <dcgettext@plt>
   16978:	ldr	r3, [pc, #856]	; 16cd8 <close@plt+0x5d7c>
   1697c:	ldr	r2, [pc, #856]	; 16cdc <close@plt+0x5d80>
   16980:	str	r3, [sp]
   16984:	mov	r1, #1
   16988:	mov	r3, r0
   1698c:	mov	r0, r5
   16990:	bl	10ee4 <__fprintf_chk@plt>
   16994:	mov	r1, r5
   16998:	mov	r0, #10
   1699c:	bl	10d7c <fputc_unlocked@plt>
   169a0:	mov	r2, #5
   169a4:	ldr	r1, [pc, #820]	; 16ce0 <close@plt+0x5d84>
   169a8:	mov	r0, #0
   169ac:	bl	10d88 <dcgettext@plt>
   169b0:	mov	r1, #1
   169b4:	ldr	r3, [pc, #808]	; 16ce4 <close@plt+0x5d88>
   169b8:	mov	r2, r0
   169bc:	mov	r0, r5
   169c0:	bl	10ee4 <__fprintf_chk@plt>
   169c4:	mov	r1, r5
   169c8:	mov	r0, #10
   169cc:	bl	10d7c <fputc_unlocked@plt>
   169d0:	cmp	r4, #9
   169d4:	ldrls	pc, [pc, r4, lsl #2]
   169d8:	b	16c7c <close@plt+0x5d20>
   169dc:	andeq	r6, r1, r0, ror #20
   169e0:	andeq	r6, r1, r8, ror #20
   169e4:	muleq	r1, r4, sl
   169e8:	andeq	r6, r1, r8, asr #21
   169ec:	andeq	r6, r1, r0, lsl #22
   169f0:	andeq	r6, r1, ip, lsr fp
   169f4:	andeq	r6, r1, r8, ror fp
   169f8:			; <UNDEFINED> instruction: 0x00016bbc
   169fc:	andeq	r6, r1, r8, lsl #24
   16a00:	andeq	r6, r1, r4, lsl #20
   16a04:	ldr	r1, [pc, #732]	; 16ce8 <close@plt+0x5d8c>
   16a08:	mov	r2, #5
   16a0c:	mov	r0, #0
   16a10:	bl	10d88 <dcgettext@plt>
   16a14:	ldr	ip, [sp, #64]	; 0x40
   16a18:	ldr	r1, [sp, #60]	; 0x3c
   16a1c:	ldr	r2, [sp, #56]	; 0x38
   16a20:	ldr	lr, [sp, #48]	; 0x30
   16a24:	str	ip, [sp, #28]
   16a28:	str	r1, [sp, #24]
   16a2c:	ldr	ip, [sp, #44]	; 0x2c
   16a30:	ldr	r1, [sp, #40]	; 0x28
   16a34:	ldr	r4, [sp, #52]	; 0x34
   16a38:	str	r2, [sp, #20]
   16a3c:	ldr	r2, [sp, #36]	; 0x24
   16a40:	stmib	sp, {r1, ip, lr}
   16a44:	mov	r1, #1
   16a48:	str	r2, [sp]
   16a4c:	ldr	r3, [sp, #32]
   16a50:	str	r4, [sp, #16]
   16a54:	mov	r2, r0
   16a58:	mov	r0, r5
   16a5c:	bl	10ee4 <__fprintf_chk@plt>
   16a60:	add	sp, sp, #76	; 0x4c
   16a64:	pop	{r4, r5, pc}
   16a68:	mov	r2, #5
   16a6c:	ldr	r1, [pc, #632]	; 16cec <close@plt+0x5d90>
   16a70:	mov	r0, #0
   16a74:	bl	10d88 <dcgettext@plt>
   16a78:	ldr	r3, [sp, #32]
   16a7c:	mov	r1, #1
   16a80:	mov	r2, r0
   16a84:	mov	r0, r5
   16a88:	add	sp, sp, #76	; 0x4c
   16a8c:	pop	{r4, r5, lr}
   16a90:	b	10ee4 <__fprintf_chk@plt>
   16a94:	mov	r2, #5
   16a98:	ldr	r1, [pc, #592]	; 16cf0 <close@plt+0x5d94>
   16a9c:	mov	r0, #0
   16aa0:	bl	10d88 <dcgettext@plt>
   16aa4:	ldr	r2, [sp, #36]	; 0x24
   16aa8:	ldr	r3, [sp, #32]
   16aac:	str	r2, [sp, #88]	; 0x58
   16ab0:	mov	r1, #1
   16ab4:	mov	r2, r0
   16ab8:	mov	r0, r5
   16abc:	add	sp, sp, #76	; 0x4c
   16ac0:	pop	{r4, r5, lr}
   16ac4:	b	10ee4 <__fprintf_chk@plt>
   16ac8:	mov	r2, #5
   16acc:	ldr	r1, [pc, #544]	; 16cf4 <close@plt+0x5d98>
   16ad0:	mov	r0, #0
   16ad4:	bl	10d88 <dcgettext@plt>
   16ad8:	ldr	r1, [sp, #40]	; 0x28
   16adc:	ldr	r2, [sp, #36]	; 0x24
   16ae0:	str	r1, [sp, #4]
   16ae4:	str	r2, [sp]
   16ae8:	ldr	r3, [sp, #32]
   16aec:	mov	r1, #1
   16af0:	mov	r2, r0
   16af4:	mov	r0, r5
   16af8:	bl	10ee4 <__fprintf_chk@plt>
   16afc:	b	16a60 <close@plt+0x5b04>
   16b00:	mov	r2, #5
   16b04:	ldr	r1, [pc, #492]	; 16cf8 <close@plt+0x5d9c>
   16b08:	mov	r0, #0
   16b0c:	bl	10d88 <dcgettext@plt>
   16b10:	ldr	r1, [sp, #40]	; 0x28
   16b14:	ldr	ip, [sp, #44]	; 0x2c
   16b18:	ldr	r2, [sp, #36]	; 0x24
   16b1c:	ldr	r3, [sp, #32]
   16b20:	stmib	sp, {r1, ip}
   16b24:	str	r2, [sp]
   16b28:	mov	r1, #1
   16b2c:	mov	r2, r0
   16b30:	mov	r0, r5
   16b34:	bl	10ee4 <__fprintf_chk@plt>
   16b38:	b	16a60 <close@plt+0x5b04>
   16b3c:	mov	r2, #5
   16b40:	ldr	r1, [pc, #436]	; 16cfc <close@plt+0x5da0>
   16b44:	mov	r0, #0
   16b48:	bl	10d88 <dcgettext@plt>
   16b4c:	add	r1, sp, #40	; 0x28
   16b50:	ldr	r2, [sp, #36]	; 0x24
   16b54:	ldm	r1, {r1, ip, lr}
   16b58:	ldr	r3, [sp, #32]
   16b5c:	str	r2, [sp]
   16b60:	stmib	sp, {r1, ip, lr}
   16b64:	mov	r1, #1
   16b68:	mov	r2, r0
   16b6c:	mov	r0, r5
   16b70:	bl	10ee4 <__fprintf_chk@plt>
   16b74:	b	16a60 <close@plt+0x5b04>
   16b78:	mov	r2, #5
   16b7c:	ldr	r1, [pc, #380]	; 16d00 <close@plt+0x5da4>
   16b80:	mov	r0, #0
   16b84:	bl	10d88 <dcgettext@plt>
   16b88:	add	r1, sp, #40	; 0x28
   16b8c:	ldr	r2, [sp, #36]	; 0x24
   16b90:	ldm	r1, {r1, ip, lr}
   16b94:	ldr	r4, [sp, #52]	; 0x34
   16b98:	str	r2, [sp]
   16b9c:	stmib	sp, {r1, ip, lr}
   16ba0:	mov	r1, #1
   16ba4:	ldr	r3, [sp, #32]
   16ba8:	str	r4, [sp, #16]
   16bac:	mov	r2, r0
   16bb0:	mov	r0, r5
   16bb4:	bl	10ee4 <__fprintf_chk@plt>
   16bb8:	b	16a60 <close@plt+0x5b04>
   16bbc:	mov	r2, #5
   16bc0:	ldr	r1, [pc, #316]	; 16d04 <close@plt+0x5da8>
   16bc4:	mov	r0, #0
   16bc8:	bl	10d88 <dcgettext@plt>
   16bcc:	add	r1, sp, #40	; 0x28
   16bd0:	ldr	r2, [sp, #56]	; 0x38
   16bd4:	ldm	r1, {r1, ip, lr}
   16bd8:	ldr	r4, [sp, #52]	; 0x34
   16bdc:	str	r2, [sp, #20]
   16be0:	ldr	r2, [sp, #36]	; 0x24
   16be4:	stmib	sp, {r1, ip, lr}
   16be8:	mov	r1, #1
   16bec:	str	r2, [sp]
   16bf0:	ldr	r3, [sp, #32]
   16bf4:	str	r4, [sp, #16]
   16bf8:	mov	r2, r0
   16bfc:	mov	r0, r5
   16c00:	bl	10ee4 <__fprintf_chk@plt>
   16c04:	b	16a60 <close@plt+0x5b04>
   16c08:	mov	r2, #5
   16c0c:	ldr	r1, [pc, #244]	; 16d08 <close@plt+0x5dac>
   16c10:	mov	r0, #0
   16c14:	bl	10d88 <dcgettext@plt>
   16c18:	ldr	r1, [sp, #60]	; 0x3c
   16c1c:	ldr	r2, [sp, #56]	; 0x38
   16c20:	ldr	lr, [sp, #48]	; 0x30
   16c24:	ldr	ip, [sp, #44]	; 0x2c
   16c28:	str	r1, [sp, #24]
   16c2c:	ldr	r1, [sp, #40]	; 0x28
   16c30:	ldr	r4, [sp, #52]	; 0x34
   16c34:	str	r2, [sp, #20]
   16c38:	ldr	r2, [sp, #36]	; 0x24
   16c3c:	stmib	sp, {r1, ip, lr}
   16c40:	mov	r1, #1
   16c44:	str	r2, [sp]
   16c48:	ldr	r3, [sp, #32]
   16c4c:	str	r4, [sp, #16]
   16c50:	mov	r2, r0
   16c54:	mov	r0, r5
   16c58:	bl	10ee4 <__fprintf_chk@plt>
   16c5c:	b	16a60 <close@plt+0x5b04>
   16c60:	str	r3, [sp]
   16c64:	mov	r1, #1
   16c68:	mov	r3, r2
   16c6c:	mov	r0, r5
   16c70:	ldr	r2, [pc, #148]	; 16d0c <close@plt+0x5db0>
   16c74:	bl	10ee4 <__fprintf_chk@plt>
   16c78:	b	16968 <close@plt+0x5a0c>
   16c7c:	mov	r2, #5
   16c80:	ldr	r1, [pc, #136]	; 16d10 <close@plt+0x5db4>
   16c84:	b	16a0c <close@plt+0x5ab0>
   16c88:	mov	r4, r0
   16c8c:	b	16948 <close@plt+0x59ec>
   16c90:	mov	r4, #1
   16c94:	b	16948 <close@plt+0x59ec>
   16c98:	mov	r4, #2
   16c9c:	b	16948 <close@plt+0x59ec>
   16ca0:	mov	r4, #3
   16ca4:	b	16948 <close@plt+0x59ec>
   16ca8:	mov	r4, #4
   16cac:	b	16948 <close@plt+0x59ec>
   16cb0:	mov	r4, #5
   16cb4:	b	16948 <close@plt+0x59ec>
   16cb8:	mov	r4, #6
   16cbc:	b	16948 <close@plt+0x59ec>
   16cc0:	mov	r4, #7
   16cc4:	b	16948 <close@plt+0x59ec>
   16cc8:	mov	r4, #8
   16ccc:	b	16948 <close@plt+0x59ec>
   16cd0:	muleq	r1, r0, r7
   16cd4:	andeq	r8, r1, r4, lsr #15
   16cd8:	andeq	r0, r0, r6, ror #15
   16cdc:	andeq	r8, r1, ip, ror sl
   16ce0:	andeq	r8, r1, r8, lsr #15
   16ce4:	andeq	r8, r1, r4, asr r8
   16ce8:	andeq	r8, r1, r4, lsl #19
   16cec:	andeq	r8, r1, r8, ror r8
   16cf0:	andeq	r8, r1, r8, lsl #17
   16cf4:	andeq	r8, r1, r0, lsr #17
   16cf8:			; <UNDEFINED> instruction: 0x000188bc
   16cfc:	ldrdeq	r8, [r1], -ip
   16d00:	andeq	r8, r1, r0, lsl #18
   16d04:	andeq	r8, r1, r8, lsr #18
   16d08:	andeq	r8, r1, r4, asr r9
   16d0c:	muleq	r1, ip, r7
   16d10:			; <UNDEFINED> instruction: 0x000189b8
   16d14:	push	{r3}		; (str r3, [sp, #-4]!)
   16d18:	push	{lr}		; (str lr, [sp, #-4]!)
   16d1c:	sub	sp, sp, #56	; 0x38
   16d20:	add	r3, sp, #64	; 0x40
   16d24:	ldr	ip, [sp, #64]	; 0x40
   16d28:	str	r3, [sp, #12]
   16d2c:	cmp	ip, #0
   16d30:	str	ip, [sp, #16]
   16d34:	beq	16dcc <close@plt+0x5e70>
   16d38:	ldr	ip, [sp, #68]	; 0x44
   16d3c:	cmp	ip, #0
   16d40:	str	ip, [sp, #20]
   16d44:	beq	16dec <close@plt+0x5e90>
   16d48:	ldr	ip, [sp, #72]	; 0x48
   16d4c:	cmp	ip, #0
   16d50:	str	ip, [sp, #24]
   16d54:	beq	16df4 <close@plt+0x5e98>
   16d58:	ldr	ip, [sp, #76]	; 0x4c
   16d5c:	cmp	ip, #0
   16d60:	str	ip, [sp, #28]
   16d64:	beq	16dfc <close@plt+0x5ea0>
   16d68:	ldr	ip, [sp, #80]	; 0x50
   16d6c:	cmp	ip, #0
   16d70:	str	ip, [sp, #32]
   16d74:	beq	16e04 <close@plt+0x5ea8>
   16d78:	ldr	ip, [sp, #84]	; 0x54
   16d7c:	cmp	ip, #0
   16d80:	str	ip, [sp, #36]	; 0x24
   16d84:	beq	16e0c <close@plt+0x5eb0>
   16d88:	ldr	ip, [sp, #88]	; 0x58
   16d8c:	cmp	ip, #0
   16d90:	str	ip, [sp, #40]	; 0x28
   16d94:	beq	16e14 <close@plt+0x5eb8>
   16d98:	ldr	ip, [sp, #92]	; 0x5c
   16d9c:	cmp	ip, #0
   16da0:	str	ip, [sp, #44]	; 0x2c
   16da4:	beq	16e1c <close@plt+0x5ec0>
   16da8:	ldr	ip, [sp, #96]	; 0x60
   16dac:	cmp	ip, #0
   16db0:	str	ip, [sp, #48]	; 0x30
   16db4:	beq	16e24 <close@plt+0x5ec8>
   16db8:	ldr	ip, [sp, #100]	; 0x64
   16dbc:	cmp	ip, #0
   16dc0:	str	ip, [sp, #52]	; 0x34
   16dc4:	movne	ip, #10
   16dc8:	moveq	ip, #9
   16dcc:	add	r3, sp, #16
   16dd0:	stm	sp, {r3, ip}
   16dd4:	ldr	r3, [sp, #60]	; 0x3c
   16dd8:	bl	164c0 <close@plt+0x5564>
   16ddc:	add	sp, sp, #56	; 0x38
   16de0:	pop	{lr}		; (ldr lr, [sp], #4)
   16de4:	add	sp, sp, #4
   16de8:	bx	lr
   16dec:	mov	ip, #1
   16df0:	b	16dcc <close@plt+0x5e70>
   16df4:	mov	ip, #2
   16df8:	b	16dcc <close@plt+0x5e70>
   16dfc:	mov	ip, #3
   16e00:	b	16dcc <close@plt+0x5e70>
   16e04:	mov	ip, #4
   16e08:	b	16dcc <close@plt+0x5e70>
   16e0c:	mov	ip, #5
   16e10:	b	16dcc <close@plt+0x5e70>
   16e14:	mov	ip, #6
   16e18:	b	16dcc <close@plt+0x5e70>
   16e1c:	mov	ip, #7
   16e20:	b	16dcc <close@plt+0x5e70>
   16e24:	mov	ip, #8
   16e28:	b	16dcc <close@plt+0x5e70>
   16e2c:	ldr	r3, [pc, #116]	; 16ea8 <close@plt+0x5f4c>
   16e30:	push	{r4, lr}
   16e34:	mov	r0, #10
   16e38:	ldr	r1, [r3]
   16e3c:	bl	10d7c <fputc_unlocked@plt>
   16e40:	mov	r2, #5
   16e44:	ldr	r1, [pc, #96]	; 16eac <close@plt+0x5f50>
   16e48:	mov	r0, #0
   16e4c:	bl	10d88 <dcgettext@plt>
   16e50:	ldr	r2, [pc, #88]	; 16eb0 <close@plt+0x5f54>
   16e54:	mov	r1, r0
   16e58:	mov	r0, #1
   16e5c:	bl	10ec0 <__printf_chk@plt>
   16e60:	mov	r2, #5
   16e64:	ldr	r1, [pc, #72]	; 16eb4 <close@plt+0x5f58>
   16e68:	mov	r0, #0
   16e6c:	bl	10d88 <dcgettext@plt>
   16e70:	ldr	r3, [pc, #64]	; 16eb8 <close@plt+0x5f5c>
   16e74:	ldr	r2, [pc, #64]	; 16ebc <close@plt+0x5f60>
   16e78:	mov	r1, r0
   16e7c:	mov	r0, #1
   16e80:	bl	10ec0 <__printf_chk@plt>
   16e84:	mov	r2, #5
   16e88:	ldr	r1, [pc, #48]	; 16ec0 <close@plt+0x5f64>
   16e8c:	mov	r0, #0
   16e90:	bl	10d88 <dcgettext@plt>
   16e94:	ldr	r2, [pc, #40]	; 16ec4 <close@plt+0x5f68>
   16e98:	pop	{r4, lr}
   16e9c:	mov	r1, r0
   16ea0:	mov	r0, #1
   16ea4:	b	10ec0 <__printf_chk@plt>
   16ea8:	andeq	r9, r2, ip, ror #2
   16eac:	strdeq	r8, [r1], -r4
   16eb0:	andeq	r8, r1, r8, lsl #20
   16eb4:	andeq	r8, r1, r0, lsr #20
   16eb8:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   16ebc:	andeq	r8, r1, r0, lsr #8
   16ec0:	andeq	r8, r1, r4, lsr sl
   16ec4:	andeq	r8, r1, ip, asr sl
   16ec8:	push	{r4, lr}
   16ecc:	bl	10f38 <aligned_alloc@plt>
   16ed0:	cmp	r0, #0
   16ed4:	popne	{r4, pc}
   16ed8:	bl	17558 <close@plt+0x65fc>
   16edc:	push	{r4, r5, r6, lr}
   16ee0:	mov	r6, r0
   16ee4:	mov	r5, r1
   16ee8:	mov	r4, r2
   16eec:	bl	1790c <close@plt+0x69b0>
   16ef0:	cmp	r0, #0
   16ef4:	popne	{r4, r5, r6, pc}
   16ef8:	cmp	r6, #0
   16efc:	beq	16f0c <close@plt+0x5fb0>
   16f00:	cmp	r5, #0
   16f04:	cmpne	r4, #0
   16f08:	popeq	{r4, r5, r6, pc}
   16f0c:	bl	17558 <close@plt+0x65fc>
   16f10:	push	{r4, lr}
   16f14:	bl	175e0 <close@plt+0x6684>
   16f18:	cmp	r0, #0
   16f1c:	popne	{r4, pc}
   16f20:	bl	17558 <close@plt+0x65fc>
   16f24:	push	{r4, lr}
   16f28:	bl	175e0 <close@plt+0x6684>
   16f2c:	cmp	r0, #0
   16f30:	popne	{r4, pc}
   16f34:	bl	17558 <close@plt+0x65fc>
   16f38:	push	{r4, lr}
   16f3c:	bl	175e0 <close@plt+0x6684>
   16f40:	cmp	r0, #0
   16f44:	popne	{r4, pc}
   16f48:	bl	17558 <close@plt+0x65fc>
   16f4c:	push	{r4, r5, r6, lr}
   16f50:	mov	r5, r0
   16f54:	mov	r4, r1
   16f58:	bl	1760c <close@plt+0x66b0>
   16f5c:	cmp	r0, #0
   16f60:	popne	{r4, r5, r6, pc}
   16f64:	adds	r4, r4, #0
   16f68:	movne	r4, #1
   16f6c:	cmp	r5, #0
   16f70:	orreq	r4, r4, #1
   16f74:	cmp	r4, #0
   16f78:	popeq	{r4, r5, r6, pc}
   16f7c:	bl	17558 <close@plt+0x65fc>
   16f80:	push	{r4, lr}
   16f84:	cmp	r1, #0
   16f88:	orreq	r1, r1, #1
   16f8c:	bl	1760c <close@plt+0x66b0>
   16f90:	cmp	r0, #0
   16f94:	popne	{r4, pc}
   16f98:	bl	17558 <close@plt+0x65fc>
   16f9c:	push	{r4, r5, r6, lr}
   16fa0:	mov	r6, r0
   16fa4:	mov	r5, r1
   16fa8:	mov	r4, r2
   16fac:	bl	1790c <close@plt+0x69b0>
   16fb0:	cmp	r0, #0
   16fb4:	popne	{r4, r5, r6, pc}
   16fb8:	cmp	r6, #0
   16fbc:	beq	16fcc <close@plt+0x6070>
   16fc0:	cmp	r5, #0
   16fc4:	cmpne	r4, #0
   16fc8:	popeq	{r4, r5, r6, pc}
   16fcc:	bl	17558 <close@plt+0x65fc>
   16fd0:	cmp	r2, #0
   16fd4:	cmpne	r1, #0
   16fd8:	moveq	r2, #1
   16fdc:	moveq	r1, r2
   16fe0:	push	{r4, lr}
   16fe4:	bl	1790c <close@plt+0x69b0>
   16fe8:	cmp	r0, #0
   16fec:	popne	{r4, pc}
   16ff0:	bl	17558 <close@plt+0x65fc>
   16ff4:	push	{r4, lr}
   16ff8:	mov	r2, r1
   16ffc:	mov	r1, r0
   17000:	mov	r0, #0
   17004:	bl	1790c <close@plt+0x69b0>
   17008:	cmp	r0, #0
   1700c:	popne	{r4, pc}
   17010:	bl	17558 <close@plt+0x65fc>
   17014:	cmp	r1, #0
   17018:	cmpne	r0, #0
   1701c:	moveq	r2, #1
   17020:	movne	r2, r1
   17024:	moveq	r1, r2
   17028:	movne	r1, r0
   1702c:	push	{r4, lr}
   17030:	mov	r0, #0
   17034:	bl	1790c <close@plt+0x69b0>
   17038:	cmp	r0, #0
   1703c:	popne	{r4, pc}
   17040:	bl	17558 <close@plt+0x65fc>
   17044:	cmp	r0, #0
   17048:	push	{r4, r5, r6, lr}
   1704c:	mov	r5, r1
   17050:	ldr	r4, [r1]
   17054:	beq	17090 <close@plt+0x6134>
   17058:	lsr	r2, r4, #1
   1705c:	add	r3, r2, #1
   17060:	mvn	r3, r3
   17064:	cmp	r4, r3
   17068:	bhi	170ac <close@plt+0x6150>
   1706c:	add	r4, r4, #1
   17070:	add	r4, r4, r2
   17074:	mov	r1, r4
   17078:	mov	r2, #1
   1707c:	bl	1790c <close@plt+0x69b0>
   17080:	cmp	r0, #0
   17084:	beq	170b0 <close@plt+0x6154>
   17088:	str	r4, [r5]
   1708c:	pop	{r4, r5, r6, pc}
   17090:	cmp	r4, #0
   17094:	moveq	r4, #64	; 0x40
   17098:	mov	r1, r4
   1709c:	mov	r2, #1
   170a0:	bl	1790c <close@plt+0x69b0>
   170a4:	cmp	r0, #0
   170a8:	bne	17088 <close@plt+0x612c>
   170ac:	bl	17558 <close@plt+0x65fc>
   170b0:	cmp	r4, #0
   170b4:	bne	170ac <close@plt+0x6150>
   170b8:	str	r4, [r5]
   170bc:	pop	{r4, r5, r6, pc}
   170c0:	cmp	r0, #0
   170c4:	push	{r4, r5, r6, lr}
   170c8:	mov	r5, r1
   170cc:	ldr	r4, [r1]
   170d0:	mov	r6, r2
   170d4:	beq	17118 <close@plt+0x61bc>
   170d8:	lsr	r1, r4, #1
   170dc:	add	r3, r1, #1
   170e0:	mvn	r3, r3
   170e4:	cmp	r4, r3
   170e8:	bhi	17150 <close@plt+0x61f4>
   170ec:	add	r4, r4, #1
   170f0:	add	r4, r4, r1
   170f4:	mov	r1, r4
   170f8:	bl	1790c <close@plt+0x69b0>
   170fc:	cmp	r0, #0
   17100:	bne	17110 <close@plt+0x61b4>
   17104:	cmp	r4, #0
   17108:	cmpne	r6, #0
   1710c:	bne	17150 <close@plt+0x61f4>
   17110:	str	r4, [r5]
   17114:	pop	{r4, r5, r6, pc}
   17118:	cmp	r4, #0
   1711c:	bne	17138 <close@plt+0x61dc>
   17120:	mov	r1, r2
   17124:	mov	r0, #64	; 0x40
   17128:	bl	17a4c <close@plt+0x6af0>
   1712c:	cmp	r0, #0
   17130:	movne	r4, r0
   17134:	addeq	r4, r0, #1
   17138:	mov	r2, r6
   1713c:	mov	r1, r4
   17140:	mov	r0, #0
   17144:	bl	1790c <close@plt+0x69b0>
   17148:	cmp	r0, #0
   1714c:	bne	17110 <close@plt+0x61b4>
   17150:	bl	17558 <close@plt+0x65fc>
   17154:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17158:	sub	sp, sp, #12
   1715c:	ldr	r6, [r1]
   17160:	mov	r8, r1
   17164:	mov	r9, r0
   17168:	asrs	r4, r6, #1
   1716c:	mov	sl, r2
   17170:	mov	fp, r3
   17174:	ldr	r7, [sp, #48]	; 0x30
   17178:	bmi	172f4 <close@plt+0x6398>
   1717c:	mvn	r1, #-2147483648	; 0x80000000
   17180:	sub	r1, r1, r4
   17184:	cmp	r6, r1
   17188:	movle	r1, #0
   1718c:	movgt	r1, #1
   17190:	mvn	r3, fp
   17194:	cmp	r1, #0
   17198:	addeq	r4, r4, r6
   1719c:	mvnne	r4, #-2147483648	; 0x80000000
   171a0:	lsr	r3, r3, #31
   171a4:	cmp	fp, r4
   171a8:	movge	r2, #0
   171ac:	andlt	r2, r3, #1
   171b0:	cmp	r2, #0
   171b4:	beq	172a4 <close@plt+0x6348>
   171b8:	cmp	r7, #0
   171bc:	blt	1738c <close@plt+0x6430>
   171c0:	bne	17384 <close@plt+0x6428>
   171c4:	mov	r5, #64	; 0x40
   171c8:	mov	r1, r7
   171cc:	mov	r0, r5
   171d0:	str	r3, [sp, #4]
   171d4:	bl	17c58 <close@plt+0x6cfc>
   171d8:	mov	r1, r7
   171dc:	mov	r4, r0
   171e0:	mov	r0, r5
   171e4:	bl	17e78 <close@plt+0x6f1c>
   171e8:	ldr	r3, [sp, #4]
   171ec:	sub	r5, r5, r1
   171f0:	cmp	r9, #0
   171f4:	sub	r2, r4, r6
   171f8:	streq	r9, [r8]
   171fc:	cmp	r2, sl
   17200:	bge	17284 <close@plt+0x6328>
   17204:	cmp	sl, #0
   17208:	blt	17324 <close@plt+0x63c8>
   1720c:	cmp	r6, #0
   17210:	blt	17230 <close@plt+0x62d4>
   17214:	mvn	r2, #-2147483648	; 0x80000000
   17218:	sub	r2, r2, sl
   1721c:	cmp	r6, r2
   17220:	movle	r2, #0
   17224:	movgt	r2, #1
   17228:	cmp	r2, #0
   1722c:	bne	17320 <close@plt+0x63c4>
   17230:	add	r6, r6, sl
   17234:	cmp	fp, r6
   17238:	movge	r3, #0
   1723c:	andlt	r3, r3, #1
   17240:	cmp	r3, #0
   17244:	mov	r4, r6
   17248:	bne	17320 <close@plt+0x63c4>
   1724c:	cmp	r7, #0
   17250:	blt	17338 <close@plt+0x63dc>
   17254:	beq	17280 <close@plt+0x6324>
   17258:	cmp	r6, #0
   1725c:	blt	173dc <close@plt+0x6480>
   17260:	mov	r1, r7
   17264:	mvn	r0, #-2147483648	; 0x80000000
   17268:	bl	17c58 <close@plt+0x6cfc>
   1726c:	cmp	r6, r0
   17270:	movle	r0, #0
   17274:	movgt	r0, #1
   17278:	cmp	r0, #0
   1727c:	bne	17320 <close@plt+0x63c4>
   17280:	mul	r5, r6, r7
   17284:	mov	r1, r5
   17288:	mov	r0, r9
   1728c:	bl	1760c <close@plt+0x66b0>
   17290:	cmp	r0, #0
   17294:	beq	17308 <close@plt+0x63ac>
   17298:	str	r4, [r8]
   1729c:	add	sp, sp, #12
   172a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   172a4:	cmp	r7, #0
   172a8:	blt	17364 <close@plt+0x6408>
   172ac:	beq	171c4 <close@plt+0x6268>
   172b0:	cmp	r4, #0
   172b4:	blt	17394 <close@plt+0x6438>
   172b8:	mov	r1, r7
   172bc:	mvn	r0, #-2147483648	; 0x80000000
   172c0:	str	r3, [sp, #4]
   172c4:	bl	17c58 <close@plt+0x6cfc>
   172c8:	ldr	r3, [sp, #4]
   172cc:	cmp	r0, r4
   172d0:	movge	r0, #0
   172d4:	movlt	r0, #1
   172d8:	cmp	r0, #0
   172dc:	mvnne	r5, #-2147483648	; 0x80000000
   172e0:	bne	171c8 <close@plt+0x626c>
   172e4:	mul	r5, r7, r4
   172e8:	cmp	r5, #63	; 0x3f
   172ec:	bgt	171f0 <close@plt+0x6294>
   172f0:	b	171c4 <close@plt+0x6268>
   172f4:	rsb	r1, r4, #-2147483648	; 0x80000000
   172f8:	cmp	r6, r1
   172fc:	movge	r1, #0
   17300:	movlt	r1, #1
   17304:	b	17190 <close@plt+0x6234>
   17308:	adds	r5, r5, #0
   1730c:	movne	r5, #1
   17310:	cmp	r9, #0
   17314:	orreq	r5, r5, #1
   17318:	cmp	r5, #0
   1731c:	beq	17298 <close@plt+0x633c>
   17320:	bl	17558 <close@plt+0x65fc>
   17324:	rsb	r2, sl, #-2147483648	; 0x80000000
   17328:	cmp	r6, r2
   1732c:	movge	r2, #0
   17330:	movlt	r2, #1
   17334:	b	17228 <close@plt+0x62cc>
   17338:	cmp	r6, #0
   1733c:	blt	173c0 <close@plt+0x6464>
   17340:	cmn	r7, #1
   17344:	beq	17280 <close@plt+0x6324>
   17348:	mov	r1, r7
   1734c:	mov	r0, #-2147483648	; 0x80000000
   17350:	bl	17c58 <close@plt+0x6cfc>
   17354:	cmp	r6, r0
   17358:	movle	r0, #0
   1735c:	movgt	r0, #1
   17360:	b	17278 <close@plt+0x631c>
   17364:	cmp	r4, #0
   17368:	blt	17400 <close@plt+0x64a4>
   1736c:	cmn	r7, #1
   17370:	beq	172e4 <close@plt+0x6388>
   17374:	str	r3, [sp, #4]
   17378:	mov	r1, r7
   1737c:	mov	r0, #-2147483648	; 0x80000000
   17380:	b	172c4 <close@plt+0x6368>
   17384:	mov	r4, fp
   17388:	b	172b8 <close@plt+0x635c>
   1738c:	mov	r4, fp
   17390:	b	1736c <close@plt+0x6410>
   17394:	cmn	r4, #1
   17398:	beq	172e4 <close@plt+0x6388>
   1739c:	mov	r1, r4
   173a0:	mov	r0, #-2147483648	; 0x80000000
   173a4:	str	r3, [sp, #4]
   173a8:	bl	17c58 <close@plt+0x6cfc>
   173ac:	ldr	r3, [sp, #4]
   173b0:	cmp	r7, r0
   173b4:	movle	r0, #0
   173b8:	movgt	r0, #1
   173bc:	b	172d8 <close@plt+0x637c>
   173c0:	mov	r1, r7
   173c4:	mvn	r0, #-2147483648	; 0x80000000
   173c8:	bl	17c58 <close@plt+0x6cfc>
   173cc:	cmp	r6, r0
   173d0:	movge	r0, #0
   173d4:	movlt	r0, #1
   173d8:	b	17278 <close@plt+0x631c>
   173dc:	cmn	r6, #1
   173e0:	beq	17280 <close@plt+0x6324>
   173e4:	mov	r1, r6
   173e8:	mov	r0, #-2147483648	; 0x80000000
   173ec:	bl	17c58 <close@plt+0x6cfc>
   173f0:	cmp	r7, r0
   173f4:	movle	r0, #0
   173f8:	movgt	r0, #1
   173fc:	b	17278 <close@plt+0x631c>
   17400:	mov	r1, r7
   17404:	mvn	r0, #-2147483648	; 0x80000000
   17408:	str	r3, [sp, #4]
   1740c:	bl	17c58 <close@plt+0x6cfc>
   17410:	ldr	r3, [sp, #4]
   17414:	cmp	r0, r4
   17418:	movle	r0, #0
   1741c:	movgt	r0, #1
   17420:	b	172d8 <close@plt+0x637c>
   17424:	push	{r4, lr}
   17428:	mov	r1, #1
   1742c:	bl	17598 <close@plt+0x663c>
   17430:	cmp	r0, #0
   17434:	popne	{r4, pc}
   17438:	bl	17558 <close@plt+0x65fc>
   1743c:	push	{r4, lr}
   17440:	mov	r1, #1
   17444:	bl	17598 <close@plt+0x663c>
   17448:	cmp	r0, #0
   1744c:	popne	{r4, pc}
   17450:	bl	17558 <close@plt+0x65fc>
   17454:	push	{r4, lr}
   17458:	bl	17598 <close@plt+0x663c>
   1745c:	cmp	r0, #0
   17460:	popne	{r4, pc}
   17464:	bl	17558 <close@plt+0x65fc>
   17468:	push	{r4, lr}
   1746c:	bl	17598 <close@plt+0x663c>
   17470:	cmp	r0, #0
   17474:	popne	{r4, pc}
   17478:	bl	17558 <close@plt+0x65fc>
   1747c:	push	{r4, r5, r6, lr}
   17480:	mov	r6, r0
   17484:	mov	r0, r1
   17488:	mov	r4, r1
   1748c:	bl	175e0 <close@plt+0x6684>
   17490:	subs	r5, r0, #0
   17494:	beq	174ac <close@plt+0x6550>
   17498:	mov	r2, r4
   1749c:	mov	r1, r6
   174a0:	bl	10d4c <memcpy@plt>
   174a4:	mov	r0, r5
   174a8:	pop	{r4, r5, r6, pc}
   174ac:	bl	17558 <close@plt+0x65fc>
   174b0:	push	{r4, r5, r6, lr}
   174b4:	mov	r6, r0
   174b8:	mov	r0, r1
   174bc:	mov	r4, r1
   174c0:	bl	175e0 <close@plt+0x6684>
   174c4:	subs	r5, r0, #0
   174c8:	beq	174e0 <close@plt+0x6584>
   174cc:	mov	r2, r4
   174d0:	mov	r1, r6
   174d4:	bl	10d4c <memcpy@plt>
   174d8:	mov	r0, r5
   174dc:	pop	{r4, r5, r6, pc}
   174e0:	bl	17558 <close@plt+0x65fc>
   174e4:	push	{r4, r5, r6, lr}
   174e8:	mov	r6, r0
   174ec:	add	r0, r1, #1
   174f0:	mov	r4, r1
   174f4:	bl	175e0 <close@plt+0x6684>
   174f8:	subs	r5, r0, #0
   174fc:	beq	1751c <close@plt+0x65c0>
   17500:	mov	r3, #0
   17504:	mov	r1, r6
   17508:	strb	r3, [r5, r4]
   1750c:	mov	r2, r4
   17510:	bl	10d4c <memcpy@plt>
   17514:	mov	r0, r5
   17518:	pop	{r4, r5, r6, pc}
   1751c:	bl	17558 <close@plt+0x65fc>
   17520:	push	{r4, r5, r6, lr}
   17524:	mov	r6, r0
   17528:	bl	10e84 <strlen@plt>
   1752c:	add	r4, r0, #1
   17530:	mov	r0, r4
   17534:	bl	175e0 <close@plt+0x6684>
   17538:	subs	r5, r0, #0
   1753c:	beq	17554 <close@plt+0x65f8>
   17540:	mov	r2, r4
   17544:	mov	r1, r6
   17548:	bl	10d4c <memcpy@plt>
   1754c:	mov	r0, r5
   17550:	pop	{r4, r5, r6, pc}
   17554:	bl	17558 <close@plt+0x65fc>
   17558:	ldr	r3, [pc, #44]	; 1758c <close@plt+0x6630>
   1755c:	push	{r4, lr}
   17560:	mov	r2, #5
   17564:	ldr	r1, [pc, #36]	; 17590 <close@plt+0x6634>
   17568:	mov	r0, #0
   1756c:	ldr	r4, [r3]
   17570:	bl	10d88 <dcgettext@plt>
   17574:	ldr	r2, [pc, #24]	; 17594 <close@plt+0x6638>
   17578:	mov	r1, #0
   1757c:	mov	r3, r0
   17580:	mov	r0, r4
   17584:	bl	10e18 <error@plt>
   17588:	bl	10f50 <abort@plt>
   1758c:	andeq	r9, r2, r4, lsl r1
   17590:	andeq	r8, r1, ip, lsr #21
   17594:	andeq	r8, r1, r0, ror r6
   17598:	cmp	r1, #0
   1759c:	cmpne	r0, #0
   175a0:	moveq	r1, #1
   175a4:	moveq	r0, r1
   175a8:	umull	r2, r3, r0, r1
   175ac:	adds	r3, r3, #0
   175b0:	movne	r3, #1
   175b4:	cmp	r2, #0
   175b8:	blt	175c8 <close@plt+0x666c>
   175bc:	cmp	r3, #0
   175c0:	bne	175c8 <close@plt+0x666c>
   175c4:	b	10cd4 <calloc@plt>
   175c8:	push	{r4, lr}
   175cc:	bl	10e9c <__errno_location@plt>
   175d0:	mov	r3, #12
   175d4:	str	r3, [r0]
   175d8:	mov	r0, #0
   175dc:	pop	{r4, pc}
   175e0:	cmp	r0, #0
   175e4:	moveq	r0, #1
   175e8:	cmp	r0, #0
   175ec:	blt	175f4 <close@plt+0x6698>
   175f0:	b	10e30 <malloc@plt>
   175f4:	push	{r4, lr}
   175f8:	bl	10e9c <__errno_location@plt>
   175fc:	mov	r3, #12
   17600:	str	r3, [r0]
   17604:	mov	r0, #0
   17608:	pop	{r4, pc}
   1760c:	cmp	r0, #0
   17610:	beq	17634 <close@plt+0x66d8>
   17614:	cmp	r1, #0
   17618:	push	{lr}		; (str lr, [sp, #-4]!)
   1761c:	sub	sp, sp, #12
   17620:	beq	1763c <close@plt+0x66e0>
   17624:	blt	17654 <close@plt+0x66f8>
   17628:	add	sp, sp, #12
   1762c:	pop	{lr}		; (ldr lr, [sp], #4)
   17630:	b	10d94 <realloc@plt>
   17634:	mov	r0, r1
   17638:	b	175e0 <close@plt+0x6684>
   1763c:	str	r1, [sp, #4]
   17640:	bl	122dc <close@plt+0x1380>
   17644:	ldr	r3, [sp, #4]
   17648:	mov	r0, r3
   1764c:	add	sp, sp, #12
   17650:	pop	{pc}		; (ldr pc, [sp], #4)
   17654:	bl	10e9c <__errno_location@plt>
   17658:	mov	r2, #12
   1765c:	mov	r3, #0
   17660:	str	r2, [r0]
   17664:	b	17648 <close@plt+0x66ec>
   17668:	push	{r4, r5, r6, lr}
   1766c:	mov	r4, r0
   17670:	bl	10e00 <__fpending@plt>
   17674:	ldr	r5, [r4]
   17678:	and	r5, r5, #32
   1767c:	mov	r6, r0
   17680:	mov	r0, r4
   17684:	bl	176e4 <close@plt+0x6788>
   17688:	cmp	r5, #0
   1768c:	mov	r4, r0
   17690:	bne	176b0 <close@plt+0x6754>
   17694:	cmp	r0, #0
   17698:	beq	176a8 <close@plt+0x674c>
   1769c:	cmp	r6, #0
   176a0:	beq	176cc <close@plt+0x6770>
   176a4:	mvn	r4, #0
   176a8:	mov	r0, r4
   176ac:	pop	{r4, r5, r6, pc}
   176b0:	cmp	r0, #0
   176b4:	bne	176a4 <close@plt+0x6748>
   176b8:	bl	10e9c <__errno_location@plt>
   176bc:	str	r4, [r0]
   176c0:	mvn	r4, #0
   176c4:	mov	r0, r4
   176c8:	pop	{r4, r5, r6, pc}
   176cc:	bl	10e9c <__errno_location@plt>
   176d0:	ldr	r4, [r0]
   176d4:	subs	r4, r4, #9
   176d8:	mvnne	r4, #0
   176dc:	mov	r0, r4
   176e0:	pop	{r4, r5, r6, pc}
   176e4:	push	{r4, r5, lr}
   176e8:	sub	sp, sp, #12
   176ec:	mov	r4, r0
   176f0:	bl	10ed8 <fileno@plt>
   176f4:	cmp	r0, #0
   176f8:	mov	r0, r4
   176fc:	blt	17778 <close@plt+0x681c>
   17700:	bl	10e48 <__freading@plt>
   17704:	cmp	r0, #0
   17708:	bne	17744 <close@plt+0x67e8>
   1770c:	mov	r0, r4
   17710:	bl	17784 <close@plt+0x6828>
   17714:	cmp	r0, #0
   17718:	beq	17774 <close@plt+0x6818>
   1771c:	bl	10e9c <__errno_location@plt>
   17720:	mov	r5, r0
   17724:	mov	r0, r4
   17728:	ldr	r4, [r5]
   1772c:	bl	10ef0 <fclose@plt>
   17730:	cmp	r4, #0
   17734:	mvnne	r0, #0
   17738:	strne	r4, [r5]
   1773c:	add	sp, sp, #12
   17740:	pop	{r4, r5, pc}
   17744:	mov	r0, r4
   17748:	bl	10ed8 <fileno@plt>
   1774c:	mov	r3, #1
   17750:	str	r3, [sp]
   17754:	mov	r2, #0
   17758:	mov	r3, #0
   1775c:	bl	10de8 <lseek64@plt>
   17760:	mvn	r3, #0
   17764:	mvn	r2, #0
   17768:	cmp	r1, r3
   1776c:	cmpeq	r0, r2
   17770:	bne	1770c <close@plt+0x67b0>
   17774:	mov	r0, r4
   17778:	add	sp, sp, #12
   1777c:	pop	{r4, r5, lr}
   17780:	b	10ef0 <fclose@plt>
   17784:	push	{r4, lr}
   17788:	subs	r4, r0, #0
   1778c:	sub	sp, sp, #8
   17790:	beq	177ac <close@plt+0x6850>
   17794:	bl	10e48 <__freading@plt>
   17798:	cmp	r0, #0
   1779c:	beq	177ac <close@plt+0x6850>
   177a0:	ldr	r3, [r4]
   177a4:	tst	r3, #256	; 0x100
   177a8:	bne	177bc <close@plt+0x6860>
   177ac:	mov	r0, r4
   177b0:	add	sp, sp, #8
   177b4:	pop	{r4, lr}
   177b8:	b	10d1c <fflush@plt>
   177bc:	mov	r3, #1
   177c0:	str	r3, [sp]
   177c4:	mov	r2, #0
   177c8:	mov	r3, #0
   177cc:	mov	r0, r4
   177d0:	bl	177e4 <close@plt+0x6888>
   177d4:	mov	r0, r4
   177d8:	add	sp, sp, #8
   177dc:	pop	{r4, lr}
   177e0:	b	10d1c <fflush@plt>
   177e4:	push	{r4, r5, r6, r7, r8, lr}
   177e8:	sub	sp, sp, #8
   177ec:	ldmib	r0, {ip, lr}
   177f0:	mov	r4, r0
   177f4:	ldr	r5, [sp, #32]
   177f8:	cmp	lr, ip
   177fc:	beq	17814 <close@plt+0x68b8>
   17800:	str	r5, [sp, #32]
   17804:	mov	r0, r4
   17808:	add	sp, sp, #8
   1780c:	pop	{r4, r5, r6, r7, r8, lr}
   17810:	b	10efc <fseeko64@plt>
   17814:	ldr	lr, [r0, #20]
   17818:	ldr	ip, [r0, #16]
   1781c:	cmp	lr, ip
   17820:	bne	17800 <close@plt+0x68a4>
   17824:	ldr	r8, [r0, #36]	; 0x24
   17828:	cmp	r8, #0
   1782c:	bne	17800 <close@plt+0x68a4>
   17830:	mov	r6, r2
   17834:	mov	r7, r3
   17838:	bl	10ed8 <fileno@plt>
   1783c:	mov	r2, r6
   17840:	mov	r3, r7
   17844:	str	r5, [sp]
   17848:	bl	10de8 <lseek64@plt>
   1784c:	mvn	r3, #0
   17850:	mvn	r2, #0
   17854:	cmp	r1, r3
   17858:	cmpeq	r0, r2
   1785c:	beq	1787c <close@plt+0x6920>
   17860:	ldr	r3, [r4]
   17864:	strd	r0, [r4, #80]	; 0x50
   17868:	mov	r0, r8
   1786c:	bic	r3, r3, #16
   17870:	str	r3, [r4]
   17874:	add	sp, sp, #8
   17878:	pop	{r4, r5, r6, r7, r8, pc}
   1787c:	mvn	r0, #0
   17880:	b	17874 <close@plt+0x6918>
   17884:	push	{r4, lr}
   17888:	mov	r0, #14
   1788c:	bl	10f20 <nl_langinfo@plt>
   17890:	cmp	r0, #0
   17894:	beq	178ac <close@plt+0x6950>
   17898:	ldrb	r2, [r0]
   1789c:	ldr	r3, [pc, #16]	; 178b4 <close@plt+0x6958>
   178a0:	cmp	r2, #0
   178a4:	moveq	r0, r3
   178a8:	pop	{r4, pc}
   178ac:	ldr	r0, [pc]	; 178b4 <close@plt+0x6958>
   178b0:	pop	{r4, pc}
   178b4:	andeq	r8, r1, r0, asr #21
   178b8:	push	{r4, r5, r6, r7, lr}
   178bc:	subs	r6, r0, #0
   178c0:	sub	sp, sp, #12
   178c4:	addeq	r6, sp, #4
   178c8:	mov	r0, r6
   178cc:	mov	r5, r2
   178d0:	mov	r7, r1
   178d4:	bl	10e0c <mbrtowc@plt>
   178d8:	cmp	r5, #0
   178dc:	cmnne	r0, #3
   178e0:	mov	r4, r0
   178e4:	bls	17900 <close@plt+0x69a4>
   178e8:	mov	r0, #0
   178ec:	bl	17958 <close@plt+0x69fc>
   178f0:	cmp	r0, #0
   178f4:	moveq	r4, #1
   178f8:	ldrbeq	r3, [r7]
   178fc:	streq	r3, [r6]
   17900:	mov	r0, r4
   17904:	add	sp, sp, #12
   17908:	pop	{r4, r5, r6, r7, pc}
   1790c:	push	{r4, r5, r6, lr}
   17910:	subs	r4, r2, #0
   17914:	mov	r6, r0
   17918:	mov	r5, r1
   1791c:	beq	17948 <close@plt+0x69ec>
   17920:	mov	r1, r4
   17924:	mvn	r0, #0
   17928:	bl	17a4c <close@plt+0x6af0>
   1792c:	cmp	r0, r5
   17930:	bcs	17948 <close@plt+0x69ec>
   17934:	bl	10e9c <__errno_location@plt>
   17938:	mov	r3, #12
   1793c:	str	r3, [r0]
   17940:	mov	r0, #0
   17944:	pop	{r4, r5, r6, pc}
   17948:	mul	r1, r5, r4
   1794c:	mov	r0, r6
   17950:	pop	{r4, r5, r6, lr}
   17954:	b	1760c <close@plt+0x66b0>
   17958:	push	{lr}		; (str lr, [sp, #-4]!)
   1795c:	sub	sp, sp, #268	; 0x10c
   17960:	add	r1, sp, #4
   17964:	ldr	r2, [pc, #60]	; 179a8 <close@plt+0x6a4c>
   17968:	bl	179b4 <close@plt+0x6a58>
   1796c:	cmp	r0, #0
   17970:	movne	r0, #0
   17974:	bne	179a0 <close@plt+0x6a44>
   17978:	ldr	r1, [pc, #44]	; 179ac <close@plt+0x6a50>
   1797c:	add	r0, sp, #4
   17980:	bl	10cf8 <strcmp@plt>
   17984:	cmp	r0, #0
   17988:	beq	179a0 <close@plt+0x6a44>
   1798c:	add	r0, sp, #4
   17990:	ldr	r1, [pc, #24]	; 179b0 <close@plt+0x6a54>
   17994:	bl	10cf8 <strcmp@plt>
   17998:	adds	r0, r0, #0
   1799c:	movne	r0, #1
   179a0:	add	sp, sp, #268	; 0x10c
   179a4:	pop	{pc}		; (ldr pc, [sp], #4)
   179a8:	andeq	r0, r0, r1, lsl #2
   179ac:	andeq	r8, r1, r8, asr #21
   179b0:	andeq	r8, r1, ip, asr #21
   179b4:	push	{r4, r5, r6, lr}
   179b8:	mov	r5, r1
   179bc:	mov	r1, #0
   179c0:	mov	r4, r2
   179c4:	bl	10f08 <setlocale@plt>
   179c8:	subs	r6, r0, #0
   179cc:	beq	17a28 <close@plt+0x6acc>
   179d0:	bl	10e84 <strlen@plt>
   179d4:	cmp	r4, r0
   179d8:	bhi	17a10 <close@plt+0x6ab4>
   179dc:	cmp	r4, #0
   179e0:	bne	179ec <close@plt+0x6a90>
   179e4:	mov	r0, #34	; 0x22
   179e8:	pop	{r4, r5, r6, pc}
   179ec:	sub	r4, r4, #1
   179f0:	mov	r1, r6
   179f4:	mov	r2, r4
   179f8:	mov	r0, r5
   179fc:	bl	10d4c <memcpy@plt>
   17a00:	mov	r3, #0
   17a04:	strb	r3, [r5, r4]
   17a08:	mov	r0, #34	; 0x22
   17a0c:	pop	{r4, r5, r6, pc}
   17a10:	add	r2, r0, #1
   17a14:	mov	r1, r6
   17a18:	mov	r0, r5
   17a1c:	bl	10d4c <memcpy@plt>
   17a20:	mov	r0, #0
   17a24:	pop	{r4, r5, r6, pc}
   17a28:	cmp	r4, #0
   17a2c:	beq	17a3c <close@plt+0x6ae0>
   17a30:	strb	r6, [r5]
   17a34:	mov	r0, #22
   17a38:	pop	{r4, r5, r6, pc}
   17a3c:	mov	r0, #22
   17a40:	pop	{r4, r5, r6, pc}
   17a44:	mov	r1, #0
   17a48:	b	10f08 <setlocale@plt>
   17a4c:	subs	r2, r1, #1
   17a50:	bxeq	lr
   17a54:	bcc	17c2c <close@plt+0x6cd0>
   17a58:	cmp	r0, r1
   17a5c:	bls	17c10 <close@plt+0x6cb4>
   17a60:	tst	r1, r2
   17a64:	beq	17c1c <close@plt+0x6cc0>
   17a68:	clz	r3, r0
   17a6c:	clz	r2, r1
   17a70:	sub	r3, r2, r3
   17a74:	rsbs	r3, r3, #31
   17a78:	addne	r3, r3, r3, lsl #1
   17a7c:	mov	r2, #0
   17a80:	addne	pc, pc, r3, lsl #2
   17a84:	nop			; (mov r0, r0)
   17a88:	cmp	r0, r1, lsl #31
   17a8c:	adc	r2, r2, r2
   17a90:	subcs	r0, r0, r1, lsl #31
   17a94:	cmp	r0, r1, lsl #30
   17a98:	adc	r2, r2, r2
   17a9c:	subcs	r0, r0, r1, lsl #30
   17aa0:	cmp	r0, r1, lsl #29
   17aa4:	adc	r2, r2, r2
   17aa8:	subcs	r0, r0, r1, lsl #29
   17aac:	cmp	r0, r1, lsl #28
   17ab0:	adc	r2, r2, r2
   17ab4:	subcs	r0, r0, r1, lsl #28
   17ab8:	cmp	r0, r1, lsl #27
   17abc:	adc	r2, r2, r2
   17ac0:	subcs	r0, r0, r1, lsl #27
   17ac4:	cmp	r0, r1, lsl #26
   17ac8:	adc	r2, r2, r2
   17acc:	subcs	r0, r0, r1, lsl #26
   17ad0:	cmp	r0, r1, lsl #25
   17ad4:	adc	r2, r2, r2
   17ad8:	subcs	r0, r0, r1, lsl #25
   17adc:	cmp	r0, r1, lsl #24
   17ae0:	adc	r2, r2, r2
   17ae4:	subcs	r0, r0, r1, lsl #24
   17ae8:	cmp	r0, r1, lsl #23
   17aec:	adc	r2, r2, r2
   17af0:	subcs	r0, r0, r1, lsl #23
   17af4:	cmp	r0, r1, lsl #22
   17af8:	adc	r2, r2, r2
   17afc:	subcs	r0, r0, r1, lsl #22
   17b00:	cmp	r0, r1, lsl #21
   17b04:	adc	r2, r2, r2
   17b08:	subcs	r0, r0, r1, lsl #21
   17b0c:	cmp	r0, r1, lsl #20
   17b10:	adc	r2, r2, r2
   17b14:	subcs	r0, r0, r1, lsl #20
   17b18:	cmp	r0, r1, lsl #19
   17b1c:	adc	r2, r2, r2
   17b20:	subcs	r0, r0, r1, lsl #19
   17b24:	cmp	r0, r1, lsl #18
   17b28:	adc	r2, r2, r2
   17b2c:	subcs	r0, r0, r1, lsl #18
   17b30:	cmp	r0, r1, lsl #17
   17b34:	adc	r2, r2, r2
   17b38:	subcs	r0, r0, r1, lsl #17
   17b3c:	cmp	r0, r1, lsl #16
   17b40:	adc	r2, r2, r2
   17b44:	subcs	r0, r0, r1, lsl #16
   17b48:	cmp	r0, r1, lsl #15
   17b4c:	adc	r2, r2, r2
   17b50:	subcs	r0, r0, r1, lsl #15
   17b54:	cmp	r0, r1, lsl #14
   17b58:	adc	r2, r2, r2
   17b5c:	subcs	r0, r0, r1, lsl #14
   17b60:	cmp	r0, r1, lsl #13
   17b64:	adc	r2, r2, r2
   17b68:	subcs	r0, r0, r1, lsl #13
   17b6c:	cmp	r0, r1, lsl #12
   17b70:	adc	r2, r2, r2
   17b74:	subcs	r0, r0, r1, lsl #12
   17b78:	cmp	r0, r1, lsl #11
   17b7c:	adc	r2, r2, r2
   17b80:	subcs	r0, r0, r1, lsl #11
   17b84:	cmp	r0, r1, lsl #10
   17b88:	adc	r2, r2, r2
   17b8c:	subcs	r0, r0, r1, lsl #10
   17b90:	cmp	r0, r1, lsl #9
   17b94:	adc	r2, r2, r2
   17b98:	subcs	r0, r0, r1, lsl #9
   17b9c:	cmp	r0, r1, lsl #8
   17ba0:	adc	r2, r2, r2
   17ba4:	subcs	r0, r0, r1, lsl #8
   17ba8:	cmp	r0, r1, lsl #7
   17bac:	adc	r2, r2, r2
   17bb0:	subcs	r0, r0, r1, lsl #7
   17bb4:	cmp	r0, r1, lsl #6
   17bb8:	adc	r2, r2, r2
   17bbc:	subcs	r0, r0, r1, lsl #6
   17bc0:	cmp	r0, r1, lsl #5
   17bc4:	adc	r2, r2, r2
   17bc8:	subcs	r0, r0, r1, lsl #5
   17bcc:	cmp	r0, r1, lsl #4
   17bd0:	adc	r2, r2, r2
   17bd4:	subcs	r0, r0, r1, lsl #4
   17bd8:	cmp	r0, r1, lsl #3
   17bdc:	adc	r2, r2, r2
   17be0:	subcs	r0, r0, r1, lsl #3
   17be4:	cmp	r0, r1, lsl #2
   17be8:	adc	r2, r2, r2
   17bec:	subcs	r0, r0, r1, lsl #2
   17bf0:	cmp	r0, r1, lsl #1
   17bf4:	adc	r2, r2, r2
   17bf8:	subcs	r0, r0, r1, lsl #1
   17bfc:	cmp	r0, r1
   17c00:	adc	r2, r2, r2
   17c04:	subcs	r0, r0, r1
   17c08:	mov	r0, r2
   17c0c:	bx	lr
   17c10:	moveq	r0, #1
   17c14:	movne	r0, #0
   17c18:	bx	lr
   17c1c:	clz	r2, r1
   17c20:	rsb	r2, r2, #31
   17c24:	lsr	r0, r0, r2
   17c28:	bx	lr
   17c2c:	cmp	r0, #0
   17c30:	mvnne	r0, #0
   17c34:	b	17e98 <close@plt+0x6f3c>
   17c38:	cmp	r1, #0
   17c3c:	beq	17c2c <close@plt+0x6cd0>
   17c40:	push	{r0, r1, lr}
   17c44:	bl	17a4c <close@plt+0x6af0>
   17c48:	pop	{r1, r2, lr}
   17c4c:	mul	r3, r2, r0
   17c50:	sub	r1, r1, r3
   17c54:	bx	lr
   17c58:	cmp	r1, #0
   17c5c:	beq	17e68 <close@plt+0x6f0c>
   17c60:	eor	ip, r0, r1
   17c64:	rsbmi	r1, r1, #0
   17c68:	subs	r2, r1, #1
   17c6c:	beq	17e34 <close@plt+0x6ed8>
   17c70:	movs	r3, r0
   17c74:	rsbmi	r3, r0, #0
   17c78:	cmp	r3, r1
   17c7c:	bls	17e40 <close@plt+0x6ee4>
   17c80:	tst	r1, r2
   17c84:	beq	17e50 <close@plt+0x6ef4>
   17c88:	clz	r2, r3
   17c8c:	clz	r0, r1
   17c90:	sub	r2, r0, r2
   17c94:	rsbs	r2, r2, #31
   17c98:	addne	r2, r2, r2, lsl #1
   17c9c:	mov	r0, #0
   17ca0:	addne	pc, pc, r2, lsl #2
   17ca4:	nop			; (mov r0, r0)
   17ca8:	cmp	r3, r1, lsl #31
   17cac:	adc	r0, r0, r0
   17cb0:	subcs	r3, r3, r1, lsl #31
   17cb4:	cmp	r3, r1, lsl #30
   17cb8:	adc	r0, r0, r0
   17cbc:	subcs	r3, r3, r1, lsl #30
   17cc0:	cmp	r3, r1, lsl #29
   17cc4:	adc	r0, r0, r0
   17cc8:	subcs	r3, r3, r1, lsl #29
   17ccc:	cmp	r3, r1, lsl #28
   17cd0:	adc	r0, r0, r0
   17cd4:	subcs	r3, r3, r1, lsl #28
   17cd8:	cmp	r3, r1, lsl #27
   17cdc:	adc	r0, r0, r0
   17ce0:	subcs	r3, r3, r1, lsl #27
   17ce4:	cmp	r3, r1, lsl #26
   17ce8:	adc	r0, r0, r0
   17cec:	subcs	r3, r3, r1, lsl #26
   17cf0:	cmp	r3, r1, lsl #25
   17cf4:	adc	r0, r0, r0
   17cf8:	subcs	r3, r3, r1, lsl #25
   17cfc:	cmp	r3, r1, lsl #24
   17d00:	adc	r0, r0, r0
   17d04:	subcs	r3, r3, r1, lsl #24
   17d08:	cmp	r3, r1, lsl #23
   17d0c:	adc	r0, r0, r0
   17d10:	subcs	r3, r3, r1, lsl #23
   17d14:	cmp	r3, r1, lsl #22
   17d18:	adc	r0, r0, r0
   17d1c:	subcs	r3, r3, r1, lsl #22
   17d20:	cmp	r3, r1, lsl #21
   17d24:	adc	r0, r0, r0
   17d28:	subcs	r3, r3, r1, lsl #21
   17d2c:	cmp	r3, r1, lsl #20
   17d30:	adc	r0, r0, r0
   17d34:	subcs	r3, r3, r1, lsl #20
   17d38:	cmp	r3, r1, lsl #19
   17d3c:	adc	r0, r0, r0
   17d40:	subcs	r3, r3, r1, lsl #19
   17d44:	cmp	r3, r1, lsl #18
   17d48:	adc	r0, r0, r0
   17d4c:	subcs	r3, r3, r1, lsl #18
   17d50:	cmp	r3, r1, lsl #17
   17d54:	adc	r0, r0, r0
   17d58:	subcs	r3, r3, r1, lsl #17
   17d5c:	cmp	r3, r1, lsl #16
   17d60:	adc	r0, r0, r0
   17d64:	subcs	r3, r3, r1, lsl #16
   17d68:	cmp	r3, r1, lsl #15
   17d6c:	adc	r0, r0, r0
   17d70:	subcs	r3, r3, r1, lsl #15
   17d74:	cmp	r3, r1, lsl #14
   17d78:	adc	r0, r0, r0
   17d7c:	subcs	r3, r3, r1, lsl #14
   17d80:	cmp	r3, r1, lsl #13
   17d84:	adc	r0, r0, r0
   17d88:	subcs	r3, r3, r1, lsl #13
   17d8c:	cmp	r3, r1, lsl #12
   17d90:	adc	r0, r0, r0
   17d94:	subcs	r3, r3, r1, lsl #12
   17d98:	cmp	r3, r1, lsl #11
   17d9c:	adc	r0, r0, r0
   17da0:	subcs	r3, r3, r1, lsl #11
   17da4:	cmp	r3, r1, lsl #10
   17da8:	adc	r0, r0, r0
   17dac:	subcs	r3, r3, r1, lsl #10
   17db0:	cmp	r3, r1, lsl #9
   17db4:	adc	r0, r0, r0
   17db8:	subcs	r3, r3, r1, lsl #9
   17dbc:	cmp	r3, r1, lsl #8
   17dc0:	adc	r0, r0, r0
   17dc4:	subcs	r3, r3, r1, lsl #8
   17dc8:	cmp	r3, r1, lsl #7
   17dcc:	adc	r0, r0, r0
   17dd0:	subcs	r3, r3, r1, lsl #7
   17dd4:	cmp	r3, r1, lsl #6
   17dd8:	adc	r0, r0, r0
   17ddc:	subcs	r3, r3, r1, lsl #6
   17de0:	cmp	r3, r1, lsl #5
   17de4:	adc	r0, r0, r0
   17de8:	subcs	r3, r3, r1, lsl #5
   17dec:	cmp	r3, r1, lsl #4
   17df0:	adc	r0, r0, r0
   17df4:	subcs	r3, r3, r1, lsl #4
   17df8:	cmp	r3, r1, lsl #3
   17dfc:	adc	r0, r0, r0
   17e00:	subcs	r3, r3, r1, lsl #3
   17e04:	cmp	r3, r1, lsl #2
   17e08:	adc	r0, r0, r0
   17e0c:	subcs	r3, r3, r1, lsl #2
   17e10:	cmp	r3, r1, lsl #1
   17e14:	adc	r0, r0, r0
   17e18:	subcs	r3, r3, r1, lsl #1
   17e1c:	cmp	r3, r1
   17e20:	adc	r0, r0, r0
   17e24:	subcs	r3, r3, r1
   17e28:	cmp	ip, #0
   17e2c:	rsbmi	r0, r0, #0
   17e30:	bx	lr
   17e34:	teq	ip, r0
   17e38:	rsbmi	r0, r0, #0
   17e3c:	bx	lr
   17e40:	movcc	r0, #0
   17e44:	asreq	r0, ip, #31
   17e48:	orreq	r0, r0, #1
   17e4c:	bx	lr
   17e50:	clz	r2, r1
   17e54:	rsb	r2, r2, #31
   17e58:	cmp	ip, #0
   17e5c:	lsr	r0, r3, r2
   17e60:	rsbmi	r0, r0, #0
   17e64:	bx	lr
   17e68:	cmp	r0, #0
   17e6c:	mvngt	r0, #-2147483648	; 0x80000000
   17e70:	movlt	r0, #-2147483648	; 0x80000000
   17e74:	b	17e98 <close@plt+0x6f3c>
   17e78:	cmp	r1, #0
   17e7c:	beq	17e68 <close@plt+0x6f0c>
   17e80:	push	{r0, r1, lr}
   17e84:	bl	17c60 <close@plt+0x6d04>
   17e88:	pop	{r1, r2, lr}
   17e8c:	mul	r3, r2, r0
   17e90:	sub	r1, r1, r3
   17e94:	bx	lr
   17e98:	push	{r1, lr}
   17e9c:	mov	r0, #8
   17ea0:	bl	10cec <raise@plt>
   17ea4:	pop	{r1, pc}
   17ea8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17eac:	mov	r7, r0
   17eb0:	ldr	r6, [pc, #72]	; 17f00 <close@plt+0x6fa4>
   17eb4:	ldr	r5, [pc, #72]	; 17f04 <close@plt+0x6fa8>
   17eb8:	add	r6, pc, r6
   17ebc:	add	r5, pc, r5
   17ec0:	sub	r6, r6, r5
   17ec4:	mov	r8, r1
   17ec8:	mov	r9, r2
   17ecc:	bl	10cb4 <calloc@plt-0x20>
   17ed0:	asrs	r6, r6, #2
   17ed4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17ed8:	mov	r4, #0
   17edc:	add	r4, r4, #1
   17ee0:	ldr	r3, [r5], #4
   17ee4:	mov	r2, r9
   17ee8:	mov	r1, r8
   17eec:	mov	r0, r7
   17ef0:	blx	r3
   17ef4:	cmp	r6, r4
   17ef8:	bne	17edc <close@plt+0x6f80>
   17efc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17f00:	andeq	r1, r1, r0, asr r0
   17f04:	andeq	r1, r1, r8, asr #32
   17f08:	bx	lr
   17f0c:	ldr	r3, [pc, #12]	; 17f20 <close@plt+0x6fc4>
   17f10:	mov	r1, #0
   17f14:	add	r3, pc, r3
   17f18:	ldr	r2, [r3]
   17f1c:	b	10ea8 <__cxa_atexit@plt>
   17f20:	ldrdeq	r1, [r1], -r4

Disassembly of section .fini:

00017f24 <.fini>:
   17f24:	push	{r3, lr}
   17f28:	pop	{r3, pc}
