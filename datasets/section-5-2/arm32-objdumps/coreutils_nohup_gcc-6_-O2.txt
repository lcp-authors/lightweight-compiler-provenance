
../repos/coreutils/src/nohup:     file format elf32-littlearm


Disassembly of section .init:

00010c5c <.init>:
   10c5c:	push	{r3, lr}
   10c60:	bl	114b0 <close@plt+0x5c4>
   10c64:	pop	{r3, pc}

Disassembly of section .plt:

00010c68 <calloc@plt-0x14>:
   10c68:	push	{lr}		; (str lr, [sp, #-4]!)
   10c6c:	ldr	lr, [pc, #4]	; 10c78 <calloc@plt-0x4>
   10c70:	add	lr, pc, lr
   10c74:	ldr	pc, [lr, #8]!
   10c78:	andeq	r5, r1, r8, lsl #7

00010c7c <calloc@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #86016	; 0x15000
   10c84:	ldr	pc, [ip, #904]!	; 0x388

00010c88 <fputs_unlocked@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #86016	; 0x15000
   10c90:	ldr	pc, [ip, #896]!	; 0x380

00010c94 <raise@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #86016	; 0x15000
   10c9c:	ldr	pc, [ip, #888]!	; 0x378

00010ca0 <strcmp@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #86016	; 0x15000
   10ca8:	ldr	pc, [ip, #880]!	; 0x370

00010cac <fflush@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #86016	; 0x15000
   10cb4:	ldr	pc, [ip, #872]!	; 0x368

00010cb8 <free@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #86016	; 0x15000
   10cc0:	ldr	pc, [ip, #864]!	; 0x360

00010cc4 <_exit@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #86016	; 0x15000
   10ccc:	ldr	pc, [ip, #856]!	; 0x358

00010cd0 <memcpy@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #86016	; 0x15000
   10cd8:	ldr	pc, [ip, #848]!	; 0x350

00010cdc <execvp@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #86016	; 0x15000
   10ce4:	ldr	pc, [ip, #840]!	; 0x348

00010ce8 <mbsinit@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #86016	; 0x15000
   10cf0:	ldr	pc, [ip, #832]!	; 0x340

00010cf4 <signal@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #86016	; 0x15000
   10cfc:	ldr	pc, [ip, #824]!	; 0x338

00010d00 <memcmp@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #86016	; 0x15000
   10d08:	ldr	pc, [ip, #816]!	; 0x330

00010d0c <fputc_unlocked@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #86016	; 0x15000
   10d14:	ldr	pc, [ip, #808]!	; 0x328

00010d18 <dcgettext@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #86016	; 0x15000
   10d20:	ldr	pc, [ip, #800]!	; 0x320

00010d24 <dup2@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #86016	; 0x15000
   10d2c:	ldr	pc, [ip, #792]!	; 0x318

00010d30 <realloc@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #86016	; 0x15000
   10d38:	ldr	pc, [ip, #784]!	; 0x310

00010d3c <textdomain@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #86016	; 0x15000
   10d44:	ldr	pc, [ip, #776]!	; 0x308

00010d48 <iswprint@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #86016	; 0x15000
   10d50:	ldr	pc, [ip, #768]!	; 0x300

00010d54 <fwrite@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #86016	; 0x15000
   10d5c:	ldr	pc, [ip, #760]!	; 0x2f8

00010d60 <lseek64@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #86016	; 0x15000
   10d68:	ldr	pc, [ip, #752]!	; 0x2f0

00010d6c <__ctype_get_mb_cur_max@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #86016	; 0x15000
   10d74:	ldr	pc, [ip, #744]!	; 0x2e8

00010d78 <__fpending@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #86016	; 0x15000
   10d80:	ldr	pc, [ip, #736]!	; 0x2e0

00010d84 <mbrtowc@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #86016	; 0x15000
   10d8c:	ldr	pc, [ip, #728]!	; 0x2d8

00010d90 <error@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #86016	; 0x15000
   10d98:	ldr	pc, [ip, #720]!	; 0x2d0

00010d9c <open64@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #86016	; 0x15000
   10da4:	ldr	pc, [ip, #712]!	; 0x2c8

00010da8 <getenv@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #86016	; 0x15000
   10db0:	ldr	pc, [ip, #704]!	; 0x2c0

00010db4 <malloc@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #86016	; 0x15000
   10dbc:	ldr	pc, [ip, #696]!	; 0x2b8

00010dc0 <__libc_start_main@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #86016	; 0x15000
   10dc8:	ldr	pc, [ip, #688]!	; 0x2b0

00010dcc <__freading@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #86016	; 0x15000
   10dd4:	ldr	pc, [ip, #680]!	; 0x2a8

00010dd8 <__gmon_start__@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #86016	; 0x15000
   10de0:	ldr	pc, [ip, #672]!	; 0x2a0

00010de4 <mempcpy@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #86016	; 0x15000
   10dec:	ldr	pc, [ip, #664]!	; 0x298

00010df0 <getopt_long@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #86016	; 0x15000
   10df8:	ldr	pc, [ip, #656]!	; 0x290

00010dfc <__ctype_b_loc@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #86016	; 0x15000
   10e04:	ldr	pc, [ip, #648]!	; 0x288

00010e08 <exit@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #86016	; 0x15000
   10e10:	ldr	pc, [ip, #640]!	; 0x280

00010e14 <strlen@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #86016	; 0x15000
   10e1c:	ldr	pc, [ip, #632]!	; 0x278

00010e20 <__errno_location@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #86016	; 0x15000
   10e28:	ldr	pc, [ip, #624]!	; 0x270

00010e2c <__cxa_atexit@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #86016	; 0x15000
   10e34:	ldr	pc, [ip, #616]!	; 0x268

00010e38 <memset@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #86016	; 0x15000
   10e40:	ldr	pc, [ip, #608]!	; 0x260

00010e44 <__printf_chk@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #86016	; 0x15000
   10e4c:	ldr	pc, [ip, #600]!	; 0x258

00010e50 <fileno@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #86016	; 0x15000
   10e58:	ldr	pc, [ip, #592]!	; 0x250

00010e5c <__fprintf_chk@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #86016	; 0x15000
   10e64:	ldr	pc, [ip, #584]!	; 0x248

00010e68 <fclose@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #86016	; 0x15000
   10e70:	ldr	pc, [ip, #576]!	; 0x240

00010e74 <fseeko64@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #86016	; 0x15000
   10e7c:	ldr	pc, [ip, #568]!	; 0x238

00010e80 <fcntl64@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #86016	; 0x15000
   10e88:	ldr	pc, [ip, #560]!	; 0x230

00010e8c <setlocale@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #86016	; 0x15000
   10e94:	ldr	pc, [ip, #552]!	; 0x228

00010e98 <strrchr@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #86016	; 0x15000
   10ea0:	ldr	pc, [ip, #544]!	; 0x220

00010ea4 <nl_langinfo@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #86016	; 0x15000
   10eac:	ldr	pc, [ip, #536]!	; 0x218

00010eb0 <bindtextdomain@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #86016	; 0x15000
   10eb8:	ldr	pc, [ip, #528]!	; 0x210

00010ebc <umask@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #86016	; 0x15000
   10ec4:	ldr	pc, [ip, #520]!	; 0x208

00010ec8 <isatty@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #86016	; 0x15000
   10ed0:	ldr	pc, [ip, #512]!	; 0x200

00010ed4 <strncmp@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #86016	; 0x15000
   10edc:	ldr	pc, [ip, #504]!	; 0x1f8

00010ee0 <abort@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #86016	; 0x15000
   10ee8:	ldr	pc, [ip, #496]!	; 0x1f0

00010eec <close@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #86016	; 0x15000
   10ef4:	ldr	pc, [ip, #488]!	; 0x1e8

Disassembly of section .text:

00010ef8 <.text>:
   10ef8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10efc:	mov	r7, r0
   10f00:	sub	sp, sp, #44	; 0x2c
   10f04:	ldr	r0, [r1]
   10f08:	mov	r4, r1
   10f0c:	bl	11eb8 <close@plt+0xfcc>
   10f10:	ldr	r1, [pc, #1260]	; 11404 <close@plt+0x518>
   10f14:	mov	r0, #6
   10f18:	bl	10e8c <setlocale@plt>
   10f1c:	ldr	r1, [pc, #1252]	; 11408 <close@plt+0x51c>
   10f20:	ldr	r0, [pc, #1252]	; 1140c <close@plt+0x520>
   10f24:	bl	10eb0 <bindtextdomain@plt>
   10f28:	ldr	r0, [pc, #1244]	; 1140c <close@plt+0x520>
   10f2c:	bl	10d3c <textdomain@plt>
   10f30:	ldr	r0, [pc, #1240]	; 11410 <close@plt+0x524>
   10f34:	bl	10da8 <getenv@plt>
   10f38:	mov	r6, #0
   10f3c:	ldr	r3, [pc, #1232]	; 11414 <close@plt+0x528>
   10f40:	ldr	r8, [pc, #1232]	; 11418 <close@plt+0x52c>
   10f44:	cmp	r0, r6
   10f48:	movne	r5, #127	; 0x7f
   10f4c:	moveq	r5, #125	; 0x7d
   10f50:	ldr	r0, [pc, #1220]	; 1141c <close@plt+0x530>
   10f54:	str	r5, [r3]
   10f58:	bl	15258 <close@plt+0x436c>
   10f5c:	ldr	r1, [pc, #1212]	; 11420 <close@plt+0x534>
   10f60:	ldr	r2, [pc, #1212]	; 11424 <close@plt+0x538>
   10f64:	ldr	r3, [pc, #1212]	; 11428 <close@plt+0x53c>
   10f68:	ldr	r0, [r1]
   10f6c:	str	r2, [sp, #12]
   10f70:	str	r0, [sp]
   10f74:	str	r3, [sp, #8]
   10f78:	mov	r1, r4
   10f7c:	ldr	r3, [pc, #1192]	; 1142c <close@plt+0x540>
   10f80:	mov	r0, r7
   10f84:	str	r6, [sp, #16]
   10f88:	str	r6, [sp, #4]
   10f8c:	ldr	r2, [pc, #1180]	; 11430 <close@plt+0x544>
   10f90:	bl	11de0 <close@plt+0xef4>
   10f94:	ldr	r3, [r8]
   10f98:	cmp	r7, r3
   10f9c:	ble	113dc <close@plt+0x4f0>
   10fa0:	mov	r0, r6
   10fa4:	bl	10ec8 <isatty@plt>
   10fa8:	mov	r7, r0
   10fac:	mov	r0, #1
   10fb0:	bl	10ec8 <isatty@plt>
   10fb4:	subs	r6, r0, #0
   10fb8:	beq	11014 <close@plt+0x128>
   10fbc:	mov	r0, #2
   10fc0:	bl	10ec8 <isatty@plt>
   10fc4:	adds	fp, r0, #0
   10fc8:	movne	fp, #1
   10fcc:	cmp	r7, #0
   10fd0:	mov	sl, r0
   10fd4:	bne	111d4 <close@plt+0x2e8>
   10fd8:	cmp	r6, #0
   10fdc:	bne	11078 <close@plt+0x18c>
   10fe0:	str	r6, [sp, #32]
   10fe4:	mov	r9, #1
   10fe8:	cmp	fp, #0
   10fec:	moveq	sl, #2
   10ff0:	bne	1118c <close@plt+0x2a0>
   10ff4:	ldr	r3, [pc, #1080]	; 11434 <close@plt+0x548>
   10ff8:	ldr	r3, [r3]
   10ffc:	ldr	r0, [r3]
   11000:	ands	r6, r0, #32
   11004:	beq	11110 <close@plt+0x224>
   11008:	mov	r0, r5
   1100c:	add	sp, sp, #44	; 0x2c
   11010:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11014:	bl	10e20 <__errno_location@plt>
   11018:	ldr	r3, [r0]
   1101c:	cmp	r3, #9
   11020:	bne	10fbc <close@plt+0xd0>
   11024:	mov	r0, #2
   11028:	bl	10ec8 <isatty@plt>
   1102c:	mov	r9, #1
   11030:	str	r9, [sp, #32]
   11034:	adds	fp, r0, #0
   11038:	movne	fp, #1
   1103c:	cmp	r7, #0
   11040:	mov	sl, r0
   11044:	bne	111dc <close@plt+0x2f0>
   11048:	ands	r3, fp, r9
   1104c:	str	r3, [sp, #28]
   11050:	beq	10fe4 <close@plt+0xf8>
   11054:	mvn	r0, #384	; 0x180
   11058:	bl	10ebc <umask@plt>
   1105c:	mov	r2, #384	; 0x180
   11060:	ldr	r1, [pc, #976]	; 11438 <close@plt+0x54c>
   11064:	mov	sl, r0
   11068:	ldr	r0, [pc, #972]	; 1143c <close@plt+0x550>
   1106c:	bl	10d9c <open64@plt>
   11070:	mov	r9, r0
   11074:	b	110a4 <close@plt+0x1b8>
   11078:	str	r7, [sp, #32]
   1107c:	mvn	r0, #384	; 0x180
   11080:	bl	10ebc <umask@plt>
   11084:	mov	r3, #384	; 0x180
   11088:	ldr	r2, [pc, #936]	; 11438 <close@plt+0x54c>
   1108c:	ldr	r1, [pc, #936]	; 1143c <close@plt+0x550>
   11090:	str	fp, [sp, #28]
   11094:	mov	sl, r0
   11098:	mov	r0, #1
   1109c:	bl	11b88 <close@plt+0xc9c>
   110a0:	mov	r9, r0
   110a4:	cmp	r9, #0
   110a8:	blt	11240 <close@plt+0x354>
   110ac:	ldr	fp, [pc, #904]	; 1143c <close@plt+0x550>
   110b0:	mov	r3, #0
   110b4:	str	r3, [sp, #24]
   110b8:	mov	r0, sl
   110bc:	bl	10ebc <umask@plt>
   110c0:	ldr	r3, [pc, #888]	; 11440 <close@plt+0x554>
   110c4:	cmp	r7, #0
   110c8:	ldr	r1, [pc, #884]	; 11444 <close@plt+0x558>
   110cc:	mov	r2, #5
   110d0:	moveq	r1, r3
   110d4:	mov	r0, #0
   110d8:	bl	10d18 <dcgettext@plt>
   110dc:	mov	r1, fp
   110e0:	mov	sl, r0
   110e4:	mov	r0, #4
   110e8:	bl	13b38 <close@plt+0x2c4c>
   110ec:	mov	r1, #0
   110f0:	mov	r2, sl
   110f4:	mov	r3, r0
   110f8:	mov	r0, r1
   110fc:	bl	10d90 <error@plt>
   11100:	ldr	r0, [sp, #24]
   11104:	bl	11cd0 <close@plt+0xde4>
   11108:	ldr	fp, [sp, #28]
   1110c:	b	10fe8 <close@plt+0xfc>
   11110:	mov	r1, #1
   11114:	mov	r0, r1
   11118:	bl	10cf4 <signal@plt>
   1111c:	ldr	r7, [r8]
   11120:	add	r1, r4, r7, lsl #2
   11124:	ldr	r0, [r4, r7, lsl #2]
   11128:	bl	10cdc <execvp@plt>
   1112c:	bl	10e20 <__errno_location@plt>
   11130:	mov	r1, #2
   11134:	ldr	r8, [r0]
   11138:	mov	r0, sl
   1113c:	bl	10d24 <dup2@plt>
   11140:	cmp	r8, #2
   11144:	moveq	r5, #127	; 0x7f
   11148:	movne	r5, #126	; 0x7e
   1114c:	cmp	r0, #2
   11150:	bne	11008 <close@plt+0x11c>
   11154:	mov	r2, #5
   11158:	ldr	r1, [pc, #744]	; 11448 <close@plt+0x55c>
   1115c:	mov	r0, r6
   11160:	bl	10d18 <dcgettext@plt>
   11164:	ldr	r1, [r4, r7, lsl #2]
   11168:	mov	r9, r0
   1116c:	mov	r0, #4
   11170:	bl	13b38 <close@plt+0x2c4c>
   11174:	mov	r2, r9
   11178:	mov	r1, r8
   1117c:	mov	r3, r0
   11180:	mov	r0, r6
   11184:	bl	10d90 <error@plt>
   11188:	b	11008 <close@plt+0x11c>
   1118c:	mov	r2, #3
   11190:	ldr	r1, [pc, #692]	; 1144c <close@plt+0x560>
   11194:	mov	r0, #2
   11198:	bl	119b4 <close@plt+0xac8>
   1119c:	cmp	r6, #0
   111a0:	mov	sl, r0
   111a4:	beq	11210 <close@plt+0x324>
   111a8:	mov	r1, #2
   111ac:	mov	r0, r9
   111b0:	bl	10d24 <dup2@plt>
   111b4:	cmp	r0, #0
   111b8:	blt	11340 <close@plt+0x454>
   111bc:	ldr	r3, [sp, #32]
   111c0:	cmp	r3, #0
   111c4:	beq	10ff4 <close@plt+0x108>
   111c8:	mov	r0, r9
   111cc:	bl	10eec <close@plt>
   111d0:	b	10ff4 <close@plt+0x108>
   111d4:	mov	r9, #0
   111d8:	str	r9, [sp, #32]
   111dc:	mov	r3, #0
   111e0:	mov	r0, r3
   111e4:	mov	r2, #1
   111e8:	ldr	r1, [pc, #608]	; 11450 <close@plt+0x564>
   111ec:	bl	11b88 <close@plt+0xc9c>
   111f0:	cmp	r0, #0
   111f4:	blt	1130c <close@plt+0x420>
   111f8:	cmp	r6, #0
   111fc:	cmpeq	sl, #0
   11200:	beq	112a0 <close@plt+0x3b4>
   11204:	cmp	r6, #0
   11208:	beq	11048 <close@plt+0x15c>
   1120c:	b	1107c <close@plt+0x190>
   11210:	ldr	r3, [pc, #572]	; 11454 <close@plt+0x568>
   11214:	cmp	r7, #0
   11218:	ldr	r1, [pc, #568]	; 11458 <close@plt+0x56c>
   1121c:	mov	r2, #5
   11220:	moveq	r1, r3
   11224:	mov	r0, r6
   11228:	bl	10d18 <dcgettext@plt>
   1122c:	mov	r1, r6
   11230:	mov	r2, r0
   11234:	mov	r0, r6
   11238:	bl	10d90 <error@plt>
   1123c:	b	111a8 <close@plt+0x2bc>
   11240:	bl	10e20 <__errno_location@plt>
   11244:	mov	fp, r0
   11248:	ldr	r0, [pc, #524]	; 1145c <close@plt+0x570>
   1124c:	ldr	r3, [fp]
   11250:	str	r3, [sp, #36]	; 0x24
   11254:	bl	10da8 <getenv@plt>
   11258:	subs	r9, r0, #0
   1125c:	beq	112d8 <close@plt+0x3ec>
   11260:	ldr	r1, [pc, #468]	; 1143c <close@plt+0x550>
   11264:	mov	r2, #0
   11268:	bl	11bec <close@plt+0xd00>
   1126c:	cmp	r6, #0
   11270:	mov	r1, r0
   11274:	str	r0, [sp, #24]
   11278:	beq	112c4 <close@plt+0x3d8>
   1127c:	mov	r3, #384	; 0x180
   11280:	ldr	r2, [pc, #432]	; 11438 <close@plt+0x54c>
   11284:	mov	r0, #1
   11288:	bl	11b88 <close@plt+0xc9c>
   1128c:	mov	r9, r0
   11290:	cmp	r9, #0
   11294:	blt	1136c <close@plt+0x480>
   11298:	ldr	fp, [sp, #24]
   1129c:	b	110b8 <close@plt+0x1cc>
   112a0:	mov	r2, #5
   112a4:	ldr	r1, [pc, #436]	; 11460 <close@plt+0x574>
   112a8:	mov	r0, #0
   112ac:	bl	10d18 <dcgettext@plt>
   112b0:	mov	r1, #0
   112b4:	mov	r2, r0
   112b8:	mov	r0, r1
   112bc:	bl	10d90 <error@plt>
   112c0:	b	11048 <close@plt+0x15c>
   112c4:	mov	r2, #384	; 0x180
   112c8:	ldr	r1, [pc, #360]	; 11438 <close@plt+0x54c>
   112cc:	bl	10d9c <open64@plt>
   112d0:	mov	r9, r0
   112d4:	b	11290 <close@plt+0x3a4>
   112d8:	mov	r2, #5
   112dc:	ldr	r1, [pc, #384]	; 11464 <close@plt+0x578>
   112e0:	bl	10d18 <dcgettext@plt>
   112e4:	ldr	r1, [pc, #336]	; 1143c <close@plt+0x550>
   112e8:	mov	r4, r0
   112ec:	mov	r0, #4
   112f0:	bl	13b38 <close@plt+0x2c4c>
   112f4:	mov	r2, r4
   112f8:	ldr	r1, [sp, #36]	; 0x24
   112fc:	mov	r3, r0
   11300:	mov	r0, r9
   11304:	bl	10d90 <error@plt>
   11308:	b	11008 <close@plt+0x11c>
   1130c:	bl	10e20 <__errno_location@plt>
   11310:	mov	r2, #5
   11314:	ldr	r1, [pc, #332]	; 11468 <close@plt+0x57c>
   11318:	ldr	r3, [r0]
   1131c:	mov	r0, #0
   11320:	str	r3, [sp, #24]
   11324:	bl	10d18 <dcgettext@plt>
   11328:	ldr	r3, [sp, #24]
   1132c:	mov	r1, r3
   11330:	mov	r2, r0
   11334:	mov	r0, r5
   11338:	bl	10d90 <error@plt>
   1133c:	b	111f8 <close@plt+0x30c>
   11340:	bl	10e20 <__errno_location@plt>
   11344:	mov	r2, #5
   11348:	ldr	r1, [pc, #284]	; 1146c <close@plt+0x580>
   1134c:	ldr	r6, [r0]
   11350:	mov	r0, #0
   11354:	bl	10d18 <dcgettext@plt>
   11358:	mov	r1, r6
   1135c:	mov	r2, r0
   11360:	mov	r0, r5
   11364:	bl	10d90 <error@plt>
   11368:	b	111bc <close@plt+0x2d0>
   1136c:	mov	r2, #5
   11370:	ldr	r1, [pc, #236]	; 11464 <close@plt+0x578>
   11374:	mov	r0, #0
   11378:	ldr	r4, [fp]
   1137c:	bl	10d18 <dcgettext@plt>
   11380:	ldr	r1, [pc, #180]	; 1143c <close@plt+0x550>
   11384:	mov	r6, r0
   11388:	mov	r0, #4
   1138c:	bl	13b38 <close@plt+0x2c4c>
   11390:	mov	r2, r6
   11394:	ldr	r1, [sp, #36]	; 0x24
   11398:	mov	r3, r0
   1139c:	mov	r0, #0
   113a0:	bl	10d90 <error@plt>
   113a4:	mov	r2, #5
   113a8:	ldr	r1, [pc, #180]	; 11464 <close@plt+0x578>
   113ac:	mov	r0, #0
   113b0:	bl	10d18 <dcgettext@plt>
   113b4:	ldr	r1, [sp, #24]
   113b8:	mov	r6, r0
   113bc:	mov	r0, #4
   113c0:	bl	13b38 <close@plt+0x2c4c>
   113c4:	mov	r2, r6
   113c8:	mov	r1, r4
   113cc:	mov	r3, r0
   113d0:	mov	r0, #0
   113d4:	bl	10d90 <error@plt>
   113d8:	b	11008 <close@plt+0x11c>
   113dc:	mov	r2, #5
   113e0:	ldr	r1, [pc, #136]	; 11470 <close@plt+0x584>
   113e4:	mov	r0, r6
   113e8:	bl	10d18 <dcgettext@plt>
   113ec:	mov	r1, r6
   113f0:	mov	r2, r0
   113f4:	mov	r0, r6
   113f8:	bl	10d90 <error@plt>
   113fc:	mov	r0, r5
   11400:	bl	1159c <close@plt+0x6b0>
   11404:	andeq	r5, r1, r0, lsl r3
   11408:	andeq	r5, r1, r4, lsl r7
   1140c:	andeq	r5, r1, ip, asr #11
   11410:	andeq	r5, r1, ip, lsr #14
   11414:	strdeq	r6, [r2], -r0
   11418:	andeq	r6, r2, r0, asr #2
   1141c:	ldrdeq	r1, [r1], -r0
   11420:	andeq	r6, r2, ip, ror #1
   11424:	andeq	r5, r1, ip, lsr r7
   11428:	muleq	r1, ip, r5
   1142c:	andeq	r5, r1, r8, asr #11
   11430:			; <UNDEFINED> instruction: 0x000152b4
   11434:	andeq	r6, r2, r8, asr #2
   11438:	andeq	r0, r0, r1, asr #8
   1143c:	andeq	r5, r1, r4, ror r6
   11440:	andeq	r5, r1, ip, lsr #13
   11444:	andeq	r5, r1, r0, lsl #13
   11448:	ldrdeq	r5, [r1], -r0
   1144c:	andeq	r0, r0, r6, lsl #8
   11450:	andeq	r5, r1, ip, asr r7
   11454:	strdeq	r5, [r1], -r4
   11458:	andeq	r5, r1, r4, asr #13
   1145c:	andeq	r5, r1, r4, lsr #15
   11460:	muleq	r1, r4, r7
   11464:	andeq	r5, r1, ip, ror #15
   11468:	andeq	r5, r1, r8, ror #14
   1146c:	andeq	r5, r1, ip, lsr #15
   11470:	andeq	r5, r1, ip, asr #14
   11474:	mov	fp, #0
   11478:	mov	lr, #0
   1147c:	pop	{r1}		; (ldr r1, [sp], #4)
   11480:	mov	r2, sp
   11484:	push	{r2}		; (str r2, [sp, #-4]!)
   11488:	push	{r0}		; (str r0, [sp, #-4]!)
   1148c:	ldr	ip, [pc, #16]	; 114a4 <close@plt+0x5b8>
   11490:	push	{ip}		; (str ip, [sp, #-4]!)
   11494:	ldr	r0, [pc, #12]	; 114a8 <close@plt+0x5bc>
   11498:	ldr	r3, [pc, #12]	; 114ac <close@plt+0x5c0>
   1149c:	bl	10dc0 <__libc_start_main@plt>
   114a0:	bl	10ee0 <abort@plt>
   114a4:	andeq	r5, r1, r4, asr r2
   114a8:	strdeq	r0, [r1], -r8
   114ac:	strdeq	r5, [r1], -r4
   114b0:	ldr	r3, [pc, #20]	; 114cc <close@plt+0x5e0>
   114b4:	ldr	r2, [pc, #20]	; 114d0 <close@plt+0x5e4>
   114b8:	add	r3, pc, r3
   114bc:	ldr	r2, [r3, r2]
   114c0:	cmp	r2, #0
   114c4:	bxeq	lr
   114c8:	b	10dd8 <__gmon_start__@plt>
   114cc:	andeq	r4, r1, r0, asr #22
   114d0:	andeq	r0, r0, r0, ror #1
   114d4:	ldr	r3, [pc, #28]	; 114f8 <close@plt+0x60c>
   114d8:	ldr	r0, [pc, #28]	; 114fc <close@plt+0x610>
   114dc:	sub	r3, r3, r0
   114e0:	cmp	r3, #6
   114e4:	bxls	lr
   114e8:	ldr	r3, [pc, #16]	; 11500 <close@plt+0x614>
   114ec:	cmp	r3, #0
   114f0:	bxeq	lr
   114f4:	bx	r3
   114f8:	andeq	r6, r2, r7, lsr r1
   114fc:	andeq	r6, r2, r4, lsr r1
   11500:	andeq	r0, r0, r0
   11504:	ldr	r1, [pc, #36]	; 11530 <close@plt+0x644>
   11508:	ldr	r0, [pc, #36]	; 11534 <close@plt+0x648>
   1150c:	sub	r1, r1, r0
   11510:	asr	r1, r1, #2
   11514:	add	r1, r1, r1, lsr #31
   11518:	asrs	r1, r1, #1
   1151c:	bxeq	lr
   11520:	ldr	r3, [pc, #16]	; 11538 <close@plt+0x64c>
   11524:	cmp	r3, #0
   11528:	bxeq	lr
   1152c:	bx	r3
   11530:	andeq	r6, r2, r4, lsr r1
   11534:	andeq	r6, r2, r4, lsr r1
   11538:	andeq	r0, r0, r0
   1153c:	push	{r4, lr}
   11540:	ldr	r4, [pc, #24]	; 11560 <close@plt+0x674>
   11544:	ldrb	r3, [r4]
   11548:	cmp	r3, #0
   1154c:	popne	{r4, pc}
   11550:	bl	114d4 <close@plt+0x5e8>
   11554:	mov	r3, #1
   11558:	strb	r3, [r4]
   1155c:	pop	{r4, pc}
   11560:	andeq	r6, r2, r4, asr r1
   11564:	ldr	r0, [pc, #40]	; 11594 <close@plt+0x6a8>
   11568:	ldr	r3, [r0]
   1156c:	cmp	r3, #0
   11570:	bne	11578 <close@plt+0x68c>
   11574:	b	11504 <close@plt+0x618>
   11578:	ldr	r3, [pc, #24]	; 11598 <close@plt+0x6ac>
   1157c:	cmp	r3, #0
   11580:	beq	11574 <close@plt+0x688>
   11584:	push	{r4, lr}
   11588:	blx	r3
   1158c:	pop	{r4, lr}
   11590:	b	11504 <close@plt+0x618>
   11594:	andeq	r5, r2, r4, lsl pc
   11598:	andeq	r0, r0, r0
   1159c:	subs	r6, r0, #0
   115a0:	push	{r7, lr}
   115a4:	sub	sp, sp, #56	; 0x38
   115a8:	beq	115e4 <close@plt+0x6f8>
   115ac:	ldr	r3, [pc, #680]	; 1185c <close@plt+0x970>
   115b0:	mov	r2, #5
   115b4:	ldr	r1, [pc, #676]	; 11860 <close@plt+0x974>
   115b8:	mov	r0, #0
   115bc:	ldr	r4, [r3]
   115c0:	bl	10d18 <dcgettext@plt>
   115c4:	ldr	r3, [pc, #664]	; 11864 <close@plt+0x978>
   115c8:	mov	r1, #1
   115cc:	ldr	r3, [r3]
   115d0:	mov	r2, r0
   115d4:	mov	r0, r4
   115d8:	bl	10e5c <__fprintf_chk@plt>
   115dc:	mov	r0, r6
   115e0:	bl	10e08 <exit@plt>
   115e4:	mov	r2, #5
   115e8:	ldr	r1, [pc, #632]	; 11868 <close@plt+0x97c>
   115ec:	bl	10d18 <dcgettext@plt>
   115f0:	ldr	r4, [pc, #620]	; 11864 <close@plt+0x978>
   115f4:	ldr	r7, [pc, #624]	; 1186c <close@plt+0x980>
   115f8:	ldr	r3, [r4]
   115fc:	mov	r2, r3
   11600:	mov	r1, r0
   11604:	mov	r0, #1
   11608:	bl	10e44 <__printf_chk@plt>
   1160c:	mov	r2, #5
   11610:	ldr	r1, [pc, #600]	; 11870 <close@plt+0x984>
   11614:	mov	r0, r6
   11618:	bl	10d18 <dcgettext@plt>
   1161c:	ldr	r1, [r7]
   11620:	bl	10c88 <fputs_unlocked@plt>
   11624:	mov	r2, #5
   11628:	ldr	r1, [pc, #580]	; 11874 <close@plt+0x988>
   1162c:	mov	r0, r6
   11630:	bl	10d18 <dcgettext@plt>
   11634:	ldr	r1, [r7]
   11638:	bl	10c88 <fputs_unlocked@plt>
   1163c:	mov	r2, #5
   11640:	ldr	r1, [pc, #560]	; 11878 <close@plt+0x98c>
   11644:	mov	r0, r6
   11648:	bl	10d18 <dcgettext@plt>
   1164c:	ldr	r1, [r7]
   11650:	bl	10c88 <fputs_unlocked@plt>
   11654:	mov	r2, #5
   11658:	ldr	r1, [pc, #540]	; 1187c <close@plt+0x990>
   1165c:	mov	r0, r6
   11660:	bl	10d18 <dcgettext@plt>
   11664:	ldr	r2, [r4]
   11668:	ldr	r4, [pc, #528]	; 11880 <close@plt+0x994>
   1166c:	mov	r1, r0
   11670:	mov	r0, #1
   11674:	bl	10e44 <__printf_chk@plt>
   11678:	mov	r2, #5
   1167c:	ldr	r1, [pc, #512]	; 11884 <close@plt+0x998>
   11680:	mov	r0, r6
   11684:	bl	10d18 <dcgettext@plt>
   11688:	ldr	r2, [pc, #504]	; 11888 <close@plt+0x99c>
   1168c:	mov	r1, r0
   11690:	mov	r0, #1
   11694:	bl	10e44 <__printf_chk@plt>
   11698:	ldm	r4!, {r0, r1, r2, r3}
   1169c:	mov	lr, sp
   116a0:	stmia	lr!, {r0, r1, r2, r3}
   116a4:	ldm	r4!, {r0, r1, r2, r3}
   116a8:	ldr	ip, [sp]
   116ac:	stmia	lr!, {r0, r1, r2, r3}
   116b0:	cmp	ip, #0
   116b4:	ldm	r4!, {r0, r1, r2, r3}
   116b8:	stmia	lr!, {r0, r1, r2, r3}
   116bc:	ldm	r4, {r0, r1}
   116c0:	moveq	r4, sp
   116c4:	stm	lr, {r0, r1}
   116c8:	beq	116f8 <close@plt+0x80c>
   116cc:	ldr	r5, [pc, #436]	; 11888 <close@plt+0x99c>
   116d0:	mov	r4, sp
   116d4:	b	116e4 <close@plt+0x7f8>
   116d8:	ldr	ip, [r4, #8]!
   116dc:	cmp	ip, #0
   116e0:	beq	116f8 <close@plt+0x80c>
   116e4:	mov	r1, ip
   116e8:	mov	r0, r5
   116ec:	bl	10ca0 <strcmp@plt>
   116f0:	cmp	r0, #0
   116f4:	bne	116d8 <close@plt+0x7ec>
   116f8:	ldr	r4, [r4, #4]
   116fc:	mov	r2, #5
   11700:	cmp	r4, #0
   11704:	ldr	r1, [pc, #384]	; 1188c <close@plt+0x9a0>
   11708:	beq	117b0 <close@plt+0x8c4>
   1170c:	mov	r0, #0
   11710:	bl	10d18 <dcgettext@plt>
   11714:	ldr	r3, [pc, #372]	; 11890 <close@plt+0x9a4>
   11718:	ldr	r2, [pc, #372]	; 11894 <close@plt+0x9a8>
   1171c:	mov	r1, r0
   11720:	mov	r0, #1
   11724:	bl	10e44 <__printf_chk@plt>
   11728:	mov	r1, #0
   1172c:	mov	r0, #5
   11730:	bl	10e8c <setlocale@plt>
   11734:	cmp	r0, #0
   11738:	ldreq	r5, [pc, #328]	; 11888 <close@plt+0x99c>
   1173c:	beq	11758 <close@plt+0x86c>
   11740:	mov	r2, #3
   11744:	ldr	r1, [pc, #332]	; 11898 <close@plt+0x9ac>
   11748:	bl	10ed4 <strncmp@plt>
   1174c:	ldr	r5, [pc, #308]	; 11888 <close@plt+0x99c>
   11750:	cmp	r0, #0
   11754:	bne	11840 <close@plt+0x954>
   11758:	mov	r2, #5
   1175c:	ldr	r1, [pc, #312]	; 1189c <close@plt+0x9b0>
   11760:	mov	r0, #0
   11764:	bl	10d18 <dcgettext@plt>
   11768:	ldr	r3, [pc, #280]	; 11888 <close@plt+0x99c>
   1176c:	ldr	r2, [pc, #284]	; 11890 <close@plt+0x9a4>
   11770:	mov	r1, r0
   11774:	mov	r0, #1
   11778:	bl	10e44 <__printf_chk@plt>
   1177c:	mov	r2, #5
   11780:	ldr	r1, [pc, #280]	; 118a0 <close@plt+0x9b4>
   11784:	mov	r0, #0
   11788:	bl	10d18 <dcgettext@plt>
   1178c:	ldr	r2, [pc, #272]	; 118a4 <close@plt+0x9b8>
   11790:	cmp	r4, r5
   11794:	ldr	r3, [pc, #268]	; 118a8 <close@plt+0x9bc>
   11798:	movne	r3, r2
   1179c:	mov	r1, r0
   117a0:	mov	r2, r4
   117a4:	mov	r0, #1
   117a8:	bl	10e44 <__printf_chk@plt>
   117ac:	b	115dc <close@plt+0x6f0>
   117b0:	mov	r0, r4
   117b4:	bl	10d18 <dcgettext@plt>
   117b8:	ldr	r3, [pc, #208]	; 11890 <close@plt+0x9a4>
   117bc:	ldr	r2, [pc, #208]	; 11894 <close@plt+0x9a8>
   117c0:	mov	r1, r0
   117c4:	mov	r0, #1
   117c8:	bl	10e44 <__printf_chk@plt>
   117cc:	mov	r1, r4
   117d0:	mov	r0, #5
   117d4:	bl	10e8c <setlocale@plt>
   117d8:	cmp	r0, #0
   117dc:	beq	117f4 <close@plt+0x908>
   117e0:	mov	r2, #3
   117e4:	ldr	r1, [pc, #172]	; 11898 <close@plt+0x9ac>
   117e8:	bl	10ed4 <strncmp@plt>
   117ec:	cmp	r0, #0
   117f0:	bne	11838 <close@plt+0x94c>
   117f4:	mov	r2, #5
   117f8:	ldr	r1, [pc, #156]	; 1189c <close@plt+0x9b0>
   117fc:	mov	r0, #0
   11800:	bl	10d18 <dcgettext@plt>
   11804:	ldr	r3, [pc, #124]	; 11888 <close@plt+0x99c>
   11808:	ldr	r2, [pc, #128]	; 11890 <close@plt+0x9a4>
   1180c:	mov	r4, r3
   11810:	mov	r1, r0
   11814:	mov	r0, #1
   11818:	bl	10e44 <__printf_chk@plt>
   1181c:	ldr	r1, [pc, #124]	; 118a0 <close@plt+0x9b4>
   11820:	mov	r2, #5
   11824:	mov	r0, #0
   11828:	bl	10d18 <dcgettext@plt>
   1182c:	ldr	r3, [pc, #116]	; 118a8 <close@plt+0x9bc>
   11830:	mov	r1, r0
   11834:	b	117a0 <close@plt+0x8b4>
   11838:	ldr	r5, [pc, #72]	; 11888 <close@plt+0x99c>
   1183c:	mov	r4, r5
   11840:	mov	r2, #5
   11844:	ldr	r1, [pc, #96]	; 118ac <close@plt+0x9c0>
   11848:	mov	r0, #0
   1184c:	bl	10d18 <dcgettext@plt>
   11850:	ldr	r1, [r7]
   11854:	bl	10c88 <fputs_unlocked@plt>
   11858:	b	11758 <close@plt+0x86c>
   1185c:	andeq	r6, r2, r8, asr #2
   11860:			; <UNDEFINED> instruction: 0x000152bc
   11864:	andeq	r6, r2, r4, ror #2
   11868:	andeq	r5, r1, r4, ror #5
   1186c:	andeq	r6, r2, ip, asr #2
   11870:	andeq	r5, r1, r4, lsl r3
   11874:	andeq	r5, r1, ip, lsr r3
   11878:	andeq	r5, r1, ip, ror #6
   1187c:	andeq	r5, r1, r4, lsr #7
   11880:	andeq	r5, r1, ip, ror r2
   11884:	andeq	r5, r1, r8, asr #9
   11888:			; <UNDEFINED> instruction: 0x000152b4
   1188c:	andeq	r5, r1, r8, lsl #11
   11890:	andeq	r5, r1, r0, lsr #11
   11894:	andeq	r5, r1, r8, asr #11
   11898:	ldrdeq	r5, [r1], -r8
   1189c:	andeq	r5, r1, r4, lsr #12
   118a0:	andeq	r5, r1, r0, asr #12
   118a4:	andeq	r5, r1, r0, lsl r3
   118a8:	andeq	r5, r1, r8, lsl #16
   118ac:	ldrdeq	r5, [r1], -ip
   118b0:	ldr	r3, [pc, #4]	; 118bc <close@plt+0x9d0>
   118b4:	str	r0, [r3]
   118b8:	bx	lr
   118bc:	andeq	r6, r2, r8, asr r1
   118c0:	ldr	r3, [pc, #4]	; 118cc <close@plt+0x9e0>
   118c4:	strb	r0, [r3, #4]
   118c8:	bx	lr
   118cc:	andeq	r6, r2, r8, asr r1
   118d0:	ldr	r3, [pc, #192]	; 11998 <close@plt+0xaac>
   118d4:	push	{r4, r5, r6, lr}
   118d8:	sub	sp, sp, #8
   118dc:	ldr	r0, [r3]
   118e0:	bl	149b4 <close@plt+0x3ac8>
   118e4:	cmp	r0, #0
   118e8:	beq	1190c <close@plt+0xa20>
   118ec:	ldr	r4, [pc, #168]	; 1199c <close@plt+0xab0>
   118f0:	ldrb	r3, [r4, #4]
   118f4:	cmp	r3, #0
   118f8:	beq	11928 <close@plt+0xa3c>
   118fc:	bl	10e20 <__errno_location@plt>
   11900:	ldr	r3, [r0]
   11904:	cmp	r3, #32
   11908:	bne	11928 <close@plt+0xa3c>
   1190c:	ldr	r3, [pc, #140]	; 119a0 <close@plt+0xab4>
   11910:	ldr	r0, [r3]
   11914:	bl	149b4 <close@plt+0x3ac8>
   11918:	cmp	r0, #0
   1191c:	bne	11970 <close@plt+0xa84>
   11920:	add	sp, sp, #8
   11924:	pop	{r4, r5, r6, pc}
   11928:	mov	r2, #5
   1192c:	ldr	r1, [pc, #112]	; 119a4 <close@plt+0xab8>
   11930:	mov	r0, #0
   11934:	bl	10d18 <dcgettext@plt>
   11938:	ldr	r4, [r4]
   1193c:	cmp	r4, #0
   11940:	mov	r5, r0
   11944:	beq	1197c <close@plt+0xa90>
   11948:	bl	10e20 <__errno_location@plt>
   1194c:	ldr	r6, [r0]
   11950:	mov	r0, r4
   11954:	bl	13be0 <close@plt+0x2cf4>
   11958:	mov	r1, r6
   1195c:	str	r5, [sp]
   11960:	ldr	r2, [pc, #64]	; 119a8 <close@plt+0xabc>
   11964:	mov	r3, r0
   11968:	mov	r0, #0
   1196c:	bl	10d90 <error@plt>
   11970:	ldr	r3, [pc, #52]	; 119ac <close@plt+0xac0>
   11974:	ldr	r0, [r3]
   11978:	bl	10cc4 <_exit@plt>
   1197c:	bl	10e20 <__errno_location@plt>
   11980:	mov	r3, r5
   11984:	ldr	r2, [pc, #36]	; 119b0 <close@plt+0xac4>
   11988:	ldr	r1, [r0]
   1198c:	mov	r0, r4
   11990:	bl	10d90 <error@plt>
   11994:	b	11970 <close@plt+0xa84>
   11998:	andeq	r6, r2, ip, asr #2
   1199c:	andeq	r6, r2, r8, asr r1
   119a0:	andeq	r6, r2, r8, asr #2
   119a4:	andeq	r5, r1, ip, ror r8
   119a8:	andeq	r5, r1, r8, lsl #17
   119ac:	strdeq	r6, [r2], -r0
   119b0:	andeq	r5, r1, ip, lsl #17
   119b4:	push	{r1, r2, r3}
   119b8:	push	{r4, r5, r6, r7, lr}
   119bc:	sub	sp, sp, #8
   119c0:	add	r3, sp, #32
   119c4:	ldr	r1, [sp, #28]
   119c8:	str	r3, [sp, #4]
   119cc:	cmp	r1, #0
   119d0:	beq	11a68 <close@plt+0xb7c>
   119d4:	ldr	r2, [pc, #412]	; 11b78 <close@plt+0xc8c>
   119d8:	mov	r5, r0
   119dc:	cmp	r1, r2
   119e0:	bne	11a2c <close@plt+0xb40>
   119e4:	ldr	r6, [pc, #400]	; 11b7c <close@plt+0xc90>
   119e8:	ldr	r7, [r3]
   119ec:	add	r2, sp, #36	; 0x24
   119f0:	ldr	r3, [r6]
   119f4:	str	r2, [sp, #4]
   119f8:	cmp	r3, #0
   119fc:	mov	r2, r7
   11a00:	blt	11b2c <close@plt+0xc40>
   11a04:	bl	10e80 <fcntl64@plt>
   11a08:	subs	r4, r0, #0
   11a0c:	blt	11ab0 <close@plt+0xbc4>
   11a10:	mov	r3, #1
   11a14:	str	r3, [r6]
   11a18:	mov	r0, r4
   11a1c:	add	sp, sp, #8
   11a20:	pop	{r4, r5, r6, r7, lr}
   11a24:	add	sp, sp, #12
   11a28:	bx	lr
   11a2c:	cmp	r1, #11
   11a30:	beq	11a58 <close@plt+0xb6c>
   11a34:	bgt	11a78 <close@plt+0xb8c>
   11a38:	cmp	r1, #3
   11a3c:	beq	11a58 <close@plt+0xb6c>
   11a40:	ble	11b6c <close@plt+0xc80>
   11a44:	cmp	r1, #8
   11a48:	beq	11a98 <close@plt+0xbac>
   11a4c:	ble	11a98 <close@plt+0xbac>
   11a50:	cmp	r1, #9
   11a54:	bne	11a98 <close@plt+0xbac>
   11a58:	mov	r0, r5
   11a5c:	bl	10e80 <fcntl64@plt>
   11a60:	mov	r4, r0
   11a64:	b	11a18 <close@plt+0xb2c>
   11a68:	ldr	r2, [sp, #32]
   11a6c:	bl	10e80 <fcntl64@plt>
   11a70:	mov	r4, r0
   11a74:	b	11a18 <close@plt+0xb2c>
   11a78:	ldr	r3, [pc, #256]	; 11b80 <close@plt+0xc94>
   11a7c:	cmp	r1, r3
   11a80:	bgt	11b4c <close@plt+0xc60>
   11a84:	cmp	r1, r2
   11a88:	bge	11a98 <close@plt+0xbac>
   11a8c:	sub	r3, r3, #6
   11a90:	cmp	r1, r3
   11a94:	beq	11a58 <close@plt+0xb6c>
   11a98:	ldr	r3, [sp, #4]
   11a9c:	mov	r0, r5
   11aa0:	ldr	r2, [r3]
   11aa4:	bl	10e80 <fcntl64@plt>
   11aa8:	mov	r4, r0
   11aac:	b	11a18 <close@plt+0xb2c>
   11ab0:	bl	10e20 <__errno_location@plt>
   11ab4:	ldr	r3, [r0]
   11ab8:	cmp	r3, #22
   11abc:	bne	11a10 <close@plt+0xb24>
   11ac0:	mov	r2, r7
   11ac4:	mov	r0, r5
   11ac8:	mov	r1, #0
   11acc:	bl	10e80 <fcntl64@plt>
   11ad0:	subs	r4, r0, #0
   11ad4:	blt	11a18 <close@plt+0xb2c>
   11ad8:	mvn	r3, #0
   11adc:	str	r3, [r6]
   11ae0:	mov	r1, #1
   11ae4:	mov	r0, r4
   11ae8:	bl	10e80 <fcntl64@plt>
   11aec:	subs	r2, r0, #0
   11af0:	blt	11b0c <close@plt+0xc20>
   11af4:	orr	r2, r2, #1
   11af8:	mov	r1, #2
   11afc:	mov	r0, r4
   11b00:	bl	10e80 <fcntl64@plt>
   11b04:	cmn	r0, #1
   11b08:	bne	11a18 <close@plt+0xb2c>
   11b0c:	bl	10e20 <__errno_location@plt>
   11b10:	mov	r5, r0
   11b14:	mov	r0, r4
   11b18:	ldr	r6, [r5]
   11b1c:	mvn	r4, #0
   11b20:	bl	10eec <close@plt>
   11b24:	str	r6, [r5]
   11b28:	b	11a18 <close@plt+0xb2c>
   11b2c:	mov	r1, #0
   11b30:	bl	10e80 <fcntl64@plt>
   11b34:	subs	r4, r0, #0
   11b38:	blt	11a18 <close@plt+0xb2c>
   11b3c:	ldr	r3, [r6]
   11b40:	cmn	r3, #1
   11b44:	beq	11ae0 <close@plt+0xbf4>
   11b48:	b	11a18 <close@plt+0xb2c>
   11b4c:	ldr	r3, [pc, #48]	; 11b84 <close@plt+0xc98>
   11b50:	cmp	r1, r3
   11b54:	beq	11a98 <close@plt+0xbac>
   11b58:	blt	11a58 <close@plt+0xb6c>
   11b5c:	add	r3, r3, #1
   11b60:	cmp	r1, r3
   11b64:	bne	11a98 <close@plt+0xbac>
   11b68:	b	11a58 <close@plt+0xb6c>
   11b6c:	cmp	r1, #1
   11b70:	bne	11a98 <close@plt+0xbac>
   11b74:	b	11a58 <close@plt+0xb6c>
   11b78:	andeq	r0, r0, r6, lsl #8
   11b7c:	andeq	r6, r2, r0, ror #2
   11b80:	andeq	r0, r0, r7, lsl #8
   11b84:	andeq	r0, r0, r9, lsl #8
   11b88:	mov	ip, r1
   11b8c:	push	{r4, r5, r6, r7, r8, lr}
   11b90:	mov	r1, r2
   11b94:	mov	r5, r0
   11b98:	mov	r2, r3
   11b9c:	mov	r0, ip
   11ba0:	bl	10d9c <open64@plt>
   11ba4:	sub	r3, r5, r0
   11ba8:	clz	r3, r3
   11bac:	lsr	r3, r3, #5
   11bb0:	orrs	r3, r3, r0, lsr #31
   11bb4:	mov	r4, r0
   11bb8:	bne	11be4 <close@plt+0xcf8>
   11bbc:	mov	r1, r5
   11bc0:	bl	10d24 <dup2@plt>
   11bc4:	mov	r7, r0
   11bc8:	bl	10e20 <__errno_location@plt>
   11bcc:	mov	r5, r0
   11bd0:	mov	r0, r4
   11bd4:	ldr	r6, [r5]
   11bd8:	mov	r4, r7
   11bdc:	bl	10eec <close@plt>
   11be0:	str	r6, [r5]
   11be4:	mov	r0, r4
   11be8:	pop	{r4, r5, r6, r7, r8, pc}
   11bec:	push	{r4, lr}
   11bf0:	bl	11c00 <close@plt+0xd14>
   11bf4:	cmp	r0, #0
   11bf8:	popne	{r4, pc}
   11bfc:	bl	147f8 <close@plt+0x390c>
   11c00:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c04:	mov	r6, r1
   11c08:	mov	r8, r2
   11c0c:	mov	fp, r0
   11c10:	bl	14908 <close@plt+0x3a1c>
   11c14:	mov	r4, r0
   11c18:	bl	14964 <close@plt+0x3a78>
   11c1c:	sub	r4, r4, fp
   11c20:	mov	r5, r0
   11c24:	mov	r0, r6
   11c28:	bl	10e14 <strlen@plt>
   11c2c:	cmp	r5, #0
   11c30:	add	r4, r4, r5
   11c34:	mov	r7, r0
   11c38:	beq	11cac <close@plt+0xdc0>
   11c3c:	add	r3, fp, r4
   11c40:	ldrb	r3, [r3, #-1]
   11c44:	cmp	r3, #47	; 0x2f
   11c48:	beq	11cc4 <close@plt+0xdd8>
   11c4c:	ldrb	r3, [r6]
   11c50:	cmp	r3, #47	; 0x2f
   11c54:	beq	11cc4 <close@plt+0xdd8>
   11c58:	mov	r5, #1
   11c5c:	mov	sl, #47	; 0x2f
   11c60:	add	r0, r7, #1
   11c64:	add	r0, r0, r4
   11c68:	add	r0, r0, r5
   11c6c:	bl	14880 <close@plt+0x3994>
   11c70:	subs	r9, r0, #0
   11c74:	beq	11ca4 <close@plt+0xdb8>
   11c78:	mov	r2, r4
   11c7c:	mov	r1, fp
   11c80:	bl	10de4 <mempcpy@plt>
   11c84:	cmp	r8, #0
   11c88:	mov	r2, r7
   11c8c:	mov	r1, r6
   11c90:	strb	sl, [r0], r5
   11c94:	strne	r0, [r8]
   11c98:	bl	10de4 <mempcpy@plt>
   11c9c:	mov	r3, #0
   11ca0:	strb	r3, [r0]
   11ca4:	mov	r0, r9
   11ca8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11cac:	ldrb	r3, [r6]
   11cb0:	cmp	r3, #47	; 0x2f
   11cb4:	moveq	r5, #1
   11cb8:	moveq	sl, #46	; 0x2e
   11cbc:	movne	sl, r5
   11cc0:	b	11c60 <close@plt+0xd74>
   11cc4:	mov	r5, #0
   11cc8:	mov	sl, r5
   11ccc:	b	11c60 <close@plt+0xd74>
   11cd0:	push	{r4, r5, lr}
   11cd4:	sub	sp, sp, #12
   11cd8:	mov	r5, r0
   11cdc:	bl	10e20 <__errno_location@plt>
   11ce0:	mov	r2, #0
   11ce4:	mov	r4, r0
   11ce8:	ldr	r3, [r0]
   11cec:	str	r2, [r4]
   11cf0:	mov	r0, r5
   11cf4:	str	r3, [sp]
   11cf8:	str	r3, [sp, #4]
   11cfc:	bl	10cb8 <free@plt>
   11d00:	ldr	r3, [r4]
   11d04:	add	r2, sp, #8
   11d08:	cmp	r3, #0
   11d0c:	moveq	r3, #4
   11d10:	movne	r3, #0
   11d14:	add	r3, r2, r3
   11d18:	ldr	r3, [r3, #-8]
   11d1c:	str	r3, [r4]
   11d20:	add	sp, sp, #12
   11d24:	pop	{r4, r5, pc}
   11d28:	push	{r4, r5, r6, r7, r8, lr}
   11d2c:	cmp	r0, #2
   11d30:	ldr	r4, [pc, #148]	; 11dcc <close@plt+0xee0>
   11d34:	mov	r5, #0
   11d38:	sub	sp, sp, #16
   11d3c:	ldr	r6, [r4]
   11d40:	str	r5, [r4]
   11d44:	beq	11d60 <close@plt+0xe74>
   11d48:	ldr	r3, [pc, #128]	; 11dd0 <close@plt+0xee4>
   11d4c:	mov	r2, #0
   11d50:	str	r6, [r4]
   11d54:	str	r2, [r3]
   11d58:	add	sp, sp, #16
   11d5c:	pop	{r4, r5, r6, r7, r8, pc}
   11d60:	mov	r8, r3
   11d64:	mov	r7, r2
   11d68:	str	r5, [sp]
   11d6c:	ldr	r3, [pc, #96]	; 11dd4 <close@plt+0xee8>
   11d70:	ldr	r2, [pc, #96]	; 11dd8 <close@plt+0xeec>
   11d74:	bl	10df0 <getopt_long@plt>
   11d78:	cmn	r0, #1
   11d7c:	beq	11d48 <close@plt+0xe5c>
   11d80:	cmp	r0, #104	; 0x68
   11d84:	beq	11dbc <close@plt+0xed0>
   11d88:	cmp	r0, #118	; 0x76
   11d8c:	bne	11d48 <close@plt+0xe5c>
   11d90:	ldr	r3, [pc, #68]	; 11ddc <close@plt+0xef0>
   11d94:	add	ip, sp, #48	; 0x30
   11d98:	mov	r2, r8
   11d9c:	ldr	r0, [r3]
   11da0:	mov	r1, r7
   11da4:	str	ip, [sp]
   11da8:	ldr	r3, [sp, #40]	; 0x28
   11dac:	str	ip, [sp, #12]
   11db0:	bl	14168 <close@plt+0x327c>
   11db4:	mov	r0, r5
   11db8:	bl	10e08 <exit@plt>
   11dbc:	mov	r0, r5
   11dc0:	ldr	r3, [sp, #44]	; 0x2c
   11dc4:	blx	r3
   11dc8:	b	11d48 <close@plt+0xe5c>
   11dcc:	andeq	r6, r2, r0, asr r1
   11dd0:	andeq	r6, r2, r0, asr #2
   11dd4:	muleq	r1, r0, r8
   11dd8:	andeq	r5, r1, r0, asr #17
   11ddc:	andeq	r6, r2, ip, asr #2
   11de0:	push	{r4, r5, r6, r7, r8, lr}
   11de4:	sub	sp, sp, #16
   11de8:	ldr	r5, [pc, #176]	; 11ea0 <close@plt+0xfb4>
   11dec:	ldrb	r8, [sp, #44]	; 0x2c
   11df0:	ldr	r4, [pc, #172]	; 11ea4 <close@plt+0xfb8>
   11df4:	ldr	lr, [pc, #172]	; 11ea8 <close@plt+0xfbc>
   11df8:	cmp	r8, #0
   11dfc:	mov	r6, r2
   11e00:	movne	r2, r5
   11e04:	mov	r5, #0
   11e08:	mov	ip, #1
   11e0c:	moveq	r2, lr
   11e10:	mov	r7, r3
   11e14:	str	r5, [sp]
   11e18:	ldr	r3, [pc, #140]	; 11eac <close@plt+0xfc0>
   11e1c:	ldr	r8, [r4]
   11e20:	str	ip, [r4]
   11e24:	bl	10df0 <getopt_long@plt>
   11e28:	cmn	r0, #1
   11e2c:	beq	11e7c <close@plt+0xf90>
   11e30:	cmp	r0, #104	; 0x68
   11e34:	beq	11e88 <close@plt+0xf9c>
   11e38:	cmp	r0, #118	; 0x76
   11e3c:	bne	11e6c <close@plt+0xf80>
   11e40:	ldr	r3, [pc, #104]	; 11eb0 <close@plt+0xfc4>
   11e44:	add	ip, sp, #52	; 0x34
   11e48:	mov	r2, r7
   11e4c:	ldr	r0, [r3]
   11e50:	mov	r1, r6
   11e54:	str	ip, [sp]
   11e58:	ldr	r3, [sp, #40]	; 0x28
   11e5c:	str	ip, [sp, #12]
   11e60:	bl	14168 <close@plt+0x327c>
   11e64:	mov	r0, r5
   11e68:	bl	10e08 <exit@plt>
   11e6c:	ldr	r3, [pc, #64]	; 11eb4 <close@plt+0xfc8>
   11e70:	ldr	r0, [r3]
   11e74:	ldr	r3, [sp, #48]	; 0x30
   11e78:	blx	r3
   11e7c:	str	r8, [r4]
   11e80:	add	sp, sp, #16
   11e84:	pop	{r4, r5, r6, r7, r8, pc}
   11e88:	mov	r0, r5
   11e8c:	ldr	r3, [sp, #48]	; 0x30
   11e90:	blx	r3
   11e94:	str	r8, [r4]
   11e98:	add	sp, sp, #16
   11e9c:	pop	{r4, r5, r6, r7, r8, pc}
   11ea0:	andeq	r5, r1, r0, lsl r3
   11ea4:	andeq	r6, r2, r0, asr r1
   11ea8:	andeq	r5, r1, r0, asr #17
   11eac:	muleq	r1, r0, r8
   11eb0:	andeq	r6, r2, ip, asr #2
   11eb4:	strdeq	r6, [r2], -r0
   11eb8:	push	{r4, r5, r6, lr}
   11ebc:	subs	r4, r0, #0
   11ec0:	beq	11f34 <close@plt+0x1048>
   11ec4:	mov	r1, #47	; 0x2f
   11ec8:	bl	10e98 <strrchr@plt>
   11ecc:	subs	r5, r0, #0
   11ed0:	beq	11f20 <close@plt+0x1034>
   11ed4:	add	r6, r5, #1
   11ed8:	sub	r3, r6, r4
   11edc:	cmp	r3, #6
   11ee0:	ble	11f20 <close@plt+0x1034>
   11ee4:	mov	r2, #7
   11ee8:	ldr	r1, [pc, #96]	; 11f50 <close@plt+0x1064>
   11eec:	sub	r0, r5, #6
   11ef0:	bl	10ed4 <strncmp@plt>
   11ef4:	cmp	r0, #0
   11ef8:	bne	11f20 <close@plt+0x1034>
   11efc:	mov	r2, #3
   11f00:	ldr	r1, [pc, #76]	; 11f54 <close@plt+0x1068>
   11f04:	mov	r0, r6
   11f08:	bl	10ed4 <strncmp@plt>
   11f0c:	cmp	r0, #0
   11f10:	movne	r4, r6
   11f14:	ldreq	r3, [pc, #60]	; 11f58 <close@plt+0x106c>
   11f18:	addeq	r4, r5, #4
   11f1c:	streq	r4, [r3]
   11f20:	ldr	r2, [pc, #52]	; 11f5c <close@plt+0x1070>
   11f24:	ldr	r3, [pc, #52]	; 11f60 <close@plt+0x1074>
   11f28:	str	r4, [r2]
   11f2c:	str	r4, [r3]
   11f30:	pop	{r4, r5, r6, pc}
   11f34:	ldr	r3, [pc, #40]	; 11f64 <close@plt+0x1078>
   11f38:	mov	r2, #55	; 0x37
   11f3c:	mov	r1, #1
   11f40:	ldr	r3, [r3]
   11f44:	ldr	r0, [pc, #28]	; 11f68 <close@plt+0x107c>
   11f48:	bl	10d54 <fwrite@plt>
   11f4c:	bl	10ee0 <abort@plt>
   11f50:	andeq	r5, r1, ip, lsl #18
   11f54:	andeq	r5, r1, r4, lsl r9
   11f58:	andeq	r6, r2, r8, lsr r1
   11f5c:	andeq	r6, r2, r4, ror #2
   11f60:	andeq	r6, r2, ip, lsr r1
   11f64:	andeq	r6, r2, r8, asr #2
   11f68:	ldrdeq	r5, [r1], -r4
   11f6c:	push	{r4, r5, r6, lr}
   11f70:	mov	r2, #48	; 0x30
   11f74:	mov	r4, r1
   11f78:	mov	r1, #0
   11f7c:	mov	r5, r0
   11f80:	bl	10e38 <memset@plt>
   11f84:	cmp	r4, #10
   11f88:	beq	11f98 <close@plt+0x10ac>
   11f8c:	str	r4, [r5]
   11f90:	mov	r0, r5
   11f94:	pop	{r4, r5, r6, pc}
   11f98:	bl	10ee0 <abort@plt>
   11f9c:	push	{r4, r5, r6, lr}
   11fa0:	mov	r4, r0
   11fa4:	mov	r5, r1
   11fa8:	bl	14bd0 <close@plt+0x3ce4>
   11fac:	ldrb	r3, [r0]
   11fb0:	bic	r3, r3, #32
   11fb4:	cmp	r3, #85	; 0x55
   11fb8:	bne	12018 <close@plt+0x112c>
   11fbc:	ldrb	r3, [r0, #1]
   11fc0:	bic	r3, r3, #32
   11fc4:	cmp	r3, #84	; 0x54
   11fc8:	bne	12054 <close@plt+0x1168>
   11fcc:	ldrb	r3, [r0, #2]
   11fd0:	bic	r3, r3, #32
   11fd4:	cmp	r3, #70	; 0x46
   11fd8:	bne	12054 <close@plt+0x1168>
   11fdc:	ldrb	r3, [r0, #3]
   11fe0:	cmp	r3, #45	; 0x2d
   11fe4:	bne	12054 <close@plt+0x1168>
   11fe8:	ldrb	r3, [r0, #4]
   11fec:	cmp	r3, #56	; 0x38
   11ff0:	bne	12054 <close@plt+0x1168>
   11ff4:	ldrb	r3, [r0, #5]
   11ff8:	cmp	r3, #0
   11ffc:	bne	12054 <close@plt+0x1168>
   12000:	ldrb	r2, [r4]
   12004:	ldr	r3, [pc, #152]	; 120a4 <close@plt+0x11b8>
   12008:	ldr	r0, [pc, #152]	; 120a8 <close@plt+0x11bc>
   1200c:	cmp	r2, #96	; 0x60
   12010:	movne	r0, r3
   12014:	pop	{r4, r5, r6, pc}
   12018:	cmp	r3, #71	; 0x47
   1201c:	bne	12054 <close@plt+0x1168>
   12020:	ldrb	r3, [r0, #1]
   12024:	bic	r3, r3, #32
   12028:	cmp	r3, #66	; 0x42
   1202c:	bne	12054 <close@plt+0x1168>
   12030:	ldrb	r3, [r0, #2]
   12034:	cmp	r3, #49	; 0x31
   12038:	bne	12054 <close@plt+0x1168>
   1203c:	ldrb	r3, [r0, #3]
   12040:	cmp	r3, #56	; 0x38
   12044:	bne	12054 <close@plt+0x1168>
   12048:	ldrb	r3, [r0, #4]
   1204c:	cmp	r3, #48	; 0x30
   12050:	beq	12068 <close@plt+0x117c>
   12054:	ldr	r3, [pc, #80]	; 120ac <close@plt+0x11c0>
   12058:	cmp	r5, #9
   1205c:	ldr	r0, [pc, #76]	; 120b0 <close@plt+0x11c4>
   12060:	movne	r0, r3
   12064:	pop	{r4, r5, r6, pc}
   12068:	ldrb	r3, [r0, #5]
   1206c:	cmp	r3, #51	; 0x33
   12070:	bne	12054 <close@plt+0x1168>
   12074:	ldrb	r3, [r0, #6]
   12078:	cmp	r3, #48	; 0x30
   1207c:	bne	12054 <close@plt+0x1168>
   12080:	ldrb	r3, [r0, #7]
   12084:	cmp	r3, #0
   12088:	bne	12054 <close@plt+0x1168>
   1208c:	ldrb	r2, [r4]
   12090:	ldr	r3, [pc, #28]	; 120b4 <close@plt+0x11c8>
   12094:	ldr	r0, [pc, #28]	; 120b8 <close@plt+0x11cc>
   12098:	cmp	r2, #96	; 0x60
   1209c:	movne	r0, r3
   120a0:	pop	{r4, r5, r6, pc}
   120a4:	andeq	r5, r1, r0, ror r9
   120a8:	andeq	r5, r1, ip, ror #18
   120ac:	andeq	r5, r1, r0, lsl #19
   120b0:	andeq	r5, r1, ip, ror r9
   120b4:	andeq	r5, r1, r8, ror r9
   120b8:	andeq	r5, r1, r4, ror r9
   120bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120c0:	sub	sp, sp, #116	; 0x74
   120c4:	mov	sl, r0
   120c8:	str	r3, [sp, #24]
   120cc:	mov	r3, #1
   120d0:	mov	r8, r1
   120d4:	str	r2, [sp, #56]	; 0x38
   120d8:	str	r3, [sp, #36]	; 0x24
   120dc:	bl	10d6c <__ctype_get_mb_cur_max@plt>
   120e0:	ldr	r3, [sp, #156]	; 0x9c
   120e4:	mov	fp, r8
   120e8:	mov	r2, #0
   120ec:	lsr	r3, r3, #1
   120f0:	and	r3, r3, #1
   120f4:	str	r2, [sp, #68]	; 0x44
   120f8:	str	r3, [sp, #28]
   120fc:	str	r2, [sp, #40]	; 0x28
   12100:	str	r2, [sp, #44]	; 0x2c
   12104:	str	r2, [sp, #52]	; 0x34
   12108:	str	r2, [sp, #64]	; 0x40
   1210c:	str	r2, [sp, #72]	; 0x48
   12110:	str	sl, [sp, #32]
   12114:	str	r0, [sp, #76]	; 0x4c
   12118:	ldr	r3, [sp, #152]	; 0x98
   1211c:	cmp	r3, #10
   12120:	ldrls	pc, [pc, r3, lsl #2]
   12124:	b	132e4 <close@plt+0x23f8>
   12128:	andeq	r2, r1, r4, asr r1
   1212c:	andeq	r2, r1, ip, lsr r4
   12130:	andeq	r2, r1, r0, ror #8
   12134:	andeq	r2, r1, r4, lsl #9
   12138:			; <UNDEFINED> instruction: 0x000125b0
   1213c:	andeq	r2, r1, r4, lsl #11
   12140:	andeq	r2, r1, ip, asr r5
   12144:	muleq	r1, r8, r4
   12148:			; <UNDEFINED> instruction: 0x000124b0
   1214c:			; <UNDEFINED> instruction: 0x000124b0
   12150:			; <UNDEFINED> instruction: 0x000124b0
   12154:	mov	r3, #0
   12158:	mov	r7, r3
   1215c:	str	r3, [sp, #28]
   12160:	ldr	r3, [sp, #44]	; 0x2c
   12164:	mov	sl, #0
   12168:	eor	r3, r3, #1
   1216c:	str	r3, [sp, #60]	; 0x3c
   12170:	ldr	r3, [sp, #24]
   12174:	cmn	r3, #1
   12178:	beq	126dc <close@plt+0x17f0>
   1217c:	ldr	r3, [sp, #24]
   12180:	subs	r5, r3, sl
   12184:	movne	r5, #1
   12188:	cmp	r5, #0
   1218c:	beq	126f4 <close@plt+0x1808>
   12190:	ldr	r3, [sp, #152]	; 0x98
   12194:	ldr	r8, [sp, #44]	; 0x2c
   12198:	cmp	r3, #2
   1219c:	moveq	r8, #0
   121a0:	andne	r8, r8, #1
   121a4:	ldr	r3, [sp, #52]	; 0x34
   121a8:	adds	r9, r3, #0
   121ac:	movne	r9, #1
   121b0:	ands	r6, r9, r8
   121b4:	beq	12b5c <close@plt+0x1c70>
   121b8:	ldr	r2, [sp, #52]	; 0x34
   121bc:	ldr	r1, [sp, #24]
   121c0:	cmp	r2, #1
   121c4:	mov	r3, r2
   121c8:	movls	r3, #0
   121cc:	movhi	r3, #1
   121d0:	cmn	r1, #1
   121d4:	movne	r3, #0
   121d8:	cmp	r3, #0
   121dc:	add	r4, sl, r2
   121e0:	beq	121f0 <close@plt+0x1304>
   121e4:	ldr	r0, [sp, #56]	; 0x38
   121e8:	bl	10e14 <strlen@plt>
   121ec:	str	r0, [sp, #24]
   121f0:	ldr	r3, [sp, #24]
   121f4:	cmp	r3, r4
   121f8:	ldr	r3, [sp, #56]	; 0x38
   121fc:	add	r3, r3, sl
   12200:	str	r3, [sp, #48]	; 0x30
   12204:	bcc	12b68 <close@plt+0x1c7c>
   12208:	mov	r0, r3
   1220c:	ldr	r2, [sp, #52]	; 0x34
   12210:	ldr	r1, [sp, #64]	; 0x40
   12214:	bl	10d00 <memcmp@plt>
   12218:	cmp	r0, #0
   1221c:	bne	12b68 <close@plt+0x1c7c>
   12220:	ldr	r3, [sp, #28]
   12224:	cmp	r3, #0
   12228:	bne	133e4 <close@plt+0x24f8>
   1222c:	ldr	r3, [sp, #48]	; 0x30
   12230:	ldrb	r4, [r3]
   12234:	cmp	r4, #126	; 0x7e
   12238:	ldrls	pc, [pc, r4, lsl #2]
   1223c:	b	12afc <close@plt+0x1c10>
   12240:	andeq	r2, r1, r0, lsr #18
   12244:	strdeq	r2, [r1], -ip
   12248:	strdeq	r2, [r1], -ip
   1224c:	strdeq	r2, [r1], -ip
   12250:	strdeq	r2, [r1], -ip
   12254:	strdeq	r2, [r1], -ip
   12258:	strdeq	r2, [r1], -ip
   1225c:	andeq	r2, r1, r4, lsl #18
   12260:	andeq	r2, r1, r8, ror #17
   12264:	andeq	r2, r1, r4, ror #21
   12268:	andeq	r2, r1, r8, asr #16
   1226c:	andeq	r2, r1, ip, lsr #16
   12270:	andeq	r2, r1, r0, asr #21
   12274:	muleq	r1, ip, sl
   12278:	strdeq	r2, [r1], -ip
   1227c:	strdeq	r2, [r1], -ip
   12280:	strdeq	r2, [r1], -ip
   12284:	strdeq	r2, [r1], -ip
   12288:	strdeq	r2, [r1], -ip
   1228c:	strdeq	r2, [r1], -ip
   12290:	strdeq	r2, [r1], -ip
   12294:	strdeq	r2, [r1], -ip
   12298:	strdeq	r2, [r1], -ip
   1229c:	strdeq	r2, [r1], -ip
   122a0:	strdeq	r2, [r1], -ip
   122a4:	strdeq	r2, [r1], -ip
   122a8:	strdeq	r2, [r1], -ip
   122ac:	strdeq	r2, [r1], -ip
   122b0:	strdeq	r2, [r1], -ip
   122b4:	strdeq	r2, [r1], -ip
   122b8:	strdeq	r2, [r1], -ip
   122bc:	strdeq	r2, [r1], -ip
   122c0:	ldrdeq	r2, [r1], -ip
   122c4:	andeq	r2, r1, r0, lsl sl
   122c8:	andeq	r2, r1, r0, lsl sl
   122cc:	andeq	r2, r1, r0, lsr #12
   122d0:	andeq	r2, r1, r0, lsl sl
   122d4:	andeq	r2, r1, r8, lsr #21
   122d8:	andeq	r2, r1, r0, lsl sl
   122dc:	andeq	r2, r1, ip, ror sl
   122e0:	andeq	r2, r1, r0, lsl sl
   122e4:	andeq	r2, r1, r0, lsl sl
   122e8:	andeq	r2, r1, r0, lsl sl
   122ec:	andeq	r2, r1, r8, lsr #21
   122f0:	andeq	r2, r1, r8, lsr #21
   122f4:	andeq	r2, r1, r8, lsr #21
   122f8:	andeq	r2, r1, r8, lsr #21
   122fc:	andeq	r2, r1, r8, lsr #21
   12300:	andeq	r2, r1, r8, lsr #21
   12304:	andeq	r2, r1, r8, lsr #21
   12308:	andeq	r2, r1, r8, lsr #21
   1230c:	andeq	r2, r1, r8, lsr #21
   12310:	andeq	r2, r1, r8, lsr #21
   12314:	andeq	r2, r1, r8, lsr #21
   12318:	andeq	r2, r1, r8, lsr #21
   1231c:	andeq	r2, r1, r8, lsr #21
   12320:	andeq	r2, r1, r8, lsr #21
   12324:	andeq	r2, r1, r8, lsr #21
   12328:	andeq	r2, r1, r8, lsr #21
   1232c:	andeq	r2, r1, r0, lsl sl
   12330:	andeq	r2, r1, r0, lsl sl
   12334:	andeq	r2, r1, r0, lsl sl
   12338:	andeq	r2, r1, r0, lsl sl
   1233c:	andeq	r2, r1, ip, asr #20
   12340:	strdeq	r2, [r1], -ip
   12344:	andeq	r2, r1, r8, lsr #21
   12348:	andeq	r2, r1, r8, lsr #21
   1234c:	andeq	r2, r1, r8, lsr #21
   12350:	andeq	r2, r1, r8, lsr #21
   12354:	andeq	r2, r1, r8, lsr #21
   12358:	andeq	r2, r1, r8, lsr #21
   1235c:	andeq	r2, r1, r8, lsr #21
   12360:	andeq	r2, r1, r8, lsr #21
   12364:	andeq	r2, r1, r8, lsr #21
   12368:	andeq	r2, r1, r8, lsr #21
   1236c:	andeq	r2, r1, r8, lsr #21
   12370:	andeq	r2, r1, r8, lsr #21
   12374:	andeq	r2, r1, r8, lsr #21
   12378:	andeq	r2, r1, r8, lsr #21
   1237c:	andeq	r2, r1, r8, lsr #21
   12380:	andeq	r2, r1, r8, lsr #21
   12384:	andeq	r2, r1, r8, lsr #21
   12388:	andeq	r2, r1, r8, lsr #21
   1238c:	andeq	r2, r1, r8, lsr #21
   12390:	andeq	r2, r1, r8, lsr #21
   12394:	andeq	r2, r1, r8, lsr #21
   12398:	andeq	r2, r1, r8, lsr #21
   1239c:	andeq	r2, r1, r8, lsr #21
   123a0:	andeq	r2, r1, r8, lsr #21
   123a4:	andeq	r2, r1, r8, lsr #21
   123a8:	andeq	r2, r1, r8, lsr #21
   123ac:	andeq	r2, r1, r0, lsl sl
   123b0:	andeq	r2, r1, ip, ror #14
   123b4:	andeq	r2, r1, r8, lsr #21
   123b8:	andeq	r2, r1, r0, lsl sl
   123bc:	andeq	r2, r1, r8, lsr #21
   123c0:	andeq	r2, r1, r0, lsl sl
   123c4:	andeq	r2, r1, r8, lsr #21
   123c8:	andeq	r2, r1, r8, lsr #21
   123cc:	andeq	r2, r1, r8, lsr #21
   123d0:	andeq	r2, r1, r8, lsr #21
   123d4:	andeq	r2, r1, r8, lsr #21
   123d8:	andeq	r2, r1, r8, lsr #21
   123dc:	andeq	r2, r1, r8, lsr #21
   123e0:	andeq	r2, r1, r8, lsr #21
   123e4:	andeq	r2, r1, r8, lsr #21
   123e8:	andeq	r2, r1, r8, lsr #21
   123ec:	andeq	r2, r1, r8, lsr #21
   123f0:	andeq	r2, r1, r8, lsr #21
   123f4:	andeq	r2, r1, r8, lsr #21
   123f8:	andeq	r2, r1, r8, lsr #21
   123fc:	andeq	r2, r1, r8, lsr #21
   12400:	andeq	r2, r1, r8, lsr #21
   12404:	andeq	r2, r1, r8, lsr #21
   12408:	andeq	r2, r1, r8, lsr #21
   1240c:	andeq	r2, r1, r8, lsr #21
   12410:	andeq	r2, r1, r8, lsr #21
   12414:	andeq	r2, r1, r8, lsr #21
   12418:	andeq	r2, r1, r8, lsr #21
   1241c:	andeq	r2, r1, r8, lsr #21
   12420:	andeq	r2, r1, r8, lsr #21
   12424:	andeq	r2, r1, r8, lsr #21
   12428:	andeq	r2, r1, r8, lsr #21
   1242c:	andeq	r2, r1, r0, lsl #12
   12430:	andeq	r2, r1, r0, lsl sl
   12434:	andeq	r2, r1, r0, lsl #12
   12438:	andeq	r2, r1, r0, lsr #12
   1243c:	mov	r3, #1
   12440:	str	r3, [sp, #28]
   12444:	str	r3, [sp, #52]	; 0x34
   12448:	ldr	r3, [pc, #4000]	; 133f0 <close@plt+0x2504>
   1244c:	mov	r7, #0
   12450:	str	r3, [sp, #64]	; 0x40
   12454:	mov	r3, #2
   12458:	str	r3, [sp, #152]	; 0x98
   1245c:	b	12160 <close@plt+0x1274>
   12460:	ldr	r3, [sp, #28]
   12464:	cmp	r3, #0
   12468:	beq	125c4 <close@plt+0x16d8>
   1246c:	mov	r3, #1
   12470:	str	r3, [sp, #52]	; 0x34
   12474:	ldr	r3, [pc, #3956]	; 133f0 <close@plt+0x2504>
   12478:	mov	r7, #0
   1247c:	str	r3, [sp, #64]	; 0x40
   12480:	b	12160 <close@plt+0x1274>
   12484:	mov	r3, #1
   12488:	str	r3, [sp, #44]	; 0x2c
   1248c:	str	r3, [sp, #52]	; 0x34
   12490:	str	r3, [sp, #28]
   12494:	b	12448 <close@plt+0x155c>
   12498:	mov	r3, #0
   1249c:	str	r3, [sp, #28]
   124a0:	mov	r3, #1
   124a4:	str	r3, [sp, #44]	; 0x2c
   124a8:	mov	r7, #0
   124ac:	b	12160 <close@plt+0x1274>
   124b0:	ldr	r3, [sp, #152]	; 0x98
   124b4:	cmp	r3, #10
   124b8:	beq	124fc <close@plt+0x1610>
   124bc:	mov	r2, #5
   124c0:	ldr	r1, [pc, #3884]	; 133f4 <close@plt+0x2508>
   124c4:	mov	r0, #0
   124c8:	bl	10d18 <dcgettext@plt>
   124cc:	ldr	r2, [pc, #3872]	; 133f4 <close@plt+0x2508>
   124d0:	cmp	r0, r2
   124d4:	str	r0, [sp, #164]	; 0xa4
   124d8:	beq	134e0 <close@plt+0x25f4>
   124dc:	mov	r2, #5
   124e0:	ldr	r1, [pc, #3848]	; 133f0 <close@plt+0x2504>
   124e4:	mov	r0, #0
   124e8:	bl	10d18 <dcgettext@plt>
   124ec:	ldr	r2, [pc, #3836]	; 133f0 <close@plt+0x2504>
   124f0:	cmp	r0, r2
   124f4:	str	r0, [sp, #168]	; 0xa8
   124f8:	beq	134d0 <close@plt+0x25e4>
   124fc:	ldr	r7, [sp, #28]
   12500:	cmp	r7, #0
   12504:	movne	r7, #0
   12508:	bne	1253c <close@plt+0x1650>
   1250c:	ldr	r3, [sp, #164]	; 0xa4
   12510:	ldrb	r3, [r3]
   12514:	cmp	r3, #0
   12518:	beq	134f0 <close@plt+0x2604>
   1251c:	ldr	r2, [sp, #164]	; 0xa4
   12520:	ldr	r1, [sp, #32]
   12524:	cmp	fp, r7
   12528:	strbhi	r3, [r1, r7]
   1252c:	ldrb	r3, [r2, #1]!
   12530:	add	r7, r7, #1
   12534:	cmp	r3, #0
   12538:	bne	12524 <close@plt+0x1638>
   1253c:	ldr	r0, [sp, #168]	; 0xa8
   12540:	bl	10e14 <strlen@plt>
   12544:	ldr	r3, [sp, #168]	; 0xa8
   12548:	str	r3, [sp, #64]	; 0x40
   1254c:	mov	r3, #1
   12550:	str	r3, [sp, #44]	; 0x2c
   12554:	str	r0, [sp, #52]	; 0x34
   12558:	b	12160 <close@plt+0x1274>
   1255c:	mov	r3, #1
   12560:	str	r3, [sp, #44]	; 0x2c
   12564:	str	r3, [sp, #52]	; 0x34
   12568:	str	r3, [sp, #28]
   1256c:	ldr	r3, [pc, #3716]	; 133f8 <close@plt+0x250c>
   12570:	mov	r7, #0
   12574:	str	r3, [sp, #64]	; 0x40
   12578:	mov	r3, #5
   1257c:	str	r3, [sp, #152]	; 0x98
   12580:	b	12160 <close@plt+0x1274>
   12584:	ldr	r3, [sp, #28]
   12588:	cmp	r3, #0
   1258c:	beq	1328c <close@plt+0x23a0>
   12590:	ldr	r3, [sp, #28]
   12594:	mov	r7, #0
   12598:	str	r3, [sp, #44]	; 0x2c
   1259c:	mov	r3, #1
   125a0:	str	r3, [sp, #52]	; 0x34
   125a4:	ldr	r3, [pc, #3660]	; 133f8 <close@plt+0x250c>
   125a8:	str	r3, [sp, #64]	; 0x40
   125ac:	b	12160 <close@plt+0x1274>
   125b0:	ldr	r3, [sp, #28]
   125b4:	cmp	r3, #0
   125b8:	mov	r3, #1
   125bc:	streq	r3, [sp, #44]	; 0x2c
   125c0:	bne	12444 <close@plt+0x1558>
   125c4:	cmp	fp, #0
   125c8:	beq	132bc <close@plt+0x23d0>
   125cc:	ldr	r3, [sp, #32]
   125d0:	mov	r2, #39	; 0x27
   125d4:	mov	r7, #1
   125d8:	strb	r2, [r3]
   125dc:	mov	r3, #0
   125e0:	str	r3, [sp, #28]
   125e4:	mov	r3, #1
   125e8:	str	r3, [sp, #52]	; 0x34
   125ec:	ldr	r3, [pc, #3580]	; 133f0 <close@plt+0x2504>
   125f0:	str	r3, [sp, #64]	; 0x40
   125f4:	mov	r3, #2
   125f8:	str	r3, [sp, #152]	; 0x98
   125fc:	b	12160 <close@plt+0x1274>
   12600:	ldr	r3, [sp, #24]
   12604:	cmn	r3, #1
   12608:	beq	13220 <close@plt+0x2334>
   1260c:	ldr	r3, [sp, #24]
   12610:	subs	r3, r3, #1
   12614:	movne	r3, #1
   12618:	cmp	r3, #0
   1261c:	bne	12628 <close@plt+0x173c>
   12620:	cmp	sl, #0
   12624:	beq	12a14 <close@plt+0x1b28>
   12628:	ldr	r3, [sp, #152]	; 0x98
   1262c:	mov	r5, #0
   12630:	sub	r2, r3, #2
   12634:	mov	r8, r5
   12638:	clz	r2, r2
   1263c:	lsr	r2, r2, #5
   12640:	ldr	r3, [sp, #60]	; 0x3c
   12644:	ldr	r1, [sp, #28]
   12648:	orr	r3, r2, r3
   1264c:	eor	r3, r3, #1
   12650:	orr	r3, r1, r3
   12654:	tst	r3, #255	; 0xff
   12658:	bne	12d84 <close@plt+0x1e98>
   1265c:	cmp	r6, #0
   12660:	bne	127b0 <close@plt+0x18c4>
   12664:	ldr	r3, [sp, #40]	; 0x28
   12668:	eor	r8, r8, #1
   1266c:	and	r8, r8, r3
   12670:	add	sl, sl, #1
   12674:	uxtb	r6, r8
   12678:	cmp	r6, #0
   1267c:	beq	126b0 <close@plt+0x17c4>
   12680:	cmp	fp, r7
   12684:	movhi	r2, #39	; 0x27
   12688:	ldrhi	r3, [sp, #32]
   1268c:	strbhi	r2, [r3, r7]
   12690:	add	r3, r7, #1
   12694:	cmp	fp, r3
   12698:	movhi	r1, #39	; 0x27
   1269c:	ldrhi	r2, [sp, #32]
   126a0:	add	r7, r7, #2
   126a4:	strbhi	r1, [r2, r3]
   126a8:	mov	r3, #0
   126ac:	str	r3, [sp, #40]	; 0x28
   126b0:	cmp	r7, fp
   126b4:	ldrcc	r3, [sp, #32]
   126b8:	strbcc	r4, [r3, r7]
   126bc:	ldr	r3, [sp, #36]	; 0x24
   126c0:	cmp	r5, #0
   126c4:	moveq	r3, #0
   126c8:	str	r3, [sp, #36]	; 0x24
   126cc:	ldr	r3, [sp, #24]
   126d0:	add	r7, r7, #1
   126d4:	cmn	r3, #1
   126d8:	bne	1217c <close@plt+0x1290>
   126dc:	ldr	r3, [sp, #56]	; 0x38
   126e0:	ldrb	r5, [r3, sl]
   126e4:	adds	r5, r5, #0
   126e8:	movne	r5, #1
   126ec:	cmp	r5, #0
   126f0:	bne	12190 <close@plt+0x12a4>
   126f4:	ldr	r3, [sp, #152]	; 0x98
   126f8:	ldr	r1, [sp, #28]
   126fc:	sub	r3, r3, #2
   12700:	clz	r3, r3
   12704:	lsr	r3, r3, #5
   12708:	and	r9, r1, r3
   1270c:	cmp	r7, #0
   12710:	movne	r2, #0
   12714:	andeq	r2, r9, #1
   12718:	cmp	r2, #0
   1271c:	bne	130f8 <close@plt+0x220c>
   12720:	eor	r2, r1, #1
   12724:	ands	r3, r3, r2
   12728:	beq	135b4 <close@plt+0x26c8>
   1272c:	ldr	r2, [sp, #68]	; 0x44
   12730:	cmp	r2, #0
   12734:	beq	135a0 <close@plt+0x26b4>
   12738:	ldr	r3, [sp, #36]	; 0x24
   1273c:	cmp	r3, #0
   12740:	bne	13558 <close@plt+0x266c>
   12744:	ldr	r2, [sp, #72]	; 0x48
   12748:	clz	r3, fp
   1274c:	cmp	r2, #0
   12750:	lsr	r3, r3, #5
   12754:	moveq	r3, #0
   12758:	cmp	r3, #0
   1275c:	beq	134f8 <close@plt+0x260c>
   12760:	str	r3, [sp, #68]	; 0x44
   12764:	ldr	fp, [sp, #72]	; 0x48
   12768:	b	12118 <close@plt+0x122c>
   1276c:	ldr	r3, [sp, #152]	; 0x98
   12770:	cmp	r3, #2
   12774:	beq	12dc8 <close@plt+0x1edc>
   12778:	ldr	r3, [sp, #44]	; 0x2c
   1277c:	ldr	r2, [sp, #28]
   12780:	and	r2, r3, r2
   12784:	ands	r2, r9, r2
   12788:	bne	12dd4 <close@plt+0x1ee8>
   1278c:	mov	r4, #92	; 0x5c
   12790:	mov	r3, r4
   12794:	ldr	r1, [sp, #44]	; 0x2c
   12798:	cmp	r1, #0
   1279c:	moveq	r5, #0
   127a0:	moveq	r8, r1
   127a4:	beq	12640 <close@plt+0x1754>
   127a8:	mov	r4, r3
   127ac:	mov	r5, #0
   127b0:	ldr	r3, [sp, #28]
   127b4:	cmp	r3, #0
   127b8:	bne	12dbc <close@plt+0x1ed0>
   127bc:	ldr	r3, [sp, #40]	; 0x28
   127c0:	eor	r9, r3, #1
   127c4:	and	r9, r9, r2
   127c8:	ands	r9, r9, #255	; 0xff
   127cc:	beq	12810 <close@plt+0x1924>
   127d0:	cmp	fp, r7
   127d4:	movhi	r2, #39	; 0x27
   127d8:	ldrhi	r3, [sp, #32]
   127dc:	str	r9, [sp, #40]	; 0x28
   127e0:	strbhi	r2, [r3, r7]
   127e4:	add	r3, r7, #1
   127e8:	cmp	fp, r3
   127ec:	movhi	r1, #36	; 0x24
   127f0:	ldrhi	r2, [sp, #32]
   127f4:	strbhi	r1, [r2, r3]
   127f8:	add	r3, r7, #2
   127fc:	cmp	fp, r3
   12800:	add	r7, r7, #3
   12804:	ldrhi	r2, [sp, #32]
   12808:	movhi	r1, #39	; 0x27
   1280c:	strbhi	r1, [r2, r3]
   12810:	cmp	fp, r7
   12814:	movhi	r2, #92	; 0x5c
   12818:	ldrhi	r3, [sp, #32]
   1281c:	add	sl, sl, #1
   12820:	strbhi	r2, [r3, r7]
   12824:	add	r7, r7, #1
   12828:	b	126b0 <close@plt+0x17c4>
   1282c:	ldr	r3, [sp, #152]	; 0x98
   12830:	mov	r4, #11
   12834:	sub	r2, r3, #2
   12838:	mov	r3, #118	; 0x76
   1283c:	clz	r2, r2
   12840:	lsr	r2, r2, #5
   12844:	b	12794 <close@plt+0x18a8>
   12848:	mov	r4, #10
   1284c:	mov	r3, #110	; 0x6e
   12850:	ldr	r2, [sp, #152]	; 0x98
   12854:	ldr	r1, [sp, #28]
   12858:	sub	r2, r2, #2
   1285c:	clz	r2, r2
   12860:	lsr	r2, r2, #5
   12864:	ands	r1, r1, r2
   12868:	beq	12794 <close@plt+0x18a8>
   1286c:	ldr	sl, [sp, #32]
   12870:	mov	r8, fp
   12874:	mov	r2, r1
   12878:	mov	r3, #2
   1287c:	str	r3, [sp, #152]	; 0x98
   12880:	ldr	r9, [sp, #44]	; 0x2c
   12884:	ldr	r3, [sp, #152]	; 0x98
   12888:	and	r9, r9, r2
   1288c:	tst	r9, #255	; 0xff
   12890:	movne	r3, #4
   12894:	str	r3, [sp, #152]	; 0x98
   12898:	ldr	r3, [sp, #156]	; 0x9c
   1289c:	mov	ip, #0
   128a0:	bic	r3, r3, #2
   128a4:	str	r3, [sp, #4]
   128a8:	ldr	r3, [sp, #168]	; 0xa8
   128ac:	ldr	r2, [sp, #56]	; 0x38
   128b0:	str	r3, [sp, #16]
   128b4:	ldr	r3, [sp, #164]	; 0xa4
   128b8:	mov	r1, r8
   128bc:	str	r3, [sp, #12]
   128c0:	ldr	r3, [sp, #152]	; 0x98
   128c4:	mov	r0, sl
   128c8:	str	r3, [sp]
   128cc:	str	ip, [sp, #8]
   128d0:	ldr	r3, [sp, #24]
   128d4:	bl	120bc <close@plt+0x11d0>
   128d8:	mov	fp, r0
   128dc:	mov	r0, fp
   128e0:	add	sp, sp, #116	; 0x74
   128e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128e8:	ldr	r3, [sp, #152]	; 0x98
   128ec:	mov	r4, #8
   128f0:	sub	r2, r3, #2
   128f4:	mov	r3, #98	; 0x62
   128f8:	clz	r2, r2
   128fc:	lsr	r2, r2, #5
   12900:	b	12794 <close@plt+0x18a8>
   12904:	ldr	r3, [sp, #152]	; 0x98
   12908:	mov	r4, #7
   1290c:	sub	r2, r3, #2
   12910:	mov	r3, #97	; 0x61
   12914:	clz	r2, r2
   12918:	lsr	r2, r2, #5
   1291c:	b	12794 <close@plt+0x18a8>
   12920:	ldr	r3, [sp, #44]	; 0x2c
   12924:	cmp	r3, #0
   12928:	beq	1310c <close@plt+0x2220>
   1292c:	ldr	r3, [sp, #28]
   12930:	cmp	r3, #0
   12934:	bne	133e4 <close@plt+0x24f8>
   12938:	ldr	r3, [sp, #152]	; 0x98
   1293c:	sub	r2, r3, #2
   12940:	ldr	r3, [sp, #40]	; 0x28
   12944:	clz	r2, r2
   12948:	eor	r3, r3, #1
   1294c:	lsr	r2, r2, #5
   12950:	ands	r3, r2, r3
   12954:	moveq	r1, r7
   12958:	beq	1299c <close@plt+0x1ab0>
   1295c:	cmp	fp, r7
   12960:	movhi	r0, #39	; 0x27
   12964:	ldrhi	r1, [sp, #32]
   12968:	str	r3, [sp, #40]	; 0x28
   1296c:	strbhi	r0, [r1, r7]
   12970:	add	r1, r7, #1
   12974:	cmp	fp, r1
   12978:	movhi	ip, #36	; 0x24
   1297c:	ldrhi	r0, [sp, #32]
   12980:	strbhi	ip, [r0, r1]
   12984:	add	r1, r7, #2
   12988:	cmp	fp, r1
   1298c:	movhi	ip, #39	; 0x27
   12990:	ldrhi	r0, [sp, #32]
   12994:	strbhi	ip, [r0, r1]
   12998:	add	r1, r7, #3
   1299c:	cmp	fp, r1
   129a0:	movhi	r0, #92	; 0x5c
   129a4:	ldrhi	r3, [sp, #32]
   129a8:	add	r7, r1, #1
   129ac:	strbhi	r0, [r3, r1]
   129b0:	cmp	r8, #0
   129b4:	beq	132f8 <close@plt+0x240c>
   129b8:	ldr	r0, [sp, #24]
   129bc:	add	r3, sl, #1
   129c0:	cmp	r3, r0
   129c4:	bcs	13234 <close@plt+0x2348>
   129c8:	ldr	r0, [sp, #56]	; 0x38
   129cc:	ldrb	r3, [r0, r3]
   129d0:	sub	r3, r3, #48	; 0x30
   129d4:	cmp	r3, #9
   129d8:	bhi	13234 <close@plt+0x2348>
   129dc:	cmp	fp, r7
   129e0:	movhi	r3, #48	; 0x30
   129e4:	ldrhi	r0, [sp, #32]
   129e8:	ldr	r5, [sp, #28]
   129ec:	mov	r4, #48	; 0x30
   129f0:	strbhi	r3, [r0, r7]
   129f4:	add	r3, r1, #2
   129f8:	cmp	fp, r3
   129fc:	movhi	r0, #48	; 0x30
   12a00:	ldrhi	ip, [sp, #32]
   12a04:	add	r7, r1, #3
   12a08:	strbhi	r0, [ip, r3]
   12a0c:	b	12640 <close@plt+0x1754>
   12a10:	mov	r5, #0
   12a14:	ldr	r3, [sp, #152]	; 0x98
   12a18:	sub	r2, r3, #2
   12a1c:	ldr	r3, [sp, #28]
   12a20:	clz	r2, r2
   12a24:	lsr	r2, r2, #5
   12a28:	ands	r8, r3, r2
   12a2c:	beq	12640 <close@plt+0x1754>
   12a30:	mov	r3, r8
   12a34:	mov	r2, r3
   12a38:	mov	r3, #2
   12a3c:	ldr	sl, [sp, #32]
   12a40:	mov	r8, fp
   12a44:	str	r3, [sp, #152]	; 0x98
   12a48:	b	12880 <close@plt+0x1994>
   12a4c:	ldr	r3, [sp, #152]	; 0x98
   12a50:	cmp	r3, #2
   12a54:	beq	13178 <close@plt+0x228c>
   12a58:	cmp	r3, #5
   12a5c:	beq	13138 <close@plt+0x224c>
   12a60:	mov	r5, #0
   12a64:	sub	r2, r3, #2
   12a68:	mov	r8, r5
   12a6c:	clz	r2, r2
   12a70:	mov	r4, #63	; 0x3f
   12a74:	lsr	r2, r2, #5
   12a78:	b	12640 <close@plt+0x1754>
   12a7c:	ldr	r3, [sp, #152]	; 0x98
   12a80:	cmp	r3, #2
   12a84:	beq	13198 <close@plt+0x22ac>
   12a88:	mov	r2, #0
   12a8c:	str	r5, [sp, #68]	; 0x44
   12a90:	mov	r8, r2
   12a94:	mov	r4, #39	; 0x27
   12a98:	b	12640 <close@plt+0x1754>
   12a9c:	mov	r4, #13
   12aa0:	mov	r3, #114	; 0x72
   12aa4:	b	12850 <close@plt+0x1964>
   12aa8:	ldr	r3, [sp, #152]	; 0x98
   12aac:	mov	r8, #0
   12ab0:	sub	r2, r3, #2
   12ab4:	clz	r2, r2
   12ab8:	lsr	r2, r2, #5
   12abc:	b	12640 <close@plt+0x1754>
   12ac0:	ldr	r3, [sp, #152]	; 0x98
   12ac4:	mov	r4, #12
   12ac8:	sub	r2, r3, #2
   12acc:	mov	r3, #102	; 0x66
   12ad0:	clz	r2, r2
   12ad4:	lsr	r2, r2, #5
   12ad8:	b	12794 <close@plt+0x18a8>
   12adc:	mov	r5, r6
   12ae0:	b	12a14 <close@plt+0x1b28>
   12ae4:	ldr	r3, [sp, #152]	; 0x98
   12ae8:	sub	r2, r3, #2
   12aec:	mov	r3, #116	; 0x74
   12af0:	clz	r2, r2
   12af4:	lsr	r2, r2, #5
   12af8:	b	12794 <close@plt+0x18a8>
   12afc:	ldr	r8, [sp, #76]	; 0x4c
   12b00:	cmp	r8, #1
   12b04:	bne	12fb4 <close@plt+0x20c8>
   12b08:	bl	10dfc <__ctype_b_loc@plt>
   12b0c:	sxth	r3, r4
   12b10:	mov	ip, r8
   12b14:	lsl	r3, r3, #1
   12b18:	ldr	r2, [r0]
   12b1c:	ldrh	r3, [r2, r3]
   12b20:	and	r3, r3, #16384	; 0x4000
   12b24:	cmp	r3, #0
   12b28:	movne	r5, #1
   12b2c:	moveq	r5, #0
   12b30:	moveq	r3, #1
   12b34:	movne	r3, #0
   12b38:	ldr	r2, [sp, #44]	; 0x2c
   12b3c:	and	r3, r3, r2
   12b40:	ands	r8, r3, #255	; 0xff
   12b44:	bne	12e48 <close@plt+0x1f5c>
   12b48:	ldr	r3, [sp, #152]	; 0x98
   12b4c:	sub	r2, r3, #2
   12b50:	clz	r2, r2
   12b54:	lsr	r2, r2, #5
   12b58:	b	12640 <close@plt+0x1754>
   12b5c:	ldr	r3, [sp, #56]	; 0x38
   12b60:	add	r3, r3, sl
   12b64:	str	r3, [sp, #48]	; 0x30
   12b68:	ldr	r3, [sp, #48]	; 0x30
   12b6c:	mov	r6, #0
   12b70:	ldrb	r4, [r3]
   12b74:	cmp	r4, #126	; 0x7e
   12b78:	ldrls	pc, [pc, r4, lsl #2]
   12b7c:	b	12afc <close@plt+0x1c10>
   12b80:	andeq	r2, r1, r0, lsr #18
   12b84:	strdeq	r2, [r1], -ip
   12b88:	strdeq	r2, [r1], -ip
   12b8c:	strdeq	r2, [r1], -ip
   12b90:	strdeq	r2, [r1], -ip
   12b94:	strdeq	r2, [r1], -ip
   12b98:	strdeq	r2, [r1], -ip
   12b9c:	andeq	r2, r1, r4, lsl #18
   12ba0:	andeq	r2, r1, r8, ror #17
   12ba4:	andeq	r2, r1, ip, ror sp
   12ba8:	andeq	r2, r1, r8, asr #16
   12bac:	andeq	r2, r1, ip, lsr #16
   12bb0:	andeq	r2, r1, r0, asr #21
   12bb4:	muleq	r1, ip, sl
   12bb8:	strdeq	r2, [r1], -ip
   12bbc:	strdeq	r2, [r1], -ip
   12bc0:	strdeq	r2, [r1], -ip
   12bc4:	strdeq	r2, [r1], -ip
   12bc8:	strdeq	r2, [r1], -ip
   12bcc:	strdeq	r2, [r1], -ip
   12bd0:	strdeq	r2, [r1], -ip
   12bd4:	strdeq	r2, [r1], -ip
   12bd8:	strdeq	r2, [r1], -ip
   12bdc:	strdeq	r2, [r1], -ip
   12be0:	strdeq	r2, [r1], -ip
   12be4:	strdeq	r2, [r1], -ip
   12be8:	strdeq	r2, [r1], -ip
   12bec:	strdeq	r2, [r1], -ip
   12bf0:	strdeq	r2, [r1], -ip
   12bf4:	strdeq	r2, [r1], -ip
   12bf8:	strdeq	r2, [r1], -ip
   12bfc:	strdeq	r2, [r1], -ip
   12c00:	andeq	r2, r1, r4, lsl sl
   12c04:	andeq	r2, r1, r0, lsl sl
   12c08:	andeq	r2, r1, r0, lsl sl
   12c0c:	andeq	r2, r1, r0, lsr #12
   12c10:	andeq	r2, r1, r0, lsl sl
   12c14:	andeq	r2, r1, r8, lsr #21
   12c18:	andeq	r2, r1, r0, lsl sl
   12c1c:	andeq	r2, r1, ip, ror sl
   12c20:	andeq	r2, r1, r0, lsl sl
   12c24:	andeq	r2, r1, r0, lsl sl
   12c28:	andeq	r2, r1, r0, lsl sl
   12c2c:	andeq	r2, r1, r8, lsr #21
   12c30:	andeq	r2, r1, r8, lsr #21
   12c34:	andeq	r2, r1, r8, lsr #21
   12c38:	andeq	r2, r1, r8, lsr #21
   12c3c:	andeq	r2, r1, r8, lsr #21
   12c40:	andeq	r2, r1, r8, lsr #21
   12c44:	andeq	r2, r1, r8, lsr #21
   12c48:	andeq	r2, r1, r8, lsr #21
   12c4c:	andeq	r2, r1, r8, lsr #21
   12c50:	andeq	r2, r1, r8, lsr #21
   12c54:	andeq	r2, r1, r8, lsr #21
   12c58:	andeq	r2, r1, r8, lsr #21
   12c5c:	andeq	r2, r1, r8, lsr #21
   12c60:	andeq	r2, r1, r8, lsr #21
   12c64:	andeq	r2, r1, r8, lsr #21
   12c68:	andeq	r2, r1, r8, lsr #21
   12c6c:	andeq	r2, r1, r0, lsl sl
   12c70:	andeq	r2, r1, r0, lsl sl
   12c74:	andeq	r2, r1, r0, lsl sl
   12c78:	andeq	r2, r1, r0, lsl sl
   12c7c:	andeq	r2, r1, ip, asr #20
   12c80:	strdeq	r2, [r1], -ip
   12c84:	andeq	r2, r1, r8, lsr #21
   12c88:	andeq	r2, r1, r8, lsr #21
   12c8c:	andeq	r2, r1, r8, lsr #21
   12c90:	andeq	r2, r1, r8, lsr #21
   12c94:	andeq	r2, r1, r8, lsr #21
   12c98:	andeq	r2, r1, r8, lsr #21
   12c9c:	andeq	r2, r1, r8, lsr #21
   12ca0:	andeq	r2, r1, r8, lsr #21
   12ca4:	andeq	r2, r1, r8, lsr #21
   12ca8:	andeq	r2, r1, r8, lsr #21
   12cac:	andeq	r2, r1, r8, lsr #21
   12cb0:	andeq	r2, r1, r8, lsr #21
   12cb4:	andeq	r2, r1, r8, lsr #21
   12cb8:	andeq	r2, r1, r8, lsr #21
   12cbc:	andeq	r2, r1, r8, lsr #21
   12cc0:	andeq	r2, r1, r8, lsr #21
   12cc4:	andeq	r2, r1, r8, lsr #21
   12cc8:	andeq	r2, r1, r8, lsr #21
   12ccc:	andeq	r2, r1, r8, lsr #21
   12cd0:	andeq	r2, r1, r8, lsr #21
   12cd4:	andeq	r2, r1, r8, lsr #21
   12cd8:	andeq	r2, r1, r8, lsr #21
   12cdc:	andeq	r2, r1, r8, lsr #21
   12ce0:	andeq	r2, r1, r8, lsr #21
   12ce4:	andeq	r2, r1, r8, lsr #21
   12ce8:	andeq	r2, r1, r8, lsr #21
   12cec:	andeq	r2, r1, r0, lsl sl
   12cf0:	andeq	r2, r1, ip, ror #14
   12cf4:	andeq	r2, r1, r8, lsr #21
   12cf8:	andeq	r2, r1, r0, lsl sl
   12cfc:	andeq	r2, r1, r8, lsr #21
   12d00:	andeq	r2, r1, r0, lsl sl
   12d04:	andeq	r2, r1, r8, lsr #21
   12d08:	andeq	r2, r1, r8, lsr #21
   12d0c:	andeq	r2, r1, r8, lsr #21
   12d10:	andeq	r2, r1, r8, lsr #21
   12d14:	andeq	r2, r1, r8, lsr #21
   12d18:	andeq	r2, r1, r8, lsr #21
   12d1c:	andeq	r2, r1, r8, lsr #21
   12d20:	andeq	r2, r1, r8, lsr #21
   12d24:	andeq	r2, r1, r8, lsr #21
   12d28:	andeq	r2, r1, r8, lsr #21
   12d2c:	andeq	r2, r1, r8, lsr #21
   12d30:	andeq	r2, r1, r8, lsr #21
   12d34:	andeq	r2, r1, r8, lsr #21
   12d38:	andeq	r2, r1, r8, lsr #21
   12d3c:	andeq	r2, r1, r8, lsr #21
   12d40:	andeq	r2, r1, r8, lsr #21
   12d44:	andeq	r2, r1, r8, lsr #21
   12d48:	andeq	r2, r1, r8, lsr #21
   12d4c:	andeq	r2, r1, r8, lsr #21
   12d50:	andeq	r2, r1, r8, lsr #21
   12d54:	andeq	r2, r1, r8, lsr #21
   12d58:	andeq	r2, r1, r8, lsr #21
   12d5c:	andeq	r2, r1, r8, lsr #21
   12d60:	andeq	r2, r1, r8, lsr #21
   12d64:	andeq	r2, r1, r8, lsr #21
   12d68:	andeq	r2, r1, r8, lsr #21
   12d6c:	andeq	r2, r1, r0, lsl #12
   12d70:	andeq	r2, r1, r0, lsl sl
   12d74:	andeq	r2, r1, r0, lsl #12
   12d78:	andeq	r2, r1, r0, lsr #12
   12d7c:	mov	r3, #116	; 0x74
   12d80:	b	12850 <close@plt+0x1964>
   12d84:	ldr	r3, [sp, #160]	; 0xa0
   12d88:	cmp	r3, #0
   12d8c:	beq	1265c <close@plt+0x1770>
   12d90:	lsr	r3, r4, #5
   12d94:	ldr	r0, [sp, #160]	; 0xa0
   12d98:	uxtb	r3, r3
   12d9c:	and	r1, r4, #31
   12da0:	ldr	r0, [r0, r3, lsl #2]
   12da4:	lsr	r3, r0, r1
   12da8:	tst	r3, #1
   12dac:	beq	1265c <close@plt+0x1770>
   12db0:	ldr	r3, [sp, #28]
   12db4:	cmp	r3, #0
   12db8:	beq	127bc <close@plt+0x18d0>
   12dbc:	ldr	sl, [sp, #32]
   12dc0:	mov	r8, fp
   12dc4:	b	12880 <close@plt+0x1994>
   12dc8:	ldr	r3, [sp, #28]
   12dcc:	cmp	r3, #0
   12dd0:	bne	13324 <close@plt+0x2438>
   12dd4:	add	sl, sl, #1
   12dd8:	ldr	r6, [sp, #40]	; 0x28
   12ddc:	mov	r5, #0
   12de0:	mov	r4, #92	; 0x5c
   12de4:	b	12678 <close@plt+0x178c>
   12de8:	cmp	r9, r8
   12dec:	bne	1305c <close@plt+0x2170>
   12df0:	ldr	r0, [sp, #100]	; 0x64
   12df4:	bl	10d48 <iswprint@plt>
   12df8:	add	r5, r5, r4
   12dfc:	cmp	r0, #0
   12e00:	add	r0, sp, #104	; 0x68
   12e04:	moveq	r6, #0
   12e08:	bl	10ce8 <mbsinit@plt>
   12e0c:	cmp	r0, #0
   12e10:	beq	12ff0 <close@plt+0x2104>
   12e14:	mov	r2, r6
   12e18:	mov	ip, r5
   12e1c:	eor	r5, r2, #1
   12e20:	ldr	r4, [sp, #80]	; 0x50
   12e24:	ldr	r6, [sp, #84]	; 0x54
   12e28:	ldr	r7, [sp, #88]	; 0x58
   12e2c:	uxtb	r5, r5
   12e30:	cmp	ip, #1
   12e34:	bls	13334 <close@plt+0x2448>
   12e38:	ldr	r3, [sp, #44]	; 0x2c
   12e3c:	and	r8, r3, r5
   12e40:	mov	r5, r2
   12e44:	uxtb	r8, r8
   12e48:	add	r2, sl, ip
   12e4c:	ldr	r0, [sp, #48]	; 0x30
   12e50:	mov	r1, #0
   12e54:	str	r5, [sp, #48]	; 0x30
   12e58:	ldr	r9, [sp, #28]
   12e5c:	ldr	ip, [sp, #40]	; 0x28
   12e60:	ldr	r3, [sp, #32]
   12e64:	ldr	r5, [sp, #152]	; 0x98
   12e68:	b	12f24 <close@plt+0x2038>
   12e6c:	cmp	r9, #0
   12e70:	bne	13248 <close@plt+0x235c>
   12e74:	eor	r1, ip, #1
   12e78:	cmp	r5, #2
   12e7c:	movne	r1, #0
   12e80:	andeq	r1, r1, #1
   12e84:	cmp	r1, #0
   12e88:	beq	12ec0 <close@plt+0x1fd4>
   12e8c:	cmp	fp, r7
   12e90:	movhi	ip, #39	; 0x27
   12e94:	strbhi	ip, [r3, r7]
   12e98:	add	ip, r7, #1
   12e9c:	cmp	fp, ip
   12ea0:	movhi	lr, #36	; 0x24
   12ea4:	strbhi	lr, [r3, ip]
   12ea8:	add	ip, r7, #2
   12eac:	cmp	fp, ip
   12eb0:	movhi	lr, #39	; 0x27
   12eb4:	strbhi	lr, [r3, ip]
   12eb8:	add	r7, r7, #3
   12ebc:	mov	ip, r1
   12ec0:	cmp	fp, r7
   12ec4:	movhi	r1, #92	; 0x5c
   12ec8:	strbhi	r1, [r3, r7]
   12ecc:	add	r1, r7, #1
   12ed0:	cmp	fp, r1
   12ed4:	lsrhi	lr, r4, #6
   12ed8:	addhi	lr, lr, #48	; 0x30
   12edc:	strbhi	lr, [r3, r1]
   12ee0:	add	lr, r7, #2
   12ee4:	cmp	fp, lr
   12ee8:	lsrhi	r1, r4, #3
   12eec:	andhi	r1, r1, #7
   12ef0:	addhi	r1, r1, #48	; 0x30
   12ef4:	add	sl, sl, #1
   12ef8:	strbhi	r1, [r3, lr]
   12efc:	and	r4, r4, #7
   12f00:	cmp	r2, sl
   12f04:	add	r4, r4, #48	; 0x30
   12f08:	add	r7, r7, #3
   12f0c:	bls	1326c <close@plt+0x2380>
   12f10:	mov	r1, r8
   12f14:	cmp	fp, r7
   12f18:	strbhi	r4, [r3, r7]
   12f1c:	ldrb	r4, [r0, #1]!
   12f20:	add	r7, r7, #1
   12f24:	cmp	r8, #0
   12f28:	bne	12e6c <close@plt+0x1f80>
   12f2c:	cmp	r6, #0
   12f30:	bne	12f80 <close@plt+0x2094>
   12f34:	eor	r6, r1, #1
   12f38:	and	r6, r6, ip
   12f3c:	add	sl, sl, #1
   12f40:	cmp	r2, sl
   12f44:	uxtb	r6, r6
   12f48:	bls	12fa8 <close@plt+0x20bc>
   12f4c:	cmp	r6, #0
   12f50:	beq	12f14 <close@plt+0x2028>
   12f54:	cmp	fp, r7
   12f58:	movhi	ip, #39	; 0x27
   12f5c:	strbhi	ip, [r3, r7]
   12f60:	add	ip, r7, #1
   12f64:	cmp	fp, ip
   12f68:	movhi	lr, #39	; 0x27
   12f6c:	strbhi	lr, [r3, ip]
   12f70:	add	r7, r7, #2
   12f74:	mov	r6, r8
   12f78:	mov	ip, r8
   12f7c:	b	12f14 <close@plt+0x2028>
   12f80:	cmp	fp, r7
   12f84:	eor	r6, r1, #1
   12f88:	movhi	lr, #92	; 0x5c
   12f8c:	and	r6, r6, ip
   12f90:	add	sl, sl, #1
   12f94:	strbhi	lr, [r3, r7]
   12f98:	cmp	r2, sl
   12f9c:	add	r7, r7, #1
   12fa0:	uxtb	r6, r6
   12fa4:	bhi	12f4c <close@plt+0x2060>
   12fa8:	str	ip, [sp, #40]	; 0x28
   12fac:	ldr	r5, [sp, #48]	; 0x30
   12fb0:	b	12678 <close@plt+0x178c>
   12fb4:	ldr	r3, [sp, #24]
   12fb8:	cmn	r3, #1
   12fbc:	mov	r3, #0
   12fc0:	str	r3, [sp, #104]	; 0x68
   12fc4:	str	r3, [sp, #108]	; 0x6c
   12fc8:	beq	132e8 <close@plt+0x23fc>
   12fcc:	mov	r2, r5
   12fd0:	mov	r3, #0
   12fd4:	str	r7, [sp, #88]	; 0x58
   12fd8:	ldr	r7, [sp, #152]	; 0x98
   12fdc:	str	r5, [sp, #92]	; 0x5c
   12fe0:	str	r6, [sp, #84]	; 0x54
   12fe4:	mov	r5, r3
   12fe8:	mov	r6, r2
   12fec:	str	r4, [sp, #80]	; 0x50
   12ff0:	ldr	r3, [sp, #56]	; 0x38
   12ff4:	add	r9, sl, r5
   12ff8:	add	r8, r3, r9
   12ffc:	ldr	r3, [sp, #24]
   13000:	mov	r1, r8
   13004:	sub	r2, r3, r9
   13008:	add	r0, sp, #100	; 0x64
   1300c:	add	r3, sp, #104	; 0x68
   13010:	bl	14c04 <close@plt+0x3d18>
   13014:	subs	r4, r0, #0
   13018:	beq	133c0 <close@plt+0x24d4>
   1301c:	cmn	r4, #1
   13020:	beq	133a0 <close@plt+0x24b4>
   13024:	cmn	r4, #2
   13028:	beq	13340 <close@plt+0x2454>
   1302c:	ldr	r2, [sp, #28]
   13030:	cmp	r7, #2
   13034:	movne	r2, #0
   13038:	andeq	r2, r2, #1
   1303c:	cmp	r2, #0
   13040:	beq	12df0 <close@plt+0x1f04>
   13044:	cmp	r4, #1
   13048:	beq	12df0 <close@plt+0x1f04>
   1304c:	sub	r3, r4, #1
   13050:	add	r9, r3, r9
   13054:	ldr	r3, [sp, #56]	; 0x38
   13058:	add	r9, r3, r9
   1305c:	ldrb	r3, [r8, #1]!
   13060:	sub	r3, r3, #91	; 0x5b
   13064:	cmp	r3, #33	; 0x21
   13068:	ldrls	pc, [pc, r3, lsl #2]
   1306c:	b	12de8 <close@plt+0x1efc>
   13070:	strdeq	r3, [r1], -r8
   13074:	strdeq	r3, [r1], -r8
   13078:	andeq	r2, r1, r8, ror #27
   1307c:	strdeq	r3, [r1], -r8
   13080:	andeq	r2, r1, r8, ror #27
   13084:	strdeq	r3, [r1], -r8
   13088:	andeq	r2, r1, r8, ror #27
   1308c:	andeq	r2, r1, r8, ror #27
   13090:	andeq	r2, r1, r8, ror #27
   13094:	andeq	r2, r1, r8, ror #27
   13098:	andeq	r2, r1, r8, ror #27
   1309c:	andeq	r2, r1, r8, ror #27
   130a0:	andeq	r2, r1, r8, ror #27
   130a4:	andeq	r2, r1, r8, ror #27
   130a8:	andeq	r2, r1, r8, ror #27
   130ac:	andeq	r2, r1, r8, ror #27
   130b0:	andeq	r2, r1, r8, ror #27
   130b4:	andeq	r2, r1, r8, ror #27
   130b8:	andeq	r2, r1, r8, ror #27
   130bc:	andeq	r2, r1, r8, ror #27
   130c0:	andeq	r2, r1, r8, ror #27
   130c4:	andeq	r2, r1, r8, ror #27
   130c8:	andeq	r2, r1, r8, ror #27
   130cc:	andeq	r2, r1, r8, ror #27
   130d0:	andeq	r2, r1, r8, ror #27
   130d4:	andeq	r2, r1, r8, ror #27
   130d8:	andeq	r2, r1, r8, ror #27
   130dc:	andeq	r2, r1, r8, ror #27
   130e0:	andeq	r2, r1, r8, ror #27
   130e4:	andeq	r2, r1, r8, ror #27
   130e8:	andeq	r2, r1, r8, ror #27
   130ec:	andeq	r2, r1, r8, ror #27
   130f0:	andeq	r2, r1, r8, ror #27
   130f4:	strdeq	r3, [r1], -r8
   130f8:	mov	r3, #2
   130fc:	ldr	sl, [sp, #32]
   13100:	mov	r8, fp
   13104:	str	r3, [sp, #152]	; 0x98
   13108:	b	12880 <close@plt+0x1994>
   1310c:	ldr	r3, [sp, #156]	; 0x9c
   13110:	tst	r3, #1
   13114:	bne	13240 <close@plt+0x2354>
   13118:	ldr	r3, [sp, #152]	; 0x98
   1311c:	ldr	r4, [sp, #44]	; 0x2c
   13120:	sub	r2, r3, #2
   13124:	mov	r5, #0
   13128:	clz	r2, r2
   1312c:	mov	r8, r4
   13130:	lsr	r2, r2, #5
   13134:	b	12640 <close@plt+0x1754>
   13138:	ldr	r3, [sp, #156]	; 0x9c
   1313c:	ands	r9, r3, #4
   13140:	beq	13278 <close@plt+0x238c>
   13144:	ldr	r2, [sp, #24]
   13148:	add	r3, sl, #2
   1314c:	cmp	r3, r2
   13150:	bcs	13164 <close@plt+0x2278>
   13154:	ldr	r2, [sp, #48]	; 0x30
   13158:	ldrb	r4, [r2, #1]
   1315c:	cmp	r4, #63	; 0x3f
   13160:	beq	13400 <close@plt+0x2514>
   13164:	mov	r2, #0
   13168:	mov	r8, r2
   1316c:	mov	r5, r2
   13170:	mov	r4, #63	; 0x3f
   13174:	b	12640 <close@plt+0x1754>
   13178:	ldr	r3, [sp, #28]
   1317c:	cmp	r3, #0
   13180:	bne	134a4 <close@plt+0x25b8>
   13184:	mov	r2, r5
   13188:	mov	r8, r3
   1318c:	mov	r5, #0
   13190:	mov	r4, #63	; 0x3f
   13194:	b	12640 <close@plt+0x1754>
   13198:	ldr	r3, [sp, #28]
   1319c:	cmp	r3, #0
   131a0:	bne	134a4 <close@plt+0x25b8>
   131a4:	ldr	r2, [sp, #72]	; 0x48
   131a8:	adds	r3, fp, #0
   131ac:	movne	r3, #1
   131b0:	cmp	r2, #0
   131b4:	movne	r3, #0
   131b8:	cmp	r3, #0
   131bc:	strne	fp, [sp, #72]	; 0x48
   131c0:	movne	fp, #0
   131c4:	bne	13200 <close@plt+0x2314>
   131c8:	cmp	fp, r7
   131cc:	movhi	r2, #39	; 0x27
   131d0:	ldrhi	r3, [sp, #32]
   131d4:	strbhi	r2, [r3, r7]
   131d8:	add	r3, r7, #1
   131dc:	cmp	fp, r3
   131e0:	movhi	r1, #92	; 0x5c
   131e4:	ldrhi	r2, [sp, #32]
   131e8:	strbhi	r1, [r2, r3]
   131ec:	add	r3, r7, #2
   131f0:	cmp	fp, r3
   131f4:	movhi	r1, #39	; 0x27
   131f8:	ldrhi	r2, [sp, #32]
   131fc:	strbhi	r1, [r2, r3]
   13200:	ldr	r3, [sp, #28]
   13204:	add	r7, r7, #3
   13208:	mov	r2, r5
   1320c:	mov	r8, r3
   13210:	str	r5, [sp, #68]	; 0x44
   13214:	str	r3, [sp, #40]	; 0x28
   13218:	mov	r4, #39	; 0x27
   1321c:	b	12640 <close@plt+0x1754>
   13220:	ldr	r3, [sp, #56]	; 0x38
   13224:	ldrb	r3, [r3, #1]
   13228:	adds	r3, r3, #0
   1322c:	movne	r3, #1
   13230:	b	12618 <close@plt+0x172c>
   13234:	ldr	r5, [sp, #28]
   13238:	mov	r4, #48	; 0x30
   1323c:	b	12640 <close@plt+0x1754>
   13240:	add	sl, sl, #1
   13244:	b	12170 <close@plt+0x1284>
   13248:	mov	sl, r3
   1324c:	ldr	r3, [sp, #28]
   13250:	mov	r8, fp
   13254:	str	r3, [sp, #44]	; 0x2c
   13258:	ldr	r3, [sp, #152]	; 0x98
   1325c:	sub	r2, r3, #2
   13260:	clz	r2, r2
   13264:	lsr	r2, r2, #5
   13268:	b	12880 <close@plt+0x1994>
   1326c:	str	ip, [sp, #40]	; 0x28
   13270:	ldr	r5, [sp, #48]	; 0x30
   13274:	b	126b0 <close@plt+0x17c4>
   13278:	mov	r2, r9
   1327c:	mov	r8, r9
   13280:	mov	r5, #0
   13284:	mov	r4, #63	; 0x3f
   13288:	b	12640 <close@plt+0x1754>
   1328c:	cmp	fp, #0
   13290:	beq	13308 <close@plt+0x241c>
   13294:	ldr	r1, [sp, #32]
   13298:	mov	r3, #34	; 0x22
   1329c:	mov	r2, #1
   132a0:	strb	r3, [r1]
   132a4:	ldr	r3, [pc, #332]	; 133f8 <close@plt+0x250c>
   132a8:	str	r2, [sp, #52]	; 0x34
   132ac:	mov	r7, r2
   132b0:	str	r2, [sp, #44]	; 0x2c
   132b4:	str	r3, [sp, #64]	; 0x40
   132b8:	b	12160 <close@plt+0x1274>
   132bc:	ldr	r3, [pc, #300]	; 133f0 <close@plt+0x2504>
   132c0:	str	r3, [sp, #64]	; 0x40
   132c4:	mov	r3, #0
   132c8:	str	r3, [sp, #28]
   132cc:	mov	r3, #1
   132d0:	str	r3, [sp, #52]	; 0x34
   132d4:	mov	r7, r3
   132d8:	mov	r3, #2
   132dc:	str	r3, [sp, #152]	; 0x98
   132e0:	b	12160 <close@plt+0x1274>
   132e4:	bl	10ee0 <abort@plt>
   132e8:	ldr	r0, [sp, #56]	; 0x38
   132ec:	bl	10e14 <strlen@plt>
   132f0:	str	r0, [sp, #24]
   132f4:	b	12fcc <close@plt+0x20e0>
   132f8:	mov	r5, r8
   132fc:	mov	r4, #48	; 0x30
   13300:	ldr	r8, [sp, #44]	; 0x2c
   13304:	b	12640 <close@plt+0x1754>
   13308:	mov	r3, #1
   1330c:	str	r3, [sp, #52]	; 0x34
   13310:	mov	r7, r3
   13314:	str	r3, [sp, #44]	; 0x2c
   13318:	ldr	r3, [pc, #216]	; 133f8 <close@plt+0x250c>
   1331c:	str	r3, [sp, #64]	; 0x40
   13320:	b	12160 <close@plt+0x1274>
   13324:	ldr	sl, [sp, #32]
   13328:	mov	r8, fp
   1332c:	mov	r2, r3
   13330:	b	12880 <close@plt+0x1994>
   13334:	mov	r3, r5
   13338:	mov	r5, r2
   1333c:	b	12b38 <close@plt+0x1c4c>
   13340:	ldr	r1, [sp, #24]
   13344:	mov	r2, r5
   13348:	cmp	r1, r9
   1334c:	mov	ip, r5
   13350:	ldr	r4, [sp, #80]	; 0x50
   13354:	ldr	r5, [sp, #92]	; 0x5c
   13358:	ldr	r6, [sp, #84]	; 0x54
   1335c:	ldr	r7, [sp, #88]	; 0x58
   13360:	bls	13394 <close@plt+0x24a8>
   13364:	ldrb	r3, [r8]
   13368:	cmp	r3, #0
   1336c:	bne	13380 <close@plt+0x2494>
   13370:	b	13398 <close@plt+0x24ac>
   13374:	ldrb	r3, [r8, #1]!
   13378:	cmp	r3, #0
   1337c:	beq	13498 <close@plt+0x25ac>
   13380:	add	r2, r2, #1
   13384:	add	r3, sl, r2
   13388:	cmp	r1, r3
   1338c:	bhi	13374 <close@plt+0x2488>
   13390:	mov	ip, r2
   13394:	mov	r3, #0
   13398:	mov	r2, r3
   1339c:	b	12e30 <close@plt+0x1f44>
   133a0:	mov	r3, #0
   133a4:	mov	ip, r5
   133a8:	ldr	r4, [sp, #80]	; 0x50
   133ac:	ldr	r5, [sp, #92]	; 0x5c
   133b0:	ldr	r6, [sp, #84]	; 0x54
   133b4:	ldr	r7, [sp, #88]	; 0x58
   133b8:	mov	r2, r3
   133bc:	b	12e30 <close@plt+0x1f44>
   133c0:	mov	r3, r6
   133c4:	mov	ip, r5
   133c8:	eor	r5, r3, #1
   133cc:	mov	r2, r6
   133d0:	ldr	r4, [sp, #80]	; 0x50
   133d4:	ldr	r6, [sp, #84]	; 0x54
   133d8:	ldr	r7, [sp, #88]	; 0x58
   133dc:	uxtb	r5, r5
   133e0:	b	12e30 <close@plt+0x1f44>
   133e4:	ldr	sl, [sp, #32]
   133e8:	mov	r8, fp
   133ec:	b	13254 <close@plt+0x2368>
   133f0:	andeq	r5, r1, r0, lsl #19
   133f4:	andeq	r5, r1, r4, lsl #19
   133f8:	andeq	r5, r1, ip, ror r9
   133fc:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   13400:	ldr	r2, [sp, #56]	; 0x38
   13404:	ldrb	r1, [r2, r3]
   13408:	sub	r2, r1, #33	; 0x21
   1340c:	uxtb	r2, r2
   13410:	cmp	r2, #29
   13414:	bhi	134b4 <close@plt+0x25c8>
   13418:	ldr	r0, [pc, #-36]	; 133fc <close@plt+0x2510>
   1341c:	mov	ip, #1
   13420:	ands	r2, r0, ip, lsl r2
   13424:	beq	134c4 <close@plt+0x25d8>
   13428:	ldr	r2, [sp, #28]
   1342c:	cmp	r2, #0
   13430:	bne	135c4 <close@plt+0x26d8>
   13434:	cmp	fp, r7
   13438:	ldr	r8, [sp, #28]
   1343c:	ldrhi	r2, [sp, #32]
   13440:	mov	sl, r3
   13444:	mov	r5, r8
   13448:	strbhi	r4, [r2, r7]
   1344c:	add	r2, r7, #1
   13450:	cmp	fp, r2
   13454:	movhi	r0, #34	; 0x22
   13458:	ldrhi	ip, [sp, #32]
   1345c:	mov	r4, r1
   13460:	strbhi	r0, [ip, r2]
   13464:	add	r2, r7, #2
   13468:	cmp	fp, r2
   1346c:	movhi	r0, #34	; 0x22
   13470:	ldrhi	ip, [sp, #32]
   13474:	strbhi	r0, [ip, r2]
   13478:	add	r2, r7, #3
   1347c:	cmp	fp, r2
   13480:	movhi	r0, #63	; 0x3f
   13484:	ldrhi	ip, [sp, #32]
   13488:	add	r7, r7, #4
   1348c:	strbhi	r0, [ip, r2]
   13490:	mov	r2, r8
   13494:	b	12640 <close@plt+0x1754>
   13498:	mov	ip, r2
   1349c:	mov	r2, r3
   134a0:	b	12e30 <close@plt+0x1f44>
   134a4:	ldr	sl, [sp, #32]
   134a8:	mov	r8, fp
   134ac:	ldr	r2, [sp, #28]
   134b0:	b	12880 <close@plt+0x1994>
   134b4:	mov	r2, #0
   134b8:	mov	r8, r2
   134bc:	mov	r5, r2
   134c0:	b	12640 <close@plt+0x1754>
   134c4:	mov	r8, r2
   134c8:	mov	r5, #0
   134cc:	b	12640 <close@plt+0x1754>
   134d0:	ldr	r1, [sp, #152]	; 0x98
   134d4:	bl	11f9c <close@plt+0x10b0>
   134d8:	str	r0, [sp, #168]	; 0xa8
   134dc:	b	124fc <close@plt+0x1610>
   134e0:	ldr	r1, [sp, #152]	; 0x98
   134e4:	bl	11f9c <close@plt+0x10b0>
   134e8:	str	r0, [sp, #164]	; 0xa4
   134ec:	b	124dc <close@plt+0x15f0>
   134f0:	ldr	r7, [sp, #28]
   134f4:	b	1253c <close@plt+0x1650>
   134f8:	ldr	sl, [sp, #32]
   134fc:	ldr	r2, [sp, #68]	; 0x44
   13500:	mov	r8, fp
   13504:	mov	fp, r7
   13508:	ldr	r3, [sp, #64]	; 0x40
   1350c:	cmp	r3, #0
   13510:	moveq	r2, #0
   13514:	andne	r2, r2, #1
   13518:	cmp	r2, #0
   1351c:	beq	13548 <close@plt+0x265c>
   13520:	mov	r2, r3
   13524:	ldrb	r3, [r3]
   13528:	cmp	r3, #0
   1352c:	beq	13548 <close@plt+0x265c>
   13530:	cmp	r8, fp
   13534:	strbhi	r3, [sl, fp]
   13538:	ldrb	r3, [r2, #1]!
   1353c:	add	fp, fp, #1
   13540:	cmp	r3, #0
   13544:	bne	13530 <close@plt+0x2644>
   13548:	cmp	r8, fp
   1354c:	movhi	r3, #0
   13550:	strbhi	r3, [sl, fp]
   13554:	b	128dc <close@plt+0x19f0>
   13558:	ldr	r3, [sp, #168]	; 0xa8
   1355c:	ldr	sl, [sp, #32]
   13560:	str	r3, [sp, #16]
   13564:	ldr	r3, [sp, #164]	; 0xa4
   13568:	mov	ip, #5
   1356c:	str	r3, [sp, #12]
   13570:	ldr	r3, [sp, #160]	; 0xa0
   13574:	ldr	r2, [sp, #56]	; 0x38
   13578:	str	r3, [sp, #8]
   1357c:	ldr	r3, [sp, #156]	; 0x9c
   13580:	ldr	r1, [sp, #72]	; 0x48
   13584:	str	r3, [sp, #4]
   13588:	mov	r0, sl
   1358c:	ldr	r3, [sp, #24]
   13590:	str	ip, [sp]
   13594:	bl	120bc <close@plt+0x11d0>
   13598:	mov	fp, r0
   1359c:	b	128dc <close@plt+0x19f0>
   135a0:	mov	r8, fp
   135a4:	ldr	sl, [sp, #32]
   135a8:	mov	fp, r7
   135ac:	mov	r2, r3
   135b0:	b	13508 <close@plt+0x261c>
   135b4:	mov	r8, fp
   135b8:	ldr	sl, [sp, #32]
   135bc:	mov	fp, r7
   135c0:	b	13508 <close@plt+0x261c>
   135c4:	ldr	sl, [sp, #32]
   135c8:	mov	r8, fp
   135cc:	b	12898 <close@plt+0x19ac>
   135d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   135d4:	sub	sp, sp, #52	; 0x34
   135d8:	mov	r4, r0
   135dc:	mov	r5, r3
   135e0:	mov	sl, r1
   135e4:	mov	fp, r2
   135e8:	bl	10e20 <__errno_location@plt>
   135ec:	ldr	r7, [pc, #412]	; 13790 <close@plt+0x28a4>
   135f0:	cmn	r4, #-2147483647	; 0x80000001
   135f4:	ldr	r6, [r7]
   135f8:	mov	r8, r0
   135fc:	movne	r0, #0
   13600:	moveq	r0, #1
   13604:	ldr	r3, [r8]
   13608:	orrs	r0, r0, r4, lsr #31
   1360c:	str	r3, [sp, #24]
   13610:	bne	1378c <close@plt+0x28a0>
   13614:	ldr	r2, [r7, #4]
   13618:	cmp	r4, r2
   1361c:	blt	1367c <close@plt+0x2790>
   13620:	add	r9, r7, #8
   13624:	cmp	r6, r9
   13628:	str	r2, [sp, #44]	; 0x2c
   1362c:	beq	1375c <close@plt+0x2870>
   13630:	mov	r3, #8
   13634:	sub	r2, r4, r2
   13638:	mov	r0, r6
   1363c:	str	r3, [sp]
   13640:	add	r2, r2, #1
   13644:	mvn	r3, #-2147483648	; 0x80000000
   13648:	add	r1, sp, #44	; 0x2c
   1364c:	bl	1443c <close@plt+0x3550>
   13650:	mov	r6, r0
   13654:	str	r0, [r7]
   13658:	ldr	r0, [r7, #4]
   1365c:	ldr	r2, [sp, #44]	; 0x2c
   13660:	mov	r1, #0
   13664:	sub	r2, r2, r0
   13668:	add	r0, r6, r0, lsl #3
   1366c:	lsl	r2, r2, #3
   13670:	bl	10e38 <memset@plt>
   13674:	ldr	r3, [sp, #44]	; 0x2c
   13678:	str	r3, [r7, #4]
   1367c:	add	r3, r6, r4, lsl #3
   13680:	ldr	r1, [r5, #4]
   13684:	ldr	r7, [r3, #4]
   13688:	ldr	r9, [r6, r4, lsl #3]
   1368c:	ldr	r2, [r5, #40]	; 0x28
   13690:	ldr	ip, [r5, #44]	; 0x2c
   13694:	add	r0, r5, #8
   13698:	str	r3, [sp, #28]
   1369c:	ldr	r3, [r5]
   136a0:	orr	r1, r1, #1
   136a4:	mov	lr, r0
   136a8:	str	r1, [sp, #32]
   136ac:	str	r0, [sp, #36]	; 0x24
   136b0:	str	r1, [sp, #4]
   136b4:	str	r2, [sp, #12]
   136b8:	str	r3, [sp]
   136bc:	mov	r0, r7
   136c0:	mov	r1, r9
   136c4:	str	ip, [sp, #16]
   136c8:	str	lr, [sp, #8]
   136cc:	mov	r3, fp
   136d0:	mov	r2, sl
   136d4:	bl	120bc <close@plt+0x11d0>
   136d8:	cmp	r9, r0
   136dc:	bhi	13748 <close@plt+0x285c>
   136e0:	ldr	r3, [pc, #172]	; 13794 <close@plt+0x28a8>
   136e4:	add	r9, r0, #1
   136e8:	cmp	r7, r3
   136ec:	str	r9, [r6, r4, lsl #3]
   136f0:	beq	136fc <close@plt+0x2810>
   136f4:	mov	r0, r7
   136f8:	bl	11cd0 <close@plt+0xde4>
   136fc:	mov	r0, r9
   13700:	bl	142d8 <close@plt+0x33ec>
   13704:	ldr	lr, [sp, #28]
   13708:	ldr	ip, [r5, #44]	; 0x2c
   1370c:	ldr	r4, [r5, #40]	; 0x28
   13710:	mov	r3, fp
   13714:	mov	r2, sl
   13718:	mov	r1, r9
   1371c:	str	r0, [lr, #4]
   13720:	ldr	lr, [r5]
   13724:	ldr	r5, [sp, #36]	; 0x24
   13728:	str	ip, [sp, #16]
   1372c:	str	r5, [sp, #8]
   13730:	ldr	r5, [sp, #32]
   13734:	str	r4, [sp, #12]
   13738:	str	r5, [sp, #4]
   1373c:	str	lr, [sp]
   13740:	mov	r7, r0
   13744:	bl	120bc <close@plt+0x11d0>
   13748:	ldr	r3, [sp, #24]
   1374c:	mov	r0, r7
   13750:	str	r3, [r8]
   13754:	add	sp, sp, #52	; 0x34
   13758:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1375c:	mov	r3, #8
   13760:	sub	r2, r4, r2
   13764:	str	r3, [sp]
   13768:	add	r1, sp, #44	; 0x2c
   1376c:	add	r2, r2, #1
   13770:	mvn	r3, #-2147483648	; 0x80000000
   13774:	bl	1443c <close@plt+0x3550>
   13778:	mov	r6, r0
   1377c:	ldm	r9, {r0, r1}
   13780:	str	r6, [r7]
   13784:	stm	r6, {r0, r1}
   13788:	b	13658 <close@plt+0x276c>
   1378c:	bl	10ee0 <abort@plt>
   13790:	strdeq	r6, [r2], -r4
   13794:	andeq	r6, r2, r8, ror #2
   13798:	push	{r4, r5, r6, lr}
   1379c:	mov	r5, r0
   137a0:	bl	10e20 <__errno_location@plt>
   137a4:	cmp	r5, #0
   137a8:	mov	r1, #48	; 0x30
   137ac:	mov	r4, r0
   137b0:	ldr	r0, [pc, #16]	; 137c8 <close@plt+0x28dc>
   137b4:	ldr	r6, [r4]
   137b8:	movne	r0, r5
   137bc:	bl	14738 <close@plt+0x384c>
   137c0:	str	r6, [r4]
   137c4:	pop	{r4, r5, r6, pc}
   137c8:	andeq	r6, r2, r8, ror #4
   137cc:	ldr	r3, [pc, #12]	; 137e0 <close@plt+0x28f4>
   137d0:	cmp	r0, #0
   137d4:	moveq	r0, r3
   137d8:	ldr	r0, [r0]
   137dc:	bx	lr
   137e0:	andeq	r6, r2, r8, ror #4
   137e4:	ldr	r3, [pc, #12]	; 137f8 <close@plt+0x290c>
   137e8:	cmp	r0, #0
   137ec:	moveq	r0, r3
   137f0:	str	r1, [r0]
   137f4:	bx	lr
   137f8:	andeq	r6, r2, r8, ror #4
   137fc:	ldr	r3, [pc, #52]	; 13838 <close@plt+0x294c>
   13800:	cmp	r0, #0
   13804:	moveq	r0, r3
   13808:	add	r3, r0, #8
   1380c:	push	{lr}		; (str lr, [sp, #-4]!)
   13810:	lsr	lr, r1, #5
   13814:	and	r1, r1, #31
   13818:	ldr	ip, [r3, lr, lsl #2]
   1381c:	lsr	r0, ip, r1
   13820:	eor	r2, r2, r0
   13824:	and	r2, r2, #1
   13828:	and	r0, r0, #1
   1382c:	eor	r1, ip, r2, lsl r1
   13830:	str	r1, [r3, lr, lsl #2]
   13834:	pop	{pc}		; (ldr pc, [sp], #4)
   13838:	andeq	r6, r2, r8, ror #4
   1383c:	ldr	r3, [pc, #16]	; 13854 <close@plt+0x2968>
   13840:	cmp	r0, #0
   13844:	movne	r3, r0
   13848:	ldr	r0, [r3, #4]
   1384c:	str	r1, [r3, #4]
   13850:	bx	lr
   13854:	andeq	r6, r2, r8, ror #4
   13858:	ldr	r3, [pc, #44]	; 1388c <close@plt+0x29a0>
   1385c:	cmp	r0, #0
   13860:	moveq	r0, r3
   13864:	mov	ip, #10
   13868:	cmp	r2, #0
   1386c:	cmpne	r1, #0
   13870:	str	ip, [r0]
   13874:	beq	13884 <close@plt+0x2998>
   13878:	str	r1, [r0, #40]	; 0x28
   1387c:	str	r2, [r0, #44]	; 0x2c
   13880:	bx	lr
   13884:	push	{r4, lr}
   13888:	bl	10ee0 <abort@plt>
   1388c:	andeq	r6, r2, r8, ror #4
   13890:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13894:	sub	sp, sp, #24
   13898:	ldr	ip, [pc, #108]	; 1390c <close@plt+0x2a20>
   1389c:	ldr	r4, [sp, #56]	; 0x38
   138a0:	mov	r9, r2
   138a4:	cmp	r4, #0
   138a8:	moveq	r4, ip
   138ac:	mov	sl, r3
   138b0:	mov	r7, r0
   138b4:	mov	r8, r1
   138b8:	bl	10e20 <__errno_location@plt>
   138bc:	ldr	r3, [r4, #44]	; 0x2c
   138c0:	mov	r1, r8
   138c4:	ldr	r6, [r0]
   138c8:	str	r3, [sp, #16]
   138cc:	ldr	r2, [r4, #40]	; 0x28
   138d0:	add	r3, r4, #8
   138d4:	str	r3, [sp, #8]
   138d8:	str	r2, [sp, #12]
   138dc:	ldr	r2, [r4, #4]
   138e0:	mov	r5, r0
   138e4:	str	r2, [sp, #4]
   138e8:	ldr	ip, [r4]
   138ec:	mov	r3, sl
   138f0:	mov	r2, r9
   138f4:	mov	r0, r7
   138f8:	str	ip, [sp]
   138fc:	bl	120bc <close@plt+0x11d0>
   13900:	str	r6, [r5]
   13904:	add	sp, sp, #24
   13908:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1390c:	andeq	r6, r2, r8, ror #4
   13910:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13914:	cmp	r3, #0
   13918:	sub	sp, sp, #44	; 0x2c
   1391c:	ldr	r4, [pc, #192]	; 139e4 <close@plt+0x2af8>
   13920:	mov	r6, r2
   13924:	movne	r4, r3
   13928:	mov	r9, r1
   1392c:	mov	r8, r0
   13930:	bl	10e20 <__errno_location@plt>
   13934:	ldr	r3, [r4, #44]	; 0x2c
   13938:	ldr	r5, [r4, #4]
   1393c:	add	sl, r4, #8
   13940:	cmp	r6, #0
   13944:	orreq	r5, r5, #1
   13948:	mov	r1, #0
   1394c:	ldr	r2, [r0]
   13950:	str	r3, [sp, #16]
   13954:	ldr	r3, [r4, #40]	; 0x28
   13958:	stmib	sp, {r5, sl}
   1395c:	str	r3, [sp, #12]
   13960:	ldr	r3, [r4]
   13964:	mov	r7, r0
   13968:	str	r2, [sp, #28]
   1396c:	str	r3, [sp]
   13970:	mov	r2, r8
   13974:	mov	r3, r9
   13978:	mov	r0, r1
   1397c:	bl	120bc <close@plt+0x11d0>
   13980:	add	r1, r0, #1
   13984:	mov	fp, r0
   13988:	mov	r0, r1
   1398c:	str	r1, [sp, #36]	; 0x24
   13990:	bl	142d8 <close@plt+0x33ec>
   13994:	ldr	r3, [r4, #44]	; 0x2c
   13998:	mov	r2, r8
   1399c:	str	r3, [sp, #16]
   139a0:	ldr	r3, [r4, #40]	; 0x28
   139a4:	str	r5, [sp, #4]
   139a8:	str	r3, [sp, #12]
   139ac:	str	sl, [sp, #8]
   139b0:	ldr	ip, [r4]
   139b4:	ldr	r1, [sp, #36]	; 0x24
   139b8:	mov	r3, r9
   139bc:	str	ip, [sp]
   139c0:	str	r0, [sp, #32]
   139c4:	bl	120bc <close@plt+0x11d0>
   139c8:	ldr	r2, [sp, #28]
   139cc:	cmp	r6, #0
   139d0:	str	r2, [r7]
   139d4:	ldr	r0, [sp, #32]
   139d8:	strne	fp, [r6]
   139dc:	add	sp, sp, #44	; 0x2c
   139e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139e4:	andeq	r6, r2, r8, ror #4
   139e8:	mov	r3, r2
   139ec:	mov	r2, #0
   139f0:	b	13910 <close@plt+0x2a24>
   139f4:	push	{r4, r5, r6, r7, r8, lr}
   139f8:	ldr	r6, [pc, #116]	; 13a74 <close@plt+0x2b88>
   139fc:	ldr	r3, [r6, #4]
   13a00:	ldr	r7, [r6]
   13a04:	cmp	r3, #1
   13a08:	movgt	r5, r7
   13a0c:	movgt	r4, #1
   13a10:	ble	13a30 <close@plt+0x2b44>
   13a14:	ldr	r0, [r5, #12]
   13a18:	bl	11cd0 <close@plt+0xde4>
   13a1c:	ldr	r3, [r6, #4]
   13a20:	add	r4, r4, #1
   13a24:	cmp	r3, r4
   13a28:	add	r5, r5, #8
   13a2c:	bgt	13a14 <close@plt+0x2b28>
   13a30:	ldr	r0, [r7, #4]
   13a34:	ldr	r4, [pc, #60]	; 13a78 <close@plt+0x2b8c>
   13a38:	cmp	r0, r4
   13a3c:	beq	13a50 <close@plt+0x2b64>
   13a40:	bl	11cd0 <close@plt+0xde4>
   13a44:	mov	r3, #256	; 0x100
   13a48:	str	r4, [r6, #12]
   13a4c:	str	r3, [r6, #8]
   13a50:	ldr	r4, [pc, #36]	; 13a7c <close@plt+0x2b90>
   13a54:	cmp	r7, r4
   13a58:	beq	13a68 <close@plt+0x2b7c>
   13a5c:	mov	r0, r7
   13a60:	bl	11cd0 <close@plt+0xde4>
   13a64:	str	r4, [r6]
   13a68:	mov	r3, #1
   13a6c:	str	r3, [r6, #4]
   13a70:	pop	{r4, r5, r6, r7, r8, pc}
   13a74:	strdeq	r6, [r2], -r4
   13a78:	andeq	r6, r2, r8, ror #2
   13a7c:	strdeq	r6, [r2], -ip
   13a80:	ldr	r3, [pc, #4]	; 13a8c <close@plt+0x2ba0>
   13a84:	mvn	r2, #0
   13a88:	b	135d0 <close@plt+0x26e4>
   13a8c:	andeq	r6, r2, r8, ror #4
   13a90:	ldr	r3, [pc]	; 13a98 <close@plt+0x2bac>
   13a94:	b	135d0 <close@plt+0x26e4>
   13a98:	andeq	r6, r2, r8, ror #4
   13a9c:	mov	r1, r0
   13aa0:	ldr	r3, [pc, #8]	; 13ab0 <close@plt+0x2bc4>
   13aa4:	mvn	r2, #0
   13aa8:	mov	r0, #0
   13aac:	b	135d0 <close@plt+0x26e4>
   13ab0:	andeq	r6, r2, r8, ror #4
   13ab4:	mov	r2, r1
   13ab8:	ldr	r3, [pc, #8]	; 13ac8 <close@plt+0x2bdc>
   13abc:	mov	r1, r0
   13ac0:	mov	r0, #0
   13ac4:	b	135d0 <close@plt+0x26e4>
   13ac8:	andeq	r6, r2, r8, ror #4
   13acc:	push	{r4, r5, lr}
   13ad0:	sub	sp, sp, #52	; 0x34
   13ad4:	mov	r5, r2
   13ad8:	mov	r4, r0
   13adc:	mov	r0, sp
   13ae0:	bl	11f6c <close@plt+0x1080>
   13ae4:	mov	r3, sp
   13ae8:	mov	r1, r5
   13aec:	mov	r0, r4
   13af0:	mvn	r2, #0
   13af4:	bl	135d0 <close@plt+0x26e4>
   13af8:	add	sp, sp, #52	; 0x34
   13afc:	pop	{r4, r5, pc}
   13b00:	push	{r4, r5, r6, lr}
   13b04:	sub	sp, sp, #48	; 0x30
   13b08:	mov	r5, r2
   13b0c:	mov	r6, r3
   13b10:	mov	r4, r0
   13b14:	mov	r0, sp
   13b18:	bl	11f6c <close@plt+0x1080>
   13b1c:	mov	r3, sp
   13b20:	mov	r2, r6
   13b24:	mov	r1, r5
   13b28:	mov	r0, r4
   13b2c:	bl	135d0 <close@plt+0x26e4>
   13b30:	add	sp, sp, #48	; 0x30
   13b34:	pop	{r4, r5, r6, pc}
   13b38:	mov	r2, r1
   13b3c:	mov	r1, r0
   13b40:	mov	r0, #0
   13b44:	b	13acc <close@plt+0x2be0>
   13b48:	mov	r3, r2
   13b4c:	mov	r2, r1
   13b50:	mov	r1, r0
   13b54:	mov	r0, #0
   13b58:	b	13b00 <close@plt+0x2c14>
   13b5c:	push	{r4, r5, r6, r7, r8, lr}
   13b60:	mov	r7, r0
   13b64:	ldr	lr, [pc, #100]	; 13bd0 <close@plt+0x2ce4>
   13b68:	mov	r8, r1
   13b6c:	mov	r4, r2
   13b70:	ldm	lr!, {r0, r1, r2, r3}
   13b74:	sub	sp, sp, #48	; 0x30
   13b78:	mov	ip, sp
   13b7c:	lsr	r5, r4, #5
   13b80:	stmia	ip!, {r0, r1, r2, r3}
   13b84:	add	r6, sp, #8
   13b88:	ldm	lr!, {r0, r1, r2, r3}
   13b8c:	and	r4, r4, #31
   13b90:	stmia	ip!, {r0, r1, r2, r3}
   13b94:	ldm	lr, {r0, r1, r2, r3}
   13b98:	stm	ip, {r0, r1, r2, r3}
   13b9c:	mov	r2, r8
   13ba0:	ldr	lr, [r6, r5, lsl #2]
   13ba4:	mov	r1, r7
   13ba8:	mov	r3, sp
   13bac:	lsr	ip, lr, r4
   13bb0:	eor	ip, ip, #1
   13bb4:	and	ip, ip, #1
   13bb8:	mov	r0, #0
   13bbc:	eor	r4, lr, ip, lsl r4
   13bc0:	str	r4, [r6, r5, lsl #2]
   13bc4:	bl	135d0 <close@plt+0x26e4>
   13bc8:	add	sp, sp, #48	; 0x30
   13bcc:	pop	{r4, r5, r6, r7, r8, pc}
   13bd0:	andeq	r6, r2, r8, ror #4
   13bd4:	mov	r2, r1
   13bd8:	mvn	r1, #0
   13bdc:	b	13b5c <close@plt+0x2c70>
   13be0:	mov	r2, #58	; 0x3a
   13be4:	mvn	r1, #0
   13be8:	b	13b5c <close@plt+0x2c70>
   13bec:	mov	r2, #58	; 0x3a
   13bf0:	b	13b5c <close@plt+0x2c70>
   13bf4:	push	{r4, r5, r6, r7, lr}
   13bf8:	sub	sp, sp, #100	; 0x64
   13bfc:	mov	r6, r0
   13c00:	mov	r0, sp
   13c04:	mov	r7, r2
   13c08:	bl	11f6c <close@plt+0x1080>
   13c0c:	mov	ip, sp
   13c10:	add	lr, sp, #48	; 0x30
   13c14:	ldm	ip!, {r0, r1, r2, r3}
   13c18:	stmia	lr!, {r0, r1, r2, r3}
   13c1c:	ldm	ip!, {r0, r1, r2, r3}
   13c20:	ldr	r5, [sp, #60]	; 0x3c
   13c24:	stmia	lr!, {r0, r1, r2, r3}
   13c28:	mvn	r4, r5
   13c2c:	ldm	ip, {r0, r1, r2, r3}
   13c30:	and	ip, r4, #67108864	; 0x4000000
   13c34:	eor	ip, ip, r5
   13c38:	str	ip, [sp, #60]	; 0x3c
   13c3c:	stm	lr, {r0, r1, r2, r3}
   13c40:	mov	r1, r7
   13c44:	mov	r0, r6
   13c48:	add	r3, sp, #48	; 0x30
   13c4c:	mvn	r2, #0
   13c50:	bl	135d0 <close@plt+0x26e4>
   13c54:	add	sp, sp, #100	; 0x64
   13c58:	pop	{r4, r5, r6, r7, pc}
   13c5c:	push	{r4, r5, r6, r7, r8, lr}
   13c60:	mov	r5, r1
   13c64:	ldr	lr, [pc, #100]	; 13cd0 <close@plt+0x2de4>
   13c68:	mov	r4, r2
   13c6c:	mov	r7, r0
   13c70:	mov	r8, r3
   13c74:	ldm	lr!, {r0, r1, r2, r3}
   13c78:	sub	sp, sp, #48	; 0x30
   13c7c:	mov	ip, sp
   13c80:	mov	r6, #10
   13c84:	stmia	ip!, {r0, r1, r2, r3}
   13c88:	cmp	r4, #0
   13c8c:	cmpne	r5, #0
   13c90:	ldm	lr!, {r0, r1, r2, r3}
   13c94:	str	r6, [sp]
   13c98:	stmia	ip!, {r0, r1, r2, r3}
   13c9c:	ldm	lr, {r0, r1, r2, r3}
   13ca0:	stm	ip, {r0, r1, r2, r3}
   13ca4:	beq	13ccc <close@plt+0x2de0>
   13ca8:	mov	r3, sp
   13cac:	mov	r1, r8
   13cb0:	mov	r0, r7
   13cb4:	ldr	r2, [sp, #72]	; 0x48
   13cb8:	str	r5, [sp, #40]	; 0x28
   13cbc:	str	r4, [sp, #44]	; 0x2c
   13cc0:	bl	135d0 <close@plt+0x26e4>
   13cc4:	add	sp, sp, #48	; 0x30
   13cc8:	pop	{r4, r5, r6, r7, r8, pc}
   13ccc:	bl	10ee0 <abort@plt>
   13cd0:	andeq	r6, r2, r8, ror #4
   13cd4:	push	{lr}		; (str lr, [sp, #-4]!)
   13cd8:	sub	sp, sp, #12
   13cdc:	mvn	ip, #0
   13ce0:	str	ip, [sp]
   13ce4:	bl	13c5c <close@plt+0x2d70>
   13ce8:	add	sp, sp, #12
   13cec:	pop	{pc}		; (ldr pc, [sp], #4)
   13cf0:	push	{lr}		; (str lr, [sp, #-4]!)
   13cf4:	sub	sp, sp, #12
   13cf8:	mvn	ip, #0
   13cfc:	mov	r3, r2
   13d00:	str	ip, [sp]
   13d04:	mov	r2, r1
   13d08:	mov	r1, r0
   13d0c:	mov	r0, #0
   13d10:	bl	13c5c <close@plt+0x2d70>
   13d14:	add	sp, sp, #12
   13d18:	pop	{pc}		; (ldr pc, [sp], #4)
   13d1c:	push	{lr}		; (str lr, [sp, #-4]!)
   13d20:	sub	sp, sp, #12
   13d24:	str	r3, [sp]
   13d28:	mov	r3, r2
   13d2c:	mov	r2, r1
   13d30:	mov	r1, r0
   13d34:	mov	r0, #0
   13d38:	bl	13c5c <close@plt+0x2d70>
   13d3c:	add	sp, sp, #12
   13d40:	pop	{pc}		; (ldr pc, [sp], #4)
   13d44:	ldr	r3, [pc]	; 13d4c <close@plt+0x2e60>
   13d48:	b	135d0 <close@plt+0x26e4>
   13d4c:	andeq	r6, r2, r4, lsl #2
   13d50:	mov	r2, r1
   13d54:	ldr	r3, [pc, #8]	; 13d64 <close@plt+0x2e78>
   13d58:	mov	r1, r0
   13d5c:	mov	r0, #0
   13d60:	b	135d0 <close@plt+0x26e4>
   13d64:	andeq	r6, r2, r4, lsl #2
   13d68:	ldr	r3, [pc, #4]	; 13d74 <close@plt+0x2e88>
   13d6c:	mvn	r2, #0
   13d70:	b	135d0 <close@plt+0x26e4>
   13d74:	andeq	r6, r2, r4, lsl #2
   13d78:	mov	r1, r0
   13d7c:	ldr	r3, [pc, #8]	; 13d8c <close@plt+0x2ea0>
   13d80:	mvn	r2, #0
   13d84:	mov	r0, #0
   13d88:	b	135d0 <close@plt+0x26e4>
   13d8c:	andeq	r6, r2, r4, lsl #2
   13d90:	push	{r4, r5, r6, lr}
   13d94:	sub	sp, sp, #32
   13d98:	cmp	r1, #0
   13d9c:	mov	r4, r0
   13da0:	ldr	r5, [sp, #48]	; 0x30
   13da4:	ldr	r6, [sp, #52]	; 0x34
   13da8:	beq	140c0 <close@plt+0x31d4>
   13dac:	stm	sp, {r2, r3}
   13db0:	mov	r3, r1
   13db4:	ldr	r2, [pc, #808]	; 140e4 <close@plt+0x31f8>
   13db8:	mov	r1, #1
   13dbc:	bl	10e5c <__fprintf_chk@plt>
   13dc0:	mov	r2, #5
   13dc4:	ldr	r1, [pc, #796]	; 140e8 <close@plt+0x31fc>
   13dc8:	mov	r0, #0
   13dcc:	bl	10d18 <dcgettext@plt>
   13dd0:	ldr	r3, [pc, #788]	; 140ec <close@plt+0x3200>
   13dd4:	ldr	r2, [pc, #788]	; 140f0 <close@plt+0x3204>
   13dd8:	str	r3, [sp]
   13ddc:	mov	r1, #1
   13de0:	mov	r3, r0
   13de4:	mov	r0, r4
   13de8:	bl	10e5c <__fprintf_chk@plt>
   13dec:	mov	r1, r4
   13df0:	mov	r0, #10
   13df4:	bl	10d0c <fputc_unlocked@plt>
   13df8:	mov	r2, #5
   13dfc:	ldr	r1, [pc, #752]	; 140f4 <close@plt+0x3208>
   13e00:	mov	r0, #0
   13e04:	bl	10d18 <dcgettext@plt>
   13e08:	mov	r1, #1
   13e0c:	ldr	r3, [pc, #740]	; 140f8 <close@plt+0x320c>
   13e10:	mov	r2, r0
   13e14:	mov	r0, r4
   13e18:	bl	10e5c <__fprintf_chk@plt>
   13e1c:	mov	r1, r4
   13e20:	mov	r0, #10
   13e24:	bl	10d0c <fputc_unlocked@plt>
   13e28:	cmp	r6, #9
   13e2c:	ldrls	pc, [pc, r6, lsl #2]
   13e30:	b	140d8 <close@plt+0x31ec>
   13e34:			; <UNDEFINED> instruction: 0x00013eb8
   13e38:	andeq	r3, r1, r0, asr #29
   13e3c:	andeq	r3, r1, ip, ror #29
   13e40:	andeq	r3, r1, r0, lsr #30
   13e44:	andeq	r3, r1, ip, asr pc
   13e48:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   13e4c:	ldrdeq	r3, [r1], -r4
   13e50:	andeq	r4, r1, r8, lsl r0
   13e54:	andeq	r4, r1, r8, rrx
   13e58:	andeq	r3, r1, ip, asr lr
   13e5c:	ldr	r1, [pc, #664]	; 140fc <close@plt+0x3210>
   13e60:	mov	r2, #5
   13e64:	mov	r0, #0
   13e68:	bl	10d18 <dcgettext@plt>
   13e6c:	ldr	ip, [r5, #32]
   13e70:	ldr	r1, [r5, #28]
   13e74:	ldr	r2, [r5, #24]
   13e78:	ldr	r3, [r5]
   13e7c:	ldr	r6, [r5, #20]
   13e80:	str	ip, [sp, #28]
   13e84:	ldr	lr, [r5, #16]
   13e88:	str	r1, [sp, #24]
   13e8c:	ldr	ip, [r5, #12]
   13e90:	str	r2, [sp, #20]
   13e94:	ldr	r1, [r5, #8]
   13e98:	ldr	r2, [r5, #4]
   13e9c:	str	r6, [sp, #16]
   13ea0:	stmib	sp, {r1, ip, lr}
   13ea4:	mov	r1, #1
   13ea8:	str	r2, [sp]
   13eac:	mov	r2, r0
   13eb0:	mov	r0, r4
   13eb4:	bl	10e5c <__fprintf_chk@plt>
   13eb8:	add	sp, sp, #32
   13ebc:	pop	{r4, r5, r6, pc}
   13ec0:	mov	r2, #5
   13ec4:	ldr	r1, [pc, #564]	; 14100 <close@plt+0x3214>
   13ec8:	mov	r0, #0
   13ecc:	bl	10d18 <dcgettext@plt>
   13ed0:	ldr	r3, [r5]
   13ed4:	mov	r1, #1
   13ed8:	mov	r2, r0
   13edc:	mov	r0, r4
   13ee0:	add	sp, sp, #32
   13ee4:	pop	{r4, r5, r6, lr}
   13ee8:	b	10e5c <__fprintf_chk@plt>
   13eec:	mov	r2, #5
   13ef0:	ldr	r1, [pc, #524]	; 14104 <close@plt+0x3218>
   13ef4:	mov	r0, #0
   13ef8:	bl	10d18 <dcgettext@plt>
   13efc:	ldr	r2, [r5, #4]
   13f00:	ldr	r3, [r5]
   13f04:	mov	r1, #1
   13f08:	str	r2, [sp, #48]	; 0x30
   13f0c:	mov	r2, r0
   13f10:	mov	r0, r4
   13f14:	add	sp, sp, #32
   13f18:	pop	{r4, r5, r6, lr}
   13f1c:	b	10e5c <__fprintf_chk@plt>
   13f20:	mov	r2, #5
   13f24:	ldr	r1, [pc, #476]	; 14108 <close@plt+0x321c>
   13f28:	mov	r0, #0
   13f2c:	bl	10d18 <dcgettext@plt>
   13f30:	ldr	r1, [r5, #8]
   13f34:	ldr	r2, [r5, #4]
   13f38:	ldr	r3, [r5]
   13f3c:	str	r1, [sp, #52]	; 0x34
   13f40:	str	r2, [sp, #48]	; 0x30
   13f44:	mov	r1, #1
   13f48:	mov	r2, r0
   13f4c:	mov	r0, r4
   13f50:	add	sp, sp, #32
   13f54:	pop	{r4, r5, r6, lr}
   13f58:	b	10e5c <__fprintf_chk@plt>
   13f5c:	mov	r2, #5
   13f60:	ldr	r1, [pc, #420]	; 1410c <close@plt+0x3220>
   13f64:	mov	r0, #0
   13f68:	bl	10d18 <dcgettext@plt>
   13f6c:	ldr	r1, [r5, #8]
   13f70:	ldr	ip, [r5, #12]
   13f74:	ldr	r2, [r5, #4]
   13f78:	ldr	r3, [r5]
   13f7c:	stmib	sp, {r1, ip}
   13f80:	str	r2, [sp]
   13f84:	mov	r1, #1
   13f88:	mov	r2, r0
   13f8c:	mov	r0, r4
   13f90:	bl	10e5c <__fprintf_chk@plt>
   13f94:	b	13eb8 <close@plt+0x2fcc>
   13f98:	mov	r2, #5
   13f9c:	ldr	r1, [pc, #364]	; 14110 <close@plt+0x3224>
   13fa0:	mov	r0, #0
   13fa4:	bl	10d18 <dcgettext@plt>
   13fa8:	add	r1, r5, #8
   13fac:	ldr	r2, [r5, #4]
   13fb0:	ldm	r1, {r1, ip, lr}
   13fb4:	ldr	r3, [r5]
   13fb8:	str	r2, [sp]
   13fbc:	stmib	sp, {r1, ip, lr}
   13fc0:	mov	r1, #1
   13fc4:	mov	r2, r0
   13fc8:	mov	r0, r4
   13fcc:	bl	10e5c <__fprintf_chk@plt>
   13fd0:	b	13eb8 <close@plt+0x2fcc>
   13fd4:	mov	r2, #5
   13fd8:	ldr	r1, [pc, #308]	; 14114 <close@plt+0x3228>
   13fdc:	mov	r0, #0
   13fe0:	bl	10d18 <dcgettext@plt>
   13fe4:	add	r1, r5, #8
   13fe8:	ldr	r2, [r5, #4]
   13fec:	ldm	r1, {r1, ip, lr}
   13ff0:	ldr	r6, [r5, #20]
   13ff4:	ldr	r3, [r5]
   13ff8:	stmib	sp, {r1, ip, lr}
   13ffc:	mov	r1, #1
   14000:	str	r2, [sp]
   14004:	str	r6, [sp, #16]
   14008:	mov	r2, r0
   1400c:	mov	r0, r4
   14010:	bl	10e5c <__fprintf_chk@plt>
   14014:	b	13eb8 <close@plt+0x2fcc>
   14018:	mov	r2, #5
   1401c:	ldr	r1, [pc, #244]	; 14118 <close@plt+0x322c>
   14020:	mov	r0, #0
   14024:	bl	10d18 <dcgettext@plt>
   14028:	ldr	r2, [r5, #24]
   1402c:	ldr	r3, [r5]
   14030:	ldr	r6, [r5, #20]
   14034:	ldr	lr, [r5, #16]
   14038:	ldr	ip, [r5, #12]
   1403c:	str	r2, [sp, #20]
   14040:	ldr	r1, [r5, #8]
   14044:	ldr	r2, [r5, #4]
   14048:	str	r6, [sp, #16]
   1404c:	stmib	sp, {r1, ip, lr}
   14050:	mov	r1, #1
   14054:	str	r2, [sp]
   14058:	mov	r2, r0
   1405c:	mov	r0, r4
   14060:	bl	10e5c <__fprintf_chk@plt>
   14064:	b	13eb8 <close@plt+0x2fcc>
   14068:	mov	r2, #5
   1406c:	ldr	r1, [pc, #168]	; 1411c <close@plt+0x3230>
   14070:	mov	r0, #0
   14074:	bl	10d18 <dcgettext@plt>
   14078:	ldr	r1, [r5, #28]
   1407c:	ldr	r2, [r5, #24]
   14080:	ldr	r3, [r5]
   14084:	ldr	r6, [r5, #20]
   14088:	ldr	lr, [r5, #16]
   1408c:	str	r1, [sp, #24]
   14090:	ldr	ip, [r5, #12]
   14094:	str	r2, [sp, #20]
   14098:	ldr	r1, [r5, #8]
   1409c:	ldr	r2, [r5, #4]
   140a0:	str	r6, [sp, #16]
   140a4:	stmib	sp, {r1, ip, lr}
   140a8:	mov	r1, #1
   140ac:	str	r2, [sp]
   140b0:	mov	r2, r0
   140b4:	mov	r0, r4
   140b8:	bl	10e5c <__fprintf_chk@plt>
   140bc:	b	13eb8 <close@plt+0x2fcc>
   140c0:	str	r3, [sp]
   140c4:	mov	r1, #1
   140c8:	mov	r3, r2
   140cc:	ldr	r2, [pc, #76]	; 14120 <close@plt+0x3234>
   140d0:	bl	10e5c <__fprintf_chk@plt>
   140d4:	b	13dc0 <close@plt+0x2ed4>
   140d8:	mov	r2, #5
   140dc:	ldr	r1, [pc, #64]	; 14124 <close@plt+0x3238>
   140e0:	b	13e64 <close@plt+0x2f78>
   140e4:	strdeq	r5, [r1], -r0
   140e8:	andeq	r5, r1, r4, lsl #20
   140ec:	andeq	r0, r0, r6, ror #15
   140f0:	ldrdeq	r5, [r1], -ip
   140f4:	andeq	r5, r1, r8, lsl #20
   140f8:			; <UNDEFINED> instruction: 0x00015ab4
   140fc:	andeq	r5, r1, r4, ror #23
   14100:	ldrdeq	r5, [r1], -r8
   14104:	andeq	r5, r1, r8, ror #21
   14108:	andeq	r5, r1, r0, lsl #22
   1410c:	andeq	r5, r1, ip, lsl fp
   14110:	andeq	r5, r1, ip, lsr fp
   14114:	andeq	r5, r1, r0, ror #22
   14118:	andeq	r5, r1, r8, lsl #23
   1411c:			; <UNDEFINED> instruction: 0x00015bb4
   14120:	strdeq	r5, [r1], -ip
   14124:	andeq	r5, r1, r8, lsl ip
   14128:	push	{r4, r5, lr}
   1412c:	sub	sp, sp, #12
   14130:	ldr	r5, [sp, #24]
   14134:	ldr	ip, [r5]
   14138:	cmp	ip, #0
   1413c:	beq	14158 <close@plt+0x326c>
   14140:	mov	lr, r5
   14144:	mov	ip, #0
   14148:	ldr	r4, [lr, #4]!
   1414c:	add	ip, ip, #1
   14150:	cmp	r4, #0
   14154:	bne	14148 <close@plt+0x325c>
   14158:	stm	sp, {r5, ip}
   1415c:	bl	13d90 <close@plt+0x2ea4>
   14160:	add	sp, sp, #12
   14164:	pop	{r4, r5, pc}
   14168:	push	{r4, r5, lr}
   1416c:	sub	sp, sp, #52	; 0x34
   14170:	add	r5, sp, #4
   14174:	ldr	r4, [sp, #64]	; 0x40
   14178:	mov	ip, #0
   1417c:	sub	r4, r4, #4
   14180:	ldr	lr, [r4, #4]!
   14184:	cmp	lr, #0
   14188:	str	lr, [r5, #4]!
   1418c:	beq	1419c <close@plt+0x32b0>
   14190:	add	ip, ip, #1
   14194:	cmp	ip, #10
   14198:	bne	14180 <close@plt+0x3294>
   1419c:	add	lr, sp, #8
   141a0:	str	ip, [sp, #4]
   141a4:	str	lr, [sp]
   141a8:	bl	13d90 <close@plt+0x2ea4>
   141ac:	add	sp, sp, #52	; 0x34
   141b0:	pop	{r4, r5, pc}
   141b4:	push	{r3}		; (str r3, [sp, #-4]!)
   141b8:	push	{r4, lr}
   141bc:	sub	sp, sp, #60	; 0x3c
   141c0:	add	lr, sp, #56	; 0x38
   141c4:	add	r3, sp, #72	; 0x48
   141c8:	str	r3, [lr, #-44]!	; 0xffffffd4
   141cc:	add	r4, sp, #68	; 0x44
   141d0:	mov	r3, #0
   141d4:	ldr	ip, [r4, #4]!
   141d8:	cmp	ip, #0
   141dc:	str	ip, [lr, #4]!
   141e0:	beq	141f0 <close@plt+0x3304>
   141e4:	add	r3, r3, #1
   141e8:	cmp	r3, #10
   141ec:	bne	141d4 <close@plt+0x32e8>
   141f0:	add	ip, sp, #16
   141f4:	str	r3, [sp, #4]
   141f8:	str	ip, [sp]
   141fc:	ldr	r3, [sp, #68]	; 0x44
   14200:	bl	13d90 <close@plt+0x2ea4>
   14204:	add	sp, sp, #60	; 0x3c
   14208:	pop	{r4, lr}
   1420c:	add	sp, sp, #4
   14210:	bx	lr
   14214:	ldr	r3, [pc, #116]	; 14290 <close@plt+0x33a4>
   14218:	push	{r4, lr}
   1421c:	mov	r0, #10
   14220:	ldr	r1, [r3]
   14224:	bl	10d0c <fputc_unlocked@plt>
   14228:	mov	r2, #5
   1422c:	ldr	r1, [pc, #96]	; 14294 <close@plt+0x33a8>
   14230:	mov	r0, #0
   14234:	bl	10d18 <dcgettext@plt>
   14238:	ldr	r2, [pc, #88]	; 14298 <close@plt+0x33ac>
   1423c:	mov	r1, r0
   14240:	mov	r0, #1
   14244:	bl	10e44 <__printf_chk@plt>
   14248:	mov	r2, #5
   1424c:	ldr	r1, [pc, #72]	; 1429c <close@plt+0x33b0>
   14250:	mov	r0, #0
   14254:	bl	10d18 <dcgettext@plt>
   14258:	ldr	r3, [pc, #64]	; 142a0 <close@plt+0x33b4>
   1425c:	ldr	r2, [pc, #64]	; 142a4 <close@plt+0x33b8>
   14260:	mov	r1, r0
   14264:	mov	r0, #1
   14268:	bl	10e44 <__printf_chk@plt>
   1426c:	mov	r2, #5
   14270:	ldr	r1, [pc, #48]	; 142a8 <close@plt+0x33bc>
   14274:	mov	r0, #0
   14278:	bl	10d18 <dcgettext@plt>
   1427c:	ldr	r2, [pc, #40]	; 142ac <close@plt+0x33c0>
   14280:	pop	{r4, lr}
   14284:	mov	r1, r0
   14288:	mov	r0, #1
   1428c:	b	10e44 <__printf_chk@plt>
   14290:	andeq	r6, r2, ip, asr #2
   14294:	andeq	r5, r1, r4, asr ip
   14298:	andeq	r5, r1, r8, ror #24
   1429c:	andeq	r5, r1, r0, lsl #25
   142a0:	andeq	r5, r1, r0, lsr #11
   142a4:	andeq	r5, r1, r8, asr #11
   142a8:	muleq	r1, r4, ip
   142ac:			; <UNDEFINED> instruction: 0x00015cbc
   142b0:	push	{r4, lr}
   142b4:	bl	14880 <close@plt+0x3994>
   142b8:	cmp	r0, #0
   142bc:	popne	{r4, pc}
   142c0:	bl	147f8 <close@plt+0x390c>
   142c4:	push	{r4, lr}
   142c8:	bl	14880 <close@plt+0x3994>
   142cc:	cmp	r0, #0
   142d0:	popne	{r4, pc}
   142d4:	bl	147f8 <close@plt+0x390c>
   142d8:	push	{r4, lr}
   142dc:	bl	14880 <close@plt+0x3994>
   142e0:	cmp	r0, #0
   142e4:	popne	{r4, pc}
   142e8:	bl	147f8 <close@plt+0x390c>
   142ec:	push	{r4, r5, r6, lr}
   142f0:	mov	r5, r0
   142f4:	mov	r4, r1
   142f8:	bl	148ac <close@plt+0x39c0>
   142fc:	cmp	r0, #0
   14300:	popne	{r4, r5, r6, pc}
   14304:	adds	r4, r4, #0
   14308:	movne	r4, #1
   1430c:	cmp	r5, #0
   14310:	orreq	r4, r4, #1
   14314:	cmp	r4, #0
   14318:	popeq	{r4, r5, r6, pc}
   1431c:	bl	147f8 <close@plt+0x390c>
   14320:	push	{r4, lr}
   14324:	cmp	r1, #0
   14328:	orreq	r1, r1, #1
   1432c:	bl	148ac <close@plt+0x39c0>
   14330:	cmp	r0, #0
   14334:	popne	{r4, pc}
   14338:	bl	147f8 <close@plt+0x390c>
   1433c:	push	{r4, r5, r6, lr}
   14340:	mov	r6, r0
   14344:	mov	r5, r1
   14348:	mov	r4, r2
   1434c:	bl	14c58 <close@plt+0x3d6c>
   14350:	cmp	r0, #0
   14354:	popne	{r4, r5, r6, pc}
   14358:	cmp	r6, #0
   1435c:	beq	1436c <close@plt+0x3480>
   14360:	cmp	r5, #0
   14364:	cmpne	r4, #0
   14368:	popeq	{r4, r5, r6, pc}
   1436c:	bl	147f8 <close@plt+0x390c>
   14370:	b	1433c <close@plt+0x3450>
   14374:	cmp	r2, #0
   14378:	cmpne	r1, #0
   1437c:	moveq	r2, #1
   14380:	moveq	r1, r2
   14384:	push	{r4, lr}
   14388:	bl	14c58 <close@plt+0x3d6c>
   1438c:	cmp	r0, #0
   14390:	popne	{r4, pc}
   14394:	bl	147f8 <close@plt+0x390c>
   14398:	mov	r2, r1
   1439c:	mov	r1, r0
   143a0:	mov	r0, #0
   143a4:	b	1433c <close@plt+0x3450>
   143a8:	mov	r2, r1
   143ac:	mov	r1, r0
   143b0:	mov	r0, #0
   143b4:	b	14374 <close@plt+0x3488>
   143b8:	push	{r4, r5, r6, lr}
   143bc:	subs	r6, r0, #0
   143c0:	sub	sp, sp, #8
   143c4:	mov	r5, r1
   143c8:	ldr	r4, [r1]
   143cc:	beq	14408 <close@plt+0x351c>
   143d0:	lsr	r1, r4, #1
   143d4:	add	r3, r1, #1
   143d8:	mvn	r3, r3
   143dc:	cmp	r4, r3
   143e0:	bhi	14404 <close@plt+0x3518>
   143e4:	add	r4, r4, #1
   143e8:	add	r4, r4, r1
   143ec:	mov	r0, r6
   143f0:	mov	r1, r4
   143f4:	bl	1433c <close@plt+0x3450>
   143f8:	str	r4, [r5]
   143fc:	add	sp, sp, #8
   14400:	pop	{r4, r5, r6, pc}
   14404:	bl	147f8 <close@plt+0x390c>
   14408:	cmp	r4, #0
   1440c:	bne	143ec <close@plt+0x3500>
   14410:	mov	r1, r2
   14414:	mov	r0, #64	; 0x40
   14418:	str	r2, [sp, #4]
   1441c:	bl	14d98 <close@plt+0x3eac>
   14420:	ldr	r2, [sp, #4]
   14424:	cmp	r0, #0
   14428:	movne	r4, r0
   1442c:	addeq	r4, r0, #1
   14430:	b	143ec <close@plt+0x3500>
   14434:	mov	r2, #1
   14438:	b	143b8 <close@plt+0x34cc>
   1443c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14440:	sub	sp, sp, #12
   14444:	ldr	r6, [r1]
   14448:	mov	sl, r1
   1444c:	mov	r9, r0
   14450:	asrs	r4, r6, #1
   14454:	mov	r5, r2
   14458:	mov	fp, r3
   1445c:	ldr	r7, [sp, #48]	; 0x30
   14460:	bmi	145cc <close@plt+0x36e0>
   14464:	mvn	r3, #-2147483648	; 0x80000000
   14468:	sub	r3, r3, r4
   1446c:	cmp	r6, r3
   14470:	movle	r3, #0
   14474:	movgt	r3, #1
   14478:	mvn	r8, fp
   1447c:	cmp	r3, #0
   14480:	addeq	r4, r4, r6
   14484:	mvnne	r4, #-2147483648	; 0x80000000
   14488:	lsr	r8, r8, #31
   1448c:	cmp	fp, r4
   14490:	movge	r3, #0
   14494:	andlt	r3, r8, #1
   14498:	cmp	r3, #0
   1449c:	beq	14584 <close@plt+0x3698>
   144a0:	cmp	r7, #0
   144a4:	blt	14654 <close@plt+0x3768>
   144a8:	bne	1464c <close@plt+0x3760>
   144ac:	mov	r2, #64	; 0x40
   144b0:	mov	r1, r7
   144b4:	mov	r0, r2
   144b8:	str	r2, [sp, #4]
   144bc:	bl	14fa4 <close@plt+0x40b8>
   144c0:	ldr	r2, [sp, #4]
   144c4:	mov	r1, r7
   144c8:	mov	r4, r0
   144cc:	mov	r0, r2
   144d0:	bl	151c4 <close@plt+0x42d8>
   144d4:	ldr	r2, [sp, #4]
   144d8:	sub	r1, r2, r1
   144dc:	cmp	r9, #0
   144e0:	sub	r3, r4, r6
   144e4:	streq	r9, [sl]
   144e8:	cmp	r3, r5
   144ec:	bge	14570 <close@plt+0x3684>
   144f0:	cmp	r5, #0
   144f4:	blt	145e0 <close@plt+0x36f4>
   144f8:	cmp	r6, #0
   144fc:	blt	1451c <close@plt+0x3630>
   14500:	mvn	r3, #-2147483648	; 0x80000000
   14504:	sub	r3, r3, r5
   14508:	cmp	r6, r3
   1450c:	movle	r3, #0
   14510:	movgt	r3, #1
   14514:	cmp	r3, #0
   14518:	bne	146dc <close@plt+0x37f0>
   1451c:	add	r5, r6, r5
   14520:	cmp	fp, r5
   14524:	movge	r8, #0
   14528:	andlt	r8, r8, #1
   1452c:	cmp	r8, #0
   14530:	mov	r4, r5
   14534:	bne	146dc <close@plt+0x37f0>
   14538:	cmp	r7, #0
   1453c:	blt	145f4 <close@plt+0x3708>
   14540:	beq	1456c <close@plt+0x3680>
   14544:	cmp	r5, #0
   14548:	blt	1469c <close@plt+0x37b0>
   1454c:	mov	r1, r7
   14550:	mvn	r0, #-2147483648	; 0x80000000
   14554:	bl	14fa4 <close@plt+0x40b8>
   14558:	cmp	r5, r0
   1455c:	movle	r0, #0
   14560:	movgt	r0, #1
   14564:	cmp	r0, #0
   14568:	bne	146dc <close@plt+0x37f0>
   1456c:	mul	r1, r5, r7
   14570:	mov	r0, r9
   14574:	bl	142ec <close@plt+0x3400>
   14578:	str	r4, [sl]
   1457c:	add	sp, sp, #12
   14580:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14584:	cmp	r7, #0
   14588:	blt	14620 <close@plt+0x3734>
   1458c:	beq	144ac <close@plt+0x35c0>
   14590:	cmp	r4, #0
   14594:	blt	1465c <close@plt+0x3770>
   14598:	mov	r1, r7
   1459c:	mvn	r0, #-2147483648	; 0x80000000
   145a0:	bl	14fa4 <close@plt+0x40b8>
   145a4:	cmp	r0, r4
   145a8:	movge	r0, #0
   145ac:	movlt	r0, #1
   145b0:	cmp	r0, #0
   145b4:	mvnne	r2, #-2147483648	; 0x80000000
   145b8:	bne	144b0 <close@plt+0x35c4>
   145bc:	mul	r1, r7, r4
   145c0:	cmp	r1, #63	; 0x3f
   145c4:	bgt	144dc <close@plt+0x35f0>
   145c8:	b	144ac <close@plt+0x35c0>
   145cc:	rsb	r3, r4, #-2147483648	; 0x80000000
   145d0:	cmp	r6, r3
   145d4:	movge	r3, #0
   145d8:	movlt	r3, #1
   145dc:	b	14478 <close@plt+0x358c>
   145e0:	rsb	r3, r5, #-2147483648	; 0x80000000
   145e4:	cmp	r6, r3
   145e8:	movge	r3, #0
   145ec:	movlt	r3, #1
   145f0:	b	14514 <close@plt+0x3628>
   145f4:	cmp	r5, #0
   145f8:	blt	14680 <close@plt+0x3794>
   145fc:	cmn	r7, #1
   14600:	beq	1456c <close@plt+0x3680>
   14604:	mov	r1, r7
   14608:	mov	r0, #-2147483648	; 0x80000000
   1460c:	bl	14fa4 <close@plt+0x40b8>
   14610:	cmp	r5, r0
   14614:	movle	r0, #0
   14618:	movgt	r0, #1
   1461c:	b	14564 <close@plt+0x3678>
   14620:	cmp	r4, #0
   14624:	blt	146c0 <close@plt+0x37d4>
   14628:	cmn	r7, #1
   1462c:	beq	145bc <close@plt+0x36d0>
   14630:	mov	r1, r7
   14634:	mov	r0, #-2147483648	; 0x80000000
   14638:	bl	14fa4 <close@plt+0x40b8>
   1463c:	cmp	r0, r4
   14640:	movge	r0, #0
   14644:	movlt	r0, #1
   14648:	b	145b0 <close@plt+0x36c4>
   1464c:	mov	r4, fp
   14650:	b	14598 <close@plt+0x36ac>
   14654:	mov	r4, fp
   14658:	b	14628 <close@plt+0x373c>
   1465c:	cmn	r4, #1
   14660:	beq	145bc <close@plt+0x36d0>
   14664:	mov	r1, r4
   14668:	mov	r0, #-2147483648	; 0x80000000
   1466c:	bl	14fa4 <close@plt+0x40b8>
   14670:	cmp	r7, r0
   14674:	movle	r0, #0
   14678:	movgt	r0, #1
   1467c:	b	145b0 <close@plt+0x36c4>
   14680:	mov	r1, r7
   14684:	mvn	r0, #-2147483648	; 0x80000000
   14688:	bl	14fa4 <close@plt+0x40b8>
   1468c:	cmp	r5, r0
   14690:	movge	r0, #0
   14694:	movlt	r0, #1
   14698:	b	14564 <close@plt+0x3678>
   1469c:	cmn	r5, #1
   146a0:	beq	1456c <close@plt+0x3680>
   146a4:	mov	r1, r5
   146a8:	mov	r0, #-2147483648	; 0x80000000
   146ac:	bl	14fa4 <close@plt+0x40b8>
   146b0:	cmp	r7, r0
   146b4:	movle	r0, #0
   146b8:	movgt	r0, #1
   146bc:	b	14564 <close@plt+0x3678>
   146c0:	mov	r1, r7
   146c4:	mvn	r0, #-2147483648	; 0x80000000
   146c8:	bl	14fa4 <close@plt+0x40b8>
   146cc:	cmp	r0, r4
   146d0:	movle	r0, #0
   146d4:	movgt	r0, #1
   146d8:	b	145b0 <close@plt+0x36c4>
   146dc:	bl	147f8 <close@plt+0x390c>
   146e0:	push	{r4, lr}
   146e4:	mov	r1, #1
   146e8:	bl	14838 <close@plt+0x394c>
   146ec:	cmp	r0, #0
   146f0:	popne	{r4, pc}
   146f4:	bl	147f8 <close@plt+0x390c>
   146f8:	push	{r4, lr}
   146fc:	mov	r1, #1
   14700:	bl	14838 <close@plt+0x394c>
   14704:	cmp	r0, #0
   14708:	popne	{r4, pc}
   1470c:	bl	147f8 <close@plt+0x390c>
   14710:	push	{r4, lr}
   14714:	bl	14838 <close@plt+0x394c>
   14718:	cmp	r0, #0
   1471c:	popne	{r4, pc}
   14720:	bl	147f8 <close@plt+0x390c>
   14724:	push	{r4, lr}
   14728:	bl	14838 <close@plt+0x394c>
   1472c:	cmp	r0, #0
   14730:	popne	{r4, pc}
   14734:	bl	147f8 <close@plt+0x390c>
   14738:	push	{r4, r5, r6, lr}
   1473c:	mov	r6, r0
   14740:	mov	r0, r1
   14744:	mov	r4, r1
   14748:	bl	14880 <close@plt+0x3994>
   1474c:	subs	r5, r0, #0
   14750:	beq	14768 <close@plt+0x387c>
   14754:	mov	r2, r4
   14758:	mov	r1, r6
   1475c:	bl	10cd0 <memcpy@plt>
   14760:	mov	r0, r5
   14764:	pop	{r4, r5, r6, pc}
   14768:	bl	147f8 <close@plt+0x390c>
   1476c:	push	{r4, r5, r6, lr}
   14770:	mov	r6, r0
   14774:	mov	r0, r1
   14778:	mov	r4, r1
   1477c:	bl	14880 <close@plt+0x3994>
   14780:	subs	r5, r0, #0
   14784:	beq	1479c <close@plt+0x38b0>
   14788:	mov	r2, r4
   1478c:	mov	r1, r6
   14790:	bl	10cd0 <memcpy@plt>
   14794:	mov	r0, r5
   14798:	pop	{r4, r5, r6, pc}
   1479c:	bl	147f8 <close@plt+0x390c>
   147a0:	push	{r4, r5, r6, lr}
   147a4:	mov	r6, r0
   147a8:	add	r0, r1, #1
   147ac:	mov	r4, r1
   147b0:	bl	14880 <close@plt+0x3994>
   147b4:	subs	r5, r0, #0
   147b8:	beq	147d8 <close@plt+0x38ec>
   147bc:	mov	r3, #0
   147c0:	mov	r1, r6
   147c4:	strb	r3, [r5, r4]
   147c8:	mov	r2, r4
   147cc:	bl	10cd0 <memcpy@plt>
   147d0:	mov	r0, r5
   147d4:	pop	{r4, r5, r6, pc}
   147d8:	bl	147f8 <close@plt+0x390c>
   147dc:	push	{r4, lr}
   147e0:	mov	r4, r0
   147e4:	bl	10e14 <strlen@plt>
   147e8:	add	r1, r0, #1
   147ec:	mov	r0, r4
   147f0:	pop	{r4, lr}
   147f4:	b	14738 <close@plt+0x384c>
   147f8:	ldr	r3, [pc, #44]	; 1482c <close@plt+0x3940>
   147fc:	push	{r4, lr}
   14800:	mov	r2, #5
   14804:	ldr	r1, [pc, #36]	; 14830 <close@plt+0x3944>
   14808:	mov	r0, #0
   1480c:	ldr	r4, [r3]
   14810:	bl	10d18 <dcgettext@plt>
   14814:	ldr	r2, [pc, #24]	; 14834 <close@plt+0x3948>
   14818:	mov	r1, #0
   1481c:	mov	r3, r0
   14820:	mov	r0, r4
   14824:	bl	10d90 <error@plt>
   14828:	bl	10ee0 <abort@plt>
   1482c:	strdeq	r6, [r2], -r0
   14830:	andeq	r5, r1, ip, lsl #26
   14834:	andeq	r5, r1, ip, lsl #17
   14838:	cmp	r1, #0
   1483c:	cmpne	r0, #0
   14840:	moveq	r1, #1
   14844:	moveq	r0, r1
   14848:	umull	r2, r3, r0, r1
   1484c:	adds	r3, r3, #0
   14850:	movne	r3, #1
   14854:	cmp	r2, #0
   14858:	blt	14868 <close@plt+0x397c>
   1485c:	cmp	r3, #0
   14860:	bne	14868 <close@plt+0x397c>
   14864:	b	10c7c <calloc@plt>
   14868:	push	{r4, lr}
   1486c:	bl	10e20 <__errno_location@plt>
   14870:	mov	r3, #12
   14874:	str	r3, [r0]
   14878:	mov	r0, #0
   1487c:	pop	{r4, pc}
   14880:	cmp	r0, #0
   14884:	moveq	r0, #1
   14888:	cmp	r0, #0
   1488c:	blt	14894 <close@plt+0x39a8>
   14890:	b	10db4 <malloc@plt>
   14894:	push	{r4, lr}
   14898:	bl	10e20 <__errno_location@plt>
   1489c:	mov	r3, #12
   148a0:	str	r3, [r0]
   148a4:	mov	r0, #0
   148a8:	pop	{r4, pc}
   148ac:	cmp	r0, #0
   148b0:	beq	148d4 <close@plt+0x39e8>
   148b4:	cmp	r1, #0
   148b8:	push	{lr}		; (str lr, [sp, #-4]!)
   148bc:	sub	sp, sp, #12
   148c0:	beq	148dc <close@plt+0x39f0>
   148c4:	blt	148f4 <close@plt+0x3a08>
   148c8:	add	sp, sp, #12
   148cc:	pop	{lr}		; (ldr lr, [sp], #4)
   148d0:	b	10d30 <realloc@plt>
   148d4:	mov	r0, r1
   148d8:	b	14880 <close@plt+0x3994>
   148dc:	str	r1, [sp, #4]
   148e0:	bl	11cd0 <close@plt+0xde4>
   148e4:	ldr	r3, [sp, #4]
   148e8:	mov	r0, r3
   148ec:	add	sp, sp, #12
   148f0:	pop	{pc}		; (ldr pc, [sp], #4)
   148f4:	bl	10e20 <__errno_location@plt>
   148f8:	mov	r2, #12
   148fc:	mov	r3, #0
   14900:	str	r2, [r0]
   14904:	b	148e8 <close@plt+0x39fc>
   14908:	ldrb	r3, [r0]
   1490c:	cmp	r3, #47	; 0x2f
   14910:	bne	14920 <close@plt+0x3a34>
   14914:	ldrb	r3, [r0, #1]!
   14918:	cmp	r3, #47	; 0x2f
   1491c:	beq	14914 <close@plt+0x3a28>
   14920:	cmp	r3, #0
   14924:	bxeq	lr
   14928:	mov	r2, #0
   1492c:	push	{lr}		; (str lr, [sp, #-4]!)
   14930:	mov	ip, r2
   14934:	mov	r1, r0
   14938:	mov	lr, #1
   1493c:	cmp	r3, #47	; 0x2f
   14940:	moveq	r2, lr
   14944:	beq	14954 <close@plt+0x3a68>
   14948:	cmp	r2, #0
   1494c:	movne	r0, r1
   14950:	movne	r2, ip
   14954:	ldrb	r3, [r1, #1]!
   14958:	cmp	r3, #0
   1495c:	bne	1493c <close@plt+0x3a50>
   14960:	pop	{pc}		; (ldr pc, [sp], #4)
   14964:	push	{r4, lr}
   14968:	mov	r4, r0
   1496c:	bl	10e14 <strlen@plt>
   14970:	cmp	r0, #1
   14974:	popls	{r4, pc}
   14978:	sub	r3, r0, #1
   1497c:	add	r2, r4, r3
   14980:	ldrb	r1, [r4, r3]
   14984:	cmp	r1, #47	; 0x2f
   14988:	popne	{r4, pc}
   1498c:	cmp	r3, #1
   14990:	beq	149a4 <close@plt+0x3ab8>
   14994:	ldrb	r1, [r2, #-1]!
   14998:	sub	r0, r3, #1
   1499c:	cmp	r1, #47	; 0x2f
   149a0:	beq	149ac <close@plt+0x3ac0>
   149a4:	mov	r0, r3
   149a8:	pop	{r4, pc}
   149ac:	mov	r3, r0
   149b0:	b	1498c <close@plt+0x3aa0>
   149b4:	push	{r4, r5, r6, lr}
   149b8:	mov	r4, r0
   149bc:	bl	10d78 <__fpending@plt>
   149c0:	ldr	r5, [r4]
   149c4:	and	r5, r5, #32
   149c8:	mov	r6, r0
   149cc:	mov	r0, r4
   149d0:	bl	14a30 <close@plt+0x3b44>
   149d4:	cmp	r5, #0
   149d8:	mov	r4, r0
   149dc:	bne	149fc <close@plt+0x3b10>
   149e0:	cmp	r0, #0
   149e4:	beq	149f4 <close@plt+0x3b08>
   149e8:	cmp	r6, #0
   149ec:	beq	14a18 <close@plt+0x3b2c>
   149f0:	mvn	r4, #0
   149f4:	mov	r0, r4
   149f8:	pop	{r4, r5, r6, pc}
   149fc:	cmp	r0, #0
   14a00:	bne	149f0 <close@plt+0x3b04>
   14a04:	bl	10e20 <__errno_location@plt>
   14a08:	str	r4, [r0]
   14a0c:	mvn	r4, #0
   14a10:	mov	r0, r4
   14a14:	pop	{r4, r5, r6, pc}
   14a18:	bl	10e20 <__errno_location@plt>
   14a1c:	ldr	r4, [r0]
   14a20:	subs	r4, r4, #9
   14a24:	mvnne	r4, #0
   14a28:	mov	r0, r4
   14a2c:	pop	{r4, r5, r6, pc}
   14a30:	push	{r4, r5, lr}
   14a34:	sub	sp, sp, #12
   14a38:	mov	r4, r0
   14a3c:	bl	10e50 <fileno@plt>
   14a40:	cmp	r0, #0
   14a44:	mov	r0, r4
   14a48:	blt	14ac4 <close@plt+0x3bd8>
   14a4c:	bl	10dcc <__freading@plt>
   14a50:	cmp	r0, #0
   14a54:	bne	14a90 <close@plt+0x3ba4>
   14a58:	mov	r0, r4
   14a5c:	bl	14ad0 <close@plt+0x3be4>
   14a60:	cmp	r0, #0
   14a64:	beq	14ac0 <close@plt+0x3bd4>
   14a68:	bl	10e20 <__errno_location@plt>
   14a6c:	mov	r5, r0
   14a70:	mov	r0, r4
   14a74:	ldr	r4, [r5]
   14a78:	bl	10e68 <fclose@plt>
   14a7c:	cmp	r4, #0
   14a80:	mvnne	r0, #0
   14a84:	strne	r4, [r5]
   14a88:	add	sp, sp, #12
   14a8c:	pop	{r4, r5, pc}
   14a90:	mov	r0, r4
   14a94:	bl	10e50 <fileno@plt>
   14a98:	mov	r3, #1
   14a9c:	str	r3, [sp]
   14aa0:	mov	r2, #0
   14aa4:	mov	r3, #0
   14aa8:	bl	10d60 <lseek64@plt>
   14aac:	mvn	r3, #0
   14ab0:	mvn	r2, #0
   14ab4:	cmp	r1, r3
   14ab8:	cmpeq	r0, r2
   14abc:	bne	14a58 <close@plt+0x3b6c>
   14ac0:	mov	r0, r4
   14ac4:	add	sp, sp, #12
   14ac8:	pop	{r4, r5, lr}
   14acc:	b	10e68 <fclose@plt>
   14ad0:	push	{r4, lr}
   14ad4:	subs	r4, r0, #0
   14ad8:	sub	sp, sp, #8
   14adc:	beq	14af8 <close@plt+0x3c0c>
   14ae0:	bl	10dcc <__freading@plt>
   14ae4:	cmp	r0, #0
   14ae8:	beq	14af8 <close@plt+0x3c0c>
   14aec:	ldr	r3, [r4]
   14af0:	tst	r3, #256	; 0x100
   14af4:	bne	14b08 <close@plt+0x3c1c>
   14af8:	mov	r0, r4
   14afc:	add	sp, sp, #8
   14b00:	pop	{r4, lr}
   14b04:	b	10cac <fflush@plt>
   14b08:	mov	r3, #1
   14b0c:	str	r3, [sp]
   14b10:	mov	r2, #0
   14b14:	mov	r3, #0
   14b18:	mov	r0, r4
   14b1c:	bl	14b30 <close@plt+0x3c44>
   14b20:	mov	r0, r4
   14b24:	add	sp, sp, #8
   14b28:	pop	{r4, lr}
   14b2c:	b	10cac <fflush@plt>
   14b30:	push	{r4, r5, r6, r7, r8, lr}
   14b34:	sub	sp, sp, #8
   14b38:	ldmib	r0, {ip, lr}
   14b3c:	mov	r4, r0
   14b40:	ldr	r5, [sp, #32]
   14b44:	cmp	lr, ip
   14b48:	beq	14b60 <close@plt+0x3c74>
   14b4c:	str	r5, [sp, #32]
   14b50:	mov	r0, r4
   14b54:	add	sp, sp, #8
   14b58:	pop	{r4, r5, r6, r7, r8, lr}
   14b5c:	b	10e74 <fseeko64@plt>
   14b60:	ldr	lr, [r0, #20]
   14b64:	ldr	ip, [r0, #16]
   14b68:	cmp	lr, ip
   14b6c:	bne	14b4c <close@plt+0x3c60>
   14b70:	ldr	r8, [r0, #36]	; 0x24
   14b74:	cmp	r8, #0
   14b78:	bne	14b4c <close@plt+0x3c60>
   14b7c:	mov	r6, r2
   14b80:	mov	r7, r3
   14b84:	bl	10e50 <fileno@plt>
   14b88:	mov	r2, r6
   14b8c:	mov	r3, r7
   14b90:	str	r5, [sp]
   14b94:	bl	10d60 <lseek64@plt>
   14b98:	mvn	r3, #0
   14b9c:	mvn	r2, #0
   14ba0:	cmp	r1, r3
   14ba4:	cmpeq	r0, r2
   14ba8:	beq	14bc8 <close@plt+0x3cdc>
   14bac:	ldr	r3, [r4]
   14bb0:	strd	r0, [r4, #80]	; 0x50
   14bb4:	mov	r0, r8
   14bb8:	bic	r3, r3, #16
   14bbc:	str	r3, [r4]
   14bc0:	add	sp, sp, #8
   14bc4:	pop	{r4, r5, r6, r7, r8, pc}
   14bc8:	mvn	r0, #0
   14bcc:	b	14bc0 <close@plt+0x3cd4>
   14bd0:	push	{r4, lr}
   14bd4:	mov	r0, #14
   14bd8:	bl	10ea4 <nl_langinfo@plt>
   14bdc:	cmp	r0, #0
   14be0:	beq	14bf8 <close@plt+0x3d0c>
   14be4:	ldrb	r2, [r0]
   14be8:	ldr	r3, [pc, #16]	; 14c00 <close@plt+0x3d14>
   14bec:	cmp	r2, #0
   14bf0:	moveq	r0, r3
   14bf4:	pop	{r4, pc}
   14bf8:	ldr	r0, [pc]	; 14c00 <close@plt+0x3d14>
   14bfc:	pop	{r4, pc}
   14c00:	andeq	r5, r1, r0, lsr #26
   14c04:	push	{r4, r5, r6, r7, lr}
   14c08:	subs	r6, r0, #0
   14c0c:	sub	sp, sp, #12
   14c10:	addeq	r6, sp, #4
   14c14:	mov	r0, r6
   14c18:	mov	r5, r2
   14c1c:	mov	r7, r1
   14c20:	bl	10d84 <mbrtowc@plt>
   14c24:	cmp	r5, #0
   14c28:	cmnne	r0, #3
   14c2c:	mov	r4, r0
   14c30:	bls	14c4c <close@plt+0x3d60>
   14c34:	mov	r0, #0
   14c38:	bl	14ca4 <close@plt+0x3db8>
   14c3c:	cmp	r0, #0
   14c40:	moveq	r4, #1
   14c44:	ldrbeq	r3, [r7]
   14c48:	streq	r3, [r6]
   14c4c:	mov	r0, r4
   14c50:	add	sp, sp, #12
   14c54:	pop	{r4, r5, r6, r7, pc}
   14c58:	push	{r4, r5, r6, lr}
   14c5c:	subs	r4, r2, #0
   14c60:	mov	r6, r0
   14c64:	mov	r5, r1
   14c68:	beq	14c94 <close@plt+0x3da8>
   14c6c:	mov	r1, r4
   14c70:	mvn	r0, #0
   14c74:	bl	14d98 <close@plt+0x3eac>
   14c78:	cmp	r0, r5
   14c7c:	bcs	14c94 <close@plt+0x3da8>
   14c80:	bl	10e20 <__errno_location@plt>
   14c84:	mov	r3, #12
   14c88:	str	r3, [r0]
   14c8c:	mov	r0, #0
   14c90:	pop	{r4, r5, r6, pc}
   14c94:	mul	r1, r5, r4
   14c98:	mov	r0, r6
   14c9c:	pop	{r4, r5, r6, lr}
   14ca0:	b	148ac <close@plt+0x39c0>
   14ca4:	push	{lr}		; (str lr, [sp, #-4]!)
   14ca8:	sub	sp, sp, #268	; 0x10c
   14cac:	add	r1, sp, #4
   14cb0:	ldr	r2, [pc, #60]	; 14cf4 <close@plt+0x3e08>
   14cb4:	bl	14d00 <close@plt+0x3e14>
   14cb8:	cmp	r0, #0
   14cbc:	movne	r0, #0
   14cc0:	bne	14cec <close@plt+0x3e00>
   14cc4:	ldr	r1, [pc, #44]	; 14cf8 <close@plt+0x3e0c>
   14cc8:	add	r0, sp, #4
   14ccc:	bl	10ca0 <strcmp@plt>
   14cd0:	cmp	r0, #0
   14cd4:	beq	14cec <close@plt+0x3e00>
   14cd8:	add	r0, sp, #4
   14cdc:	ldr	r1, [pc, #24]	; 14cfc <close@plt+0x3e10>
   14ce0:	bl	10ca0 <strcmp@plt>
   14ce4:	adds	r0, r0, #0
   14ce8:	movne	r0, #1
   14cec:	add	sp, sp, #268	; 0x10c
   14cf0:	pop	{pc}		; (ldr pc, [sp], #4)
   14cf4:	andeq	r0, r0, r1, lsl #2
   14cf8:	andeq	r5, r1, r8, lsr #26
   14cfc:	andeq	r5, r1, ip, lsr #26
   14d00:	push	{r4, r5, r6, lr}
   14d04:	mov	r5, r1
   14d08:	mov	r1, #0
   14d0c:	mov	r4, r2
   14d10:	bl	10e8c <setlocale@plt>
   14d14:	subs	r6, r0, #0
   14d18:	beq	14d74 <close@plt+0x3e88>
   14d1c:	bl	10e14 <strlen@plt>
   14d20:	cmp	r4, r0
   14d24:	bhi	14d5c <close@plt+0x3e70>
   14d28:	cmp	r4, #0
   14d2c:	bne	14d38 <close@plt+0x3e4c>
   14d30:	mov	r0, #34	; 0x22
   14d34:	pop	{r4, r5, r6, pc}
   14d38:	sub	r4, r4, #1
   14d3c:	mov	r1, r6
   14d40:	mov	r2, r4
   14d44:	mov	r0, r5
   14d48:	bl	10cd0 <memcpy@plt>
   14d4c:	mov	r3, #0
   14d50:	strb	r3, [r5, r4]
   14d54:	mov	r0, #34	; 0x22
   14d58:	pop	{r4, r5, r6, pc}
   14d5c:	add	r2, r0, #1
   14d60:	mov	r1, r6
   14d64:	mov	r0, r5
   14d68:	bl	10cd0 <memcpy@plt>
   14d6c:	mov	r0, #0
   14d70:	pop	{r4, r5, r6, pc}
   14d74:	cmp	r4, #0
   14d78:	beq	14d88 <close@plt+0x3e9c>
   14d7c:	strb	r6, [r5]
   14d80:	mov	r0, #22
   14d84:	pop	{r4, r5, r6, pc}
   14d88:	mov	r0, #22
   14d8c:	pop	{r4, r5, r6, pc}
   14d90:	mov	r1, #0
   14d94:	b	10e8c <setlocale@plt>
   14d98:	subs	r2, r1, #1
   14d9c:	bxeq	lr
   14da0:	bcc	14f78 <close@plt+0x408c>
   14da4:	cmp	r0, r1
   14da8:	bls	14f5c <close@plt+0x4070>
   14dac:	tst	r1, r2
   14db0:	beq	14f68 <close@plt+0x407c>
   14db4:	clz	r3, r0
   14db8:	clz	r2, r1
   14dbc:	sub	r3, r2, r3
   14dc0:	rsbs	r3, r3, #31
   14dc4:	addne	r3, r3, r3, lsl #1
   14dc8:	mov	r2, #0
   14dcc:	addne	pc, pc, r3, lsl #2
   14dd0:	nop			; (mov r0, r0)
   14dd4:	cmp	r0, r1, lsl #31
   14dd8:	adc	r2, r2, r2
   14ddc:	subcs	r0, r0, r1, lsl #31
   14de0:	cmp	r0, r1, lsl #30
   14de4:	adc	r2, r2, r2
   14de8:	subcs	r0, r0, r1, lsl #30
   14dec:	cmp	r0, r1, lsl #29
   14df0:	adc	r2, r2, r2
   14df4:	subcs	r0, r0, r1, lsl #29
   14df8:	cmp	r0, r1, lsl #28
   14dfc:	adc	r2, r2, r2
   14e00:	subcs	r0, r0, r1, lsl #28
   14e04:	cmp	r0, r1, lsl #27
   14e08:	adc	r2, r2, r2
   14e0c:	subcs	r0, r0, r1, lsl #27
   14e10:	cmp	r0, r1, lsl #26
   14e14:	adc	r2, r2, r2
   14e18:	subcs	r0, r0, r1, lsl #26
   14e1c:	cmp	r0, r1, lsl #25
   14e20:	adc	r2, r2, r2
   14e24:	subcs	r0, r0, r1, lsl #25
   14e28:	cmp	r0, r1, lsl #24
   14e2c:	adc	r2, r2, r2
   14e30:	subcs	r0, r0, r1, lsl #24
   14e34:	cmp	r0, r1, lsl #23
   14e38:	adc	r2, r2, r2
   14e3c:	subcs	r0, r0, r1, lsl #23
   14e40:	cmp	r0, r1, lsl #22
   14e44:	adc	r2, r2, r2
   14e48:	subcs	r0, r0, r1, lsl #22
   14e4c:	cmp	r0, r1, lsl #21
   14e50:	adc	r2, r2, r2
   14e54:	subcs	r0, r0, r1, lsl #21
   14e58:	cmp	r0, r1, lsl #20
   14e5c:	adc	r2, r2, r2
   14e60:	subcs	r0, r0, r1, lsl #20
   14e64:	cmp	r0, r1, lsl #19
   14e68:	adc	r2, r2, r2
   14e6c:	subcs	r0, r0, r1, lsl #19
   14e70:	cmp	r0, r1, lsl #18
   14e74:	adc	r2, r2, r2
   14e78:	subcs	r0, r0, r1, lsl #18
   14e7c:	cmp	r0, r1, lsl #17
   14e80:	adc	r2, r2, r2
   14e84:	subcs	r0, r0, r1, lsl #17
   14e88:	cmp	r0, r1, lsl #16
   14e8c:	adc	r2, r2, r2
   14e90:	subcs	r0, r0, r1, lsl #16
   14e94:	cmp	r0, r1, lsl #15
   14e98:	adc	r2, r2, r2
   14e9c:	subcs	r0, r0, r1, lsl #15
   14ea0:	cmp	r0, r1, lsl #14
   14ea4:	adc	r2, r2, r2
   14ea8:	subcs	r0, r0, r1, lsl #14
   14eac:	cmp	r0, r1, lsl #13
   14eb0:	adc	r2, r2, r2
   14eb4:	subcs	r0, r0, r1, lsl #13
   14eb8:	cmp	r0, r1, lsl #12
   14ebc:	adc	r2, r2, r2
   14ec0:	subcs	r0, r0, r1, lsl #12
   14ec4:	cmp	r0, r1, lsl #11
   14ec8:	adc	r2, r2, r2
   14ecc:	subcs	r0, r0, r1, lsl #11
   14ed0:	cmp	r0, r1, lsl #10
   14ed4:	adc	r2, r2, r2
   14ed8:	subcs	r0, r0, r1, lsl #10
   14edc:	cmp	r0, r1, lsl #9
   14ee0:	adc	r2, r2, r2
   14ee4:	subcs	r0, r0, r1, lsl #9
   14ee8:	cmp	r0, r1, lsl #8
   14eec:	adc	r2, r2, r2
   14ef0:	subcs	r0, r0, r1, lsl #8
   14ef4:	cmp	r0, r1, lsl #7
   14ef8:	adc	r2, r2, r2
   14efc:	subcs	r0, r0, r1, lsl #7
   14f00:	cmp	r0, r1, lsl #6
   14f04:	adc	r2, r2, r2
   14f08:	subcs	r0, r0, r1, lsl #6
   14f0c:	cmp	r0, r1, lsl #5
   14f10:	adc	r2, r2, r2
   14f14:	subcs	r0, r0, r1, lsl #5
   14f18:	cmp	r0, r1, lsl #4
   14f1c:	adc	r2, r2, r2
   14f20:	subcs	r0, r0, r1, lsl #4
   14f24:	cmp	r0, r1, lsl #3
   14f28:	adc	r2, r2, r2
   14f2c:	subcs	r0, r0, r1, lsl #3
   14f30:	cmp	r0, r1, lsl #2
   14f34:	adc	r2, r2, r2
   14f38:	subcs	r0, r0, r1, lsl #2
   14f3c:	cmp	r0, r1, lsl #1
   14f40:	adc	r2, r2, r2
   14f44:	subcs	r0, r0, r1, lsl #1
   14f48:	cmp	r0, r1
   14f4c:	adc	r2, r2, r2
   14f50:	subcs	r0, r0, r1
   14f54:	mov	r0, r2
   14f58:	bx	lr
   14f5c:	moveq	r0, #1
   14f60:	movne	r0, #0
   14f64:	bx	lr
   14f68:	clz	r2, r1
   14f6c:	rsb	r2, r2, #31
   14f70:	lsr	r0, r0, r2
   14f74:	bx	lr
   14f78:	cmp	r0, #0
   14f7c:	mvnne	r0, #0
   14f80:	b	151e4 <close@plt+0x42f8>
   14f84:	cmp	r1, #0
   14f88:	beq	14f78 <close@plt+0x408c>
   14f8c:	push	{r0, r1, lr}
   14f90:	bl	14d98 <close@plt+0x3eac>
   14f94:	pop	{r1, r2, lr}
   14f98:	mul	r3, r2, r0
   14f9c:	sub	r1, r1, r3
   14fa0:	bx	lr
   14fa4:	cmp	r1, #0
   14fa8:	beq	151b4 <close@plt+0x42c8>
   14fac:	eor	ip, r0, r1
   14fb0:	rsbmi	r1, r1, #0
   14fb4:	subs	r2, r1, #1
   14fb8:	beq	15180 <close@plt+0x4294>
   14fbc:	movs	r3, r0
   14fc0:	rsbmi	r3, r0, #0
   14fc4:	cmp	r3, r1
   14fc8:	bls	1518c <close@plt+0x42a0>
   14fcc:	tst	r1, r2
   14fd0:	beq	1519c <close@plt+0x42b0>
   14fd4:	clz	r2, r3
   14fd8:	clz	r0, r1
   14fdc:	sub	r2, r0, r2
   14fe0:	rsbs	r2, r2, #31
   14fe4:	addne	r2, r2, r2, lsl #1
   14fe8:	mov	r0, #0
   14fec:	addne	pc, pc, r2, lsl #2
   14ff0:	nop			; (mov r0, r0)
   14ff4:	cmp	r3, r1, lsl #31
   14ff8:	adc	r0, r0, r0
   14ffc:	subcs	r3, r3, r1, lsl #31
   15000:	cmp	r3, r1, lsl #30
   15004:	adc	r0, r0, r0
   15008:	subcs	r3, r3, r1, lsl #30
   1500c:	cmp	r3, r1, lsl #29
   15010:	adc	r0, r0, r0
   15014:	subcs	r3, r3, r1, lsl #29
   15018:	cmp	r3, r1, lsl #28
   1501c:	adc	r0, r0, r0
   15020:	subcs	r3, r3, r1, lsl #28
   15024:	cmp	r3, r1, lsl #27
   15028:	adc	r0, r0, r0
   1502c:	subcs	r3, r3, r1, lsl #27
   15030:	cmp	r3, r1, lsl #26
   15034:	adc	r0, r0, r0
   15038:	subcs	r3, r3, r1, lsl #26
   1503c:	cmp	r3, r1, lsl #25
   15040:	adc	r0, r0, r0
   15044:	subcs	r3, r3, r1, lsl #25
   15048:	cmp	r3, r1, lsl #24
   1504c:	adc	r0, r0, r0
   15050:	subcs	r3, r3, r1, lsl #24
   15054:	cmp	r3, r1, lsl #23
   15058:	adc	r0, r0, r0
   1505c:	subcs	r3, r3, r1, lsl #23
   15060:	cmp	r3, r1, lsl #22
   15064:	adc	r0, r0, r0
   15068:	subcs	r3, r3, r1, lsl #22
   1506c:	cmp	r3, r1, lsl #21
   15070:	adc	r0, r0, r0
   15074:	subcs	r3, r3, r1, lsl #21
   15078:	cmp	r3, r1, lsl #20
   1507c:	adc	r0, r0, r0
   15080:	subcs	r3, r3, r1, lsl #20
   15084:	cmp	r3, r1, lsl #19
   15088:	adc	r0, r0, r0
   1508c:	subcs	r3, r3, r1, lsl #19
   15090:	cmp	r3, r1, lsl #18
   15094:	adc	r0, r0, r0
   15098:	subcs	r3, r3, r1, lsl #18
   1509c:	cmp	r3, r1, lsl #17
   150a0:	adc	r0, r0, r0
   150a4:	subcs	r3, r3, r1, lsl #17
   150a8:	cmp	r3, r1, lsl #16
   150ac:	adc	r0, r0, r0
   150b0:	subcs	r3, r3, r1, lsl #16
   150b4:	cmp	r3, r1, lsl #15
   150b8:	adc	r0, r0, r0
   150bc:	subcs	r3, r3, r1, lsl #15
   150c0:	cmp	r3, r1, lsl #14
   150c4:	adc	r0, r0, r0
   150c8:	subcs	r3, r3, r1, lsl #14
   150cc:	cmp	r3, r1, lsl #13
   150d0:	adc	r0, r0, r0
   150d4:	subcs	r3, r3, r1, lsl #13
   150d8:	cmp	r3, r1, lsl #12
   150dc:	adc	r0, r0, r0
   150e0:	subcs	r3, r3, r1, lsl #12
   150e4:	cmp	r3, r1, lsl #11
   150e8:	adc	r0, r0, r0
   150ec:	subcs	r3, r3, r1, lsl #11
   150f0:	cmp	r3, r1, lsl #10
   150f4:	adc	r0, r0, r0
   150f8:	subcs	r3, r3, r1, lsl #10
   150fc:	cmp	r3, r1, lsl #9
   15100:	adc	r0, r0, r0
   15104:	subcs	r3, r3, r1, lsl #9
   15108:	cmp	r3, r1, lsl #8
   1510c:	adc	r0, r0, r0
   15110:	subcs	r3, r3, r1, lsl #8
   15114:	cmp	r3, r1, lsl #7
   15118:	adc	r0, r0, r0
   1511c:	subcs	r3, r3, r1, lsl #7
   15120:	cmp	r3, r1, lsl #6
   15124:	adc	r0, r0, r0
   15128:	subcs	r3, r3, r1, lsl #6
   1512c:	cmp	r3, r1, lsl #5
   15130:	adc	r0, r0, r0
   15134:	subcs	r3, r3, r1, lsl #5
   15138:	cmp	r3, r1, lsl #4
   1513c:	adc	r0, r0, r0
   15140:	subcs	r3, r3, r1, lsl #4
   15144:	cmp	r3, r1, lsl #3
   15148:	adc	r0, r0, r0
   1514c:	subcs	r3, r3, r1, lsl #3
   15150:	cmp	r3, r1, lsl #2
   15154:	adc	r0, r0, r0
   15158:	subcs	r3, r3, r1, lsl #2
   1515c:	cmp	r3, r1, lsl #1
   15160:	adc	r0, r0, r0
   15164:	subcs	r3, r3, r1, lsl #1
   15168:	cmp	r3, r1
   1516c:	adc	r0, r0, r0
   15170:	subcs	r3, r3, r1
   15174:	cmp	ip, #0
   15178:	rsbmi	r0, r0, #0
   1517c:	bx	lr
   15180:	teq	ip, r0
   15184:	rsbmi	r0, r0, #0
   15188:	bx	lr
   1518c:	movcc	r0, #0
   15190:	asreq	r0, ip, #31
   15194:	orreq	r0, r0, #1
   15198:	bx	lr
   1519c:	clz	r2, r1
   151a0:	rsb	r2, r2, #31
   151a4:	cmp	ip, #0
   151a8:	lsr	r0, r3, r2
   151ac:	rsbmi	r0, r0, #0
   151b0:	bx	lr
   151b4:	cmp	r0, #0
   151b8:	mvngt	r0, #-2147483648	; 0x80000000
   151bc:	movlt	r0, #-2147483648	; 0x80000000
   151c0:	b	151e4 <close@plt+0x42f8>
   151c4:	cmp	r1, #0
   151c8:	beq	151b4 <close@plt+0x42c8>
   151cc:	push	{r0, r1, lr}
   151d0:	bl	14fac <close@plt+0x40c0>
   151d4:	pop	{r1, r2, lr}
   151d8:	mul	r3, r2, r0
   151dc:	sub	r1, r1, r3
   151e0:	bx	lr
   151e4:	push	{r1, lr}
   151e8:	mov	r0, #8
   151ec:	bl	10c94 <raise@plt>
   151f0:	pop	{r1, pc}
   151f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   151f8:	mov	r7, r0
   151fc:	ldr	r6, [pc, #72]	; 1524c <close@plt+0x4360>
   15200:	ldr	r5, [pc, #72]	; 15250 <close@plt+0x4364>
   15204:	add	r6, pc, r6
   15208:	add	r5, pc, r5
   1520c:	sub	r6, r6, r5
   15210:	mov	r8, r1
   15214:	mov	r9, r2
   15218:	bl	10c5c <calloc@plt-0x20>
   1521c:	asrs	r6, r6, #2
   15220:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15224:	mov	r4, #0
   15228:	add	r4, r4, #1
   1522c:	ldr	r3, [r5], #4
   15230:	mov	r2, r9
   15234:	mov	r1, r8
   15238:	mov	r0, r7
   1523c:	blx	r3
   15240:	cmp	r6, r4
   15244:	bne	15228 <close@plt+0x433c>
   15248:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1524c:	andeq	r0, r1, r4, lsl #26
   15250:	strdeq	r0, [r1], -ip
   15254:	bx	lr
   15258:	ldr	r3, [pc, #12]	; 1526c <close@plt+0x4380>
   1525c:	mov	r1, #0
   15260:	add	r3, pc, r3
   15264:	ldr	r2, [r3]
   15268:	b	10e2c <__cxa_atexit@plt>
   1526c:	andeq	r0, r1, r0, lsl #29

Disassembly of section .fini:

00015270 <.fini>:
   15270:	push	{r3, lr}
   15274:	pop	{r3, pc}
