
../repos/coreutils/src/mktemp:     file format elf32-littlearm


Disassembly of section .init:

00010ccc <.init>:
   10ccc:	push	{r3, lr}
   10cd0:	bl	11608 <strspn@plt+0x694>
   10cd4:	pop	{r3, pc}

Disassembly of section .plt:

00010cd8 <calloc@plt-0x14>:
   10cd8:	push	{lr}		; (str lr, [sp, #-4]!)
   10cdc:	ldr	lr, [pc, #4]	; 10ce8 <calloc@plt-0x4>
   10ce0:	add	lr, pc, lr
   10ce4:	ldr	pc, [lr, #8]!
   10ce8:	andeq	r8, r1, r8, lsl r3

00010cec <calloc@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #24, 20	; 0x18000
   10cf4:	ldr	pc, [ip, #792]!	; 0x318

00010cf8 <fputs_unlocked@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #24, 20	; 0x18000
   10d00:	ldr	pc, [ip, #784]!	; 0x310

00010d04 <raise@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #24, 20	; 0x18000
   10d0c:	ldr	pc, [ip, #776]!	; 0x308

00010d10 <strcmp@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #24, 20	; 0x18000
   10d18:	ldr	pc, [ip, #768]!	; 0x300

00010d1c <fflush@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #24, 20	; 0x18000
   10d24:	ldr	pc, [ip, #760]!	; 0x2f8

00010d28 <free@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #24, 20	; 0x18000
   10d30:	ldr	pc, [ip, #752]!	; 0x2f0

00010d34 <clock_gettime@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #24, 20	; 0x18000
   10d3c:	ldr	pc, [ip, #744]!	; 0x2e8

00010d40 <_exit@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #24, 20	; 0x18000
   10d48:	ldr	pc, [ip, #736]!	; 0x2e0

00010d4c <memcpy@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #24, 20	; 0x18000
   10d54:	ldr	pc, [ip, #728]!	; 0x2d8

00010d58 <mbsinit@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #24, 20	; 0x18000
   10d60:	ldr	pc, [ip, #720]!	; 0x2d0

00010d64 <memcmp@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #24, 20	; 0x18000
   10d6c:	ldr	pc, [ip, #712]!	; 0x2c8

00010d70 <fputc_unlocked@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #24, 20	; 0x18000
   10d78:	ldr	pc, [ip, #704]!	; 0x2c0

00010d7c <dcgettext@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #24, 20	; 0x18000
   10d84:	ldr	pc, [ip, #696]!	; 0x2b8

00010d88 <realloc@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #24, 20	; 0x18000
   10d90:	ldr	pc, [ip, #688]!	; 0x2b0

00010d94 <textdomain@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #24, 20	; 0x18000
   10d9c:	ldr	pc, [ip, #680]!	; 0x2a8

00010da0 <iswprint@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #24, 20	; 0x18000
   10da8:	ldr	pc, [ip, #672]!	; 0x2a0

00010dac <fwrite@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #24, 20	; 0x18000
   10db4:	ldr	pc, [ip, #664]!	; 0x298

00010db8 <lseek64@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #24, 20	; 0x18000
   10dc0:	ldr	pc, [ip, #656]!	; 0x290

00010dc4 <__ctype_get_mb_cur_max@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #24, 20	; 0x18000
   10dcc:	ldr	pc, [ip, #648]!	; 0x288

00010dd0 <__fpending@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #24, 20	; 0x18000
   10dd8:	ldr	pc, [ip, #640]!	; 0x280

00010ddc <mbrtowc@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #24, 20	; 0x18000
   10de4:	ldr	pc, [ip, #632]!	; 0x278

00010de8 <error@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #24, 20	; 0x18000
   10df0:	ldr	pc, [ip, #624]!	; 0x270

00010df4 <open64@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #24, 20	; 0x18000
   10dfc:	ldr	pc, [ip, #616]!	; 0x268

00010e00 <getenv@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #24, 20	; 0x18000
   10e08:	ldr	pc, [ip, #608]!	; 0x260

00010e0c <puts@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #24, 20	; 0x18000
   10e14:	ldr	pc, [ip, #600]!	; 0x258

00010e18 <malloc@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #24, 20	; 0x18000
   10e20:	ldr	pc, [ip, #592]!	; 0x250

00010e24 <__libc_start_main@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #24, 20	; 0x18000
   10e2c:	ldr	pc, [ip, #584]!	; 0x248

00010e30 <__freading@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #24, 20	; 0x18000
   10e38:	ldr	pc, [ip, #576]!	; 0x240

00010e3c <__gmon_start__@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #24, 20	; 0x18000
   10e44:	ldr	pc, [ip, #568]!	; 0x238

00010e48 <mempcpy@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #24, 20	; 0x18000
   10e50:	ldr	pc, [ip, #560]!	; 0x230

00010e54 <getopt_long@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #24, 20	; 0x18000
   10e5c:	ldr	pc, [ip, #552]!	; 0x228

00010e60 <__ctype_b_loc@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #24, 20	; 0x18000
   10e68:	ldr	pc, [ip, #544]!	; 0x220

00010e6c <exit@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #24, 20	; 0x18000
   10e74:	ldr	pc, [ip, #536]!	; 0x218

00010e78 <strlen@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #24, 20	; 0x18000
   10e80:	ldr	pc, [ip, #528]!	; 0x210

00010e84 <strchr@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #24, 20	; 0x18000
   10e8c:	ldr	pc, [ip, #520]!	; 0x208

00010e90 <__errno_location@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #24, 20	; 0x18000
   10e98:	ldr	pc, [ip, #512]!	; 0x200

00010e9c <__cxa_atexit@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #24, 20	; 0x18000
   10ea4:	ldr	pc, [ip, #504]!	; 0x1f8

00010ea8 <mkdir@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #24, 20	; 0x18000
   10eb0:	ldr	pc, [ip, #496]!	; 0x1f0

00010eb4 <memset@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #24, 20	; 0x18000
   10ebc:	ldr	pc, [ip, #488]!	; 0x1e8

00010ec0 <__printf_chk@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #24, 20	; 0x18000
   10ec8:	ldr	pc, [ip, #480]!	; 0x1e0

00010ecc <fileno@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #24, 20	; 0x18000
   10ed4:	ldr	pc, [ip, #472]!	; 0x1d8

00010ed8 <__fprintf_chk@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #24, 20	; 0x18000
   10ee0:	ldr	pc, [ip, #464]!	; 0x1d0

00010ee4 <fclose@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #24, 20	; 0x18000
   10eec:	ldr	pc, [ip, #456]!	; 0x1c8

00010ef0 <fseeko64@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #24, 20	; 0x18000
   10ef8:	ldr	pc, [ip, #448]!	; 0x1c0

00010efc <setlocale@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #24, 20	; 0x18000
   10f04:	ldr	pc, [ip, #440]!	; 0x1b8

00010f08 <strrchr@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #24, 20	; 0x18000
   10f10:	ldr	pc, [ip, #432]!	; 0x1b0

00010f14 <nl_langinfo@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #24, 20	; 0x18000
   10f1c:	ldr	pc, [ip, #424]!	; 0x1a8

00010f20 <remove@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #24, 20	; 0x18000
   10f28:	ldr	pc, [ip, #416]!	; 0x1a0

00010f2c <bindtextdomain@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #24, 20	; 0x18000
   10f34:	ldr	pc, [ip, #408]!	; 0x198

00010f38 <getrandom@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #24, 20	; 0x18000
   10f40:	ldr	pc, [ip, #400]!	; 0x190

00010f44 <strncmp@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #24, 20	; 0x18000
   10f4c:	ldr	pc, [ip, #392]!	; 0x188

00010f50 <abort@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #24, 20	; 0x18000
   10f58:	ldr	pc, [ip, #384]!	; 0x180

00010f5c <close@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #24, 20	; 0x18000
   10f64:	ldr	pc, [ip, #376]!	; 0x178

00010f68 <__lxstat64@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #24, 20	; 0x18000
   10f70:	ldr	pc, [ip, #368]!	; 0x170

00010f74 <strspn@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #24, 20	; 0x18000
   10f7c:	ldr	pc, [ip, #360]!	; 0x168

Disassembly of section .text:

00010f80 <.text>:
   10f80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f84:	mov	r6, r0
   10f88:	sub	sp, sp, #44	; 0x2c
   10f8c:	ldr	r0, [r1]
   10f90:	mov	r5, r1
   10f94:	bl	11f98 <strspn@plt+0x1024>
   10f98:	ldr	r1, [pc, #1472]	; 11560 <strspn@plt+0x5ec>
   10f9c:	mov	r0, #6
   10fa0:	mov	r4, #0
   10fa4:	bl	10efc <setlocale@plt>
   10fa8:	ldr	r8, [pc, #1460]	; 11564 <strspn@plt+0x5f0>
   10fac:	ldr	r1, [pc, #1460]	; 11568 <strspn@plt+0x5f4>
   10fb0:	ldr	r0, [pc, #1460]	; 1156c <strspn@plt+0x5f8>
   10fb4:	ldr	r7, [pc, #1460]	; 11570 <strspn@plt+0x5fc>
   10fb8:	bl	10f2c <bindtextdomain@plt>
   10fbc:	mov	fp, r4
   10fc0:	ldr	r0, [pc, #1444]	; 1156c <strspn@plt+0x5f8>
   10fc4:	mov	r9, r4
   10fc8:	mov	sl, #1
   10fcc:	bl	10d94 <textdomain@plt>
   10fd0:	ldr	r0, [pc, #1436]	; 11574 <strspn@plt+0x600>
   10fd4:	bl	17f0c <strspn@plt+0x6f98>
   10fd8:	str	r4, [sp, #32]
   10fdc:	str	r4, [sp, #36]	; 0x24
   10fe0:	str	r4, [sp, #20]
   10fe4:	str	r4, [sp, #28]
   10fe8:	str	r4, [sp, #24]
   10fec:	str	r9, [sp]
   10ff0:	mov	r3, r8
   10ff4:	mov	r2, r7
   10ff8:	mov	r1, r5
   10ffc:	mov	r0, r6
   11000:	bl	10e54 <getopt_long@plt>
   11004:	cmn	r0, #1
   11008:	beq	110c4 <strspn@plt+0x150>
   1100c:	cmp	r0, #112	; 0x70
   11010:	beq	11114 <strspn@plt+0x1a0>
   11014:	ble	11044 <strspn@plt+0xd0>
   11018:	cmp	r0, #116	; 0x74
   1101c:	beq	11100 <strspn@plt+0x18c>
   11020:	ble	110b4 <strspn@plt+0x140>
   11024:	cmp	r0, #117	; 0x75
   11028:	beq	11068 <strspn@plt+0xf4>
   1102c:	cmp	r0, #256	; 0x100
   11030:	bne	110f8 <strspn@plt+0x184>
   11034:	ldr	r3, [pc, #1340]	; 11578 <strspn@plt+0x604>
   11038:	ldr	r3, [r3]
   1103c:	str	r3, [sp, #20]
   11040:	b	10fec <strspn@plt+0x78>
   11044:	cmn	r0, #2
   11048:	beq	1110c <strspn@plt+0x198>
   1104c:	ble	11070 <strspn@plt+0xfc>
   11050:	cmp	r0, #86	; 0x56
   11054:	beq	11078 <strspn@plt+0x104>
   11058:	cmp	r0, #100	; 0x64
   1105c:	bne	110f8 <strspn@plt+0x184>
   11060:	str	sl, [sp, #32]
   11064:	b	10fec <strspn@plt+0x78>
   11068:	mov	r4, sl
   1106c:	b	10fec <strspn@plt+0x78>
   11070:	cmn	r0, #3
   11074:	bne	110f8 <strspn@plt+0x184>
   11078:	ldr	r3, [pc, #1276]	; 1157c <strspn@plt+0x608>
   1107c:	ldr	r0, [pc, #1276]	; 11580 <strspn@plt+0x60c>
   11080:	ldr	r1, [pc, #1276]	; 11584 <strspn@plt+0x610>
   11084:	ldr	r2, [pc, #1276]	; 11588 <strspn@plt+0x614>
   11088:	mov	r4, #0
   1108c:	ldr	r0, [r0]
   11090:	ldr	r3, [r3]
   11094:	str	r1, [sp, #4]
   11098:	str	r2, [sp]
   1109c:	str	r4, [sp, #8]
   110a0:	ldr	r2, [pc, #1252]	; 1158c <strspn@plt+0x618>
   110a4:	ldr	r1, [pc, #1252]	; 11590 <strspn@plt+0x61c>
   110a8:	bl	16de0 <strspn@plt+0x5e6c>
   110ac:	mov	r0, r4
   110b0:	bl	10e6c <exit@plt>
   110b4:	cmp	r0, #113	; 0x71
   110b8:	bne	110f8 <strspn@plt+0x184>
   110bc:	str	sl, [sp, #28]
   110c0:	b	10fec <strspn@plt+0x78>
   110c4:	ldr	r3, [pc, #1224]	; 11594 <strspn@plt+0x620>
   110c8:	ldr	r3, [r3]
   110cc:	sub	r6, r6, r3
   110d0:	cmp	r6, #1
   110d4:	bls	11128 <strspn@plt+0x1b4>
   110d8:	mov	r2, #5
   110dc:	ldr	r1, [pc, #1204]	; 11598 <strspn@plt+0x624>
   110e0:	mov	r0, #0
   110e4:	bl	10d7c <dcgettext@plt>
   110e8:	mov	r1, #0
   110ec:	mov	r2, r0
   110f0:	mov	r0, r1
   110f4:	bl	10de8 <error@plt>
   110f8:	mov	r0, #1
   110fc:	bl	11730 <strspn@plt+0x7bc>
   11100:	str	sl, [sp, #36]	; 0x24
   11104:	mov	fp, sl
   11108:	b	10fec <strspn@plt+0x78>
   1110c:	mov	r0, #0
   11110:	bl	11730 <strspn@plt+0x7bc>
   11114:	ldr	r3, [pc, #1116]	; 11578 <strspn@plt+0x604>
   11118:	mov	fp, sl
   1111c:	ldr	r3, [r3]
   11120:	str	r3, [sp, #24]
   11124:	b	10fec <strspn@plt+0x78>
   11128:	cmp	r6, #0
   1112c:	beq	11180 <strspn@plt+0x20c>
   11130:	ldr	r2, [sp, #20]
   11134:	ldr	r5, [r5, r3, lsl #2]
   11138:	cmp	r2, #0
   1113c:	beq	11310 <strspn@plt+0x39c>
   11140:	mov	r0, r5
   11144:	bl	10e78 <strlen@plt>
   11148:	subs	r8, r0, #0
   1114c:	bne	11204 <strspn@plt+0x290>
   11150:	ldr	r1, [pc, #1092]	; 1159c <strspn@plt+0x628>
   11154:	mov	r2, #5
   11158:	mov	r0, #0
   1115c:	bl	10d7c <dcgettext@plt>
   11160:	mov	r4, r0
   11164:	mov	r0, r5
   11168:	bl	15e64 <strspn@plt+0x4ef0>
   1116c:	mov	r2, r4
   11170:	mov	r1, #0
   11174:	mov	r3, r0
   11178:	mov	r0, #1
   1117c:	bl	10de8 <error@plt>
   11180:	ldr	r3, [sp, #20]
   11184:	cmp	r3, #0
   11188:	moveq	fp, #1
   1118c:	ldreq	r5, [pc, #1036]	; 115a0 <strspn@plt+0x62c>
   11190:	beq	11310 <strspn@plt+0x39c>
   11194:	ldr	r5, [pc, #1028]	; 115a0 <strspn@plt+0x62c>
   11198:	mov	r8, #14
   1119c:	mov	fp, #1
   111a0:	ldr	r9, [sp, #20]
   111a4:	mov	r0, r9
   111a8:	bl	10e78 <strlen@plt>
   111ac:	mov	r7, r0
   111b0:	add	r0, r0, r8
   111b4:	add	r0, r0, #1
   111b8:	bl	16ff0 <strspn@plt+0x607c>
   111bc:	mov	r1, r5
   111c0:	mov	r2, r8
   111c4:	add	r5, r0, r8
   111c8:	mov	r6, r0
   111cc:	bl	10d4c <memcpy@plt>
   111d0:	mov	r1, r9
   111d4:	mov	r0, r5
   111d8:	add	r2, r7, #1
   111dc:	bl	10d4c <memcpy@plt>
   111e0:	cmp	r7, #0
   111e4:	beq	11218 <strspn@plt+0x2a4>
   111e8:	mov	r0, r5
   111ec:	bl	11a90 <strspn@plt+0xb1c>
   111f0:	cmp	r5, r0
   111f4:	beq	11218 <strspn@plt+0x2a4>
   111f8:	mov	r2, #5
   111fc:	ldr	r1, [pc, #928]	; 115a4 <strspn@plt+0x630>
   11200:	b	11158 <strspn@plt+0x1e4>
   11204:	add	r3, r5, r8
   11208:	ldrb	r3, [r3, #-1]
   1120c:	cmp	r3, #88	; 0x58
   11210:	bne	11150 <strspn@plt+0x1dc>
   11214:	b	111a0 <strspn@plt+0x22c>
   11218:	sub	r1, r5, r6
   1121c:	mov	r3, r5
   11220:	mov	r5, #0
   11224:	b	11238 <strspn@plt+0x2c4>
   11228:	ldrb	r2, [r3, #-1]!
   1122c:	cmp	r2, #88	; 0x58
   11230:	bne	11240 <strspn@plt+0x2cc>
   11234:	add	r5, r5, #1
   11238:	cmp	r1, r5
   1123c:	bne	11228 <strspn@plt+0x2b4>
   11240:	cmp	r5, #2
   11244:	bls	11354 <strspn@plt+0x3e0>
   11248:	cmp	fp, #0
   1124c:	beq	112c4 <strspn@plt+0x350>
   11250:	ldr	r3, [sp, #36]	; 0x24
   11254:	cmp	r3, #0
   11258:	bne	11430 <strspn@plt+0x4bc>
   1125c:	ldr	r3, [sp, #24]
   11260:	cmp	r3, #0
   11264:	beq	11274 <strspn@plt+0x300>
   11268:	ldrb	r3, [r3]
   1126c:	cmp	r3, #0
   11270:	bne	11298 <strspn@plt+0x324>
   11274:	ldr	r0, [pc, #812]	; 115a8 <strspn@plt+0x634>
   11278:	bl	10e00 <getenv@plt>
   1127c:	cmp	r0, #0
   11280:	beq	11538 <strspn@plt+0x5c4>
   11284:	ldrb	r2, [r0]
   11288:	ldr	r3, [pc, #796]	; 115ac <strspn@plt+0x638>
   1128c:	cmp	r2, #0
   11290:	moveq	r0, r3
   11294:	str	r0, [sp, #24]
   11298:	ldrb	r3, [r6]
   1129c:	cmp	r3, #47	; 0x2f
   112a0:	beq	1150c <strspn@plt+0x598>
   112a4:	mov	r1, r6
   112a8:	mov	r2, #0
   112ac:	ldr	r0, [sp, #24]
   112b0:	bl	11dbc <strspn@plt+0xe48>
   112b4:	mov	r8, r0
   112b8:	mov	r0, r6
   112bc:	bl	11ea0 <strspn@plt+0xf2c>
   112c0:	mov	r6, r8
   112c4:	mov	r0, r6
   112c8:	bl	175d8 <strspn@plt+0x6664>
   112cc:	ldr	r3, [sp, #32]
   112d0:	cmp	r3, #0
   112d4:	mov	r8, r0
   112d8:	beq	11370 <strspn@plt+0x3fc>
   112dc:	cmp	r4, #0
   112e0:	beq	113a4 <strspn@plt+0x430>
   112e4:	str	r5, [sp]
   112e8:	mov	r1, r7
   112ec:	mov	r3, #2
   112f0:	mov	r2, #0
   112f4:	bl	16520 <strspn@plt+0x55ac>
   112f8:	subs	r4, r0, #0
   112fc:	bne	11340 <strspn@plt+0x3cc>
   11300:	mov	r0, r8
   11304:	bl	10e0c <puts@plt>
   11308:	mov	r0, r4
   1130c:	bl	10e6c <exit@plt>
   11310:	mov	r0, r5
   11314:	bl	175d8 <strspn@plt+0x6664>
   11318:	mov	r1, #88	; 0x58
   1131c:	mov	r6, r0
   11320:	bl	10f08 <strrchr@plt>
   11324:	subs	r1, r0, #0
   11328:	addne	r5, r1, #1
   1132c:	beq	11528 <strspn@plt+0x5b4>
   11330:	mov	r0, r5
   11334:	bl	10e78 <strlen@plt>
   11338:	mov	r7, r0
   1133c:	b	111e0 <strspn@plt+0x26c>
   11340:	ldr	r3, [sp, #28]
   11344:	cmp	r3, #0
   11348:	beq	11550 <strspn@plt+0x5dc>
   1134c:	mov	r4, #1
   11350:	b	11308 <strspn@plt+0x394>
   11354:	mov	r2, #5
   11358:	ldr	r1, [pc, #592]	; 115b0 <strspn@plt+0x63c>
   1135c:	mov	r0, #0
   11360:	bl	10d7c <dcgettext@plt>
   11364:	mov	r4, r0
   11368:	mov	r0, r6
   1136c:	b	11168 <strspn@plt+0x1f4>
   11370:	cmp	r4, #0
   11374:	str	r5, [sp]
   11378:	mov	r1, r7
   1137c:	beq	1149c <strspn@plt+0x528>
   11380:	mov	r3, #2
   11384:	ldr	r2, [sp, #32]
   11388:	bl	16520 <strspn@plt+0x55ac>
   1138c:	cmp	r0, #0
   11390:	blt	114bc <strspn@plt+0x548>
   11394:	mov	r0, r8
   11398:	bl	10e0c <puts@plt>
   1139c:	ldr	r4, [sp, #32]
   113a0:	b	11308 <strspn@plt+0x394>
   113a4:	str	r5, [sp]
   113a8:	mov	r2, r4
   113ac:	mov	r1, r7
   113b0:	mov	r3, #1
   113b4:	bl	16520 <strspn@plt+0x55ac>
   113b8:	cmp	r0, #0
   113bc:	bne	11340 <strspn@plt+0x3cc>
   113c0:	mov	r0, r8
   113c4:	bl	10e0c <puts@plt>
   113c8:	ldr	r2, [pc, #432]	; 11580 <strspn@plt+0x60c>
   113cc:	ldr	r3, [pc, #480]	; 115b4 <strspn@plt+0x640>
   113d0:	mov	r5, #1
   113d4:	ldr	r0, [r2]
   113d8:	strb	r5, [r3]
   113dc:	bl	11b3c <strspn@plt+0xbc8>
   113e0:	subs	r4, r0, #0
   113e4:	beq	11308 <strspn@plt+0x394>
   113e8:	bl	10e90 <__errno_location@plt>
   113ec:	ldr	r4, [r0]
   113f0:	mov	r0, r8
   113f4:	bl	10f20 <remove@plt>
   113f8:	ldr	r3, [sp, #28]
   113fc:	cmp	r3, #0
   11400:	bne	1134c <strspn@plt+0x3d8>
   11404:	mov	r2, #5
   11408:	ldr	r1, [pc, #424]	; 115b8 <strspn@plt+0x644>
   1140c:	mov	r0, r3
   11410:	mov	r6, r3
   11414:	bl	10d7c <dcgettext@plt>
   11418:	mov	r1, r4
   1141c:	mov	r4, r5
   11420:	mov	r2, r0
   11424:	mov	r0, r6
   11428:	bl	10de8 <error@plt>
   1142c:	b	11308 <strspn@plt+0x394>
   11430:	ldr	r0, [pc, #368]	; 115a8 <strspn@plt+0x634>
   11434:	bl	10e00 <getenv@plt>
   11438:	cmp	r0, #0
   1143c:	beq	11450 <strspn@plt+0x4dc>
   11440:	ldrb	r3, [r0]
   11444:	cmp	r3, #0
   11448:	strne	r0, [sp, #24]
   1144c:	bne	11470 <strspn@plt+0x4fc>
   11450:	ldr	r1, [sp, #24]
   11454:	cmp	r1, #0
   11458:	beq	11544 <strspn@plt+0x5d0>
   1145c:	ldrb	r2, [r1]
   11460:	ldr	r3, [pc, #324]	; 115ac <strspn@plt+0x638>
   11464:	cmp	r2, #0
   11468:	moveq	r1, r3
   1146c:	str	r1, [sp, #24]
   11470:	mov	r0, r6
   11474:	bl	11a90 <strspn@plt+0xb1c>
   11478:	cmp	r6, r0
   1147c:	beq	112a4 <strspn@plt+0x330>
   11480:	mov	r2, #5
   11484:	ldr	r1, [pc, #304]	; 115bc <strspn@plt+0x648>
   11488:	mov	r0, #0
   1148c:	bl	10d7c <dcgettext@plt>
   11490:	mov	r4, r0
   11494:	mov	r0, r6
   11498:	b	11168 <strspn@plt+0x1f4>
   1149c:	mov	r3, r4
   114a0:	mov	r2, r4
   114a4:	bl	16520 <strspn@plt+0x55ac>
   114a8:	cmp	r0, #0
   114ac:	blt	114bc <strspn@plt+0x548>
   114b0:	bl	10f5c <close@plt>
   114b4:	cmp	r0, #0
   114b8:	beq	113c0 <strspn@plt+0x44c>
   114bc:	ldr	r3, [sp, #28]
   114c0:	cmp	r3, #0
   114c4:	bne	1134c <strspn@plt+0x3d8>
   114c8:	bl	10e90 <__errno_location@plt>
   114cc:	ldr	r1, [pc, #236]	; 115c0 <strspn@plt+0x64c>
   114d0:	mov	r2, #5
   114d4:	ldr	r8, [sp, #28]
   114d8:	ldr	r5, [r0]
   114dc:	mov	r0, r8
   114e0:	bl	10d7c <dcgettext@plt>
   114e4:	mov	r4, #1
   114e8:	mov	r7, r0
   114ec:	mov	r0, r6
   114f0:	bl	15e64 <strspn@plt+0x4ef0>
   114f4:	mov	r2, r7
   114f8:	mov	r1, r5
   114fc:	mov	r3, r0
   11500:	mov	r0, r8
   11504:	bl	10de8 <error@plt>
   11508:	b	11308 <strspn@plt+0x394>
   1150c:	mov	r2, #5
   11510:	ldr	r1, [pc, #172]	; 115c4 <strspn@plt+0x650>
   11514:	mov	r0, #0
   11518:	bl	10d7c <dcgettext@plt>
   1151c:	mov	r4, r0
   11520:	mov	r0, r6
   11524:	b	11168 <strspn@plt+0x1f4>
   11528:	mov	r0, r6
   1152c:	bl	10e84 <strchr@plt>
   11530:	mov	r5, r0
   11534:	b	11330 <strspn@plt+0x3bc>
   11538:	ldr	r3, [pc, #108]	; 115ac <strspn@plt+0x638>
   1153c:	str	r3, [sp, #24]
   11540:	b	11298 <strspn@plt+0x324>
   11544:	ldr	r3, [pc, #96]	; 115ac <strspn@plt+0x638>
   11548:	str	r3, [sp, #24]
   1154c:	b	11470 <strspn@plt+0x4fc>
   11550:	bl	10e90 <__errno_location@plt>
   11554:	mov	r2, #5
   11558:	ldr	r1, [pc, #104]	; 115c8 <strspn@plt+0x654>
   1155c:	b	114d4 <strspn@plt+0x560>
   11560:	andeq	r8, r1, r0, lsl r5
   11564:	andeq	r7, r1, r8, ror #30
   11568:	andeq	r8, r1, r0, lsl #13
   1156c:	andeq	r8, r1, r0, asr #11
   11570:			; <UNDEFINED> instruction: 0x000186b4
   11574:	strdeq	r1, [r1], -r4
   11578:	andeq	r9, r2, r8, asr r1
   1157c:	strdeq	r9, [r2], -r4
   11580:	andeq	r9, r2, r4, asr r1
   11584:	muleq	r1, r8, r6
   11588:	andeq	r8, r1, r4, lsr #13
   1158c:			; <UNDEFINED> instruction: 0x000185bc
   11590:	andeq	r7, r1, r8, ror #31
   11594:	andeq	r9, r2, r8, asr #2
   11598:			; <UNDEFINED> instruction: 0x000186bc
   1159c:	ldrdeq	r8, [r1], -r0
   115a0:	andeq	r8, r1, r8, ror #12
   115a4:	strdeq	r8, [r1], -ip
   115a8:	andeq	r8, r1, r8, asr #14
   115ac:	andeq	r8, r1, r8, ror r6
   115b0:	andeq	r8, r1, ip, lsr #14
   115b4:	andeq	r9, r2, sp, asr r1
   115b8:	andeq	r8, r1, r4, lsl r8
   115bc:	andeq	r8, r1, r0, asr r7
   115c0:	andeq	r8, r1, ip, ror #15
   115c4:	andeq	r8, r1, r4, lsl #15
   115c8:	andeq	r8, r1, r0, asr #15
   115cc:	mov	fp, #0
   115d0:	mov	lr, #0
   115d4:	pop	{r1}		; (ldr r1, [sp], #4)
   115d8:	mov	r2, sp
   115dc:	push	{r2}		; (str r2, [sp, #-4]!)
   115e0:	push	{r0}		; (str r0, [sp, #-4]!)
   115e4:	ldr	ip, [pc, #16]	; 115fc <strspn@plt+0x688>
   115e8:	push	{ip}		; (str ip, [sp, #-4]!)
   115ec:	ldr	r0, [pc, #12]	; 11600 <strspn@plt+0x68c>
   115f0:	ldr	r3, [pc, #12]	; 11604 <strspn@plt+0x690>
   115f4:	bl	10e24 <__libc_start_main@plt>
   115f8:	bl	10f50 <abort@plt>
   115fc:	andeq	r7, r1, r8, lsl #30
   11600:	andeq	r0, r1, r0, lsl #31
   11604:	andeq	r7, r1, r8, lsr #29
   11608:	ldr	r3, [pc, #20]	; 11624 <strspn@plt+0x6b0>
   1160c:	ldr	r2, [pc, #20]	; 11628 <strspn@plt+0x6b4>
   11610:	add	r3, pc, r3
   11614:	ldr	r2, [r3, r2]
   11618:	cmp	r2, #0
   1161c:	bxeq	lr
   11620:	b	10e3c <__gmon_start__@plt>
   11624:	andeq	r7, r1, r8, ror #19
   11628:	andeq	r0, r0, r8, ror #1
   1162c:	ldr	r3, [pc, #28]	; 11650 <strspn@plt+0x6dc>
   11630:	ldr	r0, [pc, #28]	; 11654 <strspn@plt+0x6e0>
   11634:	sub	r3, r3, r0
   11638:	cmp	r3, #6
   1163c:	bxls	lr
   11640:	ldr	r3, [pc, #16]	; 11658 <strspn@plt+0x6e4>
   11644:	cmp	r3, #0
   11648:	bxeq	lr
   1164c:	bx	r3
   11650:	andeq	r9, r2, pc, lsr r1
   11654:	andeq	r9, r2, ip, lsr r1
   11658:	andeq	r0, r0, r0
   1165c:	ldr	r1, [pc, #36]	; 11688 <strspn@plt+0x714>
   11660:	ldr	r0, [pc, #36]	; 1168c <strspn@plt+0x718>
   11664:	sub	r1, r1, r0
   11668:	asr	r1, r1, #2
   1166c:	add	r1, r1, r1, lsr #31
   11670:	asrs	r1, r1, #1
   11674:	bxeq	lr
   11678:	ldr	r3, [pc, #16]	; 11690 <strspn@plt+0x71c>
   1167c:	cmp	r3, #0
   11680:	bxeq	lr
   11684:	bx	r3
   11688:	andeq	r9, r2, ip, lsr r1
   1168c:	andeq	r9, r2, ip, lsr r1
   11690:	andeq	r0, r0, r0
   11694:	push	{r4, lr}
   11698:	ldr	r4, [pc, #24]	; 116b8 <strspn@plt+0x744>
   1169c:	ldrb	r3, [r4]
   116a0:	cmp	r3, #0
   116a4:	popne	{r4, pc}
   116a8:	bl	1162c <strspn@plt+0x6b8>
   116ac:	mov	r3, #1
   116b0:	strb	r3, [r4]
   116b4:	pop	{r4, pc}
   116b8:	andeq	r9, r2, ip, asr r1
   116bc:	ldr	r0, [pc, #40]	; 116ec <strspn@plt+0x778>
   116c0:	ldr	r3, [r0]
   116c4:	cmp	r3, #0
   116c8:	bne	116d0 <strspn@plt+0x75c>
   116cc:	b	1165c <strspn@plt+0x6e8>
   116d0:	ldr	r3, [pc, #24]	; 116f0 <strspn@plt+0x77c>
   116d4:	cmp	r3, #0
   116d8:	beq	116cc <strspn@plt+0x758>
   116dc:	push	{r4, lr}
   116e0:	blx	r3
   116e4:	pop	{r4, lr}
   116e8:	b	1165c <strspn@plt+0x6e8>
   116ec:	andeq	r8, r2, r4, lsl pc
   116f0:	andeq	r0, r0, r0
   116f4:	ldr	r3, [pc, #44]	; 11728 <strspn@plt+0x7b4>
   116f8:	ldrb	r3, [r3]
   116fc:	cmp	r3, #0
   11700:	beq	11724 <strspn@plt+0x7b0>
   11704:	ldr	r3, [pc, #32]	; 1172c <strspn@plt+0x7b8>
   11708:	push	{r4, lr}
   1170c:	ldr	r0, [r3]
   11710:	bl	11b3c <strspn@plt+0xbc8>
   11714:	cmp	r0, #0
   11718:	popeq	{r4, pc}
   1171c:	mov	r0, #1
   11720:	bl	10d40 <_exit@plt>
   11724:	b	11bd8 <strspn@plt+0xc64>
   11728:	andeq	r9, r2, sp, asr r1
   1172c:	andeq	r9, r2, r0, asr r1
   11730:	subs	r5, r0, #0
   11734:	push	{r7, lr}
   11738:	sub	sp, sp, #56	; 0x38
   1173c:	beq	11778 <strspn@plt+0x804>
   11740:	ldr	r3, [pc, #744]	; 11a30 <strspn@plt+0xabc>
   11744:	mov	r2, #5
   11748:	ldr	r1, [pc, #740]	; 11a34 <strspn@plt+0xac0>
   1174c:	mov	r0, #0
   11750:	ldr	r4, [r3]
   11754:	bl	10d7c <dcgettext@plt>
   11758:	ldr	r3, [pc, #728]	; 11a38 <strspn@plt+0xac4>
   1175c:	mov	r1, #1
   11760:	ldr	r3, [r3]
   11764:	mov	r2, r0
   11768:	mov	r0, r4
   1176c:	bl	10ed8 <__fprintf_chk@plt>
   11770:	mov	r0, r5
   11774:	bl	10e6c <exit@plt>
   11778:	mov	r2, #5
   1177c:	ldr	r1, [pc, #696]	; 11a3c <strspn@plt+0xac8>
   11780:	bl	10d7c <dcgettext@plt>
   11784:	ldr	r3, [pc, #684]	; 11a38 <strspn@plt+0xac4>
   11788:	ldr	r7, [pc, #688]	; 11a40 <strspn@plt+0xacc>
   1178c:	ldr	r4, [pc, #688]	; 11a44 <strspn@plt+0xad0>
   11790:	ldr	r2, [r3]
   11794:	mov	r1, r0
   11798:	mov	r0, #1
   1179c:	bl	10ec0 <__printf_chk@plt>
   117a0:	mov	r2, #5
   117a4:	ldr	r1, [pc, #668]	; 11a48 <strspn@plt+0xad4>
   117a8:	mov	r0, r5
   117ac:	bl	10d7c <dcgettext@plt>
   117b0:	ldr	r1, [r7]
   117b4:	bl	10cf8 <fputs_unlocked@plt>
   117b8:	mov	r2, #5
   117bc:	ldr	r1, [pc, #648]	; 11a4c <strspn@plt+0xad8>
   117c0:	mov	r0, r5
   117c4:	bl	10d7c <dcgettext@plt>
   117c8:	ldr	r1, [r7]
   117cc:	bl	10cf8 <fputs_unlocked@plt>
   117d0:	ldr	r1, [r7]
   117d4:	mov	r0, #10
   117d8:	bl	10d70 <fputc_unlocked@plt>
   117dc:	mov	r2, #5
   117e0:	ldr	r1, [pc, #616]	; 11a50 <strspn@plt+0xadc>
   117e4:	mov	r0, r5
   117e8:	bl	10d7c <dcgettext@plt>
   117ec:	ldr	r1, [r7]
   117f0:	bl	10cf8 <fputs_unlocked@plt>
   117f4:	mov	r2, #5
   117f8:	ldr	r1, [pc, #596]	; 11a54 <strspn@plt+0xae0>
   117fc:	mov	r0, r5
   11800:	bl	10d7c <dcgettext@plt>
   11804:	ldr	r1, [r7]
   11808:	bl	10cf8 <fputs_unlocked@plt>
   1180c:	mov	r2, #5
   11810:	ldr	r1, [pc, #576]	; 11a58 <strspn@plt+0xae4>
   11814:	mov	r0, r5
   11818:	bl	10d7c <dcgettext@plt>
   1181c:	ldr	r1, [r7]
   11820:	bl	10cf8 <fputs_unlocked@plt>
   11824:	mov	r2, #5
   11828:	ldr	r1, [pc, #556]	; 11a5c <strspn@plt+0xae8>
   1182c:	mov	r0, r5
   11830:	bl	10d7c <dcgettext@plt>
   11834:	ldr	r1, [r7]
   11838:	bl	10cf8 <fputs_unlocked@plt>
   1183c:	mov	r2, #5
   11840:	ldr	r1, [pc, #536]	; 11a60 <strspn@plt+0xaec>
   11844:	mov	r0, r5
   11848:	bl	10d7c <dcgettext@plt>
   1184c:	ldr	r1, [r7]
   11850:	bl	10cf8 <fputs_unlocked@plt>
   11854:	mov	r2, #5
   11858:	ldr	r1, [pc, #516]	; 11a64 <strspn@plt+0xaf0>
   1185c:	mov	r0, r5
   11860:	bl	10d7c <dcgettext@plt>
   11864:	ldr	r1, [r7]
   11868:	bl	10cf8 <fputs_unlocked@plt>
   1186c:	ldm	r4!, {r0, r1, r2, r3}
   11870:	mov	lr, sp
   11874:	stmia	lr!, {r0, r1, r2, r3}
   11878:	ldm	r4!, {r0, r1, r2, r3}
   1187c:	ldr	ip, [sp]
   11880:	stmia	lr!, {r0, r1, r2, r3}
   11884:	cmp	ip, #0
   11888:	ldm	r4!, {r0, r1, r2, r3}
   1188c:	stmia	lr!, {r0, r1, r2, r3}
   11890:	ldm	r4, {r0, r1}
   11894:	moveq	r4, sp
   11898:	stm	lr, {r0, r1}
   1189c:	beq	118cc <strspn@plt+0x958>
   118a0:	ldr	r6, [pc, #448]	; 11a68 <strspn@plt+0xaf4>
   118a4:	mov	r4, sp
   118a8:	b	118b8 <strspn@plt+0x944>
   118ac:	ldr	ip, [r4, #8]!
   118b0:	cmp	ip, #0
   118b4:	beq	118cc <strspn@plt+0x958>
   118b8:	mov	r1, ip
   118bc:	mov	r0, r6
   118c0:	bl	10d10 <strcmp@plt>
   118c4:	cmp	r0, #0
   118c8:	bne	118ac <strspn@plt+0x938>
   118cc:	ldr	r4, [r4, #4]
   118d0:	mov	r2, #5
   118d4:	cmp	r4, #0
   118d8:	ldr	r1, [pc, #396]	; 11a6c <strspn@plt+0xaf8>
   118dc:	beq	11984 <strspn@plt+0xa10>
   118e0:	mov	r0, #0
   118e4:	bl	10d7c <dcgettext@plt>
   118e8:	ldr	r3, [pc, #384]	; 11a70 <strspn@plt+0xafc>
   118ec:	ldr	r2, [pc, #384]	; 11a74 <strspn@plt+0xb00>
   118f0:	mov	r1, r0
   118f4:	mov	r0, #1
   118f8:	bl	10ec0 <__printf_chk@plt>
   118fc:	mov	r1, #0
   11900:	mov	r0, #5
   11904:	bl	10efc <setlocale@plt>
   11908:	cmp	r0, #0
   1190c:	ldreq	r6, [pc, #340]	; 11a68 <strspn@plt+0xaf4>
   11910:	beq	1192c <strspn@plt+0x9b8>
   11914:	mov	r2, #3
   11918:	ldr	r1, [pc, #344]	; 11a78 <strspn@plt+0xb04>
   1191c:	bl	10f44 <strncmp@plt>
   11920:	ldr	r6, [pc, #320]	; 11a68 <strspn@plt+0xaf4>
   11924:	cmp	r0, #0
   11928:	bne	11a14 <strspn@plt+0xaa0>
   1192c:	mov	r2, #5
   11930:	ldr	r1, [pc, #324]	; 11a7c <strspn@plt+0xb08>
   11934:	mov	r0, #0
   11938:	bl	10d7c <dcgettext@plt>
   1193c:	ldr	r3, [pc, #292]	; 11a68 <strspn@plt+0xaf4>
   11940:	ldr	r2, [pc, #296]	; 11a70 <strspn@plt+0xafc>
   11944:	mov	r1, r0
   11948:	mov	r0, #1
   1194c:	bl	10ec0 <__printf_chk@plt>
   11950:	mov	r2, #5
   11954:	ldr	r1, [pc, #292]	; 11a80 <strspn@plt+0xb0c>
   11958:	mov	r0, #0
   1195c:	bl	10d7c <dcgettext@plt>
   11960:	ldr	r2, [pc, #284]	; 11a84 <strspn@plt+0xb10>
   11964:	cmp	r4, r6
   11968:	ldr	r3, [pc, #280]	; 11a88 <strspn@plt+0xb14>
   1196c:	movne	r3, r2
   11970:	mov	r1, r0
   11974:	mov	r2, r4
   11978:	mov	r0, #1
   1197c:	bl	10ec0 <__printf_chk@plt>
   11980:	b	11770 <strspn@plt+0x7fc>
   11984:	mov	r0, r4
   11988:	bl	10d7c <dcgettext@plt>
   1198c:	ldr	r3, [pc, #220]	; 11a70 <strspn@plt+0xafc>
   11990:	ldr	r2, [pc, #220]	; 11a74 <strspn@plt+0xb00>
   11994:	mov	r1, r0
   11998:	mov	r0, #1
   1199c:	bl	10ec0 <__printf_chk@plt>
   119a0:	mov	r1, r4
   119a4:	mov	r0, #5
   119a8:	bl	10efc <setlocale@plt>
   119ac:	cmp	r0, #0
   119b0:	beq	119c8 <strspn@plt+0xa54>
   119b4:	mov	r2, #3
   119b8:	ldr	r1, [pc, #184]	; 11a78 <strspn@plt+0xb04>
   119bc:	bl	10f44 <strncmp@plt>
   119c0:	cmp	r0, #0
   119c4:	bne	11a0c <strspn@plt+0xa98>
   119c8:	mov	r2, #5
   119cc:	ldr	r1, [pc, #168]	; 11a7c <strspn@plt+0xb08>
   119d0:	mov	r0, #0
   119d4:	bl	10d7c <dcgettext@plt>
   119d8:	ldr	r3, [pc, #136]	; 11a68 <strspn@plt+0xaf4>
   119dc:	ldr	r2, [pc, #140]	; 11a70 <strspn@plt+0xafc>
   119e0:	mov	r4, r3
   119e4:	mov	r1, r0
   119e8:	mov	r0, #1
   119ec:	bl	10ec0 <__printf_chk@plt>
   119f0:	ldr	r1, [pc, #136]	; 11a80 <strspn@plt+0xb0c>
   119f4:	mov	r2, #5
   119f8:	mov	r0, #0
   119fc:	bl	10d7c <dcgettext@plt>
   11a00:	ldr	r3, [pc, #128]	; 11a88 <strspn@plt+0xb14>
   11a04:	mov	r1, r0
   11a08:	b	11974 <strspn@plt+0xa00>
   11a0c:	ldr	r6, [pc, #84]	; 11a68 <strspn@plt+0xaf4>
   11a10:	mov	r4, r6
   11a14:	mov	r2, #5
   11a18:	ldr	r1, [pc, #108]	; 11a8c <strspn@plt+0xb18>
   11a1c:	mov	r0, #0
   11a20:	bl	10d7c <dcgettext@plt>
   11a24:	ldr	r1, [r7]
   11a28:	bl	10cf8 <fputs_unlocked@plt>
   11a2c:	b	1192c <strspn@plt+0x9b8>
   11a30:	andeq	r9, r2, r0, asr r1
   11a34:	strdeq	r7, [r1], -r0
   11a38:	andeq	r9, r2, r8, ror #2
   11a3c:	andeq	r8, r1, r8, lsl r0
   11a40:	andeq	r9, r2, r4, asr r1
   11a44:	andeq	r7, r1, r0, lsr pc
   11a48:	andeq	r8, r1, ip, lsr r0
   11a4c:	andeq	r8, r1, r0, lsl r1
   11a50:	andeq	r8, r1, ip, asr r1
   11a54:	andeq	r8, r1, r8, lsr #4
   11a58:	andeq	r8, r1, r4, asr #5
   11a5c:	andeq	r8, r1, r0, lsr r4
   11a60:	andeq	r8, r1, r4, lsl r5
   11a64:	andeq	r8, r1, r4, asr #10
   11a68:	andeq	r7, r1, r8, ror #31
   11a6c:	andeq	r8, r1, ip, ror r5
   11a70:	muleq	r1, r4, r5
   11a74:			; <UNDEFINED> instruction: 0x000185bc
   11a78:	andeq	r8, r1, ip, asr #11
   11a7c:	andeq	r8, r1, r8, lsl r6
   11a80:	andeq	r8, r1, r4, lsr r6
   11a84:	andeq	r8, r1, r0, lsl r5
   11a88:	andeq	r8, r1, r8, lsr #16
   11a8c:	ldrdeq	r8, [r1], -r0
   11a90:	ldrb	r3, [r0]
   11a94:	cmp	r3, #47	; 0x2f
   11a98:	bne	11aa8 <strspn@plt+0xb34>
   11a9c:	ldrb	r3, [r0, #1]!
   11aa0:	cmp	r3, #47	; 0x2f
   11aa4:	beq	11a9c <strspn@plt+0xb28>
   11aa8:	cmp	r3, #0
   11aac:	bxeq	lr
   11ab0:	mov	r2, #0
   11ab4:	push	{lr}		; (str lr, [sp, #-4]!)
   11ab8:	mov	ip, r2
   11abc:	mov	r1, r0
   11ac0:	mov	lr, #1
   11ac4:	cmp	r3, #47	; 0x2f
   11ac8:	moveq	r2, lr
   11acc:	beq	11adc <strspn@plt+0xb68>
   11ad0:	cmp	r2, #0
   11ad4:	movne	r0, r1
   11ad8:	movne	r2, ip
   11adc:	ldrb	r3, [r1, #1]!
   11ae0:	cmp	r3, #0
   11ae4:	bne	11ac4 <strspn@plt+0xb50>
   11ae8:	pop	{pc}		; (ldr pc, [sp], #4)
   11aec:	push	{r4, lr}
   11af0:	mov	r4, r0
   11af4:	bl	10e78 <strlen@plt>
   11af8:	cmp	r0, #1
   11afc:	popls	{r4, pc}
   11b00:	sub	r3, r0, #1
   11b04:	add	r2, r4, r3
   11b08:	ldrb	r1, [r4, r3]
   11b0c:	cmp	r1, #47	; 0x2f
   11b10:	popne	{r4, pc}
   11b14:	cmp	r3, #1
   11b18:	beq	11b2c <strspn@plt+0xbb8>
   11b1c:	ldrb	r1, [r2, #-1]!
   11b20:	sub	r0, r3, #1
   11b24:	cmp	r1, #47	; 0x2f
   11b28:	beq	11b34 <strspn@plt+0xbc0>
   11b2c:	mov	r0, r3
   11b30:	pop	{r4, pc}
   11b34:	mov	r3, r0
   11b38:	b	11b14 <strspn@plt+0xba0>
   11b3c:	push	{r4, r5, r6, lr}
   11b40:	mov	r4, r0
   11b44:	bl	10dd0 <__fpending@plt>
   11b48:	ldr	r5, [r4]
   11b4c:	and	r5, r5, #32
   11b50:	mov	r6, r0
   11b54:	mov	r0, r4
   11b58:	bl	11cbc <strspn@plt+0xd48>
   11b5c:	cmp	r5, #0
   11b60:	mov	r4, r0
   11b64:	bne	11b84 <strspn@plt+0xc10>
   11b68:	cmp	r0, #0
   11b6c:	beq	11b7c <strspn@plt+0xc08>
   11b70:	cmp	r6, #0
   11b74:	beq	11ba0 <strspn@plt+0xc2c>
   11b78:	mvn	r4, #0
   11b7c:	mov	r0, r4
   11b80:	pop	{r4, r5, r6, pc}
   11b84:	cmp	r0, #0
   11b88:	bne	11b78 <strspn@plt+0xc04>
   11b8c:	bl	10e90 <__errno_location@plt>
   11b90:	str	r4, [r0]
   11b94:	mvn	r4, #0
   11b98:	mov	r0, r4
   11b9c:	pop	{r4, r5, r6, pc}
   11ba0:	bl	10e90 <__errno_location@plt>
   11ba4:	ldr	r4, [r0]
   11ba8:	subs	r4, r4, #9
   11bac:	mvnne	r4, #0
   11bb0:	mov	r0, r4
   11bb4:	pop	{r4, r5, r6, pc}
   11bb8:	ldr	r3, [pc, #4]	; 11bc4 <strspn@plt+0xc50>
   11bbc:	str	r0, [r3]
   11bc0:	bx	lr
   11bc4:	andeq	r9, r2, r0, ror #2
   11bc8:	ldr	r3, [pc, #4]	; 11bd4 <strspn@plt+0xc60>
   11bcc:	strb	r0, [r3, #4]
   11bd0:	bx	lr
   11bd4:	andeq	r9, r2, r0, ror #2
   11bd8:	ldr	r3, [pc, #192]	; 11ca0 <strspn@plt+0xd2c>
   11bdc:	push	{r4, r5, r6, lr}
   11be0:	sub	sp, sp, #8
   11be4:	ldr	r0, [r3]
   11be8:	bl	11b3c <strspn@plt+0xbc8>
   11bec:	cmp	r0, #0
   11bf0:	beq	11c14 <strspn@plt+0xca0>
   11bf4:	ldr	r4, [pc, #168]	; 11ca4 <strspn@plt+0xd30>
   11bf8:	ldrb	r3, [r4, #4]
   11bfc:	cmp	r3, #0
   11c00:	beq	11c30 <strspn@plt+0xcbc>
   11c04:	bl	10e90 <__errno_location@plt>
   11c08:	ldr	r3, [r0]
   11c0c:	cmp	r3, #32
   11c10:	bne	11c30 <strspn@plt+0xcbc>
   11c14:	ldr	r3, [pc, #140]	; 11ca8 <strspn@plt+0xd34>
   11c18:	ldr	r0, [r3]
   11c1c:	bl	11b3c <strspn@plt+0xbc8>
   11c20:	cmp	r0, #0
   11c24:	bne	11c78 <strspn@plt+0xd04>
   11c28:	add	sp, sp, #8
   11c2c:	pop	{r4, r5, r6, pc}
   11c30:	mov	r2, #5
   11c34:	ldr	r1, [pc, #112]	; 11cac <strspn@plt+0xd38>
   11c38:	mov	r0, #0
   11c3c:	bl	10d7c <dcgettext@plt>
   11c40:	ldr	r4, [r4]
   11c44:	cmp	r4, #0
   11c48:	mov	r5, r0
   11c4c:	beq	11c84 <strspn@plt+0xd10>
   11c50:	bl	10e90 <__errno_location@plt>
   11c54:	ldr	r6, [r0]
   11c58:	mov	r0, r4
   11c5c:	bl	14c04 <strspn@plt+0x3c90>
   11c60:	mov	r1, r6
   11c64:	str	r5, [sp]
   11c68:	ldr	r2, [pc, #64]	; 11cb0 <strspn@plt+0xd3c>
   11c6c:	mov	r3, r0
   11c70:	mov	r0, #0
   11c74:	bl	10de8 <error@plt>
   11c78:	ldr	r3, [pc, #52]	; 11cb4 <strspn@plt+0xd40>
   11c7c:	ldr	r0, [r3]
   11c80:	bl	10d40 <_exit@plt>
   11c84:	bl	10e90 <__errno_location@plt>
   11c88:	mov	r3, r5
   11c8c:	ldr	r2, [pc, #36]	; 11cb8 <strspn@plt+0xd44>
   11c90:	ldr	r1, [r0]
   11c94:	mov	r0, r4
   11c98:	bl	10de8 <error@plt>
   11c9c:	b	11c78 <strspn@plt+0xd04>
   11ca0:	andeq	r9, r2, r4, asr r1
   11ca4:	andeq	r9, r2, r0, ror #2
   11ca8:	andeq	r9, r2, r0, asr r1
   11cac:	andeq	r8, r1, r4, lsl r8
   11cb0:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   11cb4:	strdeq	r9, [r2], -r8
   11cb8:	ldrdeq	r8, [r1], -ip
   11cbc:	push	{r4, r5, lr}
   11cc0:	sub	sp, sp, #12
   11cc4:	mov	r4, r0
   11cc8:	bl	10ecc <fileno@plt>
   11ccc:	cmp	r0, #0
   11cd0:	mov	r0, r4
   11cd4:	blt	11d50 <strspn@plt+0xddc>
   11cd8:	bl	10e30 <__freading@plt>
   11cdc:	cmp	r0, #0
   11ce0:	bne	11d1c <strspn@plt+0xda8>
   11ce4:	mov	r0, r4
   11ce8:	bl	11d5c <strspn@plt+0xde8>
   11cec:	cmp	r0, #0
   11cf0:	beq	11d4c <strspn@plt+0xdd8>
   11cf4:	bl	10e90 <__errno_location@plt>
   11cf8:	mov	r5, r0
   11cfc:	mov	r0, r4
   11d00:	ldr	r4, [r5]
   11d04:	bl	10ee4 <fclose@plt>
   11d08:	cmp	r4, #0
   11d0c:	mvnne	r0, #0
   11d10:	strne	r4, [r5]
   11d14:	add	sp, sp, #12
   11d18:	pop	{r4, r5, pc}
   11d1c:	mov	r0, r4
   11d20:	bl	10ecc <fileno@plt>
   11d24:	mov	r3, #1
   11d28:	str	r3, [sp]
   11d2c:	mov	r2, #0
   11d30:	mov	r3, #0
   11d34:	bl	10db8 <lseek64@plt>
   11d38:	mvn	r3, #0
   11d3c:	mvn	r2, #0
   11d40:	cmp	r1, r3
   11d44:	cmpeq	r0, r2
   11d48:	bne	11ce4 <strspn@plt+0xd70>
   11d4c:	mov	r0, r4
   11d50:	add	sp, sp, #12
   11d54:	pop	{r4, r5, lr}
   11d58:	b	10ee4 <fclose@plt>
   11d5c:	push	{r4, lr}
   11d60:	subs	r4, r0, #0
   11d64:	sub	sp, sp, #8
   11d68:	beq	11d84 <strspn@plt+0xe10>
   11d6c:	bl	10e30 <__freading@plt>
   11d70:	cmp	r0, #0
   11d74:	beq	11d84 <strspn@plt+0xe10>
   11d78:	ldr	r3, [r4]
   11d7c:	tst	r3, #256	; 0x100
   11d80:	bne	11d94 <strspn@plt+0xe20>
   11d84:	mov	r0, r4
   11d88:	add	sp, sp, #8
   11d8c:	pop	{r4, lr}
   11d90:	b	10d1c <fflush@plt>
   11d94:	mov	r3, #1
   11d98:	str	r3, [sp]
   11d9c:	mov	r2, #0
   11da0:	mov	r3, #0
   11da4:	mov	r0, r4
   11da8:	bl	11ef8 <strspn@plt+0xf84>
   11dac:	mov	r0, r4
   11db0:	add	sp, sp, #8
   11db4:	pop	{r4, lr}
   11db8:	b	10d1c <fflush@plt>
   11dbc:	push	{r4, lr}
   11dc0:	bl	11dd0 <strspn@plt+0xe5c>
   11dc4:	cmp	r0, #0
   11dc8:	popne	{r4, pc}
   11dcc:	bl	17610 <strspn@plt+0x669c>
   11dd0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11dd4:	mov	r6, r1
   11dd8:	mov	r8, r2
   11ddc:	mov	fp, r0
   11de0:	bl	11a90 <strspn@plt+0xb1c>
   11de4:	mov	r4, r0
   11de8:	bl	11aec <strspn@plt+0xb78>
   11dec:	sub	r4, r4, fp
   11df0:	mov	r5, r0
   11df4:	mov	r0, r6
   11df8:	bl	10e78 <strlen@plt>
   11dfc:	cmp	r5, #0
   11e00:	add	r4, r4, r5
   11e04:	mov	r7, r0
   11e08:	beq	11e7c <strspn@plt+0xf08>
   11e0c:	add	r3, fp, r4
   11e10:	ldrb	r3, [r3, #-1]
   11e14:	cmp	r3, #47	; 0x2f
   11e18:	beq	11e94 <strspn@plt+0xf20>
   11e1c:	ldrb	r3, [r6]
   11e20:	cmp	r3, #47	; 0x2f
   11e24:	beq	11e94 <strspn@plt+0xf20>
   11e28:	mov	r5, #1
   11e2c:	mov	sl, #47	; 0x2f
   11e30:	add	r0, r7, #1
   11e34:	add	r0, r0, r4
   11e38:	add	r0, r0, r5
   11e3c:	bl	17698 <strspn@plt+0x6724>
   11e40:	subs	r9, r0, #0
   11e44:	beq	11e74 <strspn@plt+0xf00>
   11e48:	mov	r2, r4
   11e4c:	mov	r1, fp
   11e50:	bl	10e48 <mempcpy@plt>
   11e54:	cmp	r8, #0
   11e58:	mov	r2, r7
   11e5c:	mov	r1, r6
   11e60:	strb	sl, [r0], r5
   11e64:	strne	r0, [r8]
   11e68:	bl	10e48 <mempcpy@plt>
   11e6c:	mov	r3, #0
   11e70:	strb	r3, [r0]
   11e74:	mov	r0, r9
   11e78:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e7c:	ldrb	r3, [r6]
   11e80:	cmp	r3, #47	; 0x2f
   11e84:	moveq	r5, #1
   11e88:	moveq	sl, #46	; 0x2e
   11e8c:	movne	sl, r5
   11e90:	b	11e30 <strspn@plt+0xebc>
   11e94:	mov	r5, #0
   11e98:	mov	sl, r5
   11e9c:	b	11e30 <strspn@plt+0xebc>
   11ea0:	push	{r4, r5, lr}
   11ea4:	sub	sp, sp, #12
   11ea8:	mov	r5, r0
   11eac:	bl	10e90 <__errno_location@plt>
   11eb0:	mov	r2, #0
   11eb4:	mov	r4, r0
   11eb8:	ldr	r3, [r0]
   11ebc:	str	r2, [r4]
   11ec0:	mov	r0, r5
   11ec4:	str	r3, [sp]
   11ec8:	str	r3, [sp, #4]
   11ecc:	bl	10d28 <free@plt>
   11ed0:	ldr	r3, [r4]
   11ed4:	add	r2, sp, #8
   11ed8:	cmp	r3, #0
   11edc:	moveq	r3, #4
   11ee0:	movne	r3, #0
   11ee4:	add	r3, r2, r3
   11ee8:	ldr	r3, [r3, #-8]
   11eec:	str	r3, [r4]
   11ef0:	add	sp, sp, #12
   11ef4:	pop	{r4, r5, pc}
   11ef8:	push	{r4, r5, r6, r7, r8, lr}
   11efc:	sub	sp, sp, #8
   11f00:	ldmib	r0, {ip, lr}
   11f04:	mov	r4, r0
   11f08:	ldr	r5, [sp, #32]
   11f0c:	cmp	lr, ip
   11f10:	beq	11f28 <strspn@plt+0xfb4>
   11f14:	str	r5, [sp, #32]
   11f18:	mov	r0, r4
   11f1c:	add	sp, sp, #8
   11f20:	pop	{r4, r5, r6, r7, r8, lr}
   11f24:	b	10ef0 <fseeko64@plt>
   11f28:	ldr	lr, [r0, #20]
   11f2c:	ldr	ip, [r0, #16]
   11f30:	cmp	lr, ip
   11f34:	bne	11f14 <strspn@plt+0xfa0>
   11f38:	ldr	r8, [r0, #36]	; 0x24
   11f3c:	cmp	r8, #0
   11f40:	bne	11f14 <strspn@plt+0xfa0>
   11f44:	mov	r6, r2
   11f48:	mov	r7, r3
   11f4c:	bl	10ecc <fileno@plt>
   11f50:	mov	r2, r6
   11f54:	mov	r3, r7
   11f58:	str	r5, [sp]
   11f5c:	bl	10db8 <lseek64@plt>
   11f60:	mvn	r3, #0
   11f64:	mvn	r2, #0
   11f68:	cmp	r1, r3
   11f6c:	cmpeq	r0, r2
   11f70:	beq	11f90 <strspn@plt+0x101c>
   11f74:	ldr	r3, [r4]
   11f78:	strd	r0, [r4, #80]	; 0x50
   11f7c:	mov	r0, r8
   11f80:	bic	r3, r3, #16
   11f84:	str	r3, [r4]
   11f88:	add	sp, sp, #8
   11f8c:	pop	{r4, r5, r6, r7, r8, pc}
   11f90:	mvn	r0, #0
   11f94:	b	11f88 <strspn@plt+0x1014>
   11f98:	push	{r4, r5, r6, lr}
   11f9c:	subs	r4, r0, #0
   11fa0:	beq	12014 <strspn@plt+0x10a0>
   11fa4:	mov	r1, #47	; 0x2f
   11fa8:	bl	10f08 <strrchr@plt>
   11fac:	subs	r5, r0, #0
   11fb0:	beq	12000 <strspn@plt+0x108c>
   11fb4:	add	r6, r5, #1
   11fb8:	sub	r3, r6, r4
   11fbc:	cmp	r3, #6
   11fc0:	ble	12000 <strspn@plt+0x108c>
   11fc4:	mov	r2, #7
   11fc8:	ldr	r1, [pc, #96]	; 12030 <strspn@plt+0x10bc>
   11fcc:	sub	r0, r5, #6
   11fd0:	bl	10f44 <strncmp@plt>
   11fd4:	cmp	r0, #0
   11fd8:	bne	12000 <strspn@plt+0x108c>
   11fdc:	mov	r2, #3
   11fe0:	ldr	r1, [pc, #76]	; 12034 <strspn@plt+0x10c0>
   11fe4:	mov	r0, r6
   11fe8:	bl	10f44 <strncmp@plt>
   11fec:	cmp	r0, #0
   11ff0:	movne	r4, r6
   11ff4:	ldreq	r3, [pc, #60]	; 12038 <strspn@plt+0x10c4>
   11ff8:	addeq	r4, r5, #4
   11ffc:	streq	r4, [r3]
   12000:	ldr	r2, [pc, #52]	; 1203c <strspn@plt+0x10c8>
   12004:	ldr	r3, [pc, #52]	; 12040 <strspn@plt+0x10cc>
   12008:	str	r4, [r2]
   1200c:	str	r4, [r3]
   12010:	pop	{r4, r5, r6, pc}
   12014:	ldr	r3, [pc, #40]	; 12044 <strspn@plt+0x10d0>
   12018:	mov	r2, #55	; 0x37
   1201c:	mov	r1, #1
   12020:	ldr	r3, [r3]
   12024:	ldr	r0, [pc, #28]	; 12048 <strspn@plt+0x10d4>
   12028:	bl	10dac <fwrite@plt>
   1202c:	bl	10f50 <abort@plt>
   12030:	andeq	r8, r1, r8, lsl r9
   12034:	andeq	r8, r1, r0, lsr #18
   12038:	andeq	r9, r2, r0, asr #2
   1203c:	andeq	r9, r2, r8, ror #2
   12040:	andeq	r9, r2, r4, asr #2
   12044:	andeq	r9, r2, r0, asr r1
   12048:	andeq	r8, r1, r0, ror #17
   1204c:	push	{r4, r5, r6, lr}
   12050:	mov	r4, r0
   12054:	mov	r5, r1
   12058:	bl	17720 <strspn@plt+0x67ac>
   1205c:	ldrb	r3, [r0]
   12060:	bic	r3, r3, #32
   12064:	cmp	r3, #85	; 0x55
   12068:	bne	120c8 <strspn@plt+0x1154>
   1206c:	ldrb	r3, [r0, #1]
   12070:	bic	r3, r3, #32
   12074:	cmp	r3, #84	; 0x54
   12078:	bne	12104 <strspn@plt+0x1190>
   1207c:	ldrb	r3, [r0, #2]
   12080:	bic	r3, r3, #32
   12084:	cmp	r3, #70	; 0x46
   12088:	bne	12104 <strspn@plt+0x1190>
   1208c:	ldrb	r3, [r0, #3]
   12090:	cmp	r3, #45	; 0x2d
   12094:	bne	12104 <strspn@plt+0x1190>
   12098:	ldrb	r3, [r0, #4]
   1209c:	cmp	r3, #56	; 0x38
   120a0:	bne	12104 <strspn@plt+0x1190>
   120a4:	ldrb	r3, [r0, #5]
   120a8:	cmp	r3, #0
   120ac:	bne	12104 <strspn@plt+0x1190>
   120b0:	ldrb	r2, [r4]
   120b4:	ldr	r3, [pc, #152]	; 12154 <strspn@plt+0x11e0>
   120b8:	ldr	r0, [pc, #152]	; 12158 <strspn@plt+0x11e4>
   120bc:	cmp	r2, #96	; 0x60
   120c0:	movne	r0, r3
   120c4:	pop	{r4, r5, r6, pc}
   120c8:	cmp	r3, #71	; 0x47
   120cc:	bne	12104 <strspn@plt+0x1190>
   120d0:	ldrb	r3, [r0, #1]
   120d4:	bic	r3, r3, #32
   120d8:	cmp	r3, #66	; 0x42
   120dc:	bne	12104 <strspn@plt+0x1190>
   120e0:	ldrb	r3, [r0, #2]
   120e4:	cmp	r3, #49	; 0x31
   120e8:	bne	12104 <strspn@plt+0x1190>
   120ec:	ldrb	r3, [r0, #3]
   120f0:	cmp	r3, #56	; 0x38
   120f4:	bne	12104 <strspn@plt+0x1190>
   120f8:	ldrb	r3, [r0, #4]
   120fc:	cmp	r3, #48	; 0x30
   12100:	beq	12118 <strspn@plt+0x11a4>
   12104:	ldr	r3, [pc, #80]	; 1215c <strspn@plt+0x11e8>
   12108:	cmp	r5, #9
   1210c:	ldr	r0, [pc, #76]	; 12160 <strspn@plt+0x11ec>
   12110:	movne	r0, r3
   12114:	pop	{r4, r5, r6, pc}
   12118:	ldrb	r3, [r0, #5]
   1211c:	cmp	r3, #51	; 0x33
   12120:	bne	12104 <strspn@plt+0x1190>
   12124:	ldrb	r3, [r0, #6]
   12128:	cmp	r3, #48	; 0x30
   1212c:	bne	12104 <strspn@plt+0x1190>
   12130:	ldrb	r3, [r0, #7]
   12134:	cmp	r3, #0
   12138:	bne	12104 <strspn@plt+0x1190>
   1213c:	ldrb	r2, [r4]
   12140:	ldr	r3, [pc, #28]	; 12164 <strspn@plt+0x11f0>
   12144:	ldr	r0, [pc, #28]	; 12168 <strspn@plt+0x11f4>
   12148:	cmp	r2, #96	; 0x60
   1214c:	movne	r0, r3
   12150:	pop	{r4, r5, r6, pc}
   12154:	andeq	r8, r1, ip, ror r9
   12158:	andeq	r8, r1, r8, ror r9
   1215c:	andeq	r8, r1, ip, lsl #19
   12160:	andeq	r8, r1, r8, lsl #19
   12164:	andeq	r8, r1, r4, lsl #19
   12168:	andeq	r8, r1, r0, lsl #19
   1216c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12170:	sub	sp, sp, #140	; 0x8c
   12174:	mov	r9, r1
   12178:	str	r3, [sp, #24]
   1217c:	mov	r3, #1
   12180:	mov	sl, r0
   12184:	str	r2, [sp, #44]	; 0x2c
   12188:	str	r3, [sp, #28]
   1218c:	bl	10dc4 <__ctype_get_mb_cur_max@plt>
   12190:	ldr	r3, [sp, #180]	; 0xb4
   12194:	mov	fp, r9
   12198:	mov	r9, sl
   1219c:	lsr	r3, r3, #1
   121a0:	and	r3, r3, #1
   121a4:	str	r3, [sp, #40]	; 0x28
   121a8:	ldr	r3, [sp, #180]	; 0xb4
   121ac:	mov	r2, #0
   121b0:	and	r3, r3, #4
   121b4:	str	r3, [sp, #100]	; 0x64
   121b8:	ldr	r3, [sp, #180]	; 0xb4
   121bc:	str	r2, [sp, #76]	; 0x4c
   121c0:	and	r3, r3, #1
   121c4:	str	r3, [sp, #96]	; 0x60
   121c8:	str	r2, [sp, #36]	; 0x24
   121cc:	str	r2, [sp, #56]	; 0x38
   121d0:	str	r2, [sp, #68]	; 0x44
   121d4:	str	r2, [sp, #72]	; 0x48
   121d8:	str	r2, [sp, #84]	; 0x54
   121dc:	str	r0, [sp, #80]	; 0x50
   121e0:	ldr	r3, [sp, #176]	; 0xb0
   121e4:	cmp	r3, #10
   121e8:	ldrls	pc, [pc, r3, lsl #2]
   121ec:	b	133c4 <strspn@plt+0x2450>
   121f0:	andeq	r2, r1, ip, lsl r2
   121f4:	andeq	r2, r1, ip, lsr r5
   121f8:	muleq	r1, r4, r6
   121fc:	andeq	r2, r1, r0, ror r5
   12200:	andeq	r2, r1, r8, ror #13
   12204:	andeq	r2, r1, r8, asr #13
   12208:	muleq	r1, r0, r5
   1220c:			; <UNDEFINED> instruction: 0x000125b4
   12210:	ldrdeq	r2, [r1], -ip
   12214:	ldrdeq	r2, [r1], -ip
   12218:	ldrdeq	r2, [r1], -ip
   1221c:	mov	r3, #0
   12220:	ldr	r1, [sp, #56]	; 0x38
   12224:	ldr	r2, [sp, #176]	; 0xb0
   12228:	ldr	lr, [sp, #176]	; 0xb0
   1222c:	mov	r8, r3
   12230:	mov	ip, r3
   12234:	str	r3, [sp, #40]	; 0x28
   12238:	mov	r3, r1
   1223c:	cmp	r2, #2
   12240:	moveq	r3, #0
   12244:	andne	r3, r3, #1
   12248:	mov	r0, r3
   1224c:	str	r3, [sp, #92]	; 0x5c
   12250:	ldr	r3, [sp, #68]	; 0x44
   12254:	sub	lr, lr, #2
   12258:	adds	r2, r3, #0
   1225c:	movne	r2, #1
   12260:	and	r3, r1, ip
   12264:	and	r3, r2, r3
   12268:	clz	lr, lr
   1226c:	str	r3, [sp, #88]	; 0x58
   12270:	lsr	lr, lr, #5
   12274:	mov	r3, ip
   12278:	and	r3, r3, lr
   1227c:	mov	sl, #0
   12280:	and	r0, r2, r0
   12284:	str	r3, [sp, #64]	; 0x40
   12288:	eor	r3, r1, #1
   1228c:	str	lr, [sp, #52]	; 0x34
   12290:	str	r0, [sp, #48]	; 0x30
   12294:	str	r3, [sp, #60]	; 0x3c
   12298:	ldr	r3, [sp, #24]
   1229c:	cmn	r3, #1
   122a0:	beq	127d0 <strspn@plt+0x185c>
   122a4:	subs	r7, r3, sl
   122a8:	movne	r7, #1
   122ac:	cmp	r7, #0
   122b0:	beq	127e8 <strspn@plt+0x1874>
   122b4:	ldr	r3, [sp, #48]	; 0x30
   122b8:	cmp	r3, #0
   122bc:	beq	12b54 <strspn@plt+0x1be0>
   122c0:	ldr	r2, [sp, #68]	; 0x44
   122c4:	ldr	r1, [sp, #24]
   122c8:	cmp	r2, #1
   122cc:	mov	r3, r2
   122d0:	movls	r3, #0
   122d4:	movhi	r3, #1
   122d8:	cmn	r1, #1
   122dc:	movne	r3, #0
   122e0:	cmp	r3, #0
   122e4:	add	r4, sl, r2
   122e8:	beq	122f8 <strspn@plt+0x1384>
   122ec:	ldr	r0, [sp, #44]	; 0x2c
   122f0:	bl	10e78 <strlen@plt>
   122f4:	str	r0, [sp, #24]
   122f8:	ldr	r3, [sp, #24]
   122fc:	cmp	r3, r4
   12300:	ldr	r3, [sp, #44]	; 0x2c
   12304:	add	r5, r3, sl
   12308:	bcc	12b5c <strspn@plt+0x1be8>
   1230c:	mov	r0, r5
   12310:	ldr	r2, [sp, #68]	; 0x44
   12314:	ldr	r1, [sp, #72]	; 0x48
   12318:	bl	10d64 <memcmp@plt>
   1231c:	cmp	r0, #0
   12320:	bne	12b5c <strspn@plt+0x1be8>
   12324:	ldr	r3, [sp, #40]	; 0x28
   12328:	cmp	r3, #0
   1232c:	bne	13518 <strspn@plt+0x25a4>
   12330:	ldrb	r4, [r5]
   12334:	cmp	r4, #126	; 0x7e
   12338:	ldrls	pc, [pc, r4, lsl #2]
   1233c:	b	13454 <strspn@plt+0x24e0>
   12340:	andeq	r2, r1, r4, lsl sl
   12344:	andeq	r3, r1, r4, asr r4
   12348:	andeq	r3, r1, r4, asr r4
   1234c:	andeq	r3, r1, r4, asr r4
   12350:	andeq	r3, r1, r4, asr r4
   12354:	andeq	r3, r1, r4, asr r4
   12358:	andeq	r3, r1, r4, asr r4
   1235c:	andeq	r2, r1, r0, lsl #20
   12360:	andeq	r2, r1, ip, ror #19
   12364:	andeq	r2, r1, r8, asr #19
   12368:	andeq	r2, r1, r8, lsr #19
   1236c:	ldrdeq	r2, [r1], -r8
   12370:	andeq	r2, r1, r0, lsl r9
   12374:	andeq	r2, r1, r4, asr #22
   12378:	andeq	r3, r1, r4, asr r4
   1237c:	andeq	r3, r1, r4, asr r4
   12380:	andeq	r3, r1, r4, asr r4
   12384:	andeq	r3, r1, r4, asr r4
   12388:	andeq	r3, r1, r4, asr r4
   1238c:	andeq	r3, r1, r4, asr r4
   12390:	andeq	r3, r1, r4, asr r4
   12394:	andeq	r3, r1, r4, asr r4
   12398:	andeq	r3, r1, r4, asr r4
   1239c:	andeq	r3, r1, r4, asr r4
   123a0:	andeq	r3, r1, r4, asr r4
   123a4:	andeq	r3, r1, r4, asr r4
   123a8:	andeq	r3, r1, r4, asr r4
   123ac:	andeq	r3, r1, r4, asr r4
   123b0:	andeq	r3, r1, r4, asr r4
   123b4:	andeq	r3, r1, r4, asr r4
   123b8:	andeq	r3, r1, r4, asr r4
   123bc:	andeq	r3, r1, r4, asr r4
   123c0:	andeq	r2, r1, r4, lsr fp
   123c4:	andeq	r2, r1, r4, lsl fp
   123c8:	andeq	r2, r1, r4, lsl fp
   123cc:	strdeq	r2, [r1], -r4
   123d0:	andeq	r2, r1, r4, lsl fp
   123d4:	andeq	r2, r1, r0, lsl #18
   123d8:	andeq	r2, r1, r4, lsl fp
   123dc:	ldrdeq	r2, [r1], -ip
   123e0:	andeq	r2, r1, r4, lsl fp
   123e4:	andeq	r2, r1, r4, lsl fp
   123e8:	andeq	r2, r1, r4, lsl fp
   123ec:	andeq	r2, r1, r0, lsl #18
   123f0:	andeq	r2, r1, r0, lsl #18
   123f4:	andeq	r2, r1, r0, lsl #18
   123f8:	andeq	r2, r1, r0, lsl #18
   123fc:	andeq	r2, r1, r0, lsl #18
   12400:	andeq	r2, r1, r0, lsl #18
   12404:	andeq	r2, r1, r0, lsl #18
   12408:	andeq	r2, r1, r0, lsl #18
   1240c:	andeq	r2, r1, r0, lsl #18
   12410:	andeq	r2, r1, r0, lsl #18
   12414:	andeq	r2, r1, r0, lsl #18
   12418:	andeq	r2, r1, r0, lsl #18
   1241c:	andeq	r2, r1, r0, lsl #18
   12420:	andeq	r2, r1, r0, lsl #18
   12424:	andeq	r2, r1, r0, lsl #18
   12428:	andeq	r2, r1, r0, lsl #18
   1242c:	andeq	r2, r1, r4, lsl fp
   12430:	andeq	r2, r1, r4, lsl fp
   12434:	andeq	r2, r1, r4, lsl fp
   12438:	andeq	r2, r1, r4, lsl fp
   1243c:	andeq	r2, r1, ip, lsl #17
   12440:	andeq	r3, r1, r4, asr r4
   12444:	andeq	r2, r1, r0, lsl #18
   12448:	andeq	r2, r1, r0, lsl #18
   1244c:	andeq	r2, r1, r0, lsl #18
   12450:	andeq	r2, r1, r0, lsl #18
   12454:	andeq	r2, r1, r0, lsl #18
   12458:	andeq	r2, r1, r0, lsl #18
   1245c:	andeq	r2, r1, r0, lsl #18
   12460:	andeq	r2, r1, r0, lsl #18
   12464:	andeq	r2, r1, r0, lsl #18
   12468:	andeq	r2, r1, r0, lsl #18
   1246c:	andeq	r2, r1, r0, lsl #18
   12470:	andeq	r2, r1, r0, lsl #18
   12474:	andeq	r2, r1, r0, lsl #18
   12478:	andeq	r2, r1, r0, lsl #18
   1247c:	andeq	r2, r1, r0, lsl #18
   12480:	andeq	r2, r1, r0, lsl #18
   12484:	andeq	r2, r1, r0, lsl #18
   12488:	andeq	r2, r1, r0, lsl #18
   1248c:	andeq	r2, r1, r0, lsl #18
   12490:	andeq	r2, r1, r0, lsl #18
   12494:	andeq	r2, r1, r0, lsl #18
   12498:	andeq	r2, r1, r0, lsl #18
   1249c:	andeq	r2, r1, r0, lsl #18
   124a0:	andeq	r2, r1, r0, lsl #18
   124a4:	andeq	r2, r1, r0, lsl #18
   124a8:	andeq	r2, r1, r0, lsl #18
   124ac:	andeq	r2, r1, r4, lsl fp
   124b0:	andeq	r2, r1, r8, asr r8
   124b4:	andeq	r2, r1, r0, lsl #18
   124b8:	andeq	r2, r1, r4, lsl fp
   124bc:	andeq	r2, r1, r0, lsl #18
   124c0:	andeq	r2, r1, r4, lsl fp
   124c4:	andeq	r2, r1, r0, lsl #18
   124c8:	andeq	r2, r1, r0, lsl #18
   124cc:	andeq	r2, r1, r0, lsl #18
   124d0:	andeq	r2, r1, r0, lsl #18
   124d4:	andeq	r2, r1, r0, lsl #18
   124d8:	andeq	r2, r1, r0, lsl #18
   124dc:	andeq	r2, r1, r0, lsl #18
   124e0:	andeq	r2, r1, r0, lsl #18
   124e4:	andeq	r2, r1, r0, lsl #18
   124e8:	andeq	r2, r1, r0, lsl #18
   124ec:	andeq	r2, r1, r0, lsl #18
   124f0:	andeq	r2, r1, r0, lsl #18
   124f4:	andeq	r2, r1, r0, lsl #18
   124f8:	andeq	r2, r1, r0, lsl #18
   124fc:	andeq	r2, r1, r0, lsl #18
   12500:	andeq	r2, r1, r0, lsl #18
   12504:	andeq	r2, r1, r0, lsl #18
   12508:	andeq	r2, r1, r0, lsl #18
   1250c:	andeq	r2, r1, r0, lsl #18
   12510:	andeq	r2, r1, r0, lsl #18
   12514:	andeq	r2, r1, r0, lsl #18
   12518:	andeq	r2, r1, r0, lsl #18
   1251c:	andeq	r2, r1, r0, lsl #18
   12520:	andeq	r2, r1, r0, lsl #18
   12524:	andeq	r2, r1, r0, lsl #18
   12528:	andeq	r2, r1, r0, lsl #18
   1252c:	andeq	r2, r1, r0, lsl r7
   12530:	andeq	r2, r1, r4, lsl fp
   12534:	andeq	r2, r1, r0, lsl r7
   12538:	strdeq	r2, [r1], -r4
   1253c:	mov	r3, #1
   12540:	str	r3, [sp, #40]	; 0x28
   12544:	str	r3, [sp, #68]	; 0x44
   12548:	mov	r8, #0
   1254c:	ldr	r3, [pc, #4056]	; 1352c <strspn@plt+0x25b8>
   12550:	str	r3, [sp, #72]	; 0x48
   12554:	mov	r3, #2
   12558:	str	r3, [sp, #176]	; 0xb0
   1255c:	ldr	r1, [sp, #56]	; 0x38
   12560:	mov	r2, r3
   12564:	ldr	ip, [sp, #40]	; 0x28
   12568:	mov	lr, r3
   1256c:	b	12238 <strspn@plt+0x12c4>
   12570:	mov	r3, #1
   12574:	str	r3, [sp, #56]	; 0x38
   12578:	str	r3, [sp, #68]	; 0x44
   1257c:	str	r3, [sp, #40]	; 0x28
   12580:	ldr	r3, [pc, #4004]	; 1352c <strspn@plt+0x25b8>
   12584:	mov	r8, #0
   12588:	str	r3, [sp, #72]	; 0x48
   1258c:	b	12554 <strspn@plt+0x15e0>
   12590:	mov	r3, #1
   12594:	str	r3, [sp, #56]	; 0x38
   12598:	str	r3, [sp, #68]	; 0x44
   1259c:	str	r3, [sp, #40]	; 0x28
   125a0:	ldr	r3, [pc, #3976]	; 13530 <strspn@plt+0x25bc>
   125a4:	mov	r8, #0
   125a8:	str	r3, [sp, #72]	; 0x48
   125ac:	mov	r3, #5
   125b0:	b	12558 <strspn@plt+0x15e4>
   125b4:	mov	r3, #0
   125b8:	str	r3, [sp, #40]	; 0x28
   125bc:	mov	r3, #1
   125c0:	str	r3, [sp, #56]	; 0x38
   125c4:	mov	r8, #0
   125c8:	mov	r1, r3
   125cc:	ldr	r2, [sp, #176]	; 0xb0
   125d0:	ldr	ip, [sp, #40]	; 0x28
   125d4:	ldr	lr, [sp, #176]	; 0xb0
   125d8:	b	12238 <strspn@plt+0x12c4>
   125dc:	ldr	r3, [sp, #176]	; 0xb0
   125e0:	cmp	r3, #10
   125e4:	beq	12628 <strspn@plt+0x16b4>
   125e8:	mov	r2, #5
   125ec:	ldr	r1, [pc, #3904]	; 13534 <strspn@plt+0x25c0>
   125f0:	mov	r0, #0
   125f4:	bl	10d7c <dcgettext@plt>
   125f8:	ldr	r2, [pc, #3892]	; 13534 <strspn@plt+0x25c0>
   125fc:	cmp	r0, r2
   12600:	str	r0, [sp, #188]	; 0xbc
   12604:	beq	136c0 <strspn@plt+0x274c>
   12608:	mov	r2, #5
   1260c:	ldr	r1, [pc, #3864]	; 1352c <strspn@plt+0x25b8>
   12610:	mov	r0, #0
   12614:	bl	10d7c <dcgettext@plt>
   12618:	ldr	r2, [pc, #3852]	; 1352c <strspn@plt+0x25b8>
   1261c:	cmp	r0, r2
   12620:	str	r0, [sp, #192]	; 0xc0
   12624:	beq	136b0 <strspn@plt+0x273c>
   12628:	ldr	r8, [sp, #40]	; 0x28
   1262c:	cmp	r8, #0
   12630:	movne	r8, #0
   12634:	bne	12664 <strspn@plt+0x16f0>
   12638:	ldr	r3, [sp, #188]	; 0xbc
   1263c:	ldrb	r3, [r3]
   12640:	cmp	r3, #0
   12644:	beq	12664 <strspn@plt+0x16f0>
   12648:	ldr	r2, [sp, #188]	; 0xbc
   1264c:	cmp	fp, r8
   12650:	strbhi	r3, [r9, r8]
   12654:	ldrb	r3, [r2, #1]!
   12658:	add	r8, r8, #1
   1265c:	cmp	r3, #0
   12660:	bne	1264c <strspn@plt+0x16d8>
   12664:	ldr	r0, [sp, #192]	; 0xc0
   12668:	bl	10e78 <strlen@plt>
   1266c:	ldr	r3, [sp, #192]	; 0xc0
   12670:	ldr	r2, [sp, #176]	; 0xb0
   12674:	str	r3, [sp, #72]	; 0x48
   12678:	mov	r3, #1
   1267c:	str	r3, [sp, #56]	; 0x38
   12680:	mov	r1, r3
   12684:	ldr	ip, [sp, #40]	; 0x28
   12688:	ldr	lr, [sp, #176]	; 0xb0
   1268c:	str	r0, [sp, #68]	; 0x44
   12690:	b	12238 <strspn@plt+0x12c4>
   12694:	ldr	r3, [sp, #40]	; 0x28
   12698:	cmp	r3, #0
   1269c:	beq	13344 <strspn@plt+0x23d0>
   126a0:	mov	r3, #1
   126a4:	str	r3, [sp, #68]	; 0x44
   126a8:	ldr	r3, [pc, #3708]	; 1352c <strspn@plt+0x25b8>
   126ac:	str	r3, [sp, #72]	; 0x48
   126b0:	mov	r8, #0
   126b4:	ldr	r1, [sp, #56]	; 0x38
   126b8:	ldr	r2, [sp, #176]	; 0xb0
   126bc:	ldr	ip, [sp, #40]	; 0x28
   126c0:	ldr	lr, [sp, #176]	; 0xb0
   126c4:	b	12238 <strspn@plt+0x12c4>
   126c8:	ldr	r3, [sp, #40]	; 0x28
   126cc:	cmp	r3, #0
   126d0:	beq	133c8 <strspn@plt+0x2454>
   126d4:	str	r3, [sp, #56]	; 0x38
   126d8:	mov	r3, #1
   126dc:	str	r3, [sp, #68]	; 0x44
   126e0:	ldr	r3, [pc, #3656]	; 13530 <strspn@plt+0x25bc>
   126e4:	b	126ac <strspn@plt+0x1738>
   126e8:	ldr	r3, [sp, #40]	; 0x28
   126ec:	cmp	r3, #0
   126f0:	mov	r3, #1
   126f4:	streq	r3, [sp, #56]	; 0x38
   126f8:	beq	13344 <strspn@plt+0x23d0>
   126fc:	str	r3, [sp, #68]	; 0x44
   12700:	ldr	r3, [pc, #3620]	; 1352c <strspn@plt+0x25b8>
   12704:	mov	r8, #0
   12708:	str	r3, [sp, #72]	; 0x48
   1270c:	b	12554 <strspn@plt+0x15e0>
   12710:	ldr	r3, [sp, #24]
   12714:	ldr	r6, [sp, #48]	; 0x30
   12718:	cmn	r3, #1
   1271c:	beq	12d78 <strspn@plt+0x1e04>
   12720:	subs	r3, r3, #1
   12724:	movne	r3, #1
   12728:	cmp	r3, #0
   1272c:	beq	12af8 <strspn@plt+0x1b84>
   12730:	ldr	r1, [sp, #52]	; 0x34
   12734:	mov	r7, r3
   12738:	mov	r3, #0
   1273c:	str	r3, [sp, #32]
   12740:	ldr	r3, [sp, #60]	; 0x3c
   12744:	orr	r2, r1, r3
   12748:	ldr	r3, [sp, #40]	; 0x28
   1274c:	eor	r2, r2, #1
   12750:	orr	r2, r3, r2
   12754:	tst	r2, #255	; 0xff
   12758:	bne	1307c <strspn@plt+0x2108>
   1275c:	cmp	r6, #0
   12760:	bne	1293c <strspn@plt+0x19c8>
   12764:	ldr	r3, [sp, #36]	; 0x24
   12768:	add	sl, sl, #1
   1276c:	and	r3, r3, r7
   12770:	uxtb	r6, r3
   12774:	cmp	r6, #0
   12778:	beq	127a4 <strspn@plt+0x1830>
   1277c:	cmp	fp, r8
   12780:	movhi	r3, #39	; 0x27
   12784:	strbhi	r3, [r9, r8]
   12788:	add	r3, r8, #1
   1278c:	cmp	fp, r3
   12790:	movhi	r2, #39	; 0x27
   12794:	add	r8, r8, #2
   12798:	strbhi	r2, [r9, r3]
   1279c:	mov	r3, #0
   127a0:	str	r3, [sp, #36]	; 0x24
   127a4:	ldr	r2, [sp, #32]
   127a8:	cmp	r8, fp
   127ac:	ldr	r3, [sp, #28]
   127b0:	strbcc	r4, [r9, r8]
   127b4:	cmp	r2, #0
   127b8:	moveq	r3, #0
   127bc:	str	r3, [sp, #28]
   127c0:	ldr	r3, [sp, #24]
   127c4:	add	r8, r8, #1
   127c8:	cmn	r3, #1
   127cc:	bne	122a4 <strspn@plt+0x1330>
   127d0:	ldr	r3, [sp, #44]	; 0x2c
   127d4:	ldrb	r3, [r3, sl]
   127d8:	adds	r7, r3, #0
   127dc:	movne	r7, #1
   127e0:	cmp	r7, #0
   127e4:	bne	122b4 <strspn@plt+0x1340>
   127e8:	ldr	r3, [sp, #64]	; 0x40
   127ec:	cmp	r8, #0
   127f0:	movne	r3, #0
   127f4:	andeq	r3, r3, #1
   127f8:	cmp	r3, #0
   127fc:	str	r3, [sp, #64]	; 0x40
   12800:	bne	132a4 <strspn@plt+0x2330>
   12804:	ldr	r3, [sp, #40]	; 0x28
   12808:	ldr	r2, [sp, #52]	; 0x34
   1280c:	eor	r3, r3, #1
   12810:	ands	r2, r2, r3
   12814:	beq	136d0 <strspn@plt+0x275c>
   12818:	ldr	r3, [sp, #76]	; 0x4c
   1281c:	cmp	r3, #0
   12820:	beq	136a0 <strspn@plt+0x272c>
   12824:	ldr	r3, [sp, #28]
   12828:	cmp	r3, #0
   1282c:	bne	1365c <strspn@plt+0x26e8>
   12830:	ldr	r2, [sp, #84]	; 0x54
   12834:	clz	r3, fp
   12838:	cmp	r2, #0
   1283c:	lsr	r3, r3, #5
   12840:	moveq	r3, #0
   12844:	cmp	r3, #0
   12848:	beq	135fc <strspn@plt+0x2688>
   1284c:	mov	fp, r2
   12850:	str	r3, [sp, #76]	; 0x4c
   12854:	b	121e0 <strspn@plt+0x126c>
   12858:	ldr	r3, [sp, #176]	; 0xb0
   1285c:	ldr	r6, [sp, #48]	; 0x30
   12860:	cmp	r3, #2
   12864:	beq	12d9c <strspn@plt+0x1e28>
   12868:	ldr	r3, [sp, #88]	; 0x58
   1286c:	cmp	r3, #0
   12870:	beq	13320 <strspn@plt+0x23ac>
   12874:	mov	r3, #0
   12878:	add	sl, sl, #1
   1287c:	ldr	r6, [sp, #36]	; 0x24
   12880:	str	r3, [sp, #32]
   12884:	mov	r4, #92	; 0x5c
   12888:	b	12774 <strspn@plt+0x1800>
   1288c:	ldr	r3, [sp, #176]	; 0xb0
   12890:	ldr	r6, [sp, #48]	; 0x30
   12894:	cmp	r3, #2
   12898:	beq	12dcc <strspn@plt+0x1e58>
   1289c:	cmp	r3, #5
   128a0:	bne	13330 <strspn@plt+0x23bc>
   128a4:	ldr	r3, [sp, #100]	; 0x64
   128a8:	cmp	r3, #0
   128ac:	beq	13394 <strspn@plt+0x2420>
   128b0:	ldr	r2, [sp, #24]
   128b4:	add	r3, sl, #2
   128b8:	cmp	r2, r3
   128bc:	bls	128cc <strspn@plt+0x1958>
   128c0:	ldrb	r4, [r5, #1]
   128c4:	cmp	r4, #63	; 0x3f
   128c8:	beq	1353c <strspn@plt+0x25c8>
   128cc:	mov	r1, #0
   128d0:	str	r1, [sp, #32]
   128d4:	mov	r4, #63	; 0x3f
   128d8:	b	12740 <strspn@plt+0x17cc>
   128dc:	ldr	r3, [sp, #176]	; 0xb0
   128e0:	ldr	r6, [sp, #48]	; 0x30
   128e4:	cmp	r3, #2
   128e8:	beq	12df8 <strspn@plt+0x1e84>
   128ec:	str	r7, [sp, #32]
   128f0:	str	r7, [sp, #76]	; 0x4c
   128f4:	mov	r1, #0
   128f8:	mov	r4, #39	; 0x27
   128fc:	b	12740 <strspn@plt+0x17cc>
   12900:	ldr	r6, [sp, #48]	; 0x30
   12904:	ldr	r1, [sp, #52]	; 0x34
   12908:	str	r7, [sp, #32]
   1290c:	b	12740 <strspn@plt+0x17cc>
   12910:	ldr	r6, [sp, #48]	; 0x30
   12914:	ldr	r1, [sp, #52]	; 0x34
   12918:	mov	r4, #12
   1291c:	mov	r3, #102	; 0x66
   12920:	ldr	r2, [sp, #56]	; 0x38
   12924:	cmp	r2, #0
   12928:	streq	r2, [sp, #32]
   1292c:	beq	12740 <strspn@plt+0x17cc>
   12930:	mov	r4, r3
   12934:	mov	r3, #0
   12938:	str	r3, [sp, #32]
   1293c:	ldr	r3, [sp, #40]	; 0x28
   12940:	cmp	r3, #0
   12944:	bne	130b4 <strspn@plt+0x2140>
   12948:	ldr	r3, [sp, #36]	; 0x24
   1294c:	eor	r3, r3, #1
   12950:	and	r3, r3, r1
   12954:	ands	r3, r3, #255	; 0xff
   12958:	beq	12990 <strspn@plt+0x1a1c>
   1295c:	cmp	fp, r8
   12960:	movhi	r2, #39	; 0x27
   12964:	strbhi	r2, [r9, r8]
   12968:	add	r2, r8, #1
   1296c:	cmp	fp, r2
   12970:	movhi	r1, #36	; 0x24
   12974:	strbhi	r1, [r9, r2]
   12978:	add	r2, r8, #2
   1297c:	cmp	fp, r2
   12980:	add	r8, r8, #3
   12984:	movhi	r1, #39	; 0x27
   12988:	strbhi	r1, [r9, r2]
   1298c:	str	r3, [sp, #36]	; 0x24
   12990:	cmp	fp, r8
   12994:	movhi	r3, #92	; 0x5c
   12998:	strbhi	r3, [r9, r8]
   1299c:	add	sl, sl, #1
   129a0:	add	r8, r8, #1
   129a4:	b	127a4 <strspn@plt+0x1830>
   129a8:	ldr	r6, [sp, #48]	; 0x30
   129ac:	mov	r4, #10
   129b0:	mov	r3, #110	; 0x6e
   129b4:	ldr	r2, [sp, #64]	; 0x40
   129b8:	cmp	r2, #0
   129bc:	bne	1343c <strspn@plt+0x24c8>
   129c0:	ldr	r1, [sp, #52]	; 0x34
   129c4:	b	12920 <strspn@plt+0x19ac>
   129c8:	ldr	r6, [sp, #48]	; 0x30
   129cc:	ldr	r1, [sp, #52]	; 0x34
   129d0:	mov	r3, #116	; 0x74
   129d4:	b	12920 <strspn@plt+0x19ac>
   129d8:	ldr	r6, [sp, #48]	; 0x30
   129dc:	ldr	r1, [sp, #52]	; 0x34
   129e0:	mov	r4, #11
   129e4:	mov	r3, #118	; 0x76
   129e8:	b	12920 <strspn@plt+0x19ac>
   129ec:	ldr	r6, [sp, #48]	; 0x30
   129f0:	ldr	r1, [sp, #52]	; 0x34
   129f4:	mov	r4, #8
   129f8:	mov	r3, #98	; 0x62
   129fc:	b	12920 <strspn@plt+0x19ac>
   12a00:	ldr	r6, [sp, #48]	; 0x30
   12a04:	ldr	r1, [sp, #52]	; 0x34
   12a08:	mov	r4, #7
   12a0c:	mov	r3, #97	; 0x61
   12a10:	b	12920 <strspn@plt+0x19ac>
   12a14:	ldr	r3, [sp, #56]	; 0x38
   12a18:	ldr	r6, [sp, #48]	; 0x30
   12a1c:	cmp	r3, #0
   12a20:	beq	12ee4 <strspn@plt+0x1f70>
   12a24:	ldr	r3, [sp, #40]	; 0x28
   12a28:	cmp	r3, #0
   12a2c:	bne	13518 <strspn@plt+0x25a4>
   12a30:	ldr	r3, [sp, #36]	; 0x24
   12a34:	ldr	r2, [sp, #52]	; 0x34
   12a38:	eor	r3, r3, #1
   12a3c:	ands	r3, r2, r3
   12a40:	moveq	r2, r8
   12a44:	beq	12a7c <strspn@plt+0x1b08>
   12a48:	cmp	fp, r8
   12a4c:	movhi	r2, #39	; 0x27
   12a50:	strbhi	r2, [r9, r8]
   12a54:	add	r2, r8, #1
   12a58:	cmp	fp, r2
   12a5c:	movhi	r1, #36	; 0x24
   12a60:	strbhi	r1, [r9, r2]
   12a64:	add	r2, r8, #2
   12a68:	cmp	fp, r2
   12a6c:	movhi	r1, #39	; 0x27
   12a70:	strbhi	r1, [r9, r2]
   12a74:	add	r2, r8, #3
   12a78:	str	r3, [sp, #36]	; 0x24
   12a7c:	cmp	fp, r2
   12a80:	movhi	r3, #92	; 0x5c
   12a84:	strbhi	r3, [r9, r2]
   12a88:	ldr	r3, [sp, #92]	; 0x5c
   12a8c:	add	r8, r2, #1
   12a90:	cmp	r3, #0
   12a94:	beq	13418 <strspn@plt+0x24a4>
   12a98:	ldr	r1, [sp, #24]
   12a9c:	add	r3, sl, #1
   12aa0:	cmp	r1, r3
   12aa4:	bls	12adc <strspn@plt+0x1b68>
   12aa8:	ldr	r1, [sp, #44]	; 0x2c
   12aac:	ldrb	r3, [r1, r3]
   12ab0:	sub	r3, r3, #48	; 0x30
   12ab4:	cmp	r3, #9
   12ab8:	bhi	12adc <strspn@plt+0x1b68>
   12abc:	cmp	fp, r8
   12ac0:	movhi	r3, #48	; 0x30
   12ac4:	strbhi	r3, [r9, r8]
   12ac8:	add	r3, r2, #2
   12acc:	cmp	fp, r3
   12ad0:	add	r8, r2, #3
   12ad4:	movhi	r1, #48	; 0x30
   12ad8:	strbhi	r1, [r9, r3]
   12adc:	ldr	r3, [sp, #40]	; 0x28
   12ae0:	ldr	r1, [sp, #52]	; 0x34
   12ae4:	mov	r7, r3
   12ae8:	str	r3, [sp, #32]
   12aec:	mov	r4, #48	; 0x30
   12af0:	b	12740 <strspn@plt+0x17cc>
   12af4:	ldr	r6, [sp, #48]	; 0x30
   12af8:	cmp	sl, #0
   12afc:	streq	r7, [sp, #32]
   12b00:	beq	12b20 <strspn@plt+0x1bac>
   12b04:	mov	r3, #0
   12b08:	ldr	r1, [sp, #52]	; 0x34
   12b0c:	str	r3, [sp, #32]
   12b10:	b	12740 <strspn@plt+0x17cc>
   12b14:	ldr	r6, [sp, #48]	; 0x30
   12b18:	mov	r3, #0
   12b1c:	str	r3, [sp, #32]
   12b20:	ldr	r3, [sp, #64]	; 0x40
   12b24:	cmp	r3, #0
   12b28:	bne	132a4 <strspn@plt+0x2330>
   12b2c:	ldr	r1, [sp, #52]	; 0x34
   12b30:	b	12740 <strspn@plt+0x17cc>
   12b34:	ldr	r3, [sp, #48]	; 0x30
   12b38:	mov	r6, r3
   12b3c:	str	r3, [sp, #32]
   12b40:	b	12b20 <strspn@plt+0x1bac>
   12b44:	ldr	r6, [sp, #48]	; 0x30
   12b48:	mov	r4, #13
   12b4c:	mov	r3, #114	; 0x72
   12b50:	b	129b4 <strspn@plt+0x1a40>
   12b54:	ldr	r3, [sp, #44]	; 0x2c
   12b58:	add	r5, r3, sl
   12b5c:	ldrb	r4, [r5]
   12b60:	cmp	r4, #126	; 0x7e
   12b64:	ldrls	pc, [pc, r4, lsl #2]
   12b68:	b	12f04 <strspn@plt+0x1f90>
   12b6c:	ldrdeq	r2, [r1], -r4
   12b70:	andeq	r2, r1, r4, lsl #30
   12b74:	andeq	r2, r1, r4, lsl #30
   12b78:	andeq	r2, r1, r4, lsl #30
   12b7c:	andeq	r2, r1, r4, lsl #30
   12b80:	andeq	r2, r1, r4, lsl #30
   12b84:	andeq	r2, r1, r4, lsl #30
   12b88:	andeq	r2, r1, ip, asr #29
   12b8c:	andeq	r2, r1, r4, asr #29
   12b90:			; <UNDEFINED> instruction: 0x00012eb8
   12b94:			; <UNDEFINED> instruction: 0x00012eb0
   12b98:	andeq	r2, r1, r8, lsr #29
   12b9c:	andeq	r2, r1, r0, lsr #29
   12ba0:	muleq	r1, r8, lr
   12ba4:	andeq	r2, r1, r4, lsl #30
   12ba8:	andeq	r2, r1, r4, lsl #30
   12bac:	andeq	r2, r1, r4, lsl #30
   12bb0:	andeq	r2, r1, r4, lsl #30
   12bb4:	andeq	r2, r1, r4, lsl #30
   12bb8:	andeq	r2, r1, r4, lsl #30
   12bbc:	andeq	r2, r1, r4, lsl #30
   12bc0:	andeq	r2, r1, r4, lsl #30
   12bc4:	andeq	r2, r1, r4, lsl #30
   12bc8:	andeq	r2, r1, r4, lsl #30
   12bcc:	andeq	r2, r1, r4, lsl #30
   12bd0:	andeq	r2, r1, r4, lsl #30
   12bd4:	andeq	r2, r1, r4, lsl #30
   12bd8:	andeq	r2, r1, r4, lsl #30
   12bdc:	andeq	r2, r1, r4, lsl #30
   12be0:	andeq	r2, r1, r4, lsl #30
   12be4:	andeq	r2, r1, r4, lsl #30
   12be8:	andeq	r2, r1, r4, lsl #30
   12bec:	andeq	r2, r1, ip, lsl #29
   12bf0:	andeq	r2, r1, r4, lsl #29
   12bf4:	andeq	r2, r1, r4, lsl #29
   12bf8:	andeq	r2, r1, ip, ror lr
   12bfc:	andeq	r2, r1, r4, lsl #29
   12c00:	andeq	r2, r1, r4, ror lr
   12c04:	andeq	r2, r1, r4, lsl #29
   12c08:	andeq	r2, r1, r8, ror #27
   12c0c:	andeq	r2, r1, r4, lsl #29
   12c10:	andeq	r2, r1, r4, lsl #29
   12c14:	andeq	r2, r1, r4, lsl #29
   12c18:	andeq	r2, r1, r4, ror lr
   12c1c:	andeq	r2, r1, r4, ror lr
   12c20:	andeq	r2, r1, r4, ror lr
   12c24:	andeq	r2, r1, r4, ror lr
   12c28:	andeq	r2, r1, r4, ror lr
   12c2c:	andeq	r2, r1, r4, ror lr
   12c30:	andeq	r2, r1, r4, ror lr
   12c34:	andeq	r2, r1, r4, ror lr
   12c38:	andeq	r2, r1, r4, ror lr
   12c3c:	andeq	r2, r1, r4, ror lr
   12c40:	andeq	r2, r1, r4, ror lr
   12c44:	andeq	r2, r1, r4, ror lr
   12c48:	andeq	r2, r1, r4, ror lr
   12c4c:	andeq	r2, r1, r4, ror lr
   12c50:	andeq	r2, r1, r4, ror lr
   12c54:	andeq	r2, r1, r4, ror lr
   12c58:	andeq	r2, r1, r4, lsl #29
   12c5c:	andeq	r2, r1, r4, lsl #29
   12c60:	andeq	r2, r1, r4, lsl #29
   12c64:	andeq	r2, r1, r4, lsl #29
   12c68:			; <UNDEFINED> instruction: 0x00012dbc
   12c6c:	andeq	r2, r1, r4, lsl #30
   12c70:	andeq	r2, r1, r4, ror lr
   12c74:	andeq	r2, r1, r4, ror lr
   12c78:	andeq	r2, r1, r4, ror lr
   12c7c:	andeq	r2, r1, r4, ror lr
   12c80:	andeq	r2, r1, r4, ror lr
   12c84:	andeq	r2, r1, r4, ror lr
   12c88:	andeq	r2, r1, r4, ror lr
   12c8c:	andeq	r2, r1, r4, ror lr
   12c90:	andeq	r2, r1, r4, ror lr
   12c94:	andeq	r2, r1, r4, ror lr
   12c98:	andeq	r2, r1, r4, ror lr
   12c9c:	andeq	r2, r1, r4, ror lr
   12ca0:	andeq	r2, r1, r4, ror lr
   12ca4:	andeq	r2, r1, r4, ror lr
   12ca8:	andeq	r2, r1, r4, ror lr
   12cac:	andeq	r2, r1, r4, ror lr
   12cb0:	andeq	r2, r1, r4, ror lr
   12cb4:	andeq	r2, r1, r4, ror lr
   12cb8:	andeq	r2, r1, r4, ror lr
   12cbc:	andeq	r2, r1, r4, ror lr
   12cc0:	andeq	r2, r1, r4, ror lr
   12cc4:	andeq	r2, r1, r4, ror lr
   12cc8:	andeq	r2, r1, r4, ror lr
   12ccc:	andeq	r2, r1, r4, ror lr
   12cd0:	andeq	r2, r1, r4, ror lr
   12cd4:	andeq	r2, r1, r4, ror lr
   12cd8:	andeq	r2, r1, r4, lsl #29
   12cdc:	andeq	r2, r1, ip, lsl #27
   12ce0:	andeq	r2, r1, r4, ror lr
   12ce4:	andeq	r2, r1, r4, lsl #29
   12ce8:	andeq	r2, r1, r4, ror lr
   12cec:	andeq	r2, r1, r4, lsl #29
   12cf0:	andeq	r2, r1, r4, ror lr
   12cf4:	andeq	r2, r1, r4, ror lr
   12cf8:	andeq	r2, r1, r4, ror lr
   12cfc:	andeq	r2, r1, r4, ror lr
   12d00:	andeq	r2, r1, r4, ror lr
   12d04:	andeq	r2, r1, r4, ror lr
   12d08:	andeq	r2, r1, r4, ror lr
   12d0c:	andeq	r2, r1, r4, ror lr
   12d10:	andeq	r2, r1, r4, ror lr
   12d14:	andeq	r2, r1, r4, ror lr
   12d18:	andeq	r2, r1, r4, ror lr
   12d1c:	andeq	r2, r1, r4, ror lr
   12d20:	andeq	r2, r1, r4, ror lr
   12d24:	andeq	r2, r1, r4, ror lr
   12d28:	andeq	r2, r1, r4, ror lr
   12d2c:	andeq	r2, r1, r4, ror lr
   12d30:	andeq	r2, r1, r4, ror lr
   12d34:	andeq	r2, r1, r4, ror lr
   12d38:	andeq	r2, r1, r4, ror lr
   12d3c:	andeq	r2, r1, r4, ror lr
   12d40:	andeq	r2, r1, r4, ror lr
   12d44:	andeq	r2, r1, r4, ror lr
   12d48:	andeq	r2, r1, r4, ror lr
   12d4c:	andeq	r2, r1, r4, ror lr
   12d50:	andeq	r2, r1, r4, ror lr
   12d54:	andeq	r2, r1, r4, ror lr
   12d58:	andeq	r2, r1, r8, ror #26
   12d5c:	andeq	r2, r1, r4, lsl #29
   12d60:	andeq	r2, r1, r8, ror #26
   12d64:	andeq	r2, r1, ip, ror lr
   12d68:	ldr	r3, [sp, #24]
   12d6c:	mov	r6, #0
   12d70:	cmn	r3, #1
   12d74:	bne	12720 <strspn@plt+0x17ac>
   12d78:	ldr	r3, [sp, #44]	; 0x2c
   12d7c:	ldrb	r3, [r3, #1]
   12d80:	adds	r3, r3, #0
   12d84:	movne	r3, #1
   12d88:	b	12728 <strspn@plt+0x17b4>
   12d8c:	ldr	r3, [sp, #176]	; 0xb0
   12d90:	mov	r6, #0
   12d94:	cmp	r3, #2
   12d98:	bne	12868 <strspn@plt+0x18f4>
   12d9c:	ldr	r3, [sp, #64]	; 0x40
   12da0:	cmp	r3, #0
   12da4:	bne	135dc <strspn@plt+0x2668>
   12da8:	add	sl, sl, #1
   12dac:	ldr	r6, [sp, #36]	; 0x24
   12db0:	str	r3, [sp, #32]
   12db4:	mov	r4, #92	; 0x5c
   12db8:	b	12774 <strspn@plt+0x1800>
   12dbc:	ldr	r3, [sp, #176]	; 0xb0
   12dc0:	mov	r6, #0
   12dc4:	cmp	r3, #2
   12dc8:	bne	1289c <strspn@plt+0x1928>
   12dcc:	ldr	r3, [sp, #40]	; 0x28
   12dd0:	cmp	r3, #0
   12dd4:	bne	130b8 <strspn@plt+0x2144>
   12dd8:	mov	r1, r7
   12ddc:	str	r3, [sp, #32]
   12de0:	mov	r4, #63	; 0x3f
   12de4:	b	12740 <strspn@plt+0x17cc>
   12de8:	ldr	r3, [sp, #176]	; 0xb0
   12dec:	mov	r6, #0
   12df0:	cmp	r3, #2
   12df4:	bne	128ec <strspn@plt+0x1978>
   12df8:	ldr	r3, [sp, #64]	; 0x40
   12dfc:	cmp	r3, #0
   12e00:	bne	135dc <strspn@plt+0x2668>
   12e04:	ldr	r2, [sp, #84]	; 0x54
   12e08:	adds	r3, fp, #0
   12e0c:	movne	r3, #1
   12e10:	cmp	r2, #0
   12e14:	movne	r3, #0
   12e18:	cmp	r3, #0
   12e1c:	strne	fp, [sp, #84]	; 0x54
   12e20:	movne	fp, #0
   12e24:	bne	12e54 <strspn@plt+0x1ee0>
   12e28:	cmp	fp, r8
   12e2c:	movhi	r3, #39	; 0x27
   12e30:	strbhi	r3, [r9, r8]
   12e34:	add	r3, r8, #1
   12e38:	cmp	fp, r3
   12e3c:	movhi	r2, #92	; 0x5c
   12e40:	strbhi	r2, [r9, r3]
   12e44:	add	r3, r8, #2
   12e48:	cmp	fp, r3
   12e4c:	movhi	r2, #39	; 0x27
   12e50:	strbhi	r2, [r9, r3]
   12e54:	ldr	r3, [sp, #64]	; 0x40
   12e58:	add	r8, r8, #3
   12e5c:	mov	r1, r7
   12e60:	str	r7, [sp, #32]
   12e64:	str	r7, [sp, #76]	; 0x4c
   12e68:	str	r3, [sp, #36]	; 0x24
   12e6c:	mov	r4, #39	; 0x27
   12e70:	b	12740 <strspn@plt+0x17cc>
   12e74:	mov	r6, #0
   12e78:	b	12904 <strspn@plt+0x1990>
   12e7c:	mov	r6, #0
   12e80:	b	12af8 <strspn@plt+0x1b84>
   12e84:	mov	r6, #0
   12e88:	b	12b18 <strspn@plt+0x1ba4>
   12e8c:	str	r7, [sp, #32]
   12e90:	mov	r6, #0
   12e94:	b	12b20 <strspn@plt+0x1bac>
   12e98:	mov	r6, #0
   12e9c:	b	12b48 <strspn@plt+0x1bd4>
   12ea0:	mov	r6, #0
   12ea4:	b	12914 <strspn@plt+0x19a0>
   12ea8:	mov	r6, #0
   12eac:	b	129dc <strspn@plt+0x1a68>
   12eb0:	mov	r6, #0
   12eb4:	b	129ac <strspn@plt+0x1a38>
   12eb8:	mov	r6, #0
   12ebc:	mov	r3, #116	; 0x74
   12ec0:	b	129b4 <strspn@plt+0x1a40>
   12ec4:	mov	r6, #0
   12ec8:	b	129f0 <strspn@plt+0x1a7c>
   12ecc:	mov	r6, #0
   12ed0:	b	12a04 <strspn@plt+0x1a90>
   12ed4:	ldr	r3, [sp, #56]	; 0x38
   12ed8:	mov	r6, #0
   12edc:	cmp	r3, #0
   12ee0:	bne	12a24 <strspn@plt+0x1ab0>
   12ee4:	ldr	r3, [sp, #96]	; 0x60
   12ee8:	cmp	r3, #0
   12eec:	addne	sl, sl, #1
   12ef0:	bne	12298 <strspn@plt+0x1324>
   12ef4:	ldr	r1, [sp, #52]	; 0x34
   12ef8:	str	r3, [sp, #32]
   12efc:	mov	r4, r3
   12f00:	b	12740 <strspn@plt+0x17cc>
   12f04:	mov	r6, #0
   12f08:	ldr	r3, [sp, #80]	; 0x50
   12f0c:	cmp	r3, #1
   12f10:	bne	13100 <strspn@plt+0x218c>
   12f14:	bl	10e60 <__ctype_b_loc@plt>
   12f18:	ldr	r2, [sp, #80]	; 0x50
   12f1c:	sxth	r3, r4
   12f20:	mov	r1, r2
   12f24:	lsl	r3, r3, #1
   12f28:	ldr	r2, [r0]
   12f2c:	ldrh	r3, [r2, r3]
   12f30:	and	r3, r3, #16384	; 0x4000
   12f34:	cmp	r3, #0
   12f38:	movne	r3, #1
   12f3c:	moveq	r3, #0
   12f40:	str	r3, [sp, #32]
   12f44:	moveq	r3, #1
   12f48:	movne	r3, #0
   12f4c:	ldr	r2, [sp, #56]	; 0x38
   12f50:	and	r3, r3, r2
   12f54:	ands	r3, r3, #255	; 0xff
   12f58:	beq	12b2c <strspn@plt+0x1bb8>
   12f5c:	add	r1, sl, r1
   12f60:	mov	r0, #0
   12f64:	ldr	r7, [sp, #40]	; 0x28
   12f68:	ldr	r2, [sp, #36]	; 0x24
   12f6c:	ldr	lr, [sp, #52]	; 0x34
   12f70:	b	13020 <strspn@plt+0x20ac>
   12f74:	cmp	r7, #0
   12f78:	bne	13374 <strspn@plt+0x2400>
   12f7c:	eor	r0, r2, #1
   12f80:	ands	r0, lr, r0
   12f84:	beq	12fbc <strspn@plt+0x2048>
   12f88:	cmp	fp, r8
   12f8c:	movhi	r2, #39	; 0x27
   12f90:	strbhi	r2, [r9, r8]
   12f94:	add	r2, r8, #1
   12f98:	cmp	fp, r2
   12f9c:	movhi	ip, #36	; 0x24
   12fa0:	strbhi	ip, [r9, r2]
   12fa4:	add	r2, r8, #2
   12fa8:	cmp	fp, r2
   12fac:	movhi	ip, #39	; 0x27
   12fb0:	strbhi	ip, [r9, r2]
   12fb4:	add	r8, r8, #3
   12fb8:	mov	r2, r0
   12fbc:	cmp	fp, r8
   12fc0:	movhi	r0, #92	; 0x5c
   12fc4:	strbhi	r0, [r9, r8]
   12fc8:	add	r0, r8, #1
   12fcc:	cmp	fp, r0
   12fd0:	lsrhi	ip, r4, #6
   12fd4:	addhi	ip, ip, #48	; 0x30
   12fd8:	strbhi	ip, [r9, r0]
   12fdc:	add	ip, r8, #2
   12fe0:	cmp	fp, ip
   12fe4:	lsrhi	r0, r4, #3
   12fe8:	andhi	r0, r0, #7
   12fec:	addhi	r0, r0, #48	; 0x30
   12ff0:	add	sl, sl, #1
   12ff4:	strbhi	r0, [r9, ip]
   12ff8:	and	r4, r4, #7
   12ffc:	cmp	sl, r1
   13000:	add	r4, r4, #48	; 0x30
   13004:	add	r8, r8, #3
   13008:	bcs	1338c <strspn@plt+0x2418>
   1300c:	mov	r0, r3
   13010:	cmp	fp, r8
   13014:	strbhi	r4, [r9, r8]
   13018:	ldrb	r4, [r5, #1]!
   1301c:	add	r8, r8, #1
   13020:	cmp	r3, #0
   13024:	bne	12f74 <strspn@plt+0x2000>
   13028:	cmp	r6, #0
   1302c:	bne	130d0 <strspn@plt+0x215c>
   13030:	eor	r6, r0, #1
   13034:	and	r6, r6, r2
   13038:	add	sl, sl, #1
   1303c:	cmp	r1, sl
   13040:	uxtb	r6, r6
   13044:	bls	130f8 <strspn@plt+0x2184>
   13048:	cmp	r6, #0
   1304c:	beq	13010 <strspn@plt+0x209c>
   13050:	cmp	fp, r8
   13054:	movhi	r2, #39	; 0x27
   13058:	strbhi	r2, [r9, r8]
   1305c:	add	r2, r8, #1
   13060:	cmp	fp, r2
   13064:	movhi	ip, #39	; 0x27
   13068:	strbhi	ip, [r9, r2]
   1306c:	add	r8, r8, #2
   13070:	mov	r6, r3
   13074:	mov	r2, r3
   13078:	b	13010 <strspn@plt+0x209c>
   1307c:	ldr	r3, [sp, #184]	; 0xb8
   13080:	cmp	r3, #0
   13084:	beq	1275c <strspn@plt+0x17e8>
   13088:	lsr	r2, r4, #5
   1308c:	mov	r0, r3
   13090:	uxtb	r2, r2
   13094:	and	r3, r4, #31
   13098:	ldr	r2, [r0, r2, lsl #2]
   1309c:	lsr	r3, r2, r3
   130a0:	tst	r3, #1
   130a4:	beq	1275c <strspn@plt+0x17e8>
   130a8:	ldr	r3, [sp, #40]	; 0x28
   130ac:	cmp	r3, #0
   130b0:	beq	12948 <strspn@plt+0x19d4>
   130b4:	mov	r3, r1
   130b8:	str	r3, [sp, #64]	; 0x40
   130bc:	mov	sl, r9
   130c0:	ldr	r3, [sp, #56]	; 0x38
   130c4:	mov	r9, fp
   130c8:	ldr	r2, [sp, #64]	; 0x40
   130cc:	b	132bc <strspn@plt+0x2348>
   130d0:	cmp	fp, r8
   130d4:	eor	r6, r0, #1
   130d8:	movhi	ip, #92	; 0x5c
   130dc:	and	r6, r6, r2
   130e0:	add	sl, sl, #1
   130e4:	strbhi	ip, [r9, r8]
   130e8:	cmp	r1, sl
   130ec:	add	r8, r8, #1
   130f0:	uxtb	r6, r6
   130f4:	bhi	13048 <strspn@plt+0x20d4>
   130f8:	str	r2, [sp, #36]	; 0x24
   130fc:	b	12774 <strspn@plt+0x1800>
   13100:	ldr	r3, [sp, #24]
   13104:	cmn	r3, #1
   13108:	mov	r3, #0
   1310c:	str	r3, [sp, #128]	; 0x80
   13110:	str	r3, [sp, #132]	; 0x84
   13114:	beq	13408 <strspn@plt+0x2494>
   13118:	mov	r2, r7
   1311c:	mov	r3, #0
   13120:	str	r7, [sp, #104]	; 0x68
   13124:	str	r5, [sp, #116]	; 0x74
   13128:	mov	r7, r3
   1312c:	mov	r5, r2
   13130:	str	r4, [sp, #32]
   13134:	str	r6, [sp, #108]	; 0x6c
   13138:	str	r8, [sp, #112]	; 0x70
   1313c:	ldr	r3, [sp, #44]	; 0x2c
   13140:	add	r6, sl, r7
   13144:	add	r4, r3, r6
   13148:	ldr	r3, [sp, #24]
   1314c:	mov	r1, r4
   13150:	sub	r2, r3, r6
   13154:	add	r0, sp, #124	; 0x7c
   13158:	add	r3, sp, #128	; 0x80
   1315c:	bl	17754 <strspn@plt+0x67e0>
   13160:	subs	r8, r0, #0
   13164:	beq	134ec <strspn@plt+0x2578>
   13168:	cmn	r8, #1
   1316c:	beq	134c4 <strspn@plt+0x2550>
   13170:	cmn	r8, #2
   13174:	beq	1345c <strspn@plt+0x24e8>
   13178:	ldr	r3, [sp, #64]	; 0x40
   1317c:	cmp	r3, #0
   13180:	beq	13240 <strspn@plt+0x22cc>
   13184:	cmp	r8, #1
   13188:	beq	13240 <strspn@plt+0x22cc>
   1318c:	sub	r3, r8, #1
   13190:	add	r6, r3, r6
   13194:	ldr	r3, [sp, #44]	; 0x2c
   13198:	add	r6, r3, r6
   1319c:	ldrb	r3, [r4, #1]!
   131a0:	sub	r3, r3, #91	; 0x5b
   131a4:	cmp	r3, #33	; 0x21
   131a8:	ldrls	pc, [pc, r3, lsl #2]
   131ac:	b	13238 <strspn@plt+0x22c4>
   131b0:	andeq	r3, r1, r4, lsr #5
   131b4:	andeq	r3, r1, r4, lsr #5
   131b8:	andeq	r3, r1, r8, lsr r2
   131bc:	andeq	r3, r1, r4, lsr #5
   131c0:	andeq	r3, r1, r8, lsr r2
   131c4:	andeq	r3, r1, r4, lsr #5
   131c8:	andeq	r3, r1, r8, lsr r2
   131cc:	andeq	r3, r1, r8, lsr r2
   131d0:	andeq	r3, r1, r8, lsr r2
   131d4:	andeq	r3, r1, r8, lsr r2
   131d8:	andeq	r3, r1, r8, lsr r2
   131dc:	andeq	r3, r1, r8, lsr r2
   131e0:	andeq	r3, r1, r8, lsr r2
   131e4:	andeq	r3, r1, r8, lsr r2
   131e8:	andeq	r3, r1, r8, lsr r2
   131ec:	andeq	r3, r1, r8, lsr r2
   131f0:	andeq	r3, r1, r8, lsr r2
   131f4:	andeq	r3, r1, r8, lsr r2
   131f8:	andeq	r3, r1, r8, lsr r2
   131fc:	andeq	r3, r1, r8, lsr r2
   13200:	andeq	r3, r1, r8, lsr r2
   13204:	andeq	r3, r1, r8, lsr r2
   13208:	andeq	r3, r1, r8, lsr r2
   1320c:	andeq	r3, r1, r8, lsr r2
   13210:	andeq	r3, r1, r8, lsr r2
   13214:	andeq	r3, r1, r8, lsr r2
   13218:	andeq	r3, r1, r8, lsr r2
   1321c:	andeq	r3, r1, r8, lsr r2
   13220:	andeq	r3, r1, r8, lsr r2
   13224:	andeq	r3, r1, r8, lsr r2
   13228:	andeq	r3, r1, r8, lsr r2
   1322c:	andeq	r3, r1, r8, lsr r2
   13230:	andeq	r3, r1, r8, lsr r2
   13234:	andeq	r3, r1, r4, lsr #5
   13238:	cmp	r6, r4
   1323c:	bne	1319c <strspn@plt+0x2228>
   13240:	ldr	r0, [sp, #124]	; 0x7c
   13244:	bl	10da0 <iswprint@plt>
   13248:	add	r7, r7, r8
   1324c:	cmp	r0, #0
   13250:	add	r0, sp, #128	; 0x80
   13254:	moveq	r5, #0
   13258:	bl	10d58 <mbsinit@plt>
   1325c:	cmp	r0, #0
   13260:	beq	1313c <strspn@plt+0x21c8>
   13264:	ldr	r4, [sp, #32]
   13268:	str	r5, [sp, #32]
   1326c:	ldr	r3, [sp, #32]
   13270:	mov	r1, r7
   13274:	eor	r3, r3, #1
   13278:	ldr	r7, [sp, #104]	; 0x68
   1327c:	ldr	r6, [sp, #108]	; 0x6c
   13280:	ldr	r8, [sp, #112]	; 0x70
   13284:	ldr	r5, [sp, #116]	; 0x74
   13288:	uxtb	r3, r3
   1328c:	cmp	r1, #1
   13290:	bls	12f4c <strspn@plt+0x1fd8>
   13294:	ldr	r2, [sp, #56]	; 0x38
   13298:	and	r3, r3, r2
   1329c:	uxtb	r3, r3
   132a0:	b	12f5c <strspn@plt+0x1fe8>
   132a4:	mov	r3, #2
   132a8:	str	r3, [sp, #176]	; 0xb0
   132ac:	ldr	r2, [sp, #64]	; 0x40
   132b0:	ldr	r3, [sp, #56]	; 0x38
   132b4:	mov	sl, r9
   132b8:	mov	r9, fp
   132bc:	and	r3, r3, r2
   132c0:	tst	r3, #255	; 0xff
   132c4:	ldr	r3, [sp, #176]	; 0xb0
   132c8:	movne	r3, #4
   132cc:	str	r3, [sp, #176]	; 0xb0
   132d0:	ldr	r3, [sp, #180]	; 0xb4
   132d4:	mov	ip, #0
   132d8:	bic	r3, r3, #2
   132dc:	str	r3, [sp, #4]
   132e0:	ldr	r3, [sp, #192]	; 0xc0
   132e4:	ldr	r2, [sp, #44]	; 0x2c
   132e8:	str	r3, [sp, #16]
   132ec:	ldr	r3, [sp, #188]	; 0xbc
   132f0:	mov	r1, r9
   132f4:	str	r3, [sp, #12]
   132f8:	ldr	r3, [sp, #176]	; 0xb0
   132fc:	mov	r0, sl
   13300:	str	r3, [sp]
   13304:	str	ip, [sp, #8]
   13308:	ldr	r3, [sp, #24]
   1330c:	bl	1216c <strspn@plt+0x11f8>
   13310:	mov	fp, r0
   13314:	mov	r0, fp
   13318:	add	sp, sp, #140	; 0x8c
   1331c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13320:	mov	r4, #92	; 0x5c
   13324:	mov	r1, #0
   13328:	mov	r3, r4
   1332c:	b	12920 <strspn@plt+0x19ac>
   13330:	mov	r3, #0
   13334:	ldr	r1, [sp, #52]	; 0x34
   13338:	str	r3, [sp, #32]
   1333c:	mov	r4, #63	; 0x3f
   13340:	b	12740 <strspn@plt+0x17cc>
   13344:	cmp	fp, #0
   13348:	beq	133a4 <strspn@plt+0x2430>
   1334c:	mov	r3, #39	; 0x27
   13350:	strb	r3, [r9]
   13354:	mov	r3, #0
   13358:	str	r3, [sp, #40]	; 0x28
   1335c:	mov	r3, #1
   13360:	str	r3, [sp, #68]	; 0x44
   13364:	ldr	r3, [pc, #448]	; 1352c <strspn@plt+0x25b8>
   13368:	mov	r8, #1
   1336c:	str	r3, [sp, #72]	; 0x48
   13370:	b	12554 <strspn@plt+0x15e0>
   13374:	ldr	r3, [sp, #40]	; 0x28
   13378:	mov	sl, r9
   1337c:	str	r3, [sp, #56]	; 0x38
   13380:	mov	r9, fp
   13384:	ldr	r2, [sp, #64]	; 0x40
   13388:	b	132bc <strspn@plt+0x2348>
   1338c:	str	r2, [sp, #36]	; 0x24
   13390:	b	127a4 <strspn@plt+0x1830>
   13394:	mov	r1, #0
   13398:	str	r3, [sp, #32]
   1339c:	mov	r4, #63	; 0x3f
   133a0:	b	12740 <strspn@plt+0x17cc>
   133a4:	ldr	r3, [pc, #384]	; 1352c <strspn@plt+0x25b8>
   133a8:	str	r3, [sp, #72]	; 0x48
   133ac:	mov	r3, #0
   133b0:	str	r3, [sp, #40]	; 0x28
   133b4:	mov	r3, #1
   133b8:	str	r3, [sp, #68]	; 0x44
   133bc:	mov	r8, r3
   133c0:	b	12554 <strspn@plt+0x15e0>
   133c4:	bl	10f50 <abort@plt>
   133c8:	cmp	fp, #0
   133cc:	beq	1342c <strspn@plt+0x24b8>
   133d0:	mov	r2, #1
   133d4:	mov	r3, #34	; 0x22
   133d8:	strb	r3, [r9]
   133dc:	mov	r8, r2
   133e0:	mov	r3, r2
   133e4:	str	r2, [sp, #68]	; 0x44
   133e8:	str	r3, [sp, #56]	; 0x38
   133ec:	ldr	r3, [pc, #316]	; 13530 <strspn@plt+0x25bc>
   133f0:	ldr	r1, [sp, #56]	; 0x38
   133f4:	str	r3, [sp, #72]	; 0x48
   133f8:	ldr	r2, [sp, #176]	; 0xb0
   133fc:	ldr	ip, [sp, #40]	; 0x28
   13400:	ldr	lr, [sp, #176]	; 0xb0
   13404:	b	12238 <strspn@plt+0x12c4>
   13408:	ldr	r0, [sp, #44]	; 0x2c
   1340c:	bl	10e78 <strlen@plt>
   13410:	str	r0, [sp, #24]
   13414:	b	13118 <strspn@plt+0x21a4>
   13418:	mov	r7, #0
   1341c:	ldr	r1, [sp, #52]	; 0x34
   13420:	str	r3, [sp, #32]
   13424:	mov	r4, #48	; 0x30
   13428:	b	12740 <strspn@plt+0x17cc>
   1342c:	mov	r3, #1
   13430:	str	r3, [sp, #68]	; 0x44
   13434:	mov	r8, r3
   13438:	b	133e8 <strspn@plt+0x2474>
   1343c:	mov	r3, #2
   13440:	mov	sl, r9
   13444:	str	r3, [sp, #176]	; 0xb0
   13448:	mov	r9, fp
   1344c:	ldr	r3, [sp, #56]	; 0x38
   13450:	b	132bc <strspn@plt+0x2348>
   13454:	ldr	r6, [sp, #48]	; 0x30
   13458:	b	12f08 <strspn@plt+0x1f94>
   1345c:	ldr	r0, [sp, #24]
   13460:	mov	ip, r6
   13464:	cmp	r0, ip
   13468:	mov	r1, r7
   1346c:	mov	r2, r4
   13470:	ldr	r7, [sp, #104]	; 0x68
   13474:	ldr	r4, [sp, #32]
   13478:	ldr	r6, [sp, #108]	; 0x6c
   1347c:	ldr	r8, [sp, #112]	; 0x70
   13480:	ldr	r5, [sp, #116]	; 0x74
   13484:	bls	134b4 <strspn@plt+0x2540>
   13488:	ldrb	r3, [r2]
   1348c:	cmp	r3, #0
   13490:	bne	134a4 <strspn@plt+0x2530>
   13494:	b	135c4 <strspn@plt+0x2650>
   13498:	ldrb	r3, [r2, #1]!
   1349c:	cmp	r3, #0
   134a0:	beq	135c4 <strspn@plt+0x2650>
   134a4:	add	r1, r1, #1
   134a8:	add	r3, sl, r1
   134ac:	cmp	r0, r3
   134b0:	bhi	13498 <strspn@plt+0x2524>
   134b4:	mov	r2, #0
   134b8:	mov	r3, r7
   134bc:	str	r2, [sp, #32]
   134c0:	b	1328c <strspn@plt+0x2318>
   134c4:	mov	r1, r7
   134c8:	ldr	r7, [sp, #104]	; 0x68
   134cc:	mov	r2, #0
   134d0:	ldr	r4, [sp, #32]
   134d4:	ldr	r6, [sp, #108]	; 0x6c
   134d8:	ldr	r8, [sp, #112]	; 0x70
   134dc:	ldr	r5, [sp, #116]	; 0x74
   134e0:	mov	r3, r7
   134e4:	str	r2, [sp, #32]
   134e8:	b	1328c <strspn@plt+0x2318>
   134ec:	mov	r3, r5
   134f0:	eor	r3, r3, #1
   134f4:	ldr	r4, [sp, #32]
   134f8:	mov	r1, r7
   134fc:	str	r5, [sp, #32]
   13500:	ldr	r7, [sp, #104]	; 0x68
   13504:	ldr	r6, [sp, #108]	; 0x6c
   13508:	ldr	r8, [sp, #112]	; 0x70
   1350c:	ldr	r5, [sp, #116]	; 0x74
   13510:	uxtb	r3, r3
   13514:	b	1328c <strspn@plt+0x2318>
   13518:	mov	sl, r9
   1351c:	str	r3, [sp, #56]	; 0x38
   13520:	mov	r9, fp
   13524:	ldr	r2, [sp, #64]	; 0x40
   13528:	b	132bc <strspn@plt+0x2348>
   1352c:	andeq	r8, r1, ip, lsl #19
   13530:	andeq	r8, r1, r8, lsl #19
   13534:	muleq	r1, r0, r9
   13538:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   1353c:	ldr	r2, [sp, #44]	; 0x2c
   13540:	ldrb	r1, [r2, r3]
   13544:	sub	r2, r1, #33	; 0x21
   13548:	uxtb	r2, r2
   1354c:	cmp	r2, #29
   13550:	bhi	135d0 <strspn@plt+0x265c>
   13554:	ldr	r0, [pc, #-36]	; 13538 <strspn@plt+0x25c4>
   13558:	mov	ip, #1
   1355c:	ands	r2, r0, ip, lsl r2
   13560:	beq	135f0 <strspn@plt+0x267c>
   13564:	ldr	r2, [sp, #40]	; 0x28
   13568:	cmp	r2, #0
   1356c:	bne	136e4 <strspn@plt+0x2770>
   13570:	add	r2, r8, #1
   13574:	cmp	fp, r8
   13578:	strbhi	r4, [r9, r8]
   1357c:	cmp	fp, r2
   13580:	movhi	r0, #34	; 0x22
   13584:	strbhi	r0, [r9, r2]
   13588:	add	r2, r8, #2
   1358c:	cmp	fp, r2
   13590:	movhi	r0, #34	; 0x22
   13594:	strbhi	r0, [r9, r2]
   13598:	add	r2, r8, #3
   1359c:	cmp	fp, r2
   135a0:	mov	sl, r3
   135a4:	ldr	r3, [sp, #40]	; 0x28
   135a8:	movhi	r0, #63	; 0x3f
   135ac:	mov	r4, r1
   135b0:	strbhi	r0, [r9, r2]
   135b4:	add	r8, r8, #4
   135b8:	mov	r1, r3
   135bc:	str	r3, [sp, #32]
   135c0:	b	12740 <strspn@plt+0x17cc>
   135c4:	str	r3, [sp, #32]
   135c8:	mov	r3, r7
   135cc:	b	1328c <strspn@plt+0x2318>
   135d0:	mov	r1, #0
   135d4:	str	r1, [sp, #32]
   135d8:	b	12740 <strspn@plt+0x17cc>
   135dc:	mov	sl, r9
   135e0:	ldr	r3, [sp, #56]	; 0x38
   135e4:	mov	r9, fp
   135e8:	ldr	r2, [sp, #64]	; 0x40
   135ec:	b	132bc <strspn@plt+0x2348>
   135f0:	str	r2, [sp, #32]
   135f4:	mov	r1, #0
   135f8:	b	12740 <strspn@plt+0x17cc>
   135fc:	ldr	r2, [sp, #76]	; 0x4c
   13600:	mov	sl, r9
   13604:	mov	r9, fp
   13608:	mov	fp, r8
   1360c:	ldr	r1, [sp, #72]	; 0x48
   13610:	cmp	r1, #0
   13614:	moveq	r3, #0
   13618:	andne	r3, r2, #1
   1361c:	cmp	r3, #0
   13620:	beq	1364c <strspn@plt+0x26d8>
   13624:	ldrb	r3, [r1]
   13628:	cmp	r3, #0
   1362c:	beq	1364c <strspn@plt+0x26d8>
   13630:	mov	r2, r1
   13634:	cmp	r9, fp
   13638:	strbhi	r3, [sl, fp]
   1363c:	ldrb	r3, [r2, #1]!
   13640:	add	fp, fp, #1
   13644:	cmp	r3, #0
   13648:	bne	13634 <strspn@plt+0x26c0>
   1364c:	cmp	r9, fp
   13650:	movhi	r3, #0
   13654:	strbhi	r3, [sl, fp]
   13658:	b	13314 <strspn@plt+0x23a0>
   1365c:	ldr	r3, [sp, #192]	; 0xc0
   13660:	mov	ip, #5
   13664:	str	r3, [sp, #16]
   13668:	ldr	r3, [sp, #188]	; 0xbc
   1366c:	ldr	r2, [sp, #44]	; 0x2c
   13670:	str	r3, [sp, #12]
   13674:	ldr	r3, [sp, #184]	; 0xb8
   13678:	ldr	r1, [sp, #84]	; 0x54
   1367c:	str	r3, [sp, #8]
   13680:	ldr	r3, [sp, #180]	; 0xb4
   13684:	mov	r0, r9
   13688:	str	r3, [sp, #4]
   1368c:	str	ip, [sp]
   13690:	ldr	r3, [sp, #24]
   13694:	bl	1216c <strspn@plt+0x11f8>
   13698:	mov	fp, r0
   1369c:	b	13314 <strspn@plt+0x23a0>
   136a0:	mov	sl, r9
   136a4:	mov	r9, fp
   136a8:	mov	fp, r8
   136ac:	b	1360c <strspn@plt+0x2698>
   136b0:	ldr	r1, [sp, #176]	; 0xb0
   136b4:	bl	1204c <strspn@plt+0x10d8>
   136b8:	str	r0, [sp, #192]	; 0xc0
   136bc:	b	12628 <strspn@plt+0x16b4>
   136c0:	ldr	r1, [sp, #176]	; 0xb0
   136c4:	bl	1204c <strspn@plt+0x10d8>
   136c8:	str	r0, [sp, #188]	; 0xbc
   136cc:	b	12608 <strspn@plt+0x1694>
   136d0:	mov	sl, r9
   136d4:	mov	r2, r3
   136d8:	mov	r9, fp
   136dc:	mov	fp, r8
   136e0:	b	1360c <strspn@plt+0x2698>
   136e4:	mov	sl, r9
   136e8:	mov	r9, fp
   136ec:	b	132d0 <strspn@plt+0x235c>
   136f0:	push	{r4, r5, r6, lr}
   136f4:	mov	r5, r0
   136f8:	bl	10e90 <__errno_location@plt>
   136fc:	cmp	r5, #0
   13700:	mov	r1, #48	; 0x30
   13704:	mov	r4, r0
   13708:	ldr	r0, [pc, #16]	; 13720 <strspn@plt+0x27ac>
   1370c:	ldr	r6, [r4]
   13710:	movne	r0, r5
   13714:	bl	17534 <strspn@plt+0x65c0>
   13718:	str	r6, [r4]
   1371c:	pop	{r4, r5, r6, pc}
   13720:	andeq	r9, r2, ip, ror #2
   13724:	ldr	r3, [pc, #12]	; 13738 <strspn@plt+0x27c4>
   13728:	cmp	r0, #0
   1372c:	moveq	r0, r3
   13730:	ldr	r0, [r0]
   13734:	bx	lr
   13738:	andeq	r9, r2, ip, ror #2
   1373c:	ldr	r3, [pc, #12]	; 13750 <strspn@plt+0x27dc>
   13740:	cmp	r0, #0
   13744:	moveq	r0, r3
   13748:	str	r1, [r0]
   1374c:	bx	lr
   13750:	andeq	r9, r2, ip, ror #2
   13754:	ldr	r3, [pc, #52]	; 13790 <strspn@plt+0x281c>
   13758:	cmp	r0, #0
   1375c:	moveq	r0, r3
   13760:	add	r3, r0, #8
   13764:	push	{lr}		; (str lr, [sp, #-4]!)
   13768:	lsr	lr, r1, #5
   1376c:	and	r1, r1, #31
   13770:	ldr	ip, [r3, lr, lsl #2]
   13774:	lsr	r0, ip, r1
   13778:	eor	r2, r2, r0
   1377c:	and	r2, r2, #1
   13780:	and	r0, r0, #1
   13784:	eor	r1, ip, r2, lsl r1
   13788:	str	r1, [r3, lr, lsl #2]
   1378c:	pop	{pc}		; (ldr pc, [sp], #4)
   13790:	andeq	r9, r2, ip, ror #2
   13794:	ldr	r3, [pc, #16]	; 137ac <strspn@plt+0x2838>
   13798:	cmp	r0, #0
   1379c:	movne	r3, r0
   137a0:	ldr	r0, [r3, #4]
   137a4:	str	r1, [r3, #4]
   137a8:	bx	lr
   137ac:	andeq	r9, r2, ip, ror #2
   137b0:	ldr	r3, [pc, #44]	; 137e4 <strspn@plt+0x2870>
   137b4:	cmp	r0, #0
   137b8:	moveq	r0, r3
   137bc:	mov	ip, #10
   137c0:	cmp	r2, #0
   137c4:	cmpne	r1, #0
   137c8:	str	ip, [r0]
   137cc:	beq	137dc <strspn@plt+0x2868>
   137d0:	str	r1, [r0, #40]	; 0x28
   137d4:	str	r2, [r0, #44]	; 0x2c
   137d8:	bx	lr
   137dc:	push	{r4, lr}
   137e0:	bl	10f50 <abort@plt>
   137e4:	andeq	r9, r2, ip, ror #2
   137e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   137ec:	sub	sp, sp, #24
   137f0:	ldr	ip, [pc, #108]	; 13864 <strspn@plt+0x28f0>
   137f4:	ldr	r4, [sp, #56]	; 0x38
   137f8:	mov	r9, r2
   137fc:	cmp	r4, #0
   13800:	moveq	r4, ip
   13804:	mov	sl, r3
   13808:	mov	r7, r0
   1380c:	mov	r8, r1
   13810:	bl	10e90 <__errno_location@plt>
   13814:	ldr	r3, [r4, #44]	; 0x2c
   13818:	mov	r1, r8
   1381c:	ldr	r6, [r0]
   13820:	str	r3, [sp, #16]
   13824:	ldr	r2, [r4, #40]	; 0x28
   13828:	add	r3, r4, #8
   1382c:	str	r3, [sp, #8]
   13830:	str	r2, [sp, #12]
   13834:	ldr	r2, [r4, #4]
   13838:	mov	r5, r0
   1383c:	str	r2, [sp, #4]
   13840:	ldr	ip, [r4]
   13844:	mov	r3, sl
   13848:	mov	r2, r9
   1384c:	mov	r0, r7
   13850:	str	ip, [sp]
   13854:	bl	1216c <strspn@plt+0x11f8>
   13858:	str	r6, [r5]
   1385c:	add	sp, sp, #24
   13860:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13864:	andeq	r9, r2, ip, ror #2
   13868:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1386c:	cmp	r2, #0
   13870:	sub	sp, sp, #36	; 0x24
   13874:	ldr	r4, [pc, #164]	; 13920 <strspn@plt+0x29ac>
   13878:	mov	r8, r1
   1387c:	movne	r4, r2
   13880:	mov	r7, r0
   13884:	bl	10e90 <__errno_location@plt>
   13888:	ldr	r3, [r4, #44]	; 0x2c
   1388c:	ldr	r5, [r4, #4]
   13890:	add	r9, r4, #8
   13894:	orr	r5, r5, #1
   13898:	mov	r1, #0
   1389c:	mov	r2, r7
   138a0:	ldr	fp, [r0]
   138a4:	str	r3, [sp, #16]
   138a8:	ldr	r3, [r4, #40]	; 0x28
   138ac:	stmib	sp, {r5, r9}
   138b0:	str	r3, [sp, #12]
   138b4:	ldr	r3, [r4]
   138b8:	mov	r6, r0
   138bc:	str	r3, [sp]
   138c0:	mov	r0, r1
   138c4:	mov	r3, r8
   138c8:	bl	1216c <strspn@plt+0x11f8>
   138cc:	add	r1, r0, #1
   138d0:	mov	r0, r1
   138d4:	str	r1, [sp, #28]
   138d8:	bl	16ff0 <strspn@plt+0x607c>
   138dc:	ldr	r3, [r4, #44]	; 0x2c
   138e0:	ldr	r1, [sp, #28]
   138e4:	str	r3, [sp, #16]
   138e8:	ldr	r3, [r4, #40]	; 0x28
   138ec:	str	r5, [sp, #4]
   138f0:	str	r3, [sp, #12]
   138f4:	str	r9, [sp, #8]
   138f8:	ldr	ip, [r4]
   138fc:	mov	r3, r8
   13900:	mov	r2, r7
   13904:	str	ip, [sp]
   13908:	mov	sl, r0
   1390c:	bl	1216c <strspn@plt+0x11f8>
   13910:	mov	r0, sl
   13914:	str	fp, [r6]
   13918:	add	sp, sp, #36	; 0x24
   1391c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13920:	andeq	r9, r2, ip, ror #2
   13924:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13928:	cmp	r3, #0
   1392c:	sub	sp, sp, #44	; 0x2c
   13930:	ldr	r4, [pc, #192]	; 139f8 <strspn@plt+0x2a84>
   13934:	mov	r6, r2
   13938:	movne	r4, r3
   1393c:	mov	r9, r1
   13940:	mov	r8, r0
   13944:	bl	10e90 <__errno_location@plt>
   13948:	ldr	r3, [r4, #44]	; 0x2c
   1394c:	ldr	r5, [r4, #4]
   13950:	add	sl, r4, #8
   13954:	cmp	r6, #0
   13958:	orreq	r5, r5, #1
   1395c:	mov	r1, #0
   13960:	ldr	r2, [r0]
   13964:	str	r3, [sp, #16]
   13968:	ldr	r3, [r4, #40]	; 0x28
   1396c:	stmib	sp, {r5, sl}
   13970:	str	r3, [sp, #12]
   13974:	ldr	r3, [r4]
   13978:	mov	r7, r0
   1397c:	str	r2, [sp, #28]
   13980:	str	r3, [sp]
   13984:	mov	r2, r8
   13988:	mov	r3, r9
   1398c:	mov	r0, r1
   13990:	bl	1216c <strspn@plt+0x11f8>
   13994:	add	r1, r0, #1
   13998:	mov	fp, r0
   1399c:	mov	r0, r1
   139a0:	str	r1, [sp, #36]	; 0x24
   139a4:	bl	16ff0 <strspn@plt+0x607c>
   139a8:	ldr	r3, [r4, #44]	; 0x2c
   139ac:	mov	r2, r8
   139b0:	str	r3, [sp, #16]
   139b4:	ldr	r3, [r4, #40]	; 0x28
   139b8:	str	r5, [sp, #4]
   139bc:	str	r3, [sp, #12]
   139c0:	str	sl, [sp, #8]
   139c4:	ldr	ip, [r4]
   139c8:	ldr	r1, [sp, #36]	; 0x24
   139cc:	mov	r3, r9
   139d0:	str	ip, [sp]
   139d4:	str	r0, [sp, #32]
   139d8:	bl	1216c <strspn@plt+0x11f8>
   139dc:	ldr	r2, [sp, #28]
   139e0:	cmp	r6, #0
   139e4:	str	r2, [r7]
   139e8:	ldr	r0, [sp, #32]
   139ec:	strne	fp, [r6]
   139f0:	add	sp, sp, #44	; 0x2c
   139f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139f8:	andeq	r9, r2, ip, ror #2
   139fc:	push	{r4, r5, r6, r7, r8, lr}
   13a00:	ldr	r6, [pc, #116]	; 13a7c <strspn@plt+0x2b08>
   13a04:	ldr	r3, [r6, #4]
   13a08:	ldr	r7, [r6]
   13a0c:	cmp	r3, #1
   13a10:	movgt	r5, r7
   13a14:	movgt	r4, #1
   13a18:	ble	13a38 <strspn@plt+0x2ac4>
   13a1c:	ldr	r0, [r5, #12]
   13a20:	bl	11ea0 <strspn@plt+0xf2c>
   13a24:	ldr	r3, [r6, #4]
   13a28:	add	r4, r4, #1
   13a2c:	cmp	r3, r4
   13a30:	add	r5, r5, #8
   13a34:	bgt	13a1c <strspn@plt+0x2aa8>
   13a38:	ldr	r0, [r7, #4]
   13a3c:	ldr	r4, [pc, #60]	; 13a80 <strspn@plt+0x2b0c>
   13a40:	cmp	r0, r4
   13a44:	beq	13a58 <strspn@plt+0x2ae4>
   13a48:	bl	11ea0 <strspn@plt+0xf2c>
   13a4c:	mov	r3, #256	; 0x100
   13a50:	str	r4, [r6, #12]
   13a54:	str	r3, [r6, #8]
   13a58:	ldr	r4, [pc, #36]	; 13a84 <strspn@plt+0x2b10>
   13a5c:	cmp	r7, r4
   13a60:	beq	13a70 <strspn@plt+0x2afc>
   13a64:	mov	r0, r7
   13a68:	bl	11ea0 <strspn@plt+0xf2c>
   13a6c:	str	r4, [r6]
   13a70:	mov	r3, #1
   13a74:	str	r3, [r6, #4]
   13a78:	pop	{r4, r5, r6, r7, r8, pc}
   13a7c:	strdeq	r9, [r2], -ip
   13a80:	muleq	r2, ip, r1
   13a84:	andeq	r9, r2, r4, lsl #2
   13a88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a8c:	sub	sp, sp, #44	; 0x2c
   13a90:	mov	r5, r0
   13a94:	mov	sl, r1
   13a98:	bl	10e90 <__errno_location@plt>
   13a9c:	ldr	r4, [pc, #400]	; 13c34 <strspn@plt+0x2cc0>
   13aa0:	cmn	r5, #-2147483647	; 0x80000001
   13aa4:	ldr	r6, [r4]
   13aa8:	mov	r8, r0
   13aac:	movne	r0, #0
   13ab0:	moveq	r0, #1
   13ab4:	ldr	r3, [r8]
   13ab8:	orrs	r0, r0, r5, lsr #31
   13abc:	str	r3, [sp, #24]
   13ac0:	bne	13c30 <strspn@plt+0x2cbc>
   13ac4:	ldr	r2, [r4, #4]
   13ac8:	cmp	r5, r2
   13acc:	blt	13b2c <strspn@plt+0x2bb8>
   13ad0:	add	r7, r4, #8
   13ad4:	cmp	r6, r7
   13ad8:	str	r2, [sp, #36]	; 0x24
   13adc:	beq	13c00 <strspn@plt+0x2c8c>
   13ae0:	mov	r3, #8
   13ae4:	sub	r2, r5, r2
   13ae8:	mov	r0, r6
   13aec:	str	r3, [sp]
   13af0:	add	r2, r2, #1
   13af4:	mvn	r3, #-2147483648	; 0x80000000
   13af8:	add	r1, sp, #36	; 0x24
   13afc:	bl	1720c <strspn@plt+0x6298>
   13b00:	mov	r6, r0
   13b04:	str	r0, [r4]
   13b08:	ldr	r0, [r4, #4]
   13b0c:	ldr	r2, [sp, #36]	; 0x24
   13b10:	mov	r1, #0
   13b14:	sub	r2, r2, r0
   13b18:	add	r0, r6, r0, lsl #3
   13b1c:	lsl	r2, r2, #3
   13b20:	bl	10eb4 <memset@plt>
   13b24:	ldr	r3, [sp, #36]	; 0x24
   13b28:	str	r3, [r4, #4]
   13b2c:	ldr	r4, [pc, #260]	; 13c38 <strspn@plt+0x2cc4>
   13b30:	add	fp, r6, r5, lsl #3
   13b34:	ldr	r9, [r6, r5, lsl #3]
   13b38:	ldr	r0, [r4, #4]
   13b3c:	ldr	r3, [r4]
   13b40:	ldr	r7, [fp, #4]
   13b44:	ldr	r1, [r4, #44]	; 0x2c
   13b48:	ldr	r2, [r4, #40]	; 0x28
   13b4c:	orr	r0, r0, #1
   13b50:	str	r3, [sp]
   13b54:	add	r3, r4, #8
   13b58:	str	r0, [sp, #28]
   13b5c:	str	r0, [sp, #4]
   13b60:	str	r1, [sp, #16]
   13b64:	str	r2, [sp, #12]
   13b68:	str	r3, [sp, #8]
   13b6c:	mov	r0, r7
   13b70:	mov	r1, r9
   13b74:	mvn	r3, #0
   13b78:	mov	r2, sl
   13b7c:	bl	1216c <strspn@plt+0x11f8>
   13b80:	cmp	r9, r0
   13b84:	bhi	13bec <strspn@plt+0x2c78>
   13b88:	add	r3, r4, #48	; 0x30
   13b8c:	add	r9, r0, #1
   13b90:	cmp	r7, r3
   13b94:	str	r9, [r6, r5, lsl #3]
   13b98:	beq	13ba4 <strspn@plt+0x2c30>
   13b9c:	mov	r0, r7
   13ba0:	bl	11ea0 <strspn@plt+0xf2c>
   13ba4:	mov	r0, r9
   13ba8:	bl	16ff0 <strspn@plt+0x607c>
   13bac:	ldr	ip, [r4, #44]	; 0x2c
   13bb0:	ldr	r3, [r4]
   13bb4:	ldr	lr, [r4, #40]	; 0x28
   13bb8:	ldr	r4, [pc, #124]	; 13c3c <strspn@plt+0x2cc8>
   13bbc:	mov	r2, sl
   13bc0:	mov	r1, r9
   13bc4:	str	r0, [fp, #4]
   13bc8:	str	r4, [sp, #8]
   13bcc:	ldr	r4, [sp, #28]
   13bd0:	str	r3, [sp]
   13bd4:	str	r4, [sp, #4]
   13bd8:	str	ip, [sp, #16]
   13bdc:	str	lr, [sp, #12]
   13be0:	mvn	r3, #0
   13be4:	mov	r7, r0
   13be8:	bl	1216c <strspn@plt+0x11f8>
   13bec:	ldr	r3, [sp, #24]
   13bf0:	mov	r0, r7
   13bf4:	str	r3, [r8]
   13bf8:	add	sp, sp, #44	; 0x2c
   13bfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c00:	mov	r3, #8
   13c04:	sub	r2, r5, r2
   13c08:	str	r3, [sp]
   13c0c:	add	r1, sp, #36	; 0x24
   13c10:	add	r2, r2, #1
   13c14:	mvn	r3, #-2147483648	; 0x80000000
   13c18:	bl	1720c <strspn@plt+0x6298>
   13c1c:	mov	r6, r0
   13c20:	ldm	r7, {r0, r1}
   13c24:	str	r6, [r4]
   13c28:	stm	r6, {r0, r1}
   13c2c:	b	13b08 <strspn@plt+0x2b94>
   13c30:	bl	10f50 <abort@plt>
   13c34:	strdeq	r9, [r2], -ip
   13c38:	andeq	r9, r2, ip, ror #2
   13c3c:	andeq	r9, r2, r4, ror r1
   13c40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c44:	sub	sp, sp, #52	; 0x34
   13c48:	mov	r5, r0
   13c4c:	mov	sl, r1
   13c50:	mov	fp, r2
   13c54:	bl	10e90 <__errno_location@plt>
   13c58:	ldr	r4, [pc, #408]	; 13df8 <strspn@plt+0x2e84>
   13c5c:	cmn	r5, #-2147483647	; 0x80000001
   13c60:	ldr	r6, [r4]
   13c64:	mov	r8, r0
   13c68:	movne	r0, #0
   13c6c:	moveq	r0, #1
   13c70:	ldr	r3, [r8]
   13c74:	orrs	r0, r0, r5, lsr #31
   13c78:	str	r3, [sp, #28]
   13c7c:	bne	13df4 <strspn@plt+0x2e80>
   13c80:	ldr	r2, [r4, #4]
   13c84:	cmp	r5, r2
   13c88:	blt	13ce8 <strspn@plt+0x2d74>
   13c8c:	add	r7, r4, #8
   13c90:	cmp	r6, r7
   13c94:	str	r2, [sp, #44]	; 0x2c
   13c98:	beq	13dc4 <strspn@plt+0x2e50>
   13c9c:	mov	r3, #8
   13ca0:	sub	r2, r5, r2
   13ca4:	mov	r0, r6
   13ca8:	str	r3, [sp]
   13cac:	add	r2, r2, #1
   13cb0:	mvn	r3, #-2147483648	; 0x80000000
   13cb4:	add	r1, sp, #44	; 0x2c
   13cb8:	bl	1720c <strspn@plt+0x6298>
   13cbc:	mov	r6, r0
   13cc0:	str	r0, [r4]
   13cc4:	ldr	r0, [r4, #4]
   13cc8:	ldr	r2, [sp, #44]	; 0x2c
   13ccc:	mov	r1, #0
   13cd0:	sub	r2, r2, r0
   13cd4:	add	r0, r6, r0, lsl #3
   13cd8:	lsl	r2, r2, #3
   13cdc:	bl	10eb4 <memset@plt>
   13ce0:	ldr	r3, [sp, #44]	; 0x2c
   13ce4:	str	r3, [r4, #4]
   13ce8:	ldr	r4, [pc, #268]	; 13dfc <strspn@plt+0x2e88>
   13cec:	add	r3, r6, r5, lsl #3
   13cf0:	str	r3, [sp, #32]
   13cf4:	ldr	r7, [r3, #4]
   13cf8:	ldr	r0, [r4, #4]
   13cfc:	ldr	r3, [r4]
   13d00:	ldr	r9, [r6, r5, lsl #3]
   13d04:	ldr	r1, [r4, #44]	; 0x2c
   13d08:	ldr	r2, [r4, #40]	; 0x28
   13d0c:	orr	r0, r0, #1
   13d10:	str	r3, [sp]
   13d14:	add	r3, r4, #8
   13d18:	str	r0, [sp, #36]	; 0x24
   13d1c:	str	r0, [sp, #4]
   13d20:	str	r1, [sp, #16]
   13d24:	str	r2, [sp, #12]
   13d28:	str	r3, [sp, #8]
   13d2c:	mov	r0, r7
   13d30:	mov	r1, r9
   13d34:	mov	r3, fp
   13d38:	mov	r2, sl
   13d3c:	bl	1216c <strspn@plt+0x11f8>
   13d40:	cmp	r9, r0
   13d44:	bhi	13db0 <strspn@plt+0x2e3c>
   13d48:	add	r3, r4, #48	; 0x30
   13d4c:	add	r9, r0, #1
   13d50:	cmp	r7, r3
   13d54:	str	r9, [r6, r5, lsl #3]
   13d58:	beq	13d64 <strspn@plt+0x2df0>
   13d5c:	mov	r0, r7
   13d60:	bl	11ea0 <strspn@plt+0xf2c>
   13d64:	mov	r0, r9
   13d68:	bl	16ff0 <strspn@plt+0x607c>
   13d6c:	ldr	ip, [sp, #32]
   13d70:	ldr	lr, [r4, #44]	; 0x2c
   13d74:	ldr	r5, [r4, #40]	; 0x28
   13d78:	mov	r3, fp
   13d7c:	mov	r2, sl
   13d80:	mov	r1, r9
   13d84:	str	r0, [ip, #4]
   13d88:	ldr	ip, [r4]
   13d8c:	ldr	r4, [pc, #108]	; 13e00 <strspn@plt+0x2e8c>
   13d90:	str	lr, [sp, #16]
   13d94:	str	r4, [sp, #8]
   13d98:	ldr	r4, [sp, #36]	; 0x24
   13d9c:	str	r5, [sp, #12]
   13da0:	str	r4, [sp, #4]
   13da4:	str	ip, [sp]
   13da8:	mov	r7, r0
   13dac:	bl	1216c <strspn@plt+0x11f8>
   13db0:	ldr	r3, [sp, #28]
   13db4:	mov	r0, r7
   13db8:	str	r3, [r8]
   13dbc:	add	sp, sp, #52	; 0x34
   13dc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13dc4:	mov	r3, #8
   13dc8:	sub	r2, r5, r2
   13dcc:	str	r3, [sp]
   13dd0:	add	r1, sp, #44	; 0x2c
   13dd4:	add	r2, r2, #1
   13dd8:	mvn	r3, #-2147483648	; 0x80000000
   13ddc:	bl	1720c <strspn@plt+0x6298>
   13de0:	mov	r6, r0
   13de4:	ldm	r7, {r0, r1}
   13de8:	str	r6, [r4]
   13dec:	stm	r6, {r0, r1}
   13df0:	b	13cc4 <strspn@plt+0x2d50>
   13df4:	bl	10f50 <abort@plt>
   13df8:	strdeq	r9, [r2], -ip
   13dfc:	andeq	r9, r2, ip, ror #2
   13e00:	andeq	r9, r2, r4, ror r1
   13e04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e08:	sub	sp, sp, #44	; 0x2c
   13e0c:	mov	sl, r0
   13e10:	bl	10e90 <__errno_location@plt>
   13e14:	ldr	r4, [pc, #352]	; 13f7c <strspn@plt+0x3008>
   13e18:	ldr	r2, [r4, #4]
   13e1c:	ldr	r5, [r4]
   13e20:	cmp	r2, #0
   13e24:	ldr	r3, [r0]
   13e28:	mov	r8, r0
   13e2c:	str	r3, [sp, #28]
   13e30:	bgt	13e8c <strspn@plt+0x2f18>
   13e34:	add	r6, r4, #8
   13e38:	cmp	r5, r6
   13e3c:	str	r2, [sp, #36]	; 0x24
   13e40:	beq	13f4c <strspn@plt+0x2fd8>
   13e44:	mov	r3, #8
   13e48:	mov	r0, r5
   13e4c:	str	r3, [sp]
   13e50:	rsb	r2, r2, #1
   13e54:	mvn	r3, #-2147483648	; 0x80000000
   13e58:	add	r1, sp, #36	; 0x24
   13e5c:	bl	1720c <strspn@plt+0x6298>
   13e60:	mov	r5, r0
   13e64:	str	r0, [r4]
   13e68:	ldr	r0, [r4, #4]
   13e6c:	ldr	r2, [sp, #36]	; 0x24
   13e70:	mov	r1, #0
   13e74:	sub	r2, r2, r0
   13e78:	add	r0, r5, r0, lsl #3
   13e7c:	lsl	r2, r2, #3
   13e80:	bl	10eb4 <memset@plt>
   13e84:	ldr	r3, [sp, #36]	; 0x24
   13e88:	str	r3, [r4, #4]
   13e8c:	ldr	r4, [pc, #236]	; 13f80 <strspn@plt+0x300c>
   13e90:	ldr	r9, [r5]
   13e94:	ldr	r6, [r5, #4]
   13e98:	ldr	r7, [r4, #4]
   13e9c:	ldr	r1, [r4, #44]	; 0x2c
   13ea0:	ldr	r2, [r4, #40]	; 0x28
   13ea4:	ldr	r3, [r4]
   13ea8:	orr	r7, r7, #1
   13eac:	add	fp, r4, #8
   13eb0:	str	r1, [sp, #16]
   13eb4:	str	r2, [sp, #12]
   13eb8:	str	r3, [sp]
   13ebc:	str	r7, [sp, #4]
   13ec0:	str	fp, [sp, #8]
   13ec4:	mov	r1, r9
   13ec8:	mov	r0, r6
   13ecc:	mvn	r3, #0
   13ed0:	mov	r2, sl
   13ed4:	bl	1216c <strspn@plt+0x11f8>
   13ed8:	cmp	r9, r0
   13edc:	bhi	13f38 <strspn@plt+0x2fc4>
   13ee0:	add	r3, r4, #48	; 0x30
   13ee4:	add	r9, r0, #1
   13ee8:	cmp	r6, r3
   13eec:	str	r9, [r5]
   13ef0:	beq	13efc <strspn@plt+0x2f88>
   13ef4:	mov	r0, r6
   13ef8:	bl	11ea0 <strspn@plt+0xf2c>
   13efc:	mov	r0, r9
   13f00:	bl	16ff0 <strspn@plt+0x607c>
   13f04:	ldr	ip, [r4, #44]	; 0x2c
   13f08:	ldr	r3, [r4]
   13f0c:	ldr	lr, [r4, #40]	; 0x28
   13f10:	mov	r2, sl
   13f14:	mov	r1, r9
   13f18:	str	r0, [r5, #4]
   13f1c:	str	r3, [sp]
   13f20:	stmib	sp, {r7, fp}
   13f24:	str	ip, [sp, #16]
   13f28:	str	lr, [sp, #12]
   13f2c:	mvn	r3, #0
   13f30:	mov	r6, r0
   13f34:	bl	1216c <strspn@plt+0x11f8>
   13f38:	ldr	r3, [sp, #28]
   13f3c:	mov	r0, r6
   13f40:	str	r3, [r8]
   13f44:	add	sp, sp, #44	; 0x2c
   13f48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f4c:	mov	r3, #8
   13f50:	str	r3, [sp]
   13f54:	add	r1, sp, #36	; 0x24
   13f58:	rsb	r2, r2, #1
   13f5c:	mvn	r3, #-2147483648	; 0x80000000
   13f60:	mov	r0, #0
   13f64:	bl	1720c <strspn@plt+0x6298>
   13f68:	mov	r5, r0
   13f6c:	ldm	r6, {r0, r1}
   13f70:	str	r5, [r4]
   13f74:	stm	r5, {r0, r1}
   13f78:	b	13e68 <strspn@plt+0x2ef4>
   13f7c:	strdeq	r9, [r2], -ip
   13f80:	andeq	r9, r2, ip, ror #2
   13f84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f88:	sub	sp, sp, #44	; 0x2c
   13f8c:	mov	r9, r0
   13f90:	mov	sl, r1
   13f94:	bl	10e90 <__errno_location@plt>
   13f98:	ldr	r4, [pc, #364]	; 1410c <strspn@plt+0x3198>
   13f9c:	ldr	r2, [r4, #4]
   13fa0:	ldr	r5, [r4]
   13fa4:	cmp	r2, #0
   13fa8:	ldr	r3, [r0]
   13fac:	mov	r7, r0
   13fb0:	str	r3, [sp, #24]
   13fb4:	bgt	14010 <strspn@plt+0x309c>
   13fb8:	add	r6, r4, #8
   13fbc:	cmp	r5, r6
   13fc0:	str	r2, [sp, #36]	; 0x24
   13fc4:	beq	140dc <strspn@plt+0x3168>
   13fc8:	mov	r3, #8
   13fcc:	mov	r0, r5
   13fd0:	str	r3, [sp]
   13fd4:	rsb	r2, r2, #1
   13fd8:	mvn	r3, #-2147483648	; 0x80000000
   13fdc:	add	r1, sp, #36	; 0x24
   13fe0:	bl	1720c <strspn@plt+0x6298>
   13fe4:	mov	r5, r0
   13fe8:	str	r0, [r4]
   13fec:	ldr	r0, [r4, #4]
   13ff0:	ldr	r2, [sp, #36]	; 0x24
   13ff4:	mov	r1, #0
   13ff8:	sub	r2, r2, r0
   13ffc:	add	r0, r5, r0, lsl #3
   14000:	lsl	r2, r2, #3
   14004:	bl	10eb4 <memset@plt>
   14008:	ldr	r3, [sp, #36]	; 0x24
   1400c:	str	r3, [r4, #4]
   14010:	ldr	r4, [pc, #248]	; 14110 <strspn@plt+0x319c>
   14014:	ldr	r8, [r5]
   14018:	ldr	r6, [r5, #4]
   1401c:	ldr	r0, [r4, #4]
   14020:	ldr	r1, [r4, #44]	; 0x2c
   14024:	ldr	r2, [r4, #40]	; 0x28
   14028:	ldr	r3, [r4]
   1402c:	orr	r0, r0, #1
   14030:	add	fp, r4, #8
   14034:	str	r0, [sp, #28]
   14038:	str	r0, [sp, #4]
   1403c:	str	r1, [sp, #16]
   14040:	str	r2, [sp, #12]
   14044:	str	r3, [sp]
   14048:	str	fp, [sp, #8]
   1404c:	mov	r1, r8
   14050:	mov	r0, r6
   14054:	mov	r3, sl
   14058:	mov	r2, r9
   1405c:	bl	1216c <strspn@plt+0x11f8>
   14060:	cmp	r8, r0
   14064:	bhi	140c8 <strspn@plt+0x3154>
   14068:	add	r3, r4, #48	; 0x30
   1406c:	add	r8, r0, #1
   14070:	cmp	r6, r3
   14074:	str	r8, [r5]
   14078:	beq	14084 <strspn@plt+0x3110>
   1407c:	mov	r0, r6
   14080:	bl	11ea0 <strspn@plt+0xf2c>
   14084:	mov	r0, r8
   14088:	bl	16ff0 <strspn@plt+0x607c>
   1408c:	ldr	lr, [r4, #44]	; 0x2c
   14090:	ldr	ip, [r4]
   14094:	mov	r3, sl
   14098:	mov	r2, r9
   1409c:	mov	r1, r8
   140a0:	str	r0, [r5, #4]
   140a4:	ldr	r5, [r4, #40]	; 0x28
   140a8:	ldr	r4, [sp, #28]
   140ac:	str	fp, [sp, #8]
   140b0:	str	r4, [sp, #4]
   140b4:	str	lr, [sp, #16]
   140b8:	str	r5, [sp, #12]
   140bc:	str	ip, [sp]
   140c0:	mov	r6, r0
   140c4:	bl	1216c <strspn@plt+0x11f8>
   140c8:	ldr	r3, [sp, #24]
   140cc:	mov	r0, r6
   140d0:	str	r3, [r7]
   140d4:	add	sp, sp, #44	; 0x2c
   140d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   140dc:	mov	r3, #8
   140e0:	str	r3, [sp]
   140e4:	add	r1, sp, #36	; 0x24
   140e8:	rsb	r2, r2, #1
   140ec:	mvn	r3, #-2147483648	; 0x80000000
   140f0:	mov	r0, #0
   140f4:	bl	1720c <strspn@plt+0x6298>
   140f8:	mov	r5, r0
   140fc:	ldm	r6, {r0, r1}
   14100:	str	r5, [r4]
   14104:	stm	r5, {r0, r1}
   14108:	b	13fec <strspn@plt+0x3078>
   1410c:	strdeq	r9, [r2], -ip
   14110:	andeq	r9, r2, ip, ror #2
   14114:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14118:	sub	sp, sp, #132	; 0x84
   1411c:	mov	r5, r1
   14120:	mov	r4, r0
   14124:	mov	r9, r2
   14128:	add	r0, sp, #80	; 0x50
   1412c:	mov	r2, #48	; 0x30
   14130:	mov	r1, #0
   14134:	bl	10eb4 <memset@plt>
   14138:	cmp	r5, #10
   1413c:	beq	142f4 <strspn@plt+0x3380>
   14140:	add	lr, sp, #80	; 0x50
   14144:	str	r5, [sp, #80]	; 0x50
   14148:	ldm	lr!, {r0, r1, r2, r3}
   1414c:	add	ip, sp, #32
   14150:	ldr	r6, [pc, #416]	; 142f8 <strspn@plt+0x3384>
   14154:	stmia	ip!, {r0, r1, r2, r3}
   14158:	ldm	lr!, {r0, r1, r2, r3}
   1415c:	stmia	ip!, {r0, r1, r2, r3}
   14160:	ldm	lr, {r0, r1, r2, r3}
   14164:	stm	ip, {r0, r1, r2, r3}
   14168:	bl	10e90 <__errno_location@plt>
   1416c:	cmn	r4, #-2147483647	; 0x80000001
   14170:	ldr	r5, [r6]
   14174:	mov	r7, r0
   14178:	movne	r0, #0
   1417c:	moveq	r0, #1
   14180:	ldr	r3, [r7]
   14184:	orrs	r0, r0, r4, lsr #31
   14188:	str	r3, [sp, #24]
   1418c:	bne	142f4 <strspn@plt+0x3380>
   14190:	ldr	r2, [r6, #4]
   14194:	cmp	r4, r2
   14198:	blt	141f8 <strspn@plt+0x3284>
   1419c:	add	r8, r6, #8
   141a0:	cmp	r5, r8
   141a4:	str	r2, [sp, #80]	; 0x50
   141a8:	beq	142c4 <strspn@plt+0x3350>
   141ac:	mov	r3, #8
   141b0:	sub	r2, r4, r2
   141b4:	mov	r0, r5
   141b8:	str	r3, [sp]
   141bc:	add	r2, r2, #1
   141c0:	add	r1, sp, #80	; 0x50
   141c4:	mvn	r3, #-2147483648	; 0x80000000
   141c8:	bl	1720c <strspn@plt+0x6298>
   141cc:	mov	r5, r0
   141d0:	str	r0, [r6]
   141d4:	ldr	r0, [r6, #4]
   141d8:	ldr	r2, [sp, #80]	; 0x50
   141dc:	mov	r1, #0
   141e0:	sub	r2, r2, r0
   141e4:	add	r0, r5, r0, lsl #3
   141e8:	lsl	r2, r2, #3
   141ec:	bl	10eb4 <memset@plt>
   141f0:	ldr	r3, [sp, #80]	; 0x50
   141f4:	str	r3, [r6, #4]
   141f8:	add	fp, r5, r4, lsl #3
   141fc:	ldr	r1, [sp, #36]	; 0x24
   14200:	ldr	r8, [r5, r4, lsl #3]
   14204:	ldr	r6, [fp, #4]
   14208:	ldr	r2, [sp, #72]	; 0x48
   1420c:	ldr	r3, [sp, #32]
   14210:	ldr	ip, [sp, #76]	; 0x4c
   14214:	orr	r1, r1, #1
   14218:	add	sl, sp, #40	; 0x28
   1421c:	str	r1, [sp, #28]
   14220:	str	r1, [sp, #4]
   14224:	str	r2, [sp, #12]
   14228:	str	r3, [sp]
   1422c:	mov	r0, r6
   14230:	mov	r1, r8
   14234:	str	ip, [sp, #16]
   14238:	str	sl, [sp, #8]
   1423c:	mvn	r3, #0
   14240:	mov	r2, r9
   14244:	bl	1216c <strspn@plt+0x11f8>
   14248:	cmp	r8, r0
   1424c:	bhi	142b0 <strspn@plt+0x333c>
   14250:	ldr	r3, [pc, #164]	; 142fc <strspn@plt+0x3388>
   14254:	add	r8, r0, #1
   14258:	cmp	r6, r3
   1425c:	str	r8, [r5, r4, lsl #3]
   14260:	beq	1426c <strspn@plt+0x32f8>
   14264:	mov	r0, r6
   14268:	bl	11ea0 <strspn@plt+0xf2c>
   1426c:	mov	r0, r8
   14270:	bl	16ff0 <strspn@plt+0x607c>
   14274:	ldr	lr, [sp, #76]	; 0x4c
   14278:	ldr	r3, [sp, #32]
   1427c:	ldr	ip, [sp, #72]	; 0x48
   14280:	ldr	r4, [sp, #28]
   14284:	mov	r2, r9
   14288:	mov	r1, r8
   1428c:	str	r0, [fp, #4]
   14290:	str	r3, [sp]
   14294:	str	sl, [sp, #8]
   14298:	str	r4, [sp, #4]
   1429c:	str	lr, [sp, #16]
   142a0:	str	ip, [sp, #12]
   142a4:	mvn	r3, #0
   142a8:	mov	r6, r0
   142ac:	bl	1216c <strspn@plt+0x11f8>
   142b0:	ldr	r3, [sp, #24]
   142b4:	mov	r0, r6
   142b8:	str	r3, [r7]
   142bc:	add	sp, sp, #132	; 0x84
   142c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142c4:	mov	r3, #8
   142c8:	sub	r2, r4, r2
   142cc:	add	r1, sp, #80	; 0x50
   142d0:	str	r3, [sp]
   142d4:	add	r2, r2, #1
   142d8:	mvn	r3, #-2147483648	; 0x80000000
   142dc:	bl	1720c <strspn@plt+0x6298>
   142e0:	mov	r5, r0
   142e4:	ldm	r8, {r0, r1}
   142e8:	str	r5, [r6]
   142ec:	stm	r5, {r0, r1}
   142f0:	b	141d4 <strspn@plt+0x3260>
   142f4:	bl	10f50 <abort@plt>
   142f8:	strdeq	r9, [r2], -ip
   142fc:	muleq	r2, ip, r1
   14300:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14304:	sub	sp, sp, #132	; 0x84
   14308:	mov	r5, r1
   1430c:	mov	r4, r0
   14310:	mov	r9, r2
   14314:	add	r0, sp, #80	; 0x50
   14318:	mov	r2, #48	; 0x30
   1431c:	mov	r1, #0
   14320:	mov	sl, r3
   14324:	bl	10eb4 <memset@plt>
   14328:	cmp	r5, #10
   1432c:	beq	144e8 <strspn@plt+0x3574>
   14330:	add	lr, sp, #80	; 0x50
   14334:	str	r5, [sp, #80]	; 0x50
   14338:	ldm	lr!, {r0, r1, r2, r3}
   1433c:	add	ip, sp, #32
   14340:	ldr	r6, [pc, #420]	; 144ec <strspn@plt+0x3578>
   14344:	stmia	ip!, {r0, r1, r2, r3}
   14348:	ldm	lr!, {r0, r1, r2, r3}
   1434c:	stmia	ip!, {r0, r1, r2, r3}
   14350:	ldm	lr, {r0, r1, r2, r3}
   14354:	stm	ip, {r0, r1, r2, r3}
   14358:	bl	10e90 <__errno_location@plt>
   1435c:	cmn	r4, #-2147483647	; 0x80000001
   14360:	ldr	r5, [r6]
   14364:	mov	r7, r0
   14368:	movne	r0, #0
   1436c:	moveq	r0, #1
   14370:	ldr	r3, [r7]
   14374:	orrs	r0, r0, r4, lsr #31
   14378:	str	r3, [sp, #24]
   1437c:	bne	144e8 <strspn@plt+0x3574>
   14380:	ldr	r2, [r6, #4]
   14384:	cmp	r4, r2
   14388:	blt	143e8 <strspn@plt+0x3474>
   1438c:	add	r8, r6, #8
   14390:	cmp	r5, r8
   14394:	str	r2, [sp, #80]	; 0x50
   14398:	beq	144b8 <strspn@plt+0x3544>
   1439c:	mov	r3, #8
   143a0:	sub	r2, r4, r2
   143a4:	mov	r0, r5
   143a8:	str	r3, [sp]
   143ac:	add	r2, r2, #1
   143b0:	add	r1, sp, #80	; 0x50
   143b4:	mvn	r3, #-2147483648	; 0x80000000
   143b8:	bl	1720c <strspn@plt+0x6298>
   143bc:	mov	r5, r0
   143c0:	str	r0, [r6]
   143c4:	ldr	r0, [r6, #4]
   143c8:	ldr	r2, [sp, #80]	; 0x50
   143cc:	mov	r1, #0
   143d0:	sub	r2, r2, r0
   143d4:	add	r0, r5, r0, lsl #3
   143d8:	lsl	r2, r2, #3
   143dc:	bl	10eb4 <memset@plt>
   143e0:	ldr	r3, [sp, #80]	; 0x50
   143e4:	str	r3, [r6, #4]
   143e8:	add	fp, r5, r4, lsl #3
   143ec:	ldr	r3, [sp, #32]
   143f0:	ldr	r1, [sp, #36]	; 0x24
   143f4:	ldr	r8, [r5, r4, lsl #3]
   143f8:	ldr	r6, [fp, #4]
   143fc:	ldr	r2, [sp, #72]	; 0x48
   14400:	ldr	ip, [sp, #76]	; 0x4c
   14404:	orr	r1, r1, #1
   14408:	str	r3, [sp]
   1440c:	add	r3, sp, #40	; 0x28
   14410:	str	r1, [sp, #28]
   14414:	str	r1, [sp, #4]
   14418:	str	r2, [sp, #12]
   1441c:	str	r3, [sp, #8]
   14420:	mov	r0, r6
   14424:	mov	r1, r8
   14428:	str	ip, [sp, #16]
   1442c:	mov	r3, sl
   14430:	mov	r2, r9
   14434:	bl	1216c <strspn@plt+0x11f8>
   14438:	cmp	r8, r0
   1443c:	bhi	144a4 <strspn@plt+0x3530>
   14440:	ldr	r3, [pc, #168]	; 144f0 <strspn@plt+0x357c>
   14444:	add	r8, r0, #1
   14448:	cmp	r6, r3
   1444c:	str	r8, [r5, r4, lsl #3]
   14450:	beq	1445c <strspn@plt+0x34e8>
   14454:	mov	r0, r6
   14458:	bl	11ea0 <strspn@plt+0xf2c>
   1445c:	mov	r0, r8
   14460:	bl	16ff0 <strspn@plt+0x607c>
   14464:	add	lr, sp, #40	; 0x28
   14468:	ldr	ip, [sp, #76]	; 0x4c
   1446c:	ldr	r4, [sp, #72]	; 0x48
   14470:	ldr	r5, [sp, #28]
   14474:	mov	r3, sl
   14478:	mov	r2, r9
   1447c:	mov	r1, r8
   14480:	str	r0, [fp, #4]
   14484:	str	lr, [sp, #8]
   14488:	ldr	lr, [sp, #32]
   1448c:	str	r5, [sp, #4]
   14490:	str	ip, [sp, #16]
   14494:	str	r4, [sp, #12]
   14498:	str	lr, [sp]
   1449c:	mov	r6, r0
   144a0:	bl	1216c <strspn@plt+0x11f8>
   144a4:	ldr	r3, [sp, #24]
   144a8:	mov	r0, r6
   144ac:	str	r3, [r7]
   144b0:	add	sp, sp, #132	; 0x84
   144b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   144b8:	mov	r3, #8
   144bc:	sub	r2, r4, r2
   144c0:	add	r1, sp, #80	; 0x50
   144c4:	str	r3, [sp]
   144c8:	add	r2, r2, #1
   144cc:	mvn	r3, #-2147483648	; 0x80000000
   144d0:	bl	1720c <strspn@plt+0x6298>
   144d4:	mov	r5, r0
   144d8:	ldm	r8, {r0, r1}
   144dc:	str	r5, [r6]
   144e0:	stm	r5, {r0, r1}
   144e4:	b	143c4 <strspn@plt+0x3450>
   144e8:	bl	10f50 <abort@plt>
   144ec:	strdeq	r9, [r2], -ip
   144f0:	muleq	r2, ip, r1
   144f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   144f8:	sub	sp, sp, #124	; 0x7c
   144fc:	mov	r4, r0
   14500:	mov	r9, r1
   14504:	add	r0, sp, #72	; 0x48
   14508:	mov	r2, #48	; 0x30
   1450c:	mov	r1, #0
   14510:	bl	10eb4 <memset@plt>
   14514:	cmp	r4, #10
   14518:	beq	146a4 <strspn@plt+0x3730>
   1451c:	add	lr, sp, #72	; 0x48
   14520:	str	r4, [sp, #72]	; 0x48
   14524:	ldm	lr!, {r0, r1, r2, r3}
   14528:	add	ip, sp, #24
   1452c:	ldr	r5, [pc, #372]	; 146a8 <strspn@plt+0x3734>
   14530:	stmia	ip!, {r0, r1, r2, r3}
   14534:	ldm	lr!, {r0, r1, r2, r3}
   14538:	stmia	ip!, {r0, r1, r2, r3}
   1453c:	ldm	lr, {r0, r1, r2, r3}
   14540:	stm	ip, {r0, r1, r2, r3}
   14544:	bl	10e90 <__errno_location@plt>
   14548:	ldr	r2, [r5, #4]
   1454c:	ldr	r4, [r5]
   14550:	cmp	r2, #0
   14554:	mov	r7, r0
   14558:	ldr	fp, [r0]
   1455c:	bgt	145b8 <strspn@plt+0x3644>
   14560:	add	r6, r5, #8
   14564:	cmp	r4, r6
   14568:	str	r2, [sp, #72]	; 0x48
   1456c:	beq	14674 <strspn@plt+0x3700>
   14570:	mov	r3, #8
   14574:	mov	r0, r4
   14578:	str	r3, [sp]
   1457c:	rsb	r2, r2, #1
   14580:	add	r1, sp, #72	; 0x48
   14584:	mvn	r3, #-2147483648	; 0x80000000
   14588:	bl	1720c <strspn@plt+0x6298>
   1458c:	mov	r4, r0
   14590:	str	r0, [r5]
   14594:	ldr	r0, [r5, #4]
   14598:	ldr	r2, [sp, #72]	; 0x48
   1459c:	mov	r1, #0
   145a0:	sub	r2, r2, r0
   145a4:	add	r0, r4, r0, lsl #3
   145a8:	lsl	r2, r2, #3
   145ac:	bl	10eb4 <memset@plt>
   145b0:	ldr	r3, [sp, #72]	; 0x48
   145b4:	str	r3, [r5, #4]
   145b8:	ldr	r6, [sp, #28]
   145bc:	ldr	r8, [r4]
   145c0:	ldr	r5, [r4, #4]
   145c4:	ldr	r2, [sp, #64]	; 0x40
   145c8:	ldr	r3, [sp, #24]
   145cc:	ldr	ip, [sp, #68]	; 0x44
   145d0:	orr	r6, r6, #1
   145d4:	add	sl, sp, #32
   145d8:	str	r2, [sp, #12]
   145dc:	str	r3, [sp]
   145e0:	str	r6, [sp, #4]
   145e4:	mov	r1, r8
   145e8:	mov	r0, r5
   145ec:	str	ip, [sp, #16]
   145f0:	str	sl, [sp, #8]
   145f4:	mvn	r3, #0
   145f8:	mov	r2, r9
   145fc:	bl	1216c <strspn@plt+0x11f8>
   14600:	cmp	r8, r0
   14604:	bhi	14664 <strspn@plt+0x36f0>
   14608:	ldr	r3, [pc, #156]	; 146ac <strspn@plt+0x3738>
   1460c:	add	r8, r0, #1
   14610:	cmp	r5, r3
   14614:	str	r8, [r4]
   14618:	beq	14624 <strspn@plt+0x36b0>
   1461c:	mov	r0, r5
   14620:	bl	11ea0 <strspn@plt+0xf2c>
   14624:	mov	r0, r8
   14628:	bl	16ff0 <strspn@plt+0x607c>
   1462c:	ldr	lr, [sp, #68]	; 0x44
   14630:	ldr	r3, [sp, #24]
   14634:	ldr	ip, [sp, #64]	; 0x40
   14638:	mov	r2, r9
   1463c:	mov	r1, r8
   14640:	str	r0, [r4, #4]
   14644:	str	r3, [sp]
   14648:	str	sl, [sp, #8]
   1464c:	str	r6, [sp, #4]
   14650:	str	lr, [sp, #16]
   14654:	str	ip, [sp, #12]
   14658:	mvn	r3, #0
   1465c:	mov	r5, r0
   14660:	bl	1216c <strspn@plt+0x11f8>
   14664:	mov	r0, r5
   14668:	str	fp, [r7]
   1466c:	add	sp, sp, #124	; 0x7c
   14670:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14674:	mov	r3, #8
   14678:	add	r1, sp, #72	; 0x48
   1467c:	str	r3, [sp]
   14680:	rsb	r2, r2, #1
   14684:	mvn	r3, #-2147483648	; 0x80000000
   14688:	mov	r0, #0
   1468c:	bl	1720c <strspn@plt+0x6298>
   14690:	mov	r4, r0
   14694:	ldm	r6, {r0, r1}
   14698:	str	r4, [r5]
   1469c:	stm	r4, {r0, r1}
   146a0:	b	14594 <strspn@plt+0x3620>
   146a4:	bl	10f50 <abort@plt>
   146a8:	strdeq	r9, [r2], -ip
   146ac:	muleq	r2, ip, r1
   146b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   146b4:	sub	sp, sp, #132	; 0x84
   146b8:	mov	r4, r0
   146bc:	mov	r9, r1
   146c0:	mov	sl, r2
   146c4:	add	r0, sp, #80	; 0x50
   146c8:	mov	r2, #48	; 0x30
   146cc:	mov	r1, #0
   146d0:	bl	10eb4 <memset@plt>
   146d4:	cmp	r4, #10
   146d8:	beq	1486c <strspn@plt+0x38f8>
   146dc:	add	lr, sp, #80	; 0x50
   146e0:	str	r4, [sp, #80]	; 0x50
   146e4:	ldm	lr!, {r0, r1, r2, r3}
   146e8:	add	ip, sp, #32
   146ec:	ldr	r5, [pc, #380]	; 14870 <strspn@plt+0x38fc>
   146f0:	stmia	ip!, {r0, r1, r2, r3}
   146f4:	ldm	lr!, {r0, r1, r2, r3}
   146f8:	stmia	ip!, {r0, r1, r2, r3}
   146fc:	ldm	lr, {r0, r1, r2, r3}
   14700:	stm	ip, {r0, r1, r2, r3}
   14704:	bl	10e90 <__errno_location@plt>
   14708:	ldr	r2, [r5, #4]
   1470c:	ldr	r4, [r5]
   14710:	cmp	r2, #0
   14714:	ldr	r3, [r0]
   14718:	mov	r7, r0
   1471c:	str	r3, [sp, #28]
   14720:	bgt	1477c <strspn@plt+0x3808>
   14724:	add	r6, r5, #8
   14728:	cmp	r4, r6
   1472c:	str	r2, [sp, #80]	; 0x50
   14730:	beq	1483c <strspn@plt+0x38c8>
   14734:	mov	r3, #8
   14738:	mov	r0, r4
   1473c:	str	r3, [sp]
   14740:	rsb	r2, r2, #1
   14744:	add	r1, sp, #80	; 0x50
   14748:	mvn	r3, #-2147483648	; 0x80000000
   1474c:	bl	1720c <strspn@plt+0x6298>
   14750:	mov	r4, r0
   14754:	str	r0, [r5]
   14758:	ldr	r0, [r5, #4]
   1475c:	ldr	r2, [sp, #80]	; 0x50
   14760:	mov	r1, #0
   14764:	sub	r2, r2, r0
   14768:	add	r0, r4, r0, lsl #3
   1476c:	lsl	r2, r2, #3
   14770:	bl	10eb4 <memset@plt>
   14774:	ldr	r3, [sp, #80]	; 0x50
   14778:	str	r3, [r5, #4]
   1477c:	ldr	r6, [sp, #36]	; 0x24
   14780:	ldr	r8, [r4]
   14784:	ldr	r5, [r4, #4]
   14788:	ldr	r2, [sp, #72]	; 0x48
   1478c:	ldr	r3, [sp, #32]
   14790:	ldr	ip, [sp, #76]	; 0x4c
   14794:	orr	r6, r6, #1
   14798:	add	fp, sp, #40	; 0x28
   1479c:	str	r2, [sp, #12]
   147a0:	str	r3, [sp]
   147a4:	str	r6, [sp, #4]
   147a8:	mov	r1, r8
   147ac:	mov	r0, r5
   147b0:	str	ip, [sp, #16]
   147b4:	str	fp, [sp, #8]
   147b8:	mov	r3, sl
   147bc:	mov	r2, r9
   147c0:	bl	1216c <strspn@plt+0x11f8>
   147c4:	cmp	r8, r0
   147c8:	bhi	14828 <strspn@plt+0x38b4>
   147cc:	ldr	r3, [pc, #160]	; 14874 <strspn@plt+0x3900>
   147d0:	add	r8, r0, #1
   147d4:	cmp	r5, r3
   147d8:	str	r8, [r4]
   147dc:	beq	147e8 <strspn@plt+0x3874>
   147e0:	mov	r0, r5
   147e4:	bl	11ea0 <strspn@plt+0xf2c>
   147e8:	mov	r0, r8
   147ec:	bl	16ff0 <strspn@plt+0x607c>
   147f0:	ldr	ip, [sp, #76]	; 0x4c
   147f4:	ldr	lr, [sp, #32]
   147f8:	mov	r3, sl
   147fc:	mov	r2, r9
   14800:	mov	r1, r8
   14804:	str	r0, [r4, #4]
   14808:	ldr	r4, [sp, #72]	; 0x48
   1480c:	str	fp, [sp, #8]
   14810:	str	r6, [sp, #4]
   14814:	str	ip, [sp, #16]
   14818:	str	r4, [sp, #12]
   1481c:	str	lr, [sp]
   14820:	mov	r5, r0
   14824:	bl	1216c <strspn@plt+0x11f8>
   14828:	ldr	r3, [sp, #28]
   1482c:	mov	r0, r5
   14830:	str	r3, [r7]
   14834:	add	sp, sp, #132	; 0x84
   14838:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1483c:	mov	r3, #8
   14840:	add	r1, sp, #80	; 0x50
   14844:	str	r3, [sp]
   14848:	rsb	r2, r2, #1
   1484c:	mvn	r3, #-2147483648	; 0x80000000
   14850:	mov	r0, #0
   14854:	bl	1720c <strspn@plt+0x6298>
   14858:	mov	r4, r0
   1485c:	ldm	r6, {r0, r1}
   14860:	str	r4, [r5]
   14864:	stm	r4, {r0, r1}
   14868:	b	14758 <strspn@plt+0x37e4>
   1486c:	bl	10f50 <abort@plt>
   14870:	strdeq	r9, [r2], -ip
   14874:	muleq	r2, ip, r1
   14878:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1487c:	mov	r4, r2
   14880:	ldr	lr, [pc, #432]	; 14a38 <strspn@plt+0x3ac4>
   14884:	mov	sl, r0
   14888:	mov	fp, r1
   1488c:	ldm	lr!, {r0, r1, r2, r3}
   14890:	sub	sp, sp, #92	; 0x5c
   14894:	add	ip, sp, #40	; 0x28
   14898:	lsr	r7, r4, #5
   1489c:	stmia	ip!, {r0, r1, r2, r3}
   148a0:	add	r6, sp, #48	; 0x30
   148a4:	ldm	lr!, {r0, r1, r2, r3}
   148a8:	and	r4, r4, #31
   148ac:	ldr	r5, [pc, #392]	; 14a3c <strspn@plt+0x3ac8>
   148b0:	stmia	ip!, {r0, r1, r2, r3}
   148b4:	ldm	lr, {r0, r1, r2, r3}
   148b8:	stm	ip, {r0, r1, r2, r3}
   148bc:	ldr	r2, [r6, r7, lsl #2]
   148c0:	lsr	r3, r2, r4
   148c4:	eor	r3, r3, #1
   148c8:	and	r3, r3, #1
   148cc:	eor	r4, r2, r3, lsl r4
   148d0:	str	r4, [r6, r7, lsl #2]
   148d4:	bl	10e90 <__errno_location@plt>
   148d8:	ldr	r2, [r5, #4]
   148dc:	ldr	r4, [r5]
   148e0:	cmp	r2, #0
   148e4:	ldr	r3, [r0]
   148e8:	mov	r8, r0
   148ec:	str	r3, [sp, #28]
   148f0:	bgt	1494c <strspn@plt+0x39d8>
   148f4:	add	r7, r5, #8
   148f8:	cmp	r4, r7
   148fc:	str	r2, [sp, #36]	; 0x24
   14900:	beq	14a08 <strspn@plt+0x3a94>
   14904:	mov	r3, #8
   14908:	mov	r0, r4
   1490c:	str	r3, [sp]
   14910:	rsb	r2, r2, #1
   14914:	mvn	r3, #-2147483648	; 0x80000000
   14918:	add	r1, sp, #36	; 0x24
   1491c:	bl	1720c <strspn@plt+0x6298>
   14920:	mov	r4, r0
   14924:	str	r0, [r5]
   14928:	ldr	r0, [r5, #4]
   1492c:	ldr	r2, [sp, #36]	; 0x24
   14930:	mov	r1, #0
   14934:	sub	r2, r2, r0
   14938:	add	r0, r4, r0, lsl #3
   1493c:	lsl	r2, r2, #3
   14940:	bl	10eb4 <memset@plt>
   14944:	ldr	r3, [sp, #36]	; 0x24
   14948:	str	r3, [r5, #4]
   1494c:	ldr	r7, [sp, #44]	; 0x2c
   14950:	ldr	r9, [r4]
   14954:	ldr	r5, [r4, #4]
   14958:	ldr	r2, [sp, #80]	; 0x50
   1495c:	ldr	r3, [sp, #40]	; 0x28
   14960:	ldr	ip, [sp, #84]	; 0x54
   14964:	orr	r7, r7, #1
   14968:	str	r2, [sp, #12]
   1496c:	str	r3, [sp]
   14970:	str	r7, [sp, #4]
   14974:	str	r6, [sp, #8]
   14978:	mov	r1, r9
   1497c:	mov	r0, r5
   14980:	str	ip, [sp, #16]
   14984:	mov	r3, fp
   14988:	mov	r2, sl
   1498c:	bl	1216c <strspn@plt+0x11f8>
   14990:	cmp	r9, r0
   14994:	bhi	149f4 <strspn@plt+0x3a80>
   14998:	ldr	r3, [pc, #160]	; 14a40 <strspn@plt+0x3acc>
   1499c:	add	r9, r0, #1
   149a0:	cmp	r5, r3
   149a4:	str	r9, [r4]
   149a8:	beq	149b4 <strspn@plt+0x3a40>
   149ac:	mov	r0, r5
   149b0:	bl	11ea0 <strspn@plt+0xf2c>
   149b4:	mov	r0, r9
   149b8:	bl	16ff0 <strspn@plt+0x607c>
   149bc:	ldr	ip, [sp, #84]	; 0x54
   149c0:	ldr	lr, [sp, #40]	; 0x28
   149c4:	mov	r3, fp
   149c8:	mov	r2, sl
   149cc:	mov	r1, r9
   149d0:	str	r0, [r4, #4]
   149d4:	ldr	r4, [sp, #80]	; 0x50
   149d8:	str	r6, [sp, #8]
   149dc:	str	r7, [sp, #4]
   149e0:	str	ip, [sp, #16]
   149e4:	str	r4, [sp, #12]
   149e8:	str	lr, [sp]
   149ec:	mov	r5, r0
   149f0:	bl	1216c <strspn@plt+0x11f8>
   149f4:	ldr	r3, [sp, #28]
   149f8:	mov	r0, r5
   149fc:	str	r3, [r8]
   14a00:	add	sp, sp, #92	; 0x5c
   14a04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a08:	mov	r3, #8
   14a0c:	str	r3, [sp]
   14a10:	add	r1, sp, #36	; 0x24
   14a14:	rsb	r2, r2, #1
   14a18:	mvn	r3, #-2147483648	; 0x80000000
   14a1c:	mov	r0, #0
   14a20:	bl	1720c <strspn@plt+0x6298>
   14a24:	mov	r4, r0
   14a28:	ldm	r7, {r0, r1}
   14a2c:	str	r4, [r5]
   14a30:	stm	r4, {r0, r1}
   14a34:	b	14928 <strspn@plt+0x39b4>
   14a38:	andeq	r9, r2, ip, ror #2
   14a3c:	strdeq	r9, [r2], -ip
   14a40:	muleq	r2, ip, r1
   14a44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a48:	mov	r4, r1
   14a4c:	ldr	lr, [pc, #420]	; 14bf8 <strspn@plt+0x3c84>
   14a50:	mov	r6, r0
   14a54:	sub	sp, sp, #84	; 0x54
   14a58:	ldm	lr!, {r0, r1, r2, r3}
   14a5c:	add	ip, sp, #32
   14a60:	lsr	r8, r4, #5
   14a64:	add	r5, sp, #40	; 0x28
   14a68:	stmia	ip!, {r0, r1, r2, r3}
   14a6c:	and	r4, r4, #31
   14a70:	ldm	lr!, {r0, r1, r2, r3}
   14a74:	ldr	r7, [pc, #384]	; 14bfc <strspn@plt+0x3c88>
   14a78:	stmia	ip!, {r0, r1, r2, r3}
   14a7c:	ldm	lr, {r0, r1, r2, r3}
   14a80:	stm	ip, {r0, r1, r2, r3}
   14a84:	ldr	r2, [r5, r8, lsl #2]
   14a88:	lsr	r3, r2, r4
   14a8c:	eor	r3, r3, #1
   14a90:	and	r3, r3, #1
   14a94:	eor	r4, r2, r3, lsl r4
   14a98:	str	r4, [r5, r8, lsl #2]
   14a9c:	bl	10e90 <__errno_location@plt>
   14aa0:	ldr	r2, [r7, #4]
   14aa4:	ldr	r4, [r7]
   14aa8:	cmp	r2, #0
   14aac:	mov	r9, r0
   14ab0:	ldr	sl, [r0]
   14ab4:	bgt	14b10 <strspn@plt+0x3b9c>
   14ab8:	add	r8, r7, #8
   14abc:	cmp	r4, r8
   14ac0:	str	r2, [sp, #28]
   14ac4:	beq	14bc8 <strspn@plt+0x3c54>
   14ac8:	mov	r3, #8
   14acc:	mov	r0, r4
   14ad0:	str	r3, [sp]
   14ad4:	rsb	r2, r2, #1
   14ad8:	mvn	r3, #-2147483648	; 0x80000000
   14adc:	add	r1, sp, #28
   14ae0:	bl	1720c <strspn@plt+0x6298>
   14ae4:	mov	r4, r0
   14ae8:	str	r0, [r7]
   14aec:	ldr	r0, [r7, #4]
   14af0:	ldr	r2, [sp, #28]
   14af4:	mov	r1, #0
   14af8:	sub	r2, r2, r0
   14afc:	add	r0, r4, r0, lsl #3
   14b00:	lsl	r2, r2, #3
   14b04:	bl	10eb4 <memset@plt>
   14b08:	ldr	r3, [sp, #28]
   14b0c:	str	r3, [r7, #4]
   14b10:	ldr	r8, [sp, #36]	; 0x24
   14b14:	ldr	fp, [r4]
   14b18:	ldr	r7, [r4, #4]
   14b1c:	ldr	r2, [sp, #72]	; 0x48
   14b20:	ldr	r3, [sp, #32]
   14b24:	ldr	ip, [sp, #76]	; 0x4c
   14b28:	orr	r8, r8, #1
   14b2c:	str	r2, [sp, #12]
   14b30:	str	r3, [sp]
   14b34:	str	r8, [sp, #4]
   14b38:	str	r5, [sp, #8]
   14b3c:	mov	r1, fp
   14b40:	mov	r0, r7
   14b44:	str	ip, [sp, #16]
   14b48:	mvn	r3, #0
   14b4c:	mov	r2, r6
   14b50:	bl	1216c <strspn@plt+0x11f8>
   14b54:	cmp	fp, r0
   14b58:	bhi	14bb8 <strspn@plt+0x3c44>
   14b5c:	ldr	r3, [pc, #156]	; 14c00 <strspn@plt+0x3c8c>
   14b60:	add	fp, r0, #1
   14b64:	cmp	r7, r3
   14b68:	str	fp, [r4]
   14b6c:	beq	14b78 <strspn@plt+0x3c04>
   14b70:	mov	r0, r7
   14b74:	bl	11ea0 <strspn@plt+0xf2c>
   14b78:	mov	r0, fp
   14b7c:	bl	16ff0 <strspn@plt+0x607c>
   14b80:	ldr	lr, [sp, #76]	; 0x4c
   14b84:	ldr	r3, [sp, #32]
   14b88:	ldr	ip, [sp, #72]	; 0x48
   14b8c:	mov	r2, r6
   14b90:	mov	r1, fp
   14b94:	str	r0, [r4, #4]
   14b98:	str	r3, [sp]
   14b9c:	str	r5, [sp, #8]
   14ba0:	str	r8, [sp, #4]
   14ba4:	str	lr, [sp, #16]
   14ba8:	str	ip, [sp, #12]
   14bac:	mvn	r3, #0
   14bb0:	mov	r7, r0
   14bb4:	bl	1216c <strspn@plt+0x11f8>
   14bb8:	mov	r0, r7
   14bbc:	str	sl, [r9]
   14bc0:	add	sp, sp, #84	; 0x54
   14bc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14bc8:	mov	r3, #8
   14bcc:	str	r3, [sp]
   14bd0:	add	r1, sp, #28
   14bd4:	rsb	r2, r2, #1
   14bd8:	mvn	r3, #-2147483648	; 0x80000000
   14bdc:	mov	r0, #0
   14be0:	bl	1720c <strspn@plt+0x6298>
   14be4:	mov	r4, r0
   14be8:	ldm	r8, {r0, r1}
   14bec:	str	r4, [r7]
   14bf0:	stm	r4, {r0, r1}
   14bf4:	b	14aec <strspn@plt+0x3b78>
   14bf8:	andeq	r9, r2, ip, ror #2
   14bfc:	strdeq	r9, [r2], -ip
   14c00:	muleq	r2, ip, r1
   14c04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c08:	mov	r6, r0
   14c0c:	ldr	lr, [pc, #404]	; 14da8 <strspn@plt+0x3e34>
   14c10:	sub	sp, sp, #84	; 0x54
   14c14:	add	ip, sp, #32
   14c18:	ldm	lr!, {r0, r1, r2, r3}
   14c1c:	ldr	r5, [pc, #392]	; 14dac <strspn@plt+0x3e38>
   14c20:	stmia	ip!, {r0, r1, r2, r3}
   14c24:	ldm	lr!, {r0, r1, r2, r3}
   14c28:	ldr	r4, [sp, #44]	; 0x2c
   14c2c:	stmia	ip!, {r0, r1, r2, r3}
   14c30:	ldm	lr, {r0, r1, r2, r3}
   14c34:	mvn	lr, r4
   14c38:	and	lr, lr, #67108864	; 0x4000000
   14c3c:	eor	lr, lr, r4
   14c40:	stm	ip, {r0, r1, r2, r3}
   14c44:	str	lr, [sp, #44]	; 0x2c
   14c48:	bl	10e90 <__errno_location@plt>
   14c4c:	ldr	r2, [r5, #4]
   14c50:	ldr	r4, [r5]
   14c54:	cmp	r2, #0
   14c58:	mov	r8, r0
   14c5c:	ldr	sl, [r0]
   14c60:	bgt	14cbc <strspn@plt+0x3d48>
   14c64:	add	r7, r5, #8
   14c68:	cmp	r4, r7
   14c6c:	str	r2, [sp, #28]
   14c70:	beq	14d78 <strspn@plt+0x3e04>
   14c74:	mov	r3, #8
   14c78:	mov	r0, r4
   14c7c:	str	r3, [sp]
   14c80:	rsb	r2, r2, #1
   14c84:	mvn	r3, #-2147483648	; 0x80000000
   14c88:	add	r1, sp, #28
   14c8c:	bl	1720c <strspn@plt+0x6298>
   14c90:	mov	r4, r0
   14c94:	str	r0, [r5]
   14c98:	ldr	r0, [r5, #4]
   14c9c:	ldr	r2, [sp, #28]
   14ca0:	mov	r1, #0
   14ca4:	sub	r2, r2, r0
   14ca8:	add	r0, r4, r0, lsl #3
   14cac:	lsl	r2, r2, #3
   14cb0:	bl	10eb4 <memset@plt>
   14cb4:	ldr	r3, [sp, #28]
   14cb8:	str	r3, [r5, #4]
   14cbc:	ldr	r7, [sp, #36]	; 0x24
   14cc0:	ldr	r9, [r4]
   14cc4:	ldr	r5, [r4, #4]
   14cc8:	ldr	r2, [sp, #72]	; 0x48
   14ccc:	ldr	r3, [sp, #32]
   14cd0:	ldr	ip, [sp, #76]	; 0x4c
   14cd4:	orr	r7, r7, #1
   14cd8:	add	fp, sp, #40	; 0x28
   14cdc:	str	r2, [sp, #12]
   14ce0:	str	r3, [sp]
   14ce4:	str	r7, [sp, #4]
   14ce8:	mov	r1, r9
   14cec:	mov	r0, r5
   14cf0:	str	ip, [sp, #16]
   14cf4:	str	fp, [sp, #8]
   14cf8:	mvn	r3, #0
   14cfc:	mov	r2, r6
   14d00:	bl	1216c <strspn@plt+0x11f8>
   14d04:	cmp	r9, r0
   14d08:	bhi	14d68 <strspn@plt+0x3df4>
   14d0c:	ldr	r3, [pc, #156]	; 14db0 <strspn@plt+0x3e3c>
   14d10:	add	r9, r0, #1
   14d14:	cmp	r5, r3
   14d18:	str	r9, [r4]
   14d1c:	beq	14d28 <strspn@plt+0x3db4>
   14d20:	mov	r0, r5
   14d24:	bl	11ea0 <strspn@plt+0xf2c>
   14d28:	mov	r0, r9
   14d2c:	bl	16ff0 <strspn@plt+0x607c>
   14d30:	ldr	lr, [sp, #76]	; 0x4c
   14d34:	ldr	r3, [sp, #32]
   14d38:	ldr	ip, [sp, #72]	; 0x48
   14d3c:	mov	r2, r6
   14d40:	mov	r1, r9
   14d44:	str	r0, [r4, #4]
   14d48:	str	r3, [sp]
   14d4c:	str	fp, [sp, #8]
   14d50:	str	r7, [sp, #4]
   14d54:	str	lr, [sp, #16]
   14d58:	str	ip, [sp, #12]
   14d5c:	mvn	r3, #0
   14d60:	mov	r5, r0
   14d64:	bl	1216c <strspn@plt+0x11f8>
   14d68:	mov	r0, r5
   14d6c:	str	sl, [r8]
   14d70:	add	sp, sp, #84	; 0x54
   14d74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d78:	mov	r3, #8
   14d7c:	str	r3, [sp]
   14d80:	add	r1, sp, #28
   14d84:	rsb	r2, r2, #1
   14d88:	mvn	r3, #-2147483648	; 0x80000000
   14d8c:	mov	r0, #0
   14d90:	bl	1720c <strspn@plt+0x6298>
   14d94:	mov	r4, r0
   14d98:	ldm	r7, {r0, r1}
   14d9c:	str	r4, [r5]
   14da0:	stm	r4, {r0, r1}
   14da4:	b	14c98 <strspn@plt+0x3d24>
   14da8:	andeq	r9, r2, ip, ror #2
   14dac:	strdeq	r9, [r2], -ip
   14db0:	muleq	r2, ip, r1
   14db4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14db8:	mov	r9, r0
   14dbc:	ldr	lr, [pc, #416]	; 14f64 <strspn@plt+0x3ff0>
   14dc0:	mov	sl, r1
   14dc4:	sub	sp, sp, #92	; 0x5c
   14dc8:	ldm	lr!, {r0, r1, r2, r3}
   14dcc:	add	ip, sp, #40	; 0x28
   14dd0:	ldr	r5, [pc, #400]	; 14f68 <strspn@plt+0x3ff4>
   14dd4:	stmia	ip!, {r0, r1, r2, r3}
   14dd8:	ldm	lr!, {r0, r1, r2, r3}
   14ddc:	ldr	r4, [sp, #52]	; 0x34
   14de0:	stmia	ip!, {r0, r1, r2, r3}
   14de4:	ldm	lr, {r0, r1, r2, r3}
   14de8:	mvn	lr, r4
   14dec:	and	lr, lr, #67108864	; 0x4000000
   14df0:	eor	lr, lr, r4
   14df4:	stm	ip, {r0, r1, r2, r3}
   14df8:	str	lr, [sp, #52]	; 0x34
   14dfc:	bl	10e90 <__errno_location@plt>
   14e00:	ldr	r2, [r5, #4]
   14e04:	ldr	r4, [r5]
   14e08:	cmp	r2, #0
   14e0c:	ldr	r3, [r0]
   14e10:	mov	r7, r0
   14e14:	str	r3, [sp, #28]
   14e18:	bgt	14e74 <strspn@plt+0x3f00>
   14e1c:	add	r6, r5, #8
   14e20:	cmp	r4, r6
   14e24:	str	r2, [sp, #36]	; 0x24
   14e28:	beq	14f34 <strspn@plt+0x3fc0>
   14e2c:	mov	r3, #8
   14e30:	mov	r0, r4
   14e34:	str	r3, [sp]
   14e38:	rsb	r2, r2, #1
   14e3c:	mvn	r3, #-2147483648	; 0x80000000
   14e40:	add	r1, sp, #36	; 0x24
   14e44:	bl	1720c <strspn@plt+0x6298>
   14e48:	mov	r4, r0
   14e4c:	str	r0, [r5]
   14e50:	ldr	r0, [r5, #4]
   14e54:	ldr	r2, [sp, #36]	; 0x24
   14e58:	mov	r1, #0
   14e5c:	sub	r2, r2, r0
   14e60:	add	r0, r4, r0, lsl #3
   14e64:	lsl	r2, r2, #3
   14e68:	bl	10eb4 <memset@plt>
   14e6c:	ldr	r3, [sp, #36]	; 0x24
   14e70:	str	r3, [r5, #4]
   14e74:	ldr	r6, [sp, #44]	; 0x2c
   14e78:	ldr	r8, [r4]
   14e7c:	ldr	r5, [r4, #4]
   14e80:	ldr	r2, [sp, #80]	; 0x50
   14e84:	ldr	r3, [sp, #40]	; 0x28
   14e88:	ldr	ip, [sp, #84]	; 0x54
   14e8c:	orr	r6, r6, #1
   14e90:	add	fp, sp, #48	; 0x30
   14e94:	str	r2, [sp, #12]
   14e98:	str	r3, [sp]
   14e9c:	str	r6, [sp, #4]
   14ea0:	mov	r1, r8
   14ea4:	mov	r0, r5
   14ea8:	str	ip, [sp, #16]
   14eac:	str	fp, [sp, #8]
   14eb0:	mov	r3, sl
   14eb4:	mov	r2, r9
   14eb8:	bl	1216c <strspn@plt+0x11f8>
   14ebc:	cmp	r8, r0
   14ec0:	bhi	14f20 <strspn@plt+0x3fac>
   14ec4:	ldr	r3, [pc, #160]	; 14f6c <strspn@plt+0x3ff8>
   14ec8:	add	r8, r0, #1
   14ecc:	cmp	r5, r3
   14ed0:	str	r8, [r4]
   14ed4:	beq	14ee0 <strspn@plt+0x3f6c>
   14ed8:	mov	r0, r5
   14edc:	bl	11ea0 <strspn@plt+0xf2c>
   14ee0:	mov	r0, r8
   14ee4:	bl	16ff0 <strspn@plt+0x607c>
   14ee8:	ldr	ip, [sp, #84]	; 0x54
   14eec:	ldr	lr, [sp, #40]	; 0x28
   14ef0:	mov	r3, sl
   14ef4:	mov	r2, r9
   14ef8:	mov	r1, r8
   14efc:	str	r0, [r4, #4]
   14f00:	ldr	r4, [sp, #80]	; 0x50
   14f04:	str	fp, [sp, #8]
   14f08:	str	r6, [sp, #4]
   14f0c:	str	ip, [sp, #16]
   14f10:	str	r4, [sp, #12]
   14f14:	str	lr, [sp]
   14f18:	mov	r5, r0
   14f1c:	bl	1216c <strspn@plt+0x11f8>
   14f20:	ldr	r3, [sp, #28]
   14f24:	mov	r0, r5
   14f28:	str	r3, [r7]
   14f2c:	add	sp, sp, #92	; 0x5c
   14f30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f34:	mov	r3, #8
   14f38:	str	r3, [sp]
   14f3c:	add	r1, sp, #36	; 0x24
   14f40:	rsb	r2, r2, #1
   14f44:	mvn	r3, #-2147483648	; 0x80000000
   14f48:	mov	r0, #0
   14f4c:	bl	1720c <strspn@plt+0x6298>
   14f50:	mov	r4, r0
   14f54:	ldm	r6, {r0, r1}
   14f58:	str	r4, [r5]
   14f5c:	stm	r4, {r0, r1}
   14f60:	b	14e50 <strspn@plt+0x3edc>
   14f64:	andeq	r9, r2, ip, ror #2
   14f68:	strdeq	r9, [r2], -ip
   14f6c:	muleq	r2, ip, r1
   14f70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f74:	sub	sp, sp, #180	; 0xb4
   14f78:	mov	r6, r1
   14f7c:	mov	r4, r0
   14f80:	mov	r9, r2
   14f84:	add	r0, sp, #80	; 0x50
   14f88:	mov	r2, #48	; 0x30
   14f8c:	mov	r1, #0
   14f90:	bl	10eb4 <memset@plt>
   14f94:	cmp	r6, #10
   14f98:	beq	15178 <strspn@plt+0x4204>
   14f9c:	add	r5, sp, #80	; 0x50
   14fa0:	str	r6, [sp, #80]	; 0x50
   14fa4:	ldm	r5!, {r0, r1, r2, r3}
   14fa8:	add	ip, sp, #128	; 0x80
   14fac:	mov	r7, ip
   14fb0:	add	lr, sp, #32
   14fb4:	stmia	ip!, {r0, r1, r2, r3}
   14fb8:	mov	r8, #67108864	; 0x4000000
   14fbc:	ldm	r5!, {r0, r1, r2, r3}
   14fc0:	ldr	r6, [pc, #436]	; 1517c <strspn@plt+0x4208>
   14fc4:	stmia	ip!, {r0, r1, r2, r3}
   14fc8:	ldm	r5, {r0, r1, r2, r3}
   14fcc:	stm	ip, {r0, r1, r2, r3}
   14fd0:	ldm	r7!, {r0, r1, r2, r3}
   14fd4:	stmia	lr!, {r0, r1, r2, r3}
   14fd8:	ldm	r7!, {r0, r1, r2, r3}
   14fdc:	str	r8, [sp, #44]	; 0x2c
   14fe0:	stmia	lr!, {r0, r1, r2, r3}
   14fe4:	ldm	ip, {r0, r1, r2, r3}
   14fe8:	stm	lr, {r0, r1, r2, r3}
   14fec:	bl	10e90 <__errno_location@plt>
   14ff0:	cmn	r4, #-2147483647	; 0x80000001
   14ff4:	ldr	r5, [r6]
   14ff8:	mov	r7, r0
   14ffc:	movne	r0, #0
   15000:	moveq	r0, #1
   15004:	ldr	r3, [r7]
   15008:	orrs	r0, r0, r4, lsr #31
   1500c:	str	r3, [sp, #24]
   15010:	bne	15178 <strspn@plt+0x4204>
   15014:	ldr	r2, [r6, #4]
   15018:	cmp	r4, r2
   1501c:	blt	1507c <strspn@plt+0x4108>
   15020:	add	r8, r6, #8
   15024:	cmp	r5, r8
   15028:	str	r2, [sp, #80]	; 0x50
   1502c:	beq	15148 <strspn@plt+0x41d4>
   15030:	mov	r3, #8
   15034:	sub	r2, r4, r2
   15038:	mov	r0, r5
   1503c:	str	r3, [sp]
   15040:	add	r2, r2, #1
   15044:	add	r1, sp, #80	; 0x50
   15048:	mvn	r3, #-2147483648	; 0x80000000
   1504c:	bl	1720c <strspn@plt+0x6298>
   15050:	mov	r5, r0
   15054:	str	r0, [r6]
   15058:	ldr	r0, [r6, #4]
   1505c:	ldr	r2, [sp, #80]	; 0x50
   15060:	mov	r1, #0
   15064:	sub	r2, r2, r0
   15068:	add	r0, r5, r0, lsl #3
   1506c:	lsl	r2, r2, #3
   15070:	bl	10eb4 <memset@plt>
   15074:	ldr	r3, [sp, #80]	; 0x50
   15078:	str	r3, [r6, #4]
   1507c:	add	fp, r5, r4, lsl #3
   15080:	ldr	r1, [sp, #36]	; 0x24
   15084:	ldr	r8, [r5, r4, lsl #3]
   15088:	ldr	r6, [fp, #4]
   1508c:	ldr	r2, [sp, #72]	; 0x48
   15090:	ldr	r3, [sp, #32]
   15094:	ldr	ip, [sp, #76]	; 0x4c
   15098:	orr	r1, r1, #1
   1509c:	add	sl, sp, #40	; 0x28
   150a0:	str	r1, [sp, #28]
   150a4:	str	r1, [sp, #4]
   150a8:	str	r2, [sp, #12]
   150ac:	str	r3, [sp]
   150b0:	mov	r0, r6
   150b4:	mov	r1, r8
   150b8:	str	ip, [sp, #16]
   150bc:	str	sl, [sp, #8]
   150c0:	mvn	r3, #0
   150c4:	mov	r2, r9
   150c8:	bl	1216c <strspn@plt+0x11f8>
   150cc:	cmp	r8, r0
   150d0:	bhi	15134 <strspn@plt+0x41c0>
   150d4:	ldr	r3, [pc, #164]	; 15180 <strspn@plt+0x420c>
   150d8:	add	r8, r0, #1
   150dc:	cmp	r6, r3
   150e0:	str	r8, [r5, r4, lsl #3]
   150e4:	beq	150f0 <strspn@plt+0x417c>
   150e8:	mov	r0, r6
   150ec:	bl	11ea0 <strspn@plt+0xf2c>
   150f0:	mov	r0, r8
   150f4:	bl	16ff0 <strspn@plt+0x607c>
   150f8:	ldr	lr, [sp, #76]	; 0x4c
   150fc:	ldr	r3, [sp, #32]
   15100:	ldr	ip, [sp, #72]	; 0x48
   15104:	ldr	r4, [sp, #28]
   15108:	mov	r2, r9
   1510c:	mov	r1, r8
   15110:	str	r0, [fp, #4]
   15114:	str	r3, [sp]
   15118:	str	sl, [sp, #8]
   1511c:	str	r4, [sp, #4]
   15120:	str	lr, [sp, #16]
   15124:	str	ip, [sp, #12]
   15128:	mvn	r3, #0
   1512c:	mov	r6, r0
   15130:	bl	1216c <strspn@plt+0x11f8>
   15134:	ldr	r3, [sp, #24]
   15138:	mov	r0, r6
   1513c:	str	r3, [r7]
   15140:	add	sp, sp, #180	; 0xb4
   15144:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15148:	mov	r3, #8
   1514c:	sub	r2, r4, r2
   15150:	add	r1, sp, #80	; 0x50
   15154:	str	r3, [sp]
   15158:	add	r2, r2, #1
   1515c:	mvn	r3, #-2147483648	; 0x80000000
   15160:	bl	1720c <strspn@plt+0x6298>
   15164:	mov	r5, r0
   15168:	ldm	r8, {r0, r1}
   1516c:	str	r5, [r6]
   15170:	stm	r5, {r0, r1}
   15174:	b	15058 <strspn@plt+0x40e4>
   15178:	bl	10f50 <abort@plt>
   1517c:	strdeq	r9, [r2], -ip
   15180:	muleq	r2, ip, r1
   15184:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15188:	mov	r7, r1
   1518c:	ldr	lr, [pc, #492]	; 15380 <strspn@plt+0x440c>
   15190:	mov	r8, r2
   15194:	mov	r4, r0
   15198:	mov	fp, r3
   1519c:	ldm	lr!, {r0, r1, r2, r3}
   151a0:	sub	sp, sp, #100	; 0x64
   151a4:	add	ip, sp, #48	; 0x30
   151a8:	mov	sl, #10
   151ac:	stmia	ip!, {r0, r1, r2, r3}
   151b0:	cmp	r8, #0
   151b4:	cmpne	r7, #0
   151b8:	ldm	lr!, {r0, r1, r2, r3}
   151bc:	str	sl, [sp, #48]	; 0x30
   151c0:	stmia	ip!, {r0, r1, r2, r3}
   151c4:	ldm	lr, {r0, r1, r2, r3}
   151c8:	stm	ip, {r0, r1, r2, r3}
   151cc:	beq	1537c <strspn@plt+0x4408>
   151d0:	str	r7, [sp, #88]	; 0x58
   151d4:	str	r8, [sp, #92]	; 0x5c
   151d8:	bl	10e90 <__errno_location@plt>
   151dc:	ldr	r6, [pc, #416]	; 15384 <strspn@plt+0x4410>
   151e0:	cmn	r4, #-2147483647	; 0x80000001
   151e4:	ldr	r5, [r6]
   151e8:	mov	r9, r0
   151ec:	movne	r0, #0
   151f0:	moveq	r0, #1
   151f4:	ldr	r3, [r9]
   151f8:	orrs	r0, r0, r4, lsr #31
   151fc:	str	r3, [sp, #28]
   15200:	bne	1537c <strspn@plt+0x4408>
   15204:	ldr	r2, [r6, #4]
   15208:	cmp	r4, r2
   1520c:	movlt	r3, sl
   15210:	blt	1527c <strspn@plt+0x4308>
   15214:	add	r7, r6, #8
   15218:	cmp	r5, r7
   1521c:	str	r2, [sp, #44]	; 0x2c
   15220:	beq	1534c <strspn@plt+0x43d8>
   15224:	mov	r3, #8
   15228:	sub	r2, r4, r2
   1522c:	mov	r0, r5
   15230:	str	r3, [sp]
   15234:	add	r2, r2, #1
   15238:	mvn	r3, #-2147483648	; 0x80000000
   1523c:	add	r1, sp, #44	; 0x2c
   15240:	bl	1720c <strspn@plt+0x6298>
   15244:	mov	r5, r0
   15248:	str	r0, [r6]
   1524c:	ldr	r0, [r6, #4]
   15250:	ldr	r2, [sp, #44]	; 0x2c
   15254:	mov	r1, #0
   15258:	sub	r2, r2, r0
   1525c:	add	r0, r5, r0, lsl #3
   15260:	lsl	r2, r2, #3
   15264:	bl	10eb4 <memset@plt>
   15268:	ldr	r3, [sp, #48]	; 0x30
   1526c:	ldr	r7, [sp, #88]	; 0x58
   15270:	ldr	r8, [sp, #92]	; 0x5c
   15274:	ldr	r2, [sp, #44]	; 0x2c
   15278:	str	r2, [r6, #4]
   1527c:	add	r2, r5, r4, lsl #3
   15280:	mov	r1, r2
   15284:	str	r2, [sp, #32]
   15288:	ldr	r2, [sp, #52]	; 0x34
   1528c:	ldr	r6, [r1, #4]
   15290:	ldr	sl, [r5, r4, lsl #3]
   15294:	orr	r2, r2, #1
   15298:	str	r3, [sp]
   1529c:	add	r3, sp, #56	; 0x38
   152a0:	str	r2, [sp, #36]	; 0x24
   152a4:	str	r2, [sp, #4]
   152a8:	str	r3, [sp, #8]
   152ac:	mov	r0, r6
   152b0:	str	r8, [sp, #16]
   152b4:	str	r7, [sp, #12]
   152b8:	mov	r1, sl
   152bc:	mvn	r3, #0
   152c0:	mov	r2, fp
   152c4:	bl	1216c <strspn@plt+0x11f8>
   152c8:	cmp	sl, r0
   152cc:	bhi	15338 <strspn@plt+0x43c4>
   152d0:	ldr	r3, [pc, #176]	; 15388 <strspn@plt+0x4414>
   152d4:	add	r7, r0, #1
   152d8:	cmp	r6, r3
   152dc:	str	r7, [r5, r4, lsl #3]
   152e0:	beq	152ec <strspn@plt+0x4378>
   152e4:	mov	r0, r6
   152e8:	bl	11ea0 <strspn@plt+0xf2c>
   152ec:	mov	r0, r7
   152f0:	bl	16ff0 <strspn@plt+0x607c>
   152f4:	ldr	r3, [sp, #32]
   152f8:	ldr	lr, [sp, #92]	; 0x5c
   152fc:	ldr	ip, [sp, #88]	; 0x58
   15300:	ldr	r4, [sp, #36]	; 0x24
   15304:	mov	r2, fp
   15308:	mov	r1, r7
   1530c:	str	r0, [r3, #4]
   15310:	add	r3, sp, #56	; 0x38
   15314:	str	r3, [sp, #8]
   15318:	ldr	r3, [sp, #48]	; 0x30
   1531c:	str	r4, [sp, #4]
   15320:	str	r3, [sp]
   15324:	str	lr, [sp, #16]
   15328:	str	ip, [sp, #12]
   1532c:	mvn	r3, #0
   15330:	mov	r6, r0
   15334:	bl	1216c <strspn@plt+0x11f8>
   15338:	ldr	r3, [sp, #28]
   1533c:	mov	r0, r6
   15340:	str	r3, [r9]
   15344:	add	sp, sp, #100	; 0x64
   15348:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1534c:	mov	r3, #8
   15350:	sub	r2, r4, r2
   15354:	str	r3, [sp]
   15358:	add	r1, sp, #44	; 0x2c
   1535c:	add	r2, r2, #1
   15360:	mvn	r3, #-2147483648	; 0x80000000
   15364:	bl	1720c <strspn@plt+0x6298>
   15368:	mov	r5, r0
   1536c:	ldm	r7, {r0, r1}
   15370:	str	r5, [r6]
   15374:	stm	r5, {r0, r1}
   15378:	b	1524c <strspn@plt+0x42d8>
   1537c:	bl	10f50 <abort@plt>
   15380:	andeq	r9, r2, ip, ror #2
   15384:	strdeq	r9, [r2], -ip
   15388:	muleq	r2, ip, r1
   1538c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15390:	mov	r7, r1
   15394:	ldr	lr, [pc, #492]	; 15588 <strspn@plt+0x4614>
   15398:	mov	r8, r2
   1539c:	mov	r4, r0
   153a0:	mov	fp, r3
   153a4:	ldm	lr!, {r0, r1, r2, r3}
   153a8:	sub	sp, sp, #100	; 0x64
   153ac:	add	ip, sp, #48	; 0x30
   153b0:	mov	sl, #10
   153b4:	stmia	ip!, {r0, r1, r2, r3}
   153b8:	cmp	r8, #0
   153bc:	cmpne	r7, #0
   153c0:	ldm	lr!, {r0, r1, r2, r3}
   153c4:	str	sl, [sp, #48]	; 0x30
   153c8:	stmia	ip!, {r0, r1, r2, r3}
   153cc:	ldm	lr, {r0, r1, r2, r3}
   153d0:	stm	ip, {r0, r1, r2, r3}
   153d4:	beq	15584 <strspn@plt+0x4610>
   153d8:	str	r7, [sp, #88]	; 0x58
   153dc:	str	r8, [sp, #92]	; 0x5c
   153e0:	bl	10e90 <__errno_location@plt>
   153e4:	ldr	r6, [pc, #416]	; 1558c <strspn@plt+0x4618>
   153e8:	cmn	r4, #-2147483647	; 0x80000001
   153ec:	ldr	r5, [r6]
   153f0:	mov	r9, r0
   153f4:	movne	r0, #0
   153f8:	moveq	r0, #1
   153fc:	ldr	r3, [r9]
   15400:	orrs	r0, r0, r4, lsr #31
   15404:	str	r3, [sp, #28]
   15408:	bne	15584 <strspn@plt+0x4610>
   1540c:	ldr	r2, [r6, #4]
   15410:	cmp	r4, r2
   15414:	movlt	r3, sl
   15418:	blt	15484 <strspn@plt+0x4510>
   1541c:	add	r7, r6, #8
   15420:	cmp	r5, r7
   15424:	str	r2, [sp, #44]	; 0x2c
   15428:	beq	15554 <strspn@plt+0x45e0>
   1542c:	mov	r3, #8
   15430:	sub	r2, r4, r2
   15434:	mov	r0, r5
   15438:	str	r3, [sp]
   1543c:	add	r2, r2, #1
   15440:	mvn	r3, #-2147483648	; 0x80000000
   15444:	add	r1, sp, #44	; 0x2c
   15448:	bl	1720c <strspn@plt+0x6298>
   1544c:	mov	r5, r0
   15450:	str	r0, [r6]
   15454:	ldr	r0, [r6, #4]
   15458:	ldr	r2, [sp, #44]	; 0x2c
   1545c:	mov	r1, #0
   15460:	sub	r2, r2, r0
   15464:	add	r0, r5, r0, lsl #3
   15468:	lsl	r2, r2, #3
   1546c:	bl	10eb4 <memset@plt>
   15470:	ldr	r3, [sp, #48]	; 0x30
   15474:	ldr	r7, [sp, #88]	; 0x58
   15478:	ldr	r8, [sp, #92]	; 0x5c
   1547c:	ldr	r2, [sp, #44]	; 0x2c
   15480:	str	r2, [r6, #4]
   15484:	add	r2, r5, r4, lsl #3
   15488:	mov	r1, r2
   1548c:	str	r2, [sp, #32]
   15490:	ldr	r2, [sp, #52]	; 0x34
   15494:	ldr	r6, [r1, #4]
   15498:	ldr	sl, [r5, r4, lsl #3]
   1549c:	orr	r2, r2, #1
   154a0:	str	r3, [sp]
   154a4:	add	r3, sp, #56	; 0x38
   154a8:	str	r2, [sp, #36]	; 0x24
   154ac:	str	r2, [sp, #4]
   154b0:	str	r3, [sp, #8]
   154b4:	mov	r0, r6
   154b8:	str	r8, [sp, #16]
   154bc:	str	r7, [sp, #12]
   154c0:	mov	r1, sl
   154c4:	ldr	r3, [sp, #136]	; 0x88
   154c8:	mov	r2, fp
   154cc:	bl	1216c <strspn@plt+0x11f8>
   154d0:	cmp	sl, r0
   154d4:	bhi	15540 <strspn@plt+0x45cc>
   154d8:	ldr	r3, [pc, #176]	; 15590 <strspn@plt+0x461c>
   154dc:	add	r7, r0, #1
   154e0:	cmp	r6, r3
   154e4:	str	r7, [r5, r4, lsl #3]
   154e8:	beq	154f4 <strspn@plt+0x4580>
   154ec:	mov	r0, r6
   154f0:	bl	11ea0 <strspn@plt+0xf2c>
   154f4:	mov	r0, r7
   154f8:	bl	16ff0 <strspn@plt+0x607c>
   154fc:	ldr	r3, [sp, #32]
   15500:	ldr	lr, [sp, #92]	; 0x5c
   15504:	ldr	ip, [sp, #88]	; 0x58
   15508:	ldr	r4, [sp, #36]	; 0x24
   1550c:	mov	r2, fp
   15510:	mov	r1, r7
   15514:	str	r0, [r3, #4]
   15518:	add	r3, sp, #56	; 0x38
   1551c:	str	r3, [sp, #8]
   15520:	ldr	r3, [sp, #48]	; 0x30
   15524:	str	r4, [sp, #4]
   15528:	str	r3, [sp]
   1552c:	str	lr, [sp, #16]
   15530:	str	ip, [sp, #12]
   15534:	ldr	r3, [sp, #136]	; 0x88
   15538:	mov	r6, r0
   1553c:	bl	1216c <strspn@plt+0x11f8>
   15540:	ldr	r3, [sp, #28]
   15544:	mov	r0, r6
   15548:	str	r3, [r9]
   1554c:	add	sp, sp, #100	; 0x64
   15550:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15554:	mov	r3, #8
   15558:	sub	r2, r4, r2
   1555c:	str	r3, [sp]
   15560:	add	r1, sp, #44	; 0x2c
   15564:	add	r2, r2, #1
   15568:	mvn	r3, #-2147483648	; 0x80000000
   1556c:	bl	1720c <strspn@plt+0x6298>
   15570:	mov	r5, r0
   15574:	ldm	r7, {r0, r1}
   15578:	str	r5, [r6]
   1557c:	stm	r5, {r0, r1}
   15580:	b	15454 <strspn@plt+0x44e0>
   15584:	bl	10f50 <abort@plt>
   15588:	andeq	r9, r2, ip, ror #2
   1558c:	strdeq	r9, [r2], -ip
   15590:	muleq	r2, ip, r1
   15594:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15598:	mov	r5, r0
   1559c:	ldr	lr, [pc, #452]	; 15768 <strspn@plt+0x47f4>
   155a0:	mov	r6, r1
   155a4:	mov	sl, r2
   155a8:	ldm	lr!, {r0, r1, r2, r3}
   155ac:	sub	sp, sp, #92	; 0x5c
   155b0:	add	ip, sp, #40	; 0x28
   155b4:	cmp	r6, #0
   155b8:	cmpne	r5, #0
   155bc:	stmia	ip!, {r0, r1, r2, r3}
   155c0:	mov	r9, #10
   155c4:	ldm	lr!, {r0, r1, r2, r3}
   155c8:	moveq	fp, #1
   155cc:	movne	fp, #0
   155d0:	str	r9, [sp, #40]	; 0x28
   155d4:	stmia	ip!, {r0, r1, r2, r3}
   155d8:	ldm	lr, {r0, r1, r2, r3}
   155dc:	stm	ip, {r0, r1, r2, r3}
   155e0:	beq	15764 <strspn@plt+0x47f0>
   155e4:	str	r5, [sp, #80]	; 0x50
   155e8:	str	r6, [sp, #84]	; 0x54
   155ec:	bl	10e90 <__errno_location@plt>
   155f0:	ldr	r7, [pc, #372]	; 1576c <strspn@plt+0x47f8>
   155f4:	ldr	r2, [r7, #4]
   155f8:	ldr	r4, [r7]
   155fc:	cmp	r2, #0
   15600:	ldr	r3, [r0]
   15604:	mov	r8, r0
   15608:	str	r3, [sp, #24]
   1560c:	movgt	r3, r9
   15610:	bgt	15678 <strspn@plt+0x4704>
   15614:	add	r5, r7, #8
   15618:	cmp	r4, r5
   1561c:	str	r2, [sp, #36]	; 0x24
   15620:	beq	15734 <strspn@plt+0x47c0>
   15624:	mov	r3, #8
   15628:	mov	r0, r4
   1562c:	str	r3, [sp]
   15630:	rsb	r2, r2, #1
   15634:	mvn	r3, #-2147483648	; 0x80000000
   15638:	add	r1, sp, #36	; 0x24
   1563c:	bl	1720c <strspn@plt+0x6298>
   15640:	mov	r4, r0
   15644:	str	r0, [r7]
   15648:	ldr	r0, [r7, #4]
   1564c:	ldr	r2, [sp, #36]	; 0x24
   15650:	mov	r1, #0
   15654:	sub	r2, r2, r0
   15658:	add	r0, r4, r0, lsl #3
   1565c:	lsl	r2, r2, #3
   15660:	bl	10eb4 <memset@plt>
   15664:	ldr	r3, [sp, #40]	; 0x28
   15668:	ldr	r5, [sp, #80]	; 0x50
   1566c:	ldr	r6, [sp, #84]	; 0x54
   15670:	ldr	r2, [sp, #36]	; 0x24
   15674:	str	r2, [r7, #4]
   15678:	ldr	r2, [sp, #44]	; 0x2c
   1567c:	ldr	r9, [r4]
   15680:	ldr	r7, [r4, #4]
   15684:	orr	r2, r2, #1
   15688:	add	fp, sp, #48	; 0x30
   1568c:	str	r2, [sp, #28]
   15690:	str	r2, [sp, #4]
   15694:	str	r3, [sp]
   15698:	str	r6, [sp, #16]
   1569c:	str	r5, [sp, #12]
   156a0:	mov	r1, r9
   156a4:	mov	r0, r7
   156a8:	str	fp, [sp, #8]
   156ac:	mvn	r3, #0
   156b0:	mov	r2, sl
   156b4:	bl	1216c <strspn@plt+0x11f8>
   156b8:	cmp	r9, r0
   156bc:	bhi	15720 <strspn@plt+0x47ac>
   156c0:	ldr	r3, [pc, #168]	; 15770 <strspn@plt+0x47fc>
   156c4:	add	r5, r0, #1
   156c8:	cmp	r7, r3
   156cc:	str	r5, [r4]
   156d0:	beq	156dc <strspn@plt+0x4768>
   156d4:	mov	r0, r7
   156d8:	bl	11ea0 <strspn@plt+0xf2c>
   156dc:	mov	r0, r5
   156e0:	bl	16ff0 <strspn@plt+0x607c>
   156e4:	ldr	lr, [sp, #84]	; 0x54
   156e8:	ldr	r3, [sp, #40]	; 0x28
   156ec:	ldr	ip, [sp, #80]	; 0x50
   156f0:	mov	r2, sl
   156f4:	mov	r1, r5
   156f8:	str	r0, [r4, #4]
   156fc:	ldr	r4, [sp, #28]
   15700:	str	r3, [sp]
   15704:	str	fp, [sp, #8]
   15708:	str	r4, [sp, #4]
   1570c:	str	lr, [sp, #16]
   15710:	str	ip, [sp, #12]
   15714:	mvn	r3, #0
   15718:	mov	r7, r0
   1571c:	bl	1216c <strspn@plt+0x11f8>
   15720:	ldr	r3, [sp, #24]
   15724:	mov	r0, r7
   15728:	str	r3, [r8]
   1572c:	add	sp, sp, #92	; 0x5c
   15730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15734:	mov	r3, #8
   15738:	str	r3, [sp]
   1573c:	add	r1, sp, #36	; 0x24
   15740:	rsb	r2, r2, #1
   15744:	mov	r0, fp
   15748:	mvn	r3, #-2147483648	; 0x80000000
   1574c:	bl	1720c <strspn@plt+0x6298>
   15750:	mov	r4, r0
   15754:	ldm	r5, {r0, r1}
   15758:	str	r4, [r7]
   1575c:	stm	r4, {r0, r1}
   15760:	b	15648 <strspn@plt+0x46d4>
   15764:	bl	10f50 <abort@plt>
   15768:	andeq	r9, r2, ip, ror #2
   1576c:	strdeq	r9, [r2], -ip
   15770:	muleq	r2, ip, r1
   15774:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15778:	mov	r5, r0
   1577c:	ldr	lr, [pc, #464]	; 15954 <strspn@plt+0x49e0>
   15780:	mov	r6, r1
   15784:	mov	sl, r2
   15788:	mov	fp, r3
   1578c:	ldm	lr!, {r0, r1, r2, r3}
   15790:	sub	sp, sp, #92	; 0x5c
   15794:	add	ip, sp, #40	; 0x28
   15798:	cmp	r6, #0
   1579c:	cmpne	r5, #0
   157a0:	stmia	ip!, {r0, r1, r2, r3}
   157a4:	moveq	r4, #1
   157a8:	ldm	lr!, {r0, r1, r2, r3}
   157ac:	movne	r4, #0
   157b0:	mov	r9, #10
   157b4:	str	r4, [sp, #28]
   157b8:	stmia	ip!, {r0, r1, r2, r3}
   157bc:	ldm	lr, {r0, r1, r2, r3}
   157c0:	str	r9, [sp, #40]	; 0x28
   157c4:	stm	ip, {r0, r1, r2, r3}
   157c8:	beq	15950 <strspn@plt+0x49dc>
   157cc:	str	r5, [sp, #80]	; 0x50
   157d0:	str	r6, [sp, #84]	; 0x54
   157d4:	bl	10e90 <__errno_location@plt>
   157d8:	ldr	r7, [pc, #376]	; 15958 <strspn@plt+0x49e4>
   157dc:	ldr	r2, [r7, #4]
   157e0:	ldr	r4, [r7]
   157e4:	cmp	r2, #0
   157e8:	ldr	r3, [r0]
   157ec:	mov	r8, r0
   157f0:	str	r3, [sp, #24]
   157f4:	movgt	r3, r9
   157f8:	bgt	15860 <strspn@plt+0x48ec>
   157fc:	add	r5, r7, #8
   15800:	cmp	r4, r5
   15804:	str	r2, [sp, #36]	; 0x24
   15808:	beq	15920 <strspn@plt+0x49ac>
   1580c:	mov	r3, #8
   15810:	mov	r0, r4
   15814:	str	r3, [sp]
   15818:	rsb	r2, r2, #1
   1581c:	mvn	r3, #-2147483648	; 0x80000000
   15820:	add	r1, sp, #36	; 0x24
   15824:	bl	1720c <strspn@plt+0x6298>
   15828:	mov	r4, r0
   1582c:	str	r0, [r7]
   15830:	ldr	r0, [r7, #4]
   15834:	ldr	r2, [sp, #36]	; 0x24
   15838:	mov	r1, #0
   1583c:	sub	r2, r2, r0
   15840:	add	r0, r4, r0, lsl #3
   15844:	lsl	r2, r2, #3
   15848:	bl	10eb4 <memset@plt>
   1584c:	ldr	r3, [sp, #40]	; 0x28
   15850:	ldr	r5, [sp, #80]	; 0x50
   15854:	ldr	r6, [sp, #84]	; 0x54
   15858:	ldr	r2, [sp, #36]	; 0x24
   1585c:	str	r2, [r7, #4]
   15860:	ldr	r2, [sp, #44]	; 0x2c
   15864:	ldr	r9, [r4]
   15868:	ldr	r7, [r4, #4]
   1586c:	orr	r2, r2, #1
   15870:	str	r3, [sp]
   15874:	add	r3, sp, #48	; 0x30
   15878:	str	r2, [sp, #28]
   1587c:	str	r2, [sp, #4]
   15880:	str	r3, [sp, #8]
   15884:	str	r6, [sp, #16]
   15888:	str	r5, [sp, #12]
   1588c:	mov	r1, r9
   15890:	mov	r0, r7
   15894:	mov	r3, fp
   15898:	mov	r2, sl
   1589c:	bl	1216c <strspn@plt+0x11f8>
   158a0:	cmp	r9, r0
   158a4:	bhi	1590c <strspn@plt+0x4998>
   158a8:	ldr	r3, [pc, #172]	; 1595c <strspn@plt+0x49e8>
   158ac:	add	r5, r0, #1
   158b0:	cmp	r7, r3
   158b4:	str	r5, [r4]
   158b8:	beq	158c4 <strspn@plt+0x4950>
   158bc:	mov	r0, r7
   158c0:	bl	11ea0 <strspn@plt+0xf2c>
   158c4:	mov	r0, r5
   158c8:	bl	16ff0 <strspn@plt+0x607c>
   158cc:	add	lr, sp, #48	; 0x30
   158d0:	ldr	ip, [sp, #84]	; 0x54
   158d4:	mov	r1, r5
   158d8:	ldr	r5, [sp, #28]
   158dc:	mov	r3, fp
   158e0:	mov	r2, sl
   158e4:	str	r0, [r4, #4]
   158e8:	ldr	r4, [sp, #80]	; 0x50
   158ec:	str	lr, [sp, #8]
   158f0:	ldr	lr, [sp, #40]	; 0x28
   158f4:	str	r5, [sp, #4]
   158f8:	str	ip, [sp, #16]
   158fc:	str	r4, [sp, #12]
   15900:	str	lr, [sp]
   15904:	mov	r7, r0
   15908:	bl	1216c <strspn@plt+0x11f8>
   1590c:	ldr	r3, [sp, #24]
   15910:	mov	r0, r7
   15914:	str	r3, [r8]
   15918:	add	sp, sp, #92	; 0x5c
   1591c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15920:	mov	r3, #8
   15924:	str	r3, [sp]
   15928:	add	r1, sp, #36	; 0x24
   1592c:	rsb	r2, r2, #1
   15930:	ldr	r0, [sp, #28]
   15934:	mvn	r3, #-2147483648	; 0x80000000
   15938:	bl	1720c <strspn@plt+0x6298>
   1593c:	mov	r4, r0
   15940:	ldm	r5, {r0, r1}
   15944:	str	r4, [r7]
   15948:	stm	r4, {r0, r1}
   1594c:	b	15830 <strspn@plt+0x48bc>
   15950:	bl	10f50 <abort@plt>
   15954:	andeq	r9, r2, ip, ror #2
   15958:	strdeq	r9, [r2], -ip
   1595c:	muleq	r2, ip, r1
   15960:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15964:	sub	sp, sp, #52	; 0x34
   15968:	mov	r5, r0
   1596c:	mov	sl, r1
   15970:	mov	fp, r2
   15974:	bl	10e90 <__errno_location@plt>
   15978:	ldr	r4, [pc, #404]	; 15b14 <strspn@plt+0x4ba0>
   1597c:	cmn	r5, #-2147483647	; 0x80000001
   15980:	ldr	r6, [r4]
   15984:	mov	r8, r0
   15988:	movne	r0, #0
   1598c:	moveq	r0, #1
   15990:	ldr	r3, [r8]
   15994:	orrs	r0, r0, r5, lsr #31
   15998:	str	r3, [sp, #28]
   1599c:	bne	15b10 <strspn@plt+0x4b9c>
   159a0:	ldr	r2, [r4, #4]
   159a4:	cmp	r5, r2
   159a8:	blt	15a08 <strspn@plt+0x4a94>
   159ac:	add	r7, r4, #8
   159b0:	cmp	r6, r7
   159b4:	str	r2, [sp, #44]	; 0x2c
   159b8:	beq	15ae0 <strspn@plt+0x4b6c>
   159bc:	mov	r3, #8
   159c0:	sub	r2, r5, r2
   159c4:	mov	r0, r6
   159c8:	str	r3, [sp]
   159cc:	add	r2, r2, #1
   159d0:	mvn	r3, #-2147483648	; 0x80000000
   159d4:	add	r1, sp, #44	; 0x2c
   159d8:	bl	1720c <strspn@plt+0x6298>
   159dc:	mov	r6, r0
   159e0:	str	r0, [r4]
   159e4:	ldr	r0, [r4, #4]
   159e8:	ldr	r2, [sp, #44]	; 0x2c
   159ec:	mov	r1, #0
   159f0:	sub	r2, r2, r0
   159f4:	add	r0, r6, r0, lsl #3
   159f8:	lsl	r2, r2, #3
   159fc:	bl	10eb4 <memset@plt>
   15a00:	ldr	r3, [sp, #44]	; 0x2c
   15a04:	str	r3, [r4, #4]
   15a08:	ldr	r2, [r4, #56]	; 0x38
   15a0c:	add	r3, r6, r5, lsl #3
   15a10:	ldr	r1, [r4, #20]
   15a14:	ldr	r7, [r3, #4]
   15a18:	ldr	r9, [r6, r5, lsl #3]
   15a1c:	ldr	ip, [r4, #60]	; 0x3c
   15a20:	str	r3, [sp, #32]
   15a24:	ldr	r3, [r4, #16]
   15a28:	str	r2, [sp, #12]
   15a2c:	ldr	r2, [pc, #228]	; 15b18 <strspn@plt+0x4ba4>
   15a30:	orr	r1, r1, #1
   15a34:	str	r1, [sp, #36]	; 0x24
   15a38:	str	r1, [sp, #4]
   15a3c:	str	r2, [sp, #8]
   15a40:	str	r3, [sp]
   15a44:	mov	r0, r7
   15a48:	mov	r1, r9
   15a4c:	str	ip, [sp, #16]
   15a50:	mov	r3, fp
   15a54:	mov	r2, sl
   15a58:	bl	1216c <strspn@plt+0x11f8>
   15a5c:	cmp	r9, r0
   15a60:	bhi	15acc <strspn@plt+0x4b58>
   15a64:	ldr	r3, [pc, #176]	; 15b1c <strspn@plt+0x4ba8>
   15a68:	add	r9, r0, #1
   15a6c:	cmp	r7, r3
   15a70:	str	r9, [r6, r5, lsl #3]
   15a74:	beq	15a80 <strspn@plt+0x4b0c>
   15a78:	mov	r0, r7
   15a7c:	bl	11ea0 <strspn@plt+0xf2c>
   15a80:	mov	r0, r9
   15a84:	bl	16ff0 <strspn@plt+0x607c>
   15a88:	ldr	ip, [sp, #32]
   15a8c:	ldr	lr, [r4, #60]	; 0x3c
   15a90:	ldr	r5, [r4, #56]	; 0x38
   15a94:	mov	r3, fp
   15a98:	mov	r2, sl
   15a9c:	mov	r1, r9
   15aa0:	str	r0, [ip, #4]
   15aa4:	ldr	ip, [r4, #16]
   15aa8:	ldr	r4, [pc, #104]	; 15b18 <strspn@plt+0x4ba4>
   15aac:	str	lr, [sp, #16]
   15ab0:	str	r4, [sp, #8]
   15ab4:	ldr	r4, [sp, #36]	; 0x24
   15ab8:	str	r5, [sp, #12]
   15abc:	str	r4, [sp, #4]
   15ac0:	str	ip, [sp]
   15ac4:	mov	r7, r0
   15ac8:	bl	1216c <strspn@plt+0x11f8>
   15acc:	ldr	r3, [sp, #28]
   15ad0:	mov	r0, r7
   15ad4:	str	r3, [r8]
   15ad8:	add	sp, sp, #52	; 0x34
   15adc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ae0:	mov	r3, #8
   15ae4:	sub	r2, r5, r2
   15ae8:	str	r3, [sp]
   15aec:	add	r1, sp, #44	; 0x2c
   15af0:	add	r2, r2, #1
   15af4:	mvn	r3, #-2147483648	; 0x80000000
   15af8:	bl	1720c <strspn@plt+0x6298>
   15afc:	mov	r6, r0
   15b00:	ldm	r7, {r0, r1}
   15b04:	str	r6, [r4]
   15b08:	stm	r6, {r0, r1}
   15b0c:	b	159e4 <strspn@plt+0x4a70>
   15b10:	bl	10f50 <abort@plt>
   15b14:	strdeq	r9, [r2], -ip
   15b18:	andeq	r9, r2, r4, lsl r1
   15b1c:	muleq	r2, ip, r1
   15b20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b24:	sub	sp, sp, #44	; 0x2c
   15b28:	mov	r9, r0
   15b2c:	mov	sl, r1
   15b30:	bl	10e90 <__errno_location@plt>
   15b34:	ldr	r4, [pc, #360]	; 15ca4 <strspn@plt+0x4d30>
   15b38:	ldr	r2, [r4, #4]
   15b3c:	ldr	r5, [r4]
   15b40:	cmp	r2, #0
   15b44:	ldr	r3, [r0]
   15b48:	mov	r7, r0
   15b4c:	str	r3, [sp, #24]
   15b50:	bgt	15bac <strspn@plt+0x4c38>
   15b54:	add	r6, r4, #8
   15b58:	cmp	r5, r6
   15b5c:	str	r2, [sp, #36]	; 0x24
   15b60:	beq	15c74 <strspn@plt+0x4d00>
   15b64:	mov	r3, #8
   15b68:	mov	r0, r5
   15b6c:	str	r3, [sp]
   15b70:	rsb	r2, r2, #1
   15b74:	mvn	r3, #-2147483648	; 0x80000000
   15b78:	add	r1, sp, #36	; 0x24
   15b7c:	bl	1720c <strspn@plt+0x6298>
   15b80:	mov	r5, r0
   15b84:	str	r0, [r4]
   15b88:	ldr	r0, [r4, #4]
   15b8c:	ldr	r2, [sp, #36]	; 0x24
   15b90:	mov	r1, #0
   15b94:	sub	r2, r2, r0
   15b98:	add	r0, r5, r0, lsl #3
   15b9c:	lsl	r2, r2, #3
   15ba0:	bl	10eb4 <memset@plt>
   15ba4:	ldr	r3, [sp, #36]	; 0x24
   15ba8:	str	r3, [r4, #4]
   15bac:	ldr	r1, [r4, #20]
   15bb0:	ldr	r8, [r5]
   15bb4:	ldr	r6, [r5, #4]
   15bb8:	ldr	r2, [r4, #56]	; 0x38
   15bbc:	ldr	r3, [r4, #16]
   15bc0:	ldr	ip, [r4, #60]	; 0x3c
   15bc4:	ldr	fp, [pc, #220]	; 15ca8 <strspn@plt+0x4d34>
   15bc8:	orr	r1, r1, #1
   15bcc:	str	r1, [sp, #28]
   15bd0:	str	r1, [sp, #4]
   15bd4:	str	r2, [sp, #12]
   15bd8:	str	r3, [sp]
   15bdc:	mov	r1, r8
   15be0:	mov	r0, r6
   15be4:	str	ip, [sp, #16]
   15be8:	str	fp, [sp, #8]
   15bec:	mov	r3, sl
   15bf0:	mov	r2, r9
   15bf4:	bl	1216c <strspn@plt+0x11f8>
   15bf8:	cmp	r8, r0
   15bfc:	bhi	15c60 <strspn@plt+0x4cec>
   15c00:	ldr	r3, [pc, #164]	; 15cac <strspn@plt+0x4d38>
   15c04:	add	r8, r0, #1
   15c08:	cmp	r6, r3
   15c0c:	str	r8, [r5]
   15c10:	beq	15c1c <strspn@plt+0x4ca8>
   15c14:	mov	r0, r6
   15c18:	bl	11ea0 <strspn@plt+0xf2c>
   15c1c:	mov	r0, r8
   15c20:	bl	16ff0 <strspn@plt+0x607c>
   15c24:	ldr	lr, [r4, #60]	; 0x3c
   15c28:	ldr	ip, [r4, #16]
   15c2c:	mov	r3, sl
   15c30:	mov	r2, r9
   15c34:	mov	r1, r8
   15c38:	str	r0, [r5, #4]
   15c3c:	ldr	r5, [r4, #56]	; 0x38
   15c40:	ldr	r4, [sp, #28]
   15c44:	str	fp, [sp, #8]
   15c48:	str	r4, [sp, #4]
   15c4c:	str	lr, [sp, #16]
   15c50:	str	r5, [sp, #12]
   15c54:	str	ip, [sp]
   15c58:	mov	r6, r0
   15c5c:	bl	1216c <strspn@plt+0x11f8>
   15c60:	ldr	r3, [sp, #24]
   15c64:	mov	r0, r6
   15c68:	str	r3, [r7]
   15c6c:	add	sp, sp, #44	; 0x2c
   15c70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c74:	mov	r3, #8
   15c78:	str	r3, [sp]
   15c7c:	add	r1, sp, #36	; 0x24
   15c80:	rsb	r2, r2, #1
   15c84:	mvn	r3, #-2147483648	; 0x80000000
   15c88:	mov	r0, #0
   15c8c:	bl	1720c <strspn@plt+0x6298>
   15c90:	mov	r5, r0
   15c94:	ldm	r6, {r0, r1}
   15c98:	str	r5, [r4]
   15c9c:	stm	r5, {r0, r1}
   15ca0:	b	15b88 <strspn@plt+0x4c14>
   15ca4:	strdeq	r9, [r2], -ip
   15ca8:	andeq	r9, r2, r4, lsl r1
   15cac:	muleq	r2, ip, r1
   15cb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15cb4:	sub	sp, sp, #44	; 0x2c
   15cb8:	mov	r5, r0
   15cbc:	mov	sl, r1
   15cc0:	bl	10e90 <__errno_location@plt>
   15cc4:	ldr	r4, [pc, #396]	; 15e58 <strspn@plt+0x4ee4>
   15cc8:	cmn	r5, #-2147483647	; 0x80000001
   15ccc:	ldr	r6, [r4]
   15cd0:	mov	r8, r0
   15cd4:	movne	r0, #0
   15cd8:	moveq	r0, #1
   15cdc:	ldr	r3, [r8]
   15ce0:	orrs	r0, r0, r5, lsr #31
   15ce4:	str	r3, [sp, #24]
   15ce8:	bne	15e54 <strspn@plt+0x4ee0>
   15cec:	ldr	r2, [r4, #4]
   15cf0:	cmp	r5, r2
   15cf4:	blt	15d54 <strspn@plt+0x4de0>
   15cf8:	add	r7, r4, #8
   15cfc:	cmp	r6, r7
   15d00:	str	r2, [sp, #36]	; 0x24
   15d04:	beq	15e24 <strspn@plt+0x4eb0>
   15d08:	mov	r3, #8
   15d0c:	sub	r2, r5, r2
   15d10:	mov	r0, r6
   15d14:	str	r3, [sp]
   15d18:	add	r2, r2, #1
   15d1c:	mvn	r3, #-2147483648	; 0x80000000
   15d20:	add	r1, sp, #36	; 0x24
   15d24:	bl	1720c <strspn@plt+0x6298>
   15d28:	mov	r6, r0
   15d2c:	str	r0, [r4]
   15d30:	ldr	r0, [r4, #4]
   15d34:	ldr	r2, [sp, #36]	; 0x24
   15d38:	mov	r1, #0
   15d3c:	sub	r2, r2, r0
   15d40:	add	r0, r6, r0, lsl #3
   15d44:	lsl	r2, r2, #3
   15d48:	bl	10eb4 <memset@plt>
   15d4c:	ldr	r3, [sp, #36]	; 0x24
   15d50:	str	r3, [r4, #4]
   15d54:	ldr	r2, [r4, #56]	; 0x38
   15d58:	add	fp, r6, r5, lsl #3
   15d5c:	ldr	r1, [r4, #20]
   15d60:	ldr	r9, [r6, r5, lsl #3]
   15d64:	ldr	r7, [fp, #4]
   15d68:	ldr	r3, [r4, #16]
   15d6c:	ldr	ip, [r4, #60]	; 0x3c
   15d70:	str	r2, [sp, #12]
   15d74:	ldr	r2, [pc, #224]	; 15e5c <strspn@plt+0x4ee8>
   15d78:	orr	r1, r1, #1
   15d7c:	str	r1, [sp, #28]
   15d80:	str	r1, [sp, #4]
   15d84:	str	r2, [sp, #8]
   15d88:	str	r3, [sp]
   15d8c:	mov	r0, r7
   15d90:	mov	r1, r9
   15d94:	str	ip, [sp, #16]
   15d98:	mvn	r3, #0
   15d9c:	mov	r2, sl
   15da0:	bl	1216c <strspn@plt+0x11f8>
   15da4:	cmp	r9, r0
   15da8:	bhi	15e10 <strspn@plt+0x4e9c>
   15dac:	ldr	r3, [pc, #172]	; 15e60 <strspn@plt+0x4eec>
   15db0:	add	r9, r0, #1
   15db4:	cmp	r7, r3
   15db8:	str	r9, [r6, r5, lsl #3]
   15dbc:	beq	15dc8 <strspn@plt+0x4e54>
   15dc0:	mov	r0, r7
   15dc4:	bl	11ea0 <strspn@plt+0xf2c>
   15dc8:	mov	r0, r9
   15dcc:	bl	16ff0 <strspn@plt+0x607c>
   15dd0:	ldr	ip, [r4, #60]	; 0x3c
   15dd4:	ldr	r3, [r4, #16]
   15dd8:	ldr	lr, [r4, #56]	; 0x38
   15ddc:	ldr	r4, [pc, #120]	; 15e5c <strspn@plt+0x4ee8>
   15de0:	mov	r2, sl
   15de4:	mov	r1, r9
   15de8:	str	r0, [fp, #4]
   15dec:	str	r4, [sp, #8]
   15df0:	ldr	r4, [sp, #28]
   15df4:	str	r3, [sp]
   15df8:	str	r4, [sp, #4]
   15dfc:	str	ip, [sp, #16]
   15e00:	str	lr, [sp, #12]
   15e04:	mvn	r3, #0
   15e08:	mov	r7, r0
   15e0c:	bl	1216c <strspn@plt+0x11f8>
   15e10:	ldr	r3, [sp, #24]
   15e14:	mov	r0, r7
   15e18:	str	r3, [r8]
   15e1c:	add	sp, sp, #44	; 0x2c
   15e20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e24:	mov	r3, #8
   15e28:	sub	r2, r5, r2
   15e2c:	str	r3, [sp]
   15e30:	add	r1, sp, #36	; 0x24
   15e34:	add	r2, r2, #1
   15e38:	mvn	r3, #-2147483648	; 0x80000000
   15e3c:	bl	1720c <strspn@plt+0x6298>
   15e40:	mov	r6, r0
   15e44:	ldm	r7, {r0, r1}
   15e48:	str	r6, [r4]
   15e4c:	stm	r6, {r0, r1}
   15e50:	b	15d30 <strspn@plt+0x4dbc>
   15e54:	bl	10f50 <abort@plt>
   15e58:	strdeq	r9, [r2], -ip
   15e5c:	andeq	r9, r2, r4, lsl r1
   15e60:	muleq	r2, ip, r1
   15e64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e68:	sub	sp, sp, #44	; 0x2c
   15e6c:	mov	sl, r0
   15e70:	bl	10e90 <__errno_location@plt>
   15e74:	ldr	r4, [pc, #348]	; 15fd8 <strspn@plt+0x5064>
   15e78:	ldr	r2, [r4, #4]
   15e7c:	ldr	r5, [r4]
   15e80:	cmp	r2, #0
   15e84:	ldr	r3, [r0]
   15e88:	mov	r8, r0
   15e8c:	str	r3, [sp, #28]
   15e90:	bgt	15eec <strspn@plt+0x4f78>
   15e94:	add	r6, r4, #8
   15e98:	cmp	r5, r6
   15e9c:	str	r2, [sp, #36]	; 0x24
   15ea0:	beq	15fa8 <strspn@plt+0x5034>
   15ea4:	mov	r3, #8
   15ea8:	mov	r0, r5
   15eac:	str	r3, [sp]
   15eb0:	rsb	r2, r2, #1
   15eb4:	mvn	r3, #-2147483648	; 0x80000000
   15eb8:	add	r1, sp, #36	; 0x24
   15ebc:	bl	1720c <strspn@plt+0x6298>
   15ec0:	mov	r5, r0
   15ec4:	str	r0, [r4]
   15ec8:	ldr	r0, [r4, #4]
   15ecc:	ldr	r2, [sp, #36]	; 0x24
   15ed0:	mov	r1, #0
   15ed4:	sub	r2, r2, r0
   15ed8:	add	r0, r5, r0, lsl #3
   15edc:	lsl	r2, r2, #3
   15ee0:	bl	10eb4 <memset@plt>
   15ee4:	ldr	r3, [sp, #36]	; 0x24
   15ee8:	str	r3, [r4, #4]
   15eec:	ldr	r7, [r4, #20]
   15ef0:	ldr	r9, [r5]
   15ef4:	ldr	r6, [r5, #4]
   15ef8:	ldr	r2, [r4, #56]	; 0x38
   15efc:	ldr	r3, [r4, #16]
   15f00:	ldr	ip, [r4, #60]	; 0x3c
   15f04:	ldr	fp, [pc, #208]	; 15fdc <strspn@plt+0x5068>
   15f08:	orr	r7, r7, #1
   15f0c:	str	r2, [sp, #12]
   15f10:	str	r3, [sp]
   15f14:	str	r7, [sp, #4]
   15f18:	mov	r1, r9
   15f1c:	mov	r0, r6
   15f20:	str	ip, [sp, #16]
   15f24:	str	fp, [sp, #8]
   15f28:	mvn	r3, #0
   15f2c:	mov	r2, sl
   15f30:	bl	1216c <strspn@plt+0x11f8>
   15f34:	cmp	r9, r0
   15f38:	bhi	15f94 <strspn@plt+0x5020>
   15f3c:	ldr	r3, [pc, #156]	; 15fe0 <strspn@plt+0x506c>
   15f40:	add	r9, r0, #1
   15f44:	cmp	r6, r3
   15f48:	str	r9, [r5]
   15f4c:	beq	15f58 <strspn@plt+0x4fe4>
   15f50:	mov	r0, r6
   15f54:	bl	11ea0 <strspn@plt+0xf2c>
   15f58:	mov	r0, r9
   15f5c:	bl	16ff0 <strspn@plt+0x607c>
   15f60:	ldr	ip, [r4, #60]	; 0x3c
   15f64:	ldr	r3, [r4, #16]
   15f68:	ldr	lr, [r4, #56]	; 0x38
   15f6c:	mov	r2, sl
   15f70:	mov	r1, r9
   15f74:	str	r0, [r5, #4]
   15f78:	str	r3, [sp]
   15f7c:	stmib	sp, {r7, fp}
   15f80:	str	ip, [sp, #16]
   15f84:	str	lr, [sp, #12]
   15f88:	mvn	r3, #0
   15f8c:	mov	r6, r0
   15f90:	bl	1216c <strspn@plt+0x11f8>
   15f94:	ldr	r3, [sp, #28]
   15f98:	mov	r0, r6
   15f9c:	str	r3, [r8]
   15fa0:	add	sp, sp, #44	; 0x2c
   15fa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15fa8:	mov	r3, #8
   15fac:	str	r3, [sp]
   15fb0:	add	r1, sp, #36	; 0x24
   15fb4:	rsb	r2, r2, #1
   15fb8:	mvn	r3, #-2147483648	; 0x80000000
   15fbc:	mov	r0, #0
   15fc0:	bl	1720c <strspn@plt+0x6298>
   15fc4:	mov	r5, r0
   15fc8:	ldm	r6, {r0, r1}
   15fcc:	str	r5, [r4]
   15fd0:	stm	r5, {r0, r1}
   15fd4:	b	15ec8 <strspn@plt+0x4f54>
   15fd8:	strdeq	r9, [r2], -ip
   15fdc:	andeq	r9, r2, r4, lsl r1
   15fe0:	muleq	r2, ip, r1
   15fe4:	andeq	r0, r0, r0
   15fe8:	push	{lr}		; (str lr, [sp, #-4]!)
   15fec:	sub	sp, sp, #108	; 0x6c
   15ff0:	mov	r1, r0
   15ff4:	mov	r2, sp
   15ff8:	mov	r0, #3
   15ffc:	bl	10f68 <__lxstat64@plt>
   16000:	cmp	r0, #0
   16004:	bne	16024 <strspn@plt+0x50b0>
   16008:	bl	10e90 <__errno_location@plt>
   1600c:	mvn	r3, #0
   16010:	mov	r2, #17
   16014:	str	r2, [r0]
   16018:	mov	r0, r3
   1601c:	add	sp, sp, #108	; 0x6c
   16020:	pop	{pc}		; (ldr pc, [sp], #4)
   16024:	bl	10e90 <__errno_location@plt>
   16028:	ldr	r3, [r0]
   1602c:	cmp	r3, #75	; 0x4b
   16030:	beq	1600c <strspn@plt+0x5098>
   16034:	subs	r3, r3, #2
   16038:	mvnne	r3, #0
   1603c:	mov	r0, r3
   16040:	add	sp, sp, #108	; 0x6c
   16044:	pop	{pc}		; (ldr pc, [sp], #4)
   16048:	mov	r1, #448	; 0x1c0
   1604c:	b	10ea8 <mkdir@plt>
   16050:	ldr	r1, [r1]
   16054:	mov	r2, #384	; 0x180
   16058:	bic	r1, r1, #195	; 0xc3
   1605c:	orr	r1, r1, #194	; 0xc2
   16060:	b	10df4 <open64@plt>
   16064:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16068:	sub	sp, sp, #68	; 0x44
   1606c:	mov	r6, r1
   16070:	mov	r8, r3
   16074:	mov	r7, r0
   16078:	str	r2, [sp, #28]
   1607c:	str	r3, [sp, #32]
   16080:	str	r0, [sp, #20]
   16084:	bl	10e90 <__errno_location@plt>
   16088:	add	r4, sp, #40	; 0x28
   1608c:	ldr	r3, [pc, #516]	; 16298 <strspn@plt+0x5324>
   16090:	lsr	r4, r4, #3
   16094:	mov	r5, #0
   16098:	sub	r3, r8, r3
   1609c:	clz	r3, r3
   160a0:	lsr	r3, r3, #5
   160a4:	str	r3, [sp, #8]
   160a8:	strd	r4, [sp, #40]	; 0x28
   160ac:	mov	r9, r0
   160b0:	str	r0, [sp, #16]
   160b4:	mov	r0, r7
   160b8:	bl	10e78 <strlen@plt>
   160bc:	add	r3, r6, #6
   160c0:	cmp	r0, r3
   160c4:	ldr	r3, [r9]
   160c8:	str	r3, [sp, #36]	; 0x24
   160cc:	bcc	1626c <strspn@plt+0x52f8>
   160d0:	mvn	r3, #5
   160d4:	sub	r3, r3, r6
   160d8:	add	r6, r3, r0
   160dc:	add	r3, r7, r6
   160e0:	mov	r0, r3
   160e4:	ldr	r1, [pc, #432]	; 1629c <strspn@plt+0x5328>
   160e8:	str	r3, [sp, #24]
   160ec:	bl	10f74 <strspn@plt>
   160f0:	cmp	r0, #5
   160f4:	bls	1626c <strspn@plt+0x52f8>
   160f8:	ldr	r2, [pc, #416]	; 162a0 <strspn@plt+0x532c>
   160fc:	add	r3, r6, #6
   16100:	str	r2, [sp, #12]
   16104:	ldr	r2, [sp, #20]
   16108:	add	r9, pc, #376	; 0x178
   1610c:	ldrd	r8, [r9]
   16110:	ldr	r6, [pc, #396]	; 162a4 <strspn@plt+0x5330>
   16114:	ldr	sl, [pc, #396]	; 162a8 <strspn@plt+0x5334>
   16118:	add	r3, r2, r3
   1611c:	mov	r7, #1
   16120:	str	r3, [sp, #4]
   16124:	mov	r3, #0
   16128:	str	r3, [sp]
   1612c:	ldr	fp, [sp, #24]
   16130:	ldr	r3, [sp]
   16134:	cmp	r3, #0
   16138:	subne	r3, r3, #1
   1613c:	strne	r3, [sp]
   16140:	bne	161cc <strspn@plt+0x5258>
   16144:	ldr	r3, [sp, #8]
   16148:	cmp	r3, #0
   1614c:	bne	161a0 <strspn@plt+0x522c>
   16150:	add	r1, sp, #56	; 0x38
   16154:	mov	r0, r7
   16158:	bl	10d34 <clock_gettime@plt>
   1615c:	ldr	r1, [sp, #60]	; 0x3c
   16160:	eor	r2, r4, r1
   16164:	eor	r3, r5, r1, asr #31
   16168:	mul	r1, sl, r2
   1616c:	umull	r4, r5, r2, r6
   16170:	mla	r3, r6, r3, r1
   16174:	add	r5, r3, r5
   16178:	add	r3, pc, #272	; 0x110
   1617c:	ldrd	r2, [r3]
   16180:	adds	r2, r2, r4
   16184:	adc	r3, r3, r5
   16188:	mov	r4, r2
   1618c:	mov	r5, r3
   16190:	cmp	r5, r9
   16194:	cmpeq	r4, r8
   16198:	strd	r4, [sp, #40]	; 0x28
   1619c:	bls	161c0 <strspn@plt+0x524c>
   161a0:	mov	r2, r7
   161a4:	mov	r1, #8
   161a8:	add	r0, sp, #48	; 0x30
   161ac:	bl	10f38 <getrandom@plt>
   161b0:	cmp	r0, #8
   161b4:	bne	16150 <strspn@plt+0x51dc>
   161b8:	ldrd	r4, [sp, #48]	; 0x30
   161bc:	b	16190 <strspn@plt+0x521c>
   161c0:	mov	r3, #9
   161c4:	str	r3, [sp]
   161c8:	str	r7, [sp, #8]
   161cc:	mov	r0, r4
   161d0:	mov	r1, r5
   161d4:	mov	r2, #62	; 0x3e
   161d8:	mov	r3, #0
   161dc:	bl	17d34 <strspn@plt+0x6dc0>
   161e0:	ldr	r3, [pc, #196]	; 162ac <strspn@plt+0x5338>
   161e4:	mov	r0, r4
   161e8:	mov	r1, r5
   161ec:	ldrb	ip, [r3, r2]
   161f0:	mov	r3, #0
   161f4:	mov	r2, #62	; 0x3e
   161f8:	strb	ip, [fp], #1
   161fc:	bl	17d34 <strspn@plt+0x6dc0>
   16200:	ldr	r3, [sp, #4]
   16204:	cmp	fp, r3
   16208:	mov	r4, r0
   1620c:	mov	r5, r1
   16210:	strd	r4, [sp, #40]	; 0x28
   16214:	bne	16130 <strspn@plt+0x51bc>
   16218:	ldr	r3, [sp, #32]
   1621c:	ldr	r1, [sp, #28]
   16220:	ldr	r0, [sp, #20]
   16224:	blx	r3
   16228:	ldr	r3, [sp, #16]
   1622c:	cmp	r0, #0
   16230:	bge	1625c <strspn@plt+0x52e8>
   16234:	ldr	r3, [r3]
   16238:	cmp	r3, #17
   1623c:	bne	16250 <strspn@plt+0x52dc>
   16240:	ldr	r3, [sp, #12]
   16244:	subs	r3, r3, #1
   16248:	str	r3, [sp, #12]
   1624c:	bne	1612c <strspn@plt+0x51b8>
   16250:	mvn	r0, #0
   16254:	add	sp, sp, #68	; 0x44
   16258:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1625c:	ldr	r2, [sp, #36]	; 0x24
   16260:	str	r2, [r3]
   16264:	add	sp, sp, #68	; 0x44
   16268:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1626c:	ldr	r2, [sp, #16]
   16270:	mov	r3, #22
   16274:	mvn	r0, #0
   16278:	str	r3, [r2]
   1627c:	add	sp, sp, #68	; 0x44
   16280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16284:	nop			; (mov r0, r0)
   16288:	beq	fe9eb28c <optarg@@GLIBC_2.4+0xfe9c2134>
   1628c:			; <UNDEFINED> instruction: 0xf49998db
   16290:	strlt	pc, [r4, #-813]	; 0xfffffcd3
   16294:	andeq	r0, r0, r0
   16298:	andeq	r5, r1, r8, ror #31
   1629c:	andeq	r8, r1, r8, lsl #27
   162a0:	strdeq	sl, [r3], -r8
   162a4:			; <UNDEFINED> instruction: 0x87b0b0fd
   162a8:	ldrcs	r2, [fp, r6, ror #29]!
   162ac:	strdeq	r8, [r1], -ip
   162b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   162b4:	sub	sp, sp, #76	; 0x4c
   162b8:	mov	r5, r1
   162bc:	mov	r7, r3
   162c0:	mov	r6, r0
   162c4:	str	r2, [sp, #28]
   162c8:	str	r3, [sp, #32]
   162cc:	str	r0, [sp, #16]
   162d0:	bl	10e90 <__errno_location@plt>
   162d4:	add	r3, sp, #48	; 0x30
   162d8:	ldr	r2, [pc, #552]	; 16508 <strspn@plt+0x5594>
   162dc:	lsr	r3, r3, #3
   162e0:	str	r3, [sp, #48]	; 0x30
   162e4:	mov	r4, #0
   162e8:	sub	r3, r7, r2
   162ec:	clz	r3, r3
   162f0:	lsr	r3, r3, #5
   162f4:	str	r3, [sp, #12]
   162f8:	str	r4, [sp, #52]	; 0x34
   162fc:	mov	r8, r0
   16300:	str	r0, [sp, #24]
   16304:	mov	r0, r6
   16308:	bl	10e78 <strlen@plt>
   1630c:	ldr	r3, [sp, #112]	; 0x70
   16310:	add	r3, r5, r3
   16314:	cmp	r0, r3
   16318:	ldr	r3, [r8]
   1631c:	str	r3, [sp, #44]	; 0x2c
   16320:	bcc	164dc <strspn@plt+0x5568>
   16324:	ldr	r3, [sp, #112]	; 0x70
   16328:	ldr	r1, [pc, #476]	; 1650c <strspn@plt+0x5598>
   1632c:	sub	r0, r0, r3
   16330:	sub	r5, r0, r5
   16334:	add	r3, r6, r5
   16338:	mov	r0, r3
   1633c:	str	r3, [sp, #36]	; 0x24
   16340:	bl	10f74 <strspn@plt>
   16344:	ldr	r3, [sp, #112]	; 0x70
   16348:	cmp	r3, r0
   1634c:	bhi	164dc <strspn@plt+0x5568>
   16350:	ldr	r3, [pc, #440]	; 16510 <strspn@plt+0x559c>
   16354:	add	r9, pc, #412	; 0x19c
   16358:	ldrd	r8, [r9]
   1635c:	str	r3, [sp, #20]
   16360:	ldr	r6, [pc, #428]	; 16514 <strspn@plt+0x55a0>
   16364:	ldr	r3, [sp, #112]	; 0x70
   16368:	ldr	fp, [pc, #424]	; 16518 <strspn@plt+0x55a4>
   1636c:	add	r3, r3, r5
   16370:	str	r4, [sp, #4]
   16374:	str	r3, [sp, #40]	; 0x28
   16378:	ldr	r3, [sp, #112]	; 0x70
   1637c:	cmp	r3, #0
   16380:	beq	16488 <strspn@plt+0x5514>
   16384:	ldr	r3, [sp, #16]
   16388:	ldr	r2, [sp, #40]	; 0x28
   1638c:	ldrd	r4, [sp, #48]	; 0x30
   16390:	ldr	sl, [sp, #36]	; 0x24
   16394:	mov	r7, #1
   16398:	add	r3, r3, r2
   1639c:	str	r3, [sp, #8]
   163a0:	ldr	r3, [sp, #4]
   163a4:	cmp	r3, #0
   163a8:	subne	r3, r3, #1
   163ac:	strne	r3, [sp, #4]
   163b0:	bne	1643c <strspn@plt+0x54c8>
   163b4:	ldr	r3, [sp, #12]
   163b8:	cmp	r3, #0
   163bc:	bne	16410 <strspn@plt+0x549c>
   163c0:	add	r1, sp, #64	; 0x40
   163c4:	mov	r0, r7
   163c8:	bl	10d34 <clock_gettime@plt>
   163cc:	ldr	r1, [sp, #68]	; 0x44
   163d0:	eor	r2, r4, r1
   163d4:	eor	r3, r5, r1, asr #31
   163d8:	mul	r1, fp, r2
   163dc:	umull	r4, r5, r2, r6
   163e0:	mla	r3, r6, r3, r1
   163e4:	add	r5, r3, r5
   163e8:	add	r3, pc, #272	; 0x110
   163ec:	ldrd	r2, [r3]
   163f0:	adds	r2, r2, r4
   163f4:	adc	r3, r3, r5
   163f8:	mov	r4, r2
   163fc:	mov	r5, r3
   16400:	cmp	r5, r9
   16404:	cmpeq	r4, r8
   16408:	strd	r4, [sp, #48]	; 0x30
   1640c:	bls	16430 <strspn@plt+0x54bc>
   16410:	mov	r2, r7
   16414:	mov	r1, #8
   16418:	add	r0, sp, #56	; 0x38
   1641c:	bl	10f38 <getrandom@plt>
   16420:	cmp	r0, #8
   16424:	bne	163c0 <strspn@plt+0x544c>
   16428:	ldrd	r4, [sp, #56]	; 0x38
   1642c:	b	16400 <strspn@plt+0x548c>
   16430:	mov	r3, #9
   16434:	str	r3, [sp, #4]
   16438:	str	r7, [sp, #12]
   1643c:	mov	r0, r4
   16440:	mov	r1, r5
   16444:	mov	r2, #62	; 0x3e
   16448:	mov	r3, #0
   1644c:	bl	17d34 <strspn@plt+0x6dc0>
   16450:	ldr	r3, [pc, #196]	; 1651c <strspn@plt+0x55a8>
   16454:	mov	r0, r4
   16458:	mov	r1, r5
   1645c:	ldrb	ip, [r3, r2]
   16460:	mov	r3, #0
   16464:	mov	r2, #62	; 0x3e
   16468:	strb	ip, [sl], #1
   1646c:	bl	17d34 <strspn@plt+0x6dc0>
   16470:	ldr	r3, [sp, #8]
   16474:	cmp	r3, sl
   16478:	mov	r4, r0
   1647c:	mov	r5, r1
   16480:	strd	r4, [sp, #48]	; 0x30
   16484:	bne	163a0 <strspn@plt+0x542c>
   16488:	ldr	r3, [sp, #32]
   1648c:	ldr	r1, [sp, #28]
   16490:	ldr	r0, [sp, #16]
   16494:	blx	r3
   16498:	ldr	r3, [sp, #24]
   1649c:	cmp	r0, #0
   164a0:	bge	164cc <strspn@plt+0x5558>
   164a4:	ldr	r3, [r3]
   164a8:	cmp	r3, #17
   164ac:	bne	164c0 <strspn@plt+0x554c>
   164b0:	ldr	r3, [sp, #20]
   164b4:	subs	r3, r3, #1
   164b8:	str	r3, [sp, #20]
   164bc:	bne	16378 <strspn@plt+0x5404>
   164c0:	mvn	r0, #0
   164c4:	add	sp, sp, #76	; 0x4c
   164c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   164cc:	ldr	r2, [sp, #44]	; 0x2c
   164d0:	str	r2, [r3]
   164d4:	add	sp, sp, #76	; 0x4c
   164d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   164dc:	ldr	r2, [sp, #24]
   164e0:	mov	r3, #22
   164e4:	mvn	r0, #0
   164e8:	str	r3, [r2]
   164ec:	add	sp, sp, #76	; 0x4c
   164f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   164f4:	nop			; (mov r0, r0)
   164f8:	beq	fe9eb4fc <optarg@@GLIBC_2.4+0xfe9c23a4>
   164fc:			; <UNDEFINED> instruction: 0xf49998db
   16500:	strlt	pc, [r4, #-813]	; 0xfffffcd3
   16504:	andeq	r0, r0, r0
   16508:	andeq	r5, r1, r8, ror #31
   1650c:	andeq	r8, r1, r8, lsl #27
   16510:	strdeq	sl, [r3], -r8
   16514:			; <UNDEFINED> instruction: 0x87b0b0fd
   16518:	ldrcs	r2, [fp, r6, ror #29]!
   1651c:	strdeq	r8, [r1], -ip
   16520:	push	{lr}		; (str lr, [sp, #-4]!)
   16524:	sub	sp, sp, #20
   16528:	ldr	lr, [pc, #36]	; 16554 <strspn@plt+0x55e0>
   1652c:	add	ip, sp, #16
   16530:	add	r3, lr, r3, lsl #2
   16534:	ldr	lr, [sp, #24]
   16538:	str	r2, [ip, #-4]!
   1653c:	ldr	r3, [r3, #64]	; 0x40
   16540:	mov	r2, ip
   16544:	str	lr, [sp]
   16548:	bl	162b0 <strspn@plt+0x533c>
   1654c:	add	sp, sp, #20
   16550:	pop	{pc}		; (ldr pc, [sp], #4)
   16554:	strdeq	r8, [r1], -ip
   16558:	push	{lr}		; (str lr, [sp, #-4]!)
   1655c:	sub	sp, sp, #12
   16560:	ldr	lr, [pc, #28]	; 16584 <strspn@plt+0x5610>
   16564:	add	ip, sp, #8
   16568:	add	r3, lr, r3, lsl #2
   1656c:	str	r2, [ip, #-4]!
   16570:	ldr	r3, [r3, #64]	; 0x40
   16574:	mov	r2, ip
   16578:	bl	16064 <strspn@plt+0x50f0>
   1657c:	add	sp, sp, #12
   16580:	pop	{pc}		; (ldr pc, [sp], #4)
   16584:	strdeq	r8, [r1], -ip
   16588:	b	16064 <strspn@plt+0x50f0>
   1658c:	push	{r4, r5, r6, lr}
   16590:	sub	sp, sp, #32
   16594:	cmp	r1, #0
   16598:	mov	r4, r0
   1659c:	ldr	r5, [sp, #48]	; 0x30
   165a0:	ldr	r6, [sp, #52]	; 0x34
   165a4:	beq	168bc <strspn@plt+0x5948>
   165a8:	stm	sp, {r2, r3}
   165ac:	mov	r3, r1
   165b0:	ldr	r2, [pc, #808]	; 168e0 <strspn@plt+0x596c>
   165b4:	mov	r1, #1
   165b8:	bl	10ed8 <__fprintf_chk@plt>
   165bc:	mov	r2, #5
   165c0:	ldr	r1, [pc, #796]	; 168e4 <strspn@plt+0x5970>
   165c4:	mov	r0, #0
   165c8:	bl	10d7c <dcgettext@plt>
   165cc:	ldr	r3, [pc, #788]	; 168e8 <strspn@plt+0x5974>
   165d0:	ldr	r2, [pc, #788]	; 168ec <strspn@plt+0x5978>
   165d4:	str	r3, [sp]
   165d8:	mov	r1, #1
   165dc:	mov	r3, r0
   165e0:	mov	r0, r4
   165e4:	bl	10ed8 <__fprintf_chk@plt>
   165e8:	mov	r1, r4
   165ec:	mov	r0, #10
   165f0:	bl	10d70 <fputc_unlocked@plt>
   165f4:	mov	r2, #5
   165f8:	ldr	r1, [pc, #752]	; 168f0 <strspn@plt+0x597c>
   165fc:	mov	r0, #0
   16600:	bl	10d7c <dcgettext@plt>
   16604:	mov	r1, #1
   16608:	ldr	r3, [pc, #740]	; 168f4 <strspn@plt+0x5980>
   1660c:	mov	r2, r0
   16610:	mov	r0, r4
   16614:	bl	10ed8 <__fprintf_chk@plt>
   16618:	mov	r1, r4
   1661c:	mov	r0, #10
   16620:	bl	10d70 <fputc_unlocked@plt>
   16624:	cmp	r6, #9
   16628:	ldrls	pc, [pc, r6, lsl #2]
   1662c:	b	168d4 <strspn@plt+0x5960>
   16630:			; <UNDEFINED> instruction: 0x000166b4
   16634:			; <UNDEFINED> instruction: 0x000166bc
   16638:	andeq	r6, r1, r8, ror #13
   1663c:	andeq	r6, r1, ip, lsl r7
   16640:	andeq	r6, r1, r8, asr r7
   16644:	muleq	r1, r4, r7
   16648:	ldrdeq	r6, [r1], -r0
   1664c:	andeq	r6, r1, r4, lsl r8
   16650:	andeq	r6, r1, r4, ror #16
   16654:	andeq	r6, r1, r8, asr r6
   16658:	ldr	r1, [pc, #664]	; 168f8 <strspn@plt+0x5984>
   1665c:	mov	r2, #5
   16660:	mov	r0, #0
   16664:	bl	10d7c <dcgettext@plt>
   16668:	ldr	ip, [r5, #32]
   1666c:	ldr	r1, [r5, #28]
   16670:	ldr	r2, [r5, #24]
   16674:	ldr	r3, [r5]
   16678:	ldr	r6, [r5, #20]
   1667c:	str	ip, [sp, #28]
   16680:	ldr	lr, [r5, #16]
   16684:	str	r1, [sp, #24]
   16688:	ldr	ip, [r5, #12]
   1668c:	str	r2, [sp, #20]
   16690:	ldr	r1, [r5, #8]
   16694:	ldr	r2, [r5, #4]
   16698:	str	r6, [sp, #16]
   1669c:	stmib	sp, {r1, ip, lr}
   166a0:	mov	r1, #1
   166a4:	str	r2, [sp]
   166a8:	mov	r2, r0
   166ac:	mov	r0, r4
   166b0:	bl	10ed8 <__fprintf_chk@plt>
   166b4:	add	sp, sp, #32
   166b8:	pop	{r4, r5, r6, pc}
   166bc:	mov	r2, #5
   166c0:	ldr	r1, [pc, #564]	; 168fc <strspn@plt+0x5988>
   166c4:	mov	r0, #0
   166c8:	bl	10d7c <dcgettext@plt>
   166cc:	ldr	r3, [r5]
   166d0:	mov	r1, #1
   166d4:	mov	r2, r0
   166d8:	mov	r0, r4
   166dc:	add	sp, sp, #32
   166e0:	pop	{r4, r5, r6, lr}
   166e4:	b	10ed8 <__fprintf_chk@plt>
   166e8:	mov	r2, #5
   166ec:	ldr	r1, [pc, #524]	; 16900 <strspn@plt+0x598c>
   166f0:	mov	r0, #0
   166f4:	bl	10d7c <dcgettext@plt>
   166f8:	ldr	r2, [r5, #4]
   166fc:	ldr	r3, [r5]
   16700:	mov	r1, #1
   16704:	str	r2, [sp, #48]	; 0x30
   16708:	mov	r2, r0
   1670c:	mov	r0, r4
   16710:	add	sp, sp, #32
   16714:	pop	{r4, r5, r6, lr}
   16718:	b	10ed8 <__fprintf_chk@plt>
   1671c:	mov	r2, #5
   16720:	ldr	r1, [pc, #476]	; 16904 <strspn@plt+0x5990>
   16724:	mov	r0, #0
   16728:	bl	10d7c <dcgettext@plt>
   1672c:	ldr	r1, [r5, #8]
   16730:	ldr	r2, [r5, #4]
   16734:	ldr	r3, [r5]
   16738:	str	r1, [sp, #52]	; 0x34
   1673c:	str	r2, [sp, #48]	; 0x30
   16740:	mov	r1, #1
   16744:	mov	r2, r0
   16748:	mov	r0, r4
   1674c:	add	sp, sp, #32
   16750:	pop	{r4, r5, r6, lr}
   16754:	b	10ed8 <__fprintf_chk@plt>
   16758:	mov	r2, #5
   1675c:	ldr	r1, [pc, #420]	; 16908 <strspn@plt+0x5994>
   16760:	mov	r0, #0
   16764:	bl	10d7c <dcgettext@plt>
   16768:	ldr	r1, [r5, #8]
   1676c:	ldr	ip, [r5, #12]
   16770:	ldr	r2, [r5, #4]
   16774:	ldr	r3, [r5]
   16778:	stmib	sp, {r1, ip}
   1677c:	str	r2, [sp]
   16780:	mov	r1, #1
   16784:	mov	r2, r0
   16788:	mov	r0, r4
   1678c:	bl	10ed8 <__fprintf_chk@plt>
   16790:	b	166b4 <strspn@plt+0x5740>
   16794:	mov	r2, #5
   16798:	ldr	r1, [pc, #364]	; 1690c <strspn@plt+0x5998>
   1679c:	mov	r0, #0
   167a0:	bl	10d7c <dcgettext@plt>
   167a4:	add	r1, r5, #8
   167a8:	ldr	r2, [r5, #4]
   167ac:	ldm	r1, {r1, ip, lr}
   167b0:	ldr	r3, [r5]
   167b4:	str	r2, [sp]
   167b8:	stmib	sp, {r1, ip, lr}
   167bc:	mov	r1, #1
   167c0:	mov	r2, r0
   167c4:	mov	r0, r4
   167c8:	bl	10ed8 <__fprintf_chk@plt>
   167cc:	b	166b4 <strspn@plt+0x5740>
   167d0:	mov	r2, #5
   167d4:	ldr	r1, [pc, #308]	; 16910 <strspn@plt+0x599c>
   167d8:	mov	r0, #0
   167dc:	bl	10d7c <dcgettext@plt>
   167e0:	add	r1, r5, #8
   167e4:	ldr	r2, [r5, #4]
   167e8:	ldm	r1, {r1, ip, lr}
   167ec:	ldr	r6, [r5, #20]
   167f0:	ldr	r3, [r5]
   167f4:	stmib	sp, {r1, ip, lr}
   167f8:	mov	r1, #1
   167fc:	str	r2, [sp]
   16800:	str	r6, [sp, #16]
   16804:	mov	r2, r0
   16808:	mov	r0, r4
   1680c:	bl	10ed8 <__fprintf_chk@plt>
   16810:	b	166b4 <strspn@plt+0x5740>
   16814:	mov	r2, #5
   16818:	ldr	r1, [pc, #244]	; 16914 <strspn@plt+0x59a0>
   1681c:	mov	r0, #0
   16820:	bl	10d7c <dcgettext@plt>
   16824:	ldr	r2, [r5, #24]
   16828:	ldr	r3, [r5]
   1682c:	ldr	r6, [r5, #20]
   16830:	ldr	lr, [r5, #16]
   16834:	ldr	ip, [r5, #12]
   16838:	str	r2, [sp, #20]
   1683c:	ldr	r1, [r5, #8]
   16840:	ldr	r2, [r5, #4]
   16844:	str	r6, [sp, #16]
   16848:	stmib	sp, {r1, ip, lr}
   1684c:	mov	r1, #1
   16850:	str	r2, [sp]
   16854:	mov	r2, r0
   16858:	mov	r0, r4
   1685c:	bl	10ed8 <__fprintf_chk@plt>
   16860:	b	166b4 <strspn@plt+0x5740>
   16864:	mov	r2, #5
   16868:	ldr	r1, [pc, #168]	; 16918 <strspn@plt+0x59a4>
   1686c:	mov	r0, #0
   16870:	bl	10d7c <dcgettext@plt>
   16874:	ldr	r1, [r5, #28]
   16878:	ldr	r2, [r5, #24]
   1687c:	ldr	r3, [r5]
   16880:	ldr	r6, [r5, #20]
   16884:	ldr	lr, [r5, #16]
   16888:	str	r1, [sp, #24]
   1688c:	ldr	ip, [r5, #12]
   16890:	str	r2, [sp, #20]
   16894:	ldr	r1, [r5, #8]
   16898:	ldr	r2, [r5, #4]
   1689c:	str	r6, [sp, #16]
   168a0:	stmib	sp, {r1, ip, lr}
   168a4:	mov	r1, #1
   168a8:	str	r2, [sp]
   168ac:	mov	r2, r0
   168b0:	mov	r0, r4
   168b4:	bl	10ed8 <__fprintf_chk@plt>
   168b8:	b	166b4 <strspn@plt+0x5740>
   168bc:	str	r3, [sp]
   168c0:	mov	r1, #1
   168c4:	mov	r3, r2
   168c8:	ldr	r2, [pc, #76]	; 1691c <strspn@plt+0x59a8>
   168cc:	bl	10ed8 <__fprintf_chk@plt>
   168d0:	b	165bc <strspn@plt+0x5648>
   168d4:	mov	r2, #5
   168d8:	ldr	r1, [pc, #64]	; 16920 <strspn@plt+0x59ac>
   168dc:	b	16660 <strspn@plt+0x56ec>
   168e0:	andeq	r8, r1, r8, asr #20
   168e4:	andeq	r8, r1, ip, asr sl
   168e8:	andeq	r0, r0, r6, ror #15
   168ec:	andeq	r8, r1, r4, lsr sp
   168f0:	andeq	r8, r1, r0, ror #20
   168f4:	andeq	r8, r1, ip, lsl #22
   168f8:	andeq	r8, r1, ip, lsr ip
   168fc:	andeq	r8, r1, r0, lsr fp
   16900:	andeq	r8, r1, r0, asr #22
   16904:	andeq	r8, r1, r8, asr fp
   16908:	andeq	r8, r1, r4, ror fp
   1690c:	muleq	r1, r4, fp
   16910:			; <UNDEFINED> instruction: 0x00018bb8
   16914:	andeq	r8, r1, r0, ror #23
   16918:	andeq	r8, r1, ip, lsl #24
   1691c:	andeq	r8, r1, r4, asr sl
   16920:	andeq	r8, r1, r0, ror ip
   16924:	push	{r4, r5, lr}
   16928:	sub	sp, sp, #12
   1692c:	ldr	r5, [sp, #24]
   16930:	ldr	ip, [r5]
   16934:	cmp	ip, #0
   16938:	beq	16954 <strspn@plt+0x59e0>
   1693c:	mov	lr, r5
   16940:	mov	ip, #0
   16944:	ldr	r4, [lr, #4]!
   16948:	add	ip, ip, #1
   1694c:	cmp	r4, #0
   16950:	bne	16944 <strspn@plt+0x59d0>
   16954:	stm	sp, {r5, ip}
   16958:	bl	1658c <strspn@plt+0x5618>
   1695c:	add	sp, sp, #12
   16960:	pop	{r4, r5, pc}
   16964:	push	{r4, r5, lr}
   16968:	sub	sp, sp, #76	; 0x4c
   1696c:	mov	r5, r0
   16970:	ldr	ip, [sp, #88]	; 0x58
   16974:	ldr	r0, [ip]
   16978:	cmp	r0, #0
   1697c:	str	r0, [sp, #32]
   16980:	beq	16d54 <strspn@plt+0x5de0>
   16984:	ldr	r0, [ip, #4]
   16988:	cmp	r0, #0
   1698c:	str	r0, [sp, #36]	; 0x24
   16990:	beq	16d5c <strspn@plt+0x5de8>
   16994:	ldr	r0, [ip, #8]
   16998:	cmp	r0, #0
   1699c:	str	r0, [sp, #40]	; 0x28
   169a0:	beq	16d64 <strspn@plt+0x5df0>
   169a4:	ldr	r0, [ip, #12]
   169a8:	cmp	r0, #0
   169ac:	str	r0, [sp, #44]	; 0x2c
   169b0:	beq	16d6c <strspn@plt+0x5df8>
   169b4:	ldr	r0, [ip, #16]
   169b8:	cmp	r0, #0
   169bc:	str	r0, [sp, #48]	; 0x30
   169c0:	beq	16d74 <strspn@plt+0x5e00>
   169c4:	ldr	r0, [ip, #20]
   169c8:	cmp	r0, #0
   169cc:	str	r0, [sp, #52]	; 0x34
   169d0:	beq	16d7c <strspn@plt+0x5e08>
   169d4:	ldr	r0, [ip, #24]
   169d8:	cmp	r0, #0
   169dc:	str	r0, [sp, #56]	; 0x38
   169e0:	beq	16d84 <strspn@plt+0x5e10>
   169e4:	ldr	r0, [ip, #28]
   169e8:	cmp	r0, #0
   169ec:	str	r0, [sp, #60]	; 0x3c
   169f0:	beq	16d8c <strspn@plt+0x5e18>
   169f4:	ldr	r0, [ip, #32]
   169f8:	cmp	r0, #0
   169fc:	str	r0, [sp, #64]	; 0x40
   16a00:	beq	16d94 <strspn@plt+0x5e20>
   16a04:	ldr	r0, [ip, #36]	; 0x24
   16a08:	cmp	r0, #0
   16a0c:	movne	r4, #10
   16a10:	moveq	r4, #9
   16a14:	cmp	r1, #0
   16a18:	beq	16d2c <strspn@plt+0x5db8>
   16a1c:	stm	sp, {r2, r3}
   16a20:	mov	r0, r5
   16a24:	mov	r3, r1
   16a28:	ldr	r2, [pc, #876]	; 16d9c <strspn@plt+0x5e28>
   16a2c:	mov	r1, #1
   16a30:	bl	10ed8 <__fprintf_chk@plt>
   16a34:	mov	r2, #5
   16a38:	ldr	r1, [pc, #864]	; 16da0 <strspn@plt+0x5e2c>
   16a3c:	mov	r0, #0
   16a40:	bl	10d7c <dcgettext@plt>
   16a44:	ldr	r3, [pc, #856]	; 16da4 <strspn@plt+0x5e30>
   16a48:	ldr	r2, [pc, #856]	; 16da8 <strspn@plt+0x5e34>
   16a4c:	str	r3, [sp]
   16a50:	mov	r1, #1
   16a54:	mov	r3, r0
   16a58:	mov	r0, r5
   16a5c:	bl	10ed8 <__fprintf_chk@plt>
   16a60:	mov	r1, r5
   16a64:	mov	r0, #10
   16a68:	bl	10d70 <fputc_unlocked@plt>
   16a6c:	mov	r2, #5
   16a70:	ldr	r1, [pc, #820]	; 16dac <strspn@plt+0x5e38>
   16a74:	mov	r0, #0
   16a78:	bl	10d7c <dcgettext@plt>
   16a7c:	mov	r1, #1
   16a80:	ldr	r3, [pc, #808]	; 16db0 <strspn@plt+0x5e3c>
   16a84:	mov	r2, r0
   16a88:	mov	r0, r5
   16a8c:	bl	10ed8 <__fprintf_chk@plt>
   16a90:	mov	r1, r5
   16a94:	mov	r0, #10
   16a98:	bl	10d70 <fputc_unlocked@plt>
   16a9c:	cmp	r4, #9
   16aa0:	ldrls	pc, [pc, r4, lsl #2]
   16aa4:	b	16d48 <strspn@plt+0x5dd4>
   16aa8:	andeq	r6, r1, ip, lsr #22
   16aac:	andeq	r6, r1, r4, lsr fp
   16ab0:	andeq	r6, r1, r0, ror #22
   16ab4:	muleq	r1, r4, fp
   16ab8:	andeq	r6, r1, ip, asr #23
   16abc:	andeq	r6, r1, r8, lsl #24
   16ac0:	andeq	r6, r1, r4, asr #24
   16ac4:	andeq	r6, r1, r8, lsl #25
   16ac8:	ldrdeq	r6, [r1], -r4
   16acc:	ldrdeq	r6, [r1], -r0
   16ad0:	ldr	r1, [pc, #732]	; 16db4 <strspn@plt+0x5e40>
   16ad4:	mov	r2, #5
   16ad8:	mov	r0, #0
   16adc:	bl	10d7c <dcgettext@plt>
   16ae0:	ldr	ip, [sp, #64]	; 0x40
   16ae4:	ldr	r1, [sp, #60]	; 0x3c
   16ae8:	ldr	r2, [sp, #56]	; 0x38
   16aec:	ldr	lr, [sp, #48]	; 0x30
   16af0:	str	ip, [sp, #28]
   16af4:	str	r1, [sp, #24]
   16af8:	ldr	ip, [sp, #44]	; 0x2c
   16afc:	ldr	r1, [sp, #40]	; 0x28
   16b00:	ldr	r4, [sp, #52]	; 0x34
   16b04:	str	r2, [sp, #20]
   16b08:	ldr	r2, [sp, #36]	; 0x24
   16b0c:	stmib	sp, {r1, ip, lr}
   16b10:	mov	r1, #1
   16b14:	str	r2, [sp]
   16b18:	ldr	r3, [sp, #32]
   16b1c:	str	r4, [sp, #16]
   16b20:	mov	r2, r0
   16b24:	mov	r0, r5
   16b28:	bl	10ed8 <__fprintf_chk@plt>
   16b2c:	add	sp, sp, #76	; 0x4c
   16b30:	pop	{r4, r5, pc}
   16b34:	mov	r2, #5
   16b38:	ldr	r1, [pc, #632]	; 16db8 <strspn@plt+0x5e44>
   16b3c:	mov	r0, #0
   16b40:	bl	10d7c <dcgettext@plt>
   16b44:	ldr	r3, [sp, #32]
   16b48:	mov	r1, #1
   16b4c:	mov	r2, r0
   16b50:	mov	r0, r5
   16b54:	add	sp, sp, #76	; 0x4c
   16b58:	pop	{r4, r5, lr}
   16b5c:	b	10ed8 <__fprintf_chk@plt>
   16b60:	mov	r2, #5
   16b64:	ldr	r1, [pc, #592]	; 16dbc <strspn@plt+0x5e48>
   16b68:	mov	r0, #0
   16b6c:	bl	10d7c <dcgettext@plt>
   16b70:	ldr	r2, [sp, #36]	; 0x24
   16b74:	ldr	r3, [sp, #32]
   16b78:	str	r2, [sp, #88]	; 0x58
   16b7c:	mov	r1, #1
   16b80:	mov	r2, r0
   16b84:	mov	r0, r5
   16b88:	add	sp, sp, #76	; 0x4c
   16b8c:	pop	{r4, r5, lr}
   16b90:	b	10ed8 <__fprintf_chk@plt>
   16b94:	mov	r2, #5
   16b98:	ldr	r1, [pc, #544]	; 16dc0 <strspn@plt+0x5e4c>
   16b9c:	mov	r0, #0
   16ba0:	bl	10d7c <dcgettext@plt>
   16ba4:	ldr	r1, [sp, #40]	; 0x28
   16ba8:	ldr	r2, [sp, #36]	; 0x24
   16bac:	str	r1, [sp, #4]
   16bb0:	str	r2, [sp]
   16bb4:	ldr	r3, [sp, #32]
   16bb8:	mov	r1, #1
   16bbc:	mov	r2, r0
   16bc0:	mov	r0, r5
   16bc4:	bl	10ed8 <__fprintf_chk@plt>
   16bc8:	b	16b2c <strspn@plt+0x5bb8>
   16bcc:	mov	r2, #5
   16bd0:	ldr	r1, [pc, #492]	; 16dc4 <strspn@plt+0x5e50>
   16bd4:	mov	r0, #0
   16bd8:	bl	10d7c <dcgettext@plt>
   16bdc:	ldr	r1, [sp, #40]	; 0x28
   16be0:	ldr	ip, [sp, #44]	; 0x2c
   16be4:	ldr	r2, [sp, #36]	; 0x24
   16be8:	ldr	r3, [sp, #32]
   16bec:	stmib	sp, {r1, ip}
   16bf0:	str	r2, [sp]
   16bf4:	mov	r1, #1
   16bf8:	mov	r2, r0
   16bfc:	mov	r0, r5
   16c00:	bl	10ed8 <__fprintf_chk@plt>
   16c04:	b	16b2c <strspn@plt+0x5bb8>
   16c08:	mov	r2, #5
   16c0c:	ldr	r1, [pc, #436]	; 16dc8 <strspn@plt+0x5e54>
   16c10:	mov	r0, #0
   16c14:	bl	10d7c <dcgettext@plt>
   16c18:	add	r1, sp, #40	; 0x28
   16c1c:	ldr	r2, [sp, #36]	; 0x24
   16c20:	ldm	r1, {r1, ip, lr}
   16c24:	ldr	r3, [sp, #32]
   16c28:	str	r2, [sp]
   16c2c:	stmib	sp, {r1, ip, lr}
   16c30:	mov	r1, #1
   16c34:	mov	r2, r0
   16c38:	mov	r0, r5
   16c3c:	bl	10ed8 <__fprintf_chk@plt>
   16c40:	b	16b2c <strspn@plt+0x5bb8>
   16c44:	mov	r2, #5
   16c48:	ldr	r1, [pc, #380]	; 16dcc <strspn@plt+0x5e58>
   16c4c:	mov	r0, #0
   16c50:	bl	10d7c <dcgettext@plt>
   16c54:	add	r1, sp, #40	; 0x28
   16c58:	ldr	r2, [sp, #36]	; 0x24
   16c5c:	ldm	r1, {r1, ip, lr}
   16c60:	ldr	r4, [sp, #52]	; 0x34
   16c64:	str	r2, [sp]
   16c68:	stmib	sp, {r1, ip, lr}
   16c6c:	mov	r1, #1
   16c70:	ldr	r3, [sp, #32]
   16c74:	str	r4, [sp, #16]
   16c78:	mov	r2, r0
   16c7c:	mov	r0, r5
   16c80:	bl	10ed8 <__fprintf_chk@plt>
   16c84:	b	16b2c <strspn@plt+0x5bb8>
   16c88:	mov	r2, #5
   16c8c:	ldr	r1, [pc, #316]	; 16dd0 <strspn@plt+0x5e5c>
   16c90:	mov	r0, #0
   16c94:	bl	10d7c <dcgettext@plt>
   16c98:	add	r1, sp, #40	; 0x28
   16c9c:	ldr	r2, [sp, #56]	; 0x38
   16ca0:	ldm	r1, {r1, ip, lr}
   16ca4:	ldr	r4, [sp, #52]	; 0x34
   16ca8:	str	r2, [sp, #20]
   16cac:	ldr	r2, [sp, #36]	; 0x24
   16cb0:	stmib	sp, {r1, ip, lr}
   16cb4:	mov	r1, #1
   16cb8:	str	r2, [sp]
   16cbc:	ldr	r3, [sp, #32]
   16cc0:	str	r4, [sp, #16]
   16cc4:	mov	r2, r0
   16cc8:	mov	r0, r5
   16ccc:	bl	10ed8 <__fprintf_chk@plt>
   16cd0:	b	16b2c <strspn@plt+0x5bb8>
   16cd4:	mov	r2, #5
   16cd8:	ldr	r1, [pc, #244]	; 16dd4 <strspn@plt+0x5e60>
   16cdc:	mov	r0, #0
   16ce0:	bl	10d7c <dcgettext@plt>
   16ce4:	ldr	r1, [sp, #60]	; 0x3c
   16ce8:	ldr	r2, [sp, #56]	; 0x38
   16cec:	ldr	lr, [sp, #48]	; 0x30
   16cf0:	ldr	ip, [sp, #44]	; 0x2c
   16cf4:	str	r1, [sp, #24]
   16cf8:	ldr	r1, [sp, #40]	; 0x28
   16cfc:	ldr	r4, [sp, #52]	; 0x34
   16d00:	str	r2, [sp, #20]
   16d04:	ldr	r2, [sp, #36]	; 0x24
   16d08:	stmib	sp, {r1, ip, lr}
   16d0c:	mov	r1, #1
   16d10:	str	r2, [sp]
   16d14:	ldr	r3, [sp, #32]
   16d18:	str	r4, [sp, #16]
   16d1c:	mov	r2, r0
   16d20:	mov	r0, r5
   16d24:	bl	10ed8 <__fprintf_chk@plt>
   16d28:	b	16b2c <strspn@plt+0x5bb8>
   16d2c:	str	r3, [sp]
   16d30:	mov	r1, #1
   16d34:	mov	r3, r2
   16d38:	mov	r0, r5
   16d3c:	ldr	r2, [pc, #148]	; 16dd8 <strspn@plt+0x5e64>
   16d40:	bl	10ed8 <__fprintf_chk@plt>
   16d44:	b	16a34 <strspn@plt+0x5ac0>
   16d48:	mov	r2, #5
   16d4c:	ldr	r1, [pc, #136]	; 16ddc <strspn@plt+0x5e68>
   16d50:	b	16ad8 <strspn@plt+0x5b64>
   16d54:	mov	r4, r0
   16d58:	b	16a14 <strspn@plt+0x5aa0>
   16d5c:	mov	r4, #1
   16d60:	b	16a14 <strspn@plt+0x5aa0>
   16d64:	mov	r4, #2
   16d68:	b	16a14 <strspn@plt+0x5aa0>
   16d6c:	mov	r4, #3
   16d70:	b	16a14 <strspn@plt+0x5aa0>
   16d74:	mov	r4, #4
   16d78:	b	16a14 <strspn@plt+0x5aa0>
   16d7c:	mov	r4, #5
   16d80:	b	16a14 <strspn@plt+0x5aa0>
   16d84:	mov	r4, #6
   16d88:	b	16a14 <strspn@plt+0x5aa0>
   16d8c:	mov	r4, #7
   16d90:	b	16a14 <strspn@plt+0x5aa0>
   16d94:	mov	r4, #8
   16d98:	b	16a14 <strspn@plt+0x5aa0>
   16d9c:	andeq	r8, r1, r8, asr #20
   16da0:	andeq	r8, r1, ip, asr sl
   16da4:	andeq	r0, r0, r6, ror #15
   16da8:	andeq	r8, r1, r4, lsr sp
   16dac:	andeq	r8, r1, r0, ror #20
   16db0:	andeq	r8, r1, ip, lsl #22
   16db4:	andeq	r8, r1, ip, lsr ip
   16db8:	andeq	r8, r1, r0, lsr fp
   16dbc:	andeq	r8, r1, r0, asr #22
   16dc0:	andeq	r8, r1, r8, asr fp
   16dc4:	andeq	r8, r1, r4, ror fp
   16dc8:	muleq	r1, r4, fp
   16dcc:			; <UNDEFINED> instruction: 0x00018bb8
   16dd0:	andeq	r8, r1, r0, ror #23
   16dd4:	andeq	r8, r1, ip, lsl #24
   16dd8:	andeq	r8, r1, r4, asr sl
   16ddc:	andeq	r8, r1, r0, ror ip
   16de0:	push	{r3}		; (str r3, [sp, #-4]!)
   16de4:	push	{lr}		; (str lr, [sp, #-4]!)
   16de8:	sub	sp, sp, #56	; 0x38
   16dec:	add	r3, sp, #64	; 0x40
   16df0:	ldr	ip, [sp, #64]	; 0x40
   16df4:	str	r3, [sp, #12]
   16df8:	cmp	ip, #0
   16dfc:	str	ip, [sp, #16]
   16e00:	beq	16e98 <strspn@plt+0x5f24>
   16e04:	ldr	ip, [sp, #68]	; 0x44
   16e08:	cmp	ip, #0
   16e0c:	str	ip, [sp, #20]
   16e10:	beq	16eb8 <strspn@plt+0x5f44>
   16e14:	ldr	ip, [sp, #72]	; 0x48
   16e18:	cmp	ip, #0
   16e1c:	str	ip, [sp, #24]
   16e20:	beq	16ec0 <strspn@plt+0x5f4c>
   16e24:	ldr	ip, [sp, #76]	; 0x4c
   16e28:	cmp	ip, #0
   16e2c:	str	ip, [sp, #28]
   16e30:	beq	16ec8 <strspn@plt+0x5f54>
   16e34:	ldr	ip, [sp, #80]	; 0x50
   16e38:	cmp	ip, #0
   16e3c:	str	ip, [sp, #32]
   16e40:	beq	16ed0 <strspn@plt+0x5f5c>
   16e44:	ldr	ip, [sp, #84]	; 0x54
   16e48:	cmp	ip, #0
   16e4c:	str	ip, [sp, #36]	; 0x24
   16e50:	beq	16ed8 <strspn@plt+0x5f64>
   16e54:	ldr	ip, [sp, #88]	; 0x58
   16e58:	cmp	ip, #0
   16e5c:	str	ip, [sp, #40]	; 0x28
   16e60:	beq	16ee0 <strspn@plt+0x5f6c>
   16e64:	ldr	ip, [sp, #92]	; 0x5c
   16e68:	cmp	ip, #0
   16e6c:	str	ip, [sp, #44]	; 0x2c
   16e70:	beq	16ee8 <strspn@plt+0x5f74>
   16e74:	ldr	ip, [sp, #96]	; 0x60
   16e78:	cmp	ip, #0
   16e7c:	str	ip, [sp, #48]	; 0x30
   16e80:	beq	16ef0 <strspn@plt+0x5f7c>
   16e84:	ldr	ip, [sp, #100]	; 0x64
   16e88:	cmp	ip, #0
   16e8c:	str	ip, [sp, #52]	; 0x34
   16e90:	movne	ip, #10
   16e94:	moveq	ip, #9
   16e98:	add	r3, sp, #16
   16e9c:	stm	sp, {r3, ip}
   16ea0:	ldr	r3, [sp, #60]	; 0x3c
   16ea4:	bl	1658c <strspn@plt+0x5618>
   16ea8:	add	sp, sp, #56	; 0x38
   16eac:	pop	{lr}		; (ldr lr, [sp], #4)
   16eb0:	add	sp, sp, #4
   16eb4:	bx	lr
   16eb8:	mov	ip, #1
   16ebc:	b	16e98 <strspn@plt+0x5f24>
   16ec0:	mov	ip, #2
   16ec4:	b	16e98 <strspn@plt+0x5f24>
   16ec8:	mov	ip, #3
   16ecc:	b	16e98 <strspn@plt+0x5f24>
   16ed0:	mov	ip, #4
   16ed4:	b	16e98 <strspn@plt+0x5f24>
   16ed8:	mov	ip, #5
   16edc:	b	16e98 <strspn@plt+0x5f24>
   16ee0:	mov	ip, #6
   16ee4:	b	16e98 <strspn@plt+0x5f24>
   16ee8:	mov	ip, #7
   16eec:	b	16e98 <strspn@plt+0x5f24>
   16ef0:	mov	ip, #8
   16ef4:	b	16e98 <strspn@plt+0x5f24>
   16ef8:	ldr	r3, [pc, #116]	; 16f74 <strspn@plt+0x6000>
   16efc:	push	{r4, lr}
   16f00:	mov	r0, #10
   16f04:	ldr	r1, [r3]
   16f08:	bl	10d70 <fputc_unlocked@plt>
   16f0c:	mov	r2, #5
   16f10:	ldr	r1, [pc, #96]	; 16f78 <strspn@plt+0x6004>
   16f14:	mov	r0, #0
   16f18:	bl	10d7c <dcgettext@plt>
   16f1c:	ldr	r2, [pc, #88]	; 16f7c <strspn@plt+0x6008>
   16f20:	mov	r1, r0
   16f24:	mov	r0, #1
   16f28:	bl	10ec0 <__printf_chk@plt>
   16f2c:	mov	r2, #5
   16f30:	ldr	r1, [pc, #72]	; 16f80 <strspn@plt+0x600c>
   16f34:	mov	r0, #0
   16f38:	bl	10d7c <dcgettext@plt>
   16f3c:	ldr	r3, [pc, #64]	; 16f84 <strspn@plt+0x6010>
   16f40:	ldr	r2, [pc, #64]	; 16f88 <strspn@plt+0x6014>
   16f44:	mov	r1, r0
   16f48:	mov	r0, #1
   16f4c:	bl	10ec0 <__printf_chk@plt>
   16f50:	mov	r2, #5
   16f54:	ldr	r1, [pc, #48]	; 16f8c <strspn@plt+0x6018>
   16f58:	mov	r0, #0
   16f5c:	bl	10d7c <dcgettext@plt>
   16f60:	ldr	r2, [pc, #40]	; 16f90 <strspn@plt+0x601c>
   16f64:	pop	{r4, lr}
   16f68:	mov	r1, r0
   16f6c:	mov	r0, #1
   16f70:	b	10ec0 <__printf_chk@plt>
   16f74:	andeq	r9, r2, r4, asr r1
   16f78:	andeq	r8, r1, ip, lsr #25
   16f7c:	andeq	r8, r1, r0, asr #25
   16f80:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   16f84:	muleq	r1, r4, r5
   16f88:			; <UNDEFINED> instruction: 0x000185bc
   16f8c:	andeq	r8, r1, ip, ror #25
   16f90:	andeq	r8, r1, r4, lsl sp
   16f94:	push	{r4, r5, r6, lr}
   16f98:	mov	r6, r0
   16f9c:	mov	r5, r1
   16fa0:	mov	r4, r2
   16fa4:	bl	177a8 <strspn@plt+0x6834>
   16fa8:	cmp	r0, #0
   16fac:	popne	{r4, r5, r6, pc}
   16fb0:	cmp	r6, #0
   16fb4:	beq	16fc4 <strspn@plt+0x6050>
   16fb8:	cmp	r5, #0
   16fbc:	cmpne	r4, #0
   16fc0:	popeq	{r4, r5, r6, pc}
   16fc4:	bl	17610 <strspn@plt+0x669c>
   16fc8:	push	{r4, lr}
   16fcc:	bl	17698 <strspn@plt+0x6724>
   16fd0:	cmp	r0, #0
   16fd4:	popne	{r4, pc}
   16fd8:	bl	17610 <strspn@plt+0x669c>
   16fdc:	push	{r4, lr}
   16fe0:	bl	17698 <strspn@plt+0x6724>
   16fe4:	cmp	r0, #0
   16fe8:	popne	{r4, pc}
   16fec:	bl	17610 <strspn@plt+0x669c>
   16ff0:	push	{r4, lr}
   16ff4:	bl	17698 <strspn@plt+0x6724>
   16ff8:	cmp	r0, #0
   16ffc:	popne	{r4, pc}
   17000:	bl	17610 <strspn@plt+0x669c>
   17004:	push	{r4, r5, r6, lr}
   17008:	mov	r5, r0
   1700c:	mov	r4, r1
   17010:	bl	176c4 <strspn@plt+0x6750>
   17014:	cmp	r0, #0
   17018:	popne	{r4, r5, r6, pc}
   1701c:	adds	r4, r4, #0
   17020:	movne	r4, #1
   17024:	cmp	r5, #0
   17028:	orreq	r4, r4, #1
   1702c:	cmp	r4, #0
   17030:	popeq	{r4, r5, r6, pc}
   17034:	bl	17610 <strspn@plt+0x669c>
   17038:	push	{r4, lr}
   1703c:	cmp	r1, #0
   17040:	orreq	r1, r1, #1
   17044:	bl	176c4 <strspn@plt+0x6750>
   17048:	cmp	r0, #0
   1704c:	popne	{r4, pc}
   17050:	bl	17610 <strspn@plt+0x669c>
   17054:	push	{r4, r5, r6, lr}
   17058:	mov	r6, r0
   1705c:	mov	r5, r1
   17060:	mov	r4, r2
   17064:	bl	177a8 <strspn@plt+0x6834>
   17068:	cmp	r0, #0
   1706c:	popne	{r4, r5, r6, pc}
   17070:	cmp	r6, #0
   17074:	beq	17084 <strspn@plt+0x6110>
   17078:	cmp	r5, #0
   1707c:	cmpne	r4, #0
   17080:	popeq	{r4, r5, r6, pc}
   17084:	bl	17610 <strspn@plt+0x669c>
   17088:	cmp	r2, #0
   1708c:	cmpne	r1, #0
   17090:	moveq	r2, #1
   17094:	moveq	r1, r2
   17098:	push	{r4, lr}
   1709c:	bl	177a8 <strspn@plt+0x6834>
   170a0:	cmp	r0, #0
   170a4:	popne	{r4, pc}
   170a8:	bl	17610 <strspn@plt+0x669c>
   170ac:	push	{r4, lr}
   170b0:	mov	r2, r1
   170b4:	mov	r1, r0
   170b8:	mov	r0, #0
   170bc:	bl	177a8 <strspn@plt+0x6834>
   170c0:	cmp	r0, #0
   170c4:	popne	{r4, pc}
   170c8:	bl	17610 <strspn@plt+0x669c>
   170cc:	cmp	r1, #0
   170d0:	cmpne	r0, #0
   170d4:	moveq	r2, #1
   170d8:	movne	r2, r1
   170dc:	moveq	r1, r2
   170e0:	movne	r1, r0
   170e4:	push	{r4, lr}
   170e8:	mov	r0, #0
   170ec:	bl	177a8 <strspn@plt+0x6834>
   170f0:	cmp	r0, #0
   170f4:	popne	{r4, pc}
   170f8:	bl	17610 <strspn@plt+0x669c>
   170fc:	cmp	r0, #0
   17100:	push	{r4, r5, r6, lr}
   17104:	mov	r5, r1
   17108:	ldr	r4, [r1]
   1710c:	beq	17148 <strspn@plt+0x61d4>
   17110:	lsr	r2, r4, #1
   17114:	add	r3, r2, #1
   17118:	mvn	r3, r3
   1711c:	cmp	r4, r3
   17120:	bhi	17164 <strspn@plt+0x61f0>
   17124:	add	r4, r4, #1
   17128:	add	r4, r4, r2
   1712c:	mov	r1, r4
   17130:	mov	r2, #1
   17134:	bl	177a8 <strspn@plt+0x6834>
   17138:	cmp	r0, #0
   1713c:	beq	17168 <strspn@plt+0x61f4>
   17140:	str	r4, [r5]
   17144:	pop	{r4, r5, r6, pc}
   17148:	cmp	r4, #0
   1714c:	moveq	r4, #64	; 0x40
   17150:	mov	r1, r4
   17154:	mov	r2, #1
   17158:	bl	177a8 <strspn@plt+0x6834>
   1715c:	cmp	r0, #0
   17160:	bne	17140 <strspn@plt+0x61cc>
   17164:	bl	17610 <strspn@plt+0x669c>
   17168:	cmp	r4, #0
   1716c:	bne	17164 <strspn@plt+0x61f0>
   17170:	str	r4, [r5]
   17174:	pop	{r4, r5, r6, pc}
   17178:	cmp	r0, #0
   1717c:	push	{r4, r5, r6, lr}
   17180:	mov	r5, r1
   17184:	ldr	r4, [r1]
   17188:	mov	r6, r2
   1718c:	beq	171d0 <strspn@plt+0x625c>
   17190:	lsr	r1, r4, #1
   17194:	add	r3, r1, #1
   17198:	mvn	r3, r3
   1719c:	cmp	r4, r3
   171a0:	bhi	17208 <strspn@plt+0x6294>
   171a4:	add	r4, r4, #1
   171a8:	add	r4, r4, r1
   171ac:	mov	r1, r4
   171b0:	bl	177a8 <strspn@plt+0x6834>
   171b4:	cmp	r0, #0
   171b8:	bne	171c8 <strspn@plt+0x6254>
   171bc:	cmp	r4, #0
   171c0:	cmpne	r6, #0
   171c4:	bne	17208 <strspn@plt+0x6294>
   171c8:	str	r4, [r5]
   171cc:	pop	{r4, r5, r6, pc}
   171d0:	cmp	r4, #0
   171d4:	bne	171f0 <strspn@plt+0x627c>
   171d8:	mov	r1, r2
   171dc:	mov	r0, #64	; 0x40
   171e0:	bl	178e8 <strspn@plt+0x6974>
   171e4:	cmp	r0, #0
   171e8:	movne	r4, r0
   171ec:	addeq	r4, r0, #1
   171f0:	mov	r2, r6
   171f4:	mov	r1, r4
   171f8:	mov	r0, #0
   171fc:	bl	177a8 <strspn@plt+0x6834>
   17200:	cmp	r0, #0
   17204:	bne	171c8 <strspn@plt+0x6254>
   17208:	bl	17610 <strspn@plt+0x669c>
   1720c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17210:	sub	sp, sp, #12
   17214:	ldr	r6, [r1]
   17218:	mov	r8, r1
   1721c:	mov	r9, r0
   17220:	asrs	r4, r6, #1
   17224:	mov	sl, r2
   17228:	mov	fp, r3
   1722c:	ldr	r7, [sp, #48]	; 0x30
   17230:	bmi	173ac <strspn@plt+0x6438>
   17234:	mvn	r1, #-2147483648	; 0x80000000
   17238:	sub	r1, r1, r4
   1723c:	cmp	r6, r1
   17240:	movle	r1, #0
   17244:	movgt	r1, #1
   17248:	mvn	r3, fp
   1724c:	cmp	r1, #0
   17250:	addeq	r4, r4, r6
   17254:	mvnne	r4, #-2147483648	; 0x80000000
   17258:	lsr	r3, r3, #31
   1725c:	cmp	fp, r4
   17260:	movge	r2, #0
   17264:	andlt	r2, r3, #1
   17268:	cmp	r2, #0
   1726c:	beq	1735c <strspn@plt+0x63e8>
   17270:	cmp	r7, #0
   17274:	blt	17444 <strspn@plt+0x64d0>
   17278:	bne	1743c <strspn@plt+0x64c8>
   1727c:	mov	r5, #64	; 0x40
   17280:	mov	r1, r7
   17284:	mov	r0, r5
   17288:	str	r3, [sp, #4]
   1728c:	bl	17af4 <strspn@plt+0x6b80>
   17290:	mov	r1, r7
   17294:	mov	r4, r0
   17298:	mov	r0, r5
   1729c:	bl	17d14 <strspn@plt+0x6da0>
   172a0:	ldr	r3, [sp, #4]
   172a4:	sub	r5, r5, r1
   172a8:	cmp	r9, #0
   172ac:	sub	r2, r4, r6
   172b0:	streq	r9, [r8]
   172b4:	cmp	r2, sl
   172b8:	bge	1733c <strspn@plt+0x63c8>
   172bc:	cmp	sl, #0
   172c0:	blt	173dc <strspn@plt+0x6468>
   172c4:	cmp	r6, #0
   172c8:	blt	172e8 <strspn@plt+0x6374>
   172cc:	mvn	r2, #-2147483648	; 0x80000000
   172d0:	sub	r2, r2, sl
   172d4:	cmp	r6, r2
   172d8:	movle	r2, #0
   172dc:	movgt	r2, #1
   172e0:	cmp	r2, #0
   172e4:	bne	173d8 <strspn@plt+0x6464>
   172e8:	add	r6, r6, sl
   172ec:	cmp	fp, r6
   172f0:	movge	r3, #0
   172f4:	andlt	r3, r3, #1
   172f8:	cmp	r3, #0
   172fc:	mov	r4, r6
   17300:	bne	173d8 <strspn@plt+0x6464>
   17304:	cmp	r7, #0
   17308:	blt	173f0 <strspn@plt+0x647c>
   1730c:	beq	17338 <strspn@plt+0x63c4>
   17310:	cmp	r6, #0
   17314:	blt	17494 <strspn@plt+0x6520>
   17318:	mov	r1, r7
   1731c:	mvn	r0, #-2147483648	; 0x80000000
   17320:	bl	17af4 <strspn@plt+0x6b80>
   17324:	cmp	r6, r0
   17328:	movle	r0, #0
   1732c:	movgt	r0, #1
   17330:	cmp	r0, #0
   17334:	bne	173d8 <strspn@plt+0x6464>
   17338:	mul	r5, r6, r7
   1733c:	mov	r1, r5
   17340:	mov	r0, r9
   17344:	bl	176c4 <strspn@plt+0x6750>
   17348:	cmp	r0, #0
   1734c:	beq	173c0 <strspn@plt+0x644c>
   17350:	str	r4, [r8]
   17354:	add	sp, sp, #12
   17358:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1735c:	cmp	r7, #0
   17360:	blt	1741c <strspn@plt+0x64a8>
   17364:	beq	1727c <strspn@plt+0x6308>
   17368:	cmp	r4, #0
   1736c:	blt	1744c <strspn@plt+0x64d8>
   17370:	mov	r1, r7
   17374:	mvn	r0, #-2147483648	; 0x80000000
   17378:	str	r3, [sp, #4]
   1737c:	bl	17af4 <strspn@plt+0x6b80>
   17380:	ldr	r3, [sp, #4]
   17384:	cmp	r0, r4
   17388:	movge	r0, #0
   1738c:	movlt	r0, #1
   17390:	cmp	r0, #0
   17394:	mvnne	r5, #-2147483648	; 0x80000000
   17398:	bne	17280 <strspn@plt+0x630c>
   1739c:	mul	r5, r7, r4
   173a0:	cmp	r5, #63	; 0x3f
   173a4:	bgt	172a8 <strspn@plt+0x6334>
   173a8:	b	1727c <strspn@plt+0x6308>
   173ac:	rsb	r1, r4, #-2147483648	; 0x80000000
   173b0:	cmp	r6, r1
   173b4:	movge	r1, #0
   173b8:	movlt	r1, #1
   173bc:	b	17248 <strspn@plt+0x62d4>
   173c0:	adds	r5, r5, #0
   173c4:	movne	r5, #1
   173c8:	cmp	r9, #0
   173cc:	orreq	r5, r5, #1
   173d0:	cmp	r5, #0
   173d4:	beq	17350 <strspn@plt+0x63dc>
   173d8:	bl	17610 <strspn@plt+0x669c>
   173dc:	rsb	r2, sl, #-2147483648	; 0x80000000
   173e0:	cmp	r6, r2
   173e4:	movge	r2, #0
   173e8:	movlt	r2, #1
   173ec:	b	172e0 <strspn@plt+0x636c>
   173f0:	cmp	r6, #0
   173f4:	blt	17478 <strspn@plt+0x6504>
   173f8:	cmn	r7, #1
   173fc:	beq	17338 <strspn@plt+0x63c4>
   17400:	mov	r1, r7
   17404:	mov	r0, #-2147483648	; 0x80000000
   17408:	bl	17af4 <strspn@plt+0x6b80>
   1740c:	cmp	r6, r0
   17410:	movle	r0, #0
   17414:	movgt	r0, #1
   17418:	b	17330 <strspn@plt+0x63bc>
   1741c:	cmp	r4, #0
   17420:	blt	174b8 <strspn@plt+0x6544>
   17424:	cmn	r7, #1
   17428:	beq	1739c <strspn@plt+0x6428>
   1742c:	str	r3, [sp, #4]
   17430:	mov	r1, r7
   17434:	mov	r0, #-2147483648	; 0x80000000
   17438:	b	1737c <strspn@plt+0x6408>
   1743c:	mov	r4, fp
   17440:	b	17370 <strspn@plt+0x63fc>
   17444:	mov	r4, fp
   17448:	b	17424 <strspn@plt+0x64b0>
   1744c:	cmn	r4, #1
   17450:	beq	1739c <strspn@plt+0x6428>
   17454:	mov	r1, r4
   17458:	mov	r0, #-2147483648	; 0x80000000
   1745c:	str	r3, [sp, #4]
   17460:	bl	17af4 <strspn@plt+0x6b80>
   17464:	ldr	r3, [sp, #4]
   17468:	cmp	r7, r0
   1746c:	movle	r0, #0
   17470:	movgt	r0, #1
   17474:	b	17390 <strspn@plt+0x641c>
   17478:	mov	r1, r7
   1747c:	mvn	r0, #-2147483648	; 0x80000000
   17480:	bl	17af4 <strspn@plt+0x6b80>
   17484:	cmp	r6, r0
   17488:	movge	r0, #0
   1748c:	movlt	r0, #1
   17490:	b	17330 <strspn@plt+0x63bc>
   17494:	cmn	r6, #1
   17498:	beq	17338 <strspn@plt+0x63c4>
   1749c:	mov	r1, r6
   174a0:	mov	r0, #-2147483648	; 0x80000000
   174a4:	bl	17af4 <strspn@plt+0x6b80>
   174a8:	cmp	r7, r0
   174ac:	movle	r0, #0
   174b0:	movgt	r0, #1
   174b4:	b	17330 <strspn@plt+0x63bc>
   174b8:	mov	r1, r7
   174bc:	mvn	r0, #-2147483648	; 0x80000000
   174c0:	str	r3, [sp, #4]
   174c4:	bl	17af4 <strspn@plt+0x6b80>
   174c8:	ldr	r3, [sp, #4]
   174cc:	cmp	r0, r4
   174d0:	movle	r0, #0
   174d4:	movgt	r0, #1
   174d8:	b	17390 <strspn@plt+0x641c>
   174dc:	push	{r4, lr}
   174e0:	mov	r1, #1
   174e4:	bl	17650 <strspn@plt+0x66dc>
   174e8:	cmp	r0, #0
   174ec:	popne	{r4, pc}
   174f0:	bl	17610 <strspn@plt+0x669c>
   174f4:	push	{r4, lr}
   174f8:	mov	r1, #1
   174fc:	bl	17650 <strspn@plt+0x66dc>
   17500:	cmp	r0, #0
   17504:	popne	{r4, pc}
   17508:	bl	17610 <strspn@plt+0x669c>
   1750c:	push	{r4, lr}
   17510:	bl	17650 <strspn@plt+0x66dc>
   17514:	cmp	r0, #0
   17518:	popne	{r4, pc}
   1751c:	bl	17610 <strspn@plt+0x669c>
   17520:	push	{r4, lr}
   17524:	bl	17650 <strspn@plt+0x66dc>
   17528:	cmp	r0, #0
   1752c:	popne	{r4, pc}
   17530:	bl	17610 <strspn@plt+0x669c>
   17534:	push	{r4, r5, r6, lr}
   17538:	mov	r6, r0
   1753c:	mov	r0, r1
   17540:	mov	r4, r1
   17544:	bl	17698 <strspn@plt+0x6724>
   17548:	subs	r5, r0, #0
   1754c:	beq	17564 <strspn@plt+0x65f0>
   17550:	mov	r2, r4
   17554:	mov	r1, r6
   17558:	bl	10d4c <memcpy@plt>
   1755c:	mov	r0, r5
   17560:	pop	{r4, r5, r6, pc}
   17564:	bl	17610 <strspn@plt+0x669c>
   17568:	push	{r4, r5, r6, lr}
   1756c:	mov	r6, r0
   17570:	mov	r0, r1
   17574:	mov	r4, r1
   17578:	bl	17698 <strspn@plt+0x6724>
   1757c:	subs	r5, r0, #0
   17580:	beq	17598 <strspn@plt+0x6624>
   17584:	mov	r2, r4
   17588:	mov	r1, r6
   1758c:	bl	10d4c <memcpy@plt>
   17590:	mov	r0, r5
   17594:	pop	{r4, r5, r6, pc}
   17598:	bl	17610 <strspn@plt+0x669c>
   1759c:	push	{r4, r5, r6, lr}
   175a0:	mov	r6, r0
   175a4:	add	r0, r1, #1
   175a8:	mov	r4, r1
   175ac:	bl	17698 <strspn@plt+0x6724>
   175b0:	subs	r5, r0, #0
   175b4:	beq	175d4 <strspn@plt+0x6660>
   175b8:	mov	r3, #0
   175bc:	mov	r1, r6
   175c0:	strb	r3, [r5, r4]
   175c4:	mov	r2, r4
   175c8:	bl	10d4c <memcpy@plt>
   175cc:	mov	r0, r5
   175d0:	pop	{r4, r5, r6, pc}
   175d4:	bl	17610 <strspn@plt+0x669c>
   175d8:	push	{r4, r5, r6, lr}
   175dc:	mov	r6, r0
   175e0:	bl	10e78 <strlen@plt>
   175e4:	add	r4, r0, #1
   175e8:	mov	r0, r4
   175ec:	bl	17698 <strspn@plt+0x6724>
   175f0:	subs	r5, r0, #0
   175f4:	beq	1760c <strspn@plt+0x6698>
   175f8:	mov	r2, r4
   175fc:	mov	r1, r6
   17600:	bl	10d4c <memcpy@plt>
   17604:	mov	r0, r5
   17608:	pop	{r4, r5, r6, pc}
   1760c:	bl	17610 <strspn@plt+0x669c>
   17610:	ldr	r3, [pc, #44]	; 17644 <strspn@plt+0x66d0>
   17614:	push	{r4, lr}
   17618:	mov	r2, #5
   1761c:	ldr	r1, [pc, #36]	; 17648 <strspn@plt+0x66d4>
   17620:	mov	r0, #0
   17624:	ldr	r4, [r3]
   17628:	bl	10d7c <dcgettext@plt>
   1762c:	ldr	r2, [pc, #24]	; 1764c <strspn@plt+0x66d8>
   17630:	mov	r1, #0
   17634:	mov	r3, r0
   17638:	mov	r0, r4
   1763c:	bl	10de8 <error@plt>
   17640:	bl	10f50 <abort@plt>
   17644:	strdeq	r9, [r2], -r8
   17648:	andeq	r8, r1, r4, ror #26
   1764c:	ldrdeq	r8, [r1], -ip
   17650:	cmp	r1, #0
   17654:	cmpne	r0, #0
   17658:	moveq	r1, #1
   1765c:	moveq	r0, r1
   17660:	umull	r2, r3, r0, r1
   17664:	adds	r3, r3, #0
   17668:	movne	r3, #1
   1766c:	cmp	r2, #0
   17670:	blt	17680 <strspn@plt+0x670c>
   17674:	cmp	r3, #0
   17678:	bne	17680 <strspn@plt+0x670c>
   1767c:	b	10cec <calloc@plt>
   17680:	push	{r4, lr}
   17684:	bl	10e90 <__errno_location@plt>
   17688:	mov	r3, #12
   1768c:	str	r3, [r0]
   17690:	mov	r0, #0
   17694:	pop	{r4, pc}
   17698:	cmp	r0, #0
   1769c:	moveq	r0, #1
   176a0:	cmp	r0, #0
   176a4:	blt	176ac <strspn@plt+0x6738>
   176a8:	b	10e18 <malloc@plt>
   176ac:	push	{r4, lr}
   176b0:	bl	10e90 <__errno_location@plt>
   176b4:	mov	r3, #12
   176b8:	str	r3, [r0]
   176bc:	mov	r0, #0
   176c0:	pop	{r4, pc}
   176c4:	cmp	r0, #0
   176c8:	beq	176ec <strspn@plt+0x6778>
   176cc:	cmp	r1, #0
   176d0:	push	{lr}		; (str lr, [sp, #-4]!)
   176d4:	sub	sp, sp, #12
   176d8:	beq	176f4 <strspn@plt+0x6780>
   176dc:	blt	1770c <strspn@plt+0x6798>
   176e0:	add	sp, sp, #12
   176e4:	pop	{lr}		; (ldr lr, [sp], #4)
   176e8:	b	10d88 <realloc@plt>
   176ec:	mov	r0, r1
   176f0:	b	17698 <strspn@plt+0x6724>
   176f4:	str	r1, [sp, #4]
   176f8:	bl	11ea0 <strspn@plt+0xf2c>
   176fc:	ldr	r3, [sp, #4]
   17700:	mov	r0, r3
   17704:	add	sp, sp, #12
   17708:	pop	{pc}		; (ldr pc, [sp], #4)
   1770c:	bl	10e90 <__errno_location@plt>
   17710:	mov	r2, #12
   17714:	mov	r3, #0
   17718:	str	r2, [r0]
   1771c:	b	17700 <strspn@plt+0x678c>
   17720:	push	{r4, lr}
   17724:	mov	r0, #14
   17728:	bl	10f14 <nl_langinfo@plt>
   1772c:	cmp	r0, #0
   17730:	beq	17748 <strspn@plt+0x67d4>
   17734:	ldrb	r2, [r0]
   17738:	ldr	r3, [pc, #16]	; 17750 <strspn@plt+0x67dc>
   1773c:	cmp	r2, #0
   17740:	moveq	r0, r3
   17744:	pop	{r4, pc}
   17748:	ldr	r0, [pc]	; 17750 <strspn@plt+0x67dc>
   1774c:	pop	{r4, pc}
   17750:	andeq	r8, r1, r8, ror sp
   17754:	push	{r4, r5, r6, r7, lr}
   17758:	subs	r6, r0, #0
   1775c:	sub	sp, sp, #12
   17760:	addeq	r6, sp, #4
   17764:	mov	r0, r6
   17768:	mov	r5, r2
   1776c:	mov	r7, r1
   17770:	bl	10ddc <mbrtowc@plt>
   17774:	cmp	r5, #0
   17778:	cmnne	r0, #3
   1777c:	mov	r4, r0
   17780:	bls	1779c <strspn@plt+0x6828>
   17784:	mov	r0, #0
   17788:	bl	177f4 <strspn@plt+0x6880>
   1778c:	cmp	r0, #0
   17790:	moveq	r4, #1
   17794:	ldrbeq	r3, [r7]
   17798:	streq	r3, [r6]
   1779c:	mov	r0, r4
   177a0:	add	sp, sp, #12
   177a4:	pop	{r4, r5, r6, r7, pc}
   177a8:	push	{r4, r5, r6, lr}
   177ac:	subs	r4, r2, #0
   177b0:	mov	r6, r0
   177b4:	mov	r5, r1
   177b8:	beq	177e4 <strspn@plt+0x6870>
   177bc:	mov	r1, r4
   177c0:	mvn	r0, #0
   177c4:	bl	178e8 <strspn@plt+0x6974>
   177c8:	cmp	r0, r5
   177cc:	bcs	177e4 <strspn@plt+0x6870>
   177d0:	bl	10e90 <__errno_location@plt>
   177d4:	mov	r3, #12
   177d8:	str	r3, [r0]
   177dc:	mov	r0, #0
   177e0:	pop	{r4, r5, r6, pc}
   177e4:	mul	r1, r5, r4
   177e8:	mov	r0, r6
   177ec:	pop	{r4, r5, r6, lr}
   177f0:	b	176c4 <strspn@plt+0x6750>
   177f4:	push	{lr}		; (str lr, [sp, #-4]!)
   177f8:	sub	sp, sp, #268	; 0x10c
   177fc:	add	r1, sp, #4
   17800:	ldr	r2, [pc, #60]	; 17844 <strspn@plt+0x68d0>
   17804:	bl	17850 <strspn@plt+0x68dc>
   17808:	cmp	r0, #0
   1780c:	movne	r0, #0
   17810:	bne	1783c <strspn@plt+0x68c8>
   17814:	ldr	r1, [pc, #44]	; 17848 <strspn@plt+0x68d4>
   17818:	add	r0, sp, #4
   1781c:	bl	10d10 <strcmp@plt>
   17820:	cmp	r0, #0
   17824:	beq	1783c <strspn@plt+0x68c8>
   17828:	add	r0, sp, #4
   1782c:	ldr	r1, [pc, #24]	; 1784c <strspn@plt+0x68d8>
   17830:	bl	10d10 <strcmp@plt>
   17834:	adds	r0, r0, #0
   17838:	movne	r0, #1
   1783c:	add	sp, sp, #268	; 0x10c
   17840:	pop	{pc}		; (ldr pc, [sp], #4)
   17844:	andeq	r0, r0, r1, lsl #2
   17848:	andeq	r8, r1, r0, lsl #27
   1784c:	andeq	r8, r1, r4, lsl #27
   17850:	push	{r4, r5, r6, lr}
   17854:	mov	r5, r1
   17858:	mov	r1, #0
   1785c:	mov	r4, r2
   17860:	bl	10efc <setlocale@plt>
   17864:	subs	r6, r0, #0
   17868:	beq	178c4 <strspn@plt+0x6950>
   1786c:	bl	10e78 <strlen@plt>
   17870:	cmp	r4, r0
   17874:	bhi	178ac <strspn@plt+0x6938>
   17878:	cmp	r4, #0
   1787c:	bne	17888 <strspn@plt+0x6914>
   17880:	mov	r0, #34	; 0x22
   17884:	pop	{r4, r5, r6, pc}
   17888:	sub	r4, r4, #1
   1788c:	mov	r1, r6
   17890:	mov	r2, r4
   17894:	mov	r0, r5
   17898:	bl	10d4c <memcpy@plt>
   1789c:	mov	r3, #0
   178a0:	strb	r3, [r5, r4]
   178a4:	mov	r0, #34	; 0x22
   178a8:	pop	{r4, r5, r6, pc}
   178ac:	add	r2, r0, #1
   178b0:	mov	r1, r6
   178b4:	mov	r0, r5
   178b8:	bl	10d4c <memcpy@plt>
   178bc:	mov	r0, #0
   178c0:	pop	{r4, r5, r6, pc}
   178c4:	cmp	r4, #0
   178c8:	beq	178d8 <strspn@plt+0x6964>
   178cc:	strb	r6, [r5]
   178d0:	mov	r0, #22
   178d4:	pop	{r4, r5, r6, pc}
   178d8:	mov	r0, #22
   178dc:	pop	{r4, r5, r6, pc}
   178e0:	mov	r1, #0
   178e4:	b	10efc <setlocale@plt>
   178e8:	subs	r2, r1, #1
   178ec:	bxeq	lr
   178f0:	bcc	17ac8 <strspn@plt+0x6b54>
   178f4:	cmp	r0, r1
   178f8:	bls	17aac <strspn@plt+0x6b38>
   178fc:	tst	r1, r2
   17900:	beq	17ab8 <strspn@plt+0x6b44>
   17904:	clz	r3, r0
   17908:	clz	r2, r1
   1790c:	sub	r3, r2, r3
   17910:	rsbs	r3, r3, #31
   17914:	addne	r3, r3, r3, lsl #1
   17918:	mov	r2, #0
   1791c:	addne	pc, pc, r3, lsl #2
   17920:	nop			; (mov r0, r0)
   17924:	cmp	r0, r1, lsl #31
   17928:	adc	r2, r2, r2
   1792c:	subcs	r0, r0, r1, lsl #31
   17930:	cmp	r0, r1, lsl #30
   17934:	adc	r2, r2, r2
   17938:	subcs	r0, r0, r1, lsl #30
   1793c:	cmp	r0, r1, lsl #29
   17940:	adc	r2, r2, r2
   17944:	subcs	r0, r0, r1, lsl #29
   17948:	cmp	r0, r1, lsl #28
   1794c:	adc	r2, r2, r2
   17950:	subcs	r0, r0, r1, lsl #28
   17954:	cmp	r0, r1, lsl #27
   17958:	adc	r2, r2, r2
   1795c:	subcs	r0, r0, r1, lsl #27
   17960:	cmp	r0, r1, lsl #26
   17964:	adc	r2, r2, r2
   17968:	subcs	r0, r0, r1, lsl #26
   1796c:	cmp	r0, r1, lsl #25
   17970:	adc	r2, r2, r2
   17974:	subcs	r0, r0, r1, lsl #25
   17978:	cmp	r0, r1, lsl #24
   1797c:	adc	r2, r2, r2
   17980:	subcs	r0, r0, r1, lsl #24
   17984:	cmp	r0, r1, lsl #23
   17988:	adc	r2, r2, r2
   1798c:	subcs	r0, r0, r1, lsl #23
   17990:	cmp	r0, r1, lsl #22
   17994:	adc	r2, r2, r2
   17998:	subcs	r0, r0, r1, lsl #22
   1799c:	cmp	r0, r1, lsl #21
   179a0:	adc	r2, r2, r2
   179a4:	subcs	r0, r0, r1, lsl #21
   179a8:	cmp	r0, r1, lsl #20
   179ac:	adc	r2, r2, r2
   179b0:	subcs	r0, r0, r1, lsl #20
   179b4:	cmp	r0, r1, lsl #19
   179b8:	adc	r2, r2, r2
   179bc:	subcs	r0, r0, r1, lsl #19
   179c0:	cmp	r0, r1, lsl #18
   179c4:	adc	r2, r2, r2
   179c8:	subcs	r0, r0, r1, lsl #18
   179cc:	cmp	r0, r1, lsl #17
   179d0:	adc	r2, r2, r2
   179d4:	subcs	r0, r0, r1, lsl #17
   179d8:	cmp	r0, r1, lsl #16
   179dc:	adc	r2, r2, r2
   179e0:	subcs	r0, r0, r1, lsl #16
   179e4:	cmp	r0, r1, lsl #15
   179e8:	adc	r2, r2, r2
   179ec:	subcs	r0, r0, r1, lsl #15
   179f0:	cmp	r0, r1, lsl #14
   179f4:	adc	r2, r2, r2
   179f8:	subcs	r0, r0, r1, lsl #14
   179fc:	cmp	r0, r1, lsl #13
   17a00:	adc	r2, r2, r2
   17a04:	subcs	r0, r0, r1, lsl #13
   17a08:	cmp	r0, r1, lsl #12
   17a0c:	adc	r2, r2, r2
   17a10:	subcs	r0, r0, r1, lsl #12
   17a14:	cmp	r0, r1, lsl #11
   17a18:	adc	r2, r2, r2
   17a1c:	subcs	r0, r0, r1, lsl #11
   17a20:	cmp	r0, r1, lsl #10
   17a24:	adc	r2, r2, r2
   17a28:	subcs	r0, r0, r1, lsl #10
   17a2c:	cmp	r0, r1, lsl #9
   17a30:	adc	r2, r2, r2
   17a34:	subcs	r0, r0, r1, lsl #9
   17a38:	cmp	r0, r1, lsl #8
   17a3c:	adc	r2, r2, r2
   17a40:	subcs	r0, r0, r1, lsl #8
   17a44:	cmp	r0, r1, lsl #7
   17a48:	adc	r2, r2, r2
   17a4c:	subcs	r0, r0, r1, lsl #7
   17a50:	cmp	r0, r1, lsl #6
   17a54:	adc	r2, r2, r2
   17a58:	subcs	r0, r0, r1, lsl #6
   17a5c:	cmp	r0, r1, lsl #5
   17a60:	adc	r2, r2, r2
   17a64:	subcs	r0, r0, r1, lsl #5
   17a68:	cmp	r0, r1, lsl #4
   17a6c:	adc	r2, r2, r2
   17a70:	subcs	r0, r0, r1, lsl #4
   17a74:	cmp	r0, r1, lsl #3
   17a78:	adc	r2, r2, r2
   17a7c:	subcs	r0, r0, r1, lsl #3
   17a80:	cmp	r0, r1, lsl #2
   17a84:	adc	r2, r2, r2
   17a88:	subcs	r0, r0, r1, lsl #2
   17a8c:	cmp	r0, r1, lsl #1
   17a90:	adc	r2, r2, r2
   17a94:	subcs	r0, r0, r1, lsl #1
   17a98:	cmp	r0, r1
   17a9c:	adc	r2, r2, r2
   17aa0:	subcs	r0, r0, r1
   17aa4:	mov	r0, r2
   17aa8:	bx	lr
   17aac:	moveq	r0, #1
   17ab0:	movne	r0, #0
   17ab4:	bx	lr
   17ab8:	clz	r2, r1
   17abc:	rsb	r2, r2, #31
   17ac0:	lsr	r0, r0, r2
   17ac4:	bx	lr
   17ac8:	cmp	r0, #0
   17acc:	mvnne	r0, #0
   17ad0:	b	17d70 <strspn@plt+0x6dfc>
   17ad4:	cmp	r1, #0
   17ad8:	beq	17ac8 <strspn@plt+0x6b54>
   17adc:	push	{r0, r1, lr}
   17ae0:	bl	178e8 <strspn@plt+0x6974>
   17ae4:	pop	{r1, r2, lr}
   17ae8:	mul	r3, r2, r0
   17aec:	sub	r1, r1, r3
   17af0:	bx	lr
   17af4:	cmp	r1, #0
   17af8:	beq	17d04 <strspn@plt+0x6d90>
   17afc:	eor	ip, r0, r1
   17b00:	rsbmi	r1, r1, #0
   17b04:	subs	r2, r1, #1
   17b08:	beq	17cd0 <strspn@plt+0x6d5c>
   17b0c:	movs	r3, r0
   17b10:	rsbmi	r3, r0, #0
   17b14:	cmp	r3, r1
   17b18:	bls	17cdc <strspn@plt+0x6d68>
   17b1c:	tst	r1, r2
   17b20:	beq	17cec <strspn@plt+0x6d78>
   17b24:	clz	r2, r3
   17b28:	clz	r0, r1
   17b2c:	sub	r2, r0, r2
   17b30:	rsbs	r2, r2, #31
   17b34:	addne	r2, r2, r2, lsl #1
   17b38:	mov	r0, #0
   17b3c:	addne	pc, pc, r2, lsl #2
   17b40:	nop			; (mov r0, r0)
   17b44:	cmp	r3, r1, lsl #31
   17b48:	adc	r0, r0, r0
   17b4c:	subcs	r3, r3, r1, lsl #31
   17b50:	cmp	r3, r1, lsl #30
   17b54:	adc	r0, r0, r0
   17b58:	subcs	r3, r3, r1, lsl #30
   17b5c:	cmp	r3, r1, lsl #29
   17b60:	adc	r0, r0, r0
   17b64:	subcs	r3, r3, r1, lsl #29
   17b68:	cmp	r3, r1, lsl #28
   17b6c:	adc	r0, r0, r0
   17b70:	subcs	r3, r3, r1, lsl #28
   17b74:	cmp	r3, r1, lsl #27
   17b78:	adc	r0, r0, r0
   17b7c:	subcs	r3, r3, r1, lsl #27
   17b80:	cmp	r3, r1, lsl #26
   17b84:	adc	r0, r0, r0
   17b88:	subcs	r3, r3, r1, lsl #26
   17b8c:	cmp	r3, r1, lsl #25
   17b90:	adc	r0, r0, r0
   17b94:	subcs	r3, r3, r1, lsl #25
   17b98:	cmp	r3, r1, lsl #24
   17b9c:	adc	r0, r0, r0
   17ba0:	subcs	r3, r3, r1, lsl #24
   17ba4:	cmp	r3, r1, lsl #23
   17ba8:	adc	r0, r0, r0
   17bac:	subcs	r3, r3, r1, lsl #23
   17bb0:	cmp	r3, r1, lsl #22
   17bb4:	adc	r0, r0, r0
   17bb8:	subcs	r3, r3, r1, lsl #22
   17bbc:	cmp	r3, r1, lsl #21
   17bc0:	adc	r0, r0, r0
   17bc4:	subcs	r3, r3, r1, lsl #21
   17bc8:	cmp	r3, r1, lsl #20
   17bcc:	adc	r0, r0, r0
   17bd0:	subcs	r3, r3, r1, lsl #20
   17bd4:	cmp	r3, r1, lsl #19
   17bd8:	adc	r0, r0, r0
   17bdc:	subcs	r3, r3, r1, lsl #19
   17be0:	cmp	r3, r1, lsl #18
   17be4:	adc	r0, r0, r0
   17be8:	subcs	r3, r3, r1, lsl #18
   17bec:	cmp	r3, r1, lsl #17
   17bf0:	adc	r0, r0, r0
   17bf4:	subcs	r3, r3, r1, lsl #17
   17bf8:	cmp	r3, r1, lsl #16
   17bfc:	adc	r0, r0, r0
   17c00:	subcs	r3, r3, r1, lsl #16
   17c04:	cmp	r3, r1, lsl #15
   17c08:	adc	r0, r0, r0
   17c0c:	subcs	r3, r3, r1, lsl #15
   17c10:	cmp	r3, r1, lsl #14
   17c14:	adc	r0, r0, r0
   17c18:	subcs	r3, r3, r1, lsl #14
   17c1c:	cmp	r3, r1, lsl #13
   17c20:	adc	r0, r0, r0
   17c24:	subcs	r3, r3, r1, lsl #13
   17c28:	cmp	r3, r1, lsl #12
   17c2c:	adc	r0, r0, r0
   17c30:	subcs	r3, r3, r1, lsl #12
   17c34:	cmp	r3, r1, lsl #11
   17c38:	adc	r0, r0, r0
   17c3c:	subcs	r3, r3, r1, lsl #11
   17c40:	cmp	r3, r1, lsl #10
   17c44:	adc	r0, r0, r0
   17c48:	subcs	r3, r3, r1, lsl #10
   17c4c:	cmp	r3, r1, lsl #9
   17c50:	adc	r0, r0, r0
   17c54:	subcs	r3, r3, r1, lsl #9
   17c58:	cmp	r3, r1, lsl #8
   17c5c:	adc	r0, r0, r0
   17c60:	subcs	r3, r3, r1, lsl #8
   17c64:	cmp	r3, r1, lsl #7
   17c68:	adc	r0, r0, r0
   17c6c:	subcs	r3, r3, r1, lsl #7
   17c70:	cmp	r3, r1, lsl #6
   17c74:	adc	r0, r0, r0
   17c78:	subcs	r3, r3, r1, lsl #6
   17c7c:	cmp	r3, r1, lsl #5
   17c80:	adc	r0, r0, r0
   17c84:	subcs	r3, r3, r1, lsl #5
   17c88:	cmp	r3, r1, lsl #4
   17c8c:	adc	r0, r0, r0
   17c90:	subcs	r3, r3, r1, lsl #4
   17c94:	cmp	r3, r1, lsl #3
   17c98:	adc	r0, r0, r0
   17c9c:	subcs	r3, r3, r1, lsl #3
   17ca0:	cmp	r3, r1, lsl #2
   17ca4:	adc	r0, r0, r0
   17ca8:	subcs	r3, r3, r1, lsl #2
   17cac:	cmp	r3, r1, lsl #1
   17cb0:	adc	r0, r0, r0
   17cb4:	subcs	r3, r3, r1, lsl #1
   17cb8:	cmp	r3, r1
   17cbc:	adc	r0, r0, r0
   17cc0:	subcs	r3, r3, r1
   17cc4:	cmp	ip, #0
   17cc8:	rsbmi	r0, r0, #0
   17ccc:	bx	lr
   17cd0:	teq	ip, r0
   17cd4:	rsbmi	r0, r0, #0
   17cd8:	bx	lr
   17cdc:	movcc	r0, #0
   17ce0:	asreq	r0, ip, #31
   17ce4:	orreq	r0, r0, #1
   17ce8:	bx	lr
   17cec:	clz	r2, r1
   17cf0:	rsb	r2, r2, #31
   17cf4:	cmp	ip, #0
   17cf8:	lsr	r0, r3, r2
   17cfc:	rsbmi	r0, r0, #0
   17d00:	bx	lr
   17d04:	cmp	r0, #0
   17d08:	mvngt	r0, #-2147483648	; 0x80000000
   17d0c:	movlt	r0, #-2147483648	; 0x80000000
   17d10:	b	17d70 <strspn@plt+0x6dfc>
   17d14:	cmp	r1, #0
   17d18:	beq	17d04 <strspn@plt+0x6d90>
   17d1c:	push	{r0, r1, lr}
   17d20:	bl	17afc <strspn@plt+0x6b88>
   17d24:	pop	{r1, r2, lr}
   17d28:	mul	r3, r2, r0
   17d2c:	sub	r1, r1, r3
   17d30:	bx	lr
   17d34:	cmp	r3, #0
   17d38:	cmpeq	r2, #0
   17d3c:	bne	17d54 <strspn@plt+0x6de0>
   17d40:	cmp	r1, #0
   17d44:	cmpeq	r0, #0
   17d48:	mvnne	r1, #0
   17d4c:	mvnne	r0, #0
   17d50:	b	17d70 <strspn@plt+0x6dfc>
   17d54:	sub	sp, sp, #8
   17d58:	push	{sp, lr}
   17d5c:	bl	17d80 <strspn@plt+0x6e0c>
   17d60:	ldr	lr, [sp, #4]
   17d64:	add	sp, sp, #8
   17d68:	pop	{r2, r3}
   17d6c:	bx	lr
   17d70:	push	{r1, lr}
   17d74:	mov	r0, #8
   17d78:	bl	10d04 <raise@plt>
   17d7c:	pop	{r1, pc}
   17d80:	cmp	r1, r3
   17d84:	push	{r4, r5, r6, r7, r8, r9, lr}
   17d88:	cmpeq	r0, r2
   17d8c:	mov	r4, r0
   17d90:	mov	r5, r1
   17d94:	ldr	r9, [sp, #28]
   17d98:	movcc	r0, #0
   17d9c:	movcc	r1, #0
   17da0:	bcc	17e98 <strspn@plt+0x6f24>
   17da4:	cmp	r3, #0
   17da8:	clzeq	ip, r2
   17dac:	clzne	ip, r3
   17db0:	addeq	ip, ip, #32
   17db4:	cmp	r5, #0
   17db8:	clzeq	r1, r4
   17dbc:	addeq	r1, r1, #32
   17dc0:	clzne	r1, r5
   17dc4:	sub	ip, ip, r1
   17dc8:	sub	lr, ip, #32
   17dcc:	lsl	r7, r3, ip
   17dd0:	rsb	r8, ip, #32
   17dd4:	orr	r7, r7, r2, lsl lr
   17dd8:	orr	r7, r7, r2, lsr r8
   17ddc:	lsl	r6, r2, ip
   17de0:	cmp	r5, r7
   17de4:	cmpeq	r4, r6
   17de8:	movcc	r0, #0
   17dec:	movcc	r1, #0
   17df0:	bcc	17e0c <strspn@plt+0x6e98>
   17df4:	mov	r3, #1
   17df8:	subs	r4, r4, r6
   17dfc:	lsl	r1, r3, lr
   17e00:	lsl	r0, r3, ip
   17e04:	orr	r1, r1, r3, lsr r8
   17e08:	sbc	r5, r5, r7
   17e0c:	cmp	ip, #0
   17e10:	beq	17e98 <strspn@plt+0x6f24>
   17e14:	lsrs	r3, r7, #1
   17e18:	rrx	r2, r6
   17e1c:	mov	r6, ip
   17e20:	b	17e44 <strspn@plt+0x6ed0>
   17e24:	subs	r4, r4, r2
   17e28:	sbc	r5, r5, r3
   17e2c:	adds	r4, r4, r4
   17e30:	adc	r5, r5, r5
   17e34:	adds	r4, r4, #1
   17e38:	adc	r5, r5, #0
   17e3c:	subs	r6, r6, #1
   17e40:	beq	17e60 <strspn@plt+0x6eec>
   17e44:	cmp	r5, r3
   17e48:	cmpeq	r4, r2
   17e4c:	bcs	17e24 <strspn@plt+0x6eb0>
   17e50:	adds	r4, r4, r4
   17e54:	adc	r5, r5, r5
   17e58:	subs	r6, r6, #1
   17e5c:	bne	17e44 <strspn@plt+0x6ed0>
   17e60:	lsr	r6, r4, ip
   17e64:	lsr	r7, r5, ip
   17e68:	orr	r6, r6, r5, lsl r8
   17e6c:	adds	r2, r0, r4
   17e70:	orr	r6, r6, r5, lsr lr
   17e74:	adc	r3, r1, r5
   17e78:	lsl	r1, r7, ip
   17e7c:	orr	r1, r1, r6, lsl lr
   17e80:	lsl	r0, r6, ip
   17e84:	orr	r1, r1, r6, lsr r8
   17e88:	subs	r0, r2, r0
   17e8c:	mov	r4, r6
   17e90:	mov	r5, r7
   17e94:	sbc	r1, r3, r1
   17e98:	cmp	r9, #0
   17e9c:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   17ea0:	strd	r4, [r9]
   17ea4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17ea8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17eac:	mov	r7, r0
   17eb0:	ldr	r6, [pc, #72]	; 17f00 <strspn@plt+0x6f8c>
   17eb4:	ldr	r5, [pc, #72]	; 17f04 <strspn@plt+0x6f90>
   17eb8:	add	r6, pc, r6
   17ebc:	add	r5, pc, r5
   17ec0:	sub	r6, r6, r5
   17ec4:	mov	r8, r1
   17ec8:	mov	r9, r2
   17ecc:	bl	10ccc <calloc@plt-0x20>
   17ed0:	asrs	r6, r6, #2
   17ed4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17ed8:	mov	r4, #0
   17edc:	add	r4, r4, #1
   17ee0:	ldr	r3, [r5], #4
   17ee4:	mov	r2, r9
   17ee8:	mov	r1, r8
   17eec:	mov	r0, r7
   17ef0:	blx	r3
   17ef4:	cmp	r6, r4
   17ef8:	bne	17edc <strspn@plt+0x6f68>
   17efc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17f00:	andeq	r1, r1, r0, asr r0
   17f04:	andeq	r1, r1, r8, asr #32
   17f08:	bx	lr
   17f0c:	ldr	r3, [pc, #12]	; 17f20 <strspn@plt+0x6fac>
   17f10:	mov	r1, #0
   17f14:	add	r3, pc, r3
   17f18:	ldr	r2, [r3]
   17f1c:	b	10e9c <__cxa_atexit@plt>
   17f20:	ldrdeq	r1, [r1], -r4

Disassembly of section .fini:

00017f24 <.fini>:
   17f24:	push	{r3, lr}
   17f28:	pop	{r3, pc}
