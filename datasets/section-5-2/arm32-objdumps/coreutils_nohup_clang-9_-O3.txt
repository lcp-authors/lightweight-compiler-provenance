
../repos/coreutils/src/nohup:     file format elf32-littlearm


Disassembly of section .init:

00010d98 <.init>:
   10d98:	push	{r3, lr}
   10d9c:	bl	11058 <__mempcpy_chk@plt+0x48>
   10da0:	pop	{r3, pc}

Disassembly of section .plt:

00010da4 <calloc@plt-0x14>:
   10da4:	push	{lr}		; (str lr, [sp, #-4]!)
   10da8:	ldr	lr, [pc, #4]	; 10db4 <calloc@plt-0x4>
   10dac:	add	lr, pc, lr
   10db0:	ldr	pc, [lr, #8]!
   10db4:	andeq	r5, r1, ip, asr #4

00010db8 <calloc@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #86016	; 0x15000
   10dc0:	ldr	pc, [ip, #588]!	; 0x24c

00010dc4 <fputs_unlocked@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #86016	; 0x15000
   10dcc:	ldr	pc, [ip, #580]!	; 0x244

00010dd0 <strcmp@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #86016	; 0x15000
   10dd8:	ldr	pc, [ip, #572]!	; 0x23c

00010ddc <fflush@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #86016	; 0x15000
   10de4:	ldr	pc, [ip, #564]!	; 0x234

00010de8 <free@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #86016	; 0x15000
   10df0:	ldr	pc, [ip, #556]!	; 0x22c

00010df4 <_exit@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #86016	; 0x15000
   10dfc:	ldr	pc, [ip, #548]!	; 0x224

00010e00 <memcpy@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #86016	; 0x15000
   10e08:	ldr	pc, [ip, #540]!	; 0x21c

00010e0c <execvp@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #86016	; 0x15000
   10e14:	ldr	pc, [ip, #532]!	; 0x214

00010e18 <mbsinit@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #86016	; 0x15000
   10e20:	ldr	pc, [ip, #524]!	; 0x20c

00010e24 <signal@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #86016	; 0x15000
   10e2c:	ldr	pc, [ip, #516]!	; 0x204

00010e30 <dcgettext@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #86016	; 0x15000
   10e38:	ldr	pc, [ip, #508]!	; 0x1fc

00010e3c <dup2@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #86016	; 0x15000
   10e44:	ldr	pc, [ip, #500]!	; 0x1f4

00010e48 <realloc@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #86016	; 0x15000
   10e50:	ldr	pc, [ip, #492]!	; 0x1ec

00010e54 <textdomain@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #86016	; 0x15000
   10e5c:	ldr	pc, [ip, #484]!	; 0x1e4

00010e60 <iswprint@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #86016	; 0x15000
   10e68:	ldr	pc, [ip, #476]!	; 0x1dc

00010e6c <fwrite@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #86016	; 0x15000
   10e74:	ldr	pc, [ip, #468]!	; 0x1d4

00010e78 <lseek64@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #86016	; 0x15000
   10e80:	ldr	pc, [ip, #460]!	; 0x1cc

00010e84 <__ctype_get_mb_cur_max@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #86016	; 0x15000
   10e8c:	ldr	pc, [ip, #452]!	; 0x1c4

00010e90 <__fpending@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #86016	; 0x15000
   10e98:	ldr	pc, [ip, #444]!	; 0x1bc

00010e9c <mbrtowc@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #86016	; 0x15000
   10ea4:	ldr	pc, [ip, #436]!	; 0x1b4

00010ea8 <error@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #86016	; 0x15000
   10eb0:	ldr	pc, [ip, #428]!	; 0x1ac

00010eb4 <open64@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #86016	; 0x15000
   10ebc:	ldr	pc, [ip, #420]!	; 0x1a4

00010ec0 <getenv@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #86016	; 0x15000
   10ec8:	ldr	pc, [ip, #412]!	; 0x19c

00010ecc <malloc@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #86016	; 0x15000
   10ed4:	ldr	pc, [ip, #404]!	; 0x194

00010ed8 <__libc_start_main@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #86016	; 0x15000
   10ee0:	ldr	pc, [ip, #396]!	; 0x18c

00010ee4 <__freading@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #86016	; 0x15000
   10eec:	ldr	pc, [ip, #388]!	; 0x184

00010ef0 <__gmon_start__@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #86016	; 0x15000
   10ef8:	ldr	pc, [ip, #380]!	; 0x17c

00010efc <getopt_long@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #86016	; 0x15000
   10f04:	ldr	pc, [ip, #372]!	; 0x174

00010f08 <__ctype_b_loc@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #86016	; 0x15000
   10f10:	ldr	pc, [ip, #364]!	; 0x16c

00010f14 <exit@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #86016	; 0x15000
   10f1c:	ldr	pc, [ip, #356]!	; 0x164

00010f20 <bcmp@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #86016	; 0x15000
   10f28:	ldr	pc, [ip, #348]!	; 0x15c

00010f2c <strlen@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #86016	; 0x15000
   10f34:	ldr	pc, [ip, #340]!	; 0x154

00010f38 <__errno_location@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #86016	; 0x15000
   10f40:	ldr	pc, [ip, #332]!	; 0x14c

00010f44 <__cxa_atexit@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #86016	; 0x15000
   10f4c:	ldr	pc, [ip, #324]!	; 0x144

00010f50 <memset@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #86016	; 0x15000
   10f58:	ldr	pc, [ip, #316]!	; 0x13c

00010f5c <__printf_chk@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #86016	; 0x15000
   10f64:	ldr	pc, [ip, #308]!	; 0x134

00010f68 <fileno@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #86016	; 0x15000
   10f70:	ldr	pc, [ip, #300]!	; 0x12c

00010f74 <__fprintf_chk@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #86016	; 0x15000
   10f7c:	ldr	pc, [ip, #292]!	; 0x124

00010f80 <fclose@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #86016	; 0x15000
   10f88:	ldr	pc, [ip, #284]!	; 0x11c

00010f8c <fseeko64@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #86016	; 0x15000
   10f94:	ldr	pc, [ip, #276]!	; 0x114

00010f98 <fcntl64@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #86016	; 0x15000
   10fa0:	ldr	pc, [ip, #268]!	; 0x10c

00010fa4 <setlocale@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #86016	; 0x15000
   10fac:	ldr	pc, [ip, #260]!	; 0x104

00010fb0 <strrchr@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #86016	; 0x15000
   10fb8:	ldr	pc, [ip, #252]!	; 0xfc

00010fbc <nl_langinfo@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #86016	; 0x15000
   10fc4:	ldr	pc, [ip, #244]!	; 0xf4

00010fc8 <bindtextdomain@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #86016	; 0x15000
   10fd0:	ldr	pc, [ip, #236]!	; 0xec

00010fd4 <umask@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #86016	; 0x15000
   10fdc:	ldr	pc, [ip, #228]!	; 0xe4

00010fe0 <isatty@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #86016	; 0x15000
   10fe8:	ldr	pc, [ip, #220]!	; 0xdc

00010fec <strncmp@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #86016	; 0x15000
   10ff4:	ldr	pc, [ip, #212]!	; 0xd4

00010ff8 <abort@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #86016	; 0x15000
   11000:	ldr	pc, [ip, #204]!	; 0xcc

00011004 <close@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #86016	; 0x15000
   1100c:	ldr	pc, [ip, #196]!	; 0xc4

00011010 <__mempcpy_chk@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #86016	; 0x15000
   11018:	ldr	pc, [ip, #188]!	; 0xbc

Disassembly of section .text:

0001101c <.text>:
   1101c:	mov	fp, #0
   11020:	mov	lr, #0
   11024:	pop	{r1}		; (ldr r1, [sp], #4)
   11028:	mov	r2, sp
   1102c:	push	{r2}		; (str r2, [sp, #-4]!)
   11030:	push	{r0}		; (str r0, [sp, #-4]!)
   11034:	ldr	ip, [pc, #16]	; 1104c <__mempcpy_chk@plt+0x3c>
   11038:	push	{ip}		; (str ip, [sp, #-4]!)
   1103c:	ldr	r0, [pc, #12]	; 11050 <__mempcpy_chk@plt+0x40>
   11040:	ldr	r3, [pc, #12]	; 11054 <__mempcpy_chk@plt+0x44>
   11044:	bl	10ed8 <__libc_start_main@plt>
   11048:	bl	10ff8 <abort@plt>
   1104c:	andeq	r5, r1, r8, asr #1
   11050:	muleq	r1, ip, r3
   11054:	andeq	r5, r1, r8, rrx
   11058:	ldr	r3, [pc, #20]	; 11074 <__mempcpy_chk@plt+0x64>
   1105c:	ldr	r2, [pc, #20]	; 11078 <__mempcpy_chk@plt+0x68>
   11060:	add	r3, pc, r3
   11064:	ldr	r2, [r3, r2]
   11068:	cmp	r2, #0
   1106c:	bxeq	lr
   11070:	b	10ef0 <__gmon_start__@plt>
   11074:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   11078:	ldrdeq	r0, [r0], -r8
   1107c:	ldr	r0, [pc, #24]	; 1109c <__mempcpy_chk@plt+0x8c>
   11080:	ldr	r3, [pc, #24]	; 110a0 <__mempcpy_chk@plt+0x90>
   11084:	cmp	r3, r0
   11088:	bxeq	lr
   1108c:	ldr	r3, [pc, #16]	; 110a4 <__mempcpy_chk@plt+0x94>
   11090:	cmp	r3, #0
   11094:	bxeq	lr
   11098:	bx	r3
   1109c:	andeq	r6, r2, r0, lsr r1
   110a0:	andeq	r6, r2, r0, lsr r1
   110a4:	andeq	r0, r0, r0
   110a8:	ldr	r0, [pc, #36]	; 110d4 <__mempcpy_chk@plt+0xc4>
   110ac:	ldr	r1, [pc, #36]	; 110d8 <__mempcpy_chk@plt+0xc8>
   110b0:	sub	r1, r1, r0
   110b4:	asr	r1, r1, #2
   110b8:	add	r1, r1, r1, lsr #31
   110bc:	asrs	r1, r1, #1
   110c0:	bxeq	lr
   110c4:	ldr	r3, [pc, #16]	; 110dc <__mempcpy_chk@plt+0xcc>
   110c8:	cmp	r3, #0
   110cc:	bxeq	lr
   110d0:	bx	r3
   110d4:	andeq	r6, r2, r0, lsr r1
   110d8:	andeq	r6, r2, r0, lsr r1
   110dc:	andeq	r0, r0, r0
   110e0:	push	{r4, lr}
   110e4:	ldr	r4, [pc, #24]	; 11104 <__mempcpy_chk@plt+0xf4>
   110e8:	ldrb	r3, [r4]
   110ec:	cmp	r3, #0
   110f0:	popne	{r4, pc}
   110f4:	bl	1107c <__mempcpy_chk@plt+0x6c>
   110f8:	mov	r3, #1
   110fc:	strb	r3, [r4]
   11100:	pop	{r4, pc}
   11104:	andeq	r6, r2, ip, asr #2
   11108:	b	110a8 <__mempcpy_chk@plt+0x98>
   1110c:	push	{fp, lr}
   11110:	mov	fp, sp
   11114:	sub	sp, sp, #56	; 0x38
   11118:	mov	r4, r0
   1111c:	cmp	r0, #0
   11120:	bne	11358 <__mempcpy_chk@plt+0x348>
   11124:	movw	r1, #20763	; 0x511b
   11128:	mov	r0, #0
   1112c:	mov	r2, #5
   11130:	movt	r1, #1
   11134:	bl	10e30 <dcgettext@plt>
   11138:	movw	r5, #24924	; 0x615c
   1113c:	mov	r1, r0
   11140:	mov	r0, #1
   11144:	movt	r5, #2
   11148:	ldr	r2, [r5]
   1114c:	mov	r3, r2
   11150:	bl	10f5c <__printf_chk@plt>
   11154:	movw	r1, #20808	; 0x5148
   11158:	mov	r0, #0
   1115c:	mov	r2, #5
   11160:	movt	r1, #1
   11164:	bl	10e30 <dcgettext@plt>
   11168:	movw	r7, #24900	; 0x6144
   1116c:	movt	r7, #2
   11170:	ldr	r1, [r7]
   11174:	bl	10dc4 <fputs_unlocked@plt>
   11178:	movw	r1, #20848	; 0x5170
   1117c:	mov	r0, #0
   11180:	mov	r2, #5
   11184:	movt	r1, #1
   11188:	bl	10e30 <dcgettext@plt>
   1118c:	ldr	r1, [r7]
   11190:	bl	10dc4 <fputs_unlocked@plt>
   11194:	movw	r1, #20893	; 0x519d
   11198:	mov	r0, #0
   1119c:	mov	r2, #5
   111a0:	movt	r1, #1
   111a4:	bl	10e30 <dcgettext@plt>
   111a8:	ldr	r1, [r7]
   111ac:	bl	10dc4 <fputs_unlocked@plt>
   111b0:	movw	r1, #20947	; 0x51d3
   111b4:	mov	r0, #0
   111b8:	mov	r2, #5
   111bc:	movt	r1, #1
   111c0:	bl	10e30 <dcgettext@plt>
   111c4:	ldr	r2, [r5]
   111c8:	mov	r1, r0
   111cc:	mov	r0, #1
   111d0:	bl	10f5c <__printf_chk@plt>
   111d4:	movw	r1, #21238	; 0x52f6
   111d8:	mov	r0, #0
   111dc:	mov	r2, #5
   111e0:	movt	r1, #1
   111e4:	bl	10e30 <dcgettext@plt>
   111e8:	movw	r5, #21429	; 0x53b5
   111ec:	mov	r1, r0
   111f0:	mov	r0, #1
   111f4:	movt	r5, #1
   111f8:	mov	r2, r5
   111fc:	bl	10f5c <__printf_chk@plt>
   11200:	movw	r0, #22080	; 0x5640
   11204:	mov	r2, #48	; 0x30
   11208:	mov	r6, sp
   1120c:	movt	r0, #1
   11210:	add	r1, r0, #32
   11214:	add	r3, r0, #16
   11218:	vld1.64	{d18-d19}, [r0], r2
   1121c:	vld1.64	{d16-d17}, [r1]
   11220:	vld1.64	{d20-d21}, [r3]
   11224:	vldr	d22, [r0]
   11228:	add	r1, r6, #32
   1122c:	add	r0, r6, #16
   11230:	vst1.64	{d16-d17}, [r1]
   11234:	movw	r1, #21766	; 0x5506
   11238:	vst1.64	{d20-d21}, [r0]
   1123c:	mov	r0, r6
   11240:	movt	r1, #1
   11244:	vst1.64	{d18-d19}, [r0], r2
   11248:	vstr	d22, [r0]
   1124c:	mov	r0, r5
   11250:	bl	10dd0 <strcmp@plt>
   11254:	cmp	r0, #0
   11258:	ldrne	r1, [r6, #8]!
   1125c:	cmpne	r1, #0
   11260:	bne	1124c <__mempcpy_chk@plt+0x23c>
   11264:	movw	r1, #21861	; 0x5565
   11268:	ldr	r6, [r6, #4]
   1126c:	mov	r0, #0
   11270:	mov	r2, #5
   11274:	movt	r1, #1
   11278:	bl	10e30 <dcgettext@plt>
   1127c:	movw	r2, #21475	; 0x53e3
   11280:	movw	r3, #21884	; 0x557c
   11284:	mov	r1, r0
   11288:	mov	r0, #1
   1128c:	movt	r2, #1
   11290:	movt	r3, #1
   11294:	bl	10f5c <__printf_chk@plt>
   11298:	cmp	r6, #0
   1129c:	mov	r0, #5
   112a0:	mov	r1, #0
   112a4:	moveq	r6, r5
   112a8:	bl	10fa4 <setlocale@plt>
   112ac:	cmp	r0, #0
   112b0:	beq	112e8 <__mempcpy_chk@plt+0x2d8>
   112b4:	movw	r1, #21924	; 0x55a4
   112b8:	mov	r2, #3
   112bc:	movt	r1, #1
   112c0:	bl	10fec <strncmp@plt>
   112c4:	cmp	r0, #0
   112c8:	beq	112e8 <__mempcpy_chk@plt+0x2d8>
   112cc:	movw	r1, #21928	; 0x55a8
   112d0:	mov	r0, #0
   112d4:	mov	r2, #5
   112d8:	movt	r1, #1
   112dc:	bl	10e30 <dcgettext@plt>
   112e0:	ldr	r1, [r7]
   112e4:	bl	10dc4 <fputs_unlocked@plt>
   112e8:	movw	r1, #21999	; 0x55ef
   112ec:	mov	r0, #0
   112f0:	mov	r2, #5
   112f4:	movt	r1, #1
   112f8:	bl	10e30 <dcgettext@plt>
   112fc:	movw	r2, #21884	; 0x557c
   11300:	mov	r1, r0
   11304:	mov	r0, #1
   11308:	mov	r3, r5
   1130c:	movt	r2, #1
   11310:	bl	10f5c <__printf_chk@plt>
   11314:	movw	r1, #22026	; 0x560a
   11318:	mov	r0, #0
   1131c:	mov	r2, #5
   11320:	movt	r1, #1
   11324:	bl	10e30 <dcgettext@plt>
   11328:	mov	r1, r0
   1132c:	movw	r0, #21794	; 0x5522
   11330:	movw	r3, #20847	; 0x516f
   11334:	cmp	r6, r5
   11338:	mov	r2, r6
   1133c:	movt	r0, #1
   11340:	movt	r3, #1
   11344:	moveq	r3, r0
   11348:	mov	r0, #1
   1134c:	bl	10f5c <__printf_chk@plt>
   11350:	mov	r0, r4
   11354:	bl	10f14 <exit@plt>
   11358:	movw	r0, #24896	; 0x6140
   1135c:	movw	r1, #20724	; 0x50f4
   11360:	mov	r2, #5
   11364:	movt	r0, #2
   11368:	movt	r1, #1
   1136c:	ldr	r5, [r0]
   11370:	mov	r0, #0
   11374:	bl	10e30 <dcgettext@plt>
   11378:	mov	r2, r0
   1137c:	movw	r0, #24924	; 0x615c
   11380:	mov	r1, #1
   11384:	movt	r0, #2
   11388:	ldr	r3, [r0]
   1138c:	mov	r0, r5
   11390:	bl	10f74 <__fprintf_chk@plt>
   11394:	mov	r0, r4
   11398:	bl	10f14 <exit@plt>
   1139c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113a0:	add	fp, sp, #28
   113a4:	sub	sp, sp, #36	; 0x24
   113a8:	mov	r4, r0
   113ac:	ldr	r0, [r1]
   113b0:	mov	r9, r1
   113b4:	bl	11ed4 <__mempcpy_chk@plt+0xec4>
   113b8:	movw	r1, #20847	; 0x516f
   113bc:	mov	r0, #6
   113c0:	movt	r1, #1
   113c4:	bl	10fa4 <setlocale@plt>
   113c8:	movw	r5, #21479	; 0x53e7
   113cc:	movw	r1, #21435	; 0x53bb
   113d0:	movt	r5, #1
   113d4:	movt	r1, #1
   113d8:	mov	r0, r5
   113dc:	bl	10fc8 <bindtextdomain@plt>
   113e0:	mov	r0, r5
   113e4:	bl	10e54 <textdomain@plt>
   113e8:	movw	r0, #21459	; 0x53d3
   113ec:	movt	r0, #1
   113f0:	bl	10ec0 <getenv@plt>
   113f4:	cmp	r0, #0
   113f8:	movw	r0, #24812	; 0x60ec
   113fc:	mov	sl, #127	; 0x7f
   11400:	movt	r0, #2
   11404:	movweq	sl, #125	; 0x7d
   11408:	str	sl, [r0]
   1140c:	movw	r0, #6412	; 0x190c
   11410:	movt	r0, #1
   11414:	bl	150cc <__mempcpy_chk@plt+0x40bc>
   11418:	movw	r0, #24808	; 0x60e8
   1141c:	movw	r2, #4364	; 0x110c
   11420:	movw	r1, #21489	; 0x53f1
   11424:	movw	r3, #21475	; 0x53e3
   11428:	mov	r5, #0
   1142c:	movt	r0, #2
   11430:	movt	r2, #1
   11434:	movt	r1, #1
   11438:	movt	r3, #1
   1143c:	ldr	r0, [r0]
   11440:	stm	sp, {r0, r5}
   11444:	str	r2, [sp, #8]
   11448:	movw	r2, #21429	; 0x53b5
   1144c:	str	r1, [sp, #12]
   11450:	mov	r0, r4
   11454:	mov	r1, r9
   11458:	str	r5, [sp, #16]
   1145c:	movt	r2, #1
   11460:	bl	11e10 <__mempcpy_chk@plt+0xe00>
   11464:	movw	r0, #24888	; 0x6138
   11468:	movt	r0, #2
   1146c:	ldr	r0, [r0]
   11470:	cmp	r0, r4
   11474:	bge	118c0 <__mempcpy_chk@plt+0x8b0>
   11478:	mov	r0, #0
   1147c:	bl	10fe0 <isatty@plt>
   11480:	mov	r6, r0
   11484:	mov	r0, #1
   11488:	bl	10fe0 <isatty@plt>
   1148c:	mov	r7, r0
   11490:	cmp	r0, #0
   11494:	bne	114ac <__mempcpy_chk@plt+0x49c>
   11498:	bl	10f38 <__errno_location@plt>
   1149c:	ldr	r0, [r0]
   114a0:	sub	r0, r0, #9
   114a4:	clz	r0, r0
   114a8:	lsr	r5, r0, #5
   114ac:	mov	r0, #2
   114b0:	bl	10fe0 <isatty@plt>
   114b4:	mov	r8, r0
   114b8:	cmp	r6, #0
   114bc:	beq	114e8 <__mempcpy_chk@plt+0x4d8>
   114c0:	movw	r1, #21518	; 0x540e
   114c4:	mov	r0, #0
   114c8:	mov	r2, #1
   114cc:	mov	r3, #0
   114d0:	movt	r1, #1
   114d4:	bl	11bd8 <__mempcpy_chk@plt+0xbc8>
   114d8:	cmn	r0, #1
   114dc:	ble	115a0 <__mempcpy_chk@plt+0x590>
   114e0:	orrs	r0, r8, r7
   114e4:	beq	115d4 <__mempcpy_chk@plt+0x5c4>
   114e8:	cmp	r7, #0
   114ec:	str	r6, [sp, #32]
   114f0:	beq	11604 <__mempcpy_chk@plt+0x5f4>
   114f4:	mvn	r0, #384	; 0x180
   114f8:	str	r5, [sp, #28]
   114fc:	bl	10fd4 <umask@plt>
   11500:	movw	r1, #21584	; 0x5450
   11504:	mov	r5, r0
   11508:	mov	r0, #1
   1150c:	movw	r2, #1089	; 0x441
   11510:	mov	r3, #384	; 0x180
   11514:	movt	r1, #1
   11518:	bl	11bd8 <__mempcpy_chk@plt+0xbc8>
   1151c:	mov	r6, r0
   11520:	cmn	r0, #1
   11524:	ble	1164c <__mempcpy_chk@plt+0x63c>
   11528:	str	r9, [sp, #24]
   1152c:	movw	r9, #21584	; 0x5450
   11530:	mov	r4, #0
   11534:	movt	r9, #1
   11538:	mov	r0, r5
   1153c:	bl	10fd4 <umask@plt>
   11540:	ldr	r2, [sp, #32]
   11544:	movw	r0, #21617	; 0x5471
   11548:	movw	r1, #21636	; 0x5484
   1154c:	movt	r0, #1
   11550:	movt	r1, #1
   11554:	cmp	r2, #0
   11558:	mov	r2, #5
   1155c:	movne	r1, r0
   11560:	mov	r0, #0
   11564:	bl	10e30 <dcgettext@plt>
   11568:	mov	r5, r0
   1156c:	mov	r0, #4
   11570:	mov	r1, r9
   11574:	bl	13970 <__mempcpy_chk@plt+0x2960>
   11578:	mov	r3, r0
   1157c:	mov	r0, #0
   11580:	mov	r1, #0
   11584:	mov	r2, r5
   11588:	bl	10ea8 <error@plt>
   1158c:	mov	r0, r4
   11590:	bl	11d38 <__mempcpy_chk@plt+0xd28>
   11594:	ldr	r9, [sp, #24]
   11598:	ldr	r5, [sp, #28]
   1159c:	b	116b8 <__mempcpy_chk@plt+0x6a8>
   115a0:	bl	10f38 <__errno_location@plt>
   115a4:	movw	r1, #21528	; 0x5418
   115a8:	ldr	r4, [r0]
   115ac:	mov	r0, #0
   115b0:	mov	r2, #5
   115b4:	movt	r1, #1
   115b8:	bl	10e30 <dcgettext@plt>
   115bc:	mov	r2, r0
   115c0:	mov	r0, sl
   115c4:	mov	r1, r4
   115c8:	bl	10ea8 <error@plt>
   115cc:	orrs	r0, r8, r7
   115d0:	bne	114e8 <__mempcpy_chk@plt+0x4d8>
   115d4:	movw	r1, #21569	; 0x5441
   115d8:	mov	r0, #0
   115dc:	mov	r2, #5
   115e0:	movt	r1, #1
   115e4:	bl	10e30 <dcgettext@plt>
   115e8:	mov	r2, r0
   115ec:	mov	r0, #0
   115f0:	mov	r1, #0
   115f4:	bl	10ea8 <error@plt>
   115f8:	cmp	r7, #0
   115fc:	str	r6, [sp, #32]
   11600:	bne	114f4 <__mempcpy_chk@plt+0x4e4>
   11604:	cmp	r8, #0
   11608:	mov	r0, r8
   1160c:	mov	r6, #1
   11610:	movwne	r0, #1
   11614:	tst	r5, r0
   11618:	beq	116b8 <__mempcpy_chk@plt+0x6a8>
   1161c:	mvn	r0, #384	; 0x180
   11620:	str	r5, [sp, #28]
   11624:	bl	10fd4 <umask@plt>
   11628:	mov	r5, r0
   1162c:	movw	r0, #21584	; 0x5450
   11630:	movw	r1, #1089	; 0x441
   11634:	mov	r2, #384	; 0x180
   11638:	movt	r0, #1
   1163c:	bl	10eb4 <open64@plt>
   11640:	mov	r6, r0
   11644:	cmn	r0, #1
   11648:	bgt	11528 <__mempcpy_chk@plt+0x518>
   1164c:	bl	10f38 <__errno_location@plt>
   11650:	mov	r4, r0
   11654:	ldr	r6, [r0]
   11658:	movw	r0, #21594	; 0x545a
   1165c:	movt	r0, #1
   11660:	bl	10ec0 <getenv@plt>
   11664:	cmp	r0, #0
   11668:	beq	11808 <__mempcpy_chk@plt+0x7f8>
   1166c:	movw	r1, #21584	; 0x5450
   11670:	mov	r2, #0
   11674:	str	r6, [sp, #20]
   11678:	str	r9, [sp, #24]
   1167c:	movt	r1, #1
   11680:	bl	11c40 <__mempcpy_chk@plt+0xc30>
   11684:	mov	r9, r0
   11688:	cmp	r7, #0
   1168c:	beq	11814 <__mempcpy_chk@plt+0x804>
   11690:	mov	r0, #1
   11694:	mov	r1, r9
   11698:	movw	r2, #1089	; 0x441
   1169c:	mov	r3, #384	; 0x180
   116a0:	bl	11bd8 <__mempcpy_chk@plt+0xbc8>
   116a4:	mov	r6, r0
   116a8:	cmn	r0, #1
   116ac:	ble	11830 <__mempcpy_chk@plt+0x820>
   116b0:	mov	r4, r9
   116b4:	b	11538 <__mempcpy_chk@plt+0x528>
   116b8:	cmp	r8, #0
   116bc:	beq	11734 <__mempcpy_chk@plt+0x724>
   116c0:	mov	r0, #2
   116c4:	movw	r1, #1030	; 0x406
   116c8:	mov	r2, #3
   116cc:	bl	119f8 <__mempcpy_chk@plt+0x9e8>
   116d0:	mov	r4, r0
   116d4:	cmp	r7, #0
   116d8:	bne	11714 <__mempcpy_chk@plt+0x704>
   116dc:	ldr	r2, [sp, #32]
   116e0:	movw	r0, #21659	; 0x549b
   116e4:	movw	r1, #21678	; 0x54ae
   116e8:	movt	r0, #1
   116ec:	movt	r1, #1
   116f0:	cmp	r2, #0
   116f4:	mov	r2, #5
   116f8:	movne	r1, r0
   116fc:	mov	r0, #0
   11700:	bl	10e30 <dcgettext@plt>
   11704:	mov	r2, r0
   11708:	mov	r0, #0
   1170c:	mov	r1, #0
   11710:	bl	10ea8 <error@plt>
   11714:	mov	r0, r6
   11718:	mov	r1, #2
   1171c:	bl	10e3c <dup2@plt>
   11720:	cmn	r0, #1
   11724:	ble	1173c <__mempcpy_chk@plt+0x72c>
   11728:	cmp	r5, #0
   1172c:	bne	11778 <__mempcpy_chk@plt+0x768>
   11730:	b	11780 <__mempcpy_chk@plt+0x770>
   11734:	mov	r4, #2
   11738:	b	11780 <__mempcpy_chk@plt+0x770>
   1173c:	bl	10f38 <__errno_location@plt>
   11740:	movw	r1, #21707	; 0x54cb
   11744:	mov	r7, r5
   11748:	ldr	r5, [r0]
   1174c:	mov	r0, #0
   11750:	mov	r2, #5
   11754:	movt	r1, #1
   11758:	bl	10e30 <dcgettext@plt>
   1175c:	mov	r2, r0
   11760:	mov	r1, r5
   11764:	mov	r0, sl
   11768:	mov	r5, r7
   1176c:	bl	10ea8 <error@plt>
   11770:	cmp	r5, #0
   11774:	beq	11780 <__mempcpy_chk@plt+0x770>
   11778:	mov	r0, r6
   1177c:	bl	11004 <close@plt>
   11780:	movw	r0, #24896	; 0x6140
   11784:	movt	r0, #2
   11788:	ldr	r0, [r0]
   1178c:	ldrb	r0, [r0]
   11790:	tst	r0, #32
   11794:	bne	118b4 <__mempcpy_chk@plt+0x8a4>
   11798:	mov	r0, #1
   1179c:	mov	r1, #1
   117a0:	bl	10e24 <signal@plt>
   117a4:	movw	r0, #24888	; 0x6138
   117a8:	movt	r0, #2
   117ac:	ldr	r0, [r0]
   117b0:	ldr	r0, [r9, r0, lsl #2]!
   117b4:	mov	r1, r9
   117b8:	bl	10e0c <execvp@plt>
   117bc:	bl	10f38 <__errno_location@plt>
   117c0:	ldr	r5, [r0]
   117c4:	mov	r0, r4
   117c8:	mov	r1, #2
   117cc:	mov	sl, #126	; 0x7e
   117d0:	cmp	r5, #2
   117d4:	movweq	sl, #127	; 0x7f
   117d8:	bl	10e3c <dup2@plt>
   117dc:	cmp	r0, #2
   117e0:	bne	118b4 <__mempcpy_chk@plt+0x8a4>
   117e4:	movw	r1, #21741	; 0x54ed
   117e8:	mov	r0, #0
   117ec:	mov	r2, #5
   117f0:	movt	r1, #1
   117f4:	bl	10e30 <dcgettext@plt>
   117f8:	ldr	r1, [r9]
   117fc:	mov	r4, r0
   11800:	mov	r0, #4
   11804:	b	1189c <__mempcpy_chk@plt+0x88c>
   11808:	mov	r9, #0
   1180c:	mov	r5, r6
   11810:	b	11838 <__mempcpy_chk@plt+0x828>
   11814:	mov	r0, r9
   11818:	movw	r1, #1089	; 0x441
   1181c:	mov	r2, #384	; 0x180
   11820:	bl	10eb4 <open64@plt>
   11824:	mov	r6, r0
   11828:	cmn	r0, #1
   1182c:	bgt	116b0 <__mempcpy_chk@plt+0x6a0>
   11830:	ldr	r5, [r4]
   11834:	ldr	r6, [sp, #20]
   11838:	movw	r1, #21599	; 0x545f
   1183c:	mov	r0, #0
   11840:	mov	r2, #5
   11844:	movt	r1, #1
   11848:	bl	10e30 <dcgettext@plt>
   1184c:	movw	r1, #21584	; 0x5450
   11850:	mov	r4, r0
   11854:	mov	r0, #4
   11858:	movt	r1, #1
   1185c:	bl	13970 <__mempcpy_chk@plt+0x2960>
   11860:	mov	r3, r0
   11864:	mov	r0, #0
   11868:	mov	r1, r6
   1186c:	mov	r2, r4
   11870:	bl	10ea8 <error@plt>
   11874:	cmp	r9, #0
   11878:	beq	118b4 <__mempcpy_chk@plt+0x8a4>
   1187c:	movw	r1, #21599	; 0x545f
   11880:	mov	r0, #0
   11884:	mov	r2, #5
   11888:	movt	r1, #1
   1188c:	bl	10e30 <dcgettext@plt>
   11890:	mov	r4, r0
   11894:	mov	r0, #4
   11898:	mov	r1, r9
   1189c:	bl	13970 <__mempcpy_chk@plt+0x2960>
   118a0:	mov	r3, r0
   118a4:	mov	r0, #0
   118a8:	mov	r1, r5
   118ac:	mov	r2, r4
   118b0:	bl	10ea8 <error@plt>
   118b4:	mov	r0, sl
   118b8:	sub	sp, fp, #28
   118bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118c0:	movw	r1, #21502	; 0x53fe
   118c4:	mov	r0, #0
   118c8:	mov	r2, #5
   118cc:	movt	r1, #1
   118d0:	bl	10e30 <dcgettext@plt>
   118d4:	mov	r2, r0
   118d8:	mov	r0, #0
   118dc:	mov	r1, #0
   118e0:	bl	10ea8 <error@plt>
   118e4:	mov	r0, sl
   118e8:	bl	1110c <__mempcpy_chk@plt+0xfc>
   118ec:	movw	r1, #24912	; 0x6150
   118f0:	movt	r1, #2
   118f4:	str	r0, [r1, #4]
   118f8:	bx	lr
   118fc:	movw	r1, #24912	; 0x6150
   11900:	movt	r1, #2
   11904:	strb	r0, [r1]
   11908:	bx	lr
   1190c:	push	{r4, r5, r6, sl, fp, lr}
   11910:	add	fp, sp, #16
   11914:	sub	sp, sp, #8
   11918:	movw	r0, #24900	; 0x6144
   1191c:	movt	r0, #2
   11920:	ldr	r0, [r0]
   11924:	bl	14c60 <__mempcpy_chk@plt+0x3c50>
   11928:	cmp	r0, #0
   1192c:	beq	11954 <__mempcpy_chk@plt+0x944>
   11930:	movw	r5, #24912	; 0x6150
   11934:	movt	r5, #2
   11938:	ldrb	r0, [r5]
   1193c:	cmp	r0, #0
   11940:	beq	11980 <__mempcpy_chk@plt+0x970>
   11944:	bl	10f38 <__errno_location@plt>
   11948:	ldr	r0, [r0]
   1194c:	cmp	r0, #32
   11950:	bne	11980 <__mempcpy_chk@plt+0x970>
   11954:	movw	r0, #24896	; 0x6140
   11958:	movt	r0, #2
   1195c:	ldr	r0, [r0]
   11960:	bl	14c60 <__mempcpy_chk@plt+0x3c50>
   11964:	cmp	r0, #0
   11968:	subeq	sp, fp, #16
   1196c:	popeq	{r4, r5, r6, sl, fp, pc}
   11970:	movw	r0, #24812	; 0x60ec
   11974:	movt	r0, #2
   11978:	ldr	r0, [r0]
   1197c:	bl	10df4 <_exit@plt>
   11980:	movw	r1, #22151	; 0x5687
   11984:	mov	r0, #0
   11988:	mov	r2, #5
   1198c:	movt	r1, #1
   11990:	bl	10e30 <dcgettext@plt>
   11994:	ldr	r6, [r5, #4]
   11998:	mov	r4, r0
   1199c:	bl	10f38 <__errno_location@plt>
   119a0:	ldr	r5, [r0]
   119a4:	cmp	r6, #0
   119a8:	bne	119c4 <__mempcpy_chk@plt+0x9b4>
   119ac:	movw	r2, #22167	; 0x5697
   119b0:	mov	r0, #0
   119b4:	mov	r1, r5
   119b8:	mov	r3, r4
   119bc:	movt	r2, #1
   119c0:	b	119e4 <__mempcpy_chk@plt+0x9d4>
   119c4:	mov	r0, r6
   119c8:	bl	13b10 <__mempcpy_chk@plt+0x2b00>
   119cc:	movw	r2, #22163	; 0x5693
   119d0:	mov	r3, r0
   119d4:	str	r4, [sp]
   119d8:	mov	r0, #0
   119dc:	mov	r1, r5
   119e0:	movt	r2, #1
   119e4:	bl	10ea8 <error@plt>
   119e8:	movw	r0, #24812	; 0x60ec
   119ec:	movt	r0, #2
   119f0:	ldr	r0, [r0]
   119f4:	bl	10df4 <_exit@plt>
   119f8:	sub	sp, sp, #8
   119fc:	push	{r4, r5, r6, r7, fp, lr}
   11a00:	add	fp, sp, #16
   11a04:	sub	sp, sp, #8
   11a08:	mov	r5, r0
   11a0c:	add	r0, fp, #8
   11a10:	cmp	r1, #11
   11a14:	str	r2, [fp, #8]
   11a18:	str	r3, [fp, #12]
   11a1c:	str	r0, [sp, #4]
   11a20:	bhi	11a5c <__mempcpy_chk@plt+0xa4c>
   11a24:	mov	r0, #1
   11a28:	movw	r2, #1300	; 0x514
   11a2c:	tst	r2, r0, lsl r1
   11a30:	bne	11b1c <__mempcpy_chk@plt+0xb0c>
   11a34:	movw	r2, #2570	; 0xa0a
   11a38:	tst	r2, r0, lsl r1
   11a3c:	bne	11a84 <__mempcpy_chk@plt+0xa74>
   11a40:	cmp	r1, #0
   11a44:	bne	11a5c <__mempcpy_chk@plt+0xa4c>
   11a48:	ldr	r0, [sp, #4]
   11a4c:	add	r1, r0, #4
   11a50:	str	r1, [sp, #4]
   11a54:	mov	r1, #0
   11a58:	b	11b28 <__mempcpy_chk@plt+0xb18>
   11a5c:	sub	r0, r1, #1024	; 0x400
   11a60:	cmp	r0, #10
   11a64:	bhi	11b1c <__mempcpy_chk@plt+0xb0c>
   11a68:	mov	r2, #1
   11a6c:	movw	r3, #645	; 0x285
   11a70:	tst	r3, r2, lsl r0
   11a74:	bne	11b1c <__mempcpy_chk@plt+0xb0c>
   11a78:	movw	r3, #1282	; 0x502
   11a7c:	tst	r3, r2, lsl r0
   11a80:	beq	11a90 <__mempcpy_chk@plt+0xa80>
   11a84:	mov	r0, r5
   11a88:	bl	10f98 <fcntl64@plt>
   11a8c:	b	11b34 <__mempcpy_chk@plt+0xb24>
   11a90:	cmp	r0, #6
   11a94:	bne	11b1c <__mempcpy_chk@plt+0xb0c>
   11a98:	ldr	r0, [sp, #4]
   11a9c:	movw	r7, #24920	; 0x6158
   11aa0:	movt	r7, #2
   11aa4:	add	r1, r0, #4
   11aa8:	str	r1, [sp, #4]
   11aac:	ldr	r6, [r0]
   11ab0:	ldr	r0, [r7]
   11ab4:	cmp	r0, #0
   11ab8:	bmi	11b58 <__mempcpy_chk@plt+0xb48>
   11abc:	mov	r0, r5
   11ac0:	movw	r1, #1030	; 0x406
   11ac4:	mov	r2, r6
   11ac8:	bl	10f98 <fcntl64@plt>
   11acc:	mov	r4, r0
   11ad0:	cmn	r0, #1
   11ad4:	bgt	11b4c <__mempcpy_chk@plt+0xb3c>
   11ad8:	bl	10f38 <__errno_location@plt>
   11adc:	ldr	r0, [r0]
   11ae0:	cmp	r0, #22
   11ae4:	bne	11b4c <__mempcpy_chk@plt+0xb3c>
   11ae8:	mov	r0, r5
   11aec:	mov	r1, #0
   11af0:	mov	r2, r6
   11af4:	bl	10f98 <fcntl64@plt>
   11af8:	mov	r4, r0
   11afc:	cmp	r0, #0
   11b00:	bmi	11b38 <__mempcpy_chk@plt+0xb28>
   11b04:	mvn	r0, #0
   11b08:	str	r0, [r7]
   11b0c:	mov	r0, #1
   11b10:	cmp	r0, #0
   11b14:	bne	11b84 <__mempcpy_chk@plt+0xb74>
   11b18:	b	11b38 <__mempcpy_chk@plt+0xb28>
   11b1c:	ldr	r0, [sp, #4]
   11b20:	add	r2, r0, #4
   11b24:	str	r2, [sp, #4]
   11b28:	ldr	r2, [r0]
   11b2c:	mov	r0, r5
   11b30:	bl	10f98 <fcntl64@plt>
   11b34:	mov	r4, r0
   11b38:	mov	r0, r4
   11b3c:	sub	sp, fp, #16
   11b40:	pop	{r4, r5, r6, r7, fp, lr}
   11b44:	add	sp, sp, #8
   11b48:	bx	lr
   11b4c:	mov	r0, #1
   11b50:	str	r0, [r7]
   11b54:	b	11b38 <__mempcpy_chk@plt+0xb28>
   11b58:	mov	r0, r5
   11b5c:	mov	r1, #0
   11b60:	mov	r2, r6
   11b64:	bl	10f98 <fcntl64@plt>
   11b68:	mov	r4, r0
   11b6c:	ldr	r0, [r7]
   11b70:	add	r0, r0, #1
   11b74:	clz	r0, r0
   11b78:	lsr	r0, r0, #5
   11b7c:	cmp	r0, #0
   11b80:	beq	11b38 <__mempcpy_chk@plt+0xb28>
   11b84:	cmp	r4, #0
   11b88:	bmi	11b38 <__mempcpy_chk@plt+0xb28>
   11b8c:	mov	r0, r4
   11b90:	mov	r1, #1
   11b94:	bl	10f98 <fcntl64@plt>
   11b98:	cmp	r0, #0
   11b9c:	bmi	11bb8 <__mempcpy_chk@plt+0xba8>
   11ba0:	orr	r2, r0, #1
   11ba4:	mov	r0, r4
   11ba8:	mov	r1, #2
   11bac:	bl	10f98 <fcntl64@plt>
   11bb0:	cmn	r0, #1
   11bb4:	bne	11b38 <__mempcpy_chk@plt+0xb28>
   11bb8:	bl	10f38 <__errno_location@plt>
   11bbc:	ldr	r6, [r0]
   11bc0:	mov	r5, r0
   11bc4:	mov	r0, r4
   11bc8:	bl	11004 <close@plt>
   11bcc:	str	r6, [r5]
   11bd0:	mvn	r4, #0
   11bd4:	b	11b38 <__mempcpy_chk@plt+0xb28>
   11bd8:	push	{r4, r5, r6, r7, fp, lr}
   11bdc:	add	fp, sp, #16
   11be0:	mov	r5, r0
   11be4:	mov	r0, r1
   11be8:	mov	r1, r2
   11bec:	mov	r2, r3
   11bf0:	bl	10eb4 <open64@plt>
   11bf4:	mov	r4, r0
   11bf8:	cmp	r0, r5
   11bfc:	beq	11c38 <__mempcpy_chk@plt+0xc28>
   11c00:	cmp	r4, #0
   11c04:	bmi	11c38 <__mempcpy_chk@plt+0xc28>
   11c08:	mov	r0, r4
   11c0c:	mov	r1, r5
   11c10:	bl	10e3c <dup2@plt>
   11c14:	mov	r5, r0
   11c18:	bl	10f38 <__errno_location@plt>
   11c1c:	ldr	r7, [r0]
   11c20:	mov	r6, r0
   11c24:	mov	r0, r4
   11c28:	bl	11004 <close@plt>
   11c2c:	mov	r0, r5
   11c30:	str	r7, [r6]
   11c34:	pop	{r4, r5, r6, r7, fp, pc}
   11c38:	mov	r0, r4
   11c3c:	pop	{r4, r5, r6, r7, fp, pc}
   11c40:	push	{fp, lr}
   11c44:	mov	fp, sp
   11c48:	bl	11c58 <__mempcpy_chk@plt+0xc48>
   11c4c:	cmp	r0, #0
   11c50:	popne	{fp, pc}
   11c54:	bl	14aac <__mempcpy_chk@plt+0x3a9c>
   11c58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c5c:	add	fp, sp, #28
   11c60:	push	{r2}		; (str r2, [sp, #-4]!)
   11c64:	mov	sl, r1
   11c68:	mov	r7, r0
   11c6c:	bl	14bc8 <__mempcpy_chk@plt+0x3bb8>
   11c70:	sub	r4, r0, r7
   11c74:	bl	14c28 <__mempcpy_chk@plt+0x3c18>
   11c78:	mov	r6, r0
   11c7c:	add	r5, r4, r0
   11c80:	mov	r0, sl
   11c84:	bl	10f2c <strlen@plt>
   11c88:	mov	r9, r0
   11c8c:	cmp	r6, #0
   11c90:	beq	11cb8 <__mempcpy_chk@plt+0xca8>
   11c94:	add	r0, r5, r7
   11c98:	mov	r4, #0
   11c9c:	ldrb	r0, [r0, #-1]
   11ca0:	cmp	r0, #47	; 0x2f
   11ca4:	beq	11cc8 <__mempcpy_chk@plt+0xcb8>
   11ca8:	ldrb	r0, [sl]
   11cac:	subs	r4, r0, #47	; 0x2f
   11cb0:	movwne	r4, #47	; 0x2f
   11cb4:	b	11cc8 <__mempcpy_chk@plt+0xcb8>
   11cb8:	ldrb	r0, [sl]
   11cbc:	mov	r4, #0
   11cc0:	cmp	r0, #47	; 0x2f
   11cc4:	movweq	r4, #46	; 0x2e
   11cc8:	uxtb	r8, r4
   11ccc:	add	r0, r9, r5
   11cd0:	cmp	r8, #0
   11cd4:	movwne	r8, #1
   11cd8:	add	r0, r0, r8
   11cdc:	add	r0, r0, #1
   11ce0:	bl	14b44 <__mempcpy_chk@plt+0x3b34>
   11ce4:	mov	r6, r0
   11ce8:	cmp	r0, #0
   11cec:	beq	11d2c <__mempcpy_chk@plt+0xd1c>
   11cf0:	mov	r0, r6
   11cf4:	mov	r1, r7
   11cf8:	mov	r2, r5
   11cfc:	mvn	r3, #0
   11d00:	bl	11010 <__mempcpy_chk@plt>
   11d04:	ldr	r1, [sp]
   11d08:	strb	r4, [r0], r8
   11d0c:	mov	r2, r9
   11d10:	mvn	r3, #0
   11d14:	cmp	r1, #0
   11d18:	strne	r0, [r1]
   11d1c:	mov	r1, sl
   11d20:	bl	11010 <__mempcpy_chk@plt>
   11d24:	mov	r1, #0
   11d28:	strb	r1, [r0]
   11d2c:	mov	r0, r6
   11d30:	sub	sp, fp, #28
   11d34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d38:	push	{r4, r5, r6, sl, fp, lr}
   11d3c:	add	fp, sp, #16
   11d40:	mov	r4, r0
   11d44:	bl	10f38 <__errno_location@plt>
   11d48:	ldr	r6, [r0]
   11d4c:	mov	r5, r0
   11d50:	mov	r0, r4
   11d54:	bl	10de8 <free@plt>
   11d58:	str	r6, [r5]
   11d5c:	pop	{r4, r5, r6, sl, fp, pc}
   11d60:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11d64:	add	fp, sp, #24
   11d68:	sub	sp, sp, #8
   11d6c:	movw	r6, #24904	; 0x6148
   11d70:	mov	r4, #0
   11d74:	cmp	r0, #2
   11d78:	movt	r6, #2
   11d7c:	ldr	r7, [r6]
   11d80:	str	r4, [r6]
   11d84:	bne	11df8 <__mempcpy_chk@plt+0xde8>
   11d88:	mov	r8, r3
   11d8c:	movw	r3, #22188	; 0x56ac
   11d90:	mov	r5, r2
   11d94:	movw	r2, #22170	; 0x569a
   11d98:	mov	r0, #2
   11d9c:	str	r4, [sp]
   11da0:	movt	r2, #1
   11da4:	movt	r3, #1
   11da8:	bl	10efc <getopt_long@plt>
   11dac:	cmp	r0, #104	; 0x68
   11db0:	beq	11dec <__mempcpy_chk@plt+0xddc>
   11db4:	cmp	r0, #118	; 0x76
   11db8:	bne	11df8 <__mempcpy_chk@plt+0xde8>
   11dbc:	movw	r0, #24900	; 0x6144
   11dc0:	ldr	r3, [fp, #8]
   11dc4:	add	r1, fp, #16
   11dc8:	mov	r2, r8
   11dcc:	movt	r0, #2
   11dd0:	str	r1, [sp, #4]
   11dd4:	str	r1, [sp]
   11dd8:	mov	r1, r5
   11ddc:	ldr	r0, [r0]
   11de0:	bl	14228 <__mempcpy_chk@plt+0x3218>
   11de4:	mov	r0, #0
   11de8:	bl	10f14 <exit@plt>
   11dec:	ldr	r1, [fp, #12]
   11df0:	mov	r0, #0
   11df4:	blx	r1
   11df8:	movw	r0, #24888	; 0x6138
   11dfc:	str	r7, [r6]
   11e00:	movt	r0, #2
   11e04:	str	r4, [r0]
   11e08:	sub	sp, fp, #24
   11e0c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11e10:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11e14:	add	fp, sp, #24
   11e18:	sub	sp, sp, #8
   11e1c:	mov	r8, r3
   11e20:	ldr	r3, [fp, #12]
   11e24:	movw	r7, #24904	; 0x6148
   11e28:	movw	r5, #20847	; 0x516f
   11e2c:	mov	r9, r2
   11e30:	mov	r2, #1
   11e34:	mov	r6, #0
   11e38:	movt	r7, #2
   11e3c:	movt	r5, #1
   11e40:	str	r6, [sp]
   11e44:	ldr	r4, [r7]
   11e48:	str	r2, [r7]
   11e4c:	movw	r2, #22170	; 0x569a
   11e50:	cmp	r3, #0
   11e54:	movw	r3, #22188	; 0x56ac
   11e58:	movt	r2, #1
   11e5c:	movt	r3, #1
   11e60:	movne	r2, r5
   11e64:	bl	10efc <getopt_long@plt>
   11e68:	cmn	r0, #1
   11e6c:	beq	11e98 <__mempcpy_chk@plt+0xe88>
   11e70:	cmp	r0, #104	; 0x68
   11e74:	beq	11e8c <__mempcpy_chk@plt+0xe7c>
   11e78:	cmp	r0, #118	; 0x76
   11e7c:	beq	11ea4 <__mempcpy_chk@plt+0xe94>
   11e80:	movw	r0, #24812	; 0x60ec
   11e84:	movt	r0, #2
   11e88:	ldr	r6, [r0]
   11e8c:	ldr	r1, [fp, #16]
   11e90:	mov	r0, r6
   11e94:	blx	r1
   11e98:	str	r4, [r7]
   11e9c:	sub	sp, fp, #24
   11ea0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11ea4:	movw	r0, #24900	; 0x6144
   11ea8:	ldr	r3, [fp, #8]
   11eac:	add	r1, fp, #20
   11eb0:	mov	r2, r8
   11eb4:	movt	r0, #2
   11eb8:	str	r1, [sp, #4]
   11ebc:	str	r1, [sp]
   11ec0:	mov	r1, r9
   11ec4:	ldr	r0, [r0]
   11ec8:	bl	14228 <__mempcpy_chk@plt+0x3218>
   11ecc:	mov	r0, #0
   11ed0:	bl	10f14 <exit@plt>
   11ed4:	push	{r4, r5, fp, lr}
   11ed8:	add	fp, sp, #8
   11edc:	cmp	r0, #0
   11ee0:	beq	11f74 <__mempcpy_chk@plt+0xf64>
   11ee4:	mov	r1, #47	; 0x2f
   11ee8:	mov	r4, r0
   11eec:	bl	10fb0 <strrchr@plt>
   11ef0:	cmp	r0, #0
   11ef4:	mov	r5, r4
   11ef8:	addne	r5, r0, #1
   11efc:	sub	r0, r5, r4
   11f00:	cmp	r0, #7
   11f04:	blt	11f58 <__mempcpy_chk@plt+0xf48>
   11f08:	movw	r1, #22292	; 0x5714
   11f0c:	sub	r0, r5, #7
   11f10:	mov	r2, #7
   11f14:	movt	r1, #1
   11f18:	bl	10fec <strncmp@plt>
   11f1c:	cmp	r0, #0
   11f20:	bne	11f58 <__mempcpy_chk@plt+0xf48>
   11f24:	movw	r1, #22300	; 0x571c
   11f28:	mov	r0, r5
   11f2c:	mov	r2, #3
   11f30:	movt	r1, #1
   11f34:	bl	10fec <strncmp@plt>
   11f38:	cmp	r0, #0
   11f3c:	beq	11f48 <__mempcpy_chk@plt+0xf38>
   11f40:	mov	r4, r5
   11f44:	b	11f58 <__mempcpy_chk@plt+0xf48>
   11f48:	movw	r0, #24880	; 0x6130
   11f4c:	add	r4, r5, #3
   11f50:	movt	r0, #2
   11f54:	str	r4, [r0]
   11f58:	movw	r0, #24884	; 0x6134
   11f5c:	movt	r0, #2
   11f60:	str	r4, [r0]
   11f64:	movw	r0, #24924	; 0x615c
   11f68:	movt	r0, #2
   11f6c:	str	r4, [r0]
   11f70:	pop	{r4, r5, fp, pc}
   11f74:	movw	r0, #24896	; 0x6140
   11f78:	mov	r1, #55	; 0x37
   11f7c:	mov	r2, #1
   11f80:	movt	r0, #2
   11f84:	ldr	r3, [r0]
   11f88:	movw	r0, #22236	; 0x56dc
   11f8c:	movt	r0, #1
   11f90:	bl	10e6c <fwrite@plt>
   11f94:	bl	10ff8 <abort@plt>
   11f98:	push	{r4, r5, r6, sl, fp, lr}
   11f9c:	add	fp, sp, #16
   11fa0:	mov	r4, r0
   11fa4:	movw	r0, #24928	; 0x6160
   11fa8:	movt	r0, #2
   11fac:	cmp	r4, #0
   11fb0:	moveq	r4, r0
   11fb4:	bl	10f38 <__errno_location@plt>
   11fb8:	ldr	r6, [r0]
   11fbc:	mov	r5, r0
   11fc0:	mov	r0, r4
   11fc4:	mov	r1, #48	; 0x30
   11fc8:	bl	149d0 <__mempcpy_chk@plt+0x39c0>
   11fcc:	str	r6, [r5]
   11fd0:	pop	{r4, r5, r6, sl, fp, pc}
   11fd4:	movw	r1, #24928	; 0x6160
   11fd8:	cmp	r0, #0
   11fdc:	movt	r1, #2
   11fe0:	movne	r1, r0
   11fe4:	ldr	r0, [r1]
   11fe8:	bx	lr
   11fec:	movw	r2, #24928	; 0x6160
   11ff0:	cmp	r0, #0
   11ff4:	movt	r2, #2
   11ff8:	movne	r2, r0
   11ffc:	str	r1, [r2]
   12000:	bx	lr
   12004:	movw	r3, #24928	; 0x6160
   12008:	cmp	r0, #0
   1200c:	and	r2, r2, #1
   12010:	movt	r3, #2
   12014:	movne	r3, r0
   12018:	ubfx	r0, r1, #5, #3
   1201c:	and	r1, r1, #31
   12020:	add	ip, r3, r0, lsl #2
   12024:	mov	r0, #1
   12028:	ldr	r3, [ip, #8]
   1202c:	and	r0, r0, r3, lsr r1
   12030:	eor	r2, r0, r2
   12034:	eor	r1, r3, r2, lsl r1
   12038:	str	r1, [ip, #8]
   1203c:	bx	lr
   12040:	movw	r2, #24928	; 0x6160
   12044:	cmp	r0, #0
   12048:	movt	r2, #2
   1204c:	movne	r2, r0
   12050:	ldr	r0, [r2, #4]
   12054:	str	r1, [r2, #4]
   12058:	bx	lr
   1205c:	push	{fp, lr}
   12060:	mov	fp, sp
   12064:	movw	r3, #24928	; 0x6160
   12068:	cmp	r0, #0
   1206c:	movt	r3, #2
   12070:	movne	r3, r0
   12074:	cmp	r1, #0
   12078:	mov	r0, #10
   1207c:	cmpne	r2, #0
   12080:	str	r0, [r3]
   12084:	bne	1208c <__mempcpy_chk@plt+0x107c>
   12088:	bl	10ff8 <abort@plt>
   1208c:	str	r1, [r3, #40]	; 0x28
   12090:	str	r2, [r3, #44]	; 0x2c
   12094:	pop	{fp, pc}
   12098:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1209c:	add	fp, sp, #28
   120a0:	sub	sp, sp, #20
   120a4:	mov	r7, r0
   120a8:	ldr	r0, [fp, #8]
   120ac:	movw	r5, #24928	; 0x6160
   120b0:	mov	r8, r3
   120b4:	mov	r9, r2
   120b8:	mov	sl, r1
   120bc:	movt	r5, #2
   120c0:	cmp	r0, #0
   120c4:	movne	r5, r0
   120c8:	bl	10f38 <__errno_location@plt>
   120cc:	ldr	r2, [r5, #40]	; 0x28
   120d0:	ldr	r3, [r5, #44]	; 0x2c
   120d4:	mov	r4, r0
   120d8:	ldm	r5, {r0, r1}
   120dc:	add	r5, r5, #8
   120e0:	ldr	r6, [r4]
   120e4:	stm	sp, {r0, r1, r5}
   120e8:	mov	r0, r7
   120ec:	mov	r1, sl
   120f0:	str	r2, [sp, #12]
   120f4:	str	r3, [sp, #16]
   120f8:	mov	r2, r9
   120fc:	mov	r3, r8
   12100:	bl	12110 <__mempcpy_chk@plt+0x1100>
   12104:	str	r6, [r4]
   12108:	sub	sp, fp, #28
   1210c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12110:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12114:	add	fp, sp, #28
   12118:	sub	sp, sp, #156	; 0x9c
   1211c:	str	r0, [fp, #-84]	; 0xffffffac
   12120:	add	r0, r2, #1
   12124:	mov	r6, r1
   12128:	mov	r7, r3
   1212c:	str	r2, [fp, #-80]	; 0xffffffb0
   12130:	str	r0, [sp, #80]	; 0x50
   12134:	ldr	r0, [fp, #12]
   12138:	and	r1, r0, #1
   1213c:	str	r1, [sp, #36]	; 0x24
   12140:	and	r1, r0, #4
   12144:	str	r1, [sp, #32]
   12148:	ubfx	r8, r0, #1, #1
   1214c:	bl	10e84 <__ctype_get_mb_cur_max@plt>
   12150:	str	r0, [sp, #40]	; 0x28
   12154:	ldr	r0, [fp, #24]
   12158:	ldr	r4, [fp, #8]
   1215c:	mov	r1, #0
   12160:	str	r1, [fp, #-52]	; 0xffffffcc
   12164:	mov	r1, #0
   12168:	str	r1, [sp, #60]	; 0x3c
   1216c:	mov	r1, #1
   12170:	str	r1, [sp, #84]	; 0x54
   12174:	str	r0, [sp, #76]	; 0x4c
   12178:	ldr	r0, [fp, #20]
   1217c:	str	r0, [sp, #72]	; 0x48
   12180:	mov	r0, #0
   12184:	str	r0, [sp, #56]	; 0x38
   12188:	mov	r0, #0
   1218c:	str	r0, [fp, #-88]	; 0xffffffa8
   12190:	mov	r0, #0
   12194:	str	r0, [fp, #-72]	; 0xffffffb8
   12198:	mov	r0, #0
   1219c:	cmp	r4, #10
   121a0:	bhi	134bc <__mempcpy_chk@plt+0x24ac>
   121a4:	add	r1, pc, #24
   121a8:	ldr	ip, [fp, #-84]	; 0xffffffac
   121ac:	ldr	lr, [fp, #-80]	; 0xffffffb0
   121b0:	mov	r5, r6
   121b4:	mov	r9, #0
   121b8:	mov	r2, #1
   121bc:	mov	r3, #0
   121c0:	ldr	pc, [r1, r4, lsl #2]
   121c4:	andeq	r2, r1, ip, lsl #5
   121c8:	andeq	r2, r1, r8, asr #5
   121cc:	muleq	r1, ip, r2
   121d0:	andeq	r2, r1, r4, lsl #5
   121d4:			; <UNDEFINED> instruction: 0x000122bc
   121d8:	andeq	r2, r1, r0, lsr #6
   121dc:	andeq	r2, r1, ip, lsr #5
   121e0:	muleq	r1, r8, r5
   121e4:	strdeq	r2, [r1], -r0
   121e8:	strdeq	r2, [r1], -r0
   121ec:	andeq	r2, r1, r8, lsr #8
   121f0:	movw	r6, #22384	; 0x5770
   121f4:	mov	r0, #0
   121f8:	mov	r2, #5
   121fc:	movt	r6, #1
   12200:	mov	r1, r6
   12204:	bl	10e30 <dcgettext@plt>
   12208:	cmp	r0, r6
   1220c:	str	r0, [sp, #72]	; 0x48
   12210:	bne	12400 <__mempcpy_chk@plt+0x13f0>
   12214:	bl	14e84 <__mempcpy_chk@plt+0x3e74>
   12218:	ldrb	r1, [r0]
   1221c:	and	r1, r1, #223	; 0xdf
   12220:	cmp	r1, #71	; 0x47
   12224:	beq	12380 <__mempcpy_chk@plt+0x1370>
   12228:	cmp	r1, #85	; 0x55
   1222c:	bne	123e4 <__mempcpy_chk@plt+0x13d4>
   12230:	ldrb	r1, [r0, #1]
   12234:	and	r1, r1, #223	; 0xdf
   12238:	cmp	r1, #84	; 0x54
   1223c:	bne	123e4 <__mempcpy_chk@plt+0x13d4>
   12240:	ldrb	r1, [r0, #2]
   12244:	and	r1, r1, #223	; 0xdf
   12248:	cmp	r1, #70	; 0x46
   1224c:	bne	123e4 <__mempcpy_chk@plt+0x13d4>
   12250:	ldrb	r1, [r0, #3]
   12254:	cmp	r1, #45	; 0x2d
   12258:	bne	123e4 <__mempcpy_chk@plt+0x13d4>
   1225c:	ldrb	r1, [r0, #4]
   12260:	cmp	r1, #56	; 0x38
   12264:	bne	123e4 <__mempcpy_chk@plt+0x13d4>
   12268:	ldrb	r0, [r0, #5]
   1226c:	cmp	r0, #0
   12270:	movw	r0, #22388	; 0x5774
   12274:	movt	r0, #1
   12278:	str	r0, [sp, #72]	; 0x48
   1227c:	bne	123e4 <__mempcpy_chk@plt+0x13d4>
   12280:	b	12400 <__mempcpy_chk@plt+0x13f0>
   12284:	mov	r0, #1
   12288:	b	122c8 <__mempcpy_chk@plt+0x12b8>
   1228c:	mov	r4, #0
   12290:	mov	r9, #0
   12294:	mov	r2, r0
   12298:	b	12318 <__mempcpy_chk@plt+0x1308>
   1229c:	tst	r8, #1
   122a0:	bne	122c8 <__mempcpy_chk@plt+0x12b8>
   122a4:	mov	r2, r0
   122a8:	b	122f0 <__mempcpy_chk@plt+0x12e0>
   122ac:	mov	r0, #1
   122b0:	mov	r9, #0
   122b4:	mov	r4, #5
   122b8:	b	12334 <__mempcpy_chk@plt+0x1324>
   122bc:	mov	r2, #1
   122c0:	tst	r8, #1
   122c4:	beq	122f0 <__mempcpy_chk@plt+0x12e0>
   122c8:	mov	r1, #1
   122cc:	mov	r9, #0
   122d0:	mov	r4, #2
   122d4:	mov	r2, r0
   122d8:	mov	r3, #1
   122dc:	str	r1, [fp, #-72]	; 0xffffffb8
   122e0:	movw	r1, #22386	; 0x5772
   122e4:	movt	r1, #1
   122e8:	str	r1, [fp, #-88]	; 0xffffffa8
   122ec:	b	12598 <__mempcpy_chk@plt+0x1588>
   122f0:	cmp	r5, #0
   122f4:	mov	r9, #1
   122f8:	mov	r4, #2
   122fc:	movne	r0, #39	; 0x27
   12300:	strbne	r0, [ip]
   12304:	movw	r0, #22386	; 0x5772
   12308:	movt	r0, #1
   1230c:	str	r0, [fp, #-88]	; 0xffffffa8
   12310:	mov	r0, #1
   12314:	str	r0, [fp, #-72]	; 0xffffffb8
   12318:	mov	r3, #0
   1231c:	b	12598 <__mempcpy_chk@plt+0x1588>
   12320:	mov	r4, #5
   12324:	tst	r8, #1
   12328:	beq	12350 <__mempcpy_chk@plt+0x1340>
   1232c:	mov	r0, #1
   12330:	mov	r9, #0
   12334:	str	r0, [fp, #-72]	; 0xffffffb8
   12338:	movw	r0, #22382	; 0x576e
   1233c:	mov	r2, #1
   12340:	mov	r3, #1
   12344:	movt	r0, #1
   12348:	str	r0, [fp, #-88]	; 0xffffffa8
   1234c:	b	12598 <__mempcpy_chk@plt+0x1588>
   12350:	cmp	r5, #0
   12354:	mov	r3, #0
   12358:	mov	r9, #1
   1235c:	mov	r2, #1
   12360:	movne	r0, #34	; 0x22
   12364:	strbne	r0, [ip]
   12368:	movw	r0, #22382	; 0x576e
   1236c:	movt	r0, #1
   12370:	str	r0, [fp, #-88]	; 0xffffffa8
   12374:	mov	r0, #1
   12378:	str	r0, [fp, #-72]	; 0xffffffb8
   1237c:	b	12598 <__mempcpy_chk@plt+0x1588>
   12380:	ldrb	r1, [r0, #1]
   12384:	and	r1, r1, #223	; 0xdf
   12388:	cmp	r1, #66	; 0x42
   1238c:	bne	123e4 <__mempcpy_chk@plt+0x13d4>
   12390:	ldrb	r1, [r0, #2]
   12394:	cmp	r1, #49	; 0x31
   12398:	bne	123e4 <__mempcpy_chk@plt+0x13d4>
   1239c:	ldrb	r1, [r0, #3]
   123a0:	cmp	r1, #56	; 0x38
   123a4:	bne	123e4 <__mempcpy_chk@plt+0x13d4>
   123a8:	ldrb	r1, [r0, #4]
   123ac:	cmp	r1, #48	; 0x30
   123b0:	bne	123e4 <__mempcpy_chk@plt+0x13d4>
   123b4:	ldrb	r1, [r0, #5]
   123b8:	cmp	r1, #51	; 0x33
   123bc:	bne	123e4 <__mempcpy_chk@plt+0x13d4>
   123c0:	ldrb	r1, [r0, #6]
   123c4:	cmp	r1, #48	; 0x30
   123c8:	bne	123e4 <__mempcpy_chk@plt+0x13d4>
   123cc:	ldrb	r0, [r0, #7]
   123d0:	cmp	r0, #0
   123d4:	movw	r0, #22396	; 0x577c
   123d8:	movt	r0, #1
   123dc:	str	r0, [sp, #72]	; 0x48
   123e0:	beq	12400 <__mempcpy_chk@plt+0x13f0>
   123e4:	movw	r1, #22382	; 0x576e
   123e8:	movw	r0, #22386	; 0x5772
   123ec:	cmp	r4, #9
   123f0:	movt	r1, #1
   123f4:	movt	r0, #1
   123f8:	moveq	r0, r1
   123fc:	str	r0, [sp, #72]	; 0x48
   12400:	movw	r6, #22386	; 0x5772
   12404:	mov	r0, #0
   12408:	mov	r2, #5
   1240c:	movt	r6, #1
   12410:	mov	r1, r6
   12414:	bl	10e30 <dcgettext@plt>
   12418:	cmp	r0, r6
   1241c:	str	r0, [sp, #76]	; 0x4c
   12420:	beq	1246c <__mempcpy_chk@plt+0x145c>
   12424:	ldr	ip, [fp, #-84]	; 0xffffffac
   12428:	mov	r9, #0
   1242c:	tst	r8, #1
   12430:	bne	12574 <__mempcpy_chk@plt+0x1564>
   12434:	ldr	r0, [sp, #72]	; 0x48
   12438:	ldrb	r0, [r0]
   1243c:	cmp	r0, #0
   12440:	beq	12574 <__mempcpy_chk@plt+0x1564>
   12444:	ldr	r1, [sp, #72]	; 0x48
   12448:	mov	r9, #0
   1244c:	add	r1, r1, #1
   12450:	cmp	r9, r5
   12454:	strbcc	r0, [ip, r9]
   12458:	ldrb	r0, [r1, r9]
   1245c:	add	r9, r9, #1
   12460:	cmp	r0, #0
   12464:	bne	12450 <__mempcpy_chk@plt+0x1440>
   12468:	b	12574 <__mempcpy_chk@plt+0x1564>
   1246c:	bl	14e84 <__mempcpy_chk@plt+0x3e74>
   12470:	ldrb	r1, [r0]
   12474:	and	r1, r1, #223	; 0xdf
   12478:	cmp	r1, #71	; 0x47
   1247c:	beq	124ec <__mempcpy_chk@plt+0x14dc>
   12480:	ldr	ip, [fp, #-84]	; 0xffffffac
   12484:	cmp	r1, #85	; 0x55
   12488:	bne	12548 <__mempcpy_chk@plt+0x1538>
   1248c:	ldrb	r1, [r0, #1]
   12490:	and	r1, r1, #223	; 0xdf
   12494:	cmp	r1, #84	; 0x54
   12498:	bne	12548 <__mempcpy_chk@plt+0x1538>
   1249c:	ldrb	r1, [r0, #2]
   124a0:	and	r1, r1, #223	; 0xdf
   124a4:	cmp	r1, #70	; 0x46
   124a8:	bne	12548 <__mempcpy_chk@plt+0x1538>
   124ac:	ldrb	r1, [r0, #3]
   124b0:	cmp	r1, #45	; 0x2d
   124b4:	bne	12548 <__mempcpy_chk@plt+0x1538>
   124b8:	ldrb	r1, [r0, #4]
   124bc:	cmp	r1, #56	; 0x38
   124c0:	bne	12548 <__mempcpy_chk@plt+0x1538>
   124c4:	ldrb	r0, [r0, #5]
   124c8:	cmp	r0, #0
   124cc:	bne	12548 <__mempcpy_chk@plt+0x1538>
   124d0:	movw	r0, #22392	; 0x5778
   124d4:	movt	r0, #1
   124d8:	str	r0, [sp, #76]	; 0x4c
   124dc:	mov	r9, #0
   124e0:	tst	r8, #1
   124e4:	beq	12434 <__mempcpy_chk@plt+0x1424>
   124e8:	b	12574 <__mempcpy_chk@plt+0x1564>
   124ec:	ldrb	r1, [r0, #1]
   124f0:	ldr	ip, [fp, #-84]	; 0xffffffac
   124f4:	and	r1, r1, #223	; 0xdf
   124f8:	cmp	r1, #66	; 0x42
   124fc:	bne	12548 <__mempcpy_chk@plt+0x1538>
   12500:	ldrb	r1, [r0, #2]
   12504:	cmp	r1, #49	; 0x31
   12508:	bne	12548 <__mempcpy_chk@plt+0x1538>
   1250c:	ldrb	r1, [r0, #3]
   12510:	cmp	r1, #56	; 0x38
   12514:	bne	12548 <__mempcpy_chk@plt+0x1538>
   12518:	ldrb	r1, [r0, #4]
   1251c:	cmp	r1, #48	; 0x30
   12520:	bne	12548 <__mempcpy_chk@plt+0x1538>
   12524:	ldrb	r1, [r0, #5]
   12528:	cmp	r1, #51	; 0x33
   1252c:	bne	12548 <__mempcpy_chk@plt+0x1538>
   12530:	ldrb	r1, [r0, #6]
   12534:	cmp	r1, #48	; 0x30
   12538:	bne	12548 <__mempcpy_chk@plt+0x1538>
   1253c:	ldrb	r0, [r0, #7]
   12540:	cmp	r0, #0
   12544:	beq	1335c <__mempcpy_chk@plt+0x234c>
   12548:	movw	r0, #22386	; 0x5772
   1254c:	cmp	r4, #9
   12550:	movt	r0, #1
   12554:	mov	r1, r0
   12558:	movw	r0, #22382	; 0x576e
   1255c:	movt	r0, #1
   12560:	moveq	r1, r0
   12564:	str	r1, [sp, #76]	; 0x4c
   12568:	mov	r9, #0
   1256c:	tst	r8, #1
   12570:	beq	12434 <__mempcpy_chk@plt+0x1424>
   12574:	ldr	r6, [sp, #76]	; 0x4c
   12578:	mov	r0, r6
   1257c:	bl	10f2c <strlen@plt>
   12580:	ldr	ip, [fp, #-84]	; 0xffffffac
   12584:	ldr	lr, [fp, #-80]	; 0xffffffb0
   12588:	str	r0, [fp, #-72]	; 0xffffffb8
   1258c:	str	r6, [fp, #-88]	; 0xffffffa8
   12590:	mov	r2, #1
   12594:	mov	r3, r8
   12598:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1259c:	str	r4, [fp, #-64]	; 0xffffffc0
   125a0:	mov	sl, #0
   125a4:	str	r3, [fp, #-76]	; 0xffffffb4
   125a8:	str	r2, [sp, #88]	; 0x58
   125ac:	cmp	r0, #0
   125b0:	movwne	r0, #1
   125b4:	and	r1, r0, r3
   125b8:	and	r1, r2, r1
   125bc:	str	r1, [sp, #48]	; 0x30
   125c0:	sub	r1, r4, #2
   125c4:	clz	r1, r1
   125c8:	lsr	r1, r1, #5
   125cc:	and	r1, r1, r3
   125d0:	str	r1, [sp, #44]	; 0x2c
   125d4:	subs	r1, r4, #2
   125d8:	eor	r4, r3, #1
   125dc:	movwne	r1, #1
   125e0:	str	r4, [sp, #92]	; 0x5c
   125e4:	orr	r4, r1, r4
   125e8:	and	r1, r1, r2
   125ec:	and	r0, r0, r1
   125f0:	str	r4, [sp, #64]	; 0x40
   125f4:	ldr	r4, [sp, #84]	; 0x54
   125f8:	str	r0, [fp, #-60]	; 0xffffffc4
   125fc:	orr	r0, r1, r3
   12600:	ldr	r1, [fp, #16]
   12604:	eor	r0, r0, #1
   12608:	clz	r1, r1
   1260c:	lsr	r1, r1, #5
   12610:	orr	r0, r1, r0
   12614:	str	r0, [fp, #-68]	; 0xffffffbc
   12618:	eor	r0, r2, #1
   1261c:	str	r0, [sp, #52]	; 0x34
   12620:	cmn	r7, #1
   12624:	beq	12634 <__mempcpy_chk@plt+0x1624>
   12628:	cmp	sl, r7
   1262c:	bne	12640 <__mempcpy_chk@plt+0x1630>
   12630:	b	132d4 <__mempcpy_chk@plt+0x22c4>
   12634:	ldrb	r0, [lr, sl]
   12638:	cmp	r0, #0
   1263c:	beq	132dc <__mempcpy_chk@plt+0x22cc>
   12640:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12644:	cmp	r0, #0
   12648:	beq	126a8 <__mempcpy_chk@plt+0x1698>
   1264c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12650:	mov	r6, r5
   12654:	add	r5, sl, r0
   12658:	cmp	r0, #2
   1265c:	bcc	126c8 <__mempcpy_chk@plt+0x16b8>
   12660:	mov	r0, #0
   12664:	cmn	r7, #1
   12668:	str	r0, [fp, #-56]	; 0xffffffc8
   1266c:	bne	12684 <__mempcpy_chk@plt+0x1674>
   12670:	mov	r0, lr
   12674:	bl	10f2c <strlen@plt>
   12678:	ldr	lr, [fp, #-80]	; 0xffffffb0
   1267c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12680:	mov	r7, r0
   12684:	cmp	r5, r7
   12688:	bls	126d8 <__mempcpy_chk@plt+0x16c8>
   1268c:	mov	r0, #0
   12690:	mov	r5, r6
   12694:	str	r0, [fp, #-48]	; 0xffffffd0
   12698:	ldrb	r6, [lr, sl]
   1269c:	cmp	r6, #126	; 0x7e
   126a0:	bls	12728 <__mempcpy_chk@plt+0x1718>
   126a4:	b	12c84 <__mempcpy_chk@plt+0x1c74>
   126a8:	mov	r0, #0
   126ac:	str	r0, [fp, #-56]	; 0xffffffc8
   126b0:	mov	r0, #0
   126b4:	str	r0, [fp, #-48]	; 0xffffffd0
   126b8:	ldrb	r6, [lr, sl]
   126bc:	cmp	r6, #126	; 0x7e
   126c0:	bls	12728 <__mempcpy_chk@plt+0x1718>
   126c4:	b	12c84 <__mempcpy_chk@plt+0x1c74>
   126c8:	mov	r0, #0
   126cc:	str	r0, [fp, #-56]	; 0xffffffc8
   126d0:	cmp	r5, r7
   126d4:	bhi	1268c <__mempcpy_chk@plt+0x167c>
   126d8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   126dc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   126e0:	add	r0, lr, sl
   126e4:	bl	10f20 <bcmp@plt>
   126e8:	ldr	r2, [sp, #92]	; 0x5c
   126ec:	cmp	r0, #0
   126f0:	mov	r1, r0
   126f4:	mov	r5, r6
   126f8:	movwne	r1, #1
   126fc:	orr	r1, r1, r2
   12700:	tst	r1, #1
   12704:	beq	1339c <__mempcpy_chk@plt+0x238c>
   12708:	ldr	ip, [fp, #-84]	; 0xffffffac
   1270c:	ldr	lr, [fp, #-80]	; 0xffffffb0
   12710:	clz	r0, r0
   12714:	lsr	r0, r0, #5
   12718:	str	r0, [fp, #-48]	; 0xffffffd0
   1271c:	ldrb	r6, [lr, sl]
   12720:	cmp	r6, #126	; 0x7e
   12724:	bhi	12c84 <__mempcpy_chk@plt+0x1c74>
   12728:	add	r3, pc, #16
   1272c:	mov	r8, #1
   12730:	mov	r2, #110	; 0x6e
   12734:	mov	r0, #97	; 0x61
   12738:	mov	r1, #0
   1273c:	ldr	pc, [r3, r6, lsl #2]
   12740:	andeq	r2, r1, ip, lsr sl
   12744:	andeq	r2, r1, r4, lsl #25
   12748:	andeq	r2, r1, r4, lsl #25
   1274c:	andeq	r2, r1, r4, lsl #25
   12750:	andeq	r2, r1, r4, lsl #25
   12754:	andeq	r2, r1, r4, lsl #25
   12758:	andeq	r2, r1, r4, lsl #25
   1275c:	andeq	r2, r1, r8, lsr sp
   12760:	andeq	r2, r1, ip, lsl sl
   12764:	andeq	r2, r1, r4, lsl sl
   12768:	andeq	r2, r1, r8, lsr #20
   1276c:	andeq	r2, r1, r8, asr fp
   12770:	andeq	r2, r1, ip, lsl #20
   12774:	andeq	r2, r1, r4, lsr #20
   12778:	andeq	r2, r1, r4, lsl #25
   1277c:	andeq	r2, r1, r4, lsl #25
   12780:	andeq	r2, r1, r4, lsl #25
   12784:	andeq	r2, r1, r4, lsl #25
   12788:	andeq	r2, r1, r4, lsl #25
   1278c:	andeq	r2, r1, r4, lsl #25
   12790:	andeq	r2, r1, r4, lsl #25
   12794:	andeq	r2, r1, r4, lsl #25
   12798:	andeq	r2, r1, r4, lsl #25
   1279c:	andeq	r2, r1, r4, lsl #25
   127a0:	andeq	r2, r1, r4, lsl #25
   127a4:	andeq	r2, r1, r4, lsl #25
   127a8:	andeq	r2, r1, r4, lsl #25
   127ac:	andeq	r2, r1, r4, lsl #25
   127b0:	andeq	r2, r1, r4, lsl #25
   127b4:	andeq	r2, r1, r4, lsl #25
   127b8:	andeq	r2, r1, r4, lsl #25
   127bc:	andeq	r2, r1, r4, lsl #25
   127c0:			; <UNDEFINED> instruction: 0x000129b0
   127c4:			; <UNDEFINED> instruction: 0x000129b4
   127c8:			; <UNDEFINED> instruction: 0x000129b4
   127cc:	andeq	r2, r1, r4, lsr #19
   127d0:			; <UNDEFINED> instruction: 0x000129b4
   127d4:	andeq	r2, r1, ip, lsr r9
   127d8:			; <UNDEFINED> instruction: 0x000129b4
   127dc:	andeq	r2, r1, r0, ror #22
   127e0:			; <UNDEFINED> instruction: 0x000129b4
   127e4:			; <UNDEFINED> instruction: 0x000129b4
   127e8:			; <UNDEFINED> instruction: 0x000129b4
   127ec:	andeq	r2, r1, ip, lsr r9
   127f0:	andeq	r2, r1, ip, lsr r9
   127f4:	andeq	r2, r1, ip, lsr r9
   127f8:	andeq	r2, r1, ip, lsr r9
   127fc:	andeq	r2, r1, ip, lsr r9
   12800:	andeq	r2, r1, ip, lsr r9
   12804:	andeq	r2, r1, ip, lsr r9
   12808:	andeq	r2, r1, ip, lsr r9
   1280c:	andeq	r2, r1, ip, lsr r9
   12810:	andeq	r2, r1, ip, lsr r9
   12814:	andeq	r2, r1, ip, lsr r9
   12818:	andeq	r2, r1, ip, lsr r9
   1281c:	andeq	r2, r1, ip, lsr r9
   12820:	andeq	r2, r1, ip, lsr r9
   12824:	andeq	r2, r1, ip, lsr r9
   12828:	andeq	r2, r1, ip, lsr r9
   1282c:			; <UNDEFINED> instruction: 0x000129b4
   12830:			; <UNDEFINED> instruction: 0x000129b4
   12834:			; <UNDEFINED> instruction: 0x000129b4
   12838:			; <UNDEFINED> instruction: 0x000129b4
   1283c:	andeq	r2, r1, r4, lsr #22
   12840:	andeq	r2, r1, r4, lsl #25
   12844:	andeq	r2, r1, ip, lsr r9
   12848:	andeq	r2, r1, ip, lsr r9
   1284c:	andeq	r2, r1, ip, lsr r9
   12850:	andeq	r2, r1, ip, lsr r9
   12854:	andeq	r2, r1, ip, lsr r9
   12858:	andeq	r2, r1, ip, lsr r9
   1285c:	andeq	r2, r1, ip, lsr r9
   12860:	andeq	r2, r1, ip, lsr r9
   12864:	andeq	r2, r1, ip, lsr r9
   12868:	andeq	r2, r1, ip, lsr r9
   1286c:	andeq	r2, r1, ip, lsr r9
   12870:	andeq	r2, r1, ip, lsr r9
   12874:	andeq	r2, r1, ip, lsr r9
   12878:	andeq	r2, r1, ip, lsr r9
   1287c:	andeq	r2, r1, ip, lsr r9
   12880:	andeq	r2, r1, ip, lsr r9
   12884:	andeq	r2, r1, ip, lsr r9
   12888:	andeq	r2, r1, ip, lsr r9
   1288c:	andeq	r2, r1, ip, lsr r9
   12890:	andeq	r2, r1, ip, lsr r9
   12894:	andeq	r2, r1, ip, lsr r9
   12898:	andeq	r2, r1, ip, lsr r9
   1289c:	andeq	r2, r1, ip, lsr r9
   128a0:	andeq	r2, r1, ip, lsr r9
   128a4:	andeq	r2, r1, ip, lsr r9
   128a8:	andeq	r2, r1, ip, lsr r9
   128ac:			; <UNDEFINED> instruction: 0x000129b4
   128b0:	andeq	r2, r1, r8, ror #19
   128b4:	andeq	r2, r1, ip, lsr r9
   128b8:			; <UNDEFINED> instruction: 0x000129b4
   128bc:	andeq	r2, r1, ip, lsr r9
   128c0:			; <UNDEFINED> instruction: 0x000129b4
   128c4:	andeq	r2, r1, ip, lsr r9
   128c8:	andeq	r2, r1, ip, lsr r9
   128cc:	andeq	r2, r1, ip, lsr r9
   128d0:	andeq	r2, r1, ip, lsr r9
   128d4:	andeq	r2, r1, ip, lsr r9
   128d8:	andeq	r2, r1, ip, lsr r9
   128dc:	andeq	r2, r1, ip, lsr r9
   128e0:	andeq	r2, r1, ip, lsr r9
   128e4:	andeq	r2, r1, ip, lsr r9
   128e8:	andeq	r2, r1, ip, lsr r9
   128ec:	andeq	r2, r1, ip, lsr r9
   128f0:	andeq	r2, r1, ip, lsr r9
   128f4:	andeq	r2, r1, ip, lsr r9
   128f8:	andeq	r2, r1, ip, lsr r9
   128fc:	andeq	r2, r1, ip, lsr r9
   12900:	andeq	r2, r1, ip, lsr r9
   12904:	andeq	r2, r1, ip, lsr r9
   12908:	andeq	r2, r1, ip, lsr r9
   1290c:	andeq	r2, r1, ip, lsr r9
   12910:	andeq	r2, r1, ip, lsr r9
   12914:	andeq	r2, r1, ip, lsr r9
   12918:	andeq	r2, r1, ip, lsr r9
   1291c:	andeq	r2, r1, ip, lsr r9
   12920:	andeq	r2, r1, ip, lsr r9
   12924:	andeq	r2, r1, ip, lsr r9
   12928:	andeq	r2, r1, ip, lsr r9
   1292c:	andeq	r2, r1, ip, ror r9
   12930:			; <UNDEFINED> instruction: 0x000129b4
   12934:	andeq	r2, r1, ip, ror r9
   12938:	andeq	r2, r1, r4, lsr #19
   1293c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12940:	tst	r0, #1
   12944:	bne	12bfc <__mempcpy_chk@plt+0x1bec>
   12948:	ldr	r1, [fp, #16]
   1294c:	ubfx	r0, r6, #5, #3
   12950:	mov	r2, #1
   12954:	ldr	r0, [r1, r0, lsl #2]
   12958:	and	r1, r6, #31
   1295c:	tst	r0, r2, lsl r1
   12960:	beq	12bfc <__mempcpy_chk@plt+0x1bec>
   12964:	mov	r0, r6
   12968:	mov	r1, r8
   1296c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12970:	tst	r2, #1
   12974:	beq	12c1c <__mempcpy_chk@plt+0x1c0c>
   12978:	b	13378 <__mempcpy_chk@plt+0x2368>
   1297c:	cmp	r7, #1
   12980:	beq	129a4 <__mempcpy_chk@plt+0x1994>
   12984:	mov	r8, #0
   12988:	cmn	r7, #1
   1298c:	bne	12be8 <__mempcpy_chk@plt+0x1bd8>
   12990:	ldrb	r0, [lr, #1]
   12994:	cmp	r0, #0
   12998:	beq	129a4 <__mempcpy_chk@plt+0x1994>
   1299c:	mvn	r7, #0
   129a0:	b	12be8 <__mempcpy_chk@plt+0x1bd8>
   129a4:	mov	r8, #0
   129a8:	cmp	sl, #0
   129ac:	bne	12be8 <__mempcpy_chk@plt+0x1bd8>
   129b0:	mov	r1, #1
   129b4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   129b8:	cmp	r0, #2
   129bc:	bne	129d4 <__mempcpy_chk@plt+0x19c4>
   129c0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   129c4:	mov	r8, r1
   129c8:	tst	r0, #1
   129cc:	beq	1293c <__mempcpy_chk@plt+0x192c>
   129d0:	b	13378 <__mempcpy_chk@plt+0x2368>
   129d4:	mov	r8, r1
   129d8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   129dc:	tst	r0, #1
   129e0:	beq	12948 <__mempcpy_chk@plt+0x1938>
   129e4:	b	12bfc <__mempcpy_chk@plt+0x1bec>
   129e8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   129ec:	cmp	r0, #2
   129f0:	bne	12cb0 <__mempcpy_chk@plt+0x1ca0>
   129f4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   129f8:	tst	r0, #1
   129fc:	bne	13378 <__mempcpy_chk@plt+0x2368>
   12a00:	mov	r0, #0
   12a04:	str	r0, [fp, #-56]	; 0xffffffc8
   12a08:	b	12cc8 <__mempcpy_chk@plt+0x1cb8>
   12a0c:	mov	r0, #102	; 0x66
   12a10:	b	12d38 <__mempcpy_chk@plt+0x1d28>
   12a14:	mov	r2, #116	; 0x74
   12a18:	b	12a28 <__mempcpy_chk@plt+0x1a18>
   12a1c:	mov	r0, #98	; 0x62
   12a20:	b	12d38 <__mempcpy_chk@plt+0x1d28>
   12a24:	mov	r2, #114	; 0x72
   12a28:	ldr	r0, [sp, #64]	; 0x40
   12a2c:	tst	r0, #1
   12a30:	mov	r0, r2
   12a34:	bne	12d38 <__mempcpy_chk@plt+0x1d28>
   12a38:	b	13378 <__mempcpy_chk@plt+0x2368>
   12a3c:	ldr	r0, [sp, #88]	; 0x58
   12a40:	tst	r0, #1
   12a44:	beq	12d58 <__mempcpy_chk@plt+0x1d48>
   12a48:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12a4c:	tst	r0, #1
   12a50:	bne	134b4 <__mempcpy_chk@plt+0x24a4>
   12a54:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12a58:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12a5c:	subs	r0, r0, #2
   12a60:	movwne	r0, #1
   12a64:	orr	r0, r0, r1
   12a68:	tst	r0, #1
   12a6c:	bne	12aa8 <__mempcpy_chk@plt+0x1a98>
   12a70:	cmp	r9, r5
   12a74:	movcc	r0, #39	; 0x27
   12a78:	strbcc	r0, [ip, r9]
   12a7c:	add	r0, r9, #1
   12a80:	cmp	r0, r5
   12a84:	movcc	r1, #36	; 0x24
   12a88:	strbcc	r1, [ip, r0]
   12a8c:	add	r0, r9, #2
   12a90:	add	r9, r9, #3
   12a94:	cmp	r0, r5
   12a98:	movcc	r1, #39	; 0x27
   12a9c:	strbcc	r1, [ip, r0]
   12aa0:	mov	r0, #1
   12aa4:	str	r0, [fp, #-52]	; 0xffffffcc
   12aa8:	mov	r1, #1
   12aac:	cmp	r9, r5
   12ab0:	mov	r8, #0
   12ab4:	mov	r6, #48	; 0x30
   12ab8:	str	r1, [fp, #-56]	; 0xffffffc8
   12abc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12ac0:	movcc	r0, #92	; 0x5c
   12ac4:	strbcc	r0, [ip, r9]
   12ac8:	add	r0, r9, #1
   12acc:	cmp	r1, #2
   12ad0:	beq	12f24 <__mempcpy_chk@plt+0x1f14>
   12ad4:	add	r1, sl, #1
   12ad8:	cmp	r1, r7
   12adc:	bcs	12f24 <__mempcpy_chk@plt+0x1f14>
   12ae0:	ldrb	r1, [lr, r1]
   12ae4:	sub	r1, r1, #48	; 0x30
   12ae8:	uxtb	r1, r1
   12aec:	cmp	r1, #9
   12af0:	bhi	12f24 <__mempcpy_chk@plt+0x1f14>
   12af4:	cmp	r0, r5
   12af8:	movcc	r1, #48	; 0x30
   12afc:	strbcc	r1, [ip, r0]
   12b00:	add	r0, r9, #2
   12b04:	add	r9, r9, #3
   12b08:	cmp	r0, r5
   12b0c:	movcc	r1, #48	; 0x30
   12b10:	strbcc	r1, [ip, r0]
   12b14:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12b18:	tst	r0, #1
   12b1c:	beq	12948 <__mempcpy_chk@plt+0x1938>
   12b20:	b	12bfc <__mempcpy_chk@plt+0x1bec>
   12b24:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12b28:	mov	r6, #63	; 0x3f
   12b2c:	cmp	r0, #5
   12b30:	beq	12f38 <__mempcpy_chk@plt+0x1f28>
   12b34:	mov	r1, #0
   12b38:	cmp	r0, #2
   12b3c:	str	r1, [fp, #-56]	; 0xffffffc8
   12b40:	bne	13000 <__mempcpy_chk@plt+0x1ff0>
   12b44:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12b48:	mov	r8, #0
   12b4c:	tst	r0, #1
   12b50:	beq	1293c <__mempcpy_chk@plt+0x192c>
   12b54:	b	13378 <__mempcpy_chk@plt+0x2368>
   12b58:	mov	r0, #118	; 0x76
   12b5c:	b	12d38 <__mempcpy_chk@plt+0x1d28>
   12b60:	mov	r0, #1
   12b64:	mov	r6, #39	; 0x27
   12b68:	str	r0, [sp, #60]	; 0x3c
   12b6c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12b70:	cmp	r0, #2
   12b74:	bne	12d78 <__mempcpy_chk@plt+0x1d68>
   12b78:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12b7c:	tst	r0, #1
   12b80:	bne	13378 <__mempcpy_chk@plt+0x2368>
   12b84:	ldr	r2, [sp, #56]	; 0x38
   12b88:	clz	r1, r5
   12b8c:	mov	r8, #1
   12b90:	lsr	r1, r1, #5
   12b94:	cmp	r2, #0
   12b98:	mov	r0, r2
   12b9c:	movwne	r0, #1
   12ba0:	orrs	r0, r0, r1
   12ba4:	moveq	r2, r5
   12ba8:	moveq	r5, r0
   12bac:	cmp	r9, r5
   12bb0:	str	r2, [sp, #56]	; 0x38
   12bb4:	movcc	r0, #39	; 0x27
   12bb8:	strbcc	r0, [ip, r9]
   12bbc:	add	r0, r9, #1
   12bc0:	cmp	r0, r5
   12bc4:	movcc	r1, #92	; 0x5c
   12bc8:	strbcc	r1, [ip, r0]
   12bcc:	add	r0, r9, #2
   12bd0:	add	r9, r9, #3
   12bd4:	cmp	r0, r5
   12bd8:	movcc	r1, #39	; 0x27
   12bdc:	strbcc	r1, [ip, r0]
   12be0:	mov	r0, #0
   12be4:	str	r0, [fp, #-52]	; 0xffffffcc
   12be8:	mov	r0, #0
   12bec:	str	r0, [fp, #-56]	; 0xffffffc8
   12bf0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12bf4:	tst	r0, #1
   12bf8:	beq	12948 <__mempcpy_chk@plt+0x1938>
   12bfc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12c00:	mov	r1, r8
   12c04:	cmp	r0, #0
   12c08:	mov	r0, r6
   12c0c:	beq	12cd0 <__mempcpy_chk@plt+0x1cc0>
   12c10:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12c14:	tst	r2, #1
   12c18:	bne	13378 <__mempcpy_chk@plt+0x2368>
   12c1c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12c20:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12c24:	subs	r2, r2, #2
   12c28:	movwne	r2, #1
   12c2c:	orr	r2, r2, r3
   12c30:	tst	r2, #1
   12c34:	bne	12c70 <__mempcpy_chk@plt+0x1c60>
   12c38:	cmp	r9, r5
   12c3c:	movcc	r2, #39	; 0x27
   12c40:	strbcc	r2, [ip, r9]
   12c44:	add	r2, r9, #1
   12c48:	cmp	r2, r5
   12c4c:	movcc	r3, #36	; 0x24
   12c50:	strbcc	r3, [ip, r2]
   12c54:	add	r2, r9, #2
   12c58:	add	r9, r9, #3
   12c5c:	cmp	r2, r5
   12c60:	movcc	r3, #39	; 0x27
   12c64:	strbcc	r3, [ip, r2]
   12c68:	mov	r2, #1
   12c6c:	str	r2, [fp, #-52]	; 0xffffffcc
   12c70:	cmp	r9, r5
   12c74:	movcc	r2, #92	; 0x5c
   12c78:	strbcc	r2, [ip, r9]
   12c7c:	add	r9, r9, #1
   12c80:	b	12d18 <__mempcpy_chk@plt+0x1d08>
   12c84:	ldr	r0, [sp, #40]	; 0x28
   12c88:	cmp	r0, #1
   12c8c:	bne	12d8c <__mempcpy_chk@plt+0x1d7c>
   12c90:	bl	10f08 <__ctype_b_loc@plt>
   12c94:	ldr	r0, [r0]
   12c98:	ldr	lr, [fp, #-80]	; 0xffffffb0
   12c9c:	mov	r1, #1
   12ca0:	add	r0, r0, r6, lsl #1
   12ca4:	ldrb	r0, [r0, #1]
   12ca8:	ubfx	r8, r0, #6, #1
   12cac:	b	130e4 <__mempcpy_chk@plt+0x20d4>
   12cb0:	ldr	r1, [sp, #48]	; 0x30
   12cb4:	mov	r0, #0
   12cb8:	str	r0, [fp, #-56]	; 0xffffffc8
   12cbc:	mov	r0, #92	; 0x5c
   12cc0:	cmp	r1, #0
   12cc4:	beq	12d38 <__mempcpy_chk@plt+0x1d28>
   12cc8:	mov	r6, #92	; 0x5c
   12ccc:	mov	r8, #0
   12cd0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12cd4:	cmp	r0, #0
   12cd8:	bne	12d10 <__mempcpy_chk@plt+0x1d00>
   12cdc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12ce0:	tst	r0, #1
   12ce4:	beq	12d10 <__mempcpy_chk@plt+0x1d00>
   12ce8:	cmp	r9, r5
   12cec:	movcc	r0, #39	; 0x27
   12cf0:	strbcc	r0, [ip, r9]
   12cf4:	add	r0, r9, #1
   12cf8:	add	r9, r9, #2
   12cfc:	cmp	r0, r5
   12d00:	movcc	r1, #39	; 0x27
   12d04:	strbcc	r1, [ip, r0]
   12d08:	mov	r0, #0
   12d0c:	str	r0, [fp, #-52]	; 0xffffffcc
   12d10:	mov	r1, r8
   12d14:	mov	r0, r6
   12d18:	cmp	r9, r5
   12d1c:	and	r4, r4, r1
   12d20:	strbcc	r0, [ip, r9]
   12d24:	add	r9, r9, #1
   12d28:	add	sl, sl, #1
   12d2c:	cmn	r7, #1
   12d30:	bne	12628 <__mempcpy_chk@plt+0x1618>
   12d34:	b	12634 <__mempcpy_chk@plt+0x1624>
   12d38:	mov	r1, #0
   12d3c:	mov	r8, #0
   12d40:	str	r1, [fp, #-56]	; 0xffffffc8
   12d44:	ldr	r1, [sp, #88]	; 0x58
   12d48:	tst	r1, #1
   12d4c:	mov	r1, #0
   12d50:	beq	1293c <__mempcpy_chk@plt+0x192c>
   12d54:	b	12c10 <__mempcpy_chk@plt+0x1c00>
   12d58:	ldr	r0, [sp, #36]	; 0x24
   12d5c:	mov	r6, #0
   12d60:	mov	r8, #0
   12d64:	cmp	r0, #0
   12d68:	mov	r0, #0
   12d6c:	str	r0, [fp, #-56]	; 0xffffffc8
   12d70:	bne	12d28 <__mempcpy_chk@plt+0x1d18>
   12d74:	b	1293c <__mempcpy_chk@plt+0x192c>
   12d78:	mov	r8, #1
   12d7c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12d80:	tst	r0, #1
   12d84:	beq	12948 <__mempcpy_chk@plt+0x1938>
   12d88:	b	12bfc <__mempcpy_chk@plt+0x1bec>
   12d8c:	mov	r0, #0
   12d90:	cmn	r7, #1
   12d94:	str	r0, [fp, #-36]	; 0xffffffdc
   12d98:	str	r0, [fp, #-40]	; 0xffffffd8
   12d9c:	bne	12db0 <__mempcpy_chk@plt+0x1da0>
   12da0:	mov	r0, lr
   12da4:	bl	10f2c <strlen@plt>
   12da8:	ldr	lr, [fp, #-80]	; 0xffffffb0
   12dac:	mov	r7, r0
   12db0:	ldr	r0, [sp, #44]	; 0x2c
   12db4:	str	r4, [sp, #84]	; 0x54
   12db8:	str	r5, [sp, #28]
   12dbc:	cmp	r0, #0
   12dc0:	beq	13014 <__mempcpy_chk@plt+0x2004>
   12dc4:	ldr	r0, [sp, #80]	; 0x50
   12dc8:	mov	r8, #1
   12dcc:	mov	r5, #0
   12dd0:	add	r0, r0, sl
   12dd4:	str	r0, [sp, #24]
   12dd8:	sub	r0, fp, #40	; 0x28
   12ddc:	mov	r3, r0
   12de0:	b	12e1c <__mempcpy_chk@plt+0x1e0c>
   12de4:	ldr	r5, [sp, #68]	; 0x44
   12de8:	add	r5, r0, r5
   12dec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12df0:	bl	10e60 <iswprint@plt>
   12df4:	cmp	r0, #0
   12df8:	sub	r4, fp, #40	; 0x28
   12dfc:	movwne	r0, #1
   12e00:	and	r8, r8, r0
   12e04:	mov	r0, r4
   12e08:	bl	10e18 <mbsinit@plt>
   12e0c:	ldr	lr, [fp, #-80]	; 0xffffffb0
   12e10:	mov	r3, r4
   12e14:	cmp	r0, #0
   12e18:	bne	130d8 <__mempcpy_chk@plt+0x20c8>
   12e1c:	str	r5, [sp, #68]	; 0x44
   12e20:	add	r5, r5, sl
   12e24:	sub	r0, fp, #44	; 0x2c
   12e28:	add	r1, lr, r5
   12e2c:	sub	r2, r7, r5
   12e30:	bl	14ebc <__mempcpy_chk@plt+0x3eac>
   12e34:	cmn	r0, #2
   12e38:	beq	13098 <__mempcpy_chk@plt+0x2088>
   12e3c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12e40:	cmn	r0, #1
   12e44:	beq	1308c <__mempcpy_chk@plt+0x207c>
   12e48:	cmp	r0, #0
   12e4c:	beq	13090 <__mempcpy_chk@plt+0x2080>
   12e50:	cmp	r0, #2
   12e54:	bcc	12de4 <__mempcpy_chk@plt+0x1dd4>
   12e58:	ldr	r1, [sp, #68]	; 0x44
   12e5c:	ldr	r2, [sp, #24]
   12e60:	add	r1, r2, r1
   12e64:	sub	r2, r0, #1
   12e68:	ldrb	r3, [r1]
   12e6c:	sub	r3, r3, #91	; 0x5b
   12e70:	cmp	r3, #33	; 0x21
   12e74:	bls	12e94 <__mempcpy_chk@plt+0x1e84>
   12e78:	add	r1, r1, #1
   12e7c:	subs	r2, r2, #1
   12e80:	beq	12de4 <__mempcpy_chk@plt+0x1dd4>
   12e84:	ldrb	r3, [r1]
   12e88:	sub	r3, r3, #91	; 0x5b
   12e8c:	cmp	r3, #33	; 0x21
   12e90:	bhi	12e78 <__mempcpy_chk@plt+0x1e68>
   12e94:	add	r5, pc, #0
   12e98:	ldr	pc, [r5, r3, lsl #2]
   12e9c:			; <UNDEFINED> instruction: 0x000133b0
   12ea0:			; <UNDEFINED> instruction: 0x000133b0
   12ea4:	andeq	r2, r1, r8, ror lr
   12ea8:			; <UNDEFINED> instruction: 0x000133b0
   12eac:	andeq	r2, r1, r8, ror lr
   12eb0:			; <UNDEFINED> instruction: 0x000133b0
   12eb4:	andeq	r2, r1, r8, ror lr
   12eb8:	andeq	r2, r1, r8, ror lr
   12ebc:	andeq	r2, r1, r8, ror lr
   12ec0:	andeq	r2, r1, r8, ror lr
   12ec4:	andeq	r2, r1, r8, ror lr
   12ec8:	andeq	r2, r1, r8, ror lr
   12ecc:	andeq	r2, r1, r8, ror lr
   12ed0:	andeq	r2, r1, r8, ror lr
   12ed4:	andeq	r2, r1, r8, ror lr
   12ed8:	andeq	r2, r1, r8, ror lr
   12edc:	andeq	r2, r1, r8, ror lr
   12ee0:	andeq	r2, r1, r8, ror lr
   12ee4:	andeq	r2, r1, r8, ror lr
   12ee8:	andeq	r2, r1, r8, ror lr
   12eec:	andeq	r2, r1, r8, ror lr
   12ef0:	andeq	r2, r1, r8, ror lr
   12ef4:	andeq	r2, r1, r8, ror lr
   12ef8:	andeq	r2, r1, r8, ror lr
   12efc:	andeq	r2, r1, r8, ror lr
   12f00:	andeq	r2, r1, r8, ror lr
   12f04:	andeq	r2, r1, r8, ror lr
   12f08:	andeq	r2, r1, r8, ror lr
   12f0c:	andeq	r2, r1, r8, ror lr
   12f10:	andeq	r2, r1, r8, ror lr
   12f14:	andeq	r2, r1, r8, ror lr
   12f18:	andeq	r2, r1, r8, ror lr
   12f1c:	andeq	r2, r1, r8, ror lr
   12f20:			; <UNDEFINED> instruction: 0x000133b0
   12f24:	mov	r9, r0
   12f28:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12f2c:	tst	r0, #1
   12f30:	beq	12948 <__mempcpy_chk@plt+0x1938>
   12f34:	b	12bfc <__mempcpy_chk@plt+0x1bec>
   12f38:	mov	r0, #0
   12f3c:	str	r0, [fp, #-56]	; 0xffffffc8
   12f40:	ldr	r0, [sp, #32]
   12f44:	cmp	r0, #0
   12f48:	beq	13000 <__mempcpy_chk@plt+0x1ff0>
   12f4c:	add	r0, sl, #2
   12f50:	mov	r1, r7
   12f54:	cmp	r0, r7
   12f58:	bcs	13000 <__mempcpy_chk@plt+0x1ff0>
   12f5c:	add	r1, sl, lr
   12f60:	ldrb	r1, [r1, #1]
   12f64:	cmp	r1, #63	; 0x3f
   12f68:	bne	13000 <__mempcpy_chk@plt+0x1ff0>
   12f6c:	ldrb	r8, [lr, r0]
   12f70:	sub	r2, r8, #33	; 0x21
   12f74:	cmp	r2, #29
   12f78:	bhi	13000 <__mempcpy_chk@plt+0x1ff0>
   12f7c:	mov	r1, r4
   12f80:	movw	r4, #20929	; 0x51c1
   12f84:	mov	r3, #1
   12f88:	movt	r4, #14336	; 0x3800
   12f8c:	tst	r4, r3, lsl r2
   12f90:	beq	132bc <__mempcpy_chk@plt+0x22ac>
   12f94:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12f98:	tst	r2, #1
   12f9c:	bne	13378 <__mempcpy_chk@plt+0x2368>
   12fa0:	cmp	r9, r5
   12fa4:	mov	r6, r8
   12fa8:	mov	r4, r1
   12fac:	mov	sl, r0
   12fb0:	mov	r8, #0
   12fb4:	movcc	r2, #63	; 0x3f
   12fb8:	strbcc	r2, [ip, r9]
   12fbc:	add	r2, r9, #1
   12fc0:	cmp	r2, r5
   12fc4:	movcc	r3, #34	; 0x22
   12fc8:	strbcc	r3, [ip, r2]
   12fcc:	add	r2, r9, #2
   12fd0:	cmp	r2, r5
   12fd4:	movcc	r3, #34	; 0x22
   12fd8:	strbcc	r3, [ip, r2]
   12fdc:	add	r2, r9, #3
   12fe0:	add	r9, r9, #4
   12fe4:	cmp	r2, r5
   12fe8:	movcc	r3, #63	; 0x3f
   12fec:	strbcc	r3, [ip, r2]
   12ff0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12ff4:	tst	r0, #1
   12ff8:	beq	12948 <__mempcpy_chk@plt+0x1938>
   12ffc:	b	12bfc <__mempcpy_chk@plt+0x1bec>
   13000:	mov	r8, #0
   13004:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13008:	tst	r0, #1
   1300c:	beq	12948 <__mempcpy_chk@plt+0x1938>
   13010:	b	12bfc <__mempcpy_chk@plt+0x1bec>
   13014:	mov	r8, #1
   13018:	mov	r5, #0
   1301c:	sub	r4, fp, #40	; 0x28
   13020:	str	r5, [sp, #68]	; 0x44
   13024:	add	r5, r5, sl
   13028:	sub	r0, fp, #44	; 0x2c
   1302c:	mov	r3, r4
   13030:	add	r1, lr, r5
   13034:	sub	r2, r7, r5
   13038:	bl	14ebc <__mempcpy_chk@plt+0x3eac>
   1303c:	cmn	r0, #2
   13040:	beq	13098 <__mempcpy_chk@plt+0x2088>
   13044:	cmn	r0, #1
   13048:	beq	1308c <__mempcpy_chk@plt+0x207c>
   1304c:	ldr	r5, [sp, #68]	; 0x44
   13050:	cmp	r0, #0
   13054:	beq	130d4 <__mempcpy_chk@plt+0x20c4>
   13058:	add	r5, r0, r5
   1305c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13060:	bl	10e60 <iswprint@plt>
   13064:	cmp	r0, #0
   13068:	sub	r4, fp, #40	; 0x28
   1306c:	movwne	r0, #1
   13070:	and	r8, r8, r0
   13074:	mov	r0, r4
   13078:	bl	10e18 <mbsinit@plt>
   1307c:	ldr	lr, [fp, #-80]	; 0xffffffb0
   13080:	cmp	r0, #0
   13084:	beq	13020 <__mempcpy_chk@plt+0x2010>
   13088:	b	130d8 <__mempcpy_chk@plt+0x20c8>
   1308c:	mov	r8, #0
   13090:	ldr	lr, [fp, #-80]	; 0xffffffb0
   13094:	b	130cc <__mempcpy_chk@plt+0x20bc>
   13098:	ldr	lr, [fp, #-80]	; 0xffffffb0
   1309c:	mov	r8, #0
   130a0:	cmp	r5, r7
   130a4:	bcs	130cc <__mempcpy_chk@plt+0x20bc>
   130a8:	ldrb	r0, [lr, r5]
   130ac:	cmp	r0, #0
   130b0:	beq	130cc <__mempcpy_chk@plt+0x20bc>
   130b4:	ldr	r0, [sp, #68]	; 0x44
   130b8:	add	r0, r0, #1
   130bc:	add	r5, r0, sl
   130c0:	str	r0, [sp, #68]	; 0x44
   130c4:	cmp	r5, r7
   130c8:	bcc	130a8 <__mempcpy_chk@plt+0x2098>
   130cc:	ldr	r5, [sp, #68]	; 0x44
   130d0:	b	130d8 <__mempcpy_chk@plt+0x20c8>
   130d4:	ldr	lr, [fp, #-80]	; 0xffffffb0
   130d8:	mov	r1, r5
   130dc:	ldr	r5, [sp, #28]
   130e0:	ldr	r4, [sp, #84]	; 0x54
   130e4:	ldr	r0, [sp, #52]	; 0x34
   130e8:	ldr	ip, [fp, #-84]	; 0xffffffac
   130ec:	cmp	r1, #1
   130f0:	orr	r2, r8, r0
   130f4:	mov	r0, r1
   130f8:	bhi	13104 <__mempcpy_chk@plt+0x20f4>
   130fc:	tst	r2, #1
   13100:	bne	1293c <__mempcpy_chk@plt+0x192c>
   13104:	add	r0, r0, sl
   13108:	str	r2, [sp, #84]	; 0x54
   1310c:	str	r0, [fp, #-56]	; 0xffffffc8
   13110:	mov	r0, #0
   13114:	tst	r2, #1
   13118:	bne	131f8 <__mempcpy_chk@plt+0x21e8>
   1311c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13120:	tst	r1, #1
   13124:	bne	13378 <__mempcpy_chk@plt+0x2368>
   13128:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1312c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13130:	subs	r2, r1, #2
   13134:	movwne	r2, #1
   13138:	orr	r2, r2, r0
   1313c:	tst	r2, #1
   13140:	bne	1317c <__mempcpy_chk@plt+0x216c>
   13144:	cmp	r9, r5
   13148:	add	r2, r9, #1
   1314c:	mov	r0, #1
   13150:	movcc	r1, #39	; 0x27
   13154:	str	r0, [fp, #-52]	; 0xffffffcc
   13158:	strbcc	r1, [ip, r9]
   1315c:	cmp	r2, r5
   13160:	movcc	r1, #36	; 0x24
   13164:	strbcc	r1, [ip, r2]
   13168:	add	r2, r9, #2
   1316c:	add	r9, r9, #3
   13170:	cmp	r2, r5
   13174:	movcc	r1, #39	; 0x27
   13178:	strbcc	r1, [ip, r2]
   1317c:	cmp	r9, r5
   13180:	add	r2, r9, #1
   13184:	movcc	r1, #92	; 0x5c
   13188:	strbcc	r1, [ip, r9]
   1318c:	cmp	r2, r5
   13190:	bcs	131a4 <__mempcpy_chk@plt+0x2194>
   13194:	uxtb	r3, r6
   13198:	mov	r1, #48	; 0x30
   1319c:	orr	r3, r1, r3, lsr #6
   131a0:	strb	r3, [ip, r2]
   131a4:	add	r2, r9, #2
   131a8:	add	r9, r9, #3
   131ac:	cmp	r2, r5
   131b0:	lsrcc	r3, r6, #3
   131b4:	movcc	r1, #6
   131b8:	bficc	r3, r1, #3, #29
   131bc:	mov	r1, #6
   131c0:	bfi	r6, r1, #3, #29
   131c4:	strbcc	r3, [ip, r2]
   131c8:	mov	r2, #1
   131cc:	b	1322c <__mempcpy_chk@plt+0x221c>
   131d0:	ldr	r1, [sp, #80]	; 0x50
   131d4:	cmp	r9, r2
   131d8:	mov	r5, r2
   131dc:	ldr	r2, [sp, #84]	; 0x54
   131e0:	strbcc	r6, [ip, r9]
   131e4:	add	r9, r9, #1
   131e8:	ldrb	r6, [r1, sl]
   131ec:	mov	sl, r3
   131f0:	tst	r2, #1
   131f4:	beq	1311c <__mempcpy_chk@plt+0x210c>
   131f8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   131fc:	tst	r1, #1
   13200:	beq	13220 <__mempcpy_chk@plt+0x2210>
   13204:	cmp	r9, r5
   13208:	mov	r2, r0
   1320c:	movcc	r1, #92	; 0x5c
   13210:	strbcc	r1, [ip, r9]
   13214:	add	r9, r9, #1
   13218:	mov	r1, #0
   1321c:	b	13228 <__mempcpy_chk@plt+0x2218>
   13220:	mov	r1, #0
   13224:	mov	r2, r0
   13228:	str	r1, [fp, #-48]	; 0xffffffd0
   1322c:	mov	r0, r2
   13230:	and	r1, r2, #1
   13234:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13238:	add	r3, sl, #1
   1323c:	cmp	r2, r3
   13240:	bls	132a0 <__mempcpy_chk@plt+0x2290>
   13244:	mov	r2, r5
   13248:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1324c:	cmp	r1, #0
   13250:	movwne	r1, #1
   13254:	mvn	r5, r5
   13258:	orr	r5, r5, r1
   1325c:	tst	r5, #1
   13260:	bne	131d0 <__mempcpy_chk@plt+0x21c0>
   13264:	cmp	r9, r2
   13268:	movcc	r5, r4
   1326c:	movcc	r4, #39	; 0x27
   13270:	strbcc	r4, [ip, r9]
   13274:	movcc	r4, r5
   13278:	add	r5, r9, #1
   1327c:	add	r9, r9, #2
   13280:	cmp	r5, r2
   13284:	movcc	r1, r4
   13288:	movcc	r4, #39	; 0x27
   1328c:	strbcc	r4, [ip, r5]
   13290:	movcc	r4, r1
   13294:	mov	r1, #0
   13298:	str	r1, [fp, #-52]	; 0xffffffcc
   1329c:	b	131d0 <__mempcpy_chk@plt+0x21c0>
   132a0:	cmp	r1, #0
   132a4:	movwne	r1, #1
   132a8:	str	r1, [fp, #-56]	; 0xffffffc8
   132ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   132b0:	cmp	r0, #0
   132b4:	beq	12cdc <__mempcpy_chk@plt+0x1ccc>
   132b8:	b	12d10 <__mempcpy_chk@plt+0x1d00>
   132bc:	mov	r8, #0
   132c0:	mov	r4, r1
   132c4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   132c8:	tst	r0, #1
   132cc:	beq	12948 <__mempcpy_chk@plt+0x1938>
   132d0:	b	12bfc <__mempcpy_chk@plt+0x1bec>
   132d4:	mov	r7, sl
   132d8:	b	132e0 <__mempcpy_chk@plt+0x22d0>
   132dc:	mvn	r7, #0
   132e0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   132e4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   132e8:	ldr	r2, [sp, #88]	; 0x58
   132ec:	eor	r0, r1, #2
   132f0:	orr	r0, r0, r9
   132f4:	clz	r0, r0
   132f8:	lsr	r0, r0, #5
   132fc:	tst	r3, r0
   13300:	bne	13378 <__mempcpy_chk@plt+0x2368>
   13304:	subs	r0, r1, #2
   13308:	movwne	r0, #1
   1330c:	orr	r0, r3, r0
   13310:	tst	r0, #1
   13314:	ldreq	r0, [sp, #60]	; 0x3c
   13318:	eoreq	r0, r0, #1
   1331c:	tsteq	r0, #1
   13320:	bne	13454 <__mempcpy_chk@plt+0x2444>
   13324:	tst	r4, #1
   13328:	bne	13418 <__mempcpy_chk@plt+0x2408>
   1332c:	ldr	r6, [sp, #56]	; 0x38
   13330:	mov	r8, #0
   13334:	cmp	r6, #0
   13338:	beq	13450 <__mempcpy_chk@plt+0x2440>
   1333c:	mov	r1, #0
   13340:	mov	r4, #2
   13344:	cmp	r5, #0
   13348:	mov	r0, r2
   1334c:	mov	r3, #0
   13350:	str	r1, [sp, #84]	; 0x54
   13354:	beq	1219c <__mempcpy_chk@plt+0x118c>
   13358:	b	13454 <__mempcpy_chk@plt+0x2444>
   1335c:	movw	r0, #22400	; 0x5780
   13360:	movt	r0, #1
   13364:	str	r0, [sp, #76]	; 0x4c
   13368:	mov	r9, #0
   1336c:	tst	r8, #1
   13370:	beq	12434 <__mempcpy_chk@plt+0x1424>
   13374:	b	12574 <__mempcpy_chk@plt+0x1564>
   13378:	ldr	r1, [sp, #88]	; 0x58
   1337c:	mov	r0, #2
   13380:	tst	r1, #1
   13384:	movwne	r0, #4
   13388:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1338c:	ldr	r1, [fp, #12]
   13390:	cmp	r2, #2
   13394:	moveq	r2, r0
   13398:	b	133d0 <__mempcpy_chk@plt+0x23c0>
   1339c:	ldr	ip, [fp, #-84]	; 0xffffffac
   133a0:	ldr	lr, [fp, #-80]	; 0xffffffb0
   133a4:	ldr	r1, [fp, #12]
   133a8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   133ac:	b	133d0 <__mempcpy_chk@plt+0x23c0>
   133b0:	ldr	r1, [sp, #88]	; 0x58
   133b4:	ldr	lr, [fp, #-80]	; 0xffffffb0
   133b8:	ldr	r5, [sp, #28]
   133bc:	mov	r0, #2
   133c0:	tst	r1, #1
   133c4:	ldr	r1, [fp, #12]
   133c8:	movwne	r0, #4
   133cc:	mov	r2, r0
   133d0:	mov	r0, #0
   133d4:	bic	r1, r1, #2
   133d8:	str	r2, [sp]
   133dc:	mov	r2, lr
   133e0:	str	r0, [sp, #8]
   133e4:	ldr	r0, [sp, #72]	; 0x48
   133e8:	str	r1, [sp, #4]
   133ec:	mov	r1, r5
   133f0:	str	r0, [sp, #12]
   133f4:	ldr	r0, [sp, #76]	; 0x4c
   133f8:	str	r0, [sp, #16]
   133fc:	mov	r0, ip
   13400:	mov	r3, r7
   13404:	bl	12110 <__mempcpy_chk@plt+0x1100>
   13408:	mov	r9, r0
   1340c:	mov	r0, r9
   13410:	sub	sp, fp, #28
   13414:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13418:	mov	r0, #5
   1341c:	ldr	r1, [sp, #56]	; 0x38
   13420:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13424:	str	r0, [sp]
   13428:	ldr	r0, [fp, #12]
   1342c:	str	r0, [sp, #4]
   13430:	ldr	r0, [fp, #16]
   13434:	str	r0, [sp, #8]
   13438:	ldr	r0, [sp, #72]	; 0x48
   1343c:	str	r0, [sp, #12]
   13440:	ldr	r0, [sp, #76]	; 0x4c
   13444:	str	r0, [sp, #16]
   13448:	ldr	r0, [fp, #-84]	; 0xffffffac
   1344c:	b	13400 <__mempcpy_chk@plt+0x23f0>
   13450:	mov	r3, #0
   13454:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13458:	cmp	r1, #0
   1345c:	beq	13498 <__mempcpy_chk@plt+0x2488>
   13460:	ldr	r2, [fp, #-84]	; 0xffffffac
   13464:	tst	r3, #1
   13468:	bne	1349c <__mempcpy_chk@plt+0x248c>
   1346c:	ldrb	r0, [r1]
   13470:	cmp	r0, #0
   13474:	beq	1349c <__mempcpy_chk@plt+0x248c>
   13478:	add	r1, r1, #1
   1347c:	cmp	r9, r5
   13480:	strbcc	r0, [r2, r9]
   13484:	add	r9, r9, #1
   13488:	ldrb	r0, [r1], #1
   1348c:	cmp	r0, #0
   13490:	bne	1347c <__mempcpy_chk@plt+0x246c>
   13494:	b	1349c <__mempcpy_chk@plt+0x248c>
   13498:	ldr	r2, [fp, #-84]	; 0xffffffac
   1349c:	cmp	r9, r5
   134a0:	movcc	r0, #0
   134a4:	strbcc	r0, [r2, r9]
   134a8:	mov	r0, r9
   134ac:	sub	sp, fp, #28
   134b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134b4:	mov	r0, #4
   134b8:	b	13388 <__mempcpy_chk@plt+0x2378>
   134bc:	bl	10ff8 <abort@plt>
   134c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134c4:	add	fp, sp, #28
   134c8:	sub	sp, sp, #28
   134cc:	movw	r5, #24928	; 0x6160
   134d0:	cmp	r2, #0
   134d4:	mov	r4, r1
   134d8:	mov	r7, r0
   134dc:	str	r0, [sp, #20]
   134e0:	movt	r5, #2
   134e4:	movne	r5, r2
   134e8:	bl	10f38 <__errno_location@plt>
   134ec:	mov	sl, r0
   134f0:	ldr	r2, [r5, #40]	; 0x28
   134f4:	ldr	r3, [r5, #44]	; 0x2c
   134f8:	ldm	r5, {r0, r1}
   134fc:	orr	r8, r1, #1
   13500:	add	r9, r5, #8
   13504:	mov	r1, #0
   13508:	ldr	r6, [sl]
   1350c:	stm	sp, {r0, r8, r9}
   13510:	mov	r0, #0
   13514:	str	r2, [sp, #12]
   13518:	str	r3, [sp, #16]
   1351c:	mov	r2, r7
   13520:	mov	r3, r4
   13524:	str	r6, [sp, #24]
   13528:	mov	r6, r4
   1352c:	bl	12110 <__mempcpy_chk@plt+0x1100>
   13530:	add	r7, r0, #1
   13534:	mov	r0, r7
   13538:	bl	145a0 <__mempcpy_chk@plt+0x3590>
   1353c:	mov	r4, r0
   13540:	ldr	r0, [r5]
   13544:	ldr	r2, [r5, #44]	; 0x2c
   13548:	ldr	r1, [r5, #40]	; 0x28
   1354c:	mov	r3, r6
   13550:	stm	sp, {r0, r8, r9}
   13554:	str	r2, [sp, #16]
   13558:	ldr	r2, [sp, #20]
   1355c:	str	r1, [sp, #12]
   13560:	mov	r0, r4
   13564:	mov	r1, r7
   13568:	bl	12110 <__mempcpy_chk@plt+0x1100>
   1356c:	ldr	r0, [sp, #24]
   13570:	str	r0, [sl]
   13574:	mov	r0, r4
   13578:	sub	sp, fp, #28
   1357c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13580:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13584:	add	fp, sp, #28
   13588:	sub	sp, sp, #36	; 0x24
   1358c:	movw	r8, #24928	; 0x6160
   13590:	cmp	r3, #0
   13594:	mov	r4, r2
   13598:	str	r2, [sp, #24]
   1359c:	mov	r5, r1
   135a0:	mov	r6, r0
   135a4:	str	r0, [sp, #20]
   135a8:	movt	r8, #2
   135ac:	movne	r8, r3
   135b0:	bl	10f38 <__errno_location@plt>
   135b4:	str	r0, [sp, #28]
   135b8:	ldr	r1, [r8, #40]	; 0x28
   135bc:	ldr	r2, [r8, #44]	; 0x2c
   135c0:	ldr	r7, [r0]
   135c4:	cmp	r4, #0
   135c8:	add	sl, r8, #8
   135cc:	mov	r0, #0
   135d0:	ldm	r8, {r3, r9}
   135d4:	orreq	r9, r9, #1
   135d8:	stm	sp, {r3, r9, sl}
   135dc:	str	r1, [sp, #12]
   135e0:	str	r2, [sp, #16]
   135e4:	mov	r1, #0
   135e8:	mov	r2, r6
   135ec:	mov	r3, r5
   135f0:	str	r7, [sp, #32]
   135f4:	mov	r7, r5
   135f8:	bl	12110 <__mempcpy_chk@plt+0x1100>
   135fc:	add	r4, r0, #1
   13600:	mov	r5, r0
   13604:	mov	r0, r4
   13608:	bl	145a0 <__mempcpy_chk@plt+0x3590>
   1360c:	mov	r6, r0
   13610:	ldr	r0, [r8]
   13614:	ldr	r2, [r8, #44]	; 0x2c
   13618:	ldr	r1, [r8, #40]	; 0x28
   1361c:	mov	r3, r7
   13620:	stm	sp, {r0, r9, sl}
   13624:	str	r2, [sp, #16]
   13628:	ldr	r2, [sp, #20]
   1362c:	str	r1, [sp, #12]
   13630:	mov	r0, r6
   13634:	mov	r1, r4
   13638:	bl	12110 <__mempcpy_chk@plt+0x1100>
   1363c:	ldr	r0, [sp, #24]
   13640:	ldr	r1, [sp, #32]
   13644:	ldr	r2, [sp, #28]
   13648:	cmp	r0, #0
   1364c:	str	r1, [r2]
   13650:	strne	r5, [r0]
   13654:	mov	r0, r6
   13658:	sub	sp, fp, #28
   1365c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13660:	push	{r4, r5, r6, r7, fp, lr}
   13664:	add	fp, sp, #16
   13668:	movw	r4, #24864	; 0x6120
   1366c:	movt	r4, #2
   13670:	ldrd	r6, [r4]
   13674:	cmp	r7, #2
   13678:	blt	136a4 <__mempcpy_chk@plt+0x2694>
   1367c:	add	r5, r6, #12
   13680:	mov	r7, #0
   13684:	ldr	r0, [r5, r7, lsl #3]
   13688:	bl	11d38 <__mempcpy_chk@plt+0xd28>
   1368c:	ldr	r1, [r4, #4]
   13690:	add	r2, r7, #2
   13694:	add	r0, r7, #1
   13698:	mov	r7, r0
   1369c:	cmp	r2, r1
   136a0:	blt	13684 <__mempcpy_chk@plt+0x2674>
   136a4:	ldr	r0, [r6, #4]
   136a8:	movw	r5, #24976	; 0x6190
   136ac:	movt	r5, #2
   136b0:	cmp	r0, r5
   136b4:	beq	136c8 <__mempcpy_chk@plt+0x26b8>
   136b8:	bl	11d38 <__mempcpy_chk@plt+0xd28>
   136bc:	mov	r0, #256	; 0x100
   136c0:	str	r0, [r4, #8]
   136c4:	str	r5, [r4, #12]
   136c8:	add	r5, r4, #8
   136cc:	cmp	r6, r5
   136d0:	beq	136e0 <__mempcpy_chk@plt+0x26d0>
   136d4:	mov	r0, r6
   136d8:	bl	11d38 <__mempcpy_chk@plt+0xd28>
   136dc:	str	r5, [r4]
   136e0:	mov	r0, #1
   136e4:	str	r0, [r4, #4]
   136e8:	pop	{r4, r5, r6, r7, fp, pc}
   136ec:	movw	r3, #24928	; 0x6160
   136f0:	mvn	r2, #0
   136f4:	movt	r3, #2
   136f8:	b	136fc <__mempcpy_chk@plt+0x26ec>
   136fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13700:	add	fp, sp, #28
   13704:	sub	sp, sp, #44	; 0x2c
   13708:	mov	r7, r3
   1370c:	str	r2, [sp, #36]	; 0x24
   13710:	str	r1, [sp, #32]
   13714:	mov	r5, r0
   13718:	bl	10f38 <__errno_location@plt>
   1371c:	cmp	r5, #0
   13720:	bmi	13888 <__mempcpy_chk@plt+0x2878>
   13724:	cmn	r5, #-2147483647	; 0x80000001
   13728:	beq	13888 <__mempcpy_chk@plt+0x2878>
   1372c:	movw	r8, #24864	; 0x6120
   13730:	mov	r4, r0
   13734:	ldr	r0, [r0]
   13738:	movt	r8, #2
   1373c:	str	r4, [sp, #28]
   13740:	ldr	r1, [r8, #4]
   13744:	ldr	r6, [r8]
   13748:	str	r0, [sp, #24]
   1374c:	cmp	r1, r5
   13750:	ble	1375c <__mempcpy_chk@plt+0x274c>
   13754:	mov	sl, r6
   13758:	b	137c4 <__mempcpy_chk@plt+0x27b4>
   1375c:	mov	r0, #8
   13760:	add	r9, r8, #8
   13764:	str	r1, [fp, #-32]	; 0xffffffe0
   13768:	sub	r1, r5, r1
   1376c:	mvn	r3, #-2147483648	; 0x80000000
   13770:	str	r0, [sp]
   13774:	subs	r0, r6, r9
   13778:	add	r2, r1, #1
   1377c:	sub	r1, fp, #32
   13780:	movne	r0, r6
   13784:	bl	147a0 <__mempcpy_chk@plt+0x3790>
   13788:	mov	sl, r0
   1378c:	cmp	r6, r9
   13790:	str	r0, [r8]
   13794:	bne	137a0 <__mempcpy_chk@plt+0x2790>
   13798:	ldrd	r0, [r8, #8]
   1379c:	stm	sl, {r0, r1}
   137a0:	ldr	r1, [r8, #4]
   137a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   137a8:	add	r0, sl, r1, lsl #3
   137ac:	sub	r1, r2, r1
   137b0:	lsl	r2, r1, #3
   137b4:	mov	r1, #0
   137b8:	bl	10f50 <memset@plt>
   137bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   137c0:	str	r0, [r8, #4]
   137c4:	mov	r9, sl
   137c8:	ldm	r7, {r0, r1}
   137cc:	orr	r8, r1, #1
   137d0:	add	r1, r7, #8
   137d4:	ldr	r2, [r7, #40]	; 0x28
   137d8:	ldr	r3, [r7, #44]	; 0x2c
   137dc:	ldr	r6, [r9, r5, lsl #3]!
   137e0:	str	r1, [sp, #20]
   137e4:	ldr	r4, [r9, #4]!
   137e8:	stm	sp, {r0, r8}
   137ec:	add	r0, sp, #8
   137f0:	stm	r0, {r1, r2, r3}
   137f4:	ldr	r2, [sp, #32]
   137f8:	ldr	r3, [sp, #36]	; 0x24
   137fc:	mov	r1, r6
   13800:	mov	r0, r4
   13804:	bl	12110 <__mempcpy_chk@plt+0x1100>
   13808:	cmp	r6, r0
   1380c:	bhi	13870 <__mempcpy_chk@plt+0x2860>
   13810:	add	r6, r0, #1
   13814:	movw	r0, #24976	; 0x6190
   13818:	movt	r0, #2
   1381c:	str	r6, [sl, r5, lsl #3]
   13820:	cmp	r4, r0
   13824:	beq	13830 <__mempcpy_chk@plt+0x2820>
   13828:	mov	r0, r4
   1382c:	bl	11d38 <__mempcpy_chk@plt+0xd28>
   13830:	mov	r0, r6
   13834:	bl	145a0 <__mempcpy_chk@plt+0x3590>
   13838:	str	r0, [r9]
   1383c:	mov	r4, r0
   13840:	add	r3, sp, #8
   13844:	ldr	r0, [r7]
   13848:	ldr	r1, [r7, #40]	; 0x28
   1384c:	ldr	r2, [r7, #44]	; 0x2c
   13850:	stm	sp, {r0, r8}
   13854:	ldr	r0, [sp, #20]
   13858:	stm	r3, {r0, r1, r2}
   1385c:	ldr	r2, [sp, #32]
   13860:	ldr	r3, [sp, #36]	; 0x24
   13864:	mov	r0, r4
   13868:	mov	r1, r6
   1386c:	bl	12110 <__mempcpy_chk@plt+0x1100>
   13870:	ldr	r1, [sp, #24]
   13874:	ldr	r0, [sp, #28]
   13878:	str	r1, [r0]
   1387c:	mov	r0, r4
   13880:	sub	sp, fp, #28
   13884:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13888:	bl	10ff8 <abort@plt>
   1388c:	movw	r3, #24928	; 0x6160
   13890:	movt	r3, #2
   13894:	b	136fc <__mempcpy_chk@plt+0x26ec>
   13898:	movw	r3, #24928	; 0x6160
   1389c:	mov	r1, r0
   138a0:	mov	r0, #0
   138a4:	mvn	r2, #0
   138a8:	movt	r3, #2
   138ac:	b	136fc <__mempcpy_chk@plt+0x26ec>
   138b0:	movw	r3, #24928	; 0x6160
   138b4:	mov	r2, r1
   138b8:	mov	r1, r0
   138bc:	mov	r0, #0
   138c0:	movt	r3, #2
   138c4:	b	136fc <__mempcpy_chk@plt+0x26ec>
   138c8:	push	{fp, lr}
   138cc:	mov	fp, sp
   138d0:	sub	sp, sp, #48	; 0x30
   138d4:	vmov.i32	q8, #0	; 0x00000000
   138d8:	mov	ip, #32
   138dc:	mov	r3, sp
   138e0:	mov	lr, r2
   138e4:	cmp	r1, #10
   138e8:	add	r2, r3, #16
   138ec:	vst1.64	{d16-d17}, [r3], ip
   138f0:	vst1.64	{d16-d17}, [r2]
   138f4:	vst1.64	{d16-d17}, [r3]
   138f8:	beq	13918 <__mempcpy_chk@plt+0x2908>
   138fc:	str	r1, [sp]
   13900:	mov	r3, sp
   13904:	mov	r1, lr
   13908:	mvn	r2, #0
   1390c:	bl	136fc <__mempcpy_chk@plt+0x26ec>
   13910:	mov	sp, fp
   13914:	pop	{fp, pc}
   13918:	bl	10ff8 <abort@plt>
   1391c:	push	{r4, sl, fp, lr}
   13920:	add	fp, sp, #8
   13924:	sub	sp, sp, #48	; 0x30
   13928:	vmov.i32	q8, #0	; 0x00000000
   1392c:	mov	ip, r3
   13930:	mov	r3, sp
   13934:	mov	lr, #32
   13938:	cmp	r1, #10
   1393c:	add	r4, r3, #16
   13940:	vst1.64	{d16-d17}, [r3], lr
   13944:	vst1.64	{d16-d17}, [r4]
   13948:	vst1.64	{d16-d17}, [r3]
   1394c:	beq	1396c <__mempcpy_chk@plt+0x295c>
   13950:	str	r1, [sp]
   13954:	mov	r1, r2
   13958:	mov	r3, sp
   1395c:	mov	r2, ip
   13960:	bl	136fc <__mempcpy_chk@plt+0x26ec>
   13964:	sub	sp, fp, #8
   13968:	pop	{r4, sl, fp, pc}
   1396c:	bl	10ff8 <abort@plt>
   13970:	push	{fp, lr}
   13974:	mov	fp, sp
   13978:	sub	sp, sp, #48	; 0x30
   1397c:	vmov.i32	q8, #0	; 0x00000000
   13980:	mov	r3, sp
   13984:	mov	ip, #32
   13988:	cmp	r0, #10
   1398c:	add	r2, r3, #16
   13990:	vst1.64	{d16-d17}, [r3], ip
   13994:	vst1.64	{d16-d17}, [r2]
   13998:	vst1.64	{d16-d17}, [r3]
   1399c:	beq	139bc <__mempcpy_chk@plt+0x29ac>
   139a0:	str	r0, [sp]
   139a4:	mov	r3, sp
   139a8:	mov	r0, #0
   139ac:	mvn	r2, #0
   139b0:	bl	136fc <__mempcpy_chk@plt+0x26ec>
   139b4:	mov	sp, fp
   139b8:	pop	{fp, pc}
   139bc:	bl	10ff8 <abort@plt>
   139c0:	push	{fp, lr}
   139c4:	mov	fp, sp
   139c8:	sub	sp, sp, #48	; 0x30
   139cc:	vmov.i32	q8, #0	; 0x00000000
   139d0:	mov	r3, sp
   139d4:	mov	ip, #32
   139d8:	cmp	r0, #10
   139dc:	add	lr, r3, #16
   139e0:	vst1.64	{d16-d17}, [r3], ip
   139e4:	vst1.64	{d16-d17}, [lr]
   139e8:	vst1.64	{d16-d17}, [r3]
   139ec:	beq	13a08 <__mempcpy_chk@plt+0x29f8>
   139f0:	str	r0, [sp]
   139f4:	mov	r3, sp
   139f8:	mov	r0, #0
   139fc:	bl	136fc <__mempcpy_chk@plt+0x26ec>
   13a00:	mov	sp, fp
   13a04:	pop	{fp, pc}
   13a08:	bl	10ff8 <abort@plt>
   13a0c:	push	{r4, sl, fp, lr}
   13a10:	add	fp, sp, #8
   13a14:	sub	sp, sp, #48	; 0x30
   13a18:	mov	lr, r0
   13a1c:	movw	r0, #24928	; 0x6160
   13a20:	mov	ip, r1
   13a24:	mov	r1, #32
   13a28:	mov	r4, #1
   13a2c:	movt	r0, #2
   13a30:	add	r3, r0, #16
   13a34:	vld1.64	{d16-d17}, [r0], r1
   13a38:	vld1.64	{d20-d21}, [r0]
   13a3c:	vld1.64	{d18-d19}, [r3]
   13a40:	mov	r3, sp
   13a44:	add	r0, r3, #32
   13a48:	add	r1, r3, #16
   13a4c:	vst1.64	{d20-d21}, [r0]
   13a50:	mov	r0, #28
   13a54:	vst1.64	{d18-d19}, [r1]
   13a58:	mov	r1, r3
   13a5c:	and	r0, r0, r2, lsr #3
   13a60:	and	r2, r2, #31
   13a64:	vst1.64	{d16-d17}, [r1], r0
   13a68:	ldr	r0, [r1, #8]
   13a6c:	bic	r4, r4, r0, lsr r2
   13a70:	eor	r0, r0, r4, lsl r2
   13a74:	mov	r2, ip
   13a78:	str	r0, [r1, #8]
   13a7c:	mov	r0, #0
   13a80:	mov	r1, lr
   13a84:	bl	136fc <__mempcpy_chk@plt+0x26ec>
   13a88:	sub	sp, fp, #8
   13a8c:	pop	{r4, sl, fp, pc}
   13a90:	push	{fp, lr}
   13a94:	mov	fp, sp
   13a98:	sub	sp, sp, #48	; 0x30
   13a9c:	mov	ip, r0
   13aa0:	movw	r0, #24928	; 0x6160
   13aa4:	mov	r2, #32
   13aa8:	movt	r0, #2
   13aac:	add	r3, r0, #16
   13ab0:	vld1.64	{d16-d17}, [r0], r2
   13ab4:	vld1.64	{d20-d21}, [r0]
   13ab8:	vld1.64	{d18-d19}, [r3]
   13abc:	mov	r3, sp
   13ac0:	add	r0, r3, #32
   13ac4:	add	r2, r3, #16
   13ac8:	vst1.64	{d20-d21}, [r0]
   13acc:	mov	r0, #28
   13ad0:	vst1.64	{d18-d19}, [r2]
   13ad4:	mov	r2, r3
   13ad8:	and	r0, r0, r1, lsr #3
   13adc:	and	r1, r1, #31
   13ae0:	vst1.64	{d16-d17}, [r2], r0
   13ae4:	mov	r0, #1
   13ae8:	ldr	lr, [r2, #8]
   13aec:	bic	r0, r0, lr, lsr r1
   13af0:	eor	r0, lr, r0, lsl r1
   13af4:	mov	r1, ip
   13af8:	str	r0, [r2, #8]
   13afc:	mov	r0, #0
   13b00:	mvn	r2, #0
   13b04:	bl	136fc <__mempcpy_chk@plt+0x26ec>
   13b08:	mov	sp, fp
   13b0c:	pop	{fp, pc}
   13b10:	push	{fp, lr}
   13b14:	mov	fp, sp
   13b18:	sub	sp, sp, #48	; 0x30
   13b1c:	mov	r1, r0
   13b20:	movw	r0, #24928	; 0x6160
   13b24:	mov	r3, #32
   13b28:	movt	r0, #2
   13b2c:	add	r2, r0, #16
   13b30:	vld1.64	{d16-d17}, [r0], r3
   13b34:	mov	r3, sp
   13b38:	vld1.64	{d18-d19}, [r2]
   13b3c:	vld1.64	{d20-d21}, [r0]
   13b40:	add	r2, r3, #16
   13b44:	add	r0, r3, #32
   13b48:	vst1.64	{d18-d19}, [r2]
   13b4c:	vst1.64	{d20-d21}, [r0]
   13b50:	mov	r0, #12
   13b54:	mov	r2, r3
   13b58:	vst1.64	{d16-d17}, [r2], r0
   13b5c:	ldr	r0, [r2]
   13b60:	orr	r0, r0, #67108864	; 0x4000000
   13b64:	str	r0, [r2]
   13b68:	mov	r0, #0
   13b6c:	mvn	r2, #0
   13b70:	bl	136fc <__mempcpy_chk@plt+0x26ec>
   13b74:	mov	sp, fp
   13b78:	pop	{fp, pc}
   13b7c:	push	{fp, lr}
   13b80:	mov	fp, sp
   13b84:	sub	sp, sp, #48	; 0x30
   13b88:	mov	ip, r1
   13b8c:	mov	r1, r0
   13b90:	movw	r0, #24928	; 0x6160
   13b94:	mov	r2, #32
   13b98:	movt	r0, #2
   13b9c:	add	r3, r0, #16
   13ba0:	vld1.64	{d16-d17}, [r0], r2
   13ba4:	vld1.64	{d18-d19}, [r3]
   13ba8:	vld1.64	{d20-d21}, [r0]
   13bac:	mov	r3, sp
   13bb0:	add	r2, r3, #16
   13bb4:	add	r0, r3, #32
   13bb8:	vst1.64	{d18-d19}, [r2]
   13bbc:	vst1.64	{d20-d21}, [r0]
   13bc0:	mov	r0, #12
   13bc4:	mov	r2, r3
   13bc8:	vst1.64	{d16-d17}, [r2], r0
   13bcc:	ldr	r0, [r2]
   13bd0:	orr	r0, r0, #67108864	; 0x4000000
   13bd4:	str	r0, [r2]
   13bd8:	mov	r0, #0
   13bdc:	mov	r2, ip
   13be0:	bl	136fc <__mempcpy_chk@plt+0x26ec>
   13be4:	mov	sp, fp
   13be8:	pop	{fp, pc}
   13bec:	push	{r4, sl, fp, lr}
   13bf0:	add	fp, sp, #8
   13bf4:	sub	sp, sp, #96	; 0x60
   13bf8:	vmov.i32	q8, #0	; 0x00000000
   13bfc:	mov	ip, r2
   13c00:	mov	r2, sp
   13c04:	mov	r4, #28
   13c08:	cmp	r1, #10
   13c0c:	mov	r3, r2
   13c10:	add	lr, r2, #16
   13c14:	vst1.64	{d16-d17}, [r3], r4
   13c18:	vst1.64	{d16-d17}, [lr]
   13c1c:	vst1.32	{d16-d17}, [r3]
   13c20:	beq	13c70 <__mempcpy_chk@plt+0x2c60>
   13c24:	vld1.64	{d16-d17}, [r2], r4
   13c28:	vld1.64	{d18-d19}, [lr]
   13c2c:	add	r3, sp, #48	; 0x30
   13c30:	vld1.32	{d20-d21}, [r2]
   13c34:	add	r2, r3, #20
   13c38:	add	r4, r3, #4
   13c3c:	vst1.32	{d18-d19}, [r2]
   13c40:	add	r2, r3, #32
   13c44:	vst1.32	{d16-d17}, [r4]
   13c48:	vst1.32	{d20-d21}, [r2]
   13c4c:	str	r1, [sp, #48]	; 0x30
   13c50:	mvn	r2, #0
   13c54:	ldr	r1, [sp, #60]	; 0x3c
   13c58:	orr	r1, r1, #67108864	; 0x4000000
   13c5c:	str	r1, [sp, #60]	; 0x3c
   13c60:	mov	r1, ip
   13c64:	bl	136fc <__mempcpy_chk@plt+0x26ec>
   13c68:	sub	sp, fp, #8
   13c6c:	pop	{r4, sl, fp, pc}
   13c70:	bl	10ff8 <abort@plt>
   13c74:	push	{r4, r5, r6, sl, fp, lr}
   13c78:	add	fp, sp, #16
   13c7c:	sub	sp, sp, #48	; 0x30
   13c80:	mov	ip, r3
   13c84:	movw	r3, #24928	; 0x6160
   13c88:	mov	r6, #32
   13c8c:	cmp	r1, #0
   13c90:	mov	r4, sp
   13c94:	movt	r3, #2
   13c98:	cmpne	r2, #0
   13c9c:	add	r5, r4, #16
   13ca0:	add	lr, r3, #16
   13ca4:	vld1.64	{d16-d17}, [r3], r6
   13ca8:	vld1.64	{d18-d19}, [lr]
   13cac:	vld1.64	{d20-d21}, [r3]
   13cb0:	mov	r3, #10
   13cb4:	vst1.64	{d16-d17}, [r4], r6
   13cb8:	vst1.64	{d18-d19}, [r5]
   13cbc:	vst1.64	{d20-d21}, [r4]
   13cc0:	str	r3, [sp]
   13cc4:	bne	13ccc <__mempcpy_chk@plt+0x2cbc>
   13cc8:	bl	10ff8 <abort@plt>
   13ccc:	str	r2, [sp, #44]	; 0x2c
   13cd0:	str	r1, [sp, #40]	; 0x28
   13cd4:	mov	r3, sp
   13cd8:	mov	r1, ip
   13cdc:	mvn	r2, #0
   13ce0:	bl	136fc <__mempcpy_chk@plt+0x26ec>
   13ce4:	sub	sp, fp, #16
   13ce8:	pop	{r4, r5, r6, sl, fp, pc}
   13cec:	push	{r4, r5, r6, sl, fp, lr}
   13cf0:	add	fp, sp, #16
   13cf4:	sub	sp, sp, #48	; 0x30
   13cf8:	mov	lr, r3
   13cfc:	movw	r3, #24928	; 0x6160
   13d00:	mov	r6, #32
   13d04:	cmp	r1, #0
   13d08:	mov	r4, sp
   13d0c:	movt	r3, #2
   13d10:	cmpne	r2, #0
   13d14:	add	r5, r4, #16
   13d18:	add	ip, r3, #16
   13d1c:	vld1.64	{d16-d17}, [r3], r6
   13d20:	vld1.64	{d18-d19}, [ip]
   13d24:	vld1.64	{d20-d21}, [r3]
   13d28:	mov	r3, #10
   13d2c:	vst1.64	{d16-d17}, [r4], r6
   13d30:	vst1.64	{d18-d19}, [r5]
   13d34:	vst1.64	{d20-d21}, [r4]
   13d38:	str	r3, [sp]
   13d3c:	bne	13d44 <__mempcpy_chk@plt+0x2d34>
   13d40:	bl	10ff8 <abort@plt>
   13d44:	ldr	ip, [fp, #8]
   13d48:	str	r2, [sp, #44]	; 0x2c
   13d4c:	str	r1, [sp, #40]	; 0x28
   13d50:	mov	r3, sp
   13d54:	mov	r1, lr
   13d58:	mov	r2, ip
   13d5c:	bl	136fc <__mempcpy_chk@plt+0x26ec>
   13d60:	sub	sp, fp, #16
   13d64:	pop	{r4, r5, r6, sl, fp, pc}
   13d68:	push	{r4, sl, fp, lr}
   13d6c:	add	fp, sp, #8
   13d70:	sub	sp, sp, #48	; 0x30
   13d74:	movw	r3, #24928	; 0x6160
   13d78:	mov	lr, #32
   13d7c:	mov	ip, r2
   13d80:	cmp	r0, #0
   13d84:	movt	r3, #2
   13d88:	cmpne	r1, #0
   13d8c:	add	r2, r3, #16
   13d90:	vld1.64	{d16-d17}, [r3], lr
   13d94:	vld1.64	{d20-d21}, [r3]
   13d98:	vld1.64	{d18-d19}, [r2]
   13d9c:	mov	r2, sp
   13da0:	add	r4, r2, #16
   13da4:	vst1.64	{d16-d17}, [r2], lr
   13da8:	vst1.64	{d20-d21}, [r2]
   13dac:	mov	r2, #10
   13db0:	vst1.64	{d18-d19}, [r4]
   13db4:	str	r2, [sp]
   13db8:	bne	13dc0 <__mempcpy_chk@plt+0x2db0>
   13dbc:	bl	10ff8 <abort@plt>
   13dc0:	str	r1, [sp, #44]	; 0x2c
   13dc4:	str	r0, [sp, #40]	; 0x28
   13dc8:	mov	r3, sp
   13dcc:	mov	r0, #0
   13dd0:	mov	r1, ip
   13dd4:	mvn	r2, #0
   13dd8:	bl	136fc <__mempcpy_chk@plt+0x26ec>
   13ddc:	sub	sp, fp, #8
   13de0:	pop	{r4, sl, fp, pc}
   13de4:	push	{r4, r5, fp, lr}
   13de8:	add	fp, sp, #8
   13dec:	sub	sp, sp, #48	; 0x30
   13df0:	mov	ip, r3
   13df4:	movw	r3, #24928	; 0x6160
   13df8:	mov	r4, #32
   13dfc:	mov	lr, r2
   13e00:	cmp	r0, #0
   13e04:	movt	r3, #2
   13e08:	cmpne	r1, #0
   13e0c:	add	r2, r3, #16
   13e10:	vld1.64	{d16-d17}, [r3], r4
   13e14:	vld1.64	{d20-d21}, [r3]
   13e18:	vld1.64	{d18-d19}, [r2]
   13e1c:	mov	r2, sp
   13e20:	add	r5, r2, #16
   13e24:	vst1.64	{d16-d17}, [r2], r4
   13e28:	vst1.64	{d20-d21}, [r2]
   13e2c:	mov	r2, #10
   13e30:	vst1.64	{d18-d19}, [r5]
   13e34:	str	r2, [sp]
   13e38:	bne	13e40 <__mempcpy_chk@plt+0x2e30>
   13e3c:	bl	10ff8 <abort@plt>
   13e40:	str	r1, [sp, #44]	; 0x2c
   13e44:	str	r0, [sp, #40]	; 0x28
   13e48:	mov	r3, sp
   13e4c:	mov	r0, #0
   13e50:	mov	r1, lr
   13e54:	mov	r2, ip
   13e58:	bl	136fc <__mempcpy_chk@plt+0x26ec>
   13e5c:	sub	sp, fp, #8
   13e60:	pop	{r4, r5, fp, pc}
   13e64:	movw	r3, #24816	; 0x60f0
   13e68:	movt	r3, #2
   13e6c:	b	136fc <__mempcpy_chk@plt+0x26ec>
   13e70:	movw	r3, #24816	; 0x60f0
   13e74:	mov	r2, r1
   13e78:	mov	r1, r0
   13e7c:	mov	r0, #0
   13e80:	movt	r3, #2
   13e84:	b	136fc <__mempcpy_chk@plt+0x26ec>
   13e88:	movw	r3, #24816	; 0x60f0
   13e8c:	mvn	r2, #0
   13e90:	movt	r3, #2
   13e94:	b	136fc <__mempcpy_chk@plt+0x26ec>
   13e98:	movw	r3, #24816	; 0x60f0
   13e9c:	mov	r1, r0
   13ea0:	mov	r0, #0
   13ea4:	mvn	r2, #0
   13ea8:	movt	r3, #2
   13eac:	b	136fc <__mempcpy_chk@plt+0x26ec>
   13eb0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13eb4:	add	fp, sp, #24
   13eb8:	sub	sp, sp, #32
   13ebc:	ldr	r6, [fp, #12]
   13ec0:	ldr	r7, [fp, #8]
   13ec4:	mov	r4, r2
   13ec8:	mov	r8, r0
   13ecc:	cmp	r1, #0
   13ed0:	beq	13ef8 <__mempcpy_chk@plt+0x2ee8>
   13ed4:	movw	r2, #22488	; 0x57d8
   13ed8:	mov	r5, r1
   13edc:	str	r3, [sp, #4]
   13ee0:	str	r4, [sp]
   13ee4:	mov	r0, r8
   13ee8:	mov	r1, #1
   13eec:	movt	r2, #1
   13ef0:	mov	r3, r5
   13ef4:	b	13f10 <__mempcpy_chk@plt+0x2f00>
   13ef8:	movw	r2, #22500	; 0x57e4
   13efc:	str	r3, [sp]
   13f00:	mov	r0, r8
   13f04:	mov	r1, #1
   13f08:	mov	r3, r4
   13f0c:	movt	r2, #1
   13f10:	bl	10f74 <__fprintf_chk@plt>
   13f14:	movw	r1, #22507	; 0x57eb
   13f18:	mov	r0, #0
   13f1c:	mov	r2, #5
   13f20:	movt	r1, #1
   13f24:	bl	10e30 <dcgettext@plt>
   13f28:	movw	r2, #23225	; 0x5ab9
   13f2c:	mov	r3, r0
   13f30:	movw	r0, #2022	; 0x7e6
   13f34:	mov	r1, #1
   13f38:	movt	r2, #1
   13f3c:	str	r0, [sp]
   13f40:	mov	r0, r8
   13f44:	bl	10f74 <__fprintf_chk@plt>
   13f48:	movw	r4, #20846	; 0x516e
   13f4c:	mov	r1, r8
   13f50:	movt	r4, #1
   13f54:	mov	r0, r4
   13f58:	bl	10dc4 <fputs_unlocked@plt>
   13f5c:	movw	r1, #22511	; 0x57ef
   13f60:	mov	r0, #0
   13f64:	mov	r2, #5
   13f68:	movt	r1, #1
   13f6c:	bl	10e30 <dcgettext@plt>
   13f70:	movw	r3, #22682	; 0x589a
   13f74:	mov	r2, r0
   13f78:	mov	r0, r8
   13f7c:	mov	r1, #1
   13f80:	movt	r3, #1
   13f84:	bl	10f74 <__fprintf_chk@plt>
   13f88:	mov	r0, r4
   13f8c:	mov	r1, r8
   13f90:	bl	10dc4 <fputs_unlocked@plt>
   13f94:	cmp	r6, #9
   13f98:	bhi	13fd4 <__mempcpy_chk@plt+0x2fc4>
   13f9c:	add	r0, pc, #0
   13fa0:	ldr	pc, [r0, r6, lsl #2]
   13fa4:	andeq	r3, r1, ip, asr #31
   13fa8:	andeq	r3, r1, r0, ror #31
   13fac:	andeq	r4, r1, r0, lsl r0
   13fb0:	andeq	r4, r1, r8, lsr r0
   13fb4:	andeq	r4, r1, r0, rrx
   13fb8:	andeq	r4, r1, r8, lsl #1
   13fbc:	strheq	r4, [r1], -r0
   13fc0:	andeq	r4, r1, r8, ror #1
   13fc4:	muleq	r1, r0, r1
   13fc8:	andeq	r4, r1, r8, lsr r1
   13fcc:	sub	sp, fp, #24
   13fd0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13fd4:	movw	r1, #23035	; 0x59fb
   13fd8:	movt	r1, #1
   13fdc:	b	14140 <__mempcpy_chk@plt+0x3130>
   13fe0:	movw	r1, #22716	; 0x58bc
   13fe4:	mov	r0, #0
   13fe8:	mov	r2, #5
   13fec:	movt	r1, #1
   13ff0:	bl	10e30 <dcgettext@plt>
   13ff4:	ldr	r3, [r7]
   13ff8:	mov	r2, r0
   13ffc:	mov	r0, r8
   14000:	mov	r1, #1
   14004:	sub	sp, fp, #24
   14008:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1400c:	b	10f74 <__fprintf_chk@plt>
   14010:	movw	r1, #22732	; 0x58cc
   14014:	mov	r0, #0
   14018:	mov	r2, #5
   1401c:	movt	r1, #1
   14020:	bl	10e30 <dcgettext@plt>
   14024:	mov	r2, r0
   14028:	ldr	r3, [r7]
   1402c:	ldr	r0, [r7, #4]
   14030:	str	r0, [sp]
   14034:	b	14124 <__mempcpy_chk@plt+0x3114>
   14038:	movw	r1, #22755	; 0x58e3
   1403c:	mov	r0, #0
   14040:	mov	r2, #5
   14044:	movt	r1, #1
   14048:	bl	10e30 <dcgettext@plt>
   1404c:	mov	r2, r0
   14050:	ldr	r3, [r7]
   14054:	ldmib	r7, {r0, r1}
   14058:	stm	sp, {r0, r1}
   1405c:	b	14124 <__mempcpy_chk@plt+0x3114>
   14060:	movw	r1, #22783	; 0x58ff
   14064:	mov	r0, #0
   14068:	mov	r2, #5
   1406c:	movt	r1, #1
   14070:	bl	10e30 <dcgettext@plt>
   14074:	ldr	r3, [r7]
   14078:	mov	r2, r0
   1407c:	ldmib	r7, {r0, r1, r7}
   14080:	stm	sp, {r0, r1, r7}
   14084:	b	14124 <__mempcpy_chk@plt+0x3114>
   14088:	movw	r1, #22815	; 0x591f
   1408c:	mov	r0, #0
   14090:	mov	r2, #5
   14094:	movt	r1, #1
   14098:	bl	10e30 <dcgettext@plt>
   1409c:	ldr	r3, [r7]
   140a0:	mov	r2, r0
   140a4:	ldmib	r7, {r0, r1, r6, r7}
   140a8:	stm	sp, {r0, r1, r6, r7}
   140ac:	b	14124 <__mempcpy_chk@plt+0x3114>
   140b0:	movw	r1, #22851	; 0x5943
   140b4:	mov	r0, #0
   140b8:	mov	r2, #5
   140bc:	movt	r1, #1
   140c0:	bl	10e30 <dcgettext@plt>
   140c4:	mov	r2, r0
   140c8:	ldr	r3, [r7]
   140cc:	ldmib	r7, {r0, r1, r6}
   140d0:	ldr	r5, [r7, #16]
   140d4:	ldr	r7, [r7, #20]
   140d8:	stm	sp, {r0, r1, r6}
   140dc:	str	r5, [sp, #12]
   140e0:	str	r7, [sp, #16]
   140e4:	b	14124 <__mempcpy_chk@plt+0x3114>
   140e8:	movw	r1, #22891	; 0x596b
   140ec:	mov	r0, #0
   140f0:	mov	r2, #5
   140f4:	movt	r1, #1
   140f8:	bl	10e30 <dcgettext@plt>
   140fc:	mov	r2, r0
   14100:	ldr	r3, [r7]
   14104:	ldmib	r7, {r0, r1, r6}
   14108:	ldr	r5, [r7, #16]
   1410c:	ldr	r4, [r7, #20]
   14110:	ldr	r7, [r7, #24]
   14114:	stm	sp, {r0, r1, r6}
   14118:	str	r5, [sp, #12]
   1411c:	str	r4, [sp, #16]
   14120:	str	r7, [sp, #20]
   14124:	mov	r0, r8
   14128:	mov	r1, #1
   1412c:	bl	10f74 <__fprintf_chk@plt>
   14130:	sub	sp, fp, #24
   14134:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14138:	movw	r1, #22983	; 0x59c7
   1413c:	movt	r1, #1
   14140:	mov	r0, #0
   14144:	mov	r2, #5
   14148:	bl	10e30 <dcgettext@plt>
   1414c:	mov	ip, r0
   14150:	ldr	r3, [r7]
   14154:	ldr	r0, [r7, #4]
   14158:	ldr	r1, [r7, #8]
   1415c:	ldr	r6, [r7, #12]
   14160:	ldr	r5, [r7, #16]
   14164:	ldr	r4, [r7, #20]
   14168:	ldr	r2, [r7, #24]
   1416c:	ldr	lr, [r7, #28]
   14170:	ldr	r7, [r7, #32]
   14174:	stm	sp, {r0, r1, r6}
   14178:	str	r5, [sp, #12]
   1417c:	str	r4, [sp, #16]
   14180:	str	r2, [sp, #20]
   14184:	str	lr, [sp, #24]
   14188:	str	r7, [sp, #28]
   1418c:	b	141d4 <__mempcpy_chk@plt+0x31c4>
   14190:	movw	r1, #22935	; 0x5997
   14194:	mov	r0, #0
   14198:	mov	r2, #5
   1419c:	movt	r1, #1
   141a0:	bl	10e30 <dcgettext@plt>
   141a4:	mov	ip, r0
   141a8:	ldr	r3, [r7]
   141ac:	ldmib	r7, {r0, r1, r6}
   141b0:	ldr	r5, [r7, #16]
   141b4:	ldr	r4, [r7, #20]
   141b8:	ldr	r2, [r7, #24]
   141bc:	ldr	r7, [r7, #28]
   141c0:	stm	sp, {r0, r1, r6}
   141c4:	str	r5, [sp, #12]
   141c8:	str	r4, [sp, #16]
   141cc:	str	r2, [sp, #20]
   141d0:	str	r7, [sp, #24]
   141d4:	mov	r0, r8
   141d8:	mov	r1, #1
   141dc:	mov	r2, ip
   141e0:	bl	10f74 <__fprintf_chk@plt>
   141e4:	sub	sp, fp, #24
   141e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   141ec:	push	{r4, sl, fp, lr}
   141f0:	add	fp, sp, #8
   141f4:	sub	sp, sp, #8
   141f8:	ldr	ip, [fp, #8]
   141fc:	mov	lr, #0
   14200:	ldr	r4, [ip, lr, lsl #2]
   14204:	add	lr, lr, #1
   14208:	cmp	r4, #0
   1420c:	bne	14200 <__mempcpy_chk@plt+0x31f0>
   14210:	sub	r4, lr, #1
   14214:	str	ip, [sp]
   14218:	str	r4, [sp, #4]
   1421c:	bl	13eb0 <__mempcpy_chk@plt+0x2ea0>
   14220:	sub	sp, fp, #8
   14224:	pop	{r4, sl, fp, pc}
   14228:	push	{fp, lr}
   1422c:	mov	fp, sp
   14230:	sub	sp, sp, #48	; 0x30
   14234:	ldr	ip, [fp, #8]
   14238:	ldr	lr, [ip]
   1423c:	cmp	lr, #0
   14240:	str	lr, [sp, #8]
   14244:	beq	142e0 <__mempcpy_chk@plt+0x32d0>
   14248:	ldr	lr, [ip, #4]
   1424c:	cmp	lr, #0
   14250:	str	lr, [sp, #12]
   14254:	beq	142e8 <__mempcpy_chk@plt+0x32d8>
   14258:	ldr	lr, [ip, #8]
   1425c:	cmp	lr, #0
   14260:	str	lr, [sp, #16]
   14264:	beq	142f0 <__mempcpy_chk@plt+0x32e0>
   14268:	ldr	lr, [ip, #12]
   1426c:	cmp	lr, #0
   14270:	str	lr, [sp, #20]
   14274:	beq	142f8 <__mempcpy_chk@plt+0x32e8>
   14278:	ldr	lr, [ip, #16]
   1427c:	cmp	lr, #0
   14280:	str	lr, [sp, #24]
   14284:	beq	14300 <__mempcpy_chk@plt+0x32f0>
   14288:	ldr	lr, [ip, #20]
   1428c:	cmp	lr, #0
   14290:	str	lr, [sp, #28]
   14294:	beq	14308 <__mempcpy_chk@plt+0x32f8>
   14298:	ldr	lr, [ip, #24]
   1429c:	cmp	lr, #0
   142a0:	str	lr, [sp, #32]
   142a4:	beq	14310 <__mempcpy_chk@plt+0x3300>
   142a8:	ldr	lr, [ip, #28]
   142ac:	cmp	lr, #0
   142b0:	str	lr, [sp, #36]	; 0x24
   142b4:	beq	14318 <__mempcpy_chk@plt+0x3308>
   142b8:	ldr	lr, [ip, #32]
   142bc:	cmp	lr, #0
   142c0:	str	lr, [sp, #40]	; 0x28
   142c4:	beq	14320 <__mempcpy_chk@plt+0x3310>
   142c8:	ldr	lr, [ip, #36]	; 0x24
   142cc:	mov	ip, #10
   142d0:	cmp	lr, #0
   142d4:	str	lr, [sp, #44]	; 0x2c
   142d8:	movweq	ip, #9
   142dc:	b	14324 <__mempcpy_chk@plt+0x3314>
   142e0:	mov	ip, #0
   142e4:	b	14324 <__mempcpy_chk@plt+0x3314>
   142e8:	mov	ip, #1
   142ec:	b	14324 <__mempcpy_chk@plt+0x3314>
   142f0:	mov	ip, #2
   142f4:	b	14324 <__mempcpy_chk@plt+0x3314>
   142f8:	mov	ip, #3
   142fc:	b	14324 <__mempcpy_chk@plt+0x3314>
   14300:	mov	ip, #4
   14304:	b	14324 <__mempcpy_chk@plt+0x3314>
   14308:	mov	ip, #5
   1430c:	b	14324 <__mempcpy_chk@plt+0x3314>
   14310:	mov	ip, #6
   14314:	b	14324 <__mempcpy_chk@plt+0x3314>
   14318:	mov	ip, #7
   1431c:	b	14324 <__mempcpy_chk@plt+0x3314>
   14320:	mov	ip, #8
   14324:	add	lr, sp, #8
   14328:	str	ip, [sp, #4]
   1432c:	str	lr, [sp]
   14330:	bl	13eb0 <__mempcpy_chk@plt+0x2ea0>
   14334:	mov	sp, fp
   14338:	pop	{fp, pc}
   1433c:	push	{fp, lr}
   14340:	mov	fp, sp
   14344:	sub	sp, sp, #56	; 0x38
   14348:	add	ip, fp, #8
   1434c:	str	ip, [sp, #12]
   14350:	ldr	lr, [fp, #8]
   14354:	cmp	lr, #0
   14358:	str	lr, [sp, #16]
   1435c:	beq	143f8 <__mempcpy_chk@plt+0x33e8>
   14360:	ldr	lr, [ip, #4]
   14364:	cmp	lr, #0
   14368:	str	lr, [sp, #20]
   1436c:	beq	14400 <__mempcpy_chk@plt+0x33f0>
   14370:	ldr	lr, [ip, #8]
   14374:	cmp	lr, #0
   14378:	str	lr, [sp, #24]
   1437c:	beq	14408 <__mempcpy_chk@plt+0x33f8>
   14380:	ldr	lr, [ip, #12]
   14384:	cmp	lr, #0
   14388:	str	lr, [sp, #28]
   1438c:	beq	14410 <__mempcpy_chk@plt+0x3400>
   14390:	ldr	lr, [ip, #16]
   14394:	cmp	lr, #0
   14398:	str	lr, [sp, #32]
   1439c:	beq	14418 <__mempcpy_chk@plt+0x3408>
   143a0:	ldr	lr, [ip, #20]
   143a4:	cmp	lr, #0
   143a8:	str	lr, [sp, #36]	; 0x24
   143ac:	beq	14420 <__mempcpy_chk@plt+0x3410>
   143b0:	ldr	lr, [ip, #24]
   143b4:	cmp	lr, #0
   143b8:	str	lr, [sp, #40]	; 0x28
   143bc:	beq	14428 <__mempcpy_chk@plt+0x3418>
   143c0:	ldr	lr, [ip, #28]
   143c4:	cmp	lr, #0
   143c8:	str	lr, [sp, #44]	; 0x2c
   143cc:	beq	14430 <__mempcpy_chk@plt+0x3420>
   143d0:	ldr	lr, [ip, #32]
   143d4:	cmp	lr, #0
   143d8:	str	lr, [sp, #48]	; 0x30
   143dc:	beq	14438 <__mempcpy_chk@plt+0x3428>
   143e0:	ldr	lr, [ip, #36]	; 0x24
   143e4:	mov	ip, #10
   143e8:	cmp	lr, #0
   143ec:	str	lr, [sp, #52]	; 0x34
   143f0:	movweq	ip, #9
   143f4:	b	1443c <__mempcpy_chk@plt+0x342c>
   143f8:	mov	ip, #0
   143fc:	b	1443c <__mempcpy_chk@plt+0x342c>
   14400:	mov	ip, #1
   14404:	b	1443c <__mempcpy_chk@plt+0x342c>
   14408:	mov	ip, #2
   1440c:	b	1443c <__mempcpy_chk@plt+0x342c>
   14410:	mov	ip, #3
   14414:	b	1443c <__mempcpy_chk@plt+0x342c>
   14418:	mov	ip, #4
   1441c:	b	1443c <__mempcpy_chk@plt+0x342c>
   14420:	mov	ip, #5
   14424:	b	1443c <__mempcpy_chk@plt+0x342c>
   14428:	mov	ip, #6
   1442c:	b	1443c <__mempcpy_chk@plt+0x342c>
   14430:	mov	ip, #7
   14434:	b	1443c <__mempcpy_chk@plt+0x342c>
   14438:	mov	ip, #8
   1443c:	add	lr, sp, #16
   14440:	str	ip, [sp, #4]
   14444:	str	lr, [sp]
   14448:	bl	13eb0 <__mempcpy_chk@plt+0x2ea0>
   1444c:	mov	sp, fp
   14450:	pop	{fp, pc}
   14454:	push	{fp, lr}
   14458:	mov	fp, sp
   1445c:	movw	r0, #24900	; 0x6144
   14460:	movt	r0, #2
   14464:	ldr	r1, [r0]
   14468:	movw	r0, #20846	; 0x516e
   1446c:	movt	r0, #1
   14470:	bl	10dc4 <fputs_unlocked@plt>
   14474:	movw	r1, #23095	; 0x5a37
   14478:	mov	r0, #0
   1447c:	mov	r2, #5
   14480:	movt	r1, #1
   14484:	bl	10e30 <dcgettext@plt>
   14488:	movw	r2, #23115	; 0x5a4b
   1448c:	mov	r1, r0
   14490:	mov	r0, #1
   14494:	movt	r2, #1
   14498:	bl	10f5c <__printf_chk@plt>
   1449c:	movw	r1, #23137	; 0x5a61
   144a0:	mov	r0, #0
   144a4:	mov	r2, #5
   144a8:	movt	r1, #1
   144ac:	bl	10e30 <dcgettext@plt>
   144b0:	movw	r2, #21475	; 0x53e3
   144b4:	movw	r3, #21884	; 0x557c
   144b8:	mov	r1, r0
   144bc:	mov	r0, #1
   144c0:	movt	r2, #1
   144c4:	movt	r3, #1
   144c8:	bl	10f5c <__printf_chk@plt>
   144cc:	movw	r1, #23157	; 0x5a75
   144d0:	mov	r0, #0
   144d4:	mov	r2, #5
   144d8:	movt	r1, #1
   144dc:	bl	10e30 <dcgettext@plt>
   144e0:	movw	r2, #23196	; 0x5a9c
   144e4:	mov	r1, r0
   144e8:	mov	r0, #1
   144ec:	movt	r2, #1
   144f0:	pop	{fp, lr}
   144f4:	b	10f5c <__printf_chk@plt>
   144f8:	push	{r4, r5, r6, sl, fp, lr}
   144fc:	add	fp, sp, #16
   14500:	mov	r4, r2
   14504:	mov	r5, r1
   14508:	mov	r6, r0
   1450c:	bl	14f20 <__mempcpy_chk@plt+0x3f10>
   14510:	cmp	r0, #0
   14514:	popne	{r4, r5, r6, sl, fp, pc}
   14518:	cmp	r6, #0
   1451c:	beq	14530 <__mempcpy_chk@plt+0x3520>
   14520:	cmp	r5, #0
   14524:	cmpne	r4, #0
   14528:	bne	14530 <__mempcpy_chk@plt+0x3520>
   1452c:	pop	{r4, r5, r6, sl, fp, pc}
   14530:	bl	14aac <__mempcpy_chk@plt+0x3a9c>
   14534:	push	{r4, r5, r6, sl, fp, lr}
   14538:	add	fp, sp, #16
   1453c:	mov	r4, r2
   14540:	mov	r5, r1
   14544:	mov	r6, r0
   14548:	bl	14f20 <__mempcpy_chk@plt+0x3f10>
   1454c:	cmp	r0, #0
   14550:	popne	{r4, r5, r6, sl, fp, pc}
   14554:	cmp	r6, #0
   14558:	beq	1456c <__mempcpy_chk@plt+0x355c>
   1455c:	cmp	r5, #0
   14560:	cmpne	r4, #0
   14564:	bne	1456c <__mempcpy_chk@plt+0x355c>
   14568:	pop	{r4, r5, r6, sl, fp, pc}
   1456c:	bl	14aac <__mempcpy_chk@plt+0x3a9c>
   14570:	push	{fp, lr}
   14574:	mov	fp, sp
   14578:	bl	14b44 <__mempcpy_chk@plt+0x3b34>
   1457c:	cmp	r0, #0
   14580:	popne	{fp, pc}
   14584:	bl	14aac <__mempcpy_chk@plt+0x3a9c>
   14588:	push	{fp, lr}
   1458c:	mov	fp, sp
   14590:	bl	14b44 <__mempcpy_chk@plt+0x3b34>
   14594:	cmp	r0, #0
   14598:	popne	{fp, pc}
   1459c:	bl	14aac <__mempcpy_chk@plt+0x3a9c>
   145a0:	push	{fp, lr}
   145a4:	mov	fp, sp
   145a8:	bl	14b44 <__mempcpy_chk@plt+0x3b34>
   145ac:	cmp	r0, #0
   145b0:	popne	{fp, pc}
   145b4:	bl	14aac <__mempcpy_chk@plt+0x3a9c>
   145b8:	push	{r4, r5, fp, lr}
   145bc:	add	fp, sp, #8
   145c0:	mov	r4, r1
   145c4:	mov	r5, r0
   145c8:	bl	14b74 <__mempcpy_chk@plt+0x3b64>
   145cc:	cmp	r0, #0
   145d0:	popne	{r4, r5, fp, pc}
   145d4:	cmp	r5, #0
   145d8:	beq	145e8 <__mempcpy_chk@plt+0x35d8>
   145dc:	cmp	r4, #0
   145e0:	bne	145e8 <__mempcpy_chk@plt+0x35d8>
   145e4:	pop	{r4, r5, fp, pc}
   145e8:	bl	14aac <__mempcpy_chk@plt+0x3a9c>
   145ec:	push	{fp, lr}
   145f0:	mov	fp, sp
   145f4:	cmp	r1, #0
   145f8:	orreq	r1, r1, #1
   145fc:	bl	14b74 <__mempcpy_chk@plt+0x3b64>
   14600:	cmp	r0, #0
   14604:	popne	{fp, pc}
   14608:	bl	14aac <__mempcpy_chk@plt+0x3a9c>
   1460c:	push	{fp, lr}
   14610:	mov	fp, sp
   14614:	clz	r3, r2
   14618:	lsr	ip, r3, #5
   1461c:	clz	r3, r1
   14620:	lsr	r3, r3, #5
   14624:	orrs	r3, r3, ip
   14628:	movwne	r1, #1
   1462c:	movwne	r2, #1
   14630:	bl	14f20 <__mempcpy_chk@plt+0x3f10>
   14634:	cmp	r0, #0
   14638:	popne	{fp, pc}
   1463c:	bl	14aac <__mempcpy_chk@plt+0x3a9c>
   14640:	push	{fp, lr}
   14644:	mov	fp, sp
   14648:	mov	r2, r1
   1464c:	mov	r1, r0
   14650:	mov	r0, #0
   14654:	bl	14f20 <__mempcpy_chk@plt+0x3f10>
   14658:	cmp	r0, #0
   1465c:	popne	{fp, pc}
   14660:	bl	14aac <__mempcpy_chk@plt+0x3a9c>
   14664:	push	{fp, lr}
   14668:	mov	fp, sp
   1466c:	mov	r2, r1
   14670:	mov	r1, r0
   14674:	clz	r0, r2
   14678:	clz	r3, r1
   1467c:	lsr	r0, r0, #5
   14680:	lsr	r3, r3, #5
   14684:	orrs	r0, r3, r0
   14688:	mov	r0, #0
   1468c:	movwne	r1, #1
   14690:	movwne	r2, #1
   14694:	bl	14f20 <__mempcpy_chk@plt+0x3f10>
   14698:	cmp	r0, #0
   1469c:	popne	{fp, pc}
   146a0:	bl	14aac <__mempcpy_chk@plt+0x3a9c>
   146a4:	push	{r4, r5, r6, sl, fp, lr}
   146a8:	add	fp, sp, #16
   146ac:	ldr	r5, [r1]
   146b0:	mov	r4, r1
   146b4:	mov	r6, r0
   146b8:	cmp	r0, #0
   146bc:	beq	146d4 <__mempcpy_chk@plt+0x36c4>
   146c0:	mov	r0, #1
   146c4:	add	r0, r0, r5, lsr #1
   146c8:	adds	r5, r5, r0
   146cc:	bcc	146dc <__mempcpy_chk@plt+0x36cc>
   146d0:	b	14718 <__mempcpy_chk@plt+0x3708>
   146d4:	cmp	r5, #0
   146d8:	movweq	r5, #64	; 0x40
   146dc:	mov	r0, r6
   146e0:	mov	r1, r5
   146e4:	mov	r2, #1
   146e8:	bl	14f20 <__mempcpy_chk@plt+0x3f10>
   146ec:	cmp	r5, #0
   146f0:	mov	r1, r5
   146f4:	movwne	r1, #1
   146f8:	cmp	r0, #0
   146fc:	bne	14710 <__mempcpy_chk@plt+0x3700>
   14700:	clz	r2, r6
   14704:	lsr	r2, r2, #5
   14708:	orrs	r1, r2, r1
   1470c:	bne	14718 <__mempcpy_chk@plt+0x3708>
   14710:	str	r5, [r4]
   14714:	pop	{r4, r5, r6, sl, fp, pc}
   14718:	bl	14aac <__mempcpy_chk@plt+0x3a9c>
   1471c:	push	{r4, r5, r6, r7, fp, lr}
   14720:	add	fp, sp, #16
   14724:	ldr	r5, [r1]
   14728:	mov	r6, r2
   1472c:	mov	r4, r1
   14730:	mov	r7, r0
   14734:	cmp	r0, #0
   14738:	beq	14750 <__mempcpy_chk@plt+0x3740>
   1473c:	mov	r0, #1
   14740:	add	r0, r0, r5, lsr #1
   14744:	adds	r5, r5, r0
   14748:	bcc	14768 <__mempcpy_chk@plt+0x3758>
   1474c:	b	1479c <__mempcpy_chk@plt+0x378c>
   14750:	cmp	r5, #0
   14754:	bne	14768 <__mempcpy_chk@plt+0x3758>
   14758:	mov	r0, #64	; 0x40
   1475c:	cmp	r6, #64	; 0x40
   14760:	udiv	r5, r0, r6
   14764:	addhi	r5, r5, #1
   14768:	mov	r0, r7
   1476c:	mov	r1, r5
   14770:	mov	r2, r6
   14774:	bl	14f20 <__mempcpy_chk@plt+0x3f10>
   14778:	cmp	r0, #0
   1477c:	bne	14794 <__mempcpy_chk@plt+0x3784>
   14780:	cmp	r7, #0
   14784:	beq	1479c <__mempcpy_chk@plt+0x378c>
   14788:	cmp	r6, #0
   1478c:	cmpne	r5, #0
   14790:	bne	1479c <__mempcpy_chk@plt+0x378c>
   14794:	str	r5, [r4]
   14798:	pop	{r4, r5, r6, r7, fp, pc}
   1479c:	bl	14aac <__mempcpy_chk@plt+0x3a9c>
   147a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   147a4:	add	fp, sp, #24
   147a8:	mov	r8, r1
   147ac:	ldr	r1, [r1]
   147b0:	mov	r5, r0
   147b4:	add	r0, r1, r1, asr #1
   147b8:	cmp	r0, r1
   147bc:	mvnvs	r0, #-2147483648	; 0x80000000
   147c0:	cmp	r0, r3
   147c4:	mov	r7, r0
   147c8:	movgt	r7, r3
   147cc:	cmn	r3, #1
   147d0:	movle	r7, r0
   147d4:	ldr	r0, [fp, #8]
   147d8:	cmn	r0, #1
   147dc:	ble	14804 <__mempcpy_chk@plt+0x37f4>
   147e0:	cmp	r0, #0
   147e4:	beq	14858 <__mempcpy_chk@plt+0x3848>
   147e8:	cmn	r7, #1
   147ec:	ble	1482c <__mempcpy_chk@plt+0x381c>
   147f0:	mvn	r4, #-2147483648	; 0x80000000
   147f4:	udiv	r6, r4, r0
   147f8:	cmp	r6, r7
   147fc:	bge	14858 <__mempcpy_chk@plt+0x3848>
   14800:	b	14868 <__mempcpy_chk@plt+0x3858>
   14804:	cmn	r7, #1
   14808:	ble	14848 <__mempcpy_chk@plt+0x3838>
   1480c:	cmn	r0, #1
   14810:	beq	14858 <__mempcpy_chk@plt+0x3848>
   14814:	mov	r6, #-2147483648	; 0x80000000
   14818:	mvn	r4, #-2147483648	; 0x80000000
   1481c:	sdiv	r6, r6, r0
   14820:	cmp	r6, r7
   14824:	bge	14858 <__mempcpy_chk@plt+0x3848>
   14828:	b	14868 <__mempcpy_chk@plt+0x3858>
   1482c:	beq	14858 <__mempcpy_chk@plt+0x3848>
   14830:	mov	r6, #-2147483648	; 0x80000000
   14834:	mvn	r4, #-2147483648	; 0x80000000
   14838:	sdiv	r6, r6, r7
   1483c:	cmp	r6, r0
   14840:	bge	14858 <__mempcpy_chk@plt+0x3848>
   14844:	b	14868 <__mempcpy_chk@plt+0x3858>
   14848:	mvn	r4, #-2147483648	; 0x80000000
   1484c:	sdiv	r6, r4, r0
   14850:	cmp	r7, r6
   14854:	blt	14868 <__mempcpy_chk@plt+0x3858>
   14858:	mul	r6, r7, r0
   1485c:	mov	r4, #64	; 0x40
   14860:	cmp	r6, #63	; 0x3f
   14864:	bgt	14870 <__mempcpy_chk@plt+0x3860>
   14868:	sdiv	r7, r4, r0
   1486c:	mul	r6, r7, r0
   14870:	cmp	r5, #0
   14874:	moveq	r4, #0
   14878:	streq	r4, [r8]
   1487c:	sub	r4, r7, r1
   14880:	cmp	r4, r2
   14884:	bge	14930 <__mempcpy_chk@plt+0x3920>
   14888:	add	r7, r1, r2
   1488c:	mov	r6, #0
   14890:	mov	r2, #0
   14894:	cmp	r7, r3
   14898:	movwgt	r6, #1
   1489c:	cmn	r3, #1
   148a0:	movwgt	r2, #1
   148a4:	cmp	r7, r1
   148a8:	bvs	14964 <__mempcpy_chk@plt+0x3954>
   148ac:	ands	r1, r2, r6
   148b0:	bne	14964 <__mempcpy_chk@plt+0x3954>
   148b4:	cmn	r0, #1
   148b8:	ble	148e0 <__mempcpy_chk@plt+0x38d0>
   148bc:	cmp	r0, #0
   148c0:	beq	1492c <__mempcpy_chk@plt+0x391c>
   148c4:	cmn	r7, #1
   148c8:	ble	14904 <__mempcpy_chk@plt+0x38f4>
   148cc:	mvn	r1, #-2147483648	; 0x80000000
   148d0:	udiv	r1, r1, r0
   148d4:	cmp	r1, r7
   148d8:	bge	1492c <__mempcpy_chk@plt+0x391c>
   148dc:	b	14964 <__mempcpy_chk@plt+0x3954>
   148e0:	cmn	r7, #1
   148e4:	ble	1491c <__mempcpy_chk@plt+0x390c>
   148e8:	cmn	r0, #1
   148ec:	beq	1492c <__mempcpy_chk@plt+0x391c>
   148f0:	mov	r1, #-2147483648	; 0x80000000
   148f4:	sdiv	r1, r1, r0
   148f8:	cmp	r1, r7
   148fc:	bge	1492c <__mempcpy_chk@plt+0x391c>
   14900:	b	14964 <__mempcpy_chk@plt+0x3954>
   14904:	beq	1492c <__mempcpy_chk@plt+0x391c>
   14908:	mov	r1, #-2147483648	; 0x80000000
   1490c:	sdiv	r1, r1, r7
   14910:	cmp	r1, r0
   14914:	bge	1492c <__mempcpy_chk@plt+0x391c>
   14918:	b	14964 <__mempcpy_chk@plt+0x3954>
   1491c:	mvn	r1, #-2147483648	; 0x80000000
   14920:	sdiv	r1, r1, r0
   14924:	cmp	r7, r1
   14928:	blt	14964 <__mempcpy_chk@plt+0x3954>
   1492c:	mul	r6, r7, r0
   14930:	mov	r0, r5
   14934:	mov	r1, r6
   14938:	bl	14b74 <__mempcpy_chk@plt+0x3b64>
   1493c:	cmp	r6, #0
   14940:	movwne	r6, #1
   14944:	cmp	r0, #0
   14948:	bne	1495c <__mempcpy_chk@plt+0x394c>
   1494c:	clz	r1, r5
   14950:	lsr	r1, r1, #5
   14954:	orrs	r1, r1, r6
   14958:	bne	14964 <__mempcpy_chk@plt+0x3954>
   1495c:	str	r7, [r8]
   14960:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14964:	bl	14aac <__mempcpy_chk@plt+0x3a9c>
   14968:	push	{fp, lr}
   1496c:	mov	fp, sp
   14970:	mov	r1, #1
   14974:	bl	14af0 <__mempcpy_chk@plt+0x3ae0>
   14978:	cmp	r0, #0
   1497c:	popne	{fp, pc}
   14980:	bl	14aac <__mempcpy_chk@plt+0x3a9c>
   14984:	push	{fp, lr}
   14988:	mov	fp, sp
   1498c:	bl	14af0 <__mempcpy_chk@plt+0x3ae0>
   14990:	cmp	r0, #0
   14994:	popne	{fp, pc}
   14998:	bl	14aac <__mempcpy_chk@plt+0x3a9c>
   1499c:	push	{fp, lr}
   149a0:	mov	fp, sp
   149a4:	mov	r1, #1
   149a8:	bl	14af0 <__mempcpy_chk@plt+0x3ae0>
   149ac:	cmp	r0, #0
   149b0:	popne	{fp, pc}
   149b4:	bl	14aac <__mempcpy_chk@plt+0x3a9c>
   149b8:	push	{fp, lr}
   149bc:	mov	fp, sp
   149c0:	bl	14af0 <__mempcpy_chk@plt+0x3ae0>
   149c4:	cmp	r0, #0
   149c8:	popne	{fp, pc}
   149cc:	bl	14aac <__mempcpy_chk@plt+0x3a9c>
   149d0:	push	{r4, r5, fp, lr}
   149d4:	add	fp, sp, #8
   149d8:	mov	r5, r0
   149dc:	mov	r0, r1
   149e0:	mov	r4, r1
   149e4:	bl	14b44 <__mempcpy_chk@plt+0x3b34>
   149e8:	cmp	r0, #0
   149ec:	beq	14a00 <__mempcpy_chk@plt+0x39f0>
   149f0:	mov	r1, r5
   149f4:	mov	r2, r4
   149f8:	pop	{r4, r5, fp, lr}
   149fc:	b	10e00 <memcpy@plt>
   14a00:	bl	14aac <__mempcpy_chk@plt+0x3a9c>
   14a04:	push	{r4, r5, fp, lr}
   14a08:	add	fp, sp, #8
   14a0c:	mov	r5, r0
   14a10:	mov	r0, r1
   14a14:	mov	r4, r1
   14a18:	bl	14b44 <__mempcpy_chk@plt+0x3b34>
   14a1c:	cmp	r0, #0
   14a20:	beq	14a34 <__mempcpy_chk@plt+0x3a24>
   14a24:	mov	r1, r5
   14a28:	mov	r2, r4
   14a2c:	pop	{r4, r5, fp, lr}
   14a30:	b	10e00 <memcpy@plt>
   14a34:	bl	14aac <__mempcpy_chk@plt+0x3a9c>
   14a38:	push	{r4, r5, fp, lr}
   14a3c:	add	fp, sp, #8
   14a40:	mov	r5, r0
   14a44:	add	r0, r1, #1
   14a48:	mov	r4, r1
   14a4c:	bl	14b44 <__mempcpy_chk@plt+0x3b34>
   14a50:	cmp	r0, #0
   14a54:	beq	14a70 <__mempcpy_chk@plt+0x3a60>
   14a58:	mov	r1, #0
   14a5c:	mov	r2, r4
   14a60:	strb	r1, [r0, r4]
   14a64:	mov	r1, r5
   14a68:	pop	{r4, r5, fp, lr}
   14a6c:	b	10e00 <memcpy@plt>
   14a70:	bl	14aac <__mempcpy_chk@plt+0x3a9c>
   14a74:	push	{r4, r5, fp, lr}
   14a78:	add	fp, sp, #8
   14a7c:	mov	r4, r0
   14a80:	bl	10f2c <strlen@plt>
   14a84:	add	r5, r0, #1
   14a88:	mov	r0, r5
   14a8c:	bl	14b44 <__mempcpy_chk@plt+0x3b34>
   14a90:	cmp	r0, #0
   14a94:	beq	14aa8 <__mempcpy_chk@plt+0x3a98>
   14a98:	mov	r1, r4
   14a9c:	mov	r2, r5
   14aa0:	pop	{r4, r5, fp, lr}
   14aa4:	b	10e00 <memcpy@plt>
   14aa8:	bl	14aac <__mempcpy_chk@plt+0x3a9c>
   14aac:	push	{fp, lr}
   14ab0:	mov	fp, sp
   14ab4:	movw	r0, #24812	; 0x60ec
   14ab8:	movw	r1, #23272	; 0x5ae8
   14abc:	mov	r2, #5
   14ac0:	movt	r0, #2
   14ac4:	movt	r1, #1
   14ac8:	ldr	r4, [r0]
   14acc:	mov	r0, #0
   14ad0:	bl	10e30 <dcgettext@plt>
   14ad4:	movw	r2, #22167	; 0x5697
   14ad8:	mov	r3, r0
   14adc:	mov	r0, r4
   14ae0:	mov	r1, #0
   14ae4:	movt	r2, #1
   14ae8:	bl	10ea8 <error@plt>
   14aec:	bl	10ff8 <abort@plt>
   14af0:	clz	r2, r1
   14af4:	clz	r3, r0
   14af8:	lsr	r2, r2, #5
   14afc:	lsr	r3, r3, #5
   14b00:	orrs	r2, r3, r2
   14b04:	movwne	r1, #1
   14b08:	movwne	r0, #1
   14b0c:	cmp	r1, #0
   14b10:	beq	14b40 <__mempcpy_chk@plt+0x3b30>
   14b14:	mvn	r2, #-2147483648	; 0x80000000
   14b18:	udiv	r2, r2, r1
   14b1c:	cmp	r2, r0
   14b20:	bcs	14b40 <__mempcpy_chk@plt+0x3b30>
   14b24:	push	{fp, lr}
   14b28:	mov	fp, sp
   14b2c:	bl	10f38 <__errno_location@plt>
   14b30:	mov	r1, #12
   14b34:	str	r1, [r0]
   14b38:	mov	r0, #0
   14b3c:	pop	{fp, pc}
   14b40:	b	10db8 <calloc@plt>
   14b44:	cmp	r0, #0
   14b48:	movweq	r0, #1
   14b4c:	cmn	r0, #1
   14b50:	ble	14b58 <__mempcpy_chk@plt+0x3b48>
   14b54:	b	10ecc <malloc@plt>
   14b58:	push	{fp, lr}
   14b5c:	mov	fp, sp
   14b60:	bl	10f38 <__errno_location@plt>
   14b64:	mov	r1, #12
   14b68:	str	r1, [r0]
   14b6c:	mov	r0, #0
   14b70:	pop	{fp, pc}
   14b74:	push	{fp, lr}
   14b78:	mov	fp, sp
   14b7c:	cmp	r0, #0
   14b80:	beq	14b9c <__mempcpy_chk@plt+0x3b8c>
   14b84:	cmp	r1, #0
   14b88:	beq	14ba8 <__mempcpy_chk@plt+0x3b98>
   14b8c:	cmn	r1, #1
   14b90:	ble	14bb4 <__mempcpy_chk@plt+0x3ba4>
   14b94:	pop	{fp, lr}
   14b98:	b	10e48 <realloc@plt>
   14b9c:	mov	r0, r1
   14ba0:	pop	{fp, lr}
   14ba4:	b	14b44 <__mempcpy_chk@plt+0x3b34>
   14ba8:	bl	11d38 <__mempcpy_chk@plt+0xd28>
   14bac:	mov	r0, #0
   14bb0:	pop	{fp, pc}
   14bb4:	bl	10f38 <__errno_location@plt>
   14bb8:	mov	r1, #12
   14bbc:	str	r1, [r0]
   14bc0:	mov	r0, #0
   14bc4:	pop	{fp, pc}
   14bc8:	sub	r0, r0, #1
   14bcc:	ldrb	r3, [r0, #1]!
   14bd0:	cmp	r3, #47	; 0x2f
   14bd4:	beq	14bcc <__mempcpy_chk@plt+0x3bbc>
   14bd8:	mov	r2, #0
   14bdc:	mov	r1, r0
   14be0:	uxtb	r3, r3
   14be4:	cmp	r3, #47	; 0x2f
   14be8:	bne	14c00 <__mempcpy_chk@plt+0x3bf0>
   14bec:	ldrb	r3, [r1, #1]!
   14bf0:	mov	r2, #1
   14bf4:	uxtb	r3, r3
   14bf8:	cmp	r3, #47	; 0x2f
   14bfc:	beq	14bec <__mempcpy_chk@plt+0x3bdc>
   14c00:	cmp	r3, #0
   14c04:	bxeq	lr
   14c08:	tst	r2, #1
   14c0c:	mov	r2, #0
   14c10:	movne	r0, r1
   14c14:	ldrb	r3, [r1, #1]!
   14c18:	uxtb	r3, r3
   14c1c:	cmp	r3, #47	; 0x2f
   14c20:	bne	14c00 <__mempcpy_chk@plt+0x3bf0>
   14c24:	b	14bec <__mempcpy_chk@plt+0x3bdc>
   14c28:	push	{r4, sl, fp, lr}
   14c2c:	add	fp, sp, #8
   14c30:	mov	r4, r0
   14c34:	bl	10f2c <strlen@plt>
   14c38:	mov	r1, r0
   14c3c:	sub	r2, r4, #1
   14c40:	mov	r0, r1
   14c44:	cmp	r1, #2
   14c48:	bcc	14c5c <__mempcpy_chk@plt+0x3c4c>
   14c4c:	ldrb	r3, [r2, r0]
   14c50:	sub	r1, r0, #1
   14c54:	cmp	r3, #47	; 0x2f
   14c58:	beq	14c40 <__mempcpy_chk@plt+0x3c30>
   14c5c:	pop	{r4, sl, fp, pc}
   14c60:	push	{r4, r5, r6, sl, fp, lr}
   14c64:	add	fp, sp, #16
   14c68:	mov	r4, r0
   14c6c:	bl	10e90 <__fpending@plt>
   14c70:	ldr	r6, [r4]
   14c74:	mov	r5, r0
   14c78:	mov	r0, r4
   14c7c:	bl	14ce4 <__mempcpy_chk@plt+0x3cd4>
   14c80:	tst	r6, #32
   14c84:	bne	14cbc <__mempcpy_chk@plt+0x3cac>
   14c88:	cmp	r0, #0
   14c8c:	mov	r4, r0
   14c90:	mvnne	r4, #0
   14c94:	cmp	r5, #0
   14c98:	bne	14cc8 <__mempcpy_chk@plt+0x3cb8>
   14c9c:	cmp	r0, #0
   14ca0:	beq	14cc8 <__mempcpy_chk@plt+0x3cb8>
   14ca4:	bl	10f38 <__errno_location@plt>
   14ca8:	ldr	r0, [r0]
   14cac:	subs	r4, r0, #9
   14cb0:	mvnne	r4, #0
   14cb4:	mov	r0, r4
   14cb8:	pop	{r4, r5, r6, sl, fp, pc}
   14cbc:	mvn	r4, #0
   14cc0:	cmp	r0, #0
   14cc4:	beq	14cd0 <__mempcpy_chk@plt+0x3cc0>
   14cc8:	mov	r0, r4
   14ccc:	pop	{r4, r5, r6, sl, fp, pc}
   14cd0:	bl	10f38 <__errno_location@plt>
   14cd4:	mov	r1, #0
   14cd8:	str	r1, [r0]
   14cdc:	mov	r0, r4
   14ce0:	pop	{r4, r5, r6, sl, fp, pc}
   14ce4:	push	{r4, r5, r6, sl, fp, lr}
   14ce8:	add	fp, sp, #16
   14cec:	sub	sp, sp, #8
   14cf0:	mov	r4, r0
   14cf4:	bl	10f68 <fileno@plt>
   14cf8:	cmn	r0, #1
   14cfc:	ble	14d70 <__mempcpy_chk@plt+0x3d60>
   14d00:	mov	r0, r4
   14d04:	bl	10ee4 <__freading@plt>
   14d08:	cmp	r0, #0
   14d0c:	beq	14d38 <__mempcpy_chk@plt+0x3d28>
   14d10:	mov	r0, r4
   14d14:	bl	10f68 <fileno@plt>
   14d18:	mov	r1, #1
   14d1c:	mov	r2, #0
   14d20:	mov	r3, #0
   14d24:	str	r1, [sp]
   14d28:	bl	10e78 <lseek64@plt>
   14d2c:	and	r0, r0, r1
   14d30:	cmn	r0, #1
   14d34:	beq	14d70 <__mempcpy_chk@plt+0x3d60>
   14d38:	mov	r0, r4
   14d3c:	bl	14d80 <__mempcpy_chk@plt+0x3d70>
   14d40:	cmp	r0, #0
   14d44:	beq	14d70 <__mempcpy_chk@plt+0x3d60>
   14d48:	bl	10f38 <__errno_location@plt>
   14d4c:	ldr	r6, [r0]
   14d50:	mov	r5, r0
   14d54:	mov	r0, r4
   14d58:	bl	10f80 <fclose@plt>
   14d5c:	cmp	r6, #0
   14d60:	strne	r6, [r5]
   14d64:	mvnne	r0, #0
   14d68:	sub	sp, fp, #16
   14d6c:	pop	{r4, r5, r6, sl, fp, pc}
   14d70:	mov	r0, r4
   14d74:	sub	sp, fp, #16
   14d78:	pop	{r4, r5, r6, sl, fp, lr}
   14d7c:	b	10f80 <fclose@plt>
   14d80:	push	{r4, sl, fp, lr}
   14d84:	add	fp, sp, #8
   14d88:	sub	sp, sp, #8
   14d8c:	mov	r4, r0
   14d90:	cmp	r0, #0
   14d94:	beq	14dcc <__mempcpy_chk@plt+0x3dbc>
   14d98:	mov	r0, r4
   14d9c:	bl	10ee4 <__freading@plt>
   14da0:	cmp	r0, #0
   14da4:	beq	14dcc <__mempcpy_chk@plt+0x3dbc>
   14da8:	ldrb	r0, [r4, #1]
   14dac:	tst	r0, #1
   14db0:	beq	14dcc <__mempcpy_chk@plt+0x3dbc>
   14db4:	mov	r0, #1
   14db8:	mov	r2, #0
   14dbc:	mov	r3, #0
   14dc0:	str	r0, [sp]
   14dc4:	mov	r0, r4
   14dc8:	bl	14ddc <__mempcpy_chk@plt+0x3dcc>
   14dcc:	mov	r0, r4
   14dd0:	sub	sp, fp, #8
   14dd4:	pop	{r4, sl, fp, lr}
   14dd8:	b	10ddc <fflush@plt>
   14ddc:	push	{r4, r5, r6, r7, fp, lr}
   14de0:	add	fp, sp, #16
   14de4:	sub	sp, sp, #8
   14de8:	mov	r4, r0
   14dec:	ldr	r0, [r0, #4]
   14df0:	mov	r5, r3
   14df4:	mov	r6, r2
   14df8:	ldr	r1, [r4, #8]
   14dfc:	cmp	r1, r0
   14e00:	bne	14e1c <__mempcpy_chk@plt+0x3e0c>
   14e04:	ldrd	r0, [r4, #16]
   14e08:	cmp	r1, r0
   14e0c:	bne	14e1c <__mempcpy_chk@plt+0x3e0c>
   14e10:	ldr	r0, [r4, #36]	; 0x24
   14e14:	cmp	r0, #0
   14e18:	beq	14e34 <__mempcpy_chk@plt+0x3e24>
   14e1c:	mov	r0, r4
   14e20:	mov	r2, r6
   14e24:	mov	r3, r5
   14e28:	sub	sp, fp, #16
   14e2c:	pop	{r4, r5, r6, r7, fp, lr}
   14e30:	b	10f8c <fseeko64@plt>
   14e34:	ldr	r7, [fp, #8]
   14e38:	mov	r0, r4
   14e3c:	bl	10f68 <fileno@plt>
   14e40:	mov	r2, r6
   14e44:	mov	r3, r5
   14e48:	str	r7, [sp]
   14e4c:	bl	10e78 <lseek64@plt>
   14e50:	and	r2, r0, r1
   14e54:	cmn	r2, #1
   14e58:	beq	14e78 <__mempcpy_chk@plt+0x3e68>
   14e5c:	strd	r0, [r4, #80]	; 0x50
   14e60:	ldr	r0, [r4]
   14e64:	bic	r0, r0, #16
   14e68:	str	r0, [r4]
   14e6c:	mov	r0, #0
   14e70:	sub	sp, fp, #16
   14e74:	pop	{r4, r5, r6, r7, fp, pc}
   14e78:	mvn	r0, #0
   14e7c:	sub	sp, fp, #16
   14e80:	pop	{r4, r5, r6, r7, fp, pc}
   14e84:	push	{fp, lr}
   14e88:	mov	fp, sp
   14e8c:	mov	r0, #14
   14e90:	bl	10fbc <nl_langinfo@plt>
   14e94:	movw	r1, #20847	; 0x516f
   14e98:	cmp	r0, #0
   14e9c:	movt	r1, #1
   14ea0:	movne	r1, r0
   14ea4:	movw	r0, #23289	; 0x5af9
   14ea8:	ldrb	r2, [r1]
   14eac:	movt	r0, #1
   14eb0:	cmp	r2, #0
   14eb4:	movne	r0, r1
   14eb8:	pop	{fp, pc}
   14ebc:	push	{r4, r5, r6, r7, fp, lr}
   14ec0:	add	fp, sp, #16
   14ec4:	sub	sp, sp, #8
   14ec8:	cmp	r0, #0
   14ecc:	add	r5, sp, #4
   14ed0:	mov	r7, r2
   14ed4:	mov	r4, r1
   14ed8:	movne	r5, r0
   14edc:	mov	r0, r5
   14ee0:	bl	10e9c <mbrtowc@plt>
   14ee4:	mov	r6, r0
   14ee8:	cmp	r7, #0
   14eec:	beq	14f14 <__mempcpy_chk@plt+0x3f04>
   14ef0:	cmn	r6, #2
   14ef4:	bcc	14f14 <__mempcpy_chk@plt+0x3f04>
   14ef8:	mov	r0, #0
   14efc:	bl	14f5c <__mempcpy_chk@plt+0x3f4c>
   14f00:	cmp	r0, #0
   14f04:	bne	14f14 <__mempcpy_chk@plt+0x3f04>
   14f08:	ldrb	r0, [r4]
   14f0c:	mov	r6, #1
   14f10:	str	r0, [r5]
   14f14:	mov	r0, r6
   14f18:	sub	sp, fp, #16
   14f1c:	pop	{r4, r5, r6, r7, fp, pc}
   14f20:	cmp	r2, #0
   14f24:	beq	14f54 <__mempcpy_chk@plt+0x3f44>
   14f28:	mvn	r3, #0
   14f2c:	udiv	r3, r3, r2
   14f30:	cmp	r3, r1
   14f34:	bcs	14f54 <__mempcpy_chk@plt+0x3f44>
   14f38:	push	{fp, lr}
   14f3c:	mov	fp, sp
   14f40:	bl	10f38 <__errno_location@plt>
   14f44:	mov	r1, #12
   14f48:	str	r1, [r0]
   14f4c:	mov	r0, #0
   14f50:	pop	{fp, pc}
   14f54:	mul	r1, r2, r1
   14f58:	b	14b74 <__mempcpy_chk@plt+0x3b64>
   14f5c:	push	{r4, sl, fp, lr}
   14f60:	add	fp, sp, #8
   14f64:	sub	sp, sp, #264	; 0x108
   14f68:	add	r1, sp, #7
   14f6c:	movw	r2, #257	; 0x101
   14f70:	bl	14fc8 <__mempcpy_chk@plt+0x3fb8>
   14f74:	mov	r4, #0
   14f78:	cmp	r0, #0
   14f7c:	bne	14fbc <__mempcpy_chk@plt+0x3fac>
   14f80:	movw	r1, #23295	; 0x5aff
   14f84:	add	r0, sp, #7
   14f88:	mov	r2, #2
   14f8c:	movt	r1, #1
   14f90:	bl	10f20 <bcmp@plt>
   14f94:	cmp	r0, #0
   14f98:	beq	14fbc <__mempcpy_chk@plt+0x3fac>
   14f9c:	movw	r1, #23297	; 0x5b01
   14fa0:	add	r0, sp, #7
   14fa4:	mov	r2, #6
   14fa8:	movt	r1, #1
   14fac:	bl	10f20 <bcmp@plt>
   14fb0:	cmp	r0, #0
   14fb4:	mov	r4, r0
   14fb8:	movwne	r4, #1
   14fbc:	mov	r0, r4
   14fc0:	sub	sp, fp, #8
   14fc4:	pop	{r4, sl, fp, pc}
   14fc8:	push	{r4, r5, r6, r7, fp, lr}
   14fcc:	add	fp, sp, #16
   14fd0:	mov	r4, r1
   14fd4:	mov	r1, #0
   14fd8:	mov	r6, r2
   14fdc:	bl	10fa4 <setlocale@plt>
   14fe0:	cmp	r0, #0
   14fe4:	beq	15014 <__mempcpy_chk@plt+0x4004>
   14fe8:	mov	r7, r0
   14fec:	bl	10f2c <strlen@plt>
   14ff0:	cmp	r0, r6
   14ff4:	bcs	15030 <__mempcpy_chk@plt+0x4020>
   14ff8:	add	r2, r0, #1
   14ffc:	mov	r0, r4
   15000:	mov	r1, r7
   15004:	bl	10e00 <memcpy@plt>
   15008:	mov	r5, #0
   1500c:	mov	r0, r5
   15010:	pop	{r4, r5, r6, r7, fp, pc}
   15014:	mov	r5, #22
   15018:	cmp	r6, #0
   1501c:	beq	15058 <__mempcpy_chk@plt+0x4048>
   15020:	mov	r0, #0
   15024:	strb	r0, [r4]
   15028:	mov	r0, r5
   1502c:	pop	{r4, r5, r6, r7, fp, pc}
   15030:	mov	r5, #34	; 0x22
   15034:	cmp	r6, #0
   15038:	beq	15058 <__mempcpy_chk@plt+0x4048>
   1503c:	sub	r6, r6, #1
   15040:	mov	r0, r4
   15044:	mov	r1, r7
   15048:	mov	r2, r6
   1504c:	bl	10e00 <memcpy@plt>
   15050:	mov	r0, #0
   15054:	strb	r0, [r4, r6]
   15058:	mov	r0, r5
   1505c:	pop	{r4, r5, r6, r7, fp, pc}
   15060:	mov	r1, #0
   15064:	b	10fa4 <setlocale@plt>
   15068:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1506c:	mov	r7, r0
   15070:	ldr	r6, [pc, #72]	; 150c0 <__mempcpy_chk@plt+0x40b0>
   15074:	ldr	r5, [pc, #72]	; 150c4 <__mempcpy_chk@plt+0x40b4>
   15078:	add	r6, pc, r6
   1507c:	add	r5, pc, r5
   15080:	sub	r6, r6, r5
   15084:	mov	r8, r1
   15088:	mov	r9, r2
   1508c:	bl	10d98 <calloc@plt-0x20>
   15090:	asrs	r6, r6, #2
   15094:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15098:	mov	r4, #0
   1509c:	add	r4, r4, #1
   150a0:	ldr	r3, [r5], #4
   150a4:	mov	r2, r9
   150a8:	mov	r1, r8
   150ac:	mov	r0, r7
   150b0:	blx	r3
   150b4:	cmp	r6, r4
   150b8:	bne	1509c <__mempcpy_chk@plt+0x408c>
   150bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   150c0:	andeq	r0, r1, ip, lsl #29
   150c4:	andeq	r0, r1, r4, lsl #29
   150c8:	bx	lr
   150cc:	ldr	r3, [pc, #12]	; 150e0 <__mempcpy_chk@plt+0x40d0>
   150d0:	mov	r1, #0
   150d4:	add	r3, pc, r3
   150d8:	ldr	r2, [r3]
   150dc:	b	10f44 <__cxa_atexit@plt>
   150e0:	andeq	r1, r1, r8

Disassembly of section .fini:

000150e4 <.fini>:
   150e4:	push	{r3, lr}
   150e8:	pop	{r3, pc}
