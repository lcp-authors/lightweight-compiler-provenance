
../repos/coreutils/src/make-prime-list:     file format elf32-littlearm


Disassembly of section .init:

0001056c <.init>:
   1056c:	push	{r3, lr}
   10570:	bl	106a0 <abort@plt+0x48>
   10574:	pop	{r3, pc}

Disassembly of section .plt:

00010578 <raise@plt-0x14>:
   10578:	push	{lr}		; (str lr, [sp, #-4]!)
   1057c:	ldr	lr, [pc, #4]	; 10588 <raise@plt-0x4>
   10580:	add	lr, pc, lr
   10584:	ldr	pc, [lr, #8]!
   10588:	andeq	r1, r1, r8, ror sl

0001058c <raise@plt>:
   1058c:	add	ip, pc, #0, 12
   10590:	add	ip, ip, #69632	; 0x11000
   10594:	ldr	pc, [ip, #2680]!	; 0xa78

00010598 <strtol@plt>:
   10598:	add	ip, pc, #0, 12
   1059c:	add	ip, ip, #69632	; 0x11000
   105a0:	ldr	pc, [ip, #2672]!	; 0xa70

000105a4 <free@plt>:
   105a4:	add	ip, pc, #0, 12
   105a8:	add	ip, ip, #69632	; 0x11000
   105ac:	ldr	pc, [ip, #2664]!	; 0xa68

000105b0 <ferror@plt>:
   105b0:	add	ip, pc, #0, 12
   105b4:	add	ip, ip, #69632	; 0x11000
   105b8:	ldr	pc, [ip, #2656]!	; 0xa60

000105bc <fwrite@plt>:
   105bc:	add	ip, pc, #0, 12
   105c0:	add	ip, ip, #69632	; 0x11000
   105c4:	ldr	pc, [ip, #2648]!	; 0xa58

000105c8 <puts@plt>:
   105c8:	add	ip, pc, #0, 12
   105cc:	add	ip, ip, #69632	; 0x11000
   105d0:	ldr	pc, [ip, #2640]!	; 0xa50

000105d4 <malloc@plt>:
   105d4:	add	ip, pc, #0, 12
   105d8:	add	ip, ip, #69632	; 0x11000
   105dc:	ldr	pc, [ip, #2632]!	; 0xa48

000105e0 <__libc_start_main@plt>:
   105e0:	add	ip, pc, #0, 12
   105e4:	add	ip, ip, #69632	; 0x11000
   105e8:	ldr	pc, [ip, #2624]!	; 0xa40

000105ec <strerror@plt>:
   105ec:	add	ip, pc, #0, 12
   105f0:	add	ip, ip, #69632	; 0x11000
   105f4:	ldr	pc, [ip, #2616]!	; 0xa38

000105f8 <__gmon_start__@plt>:
   105f8:	add	ip, pc, #0, 12
   105fc:	add	ip, ip, #69632	; 0x11000
   10600:	ldr	pc, [ip, #2608]!	; 0xa30

00010604 <exit@plt>:
   10604:	add	ip, pc, #0, 12
   10608:	add	ip, ip, #69632	; 0x11000
   1060c:	ldr	pc, [ip, #2600]!	; 0xa28

00010610 <__errno_location@plt>:
   10610:	add	ip, pc, #0, 12
   10614:	add	ip, ip, #69632	; 0x11000
   10618:	ldr	pc, [ip, #2592]!	; 0xa20

0001061c <memset@plt>:
   1061c:	add	ip, pc, #0, 12
   10620:	add	ip, ip, #69632	; 0x11000
   10624:	ldr	pc, [ip, #2584]!	; 0xa18

00010628 <putchar@plt>:
   10628:	add	ip, pc, #0, 12
   1062c:	add	ip, ip, #69632	; 0x11000
   10630:	ldr	pc, [ip, #2576]!	; 0xa10

00010634 <__printf_chk@plt>:
   10634:	add	ip, pc, #0, 12
   10638:	add	ip, ip, #69632	; 0x11000
   1063c:	ldr	pc, [ip, #2568]!	; 0xa08

00010640 <__fprintf_chk@plt>:
   10640:	add	ip, pc, #0, 12
   10644:	add	ip, ip, #69632	; 0x11000
   10648:	ldr	pc, [ip, #2560]!	; 0xa00

0001064c <fclose@plt>:
   1064c:	add	ip, pc, #0, 12
   10650:	add	ip, ip, #69632	; 0x11000
   10654:	ldr	pc, [ip, #2552]!	; 0x9f8

00010658 <abort@plt>:
   10658:	add	ip, pc, #0, 12
   1065c:	add	ip, ip, #69632	; 0x11000
   10660:	ldr	pc, [ip, #2544]!	; 0x9f0

Disassembly of section .text:

00010664 <.text>:
   10664:	mov	fp, #0
   10668:	mov	lr, #0
   1066c:	pop	{r1}		; (ldr r1, [sp], #4)
   10670:	mov	r2, sp
   10674:	push	{r2}		; (str r2, [sp, #-4]!)
   10678:	push	{r0}		; (str r0, [sp, #-4]!)
   1067c:	ldr	ip, [pc, #16]	; 10694 <abort@plt+0x3c>
   10680:	push	{ip}		; (str ip, [sp, #-4]!)
   10684:	ldr	r0, [pc, #12]	; 10698 <abort@plt+0x40>
   10688:	ldr	r3, [pc, #12]	; 1069c <abort@plt+0x44>
   1068c:	bl	105e0 <__libc_start_main@plt>
   10690:	bl	10658 <abort@plt>
   10694:	muleq	r1, r0, lr
   10698:	andeq	r0, r1, r4, lsr #17
   1069c:	andeq	r0, r1, r0, lsr lr
   106a0:	ldr	r3, [pc, #20]	; 106bc <abort@plt+0x64>
   106a4:	ldr	r2, [pc, #20]	; 106c0 <abort@plt+0x68>
   106a8:	add	r3, pc, r3
   106ac:	ldr	r2, [r3, r2]
   106b0:	cmp	r2, #0
   106b4:	bxeq	lr
   106b8:	b	105f8 <__gmon_start__@plt>
   106bc:	andeq	r1, r1, r0, asr r9
   106c0:	andeq	r0, r0, r4, asr r0
   106c4:	ldr	r0, [pc, #24]	; 106e4 <abort@plt+0x8c>
   106c8:	ldr	r3, [pc, #24]	; 106e8 <abort@plt+0x90>
   106cc:	cmp	r3, r0
   106d0:	bxeq	lr
   106d4:	ldr	r3, [pc, #16]	; 106ec <abort@plt+0x94>
   106d8:	cmp	r3, #0
   106dc:	bxeq	lr
   106e0:	bx	r3
   106e4:	andeq	r2, r2, r0, rrx
   106e8:	andeq	r2, r2, r0, rrx
   106ec:	andeq	r0, r0, r0
   106f0:	ldr	r0, [pc, #36]	; 1071c <abort@plt+0xc4>
   106f4:	ldr	r1, [pc, #36]	; 10720 <abort@plt+0xc8>
   106f8:	sub	r1, r1, r0
   106fc:	asr	r1, r1, #2
   10700:	add	r1, r1, r1, lsr #31
   10704:	asrs	r1, r1, #1
   10708:	bxeq	lr
   1070c:	ldr	r3, [pc, #16]	; 10724 <abort@plt+0xcc>
   10710:	cmp	r3, #0
   10714:	bxeq	lr
   10718:	bx	r3
   1071c:	andeq	r2, r2, r0, rrx
   10720:	andeq	r2, r2, r0, rrx
   10724:	andeq	r0, r0, r0
   10728:	push	{r4, lr}
   1072c:	ldr	r4, [pc, #24]	; 1074c <abort@plt+0xf4>
   10730:	ldrb	r3, [r4]
   10734:	cmp	r3, #0
   10738:	popne	{r4, pc}
   1073c:	bl	106c4 <abort@plt+0x6c>
   10740:	mov	r3, #1
   10744:	strb	r3, [r4]
   10748:	pop	{r4, pc}
   1074c:	andeq	r2, r2, r8, rrx
   10750:	b	106f0 <abort@plt+0x98>
   10754:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10758:	strd	r6, [sp, #8]
   1075c:	str	r8, [sp, #16]
   10760:	str	lr, [sp, #20]
   10764:	mov	r7, r2
   10768:	mov	r5, r3
   1076c:	bic	r6, r0, #-268435456	; 0xf0000000
   10770:	mov	r2, r6
   10774:	mov	r3, #0
   10778:	cmp	r3, r1
   1077c:	cmpeq	r6, r0
   10780:	beq	10830 <abort@plt+0x1d8>
   10784:	lsr	r4, r0, #28
   10788:	orr	r4, r4, r1, lsl #4
   1078c:	lsr	r8, r1, #28
   10790:	lsr	r2, r1, #24
   10794:	mov	r3, #0
   10798:	orrs	r3, r2, r3
   1079c:	bne	107f4 <abort@plt+0x19c>
   107a0:	mov	r3, r5
   107a4:	add	r2, r7, #1
   107a8:	mov	r0, r4
   107ac:	mov	r1, r8
   107b0:	bl	10754 <abort@plt+0xfc>
   107b4:	mov	r2, #28
   107b8:	movw	r1, #3752	; 0xea8
   107bc:	movt	r1, #1
   107c0:	mov	r0, #1
   107c4:	bl	10634 <__printf_chk@plt>
   107c8:	mov	r2, #7
   107cc:	mov	r3, r6
   107d0:	movw	r1, #3780	; 0xec4
   107d4:	movt	r1, #1
   107d8:	mov	r0, #1
   107dc:	bl	10634 <__printf_chk@plt>
   107e0:	ldrd	r4, [sp]
   107e4:	ldrd	r6, [sp, #8]
   107e8:	ldr	r8, [sp, #16]
   107ec:	add	sp, sp, #20
   107f0:	pop	{pc}		; (ldr pc, [sp], #4)
   107f4:	mov	r0, #40	; 0x28
   107f8:	bl	10628 <putchar@plt>
   107fc:	mov	r3, r5
   10800:	add	r2, r7, #1
   10804:	mov	r0, r4
   10808:	mov	r1, r8
   1080c:	bl	10754 <abort@plt+0xfc>
   10810:	movw	r3, #3980	; 0xf8c
   10814:	movt	r3, #1
   10818:	add	r2, r7, #3
   1081c:	movw	r1, #3744	; 0xea0
   10820:	movt	r1, #1
   10824:	mov	r0, #1
   10828:	bl	10634 <__printf_chk@plt>
   1082c:	b	107b4 <abort@plt+0x15c>
   10830:	cmp	r7, #0
   10834:	moveq	r2, #7
   10838:	beq	107cc <abort@plt+0x174>
   1083c:	movw	r1, #3764	; 0xeb4
   10840:	movt	r1, #1
   10844:	mov	r0, #1
   10848:	bl	10634 <__printf_chk@plt>
   1084c:	sub	r2, r5, #1
   10850:	and	r2, r2, #3
   10854:	add	r2, r2, #1
   10858:	b	107cc <abort@plt+0x174>
   1085c:	str	r4, [sp, #-8]!
   10860:	str	lr, [sp, #4]
   10864:	bl	105d4 <malloc@plt>
   10868:	cmp	r0, #0
   1086c:	beq	1087c <abort@plt+0x224>
   10870:	ldr	r4, [sp]
   10874:	add	sp, sp, #4
   10878:	pop	{pc}		; (ldr pc, [sp], #4)
   1087c:	movw	r3, #8288	; 0x2060
   10880:	movt	r3, #2
   10884:	ldr	r3, [r3]
   10888:	mov	r2, #26
   1088c:	mov	r1, #1
   10890:	movw	r0, #3788	; 0xecc
   10894:	movt	r0, #1
   10898:	bl	105bc <fwrite@plt>
   1089c:	mov	r0, #1
   108a0:	bl	10604 <exit@plt>
   108a4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   108a8:	strd	r6, [sp, #8]
   108ac:	strd	r8, [sp, #16]
   108b0:	strd	sl, [sp, #24]
   108b4:	str	lr, [sp, #32]
   108b8:	sub	sp, sp, #28
   108bc:	mov	r3, r1
   108c0:	cmp	r0, #2
   108c4:	beq	10908 <abort@plt+0x2b0>
   108c8:	movw	r0, #8288	; 0x2060
   108cc:	movt	r0, #2
   108d0:	ldr	r3, [r1]
   108d4:	movw	r2, #3816	; 0xee8
   108d8:	movt	r2, #1
   108dc:	mov	r1, #1
   108e0:	ldr	r0, [r0]
   108e4:	bl	10640 <__fprintf_chk@plt>
   108e8:	mov	r0, #1
   108ec:	add	sp, sp, #28
   108f0:	ldrd	r4, [sp]
   108f4:	ldrd	r6, [sp, #8]
   108f8:	ldrd	r8, [sp, #16]
   108fc:	ldrd	sl, [sp, #24]
   10900:	add	sp, sp, #32
   10904:	pop	{pc}		; (ldr pc, [sp], #4)
   10908:	mov	r2, #10
   1090c:	mov	r1, #0
   10910:	ldr	r0, [r3, #4]
   10914:	bl	10598 <strtol@plt>
   10918:	cmp	r0, #2
   1091c:	ble	10bd4 <abort@plt+0x57c>
   10920:	tst	r0, #1
   10924:	bne	10c58 <abort@plt+0x600>
   10928:	sub	r0, r0, #2
   1092c:	add	r0, r0, r0, lsr #31
   10930:	asr	r4, r0, #1
   10934:	mov	r5, r4
   10938:	mov	r0, r4
   1093c:	bl	1085c <abort@plt+0x204>
   10940:	mov	sl, r0
   10944:	mov	r2, r4
   10948:	mov	r1, #1
   1094c:	bl	1061c <memset@plt>
   10950:	mov	r0, #24
   10954:	mul	r0, r0, r4
   10958:	bl	1085c <abort@plt+0x204>
   1095c:	str	r0, [sp, #20]
   10960:	cmp	r4, #0
   10964:	bne	10c94 <abort@plt+0x63c>
   10968:	str	r4, [sp, #4]
   1096c:	b	10a60 <abort@plt+0x408>
   10970:	mov	r2, r6
   10974:	mov	r3, r7
   10978:	adds	ip, r2, r2
   1097c:	adc	fp, r3, r3
   10980:	mul	r1, r2, r3
   10984:	umull	r8, r9, r2, r2
   10988:	add	r9, r9, r1, lsl #1
   1098c:	umull	r0, r1, r8, lr
   10990:	mla	r1, lr, r9, r1
   10994:	subs	r6, ip, r0
   10998:	sbc	r7, fp, r1
   1099c:	cmp	r3, r7
   109a0:	cmpeq	r2, r6
   109a4:	bne	10970 <abort@plt+0x318>
   109a8:	ldr	r8, [sp, #12]
   109ac:	strd	r6, [r8, #8]
   109b0:	mov	r2, sl
   109b4:	mov	r3, #0
   109b8:	mvn	r0, #0
   109bc:	mvn	r1, #0
   109c0:	bl	10cbc <abort@plt+0x664>
   109c4:	strd	r0, [r8, #16]
   109c8:	mul	r3, sl, sl
   109cc:	sub	r3, r3, #3
   109d0:	lsr	r3, r3, #1
   109d4:	cmp	r3, r5
   109d8:	bcs	109f4 <abort@plt+0x39c>
   109dc:	ldr	r2, [sp]
   109e0:	mov	r1, #0
   109e4:	strb	r1, [r2, r3]
   109e8:	add	r3, r3, sl
   109ec:	cmp	r3, r5
   109f0:	bcc	109e0 <abort@plt+0x388>
   109f4:	ldr	r3, [sp]
   109f8:	add	r3, r3, r4
   109fc:	add	r4, r4, #1
   10a00:	cmp	r4, r5
   10a04:	bcs	10a5c <abort@plt+0x404>
   10a08:	ldrb	r2, [r3, #1]!
   10a0c:	cmp	r2, #0
   10a10:	beq	109fc <abort@plt+0x3a4>
   10a14:	ldr	r3, [sp, #8]
   10a18:	add	r3, r3, #24
   10a1c:	str	r3, [sp, #8]
   10a20:	lsl	sl, r4, #1
   10a24:	add	sl, sl, #3
   10a28:	ldr	r3, [sp, #4]
   10a2c:	add	r3, r3, #1
   10a30:	str	r3, [sp, #4]
   10a34:	ldr	r3, [sp, #8]
   10a38:	str	r3, [sp, #12]
   10a3c:	str	sl, [r3]
   10a40:	mov	lr, sl
   10a44:	ubfx	r2, sl, #1, #3
   10a48:	lsl	r2, r2, #2
   10a4c:	ldr	r3, [sp, #16]
   10a50:	lsr	r2, r3, r2
   10a54:	mov	r3, #0
   10a58:	b	10978 <abort@plt+0x320>
   10a5c:	ldr	sl, [sp]
   10a60:	mov	r3, #0
   10a64:	add	r3, r3, #1
   10a68:	cmp	r3, #64	; 0x40
   10a6c:	bne	10a64 <abort@plt+0x40c>
   10a70:	movw	r0, #3872	; 0xf20
   10a74:	movt	r0, #1
   10a78:	bl	105c8 <puts@plt>
   10a7c:	mov	r2, #64	; 0x40
   10a80:	movw	r1, #3912	; 0xf48
   10a84:	movt	r1, #1
   10a88:	mov	r0, #1
   10a8c:	bl	10634 <__printf_chk@plt>
   10a90:	ldr	r3, [sp, #4]
   10a94:	cmp	r3, #0
   10a98:	beq	10b5c <abort@plt+0x504>
   10a9c:	ldr	r5, [sp, #20]
   10aa0:	add	r9, r3, #8
   10aa4:	mov	r6, #8
   10aa8:	mov	r2, #2
   10aac:	mov	fp, #255	; 0xff
   10ab0:	movw	r8, #3940	; 0xf64
   10ab4:	movt	r8, #1
   10ab8:	movw	r7, #3956	; 0xf74
   10abc:	movt	r7, #1
   10ac0:	str	sl, [sp]
   10ac4:	mov	sl, r3
   10ac8:	b	10b18 <abort@plt+0x4c0>
   10acc:	mov	r3, fp
   10ad0:	ldr	r4, [r5]
   10ad4:	sub	r2, r4, r2
   10ad8:	mov	r1, r8
   10adc:	mov	r0, #1
   10ae0:	bl	10634 <__printf_chk@plt>
   10ae4:	mov	r3, #64	; 0x40
   10ae8:	mov	r2, #0
   10aec:	ldrd	r0, [r5, #8]
   10af0:	bl	10754 <abort@plt+0xfc>
   10af4:	mov	r2, r4
   10af8:	mov	r1, r7
   10afc:	mov	r0, #1
   10b00:	bl	10634 <__printf_chk@plt>
   10b04:	add	r6, r6, #1
   10b08:	add	r5, r5, #24
   10b0c:	mov	r2, r4
   10b10:	cmp	r6, r9
   10b14:	beq	10b38 <abort@plt+0x4e0>
   10b18:	cmp	r6, sl
   10b1c:	bcs	10acc <abort@plt+0x474>
   10b20:	ldr	r3, [r5, #192]	; 0xc0
   10b24:	ldr	r1, [r5]
   10b28:	sub	r3, r3, r1
   10b2c:	cmp	r3, #255	; 0xff
   10b30:	bls	10ad0 <abort@plt+0x478>
   10b34:	bl	10658 <abort@plt>
   10b38:	ldr	sl, [sp]
   10b3c:	movw	r0, #3984	; 0xf90
   10b40:	movt	r0, #1
   10b44:	bl	105c8 <puts@plt>
   10b48:	ldr	r6, [sp, #20]
   10b4c:	ldr	lr, [r6]
   10b50:	mul	lr, lr, lr
   10b54:	add	r2, r4, #2
   10b58:	b	10b68 <abort@plt+0x510>
   10b5c:	mov	r4, #2
   10b60:	b	10b3c <abort@plt+0x4e4>
   10b64:	add	r2, r2, #2
   10b68:	cmp	lr, r2
   10b6c:	bhi	10bdc <abort@plt+0x584>
   10b70:	mov	ip, r2
   10b74:	ldr	r4, [r6, #8]
   10b78:	ldr	r3, [r6, #12]
   10b7c:	umull	r4, r5, r4, r2
   10b80:	mla	r5, r2, r3, r5
   10b84:	ldrd	r0, [r6, #16]
   10b88:	cmp	r5, r1
   10b8c:	cmpeq	r4, r0
   10b90:	bls	10b64 <abort@plt+0x50c>
   10b94:	mov	r7, r6
   10b98:	mov	r1, r7
   10b9c:	ldr	r3, [r7, #24]
   10ba0:	mul	r3, r3, r3
   10ba4:	cmp	r3, r2
   10ba8:	bhi	10bdc <abort@plt+0x584>
   10bac:	add	r7, r7, #24
   10bb0:	ldr	r0, [r1, #32]
   10bb4:	ldr	r3, [r1, #36]	; 0x24
   10bb8:	umull	r0, r1, r0, ip
   10bbc:	mla	r1, ip, r3, r1
   10bc0:	ldrd	r4, [r7, #16]
   10bc4:	cmp	r1, r5
   10bc8:	cmpeq	r0, r4
   10bcc:	bhi	10b98 <abort@plt+0x540>
   10bd0:	b	10b64 <abort@plt+0x50c>
   10bd4:	mov	r0, #0
   10bd8:	b	108ec <abort@plt+0x294>
   10bdc:	movw	r1, #4032	; 0xfc0
   10be0:	movt	r1, #1
   10be4:	mov	r0, #1
   10be8:	bl	10634 <__printf_chk@plt>
   10bec:	mov	r0, sl
   10bf0:	bl	105a4 <free@plt>
   10bf4:	ldr	r0, [sp, #20]
   10bf8:	bl	105a4 <free@plt>
   10bfc:	movw	r5, #8292	; 0x2064
   10c00:	movt	r5, #2
   10c04:	ldr	r0, [r5]
   10c08:	bl	105b0 <ferror@plt>
   10c0c:	mov	r4, r0
   10c10:	ldr	r0, [r5]
   10c14:	bl	1064c <fclose@plt>
   10c18:	adds	r0, r4, r0
   10c1c:	beq	108ec <abort@plt+0x294>
   10c20:	movw	r3, #8288	; 0x2060
   10c24:	movt	r3, #2
   10c28:	ldr	r4, [r3]
   10c2c:	bl	10610 <__errno_location@plt>
   10c30:	ldr	r0, [r0]
   10c34:	bl	105ec <strerror@plt>
   10c38:	mov	r3, r0
   10c3c:	movw	r2, #4012	; 0xfac
   10c40:	movt	r2, #1
   10c44:	mov	r1, #1
   10c48:	mov	r0, r4
   10c4c:	bl	10640 <__fprintf_chk@plt>
   10c50:	mov	r0, #1
   10c54:	b	108ec <abort@plt+0x294>
   10c58:	sub	r0, r0, #1
   10c5c:	add	r0, r0, r0, lsr #31
   10c60:	asr	r3, r0, #1
   10c64:	mov	r4, r3
   10c68:	mov	r5, r3
   10c6c:	mov	r0, r3
   10c70:	bl	1085c <abort@plt+0x204>
   10c74:	mov	sl, r0
   10c78:	mov	r2, r4
   10c7c:	mov	r1, #1
   10c80:	bl	1061c <memset@plt>
   10c84:	mov	r0, #24
   10c88:	mul	r0, r0, r4
   10c8c:	bl	1085c <abort@plt+0x204>
   10c90:	str	r0, [sp, #20]
   10c94:	ldr	r3, [sp, #20]
   10c98:	str	r3, [sp, #8]
   10c9c:	mov	r3, #0
   10ca0:	str	r3, [sp, #4]
   10ca4:	mov	r4, r3
   10ca8:	movw	r3, #32177	; 0x7db1
   10cac:	movt	r3, #62777	; 0xf539
   10cb0:	str	r3, [sp, #16]
   10cb4:	str	sl, [sp]
   10cb8:	b	10a20 <abort@plt+0x3c8>
   10cbc:	cmp	r3, #0
   10cc0:	cmpeq	r2, #0
   10cc4:	bne	10cdc <abort@plt+0x684>
   10cc8:	cmp	r1, #0
   10ccc:	cmpeq	r0, #0
   10cd0:	mvnne	r1, #0
   10cd4:	mvnne	r0, #0
   10cd8:	b	10cf8 <abort@plt+0x6a0>
   10cdc:	sub	sp, sp, #8
   10ce0:	push	{sp, lr}
   10ce4:	bl	10d08 <abort@plt+0x6b0>
   10ce8:	ldr	lr, [sp, #4]
   10cec:	add	sp, sp, #8
   10cf0:	pop	{r2, r3}
   10cf4:	bx	lr
   10cf8:	push	{r1, lr}
   10cfc:	mov	r0, #8
   10d00:	bl	1058c <raise@plt>
   10d04:	pop	{r1, pc}
   10d08:	cmp	r1, r3
   10d0c:	cmpeq	r0, r2
   10d10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d14:	mov	r4, r0
   10d18:	movcc	r0, #0
   10d1c:	mov	r5, r1
   10d20:	ldr	lr, [sp, #36]	; 0x24
   10d24:	movcc	r1, r0
   10d28:	bcc	10e24 <abort@plt+0x7cc>
   10d2c:	cmp	r3, #0
   10d30:	clzeq	ip, r2
   10d34:	clzne	ip, r3
   10d38:	addeq	ip, ip, #32
   10d3c:	cmp	r5, #0
   10d40:	clzeq	r1, r4
   10d44:	addeq	r1, r1, #32
   10d48:	clzne	r1, r5
   10d4c:	sub	ip, ip, r1
   10d50:	sub	sl, ip, #32
   10d54:	lsl	r9, r3, ip
   10d58:	rsb	fp, ip, #32
   10d5c:	orr	r9, r9, r2, lsl sl
   10d60:	orr	r9, r9, r2, lsr fp
   10d64:	lsl	r8, r2, ip
   10d68:	cmp	r5, r9
   10d6c:	cmpeq	r4, r8
   10d70:	movcc	r0, #0
   10d74:	movcc	r1, r0
   10d78:	bcc	10d94 <abort@plt+0x73c>
   10d7c:	mov	r0, #1
   10d80:	subs	r4, r4, r8
   10d84:	lsl	r1, r0, sl
   10d88:	orr	r1, r1, r0, lsr fp
   10d8c:	lsl	r0, r0, ip
   10d90:	sbc	r5, r5, r9
   10d94:	cmp	ip, #0
   10d98:	beq	10e24 <abort@plt+0x7cc>
   10d9c:	lsr	r6, r8, #1
   10da0:	orr	r6, r6, r9, lsl #31
   10da4:	lsr	r7, r9, #1
   10da8:	mov	r2, ip
   10dac:	b	10dd0 <abort@plt+0x778>
   10db0:	subs	r3, r4, r6
   10db4:	sbc	r8, r5, r7
   10db8:	adds	r3, r3, r3
   10dbc:	adc	r8, r8, r8
   10dc0:	adds	r4, r3, #1
   10dc4:	adc	r5, r8, #0
   10dc8:	subs	r2, r2, #1
   10dcc:	beq	10dec <abort@plt+0x794>
   10dd0:	cmp	r5, r7
   10dd4:	cmpeq	r4, r6
   10dd8:	bcs	10db0 <abort@plt+0x758>
   10ddc:	adds	r4, r4, r4
   10de0:	adc	r5, r5, r5
   10de4:	subs	r2, r2, #1
   10de8:	bne	10dd0 <abort@plt+0x778>
   10dec:	lsr	r3, r4, ip
   10df0:	orr	r3, r3, r5, lsl fp
   10df4:	lsr	r2, r5, ip
   10df8:	orr	r3, r3, r5, lsr sl
   10dfc:	adds	r0, r0, r4
   10e00:	mov	r4, r3
   10e04:	lsl	r3, r2, ip
   10e08:	orr	r3, r3, r4, lsl sl
   10e0c:	lsl	ip, r4, ip
   10e10:	orr	r3, r3, r4, lsr fp
   10e14:	adc	r1, r1, r5
   10e18:	subs	r0, r0, ip
   10e1c:	mov	r5, r2
   10e20:	sbc	r1, r1, r3
   10e24:	cmp	lr, #0
   10e28:	strdne	r4, [lr]
   10e2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e30:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10e34:	mov	r7, r0
   10e38:	ldr	r6, [pc, #72]	; 10e88 <abort@plt+0x830>
   10e3c:	ldr	r5, [pc, #72]	; 10e8c <abort@plt+0x834>
   10e40:	add	r6, pc, r6
   10e44:	add	r5, pc, r5
   10e48:	sub	r6, r6, r5
   10e4c:	mov	r8, r1
   10e50:	mov	r9, r2
   10e54:	bl	1056c <raise@plt-0x20>
   10e58:	asrs	r6, r6, #2
   10e5c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10e60:	mov	r4, #0
   10e64:	add	r4, r4, #1
   10e68:	ldr	r3, [r5], #4
   10e6c:	mov	r2, r9
   10e70:	mov	r1, r8
   10e74:	mov	r0, r7
   10e78:	blx	r3
   10e7c:	cmp	r6, r4
   10e80:	bne	10e64 <abort@plt+0x80c>
   10e84:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10e88:	andeq	r1, r1, ip, asr #1
   10e8c:	andeq	r1, r1, r4, asr #1
   10e90:	bx	lr

Disassembly of section .fini:

00010e94 <.fini>:
   10e94:	push	{r3, lr}
   10e98:	pop	{r3, pc}
