
../repos/charybdis/extensions/.libs/chm_operonly_compat.so:     file format elf32-littlearm


Disassembly of section .init:

000003f4 <_init>:
 3f4:	push	{r3, lr}
 3f8:	bl	450 <call_weak_fn>
 3fc:	pop	{r3, pc}

Disassembly of section .plt:

00000400 <.plt>:
 400:	push	{lr}		; (str lr, [sp, #-4]!)
 404:	ldr	lr, [pc, #4]	; 410 <.plt+0x10>
 408:	add	lr, pc, lr
 40c:	ldr	pc, [lr, #8]!
 410:	.word	0x00010bf0

00000414 <__cxa_finalize@plt>:
 414:	add	ip, pc, #0, 12
 418:	add	ip, ip, #16, 20	; 0x10000
 41c:	ldr	pc, [ip, #3056]!	; 0xbf0

00000420 <chm_nosuch@plt>:
 420:	add	ip, pc, #0, 12
 424:	add	ip, ip, #16, 20	; 0x10000
 428:	ldr	pc, [ip, #3048]!	; 0xbe8

0000042c <chm_simple@plt>:
 42c:	add	ip, pc, #0, 12
 430:	add	ip, ip, #16, 20	; 0x10000
 434:	ldr	pc, [ip, #3040]!	; 0xbe0

00000438 <__gmon_start__@plt>:
 438:	add	ip, pc, #0, 12
 43c:	add	ip, ip, #16, 20	; 0x10000
 440:	ldr	pc, [ip, #3032]!	; 0xbd8

00000444 <chm_ban@plt>:
 444:	add	ip, pc, #0, 12
 448:	add	ip, ip, #16, 20	; 0x10000
 44c:	ldr	pc, [ip, #3024]!	; 0xbd0

Disassembly of section .text:

00000450 <call_weak_fn>:
 450:	ldr	r3, [pc, #20]	; 46c <call_weak_fn+0x1c>
 454:	ldr	r2, [pc, #20]	; 470 <call_weak_fn+0x20>
 458:	add	r3, pc, r3
 45c:	ldr	r2, [r3, r2]
 460:	cmp	r2, #0
 464:	bxeq	lr
 468:	b	438 <__gmon_start__@plt>
 46c:	.word	0x00010ba0
 470:	.word	0x0000002c

00000474 <deregister_tm_clones>:
 474:	ldr	r3, [pc, #52]	; 4b0 <deregister_tm_clones+0x3c>
 478:	ldr	r0, [pc, #52]	; 4b4 <deregister_tm_clones+0x40>
 47c:	add	r3, pc, r3
 480:	add	r0, pc, r0
 484:	add	r3, r3, #3
 488:	sub	r3, r3, r0
 48c:	cmp	r3, #6
 490:	ldr	r3, [pc, #32]	; 4b8 <deregister_tm_clones+0x44>
 494:	add	r3, pc, r3
 498:	bxls	lr
 49c:	ldr	r2, [pc, #24]	; 4bc <deregister_tm_clones+0x48>
 4a0:	ldr	r3, [r3, r2]
 4a4:	cmp	r3, #0
 4a8:	bxeq	lr
 4ac:	bx	r3
 4b0:	.word	0x00010be4
 4b4:	.word	0x00010be0
 4b8:	.word	0x00010b64
 4bc:	.word	0x00000024

000004c0 <register_tm_clones>:
 4c0:	ldr	r1, [pc, #56]	; 500 <register_tm_clones+0x40>
 4c4:	ldr	r0, [pc, #56]	; 504 <register_tm_clones+0x44>
 4c8:	add	r1, pc, r1
 4cc:	add	r0, pc, r0
 4d0:	sub	r1, r1, r0
 4d4:	ldr	r3, [pc, #44]	; 508 <register_tm_clones+0x48>
 4d8:	asr	r1, r1, #2
 4dc:	add	r3, pc, r3
 4e0:	add	r1, r1, r1, lsr #31
 4e4:	asrs	r1, r1, #1
 4e8:	bxeq	lr
 4ec:	ldr	r2, [pc, #24]	; 50c <register_tm_clones+0x4c>
 4f0:	ldr	r3, [r3, r2]
 4f4:	cmp	r3, #0
 4f8:	bxeq	lr
 4fc:	bx	r3
 500:	.word	0x00010b98
 504:	.word	0x00010b94
 508:	.word	0x00010b1c
 50c:	.word	0x00000038

00000510 <__do_global_dtors_aux>:
 510:	ldr	r3, [pc, #76]	; 564 <__do_global_dtors_aux+0x54>
 514:	ldr	r2, [pc, #76]	; 568 <__do_global_dtors_aux+0x58>
 518:	add	r3, pc, r3
 51c:	add	r2, pc, r2
 520:	ldrb	r3, [r3]
 524:	cmp	r3, #0
 528:	bxne	lr
 52c:	ldr	r3, [pc, #56]	; 56c <__do_global_dtors_aux+0x5c>
 530:	push	{r4, lr}
 534:	ldr	r3, [r2, r3]
 538:	cmp	r3, #0
 53c:	beq	54c <__do_global_dtors_aux+0x3c>
 540:	ldr	r3, [pc, #40]	; 570 <__do_global_dtors_aux+0x60>
 544:	ldr	r0, [pc, r3]
 548:	bl	414 <__cxa_finalize@plt>
 54c:	bl	474 <deregister_tm_clones>
 550:	ldr	r3, [pc, #28]	; 574 <__do_global_dtors_aux+0x64>
 554:	mov	r2, #1
 558:	add	r3, pc, r3
 55c:	strb	r2, [r3]
 560:	pop	{r4, pc}
 564:	.word	0x00010b48
 568:	.word	0x00010adc
 56c:	.word	0x00000020
 570:	.word	0x00010af0
 574:	.word	0x00010b08

00000578 <frame_dummy>:
 578:	ldr	r0, [pc, #56]	; 5b8 <frame_dummy+0x40>
 57c:	ldr	r3, [pc, #56]	; 5bc <frame_dummy+0x44>
 580:	add	r0, pc, r0
 584:	ldr	r2, [r0]
 588:	add	r3, pc, r3
 58c:	cmp	r2, #0
 590:	bne	598 <frame_dummy+0x20>
 594:	b	4c0 <register_tm_clones>
 598:	ldr	r2, [pc, #32]	; 5c0 <frame_dummy+0x48>
 59c:	ldr	r3, [r3, r2]
 5a0:	cmp	r3, #0
 5a4:	beq	594 <frame_dummy+0x1c>
 5a8:	push	{r4, lr}
 5ac:	blx	r3
 5b0:	pop	{r4, lr}
 5b4:	b	4c0 <register_tm_clones>
 5b8:	.word	0x00010974
 5bc:	.word	0x00010a70
 5c0:	.word	0x00000034

000005c4 <_modinit>:
 5c4:	ldr	r3, [pc, #32]	; 5ec <_modinit+0x28>
 5c8:	add	r3, pc, r3
 5cc:	ldr	r2, [pc, #28]	; 5f0 <_modinit+0x2c>
 5d0:	ldr	r3, [r3, r2]
 5d4:	ldr	r2, [pc, #24]	; 5f4 <_modinit+0x30>
 5d8:	add	r2, pc, r2
 5dc:	str	r2, [r3, #632]	; 0x278
 5e0:	mov	r0, #0
 5e4:	str	r0, [r3, #636]	; 0x27c
 5e8:	bx	lr
 5ec:	.word	0x00010a30
 5f0:	.word	0x00000030
 5f4:	.word	0x0000004c

000005f8 <_moddeinit>:
 5f8:	ldr	r3, [pc, #32]	; 620 <_moddeinit+0x28>
 5fc:	add	r3, pc, r3
 600:	ldr	r2, [pc, #28]	; 624 <_moddeinit+0x2c>
 604:	ldr	r2, [r3, r2]
 608:	ldr	r1, [pc, #24]	; 628 <_moddeinit+0x30>
 60c:	ldr	r3, [r3, r1]
 610:	str	r3, [r2, #632]	; 0x278
 614:	mov	r3, #0
 618:	str	r3, [r2, #636]	; 0x27c
 61c:	bx	lr
 620:	.word	0x000109fc
 624:	.word	0x00000030
 628:	.word	0x00000028

0000062c <chm_operonly>:
 62c:	push	{r4, r5, r6, r7, r8, lr}
 630:	sub	sp, sp, #32
 634:	mov	r4, r0
 638:	mov	r5, r1
 63c:	mov	r6, r2
 640:	mov	r1, r3
 644:	ldr	r7, [sp, #64]	; 0x40
 648:	ldr	r8, [sp, #68]	; 0x44
 64c:	mov	r2, #0
 650:	str	r2, [sp, #28]
 654:	ldr	r2, [pc, #224]	; 73c <chm_operonly+0x110>
 658:	add	r2, pc, r2
 65c:	str	r2, [sp, #24]
 660:	ldrd	r2, [r0, #64]	; 0x40
 664:	and	r2, r2, #8192	; 0x2000
 668:	mov	r3, #0
 66c:	orrs	r3, r2, r3
 670:	beq	680 <chm_operonly+0x54>
 674:	ldrh	r3, [r0, #80]	; 0x50
 678:	cmp	r3, #64	; 0x40
 67c:	beq	6c4 <chm_operonly+0x98>
 680:	ldr	r3, [sp, #76]	; 0x4c
 684:	str	r3, [sp, #20]
 688:	ldrb	r3, [sp, #72]	; 0x48
 68c:	str	r3, [sp, #16]
 690:	str	r8, [sp, #12]
 694:	str	r7, [sp, #8]
 698:	ldr	r3, [sp, #60]	; 0x3c
 69c:	str	r3, [sp, #4]
 6a0:	ldr	r3, [sp, #56]	; 0x38
 6a4:	str	r3, [sp]
 6a8:	mov	r3, r1
 6ac:	mov	r2, r6
 6b0:	mov	r1, r5
 6b4:	mov	r0, r4
 6b8:	bl	420 <chm_nosuch@plt>
 6bc:	add	sp, sp, #32
 6c0:	pop	{r4, r5, r6, r7, r8, pc}
 6c4:	mov	r3, #16
 6c8:	str	r3, [sp, #20]
 6cc:	mov	r3, #105	; 0x69
 6d0:	str	r3, [sp, #16]
 6d4:	str	r8, [sp, #12]
 6d8:	str	r7, [sp, #8]
 6dc:	ldr	r3, [sp, #60]	; 0x3c
 6e0:	str	r3, [sp, #4]
 6e4:	ldr	r3, [sp, #56]	; 0x38
 6e8:	str	r3, [sp]
 6ec:	mov	r3, r1
 6f0:	mov	r2, r6
 6f4:	mov	r1, r5
 6f8:	bl	42c <chm_simple@plt>
 6fc:	mov	r3, #1073741824	; 0x40000000
 700:	str	r3, [sp, #20]
 704:	mov	r3, #73	; 0x49
 708:	str	r3, [sp, #16]
 70c:	str	r8, [sp, #12]
 710:	str	r7, [sp, #8]
 714:	add	r3, sp, #24
 718:	str	r3, [sp, #4]
 71c:	add	r3, sp, #28
 720:	str	r3, [sp]
 724:	mov	r3, #1
 728:	mov	r2, r6
 72c:	mov	r1, r5
 730:	mov	r0, r4
 734:	bl	444 <chm_ban@plt>
 738:	b	6bc <chm_operonly+0x90>
 73c:	.word	0x00000134

Disassembly of section .fini:

00000740 <_fini>:
 740:	push	{r3, lr}
 744:	pop	{r3, pc}
