
../repos/prog2/MT1E1-1.2:     file format elf32-littlearm


Disassembly of section .init:

00010724 <.init>:
   10724:	push	{r3, lr}
   10728:	bl	108ec <_start@@Base+0x3c>
   1072c:	pop	{r3, pc}

Disassembly of section .plt:

00010730 <strcmp@plt-0x14>:
   10730:	push	{lr}		; (str lr, [sp, #-4]!)
   10734:	ldr	lr, [pc, #4]	; 10740 <strcmp@plt-0x4>
   10738:	add	lr, pc, lr
   1073c:	ldr	pc, [lr, #8]!
   10740:	andeq	r0, r1, r0, asr #17

00010744 <strcmp@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #16, 20	; 0x10000
   1074c:	ldr	pc, [ip, #2240]!	; 0x8c0

00010750 <printf@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #16, 20	; 0x10000
   10758:	ldr	pc, [ip, #2232]!	; 0x8b8

0001075c <__isoc99_fscanf@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #16, 20	; 0x10000
   10764:	ldr	pc, [ip, #2224]!	; 0x8b0

00010768 <fopen@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #16, 20	; 0x10000
   10770:	ldr	pc, [ip, #2216]!	; 0x8a8

00010774 <free@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #16, 20	; 0x10000
   1077c:	ldr	pc, [ip, #2208]!	; 0x8a0

00010780 <realloc@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #16, 20	; 0x10000
   10788:	ldr	pc, [ip, #2200]!	; 0x898

0001078c <strcpy@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #16, 20	; 0x10000
   10794:	ldr	pc, [ip, #2192]!	; 0x890

00010798 <malloc@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #16, 20	; 0x10000
   107a0:	ldr	pc, [ip, #2184]!	; 0x888

000107a4 <__libc_start_main@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #16, 20	; 0x10000
   107ac:	ldr	pc, [ip, #2176]!	; 0x880

000107b0 <__gmon_start__@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #16, 20	; 0x10000
   107b8:	ldr	pc, [ip, #2168]!	; 0x878

000107bc <fprintf@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #16, 20	; 0x10000
   107c4:	ldr	pc, [ip, #2160]!	; 0x870

000107c8 <fclose@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #16, 20	; 0x10000
   107d0:	ldr	pc, [ip, #2152]!	; 0x868

000107d4 <__isoc99_scanf@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #16, 20	; 0x10000
   107dc:	ldr	pc, [ip, #2144]!	; 0x860

000107e0 <fputs@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #16, 20	; 0x10000
   107e8:	ldr	pc, [ip, #2136]!	; 0x858

000107ec <abort@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #16, 20	; 0x10000
   107f4:	ldr	pc, [ip, #2128]!	; 0x850

Disassembly of section .text:

000107f8 <main@@Base>:
   107f8:	push	{r4, r5, r6, lr}
   107fc:	sub	sp, sp, #112	; 0x70
   10800:	ldr	r0, [pc, #148]	; 1089c <main@@Base+0xa4>
   10804:	bl	10750 <printf@plt>
   10808:	add	r1, sp, #8
   1080c:	ldr	r0, [pc, #140]	; 108a0 <main@@Base+0xa8>
   10810:	bl	107d4 <__isoc99_scanf@plt>
   10814:	ldr	r0, [pc, #136]	; 108a4 <main@@Base+0xac>
   10818:	bl	10750 <printf@plt>
   1081c:	add	r1, sp, #60	; 0x3c
   10820:	ldr	r0, [pc, #120]	; 108a0 <main@@Base+0xa8>
   10824:	bl	107d4 <__isoc99_scanf@plt>
   10828:	ldr	r1, [pc, #120]	; 108a8 <main@@Base+0xb0>
   1082c:	add	r0, sp, #8
   10830:	bl	10768 <fopen@plt>
   10834:	subs	r6, r0, #0
   10838:	bne	10848 <main@@Base+0x50>
   1083c:	mov	r0, #1
   10840:	add	sp, sp, #112	; 0x70
   10844:	pop	{r4, r5, r6, pc}
   10848:	ldr	r1, [pc, #92]	; 108ac <main@@Base+0xb4>
   1084c:	add	r0, sp, #60	; 0x3c
   10850:	bl	10768 <fopen@plt>
   10854:	subs	r5, r0, #0
   10858:	beq	1083c <main@@Base+0x44>
   1085c:	add	r1, sp, #4
   10860:	mov	r0, r6
   10864:	bl	109a0 <analisarFicheiro@@Base>
   10868:	mov	r1, r0
   1086c:	mov	r4, r0
   10870:	ldr	r2, [sp, #4]
   10874:	mov	r0, r5
   10878:	bl	10a74 <gerarRelatorio@@Base>
   1087c:	mov	r0, r6
   10880:	bl	107c8 <fclose@plt>
   10884:	mov	r0, r5
   10888:	bl	107c8 <fclose@plt>
   1088c:	mov	r0, r4
   10890:	bl	10774 <free@plt>
   10894:	mov	r0, #0
   10898:	b	10840 <main@@Base+0x48>
   1089c:	andeq	r0, r1, lr, lsl #23
   108a0:	andeq	r0, r1, r8, asr #22
   108a4:	andeq	r0, r1, r4, lsr #23
   108a8:			; <UNDEFINED> instruction: 0x00010bb8
   108ac:			; <UNDEFINED> instruction: 0x00010bba

000108b0 <_start@@Base>:
   108b0:	mov	fp, #0
   108b4:	mov	lr, #0
   108b8:	pop	{r1}		; (ldr r1, [sp], #4)
   108bc:	mov	r2, sp
   108c0:	push	{r2}		; (str r2, [sp, #-4]!)
   108c4:	push	{r0}		; (str r0, [sp, #-4]!)
   108c8:	ldr	ip, [pc, #16]	; 108e0 <_start@@Base+0x30>
   108cc:	push	{ip}		; (str ip, [sp, #-4]!)
   108d0:	ldr	r0, [pc, #12]	; 108e4 <_start@@Base+0x34>
   108d4:	ldr	r3, [pc, #12]	; 108e8 <_start@@Base+0x38>
   108d8:	bl	107a4 <__libc_start_main@plt>
   108dc:	bl	107ec <abort@plt>
   108e0:	andeq	r0, r1, r8, lsr fp
   108e4:	strdeq	r0, [r1], -r8
   108e8:	ldrdeq	r0, [r1], -r8
   108ec:	ldr	r3, [pc, #20]	; 10908 <_start@@Base+0x58>
   108f0:	ldr	r2, [pc, #20]	; 1090c <_start@@Base+0x5c>
   108f4:	add	r3, pc, r3
   108f8:	ldr	r2, [r3, r2]
   108fc:	cmp	r2, #0
   10900:	bxeq	lr
   10904:	b	107b0 <__gmon_start__@plt>
   10908:	andeq	r0, r1, r4, lsl #14
   1090c:	andeq	r0, r0, r8, asr #32
   10910:	ldr	r0, [pc, #24]	; 10930 <_start@@Base+0x80>
   10914:	ldr	r3, [pc, #24]	; 10934 <_start@@Base+0x84>
   10918:	cmp	r3, r0
   1091c:	bxeq	lr
   10920:	ldr	r3, [pc, #16]	; 10938 <_start@@Base+0x88>
   10924:	cmp	r3, #0
   10928:	bxeq	lr
   1092c:	bx	r3
   10930:	andeq	r1, r2, r4, asr r0
   10934:	andeq	r1, r2, r4, asr r0
   10938:	andeq	r0, r0, r0
   1093c:	ldr	r0, [pc, #36]	; 10968 <_start@@Base+0xb8>
   10940:	ldr	r1, [pc, #36]	; 1096c <_start@@Base+0xbc>
   10944:	sub	r1, r1, r0
   10948:	asr	r1, r1, #2
   1094c:	add	r1, r1, r1, lsr #31
   10950:	asrs	r1, r1, #1
   10954:	bxeq	lr
   10958:	ldr	r3, [pc, #16]	; 10970 <_start@@Base+0xc0>
   1095c:	cmp	r3, #0
   10960:	bxeq	lr
   10964:	bx	r3
   10968:	andeq	r1, r2, r4, asr r0
   1096c:	andeq	r1, r2, r4, asr r0
   10970:	andeq	r0, r0, r0
   10974:	push	{r4, lr}
   10978:	ldr	r4, [pc, #24]	; 10998 <_start@@Base+0xe8>
   1097c:	ldrb	r3, [r4]
   10980:	cmp	r3, #0
   10984:	popne	{r4, pc}
   10988:	bl	10910 <_start@@Base+0x60>
   1098c:	mov	r3, #1
   10990:	strb	r3, [r4]
   10994:	pop	{r4, pc}
   10998:	andeq	r1, r2, r4, asr r0
   1099c:	b	1093c <_start@@Base+0x8c>

000109a0 <analisarFicheiro@@Base>:
   109a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   109a4:	mov	r7, r0
   109a8:	sub	sp, sp, #60	; 0x3c
   109ac:	mov	r0, #104	; 0x68
   109b0:	mov	r6, r1
   109b4:	mov	r5, #0
   109b8:	mov	r9, #104	; 0x68
   109bc:	ldr	r8, [pc, #172]	; 10a70 <analisarFicheiro@@Base+0xd0>
   109c0:	bl	10798 <malloc@plt>
   109c4:	mov	sl, r0
   109c8:	add	r2, sp, #4
   109cc:	mov	r1, r8
   109d0:	mov	r0, r7
   109d4:	bl	1075c <__isoc99_fscanf@plt>
   109d8:	cmn	r0, #1
   109dc:	bne	109f0 <analisarFicheiro@@Base+0x50>
   109e0:	mov	r0, sl
   109e4:	str	r5, [r6]
   109e8:	add	sp, sp, #60	; 0x3c
   109ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109f0:	mov	r4, sl
   109f4:	mov	fp, #0
   109f8:	mov	r1, r4
   109fc:	add	r0, sp, #4
   10a00:	bl	10744 <strcmp@plt>
   10a04:	cmp	r0, #0
   10a08:	bne	10a1c <analisarFicheiro@@Base+0x7c>
   10a0c:	ldr	r3, [r4, #100]	; 0x64
   10a10:	add	r3, r3, #1
   10a14:	str	r3, [r4, #100]	; 0x64
   10a18:	b	109c8 <analisarFicheiro@@Base+0x28>
   10a1c:	cmp	r5, fp
   10a20:	bne	10a5c <analisarFicheiro@@Base+0xbc>
   10a24:	add	r5, r5, #1
   10a28:	mov	r0, sl
   10a2c:	mul	r4, r9, r5
   10a30:	mov	r1, r4
   10a34:	bl	10780 <realloc@plt>
   10a38:	sub	r3, r4, #104	; 0x68
   10a3c:	mov	sl, r0
   10a40:	add	r3, r0, r3
   10a44:	add	r1, sp, #4
   10a48:	mov	r0, r3
   10a4c:	bl	1078c <strcpy@plt>
   10a50:	mov	r2, #1
   10a54:	str	r2, [r0, #100]	; 0x64
   10a58:	b	109c8 <analisarFicheiro@@Base+0x28>
   10a5c:	add	fp, fp, #1
   10a60:	add	r4, r4, #104	; 0x68
   10a64:	cmp	r5, fp
   10a68:	bge	109f8 <analisarFicheiro@@Base+0x58>
   10a6c:	b	109c8 <analisarFicheiro@@Base+0x28>
   10a70:	andeq	r0, r1, r8, asr #22

00010a74 <gerarRelatorio@@Base>:
   10a74:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   10a78:	mov	r6, r0
   10a7c:	mov	r4, r1
   10a80:	mov	r5, #0
   10a84:	mov	r1, r0
   10a88:	mov	r7, r2
   10a8c:	ldr	r8, [pc, #60]	; 10ad0 <gerarRelatorio@@Base+0x5c>
   10a90:	ldr	r0, [pc, #60]	; 10ad4 <gerarRelatorio@@Base+0x60>
   10a94:	bl	107e0 <fputs@plt>
   10a98:	cmp	r5, r7
   10a9c:	blt	10aa8 <gerarRelatorio@@Base+0x34>
   10aa0:	add	sp, sp, #8
   10aa4:	pop	{r4, r5, r6, r7, r8, pc}
   10aa8:	ldr	r3, [r4, #100]	; 0x64
   10aac:	add	r5, r5, #1
   10ab0:	mov	r1, r8
   10ab4:	mov	r2, r5
   10ab8:	mov	r0, r6
   10abc:	str	r3, [sp]
   10ac0:	mov	r3, r4
   10ac4:	add	r4, r4, #104	; 0x68
   10ac8:	bl	107bc <fprintf@plt>
   10acc:	b	10a98 <gerarRelatorio@@Base+0x24>
   10ad0:	andeq	r0, r1, r1, lsl #23
   10ad4:	andeq	r0, r1, fp, asr #22

00010ad8 <__libc_csu_init@@Base>:
   10ad8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10adc:	mov	r7, r0
   10ae0:	ldr	r6, [pc, #72]	; 10b30 <__libc_csu_init@@Base+0x58>
   10ae4:	ldr	r5, [pc, #72]	; 10b34 <__libc_csu_init@@Base+0x5c>
   10ae8:	add	r6, pc, r6
   10aec:	add	r5, pc, r5
   10af0:	sub	r6, r6, r5
   10af4:	mov	r8, r1
   10af8:	mov	r9, r2
   10afc:	bl	10724 <strcmp@plt-0x20>
   10b00:	asrs	r6, r6, #2
   10b04:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b08:	mov	r4, #0
   10b0c:	add	r4, r4, #1
   10b10:	ldr	r3, [r5], #4
   10b14:	mov	r2, r9
   10b18:	mov	r1, r8
   10b1c:	mov	r0, r7
   10b20:	blx	r3
   10b24:	cmp	r6, r4
   10b28:	bne	10b0c <__libc_csu_init@@Base+0x34>
   10b2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b30:	andeq	r0, r1, r4, lsr #8
   10b34:	andeq	r0, r1, ip, lsl r4

00010b38 <__libc_csu_fini@@Base>:
   10b38:	bx	lr

Disassembly of section .fini:

00010b3c <.fini>:
   10b3c:	push	{r3, lr}
   10b40:	pop	{r3, pc}
