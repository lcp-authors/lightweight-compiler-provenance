
../repos/coreutils/src/libstdbuf.so:     file format elf32-littlearm


Disassembly of section .init:

000003f8 <.init>:
 3f8:	push	{r3, lr}
 3fc:	bl	490 <strtoumax@plt+0xc>
 400:	pop	{r3, pc}

Disassembly of section .plt:

00000404 <__cxa_finalize@plt-0x14>:
 404:	push	{lr}		; (str lr, [sp, #-4]!)
 408:	ldr	lr, [pc, #4]	; 414 <__cxa_finalize@plt-0x4>
 40c:	add	lr, pc, lr
 410:	ldr	pc, [lr, #8]!
 414:	andeq	r0, r1, ip, ror #23

00000418 <__cxa_finalize@plt>:
 418:	add	ip, pc, #0, 12
 41c:	add	ip, ip, #16, 20	; 0x10000
 420:	ldr	pc, [ip, #3052]!	; 0xbec

00000424 <free@plt>:
 424:	add	ip, pc, #0, 12
 428:	add	ip, ip, #16, 20	; 0x10000
 42c:	ldr	pc, [ip, #3044]!	; 0xbe4

00000430 <getenv@plt>:
 430:	add	ip, pc, #0, 12
 434:	add	ip, ip, #16, 20	; 0x10000
 438:	ldr	pc, [ip, #3036]!	; 0xbdc

0000043c <malloc@plt>:
 43c:	add	ip, pc, #0, 12
 440:	add	ip, ip, #16, 20	; 0x10000
 444:	ldr	pc, [ip, #3028]!	; 0xbd4

00000448 <__gmon_start__@plt>:
 448:	add	ip, pc, #0, 12
 44c:	add	ip, ip, #16, 20	; 0x10000
 450:	ldr	pc, [ip, #3020]!	; 0xbcc

00000454 <gettext@plt>:
 454:	add	ip, pc, #0, 12
 458:	add	ip, ip, #16, 20	; 0x10000
 45c:	ldr	pc, [ip, #3012]!	; 0xbc4

00000460 <fprintf@plt>:
 460:	add	ip, pc, #0, 12
 464:	add	ip, ip, #16, 20	; 0x10000
 468:	ldr	pc, [ip, #3004]!	; 0xbbc

0000046c <setvbuf@plt>:
 46c:	add	ip, pc, #0, 12
 470:	add	ip, ip, #16, 20	; 0x10000
 474:	ldr	pc, [ip, #2996]!	; 0xbb4

00000478 <fileno@plt>:
 478:	add	ip, pc, #0, 12
 47c:	add	ip, ip, #16, 20	; 0x10000
 480:	ldr	pc, [ip, #2988]!	; 0xbac

00000484 <strtoumax@plt>:
 484:	add	ip, pc, #0, 12
 488:	add	ip, ip, #16, 20	; 0x10000
 48c:	ldr	pc, [ip, #2980]!	; 0xba4

Disassembly of section .text:

00000490 <.text>:
 490:	ldr	r3, [pc, #20]	; 4ac <strtoumax@plt+0x28>
 494:	ldr	r2, [pc, #20]	; 4b0 <strtoumax@plt+0x2c>
 498:	add	r3, pc, r3
 49c:	ldr	r2, [r3, r2]
 4a0:	cmp	r2, #0
 4a4:	bxeq	lr
 4a8:	b	448 <__gmon_start__@plt>
 4ac:	andeq	r0, r1, r0, ror #22
 4b0:	andeq	r0, r0, r0, asr #32
 4b4:	ldr	r0, [pc, #44]	; 4e8 <strtoumax@plt+0x64>
 4b8:	ldr	r3, [pc, #44]	; 4ec <strtoumax@plt+0x68>
 4bc:	add	r0, pc, r0
 4c0:	add	r3, pc, r3
 4c4:	cmp	r3, r0
 4c8:	ldr	r3, [pc, #32]	; 4f0 <strtoumax@plt+0x6c>
 4cc:	add	r3, pc, r3
 4d0:	bxeq	lr
 4d4:	ldr	r2, [pc, #24]	; 4f4 <strtoumax@plt+0x70>
 4d8:	ldr	r3, [r3, r2]
 4dc:	cmp	r3, #0
 4e0:	bxeq	lr
 4e4:	bx	r3
 4e8:	muleq	r1, r0, fp
 4ec:	andeq	r0, r1, ip, lsl #23
 4f0:	andeq	r0, r1, ip, lsr #22
 4f4:	andeq	r0, r0, r8, lsr r0
 4f8:	ldr	r0, [pc, #56]	; 538 <strtoumax@plt+0xb4>
 4fc:	ldr	r3, [pc, #56]	; 53c <strtoumax@plt+0xb8>
 500:	add	r0, pc, r0
 504:	add	r3, pc, r3
 508:	sub	r1, r3, r0
 50c:	ldr	r3, [pc, #44]	; 540 <strtoumax@plt+0xbc>
 510:	asr	r1, r1, #2
 514:	add	r3, pc, r3
 518:	add	r1, r1, r1, lsr #31
 51c:	asrs	r1, r1, #1
 520:	bxeq	lr
 524:	ldr	r2, [pc, #24]	; 544 <strtoumax@plt+0xc0>
 528:	ldr	r3, [r3, r2]
 52c:	cmp	r3, #0
 530:	bxeq	lr
 534:	bx	r3
 538:	andeq	r0, r1, ip, asr #22
 53c:	andeq	r0, r1, r8, asr #22
 540:	andeq	r0, r1, r4, ror #21
 544:	andeq	r0, r0, ip, asr #32
 548:	ldr	r3, [pc, #76]	; 59c <strtoumax@plt+0x118>
 54c:	ldr	r2, [pc, #76]	; 5a0 <strtoumax@plt+0x11c>
 550:	add	r3, pc, r3
 554:	add	r2, pc, r2
 558:	ldrb	r3, [r3]
 55c:	cmp	r3, #0
 560:	bxne	lr
 564:	ldr	r3, [pc, #56]	; 5a4 <strtoumax@plt+0x120>
 568:	push	{r4, lr}
 56c:	ldr	r3, [r2, r3]
 570:	cmp	r3, #0
 574:	beq	584 <strtoumax@plt+0x100>
 578:	ldr	r3, [pc, #40]	; 5a8 <strtoumax@plt+0x124>
 57c:	ldr	r0, [pc, r3]
 580:	bl	418 <__cxa_finalize@plt>
 584:	bl	4b4 <strtoumax@plt+0x30>
 588:	ldr	r3, [pc, #28]	; 5ac <strtoumax@plt+0x128>
 58c:	mov	r2, #1
 590:	add	r3, pc, r3
 594:	strb	r2, [r3]
 598:	pop	{r4, pc}
 59c:	strdeq	r0, [r1], -ip
 5a0:	andeq	r0, r1, r4, lsr #21
 5a4:	andeq	r0, r0, r4, lsr r0
 5a8:	andeq	r0, r1, ip, asr #21
 5ac:			; <UNDEFINED> instruction: 0x00010abc
 5b0:	b	4f8 <strtoumax@plt+0x74>
 5b4:	push	{fp}		; (str fp, [sp, #-4]!)
 5b8:	add	fp, sp, #0
 5bc:	sub	sp, sp, #20
 5c0:	str	r0, [fp, #-16]
 5c4:	mov	r3, #0
 5c8:	str	r3, [fp, #-8]
 5cc:	ldr	r3, [fp, #-16]
 5d0:	cmp	r3, #1
 5d4:	beq	600 <strtoumax@plt+0x17c>
 5d8:	ldr	r3, [fp, #-16]
 5dc:	cmp	r3, #2
 5e0:	beq	610 <strtoumax@plt+0x18c>
 5e4:	ldr	r3, [fp, #-16]
 5e8:	cmp	r3, #0
 5ec:	bne	620 <strtoumax@plt+0x19c>
 5f0:	ldr	r3, [pc, #76]	; 644 <strtoumax@plt+0x1c0>
 5f4:	add	r3, pc, r3
 5f8:	str	r3, [fp, #-8]
 5fc:	b	630 <strtoumax@plt+0x1ac>
 600:	ldr	r3, [pc, #64]	; 648 <strtoumax@plt+0x1c4>
 604:	add	r3, pc, r3
 608:	str	r3, [fp, #-8]
 60c:	b	630 <strtoumax@plt+0x1ac>
 610:	ldr	r3, [pc, #52]	; 64c <strtoumax@plt+0x1c8>
 614:	add	r3, pc, r3
 618:	str	r3, [fp, #-8]
 61c:	b	630 <strtoumax@plt+0x1ac>
 620:	ldr	r3, [pc, #40]	; 650 <strtoumax@plt+0x1cc>
 624:	add	r3, pc, r3
 628:	str	r3, [fp, #-8]
 62c:	nop	{0}
 630:	ldr	r3, [fp, #-8]
 634:	mov	r0, r3
 638:	add	sp, fp, #0
 63c:	pop	{fp}		; (ldr fp, [sp], #4)
 640:	bx	lr
 644:	andeq	r0, r0, ip, asr r3
 648:	andeq	r0, r0, r4, asr r3
 64c:	andeq	r0, r0, ip, asr #6
 650:	andeq	r0, r0, r4, asr #6
 654:	strd	r4, [sp, #-16]!
 658:	str	fp, [sp, #8]
 65c:	str	lr, [sp, #12]
 660:	add	fp, sp, #12
 664:	sub	sp, sp, #32
 668:	str	r0, [fp, #-40]	; 0xffffffd8
 66c:	str	r1, [fp, #-44]	; 0xffffffd4
 670:	ldr	r4, [pc, #460]	; 844 <strtoumax@plt+0x3c0>
 674:	add	r4, pc, r4
 678:	mov	r3, #0
 67c:	str	r3, [fp, #-16]
 680:	mov	r2, #0
 684:	mov	r3, #0
 688:	strd	r2, [fp, #-28]	; 0xffffffe4
 68c:	ldr	r3, [fp, #-44]	; 0xffffffd4
 690:	ldrb	r3, [r3]
 694:	cmp	r3, #48	; 0x30
 698:	bne	6a8 <strtoumax@plt+0x224>
 69c:	mov	r3, #2
 6a0:	str	r3, [fp, #-20]	; 0xffffffec
 6a4:	b	7c0 <strtoumax@plt+0x33c>
 6a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
 6ac:	ldrb	r3, [r3]
 6b0:	cmp	r3, #76	; 0x4c
 6b4:	bne	6c4 <strtoumax@plt+0x240>
 6b8:	mov	r3, #1
 6bc:	str	r3, [fp, #-20]	; 0xffffffec
 6c0:	b	7c0 <strtoumax@plt+0x33c>
 6c4:	mov	r3, #0
 6c8:	str	r3, [fp, #-20]	; 0xffffffec
 6cc:	sub	r3, fp, #32
 6d0:	mov	r2, #10
 6d4:	mov	r1, r3
 6d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
 6dc:	bl	484 <strtoumax@plt>
 6e0:	strd	r0, [fp, #-28]	; 0xffffffe4
 6e4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
 6e8:	orrs	r3, r2, r3
 6ec:	beq	700 <strtoumax@plt+0x27c>
 6f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
 6f4:	ldrb	r3, [r3]
 6f8:	cmp	r3, #0
 6fc:	beq	74c <strtoumax@plt+0x2c8>
 700:	ldr	r3, [pc, #320]	; 848 <strtoumax@plt+0x3c4>
 704:	ldr	r3, [r4, r3]
 708:	ldr	r4, [r3]
 70c:	ldr	r3, [pc, #312]	; 84c <strtoumax@plt+0x3c8>
 710:	add	r3, pc, r3
 714:	mov	r0, r3
 718:	bl	454 <gettext@plt>
 71c:	mov	r5, r0
 720:	ldr	r0, [fp, #-40]	; 0xffffffd8
 724:	bl	478 <fileno@plt>
 728:	mov	r3, r0
 72c:	mov	r0, r3
 730:	bl	5b4 <strtoumax@plt+0x130>
 734:	mov	r3, r0
 738:	ldr	r2, [fp, #-44]	; 0xffffffd4
 73c:	mov	r1, r5
 740:	mov	r0, r4
 744:	bl	460 <fprintf@plt>
 748:	b	830 <strtoumax@plt+0x3ac>
 74c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
 750:	mvn	r0, #0
 754:	mov	r1, #0
 758:	cmp	r3, r1
 75c:	cmpeq	r2, r0
 760:	bhi	778 <strtoumax@plt+0x2f4>
 764:	ldr	r3, [fp, #-28]	; 0xffffffe4
 768:	mov	r0, r3
 76c:	bl	43c <malloc@plt>
 770:	mov	r3, r0
 774:	b	77c <strtoumax@plt+0x2f8>
 778:	mov	r3, #0
 77c:	str	r3, [fp, #-16]
 780:	ldr	r3, [fp, #-16]
 784:	cmp	r3, #0
 788:	bne	7c0 <strtoumax@plt+0x33c>
 78c:	ldr	r3, [pc, #180]	; 848 <strtoumax@plt+0x3c4>
 790:	ldr	r3, [r4, r3]
 794:	ldr	r4, [r3]
 798:	ldr	r3, [pc, #176]	; 850 <strtoumax@plt+0x3cc>
 79c:	add	r3, pc, r3
 7a0:	mov	r0, r3
 7a4:	bl	454 <gettext@plt>
 7a8:	mov	r1, r0
 7ac:	ldrd	r2, [fp, #-28]	; 0xffffffe4
 7b0:	mov	r0, r4
 7b4:	bl	460 <fprintf@plt>
 7b8:	nop	{0}
 7bc:	b	830 <strtoumax@plt+0x3ac>
 7c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
 7c4:	ldr	r2, [fp, #-20]	; 0xffffffec
 7c8:	ldr	r1, [fp, #-16]
 7cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
 7d0:	bl	46c <setvbuf@plt>
 7d4:	mov	r3, r0
 7d8:	cmp	r3, #0
 7dc:	beq	830 <strtoumax@plt+0x3ac>
 7e0:	ldr	r3, [pc, #96]	; 848 <strtoumax@plt+0x3c4>
 7e4:	ldr	r3, [r4, r3]
 7e8:	ldr	r4, [r3]
 7ec:	ldr	r3, [pc, #96]	; 854 <strtoumax@plt+0x3d0>
 7f0:	add	r3, pc, r3
 7f4:	mov	r0, r3
 7f8:	bl	454 <gettext@plt>
 7fc:	mov	r5, r0
 800:	ldr	r0, [fp, #-40]	; 0xffffffd8
 804:	bl	478 <fileno@plt>
 808:	mov	r3, r0
 80c:	mov	r0, r3
 810:	bl	5b4 <strtoumax@plt+0x130>
 814:	mov	r2, r0
 818:	ldr	r3, [fp, #-44]	; 0xffffffd4
 81c:	mov	r1, r5
 820:	mov	r0, r4
 824:	bl	460 <fprintf@plt>
 828:	ldr	r0, [fp, #-16]
 82c:	bl	424 <free@plt>
 830:	sub	sp, fp, #12
 834:	ldrd	r4, [sp]
 838:	ldr	fp, [sp, #8]
 83c:	add	sp, sp, #12
 840:	pop	{pc}		; (ldr pc, [sp], #4)
 844:	andeq	r0, r1, r4, lsl #19
 848:	andeq	r0, r0, ip, lsr r0
 84c:	andeq	r0, r0, r0, ror #4
 850:	strdeq	r0, [r0], -r8
 854:	ldrdeq	r0, [r0], -r4
 858:	str	r4, [sp, #-12]!
 85c:	str	fp, [sp, #4]
 860:	str	lr, [sp, #8]
 864:	add	fp, sp, #8
 868:	sub	sp, sp, #20
 86c:	ldr	r4, [pc, #192]	; 934 <strtoumax@plt+0x4b0>
 870:	add	r4, pc, r4
 874:	ldr	r3, [pc, #188]	; 938 <strtoumax@plt+0x4b4>
 878:	add	r3, pc, r3
 87c:	mov	r0, r3
 880:	bl	430 <getenv@plt>
 884:	str	r0, [fp, #-16]
 888:	ldr	r3, [pc, #172]	; 93c <strtoumax@plt+0x4b8>
 88c:	add	r3, pc, r3
 890:	mov	r0, r3
 894:	bl	430 <getenv@plt>
 898:	str	r0, [fp, #-20]	; 0xffffffec
 89c:	ldr	r3, [pc, #156]	; 940 <strtoumax@plt+0x4bc>
 8a0:	add	r3, pc, r3
 8a4:	mov	r0, r3
 8a8:	bl	430 <getenv@plt>
 8ac:	str	r0, [fp, #-24]	; 0xffffffe8
 8b0:	ldr	r3, [fp, #-16]
 8b4:	cmp	r3, #0
 8b8:	beq	8d4 <strtoumax@plt+0x450>
 8bc:	ldr	r3, [pc, #128]	; 944 <strtoumax@plt+0x4c0>
 8c0:	ldr	r3, [r4, r3]
 8c4:	ldr	r3, [r3]
 8c8:	ldr	r1, [fp, #-16]
 8cc:	mov	r0, r3
 8d0:	bl	654 <strtoumax@plt+0x1d0>
 8d4:	ldr	r3, [fp, #-20]	; 0xffffffec
 8d8:	cmp	r3, #0
 8dc:	beq	8f8 <strtoumax@plt+0x474>
 8e0:	ldr	r3, [pc, #96]	; 948 <strtoumax@plt+0x4c4>
 8e4:	ldr	r3, [r4, r3]
 8e8:	ldr	r3, [r3]
 8ec:	ldr	r1, [fp, #-20]	; 0xffffffec
 8f0:	mov	r0, r3
 8f4:	bl	654 <strtoumax@plt+0x1d0>
 8f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 8fc:	cmp	r3, #0
 900:	beq	91c <strtoumax@plt+0x498>
 904:	ldr	r3, [pc, #64]	; 94c <strtoumax@plt+0x4c8>
 908:	ldr	r3, [r4, r3]
 90c:	ldr	r3, [r3]
 910:	ldr	r1, [fp, #-24]	; 0xffffffe8
 914:	mov	r0, r3
 918:	bl	654 <strtoumax@plt+0x1d0>
 91c:	nop	{0}
 920:	sub	sp, fp, #8
 924:	ldr	r4, [sp]
 928:	ldr	fp, [sp, #4]
 92c:	add	sp, sp, #8
 930:	pop	{pc}		; (ldr pc, [sp], #4)
 934:	andeq	r0, r1, r8, lsl #15
 938:	andeq	r0, r0, r8, ror r1
 93c:	andeq	r0, r0, r0, ror r1
 940:	andeq	r0, r0, r8, ror #2
 944:	andeq	r0, r0, ip, lsr r0
 948:	andeq	r0, r0, r4, asr #32
 94c:	andeq	r0, r0, r8, asr #32

Disassembly of section .fini:

00000950 <.fini>:
 950:	push	{r3, lr}
 954:	pop	{r3, pc}
