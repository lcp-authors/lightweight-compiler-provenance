
../repos/charybdis/modules/.libs/m_dline.so:     file format elf32-littlearm


Disassembly of section .init:

000009e8 <_init>:
 9e8:	push	{r3, lr}
 9ec:	bl	bb8 <call_weak_fn>
 9f0:	pop	{r3, pc}

Disassembly of section .plt:

000009f4 <.plt>:
 9f4:	push	{lr}		; (str lr, [sp, #-4]!)
 9f8:	ldr	lr, [pc, #4]	; a04 <.plt+0x10>
 9fc:	add	lr, pc, lr
 a00:	ldr	pc, [lr, #8]!
 a04:	.word	0x000125fc

00000a08 <make_conf@plt>:
 a08:	add	ip, pc, #0, 12
 a0c:	add	ip, ip, #73728	; 0x12000
 a10:	ldr	pc, [ip, #1532]!	; 0x5fc

00000a14 <parse_netmask_strict@plt>:
 a14:	add	ip, pc, #0, 12
 a18:	add	ip, ip, #73728	; 0x12000
 a1c:	ldr	pc, [ip, #1524]!	; 0x5f4

00000a20 <raise@plt>:
 a20:	add	ip, pc, #0, 12
 a24:	add	ip, ip, #73728	; 0x12000
 a28:	ldr	pc, [ip, #1516]!	; 0x5ec

00000a2c <rb_current_time@plt>:
 a2c:	add	ip, pc, #0, 12
 a30:	add	ip, ip, #73728	; 0x12000
 a34:	ldr	pc, [ip, #1508]!	; 0x5e4

00000a38 <sendto_match_servs@plt>:
 a38:	add	ip, pc, #0, 12
 a3c:	add	ip, ip, #73728	; 0x12000
 a40:	ldr	pc, [ip, #1500]!	; 0x5dc

00000a44 <__cxa_finalize@plt>:
 a44:	add	ip, pc, #0, 12
 a48:	add	ip, ip, #73728	; 0x12000
 a4c:	ldr	pc, [ip, #1492]!	; 0x5d4

00000a50 <sendto_one@plt>:
 a50:	add	ip, pc, #0, 12
 a54:	add	ip, ip, #73728	; 0x12000
 a58:	ldr	pc, [ip, #1484]!	; 0x5cc

00000a5c <rb_outofmemory@plt>:
 a5c:	add	ip, pc, #0, 12
 a60:	add	ip, ip, #73728	; 0x12000
 a64:	ldr	pc, [ip, #1476]!	; 0x5c4

00000a68 <parse_netmask@plt>:
 a68:	add	ip, pc, #0, 12
 a6c:	add	ip, ip, #73728	; 0x12000
 a70:	ldr	pc, [ip, #1468]!	; 0x5bc

00000a74 <sendto_realops_snomask@plt>:
 a74:	add	ip, pc, #0, 12
 a78:	add	ip, ip, #73728	; 0x12000
 a7c:	ldr	pc, [ip, #1460]!	; 0x5b4

00000a80 <bandb_add@plt>:
 a80:	add	ip, pc, #0, 12
 a84:	add	ip, ip, #73728	; 0x12000
 a88:	ldr	pc, [ip, #1452]!	; 0x5ac

00000a8c <get_oper_name@plt>:
 a8c:	add	ip, pc, #0, 12
 a90:	add	ip, ip, #73728	; 0x12000
 a94:	ldr	pc, [ip, #1444]!	; 0x5a4

00000a98 <rb_free_rb_dlink_node@plt>:
 a98:	add	ip, pc, #0, 12
 a9c:	add	ip, ip, #73728	; 0x12000
 aa0:	ldr	pc, [ip, #1436]!	; 0x59c

00000aa4 <operhash_add@plt>:
 aa4:	add	ip, pc, #0, 12
 aa8:	add	ip, ip, #73728	; 0x12000
 aac:	ldr	pc, [ip, #1428]!	; 0x594

00000ab0 <strcpy@plt>:
 ab0:	add	ip, pc, #0, 12
 ab4:	add	ip, ip, #73728	; 0x12000
 ab8:	ldr	pc, [ip, #1420]!	; 0x58c

00000abc <add_temp_dline@plt>:
 abc:	add	ip, pc, #0, 12
 ac0:	add	ip, ip, #73728	; 0x12000
 ac4:	ldr	pc, [ip, #1412]!	; 0x584

00000ac8 <rb_set_time@plt>:
 ac8:	add	ip, pc, #0, 12
 acc:	add	ip, ip, #73728	; 0x12000
 ad0:	ldr	pc, [ip, #1404]!	; 0x57c

00000ad4 <malloc@plt>:
 ad4:	add	ip, pc, #0, 12
 ad8:	add	ip, ip, #73728	; 0x12000
 adc:	ldr	pc, [ip, #1396]!	; 0x574

00000ae0 <add_conf_by_address@plt>:
 ae0:	add	ip, pc, #0, 12
 ae4:	add	ip, ip, #73728	; 0x12000
 ae8:	ldr	pc, [ip, #1388]!	; 0x56c

00000aec <__gmon_start__@plt>:
 aec:	add	ip, pc, #0, 12
 af0:	add	ip, ip, #73728	; 0x12000
 af4:	ldr	pc, [ip, #1380]!	; 0x564

00000af8 <strlen@plt>:
 af8:	add	ip, pc, #0, 12
 afc:	add	ip, ip, #73728	; 0x12000
 b00:	ldr	pc, [ip, #1372]!	; 0x55c

00000b04 <strchr@plt>:
 b04:	add	ip, pc, #0, 12
 b08:	add	ip, ip, #73728	; 0x12000
 b0c:	ldr	pc, [ip, #1364]!	; 0x554

00000b10 <delete_one_address_conf@plt>:
 b10:	add	ip, pc, #0, 12
 b14:	add	ip, ip, #73728	; 0x12000
 b18:	ldr	pc, [ip, #1356]!	; 0x54c

00000b1c <ilog@plt>:
 b1c:	add	ip, pc, #0, 12
 b20:	add	ip, ip, #73728	; 0x12000
 b24:	ldr	pc, [ip, #1348]!	; 0x544

00000b28 <match@plt>:
 b28:	add	ip, pc, #0, 12
 b2c:	add	ip, ip, #73728	; 0x12000
 b30:	ldr	pc, [ip, #1340]!	; 0x53c

00000b34 <valid_temp_time@plt>:
 b34:	add	ip, pc, #0, 12
 b38:	add	ip, ip, #73728	; 0x12000
 b3c:	ldr	pc, [ip, #1332]!	; 0x534

00000b40 <check_dlines@plt>:
 b40:	add	ip, pc, #0, 12
 b44:	add	ip, ip, #73728	; 0x12000
 b48:	ldr	pc, [ip, #1324]!	; 0x52c

00000b4c <sendto_one_notice@plt>:
 b4c:	add	ip, pc, #0, 12
 b50:	add	ip, ip, #73728	; 0x12000
 b54:	ldr	pc, [ip, #1316]!	; 0x524

00000b58 <bandb_del@plt>:
 b58:	add	ip, pc, #0, 12
 b5c:	add	ip, ip, #73728	; 0x12000
 b60:	ldr	pc, [ip, #1308]!	; 0x51c

00000b64 <atoi@plt>:
 b64:	add	ip, pc, #0, 12
 b68:	add	ip, ip, #73728	; 0x12000
 b6c:	ldr	pc, [ip, #1300]!	; 0x514

00000b70 <find_exact_conf_by_address@plt>:
 b70:	add	ip, pc, #0, 12
 b74:	add	ip, ip, #73728	; 0x12000
 b78:	ldr	pc, [ip, #1292]!	; 0x50c

00000b7c <rb_strlcpy@plt>:
 b7c:	add	ip, pc, #0, 12
 b80:	add	ip, ip, #73728	; 0x12000
 b84:	ldr	pc, [ip, #1284]!	; 0x504

00000b88 <find_shared_conf@plt>:
 b88:	add	ip, pc, #0, 12
 b8c:	add	ip, ip, #73728	; 0x12000
 b90:	ldr	pc, [ip, #1276]!	; 0x4fc

00000b94 <privilegeset_in_set@plt>:
 b94:	add	ip, pc, #0, 12
 b98:	add	ip, ip, #73728	; 0x12000
 b9c:	ldr	pc, [ip, #1268]!	; 0x4f4

00000ba0 <irccmp@plt>:
 ba0:	add	ip, pc, #0, 12
 ba4:	add	ip, ip, #73728	; 0x12000
 ba8:	ldr	pc, [ip, #1260]!	; 0x4ec

00000bac <find_dline@plt>:
 bac:	add	ip, pc, #0, 12
 bb0:	add	ip, ip, #73728	; 0x12000
 bb4:	ldr	pc, [ip, #1252]!	; 0x4e4

Disassembly of section .text:

00000bb8 <call_weak_fn>:
     bb8:	ldr	r3, [pc, #20]	; bd4 <call_weak_fn+0x1c>
     bbc:	ldr	r2, [pc, #20]	; bd8 <call_weak_fn+0x20>
     bc0:	add	r3, pc, r3
     bc4:	ldr	r2, [r3, r2]
     bc8:	cmp	r2, #0
     bcc:	bxeq	lr
     bd0:	b	aec <__gmon_start__@plt>
     bd4:	.word	0x00012438
     bd8:	.word	0x000000a4

00000bdc <deregister_tm_clones>:
     bdc:	ldr	r3, [pc, #52]	; c18 <deregister_tm_clones+0x3c>
     be0:	ldr	r0, [pc, #52]	; c1c <deregister_tm_clones+0x40>
     be4:	add	r3, pc, r3
     be8:	add	r0, pc, r0
     bec:	add	r3, r3, #3
     bf0:	sub	r3, r3, r0
     bf4:	cmp	r3, #6
     bf8:	ldr	r3, [pc, #32]	; c20 <deregister_tm_clones+0x44>
     bfc:	add	r3, pc, r3
     c00:	bxls	lr
     c04:	ldr	r2, [pc, #24]	; c24 <deregister_tm_clones+0x48>
     c08:	ldr	r3, [r3, r2]
     c0c:	cmp	r3, #0
     c10:	bxeq	lr
     c14:	bx	r3
     c18:	.word	0x00012594
     c1c:	.word	0x00012590
     c20:	.word	0x000123fc
     c24:	.word	0x000000a0

00000c28 <register_tm_clones>:
     c28:	ldr	r1, [pc, #56]	; c68 <register_tm_clones+0x40>
     c2c:	ldr	r0, [pc, #56]	; c6c <register_tm_clones+0x44>
     c30:	add	r1, pc, r1
     c34:	add	r0, pc, r0
     c38:	sub	r1, r1, r0
     c3c:	ldr	r3, [pc, #44]	; c70 <register_tm_clones+0x48>
     c40:	asr	r1, r1, #2
     c44:	add	r3, pc, r3
     c48:	add	r1, r1, r1, lsr #31
     c4c:	asrs	r1, r1, #1
     c50:	bxeq	lr
     c54:	ldr	r2, [pc, #24]	; c74 <register_tm_clones+0x4c>
     c58:	ldr	r3, [r3, r2]
     c5c:	cmp	r3, #0
     c60:	bxeq	lr
     c64:	bx	r3
     c68:	.word	0x00012548
     c6c:	.word	0x00012544
     c70:	.word	0x000123b4
     c74:	.word	0x000000b0

00000c78 <__do_global_dtors_aux>:
     c78:	ldr	r3, [pc, #76]	; ccc <__do_global_dtors_aux+0x54>
     c7c:	ldr	r2, [pc, #76]	; cd0 <__do_global_dtors_aux+0x58>
     c80:	add	r3, pc, r3
     c84:	add	r2, pc, r2
     c88:	ldrb	r3, [r3]
     c8c:	cmp	r3, #0
     c90:	bxne	lr
     c94:	ldr	r3, [pc, #56]	; cd4 <__do_global_dtors_aux+0x5c>
     c98:	push	{r4, lr}
     c9c:	ldr	r3, [r2, r3]
     ca0:	cmp	r3, #0
     ca4:	beq	cb4 <__do_global_dtors_aux+0x3c>
     ca8:	ldr	r3, [pc, #40]	; cd8 <__do_global_dtors_aux+0x60>
     cac:	ldr	r0, [pc, r3]
     cb0:	bl	a44 <__cxa_finalize@plt>
     cb4:	bl	bdc <deregister_tm_clones>
     cb8:	ldr	r3, [pc, #28]	; cdc <__do_global_dtors_aux+0x64>
     cbc:	mov	r2, #1
     cc0:	add	r3, pc, r3
     cc4:	strb	r2, [r3]
     cc8:	pop	{r4, pc}
     ccc:	.word	0x000124f8
     cd0:	.word	0x00012374
     cd4:	.word	0x0000009c
     cd8:	.word	0x0001240c
     cdc:	.word	0x000124b8

00000ce0 <frame_dummy>:
     ce0:	ldr	r0, [pc, #56]	; d20 <frame_dummy+0x40>
     ce4:	ldr	r3, [pc, #56]	; d24 <frame_dummy+0x44>
     ce8:	add	r0, pc, r0
     cec:	ldr	r2, [r0]
     cf0:	add	r3, pc, r3
     cf4:	cmp	r2, #0
     cf8:	bne	d00 <frame_dummy+0x20>
     cfc:	b	c28 <register_tm_clones>
     d00:	ldr	r2, [pc, #32]	; d28 <frame_dummy+0x48>
     d04:	ldr	r3, [r3, r2]
     d08:	cmp	r3, #0
     d0c:	beq	cfc <frame_dummy+0x1c>
     d10:	push	{r4, lr}
     d14:	blx	r3
     d18:	pop	{r4, lr}
     d1c:	b	c28 <register_tm_clones>
     d20:	.word	0x0001220c
     d24:	.word	0x00012308
     d28:	.word	0x000000ac

00000d2c <rb_strdup>:
     d2c:	push	{r4, r5, r6, lr}
     d30:	mov	r5, r0
     d34:	bl	af8 <strlen@plt>
     d38:	add	r0, r0, #1
     d3c:	bl	ad4 <malloc@plt>
     d40:	subs	r4, r0, #0
     d44:	bne	d4c <rb_strdup+0x20>
     d48:	bl	a5c <rb_outofmemory@plt>
     d4c:	mov	r1, r5
     d50:	bl	ab0 <strcpy@plt>
     d54:	mov	r0, r4
     d58:	pop	{r4, r5, r6, pc}

00000d5c <apply_dline>:
     d5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     d60:	sub	sp, sp, #156	; 0x9c
     d64:	mov	r7, r1
     d68:	add	sl, sp, #24
     d6c:	mov	r5, r0
     d70:	mov	r8, r2
     d74:	mov	r1, sl
     d78:	add	r2, sp, #16
     d7c:	mov	r0, r7
     d80:	mov	r6, r3
     d84:	bl	a14 <parse_netmask_strict@plt>
     d88:	ldr	r9, [pc, #1176]	; 1228 <apply_dline+0x4cc>
     d8c:	add	r9, pc, r9
     d90:	sub	r3, r0, #2
     d94:	cmp	r3, #1
     d98:	bls	dc4 <apply_dline+0x68>
     d9c:	ldr	r3, [pc, #1160]	; 122c <apply_dline+0x4d0>
     da0:	ldr	r1, [pc, #1160]	; 1230 <apply_dline+0x4d4>
     da4:	mov	r0, r5
     da8:	ldr	r2, [r9, r3]
     dac:	add	r1, pc, r1
     db0:	add	r3, r5, #88	; 0x58
     db4:	add	r2, r2, #88	; 0x58
     db8:	bl	a50 <sendto_one@plt>
     dbc:	add	sp, sp, #156	; 0x9c
     dc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     dc4:	ldr	r3, [r5, #24]
     dc8:	cmp	r0, #3
     dcc:	moveq	r4, #10
     dd0:	movne	r4, #2
     dd4:	cmp	r3, #0
     dd8:	bne	e00 <apply_dline+0xa4>
     ddc:	ldr	r3, [r5, #24]
     de0:	cmp	r3, #0
     de4:	bne	e40 <apply_dline+0xe4>
     de8:	ldr	r3, [sp, #16]
     dec:	cmp	r3, #15
     df0:	bgt	e64 <apply_dline+0x108>
     df4:	ldr	r1, [pc, #1080]	; 1234 <apply_dline+0x4d8>
     df8:	add	r1, pc, r1
     dfc:	b	e34 <apply_dline+0xd8>
     e00:	ldr	r0, [r3, #36]	; 0x24
     e04:	cmp	r0, #0
     e08:	beq	ddc <apply_dline+0x80>
     e0c:	ldr	r1, [pc, #1060]	; 1238 <apply_dline+0x4dc>
     e10:	add	r1, pc, r1
     e14:	bl	b94 <privilegeset_in_set@plt>
     e18:	cmp	r0, #0
     e1c:	beq	ddc <apply_dline+0x80>
     e20:	ldr	r3, [sp, #16]
     e24:	cmp	r3, #7
     e28:	bgt	e64 <apply_dline+0x108>
     e2c:	ldr	r1, [pc, #1032]	; 123c <apply_dline+0x4e0>
     e30:	add	r1, pc, r1
     e34:	mov	r0, r5
     e38:	bl	b4c <sendto_one_notice@plt>
     e3c:	b	dbc <apply_dline+0x60>
     e40:	ldr	r0, [r3, #36]	; 0x24
     e44:	cmp	r0, #0
     e48:	beq	de8 <apply_dline+0x8c>
     e4c:	ldr	r1, [pc, #1004]	; 1240 <apply_dline+0x4e4>
     e50:	add	r1, pc, r1
     e54:	bl	b94 <privilegeset_in_set@plt>
     e58:	cmp	r0, #0
     e5c:	bne	e20 <apply_dline+0xc4>
     e60:	b	de8 <apply_dline+0x8c>
     e64:	ldr	r3, [pc, #984]	; 1244 <apply_dline+0x4e8>
     e68:	ldr	r3, [r9, r3]
     e6c:	ldr	r3, [r3, #140]	; 0x8c
     e70:	cmp	r3, #0
     e74:	beq	f10 <apply_dline+0x1b4>
     e78:	mov	r1, r4
     e7c:	mov	r0, sl
     e80:	bl	bac <find_dline@plt>
     e84:	subs	r4, r0, #0
     e88:	beq	f10 <apply_dline+0x1b4>
     e8c:	add	r2, sp, #20
     e90:	mov	r1, #0
     e94:	ldr	r0, [r4, #16]
     e98:	bl	a14 <parse_netmask_strict@plt>
     e9c:	cmp	r0, #0
     ea0:	beq	f10 <apply_dline+0x1b4>
     ea4:	ldr	r3, [sp, #20]
     ea8:	ldr	r2, [sp, #16]
     eac:	cmp	r2, r3
     eb0:	blt	f10 <apply_dline+0x1b4>
     eb4:	ldr	r1, [r4, #20]
     eb8:	cmp	r1, #0
     ebc:	ldreq	r1, [pc, #900]	; 1248 <apply_dline+0x4ec>
     ec0:	addeq	r1, pc, r1
     ec4:	ldr	r2, [pc, #864]	; 122c <apply_dline+0x4d0>
     ec8:	ldr	r3, [r4, #4]
     ecc:	ldr	r2, [r9, r2]
     ed0:	str	r1, [sp, #8]
     ed4:	ldr	r1, [r4, #16]
     ed8:	tst	r3, #64	; 0x40
     edc:	str	r1, [sp, #4]
     ee0:	add	r3, r5, #88	; 0x58
     ee4:	str	r7, [sp]
     ee8:	add	r2, r2, #88	; 0x58
     eec:	beq	f04 <apply_dline+0x1a8>
     ef0:	ldr	r1, [pc, #852]	; 124c <apply_dline+0x4f0>
     ef4:	add	r1, pc, r1
     ef8:	mov	r0, r5
     efc:	bl	a50 <sendto_one@plt>
     f00:	b	dbc <apply_dline+0x60>
     f04:	ldr	r1, [pc, #836]	; 1250 <apply_dline+0x4f4>
     f08:	add	r1, pc, r1
     f0c:	b	ef8 <apply_dline+0x19c>
     f10:	bl	ac8 <rb_set_time@plt>
     f14:	bl	a08 <make_conf@plt>
     f18:	mov	r3, #131072	; 0x20000
     f1c:	str	r3, [r0]
     f20:	mov	r4, r0
     f24:	bl	a2c <rb_current_time@plt>
     f28:	str	r0, [r4, #40]	; 0x28
     f2c:	mov	r0, r7
     f30:	bl	d2c <rb_strdup>
     f34:	str	r0, [r4, #16]
     f38:	mov	r0, r6
     f3c:	bl	d2c <rb_strdup>
     f40:	str	r0, [r4, #20]
     f44:	mov	r0, r5
     f48:	bl	a8c <get_oper_name@plt>
     f4c:	bl	aa4 <operhash_add@plt>
     f50:	str	r0, [r4, #12]
     f54:	mov	r0, r6
     f58:	bl	af8 <strlen@plt>
     f5c:	ldr	r3, [pc, #752]	; 1254 <apply_dline+0x4f8>
     f60:	mov	r1, #124	; 0x7c
     f64:	cmp	r0, r3
     f68:	movhi	r3, #0
     f6c:	strbhi	r3, [r6, #390]	; 0x186
     f70:	mov	r0, r6
     f74:	bl	b04 <strchr@plt>
     f78:	subs	sl, r0, #0
     f7c:	beq	1154 <apply_dline+0x3f8>
     f80:	mov	r7, sl
     f84:	mov	r3, #0
     f88:	strb	r3, [r7], #1
     f8c:	cmp	r7, r3
     f90:	beq	1154 <apply_dline+0x3f8>
     f94:	ldrb	r3, [sl, #1]
     f98:	cmp	r3, #0
     f9c:	beq	fac <apply_dline+0x250>
     fa0:	mov	r0, r7
     fa4:	bl	d2c <rb_strdup>
     fa8:	str	r0, [r4, #24]
     fac:	cmp	r8, #0
     fb0:	bgt	10bc <apply_dline+0x360>
     fb4:	mov	r3, #0
     fb8:	mov	r2, r3
     fbc:	str	r4, [sp]
     fc0:	mov	r1, #131072	; 0x20000
     fc4:	ldr	r0, [r4, #16]
     fc8:	bl	ae0 <add_conf_by_address@plt>
     fcc:	ldr	r3, [r4, #24]
     fd0:	ldr	r2, [r4, #16]
     fd4:	cmp	r3, #0
     fd8:	beq	fe8 <apply_dline+0x28c>
     fdc:	ldrb	r1, [r3]
     fe0:	cmp	r1, #0
     fe4:	moveq	r3, #0
     fe8:	mov	r8, #0
     fec:	mov	r0, #1
     ff0:	stmib	sp, {r3, r8}
     ff4:	str	r6, [sp]
     ff8:	mov	r3, r8
     ffc:	mov	r1, r5
    1000:	bl	a80 <bandb_add@plt>
    1004:	cmp	r7, r8
    1008:	mov	r0, r5
    100c:	beq	101c <apply_dline+0x2c0>
    1010:	ldrb	r3, [r7]
    1014:	cmp	r3, r8
    1018:	bne	106c <apply_dline+0x310>
    101c:	bl	a8c <get_oper_name@plt>
    1020:	str	r6, [sp, #4]
    1024:	ldr	r2, [pc, #556]	; 1258 <apply_dline+0x4fc>
    1028:	ldr	r3, [r4, #16]
    102c:	add	r2, pc, r2
    1030:	str	r3, [sp]
    1034:	mov	r1, #0
    1038:	mov	r3, r0
    103c:	mov	r0, #256	; 0x100
    1040:	bl	a74 <sendto_realops_snomask@plt>
    1044:	mov	r0, r5
    1048:	bl	a8c <get_oper_name@plt>
    104c:	ldr	r1, [pc, #520]	; 125c <apply_dline+0x500>
    1050:	str	r6, [sp]
    1054:	add	r1, pc, r1
    1058:	ldr	r3, [r4, #16]
    105c:	mov	r2, r0
    1060:	mov	r0, #7
    1064:	bl	b1c <ilog@plt>
    1068:	b	dbc <apply_dline+0x60>
    106c:	bl	a8c <get_oper_name@plt>
    1070:	stmib	sp, {r6, r7}
    1074:	ldr	r2, [pc, #484]	; 1260 <apply_dline+0x504>
    1078:	ldr	r3, [r4, #16]
    107c:	mov	r1, r8
    1080:	str	r3, [sp]
    1084:	add	r2, pc, r2
    1088:	mov	r3, r0
    108c:	mov	r0, #256	; 0x100
    1090:	bl	a74 <sendto_realops_snomask@plt>
    1094:	mov	r0, r5
    1098:	bl	a8c <get_oper_name@plt>
    109c:	ldr	r1, [pc, #448]	; 1264 <apply_dline+0x508>
    10a0:	stm	sp, {r6, r7}
    10a4:	add	r1, pc, r1
    10a8:	ldr	r3, [r4, #16]
    10ac:	mov	r2, r0
    10b0:	mov	r0, #7
    10b4:	bl	b1c <ilog@plt>
    10b8:	b	dbc <apply_dline+0x60>
    10bc:	bl	a2c <rb_current_time@plt>
    10c0:	add	r0, r8, r0
    10c4:	str	r0, [r4, #36]	; 0x24
    10c8:	mov	r0, r4
    10cc:	bl	abc <add_temp_dline@plt>
    10d0:	ldrb	r3, [sl, #1]
    10d4:	cmp	r3, #0
    10d8:	beq	1174 <apply_dline+0x418>
    10dc:	mov	r0, r5
    10e0:	bl	a8c <get_oper_name@plt>
    10e4:	mov	r1, #60	; 0x3c
    10e8:	mov	fp, r0
    10ec:	mov	r0, r8
    10f0:	bl	1a14 <__divsi3>
    10f4:	str	r7, [sp, #12]
    10f8:	str	r6, [sp, #8]
    10fc:	ldr	r2, [pc, #356]	; 1268 <apply_dline+0x50c>
    1100:	ldr	r3, [r4, #16]
    1104:	add	r2, pc, r2
    1108:	str	r3, [sp, #4]
    110c:	mov	r1, #0
    1110:	mov	r3, fp
    1114:	mov	sl, r0
    1118:	str	r0, [sp]
    111c:	mov	r0, #256	; 0x100
    1120:	bl	a74 <sendto_realops_snomask@plt>
    1124:	mov	r0, r5
    1128:	bl	a8c <get_oper_name@plt>
    112c:	stmib	sp, {r6, r7}
    1130:	ldr	r1, [pc, #308]	; 126c <apply_dline+0x510>
    1134:	ldr	r3, [r4, #16]
    1138:	add	r1, pc, r1
    113c:	str	r3, [sp]
    1140:	mov	r3, sl
    1144:	mov	r2, r0
    1148:	mov	r0, #7
    114c:	bl	b1c <ilog@plt>
    1150:	b	11e4 <apply_dline+0x488>
    1154:	cmp	r8, #0
    1158:	movle	r7, #0
    115c:	ble	fb4 <apply_dline+0x258>
    1160:	bl	a2c <rb_current_time@plt>
    1164:	add	r0, r8, r0
    1168:	str	r0, [r4, #36]	; 0x24
    116c:	mov	r0, r4
    1170:	bl	abc <add_temp_dline@plt>
    1174:	mov	r0, r5
    1178:	bl	a8c <get_oper_name@plt>
    117c:	mov	r1, #60	; 0x3c
    1180:	mov	sl, r0
    1184:	mov	r0, r8
    1188:	bl	1a14 <__divsi3>
    118c:	str	r6, [sp, #8]
    1190:	ldr	r2, [pc, #216]	; 1270 <apply_dline+0x514>
    1194:	ldr	r3, [r4, #16]
    1198:	add	r2, pc, r2
    119c:	mov	r1, #0
    11a0:	str	r3, [sp, #4]
    11a4:	mov	r3, sl
    11a8:	mov	r7, r0
    11ac:	str	r0, [sp]
    11b0:	mov	r0, #256	; 0x100
    11b4:	bl	a74 <sendto_realops_snomask@plt>
    11b8:	mov	r0, r5
    11bc:	bl	a8c <get_oper_name@plt>
    11c0:	str	r6, [sp, #4]
    11c4:	ldr	r1, [pc, #168]	; 1274 <apply_dline+0x518>
    11c8:	ldr	r3, [r4, #16]
    11cc:	add	r1, pc, r1
    11d0:	str	r3, [sp]
    11d4:	mov	r3, r7
    11d8:	mov	r2, r0
    11dc:	mov	r0, #7
    11e0:	bl	b1c <ilog@plt>
    11e4:	ldr	r3, [pc, #64]	; 122c <apply_dline+0x4d0>
    11e8:	mov	r1, #60	; 0x3c
    11ec:	mov	r0, r8
    11f0:	ldr	r6, [r9, r3]
    11f4:	ldr	r3, [r4, #16]
    11f8:	add	r7, r5, #88	; 0x58
    11fc:	str	r3, [sp, #4]
    1200:	bl	1a14 <__divsi3>
    1204:	ldr	r1, [pc, #108]	; 1278 <apply_dline+0x51c>
    1208:	add	r6, r6, #88	; 0x58
    120c:	mov	r3, r7
    1210:	mov	r2, r6
    1214:	add	r1, pc, r1
    1218:	str	r0, [sp]
    121c:	mov	r0, r5
    1220:	bl	a50 <sendto_one@plt>
    1224:	b	dbc <apply_dline+0x60>
    1228:	.word	0x0001226c
    122c:	.word	0x000000b4
    1230:	.word	0x00000efc
    1234:	.word	0x00000f22
    1238:	.word	0x00000eb6
    123c:	.word	0x00000eb3
    1240:	.word	0x00000e81
    1244:	.word	0x000000bc
    1248:	.word	0x00000ddc
    124c:	.word	0x00000e58
    1250:	.word	0x00000e73
    1254:	.word	0x00000186
    1258:	.word	0x00000e39
    125c:	.word	0x00000e2f
    1260:	.word	0x00000e0c
    1264:	.word	0x00000e0d
    1268:	.word	0x00000ce6
    126c:	.word	0x00000ce5
    1270:	.word	0x00000c14
    1274:	.word	0x00000c10
    1278:	.word	0x00000c1a

0000127c <mo_dline>:
    127c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1280:	mov	r5, r2
    1284:	ldr	r2, [pc, #640]	; 150c <mo_dline+0x290>
    1288:	add	fp, sp, #32
    128c:	add	r2, pc, r2
    1290:	sub	sp, sp, #116	; 0x74
    1294:	ldr	r0, [r2]
    1298:	ldr	r1, [r2, #4]
    129c:	ldrh	r2, [r2, #8]
    12a0:	str	r3, [fp, #-120]	; 0xffffff88
    12a4:	sub	r3, fp, #112	; 0x70
    12a8:	ldr	r8, [pc, #608]	; 1510 <mo_dline+0x294>
    12ac:	stmia	r3!, {r0, r1}
    12b0:	strh	r2, [r3]
    12b4:	ldr	r3, [r5, #24]
    12b8:	add	r8, pc, r8
    12bc:	cmp	r3, #0
    12c0:	bne	12f4 <mo_dline+0x78>
    12c4:	ldr	r3, [pc, #584]	; 1514 <mo_dline+0x298>
    12c8:	ldr	r1, [pc, #584]	; 1518 <mo_dline+0x29c>
    12cc:	ldr	r2, [r8, r3]
    12d0:	ldr	r3, [pc, #580]	; 151c <mo_dline+0x2a0>
    12d4:	add	r2, r2, #88	; 0x58
    12d8:	add	r3, pc, r3
    12dc:	str	r3, [sp]
    12e0:	add	r1, pc, r1
    12e4:	add	r3, r5, #88	; 0x58
    12e8:	mov	r0, r5
    12ec:	bl	a50 <sendto_one@plt>
    12f0:	b	136c <mo_dline+0xf0>
    12f4:	ldr	r0, [r3, #36]	; 0x24
    12f8:	cmp	r0, #0
    12fc:	beq	12c4 <mo_dline+0x48>
    1300:	ldr	r1, [pc, #536]	; 1520 <mo_dline+0x2a4>
    1304:	add	r1, pc, r1
    1308:	bl	b94 <privilegeset_in_set@plt>
    130c:	cmp	r0, #0
    1310:	beq	12c4 <mo_dline+0x48>
    1314:	ldr	r3, [fp, #4]
    1318:	ldr	r0, [r3, #4]
    131c:	bl	b34 <valid_temp_time@plt>
    1320:	ldr	r3, [fp, #4]
    1324:	mov	r2, #64	; 0x40
    1328:	cmp	r0, #0
    132c:	movlt	r9, #1
    1330:	movge	r9, #2
    1334:	mov	sl, r0
    1338:	ldr	r6, [r3, r9, lsl #2]
    133c:	sub	r0, fp, #100	; 0x64
    1340:	mov	r1, r6
    1344:	bl	b7c <rb_strlcpy@plt>
    1348:	ldrb	r3, [r6]
    134c:	lsl	r7, r9, #2
    1350:	cmp	r3, #58	; 0x3a
    1354:	bne	1374 <mo_dline+0xf8>
    1358:	ldr	r1, [pc, #452]	; 1524 <mo_dline+0x2a8>
    135c:	mov	r2, r6
    1360:	add	r1, pc, r1
    1364:	mov	r0, r5
    1368:	bl	b4c <sendto_one_notice@plt>
    136c:	sub	sp, fp, #32
    1370:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1374:	mov	r2, #0
    1378:	mov	r1, r2
    137c:	mov	r0, r6
    1380:	bl	a14 <parse_netmask_strict@plt>
    1384:	sub	r0, r0, #2
    1388:	cmp	r0, #1
    138c:	ldrhi	r1, [pc, #404]	; 1528 <mo_dline+0x2ac>
    1390:	movhi	r2, r6
    1394:	addhi	r1, pc, r1
    1398:	bhi	1364 <mo_dline+0xe8>
    139c:	ldr	r1, [fp, #-120]	; 0xffffff88
    13a0:	add	r2, r9, #2
    13a4:	cmp	r2, r1
    13a8:	sub	r4, fp, #112	; 0x70
    13ac:	add	r3, r9, #1
    13b0:	bge	14f8 <mo_dline+0x27c>
    13b4:	str	r3, [fp, #-124]	; 0xffffff84
    13b8:	ldr	r3, [fp, #4]
    13bc:	ldr	r1, [pc, #360]	; 152c <mo_dline+0x2b0>
    13c0:	add	r7, r3, r7
    13c4:	add	r1, pc, r1
    13c8:	ldr	r0, [r7, #4]
    13cc:	bl	ba0 <irccmp@plt>
    13d0:	ldr	r3, [fp, #-124]	; 0xffffff84
    13d4:	cmp	r0, #0
    13d8:	bne	1504 <mo_dline+0x288>
    13dc:	ldr	r3, [r5, #24]
    13e0:	cmp	r3, #0
    13e4:	bne	1410 <mo_dline+0x194>
    13e8:	ldr	r3, [pc, #292]	; 1514 <mo_dline+0x298>
    13ec:	ldr	r1, [pc, #316]	; 1530 <mo_dline+0x2b4>
    13f0:	ldr	r2, [r8, r3]
    13f4:	ldr	r3, [pc, #312]	; 1534 <mo_dline+0x2b8>
    13f8:	add	r2, r2, #88	; 0x58
    13fc:	add	r3, pc, r3
    1400:	str	r3, [sp]
    1404:	add	r1, pc, r1
    1408:	add	r3, r5, #88	; 0x58
    140c:	b	12e8 <mo_dline+0x6c>
    1410:	ldr	r0, [r3, #36]	; 0x24
    1414:	cmp	r0, #0
    1418:	beq	13e8 <mo_dline+0x16c>
    141c:	ldr	r1, [pc, #276]	; 1538 <mo_dline+0x2bc>
    1420:	add	r1, pc, r1
    1424:	bl	b94 <privilegeset_in_set@plt>
    1428:	cmp	r0, #0
    142c:	beq	13e8 <mo_dline+0x16c>
    1430:	ldr	r2, [fp, #-120]	; 0xffffff88
    1434:	add	r3, r9, #3
    1438:	cmp	r2, r3
    143c:	ldr	r7, [r7, #8]
    1440:	ble	1484 <mo_dline+0x208>
    1444:	ldr	r2, [fp, #4]
    1448:	ldr	r9, [r2, r3, lsl #2]
    144c:	cmp	r9, #0
    1450:	beq	1484 <mo_dline+0x208>
    1454:	ldrb	r3, [r9]
    1458:	cmp	r3, #0
    145c:	beq	1484 <mo_dline+0x208>
    1460:	mov	r0, r9
    1464:	bl	af8 <strlen@plt>
    1468:	mov	r1, r9
    146c:	add	r0, r0, #15
    1470:	bic	r0, r0, #7
    1474:	sub	sp, sp, r0
    1478:	add	r4, sp, #24
    147c:	mov	r0, r4
    1480:	bl	ab0 <strcpy@plt>
    1484:	cmp	r7, #0
    1488:	beq	14dc <mo_dline+0x260>
    148c:	ldr	r3, [pc, #168]	; 153c <mo_dline+0x2c0>
    1490:	mov	r1, r7
    1494:	mov	r0, r5
    1498:	ldr	r2, [r8, r3]
    149c:	ldr	r3, [pc, #156]	; 1540 <mo_dline+0x2c4>
    14a0:	str	r4, [sp, #16]
    14a4:	add	r3, pc, r3
    14a8:	str	r3, [sp]
    14ac:	str	r6, [sp, #12]
    14b0:	stmib	sp, {r7, sl}
    14b4:	mov	r3, #0
    14b8:	ldr	r2, [r2]
    14bc:	bl	a38 <sendto_match_servs@plt>
    14c0:	ldr	r3, [pc, #76]	; 1514 <mo_dline+0x298>
    14c4:	mov	r0, r7
    14c8:	ldr	r1, [r8, r3]
    14cc:	add	r1, r1, #88	; 0x58
    14d0:	bl	b28 <match@plt>
    14d4:	cmp	r0, #0
    14d8:	beq	136c <mo_dline+0xf0>
    14dc:	mov	r3, r4
    14e0:	mov	r2, sl
    14e4:	mov	r1, r6
    14e8:	mov	r0, r5
    14ec:	bl	d5c <apply_dline>
    14f0:	bl	b40 <check_dlines@plt>
    14f4:	b	136c <mo_dline+0xf0>
    14f8:	ldr	r2, [fp, #-120]	; 0xffffff88
    14fc:	cmp	r3, r2
    1500:	bge	14dc <mo_dline+0x260>
    1504:	mov	r7, #0
    1508:	b	1444 <mo_dline+0x1c8>
    150c:	.word	0x00000cf3
    1510:	.word	0x00011d40
    1514:	.word	0x000000b4
    1518:	.word	0x00000be1
    151c:	.word	0x00000c15
    1520:	.word	0x00000be4
    1524:	.word	0x00000b93
    1528:	.word	0x00000b8d
    152c:	.word	0x00000b90
    1530:	.word	0x00000abd
    1534:	.word	0x00000b60
    1538:	.word	0x00000b37
    153c:	.word	0x000000b8
    1540:	.word	0x00000ac2

00001544 <me_dline>:
    1544:	push	{r4, r5, r6, r7, fp, lr}
    1548:	add	fp, sp, #20
    154c:	mov	r4, r2
    1550:	ldr	r5, [fp, #4]
    1554:	ldr	r0, [r5, #4]
    1558:	bl	b64 <atoi@plt>
    155c:	ldrh	r3, [r4, #80]	; 0x50
    1560:	cmp	r3, #64	; 0x40
    1564:	bne	15e0 <me_dline+0x9c>
    1568:	ldr	r3, [r4, #24]
    156c:	cmp	r3, #0
    1570:	beq	15e0 <me_dline+0x9c>
    1574:	ldr	r2, [r4, #32]
    1578:	cmp	r0, #0
    157c:	movgt	r3, #2048	; 0x800
    1580:	movle	r3, #4096	; 0x1000
    1584:	mov	r6, r0
    1588:	add	r2, r2, #88	; 0x58
    158c:	add	r1, r4, #163	; 0xa3
    1590:	add	r0, r4, #152	; 0x98
    1594:	bl	b88 <find_shared_conf@plt>
    1598:	cmp	r0, #0
    159c:	beq	15e0 <me_dline+0x9c>
    15a0:	ldr	r7, [r5, #8]
    15a4:	ldr	r5, [r5, #12]
    15a8:	mov	r0, r5
    15ac:	bl	af8 <strlen@plt>
    15b0:	mov	r1, r5
    15b4:	add	r0, r0, #15
    15b8:	bic	r0, r0, #7
    15bc:	sub	sp, sp, r0
    15c0:	mov	r0, sp
    15c4:	bl	ab0 <strcpy@plt>
    15c8:	mov	r2, r6
    15cc:	mov	r1, r7
    15d0:	mov	r3, r0
    15d4:	mov	r0, r4
    15d8:	bl	d5c <apply_dline>
    15dc:	bl	b40 <check_dlines@plt>
    15e0:	sub	sp, fp, #20
    15e4:	pop	{r4, r5, r6, r7, fp, pc}

000015e8 <apply_undline>:
    15e8:	push	{r4, r5, r6, r7, r8, r9, lr}
    15ec:	mov	r2, #0
    15f0:	mov	r4, r1
    15f4:	sub	sp, sp, #524	; 0x20c
    15f8:	mov	r5, r0
    15fc:	mov	r1, r2
    1600:	mov	r0, r4
    1604:	bl	a68 <parse_netmask@plt>
    1608:	ldr	r7, [pc, #516]	; 1814 <apply_undline+0x22c>
    160c:	add	r7, pc, r7
    1610:	sub	r0, r0, #2
    1614:	cmp	r0, #1
    1618:	bls	1638 <apply_undline+0x50>
    161c:	ldr	r1, [pc, #500]	; 1818 <apply_undline+0x230>
    1620:	mov	r2, r4
    1624:	add	r1, pc, r1
    1628:	mov	r0, r5
    162c:	bl	b4c <sendto_one_notice@plt>
    1630:	add	sp, sp, #524	; 0x20c
    1634:	pop	{r4, r5, r6, r7, r8, r9, pc}
    1638:	mov	r2, #0
    163c:	mov	r1, #131072	; 0x20000
    1640:	mov	r0, r4
    1644:	bl	b70 <find_exact_conf_by_address@plt>
    1648:	subs	r6, r0, #0
    164c:	ldreq	r1, [pc, #456]	; 181c <apply_undline+0x234>
    1650:	moveq	r2, r4
    1654:	addeq	r1, pc, r1
    1658:	beq	1628 <apply_undline+0x40>
    165c:	add	r8, sp, #8
    1660:	mov	r2, #512	; 0x200
    1664:	ldr	r1, [r6, #16]
    1668:	mov	r0, r8
    166c:	bl	b7c <rb_strlcpy@plt>
    1670:	ldr	r2, [pc, #424]	; 1820 <apply_undline+0x238>
    1674:	mov	r3, #0
    1678:	mov	r0, #12
    167c:	ldr	r1, [r7, r2]
    1680:	mul	r2, r0, r3
    1684:	ldr	r4, [r2, r1]
    1688:	cmp	r4, #0
    168c:	bne	172c <apply_undline+0x144>
    1690:	add	r3, r3, #1
    1694:	cmp	r3, #4
    1698:	bne	1680 <apply_undline+0x98>
    169c:	mov	r2, r4
    16a0:	ldr	r1, [r6, #16]
    16a4:	mov	r0, #1
    16a8:	bl	b58 <bandb_del@plt>
    16ac:	ldr	r3, [pc, #368]	; 1824 <apply_undline+0x23c>
    16b0:	ldr	r1, [pc, #368]	; 1828 <apply_undline+0x240>
    16b4:	mov	r0, r5
    16b8:	ldr	r2, [r7, r3]
    16bc:	ldr	r3, [r6, #16]
    16c0:	add	r2, r2, #88	; 0x58
    16c4:	str	r3, [sp]
    16c8:	add	r1, pc, r1
    16cc:	add	r3, r5, #88	; 0x58
    16d0:	bl	a50 <sendto_one@plt>
    16d4:	mov	r0, r5
    16d8:	bl	a8c <get_oper_name@plt>
    16dc:	ldr	r3, [r6, #16]
    16e0:	ldr	r2, [pc, #324]	; 182c <apply_undline+0x244>
    16e4:	mov	r1, r4
    16e8:	str	r3, [sp]
    16ec:	add	r2, pc, r2
    16f0:	mov	r3, r0
    16f4:	mov	r0, #256	; 0x100
    16f8:	bl	a74 <sendto_realops_snomask@plt>
    16fc:	mov	r0, r5
    1700:	bl	a8c <get_oper_name@plt>
    1704:	ldr	r1, [pc, #292]	; 1830 <apply_undline+0x248>
    1708:	ldr	r3, [r6, #16]
    170c:	add	r1, pc, r1
    1710:	mov	r2, r0
    1714:	mov	r0, #7
    1718:	bl	b1c <ilog@plt>
    171c:	mov	r1, r6
    1720:	ldr	r0, [r6, #16]
    1724:	bl	b10 <delete_one_address_conf@plt>
    1728:	b	1630 <apply_undline+0x48>
    172c:	ldr	r2, [r4]
    1730:	cmp	r6, r2
    1734:	ldr	r2, [r4, #8]
    1738:	bne	180c <apply_undline+0x224>
    173c:	cmp	r2, #0
    1740:	moveq	r0, #12
    1744:	ldr	ip, [r4, #4]
    1748:	mlaeq	r0, r0, r3, r1
    174c:	strne	ip, [r2, #4]
    1750:	mov	r9, #0
    1754:	streq	ip, [r0, #4]
    1758:	ldr	r0, [r4, #4]
    175c:	cmp	r0, #0
    1760:	moveq	r0, #12
    1764:	strne	r2, [r0, #8]
    1768:	muleq	r0, r0, r3
    176c:	streq	r2, [r1, r0]
    1770:	mov	r2, #12
    1774:	str	r9, [r4, #4]
    1778:	mla	r3, r2, r3, r1
    177c:	str	r9, [r4, #8]
    1780:	mov	r0, r4
    1784:	ldr	r2, [r3, #8]
    1788:	sub	r2, r2, #1
    178c:	str	r2, [r3, #8]
    1790:	bl	a98 <rb_free_rb_dlink_node@plt>
    1794:	mov	r1, r6
    1798:	ldr	r0, [r6, #16]
    179c:	bl	b10 <delete_one_address_conf@plt>
    17a0:	ldr	r3, [pc, #124]	; 1824 <apply_undline+0x23c>
    17a4:	ldr	r1, [pc, #136]	; 1834 <apply_undline+0x24c>
    17a8:	mov	r0, r5
    17ac:	ldr	r2, [r7, r3]
    17b0:	add	r1, pc, r1
    17b4:	add	r3, r5, #88	; 0x58
    17b8:	add	r2, r2, #88	; 0x58
    17bc:	str	r8, [sp]
    17c0:	bl	a50 <sendto_one@plt>
    17c4:	mov	r0, r5
    17c8:	bl	a8c <get_oper_name@plt>
    17cc:	ldr	r2, [pc, #100]	; 1838 <apply_undline+0x250>
    17d0:	mov	r1, r9
    17d4:	add	r2, pc, r2
    17d8:	str	r8, [sp]
    17dc:	mov	r3, r0
    17e0:	mov	r0, #256	; 0x100
    17e4:	bl	a74 <sendto_realops_snomask@plt>
    17e8:	mov	r0, r5
    17ec:	bl	a8c <get_oper_name@plt>
    17f0:	ldr	r1, [pc, #68]	; 183c <apply_undline+0x254>
    17f4:	mov	r3, r8
    17f8:	add	r1, pc, r1
    17fc:	mov	r2, r0
    1800:	mov	r0, #7
    1804:	bl	b1c <ilog@plt>
    1808:	b	1630 <apply_undline+0x48>
    180c:	mov	r4, r2
    1810:	b	1688 <apply_undline+0xa0>
    1814:	.word	0x000119ec
    1818:	.word	0x000008fd
    181c:	.word	0x00000935
    1820:	.word	0x000000a8
    1824:	.word	0x000000b4
    1828:	.word	0x0000093f
    182c:	.word	0x00000945
    1830:	.word	0x000008f2
    1834:	.word	0x000007eb
    1838:	.word	0x000007fc
    183c:	.word	0x00000806

00001840 <mo_undline>:
    1840:	push	{r4, r5, r6, r7, r8, r9, lr}
    1844:	mov	r4, r2
    1848:	ldr	r2, [r2, #24]
    184c:	sub	sp, sp, #20
    1850:	ldr	r5, [pc, #316]	; 1994 <mo_undline+0x154>
    1854:	cmp	r2, #0
    1858:	add	r5, pc, r5
    185c:	ldr	r6, [sp, #48]	; 0x30
    1860:	bne	1898 <mo_undline+0x58>
    1864:	ldr	r3, [pc, #300]	; 1998 <mo_undline+0x158>
    1868:	ldr	r1, [pc, #300]	; 199c <mo_undline+0x15c>
    186c:	ldr	r2, [r5, r3]
    1870:	ldr	r3, [pc, #296]	; 19a0 <mo_undline+0x160>
    1874:	add	r2, r2, #88	; 0x58
    1878:	add	r3, pc, r3
    187c:	str	r3, [sp, #48]	; 0x30
    1880:	add	r1, pc, r1
    1884:	add	r3, r4, #88	; 0x58
    1888:	mov	r0, r4
    188c:	add	sp, sp, #20
    1890:	pop	{r4, r5, r6, r7, r8, r9, lr}
    1894:	b	a50 <sendto_one@plt>
    1898:	ldr	r0, [r2, #36]	; 0x24
    189c:	cmp	r0, #0
    18a0:	beq	1864 <mo_undline+0x24>
    18a4:	ldr	r1, [pc, #248]	; 19a4 <mo_undline+0x164>
    18a8:	mov	r7, r3
    18ac:	add	r1, pc, r1
    18b0:	bl	b94 <privilegeset_in_set@plt>
    18b4:	cmp	r0, #0
    18b8:	beq	1864 <mo_undline+0x24>
    18bc:	cmp	r7, #3
    18c0:	ldr	r8, [r6, #4]
    18c4:	bgt	18dc <mo_undline+0x9c>
    18c8:	mov	r1, r8
    18cc:	mov	r0, r4
    18d0:	add	sp, sp, #20
    18d4:	pop	{r4, r5, r6, r7, r8, r9, lr}
    18d8:	b	15e8 <apply_undline>
    18dc:	ldr	r1, [pc, #196]	; 19a8 <mo_undline+0x168>
    18e0:	ldr	r0, [r6, #8]
    18e4:	add	r1, pc, r1
    18e8:	bl	ba0 <irccmp@plt>
    18ec:	subs	r9, r0, #0
    18f0:	bne	18c8 <mo_undline+0x88>
    18f4:	ldr	r2, [r4, #24]
    18f8:	ldr	r3, [pc, #152]	; 1998 <mo_undline+0x158>
    18fc:	cmp	r2, #0
    1900:	ldr	r7, [r5, r3]
    1904:	bne	1928 <mo_undline+0xe8>
    1908:	ldr	r3, [pc, #156]	; 19ac <mo_undline+0x16c>
    190c:	ldr	r1, [pc, #156]	; 19b0 <mo_undline+0x170>
    1910:	add	r3, pc, r3
    1914:	str	r3, [sp, #48]	; 0x30
    1918:	add	r2, r7, #88	; 0x58
    191c:	add	r3, r4, #88	; 0x58
    1920:	add	r1, pc, r1
    1924:	b	1888 <mo_undline+0x48>
    1928:	ldr	r0, [r2, #36]	; 0x24
    192c:	cmp	r0, #0
    1930:	beq	1908 <mo_undline+0xc8>
    1934:	ldr	r1, [pc, #120]	; 19b4 <mo_undline+0x174>
    1938:	add	r1, pc, r1
    193c:	bl	b94 <privilegeset_in_set@plt>
    1940:	cmp	r0, #0
    1944:	beq	1908 <mo_undline+0xc8>
    1948:	ldr	r3, [pc, #104]	; 19b8 <mo_undline+0x178>
    194c:	ldr	r6, [r6, #12]
    1950:	mov	r0, r4
    1954:	ldr	r2, [r5, r3]
    1958:	ldr	r3, [pc, #92]	; 19bc <mo_undline+0x17c>
    195c:	stmib	sp, {r6, r8}
    1960:	add	r3, pc, r3
    1964:	str	r3, [sp]
    1968:	mov	r1, r6
    196c:	mov	r3, r9
    1970:	ldr	r2, [r2]
    1974:	bl	a38 <sendto_match_servs@plt>
    1978:	add	r1, r7, #88	; 0x58
    197c:	mov	r0, r6
    1980:	bl	b28 <match@plt>
    1984:	cmp	r0, #0
    1988:	bne	18c8 <mo_undline+0x88>
    198c:	add	sp, sp, #20
    1990:	pop	{r4, r5, r6, r7, r8, r9, pc}
    1994:	.word	0x000117a0
    1998:	.word	0x000000b4
    199c:	.word	0x00000641
    19a0:	.word	0x000007dd
    19a4:	.word	0x0000063c
    19a8:	.word	0x00000670
    19ac:	.word	0x0000064c
    19b0:	.word	0x000005a1
    19b4:	.word	0x0000061f
    19b8:	.word	0x000000b8
    19bc:	.word	0x000006fd

000019c0 <me_undline>:
    19c0:	ldrh	r3, [r2, #80]	; 0x50
    19c4:	push	{r4, r5, r6, lr}
    19c8:	cmp	r3, #64	; 0x40
    19cc:	ldr	r5, [sp, #16]
    19d0:	popne	{r4, r5, r6, pc}
    19d4:	ldr	r3, [r2, #24]
    19d8:	cmp	r3, #0
    19dc:	popeq	{r4, r5, r6, pc}
    19e0:	mov	r4, r2
    19e4:	ldr	r2, [r2, #32]
    19e8:	mov	r3, #8192	; 0x2000
    19ec:	add	r2, r2, #88	; 0x58
    19f0:	add	r1, r4, #163	; 0xa3
    19f4:	add	r0, r4, #152	; 0x98
    19f8:	bl	b88 <find_shared_conf@plt>
    19fc:	cmp	r0, #0
    1a00:	popeq	{r4, r5, r6, pc}
    1a04:	ldr	r1, [r5, #4]
    1a08:	mov	r0, r4
    1a0c:	pop	{r4, r5, r6, lr}
    1a10:	b	15e8 <apply_undline>

00001a14 <__divsi3>:
    1a14:	cmp	r1, #0
    1a18:	beq	1c24 <.divsi3_skip_div0_test+0x208>

00001a1c <.divsi3_skip_div0_test>:
    1a1c:	eor	ip, r0, r1
    1a20:	rsbmi	r1, r1, #0
    1a24:	subs	r2, r1, #1
    1a28:	beq	1bf0 <.divsi3_skip_div0_test+0x1d4>
    1a2c:	movs	r3, r0
    1a30:	rsbmi	r3, r0, #0
    1a34:	cmp	r3, r1
    1a38:	bls	1bfc <.divsi3_skip_div0_test+0x1e0>
    1a3c:	tst	r1, r2
    1a40:	beq	1c0c <.divsi3_skip_div0_test+0x1f0>
    1a44:	clz	r2, r3
    1a48:	clz	r0, r1
    1a4c:	sub	r2, r0, r2
    1a50:	rsbs	r2, r2, #31
    1a54:	addne	r2, r2, r2, lsl #1
    1a58:	mov	r0, #0
    1a5c:	addne	pc, pc, r2, lsl #2
    1a60:	nop			; (mov r0, r0)
    1a64:	cmp	r3, r1, lsl #31
    1a68:	adc	r0, r0, r0
    1a6c:	subcs	r3, r3, r1, lsl #31
    1a70:	cmp	r3, r1, lsl #30
    1a74:	adc	r0, r0, r0
    1a78:	subcs	r3, r3, r1, lsl #30
    1a7c:	cmp	r3, r1, lsl #29
    1a80:	adc	r0, r0, r0
    1a84:	subcs	r3, r3, r1, lsl #29
    1a88:	cmp	r3, r1, lsl #28
    1a8c:	adc	r0, r0, r0
    1a90:	subcs	r3, r3, r1, lsl #28
    1a94:	cmp	r3, r1, lsl #27
    1a98:	adc	r0, r0, r0
    1a9c:	subcs	r3, r3, r1, lsl #27
    1aa0:	cmp	r3, r1, lsl #26
    1aa4:	adc	r0, r0, r0
    1aa8:	subcs	r3, r3, r1, lsl #26
    1aac:	cmp	r3, r1, lsl #25
    1ab0:	adc	r0, r0, r0
    1ab4:	subcs	r3, r3, r1, lsl #25
    1ab8:	cmp	r3, r1, lsl #24
    1abc:	adc	r0, r0, r0
    1ac0:	subcs	r3, r3, r1, lsl #24
    1ac4:	cmp	r3, r1, lsl #23
    1ac8:	adc	r0, r0, r0
    1acc:	subcs	r3, r3, r1, lsl #23
    1ad0:	cmp	r3, r1, lsl #22
    1ad4:	adc	r0, r0, r0
    1ad8:	subcs	r3, r3, r1, lsl #22
    1adc:	cmp	r3, r1, lsl #21
    1ae0:	adc	r0, r0, r0
    1ae4:	subcs	r3, r3, r1, lsl #21
    1ae8:	cmp	r3, r1, lsl #20
    1aec:	adc	r0, r0, r0
    1af0:	subcs	r3, r3, r1, lsl #20
    1af4:	cmp	r3, r1, lsl #19
    1af8:	adc	r0, r0, r0
    1afc:	subcs	r3, r3, r1, lsl #19
    1b00:	cmp	r3, r1, lsl #18
    1b04:	adc	r0, r0, r0
    1b08:	subcs	r3, r3, r1, lsl #18
    1b0c:	cmp	r3, r1, lsl #17
    1b10:	adc	r0, r0, r0
    1b14:	subcs	r3, r3, r1, lsl #17
    1b18:	cmp	r3, r1, lsl #16
    1b1c:	adc	r0, r0, r0
    1b20:	subcs	r3, r3, r1, lsl #16
    1b24:	cmp	r3, r1, lsl #15
    1b28:	adc	r0, r0, r0
    1b2c:	subcs	r3, r3, r1, lsl #15
    1b30:	cmp	r3, r1, lsl #14
    1b34:	adc	r0, r0, r0
    1b38:	subcs	r3, r3, r1, lsl #14
    1b3c:	cmp	r3, r1, lsl #13
    1b40:	adc	r0, r0, r0
    1b44:	subcs	r3, r3, r1, lsl #13
    1b48:	cmp	r3, r1, lsl #12
    1b4c:	adc	r0, r0, r0
    1b50:	subcs	r3, r3, r1, lsl #12
    1b54:	cmp	r3, r1, lsl #11
    1b58:	adc	r0, r0, r0
    1b5c:	subcs	r3, r3, r1, lsl #11
    1b60:	cmp	r3, r1, lsl #10
    1b64:	adc	r0, r0, r0
    1b68:	subcs	r3, r3, r1, lsl #10
    1b6c:	cmp	r3, r1, lsl #9
    1b70:	adc	r0, r0, r0
    1b74:	subcs	r3, r3, r1, lsl #9
    1b78:	cmp	r3, r1, lsl #8
    1b7c:	adc	r0, r0, r0
    1b80:	subcs	r3, r3, r1, lsl #8
    1b84:	cmp	r3, r1, lsl #7
    1b88:	adc	r0, r0, r0
    1b8c:	subcs	r3, r3, r1, lsl #7
    1b90:	cmp	r3, r1, lsl #6
    1b94:	adc	r0, r0, r0
    1b98:	subcs	r3, r3, r1, lsl #6
    1b9c:	cmp	r3, r1, lsl #5
    1ba0:	adc	r0, r0, r0
    1ba4:	subcs	r3, r3, r1, lsl #5
    1ba8:	cmp	r3, r1, lsl #4
    1bac:	adc	r0, r0, r0
    1bb0:	subcs	r3, r3, r1, lsl #4
    1bb4:	cmp	r3, r1, lsl #3
    1bb8:	adc	r0, r0, r0
    1bbc:	subcs	r3, r3, r1, lsl #3
    1bc0:	cmp	r3, r1, lsl #2
    1bc4:	adc	r0, r0, r0
    1bc8:	subcs	r3, r3, r1, lsl #2
    1bcc:	cmp	r3, r1, lsl #1
    1bd0:	adc	r0, r0, r0
    1bd4:	subcs	r3, r3, r1, lsl #1
    1bd8:	cmp	r3, r1
    1bdc:	adc	r0, r0, r0
    1be0:	subcs	r3, r3, r1
    1be4:	cmp	ip, #0
    1be8:	rsbmi	r0, r0, #0
    1bec:	bx	lr
    1bf0:	teq	ip, r0
    1bf4:	rsbmi	r0, r0, #0
    1bf8:	bx	lr
    1bfc:	movcc	r0, #0
    1c00:	asreq	r0, ip, #31
    1c04:	orreq	r0, r0, #1
    1c08:	bx	lr
    1c0c:	clz	r2, r1
    1c10:	rsb	r2, r2, #31
    1c14:	cmp	ip, #0
    1c18:	lsr	r0, r3, r2
    1c1c:	rsbmi	r0, r0, #0
    1c20:	bx	lr
    1c24:	cmp	r0, #0
    1c28:	mvngt	r0, #-2147483648	; 0x80000000
    1c2c:	movlt	r0, #-2147483648	; 0x80000000
    1c30:	b	1c54 <__aeabi_idiv0>

00001c34 <__aeabi_idivmod>:
    1c34:	cmp	r1, #0
    1c38:	beq	1c24 <.divsi3_skip_div0_test+0x208>
    1c3c:	push	{r0, r1, lr}
    1c40:	bl	1a1c <.divsi3_skip_div0_test>
    1c44:	pop	{r1, r2, lr}
    1c48:	mul	r3, r2, r0
    1c4c:	sub	r1, r1, r3
    1c50:	bx	lr

00001c54 <__aeabi_idiv0>:
    1c54:	push	{r1, lr}
    1c58:	mov	r0, #8
    1c5c:	bl	a20 <raise@plt>
    1c60:	pop	{r1, pc}

Disassembly of section .fini:

00001c64 <_fini>:
    1c64:	push	{r3, lr}
    1c68:	pop	{r3, pc}
