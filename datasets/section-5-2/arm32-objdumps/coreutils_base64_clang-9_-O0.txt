
../repos/coreutils/src/base64:     file format elf32-littlearm


Disassembly of section .init:

00010e4c <.init>:
   10e4c:	push	{r3, lr}
   10e50:	bl	11130 <__assert_fail@plt+0x48>
   10e54:	pop	{r3, pc}

Disassembly of section .plt:

00010e58 <calloc@plt-0x14>:
   10e58:	push	{lr}		; (str lr, [sp, #-4]!)
   10e5c:	ldr	lr, [pc, #4]	; 10e68 <calloc@plt-0x4>
   10e60:	add	lr, pc, lr
   10e64:	ldr	pc, [lr, #8]!
   10e68:	muleq	r1, r8, r1

00010e6c <calloc@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #126976	; 0x1f000
   10e74:	ldr	pc, [ip, #408]!	; 0x198

00010e78 <fputs_unlocked@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #126976	; 0x1f000
   10e80:	ldr	pc, [ip, #400]!	; 0x190

00010e84 <raise@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #126976	; 0x1f000
   10e8c:	ldr	pc, [ip, #392]!	; 0x188

00010e90 <strcmp@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #126976	; 0x1f000
   10e98:	ldr	pc, [ip, #384]!	; 0x180

00010e9c <posix_fadvise64@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #126976	; 0x1f000
   10ea4:	ldr	pc, [ip, #376]!	; 0x178

00010ea8 <printf@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #126976	; 0x1f000
   10eb0:	ldr	pc, [ip, #368]!	; 0x170

00010eb4 <fflush@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #126976	; 0x1f000
   10ebc:	ldr	pc, [ip, #360]!	; 0x168

00010ec0 <memmove@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #126976	; 0x1f000
   10ec8:	ldr	pc, [ip, #352]!	; 0x160

00010ecc <free@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #126976	; 0x1f000
   10ed4:	ldr	pc, [ip, #344]!	; 0x158

00010ed8 <_exit@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #126976	; 0x1f000
   10ee0:	ldr	pc, [ip, #336]!	; 0x150

00010ee4 <memcpy@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #126976	; 0x1f000
   10eec:	ldr	pc, [ip, #328]!	; 0x148

00010ef0 <mbsinit@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #126976	; 0x1f000
   10ef8:	ldr	pc, [ip, #320]!	; 0x140

00010efc <fwrite_unlocked@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #126976	; 0x1f000
   10f04:	ldr	pc, [ip, #312]!	; 0x138

00010f08 <memcmp@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #126976	; 0x1f000
   10f10:	ldr	pc, [ip, #304]!	; 0x130

00010f14 <fputc_unlocked@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #126976	; 0x1f000
   10f1c:	ldr	pc, [ip, #296]!	; 0x128

00010f20 <realloc@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #126976	; 0x1f000
   10f28:	ldr	pc, [ip, #288]!	; 0x120

00010f2c <textdomain@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #126976	; 0x1f000
   10f34:	ldr	pc, [ip, #280]!	; 0x118

00010f38 <iswprint@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #126976	; 0x1f000
   10f40:	ldr	pc, [ip, #272]!	; 0x110

00010f44 <lseek64@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #126976	; 0x1f000
   10f4c:	ldr	pc, [ip, #264]!	; 0x108

00010f50 <__ctype_get_mb_cur_max@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #126976	; 0x1f000
   10f58:	ldr	pc, [ip, #256]!	; 0x100

00010f5c <__fpending@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #126976	; 0x1f000
   10f64:	ldr	pc, [ip, #248]!	; 0xf8

00010f68 <ferror_unlocked@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #126976	; 0x1f000
   10f70:	ldr	pc, [ip, #240]!	; 0xf0

00010f74 <mbrtowc@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #126976	; 0x1f000
   10f7c:	ldr	pc, [ip, #232]!	; 0xe8

00010f80 <error@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #126976	; 0x1f000
   10f88:	ldr	pc, [ip, #224]!	; 0xe0

00010f8c <malloc@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #126976	; 0x1f000
   10f94:	ldr	pc, [ip, #216]!	; 0xd8

00010f98 <__libc_start_main@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #126976	; 0x1f000
   10fa0:	ldr	pc, [ip, #208]!	; 0xd0

00010fa4 <__freading@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #126976	; 0x1f000
   10fac:	ldr	pc, [ip, #200]!	; 0xc8

00010fb0 <__gmon_start__@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #126976	; 0x1f000
   10fb8:	ldr	pc, [ip, #192]!	; 0xc0

00010fbc <getopt_long@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #126976	; 0x1f000
   10fc4:	ldr	pc, [ip, #184]!	; 0xb8

00010fc8 <__ctype_b_loc@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #126976	; 0x1f000
   10fd0:	ldr	pc, [ip, #176]!	; 0xb0

00010fd4 <exit@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #126976	; 0x1f000
   10fdc:	ldr	pc, [ip, #168]!	; 0xa8

00010fe0 <gettext@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #126976	; 0x1f000
   10fe8:	ldr	pc, [ip, #160]!	; 0xa0

00010fec <strlen@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #126976	; 0x1f000
   10ff4:	ldr	pc, [ip, #152]!	; 0x98

00010ff8 <strchr@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #126976	; 0x1f000
   11000:	ldr	pc, [ip, #144]!	; 0x90

00011004 <fprintf@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #126976	; 0x1f000
   1100c:	ldr	pc, [ip, #136]!	; 0x88

00011010 <__errno_location@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #126976	; 0x1f000
   11018:	ldr	pc, [ip, #128]!	; 0x80

0001101c <__cxa_atexit@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #126976	; 0x1f000
   11024:	ldr	pc, [ip, #120]!	; 0x78

00011028 <memset@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #126976	; 0x1f000
   11030:	ldr	pc, [ip, #112]!	; 0x70

00011034 <fileno@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #126976	; 0x1f000
   1103c:	ldr	pc, [ip, #104]!	; 0x68

00011040 <memchr@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #126976	; 0x1f000
   11048:	ldr	pc, [ip, #96]!	; 0x60

0001104c <strtoimax@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #126976	; 0x1f000
   11054:	ldr	pc, [ip, #88]!	; 0x58

00011058 <fclose@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #126976	; 0x1f000
   11060:	ldr	pc, [ip, #80]!	; 0x50

00011064 <fseeko64@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #126976	; 0x1f000
   1106c:	ldr	pc, [ip, #72]!	; 0x48

00011070 <setlocale@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #126976	; 0x1f000
   11078:	ldr	pc, [ip, #64]!	; 0x40

0001107c <strrchr@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #126976	; 0x1f000
   11084:	ldr	pc, [ip, #56]!	; 0x38

00011088 <nl_langinfo@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #126976	; 0x1f000
   11090:	ldr	pc, [ip, #48]!	; 0x30

00011094 <fopen64@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #126976	; 0x1f000
   1109c:	ldr	pc, [ip, #40]!	; 0x28

000110a0 <bindtextdomain@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #126976	; 0x1f000
   110a8:	ldr	pc, [ip, #32]!

000110ac <fread_unlocked@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #126976	; 0x1f000
   110b4:	ldr	pc, [ip, #24]!

000110b8 <fputs@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #126976	; 0x1f000
   110c0:	ldr	pc, [ip, #16]!

000110c4 <strncmp@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #126976	; 0x1f000
   110cc:	ldr	pc, [ip, #8]!

000110d0 <abort@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #126976	; 0x1f000
   110d8:	ldr	pc, [ip, #0]!

000110dc <feof_unlocked@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #122880	; 0x1e000
   110e4:	ldr	pc, [ip, #4088]!	; 0xff8

000110e8 <__assert_fail@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #122880	; 0x1e000
   110f0:	ldr	pc, [ip, #4080]!	; 0xff0

Disassembly of section .text:

000110f4 <.text>:
   110f4:	mov	fp, #0
   110f8:	mov	lr, #0
   110fc:	pop	{r1}		; (ldr r1, [sp], #4)
   11100:	mov	r2, sp
   11104:	push	{r2}		; (str r2, [sp, #-4]!)
   11108:	push	{r0}		; (str r0, [sp, #-4]!)
   1110c:	ldr	ip, [pc, #16]	; 11124 <__assert_fail@plt+0x3c>
   11110:	push	{ip}		; (str ip, [sp, #-4]!)
   11114:	ldr	r0, [pc, #12]	; 11128 <__assert_fail@plt+0x40>
   11118:	ldr	r3, [pc, #12]	; 1112c <__assert_fail@plt+0x44>
   1111c:	bl	10f98 <__libc_start_main@plt>
   11120:	bl	110d0 <abort@plt>
   11124:	andeq	lr, r1, r8, ror #7
   11128:	andeq	r1, r1, r0, lsr r5
   1112c:	andeq	lr, r1, r8, lsl #7
   11130:	ldr	r3, [pc, #20]	; 1114c <__assert_fail@plt+0x64>
   11134:	ldr	r2, [pc, #20]	; 11150 <__assert_fail@plt+0x68>
   11138:	add	r3, pc, r3
   1113c:	ldr	r2, [r3, r2]
   11140:	cmp	r2, #0
   11144:	bxeq	lr
   11148:	b	10fb0 <__gmon_start__@plt>
   1114c:	andeq	lr, r1, r0, asr #29
   11150:	andeq	r0, r0, r4, ror #1
   11154:	ldr	r0, [pc, #24]	; 11174 <__assert_fail@plt+0x8c>
   11158:	ldr	r3, [pc, #24]	; 11178 <__assert_fail@plt+0x90>
   1115c:	cmp	r3, r0
   11160:	bxeq	lr
   11164:	ldr	r3, [pc, #16]	; 1117c <__assert_fail@plt+0x94>
   11168:	cmp	r3, #0
   1116c:	bxeq	lr
   11170:	bx	r3
   11174:	andeq	r0, r3, r8, lsr r1
   11178:	andeq	r0, r3, r8, lsr r1
   1117c:	andeq	r0, r0, r0
   11180:	ldr	r0, [pc, #36]	; 111ac <__assert_fail@plt+0xc4>
   11184:	ldr	r1, [pc, #36]	; 111b0 <__assert_fail@plt+0xc8>
   11188:	sub	r1, r1, r0
   1118c:	asr	r1, r1, #2
   11190:	add	r1, r1, r1, lsr #31
   11194:	asrs	r1, r1, #1
   11198:	bxeq	lr
   1119c:	ldr	r3, [pc, #16]	; 111b4 <__assert_fail@plt+0xcc>
   111a0:	cmp	r3, #0
   111a4:	bxeq	lr
   111a8:	bx	r3
   111ac:	andeq	r0, r3, r8, lsr r1
   111b0:	andeq	r0, r3, r8, lsr r1
   111b4:	andeq	r0, r0, r0
   111b8:	push	{r4, lr}
   111bc:	ldr	r4, [pc, #24]	; 111dc <__assert_fail@plt+0xf4>
   111c0:	ldrb	r3, [r4]
   111c4:	cmp	r3, #0
   111c8:	popne	{r4, pc}
   111cc:	bl	11154 <__assert_fail@plt+0x6c>
   111d0:	mov	r3, #1
   111d4:	strb	r3, [r4]
   111d8:	pop	{r4, pc}
   111dc:	andeq	r0, r3, ip, asr r1
   111e0:	b	11180 <__assert_fail@plt+0x98>
   111e4:	push	{fp, lr}
   111e8:	mov	fp, sp
   111ec:	sub	sp, sp, #40	; 0x28
   111f0:	str	r0, [fp, #-4]
   111f4:	ldr	r0, [fp, #-4]
   111f8:	cmp	r0, #0
   111fc:	beq	11248 <__assert_fail@plt+0x160>
   11200:	b	11204 <__assert_fail@plt+0x11c>
   11204:	movw	r0, #328	; 0x148
   11208:	movt	r0, #3
   1120c:	ldr	r0, [r0]
   11210:	movw	r1, #58384	; 0xe410
   11214:	movt	r1, #1
   11218:	str	r0, [fp, #-8]
   1121c:	mov	r0, r1
   11220:	bl	10fe0 <gettext@plt>
   11224:	movw	r1, #360	; 0x168
   11228:	movt	r1, #3
   1122c:	ldr	r2, [r1]
   11230:	ldr	r1, [fp, #-8]
   11234:	str	r0, [fp, #-12]
   11238:	mov	r0, r1
   1123c:	ldr	r1, [fp, #-12]
   11240:	bl	11004 <fprintf@plt>
   11244:	b	1132c <__assert_fail@plt+0x244>
   11248:	movw	r0, #58423	; 0xe437
   1124c:	movt	r0, #1
   11250:	bl	10fe0 <gettext@plt>
   11254:	movw	r1, #360	; 0x168
   11258:	movt	r1, #3
   1125c:	ldr	r1, [r1]
   11260:	bl	10ea8 <printf@plt>
   11264:	movw	r1, #58453	; 0xe455
   11268:	movt	r1, #1
   1126c:	str	r0, [fp, #-16]
   11270:	mov	r0, r1
   11274:	bl	10fe0 <gettext@plt>
   11278:	movw	r1, #64	; 0x40
   1127c:	bl	10ea8 <printf@plt>
   11280:	str	r0, [sp, #20]
   11284:	bl	11334 <__assert_fail@plt+0x24c>
   11288:	bl	1135c <__assert_fail@plt+0x274>
   1128c:	movw	r0, #58523	; 0xe49b
   11290:	movt	r0, #1
   11294:	bl	10fe0 <gettext@plt>
   11298:	movw	r1, #340	; 0x154
   1129c:	movt	r1, #3
   112a0:	ldr	r1, [r1]
   112a4:	bl	10e78 <fputs_unlocked@plt>
   112a8:	movw	r1, #58765	; 0xe58d
   112ac:	movt	r1, #1
   112b0:	str	r0, [sp, #16]
   112b4:	mov	r0, r1
   112b8:	bl	10fe0 <gettext@plt>
   112bc:	movw	r1, #340	; 0x154
   112c0:	movt	r1, #3
   112c4:	ldr	r1, [r1]
   112c8:	bl	10e78 <fputs_unlocked@plt>
   112cc:	movw	r1, #58810	; 0xe5ba
   112d0:	movt	r1, #1
   112d4:	str	r0, [sp, #12]
   112d8:	mov	r0, r1
   112dc:	bl	10fe0 <gettext@plt>
   112e0:	movw	r1, #340	; 0x154
   112e4:	movt	r1, #3
   112e8:	ldr	r1, [r1]
   112ec:	bl	10e78 <fputs_unlocked@plt>
   112f0:	movw	r1, #58864	; 0xe5f0
   112f4:	movt	r1, #1
   112f8:	str	r0, [sp, #8]
   112fc:	mov	r0, r1
   11300:	bl	10fe0 <gettext@plt>
   11304:	movw	r1, #59132	; 0xe6fc
   11308:	movt	r1, #1
   1130c:	str	r1, [sp, #4]
   11310:	ldr	r2, [sp, #4]
   11314:	bl	10ea8 <printf@plt>
   11318:	movw	r1, #59132	; 0xe6fc
   1131c:	movt	r1, #1
   11320:	str	r0, [sp]
   11324:	mov	r0, r1
   11328:	bl	11384 <__assert_fail@plt+0x29c>
   1132c:	ldr	r0, [fp, #-4]
   11330:	bl	10fd4 <exit@plt>
   11334:	push	{fp, lr}
   11338:	mov	fp, sp
   1133c:	movw	r0, #59243	; 0xe76b
   11340:	movt	r0, #1
   11344:	bl	10fe0 <gettext@plt>
   11348:	movw	r1, #340	; 0x154
   1134c:	movt	r1, #3
   11350:	ldr	r1, [r1]
   11354:	bl	10e78 <fputs_unlocked@plt>
   11358:	pop	{fp, pc}
   1135c:	push	{fp, lr}
   11360:	mov	fp, sp
   11364:	movw	r0, #59299	; 0xe7a3
   11368:	movt	r0, #1
   1136c:	bl	10fe0 <gettext@plt>
   11370:	movw	r1, #340	; 0x154
   11374:	movt	r1, #3
   11378:	ldr	r1, [r1]
   1137c:	bl	10e78 <fputs_unlocked@plt>
   11380:	pop	{fp, pc}
   11384:	push	{fp, lr}
   11388:	mov	fp, sp
   1138c:	sub	sp, sp, #88	; 0x58
   11390:	add	r1, sp, #28
   11394:	movw	r2, #59884	; 0xe9ec
   11398:	movt	r2, #1
   1139c:	str	r0, [fp, #-4]
   113a0:	mov	r0, r1
   113a4:	str	r1, [sp, #12]
   113a8:	mov	r1, r2
   113ac:	movw	r2, #56	; 0x38
   113b0:	bl	10ee4 <memcpy@plt>
   113b4:	ldr	r0, [fp, #-4]
   113b8:	str	r0, [sp, #24]
   113bc:	ldr	r0, [sp, #12]
   113c0:	str	r0, [sp, #20]
   113c4:	ldr	r0, [sp, #20]
   113c8:	ldr	r0, [r0]
   113cc:	movw	r1, #0
   113d0:	cmp	r0, r1
   113d4:	movw	r0, #0
   113d8:	str	r0, [sp, #8]
   113dc:	beq	11408 <__assert_fail@plt+0x320>
   113e0:	ldr	r0, [fp, #-4]
   113e4:	ldr	r1, [sp, #20]
   113e8:	ldr	r1, [r1]
   113ec:	bl	10e90 <strcmp@plt>
   113f0:	cmp	r0, #0
   113f4:	movw	r0, #0
   113f8:	moveq	r0, #1
   113fc:	mvn	r1, #0
   11400:	eor	r0, r0, r1
   11404:	str	r0, [sp, #8]
   11408:	ldr	r0, [sp, #8]
   1140c:	tst	r0, #1
   11410:	beq	11424 <__assert_fail@plt+0x33c>
   11414:	ldr	r0, [sp, #20]
   11418:	add	r0, r0, #8
   1141c:	str	r0, [sp, #20]
   11420:	b	113c4 <__assert_fail@plt+0x2dc>
   11424:	ldr	r0, [sp, #20]
   11428:	ldr	r0, [r0, #4]
   1142c:	movw	r1, #0
   11430:	cmp	r0, r1
   11434:	beq	11444 <__assert_fail@plt+0x35c>
   11438:	ldr	r0, [sp, #20]
   1143c:	ldr	r0, [r0, #4]
   11440:	str	r0, [sp, #24]
   11444:	movw	r0, #59469	; 0xe84d
   11448:	movt	r0, #1
   1144c:	bl	10fe0 <gettext@plt>
   11450:	movw	r1, #59193	; 0xe739
   11454:	movt	r1, #1
   11458:	movw	r2, #59492	; 0xe864
   1145c:	movt	r2, #1
   11460:	bl	10ea8 <printf@plt>
   11464:	movw	r1, #5
   11468:	str	r0, [sp, #4]
   1146c:	mov	r0, r1
   11470:	movw	r1, #0
   11474:	bl	11070 <setlocale@plt>
   11478:	str	r0, [sp, #16]
   1147c:	ldr	r0, [sp, #16]
   11480:	movw	r1, #0
   11484:	cmp	r0, r1
   11488:	beq	114c4 <__assert_fail@plt+0x3dc>
   1148c:	ldr	r0, [sp, #16]
   11490:	movw	r1, #59532	; 0xe88c
   11494:	movt	r1, #1
   11498:	movw	r2, #3
   1149c:	bl	110c4 <strncmp@plt>
   114a0:	cmp	r0, #0
   114a4:	beq	114c4 <__assert_fail@plt+0x3dc>
   114a8:	movw	r0, #59536	; 0xe890
   114ac:	movt	r0, #1
   114b0:	bl	10fe0 <gettext@plt>
   114b4:	movw	r1, #340	; 0x154
   114b8:	movt	r1, #3
   114bc:	ldr	r1, [r1]
   114c0:	bl	10e78 <fputs_unlocked@plt>
   114c4:	movw	r0, #59607	; 0xe8d7
   114c8:	movt	r0, #1
   114cc:	bl	10fe0 <gettext@plt>
   114d0:	ldr	r2, [fp, #-4]
   114d4:	movw	r1, #59492	; 0xe864
   114d8:	movt	r1, #1
   114dc:	bl	10ea8 <printf@plt>
   114e0:	movw	r1, #59634	; 0xe8f2
   114e4:	movt	r1, #1
   114e8:	str	r0, [sp]
   114ec:	mov	r0, r1
   114f0:	bl	10fe0 <gettext@plt>
   114f4:	ldr	r1, [sp, #24]
   114f8:	ldr	r2, [sp, #24]
   114fc:	ldr	r3, [fp, #-4]
   11500:	cmp	r2, r3
   11504:	movw	r2, #0
   11508:	moveq	r2, #1
   1150c:	tst	r2, #1
   11510:	movw	r2, #59684	; 0xe924
   11514:	movt	r2, #1
   11518:	movw	r3, #59402	; 0xe80a
   1151c:	movt	r3, #1
   11520:	movne	r2, r3
   11524:	bl	10ea8 <printf@plt>
   11528:	mov	sp, fp
   1152c:	pop	{fp, pc}
   11530:	push	{fp, lr}
   11534:	mov	fp, sp
   11538:	sub	sp, sp, #104	; 0x68
   1153c:	movw	r2, #0
   11540:	str	r2, [fp, #-4]
   11544:	str	r0, [fp, #-8]
   11548:	str	r1, [fp, #-12]
   1154c:	movw	r0, #0
   11550:	strb	r0, [fp, #-25]	; 0xffffffe7
   11554:	strb	r0, [fp, #-26]	; 0xffffffe6
   11558:	movw	r0, #76	; 0x4c
   1155c:	str	r0, [fp, #-32]	; 0xffffffe0
   11560:	ldr	r0, [fp, #-12]
   11564:	ldr	r0, [r0]
   11568:	bl	14318 <__assert_fail@plt+0x3230>
   1156c:	movw	r0, #6
   11570:	movw	r1, #59684	; 0xe924
   11574:	movt	r1, #1
   11578:	bl	11070 <setlocale@plt>
   1157c:	movw	r1, #59197	; 0xe73d
   11580:	movt	r1, #1
   11584:	str	r0, [fp, #-48]	; 0xffffffd0
   11588:	mov	r0, r1
   1158c:	movw	r1, #59139	; 0xe703
   11590:	movt	r1, #1
   11594:	bl	110a0 <bindtextdomain@plt>
   11598:	movw	r1, #59197	; 0xe73d
   1159c:	movt	r1, #1
   115a0:	str	r0, [sp, #52]	; 0x34
   115a4:	mov	r0, r1
   115a8:	bl	10f2c <textdomain@plt>
   115ac:	movw	r1, #15496	; 0x3c88
   115b0:	movt	r1, #1
   115b4:	str	r0, [sp, #48]	; 0x30
   115b8:	mov	r0, r1
   115bc:	bl	1e3ec <__assert_fail@plt+0xd304>
   115c0:	ldr	r0, [fp, #-8]
   115c4:	ldr	r1, [fp, #-12]
   115c8:	movw	r2, #59163	; 0xe71b
   115cc:	movt	r2, #1
   115d0:	movw	r3, #59788	; 0xe98c
   115d4:	movt	r3, #1
   115d8:	movw	ip, #0
   115dc:	str	ip, [sp]
   115e0:	bl	10fbc <getopt_long@plt>
   115e4:	str	r0, [fp, #-16]
   115e8:	cmn	r0, #1
   115ec:	beq	117ac <__assert_fail@plt+0x6c4>
   115f0:	ldr	r0, [fp, #-16]
   115f4:	cmn	r0, #3
   115f8:	str	r0, [sp, #44]	; 0x2c
   115fc:	beq	11758 <__assert_fail@plt+0x670>
   11600:	b	11604 <__assert_fail@plt+0x51c>
   11604:	ldr	r0, [sp, #44]	; 0x2c
   11608:	cmn	r0, #2
   1160c:	beq	11750 <__assert_fail@plt+0x668>
   11610:	b	11614 <__assert_fail@plt+0x52c>
   11614:	ldr	r0, [sp, #44]	; 0x2c
   11618:	cmp	r0, #100	; 0x64
   1161c:	beq	11644 <__assert_fail@plt+0x55c>
   11620:	b	11624 <__assert_fail@plt+0x53c>
   11624:	ldr	r0, [sp, #44]	; 0x2c
   11628:	cmp	r0, #105	; 0x69
   1162c:	beq	11744 <__assert_fail@plt+0x65c>
   11630:	b	11634 <__assert_fail@plt+0x54c>
   11634:	ldr	r0, [sp, #44]	; 0x2c
   11638:	cmp	r0, #119	; 0x77
   1163c:	beq	11650 <__assert_fail@plt+0x568>
   11640:	b	117a0 <__assert_fail@plt+0x6b8>
   11644:	movw	r0, #1
   11648:	strb	r0, [fp, #-25]	; 0xffffffe7
   1164c:	b	117a8 <__assert_fail@plt+0x6c0>
   11650:	movw	r0, #344	; 0x158
   11654:	movt	r0, #3
   11658:	ldr	r0, [r0]
   1165c:	movw	r1, #0
   11660:	movw	r2, #10
   11664:	sub	r3, fp, #40	; 0x28
   11668:	movw	ip, #59684	; 0xe924
   1166c:	movt	ip, #1
   11670:	str	ip, [sp]
   11674:	bl	1b478 <__assert_fail@plt+0xa390>
   11678:	str	r0, [fp, #-44]	; 0xffffffd4
   1167c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11680:	movw	r1, #1
   11684:	cmp	r1, r0
   11688:	bcc	1169c <__assert_fail@plt+0x5b4>
   1168c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11690:	cmn	r0, #1
   11694:	bgt	116e8 <__assert_fail@plt+0x600>
   11698:	b	1169c <__assert_fail@plt+0x5b4>
   1169c:	movw	r0, #59175	; 0xe727
   116a0:	movt	r0, #1
   116a4:	bl	10fe0 <gettext@plt>
   116a8:	movw	r1, #344	; 0x158
   116ac:	movt	r1, #3
   116b0:	ldr	r1, [r1]
   116b4:	str	r0, [sp, #40]	; 0x28
   116b8:	mov	r0, r1
   116bc:	bl	16974 <__assert_fail@plt+0x588c>
   116c0:	movw	r1, #1
   116c4:	str	r0, [sp, #36]	; 0x24
   116c8:	mov	r0, r1
   116cc:	movw	r1, #0
   116d0:	movw	r2, #59168	; 0xe720
   116d4:	movt	r2, #1
   116d8:	ldr	r3, [sp, #40]	; 0x28
   116dc:	ldr	ip, [sp, #36]	; 0x24
   116e0:	str	ip, [sp]
   116e4:	bl	10f80 <error@plt>
   116e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   116ec:	cmp	r0, #1
   116f0:	beq	1170c <__assert_fail@plt+0x624>
   116f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   116f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   116fc:	subs	r0, r0, #-2147483648	; 0x80000000
   11700:	sbcs	r1, r1, #0
   11704:	blt	11720 <__assert_fail@plt+0x638>
   11708:	b	1170c <__assert_fail@plt+0x624>
   1170c:	mov	r0, #0
   11710:	mov	r1, r0
   11714:	str	r1, [sp, #32]
   11718:	str	r0, [sp, #28]
   1171c:	b	11734 <__assert_fail@plt+0x64c>
   11720:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11724:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11728:	str	r0, [sp, #32]
   1172c:	str	r1, [sp, #28]
   11730:	b	11734 <__assert_fail@plt+0x64c>
   11734:	ldr	r0, [sp, #28]
   11738:	ldr	r1, [sp, #32]
   1173c:	str	r1, [fp, #-32]	; 0xffffffe0
   11740:	b	117a8 <__assert_fail@plt+0x6c0>
   11744:	movw	r0, #1
   11748:	strb	r0, [fp, #-26]	; 0xffffffe6
   1174c:	b	117a8 <__assert_fail@plt+0x6c0>
   11750:	movw	r0, #0
   11754:	bl	111e4 <__assert_fail@plt+0xfc>
   11758:	movw	r0, #340	; 0x154
   1175c:	movt	r0, #3
   11760:	ldr	r0, [r0]
   11764:	movw	r1, #240	; 0xf0
   11768:	movt	r1, #3
   1176c:	ldr	r3, [r1]
   11770:	movw	r1, #59132	; 0xe6fc
   11774:	movt	r1, #1
   11778:	movw	r2, #59193	; 0xe739
   1177c:	movt	r2, #1
   11780:	movw	ip, #59207	; 0xe747
   11784:	movt	ip, #1
   11788:	str	ip, [sp]
   1178c:	movw	ip, #0
   11790:	str	ip, [sp, #4]
   11794:	bl	18530 <__assert_fail@plt+0x7448>
   11798:	movw	r0, #0
   1179c:	bl	10fd4 <exit@plt>
   117a0:	movw	r0, #1
   117a4:	bl	111e4 <__assert_fail@plt+0xfc>
   117a8:	b	115c0 <__assert_fail@plt+0x4d8>
   117ac:	ldr	r0, [fp, #-8]
   117b0:	movw	r1, #320	; 0x140
   117b4:	movt	r1, #3
   117b8:	ldr	r1, [r1]
   117bc:	sub	r0, r0, r1
   117c0:	cmp	r0, #1
   117c4:	ble	1181c <__assert_fail@plt+0x734>
   117c8:	movw	r0, #59223	; 0xe757
   117cc:	movt	r0, #1
   117d0:	bl	10fe0 <gettext@plt>
   117d4:	ldr	r1, [fp, #-12]
   117d8:	movw	r2, #320	; 0x140
   117dc:	movt	r2, #3
   117e0:	ldr	r2, [r2]
   117e4:	add	r2, r2, #1
   117e8:	add	r1, r1, r2, lsl #2
   117ec:	ldr	r1, [r1]
   117f0:	str	r0, [sp, #24]
   117f4:	mov	r0, r1
   117f8:	bl	16974 <__assert_fail@plt+0x588c>
   117fc:	movw	r1, #0
   11800:	str	r0, [sp, #20]
   11804:	mov	r0, r1
   11808:	ldr	r2, [sp, #24]
   1180c:	ldr	r3, [sp, #20]
   11810:	bl	10f80 <error@plt>
   11814:	movw	r0, #1
   11818:	bl	111e4 <__assert_fail@plt+0xfc>
   1181c:	movw	r0, #320	; 0x140
   11820:	movt	r0, #3
   11824:	ldr	r0, [r0]
   11828:	ldr	r1, [fp, #-8]
   1182c:	cmp	r0, r1
   11830:	bge	11854 <__assert_fail@plt+0x76c>
   11834:	ldr	r0, [fp, #-12]
   11838:	movw	r1, #320	; 0x140
   1183c:	movt	r1, #3
   11840:	ldr	r1, [r1]
   11844:	add	r0, r0, r1, lsl #2
   11848:	ldr	r0, [r0]
   1184c:	str	r0, [fp, #-24]	; 0xffffffe8
   11850:	b	11860 <__assert_fail@plt+0x778>
   11854:	movw	r0, #60341	; 0xebb5
   11858:	movt	r0, #1
   1185c:	str	r0, [fp, #-24]	; 0xffffffe8
   11860:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11864:	movw	r1, #60341	; 0xebb5
   11868:	movt	r1, #1
   1186c:	bl	10e90 <strcmp@plt>
   11870:	cmp	r0, #0
   11874:	bne	1189c <__assert_fail@plt+0x7b4>
   11878:	movw	r0, #0
   1187c:	str	r0, [sp, #16]
   11880:	ldr	r1, [sp, #16]
   11884:	bl	1b444 <__assert_fail@plt+0xa35c>
   11888:	movw	r0, #336	; 0x150
   1188c:	movt	r0, #3
   11890:	ldr	r0, [r0]
   11894:	str	r0, [fp, #-20]	; 0xffffffec
   11898:	b	11904 <__assert_fail@plt+0x81c>
   1189c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   118a0:	movw	r1, #59240	; 0xe768
   118a4:	movt	r1, #1
   118a8:	bl	11094 <fopen64@plt>
   118ac:	str	r0, [fp, #-20]	; 0xffffffec
   118b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   118b4:	movw	r1, #0
   118b8:	cmp	r0, r1
   118bc:	bne	11900 <__assert_fail@plt+0x818>
   118c0:	bl	11010 <__errno_location@plt>
   118c4:	ldr	r1, [r0]
   118c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   118cc:	movw	r0, #0
   118d0:	movw	r3, #3
   118d4:	str	r1, [sp, #12]
   118d8:	mov	r1, r3
   118dc:	bl	16730 <__assert_fail@plt+0x5648>
   118e0:	movw	r1, #1
   118e4:	str	r0, [sp, #8]
   118e8:	mov	r0, r1
   118ec:	ldr	r1, [sp, #12]
   118f0:	movw	r2, #59172	; 0xe724
   118f4:	movt	r2, #1
   118f8:	ldr	r3, [sp, #8]
   118fc:	bl	10f80 <error@plt>
   11900:	b	11904 <__assert_fail@plt+0x81c>
   11904:	ldr	r0, [fp, #-20]	; 0xffffffec
   11908:	movw	r1, #2
   1190c:	bl	13e0c <__assert_fail@plt+0x2d24>
   11910:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   11914:	tst	r0, #1
   11918:	beq	11940 <__assert_fail@plt+0x858>
   1191c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11920:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11924:	movw	r2, #340	; 0x154
   11928:	movt	r2, #3
   1192c:	ldr	r2, [r2]
   11930:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   11934:	and	r3, r3, #1
   11938:	bl	11968 <__assert_fail@plt+0x880>
   1193c:	b	1195c <__assert_fail@plt+0x874>
   11940:	ldr	r0, [fp, #-20]	; 0xffffffec
   11944:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11948:	movw	r2, #340	; 0x154
   1194c:	movt	r2, #3
   11950:	ldr	r2, [r2]
   11954:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11958:	bl	11cf4 <__assert_fail@plt+0xc0c>
   1195c:	ldr	r0, [fp, #-4]
   11960:	mov	sp, fp
   11964:	pop	{fp, pc}
   11968:	push	{fp, lr}
   1196c:	mov	fp, sp
   11970:	sub	sp, sp, #104	; 0x68
   11974:	str	r0, [fp, #-4]
   11978:	str	r1, [fp, #-8]
   1197c:	str	r2, [fp, #-12]
   11980:	and	r0, r3, #1
   11984:	strb	r0, [fp, #-13]
   11988:	movw	r0, #4096	; 0x1000
   1198c:	bl	186b8 <__assert_fail@plt+0x75d0>
   11990:	str	r0, [fp, #-20]	; 0xffffffec
   11994:	movw	r0, #3072	; 0xc00
   11998:	bl	186b8 <__assert_fail@plt+0x75d0>
   1199c:	str	r0, [fp, #-24]	; 0xffffffe8
   119a0:	sub	r0, fp, #36	; 0x24
   119a4:	bl	133a0 <__assert_fail@plt+0x22b8>
   119a8:	movw	r0, #0
   119ac:	str	r0, [fp, #-28]	; 0xffffffe4
   119b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   119b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   119b8:	add	r0, r0, r1
   119bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   119c0:	movw	r2, #4096	; 0x1000
   119c4:	sub	r2, r2, r1
   119c8:	ldr	r3, [fp, #-4]
   119cc:	movw	r1, #1
   119d0:	bl	110ac <fread_unlocked@plt>
   119d4:	str	r0, [fp, #-44]	; 0xffffffd4
   119d8:	ldrb	r0, [fp, #-13]
   119dc:	tst	r0, #1
   119e0:	beq	11ac8 <__assert_fail@plt+0x9e0>
   119e4:	movw	r0, #0
   119e8:	str	r0, [fp, #-48]	; 0xffffffd0
   119ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   119f0:	cmp	r0, #0
   119f4:	movw	r0, #0
   119f8:	str	r0, [sp, #44]	; 0x2c
   119fc:	ble	11a18 <__assert_fail@plt+0x930>
   11a00:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11a04:	ldr	r1, [fp, #-44]	; 0xffffffd4
   11a08:	cmp	r0, r1
   11a0c:	movw	r0, #0
   11a10:	movlt	r0, #1
   11a14:	str	r0, [sp, #44]	; 0x2c
   11a18:	ldr	r0, [sp, #44]	; 0x2c
   11a1c:	tst	r0, #1
   11a20:	beq	11ac4 <__assert_fail@plt+0x9dc>
   11a24:	ldr	r0, [fp, #-20]	; 0xffffffec
   11a28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11a2c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11a30:	add	r1, r1, r2
   11a34:	add	r0, r0, r1
   11a38:	ldrb	r0, [r0]
   11a3c:	bl	13358 <__assert_fail@plt+0x2270>
   11a40:	tst	r0, #1
   11a44:	bne	11a68 <__assert_fail@plt+0x980>
   11a48:	ldr	r0, [fp, #-20]	; 0xffffffec
   11a4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11a50:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11a54:	add	r1, r1, r2
   11a58:	add	r0, r0, r1
   11a5c:	ldrb	r0, [r0]
   11a60:	cmp	r0, #61	; 0x3d
   11a64:	bne	11a78 <__assert_fail@plt+0x990>
   11a68:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11a6c:	add	r0, r0, #1
   11a70:	str	r0, [fp, #-48]	; 0xffffffd0
   11a74:	b	11ac0 <__assert_fail@plt+0x9d8>
   11a78:	ldr	r0, [fp, #-20]	; 0xffffffec
   11a7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11a80:	add	r0, r0, r1
   11a84:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11a88:	add	r0, r0, r1
   11a8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11a90:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11a94:	add	r1, r1, r2
   11a98:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11a9c:	add	r1, r1, r2
   11aa0:	add	r1, r1, #1
   11aa4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   11aa8:	mvn	r3, #0
   11aac:	add	r2, r2, r3
   11ab0:	str	r2, [fp, #-44]	; 0xffffffd4
   11ab4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11ab8:	sub	r2, r2, r3
   11abc:	bl	10ec0 <memmove@plt>
   11ac0:	b	119ec <__assert_fail@plt+0x904>
   11ac4:	b	11ac8 <__assert_fail@plt+0x9e0>
   11ac8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11acc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11ad0:	add	r0, r1, r0
   11ad4:	str	r0, [fp, #-28]	; 0xffffffe4
   11ad8:	ldr	r0, [fp, #-4]
   11adc:	bl	10f68 <ferror_unlocked@plt>
   11ae0:	cmp	r0, #0
   11ae4:	beq	11b18 <__assert_fail@plt+0xa30>
   11ae8:	bl	11010 <__errno_location@plt>
   11aec:	ldr	r1, [r0]
   11af0:	movw	r0, #59725	; 0xe94d
   11af4:	movt	r0, #1
   11af8:	str	r1, [sp, #40]	; 0x28
   11afc:	bl	10fe0 <gettext@plt>
   11b00:	movw	r1, #1
   11b04:	str	r0, [sp, #36]	; 0x24
   11b08:	mov	r0, r1
   11b0c:	ldr	r1, [sp, #40]	; 0x28
   11b10:	ldr	r2, [sp, #36]	; 0x24
   11b14:	bl	10f80 <error@plt>
   11b18:	b	11b1c <__assert_fail@plt+0xa34>
   11b1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11b20:	cmp	r0, #4096	; 0x1000
   11b24:	movw	r0, #0
   11b28:	str	r0, [sp, #32]
   11b2c:	bge	11b50 <__assert_fail@plt+0xa68>
   11b30:	ldr	r0, [fp, #-4]
   11b34:	bl	110dc <feof_unlocked@plt>
   11b38:	cmp	r0, #0
   11b3c:	movw	r0, #0
   11b40:	movne	r0, #1
   11b44:	mvn	r1, #0
   11b48:	eor	r0, r0, r1
   11b4c:	str	r0, [sp, #32]
   11b50:	ldr	r0, [sp, #32]
   11b54:	tst	r0, #1
   11b58:	bne	119b0 <__assert_fail@plt+0x8c8>
   11b5c:	movw	r0, #0
   11b60:	str	r0, [sp, #52]	; 0x34
   11b64:	ldr	r0, [sp, #52]	; 0x34
   11b68:	ldr	r1, [fp, #-4]
   11b6c:	str	r0, [sp, #28]
   11b70:	mov	r0, r1
   11b74:	bl	110dc <feof_unlocked@plt>
   11b78:	cmp	r0, #0
   11b7c:	movw	r0, #0
   11b80:	movne	r0, #1
   11b84:	mvn	r1, #0
   11b88:	eor	r0, r0, r1
   11b8c:	eor	r0, r0, r1
   11b90:	and	r0, r0, #1
   11b94:	add	r0, r0, #1
   11b98:	ldr	r1, [sp, #28]
   11b9c:	cmp	r1, r0
   11ba0:	bge	11cb8 <__assert_fail@plt+0xbd0>
   11ba4:	ldr	r0, [sp, #52]	; 0x34
   11ba8:	cmp	r0, #1
   11bac:	bne	11bc0 <__assert_fail@plt+0xad8>
   11bb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11bb4:	cmp	r0, #0
   11bb8:	bne	11bc0 <__assert_fail@plt+0xad8>
   11bbc:	b	11cb8 <__assert_fail@plt+0xbd0>
   11bc0:	movw	r0, #3072	; 0xc00
   11bc4:	str	r0, [sp, #48]	; 0x30
   11bc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   11bcc:	ldr	r0, [sp, #52]	; 0x34
   11bd0:	cmp	r0, #0
   11bd4:	str	r1, [sp, #24]
   11bd8:	bne	11be8 <__assert_fail@plt+0xb00>
   11bdc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11be0:	str	r0, [sp, #20]
   11be4:	b	11bf4 <__assert_fail@plt+0xb0c>
   11be8:	movw	r0, #0
   11bec:	str	r0, [sp, #20]
   11bf0:	b	11bf4 <__assert_fail@plt+0xb0c>
   11bf4:	ldr	r0, [sp, #20]
   11bf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11bfc:	sub	r1, fp, #36	; 0x24
   11c00:	str	r0, [sp, #16]
   11c04:	mov	r0, r1
   11c08:	ldr	r1, [sp, #24]
   11c0c:	ldr	r2, [sp, #16]
   11c10:	add	ip, sp, #48	; 0x30
   11c14:	str	ip, [sp]
   11c18:	bl	133bc <__assert_fail@plt+0x22d4>
   11c1c:	and	r0, r0, #1
   11c20:	strb	r0, [fp, #-37]	; 0xffffffdb
   11c24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11c28:	ldr	r2, [sp, #48]	; 0x30
   11c2c:	ldr	r3, [fp, #-12]
   11c30:	movw	r1, #1
   11c34:	bl	10efc <fwrite_unlocked@plt>
   11c38:	ldr	r1, [sp, #48]	; 0x30
   11c3c:	cmp	r0, r1
   11c40:	bcs	11c74 <__assert_fail@plt+0xb8c>
   11c44:	bl	11010 <__errno_location@plt>
   11c48:	ldr	r1, [r0]
   11c4c:	movw	r0, #59736	; 0xe958
   11c50:	movt	r0, #1
   11c54:	str	r1, [sp, #12]
   11c58:	bl	10fe0 <gettext@plt>
   11c5c:	movw	r1, #1
   11c60:	str	r0, [sp, #8]
   11c64:	mov	r0, r1
   11c68:	ldr	r1, [sp, #12]
   11c6c:	ldr	r2, [sp, #8]
   11c70:	bl	10f80 <error@plt>
   11c74:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   11c78:	tst	r0, #1
   11c7c:	bne	11ca4 <__assert_fail@plt+0xbbc>
   11c80:	movw	r0, #59748	; 0xe964
   11c84:	movt	r0, #1
   11c88:	bl	10fe0 <gettext@plt>
   11c8c:	movw	r1, #1
   11c90:	str	r0, [sp, #4]
   11c94:	mov	r0, r1
   11c98:	movw	r1, #0
   11c9c:	ldr	r2, [sp, #4]
   11ca0:	bl	10f80 <error@plt>
   11ca4:	b	11ca8 <__assert_fail@plt+0xbc0>
   11ca8:	ldr	r0, [sp, #52]	; 0x34
   11cac:	add	r0, r0, #1
   11cb0:	str	r0, [sp, #52]	; 0x34
   11cb4:	b	11b64 <__assert_fail@plt+0xa7c>
   11cb8:	b	11cbc <__assert_fail@plt+0xbd4>
   11cbc:	ldr	r0, [fp, #-4]
   11cc0:	bl	110dc <feof_unlocked@plt>
   11cc4:	cmp	r0, #0
   11cc8:	movw	r0, #0
   11ccc:	movne	r0, #1
   11cd0:	mvn	r1, #0
   11cd4:	eor	r0, r0, r1
   11cd8:	tst	r0, #1
   11cdc:	bne	119a8 <__assert_fail@plt+0x8c0>
   11ce0:	ldr	r0, [fp, #-4]
   11ce4:	ldr	r1, [fp, #-8]
   11ce8:	bl	11f38 <__assert_fail@plt+0xe50>
   11cec:	mov	sp, fp
   11cf0:	pop	{fp, pc}
   11cf4:	push	{fp, lr}
   11cf8:	mov	fp, sp
   11cfc:	sub	sp, sp, #72	; 0x48
   11d00:	str	r0, [fp, #-4]
   11d04:	str	r1, [fp, #-8]
   11d08:	str	r2, [fp, #-12]
   11d0c:	str	r3, [fp, #-16]
   11d10:	movw	r0, #0
   11d14:	str	r0, [fp, #-20]	; 0xffffffec
   11d18:	movw	r0, #30720	; 0x7800
   11d1c:	bl	186b8 <__assert_fail@plt+0x75d0>
   11d20:	str	r0, [fp, #-24]	; 0xffffffe8
   11d24:	movw	r0, #40960	; 0xa000
   11d28:	bl	186b8 <__assert_fail@plt+0x75d0>
   11d2c:	str	r0, [fp, #-28]	; 0xffffffe4
   11d30:	movw	r0, #0
   11d34:	str	r0, [fp, #-32]	; 0xffffffe0
   11d38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11d3c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11d40:	add	r0, r0, r1
   11d44:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11d48:	movw	r2, #30720	; 0x7800
   11d4c:	sub	r2, r2, r1
   11d50:	ldr	r3, [fp, #-4]
   11d54:	movw	r1, #1
   11d58:	bl	110ac <fread_unlocked@plt>
   11d5c:	str	r0, [sp, #36]	; 0x24
   11d60:	ldr	r0, [sp, #36]	; 0x24
   11d64:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11d68:	add	r0, r1, r0
   11d6c:	str	r0, [fp, #-32]	; 0xffffffe0
   11d70:	ldr	r0, [fp, #-4]
   11d74:	bl	110dc <feof_unlocked@plt>
   11d78:	cmp	r0, #0
   11d7c:	movw	r0, #0
   11d80:	str	r0, [sp, #32]
   11d84:	bne	11db4 <__assert_fail@plt+0xccc>
   11d88:	ldr	r0, [fp, #-4]
   11d8c:	bl	10f68 <ferror_unlocked@plt>
   11d90:	cmp	r0, #0
   11d94:	movw	r0, #0
   11d98:	str	r0, [sp, #32]
   11d9c:	bne	11db4 <__assert_fail@plt+0xccc>
   11da0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11da4:	cmp	r0, #30720	; 0x7800
   11da8:	movw	r0, #0
   11dac:	movlt	r0, #1
   11db0:	str	r0, [sp, #32]
   11db4:	ldr	r0, [sp, #32]
   11db8:	tst	r0, #1
   11dbc:	bne	11d38 <__assert_fail@plt+0xc50>
   11dc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11dc4:	cmp	r0, #0
   11dc8:	ble	11e34 <__assert_fail@plt+0xd4c>
   11dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11dd0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11dd4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11dd8:	add	r3, r1, #2
   11ddc:	movw	ip, #21846	; 0x5556
   11de0:	movt	ip, #21845	; 0x5555
   11de4:	smmul	r3, r3, ip
   11de8:	add	r3, r3, r3, lsr #31
   11dec:	lsl	r3, r3, #2
   11df0:	str	ip, [sp, #28]
   11df4:	bl	121d4 <__assert_fail@plt+0x10ec>
   11df8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11dfc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11e00:	add	r1, r1, #2
   11e04:	ldr	r2, [sp, #28]
   11e08:	smmul	r1, r1, r2
   11e0c:	add	r1, r1, r1, lsr #31
   11e10:	lsl	r1, r1, #2
   11e14:	ldr	r2, [fp, #-16]
   11e18:	ldr	r3, [fp, #-12]
   11e1c:	sub	ip, fp, #20
   11e20:	str	r3, [sp, #24]
   11e24:	mov	r3, ip
   11e28:	ldr	ip, [sp, #24]
   11e2c:	str	ip, [sp]
   11e30:	bl	11fec <__assert_fail@plt+0xf04>
   11e34:	b	11e38 <__assert_fail@plt+0xd50>
   11e38:	ldr	r0, [fp, #-4]
   11e3c:	bl	110dc <feof_unlocked@plt>
   11e40:	cmp	r0, #0
   11e44:	movw	r0, #0
   11e48:	str	r0, [sp, #20]
   11e4c:	bne	11e7c <__assert_fail@plt+0xd94>
   11e50:	ldr	r0, [fp, #-4]
   11e54:	bl	10f68 <ferror_unlocked@plt>
   11e58:	cmp	r0, #0
   11e5c:	movw	r0, #0
   11e60:	str	r0, [sp, #20]
   11e64:	bne	11e7c <__assert_fail@plt+0xd94>
   11e68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11e6c:	cmp	r0, #30720	; 0x7800
   11e70:	movw	r0, #0
   11e74:	moveq	r0, #1
   11e78:	str	r0, [sp, #20]
   11e7c:	ldr	r0, [sp, #20]
   11e80:	tst	r0, #1
   11e84:	bne	11d30 <__assert_fail@plt+0xc48>
   11e88:	ldr	r0, [fp, #-16]
   11e8c:	cmp	r0, #0
   11e90:	beq	11ee4 <__assert_fail@plt+0xdfc>
   11e94:	ldr	r0, [fp, #-20]	; 0xffffffec
   11e98:	cmp	r0, #0
   11e9c:	ble	11ee4 <__assert_fail@plt+0xdfc>
   11ea0:	ldr	r1, [fp, #-12]
   11ea4:	movw	r0, #10
   11ea8:	bl	10f14 <fputc_unlocked@plt>
   11eac:	cmn	r0, #1
   11eb0:	bne	11ee4 <__assert_fail@plt+0xdfc>
   11eb4:	bl	11010 <__errno_location@plt>
   11eb8:	ldr	r1, [r0]
   11ebc:	movw	r0, #59736	; 0xe958
   11ec0:	movt	r0, #1
   11ec4:	str	r1, [sp, #16]
   11ec8:	bl	10fe0 <gettext@plt>
   11ecc:	movw	r1, #1
   11ed0:	str	r0, [sp, #12]
   11ed4:	mov	r0, r1
   11ed8:	ldr	r1, [sp, #16]
   11edc:	ldr	r2, [sp, #12]
   11ee0:	bl	10f80 <error@plt>
   11ee4:	ldr	r0, [fp, #-4]
   11ee8:	bl	10f68 <ferror_unlocked@plt>
   11eec:	cmp	r0, #0
   11ef0:	beq	11f24 <__assert_fail@plt+0xe3c>
   11ef4:	bl	11010 <__errno_location@plt>
   11ef8:	ldr	r1, [r0]
   11efc:	movw	r0, #59725	; 0xe94d
   11f00:	movt	r0, #1
   11f04:	str	r1, [sp, #8]
   11f08:	bl	10fe0 <gettext@plt>
   11f0c:	movw	r1, #1
   11f10:	str	r0, [sp, #4]
   11f14:	mov	r0, r1
   11f18:	ldr	r1, [sp, #8]
   11f1c:	ldr	r2, [sp, #4]
   11f20:	bl	10f80 <error@plt>
   11f24:	ldr	r0, [fp, #-4]
   11f28:	ldr	r1, [fp, #-8]
   11f2c:	bl	11f38 <__assert_fail@plt+0xe50>
   11f30:	mov	sp, fp
   11f34:	pop	{fp, pc}
   11f38:	push	{fp, lr}
   11f3c:	mov	fp, sp
   11f40:	sub	sp, sp, #24
   11f44:	str	r0, [fp, #-4]
   11f48:	str	r1, [fp, #-8]
   11f4c:	ldr	r0, [fp, #-4]
   11f50:	bl	13e64 <__assert_fail@plt+0x2d7c>
   11f54:	cmp	r0, #0
   11f58:	beq	11fe4 <__assert_fail@plt+0xefc>
   11f5c:	ldr	r0, [fp, #-8]
   11f60:	movw	r1, #60341	; 0xebb5
   11f64:	movt	r1, #1
   11f68:	bl	10e90 <strcmp@plt>
   11f6c:	cmp	r0, #0
   11f70:	bne	11fa4 <__assert_fail@plt+0xebc>
   11f74:	bl	11010 <__errno_location@plt>
   11f78:	ldr	r1, [r0]
   11f7c:	movw	r0, #59762	; 0xe972
   11f80:	movt	r0, #1
   11f84:	str	r1, [sp, #12]
   11f88:	bl	10fe0 <gettext@plt>
   11f8c:	movw	r1, #1
   11f90:	str	r0, [sp, #8]
   11f94:	mov	r0, r1
   11f98:	ldr	r1, [sp, #12]
   11f9c:	ldr	r2, [sp, #8]
   11fa0:	bl	10f80 <error@plt>
   11fa4:	bl	11010 <__errno_location@plt>
   11fa8:	ldr	r1, [r0]
   11fac:	ldr	r2, [fp, #-8]
   11fb0:	movw	r0, #0
   11fb4:	movw	r3, #3
   11fb8:	str	r1, [sp, #4]
   11fbc:	mov	r1, r3
   11fc0:	bl	16730 <__assert_fail@plt+0x5648>
   11fc4:	movw	r1, #1
   11fc8:	str	r0, [sp]
   11fcc:	mov	r0, r1
   11fd0:	ldr	r1, [sp, #4]
   11fd4:	movw	r2, #59172	; 0xe724
   11fd8:	movt	r2, #1
   11fdc:	ldr	r3, [sp]
   11fe0:	bl	10f80 <error@plt>
   11fe4:	movw	r0, #0
   11fe8:	bl	10fd4 <exit@plt>
   11fec:	push	{fp, lr}
   11ff0:	mov	fp, sp
   11ff4:	sub	sp, sp, #56	; 0x38
   11ff8:	ldr	ip, [fp, #8]
   11ffc:	str	r0, [fp, #-4]
   12000:	str	r1, [fp, #-8]
   12004:	str	r2, [fp, #-12]
   12008:	str	r3, [fp, #-16]
   1200c:	ldr	r0, [fp, #-12]
   12010:	cmp	r0, #0
   12014:	bne	12074 <__assert_fail@plt+0xf8c>
   12018:	ldr	r0, [fp, #-4]
   1201c:	ldr	r2, [fp, #-8]
   12020:	movw	r1, #340	; 0x154
   12024:	movt	r1, #3
   12028:	ldr	r3, [r1]
   1202c:	movw	r1, #1
   12030:	bl	10efc <fwrite_unlocked@plt>
   12034:	ldr	r1, [fp, #-8]
   12038:	cmp	r0, r1
   1203c:	bcs	12070 <__assert_fail@plt+0xf88>
   12040:	bl	11010 <__errno_location@plt>
   12044:	ldr	r1, [r0]
   12048:	movw	r0, #59736	; 0xe958
   1204c:	movt	r0, #1
   12050:	str	r1, [sp, #28]
   12054:	bl	10fe0 <gettext@plt>
   12058:	movw	r1, #1
   1205c:	str	r0, [sp, #24]
   12060:	mov	r0, r1
   12064:	ldr	r1, [sp, #28]
   12068:	ldr	r2, [sp, #24]
   1206c:	bl	10f80 <error@plt>
   12070:	b	121cc <__assert_fail@plt+0x10e4>
   12074:	movw	r0, #0
   12078:	str	r0, [fp, #-20]	; 0xffffffec
   1207c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12080:	ldr	r1, [fp, #-8]
   12084:	cmp	r0, r1
   12088:	bge	121c8 <__assert_fail@plt+0x10e0>
   1208c:	ldr	r0, [fp, #-12]
   12090:	ldr	r1, [fp, #-16]
   12094:	ldr	r1, [r1]
   12098:	sub	r0, r0, r1
   1209c:	ldr	r1, [fp, #-8]
   120a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   120a4:	sub	r1, r1, r2
   120a8:	cmp	r0, r1
   120ac:	bge	120c8 <__assert_fail@plt+0xfe0>
   120b0:	ldr	r0, [fp, #-12]
   120b4:	ldr	r1, [fp, #-16]
   120b8:	ldr	r1, [r1]
   120bc:	sub	r0, r0, r1
   120c0:	str	r0, [sp, #20]
   120c4:	b	120d8 <__assert_fail@plt+0xff0>
   120c8:	ldr	r0, [fp, #-8]
   120cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   120d0:	sub	r0, r0, r1
   120d4:	str	r0, [sp, #20]
   120d8:	ldr	r0, [sp, #20]
   120dc:	str	r0, [fp, #-24]	; 0xffffffe8
   120e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   120e4:	cmp	r0, #0
   120e8:	bne	12140 <__assert_fail@plt+0x1058>
   120ec:	ldr	r1, [fp, #8]
   120f0:	movw	r0, #10
   120f4:	bl	10f14 <fputc_unlocked@plt>
   120f8:	cmn	r0, #1
   120fc:	bne	12130 <__assert_fail@plt+0x1048>
   12100:	bl	11010 <__errno_location@plt>
   12104:	ldr	r1, [r0]
   12108:	movw	r0, #59736	; 0xe958
   1210c:	movt	r0, #1
   12110:	str	r1, [sp, #16]
   12114:	bl	10fe0 <gettext@plt>
   12118:	movw	r1, #1
   1211c:	str	r0, [sp, #12]
   12120:	mov	r0, r1
   12124:	ldr	r1, [sp, #16]
   12128:	ldr	r2, [sp, #12]
   1212c:	bl	10f80 <error@plt>
   12130:	ldr	r0, [fp, #-16]
   12134:	movw	r1, #0
   12138:	str	r1, [r0]
   1213c:	b	121c4 <__assert_fail@plt+0x10dc>
   12140:	ldr	r0, [fp, #-4]
   12144:	ldr	r1, [fp, #-20]	; 0xffffffec
   12148:	add	r0, r0, r1
   1214c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12150:	movw	r1, #340	; 0x154
   12154:	movt	r1, #3
   12158:	ldr	r3, [r1]
   1215c:	movw	r1, #1
   12160:	bl	10efc <fwrite_unlocked@plt>
   12164:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12168:	cmp	r0, r1
   1216c:	bcs	121a0 <__assert_fail@plt+0x10b8>
   12170:	bl	11010 <__errno_location@plt>
   12174:	ldr	r1, [r0]
   12178:	movw	r0, #59736	; 0xe958
   1217c:	movt	r0, #1
   12180:	str	r1, [sp, #8]
   12184:	bl	10fe0 <gettext@plt>
   12188:	movw	r1, #1
   1218c:	str	r0, [sp, #4]
   12190:	mov	r0, r1
   12194:	ldr	r1, [sp, #8]
   12198:	ldr	r2, [sp, #4]
   1219c:	bl	10f80 <error@plt>
   121a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   121a4:	ldr	r1, [fp, #-16]
   121a8:	ldr	r2, [r1]
   121ac:	add	r0, r2, r0
   121b0:	str	r0, [r1]
   121b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   121b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   121bc:	add	r0, r1, r0
   121c0:	str	r0, [fp, #-20]	; 0xffffffec
   121c4:	b	1207c <__assert_fail@plt+0xf94>
   121c8:	b	121cc <__assert_fail@plt+0x10e4>
   121cc:	mov	sp, fp
   121d0:	pop	{fp, pc}
   121d4:	push	{fp, lr}
   121d8:	mov	fp, sp
   121dc:	sub	sp, sp, #48	; 0x30
   121e0:	str	r0, [fp, #-4]
   121e4:	str	r1, [fp, #-8]
   121e8:	str	r2, [fp, #-12]
   121ec:	str	r3, [fp, #-16]
   121f0:	ldr	r0, [fp, #-16]
   121f4:	asr	r1, r0, #31
   121f8:	add	r1, r0, r1, lsr #30
   121fc:	bic	r1, r1, #3
   12200:	sub	r0, r0, r1
   12204:	cmp	r0, #0
   12208:	bne	1223c <__assert_fail@plt+0x1154>
   1220c:	ldr	r0, [fp, #-8]
   12210:	ldr	r1, [fp, #-16]
   12214:	asr	r1, r1, #2
   12218:	movw	r2, #3
   1221c:	mul	r1, r1, r2
   12220:	cmp	r0, r1
   12224:	bne	1223c <__assert_fail@plt+0x1154>
   12228:	ldr	r0, [fp, #-4]
   1222c:	ldr	r1, [fp, #-8]
   12230:	ldr	r2, [fp, #-12]
   12234:	bl	12500 <__assert_fail@plt+0x1418>
   12238:	b	124f8 <__assert_fail@plt+0x1410>
   1223c:	b	12240 <__assert_fail@plt+0x1158>
   12240:	ldr	r0, [fp, #-8]
   12244:	cmp	r0, #0
   12248:	movw	r0, #0
   1224c:	str	r0, [fp, #-20]	; 0xffffffec
   12250:	beq	12268 <__assert_fail@plt+0x1180>
   12254:	ldr	r0, [fp, #-16]
   12258:	cmp	r0, #0
   1225c:	movw	r0, #0
   12260:	movne	r0, #1
   12264:	str	r0, [fp, #-20]	; 0xffffffec
   12268:	ldr	r0, [fp, #-20]	; 0xffffffec
   1226c:	tst	r0, #1
   12270:	beq	124e0 <__assert_fail@plt+0x13f8>
   12274:	ldr	r0, [fp, #-4]
   12278:	ldrb	r0, [r0]
   1227c:	bl	1266c <__assert_fail@plt+0x1584>
   12280:	and	r0, r0, #255	; 0xff
   12284:	asr	r0, r0, #2
   12288:	and	r0, r0, #63	; 0x3f
   1228c:	movw	r1, #59955	; 0xea33
   12290:	movt	r1, #1
   12294:	add	r0, r1, r0
   12298:	ldrb	r0, [r0]
   1229c:	ldr	r1, [fp, #-12]
   122a0:	add	r2, r1, #1
   122a4:	str	r2, [fp, #-12]
   122a8:	strb	r0, [r1]
   122ac:	ldr	r0, [fp, #-16]
   122b0:	mvn	r1, #0
   122b4:	add	r0, r0, r1
   122b8:	str	r0, [fp, #-16]
   122bc:	cmp	r0, #0
   122c0:	bne	122c8 <__assert_fail@plt+0x11e0>
   122c4:	b	124e0 <__assert_fail@plt+0x13f8>
   122c8:	ldr	r0, [fp, #-4]
   122cc:	ldrb	r0, [r0]
   122d0:	bl	1266c <__assert_fail@plt+0x1584>
   122d4:	and	r0, r0, #255	; 0xff
   122d8:	lsl	r0, r0, #4
   122dc:	ldr	r1, [fp, #-8]
   122e0:	mvn	r2, #0
   122e4:	add	r1, r1, r2
   122e8:	str	r1, [fp, #-8]
   122ec:	cmp	r1, #0
   122f0:	str	r0, [sp, #24]
   122f4:	beq	12314 <__assert_fail@plt+0x122c>
   122f8:	ldr	r0, [fp, #-4]
   122fc:	ldrb	r0, [r0, #1]
   12300:	bl	1266c <__assert_fail@plt+0x1584>
   12304:	and	r0, r0, #255	; 0xff
   12308:	asr	r0, r0, #4
   1230c:	str	r0, [sp, #20]
   12310:	b	12320 <__assert_fail@plt+0x1238>
   12314:	movw	r0, #0
   12318:	str	r0, [sp, #20]
   1231c:	b	12320 <__assert_fail@plt+0x1238>
   12320:	ldr	r0, [sp, #20]
   12324:	ldr	r1, [sp, #24]
   12328:	add	r0, r1, r0
   1232c:	and	r0, r0, #63	; 0x3f
   12330:	movw	r2, #59955	; 0xea33
   12334:	movt	r2, #1
   12338:	add	r0, r2, r0
   1233c:	ldrb	r0, [r0]
   12340:	ldr	r2, [fp, #-12]
   12344:	add	r3, r2, #1
   12348:	str	r3, [fp, #-12]
   1234c:	strb	r0, [r2]
   12350:	ldr	r0, [fp, #-16]
   12354:	mvn	r2, #0
   12358:	add	r0, r0, r2
   1235c:	str	r0, [fp, #-16]
   12360:	cmp	r0, #0
   12364:	bne	1236c <__assert_fail@plt+0x1284>
   12368:	b	124e0 <__assert_fail@plt+0x13f8>
   1236c:	ldr	r0, [fp, #-8]
   12370:	cmp	r0, #0
   12374:	beq	123f8 <__assert_fail@plt+0x1310>
   12378:	ldr	r0, [fp, #-4]
   1237c:	ldrb	r0, [r0, #1]
   12380:	bl	1266c <__assert_fail@plt+0x1584>
   12384:	and	r0, r0, #255	; 0xff
   12388:	lsl	r0, r0, #2
   1238c:	ldr	r1, [fp, #-8]
   12390:	mvn	r2, #0
   12394:	add	r1, r1, r2
   12398:	str	r1, [fp, #-8]
   1239c:	cmp	r1, #0
   123a0:	str	r0, [sp, #16]
   123a4:	beq	123c4 <__assert_fail@plt+0x12dc>
   123a8:	ldr	r0, [fp, #-4]
   123ac:	ldrb	r0, [r0, #2]
   123b0:	bl	1266c <__assert_fail@plt+0x1584>
   123b4:	and	r0, r0, #255	; 0xff
   123b8:	asr	r0, r0, #6
   123bc:	str	r0, [sp, #12]
   123c0:	b	123d0 <__assert_fail@plt+0x12e8>
   123c4:	movw	r0, #0
   123c8:	str	r0, [sp, #12]
   123cc:	b	123d0 <__assert_fail@plt+0x12e8>
   123d0:	ldr	r0, [sp, #12]
   123d4:	ldr	r1, [sp, #16]
   123d8:	add	r0, r1, r0
   123dc:	and	r0, r0, #63	; 0x3f
   123e0:	movw	r2, #59955	; 0xea33
   123e4:	movt	r2, #1
   123e8:	add	r0, r2, r0
   123ec:	ldrb	r0, [r0]
   123f0:	str	r0, [sp, #8]
   123f4:	b	12404 <__assert_fail@plt+0x131c>
   123f8:	movw	r0, #61	; 0x3d
   123fc:	str	r0, [sp, #8]
   12400:	b	12404 <__assert_fail@plt+0x131c>
   12404:	ldr	r0, [sp, #8]
   12408:	ldr	r1, [fp, #-12]
   1240c:	add	r2, r1, #1
   12410:	str	r2, [fp, #-12]
   12414:	strb	r0, [r1]
   12418:	ldr	r0, [fp, #-16]
   1241c:	mvn	r1, #0
   12420:	add	r0, r0, r1
   12424:	str	r0, [fp, #-16]
   12428:	cmp	r0, #0
   1242c:	bne	12434 <__assert_fail@plt+0x134c>
   12430:	b	124e0 <__assert_fail@plt+0x13f8>
   12434:	ldr	r0, [fp, #-8]
   12438:	cmp	r0, #0
   1243c:	beq	1246c <__assert_fail@plt+0x1384>
   12440:	ldr	r0, [fp, #-4]
   12444:	ldrb	r0, [r0, #2]
   12448:	bl	1266c <__assert_fail@plt+0x1584>
   1244c:	and	r0, r0, #255	; 0xff
   12450:	and	r0, r0, #63	; 0x3f
   12454:	movw	r1, #59955	; 0xea33
   12458:	movt	r1, #1
   1245c:	add	r0, r1, r0
   12460:	ldrb	r0, [r0]
   12464:	str	r0, [sp, #4]
   12468:	b	12478 <__assert_fail@plt+0x1390>
   1246c:	movw	r0, #61	; 0x3d
   12470:	str	r0, [sp, #4]
   12474:	b	12478 <__assert_fail@plt+0x1390>
   12478:	ldr	r0, [sp, #4]
   1247c:	ldr	r1, [fp, #-12]
   12480:	add	r2, r1, #1
   12484:	str	r2, [fp, #-12]
   12488:	strb	r0, [r1]
   1248c:	ldr	r0, [fp, #-16]
   12490:	mvn	r1, #0
   12494:	add	r0, r0, r1
   12498:	str	r0, [fp, #-16]
   1249c:	cmp	r0, #0
   124a0:	bne	124a8 <__assert_fail@plt+0x13c0>
   124a4:	b	124e0 <__assert_fail@plt+0x13f8>
   124a8:	ldr	r0, [fp, #-8]
   124ac:	cmp	r0, #0
   124b0:	beq	124c4 <__assert_fail@plt+0x13dc>
   124b4:	ldr	r0, [fp, #-8]
   124b8:	mvn	r1, #0
   124bc:	add	r0, r0, r1
   124c0:	str	r0, [fp, #-8]
   124c4:	ldr	r0, [fp, #-8]
   124c8:	cmp	r0, #0
   124cc:	beq	124dc <__assert_fail@plt+0x13f4>
   124d0:	ldr	r0, [fp, #-4]
   124d4:	add	r0, r0, #3
   124d8:	str	r0, [fp, #-4]
   124dc:	b	12240 <__assert_fail@plt+0x1158>
   124e0:	ldr	r0, [fp, #-16]
   124e4:	cmp	r0, #0
   124e8:	beq	124f8 <__assert_fail@plt+0x1410>
   124ec:	ldr	r0, [fp, #-12]
   124f0:	movw	r1, #0
   124f4:	strb	r1, [r0]
   124f8:	mov	sp, fp
   124fc:	pop	{fp, pc}
   12500:	push	{fp, lr}
   12504:	mov	fp, sp
   12508:	sub	sp, sp, #24
   1250c:	str	r0, [fp, #-4]
   12510:	str	r1, [fp, #-8]
   12514:	str	r2, [sp, #12]
   12518:	ldr	r0, [fp, #-8]
   1251c:	cmp	r0, #0
   12520:	beq	12664 <__assert_fail@plt+0x157c>
   12524:	ldr	r0, [fp, #-4]
   12528:	ldrb	r0, [r0]
   1252c:	bl	1266c <__assert_fail@plt+0x1584>
   12530:	and	r0, r0, #255	; 0xff
   12534:	asr	r0, r0, #2
   12538:	and	r0, r0, #63	; 0x3f
   1253c:	movw	r1, #59955	; 0xea33
   12540:	movt	r1, #1
   12544:	add	r0, r1, r0
   12548:	ldrb	r0, [r0]
   1254c:	ldr	r1, [sp, #12]
   12550:	add	r2, r1, #1
   12554:	str	r2, [sp, #12]
   12558:	strb	r0, [r1]
   1255c:	ldr	r0, [fp, #-4]
   12560:	ldrb	r0, [r0]
   12564:	bl	1266c <__assert_fail@plt+0x1584>
   12568:	and	r0, r0, #255	; 0xff
   1256c:	lsl	r0, r0, #4
   12570:	ldr	r1, [fp, #-4]
   12574:	ldrb	r1, [r1, #1]
   12578:	str	r0, [sp, #8]
   1257c:	mov	r0, r1
   12580:	bl	1266c <__assert_fail@plt+0x1584>
   12584:	and	r0, r0, #255	; 0xff
   12588:	asr	r0, r0, #4
   1258c:	ldr	r1, [sp, #8]
   12590:	add	r0, r1, r0
   12594:	and	r0, r0, #63	; 0x3f
   12598:	movw	r1, #59955	; 0xea33
   1259c:	movt	r1, #1
   125a0:	add	r0, r1, r0
   125a4:	ldrb	r0, [r0]
   125a8:	ldr	r1, [sp, #12]
   125ac:	add	r2, r1, #1
   125b0:	str	r2, [sp, #12]
   125b4:	strb	r0, [r1]
   125b8:	ldr	r0, [fp, #-4]
   125bc:	ldrb	r0, [r0, #1]
   125c0:	bl	1266c <__assert_fail@plt+0x1584>
   125c4:	and	r0, r0, #255	; 0xff
   125c8:	lsl	r0, r0, #2
   125cc:	ldr	r1, [fp, #-4]
   125d0:	ldrb	r1, [r1, #2]
   125d4:	str	r0, [sp, #4]
   125d8:	mov	r0, r1
   125dc:	bl	1266c <__assert_fail@plt+0x1584>
   125e0:	and	r0, r0, #255	; 0xff
   125e4:	asr	r0, r0, #6
   125e8:	ldr	r1, [sp, #4]
   125ec:	add	r0, r1, r0
   125f0:	and	r0, r0, #63	; 0x3f
   125f4:	movw	r1, #59955	; 0xea33
   125f8:	movt	r1, #1
   125fc:	add	r0, r1, r0
   12600:	ldrb	r0, [r0]
   12604:	ldr	r1, [sp, #12]
   12608:	add	r2, r1, #1
   1260c:	str	r2, [sp, #12]
   12610:	strb	r0, [r1]
   12614:	ldr	r0, [fp, #-4]
   12618:	ldrb	r0, [r0, #2]
   1261c:	bl	1266c <__assert_fail@plt+0x1584>
   12620:	and	r0, r0, #255	; 0xff
   12624:	and	r0, r0, #63	; 0x3f
   12628:	movw	r1, #59955	; 0xea33
   1262c:	movt	r1, #1
   12630:	add	r0, r1, r0
   12634:	ldrb	r0, [r0]
   12638:	ldr	r1, [sp, #12]
   1263c:	add	r2, r1, #1
   12640:	str	r2, [sp, #12]
   12644:	strb	r0, [r1]
   12648:	ldr	r0, [fp, #-8]
   1264c:	sub	r0, r0, #3
   12650:	str	r0, [fp, #-8]
   12654:	ldr	r0, [fp, #-4]
   12658:	add	r0, r0, #3
   1265c:	str	r0, [fp, #-4]
   12660:	b	12518 <__assert_fail@plt+0x1430>
   12664:	mov	sp, fp
   12668:	pop	{fp, pc}
   1266c:	sub	sp, sp, #4
   12670:	strb	r0, [sp, #3]
   12674:	ldrb	r0, [sp, #3]
   12678:	add	sp, sp, #4
   1267c:	bx	lr
   12680:	push	{fp, lr}
   12684:	mov	fp, sp
   12688:	sub	sp, sp, #32
   1268c:	str	r0, [fp, #-8]
   12690:	str	r1, [fp, #-12]
   12694:	str	r2, [sp, #16]
   12698:	ldr	r0, [fp, #-12]
   1269c:	movw	r1, #21846	; 0x5556
   126a0:	movt	r1, #21845	; 0x5555
   126a4:	smmul	r1, r0, r1
   126a8:	add	r1, r1, r1, lsr #31
   126ac:	add	r2, r1, r1, lsl #1
   126b0:	sub	r0, r0, r2
   126b4:	cmp	r0, #0
   126b8:	movw	r0, #0
   126bc:	movne	r0, #1
   126c0:	and	r0, r0, #1
   126c4:	add	r0, r1, r0
   126c8:	str	r0, [sp, #12]
   126cc:	b	12938 <__assert_fail@plt+0x1850>
   126d0:	b	126d4 <__assert_fail@plt+0x15ec>
   126d4:	b	12780 <__assert_fail@plt+0x1698>
   126d8:	ldr	r0, [sp, #12]
   126dc:	cmp	r0, #0
   126e0:	bge	12714 <__assert_fail@plt+0x162c>
   126e4:	b	126e8 <__assert_fail@plt+0x1600>
   126e8:	ldr	r0, [sp, #12]
   126ec:	cmp	r0, #31
   126f0:	blt	127e0 <__assert_fail@plt+0x16f8>
   126f4:	b	127f4 <__assert_fail@plt+0x170c>
   126f8:	ldr	r0, [sp, #12]
   126fc:	mvn	r1, #0
   12700:	sub	r0, r1, r0
   12704:	mvn	r1, #30
   12708:	cmp	r1, r0
   1270c:	ble	127e0 <__assert_fail@plt+0x16f8>
   12710:	b	127f4 <__assert_fail@plt+0x170c>
   12714:	b	12718 <__assert_fail@plt+0x1630>
   12718:	b	1276c <__assert_fail@plt+0x1684>
   1271c:	b	1276c <__assert_fail@plt+0x1684>
   12720:	b	1276c <__assert_fail@plt+0x1684>
   12724:	b	12728 <__assert_fail@plt+0x1640>
   12728:	ldr	r0, [sp, #12]
   1272c:	mvn	r1, #127	; 0x7f
   12730:	add	r0, r0, r1
   12734:	movw	r1, #0
   12738:	cmp	r1, r0
   1273c:	blt	127e0 <__assert_fail@plt+0x16f8>
   12740:	b	127f4 <__assert_fail@plt+0x170c>
   12744:	ldr	r0, [sp, #12]
   12748:	movw	r1, #0
   1274c:	cmp	r1, r0
   12750:	bge	127f4 <__assert_fail@plt+0x170c>
   12754:	ldr	r0, [sp, #12]
   12758:	sub	r0, r0, #1
   1275c:	movw	r1, #127	; 0x7f
   12760:	cmp	r1, r0
   12764:	blt	127e0 <__assert_fail@plt+0x16f8>
   12768:	b	127f4 <__assert_fail@plt+0x170c>
   1276c:	ldr	r0, [sp, #12]
   12770:	mvn	r1, #31
   12774:	cmp	r1, r0
   12778:	blt	127e0 <__assert_fail@plt+0x16f8>
   1277c:	b	127f4 <__assert_fail@plt+0x170c>
   12780:	b	12788 <__assert_fail@plt+0x16a0>
   12784:	b	127f4 <__assert_fail@plt+0x170c>
   12788:	ldr	r0, [sp, #12]
   1278c:	cmp	r0, #0
   12790:	bge	127d0 <__assert_fail@plt+0x16e8>
   12794:	b	12798 <__assert_fail@plt+0x16b0>
   12798:	b	127b8 <__assert_fail@plt+0x16d0>
   1279c:	b	127b8 <__assert_fail@plt+0x16d0>
   127a0:	ldr	r0, [sp, #12]
   127a4:	cmn	r0, #1
   127a8:	bne	127b8 <__assert_fail@plt+0x16d0>
   127ac:	b	127b0 <__assert_fail@plt+0x16c8>
   127b0:	b	127f4 <__assert_fail@plt+0x170c>
   127b4:	b	127f4 <__assert_fail@plt+0x170c>
   127b8:	ldr	r0, [sp, #12]
   127bc:	mvn	r1, #127	; 0x7f
   127c0:	sdiv	r0, r1, r0
   127c4:	cmp	r0, #4
   127c8:	blt	127e0 <__assert_fail@plt+0x16f8>
   127cc:	b	127f4 <__assert_fail@plt+0x170c>
   127d0:	ldr	r0, [sp, #12]
   127d4:	movw	r1, #31
   127d8:	cmp	r1, r0
   127dc:	bge	127f4 <__assert_fail@plt+0x170c>
   127e0:	ldr	r0, [sp, #12]
   127e4:	lsl	r0, r0, #2
   127e8:	sxtb	r0, r0
   127ec:	str	r0, [sp, #8]
   127f0:	b	132b0 <__assert_fail@plt+0x21c8>
   127f4:	ldr	r0, [sp, #12]
   127f8:	lsl	r0, r0, #2
   127fc:	sxtb	r0, r0
   12800:	str	r0, [sp, #8]
   12804:	b	132a4 <__assert_fail@plt+0x21bc>
   12808:	b	128b0 <__assert_fail@plt+0x17c8>
   1280c:	ldr	r0, [sp, #12]
   12810:	cmp	r0, #0
   12814:	bge	12848 <__assert_fail@plt+0x1760>
   12818:	b	1281c <__assert_fail@plt+0x1734>
   1281c:	ldr	r0, [sp, #12]
   12820:	cmp	r0, #63	; 0x3f
   12824:	blt	12910 <__assert_fail@plt+0x1828>
   12828:	b	12924 <__assert_fail@plt+0x183c>
   1282c:	ldr	r0, [sp, #12]
   12830:	mvn	r1, #0
   12834:	sub	r0, r1, r0
   12838:	mvn	r1, #62	; 0x3e
   1283c:	cmp	r1, r0
   12840:	ble	12910 <__assert_fail@plt+0x1828>
   12844:	b	12924 <__assert_fail@plt+0x183c>
   12848:	b	1284c <__assert_fail@plt+0x1764>
   1284c:	b	1289c <__assert_fail@plt+0x17b4>
   12850:	b	1289c <__assert_fail@plt+0x17b4>
   12854:	b	1289c <__assert_fail@plt+0x17b4>
   12858:	b	1285c <__assert_fail@plt+0x1774>
   1285c:	ldr	r0, [sp, #12]
   12860:	add	r0, r0, #0
   12864:	movw	r1, #0
   12868:	cmp	r1, r0
   1286c:	blt	12910 <__assert_fail@plt+0x1828>
   12870:	b	12924 <__assert_fail@plt+0x183c>
   12874:	ldr	r0, [sp, #12]
   12878:	movw	r1, #0
   1287c:	cmp	r1, r0
   12880:	bge	12924 <__assert_fail@plt+0x183c>
   12884:	ldr	r0, [sp, #12]
   12888:	sub	r0, r0, #1
   1288c:	mvn	r1, #0
   12890:	cmp	r1, r0
   12894:	blt	12910 <__assert_fail@plt+0x1828>
   12898:	b	12924 <__assert_fail@plt+0x183c>
   1289c:	ldr	r0, [sp, #12]
   128a0:	movw	r1, #0
   128a4:	cmp	r1, r0
   128a8:	blt	12910 <__assert_fail@plt+0x1828>
   128ac:	b	12924 <__assert_fail@plt+0x183c>
   128b0:	b	128b8 <__assert_fail@plt+0x17d0>
   128b4:	b	12924 <__assert_fail@plt+0x183c>
   128b8:	ldr	r0, [sp, #12]
   128bc:	cmp	r0, #0
   128c0:	bge	12900 <__assert_fail@plt+0x1818>
   128c4:	b	128c8 <__assert_fail@plt+0x17e0>
   128c8:	b	128e8 <__assert_fail@plt+0x1800>
   128cc:	b	128e8 <__assert_fail@plt+0x1800>
   128d0:	ldr	r0, [sp, #12]
   128d4:	cmn	r0, #1
   128d8:	bne	128e8 <__assert_fail@plt+0x1800>
   128dc:	b	128e0 <__assert_fail@plt+0x17f8>
   128e0:	b	12910 <__assert_fail@plt+0x1828>
   128e4:	b	12910 <__assert_fail@plt+0x1828>
   128e8:	ldr	r0, [sp, #12]
   128ec:	movw	r1, #0
   128f0:	sdiv	r0, r1, r0
   128f4:	cmp	r0, #4
   128f8:	blt	12910 <__assert_fail@plt+0x1828>
   128fc:	b	12924 <__assert_fail@plt+0x183c>
   12900:	ldr	r0, [sp, #12]
   12904:	movw	r1, #63	; 0x3f
   12908:	cmp	r1, r0
   1290c:	bge	12924 <__assert_fail@plt+0x183c>
   12910:	ldr	r0, [sp, #12]
   12914:	lsl	r0, r0, #2
   12918:	and	r0, r0, #255	; 0xff
   1291c:	str	r0, [sp, #8]
   12920:	b	132b0 <__assert_fail@plt+0x21c8>
   12924:	ldr	r0, [sp, #12]
   12928:	lsl	r0, r0, #2
   1292c:	and	r0, r0, #255	; 0xff
   12930:	str	r0, [sp, #8]
   12934:	b	132a4 <__assert_fail@plt+0x21bc>
   12938:	b	12bac <__assert_fail@plt+0x1ac4>
   1293c:	b	12940 <__assert_fail@plt+0x1858>
   12940:	b	129f0 <__assert_fail@plt+0x1908>
   12944:	ldr	r0, [sp, #12]
   12948:	cmp	r0, #0
   1294c:	bge	12984 <__assert_fail@plt+0x189c>
   12950:	b	12954 <__assert_fail@plt+0x186c>
   12954:	ldr	r0, [sp, #12]
   12958:	movw	r1, #8191	; 0x1fff
   1295c:	cmp	r0, r1
   12960:	blt	12a50 <__assert_fail@plt+0x1968>
   12964:	b	12a64 <__assert_fail@plt+0x197c>
   12968:	ldr	r0, [pc, #2528]	; 13350 <__assert_fail@plt+0x2268>
   1296c:	ldr	r1, [sp, #12]
   12970:	mvn	r2, #0
   12974:	sub	r1, r2, r1
   12978:	cmp	r0, r1
   1297c:	ble	12a50 <__assert_fail@plt+0x1968>
   12980:	b	12a64 <__assert_fail@plt+0x197c>
   12984:	b	12988 <__assert_fail@plt+0x18a0>
   12988:	b	129dc <__assert_fail@plt+0x18f4>
   1298c:	b	129dc <__assert_fail@plt+0x18f4>
   12990:	b	129dc <__assert_fail@plt+0x18f4>
   12994:	b	12998 <__assert_fail@plt+0x18b0>
   12998:	ldr	r0, [pc, #2472]	; 13348 <__assert_fail@plt+0x2260>
   1299c:	ldr	r1, [sp, #12]
   129a0:	add	r0, r1, r0
   129a4:	movw	r1, #0
   129a8:	cmp	r1, r0
   129ac:	blt	12a50 <__assert_fail@plt+0x1968>
   129b0:	b	12a64 <__assert_fail@plt+0x197c>
   129b4:	ldr	r0, [sp, #12]
   129b8:	movw	r1, #0
   129bc:	cmp	r1, r0
   129c0:	bge	12a64 <__assert_fail@plt+0x197c>
   129c4:	ldr	r0, [sp, #12]
   129c8:	sub	r0, r0, #1
   129cc:	movw	r1, #32767	; 0x7fff
   129d0:	cmp	r1, r0
   129d4:	blt	12a50 <__assert_fail@plt+0x1968>
   129d8:	b	12a64 <__assert_fail@plt+0x197c>
   129dc:	ldr	r0, [pc, #2408]	; 1334c <__assert_fail@plt+0x2264>
   129e0:	ldr	r1, [sp, #12]
   129e4:	cmp	r0, r1
   129e8:	blt	12a50 <__assert_fail@plt+0x1968>
   129ec:	b	12a64 <__assert_fail@plt+0x197c>
   129f0:	b	129f8 <__assert_fail@plt+0x1910>
   129f4:	b	12a64 <__assert_fail@plt+0x197c>
   129f8:	ldr	r0, [sp, #12]
   129fc:	cmp	r0, #0
   12a00:	bge	12a40 <__assert_fail@plt+0x1958>
   12a04:	b	12a08 <__assert_fail@plt+0x1920>
   12a08:	b	12a28 <__assert_fail@plt+0x1940>
   12a0c:	b	12a28 <__assert_fail@plt+0x1940>
   12a10:	ldr	r0, [sp, #12]
   12a14:	cmn	r0, #1
   12a18:	bne	12a28 <__assert_fail@plt+0x1940>
   12a1c:	b	12a20 <__assert_fail@plt+0x1938>
   12a20:	b	12a64 <__assert_fail@plt+0x197c>
   12a24:	b	12a64 <__assert_fail@plt+0x197c>
   12a28:	ldr	r0, [pc, #2328]	; 13348 <__assert_fail@plt+0x2260>
   12a2c:	ldr	r1, [sp, #12]
   12a30:	sdiv	r0, r0, r1
   12a34:	cmp	r0, #4
   12a38:	blt	12a50 <__assert_fail@plt+0x1968>
   12a3c:	b	12a64 <__assert_fail@plt+0x197c>
   12a40:	ldr	r0, [sp, #12]
   12a44:	movw	r1, #8191	; 0x1fff
   12a48:	cmp	r1, r0
   12a4c:	bge	12a64 <__assert_fail@plt+0x197c>
   12a50:	ldr	r0, [sp, #12]
   12a54:	lsl	r0, r0, #2
   12a58:	sxth	r0, r0
   12a5c:	str	r0, [sp, #8]
   12a60:	b	132b0 <__assert_fail@plt+0x21c8>
   12a64:	ldr	r0, [sp, #12]
   12a68:	lsl	r0, r0, #2
   12a6c:	sxth	r0, r0
   12a70:	str	r0, [sp, #8]
   12a74:	b	132a4 <__assert_fail@plt+0x21bc>
   12a78:	b	12b24 <__assert_fail@plt+0x1a3c>
   12a7c:	ldr	r0, [sp, #12]
   12a80:	cmp	r0, #0
   12a84:	bge	12abc <__assert_fail@plt+0x19d4>
   12a88:	b	12a8c <__assert_fail@plt+0x19a4>
   12a8c:	ldr	r0, [sp, #12]
   12a90:	movw	r1, #16383	; 0x3fff
   12a94:	cmp	r0, r1
   12a98:	blt	12b84 <__assert_fail@plt+0x1a9c>
   12a9c:	b	12b98 <__assert_fail@plt+0x1ab0>
   12aa0:	ldr	r0, [pc, #2220]	; 13354 <__assert_fail@plt+0x226c>
   12aa4:	ldr	r1, [sp, #12]
   12aa8:	mvn	r2, #0
   12aac:	sub	r1, r2, r1
   12ab0:	cmp	r0, r1
   12ab4:	ble	12b84 <__assert_fail@plt+0x1a9c>
   12ab8:	b	12b98 <__assert_fail@plt+0x1ab0>
   12abc:	b	12ac0 <__assert_fail@plt+0x19d8>
   12ac0:	b	12b10 <__assert_fail@plt+0x1a28>
   12ac4:	b	12b10 <__assert_fail@plt+0x1a28>
   12ac8:	b	12b10 <__assert_fail@plt+0x1a28>
   12acc:	b	12ad0 <__assert_fail@plt+0x19e8>
   12ad0:	ldr	r0, [sp, #12]
   12ad4:	add	r0, r0, #0
   12ad8:	movw	r1, #0
   12adc:	cmp	r1, r0
   12ae0:	blt	12b84 <__assert_fail@plt+0x1a9c>
   12ae4:	b	12b98 <__assert_fail@plt+0x1ab0>
   12ae8:	ldr	r0, [sp, #12]
   12aec:	movw	r1, #0
   12af0:	cmp	r1, r0
   12af4:	bge	12b98 <__assert_fail@plt+0x1ab0>
   12af8:	ldr	r0, [sp, #12]
   12afc:	sub	r0, r0, #1
   12b00:	mvn	r1, #0
   12b04:	cmp	r1, r0
   12b08:	blt	12b84 <__assert_fail@plt+0x1a9c>
   12b0c:	b	12b98 <__assert_fail@plt+0x1ab0>
   12b10:	ldr	r0, [sp, #12]
   12b14:	movw	r1, #0
   12b18:	cmp	r1, r0
   12b1c:	blt	12b84 <__assert_fail@plt+0x1a9c>
   12b20:	b	12b98 <__assert_fail@plt+0x1ab0>
   12b24:	b	12b2c <__assert_fail@plt+0x1a44>
   12b28:	b	12b98 <__assert_fail@plt+0x1ab0>
   12b2c:	ldr	r0, [sp, #12]
   12b30:	cmp	r0, #0
   12b34:	bge	12b74 <__assert_fail@plt+0x1a8c>
   12b38:	b	12b3c <__assert_fail@plt+0x1a54>
   12b3c:	b	12b5c <__assert_fail@plt+0x1a74>
   12b40:	b	12b5c <__assert_fail@plt+0x1a74>
   12b44:	ldr	r0, [sp, #12]
   12b48:	cmn	r0, #1
   12b4c:	bne	12b5c <__assert_fail@plt+0x1a74>
   12b50:	b	12b54 <__assert_fail@plt+0x1a6c>
   12b54:	b	12b84 <__assert_fail@plt+0x1a9c>
   12b58:	b	12b84 <__assert_fail@plt+0x1a9c>
   12b5c:	ldr	r0, [sp, #12]
   12b60:	movw	r1, #0
   12b64:	sdiv	r0, r1, r0
   12b68:	cmp	r0, #4
   12b6c:	blt	12b84 <__assert_fail@plt+0x1a9c>
   12b70:	b	12b98 <__assert_fail@plt+0x1ab0>
   12b74:	ldr	r0, [sp, #12]
   12b78:	movw	r1, #16383	; 0x3fff
   12b7c:	cmp	r1, r0
   12b80:	bge	12b98 <__assert_fail@plt+0x1ab0>
   12b84:	ldr	r0, [sp, #12]
   12b88:	lsl	r0, r0, #2
   12b8c:	uxth	r0, r0
   12b90:	str	r0, [sp, #8]
   12b94:	b	132b0 <__assert_fail@plt+0x21c8>
   12b98:	ldr	r0, [sp, #12]
   12b9c:	lsl	r0, r0, #2
   12ba0:	uxth	r0, r0
   12ba4:	str	r0, [sp, #8]
   12ba8:	b	132a4 <__assert_fail@plt+0x21bc>
   12bac:	b	12bb0 <__assert_fail@plt+0x1ac8>
   12bb0:	b	12bb4 <__assert_fail@plt+0x1acc>
   12bb4:	b	12c54 <__assert_fail@plt+0x1b6c>
   12bb8:	ldr	r0, [sp, #12]
   12bbc:	cmp	r0, #0
   12bc0:	bge	12bf8 <__assert_fail@plt+0x1b10>
   12bc4:	b	12bc8 <__assert_fail@plt+0x1ae0>
   12bc8:	ldr	r0, [pc, #1892]	; 13334 <__assert_fail@plt+0x224c>
   12bcc:	ldr	r1, [sp, #12]
   12bd0:	cmp	r1, r0
   12bd4:	blt	12ca8 <__assert_fail@plt+0x1bc0>
   12bd8:	b	12cb8 <__assert_fail@plt+0x1bd0>
   12bdc:	ldr	r0, [pc, #1888]	; 13344 <__assert_fail@plt+0x225c>
   12be0:	ldr	r1, [sp, #12]
   12be4:	mvn	r2, #0
   12be8:	sub	r1, r2, r1
   12bec:	cmp	r0, r1
   12bf0:	ble	12ca8 <__assert_fail@plt+0x1bc0>
   12bf4:	b	12cb8 <__assert_fail@plt+0x1bd0>
   12bf8:	b	12c40 <__assert_fail@plt+0x1b58>
   12bfc:	b	12c00 <__assert_fail@plt+0x1b18>
   12c00:	ldr	r0, [sp, #12]
   12c04:	add	r0, r0, #-2147483648	; 0x80000000
   12c08:	movw	r1, #0
   12c0c:	cmp	r1, r0
   12c10:	blt	12ca8 <__assert_fail@plt+0x1bc0>
   12c14:	b	12cb8 <__assert_fail@plt+0x1bd0>
   12c18:	ldr	r0, [sp, #12]
   12c1c:	movw	r1, #0
   12c20:	cmp	r1, r0
   12c24:	bge	12cb8 <__assert_fail@plt+0x1bd0>
   12c28:	ldr	r0, [pc, #1808]	; 13340 <__assert_fail@plt+0x2258>
   12c2c:	ldr	r1, [sp, #12]
   12c30:	sub	r1, r1, #1
   12c34:	cmp	r0, r1
   12c38:	blt	12ca8 <__assert_fail@plt+0x1bc0>
   12c3c:	b	12cb8 <__assert_fail@plt+0x1bd0>
   12c40:	ldr	r0, [pc, #1780]	; 1333c <__assert_fail@plt+0x2254>
   12c44:	ldr	r1, [sp, #12]
   12c48:	cmp	r0, r1
   12c4c:	blt	12ca8 <__assert_fail@plt+0x1bc0>
   12c50:	b	12cb8 <__assert_fail@plt+0x1bd0>
   12c54:	b	12c5c <__assert_fail@plt+0x1b74>
   12c58:	b	12cb8 <__assert_fail@plt+0x1bd0>
   12c5c:	ldr	r0, [sp, #12]
   12c60:	cmp	r0, #0
   12c64:	bge	12c98 <__assert_fail@plt+0x1bb0>
   12c68:	ldr	r0, [sp, #12]
   12c6c:	cmn	r0, #1
   12c70:	bne	12c80 <__assert_fail@plt+0x1b98>
   12c74:	b	12c78 <__assert_fail@plt+0x1b90>
   12c78:	b	12cb8 <__assert_fail@plt+0x1bd0>
   12c7c:	b	12cb8 <__assert_fail@plt+0x1bd0>
   12c80:	ldr	r0, [pc, #1712]	; 13338 <__assert_fail@plt+0x2250>
   12c84:	ldr	r1, [sp, #12]
   12c88:	sdiv	r0, r0, r1
   12c8c:	cmp	r0, #4
   12c90:	blt	12ca8 <__assert_fail@plt+0x1bc0>
   12c94:	b	12cb8 <__assert_fail@plt+0x1bd0>
   12c98:	ldr	r0, [pc, #1684]	; 13334 <__assert_fail@plt+0x224c>
   12c9c:	ldr	r1, [sp, #12]
   12ca0:	cmp	r0, r1
   12ca4:	bge	12cb8 <__assert_fail@plt+0x1bd0>
   12ca8:	ldr	r0, [sp, #12]
   12cac:	lsl	r0, r0, #2
   12cb0:	str	r0, [sp, #8]
   12cb4:	b	132b0 <__assert_fail@plt+0x21c8>
   12cb8:	ldr	r0, [sp, #12]
   12cbc:	lsl	r0, r0, #2
   12cc0:	str	r0, [sp, #8]
   12cc4:	b	132a4 <__assert_fail@plt+0x21bc>
   12cc8:	b	12d74 <__assert_fail@plt+0x1c8c>
   12ccc:	ldr	r0, [sp, #12]
   12cd0:	cmp	r0, #0
   12cd4:	bge	12d0c <__assert_fail@plt+0x1c24>
   12cd8:	b	12cf0 <__assert_fail@plt+0x1c08>
   12cdc:	ldr	r0, [pc, #1612]	; 13330 <__assert_fail@plt+0x2248>
   12ce0:	ldr	r1, [sp, #12]
   12ce4:	cmp	r1, r0
   12ce8:	bcc	12dd4 <__assert_fail@plt+0x1cec>
   12cec:	b	12de4 <__assert_fail@plt+0x1cfc>
   12cf0:	ldr	r0, [sp, #12]
   12cf4:	mvn	r1, #0
   12cf8:	sub	r0, r1, r0
   12cfc:	movw	r1, #1
   12d00:	cmp	r1, r0
   12d04:	bls	12dd4 <__assert_fail@plt+0x1cec>
   12d08:	b	12de4 <__assert_fail@plt+0x1cfc>
   12d0c:	b	12d10 <__assert_fail@plt+0x1c28>
   12d10:	b	12d60 <__assert_fail@plt+0x1c78>
   12d14:	b	12d60 <__assert_fail@plt+0x1c78>
   12d18:	b	12d60 <__assert_fail@plt+0x1c78>
   12d1c:	b	12d20 <__assert_fail@plt+0x1c38>
   12d20:	ldr	r0, [sp, #12]
   12d24:	add	r0, r0, #0
   12d28:	movw	r1, #0
   12d2c:	cmp	r1, r0
   12d30:	blt	12dd4 <__assert_fail@plt+0x1cec>
   12d34:	b	12de4 <__assert_fail@plt+0x1cfc>
   12d38:	ldr	r0, [sp, #12]
   12d3c:	movw	r1, #0
   12d40:	cmp	r1, r0
   12d44:	bge	12de4 <__assert_fail@plt+0x1cfc>
   12d48:	ldr	r0, [sp, #12]
   12d4c:	sub	r0, r0, #1
   12d50:	mvn	r1, #0
   12d54:	cmp	r1, r0
   12d58:	blt	12dd4 <__assert_fail@plt+0x1cec>
   12d5c:	b	12de4 <__assert_fail@plt+0x1cfc>
   12d60:	ldr	r0, [sp, #12]
   12d64:	movw	r1, #0
   12d68:	cmp	r1, r0
   12d6c:	blt	12dd4 <__assert_fail@plt+0x1cec>
   12d70:	b	12de4 <__assert_fail@plt+0x1cfc>
   12d74:	b	12d7c <__assert_fail@plt+0x1c94>
   12d78:	b	12de4 <__assert_fail@plt+0x1cfc>
   12d7c:	ldr	r0, [sp, #12]
   12d80:	cmp	r0, #0
   12d84:	bge	12dc4 <__assert_fail@plt+0x1cdc>
   12d88:	b	12d8c <__assert_fail@plt+0x1ca4>
   12d8c:	b	12dac <__assert_fail@plt+0x1cc4>
   12d90:	b	12dac <__assert_fail@plt+0x1cc4>
   12d94:	ldr	r0, [sp, #12]
   12d98:	cmn	r0, #1
   12d9c:	bne	12dac <__assert_fail@plt+0x1cc4>
   12da0:	b	12da4 <__assert_fail@plt+0x1cbc>
   12da4:	b	12dd4 <__assert_fail@plt+0x1cec>
   12da8:	b	12dd4 <__assert_fail@plt+0x1cec>
   12dac:	ldr	r0, [sp, #12]
   12db0:	movw	r1, #0
   12db4:	sdiv	r0, r1, r0
   12db8:	cmp	r0, #4
   12dbc:	blt	12dd4 <__assert_fail@plt+0x1cec>
   12dc0:	b	12de4 <__assert_fail@plt+0x1cfc>
   12dc4:	ldr	r0, [pc, #1380]	; 13330 <__assert_fail@plt+0x2248>
   12dc8:	ldr	r1, [sp, #12]
   12dcc:	cmp	r0, r1
   12dd0:	bcs	12de4 <__assert_fail@plt+0x1cfc>
   12dd4:	ldr	r0, [sp, #12]
   12dd8:	lsl	r0, r0, #2
   12ddc:	str	r0, [sp, #8]
   12de0:	b	132b0 <__assert_fail@plt+0x21c8>
   12de4:	ldr	r0, [sp, #12]
   12de8:	lsl	r0, r0, #2
   12dec:	str	r0, [sp, #8]
   12df0:	b	132a4 <__assert_fail@plt+0x21bc>
   12df4:	b	12df8 <__assert_fail@plt+0x1d10>
   12df8:	b	12dfc <__assert_fail@plt+0x1d14>
   12dfc:	b	12e9c <__assert_fail@plt+0x1db4>
   12e00:	ldr	r0, [sp, #12]
   12e04:	cmp	r0, #0
   12e08:	bge	12e40 <__assert_fail@plt+0x1d58>
   12e0c:	b	12e10 <__assert_fail@plt+0x1d28>
   12e10:	ldr	r0, [pc, #1308]	; 13334 <__assert_fail@plt+0x224c>
   12e14:	ldr	r1, [sp, #12]
   12e18:	cmp	r1, r0
   12e1c:	blt	12ef0 <__assert_fail@plt+0x1e08>
   12e20:	b	12f00 <__assert_fail@plt+0x1e18>
   12e24:	ldr	r0, [pc, #1304]	; 13344 <__assert_fail@plt+0x225c>
   12e28:	ldr	r1, [sp, #12]
   12e2c:	mvn	r2, #0
   12e30:	sub	r1, r2, r1
   12e34:	cmp	r0, r1
   12e38:	ble	12ef0 <__assert_fail@plt+0x1e08>
   12e3c:	b	12f00 <__assert_fail@plt+0x1e18>
   12e40:	b	12e88 <__assert_fail@plt+0x1da0>
   12e44:	b	12e48 <__assert_fail@plt+0x1d60>
   12e48:	ldr	r0, [sp, #12]
   12e4c:	add	r0, r0, #-2147483648	; 0x80000000
   12e50:	movw	r1, #0
   12e54:	cmp	r1, r0
   12e58:	blt	12ef0 <__assert_fail@plt+0x1e08>
   12e5c:	b	12f00 <__assert_fail@plt+0x1e18>
   12e60:	ldr	r0, [sp, #12]
   12e64:	movw	r1, #0
   12e68:	cmp	r1, r0
   12e6c:	bge	12f00 <__assert_fail@plt+0x1e18>
   12e70:	ldr	r0, [pc, #1224]	; 13340 <__assert_fail@plt+0x2258>
   12e74:	ldr	r1, [sp, #12]
   12e78:	sub	r1, r1, #1
   12e7c:	cmp	r0, r1
   12e80:	blt	12ef0 <__assert_fail@plt+0x1e08>
   12e84:	b	12f00 <__assert_fail@plt+0x1e18>
   12e88:	ldr	r0, [pc, #1196]	; 1333c <__assert_fail@plt+0x2254>
   12e8c:	ldr	r1, [sp, #12]
   12e90:	cmp	r0, r1
   12e94:	blt	12ef0 <__assert_fail@plt+0x1e08>
   12e98:	b	12f00 <__assert_fail@plt+0x1e18>
   12e9c:	b	12ea4 <__assert_fail@plt+0x1dbc>
   12ea0:	b	12f00 <__assert_fail@plt+0x1e18>
   12ea4:	ldr	r0, [sp, #12]
   12ea8:	cmp	r0, #0
   12eac:	bge	12ee0 <__assert_fail@plt+0x1df8>
   12eb0:	ldr	r0, [sp, #12]
   12eb4:	cmn	r0, #1
   12eb8:	bne	12ec8 <__assert_fail@plt+0x1de0>
   12ebc:	b	12ec0 <__assert_fail@plt+0x1dd8>
   12ec0:	b	12f00 <__assert_fail@plt+0x1e18>
   12ec4:	b	12f00 <__assert_fail@plt+0x1e18>
   12ec8:	ldr	r0, [pc, #1128]	; 13338 <__assert_fail@plt+0x2250>
   12ecc:	ldr	r1, [sp, #12]
   12ed0:	sdiv	r0, r0, r1
   12ed4:	cmp	r0, #4
   12ed8:	blt	12ef0 <__assert_fail@plt+0x1e08>
   12edc:	b	12f00 <__assert_fail@plt+0x1e18>
   12ee0:	ldr	r0, [pc, #1100]	; 13334 <__assert_fail@plt+0x224c>
   12ee4:	ldr	r1, [sp, #12]
   12ee8:	cmp	r0, r1
   12eec:	bge	12f00 <__assert_fail@plt+0x1e18>
   12ef0:	ldr	r0, [sp, #12]
   12ef4:	lsl	r0, r0, #2
   12ef8:	str	r0, [sp, #8]
   12efc:	b	132b0 <__assert_fail@plt+0x21c8>
   12f00:	ldr	r0, [sp, #12]
   12f04:	lsl	r0, r0, #2
   12f08:	str	r0, [sp, #8]
   12f0c:	b	132a4 <__assert_fail@plt+0x21bc>
   12f10:	b	12fbc <__assert_fail@plt+0x1ed4>
   12f14:	ldr	r0, [sp, #12]
   12f18:	cmp	r0, #0
   12f1c:	bge	12f54 <__assert_fail@plt+0x1e6c>
   12f20:	b	12f38 <__assert_fail@plt+0x1e50>
   12f24:	ldr	r0, [pc, #1028]	; 13330 <__assert_fail@plt+0x2248>
   12f28:	ldr	r1, [sp, #12]
   12f2c:	cmp	r1, r0
   12f30:	bcc	1301c <__assert_fail@plt+0x1f34>
   12f34:	b	1302c <__assert_fail@plt+0x1f44>
   12f38:	ldr	r0, [sp, #12]
   12f3c:	mvn	r1, #0
   12f40:	sub	r0, r1, r0
   12f44:	movw	r1, #1
   12f48:	cmp	r1, r0
   12f4c:	bls	1301c <__assert_fail@plt+0x1f34>
   12f50:	b	1302c <__assert_fail@plt+0x1f44>
   12f54:	b	12f58 <__assert_fail@plt+0x1e70>
   12f58:	b	12fa8 <__assert_fail@plt+0x1ec0>
   12f5c:	b	12fa8 <__assert_fail@plt+0x1ec0>
   12f60:	b	12fa8 <__assert_fail@plt+0x1ec0>
   12f64:	b	12f68 <__assert_fail@plt+0x1e80>
   12f68:	ldr	r0, [sp, #12]
   12f6c:	add	r0, r0, #0
   12f70:	movw	r1, #0
   12f74:	cmp	r1, r0
   12f78:	blt	1301c <__assert_fail@plt+0x1f34>
   12f7c:	b	1302c <__assert_fail@plt+0x1f44>
   12f80:	ldr	r0, [sp, #12]
   12f84:	movw	r1, #0
   12f88:	cmp	r1, r0
   12f8c:	bge	1302c <__assert_fail@plt+0x1f44>
   12f90:	ldr	r0, [sp, #12]
   12f94:	sub	r0, r0, #1
   12f98:	mvn	r1, #0
   12f9c:	cmp	r1, r0
   12fa0:	blt	1301c <__assert_fail@plt+0x1f34>
   12fa4:	b	1302c <__assert_fail@plt+0x1f44>
   12fa8:	ldr	r0, [sp, #12]
   12fac:	movw	r1, #0
   12fb0:	cmp	r1, r0
   12fb4:	blt	1301c <__assert_fail@plt+0x1f34>
   12fb8:	b	1302c <__assert_fail@plt+0x1f44>
   12fbc:	b	12fc4 <__assert_fail@plt+0x1edc>
   12fc0:	b	1302c <__assert_fail@plt+0x1f44>
   12fc4:	ldr	r0, [sp, #12]
   12fc8:	cmp	r0, #0
   12fcc:	bge	1300c <__assert_fail@plt+0x1f24>
   12fd0:	b	12fd4 <__assert_fail@plt+0x1eec>
   12fd4:	b	12ff4 <__assert_fail@plt+0x1f0c>
   12fd8:	b	12ff4 <__assert_fail@plt+0x1f0c>
   12fdc:	ldr	r0, [sp, #12]
   12fe0:	cmn	r0, #1
   12fe4:	bne	12ff4 <__assert_fail@plt+0x1f0c>
   12fe8:	b	12fec <__assert_fail@plt+0x1f04>
   12fec:	b	1301c <__assert_fail@plt+0x1f34>
   12ff0:	b	1301c <__assert_fail@plt+0x1f34>
   12ff4:	ldr	r0, [sp, #12]
   12ff8:	movw	r1, #0
   12ffc:	sdiv	r0, r1, r0
   13000:	cmp	r0, #4
   13004:	blt	1301c <__assert_fail@plt+0x1f34>
   13008:	b	1302c <__assert_fail@plt+0x1f44>
   1300c:	ldr	r0, [pc, #796]	; 13330 <__assert_fail@plt+0x2248>
   13010:	ldr	r1, [sp, #12]
   13014:	cmp	r0, r1
   13018:	bcs	1302c <__assert_fail@plt+0x1f44>
   1301c:	ldr	r0, [sp, #12]
   13020:	lsl	r0, r0, #2
   13024:	str	r0, [sp, #8]
   13028:	b	132b0 <__assert_fail@plt+0x21c8>
   1302c:	ldr	r0, [sp, #12]
   13030:	lsl	r0, r0, #2
   13034:	str	r0, [sp, #8]
   13038:	b	132a4 <__assert_fail@plt+0x21bc>
   1303c:	b	13040 <__assert_fail@plt+0x1f58>
   13040:	b	130e8 <__assert_fail@plt+0x2000>
   13044:	ldr	r0, [sp, #12]
   13048:	cmp	r0, #0
   1304c:	bge	1308c <__assert_fail@plt+0x1fa4>
   13050:	b	13054 <__assert_fail@plt+0x1f6c>
   13054:	ldr	r0, [sp, #12]
   13058:	mvn	r1, #0
   1305c:	subs	r1, r0, r1
   13060:	mvn	r2, #-536870912	; 0xe0000000
   13064:	rscs	r0, r2, r0, asr #31
   13068:	blt	1315c <__assert_fail@plt+0x2074>
   1306c:	b	1316c <__assert_fail@plt+0x2084>
   13070:	ldr	r0, [sp, #12]
   13074:	mvn	r0, r0
   13078:	rsbs	r1, r0, #0
   1307c:	mov	r2, #-536870912	; 0xe0000000
   13080:	sbcs	r0, r2, r0, asr #31
   13084:	blt	1315c <__assert_fail@plt+0x2074>
   13088:	b	1316c <__assert_fail@plt+0x2084>
   1308c:	b	130d0 <__assert_fail@plt+0x1fe8>
   13090:	b	13094 <__assert_fail@plt+0x1fac>
   13094:	ldr	r0, [sp, #12]
   13098:	mov	r1, #-2147483648	; 0x80000000
   1309c:	add	r1, r1, r0, asr #31
   130a0:	rsbs	r0, r0, #0
   130a4:	rscs	r1, r1, #0
   130a8:	blt	1315c <__assert_fail@plt+0x2074>
   130ac:	b	1316c <__assert_fail@plt+0x2084>
   130b0:	ldr	r0, [sp, #12]
   130b4:	movw	r1, #0
   130b8:	cmp	r1, r0
   130bc:	bge	1316c <__assert_fail@plt+0x2084>
   130c0:	mov	r0, #0
   130c4:	cmp	r0, #0
   130c8:	bne	1315c <__assert_fail@plt+0x2074>
   130cc:	b	1316c <__assert_fail@plt+0x2084>
   130d0:	ldr	r0, [sp, #12]
   130d4:	rsbs	r1, r0, #0
   130d8:	mov	r2, #-536870912	; 0xe0000000
   130dc:	sbcs	r0, r2, r0, asr #31
   130e0:	blt	1315c <__assert_fail@plt+0x2074>
   130e4:	b	1316c <__assert_fail@plt+0x2084>
   130e8:	b	130f0 <__assert_fail@plt+0x2008>
   130ec:	b	1316c <__assert_fail@plt+0x2084>
   130f0:	ldr	r0, [sp, #12]
   130f4:	cmp	r0, #0
   130f8:	bge	13148 <__assert_fail@plt+0x2060>
   130fc:	ldr	r0, [sp, #12]
   13100:	cmn	r0, #1
   13104:	bne	13114 <__assert_fail@plt+0x202c>
   13108:	b	1310c <__assert_fail@plt+0x2024>
   1310c:	b	1316c <__assert_fail@plt+0x2084>
   13110:	b	1316c <__assert_fail@plt+0x2084>
   13114:	ldr	r0, [sp, #12]
   13118:	asr	r3, r0, #31
   1311c:	mov	r1, #0
   13120:	mov	r2, #-2147483648	; 0x80000000
   13124:	str	r0, [sp, #4]
   13128:	mov	r0, r1
   1312c:	mov	r1, r2
   13130:	ldr	r2, [sp, #4]
   13134:	bl	1e140 <__assert_fail@plt+0xd058>
   13138:	subs	r0, r0, #4
   1313c:	sbcs	r1, r1, #0
   13140:	blt	1315c <__assert_fail@plt+0x2074>
   13144:	b	1316c <__assert_fail@plt+0x2084>
   13148:	ldr	r0, [sp, #12]
   1314c:	asr	r0, r0, #31
   13150:	cmp	r0, #536870912	; 0x20000000
   13154:	blt	1316c <__assert_fail@plt+0x2084>
   13158:	b	1315c <__assert_fail@plt+0x2074>
   1315c:	ldr	r0, [sp, #12]
   13160:	lsl	r0, r0, #2
   13164:	str	r0, [sp, #8]
   13168:	b	132b0 <__assert_fail@plt+0x21c8>
   1316c:	ldr	r0, [sp, #12]
   13170:	lsl	r0, r0, #2
   13174:	str	r0, [sp, #8]
   13178:	b	132a4 <__assert_fail@plt+0x21bc>
   1317c:	b	13224 <__assert_fail@plt+0x213c>
   13180:	ldr	r0, [sp, #12]
   13184:	cmp	r0, #0
   13188:	bge	131bc <__assert_fail@plt+0x20d4>
   1318c:	b	131ac <__assert_fail@plt+0x20c4>
   13190:	ldr	r0, [sp, #12]
   13194:	mvn	r1, #0
   13198:	subs	r1, r0, r1
   1319c:	mvn	r2, #-1073741824	; 0xc0000000
   131a0:	rscs	r0, r2, r0, asr #31
   131a4:	bcc	13288 <__assert_fail@plt+0x21a0>
   131a8:	b	13298 <__assert_fail@plt+0x21b0>
   131ac:	ldr	r0, [sp, #12]
   131b0:	cmn	r0, #1
   131b4:	bne	13288 <__assert_fail@plt+0x21a0>
   131b8:	b	13298 <__assert_fail@plt+0x21b0>
   131bc:	b	131c0 <__assert_fail@plt+0x20d8>
   131c0:	b	13210 <__assert_fail@plt+0x2128>
   131c4:	b	13210 <__assert_fail@plt+0x2128>
   131c8:	b	13210 <__assert_fail@plt+0x2128>
   131cc:	b	131d0 <__assert_fail@plt+0x20e8>
   131d0:	ldr	r0, [sp, #12]
   131d4:	add	r0, r0, #0
   131d8:	movw	r1, #0
   131dc:	cmp	r1, r0
   131e0:	blt	13288 <__assert_fail@plt+0x21a0>
   131e4:	b	13298 <__assert_fail@plt+0x21b0>
   131e8:	ldr	r0, [sp, #12]
   131ec:	movw	r1, #0
   131f0:	cmp	r1, r0
   131f4:	bge	13298 <__assert_fail@plt+0x21b0>
   131f8:	ldr	r0, [sp, #12]
   131fc:	sub	r0, r0, #1
   13200:	mvn	r1, #0
   13204:	cmp	r1, r0
   13208:	blt	13288 <__assert_fail@plt+0x21a0>
   1320c:	b	13298 <__assert_fail@plt+0x21b0>
   13210:	ldr	r0, [sp, #12]
   13214:	movw	r1, #0
   13218:	cmp	r1, r0
   1321c:	blt	13288 <__assert_fail@plt+0x21a0>
   13220:	b	13298 <__assert_fail@plt+0x21b0>
   13224:	b	1322c <__assert_fail@plt+0x2144>
   13228:	b	13298 <__assert_fail@plt+0x21b0>
   1322c:	ldr	r0, [sp, #12]
   13230:	cmp	r0, #0
   13234:	bge	13274 <__assert_fail@plt+0x218c>
   13238:	b	1323c <__assert_fail@plt+0x2154>
   1323c:	b	1325c <__assert_fail@plt+0x2174>
   13240:	b	1325c <__assert_fail@plt+0x2174>
   13244:	ldr	r0, [sp, #12]
   13248:	cmn	r0, #1
   1324c:	bne	1325c <__assert_fail@plt+0x2174>
   13250:	b	13254 <__assert_fail@plt+0x216c>
   13254:	b	13288 <__assert_fail@plt+0x21a0>
   13258:	b	13288 <__assert_fail@plt+0x21a0>
   1325c:	ldr	r0, [sp, #12]
   13260:	movw	r1, #0
   13264:	sdiv	r0, r1, r0
   13268:	cmp	r0, #4
   1326c:	blt	13288 <__assert_fail@plt+0x21a0>
   13270:	b	13298 <__assert_fail@plt+0x21b0>
   13274:	ldr	r0, [sp, #12]
   13278:	asr	r0, r0, #31
   1327c:	cmp	r0, #1073741824	; 0x40000000
   13280:	bcc	13298 <__assert_fail@plt+0x21b0>
   13284:	b	13288 <__assert_fail@plt+0x21a0>
   13288:	ldr	r0, [sp, #12]
   1328c:	lsl	r0, r0, #2
   13290:	str	r0, [sp, #8]
   13294:	b	132b0 <__assert_fail@plt+0x21c8>
   13298:	ldr	r0, [sp, #12]
   1329c:	lsl	r0, r0, #2
   132a0:	str	r0, [sp, #8]
   132a4:	ldr	r0, [fp, #-12]
   132a8:	cmp	r0, #0
   132ac:	bge	132c4 <__assert_fail@plt+0x21dc>
   132b0:	ldr	r0, [sp, #16]
   132b4:	movw	r1, #0
   132b8:	str	r1, [r0]
   132bc:	str	r1, [fp, #-4]
   132c0:	b	13324 <__assert_fail@plt+0x223c>
   132c4:	ldr	r0, [sp, #8]
   132c8:	add	r0, r0, #1
   132cc:	str	r0, [sp, #8]
   132d0:	ldr	r0, [sp, #8]
   132d4:	bl	14160 <__assert_fail@plt+0x3078>
   132d8:	ldr	r1, [sp, #16]
   132dc:	str	r0, [r1]
   132e0:	ldr	r0, [sp, #16]
   132e4:	ldr	r0, [r0]
   132e8:	movw	r1, #0
   132ec:	cmp	r0, r1
   132f0:	bne	13300 <__assert_fail@plt+0x2218>
   132f4:	ldr	r0, [sp, #8]
   132f8:	str	r0, [fp, #-4]
   132fc:	b	13324 <__assert_fail@plt+0x223c>
   13300:	ldr	r0, [fp, #-8]
   13304:	ldr	r1, [fp, #-12]
   13308:	ldr	r2, [sp, #16]
   1330c:	ldr	r2, [r2]
   13310:	ldr	r3, [sp, #8]
   13314:	bl	121d4 <__assert_fail@plt+0x10ec>
   13318:	ldr	r0, [sp, #8]
   1331c:	sub	r0, r0, #1
   13320:	str	r0, [fp, #-4]
   13324:	ldr	r0, [fp, #-4]
   13328:	mov	sp, fp
   1332c:	pop	{fp, pc}
   13330:	svccc	0x00ffffff
   13334:	svcne	0x00ffffff
   13338:	andhi	r0, r0, r0
   1333c:	and	r0, r0, r0
   13340:	svcvc	0x00ffffff
   13344:	and	r0, r0, r1
   13348:			; <UNDEFINED> instruction: 0xffff8000
   1334c:			; <UNDEFINED> instruction: 0xffffe000
   13350:			; <UNDEFINED> instruction: 0xffffe001
   13354:			; <UNDEFINED> instruction: 0xffffc001
   13358:	push	{fp, lr}
   1335c:	mov	fp, sp
   13360:	sub	sp, sp, #8
   13364:	strb	r0, [fp, #-1]
   13368:	ldrb	r0, [fp, #-1]
   1336c:	bl	1266c <__assert_fail@plt+0x1584>
   13370:	and	r0, r0, #255	; 0xff
   13374:	movw	r1, #60019	; 0xea73
   13378:	movt	r1, #1
   1337c:	add	r0, r1, r0
   13380:	ldrsb	r0, [r0]
   13384:	movw	r1, #0
   13388:	cmp	r1, r0
   1338c:	movw	r0, #0
   13390:	movle	r0, #1
   13394:	and	r0, r0, #1
   13398:	mov	sp, fp
   1339c:	pop	{fp, pc}
   133a0:	sub	sp, sp, #4
   133a4:	str	r0, [sp]
   133a8:	ldr	r0, [sp]
   133ac:	movw	r1, #0
   133b0:	str	r1, [r0]
   133b4:	add	sp, sp, #4
   133b8:	bx	lr
   133bc:	push	{fp, lr}
   133c0:	mov	fp, sp
   133c4:	sub	sp, sp, #40	; 0x28
   133c8:	ldr	ip, [fp, #8]
   133cc:	str	r0, [fp, #-4]
   133d0:	str	r1, [fp, #-8]
   133d4:	str	r2, [fp, #-12]
   133d8:	str	r3, [fp, #-16]
   133dc:	ldr	r0, [fp, #8]
   133e0:	ldr	r0, [r0]
   133e4:	str	r0, [sp, #20]
   133e8:	ldr	r0, [fp, #-4]
   133ec:	movw	r1, #0
   133f0:	cmp	r0, r1
   133f4:	movw	r0, #0
   133f8:	movne	r0, #1
   133fc:	and	r0, r0, #1
   13400:	strb	r0, [sp, #19]
   13404:	movw	r0, #0
   13408:	strb	r0, [sp, #18]
   1340c:	str	r1, [sp, #12]
   13410:	ldrb	r0, [sp, #19]
   13414:	tst	r0, #1
   13418:	beq	13440 <__assert_fail@plt+0x2358>
   1341c:	ldr	r0, [fp, #-4]
   13420:	ldr	r0, [r0]
   13424:	str	r0, [sp, #12]
   13428:	ldr	r0, [fp, #-12]
   1342c:	cmp	r0, #0
   13430:	movw	r0, #0
   13434:	moveq	r0, #1
   13438:	and	r0, r0, #1
   1343c:	strb	r0, [sp, #18]
   13440:	b	13444 <__assert_fail@plt+0x235c>
   13444:	ldr	r0, [sp, #20]
   13448:	str	r0, [sp, #8]
   1344c:	ldr	r0, [sp, #12]
   13450:	cmp	r0, #0
   13454:	bne	134b0 <__assert_fail@plt+0x23c8>
   13458:	ldrb	r0, [sp, #18]
   1345c:	tst	r0, #1
   13460:	bne	134b0 <__assert_fail@plt+0x23c8>
   13464:	b	13468 <__assert_fail@plt+0x2380>
   13468:	ldr	r0, [sp, #20]
   1346c:	str	r0, [sp, #8]
   13470:	ldr	r0, [fp, #-8]
   13474:	ldr	r1, [fp, #-12]
   13478:	sub	r2, fp, #16
   1347c:	add	r3, sp, #20
   13480:	bl	1361c <__assert_fail@plt+0x2534>
   13484:	tst	r0, #1
   13488:	bne	13490 <__assert_fail@plt+0x23a8>
   1348c:	b	134ac <__assert_fail@plt+0x23c4>
   13490:	ldr	r0, [fp, #-8]
   13494:	add	r0, r0, #4
   13498:	str	r0, [fp, #-8]
   1349c:	ldr	r0, [fp, #-12]
   134a0:	sub	r0, r0, #4
   134a4:	str	r0, [fp, #-12]
   134a8:	b	13468 <__assert_fail@plt+0x2380>
   134ac:	b	134b0 <__assert_fail@plt+0x23c8>
   134b0:	ldr	r0, [fp, #-12]
   134b4:	cmp	r0, #0
   134b8:	bne	134cc <__assert_fail@plt+0x23e4>
   134bc:	ldrb	r0, [sp, #18]
   134c0:	tst	r0, #1
   134c4:	bne	134cc <__assert_fail@plt+0x23e4>
   134c8:	b	135ec <__assert_fail@plt+0x2504>
   134cc:	ldr	r0, [fp, #-12]
   134d0:	cmp	r0, #0
   134d4:	beq	13514 <__assert_fail@plt+0x242c>
   134d8:	ldr	r0, [fp, #-8]
   134dc:	ldrb	r0, [r0]
   134e0:	cmp	r0, #10
   134e4:	bne	13514 <__assert_fail@plt+0x242c>
   134e8:	ldrb	r0, [sp, #19]
   134ec:	tst	r0, #1
   134f0:	beq	13514 <__assert_fail@plt+0x242c>
   134f4:	ldr	r0, [fp, #-8]
   134f8:	add	r0, r0, #1
   134fc:	str	r0, [fp, #-8]
   13500:	ldr	r0, [fp, #-12]
   13504:	mvn	r1, #0
   13508:	add	r0, r0, r1
   1350c:	str	r0, [fp, #-12]
   13510:	b	13444 <__assert_fail@plt+0x235c>
   13514:	ldr	r0, [sp, #8]
   13518:	ldr	r1, [sp, #20]
   1351c:	sub	r0, r0, r1
   13520:	ldr	r1, [fp, #-16]
   13524:	movw	r2, #0
   13528:	sub	r0, r2, r0
   1352c:	add	r0, r1, r0
   13530:	str	r0, [fp, #-16]
   13534:	ldr	r0, [sp, #8]
   13538:	str	r0, [sp, #20]
   1353c:	ldr	r0, [fp, #-8]
   13540:	ldr	r1, [fp, #-12]
   13544:	add	r0, r0, r1
   13548:	str	r0, [sp, #4]
   1354c:	ldrb	r0, [sp, #19]
   13550:	tst	r0, #1
   13554:	beq	13574 <__assert_fail@plt+0x248c>
   13558:	ldr	r0, [fp, #-4]
   1355c:	ldr	r2, [sp, #4]
   13560:	sub	r1, fp, #8
   13564:	sub	r3, fp, #12
   13568:	bl	139e0 <__assert_fail@plt+0x28f8>
   1356c:	str	r0, [sp]
   13570:	b	1357c <__assert_fail@plt+0x2494>
   13574:	ldr	r0, [fp, #-8]
   13578:	str	r0, [sp]
   1357c:	ldr	r0, [fp, #-12]
   13580:	cmp	r0, #0
   13584:	beq	135ac <__assert_fail@plt+0x24c4>
   13588:	ldr	r0, [fp, #-12]
   1358c:	cmp	r0, #4
   13590:	bge	135b8 <__assert_fail@plt+0x24d0>
   13594:	ldrb	r0, [sp, #18]
   13598:	tst	r0, #1
   1359c:	bne	135b8 <__assert_fail@plt+0x24d0>
   135a0:	ldrb	r0, [sp, #19]
   135a4:	tst	r0, #1
   135a8:	beq	135b8 <__assert_fail@plt+0x24d0>
   135ac:	movw	r0, #0
   135b0:	str	r0, [fp, #-12]
   135b4:	b	135ec <__assert_fail@plt+0x2504>
   135b8:	ldr	r0, [sp]
   135bc:	ldr	r1, [fp, #-12]
   135c0:	sub	r2, fp, #16
   135c4:	add	r3, sp, #20
   135c8:	bl	1361c <__assert_fail@plt+0x2534>
   135cc:	tst	r0, #1
   135d0:	bne	135d8 <__assert_fail@plt+0x24f0>
   135d4:	b	135ec <__assert_fail@plt+0x2504>
   135d8:	ldr	r0, [sp, #4]
   135dc:	ldr	r1, [fp, #-8]
   135e0:	sub	r0, r0, r1
   135e4:	str	r0, [fp, #-12]
   135e8:	b	13444 <__assert_fail@plt+0x235c>
   135ec:	ldr	r0, [sp, #20]
   135f0:	ldr	r1, [fp, #8]
   135f4:	ldr	r2, [r1]
   135f8:	sub	r0, r2, r0
   135fc:	str	r0, [r1]
   13600:	ldr	r0, [fp, #-12]
   13604:	cmp	r0, #0
   13608:	movw	r0, #0
   1360c:	moveq	r0, #1
   13610:	and	r0, r0, #1
   13614:	mov	sp, fp
   13618:	pop	{fp, pc}
   1361c:	push	{fp, lr}
   13620:	mov	fp, sp
   13624:	sub	sp, sp, #40	; 0x28
   13628:	str	r0, [fp, #-8]
   1362c:	str	r1, [fp, #-12]
   13630:	str	r2, [fp, #-16]
   13634:	str	r3, [sp, #20]
   13638:	ldr	r0, [fp, #-16]
   1363c:	ldr	r0, [r0]
   13640:	str	r0, [sp, #16]
   13644:	ldr	r0, [fp, #-12]
   13648:	cmp	r0, #2
   1364c:	bge	13660 <__assert_fail@plt+0x2578>
   13650:	movw	r0, #0
   13654:	and	r0, r0, #1
   13658:	strb	r0, [fp, #-1]
   1365c:	b	139d0 <__assert_fail@plt+0x28e8>
   13660:	ldr	r0, [fp, #-8]
   13664:	ldrb	r0, [r0]
   13668:	bl	13358 <__assert_fail@plt+0x2270>
   1366c:	tst	r0, #1
   13670:	beq	13688 <__assert_fail@plt+0x25a0>
   13674:	ldr	r0, [fp, #-8]
   13678:	ldrb	r0, [r0, #1]
   1367c:	bl	13358 <__assert_fail@plt+0x2270>
   13680:	tst	r0, #1
   13684:	bne	13698 <__assert_fail@plt+0x25b0>
   13688:	movw	r0, #0
   1368c:	and	r0, r0, #1
   13690:	strb	r0, [fp, #-1]
   13694:	b	139d0 <__assert_fail@plt+0x28e8>
   13698:	ldr	r0, [sp, #20]
   1369c:	ldr	r0, [r0]
   136a0:	cmp	r0, #0
   136a4:	beq	13724 <__assert_fail@plt+0x263c>
   136a8:	ldr	r0, [fp, #-8]
   136ac:	ldrb	r0, [r0]
   136b0:	bl	1266c <__assert_fail@plt+0x1584>
   136b4:	and	r0, r0, #255	; 0xff
   136b8:	movw	r1, #60019	; 0xea73
   136bc:	movt	r1, #1
   136c0:	add	r0, r1, r0
   136c4:	ldrsb	r0, [r0]
   136c8:	lsl	r0, r0, #2
   136cc:	ldr	r1, [fp, #-8]
   136d0:	ldrb	r1, [r1, #1]
   136d4:	str	r0, [sp, #12]
   136d8:	mov	r0, r1
   136dc:	bl	1266c <__assert_fail@plt+0x1584>
   136e0:	and	r0, r0, #255	; 0xff
   136e4:	movw	r1, #60019	; 0xea73
   136e8:	movt	r1, #1
   136ec:	add	r0, r1, r0
   136f0:	ldrsb	r0, [r0]
   136f4:	asr	r0, r0, #4
   136f8:	ldr	r1, [sp, #12]
   136fc:	orr	r0, r1, r0
   13700:	ldr	r1, [sp, #16]
   13704:	add	r2, r1, #1
   13708:	str	r2, [sp, #16]
   1370c:	strb	r0, [r1]
   13710:	ldr	r0, [sp, #20]
   13714:	ldr	r1, [r0]
   13718:	mvn	r2, #0
   1371c:	add	r1, r1, r2
   13720:	str	r1, [r0]
   13724:	ldr	r0, [fp, #-12]
   13728:	cmp	r0, #2
   1372c:	bne	13750 <__assert_fail@plt+0x2668>
   13730:	b	13734 <__assert_fail@plt+0x264c>
   13734:	ldr	r0, [sp, #16]
   13738:	ldr	r1, [fp, #-16]
   1373c:	str	r0, [r1]
   13740:	movw	r0, #0
   13744:	and	r0, r0, #1
   13748:	strb	r0, [fp, #-1]
   1374c:	b	139d0 <__assert_fail@plt+0x28e8>
   13750:	ldr	r0, [fp, #-8]
   13754:	ldrb	r0, [r0, #2]
   13758:	cmp	r0, #61	; 0x3d
   1375c:	bne	137c0 <__assert_fail@plt+0x26d8>
   13760:	ldr	r0, [fp, #-12]
   13764:	cmp	r0, #4
   13768:	beq	1378c <__assert_fail@plt+0x26a4>
   1376c:	b	13770 <__assert_fail@plt+0x2688>
   13770:	ldr	r0, [sp, #16]
   13774:	ldr	r1, [fp, #-16]
   13778:	str	r0, [r1]
   1377c:	movw	r0, #0
   13780:	and	r0, r0, #1
   13784:	strb	r0, [fp, #-1]
   13788:	b	139d0 <__assert_fail@plt+0x28e8>
   1378c:	ldr	r0, [fp, #-8]
   13790:	ldrb	r0, [r0, #3]
   13794:	cmp	r0, #61	; 0x3d
   13798:	beq	137bc <__assert_fail@plt+0x26d4>
   1379c:	b	137a0 <__assert_fail@plt+0x26b8>
   137a0:	ldr	r0, [sp, #16]
   137a4:	ldr	r1, [fp, #-16]
   137a8:	str	r0, [r1]
   137ac:	movw	r0, #0
   137b0:	and	r0, r0, #1
   137b4:	strb	r0, [fp, #-1]
   137b8:	b	139d0 <__assert_fail@plt+0x28e8>
   137bc:	b	139b8 <__assert_fail@plt+0x28d0>
   137c0:	ldr	r0, [fp, #-8]
   137c4:	ldrb	r0, [r0, #2]
   137c8:	bl	13358 <__assert_fail@plt+0x2270>
   137cc:	tst	r0, #1
   137d0:	bne	137f4 <__assert_fail@plt+0x270c>
   137d4:	b	137d8 <__assert_fail@plt+0x26f0>
   137d8:	ldr	r0, [sp, #16]
   137dc:	ldr	r1, [fp, #-16]
   137e0:	str	r0, [r1]
   137e4:	movw	r0, #0
   137e8:	and	r0, r0, #1
   137ec:	strb	r0, [fp, #-1]
   137f0:	b	139d0 <__assert_fail@plt+0x28e8>
   137f4:	ldr	r0, [sp, #20]
   137f8:	ldr	r0, [r0]
   137fc:	cmp	r0, #0
   13800:	beq	13884 <__assert_fail@plt+0x279c>
   13804:	ldr	r0, [fp, #-8]
   13808:	ldrb	r0, [r0, #1]
   1380c:	bl	1266c <__assert_fail@plt+0x1584>
   13810:	and	r0, r0, #255	; 0xff
   13814:	movw	r1, #60019	; 0xea73
   13818:	movt	r1, #1
   1381c:	add	r0, r1, r0
   13820:	ldrsb	r0, [r0]
   13824:	lsl	r0, r0, #4
   13828:	and	r0, r0, #240	; 0xf0
   1382c:	ldr	r1, [fp, #-8]
   13830:	ldrb	r1, [r1, #2]
   13834:	str	r0, [sp, #8]
   13838:	mov	r0, r1
   1383c:	bl	1266c <__assert_fail@plt+0x1584>
   13840:	and	r0, r0, #255	; 0xff
   13844:	movw	r1, #60019	; 0xea73
   13848:	movt	r1, #1
   1384c:	add	r0, r1, r0
   13850:	ldrsb	r0, [r0]
   13854:	asr	r0, r0, #2
   13858:	ldr	r1, [sp, #8]
   1385c:	orr	r0, r1, r0
   13860:	ldr	r1, [sp, #16]
   13864:	add	r2, r1, #1
   13868:	str	r2, [sp, #16]
   1386c:	strb	r0, [r1]
   13870:	ldr	r0, [sp, #20]
   13874:	ldr	r1, [r0]
   13878:	mvn	r2, #0
   1387c:	add	r1, r1, r2
   13880:	str	r1, [r0]
   13884:	ldr	r0, [fp, #-12]
   13888:	cmp	r0, #3
   1388c:	bne	138b0 <__assert_fail@plt+0x27c8>
   13890:	b	13894 <__assert_fail@plt+0x27ac>
   13894:	ldr	r0, [sp, #16]
   13898:	ldr	r1, [fp, #-16]
   1389c:	str	r0, [r1]
   138a0:	movw	r0, #0
   138a4:	and	r0, r0, #1
   138a8:	strb	r0, [fp, #-1]
   138ac:	b	139d0 <__assert_fail@plt+0x28e8>
   138b0:	ldr	r0, [fp, #-8]
   138b4:	ldrb	r0, [r0, #3]
   138b8:	cmp	r0, #61	; 0x3d
   138bc:	bne	138f0 <__assert_fail@plt+0x2808>
   138c0:	ldr	r0, [fp, #-12]
   138c4:	cmp	r0, #4
   138c8:	beq	138ec <__assert_fail@plt+0x2804>
   138cc:	b	138d0 <__assert_fail@plt+0x27e8>
   138d0:	ldr	r0, [sp, #16]
   138d4:	ldr	r1, [fp, #-16]
   138d8:	str	r0, [r1]
   138dc:	movw	r0, #0
   138e0:	and	r0, r0, #1
   138e4:	strb	r0, [fp, #-1]
   138e8:	b	139d0 <__assert_fail@plt+0x28e8>
   138ec:	b	139b4 <__assert_fail@plt+0x28cc>
   138f0:	ldr	r0, [fp, #-8]
   138f4:	ldrb	r0, [r0, #3]
   138f8:	bl	13358 <__assert_fail@plt+0x2270>
   138fc:	tst	r0, #1
   13900:	bne	13924 <__assert_fail@plt+0x283c>
   13904:	b	13908 <__assert_fail@plt+0x2820>
   13908:	ldr	r0, [sp, #16]
   1390c:	ldr	r1, [fp, #-16]
   13910:	str	r0, [r1]
   13914:	movw	r0, #0
   13918:	and	r0, r0, #1
   1391c:	strb	r0, [fp, #-1]
   13920:	b	139d0 <__assert_fail@plt+0x28e8>
   13924:	ldr	r0, [sp, #20]
   13928:	ldr	r0, [r0]
   1392c:	cmp	r0, #0
   13930:	beq	139b0 <__assert_fail@plt+0x28c8>
   13934:	ldr	r0, [fp, #-8]
   13938:	ldrb	r0, [r0, #2]
   1393c:	bl	1266c <__assert_fail@plt+0x1584>
   13940:	and	r0, r0, #255	; 0xff
   13944:	movw	r1, #60019	; 0xea73
   13948:	movt	r1, #1
   1394c:	add	r0, r1, r0
   13950:	ldrsb	r0, [r0]
   13954:	lsl	r0, r0, #6
   13958:	and	r0, r0, #192	; 0xc0
   1395c:	ldr	r1, [fp, #-8]
   13960:	ldrb	r1, [r1, #3]
   13964:	str	r0, [sp, #4]
   13968:	mov	r0, r1
   1396c:	bl	1266c <__assert_fail@plt+0x1584>
   13970:	and	r0, r0, #255	; 0xff
   13974:	movw	r1, #60019	; 0xea73
   13978:	movt	r1, #1
   1397c:	add	r0, r1, r0
   13980:	ldrsb	r0, [r0]
   13984:	ldr	r1, [sp, #4]
   13988:	orr	r0, r1, r0
   1398c:	ldr	r1, [sp, #16]
   13990:	add	r2, r1, #1
   13994:	str	r2, [sp, #16]
   13998:	strb	r0, [r1]
   1399c:	ldr	r0, [sp, #20]
   139a0:	ldr	r1, [r0]
   139a4:	mvn	r2, #0
   139a8:	add	r1, r1, r2
   139ac:	str	r1, [r0]
   139b0:	b	139b4 <__assert_fail@plt+0x28cc>
   139b4:	b	139b8 <__assert_fail@plt+0x28d0>
   139b8:	ldr	r0, [sp, #16]
   139bc:	ldr	r1, [fp, #-16]
   139c0:	str	r0, [r1]
   139c4:	movw	r0, #1
   139c8:	and	r0, r0, #1
   139cc:	strb	r0, [fp, #-1]
   139d0:	ldrb	r0, [fp, #-1]
   139d4:	and	r0, r0, #1
   139d8:	mov	sp, fp
   139dc:	pop	{fp, pc}
   139e0:	push	{fp, lr}
   139e4:	mov	fp, sp
   139e8:	sub	sp, sp, #32
   139ec:	str	r0, [fp, #-8]
   139f0:	str	r1, [fp, #-12]
   139f4:	str	r2, [sp, #16]
   139f8:	str	r3, [sp, #12]
   139fc:	ldr	r0, [fp, #-8]
   13a00:	ldr	r0, [r0]
   13a04:	cmp	r0, #4
   13a08:	bne	13a18 <__assert_fail@plt+0x2930>
   13a0c:	ldr	r0, [fp, #-8]
   13a10:	movw	r1, #0
   13a14:	str	r1, [r0]
   13a18:	ldr	r0, [fp, #-8]
   13a1c:	ldr	r0, [r0]
   13a20:	cmp	r0, #0
   13a24:	bne	13a98 <__assert_fail@plt+0x29b0>
   13a28:	ldr	r0, [fp, #-12]
   13a2c:	ldr	r0, [r0]
   13a30:	str	r0, [sp, #8]
   13a34:	ldr	r0, [sp, #16]
   13a38:	ldr	r1, [fp, #-12]
   13a3c:	ldr	r1, [r1]
   13a40:	sub	r0, r0, r1
   13a44:	movw	r1, #4
   13a48:	cmp	r1, r0
   13a4c:	bgt	13a94 <__assert_fail@plt+0x29ac>
   13a50:	ldr	r0, [sp, #8]
   13a54:	mov	r1, #10
   13a58:	mov	r2, #4
   13a5c:	bl	11040 <memchr@plt>
   13a60:	movw	r1, #0
   13a64:	cmp	r0, r1
   13a68:	bne	13a94 <__assert_fail@plt+0x29ac>
   13a6c:	ldr	r0, [fp, #-12]
   13a70:	ldr	r1, [r0]
   13a74:	add	r1, r1, #4
   13a78:	str	r1, [r0]
   13a7c:	ldr	r0, [sp, #12]
   13a80:	movw	r1, #4
   13a84:	str	r1, [r0]
   13a88:	ldr	r0, [sp, #8]
   13a8c:	str	r0, [fp, #-4]
   13a90:	b	13b3c <__assert_fail@plt+0x2a54>
   13a94:	b	13a98 <__assert_fail@plt+0x29b0>
   13a98:	ldr	r0, [fp, #-12]
   13a9c:	ldr	r0, [r0]
   13aa0:	str	r0, [sp, #4]
   13aa4:	ldr	r0, [sp, #4]
   13aa8:	ldr	r1, [sp, #16]
   13aac:	cmp	r0, r1
   13ab0:	bcs	13b14 <__assert_fail@plt+0x2a2c>
   13ab4:	ldr	r0, [sp, #4]
   13ab8:	add	r1, r0, #1
   13abc:	str	r1, [sp, #4]
   13ac0:	ldrb	r0, [r0]
   13ac4:	strb	r0, [sp, #3]
   13ac8:	ldrb	r0, [sp, #3]
   13acc:	cmp	r0, #10
   13ad0:	beq	13b10 <__assert_fail@plt+0x2a28>
   13ad4:	ldrb	r0, [sp, #3]
   13ad8:	ldr	r1, [fp, #-8]
   13adc:	add	r1, r1, #4
   13ae0:	ldr	r2, [fp, #-8]
   13ae4:	ldr	r3, [r2]
   13ae8:	add	ip, r3, #1
   13aec:	str	ip, [r2]
   13af0:	add	r1, r1, r3
   13af4:	strb	r0, [r1]
   13af8:	ldr	r0, [fp, #-8]
   13afc:	ldr	r0, [r0]
   13b00:	cmp	r0, #4
   13b04:	bne	13b0c <__assert_fail@plt+0x2a24>
   13b08:	b	13b14 <__assert_fail@plt+0x2a2c>
   13b0c:	b	13b10 <__assert_fail@plt+0x2a28>
   13b10:	b	13aa4 <__assert_fail@plt+0x29bc>
   13b14:	ldr	r0, [sp, #4]
   13b18:	ldr	r1, [fp, #-12]
   13b1c:	str	r0, [r1]
   13b20:	ldr	r0, [fp, #-8]
   13b24:	ldr	r0, [r0]
   13b28:	ldr	r1, [sp, #12]
   13b2c:	str	r0, [r1]
   13b30:	ldr	r0, [fp, #-8]
   13b34:	add	r0, r0, #4
   13b38:	str	r0, [fp, #-4]
   13b3c:	ldr	r0, [fp, #-4]
   13b40:	mov	sp, fp
   13b44:	pop	{fp, pc}
   13b48:	push	{fp, lr}
   13b4c:	mov	fp, sp
   13b50:	sub	sp, sp, #32
   13b54:	ldr	ip, [fp, #8]
   13b58:	str	r0, [fp, #-8]
   13b5c:	str	r1, [fp, #-12]
   13b60:	str	r2, [sp, #16]
   13b64:	str	r3, [sp, #12]
   13b68:	ldr	r0, [sp, #16]
   13b6c:	asr	r0, r0, #2
   13b70:	add	r0, r0, #1
   13b74:	movw	r1, #3
   13b78:	mul	r0, r0, r1
   13b7c:	str	r0, [sp, #8]
   13b80:	ldr	r0, [sp, #8]
   13b84:	str	ip, [sp, #4]
   13b88:	bl	14160 <__assert_fail@plt+0x3078>
   13b8c:	ldr	r1, [sp, #12]
   13b90:	str	r0, [r1]
   13b94:	ldr	r0, [sp, #12]
   13b98:	ldr	r0, [r0]
   13b9c:	movw	r1, #0
   13ba0:	cmp	r0, r1
   13ba4:	bne	13bb8 <__assert_fail@plt+0x2ad0>
   13ba8:	movw	r0, #1
   13bac:	and	r0, r0, #1
   13bb0:	strb	r0, [fp, #-1]
   13bb4:	b	13c30 <__assert_fail@plt+0x2b48>
   13bb8:	ldr	r0, [fp, #-8]
   13bbc:	ldr	r1, [fp, #-12]
   13bc0:	ldr	r2, [sp, #16]
   13bc4:	ldr	r3, [sp, #12]
   13bc8:	ldr	r3, [r3]
   13bcc:	add	ip, sp, #8
   13bd0:	str	ip, [sp]
   13bd4:	bl	133bc <__assert_fail@plt+0x22d4>
   13bd8:	tst	r0, #1
   13bdc:	bne	13c08 <__assert_fail@plt+0x2b20>
   13be0:	ldr	r0, [sp, #12]
   13be4:	ldr	r0, [r0]
   13be8:	bl	13ffc <__assert_fail@plt+0x2f14>
   13bec:	ldr	r0, [sp, #12]
   13bf0:	movw	r1, #0
   13bf4:	str	r1, [r0]
   13bf8:	movw	r0, #0
   13bfc:	and	r0, r0, #1
   13c00:	strb	r0, [fp, #-1]
   13c04:	b	13c30 <__assert_fail@plt+0x2b48>
   13c08:	ldr	r0, [fp, #8]
   13c0c:	movw	r1, #0
   13c10:	cmp	r0, r1
   13c14:	beq	13c24 <__assert_fail@plt+0x2b3c>
   13c18:	ldr	r0, [sp, #8]
   13c1c:	ldr	r1, [fp, #8]
   13c20:	str	r0, [r1]
   13c24:	movw	r0, #1
   13c28:	and	r0, r0, #1
   13c2c:	strb	r0, [fp, #-1]
   13c30:	ldrb	r0, [fp, #-1]
   13c34:	and	r0, r0, #1
   13c38:	mov	sp, fp
   13c3c:	pop	{fp, pc}
   13c40:	sub	sp, sp, #4
   13c44:	str	r0, [sp]
   13c48:	ldr	r0, [sp]
   13c4c:	movw	r1, #352	; 0x160
   13c50:	movt	r1, #3
   13c54:	str	r0, [r1]
   13c58:	add	sp, sp, #4
   13c5c:	bx	lr
   13c60:	sub	sp, sp, #4
   13c64:	and	r0, r0, #1
   13c68:	strb	r0, [sp, #3]
   13c6c:	ldrb	r0, [sp, #3]
   13c70:	and	r0, r0, #1
   13c74:	movw	r1, #356	; 0x164
   13c78:	movt	r1, #3
   13c7c:	strb	r0, [r1]
   13c80:	add	sp, sp, #4
   13c84:	bx	lr
   13c88:	push	{fp, lr}
   13c8c:	mov	fp, sp
   13c90:	sub	sp, sp, #24
   13c94:	movw	r0, #340	; 0x154
   13c98:	movt	r0, #3
   13c9c:	ldr	r0, [r0]
   13ca0:	bl	1d72c <__assert_fail@plt+0xc644>
   13ca4:	cmp	r0, #0
   13ca8:	beq	13d78 <__assert_fail@plt+0x2c90>
   13cac:	movw	r0, #356	; 0x164
   13cb0:	movt	r0, #3
   13cb4:	ldrb	r0, [r0]
   13cb8:	tst	r0, #1
   13cbc:	beq	13cd0 <__assert_fail@plt+0x2be8>
   13cc0:	bl	11010 <__errno_location@plt>
   13cc4:	ldr	r0, [r0]
   13cc8:	cmp	r0, #32
   13ccc:	beq	13d78 <__assert_fail@plt+0x2c90>
   13cd0:	movw	r0, #59736	; 0xe958
   13cd4:	movt	r0, #1
   13cd8:	bl	10fe0 <gettext@plt>
   13cdc:	str	r0, [fp, #-4]
   13ce0:	movw	r0, #352	; 0x160
   13ce4:	movt	r0, #3
   13ce8:	ldr	r0, [r0]
   13cec:	movw	r1, #0
   13cf0:	cmp	r0, r1
   13cf4:	beq	13d4c <__assert_fail@plt+0x2c64>
   13cf8:	bl	11010 <__errno_location@plt>
   13cfc:	ldr	r1, [r0]
   13d00:	movw	r0, #352	; 0x160
   13d04:	movt	r0, #3
   13d08:	ldr	r0, [r0]
   13d0c:	str	r1, [fp, #-8]
   13d10:	bl	166d8 <__assert_fail@plt+0x55f0>
   13d14:	ldr	r1, [fp, #-4]
   13d18:	movw	r2, #0
   13d1c:	str	r0, [sp, #12]
   13d20:	mov	r0, r2
   13d24:	ldr	r2, [fp, #-8]
   13d28:	str	r1, [sp, #8]
   13d2c:	mov	r1, r2
   13d30:	movw	r2, #59168	; 0xe720
   13d34:	movt	r2, #1
   13d38:	ldr	r3, [sp, #12]
   13d3c:	ldr	ip, [sp, #8]
   13d40:	str	ip, [sp]
   13d44:	bl	10f80 <error@plt>
   13d48:	b	13d68 <__assert_fail@plt+0x2c80>
   13d4c:	bl	11010 <__errno_location@plt>
   13d50:	ldr	r1, [r0]
   13d54:	ldr	r3, [fp, #-4]
   13d58:	movw	r0, #0
   13d5c:	movw	r2, #59172	; 0xe724
   13d60:	movt	r2, #1
   13d64:	bl	10f80 <error@plt>
   13d68:	movw	r0, #244	; 0xf4
   13d6c:	movt	r0, #3
   13d70:	ldr	r0, [r0]
   13d74:	bl	10ed8 <_exit@plt>
   13d78:	movw	r0, #328	; 0x148
   13d7c:	movt	r0, #3
   13d80:	ldr	r0, [r0]
   13d84:	bl	1d72c <__assert_fail@plt+0xc644>
   13d88:	cmp	r0, #0
   13d8c:	beq	13da0 <__assert_fail@plt+0x2cb8>
   13d90:	movw	r0, #244	; 0xf4
   13d94:	movt	r0, #3
   13d98:	ldr	r0, [r0]
   13d9c:	bl	10ed8 <_exit@plt>
   13da0:	mov	sp, fp
   13da4:	pop	{fp, pc}
   13da8:	push	{r4, r5, fp, lr}
   13dac:	add	fp, sp, #8
   13db0:	sub	sp, sp, #40	; 0x28
   13db4:	ldr	r1, [fp, #12]
   13db8:	ldr	ip, [fp, #8]
   13dbc:	ldr	lr, [fp, #16]
   13dc0:	str	r0, [fp, #-12]
   13dc4:	str	r3, [sp, #28]
   13dc8:	str	r2, [sp, #24]
   13dcc:	str	r1, [sp, #20]
   13dd0:	str	ip, [sp, #16]
   13dd4:	ldr	r0, [fp, #-12]
   13dd8:	ldr	r2, [sp, #24]
   13ddc:	ldr	r3, [sp, #28]
   13de0:	ldr	r1, [sp, #16]
   13de4:	ldr	ip, [sp, #20]
   13de8:	ldr	r4, [fp, #16]
   13dec:	mov	r5, sp
   13df0:	str	r4, [r5, #8]
   13df4:	str	ip, [r5, #4]
   13df8:	str	r1, [r5]
   13dfc:	str	lr, [sp, #12]
   13e00:	bl	10e9c <posix_fadvise64@plt>
   13e04:	sub	sp, fp, #8
   13e08:	pop	{r4, r5, fp, pc}
   13e0c:	push	{fp, lr}
   13e10:	mov	fp, sp
   13e14:	sub	sp, sp, #24
   13e18:	str	r0, [fp, #-4]
   13e1c:	str	r1, [fp, #-8]
   13e20:	ldr	r0, [fp, #-4]
   13e24:	movw	r1, #0
   13e28:	cmp	r0, r1
   13e2c:	beq	13e5c <__assert_fail@plt+0x2d74>
   13e30:	ldr	r0, [fp, #-4]
   13e34:	bl	11034 <fileno@plt>
   13e38:	ldr	r1, [fp, #-8]
   13e3c:	mov	r2, sp
   13e40:	str	r1, [r2, #8]
   13e44:	mov	r1, #0
   13e48:	str	r1, [r2, #4]
   13e4c:	str	r1, [r2]
   13e50:	mov	r2, r1
   13e54:	mov	r3, r1
   13e58:	bl	13da8 <__assert_fail@plt+0x2cc0>
   13e5c:	mov	sp, fp
   13e60:	pop	{fp, pc}
   13e64:	push	{fp, lr}
   13e68:	mov	fp, sp
   13e6c:	sub	sp, sp, #32
   13e70:	str	r0, [fp, #-8]
   13e74:	movw	r0, #0
   13e78:	str	r0, [fp, #-12]
   13e7c:	str	r0, [sp, #12]
   13e80:	ldr	r0, [fp, #-8]
   13e84:	bl	11034 <fileno@plt>
   13e88:	str	r0, [sp, #16]
   13e8c:	ldr	r0, [sp, #16]
   13e90:	cmp	r0, #0
   13e94:	bge	13ea8 <__assert_fail@plt+0x2dc0>
   13e98:	ldr	r0, [fp, #-8]
   13e9c:	bl	11058 <fclose@plt>
   13ea0:	str	r0, [fp, #-4]
   13ea4:	b	13f44 <__assert_fail@plt+0x2e5c>
   13ea8:	ldr	r0, [fp, #-8]
   13eac:	bl	10fa4 <__freading@plt>
   13eb0:	cmp	r0, #0
   13eb4:	beq	13eec <__assert_fail@plt+0x2e04>
   13eb8:	ldr	r0, [fp, #-8]
   13ebc:	bl	11034 <fileno@plt>
   13ec0:	mov	r1, sp
   13ec4:	mov	r2, #1
   13ec8:	str	r2, [r1]
   13ecc:	mov	r1, #0
   13ed0:	mov	r2, r1
   13ed4:	mov	r3, r1
   13ed8:	bl	10f44 <lseek64@plt>
   13edc:	and	r0, r0, r1
   13ee0:	cmn	r0, #1
   13ee4:	beq	13f08 <__assert_fail@plt+0x2e20>
   13ee8:	b	13eec <__assert_fail@plt+0x2e04>
   13eec:	ldr	r0, [fp, #-8]
   13ef0:	bl	13f50 <__assert_fail@plt+0x2e68>
   13ef4:	cmp	r0, #0
   13ef8:	beq	13f08 <__assert_fail@plt+0x2e20>
   13efc:	bl	11010 <__errno_location@plt>
   13f00:	ldr	r0, [r0]
   13f04:	str	r0, [fp, #-12]
   13f08:	ldr	r0, [fp, #-8]
   13f0c:	bl	11058 <fclose@plt>
   13f10:	str	r0, [sp, #12]
   13f14:	ldr	r0, [fp, #-12]
   13f18:	cmp	r0, #0
   13f1c:	beq	13f3c <__assert_fail@plt+0x2e54>
   13f20:	ldr	r0, [fp, #-12]
   13f24:	str	r0, [sp, #8]
   13f28:	bl	11010 <__errno_location@plt>
   13f2c:	ldr	r1, [sp, #8]
   13f30:	str	r1, [r0]
   13f34:	mvn	r0, #0
   13f38:	str	r0, [sp, #12]
   13f3c:	ldr	r0, [sp, #12]
   13f40:	str	r0, [fp, #-4]
   13f44:	ldr	r0, [fp, #-4]
   13f48:	mov	sp, fp
   13f4c:	pop	{fp, pc}
   13f50:	push	{fp, lr}
   13f54:	mov	fp, sp
   13f58:	sub	sp, sp, #8
   13f5c:	str	r0, [sp]
   13f60:	ldr	r0, [sp]
   13f64:	movw	r1, #0
   13f68:	cmp	r0, r1
   13f6c:	beq	13f80 <__assert_fail@plt+0x2e98>
   13f70:	ldr	r0, [sp]
   13f74:	bl	10fa4 <__freading@plt>
   13f78:	cmp	r0, #0
   13f7c:	bne	13f90 <__assert_fail@plt+0x2ea8>
   13f80:	ldr	r0, [sp]
   13f84:	bl	10eb4 <fflush@plt>
   13f88:	str	r0, [sp, #4]
   13f8c:	b	13fa4 <__assert_fail@plt+0x2ebc>
   13f90:	ldr	r0, [sp]
   13f94:	bl	13fb0 <__assert_fail@plt+0x2ec8>
   13f98:	ldr	r0, [sp]
   13f9c:	bl	10eb4 <fflush@plt>
   13fa0:	str	r0, [sp, #4]
   13fa4:	ldr	r0, [sp, #4]
   13fa8:	mov	sp, fp
   13fac:	pop	{fp, pc}
   13fb0:	push	{fp, lr}
   13fb4:	mov	fp, sp
   13fb8:	sub	sp, sp, #8
   13fbc:	str	r0, [sp, #4]
   13fc0:	ldr	r0, [sp, #4]
   13fc4:	ldr	r0, [r0]
   13fc8:	and	r0, r0, #256	; 0x100
   13fcc:	cmp	r0, #0
   13fd0:	beq	13ff4 <__assert_fail@plt+0x2f0c>
   13fd4:	ldr	r0, [sp, #4]
   13fd8:	mov	r1, sp
   13fdc:	mov	r2, #1
   13fe0:	str	r2, [r1]
   13fe4:	mov	r1, #0
   13fe8:	mov	r2, r1
   13fec:	mov	r3, r1
   13ff0:	bl	1403c <__assert_fail@plt+0x2f54>
   13ff4:	mov	sp, fp
   13ff8:	pop	{fp, pc}
   13ffc:	push	{fp, lr}
   14000:	mov	fp, sp
   14004:	sub	sp, sp, #16
   14008:	str	r0, [fp, #-4]
   1400c:	bl	11010 <__errno_location@plt>
   14010:	ldr	r0, [r0]
   14014:	str	r0, [sp, #8]
   14018:	ldr	r0, [fp, #-4]
   1401c:	bl	10ecc <free@plt>
   14020:	ldr	r0, [sp, #8]
   14024:	str	r0, [sp, #4]
   14028:	bl	11010 <__errno_location@plt>
   1402c:	ldr	r1, [sp, #4]
   14030:	str	r1, [r0]
   14034:	mov	sp, fp
   14038:	pop	{fp, pc}
   1403c:	push	{fp, lr}
   14040:	mov	fp, sp
   14044:	sub	sp, sp, #32
   14048:	ldr	r1, [fp, #8]
   1404c:	str	r0, [fp, #-8]
   14050:	str	r3, [sp, #20]
   14054:	str	r2, [sp, #16]
   14058:	ldr	r0, [fp, #-8]
   1405c:	ldr	r0, [r0, #8]
   14060:	ldr	r2, [fp, #-8]
   14064:	ldr	r2, [r2, #4]
   14068:	cmp	r0, r2
   1406c:	bne	14118 <__assert_fail@plt+0x3030>
   14070:	ldr	r0, [fp, #-8]
   14074:	ldr	r0, [r0, #20]
   14078:	ldr	r1, [fp, #-8]
   1407c:	ldr	r1, [r1, #16]
   14080:	cmp	r0, r1
   14084:	bne	14118 <__assert_fail@plt+0x3030>
   14088:	ldr	r0, [fp, #-8]
   1408c:	ldr	r0, [r0, #36]	; 0x24
   14090:	movw	r1, #0
   14094:	cmp	r0, r1
   14098:	bne	14118 <__assert_fail@plt+0x3030>
   1409c:	ldr	r0, [fp, #-8]
   140a0:	bl	11034 <fileno@plt>
   140a4:	ldr	r2, [sp, #16]
   140a8:	ldr	r3, [sp, #20]
   140ac:	ldr	r1, [fp, #8]
   140b0:	mov	ip, sp
   140b4:	str	r1, [ip]
   140b8:	bl	10f44 <lseek64@plt>
   140bc:	str	r1, [sp, #12]
   140c0:	str	r0, [sp, #8]
   140c4:	ldr	r0, [sp, #8]
   140c8:	ldr	r1, [sp, #12]
   140cc:	and	r0, r0, r1
   140d0:	cmn	r0, #1
   140d4:	bne	140e8 <__assert_fail@plt+0x3000>
   140d8:	b	140dc <__assert_fail@plt+0x2ff4>
   140dc:	mvn	r0, #0
   140e0:	str	r0, [fp, #-4]
   140e4:	b	14138 <__assert_fail@plt+0x3050>
   140e8:	ldr	r0, [fp, #-8]
   140ec:	ldr	r1, [r0]
   140f0:	bic	r1, r1, #16
   140f4:	str	r1, [r0]
   140f8:	ldr	r0, [sp, #8]
   140fc:	ldr	r1, [sp, #12]
   14100:	ldr	r2, [fp, #-8]
   14104:	str	r1, [r2, #84]	; 0x54
   14108:	str	r0, [r2, #80]	; 0x50
   1410c:	movw	r0, #0
   14110:	str	r0, [fp, #-4]
   14114:	b	14138 <__assert_fail@plt+0x3050>
   14118:	ldr	r0, [fp, #-8]
   1411c:	ldr	r2, [sp, #16]
   14120:	ldr	r3, [sp, #20]
   14124:	ldr	r1, [fp, #8]
   14128:	mov	ip, sp
   1412c:	str	r1, [ip]
   14130:	bl	11064 <fseeko64@plt>
   14134:	str	r0, [fp, #-4]
   14138:	ldr	r0, [fp, #-4]
   1413c:	mov	sp, fp
   14140:	pop	{fp, pc}
   14144:	push	{fp, lr}
   14148:	mov	fp, sp
   1414c:	bl	11010 <__errno_location@plt>
   14150:	movw	r1, #12
   14154:	str	r1, [r0]
   14158:	movw	r0, #0
   1415c:	pop	{fp, pc}
   14160:	push	{fp, lr}
   14164:	mov	fp, sp
   14168:	sub	sp, sp, #8
   1416c:	str	r0, [sp, #4]
   14170:	ldr	r0, [sp, #4]
   14174:	cmn	r0, #1
   14178:	bhi	1418c <__assert_fail@plt+0x30a4>
   1417c:	ldr	r0, [sp, #4]
   14180:	bl	1d520 <__assert_fail@plt+0xc438>
   14184:	str	r0, [sp]
   14188:	b	14194 <__assert_fail@plt+0x30ac>
   1418c:	bl	14144 <__assert_fail@plt+0x305c>
   14190:	str	r0, [sp]
   14194:	ldr	r0, [sp]
   14198:	mov	sp, fp
   1419c:	pop	{fp, pc}
   141a0:	push	{fp, lr}
   141a4:	mov	fp, sp
   141a8:	sub	sp, sp, #16
   141ac:	str	r0, [fp, #-4]
   141b0:	str	r1, [sp, #8]
   141b4:	ldr	r0, [sp, #8]
   141b8:	cmn	r0, #1
   141bc:	bhi	141f4 <__assert_fail@plt+0x310c>
   141c0:	ldr	r0, [fp, #-4]
   141c4:	ldr	r1, [sp, #8]
   141c8:	ldr	r2, [sp, #8]
   141cc:	cmp	r2, #0
   141d0:	movw	r2, #0
   141d4:	movne	r2, #1
   141d8:	mvn	r3, #0
   141dc:	eor	r2, r2, r3
   141e0:	and	r2, r2, #1
   141e4:	orr	r1, r1, r2
   141e8:	bl	1d590 <__assert_fail@plt+0xc4a8>
   141ec:	str	r0, [sp, #4]
   141f0:	b	141fc <__assert_fail@plt+0x3114>
   141f4:	bl	14144 <__assert_fail@plt+0x305c>
   141f8:	str	r0, [sp, #4]
   141fc:	ldr	r0, [sp, #4]
   14200:	mov	sp, fp
   14204:	pop	{fp, pc}
   14208:	push	{fp, lr}
   1420c:	mov	fp, sp
   14210:	sub	sp, sp, #16
   14214:	str	r0, [sp, #8]
   14218:	str	r1, [sp, #4]
   1421c:	ldr	r0, [sp, #8]
   14220:	mvn	r1, #0
   14224:	cmp	r1, r0
   14228:	bcs	1424c <__assert_fail@plt+0x3164>
   1422c:	ldr	r0, [sp, #4]
   14230:	cmp	r0, #0
   14234:	beq	14244 <__assert_fail@plt+0x315c>
   14238:	bl	14144 <__assert_fail@plt+0x305c>
   1423c:	str	r0, [fp, #-4]
   14240:	b	1428c <__assert_fail@plt+0x31a4>
   14244:	movw	r0, #0
   14248:	str	r0, [sp, #8]
   1424c:	ldr	r0, [sp, #4]
   14250:	mvn	r1, #0
   14254:	cmp	r1, r0
   14258:	bcs	1427c <__assert_fail@plt+0x3194>
   1425c:	ldr	r0, [sp, #8]
   14260:	cmp	r0, #0
   14264:	beq	14274 <__assert_fail@plt+0x318c>
   14268:	bl	14144 <__assert_fail@plt+0x305c>
   1426c:	str	r0, [fp, #-4]
   14270:	b	1428c <__assert_fail@plt+0x31a4>
   14274:	movw	r0, #0
   14278:	str	r0, [sp, #4]
   1427c:	ldr	r0, [sp, #8]
   14280:	ldr	r1, [sp, #4]
   14284:	bl	1d484 <__assert_fail@plt+0xc39c>
   14288:	str	r0, [fp, #-4]
   1428c:	ldr	r0, [fp, #-4]
   14290:	mov	sp, fp
   14294:	pop	{fp, pc}
   14298:	push	{fp, lr}
   1429c:	mov	fp, sp
   142a0:	sub	sp, sp, #16
   142a4:	str	r0, [fp, #-4]
   142a8:	str	r1, [sp, #8]
   142ac:	str	r2, [sp, #4]
   142b0:	ldr	r0, [sp, #8]
   142b4:	cmp	r0, #0
   142b8:	beq	142c8 <__assert_fail@plt+0x31e0>
   142bc:	ldr	r0, [sp, #4]
   142c0:	cmp	r0, #0
   142c4:	bne	142d4 <__assert_fail@plt+0x31ec>
   142c8:	movw	r0, #1
   142cc:	str	r0, [sp, #4]
   142d0:	str	r0, [sp, #8]
   142d4:	ldr	r0, [sp, #8]
   142d8:	cmn	r0, #1
   142dc:	bhi	14304 <__assert_fail@plt+0x321c>
   142e0:	ldr	r0, [sp, #4]
   142e4:	cmn	r0, #1
   142e8:	bhi	14304 <__assert_fail@plt+0x321c>
   142ec:	ldr	r0, [fp, #-4]
   142f0:	ldr	r1, [sp, #8]
   142f4:	ldr	r2, [sp, #4]
   142f8:	bl	16aac <__assert_fail@plt+0x59c4>
   142fc:	str	r0, [sp]
   14300:	b	1430c <__assert_fail@plt+0x3224>
   14304:	bl	14144 <__assert_fail@plt+0x305c>
   14308:	str	r0, [sp]
   1430c:	ldr	r0, [sp]
   14310:	mov	sp, fp
   14314:	pop	{fp, pc}
   14318:	push	{fp, lr}
   1431c:	mov	fp, sp
   14320:	sub	sp, sp, #24
   14324:	str	r0, [fp, #-4]
   14328:	ldr	r0, [fp, #-4]
   1432c:	movw	r1, #0
   14330:	cmp	r0, r1
   14334:	bne	14358 <__assert_fail@plt+0x3270>
   14338:	movw	r0, #328	; 0x148
   1433c:	movt	r0, #3
   14340:	ldr	r1, [r0]
   14344:	movw	r0, #60275	; 0xeb73
   14348:	movt	r0, #1
   1434c:	bl	110b8 <fputs@plt>
   14350:	str	r0, [sp, #8]
   14354:	bl	110d0 <abort@plt>
   14358:	ldr	r0, [fp, #-4]
   1435c:	movw	r1, #47	; 0x2f
   14360:	bl	1107c <strrchr@plt>
   14364:	str	r0, [fp, #-8]
   14368:	ldr	r0, [fp, #-8]
   1436c:	movw	r1, #0
   14370:	cmp	r0, r1
   14374:	beq	14388 <__assert_fail@plt+0x32a0>
   14378:	ldr	r0, [fp, #-8]
   1437c:	add	r0, r0, #1
   14380:	str	r0, [sp, #4]
   14384:	b	14390 <__assert_fail@plt+0x32a8>
   14388:	ldr	r0, [fp, #-4]
   1438c:	str	r0, [sp, #4]
   14390:	ldr	r0, [sp, #4]
   14394:	str	r0, [sp, #12]
   14398:	ldr	r0, [sp, #12]
   1439c:	ldr	r1, [fp, #-4]
   143a0:	sub	r0, r0, r1
   143a4:	cmp	r0, #7
   143a8:	blt	14414 <__assert_fail@plt+0x332c>
   143ac:	ldr	r0, [sp, #12]
   143b0:	mvn	r1, #6
   143b4:	add	r0, r0, r1
   143b8:	movw	r1, #60331	; 0xebab
   143bc:	movt	r1, #1
   143c0:	movw	r2, #7
   143c4:	bl	110c4 <strncmp@plt>
   143c8:	cmp	r0, #0
   143cc:	bne	14414 <__assert_fail@plt+0x332c>
   143d0:	ldr	r0, [sp, #12]
   143d4:	str	r0, [fp, #-4]
   143d8:	ldr	r0, [sp, #12]
   143dc:	movw	r1, #60339	; 0xebb3
   143e0:	movt	r1, #1
   143e4:	movw	r2, #3
   143e8:	bl	110c4 <strncmp@plt>
   143ec:	cmp	r0, #0
   143f0:	bne	14410 <__assert_fail@plt+0x3328>
   143f4:	ldr	r0, [sp, #12]
   143f8:	add	r0, r0, #3
   143fc:	str	r0, [fp, #-4]
   14400:	ldr	r0, [fp, #-4]
   14404:	movw	r1, #312	; 0x138
   14408:	movt	r1, #3
   1440c:	str	r0, [r1]
   14410:	b	14414 <__assert_fail@plt+0x332c>
   14414:	ldr	r0, [fp, #-4]
   14418:	movw	r1, #360	; 0x168
   1441c:	movt	r1, #3
   14420:	str	r0, [r1]
   14424:	ldr	r0, [fp, #-4]
   14428:	movw	r1, #316	; 0x13c
   1442c:	movt	r1, #3
   14430:	str	r0, [r1]
   14434:	mov	sp, fp
   14438:	pop	{fp, pc}
   1443c:	push	{fp, lr}
   14440:	mov	fp, sp
   14444:	sub	sp, sp, #24
   14448:	str	r0, [fp, #-4]
   1444c:	bl	11010 <__errno_location@plt>
   14450:	ldr	r0, [r0]
   14454:	str	r0, [fp, #-8]
   14458:	ldr	r0, [fp, #-4]
   1445c:	movw	r1, #0
   14460:	cmp	r0, r1
   14464:	beq	14474 <__assert_fail@plt+0x338c>
   14468:	ldr	r0, [fp, #-4]
   1446c:	str	r0, [sp, #8]
   14470:	b	14484 <__assert_fail@plt+0x339c>
   14474:	movw	r0, #364	; 0x16c
   14478:	movt	r0, #3
   1447c:	str	r0, [sp, #8]
   14480:	b	14484 <__assert_fail@plt+0x339c>
   14484:	ldr	r0, [sp, #8]
   14488:	movw	r1, #48	; 0x30
   1448c:	bl	1b2f0 <__assert_fail@plt+0xa208>
   14490:	str	r0, [sp, #12]
   14494:	ldr	r0, [fp, #-8]
   14498:	str	r0, [sp, #4]
   1449c:	bl	11010 <__errno_location@plt>
   144a0:	ldr	r1, [sp, #4]
   144a4:	str	r1, [r0]
   144a8:	ldr	r0, [sp, #12]
   144ac:	mov	sp, fp
   144b0:	pop	{fp, pc}
   144b4:	sub	sp, sp, #8
   144b8:	str	r0, [sp, #4]
   144bc:	ldr	r0, [sp, #4]
   144c0:	movw	r1, #0
   144c4:	cmp	r0, r1
   144c8:	beq	144d8 <__assert_fail@plt+0x33f0>
   144cc:	ldr	r0, [sp, #4]
   144d0:	str	r0, [sp]
   144d4:	b	144e8 <__assert_fail@plt+0x3400>
   144d8:	movw	r0, #364	; 0x16c
   144dc:	movt	r0, #3
   144e0:	str	r0, [sp]
   144e4:	b	144e8 <__assert_fail@plt+0x3400>
   144e8:	ldr	r0, [sp]
   144ec:	ldr	r0, [r0]
   144f0:	add	sp, sp, #8
   144f4:	bx	lr
   144f8:	sub	sp, sp, #16
   144fc:	str	r0, [sp, #12]
   14500:	str	r1, [sp, #8]
   14504:	ldr	r0, [sp, #8]
   14508:	ldr	r1, [sp, #12]
   1450c:	movw	r2, #0
   14510:	cmp	r1, r2
   14514:	str	r0, [sp, #4]
   14518:	beq	14528 <__assert_fail@plt+0x3440>
   1451c:	ldr	r0, [sp, #12]
   14520:	str	r0, [sp]
   14524:	b	14538 <__assert_fail@plt+0x3450>
   14528:	movw	r0, #364	; 0x16c
   1452c:	movt	r0, #3
   14530:	str	r0, [sp]
   14534:	b	14538 <__assert_fail@plt+0x3450>
   14538:	ldr	r0, [sp]
   1453c:	ldr	r1, [sp, #4]
   14540:	str	r1, [r0]
   14544:	add	sp, sp, #16
   14548:	bx	lr
   1454c:	sub	sp, sp, #32
   14550:	str	r0, [sp, #28]
   14554:	strb	r1, [sp, #27]
   14558:	str	r2, [sp, #20]
   1455c:	ldrb	r0, [sp, #27]
   14560:	strb	r0, [sp, #19]
   14564:	ldr	r0, [sp, #28]
   14568:	movw	r1, #0
   1456c:	cmp	r0, r1
   14570:	beq	14580 <__assert_fail@plt+0x3498>
   14574:	ldr	r0, [sp, #28]
   14578:	str	r0, [sp]
   1457c:	b	14590 <__assert_fail@plt+0x34a8>
   14580:	movw	r0, #364	; 0x16c
   14584:	movt	r0, #3
   14588:	str	r0, [sp]
   1458c:	b	14590 <__assert_fail@plt+0x34a8>
   14590:	ldr	r0, [sp]
   14594:	add	r0, r0, #8
   14598:	ldrb	r1, [sp, #19]
   1459c:	lsr	r1, r1, #5
   145a0:	add	r0, r0, r1, lsl #2
   145a4:	str	r0, [sp, #12]
   145a8:	ldrb	r0, [sp, #19]
   145ac:	and	r0, r0, #31
   145b0:	str	r0, [sp, #8]
   145b4:	ldr	r0, [sp, #12]
   145b8:	ldr	r0, [r0]
   145bc:	ldr	r1, [sp, #8]
   145c0:	lsr	r0, r0, r1
   145c4:	and	r0, r0, #1
   145c8:	str	r0, [sp, #4]
   145cc:	ldr	r0, [sp, #20]
   145d0:	and	r0, r0, #1
   145d4:	ldr	r1, [sp, #4]
   145d8:	eor	r0, r0, r1
   145dc:	ldr	r1, [sp, #8]
   145e0:	lsl	r0, r0, r1
   145e4:	ldr	r1, [sp, #12]
   145e8:	ldr	r2, [r1]
   145ec:	eor	r0, r2, r0
   145f0:	str	r0, [r1]
   145f4:	ldr	r0, [sp, #4]
   145f8:	add	sp, sp, #32
   145fc:	bx	lr
   14600:	sub	sp, sp, #12
   14604:	str	r0, [sp, #8]
   14608:	str	r1, [sp, #4]
   1460c:	ldr	r0, [sp, #8]
   14610:	movw	r1, #0
   14614:	cmp	r0, r1
   14618:	bne	14628 <__assert_fail@plt+0x3540>
   1461c:	movw	r0, #364	; 0x16c
   14620:	movt	r0, #3
   14624:	str	r0, [sp, #8]
   14628:	ldr	r0, [sp, #8]
   1462c:	ldr	r0, [r0, #4]
   14630:	str	r0, [sp]
   14634:	ldr	r0, [sp, #4]
   14638:	ldr	r1, [sp, #8]
   1463c:	str	r0, [r1, #4]
   14640:	ldr	r0, [sp]
   14644:	add	sp, sp, #12
   14648:	bx	lr
   1464c:	push	{fp, lr}
   14650:	mov	fp, sp
   14654:	sub	sp, sp, #16
   14658:	str	r0, [fp, #-4]
   1465c:	str	r1, [sp, #8]
   14660:	str	r2, [sp, #4]
   14664:	ldr	r0, [fp, #-4]
   14668:	movw	r1, #0
   1466c:	cmp	r0, r1
   14670:	bne	14680 <__assert_fail@plt+0x3598>
   14674:	movw	r0, #364	; 0x16c
   14678:	movt	r0, #3
   1467c:	str	r0, [fp, #-4]
   14680:	ldr	r0, [fp, #-4]
   14684:	movw	r1, #10
   14688:	str	r1, [r0]
   1468c:	ldr	r0, [sp, #8]
   14690:	movw	r1, #0
   14694:	cmp	r0, r1
   14698:	beq	146ac <__assert_fail@plt+0x35c4>
   1469c:	ldr	r0, [sp, #4]
   146a0:	movw	r1, #0
   146a4:	cmp	r0, r1
   146a8:	bne	146b0 <__assert_fail@plt+0x35c8>
   146ac:	bl	110d0 <abort@plt>
   146b0:	ldr	r0, [sp, #8]
   146b4:	ldr	r1, [fp, #-4]
   146b8:	str	r0, [r1, #40]	; 0x28
   146bc:	ldr	r0, [sp, #4]
   146c0:	ldr	r1, [fp, #-4]
   146c4:	str	r0, [r1, #44]	; 0x2c
   146c8:	mov	sp, fp
   146cc:	pop	{fp, pc}
   146d0:	push	{r4, r5, r6, sl, fp, lr}
   146d4:	add	fp, sp, #16
   146d8:	sub	sp, sp, #56	; 0x38
   146dc:	ldr	ip, [fp, #8]
   146e0:	str	r0, [fp, #-20]	; 0xffffffec
   146e4:	str	r1, [fp, #-24]	; 0xffffffe8
   146e8:	str	r2, [fp, #-28]	; 0xffffffe4
   146ec:	str	r3, [fp, #-32]	; 0xffffffe0
   146f0:	ldr	r0, [fp, #8]
   146f4:	movw	r1, #0
   146f8:	cmp	r0, r1
   146fc:	beq	1470c <__assert_fail@plt+0x3624>
   14700:	ldr	r0, [fp, #8]
   14704:	str	r0, [sp, #24]
   14708:	b	1471c <__assert_fail@plt+0x3634>
   1470c:	movw	r0, #364	; 0x16c
   14710:	movt	r0, #3
   14714:	str	r0, [sp, #24]
   14718:	b	1471c <__assert_fail@plt+0x3634>
   1471c:	ldr	r0, [sp, #24]
   14720:	str	r0, [sp, #36]	; 0x24
   14724:	bl	11010 <__errno_location@plt>
   14728:	ldr	r0, [r0]
   1472c:	str	r0, [sp, #32]
   14730:	ldr	r0, [fp, #-20]	; 0xffffffec
   14734:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14738:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1473c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14740:	ldr	ip, [sp, #36]	; 0x24
   14744:	ldr	ip, [ip]
   14748:	ldr	lr, [sp, #36]	; 0x24
   1474c:	ldr	lr, [lr, #4]
   14750:	ldr	r4, [sp, #36]	; 0x24
   14754:	add	r4, r4, #8
   14758:	ldr	r5, [sp, #36]	; 0x24
   1475c:	ldr	r5, [r5, #40]	; 0x28
   14760:	ldr	r6, [sp, #36]	; 0x24
   14764:	ldr	r6, [r6, #44]	; 0x2c
   14768:	str	ip, [sp]
   1476c:	str	lr, [sp, #4]
   14770:	str	r4, [sp, #8]
   14774:	str	r5, [sp, #12]
   14778:	str	r6, [sp, #16]
   1477c:	bl	147a4 <__assert_fail@plt+0x36bc>
   14780:	str	r0, [sp, #28]
   14784:	ldr	r0, [sp, #32]
   14788:	str	r0, [sp, #20]
   1478c:	bl	11010 <__errno_location@plt>
   14790:	ldr	r1, [sp, #20]
   14794:	str	r1, [r0]
   14798:	ldr	r0, [sp, #28]
   1479c:	sub	sp, fp, #16
   147a0:	pop	{r4, r5, r6, sl, fp, pc}
   147a4:	push	{r4, r5, r6, sl, fp, lr}
   147a8:	add	fp, sp, #16
   147ac:	sub	sp, sp, #160	; 0xa0
   147b0:	ldr	ip, [fp, #24]
   147b4:	ldr	lr, [fp, #20]
   147b8:	ldr	r4, [fp, #16]
   147bc:	ldr	r5, [fp, #12]
   147c0:	ldr	r6, [fp, #8]
   147c4:	str	r0, [fp, #-24]	; 0xffffffe8
   147c8:	str	r1, [fp, #-28]	; 0xffffffe4
   147cc:	str	r2, [fp, #-32]	; 0xffffffe0
   147d0:	str	r3, [fp, #-36]	; 0xffffffdc
   147d4:	movw	r0, #0
   147d8:	str	r0, [fp, #-44]	; 0xffffffd4
   147dc:	str	r0, [fp, #-48]	; 0xffffffd0
   147e0:	str	r0, [fp, #-52]	; 0xffffffcc
   147e4:	str	r0, [fp, #-56]	; 0xffffffc8
   147e8:	movw	r0, #0
   147ec:	strb	r0, [fp, #-57]	; 0xffffffc7
   147f0:	str	ip, [sp, #72]	; 0x48
   147f4:	str	lr, [sp, #68]	; 0x44
   147f8:	str	r4, [sp, #64]	; 0x40
   147fc:	str	r5, [sp, #60]	; 0x3c
   14800:	str	r6, [sp, #56]	; 0x38
   14804:	bl	10f50 <__ctype_get_mb_cur_max@plt>
   14808:	cmp	r0, #1
   1480c:	movw	r0, #0
   14810:	moveq	r0, #1
   14814:	and	r0, r0, #1
   14818:	strb	r0, [fp, #-58]	; 0xffffffc6
   1481c:	ldr	r0, [fp, #12]
   14820:	and	r0, r0, #2
   14824:	cmp	r0, #0
   14828:	movw	r0, #0
   1482c:	movne	r0, #1
   14830:	and	r0, r0, #1
   14834:	strb	r0, [fp, #-59]	; 0xffffffc5
   14838:	movw	r0, #0
   1483c:	strb	r0, [fp, #-60]	; 0xffffffc4
   14840:	strb	r0, [fp, #-61]	; 0xffffffc3
   14844:	movw	r0, #1
   14848:	strb	r0, [fp, #-62]	; 0xffffffc2
   1484c:	ldr	r0, [fp, #8]
   14850:	cmp	r0, #10
   14854:	str	r0, [sp, #52]	; 0x34
   14858:	bhi	14a80 <__assert_fail@plt+0x3998>
   1485c:	add	r0, pc, #8
   14860:	ldr	r1, [sp, #52]	; 0x34
   14864:	ldr	r0, [r0, r1, lsl #2]
   14868:	mov	pc, r0
   1486c:	andeq	r4, r1, r4, ror sl
   14870:	strdeq	r4, [r1], -r0
   14874:	andeq	r4, r1, r0, lsl sl
   14878:	andeq	r4, r1, r8, ror #19
   1487c:	strdeq	r4, [r1], -r8
   14880:	andeq	r4, r1, r8, lsr #17
   14884:	muleq	r1, r8, r8
   14888:	andeq	r4, r1, ip, lsl #18
   1488c:	andeq	r4, r1, r0, lsr #18
   14890:	andeq	r4, r1, r0, lsr #18
   14894:	andeq	r4, r1, r0, lsr #18
   14898:	movw	r0, #5
   1489c:	str	r0, [fp, #8]
   148a0:	movw	r0, #1
   148a4:	strb	r0, [fp, #-59]	; 0xffffffc5
   148a8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   148ac:	tst	r0, #1
   148b0:	bne	148ec <__assert_fail@plt+0x3804>
   148b4:	b	148b8 <__assert_fail@plt+0x37d0>
   148b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   148bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   148c0:	cmp	r0, r1
   148c4:	bcs	148dc <__assert_fail@plt+0x37f4>
   148c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   148cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   148d0:	add	r0, r0, r1
   148d4:	movw	r1, #34	; 0x22
   148d8:	strb	r1, [r0]
   148dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   148e0:	add	r0, r0, #1
   148e4:	str	r0, [fp, #-44]	; 0xffffffd4
   148e8:	b	148ec <__assert_fail@plt+0x3804>
   148ec:	movw	r0, #1
   148f0:	strb	r0, [fp, #-57]	; 0xffffffc7
   148f4:	movw	r0, #60419	; 0xec03
   148f8:	movt	r0, #1
   148fc:	str	r0, [fp, #-52]	; 0xffffffcc
   14900:	movw	r0, #1
   14904:	str	r0, [fp, #-56]	; 0xffffffc8
   14908:	b	14a84 <__assert_fail@plt+0x399c>
   1490c:	movw	r0, #1
   14910:	strb	r0, [fp, #-57]	; 0xffffffc7
   14914:	movw	r0, #0
   14918:	strb	r0, [fp, #-59]	; 0xffffffc5
   1491c:	b	14a84 <__assert_fail@plt+0x399c>
   14920:	ldr	r0, [fp, #8]
   14924:	cmp	r0, #10
   14928:	beq	14954 <__assert_fail@plt+0x386c>
   1492c:	ldr	r1, [fp, #8]
   14930:	movw	r0, #60421	; 0xec05
   14934:	movt	r0, #1
   14938:	bl	16998 <__assert_fail@plt+0x58b0>
   1493c:	str	r0, [fp, #20]
   14940:	ldr	r1, [fp, #8]
   14944:	movw	r0, #60423	; 0xec07
   14948:	movt	r0, #1
   1494c:	bl	16998 <__assert_fail@plt+0x58b0>
   14950:	str	r0, [fp, #24]
   14954:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14958:	tst	r0, #1
   1495c:	bne	149c8 <__assert_fail@plt+0x38e0>
   14960:	ldr	r0, [fp, #20]
   14964:	str	r0, [fp, #-52]	; 0xffffffcc
   14968:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1496c:	ldrsb	r0, [r0]
   14970:	cmp	r0, #0
   14974:	beq	149c4 <__assert_fail@plt+0x38dc>
   14978:	b	1497c <__assert_fail@plt+0x3894>
   1497c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14980:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14984:	cmp	r0, r1
   14988:	bcs	149a4 <__assert_fail@plt+0x38bc>
   1498c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14990:	ldrb	r0, [r0]
   14994:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14998:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1499c:	add	r1, r1, r2
   149a0:	strb	r0, [r1]
   149a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149a8:	add	r0, r0, #1
   149ac:	str	r0, [fp, #-44]	; 0xffffffd4
   149b0:	b	149b4 <__assert_fail@plt+0x38cc>
   149b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   149b8:	add	r0, r0, #1
   149bc:	str	r0, [fp, #-52]	; 0xffffffcc
   149c0:	b	14968 <__assert_fail@plt+0x3880>
   149c4:	b	149c8 <__assert_fail@plt+0x38e0>
   149c8:	movw	r0, #1
   149cc:	strb	r0, [fp, #-57]	; 0xffffffc7
   149d0:	ldr	r0, [fp, #24]
   149d4:	str	r0, [fp, #-52]	; 0xffffffcc
   149d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   149dc:	bl	10fec <strlen@plt>
   149e0:	str	r0, [fp, #-56]	; 0xffffffc8
   149e4:	b	14a84 <__assert_fail@plt+0x399c>
   149e8:	movw	r0, #1
   149ec:	strb	r0, [fp, #-57]	; 0xffffffc7
   149f0:	movw	r0, #1
   149f4:	strb	r0, [fp, #-59]	; 0xffffffc5
   149f8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   149fc:	tst	r0, #1
   14a00:	bne	14a0c <__assert_fail@plt+0x3924>
   14a04:	movw	r0, #1
   14a08:	strb	r0, [fp, #-57]	; 0xffffffc7
   14a0c:	b	14a10 <__assert_fail@plt+0x3928>
   14a10:	movw	r0, #2
   14a14:	str	r0, [fp, #8]
   14a18:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14a1c:	tst	r0, #1
   14a20:	bne	14a5c <__assert_fail@plt+0x3974>
   14a24:	b	14a28 <__assert_fail@plt+0x3940>
   14a28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a30:	cmp	r0, r1
   14a34:	bcs	14a4c <__assert_fail@plt+0x3964>
   14a38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a3c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14a40:	add	r0, r0, r1
   14a44:	movw	r1, #39	; 0x27
   14a48:	strb	r1, [r0]
   14a4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a50:	add	r0, r0, #1
   14a54:	str	r0, [fp, #-44]	; 0xffffffd4
   14a58:	b	14a5c <__assert_fail@plt+0x3974>
   14a5c:	movw	r0, #60423	; 0xec07
   14a60:	movt	r0, #1
   14a64:	str	r0, [fp, #-52]	; 0xffffffcc
   14a68:	movw	r0, #1
   14a6c:	str	r0, [fp, #-56]	; 0xffffffc8
   14a70:	b	14a84 <__assert_fail@plt+0x399c>
   14a74:	movw	r0, #0
   14a78:	strb	r0, [fp, #-59]	; 0xffffffc5
   14a7c:	b	14a84 <__assert_fail@plt+0x399c>
   14a80:	bl	110d0 <abort@plt>
   14a84:	movw	r0, #0
   14a88:	str	r0, [fp, #-40]	; 0xffffffd8
   14a8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14a90:	cmn	r0, #1
   14a94:	bne	14ac0 <__assert_fail@plt+0x39d8>
   14a98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14a9c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14aa0:	add	r0, r0, r1
   14aa4:	ldrb	r0, [r0]
   14aa8:	cmp	r0, #0
   14aac:	movw	r0, #0
   14ab0:	moveq	r0, #1
   14ab4:	and	r0, r0, #1
   14ab8:	str	r0, [sp, #48]	; 0x30
   14abc:	b	14adc <__assert_fail@plt+0x39f4>
   14ac0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14ac4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14ac8:	cmp	r0, r1
   14acc:	movw	r0, #0
   14ad0:	moveq	r0, #1
   14ad4:	and	r0, r0, #1
   14ad8:	str	r0, [sp, #48]	; 0x30
   14adc:	ldr	r0, [sp, #48]	; 0x30
   14ae0:	cmp	r0, #0
   14ae4:	movw	r0, #0
   14ae8:	movne	r0, #1
   14aec:	mvn	r1, #0
   14af0:	eor	r0, r0, r1
   14af4:	tst	r0, #1
   14af8:	beq	15ce4 <__assert_fail@plt+0x4bfc>
   14afc:	movw	r0, #0
   14b00:	strb	r0, [fp, #-65]	; 0xffffffbf
   14b04:	strb	r0, [fp, #-66]	; 0xffffffbe
   14b08:	strb	r0, [fp, #-67]	; 0xffffffbd
   14b0c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14b10:	tst	r0, #1
   14b14:	beq	14bc0 <__assert_fail@plt+0x3ad8>
   14b18:	ldr	r0, [fp, #8]
   14b1c:	cmp	r0, #2
   14b20:	beq	14bc0 <__assert_fail@plt+0x3ad8>
   14b24:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14b28:	cmp	r0, #0
   14b2c:	beq	14bc0 <__assert_fail@plt+0x3ad8>
   14b30:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14b34:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14b38:	add	r0, r0, r1
   14b3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14b40:	cmn	r1, #1
   14b44:	str	r0, [sp, #44]	; 0x2c
   14b48:	bne	14b70 <__assert_fail@plt+0x3a88>
   14b4c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14b50:	movw	r1, #1
   14b54:	cmp	r1, r0
   14b58:	bcs	14b70 <__assert_fail@plt+0x3a88>
   14b5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14b60:	bl	10fec <strlen@plt>
   14b64:	str	r0, [fp, #-36]	; 0xffffffdc
   14b68:	str	r0, [sp, #40]	; 0x28
   14b6c:	b	14b78 <__assert_fail@plt+0x3a90>
   14b70:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14b74:	str	r0, [sp, #40]	; 0x28
   14b78:	ldr	r0, [sp, #40]	; 0x28
   14b7c:	ldr	r1, [sp, #44]	; 0x2c
   14b80:	cmp	r1, r0
   14b84:	bhi	14bc0 <__assert_fail@plt+0x3ad8>
   14b88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14b8c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14b90:	add	r0, r0, r1
   14b94:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14b98:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14b9c:	bl	10f08 <memcmp@plt>
   14ba0:	cmp	r0, #0
   14ba4:	bne	14bc0 <__assert_fail@plt+0x3ad8>
   14ba8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14bac:	tst	r0, #1
   14bb0:	beq	14bb8 <__assert_fail@plt+0x3ad0>
   14bb4:	b	15e64 <__assert_fail@plt+0x4d7c>
   14bb8:	movw	r0, #1
   14bbc:	strb	r0, [fp, #-65]	; 0xffffffbf
   14bc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14bc4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14bc8:	ldrb	r0, [r0, r1]
   14bcc:	strb	r0, [fp, #-63]	; 0xffffffc1
   14bd0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14bd4:	mov	r1, r0
   14bd8:	cmp	r0, #126	; 0x7e
   14bdc:	str	r1, [sp, #36]	; 0x24
   14be0:	bhi	15450 <__assert_fail@plt+0x4368>
   14be4:	add	r0, pc, #8
   14be8:	ldr	r1, [sp, #36]	; 0x24
   14bec:	ldr	r0, [r0, r1, lsl #2]
   14bf0:	mov	pc, r0
   14bf4:	strdeq	r4, [r1], -r0
   14bf8:	andeq	r5, r1, r0, asr r4
   14bfc:	andeq	r5, r1, r0, asr r4
   14c00:	andeq	r5, r1, r0, asr r4
   14c04:	andeq	r5, r1, r0, asr r4
   14c08:	andeq	r5, r1, r0, asr r4
   14c0c:	andeq	r5, r1, r0, asr r4
   14c10:	strdeq	r5, [r1], -r8
   14c14:	andeq	r5, r1, r4, lsl #4
   14c18:	andeq	r5, r1, r4, lsr r2
   14c1c:	andeq	r5, r1, ip, lsl r2
   14c20:	andeq	r5, r1, r0, asr #4
   14c24:	andeq	r5, r1, r0, lsl r2
   14c28:	andeq	r5, r1, r8, lsr #4
   14c2c:	andeq	r5, r1, r0, asr r4
   14c30:	andeq	r5, r1, r0, asr r4
   14c34:	andeq	r5, r1, r0, asr r4
   14c38:	andeq	r5, r1, r0, asr r4
   14c3c:	andeq	r5, r1, r0, asr r4
   14c40:	andeq	r5, r1, r0, asr r4
   14c44:	andeq	r5, r1, r0, asr r4
   14c48:	andeq	r5, r1, r0, asr r4
   14c4c:	andeq	r5, r1, r0, asr r4
   14c50:	andeq	r5, r1, r0, asr r4
   14c54:	andeq	r5, r1, r0, asr r4
   14c58:	andeq	r5, r1, r0, asr r4
   14c5c:	andeq	r5, r1, r0, asr r4
   14c60:	andeq	r5, r1, r0, asr r4
   14c64:	andeq	r5, r1, r0, asr r4
   14c68:	andeq	r5, r1, r0, asr r4
   14c6c:	andeq	r5, r1, r0, asr r4
   14c70:	andeq	r5, r1, r0, asr r4
   14c74:	andeq	r5, r1, r4, lsr #6
   14c78:	andeq	r5, r1, ip, lsr #6
   14c7c:	andeq	r5, r1, ip, lsr #6
   14c80:	andeq	r5, r1, r0, lsl r3
   14c84:	andeq	r5, r1, ip, lsr #6
   14c88:	andeq	r5, r1, r4, asr #8
   14c8c:	andeq	r5, r1, ip, lsr #6
   14c90:	andeq	r5, r1, ip, asr #6
   14c94:	andeq	r5, r1, ip, lsr #6
   14c98:	andeq	r5, r1, ip, lsr #6
   14c9c:	andeq	r5, r1, ip, lsr #6
   14ca0:	andeq	r5, r1, r4, asr #8
   14ca4:	andeq	r5, r1, r4, asr #8
   14ca8:	andeq	r5, r1, r4, asr #8
   14cac:	andeq	r5, r1, r4, asr #8
   14cb0:	andeq	r5, r1, r4, asr #8
   14cb4:	andeq	r5, r1, r4, asr #8
   14cb8:	andeq	r5, r1, r4, asr #8
   14cbc:	andeq	r5, r1, r4, asr #8
   14cc0:	andeq	r5, r1, r4, asr #8
   14cc4:	andeq	r5, r1, r4, asr #8
   14cc8:	andeq	r5, r1, r4, asr #8
   14ccc:	andeq	r5, r1, r4, asr #8
   14cd0:	andeq	r5, r1, r4, asr #8
   14cd4:	andeq	r5, r1, r4, asr #8
   14cd8:	andeq	r5, r1, r4, asr #8
   14cdc:	andeq	r5, r1, r4, asr #8
   14ce0:	andeq	r5, r1, ip, lsr #6
   14ce4:	andeq	r5, r1, ip, lsr #6
   14ce8:	andeq	r5, r1, ip, lsr #6
   14cec:	andeq	r5, r1, ip, lsr #6
   14cf0:	strdeq	r4, [r1], -ip
   14cf4:	andeq	r5, r1, r0, asr r4
   14cf8:	andeq	r5, r1, r4, asr #8
   14cfc:	andeq	r5, r1, r4, asr #8
   14d00:	andeq	r5, r1, r4, asr #8
   14d04:	andeq	r5, r1, r4, asr #8
   14d08:	andeq	r5, r1, r4, asr #8
   14d0c:	andeq	r5, r1, r4, asr #8
   14d10:	andeq	r5, r1, r4, asr #8
   14d14:	andeq	r5, r1, r4, asr #8
   14d18:	andeq	r5, r1, r4, asr #8
   14d1c:	andeq	r5, r1, r4, asr #8
   14d20:	andeq	r5, r1, r4, asr #8
   14d24:	andeq	r5, r1, r4, asr #8
   14d28:	andeq	r5, r1, r4, asr #8
   14d2c:	andeq	r5, r1, r4, asr #8
   14d30:	andeq	r5, r1, r4, asr #8
   14d34:	andeq	r5, r1, r4, asr #8
   14d38:	andeq	r5, r1, r4, asr #8
   14d3c:	andeq	r5, r1, r4, asr #8
   14d40:	andeq	r5, r1, r4, asr #8
   14d44:	andeq	r5, r1, r4, asr #8
   14d48:	andeq	r5, r1, r4, asr #8
   14d4c:	andeq	r5, r1, r4, asr #8
   14d50:	andeq	r5, r1, r4, asr #8
   14d54:	andeq	r5, r1, r4, asr #8
   14d58:	andeq	r5, r1, r4, asr #8
   14d5c:	andeq	r5, r1, r4, asr #8
   14d60:	andeq	r5, r1, ip, lsr #6
   14d64:	andeq	r5, r1, ip, asr #4
   14d68:	andeq	r5, r1, r4, asr #8
   14d6c:	andeq	r5, r1, ip, lsr #6
   14d70:	andeq	r5, r1, r4, asr #8
   14d74:	andeq	r5, r1, ip, lsr #6
   14d78:	andeq	r5, r1, r4, asr #8
   14d7c:	andeq	r5, r1, r4, asr #8
   14d80:	andeq	r5, r1, r4, asr #8
   14d84:	andeq	r5, r1, r4, asr #8
   14d88:	andeq	r5, r1, r4, asr #8
   14d8c:	andeq	r5, r1, r4, asr #8
   14d90:	andeq	r5, r1, r4, asr #8
   14d94:	andeq	r5, r1, r4, asr #8
   14d98:	andeq	r5, r1, r4, asr #8
   14d9c:	andeq	r5, r1, r4, asr #8
   14da0:	andeq	r5, r1, r4, asr #8
   14da4:	andeq	r5, r1, r4, asr #8
   14da8:	andeq	r5, r1, r4, asr #8
   14dac:	andeq	r5, r1, r4, asr #8
   14db0:	andeq	r5, r1, r4, asr #8
   14db4:	andeq	r5, r1, r4, asr #8
   14db8:	andeq	r5, r1, r4, asr #8
   14dbc:	andeq	r5, r1, r4, asr #8
   14dc0:	andeq	r5, r1, r4, asr #8
   14dc4:	andeq	r5, r1, r4, asr #8
   14dc8:	andeq	r5, r1, r4, asr #8
   14dcc:	andeq	r5, r1, r4, asr #8
   14dd0:	andeq	r5, r1, r4, asr #8
   14dd4:	andeq	r5, r1, r4, asr #8
   14dd8:	andeq	r5, r1, r4, asr #8
   14ddc:	andeq	r5, r1, r4, asr #8
   14de0:	ldrdeq	r5, [r1], -ip
   14de4:	andeq	r5, r1, ip, lsr #6
   14de8:	ldrdeq	r5, [r1], -ip
   14dec:	andeq	r5, r1, r0, lsl r3
   14df0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14df4:	tst	r0, #1
   14df8:	beq	14fe0 <__assert_fail@plt+0x3ef8>
   14dfc:	b	14e00 <__assert_fail@plt+0x3d18>
   14e00:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14e04:	tst	r0, #1
   14e08:	beq	14e10 <__assert_fail@plt+0x3d28>
   14e0c:	b	15e64 <__assert_fail@plt+0x4d7c>
   14e10:	movw	r0, #1
   14e14:	strb	r0, [fp, #-66]	; 0xffffffbe
   14e18:	ldr	r0, [fp, #8]
   14e1c:	cmp	r0, #2
   14e20:	bne	14ed4 <__assert_fail@plt+0x3dec>
   14e24:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14e28:	tst	r0, #1
   14e2c:	bne	14ed4 <__assert_fail@plt+0x3dec>
   14e30:	b	14e34 <__assert_fail@plt+0x3d4c>
   14e34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14e3c:	cmp	r0, r1
   14e40:	bcs	14e58 <__assert_fail@plt+0x3d70>
   14e44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e48:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14e4c:	add	r0, r0, r1
   14e50:	movw	r1, #39	; 0x27
   14e54:	strb	r1, [r0]
   14e58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e5c:	add	r0, r0, #1
   14e60:	str	r0, [fp, #-44]	; 0xffffffd4
   14e64:	b	14e68 <__assert_fail@plt+0x3d80>
   14e68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14e70:	cmp	r0, r1
   14e74:	bcs	14e8c <__assert_fail@plt+0x3da4>
   14e78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e7c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14e80:	add	r0, r0, r1
   14e84:	movw	r1, #36	; 0x24
   14e88:	strb	r1, [r0]
   14e8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e90:	add	r0, r0, #1
   14e94:	str	r0, [fp, #-44]	; 0xffffffd4
   14e98:	b	14e9c <__assert_fail@plt+0x3db4>
   14e9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ea0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14ea4:	cmp	r0, r1
   14ea8:	bcs	14ec0 <__assert_fail@plt+0x3dd8>
   14eac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14eb0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14eb4:	add	r0, r0, r1
   14eb8:	movw	r1, #39	; 0x27
   14ebc:	strb	r1, [r0]
   14ec0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ec4:	add	r0, r0, #1
   14ec8:	str	r0, [fp, #-44]	; 0xffffffd4
   14ecc:	movw	r0, #1
   14ed0:	strb	r0, [fp, #-60]	; 0xffffffc4
   14ed4:	b	14ed8 <__assert_fail@plt+0x3df0>
   14ed8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14edc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14ee0:	cmp	r0, r1
   14ee4:	bcs	14efc <__assert_fail@plt+0x3e14>
   14ee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14eec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14ef0:	add	r0, r0, r1
   14ef4:	movw	r1, #92	; 0x5c
   14ef8:	strb	r1, [r0]
   14efc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f00:	add	r0, r0, #1
   14f04:	str	r0, [fp, #-44]	; 0xffffffd4
   14f08:	b	14f0c <__assert_fail@plt+0x3e24>
   14f0c:	ldr	r0, [fp, #8]
   14f10:	cmp	r0, #2
   14f14:	beq	14fd4 <__assert_fail@plt+0x3eec>
   14f18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14f1c:	add	r0, r0, #1
   14f20:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14f24:	cmp	r0, r1
   14f28:	bcs	14fd4 <__assert_fail@plt+0x3eec>
   14f2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14f30:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14f34:	add	r1, r1, #1
   14f38:	add	r0, r0, r1
   14f3c:	ldrb	r0, [r0]
   14f40:	movw	r1, #48	; 0x30
   14f44:	cmp	r1, r0
   14f48:	bgt	14fd4 <__assert_fail@plt+0x3eec>
   14f4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14f50:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14f54:	add	r1, r1, #1
   14f58:	add	r0, r0, r1
   14f5c:	ldrb	r0, [r0]
   14f60:	cmp	r0, #57	; 0x39
   14f64:	bgt	14fd4 <__assert_fail@plt+0x3eec>
   14f68:	b	14f6c <__assert_fail@plt+0x3e84>
   14f6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14f74:	cmp	r0, r1
   14f78:	bcs	14f90 <__assert_fail@plt+0x3ea8>
   14f7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f80:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14f84:	add	r0, r0, r1
   14f88:	movw	r1, #48	; 0x30
   14f8c:	strb	r1, [r0]
   14f90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f94:	add	r0, r0, #1
   14f98:	str	r0, [fp, #-44]	; 0xffffffd4
   14f9c:	b	14fa0 <__assert_fail@plt+0x3eb8>
   14fa0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14fa4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14fa8:	cmp	r0, r1
   14fac:	bcs	14fc4 <__assert_fail@plt+0x3edc>
   14fb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14fb4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14fb8:	add	r0, r0, r1
   14fbc:	movw	r1, #48	; 0x30
   14fc0:	strb	r1, [r0]
   14fc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14fc8:	add	r0, r0, #1
   14fcc:	str	r0, [fp, #-44]	; 0xffffffd4
   14fd0:	b	14fd4 <__assert_fail@plt+0x3eec>
   14fd4:	movw	r0, #48	; 0x30
   14fd8:	strb	r0, [fp, #-63]	; 0xffffffc1
   14fdc:	b	14ff8 <__assert_fail@plt+0x3f10>
   14fe0:	ldr	r0, [fp, #12]
   14fe4:	and	r0, r0, #1
   14fe8:	cmp	r0, #0
   14fec:	beq	14ff4 <__assert_fail@plt+0x3f0c>
   14ff0:	b	15cd4 <__assert_fail@plt+0x4bec>
   14ff4:	b	14ff8 <__assert_fail@plt+0x3f10>
   14ff8:	b	15a70 <__assert_fail@plt+0x4988>
   14ffc:	ldr	r0, [fp, #8]
   15000:	cmp	r0, #2
   15004:	str	r0, [sp, #32]
   15008:	beq	15020 <__assert_fail@plt+0x3f38>
   1500c:	b	15010 <__assert_fail@plt+0x3f28>
   15010:	ldr	r0, [sp, #32]
   15014:	cmp	r0, #5
   15018:	beq	15034 <__assert_fail@plt+0x3f4c>
   1501c:	b	151f0 <__assert_fail@plt+0x4108>
   15020:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15024:	tst	r0, #1
   15028:	beq	15030 <__assert_fail@plt+0x3f48>
   1502c:	b	15e64 <__assert_fail@plt+0x4d7c>
   15030:	b	151f4 <__assert_fail@plt+0x410c>
   15034:	ldr	r0, [fp, #12]
   15038:	and	r0, r0, #4
   1503c:	cmp	r0, #0
   15040:	beq	151ec <__assert_fail@plt+0x4104>
   15044:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15048:	add	r0, r0, #2
   1504c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15050:	cmp	r0, r1
   15054:	bcs	151ec <__assert_fail@plt+0x4104>
   15058:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1505c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15060:	add	r1, r1, #1
   15064:	add	r0, r0, r1
   15068:	ldrb	r0, [r0]
   1506c:	cmp	r0, #63	; 0x3f
   15070:	bne	151ec <__assert_fail@plt+0x4104>
   15074:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15078:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1507c:	add	r0, r1, r0
   15080:	ldrb	r0, [r0, #2]
   15084:	mov	r1, r0
   15088:	cmp	r0, #33	; 0x21
   1508c:	str	r1, [sp, #28]
   15090:	beq	150e0 <__assert_fail@plt+0x3ff8>
   15094:	b	15098 <__assert_fail@plt+0x3fb0>
   15098:	ldr	r0, [sp, #28]
   1509c:	sub	r1, r0, #39	; 0x27
   150a0:	cmp	r1, #3
   150a4:	bcc	150e0 <__assert_fail@plt+0x3ff8>
   150a8:	b	150ac <__assert_fail@plt+0x3fc4>
   150ac:	ldr	r0, [sp, #28]
   150b0:	cmp	r0, #45	; 0x2d
   150b4:	beq	150e0 <__assert_fail@plt+0x3ff8>
   150b8:	b	150bc <__assert_fail@plt+0x3fd4>
   150bc:	ldr	r0, [sp, #28]
   150c0:	cmp	r0, #47	; 0x2f
   150c4:	beq	150e0 <__assert_fail@plt+0x3ff8>
   150c8:	b	150cc <__assert_fail@plt+0x3fe4>
   150cc:	ldr	r0, [sp, #28]
   150d0:	sub	r1, r0, #60	; 0x3c
   150d4:	cmp	r1, #2
   150d8:	bhi	151e4 <__assert_fail@plt+0x40fc>
   150dc:	b	150e0 <__assert_fail@plt+0x3ff8>
   150e0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   150e4:	tst	r0, #1
   150e8:	beq	150f0 <__assert_fail@plt+0x4008>
   150ec:	b	15e64 <__assert_fail@plt+0x4d7c>
   150f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   150f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   150f8:	add	r1, r1, #2
   150fc:	add	r0, r0, r1
   15100:	ldrb	r0, [r0]
   15104:	strb	r0, [fp, #-63]	; 0xffffffc1
   15108:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1510c:	add	r0, r0, #2
   15110:	str	r0, [fp, #-40]	; 0xffffffd8
   15114:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15118:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1511c:	cmp	r0, r1
   15120:	bcs	15138 <__assert_fail@plt+0x4050>
   15124:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15128:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1512c:	add	r0, r0, r1
   15130:	movw	r1, #63	; 0x3f
   15134:	strb	r1, [r0]
   15138:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1513c:	add	r0, r0, #1
   15140:	str	r0, [fp, #-44]	; 0xffffffd4
   15144:	b	15148 <__assert_fail@plt+0x4060>
   15148:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1514c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15150:	cmp	r0, r1
   15154:	bcs	1516c <__assert_fail@plt+0x4084>
   15158:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1515c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15160:	add	r0, r0, r1
   15164:	movw	r1, #34	; 0x22
   15168:	strb	r1, [r0]
   1516c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15170:	add	r0, r0, #1
   15174:	str	r0, [fp, #-44]	; 0xffffffd4
   15178:	b	1517c <__assert_fail@plt+0x4094>
   1517c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15180:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15184:	cmp	r0, r1
   15188:	bcs	151a0 <__assert_fail@plt+0x40b8>
   1518c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15190:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15194:	add	r0, r0, r1
   15198:	movw	r1, #34	; 0x22
   1519c:	strb	r1, [r0]
   151a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   151a4:	add	r0, r0, #1
   151a8:	str	r0, [fp, #-44]	; 0xffffffd4
   151ac:	b	151b0 <__assert_fail@plt+0x40c8>
   151b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   151b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   151b8:	cmp	r0, r1
   151bc:	bcs	151d4 <__assert_fail@plt+0x40ec>
   151c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   151c8:	add	r0, r0, r1
   151cc:	movw	r1, #63	; 0x3f
   151d0:	strb	r1, [r0]
   151d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   151d8:	add	r0, r0, #1
   151dc:	str	r0, [fp, #-44]	; 0xffffffd4
   151e0:	b	151e8 <__assert_fail@plt+0x4100>
   151e4:	b	151e8 <__assert_fail@plt+0x4100>
   151e8:	b	151ec <__assert_fail@plt+0x4104>
   151ec:	b	151f4 <__assert_fail@plt+0x410c>
   151f0:	b	151f4 <__assert_fail@plt+0x410c>
   151f4:	b	15a70 <__assert_fail@plt+0x4988>
   151f8:	movw	r0, #97	; 0x61
   151fc:	strb	r0, [fp, #-64]	; 0xffffffc0
   15200:	b	152c0 <__assert_fail@plt+0x41d8>
   15204:	movw	r0, #98	; 0x62
   15208:	strb	r0, [fp, #-64]	; 0xffffffc0
   1520c:	b	152c0 <__assert_fail@plt+0x41d8>
   15210:	movw	r0, #102	; 0x66
   15214:	strb	r0, [fp, #-64]	; 0xffffffc0
   15218:	b	152c0 <__assert_fail@plt+0x41d8>
   1521c:	movw	r0, #110	; 0x6e
   15220:	strb	r0, [fp, #-64]	; 0xffffffc0
   15224:	b	152a0 <__assert_fail@plt+0x41b8>
   15228:	movw	r0, #114	; 0x72
   1522c:	strb	r0, [fp, #-64]	; 0xffffffc0
   15230:	b	152a0 <__assert_fail@plt+0x41b8>
   15234:	movw	r0, #116	; 0x74
   15238:	strb	r0, [fp, #-64]	; 0xffffffc0
   1523c:	b	152a0 <__assert_fail@plt+0x41b8>
   15240:	movw	r0, #118	; 0x76
   15244:	strb	r0, [fp, #-64]	; 0xffffffc0
   15248:	b	152c0 <__assert_fail@plt+0x41d8>
   1524c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15250:	strb	r0, [fp, #-64]	; 0xffffffc0
   15254:	ldr	r0, [fp, #8]
   15258:	cmp	r0, #2
   1525c:	bne	15274 <__assert_fail@plt+0x418c>
   15260:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15264:	tst	r0, #1
   15268:	beq	15270 <__assert_fail@plt+0x4188>
   1526c:	b	15e64 <__assert_fail@plt+0x4d7c>
   15270:	b	15bf8 <__assert_fail@plt+0x4b10>
   15274:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15278:	tst	r0, #1
   1527c:	beq	1529c <__assert_fail@plt+0x41b4>
   15280:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15284:	tst	r0, #1
   15288:	beq	1529c <__assert_fail@plt+0x41b4>
   1528c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15290:	cmp	r0, #0
   15294:	beq	1529c <__assert_fail@plt+0x41b4>
   15298:	b	15bf8 <__assert_fail@plt+0x4b10>
   1529c:	b	152a0 <__assert_fail@plt+0x41b8>
   152a0:	ldr	r0, [fp, #8]
   152a4:	cmp	r0, #2
   152a8:	bne	152bc <__assert_fail@plt+0x41d4>
   152ac:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   152b0:	tst	r0, #1
   152b4:	beq	152bc <__assert_fail@plt+0x41d4>
   152b8:	b	15e64 <__assert_fail@plt+0x4d7c>
   152bc:	b	152c0 <__assert_fail@plt+0x41d8>
   152c0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   152c4:	tst	r0, #1
   152c8:	beq	152d8 <__assert_fail@plt+0x41f0>
   152cc:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   152d0:	strb	r0, [fp, #-63]	; 0xffffffc1
   152d4:	b	15ae4 <__assert_fail@plt+0x49fc>
   152d8:	b	15a70 <__assert_fail@plt+0x4988>
   152dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   152e0:	cmn	r0, #1
   152e4:	bne	152fc <__assert_fail@plt+0x4214>
   152e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   152ec:	ldrb	r0, [r0, #1]
   152f0:	cmp	r0, #0
   152f4:	beq	1530c <__assert_fail@plt+0x4224>
   152f8:	b	15308 <__assert_fail@plt+0x4220>
   152fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15300:	cmp	r0, #1
   15304:	beq	1530c <__assert_fail@plt+0x4224>
   15308:	b	15a70 <__assert_fail@plt+0x4988>
   1530c:	b	15310 <__assert_fail@plt+0x4228>
   15310:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15314:	cmp	r0, #0
   15318:	beq	15320 <__assert_fail@plt+0x4238>
   1531c:	b	15a70 <__assert_fail@plt+0x4988>
   15320:	b	15324 <__assert_fail@plt+0x423c>
   15324:	movw	r0, #1
   15328:	strb	r0, [fp, #-67]	; 0xffffffbd
   1532c:	ldr	r0, [fp, #8]
   15330:	cmp	r0, #2
   15334:	bne	15348 <__assert_fail@plt+0x4260>
   15338:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1533c:	tst	r0, #1
   15340:	beq	15348 <__assert_fail@plt+0x4260>
   15344:	b	15e64 <__assert_fail@plt+0x4d7c>
   15348:	b	15a70 <__assert_fail@plt+0x4988>
   1534c:	movw	r0, #1
   15350:	strb	r0, [fp, #-61]	; 0xffffffc3
   15354:	strb	r0, [fp, #-67]	; 0xffffffbd
   15358:	ldr	r0, [fp, #8]
   1535c:	cmp	r0, #2
   15360:	bne	15440 <__assert_fail@plt+0x4358>
   15364:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15368:	tst	r0, #1
   1536c:	beq	15374 <__assert_fail@plt+0x428c>
   15370:	b	15e64 <__assert_fail@plt+0x4d7c>
   15374:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15378:	cmp	r0, #0
   1537c:	beq	1539c <__assert_fail@plt+0x42b4>
   15380:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15384:	cmp	r0, #0
   15388:	bne	1539c <__assert_fail@plt+0x42b4>
   1538c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15390:	str	r0, [fp, #-48]	; 0xffffffd0
   15394:	movw	r0, #0
   15398:	str	r0, [fp, #-28]	; 0xffffffe4
   1539c:	b	153a0 <__assert_fail@plt+0x42b8>
   153a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   153a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   153a8:	cmp	r0, r1
   153ac:	bcs	153c4 <__assert_fail@plt+0x42dc>
   153b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   153b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   153b8:	add	r0, r0, r1
   153bc:	movw	r1, #39	; 0x27
   153c0:	strb	r1, [r0]
   153c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   153c8:	add	r0, r0, #1
   153cc:	str	r0, [fp, #-44]	; 0xffffffd4
   153d0:	b	153d4 <__assert_fail@plt+0x42ec>
   153d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   153d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   153dc:	cmp	r0, r1
   153e0:	bcs	153f8 <__assert_fail@plt+0x4310>
   153e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   153e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   153ec:	add	r0, r0, r1
   153f0:	movw	r1, #92	; 0x5c
   153f4:	strb	r1, [r0]
   153f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   153fc:	add	r0, r0, #1
   15400:	str	r0, [fp, #-44]	; 0xffffffd4
   15404:	b	15408 <__assert_fail@plt+0x4320>
   15408:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1540c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15410:	cmp	r0, r1
   15414:	bcs	1542c <__assert_fail@plt+0x4344>
   15418:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1541c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15420:	add	r0, r0, r1
   15424:	movw	r1, #39	; 0x27
   15428:	strb	r1, [r0]
   1542c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15430:	add	r0, r0, #1
   15434:	str	r0, [fp, #-44]	; 0xffffffd4
   15438:	movw	r0, #0
   1543c:	strb	r0, [fp, #-60]	; 0xffffffc4
   15440:	b	15a70 <__assert_fail@plt+0x4988>
   15444:	movw	r0, #1
   15448:	strb	r0, [fp, #-67]	; 0xffffffbd
   1544c:	b	15a70 <__assert_fail@plt+0x4988>
   15450:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   15454:	tst	r0, #1
   15458:	beq	15498 <__assert_fail@plt+0x43b0>
   1545c:	mov	r0, #1
   15460:	str	r0, [fp, #-72]	; 0xffffffb8
   15464:	bl	10fc8 <__ctype_b_loc@plt>
   15468:	ldr	r0, [r0]
   1546c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15470:	mov	r2, r1
   15474:	add	r0, r0, r1, lsl #1
   15478:	ldrh	r0, [r0]
   1547c:	and	r0, r0, #16384	; 0x4000
   15480:	cmp	r0, #0
   15484:	movw	r0, #0
   15488:	movne	r0, #1
   1548c:	and	r0, r0, #1
   15490:	strb	r0, [fp, #-73]	; 0xffffffb7
   15494:	b	15724 <__assert_fail@plt+0x463c>
   15498:	sub	r0, fp, #84	; 0x54
   1549c:	movw	r1, #0
   154a0:	and	r1, r1, #255	; 0xff
   154a4:	movw	r2, #8
   154a8:	bl	11028 <memset@plt>
   154ac:	movw	r0, #0
   154b0:	str	r0, [fp, #-72]	; 0xffffffb8
   154b4:	movw	r0, #1
   154b8:	strb	r0, [fp, #-73]	; 0xffffffb7
   154bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   154c0:	cmn	r0, #1
   154c4:	bne	154d4 <__assert_fail@plt+0x43ec>
   154c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   154cc:	bl	10fec <strlen@plt>
   154d0:	str	r0, [fp, #-36]	; 0xffffffdc
   154d4:	b	154d8 <__assert_fail@plt+0x43f0>
   154d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   154dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   154e0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   154e4:	add	r1, r1, r2
   154e8:	add	r1, r0, r1
   154ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   154f0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   154f4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   154f8:	add	r2, r2, r3
   154fc:	sub	r2, r0, r2
   15500:	add	r0, sp, #88	; 0x58
   15504:	sub	r3, fp, #84	; 0x54
   15508:	bl	1d858 <__assert_fail@plt+0xc770>
   1550c:	str	r0, [sp, #84]	; 0x54
   15510:	ldr	r0, [sp, #84]	; 0x54
   15514:	cmp	r0, #0
   15518:	bne	15520 <__assert_fail@plt+0x4438>
   1551c:	b	15720 <__assert_fail@plt+0x4638>
   15520:	ldr	r0, [sp, #84]	; 0x54
   15524:	cmn	r0, #1
   15528:	bne	15538 <__assert_fail@plt+0x4450>
   1552c:	movw	r0, #0
   15530:	strb	r0, [fp, #-73]	; 0xffffffb7
   15534:	b	15720 <__assert_fail@plt+0x4638>
   15538:	ldr	r0, [sp, #84]	; 0x54
   1553c:	cmn	r0, #2
   15540:	bne	155b4 <__assert_fail@plt+0x44cc>
   15544:	movw	r0, #0
   15548:	strb	r0, [fp, #-73]	; 0xffffffb7
   1554c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15550:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15554:	add	r0, r0, r1
   15558:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1555c:	cmp	r0, r1
   15560:	movw	r0, #0
   15564:	str	r0, [sp, #24]
   15568:	bcs	15594 <__assert_fail@plt+0x44ac>
   1556c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15570:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15574:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15578:	add	r1, r1, r2
   1557c:	add	r0, r0, r1
   15580:	ldrb	r0, [r0]
   15584:	cmp	r0, #0
   15588:	movw	r0, #0
   1558c:	movne	r0, #1
   15590:	str	r0, [sp, #24]
   15594:	ldr	r0, [sp, #24]
   15598:	tst	r0, #1
   1559c:	beq	155b0 <__assert_fail@plt+0x44c8>
   155a0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   155a4:	add	r0, r0, #1
   155a8:	str	r0, [fp, #-72]	; 0xffffffb8
   155ac:	b	1554c <__assert_fail@plt+0x4464>
   155b0:	b	15720 <__assert_fail@plt+0x4638>
   155b4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   155b8:	tst	r0, #1
   155bc:	beq	156c8 <__assert_fail@plt+0x45e0>
   155c0:	ldr	r0, [fp, #8]
   155c4:	cmp	r0, #2
   155c8:	bne	156c8 <__assert_fail@plt+0x45e0>
   155cc:	movw	r0, #1
   155d0:	str	r0, [sp, #80]	; 0x50
   155d4:	ldr	r0, [sp, #80]	; 0x50
   155d8:	ldr	r1, [sp, #84]	; 0x54
   155dc:	cmp	r0, r1
   155e0:	bcs	156c4 <__assert_fail@plt+0x45dc>
   155e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   155e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   155ec:	ldr	r2, [fp, #-72]	; 0xffffffb8
   155f0:	add	r1, r1, r2
   155f4:	ldr	r2, [sp, #80]	; 0x50
   155f8:	add	r1, r1, r2
   155fc:	ldrb	r0, [r0, r1]
   15600:	sub	r0, r0, #91	; 0x5b
   15604:	cmp	r0, #33	; 0x21
   15608:	str	r0, [sp, #20]
   1560c:	bhi	156ac <__assert_fail@plt+0x45c4>
   15610:	add	r0, pc, #8
   15614:	ldr	r1, [sp, #20]
   15618:	ldr	r0, [r0, r1, lsl #2]
   1561c:	mov	pc, r0
   15620:	andeq	r5, r1, r8, lsr #13
   15624:	andeq	r5, r1, r8, lsr #13
   15628:	andeq	r5, r1, ip, lsr #13
   1562c:	andeq	r5, r1, r8, lsr #13
   15630:	andeq	r5, r1, ip, lsr #13
   15634:	andeq	r5, r1, r8, lsr #13
   15638:	andeq	r5, r1, ip, lsr #13
   1563c:	andeq	r5, r1, ip, lsr #13
   15640:	andeq	r5, r1, ip, lsr #13
   15644:	andeq	r5, r1, ip, lsr #13
   15648:	andeq	r5, r1, ip, lsr #13
   1564c:	andeq	r5, r1, ip, lsr #13
   15650:	andeq	r5, r1, ip, lsr #13
   15654:	andeq	r5, r1, ip, lsr #13
   15658:	andeq	r5, r1, ip, lsr #13
   1565c:	andeq	r5, r1, ip, lsr #13
   15660:	andeq	r5, r1, ip, lsr #13
   15664:	andeq	r5, r1, ip, lsr #13
   15668:	andeq	r5, r1, ip, lsr #13
   1566c:	andeq	r5, r1, ip, lsr #13
   15670:	andeq	r5, r1, ip, lsr #13
   15674:	andeq	r5, r1, ip, lsr #13
   15678:	andeq	r5, r1, ip, lsr #13
   1567c:	andeq	r5, r1, ip, lsr #13
   15680:	andeq	r5, r1, ip, lsr #13
   15684:	andeq	r5, r1, ip, lsr #13
   15688:	andeq	r5, r1, ip, lsr #13
   1568c:	andeq	r5, r1, ip, lsr #13
   15690:	andeq	r5, r1, ip, lsr #13
   15694:	andeq	r5, r1, ip, lsr #13
   15698:	andeq	r5, r1, ip, lsr #13
   1569c:	andeq	r5, r1, ip, lsr #13
   156a0:	andeq	r5, r1, ip, lsr #13
   156a4:	andeq	r5, r1, r8, lsr #13
   156a8:	b	15e64 <__assert_fail@plt+0x4d7c>
   156ac:	b	156b0 <__assert_fail@plt+0x45c8>
   156b0:	b	156b4 <__assert_fail@plt+0x45cc>
   156b4:	ldr	r0, [sp, #80]	; 0x50
   156b8:	add	r0, r0, #1
   156bc:	str	r0, [sp, #80]	; 0x50
   156c0:	b	155d4 <__assert_fail@plt+0x44ec>
   156c4:	b	156c8 <__assert_fail@plt+0x45e0>
   156c8:	ldr	r0, [sp, #88]	; 0x58
   156cc:	bl	10f38 <iswprint@plt>
   156d0:	cmp	r0, #0
   156d4:	bne	156e0 <__assert_fail@plt+0x45f8>
   156d8:	movw	r0, #0
   156dc:	strb	r0, [fp, #-73]	; 0xffffffb7
   156e0:	ldr	r0, [sp, #84]	; 0x54
   156e4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   156e8:	add	r0, r1, r0
   156ec:	str	r0, [fp, #-72]	; 0xffffffb8
   156f0:	b	156f4 <__assert_fail@plt+0x460c>
   156f4:	b	156f8 <__assert_fail@plt+0x4610>
   156f8:	b	156fc <__assert_fail@plt+0x4614>
   156fc:	sub	r0, fp, #84	; 0x54
   15700:	bl	10ef0 <mbsinit@plt>
   15704:	cmp	r0, #0
   15708:	movw	r0, #0
   1570c:	movne	r0, #1
   15710:	mvn	r1, #0
   15714:	eor	r0, r0, r1
   15718:	tst	r0, #1
   1571c:	bne	154d8 <__assert_fail@plt+0x43f0>
   15720:	b	15724 <__assert_fail@plt+0x463c>
   15724:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   15728:	and	r0, r0, #1
   1572c:	strb	r0, [fp, #-67]	; 0xffffffbd
   15730:	ldr	r0, [fp, #-72]	; 0xffffffb8
   15734:	movw	r1, #1
   15738:	cmp	r1, r0
   1573c:	bcc	15758 <__assert_fail@plt+0x4670>
   15740:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15744:	tst	r0, #1
   15748:	beq	15a6c <__assert_fail@plt+0x4984>
   1574c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   15750:	tst	r0, #1
   15754:	bne	15a6c <__assert_fail@plt+0x4984>
   15758:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1575c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15760:	add	r0, r0, r1
   15764:	str	r0, [sp, #76]	; 0x4c
   15768:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1576c:	tst	r0, #1
   15770:	beq	15920 <__assert_fail@plt+0x4838>
   15774:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   15778:	tst	r0, #1
   1577c:	bne	15920 <__assert_fail@plt+0x4838>
   15780:	b	15784 <__assert_fail@plt+0x469c>
   15784:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15788:	tst	r0, #1
   1578c:	beq	15794 <__assert_fail@plt+0x46ac>
   15790:	b	15e64 <__assert_fail@plt+0x4d7c>
   15794:	movw	r0, #1
   15798:	strb	r0, [fp, #-66]	; 0xffffffbe
   1579c:	ldr	r0, [fp, #8]
   157a0:	cmp	r0, #2
   157a4:	bne	15858 <__assert_fail@plt+0x4770>
   157a8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   157ac:	tst	r0, #1
   157b0:	bne	15858 <__assert_fail@plt+0x4770>
   157b4:	b	157b8 <__assert_fail@plt+0x46d0>
   157b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   157c0:	cmp	r0, r1
   157c4:	bcs	157dc <__assert_fail@plt+0x46f4>
   157c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   157d0:	add	r0, r0, r1
   157d4:	movw	r1, #39	; 0x27
   157d8:	strb	r1, [r0]
   157dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157e0:	add	r0, r0, #1
   157e4:	str	r0, [fp, #-44]	; 0xffffffd4
   157e8:	b	157ec <__assert_fail@plt+0x4704>
   157ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   157f4:	cmp	r0, r1
   157f8:	bcs	15810 <__assert_fail@plt+0x4728>
   157fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15800:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15804:	add	r0, r0, r1
   15808:	movw	r1, #36	; 0x24
   1580c:	strb	r1, [r0]
   15810:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15814:	add	r0, r0, #1
   15818:	str	r0, [fp, #-44]	; 0xffffffd4
   1581c:	b	15820 <__assert_fail@plt+0x4738>
   15820:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15824:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15828:	cmp	r0, r1
   1582c:	bcs	15844 <__assert_fail@plt+0x475c>
   15830:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15834:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15838:	add	r0, r0, r1
   1583c:	movw	r1, #39	; 0x27
   15840:	strb	r1, [r0]
   15844:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15848:	add	r0, r0, #1
   1584c:	str	r0, [fp, #-44]	; 0xffffffd4
   15850:	movw	r0, #1
   15854:	strb	r0, [fp, #-60]	; 0xffffffc4
   15858:	b	1585c <__assert_fail@plt+0x4774>
   1585c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15860:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15864:	cmp	r0, r1
   15868:	bcs	15880 <__assert_fail@plt+0x4798>
   1586c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15870:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15874:	add	r0, r0, r1
   15878:	movw	r1, #92	; 0x5c
   1587c:	strb	r1, [r0]
   15880:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15884:	add	r0, r0, #1
   15888:	str	r0, [fp, #-44]	; 0xffffffd4
   1588c:	b	15890 <__assert_fail@plt+0x47a8>
   15890:	b	15894 <__assert_fail@plt+0x47ac>
   15894:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15898:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1589c:	cmp	r0, r1
   158a0:	bcs	158c0 <__assert_fail@plt+0x47d8>
   158a4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   158a8:	asr	r0, r0, #6
   158ac:	add	r0, r0, #48	; 0x30
   158b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   158b4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   158b8:	add	r1, r1, r2
   158bc:	strb	r0, [r1]
   158c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158c4:	add	r0, r0, #1
   158c8:	str	r0, [fp, #-44]	; 0xffffffd4
   158cc:	b	158d0 <__assert_fail@plt+0x47e8>
   158d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   158d8:	cmp	r0, r1
   158dc:	bcs	15900 <__assert_fail@plt+0x4818>
   158e0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   158e4:	asr	r0, r0, #3
   158e8:	and	r0, r0, #7
   158ec:	add	r0, r0, #48	; 0x30
   158f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   158f4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   158f8:	add	r1, r1, r2
   158fc:	strb	r0, [r1]
   15900:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15904:	add	r0, r0, #1
   15908:	str	r0, [fp, #-44]	; 0xffffffd4
   1590c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15910:	and	r0, r0, #7
   15914:	add	r0, r0, #48	; 0x30
   15918:	strb	r0, [fp, #-63]	; 0xffffffc1
   1591c:	b	1596c <__assert_fail@plt+0x4884>
   15920:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   15924:	tst	r0, #1
   15928:	beq	15968 <__assert_fail@plt+0x4880>
   1592c:	b	15930 <__assert_fail@plt+0x4848>
   15930:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15934:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15938:	cmp	r0, r1
   1593c:	bcs	15954 <__assert_fail@plt+0x486c>
   15940:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15944:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15948:	add	r0, r0, r1
   1594c:	movw	r1, #92	; 0x5c
   15950:	strb	r1, [r0]
   15954:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15958:	add	r0, r0, #1
   1595c:	str	r0, [fp, #-44]	; 0xffffffd4
   15960:	movw	r0, #0
   15964:	strb	r0, [fp, #-65]	; 0xffffffbf
   15968:	b	1596c <__assert_fail@plt+0x4884>
   1596c:	ldr	r0, [sp, #76]	; 0x4c
   15970:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15974:	add	r1, r1, #1
   15978:	cmp	r0, r1
   1597c:	bhi	15984 <__assert_fail@plt+0x489c>
   15980:	b	15a68 <__assert_fail@plt+0x4980>
   15984:	b	15988 <__assert_fail@plt+0x48a0>
   15988:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1598c:	tst	r0, #1
   15990:	beq	15a10 <__assert_fail@plt+0x4928>
   15994:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   15998:	tst	r0, #1
   1599c:	bne	15a10 <__assert_fail@plt+0x4928>
   159a0:	b	159a4 <__assert_fail@plt+0x48bc>
   159a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   159a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   159ac:	cmp	r0, r1
   159b0:	bcs	159c8 <__assert_fail@plt+0x48e0>
   159b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   159bc:	add	r0, r0, r1
   159c0:	movw	r1, #39	; 0x27
   159c4:	strb	r1, [r0]
   159c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   159cc:	add	r0, r0, #1
   159d0:	str	r0, [fp, #-44]	; 0xffffffd4
   159d4:	b	159d8 <__assert_fail@plt+0x48f0>
   159d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   159dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   159e0:	cmp	r0, r1
   159e4:	bcs	159fc <__assert_fail@plt+0x4914>
   159e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   159f0:	add	r0, r0, r1
   159f4:	movw	r1, #39	; 0x27
   159f8:	strb	r1, [r0]
   159fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a00:	add	r0, r0, #1
   15a04:	str	r0, [fp, #-44]	; 0xffffffd4
   15a08:	movw	r0, #0
   15a0c:	strb	r0, [fp, #-60]	; 0xffffffc4
   15a10:	b	15a14 <__assert_fail@plt+0x492c>
   15a14:	b	15a18 <__assert_fail@plt+0x4930>
   15a18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a20:	cmp	r0, r1
   15a24:	bcs	15a3c <__assert_fail@plt+0x4954>
   15a28:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15a2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15a30:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15a34:	add	r1, r1, r2
   15a38:	strb	r0, [r1]
   15a3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a40:	add	r0, r0, #1
   15a44:	str	r0, [fp, #-44]	; 0xffffffd4
   15a48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15a4c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15a50:	add	r1, r1, #1
   15a54:	str	r1, [fp, #-40]	; 0xffffffd8
   15a58:	add	r0, r0, r1
   15a5c:	ldrb	r0, [r0]
   15a60:	strb	r0, [fp, #-63]	; 0xffffffc1
   15a64:	b	15768 <__assert_fail@plt+0x4680>
   15a68:	b	15bf8 <__assert_fail@plt+0x4b10>
   15a6c:	b	15a70 <__assert_fail@plt+0x4988>
   15a70:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15a74:	tst	r0, #1
   15a78:	beq	15a88 <__assert_fail@plt+0x49a0>
   15a7c:	ldr	r0, [fp, #8]
   15a80:	cmp	r0, #2
   15a84:	bne	15a94 <__assert_fail@plt+0x49ac>
   15a88:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15a8c:	tst	r0, #1
   15a90:	beq	15ad0 <__assert_fail@plt+0x49e8>
   15a94:	ldr	r0, [fp, #16]
   15a98:	movw	r1, #0
   15a9c:	cmp	r0, r1
   15aa0:	beq	15ad0 <__assert_fail@plt+0x49e8>
   15aa4:	ldr	r0, [fp, #16]
   15aa8:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15aac:	lsr	r1, r1, #5
   15ab0:	add	r0, r0, r1, lsl #2
   15ab4:	ldr	r0, [r0]
   15ab8:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15abc:	and	r1, r1, #31
   15ac0:	lsr	r0, r0, r1
   15ac4:	and	r0, r0, #1
   15ac8:	cmp	r0, #0
   15acc:	bne	15ae0 <__assert_fail@plt+0x49f8>
   15ad0:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   15ad4:	tst	r0, #1
   15ad8:	bne	15ae0 <__assert_fail@plt+0x49f8>
   15adc:	b	15bf8 <__assert_fail@plt+0x4b10>
   15ae0:	b	15ae4 <__assert_fail@plt+0x49fc>
   15ae4:	b	15ae8 <__assert_fail@plt+0x4a00>
   15ae8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15aec:	tst	r0, #1
   15af0:	beq	15af8 <__assert_fail@plt+0x4a10>
   15af4:	b	15e64 <__assert_fail@plt+0x4d7c>
   15af8:	movw	r0, #1
   15afc:	strb	r0, [fp, #-66]	; 0xffffffbe
   15b00:	ldr	r0, [fp, #8]
   15b04:	cmp	r0, #2
   15b08:	bne	15bbc <__assert_fail@plt+0x4ad4>
   15b0c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15b10:	tst	r0, #1
   15b14:	bne	15bbc <__assert_fail@plt+0x4ad4>
   15b18:	b	15b1c <__assert_fail@plt+0x4a34>
   15b1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15b24:	cmp	r0, r1
   15b28:	bcs	15b40 <__assert_fail@plt+0x4a58>
   15b2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15b34:	add	r0, r0, r1
   15b38:	movw	r1, #39	; 0x27
   15b3c:	strb	r1, [r0]
   15b40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b44:	add	r0, r0, #1
   15b48:	str	r0, [fp, #-44]	; 0xffffffd4
   15b4c:	b	15b50 <__assert_fail@plt+0x4a68>
   15b50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15b58:	cmp	r0, r1
   15b5c:	bcs	15b74 <__assert_fail@plt+0x4a8c>
   15b60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b64:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15b68:	add	r0, r0, r1
   15b6c:	movw	r1, #36	; 0x24
   15b70:	strb	r1, [r0]
   15b74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b78:	add	r0, r0, #1
   15b7c:	str	r0, [fp, #-44]	; 0xffffffd4
   15b80:	b	15b84 <__assert_fail@plt+0x4a9c>
   15b84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15b8c:	cmp	r0, r1
   15b90:	bcs	15ba8 <__assert_fail@plt+0x4ac0>
   15b94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b98:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15b9c:	add	r0, r0, r1
   15ba0:	movw	r1, #39	; 0x27
   15ba4:	strb	r1, [r0]
   15ba8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15bac:	add	r0, r0, #1
   15bb0:	str	r0, [fp, #-44]	; 0xffffffd4
   15bb4:	movw	r0, #1
   15bb8:	strb	r0, [fp, #-60]	; 0xffffffc4
   15bbc:	b	15bc0 <__assert_fail@plt+0x4ad8>
   15bc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15bc4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15bc8:	cmp	r0, r1
   15bcc:	bcs	15be4 <__assert_fail@plt+0x4afc>
   15bd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15bd4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15bd8:	add	r0, r0, r1
   15bdc:	movw	r1, #92	; 0x5c
   15be0:	strb	r1, [r0]
   15be4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15be8:	add	r0, r0, #1
   15bec:	str	r0, [fp, #-44]	; 0xffffffd4
   15bf0:	b	15bf4 <__assert_fail@plt+0x4b0c>
   15bf4:	b	15bf8 <__assert_fail@plt+0x4b10>
   15bf8:	b	15bfc <__assert_fail@plt+0x4b14>
   15bfc:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15c00:	tst	r0, #1
   15c04:	beq	15c84 <__assert_fail@plt+0x4b9c>
   15c08:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   15c0c:	tst	r0, #1
   15c10:	bne	15c84 <__assert_fail@plt+0x4b9c>
   15c14:	b	15c18 <__assert_fail@plt+0x4b30>
   15c18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15c20:	cmp	r0, r1
   15c24:	bcs	15c3c <__assert_fail@plt+0x4b54>
   15c28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15c30:	add	r0, r0, r1
   15c34:	movw	r1, #39	; 0x27
   15c38:	strb	r1, [r0]
   15c3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c40:	add	r0, r0, #1
   15c44:	str	r0, [fp, #-44]	; 0xffffffd4
   15c48:	b	15c4c <__assert_fail@plt+0x4b64>
   15c4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15c54:	cmp	r0, r1
   15c58:	bcs	15c70 <__assert_fail@plt+0x4b88>
   15c5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c60:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15c64:	add	r0, r0, r1
   15c68:	movw	r1, #39	; 0x27
   15c6c:	strb	r1, [r0]
   15c70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c74:	add	r0, r0, #1
   15c78:	str	r0, [fp, #-44]	; 0xffffffd4
   15c7c:	movw	r0, #0
   15c80:	strb	r0, [fp, #-60]	; 0xffffffc4
   15c84:	b	15c88 <__assert_fail@plt+0x4ba0>
   15c88:	b	15c8c <__assert_fail@plt+0x4ba4>
   15c8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15c94:	cmp	r0, r1
   15c98:	bcs	15cb0 <__assert_fail@plt+0x4bc8>
   15c9c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15ca0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15ca4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15ca8:	add	r1, r1, r2
   15cac:	strb	r0, [r1]
   15cb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15cb4:	add	r0, r0, #1
   15cb8:	str	r0, [fp, #-44]	; 0xffffffd4
   15cbc:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   15cc0:	tst	r0, #1
   15cc4:	bne	15cd0 <__assert_fail@plt+0x4be8>
   15cc8:	movw	r0, #0
   15ccc:	strb	r0, [fp, #-62]	; 0xffffffc2
   15cd0:	b	15cd4 <__assert_fail@plt+0x4bec>
   15cd4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15cd8:	add	r0, r0, #1
   15cdc:	str	r0, [fp, #-40]	; 0xffffffd8
   15ce0:	b	14a8c <__assert_fail@plt+0x39a4>
   15ce4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ce8:	cmp	r0, #0
   15cec:	bne	15d0c <__assert_fail@plt+0x4c24>
   15cf0:	ldr	r0, [fp, #8]
   15cf4:	cmp	r0, #2
   15cf8:	bne	15d0c <__assert_fail@plt+0x4c24>
   15cfc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15d00:	tst	r0, #1
   15d04:	beq	15d0c <__assert_fail@plt+0x4c24>
   15d08:	b	15e64 <__assert_fail@plt+0x4d7c>
   15d0c:	ldr	r0, [fp, #8]
   15d10:	cmp	r0, #2
   15d14:	bne	15db4 <__assert_fail@plt+0x4ccc>
   15d18:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15d1c:	tst	r0, #1
   15d20:	bne	15db4 <__assert_fail@plt+0x4ccc>
   15d24:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   15d28:	tst	r0, #1
   15d2c:	beq	15db4 <__assert_fail@plt+0x4ccc>
   15d30:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   15d34:	tst	r0, #1
   15d38:	beq	15d80 <__assert_fail@plt+0x4c98>
   15d3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d40:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15d44:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15d48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15d4c:	ldr	ip, [fp, #12]
   15d50:	ldr	lr, [fp, #16]
   15d54:	ldr	r4, [fp, #20]
   15d58:	ldr	r5, [fp, #24]
   15d5c:	movw	r6, #5
   15d60:	str	r6, [sp]
   15d64:	str	ip, [sp, #4]
   15d68:	str	lr, [sp, #8]
   15d6c:	str	r4, [sp, #12]
   15d70:	str	r5, [sp, #16]
   15d74:	bl	147a4 <__assert_fail@plt+0x36bc>
   15d78:	str	r0, [fp, #-20]	; 0xffffffec
   15d7c:	b	15ecc <__assert_fail@plt+0x4de4>
   15d80:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15d84:	cmp	r0, #0
   15d88:	bne	15dac <__assert_fail@plt+0x4cc4>
   15d8c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15d90:	cmp	r0, #0
   15d94:	beq	15dac <__assert_fail@plt+0x4cc4>
   15d98:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15d9c:	str	r0, [fp, #-28]	; 0xffffffe4
   15da0:	movw	r0, #0
   15da4:	str	r0, [fp, #-44]	; 0xffffffd4
   15da8:	b	1484c <__assert_fail@plt+0x3764>
   15dac:	b	15db0 <__assert_fail@plt+0x4cc8>
   15db0:	b	15db4 <__assert_fail@plt+0x4ccc>
   15db4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15db8:	movw	r1, #0
   15dbc:	cmp	r0, r1
   15dc0:	beq	15e34 <__assert_fail@plt+0x4d4c>
   15dc4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15dc8:	tst	r0, #1
   15dcc:	bne	15e34 <__assert_fail@plt+0x4d4c>
   15dd0:	b	15dd4 <__assert_fail@plt+0x4cec>
   15dd4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15dd8:	ldrsb	r0, [r0]
   15ddc:	cmp	r0, #0
   15de0:	beq	15e30 <__assert_fail@plt+0x4d48>
   15de4:	b	15de8 <__assert_fail@plt+0x4d00>
   15de8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15dec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15df0:	cmp	r0, r1
   15df4:	bcs	15e10 <__assert_fail@plt+0x4d28>
   15df8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15dfc:	ldrb	r0, [r0]
   15e00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15e04:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15e08:	add	r1, r1, r2
   15e0c:	strb	r0, [r1]
   15e10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15e14:	add	r0, r0, #1
   15e18:	str	r0, [fp, #-44]	; 0xffffffd4
   15e1c:	b	15e20 <__assert_fail@plt+0x4d38>
   15e20:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15e24:	add	r0, r0, #1
   15e28:	str	r0, [fp, #-52]	; 0xffffffcc
   15e2c:	b	15dd4 <__assert_fail@plt+0x4cec>
   15e30:	b	15e34 <__assert_fail@plt+0x4d4c>
   15e34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15e38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15e3c:	cmp	r0, r1
   15e40:	bcs	15e58 <__assert_fail@plt+0x4d70>
   15e44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e48:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15e4c:	add	r0, r0, r1
   15e50:	movw	r1, #0
   15e54:	strb	r1, [r0]
   15e58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15e5c:	str	r0, [fp, #-20]	; 0xffffffec
   15e60:	b	15ecc <__assert_fail@plt+0x4de4>
   15e64:	ldr	r0, [fp, #8]
   15e68:	cmp	r0, #2
   15e6c:	bne	15e84 <__assert_fail@plt+0x4d9c>
   15e70:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15e74:	tst	r0, #1
   15e78:	beq	15e84 <__assert_fail@plt+0x4d9c>
   15e7c:	movw	r0, #4
   15e80:	str	r0, [fp, #8]
   15e84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15e8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15e90:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15e94:	ldr	ip, [fp, #8]
   15e98:	ldr	lr, [fp, #12]
   15e9c:	mvn	r4, #2
   15ea0:	and	lr, lr, r4
   15ea4:	ldr	r4, [fp, #20]
   15ea8:	ldr	r5, [fp, #24]
   15eac:	str	ip, [sp]
   15eb0:	str	lr, [sp, #4]
   15eb4:	movw	ip, #0
   15eb8:	str	ip, [sp, #8]
   15ebc:	str	r4, [sp, #12]
   15ec0:	str	r5, [sp, #16]
   15ec4:	bl	147a4 <__assert_fail@plt+0x36bc>
   15ec8:	str	r0, [fp, #-20]	; 0xffffffec
   15ecc:	ldr	r0, [fp, #-20]	; 0xffffffec
   15ed0:	sub	sp, fp, #16
   15ed4:	pop	{r4, r5, r6, sl, fp, pc}
   15ed8:	push	{fp, lr}
   15edc:	mov	fp, sp
   15ee0:	sub	sp, sp, #16
   15ee4:	str	r0, [fp, #-4]
   15ee8:	str	r1, [sp, #8]
   15eec:	str	r2, [sp, #4]
   15ef0:	ldr	r0, [fp, #-4]
   15ef4:	ldr	r1, [sp, #8]
   15ef8:	ldr	r3, [sp, #4]
   15efc:	movw	r2, #0
   15f00:	bl	15f0c <__assert_fail@plt+0x4e24>
   15f04:	mov	sp, fp
   15f08:	pop	{fp, pc}
   15f0c:	push	{r4, r5, r6, sl, fp, lr}
   15f10:	add	fp, sp, #16
   15f14:	sub	sp, sp, #80	; 0x50
   15f18:	str	r0, [fp, #-20]	; 0xffffffec
   15f1c:	str	r1, [fp, #-24]	; 0xffffffe8
   15f20:	str	r2, [fp, #-28]	; 0xffffffe4
   15f24:	str	r3, [fp, #-32]	; 0xffffffe0
   15f28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15f2c:	movw	r1, #0
   15f30:	cmp	r0, r1
   15f34:	beq	15f44 <__assert_fail@plt+0x4e5c>
   15f38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15f3c:	str	r0, [sp, #40]	; 0x28
   15f40:	b	15f54 <__assert_fail@plt+0x4e6c>
   15f44:	movw	r0, #364	; 0x16c
   15f48:	movt	r0, #3
   15f4c:	str	r0, [sp, #40]	; 0x28
   15f50:	b	15f54 <__assert_fail@plt+0x4e6c>
   15f54:	ldr	r0, [sp, #40]	; 0x28
   15f58:	str	r0, [fp, #-36]	; 0xffffffdc
   15f5c:	bl	11010 <__errno_location@plt>
   15f60:	ldr	r0, [r0]
   15f64:	str	r0, [fp, #-40]	; 0xffffffd8
   15f68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15f6c:	ldr	r0, [r0, #4]
   15f70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15f74:	movw	r2, #0
   15f78:	cmp	r1, r2
   15f7c:	movw	r1, #0
   15f80:	movne	r1, #1
   15f84:	tst	r1, #1
   15f88:	mov	r1, r2
   15f8c:	moveq	r1, #1
   15f90:	orr	r0, r0, r1
   15f94:	str	r0, [fp, #-44]	; 0xffffffd4
   15f98:	ldr	r0, [fp, #-20]	; 0xffffffec
   15f9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15fa0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15fa4:	ldr	r1, [r1]
   15fa8:	ldr	ip, [fp, #-44]	; 0xffffffd4
   15fac:	ldr	lr, [fp, #-36]	; 0xffffffdc
   15fb0:	add	lr, lr, #8
   15fb4:	ldr	r4, [fp, #-36]	; 0xffffffdc
   15fb8:	ldr	r4, [r4, #40]	; 0x28
   15fbc:	ldr	r5, [fp, #-36]	; 0xffffffdc
   15fc0:	ldr	r5, [r5, #44]	; 0x2c
   15fc4:	str	r0, [sp, #36]	; 0x24
   15fc8:	mov	r0, r2
   15fcc:	str	r1, [sp, #32]
   15fd0:	mov	r1, r2
   15fd4:	ldr	r2, [sp, #36]	; 0x24
   15fd8:	ldr	r6, [sp, #32]
   15fdc:	str	r6, [sp]
   15fe0:	str	ip, [sp, #4]
   15fe4:	str	lr, [sp, #8]
   15fe8:	str	r4, [sp, #12]
   15fec:	str	r5, [sp, #16]
   15ff0:	bl	147a4 <__assert_fail@plt+0x36bc>
   15ff4:	add	r0, r0, #1
   15ff8:	str	r0, [sp, #48]	; 0x30
   15ffc:	ldr	r0, [sp, #48]	; 0x30
   16000:	bl	18730 <__assert_fail@plt+0x7648>
   16004:	str	r0, [sp, #44]	; 0x2c
   16008:	ldr	r0, [sp, #44]	; 0x2c
   1600c:	ldr	r1, [sp, #48]	; 0x30
   16010:	ldr	r2, [fp, #-20]	; 0xffffffec
   16014:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16018:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1601c:	ldr	ip, [ip]
   16020:	ldr	lr, [fp, #-44]	; 0xffffffd4
   16024:	ldr	r4, [fp, #-36]	; 0xffffffdc
   16028:	add	r4, r4, #8
   1602c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   16030:	ldr	r5, [r5, #40]	; 0x28
   16034:	ldr	r6, [fp, #-36]	; 0xffffffdc
   16038:	ldr	r6, [r6, #44]	; 0x2c
   1603c:	str	ip, [sp]
   16040:	str	lr, [sp, #4]
   16044:	str	r4, [sp, #8]
   16048:	str	r5, [sp, #12]
   1604c:	str	r6, [sp, #16]
   16050:	bl	147a4 <__assert_fail@plt+0x36bc>
   16054:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16058:	str	r0, [sp, #28]
   1605c:	str	r1, [sp, #24]
   16060:	bl	11010 <__errno_location@plt>
   16064:	ldr	r1, [sp, #24]
   16068:	str	r1, [r0]
   1606c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16070:	movw	r2, #0
   16074:	cmp	r0, r2
   16078:	beq	1608c <__assert_fail@plt+0x4fa4>
   1607c:	ldr	r0, [sp, #48]	; 0x30
   16080:	sub	r0, r0, #1
   16084:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16088:	str	r0, [r1]
   1608c:	ldr	r0, [sp, #44]	; 0x2c
   16090:	sub	sp, fp, #16
   16094:	pop	{r4, r5, r6, sl, fp, pc}
   16098:	push	{fp, lr}
   1609c:	mov	fp, sp
   160a0:	sub	sp, sp, #8
   160a4:	movw	r0, #248	; 0xf8
   160a8:	movt	r0, #3
   160ac:	ldr	r0, [r0]
   160b0:	str	r0, [sp, #4]
   160b4:	movw	r0, #1
   160b8:	str	r0, [sp]
   160bc:	ldr	r0, [sp]
   160c0:	movw	r1, #252	; 0xfc
   160c4:	movt	r1, #3
   160c8:	ldr	r1, [r1]
   160cc:	cmp	r0, r1
   160d0:	bge	160f8 <__assert_fail@plt+0x5010>
   160d4:	ldr	r0, [sp, #4]
   160d8:	ldr	r1, [sp]
   160dc:	add	r0, r0, r1, lsl #3
   160e0:	ldr	r0, [r0, #4]
   160e4:	bl	13ffc <__assert_fail@plt+0x2f14>
   160e8:	ldr	r0, [sp]
   160ec:	add	r0, r0, #1
   160f0:	str	r0, [sp]
   160f4:	b	160bc <__assert_fail@plt+0x4fd4>
   160f8:	ldr	r0, [sp, #4]
   160fc:	ldr	r0, [r0, #4]
   16100:	movw	r1, #412	; 0x19c
   16104:	movt	r1, #3
   16108:	cmp	r0, r1
   1610c:	beq	16138 <__assert_fail@plt+0x5050>
   16110:	ldr	r0, [sp, #4]
   16114:	ldr	r0, [r0, #4]
   16118:	bl	13ffc <__assert_fail@plt+0x2f14>
   1611c:	movw	r0, #256	; 0x100
   16120:	movw	r1, #256	; 0x100
   16124:	movt	r1, #3
   16128:	str	r0, [r1]
   1612c:	movw	r0, #412	; 0x19c
   16130:	movt	r0, #3
   16134:	str	r0, [r1, #4]
   16138:	ldr	r0, [sp, #4]
   1613c:	movw	r1, #256	; 0x100
   16140:	movt	r1, #3
   16144:	cmp	r0, r1
   16148:	beq	16168 <__assert_fail@plt+0x5080>
   1614c:	ldr	r0, [sp, #4]
   16150:	bl	13ffc <__assert_fail@plt+0x2f14>
   16154:	movw	r0, #248	; 0xf8
   16158:	movt	r0, #3
   1615c:	movw	r1, #256	; 0x100
   16160:	movt	r1, #3
   16164:	str	r1, [r0]
   16168:	movw	r0, #252	; 0xfc
   1616c:	movt	r0, #3
   16170:	movw	r1, #1
   16174:	str	r1, [r0]
   16178:	mov	sp, fp
   1617c:	pop	{fp, pc}
   16180:	push	{fp, lr}
   16184:	mov	fp, sp
   16188:	sub	sp, sp, #8
   1618c:	str	r0, [sp, #4]
   16190:	str	r1, [sp]
   16194:	ldr	r0, [sp, #4]
   16198:	ldr	r1, [sp]
   1619c:	mvn	r2, #0
   161a0:	movw	r3, #364	; 0x16c
   161a4:	movt	r3, #3
   161a8:	bl	161b4 <__assert_fail@plt+0x50cc>
   161ac:	mov	sp, fp
   161b0:	pop	{fp, pc}
   161b4:	push	{r4, r5, r6, sl, fp, lr}
   161b8:	add	fp, sp, #16
   161bc:	sub	sp, sp, #80	; 0x50
   161c0:	str	r0, [fp, #-20]	; 0xffffffec
   161c4:	str	r1, [fp, #-24]	; 0xffffffe8
   161c8:	str	r2, [fp, #-28]	; 0xffffffe4
   161cc:	str	r3, [fp, #-32]	; 0xffffffe0
   161d0:	bl	11010 <__errno_location@plt>
   161d4:	ldr	r1, [pc, #672]	; 1647c <__assert_fail@plt+0x5394>
   161d8:	ldr	r0, [r0]
   161dc:	str	r0, [fp, #-36]	; 0xffffffdc
   161e0:	movw	r0, #248	; 0xf8
   161e4:	movt	r0, #3
   161e8:	ldr	r0, [r0]
   161ec:	str	r0, [fp, #-40]	; 0xffffffd8
   161f0:	str	r1, [fp, #-44]	; 0xffffffd4
   161f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   161f8:	movw	r1, #0
   161fc:	cmp	r1, r0
   16200:	bgt	16214 <__assert_fail@plt+0x512c>
   16204:	ldr	r0, [fp, #-20]	; 0xffffffec
   16208:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1620c:	cmp	r0, r1
   16210:	blt	16218 <__assert_fail@plt+0x5130>
   16214:	bl	110d0 <abort@plt>
   16218:	movw	r0, #252	; 0xfc
   1621c:	movt	r0, #3
   16220:	ldr	r0, [r0]
   16224:	ldr	r1, [fp, #-20]	; 0xffffffec
   16228:	cmp	r0, r1
   1622c:	bgt	16324 <__assert_fail@plt+0x523c>
   16230:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16234:	movw	r1, #256	; 0x100
   16238:	movt	r1, #3
   1623c:	cmp	r0, r1
   16240:	movw	r0, #0
   16244:	moveq	r0, #1
   16248:	and	r0, r0, #1
   1624c:	strb	r0, [fp, #-45]	; 0xffffffd3
   16250:	movw	r0, #252	; 0xfc
   16254:	movt	r0, #3
   16258:	ldr	r0, [r0]
   1625c:	str	r0, [sp, #44]	; 0x2c
   16260:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   16264:	tst	r0, #1
   16268:	beq	16278 <__assert_fail@plt+0x5190>
   1626c:	movw	r0, #0
   16270:	str	r0, [sp, #24]
   16274:	b	16280 <__assert_fail@plt+0x5198>
   16278:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1627c:	str	r0, [sp, #24]
   16280:	ldr	r0, [sp, #24]
   16284:	ldr	r1, [fp, #-20]	; 0xffffffec
   16288:	movw	r2, #252	; 0xfc
   1628c:	movt	r2, #3
   16290:	ldr	r2, [r2]
   16294:	sub	r1, r1, r2
   16298:	add	r2, r1, #1
   1629c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   162a0:	add	r1, sp, #44	; 0x2c
   162a4:	movw	ip, #8
   162a8:	str	ip, [sp]
   162ac:	bl	1896c <__assert_fail@plt+0x7884>
   162b0:	str	r0, [fp, #-40]	; 0xffffffd8
   162b4:	movw	r1, #248	; 0xf8
   162b8:	movt	r1, #3
   162bc:	str	r0, [r1]
   162c0:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   162c4:	tst	r0, #1
   162c8:	beq	162e8 <__assert_fail@plt+0x5200>
   162cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   162d0:	movw	r1, #256	; 0x100
   162d4:	movt	r1, #3
   162d8:	ldr	r2, [r1]
   162dc:	str	r2, [r0]
   162e0:	ldr	r1, [r1, #4]
   162e4:	str	r1, [r0, #4]
   162e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   162ec:	movw	r1, #252	; 0xfc
   162f0:	movt	r1, #3
   162f4:	ldr	r1, [r1]
   162f8:	add	r0, r0, r1, lsl #3
   162fc:	ldr	r2, [sp, #44]	; 0x2c
   16300:	sub	r1, r2, r1
   16304:	lsl	r2, r1, #3
   16308:	movw	r1, #0
   1630c:	and	r1, r1, #255	; 0xff
   16310:	bl	11028 <memset@plt>
   16314:	ldr	r0, [sp, #44]	; 0x2c
   16318:	movw	r1, #252	; 0xfc
   1631c:	movt	r1, #3
   16320:	str	r0, [r1]
   16324:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16328:	ldr	r1, [fp, #-20]	; 0xffffffec
   1632c:	ldr	r0, [r0, r1, lsl #3]
   16330:	str	r0, [sp, #40]	; 0x28
   16334:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16338:	ldr	r1, [fp, #-20]	; 0xffffffec
   1633c:	add	r0, r0, r1, lsl #3
   16340:	ldr	r0, [r0, #4]
   16344:	str	r0, [sp, #36]	; 0x24
   16348:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1634c:	ldr	r0, [r0, #4]
   16350:	orr	r0, r0, #1
   16354:	str	r0, [sp, #32]
   16358:	ldr	r0, [sp, #36]	; 0x24
   1635c:	ldr	r1, [sp, #40]	; 0x28
   16360:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16364:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16368:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1636c:	ldr	ip, [ip]
   16370:	ldr	lr, [sp, #32]
   16374:	ldr	r4, [fp, #-32]	; 0xffffffe0
   16378:	add	r4, r4, #8
   1637c:	ldr	r5, [fp, #-32]	; 0xffffffe0
   16380:	ldr	r5, [r5, #40]	; 0x28
   16384:	ldr	r6, [fp, #-32]	; 0xffffffe0
   16388:	ldr	r6, [r6, #44]	; 0x2c
   1638c:	str	ip, [sp]
   16390:	str	lr, [sp, #4]
   16394:	str	r4, [sp, #8]
   16398:	str	r5, [sp, #12]
   1639c:	str	r6, [sp, #16]
   163a0:	bl	147a4 <__assert_fail@plt+0x36bc>
   163a4:	str	r0, [sp, #28]
   163a8:	ldr	r0, [sp, #40]	; 0x28
   163ac:	ldr	r1, [sp, #28]
   163b0:	cmp	r0, r1
   163b4:	bhi	1645c <__assert_fail@plt+0x5374>
   163b8:	ldr	r0, [sp, #28]
   163bc:	add	r0, r0, #1
   163c0:	str	r0, [sp, #40]	; 0x28
   163c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   163c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   163cc:	add	r1, r1, r2, lsl #3
   163d0:	str	r0, [r1]
   163d4:	ldr	r0, [sp, #36]	; 0x24
   163d8:	movw	r1, #412	; 0x19c
   163dc:	movt	r1, #3
   163e0:	cmp	r0, r1
   163e4:	beq	163f0 <__assert_fail@plt+0x5308>
   163e8:	ldr	r0, [sp, #36]	; 0x24
   163ec:	bl	13ffc <__assert_fail@plt+0x2f14>
   163f0:	ldr	r0, [sp, #40]	; 0x28
   163f4:	bl	18730 <__assert_fail@plt+0x7648>
   163f8:	mov	r1, r0
   163fc:	str	r0, [sp, #36]	; 0x24
   16400:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16404:	ldr	r2, [fp, #-20]	; 0xffffffec
   16408:	add	r0, r0, r2, lsl #3
   1640c:	str	r1, [r0, #4]
   16410:	ldr	r0, [sp, #36]	; 0x24
   16414:	ldr	r1, [sp, #40]	; 0x28
   16418:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1641c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16420:	ldr	ip, [fp, #-32]	; 0xffffffe0
   16424:	ldr	ip, [ip]
   16428:	ldr	lr, [sp, #32]
   1642c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   16430:	add	r4, r4, #8
   16434:	ldr	r5, [fp, #-32]	; 0xffffffe0
   16438:	ldr	r5, [r5, #40]	; 0x28
   1643c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   16440:	ldr	r6, [r6, #44]	; 0x2c
   16444:	str	ip, [sp]
   16448:	str	lr, [sp, #4]
   1644c:	str	r4, [sp, #8]
   16450:	str	r5, [sp, #12]
   16454:	str	r6, [sp, #16]
   16458:	bl	147a4 <__assert_fail@plt+0x36bc>
   1645c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16460:	str	r0, [sp, #20]
   16464:	bl	11010 <__errno_location@plt>
   16468:	ldr	r1, [sp, #20]
   1646c:	str	r1, [r0]
   16470:	ldr	r0, [sp, #36]	; 0x24
   16474:	sub	sp, fp, #16
   16478:	pop	{r4, r5, r6, sl, fp, pc}
   1647c:	svcvc	0x00ffffff
   16480:	push	{fp, lr}
   16484:	mov	fp, sp
   16488:	sub	sp, sp, #16
   1648c:	str	r0, [fp, #-4]
   16490:	str	r1, [sp, #8]
   16494:	str	r2, [sp, #4]
   16498:	ldr	r0, [fp, #-4]
   1649c:	ldr	r1, [sp, #8]
   164a0:	ldr	r2, [sp, #4]
   164a4:	movw	r3, #364	; 0x16c
   164a8:	movt	r3, #3
   164ac:	bl	161b4 <__assert_fail@plt+0x50cc>
   164b0:	mov	sp, fp
   164b4:	pop	{fp, pc}
   164b8:	push	{fp, lr}
   164bc:	mov	fp, sp
   164c0:	sub	sp, sp, #8
   164c4:	str	r0, [sp, #4]
   164c8:	ldr	r1, [sp, #4]
   164cc:	movw	r0, #0
   164d0:	bl	16180 <__assert_fail@plt+0x5098>
   164d4:	mov	sp, fp
   164d8:	pop	{fp, pc}
   164dc:	push	{fp, lr}
   164e0:	mov	fp, sp
   164e4:	sub	sp, sp, #8
   164e8:	str	r0, [sp, #4]
   164ec:	str	r1, [sp]
   164f0:	ldr	r1, [sp, #4]
   164f4:	ldr	r2, [sp]
   164f8:	movw	r0, #0
   164fc:	bl	16480 <__assert_fail@plt+0x5398>
   16500:	mov	sp, fp
   16504:	pop	{fp, pc}
   16508:	push	{fp, lr}
   1650c:	mov	fp, sp
   16510:	sub	sp, sp, #64	; 0x40
   16514:	str	r0, [fp, #-4]
   16518:	str	r1, [fp, #-8]
   1651c:	str	r2, [fp, #-12]
   16520:	ldr	r1, [fp, #-8]
   16524:	add	r0, sp, #4
   16528:	bl	16548 <__assert_fail@plt+0x5460>
   1652c:	ldr	r0, [fp, #-4]
   16530:	ldr	r1, [fp, #-12]
   16534:	mvn	r2, #0
   16538:	add	r3, sp, #4
   1653c:	bl	161b4 <__assert_fail@plt+0x50cc>
   16540:	mov	sp, fp
   16544:	pop	{fp, pc}
   16548:	push	{fp, lr}
   1654c:	mov	fp, sp
   16550:	sub	sp, sp, #8
   16554:	str	r1, [sp, #4]
   16558:	mov	r1, r0
   1655c:	str	r0, [sp]
   16560:	mov	r0, r1
   16564:	movw	r1, #0
   16568:	and	r1, r1, #255	; 0xff
   1656c:	movw	r2, #48	; 0x30
   16570:	bl	11028 <memset@plt>
   16574:	ldr	r0, [sp, #4]
   16578:	cmp	r0, #10
   1657c:	bne	16584 <__assert_fail@plt+0x549c>
   16580:	bl	110d0 <abort@plt>
   16584:	ldr	r0, [sp, #4]
   16588:	ldr	r1, [sp]
   1658c:	str	r0, [r1]
   16590:	mov	sp, fp
   16594:	pop	{fp, pc}
   16598:	push	{fp, lr}
   1659c:	mov	fp, sp
   165a0:	sub	sp, sp, #64	; 0x40
   165a4:	str	r0, [fp, #-4]
   165a8:	str	r1, [fp, #-8]
   165ac:	str	r2, [fp, #-12]
   165b0:	str	r3, [fp, #-16]
   165b4:	ldr	r1, [fp, #-8]
   165b8:	mov	r0, sp
   165bc:	bl	16548 <__assert_fail@plt+0x5460>
   165c0:	ldr	r0, [fp, #-4]
   165c4:	ldr	r1, [fp, #-12]
   165c8:	ldr	r2, [fp, #-16]
   165cc:	mov	r3, sp
   165d0:	bl	161b4 <__assert_fail@plt+0x50cc>
   165d4:	mov	sp, fp
   165d8:	pop	{fp, pc}
   165dc:	push	{fp, lr}
   165e0:	mov	fp, sp
   165e4:	sub	sp, sp, #8
   165e8:	str	r0, [sp, #4]
   165ec:	str	r1, [sp]
   165f0:	ldr	r1, [sp, #4]
   165f4:	ldr	r2, [sp]
   165f8:	movw	r0, #0
   165fc:	bl	16508 <__assert_fail@plt+0x5420>
   16600:	mov	sp, fp
   16604:	pop	{fp, pc}
   16608:	push	{fp, lr}
   1660c:	mov	fp, sp
   16610:	sub	sp, sp, #16
   16614:	str	r0, [fp, #-4]
   16618:	str	r1, [sp, #8]
   1661c:	str	r2, [sp, #4]
   16620:	ldr	r1, [fp, #-4]
   16624:	ldr	r2, [sp, #8]
   16628:	ldr	r3, [sp, #4]
   1662c:	movw	r0, #0
   16630:	bl	16598 <__assert_fail@plt+0x54b0>
   16634:	mov	sp, fp
   16638:	pop	{fp, pc}
   1663c:	push	{fp, lr}
   16640:	mov	fp, sp
   16644:	sub	sp, sp, #72	; 0x48
   16648:	movw	r3, #364	; 0x16c
   1664c:	movt	r3, #3
   16650:	str	r0, [fp, #-4]
   16654:	str	r1, [fp, #-8]
   16658:	strb	r2, [fp, #-9]
   1665c:	add	r0, sp, #12
   16660:	mov	r1, r0
   16664:	str	r0, [sp, #8]
   16668:	mov	r0, r1
   1666c:	mov	r1, r3
   16670:	movw	r2, #48	; 0x30
   16674:	bl	10ee4 <memcpy@plt>
   16678:	ldr	r0, [sp, #8]
   1667c:	ldrb	r1, [fp, #-9]
   16680:	movw	r2, #1
   16684:	bl	1454c <__assert_fail@plt+0x3464>
   16688:	ldr	r1, [fp, #-4]
   1668c:	ldr	r2, [fp, #-8]
   16690:	movw	r3, #0
   16694:	str	r0, [sp, #4]
   16698:	mov	r0, r3
   1669c:	add	r3, sp, #12
   166a0:	bl	161b4 <__assert_fail@plt+0x50cc>
   166a4:	mov	sp, fp
   166a8:	pop	{fp, pc}
   166ac:	push	{fp, lr}
   166b0:	mov	fp, sp
   166b4:	sub	sp, sp, #8
   166b8:	str	r0, [sp, #4]
   166bc:	strb	r1, [sp, #3]
   166c0:	ldr	r0, [sp, #4]
   166c4:	mvn	r1, #0
   166c8:	ldrb	r2, [sp, #3]
   166cc:	bl	1663c <__assert_fail@plt+0x5554>
   166d0:	mov	sp, fp
   166d4:	pop	{fp, pc}
   166d8:	push	{fp, lr}
   166dc:	mov	fp, sp
   166e0:	sub	sp, sp, #8
   166e4:	str	r0, [sp, #4]
   166e8:	ldr	r0, [sp, #4]
   166ec:	movw	r1, #58	; 0x3a
   166f0:	and	r1, r1, #255	; 0xff
   166f4:	bl	166ac <__assert_fail@plt+0x55c4>
   166f8:	mov	sp, fp
   166fc:	pop	{fp, pc}
   16700:	push	{fp, lr}
   16704:	mov	fp, sp
   16708:	sub	sp, sp, #8
   1670c:	str	r0, [sp, #4]
   16710:	str	r1, [sp]
   16714:	ldr	r0, [sp, #4]
   16718:	ldr	r1, [sp]
   1671c:	movw	r2, #58	; 0x3a
   16720:	and	r2, r2, #255	; 0xff
   16724:	bl	1663c <__assert_fail@plt+0x5554>
   16728:	mov	sp, fp
   1672c:	pop	{fp, pc}
   16730:	push	{fp, lr}
   16734:	mov	fp, sp
   16738:	sub	sp, sp, #120	; 0x78
   1673c:	str	r0, [fp, #-4]
   16740:	str	r1, [fp, #-8]
   16744:	str	r2, [fp, #-12]
   16748:	ldr	r1, [fp, #-8]
   1674c:	add	r0, sp, #12
   16750:	bl	16548 <__assert_fail@plt+0x5460>
   16754:	add	r0, sp, #60	; 0x3c
   16758:	mov	r1, r0
   1675c:	add	r2, sp, #12
   16760:	str	r0, [sp, #8]
   16764:	mov	r0, r1
   16768:	mov	r1, r2
   1676c:	movw	r2, #48	; 0x30
   16770:	bl	10ee4 <memcpy@plt>
   16774:	ldr	r0, [sp, #8]
   16778:	movw	r1, #58	; 0x3a
   1677c:	and	r1, r1, #255	; 0xff
   16780:	movw	r2, #1
   16784:	bl	1454c <__assert_fail@plt+0x3464>
   16788:	ldr	r1, [fp, #-4]
   1678c:	ldr	r2, [fp, #-12]
   16790:	str	r0, [sp, #4]
   16794:	mov	r0, r1
   16798:	mov	r1, r2
   1679c:	mvn	r2, #0
   167a0:	add	r3, sp, #60	; 0x3c
   167a4:	bl	161b4 <__assert_fail@plt+0x50cc>
   167a8:	mov	sp, fp
   167ac:	pop	{fp, pc}
   167b0:	push	{fp, lr}
   167b4:	mov	fp, sp
   167b8:	sub	sp, sp, #24
   167bc:	str	r0, [fp, #-4]
   167c0:	str	r1, [fp, #-8]
   167c4:	str	r2, [sp, #12]
   167c8:	str	r3, [sp, #8]
   167cc:	ldr	r0, [fp, #-4]
   167d0:	ldr	r1, [fp, #-8]
   167d4:	ldr	r2, [sp, #12]
   167d8:	ldr	r3, [sp, #8]
   167dc:	mvn	ip, #0
   167e0:	str	ip, [sp]
   167e4:	bl	167f0 <__assert_fail@plt+0x5708>
   167e8:	mov	sp, fp
   167ec:	pop	{fp, pc}
   167f0:	push	{fp, lr}
   167f4:	mov	fp, sp
   167f8:	sub	sp, sp, #72	; 0x48
   167fc:	ldr	ip, [fp, #8]
   16800:	movw	lr, #364	; 0x16c
   16804:	movt	lr, #3
   16808:	str	r0, [fp, #-4]
   1680c:	str	r1, [fp, #-8]
   16810:	str	r2, [fp, #-12]
   16814:	str	r3, [fp, #-16]
   16818:	add	r0, sp, #8
   1681c:	mov	r1, r0
   16820:	str	r0, [sp, #4]
   16824:	mov	r0, r1
   16828:	mov	r1, lr
   1682c:	movw	r2, #48	; 0x30
   16830:	str	ip, [sp]
   16834:	bl	10ee4 <memcpy@plt>
   16838:	ldr	r1, [fp, #-8]
   1683c:	ldr	r2, [fp, #-12]
   16840:	ldr	r0, [sp, #4]
   16844:	bl	1464c <__assert_fail@plt+0x3564>
   16848:	ldr	r0, [fp, #-4]
   1684c:	ldr	r1, [fp, #-16]
   16850:	ldr	r2, [fp, #8]
   16854:	add	r3, sp, #8
   16858:	bl	161b4 <__assert_fail@plt+0x50cc>
   1685c:	mov	sp, fp
   16860:	pop	{fp, pc}
   16864:	push	{fp, lr}
   16868:	mov	fp, sp
   1686c:	sub	sp, sp, #16
   16870:	str	r0, [fp, #-4]
   16874:	str	r1, [sp, #8]
   16878:	str	r2, [sp, #4]
   1687c:	ldr	r1, [fp, #-4]
   16880:	ldr	r2, [sp, #8]
   16884:	ldr	r3, [sp, #4]
   16888:	movw	r0, #0
   1688c:	bl	167b0 <__assert_fail@plt+0x56c8>
   16890:	mov	sp, fp
   16894:	pop	{fp, pc}
   16898:	push	{fp, lr}
   1689c:	mov	fp, sp
   168a0:	sub	sp, sp, #24
   168a4:	str	r0, [fp, #-4]
   168a8:	str	r1, [fp, #-8]
   168ac:	str	r2, [sp, #12]
   168b0:	str	r3, [sp, #8]
   168b4:	ldr	r1, [fp, #-4]
   168b8:	ldr	r2, [fp, #-8]
   168bc:	ldr	r3, [sp, #12]
   168c0:	ldr	r0, [sp, #8]
   168c4:	movw	ip, #0
   168c8:	str	r0, [sp, #4]
   168cc:	mov	r0, ip
   168d0:	ldr	ip, [sp, #4]
   168d4:	str	ip, [sp]
   168d8:	bl	167f0 <__assert_fail@plt+0x5708>
   168dc:	mov	sp, fp
   168e0:	pop	{fp, pc}
   168e4:	push	{fp, lr}
   168e8:	mov	fp, sp
   168ec:	sub	sp, sp, #16
   168f0:	str	r0, [fp, #-4]
   168f4:	str	r1, [sp, #8]
   168f8:	str	r2, [sp, #4]
   168fc:	ldr	r0, [fp, #-4]
   16900:	ldr	r1, [sp, #8]
   16904:	ldr	r2, [sp, #4]
   16908:	movw	r3, #264	; 0x108
   1690c:	movt	r3, #3
   16910:	bl	161b4 <__assert_fail@plt+0x50cc>
   16914:	mov	sp, fp
   16918:	pop	{fp, pc}
   1691c:	push	{fp, lr}
   16920:	mov	fp, sp
   16924:	sub	sp, sp, #8
   16928:	str	r0, [sp, #4]
   1692c:	str	r1, [sp]
   16930:	ldr	r1, [sp, #4]
   16934:	ldr	r2, [sp]
   16938:	movw	r0, #0
   1693c:	bl	168e4 <__assert_fail@plt+0x57fc>
   16940:	mov	sp, fp
   16944:	pop	{fp, pc}
   16948:	push	{fp, lr}
   1694c:	mov	fp, sp
   16950:	sub	sp, sp, #8
   16954:	str	r0, [sp, #4]
   16958:	str	r1, [sp]
   1695c:	ldr	r0, [sp, #4]
   16960:	ldr	r1, [sp]
   16964:	mvn	r2, #0
   16968:	bl	168e4 <__assert_fail@plt+0x57fc>
   1696c:	mov	sp, fp
   16970:	pop	{fp, pc}
   16974:	push	{fp, lr}
   16978:	mov	fp, sp
   1697c:	sub	sp, sp, #8
   16980:	str	r0, [sp, #4]
   16984:	ldr	r1, [sp, #4]
   16988:	movw	r0, #0
   1698c:	bl	16948 <__assert_fail@plt+0x5860>
   16990:	mov	sp, fp
   16994:	pop	{fp, pc}
   16998:	push	{fp, lr}
   1699c:	mov	fp, sp
   169a0:	sub	sp, sp, #24
   169a4:	str	r0, [fp, #-8]
   169a8:	str	r1, [sp, #12]
   169ac:	ldr	r0, [fp, #-8]
   169b0:	bl	10fe0 <gettext@plt>
   169b4:	str	r0, [sp, #8]
   169b8:	ldr	r0, [sp, #8]
   169bc:	ldr	r1, [fp, #-8]
   169c0:	cmp	r0, r1
   169c4:	beq	169d4 <__assert_fail@plt+0x58ec>
   169c8:	ldr	r0, [sp, #8]
   169cc:	str	r0, [fp, #-4]
   169d0:	b	16aa0 <__assert_fail@plt+0x59b8>
   169d4:	bl	1d7fc <__assert_fail@plt+0xc714>
   169d8:	str	r0, [sp, #4]
   169dc:	ldr	r0, [sp, #4]
   169e0:	movw	r1, #60425	; 0xec09
   169e4:	movt	r1, #1
   169e8:	bl	1d674 <__assert_fail@plt+0xc58c>
   169ec:	cmp	r0, #0
   169f0:	bne	16a28 <__assert_fail@plt+0x5940>
   169f4:	ldr	r0, [fp, #-8]
   169f8:	ldrb	r0, [r0]
   169fc:	cmp	r0, #96	; 0x60
   16a00:	movw	r0, #0
   16a04:	moveq	r0, #1
   16a08:	tst	r0, #1
   16a0c:	movw	r0, #60435	; 0xec13
   16a10:	movt	r0, #1
   16a14:	movw	r1, #60431	; 0xec0f
   16a18:	movt	r1, #1
   16a1c:	movne	r0, r1
   16a20:	str	r0, [fp, #-4]
   16a24:	b	16aa0 <__assert_fail@plt+0x59b8>
   16a28:	ldr	r0, [sp, #4]
   16a2c:	movw	r1, #60439	; 0xec17
   16a30:	movt	r1, #1
   16a34:	bl	1d674 <__assert_fail@plt+0xc58c>
   16a38:	cmp	r0, #0
   16a3c:	bne	16a74 <__assert_fail@plt+0x598c>
   16a40:	ldr	r0, [fp, #-8]
   16a44:	ldrb	r0, [r0]
   16a48:	cmp	r0, #96	; 0x60
   16a4c:	movw	r0, #0
   16a50:	moveq	r0, #1
   16a54:	tst	r0, #1
   16a58:	movw	r0, #60451	; 0xec23
   16a5c:	movt	r0, #1
   16a60:	movw	r1, #60447	; 0xec1f
   16a64:	movt	r1, #1
   16a68:	movne	r0, r1
   16a6c:	str	r0, [fp, #-4]
   16a70:	b	16aa0 <__assert_fail@plt+0x59b8>
   16a74:	ldr	r0, [sp, #12]
   16a78:	cmp	r0, #9
   16a7c:	movw	r0, #0
   16a80:	moveq	r0, #1
   16a84:	tst	r0, #1
   16a88:	movw	r0, #60423	; 0xec07
   16a8c:	movt	r0, #1
   16a90:	movw	r1, #60419	; 0xec03
   16a94:	movt	r1, #1
   16a98:	movne	r0, r1
   16a9c:	str	r0, [fp, #-4]
   16aa0:	ldr	r0, [fp, #-4]
   16aa4:	mov	sp, fp
   16aa8:	pop	{fp, pc}
   16aac:	push	{fp, lr}
   16ab0:	mov	fp, sp
   16ab4:	sub	sp, sp, #96	; 0x60
   16ab8:	str	r0, [fp, #-8]
   16abc:	str	r1, [fp, #-12]
   16ac0:	str	r2, [fp, #-16]
   16ac4:	b	16e7c <__assert_fail@plt+0x5d94>
   16ac8:	b	16c9c <__assert_fail@plt+0x5bb4>
   16acc:	ldr	r0, [fp, #-16]
   16ad0:	cmp	r0, #0
   16ad4:	bcs	16bd8 <__assert_fail@plt+0x5af0>
   16ad8:	ldr	r0, [fp, #-12]
   16adc:	cmp	r0, #0
   16ae0:	bcs	16b68 <__assert_fail@plt+0x5a80>
   16ae4:	b	16b04 <__assert_fail@plt+0x5a1c>
   16ae8:	ldr	r0, [fp, #-12]
   16aec:	ldr	r1, [fp, #-16]
   16af0:	movw	r2, #127	; 0x7f
   16af4:	udiv	r1, r2, r1
   16af8:	cmp	r0, r1
   16afc:	bcc	16c6c <__assert_fail@plt+0x5b84>
   16b00:	b	16c84 <__assert_fail@plt+0x5b9c>
   16b04:	b	16b18 <__assert_fail@plt+0x5a30>
   16b08:	ldr	r0, [fp, #-16]
   16b0c:	cmp	r0, #1
   16b10:	bcc	16b28 <__assert_fail@plt+0x5a40>
   16b14:	b	16b34 <__assert_fail@plt+0x5a4c>
   16b18:	ldr	r0, [fp, #-16]
   16b1c:	movw	r1, #0
   16b20:	cmp	r1, r0
   16b24:	bcs	16b34 <__assert_fail@plt+0x5a4c>
   16b28:	movw	r0, #0
   16b2c:	str	r0, [fp, #-24]	; 0xffffffe8
   16b30:	b	16b4c <__assert_fail@plt+0x5a64>
   16b34:	ldr	r0, [fp, #-16]
   16b38:	movw	r1, #0
   16b3c:	sub	r0, r1, r0
   16b40:	movw	r1, #127	; 0x7f
   16b44:	udiv	r0, r1, r0
   16b48:	str	r0, [fp, #-24]	; 0xffffffe8
   16b4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b50:	ldr	r1, [fp, #-12]
   16b54:	mvn	r2, #0
   16b58:	sub	r1, r2, r1
   16b5c:	cmp	r0, r1
   16b60:	bls	16c6c <__assert_fail@plt+0x5b84>
   16b64:	b	16c84 <__assert_fail@plt+0x5b9c>
   16b68:	ldr	r0, [fp, #-16]
   16b6c:	cmn	r0, #1
   16b70:	bne	16bbc <__assert_fail@plt+0x5ad4>
   16b74:	b	16b94 <__assert_fail@plt+0x5aac>
   16b78:	ldr	r0, [fp, #-12]
   16b7c:	mvn	r1, #127	; 0x7f
   16b80:	add	r0, r0, r1
   16b84:	movw	r1, #0
   16b88:	cmp	r1, r0
   16b8c:	bcc	16c6c <__assert_fail@plt+0x5b84>
   16b90:	b	16c84 <__assert_fail@plt+0x5b9c>
   16b94:	ldr	r0, [fp, #-12]
   16b98:	movw	r1, #0
   16b9c:	cmp	r1, r0
   16ba0:	bcs	16c84 <__assert_fail@plt+0x5b9c>
   16ba4:	ldr	r0, [fp, #-12]
   16ba8:	sub	r0, r0, #1
   16bac:	movw	r1, #127	; 0x7f
   16bb0:	cmp	r1, r0
   16bb4:	bcc	16c6c <__assert_fail@plt+0x5b84>
   16bb8:	b	16c84 <__assert_fail@plt+0x5b9c>
   16bbc:	ldr	r0, [fp, #-16]
   16bc0:	mvn	r1, #127	; 0x7f
   16bc4:	udiv	r0, r1, r0
   16bc8:	ldr	r1, [fp, #-12]
   16bcc:	cmp	r0, r1
   16bd0:	bcc	16c6c <__assert_fail@plt+0x5b84>
   16bd4:	b	16c84 <__assert_fail@plt+0x5b9c>
   16bd8:	ldr	r0, [fp, #-16]
   16bdc:	cmp	r0, #0
   16be0:	bne	16be8 <__assert_fail@plt+0x5b00>
   16be4:	b	16c84 <__assert_fail@plt+0x5b9c>
   16be8:	ldr	r0, [fp, #-12]
   16bec:	cmp	r0, #0
   16bf0:	bcs	16c54 <__assert_fail@plt+0x5b6c>
   16bf4:	ldr	r0, [fp, #-12]
   16bf8:	cmn	r0, #1
   16bfc:	bne	16c38 <__assert_fail@plt+0x5b50>
   16c00:	b	16c20 <__assert_fail@plt+0x5b38>
   16c04:	ldr	r0, [fp, #-16]
   16c08:	mvn	r1, #127	; 0x7f
   16c0c:	add	r0, r0, r1
   16c10:	movw	r1, #0
   16c14:	cmp	r1, r0
   16c18:	bcc	16c6c <__assert_fail@plt+0x5b84>
   16c1c:	b	16c84 <__assert_fail@plt+0x5b9c>
   16c20:	ldr	r0, [fp, #-16]
   16c24:	sub	r0, r0, #1
   16c28:	movw	r1, #127	; 0x7f
   16c2c:	cmp	r1, r0
   16c30:	bcc	16c6c <__assert_fail@plt+0x5b84>
   16c34:	b	16c84 <__assert_fail@plt+0x5b9c>
   16c38:	ldr	r0, [fp, #-12]
   16c3c:	mvn	r1, #127	; 0x7f
   16c40:	udiv	r0, r1, r0
   16c44:	ldr	r1, [fp, #-16]
   16c48:	cmp	r0, r1
   16c4c:	bcc	16c6c <__assert_fail@plt+0x5b84>
   16c50:	b	16c84 <__assert_fail@plt+0x5b9c>
   16c54:	ldr	r0, [fp, #-16]
   16c58:	movw	r1, #127	; 0x7f
   16c5c:	udiv	r0, r1, r0
   16c60:	ldr	r1, [fp, #-12]
   16c64:	cmp	r0, r1
   16c68:	bcs	16c84 <__assert_fail@plt+0x5b9c>
   16c6c:	ldr	r0, [fp, #-12]
   16c70:	ldr	r1, [fp, #-16]
   16c74:	mul	r0, r0, r1
   16c78:	sxtb	r0, r0
   16c7c:	str	r0, [fp, #-20]	; 0xffffffec
   16c80:	b	17dac <__assert_fail@plt+0x6cc4>
   16c84:	ldr	r0, [fp, #-12]
   16c88:	ldr	r1, [fp, #-16]
   16c8c:	mul	r0, r0, r1
   16c90:	sxtb	r0, r0
   16c94:	str	r0, [fp, #-20]	; 0xffffffec
   16c98:	b	17dc4 <__assert_fail@plt+0x6cdc>
   16c9c:	ldr	r0, [fp, #-16]
   16ca0:	cmp	r0, #0
   16ca4:	bcs	16db0 <__assert_fail@plt+0x5cc8>
   16ca8:	ldr	r0, [fp, #-12]
   16cac:	cmp	r0, #0
   16cb0:	bcs	16d38 <__assert_fail@plt+0x5c50>
   16cb4:	b	16cd4 <__assert_fail@plt+0x5bec>
   16cb8:	ldr	r0, [fp, #-12]
   16cbc:	ldr	r1, [fp, #-16]
   16cc0:	movw	r2, #255	; 0xff
   16cc4:	udiv	r1, r2, r1
   16cc8:	cmp	r0, r1
   16ccc:	bcc	16e4c <__assert_fail@plt+0x5d64>
   16cd0:	b	16e64 <__assert_fail@plt+0x5d7c>
   16cd4:	b	16ce8 <__assert_fail@plt+0x5c00>
   16cd8:	ldr	r0, [fp, #-16]
   16cdc:	cmp	r0, #1
   16ce0:	bcc	16cf8 <__assert_fail@plt+0x5c10>
   16ce4:	b	16d04 <__assert_fail@plt+0x5c1c>
   16ce8:	ldr	r0, [fp, #-16]
   16cec:	movw	r1, #0
   16cf0:	cmp	r1, r0
   16cf4:	bcs	16d04 <__assert_fail@plt+0x5c1c>
   16cf8:	movw	r0, #0
   16cfc:	str	r0, [fp, #-28]	; 0xffffffe4
   16d00:	b	16d1c <__assert_fail@plt+0x5c34>
   16d04:	ldr	r0, [fp, #-16]
   16d08:	movw	r1, #0
   16d0c:	sub	r0, r1, r0
   16d10:	movw	r1, #255	; 0xff
   16d14:	udiv	r0, r1, r0
   16d18:	str	r0, [fp, #-28]	; 0xffffffe4
   16d1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16d20:	ldr	r1, [fp, #-12]
   16d24:	mvn	r2, #0
   16d28:	sub	r1, r2, r1
   16d2c:	cmp	r0, r1
   16d30:	bls	16e4c <__assert_fail@plt+0x5d64>
   16d34:	b	16e64 <__assert_fail@plt+0x5d7c>
   16d38:	b	16d40 <__assert_fail@plt+0x5c58>
   16d3c:	b	16d44 <__assert_fail@plt+0x5c5c>
   16d40:	b	16d94 <__assert_fail@plt+0x5cac>
   16d44:	ldr	r0, [fp, #-16]
   16d48:	cmn	r0, #1
   16d4c:	bne	16d94 <__assert_fail@plt+0x5cac>
   16d50:	b	16d6c <__assert_fail@plt+0x5c84>
   16d54:	ldr	r0, [fp, #-12]
   16d58:	add	r0, r0, #0
   16d5c:	movw	r1, #0
   16d60:	cmp	r1, r0
   16d64:	bcc	16e4c <__assert_fail@plt+0x5d64>
   16d68:	b	16e64 <__assert_fail@plt+0x5d7c>
   16d6c:	ldr	r0, [fp, #-12]
   16d70:	movw	r1, #0
   16d74:	cmp	r1, r0
   16d78:	bcs	16e64 <__assert_fail@plt+0x5d7c>
   16d7c:	ldr	r0, [fp, #-12]
   16d80:	sub	r0, r0, #1
   16d84:	mvn	r1, #0
   16d88:	cmp	r1, r0
   16d8c:	bcc	16e4c <__assert_fail@plt+0x5d64>
   16d90:	b	16e64 <__assert_fail@plt+0x5d7c>
   16d94:	ldr	r0, [fp, #-16]
   16d98:	movw	r1, #0
   16d9c:	udiv	r0, r1, r0
   16da0:	ldr	r1, [fp, #-12]
   16da4:	cmp	r0, r1
   16da8:	bcc	16e4c <__assert_fail@plt+0x5d64>
   16dac:	b	16e64 <__assert_fail@plt+0x5d7c>
   16db0:	ldr	r0, [fp, #-16]
   16db4:	cmp	r0, #0
   16db8:	bne	16dc0 <__assert_fail@plt+0x5cd8>
   16dbc:	b	16e64 <__assert_fail@plt+0x5d7c>
   16dc0:	ldr	r0, [fp, #-12]
   16dc4:	cmp	r0, #0
   16dc8:	bcs	16e34 <__assert_fail@plt+0x5d4c>
   16dcc:	b	16dd4 <__assert_fail@plt+0x5cec>
   16dd0:	b	16dd8 <__assert_fail@plt+0x5cf0>
   16dd4:	b	16e18 <__assert_fail@plt+0x5d30>
   16dd8:	ldr	r0, [fp, #-12]
   16ddc:	cmn	r0, #1
   16de0:	bne	16e18 <__assert_fail@plt+0x5d30>
   16de4:	b	16e00 <__assert_fail@plt+0x5d18>
   16de8:	ldr	r0, [fp, #-16]
   16dec:	add	r0, r0, #0
   16df0:	movw	r1, #0
   16df4:	cmp	r1, r0
   16df8:	bcc	16e4c <__assert_fail@plt+0x5d64>
   16dfc:	b	16e64 <__assert_fail@plt+0x5d7c>
   16e00:	ldr	r0, [fp, #-16]
   16e04:	sub	r0, r0, #1
   16e08:	mvn	r1, #0
   16e0c:	cmp	r1, r0
   16e10:	bcc	16e4c <__assert_fail@plt+0x5d64>
   16e14:	b	16e64 <__assert_fail@plt+0x5d7c>
   16e18:	ldr	r0, [fp, #-12]
   16e1c:	movw	r1, #0
   16e20:	udiv	r0, r1, r0
   16e24:	ldr	r1, [fp, #-16]
   16e28:	cmp	r0, r1
   16e2c:	bcc	16e4c <__assert_fail@plt+0x5d64>
   16e30:	b	16e64 <__assert_fail@plt+0x5d7c>
   16e34:	ldr	r0, [fp, #-16]
   16e38:	movw	r1, #255	; 0xff
   16e3c:	udiv	r0, r1, r0
   16e40:	ldr	r1, [fp, #-12]
   16e44:	cmp	r0, r1
   16e48:	bcs	16e64 <__assert_fail@plt+0x5d7c>
   16e4c:	ldr	r0, [fp, #-12]
   16e50:	ldr	r1, [fp, #-16]
   16e54:	mul	r0, r0, r1
   16e58:	and	r0, r0, #255	; 0xff
   16e5c:	str	r0, [fp, #-20]	; 0xffffffec
   16e60:	b	17dac <__assert_fail@plt+0x6cc4>
   16e64:	ldr	r0, [fp, #-12]
   16e68:	ldr	r1, [fp, #-16]
   16e6c:	mul	r0, r0, r1
   16e70:	and	r0, r0, #255	; 0xff
   16e74:	str	r0, [fp, #-20]	; 0xffffffec
   16e78:	b	17dc4 <__assert_fail@plt+0x6cdc>
   16e7c:	b	17234 <__assert_fail@plt+0x614c>
   16e80:	b	17054 <__assert_fail@plt+0x5f6c>
   16e84:	ldr	r0, [fp, #-16]
   16e88:	cmp	r0, #0
   16e8c:	bcs	16f90 <__assert_fail@plt+0x5ea8>
   16e90:	ldr	r0, [fp, #-12]
   16e94:	cmp	r0, #0
   16e98:	bcs	16f20 <__assert_fail@plt+0x5e38>
   16e9c:	b	16ebc <__assert_fail@plt+0x5dd4>
   16ea0:	ldr	r0, [fp, #-12]
   16ea4:	ldr	r1, [fp, #-16]
   16ea8:	movw	r2, #32767	; 0x7fff
   16eac:	udiv	r1, r2, r1
   16eb0:	cmp	r0, r1
   16eb4:	bcc	17024 <__assert_fail@plt+0x5f3c>
   16eb8:	b	1703c <__assert_fail@plt+0x5f54>
   16ebc:	b	16ed0 <__assert_fail@plt+0x5de8>
   16ec0:	ldr	r0, [fp, #-16]
   16ec4:	cmp	r0, #1
   16ec8:	bcc	16ee0 <__assert_fail@plt+0x5df8>
   16ecc:	b	16eec <__assert_fail@plt+0x5e04>
   16ed0:	ldr	r0, [fp, #-16]
   16ed4:	movw	r1, #0
   16ed8:	cmp	r1, r0
   16edc:	bcs	16eec <__assert_fail@plt+0x5e04>
   16ee0:	movw	r0, #0
   16ee4:	str	r0, [fp, #-32]	; 0xffffffe0
   16ee8:	b	16f04 <__assert_fail@plt+0x5e1c>
   16eec:	ldr	r0, [fp, #-16]
   16ef0:	movw	r1, #0
   16ef4:	sub	r0, r1, r0
   16ef8:	movw	r1, #32767	; 0x7fff
   16efc:	udiv	r0, r1, r0
   16f00:	str	r0, [fp, #-32]	; 0xffffffe0
   16f04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16f08:	ldr	r1, [fp, #-12]
   16f0c:	mvn	r2, #0
   16f10:	sub	r1, r2, r1
   16f14:	cmp	r0, r1
   16f18:	bls	17024 <__assert_fail@plt+0x5f3c>
   16f1c:	b	1703c <__assert_fail@plt+0x5f54>
   16f20:	ldr	r0, [fp, #-16]
   16f24:	cmn	r0, #1
   16f28:	bne	16f74 <__assert_fail@plt+0x5e8c>
   16f2c:	b	16f4c <__assert_fail@plt+0x5e64>
   16f30:	ldr	r0, [pc, #3760]	; 17de8 <__assert_fail@plt+0x6d00>
   16f34:	ldr	r1, [fp, #-12]
   16f38:	add	r0, r1, r0
   16f3c:	movw	r1, #0
   16f40:	cmp	r1, r0
   16f44:	bcc	17024 <__assert_fail@plt+0x5f3c>
   16f48:	b	1703c <__assert_fail@plt+0x5f54>
   16f4c:	ldr	r0, [fp, #-12]
   16f50:	movw	r1, #0
   16f54:	cmp	r1, r0
   16f58:	bcs	1703c <__assert_fail@plt+0x5f54>
   16f5c:	ldr	r0, [fp, #-12]
   16f60:	sub	r0, r0, #1
   16f64:	movw	r1, #32767	; 0x7fff
   16f68:	cmp	r1, r0
   16f6c:	bcc	17024 <__assert_fail@plt+0x5f3c>
   16f70:	b	1703c <__assert_fail@plt+0x5f54>
   16f74:	ldr	r0, [pc, #3692]	; 17de8 <__assert_fail@plt+0x6d00>
   16f78:	ldr	r1, [fp, #-16]
   16f7c:	udiv	r0, r0, r1
   16f80:	ldr	r1, [fp, #-12]
   16f84:	cmp	r0, r1
   16f88:	bcc	17024 <__assert_fail@plt+0x5f3c>
   16f8c:	b	1703c <__assert_fail@plt+0x5f54>
   16f90:	ldr	r0, [fp, #-16]
   16f94:	cmp	r0, #0
   16f98:	bne	16fa0 <__assert_fail@plt+0x5eb8>
   16f9c:	b	1703c <__assert_fail@plt+0x5f54>
   16fa0:	ldr	r0, [fp, #-12]
   16fa4:	cmp	r0, #0
   16fa8:	bcs	1700c <__assert_fail@plt+0x5f24>
   16fac:	ldr	r0, [fp, #-12]
   16fb0:	cmn	r0, #1
   16fb4:	bne	16ff0 <__assert_fail@plt+0x5f08>
   16fb8:	b	16fd8 <__assert_fail@plt+0x5ef0>
   16fbc:	ldr	r0, [pc, #3620]	; 17de8 <__assert_fail@plt+0x6d00>
   16fc0:	ldr	r1, [fp, #-16]
   16fc4:	add	r0, r1, r0
   16fc8:	movw	r1, #0
   16fcc:	cmp	r1, r0
   16fd0:	bcc	17024 <__assert_fail@plt+0x5f3c>
   16fd4:	b	1703c <__assert_fail@plt+0x5f54>
   16fd8:	ldr	r0, [fp, #-16]
   16fdc:	sub	r0, r0, #1
   16fe0:	movw	r1, #32767	; 0x7fff
   16fe4:	cmp	r1, r0
   16fe8:	bcc	17024 <__assert_fail@plt+0x5f3c>
   16fec:	b	1703c <__assert_fail@plt+0x5f54>
   16ff0:	ldr	r0, [pc, #3568]	; 17de8 <__assert_fail@plt+0x6d00>
   16ff4:	ldr	r1, [fp, #-12]
   16ff8:	udiv	r0, r0, r1
   16ffc:	ldr	r1, [fp, #-16]
   17000:	cmp	r0, r1
   17004:	bcc	17024 <__assert_fail@plt+0x5f3c>
   17008:	b	1703c <__assert_fail@plt+0x5f54>
   1700c:	ldr	r0, [fp, #-16]
   17010:	movw	r1, #32767	; 0x7fff
   17014:	udiv	r0, r1, r0
   17018:	ldr	r1, [fp, #-12]
   1701c:	cmp	r0, r1
   17020:	bcs	1703c <__assert_fail@plt+0x5f54>
   17024:	ldr	r0, [fp, #-12]
   17028:	ldr	r1, [fp, #-16]
   1702c:	mul	r0, r0, r1
   17030:	sxth	r0, r0
   17034:	str	r0, [fp, #-20]	; 0xffffffec
   17038:	b	17dac <__assert_fail@plt+0x6cc4>
   1703c:	ldr	r0, [fp, #-12]
   17040:	ldr	r1, [fp, #-16]
   17044:	mul	r0, r0, r1
   17048:	sxth	r0, r0
   1704c:	str	r0, [fp, #-20]	; 0xffffffec
   17050:	b	17dc4 <__assert_fail@plt+0x6cdc>
   17054:	ldr	r0, [fp, #-16]
   17058:	cmp	r0, #0
   1705c:	bcs	17168 <__assert_fail@plt+0x6080>
   17060:	ldr	r0, [fp, #-12]
   17064:	cmp	r0, #0
   17068:	bcs	170f0 <__assert_fail@plt+0x6008>
   1706c:	b	1708c <__assert_fail@plt+0x5fa4>
   17070:	ldr	r0, [fp, #-12]
   17074:	ldr	r1, [fp, #-16]
   17078:	movw	r2, #65535	; 0xffff
   1707c:	udiv	r1, r2, r1
   17080:	cmp	r0, r1
   17084:	bcc	17204 <__assert_fail@plt+0x611c>
   17088:	b	1721c <__assert_fail@plt+0x6134>
   1708c:	b	170a0 <__assert_fail@plt+0x5fb8>
   17090:	ldr	r0, [fp, #-16]
   17094:	cmp	r0, #1
   17098:	bcc	170b0 <__assert_fail@plt+0x5fc8>
   1709c:	b	170bc <__assert_fail@plt+0x5fd4>
   170a0:	ldr	r0, [fp, #-16]
   170a4:	movw	r1, #0
   170a8:	cmp	r1, r0
   170ac:	bcs	170bc <__assert_fail@plt+0x5fd4>
   170b0:	movw	r0, #0
   170b4:	str	r0, [fp, #-36]	; 0xffffffdc
   170b8:	b	170d4 <__assert_fail@plt+0x5fec>
   170bc:	ldr	r0, [fp, #-16]
   170c0:	movw	r1, #0
   170c4:	sub	r0, r1, r0
   170c8:	movw	r1, #65535	; 0xffff
   170cc:	udiv	r0, r1, r0
   170d0:	str	r0, [fp, #-36]	; 0xffffffdc
   170d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   170d8:	ldr	r1, [fp, #-12]
   170dc:	mvn	r2, #0
   170e0:	sub	r1, r2, r1
   170e4:	cmp	r0, r1
   170e8:	bls	17204 <__assert_fail@plt+0x611c>
   170ec:	b	1721c <__assert_fail@plt+0x6134>
   170f0:	b	170f8 <__assert_fail@plt+0x6010>
   170f4:	b	170fc <__assert_fail@plt+0x6014>
   170f8:	b	1714c <__assert_fail@plt+0x6064>
   170fc:	ldr	r0, [fp, #-16]
   17100:	cmn	r0, #1
   17104:	bne	1714c <__assert_fail@plt+0x6064>
   17108:	b	17124 <__assert_fail@plt+0x603c>
   1710c:	ldr	r0, [fp, #-12]
   17110:	add	r0, r0, #0
   17114:	movw	r1, #0
   17118:	cmp	r1, r0
   1711c:	bcc	17204 <__assert_fail@plt+0x611c>
   17120:	b	1721c <__assert_fail@plt+0x6134>
   17124:	ldr	r0, [fp, #-12]
   17128:	movw	r1, #0
   1712c:	cmp	r1, r0
   17130:	bcs	1721c <__assert_fail@plt+0x6134>
   17134:	ldr	r0, [fp, #-12]
   17138:	sub	r0, r0, #1
   1713c:	mvn	r1, #0
   17140:	cmp	r1, r0
   17144:	bcc	17204 <__assert_fail@plt+0x611c>
   17148:	b	1721c <__assert_fail@plt+0x6134>
   1714c:	ldr	r0, [fp, #-16]
   17150:	movw	r1, #0
   17154:	udiv	r0, r1, r0
   17158:	ldr	r1, [fp, #-12]
   1715c:	cmp	r0, r1
   17160:	bcc	17204 <__assert_fail@plt+0x611c>
   17164:	b	1721c <__assert_fail@plt+0x6134>
   17168:	ldr	r0, [fp, #-16]
   1716c:	cmp	r0, #0
   17170:	bne	17178 <__assert_fail@plt+0x6090>
   17174:	b	1721c <__assert_fail@plt+0x6134>
   17178:	ldr	r0, [fp, #-12]
   1717c:	cmp	r0, #0
   17180:	bcs	171ec <__assert_fail@plt+0x6104>
   17184:	b	1718c <__assert_fail@plt+0x60a4>
   17188:	b	17190 <__assert_fail@plt+0x60a8>
   1718c:	b	171d0 <__assert_fail@plt+0x60e8>
   17190:	ldr	r0, [fp, #-12]
   17194:	cmn	r0, #1
   17198:	bne	171d0 <__assert_fail@plt+0x60e8>
   1719c:	b	171b8 <__assert_fail@plt+0x60d0>
   171a0:	ldr	r0, [fp, #-16]
   171a4:	add	r0, r0, #0
   171a8:	movw	r1, #0
   171ac:	cmp	r1, r0
   171b0:	bcc	17204 <__assert_fail@plt+0x611c>
   171b4:	b	1721c <__assert_fail@plt+0x6134>
   171b8:	ldr	r0, [fp, #-16]
   171bc:	sub	r0, r0, #1
   171c0:	mvn	r1, #0
   171c4:	cmp	r1, r0
   171c8:	bcc	17204 <__assert_fail@plt+0x611c>
   171cc:	b	1721c <__assert_fail@plt+0x6134>
   171d0:	ldr	r0, [fp, #-12]
   171d4:	movw	r1, #0
   171d8:	udiv	r0, r1, r0
   171dc:	ldr	r1, [fp, #-16]
   171e0:	cmp	r0, r1
   171e4:	bcc	17204 <__assert_fail@plt+0x611c>
   171e8:	b	1721c <__assert_fail@plt+0x6134>
   171ec:	ldr	r0, [fp, #-16]
   171f0:	movw	r1, #65535	; 0xffff
   171f4:	udiv	r0, r1, r0
   171f8:	ldr	r1, [fp, #-12]
   171fc:	cmp	r0, r1
   17200:	bcs	1721c <__assert_fail@plt+0x6134>
   17204:	ldr	r0, [fp, #-12]
   17208:	ldr	r1, [fp, #-16]
   1720c:	mul	r0, r0, r1
   17210:	uxth	r0, r0
   17214:	str	r0, [fp, #-20]	; 0xffffffec
   17218:	b	17dac <__assert_fail@plt+0x6cc4>
   1721c:	ldr	r0, [fp, #-12]
   17220:	ldr	r1, [fp, #-16]
   17224:	mul	r0, r0, r1
   17228:	uxth	r0, r0
   1722c:	str	r0, [fp, #-20]	; 0xffffffec
   17230:	b	17dc4 <__assert_fail@plt+0x6cdc>
   17234:	b	17238 <__assert_fail@plt+0x6150>
   17238:	b	173fc <__assert_fail@plt+0x6314>
   1723c:	ldr	r0, [fp, #-16]
   17240:	cmp	r0, #0
   17244:	bcs	17344 <__assert_fail@plt+0x625c>
   17248:	ldr	r0, [fp, #-12]
   1724c:	cmp	r0, #0
   17250:	bcs	172d8 <__assert_fail@plt+0x61f0>
   17254:	b	17274 <__assert_fail@plt+0x618c>
   17258:	ldr	r0, [pc, #2944]	; 17de0 <__assert_fail@plt+0x6cf8>
   1725c:	ldr	r1, [fp, #-12]
   17260:	ldr	r2, [fp, #-16]
   17264:	udiv	r0, r0, r2
   17268:	cmp	r1, r0
   1726c:	bcc	173d4 <__assert_fail@plt+0x62ec>
   17270:	b	173e8 <__assert_fail@plt+0x6300>
   17274:	b	17288 <__assert_fail@plt+0x61a0>
   17278:	ldr	r0, [fp, #-16]
   1727c:	cmp	r0, #1
   17280:	bcc	17298 <__assert_fail@plt+0x61b0>
   17284:	b	172a4 <__assert_fail@plt+0x61bc>
   17288:	ldr	r0, [fp, #-16]
   1728c:	movw	r1, #0
   17290:	cmp	r1, r0
   17294:	bcs	172a4 <__assert_fail@plt+0x61bc>
   17298:	movw	r0, #0
   1729c:	str	r0, [fp, #-40]	; 0xffffffd8
   172a0:	b	172bc <__assert_fail@plt+0x61d4>
   172a4:	ldr	r0, [pc, #2868]	; 17de0 <__assert_fail@plt+0x6cf8>
   172a8:	ldr	r1, [fp, #-16]
   172ac:	movw	r2, #0
   172b0:	sub	r1, r2, r1
   172b4:	udiv	r0, r0, r1
   172b8:	str	r0, [fp, #-40]	; 0xffffffd8
   172bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   172c0:	ldr	r1, [fp, #-12]
   172c4:	mvn	r2, #0
   172c8:	sub	r1, r2, r1
   172cc:	cmp	r0, r1
   172d0:	bls	173d4 <__assert_fail@plt+0x62ec>
   172d4:	b	173e8 <__assert_fail@plt+0x6300>
   172d8:	ldr	r0, [fp, #-16]
   172dc:	cmn	r0, #1
   172e0:	bne	17328 <__assert_fail@plt+0x6240>
   172e4:	b	17300 <__assert_fail@plt+0x6218>
   172e8:	ldr	r0, [fp, #-12]
   172ec:	add	r0, r0, #-2147483648	; 0x80000000
   172f0:	movw	r1, #0
   172f4:	cmp	r1, r0
   172f8:	bcc	173d4 <__assert_fail@plt+0x62ec>
   172fc:	b	173e8 <__assert_fail@plt+0x6300>
   17300:	ldr	r0, [fp, #-12]
   17304:	movw	r1, #0
   17308:	cmp	r1, r0
   1730c:	bcs	173e8 <__assert_fail@plt+0x6300>
   17310:	ldr	r0, [pc, #2760]	; 17de0 <__assert_fail@plt+0x6cf8>
   17314:	ldr	r1, [fp, #-12]
   17318:	sub	r1, r1, #1
   1731c:	cmp	r0, r1
   17320:	bcc	173d4 <__assert_fail@plt+0x62ec>
   17324:	b	173e8 <__assert_fail@plt+0x6300>
   17328:	ldr	r0, [pc, #2740]	; 17de4 <__assert_fail@plt+0x6cfc>
   1732c:	ldr	r1, [fp, #-16]
   17330:	udiv	r0, r0, r1
   17334:	ldr	r1, [fp, #-12]
   17338:	cmp	r0, r1
   1733c:	bcc	173d4 <__assert_fail@plt+0x62ec>
   17340:	b	173e8 <__assert_fail@plt+0x6300>
   17344:	ldr	r0, [fp, #-16]
   17348:	cmp	r0, #0
   1734c:	bne	17354 <__assert_fail@plt+0x626c>
   17350:	b	173e8 <__assert_fail@plt+0x6300>
   17354:	ldr	r0, [fp, #-12]
   17358:	cmp	r0, #0
   1735c:	bcs	173bc <__assert_fail@plt+0x62d4>
   17360:	ldr	r0, [fp, #-12]
   17364:	cmn	r0, #1
   17368:	bne	173a0 <__assert_fail@plt+0x62b8>
   1736c:	b	17388 <__assert_fail@plt+0x62a0>
   17370:	ldr	r0, [fp, #-16]
   17374:	add	r0, r0, #-2147483648	; 0x80000000
   17378:	movw	r1, #0
   1737c:	cmp	r1, r0
   17380:	bcc	173d4 <__assert_fail@plt+0x62ec>
   17384:	b	173e8 <__assert_fail@plt+0x6300>
   17388:	ldr	r0, [pc, #2640]	; 17de0 <__assert_fail@plt+0x6cf8>
   1738c:	ldr	r1, [fp, #-16]
   17390:	sub	r1, r1, #1
   17394:	cmp	r0, r1
   17398:	bcc	173d4 <__assert_fail@plt+0x62ec>
   1739c:	b	173e8 <__assert_fail@plt+0x6300>
   173a0:	ldr	r0, [pc, #2620]	; 17de4 <__assert_fail@plt+0x6cfc>
   173a4:	ldr	r1, [fp, #-12]
   173a8:	udiv	r0, r0, r1
   173ac:	ldr	r1, [fp, #-16]
   173b0:	cmp	r0, r1
   173b4:	bcc	173d4 <__assert_fail@plt+0x62ec>
   173b8:	b	173e8 <__assert_fail@plt+0x6300>
   173bc:	ldr	r0, [pc, #2588]	; 17de0 <__assert_fail@plt+0x6cf8>
   173c0:	ldr	r1, [fp, #-16]
   173c4:	udiv	r0, r0, r1
   173c8:	ldr	r1, [fp, #-12]
   173cc:	cmp	r0, r1
   173d0:	bcs	173e8 <__assert_fail@plt+0x6300>
   173d4:	ldr	r0, [fp, #-12]
   173d8:	ldr	r1, [fp, #-16]
   173dc:	mul	r0, r0, r1
   173e0:	str	r0, [fp, #-20]	; 0xffffffec
   173e4:	b	17dac <__assert_fail@plt+0x6cc4>
   173e8:	ldr	r0, [fp, #-12]
   173ec:	ldr	r1, [fp, #-16]
   173f0:	mul	r0, r0, r1
   173f4:	str	r0, [fp, #-20]	; 0xffffffec
   173f8:	b	17dc4 <__assert_fail@plt+0x6cdc>
   173fc:	ldr	r0, [fp, #-16]
   17400:	cmp	r0, #0
   17404:	bcs	17510 <__assert_fail@plt+0x6428>
   17408:	ldr	r0, [fp, #-12]
   1740c:	cmp	r0, #0
   17410:	bcs	17498 <__assert_fail@plt+0x63b0>
   17414:	b	17434 <__assert_fail@plt+0x634c>
   17418:	ldr	r0, [fp, #-12]
   1741c:	ldr	r1, [fp, #-16]
   17420:	mvn	r2, #0
   17424:	udiv	r1, r2, r1
   17428:	cmp	r0, r1
   1742c:	bcc	175ac <__assert_fail@plt+0x64c4>
   17430:	b	175c0 <__assert_fail@plt+0x64d8>
   17434:	b	17448 <__assert_fail@plt+0x6360>
   17438:	ldr	r0, [fp, #-16]
   1743c:	cmp	r0, #1
   17440:	bcc	17458 <__assert_fail@plt+0x6370>
   17444:	b	17464 <__assert_fail@plt+0x637c>
   17448:	ldr	r0, [fp, #-16]
   1744c:	movw	r1, #0
   17450:	cmp	r1, r0
   17454:	bcs	17464 <__assert_fail@plt+0x637c>
   17458:	movw	r0, #1
   1745c:	str	r0, [fp, #-44]	; 0xffffffd4
   17460:	b	1747c <__assert_fail@plt+0x6394>
   17464:	ldr	r0, [fp, #-16]
   17468:	movw	r1, #0
   1746c:	sub	r0, r1, r0
   17470:	mvn	r1, #0
   17474:	udiv	r0, r1, r0
   17478:	str	r0, [fp, #-44]	; 0xffffffd4
   1747c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17480:	ldr	r1, [fp, #-12]
   17484:	mvn	r2, #0
   17488:	sub	r1, r2, r1
   1748c:	cmp	r0, r1
   17490:	bls	175ac <__assert_fail@plt+0x64c4>
   17494:	b	175c0 <__assert_fail@plt+0x64d8>
   17498:	b	174a0 <__assert_fail@plt+0x63b8>
   1749c:	b	174a4 <__assert_fail@plt+0x63bc>
   174a0:	b	174f4 <__assert_fail@plt+0x640c>
   174a4:	ldr	r0, [fp, #-16]
   174a8:	cmn	r0, #1
   174ac:	bne	174f4 <__assert_fail@plt+0x640c>
   174b0:	b	174cc <__assert_fail@plt+0x63e4>
   174b4:	ldr	r0, [fp, #-12]
   174b8:	add	r0, r0, #0
   174bc:	movw	r1, #0
   174c0:	cmp	r1, r0
   174c4:	bcc	175ac <__assert_fail@plt+0x64c4>
   174c8:	b	175c0 <__assert_fail@plt+0x64d8>
   174cc:	ldr	r0, [fp, #-12]
   174d0:	movw	r1, #0
   174d4:	cmp	r1, r0
   174d8:	bcs	175c0 <__assert_fail@plt+0x64d8>
   174dc:	ldr	r0, [fp, #-12]
   174e0:	sub	r0, r0, #1
   174e4:	mvn	r1, #0
   174e8:	cmp	r1, r0
   174ec:	bcc	175ac <__assert_fail@plt+0x64c4>
   174f0:	b	175c0 <__assert_fail@plt+0x64d8>
   174f4:	ldr	r0, [fp, #-16]
   174f8:	movw	r1, #0
   174fc:	udiv	r0, r1, r0
   17500:	ldr	r1, [fp, #-12]
   17504:	cmp	r0, r1
   17508:	bcc	175ac <__assert_fail@plt+0x64c4>
   1750c:	b	175c0 <__assert_fail@plt+0x64d8>
   17510:	ldr	r0, [fp, #-16]
   17514:	cmp	r0, #0
   17518:	bne	17520 <__assert_fail@plt+0x6438>
   1751c:	b	175c0 <__assert_fail@plt+0x64d8>
   17520:	ldr	r0, [fp, #-12]
   17524:	cmp	r0, #0
   17528:	bcs	17594 <__assert_fail@plt+0x64ac>
   1752c:	b	17534 <__assert_fail@plt+0x644c>
   17530:	b	17538 <__assert_fail@plt+0x6450>
   17534:	b	17578 <__assert_fail@plt+0x6490>
   17538:	ldr	r0, [fp, #-12]
   1753c:	cmn	r0, #1
   17540:	bne	17578 <__assert_fail@plt+0x6490>
   17544:	b	17560 <__assert_fail@plt+0x6478>
   17548:	ldr	r0, [fp, #-16]
   1754c:	add	r0, r0, #0
   17550:	movw	r1, #0
   17554:	cmp	r1, r0
   17558:	bcc	175ac <__assert_fail@plt+0x64c4>
   1755c:	b	175c0 <__assert_fail@plt+0x64d8>
   17560:	ldr	r0, [fp, #-16]
   17564:	sub	r0, r0, #1
   17568:	mvn	r1, #0
   1756c:	cmp	r1, r0
   17570:	bcc	175ac <__assert_fail@plt+0x64c4>
   17574:	b	175c0 <__assert_fail@plt+0x64d8>
   17578:	ldr	r0, [fp, #-12]
   1757c:	movw	r1, #0
   17580:	udiv	r0, r1, r0
   17584:	ldr	r1, [fp, #-16]
   17588:	cmp	r0, r1
   1758c:	bcc	175ac <__assert_fail@plt+0x64c4>
   17590:	b	175c0 <__assert_fail@plt+0x64d8>
   17594:	ldr	r0, [fp, #-16]
   17598:	mvn	r1, #0
   1759c:	udiv	r0, r1, r0
   175a0:	ldr	r1, [fp, #-12]
   175a4:	cmp	r0, r1
   175a8:	bcs	175c0 <__assert_fail@plt+0x64d8>
   175ac:	ldr	r0, [fp, #-12]
   175b0:	ldr	r1, [fp, #-16]
   175b4:	mul	r0, r0, r1
   175b8:	str	r0, [fp, #-20]	; 0xffffffec
   175bc:	b	17dac <__assert_fail@plt+0x6cc4>
   175c0:	ldr	r0, [fp, #-12]
   175c4:	ldr	r1, [fp, #-16]
   175c8:	mul	r0, r0, r1
   175cc:	str	r0, [fp, #-20]	; 0xffffffec
   175d0:	b	17dc4 <__assert_fail@plt+0x6cdc>
   175d4:	b	175d8 <__assert_fail@plt+0x64f0>
   175d8:	b	1779c <__assert_fail@plt+0x66b4>
   175dc:	ldr	r0, [fp, #-16]
   175e0:	cmp	r0, #0
   175e4:	bcs	176e4 <__assert_fail@plt+0x65fc>
   175e8:	ldr	r0, [fp, #-12]
   175ec:	cmp	r0, #0
   175f0:	bcs	17678 <__assert_fail@plt+0x6590>
   175f4:	b	17614 <__assert_fail@plt+0x652c>
   175f8:	ldr	r0, [pc, #2016]	; 17de0 <__assert_fail@plt+0x6cf8>
   175fc:	ldr	r1, [fp, #-12]
   17600:	ldr	r2, [fp, #-16]
   17604:	udiv	r0, r0, r2
   17608:	cmp	r1, r0
   1760c:	bcc	17774 <__assert_fail@plt+0x668c>
   17610:	b	17788 <__assert_fail@plt+0x66a0>
   17614:	b	17628 <__assert_fail@plt+0x6540>
   17618:	ldr	r0, [fp, #-16]
   1761c:	cmp	r0, #1
   17620:	bcc	17638 <__assert_fail@plt+0x6550>
   17624:	b	17644 <__assert_fail@plt+0x655c>
   17628:	ldr	r0, [fp, #-16]
   1762c:	movw	r1, #0
   17630:	cmp	r1, r0
   17634:	bcs	17644 <__assert_fail@plt+0x655c>
   17638:	movw	r0, #0
   1763c:	str	r0, [sp, #48]	; 0x30
   17640:	b	1765c <__assert_fail@plt+0x6574>
   17644:	ldr	r0, [pc, #1940]	; 17de0 <__assert_fail@plt+0x6cf8>
   17648:	ldr	r1, [fp, #-16]
   1764c:	movw	r2, #0
   17650:	sub	r1, r2, r1
   17654:	udiv	r0, r0, r1
   17658:	str	r0, [sp, #48]	; 0x30
   1765c:	ldr	r0, [sp, #48]	; 0x30
   17660:	ldr	r1, [fp, #-12]
   17664:	mvn	r2, #0
   17668:	sub	r1, r2, r1
   1766c:	cmp	r0, r1
   17670:	bls	17774 <__assert_fail@plt+0x668c>
   17674:	b	17788 <__assert_fail@plt+0x66a0>
   17678:	ldr	r0, [fp, #-16]
   1767c:	cmn	r0, #1
   17680:	bne	176c8 <__assert_fail@plt+0x65e0>
   17684:	b	176a0 <__assert_fail@plt+0x65b8>
   17688:	ldr	r0, [fp, #-12]
   1768c:	add	r0, r0, #-2147483648	; 0x80000000
   17690:	movw	r1, #0
   17694:	cmp	r1, r0
   17698:	bcc	17774 <__assert_fail@plt+0x668c>
   1769c:	b	17788 <__assert_fail@plt+0x66a0>
   176a0:	ldr	r0, [fp, #-12]
   176a4:	movw	r1, #0
   176a8:	cmp	r1, r0
   176ac:	bcs	17788 <__assert_fail@plt+0x66a0>
   176b0:	ldr	r0, [pc, #1832]	; 17de0 <__assert_fail@plt+0x6cf8>
   176b4:	ldr	r1, [fp, #-12]
   176b8:	sub	r1, r1, #1
   176bc:	cmp	r0, r1
   176c0:	bcc	17774 <__assert_fail@plt+0x668c>
   176c4:	b	17788 <__assert_fail@plt+0x66a0>
   176c8:	ldr	r0, [pc, #1812]	; 17de4 <__assert_fail@plt+0x6cfc>
   176cc:	ldr	r1, [fp, #-16]
   176d0:	udiv	r0, r0, r1
   176d4:	ldr	r1, [fp, #-12]
   176d8:	cmp	r0, r1
   176dc:	bcc	17774 <__assert_fail@plt+0x668c>
   176e0:	b	17788 <__assert_fail@plt+0x66a0>
   176e4:	ldr	r0, [fp, #-16]
   176e8:	cmp	r0, #0
   176ec:	bne	176f4 <__assert_fail@plt+0x660c>
   176f0:	b	17788 <__assert_fail@plt+0x66a0>
   176f4:	ldr	r0, [fp, #-12]
   176f8:	cmp	r0, #0
   176fc:	bcs	1775c <__assert_fail@plt+0x6674>
   17700:	ldr	r0, [fp, #-12]
   17704:	cmn	r0, #1
   17708:	bne	17740 <__assert_fail@plt+0x6658>
   1770c:	b	17728 <__assert_fail@plt+0x6640>
   17710:	ldr	r0, [fp, #-16]
   17714:	add	r0, r0, #-2147483648	; 0x80000000
   17718:	movw	r1, #0
   1771c:	cmp	r1, r0
   17720:	bcc	17774 <__assert_fail@plt+0x668c>
   17724:	b	17788 <__assert_fail@plt+0x66a0>
   17728:	ldr	r0, [pc, #1712]	; 17de0 <__assert_fail@plt+0x6cf8>
   1772c:	ldr	r1, [fp, #-16]
   17730:	sub	r1, r1, #1
   17734:	cmp	r0, r1
   17738:	bcc	17774 <__assert_fail@plt+0x668c>
   1773c:	b	17788 <__assert_fail@plt+0x66a0>
   17740:	ldr	r0, [pc, #1692]	; 17de4 <__assert_fail@plt+0x6cfc>
   17744:	ldr	r1, [fp, #-12]
   17748:	udiv	r0, r0, r1
   1774c:	ldr	r1, [fp, #-16]
   17750:	cmp	r0, r1
   17754:	bcc	17774 <__assert_fail@plt+0x668c>
   17758:	b	17788 <__assert_fail@plt+0x66a0>
   1775c:	ldr	r0, [pc, #1660]	; 17de0 <__assert_fail@plt+0x6cf8>
   17760:	ldr	r1, [fp, #-16]
   17764:	udiv	r0, r0, r1
   17768:	ldr	r1, [fp, #-12]
   1776c:	cmp	r0, r1
   17770:	bcs	17788 <__assert_fail@plt+0x66a0>
   17774:	ldr	r0, [fp, #-12]
   17778:	ldr	r1, [fp, #-16]
   1777c:	mul	r0, r0, r1
   17780:	str	r0, [fp, #-20]	; 0xffffffec
   17784:	b	17dac <__assert_fail@plt+0x6cc4>
   17788:	ldr	r0, [fp, #-12]
   1778c:	ldr	r1, [fp, #-16]
   17790:	mul	r0, r0, r1
   17794:	str	r0, [fp, #-20]	; 0xffffffec
   17798:	b	17dc4 <__assert_fail@plt+0x6cdc>
   1779c:	ldr	r0, [fp, #-16]
   177a0:	cmp	r0, #0
   177a4:	bcs	178b0 <__assert_fail@plt+0x67c8>
   177a8:	ldr	r0, [fp, #-12]
   177ac:	cmp	r0, #0
   177b0:	bcs	17838 <__assert_fail@plt+0x6750>
   177b4:	b	177d4 <__assert_fail@plt+0x66ec>
   177b8:	ldr	r0, [fp, #-12]
   177bc:	ldr	r1, [fp, #-16]
   177c0:	mvn	r2, #0
   177c4:	udiv	r1, r2, r1
   177c8:	cmp	r0, r1
   177cc:	bcc	1794c <__assert_fail@plt+0x6864>
   177d0:	b	17960 <__assert_fail@plt+0x6878>
   177d4:	b	177e8 <__assert_fail@plt+0x6700>
   177d8:	ldr	r0, [fp, #-16]
   177dc:	cmp	r0, #1
   177e0:	bcc	177f8 <__assert_fail@plt+0x6710>
   177e4:	b	17804 <__assert_fail@plt+0x671c>
   177e8:	ldr	r0, [fp, #-16]
   177ec:	movw	r1, #0
   177f0:	cmp	r1, r0
   177f4:	bcs	17804 <__assert_fail@plt+0x671c>
   177f8:	movw	r0, #1
   177fc:	str	r0, [sp, #44]	; 0x2c
   17800:	b	1781c <__assert_fail@plt+0x6734>
   17804:	ldr	r0, [fp, #-16]
   17808:	movw	r1, #0
   1780c:	sub	r0, r1, r0
   17810:	mvn	r1, #0
   17814:	udiv	r0, r1, r0
   17818:	str	r0, [sp, #44]	; 0x2c
   1781c:	ldr	r0, [sp, #44]	; 0x2c
   17820:	ldr	r1, [fp, #-12]
   17824:	mvn	r2, #0
   17828:	sub	r1, r2, r1
   1782c:	cmp	r0, r1
   17830:	bls	1794c <__assert_fail@plt+0x6864>
   17834:	b	17960 <__assert_fail@plt+0x6878>
   17838:	b	17840 <__assert_fail@plt+0x6758>
   1783c:	b	17844 <__assert_fail@plt+0x675c>
   17840:	b	17894 <__assert_fail@plt+0x67ac>
   17844:	ldr	r0, [fp, #-16]
   17848:	cmn	r0, #1
   1784c:	bne	17894 <__assert_fail@plt+0x67ac>
   17850:	b	1786c <__assert_fail@plt+0x6784>
   17854:	ldr	r0, [fp, #-12]
   17858:	add	r0, r0, #0
   1785c:	movw	r1, #0
   17860:	cmp	r1, r0
   17864:	bcc	1794c <__assert_fail@plt+0x6864>
   17868:	b	17960 <__assert_fail@plt+0x6878>
   1786c:	ldr	r0, [fp, #-12]
   17870:	movw	r1, #0
   17874:	cmp	r1, r0
   17878:	bcs	17960 <__assert_fail@plt+0x6878>
   1787c:	ldr	r0, [fp, #-12]
   17880:	sub	r0, r0, #1
   17884:	mvn	r1, #0
   17888:	cmp	r1, r0
   1788c:	bcc	1794c <__assert_fail@plt+0x6864>
   17890:	b	17960 <__assert_fail@plt+0x6878>
   17894:	ldr	r0, [fp, #-16]
   17898:	movw	r1, #0
   1789c:	udiv	r0, r1, r0
   178a0:	ldr	r1, [fp, #-12]
   178a4:	cmp	r0, r1
   178a8:	bcc	1794c <__assert_fail@plt+0x6864>
   178ac:	b	17960 <__assert_fail@plt+0x6878>
   178b0:	ldr	r0, [fp, #-16]
   178b4:	cmp	r0, #0
   178b8:	bne	178c0 <__assert_fail@plt+0x67d8>
   178bc:	b	17960 <__assert_fail@plt+0x6878>
   178c0:	ldr	r0, [fp, #-12]
   178c4:	cmp	r0, #0
   178c8:	bcs	17934 <__assert_fail@plt+0x684c>
   178cc:	b	178d4 <__assert_fail@plt+0x67ec>
   178d0:	b	178d8 <__assert_fail@plt+0x67f0>
   178d4:	b	17918 <__assert_fail@plt+0x6830>
   178d8:	ldr	r0, [fp, #-12]
   178dc:	cmn	r0, #1
   178e0:	bne	17918 <__assert_fail@plt+0x6830>
   178e4:	b	17900 <__assert_fail@plt+0x6818>
   178e8:	ldr	r0, [fp, #-16]
   178ec:	add	r0, r0, #0
   178f0:	movw	r1, #0
   178f4:	cmp	r1, r0
   178f8:	bcc	1794c <__assert_fail@plt+0x6864>
   178fc:	b	17960 <__assert_fail@plt+0x6878>
   17900:	ldr	r0, [fp, #-16]
   17904:	sub	r0, r0, #1
   17908:	mvn	r1, #0
   1790c:	cmp	r1, r0
   17910:	bcc	1794c <__assert_fail@plt+0x6864>
   17914:	b	17960 <__assert_fail@plt+0x6878>
   17918:	ldr	r0, [fp, #-12]
   1791c:	movw	r1, #0
   17920:	udiv	r0, r1, r0
   17924:	ldr	r1, [fp, #-16]
   17928:	cmp	r0, r1
   1792c:	bcc	1794c <__assert_fail@plt+0x6864>
   17930:	b	17960 <__assert_fail@plt+0x6878>
   17934:	ldr	r0, [fp, #-16]
   17938:	mvn	r1, #0
   1793c:	udiv	r0, r1, r0
   17940:	ldr	r1, [fp, #-12]
   17944:	cmp	r0, r1
   17948:	bcs	17960 <__assert_fail@plt+0x6878>
   1794c:	ldr	r0, [fp, #-12]
   17950:	ldr	r1, [fp, #-16]
   17954:	mul	r0, r0, r1
   17958:	str	r0, [fp, #-20]	; 0xffffffec
   1795c:	b	17dac <__assert_fail@plt+0x6cc4>
   17960:	ldr	r0, [fp, #-12]
   17964:	ldr	r1, [fp, #-16]
   17968:	mul	r0, r0, r1
   1796c:	str	r0, [fp, #-20]	; 0xffffffec
   17970:	b	17dc4 <__assert_fail@plt+0x6cdc>
   17974:	b	17b90 <__assert_fail@plt+0x6aa8>
   17978:	ldr	r0, [fp, #-16]
   1797c:	cmp	r0, #0
   17980:	bcs	17ac0 <__assert_fail@plt+0x69d8>
   17984:	ldr	r0, [fp, #-12]
   17988:	cmp	r0, #0
   1798c:	bcs	17a4c <__assert_fail@plt+0x6964>
   17990:	b	17994 <__assert_fail@plt+0x68ac>
   17994:	ldr	r0, [fp, #-12]
   17998:	ldr	r2, [fp, #-16]
   1799c:	mvn	r1, #0
   179a0:	mvn	r3, #-2147483648	; 0x80000000
   179a4:	mov	ip, #0
   179a8:	str	r0, [sp, #40]	; 0x28
   179ac:	mov	r0, r1
   179b0:	mov	r1, r3
   179b4:	mov	r3, ip
   179b8:	bl	1e214 <__assert_fail@plt+0xd12c>
   179bc:	ldr	r2, [sp, #40]	; 0x28
   179c0:	subs	r0, r2, r0
   179c4:	rscs	r1, r1, #0
   179c8:	blt	17b68 <__assert_fail@plt+0x6a80>
   179cc:	b	17b7c <__assert_fail@plt+0x6a94>
   179d0:	b	179e4 <__assert_fail@plt+0x68fc>
   179d4:	ldr	r0, [fp, #-16]
   179d8:	cmp	r0, #1
   179dc:	bcc	179f4 <__assert_fail@plt+0x690c>
   179e0:	b	17a08 <__assert_fail@plt+0x6920>
   179e4:	ldr	r0, [fp, #-16]
   179e8:	movw	r1, #0
   179ec:	cmp	r1, r0
   179f0:	bcs	17a08 <__assert_fail@plt+0x6920>
   179f4:	mov	r0, #0
   179f8:	mvn	r1, #0
   179fc:	str	r1, [sp, #36]	; 0x24
   17a00:	str	r0, [sp, #32]
   17a04:	b	17a2c <__assert_fail@plt+0x6944>
   17a08:	ldr	r0, [fp, #-16]
   17a0c:	rsb	r2, r0, #0
   17a10:	mvn	r0, #0
   17a14:	mvn	r1, #-2147483648	; 0x80000000
   17a18:	mov	r3, #0
   17a1c:	bl	1e214 <__assert_fail@plt+0xd12c>
   17a20:	str	r0, [sp, #36]	; 0x24
   17a24:	str	r1, [sp, #32]
   17a28:	b	17a2c <__assert_fail@plt+0x6944>
   17a2c:	ldr	r0, [sp, #32]
   17a30:	ldr	r1, [sp, #36]	; 0x24
   17a34:	ldr	r2, [fp, #-12]
   17a38:	mvn	r2, r2
   17a3c:	subs	r1, r2, r1
   17a40:	rscs	r0, r0, #0
   17a44:	bge	17b68 <__assert_fail@plt+0x6a80>
   17a48:	b	17b7c <__assert_fail@plt+0x6a94>
   17a4c:	ldr	r0, [fp, #-16]
   17a50:	cmn	r0, #1
   17a54:	bne	17a94 <__assert_fail@plt+0x69ac>
   17a58:	b	17a74 <__assert_fail@plt+0x698c>
   17a5c:	ldr	r0, [fp, #-12]
   17a60:	rsbs	r0, r0, #0
   17a64:	mov	r1, #0
   17a68:	sbcs	r1, r1, #-2147483648	; 0x80000000
   17a6c:	blt	17b68 <__assert_fail@plt+0x6a80>
   17a70:	b	17b7c <__assert_fail@plt+0x6a94>
   17a74:	ldr	r0, [fp, #-12]
   17a78:	movw	r1, #0
   17a7c:	cmp	r1, r0
   17a80:	bcs	17b7c <__assert_fail@plt+0x6a94>
   17a84:	mov	r0, #0
   17a88:	cmp	r0, #0
   17a8c:	bne	17b68 <__assert_fail@plt+0x6a80>
   17a90:	b	17b7c <__assert_fail@plt+0x6a94>
   17a94:	ldr	r2, [fp, #-16]
   17a98:	mov	r1, #-2147483648	; 0x80000000
   17a9c:	mov	r0, #0
   17aa0:	str	r0, [sp, #28]
   17aa4:	ldr	r3, [sp, #28]
   17aa8:	bl	1e140 <__assert_fail@plt+0xd058>
   17aac:	ldr	r2, [fp, #-12]
   17ab0:	subs	r0, r0, r2
   17ab4:	sbcs	r1, r1, #0
   17ab8:	blt	17b68 <__assert_fail@plt+0x6a80>
   17abc:	b	17b7c <__assert_fail@plt+0x6a94>
   17ac0:	ldr	r0, [fp, #-16]
   17ac4:	cmp	r0, #0
   17ac8:	bne	17ad0 <__assert_fail@plt+0x69e8>
   17acc:	b	17b7c <__assert_fail@plt+0x6a94>
   17ad0:	ldr	r0, [fp, #-12]
   17ad4:	cmp	r0, #0
   17ad8:	bcs	17b40 <__assert_fail@plt+0x6a58>
   17adc:	ldr	r0, [fp, #-12]
   17ae0:	cmn	r0, #1
   17ae4:	bne	17b14 <__assert_fail@plt+0x6a2c>
   17ae8:	b	17b04 <__assert_fail@plt+0x6a1c>
   17aec:	ldr	r0, [fp, #-16]
   17af0:	rsbs	r0, r0, #0
   17af4:	mov	r1, #0
   17af8:	sbcs	r1, r1, #-2147483648	; 0x80000000
   17afc:	blt	17b68 <__assert_fail@plt+0x6a80>
   17b00:	b	17b7c <__assert_fail@plt+0x6a94>
   17b04:	mov	r0, #0
   17b08:	cmp	r0, #0
   17b0c:	bne	17b68 <__assert_fail@plt+0x6a80>
   17b10:	b	17b7c <__assert_fail@plt+0x6a94>
   17b14:	ldr	r2, [fp, #-12]
   17b18:	mov	r1, #-2147483648	; 0x80000000
   17b1c:	mov	r0, #0
   17b20:	str	r0, [sp, #24]
   17b24:	ldr	r3, [sp, #24]
   17b28:	bl	1e140 <__assert_fail@plt+0xd058>
   17b2c:	ldr	r2, [fp, #-16]
   17b30:	subs	r0, r0, r2
   17b34:	sbcs	r1, r1, #0
   17b38:	blt	17b68 <__assert_fail@plt+0x6a80>
   17b3c:	b	17b7c <__assert_fail@plt+0x6a94>
   17b40:	ldr	r2, [fp, #-16]
   17b44:	mvn	r0, #0
   17b48:	mvn	r1, #-2147483648	; 0x80000000
   17b4c:	mov	r3, #0
   17b50:	bl	1e214 <__assert_fail@plt+0xd12c>
   17b54:	ldr	r2, [fp, #-12]
   17b58:	subs	r0, r0, r2
   17b5c:	sbcs	r1, r1, #0
   17b60:	bge	17b7c <__assert_fail@plt+0x6a94>
   17b64:	b	17b68 <__assert_fail@plt+0x6a80>
   17b68:	ldr	r0, [fp, #-12]
   17b6c:	ldr	r1, [fp, #-16]
   17b70:	mul	r0, r0, r1
   17b74:	str	r0, [fp, #-20]	; 0xffffffec
   17b78:	b	17dac <__assert_fail@plt+0x6cc4>
   17b7c:	ldr	r0, [fp, #-12]
   17b80:	ldr	r1, [fp, #-16]
   17b84:	mul	r0, r0, r1
   17b88:	str	r0, [fp, #-20]	; 0xffffffec
   17b8c:	b	17dc4 <__assert_fail@plt+0x6cdc>
   17b90:	ldr	r0, [fp, #-16]
   17b94:	cmp	r0, #0
   17b98:	bcs	17cd4 <__assert_fail@plt+0x6bec>
   17b9c:	ldr	r0, [fp, #-12]
   17ba0:	cmp	r0, #0
   17ba4:	bcs	17c5c <__assert_fail@plt+0x6b74>
   17ba8:	b	17bdc <__assert_fail@plt+0x6af4>
   17bac:	ldr	r0, [fp, #-12]
   17bb0:	ldr	r2, [fp, #-16]
   17bb4:	mvn	r1, #0
   17bb8:	mov	r3, #0
   17bbc:	str	r0, [sp, #20]
   17bc0:	mov	r0, r1
   17bc4:	bl	1e214 <__assert_fail@plt+0xd12c>
   17bc8:	ldr	r2, [sp, #20]
   17bcc:	subs	r0, r2, r0
   17bd0:	rscs	r1, r1, #0
   17bd4:	bcc	17d84 <__assert_fail@plt+0x6c9c>
   17bd8:	b	17d98 <__assert_fail@plt+0x6cb0>
   17bdc:	b	17bf0 <__assert_fail@plt+0x6b08>
   17be0:	ldr	r0, [fp, #-16]
   17be4:	cmp	r0, #1
   17be8:	bcc	17c00 <__assert_fail@plt+0x6b18>
   17bec:	b	17c14 <__assert_fail@plt+0x6b2c>
   17bf0:	ldr	r0, [fp, #-16]
   17bf4:	movw	r1, #0
   17bf8:	cmp	r1, r0
   17bfc:	bcs	17c14 <__assert_fail@plt+0x6b2c>
   17c00:	mov	r0, #1
   17c04:	mvn	r1, #0
   17c08:	str	r1, [sp, #16]
   17c0c:	str	r0, [sp, #12]
   17c10:	b	17c3c <__assert_fail@plt+0x6b54>
   17c14:	ldr	r0, [fp, #-16]
   17c18:	rsb	r2, r0, #0
   17c1c:	mvn	r0, #0
   17c20:	mov	r3, #0
   17c24:	str	r0, [sp, #8]
   17c28:	ldr	r1, [sp, #8]
   17c2c:	bl	1e214 <__assert_fail@plt+0xd12c>
   17c30:	str	r0, [sp, #16]
   17c34:	str	r1, [sp, #12]
   17c38:	b	17c3c <__assert_fail@plt+0x6b54>
   17c3c:	ldr	r0, [sp, #12]
   17c40:	ldr	r1, [sp, #16]
   17c44:	ldr	r2, [fp, #-12]
   17c48:	mvn	r2, r2
   17c4c:	subs	r1, r2, r1
   17c50:	rscs	r0, r0, #0
   17c54:	bcs	17d84 <__assert_fail@plt+0x6c9c>
   17c58:	b	17d98 <__assert_fail@plt+0x6cb0>
   17c5c:	b	17c64 <__assert_fail@plt+0x6b7c>
   17c60:	b	17c68 <__assert_fail@plt+0x6b80>
   17c64:	b	17cb8 <__assert_fail@plt+0x6bd0>
   17c68:	ldr	r0, [fp, #-16]
   17c6c:	cmn	r0, #1
   17c70:	bne	17cb8 <__assert_fail@plt+0x6bd0>
   17c74:	b	17c90 <__assert_fail@plt+0x6ba8>
   17c78:	ldr	r0, [fp, #-12]
   17c7c:	add	r0, r0, #0
   17c80:	movw	r1, #0
   17c84:	cmp	r1, r0
   17c88:	bcc	17d84 <__assert_fail@plt+0x6c9c>
   17c8c:	b	17d98 <__assert_fail@plt+0x6cb0>
   17c90:	ldr	r0, [fp, #-12]
   17c94:	movw	r1, #0
   17c98:	cmp	r1, r0
   17c9c:	bcs	17d98 <__assert_fail@plt+0x6cb0>
   17ca0:	ldr	r0, [fp, #-12]
   17ca4:	sub	r0, r0, #1
   17ca8:	mvn	r1, #0
   17cac:	cmp	r1, r0
   17cb0:	bcc	17d84 <__assert_fail@plt+0x6c9c>
   17cb4:	b	17d98 <__assert_fail@plt+0x6cb0>
   17cb8:	ldr	r0, [fp, #-16]
   17cbc:	movw	r1, #0
   17cc0:	udiv	r0, r1, r0
   17cc4:	ldr	r1, [fp, #-12]
   17cc8:	cmp	r0, r1
   17ccc:	bcc	17d84 <__assert_fail@plt+0x6c9c>
   17cd0:	b	17d98 <__assert_fail@plt+0x6cb0>
   17cd4:	ldr	r0, [fp, #-16]
   17cd8:	cmp	r0, #0
   17cdc:	bne	17ce4 <__assert_fail@plt+0x6bfc>
   17ce0:	b	17d98 <__assert_fail@plt+0x6cb0>
   17ce4:	ldr	r0, [fp, #-12]
   17ce8:	cmp	r0, #0
   17cec:	bcs	17d58 <__assert_fail@plt+0x6c70>
   17cf0:	b	17cf8 <__assert_fail@plt+0x6c10>
   17cf4:	b	17cfc <__assert_fail@plt+0x6c14>
   17cf8:	b	17d3c <__assert_fail@plt+0x6c54>
   17cfc:	ldr	r0, [fp, #-12]
   17d00:	cmn	r0, #1
   17d04:	bne	17d3c <__assert_fail@plt+0x6c54>
   17d08:	b	17d24 <__assert_fail@plt+0x6c3c>
   17d0c:	ldr	r0, [fp, #-16]
   17d10:	add	r0, r0, #0
   17d14:	movw	r1, #0
   17d18:	cmp	r1, r0
   17d1c:	bcc	17d84 <__assert_fail@plt+0x6c9c>
   17d20:	b	17d98 <__assert_fail@plt+0x6cb0>
   17d24:	ldr	r0, [fp, #-16]
   17d28:	sub	r0, r0, #1
   17d2c:	mvn	r1, #0
   17d30:	cmp	r1, r0
   17d34:	bcc	17d84 <__assert_fail@plt+0x6c9c>
   17d38:	b	17d98 <__assert_fail@plt+0x6cb0>
   17d3c:	ldr	r0, [fp, #-12]
   17d40:	movw	r1, #0
   17d44:	udiv	r0, r1, r0
   17d48:	ldr	r1, [fp, #-16]
   17d4c:	cmp	r0, r1
   17d50:	bcc	17d84 <__assert_fail@plt+0x6c9c>
   17d54:	b	17d98 <__assert_fail@plt+0x6cb0>
   17d58:	ldr	r2, [fp, #-16]
   17d5c:	mvn	r0, #0
   17d60:	mov	r3, #0
   17d64:	str	r0, [sp, #4]
   17d68:	ldr	r1, [sp, #4]
   17d6c:	bl	1e214 <__assert_fail@plt+0xd12c>
   17d70:	ldr	r2, [fp, #-12]
   17d74:	subs	r0, r0, r2
   17d78:	sbcs	r1, r1, #0
   17d7c:	bcs	17d98 <__assert_fail@plt+0x6cb0>
   17d80:	b	17d84 <__assert_fail@plt+0x6c9c>
   17d84:	ldr	r0, [fp, #-12]
   17d88:	ldr	r1, [fp, #-16]
   17d8c:	mul	r0, r0, r1
   17d90:	str	r0, [fp, #-20]	; 0xffffffec
   17d94:	b	17dac <__assert_fail@plt+0x6cc4>
   17d98:	ldr	r0, [fp, #-12]
   17d9c:	ldr	r1, [fp, #-16]
   17da0:	mul	r0, r0, r1
   17da4:	str	r0, [fp, #-20]	; 0xffffffec
   17da8:	b	17dc4 <__assert_fail@plt+0x6cdc>
   17dac:	bl	11010 <__errno_location@plt>
   17db0:	movw	r1, #12
   17db4:	str	r1, [r0]
   17db8:	movw	r0, #0
   17dbc:	str	r0, [fp, #-4]
   17dc0:	b	17dd4 <__assert_fail@plt+0x6cec>
   17dc4:	ldr	r0, [fp, #-8]
   17dc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   17dcc:	bl	1d590 <__assert_fail@plt+0xc4a8>
   17dd0:	str	r0, [fp, #-4]
   17dd4:	ldr	r0, [fp, #-4]
   17dd8:	mov	sp, fp
   17ddc:	pop	{fp, pc}
   17de0:	svcvc	0x00ffffff
   17de4:	andhi	r0, r0, r0
   17de8:			; <UNDEFINED> instruction: 0xffff8000
   17dec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17df0:	add	fp, sp, #28
   17df4:	sub	sp, sp, #196	; 0xc4
   17df8:	ldr	ip, [fp, #12]
   17dfc:	ldr	lr, [fp, #8]
   17e00:	str	r0, [fp, #-32]	; 0xffffffe0
   17e04:	str	r1, [fp, #-36]	; 0xffffffdc
   17e08:	str	r2, [fp, #-40]	; 0xffffffd8
   17e0c:	str	r3, [fp, #-44]	; 0xffffffd4
   17e10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17e14:	movw	r1, #0
   17e18:	cmp	r0, r1
   17e1c:	beq	17e50 <__assert_fail@plt+0x6d68>
   17e20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17e24:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17e28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17e2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17e30:	movw	ip, #60540	; 0xec7c
   17e34:	movt	ip, #1
   17e38:	str	r1, [fp, #-48]	; 0xffffffd0
   17e3c:	mov	r1, ip
   17e40:	ldr	ip, [fp, #-48]	; 0xffffffd0
   17e44:	str	ip, [sp]
   17e48:	bl	11004 <fprintf@plt>
   17e4c:	b	17e68 <__assert_fail@plt+0x6d80>
   17e50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17e54:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17e58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17e5c:	movw	r1, #60552	; 0xec88
   17e60:	movt	r1, #1
   17e64:	bl	11004 <fprintf@plt>
   17e68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17e6c:	movw	r1, #60559	; 0xec8f
   17e70:	movt	r1, #1
   17e74:	str	r0, [fp, #-52]	; 0xffffffcc
   17e78:	mov	r0, r1
   17e7c:	bl	10fe0 <gettext@plt>
   17e80:	movw	r1, #61277	; 0xef5d
   17e84:	movt	r1, #1
   17e88:	movw	r3, #2022	; 0x7e6
   17e8c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17e90:	str	r0, [fp, #-56]	; 0xffffffc8
   17e94:	mov	r0, r2
   17e98:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17e9c:	bl	11004 <fprintf@plt>
   17ea0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17ea4:	movw	r2, #59683	; 0xe923
   17ea8:	movt	r2, #1
   17eac:	str	r0, [fp, #-60]	; 0xffffffc4
   17eb0:	mov	r0, r2
   17eb4:	str	r2, [fp, #-64]	; 0xffffffc0
   17eb8:	bl	10e78 <fputs_unlocked@plt>
   17ebc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17ec0:	movw	r2, #60563	; 0xec93
   17ec4:	movt	r2, #1
   17ec8:	str	r0, [fp, #-68]	; 0xffffffbc
   17ecc:	mov	r0, r2
   17ed0:	str	r1, [fp, #-72]	; 0xffffffb8
   17ed4:	bl	10fe0 <gettext@plt>
   17ed8:	movw	r2, #60734	; 0xed3e
   17edc:	movt	r2, #1
   17ee0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   17ee4:	str	r0, [fp, #-76]	; 0xffffffb4
   17ee8:	mov	r0, r1
   17eec:	ldr	r1, [fp, #-76]	; 0xffffffb4
   17ef0:	bl	11004 <fprintf@plt>
   17ef4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17ef8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17efc:	str	r0, [fp, #-80]	; 0xffffffb0
   17f00:	mov	r0, r2
   17f04:	bl	10e78 <fputs_unlocked@plt>
   17f08:	ldr	r1, [fp, #12]
   17f0c:	cmp	r1, #9
   17f10:	str	r1, [fp, #-84]	; 0xffffffac
   17f14:	bhi	18330 <__assert_fail@plt+0x7248>
   17f18:	add	r0, pc, #8
   17f1c:	ldr	r1, [fp, #-84]	; 0xffffffac
   17f20:	ldr	r0, [r0, r1, lsl #2]
   17f24:	mov	pc, r0
   17f28:	andeq	r7, r1, r0, asr pc
   17f2c:	andeq	r7, r1, r4, asr pc
   17f30:	andeq	r7, r1, ip, lsl #31
   17f34:	andeq	r7, r1, ip, asr #31
   17f38:	andeq	r8, r1, r4, lsr #32
   17f3c:	andeq	r8, r1, r8, lsl #1
   17f40:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17f44:	andeq	r8, r1, r4, ror r1
   17f48:	strdeq	r8, [r1], -ip
   17f4c:	muleq	r1, r0, r2
   17f50:	b	183cc <__assert_fail@plt+0x72e4>
   17f54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17f58:	movw	r1, #60768	; 0xed60
   17f5c:	movt	r1, #1
   17f60:	str	r0, [fp, #-88]	; 0xffffffa8
   17f64:	mov	r0, r1
   17f68:	bl	10fe0 <gettext@plt>
   17f6c:	ldr	r1, [fp, #8]
   17f70:	ldr	r2, [r1]
   17f74:	ldr	r1, [fp, #-88]	; 0xffffffa8
   17f78:	str	r0, [fp, #-92]	; 0xffffffa4
   17f7c:	mov	r0, r1
   17f80:	ldr	r1, [fp, #-92]	; 0xffffffa4
   17f84:	bl	11004 <fprintf@plt>
   17f88:	b	183cc <__assert_fail@plt+0x72e4>
   17f8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17f90:	movw	r1, #60784	; 0xed70
   17f94:	movt	r1, #1
   17f98:	str	r0, [fp, #-96]	; 0xffffffa0
   17f9c:	mov	r0, r1
   17fa0:	bl	10fe0 <gettext@plt>
   17fa4:	ldr	r1, [fp, #8]
   17fa8:	ldr	r2, [r1]
   17fac:	ldr	r1, [fp, #8]
   17fb0:	ldr	r3, [r1, #4]
   17fb4:	ldr	r1, [fp, #-96]	; 0xffffffa0
   17fb8:	str	r0, [fp, #-100]	; 0xffffff9c
   17fbc:	mov	r0, r1
   17fc0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   17fc4:	bl	11004 <fprintf@plt>
   17fc8:	b	183cc <__assert_fail@plt+0x72e4>
   17fcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17fd0:	movw	r1, #60807	; 0xed87
   17fd4:	movt	r1, #1
   17fd8:	str	r0, [fp, #-104]	; 0xffffff98
   17fdc:	mov	r0, r1
   17fe0:	bl	10fe0 <gettext@plt>
   17fe4:	ldr	r1, [fp, #8]
   17fe8:	ldr	r2, [r1]
   17fec:	ldr	r1, [fp, #8]
   17ff0:	ldr	r3, [r1, #4]
   17ff4:	ldr	r1, [fp, #8]
   17ff8:	ldr	r1, [r1, #8]
   17ffc:	ldr	ip, [fp, #-104]	; 0xffffff98
   18000:	str	r0, [fp, #-108]	; 0xffffff94
   18004:	mov	r0, ip
   18008:	ldr	lr, [fp, #-108]	; 0xffffff94
   1800c:	str	r1, [sp, #112]	; 0x70
   18010:	mov	r1, lr
   18014:	ldr	r4, [sp, #112]	; 0x70
   18018:	str	r4, [sp]
   1801c:	bl	11004 <fprintf@plt>
   18020:	b	183cc <__assert_fail@plt+0x72e4>
   18024:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18028:	movw	r1, #60835	; 0xeda3
   1802c:	movt	r1, #1
   18030:	str	r0, [sp, #108]	; 0x6c
   18034:	mov	r0, r1
   18038:	bl	10fe0 <gettext@plt>
   1803c:	ldr	r1, [fp, #8]
   18040:	ldr	r2, [r1]
   18044:	ldr	r1, [fp, #8]
   18048:	ldr	r3, [r1, #4]
   1804c:	ldr	r1, [fp, #8]
   18050:	ldr	r1, [r1, #8]
   18054:	ldr	ip, [fp, #8]
   18058:	ldr	ip, [ip, #12]
   1805c:	ldr	lr, [sp, #108]	; 0x6c
   18060:	str	r0, [sp, #104]	; 0x68
   18064:	mov	r0, lr
   18068:	ldr	r4, [sp, #104]	; 0x68
   1806c:	str	r1, [sp, #100]	; 0x64
   18070:	mov	r1, r4
   18074:	ldr	r5, [sp, #100]	; 0x64
   18078:	str	r5, [sp]
   1807c:	str	ip, [sp, #4]
   18080:	bl	11004 <fprintf@plt>
   18084:	b	183cc <__assert_fail@plt+0x72e4>
   18088:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1808c:	movw	r1, #60867	; 0xedc3
   18090:	movt	r1, #1
   18094:	str	r0, [sp, #96]	; 0x60
   18098:	mov	r0, r1
   1809c:	bl	10fe0 <gettext@plt>
   180a0:	ldr	r1, [fp, #8]
   180a4:	ldr	r2, [r1]
   180a8:	ldr	r1, [fp, #8]
   180ac:	ldr	r3, [r1, #4]
   180b0:	ldr	r1, [fp, #8]
   180b4:	ldr	r1, [r1, #8]
   180b8:	ldr	ip, [fp, #8]
   180bc:	ldr	ip, [ip, #12]
   180c0:	ldr	lr, [fp, #8]
   180c4:	ldr	lr, [lr, #16]
   180c8:	ldr	r4, [sp, #96]	; 0x60
   180cc:	str	r0, [sp, #92]	; 0x5c
   180d0:	mov	r0, r4
   180d4:	ldr	r5, [sp, #92]	; 0x5c
   180d8:	str	r1, [sp, #88]	; 0x58
   180dc:	mov	r1, r5
   180e0:	ldr	r6, [sp, #88]	; 0x58
   180e4:	str	r6, [sp]
   180e8:	str	ip, [sp, #4]
   180ec:	str	lr, [sp, #8]
   180f0:	bl	11004 <fprintf@plt>
   180f4:	b	183cc <__assert_fail@plt+0x72e4>
   180f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   180fc:	movw	r1, #60903	; 0xede7
   18100:	movt	r1, #1
   18104:	str	r0, [sp, #84]	; 0x54
   18108:	mov	r0, r1
   1810c:	bl	10fe0 <gettext@plt>
   18110:	ldr	r1, [fp, #8]
   18114:	ldr	r2, [r1]
   18118:	ldr	r1, [fp, #8]
   1811c:	ldr	r3, [r1, #4]
   18120:	ldr	r1, [fp, #8]
   18124:	ldr	r1, [r1, #8]
   18128:	ldr	ip, [fp, #8]
   1812c:	ldr	ip, [ip, #12]
   18130:	ldr	lr, [fp, #8]
   18134:	ldr	lr, [lr, #16]
   18138:	ldr	r4, [fp, #8]
   1813c:	ldr	r4, [r4, #20]
   18140:	ldr	r5, [sp, #84]	; 0x54
   18144:	str	r0, [sp, #80]	; 0x50
   18148:	mov	r0, r5
   1814c:	ldr	r6, [sp, #80]	; 0x50
   18150:	str	r1, [sp, #76]	; 0x4c
   18154:	mov	r1, r6
   18158:	ldr	r7, [sp, #76]	; 0x4c
   1815c:	str	r7, [sp]
   18160:	str	ip, [sp, #4]
   18164:	str	lr, [sp, #8]
   18168:	str	r4, [sp, #12]
   1816c:	bl	11004 <fprintf@plt>
   18170:	b	183cc <__assert_fail@plt+0x72e4>
   18174:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18178:	movw	r1, #60943	; 0xee0f
   1817c:	movt	r1, #1
   18180:	str	r0, [sp, #72]	; 0x48
   18184:	mov	r0, r1
   18188:	bl	10fe0 <gettext@plt>
   1818c:	ldr	r1, [fp, #8]
   18190:	ldr	r2, [r1]
   18194:	ldr	r1, [fp, #8]
   18198:	ldr	r3, [r1, #4]
   1819c:	ldr	r1, [fp, #8]
   181a0:	ldr	r1, [r1, #8]
   181a4:	ldr	ip, [fp, #8]
   181a8:	ldr	ip, [ip, #12]
   181ac:	ldr	lr, [fp, #8]
   181b0:	ldr	lr, [lr, #16]
   181b4:	ldr	r4, [fp, #8]
   181b8:	ldr	r4, [r4, #20]
   181bc:	ldr	r5, [fp, #8]
   181c0:	ldr	r5, [r5, #24]
   181c4:	ldr	r6, [sp, #72]	; 0x48
   181c8:	str	r0, [sp, #68]	; 0x44
   181cc:	mov	r0, r6
   181d0:	ldr	r7, [sp, #68]	; 0x44
   181d4:	str	r1, [sp, #64]	; 0x40
   181d8:	mov	r1, r7
   181dc:	ldr	r8, [sp, #64]	; 0x40
   181e0:	str	r8, [sp]
   181e4:	str	ip, [sp, #4]
   181e8:	str	lr, [sp, #8]
   181ec:	str	r4, [sp, #12]
   181f0:	str	r5, [sp, #16]
   181f4:	bl	11004 <fprintf@plt>
   181f8:	b	183cc <__assert_fail@plt+0x72e4>
   181fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18200:	movw	r1, #60987	; 0xee3b
   18204:	movt	r1, #1
   18208:	str	r0, [sp, #60]	; 0x3c
   1820c:	mov	r0, r1
   18210:	bl	10fe0 <gettext@plt>
   18214:	ldr	r1, [fp, #8]
   18218:	ldr	r2, [r1]
   1821c:	ldr	r1, [fp, #8]
   18220:	ldr	r3, [r1, #4]
   18224:	ldr	r1, [fp, #8]
   18228:	ldr	r1, [r1, #8]
   1822c:	ldr	ip, [fp, #8]
   18230:	ldr	ip, [ip, #12]
   18234:	ldr	lr, [fp, #8]
   18238:	ldr	lr, [lr, #16]
   1823c:	ldr	r4, [fp, #8]
   18240:	ldr	r4, [r4, #20]
   18244:	ldr	r5, [fp, #8]
   18248:	ldr	r5, [r5, #24]
   1824c:	ldr	r6, [fp, #8]
   18250:	ldr	r6, [r6, #28]
   18254:	ldr	r7, [sp, #60]	; 0x3c
   18258:	str	r0, [sp, #56]	; 0x38
   1825c:	mov	r0, r7
   18260:	ldr	r8, [sp, #56]	; 0x38
   18264:	str	r1, [sp, #52]	; 0x34
   18268:	mov	r1, r8
   1826c:	ldr	r9, [sp, #52]	; 0x34
   18270:	str	r9, [sp]
   18274:	str	ip, [sp, #4]
   18278:	str	lr, [sp, #8]
   1827c:	str	r4, [sp, #12]
   18280:	str	r5, [sp, #16]
   18284:	str	r6, [sp, #20]
   18288:	bl	11004 <fprintf@plt>
   1828c:	b	183cc <__assert_fail@plt+0x72e4>
   18290:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18294:	movw	r1, #61035	; 0xee6b
   18298:	movt	r1, #1
   1829c:	str	r0, [sp, #48]	; 0x30
   182a0:	mov	r0, r1
   182a4:	bl	10fe0 <gettext@plt>
   182a8:	ldr	r1, [fp, #8]
   182ac:	ldr	r2, [r1]
   182b0:	ldr	r1, [fp, #8]
   182b4:	ldr	r3, [r1, #4]
   182b8:	ldr	r1, [fp, #8]
   182bc:	ldr	r1, [r1, #8]
   182c0:	ldr	ip, [fp, #8]
   182c4:	ldr	ip, [ip, #12]
   182c8:	ldr	lr, [fp, #8]
   182cc:	ldr	lr, [lr, #16]
   182d0:	ldr	r4, [fp, #8]
   182d4:	ldr	r4, [r4, #20]
   182d8:	ldr	r5, [fp, #8]
   182dc:	ldr	r5, [r5, #24]
   182e0:	ldr	r6, [fp, #8]
   182e4:	ldr	r6, [r6, #28]
   182e8:	ldr	r7, [fp, #8]
   182ec:	ldr	r7, [r7, #32]
   182f0:	ldr	r8, [sp, #48]	; 0x30
   182f4:	str	r0, [sp, #44]	; 0x2c
   182f8:	mov	r0, r8
   182fc:	ldr	r9, [sp, #44]	; 0x2c
   18300:	str	r1, [sp, #40]	; 0x28
   18304:	mov	r1, r9
   18308:	ldr	sl, [sp, #40]	; 0x28
   1830c:	str	sl, [sp]
   18310:	str	ip, [sp, #4]
   18314:	str	lr, [sp, #8]
   18318:	str	r4, [sp, #12]
   1831c:	str	r5, [sp, #16]
   18320:	str	r6, [sp, #20]
   18324:	str	r7, [sp, #24]
   18328:	bl	11004 <fprintf@plt>
   1832c:	b	183cc <__assert_fail@plt+0x72e4>
   18330:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18334:	movw	r1, #61087	; 0xee9f
   18338:	movt	r1, #1
   1833c:	str	r0, [sp, #36]	; 0x24
   18340:	mov	r0, r1
   18344:	bl	10fe0 <gettext@plt>
   18348:	ldr	r1, [fp, #8]
   1834c:	ldr	r2, [r1]
   18350:	ldr	r1, [fp, #8]
   18354:	ldr	r3, [r1, #4]
   18358:	ldr	r1, [fp, #8]
   1835c:	ldr	r1, [r1, #8]
   18360:	ldr	ip, [fp, #8]
   18364:	ldr	ip, [ip, #12]
   18368:	ldr	lr, [fp, #8]
   1836c:	ldr	lr, [lr, #16]
   18370:	ldr	r4, [fp, #8]
   18374:	ldr	r4, [r4, #20]
   18378:	ldr	r5, [fp, #8]
   1837c:	ldr	r5, [r5, #24]
   18380:	ldr	r6, [fp, #8]
   18384:	ldr	r6, [r6, #28]
   18388:	ldr	r7, [fp, #8]
   1838c:	ldr	r7, [r7, #32]
   18390:	ldr	r8, [sp, #36]	; 0x24
   18394:	str	r0, [sp, #32]
   18398:	mov	r0, r8
   1839c:	ldr	r9, [sp, #32]
   183a0:	str	r1, [sp, #28]
   183a4:	mov	r1, r9
   183a8:	ldr	sl, [sp, #28]
   183ac:	str	sl, [sp]
   183b0:	str	ip, [sp, #4]
   183b4:	str	lr, [sp, #8]
   183b8:	str	r4, [sp, #12]
   183bc:	str	r5, [sp, #16]
   183c0:	str	r6, [sp, #20]
   183c4:	str	r7, [sp, #24]
   183c8:	bl	11004 <fprintf@plt>
   183cc:	sub	sp, fp, #28
   183d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   183d4:	push	{fp, lr}
   183d8:	mov	fp, sp
   183dc:	sub	sp, sp, #32
   183e0:	ldr	ip, [fp, #8]
   183e4:	str	r0, [fp, #-4]
   183e8:	str	r1, [fp, #-8]
   183ec:	str	r2, [fp, #-12]
   183f0:	str	r3, [sp, #16]
   183f4:	movw	r0, #0
   183f8:	str	r0, [sp, #12]
   183fc:	ldr	r0, [fp, #8]
   18400:	ldr	r1, [sp, #12]
   18404:	add	r0, r0, r1, lsl #2
   18408:	ldr	r0, [r0]
   1840c:	movw	r1, #0
   18410:	cmp	r0, r1
   18414:	beq	1842c <__assert_fail@plt+0x7344>
   18418:	b	1841c <__assert_fail@plt+0x7334>
   1841c:	ldr	r0, [sp, #12]
   18420:	add	r0, r0, #1
   18424:	str	r0, [sp, #12]
   18428:	b	183fc <__assert_fail@plt+0x7314>
   1842c:	ldr	r0, [fp, #-4]
   18430:	ldr	r1, [fp, #-8]
   18434:	ldr	r2, [fp, #-12]
   18438:	ldr	r3, [sp, #16]
   1843c:	ldr	ip, [fp, #8]
   18440:	ldr	lr, [sp, #12]
   18444:	str	ip, [sp]
   18448:	str	lr, [sp, #4]
   1844c:	bl	17dec <__assert_fail@plt+0x6d04>
   18450:	mov	sp, fp
   18454:	pop	{fp, pc}
   18458:	push	{fp, lr}
   1845c:	mov	fp, sp
   18460:	sub	sp, sp, #80	; 0x50
   18464:	ldr	ip, [fp, #8]
   18468:	str	ip, [fp, #-4]
   1846c:	str	r0, [fp, #-8]
   18470:	str	r1, [fp, #-12]
   18474:	str	r2, [fp, #-16]
   18478:	str	r3, [fp, #-20]	; 0xffffffec
   1847c:	movw	r0, #0
   18480:	str	r0, [fp, #-24]	; 0xffffffe8
   18484:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18488:	cmp	r0, #10
   1848c:	movw	r0, #0
   18490:	str	r0, [sp, #12]
   18494:	bcs	184cc <__assert_fail@plt+0x73e4>
   18498:	ldr	r0, [fp, #-4]
   1849c:	add	r1, r0, #4
   184a0:	str	r1, [fp, #-4]
   184a4:	ldr	r0, [r0]
   184a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   184ac:	add	r2, sp, #16
   184b0:	add	r1, r2, r1, lsl #2
   184b4:	str	r0, [r1]
   184b8:	movw	r1, #0
   184bc:	cmp	r0, r1
   184c0:	movw	r0, #0
   184c4:	movne	r0, #1
   184c8:	str	r0, [sp, #12]
   184cc:	ldr	r0, [sp, #12]
   184d0:	tst	r0, #1
   184d4:	beq	184ec <__assert_fail@plt+0x7404>
   184d8:	b	184dc <__assert_fail@plt+0x73f4>
   184dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184e0:	add	r0, r0, #1
   184e4:	str	r0, [fp, #-24]	; 0xffffffe8
   184e8:	b	18484 <__assert_fail@plt+0x739c>
   184ec:	add	r0, sp, #16
   184f0:	ldr	r1, [fp, #-8]
   184f4:	ldr	r2, [fp, #-12]
   184f8:	ldr	r3, [fp, #-16]
   184fc:	ldr	ip, [fp, #-20]	; 0xffffffec
   18500:	ldr	lr, [fp, #-24]	; 0xffffffe8
   18504:	str	r0, [sp, #8]
   18508:	mov	r0, r1
   1850c:	mov	r1, r2
   18510:	mov	r2, r3
   18514:	mov	r3, ip
   18518:	ldr	ip, [sp, #8]
   1851c:	str	ip, [sp]
   18520:	str	lr, [sp, #4]
   18524:	bl	17dec <__assert_fail@plt+0x6d04>
   18528:	mov	sp, fp
   1852c:	pop	{fp, pc}
   18530:	push	{fp, lr}
   18534:	mov	fp, sp
   18538:	sub	sp, sp, #24
   1853c:	str	r0, [fp, #-4]
   18540:	str	r1, [fp, #-8]
   18544:	str	r2, [sp, #12]
   18548:	str	r3, [sp, #8]
   1854c:	add	r0, fp, #8
   18550:	str	r0, [sp, #4]
   18554:	ldr	r0, [fp, #-4]
   18558:	ldr	r1, [fp, #-8]
   1855c:	ldr	r2, [sp, #12]
   18560:	ldr	r3, [sp, #8]
   18564:	ldr	ip, [sp, #4]
   18568:	mov	lr, sp
   1856c:	str	ip, [lr]
   18570:	bl	18458 <__assert_fail@plt+0x7370>
   18574:	add	r0, sp, #4
   18578:	mov	sp, fp
   1857c:	pop	{fp, pc}
   18580:	push	{fp, lr}
   18584:	mov	fp, sp
   18588:	sub	sp, sp, #16
   1858c:	movw	r0, #340	; 0x154
   18590:	movt	r0, #3
   18594:	ldr	r1, [r0]
   18598:	movw	r0, #59683	; 0xe923
   1859c:	movt	r0, #1
   185a0:	bl	10e78 <fputs_unlocked@plt>
   185a4:	movw	r1, #61147	; 0xeedb
   185a8:	movt	r1, #1
   185ac:	str	r0, [fp, #-4]
   185b0:	mov	r0, r1
   185b4:	bl	10fe0 <gettext@plt>
   185b8:	movw	r1, #61167	; 0xeeef
   185bc:	movt	r1, #1
   185c0:	bl	10ea8 <printf@plt>
   185c4:	movw	r1, #61189	; 0xef05
   185c8:	movt	r1, #1
   185cc:	str	r0, [sp, #8]
   185d0:	mov	r0, r1
   185d4:	bl	10fe0 <gettext@plt>
   185d8:	movw	r1, #59193	; 0xe739
   185dc:	movt	r1, #1
   185e0:	movw	r2, #59492	; 0xe864
   185e4:	movt	r2, #1
   185e8:	bl	10ea8 <printf@plt>
   185ec:	movw	r1, #61209	; 0xef19
   185f0:	movt	r1, #1
   185f4:	str	r0, [sp, #4]
   185f8:	mov	r0, r1
   185fc:	bl	10fe0 <gettext@plt>
   18600:	movw	r1, #61248	; 0xef40
   18604:	movt	r1, #1
   18608:	bl	10ea8 <printf@plt>
   1860c:	mov	sp, fp
   18610:	pop	{fp, pc}
   18614:	push	{fp, lr}
   18618:	mov	fp, sp
   1861c:	sub	sp, sp, #16
   18620:	str	r0, [fp, #-4]
   18624:	str	r1, [sp, #8]
   18628:	str	r2, [sp, #4]
   1862c:	ldr	r0, [fp, #-4]
   18630:	ldr	r1, [sp, #8]
   18634:	ldr	r2, [sp, #4]
   18638:	bl	18644 <__assert_fail@plt+0x755c>
   1863c:	mov	sp, fp
   18640:	pop	{fp, pc}
   18644:	push	{fp, lr}
   18648:	mov	fp, sp
   1864c:	sub	sp, sp, #16
   18650:	str	r0, [fp, #-4]
   18654:	str	r1, [sp, #8]
   18658:	str	r2, [sp, #4]
   1865c:	ldr	r0, [fp, #-4]
   18660:	ldr	r1, [sp, #8]
   18664:	ldr	r2, [sp, #4]
   18668:	bl	16aac <__assert_fail@plt+0x59c4>
   1866c:	str	r0, [sp]
   18670:	ldr	r0, [sp]
   18674:	movw	r1, #0
   18678:	cmp	r0, r1
   1867c:	bne	186ac <__assert_fail@plt+0x75c4>
   18680:	ldr	r0, [fp, #-4]
   18684:	movw	r1, #0
   18688:	cmp	r0, r1
   1868c:	beq	186a8 <__assert_fail@plt+0x75c0>
   18690:	ldr	r0, [sp, #8]
   18694:	cmp	r0, #0
   18698:	beq	186ac <__assert_fail@plt+0x75c4>
   1869c:	ldr	r0, [sp, #4]
   186a0:	cmp	r0, #0
   186a4:	beq	186ac <__assert_fail@plt+0x75c4>
   186a8:	bl	1b3f0 <__assert_fail@plt+0xa308>
   186ac:	ldr	r0, [sp]
   186b0:	mov	sp, fp
   186b4:	pop	{fp, pc}
   186b8:	push	{fp, lr}
   186bc:	mov	fp, sp
   186c0:	sub	sp, sp, #8
   186c4:	str	r0, [sp, #4]
   186c8:	ldr	r0, [sp, #4]
   186cc:	bl	1d520 <__assert_fail@plt+0xc438>
   186d0:	bl	186dc <__assert_fail@plt+0x75f4>
   186d4:	mov	sp, fp
   186d8:	pop	{fp, pc}
   186dc:	push	{fp, lr}
   186e0:	mov	fp, sp
   186e4:	sub	sp, sp, #8
   186e8:	str	r0, [sp, #4]
   186ec:	ldr	r0, [sp, #4]
   186f0:	movw	r1, #0
   186f4:	cmp	r0, r1
   186f8:	bne	18700 <__assert_fail@plt+0x7618>
   186fc:	bl	1b3f0 <__assert_fail@plt+0xa308>
   18700:	ldr	r0, [sp, #4]
   18704:	mov	sp, fp
   18708:	pop	{fp, pc}
   1870c:	push	{fp, lr}
   18710:	mov	fp, sp
   18714:	sub	sp, sp, #8
   18718:	str	r0, [sp, #4]
   1871c:	ldr	r0, [sp, #4]
   18720:	bl	14160 <__assert_fail@plt+0x3078>
   18724:	bl	186dc <__assert_fail@plt+0x75f4>
   18728:	mov	sp, fp
   1872c:	pop	{fp, pc}
   18730:	push	{fp, lr}
   18734:	mov	fp, sp
   18738:	sub	sp, sp, #8
   1873c:	str	r0, [sp, #4]
   18740:	ldr	r0, [sp, #4]
   18744:	bl	186b8 <__assert_fail@plt+0x75d0>
   18748:	mov	sp, fp
   1874c:	pop	{fp, pc}
   18750:	push	{fp, lr}
   18754:	mov	fp, sp
   18758:	sub	sp, sp, #16
   1875c:	str	r0, [fp, #-4]
   18760:	str	r1, [sp, #8]
   18764:	ldr	r0, [fp, #-4]
   18768:	ldr	r1, [sp, #8]
   1876c:	bl	1d590 <__assert_fail@plt+0xc4a8>
   18770:	str	r0, [sp, #4]
   18774:	ldr	r0, [sp, #4]
   18778:	movw	r1, #0
   1877c:	cmp	r0, r1
   18780:	bne	187a4 <__assert_fail@plt+0x76bc>
   18784:	ldr	r0, [fp, #-4]
   18788:	movw	r1, #0
   1878c:	cmp	r0, r1
   18790:	beq	187a0 <__assert_fail@plt+0x76b8>
   18794:	ldr	r0, [sp, #8]
   18798:	cmp	r0, #0
   1879c:	beq	187a4 <__assert_fail@plt+0x76bc>
   187a0:	bl	1b3f0 <__assert_fail@plt+0xa308>
   187a4:	ldr	r0, [sp, #4]
   187a8:	mov	sp, fp
   187ac:	pop	{fp, pc}
   187b0:	push	{fp, lr}
   187b4:	mov	fp, sp
   187b8:	sub	sp, sp, #8
   187bc:	str	r0, [sp, #4]
   187c0:	str	r1, [sp]
   187c4:	ldr	r0, [sp, #4]
   187c8:	ldr	r1, [sp]
   187cc:	bl	141a0 <__assert_fail@plt+0x30b8>
   187d0:	bl	186dc <__assert_fail@plt+0x75f4>
   187d4:	mov	sp, fp
   187d8:	pop	{fp, pc}
   187dc:	push	{fp, lr}
   187e0:	mov	fp, sp
   187e4:	sub	sp, sp, #16
   187e8:	str	r0, [fp, #-4]
   187ec:	str	r1, [sp, #8]
   187f0:	str	r2, [sp, #4]
   187f4:	ldr	r0, [fp, #-4]
   187f8:	ldr	r1, [sp, #8]
   187fc:	ldr	r2, [sp, #4]
   18800:	bl	14298 <__assert_fail@plt+0x31b0>
   18804:	bl	186dc <__assert_fail@plt+0x75f4>
   18808:	mov	sp, fp
   1880c:	pop	{fp, pc}
   18810:	push	{fp, lr}
   18814:	mov	fp, sp
   18818:	sub	sp, sp, #8
   1881c:	str	r0, [sp, #4]
   18820:	str	r1, [sp]
   18824:	ldr	r1, [sp, #4]
   18828:	ldr	r2, [sp]
   1882c:	movw	r0, #0
   18830:	bl	18644 <__assert_fail@plt+0x755c>
   18834:	mov	sp, fp
   18838:	pop	{fp, pc}
   1883c:	push	{fp, lr}
   18840:	mov	fp, sp
   18844:	sub	sp, sp, #8
   18848:	str	r0, [sp, #4]
   1884c:	str	r1, [sp]
   18850:	ldr	r1, [sp, #4]
   18854:	ldr	r2, [sp]
   18858:	movw	r0, #0
   1885c:	bl	187dc <__assert_fail@plt+0x76f4>
   18860:	mov	sp, fp
   18864:	pop	{fp, pc}
   18868:	push	{fp, lr}
   1886c:	mov	fp, sp
   18870:	sub	sp, sp, #8
   18874:	str	r0, [sp, #4]
   18878:	str	r1, [sp]
   1887c:	ldr	r0, [sp, #4]
   18880:	ldr	r1, [sp]
   18884:	movw	r2, #1
   18888:	bl	18894 <__assert_fail@plt+0x77ac>
   1888c:	mov	sp, fp
   18890:	pop	{fp, pc}
   18894:	push	{fp, lr}
   18898:	mov	fp, sp
   1889c:	sub	sp, sp, #16
   188a0:	str	r0, [fp, #-4]
   188a4:	str	r1, [sp, #8]
   188a8:	str	r2, [sp, #4]
   188ac:	ldr	r0, [sp, #8]
   188b0:	ldr	r0, [r0]
   188b4:	str	r0, [sp]
   188b8:	ldr	r0, [fp, #-4]
   188bc:	movw	r1, #0
   188c0:	cmp	r0, r1
   188c4:	bne	18910 <__assert_fail@plt+0x7828>
   188c8:	ldr	r0, [sp]
   188cc:	cmp	r0, #0
   188d0:	bne	1890c <__assert_fail@plt+0x7824>
   188d4:	ldr	r0, [sp, #4]
   188d8:	movw	r1, #64	; 0x40
   188dc:	udiv	r0, r1, r0
   188e0:	str	r0, [sp]
   188e4:	ldr	r0, [sp]
   188e8:	cmp	r0, #0
   188ec:	movw	r0, #0
   188f0:	movne	r0, #1
   188f4:	mvn	r1, #0
   188f8:	eor	r0, r0, r1
   188fc:	and	r0, r0, #1
   18900:	ldr	r1, [sp]
   18904:	add	r0, r1, r0
   18908:	str	r0, [sp]
   1890c:	b	18940 <__assert_fail@plt+0x7858>
   18910:	ldr	r0, [sp]
   18914:	ldr	r1, [sp]
   18918:	lsr	r1, r1, #1
   1891c:	add	r1, r1, #1
   18920:	adds	r0, r0, r1
   18924:	mov	r1, #0
   18928:	adc	r1, r1, #0
   1892c:	str	r0, [sp]
   18930:	tst	r1, #1
   18934:	beq	1893c <__assert_fail@plt+0x7854>
   18938:	bl	1b3f0 <__assert_fail@plt+0xa308>
   1893c:	b	18940 <__assert_fail@plt+0x7858>
   18940:	ldr	r0, [fp, #-4]
   18944:	ldr	r1, [sp]
   18948:	ldr	r2, [sp, #4]
   1894c:	bl	18644 <__assert_fail@plt+0x755c>
   18950:	str	r0, [fp, #-4]
   18954:	ldr	r0, [sp]
   18958:	ldr	r1, [sp, #8]
   1895c:	str	r0, [r1]
   18960:	ldr	r0, [fp, #-4]
   18964:	mov	sp, fp
   18968:	pop	{fp, pc}
   1896c:	push	{fp, lr}
   18970:	mov	fp, sp
   18974:	sub	sp, sp, #216	; 0xd8
   18978:	ldr	ip, [fp, #8]
   1897c:	str	r0, [fp, #-4]
   18980:	str	r1, [fp, #-8]
   18984:	str	r2, [fp, #-12]
   18988:	str	r3, [fp, #-16]
   1898c:	ldr	r0, [fp, #-8]
   18990:	ldr	r0, [r0]
   18994:	str	r0, [fp, #-20]	; 0xffffffec
   18998:	ldr	r0, [fp, #-20]	; 0xffffffec
   1899c:	ldr	r1, [fp, #-20]	; 0xffffffec
   189a0:	asr	r1, r1, #1
   189a4:	add	r1, r0, r1
   189a8:	mov	r2, #1
   189ac:	cmp	r1, r0
   189b0:	movwvc	r2, #0
   189b4:	str	r1, [fp, #-24]	; 0xffffffe8
   189b8:	tst	r2, #1
   189bc:	beq	189c8 <__assert_fail@plt+0x78e0>
   189c0:	ldr	r0, [pc, #4036]	; 1998c <__assert_fail@plt+0x88a4>
   189c4:	str	r0, [fp, #-24]	; 0xffffffe8
   189c8:	ldr	r0, [fp, #-16]
   189cc:	movw	r1, #0
   189d0:	cmp	r1, r0
   189d4:	bgt	189f0 <__assert_fail@plt+0x7908>
   189d8:	ldr	r0, [fp, #-16]
   189dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   189e0:	cmp	r0, r1
   189e4:	bge	189f0 <__assert_fail@plt+0x7908>
   189e8:	ldr	r0, [fp, #-16]
   189ec:	str	r0, [fp, #-24]	; 0xffffffe8
   189f0:	b	18dc8 <__assert_fail@plt+0x7ce0>
   189f4:	b	189f8 <__assert_fail@plt+0x7910>
   189f8:	ldr	r0, [fp, #8]
   189fc:	cmp	r0, #0
   18a00:	bge	18b14 <__assert_fail@plt+0x7a2c>
   18a04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a08:	cmp	r0, #0
   18a0c:	bge	18a98 <__assert_fail@plt+0x79b0>
   18a10:	b	18a14 <__assert_fail@plt+0x792c>
   18a14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a18:	ldr	r1, [fp, #8]
   18a1c:	movw	r2, #127	; 0x7f
   18a20:	sdiv	r1, r2, r1
   18a24:	cmp	r0, r1
   18a28:	blt	18bb4 <__assert_fail@plt+0x7acc>
   18a2c:	b	18bcc <__assert_fail@plt+0x7ae4>
   18a30:	b	18a34 <__assert_fail@plt+0x794c>
   18a34:	ldr	r0, [pc, #4084]	; 19a30 <__assert_fail@plt+0x8948>
   18a38:	ldr	r1, [fp, #8]
   18a3c:	cmp	r1, r0
   18a40:	blt	18a58 <__assert_fail@plt+0x7970>
   18a44:	b	18a64 <__assert_fail@plt+0x797c>
   18a48:	ldr	r0, [fp, #8]
   18a4c:	movw	r1, #0
   18a50:	cmp	r1, r0
   18a54:	bge	18a64 <__assert_fail@plt+0x797c>
   18a58:	movw	r0, #0
   18a5c:	str	r0, [fp, #-36]	; 0xffffffdc
   18a60:	b	18a7c <__assert_fail@plt+0x7994>
   18a64:	ldr	r0, [fp, #8]
   18a68:	movw	r1, #0
   18a6c:	sub	r0, r1, r0
   18a70:	movw	r1, #127	; 0x7f
   18a74:	sdiv	r0, r1, r0
   18a78:	str	r0, [fp, #-36]	; 0xffffffdc
   18a7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18a80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18a84:	mvn	r2, #0
   18a88:	sub	r1, r2, r1
   18a8c:	cmp	r0, r1
   18a90:	ble	18bb4 <__assert_fail@plt+0x7acc>
   18a94:	b	18bcc <__assert_fail@plt+0x7ae4>
   18a98:	b	18a9c <__assert_fail@plt+0x79b4>
   18a9c:	b	18af8 <__assert_fail@plt+0x7a10>
   18aa0:	b	18af8 <__assert_fail@plt+0x7a10>
   18aa4:	ldr	r0, [fp, #8]
   18aa8:	cmn	r0, #1
   18aac:	bne	18af8 <__assert_fail@plt+0x7a10>
   18ab0:	b	18ab4 <__assert_fail@plt+0x79cc>
   18ab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ab8:	mvn	r1, #127	; 0x7f
   18abc:	add	r0, r0, r1
   18ac0:	movw	r1, #0
   18ac4:	cmp	r1, r0
   18ac8:	blt	18bb4 <__assert_fail@plt+0x7acc>
   18acc:	b	18bcc <__assert_fail@plt+0x7ae4>
   18ad0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ad4:	movw	r1, #0
   18ad8:	cmp	r1, r0
   18adc:	bge	18bcc <__assert_fail@plt+0x7ae4>
   18ae0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ae4:	sub	r0, r0, #1
   18ae8:	movw	r1, #127	; 0x7f
   18aec:	cmp	r1, r0
   18af0:	blt	18bb4 <__assert_fail@plt+0x7acc>
   18af4:	b	18bcc <__assert_fail@plt+0x7ae4>
   18af8:	ldr	r0, [fp, #8]
   18afc:	mvn	r1, #127	; 0x7f
   18b00:	sdiv	r0, r1, r0
   18b04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b08:	cmp	r0, r1
   18b0c:	blt	18bb4 <__assert_fail@plt+0x7acc>
   18b10:	b	18bcc <__assert_fail@plt+0x7ae4>
   18b14:	ldr	r0, [fp, #8]
   18b18:	cmp	r0, #0
   18b1c:	bne	18b24 <__assert_fail@plt+0x7a3c>
   18b20:	b	18bcc <__assert_fail@plt+0x7ae4>
   18b24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b28:	cmp	r0, #0
   18b2c:	bge	18b9c <__assert_fail@plt+0x7ab4>
   18b30:	b	18b34 <__assert_fail@plt+0x7a4c>
   18b34:	b	18b80 <__assert_fail@plt+0x7a98>
   18b38:	b	18b80 <__assert_fail@plt+0x7a98>
   18b3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b40:	cmn	r0, #1
   18b44:	bne	18b80 <__assert_fail@plt+0x7a98>
   18b48:	b	18b4c <__assert_fail@plt+0x7a64>
   18b4c:	ldr	r0, [fp, #8]
   18b50:	mvn	r1, #127	; 0x7f
   18b54:	add	r0, r0, r1
   18b58:	movw	r1, #0
   18b5c:	cmp	r1, r0
   18b60:	blt	18bb4 <__assert_fail@plt+0x7acc>
   18b64:	b	18bcc <__assert_fail@plt+0x7ae4>
   18b68:	ldr	r0, [fp, #8]
   18b6c:	sub	r0, r0, #1
   18b70:	movw	r1, #127	; 0x7f
   18b74:	cmp	r1, r0
   18b78:	blt	18bb4 <__assert_fail@plt+0x7acc>
   18b7c:	b	18bcc <__assert_fail@plt+0x7ae4>
   18b80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b84:	mvn	r1, #127	; 0x7f
   18b88:	sdiv	r0, r1, r0
   18b8c:	ldr	r1, [fp, #8]
   18b90:	cmp	r0, r1
   18b94:	blt	18bb4 <__assert_fail@plt+0x7acc>
   18b98:	b	18bcc <__assert_fail@plt+0x7ae4>
   18b9c:	ldr	r0, [fp, #8]
   18ba0:	movw	r1, #127	; 0x7f
   18ba4:	sdiv	r0, r1, r0
   18ba8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18bac:	cmp	r0, r1
   18bb0:	bge	18bcc <__assert_fail@plt+0x7ae4>
   18bb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bb8:	ldr	r1, [fp, #8]
   18bbc:	mul	r0, r0, r1
   18bc0:	sxtb	r0, r0
   18bc4:	str	r0, [fp, #-28]	; 0xffffffe4
   18bc8:	b	19d90 <__assert_fail@plt+0x8ca8>
   18bcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bd0:	ldr	r1, [fp, #8]
   18bd4:	mul	r0, r0, r1
   18bd8:	sxtb	r0, r0
   18bdc:	str	r0, [fp, #-28]	; 0xffffffe4
   18be0:	b	19d9c <__assert_fail@plt+0x8cb4>
   18be4:	ldr	r0, [fp, #8]
   18be8:	cmp	r0, #0
   18bec:	bge	18cfc <__assert_fail@plt+0x7c14>
   18bf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bf4:	cmp	r0, #0
   18bf8:	bge	18c84 <__assert_fail@plt+0x7b9c>
   18bfc:	b	18c00 <__assert_fail@plt+0x7b18>
   18c00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c04:	ldr	r1, [fp, #8]
   18c08:	movw	r2, #255	; 0xff
   18c0c:	sdiv	r1, r2, r1
   18c10:	cmp	r0, r1
   18c14:	blt	18d98 <__assert_fail@plt+0x7cb0>
   18c18:	b	18db0 <__assert_fail@plt+0x7cc8>
   18c1c:	b	18c20 <__assert_fail@plt+0x7b38>
   18c20:	ldr	r0, [pc, #3592]	; 19a30 <__assert_fail@plt+0x8948>
   18c24:	ldr	r1, [fp, #8]
   18c28:	cmp	r1, r0
   18c2c:	blt	18c44 <__assert_fail@plt+0x7b5c>
   18c30:	b	18c50 <__assert_fail@plt+0x7b68>
   18c34:	ldr	r0, [fp, #8]
   18c38:	movw	r1, #0
   18c3c:	cmp	r1, r0
   18c40:	bge	18c50 <__assert_fail@plt+0x7b68>
   18c44:	movw	r0, #0
   18c48:	str	r0, [fp, #-40]	; 0xffffffd8
   18c4c:	b	18c68 <__assert_fail@plt+0x7b80>
   18c50:	ldr	r0, [fp, #8]
   18c54:	movw	r1, #0
   18c58:	sub	r0, r1, r0
   18c5c:	movw	r1, #255	; 0xff
   18c60:	sdiv	r0, r1, r0
   18c64:	str	r0, [fp, #-40]	; 0xffffffd8
   18c68:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18c6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c70:	mvn	r2, #0
   18c74:	sub	r1, r2, r1
   18c78:	cmp	r0, r1
   18c7c:	ble	18d98 <__assert_fail@plt+0x7cb0>
   18c80:	b	18db0 <__assert_fail@plt+0x7cc8>
   18c84:	b	18c88 <__assert_fail@plt+0x7ba0>
   18c88:	b	18ce0 <__assert_fail@plt+0x7bf8>
   18c8c:	b	18ce0 <__assert_fail@plt+0x7bf8>
   18c90:	ldr	r0, [fp, #8]
   18c94:	cmn	r0, #1
   18c98:	bne	18ce0 <__assert_fail@plt+0x7bf8>
   18c9c:	b	18ca0 <__assert_fail@plt+0x7bb8>
   18ca0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ca4:	add	r0, r0, #0
   18ca8:	movw	r1, #0
   18cac:	cmp	r1, r0
   18cb0:	blt	18d98 <__assert_fail@plt+0x7cb0>
   18cb4:	b	18db0 <__assert_fail@plt+0x7cc8>
   18cb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cbc:	movw	r1, #0
   18cc0:	cmp	r1, r0
   18cc4:	bge	18db0 <__assert_fail@plt+0x7cc8>
   18cc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ccc:	sub	r0, r0, #1
   18cd0:	mvn	r1, #0
   18cd4:	cmp	r1, r0
   18cd8:	blt	18d98 <__assert_fail@plt+0x7cb0>
   18cdc:	b	18db0 <__assert_fail@plt+0x7cc8>
   18ce0:	ldr	r0, [fp, #8]
   18ce4:	movw	r1, #0
   18ce8:	sdiv	r0, r1, r0
   18cec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18cf0:	cmp	r0, r1
   18cf4:	blt	18d98 <__assert_fail@plt+0x7cb0>
   18cf8:	b	18db0 <__assert_fail@plt+0x7cc8>
   18cfc:	ldr	r0, [fp, #8]
   18d00:	cmp	r0, #0
   18d04:	bne	18d0c <__assert_fail@plt+0x7c24>
   18d08:	b	18db0 <__assert_fail@plt+0x7cc8>
   18d0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d10:	cmp	r0, #0
   18d14:	bge	18d80 <__assert_fail@plt+0x7c98>
   18d18:	b	18d1c <__assert_fail@plt+0x7c34>
   18d1c:	b	18d64 <__assert_fail@plt+0x7c7c>
   18d20:	b	18d64 <__assert_fail@plt+0x7c7c>
   18d24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d28:	cmn	r0, #1
   18d2c:	bne	18d64 <__assert_fail@plt+0x7c7c>
   18d30:	b	18d34 <__assert_fail@plt+0x7c4c>
   18d34:	ldr	r0, [fp, #8]
   18d38:	add	r0, r0, #0
   18d3c:	movw	r1, #0
   18d40:	cmp	r1, r0
   18d44:	blt	18d98 <__assert_fail@plt+0x7cb0>
   18d48:	b	18db0 <__assert_fail@plt+0x7cc8>
   18d4c:	ldr	r0, [fp, #8]
   18d50:	sub	r0, r0, #1
   18d54:	mvn	r1, #0
   18d58:	cmp	r1, r0
   18d5c:	blt	18d98 <__assert_fail@plt+0x7cb0>
   18d60:	b	18db0 <__assert_fail@plt+0x7cc8>
   18d64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d68:	movw	r1, #0
   18d6c:	sdiv	r0, r1, r0
   18d70:	ldr	r1, [fp, #8]
   18d74:	cmp	r0, r1
   18d78:	blt	18d98 <__assert_fail@plt+0x7cb0>
   18d7c:	b	18db0 <__assert_fail@plt+0x7cc8>
   18d80:	ldr	r0, [fp, #8]
   18d84:	movw	r1, #255	; 0xff
   18d88:	sdiv	r0, r1, r0
   18d8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d90:	cmp	r0, r1
   18d94:	bge	18db0 <__assert_fail@plt+0x7cc8>
   18d98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d9c:	ldr	r1, [fp, #8]
   18da0:	mul	r0, r0, r1
   18da4:	and	r0, r0, #255	; 0xff
   18da8:	str	r0, [fp, #-28]	; 0xffffffe4
   18dac:	b	19d90 <__assert_fail@plt+0x8ca8>
   18db0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18db4:	ldr	r1, [fp, #8]
   18db8:	mul	r0, r0, r1
   18dbc:	and	r0, r0, #255	; 0xff
   18dc0:	str	r0, [fp, #-28]	; 0xffffffe4
   18dc4:	b	19d9c <__assert_fail@plt+0x8cb4>
   18dc8:	b	191a0 <__assert_fail@plt+0x80b8>
   18dcc:	b	18dd0 <__assert_fail@plt+0x7ce8>
   18dd0:	ldr	r0, [fp, #8]
   18dd4:	cmp	r0, #0
   18dd8:	bge	18eec <__assert_fail@plt+0x7e04>
   18ddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18de0:	cmp	r0, #0
   18de4:	bge	18e70 <__assert_fail@plt+0x7d88>
   18de8:	b	18dec <__assert_fail@plt+0x7d04>
   18dec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18df0:	ldr	r1, [fp, #8]
   18df4:	movw	r2, #32767	; 0x7fff
   18df8:	sdiv	r1, r2, r1
   18dfc:	cmp	r0, r1
   18e00:	blt	18f8c <__assert_fail@plt+0x7ea4>
   18e04:	b	18fa4 <__assert_fail@plt+0x7ebc>
   18e08:	b	18e0c <__assert_fail@plt+0x7d24>
   18e0c:	ldr	r0, [pc, #3100]	; 19a30 <__assert_fail@plt+0x8948>
   18e10:	ldr	r1, [fp, #8]
   18e14:	cmp	r1, r0
   18e18:	blt	18e30 <__assert_fail@plt+0x7d48>
   18e1c:	b	18e3c <__assert_fail@plt+0x7d54>
   18e20:	ldr	r0, [fp, #8]
   18e24:	movw	r1, #0
   18e28:	cmp	r1, r0
   18e2c:	bge	18e3c <__assert_fail@plt+0x7d54>
   18e30:	movw	r0, #0
   18e34:	str	r0, [fp, #-44]	; 0xffffffd4
   18e38:	b	18e54 <__assert_fail@plt+0x7d6c>
   18e3c:	ldr	r0, [fp, #8]
   18e40:	movw	r1, #0
   18e44:	sub	r0, r1, r0
   18e48:	movw	r1, #32767	; 0x7fff
   18e4c:	sdiv	r0, r1, r0
   18e50:	str	r0, [fp, #-44]	; 0xffffffd4
   18e54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18e58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e5c:	mvn	r2, #0
   18e60:	sub	r1, r2, r1
   18e64:	cmp	r0, r1
   18e68:	ble	18f8c <__assert_fail@plt+0x7ea4>
   18e6c:	b	18fa4 <__assert_fail@plt+0x7ebc>
   18e70:	b	18e74 <__assert_fail@plt+0x7d8c>
   18e74:	b	18ed0 <__assert_fail@plt+0x7de8>
   18e78:	b	18ed0 <__assert_fail@plt+0x7de8>
   18e7c:	ldr	r0, [fp, #8]
   18e80:	cmn	r0, #1
   18e84:	bne	18ed0 <__assert_fail@plt+0x7de8>
   18e88:	b	18e8c <__assert_fail@plt+0x7da4>
   18e8c:	ldr	r0, [pc, #4068]	; 19e78 <__assert_fail@plt+0x8d90>
   18e90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e94:	add	r0, r1, r0
   18e98:	movw	r1, #0
   18e9c:	cmp	r1, r0
   18ea0:	blt	18f8c <__assert_fail@plt+0x7ea4>
   18ea4:	b	18fa4 <__assert_fail@plt+0x7ebc>
   18ea8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18eac:	movw	r1, #0
   18eb0:	cmp	r1, r0
   18eb4:	bge	18fa4 <__assert_fail@plt+0x7ebc>
   18eb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ebc:	sub	r0, r0, #1
   18ec0:	movw	r1, #32767	; 0x7fff
   18ec4:	cmp	r1, r0
   18ec8:	blt	18f8c <__assert_fail@plt+0x7ea4>
   18ecc:	b	18fa4 <__assert_fail@plt+0x7ebc>
   18ed0:	ldr	r0, [pc, #4000]	; 19e78 <__assert_fail@plt+0x8d90>
   18ed4:	ldr	r1, [fp, #8]
   18ed8:	sdiv	r0, r0, r1
   18edc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ee0:	cmp	r0, r1
   18ee4:	blt	18f8c <__assert_fail@plt+0x7ea4>
   18ee8:	b	18fa4 <__assert_fail@plt+0x7ebc>
   18eec:	ldr	r0, [fp, #8]
   18ef0:	cmp	r0, #0
   18ef4:	bne	18efc <__assert_fail@plt+0x7e14>
   18ef8:	b	18fa4 <__assert_fail@plt+0x7ebc>
   18efc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f00:	cmp	r0, #0
   18f04:	bge	18f74 <__assert_fail@plt+0x7e8c>
   18f08:	b	18f0c <__assert_fail@plt+0x7e24>
   18f0c:	b	18f58 <__assert_fail@plt+0x7e70>
   18f10:	b	18f58 <__assert_fail@plt+0x7e70>
   18f14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f18:	cmn	r0, #1
   18f1c:	bne	18f58 <__assert_fail@plt+0x7e70>
   18f20:	b	18f24 <__assert_fail@plt+0x7e3c>
   18f24:	ldr	r0, [pc, #3916]	; 19e78 <__assert_fail@plt+0x8d90>
   18f28:	ldr	r1, [fp, #8]
   18f2c:	add	r0, r1, r0
   18f30:	movw	r1, #0
   18f34:	cmp	r1, r0
   18f38:	blt	18f8c <__assert_fail@plt+0x7ea4>
   18f3c:	b	18fa4 <__assert_fail@plt+0x7ebc>
   18f40:	ldr	r0, [fp, #8]
   18f44:	sub	r0, r0, #1
   18f48:	movw	r1, #32767	; 0x7fff
   18f4c:	cmp	r1, r0
   18f50:	blt	18f8c <__assert_fail@plt+0x7ea4>
   18f54:	b	18fa4 <__assert_fail@plt+0x7ebc>
   18f58:	ldr	r0, [pc, #3864]	; 19e78 <__assert_fail@plt+0x8d90>
   18f5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f60:	sdiv	r0, r0, r1
   18f64:	ldr	r1, [fp, #8]
   18f68:	cmp	r0, r1
   18f6c:	blt	18f8c <__assert_fail@plt+0x7ea4>
   18f70:	b	18fa4 <__assert_fail@plt+0x7ebc>
   18f74:	ldr	r0, [fp, #8]
   18f78:	movw	r1, #32767	; 0x7fff
   18f7c:	sdiv	r0, r1, r0
   18f80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f84:	cmp	r0, r1
   18f88:	bge	18fa4 <__assert_fail@plt+0x7ebc>
   18f8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f90:	ldr	r1, [fp, #8]
   18f94:	mul	r0, r0, r1
   18f98:	sxth	r0, r0
   18f9c:	str	r0, [fp, #-28]	; 0xffffffe4
   18fa0:	b	19d90 <__assert_fail@plt+0x8ca8>
   18fa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fa8:	ldr	r1, [fp, #8]
   18fac:	mul	r0, r0, r1
   18fb0:	sxth	r0, r0
   18fb4:	str	r0, [fp, #-28]	; 0xffffffe4
   18fb8:	b	19d9c <__assert_fail@plt+0x8cb4>
   18fbc:	ldr	r0, [fp, #8]
   18fc0:	cmp	r0, #0
   18fc4:	bge	190d4 <__assert_fail@plt+0x7fec>
   18fc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fcc:	cmp	r0, #0
   18fd0:	bge	1905c <__assert_fail@plt+0x7f74>
   18fd4:	b	18fd8 <__assert_fail@plt+0x7ef0>
   18fd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fdc:	ldr	r1, [fp, #8]
   18fe0:	movw	r2, #65535	; 0xffff
   18fe4:	sdiv	r1, r2, r1
   18fe8:	cmp	r0, r1
   18fec:	blt	19170 <__assert_fail@plt+0x8088>
   18ff0:	b	19188 <__assert_fail@plt+0x80a0>
   18ff4:	b	18ff8 <__assert_fail@plt+0x7f10>
   18ff8:	ldr	r0, [pc, #2608]	; 19a30 <__assert_fail@plt+0x8948>
   18ffc:	ldr	r1, [fp, #8]
   19000:	cmp	r1, r0
   19004:	blt	1901c <__assert_fail@plt+0x7f34>
   19008:	b	19028 <__assert_fail@plt+0x7f40>
   1900c:	ldr	r0, [fp, #8]
   19010:	movw	r1, #0
   19014:	cmp	r1, r0
   19018:	bge	19028 <__assert_fail@plt+0x7f40>
   1901c:	movw	r0, #0
   19020:	str	r0, [fp, #-48]	; 0xffffffd0
   19024:	b	19040 <__assert_fail@plt+0x7f58>
   19028:	ldr	r0, [fp, #8]
   1902c:	movw	r1, #0
   19030:	sub	r0, r1, r0
   19034:	movw	r1, #65535	; 0xffff
   19038:	sdiv	r0, r1, r0
   1903c:	str	r0, [fp, #-48]	; 0xffffffd0
   19040:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19044:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19048:	mvn	r2, #0
   1904c:	sub	r1, r2, r1
   19050:	cmp	r0, r1
   19054:	ble	19170 <__assert_fail@plt+0x8088>
   19058:	b	19188 <__assert_fail@plt+0x80a0>
   1905c:	b	19060 <__assert_fail@plt+0x7f78>
   19060:	b	190b8 <__assert_fail@plt+0x7fd0>
   19064:	b	190b8 <__assert_fail@plt+0x7fd0>
   19068:	ldr	r0, [fp, #8]
   1906c:	cmn	r0, #1
   19070:	bne	190b8 <__assert_fail@plt+0x7fd0>
   19074:	b	19078 <__assert_fail@plt+0x7f90>
   19078:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1907c:	add	r0, r0, #0
   19080:	movw	r1, #0
   19084:	cmp	r1, r0
   19088:	blt	19170 <__assert_fail@plt+0x8088>
   1908c:	b	19188 <__assert_fail@plt+0x80a0>
   19090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19094:	movw	r1, #0
   19098:	cmp	r1, r0
   1909c:	bge	19188 <__assert_fail@plt+0x80a0>
   190a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190a4:	sub	r0, r0, #1
   190a8:	mvn	r1, #0
   190ac:	cmp	r1, r0
   190b0:	blt	19170 <__assert_fail@plt+0x8088>
   190b4:	b	19188 <__assert_fail@plt+0x80a0>
   190b8:	ldr	r0, [fp, #8]
   190bc:	movw	r1, #0
   190c0:	sdiv	r0, r1, r0
   190c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   190c8:	cmp	r0, r1
   190cc:	blt	19170 <__assert_fail@plt+0x8088>
   190d0:	b	19188 <__assert_fail@plt+0x80a0>
   190d4:	ldr	r0, [fp, #8]
   190d8:	cmp	r0, #0
   190dc:	bne	190e4 <__assert_fail@plt+0x7ffc>
   190e0:	b	19188 <__assert_fail@plt+0x80a0>
   190e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190e8:	cmp	r0, #0
   190ec:	bge	19158 <__assert_fail@plt+0x8070>
   190f0:	b	190f4 <__assert_fail@plt+0x800c>
   190f4:	b	1913c <__assert_fail@plt+0x8054>
   190f8:	b	1913c <__assert_fail@plt+0x8054>
   190fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19100:	cmn	r0, #1
   19104:	bne	1913c <__assert_fail@plt+0x8054>
   19108:	b	1910c <__assert_fail@plt+0x8024>
   1910c:	ldr	r0, [fp, #8]
   19110:	add	r0, r0, #0
   19114:	movw	r1, #0
   19118:	cmp	r1, r0
   1911c:	blt	19170 <__assert_fail@plt+0x8088>
   19120:	b	19188 <__assert_fail@plt+0x80a0>
   19124:	ldr	r0, [fp, #8]
   19128:	sub	r0, r0, #1
   1912c:	mvn	r1, #0
   19130:	cmp	r1, r0
   19134:	blt	19170 <__assert_fail@plt+0x8088>
   19138:	b	19188 <__assert_fail@plt+0x80a0>
   1913c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19140:	movw	r1, #0
   19144:	sdiv	r0, r1, r0
   19148:	ldr	r1, [fp, #8]
   1914c:	cmp	r0, r1
   19150:	blt	19170 <__assert_fail@plt+0x8088>
   19154:	b	19188 <__assert_fail@plt+0x80a0>
   19158:	ldr	r0, [fp, #8]
   1915c:	movw	r1, #65535	; 0xffff
   19160:	sdiv	r0, r1, r0
   19164:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19168:	cmp	r0, r1
   1916c:	bge	19188 <__assert_fail@plt+0x80a0>
   19170:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19174:	ldr	r1, [fp, #8]
   19178:	mul	r0, r0, r1
   1917c:	uxth	r0, r0
   19180:	str	r0, [fp, #-28]	; 0xffffffe4
   19184:	b	19d90 <__assert_fail@plt+0x8ca8>
   19188:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1918c:	ldr	r1, [fp, #8]
   19190:	mul	r0, r0, r1
   19194:	uxth	r0, r0
   19198:	str	r0, [fp, #-28]	; 0xffffffe4
   1919c:	b	19d9c <__assert_fail@plt+0x8cb4>
   191a0:	b	191a4 <__assert_fail@plt+0x80bc>
   191a4:	b	191a8 <__assert_fail@plt+0x80c0>
   191a8:	ldr	r0, [fp, #8]
   191ac:	cmp	r0, #0
   191b0:	bge	192b4 <__assert_fail@plt+0x81cc>
   191b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191b8:	cmp	r0, #0
   191bc:	bge	19248 <__assert_fail@plt+0x8160>
   191c0:	b	191c4 <__assert_fail@plt+0x80dc>
   191c4:	ldr	r0, [pc, #1984]	; 1998c <__assert_fail@plt+0x88a4>
   191c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   191cc:	ldr	r2, [fp, #8]
   191d0:	sdiv	r0, r0, r2
   191d4:	cmp	r1, r0
   191d8:	blt	19344 <__assert_fail@plt+0x825c>
   191dc:	b	19358 <__assert_fail@plt+0x8270>
   191e0:	b	191e4 <__assert_fail@plt+0x80fc>
   191e4:	ldr	r0, [pc, #2116]	; 19a30 <__assert_fail@plt+0x8948>
   191e8:	ldr	r1, [fp, #8]
   191ec:	cmp	r1, r0
   191f0:	blt	19208 <__assert_fail@plt+0x8120>
   191f4:	b	19214 <__assert_fail@plt+0x812c>
   191f8:	ldr	r0, [fp, #8]
   191fc:	movw	r1, #0
   19200:	cmp	r1, r0
   19204:	bge	19214 <__assert_fail@plt+0x812c>
   19208:	movw	r0, #0
   1920c:	str	r0, [fp, #-52]	; 0xffffffcc
   19210:	b	1922c <__assert_fail@plt+0x8144>
   19214:	ldr	r0, [pc, #1904]	; 1998c <__assert_fail@plt+0x88a4>
   19218:	ldr	r1, [fp, #8]
   1921c:	movw	r2, #0
   19220:	sub	r1, r2, r1
   19224:	sdiv	r0, r0, r1
   19228:	str	r0, [fp, #-52]	; 0xffffffcc
   1922c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19230:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19234:	mvn	r2, #0
   19238:	sub	r1, r2, r1
   1923c:	cmp	r0, r1
   19240:	ble	19344 <__assert_fail@plt+0x825c>
   19244:	b	19358 <__assert_fail@plt+0x8270>
   19248:	ldr	r0, [fp, #8]
   1924c:	cmn	r0, #1
   19250:	bne	19298 <__assert_fail@plt+0x81b0>
   19254:	b	19258 <__assert_fail@plt+0x8170>
   19258:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1925c:	add	r0, r0, #-2147483648	; 0x80000000
   19260:	movw	r1, #0
   19264:	cmp	r1, r0
   19268:	blt	19344 <__assert_fail@plt+0x825c>
   1926c:	b	19358 <__assert_fail@plt+0x8270>
   19270:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19274:	movw	r1, #0
   19278:	cmp	r1, r0
   1927c:	bge	19358 <__assert_fail@plt+0x8270>
   19280:	ldr	r0, [pc, #1796]	; 1998c <__assert_fail@plt+0x88a4>
   19284:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19288:	sub	r1, r1, #1
   1928c:	cmp	r0, r1
   19290:	blt	19344 <__assert_fail@plt+0x825c>
   19294:	b	19358 <__assert_fail@plt+0x8270>
   19298:	ldr	r0, [pc, #4080]	; 1a290 <__assert_fail@plt+0x91a8>
   1929c:	ldr	r1, [fp, #8]
   192a0:	sdiv	r0, r0, r1
   192a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   192a8:	cmp	r0, r1
   192ac:	blt	19344 <__assert_fail@plt+0x825c>
   192b0:	b	19358 <__assert_fail@plt+0x8270>
   192b4:	ldr	r0, [fp, #8]
   192b8:	cmp	r0, #0
   192bc:	bne	192c4 <__assert_fail@plt+0x81dc>
   192c0:	b	19358 <__assert_fail@plt+0x8270>
   192c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192c8:	cmp	r0, #0
   192cc:	bge	1932c <__assert_fail@plt+0x8244>
   192d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192d4:	cmn	r0, #1
   192d8:	bne	19310 <__assert_fail@plt+0x8228>
   192dc:	b	192e0 <__assert_fail@plt+0x81f8>
   192e0:	ldr	r0, [fp, #8]
   192e4:	add	r0, r0, #-2147483648	; 0x80000000
   192e8:	movw	r1, #0
   192ec:	cmp	r1, r0
   192f0:	blt	19344 <__assert_fail@plt+0x825c>
   192f4:	b	19358 <__assert_fail@plt+0x8270>
   192f8:	ldr	r0, [pc, #1676]	; 1998c <__assert_fail@plt+0x88a4>
   192fc:	ldr	r1, [fp, #8]
   19300:	sub	r1, r1, #1
   19304:	cmp	r0, r1
   19308:	blt	19344 <__assert_fail@plt+0x825c>
   1930c:	b	19358 <__assert_fail@plt+0x8270>
   19310:	ldr	r0, [pc, #3960]	; 1a290 <__assert_fail@plt+0x91a8>
   19314:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19318:	sdiv	r0, r0, r1
   1931c:	ldr	r1, [fp, #8]
   19320:	cmp	r0, r1
   19324:	blt	19344 <__assert_fail@plt+0x825c>
   19328:	b	19358 <__assert_fail@plt+0x8270>
   1932c:	ldr	r0, [pc, #1624]	; 1998c <__assert_fail@plt+0x88a4>
   19330:	ldr	r1, [fp, #8]
   19334:	sdiv	r0, r0, r1
   19338:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1933c:	cmp	r0, r1
   19340:	bge	19358 <__assert_fail@plt+0x8270>
   19344:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19348:	ldr	r1, [fp, #8]
   1934c:	mul	r0, r0, r1
   19350:	str	r0, [fp, #-28]	; 0xffffffe4
   19354:	b	19d90 <__assert_fail@plt+0x8ca8>
   19358:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1935c:	ldr	r1, [fp, #8]
   19360:	mul	r0, r0, r1
   19364:	str	r0, [fp, #-28]	; 0xffffffe4
   19368:	b	19d9c <__assert_fail@plt+0x8cb4>
   1936c:	ldr	r0, [fp, #8]
   19370:	cmp	r0, #0
   19374:	bge	19484 <__assert_fail@plt+0x839c>
   19378:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1937c:	cmp	r0, #0
   19380:	bge	1940c <__assert_fail@plt+0x8324>
   19384:	b	193a4 <__assert_fail@plt+0x82bc>
   19388:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1938c:	ldr	r1, [fp, #8]
   19390:	mvn	r2, #0
   19394:	udiv	r1, r2, r1
   19398:	cmp	r0, r1
   1939c:	bcc	19520 <__assert_fail@plt+0x8438>
   193a0:	b	19534 <__assert_fail@plt+0x844c>
   193a4:	b	193a8 <__assert_fail@plt+0x82c0>
   193a8:	ldr	r0, [pc, #1664]	; 19a30 <__assert_fail@plt+0x8948>
   193ac:	ldr	r1, [fp, #8]
   193b0:	cmp	r1, r0
   193b4:	blt	193cc <__assert_fail@plt+0x82e4>
   193b8:	b	193d8 <__assert_fail@plt+0x82f0>
   193bc:	ldr	r0, [fp, #8]
   193c0:	movw	r1, #0
   193c4:	cmp	r1, r0
   193c8:	bge	193d8 <__assert_fail@plt+0x82f0>
   193cc:	movw	r0, #1
   193d0:	str	r0, [fp, #-56]	; 0xffffffc8
   193d4:	b	193f0 <__assert_fail@plt+0x8308>
   193d8:	ldr	r0, [fp, #8]
   193dc:	movw	r1, #0
   193e0:	sub	r0, r1, r0
   193e4:	mvn	r1, #0
   193e8:	udiv	r0, r1, r0
   193ec:	str	r0, [fp, #-56]	; 0xffffffc8
   193f0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   193f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   193f8:	mvn	r2, #0
   193fc:	sub	r1, r2, r1
   19400:	cmp	r0, r1
   19404:	bls	19520 <__assert_fail@plt+0x8438>
   19408:	b	19534 <__assert_fail@plt+0x844c>
   1940c:	b	19410 <__assert_fail@plt+0x8328>
   19410:	b	19468 <__assert_fail@plt+0x8380>
   19414:	b	19468 <__assert_fail@plt+0x8380>
   19418:	ldr	r0, [fp, #8]
   1941c:	cmn	r0, #1
   19420:	bne	19468 <__assert_fail@plt+0x8380>
   19424:	b	19428 <__assert_fail@plt+0x8340>
   19428:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1942c:	add	r0, r0, #0
   19430:	movw	r1, #0
   19434:	cmp	r1, r0
   19438:	blt	19520 <__assert_fail@plt+0x8438>
   1943c:	b	19534 <__assert_fail@plt+0x844c>
   19440:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19444:	movw	r1, #0
   19448:	cmp	r1, r0
   1944c:	bge	19534 <__assert_fail@plt+0x844c>
   19450:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19454:	sub	r0, r0, #1
   19458:	mvn	r1, #0
   1945c:	cmp	r1, r0
   19460:	blt	19520 <__assert_fail@plt+0x8438>
   19464:	b	19534 <__assert_fail@plt+0x844c>
   19468:	ldr	r0, [fp, #8]
   1946c:	movw	r1, #0
   19470:	sdiv	r0, r1, r0
   19474:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19478:	cmp	r0, r1
   1947c:	blt	19520 <__assert_fail@plt+0x8438>
   19480:	b	19534 <__assert_fail@plt+0x844c>
   19484:	ldr	r0, [fp, #8]
   19488:	cmp	r0, #0
   1948c:	bne	19494 <__assert_fail@plt+0x83ac>
   19490:	b	19534 <__assert_fail@plt+0x844c>
   19494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19498:	cmp	r0, #0
   1949c:	bge	19508 <__assert_fail@plt+0x8420>
   194a0:	b	194a4 <__assert_fail@plt+0x83bc>
   194a4:	b	194ec <__assert_fail@plt+0x8404>
   194a8:	b	194ec <__assert_fail@plt+0x8404>
   194ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194b0:	cmn	r0, #1
   194b4:	bne	194ec <__assert_fail@plt+0x8404>
   194b8:	b	194bc <__assert_fail@plt+0x83d4>
   194bc:	ldr	r0, [fp, #8]
   194c0:	add	r0, r0, #0
   194c4:	movw	r1, #0
   194c8:	cmp	r1, r0
   194cc:	blt	19520 <__assert_fail@plt+0x8438>
   194d0:	b	19534 <__assert_fail@plt+0x844c>
   194d4:	ldr	r0, [fp, #8]
   194d8:	sub	r0, r0, #1
   194dc:	mvn	r1, #0
   194e0:	cmp	r1, r0
   194e4:	blt	19520 <__assert_fail@plt+0x8438>
   194e8:	b	19534 <__assert_fail@plt+0x844c>
   194ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194f0:	movw	r1, #0
   194f4:	sdiv	r0, r1, r0
   194f8:	ldr	r1, [fp, #8]
   194fc:	cmp	r0, r1
   19500:	blt	19520 <__assert_fail@plt+0x8438>
   19504:	b	19534 <__assert_fail@plt+0x844c>
   19508:	ldr	r0, [fp, #8]
   1950c:	mvn	r1, #0
   19510:	udiv	r0, r1, r0
   19514:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19518:	cmp	r0, r1
   1951c:	bcs	19534 <__assert_fail@plt+0x844c>
   19520:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19524:	ldr	r1, [fp, #8]
   19528:	mul	r0, r0, r1
   1952c:	str	r0, [fp, #-28]	; 0xffffffe4
   19530:	b	19d90 <__assert_fail@plt+0x8ca8>
   19534:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19538:	ldr	r1, [fp, #8]
   1953c:	mul	r0, r0, r1
   19540:	str	r0, [fp, #-28]	; 0xffffffe4
   19544:	b	19d9c <__assert_fail@plt+0x8cb4>
   19548:	b	1954c <__assert_fail@plt+0x8464>
   1954c:	b	19550 <__assert_fail@plt+0x8468>
   19550:	ldr	r0, [fp, #8]
   19554:	cmp	r0, #0
   19558:	bge	1965c <__assert_fail@plt+0x8574>
   1955c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19560:	cmp	r0, #0
   19564:	bge	195f0 <__assert_fail@plt+0x8508>
   19568:	b	1956c <__assert_fail@plt+0x8484>
   1956c:	ldr	r0, [pc, #1048]	; 1998c <__assert_fail@plt+0x88a4>
   19570:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19574:	ldr	r2, [fp, #8]
   19578:	sdiv	r0, r0, r2
   1957c:	cmp	r1, r0
   19580:	blt	196ec <__assert_fail@plt+0x8604>
   19584:	b	19700 <__assert_fail@plt+0x8618>
   19588:	b	1958c <__assert_fail@plt+0x84a4>
   1958c:	ldr	r0, [pc, #1180]	; 19a30 <__assert_fail@plt+0x8948>
   19590:	ldr	r1, [fp, #8]
   19594:	cmp	r1, r0
   19598:	blt	195b0 <__assert_fail@plt+0x84c8>
   1959c:	b	195bc <__assert_fail@plt+0x84d4>
   195a0:	ldr	r0, [fp, #8]
   195a4:	movw	r1, #0
   195a8:	cmp	r1, r0
   195ac:	bge	195bc <__assert_fail@plt+0x84d4>
   195b0:	movw	r0, #0
   195b4:	str	r0, [fp, #-60]	; 0xffffffc4
   195b8:	b	195d4 <__assert_fail@plt+0x84ec>
   195bc:	ldr	r0, [pc, #968]	; 1998c <__assert_fail@plt+0x88a4>
   195c0:	ldr	r1, [fp, #8]
   195c4:	movw	r2, #0
   195c8:	sub	r1, r2, r1
   195cc:	sdiv	r0, r0, r1
   195d0:	str	r0, [fp, #-60]	; 0xffffffc4
   195d4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   195d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   195dc:	mvn	r2, #0
   195e0:	sub	r1, r2, r1
   195e4:	cmp	r0, r1
   195e8:	ble	196ec <__assert_fail@plt+0x8604>
   195ec:	b	19700 <__assert_fail@plt+0x8618>
   195f0:	ldr	r0, [fp, #8]
   195f4:	cmn	r0, #1
   195f8:	bne	19640 <__assert_fail@plt+0x8558>
   195fc:	b	19600 <__assert_fail@plt+0x8518>
   19600:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19604:	add	r0, r0, #-2147483648	; 0x80000000
   19608:	movw	r1, #0
   1960c:	cmp	r1, r0
   19610:	blt	196ec <__assert_fail@plt+0x8604>
   19614:	b	19700 <__assert_fail@plt+0x8618>
   19618:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1961c:	movw	r1, #0
   19620:	cmp	r1, r0
   19624:	bge	19700 <__assert_fail@plt+0x8618>
   19628:	ldr	r0, [pc, #860]	; 1998c <__assert_fail@plt+0x88a4>
   1962c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19630:	sub	r1, r1, #1
   19634:	cmp	r0, r1
   19638:	blt	196ec <__assert_fail@plt+0x8604>
   1963c:	b	19700 <__assert_fail@plt+0x8618>
   19640:	ldr	r0, [pc, #3144]	; 1a290 <__assert_fail@plt+0x91a8>
   19644:	ldr	r1, [fp, #8]
   19648:	sdiv	r0, r0, r1
   1964c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19650:	cmp	r0, r1
   19654:	blt	196ec <__assert_fail@plt+0x8604>
   19658:	b	19700 <__assert_fail@plt+0x8618>
   1965c:	ldr	r0, [fp, #8]
   19660:	cmp	r0, #0
   19664:	bne	1966c <__assert_fail@plt+0x8584>
   19668:	b	19700 <__assert_fail@plt+0x8618>
   1966c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19670:	cmp	r0, #0
   19674:	bge	196d4 <__assert_fail@plt+0x85ec>
   19678:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1967c:	cmn	r0, #1
   19680:	bne	196b8 <__assert_fail@plt+0x85d0>
   19684:	b	19688 <__assert_fail@plt+0x85a0>
   19688:	ldr	r0, [fp, #8]
   1968c:	add	r0, r0, #-2147483648	; 0x80000000
   19690:	movw	r1, #0
   19694:	cmp	r1, r0
   19698:	blt	196ec <__assert_fail@plt+0x8604>
   1969c:	b	19700 <__assert_fail@plt+0x8618>
   196a0:	ldr	r0, [pc, #740]	; 1998c <__assert_fail@plt+0x88a4>
   196a4:	ldr	r1, [fp, #8]
   196a8:	sub	r1, r1, #1
   196ac:	cmp	r0, r1
   196b0:	blt	196ec <__assert_fail@plt+0x8604>
   196b4:	b	19700 <__assert_fail@plt+0x8618>
   196b8:	ldr	r0, [pc, #3024]	; 1a290 <__assert_fail@plt+0x91a8>
   196bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   196c0:	sdiv	r0, r0, r1
   196c4:	ldr	r1, [fp, #8]
   196c8:	cmp	r0, r1
   196cc:	blt	196ec <__assert_fail@plt+0x8604>
   196d0:	b	19700 <__assert_fail@plt+0x8618>
   196d4:	ldr	r0, [pc, #688]	; 1998c <__assert_fail@plt+0x88a4>
   196d8:	ldr	r1, [fp, #8]
   196dc:	sdiv	r0, r0, r1
   196e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   196e4:	cmp	r0, r1
   196e8:	bge	19700 <__assert_fail@plt+0x8618>
   196ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   196f0:	ldr	r1, [fp, #8]
   196f4:	mul	r0, r0, r1
   196f8:	str	r0, [fp, #-28]	; 0xffffffe4
   196fc:	b	19d90 <__assert_fail@plt+0x8ca8>
   19700:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19704:	ldr	r1, [fp, #8]
   19708:	mul	r0, r0, r1
   1970c:	str	r0, [fp, #-28]	; 0xffffffe4
   19710:	b	19d9c <__assert_fail@plt+0x8cb4>
   19714:	ldr	r0, [fp, #8]
   19718:	cmp	r0, #0
   1971c:	bge	1982c <__assert_fail@plt+0x8744>
   19720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19724:	cmp	r0, #0
   19728:	bge	197b4 <__assert_fail@plt+0x86cc>
   1972c:	b	1974c <__assert_fail@plt+0x8664>
   19730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19734:	ldr	r1, [fp, #8]
   19738:	mvn	r2, #0
   1973c:	udiv	r1, r2, r1
   19740:	cmp	r0, r1
   19744:	bcc	198c8 <__assert_fail@plt+0x87e0>
   19748:	b	198dc <__assert_fail@plt+0x87f4>
   1974c:	b	19750 <__assert_fail@plt+0x8668>
   19750:	ldr	r0, [pc, #728]	; 19a30 <__assert_fail@plt+0x8948>
   19754:	ldr	r1, [fp, #8]
   19758:	cmp	r1, r0
   1975c:	blt	19774 <__assert_fail@plt+0x868c>
   19760:	b	19780 <__assert_fail@plt+0x8698>
   19764:	ldr	r0, [fp, #8]
   19768:	movw	r1, #0
   1976c:	cmp	r1, r0
   19770:	bge	19780 <__assert_fail@plt+0x8698>
   19774:	movw	r0, #1
   19778:	str	r0, [fp, #-64]	; 0xffffffc0
   1977c:	b	19798 <__assert_fail@plt+0x86b0>
   19780:	ldr	r0, [fp, #8]
   19784:	movw	r1, #0
   19788:	sub	r0, r1, r0
   1978c:	mvn	r1, #0
   19790:	udiv	r0, r1, r0
   19794:	str	r0, [fp, #-64]	; 0xffffffc0
   19798:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1979c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   197a0:	mvn	r2, #0
   197a4:	sub	r1, r2, r1
   197a8:	cmp	r0, r1
   197ac:	bls	198c8 <__assert_fail@plt+0x87e0>
   197b0:	b	198dc <__assert_fail@plt+0x87f4>
   197b4:	b	197b8 <__assert_fail@plt+0x86d0>
   197b8:	b	19810 <__assert_fail@plt+0x8728>
   197bc:	b	19810 <__assert_fail@plt+0x8728>
   197c0:	ldr	r0, [fp, #8]
   197c4:	cmn	r0, #1
   197c8:	bne	19810 <__assert_fail@plt+0x8728>
   197cc:	b	197d0 <__assert_fail@plt+0x86e8>
   197d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197d4:	add	r0, r0, #0
   197d8:	movw	r1, #0
   197dc:	cmp	r1, r0
   197e0:	blt	198c8 <__assert_fail@plt+0x87e0>
   197e4:	b	198dc <__assert_fail@plt+0x87f4>
   197e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197ec:	movw	r1, #0
   197f0:	cmp	r1, r0
   197f4:	bge	198dc <__assert_fail@plt+0x87f4>
   197f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197fc:	sub	r0, r0, #1
   19800:	mvn	r1, #0
   19804:	cmp	r1, r0
   19808:	blt	198c8 <__assert_fail@plt+0x87e0>
   1980c:	b	198dc <__assert_fail@plt+0x87f4>
   19810:	ldr	r0, [fp, #8]
   19814:	movw	r1, #0
   19818:	sdiv	r0, r1, r0
   1981c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19820:	cmp	r0, r1
   19824:	blt	198c8 <__assert_fail@plt+0x87e0>
   19828:	b	198dc <__assert_fail@plt+0x87f4>
   1982c:	ldr	r0, [fp, #8]
   19830:	cmp	r0, #0
   19834:	bne	1983c <__assert_fail@plt+0x8754>
   19838:	b	198dc <__assert_fail@plt+0x87f4>
   1983c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19840:	cmp	r0, #0
   19844:	bge	198b0 <__assert_fail@plt+0x87c8>
   19848:	b	1984c <__assert_fail@plt+0x8764>
   1984c:	b	19894 <__assert_fail@plt+0x87ac>
   19850:	b	19894 <__assert_fail@plt+0x87ac>
   19854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19858:	cmn	r0, #1
   1985c:	bne	19894 <__assert_fail@plt+0x87ac>
   19860:	b	19864 <__assert_fail@plt+0x877c>
   19864:	ldr	r0, [fp, #8]
   19868:	add	r0, r0, #0
   1986c:	movw	r1, #0
   19870:	cmp	r1, r0
   19874:	blt	198c8 <__assert_fail@plt+0x87e0>
   19878:	b	198dc <__assert_fail@plt+0x87f4>
   1987c:	ldr	r0, [fp, #8]
   19880:	sub	r0, r0, #1
   19884:	mvn	r1, #0
   19888:	cmp	r1, r0
   1988c:	blt	198c8 <__assert_fail@plt+0x87e0>
   19890:	b	198dc <__assert_fail@plt+0x87f4>
   19894:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19898:	movw	r1, #0
   1989c:	sdiv	r0, r1, r0
   198a0:	ldr	r1, [fp, #8]
   198a4:	cmp	r0, r1
   198a8:	blt	198c8 <__assert_fail@plt+0x87e0>
   198ac:	b	198dc <__assert_fail@plt+0x87f4>
   198b0:	ldr	r0, [fp, #8]
   198b4:	mvn	r1, #0
   198b8:	udiv	r0, r1, r0
   198bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   198c0:	cmp	r0, r1
   198c4:	bcs	198dc <__assert_fail@plt+0x87f4>
   198c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198cc:	ldr	r1, [fp, #8]
   198d0:	mul	r0, r0, r1
   198d4:	str	r0, [fp, #-28]	; 0xffffffe4
   198d8:	b	19d90 <__assert_fail@plt+0x8ca8>
   198dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198e0:	ldr	r1, [fp, #8]
   198e4:	mul	r0, r0, r1
   198e8:	str	r0, [fp, #-28]	; 0xffffffe4
   198ec:	b	19d9c <__assert_fail@plt+0x8cb4>
   198f0:	b	198f4 <__assert_fail@plt+0x880c>
   198f4:	ldr	r0, [fp, #8]
   198f8:	cmp	r0, #0
   198fc:	bge	19a6c <__assert_fail@plt+0x8984>
   19900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19904:	cmp	r0, #0
   19908:	bge	199e4 <__assert_fail@plt+0x88fc>
   1990c:	b	19910 <__assert_fail@plt+0x8828>
   19910:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19914:	ldr	r1, [fp, #8]
   19918:	asr	r3, r1, #31
   1991c:	mvn	r2, #0
   19920:	mvn	ip, #-2147483648	; 0x80000000
   19924:	str	r0, [fp, #-68]	; 0xffffffbc
   19928:	mov	r0, r2
   1992c:	str	r1, [fp, #-72]	; 0xffffffb8
   19930:	mov	r1, ip
   19934:	ldr	r2, [fp, #-72]	; 0xffffffb8
   19938:	bl	1e140 <__assert_fail@plt+0xd058>
   1993c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   19940:	subs	r0, r2, r0
   19944:	rscs	r1, r1, r2, asr #31
   19948:	blt	19b34 <__assert_fail@plt+0x8a4c>
   1994c:	b	19b48 <__assert_fail@plt+0x8a60>
   19950:	b	19954 <__assert_fail@plt+0x886c>
   19954:	ldr	r0, [pc, #212]	; 19a30 <__assert_fail@plt+0x8948>
   19958:	ldr	r1, [fp, #8]
   1995c:	cmp	r1, r0
   19960:	blt	19978 <__assert_fail@plt+0x8890>
   19964:	b	19990 <__assert_fail@plt+0x88a8>
   19968:	ldr	r0, [fp, #8]
   1996c:	movw	r1, #0
   19970:	cmp	r1, r0
   19974:	bge	19990 <__assert_fail@plt+0x88a8>
   19978:	mov	r0, #0
   1997c:	mvn	r1, #0
   19980:	str	r1, [fp, #-76]	; 0xffffffb4
   19984:	str	r0, [fp, #-80]	; 0xffffffb0
   19988:	b	199c4 <__assert_fail@plt+0x88dc>
   1998c:	svcvc	0x00ffffff
   19990:	ldr	r0, [fp, #8]
   19994:	rsb	r0, r0, #0
   19998:	asr	r3, r0, #31
   1999c:	mvn	r1, #0
   199a0:	mvn	r2, #-2147483648	; 0x80000000
   199a4:	str	r0, [fp, #-84]	; 0xffffffac
   199a8:	mov	r0, r1
   199ac:	mov	r1, r2
   199b0:	ldr	r2, [fp, #-84]	; 0xffffffac
   199b4:	bl	1e140 <__assert_fail@plt+0xd058>
   199b8:	str	r0, [fp, #-76]	; 0xffffffb4
   199bc:	str	r1, [fp, #-80]	; 0xffffffb0
   199c0:	b	199c4 <__assert_fail@plt+0x88dc>
   199c4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   199c8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   199cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   199d0:	mvn	r2, r2
   199d4:	subs	r1, r2, r1
   199d8:	rscs	r0, r0, r2, asr #31
   199dc:	bge	19b34 <__assert_fail@plt+0x8a4c>
   199e0:	b	19b48 <__assert_fail@plt+0x8a60>
   199e4:	ldr	r0, [fp, #8]
   199e8:	cmn	r0, #1
   199ec:	bne	19a34 <__assert_fail@plt+0x894c>
   199f0:	b	199f4 <__assert_fail@plt+0x890c>
   199f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199f8:	mov	r1, #-2147483648	; 0x80000000
   199fc:	add	r1, r1, r0, asr #31
   19a00:	rsbs	r0, r0, #0
   19a04:	rscs	r1, r1, #0
   19a08:	blt	19b34 <__assert_fail@plt+0x8a4c>
   19a0c:	b	19b48 <__assert_fail@plt+0x8a60>
   19a10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a14:	movw	r1, #0
   19a18:	cmp	r1, r0
   19a1c:	bge	19b48 <__assert_fail@plt+0x8a60>
   19a20:	mov	r0, #0
   19a24:	cmp	r0, #0
   19a28:	bne	19b34 <__assert_fail@plt+0x8a4c>
   19a2c:	b	19b48 <__assert_fail@plt+0x8a60>
   19a30:	andhi	r0, r0, r1
   19a34:	ldr	r0, [fp, #8]
   19a38:	asr	r3, r0, #31
   19a3c:	mov	r1, #0
   19a40:	mov	r2, #-2147483648	; 0x80000000
   19a44:	str	r0, [fp, #-88]	; 0xffffffa8
   19a48:	mov	r0, r1
   19a4c:	mov	r1, r2
   19a50:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19a54:	bl	1e140 <__assert_fail@plt+0xd058>
   19a58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19a5c:	subs	r0, r0, r2
   19a60:	sbcs	r1, r1, r2, asr #31
   19a64:	blt	19b34 <__assert_fail@plt+0x8a4c>
   19a68:	b	19b48 <__assert_fail@plt+0x8a60>
   19a6c:	ldr	r0, [fp, #8]
   19a70:	cmp	r0, #0
   19a74:	bne	19a7c <__assert_fail@plt+0x8994>
   19a78:	b	19b48 <__assert_fail@plt+0x8a60>
   19a7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a80:	cmp	r0, #0
   19a84:	bge	19afc <__assert_fail@plt+0x8a14>
   19a88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a8c:	cmn	r0, #1
   19a90:	bne	19ac4 <__assert_fail@plt+0x89dc>
   19a94:	b	19a98 <__assert_fail@plt+0x89b0>
   19a98:	ldr	r0, [fp, #8]
   19a9c:	mov	r1, #-2147483648	; 0x80000000
   19aa0:	add	r1, r1, r0, asr #31
   19aa4:	rsbs	r0, r0, #0
   19aa8:	rscs	r1, r1, #0
   19aac:	blt	19b34 <__assert_fail@plt+0x8a4c>
   19ab0:	b	19b48 <__assert_fail@plt+0x8a60>
   19ab4:	mov	r0, #0
   19ab8:	cmp	r0, #0
   19abc:	bne	19b34 <__assert_fail@plt+0x8a4c>
   19ac0:	b	19b48 <__assert_fail@plt+0x8a60>
   19ac4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ac8:	asr	r3, r0, #31
   19acc:	mov	r1, #0
   19ad0:	mov	r2, #-2147483648	; 0x80000000
   19ad4:	str	r0, [fp, #-92]	; 0xffffffa4
   19ad8:	mov	r0, r1
   19adc:	mov	r1, r2
   19ae0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   19ae4:	bl	1e140 <__assert_fail@plt+0xd058>
   19ae8:	ldr	r2, [fp, #8]
   19aec:	subs	r0, r0, r2
   19af0:	sbcs	r1, r1, r2, asr #31
   19af4:	blt	19b34 <__assert_fail@plt+0x8a4c>
   19af8:	b	19b48 <__assert_fail@plt+0x8a60>
   19afc:	ldr	r0, [fp, #8]
   19b00:	asr	r3, r0, #31
   19b04:	mvn	r1, #0
   19b08:	mvn	r2, #-2147483648	; 0x80000000
   19b0c:	str	r0, [fp, #-96]	; 0xffffffa0
   19b10:	mov	r0, r1
   19b14:	mov	r1, r2
   19b18:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19b1c:	bl	1e140 <__assert_fail@plt+0xd058>
   19b20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19b24:	subs	r0, r0, r2
   19b28:	sbcs	r1, r1, r2, asr #31
   19b2c:	bge	19b48 <__assert_fail@plt+0x8a60>
   19b30:	b	19b34 <__assert_fail@plt+0x8a4c>
   19b34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b38:	ldr	r1, [fp, #8]
   19b3c:	mul	r0, r0, r1
   19b40:	str	r0, [fp, #-28]	; 0xffffffe4
   19b44:	b	19d90 <__assert_fail@plt+0x8ca8>
   19b48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b4c:	ldr	r1, [fp, #8]
   19b50:	mul	r0, r0, r1
   19b54:	str	r0, [fp, #-28]	; 0xffffffe4
   19b58:	b	19d9c <__assert_fail@plt+0x8cb4>
   19b5c:	ldr	r0, [fp, #8]
   19b60:	cmp	r0, #0
   19b64:	bge	19cb4 <__assert_fail@plt+0x8bcc>
   19b68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b6c:	cmp	r0, #0
   19b70:	bge	19c3c <__assert_fail@plt+0x8b54>
   19b74:	b	19bb4 <__assert_fail@plt+0x8acc>
   19b78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b7c:	ldr	r1, [fp, #8]
   19b80:	asr	r3, r1, #31
   19b84:	mvn	r2, #0
   19b88:	str	r0, [fp, #-100]	; 0xffffff9c
   19b8c:	mov	r0, r2
   19b90:	str	r1, [fp, #-104]	; 0xffffff98
   19b94:	mov	r1, r2
   19b98:	ldr	r2, [fp, #-104]	; 0xffffff98
   19b9c:	bl	1e214 <__assert_fail@plt+0xd12c>
   19ba0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19ba4:	subs	r0, r2, r0
   19ba8:	rscs	r1, r1, r2, asr #31
   19bac:	bcc	19d68 <__assert_fail@plt+0x8c80>
   19bb0:	b	19d7c <__assert_fail@plt+0x8c94>
   19bb4:	b	19bb8 <__assert_fail@plt+0x8ad0>
   19bb8:	ldr	r0, [pc, #-400]	; 19a30 <__assert_fail@plt+0x8948>
   19bbc:	ldr	r1, [fp, #8]
   19bc0:	cmp	r1, r0
   19bc4:	blt	19bdc <__assert_fail@plt+0x8af4>
   19bc8:	b	19bf0 <__assert_fail@plt+0x8b08>
   19bcc:	ldr	r0, [fp, #8]
   19bd0:	movw	r1, #0
   19bd4:	cmp	r1, r0
   19bd8:	bge	19bf0 <__assert_fail@plt+0x8b08>
   19bdc:	mov	r0, #1
   19be0:	mvn	r1, #0
   19be4:	str	r1, [sp, #108]	; 0x6c
   19be8:	str	r0, [sp, #104]	; 0x68
   19bec:	b	19c1c <__assert_fail@plt+0x8b34>
   19bf0:	ldr	r0, [fp, #8]
   19bf4:	rsb	r0, r0, #0
   19bf8:	asr	r3, r0, #31
   19bfc:	mvn	r1, #0
   19c00:	str	r0, [sp, #100]	; 0x64
   19c04:	mov	r0, r1
   19c08:	ldr	r2, [sp, #100]	; 0x64
   19c0c:	bl	1e214 <__assert_fail@plt+0xd12c>
   19c10:	str	r0, [sp, #108]	; 0x6c
   19c14:	str	r1, [sp, #104]	; 0x68
   19c18:	b	19c1c <__assert_fail@plt+0x8b34>
   19c1c:	ldr	r0, [sp, #104]	; 0x68
   19c20:	ldr	r1, [sp, #108]	; 0x6c
   19c24:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19c28:	mvn	r2, r2
   19c2c:	subs	r1, r2, r1
   19c30:	rscs	r0, r0, r2, asr #31
   19c34:	bcs	19d68 <__assert_fail@plt+0x8c80>
   19c38:	b	19d7c <__assert_fail@plt+0x8c94>
   19c3c:	b	19c40 <__assert_fail@plt+0x8b58>
   19c40:	b	19c98 <__assert_fail@plt+0x8bb0>
   19c44:	b	19c98 <__assert_fail@plt+0x8bb0>
   19c48:	ldr	r0, [fp, #8]
   19c4c:	cmn	r0, #1
   19c50:	bne	19c98 <__assert_fail@plt+0x8bb0>
   19c54:	b	19c58 <__assert_fail@plt+0x8b70>
   19c58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c5c:	add	r0, r0, #0
   19c60:	movw	r1, #0
   19c64:	cmp	r1, r0
   19c68:	blt	19d68 <__assert_fail@plt+0x8c80>
   19c6c:	b	19d7c <__assert_fail@plt+0x8c94>
   19c70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c74:	movw	r1, #0
   19c78:	cmp	r1, r0
   19c7c:	bge	19d7c <__assert_fail@plt+0x8c94>
   19c80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c84:	sub	r0, r0, #1
   19c88:	mvn	r1, #0
   19c8c:	cmp	r1, r0
   19c90:	blt	19d68 <__assert_fail@plt+0x8c80>
   19c94:	b	19d7c <__assert_fail@plt+0x8c94>
   19c98:	ldr	r0, [fp, #8]
   19c9c:	movw	r1, #0
   19ca0:	sdiv	r0, r1, r0
   19ca4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19ca8:	cmp	r0, r1
   19cac:	blt	19d68 <__assert_fail@plt+0x8c80>
   19cb0:	b	19d7c <__assert_fail@plt+0x8c94>
   19cb4:	ldr	r0, [fp, #8]
   19cb8:	cmp	r0, #0
   19cbc:	bne	19cc4 <__assert_fail@plt+0x8bdc>
   19cc0:	b	19d7c <__assert_fail@plt+0x8c94>
   19cc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19cc8:	cmp	r0, #0
   19ccc:	bge	19d38 <__assert_fail@plt+0x8c50>
   19cd0:	b	19cd4 <__assert_fail@plt+0x8bec>
   19cd4:	b	19d1c <__assert_fail@plt+0x8c34>
   19cd8:	b	19d1c <__assert_fail@plt+0x8c34>
   19cdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ce0:	cmn	r0, #1
   19ce4:	bne	19d1c <__assert_fail@plt+0x8c34>
   19ce8:	b	19cec <__assert_fail@plt+0x8c04>
   19cec:	ldr	r0, [fp, #8]
   19cf0:	add	r0, r0, #0
   19cf4:	movw	r1, #0
   19cf8:	cmp	r1, r0
   19cfc:	blt	19d68 <__assert_fail@plt+0x8c80>
   19d00:	b	19d7c <__assert_fail@plt+0x8c94>
   19d04:	ldr	r0, [fp, #8]
   19d08:	sub	r0, r0, #1
   19d0c:	mvn	r1, #0
   19d10:	cmp	r1, r0
   19d14:	blt	19d68 <__assert_fail@plt+0x8c80>
   19d18:	b	19d7c <__assert_fail@plt+0x8c94>
   19d1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d20:	movw	r1, #0
   19d24:	sdiv	r0, r1, r0
   19d28:	ldr	r1, [fp, #8]
   19d2c:	cmp	r0, r1
   19d30:	blt	19d68 <__assert_fail@plt+0x8c80>
   19d34:	b	19d7c <__assert_fail@plt+0x8c94>
   19d38:	ldr	r0, [fp, #8]
   19d3c:	asr	r3, r0, #31
   19d40:	mvn	r1, #0
   19d44:	str	r0, [sp, #96]	; 0x60
   19d48:	mov	r0, r1
   19d4c:	ldr	r2, [sp, #96]	; 0x60
   19d50:	bl	1e214 <__assert_fail@plt+0xd12c>
   19d54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19d58:	subs	r0, r0, r2
   19d5c:	sbcs	r1, r1, r2, asr #31
   19d60:	bcs	19d7c <__assert_fail@plt+0x8c94>
   19d64:	b	19d68 <__assert_fail@plt+0x8c80>
   19d68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d6c:	ldr	r1, [fp, #8]
   19d70:	mul	r0, r0, r1
   19d74:	str	r0, [fp, #-28]	; 0xffffffe4
   19d78:	b	19d90 <__assert_fail@plt+0x8ca8>
   19d7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d80:	ldr	r1, [fp, #8]
   19d84:	mul	r0, r0, r1
   19d88:	str	r0, [fp, #-28]	; 0xffffffe4
   19d8c:	b	19d9c <__assert_fail@plt+0x8cb4>
   19d90:	ldr	r0, [pc, #-1036]	; 1998c <__assert_fail@plt+0x88a4>
   19d94:	str	r0, [sp, #92]	; 0x5c
   19d98:	b	19dbc <__assert_fail@plt+0x8cd4>
   19d9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19da0:	cmp	r0, #64	; 0x40
   19da4:	movw	r0, #0
   19da8:	movlt	r0, #1
   19dac:	tst	r0, #1
   19db0:	movw	r0, #64	; 0x40
   19db4:	moveq	r0, #0
   19db8:	str	r0, [sp, #92]	; 0x5c
   19dbc:	ldr	r0, [sp, #92]	; 0x5c
   19dc0:	str	r0, [fp, #-32]	; 0xffffffe0
   19dc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19dc8:	cmp	r0, #0
   19dcc:	beq	19dfc <__assert_fail@plt+0x8d14>
   19dd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19dd4:	ldr	r1, [fp, #8]
   19dd8:	sdiv	r0, r0, r1
   19ddc:	str	r0, [fp, #-24]	; 0xffffffe8
   19de0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19de4:	mov	r1, r0
   19de8:	ldr	r2, [fp, #8]
   19dec:	sdiv	r3, r0, r2
   19df0:	mls	r0, r3, r2, r0
   19df4:	sub	r0, r1, r0
   19df8:	str	r0, [fp, #-28]	; 0xffffffe4
   19dfc:	ldr	r0, [fp, #-4]
   19e00:	movw	r1, #0
   19e04:	cmp	r0, r1
   19e08:	bne	19e18 <__assert_fail@plt+0x8d30>
   19e0c:	ldr	r0, [fp, #-8]
   19e10:	movw	r1, #0
   19e14:	str	r1, [r0]
   19e18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19e20:	sub	r0, r0, r1
   19e24:	ldr	r1, [fp, #-12]
   19e28:	cmp	r0, r1
   19e2c:	bge	1b218 <__assert_fail@plt+0xa130>
   19e30:	ldr	r0, [fp, #-20]	; 0xffffffec
   19e34:	ldr	r1, [fp, #-12]
   19e38:	add	r1, r0, r1
   19e3c:	mov	r2, #1
   19e40:	cmp	r1, r0
   19e44:	movwvc	r2, #0
   19e48:	str	r1, [fp, #-24]	; 0xffffffe8
   19e4c:	tst	r2, #1
   19e50:	bne	1b214 <__assert_fail@plt+0xa12c>
   19e54:	ldr	r0, [fp, #-16]
   19e58:	movw	r1, #0
   19e5c:	cmp	r1, r0
   19e60:	bgt	19e74 <__assert_fail@plt+0x8d8c>
   19e64:	ldr	r0, [fp, #-16]
   19e68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19e6c:	cmp	r0, r1
   19e70:	blt	1b214 <__assert_fail@plt+0xa12c>
   19e74:	b	1a250 <__assert_fail@plt+0x9168>
   19e78:			; <UNDEFINED> instruction: 0xffff8000
   19e7c:	b	19e80 <__assert_fail@plt+0x8d98>
   19e80:	ldr	r0, [fp, #8]
   19e84:	cmp	r0, #0
   19e88:	bge	19f9c <__assert_fail@plt+0x8eb4>
   19e8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e90:	cmp	r0, #0
   19e94:	bge	19f20 <__assert_fail@plt+0x8e38>
   19e98:	b	19e9c <__assert_fail@plt+0x8db4>
   19e9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ea0:	ldr	r1, [fp, #8]
   19ea4:	movw	r2, #127	; 0x7f
   19ea8:	sdiv	r1, r2, r1
   19eac:	cmp	r0, r1
   19eb0:	blt	1a03c <__assert_fail@plt+0x8f54>
   19eb4:	b	1a054 <__assert_fail@plt+0x8f6c>
   19eb8:	b	19ebc <__assert_fail@plt+0x8dd4>
   19ebc:	ldr	r0, [pc, #-1172]	; 19a30 <__assert_fail@plt+0x8948>
   19ec0:	ldr	r1, [fp, #8]
   19ec4:	cmp	r1, r0
   19ec8:	blt	19ee0 <__assert_fail@plt+0x8df8>
   19ecc:	b	19eec <__assert_fail@plt+0x8e04>
   19ed0:	ldr	r0, [fp, #8]
   19ed4:	movw	r1, #0
   19ed8:	cmp	r1, r0
   19edc:	bge	19eec <__assert_fail@plt+0x8e04>
   19ee0:	movw	r0, #0
   19ee4:	str	r0, [sp, #88]	; 0x58
   19ee8:	b	19f04 <__assert_fail@plt+0x8e1c>
   19eec:	ldr	r0, [fp, #8]
   19ef0:	movw	r1, #0
   19ef4:	sub	r0, r1, r0
   19ef8:	movw	r1, #127	; 0x7f
   19efc:	sdiv	r0, r1, r0
   19f00:	str	r0, [sp, #88]	; 0x58
   19f04:	ldr	r0, [sp, #88]	; 0x58
   19f08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19f0c:	mvn	r2, #0
   19f10:	sub	r1, r2, r1
   19f14:	cmp	r0, r1
   19f18:	ble	1a03c <__assert_fail@plt+0x8f54>
   19f1c:	b	1a054 <__assert_fail@plt+0x8f6c>
   19f20:	b	19f24 <__assert_fail@plt+0x8e3c>
   19f24:	b	19f80 <__assert_fail@plt+0x8e98>
   19f28:	b	19f80 <__assert_fail@plt+0x8e98>
   19f2c:	ldr	r0, [fp, #8]
   19f30:	cmn	r0, #1
   19f34:	bne	19f80 <__assert_fail@plt+0x8e98>
   19f38:	b	19f3c <__assert_fail@plt+0x8e54>
   19f3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f40:	mvn	r1, #127	; 0x7f
   19f44:	add	r0, r0, r1
   19f48:	movw	r1, #0
   19f4c:	cmp	r1, r0
   19f50:	blt	1a03c <__assert_fail@plt+0x8f54>
   19f54:	b	1a054 <__assert_fail@plt+0x8f6c>
   19f58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f5c:	movw	r1, #0
   19f60:	cmp	r1, r0
   19f64:	bge	1a054 <__assert_fail@plt+0x8f6c>
   19f68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f6c:	sub	r0, r0, #1
   19f70:	movw	r1, #127	; 0x7f
   19f74:	cmp	r1, r0
   19f78:	blt	1a03c <__assert_fail@plt+0x8f54>
   19f7c:	b	1a054 <__assert_fail@plt+0x8f6c>
   19f80:	ldr	r0, [fp, #8]
   19f84:	mvn	r1, #127	; 0x7f
   19f88:	sdiv	r0, r1, r0
   19f8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19f90:	cmp	r0, r1
   19f94:	blt	1a03c <__assert_fail@plt+0x8f54>
   19f98:	b	1a054 <__assert_fail@plt+0x8f6c>
   19f9c:	ldr	r0, [fp, #8]
   19fa0:	cmp	r0, #0
   19fa4:	bne	19fac <__assert_fail@plt+0x8ec4>
   19fa8:	b	1a054 <__assert_fail@plt+0x8f6c>
   19fac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fb0:	cmp	r0, #0
   19fb4:	bge	1a024 <__assert_fail@plt+0x8f3c>
   19fb8:	b	19fbc <__assert_fail@plt+0x8ed4>
   19fbc:	b	1a008 <__assert_fail@plt+0x8f20>
   19fc0:	b	1a008 <__assert_fail@plt+0x8f20>
   19fc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fc8:	cmn	r0, #1
   19fcc:	bne	1a008 <__assert_fail@plt+0x8f20>
   19fd0:	b	19fd4 <__assert_fail@plt+0x8eec>
   19fd4:	ldr	r0, [fp, #8]
   19fd8:	mvn	r1, #127	; 0x7f
   19fdc:	add	r0, r0, r1
   19fe0:	movw	r1, #0
   19fe4:	cmp	r1, r0
   19fe8:	blt	1a03c <__assert_fail@plt+0x8f54>
   19fec:	b	1a054 <__assert_fail@plt+0x8f6c>
   19ff0:	ldr	r0, [fp, #8]
   19ff4:	sub	r0, r0, #1
   19ff8:	movw	r1, #127	; 0x7f
   19ffc:	cmp	r1, r0
   1a000:	blt	1a03c <__assert_fail@plt+0x8f54>
   1a004:	b	1a054 <__assert_fail@plt+0x8f6c>
   1a008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a00c:	mvn	r1, #127	; 0x7f
   1a010:	sdiv	r0, r1, r0
   1a014:	ldr	r1, [fp, #8]
   1a018:	cmp	r0, r1
   1a01c:	blt	1a03c <__assert_fail@plt+0x8f54>
   1a020:	b	1a054 <__assert_fail@plt+0x8f6c>
   1a024:	ldr	r0, [fp, #8]
   1a028:	movw	r1, #127	; 0x7f
   1a02c:	sdiv	r0, r1, r0
   1a030:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a034:	cmp	r0, r1
   1a038:	bge	1a054 <__assert_fail@plt+0x8f6c>
   1a03c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a040:	ldr	r1, [fp, #8]
   1a044:	mul	r0, r0, r1
   1a048:	sxtb	r0, r0
   1a04c:	str	r0, [fp, #-28]	; 0xffffffe4
   1a050:	b	1b214 <__assert_fail@plt+0xa12c>
   1a054:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a058:	ldr	r1, [fp, #8]
   1a05c:	mul	r0, r0, r1
   1a060:	sxtb	r0, r0
   1a064:	str	r0, [fp, #-28]	; 0xffffffe4
   1a068:	b	1b218 <__assert_fail@plt+0xa130>
   1a06c:	ldr	r0, [fp, #8]
   1a070:	cmp	r0, #0
   1a074:	bge	1a184 <__assert_fail@plt+0x909c>
   1a078:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a07c:	cmp	r0, #0
   1a080:	bge	1a10c <__assert_fail@plt+0x9024>
   1a084:	b	1a088 <__assert_fail@plt+0x8fa0>
   1a088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a08c:	ldr	r1, [fp, #8]
   1a090:	movw	r2, #255	; 0xff
   1a094:	sdiv	r1, r2, r1
   1a098:	cmp	r0, r1
   1a09c:	blt	1a220 <__assert_fail@plt+0x9138>
   1a0a0:	b	1a238 <__assert_fail@plt+0x9150>
   1a0a4:	b	1a0a8 <__assert_fail@plt+0x8fc0>
   1a0a8:	ldr	r0, [pc, #-1664]	; 19a30 <__assert_fail@plt+0x8948>
   1a0ac:	ldr	r1, [fp, #8]
   1a0b0:	cmp	r1, r0
   1a0b4:	blt	1a0cc <__assert_fail@plt+0x8fe4>
   1a0b8:	b	1a0d8 <__assert_fail@plt+0x8ff0>
   1a0bc:	ldr	r0, [fp, #8]
   1a0c0:	movw	r1, #0
   1a0c4:	cmp	r1, r0
   1a0c8:	bge	1a0d8 <__assert_fail@plt+0x8ff0>
   1a0cc:	movw	r0, #0
   1a0d0:	str	r0, [sp, #84]	; 0x54
   1a0d4:	b	1a0f0 <__assert_fail@plt+0x9008>
   1a0d8:	ldr	r0, [fp, #8]
   1a0dc:	movw	r1, #0
   1a0e0:	sub	r0, r1, r0
   1a0e4:	movw	r1, #255	; 0xff
   1a0e8:	sdiv	r0, r1, r0
   1a0ec:	str	r0, [sp, #84]	; 0x54
   1a0f0:	ldr	r0, [sp, #84]	; 0x54
   1a0f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a0f8:	mvn	r2, #0
   1a0fc:	sub	r1, r2, r1
   1a100:	cmp	r0, r1
   1a104:	ble	1a220 <__assert_fail@plt+0x9138>
   1a108:	b	1a238 <__assert_fail@plt+0x9150>
   1a10c:	b	1a110 <__assert_fail@plt+0x9028>
   1a110:	b	1a168 <__assert_fail@plt+0x9080>
   1a114:	b	1a168 <__assert_fail@plt+0x9080>
   1a118:	ldr	r0, [fp, #8]
   1a11c:	cmn	r0, #1
   1a120:	bne	1a168 <__assert_fail@plt+0x9080>
   1a124:	b	1a128 <__assert_fail@plt+0x9040>
   1a128:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a12c:	add	r0, r0, #0
   1a130:	movw	r1, #0
   1a134:	cmp	r1, r0
   1a138:	blt	1a220 <__assert_fail@plt+0x9138>
   1a13c:	b	1a238 <__assert_fail@plt+0x9150>
   1a140:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a144:	movw	r1, #0
   1a148:	cmp	r1, r0
   1a14c:	bge	1a238 <__assert_fail@plt+0x9150>
   1a150:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a154:	sub	r0, r0, #1
   1a158:	mvn	r1, #0
   1a15c:	cmp	r1, r0
   1a160:	blt	1a220 <__assert_fail@plt+0x9138>
   1a164:	b	1a238 <__assert_fail@plt+0x9150>
   1a168:	ldr	r0, [fp, #8]
   1a16c:	movw	r1, #0
   1a170:	sdiv	r0, r1, r0
   1a174:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a178:	cmp	r0, r1
   1a17c:	blt	1a220 <__assert_fail@plt+0x9138>
   1a180:	b	1a238 <__assert_fail@plt+0x9150>
   1a184:	ldr	r0, [fp, #8]
   1a188:	cmp	r0, #0
   1a18c:	bne	1a194 <__assert_fail@plt+0x90ac>
   1a190:	b	1a238 <__assert_fail@plt+0x9150>
   1a194:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a198:	cmp	r0, #0
   1a19c:	bge	1a208 <__assert_fail@plt+0x9120>
   1a1a0:	b	1a1a4 <__assert_fail@plt+0x90bc>
   1a1a4:	b	1a1ec <__assert_fail@plt+0x9104>
   1a1a8:	b	1a1ec <__assert_fail@plt+0x9104>
   1a1ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1b0:	cmn	r0, #1
   1a1b4:	bne	1a1ec <__assert_fail@plt+0x9104>
   1a1b8:	b	1a1bc <__assert_fail@plt+0x90d4>
   1a1bc:	ldr	r0, [fp, #8]
   1a1c0:	add	r0, r0, #0
   1a1c4:	movw	r1, #0
   1a1c8:	cmp	r1, r0
   1a1cc:	blt	1a220 <__assert_fail@plt+0x9138>
   1a1d0:	b	1a238 <__assert_fail@plt+0x9150>
   1a1d4:	ldr	r0, [fp, #8]
   1a1d8:	sub	r0, r0, #1
   1a1dc:	mvn	r1, #0
   1a1e0:	cmp	r1, r0
   1a1e4:	blt	1a220 <__assert_fail@plt+0x9138>
   1a1e8:	b	1a238 <__assert_fail@plt+0x9150>
   1a1ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1f0:	movw	r1, #0
   1a1f4:	sdiv	r0, r1, r0
   1a1f8:	ldr	r1, [fp, #8]
   1a1fc:	cmp	r0, r1
   1a200:	blt	1a220 <__assert_fail@plt+0x9138>
   1a204:	b	1a238 <__assert_fail@plt+0x9150>
   1a208:	ldr	r0, [fp, #8]
   1a20c:	movw	r1, #255	; 0xff
   1a210:	sdiv	r0, r1, r0
   1a214:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a218:	cmp	r0, r1
   1a21c:	bge	1a238 <__assert_fail@plt+0x9150>
   1a220:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a224:	ldr	r1, [fp, #8]
   1a228:	mul	r0, r0, r1
   1a22c:	and	r0, r0, #255	; 0xff
   1a230:	str	r0, [fp, #-28]	; 0xffffffe4
   1a234:	b	1b214 <__assert_fail@plt+0xa12c>
   1a238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a23c:	ldr	r1, [fp, #8]
   1a240:	mul	r0, r0, r1
   1a244:	and	r0, r0, #255	; 0xff
   1a248:	str	r0, [fp, #-28]	; 0xffffffe4
   1a24c:	b	1b218 <__assert_fail@plt+0xa130>
   1a250:	b	1a62c <__assert_fail@plt+0x9544>
   1a254:	b	1a258 <__assert_fail@plt+0x9170>
   1a258:	ldr	r0, [fp, #8]
   1a25c:	cmp	r0, #0
   1a260:	bge	1a378 <__assert_fail@plt+0x9290>
   1a264:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a268:	cmp	r0, #0
   1a26c:	bge	1a2fc <__assert_fail@plt+0x9214>
   1a270:	b	1a274 <__assert_fail@plt+0x918c>
   1a274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a278:	ldr	r1, [fp, #8]
   1a27c:	movw	r2, #32767	; 0x7fff
   1a280:	sdiv	r1, r2, r1
   1a284:	cmp	r0, r1
   1a288:	blt	1a418 <__assert_fail@plt+0x9330>
   1a28c:	b	1a430 <__assert_fail@plt+0x9348>
   1a290:	andhi	r0, r0, r0
   1a294:	b	1a298 <__assert_fail@plt+0x91b0>
   1a298:	ldr	r0, [pc, #4004]	; 1b244 <__assert_fail@plt+0xa15c>
   1a29c:	ldr	r1, [fp, #8]
   1a2a0:	cmp	r1, r0
   1a2a4:	blt	1a2bc <__assert_fail@plt+0x91d4>
   1a2a8:	b	1a2c8 <__assert_fail@plt+0x91e0>
   1a2ac:	ldr	r0, [fp, #8]
   1a2b0:	movw	r1, #0
   1a2b4:	cmp	r1, r0
   1a2b8:	bge	1a2c8 <__assert_fail@plt+0x91e0>
   1a2bc:	movw	r0, #0
   1a2c0:	str	r0, [sp, #80]	; 0x50
   1a2c4:	b	1a2e0 <__assert_fail@plt+0x91f8>
   1a2c8:	ldr	r0, [fp, #8]
   1a2cc:	movw	r1, #0
   1a2d0:	sub	r0, r1, r0
   1a2d4:	movw	r1, #32767	; 0x7fff
   1a2d8:	sdiv	r0, r1, r0
   1a2dc:	str	r0, [sp, #80]	; 0x50
   1a2e0:	ldr	r0, [sp, #80]	; 0x50
   1a2e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a2e8:	mvn	r2, #0
   1a2ec:	sub	r1, r2, r1
   1a2f0:	cmp	r0, r1
   1a2f4:	ble	1a418 <__assert_fail@plt+0x9330>
   1a2f8:	b	1a430 <__assert_fail@plt+0x9348>
   1a2fc:	b	1a300 <__assert_fail@plt+0x9218>
   1a300:	b	1a35c <__assert_fail@plt+0x9274>
   1a304:	b	1a35c <__assert_fail@plt+0x9274>
   1a308:	ldr	r0, [fp, #8]
   1a30c:	cmn	r0, #1
   1a310:	bne	1a35c <__assert_fail@plt+0x9274>
   1a314:	b	1a318 <__assert_fail@plt+0x9230>
   1a318:	ldr	r0, [pc, #3884]	; 1b24c <__assert_fail@plt+0xa164>
   1a31c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a320:	add	r0, r1, r0
   1a324:	movw	r1, #0
   1a328:	cmp	r1, r0
   1a32c:	blt	1a418 <__assert_fail@plt+0x9330>
   1a330:	b	1a430 <__assert_fail@plt+0x9348>
   1a334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a338:	movw	r1, #0
   1a33c:	cmp	r1, r0
   1a340:	bge	1a430 <__assert_fail@plt+0x9348>
   1a344:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a348:	sub	r0, r0, #1
   1a34c:	movw	r1, #32767	; 0x7fff
   1a350:	cmp	r1, r0
   1a354:	blt	1a418 <__assert_fail@plt+0x9330>
   1a358:	b	1a430 <__assert_fail@plt+0x9348>
   1a35c:	ldr	r0, [pc, #3816]	; 1b24c <__assert_fail@plt+0xa164>
   1a360:	ldr	r1, [fp, #8]
   1a364:	sdiv	r0, r0, r1
   1a368:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a36c:	cmp	r0, r1
   1a370:	blt	1a418 <__assert_fail@plt+0x9330>
   1a374:	b	1a430 <__assert_fail@plt+0x9348>
   1a378:	ldr	r0, [fp, #8]
   1a37c:	cmp	r0, #0
   1a380:	bne	1a388 <__assert_fail@plt+0x92a0>
   1a384:	b	1a430 <__assert_fail@plt+0x9348>
   1a388:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a38c:	cmp	r0, #0
   1a390:	bge	1a400 <__assert_fail@plt+0x9318>
   1a394:	b	1a398 <__assert_fail@plt+0x92b0>
   1a398:	b	1a3e4 <__assert_fail@plt+0x92fc>
   1a39c:	b	1a3e4 <__assert_fail@plt+0x92fc>
   1a3a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3a4:	cmn	r0, #1
   1a3a8:	bne	1a3e4 <__assert_fail@plt+0x92fc>
   1a3ac:	b	1a3b0 <__assert_fail@plt+0x92c8>
   1a3b0:	ldr	r0, [pc, #3732]	; 1b24c <__assert_fail@plt+0xa164>
   1a3b4:	ldr	r1, [fp, #8]
   1a3b8:	add	r0, r1, r0
   1a3bc:	movw	r1, #0
   1a3c0:	cmp	r1, r0
   1a3c4:	blt	1a418 <__assert_fail@plt+0x9330>
   1a3c8:	b	1a430 <__assert_fail@plt+0x9348>
   1a3cc:	ldr	r0, [fp, #8]
   1a3d0:	sub	r0, r0, #1
   1a3d4:	movw	r1, #32767	; 0x7fff
   1a3d8:	cmp	r1, r0
   1a3dc:	blt	1a418 <__assert_fail@plt+0x9330>
   1a3e0:	b	1a430 <__assert_fail@plt+0x9348>
   1a3e4:	ldr	r0, [pc, #3680]	; 1b24c <__assert_fail@plt+0xa164>
   1a3e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a3ec:	sdiv	r0, r0, r1
   1a3f0:	ldr	r1, [fp, #8]
   1a3f4:	cmp	r0, r1
   1a3f8:	blt	1a418 <__assert_fail@plt+0x9330>
   1a3fc:	b	1a430 <__assert_fail@plt+0x9348>
   1a400:	ldr	r0, [fp, #8]
   1a404:	movw	r1, #32767	; 0x7fff
   1a408:	sdiv	r0, r1, r0
   1a40c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a410:	cmp	r0, r1
   1a414:	bge	1a430 <__assert_fail@plt+0x9348>
   1a418:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a41c:	ldr	r1, [fp, #8]
   1a420:	mul	r0, r0, r1
   1a424:	sxth	r0, r0
   1a428:	str	r0, [fp, #-28]	; 0xffffffe4
   1a42c:	b	1b214 <__assert_fail@plt+0xa12c>
   1a430:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a434:	ldr	r1, [fp, #8]
   1a438:	mul	r0, r0, r1
   1a43c:	sxth	r0, r0
   1a440:	str	r0, [fp, #-28]	; 0xffffffe4
   1a444:	b	1b218 <__assert_fail@plt+0xa130>
   1a448:	ldr	r0, [fp, #8]
   1a44c:	cmp	r0, #0
   1a450:	bge	1a560 <__assert_fail@plt+0x9478>
   1a454:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a458:	cmp	r0, #0
   1a45c:	bge	1a4e8 <__assert_fail@plt+0x9400>
   1a460:	b	1a464 <__assert_fail@plt+0x937c>
   1a464:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a468:	ldr	r1, [fp, #8]
   1a46c:	movw	r2, #65535	; 0xffff
   1a470:	sdiv	r1, r2, r1
   1a474:	cmp	r0, r1
   1a478:	blt	1a5fc <__assert_fail@plt+0x9514>
   1a47c:	b	1a614 <__assert_fail@plt+0x952c>
   1a480:	b	1a484 <__assert_fail@plt+0x939c>
   1a484:	ldr	r0, [pc, #3512]	; 1b244 <__assert_fail@plt+0xa15c>
   1a488:	ldr	r1, [fp, #8]
   1a48c:	cmp	r1, r0
   1a490:	blt	1a4a8 <__assert_fail@plt+0x93c0>
   1a494:	b	1a4b4 <__assert_fail@plt+0x93cc>
   1a498:	ldr	r0, [fp, #8]
   1a49c:	movw	r1, #0
   1a4a0:	cmp	r1, r0
   1a4a4:	bge	1a4b4 <__assert_fail@plt+0x93cc>
   1a4a8:	movw	r0, #0
   1a4ac:	str	r0, [sp, #76]	; 0x4c
   1a4b0:	b	1a4cc <__assert_fail@plt+0x93e4>
   1a4b4:	ldr	r0, [fp, #8]
   1a4b8:	movw	r1, #0
   1a4bc:	sub	r0, r1, r0
   1a4c0:	movw	r1, #65535	; 0xffff
   1a4c4:	sdiv	r0, r1, r0
   1a4c8:	str	r0, [sp, #76]	; 0x4c
   1a4cc:	ldr	r0, [sp, #76]	; 0x4c
   1a4d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a4d4:	mvn	r2, #0
   1a4d8:	sub	r1, r2, r1
   1a4dc:	cmp	r0, r1
   1a4e0:	ble	1a5fc <__assert_fail@plt+0x9514>
   1a4e4:	b	1a614 <__assert_fail@plt+0x952c>
   1a4e8:	b	1a4ec <__assert_fail@plt+0x9404>
   1a4ec:	b	1a544 <__assert_fail@plt+0x945c>
   1a4f0:	b	1a544 <__assert_fail@plt+0x945c>
   1a4f4:	ldr	r0, [fp, #8]
   1a4f8:	cmn	r0, #1
   1a4fc:	bne	1a544 <__assert_fail@plt+0x945c>
   1a500:	b	1a504 <__assert_fail@plt+0x941c>
   1a504:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a508:	add	r0, r0, #0
   1a50c:	movw	r1, #0
   1a510:	cmp	r1, r0
   1a514:	blt	1a5fc <__assert_fail@plt+0x9514>
   1a518:	b	1a614 <__assert_fail@plt+0x952c>
   1a51c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a520:	movw	r1, #0
   1a524:	cmp	r1, r0
   1a528:	bge	1a614 <__assert_fail@plt+0x952c>
   1a52c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a530:	sub	r0, r0, #1
   1a534:	mvn	r1, #0
   1a538:	cmp	r1, r0
   1a53c:	blt	1a5fc <__assert_fail@plt+0x9514>
   1a540:	b	1a614 <__assert_fail@plt+0x952c>
   1a544:	ldr	r0, [fp, #8]
   1a548:	movw	r1, #0
   1a54c:	sdiv	r0, r1, r0
   1a550:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a554:	cmp	r0, r1
   1a558:	blt	1a5fc <__assert_fail@plt+0x9514>
   1a55c:	b	1a614 <__assert_fail@plt+0x952c>
   1a560:	ldr	r0, [fp, #8]
   1a564:	cmp	r0, #0
   1a568:	bne	1a570 <__assert_fail@plt+0x9488>
   1a56c:	b	1a614 <__assert_fail@plt+0x952c>
   1a570:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a574:	cmp	r0, #0
   1a578:	bge	1a5e4 <__assert_fail@plt+0x94fc>
   1a57c:	b	1a580 <__assert_fail@plt+0x9498>
   1a580:	b	1a5c8 <__assert_fail@plt+0x94e0>
   1a584:	b	1a5c8 <__assert_fail@plt+0x94e0>
   1a588:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a58c:	cmn	r0, #1
   1a590:	bne	1a5c8 <__assert_fail@plt+0x94e0>
   1a594:	b	1a598 <__assert_fail@plt+0x94b0>
   1a598:	ldr	r0, [fp, #8]
   1a59c:	add	r0, r0, #0
   1a5a0:	movw	r1, #0
   1a5a4:	cmp	r1, r0
   1a5a8:	blt	1a5fc <__assert_fail@plt+0x9514>
   1a5ac:	b	1a614 <__assert_fail@plt+0x952c>
   1a5b0:	ldr	r0, [fp, #8]
   1a5b4:	sub	r0, r0, #1
   1a5b8:	mvn	r1, #0
   1a5bc:	cmp	r1, r0
   1a5c0:	blt	1a5fc <__assert_fail@plt+0x9514>
   1a5c4:	b	1a614 <__assert_fail@plt+0x952c>
   1a5c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a5cc:	movw	r1, #0
   1a5d0:	sdiv	r0, r1, r0
   1a5d4:	ldr	r1, [fp, #8]
   1a5d8:	cmp	r0, r1
   1a5dc:	blt	1a5fc <__assert_fail@plt+0x9514>
   1a5e0:	b	1a614 <__assert_fail@plt+0x952c>
   1a5e4:	ldr	r0, [fp, #8]
   1a5e8:	movw	r1, #65535	; 0xffff
   1a5ec:	sdiv	r0, r1, r0
   1a5f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a5f4:	cmp	r0, r1
   1a5f8:	bge	1a614 <__assert_fail@plt+0x952c>
   1a5fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a600:	ldr	r1, [fp, #8]
   1a604:	mul	r0, r0, r1
   1a608:	uxth	r0, r0
   1a60c:	str	r0, [fp, #-28]	; 0xffffffe4
   1a610:	b	1b214 <__assert_fail@plt+0xa12c>
   1a614:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a618:	ldr	r1, [fp, #8]
   1a61c:	mul	r0, r0, r1
   1a620:	uxth	r0, r0
   1a624:	str	r0, [fp, #-28]	; 0xffffffe4
   1a628:	b	1b218 <__assert_fail@plt+0xa130>
   1a62c:	b	1a630 <__assert_fail@plt+0x9548>
   1a630:	b	1a634 <__assert_fail@plt+0x954c>
   1a634:	ldr	r0, [fp, #8]
   1a638:	cmp	r0, #0
   1a63c:	bge	1a740 <__assert_fail@plt+0x9658>
   1a640:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a644:	cmp	r0, #0
   1a648:	bge	1a6d4 <__assert_fail@plt+0x95ec>
   1a64c:	b	1a650 <__assert_fail@plt+0x9568>
   1a650:	ldr	r0, [pc, #3048]	; 1b240 <__assert_fail@plt+0xa158>
   1a654:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a658:	ldr	r2, [fp, #8]
   1a65c:	sdiv	r0, r0, r2
   1a660:	cmp	r1, r0
   1a664:	blt	1a7d0 <__assert_fail@plt+0x96e8>
   1a668:	b	1a7e4 <__assert_fail@plt+0x96fc>
   1a66c:	b	1a670 <__assert_fail@plt+0x9588>
   1a670:	ldr	r0, [pc, #3020]	; 1b244 <__assert_fail@plt+0xa15c>
   1a674:	ldr	r1, [fp, #8]
   1a678:	cmp	r1, r0
   1a67c:	blt	1a694 <__assert_fail@plt+0x95ac>
   1a680:	b	1a6a0 <__assert_fail@plt+0x95b8>
   1a684:	ldr	r0, [fp, #8]
   1a688:	movw	r1, #0
   1a68c:	cmp	r1, r0
   1a690:	bge	1a6a0 <__assert_fail@plt+0x95b8>
   1a694:	movw	r0, #0
   1a698:	str	r0, [sp, #72]	; 0x48
   1a69c:	b	1a6b8 <__assert_fail@plt+0x95d0>
   1a6a0:	ldr	r0, [pc, #2968]	; 1b240 <__assert_fail@plt+0xa158>
   1a6a4:	ldr	r1, [fp, #8]
   1a6a8:	movw	r2, #0
   1a6ac:	sub	r1, r2, r1
   1a6b0:	sdiv	r0, r0, r1
   1a6b4:	str	r0, [sp, #72]	; 0x48
   1a6b8:	ldr	r0, [sp, #72]	; 0x48
   1a6bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a6c0:	mvn	r2, #0
   1a6c4:	sub	r1, r2, r1
   1a6c8:	cmp	r0, r1
   1a6cc:	ble	1a7d0 <__assert_fail@plt+0x96e8>
   1a6d0:	b	1a7e4 <__assert_fail@plt+0x96fc>
   1a6d4:	ldr	r0, [fp, #8]
   1a6d8:	cmn	r0, #1
   1a6dc:	bne	1a724 <__assert_fail@plt+0x963c>
   1a6e0:	b	1a6e4 <__assert_fail@plt+0x95fc>
   1a6e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6e8:	add	r0, r0, #-2147483648	; 0x80000000
   1a6ec:	movw	r1, #0
   1a6f0:	cmp	r1, r0
   1a6f4:	blt	1a7d0 <__assert_fail@plt+0x96e8>
   1a6f8:	b	1a7e4 <__assert_fail@plt+0x96fc>
   1a6fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a700:	movw	r1, #0
   1a704:	cmp	r1, r0
   1a708:	bge	1a7e4 <__assert_fail@plt+0x96fc>
   1a70c:	ldr	r0, [pc, #2860]	; 1b240 <__assert_fail@plt+0xa158>
   1a710:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a714:	sub	r1, r1, #1
   1a718:	cmp	r0, r1
   1a71c:	blt	1a7d0 <__assert_fail@plt+0x96e8>
   1a720:	b	1a7e4 <__assert_fail@plt+0x96fc>
   1a724:	ldr	r0, [pc, #2844]	; 1b248 <__assert_fail@plt+0xa160>
   1a728:	ldr	r1, [fp, #8]
   1a72c:	sdiv	r0, r0, r1
   1a730:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a734:	cmp	r0, r1
   1a738:	blt	1a7d0 <__assert_fail@plt+0x96e8>
   1a73c:	b	1a7e4 <__assert_fail@plt+0x96fc>
   1a740:	ldr	r0, [fp, #8]
   1a744:	cmp	r0, #0
   1a748:	bne	1a750 <__assert_fail@plt+0x9668>
   1a74c:	b	1a7e4 <__assert_fail@plt+0x96fc>
   1a750:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a754:	cmp	r0, #0
   1a758:	bge	1a7b8 <__assert_fail@plt+0x96d0>
   1a75c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a760:	cmn	r0, #1
   1a764:	bne	1a79c <__assert_fail@plt+0x96b4>
   1a768:	b	1a76c <__assert_fail@plt+0x9684>
   1a76c:	ldr	r0, [fp, #8]
   1a770:	add	r0, r0, #-2147483648	; 0x80000000
   1a774:	movw	r1, #0
   1a778:	cmp	r1, r0
   1a77c:	blt	1a7d0 <__assert_fail@plt+0x96e8>
   1a780:	b	1a7e4 <__assert_fail@plt+0x96fc>
   1a784:	ldr	r0, [pc, #2740]	; 1b240 <__assert_fail@plt+0xa158>
   1a788:	ldr	r1, [fp, #8]
   1a78c:	sub	r1, r1, #1
   1a790:	cmp	r0, r1
   1a794:	blt	1a7d0 <__assert_fail@plt+0x96e8>
   1a798:	b	1a7e4 <__assert_fail@plt+0x96fc>
   1a79c:	ldr	r0, [pc, #2724]	; 1b248 <__assert_fail@plt+0xa160>
   1a7a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a7a4:	sdiv	r0, r0, r1
   1a7a8:	ldr	r1, [fp, #8]
   1a7ac:	cmp	r0, r1
   1a7b0:	blt	1a7d0 <__assert_fail@plt+0x96e8>
   1a7b4:	b	1a7e4 <__assert_fail@plt+0x96fc>
   1a7b8:	ldr	r0, [pc, #2688]	; 1b240 <__assert_fail@plt+0xa158>
   1a7bc:	ldr	r1, [fp, #8]
   1a7c0:	sdiv	r0, r0, r1
   1a7c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a7c8:	cmp	r0, r1
   1a7cc:	bge	1a7e4 <__assert_fail@plt+0x96fc>
   1a7d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a7d4:	ldr	r1, [fp, #8]
   1a7d8:	mul	r0, r0, r1
   1a7dc:	str	r0, [fp, #-28]	; 0xffffffe4
   1a7e0:	b	1b214 <__assert_fail@plt+0xa12c>
   1a7e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a7e8:	ldr	r1, [fp, #8]
   1a7ec:	mul	r0, r0, r1
   1a7f0:	str	r0, [fp, #-28]	; 0xffffffe4
   1a7f4:	b	1b218 <__assert_fail@plt+0xa130>
   1a7f8:	ldr	r0, [fp, #8]
   1a7fc:	cmp	r0, #0
   1a800:	bge	1a910 <__assert_fail@plt+0x9828>
   1a804:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a808:	cmp	r0, #0
   1a80c:	bge	1a898 <__assert_fail@plt+0x97b0>
   1a810:	b	1a830 <__assert_fail@plt+0x9748>
   1a814:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a818:	ldr	r1, [fp, #8]
   1a81c:	mvn	r2, #0
   1a820:	udiv	r1, r2, r1
   1a824:	cmp	r0, r1
   1a828:	bcc	1a9ac <__assert_fail@plt+0x98c4>
   1a82c:	b	1a9c0 <__assert_fail@plt+0x98d8>
   1a830:	b	1a834 <__assert_fail@plt+0x974c>
   1a834:	ldr	r0, [pc, #2568]	; 1b244 <__assert_fail@plt+0xa15c>
   1a838:	ldr	r1, [fp, #8]
   1a83c:	cmp	r1, r0
   1a840:	blt	1a858 <__assert_fail@plt+0x9770>
   1a844:	b	1a864 <__assert_fail@plt+0x977c>
   1a848:	ldr	r0, [fp, #8]
   1a84c:	movw	r1, #0
   1a850:	cmp	r1, r0
   1a854:	bge	1a864 <__assert_fail@plt+0x977c>
   1a858:	movw	r0, #1
   1a85c:	str	r0, [sp, #68]	; 0x44
   1a860:	b	1a87c <__assert_fail@plt+0x9794>
   1a864:	ldr	r0, [fp, #8]
   1a868:	movw	r1, #0
   1a86c:	sub	r0, r1, r0
   1a870:	mvn	r1, #0
   1a874:	udiv	r0, r1, r0
   1a878:	str	r0, [sp, #68]	; 0x44
   1a87c:	ldr	r0, [sp, #68]	; 0x44
   1a880:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a884:	mvn	r2, #0
   1a888:	sub	r1, r2, r1
   1a88c:	cmp	r0, r1
   1a890:	bls	1a9ac <__assert_fail@plt+0x98c4>
   1a894:	b	1a9c0 <__assert_fail@plt+0x98d8>
   1a898:	b	1a89c <__assert_fail@plt+0x97b4>
   1a89c:	b	1a8f4 <__assert_fail@plt+0x980c>
   1a8a0:	b	1a8f4 <__assert_fail@plt+0x980c>
   1a8a4:	ldr	r0, [fp, #8]
   1a8a8:	cmn	r0, #1
   1a8ac:	bne	1a8f4 <__assert_fail@plt+0x980c>
   1a8b0:	b	1a8b4 <__assert_fail@plt+0x97cc>
   1a8b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8b8:	add	r0, r0, #0
   1a8bc:	movw	r1, #0
   1a8c0:	cmp	r1, r0
   1a8c4:	blt	1a9ac <__assert_fail@plt+0x98c4>
   1a8c8:	b	1a9c0 <__assert_fail@plt+0x98d8>
   1a8cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8d0:	movw	r1, #0
   1a8d4:	cmp	r1, r0
   1a8d8:	bge	1a9c0 <__assert_fail@plt+0x98d8>
   1a8dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8e0:	sub	r0, r0, #1
   1a8e4:	mvn	r1, #0
   1a8e8:	cmp	r1, r0
   1a8ec:	blt	1a9ac <__assert_fail@plt+0x98c4>
   1a8f0:	b	1a9c0 <__assert_fail@plt+0x98d8>
   1a8f4:	ldr	r0, [fp, #8]
   1a8f8:	movw	r1, #0
   1a8fc:	sdiv	r0, r1, r0
   1a900:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a904:	cmp	r0, r1
   1a908:	blt	1a9ac <__assert_fail@plt+0x98c4>
   1a90c:	b	1a9c0 <__assert_fail@plt+0x98d8>
   1a910:	ldr	r0, [fp, #8]
   1a914:	cmp	r0, #0
   1a918:	bne	1a920 <__assert_fail@plt+0x9838>
   1a91c:	b	1a9c0 <__assert_fail@plt+0x98d8>
   1a920:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a924:	cmp	r0, #0
   1a928:	bge	1a994 <__assert_fail@plt+0x98ac>
   1a92c:	b	1a930 <__assert_fail@plt+0x9848>
   1a930:	b	1a978 <__assert_fail@plt+0x9890>
   1a934:	b	1a978 <__assert_fail@plt+0x9890>
   1a938:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a93c:	cmn	r0, #1
   1a940:	bne	1a978 <__assert_fail@plt+0x9890>
   1a944:	b	1a948 <__assert_fail@plt+0x9860>
   1a948:	ldr	r0, [fp, #8]
   1a94c:	add	r0, r0, #0
   1a950:	movw	r1, #0
   1a954:	cmp	r1, r0
   1a958:	blt	1a9ac <__assert_fail@plt+0x98c4>
   1a95c:	b	1a9c0 <__assert_fail@plt+0x98d8>
   1a960:	ldr	r0, [fp, #8]
   1a964:	sub	r0, r0, #1
   1a968:	mvn	r1, #0
   1a96c:	cmp	r1, r0
   1a970:	blt	1a9ac <__assert_fail@plt+0x98c4>
   1a974:	b	1a9c0 <__assert_fail@plt+0x98d8>
   1a978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a97c:	movw	r1, #0
   1a980:	sdiv	r0, r1, r0
   1a984:	ldr	r1, [fp, #8]
   1a988:	cmp	r0, r1
   1a98c:	blt	1a9ac <__assert_fail@plt+0x98c4>
   1a990:	b	1a9c0 <__assert_fail@plt+0x98d8>
   1a994:	ldr	r0, [fp, #8]
   1a998:	mvn	r1, #0
   1a99c:	udiv	r0, r1, r0
   1a9a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a9a4:	cmp	r0, r1
   1a9a8:	bcs	1a9c0 <__assert_fail@plt+0x98d8>
   1a9ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9b0:	ldr	r1, [fp, #8]
   1a9b4:	mul	r0, r0, r1
   1a9b8:	str	r0, [fp, #-28]	; 0xffffffe4
   1a9bc:	b	1b214 <__assert_fail@plt+0xa12c>
   1a9c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9c4:	ldr	r1, [fp, #8]
   1a9c8:	mul	r0, r0, r1
   1a9cc:	str	r0, [fp, #-28]	; 0xffffffe4
   1a9d0:	b	1b218 <__assert_fail@plt+0xa130>
   1a9d4:	b	1a9d8 <__assert_fail@plt+0x98f0>
   1a9d8:	b	1a9dc <__assert_fail@plt+0x98f4>
   1a9dc:	ldr	r0, [fp, #8]
   1a9e0:	cmp	r0, #0
   1a9e4:	bge	1aae8 <__assert_fail@plt+0x9a00>
   1a9e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9ec:	cmp	r0, #0
   1a9f0:	bge	1aa7c <__assert_fail@plt+0x9994>
   1a9f4:	b	1a9f8 <__assert_fail@plt+0x9910>
   1a9f8:	ldr	r0, [pc, #2112]	; 1b240 <__assert_fail@plt+0xa158>
   1a9fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aa00:	ldr	r2, [fp, #8]
   1aa04:	sdiv	r0, r0, r2
   1aa08:	cmp	r1, r0
   1aa0c:	blt	1ab78 <__assert_fail@plt+0x9a90>
   1aa10:	b	1ab8c <__assert_fail@plt+0x9aa4>
   1aa14:	b	1aa18 <__assert_fail@plt+0x9930>
   1aa18:	ldr	r0, [pc, #2084]	; 1b244 <__assert_fail@plt+0xa15c>
   1aa1c:	ldr	r1, [fp, #8]
   1aa20:	cmp	r1, r0
   1aa24:	blt	1aa3c <__assert_fail@plt+0x9954>
   1aa28:	b	1aa48 <__assert_fail@plt+0x9960>
   1aa2c:	ldr	r0, [fp, #8]
   1aa30:	movw	r1, #0
   1aa34:	cmp	r1, r0
   1aa38:	bge	1aa48 <__assert_fail@plt+0x9960>
   1aa3c:	movw	r0, #0
   1aa40:	str	r0, [sp, #64]	; 0x40
   1aa44:	b	1aa60 <__assert_fail@plt+0x9978>
   1aa48:	ldr	r0, [pc, #2032]	; 1b240 <__assert_fail@plt+0xa158>
   1aa4c:	ldr	r1, [fp, #8]
   1aa50:	movw	r2, #0
   1aa54:	sub	r1, r2, r1
   1aa58:	sdiv	r0, r0, r1
   1aa5c:	str	r0, [sp, #64]	; 0x40
   1aa60:	ldr	r0, [sp, #64]	; 0x40
   1aa64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aa68:	mvn	r2, #0
   1aa6c:	sub	r1, r2, r1
   1aa70:	cmp	r0, r1
   1aa74:	ble	1ab78 <__assert_fail@plt+0x9a90>
   1aa78:	b	1ab8c <__assert_fail@plt+0x9aa4>
   1aa7c:	ldr	r0, [fp, #8]
   1aa80:	cmn	r0, #1
   1aa84:	bne	1aacc <__assert_fail@plt+0x99e4>
   1aa88:	b	1aa8c <__assert_fail@plt+0x99a4>
   1aa8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa90:	add	r0, r0, #-2147483648	; 0x80000000
   1aa94:	movw	r1, #0
   1aa98:	cmp	r1, r0
   1aa9c:	blt	1ab78 <__assert_fail@plt+0x9a90>
   1aaa0:	b	1ab8c <__assert_fail@plt+0x9aa4>
   1aaa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aaa8:	movw	r1, #0
   1aaac:	cmp	r1, r0
   1aab0:	bge	1ab8c <__assert_fail@plt+0x9aa4>
   1aab4:	ldr	r0, [pc, #1924]	; 1b240 <__assert_fail@plt+0xa158>
   1aab8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aabc:	sub	r1, r1, #1
   1aac0:	cmp	r0, r1
   1aac4:	blt	1ab78 <__assert_fail@plt+0x9a90>
   1aac8:	b	1ab8c <__assert_fail@plt+0x9aa4>
   1aacc:	ldr	r0, [pc, #1908]	; 1b248 <__assert_fail@plt+0xa160>
   1aad0:	ldr	r1, [fp, #8]
   1aad4:	sdiv	r0, r0, r1
   1aad8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aadc:	cmp	r0, r1
   1aae0:	blt	1ab78 <__assert_fail@plt+0x9a90>
   1aae4:	b	1ab8c <__assert_fail@plt+0x9aa4>
   1aae8:	ldr	r0, [fp, #8]
   1aaec:	cmp	r0, #0
   1aaf0:	bne	1aaf8 <__assert_fail@plt+0x9a10>
   1aaf4:	b	1ab8c <__assert_fail@plt+0x9aa4>
   1aaf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aafc:	cmp	r0, #0
   1ab00:	bge	1ab60 <__assert_fail@plt+0x9a78>
   1ab04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab08:	cmn	r0, #1
   1ab0c:	bne	1ab44 <__assert_fail@plt+0x9a5c>
   1ab10:	b	1ab14 <__assert_fail@plt+0x9a2c>
   1ab14:	ldr	r0, [fp, #8]
   1ab18:	add	r0, r0, #-2147483648	; 0x80000000
   1ab1c:	movw	r1, #0
   1ab20:	cmp	r1, r0
   1ab24:	blt	1ab78 <__assert_fail@plt+0x9a90>
   1ab28:	b	1ab8c <__assert_fail@plt+0x9aa4>
   1ab2c:	ldr	r0, [pc, #1804]	; 1b240 <__assert_fail@plt+0xa158>
   1ab30:	ldr	r1, [fp, #8]
   1ab34:	sub	r1, r1, #1
   1ab38:	cmp	r0, r1
   1ab3c:	blt	1ab78 <__assert_fail@plt+0x9a90>
   1ab40:	b	1ab8c <__assert_fail@plt+0x9aa4>
   1ab44:	ldr	r0, [pc, #1788]	; 1b248 <__assert_fail@plt+0xa160>
   1ab48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ab4c:	sdiv	r0, r0, r1
   1ab50:	ldr	r1, [fp, #8]
   1ab54:	cmp	r0, r1
   1ab58:	blt	1ab78 <__assert_fail@plt+0x9a90>
   1ab5c:	b	1ab8c <__assert_fail@plt+0x9aa4>
   1ab60:	ldr	r0, [pc, #1752]	; 1b240 <__assert_fail@plt+0xa158>
   1ab64:	ldr	r1, [fp, #8]
   1ab68:	sdiv	r0, r0, r1
   1ab6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ab70:	cmp	r0, r1
   1ab74:	bge	1ab8c <__assert_fail@plt+0x9aa4>
   1ab78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab7c:	ldr	r1, [fp, #8]
   1ab80:	mul	r0, r0, r1
   1ab84:	str	r0, [fp, #-28]	; 0xffffffe4
   1ab88:	b	1b214 <__assert_fail@plt+0xa12c>
   1ab8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab90:	ldr	r1, [fp, #8]
   1ab94:	mul	r0, r0, r1
   1ab98:	str	r0, [fp, #-28]	; 0xffffffe4
   1ab9c:	b	1b218 <__assert_fail@plt+0xa130>
   1aba0:	ldr	r0, [fp, #8]
   1aba4:	cmp	r0, #0
   1aba8:	bge	1acb8 <__assert_fail@plt+0x9bd0>
   1abac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1abb0:	cmp	r0, #0
   1abb4:	bge	1ac40 <__assert_fail@plt+0x9b58>
   1abb8:	b	1abd8 <__assert_fail@plt+0x9af0>
   1abbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1abc0:	ldr	r1, [fp, #8]
   1abc4:	mvn	r2, #0
   1abc8:	udiv	r1, r2, r1
   1abcc:	cmp	r0, r1
   1abd0:	bcc	1ad54 <__assert_fail@plt+0x9c6c>
   1abd4:	b	1ad68 <__assert_fail@plt+0x9c80>
   1abd8:	b	1abdc <__assert_fail@plt+0x9af4>
   1abdc:	ldr	r0, [pc, #1632]	; 1b244 <__assert_fail@plt+0xa15c>
   1abe0:	ldr	r1, [fp, #8]
   1abe4:	cmp	r1, r0
   1abe8:	blt	1ac00 <__assert_fail@plt+0x9b18>
   1abec:	b	1ac0c <__assert_fail@plt+0x9b24>
   1abf0:	ldr	r0, [fp, #8]
   1abf4:	movw	r1, #0
   1abf8:	cmp	r1, r0
   1abfc:	bge	1ac0c <__assert_fail@plt+0x9b24>
   1ac00:	movw	r0, #1
   1ac04:	str	r0, [sp, #60]	; 0x3c
   1ac08:	b	1ac24 <__assert_fail@plt+0x9b3c>
   1ac0c:	ldr	r0, [fp, #8]
   1ac10:	movw	r1, #0
   1ac14:	sub	r0, r1, r0
   1ac18:	mvn	r1, #0
   1ac1c:	udiv	r0, r1, r0
   1ac20:	str	r0, [sp, #60]	; 0x3c
   1ac24:	ldr	r0, [sp, #60]	; 0x3c
   1ac28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ac2c:	mvn	r2, #0
   1ac30:	sub	r1, r2, r1
   1ac34:	cmp	r0, r1
   1ac38:	bls	1ad54 <__assert_fail@plt+0x9c6c>
   1ac3c:	b	1ad68 <__assert_fail@plt+0x9c80>
   1ac40:	b	1ac44 <__assert_fail@plt+0x9b5c>
   1ac44:	b	1ac9c <__assert_fail@plt+0x9bb4>
   1ac48:	b	1ac9c <__assert_fail@plt+0x9bb4>
   1ac4c:	ldr	r0, [fp, #8]
   1ac50:	cmn	r0, #1
   1ac54:	bne	1ac9c <__assert_fail@plt+0x9bb4>
   1ac58:	b	1ac5c <__assert_fail@plt+0x9b74>
   1ac5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac60:	add	r0, r0, #0
   1ac64:	movw	r1, #0
   1ac68:	cmp	r1, r0
   1ac6c:	blt	1ad54 <__assert_fail@plt+0x9c6c>
   1ac70:	b	1ad68 <__assert_fail@plt+0x9c80>
   1ac74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac78:	movw	r1, #0
   1ac7c:	cmp	r1, r0
   1ac80:	bge	1ad68 <__assert_fail@plt+0x9c80>
   1ac84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac88:	sub	r0, r0, #1
   1ac8c:	mvn	r1, #0
   1ac90:	cmp	r1, r0
   1ac94:	blt	1ad54 <__assert_fail@plt+0x9c6c>
   1ac98:	b	1ad68 <__assert_fail@plt+0x9c80>
   1ac9c:	ldr	r0, [fp, #8]
   1aca0:	movw	r1, #0
   1aca4:	sdiv	r0, r1, r0
   1aca8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1acac:	cmp	r0, r1
   1acb0:	blt	1ad54 <__assert_fail@plt+0x9c6c>
   1acb4:	b	1ad68 <__assert_fail@plt+0x9c80>
   1acb8:	ldr	r0, [fp, #8]
   1acbc:	cmp	r0, #0
   1acc0:	bne	1acc8 <__assert_fail@plt+0x9be0>
   1acc4:	b	1ad68 <__assert_fail@plt+0x9c80>
   1acc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1accc:	cmp	r0, #0
   1acd0:	bge	1ad3c <__assert_fail@plt+0x9c54>
   1acd4:	b	1acd8 <__assert_fail@plt+0x9bf0>
   1acd8:	b	1ad20 <__assert_fail@plt+0x9c38>
   1acdc:	b	1ad20 <__assert_fail@plt+0x9c38>
   1ace0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ace4:	cmn	r0, #1
   1ace8:	bne	1ad20 <__assert_fail@plt+0x9c38>
   1acec:	b	1acf0 <__assert_fail@plt+0x9c08>
   1acf0:	ldr	r0, [fp, #8]
   1acf4:	add	r0, r0, #0
   1acf8:	movw	r1, #0
   1acfc:	cmp	r1, r0
   1ad00:	blt	1ad54 <__assert_fail@plt+0x9c6c>
   1ad04:	b	1ad68 <__assert_fail@plt+0x9c80>
   1ad08:	ldr	r0, [fp, #8]
   1ad0c:	sub	r0, r0, #1
   1ad10:	mvn	r1, #0
   1ad14:	cmp	r1, r0
   1ad18:	blt	1ad54 <__assert_fail@plt+0x9c6c>
   1ad1c:	b	1ad68 <__assert_fail@plt+0x9c80>
   1ad20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad24:	movw	r1, #0
   1ad28:	sdiv	r0, r1, r0
   1ad2c:	ldr	r1, [fp, #8]
   1ad30:	cmp	r0, r1
   1ad34:	blt	1ad54 <__assert_fail@plt+0x9c6c>
   1ad38:	b	1ad68 <__assert_fail@plt+0x9c80>
   1ad3c:	ldr	r0, [fp, #8]
   1ad40:	mvn	r1, #0
   1ad44:	udiv	r0, r1, r0
   1ad48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ad4c:	cmp	r0, r1
   1ad50:	bcs	1ad68 <__assert_fail@plt+0x9c80>
   1ad54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad58:	ldr	r1, [fp, #8]
   1ad5c:	mul	r0, r0, r1
   1ad60:	str	r0, [fp, #-28]	; 0xffffffe4
   1ad64:	b	1b214 <__assert_fail@plt+0xa12c>
   1ad68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad6c:	ldr	r1, [fp, #8]
   1ad70:	mul	r0, r0, r1
   1ad74:	str	r0, [fp, #-28]	; 0xffffffe4
   1ad78:	b	1b218 <__assert_fail@plt+0xa130>
   1ad7c:	b	1ad80 <__assert_fail@plt+0x9c98>
   1ad80:	ldr	r0, [fp, #8]
   1ad84:	cmp	r0, #0
   1ad88:	bge	1aef0 <__assert_fail@plt+0x9e08>
   1ad8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad90:	cmp	r0, #0
   1ad94:	bge	1ae6c <__assert_fail@plt+0x9d84>
   1ad98:	b	1ad9c <__assert_fail@plt+0x9cb4>
   1ad9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ada0:	ldr	r1, [fp, #8]
   1ada4:	asr	r3, r1, #31
   1ada8:	mvn	r2, #0
   1adac:	mvn	ip, #-2147483648	; 0x80000000
   1adb0:	str	r0, [sp, #56]	; 0x38
   1adb4:	mov	r0, r2
   1adb8:	str	r1, [sp, #52]	; 0x34
   1adbc:	mov	r1, ip
   1adc0:	ldr	r2, [sp, #52]	; 0x34
   1adc4:	bl	1e140 <__assert_fail@plt+0xd058>
   1adc8:	ldr	r2, [sp, #56]	; 0x38
   1adcc:	subs	r0, r2, r0
   1add0:	rscs	r1, r1, r2, asr #31
   1add4:	blt	1afb8 <__assert_fail@plt+0x9ed0>
   1add8:	b	1afcc <__assert_fail@plt+0x9ee4>
   1addc:	b	1ade0 <__assert_fail@plt+0x9cf8>
   1ade0:	ldr	r0, [pc, #1116]	; 1b244 <__assert_fail@plt+0xa15c>
   1ade4:	ldr	r1, [fp, #8]
   1ade8:	cmp	r1, r0
   1adec:	blt	1ae04 <__assert_fail@plt+0x9d1c>
   1adf0:	b	1ae18 <__assert_fail@plt+0x9d30>
   1adf4:	ldr	r0, [fp, #8]
   1adf8:	movw	r1, #0
   1adfc:	cmp	r1, r0
   1ae00:	bge	1ae18 <__assert_fail@plt+0x9d30>
   1ae04:	mov	r0, #0
   1ae08:	mvn	r1, #0
   1ae0c:	str	r1, [sp, #48]	; 0x30
   1ae10:	str	r0, [sp, #44]	; 0x2c
   1ae14:	b	1ae4c <__assert_fail@plt+0x9d64>
   1ae18:	ldr	r0, [fp, #8]
   1ae1c:	rsb	r0, r0, #0
   1ae20:	asr	r3, r0, #31
   1ae24:	mvn	r1, #0
   1ae28:	mvn	r2, #-2147483648	; 0x80000000
   1ae2c:	str	r0, [sp, #40]	; 0x28
   1ae30:	mov	r0, r1
   1ae34:	mov	r1, r2
   1ae38:	ldr	r2, [sp, #40]	; 0x28
   1ae3c:	bl	1e140 <__assert_fail@plt+0xd058>
   1ae40:	str	r0, [sp, #48]	; 0x30
   1ae44:	str	r1, [sp, #44]	; 0x2c
   1ae48:	b	1ae4c <__assert_fail@plt+0x9d64>
   1ae4c:	ldr	r0, [sp, #44]	; 0x2c
   1ae50:	ldr	r1, [sp, #48]	; 0x30
   1ae54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ae58:	mvn	r2, r2
   1ae5c:	subs	r1, r2, r1
   1ae60:	rscs	r0, r0, r2, asr #31
   1ae64:	bge	1afb8 <__assert_fail@plt+0x9ed0>
   1ae68:	b	1afcc <__assert_fail@plt+0x9ee4>
   1ae6c:	ldr	r0, [fp, #8]
   1ae70:	cmn	r0, #1
   1ae74:	bne	1aeb8 <__assert_fail@plt+0x9dd0>
   1ae78:	b	1ae7c <__assert_fail@plt+0x9d94>
   1ae7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae80:	mov	r1, #-2147483648	; 0x80000000
   1ae84:	add	r1, r1, r0, asr #31
   1ae88:	rsbs	r0, r0, #0
   1ae8c:	rscs	r1, r1, #0
   1ae90:	blt	1afb8 <__assert_fail@plt+0x9ed0>
   1ae94:	b	1afcc <__assert_fail@plt+0x9ee4>
   1ae98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae9c:	movw	r1, #0
   1aea0:	cmp	r1, r0
   1aea4:	bge	1afcc <__assert_fail@plt+0x9ee4>
   1aea8:	mov	r0, #0
   1aeac:	cmp	r0, #0
   1aeb0:	bne	1afb8 <__assert_fail@plt+0x9ed0>
   1aeb4:	b	1afcc <__assert_fail@plt+0x9ee4>
   1aeb8:	ldr	r0, [fp, #8]
   1aebc:	asr	r3, r0, #31
   1aec0:	mov	r1, #0
   1aec4:	mov	r2, #-2147483648	; 0x80000000
   1aec8:	str	r0, [sp, #36]	; 0x24
   1aecc:	mov	r0, r1
   1aed0:	mov	r1, r2
   1aed4:	ldr	r2, [sp, #36]	; 0x24
   1aed8:	bl	1e140 <__assert_fail@plt+0xd058>
   1aedc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1aee0:	subs	r0, r0, r2
   1aee4:	sbcs	r1, r1, r2, asr #31
   1aee8:	blt	1afb8 <__assert_fail@plt+0x9ed0>
   1aeec:	b	1afcc <__assert_fail@plt+0x9ee4>
   1aef0:	ldr	r0, [fp, #8]
   1aef4:	cmp	r0, #0
   1aef8:	bne	1af00 <__assert_fail@plt+0x9e18>
   1aefc:	b	1afcc <__assert_fail@plt+0x9ee4>
   1af00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af04:	cmp	r0, #0
   1af08:	bge	1af80 <__assert_fail@plt+0x9e98>
   1af0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af10:	cmn	r0, #1
   1af14:	bne	1af48 <__assert_fail@plt+0x9e60>
   1af18:	b	1af1c <__assert_fail@plt+0x9e34>
   1af1c:	ldr	r0, [fp, #8]
   1af20:	mov	r1, #-2147483648	; 0x80000000
   1af24:	add	r1, r1, r0, asr #31
   1af28:	rsbs	r0, r0, #0
   1af2c:	rscs	r1, r1, #0
   1af30:	blt	1afb8 <__assert_fail@plt+0x9ed0>
   1af34:	b	1afcc <__assert_fail@plt+0x9ee4>
   1af38:	mov	r0, #0
   1af3c:	cmp	r0, #0
   1af40:	bne	1afb8 <__assert_fail@plt+0x9ed0>
   1af44:	b	1afcc <__assert_fail@plt+0x9ee4>
   1af48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af4c:	asr	r3, r0, #31
   1af50:	mov	r1, #0
   1af54:	mov	r2, #-2147483648	; 0x80000000
   1af58:	str	r0, [sp, #32]
   1af5c:	mov	r0, r1
   1af60:	mov	r1, r2
   1af64:	ldr	r2, [sp, #32]
   1af68:	bl	1e140 <__assert_fail@plt+0xd058>
   1af6c:	ldr	r2, [fp, #8]
   1af70:	subs	r0, r0, r2
   1af74:	sbcs	r1, r1, r2, asr #31
   1af78:	blt	1afb8 <__assert_fail@plt+0x9ed0>
   1af7c:	b	1afcc <__assert_fail@plt+0x9ee4>
   1af80:	ldr	r0, [fp, #8]
   1af84:	asr	r3, r0, #31
   1af88:	mvn	r1, #0
   1af8c:	mvn	r2, #-2147483648	; 0x80000000
   1af90:	str	r0, [sp, #28]
   1af94:	mov	r0, r1
   1af98:	mov	r1, r2
   1af9c:	ldr	r2, [sp, #28]
   1afa0:	bl	1e140 <__assert_fail@plt+0xd058>
   1afa4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1afa8:	subs	r0, r0, r2
   1afac:	sbcs	r1, r1, r2, asr #31
   1afb0:	bge	1afcc <__assert_fail@plt+0x9ee4>
   1afb4:	b	1afb8 <__assert_fail@plt+0x9ed0>
   1afb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1afbc:	ldr	r1, [fp, #8]
   1afc0:	mul	r0, r0, r1
   1afc4:	str	r0, [fp, #-28]	; 0xffffffe4
   1afc8:	b	1b214 <__assert_fail@plt+0xa12c>
   1afcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1afd0:	ldr	r1, [fp, #8]
   1afd4:	mul	r0, r0, r1
   1afd8:	str	r0, [fp, #-28]	; 0xffffffe4
   1afdc:	b	1b218 <__assert_fail@plt+0xa130>
   1afe0:	ldr	r0, [fp, #8]
   1afe4:	cmp	r0, #0
   1afe8:	bge	1b138 <__assert_fail@plt+0xa050>
   1afec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aff0:	cmp	r0, #0
   1aff4:	bge	1b0c0 <__assert_fail@plt+0x9fd8>
   1aff8:	b	1b038 <__assert_fail@plt+0x9f50>
   1affc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b000:	ldr	r1, [fp, #8]
   1b004:	asr	r3, r1, #31
   1b008:	mvn	r2, #0
   1b00c:	str	r0, [sp, #24]
   1b010:	mov	r0, r2
   1b014:	str	r1, [sp, #20]
   1b018:	mov	r1, r2
   1b01c:	ldr	r2, [sp, #20]
   1b020:	bl	1e214 <__assert_fail@plt+0xd12c>
   1b024:	ldr	r2, [sp, #24]
   1b028:	subs	r0, r2, r0
   1b02c:	rscs	r1, r1, r2, asr #31
   1b030:	bcc	1b1ec <__assert_fail@plt+0xa104>
   1b034:	b	1b200 <__assert_fail@plt+0xa118>
   1b038:	b	1b03c <__assert_fail@plt+0x9f54>
   1b03c:	ldr	r0, [pc, #512]	; 1b244 <__assert_fail@plt+0xa15c>
   1b040:	ldr	r1, [fp, #8]
   1b044:	cmp	r1, r0
   1b048:	blt	1b060 <__assert_fail@plt+0x9f78>
   1b04c:	b	1b074 <__assert_fail@plt+0x9f8c>
   1b050:	ldr	r0, [fp, #8]
   1b054:	movw	r1, #0
   1b058:	cmp	r1, r0
   1b05c:	bge	1b074 <__assert_fail@plt+0x9f8c>
   1b060:	mov	r0, #1
   1b064:	mvn	r1, #0
   1b068:	str	r1, [sp, #16]
   1b06c:	str	r0, [sp, #12]
   1b070:	b	1b0a0 <__assert_fail@plt+0x9fb8>
   1b074:	ldr	r0, [fp, #8]
   1b078:	rsb	r0, r0, #0
   1b07c:	asr	r3, r0, #31
   1b080:	mvn	r1, #0
   1b084:	str	r0, [sp, #8]
   1b088:	mov	r0, r1
   1b08c:	ldr	r2, [sp, #8]
   1b090:	bl	1e214 <__assert_fail@plt+0xd12c>
   1b094:	str	r0, [sp, #16]
   1b098:	str	r1, [sp, #12]
   1b09c:	b	1b0a0 <__assert_fail@plt+0x9fb8>
   1b0a0:	ldr	r0, [sp, #12]
   1b0a4:	ldr	r1, [sp, #16]
   1b0a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b0ac:	mvn	r2, r2
   1b0b0:	subs	r1, r2, r1
   1b0b4:	rscs	r0, r0, r2, asr #31
   1b0b8:	bcs	1b1ec <__assert_fail@plt+0xa104>
   1b0bc:	b	1b200 <__assert_fail@plt+0xa118>
   1b0c0:	b	1b0c4 <__assert_fail@plt+0x9fdc>
   1b0c4:	b	1b11c <__assert_fail@plt+0xa034>
   1b0c8:	b	1b11c <__assert_fail@plt+0xa034>
   1b0cc:	ldr	r0, [fp, #8]
   1b0d0:	cmn	r0, #1
   1b0d4:	bne	1b11c <__assert_fail@plt+0xa034>
   1b0d8:	b	1b0dc <__assert_fail@plt+0x9ff4>
   1b0dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b0e0:	add	r0, r0, #0
   1b0e4:	movw	r1, #0
   1b0e8:	cmp	r1, r0
   1b0ec:	blt	1b1ec <__assert_fail@plt+0xa104>
   1b0f0:	b	1b200 <__assert_fail@plt+0xa118>
   1b0f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b0f8:	movw	r1, #0
   1b0fc:	cmp	r1, r0
   1b100:	bge	1b200 <__assert_fail@plt+0xa118>
   1b104:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b108:	sub	r0, r0, #1
   1b10c:	mvn	r1, #0
   1b110:	cmp	r1, r0
   1b114:	blt	1b1ec <__assert_fail@plt+0xa104>
   1b118:	b	1b200 <__assert_fail@plt+0xa118>
   1b11c:	ldr	r0, [fp, #8]
   1b120:	movw	r1, #0
   1b124:	sdiv	r0, r1, r0
   1b128:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b12c:	cmp	r0, r1
   1b130:	blt	1b1ec <__assert_fail@plt+0xa104>
   1b134:	b	1b200 <__assert_fail@plt+0xa118>
   1b138:	ldr	r0, [fp, #8]
   1b13c:	cmp	r0, #0
   1b140:	bne	1b148 <__assert_fail@plt+0xa060>
   1b144:	b	1b200 <__assert_fail@plt+0xa118>
   1b148:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b14c:	cmp	r0, #0
   1b150:	bge	1b1bc <__assert_fail@plt+0xa0d4>
   1b154:	b	1b158 <__assert_fail@plt+0xa070>
   1b158:	b	1b1a0 <__assert_fail@plt+0xa0b8>
   1b15c:	b	1b1a0 <__assert_fail@plt+0xa0b8>
   1b160:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b164:	cmn	r0, #1
   1b168:	bne	1b1a0 <__assert_fail@plt+0xa0b8>
   1b16c:	b	1b170 <__assert_fail@plt+0xa088>
   1b170:	ldr	r0, [fp, #8]
   1b174:	add	r0, r0, #0
   1b178:	movw	r1, #0
   1b17c:	cmp	r1, r0
   1b180:	blt	1b1ec <__assert_fail@plt+0xa104>
   1b184:	b	1b200 <__assert_fail@plt+0xa118>
   1b188:	ldr	r0, [fp, #8]
   1b18c:	sub	r0, r0, #1
   1b190:	mvn	r1, #0
   1b194:	cmp	r1, r0
   1b198:	blt	1b1ec <__assert_fail@plt+0xa104>
   1b19c:	b	1b200 <__assert_fail@plt+0xa118>
   1b1a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b1a4:	movw	r1, #0
   1b1a8:	sdiv	r0, r1, r0
   1b1ac:	ldr	r1, [fp, #8]
   1b1b0:	cmp	r0, r1
   1b1b4:	blt	1b1ec <__assert_fail@plt+0xa104>
   1b1b8:	b	1b200 <__assert_fail@plt+0xa118>
   1b1bc:	ldr	r0, [fp, #8]
   1b1c0:	asr	r3, r0, #31
   1b1c4:	mvn	r1, #0
   1b1c8:	str	r0, [sp, #4]
   1b1cc:	mov	r0, r1
   1b1d0:	ldr	r2, [sp, #4]
   1b1d4:	bl	1e214 <__assert_fail@plt+0xd12c>
   1b1d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b1dc:	subs	r0, r0, r2
   1b1e0:	sbcs	r1, r1, r2, asr #31
   1b1e4:	bcs	1b200 <__assert_fail@plt+0xa118>
   1b1e8:	b	1b1ec <__assert_fail@plt+0xa104>
   1b1ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b1f0:	ldr	r1, [fp, #8]
   1b1f4:	mul	r0, r0, r1
   1b1f8:	str	r0, [fp, #-28]	; 0xffffffe4
   1b1fc:	b	1b214 <__assert_fail@plt+0xa12c>
   1b200:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b204:	ldr	r1, [fp, #8]
   1b208:	mul	r0, r0, r1
   1b20c:	str	r0, [fp, #-28]	; 0xffffffe4
   1b210:	b	1b218 <__assert_fail@plt+0xa130>
   1b214:	bl	1b3f0 <__assert_fail@plt+0xa308>
   1b218:	ldr	r0, [fp, #-4]
   1b21c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b220:	bl	18750 <__assert_fail@plt+0x7668>
   1b224:	str	r0, [fp, #-4]
   1b228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b22c:	ldr	r1, [fp, #-8]
   1b230:	str	r0, [r1]
   1b234:	ldr	r0, [fp, #-4]
   1b238:	mov	sp, fp
   1b23c:	pop	{fp, pc}
   1b240:	svcvc	0x00ffffff
   1b244:	andhi	r0, r0, r1
   1b248:	andhi	r0, r0, r0
   1b24c:			; <UNDEFINED> instruction: 0xffff8000
   1b250:	push	{fp, lr}
   1b254:	mov	fp, sp
   1b258:	sub	sp, sp, #8
   1b25c:	str	r0, [sp, #4]
   1b260:	ldr	r0, [sp, #4]
   1b264:	movw	r1, #1
   1b268:	bl	1b274 <__assert_fail@plt+0xa18c>
   1b26c:	mov	sp, fp
   1b270:	pop	{fp, pc}
   1b274:	push	{fp, lr}
   1b278:	mov	fp, sp
   1b27c:	sub	sp, sp, #8
   1b280:	str	r0, [sp, #4]
   1b284:	str	r1, [sp]
   1b288:	ldr	r0, [sp, #4]
   1b28c:	ldr	r1, [sp]
   1b290:	bl	1d484 <__assert_fail@plt+0xc39c>
   1b294:	bl	186dc <__assert_fail@plt+0x75f4>
   1b298:	mov	sp, fp
   1b29c:	pop	{fp, pc}
   1b2a0:	push	{fp, lr}
   1b2a4:	mov	fp, sp
   1b2a8:	sub	sp, sp, #8
   1b2ac:	str	r0, [sp, #4]
   1b2b0:	ldr	r0, [sp, #4]
   1b2b4:	movw	r1, #1
   1b2b8:	bl	1b2c4 <__assert_fail@plt+0xa1dc>
   1b2bc:	mov	sp, fp
   1b2c0:	pop	{fp, pc}
   1b2c4:	push	{fp, lr}
   1b2c8:	mov	fp, sp
   1b2cc:	sub	sp, sp, #8
   1b2d0:	str	r0, [sp, #4]
   1b2d4:	str	r1, [sp]
   1b2d8:	ldr	r0, [sp, #4]
   1b2dc:	ldr	r1, [sp]
   1b2e0:	bl	14208 <__assert_fail@plt+0x3120>
   1b2e4:	bl	186dc <__assert_fail@plt+0x75f4>
   1b2e8:	mov	sp, fp
   1b2ec:	pop	{fp, pc}
   1b2f0:	push	{fp, lr}
   1b2f4:	mov	fp, sp
   1b2f8:	sub	sp, sp, #16
   1b2fc:	str	r0, [fp, #-4]
   1b300:	str	r1, [sp, #8]
   1b304:	ldr	r0, [sp, #8]
   1b308:	bl	186b8 <__assert_fail@plt+0x75d0>
   1b30c:	ldr	r1, [fp, #-4]
   1b310:	ldr	r2, [sp, #8]
   1b314:	str	r0, [sp, #4]
   1b318:	bl	10ee4 <memcpy@plt>
   1b31c:	ldr	r0, [sp, #4]
   1b320:	mov	sp, fp
   1b324:	pop	{fp, pc}
   1b328:	push	{fp, lr}
   1b32c:	mov	fp, sp
   1b330:	sub	sp, sp, #16
   1b334:	str	r0, [fp, #-4]
   1b338:	str	r1, [sp, #8]
   1b33c:	ldr	r0, [sp, #8]
   1b340:	bl	1870c <__assert_fail@plt+0x7624>
   1b344:	ldr	r1, [fp, #-4]
   1b348:	ldr	r2, [sp, #8]
   1b34c:	str	r0, [sp, #4]
   1b350:	bl	10ee4 <memcpy@plt>
   1b354:	ldr	r0, [sp, #4]
   1b358:	mov	sp, fp
   1b35c:	pop	{fp, pc}
   1b360:	push	{fp, lr}
   1b364:	mov	fp, sp
   1b368:	sub	sp, sp, #16
   1b36c:	str	r0, [fp, #-4]
   1b370:	str	r1, [sp, #8]
   1b374:	ldr	r0, [sp, #8]
   1b378:	add	r0, r0, #1
   1b37c:	bl	1870c <__assert_fail@plt+0x7624>
   1b380:	str	r0, [sp, #4]
   1b384:	ldr	r0, [sp, #4]
   1b388:	ldr	r1, [sp, #8]
   1b38c:	add	r0, r0, r1
   1b390:	movw	r1, #0
   1b394:	strb	r1, [r0]
   1b398:	ldr	r0, [sp, #4]
   1b39c:	ldr	r1, [fp, #-4]
   1b3a0:	ldr	r2, [sp, #8]
   1b3a4:	str	r0, [sp]
   1b3a8:	bl	10ee4 <memcpy@plt>
   1b3ac:	ldr	r0, [sp]
   1b3b0:	mov	sp, fp
   1b3b4:	pop	{fp, pc}
   1b3b8:	push	{fp, lr}
   1b3bc:	mov	fp, sp
   1b3c0:	sub	sp, sp, #8
   1b3c4:	str	r0, [sp, #4]
   1b3c8:	ldr	r0, [sp, #4]
   1b3cc:	ldr	r1, [sp, #4]
   1b3d0:	str	r0, [sp]
   1b3d4:	mov	r0, r1
   1b3d8:	bl	10fec <strlen@plt>
   1b3dc:	add	r1, r0, #1
   1b3e0:	ldr	r0, [sp]
   1b3e4:	bl	1b2f0 <__assert_fail@plt+0xa208>
   1b3e8:	mov	sp, fp
   1b3ec:	pop	{fp, pc}
   1b3f0:	push	{fp, lr}
   1b3f4:	mov	fp, sp
   1b3f8:	sub	sp, sp, #8
   1b3fc:	movw	r0, #244	; 0xf4
   1b400:	movt	r0, #3
   1b404:	ldr	r0, [r0]
   1b408:	movw	r1, #61324	; 0xef8c
   1b40c:	movt	r1, #1
   1b410:	str	r0, [sp, #4]
   1b414:	mov	r0, r1
   1b418:	bl	10fe0 <gettext@plt>
   1b41c:	ldr	r1, [sp, #4]
   1b420:	str	r0, [sp]
   1b424:	mov	r0, r1
   1b428:	movw	r1, #0
   1b42c:	movw	r2, #59172	; 0xe724
   1b430:	movt	r2, #1
   1b434:	ldr	r3, [sp]
   1b438:	bl	10f80 <error@plt>
   1b43c:	bl	110d0 <abort@plt>
   1b440:	bx	lr
   1b444:	push	{fp, lr}
   1b448:	mov	fp, sp
   1b44c:	sub	sp, sp, #8
   1b450:	str	r0, [sp, #4]
   1b454:	str	r1, [sp]
   1b458:	ldr	r0, [sp, #4]
   1b45c:	ldr	r1, [sp]
   1b460:	bl	1d64c <__assert_fail@plt+0xc564>
   1b464:	cmp	r0, #0
   1b468:	bge	1b470 <__assert_fail@plt+0xa388>
   1b46c:	bl	1b440 <__assert_fail@plt+0xa358>
   1b470:	mov	sp, fp
   1b474:	pop	{fp, pc}
   1b478:	push	{fp, lr}
   1b47c:	mov	fp, sp
   1b480:	sub	sp, sp, #72	; 0x48
   1b484:	ldr	ip, [fp, #8]
   1b488:	str	r0, [fp, #-8]
   1b48c:	str	r1, [fp, #-12]
   1b490:	str	r2, [fp, #-16]
   1b494:	str	r3, [fp, #-20]	; 0xffffffec
   1b498:	movw	r0, #0
   1b49c:	str	r0, [sp, #28]
   1b4a0:	ldr	r1, [fp, #-16]
   1b4a4:	cmp	r0, r1
   1b4a8:	bgt	1b4bc <__assert_fail@plt+0xa3d4>
   1b4ac:	ldr	r0, [fp, #-16]
   1b4b0:	cmp	r0, #36	; 0x24
   1b4b4:	bgt	1b4bc <__assert_fail@plt+0xa3d4>
   1b4b8:	b	1b4dc <__assert_fail@plt+0xa3f4>
   1b4bc:	movw	r0, #61341	; 0xef9d
   1b4c0:	movt	r0, #1
   1b4c4:	movw	r1, #61379	; 0xefc3
   1b4c8:	movt	r1, #1
   1b4cc:	movw	r2, #85	; 0x55
   1b4d0:	movw	r3, #61395	; 0xefd3
   1b4d4:	movt	r3, #1
   1b4d8:	bl	110e8 <__assert_fail@plt>
   1b4dc:	ldr	r0, [fp, #-12]
   1b4e0:	movw	r1, #0
   1b4e4:	cmp	r0, r1
   1b4e8:	beq	1b4f8 <__assert_fail@plt+0xa410>
   1b4ec:	ldr	r0, [fp, #-12]
   1b4f0:	str	r0, [sp, #12]
   1b4f4:	b	1b504 <__assert_fail@plt+0xa41c>
   1b4f8:	sub	r0, fp, #24
   1b4fc:	str	r0, [sp, #12]
   1b500:	b	1b504 <__assert_fail@plt+0xa41c>
   1b504:	ldr	r0, [sp, #12]
   1b508:	str	r0, [fp, #-28]	; 0xffffffe4
   1b50c:	bl	11010 <__errno_location@plt>
   1b510:	mov	r1, #0
   1b514:	str	r1, [r0]
   1b518:	ldr	r0, [fp, #-8]
   1b51c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b520:	ldr	r2, [fp, #-16]
   1b524:	bl	1104c <strtoimax@plt>
   1b528:	str	r1, [sp, #36]	; 0x24
   1b52c:	str	r0, [sp, #32]
   1b530:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b534:	ldr	r0, [r0]
   1b538:	ldr	r1, [fp, #-8]
   1b53c:	cmp	r0, r1
   1b540:	bne	1b5ac <__assert_fail@plt+0xa4c4>
   1b544:	ldr	r0, [fp, #8]
   1b548:	movw	r1, #0
   1b54c:	cmp	r0, r1
   1b550:	beq	1b59c <__assert_fail@plt+0xa4b4>
   1b554:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b558:	ldr	r0, [r0]
   1b55c:	ldrb	r0, [r0]
   1b560:	cmp	r0, #0
   1b564:	beq	1b59c <__assert_fail@plt+0xa4b4>
   1b568:	ldr	r0, [fp, #8]
   1b56c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b570:	ldr	r1, [r1]
   1b574:	ldrb	r1, [r1]
   1b578:	bl	10ff8 <strchr@plt>
   1b57c:	movw	r1, #0
   1b580:	cmp	r0, r1
   1b584:	beq	1b59c <__assert_fail@plt+0xa4b4>
   1b588:	mov	r0, #0
   1b58c:	str	r0, [sp, #36]	; 0x24
   1b590:	mov	r0, #1
   1b594:	str	r0, [sp, #32]
   1b598:	b	1b5a8 <__assert_fail@plt+0xa4c0>
   1b59c:	movw	r0, #4
   1b5a0:	str	r0, [fp, #-4]
   1b5a4:	b	1ba94 <__assert_fail@plt+0xa9ac>
   1b5a8:	b	1b5e4 <__assert_fail@plt+0xa4fc>
   1b5ac:	bl	11010 <__errno_location@plt>
   1b5b0:	ldr	r0, [r0]
   1b5b4:	cmp	r0, #0
   1b5b8:	beq	1b5e0 <__assert_fail@plt+0xa4f8>
   1b5bc:	bl	11010 <__errno_location@plt>
   1b5c0:	ldr	r0, [r0]
   1b5c4:	cmp	r0, #34	; 0x22
   1b5c8:	beq	1b5d8 <__assert_fail@plt+0xa4f0>
   1b5cc:	movw	r0, #4
   1b5d0:	str	r0, [fp, #-4]
   1b5d4:	b	1ba94 <__assert_fail@plt+0xa9ac>
   1b5d8:	movw	r0, #1
   1b5dc:	str	r0, [sp, #28]
   1b5e0:	b	1b5e4 <__assert_fail@plt+0xa4fc>
   1b5e4:	ldr	r0, [fp, #8]
   1b5e8:	movw	r1, #0
   1b5ec:	cmp	r0, r1
   1b5f0:	bne	1b614 <__assert_fail@plt+0xa52c>
   1b5f4:	ldr	r0, [sp, #32]
   1b5f8:	ldr	r1, [sp, #36]	; 0x24
   1b5fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b600:	str	r1, [r2, #4]
   1b604:	str	r0, [r2]
   1b608:	ldr	r0, [sp, #28]
   1b60c:	str	r0, [fp, #-4]
   1b610:	b	1ba94 <__assert_fail@plt+0xa9ac>
   1b614:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b618:	ldr	r0, [r0]
   1b61c:	ldrb	r0, [r0]
   1b620:	cmp	r0, #0
   1b624:	beq	1ba78 <__assert_fail@plt+0xa990>
   1b628:	movw	r0, #1024	; 0x400
   1b62c:	str	r0, [sp, #24]
   1b630:	movw	r0, #1
   1b634:	str	r0, [sp, #20]
   1b638:	ldr	r0, [fp, #8]
   1b63c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b640:	ldr	r1, [r1]
   1b644:	ldrb	r1, [r1]
   1b648:	bl	10ff8 <strchr@plt>
   1b64c:	movw	r1, #0
   1b650:	cmp	r0, r1
   1b654:	bne	1b67c <__assert_fail@plt+0xa594>
   1b658:	ldr	r0, [sp, #32]
   1b65c:	ldr	r1, [sp, #36]	; 0x24
   1b660:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b664:	str	r1, [r2, #4]
   1b668:	str	r0, [r2]
   1b66c:	ldr	r0, [sp, #28]
   1b670:	orr	r0, r0, #2
   1b674:	str	r0, [fp, #-4]
   1b678:	b	1ba94 <__assert_fail@plt+0xa9ac>
   1b67c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b680:	ldr	r0, [r0]
   1b684:	ldrb	r0, [r0]
   1b688:	sub	r0, r0, #69	; 0x45
   1b68c:	cmp	r0, #47	; 0x2f
   1b690:	str	r0, [sp, #8]
   1b694:	bhi	1b800 <__assert_fail@plt+0xa718>
   1b698:	add	r0, pc, #8
   1b69c:	ldr	r1, [sp, #8]
   1b6a0:	ldr	r0, [r0, r1, lsl #2]
   1b6a4:	mov	pc, r0
   1b6a8:	andeq	fp, r1, r8, ror #14
   1b6ac:	andeq	fp, r1, r0, lsl #16
   1b6b0:	andeq	fp, r1, r8, ror #14
   1b6b4:	andeq	fp, r1, r0, lsl #16
   1b6b8:	andeq	fp, r1, r0, lsl #16
   1b6bc:	andeq	fp, r1, r0, lsl #16
   1b6c0:	andeq	fp, r1, r8, ror #14
   1b6c4:	andeq	fp, r1, r0, lsl #16
   1b6c8:	andeq	fp, r1, r8, ror #14
   1b6cc:	andeq	fp, r1, r0, lsl #16
   1b6d0:	andeq	fp, r1, r0, lsl #16
   1b6d4:	andeq	fp, r1, r8, ror #14
   1b6d8:	andeq	fp, r1, r0, lsl #16
   1b6dc:	andeq	fp, r1, r0, lsl #16
   1b6e0:	andeq	fp, r1, r0, lsl #16
   1b6e4:	andeq	fp, r1, r8, ror #14
   1b6e8:	andeq	fp, r1, r0, lsl #16
   1b6ec:	andeq	fp, r1, r0, lsl #16
   1b6f0:	andeq	fp, r1, r0, lsl #16
   1b6f4:	andeq	fp, r1, r0, lsl #16
   1b6f8:	andeq	fp, r1, r8, ror #14
   1b6fc:	andeq	fp, r1, r8, ror #14
   1b700:	andeq	fp, r1, r0, lsl #16
   1b704:	andeq	fp, r1, r0, lsl #16
   1b708:	andeq	fp, r1, r0, lsl #16
   1b70c:	andeq	fp, r1, r0, lsl #16
   1b710:	andeq	fp, r1, r0, lsl #16
   1b714:	andeq	fp, r1, r0, lsl #16
   1b718:	andeq	fp, r1, r0, lsl #16
   1b71c:	andeq	fp, r1, r0, lsl #16
   1b720:	andeq	fp, r1, r0, lsl #16
   1b724:	andeq	fp, r1, r0, lsl #16
   1b728:	andeq	fp, r1, r0, lsl #16
   1b72c:	andeq	fp, r1, r0, lsl #16
   1b730:	andeq	fp, r1, r8, ror #14
   1b734:	andeq	fp, r1, r0, lsl #16
   1b738:	andeq	fp, r1, r0, lsl #16
   1b73c:	andeq	fp, r1, r0, lsl #16
   1b740:	andeq	fp, r1, r8, ror #14
   1b744:	andeq	fp, r1, r0, lsl #16
   1b748:	andeq	fp, r1, r8, ror #14
   1b74c:	andeq	fp, r1, r0, lsl #16
   1b750:	andeq	fp, r1, r0, lsl #16
   1b754:	andeq	fp, r1, r0, lsl #16
   1b758:	andeq	fp, r1, r0, lsl #16
   1b75c:	andeq	fp, r1, r0, lsl #16
   1b760:	andeq	fp, r1, r0, lsl #16
   1b764:	andeq	fp, r1, r8, ror #14
   1b768:	ldr	r0, [fp, #8]
   1b76c:	movw	r1, #48	; 0x30
   1b770:	bl	10ff8 <strchr@plt>
   1b774:	movw	r1, #0
   1b778:	cmp	r0, r1
   1b77c:	beq	1b7fc <__assert_fail@plt+0xa714>
   1b780:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b784:	ldr	r0, [r0]
   1b788:	ldrb	r0, [r0, #1]
   1b78c:	mov	r1, r0
   1b790:	cmp	r0, #66	; 0x42
   1b794:	str	r1, [sp, #4]
   1b798:	beq	1b7e4 <__assert_fail@plt+0xa6fc>
   1b79c:	b	1b7a0 <__assert_fail@plt+0xa6b8>
   1b7a0:	ldr	r0, [sp, #4]
   1b7a4:	cmp	r0, #68	; 0x44
   1b7a8:	beq	1b7e4 <__assert_fail@plt+0xa6fc>
   1b7ac:	b	1b7b0 <__assert_fail@plt+0xa6c8>
   1b7b0:	ldr	r0, [sp, #4]
   1b7b4:	cmp	r0, #105	; 0x69
   1b7b8:	bne	1b7f8 <__assert_fail@plt+0xa710>
   1b7bc:	b	1b7c0 <__assert_fail@plt+0xa6d8>
   1b7c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b7c4:	ldr	r0, [r0]
   1b7c8:	ldrb	r0, [r0, #2]
   1b7cc:	cmp	r0, #66	; 0x42
   1b7d0:	bne	1b7e0 <__assert_fail@plt+0xa6f8>
   1b7d4:	ldr	r0, [sp, #20]
   1b7d8:	add	r0, r0, #2
   1b7dc:	str	r0, [sp, #20]
   1b7e0:	b	1b7f8 <__assert_fail@plt+0xa710>
   1b7e4:	movw	r0, #1000	; 0x3e8
   1b7e8:	str	r0, [sp, #24]
   1b7ec:	ldr	r0, [sp, #20]
   1b7f0:	add	r0, r0, #1
   1b7f4:	str	r0, [sp, #20]
   1b7f8:	b	1b7fc <__assert_fail@plt+0xa714>
   1b7fc:	b	1b800 <__assert_fail@plt+0xa718>
   1b800:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b804:	ldr	r0, [r0]
   1b808:	ldrb	r0, [r0]
   1b80c:	sub	r0, r0, #66	; 0x42
   1b810:	cmp	r0, #53	; 0x35
   1b814:	str	r0, [sp]
   1b818:	bhi	1ba0c <__assert_fail@plt+0xa924>
   1b81c:	add	r0, pc, #8
   1b820:	ldr	r1, [sp]
   1b824:	ldr	r0, [r0, r1, lsl #2]
   1b828:	mov	pc, r0
   1b82c:	andeq	fp, r1, r8, lsl r9
   1b830:	andeq	fp, r1, ip, lsl #20
   1b834:	andeq	fp, r1, ip, lsl #20
   1b838:	andeq	fp, r1, r8, lsr r9
   1b83c:	andeq	fp, r1, ip, lsl #20
   1b840:	andeq	fp, r1, r0, asr r9
   1b844:	andeq	fp, r1, ip, lsl #20
   1b848:	andeq	fp, r1, ip, lsl #20
   1b84c:	andeq	fp, r1, ip, lsl #20
   1b850:	andeq	fp, r1, r8, ror #18
   1b854:	andeq	fp, r1, ip, lsl #20
   1b858:	andeq	fp, r1, r0, lsl #19
   1b85c:	andeq	fp, r1, ip, lsl #20
   1b860:	andeq	fp, r1, ip, lsl #20
   1b864:	muleq	r1, r8, r9
   1b868:	andeq	fp, r1, ip, lsl #20
   1b86c:	andeq	fp, r1, ip, lsl #20
   1b870:	andeq	fp, r1, ip, lsl #20
   1b874:			; <UNDEFINED> instruction: 0x0001b9b0
   1b878:	andeq	fp, r1, ip, lsl #20
   1b87c:	andeq	fp, r1, ip, lsl #20
   1b880:	andeq	fp, r1, ip, lsl #20
   1b884:	andeq	fp, r1, ip, lsl #20
   1b888:	ldrdeq	fp, [r1], -ip
   1b88c:	strdeq	fp, [r1], -r4
   1b890:	andeq	fp, r1, ip, lsl #20
   1b894:	andeq	fp, r1, ip, lsl #20
   1b898:	andeq	fp, r1, ip, lsl #20
   1b89c:	andeq	fp, r1, ip, lsl #20
   1b8a0:	andeq	fp, r1, ip, lsl #20
   1b8a4:	andeq	fp, r1, ip, lsl #20
   1b8a8:	andeq	fp, r1, ip, lsl #20
   1b8ac:	andeq	fp, r1, r4, lsl #18
   1b8b0:	andeq	fp, r1, ip, lsr #18
   1b8b4:	andeq	fp, r1, ip, lsl #20
   1b8b8:	andeq	fp, r1, ip, lsl #20
   1b8bc:	andeq	fp, r1, ip, lsl #20
   1b8c0:	andeq	fp, r1, r0, asr r9
   1b8c4:	andeq	fp, r1, ip, lsl #20
   1b8c8:	andeq	fp, r1, ip, lsl #20
   1b8cc:	andeq	fp, r1, ip, lsl #20
   1b8d0:	andeq	fp, r1, r8, ror #18
   1b8d4:	andeq	fp, r1, ip, lsl #20
   1b8d8:	andeq	fp, r1, r0, lsl #19
   1b8dc:	andeq	fp, r1, ip, lsl #20
   1b8e0:	andeq	fp, r1, ip, lsl #20
   1b8e4:	andeq	fp, r1, ip, lsl #20
   1b8e8:	andeq	fp, r1, ip, lsl #20
   1b8ec:	andeq	fp, r1, ip, lsl #20
   1b8f0:	andeq	fp, r1, ip, lsl #20
   1b8f4:			; <UNDEFINED> instruction: 0x0001b9b0
   1b8f8:	andeq	fp, r1, ip, lsl #20
   1b8fc:	andeq	fp, r1, ip, lsl #20
   1b900:	andeq	fp, r1, r8, asr #19
   1b904:	add	r0, sp, #32
   1b908:	movw	r1, #512	; 0x200
   1b90c:	bl	1baa0 <__assert_fail@plt+0xa9b8>
   1b910:	str	r0, [sp, #16]
   1b914:	b	1ba30 <__assert_fail@plt+0xa948>
   1b918:	add	r0, sp, #32
   1b91c:	movw	r1, #1024	; 0x400
   1b920:	bl	1baa0 <__assert_fail@plt+0xa9b8>
   1b924:	str	r0, [sp, #16]
   1b928:	b	1ba30 <__assert_fail@plt+0xa948>
   1b92c:	movw	r0, #0
   1b930:	str	r0, [sp, #16]
   1b934:	b	1ba30 <__assert_fail@plt+0xa948>
   1b938:	ldr	r1, [sp, #24]
   1b93c:	add	r0, sp, #32
   1b940:	movw	r2, #6
   1b944:	bl	1d424 <__assert_fail@plt+0xc33c>
   1b948:	str	r0, [sp, #16]
   1b94c:	b	1ba30 <__assert_fail@plt+0xa948>
   1b950:	ldr	r1, [sp, #24]
   1b954:	add	r0, sp, #32
   1b958:	movw	r2, #3
   1b95c:	bl	1d424 <__assert_fail@plt+0xc33c>
   1b960:	str	r0, [sp, #16]
   1b964:	b	1ba30 <__assert_fail@plt+0xa948>
   1b968:	ldr	r1, [sp, #24]
   1b96c:	add	r0, sp, #32
   1b970:	movw	r2, #1
   1b974:	bl	1d424 <__assert_fail@plt+0xc33c>
   1b978:	str	r0, [sp, #16]
   1b97c:	b	1ba30 <__assert_fail@plt+0xa948>
   1b980:	ldr	r1, [sp, #24]
   1b984:	add	r0, sp, #32
   1b988:	movw	r2, #2
   1b98c:	bl	1d424 <__assert_fail@plt+0xc33c>
   1b990:	str	r0, [sp, #16]
   1b994:	b	1ba30 <__assert_fail@plt+0xa948>
   1b998:	ldr	r1, [sp, #24]
   1b99c:	add	r0, sp, #32
   1b9a0:	movw	r2, #5
   1b9a4:	bl	1d424 <__assert_fail@plt+0xc33c>
   1b9a8:	str	r0, [sp, #16]
   1b9ac:	b	1ba30 <__assert_fail@plt+0xa948>
   1b9b0:	ldr	r1, [sp, #24]
   1b9b4:	add	r0, sp, #32
   1b9b8:	movw	r2, #4
   1b9bc:	bl	1d424 <__assert_fail@plt+0xc33c>
   1b9c0:	str	r0, [sp, #16]
   1b9c4:	b	1ba30 <__assert_fail@plt+0xa948>
   1b9c8:	add	r0, sp, #32
   1b9cc:	movw	r1, #2
   1b9d0:	bl	1baa0 <__assert_fail@plt+0xa9b8>
   1b9d4:	str	r0, [sp, #16]
   1b9d8:	b	1ba30 <__assert_fail@plt+0xa948>
   1b9dc:	ldr	r1, [sp, #24]
   1b9e0:	add	r0, sp, #32
   1b9e4:	movw	r2, #8
   1b9e8:	bl	1d424 <__assert_fail@plt+0xc33c>
   1b9ec:	str	r0, [sp, #16]
   1b9f0:	b	1ba30 <__assert_fail@plt+0xa948>
   1b9f4:	ldr	r1, [sp, #24]
   1b9f8:	add	r0, sp, #32
   1b9fc:	movw	r2, #7
   1ba00:	bl	1d424 <__assert_fail@plt+0xc33c>
   1ba04:	str	r0, [sp, #16]
   1ba08:	b	1ba30 <__assert_fail@plt+0xa948>
   1ba0c:	ldr	r0, [sp, #32]
   1ba10:	ldr	r1, [sp, #36]	; 0x24
   1ba14:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ba18:	str	r1, [r2, #4]
   1ba1c:	str	r0, [r2]
   1ba20:	ldr	r0, [sp, #28]
   1ba24:	orr	r0, r0, #2
   1ba28:	str	r0, [fp, #-4]
   1ba2c:	b	1ba94 <__assert_fail@plt+0xa9ac>
   1ba30:	ldr	r0, [sp, #16]
   1ba34:	ldr	r1, [sp, #28]
   1ba38:	orr	r0, r1, r0
   1ba3c:	str	r0, [sp, #28]
   1ba40:	ldr	r0, [sp, #20]
   1ba44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ba48:	ldr	r2, [r1]
   1ba4c:	add	r0, r2, r0
   1ba50:	str	r0, [r1]
   1ba54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ba58:	ldr	r0, [r0]
   1ba5c:	ldrsb	r0, [r0]
   1ba60:	cmp	r0, #0
   1ba64:	beq	1ba74 <__assert_fail@plt+0xa98c>
   1ba68:	ldr	r0, [sp, #28]
   1ba6c:	orr	r0, r0, #2
   1ba70:	str	r0, [sp, #28]
   1ba74:	b	1ba78 <__assert_fail@plt+0xa990>
   1ba78:	ldr	r0, [sp, #32]
   1ba7c:	ldr	r1, [sp, #36]	; 0x24
   1ba80:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ba84:	str	r1, [r2, #4]
   1ba88:	str	r0, [r2]
   1ba8c:	ldr	r0, [sp, #28]
   1ba90:	str	r0, [fp, #-4]
   1ba94:	ldr	r0, [fp, #-4]
   1ba98:	mov	sp, fp
   1ba9c:	pop	{fp, pc}
   1baa0:	push	{fp, lr}
   1baa4:	mov	fp, sp
   1baa8:	sub	sp, sp, #112	; 0x70
   1baac:	str	r0, [fp, #-8]
   1bab0:	str	r1, [fp, #-12]
   1bab4:	b	1bf9c <__assert_fail@plt+0xaeb4>
   1bab8:	b	1babc <__assert_fail@plt+0xa9d4>
   1babc:	ldr	r0, [fp, #-12]
   1bac0:	cmp	r0, #0
   1bac4:	bge	1bc24 <__assert_fail@plt+0xab3c>
   1bac8:	ldr	r0, [fp, #-8]
   1bacc:	ldr	r0, [r0, #4]
   1bad0:	cmn	r0, #1
   1bad4:	bgt	1bb7c <__assert_fail@plt+0xaa94>
   1bad8:	b	1badc <__assert_fail@plt+0xa9f4>
   1badc:	b	1bae0 <__assert_fail@plt+0xa9f8>
   1bae0:	ldr	r0, [fp, #-8]
   1bae4:	ldr	r1, [r0]
   1bae8:	ldr	r0, [r0, #4]
   1baec:	ldr	r2, [fp, #-12]
   1baf0:	mov	r3, #127	; 0x7f
   1baf4:	sdiv	r2, r3, r2
   1baf8:	subs	r1, r1, r2
   1bafc:	sbcs	r0, r0, r2, asr #31
   1bb00:	blt	1bcfc <__assert_fail@plt+0xac14>
   1bb04:	b	1bd20 <__assert_fail@plt+0xac38>
   1bb08:	b	1bb0c <__assert_fail@plt+0xaa24>
   1bb0c:	ldr	r0, [pc, #4092]	; 1cb10 <__assert_fail@plt+0xba28>
   1bb10:	ldr	r1, [fp, #-12]
   1bb14:	cmp	r1, r0
   1bb18:	blt	1bb30 <__assert_fail@plt+0xaa48>
   1bb1c:	b	1bb3c <__assert_fail@plt+0xaa54>
   1bb20:	ldr	r0, [fp, #-12]
   1bb24:	movw	r1, #0
   1bb28:	cmp	r1, r0
   1bb2c:	bge	1bb3c <__assert_fail@plt+0xaa54>
   1bb30:	movw	r0, #0
   1bb34:	str	r0, [fp, #-28]	; 0xffffffe4
   1bb38:	b	1bb54 <__assert_fail@plt+0xaa6c>
   1bb3c:	ldr	r0, [fp, #-12]
   1bb40:	movw	r1, #0
   1bb44:	sub	r0, r1, r0
   1bb48:	movw	r1, #127	; 0x7f
   1bb4c:	sdiv	r0, r1, r0
   1bb50:	str	r0, [fp, #-28]	; 0xffffffe4
   1bb54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bb58:	ldr	r1, [fp, #-8]
   1bb5c:	ldr	r2, [r1]
   1bb60:	ldr	r1, [r1, #4]
   1bb64:	mvn	r1, r1
   1bb68:	mvn	r2, r2
   1bb6c:	subs	r2, r2, r0
   1bb70:	sbcs	r0, r1, r0, asr #31
   1bb74:	bge	1bcfc <__assert_fail@plt+0xac14>
   1bb78:	b	1bd20 <__assert_fail@plt+0xac38>
   1bb7c:	b	1bb80 <__assert_fail@plt+0xaa98>
   1bb80:	b	1bbfc <__assert_fail@plt+0xab14>
   1bb84:	b	1bbfc <__assert_fail@plt+0xab14>
   1bb88:	ldr	r0, [fp, #-12]
   1bb8c:	cmn	r0, #1
   1bb90:	bne	1bbfc <__assert_fail@plt+0xab14>
   1bb94:	b	1bb98 <__assert_fail@plt+0xaab0>
   1bb98:	ldr	r0, [fp, #-8]
   1bb9c:	ldr	r1, [r0]
   1bba0:	ldr	r0, [r0, #4]
   1bba4:	subs	r1, r1, #128	; 0x80
   1bba8:	sbc	r0, r0, #0
   1bbac:	rsbs	r1, r1, #0
   1bbb0:	rscs	r0, r0, #0
   1bbb4:	blt	1bcfc <__assert_fail@plt+0xac14>
   1bbb8:	b	1bd20 <__assert_fail@plt+0xac38>
   1bbbc:	ldr	r0, [fp, #-8]
   1bbc0:	ldr	r1, [r0]
   1bbc4:	ldr	r0, [r0, #4]
   1bbc8:	subs	r1, r1, #1
   1bbcc:	sbcs	r0, r0, #0
   1bbd0:	blt	1bd20 <__assert_fail@plt+0xac38>
   1bbd4:	b	1bbd8 <__assert_fail@plt+0xaaf0>
   1bbd8:	ldr	r0, [fp, #-8]
   1bbdc:	ldr	r1, [r0]
   1bbe0:	ldr	r0, [r0, #4]
   1bbe4:	subs	r1, r1, #1
   1bbe8:	sbc	r0, r0, #0
   1bbec:	rsbs	r1, r1, #127	; 0x7f
   1bbf0:	rscs	r0, r0, #0
   1bbf4:	blt	1bcfc <__assert_fail@plt+0xac14>
   1bbf8:	b	1bd20 <__assert_fail@plt+0xac38>
   1bbfc:	ldr	r0, [fp, #-12]
   1bc00:	mvn	r1, #127	; 0x7f
   1bc04:	sdiv	r0, r1, r0
   1bc08:	ldr	r1, [fp, #-8]
   1bc0c:	ldr	r2, [r1]
   1bc10:	ldr	r1, [r1, #4]
   1bc14:	subs	r2, r0, r2
   1bc18:	rscs	r0, r1, r0, asr #31
   1bc1c:	blt	1bcfc <__assert_fail@plt+0xac14>
   1bc20:	b	1bd20 <__assert_fail@plt+0xac38>
   1bc24:	ldr	r0, [fp, #-12]
   1bc28:	cmp	r0, #0
   1bc2c:	bne	1bc34 <__assert_fail@plt+0xab4c>
   1bc30:	b	1bd20 <__assert_fail@plt+0xac38>
   1bc34:	ldr	r0, [fp, #-8]
   1bc38:	ldr	r0, [r0, #4]
   1bc3c:	cmn	r0, #1
   1bc40:	bgt	1bcd4 <__assert_fail@plt+0xabec>
   1bc44:	b	1bc48 <__assert_fail@plt+0xab60>
   1bc48:	b	1bc4c <__assert_fail@plt+0xab64>
   1bc4c:	b	1bca8 <__assert_fail@plt+0xabc0>
   1bc50:	b	1bca8 <__assert_fail@plt+0xabc0>
   1bc54:	ldr	r0, [fp, #-8]
   1bc58:	ldr	r1, [r0]
   1bc5c:	ldr	r0, [r0, #4]
   1bc60:	and	r0, r1, r0
   1bc64:	cmn	r0, #1
   1bc68:	bne	1bca8 <__assert_fail@plt+0xabc0>
   1bc6c:	b	1bc70 <__assert_fail@plt+0xab88>
   1bc70:	b	1bc74 <__assert_fail@plt+0xab8c>
   1bc74:	ldr	r0, [fp, #-12]
   1bc78:	mvn	r1, #127	; 0x7f
   1bc7c:	add	r0, r0, r1
   1bc80:	movw	r1, #0
   1bc84:	cmp	r1, r0
   1bc88:	blt	1bcfc <__assert_fail@plt+0xac14>
   1bc8c:	b	1bd20 <__assert_fail@plt+0xac38>
   1bc90:	ldr	r0, [fp, #-12]
   1bc94:	sub	r0, r0, #1
   1bc98:	movw	r1, #127	; 0x7f
   1bc9c:	cmp	r1, r0
   1bca0:	blt	1bcfc <__assert_fail@plt+0xac14>
   1bca4:	b	1bd20 <__assert_fail@plt+0xac38>
   1bca8:	ldr	r0, [fp, #-8]
   1bcac:	ldr	r2, [r0]
   1bcb0:	ldr	r3, [r0, #4]
   1bcb4:	mvn	r0, #127	; 0x7f
   1bcb8:	mvn	r1, #0
   1bcbc:	bl	1e140 <__assert_fail@plt+0xd058>
   1bcc0:	ldr	r2, [fp, #-12]
   1bcc4:	subs	r0, r0, r2
   1bcc8:	sbcs	r1, r1, r2, asr #31
   1bccc:	blt	1bcfc <__assert_fail@plt+0xac14>
   1bcd0:	b	1bd20 <__assert_fail@plt+0xac38>
   1bcd4:	ldr	r0, [fp, #-12]
   1bcd8:	mov	r1, #127	; 0x7f
   1bcdc:	sdiv	r0, r1, r0
   1bce0:	ldr	r1, [fp, #-8]
   1bce4:	ldr	r2, [r1]
   1bce8:	ldr	r1, [r1, #4]
   1bcec:	subs	r2, r0, r2
   1bcf0:	rscs	r0, r1, r0, asr #31
   1bcf4:	bge	1bd20 <__assert_fail@plt+0xac38>
   1bcf8:	b	1bcfc <__assert_fail@plt+0xac14>
   1bcfc:	ldr	r0, [fp, #-8]
   1bd00:	ldr	r0, [r0]
   1bd04:	ldr	r1, [fp, #-12]
   1bd08:	mul	r0, r0, r1
   1bd0c:	sxtb	r0, r0
   1bd10:	asr	r1, r0, #31
   1bd14:	str	r0, [fp, #-24]	; 0xffffffe8
   1bd18:	str	r1, [fp, #-20]	; 0xffffffec
   1bd1c:	b	1d3c0 <__assert_fail@plt+0xc2d8>
   1bd20:	ldr	r0, [fp, #-8]
   1bd24:	ldr	r0, [r0]
   1bd28:	ldr	r1, [fp, #-12]
   1bd2c:	mul	r0, r0, r1
   1bd30:	sxtb	r0, r0
   1bd34:	asr	r1, r0, #31
   1bd38:	str	r0, [fp, #-24]	; 0xffffffe8
   1bd3c:	str	r1, [fp, #-20]	; 0xffffffec
   1bd40:	b	1d3f4 <__assert_fail@plt+0xc30c>
   1bd44:	ldr	r0, [fp, #-12]
   1bd48:	cmp	r0, #0
   1bd4c:	bge	1be94 <__assert_fail@plt+0xadac>
   1bd50:	ldr	r0, [fp, #-8]
   1bd54:	ldr	r0, [r0, #4]
   1bd58:	cmn	r0, #1
   1bd5c:	bgt	1be04 <__assert_fail@plt+0xad1c>
   1bd60:	b	1bd64 <__assert_fail@plt+0xac7c>
   1bd64:	b	1bd68 <__assert_fail@plt+0xac80>
   1bd68:	ldr	r0, [fp, #-8]
   1bd6c:	ldr	r1, [r0]
   1bd70:	ldr	r0, [r0, #4]
   1bd74:	ldr	r2, [fp, #-12]
   1bd78:	mov	r3, #255	; 0xff
   1bd7c:	sdiv	r2, r3, r2
   1bd80:	subs	r1, r1, r2
   1bd84:	sbcs	r0, r0, r2, asr #31
   1bd88:	blt	1bf54 <__assert_fail@plt+0xae6c>
   1bd8c:	b	1bf78 <__assert_fail@plt+0xae90>
   1bd90:	b	1bd94 <__assert_fail@plt+0xacac>
   1bd94:	ldr	r0, [pc, #3444]	; 1cb10 <__assert_fail@plt+0xba28>
   1bd98:	ldr	r1, [fp, #-12]
   1bd9c:	cmp	r1, r0
   1bda0:	blt	1bdb8 <__assert_fail@plt+0xacd0>
   1bda4:	b	1bdc4 <__assert_fail@plt+0xacdc>
   1bda8:	ldr	r0, [fp, #-12]
   1bdac:	movw	r1, #0
   1bdb0:	cmp	r1, r0
   1bdb4:	bge	1bdc4 <__assert_fail@plt+0xacdc>
   1bdb8:	movw	r0, #0
   1bdbc:	str	r0, [fp, #-32]	; 0xffffffe0
   1bdc0:	b	1bddc <__assert_fail@plt+0xacf4>
   1bdc4:	ldr	r0, [fp, #-12]
   1bdc8:	movw	r1, #0
   1bdcc:	sub	r0, r1, r0
   1bdd0:	movw	r1, #255	; 0xff
   1bdd4:	sdiv	r0, r1, r0
   1bdd8:	str	r0, [fp, #-32]	; 0xffffffe0
   1bddc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bde0:	ldr	r1, [fp, #-8]
   1bde4:	ldr	r2, [r1]
   1bde8:	ldr	r1, [r1, #4]
   1bdec:	mvn	r1, r1
   1bdf0:	mvn	r2, r2
   1bdf4:	subs	r2, r2, r0
   1bdf8:	sbcs	r0, r1, r0, asr #31
   1bdfc:	bge	1bf54 <__assert_fail@plt+0xae6c>
   1be00:	b	1bf78 <__assert_fail@plt+0xae90>
   1be04:	b	1be08 <__assert_fail@plt+0xad20>
   1be08:	b	1be78 <__assert_fail@plt+0xad90>
   1be0c:	b	1be78 <__assert_fail@plt+0xad90>
   1be10:	ldr	r0, [fp, #-12]
   1be14:	cmn	r0, #1
   1be18:	bne	1be78 <__assert_fail@plt+0xad90>
   1be1c:	b	1be20 <__assert_fail@plt+0xad38>
   1be20:	ldr	r0, [fp, #-8]
   1be24:	ldr	r1, [r0]
   1be28:	ldr	r0, [r0, #4]
   1be2c:	rsbs	r1, r1, #0
   1be30:	rscs	r0, r0, #0
   1be34:	blt	1bf54 <__assert_fail@plt+0xae6c>
   1be38:	b	1bf78 <__assert_fail@plt+0xae90>
   1be3c:	ldr	r0, [fp, #-8]
   1be40:	ldr	r1, [r0]
   1be44:	ldr	r0, [r0, #4]
   1be48:	subs	r1, r1, #1
   1be4c:	sbcs	r0, r0, #0
   1be50:	blt	1bf78 <__assert_fail@plt+0xae90>
   1be54:	b	1be58 <__assert_fail@plt+0xad70>
   1be58:	ldr	r0, [fp, #-8]
   1be5c:	ldr	r1, [r0]
   1be60:	ldr	r0, [r0, #4]
   1be64:	subs	r1, r1, #1
   1be68:	sbc	r0, r0, #0
   1be6c:	cmn	r0, #1
   1be70:	bgt	1bf54 <__assert_fail@plt+0xae6c>
   1be74:	b	1bf78 <__assert_fail@plt+0xae90>
   1be78:	ldr	r0, [fp, #-8]
   1be7c:	ldr	r1, [r0]
   1be80:	ldr	r0, [r0, #4]
   1be84:	rsbs	r1, r1, #0
   1be88:	rscs	r0, r0, #0
   1be8c:	blt	1bf54 <__assert_fail@plt+0xae6c>
   1be90:	b	1bf78 <__assert_fail@plt+0xae90>
   1be94:	ldr	r0, [fp, #-12]
   1be98:	cmp	r0, #0
   1be9c:	bne	1bea4 <__assert_fail@plt+0xadbc>
   1bea0:	b	1bf78 <__assert_fail@plt+0xae90>
   1bea4:	ldr	r0, [fp, #-8]
   1bea8:	ldr	r0, [r0, #4]
   1beac:	cmn	r0, #1
   1beb0:	bgt	1bf2c <__assert_fail@plt+0xae44>
   1beb4:	b	1beb8 <__assert_fail@plt+0xadd0>
   1beb8:	b	1bebc <__assert_fail@plt+0xadd4>
   1bebc:	b	1bf14 <__assert_fail@plt+0xae2c>
   1bec0:	b	1bf14 <__assert_fail@plt+0xae2c>
   1bec4:	ldr	r0, [fp, #-8]
   1bec8:	ldr	r1, [r0]
   1becc:	ldr	r0, [r0, #4]
   1bed0:	and	r0, r1, r0
   1bed4:	cmn	r0, #1
   1bed8:	bne	1bf14 <__assert_fail@plt+0xae2c>
   1bedc:	b	1bee0 <__assert_fail@plt+0xadf8>
   1bee0:	b	1bee4 <__assert_fail@plt+0xadfc>
   1bee4:	ldr	r0, [fp, #-12]
   1bee8:	add	r0, r0, #0
   1beec:	movw	r1, #0
   1bef0:	cmp	r1, r0
   1bef4:	blt	1bf54 <__assert_fail@plt+0xae6c>
   1bef8:	b	1bf78 <__assert_fail@plt+0xae90>
   1befc:	ldr	r0, [fp, #-12]
   1bf00:	sub	r0, r0, #1
   1bf04:	mvn	r1, #0
   1bf08:	cmp	r1, r0
   1bf0c:	blt	1bf54 <__assert_fail@plt+0xae6c>
   1bf10:	b	1bf78 <__assert_fail@plt+0xae90>
   1bf14:	ldr	r0, [fp, #-12]
   1bf18:	rsbs	r1, r0, #0
   1bf1c:	mov	r2, #0
   1bf20:	sbcs	r0, r2, r0, asr #31
   1bf24:	blt	1bf54 <__assert_fail@plt+0xae6c>
   1bf28:	b	1bf78 <__assert_fail@plt+0xae90>
   1bf2c:	ldr	r0, [fp, #-12]
   1bf30:	mov	r1, #255	; 0xff
   1bf34:	sdiv	r0, r1, r0
   1bf38:	ldr	r1, [fp, #-8]
   1bf3c:	ldr	r2, [r1]
   1bf40:	ldr	r1, [r1, #4]
   1bf44:	subs	r2, r0, r2
   1bf48:	rscs	r0, r1, r0, asr #31
   1bf4c:	bge	1bf78 <__assert_fail@plt+0xae90>
   1bf50:	b	1bf54 <__assert_fail@plt+0xae6c>
   1bf54:	ldr	r0, [fp, #-8]
   1bf58:	ldr	r0, [r0]
   1bf5c:	ldr	r1, [fp, #-12]
   1bf60:	mul	r0, r0, r1
   1bf64:	uxtb	r0, r0
   1bf68:	mov	r1, #0
   1bf6c:	str	r1, [fp, #-20]	; 0xffffffec
   1bf70:	str	r0, [fp, #-24]	; 0xffffffe8
   1bf74:	b	1d3c0 <__assert_fail@plt+0xc2d8>
   1bf78:	ldr	r0, [fp, #-8]
   1bf7c:	ldr	r0, [r0]
   1bf80:	ldr	r1, [fp, #-12]
   1bf84:	mul	r0, r0, r1
   1bf88:	uxtb	r0, r0
   1bf8c:	mov	r1, #0
   1bf90:	str	r1, [fp, #-20]	; 0xffffffec
   1bf94:	str	r0, [fp, #-24]	; 0xffffffe8
   1bf98:	b	1d3f4 <__assert_fail@plt+0xc30c>
   1bf9c:	b	1c490 <__assert_fail@plt+0xb3a8>
   1bfa0:	b	1bfa4 <__assert_fail@plt+0xaebc>
   1bfa4:	ldr	r0, [fp, #-12]
   1bfa8:	cmp	r0, #0
   1bfac:	bge	1c114 <__assert_fail@plt+0xb02c>
   1bfb0:	ldr	r0, [fp, #-8]
   1bfb4:	ldr	r0, [r0, #4]
   1bfb8:	cmn	r0, #1
   1bfbc:	bgt	1c064 <__assert_fail@plt+0xaf7c>
   1bfc0:	b	1bfc4 <__assert_fail@plt+0xaedc>
   1bfc4:	b	1bfc8 <__assert_fail@plt+0xaee0>
   1bfc8:	ldr	r0, [fp, #-8]
   1bfcc:	ldr	r1, [r0]
   1bfd0:	ldr	r0, [r0, #4]
   1bfd4:	ldr	r2, [fp, #-12]
   1bfd8:	movw	r3, #32767	; 0x7fff
   1bfdc:	sdiv	r2, r3, r2
   1bfe0:	subs	r1, r1, r2
   1bfe4:	sbcs	r0, r0, r2, asr #31
   1bfe8:	blt	1c1f0 <__assert_fail@plt+0xb108>
   1bfec:	b	1c214 <__assert_fail@plt+0xb12c>
   1bff0:	b	1bff4 <__assert_fail@plt+0xaf0c>
   1bff4:	ldr	r0, [pc, #2836]	; 1cb10 <__assert_fail@plt+0xba28>
   1bff8:	ldr	r1, [fp, #-12]
   1bffc:	cmp	r1, r0
   1c000:	blt	1c018 <__assert_fail@plt+0xaf30>
   1c004:	b	1c024 <__assert_fail@plt+0xaf3c>
   1c008:	ldr	r0, [fp, #-12]
   1c00c:	movw	r1, #0
   1c010:	cmp	r1, r0
   1c014:	bge	1c024 <__assert_fail@plt+0xaf3c>
   1c018:	movw	r0, #0
   1c01c:	str	r0, [fp, #-36]	; 0xffffffdc
   1c020:	b	1c03c <__assert_fail@plt+0xaf54>
   1c024:	ldr	r0, [fp, #-12]
   1c028:	movw	r1, #0
   1c02c:	sub	r0, r1, r0
   1c030:	movw	r1, #32767	; 0x7fff
   1c034:	sdiv	r0, r1, r0
   1c038:	str	r0, [fp, #-36]	; 0xffffffdc
   1c03c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c040:	ldr	r1, [fp, #-8]
   1c044:	ldr	r2, [r1]
   1c048:	ldr	r1, [r1, #4]
   1c04c:	mvn	r1, r1
   1c050:	mvn	r2, r2
   1c054:	subs	r2, r2, r0
   1c058:	sbcs	r0, r1, r0, asr #31
   1c05c:	bge	1c1f0 <__assert_fail@plt+0xb108>
   1c060:	b	1c214 <__assert_fail@plt+0xb12c>
   1c064:	b	1c068 <__assert_fail@plt+0xaf80>
   1c068:	b	1c0e8 <__assert_fail@plt+0xb000>
   1c06c:	b	1c0e8 <__assert_fail@plt+0xb000>
   1c070:	ldr	r0, [fp, #-12]
   1c074:	cmn	r0, #1
   1c078:	bne	1c0e8 <__assert_fail@plt+0xb000>
   1c07c:	b	1c080 <__assert_fail@plt+0xaf98>
   1c080:	ldr	r0, [fp, #-8]
   1c084:	ldr	r1, [r0]
   1c088:	ldr	r0, [r0, #4]
   1c08c:	subs	r1, r1, #32768	; 0x8000
   1c090:	sbc	r0, r0, #0
   1c094:	rsbs	r1, r1, #0
   1c098:	rscs	r0, r0, #0
   1c09c:	blt	1c1f0 <__assert_fail@plt+0xb108>
   1c0a0:	b	1c214 <__assert_fail@plt+0xb12c>
   1c0a4:	ldr	r0, [fp, #-8]
   1c0a8:	ldr	r1, [r0]
   1c0ac:	ldr	r0, [r0, #4]
   1c0b0:	subs	r1, r1, #1
   1c0b4:	sbcs	r0, r0, #0
   1c0b8:	blt	1c214 <__assert_fail@plt+0xb12c>
   1c0bc:	b	1c0c0 <__assert_fail@plt+0xafd8>
   1c0c0:	ldr	r0, [fp, #-8]
   1c0c4:	ldr	r1, [r0]
   1c0c8:	ldr	r0, [r0, #4]
   1c0cc:	subs	r1, r1, #1
   1c0d0:	sbc	r0, r0, #0
   1c0d4:	movw	r2, #32767	; 0x7fff
   1c0d8:	subs	r1, r2, r1
   1c0dc:	rscs	r0, r0, #0
   1c0e0:	blt	1c1f0 <__assert_fail@plt+0xb108>
   1c0e4:	b	1c214 <__assert_fail@plt+0xb12c>
   1c0e8:	ldr	r0, [fp, #-12]
   1c0ec:	movw	r1, #32768	; 0x8000
   1c0f0:	movt	r1, #65535	; 0xffff
   1c0f4:	sdiv	r0, r1, r0
   1c0f8:	ldr	r1, [fp, #-8]
   1c0fc:	ldr	r2, [r1]
   1c100:	ldr	r1, [r1, #4]
   1c104:	subs	r2, r0, r2
   1c108:	rscs	r0, r1, r0, asr #31
   1c10c:	blt	1c1f0 <__assert_fail@plt+0xb108>
   1c110:	b	1c214 <__assert_fail@plt+0xb12c>
   1c114:	ldr	r0, [fp, #-12]
   1c118:	cmp	r0, #0
   1c11c:	bne	1c124 <__assert_fail@plt+0xb03c>
   1c120:	b	1c214 <__assert_fail@plt+0xb12c>
   1c124:	ldr	r0, [fp, #-8]
   1c128:	ldr	r0, [r0, #4]
   1c12c:	cmn	r0, #1
   1c130:	bgt	1c1c8 <__assert_fail@plt+0xb0e0>
   1c134:	b	1c138 <__assert_fail@plt+0xb050>
   1c138:	b	1c13c <__assert_fail@plt+0xb054>
   1c13c:	b	1c198 <__assert_fail@plt+0xb0b0>
   1c140:	b	1c198 <__assert_fail@plt+0xb0b0>
   1c144:	ldr	r0, [fp, #-8]
   1c148:	ldr	r1, [r0]
   1c14c:	ldr	r0, [r0, #4]
   1c150:	and	r0, r1, r0
   1c154:	cmn	r0, #1
   1c158:	bne	1c198 <__assert_fail@plt+0xb0b0>
   1c15c:	b	1c160 <__assert_fail@plt+0xb078>
   1c160:	b	1c164 <__assert_fail@plt+0xb07c>
   1c164:	ldr	r0, [pc, #4032]	; 1d12c <__assert_fail@plt+0xc044>
   1c168:	ldr	r1, [fp, #-12]
   1c16c:	add	r0, r1, r0
   1c170:	movw	r1, #0
   1c174:	cmp	r1, r0
   1c178:	blt	1c1f0 <__assert_fail@plt+0xb108>
   1c17c:	b	1c214 <__assert_fail@plt+0xb12c>
   1c180:	ldr	r0, [fp, #-12]
   1c184:	sub	r0, r0, #1
   1c188:	movw	r1, #32767	; 0x7fff
   1c18c:	cmp	r1, r0
   1c190:	blt	1c1f0 <__assert_fail@plt+0xb108>
   1c194:	b	1c214 <__assert_fail@plt+0xb12c>
   1c198:	ldr	r0, [fp, #-8]
   1c19c:	ldr	r2, [r0]
   1c1a0:	ldr	r3, [r0, #4]
   1c1a4:	movw	r0, #32768	; 0x8000
   1c1a8:	movt	r0, #65535	; 0xffff
   1c1ac:	mvn	r1, #0
   1c1b0:	bl	1e140 <__assert_fail@plt+0xd058>
   1c1b4:	ldr	r2, [fp, #-12]
   1c1b8:	subs	r0, r0, r2
   1c1bc:	sbcs	r1, r1, r2, asr #31
   1c1c0:	blt	1c1f0 <__assert_fail@plt+0xb108>
   1c1c4:	b	1c214 <__assert_fail@plt+0xb12c>
   1c1c8:	ldr	r0, [fp, #-12]
   1c1cc:	movw	r1, #32767	; 0x7fff
   1c1d0:	sdiv	r0, r1, r0
   1c1d4:	ldr	r1, [fp, #-8]
   1c1d8:	ldr	r2, [r1]
   1c1dc:	ldr	r1, [r1, #4]
   1c1e0:	subs	r2, r0, r2
   1c1e4:	rscs	r0, r1, r0, asr #31
   1c1e8:	bge	1c214 <__assert_fail@plt+0xb12c>
   1c1ec:	b	1c1f0 <__assert_fail@plt+0xb108>
   1c1f0:	ldr	r0, [fp, #-8]
   1c1f4:	ldr	r0, [r0]
   1c1f8:	ldr	r1, [fp, #-12]
   1c1fc:	mul	r0, r0, r1
   1c200:	sxth	r0, r0
   1c204:	asr	r1, r0, #31
   1c208:	str	r0, [fp, #-24]	; 0xffffffe8
   1c20c:	str	r1, [fp, #-20]	; 0xffffffec
   1c210:	b	1d3c0 <__assert_fail@plt+0xc2d8>
   1c214:	ldr	r0, [fp, #-8]
   1c218:	ldr	r0, [r0]
   1c21c:	ldr	r1, [fp, #-12]
   1c220:	mul	r0, r0, r1
   1c224:	sxth	r0, r0
   1c228:	asr	r1, r0, #31
   1c22c:	str	r0, [fp, #-24]	; 0xffffffe8
   1c230:	str	r1, [fp, #-20]	; 0xffffffec
   1c234:	b	1d3f4 <__assert_fail@plt+0xc30c>
   1c238:	ldr	r0, [fp, #-12]
   1c23c:	cmp	r0, #0
   1c240:	bge	1c388 <__assert_fail@plt+0xb2a0>
   1c244:	ldr	r0, [fp, #-8]
   1c248:	ldr	r0, [r0, #4]
   1c24c:	cmn	r0, #1
   1c250:	bgt	1c2f8 <__assert_fail@plt+0xb210>
   1c254:	b	1c258 <__assert_fail@plt+0xb170>
   1c258:	b	1c25c <__assert_fail@plt+0xb174>
   1c25c:	ldr	r0, [fp, #-8]
   1c260:	ldr	r1, [r0]
   1c264:	ldr	r0, [r0, #4]
   1c268:	ldr	r2, [fp, #-12]
   1c26c:	movw	r3, #65535	; 0xffff
   1c270:	sdiv	r2, r3, r2
   1c274:	subs	r1, r1, r2
   1c278:	sbcs	r0, r0, r2, asr #31
   1c27c:	blt	1c448 <__assert_fail@plt+0xb360>
   1c280:	b	1c46c <__assert_fail@plt+0xb384>
   1c284:	b	1c288 <__assert_fail@plt+0xb1a0>
   1c288:	ldr	r0, [pc, #2176]	; 1cb10 <__assert_fail@plt+0xba28>
   1c28c:	ldr	r1, [fp, #-12]
   1c290:	cmp	r1, r0
   1c294:	blt	1c2ac <__assert_fail@plt+0xb1c4>
   1c298:	b	1c2b8 <__assert_fail@plt+0xb1d0>
   1c29c:	ldr	r0, [fp, #-12]
   1c2a0:	movw	r1, #0
   1c2a4:	cmp	r1, r0
   1c2a8:	bge	1c2b8 <__assert_fail@plt+0xb1d0>
   1c2ac:	movw	r0, #0
   1c2b0:	str	r0, [fp, #-40]	; 0xffffffd8
   1c2b4:	b	1c2d0 <__assert_fail@plt+0xb1e8>
   1c2b8:	ldr	r0, [fp, #-12]
   1c2bc:	movw	r1, #0
   1c2c0:	sub	r0, r1, r0
   1c2c4:	movw	r1, #65535	; 0xffff
   1c2c8:	sdiv	r0, r1, r0
   1c2cc:	str	r0, [fp, #-40]	; 0xffffffd8
   1c2d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c2d4:	ldr	r1, [fp, #-8]
   1c2d8:	ldr	r2, [r1]
   1c2dc:	ldr	r1, [r1, #4]
   1c2e0:	mvn	r1, r1
   1c2e4:	mvn	r2, r2
   1c2e8:	subs	r2, r2, r0
   1c2ec:	sbcs	r0, r1, r0, asr #31
   1c2f0:	bge	1c448 <__assert_fail@plt+0xb360>
   1c2f4:	b	1c46c <__assert_fail@plt+0xb384>
   1c2f8:	b	1c2fc <__assert_fail@plt+0xb214>
   1c2fc:	b	1c36c <__assert_fail@plt+0xb284>
   1c300:	b	1c36c <__assert_fail@plt+0xb284>
   1c304:	ldr	r0, [fp, #-12]
   1c308:	cmn	r0, #1
   1c30c:	bne	1c36c <__assert_fail@plt+0xb284>
   1c310:	b	1c314 <__assert_fail@plt+0xb22c>
   1c314:	ldr	r0, [fp, #-8]
   1c318:	ldr	r1, [r0]
   1c31c:	ldr	r0, [r0, #4]
   1c320:	rsbs	r1, r1, #0
   1c324:	rscs	r0, r0, #0
   1c328:	blt	1c448 <__assert_fail@plt+0xb360>
   1c32c:	b	1c46c <__assert_fail@plt+0xb384>
   1c330:	ldr	r0, [fp, #-8]
   1c334:	ldr	r1, [r0]
   1c338:	ldr	r0, [r0, #4]
   1c33c:	subs	r1, r1, #1
   1c340:	sbcs	r0, r0, #0
   1c344:	blt	1c46c <__assert_fail@plt+0xb384>
   1c348:	b	1c34c <__assert_fail@plt+0xb264>
   1c34c:	ldr	r0, [fp, #-8]
   1c350:	ldr	r1, [r0]
   1c354:	ldr	r0, [r0, #4]
   1c358:	subs	r1, r1, #1
   1c35c:	sbc	r0, r0, #0
   1c360:	cmn	r0, #1
   1c364:	bgt	1c448 <__assert_fail@plt+0xb360>
   1c368:	b	1c46c <__assert_fail@plt+0xb384>
   1c36c:	ldr	r0, [fp, #-8]
   1c370:	ldr	r1, [r0]
   1c374:	ldr	r0, [r0, #4]
   1c378:	rsbs	r1, r1, #0
   1c37c:	rscs	r0, r0, #0
   1c380:	blt	1c448 <__assert_fail@plt+0xb360>
   1c384:	b	1c46c <__assert_fail@plt+0xb384>
   1c388:	ldr	r0, [fp, #-12]
   1c38c:	cmp	r0, #0
   1c390:	bne	1c398 <__assert_fail@plt+0xb2b0>
   1c394:	b	1c46c <__assert_fail@plt+0xb384>
   1c398:	ldr	r0, [fp, #-8]
   1c39c:	ldr	r0, [r0, #4]
   1c3a0:	cmn	r0, #1
   1c3a4:	bgt	1c420 <__assert_fail@plt+0xb338>
   1c3a8:	b	1c3ac <__assert_fail@plt+0xb2c4>
   1c3ac:	b	1c3b0 <__assert_fail@plt+0xb2c8>
   1c3b0:	b	1c408 <__assert_fail@plt+0xb320>
   1c3b4:	b	1c408 <__assert_fail@plt+0xb320>
   1c3b8:	ldr	r0, [fp, #-8]
   1c3bc:	ldr	r1, [r0]
   1c3c0:	ldr	r0, [r0, #4]
   1c3c4:	and	r0, r1, r0
   1c3c8:	cmn	r0, #1
   1c3cc:	bne	1c408 <__assert_fail@plt+0xb320>
   1c3d0:	b	1c3d4 <__assert_fail@plt+0xb2ec>
   1c3d4:	b	1c3d8 <__assert_fail@plt+0xb2f0>
   1c3d8:	ldr	r0, [fp, #-12]
   1c3dc:	add	r0, r0, #0
   1c3e0:	movw	r1, #0
   1c3e4:	cmp	r1, r0
   1c3e8:	blt	1c448 <__assert_fail@plt+0xb360>
   1c3ec:	b	1c46c <__assert_fail@plt+0xb384>
   1c3f0:	ldr	r0, [fp, #-12]
   1c3f4:	sub	r0, r0, #1
   1c3f8:	mvn	r1, #0
   1c3fc:	cmp	r1, r0
   1c400:	blt	1c448 <__assert_fail@plt+0xb360>
   1c404:	b	1c46c <__assert_fail@plt+0xb384>
   1c408:	ldr	r0, [fp, #-12]
   1c40c:	rsbs	r1, r0, #0
   1c410:	mov	r2, #0
   1c414:	sbcs	r0, r2, r0, asr #31
   1c418:	blt	1c448 <__assert_fail@plt+0xb360>
   1c41c:	b	1c46c <__assert_fail@plt+0xb384>
   1c420:	ldr	r0, [fp, #-12]
   1c424:	movw	r1, #65535	; 0xffff
   1c428:	sdiv	r0, r1, r0
   1c42c:	ldr	r1, [fp, #-8]
   1c430:	ldr	r2, [r1]
   1c434:	ldr	r1, [r1, #4]
   1c438:	subs	r2, r0, r2
   1c43c:	rscs	r0, r1, r0, asr #31
   1c440:	bge	1c46c <__assert_fail@plt+0xb384>
   1c444:	b	1c448 <__assert_fail@plt+0xb360>
   1c448:	ldr	r0, [fp, #-8]
   1c44c:	ldr	r0, [r0]
   1c450:	ldr	r1, [fp, #-12]
   1c454:	mul	r0, r0, r1
   1c458:	uxth	r0, r0
   1c45c:	mov	r1, #0
   1c460:	str	r1, [fp, #-20]	; 0xffffffec
   1c464:	str	r0, [fp, #-24]	; 0xffffffe8
   1c468:	b	1d3c0 <__assert_fail@plt+0xc2d8>
   1c46c:	ldr	r0, [fp, #-8]
   1c470:	ldr	r0, [r0]
   1c474:	ldr	r1, [fp, #-12]
   1c478:	mul	r0, r0, r1
   1c47c:	uxth	r0, r0
   1c480:	mov	r1, #0
   1c484:	str	r1, [fp, #-20]	; 0xffffffec
   1c488:	str	r0, [fp, #-24]	; 0xffffffe8
   1c48c:	b	1d3f4 <__assert_fail@plt+0xc30c>
   1c490:	b	1c95c <__assert_fail@plt+0xb874>
   1c494:	b	1c498 <__assert_fail@plt+0xb3b0>
   1c498:	ldr	r0, [fp, #-12]
   1c49c:	cmp	r0, #0
   1c4a0:	bge	1c5f8 <__assert_fail@plt+0xb510>
   1c4a4:	ldr	r0, [fp, #-8]
   1c4a8:	ldr	r0, [r0, #4]
   1c4ac:	cmn	r0, #1
   1c4b0:	bgt	1c558 <__assert_fail@plt+0xb470>
   1c4b4:	b	1c4b8 <__assert_fail@plt+0xb3d0>
   1c4b8:	b	1c4bc <__assert_fail@plt+0xb3d4>
   1c4bc:	ldr	r0, [fp, #-8]
   1c4c0:	ldr	r1, [r0]
   1c4c4:	ldr	r0, [r0, #4]
   1c4c8:	ldr	r2, [fp, #-12]
   1c4cc:	mvn	r3, #-2147483648	; 0x80000000
   1c4d0:	sdiv	r2, r3, r2
   1c4d4:	subs	r1, r1, r2
   1c4d8:	sbcs	r0, r0, r2, asr #31
   1c4dc:	blt	1c6cc <__assert_fail@plt+0xb5e4>
   1c4e0:	b	1c6ec <__assert_fail@plt+0xb604>
   1c4e4:	b	1c4e8 <__assert_fail@plt+0xb400>
   1c4e8:	ldr	r0, [pc, #3884]	; 1d41c <__assert_fail@plt+0xc334>
   1c4ec:	ldr	r1, [fp, #-12]
   1c4f0:	cmp	r1, r0
   1c4f4:	blt	1c50c <__assert_fail@plt+0xb424>
   1c4f8:	b	1c518 <__assert_fail@plt+0xb430>
   1c4fc:	ldr	r0, [fp, #-12]
   1c500:	movw	r1, #0
   1c504:	cmp	r1, r0
   1c508:	bge	1c518 <__assert_fail@plt+0xb430>
   1c50c:	movw	r0, #0
   1c510:	str	r0, [fp, #-44]	; 0xffffffd4
   1c514:	b	1c530 <__assert_fail@plt+0xb448>
   1c518:	ldr	r0, [pc, #3840]	; 1d420 <__assert_fail@plt+0xc338>
   1c51c:	ldr	r1, [fp, #-12]
   1c520:	movw	r2, #0
   1c524:	sub	r1, r2, r1
   1c528:	sdiv	r0, r0, r1
   1c52c:	str	r0, [fp, #-44]	; 0xffffffd4
   1c530:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c534:	ldr	r1, [fp, #-8]
   1c538:	ldr	r2, [r1]
   1c53c:	ldr	r1, [r1, #4]
   1c540:	mvn	r1, r1
   1c544:	mvn	r2, r2
   1c548:	subs	r2, r2, r0
   1c54c:	sbcs	r0, r1, r0, asr #31
   1c550:	bge	1c6cc <__assert_fail@plt+0xb5e4>
   1c554:	b	1c6ec <__assert_fail@plt+0xb604>
   1c558:	ldr	r0, [fp, #-12]
   1c55c:	cmn	r0, #1
   1c560:	bne	1c5d0 <__assert_fail@plt+0xb4e8>
   1c564:	b	1c568 <__assert_fail@plt+0xb480>
   1c568:	ldr	r0, [fp, #-8]
   1c56c:	ldr	r1, [r0]
   1c570:	ldr	r0, [r0, #4]
   1c574:	adds	r1, r1, #-2147483648	; 0x80000000
   1c578:	sbc	r0, r0, #0
   1c57c:	rsbs	r1, r1, #0
   1c580:	rscs	r0, r0, #0
   1c584:	blt	1c6cc <__assert_fail@plt+0xb5e4>
   1c588:	b	1c6ec <__assert_fail@plt+0xb604>
   1c58c:	ldr	r0, [fp, #-8]
   1c590:	ldr	r1, [r0]
   1c594:	ldr	r0, [r0, #4]
   1c598:	subs	r1, r1, #1
   1c59c:	sbcs	r0, r0, #0
   1c5a0:	blt	1c6ec <__assert_fail@plt+0xb604>
   1c5a4:	b	1c5a8 <__assert_fail@plt+0xb4c0>
   1c5a8:	ldr	r0, [fp, #-8]
   1c5ac:	ldr	r1, [r0]
   1c5b0:	ldr	r0, [r0, #4]
   1c5b4:	subs	r1, r1, #1
   1c5b8:	sbc	r0, r0, #0
   1c5bc:	mvn	r2, #-2147483648	; 0x80000000
   1c5c0:	subs	r1, r2, r1
   1c5c4:	rscs	r0, r0, #0
   1c5c8:	blt	1c6cc <__assert_fail@plt+0xb5e4>
   1c5cc:	b	1c6ec <__assert_fail@plt+0xb604>
   1c5d0:	ldr	r0, [fp, #-12]
   1c5d4:	mov	r1, #-2147483648	; 0x80000000
   1c5d8:	sdiv	r0, r1, r0
   1c5dc:	ldr	r1, [fp, #-8]
   1c5e0:	ldr	r2, [r1]
   1c5e4:	ldr	r1, [r1, #4]
   1c5e8:	subs	r2, r0, r2
   1c5ec:	rscs	r0, r1, r0, asr #31
   1c5f0:	blt	1c6cc <__assert_fail@plt+0xb5e4>
   1c5f4:	b	1c6ec <__assert_fail@plt+0xb604>
   1c5f8:	ldr	r0, [fp, #-12]
   1c5fc:	cmp	r0, #0
   1c600:	bne	1c608 <__assert_fail@plt+0xb520>
   1c604:	b	1c6ec <__assert_fail@plt+0xb604>
   1c608:	ldr	r0, [fp, #-8]
   1c60c:	ldr	r0, [r0, #4]
   1c610:	cmn	r0, #1
   1c614:	bgt	1c6a4 <__assert_fail@plt+0xb5bc>
   1c618:	b	1c61c <__assert_fail@plt+0xb534>
   1c61c:	b	1c620 <__assert_fail@plt+0xb538>
   1c620:	b	1c678 <__assert_fail@plt+0xb590>
   1c624:	b	1c678 <__assert_fail@plt+0xb590>
   1c628:	ldr	r0, [fp, #-8]
   1c62c:	ldr	r1, [r0]
   1c630:	ldr	r0, [r0, #4]
   1c634:	and	r0, r1, r0
   1c638:	cmn	r0, #1
   1c63c:	bne	1c678 <__assert_fail@plt+0xb590>
   1c640:	b	1c644 <__assert_fail@plt+0xb55c>
   1c644:	b	1c648 <__assert_fail@plt+0xb560>
   1c648:	ldr	r0, [fp, #-12]
   1c64c:	add	r0, r0, #-2147483648	; 0x80000000
   1c650:	movw	r1, #0
   1c654:	cmp	r1, r0
   1c658:	blt	1c6cc <__assert_fail@plt+0xb5e4>
   1c65c:	b	1c6ec <__assert_fail@plt+0xb604>
   1c660:	ldr	r0, [pc, #3512]	; 1d420 <__assert_fail@plt+0xc338>
   1c664:	ldr	r1, [fp, #-12]
   1c668:	sub	r1, r1, #1
   1c66c:	cmp	r0, r1
   1c670:	blt	1c6cc <__assert_fail@plt+0xb5e4>
   1c674:	b	1c6ec <__assert_fail@plt+0xb604>
   1c678:	ldr	r0, [fp, #-8]
   1c67c:	ldr	r2, [r0]
   1c680:	ldr	r3, [r0, #4]
   1c684:	mov	r0, #-2147483648	; 0x80000000
   1c688:	mvn	r1, #0
   1c68c:	bl	1e140 <__assert_fail@plt+0xd058>
   1c690:	ldr	r2, [fp, #-12]
   1c694:	subs	r0, r0, r2
   1c698:	sbcs	r1, r1, r2, asr #31
   1c69c:	blt	1c6cc <__assert_fail@plt+0xb5e4>
   1c6a0:	b	1c6ec <__assert_fail@plt+0xb604>
   1c6a4:	ldr	r0, [fp, #-12]
   1c6a8:	mvn	r1, #-2147483648	; 0x80000000
   1c6ac:	sdiv	r0, r1, r0
   1c6b0:	ldr	r1, [fp, #-8]
   1c6b4:	ldr	r2, [r1]
   1c6b8:	ldr	r1, [r1, #4]
   1c6bc:	subs	r2, r0, r2
   1c6c0:	rscs	r0, r1, r0, asr #31
   1c6c4:	bge	1c6ec <__assert_fail@plt+0xb604>
   1c6c8:	b	1c6cc <__assert_fail@plt+0xb5e4>
   1c6cc:	ldr	r0, [fp, #-8]
   1c6d0:	ldr	r0, [r0]
   1c6d4:	ldr	r1, [fp, #-12]
   1c6d8:	mul	r0, r0, r1
   1c6dc:	asr	r1, r0, #31
   1c6e0:	str	r0, [fp, #-24]	; 0xffffffe8
   1c6e4:	str	r1, [fp, #-20]	; 0xffffffec
   1c6e8:	b	1d3c0 <__assert_fail@plt+0xc2d8>
   1c6ec:	ldr	r0, [fp, #-8]
   1c6f0:	ldr	r0, [r0]
   1c6f4:	ldr	r1, [fp, #-12]
   1c6f8:	mul	r0, r0, r1
   1c6fc:	asr	r1, r0, #31
   1c700:	str	r0, [fp, #-24]	; 0xffffffe8
   1c704:	str	r1, [fp, #-20]	; 0xffffffec
   1c708:	b	1d3f4 <__assert_fail@plt+0xc30c>
   1c70c:	ldr	r0, [fp, #-12]
   1c710:	cmp	r0, #0
   1c714:	bge	1c85c <__assert_fail@plt+0xb774>
   1c718:	ldr	r0, [fp, #-8]
   1c71c:	ldr	r0, [r0, #4]
   1c720:	cmn	r0, #1
   1c724:	bgt	1c7cc <__assert_fail@plt+0xb6e4>
   1c728:	b	1c72c <__assert_fail@plt+0xb644>
   1c72c:	b	1c758 <__assert_fail@plt+0xb670>
   1c730:	ldr	r0, [fp, #-8]
   1c734:	ldr	r1, [r0]
   1c738:	ldr	r0, [r0, #4]
   1c73c:	ldr	r2, [fp, #-12]
   1c740:	mvn	r3, #0
   1c744:	udiv	r2, r3, r2
   1c748:	subs	r1, r1, r2
   1c74c:	sbcs	r0, r0, #0
   1c750:	blt	1c91c <__assert_fail@plt+0xb834>
   1c754:	b	1c93c <__assert_fail@plt+0xb854>
   1c758:	b	1c75c <__assert_fail@plt+0xb674>
   1c75c:	ldr	r0, [pc, #3256]	; 1d41c <__assert_fail@plt+0xc334>
   1c760:	ldr	r1, [fp, #-12]
   1c764:	cmp	r1, r0
   1c768:	blt	1c780 <__assert_fail@plt+0xb698>
   1c76c:	b	1c78c <__assert_fail@plt+0xb6a4>
   1c770:	ldr	r0, [fp, #-12]
   1c774:	movw	r1, #0
   1c778:	cmp	r1, r0
   1c77c:	bge	1c78c <__assert_fail@plt+0xb6a4>
   1c780:	movw	r0, #1
   1c784:	str	r0, [fp, #-48]	; 0xffffffd0
   1c788:	b	1c7a4 <__assert_fail@plt+0xb6bc>
   1c78c:	ldr	r0, [fp, #-12]
   1c790:	movw	r1, #0
   1c794:	sub	r0, r1, r0
   1c798:	mvn	r1, #0
   1c79c:	udiv	r0, r1, r0
   1c7a0:	str	r0, [fp, #-48]	; 0xffffffd0
   1c7a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c7a8:	ldr	r1, [fp, #-8]
   1c7ac:	ldr	r2, [r1]
   1c7b0:	ldr	r1, [r1, #4]
   1c7b4:	mvn	r1, r1
   1c7b8:	mvn	r2, r2
   1c7bc:	subs	r0, r2, r0
   1c7c0:	sbcs	r1, r1, #0
   1c7c4:	bge	1c91c <__assert_fail@plt+0xb834>
   1c7c8:	b	1c93c <__assert_fail@plt+0xb854>
   1c7cc:	b	1c7d0 <__assert_fail@plt+0xb6e8>
   1c7d0:	b	1c840 <__assert_fail@plt+0xb758>
   1c7d4:	b	1c840 <__assert_fail@plt+0xb758>
   1c7d8:	ldr	r0, [fp, #-12]
   1c7dc:	cmn	r0, #1
   1c7e0:	bne	1c840 <__assert_fail@plt+0xb758>
   1c7e4:	b	1c7e8 <__assert_fail@plt+0xb700>
   1c7e8:	ldr	r0, [fp, #-8]
   1c7ec:	ldr	r1, [r0]
   1c7f0:	ldr	r0, [r0, #4]
   1c7f4:	rsbs	r1, r1, #0
   1c7f8:	rscs	r0, r0, #0
   1c7fc:	blt	1c91c <__assert_fail@plt+0xb834>
   1c800:	b	1c93c <__assert_fail@plt+0xb854>
   1c804:	ldr	r0, [fp, #-8]
   1c808:	ldr	r1, [r0]
   1c80c:	ldr	r0, [r0, #4]
   1c810:	subs	r1, r1, #1
   1c814:	sbcs	r0, r0, #0
   1c818:	blt	1c93c <__assert_fail@plt+0xb854>
   1c81c:	b	1c820 <__assert_fail@plt+0xb738>
   1c820:	ldr	r0, [fp, #-8]
   1c824:	ldr	r1, [r0]
   1c828:	ldr	r0, [r0, #4]
   1c82c:	subs	r1, r1, #1
   1c830:	sbc	r0, r0, #0
   1c834:	cmn	r0, #1
   1c838:	bgt	1c91c <__assert_fail@plt+0xb834>
   1c83c:	b	1c93c <__assert_fail@plt+0xb854>
   1c840:	ldr	r0, [fp, #-8]
   1c844:	ldr	r1, [r0]
   1c848:	ldr	r0, [r0, #4]
   1c84c:	rsbs	r1, r1, #0
   1c850:	rscs	r0, r0, #0
   1c854:	blt	1c91c <__assert_fail@plt+0xb834>
   1c858:	b	1c93c <__assert_fail@plt+0xb854>
   1c85c:	ldr	r0, [fp, #-12]
   1c860:	cmp	r0, #0
   1c864:	bne	1c86c <__assert_fail@plt+0xb784>
   1c868:	b	1c93c <__assert_fail@plt+0xb854>
   1c86c:	ldr	r0, [fp, #-8]
   1c870:	ldr	r0, [r0, #4]
   1c874:	cmn	r0, #1
   1c878:	bgt	1c8f4 <__assert_fail@plt+0xb80c>
   1c87c:	b	1c880 <__assert_fail@plt+0xb798>
   1c880:	b	1c884 <__assert_fail@plt+0xb79c>
   1c884:	b	1c8dc <__assert_fail@plt+0xb7f4>
   1c888:	b	1c8dc <__assert_fail@plt+0xb7f4>
   1c88c:	ldr	r0, [fp, #-8]
   1c890:	ldr	r1, [r0]
   1c894:	ldr	r0, [r0, #4]
   1c898:	and	r0, r1, r0
   1c89c:	cmn	r0, #1
   1c8a0:	bne	1c8dc <__assert_fail@plt+0xb7f4>
   1c8a4:	b	1c8a8 <__assert_fail@plt+0xb7c0>
   1c8a8:	b	1c8ac <__assert_fail@plt+0xb7c4>
   1c8ac:	ldr	r0, [fp, #-12]
   1c8b0:	add	r0, r0, #0
   1c8b4:	movw	r1, #0
   1c8b8:	cmp	r1, r0
   1c8bc:	blt	1c91c <__assert_fail@plt+0xb834>
   1c8c0:	b	1c93c <__assert_fail@plt+0xb854>
   1c8c4:	ldr	r0, [fp, #-12]
   1c8c8:	sub	r0, r0, #1
   1c8cc:	mvn	r1, #0
   1c8d0:	cmp	r1, r0
   1c8d4:	blt	1c91c <__assert_fail@plt+0xb834>
   1c8d8:	b	1c93c <__assert_fail@plt+0xb854>
   1c8dc:	ldr	r0, [fp, #-12]
   1c8e0:	rsbs	r1, r0, #0
   1c8e4:	mov	r2, #0
   1c8e8:	sbcs	r0, r2, r0, asr #31
   1c8ec:	blt	1c91c <__assert_fail@plt+0xb834>
   1c8f0:	b	1c93c <__assert_fail@plt+0xb854>
   1c8f4:	ldr	r0, [fp, #-12]
   1c8f8:	mvn	r1, #0
   1c8fc:	udiv	r0, r1, r0
   1c900:	ldr	r1, [fp, #-8]
   1c904:	ldr	r2, [r1]
   1c908:	ldr	r1, [r1, #4]
   1c90c:	subs	r0, r0, r2
   1c910:	rscs	r1, r1, #0
   1c914:	bge	1c93c <__assert_fail@plt+0xb854>
   1c918:	b	1c91c <__assert_fail@plt+0xb834>
   1c91c:	ldr	r0, [fp, #-8]
   1c920:	ldr	r0, [r0]
   1c924:	ldr	r1, [fp, #-12]
   1c928:	mul	r0, r0, r1
   1c92c:	mov	r1, #0
   1c930:	str	r1, [fp, #-20]	; 0xffffffec
   1c934:	str	r0, [fp, #-24]	; 0xffffffe8
   1c938:	b	1d3c0 <__assert_fail@plt+0xc2d8>
   1c93c:	ldr	r0, [fp, #-8]
   1c940:	ldr	r0, [r0]
   1c944:	ldr	r1, [fp, #-12]
   1c948:	mul	r0, r0, r1
   1c94c:	mov	r1, #0
   1c950:	str	r1, [fp, #-20]	; 0xffffffec
   1c954:	str	r0, [fp, #-24]	; 0xffffffe8
   1c958:	b	1d3f4 <__assert_fail@plt+0xc30c>
   1c95c:	b	1ce2c <__assert_fail@plt+0xbd44>
   1c960:	b	1c964 <__assert_fail@plt+0xb87c>
   1c964:	ldr	r0, [fp, #-12]
   1c968:	cmp	r0, #0
   1c96c:	bge	1cac4 <__assert_fail@plt+0xb9dc>
   1c970:	ldr	r0, [fp, #-8]
   1c974:	ldr	r0, [r0, #4]
   1c978:	cmn	r0, #1
   1c97c:	bgt	1ca24 <__assert_fail@plt+0xb93c>
   1c980:	b	1c984 <__assert_fail@plt+0xb89c>
   1c984:	b	1c988 <__assert_fail@plt+0xb8a0>
   1c988:	ldr	r0, [fp, #-8]
   1c98c:	ldr	r1, [r0]
   1c990:	ldr	r0, [r0, #4]
   1c994:	ldr	r2, [fp, #-12]
   1c998:	mvn	r3, #-2147483648	; 0x80000000
   1c99c:	sdiv	r2, r3, r2
   1c9a0:	subs	r1, r1, r2
   1c9a4:	sbcs	r0, r0, r2, asr #31
   1c9a8:	blt	1cb9c <__assert_fail@plt+0xbab4>
   1c9ac:	b	1cbbc <__assert_fail@plt+0xbad4>
   1c9b0:	b	1c9b4 <__assert_fail@plt+0xb8cc>
   1c9b4:	ldr	r0, [pc, #2656]	; 1d41c <__assert_fail@plt+0xc334>
   1c9b8:	ldr	r1, [fp, #-12]
   1c9bc:	cmp	r1, r0
   1c9c0:	blt	1c9d8 <__assert_fail@plt+0xb8f0>
   1c9c4:	b	1c9e4 <__assert_fail@plt+0xb8fc>
   1c9c8:	ldr	r0, [fp, #-12]
   1c9cc:	movw	r1, #0
   1c9d0:	cmp	r1, r0
   1c9d4:	bge	1c9e4 <__assert_fail@plt+0xb8fc>
   1c9d8:	movw	r0, #0
   1c9dc:	str	r0, [fp, #-52]	; 0xffffffcc
   1c9e0:	b	1c9fc <__assert_fail@plt+0xb914>
   1c9e4:	ldr	r0, [pc, #2612]	; 1d420 <__assert_fail@plt+0xc338>
   1c9e8:	ldr	r1, [fp, #-12]
   1c9ec:	movw	r2, #0
   1c9f0:	sub	r1, r2, r1
   1c9f4:	sdiv	r0, r0, r1
   1c9f8:	str	r0, [fp, #-52]	; 0xffffffcc
   1c9fc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1ca00:	ldr	r1, [fp, #-8]
   1ca04:	ldr	r2, [r1]
   1ca08:	ldr	r1, [r1, #4]
   1ca0c:	mvn	r1, r1
   1ca10:	mvn	r2, r2
   1ca14:	subs	r2, r2, r0
   1ca18:	sbcs	r0, r1, r0, asr #31
   1ca1c:	bge	1cb9c <__assert_fail@plt+0xbab4>
   1ca20:	b	1cbbc <__assert_fail@plt+0xbad4>
   1ca24:	ldr	r0, [fp, #-12]
   1ca28:	cmn	r0, #1
   1ca2c:	bne	1ca9c <__assert_fail@plt+0xb9b4>
   1ca30:	b	1ca34 <__assert_fail@plt+0xb94c>
   1ca34:	ldr	r0, [fp, #-8]
   1ca38:	ldr	r1, [r0]
   1ca3c:	ldr	r0, [r0, #4]
   1ca40:	adds	r1, r1, #-2147483648	; 0x80000000
   1ca44:	sbc	r0, r0, #0
   1ca48:	rsbs	r1, r1, #0
   1ca4c:	rscs	r0, r0, #0
   1ca50:	blt	1cb9c <__assert_fail@plt+0xbab4>
   1ca54:	b	1cbbc <__assert_fail@plt+0xbad4>
   1ca58:	ldr	r0, [fp, #-8]
   1ca5c:	ldr	r1, [r0]
   1ca60:	ldr	r0, [r0, #4]
   1ca64:	subs	r1, r1, #1
   1ca68:	sbcs	r0, r0, #0
   1ca6c:	blt	1cbbc <__assert_fail@plt+0xbad4>
   1ca70:	b	1ca74 <__assert_fail@plt+0xb98c>
   1ca74:	ldr	r0, [fp, #-8]
   1ca78:	ldr	r1, [r0]
   1ca7c:	ldr	r0, [r0, #4]
   1ca80:	subs	r1, r1, #1
   1ca84:	sbc	r0, r0, #0
   1ca88:	mvn	r2, #-2147483648	; 0x80000000
   1ca8c:	subs	r1, r2, r1
   1ca90:	rscs	r0, r0, #0
   1ca94:	blt	1cb9c <__assert_fail@plt+0xbab4>
   1ca98:	b	1cbbc <__assert_fail@plt+0xbad4>
   1ca9c:	ldr	r0, [fp, #-12]
   1caa0:	mov	r1, #-2147483648	; 0x80000000
   1caa4:	sdiv	r0, r1, r0
   1caa8:	ldr	r1, [fp, #-8]
   1caac:	ldr	r2, [r1]
   1cab0:	ldr	r1, [r1, #4]
   1cab4:	subs	r2, r0, r2
   1cab8:	rscs	r0, r1, r0, asr #31
   1cabc:	blt	1cb9c <__assert_fail@plt+0xbab4>
   1cac0:	b	1cbbc <__assert_fail@plt+0xbad4>
   1cac4:	ldr	r0, [fp, #-12]
   1cac8:	cmp	r0, #0
   1cacc:	bne	1cad4 <__assert_fail@plt+0xb9ec>
   1cad0:	b	1cbbc <__assert_fail@plt+0xbad4>
   1cad4:	ldr	r0, [fp, #-8]
   1cad8:	ldr	r0, [r0, #4]
   1cadc:	cmn	r0, #1
   1cae0:	bgt	1cb74 <__assert_fail@plt+0xba8c>
   1cae4:	b	1cae8 <__assert_fail@plt+0xba00>
   1cae8:	b	1caec <__assert_fail@plt+0xba04>
   1caec:	b	1cb48 <__assert_fail@plt+0xba60>
   1caf0:	b	1cb48 <__assert_fail@plt+0xba60>
   1caf4:	ldr	r0, [fp, #-8]
   1caf8:	ldr	r1, [r0]
   1cafc:	ldr	r0, [r0, #4]
   1cb00:	and	r0, r1, r0
   1cb04:	cmn	r0, #1
   1cb08:	bne	1cb48 <__assert_fail@plt+0xba60>
   1cb0c:	b	1cb14 <__assert_fail@plt+0xba2c>
   1cb10:	andhi	r0, r0, r1
   1cb14:	b	1cb18 <__assert_fail@plt+0xba30>
   1cb18:	ldr	r0, [fp, #-12]
   1cb1c:	add	r0, r0, #-2147483648	; 0x80000000
   1cb20:	movw	r1, #0
   1cb24:	cmp	r1, r0
   1cb28:	blt	1cb9c <__assert_fail@plt+0xbab4>
   1cb2c:	b	1cbbc <__assert_fail@plt+0xbad4>
   1cb30:	ldr	r0, [pc, #2280]	; 1d420 <__assert_fail@plt+0xc338>
   1cb34:	ldr	r1, [fp, #-12]
   1cb38:	sub	r1, r1, #1
   1cb3c:	cmp	r0, r1
   1cb40:	blt	1cb9c <__assert_fail@plt+0xbab4>
   1cb44:	b	1cbbc <__assert_fail@plt+0xbad4>
   1cb48:	ldr	r0, [fp, #-8]
   1cb4c:	ldr	r2, [r0]
   1cb50:	ldr	r3, [r0, #4]
   1cb54:	mov	r0, #-2147483648	; 0x80000000
   1cb58:	mvn	r1, #0
   1cb5c:	bl	1e140 <__assert_fail@plt+0xd058>
   1cb60:	ldr	r2, [fp, #-12]
   1cb64:	subs	r0, r0, r2
   1cb68:	sbcs	r1, r1, r2, asr #31
   1cb6c:	blt	1cb9c <__assert_fail@plt+0xbab4>
   1cb70:	b	1cbbc <__assert_fail@plt+0xbad4>
   1cb74:	ldr	r0, [fp, #-12]
   1cb78:	mvn	r1, #-2147483648	; 0x80000000
   1cb7c:	sdiv	r0, r1, r0
   1cb80:	ldr	r1, [fp, #-8]
   1cb84:	ldr	r2, [r1]
   1cb88:	ldr	r1, [r1, #4]
   1cb8c:	subs	r2, r0, r2
   1cb90:	rscs	r0, r1, r0, asr #31
   1cb94:	bge	1cbbc <__assert_fail@plt+0xbad4>
   1cb98:	b	1cb9c <__assert_fail@plt+0xbab4>
   1cb9c:	ldr	r0, [fp, #-8]
   1cba0:	ldr	r0, [r0]
   1cba4:	ldr	r1, [fp, #-12]
   1cba8:	mul	r0, r0, r1
   1cbac:	asr	r1, r0, #31
   1cbb0:	str	r0, [fp, #-24]	; 0xffffffe8
   1cbb4:	str	r1, [fp, #-20]	; 0xffffffec
   1cbb8:	b	1d3c0 <__assert_fail@plt+0xc2d8>
   1cbbc:	ldr	r0, [fp, #-8]
   1cbc0:	ldr	r0, [r0]
   1cbc4:	ldr	r1, [fp, #-12]
   1cbc8:	mul	r0, r0, r1
   1cbcc:	asr	r1, r0, #31
   1cbd0:	str	r0, [fp, #-24]	; 0xffffffe8
   1cbd4:	str	r1, [fp, #-20]	; 0xffffffec
   1cbd8:	b	1d3f4 <__assert_fail@plt+0xc30c>
   1cbdc:	ldr	r0, [fp, #-12]
   1cbe0:	cmp	r0, #0
   1cbe4:	bge	1cd2c <__assert_fail@plt+0xbc44>
   1cbe8:	ldr	r0, [fp, #-8]
   1cbec:	ldr	r0, [r0, #4]
   1cbf0:	cmn	r0, #1
   1cbf4:	bgt	1cc9c <__assert_fail@plt+0xbbb4>
   1cbf8:	b	1cbfc <__assert_fail@plt+0xbb14>
   1cbfc:	b	1cc28 <__assert_fail@plt+0xbb40>
   1cc00:	ldr	r0, [fp, #-8]
   1cc04:	ldr	r1, [r0]
   1cc08:	ldr	r0, [r0, #4]
   1cc0c:	ldr	r2, [fp, #-12]
   1cc10:	mvn	r3, #0
   1cc14:	udiv	r2, r3, r2
   1cc18:	subs	r1, r1, r2
   1cc1c:	sbcs	r0, r0, #0
   1cc20:	blt	1cdec <__assert_fail@plt+0xbd04>
   1cc24:	b	1ce0c <__assert_fail@plt+0xbd24>
   1cc28:	b	1cc2c <__assert_fail@plt+0xbb44>
   1cc2c:	ldr	r0, [pc, #2024]	; 1d41c <__assert_fail@plt+0xc334>
   1cc30:	ldr	r1, [fp, #-12]
   1cc34:	cmp	r1, r0
   1cc38:	blt	1cc50 <__assert_fail@plt+0xbb68>
   1cc3c:	b	1cc5c <__assert_fail@plt+0xbb74>
   1cc40:	ldr	r0, [fp, #-12]
   1cc44:	movw	r1, #0
   1cc48:	cmp	r1, r0
   1cc4c:	bge	1cc5c <__assert_fail@plt+0xbb74>
   1cc50:	movw	r0, #1
   1cc54:	str	r0, [sp, #56]	; 0x38
   1cc58:	b	1cc74 <__assert_fail@plt+0xbb8c>
   1cc5c:	ldr	r0, [fp, #-12]
   1cc60:	movw	r1, #0
   1cc64:	sub	r0, r1, r0
   1cc68:	mvn	r1, #0
   1cc6c:	udiv	r0, r1, r0
   1cc70:	str	r0, [sp, #56]	; 0x38
   1cc74:	ldr	r0, [sp, #56]	; 0x38
   1cc78:	ldr	r1, [fp, #-8]
   1cc7c:	ldr	r2, [r1]
   1cc80:	ldr	r1, [r1, #4]
   1cc84:	mvn	r1, r1
   1cc88:	mvn	r2, r2
   1cc8c:	subs	r0, r2, r0
   1cc90:	sbcs	r1, r1, #0
   1cc94:	bge	1cdec <__assert_fail@plt+0xbd04>
   1cc98:	b	1ce0c <__assert_fail@plt+0xbd24>
   1cc9c:	b	1cca0 <__assert_fail@plt+0xbbb8>
   1cca0:	b	1cd10 <__assert_fail@plt+0xbc28>
   1cca4:	b	1cd10 <__assert_fail@plt+0xbc28>
   1cca8:	ldr	r0, [fp, #-12]
   1ccac:	cmn	r0, #1
   1ccb0:	bne	1cd10 <__assert_fail@plt+0xbc28>
   1ccb4:	b	1ccb8 <__assert_fail@plt+0xbbd0>
   1ccb8:	ldr	r0, [fp, #-8]
   1ccbc:	ldr	r1, [r0]
   1ccc0:	ldr	r0, [r0, #4]
   1ccc4:	rsbs	r1, r1, #0
   1ccc8:	rscs	r0, r0, #0
   1cccc:	blt	1cdec <__assert_fail@plt+0xbd04>
   1ccd0:	b	1ce0c <__assert_fail@plt+0xbd24>
   1ccd4:	ldr	r0, [fp, #-8]
   1ccd8:	ldr	r1, [r0]
   1ccdc:	ldr	r0, [r0, #4]
   1cce0:	subs	r1, r1, #1
   1cce4:	sbcs	r0, r0, #0
   1cce8:	blt	1ce0c <__assert_fail@plt+0xbd24>
   1ccec:	b	1ccf0 <__assert_fail@plt+0xbc08>
   1ccf0:	ldr	r0, [fp, #-8]
   1ccf4:	ldr	r1, [r0]
   1ccf8:	ldr	r0, [r0, #4]
   1ccfc:	subs	r1, r1, #1
   1cd00:	sbc	r0, r0, #0
   1cd04:	cmn	r0, #1
   1cd08:	bgt	1cdec <__assert_fail@plt+0xbd04>
   1cd0c:	b	1ce0c <__assert_fail@plt+0xbd24>
   1cd10:	ldr	r0, [fp, #-8]
   1cd14:	ldr	r1, [r0]
   1cd18:	ldr	r0, [r0, #4]
   1cd1c:	rsbs	r1, r1, #0
   1cd20:	rscs	r0, r0, #0
   1cd24:	blt	1cdec <__assert_fail@plt+0xbd04>
   1cd28:	b	1ce0c <__assert_fail@plt+0xbd24>
   1cd2c:	ldr	r0, [fp, #-12]
   1cd30:	cmp	r0, #0
   1cd34:	bne	1cd3c <__assert_fail@plt+0xbc54>
   1cd38:	b	1ce0c <__assert_fail@plt+0xbd24>
   1cd3c:	ldr	r0, [fp, #-8]
   1cd40:	ldr	r0, [r0, #4]
   1cd44:	cmn	r0, #1
   1cd48:	bgt	1cdc4 <__assert_fail@plt+0xbcdc>
   1cd4c:	b	1cd50 <__assert_fail@plt+0xbc68>
   1cd50:	b	1cd54 <__assert_fail@plt+0xbc6c>
   1cd54:	b	1cdac <__assert_fail@plt+0xbcc4>
   1cd58:	b	1cdac <__assert_fail@plt+0xbcc4>
   1cd5c:	ldr	r0, [fp, #-8]
   1cd60:	ldr	r1, [r0]
   1cd64:	ldr	r0, [r0, #4]
   1cd68:	and	r0, r1, r0
   1cd6c:	cmn	r0, #1
   1cd70:	bne	1cdac <__assert_fail@plt+0xbcc4>
   1cd74:	b	1cd78 <__assert_fail@plt+0xbc90>
   1cd78:	b	1cd7c <__assert_fail@plt+0xbc94>
   1cd7c:	ldr	r0, [fp, #-12]
   1cd80:	add	r0, r0, #0
   1cd84:	movw	r1, #0
   1cd88:	cmp	r1, r0
   1cd8c:	blt	1cdec <__assert_fail@plt+0xbd04>
   1cd90:	b	1ce0c <__assert_fail@plt+0xbd24>
   1cd94:	ldr	r0, [fp, #-12]
   1cd98:	sub	r0, r0, #1
   1cd9c:	mvn	r1, #0
   1cda0:	cmp	r1, r0
   1cda4:	blt	1cdec <__assert_fail@plt+0xbd04>
   1cda8:	b	1ce0c <__assert_fail@plt+0xbd24>
   1cdac:	ldr	r0, [fp, #-12]
   1cdb0:	rsbs	r1, r0, #0
   1cdb4:	mov	r2, #0
   1cdb8:	sbcs	r0, r2, r0, asr #31
   1cdbc:	blt	1cdec <__assert_fail@plt+0xbd04>
   1cdc0:	b	1ce0c <__assert_fail@plt+0xbd24>
   1cdc4:	ldr	r0, [fp, #-12]
   1cdc8:	mvn	r1, #0
   1cdcc:	udiv	r0, r1, r0
   1cdd0:	ldr	r1, [fp, #-8]
   1cdd4:	ldr	r2, [r1]
   1cdd8:	ldr	r1, [r1, #4]
   1cddc:	subs	r0, r0, r2
   1cde0:	rscs	r1, r1, #0
   1cde4:	bge	1ce0c <__assert_fail@plt+0xbd24>
   1cde8:	b	1cdec <__assert_fail@plt+0xbd04>
   1cdec:	ldr	r0, [fp, #-8]
   1cdf0:	ldr	r0, [r0]
   1cdf4:	ldr	r1, [fp, #-12]
   1cdf8:	mul	r0, r0, r1
   1cdfc:	mov	r1, #0
   1ce00:	str	r1, [fp, #-20]	; 0xffffffec
   1ce04:	str	r0, [fp, #-24]	; 0xffffffe8
   1ce08:	b	1d3c0 <__assert_fail@plt+0xc2d8>
   1ce0c:	ldr	r0, [fp, #-8]
   1ce10:	ldr	r0, [r0]
   1ce14:	ldr	r1, [fp, #-12]
   1ce18:	mul	r0, r0, r1
   1ce1c:	mov	r1, #0
   1ce20:	str	r1, [fp, #-20]	; 0xffffffec
   1ce24:	str	r0, [fp, #-24]	; 0xffffffe8
   1ce28:	b	1d3f4 <__assert_fail@plt+0xc30c>
   1ce2c:	b	1ce30 <__assert_fail@plt+0xbd48>
   1ce30:	ldr	r0, [fp, #-12]
   1ce34:	cmp	r0, #0
   1ce38:	bge	1cfd4 <__assert_fail@plt+0xbeec>
   1ce3c:	ldr	r0, [fp, #-8]
   1ce40:	ldr	r0, [r0, #4]
   1ce44:	cmn	r0, #1
   1ce48:	bgt	1cf38 <__assert_fail@plt+0xbe50>
   1ce4c:	b	1ce50 <__assert_fail@plt+0xbd68>
   1ce50:	b	1ce54 <__assert_fail@plt+0xbd6c>
   1ce54:	ldr	r0, [fp, #-8]
   1ce58:	ldr	r1, [r0]
   1ce5c:	ldr	r0, [r0, #4]
   1ce60:	ldr	r2, [fp, #-12]
   1ce64:	asr	r3, r2, #31
   1ce68:	mvn	ip, #0
   1ce6c:	mvn	lr, #-2147483648	; 0x80000000
   1ce70:	str	r0, [sp, #52]	; 0x34
   1ce74:	mov	r0, ip
   1ce78:	str	r1, [sp, #48]	; 0x30
   1ce7c:	mov	r1, lr
   1ce80:	bl	1e140 <__assert_fail@plt+0xd058>
   1ce84:	ldr	r2, [sp, #48]	; 0x30
   1ce88:	subs	r0, r2, r0
   1ce8c:	ldr	r2, [sp, #52]	; 0x34
   1ce90:	sbcs	r1, r2, r1
   1ce94:	blt	1d0b0 <__assert_fail@plt+0xbfc8>
   1ce98:	b	1d0dc <__assert_fail@plt+0xbff4>
   1ce9c:	b	1cea0 <__assert_fail@plt+0xbdb8>
   1cea0:	ldr	r0, [pc, #1396]	; 1d41c <__assert_fail@plt+0xc334>
   1cea4:	ldr	r1, [fp, #-12]
   1cea8:	cmp	r1, r0
   1ceac:	blt	1cec4 <__assert_fail@plt+0xbddc>
   1ceb0:	b	1ced8 <__assert_fail@plt+0xbdf0>
   1ceb4:	ldr	r0, [fp, #-12]
   1ceb8:	movw	r1, #0
   1cebc:	cmp	r1, r0
   1cec0:	bge	1ced8 <__assert_fail@plt+0xbdf0>
   1cec4:	mov	r0, #0
   1cec8:	mvn	r1, #0
   1cecc:	str	r1, [sp, #44]	; 0x2c
   1ced0:	str	r0, [sp, #40]	; 0x28
   1ced4:	b	1cf0c <__assert_fail@plt+0xbe24>
   1ced8:	ldr	r0, [fp, #-12]
   1cedc:	rsb	r0, r0, #0
   1cee0:	asr	r3, r0, #31
   1cee4:	mvn	r1, #0
   1cee8:	mvn	r2, #-2147483648	; 0x80000000
   1ceec:	str	r0, [sp, #36]	; 0x24
   1cef0:	mov	r0, r1
   1cef4:	mov	r1, r2
   1cef8:	ldr	r2, [sp, #36]	; 0x24
   1cefc:	bl	1e140 <__assert_fail@plt+0xd058>
   1cf00:	str	r0, [sp, #44]	; 0x2c
   1cf04:	str	r1, [sp, #40]	; 0x28
   1cf08:	b	1cf0c <__assert_fail@plt+0xbe24>
   1cf0c:	ldr	r0, [sp, #40]	; 0x28
   1cf10:	ldr	r1, [sp, #44]	; 0x2c
   1cf14:	ldr	r2, [fp, #-8]
   1cf18:	ldr	r3, [r2]
   1cf1c:	ldr	r2, [r2, #4]
   1cf20:	mvn	r2, r2
   1cf24:	mvn	r3, r3
   1cf28:	subs	r1, r3, r1
   1cf2c:	sbcs	r0, r2, r0
   1cf30:	bge	1d0b0 <__assert_fail@plt+0xbfc8>
   1cf34:	b	1d0dc <__assert_fail@plt+0xbff4>
   1cf38:	ldr	r0, [fp, #-12]
   1cf3c:	cmn	r0, #1
   1cf40:	bne	1cf94 <__assert_fail@plt+0xbeac>
   1cf44:	b	1cf48 <__assert_fail@plt+0xbe60>
   1cf48:	ldr	r0, [fp, #-8]
   1cf4c:	ldr	r1, [r0]
   1cf50:	ldr	r0, [r0, #4]
   1cf54:	add	r0, r0, #-2147483648	; 0x80000000
   1cf58:	rsbs	r1, r1, #0
   1cf5c:	rscs	r0, r0, #0
   1cf60:	blt	1d0b0 <__assert_fail@plt+0xbfc8>
   1cf64:	b	1d0dc <__assert_fail@plt+0xbff4>
   1cf68:	ldr	r0, [fp, #-8]
   1cf6c:	ldr	r1, [r0]
   1cf70:	ldr	r0, [r0, #4]
   1cf74:	subs	r1, r1, #1
   1cf78:	sbcs	r0, r0, #0
   1cf7c:	blt	1d0dc <__assert_fail@plt+0xbff4>
   1cf80:	b	1cf84 <__assert_fail@plt+0xbe9c>
   1cf84:	mov	r0, #0
   1cf88:	cmp	r0, #0
   1cf8c:	bne	1d0b0 <__assert_fail@plt+0xbfc8>
   1cf90:	b	1d0dc <__assert_fail@plt+0xbff4>
   1cf94:	ldr	r0, [fp, #-12]
   1cf98:	asr	r3, r0, #31
   1cf9c:	mov	r1, #0
   1cfa0:	mov	r2, #-2147483648	; 0x80000000
   1cfa4:	str	r0, [sp, #32]
   1cfa8:	mov	r0, r1
   1cfac:	mov	r1, r2
   1cfb0:	ldr	r2, [sp, #32]
   1cfb4:	bl	1e140 <__assert_fail@plt+0xd058>
   1cfb8:	ldr	r2, [fp, #-8]
   1cfbc:	ldr	r3, [r2]
   1cfc0:	ldr	r2, [r2, #4]
   1cfc4:	subs	r0, r0, r3
   1cfc8:	sbcs	r1, r1, r2
   1cfcc:	blt	1d0b0 <__assert_fail@plt+0xbfc8>
   1cfd0:	b	1d0dc <__assert_fail@plt+0xbff4>
   1cfd4:	ldr	r0, [fp, #-12]
   1cfd8:	cmp	r0, #0
   1cfdc:	bne	1cfe4 <__assert_fail@plt+0xbefc>
   1cfe0:	b	1d0dc <__assert_fail@plt+0xbff4>
   1cfe4:	ldr	r0, [fp, #-8]
   1cfe8:	ldr	r0, [r0, #4]
   1cfec:	cmn	r0, #1
   1cff0:	bgt	1d070 <__assert_fail@plt+0xbf88>
   1cff4:	b	1cff8 <__assert_fail@plt+0xbf10>
   1cff8:	ldr	r0, [fp, #-8]
   1cffc:	ldr	r1, [r0]
   1d000:	ldr	r0, [r0, #4]
   1d004:	and	r0, r1, r0
   1d008:	cmn	r0, #1
   1d00c:	bne	1d044 <__assert_fail@plt+0xbf5c>
   1d010:	b	1d014 <__assert_fail@plt+0xbf2c>
   1d014:	b	1d018 <__assert_fail@plt+0xbf30>
   1d018:	ldr	r0, [fp, #-12]
   1d01c:	mov	r1, #-2147483648	; 0x80000000
   1d020:	add	r1, r1, r0, asr #31
   1d024:	rsbs	r0, r0, #0
   1d028:	rscs	r1, r1, #0
   1d02c:	blt	1d0b0 <__assert_fail@plt+0xbfc8>
   1d030:	b	1d0dc <__assert_fail@plt+0xbff4>
   1d034:	mov	r0, #0
   1d038:	cmp	r0, #0
   1d03c:	bne	1d0b0 <__assert_fail@plt+0xbfc8>
   1d040:	b	1d0dc <__assert_fail@plt+0xbff4>
   1d044:	ldr	r0, [fp, #-8]
   1d048:	ldr	r2, [r0]
   1d04c:	ldr	r3, [r0, #4]
   1d050:	mov	r0, #0
   1d054:	mov	r1, #-2147483648	; 0x80000000
   1d058:	bl	1e140 <__assert_fail@plt+0xd058>
   1d05c:	ldr	r2, [fp, #-12]
   1d060:	subs	r0, r0, r2
   1d064:	sbcs	r1, r1, r2, asr #31
   1d068:	blt	1d0b0 <__assert_fail@plt+0xbfc8>
   1d06c:	b	1d0dc <__assert_fail@plt+0xbff4>
   1d070:	ldr	r0, [fp, #-12]
   1d074:	asr	r3, r0, #31
   1d078:	mvn	r1, #0
   1d07c:	mvn	r2, #-2147483648	; 0x80000000
   1d080:	str	r0, [sp, #28]
   1d084:	mov	r0, r1
   1d088:	mov	r1, r2
   1d08c:	ldr	r2, [sp, #28]
   1d090:	bl	1e140 <__assert_fail@plt+0xd058>
   1d094:	ldr	r2, [fp, #-8]
   1d098:	ldr	r3, [r2]
   1d09c:	ldr	r2, [r2, #4]
   1d0a0:	subs	r0, r0, r3
   1d0a4:	sbcs	r1, r1, r2
   1d0a8:	bge	1d0dc <__assert_fail@plt+0xbff4>
   1d0ac:	b	1d0b0 <__assert_fail@plt+0xbfc8>
   1d0b0:	ldr	r0, [fp, #-8]
   1d0b4:	ldr	r1, [r0]
   1d0b8:	ldr	r0, [r0, #4]
   1d0bc:	ldr	r2, [fp, #-12]
   1d0c0:	asr	r3, r2, #31
   1d0c4:	umull	ip, lr, r1, r2
   1d0c8:	mla	r1, r1, r3, lr
   1d0cc:	mla	r0, r0, r2, r1
   1d0d0:	str	ip, [fp, #-24]	; 0xffffffe8
   1d0d4:	str	r0, [fp, #-20]	; 0xffffffec
   1d0d8:	b	1d3c0 <__assert_fail@plt+0xc2d8>
   1d0dc:	ldr	r0, [fp, #-8]
   1d0e0:	ldr	r1, [r0]
   1d0e4:	ldr	r0, [r0, #4]
   1d0e8:	ldr	r2, [fp, #-12]
   1d0ec:	asr	r3, r2, #31
   1d0f0:	umull	ip, lr, r1, r2
   1d0f4:	mla	r1, r1, r3, lr
   1d0f8:	mla	r0, r0, r2, r1
   1d0fc:	str	ip, [fp, #-24]	; 0xffffffe8
   1d100:	str	r0, [fp, #-20]	; 0xffffffec
   1d104:	b	1d3f4 <__assert_fail@plt+0xc30c>
   1d108:	ldr	r0, [fp, #-12]
   1d10c:	cmp	r0, #0
   1d110:	bge	1d298 <__assert_fail@plt+0xc1b0>
   1d114:	ldr	r0, [fp, #-8]
   1d118:	ldr	r0, [r0, #4]
   1d11c:	cmn	r0, #1
   1d120:	bgt	1d208 <__assert_fail@plt+0xc120>
   1d124:	b	1d128 <__assert_fail@plt+0xc040>
   1d128:	b	1d174 <__assert_fail@plt+0xc08c>
   1d12c:			; <UNDEFINED> instruction: 0xffff8000
   1d130:	ldr	r0, [fp, #-8]
   1d134:	ldr	r1, [r0]
   1d138:	ldr	r0, [r0, #4]
   1d13c:	ldr	r2, [fp, #-12]
   1d140:	asr	r3, r2, #31
   1d144:	mvn	ip, #0
   1d148:	str	r0, [sp, #24]
   1d14c:	mov	r0, ip
   1d150:	str	r1, [sp, #20]
   1d154:	mov	r1, ip
   1d158:	bl	1e214 <__assert_fail@plt+0xd12c>
   1d15c:	ldr	r2, [sp, #20]
   1d160:	subs	r0, r2, r0
   1d164:	ldr	r2, [sp, #24]
   1d168:	sbcs	r1, r2, r1
   1d16c:	bcc	1d368 <__assert_fail@plt+0xc280>
   1d170:	b	1d394 <__assert_fail@plt+0xc2ac>
   1d174:	b	1d178 <__assert_fail@plt+0xc090>
   1d178:	ldr	r0, [pc, #668]	; 1d41c <__assert_fail@plt+0xc334>
   1d17c:	ldr	r1, [fp, #-12]
   1d180:	cmp	r1, r0
   1d184:	blt	1d19c <__assert_fail@plt+0xc0b4>
   1d188:	b	1d1b0 <__assert_fail@plt+0xc0c8>
   1d18c:	ldr	r0, [fp, #-12]
   1d190:	movw	r1, #0
   1d194:	cmp	r1, r0
   1d198:	bge	1d1b0 <__assert_fail@plt+0xc0c8>
   1d19c:	mov	r0, #1
   1d1a0:	mvn	r1, #0
   1d1a4:	str	r1, [sp, #16]
   1d1a8:	str	r0, [sp, #12]
   1d1ac:	b	1d1dc <__assert_fail@plt+0xc0f4>
   1d1b0:	ldr	r0, [fp, #-12]
   1d1b4:	rsb	r0, r0, #0
   1d1b8:	asr	r3, r0, #31
   1d1bc:	mvn	r1, #0
   1d1c0:	str	r0, [sp, #8]
   1d1c4:	mov	r0, r1
   1d1c8:	ldr	r2, [sp, #8]
   1d1cc:	bl	1e214 <__assert_fail@plt+0xd12c>
   1d1d0:	str	r0, [sp, #16]
   1d1d4:	str	r1, [sp, #12]
   1d1d8:	b	1d1dc <__assert_fail@plt+0xc0f4>
   1d1dc:	ldr	r0, [sp, #12]
   1d1e0:	ldr	r1, [sp, #16]
   1d1e4:	ldr	r2, [fp, #-8]
   1d1e8:	ldr	r3, [r2]
   1d1ec:	ldr	r2, [r2, #4]
   1d1f0:	mvn	r2, r2
   1d1f4:	mvn	r3, r3
   1d1f8:	subs	r1, r3, r1
   1d1fc:	sbcs	r0, r2, r0
   1d200:	bcs	1d368 <__assert_fail@plt+0xc280>
   1d204:	b	1d394 <__assert_fail@plt+0xc2ac>
   1d208:	b	1d20c <__assert_fail@plt+0xc124>
   1d20c:	b	1d27c <__assert_fail@plt+0xc194>
   1d210:	b	1d27c <__assert_fail@plt+0xc194>
   1d214:	ldr	r0, [fp, #-12]
   1d218:	cmn	r0, #1
   1d21c:	bne	1d27c <__assert_fail@plt+0xc194>
   1d220:	b	1d224 <__assert_fail@plt+0xc13c>
   1d224:	ldr	r0, [fp, #-8]
   1d228:	ldr	r1, [r0]
   1d22c:	ldr	r0, [r0, #4]
   1d230:	rsbs	r1, r1, #0
   1d234:	rscs	r0, r0, #0
   1d238:	blt	1d368 <__assert_fail@plt+0xc280>
   1d23c:	b	1d394 <__assert_fail@plt+0xc2ac>
   1d240:	ldr	r0, [fp, #-8]
   1d244:	ldr	r1, [r0]
   1d248:	ldr	r0, [r0, #4]
   1d24c:	subs	r1, r1, #1
   1d250:	sbcs	r0, r0, #0
   1d254:	blt	1d394 <__assert_fail@plt+0xc2ac>
   1d258:	b	1d25c <__assert_fail@plt+0xc174>
   1d25c:	ldr	r0, [fp, #-8]
   1d260:	ldr	r1, [r0]
   1d264:	ldr	r0, [r0, #4]
   1d268:	subs	r1, r1, #1
   1d26c:	sbc	r0, r0, #0
   1d270:	cmn	r0, #1
   1d274:	bgt	1d368 <__assert_fail@plt+0xc280>
   1d278:	b	1d394 <__assert_fail@plt+0xc2ac>
   1d27c:	ldr	r0, [fp, #-8]
   1d280:	ldr	r1, [r0]
   1d284:	ldr	r0, [r0, #4]
   1d288:	rsbs	r1, r1, #0
   1d28c:	rscs	r0, r0, #0
   1d290:	blt	1d368 <__assert_fail@plt+0xc280>
   1d294:	b	1d394 <__assert_fail@plt+0xc2ac>
   1d298:	ldr	r0, [fp, #-12]
   1d29c:	cmp	r0, #0
   1d2a0:	bne	1d2a8 <__assert_fail@plt+0xc1c0>
   1d2a4:	b	1d394 <__assert_fail@plt+0xc2ac>
   1d2a8:	ldr	r0, [fp, #-8]
   1d2ac:	ldr	r0, [r0, #4]
   1d2b0:	cmn	r0, #1
   1d2b4:	bgt	1d330 <__assert_fail@plt+0xc248>
   1d2b8:	b	1d2bc <__assert_fail@plt+0xc1d4>
   1d2bc:	b	1d2c0 <__assert_fail@plt+0xc1d8>
   1d2c0:	b	1d318 <__assert_fail@plt+0xc230>
   1d2c4:	b	1d318 <__assert_fail@plt+0xc230>
   1d2c8:	ldr	r0, [fp, #-8]
   1d2cc:	ldr	r1, [r0]
   1d2d0:	ldr	r0, [r0, #4]
   1d2d4:	and	r0, r1, r0
   1d2d8:	cmn	r0, #1
   1d2dc:	bne	1d318 <__assert_fail@plt+0xc230>
   1d2e0:	b	1d2e4 <__assert_fail@plt+0xc1fc>
   1d2e4:	b	1d2e8 <__assert_fail@plt+0xc200>
   1d2e8:	ldr	r0, [fp, #-12]
   1d2ec:	add	r0, r0, #0
   1d2f0:	movw	r1, #0
   1d2f4:	cmp	r1, r0
   1d2f8:	blt	1d368 <__assert_fail@plt+0xc280>
   1d2fc:	b	1d394 <__assert_fail@plt+0xc2ac>
   1d300:	ldr	r0, [fp, #-12]
   1d304:	sub	r0, r0, #1
   1d308:	mvn	r1, #0
   1d30c:	cmp	r1, r0
   1d310:	blt	1d368 <__assert_fail@plt+0xc280>
   1d314:	b	1d394 <__assert_fail@plt+0xc2ac>
   1d318:	ldr	r0, [fp, #-12]
   1d31c:	rsbs	r1, r0, #0
   1d320:	mov	r2, #0
   1d324:	sbcs	r0, r2, r0, asr #31
   1d328:	blt	1d368 <__assert_fail@plt+0xc280>
   1d32c:	b	1d394 <__assert_fail@plt+0xc2ac>
   1d330:	ldr	r0, [fp, #-12]
   1d334:	asr	r3, r0, #31
   1d338:	mvn	r1, #0
   1d33c:	str	r0, [sp, #4]
   1d340:	mov	r0, r1
   1d344:	ldr	r2, [sp, #4]
   1d348:	bl	1e214 <__assert_fail@plt+0xd12c>
   1d34c:	ldr	r2, [fp, #-8]
   1d350:	ldr	r3, [r2]
   1d354:	ldr	r2, [r2, #4]
   1d358:	subs	r0, r0, r3
   1d35c:	sbcs	r1, r1, r2
   1d360:	bcs	1d394 <__assert_fail@plt+0xc2ac>
   1d364:	b	1d368 <__assert_fail@plt+0xc280>
   1d368:	ldr	r0, [fp, #-8]
   1d36c:	ldr	r1, [r0]
   1d370:	ldr	r0, [r0, #4]
   1d374:	ldr	r2, [fp, #-12]
   1d378:	asr	r3, r2, #31
   1d37c:	umull	ip, lr, r1, r2
   1d380:	mla	r1, r1, r3, lr
   1d384:	mla	r0, r0, r2, r1
   1d388:	str	ip, [fp, #-24]	; 0xffffffe8
   1d38c:	str	r0, [fp, #-20]	; 0xffffffec
   1d390:	b	1d3c0 <__assert_fail@plt+0xc2d8>
   1d394:	ldr	r0, [fp, #-8]
   1d398:	ldr	r1, [r0]
   1d39c:	ldr	r0, [r0, #4]
   1d3a0:	ldr	r2, [fp, #-12]
   1d3a4:	asr	r3, r2, #31
   1d3a8:	umull	ip, lr, r1, r2
   1d3ac:	mla	r1, r1, r3, lr
   1d3b0:	mla	r0, r0, r2, r1
   1d3b4:	str	ip, [fp, #-24]	; 0xffffffe8
   1d3b8:	str	r0, [fp, #-20]	; 0xffffffec
   1d3bc:	b	1d3f4 <__assert_fail@plt+0xc30c>
   1d3c0:	ldr	r0, [fp, #-8]
   1d3c4:	ldr	r1, [r0, #4]
   1d3c8:	mvn	r2, #0
   1d3cc:	cmp	r1, #0
   1d3d0:	movwmi	r2, #0
   1d3d4:	mvn	r3, #-2147483648	; 0x80000000
   1d3d8:	cmp	r1, #0
   1d3dc:	movmi	r3, #-2147483648	; 0x80000000
   1d3e0:	str	r3, [r0, #4]
   1d3e4:	str	r2, [r0]
   1d3e8:	movw	r0, #1
   1d3ec:	str	r0, [fp, #-4]
   1d3f0:	b	1d410 <__assert_fail@plt+0xc328>
   1d3f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d3f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d3fc:	ldr	r2, [fp, #-8]
   1d400:	str	r1, [r2, #4]
   1d404:	str	r0, [r2]
   1d408:	movw	r0, #0
   1d40c:	str	r0, [fp, #-4]
   1d410:	ldr	r0, [fp, #-4]
   1d414:	mov	sp, fp
   1d418:	pop	{fp, pc}
   1d41c:	andhi	r0, r0, r1
   1d420:	svcvc	0x00ffffff
   1d424:	push	{fp, lr}
   1d428:	mov	fp, sp
   1d42c:	sub	sp, sp, #16
   1d430:	str	r0, [fp, #-4]
   1d434:	str	r1, [sp, #8]
   1d438:	str	r2, [sp, #4]
   1d43c:	movw	r0, #0
   1d440:	str	r0, [sp]
   1d444:	ldr	r0, [sp, #4]
   1d448:	mvn	r1, #0
   1d44c:	add	r1, r0, r1
   1d450:	str	r1, [sp, #4]
   1d454:	cmp	r0, #0
   1d458:	beq	1d478 <__assert_fail@plt+0xc390>
   1d45c:	ldr	r0, [fp, #-4]
   1d460:	ldr	r1, [sp, #8]
   1d464:	bl	1baa0 <__assert_fail@plt+0xa9b8>
   1d468:	ldr	r1, [sp]
   1d46c:	orr	r0, r1, r0
   1d470:	str	r0, [sp]
   1d474:	b	1d444 <__assert_fail@plt+0xc35c>
   1d478:	ldr	r0, [sp]
   1d47c:	mov	sp, fp
   1d480:	pop	{fp, pc}
   1d484:	push	{fp, lr}
   1d488:	mov	fp, sp
   1d48c:	sub	sp, sp, #16
   1d490:	str	r0, [sp, #8]
   1d494:	str	r1, [sp, #4]
   1d498:	ldr	r0, [sp, #8]
   1d49c:	cmp	r0, #0
   1d4a0:	beq	1d4b0 <__assert_fail@plt+0xc3c8>
   1d4a4:	ldr	r0, [sp, #4]
   1d4a8:	cmp	r0, #0
   1d4ac:	bne	1d4bc <__assert_fail@plt+0xc3d4>
   1d4b0:	movw	r0, #1
   1d4b4:	str	r0, [sp, #4]
   1d4b8:	str	r0, [sp, #8]
   1d4bc:	ldr	r0, [sp, #4]
   1d4c0:	cmp	r0, #0
   1d4c4:	beq	1d4f8 <__assert_fail@plt+0xc410>
   1d4c8:	ldr	r0, [pc, #76]	; 1d51c <__assert_fail@plt+0xc434>
   1d4cc:	ldr	r1, [sp, #4]
   1d4d0:	udiv	r0, r0, r1
   1d4d4:	ldr	r1, [sp, #8]
   1d4d8:	cmp	r0, r1
   1d4dc:	bcs	1d4f8 <__assert_fail@plt+0xc410>
   1d4e0:	bl	11010 <__errno_location@plt>
   1d4e4:	movw	r1, #12
   1d4e8:	str	r1, [r0]
   1d4ec:	movw	r0, #0
   1d4f0:	str	r0, [fp, #-4]
   1d4f4:	b	1d510 <__assert_fail@plt+0xc428>
   1d4f8:	ldr	r0, [sp, #8]
   1d4fc:	ldr	r1, [sp, #4]
   1d500:	bl	10e6c <calloc@plt>
   1d504:	str	r0, [sp]
   1d508:	ldr	r0, [sp]
   1d50c:	str	r0, [fp, #-4]
   1d510:	ldr	r0, [fp, #-4]
   1d514:	mov	sp, fp
   1d518:	pop	{fp, pc}
   1d51c:	svcvc	0x00ffffff
   1d520:	push	{fp, lr}
   1d524:	mov	fp, sp
   1d528:	sub	sp, sp, #16
   1d52c:	str	r0, [sp, #8]
   1d530:	ldr	r0, [sp, #8]
   1d534:	cmp	r0, #0
   1d538:	bne	1d544 <__assert_fail@plt+0xc45c>
   1d53c:	movw	r0, #1
   1d540:	str	r0, [sp, #8]
   1d544:	ldr	r0, [pc, #64]	; 1d58c <__assert_fail@plt+0xc4a4>
   1d548:	ldr	r1, [sp, #8]
   1d54c:	cmp	r0, r1
   1d550:	bcs	1d56c <__assert_fail@plt+0xc484>
   1d554:	bl	11010 <__errno_location@plt>
   1d558:	movw	r1, #12
   1d55c:	str	r1, [r0]
   1d560:	movw	r0, #0
   1d564:	str	r0, [fp, #-4]
   1d568:	b	1d580 <__assert_fail@plt+0xc498>
   1d56c:	ldr	r0, [sp, #8]
   1d570:	bl	10f8c <malloc@plt>
   1d574:	str	r0, [sp, #4]
   1d578:	ldr	r0, [sp, #4]
   1d57c:	str	r0, [fp, #-4]
   1d580:	ldr	r0, [fp, #-4]
   1d584:	mov	sp, fp
   1d588:	pop	{fp, pc}
   1d58c:	svcvc	0x00ffffff
   1d590:	push	{fp, lr}
   1d594:	mov	fp, sp
   1d598:	sub	sp, sp, #16
   1d59c:	str	r0, [sp, #8]
   1d5a0:	str	r1, [sp, #4]
   1d5a4:	ldr	r0, [sp, #8]
   1d5a8:	movw	r1, #0
   1d5ac:	cmp	r0, r1
   1d5b0:	bne	1d5c4 <__assert_fail@plt+0xc4dc>
   1d5b4:	ldr	r0, [sp, #4]
   1d5b8:	bl	1d520 <__assert_fail@plt+0xc438>
   1d5bc:	str	r0, [fp, #-4]
   1d5c0:	b	1d624 <__assert_fail@plt+0xc53c>
   1d5c4:	ldr	r0, [sp, #4]
   1d5c8:	cmp	r0, #0
   1d5cc:	bne	1d5e4 <__assert_fail@plt+0xc4fc>
   1d5d0:	ldr	r0, [sp, #8]
   1d5d4:	bl	13ffc <__assert_fail@plt+0x2f14>
   1d5d8:	movw	r0, #0
   1d5dc:	str	r0, [fp, #-4]
   1d5e0:	b	1d624 <__assert_fail@plt+0xc53c>
   1d5e4:	ldr	r0, [pc, #68]	; 1d630 <__assert_fail@plt+0xc548>
   1d5e8:	ldr	r1, [sp, #4]
   1d5ec:	cmp	r0, r1
   1d5f0:	bcs	1d60c <__assert_fail@plt+0xc524>
   1d5f4:	bl	11010 <__errno_location@plt>
   1d5f8:	movw	r1, #12
   1d5fc:	str	r1, [r0]
   1d600:	movw	r0, #0
   1d604:	str	r0, [fp, #-4]
   1d608:	b	1d624 <__assert_fail@plt+0xc53c>
   1d60c:	ldr	r0, [sp, #8]
   1d610:	ldr	r1, [sp, #4]
   1d614:	bl	10f20 <realloc@plt>
   1d618:	str	r0, [sp]
   1d61c:	ldr	r0, [sp]
   1d620:	str	r0, [fp, #-4]
   1d624:	ldr	r0, [fp, #-4]
   1d628:	mov	sp, fp
   1d62c:	pop	{fp, pc}
   1d630:	svcvc	0x00ffffff
   1d634:	sub	sp, sp, #8
   1d638:	str	r0, [sp, #4]
   1d63c:	str	r1, [sp]
   1d640:	movw	r0, #0
   1d644:	add	sp, sp, #8
   1d648:	bx	lr
   1d64c:	push	{fp, lr}
   1d650:	mov	fp, sp
   1d654:	sub	sp, sp, #8
   1d658:	str	r0, [sp, #4]
   1d65c:	str	r1, [sp]
   1d660:	ldr	r0, [sp, #4]
   1d664:	ldr	r1, [sp]
   1d668:	bl	1d634 <__assert_fail@plt+0xc54c>
   1d66c:	mov	sp, fp
   1d670:	pop	{fp, pc}
   1d674:	push	{fp, lr}
   1d678:	mov	fp, sp
   1d67c:	sub	sp, sp, #24
   1d680:	str	r0, [fp, #-8]
   1d684:	str	r1, [sp, #12]
   1d688:	ldr	r0, [fp, #-8]
   1d68c:	str	r0, [sp, #8]
   1d690:	ldr	r0, [sp, #12]
   1d694:	str	r0, [sp, #4]
   1d698:	ldr	r0, [sp, #8]
   1d69c:	ldr	r1, [sp, #4]
   1d6a0:	cmp	r0, r1
   1d6a4:	bne	1d6b4 <__assert_fail@plt+0xc5cc>
   1d6a8:	movw	r0, #0
   1d6ac:	str	r0, [fp, #-4]
   1d6b0:	b	1d720 <__assert_fail@plt+0xc638>
   1d6b4:	b	1d6b8 <__assert_fail@plt+0xc5d0>
   1d6b8:	ldr	r0, [sp, #8]
   1d6bc:	ldrb	r0, [r0]
   1d6c0:	bl	1dec0 <__assert_fail@plt+0xcdd8>
   1d6c4:	strb	r0, [sp, #3]
   1d6c8:	ldr	r0, [sp, #4]
   1d6cc:	ldrb	r0, [r0]
   1d6d0:	bl	1dec0 <__assert_fail@plt+0xcdd8>
   1d6d4:	strb	r0, [sp, #2]
   1d6d8:	ldrb	r0, [sp, #3]
   1d6dc:	cmp	r0, #0
   1d6e0:	bne	1d6e8 <__assert_fail@plt+0xc600>
   1d6e4:	b	1d710 <__assert_fail@plt+0xc628>
   1d6e8:	ldr	r0, [sp, #8]
   1d6ec:	add	r0, r0, #1
   1d6f0:	str	r0, [sp, #8]
   1d6f4:	ldr	r0, [sp, #4]
   1d6f8:	add	r0, r0, #1
   1d6fc:	str	r0, [sp, #4]
   1d700:	ldrb	r0, [sp, #3]
   1d704:	ldrb	r1, [sp, #2]
   1d708:	cmp	r0, r1
   1d70c:	beq	1d6b8 <__assert_fail@plt+0xc5d0>
   1d710:	ldrb	r0, [sp, #3]
   1d714:	ldrb	r1, [sp, #2]
   1d718:	sub	r0, r0, r1
   1d71c:	str	r0, [fp, #-4]
   1d720:	ldr	r0, [fp, #-4]
   1d724:	mov	sp, fp
   1d728:	pop	{fp, pc}
   1d72c:	push	{fp, lr}
   1d730:	mov	fp, sp
   1d734:	sub	sp, sp, #16
   1d738:	str	r0, [sp, #8]
   1d73c:	ldr	r0, [sp, #8]
   1d740:	bl	10f5c <__fpending@plt>
   1d744:	cmp	r0, #0
   1d748:	movw	r0, #0
   1d74c:	movne	r0, #1
   1d750:	and	r0, r0, #1
   1d754:	strb	r0, [sp, #7]
   1d758:	ldr	r0, [sp, #8]
   1d75c:	bl	10f68 <ferror_unlocked@plt>
   1d760:	cmp	r0, #0
   1d764:	movw	r0, #0
   1d768:	movne	r0, #1
   1d76c:	and	r0, r0, #1
   1d770:	strb	r0, [sp, #6]
   1d774:	ldr	r0, [sp, #8]
   1d778:	bl	13e64 <__assert_fail@plt+0x2d7c>
   1d77c:	cmp	r0, #0
   1d780:	movw	r0, #0
   1d784:	movne	r0, #1
   1d788:	and	r0, r0, #1
   1d78c:	strb	r0, [sp, #5]
   1d790:	ldrb	r0, [sp, #6]
   1d794:	tst	r0, #1
   1d798:	bne	1d7c4 <__assert_fail@plt+0xc6dc>
   1d79c:	ldrb	r0, [sp, #5]
   1d7a0:	tst	r0, #1
   1d7a4:	beq	1d7e8 <__assert_fail@plt+0xc700>
   1d7a8:	ldrb	r0, [sp, #7]
   1d7ac:	tst	r0, #1
   1d7b0:	bne	1d7c4 <__assert_fail@plt+0xc6dc>
   1d7b4:	bl	11010 <__errno_location@plt>
   1d7b8:	ldr	r0, [r0]
   1d7bc:	cmp	r0, #9
   1d7c0:	beq	1d7e8 <__assert_fail@plt+0xc700>
   1d7c4:	ldrb	r0, [sp, #5]
   1d7c8:	tst	r0, #1
   1d7cc:	bne	1d7dc <__assert_fail@plt+0xc6f4>
   1d7d0:	bl	11010 <__errno_location@plt>
   1d7d4:	movw	r1, #0
   1d7d8:	str	r1, [r0]
   1d7dc:	mvn	r0, #0
   1d7e0:	str	r0, [fp, #-4]
   1d7e4:	b	1d7f0 <__assert_fail@plt+0xc708>
   1d7e8:	movw	r0, #0
   1d7ec:	str	r0, [fp, #-4]
   1d7f0:	ldr	r0, [fp, #-4]
   1d7f4:	mov	sp, fp
   1d7f8:	pop	{fp, pc}
   1d7fc:	push	{fp, lr}
   1d800:	mov	fp, sp
   1d804:	sub	sp, sp, #8
   1d808:	movw	r0, #14
   1d80c:	bl	11088 <nl_langinfo@plt>
   1d810:	str	r0, [sp, #4]
   1d814:	ldr	r0, [sp, #4]
   1d818:	movw	r1, #0
   1d81c:	cmp	r0, r1
   1d820:	bne	1d830 <__assert_fail@plt+0xc748>
   1d824:	movw	r0, #59684	; 0xe924
   1d828:	movt	r0, #1
   1d82c:	str	r0, [sp, #4]
   1d830:	ldr	r0, [sp, #4]
   1d834:	ldrb	r0, [r0]
   1d838:	cmp	r0, #0
   1d83c:	bne	1d84c <__assert_fail@plt+0xc764>
   1d840:	movw	r0, #61473	; 0xf021
   1d844:	movt	r0, #1
   1d848:	str	r0, [sp, #4]
   1d84c:	ldr	r0, [sp, #4]
   1d850:	mov	sp, fp
   1d854:	pop	{fp, pc}
   1d858:	push	{fp, lr}
   1d85c:	mov	fp, sp
   1d860:	sub	sp, sp, #32
   1d864:	str	r0, [fp, #-8]
   1d868:	str	r1, [fp, #-12]
   1d86c:	str	r2, [sp, #16]
   1d870:	str	r3, [sp, #12]
   1d874:	ldr	r0, [fp, #-8]
   1d878:	movw	r1, #0
   1d87c:	cmp	r0, r1
   1d880:	bne	1d88c <__assert_fail@plt+0xc7a4>
   1d884:	add	r0, sp, #4
   1d888:	str	r0, [fp, #-8]
   1d88c:	ldr	r0, [fp, #-8]
   1d890:	ldr	r1, [fp, #-12]
   1d894:	ldr	r2, [sp, #16]
   1d898:	ldr	r3, [sp, #12]
   1d89c:	bl	10f74 <mbrtowc@plt>
   1d8a0:	str	r0, [sp, #8]
   1d8a4:	ldr	r0, [sp, #8]
   1d8a8:	mvn	r1, #1
   1d8ac:	cmp	r1, r0
   1d8b0:	bhi	1d8f4 <__assert_fail@plt+0xc80c>
   1d8b4:	ldr	r0, [sp, #16]
   1d8b8:	cmp	r0, #0
   1d8bc:	beq	1d8f4 <__assert_fail@plt+0xc80c>
   1d8c0:	movw	r0, #0
   1d8c4:	bl	1df48 <__assert_fail@plt+0xce60>
   1d8c8:	tst	r0, #1
   1d8cc:	bne	1d8f4 <__assert_fail@plt+0xc80c>
   1d8d0:	ldr	r0, [fp, #-12]
   1d8d4:	ldrb	r0, [r0]
   1d8d8:	strb	r0, [sp, #3]
   1d8dc:	ldrb	r0, [sp, #3]
   1d8e0:	ldr	r1, [fp, #-8]
   1d8e4:	str	r0, [r1]
   1d8e8:	movw	r0, #1
   1d8ec:	str	r0, [fp, #-4]
   1d8f0:	b	1d8fc <__assert_fail@plt+0xc814>
   1d8f4:	ldr	r0, [sp, #8]
   1d8f8:	str	r0, [fp, #-4]
   1d8fc:	ldr	r0, [fp, #-4]
   1d900:	mov	sp, fp
   1d904:	pop	{fp, pc}
   1d908:	sub	sp, sp, #12
   1d90c:	str	r0, [sp, #4]
   1d910:	ldr	r0, [sp, #4]
   1d914:	sub	r1, r0, #48	; 0x30
   1d918:	cmp	r1, #10
   1d91c:	str	r0, [sp]
   1d920:	bcc	1d950 <__assert_fail@plt+0xc868>
   1d924:	b	1d928 <__assert_fail@plt+0xc840>
   1d928:	ldr	r0, [sp]
   1d92c:	sub	r1, r0, #65	; 0x41
   1d930:	cmp	r1, #26
   1d934:	bcc	1d950 <__assert_fail@plt+0xc868>
   1d938:	b	1d93c <__assert_fail@plt+0xc854>
   1d93c:	ldr	r0, [sp]
   1d940:	sub	r1, r0, #97	; 0x61
   1d944:	cmp	r1, #25
   1d948:	bhi	1d960 <__assert_fail@plt+0xc878>
   1d94c:	b	1d950 <__assert_fail@plt+0xc868>
   1d950:	movw	r0, #1
   1d954:	and	r0, r0, #1
   1d958:	strb	r0, [sp, #11]
   1d95c:	b	1d96c <__assert_fail@plt+0xc884>
   1d960:	movw	r0, #0
   1d964:	and	r0, r0, #1
   1d968:	strb	r0, [sp, #11]
   1d96c:	ldrb	r0, [sp, #11]
   1d970:	and	r0, r0, #1
   1d974:	add	sp, sp, #12
   1d978:	bx	lr
   1d97c:	sub	sp, sp, #12
   1d980:	str	r0, [sp, #4]
   1d984:	ldr	r0, [sp, #4]
   1d988:	sub	r1, r0, #65	; 0x41
   1d98c:	cmp	r1, #26
   1d990:	str	r0, [sp]
   1d994:	bcc	1d9b0 <__assert_fail@plt+0xc8c8>
   1d998:	b	1d99c <__assert_fail@plt+0xc8b4>
   1d99c:	ldr	r0, [sp]
   1d9a0:	sub	r1, r0, #97	; 0x61
   1d9a4:	cmp	r1, #25
   1d9a8:	bhi	1d9c0 <__assert_fail@plt+0xc8d8>
   1d9ac:	b	1d9b0 <__assert_fail@plt+0xc8c8>
   1d9b0:	movw	r0, #1
   1d9b4:	and	r0, r0, #1
   1d9b8:	strb	r0, [sp, #11]
   1d9bc:	b	1d9cc <__assert_fail@plt+0xc8e4>
   1d9c0:	movw	r0, #0
   1d9c4:	and	r0, r0, #1
   1d9c8:	strb	r0, [sp, #11]
   1d9cc:	ldrb	r0, [sp, #11]
   1d9d0:	and	r0, r0, #1
   1d9d4:	add	sp, sp, #12
   1d9d8:	bx	lr
   1d9dc:	sub	sp, sp, #8
   1d9e0:	str	r0, [sp]
   1d9e4:	ldr	r0, [sp]
   1d9e8:	cmp	r0, #127	; 0x7f
   1d9ec:	bhi	1da04 <__assert_fail@plt+0xc91c>
   1d9f0:	b	1d9f4 <__assert_fail@plt+0xc90c>
   1d9f4:	movw	r0, #1
   1d9f8:	and	r0, r0, #1
   1d9fc:	strb	r0, [sp, #7]
   1da00:	b	1da10 <__assert_fail@plt+0xc928>
   1da04:	movw	r0, #0
   1da08:	and	r0, r0, #1
   1da0c:	strb	r0, [sp, #7]
   1da10:	ldrb	r0, [sp, #7]
   1da14:	and	r0, r0, #1
   1da18:	add	sp, sp, #8
   1da1c:	bx	lr
   1da20:	sub	sp, sp, #8
   1da24:	str	r0, [sp, #4]
   1da28:	ldr	r0, [sp, #4]
   1da2c:	cmp	r0, #32
   1da30:	movw	r0, #1
   1da34:	str	r0, [sp]
   1da38:	beq	1da50 <__assert_fail@plt+0xc968>
   1da3c:	ldr	r0, [sp, #4]
   1da40:	cmp	r0, #9
   1da44:	movw	r0, #0
   1da48:	moveq	r0, #1
   1da4c:	str	r0, [sp]
   1da50:	ldr	r0, [sp]
   1da54:	and	r0, r0, #1
   1da58:	add	sp, sp, #8
   1da5c:	bx	lr
   1da60:	sub	sp, sp, #12
   1da64:	str	r0, [sp, #4]
   1da68:	ldr	r0, [sp, #4]
   1da6c:	cmp	r0, #32
   1da70:	str	r0, [sp]
   1da74:	bcc	1da8c <__assert_fail@plt+0xc9a4>
   1da78:	b	1da7c <__assert_fail@plt+0xc994>
   1da7c:	ldr	r0, [sp]
   1da80:	cmp	r0, #127	; 0x7f
   1da84:	bne	1da9c <__assert_fail@plt+0xc9b4>
   1da88:	b	1da8c <__assert_fail@plt+0xc9a4>
   1da8c:	movw	r0, #1
   1da90:	and	r0, r0, #1
   1da94:	strb	r0, [sp, #11]
   1da98:	b	1daa8 <__assert_fail@plt+0xc9c0>
   1da9c:	movw	r0, #0
   1daa0:	and	r0, r0, #1
   1daa4:	strb	r0, [sp, #11]
   1daa8:	ldrb	r0, [sp, #11]
   1daac:	and	r0, r0, #1
   1dab0:	add	sp, sp, #12
   1dab4:	bx	lr
   1dab8:	sub	sp, sp, #8
   1dabc:	str	r0, [sp]
   1dac0:	ldr	r0, [sp]
   1dac4:	sub	r0, r0, #48	; 0x30
   1dac8:	cmp	r0, #9
   1dacc:	bhi	1dae4 <__assert_fail@plt+0xc9fc>
   1dad0:	b	1dad4 <__assert_fail@plt+0xc9ec>
   1dad4:	movw	r0, #1
   1dad8:	and	r0, r0, #1
   1dadc:	strb	r0, [sp, #7]
   1dae0:	b	1daf0 <__assert_fail@plt+0xca08>
   1dae4:	movw	r0, #0
   1dae8:	and	r0, r0, #1
   1daec:	strb	r0, [sp, #7]
   1daf0:	ldrb	r0, [sp, #7]
   1daf4:	and	r0, r0, #1
   1daf8:	add	sp, sp, #8
   1dafc:	bx	lr
   1db00:	sub	sp, sp, #8
   1db04:	str	r0, [sp]
   1db08:	ldr	r0, [sp]
   1db0c:	sub	r0, r0, #33	; 0x21
   1db10:	cmp	r0, #93	; 0x5d
   1db14:	bhi	1db2c <__assert_fail@plt+0xca44>
   1db18:	b	1db1c <__assert_fail@plt+0xca34>
   1db1c:	movw	r0, #1
   1db20:	and	r0, r0, #1
   1db24:	strb	r0, [sp, #7]
   1db28:	b	1db38 <__assert_fail@plt+0xca50>
   1db2c:	movw	r0, #0
   1db30:	and	r0, r0, #1
   1db34:	strb	r0, [sp, #7]
   1db38:	ldrb	r0, [sp, #7]
   1db3c:	and	r0, r0, #1
   1db40:	add	sp, sp, #8
   1db44:	bx	lr
   1db48:	sub	sp, sp, #8
   1db4c:	str	r0, [sp]
   1db50:	ldr	r0, [sp]
   1db54:	sub	r0, r0, #97	; 0x61
   1db58:	cmp	r0, #25
   1db5c:	bhi	1db74 <__assert_fail@plt+0xca8c>
   1db60:	b	1db64 <__assert_fail@plt+0xca7c>
   1db64:	movw	r0, #1
   1db68:	and	r0, r0, #1
   1db6c:	strb	r0, [sp, #7]
   1db70:	b	1db80 <__assert_fail@plt+0xca98>
   1db74:	movw	r0, #0
   1db78:	and	r0, r0, #1
   1db7c:	strb	r0, [sp, #7]
   1db80:	ldrb	r0, [sp, #7]
   1db84:	and	r0, r0, #1
   1db88:	add	sp, sp, #8
   1db8c:	bx	lr
   1db90:	sub	sp, sp, #8
   1db94:	str	r0, [sp]
   1db98:	ldr	r0, [sp]
   1db9c:	sub	r0, r0, #32
   1dba0:	cmp	r0, #94	; 0x5e
   1dba4:	bhi	1dbbc <__assert_fail@plt+0xcad4>
   1dba8:	b	1dbac <__assert_fail@plt+0xcac4>
   1dbac:	movw	r0, #1
   1dbb0:	and	r0, r0, #1
   1dbb4:	strb	r0, [sp, #7]
   1dbb8:	b	1dbc8 <__assert_fail@plt+0xcae0>
   1dbbc:	movw	r0, #0
   1dbc0:	and	r0, r0, #1
   1dbc4:	strb	r0, [sp, #7]
   1dbc8:	ldrb	r0, [sp, #7]
   1dbcc:	and	r0, r0, #1
   1dbd0:	add	sp, sp, #8
   1dbd4:	bx	lr
   1dbd8:	sub	sp, sp, #12
   1dbdc:	str	r0, [sp, #4]
   1dbe0:	ldr	r0, [sp, #4]
   1dbe4:	sub	r0, r0, #33	; 0x21
   1dbe8:	cmp	r0, #93	; 0x5d
   1dbec:	str	r0, [sp]
   1dbf0:	bhi	1dd8c <__assert_fail@plt+0xcca4>
   1dbf4:	add	r0, pc, #8
   1dbf8:	ldr	r1, [sp]
   1dbfc:	ldr	r0, [r0, r1, lsl #2]
   1dc00:	mov	pc, r0
   1dc04:	andeq	sp, r1, ip, ror sp
   1dc08:	andeq	sp, r1, ip, ror sp
   1dc0c:	andeq	sp, r1, ip, ror sp
   1dc10:	andeq	sp, r1, ip, ror sp
   1dc14:	andeq	sp, r1, ip, ror sp
   1dc18:	andeq	sp, r1, ip, ror sp
   1dc1c:	andeq	sp, r1, ip, ror sp
   1dc20:	andeq	sp, r1, ip, ror sp
   1dc24:	andeq	sp, r1, ip, ror sp
   1dc28:	andeq	sp, r1, ip, ror sp
   1dc2c:	andeq	sp, r1, ip, ror sp
   1dc30:	andeq	sp, r1, ip, ror sp
   1dc34:	andeq	sp, r1, ip, ror sp
   1dc38:	andeq	sp, r1, ip, ror sp
   1dc3c:	andeq	sp, r1, ip, ror sp
   1dc40:	andeq	sp, r1, ip, lsl #27
   1dc44:	andeq	sp, r1, ip, lsl #27
   1dc48:	andeq	sp, r1, ip, lsl #27
   1dc4c:	andeq	sp, r1, ip, lsl #27
   1dc50:	andeq	sp, r1, ip, lsl #27
   1dc54:	andeq	sp, r1, ip, lsl #27
   1dc58:	andeq	sp, r1, ip, lsl #27
   1dc5c:	andeq	sp, r1, ip, lsl #27
   1dc60:	andeq	sp, r1, ip, lsl #27
   1dc64:	andeq	sp, r1, ip, lsl #27
   1dc68:	andeq	sp, r1, ip, ror sp
   1dc6c:	andeq	sp, r1, ip, ror sp
   1dc70:	andeq	sp, r1, ip, ror sp
   1dc74:	andeq	sp, r1, ip, ror sp
   1dc78:	andeq	sp, r1, ip, ror sp
   1dc7c:	andeq	sp, r1, ip, ror sp
   1dc80:	andeq	sp, r1, ip, ror sp
   1dc84:	andeq	sp, r1, ip, lsl #27
   1dc88:	andeq	sp, r1, ip, lsl #27
   1dc8c:	andeq	sp, r1, ip, lsl #27
   1dc90:	andeq	sp, r1, ip, lsl #27
   1dc94:	andeq	sp, r1, ip, lsl #27
   1dc98:	andeq	sp, r1, ip, lsl #27
   1dc9c:	andeq	sp, r1, ip, lsl #27
   1dca0:	andeq	sp, r1, ip, lsl #27
   1dca4:	andeq	sp, r1, ip, lsl #27
   1dca8:	andeq	sp, r1, ip, lsl #27
   1dcac:	andeq	sp, r1, ip, lsl #27
   1dcb0:	andeq	sp, r1, ip, lsl #27
   1dcb4:	andeq	sp, r1, ip, lsl #27
   1dcb8:	andeq	sp, r1, ip, lsl #27
   1dcbc:	andeq	sp, r1, ip, lsl #27
   1dcc0:	andeq	sp, r1, ip, lsl #27
   1dcc4:	andeq	sp, r1, ip, lsl #27
   1dcc8:	andeq	sp, r1, ip, lsl #27
   1dccc:	andeq	sp, r1, ip, lsl #27
   1dcd0:	andeq	sp, r1, ip, lsl #27
   1dcd4:	andeq	sp, r1, ip, lsl #27
   1dcd8:	andeq	sp, r1, ip, lsl #27
   1dcdc:	andeq	sp, r1, ip, lsl #27
   1dce0:	andeq	sp, r1, ip, lsl #27
   1dce4:	andeq	sp, r1, ip, lsl #27
   1dce8:	andeq	sp, r1, ip, lsl #27
   1dcec:	andeq	sp, r1, ip, ror sp
   1dcf0:	andeq	sp, r1, ip, ror sp
   1dcf4:	andeq	sp, r1, ip, ror sp
   1dcf8:	andeq	sp, r1, ip, ror sp
   1dcfc:	andeq	sp, r1, ip, ror sp
   1dd00:	andeq	sp, r1, ip, ror sp
   1dd04:	andeq	sp, r1, ip, lsl #27
   1dd08:	andeq	sp, r1, ip, lsl #27
   1dd0c:	andeq	sp, r1, ip, lsl #27
   1dd10:	andeq	sp, r1, ip, lsl #27
   1dd14:	andeq	sp, r1, ip, lsl #27
   1dd18:	andeq	sp, r1, ip, lsl #27
   1dd1c:	andeq	sp, r1, ip, lsl #27
   1dd20:	andeq	sp, r1, ip, lsl #27
   1dd24:	andeq	sp, r1, ip, lsl #27
   1dd28:	andeq	sp, r1, ip, lsl #27
   1dd2c:	andeq	sp, r1, ip, lsl #27
   1dd30:	andeq	sp, r1, ip, lsl #27
   1dd34:	andeq	sp, r1, ip, lsl #27
   1dd38:	andeq	sp, r1, ip, lsl #27
   1dd3c:	andeq	sp, r1, ip, lsl #27
   1dd40:	andeq	sp, r1, ip, lsl #27
   1dd44:	andeq	sp, r1, ip, lsl #27
   1dd48:	andeq	sp, r1, ip, lsl #27
   1dd4c:	andeq	sp, r1, ip, lsl #27
   1dd50:	andeq	sp, r1, ip, lsl #27
   1dd54:	andeq	sp, r1, ip, lsl #27
   1dd58:	andeq	sp, r1, ip, lsl #27
   1dd5c:	andeq	sp, r1, ip, lsl #27
   1dd60:	andeq	sp, r1, ip, lsl #27
   1dd64:	andeq	sp, r1, ip, lsl #27
   1dd68:	andeq	sp, r1, ip, lsl #27
   1dd6c:	andeq	sp, r1, ip, ror sp
   1dd70:	andeq	sp, r1, ip, ror sp
   1dd74:	andeq	sp, r1, ip, ror sp
   1dd78:	andeq	sp, r1, ip, ror sp
   1dd7c:	movw	r0, #1
   1dd80:	and	r0, r0, #1
   1dd84:	strb	r0, [sp, #11]
   1dd88:	b	1dd98 <__assert_fail@plt+0xccb0>
   1dd8c:	movw	r0, #0
   1dd90:	and	r0, r0, #1
   1dd94:	strb	r0, [sp, #11]
   1dd98:	ldrb	r0, [sp, #11]
   1dd9c:	and	r0, r0, #1
   1dda0:	add	sp, sp, #12
   1dda4:	bx	lr
   1dda8:	sub	sp, sp, #12
   1ddac:	str	r0, [sp, #4]
   1ddb0:	ldr	r0, [sp, #4]
   1ddb4:	sub	r1, r0, #9
   1ddb8:	cmp	r1, #5
   1ddbc:	str	r0, [sp]
   1ddc0:	bcc	1ddd8 <__assert_fail@plt+0xccf0>
   1ddc4:	b	1ddc8 <__assert_fail@plt+0xcce0>
   1ddc8:	ldr	r0, [sp]
   1ddcc:	cmp	r0, #32
   1ddd0:	bne	1dde8 <__assert_fail@plt+0xcd00>
   1ddd4:	b	1ddd8 <__assert_fail@plt+0xccf0>
   1ddd8:	movw	r0, #1
   1dddc:	and	r0, r0, #1
   1dde0:	strb	r0, [sp, #11]
   1dde4:	b	1ddf4 <__assert_fail@plt+0xcd0c>
   1dde8:	movw	r0, #0
   1ddec:	and	r0, r0, #1
   1ddf0:	strb	r0, [sp, #11]
   1ddf4:	ldrb	r0, [sp, #11]
   1ddf8:	and	r0, r0, #1
   1ddfc:	add	sp, sp, #12
   1de00:	bx	lr
   1de04:	sub	sp, sp, #8
   1de08:	str	r0, [sp]
   1de0c:	ldr	r0, [sp]
   1de10:	sub	r0, r0, #65	; 0x41
   1de14:	cmp	r0, #25
   1de18:	bhi	1de30 <__assert_fail@plt+0xcd48>
   1de1c:	b	1de20 <__assert_fail@plt+0xcd38>
   1de20:	movw	r0, #1
   1de24:	and	r0, r0, #1
   1de28:	strb	r0, [sp, #7]
   1de2c:	b	1de3c <__assert_fail@plt+0xcd54>
   1de30:	movw	r0, #0
   1de34:	and	r0, r0, #1
   1de38:	strb	r0, [sp, #7]
   1de3c:	ldrb	r0, [sp, #7]
   1de40:	and	r0, r0, #1
   1de44:	add	sp, sp, #8
   1de48:	bx	lr
   1de4c:	sub	sp, sp, #12
   1de50:	str	r0, [sp, #4]
   1de54:	ldr	r0, [sp, #4]
   1de58:	sub	r1, r0, #48	; 0x30
   1de5c:	cmp	r1, #10
   1de60:	str	r0, [sp]
   1de64:	bcc	1de94 <__assert_fail@plt+0xcdac>
   1de68:	b	1de6c <__assert_fail@plt+0xcd84>
   1de6c:	ldr	r0, [sp]
   1de70:	sub	r1, r0, #65	; 0x41
   1de74:	cmp	r1, #6
   1de78:	bcc	1de94 <__assert_fail@plt+0xcdac>
   1de7c:	b	1de80 <__assert_fail@plt+0xcd98>
   1de80:	ldr	r0, [sp]
   1de84:	sub	r1, r0, #97	; 0x61
   1de88:	cmp	r1, #5
   1de8c:	bhi	1dea4 <__assert_fail@plt+0xcdbc>
   1de90:	b	1de94 <__assert_fail@plt+0xcdac>
   1de94:	movw	r0, #1
   1de98:	and	r0, r0, #1
   1de9c:	strb	r0, [sp, #11]
   1dea0:	b	1deb0 <__assert_fail@plt+0xcdc8>
   1dea4:	movw	r0, #0
   1dea8:	and	r0, r0, #1
   1deac:	strb	r0, [sp, #11]
   1deb0:	ldrb	r0, [sp, #11]
   1deb4:	and	r0, r0, #1
   1deb8:	add	sp, sp, #12
   1debc:	bx	lr
   1dec0:	sub	sp, sp, #8
   1dec4:	str	r0, [sp]
   1dec8:	ldr	r0, [sp]
   1decc:	sub	r0, r0, #65	; 0x41
   1ded0:	cmp	r0, #25
   1ded4:	bhi	1def0 <__assert_fail@plt+0xce08>
   1ded8:	b	1dedc <__assert_fail@plt+0xcdf4>
   1dedc:	ldr	r0, [sp]
   1dee0:	sub	r0, r0, #65	; 0x41
   1dee4:	add	r0, r0, #97	; 0x61
   1dee8:	str	r0, [sp, #4]
   1deec:	b	1def8 <__assert_fail@plt+0xce10>
   1def0:	ldr	r0, [sp]
   1def4:	str	r0, [sp, #4]
   1def8:	ldr	r0, [sp, #4]
   1defc:	add	sp, sp, #8
   1df00:	bx	lr
   1df04:	sub	sp, sp, #8
   1df08:	str	r0, [sp]
   1df0c:	ldr	r0, [sp]
   1df10:	sub	r0, r0, #97	; 0x61
   1df14:	cmp	r0, #25
   1df18:	bhi	1df34 <__assert_fail@plt+0xce4c>
   1df1c:	b	1df20 <__assert_fail@plt+0xce38>
   1df20:	ldr	r0, [sp]
   1df24:	sub	r0, r0, #97	; 0x61
   1df28:	add	r0, r0, #65	; 0x41
   1df2c:	str	r0, [sp, #4]
   1df30:	b	1df3c <__assert_fail@plt+0xce54>
   1df34:	ldr	r0, [sp]
   1df38:	str	r0, [sp, #4]
   1df3c:	ldr	r0, [sp, #4]
   1df40:	add	sp, sp, #8
   1df44:	bx	lr
   1df48:	push	{r4, r5, fp, lr}
   1df4c:	add	fp, sp, #8
   1df50:	sub	sp, sp, #272	; 0x110
   1df54:	add	r1, sp, #7
   1df58:	str	r0, [fp, #-16]
   1df5c:	ldr	r0, [fp, #-16]
   1df60:	movw	r2, #257	; 0x101
   1df64:	bl	1dfe4 <__assert_fail@plt+0xcefc>
   1df68:	cmp	r0, #0
   1df6c:	beq	1df80 <__assert_fail@plt+0xce98>
   1df70:	movw	r0, #0
   1df74:	and	r0, r0, #1
   1df78:	strb	r0, [fp, #-9]
   1df7c:	b	1dfd4 <__assert_fail@plt+0xceec>
   1df80:	add	r0, sp, #7
   1df84:	movw	r1, #61479	; 0xf027
   1df88:	movt	r1, #1
   1df8c:	bl	10e90 <strcmp@plt>
   1df90:	cmp	r0, #0
   1df94:	movw	r0, #1
   1df98:	str	r0, [sp]
   1df9c:	beq	1dfc0 <__assert_fail@plt+0xced8>
   1dfa0:	add	r0, sp, #7
   1dfa4:	movw	r1, #61481	; 0xf029
   1dfa8:	movt	r1, #1
   1dfac:	bl	10e90 <strcmp@plt>
   1dfb0:	cmp	r0, #0
   1dfb4:	movw	r0, #0
   1dfb8:	moveq	r0, #1
   1dfbc:	str	r0, [sp]
   1dfc0:	ldr	r0, [sp]
   1dfc4:	mvn	r1, #0
   1dfc8:	eor	r0, r0, r1
   1dfcc:	and	r0, r0, #1
   1dfd0:	strb	r0, [fp, #-9]
   1dfd4:	ldrb	r0, [fp, #-9]
   1dfd8:	and	r0, r0, #1
   1dfdc:	sub	sp, fp, #8
   1dfe0:	pop	{r4, r5, fp, pc}
   1dfe4:	push	{fp, lr}
   1dfe8:	mov	fp, sp
   1dfec:	sub	sp, sp, #16
   1dff0:	str	r0, [fp, #-4]
   1dff4:	str	r1, [sp, #8]
   1dff8:	str	r2, [sp, #4]
   1dffc:	ldr	r0, [fp, #-4]
   1e000:	ldr	r1, [sp, #8]
   1e004:	ldr	r2, [sp, #4]
   1e008:	bl	1e014 <__assert_fail@plt+0xcf2c>
   1e00c:	mov	sp, fp
   1e010:	pop	{fp, pc}
   1e014:	push	{fp, lr}
   1e018:	mov	fp, sp
   1e01c:	sub	sp, sp, #24
   1e020:	str	r0, [fp, #-8]
   1e024:	str	r1, [sp, #12]
   1e028:	str	r2, [sp, #8]
   1e02c:	ldr	r0, [fp, #-8]
   1e030:	bl	1e114 <__assert_fail@plt+0xd02c>
   1e034:	str	r0, [sp, #4]
   1e038:	ldr	r0, [sp, #4]
   1e03c:	movw	r1, #0
   1e040:	cmp	r0, r1
   1e044:	bne	1e06c <__assert_fail@plt+0xcf84>
   1e048:	ldr	r0, [sp, #8]
   1e04c:	cmp	r0, #0
   1e050:	bls	1e060 <__assert_fail@plt+0xcf78>
   1e054:	ldr	r0, [sp, #12]
   1e058:	movw	r1, #0
   1e05c:	strb	r1, [r0]
   1e060:	movw	r0, #22
   1e064:	str	r0, [fp, #-4]
   1e068:	b	1e0e8 <__assert_fail@plt+0xd000>
   1e06c:	ldr	r0, [sp, #4]
   1e070:	bl	10fec <strlen@plt>
   1e074:	str	r0, [sp]
   1e078:	ldr	r0, [sp]
   1e07c:	ldr	r1, [sp, #8]
   1e080:	cmp	r0, r1
   1e084:	bcs	1e0a8 <__assert_fail@plt+0xcfc0>
   1e088:	ldr	r0, [sp, #12]
   1e08c:	ldr	r1, [sp, #4]
   1e090:	ldr	r2, [sp]
   1e094:	add	r2, r2, #1
   1e098:	bl	10ee4 <memcpy@plt>
   1e09c:	movw	r0, #0
   1e0a0:	str	r0, [fp, #-4]
   1e0a4:	b	1e0e8 <__assert_fail@plt+0xd000>
   1e0a8:	ldr	r0, [sp, #8]
   1e0ac:	cmp	r0, #0
   1e0b0:	bls	1e0e0 <__assert_fail@plt+0xcff8>
   1e0b4:	ldr	r0, [sp, #12]
   1e0b8:	ldr	r1, [sp, #4]
   1e0bc:	ldr	r2, [sp, #8]
   1e0c0:	sub	r2, r2, #1
   1e0c4:	bl	10ee4 <memcpy@plt>
   1e0c8:	ldr	r0, [sp, #12]
   1e0cc:	ldr	r1, [sp, #8]
   1e0d0:	sub	r1, r1, #1
   1e0d4:	add	r0, r0, r1
   1e0d8:	movw	r1, #0
   1e0dc:	strb	r1, [r0]
   1e0e0:	movw	r0, #34	; 0x22
   1e0e4:	str	r0, [fp, #-4]
   1e0e8:	ldr	r0, [fp, #-4]
   1e0ec:	mov	sp, fp
   1e0f0:	pop	{fp, pc}
   1e0f4:	push	{fp, lr}
   1e0f8:	mov	fp, sp
   1e0fc:	sub	sp, sp, #8
   1e100:	str	r0, [sp, #4]
   1e104:	ldr	r0, [sp, #4]
   1e108:	bl	1e114 <__assert_fail@plt+0xd02c>
   1e10c:	mov	sp, fp
   1e110:	pop	{fp, pc}
   1e114:	push	{fp, lr}
   1e118:	mov	fp, sp
   1e11c:	sub	sp, sp, #8
   1e120:	str	r0, [sp, #4]
   1e124:	ldr	r0, [sp, #4]
   1e128:	movw	r1, #0
   1e12c:	bl	11070 <setlocale@plt>
   1e130:	str	r0, [sp]
   1e134:	ldr	r0, [sp]
   1e138:	mov	sp, fp
   1e13c:	pop	{fp, pc}
   1e140:	cmp	r3, #0
   1e144:	cmpeq	r2, #0
   1e148:	bne	1e16c <__assert_fail@plt+0xd084>
   1e14c:	cmp	r1, #0
   1e150:	movlt	r1, #-2147483648	; 0x80000000
   1e154:	movlt	r0, #0
   1e158:	blt	1e168 <__assert_fail@plt+0xd080>
   1e15c:	cmpeq	r0, #0
   1e160:	mvnne	r1, #-2147483648	; 0x80000000
   1e164:	mvnne	r0, #0
   1e168:	b	1e250 <__assert_fail@plt+0xd168>
   1e16c:	sub	sp, sp, #8
   1e170:	push	{sp, lr}
   1e174:	cmp	r1, #0
   1e178:	blt	1e198 <__assert_fail@plt+0xd0b0>
   1e17c:	cmp	r3, #0
   1e180:	blt	1e1cc <__assert_fail@plt+0xd0e4>
   1e184:	bl	1e260 <__assert_fail@plt+0xd178>
   1e188:	ldr	lr, [sp, #4]
   1e18c:	add	sp, sp, #8
   1e190:	pop	{r2, r3}
   1e194:	bx	lr
   1e198:	rsbs	r0, r0, #0
   1e19c:	sbc	r1, r1, r1, lsl #1
   1e1a0:	cmp	r3, #0
   1e1a4:	blt	1e1f0 <__assert_fail@plt+0xd108>
   1e1a8:	bl	1e260 <__assert_fail@plt+0xd178>
   1e1ac:	ldr	lr, [sp, #4]
   1e1b0:	add	sp, sp, #8
   1e1b4:	pop	{r2, r3}
   1e1b8:	rsbs	r0, r0, #0
   1e1bc:	sbc	r1, r1, r1, lsl #1
   1e1c0:	rsbs	r2, r2, #0
   1e1c4:	sbc	r3, r3, r3, lsl #1
   1e1c8:	bx	lr
   1e1cc:	rsbs	r2, r2, #0
   1e1d0:	sbc	r3, r3, r3, lsl #1
   1e1d4:	bl	1e260 <__assert_fail@plt+0xd178>
   1e1d8:	ldr	lr, [sp, #4]
   1e1dc:	add	sp, sp, #8
   1e1e0:	pop	{r2, r3}
   1e1e4:	rsbs	r0, r0, #0
   1e1e8:	sbc	r1, r1, r1, lsl #1
   1e1ec:	bx	lr
   1e1f0:	rsbs	r2, r2, #0
   1e1f4:	sbc	r3, r3, r3, lsl #1
   1e1f8:	bl	1e260 <__assert_fail@plt+0xd178>
   1e1fc:	ldr	lr, [sp, #4]
   1e200:	add	sp, sp, #8
   1e204:	pop	{r2, r3}
   1e208:	rsbs	r2, r2, #0
   1e20c:	sbc	r3, r3, r3, lsl #1
   1e210:	bx	lr
   1e214:	cmp	r3, #0
   1e218:	cmpeq	r2, #0
   1e21c:	bne	1e234 <__assert_fail@plt+0xd14c>
   1e220:	cmp	r1, #0
   1e224:	cmpeq	r0, #0
   1e228:	mvnne	r1, #0
   1e22c:	mvnne	r0, #0
   1e230:	b	1e250 <__assert_fail@plt+0xd168>
   1e234:	sub	sp, sp, #8
   1e238:	push	{sp, lr}
   1e23c:	bl	1e260 <__assert_fail@plt+0xd178>
   1e240:	ldr	lr, [sp, #4]
   1e244:	add	sp, sp, #8
   1e248:	pop	{r2, r3}
   1e24c:	bx	lr
   1e250:	push	{r1, lr}
   1e254:	mov	r0, #8
   1e258:	bl	10e84 <raise@plt>
   1e25c:	pop	{r1, pc}
   1e260:	cmp	r1, r3
   1e264:	cmpeq	r0, r2
   1e268:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e26c:	mov	r4, r0
   1e270:	movcc	r0, #0
   1e274:	mov	r5, r1
   1e278:	ldr	lr, [sp, #36]	; 0x24
   1e27c:	movcc	r1, r0
   1e280:	bcc	1e37c <__assert_fail@plt+0xd294>
   1e284:	cmp	r3, #0
   1e288:	clzeq	ip, r2
   1e28c:	clzne	ip, r3
   1e290:	addeq	ip, ip, #32
   1e294:	cmp	r5, #0
   1e298:	clzeq	r1, r4
   1e29c:	addeq	r1, r1, #32
   1e2a0:	clzne	r1, r5
   1e2a4:	sub	ip, ip, r1
   1e2a8:	sub	sl, ip, #32
   1e2ac:	lsl	r9, r3, ip
   1e2b0:	rsb	fp, ip, #32
   1e2b4:	orr	r9, r9, r2, lsl sl
   1e2b8:	orr	r9, r9, r2, lsr fp
   1e2bc:	lsl	r8, r2, ip
   1e2c0:	cmp	r5, r9
   1e2c4:	cmpeq	r4, r8
   1e2c8:	movcc	r0, #0
   1e2cc:	movcc	r1, r0
   1e2d0:	bcc	1e2ec <__assert_fail@plt+0xd204>
   1e2d4:	mov	r0, #1
   1e2d8:	subs	r4, r4, r8
   1e2dc:	lsl	r1, r0, sl
   1e2e0:	orr	r1, r1, r0, lsr fp
   1e2e4:	lsl	r0, r0, ip
   1e2e8:	sbc	r5, r5, r9
   1e2ec:	cmp	ip, #0
   1e2f0:	beq	1e37c <__assert_fail@plt+0xd294>
   1e2f4:	lsr	r6, r8, #1
   1e2f8:	orr	r6, r6, r9, lsl #31
   1e2fc:	lsr	r7, r9, #1
   1e300:	mov	r2, ip
   1e304:	b	1e328 <__assert_fail@plt+0xd240>
   1e308:	subs	r3, r4, r6
   1e30c:	sbc	r8, r5, r7
   1e310:	adds	r3, r3, r3
   1e314:	adc	r8, r8, r8
   1e318:	adds	r4, r3, #1
   1e31c:	adc	r5, r8, #0
   1e320:	subs	r2, r2, #1
   1e324:	beq	1e344 <__assert_fail@plt+0xd25c>
   1e328:	cmp	r5, r7
   1e32c:	cmpeq	r4, r6
   1e330:	bcs	1e308 <__assert_fail@plt+0xd220>
   1e334:	adds	r4, r4, r4
   1e338:	adc	r5, r5, r5
   1e33c:	subs	r2, r2, #1
   1e340:	bne	1e328 <__assert_fail@plt+0xd240>
   1e344:	lsr	r3, r4, ip
   1e348:	orr	r3, r3, r5, lsl fp
   1e34c:	lsr	r2, r5, ip
   1e350:	orr	r3, r3, r5, lsr sl
   1e354:	adds	r0, r0, r4
   1e358:	mov	r4, r3
   1e35c:	lsl	r3, r2, ip
   1e360:	orr	r3, r3, r4, lsl sl
   1e364:	lsl	ip, r4, ip
   1e368:	orr	r3, r3, r4, lsr fp
   1e36c:	adc	r1, r1, r5
   1e370:	subs	r0, r0, ip
   1e374:	mov	r5, r2
   1e378:	sbc	r1, r1, r3
   1e37c:	cmp	lr, #0
   1e380:	strdne	r4, [lr]
   1e384:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e388:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e38c:	mov	r7, r0
   1e390:	ldr	r6, [pc, #72]	; 1e3e0 <__assert_fail@plt+0xd2f8>
   1e394:	ldr	r5, [pc, #72]	; 1e3e4 <__assert_fail@plt+0xd2fc>
   1e398:	add	r6, pc, r6
   1e39c:	add	r5, pc, r5
   1e3a0:	sub	r6, r6, r5
   1e3a4:	mov	r8, r1
   1e3a8:	mov	r9, r2
   1e3ac:	bl	10e4c <calloc@plt-0x20>
   1e3b0:	asrs	r6, r6, #2
   1e3b4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e3b8:	mov	r4, #0
   1e3bc:	add	r4, r4, #1
   1e3c0:	ldr	r3, [r5], #4
   1e3c4:	mov	r2, r9
   1e3c8:	mov	r1, r8
   1e3cc:	mov	r0, r7
   1e3d0:	blx	r3
   1e3d4:	cmp	r6, r4
   1e3d8:	bne	1e3bc <__assert_fail@plt+0xd2d4>
   1e3dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e3e0:	andeq	r1, r1, ip, ror #22
   1e3e4:	andeq	r1, r1, r4, ror #22
   1e3e8:	bx	lr
   1e3ec:	ldr	r3, [pc, #12]	; 1e400 <__assert_fail@plt+0xd318>
   1e3f0:	mov	r1, #0
   1e3f4:	add	r3, pc, r3
   1e3f8:	ldr	r2, [r3]
   1e3fc:	b	1101c <__cxa_atexit@plt>
   1e400:	strdeq	r1, [r1], -r0

Disassembly of section .fini:

0001e404 <.fini>:
   1e404:	push	{r3, lr}
   1e408:	pop	{r3, pc}
