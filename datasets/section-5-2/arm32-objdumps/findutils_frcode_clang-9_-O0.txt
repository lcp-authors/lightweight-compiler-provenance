
../repos/findutils/locate/frcode:     file format elf32-littlearm


Disassembly of section .init:

00010cb8 <.init>:
   10cb8:	push	{r3, lr}
   10cbc:	bl	10f3c <__assert_fail@plt+0x48>
   10cc0:	pop	{r3, pc}

Disassembly of section .plt:

00010cc4 <calloc@plt-0x14>:
   10cc4:	push	{lr}		; (str lr, [sp, #-4]!)
   10cc8:	ldr	lr, [pc, #4]	; 10cd4 <calloc@plt-0x4>
   10ccc:	add	lr, pc, lr
   10cd0:	ldr	pc, [lr, #8]!
   10cd4:	andeq	sl, r1, ip, lsr #6

00010cd8 <calloc@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #106496	; 0x1a000
   10ce0:	ldr	pc, [ip, #812]!	; 0x32c

00010ce4 <raise@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #106496	; 0x1a000
   10cec:	ldr	pc, [ip, #804]!	; 0x324

00010cf0 <strcmp@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #106496	; 0x1a000
   10cf8:	ldr	pc, [ip, #796]!	; 0x31c

00010cfc <strtol@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #106496	; 0x1a000
   10d04:	ldr	pc, [ip, #788]!	; 0x314

00010d08 <printf@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #106496	; 0x1a000
   10d10:	ldr	pc, [ip, #780]!	; 0x30c

00010d14 <fflush@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #106496	; 0x1a000
   10d1c:	ldr	pc, [ip, #772]!	; 0x304

00010d20 <free@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #106496	; 0x1a000
   10d28:	ldr	pc, [ip, #764]!	; 0x2fc

00010d2c <ferror@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #106496	; 0x1a000
   10d34:	ldr	pc, [ip, #756]!	; 0x2f4

00010d38 <_exit@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #106496	; 0x1a000
   10d40:	ldr	pc, [ip, #748]!	; 0x2ec

00010d44 <memcpy@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #106496	; 0x1a000
   10d4c:	ldr	pc, [ip, #740]!	; 0x2e4

00010d50 <mbsinit@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #106496	; 0x1a000
   10d58:	ldr	pc, [ip, #732]!	; 0x2dc

00010d5c <memcmp@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #106496	; 0x1a000
   10d64:	ldr	pc, [ip, #724]!	; 0x2d4

00010d68 <realloc@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #106496	; 0x1a000
   10d70:	ldr	pc, [ip, #716]!	; 0x2cc

00010d74 <iswprint@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #106496	; 0x1a000
   10d7c:	ldr	pc, [ip, #708]!	; 0x2c4

00010d80 <fwrite@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #106496	; 0x1a000
   10d88:	ldr	pc, [ip, #700]!	; 0x2bc

00010d8c <lseek64@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #106496	; 0x1a000
   10d94:	ldr	pc, [ip, #692]!	; 0x2b4

00010d98 <__ctype_get_mb_cur_max@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #106496	; 0x1a000
   10da0:	ldr	pc, [ip, #684]!	; 0x2ac

00010da4 <__fpending@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #106496	; 0x1a000
   10dac:	ldr	pc, [ip, #676]!	; 0x2a4

00010db0 <mbrtowc@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #106496	; 0x1a000
   10db8:	ldr	pc, [ip, #668]!	; 0x29c

00010dbc <error@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #106496	; 0x1a000
   10dc4:	ldr	pc, [ip, #660]!	; 0x294

00010dc8 <malloc@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #106496	; 0x1a000
   10dd0:	ldr	pc, [ip, #652]!	; 0x28c

00010dd4 <__libc_start_main@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #106496	; 0x1a000
   10ddc:	ldr	pc, [ip, #644]!	; 0x284

00010de0 <__freading@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #106496	; 0x1a000
   10de8:	ldr	pc, [ip, #636]!	; 0x27c

00010dec <__gmon_start__@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #106496	; 0x1a000
   10df4:	ldr	pc, [ip, #628]!	; 0x274

00010df8 <getopt_long@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #106496	; 0x1a000
   10e00:	ldr	pc, [ip, #620]!	; 0x26c

00010e04 <__ctype_b_loc@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #106496	; 0x1a000
   10e0c:	ldr	pc, [ip, #612]!	; 0x264

00010e10 <exit@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #106496	; 0x1a000
   10e18:	ldr	pc, [ip, #604]!	; 0x25c

00010e1c <gettext@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #106496	; 0x1a000
   10e24:	ldr	pc, [ip, #596]!	; 0x254

00010e28 <strlen@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #106496	; 0x1a000
   10e30:	ldr	pc, [ip, #588]!	; 0x24c

00010e34 <fprintf@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #106496	; 0x1a000
   10e3c:	ldr	pc, [ip, #580]!	; 0x244

00010e40 <__errno_location@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #106496	; 0x1a000
   10e48:	ldr	pc, [ip, #572]!	; 0x23c

00010e4c <__cxa_atexit@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #106496	; 0x1a000
   10e54:	ldr	pc, [ip, #564]!	; 0x234

00010e58 <memset@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #106496	; 0x1a000
   10e60:	ldr	pc, [ip, #556]!	; 0x22c

00010e64 <fileno@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #106496	; 0x1a000
   10e6c:	ldr	pc, [ip, #548]!	; 0x224

00010e70 <fclose@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #106496	; 0x1a000
   10e78:	ldr	pc, [ip, #540]!	; 0x21c

00010e7c <fseeko64@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #106496	; 0x1a000
   10e84:	ldr	pc, [ip, #532]!	; 0x214

00010e88 <setlocale@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #106496	; 0x1a000
   10e90:	ldr	pc, [ip, #524]!	; 0x20c

00010e94 <strrchr@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #106496	; 0x1a000
   10e9c:	ldr	pc, [ip, #516]!	; 0x204

00010ea0 <nl_langinfo@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #106496	; 0x1a000
   10ea8:	ldr	pc, [ip, #508]!	; 0x1fc

00010eac <fputc@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #106496	; 0x1a000
   10eb4:	ldr	pc, [ip, #500]!	; 0x1f4

00010eb8 <putc@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #106496	; 0x1a000
   10ec0:	ldr	pc, [ip, #492]!	; 0x1ec

00010ec4 <getdelim@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #106496	; 0x1a000
   10ecc:	ldr	pc, [ip, #484]!	; 0x1e4

00010ed0 <fputs@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #106496	; 0x1a000
   10ed8:	ldr	pc, [ip, #476]!	; 0x1dc

00010edc <strncmp@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #106496	; 0x1a000
   10ee4:	ldr	pc, [ip, #468]!	; 0x1d4

00010ee8 <abort@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #106496	; 0x1a000
   10ef0:	ldr	pc, [ip, #460]!	; 0x1cc

00010ef4 <__assert_fail@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #106496	; 0x1a000
   10efc:	ldr	pc, [ip, #452]!	; 0x1c4

Disassembly of section .text:

00010f00 <.text>:
   10f00:	mov	fp, #0
   10f04:	mov	lr, #0
   10f08:	pop	{r1}		; (ldr r1, [sp], #4)
   10f0c:	mov	r2, sp
   10f10:	push	{r2}		; (str r2, [sp, #-4]!)
   10f14:	push	{r0}		; (str r0, [sp, #-4]!)
   10f18:	ldr	ip, [pc, #16]	; 10f30 <__assert_fail@plt+0x3c>
   10f1c:	push	{ip}		; (str ip, [sp, #-4]!)
   10f20:	ldr	r0, [pc, #12]	; 10f34 <__assert_fail@plt+0x40>
   10f24:	ldr	r3, [pc, #12]	; 10f38 <__assert_fail@plt+0x44>
   10f28:	bl	10dd4 <__libc_start_main@plt>
   10f2c:	bl	10ee8 <abort@plt>
   10f30:	andeq	r9, r1, ip, ror pc
   10f34:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10f38:	andeq	r9, r1, ip, lsl pc
   10f3c:	ldr	r3, [pc, #20]	; 10f58 <__assert_fail@plt+0x64>
   10f40:	ldr	r2, [pc, #20]	; 10f5c <__assert_fail@plt+0x68>
   10f44:	add	r3, pc, r3
   10f48:	ldr	r2, [r3, r2]
   10f4c:	cmp	r2, #0
   10f50:	bxeq	lr
   10f54:	b	10dec <__gmon_start__@plt>
   10f58:	strheq	sl, [r1], -r4
   10f5c:	andeq	r0, r0, r4, asr #1
   10f60:	ldr	r0, [pc, #24]	; 10f80 <__assert_fail@plt+0x8c>
   10f64:	ldr	r3, [pc, #24]	; 10f84 <__assert_fail@plt+0x90>
   10f68:	cmp	r3, r0
   10f6c:	bxeq	lr
   10f70:	ldr	r3, [pc, #16]	; 10f88 <__assert_fail@plt+0x94>
   10f74:	cmp	r3, #0
   10f78:	bxeq	lr
   10f7c:	bx	r3
   10f80:	andeq	fp, r2, r8, lsl r1
   10f84:	andeq	fp, r2, r8, lsl r1
   10f88:	andeq	r0, r0, r0
   10f8c:	ldr	r0, [pc, #36]	; 10fb8 <__assert_fail@plt+0xc4>
   10f90:	ldr	r1, [pc, #36]	; 10fbc <__assert_fail@plt+0xc8>
   10f94:	sub	r1, r1, r0
   10f98:	asr	r1, r1, #2
   10f9c:	add	r1, r1, r1, lsr #31
   10fa0:	asrs	r1, r1, #1
   10fa4:	bxeq	lr
   10fa8:	ldr	r3, [pc, #16]	; 10fc0 <__assert_fail@plt+0xcc>
   10fac:	cmp	r3, #0
   10fb0:	bxeq	lr
   10fb4:	bx	r3
   10fb8:	andeq	fp, r2, r8, lsl r1
   10fbc:	andeq	fp, r2, r8, lsl r1
   10fc0:	andeq	r0, r0, r0
   10fc4:	push	{r4, lr}
   10fc8:	ldr	r4, [pc, #24]	; 10fe8 <__assert_fail@plt+0xf4>
   10fcc:	ldrb	r3, [r4]
   10fd0:	cmp	r3, #0
   10fd4:	popne	{r4, pc}
   10fd8:	bl	10f60 <__assert_fail@plt+0x6c>
   10fdc:	mov	r3, #1
   10fe0:	strb	r3, [r4]
   10fe4:	pop	{r4, pc}
   10fe8:	andeq	fp, r2, ip, lsr r1
   10fec:	b	10f8c <__assert_fail@plt+0x98>
   10ff0:	push	{fp, lr}
   10ff4:	mov	fp, sp
   10ff8:	sub	sp, sp, #112	; 0x70
   10ffc:	movw	r2, #0
   11000:	str	r2, [fp, #-4]
   11004:	str	r0, [fp, #-8]
   11008:	str	r1, [fp, #-12]
   1100c:	movw	r0, #10
   11010:	str	r0, [fp, #-48]	; 0xffffffd0
   11014:	str	r2, [sp, #56]	; 0x38
   11018:	str	r2, [sp, #52]	; 0x34
   1101c:	ldr	r0, [fp, #-12]
   11020:	ldr	r0, [r0]
   11024:	cmp	r0, r2
   11028:	beq	1103c <__assert_fail@plt+0x148>
   1102c:	ldr	r0, [fp, #-12]
   11030:	ldr	r0, [r0]
   11034:	bl	11b68 <__assert_fail@plt+0xc74>
   11038:	b	11048 <__assert_fail@plt+0x154>
   1103c:	movw	r0, #40868	; 0x9fa4
   11040:	movt	r0, #1
   11044:	bl	11b68 <__assert_fail@plt+0xc74>
   11048:	movw	r0, #6728	; 0x1a48
   1104c:	movt	r0, #1
   11050:	bl	19f80 <__assert_fail@plt+0x908c>
   11054:	cmp	r0, #0
   11058:	beq	1108c <__assert_fail@plt+0x198>
   1105c:	bl	10e40 <__errno_location@plt>
   11060:	ldr	r1, [r0]
   11064:	movw	r0, #40875	; 0x9fab
   11068:	movt	r0, #1
   1106c:	str	r1, [sp, #40]	; 0x28
   11070:	bl	10e1c <gettext@plt>
   11074:	movw	r1, #1
   11078:	str	r0, [sp, #36]	; 0x24
   1107c:	mov	r0, r1
   11080:	ldr	r1, [sp, #40]	; 0x28
   11084:	ldr	r2, [sp, #36]	; 0x24
   11088:	bl	10dbc <error@plt>
   1108c:	movw	r0, #1026	; 0x402
   11090:	str	r0, [fp, #-28]	; 0xffffffe4
   11094:	str	r0, [fp, #-24]	; 0xffffffe8
   11098:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1109c:	bl	14bc8 <__assert_fail@plt+0x3cd4>
   110a0:	str	r0, [fp, #-16]
   110a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   110a8:	bl	14bc8 <__assert_fail@plt+0x3cd4>
   110ac:	str	r0, [fp, #-20]	; 0xffffffec
   110b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   110b4:	movw	r1, #0
   110b8:	strb	r1, [r0]
   110bc:	movw	r0, #0
   110c0:	str	r0, [fp, #-36]	; 0xffffffdc
   110c4:	ldr	r0, [fp, #-8]
   110c8:	ldr	r1, [fp, #-12]
   110cc:	movw	r2, #40910	; 0x9fce
   110d0:	movt	r2, #1
   110d4:	movw	r3, #41396	; 0xa1b4
   110d8:	movt	r3, #1
   110dc:	movw	ip, #0
   110e0:	str	ip, [sp]
   110e4:	bl	10df8 <getopt_long@plt>
   110e8:	str	r0, [fp, #-52]	; 0xffffffcc
   110ec:	cmn	r0, #1
   110f0:	beq	111d0 <__assert_fail@plt+0x2dc>
   110f4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   110f8:	cmp	r0, #48	; 0x30
   110fc:	str	r0, [sp, #32]
   11100:	beq	11138 <__assert_fail@plt+0x244>
   11104:	b	11108 <__assert_fail@plt+0x214>
   11108:	ldr	r0, [sp, #32]
   1110c:	cmp	r0, #83	; 0x53
   11110:	beq	11144 <__assert_fail@plt+0x250>
   11114:	b	11118 <__assert_fail@plt+0x224>
   11118:	ldr	r0, [sp, #32]
   1111c:	cmp	r0, #104	; 0x68
   11120:	beq	111a4 <__assert_fail@plt+0x2b0>
   11124:	b	11128 <__assert_fail@plt+0x234>
   11128:	ldr	r0, [sp, #32]
   1112c:	cmp	r0, #118	; 0x76
   11130:	beq	111ac <__assert_fail@plt+0x2b8>
   11134:	b	111c4 <__assert_fail@plt+0x2d0>
   11138:	movw	r0, #0
   1113c:	str	r0, [fp, #-48]	; 0xffffffd0
   11140:	b	111cc <__assert_fail@plt+0x2d8>
   11144:	movw	r0, #1
   11148:	str	r0, [sp, #56]	; 0x38
   1114c:	movw	r0, #45368	; 0xb138
   11150:	movt	r0, #2
   11154:	ldr	r0, [r0]
   11158:	bl	114ec <__assert_fail@plt+0x5f8>
   1115c:	str	r0, [sp, #52]	; 0x34
   11160:	ldr	r0, [sp, #52]	; 0x34
   11164:	cmp	r0, #0
   11168:	blt	11178 <__assert_fail@plt+0x284>
   1116c:	ldr	r0, [sp, #52]	; 0x34
   11170:	cmp	r0, #1
   11174:	ble	111a0 <__assert_fail@plt+0x2ac>
   11178:	movw	r0, #40916	; 0x9fd4
   1117c:	movt	r0, #1
   11180:	bl	10e1c <gettext@plt>
   11184:	ldr	r3, [sp, #52]	; 0x34
   11188:	movw	r1, #1
   1118c:	str	r0, [sp, #28]
   11190:	mov	r0, r1
   11194:	movw	r1, #0
   11198:	ldr	r2, [sp, #28]
   1119c:	bl	10dbc <error@plt>
   111a0:	b	111cc <__assert_fail@plt+0x2d8>
   111a4:	movw	r0, #0
   111a8:	bl	11620 <__assert_fail@plt+0x72c>
   111ac:	movw	r0, #40868	; 0x9fa4
   111b0:	movt	r0, #1
   111b4:	bl	118bc <__assert_fail@plt+0x9c8>
   111b8:	movw	r0, #0
   111bc:	str	r0, [fp, #-4]
   111c0:	b	114e0 <__assert_fail@plt+0x5ec>
   111c4:	movw	r0, #1
   111c8:	bl	11620 <__assert_fail@plt+0x72c>
   111cc:	b	110c4 <__assert_fail@plt+0x1d0>
   111d0:	movw	r0, #45344	; 0xb120
   111d4:	movt	r0, #2
   111d8:	ldr	r0, [r0]
   111dc:	ldr	r1, [fp, #-8]
   111e0:	cmp	r0, r1
   111e4:	beq	11210 <__assert_fail@plt+0x31c>
   111e8:	movw	r0, #40959	; 0x9fff
   111ec:	movt	r0, #1
   111f0:	bl	10e1c <gettext@plt>
   111f4:	movw	r1, #0
   111f8:	str	r0, [sp, #24]
   111fc:	mov	r0, r1
   11200:	ldr	r2, [sp, #24]
   11204:	bl	10dbc <error@plt>
   11208:	movw	r0, #1
   1120c:	bl	11620 <__assert_fail@plt+0x72c>
   11210:	ldr	r0, [sp, #56]	; 0x38
   11214:	cmp	r0, #0
   11218:	beq	11268 <__assert_fail@plt+0x374>
   1121c:	ldr	r0, [sp, #52]	; 0x34
   11220:	cmp	r0, #0
   11224:	movw	r0, #0
   11228:	movne	r0, #1
   1122c:	tst	r0, #1
   11230:	movw	r0, #49	; 0x31
   11234:	moveq	r0, #48	; 0x30
   11238:	movw	r1, #45364	; 0xb134
   1123c:	movt	r1, #2
   11240:	ldr	r1, [r1]
   11244:	bl	10eac <fputc@plt>
   11248:	movw	r1, #45364	; 0xb134
   1124c:	movt	r1, #2
   11250:	ldr	r1, [r1]
   11254:	movw	r2, #0
   11258:	str	r0, [sp, #20]
   1125c:	mov	r0, r2
   11260:	bl	10eac <fputc@plt>
   11264:	b	112c4 <__assert_fail@plt+0x3d0>
   11268:	movw	r0, #45364	; 0xb134
   1126c:	movt	r0, #2
   11270:	ldr	r3, [r0]
   11274:	movw	r0, #41460	; 0xa1f4
   11278:	movt	r0, #1
   1127c:	movw	r1, #1
   11280:	movw	r2, #10
   11284:	bl	10d80 <fwrite@plt>
   11288:	cmp	r0, #10
   1128c:	beq	112c0 <__assert_fail@plt+0x3cc>
   11290:	bl	10e40 <__errno_location@plt>
   11294:	ldr	r1, [r0]
   11298:	movw	r0, #40981	; 0xa015
   1129c:	movt	r0, #1
   112a0:	str	r1, [sp, #16]
   112a4:	bl	10e1c <gettext@plt>
   112a8:	movw	r1, #1
   112ac:	str	r0, [sp, #12]
   112b0:	mov	r0, r1
   112b4:	ldr	r1, [sp, #16]
   112b8:	ldr	r2, [sp, #12]
   112bc:	bl	10dbc <error@plt>
   112c0:	b	112c4 <__assert_fail@plt+0x3d0>
   112c4:	b	112c8 <__assert_fail@plt+0x3d4>
   112c8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   112cc:	movw	r0, #45360	; 0xb130
   112d0:	movt	r0, #2
   112d4:	ldr	r3, [r0]
   112d8:	sub	r0, fp, #16
   112dc:	sub	r1, fp, #24
   112e0:	bl	10ec4 <getdelim@plt>
   112e4:	str	r0, [fp, #-44]	; 0xffffffd4
   112e8:	cmp	r0, #0
   112ec:	ble	114c8 <__assert_fail@plt+0x5d4>
   112f0:	ldr	r0, [fp, #-16]
   112f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   112f8:	sub	r1, r1, #1
   112fc:	add	r0, r0, r1
   11300:	ldrb	r0, [r0]
   11304:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11308:	cmp	r0, r1
   1130c:	beq	11334 <__assert_fail@plt+0x440>
   11310:	movw	r0, #41016	; 0xa038
   11314:	movt	r0, #1
   11318:	bl	10e1c <gettext@plt>
   1131c:	movw	r1, #0
   11320:	str	r0, [sp, #8]
   11324:	mov	r0, r1
   11328:	ldr	r2, [sp, #8]
   1132c:	bl	10dbc <error@plt>
   11330:	b	1134c <__assert_fail@plt+0x458>
   11334:	ldr	r0, [fp, #-16]
   11338:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1133c:	sub	r1, r1, #1
   11340:	add	r0, r0, r1
   11344:	movw	r1, #0
   11348:	strb	r1, [r0]
   1134c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11350:	ldr	r1, [fp, #-16]
   11354:	bl	11704 <__assert_fail@plt+0x810>
   11358:	str	r0, [fp, #-32]	; 0xffffffe0
   1135c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11360:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11364:	sub	r0, r0, r1
   11368:	str	r0, [fp, #-40]	; 0xffffffd8
   1136c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11370:	movw	r1, #32767	; 0x7fff
   11374:	cmp	r0, r1
   11378:	bgt	11388 <__assert_fail@plt+0x494>
   1137c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11380:	cmn	r0, #32768	; 0x8000
   11384:	bge	1139c <__assert_fail@plt+0x4a8>
   11388:	movw	r0, #0
   1138c:	str	r0, [fp, #-32]	; 0xffffffe0
   11390:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11394:	sub	r0, r0, r1
   11398:	str	r0, [fp, #-40]	; 0xffffffd8
   1139c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   113a0:	str	r0, [fp, #-36]	; 0xffffffdc
   113a4:	ldr	r0, [sp, #56]	; 0x38
   113a8:	cmp	r0, #0
   113ac:	beq	113bc <__assert_fail@plt+0x4c8>
   113b0:	movw	r0, #0
   113b4:	str	r0, [sp, #56]	; 0x38
   113b8:	b	11448 <__assert_fail@plt+0x554>
   113bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   113c0:	cmn	r0, #127	; 0x7f
   113c4:	blt	113d4 <__assert_fail@plt+0x4e0>
   113c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   113cc:	cmp	r0, #127	; 0x7f
   113d0:	ble	1141c <__assert_fail@plt+0x528>
   113d4:	movw	r0, #45364	; 0xb134
   113d8:	movt	r0, #2
   113dc:	ldr	r1, [r0]
   113e0:	movw	r0, #128	; 0x80
   113e4:	bl	10eb8 <putc@plt>
   113e8:	mvn	r1, #0
   113ec:	cmp	r1, r0
   113f0:	bne	113f8 <__assert_fail@plt+0x504>
   113f4:	bl	117bc <__assert_fail@plt+0x8c8>
   113f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   113fc:	movw	r1, #45364	; 0xb134
   11400:	movt	r1, #2
   11404:	ldr	r1, [r1]
   11408:	bl	117f8 <__assert_fail@plt+0x904>
   1140c:	cmp	r0, #0
   11410:	bne	11418 <__assert_fail@plt+0x524>
   11414:	bl	117bc <__assert_fail@plt+0x8c8>
   11418:	b	11444 <__assert_fail@plt+0x550>
   1141c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11420:	movw	r1, #45364	; 0xb134
   11424:	movt	r1, #2
   11428:	ldr	r1, [r1]
   1142c:	bl	10eb8 <putc@plt>
   11430:	mvn	r1, #0
   11434:	cmp	r1, r0
   11438:	bne	11440 <__assert_fail@plt+0x54c>
   1143c:	bl	117bc <__assert_fail@plt+0x8c8>
   11440:	b	11444 <__assert_fail@plt+0x550>
   11444:	b	11448 <__assert_fail@plt+0x554>
   11448:	ldr	r0, [fp, #-16]
   1144c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11450:	add	r0, r0, r1
   11454:	movw	r1, #45364	; 0xb134
   11458:	movt	r1, #2
   1145c:	ldr	r1, [r1]
   11460:	bl	10ed0 <fputs@plt>
   11464:	mvn	r1, #0
   11468:	cmp	r1, r0
   1146c:	beq	11490 <__assert_fail@plt+0x59c>
   11470:	movw	r0, #45364	; 0xb134
   11474:	movt	r0, #2
   11478:	ldr	r1, [r0]
   1147c:	movw	r0, #0
   11480:	bl	10eb8 <putc@plt>
   11484:	mvn	r1, #0
   11488:	cmp	r1, r0
   1148c:	bne	11494 <__assert_fail@plt+0x5a0>
   11490:	bl	117bc <__assert_fail@plt+0x8c8>
   11494:	ldr	r0, [fp, #-20]	; 0xffffffec
   11498:	str	r0, [sp, #48]	; 0x30
   1149c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   114a0:	str	r0, [sp, #44]	; 0x2c
   114a4:	ldr	r0, [fp, #-16]
   114a8:	str	r0, [fp, #-20]	; 0xffffffec
   114ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   114b0:	str	r0, [fp, #-28]	; 0xffffffe4
   114b4:	ldr	r0, [sp, #48]	; 0x30
   114b8:	str	r0, [fp, #-16]
   114bc:	ldr	r0, [sp, #44]	; 0x2c
   114c0:	str	r0, [fp, #-24]	; 0xffffffe8
   114c4:	b	112c8 <__assert_fail@plt+0x3d4>
   114c8:	ldr	r0, [fp, #-16]
   114cc:	bl	17a98 <__assert_fail@plt+0x6ba4>
   114d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   114d4:	bl	17a98 <__assert_fail@plt+0x6ba4>
   114d8:	movw	r0, #0
   114dc:	str	r0, [fp, #-4]
   114e0:	ldr	r0, [fp, #-4]
   114e4:	mov	sp, fp
   114e8:	pop	{fp, pc}
   114ec:	push	{fp, lr}
   114f0:	mov	fp, sp
   114f4:	sub	sp, sp, #32
   114f8:	str	r0, [fp, #-4]
   114fc:	bl	10e40 <__errno_location@plt>
   11500:	movw	r1, #0
   11504:	str	r1, [r0]
   11508:	ldr	r0, [fp, #-4]
   1150c:	sub	r1, fp, #12
   11510:	movw	r2, #10
   11514:	bl	10cfc <strtol@plt>
   11518:	str	r0, [fp, #-8]
   1151c:	ldr	r0, [fp, #-8]
   11520:	movw	r1, #0
   11524:	cmp	r1, r0
   11528:	bne	11568 <__assert_fail@plt+0x674>
   1152c:	ldr	r0, [fp, #-12]
   11530:	movw	r1, #45368	; 0xb138
   11534:	movt	r1, #2
   11538:	ldr	r1, [r1]
   1153c:	cmp	r0, r1
   11540:	bne	11568 <__assert_fail@plt+0x674>
   11544:	movw	r0, #41079	; 0xa077
   11548:	movt	r0, #1
   1154c:	bl	10e1c <gettext@plt>
   11550:	movw	r1, #1
   11554:	str	r0, [sp, #16]
   11558:	mov	r0, r1
   1155c:	movw	r1, #0
   11560:	ldr	r2, [sp, #16]
   11564:	bl	10dbc <error@plt>
   11568:	ldr	r0, [pc, #168]	; 11618 <__assert_fail@plt+0x724>
   1156c:	ldr	r1, [fp, #-8]
   11570:	cmp	r0, r1
   11574:	beq	11588 <__assert_fail@plt+0x694>
   11578:	ldr	r0, [pc, #156]	; 1161c <__assert_fail@plt+0x728>
   1157c:	ldr	r1, [fp, #-8]
   11580:	cmp	r0, r1
   11584:	bne	115c0 <__assert_fail@plt+0x6cc>
   11588:	bl	10e40 <__errno_location@plt>
   1158c:	ldr	r0, [r0]
   11590:	cmp	r0, #0
   11594:	beq	115c0 <__assert_fail@plt+0x6cc>
   11598:	movw	r0, #41138	; 0xa0b2
   1159c:	movt	r0, #1
   115a0:	bl	10e1c <gettext@plt>
   115a4:	ldr	r3, [fp, #-4]
   115a8:	movw	r1, #1
   115ac:	str	r0, [sp, #12]
   115b0:	mov	r0, r1
   115b4:	movw	r1, #0
   115b8:	ldr	r2, [sp, #12]
   115bc:	bl	10dbc <error@plt>
   115c0:	ldr	r0, [fp, #-12]
   115c4:	ldrsb	r0, [r0]
   115c8:	cmp	r0, #0
   115cc:	beq	1160c <__assert_fail@plt+0x718>
   115d0:	movw	r0, #41190	; 0xa0e6
   115d4:	movt	r0, #1
   115d8:	bl	10e1c <gettext@plt>
   115dc:	ldr	r3, [fp, #-4]
   115e0:	ldr	r1, [fp, #-12]
   115e4:	movw	r2, #1
   115e8:	str	r0, [sp, #8]
   115ec:	mov	r0, r2
   115f0:	movw	r2, #0
   115f4:	str	r1, [sp, #4]
   115f8:	mov	r1, r2
   115fc:	ldr	r2, [sp, #8]
   11600:	ldr	ip, [sp, #4]
   11604:	str	ip, [sp]
   11608:	bl	10dbc <error@plt>
   1160c:	ldr	r0, [fp, #-8]
   11610:	mov	sp, fp
   11614:	pop	{fp, pc}
   11618:	andhi	r0, r0, r0
   1161c:	svcvc	0x00ffffff
   11620:	push	{fp, lr}
   11624:	mov	fp, sp
   11628:	sub	sp, sp, #32
   1162c:	str	r0, [fp, #-4]
   11630:	ldr	r0, [fp, #-4]
   11634:	cmp	r0, #0
   11638:	beq	1168c <__assert_fail@plt+0x798>
   1163c:	movw	r0, #45352	; 0xb128
   11640:	movt	r0, #2
   11644:	ldr	r0, [r0]
   11648:	movw	r1, #41234	; 0xa112
   1164c:	movt	r1, #1
   11650:	str	r0, [fp, #-8]
   11654:	mov	r0, r1
   11658:	bl	10e1c <gettext@plt>
   1165c:	movw	r1, #45384	; 0xb148
   11660:	movt	r1, #2
   11664:	ldr	r2, [r1]
   11668:	ldr	r1, [fp, #-8]
   1166c:	str	r0, [fp, #-12]
   11670:	mov	r0, r1
   11674:	ldr	r1, [fp, #-12]
   11678:	bl	10e34 <fprintf@plt>
   1167c:	ldr	r1, [fp, #-4]
   11680:	str	r0, [sp, #16]
   11684:	mov	r0, r1
   11688:	bl	10e10 <exit@plt>
   1168c:	movw	r0, #45364	; 0xb134
   11690:	movt	r0, #2
   11694:	ldr	r0, [r0]
   11698:	movw	r1, #41273	; 0xa139
   1169c:	movt	r1, #1
   116a0:	str	r0, [sp, #12]
   116a4:	mov	r0, r1
   116a8:	bl	10e1c <gettext@plt>
   116ac:	movw	r1, #45384	; 0xb148
   116b0:	movt	r1, #2
   116b4:	ldr	r2, [r1]
   116b8:	ldr	r1, [sp, #12]
   116bc:	str	r0, [sp, #8]
   116c0:	mov	r0, r1
   116c4:	ldr	r1, [sp, #8]
   116c8:	bl	10e34 <fprintf@plt>
   116cc:	movw	r1, #45364	; 0xb134
   116d0:	movt	r1, #2
   116d4:	ldr	r1, [r1]
   116d8:	movw	r2, #45384	; 0xb148
   116dc:	movt	r2, #2
   116e0:	ldr	r2, [r2]
   116e4:	str	r0, [sp, #4]
   116e8:	mov	r0, r1
   116ec:	mov	r1, r2
   116f0:	bl	11988 <__assert_fail@plt+0xa94>
   116f4:	ldr	r1, [fp, #-4]
   116f8:	str	r0, [sp]
   116fc:	mov	r0, r1
   11700:	bl	10e10 <exit@plt>
   11704:	sub	sp, sp, #20
   11708:	ldr	r2, [pc, #168]	; 117b8 <__assert_fail@plt+0x8c4>
   1170c:	str	r0, [sp, #16]
   11710:	str	r1, [sp, #12]
   11714:	str	r2, [sp, #4]
   11718:	ldr	r0, [sp, #16]
   1171c:	str	r0, [sp, #8]
   11720:	ldr	r0, [sp, #16]
   11724:	ldrb	r0, [r0]
   11728:	ldr	r1, [sp, #12]
   1172c:	ldrb	r1, [r1]
   11730:	cmp	r0, r1
   11734:	movw	r0, #0
   11738:	str	r0, [sp]
   1173c:	bne	11758 <__assert_fail@plt+0x864>
   11740:	ldr	r0, [sp, #16]
   11744:	ldrb	r0, [r0]
   11748:	cmp	r0, #0
   1174c:	movw	r0, #0
   11750:	movne	r0, #1
   11754:	str	r0, [sp]
   11758:	ldr	r0, [sp]
   1175c:	tst	r0, #1
   11760:	beq	117a4 <__assert_fail@plt+0x8b0>
   11764:	ldr	r0, [sp, #4]
   11768:	mvn	r1, #0
   1176c:	add	r0, r0, r1
   11770:	str	r0, [sp, #4]
   11774:	movw	r1, #0
   11778:	cmp	r1, r0
   1177c:	bne	11784 <__assert_fail@plt+0x890>
   11780:	b	117a4 <__assert_fail@plt+0x8b0>
   11784:	b	11788 <__assert_fail@plt+0x894>
   11788:	ldr	r0, [sp, #16]
   1178c:	add	r0, r0, #1
   11790:	str	r0, [sp, #16]
   11794:	ldr	r0, [sp, #12]
   11798:	add	r0, r0, #1
   1179c:	str	r0, [sp, #12]
   117a0:	b	11720 <__assert_fail@plt+0x82c>
   117a4:	ldr	r0, [sp, #16]
   117a8:	ldr	r1, [sp, #8]
   117ac:	sub	r0, r0, r1
   117b0:	add	sp, sp, #20
   117b4:	bx	lr
   117b8:	svcvc	0x00ffffff
   117bc:	push	{fp, lr}
   117c0:	mov	fp, sp
   117c4:	sub	sp, sp, #8
   117c8:	bl	10e40 <__errno_location@plt>
   117cc:	ldr	r1, [r0]
   117d0:	movw	r0, #41319	; 0xa167
   117d4:	movt	r0, #1
   117d8:	str	r1, [sp, #4]
   117dc:	bl	10e1c <gettext@plt>
   117e0:	movw	r1, #1
   117e4:	str	r0, [sp]
   117e8:	mov	r0, r1
   117ec:	ldr	r1, [sp, #4]
   117f0:	ldr	r2, [sp]
   117f4:	bl	10dbc <error@plt>
   117f8:	push	{fp, lr}
   117fc:	mov	fp, sp
   11800:	sub	sp, sp, #16
   11804:	str	r0, [fp, #-4]
   11808:	str	r1, [sp, #8]
   1180c:	ldr	r0, [fp, #-4]
   11810:	movw	r1, #32767	; 0x7fff
   11814:	cmp	r0, r1
   11818:	bgt	11820 <__assert_fail@plt+0x92c>
   1181c:	b	11840 <__assert_fail@plt+0x94c>
   11820:	movw	r0, #41331	; 0xa173
   11824:	movt	r0, #1
   11828:	movw	r1, #41345	; 0xa181
   1182c:	movt	r1, #1
   11830:	movw	r2, #104	; 0x68
   11834:	movw	r3, #41354	; 0xa18a
   11838:	movt	r3, #1
   1183c:	bl	10ef4 <__assert_fail@plt>
   11840:	ldr	r0, [fp, #-4]
   11844:	cmn	r0, #32768	; 0x8000
   11848:	blt	11850 <__assert_fail@plt+0x95c>
   1184c:	b	11870 <__assert_fail@plt+0x97c>
   11850:	movw	r0, #41381	; 0xa1a5
   11854:	movt	r0, #1
   11858:	movw	r1, #41345	; 0xa181
   1185c:	movt	r1, #1
   11860:	movw	r2, #105	; 0x69
   11864:	movw	r3, #41354	; 0xa18a
   11868:	movt	r3, #1
   1186c:	bl	10ef4 <__assert_fail@plt>
   11870:	ldr	r0, [fp, #-4]
   11874:	asr	r0, r0, #8
   11878:	ldr	r1, [sp, #8]
   1187c:	bl	10eb8 <putc@plt>
   11880:	cmn	r0, #1
   11884:	movw	r0, #0
   11888:	str	r0, [sp, #4]
   1188c:	beq	118ac <__assert_fail@plt+0x9b8>
   11890:	ldr	r0, [fp, #-4]
   11894:	ldr	r1, [sp, #8]
   11898:	bl	10eb8 <putc@plt>
   1189c:	cmn	r0, #1
   118a0:	movw	r0, #0
   118a4:	movne	r0, #1
   118a8:	str	r0, [sp, #4]
   118ac:	ldr	r0, [sp, #4]
   118b0:	and	r0, r0, #1
   118b4:	mov	sp, fp
   118b8:	pop	{fp, pc}
   118bc:	push	{r4, r5, fp, lr}
   118c0:	add	fp, sp, #8
   118c4:	sub	sp, sp, #48	; 0x30
   118c8:	str	r0, [fp, #-12]
   118cc:	movw	r0, #45352	; 0xb128
   118d0:	movt	r0, #2
   118d4:	ldr	r0, [r0]
   118d8:	bl	179ec <__assert_fail@plt+0x6af8>
   118dc:	movw	r1, #45364	; 0xb134
   118e0:	movt	r1, #2
   118e4:	ldr	r1, [r1]
   118e8:	ldr	r2, [fp, #-12]
   118ec:	movw	r3, #45264	; 0xb0d0
   118f0:	movt	r3, #2
   118f4:	ldr	r3, [r3]
   118f8:	movw	ip, #41498	; 0xa21a
   118fc:	movt	ip, #1
   11900:	str	r0, [fp, #-16]
   11904:	mov	r0, ip
   11908:	str	r1, [fp, #-20]	; 0xffffffec
   1190c:	str	r2, [fp, #-24]	; 0xffffffe8
   11910:	str	r3, [sp, #28]
   11914:	bl	10e1c <gettext@plt>
   11918:	movw	r1, #41513	; 0xa229
   1191c:	movt	r1, #1
   11920:	str	r0, [sp, #24]
   11924:	mov	r0, r1
   11928:	bl	10e1c <gettext@plt>
   1192c:	movw	r1, #41528	; 0xa238
   11930:	movt	r1, #1
   11934:	str	r0, [sp, #20]
   11938:	mov	r0, r1
   1193c:	bl	10e1c <gettext@plt>
   11940:	ldr	r1, [fp, #-20]	; 0xffffffec
   11944:	str	r0, [sp, #16]
   11948:	mov	r0, r1
   1194c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11950:	movw	r2, #41484	; 0xa20c
   11954:	movt	r2, #1
   11958:	ldr	r3, [sp, #28]
   1195c:	ldr	ip, [sp, #24]
   11960:	str	ip, [sp]
   11964:	ldr	lr, [sp, #20]
   11968:	str	lr, [sp, #4]
   1196c:	ldr	r4, [sp, #16]
   11970:	str	r4, [sp, #8]
   11974:	movw	r5, #0
   11978:	str	r5, [sp, #12]
   1197c:	bl	14a40 <__assert_fail@plt+0x3b4c>
   11980:	sub	sp, fp, #8
   11984:	pop	{r4, r5, fp, pc}
   11988:	push	{fp, lr}
   1198c:	mov	fp, sp
   11990:	sub	sp, sp, #32
   11994:	str	r0, [fp, #-4]
   11998:	str	r1, [fp, #-8]
   1199c:	ldr	r0, [fp, #-4]
   119a0:	movw	r1, #41541	; 0xa245
   119a4:	movt	r1, #1
   119a8:	str	r0, [fp, #-12]
   119ac:	mov	r0, r1
   119b0:	bl	10e1c <gettext@plt>
   119b4:	ldr	r3, [fp, #-8]
   119b8:	ldr	r1, [fp, #-12]
   119bc:	str	r0, [sp, #16]
   119c0:	mov	r0, r1
   119c4:	ldr	r1, [sp, #16]
   119c8:	movw	r2, #41747	; 0xa313
   119cc:	movt	r2, #1
   119d0:	movw	ip, #41484	; 0xa20c
   119d4:	movt	ip, #1
   119d8:	str	ip, [sp]
   119dc:	movw	ip, #41786	; 0xa33a
   119e0:	movt	ip, #1
   119e4:	str	ip, [sp, #4]
   119e8:	movw	ip, #41833	; 0xa369
   119ec:	movt	ip, #1
   119f0:	str	ip, [sp, #8]
   119f4:	bl	10e34 <fprintf@plt>
   119f8:	mov	sp, fp
   119fc:	pop	{fp, pc}
   11a00:	sub	sp, sp, #4
   11a04:	str	r0, [sp]
   11a08:	ldr	r0, [sp]
   11a0c:	movw	r1, #45376	; 0xb140
   11a10:	movt	r1, #2
   11a14:	str	r0, [r1]
   11a18:	add	sp, sp, #4
   11a1c:	bx	lr
   11a20:	sub	sp, sp, #4
   11a24:	and	r0, r0, #1
   11a28:	strb	r0, [sp, #3]
   11a2c:	ldrb	r0, [sp, #3]
   11a30:	and	r0, r0, #1
   11a34:	movw	r1, #45380	; 0xb144
   11a38:	movt	r1, #2
   11a3c:	strb	r0, [r1]
   11a40:	add	sp, sp, #4
   11a44:	bx	lr
   11a48:	push	{fp, lr}
   11a4c:	mov	fp, sp
   11a50:	sub	sp, sp, #24
   11a54:	movw	r0, #45364	; 0xb134
   11a58:	movt	r0, #2
   11a5c:	ldr	r0, [r0]
   11a60:	bl	1919c <__assert_fail@plt+0x82a8>
   11a64:	cmp	r0, #0
   11a68:	beq	11b38 <__assert_fail@plt+0xc44>
   11a6c:	movw	r0, #45380	; 0xb144
   11a70:	movt	r0, #2
   11a74:	ldrb	r0, [r0]
   11a78:	tst	r0, #1
   11a7c:	beq	11a90 <__assert_fail@plt+0xb9c>
   11a80:	bl	10e40 <__errno_location@plt>
   11a84:	ldr	r0, [r0]
   11a88:	cmp	r0, #32
   11a8c:	beq	11b38 <__assert_fail@plt+0xc44>
   11a90:	movw	r0, #41319	; 0xa167
   11a94:	movt	r0, #1
   11a98:	bl	10e1c <gettext@plt>
   11a9c:	str	r0, [fp, #-4]
   11aa0:	movw	r0, #45376	; 0xb140
   11aa4:	movt	r0, #2
   11aa8:	ldr	r0, [r0]
   11aac:	movw	r1, #0
   11ab0:	cmp	r0, r1
   11ab4:	beq	11b0c <__assert_fail@plt+0xc18>
   11ab8:	bl	10e40 <__errno_location@plt>
   11abc:	ldr	r1, [r0]
   11ac0:	movw	r0, #45376	; 0xb140
   11ac4:	movt	r0, #2
   11ac8:	ldr	r0, [r0]
   11acc:	str	r1, [fp, #-8]
   11ad0:	bl	13f28 <__assert_fail@plt+0x3034>
   11ad4:	ldr	r1, [fp, #-4]
   11ad8:	movw	r2, #0
   11adc:	str	r0, [sp, #12]
   11ae0:	mov	r0, r2
   11ae4:	ldr	r2, [fp, #-8]
   11ae8:	str	r1, [sp, #8]
   11aec:	mov	r1, r2
   11af0:	movw	r2, #41855	; 0xa37f
   11af4:	movt	r2, #1
   11af8:	ldr	r3, [sp, #12]
   11afc:	ldr	ip, [sp, #8]
   11b00:	str	ip, [sp]
   11b04:	bl	10dbc <error@plt>
   11b08:	b	11b28 <__assert_fail@plt+0xc34>
   11b0c:	bl	10e40 <__errno_location@plt>
   11b10:	ldr	r1, [r0]
   11b14:	ldr	r3, [fp, #-4]
   11b18:	movw	r0, #0
   11b1c:	movw	r2, #41859	; 0xa383
   11b20:	movt	r2, #1
   11b24:	bl	10dbc <error@plt>
   11b28:	movw	r0, #45268	; 0xb0d4
   11b2c:	movt	r0, #2
   11b30:	ldr	r0, [r0]
   11b34:	bl	10d38 <_exit@plt>
   11b38:	movw	r0, #45352	; 0xb128
   11b3c:	movt	r0, #2
   11b40:	ldr	r0, [r0]
   11b44:	bl	1919c <__assert_fail@plt+0x82a8>
   11b48:	cmp	r0, #0
   11b4c:	beq	11b60 <__assert_fail@plt+0xc6c>
   11b50:	movw	r0, #45268	; 0xb0d4
   11b54:	movt	r0, #2
   11b58:	ldr	r0, [r0]
   11b5c:	bl	10d38 <_exit@plt>
   11b60:	mov	sp, fp
   11b64:	pop	{fp, pc}
   11b68:	push	{fp, lr}
   11b6c:	mov	fp, sp
   11b70:	sub	sp, sp, #24
   11b74:	str	r0, [fp, #-4]
   11b78:	ldr	r0, [fp, #-4]
   11b7c:	movw	r1, #0
   11b80:	cmp	r0, r1
   11b84:	bne	11ba8 <__assert_fail@plt+0xcb4>
   11b88:	movw	r0, #45352	; 0xb128
   11b8c:	movt	r0, #2
   11b90:	ldr	r1, [r0]
   11b94:	movw	r0, #41862	; 0xa386
   11b98:	movt	r0, #1
   11b9c:	bl	10ed0 <fputs@plt>
   11ba0:	str	r0, [sp, #8]
   11ba4:	bl	10ee8 <abort@plt>
   11ba8:	ldr	r0, [fp, #-4]
   11bac:	movw	r1, #47	; 0x2f
   11bb0:	bl	10e94 <strrchr@plt>
   11bb4:	str	r0, [fp, #-8]
   11bb8:	ldr	r0, [fp, #-8]
   11bbc:	movw	r1, #0
   11bc0:	cmp	r0, r1
   11bc4:	beq	11bd8 <__assert_fail@plt+0xce4>
   11bc8:	ldr	r0, [fp, #-8]
   11bcc:	add	r0, r0, #1
   11bd0:	str	r0, [sp, #4]
   11bd4:	b	11be0 <__assert_fail@plt+0xcec>
   11bd8:	ldr	r0, [fp, #-4]
   11bdc:	str	r0, [sp, #4]
   11be0:	ldr	r0, [sp, #4]
   11be4:	str	r0, [sp, #12]
   11be8:	ldr	r0, [sp, #12]
   11bec:	ldr	r1, [fp, #-4]
   11bf0:	sub	r0, r0, r1
   11bf4:	cmp	r0, #7
   11bf8:	blt	11c64 <__assert_fail@plt+0xd70>
   11bfc:	ldr	r0, [sp, #12]
   11c00:	mvn	r1, #6
   11c04:	add	r0, r0, r1
   11c08:	movw	r1, #41918	; 0xa3be
   11c0c:	movt	r1, #1
   11c10:	movw	r2, #7
   11c14:	bl	10edc <strncmp@plt>
   11c18:	cmp	r0, #0
   11c1c:	bne	11c64 <__assert_fail@plt+0xd70>
   11c20:	ldr	r0, [sp, #12]
   11c24:	str	r0, [fp, #-4]
   11c28:	ldr	r0, [sp, #12]
   11c2c:	movw	r1, #41926	; 0xa3c6
   11c30:	movt	r1, #1
   11c34:	movw	r2, #3
   11c38:	bl	10edc <strncmp@plt>
   11c3c:	cmp	r0, #0
   11c40:	bne	11c60 <__assert_fail@plt+0xd6c>
   11c44:	ldr	r0, [sp, #12]
   11c48:	add	r0, r0, #3
   11c4c:	str	r0, [fp, #-4]
   11c50:	ldr	r0, [fp, #-4]
   11c54:	movw	r1, #45336	; 0xb118
   11c58:	movt	r1, #2
   11c5c:	str	r0, [r1]
   11c60:	b	11c64 <__assert_fail@plt+0xd70>
   11c64:	ldr	r0, [fp, #-4]
   11c68:	movw	r1, #45384	; 0xb148
   11c6c:	movt	r1, #2
   11c70:	str	r0, [r1]
   11c74:	ldr	r0, [fp, #-4]
   11c78:	movw	r1, #45340	; 0xb11c
   11c7c:	movt	r1, #2
   11c80:	str	r0, [r1]
   11c84:	mov	sp, fp
   11c88:	pop	{fp, pc}
   11c8c:	push	{fp, lr}
   11c90:	mov	fp, sp
   11c94:	sub	sp, sp, #24
   11c98:	str	r0, [fp, #-4]
   11c9c:	bl	10e40 <__errno_location@plt>
   11ca0:	ldr	r0, [r0]
   11ca4:	str	r0, [fp, #-8]
   11ca8:	ldr	r0, [fp, #-4]
   11cac:	movw	r1, #0
   11cb0:	cmp	r0, r1
   11cb4:	beq	11cc4 <__assert_fail@plt+0xdd0>
   11cb8:	ldr	r0, [fp, #-4]
   11cbc:	str	r0, [sp, #8]
   11cc0:	b	11cd4 <__assert_fail@plt+0xde0>
   11cc4:	movw	r0, #45388	; 0xb14c
   11cc8:	movt	r0, #2
   11ccc:	str	r0, [sp, #8]
   11cd0:	b	11cd4 <__assert_fail@plt+0xde0>
   11cd4:	ldr	r0, [sp, #8]
   11cd8:	movw	r1, #48	; 0x30
   11cdc:	bl	17800 <__assert_fail@plt+0x690c>
   11ce0:	str	r0, [sp, #12]
   11ce4:	ldr	r0, [fp, #-8]
   11ce8:	str	r0, [sp, #4]
   11cec:	bl	10e40 <__errno_location@plt>
   11cf0:	ldr	r1, [sp, #4]
   11cf4:	str	r1, [r0]
   11cf8:	ldr	r0, [sp, #12]
   11cfc:	mov	sp, fp
   11d00:	pop	{fp, pc}
   11d04:	sub	sp, sp, #8
   11d08:	str	r0, [sp, #4]
   11d0c:	ldr	r0, [sp, #4]
   11d10:	movw	r1, #0
   11d14:	cmp	r0, r1
   11d18:	beq	11d28 <__assert_fail@plt+0xe34>
   11d1c:	ldr	r0, [sp, #4]
   11d20:	str	r0, [sp]
   11d24:	b	11d38 <__assert_fail@plt+0xe44>
   11d28:	movw	r0, #45388	; 0xb14c
   11d2c:	movt	r0, #2
   11d30:	str	r0, [sp]
   11d34:	b	11d38 <__assert_fail@plt+0xe44>
   11d38:	ldr	r0, [sp]
   11d3c:	ldr	r0, [r0]
   11d40:	add	sp, sp, #8
   11d44:	bx	lr
   11d48:	sub	sp, sp, #16
   11d4c:	str	r0, [sp, #12]
   11d50:	str	r1, [sp, #8]
   11d54:	ldr	r0, [sp, #8]
   11d58:	ldr	r1, [sp, #12]
   11d5c:	movw	r2, #0
   11d60:	cmp	r1, r2
   11d64:	str	r0, [sp, #4]
   11d68:	beq	11d78 <__assert_fail@plt+0xe84>
   11d6c:	ldr	r0, [sp, #12]
   11d70:	str	r0, [sp]
   11d74:	b	11d88 <__assert_fail@plt+0xe94>
   11d78:	movw	r0, #45388	; 0xb14c
   11d7c:	movt	r0, #2
   11d80:	str	r0, [sp]
   11d84:	b	11d88 <__assert_fail@plt+0xe94>
   11d88:	ldr	r0, [sp]
   11d8c:	ldr	r1, [sp, #4]
   11d90:	str	r1, [r0]
   11d94:	add	sp, sp, #16
   11d98:	bx	lr
   11d9c:	sub	sp, sp, #32
   11da0:	str	r0, [sp, #28]
   11da4:	strb	r1, [sp, #27]
   11da8:	str	r2, [sp, #20]
   11dac:	ldrb	r0, [sp, #27]
   11db0:	strb	r0, [sp, #19]
   11db4:	ldr	r0, [sp, #28]
   11db8:	movw	r1, #0
   11dbc:	cmp	r0, r1
   11dc0:	beq	11dd0 <__assert_fail@plt+0xedc>
   11dc4:	ldr	r0, [sp, #28]
   11dc8:	str	r0, [sp]
   11dcc:	b	11de0 <__assert_fail@plt+0xeec>
   11dd0:	movw	r0, #45388	; 0xb14c
   11dd4:	movt	r0, #2
   11dd8:	str	r0, [sp]
   11ddc:	b	11de0 <__assert_fail@plt+0xeec>
   11de0:	ldr	r0, [sp]
   11de4:	add	r0, r0, #8
   11de8:	ldrb	r1, [sp, #19]
   11dec:	lsr	r1, r1, #5
   11df0:	add	r0, r0, r1, lsl #2
   11df4:	str	r0, [sp, #12]
   11df8:	ldrb	r0, [sp, #19]
   11dfc:	and	r0, r0, #31
   11e00:	str	r0, [sp, #8]
   11e04:	ldr	r0, [sp, #12]
   11e08:	ldr	r0, [r0]
   11e0c:	ldr	r1, [sp, #8]
   11e10:	lsr	r0, r0, r1
   11e14:	and	r0, r0, #1
   11e18:	str	r0, [sp, #4]
   11e1c:	ldr	r0, [sp, #20]
   11e20:	and	r0, r0, #1
   11e24:	ldr	r1, [sp, #4]
   11e28:	eor	r0, r0, r1
   11e2c:	ldr	r1, [sp, #8]
   11e30:	lsl	r0, r0, r1
   11e34:	ldr	r1, [sp, #12]
   11e38:	ldr	r2, [r1]
   11e3c:	eor	r0, r2, r0
   11e40:	str	r0, [r1]
   11e44:	ldr	r0, [sp, #4]
   11e48:	add	sp, sp, #32
   11e4c:	bx	lr
   11e50:	sub	sp, sp, #12
   11e54:	str	r0, [sp, #8]
   11e58:	str	r1, [sp, #4]
   11e5c:	ldr	r0, [sp, #8]
   11e60:	movw	r1, #0
   11e64:	cmp	r0, r1
   11e68:	bne	11e78 <__assert_fail@plt+0xf84>
   11e6c:	movw	r0, #45388	; 0xb14c
   11e70:	movt	r0, #2
   11e74:	str	r0, [sp, #8]
   11e78:	ldr	r0, [sp, #8]
   11e7c:	ldr	r0, [r0, #4]
   11e80:	str	r0, [sp]
   11e84:	ldr	r0, [sp, #4]
   11e88:	ldr	r1, [sp, #8]
   11e8c:	str	r0, [r1, #4]
   11e90:	ldr	r0, [sp]
   11e94:	add	sp, sp, #12
   11e98:	bx	lr
   11e9c:	push	{fp, lr}
   11ea0:	mov	fp, sp
   11ea4:	sub	sp, sp, #16
   11ea8:	str	r0, [fp, #-4]
   11eac:	str	r1, [sp, #8]
   11eb0:	str	r2, [sp, #4]
   11eb4:	ldr	r0, [fp, #-4]
   11eb8:	movw	r1, #0
   11ebc:	cmp	r0, r1
   11ec0:	bne	11ed0 <__assert_fail@plt+0xfdc>
   11ec4:	movw	r0, #45388	; 0xb14c
   11ec8:	movt	r0, #2
   11ecc:	str	r0, [fp, #-4]
   11ed0:	ldr	r0, [fp, #-4]
   11ed4:	movw	r1, #10
   11ed8:	str	r1, [r0]
   11edc:	ldr	r0, [sp, #8]
   11ee0:	movw	r1, #0
   11ee4:	cmp	r0, r1
   11ee8:	beq	11efc <__assert_fail@plt+0x1008>
   11eec:	ldr	r0, [sp, #4]
   11ef0:	movw	r1, #0
   11ef4:	cmp	r0, r1
   11ef8:	bne	11f00 <__assert_fail@plt+0x100c>
   11efc:	bl	10ee8 <abort@plt>
   11f00:	ldr	r0, [sp, #8]
   11f04:	ldr	r1, [fp, #-4]
   11f08:	str	r0, [r1, #40]	; 0x28
   11f0c:	ldr	r0, [sp, #4]
   11f10:	ldr	r1, [fp, #-4]
   11f14:	str	r0, [r1, #44]	; 0x2c
   11f18:	mov	sp, fp
   11f1c:	pop	{fp, pc}
   11f20:	push	{r4, r5, r6, sl, fp, lr}
   11f24:	add	fp, sp, #16
   11f28:	sub	sp, sp, #56	; 0x38
   11f2c:	ldr	ip, [fp, #8]
   11f30:	str	r0, [fp, #-20]	; 0xffffffec
   11f34:	str	r1, [fp, #-24]	; 0xffffffe8
   11f38:	str	r2, [fp, #-28]	; 0xffffffe4
   11f3c:	str	r3, [fp, #-32]	; 0xffffffe0
   11f40:	ldr	r0, [fp, #8]
   11f44:	movw	r1, #0
   11f48:	cmp	r0, r1
   11f4c:	beq	11f5c <__assert_fail@plt+0x1068>
   11f50:	ldr	r0, [fp, #8]
   11f54:	str	r0, [sp, #24]
   11f58:	b	11f6c <__assert_fail@plt+0x1078>
   11f5c:	movw	r0, #45388	; 0xb14c
   11f60:	movt	r0, #2
   11f64:	str	r0, [sp, #24]
   11f68:	b	11f6c <__assert_fail@plt+0x1078>
   11f6c:	ldr	r0, [sp, #24]
   11f70:	str	r0, [sp, #36]	; 0x24
   11f74:	bl	10e40 <__errno_location@plt>
   11f78:	ldr	r0, [r0]
   11f7c:	str	r0, [sp, #32]
   11f80:	ldr	r0, [fp, #-20]	; 0xffffffec
   11f84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11f88:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11f8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11f90:	ldr	ip, [sp, #36]	; 0x24
   11f94:	ldr	ip, [ip]
   11f98:	ldr	lr, [sp, #36]	; 0x24
   11f9c:	ldr	lr, [lr, #4]
   11fa0:	ldr	r4, [sp, #36]	; 0x24
   11fa4:	add	r4, r4, #8
   11fa8:	ldr	r5, [sp, #36]	; 0x24
   11fac:	ldr	r5, [r5, #40]	; 0x28
   11fb0:	ldr	r6, [sp, #36]	; 0x24
   11fb4:	ldr	r6, [r6, #44]	; 0x2c
   11fb8:	str	ip, [sp]
   11fbc:	str	lr, [sp, #4]
   11fc0:	str	r4, [sp, #8]
   11fc4:	str	r5, [sp, #12]
   11fc8:	str	r6, [sp, #16]
   11fcc:	bl	11ff4 <__assert_fail@plt+0x1100>
   11fd0:	str	r0, [sp, #28]
   11fd4:	ldr	r0, [sp, #32]
   11fd8:	str	r0, [sp, #20]
   11fdc:	bl	10e40 <__errno_location@plt>
   11fe0:	ldr	r1, [sp, #20]
   11fe4:	str	r1, [r0]
   11fe8:	ldr	r0, [sp, #28]
   11fec:	sub	sp, fp, #16
   11ff0:	pop	{r4, r5, r6, sl, fp, pc}
   11ff4:	push	{r4, r5, r6, sl, fp, lr}
   11ff8:	add	fp, sp, #16
   11ffc:	sub	sp, sp, #160	; 0xa0
   12000:	ldr	ip, [fp, #24]
   12004:	ldr	lr, [fp, #20]
   12008:	ldr	r4, [fp, #16]
   1200c:	ldr	r5, [fp, #12]
   12010:	ldr	r6, [fp, #8]
   12014:	str	r0, [fp, #-24]	; 0xffffffe8
   12018:	str	r1, [fp, #-28]	; 0xffffffe4
   1201c:	str	r2, [fp, #-32]	; 0xffffffe0
   12020:	str	r3, [fp, #-36]	; 0xffffffdc
   12024:	movw	r0, #0
   12028:	str	r0, [fp, #-44]	; 0xffffffd4
   1202c:	str	r0, [fp, #-48]	; 0xffffffd0
   12030:	str	r0, [fp, #-52]	; 0xffffffcc
   12034:	str	r0, [fp, #-56]	; 0xffffffc8
   12038:	movw	r0, #0
   1203c:	strb	r0, [fp, #-57]	; 0xffffffc7
   12040:	str	ip, [sp, #72]	; 0x48
   12044:	str	lr, [sp, #68]	; 0x44
   12048:	str	r4, [sp, #64]	; 0x40
   1204c:	str	r5, [sp, #60]	; 0x3c
   12050:	str	r6, [sp, #56]	; 0x38
   12054:	bl	10d98 <__ctype_get_mb_cur_max@plt>
   12058:	cmp	r0, #1
   1205c:	movw	r0, #0
   12060:	moveq	r0, #1
   12064:	and	r0, r0, #1
   12068:	strb	r0, [fp, #-58]	; 0xffffffc6
   1206c:	ldr	r0, [fp, #12]
   12070:	and	r0, r0, #2
   12074:	cmp	r0, #0
   12078:	movw	r0, #0
   1207c:	movne	r0, #1
   12080:	and	r0, r0, #1
   12084:	strb	r0, [fp, #-59]	; 0xffffffc5
   12088:	movw	r0, #0
   1208c:	strb	r0, [fp, #-60]	; 0xffffffc4
   12090:	strb	r0, [fp, #-61]	; 0xffffffc3
   12094:	movw	r0, #1
   12098:	strb	r0, [fp, #-62]	; 0xffffffc2
   1209c:	ldr	r0, [fp, #8]
   120a0:	cmp	r0, #10
   120a4:	str	r0, [sp, #52]	; 0x34
   120a8:	bhi	122d0 <__assert_fail@plt+0x13dc>
   120ac:	add	r0, pc, #8
   120b0:	ldr	r1, [sp, #52]	; 0x34
   120b4:	ldr	r0, [r0, r1, lsl #2]
   120b8:	mov	pc, r0
   120bc:	andeq	r2, r1, r4, asr #5
   120c0:	andeq	r2, r1, r0, asr #4
   120c4:	andeq	r2, r1, r0, ror #4
   120c8:	andeq	r2, r1, r8, lsr r2
   120cc:	andeq	r2, r1, r8, asr #4
   120d0:	strdeq	r2, [r1], -r8
   120d4:	andeq	r2, r1, r8, ror #1
   120d8:	andeq	r2, r1, ip, asr r1
   120dc:	andeq	r2, r1, r0, ror r1
   120e0:	andeq	r2, r1, r0, ror r1
   120e4:	andeq	r2, r1, r0, ror r1
   120e8:	movw	r0, #5
   120ec:	str	r0, [fp, #8]
   120f0:	movw	r0, #1
   120f4:	strb	r0, [fp, #-59]	; 0xffffffc5
   120f8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   120fc:	tst	r0, #1
   12100:	bne	1213c <__assert_fail@plt+0x1248>
   12104:	b	12108 <__assert_fail@plt+0x1214>
   12108:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1210c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12110:	cmp	r0, r1
   12114:	bcs	1212c <__assert_fail@plt+0x1238>
   12118:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1211c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12120:	add	r0, r0, r1
   12124:	movw	r1, #34	; 0x22
   12128:	strb	r1, [r0]
   1212c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12130:	add	r0, r0, #1
   12134:	str	r0, [fp, #-44]	; 0xffffffd4
   12138:	b	1213c <__assert_fail@plt+0x1248>
   1213c:	movw	r0, #1
   12140:	strb	r0, [fp, #-57]	; 0xffffffc7
   12144:	movw	r0, #42006	; 0xa416
   12148:	movt	r0, #1
   1214c:	str	r0, [fp, #-52]	; 0xffffffcc
   12150:	movw	r0, #1
   12154:	str	r0, [fp, #-56]	; 0xffffffc8
   12158:	b	122d4 <__assert_fail@plt+0x13e0>
   1215c:	movw	r0, #1
   12160:	strb	r0, [fp, #-57]	; 0xffffffc7
   12164:	movw	r0, #0
   12168:	strb	r0, [fp, #-59]	; 0xffffffc5
   1216c:	b	122d4 <__assert_fail@plt+0x13e0>
   12170:	ldr	r0, [fp, #8]
   12174:	cmp	r0, #10
   12178:	beq	121a4 <__assert_fail@plt+0x12b0>
   1217c:	ldr	r1, [fp, #8]
   12180:	movw	r0, #42008	; 0xa418
   12184:	movt	r0, #1
   12188:	bl	141e8 <__assert_fail@plt+0x32f4>
   1218c:	str	r0, [fp, #20]
   12190:	ldr	r1, [fp, #8]
   12194:	movw	r0, #42010	; 0xa41a
   12198:	movt	r0, #1
   1219c:	bl	141e8 <__assert_fail@plt+0x32f4>
   121a0:	str	r0, [fp, #24]
   121a4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   121a8:	tst	r0, #1
   121ac:	bne	12218 <__assert_fail@plt+0x1324>
   121b0:	ldr	r0, [fp, #20]
   121b4:	str	r0, [fp, #-52]	; 0xffffffcc
   121b8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   121bc:	ldrsb	r0, [r0]
   121c0:	cmp	r0, #0
   121c4:	beq	12214 <__assert_fail@plt+0x1320>
   121c8:	b	121cc <__assert_fail@plt+0x12d8>
   121cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   121d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   121d4:	cmp	r0, r1
   121d8:	bcs	121f4 <__assert_fail@plt+0x1300>
   121dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   121e0:	ldrb	r0, [r0]
   121e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   121e8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   121ec:	add	r1, r1, r2
   121f0:	strb	r0, [r1]
   121f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   121f8:	add	r0, r0, #1
   121fc:	str	r0, [fp, #-44]	; 0xffffffd4
   12200:	b	12204 <__assert_fail@plt+0x1310>
   12204:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12208:	add	r0, r0, #1
   1220c:	str	r0, [fp, #-52]	; 0xffffffcc
   12210:	b	121b8 <__assert_fail@plt+0x12c4>
   12214:	b	12218 <__assert_fail@plt+0x1324>
   12218:	movw	r0, #1
   1221c:	strb	r0, [fp, #-57]	; 0xffffffc7
   12220:	ldr	r0, [fp, #24]
   12224:	str	r0, [fp, #-52]	; 0xffffffcc
   12228:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1222c:	bl	10e28 <strlen@plt>
   12230:	str	r0, [fp, #-56]	; 0xffffffc8
   12234:	b	122d4 <__assert_fail@plt+0x13e0>
   12238:	movw	r0, #1
   1223c:	strb	r0, [fp, #-57]	; 0xffffffc7
   12240:	movw	r0, #1
   12244:	strb	r0, [fp, #-59]	; 0xffffffc5
   12248:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1224c:	tst	r0, #1
   12250:	bne	1225c <__assert_fail@plt+0x1368>
   12254:	movw	r0, #1
   12258:	strb	r0, [fp, #-57]	; 0xffffffc7
   1225c:	b	12260 <__assert_fail@plt+0x136c>
   12260:	movw	r0, #2
   12264:	str	r0, [fp, #8]
   12268:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1226c:	tst	r0, #1
   12270:	bne	122ac <__assert_fail@plt+0x13b8>
   12274:	b	12278 <__assert_fail@plt+0x1384>
   12278:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1227c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12280:	cmp	r0, r1
   12284:	bcs	1229c <__assert_fail@plt+0x13a8>
   12288:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1228c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12290:	add	r0, r0, r1
   12294:	movw	r1, #39	; 0x27
   12298:	strb	r1, [r0]
   1229c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   122a0:	add	r0, r0, #1
   122a4:	str	r0, [fp, #-44]	; 0xffffffd4
   122a8:	b	122ac <__assert_fail@plt+0x13b8>
   122ac:	movw	r0, #42010	; 0xa41a
   122b0:	movt	r0, #1
   122b4:	str	r0, [fp, #-52]	; 0xffffffcc
   122b8:	movw	r0, #1
   122bc:	str	r0, [fp, #-56]	; 0xffffffc8
   122c0:	b	122d4 <__assert_fail@plt+0x13e0>
   122c4:	movw	r0, #0
   122c8:	strb	r0, [fp, #-59]	; 0xffffffc5
   122cc:	b	122d4 <__assert_fail@plt+0x13e0>
   122d0:	bl	10ee8 <abort@plt>
   122d4:	movw	r0, #0
   122d8:	str	r0, [fp, #-40]	; 0xffffffd8
   122dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   122e0:	cmn	r0, #1
   122e4:	bne	12310 <__assert_fail@plt+0x141c>
   122e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   122ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   122f0:	add	r0, r0, r1
   122f4:	ldrb	r0, [r0]
   122f8:	cmp	r0, #0
   122fc:	movw	r0, #0
   12300:	moveq	r0, #1
   12304:	and	r0, r0, #1
   12308:	str	r0, [sp, #48]	; 0x30
   1230c:	b	1232c <__assert_fail@plt+0x1438>
   12310:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12314:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12318:	cmp	r0, r1
   1231c:	movw	r0, #0
   12320:	moveq	r0, #1
   12324:	and	r0, r0, #1
   12328:	str	r0, [sp, #48]	; 0x30
   1232c:	ldr	r0, [sp, #48]	; 0x30
   12330:	cmp	r0, #0
   12334:	movw	r0, #0
   12338:	movne	r0, #1
   1233c:	mvn	r1, #0
   12340:	eor	r0, r0, r1
   12344:	tst	r0, #1
   12348:	beq	13534 <__assert_fail@plt+0x2640>
   1234c:	movw	r0, #0
   12350:	strb	r0, [fp, #-65]	; 0xffffffbf
   12354:	strb	r0, [fp, #-66]	; 0xffffffbe
   12358:	strb	r0, [fp, #-67]	; 0xffffffbd
   1235c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12360:	tst	r0, #1
   12364:	beq	12410 <__assert_fail@plt+0x151c>
   12368:	ldr	r0, [fp, #8]
   1236c:	cmp	r0, #2
   12370:	beq	12410 <__assert_fail@plt+0x151c>
   12374:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12378:	cmp	r0, #0
   1237c:	beq	12410 <__assert_fail@plt+0x151c>
   12380:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12384:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12388:	add	r0, r0, r1
   1238c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12390:	cmn	r1, #1
   12394:	str	r0, [sp, #44]	; 0x2c
   12398:	bne	123c0 <__assert_fail@plt+0x14cc>
   1239c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   123a0:	movw	r1, #1
   123a4:	cmp	r1, r0
   123a8:	bcs	123c0 <__assert_fail@plt+0x14cc>
   123ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   123b0:	bl	10e28 <strlen@plt>
   123b4:	str	r0, [fp, #-36]	; 0xffffffdc
   123b8:	str	r0, [sp, #40]	; 0x28
   123bc:	b	123c8 <__assert_fail@plt+0x14d4>
   123c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   123c4:	str	r0, [sp, #40]	; 0x28
   123c8:	ldr	r0, [sp, #40]	; 0x28
   123cc:	ldr	r1, [sp, #44]	; 0x2c
   123d0:	cmp	r1, r0
   123d4:	bhi	12410 <__assert_fail@plt+0x151c>
   123d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   123dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   123e0:	add	r0, r0, r1
   123e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   123e8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   123ec:	bl	10d5c <memcmp@plt>
   123f0:	cmp	r0, #0
   123f4:	bne	12410 <__assert_fail@plt+0x151c>
   123f8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   123fc:	tst	r0, #1
   12400:	beq	12408 <__assert_fail@plt+0x1514>
   12404:	b	136b4 <__assert_fail@plt+0x27c0>
   12408:	movw	r0, #1
   1240c:	strb	r0, [fp, #-65]	; 0xffffffbf
   12410:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12414:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12418:	ldrb	r0, [r0, r1]
   1241c:	strb	r0, [fp, #-63]	; 0xffffffc1
   12420:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   12424:	mov	r1, r0
   12428:	cmp	r0, #126	; 0x7e
   1242c:	str	r1, [sp, #36]	; 0x24
   12430:	bhi	12ca0 <__assert_fail@plt+0x1dac>
   12434:	add	r0, pc, #8
   12438:	ldr	r1, [sp, #36]	; 0x24
   1243c:	ldr	r0, [r0, r1, lsl #2]
   12440:	mov	pc, r0
   12444:	andeq	r2, r1, r0, asr #12
   12448:	andeq	r2, r1, r0, lsr #25
   1244c:	andeq	r2, r1, r0, lsr #25
   12450:	andeq	r2, r1, r0, lsr #25
   12454:	andeq	r2, r1, r0, lsr #25
   12458:	andeq	r2, r1, r0, lsr #25
   1245c:	andeq	r2, r1, r0, lsr #25
   12460:	andeq	r2, r1, r8, asr #20
   12464:	andeq	r2, r1, r4, asr sl
   12468:	andeq	r2, r1, r4, lsl #21
   1246c:	andeq	r2, r1, ip, ror #20
   12470:	muleq	r1, r0, sl
   12474:	andeq	r2, r1, r0, ror #20
   12478:	andeq	r2, r1, r8, ror sl
   1247c:	andeq	r2, r1, r0, lsr #25
   12480:	andeq	r2, r1, r0, lsr #25
   12484:	andeq	r2, r1, r0, lsr #25
   12488:	andeq	r2, r1, r0, lsr #25
   1248c:	andeq	r2, r1, r0, lsr #25
   12490:	andeq	r2, r1, r0, lsr #25
   12494:	andeq	r2, r1, r0, lsr #25
   12498:	andeq	r2, r1, r0, lsr #25
   1249c:	andeq	r2, r1, r0, lsr #25
   124a0:	andeq	r2, r1, r0, lsr #25
   124a4:	andeq	r2, r1, r0, lsr #25
   124a8:	andeq	r2, r1, r0, lsr #25
   124ac:	andeq	r2, r1, r0, lsr #25
   124b0:	andeq	r2, r1, r0, lsr #25
   124b4:	andeq	r2, r1, r0, lsr #25
   124b8:	andeq	r2, r1, r0, lsr #25
   124bc:	andeq	r2, r1, r0, lsr #25
   124c0:	andeq	r2, r1, r0, lsr #25
   124c4:	andeq	r2, r1, r4, ror fp
   124c8:	andeq	r2, r1, ip, ror fp
   124cc:	andeq	r2, r1, ip, ror fp
   124d0:	andeq	r2, r1, r0, ror #22
   124d4:	andeq	r2, r1, ip, ror fp
   124d8:	muleq	r1, r4, ip
   124dc:	andeq	r2, r1, ip, ror fp
   124e0:	muleq	r1, ip, fp
   124e4:	andeq	r2, r1, ip, ror fp
   124e8:	andeq	r2, r1, ip, ror fp
   124ec:	andeq	r2, r1, ip, ror fp
   124f0:	muleq	r1, r4, ip
   124f4:	muleq	r1, r4, ip
   124f8:	muleq	r1, r4, ip
   124fc:	muleq	r1, r4, ip
   12500:	muleq	r1, r4, ip
   12504:	muleq	r1, r4, ip
   12508:	muleq	r1, r4, ip
   1250c:	muleq	r1, r4, ip
   12510:	muleq	r1, r4, ip
   12514:	muleq	r1, r4, ip
   12518:	muleq	r1, r4, ip
   1251c:	muleq	r1, r4, ip
   12520:	muleq	r1, r4, ip
   12524:	muleq	r1, r4, ip
   12528:	muleq	r1, r4, ip
   1252c:	muleq	r1, r4, ip
   12530:	andeq	r2, r1, ip, ror fp
   12534:	andeq	r2, r1, ip, ror fp
   12538:	andeq	r2, r1, ip, ror fp
   1253c:	andeq	r2, r1, ip, ror fp
   12540:	andeq	r2, r1, ip, asr #16
   12544:	andeq	r2, r1, r0, lsr #25
   12548:	muleq	r1, r4, ip
   1254c:	muleq	r1, r4, ip
   12550:	muleq	r1, r4, ip
   12554:	muleq	r1, r4, ip
   12558:	muleq	r1, r4, ip
   1255c:	muleq	r1, r4, ip
   12560:	muleq	r1, r4, ip
   12564:	muleq	r1, r4, ip
   12568:	muleq	r1, r4, ip
   1256c:	muleq	r1, r4, ip
   12570:	muleq	r1, r4, ip
   12574:	muleq	r1, r4, ip
   12578:	muleq	r1, r4, ip
   1257c:	muleq	r1, r4, ip
   12580:	muleq	r1, r4, ip
   12584:	muleq	r1, r4, ip
   12588:	muleq	r1, r4, ip
   1258c:	muleq	r1, r4, ip
   12590:	muleq	r1, r4, ip
   12594:	muleq	r1, r4, ip
   12598:	muleq	r1, r4, ip
   1259c:	muleq	r1, r4, ip
   125a0:	muleq	r1, r4, ip
   125a4:	muleq	r1, r4, ip
   125a8:	muleq	r1, r4, ip
   125ac:	muleq	r1, r4, ip
   125b0:	andeq	r2, r1, ip, ror fp
   125b4:	muleq	r1, ip, sl
   125b8:	muleq	r1, r4, ip
   125bc:	andeq	r2, r1, ip, ror fp
   125c0:	muleq	r1, r4, ip
   125c4:	andeq	r2, r1, ip, ror fp
   125c8:	muleq	r1, r4, ip
   125cc:	muleq	r1, r4, ip
   125d0:	muleq	r1, r4, ip
   125d4:	muleq	r1, r4, ip
   125d8:	muleq	r1, r4, ip
   125dc:	muleq	r1, r4, ip
   125e0:	muleq	r1, r4, ip
   125e4:	muleq	r1, r4, ip
   125e8:	muleq	r1, r4, ip
   125ec:	muleq	r1, r4, ip
   125f0:	muleq	r1, r4, ip
   125f4:	muleq	r1, r4, ip
   125f8:	muleq	r1, r4, ip
   125fc:	muleq	r1, r4, ip
   12600:	muleq	r1, r4, ip
   12604:	muleq	r1, r4, ip
   12608:	muleq	r1, r4, ip
   1260c:	muleq	r1, r4, ip
   12610:	muleq	r1, r4, ip
   12614:	muleq	r1, r4, ip
   12618:	muleq	r1, r4, ip
   1261c:	muleq	r1, r4, ip
   12620:	muleq	r1, r4, ip
   12624:	muleq	r1, r4, ip
   12628:	muleq	r1, r4, ip
   1262c:	muleq	r1, r4, ip
   12630:	andeq	r2, r1, ip, lsr #22
   12634:	andeq	r2, r1, ip, ror fp
   12638:	andeq	r2, r1, ip, lsr #22
   1263c:	andeq	r2, r1, r0, ror #22
   12640:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12644:	tst	r0, #1
   12648:	beq	12830 <__assert_fail@plt+0x193c>
   1264c:	b	12650 <__assert_fail@plt+0x175c>
   12650:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12654:	tst	r0, #1
   12658:	beq	12660 <__assert_fail@plt+0x176c>
   1265c:	b	136b4 <__assert_fail@plt+0x27c0>
   12660:	movw	r0, #1
   12664:	strb	r0, [fp, #-66]	; 0xffffffbe
   12668:	ldr	r0, [fp, #8]
   1266c:	cmp	r0, #2
   12670:	bne	12724 <__assert_fail@plt+0x1830>
   12674:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   12678:	tst	r0, #1
   1267c:	bne	12724 <__assert_fail@plt+0x1830>
   12680:	b	12684 <__assert_fail@plt+0x1790>
   12684:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12688:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1268c:	cmp	r0, r1
   12690:	bcs	126a8 <__assert_fail@plt+0x17b4>
   12694:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12698:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1269c:	add	r0, r0, r1
   126a0:	movw	r1, #39	; 0x27
   126a4:	strb	r1, [r0]
   126a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   126ac:	add	r0, r0, #1
   126b0:	str	r0, [fp, #-44]	; 0xffffffd4
   126b4:	b	126b8 <__assert_fail@plt+0x17c4>
   126b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   126bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   126c0:	cmp	r0, r1
   126c4:	bcs	126dc <__assert_fail@plt+0x17e8>
   126c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   126cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   126d0:	add	r0, r0, r1
   126d4:	movw	r1, #36	; 0x24
   126d8:	strb	r1, [r0]
   126dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   126e0:	add	r0, r0, #1
   126e4:	str	r0, [fp, #-44]	; 0xffffffd4
   126e8:	b	126ec <__assert_fail@plt+0x17f8>
   126ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   126f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   126f4:	cmp	r0, r1
   126f8:	bcs	12710 <__assert_fail@plt+0x181c>
   126fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12700:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12704:	add	r0, r0, r1
   12708:	movw	r1, #39	; 0x27
   1270c:	strb	r1, [r0]
   12710:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12714:	add	r0, r0, #1
   12718:	str	r0, [fp, #-44]	; 0xffffffd4
   1271c:	movw	r0, #1
   12720:	strb	r0, [fp, #-60]	; 0xffffffc4
   12724:	b	12728 <__assert_fail@plt+0x1834>
   12728:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1272c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12730:	cmp	r0, r1
   12734:	bcs	1274c <__assert_fail@plt+0x1858>
   12738:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1273c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12740:	add	r0, r0, r1
   12744:	movw	r1, #92	; 0x5c
   12748:	strb	r1, [r0]
   1274c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12750:	add	r0, r0, #1
   12754:	str	r0, [fp, #-44]	; 0xffffffd4
   12758:	b	1275c <__assert_fail@plt+0x1868>
   1275c:	ldr	r0, [fp, #8]
   12760:	cmp	r0, #2
   12764:	beq	12824 <__assert_fail@plt+0x1930>
   12768:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1276c:	add	r0, r0, #1
   12770:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12774:	cmp	r0, r1
   12778:	bcs	12824 <__assert_fail@plt+0x1930>
   1277c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12780:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12784:	add	r1, r1, #1
   12788:	add	r0, r0, r1
   1278c:	ldrb	r0, [r0]
   12790:	movw	r1, #48	; 0x30
   12794:	cmp	r1, r0
   12798:	bgt	12824 <__assert_fail@plt+0x1930>
   1279c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   127a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   127a4:	add	r1, r1, #1
   127a8:	add	r0, r0, r1
   127ac:	ldrb	r0, [r0]
   127b0:	cmp	r0, #57	; 0x39
   127b4:	bgt	12824 <__assert_fail@plt+0x1930>
   127b8:	b	127bc <__assert_fail@plt+0x18c8>
   127bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   127c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   127c4:	cmp	r0, r1
   127c8:	bcs	127e0 <__assert_fail@plt+0x18ec>
   127cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   127d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   127d4:	add	r0, r0, r1
   127d8:	movw	r1, #48	; 0x30
   127dc:	strb	r1, [r0]
   127e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   127e4:	add	r0, r0, #1
   127e8:	str	r0, [fp, #-44]	; 0xffffffd4
   127ec:	b	127f0 <__assert_fail@plt+0x18fc>
   127f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   127f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   127f8:	cmp	r0, r1
   127fc:	bcs	12814 <__assert_fail@plt+0x1920>
   12800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12804:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12808:	add	r0, r0, r1
   1280c:	movw	r1, #48	; 0x30
   12810:	strb	r1, [r0]
   12814:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12818:	add	r0, r0, #1
   1281c:	str	r0, [fp, #-44]	; 0xffffffd4
   12820:	b	12824 <__assert_fail@plt+0x1930>
   12824:	movw	r0, #48	; 0x30
   12828:	strb	r0, [fp, #-63]	; 0xffffffc1
   1282c:	b	12848 <__assert_fail@plt+0x1954>
   12830:	ldr	r0, [fp, #12]
   12834:	and	r0, r0, #1
   12838:	cmp	r0, #0
   1283c:	beq	12844 <__assert_fail@plt+0x1950>
   12840:	b	13524 <__assert_fail@plt+0x2630>
   12844:	b	12848 <__assert_fail@plt+0x1954>
   12848:	b	132c0 <__assert_fail@plt+0x23cc>
   1284c:	ldr	r0, [fp, #8]
   12850:	cmp	r0, #2
   12854:	str	r0, [sp, #32]
   12858:	beq	12870 <__assert_fail@plt+0x197c>
   1285c:	b	12860 <__assert_fail@plt+0x196c>
   12860:	ldr	r0, [sp, #32]
   12864:	cmp	r0, #5
   12868:	beq	12884 <__assert_fail@plt+0x1990>
   1286c:	b	12a40 <__assert_fail@plt+0x1b4c>
   12870:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12874:	tst	r0, #1
   12878:	beq	12880 <__assert_fail@plt+0x198c>
   1287c:	b	136b4 <__assert_fail@plt+0x27c0>
   12880:	b	12a44 <__assert_fail@plt+0x1b50>
   12884:	ldr	r0, [fp, #12]
   12888:	and	r0, r0, #4
   1288c:	cmp	r0, #0
   12890:	beq	12a3c <__assert_fail@plt+0x1b48>
   12894:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12898:	add	r0, r0, #2
   1289c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   128a0:	cmp	r0, r1
   128a4:	bcs	12a3c <__assert_fail@plt+0x1b48>
   128a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   128ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   128b0:	add	r1, r1, #1
   128b4:	add	r0, r0, r1
   128b8:	ldrb	r0, [r0]
   128bc:	cmp	r0, #63	; 0x3f
   128c0:	bne	12a3c <__assert_fail@plt+0x1b48>
   128c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   128c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   128cc:	add	r0, r1, r0
   128d0:	ldrb	r0, [r0, #2]
   128d4:	mov	r1, r0
   128d8:	cmp	r0, #33	; 0x21
   128dc:	str	r1, [sp, #28]
   128e0:	beq	12930 <__assert_fail@plt+0x1a3c>
   128e4:	b	128e8 <__assert_fail@plt+0x19f4>
   128e8:	ldr	r0, [sp, #28]
   128ec:	sub	r1, r0, #39	; 0x27
   128f0:	cmp	r1, #3
   128f4:	bcc	12930 <__assert_fail@plt+0x1a3c>
   128f8:	b	128fc <__assert_fail@plt+0x1a08>
   128fc:	ldr	r0, [sp, #28]
   12900:	cmp	r0, #45	; 0x2d
   12904:	beq	12930 <__assert_fail@plt+0x1a3c>
   12908:	b	1290c <__assert_fail@plt+0x1a18>
   1290c:	ldr	r0, [sp, #28]
   12910:	cmp	r0, #47	; 0x2f
   12914:	beq	12930 <__assert_fail@plt+0x1a3c>
   12918:	b	1291c <__assert_fail@plt+0x1a28>
   1291c:	ldr	r0, [sp, #28]
   12920:	sub	r1, r0, #60	; 0x3c
   12924:	cmp	r1, #2
   12928:	bhi	12a34 <__assert_fail@plt+0x1b40>
   1292c:	b	12930 <__assert_fail@plt+0x1a3c>
   12930:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12934:	tst	r0, #1
   12938:	beq	12940 <__assert_fail@plt+0x1a4c>
   1293c:	b	136b4 <__assert_fail@plt+0x27c0>
   12940:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12944:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12948:	add	r1, r1, #2
   1294c:	add	r0, r0, r1
   12950:	ldrb	r0, [r0]
   12954:	strb	r0, [fp, #-63]	; 0xffffffc1
   12958:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1295c:	add	r0, r0, #2
   12960:	str	r0, [fp, #-40]	; 0xffffffd8
   12964:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12968:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1296c:	cmp	r0, r1
   12970:	bcs	12988 <__assert_fail@plt+0x1a94>
   12974:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12978:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1297c:	add	r0, r0, r1
   12980:	movw	r1, #63	; 0x3f
   12984:	strb	r1, [r0]
   12988:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1298c:	add	r0, r0, #1
   12990:	str	r0, [fp, #-44]	; 0xffffffd4
   12994:	b	12998 <__assert_fail@plt+0x1aa4>
   12998:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1299c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   129a0:	cmp	r0, r1
   129a4:	bcs	129bc <__assert_fail@plt+0x1ac8>
   129a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   129ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   129b0:	add	r0, r0, r1
   129b4:	movw	r1, #34	; 0x22
   129b8:	strb	r1, [r0]
   129bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129c0:	add	r0, r0, #1
   129c4:	str	r0, [fp, #-44]	; 0xffffffd4
   129c8:	b	129cc <__assert_fail@plt+0x1ad8>
   129cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   129d4:	cmp	r0, r1
   129d8:	bcs	129f0 <__assert_fail@plt+0x1afc>
   129dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   129e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   129e4:	add	r0, r0, r1
   129e8:	movw	r1, #34	; 0x22
   129ec:	strb	r1, [r0]
   129f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129f4:	add	r0, r0, #1
   129f8:	str	r0, [fp, #-44]	; 0xffffffd4
   129fc:	b	12a00 <__assert_fail@plt+0x1b0c>
   12a00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12a08:	cmp	r0, r1
   12a0c:	bcs	12a24 <__assert_fail@plt+0x1b30>
   12a10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12a18:	add	r0, r0, r1
   12a1c:	movw	r1, #63	; 0x3f
   12a20:	strb	r1, [r0]
   12a24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a28:	add	r0, r0, #1
   12a2c:	str	r0, [fp, #-44]	; 0xffffffd4
   12a30:	b	12a38 <__assert_fail@plt+0x1b44>
   12a34:	b	12a38 <__assert_fail@plt+0x1b44>
   12a38:	b	12a3c <__assert_fail@plt+0x1b48>
   12a3c:	b	12a44 <__assert_fail@plt+0x1b50>
   12a40:	b	12a44 <__assert_fail@plt+0x1b50>
   12a44:	b	132c0 <__assert_fail@plt+0x23cc>
   12a48:	movw	r0, #97	; 0x61
   12a4c:	strb	r0, [fp, #-64]	; 0xffffffc0
   12a50:	b	12b10 <__assert_fail@plt+0x1c1c>
   12a54:	movw	r0, #98	; 0x62
   12a58:	strb	r0, [fp, #-64]	; 0xffffffc0
   12a5c:	b	12b10 <__assert_fail@plt+0x1c1c>
   12a60:	movw	r0, #102	; 0x66
   12a64:	strb	r0, [fp, #-64]	; 0xffffffc0
   12a68:	b	12b10 <__assert_fail@plt+0x1c1c>
   12a6c:	movw	r0, #110	; 0x6e
   12a70:	strb	r0, [fp, #-64]	; 0xffffffc0
   12a74:	b	12af0 <__assert_fail@plt+0x1bfc>
   12a78:	movw	r0, #114	; 0x72
   12a7c:	strb	r0, [fp, #-64]	; 0xffffffc0
   12a80:	b	12af0 <__assert_fail@plt+0x1bfc>
   12a84:	movw	r0, #116	; 0x74
   12a88:	strb	r0, [fp, #-64]	; 0xffffffc0
   12a8c:	b	12af0 <__assert_fail@plt+0x1bfc>
   12a90:	movw	r0, #118	; 0x76
   12a94:	strb	r0, [fp, #-64]	; 0xffffffc0
   12a98:	b	12b10 <__assert_fail@plt+0x1c1c>
   12a9c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   12aa0:	strb	r0, [fp, #-64]	; 0xffffffc0
   12aa4:	ldr	r0, [fp, #8]
   12aa8:	cmp	r0, #2
   12aac:	bne	12ac4 <__assert_fail@plt+0x1bd0>
   12ab0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12ab4:	tst	r0, #1
   12ab8:	beq	12ac0 <__assert_fail@plt+0x1bcc>
   12abc:	b	136b4 <__assert_fail@plt+0x27c0>
   12ac0:	b	13448 <__assert_fail@plt+0x2554>
   12ac4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12ac8:	tst	r0, #1
   12acc:	beq	12aec <__assert_fail@plt+0x1bf8>
   12ad0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12ad4:	tst	r0, #1
   12ad8:	beq	12aec <__assert_fail@plt+0x1bf8>
   12adc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12ae0:	cmp	r0, #0
   12ae4:	beq	12aec <__assert_fail@plt+0x1bf8>
   12ae8:	b	13448 <__assert_fail@plt+0x2554>
   12aec:	b	12af0 <__assert_fail@plt+0x1bfc>
   12af0:	ldr	r0, [fp, #8]
   12af4:	cmp	r0, #2
   12af8:	bne	12b0c <__assert_fail@plt+0x1c18>
   12afc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12b00:	tst	r0, #1
   12b04:	beq	12b0c <__assert_fail@plt+0x1c18>
   12b08:	b	136b4 <__assert_fail@plt+0x27c0>
   12b0c:	b	12b10 <__assert_fail@plt+0x1c1c>
   12b10:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12b14:	tst	r0, #1
   12b18:	beq	12b28 <__assert_fail@plt+0x1c34>
   12b1c:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   12b20:	strb	r0, [fp, #-63]	; 0xffffffc1
   12b24:	b	13334 <__assert_fail@plt+0x2440>
   12b28:	b	132c0 <__assert_fail@plt+0x23cc>
   12b2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12b30:	cmn	r0, #1
   12b34:	bne	12b4c <__assert_fail@plt+0x1c58>
   12b38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12b3c:	ldrb	r0, [r0, #1]
   12b40:	cmp	r0, #0
   12b44:	beq	12b5c <__assert_fail@plt+0x1c68>
   12b48:	b	12b58 <__assert_fail@plt+0x1c64>
   12b4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12b50:	cmp	r0, #1
   12b54:	beq	12b5c <__assert_fail@plt+0x1c68>
   12b58:	b	132c0 <__assert_fail@plt+0x23cc>
   12b5c:	b	12b60 <__assert_fail@plt+0x1c6c>
   12b60:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12b64:	cmp	r0, #0
   12b68:	beq	12b70 <__assert_fail@plt+0x1c7c>
   12b6c:	b	132c0 <__assert_fail@plt+0x23cc>
   12b70:	b	12b74 <__assert_fail@plt+0x1c80>
   12b74:	movw	r0, #1
   12b78:	strb	r0, [fp, #-67]	; 0xffffffbd
   12b7c:	ldr	r0, [fp, #8]
   12b80:	cmp	r0, #2
   12b84:	bne	12b98 <__assert_fail@plt+0x1ca4>
   12b88:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12b8c:	tst	r0, #1
   12b90:	beq	12b98 <__assert_fail@plt+0x1ca4>
   12b94:	b	136b4 <__assert_fail@plt+0x27c0>
   12b98:	b	132c0 <__assert_fail@plt+0x23cc>
   12b9c:	movw	r0, #1
   12ba0:	strb	r0, [fp, #-61]	; 0xffffffc3
   12ba4:	strb	r0, [fp, #-67]	; 0xffffffbd
   12ba8:	ldr	r0, [fp, #8]
   12bac:	cmp	r0, #2
   12bb0:	bne	12c90 <__assert_fail@plt+0x1d9c>
   12bb4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12bb8:	tst	r0, #1
   12bbc:	beq	12bc4 <__assert_fail@plt+0x1cd0>
   12bc0:	b	136b4 <__assert_fail@plt+0x27c0>
   12bc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12bc8:	cmp	r0, #0
   12bcc:	beq	12bec <__assert_fail@plt+0x1cf8>
   12bd0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12bd4:	cmp	r0, #0
   12bd8:	bne	12bec <__assert_fail@plt+0x1cf8>
   12bdc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12be0:	str	r0, [fp, #-48]	; 0xffffffd0
   12be4:	movw	r0, #0
   12be8:	str	r0, [fp, #-28]	; 0xffffffe4
   12bec:	b	12bf0 <__assert_fail@plt+0x1cfc>
   12bf0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12bf4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12bf8:	cmp	r0, r1
   12bfc:	bcs	12c14 <__assert_fail@plt+0x1d20>
   12c00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c04:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12c08:	add	r0, r0, r1
   12c0c:	movw	r1, #39	; 0x27
   12c10:	strb	r1, [r0]
   12c14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c18:	add	r0, r0, #1
   12c1c:	str	r0, [fp, #-44]	; 0xffffffd4
   12c20:	b	12c24 <__assert_fail@plt+0x1d30>
   12c24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12c2c:	cmp	r0, r1
   12c30:	bcs	12c48 <__assert_fail@plt+0x1d54>
   12c34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c38:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12c3c:	add	r0, r0, r1
   12c40:	movw	r1, #92	; 0x5c
   12c44:	strb	r1, [r0]
   12c48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c4c:	add	r0, r0, #1
   12c50:	str	r0, [fp, #-44]	; 0xffffffd4
   12c54:	b	12c58 <__assert_fail@plt+0x1d64>
   12c58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12c60:	cmp	r0, r1
   12c64:	bcs	12c7c <__assert_fail@plt+0x1d88>
   12c68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12c70:	add	r0, r0, r1
   12c74:	movw	r1, #39	; 0x27
   12c78:	strb	r1, [r0]
   12c7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c80:	add	r0, r0, #1
   12c84:	str	r0, [fp, #-44]	; 0xffffffd4
   12c88:	movw	r0, #0
   12c8c:	strb	r0, [fp, #-60]	; 0xffffffc4
   12c90:	b	132c0 <__assert_fail@plt+0x23cc>
   12c94:	movw	r0, #1
   12c98:	strb	r0, [fp, #-67]	; 0xffffffbd
   12c9c:	b	132c0 <__assert_fail@plt+0x23cc>
   12ca0:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   12ca4:	tst	r0, #1
   12ca8:	beq	12ce8 <__assert_fail@plt+0x1df4>
   12cac:	mov	r0, #1
   12cb0:	str	r0, [fp, #-72]	; 0xffffffb8
   12cb4:	bl	10e04 <__ctype_b_loc@plt>
   12cb8:	ldr	r0, [r0]
   12cbc:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   12cc0:	mov	r2, r1
   12cc4:	add	r0, r0, r1, lsl #1
   12cc8:	ldrh	r0, [r0]
   12ccc:	and	r0, r0, #16384	; 0x4000
   12cd0:	cmp	r0, #0
   12cd4:	movw	r0, #0
   12cd8:	movne	r0, #1
   12cdc:	and	r0, r0, #1
   12ce0:	strb	r0, [fp, #-73]	; 0xffffffb7
   12ce4:	b	12f74 <__assert_fail@plt+0x2080>
   12ce8:	sub	r0, fp, #84	; 0x54
   12cec:	movw	r1, #0
   12cf0:	and	r1, r1, #255	; 0xff
   12cf4:	movw	r2, #8
   12cf8:	bl	10e58 <memset@plt>
   12cfc:	movw	r0, #0
   12d00:	str	r0, [fp, #-72]	; 0xffffffb8
   12d04:	movw	r0, #1
   12d08:	strb	r0, [fp, #-73]	; 0xffffffb7
   12d0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12d10:	cmn	r0, #1
   12d14:	bne	12d24 <__assert_fail@plt+0x1e30>
   12d18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d1c:	bl	10e28 <strlen@plt>
   12d20:	str	r0, [fp, #-36]	; 0xffffffdc
   12d24:	b	12d28 <__assert_fail@plt+0x1e34>
   12d28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d2c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12d30:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12d34:	add	r1, r1, r2
   12d38:	add	r1, r0, r1
   12d3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12d40:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12d44:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12d48:	add	r2, r2, r3
   12d4c:	sub	r2, r0, r2
   12d50:	add	r0, sp, #88	; 0x58
   12d54:	sub	r3, fp, #84	; 0x54
   12d58:	bl	17c50 <__assert_fail@plt+0x6d5c>
   12d5c:	str	r0, [sp, #84]	; 0x54
   12d60:	ldr	r0, [sp, #84]	; 0x54
   12d64:	cmp	r0, #0
   12d68:	bne	12d70 <__assert_fail@plt+0x1e7c>
   12d6c:	b	12f70 <__assert_fail@plt+0x207c>
   12d70:	ldr	r0, [sp, #84]	; 0x54
   12d74:	cmn	r0, #1
   12d78:	bne	12d88 <__assert_fail@plt+0x1e94>
   12d7c:	movw	r0, #0
   12d80:	strb	r0, [fp, #-73]	; 0xffffffb7
   12d84:	b	12f70 <__assert_fail@plt+0x207c>
   12d88:	ldr	r0, [sp, #84]	; 0x54
   12d8c:	cmn	r0, #2
   12d90:	bne	12e04 <__assert_fail@plt+0x1f10>
   12d94:	movw	r0, #0
   12d98:	strb	r0, [fp, #-73]	; 0xffffffb7
   12d9c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12da0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12da4:	add	r0, r0, r1
   12da8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12dac:	cmp	r0, r1
   12db0:	movw	r0, #0
   12db4:	str	r0, [sp, #24]
   12db8:	bcs	12de4 <__assert_fail@plt+0x1ef0>
   12dbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12dc0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12dc4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12dc8:	add	r1, r1, r2
   12dcc:	add	r0, r0, r1
   12dd0:	ldrb	r0, [r0]
   12dd4:	cmp	r0, #0
   12dd8:	movw	r0, #0
   12ddc:	movne	r0, #1
   12de0:	str	r0, [sp, #24]
   12de4:	ldr	r0, [sp, #24]
   12de8:	tst	r0, #1
   12dec:	beq	12e00 <__assert_fail@plt+0x1f0c>
   12df0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12df4:	add	r0, r0, #1
   12df8:	str	r0, [fp, #-72]	; 0xffffffb8
   12dfc:	b	12d9c <__assert_fail@plt+0x1ea8>
   12e00:	b	12f70 <__assert_fail@plt+0x207c>
   12e04:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12e08:	tst	r0, #1
   12e0c:	beq	12f18 <__assert_fail@plt+0x2024>
   12e10:	ldr	r0, [fp, #8]
   12e14:	cmp	r0, #2
   12e18:	bne	12f18 <__assert_fail@plt+0x2024>
   12e1c:	movw	r0, #1
   12e20:	str	r0, [sp, #80]	; 0x50
   12e24:	ldr	r0, [sp, #80]	; 0x50
   12e28:	ldr	r1, [sp, #84]	; 0x54
   12e2c:	cmp	r0, r1
   12e30:	bcs	12f14 <__assert_fail@plt+0x2020>
   12e34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12e38:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12e3c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12e40:	add	r1, r1, r2
   12e44:	ldr	r2, [sp, #80]	; 0x50
   12e48:	add	r1, r1, r2
   12e4c:	ldrb	r0, [r0, r1]
   12e50:	sub	r0, r0, #91	; 0x5b
   12e54:	cmp	r0, #33	; 0x21
   12e58:	str	r0, [sp, #20]
   12e5c:	bhi	12efc <__assert_fail@plt+0x2008>
   12e60:	add	r0, pc, #8
   12e64:	ldr	r1, [sp, #20]
   12e68:	ldr	r0, [r0, r1, lsl #2]
   12e6c:	mov	pc, r0
   12e70:	strdeq	r2, [r1], -r8
   12e74:	strdeq	r2, [r1], -r8
   12e78:	strdeq	r2, [r1], -ip
   12e7c:	strdeq	r2, [r1], -r8
   12e80:	strdeq	r2, [r1], -ip
   12e84:	strdeq	r2, [r1], -r8
   12e88:	strdeq	r2, [r1], -ip
   12e8c:	strdeq	r2, [r1], -ip
   12e90:	strdeq	r2, [r1], -ip
   12e94:	strdeq	r2, [r1], -ip
   12e98:	strdeq	r2, [r1], -ip
   12e9c:	strdeq	r2, [r1], -ip
   12ea0:	strdeq	r2, [r1], -ip
   12ea4:	strdeq	r2, [r1], -ip
   12ea8:	strdeq	r2, [r1], -ip
   12eac:	strdeq	r2, [r1], -ip
   12eb0:	strdeq	r2, [r1], -ip
   12eb4:	strdeq	r2, [r1], -ip
   12eb8:	strdeq	r2, [r1], -ip
   12ebc:	strdeq	r2, [r1], -ip
   12ec0:	strdeq	r2, [r1], -ip
   12ec4:	strdeq	r2, [r1], -ip
   12ec8:	strdeq	r2, [r1], -ip
   12ecc:	strdeq	r2, [r1], -ip
   12ed0:	strdeq	r2, [r1], -ip
   12ed4:	strdeq	r2, [r1], -ip
   12ed8:	strdeq	r2, [r1], -ip
   12edc:	strdeq	r2, [r1], -ip
   12ee0:	strdeq	r2, [r1], -ip
   12ee4:	strdeq	r2, [r1], -ip
   12ee8:	strdeq	r2, [r1], -ip
   12eec:	strdeq	r2, [r1], -ip
   12ef0:	strdeq	r2, [r1], -ip
   12ef4:	strdeq	r2, [r1], -r8
   12ef8:	b	136b4 <__assert_fail@plt+0x27c0>
   12efc:	b	12f00 <__assert_fail@plt+0x200c>
   12f00:	b	12f04 <__assert_fail@plt+0x2010>
   12f04:	ldr	r0, [sp, #80]	; 0x50
   12f08:	add	r0, r0, #1
   12f0c:	str	r0, [sp, #80]	; 0x50
   12f10:	b	12e24 <__assert_fail@plt+0x1f30>
   12f14:	b	12f18 <__assert_fail@plt+0x2024>
   12f18:	ldr	r0, [sp, #88]	; 0x58
   12f1c:	bl	10d74 <iswprint@plt>
   12f20:	cmp	r0, #0
   12f24:	bne	12f30 <__assert_fail@plt+0x203c>
   12f28:	movw	r0, #0
   12f2c:	strb	r0, [fp, #-73]	; 0xffffffb7
   12f30:	ldr	r0, [sp, #84]	; 0x54
   12f34:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12f38:	add	r0, r1, r0
   12f3c:	str	r0, [fp, #-72]	; 0xffffffb8
   12f40:	b	12f44 <__assert_fail@plt+0x2050>
   12f44:	b	12f48 <__assert_fail@plt+0x2054>
   12f48:	b	12f4c <__assert_fail@plt+0x2058>
   12f4c:	sub	r0, fp, #84	; 0x54
   12f50:	bl	10d50 <mbsinit@plt>
   12f54:	cmp	r0, #0
   12f58:	movw	r0, #0
   12f5c:	movne	r0, #1
   12f60:	mvn	r1, #0
   12f64:	eor	r0, r0, r1
   12f68:	tst	r0, #1
   12f6c:	bne	12d28 <__assert_fail@plt+0x1e34>
   12f70:	b	12f74 <__assert_fail@plt+0x2080>
   12f74:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   12f78:	and	r0, r0, #1
   12f7c:	strb	r0, [fp, #-67]	; 0xffffffbd
   12f80:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12f84:	movw	r1, #1
   12f88:	cmp	r1, r0
   12f8c:	bcc	12fa8 <__assert_fail@plt+0x20b4>
   12f90:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12f94:	tst	r0, #1
   12f98:	beq	132bc <__assert_fail@plt+0x23c8>
   12f9c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   12fa0:	tst	r0, #1
   12fa4:	bne	132bc <__assert_fail@plt+0x23c8>
   12fa8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12fac:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12fb0:	add	r0, r0, r1
   12fb4:	str	r0, [sp, #76]	; 0x4c
   12fb8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12fbc:	tst	r0, #1
   12fc0:	beq	13170 <__assert_fail@plt+0x227c>
   12fc4:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   12fc8:	tst	r0, #1
   12fcc:	bne	13170 <__assert_fail@plt+0x227c>
   12fd0:	b	12fd4 <__assert_fail@plt+0x20e0>
   12fd4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12fd8:	tst	r0, #1
   12fdc:	beq	12fe4 <__assert_fail@plt+0x20f0>
   12fe0:	b	136b4 <__assert_fail@plt+0x27c0>
   12fe4:	movw	r0, #1
   12fe8:	strb	r0, [fp, #-66]	; 0xffffffbe
   12fec:	ldr	r0, [fp, #8]
   12ff0:	cmp	r0, #2
   12ff4:	bne	130a8 <__assert_fail@plt+0x21b4>
   12ff8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   12ffc:	tst	r0, #1
   13000:	bne	130a8 <__assert_fail@plt+0x21b4>
   13004:	b	13008 <__assert_fail@plt+0x2114>
   13008:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1300c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13010:	cmp	r0, r1
   13014:	bcs	1302c <__assert_fail@plt+0x2138>
   13018:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1301c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13020:	add	r0, r0, r1
   13024:	movw	r1, #39	; 0x27
   13028:	strb	r1, [r0]
   1302c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13030:	add	r0, r0, #1
   13034:	str	r0, [fp, #-44]	; 0xffffffd4
   13038:	b	1303c <__assert_fail@plt+0x2148>
   1303c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13040:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13044:	cmp	r0, r1
   13048:	bcs	13060 <__assert_fail@plt+0x216c>
   1304c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13050:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13054:	add	r0, r0, r1
   13058:	movw	r1, #36	; 0x24
   1305c:	strb	r1, [r0]
   13060:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13064:	add	r0, r0, #1
   13068:	str	r0, [fp, #-44]	; 0xffffffd4
   1306c:	b	13070 <__assert_fail@plt+0x217c>
   13070:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13074:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13078:	cmp	r0, r1
   1307c:	bcs	13094 <__assert_fail@plt+0x21a0>
   13080:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13084:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13088:	add	r0, r0, r1
   1308c:	movw	r1, #39	; 0x27
   13090:	strb	r1, [r0]
   13094:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13098:	add	r0, r0, #1
   1309c:	str	r0, [fp, #-44]	; 0xffffffd4
   130a0:	movw	r0, #1
   130a4:	strb	r0, [fp, #-60]	; 0xffffffc4
   130a8:	b	130ac <__assert_fail@plt+0x21b8>
   130ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   130b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   130b4:	cmp	r0, r1
   130b8:	bcs	130d0 <__assert_fail@plt+0x21dc>
   130bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   130c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   130c4:	add	r0, r0, r1
   130c8:	movw	r1, #92	; 0x5c
   130cc:	strb	r1, [r0]
   130d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   130d4:	add	r0, r0, #1
   130d8:	str	r0, [fp, #-44]	; 0xffffffd4
   130dc:	b	130e0 <__assert_fail@plt+0x21ec>
   130e0:	b	130e4 <__assert_fail@plt+0x21f0>
   130e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   130e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   130ec:	cmp	r0, r1
   130f0:	bcs	13110 <__assert_fail@plt+0x221c>
   130f4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   130f8:	asr	r0, r0, #6
   130fc:	add	r0, r0, #48	; 0x30
   13100:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13104:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13108:	add	r1, r1, r2
   1310c:	strb	r0, [r1]
   13110:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13114:	add	r0, r0, #1
   13118:	str	r0, [fp, #-44]	; 0xffffffd4
   1311c:	b	13120 <__assert_fail@plt+0x222c>
   13120:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13124:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13128:	cmp	r0, r1
   1312c:	bcs	13150 <__assert_fail@plt+0x225c>
   13130:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13134:	asr	r0, r0, #3
   13138:	and	r0, r0, #7
   1313c:	add	r0, r0, #48	; 0x30
   13140:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13144:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13148:	add	r1, r1, r2
   1314c:	strb	r0, [r1]
   13150:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13154:	add	r0, r0, #1
   13158:	str	r0, [fp, #-44]	; 0xffffffd4
   1315c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13160:	and	r0, r0, #7
   13164:	add	r0, r0, #48	; 0x30
   13168:	strb	r0, [fp, #-63]	; 0xffffffc1
   1316c:	b	131bc <__assert_fail@plt+0x22c8>
   13170:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   13174:	tst	r0, #1
   13178:	beq	131b8 <__assert_fail@plt+0x22c4>
   1317c:	b	13180 <__assert_fail@plt+0x228c>
   13180:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13184:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13188:	cmp	r0, r1
   1318c:	bcs	131a4 <__assert_fail@plt+0x22b0>
   13190:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13194:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13198:	add	r0, r0, r1
   1319c:	movw	r1, #92	; 0x5c
   131a0:	strb	r1, [r0]
   131a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   131a8:	add	r0, r0, #1
   131ac:	str	r0, [fp, #-44]	; 0xffffffd4
   131b0:	movw	r0, #0
   131b4:	strb	r0, [fp, #-65]	; 0xffffffbf
   131b8:	b	131bc <__assert_fail@plt+0x22c8>
   131bc:	ldr	r0, [sp, #76]	; 0x4c
   131c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   131c4:	add	r1, r1, #1
   131c8:	cmp	r0, r1
   131cc:	bhi	131d4 <__assert_fail@plt+0x22e0>
   131d0:	b	132b8 <__assert_fail@plt+0x23c4>
   131d4:	b	131d8 <__assert_fail@plt+0x22e4>
   131d8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   131dc:	tst	r0, #1
   131e0:	beq	13260 <__assert_fail@plt+0x236c>
   131e4:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   131e8:	tst	r0, #1
   131ec:	bne	13260 <__assert_fail@plt+0x236c>
   131f0:	b	131f4 <__assert_fail@plt+0x2300>
   131f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   131f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   131fc:	cmp	r0, r1
   13200:	bcs	13218 <__assert_fail@plt+0x2324>
   13204:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13208:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1320c:	add	r0, r0, r1
   13210:	movw	r1, #39	; 0x27
   13214:	strb	r1, [r0]
   13218:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1321c:	add	r0, r0, #1
   13220:	str	r0, [fp, #-44]	; 0xffffffd4
   13224:	b	13228 <__assert_fail@plt+0x2334>
   13228:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1322c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13230:	cmp	r0, r1
   13234:	bcs	1324c <__assert_fail@plt+0x2358>
   13238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1323c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13240:	add	r0, r0, r1
   13244:	movw	r1, #39	; 0x27
   13248:	strb	r1, [r0]
   1324c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13250:	add	r0, r0, #1
   13254:	str	r0, [fp, #-44]	; 0xffffffd4
   13258:	movw	r0, #0
   1325c:	strb	r0, [fp, #-60]	; 0xffffffc4
   13260:	b	13264 <__assert_fail@plt+0x2370>
   13264:	b	13268 <__assert_fail@plt+0x2374>
   13268:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1326c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13270:	cmp	r0, r1
   13274:	bcs	1328c <__assert_fail@plt+0x2398>
   13278:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1327c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13280:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13284:	add	r1, r1, r2
   13288:	strb	r0, [r1]
   1328c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13290:	add	r0, r0, #1
   13294:	str	r0, [fp, #-44]	; 0xffffffd4
   13298:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1329c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   132a0:	add	r1, r1, #1
   132a4:	str	r1, [fp, #-40]	; 0xffffffd8
   132a8:	add	r0, r0, r1
   132ac:	ldrb	r0, [r0]
   132b0:	strb	r0, [fp, #-63]	; 0xffffffc1
   132b4:	b	12fb8 <__assert_fail@plt+0x20c4>
   132b8:	b	13448 <__assert_fail@plt+0x2554>
   132bc:	b	132c0 <__assert_fail@plt+0x23cc>
   132c0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   132c4:	tst	r0, #1
   132c8:	beq	132d8 <__assert_fail@plt+0x23e4>
   132cc:	ldr	r0, [fp, #8]
   132d0:	cmp	r0, #2
   132d4:	bne	132e4 <__assert_fail@plt+0x23f0>
   132d8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   132dc:	tst	r0, #1
   132e0:	beq	13320 <__assert_fail@plt+0x242c>
   132e4:	ldr	r0, [fp, #16]
   132e8:	movw	r1, #0
   132ec:	cmp	r0, r1
   132f0:	beq	13320 <__assert_fail@plt+0x242c>
   132f4:	ldr	r0, [fp, #16]
   132f8:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   132fc:	lsr	r1, r1, #5
   13300:	add	r0, r0, r1, lsl #2
   13304:	ldr	r0, [r0]
   13308:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1330c:	and	r1, r1, #31
   13310:	lsr	r0, r0, r1
   13314:	and	r0, r0, #1
   13318:	cmp	r0, #0
   1331c:	bne	13330 <__assert_fail@plt+0x243c>
   13320:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   13324:	tst	r0, #1
   13328:	bne	13330 <__assert_fail@plt+0x243c>
   1332c:	b	13448 <__assert_fail@plt+0x2554>
   13330:	b	13334 <__assert_fail@plt+0x2440>
   13334:	b	13338 <__assert_fail@plt+0x2444>
   13338:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1333c:	tst	r0, #1
   13340:	beq	13348 <__assert_fail@plt+0x2454>
   13344:	b	136b4 <__assert_fail@plt+0x27c0>
   13348:	movw	r0, #1
   1334c:	strb	r0, [fp, #-66]	; 0xffffffbe
   13350:	ldr	r0, [fp, #8]
   13354:	cmp	r0, #2
   13358:	bne	1340c <__assert_fail@plt+0x2518>
   1335c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13360:	tst	r0, #1
   13364:	bne	1340c <__assert_fail@plt+0x2518>
   13368:	b	1336c <__assert_fail@plt+0x2478>
   1336c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13370:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13374:	cmp	r0, r1
   13378:	bcs	13390 <__assert_fail@plt+0x249c>
   1337c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13380:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13384:	add	r0, r0, r1
   13388:	movw	r1, #39	; 0x27
   1338c:	strb	r1, [r0]
   13390:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13394:	add	r0, r0, #1
   13398:	str	r0, [fp, #-44]	; 0xffffffd4
   1339c:	b	133a0 <__assert_fail@plt+0x24ac>
   133a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   133a8:	cmp	r0, r1
   133ac:	bcs	133c4 <__assert_fail@plt+0x24d0>
   133b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   133b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   133b8:	add	r0, r0, r1
   133bc:	movw	r1, #36	; 0x24
   133c0:	strb	r1, [r0]
   133c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133c8:	add	r0, r0, #1
   133cc:	str	r0, [fp, #-44]	; 0xffffffd4
   133d0:	b	133d4 <__assert_fail@plt+0x24e0>
   133d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   133dc:	cmp	r0, r1
   133e0:	bcs	133f8 <__assert_fail@plt+0x2504>
   133e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   133e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   133ec:	add	r0, r0, r1
   133f0:	movw	r1, #39	; 0x27
   133f4:	strb	r1, [r0]
   133f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133fc:	add	r0, r0, #1
   13400:	str	r0, [fp, #-44]	; 0xffffffd4
   13404:	movw	r0, #1
   13408:	strb	r0, [fp, #-60]	; 0xffffffc4
   1340c:	b	13410 <__assert_fail@plt+0x251c>
   13410:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13414:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13418:	cmp	r0, r1
   1341c:	bcs	13434 <__assert_fail@plt+0x2540>
   13420:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13424:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13428:	add	r0, r0, r1
   1342c:	movw	r1, #92	; 0x5c
   13430:	strb	r1, [r0]
   13434:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13438:	add	r0, r0, #1
   1343c:	str	r0, [fp, #-44]	; 0xffffffd4
   13440:	b	13444 <__assert_fail@plt+0x2550>
   13444:	b	13448 <__assert_fail@plt+0x2554>
   13448:	b	1344c <__assert_fail@plt+0x2558>
   1344c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13450:	tst	r0, #1
   13454:	beq	134d4 <__assert_fail@plt+0x25e0>
   13458:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1345c:	tst	r0, #1
   13460:	bne	134d4 <__assert_fail@plt+0x25e0>
   13464:	b	13468 <__assert_fail@plt+0x2574>
   13468:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1346c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13470:	cmp	r0, r1
   13474:	bcs	1348c <__assert_fail@plt+0x2598>
   13478:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1347c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13480:	add	r0, r0, r1
   13484:	movw	r1, #39	; 0x27
   13488:	strb	r1, [r0]
   1348c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13490:	add	r0, r0, #1
   13494:	str	r0, [fp, #-44]	; 0xffffffd4
   13498:	b	1349c <__assert_fail@plt+0x25a8>
   1349c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   134a4:	cmp	r0, r1
   134a8:	bcs	134c0 <__assert_fail@plt+0x25cc>
   134ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   134b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   134b4:	add	r0, r0, r1
   134b8:	movw	r1, #39	; 0x27
   134bc:	strb	r1, [r0]
   134c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134c4:	add	r0, r0, #1
   134c8:	str	r0, [fp, #-44]	; 0xffffffd4
   134cc:	movw	r0, #0
   134d0:	strb	r0, [fp, #-60]	; 0xffffffc4
   134d4:	b	134d8 <__assert_fail@plt+0x25e4>
   134d8:	b	134dc <__assert_fail@plt+0x25e8>
   134dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   134e4:	cmp	r0, r1
   134e8:	bcs	13500 <__assert_fail@plt+0x260c>
   134ec:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   134f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   134f4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   134f8:	add	r1, r1, r2
   134fc:	strb	r0, [r1]
   13500:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13504:	add	r0, r0, #1
   13508:	str	r0, [fp, #-44]	; 0xffffffd4
   1350c:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   13510:	tst	r0, #1
   13514:	bne	13520 <__assert_fail@plt+0x262c>
   13518:	movw	r0, #0
   1351c:	strb	r0, [fp, #-62]	; 0xffffffc2
   13520:	b	13524 <__assert_fail@plt+0x2630>
   13524:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13528:	add	r0, r0, #1
   1352c:	str	r0, [fp, #-40]	; 0xffffffd8
   13530:	b	122dc <__assert_fail@plt+0x13e8>
   13534:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13538:	cmp	r0, #0
   1353c:	bne	1355c <__assert_fail@plt+0x2668>
   13540:	ldr	r0, [fp, #8]
   13544:	cmp	r0, #2
   13548:	bne	1355c <__assert_fail@plt+0x2668>
   1354c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13550:	tst	r0, #1
   13554:	beq	1355c <__assert_fail@plt+0x2668>
   13558:	b	136b4 <__assert_fail@plt+0x27c0>
   1355c:	ldr	r0, [fp, #8]
   13560:	cmp	r0, #2
   13564:	bne	13604 <__assert_fail@plt+0x2710>
   13568:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1356c:	tst	r0, #1
   13570:	bne	13604 <__assert_fail@plt+0x2710>
   13574:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   13578:	tst	r0, #1
   1357c:	beq	13604 <__assert_fail@plt+0x2710>
   13580:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   13584:	tst	r0, #1
   13588:	beq	135d0 <__assert_fail@plt+0x26dc>
   1358c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13590:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13594:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13598:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1359c:	ldr	ip, [fp, #12]
   135a0:	ldr	lr, [fp, #16]
   135a4:	ldr	r4, [fp, #20]
   135a8:	ldr	r5, [fp, #24]
   135ac:	movw	r6, #5
   135b0:	str	r6, [sp]
   135b4:	str	ip, [sp, #4]
   135b8:	str	lr, [sp, #8]
   135bc:	str	r4, [sp, #12]
   135c0:	str	r5, [sp, #16]
   135c4:	bl	11ff4 <__assert_fail@plt+0x1100>
   135c8:	str	r0, [fp, #-20]	; 0xffffffec
   135cc:	b	1371c <__assert_fail@plt+0x2828>
   135d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   135d4:	cmp	r0, #0
   135d8:	bne	135fc <__assert_fail@plt+0x2708>
   135dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   135e0:	cmp	r0, #0
   135e4:	beq	135fc <__assert_fail@plt+0x2708>
   135e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   135ec:	str	r0, [fp, #-28]	; 0xffffffe4
   135f0:	movw	r0, #0
   135f4:	str	r0, [fp, #-44]	; 0xffffffd4
   135f8:	b	1209c <__assert_fail@plt+0x11a8>
   135fc:	b	13600 <__assert_fail@plt+0x270c>
   13600:	b	13604 <__assert_fail@plt+0x2710>
   13604:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13608:	movw	r1, #0
   1360c:	cmp	r0, r1
   13610:	beq	13684 <__assert_fail@plt+0x2790>
   13614:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13618:	tst	r0, #1
   1361c:	bne	13684 <__assert_fail@plt+0x2790>
   13620:	b	13624 <__assert_fail@plt+0x2730>
   13624:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13628:	ldrsb	r0, [r0]
   1362c:	cmp	r0, #0
   13630:	beq	13680 <__assert_fail@plt+0x278c>
   13634:	b	13638 <__assert_fail@plt+0x2744>
   13638:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1363c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13640:	cmp	r0, r1
   13644:	bcs	13660 <__assert_fail@plt+0x276c>
   13648:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1364c:	ldrb	r0, [r0]
   13650:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13654:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13658:	add	r1, r1, r2
   1365c:	strb	r0, [r1]
   13660:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13664:	add	r0, r0, #1
   13668:	str	r0, [fp, #-44]	; 0xffffffd4
   1366c:	b	13670 <__assert_fail@plt+0x277c>
   13670:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13674:	add	r0, r0, #1
   13678:	str	r0, [fp, #-52]	; 0xffffffcc
   1367c:	b	13624 <__assert_fail@plt+0x2730>
   13680:	b	13684 <__assert_fail@plt+0x2790>
   13684:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13688:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1368c:	cmp	r0, r1
   13690:	bcs	136a8 <__assert_fail@plt+0x27b4>
   13694:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13698:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1369c:	add	r0, r0, r1
   136a0:	movw	r1, #0
   136a4:	strb	r1, [r0]
   136a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   136ac:	str	r0, [fp, #-20]	; 0xffffffec
   136b0:	b	1371c <__assert_fail@plt+0x2828>
   136b4:	ldr	r0, [fp, #8]
   136b8:	cmp	r0, #2
   136bc:	bne	136d4 <__assert_fail@plt+0x27e0>
   136c0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   136c4:	tst	r0, #1
   136c8:	beq	136d4 <__assert_fail@plt+0x27e0>
   136cc:	movw	r0, #4
   136d0:	str	r0, [fp, #8]
   136d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   136dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   136e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   136e4:	ldr	ip, [fp, #8]
   136e8:	ldr	lr, [fp, #12]
   136ec:	mvn	r4, #2
   136f0:	and	lr, lr, r4
   136f4:	ldr	r4, [fp, #20]
   136f8:	ldr	r5, [fp, #24]
   136fc:	str	ip, [sp]
   13700:	str	lr, [sp, #4]
   13704:	movw	ip, #0
   13708:	str	ip, [sp, #8]
   1370c:	str	r4, [sp, #12]
   13710:	str	r5, [sp, #16]
   13714:	bl	11ff4 <__assert_fail@plt+0x1100>
   13718:	str	r0, [fp, #-20]	; 0xffffffec
   1371c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13720:	sub	sp, fp, #16
   13724:	pop	{r4, r5, r6, sl, fp, pc}
   13728:	push	{fp, lr}
   1372c:	mov	fp, sp
   13730:	sub	sp, sp, #16
   13734:	str	r0, [fp, #-4]
   13738:	str	r1, [sp, #8]
   1373c:	str	r2, [sp, #4]
   13740:	ldr	r0, [fp, #-4]
   13744:	ldr	r1, [sp, #8]
   13748:	ldr	r3, [sp, #4]
   1374c:	movw	r2, #0
   13750:	bl	1375c <__assert_fail@plt+0x2868>
   13754:	mov	sp, fp
   13758:	pop	{fp, pc}
   1375c:	push	{r4, r5, r6, sl, fp, lr}
   13760:	add	fp, sp, #16
   13764:	sub	sp, sp, #80	; 0x50
   13768:	str	r0, [fp, #-20]	; 0xffffffec
   1376c:	str	r1, [fp, #-24]	; 0xffffffe8
   13770:	str	r2, [fp, #-28]	; 0xffffffe4
   13774:	str	r3, [fp, #-32]	; 0xffffffe0
   13778:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1377c:	movw	r1, #0
   13780:	cmp	r0, r1
   13784:	beq	13794 <__assert_fail@plt+0x28a0>
   13788:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1378c:	str	r0, [sp, #40]	; 0x28
   13790:	b	137a4 <__assert_fail@plt+0x28b0>
   13794:	movw	r0, #45388	; 0xb14c
   13798:	movt	r0, #2
   1379c:	str	r0, [sp, #40]	; 0x28
   137a0:	b	137a4 <__assert_fail@plt+0x28b0>
   137a4:	ldr	r0, [sp, #40]	; 0x28
   137a8:	str	r0, [fp, #-36]	; 0xffffffdc
   137ac:	bl	10e40 <__errno_location@plt>
   137b0:	ldr	r0, [r0]
   137b4:	str	r0, [fp, #-40]	; 0xffffffd8
   137b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   137bc:	ldr	r0, [r0, #4]
   137c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   137c4:	movw	r2, #0
   137c8:	cmp	r1, r2
   137cc:	movw	r1, #0
   137d0:	movne	r1, #1
   137d4:	tst	r1, #1
   137d8:	mov	r1, r2
   137dc:	moveq	r1, #1
   137e0:	orr	r0, r0, r1
   137e4:	str	r0, [fp, #-44]	; 0xffffffd4
   137e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   137ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   137f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   137f4:	ldr	r1, [r1]
   137f8:	ldr	ip, [fp, #-44]	; 0xffffffd4
   137fc:	ldr	lr, [fp, #-36]	; 0xffffffdc
   13800:	add	lr, lr, #8
   13804:	ldr	r4, [fp, #-36]	; 0xffffffdc
   13808:	ldr	r4, [r4, #40]	; 0x28
   1380c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   13810:	ldr	r5, [r5, #44]	; 0x2c
   13814:	str	r0, [sp, #36]	; 0x24
   13818:	mov	r0, r2
   1381c:	str	r1, [sp, #32]
   13820:	mov	r1, r2
   13824:	ldr	r2, [sp, #36]	; 0x24
   13828:	ldr	r6, [sp, #32]
   1382c:	str	r6, [sp]
   13830:	str	ip, [sp, #4]
   13834:	str	lr, [sp, #8]
   13838:	str	r4, [sp, #12]
   1383c:	str	r5, [sp, #16]
   13840:	bl	11ff4 <__assert_fail@plt+0x1100>
   13844:	add	r0, r0, #1
   13848:	str	r0, [sp, #48]	; 0x30
   1384c:	ldr	r0, [sp, #48]	; 0x30
   13850:	bl	14c40 <__assert_fail@plt+0x3d4c>
   13854:	str	r0, [sp, #44]	; 0x2c
   13858:	ldr	r0, [sp, #44]	; 0x2c
   1385c:	ldr	r1, [sp, #48]	; 0x30
   13860:	ldr	r2, [fp, #-20]	; 0xffffffec
   13864:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13868:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1386c:	ldr	ip, [ip]
   13870:	ldr	lr, [fp, #-44]	; 0xffffffd4
   13874:	ldr	r4, [fp, #-36]	; 0xffffffdc
   13878:	add	r4, r4, #8
   1387c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   13880:	ldr	r5, [r5, #40]	; 0x28
   13884:	ldr	r6, [fp, #-36]	; 0xffffffdc
   13888:	ldr	r6, [r6, #44]	; 0x2c
   1388c:	str	ip, [sp]
   13890:	str	lr, [sp, #4]
   13894:	str	r4, [sp, #8]
   13898:	str	r5, [sp, #12]
   1389c:	str	r6, [sp, #16]
   138a0:	bl	11ff4 <__assert_fail@plt+0x1100>
   138a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   138a8:	str	r0, [sp, #28]
   138ac:	str	r1, [sp, #24]
   138b0:	bl	10e40 <__errno_location@plt>
   138b4:	ldr	r1, [sp, #24]
   138b8:	str	r1, [r0]
   138bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   138c0:	movw	r2, #0
   138c4:	cmp	r0, r2
   138c8:	beq	138dc <__assert_fail@plt+0x29e8>
   138cc:	ldr	r0, [sp, #48]	; 0x30
   138d0:	sub	r0, r0, #1
   138d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   138d8:	str	r0, [r1]
   138dc:	ldr	r0, [sp, #44]	; 0x2c
   138e0:	sub	sp, fp, #16
   138e4:	pop	{r4, r5, r6, sl, fp, pc}
   138e8:	push	{fp, lr}
   138ec:	mov	fp, sp
   138f0:	sub	sp, sp, #8
   138f4:	movw	r0, #45272	; 0xb0d8
   138f8:	movt	r0, #2
   138fc:	ldr	r0, [r0]
   13900:	str	r0, [sp, #4]
   13904:	movw	r0, #1
   13908:	str	r0, [sp]
   1390c:	ldr	r0, [sp]
   13910:	movw	r1, #45276	; 0xb0dc
   13914:	movt	r1, #2
   13918:	ldr	r1, [r1]
   1391c:	cmp	r0, r1
   13920:	bge	13948 <__assert_fail@plt+0x2a54>
   13924:	ldr	r0, [sp, #4]
   13928:	ldr	r1, [sp]
   1392c:	add	r0, r0, r1, lsl #3
   13930:	ldr	r0, [r0, #4]
   13934:	bl	17a98 <__assert_fail@plt+0x6ba4>
   13938:	ldr	r0, [sp]
   1393c:	add	r0, r0, #1
   13940:	str	r0, [sp]
   13944:	b	1390c <__assert_fail@plt+0x2a18>
   13948:	ldr	r0, [sp, #4]
   1394c:	ldr	r0, [r0, #4]
   13950:	movw	r1, #45436	; 0xb17c
   13954:	movt	r1, #2
   13958:	cmp	r0, r1
   1395c:	beq	13988 <__assert_fail@plt+0x2a94>
   13960:	ldr	r0, [sp, #4]
   13964:	ldr	r0, [r0, #4]
   13968:	bl	17a98 <__assert_fail@plt+0x6ba4>
   1396c:	movw	r0, #256	; 0x100
   13970:	movw	r1, #45280	; 0xb0e0
   13974:	movt	r1, #2
   13978:	str	r0, [r1]
   1397c:	movw	r0, #45436	; 0xb17c
   13980:	movt	r0, #2
   13984:	str	r0, [r1, #4]
   13988:	ldr	r0, [sp, #4]
   1398c:	movw	r1, #45280	; 0xb0e0
   13990:	movt	r1, #2
   13994:	cmp	r0, r1
   13998:	beq	139b8 <__assert_fail@plt+0x2ac4>
   1399c:	ldr	r0, [sp, #4]
   139a0:	bl	17a98 <__assert_fail@plt+0x6ba4>
   139a4:	movw	r0, #45272	; 0xb0d8
   139a8:	movt	r0, #2
   139ac:	movw	r1, #45280	; 0xb0e0
   139b0:	movt	r1, #2
   139b4:	str	r1, [r0]
   139b8:	movw	r0, #45276	; 0xb0dc
   139bc:	movt	r0, #2
   139c0:	movw	r1, #1
   139c4:	str	r1, [r0]
   139c8:	mov	sp, fp
   139cc:	pop	{fp, pc}
   139d0:	push	{fp, lr}
   139d4:	mov	fp, sp
   139d8:	sub	sp, sp, #8
   139dc:	str	r0, [sp, #4]
   139e0:	str	r1, [sp]
   139e4:	ldr	r0, [sp, #4]
   139e8:	ldr	r1, [sp]
   139ec:	mvn	r2, #0
   139f0:	movw	r3, #45388	; 0xb14c
   139f4:	movt	r3, #2
   139f8:	bl	13a04 <__assert_fail@plt+0x2b10>
   139fc:	mov	sp, fp
   13a00:	pop	{fp, pc}
   13a04:	push	{r4, r5, r6, sl, fp, lr}
   13a08:	add	fp, sp, #16
   13a0c:	sub	sp, sp, #80	; 0x50
   13a10:	str	r0, [fp, #-20]	; 0xffffffec
   13a14:	str	r1, [fp, #-24]	; 0xffffffe8
   13a18:	str	r2, [fp, #-28]	; 0xffffffe4
   13a1c:	str	r3, [fp, #-32]	; 0xffffffe0
   13a20:	bl	10e40 <__errno_location@plt>
   13a24:	ldr	r1, [pc, #672]	; 13ccc <__assert_fail@plt+0x2dd8>
   13a28:	ldr	r0, [r0]
   13a2c:	str	r0, [fp, #-36]	; 0xffffffdc
   13a30:	movw	r0, #45272	; 0xb0d8
   13a34:	movt	r0, #2
   13a38:	ldr	r0, [r0]
   13a3c:	str	r0, [fp, #-40]	; 0xffffffd8
   13a40:	str	r1, [fp, #-44]	; 0xffffffd4
   13a44:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a48:	movw	r1, #0
   13a4c:	cmp	r1, r0
   13a50:	bgt	13a64 <__assert_fail@plt+0x2b70>
   13a54:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a58:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13a5c:	cmp	r0, r1
   13a60:	blt	13a68 <__assert_fail@plt+0x2b74>
   13a64:	bl	10ee8 <abort@plt>
   13a68:	movw	r0, #45276	; 0xb0dc
   13a6c:	movt	r0, #2
   13a70:	ldr	r0, [r0]
   13a74:	ldr	r1, [fp, #-20]	; 0xffffffec
   13a78:	cmp	r0, r1
   13a7c:	bgt	13b74 <__assert_fail@plt+0x2c80>
   13a80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13a84:	movw	r1, #45280	; 0xb0e0
   13a88:	movt	r1, #2
   13a8c:	cmp	r0, r1
   13a90:	movw	r0, #0
   13a94:	moveq	r0, #1
   13a98:	and	r0, r0, #1
   13a9c:	strb	r0, [fp, #-45]	; 0xffffffd3
   13aa0:	movw	r0, #45276	; 0xb0dc
   13aa4:	movt	r0, #2
   13aa8:	ldr	r0, [r0]
   13aac:	str	r0, [sp, #44]	; 0x2c
   13ab0:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   13ab4:	tst	r0, #1
   13ab8:	beq	13ac8 <__assert_fail@plt+0x2bd4>
   13abc:	movw	r0, #0
   13ac0:	str	r0, [sp, #24]
   13ac4:	b	13ad0 <__assert_fail@plt+0x2bdc>
   13ac8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13acc:	str	r0, [sp, #24]
   13ad0:	ldr	r0, [sp, #24]
   13ad4:	ldr	r1, [fp, #-20]	; 0xffffffec
   13ad8:	movw	r2, #45276	; 0xb0dc
   13adc:	movt	r2, #2
   13ae0:	ldr	r2, [r2]
   13ae4:	sub	r1, r1, r2
   13ae8:	add	r2, r1, #1
   13aec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13af0:	add	r1, sp, #44	; 0x2c
   13af4:	movw	ip, #8
   13af8:	str	ip, [sp]
   13afc:	bl	14e7c <__assert_fail@plt+0x3f88>
   13b00:	str	r0, [fp, #-40]	; 0xffffffd8
   13b04:	movw	r1, #45272	; 0xb0d8
   13b08:	movt	r1, #2
   13b0c:	str	r0, [r1]
   13b10:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   13b14:	tst	r0, #1
   13b18:	beq	13b38 <__assert_fail@plt+0x2c44>
   13b1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13b20:	movw	r1, #45280	; 0xb0e0
   13b24:	movt	r1, #2
   13b28:	ldr	r2, [r1]
   13b2c:	str	r2, [r0]
   13b30:	ldr	r1, [r1, #4]
   13b34:	str	r1, [r0, #4]
   13b38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13b3c:	movw	r1, #45276	; 0xb0dc
   13b40:	movt	r1, #2
   13b44:	ldr	r1, [r1]
   13b48:	add	r0, r0, r1, lsl #3
   13b4c:	ldr	r2, [sp, #44]	; 0x2c
   13b50:	sub	r1, r2, r1
   13b54:	lsl	r2, r1, #3
   13b58:	movw	r1, #0
   13b5c:	and	r1, r1, #255	; 0xff
   13b60:	bl	10e58 <memset@plt>
   13b64:	ldr	r0, [sp, #44]	; 0x2c
   13b68:	movw	r1, #45276	; 0xb0dc
   13b6c:	movt	r1, #2
   13b70:	str	r0, [r1]
   13b74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13b78:	ldr	r1, [fp, #-20]	; 0xffffffec
   13b7c:	ldr	r0, [r0, r1, lsl #3]
   13b80:	str	r0, [sp, #40]	; 0x28
   13b84:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13b88:	ldr	r1, [fp, #-20]	; 0xffffffec
   13b8c:	add	r0, r0, r1, lsl #3
   13b90:	ldr	r0, [r0, #4]
   13b94:	str	r0, [sp, #36]	; 0x24
   13b98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13b9c:	ldr	r0, [r0, #4]
   13ba0:	orr	r0, r0, #1
   13ba4:	str	r0, [sp, #32]
   13ba8:	ldr	r0, [sp, #36]	; 0x24
   13bac:	ldr	r1, [sp, #40]	; 0x28
   13bb0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13bb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13bb8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   13bbc:	ldr	ip, [ip]
   13bc0:	ldr	lr, [sp, #32]
   13bc4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   13bc8:	add	r4, r4, #8
   13bcc:	ldr	r5, [fp, #-32]	; 0xffffffe0
   13bd0:	ldr	r5, [r5, #40]	; 0x28
   13bd4:	ldr	r6, [fp, #-32]	; 0xffffffe0
   13bd8:	ldr	r6, [r6, #44]	; 0x2c
   13bdc:	str	ip, [sp]
   13be0:	str	lr, [sp, #4]
   13be4:	str	r4, [sp, #8]
   13be8:	str	r5, [sp, #12]
   13bec:	str	r6, [sp, #16]
   13bf0:	bl	11ff4 <__assert_fail@plt+0x1100>
   13bf4:	str	r0, [sp, #28]
   13bf8:	ldr	r0, [sp, #40]	; 0x28
   13bfc:	ldr	r1, [sp, #28]
   13c00:	cmp	r0, r1
   13c04:	bhi	13cac <__assert_fail@plt+0x2db8>
   13c08:	ldr	r0, [sp, #28]
   13c0c:	add	r0, r0, #1
   13c10:	str	r0, [sp, #40]	; 0x28
   13c14:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13c18:	ldr	r2, [fp, #-20]	; 0xffffffec
   13c1c:	add	r1, r1, r2, lsl #3
   13c20:	str	r0, [r1]
   13c24:	ldr	r0, [sp, #36]	; 0x24
   13c28:	movw	r1, #45436	; 0xb17c
   13c2c:	movt	r1, #2
   13c30:	cmp	r0, r1
   13c34:	beq	13c40 <__assert_fail@plt+0x2d4c>
   13c38:	ldr	r0, [sp, #36]	; 0x24
   13c3c:	bl	17a98 <__assert_fail@plt+0x6ba4>
   13c40:	ldr	r0, [sp, #40]	; 0x28
   13c44:	bl	14c40 <__assert_fail@plt+0x3d4c>
   13c48:	mov	r1, r0
   13c4c:	str	r0, [sp, #36]	; 0x24
   13c50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13c54:	ldr	r2, [fp, #-20]	; 0xffffffec
   13c58:	add	r0, r0, r2, lsl #3
   13c5c:	str	r1, [r0, #4]
   13c60:	ldr	r0, [sp, #36]	; 0x24
   13c64:	ldr	r1, [sp, #40]	; 0x28
   13c68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13c6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13c70:	ldr	ip, [fp, #-32]	; 0xffffffe0
   13c74:	ldr	ip, [ip]
   13c78:	ldr	lr, [sp, #32]
   13c7c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   13c80:	add	r4, r4, #8
   13c84:	ldr	r5, [fp, #-32]	; 0xffffffe0
   13c88:	ldr	r5, [r5, #40]	; 0x28
   13c8c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   13c90:	ldr	r6, [r6, #44]	; 0x2c
   13c94:	str	ip, [sp]
   13c98:	str	lr, [sp, #4]
   13c9c:	str	r4, [sp, #8]
   13ca0:	str	r5, [sp, #12]
   13ca4:	str	r6, [sp, #16]
   13ca8:	bl	11ff4 <__assert_fail@plt+0x1100>
   13cac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13cb0:	str	r0, [sp, #20]
   13cb4:	bl	10e40 <__errno_location@plt>
   13cb8:	ldr	r1, [sp, #20]
   13cbc:	str	r1, [r0]
   13cc0:	ldr	r0, [sp, #36]	; 0x24
   13cc4:	sub	sp, fp, #16
   13cc8:	pop	{r4, r5, r6, sl, fp, pc}
   13ccc:	svcvc	0x00ffffff
   13cd0:	push	{fp, lr}
   13cd4:	mov	fp, sp
   13cd8:	sub	sp, sp, #16
   13cdc:	str	r0, [fp, #-4]
   13ce0:	str	r1, [sp, #8]
   13ce4:	str	r2, [sp, #4]
   13ce8:	ldr	r0, [fp, #-4]
   13cec:	ldr	r1, [sp, #8]
   13cf0:	ldr	r2, [sp, #4]
   13cf4:	movw	r3, #45388	; 0xb14c
   13cf8:	movt	r3, #2
   13cfc:	bl	13a04 <__assert_fail@plt+0x2b10>
   13d00:	mov	sp, fp
   13d04:	pop	{fp, pc}
   13d08:	push	{fp, lr}
   13d0c:	mov	fp, sp
   13d10:	sub	sp, sp, #8
   13d14:	str	r0, [sp, #4]
   13d18:	ldr	r1, [sp, #4]
   13d1c:	movw	r0, #0
   13d20:	bl	139d0 <__assert_fail@plt+0x2adc>
   13d24:	mov	sp, fp
   13d28:	pop	{fp, pc}
   13d2c:	push	{fp, lr}
   13d30:	mov	fp, sp
   13d34:	sub	sp, sp, #8
   13d38:	str	r0, [sp, #4]
   13d3c:	str	r1, [sp]
   13d40:	ldr	r1, [sp, #4]
   13d44:	ldr	r2, [sp]
   13d48:	movw	r0, #0
   13d4c:	bl	13cd0 <__assert_fail@plt+0x2ddc>
   13d50:	mov	sp, fp
   13d54:	pop	{fp, pc}
   13d58:	push	{fp, lr}
   13d5c:	mov	fp, sp
   13d60:	sub	sp, sp, #64	; 0x40
   13d64:	str	r0, [fp, #-4]
   13d68:	str	r1, [fp, #-8]
   13d6c:	str	r2, [fp, #-12]
   13d70:	ldr	r1, [fp, #-8]
   13d74:	add	r0, sp, #4
   13d78:	bl	13d98 <__assert_fail@plt+0x2ea4>
   13d7c:	ldr	r0, [fp, #-4]
   13d80:	ldr	r1, [fp, #-12]
   13d84:	mvn	r2, #0
   13d88:	add	r3, sp, #4
   13d8c:	bl	13a04 <__assert_fail@plt+0x2b10>
   13d90:	mov	sp, fp
   13d94:	pop	{fp, pc}
   13d98:	push	{fp, lr}
   13d9c:	mov	fp, sp
   13da0:	sub	sp, sp, #8
   13da4:	str	r1, [sp, #4]
   13da8:	mov	r1, r0
   13dac:	str	r0, [sp]
   13db0:	mov	r0, r1
   13db4:	movw	r1, #0
   13db8:	and	r1, r1, #255	; 0xff
   13dbc:	movw	r2, #48	; 0x30
   13dc0:	bl	10e58 <memset@plt>
   13dc4:	ldr	r0, [sp, #4]
   13dc8:	cmp	r0, #10
   13dcc:	bne	13dd4 <__assert_fail@plt+0x2ee0>
   13dd0:	bl	10ee8 <abort@plt>
   13dd4:	ldr	r0, [sp, #4]
   13dd8:	ldr	r1, [sp]
   13ddc:	str	r0, [r1]
   13de0:	mov	sp, fp
   13de4:	pop	{fp, pc}
   13de8:	push	{fp, lr}
   13dec:	mov	fp, sp
   13df0:	sub	sp, sp, #64	; 0x40
   13df4:	str	r0, [fp, #-4]
   13df8:	str	r1, [fp, #-8]
   13dfc:	str	r2, [fp, #-12]
   13e00:	str	r3, [fp, #-16]
   13e04:	ldr	r1, [fp, #-8]
   13e08:	mov	r0, sp
   13e0c:	bl	13d98 <__assert_fail@plt+0x2ea4>
   13e10:	ldr	r0, [fp, #-4]
   13e14:	ldr	r1, [fp, #-12]
   13e18:	ldr	r2, [fp, #-16]
   13e1c:	mov	r3, sp
   13e20:	bl	13a04 <__assert_fail@plt+0x2b10>
   13e24:	mov	sp, fp
   13e28:	pop	{fp, pc}
   13e2c:	push	{fp, lr}
   13e30:	mov	fp, sp
   13e34:	sub	sp, sp, #8
   13e38:	str	r0, [sp, #4]
   13e3c:	str	r1, [sp]
   13e40:	ldr	r1, [sp, #4]
   13e44:	ldr	r2, [sp]
   13e48:	movw	r0, #0
   13e4c:	bl	13d58 <__assert_fail@plt+0x2e64>
   13e50:	mov	sp, fp
   13e54:	pop	{fp, pc}
   13e58:	push	{fp, lr}
   13e5c:	mov	fp, sp
   13e60:	sub	sp, sp, #16
   13e64:	str	r0, [fp, #-4]
   13e68:	str	r1, [sp, #8]
   13e6c:	str	r2, [sp, #4]
   13e70:	ldr	r1, [fp, #-4]
   13e74:	ldr	r2, [sp, #8]
   13e78:	ldr	r3, [sp, #4]
   13e7c:	movw	r0, #0
   13e80:	bl	13de8 <__assert_fail@plt+0x2ef4>
   13e84:	mov	sp, fp
   13e88:	pop	{fp, pc}
   13e8c:	push	{fp, lr}
   13e90:	mov	fp, sp
   13e94:	sub	sp, sp, #72	; 0x48
   13e98:	movw	r3, #45388	; 0xb14c
   13e9c:	movt	r3, #2
   13ea0:	str	r0, [fp, #-4]
   13ea4:	str	r1, [fp, #-8]
   13ea8:	strb	r2, [fp, #-9]
   13eac:	add	r0, sp, #12
   13eb0:	mov	r1, r0
   13eb4:	str	r0, [sp, #8]
   13eb8:	mov	r0, r1
   13ebc:	mov	r1, r3
   13ec0:	movw	r2, #48	; 0x30
   13ec4:	bl	10d44 <memcpy@plt>
   13ec8:	ldr	r0, [sp, #8]
   13ecc:	ldrb	r1, [fp, #-9]
   13ed0:	movw	r2, #1
   13ed4:	bl	11d9c <__assert_fail@plt+0xea8>
   13ed8:	ldr	r1, [fp, #-4]
   13edc:	ldr	r2, [fp, #-8]
   13ee0:	movw	r3, #0
   13ee4:	str	r0, [sp, #4]
   13ee8:	mov	r0, r3
   13eec:	add	r3, sp, #12
   13ef0:	bl	13a04 <__assert_fail@plt+0x2b10>
   13ef4:	mov	sp, fp
   13ef8:	pop	{fp, pc}
   13efc:	push	{fp, lr}
   13f00:	mov	fp, sp
   13f04:	sub	sp, sp, #8
   13f08:	str	r0, [sp, #4]
   13f0c:	strb	r1, [sp, #3]
   13f10:	ldr	r0, [sp, #4]
   13f14:	mvn	r1, #0
   13f18:	ldrb	r2, [sp, #3]
   13f1c:	bl	13e8c <__assert_fail@plt+0x2f98>
   13f20:	mov	sp, fp
   13f24:	pop	{fp, pc}
   13f28:	push	{fp, lr}
   13f2c:	mov	fp, sp
   13f30:	sub	sp, sp, #8
   13f34:	str	r0, [sp, #4]
   13f38:	ldr	r0, [sp, #4]
   13f3c:	movw	r1, #58	; 0x3a
   13f40:	and	r1, r1, #255	; 0xff
   13f44:	bl	13efc <__assert_fail@plt+0x3008>
   13f48:	mov	sp, fp
   13f4c:	pop	{fp, pc}
   13f50:	push	{fp, lr}
   13f54:	mov	fp, sp
   13f58:	sub	sp, sp, #8
   13f5c:	str	r0, [sp, #4]
   13f60:	str	r1, [sp]
   13f64:	ldr	r0, [sp, #4]
   13f68:	ldr	r1, [sp]
   13f6c:	movw	r2, #58	; 0x3a
   13f70:	and	r2, r2, #255	; 0xff
   13f74:	bl	13e8c <__assert_fail@plt+0x2f98>
   13f78:	mov	sp, fp
   13f7c:	pop	{fp, pc}
   13f80:	push	{fp, lr}
   13f84:	mov	fp, sp
   13f88:	sub	sp, sp, #120	; 0x78
   13f8c:	str	r0, [fp, #-4]
   13f90:	str	r1, [fp, #-8]
   13f94:	str	r2, [fp, #-12]
   13f98:	ldr	r1, [fp, #-8]
   13f9c:	add	r0, sp, #12
   13fa0:	bl	13d98 <__assert_fail@plt+0x2ea4>
   13fa4:	add	r0, sp, #60	; 0x3c
   13fa8:	mov	r1, r0
   13fac:	add	r2, sp, #12
   13fb0:	str	r0, [sp, #8]
   13fb4:	mov	r0, r1
   13fb8:	mov	r1, r2
   13fbc:	movw	r2, #48	; 0x30
   13fc0:	bl	10d44 <memcpy@plt>
   13fc4:	ldr	r0, [sp, #8]
   13fc8:	movw	r1, #58	; 0x3a
   13fcc:	and	r1, r1, #255	; 0xff
   13fd0:	movw	r2, #1
   13fd4:	bl	11d9c <__assert_fail@plt+0xea8>
   13fd8:	ldr	r1, [fp, #-4]
   13fdc:	ldr	r2, [fp, #-12]
   13fe0:	str	r0, [sp, #4]
   13fe4:	mov	r0, r1
   13fe8:	mov	r1, r2
   13fec:	mvn	r2, #0
   13ff0:	add	r3, sp, #60	; 0x3c
   13ff4:	bl	13a04 <__assert_fail@plt+0x2b10>
   13ff8:	mov	sp, fp
   13ffc:	pop	{fp, pc}
   14000:	push	{fp, lr}
   14004:	mov	fp, sp
   14008:	sub	sp, sp, #24
   1400c:	str	r0, [fp, #-4]
   14010:	str	r1, [fp, #-8]
   14014:	str	r2, [sp, #12]
   14018:	str	r3, [sp, #8]
   1401c:	ldr	r0, [fp, #-4]
   14020:	ldr	r1, [fp, #-8]
   14024:	ldr	r2, [sp, #12]
   14028:	ldr	r3, [sp, #8]
   1402c:	mvn	ip, #0
   14030:	str	ip, [sp]
   14034:	bl	14040 <__assert_fail@plt+0x314c>
   14038:	mov	sp, fp
   1403c:	pop	{fp, pc}
   14040:	push	{fp, lr}
   14044:	mov	fp, sp
   14048:	sub	sp, sp, #72	; 0x48
   1404c:	ldr	ip, [fp, #8]
   14050:	movw	lr, #45388	; 0xb14c
   14054:	movt	lr, #2
   14058:	str	r0, [fp, #-4]
   1405c:	str	r1, [fp, #-8]
   14060:	str	r2, [fp, #-12]
   14064:	str	r3, [fp, #-16]
   14068:	add	r0, sp, #8
   1406c:	mov	r1, r0
   14070:	str	r0, [sp, #4]
   14074:	mov	r0, r1
   14078:	mov	r1, lr
   1407c:	movw	r2, #48	; 0x30
   14080:	str	ip, [sp]
   14084:	bl	10d44 <memcpy@plt>
   14088:	ldr	r1, [fp, #-8]
   1408c:	ldr	r2, [fp, #-12]
   14090:	ldr	r0, [sp, #4]
   14094:	bl	11e9c <__assert_fail@plt+0xfa8>
   14098:	ldr	r0, [fp, #-4]
   1409c:	ldr	r1, [fp, #-16]
   140a0:	ldr	r2, [fp, #8]
   140a4:	add	r3, sp, #8
   140a8:	bl	13a04 <__assert_fail@plt+0x2b10>
   140ac:	mov	sp, fp
   140b0:	pop	{fp, pc}
   140b4:	push	{fp, lr}
   140b8:	mov	fp, sp
   140bc:	sub	sp, sp, #16
   140c0:	str	r0, [fp, #-4]
   140c4:	str	r1, [sp, #8]
   140c8:	str	r2, [sp, #4]
   140cc:	ldr	r1, [fp, #-4]
   140d0:	ldr	r2, [sp, #8]
   140d4:	ldr	r3, [sp, #4]
   140d8:	movw	r0, #0
   140dc:	bl	14000 <__assert_fail@plt+0x310c>
   140e0:	mov	sp, fp
   140e4:	pop	{fp, pc}
   140e8:	push	{fp, lr}
   140ec:	mov	fp, sp
   140f0:	sub	sp, sp, #24
   140f4:	str	r0, [fp, #-4]
   140f8:	str	r1, [fp, #-8]
   140fc:	str	r2, [sp, #12]
   14100:	str	r3, [sp, #8]
   14104:	ldr	r1, [fp, #-4]
   14108:	ldr	r2, [fp, #-8]
   1410c:	ldr	r3, [sp, #12]
   14110:	ldr	r0, [sp, #8]
   14114:	movw	ip, #0
   14118:	str	r0, [sp, #4]
   1411c:	mov	r0, ip
   14120:	ldr	ip, [sp, #4]
   14124:	str	ip, [sp]
   14128:	bl	14040 <__assert_fail@plt+0x314c>
   1412c:	mov	sp, fp
   14130:	pop	{fp, pc}
   14134:	push	{fp, lr}
   14138:	mov	fp, sp
   1413c:	sub	sp, sp, #16
   14140:	str	r0, [fp, #-4]
   14144:	str	r1, [sp, #8]
   14148:	str	r2, [sp, #4]
   1414c:	ldr	r0, [fp, #-4]
   14150:	ldr	r1, [sp, #8]
   14154:	ldr	r2, [sp, #4]
   14158:	movw	r3, #45288	; 0xb0e8
   1415c:	movt	r3, #2
   14160:	bl	13a04 <__assert_fail@plt+0x2b10>
   14164:	mov	sp, fp
   14168:	pop	{fp, pc}
   1416c:	push	{fp, lr}
   14170:	mov	fp, sp
   14174:	sub	sp, sp, #8
   14178:	str	r0, [sp, #4]
   1417c:	str	r1, [sp]
   14180:	ldr	r1, [sp, #4]
   14184:	ldr	r2, [sp]
   14188:	movw	r0, #0
   1418c:	bl	14134 <__assert_fail@plt+0x3240>
   14190:	mov	sp, fp
   14194:	pop	{fp, pc}
   14198:	push	{fp, lr}
   1419c:	mov	fp, sp
   141a0:	sub	sp, sp, #8
   141a4:	str	r0, [sp, #4]
   141a8:	str	r1, [sp]
   141ac:	ldr	r0, [sp, #4]
   141b0:	ldr	r1, [sp]
   141b4:	mvn	r2, #0
   141b8:	bl	14134 <__assert_fail@plt+0x3240>
   141bc:	mov	sp, fp
   141c0:	pop	{fp, pc}
   141c4:	push	{fp, lr}
   141c8:	mov	fp, sp
   141cc:	sub	sp, sp, #8
   141d0:	str	r0, [sp, #4]
   141d4:	ldr	r1, [sp, #4]
   141d8:	movw	r0, #0
   141dc:	bl	14198 <__assert_fail@plt+0x32a4>
   141e0:	mov	sp, fp
   141e4:	pop	{fp, pc}
   141e8:	push	{fp, lr}
   141ec:	mov	fp, sp
   141f0:	sub	sp, sp, #24
   141f4:	str	r0, [fp, #-8]
   141f8:	str	r1, [sp, #12]
   141fc:	ldr	r0, [fp, #-8]
   14200:	bl	10e1c <gettext@plt>
   14204:	str	r0, [sp, #8]
   14208:	ldr	r0, [sp, #8]
   1420c:	ldr	r1, [fp, #-8]
   14210:	cmp	r0, r1
   14214:	beq	14224 <__assert_fail@plt+0x3330>
   14218:	ldr	r0, [sp, #8]
   1421c:	str	r0, [fp, #-4]
   14220:	b	142f0 <__assert_fail@plt+0x33fc>
   14224:	bl	194dc <__assert_fail@plt+0x85e8>
   14228:	str	r0, [sp, #4]
   1422c:	ldr	r0, [sp, #4]
   14230:	movw	r1, #42012	; 0xa41c
   14234:	movt	r1, #1
   14238:	bl	190e4 <__assert_fail@plt+0x81f0>
   1423c:	cmp	r0, #0
   14240:	bne	14278 <__assert_fail@plt+0x3384>
   14244:	ldr	r0, [fp, #-8]
   14248:	ldrb	r0, [r0]
   1424c:	cmp	r0, #96	; 0x60
   14250:	movw	r0, #0
   14254:	moveq	r0, #1
   14258:	tst	r0, #1
   1425c:	movw	r0, #42022	; 0xa426
   14260:	movt	r0, #1
   14264:	movw	r1, #42018	; 0xa422
   14268:	movt	r1, #1
   1426c:	movne	r0, r1
   14270:	str	r0, [fp, #-4]
   14274:	b	142f0 <__assert_fail@plt+0x33fc>
   14278:	ldr	r0, [sp, #4]
   1427c:	movw	r1, #42026	; 0xa42a
   14280:	movt	r1, #1
   14284:	bl	190e4 <__assert_fail@plt+0x81f0>
   14288:	cmp	r0, #0
   1428c:	bne	142c4 <__assert_fail@plt+0x33d0>
   14290:	ldr	r0, [fp, #-8]
   14294:	ldrb	r0, [r0]
   14298:	cmp	r0, #96	; 0x60
   1429c:	movw	r0, #0
   142a0:	moveq	r0, #1
   142a4:	tst	r0, #1
   142a8:	movw	r0, #42038	; 0xa436
   142ac:	movt	r0, #1
   142b0:	movw	r1, #42034	; 0xa432
   142b4:	movt	r1, #1
   142b8:	movne	r0, r1
   142bc:	str	r0, [fp, #-4]
   142c0:	b	142f0 <__assert_fail@plt+0x33fc>
   142c4:	ldr	r0, [sp, #12]
   142c8:	cmp	r0, #9
   142cc:	movw	r0, #0
   142d0:	moveq	r0, #1
   142d4:	tst	r0, #1
   142d8:	movw	r0, #42010	; 0xa41a
   142dc:	movt	r0, #1
   142e0:	movw	r1, #42006	; 0xa416
   142e4:	movt	r1, #1
   142e8:	movne	r0, r1
   142ec:	str	r0, [fp, #-4]
   142f0:	ldr	r0, [fp, #-4]
   142f4:	mov	sp, fp
   142f8:	pop	{fp, pc}
   142fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14300:	add	fp, sp, #28
   14304:	sub	sp, sp, #196	; 0xc4
   14308:	ldr	ip, [fp, #12]
   1430c:	ldr	lr, [fp, #8]
   14310:	str	r0, [fp, #-32]	; 0xffffffe0
   14314:	str	r1, [fp, #-36]	; 0xffffffdc
   14318:	str	r2, [fp, #-40]	; 0xffffffd8
   1431c:	str	r3, [fp, #-44]	; 0xffffffd4
   14320:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14324:	movw	r1, #0
   14328:	cmp	r0, r1
   1432c:	beq	14360 <__assert_fail@plt+0x346c>
   14330:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14334:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14338:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1433c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14340:	movw	ip, #42128	; 0xa490
   14344:	movt	ip, #1
   14348:	str	r1, [fp, #-48]	; 0xffffffd0
   1434c:	mov	r1, ip
   14350:	ldr	ip, [fp, #-48]	; 0xffffffd0
   14354:	str	ip, [sp]
   14358:	bl	10e34 <fprintf@plt>
   1435c:	b	14378 <__assert_fail@plt+0x3484>
   14360:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14364:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14368:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1436c:	movw	r1, #42140	; 0xa49c
   14370:	movt	r1, #1
   14374:	bl	10e34 <fprintf@plt>
   14378:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1437c:	movw	r1, #42147	; 0xa4a3
   14380:	movt	r1, #1
   14384:	str	r0, [fp, #-52]	; 0xffffffcc
   14388:	mov	r0, r1
   1438c:	bl	10e1c <gettext@plt>
   14390:	movw	r1, #42843	; 0xa75b
   14394:	movt	r1, #1
   14398:	movw	r3, #2022	; 0x7e6
   1439c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   143a0:	str	r0, [fp, #-56]	; 0xffffffc8
   143a4:	mov	r0, r2
   143a8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   143ac:	bl	10e34 <fprintf@plt>
   143b0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   143b4:	movw	r2, #41745	; 0xa311
   143b8:	movt	r2, #1
   143bc:	str	r0, [fp, #-60]	; 0xffffffc4
   143c0:	mov	r0, r2
   143c4:	str	r2, [fp, #-64]	; 0xffffffc0
   143c8:	bl	10ed0 <fputs@plt>
   143cc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   143d0:	movw	r2, #42151	; 0xa4a7
   143d4:	movt	r2, #1
   143d8:	str	r0, [fp, #-68]	; 0xffffffbc
   143dc:	mov	r0, r2
   143e0:	str	r1, [fp, #-72]	; 0xffffffb8
   143e4:	bl	10e1c <gettext@plt>
   143e8:	movw	r2, #42322	; 0xa552
   143ec:	movt	r2, #1
   143f0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   143f4:	str	r0, [fp, #-76]	; 0xffffffb4
   143f8:	mov	r0, r1
   143fc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   14400:	bl	10e34 <fprintf@plt>
   14404:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14408:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1440c:	str	r0, [fp, #-80]	; 0xffffffb0
   14410:	mov	r0, r2
   14414:	bl	10ed0 <fputs@plt>
   14418:	ldr	r1, [fp, #12]
   1441c:	cmp	r1, #9
   14420:	str	r1, [fp, #-84]	; 0xffffffac
   14424:	bhi	14840 <__assert_fail@plt+0x394c>
   14428:	add	r0, pc, #8
   1442c:	ldr	r1, [fp, #-84]	; 0xffffffac
   14430:	ldr	r0, [r0, r1, lsl #2]
   14434:	mov	pc, r0
   14438:	andeq	r4, r1, r0, ror #8
   1443c:	andeq	r4, r1, r4, ror #8
   14440:	muleq	r1, ip, r4
   14444:	ldrdeq	r4, [r1], -ip
   14448:	andeq	r4, r1, r4, lsr r5
   1444c:	muleq	r1, r8, r5
   14450:	andeq	r4, r1, r8, lsl #12
   14454:	andeq	r4, r1, r4, lsl #13
   14458:	andeq	r4, r1, ip, lsl #14
   1445c:	andeq	r4, r1, r0, lsr #15
   14460:	b	148dc <__assert_fail@plt+0x39e8>
   14464:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14468:	movw	r1, #42356	; 0xa574
   1446c:	movt	r1, #1
   14470:	str	r0, [fp, #-88]	; 0xffffffa8
   14474:	mov	r0, r1
   14478:	bl	10e1c <gettext@plt>
   1447c:	ldr	r1, [fp, #8]
   14480:	ldr	r2, [r1]
   14484:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14488:	str	r0, [fp, #-92]	; 0xffffffa4
   1448c:	mov	r0, r1
   14490:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14494:	bl	10e34 <fprintf@plt>
   14498:	b	148dc <__assert_fail@plt+0x39e8>
   1449c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   144a0:	movw	r1, #42372	; 0xa584
   144a4:	movt	r1, #1
   144a8:	str	r0, [fp, #-96]	; 0xffffffa0
   144ac:	mov	r0, r1
   144b0:	bl	10e1c <gettext@plt>
   144b4:	ldr	r1, [fp, #8]
   144b8:	ldr	r2, [r1]
   144bc:	ldr	r1, [fp, #8]
   144c0:	ldr	r3, [r1, #4]
   144c4:	ldr	r1, [fp, #-96]	; 0xffffffa0
   144c8:	str	r0, [fp, #-100]	; 0xffffff9c
   144cc:	mov	r0, r1
   144d0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   144d4:	bl	10e34 <fprintf@plt>
   144d8:	b	148dc <__assert_fail@plt+0x39e8>
   144dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   144e0:	movw	r1, #42395	; 0xa59b
   144e4:	movt	r1, #1
   144e8:	str	r0, [fp, #-104]	; 0xffffff98
   144ec:	mov	r0, r1
   144f0:	bl	10e1c <gettext@plt>
   144f4:	ldr	r1, [fp, #8]
   144f8:	ldr	r2, [r1]
   144fc:	ldr	r1, [fp, #8]
   14500:	ldr	r3, [r1, #4]
   14504:	ldr	r1, [fp, #8]
   14508:	ldr	r1, [r1, #8]
   1450c:	ldr	ip, [fp, #-104]	; 0xffffff98
   14510:	str	r0, [fp, #-108]	; 0xffffff94
   14514:	mov	r0, ip
   14518:	ldr	lr, [fp, #-108]	; 0xffffff94
   1451c:	str	r1, [sp, #112]	; 0x70
   14520:	mov	r1, lr
   14524:	ldr	r4, [sp, #112]	; 0x70
   14528:	str	r4, [sp]
   1452c:	bl	10e34 <fprintf@plt>
   14530:	b	148dc <__assert_fail@plt+0x39e8>
   14534:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14538:	movw	r1, #42423	; 0xa5b7
   1453c:	movt	r1, #1
   14540:	str	r0, [sp, #108]	; 0x6c
   14544:	mov	r0, r1
   14548:	bl	10e1c <gettext@plt>
   1454c:	ldr	r1, [fp, #8]
   14550:	ldr	r2, [r1]
   14554:	ldr	r1, [fp, #8]
   14558:	ldr	r3, [r1, #4]
   1455c:	ldr	r1, [fp, #8]
   14560:	ldr	r1, [r1, #8]
   14564:	ldr	ip, [fp, #8]
   14568:	ldr	ip, [ip, #12]
   1456c:	ldr	lr, [sp, #108]	; 0x6c
   14570:	str	r0, [sp, #104]	; 0x68
   14574:	mov	r0, lr
   14578:	ldr	r4, [sp, #104]	; 0x68
   1457c:	str	r1, [sp, #100]	; 0x64
   14580:	mov	r1, r4
   14584:	ldr	r5, [sp, #100]	; 0x64
   14588:	str	r5, [sp]
   1458c:	str	ip, [sp, #4]
   14590:	bl	10e34 <fprintf@plt>
   14594:	b	148dc <__assert_fail@plt+0x39e8>
   14598:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1459c:	movw	r1, #42455	; 0xa5d7
   145a0:	movt	r1, #1
   145a4:	str	r0, [sp, #96]	; 0x60
   145a8:	mov	r0, r1
   145ac:	bl	10e1c <gettext@plt>
   145b0:	ldr	r1, [fp, #8]
   145b4:	ldr	r2, [r1]
   145b8:	ldr	r1, [fp, #8]
   145bc:	ldr	r3, [r1, #4]
   145c0:	ldr	r1, [fp, #8]
   145c4:	ldr	r1, [r1, #8]
   145c8:	ldr	ip, [fp, #8]
   145cc:	ldr	ip, [ip, #12]
   145d0:	ldr	lr, [fp, #8]
   145d4:	ldr	lr, [lr, #16]
   145d8:	ldr	r4, [sp, #96]	; 0x60
   145dc:	str	r0, [sp, #92]	; 0x5c
   145e0:	mov	r0, r4
   145e4:	ldr	r5, [sp, #92]	; 0x5c
   145e8:	str	r1, [sp, #88]	; 0x58
   145ec:	mov	r1, r5
   145f0:	ldr	r6, [sp, #88]	; 0x58
   145f4:	str	r6, [sp]
   145f8:	str	ip, [sp, #4]
   145fc:	str	lr, [sp, #8]
   14600:	bl	10e34 <fprintf@plt>
   14604:	b	148dc <__assert_fail@plt+0x39e8>
   14608:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1460c:	movw	r1, #42491	; 0xa5fb
   14610:	movt	r1, #1
   14614:	str	r0, [sp, #84]	; 0x54
   14618:	mov	r0, r1
   1461c:	bl	10e1c <gettext@plt>
   14620:	ldr	r1, [fp, #8]
   14624:	ldr	r2, [r1]
   14628:	ldr	r1, [fp, #8]
   1462c:	ldr	r3, [r1, #4]
   14630:	ldr	r1, [fp, #8]
   14634:	ldr	r1, [r1, #8]
   14638:	ldr	ip, [fp, #8]
   1463c:	ldr	ip, [ip, #12]
   14640:	ldr	lr, [fp, #8]
   14644:	ldr	lr, [lr, #16]
   14648:	ldr	r4, [fp, #8]
   1464c:	ldr	r4, [r4, #20]
   14650:	ldr	r5, [sp, #84]	; 0x54
   14654:	str	r0, [sp, #80]	; 0x50
   14658:	mov	r0, r5
   1465c:	ldr	r6, [sp, #80]	; 0x50
   14660:	str	r1, [sp, #76]	; 0x4c
   14664:	mov	r1, r6
   14668:	ldr	r7, [sp, #76]	; 0x4c
   1466c:	str	r7, [sp]
   14670:	str	ip, [sp, #4]
   14674:	str	lr, [sp, #8]
   14678:	str	r4, [sp, #12]
   1467c:	bl	10e34 <fprintf@plt>
   14680:	b	148dc <__assert_fail@plt+0x39e8>
   14684:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14688:	movw	r1, #42531	; 0xa623
   1468c:	movt	r1, #1
   14690:	str	r0, [sp, #72]	; 0x48
   14694:	mov	r0, r1
   14698:	bl	10e1c <gettext@plt>
   1469c:	ldr	r1, [fp, #8]
   146a0:	ldr	r2, [r1]
   146a4:	ldr	r1, [fp, #8]
   146a8:	ldr	r3, [r1, #4]
   146ac:	ldr	r1, [fp, #8]
   146b0:	ldr	r1, [r1, #8]
   146b4:	ldr	ip, [fp, #8]
   146b8:	ldr	ip, [ip, #12]
   146bc:	ldr	lr, [fp, #8]
   146c0:	ldr	lr, [lr, #16]
   146c4:	ldr	r4, [fp, #8]
   146c8:	ldr	r4, [r4, #20]
   146cc:	ldr	r5, [fp, #8]
   146d0:	ldr	r5, [r5, #24]
   146d4:	ldr	r6, [sp, #72]	; 0x48
   146d8:	str	r0, [sp, #68]	; 0x44
   146dc:	mov	r0, r6
   146e0:	ldr	r7, [sp, #68]	; 0x44
   146e4:	str	r1, [sp, #64]	; 0x40
   146e8:	mov	r1, r7
   146ec:	ldr	r8, [sp, #64]	; 0x40
   146f0:	str	r8, [sp]
   146f4:	str	ip, [sp, #4]
   146f8:	str	lr, [sp, #8]
   146fc:	str	r4, [sp, #12]
   14700:	str	r5, [sp, #16]
   14704:	bl	10e34 <fprintf@plt>
   14708:	b	148dc <__assert_fail@plt+0x39e8>
   1470c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14710:	movw	r1, #42575	; 0xa64f
   14714:	movt	r1, #1
   14718:	str	r0, [sp, #60]	; 0x3c
   1471c:	mov	r0, r1
   14720:	bl	10e1c <gettext@plt>
   14724:	ldr	r1, [fp, #8]
   14728:	ldr	r2, [r1]
   1472c:	ldr	r1, [fp, #8]
   14730:	ldr	r3, [r1, #4]
   14734:	ldr	r1, [fp, #8]
   14738:	ldr	r1, [r1, #8]
   1473c:	ldr	ip, [fp, #8]
   14740:	ldr	ip, [ip, #12]
   14744:	ldr	lr, [fp, #8]
   14748:	ldr	lr, [lr, #16]
   1474c:	ldr	r4, [fp, #8]
   14750:	ldr	r4, [r4, #20]
   14754:	ldr	r5, [fp, #8]
   14758:	ldr	r5, [r5, #24]
   1475c:	ldr	r6, [fp, #8]
   14760:	ldr	r6, [r6, #28]
   14764:	ldr	r7, [sp, #60]	; 0x3c
   14768:	str	r0, [sp, #56]	; 0x38
   1476c:	mov	r0, r7
   14770:	ldr	r8, [sp, #56]	; 0x38
   14774:	str	r1, [sp, #52]	; 0x34
   14778:	mov	r1, r8
   1477c:	ldr	r9, [sp, #52]	; 0x34
   14780:	str	r9, [sp]
   14784:	str	ip, [sp, #4]
   14788:	str	lr, [sp, #8]
   1478c:	str	r4, [sp, #12]
   14790:	str	r5, [sp, #16]
   14794:	str	r6, [sp, #20]
   14798:	bl	10e34 <fprintf@plt>
   1479c:	b	148dc <__assert_fail@plt+0x39e8>
   147a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   147a4:	movw	r1, #42623	; 0xa67f
   147a8:	movt	r1, #1
   147ac:	str	r0, [sp, #48]	; 0x30
   147b0:	mov	r0, r1
   147b4:	bl	10e1c <gettext@plt>
   147b8:	ldr	r1, [fp, #8]
   147bc:	ldr	r2, [r1]
   147c0:	ldr	r1, [fp, #8]
   147c4:	ldr	r3, [r1, #4]
   147c8:	ldr	r1, [fp, #8]
   147cc:	ldr	r1, [r1, #8]
   147d0:	ldr	ip, [fp, #8]
   147d4:	ldr	ip, [ip, #12]
   147d8:	ldr	lr, [fp, #8]
   147dc:	ldr	lr, [lr, #16]
   147e0:	ldr	r4, [fp, #8]
   147e4:	ldr	r4, [r4, #20]
   147e8:	ldr	r5, [fp, #8]
   147ec:	ldr	r5, [r5, #24]
   147f0:	ldr	r6, [fp, #8]
   147f4:	ldr	r6, [r6, #28]
   147f8:	ldr	r7, [fp, #8]
   147fc:	ldr	r7, [r7, #32]
   14800:	ldr	r8, [sp, #48]	; 0x30
   14804:	str	r0, [sp, #44]	; 0x2c
   14808:	mov	r0, r8
   1480c:	ldr	r9, [sp, #44]	; 0x2c
   14810:	str	r1, [sp, #40]	; 0x28
   14814:	mov	r1, r9
   14818:	ldr	sl, [sp, #40]	; 0x28
   1481c:	str	sl, [sp]
   14820:	str	ip, [sp, #4]
   14824:	str	lr, [sp, #8]
   14828:	str	r4, [sp, #12]
   1482c:	str	r5, [sp, #16]
   14830:	str	r6, [sp, #20]
   14834:	str	r7, [sp, #24]
   14838:	bl	10e34 <fprintf@plt>
   1483c:	b	148dc <__assert_fail@plt+0x39e8>
   14840:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14844:	movw	r1, #42675	; 0xa6b3
   14848:	movt	r1, #1
   1484c:	str	r0, [sp, #36]	; 0x24
   14850:	mov	r0, r1
   14854:	bl	10e1c <gettext@plt>
   14858:	ldr	r1, [fp, #8]
   1485c:	ldr	r2, [r1]
   14860:	ldr	r1, [fp, #8]
   14864:	ldr	r3, [r1, #4]
   14868:	ldr	r1, [fp, #8]
   1486c:	ldr	r1, [r1, #8]
   14870:	ldr	ip, [fp, #8]
   14874:	ldr	ip, [ip, #12]
   14878:	ldr	lr, [fp, #8]
   1487c:	ldr	lr, [lr, #16]
   14880:	ldr	r4, [fp, #8]
   14884:	ldr	r4, [r4, #20]
   14888:	ldr	r5, [fp, #8]
   1488c:	ldr	r5, [r5, #24]
   14890:	ldr	r6, [fp, #8]
   14894:	ldr	r6, [r6, #28]
   14898:	ldr	r7, [fp, #8]
   1489c:	ldr	r7, [r7, #32]
   148a0:	ldr	r8, [sp, #36]	; 0x24
   148a4:	str	r0, [sp, #32]
   148a8:	mov	r0, r8
   148ac:	ldr	r9, [sp, #32]
   148b0:	str	r1, [sp, #28]
   148b4:	mov	r1, r9
   148b8:	ldr	sl, [sp, #28]
   148bc:	str	sl, [sp]
   148c0:	str	ip, [sp, #4]
   148c4:	str	lr, [sp, #8]
   148c8:	str	r4, [sp, #12]
   148cc:	str	r5, [sp, #16]
   148d0:	str	r6, [sp, #20]
   148d4:	str	r7, [sp, #24]
   148d8:	bl	10e34 <fprintf@plt>
   148dc:	sub	sp, fp, #28
   148e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148e4:	push	{fp, lr}
   148e8:	mov	fp, sp
   148ec:	sub	sp, sp, #32
   148f0:	ldr	ip, [fp, #8]
   148f4:	str	r0, [fp, #-4]
   148f8:	str	r1, [fp, #-8]
   148fc:	str	r2, [fp, #-12]
   14900:	str	r3, [sp, #16]
   14904:	movw	r0, #0
   14908:	str	r0, [sp, #12]
   1490c:	ldr	r0, [fp, #8]
   14910:	ldr	r1, [sp, #12]
   14914:	add	r0, r0, r1, lsl #2
   14918:	ldr	r0, [r0]
   1491c:	movw	r1, #0
   14920:	cmp	r0, r1
   14924:	beq	1493c <__assert_fail@plt+0x3a48>
   14928:	b	1492c <__assert_fail@plt+0x3a38>
   1492c:	ldr	r0, [sp, #12]
   14930:	add	r0, r0, #1
   14934:	str	r0, [sp, #12]
   14938:	b	1490c <__assert_fail@plt+0x3a18>
   1493c:	ldr	r0, [fp, #-4]
   14940:	ldr	r1, [fp, #-8]
   14944:	ldr	r2, [fp, #-12]
   14948:	ldr	r3, [sp, #16]
   1494c:	ldr	ip, [fp, #8]
   14950:	ldr	lr, [sp, #12]
   14954:	str	ip, [sp]
   14958:	str	lr, [sp, #4]
   1495c:	bl	142fc <__assert_fail@plt+0x3408>
   14960:	mov	sp, fp
   14964:	pop	{fp, pc}
   14968:	push	{fp, lr}
   1496c:	mov	fp, sp
   14970:	sub	sp, sp, #80	; 0x50
   14974:	ldr	ip, [fp, #8]
   14978:	str	ip, [fp, #-4]
   1497c:	str	r0, [fp, #-8]
   14980:	str	r1, [fp, #-12]
   14984:	str	r2, [fp, #-16]
   14988:	str	r3, [fp, #-20]	; 0xffffffec
   1498c:	movw	r0, #0
   14990:	str	r0, [fp, #-24]	; 0xffffffe8
   14994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14998:	cmp	r0, #10
   1499c:	movw	r0, #0
   149a0:	str	r0, [sp, #12]
   149a4:	bcs	149dc <__assert_fail@plt+0x3ae8>
   149a8:	ldr	r0, [fp, #-4]
   149ac:	add	r1, r0, #4
   149b0:	str	r1, [fp, #-4]
   149b4:	ldr	r0, [r0]
   149b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   149bc:	add	r2, sp, #16
   149c0:	add	r1, r2, r1, lsl #2
   149c4:	str	r0, [r1]
   149c8:	movw	r1, #0
   149cc:	cmp	r0, r1
   149d0:	movw	r0, #0
   149d4:	movne	r0, #1
   149d8:	str	r0, [sp, #12]
   149dc:	ldr	r0, [sp, #12]
   149e0:	tst	r0, #1
   149e4:	beq	149fc <__assert_fail@plt+0x3b08>
   149e8:	b	149ec <__assert_fail@plt+0x3af8>
   149ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   149f0:	add	r0, r0, #1
   149f4:	str	r0, [fp, #-24]	; 0xffffffe8
   149f8:	b	14994 <__assert_fail@plt+0x3aa0>
   149fc:	add	r0, sp, #16
   14a00:	ldr	r1, [fp, #-8]
   14a04:	ldr	r2, [fp, #-12]
   14a08:	ldr	r3, [fp, #-16]
   14a0c:	ldr	ip, [fp, #-20]	; 0xffffffec
   14a10:	ldr	lr, [fp, #-24]	; 0xffffffe8
   14a14:	str	r0, [sp, #8]
   14a18:	mov	r0, r1
   14a1c:	mov	r1, r2
   14a20:	mov	r2, r3
   14a24:	mov	r3, ip
   14a28:	ldr	ip, [sp, #8]
   14a2c:	str	ip, [sp]
   14a30:	str	lr, [sp, #4]
   14a34:	bl	142fc <__assert_fail@plt+0x3408>
   14a38:	mov	sp, fp
   14a3c:	pop	{fp, pc}
   14a40:	push	{fp, lr}
   14a44:	mov	fp, sp
   14a48:	sub	sp, sp, #24
   14a4c:	str	r0, [fp, #-4]
   14a50:	str	r1, [fp, #-8]
   14a54:	str	r2, [sp, #12]
   14a58:	str	r3, [sp, #8]
   14a5c:	add	r0, fp, #8
   14a60:	str	r0, [sp, #4]
   14a64:	ldr	r0, [fp, #-4]
   14a68:	ldr	r1, [fp, #-8]
   14a6c:	ldr	r2, [sp, #12]
   14a70:	ldr	r3, [sp, #8]
   14a74:	ldr	ip, [sp, #4]
   14a78:	mov	lr, sp
   14a7c:	str	ip, [lr]
   14a80:	bl	14968 <__assert_fail@plt+0x3a74>
   14a84:	add	r0, sp, #4
   14a88:	mov	sp, fp
   14a8c:	pop	{fp, pc}
   14a90:	push	{fp, lr}
   14a94:	mov	fp, sp
   14a98:	sub	sp, sp, #16
   14a9c:	movw	r0, #45364	; 0xb134
   14aa0:	movt	r0, #2
   14aa4:	ldr	r1, [r0]
   14aa8:	movw	r0, #41745	; 0xa311
   14aac:	movt	r0, #1
   14ab0:	bl	10ed0 <fputs@plt>
   14ab4:	movw	r1, #42735	; 0xa6ef
   14ab8:	movt	r1, #1
   14abc:	str	r0, [fp, #-4]
   14ac0:	mov	r0, r1
   14ac4:	bl	10e1c <gettext@plt>
   14ac8:	movw	r1, #41833	; 0xa369
   14acc:	movt	r1, #1
   14ad0:	bl	10d08 <printf@plt>
   14ad4:	movw	r1, #42755	; 0xa703
   14ad8:	movt	r1, #1
   14adc:	str	r0, [sp, #8]
   14ae0:	mov	r0, r1
   14ae4:	bl	10e1c <gettext@plt>
   14ae8:	movw	r1, #41484	; 0xa20c
   14aec:	movt	r1, #1
   14af0:	movw	r2, #41747	; 0xa313
   14af4:	movt	r2, #1
   14af8:	bl	10d08 <printf@plt>
   14afc:	movw	r1, #42775	; 0xa717
   14b00:	movt	r1, #1
   14b04:	str	r0, [sp, #4]
   14b08:	mov	r0, r1
   14b0c:	bl	10e1c <gettext@plt>
   14b10:	movw	r1, #42814	; 0xa73e
   14b14:	movt	r1, #1
   14b18:	bl	10d08 <printf@plt>
   14b1c:	mov	sp, fp
   14b20:	pop	{fp, pc}
   14b24:	push	{fp, lr}
   14b28:	mov	fp, sp
   14b2c:	sub	sp, sp, #16
   14b30:	str	r0, [fp, #-4]
   14b34:	str	r1, [sp, #8]
   14b38:	str	r2, [sp, #4]
   14b3c:	ldr	r0, [fp, #-4]
   14b40:	ldr	r1, [sp, #8]
   14b44:	ldr	r2, [sp, #4]
   14b48:	bl	14b54 <__assert_fail@plt+0x3c60>
   14b4c:	mov	sp, fp
   14b50:	pop	{fp, pc}
   14b54:	push	{fp, lr}
   14b58:	mov	fp, sp
   14b5c:	sub	sp, sp, #16
   14b60:	str	r0, [fp, #-4]
   14b64:	str	r1, [sp, #8]
   14b68:	str	r2, [sp, #4]
   14b6c:	ldr	r0, [fp, #-4]
   14b70:	ldr	r1, [sp, #8]
   14b74:	ldr	r2, [sp, #4]
   14b78:	bl	17da4 <__assert_fail@plt+0x6eb0>
   14b7c:	str	r0, [sp]
   14b80:	ldr	r0, [sp]
   14b84:	movw	r1, #0
   14b88:	cmp	r0, r1
   14b8c:	bne	14bbc <__assert_fail@plt+0x3cc8>
   14b90:	ldr	r0, [fp, #-4]
   14b94:	movw	r1, #0
   14b98:	cmp	r0, r1
   14b9c:	beq	14bb8 <__assert_fail@plt+0x3cc4>
   14ba0:	ldr	r0, [sp, #8]
   14ba4:	cmp	r0, #0
   14ba8:	beq	14bbc <__assert_fail@plt+0x3cc8>
   14bac:	ldr	r0, [sp, #4]
   14bb0:	cmp	r0, #0
   14bb4:	beq	14bbc <__assert_fail@plt+0x3cc8>
   14bb8:	bl	17900 <__assert_fail@plt+0x6a0c>
   14bbc:	ldr	r0, [sp]
   14bc0:	mov	sp, fp
   14bc4:	pop	{fp, pc}
   14bc8:	push	{fp, lr}
   14bcc:	mov	fp, sp
   14bd0:	sub	sp, sp, #8
   14bd4:	str	r0, [sp, #4]
   14bd8:	ldr	r0, [sp, #4]
   14bdc:	bl	17be0 <__assert_fail@plt+0x6cec>
   14be0:	bl	14bec <__assert_fail@plt+0x3cf8>
   14be4:	mov	sp, fp
   14be8:	pop	{fp, pc}
   14bec:	push	{fp, lr}
   14bf0:	mov	fp, sp
   14bf4:	sub	sp, sp, #8
   14bf8:	str	r0, [sp, #4]
   14bfc:	ldr	r0, [sp, #4]
   14c00:	movw	r1, #0
   14c04:	cmp	r0, r1
   14c08:	bne	14c10 <__assert_fail@plt+0x3d1c>
   14c0c:	bl	17900 <__assert_fail@plt+0x6a0c>
   14c10:	ldr	r0, [sp, #4]
   14c14:	mov	sp, fp
   14c18:	pop	{fp, pc}
   14c1c:	push	{fp, lr}
   14c20:	mov	fp, sp
   14c24:	sub	sp, sp, #8
   14c28:	str	r0, [sp, #4]
   14c2c:	ldr	r0, [sp, #4]
   14c30:	bl	19324 <__assert_fail@plt+0x8430>
   14c34:	bl	14bec <__assert_fail@plt+0x3cf8>
   14c38:	mov	sp, fp
   14c3c:	pop	{fp, pc}
   14c40:	push	{fp, lr}
   14c44:	mov	fp, sp
   14c48:	sub	sp, sp, #8
   14c4c:	str	r0, [sp, #4]
   14c50:	ldr	r0, [sp, #4]
   14c54:	bl	14bc8 <__assert_fail@plt+0x3cd4>
   14c58:	mov	sp, fp
   14c5c:	pop	{fp, pc}
   14c60:	push	{fp, lr}
   14c64:	mov	fp, sp
   14c68:	sub	sp, sp, #16
   14c6c:	str	r0, [fp, #-4]
   14c70:	str	r1, [sp, #8]
   14c74:	ldr	r0, [fp, #-4]
   14c78:	ldr	r1, [sp, #8]
   14c7c:	bl	17d00 <__assert_fail@plt+0x6e0c>
   14c80:	str	r0, [sp, #4]
   14c84:	ldr	r0, [sp, #4]
   14c88:	movw	r1, #0
   14c8c:	cmp	r0, r1
   14c90:	bne	14cb4 <__assert_fail@plt+0x3dc0>
   14c94:	ldr	r0, [fp, #-4]
   14c98:	movw	r1, #0
   14c9c:	cmp	r0, r1
   14ca0:	beq	14cb0 <__assert_fail@plt+0x3dbc>
   14ca4:	ldr	r0, [sp, #8]
   14ca8:	cmp	r0, #0
   14cac:	beq	14cb4 <__assert_fail@plt+0x3dc0>
   14cb0:	bl	17900 <__assert_fail@plt+0x6a0c>
   14cb4:	ldr	r0, [sp, #4]
   14cb8:	mov	sp, fp
   14cbc:	pop	{fp, pc}
   14cc0:	push	{fp, lr}
   14cc4:	mov	fp, sp
   14cc8:	sub	sp, sp, #8
   14ccc:	str	r0, [sp, #4]
   14cd0:	str	r1, [sp]
   14cd4:	ldr	r0, [sp, #4]
   14cd8:	ldr	r1, [sp]
   14cdc:	bl	19364 <__assert_fail@plt+0x8470>
   14ce0:	bl	14bec <__assert_fail@plt+0x3cf8>
   14ce4:	mov	sp, fp
   14ce8:	pop	{fp, pc}
   14cec:	push	{fp, lr}
   14cf0:	mov	fp, sp
   14cf4:	sub	sp, sp, #16
   14cf8:	str	r0, [fp, #-4]
   14cfc:	str	r1, [sp, #8]
   14d00:	str	r2, [sp, #4]
   14d04:	ldr	r0, [fp, #-4]
   14d08:	ldr	r1, [sp, #8]
   14d0c:	ldr	r2, [sp, #4]
   14d10:	bl	1945c <__assert_fail@plt+0x8568>
   14d14:	bl	14bec <__assert_fail@plt+0x3cf8>
   14d18:	mov	sp, fp
   14d1c:	pop	{fp, pc}
   14d20:	push	{fp, lr}
   14d24:	mov	fp, sp
   14d28:	sub	sp, sp, #8
   14d2c:	str	r0, [sp, #4]
   14d30:	str	r1, [sp]
   14d34:	ldr	r1, [sp, #4]
   14d38:	ldr	r2, [sp]
   14d3c:	movw	r0, #0
   14d40:	bl	14b54 <__assert_fail@plt+0x3c60>
   14d44:	mov	sp, fp
   14d48:	pop	{fp, pc}
   14d4c:	push	{fp, lr}
   14d50:	mov	fp, sp
   14d54:	sub	sp, sp, #8
   14d58:	str	r0, [sp, #4]
   14d5c:	str	r1, [sp]
   14d60:	ldr	r1, [sp, #4]
   14d64:	ldr	r2, [sp]
   14d68:	movw	r0, #0
   14d6c:	bl	14cec <__assert_fail@plt+0x3df8>
   14d70:	mov	sp, fp
   14d74:	pop	{fp, pc}
   14d78:	push	{fp, lr}
   14d7c:	mov	fp, sp
   14d80:	sub	sp, sp, #8
   14d84:	str	r0, [sp, #4]
   14d88:	str	r1, [sp]
   14d8c:	ldr	r0, [sp, #4]
   14d90:	ldr	r1, [sp]
   14d94:	movw	r2, #1
   14d98:	bl	14da4 <__assert_fail@plt+0x3eb0>
   14d9c:	mov	sp, fp
   14da0:	pop	{fp, pc}
   14da4:	push	{fp, lr}
   14da8:	mov	fp, sp
   14dac:	sub	sp, sp, #16
   14db0:	str	r0, [fp, #-4]
   14db4:	str	r1, [sp, #8]
   14db8:	str	r2, [sp, #4]
   14dbc:	ldr	r0, [sp, #8]
   14dc0:	ldr	r0, [r0]
   14dc4:	str	r0, [sp]
   14dc8:	ldr	r0, [fp, #-4]
   14dcc:	movw	r1, #0
   14dd0:	cmp	r0, r1
   14dd4:	bne	14e20 <__assert_fail@plt+0x3f2c>
   14dd8:	ldr	r0, [sp]
   14ddc:	cmp	r0, #0
   14de0:	bne	14e1c <__assert_fail@plt+0x3f28>
   14de4:	ldr	r0, [sp, #4]
   14de8:	movw	r1, #64	; 0x40
   14dec:	udiv	r0, r1, r0
   14df0:	str	r0, [sp]
   14df4:	ldr	r0, [sp]
   14df8:	cmp	r0, #0
   14dfc:	movw	r0, #0
   14e00:	movne	r0, #1
   14e04:	mvn	r1, #0
   14e08:	eor	r0, r0, r1
   14e0c:	and	r0, r0, #1
   14e10:	ldr	r1, [sp]
   14e14:	add	r0, r1, r0
   14e18:	str	r0, [sp]
   14e1c:	b	14e50 <__assert_fail@plt+0x3f5c>
   14e20:	ldr	r0, [sp]
   14e24:	ldr	r1, [sp]
   14e28:	lsr	r1, r1, #1
   14e2c:	add	r1, r1, #1
   14e30:	adds	r0, r0, r1
   14e34:	mov	r1, #0
   14e38:	adc	r1, r1, #0
   14e3c:	str	r0, [sp]
   14e40:	tst	r1, #1
   14e44:	beq	14e4c <__assert_fail@plt+0x3f58>
   14e48:	bl	17900 <__assert_fail@plt+0x6a0c>
   14e4c:	b	14e50 <__assert_fail@plt+0x3f5c>
   14e50:	ldr	r0, [fp, #-4]
   14e54:	ldr	r1, [sp]
   14e58:	ldr	r2, [sp, #4]
   14e5c:	bl	14b54 <__assert_fail@plt+0x3c60>
   14e60:	str	r0, [fp, #-4]
   14e64:	ldr	r0, [sp]
   14e68:	ldr	r1, [sp, #8]
   14e6c:	str	r0, [r1]
   14e70:	ldr	r0, [fp, #-4]
   14e74:	mov	sp, fp
   14e78:	pop	{fp, pc}
   14e7c:	push	{fp, lr}
   14e80:	mov	fp, sp
   14e84:	sub	sp, sp, #216	; 0xd8
   14e88:	ldr	ip, [fp, #8]
   14e8c:	str	r0, [fp, #-4]
   14e90:	str	r1, [fp, #-8]
   14e94:	str	r2, [fp, #-12]
   14e98:	str	r3, [fp, #-16]
   14e9c:	ldr	r0, [fp, #-8]
   14ea0:	ldr	r0, [r0]
   14ea4:	str	r0, [fp, #-20]	; 0xffffffec
   14ea8:	ldr	r0, [fp, #-20]	; 0xffffffec
   14eac:	ldr	r1, [fp, #-20]	; 0xffffffec
   14eb0:	asr	r1, r1, #1
   14eb4:	add	r1, r0, r1
   14eb8:	mov	r2, #1
   14ebc:	cmp	r1, r0
   14ec0:	movwvc	r2, #0
   14ec4:	str	r1, [fp, #-24]	; 0xffffffe8
   14ec8:	tst	r2, #1
   14ecc:	beq	14ed8 <__assert_fail@plt+0x3fe4>
   14ed0:	ldr	r0, [pc, #4036]	; 15e9c <__assert_fail@plt+0x4fa8>
   14ed4:	str	r0, [fp, #-24]	; 0xffffffe8
   14ed8:	ldr	r0, [fp, #-16]
   14edc:	movw	r1, #0
   14ee0:	cmp	r1, r0
   14ee4:	bgt	14f00 <__assert_fail@plt+0x400c>
   14ee8:	ldr	r0, [fp, #-16]
   14eec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14ef0:	cmp	r0, r1
   14ef4:	bge	14f00 <__assert_fail@plt+0x400c>
   14ef8:	ldr	r0, [fp, #-16]
   14efc:	str	r0, [fp, #-24]	; 0xffffffe8
   14f00:	b	152d8 <__assert_fail@plt+0x43e4>
   14f04:	b	14f08 <__assert_fail@plt+0x4014>
   14f08:	ldr	r0, [fp, #8]
   14f0c:	cmp	r0, #0
   14f10:	bge	15024 <__assert_fail@plt+0x4130>
   14f14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f18:	cmp	r0, #0
   14f1c:	bge	14fa8 <__assert_fail@plt+0x40b4>
   14f20:	b	14f24 <__assert_fail@plt+0x4030>
   14f24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f28:	ldr	r1, [fp, #8]
   14f2c:	movw	r2, #127	; 0x7f
   14f30:	sdiv	r1, r2, r1
   14f34:	cmp	r0, r1
   14f38:	blt	150c4 <__assert_fail@plt+0x41d0>
   14f3c:	b	150dc <__assert_fail@plt+0x41e8>
   14f40:	b	14f44 <__assert_fail@plt+0x4050>
   14f44:	ldr	r0, [pc, #4084]	; 15f40 <__assert_fail@plt+0x504c>
   14f48:	ldr	r1, [fp, #8]
   14f4c:	cmp	r1, r0
   14f50:	blt	14f68 <__assert_fail@plt+0x4074>
   14f54:	b	14f74 <__assert_fail@plt+0x4080>
   14f58:	ldr	r0, [fp, #8]
   14f5c:	movw	r1, #0
   14f60:	cmp	r1, r0
   14f64:	bge	14f74 <__assert_fail@plt+0x4080>
   14f68:	movw	r0, #0
   14f6c:	str	r0, [fp, #-36]	; 0xffffffdc
   14f70:	b	14f8c <__assert_fail@plt+0x4098>
   14f74:	ldr	r0, [fp, #8]
   14f78:	movw	r1, #0
   14f7c:	sub	r0, r1, r0
   14f80:	movw	r1, #127	; 0x7f
   14f84:	sdiv	r0, r1, r0
   14f88:	str	r0, [fp, #-36]	; 0xffffffdc
   14f8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14f90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14f94:	mvn	r2, #0
   14f98:	sub	r1, r2, r1
   14f9c:	cmp	r0, r1
   14fa0:	ble	150c4 <__assert_fail@plt+0x41d0>
   14fa4:	b	150dc <__assert_fail@plt+0x41e8>
   14fa8:	b	14fac <__assert_fail@plt+0x40b8>
   14fac:	b	15008 <__assert_fail@plt+0x4114>
   14fb0:	b	15008 <__assert_fail@plt+0x4114>
   14fb4:	ldr	r0, [fp, #8]
   14fb8:	cmn	r0, #1
   14fbc:	bne	15008 <__assert_fail@plt+0x4114>
   14fc0:	b	14fc4 <__assert_fail@plt+0x40d0>
   14fc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14fc8:	mvn	r1, #127	; 0x7f
   14fcc:	add	r0, r0, r1
   14fd0:	movw	r1, #0
   14fd4:	cmp	r1, r0
   14fd8:	blt	150c4 <__assert_fail@plt+0x41d0>
   14fdc:	b	150dc <__assert_fail@plt+0x41e8>
   14fe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14fe4:	movw	r1, #0
   14fe8:	cmp	r1, r0
   14fec:	bge	150dc <__assert_fail@plt+0x41e8>
   14ff0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ff4:	sub	r0, r0, #1
   14ff8:	movw	r1, #127	; 0x7f
   14ffc:	cmp	r1, r0
   15000:	blt	150c4 <__assert_fail@plt+0x41d0>
   15004:	b	150dc <__assert_fail@plt+0x41e8>
   15008:	ldr	r0, [fp, #8]
   1500c:	mvn	r1, #127	; 0x7f
   15010:	sdiv	r0, r1, r0
   15014:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15018:	cmp	r0, r1
   1501c:	blt	150c4 <__assert_fail@plt+0x41d0>
   15020:	b	150dc <__assert_fail@plt+0x41e8>
   15024:	ldr	r0, [fp, #8]
   15028:	cmp	r0, #0
   1502c:	bne	15034 <__assert_fail@plt+0x4140>
   15030:	b	150dc <__assert_fail@plt+0x41e8>
   15034:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15038:	cmp	r0, #0
   1503c:	bge	150ac <__assert_fail@plt+0x41b8>
   15040:	b	15044 <__assert_fail@plt+0x4150>
   15044:	b	15090 <__assert_fail@plt+0x419c>
   15048:	b	15090 <__assert_fail@plt+0x419c>
   1504c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15050:	cmn	r0, #1
   15054:	bne	15090 <__assert_fail@plt+0x419c>
   15058:	b	1505c <__assert_fail@plt+0x4168>
   1505c:	ldr	r0, [fp, #8]
   15060:	mvn	r1, #127	; 0x7f
   15064:	add	r0, r0, r1
   15068:	movw	r1, #0
   1506c:	cmp	r1, r0
   15070:	blt	150c4 <__assert_fail@plt+0x41d0>
   15074:	b	150dc <__assert_fail@plt+0x41e8>
   15078:	ldr	r0, [fp, #8]
   1507c:	sub	r0, r0, #1
   15080:	movw	r1, #127	; 0x7f
   15084:	cmp	r1, r0
   15088:	blt	150c4 <__assert_fail@plt+0x41d0>
   1508c:	b	150dc <__assert_fail@plt+0x41e8>
   15090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15094:	mvn	r1, #127	; 0x7f
   15098:	sdiv	r0, r1, r0
   1509c:	ldr	r1, [fp, #8]
   150a0:	cmp	r0, r1
   150a4:	blt	150c4 <__assert_fail@plt+0x41d0>
   150a8:	b	150dc <__assert_fail@plt+0x41e8>
   150ac:	ldr	r0, [fp, #8]
   150b0:	movw	r1, #127	; 0x7f
   150b4:	sdiv	r0, r1, r0
   150b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   150bc:	cmp	r0, r1
   150c0:	bge	150dc <__assert_fail@plt+0x41e8>
   150c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   150c8:	ldr	r1, [fp, #8]
   150cc:	mul	r0, r0, r1
   150d0:	sxtb	r0, r0
   150d4:	str	r0, [fp, #-28]	; 0xffffffe4
   150d8:	b	162a0 <__assert_fail@plt+0x53ac>
   150dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   150e0:	ldr	r1, [fp, #8]
   150e4:	mul	r0, r0, r1
   150e8:	sxtb	r0, r0
   150ec:	str	r0, [fp, #-28]	; 0xffffffe4
   150f0:	b	162ac <__assert_fail@plt+0x53b8>
   150f4:	ldr	r0, [fp, #8]
   150f8:	cmp	r0, #0
   150fc:	bge	1520c <__assert_fail@plt+0x4318>
   15100:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15104:	cmp	r0, #0
   15108:	bge	15194 <__assert_fail@plt+0x42a0>
   1510c:	b	15110 <__assert_fail@plt+0x421c>
   15110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15114:	ldr	r1, [fp, #8]
   15118:	movw	r2, #255	; 0xff
   1511c:	sdiv	r1, r2, r1
   15120:	cmp	r0, r1
   15124:	blt	152a8 <__assert_fail@plt+0x43b4>
   15128:	b	152c0 <__assert_fail@plt+0x43cc>
   1512c:	b	15130 <__assert_fail@plt+0x423c>
   15130:	ldr	r0, [pc, #3592]	; 15f40 <__assert_fail@plt+0x504c>
   15134:	ldr	r1, [fp, #8]
   15138:	cmp	r1, r0
   1513c:	blt	15154 <__assert_fail@plt+0x4260>
   15140:	b	15160 <__assert_fail@plt+0x426c>
   15144:	ldr	r0, [fp, #8]
   15148:	movw	r1, #0
   1514c:	cmp	r1, r0
   15150:	bge	15160 <__assert_fail@plt+0x426c>
   15154:	movw	r0, #0
   15158:	str	r0, [fp, #-40]	; 0xffffffd8
   1515c:	b	15178 <__assert_fail@plt+0x4284>
   15160:	ldr	r0, [fp, #8]
   15164:	movw	r1, #0
   15168:	sub	r0, r1, r0
   1516c:	movw	r1, #255	; 0xff
   15170:	sdiv	r0, r1, r0
   15174:	str	r0, [fp, #-40]	; 0xffffffd8
   15178:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1517c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15180:	mvn	r2, #0
   15184:	sub	r1, r2, r1
   15188:	cmp	r0, r1
   1518c:	ble	152a8 <__assert_fail@plt+0x43b4>
   15190:	b	152c0 <__assert_fail@plt+0x43cc>
   15194:	b	15198 <__assert_fail@plt+0x42a4>
   15198:	b	151f0 <__assert_fail@plt+0x42fc>
   1519c:	b	151f0 <__assert_fail@plt+0x42fc>
   151a0:	ldr	r0, [fp, #8]
   151a4:	cmn	r0, #1
   151a8:	bne	151f0 <__assert_fail@plt+0x42fc>
   151ac:	b	151b0 <__assert_fail@plt+0x42bc>
   151b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151b4:	add	r0, r0, #0
   151b8:	movw	r1, #0
   151bc:	cmp	r1, r0
   151c0:	blt	152a8 <__assert_fail@plt+0x43b4>
   151c4:	b	152c0 <__assert_fail@plt+0x43cc>
   151c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151cc:	movw	r1, #0
   151d0:	cmp	r1, r0
   151d4:	bge	152c0 <__assert_fail@plt+0x43cc>
   151d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151dc:	sub	r0, r0, #1
   151e0:	mvn	r1, #0
   151e4:	cmp	r1, r0
   151e8:	blt	152a8 <__assert_fail@plt+0x43b4>
   151ec:	b	152c0 <__assert_fail@plt+0x43cc>
   151f0:	ldr	r0, [fp, #8]
   151f4:	movw	r1, #0
   151f8:	sdiv	r0, r1, r0
   151fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15200:	cmp	r0, r1
   15204:	blt	152a8 <__assert_fail@plt+0x43b4>
   15208:	b	152c0 <__assert_fail@plt+0x43cc>
   1520c:	ldr	r0, [fp, #8]
   15210:	cmp	r0, #0
   15214:	bne	1521c <__assert_fail@plt+0x4328>
   15218:	b	152c0 <__assert_fail@plt+0x43cc>
   1521c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15220:	cmp	r0, #0
   15224:	bge	15290 <__assert_fail@plt+0x439c>
   15228:	b	1522c <__assert_fail@plt+0x4338>
   1522c:	b	15274 <__assert_fail@plt+0x4380>
   15230:	b	15274 <__assert_fail@plt+0x4380>
   15234:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15238:	cmn	r0, #1
   1523c:	bne	15274 <__assert_fail@plt+0x4380>
   15240:	b	15244 <__assert_fail@plt+0x4350>
   15244:	ldr	r0, [fp, #8]
   15248:	add	r0, r0, #0
   1524c:	movw	r1, #0
   15250:	cmp	r1, r0
   15254:	blt	152a8 <__assert_fail@plt+0x43b4>
   15258:	b	152c0 <__assert_fail@plt+0x43cc>
   1525c:	ldr	r0, [fp, #8]
   15260:	sub	r0, r0, #1
   15264:	mvn	r1, #0
   15268:	cmp	r1, r0
   1526c:	blt	152a8 <__assert_fail@plt+0x43b4>
   15270:	b	152c0 <__assert_fail@plt+0x43cc>
   15274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15278:	movw	r1, #0
   1527c:	sdiv	r0, r1, r0
   15280:	ldr	r1, [fp, #8]
   15284:	cmp	r0, r1
   15288:	blt	152a8 <__assert_fail@plt+0x43b4>
   1528c:	b	152c0 <__assert_fail@plt+0x43cc>
   15290:	ldr	r0, [fp, #8]
   15294:	movw	r1, #255	; 0xff
   15298:	sdiv	r0, r1, r0
   1529c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   152a0:	cmp	r0, r1
   152a4:	bge	152c0 <__assert_fail@plt+0x43cc>
   152a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152ac:	ldr	r1, [fp, #8]
   152b0:	mul	r0, r0, r1
   152b4:	and	r0, r0, #255	; 0xff
   152b8:	str	r0, [fp, #-28]	; 0xffffffe4
   152bc:	b	162a0 <__assert_fail@plt+0x53ac>
   152c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152c4:	ldr	r1, [fp, #8]
   152c8:	mul	r0, r0, r1
   152cc:	and	r0, r0, #255	; 0xff
   152d0:	str	r0, [fp, #-28]	; 0xffffffe4
   152d4:	b	162ac <__assert_fail@plt+0x53b8>
   152d8:	b	156b0 <__assert_fail@plt+0x47bc>
   152dc:	b	152e0 <__assert_fail@plt+0x43ec>
   152e0:	ldr	r0, [fp, #8]
   152e4:	cmp	r0, #0
   152e8:	bge	153fc <__assert_fail@plt+0x4508>
   152ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152f0:	cmp	r0, #0
   152f4:	bge	15380 <__assert_fail@plt+0x448c>
   152f8:	b	152fc <__assert_fail@plt+0x4408>
   152fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15300:	ldr	r1, [fp, #8]
   15304:	movw	r2, #32767	; 0x7fff
   15308:	sdiv	r1, r2, r1
   1530c:	cmp	r0, r1
   15310:	blt	1549c <__assert_fail@plt+0x45a8>
   15314:	b	154b4 <__assert_fail@plt+0x45c0>
   15318:	b	1531c <__assert_fail@plt+0x4428>
   1531c:	ldr	r0, [pc, #3100]	; 15f40 <__assert_fail@plt+0x504c>
   15320:	ldr	r1, [fp, #8]
   15324:	cmp	r1, r0
   15328:	blt	15340 <__assert_fail@plt+0x444c>
   1532c:	b	1534c <__assert_fail@plt+0x4458>
   15330:	ldr	r0, [fp, #8]
   15334:	movw	r1, #0
   15338:	cmp	r1, r0
   1533c:	bge	1534c <__assert_fail@plt+0x4458>
   15340:	movw	r0, #0
   15344:	str	r0, [fp, #-44]	; 0xffffffd4
   15348:	b	15364 <__assert_fail@plt+0x4470>
   1534c:	ldr	r0, [fp, #8]
   15350:	movw	r1, #0
   15354:	sub	r0, r1, r0
   15358:	movw	r1, #32767	; 0x7fff
   1535c:	sdiv	r0, r1, r0
   15360:	str	r0, [fp, #-44]	; 0xffffffd4
   15364:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15368:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1536c:	mvn	r2, #0
   15370:	sub	r1, r2, r1
   15374:	cmp	r0, r1
   15378:	ble	1549c <__assert_fail@plt+0x45a8>
   1537c:	b	154b4 <__assert_fail@plt+0x45c0>
   15380:	b	15384 <__assert_fail@plt+0x4490>
   15384:	b	153e0 <__assert_fail@plt+0x44ec>
   15388:	b	153e0 <__assert_fail@plt+0x44ec>
   1538c:	ldr	r0, [fp, #8]
   15390:	cmn	r0, #1
   15394:	bne	153e0 <__assert_fail@plt+0x44ec>
   15398:	b	1539c <__assert_fail@plt+0x44a8>
   1539c:	ldr	r0, [pc, #4068]	; 16388 <__assert_fail@plt+0x5494>
   153a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   153a4:	add	r0, r1, r0
   153a8:	movw	r1, #0
   153ac:	cmp	r1, r0
   153b0:	blt	1549c <__assert_fail@plt+0x45a8>
   153b4:	b	154b4 <__assert_fail@plt+0x45c0>
   153b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   153bc:	movw	r1, #0
   153c0:	cmp	r1, r0
   153c4:	bge	154b4 <__assert_fail@plt+0x45c0>
   153c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   153cc:	sub	r0, r0, #1
   153d0:	movw	r1, #32767	; 0x7fff
   153d4:	cmp	r1, r0
   153d8:	blt	1549c <__assert_fail@plt+0x45a8>
   153dc:	b	154b4 <__assert_fail@plt+0x45c0>
   153e0:	ldr	r0, [pc, #4000]	; 16388 <__assert_fail@plt+0x5494>
   153e4:	ldr	r1, [fp, #8]
   153e8:	sdiv	r0, r0, r1
   153ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   153f0:	cmp	r0, r1
   153f4:	blt	1549c <__assert_fail@plt+0x45a8>
   153f8:	b	154b4 <__assert_fail@plt+0x45c0>
   153fc:	ldr	r0, [fp, #8]
   15400:	cmp	r0, #0
   15404:	bne	1540c <__assert_fail@plt+0x4518>
   15408:	b	154b4 <__assert_fail@plt+0x45c0>
   1540c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15410:	cmp	r0, #0
   15414:	bge	15484 <__assert_fail@plt+0x4590>
   15418:	b	1541c <__assert_fail@plt+0x4528>
   1541c:	b	15468 <__assert_fail@plt+0x4574>
   15420:	b	15468 <__assert_fail@plt+0x4574>
   15424:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15428:	cmn	r0, #1
   1542c:	bne	15468 <__assert_fail@plt+0x4574>
   15430:	b	15434 <__assert_fail@plt+0x4540>
   15434:	ldr	r0, [pc, #3916]	; 16388 <__assert_fail@plt+0x5494>
   15438:	ldr	r1, [fp, #8]
   1543c:	add	r0, r1, r0
   15440:	movw	r1, #0
   15444:	cmp	r1, r0
   15448:	blt	1549c <__assert_fail@plt+0x45a8>
   1544c:	b	154b4 <__assert_fail@plt+0x45c0>
   15450:	ldr	r0, [fp, #8]
   15454:	sub	r0, r0, #1
   15458:	movw	r1, #32767	; 0x7fff
   1545c:	cmp	r1, r0
   15460:	blt	1549c <__assert_fail@plt+0x45a8>
   15464:	b	154b4 <__assert_fail@plt+0x45c0>
   15468:	ldr	r0, [pc, #3864]	; 16388 <__assert_fail@plt+0x5494>
   1546c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15470:	sdiv	r0, r0, r1
   15474:	ldr	r1, [fp, #8]
   15478:	cmp	r0, r1
   1547c:	blt	1549c <__assert_fail@plt+0x45a8>
   15480:	b	154b4 <__assert_fail@plt+0x45c0>
   15484:	ldr	r0, [fp, #8]
   15488:	movw	r1, #32767	; 0x7fff
   1548c:	sdiv	r0, r1, r0
   15490:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15494:	cmp	r0, r1
   15498:	bge	154b4 <__assert_fail@plt+0x45c0>
   1549c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154a0:	ldr	r1, [fp, #8]
   154a4:	mul	r0, r0, r1
   154a8:	sxth	r0, r0
   154ac:	str	r0, [fp, #-28]	; 0xffffffe4
   154b0:	b	162a0 <__assert_fail@plt+0x53ac>
   154b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154b8:	ldr	r1, [fp, #8]
   154bc:	mul	r0, r0, r1
   154c0:	sxth	r0, r0
   154c4:	str	r0, [fp, #-28]	; 0xffffffe4
   154c8:	b	162ac <__assert_fail@plt+0x53b8>
   154cc:	ldr	r0, [fp, #8]
   154d0:	cmp	r0, #0
   154d4:	bge	155e4 <__assert_fail@plt+0x46f0>
   154d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154dc:	cmp	r0, #0
   154e0:	bge	1556c <__assert_fail@plt+0x4678>
   154e4:	b	154e8 <__assert_fail@plt+0x45f4>
   154e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154ec:	ldr	r1, [fp, #8]
   154f0:	movw	r2, #65535	; 0xffff
   154f4:	sdiv	r1, r2, r1
   154f8:	cmp	r0, r1
   154fc:	blt	15680 <__assert_fail@plt+0x478c>
   15500:	b	15698 <__assert_fail@plt+0x47a4>
   15504:	b	15508 <__assert_fail@plt+0x4614>
   15508:	ldr	r0, [pc, #2608]	; 15f40 <__assert_fail@plt+0x504c>
   1550c:	ldr	r1, [fp, #8]
   15510:	cmp	r1, r0
   15514:	blt	1552c <__assert_fail@plt+0x4638>
   15518:	b	15538 <__assert_fail@plt+0x4644>
   1551c:	ldr	r0, [fp, #8]
   15520:	movw	r1, #0
   15524:	cmp	r1, r0
   15528:	bge	15538 <__assert_fail@plt+0x4644>
   1552c:	movw	r0, #0
   15530:	str	r0, [fp, #-48]	; 0xffffffd0
   15534:	b	15550 <__assert_fail@plt+0x465c>
   15538:	ldr	r0, [fp, #8]
   1553c:	movw	r1, #0
   15540:	sub	r0, r1, r0
   15544:	movw	r1, #65535	; 0xffff
   15548:	sdiv	r0, r1, r0
   1554c:	str	r0, [fp, #-48]	; 0xffffffd0
   15550:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15554:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15558:	mvn	r2, #0
   1555c:	sub	r1, r2, r1
   15560:	cmp	r0, r1
   15564:	ble	15680 <__assert_fail@plt+0x478c>
   15568:	b	15698 <__assert_fail@plt+0x47a4>
   1556c:	b	15570 <__assert_fail@plt+0x467c>
   15570:	b	155c8 <__assert_fail@plt+0x46d4>
   15574:	b	155c8 <__assert_fail@plt+0x46d4>
   15578:	ldr	r0, [fp, #8]
   1557c:	cmn	r0, #1
   15580:	bne	155c8 <__assert_fail@plt+0x46d4>
   15584:	b	15588 <__assert_fail@plt+0x4694>
   15588:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1558c:	add	r0, r0, #0
   15590:	movw	r1, #0
   15594:	cmp	r1, r0
   15598:	blt	15680 <__assert_fail@plt+0x478c>
   1559c:	b	15698 <__assert_fail@plt+0x47a4>
   155a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   155a4:	movw	r1, #0
   155a8:	cmp	r1, r0
   155ac:	bge	15698 <__assert_fail@plt+0x47a4>
   155b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   155b4:	sub	r0, r0, #1
   155b8:	mvn	r1, #0
   155bc:	cmp	r1, r0
   155c0:	blt	15680 <__assert_fail@plt+0x478c>
   155c4:	b	15698 <__assert_fail@plt+0x47a4>
   155c8:	ldr	r0, [fp, #8]
   155cc:	movw	r1, #0
   155d0:	sdiv	r0, r1, r0
   155d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   155d8:	cmp	r0, r1
   155dc:	blt	15680 <__assert_fail@plt+0x478c>
   155e0:	b	15698 <__assert_fail@plt+0x47a4>
   155e4:	ldr	r0, [fp, #8]
   155e8:	cmp	r0, #0
   155ec:	bne	155f4 <__assert_fail@plt+0x4700>
   155f0:	b	15698 <__assert_fail@plt+0x47a4>
   155f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   155f8:	cmp	r0, #0
   155fc:	bge	15668 <__assert_fail@plt+0x4774>
   15600:	b	15604 <__assert_fail@plt+0x4710>
   15604:	b	1564c <__assert_fail@plt+0x4758>
   15608:	b	1564c <__assert_fail@plt+0x4758>
   1560c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15610:	cmn	r0, #1
   15614:	bne	1564c <__assert_fail@plt+0x4758>
   15618:	b	1561c <__assert_fail@plt+0x4728>
   1561c:	ldr	r0, [fp, #8]
   15620:	add	r0, r0, #0
   15624:	movw	r1, #0
   15628:	cmp	r1, r0
   1562c:	blt	15680 <__assert_fail@plt+0x478c>
   15630:	b	15698 <__assert_fail@plt+0x47a4>
   15634:	ldr	r0, [fp, #8]
   15638:	sub	r0, r0, #1
   1563c:	mvn	r1, #0
   15640:	cmp	r1, r0
   15644:	blt	15680 <__assert_fail@plt+0x478c>
   15648:	b	15698 <__assert_fail@plt+0x47a4>
   1564c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15650:	movw	r1, #0
   15654:	sdiv	r0, r1, r0
   15658:	ldr	r1, [fp, #8]
   1565c:	cmp	r0, r1
   15660:	blt	15680 <__assert_fail@plt+0x478c>
   15664:	b	15698 <__assert_fail@plt+0x47a4>
   15668:	ldr	r0, [fp, #8]
   1566c:	movw	r1, #65535	; 0xffff
   15670:	sdiv	r0, r1, r0
   15674:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15678:	cmp	r0, r1
   1567c:	bge	15698 <__assert_fail@plt+0x47a4>
   15680:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15684:	ldr	r1, [fp, #8]
   15688:	mul	r0, r0, r1
   1568c:	uxth	r0, r0
   15690:	str	r0, [fp, #-28]	; 0xffffffe4
   15694:	b	162a0 <__assert_fail@plt+0x53ac>
   15698:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1569c:	ldr	r1, [fp, #8]
   156a0:	mul	r0, r0, r1
   156a4:	uxth	r0, r0
   156a8:	str	r0, [fp, #-28]	; 0xffffffe4
   156ac:	b	162ac <__assert_fail@plt+0x53b8>
   156b0:	b	156b4 <__assert_fail@plt+0x47c0>
   156b4:	b	156b8 <__assert_fail@plt+0x47c4>
   156b8:	ldr	r0, [fp, #8]
   156bc:	cmp	r0, #0
   156c0:	bge	157c4 <__assert_fail@plt+0x48d0>
   156c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156c8:	cmp	r0, #0
   156cc:	bge	15758 <__assert_fail@plt+0x4864>
   156d0:	b	156d4 <__assert_fail@plt+0x47e0>
   156d4:	ldr	r0, [pc, #1984]	; 15e9c <__assert_fail@plt+0x4fa8>
   156d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   156dc:	ldr	r2, [fp, #8]
   156e0:	sdiv	r0, r0, r2
   156e4:	cmp	r1, r0
   156e8:	blt	15854 <__assert_fail@plt+0x4960>
   156ec:	b	15868 <__assert_fail@plt+0x4974>
   156f0:	b	156f4 <__assert_fail@plt+0x4800>
   156f4:	ldr	r0, [pc, #2116]	; 15f40 <__assert_fail@plt+0x504c>
   156f8:	ldr	r1, [fp, #8]
   156fc:	cmp	r1, r0
   15700:	blt	15718 <__assert_fail@plt+0x4824>
   15704:	b	15724 <__assert_fail@plt+0x4830>
   15708:	ldr	r0, [fp, #8]
   1570c:	movw	r1, #0
   15710:	cmp	r1, r0
   15714:	bge	15724 <__assert_fail@plt+0x4830>
   15718:	movw	r0, #0
   1571c:	str	r0, [fp, #-52]	; 0xffffffcc
   15720:	b	1573c <__assert_fail@plt+0x4848>
   15724:	ldr	r0, [pc, #1904]	; 15e9c <__assert_fail@plt+0x4fa8>
   15728:	ldr	r1, [fp, #8]
   1572c:	movw	r2, #0
   15730:	sub	r1, r2, r1
   15734:	sdiv	r0, r0, r1
   15738:	str	r0, [fp, #-52]	; 0xffffffcc
   1573c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15740:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15744:	mvn	r2, #0
   15748:	sub	r1, r2, r1
   1574c:	cmp	r0, r1
   15750:	ble	15854 <__assert_fail@plt+0x4960>
   15754:	b	15868 <__assert_fail@plt+0x4974>
   15758:	ldr	r0, [fp, #8]
   1575c:	cmn	r0, #1
   15760:	bne	157a8 <__assert_fail@plt+0x48b4>
   15764:	b	15768 <__assert_fail@plt+0x4874>
   15768:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1576c:	add	r0, r0, #-2147483648	; 0x80000000
   15770:	movw	r1, #0
   15774:	cmp	r1, r0
   15778:	blt	15854 <__assert_fail@plt+0x4960>
   1577c:	b	15868 <__assert_fail@plt+0x4974>
   15780:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15784:	movw	r1, #0
   15788:	cmp	r1, r0
   1578c:	bge	15868 <__assert_fail@plt+0x4974>
   15790:	ldr	r0, [pc, #1796]	; 15e9c <__assert_fail@plt+0x4fa8>
   15794:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15798:	sub	r1, r1, #1
   1579c:	cmp	r0, r1
   157a0:	blt	15854 <__assert_fail@plt+0x4960>
   157a4:	b	15868 <__assert_fail@plt+0x4974>
   157a8:	ldr	r0, [pc, #4080]	; 167a0 <__assert_fail@plt+0x58ac>
   157ac:	ldr	r1, [fp, #8]
   157b0:	sdiv	r0, r0, r1
   157b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   157b8:	cmp	r0, r1
   157bc:	blt	15854 <__assert_fail@plt+0x4960>
   157c0:	b	15868 <__assert_fail@plt+0x4974>
   157c4:	ldr	r0, [fp, #8]
   157c8:	cmp	r0, #0
   157cc:	bne	157d4 <__assert_fail@plt+0x48e0>
   157d0:	b	15868 <__assert_fail@plt+0x4974>
   157d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157d8:	cmp	r0, #0
   157dc:	bge	1583c <__assert_fail@plt+0x4948>
   157e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157e4:	cmn	r0, #1
   157e8:	bne	15820 <__assert_fail@plt+0x492c>
   157ec:	b	157f0 <__assert_fail@plt+0x48fc>
   157f0:	ldr	r0, [fp, #8]
   157f4:	add	r0, r0, #-2147483648	; 0x80000000
   157f8:	movw	r1, #0
   157fc:	cmp	r1, r0
   15800:	blt	15854 <__assert_fail@plt+0x4960>
   15804:	b	15868 <__assert_fail@plt+0x4974>
   15808:	ldr	r0, [pc, #1676]	; 15e9c <__assert_fail@plt+0x4fa8>
   1580c:	ldr	r1, [fp, #8]
   15810:	sub	r1, r1, #1
   15814:	cmp	r0, r1
   15818:	blt	15854 <__assert_fail@plt+0x4960>
   1581c:	b	15868 <__assert_fail@plt+0x4974>
   15820:	ldr	r0, [pc, #3960]	; 167a0 <__assert_fail@plt+0x58ac>
   15824:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15828:	sdiv	r0, r0, r1
   1582c:	ldr	r1, [fp, #8]
   15830:	cmp	r0, r1
   15834:	blt	15854 <__assert_fail@plt+0x4960>
   15838:	b	15868 <__assert_fail@plt+0x4974>
   1583c:	ldr	r0, [pc, #1624]	; 15e9c <__assert_fail@plt+0x4fa8>
   15840:	ldr	r1, [fp, #8]
   15844:	sdiv	r0, r0, r1
   15848:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1584c:	cmp	r0, r1
   15850:	bge	15868 <__assert_fail@plt+0x4974>
   15854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15858:	ldr	r1, [fp, #8]
   1585c:	mul	r0, r0, r1
   15860:	str	r0, [fp, #-28]	; 0xffffffe4
   15864:	b	162a0 <__assert_fail@plt+0x53ac>
   15868:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1586c:	ldr	r1, [fp, #8]
   15870:	mul	r0, r0, r1
   15874:	str	r0, [fp, #-28]	; 0xffffffe4
   15878:	b	162ac <__assert_fail@plt+0x53b8>
   1587c:	ldr	r0, [fp, #8]
   15880:	cmp	r0, #0
   15884:	bge	15994 <__assert_fail@plt+0x4aa0>
   15888:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1588c:	cmp	r0, #0
   15890:	bge	1591c <__assert_fail@plt+0x4a28>
   15894:	b	158b4 <__assert_fail@plt+0x49c0>
   15898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1589c:	ldr	r1, [fp, #8]
   158a0:	mvn	r2, #0
   158a4:	udiv	r1, r2, r1
   158a8:	cmp	r0, r1
   158ac:	bcc	15a30 <__assert_fail@plt+0x4b3c>
   158b0:	b	15a44 <__assert_fail@plt+0x4b50>
   158b4:	b	158b8 <__assert_fail@plt+0x49c4>
   158b8:	ldr	r0, [pc, #1664]	; 15f40 <__assert_fail@plt+0x504c>
   158bc:	ldr	r1, [fp, #8]
   158c0:	cmp	r1, r0
   158c4:	blt	158dc <__assert_fail@plt+0x49e8>
   158c8:	b	158e8 <__assert_fail@plt+0x49f4>
   158cc:	ldr	r0, [fp, #8]
   158d0:	movw	r1, #0
   158d4:	cmp	r1, r0
   158d8:	bge	158e8 <__assert_fail@plt+0x49f4>
   158dc:	movw	r0, #1
   158e0:	str	r0, [fp, #-56]	; 0xffffffc8
   158e4:	b	15900 <__assert_fail@plt+0x4a0c>
   158e8:	ldr	r0, [fp, #8]
   158ec:	movw	r1, #0
   158f0:	sub	r0, r1, r0
   158f4:	mvn	r1, #0
   158f8:	udiv	r0, r1, r0
   158fc:	str	r0, [fp, #-56]	; 0xffffffc8
   15900:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15904:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15908:	mvn	r2, #0
   1590c:	sub	r1, r2, r1
   15910:	cmp	r0, r1
   15914:	bls	15a30 <__assert_fail@plt+0x4b3c>
   15918:	b	15a44 <__assert_fail@plt+0x4b50>
   1591c:	b	15920 <__assert_fail@plt+0x4a2c>
   15920:	b	15978 <__assert_fail@plt+0x4a84>
   15924:	b	15978 <__assert_fail@plt+0x4a84>
   15928:	ldr	r0, [fp, #8]
   1592c:	cmn	r0, #1
   15930:	bne	15978 <__assert_fail@plt+0x4a84>
   15934:	b	15938 <__assert_fail@plt+0x4a44>
   15938:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1593c:	add	r0, r0, #0
   15940:	movw	r1, #0
   15944:	cmp	r1, r0
   15948:	blt	15a30 <__assert_fail@plt+0x4b3c>
   1594c:	b	15a44 <__assert_fail@plt+0x4b50>
   15950:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15954:	movw	r1, #0
   15958:	cmp	r1, r0
   1595c:	bge	15a44 <__assert_fail@plt+0x4b50>
   15960:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15964:	sub	r0, r0, #1
   15968:	mvn	r1, #0
   1596c:	cmp	r1, r0
   15970:	blt	15a30 <__assert_fail@plt+0x4b3c>
   15974:	b	15a44 <__assert_fail@plt+0x4b50>
   15978:	ldr	r0, [fp, #8]
   1597c:	movw	r1, #0
   15980:	sdiv	r0, r1, r0
   15984:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15988:	cmp	r0, r1
   1598c:	blt	15a30 <__assert_fail@plt+0x4b3c>
   15990:	b	15a44 <__assert_fail@plt+0x4b50>
   15994:	ldr	r0, [fp, #8]
   15998:	cmp	r0, #0
   1599c:	bne	159a4 <__assert_fail@plt+0x4ab0>
   159a0:	b	15a44 <__assert_fail@plt+0x4b50>
   159a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159a8:	cmp	r0, #0
   159ac:	bge	15a18 <__assert_fail@plt+0x4b24>
   159b0:	b	159b4 <__assert_fail@plt+0x4ac0>
   159b4:	b	159fc <__assert_fail@plt+0x4b08>
   159b8:	b	159fc <__assert_fail@plt+0x4b08>
   159bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159c0:	cmn	r0, #1
   159c4:	bne	159fc <__assert_fail@plt+0x4b08>
   159c8:	b	159cc <__assert_fail@plt+0x4ad8>
   159cc:	ldr	r0, [fp, #8]
   159d0:	add	r0, r0, #0
   159d4:	movw	r1, #0
   159d8:	cmp	r1, r0
   159dc:	blt	15a30 <__assert_fail@plt+0x4b3c>
   159e0:	b	15a44 <__assert_fail@plt+0x4b50>
   159e4:	ldr	r0, [fp, #8]
   159e8:	sub	r0, r0, #1
   159ec:	mvn	r1, #0
   159f0:	cmp	r1, r0
   159f4:	blt	15a30 <__assert_fail@plt+0x4b3c>
   159f8:	b	15a44 <__assert_fail@plt+0x4b50>
   159fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a00:	movw	r1, #0
   15a04:	sdiv	r0, r1, r0
   15a08:	ldr	r1, [fp, #8]
   15a0c:	cmp	r0, r1
   15a10:	blt	15a30 <__assert_fail@plt+0x4b3c>
   15a14:	b	15a44 <__assert_fail@plt+0x4b50>
   15a18:	ldr	r0, [fp, #8]
   15a1c:	mvn	r1, #0
   15a20:	udiv	r0, r1, r0
   15a24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15a28:	cmp	r0, r1
   15a2c:	bcs	15a44 <__assert_fail@plt+0x4b50>
   15a30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a34:	ldr	r1, [fp, #8]
   15a38:	mul	r0, r0, r1
   15a3c:	str	r0, [fp, #-28]	; 0xffffffe4
   15a40:	b	162a0 <__assert_fail@plt+0x53ac>
   15a44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a48:	ldr	r1, [fp, #8]
   15a4c:	mul	r0, r0, r1
   15a50:	str	r0, [fp, #-28]	; 0xffffffe4
   15a54:	b	162ac <__assert_fail@plt+0x53b8>
   15a58:	b	15a5c <__assert_fail@plt+0x4b68>
   15a5c:	b	15a60 <__assert_fail@plt+0x4b6c>
   15a60:	ldr	r0, [fp, #8]
   15a64:	cmp	r0, #0
   15a68:	bge	15b6c <__assert_fail@plt+0x4c78>
   15a6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a70:	cmp	r0, #0
   15a74:	bge	15b00 <__assert_fail@plt+0x4c0c>
   15a78:	b	15a7c <__assert_fail@plt+0x4b88>
   15a7c:	ldr	r0, [pc, #1048]	; 15e9c <__assert_fail@plt+0x4fa8>
   15a80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15a84:	ldr	r2, [fp, #8]
   15a88:	sdiv	r0, r0, r2
   15a8c:	cmp	r1, r0
   15a90:	blt	15bfc <__assert_fail@plt+0x4d08>
   15a94:	b	15c10 <__assert_fail@plt+0x4d1c>
   15a98:	b	15a9c <__assert_fail@plt+0x4ba8>
   15a9c:	ldr	r0, [pc, #1180]	; 15f40 <__assert_fail@plt+0x504c>
   15aa0:	ldr	r1, [fp, #8]
   15aa4:	cmp	r1, r0
   15aa8:	blt	15ac0 <__assert_fail@plt+0x4bcc>
   15aac:	b	15acc <__assert_fail@plt+0x4bd8>
   15ab0:	ldr	r0, [fp, #8]
   15ab4:	movw	r1, #0
   15ab8:	cmp	r1, r0
   15abc:	bge	15acc <__assert_fail@plt+0x4bd8>
   15ac0:	movw	r0, #0
   15ac4:	str	r0, [fp, #-60]	; 0xffffffc4
   15ac8:	b	15ae4 <__assert_fail@plt+0x4bf0>
   15acc:	ldr	r0, [pc, #968]	; 15e9c <__assert_fail@plt+0x4fa8>
   15ad0:	ldr	r1, [fp, #8]
   15ad4:	movw	r2, #0
   15ad8:	sub	r1, r2, r1
   15adc:	sdiv	r0, r0, r1
   15ae0:	str	r0, [fp, #-60]	; 0xffffffc4
   15ae4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15ae8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15aec:	mvn	r2, #0
   15af0:	sub	r1, r2, r1
   15af4:	cmp	r0, r1
   15af8:	ble	15bfc <__assert_fail@plt+0x4d08>
   15afc:	b	15c10 <__assert_fail@plt+0x4d1c>
   15b00:	ldr	r0, [fp, #8]
   15b04:	cmn	r0, #1
   15b08:	bne	15b50 <__assert_fail@plt+0x4c5c>
   15b0c:	b	15b10 <__assert_fail@plt+0x4c1c>
   15b10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b14:	add	r0, r0, #-2147483648	; 0x80000000
   15b18:	movw	r1, #0
   15b1c:	cmp	r1, r0
   15b20:	blt	15bfc <__assert_fail@plt+0x4d08>
   15b24:	b	15c10 <__assert_fail@plt+0x4d1c>
   15b28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b2c:	movw	r1, #0
   15b30:	cmp	r1, r0
   15b34:	bge	15c10 <__assert_fail@plt+0x4d1c>
   15b38:	ldr	r0, [pc, #860]	; 15e9c <__assert_fail@plt+0x4fa8>
   15b3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15b40:	sub	r1, r1, #1
   15b44:	cmp	r0, r1
   15b48:	blt	15bfc <__assert_fail@plt+0x4d08>
   15b4c:	b	15c10 <__assert_fail@plt+0x4d1c>
   15b50:	ldr	r0, [pc, #3144]	; 167a0 <__assert_fail@plt+0x58ac>
   15b54:	ldr	r1, [fp, #8]
   15b58:	sdiv	r0, r0, r1
   15b5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15b60:	cmp	r0, r1
   15b64:	blt	15bfc <__assert_fail@plt+0x4d08>
   15b68:	b	15c10 <__assert_fail@plt+0x4d1c>
   15b6c:	ldr	r0, [fp, #8]
   15b70:	cmp	r0, #0
   15b74:	bne	15b7c <__assert_fail@plt+0x4c88>
   15b78:	b	15c10 <__assert_fail@plt+0x4d1c>
   15b7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b80:	cmp	r0, #0
   15b84:	bge	15be4 <__assert_fail@plt+0x4cf0>
   15b88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b8c:	cmn	r0, #1
   15b90:	bne	15bc8 <__assert_fail@plt+0x4cd4>
   15b94:	b	15b98 <__assert_fail@plt+0x4ca4>
   15b98:	ldr	r0, [fp, #8]
   15b9c:	add	r0, r0, #-2147483648	; 0x80000000
   15ba0:	movw	r1, #0
   15ba4:	cmp	r1, r0
   15ba8:	blt	15bfc <__assert_fail@plt+0x4d08>
   15bac:	b	15c10 <__assert_fail@plt+0x4d1c>
   15bb0:	ldr	r0, [pc, #740]	; 15e9c <__assert_fail@plt+0x4fa8>
   15bb4:	ldr	r1, [fp, #8]
   15bb8:	sub	r1, r1, #1
   15bbc:	cmp	r0, r1
   15bc0:	blt	15bfc <__assert_fail@plt+0x4d08>
   15bc4:	b	15c10 <__assert_fail@plt+0x4d1c>
   15bc8:	ldr	r0, [pc, #3024]	; 167a0 <__assert_fail@plt+0x58ac>
   15bcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15bd0:	sdiv	r0, r0, r1
   15bd4:	ldr	r1, [fp, #8]
   15bd8:	cmp	r0, r1
   15bdc:	blt	15bfc <__assert_fail@plt+0x4d08>
   15be0:	b	15c10 <__assert_fail@plt+0x4d1c>
   15be4:	ldr	r0, [pc, #688]	; 15e9c <__assert_fail@plt+0x4fa8>
   15be8:	ldr	r1, [fp, #8]
   15bec:	sdiv	r0, r0, r1
   15bf0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15bf4:	cmp	r0, r1
   15bf8:	bge	15c10 <__assert_fail@plt+0x4d1c>
   15bfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c00:	ldr	r1, [fp, #8]
   15c04:	mul	r0, r0, r1
   15c08:	str	r0, [fp, #-28]	; 0xffffffe4
   15c0c:	b	162a0 <__assert_fail@plt+0x53ac>
   15c10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c14:	ldr	r1, [fp, #8]
   15c18:	mul	r0, r0, r1
   15c1c:	str	r0, [fp, #-28]	; 0xffffffe4
   15c20:	b	162ac <__assert_fail@plt+0x53b8>
   15c24:	ldr	r0, [fp, #8]
   15c28:	cmp	r0, #0
   15c2c:	bge	15d3c <__assert_fail@plt+0x4e48>
   15c30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c34:	cmp	r0, #0
   15c38:	bge	15cc4 <__assert_fail@plt+0x4dd0>
   15c3c:	b	15c5c <__assert_fail@plt+0x4d68>
   15c40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c44:	ldr	r1, [fp, #8]
   15c48:	mvn	r2, #0
   15c4c:	udiv	r1, r2, r1
   15c50:	cmp	r0, r1
   15c54:	bcc	15dd8 <__assert_fail@plt+0x4ee4>
   15c58:	b	15dec <__assert_fail@plt+0x4ef8>
   15c5c:	b	15c60 <__assert_fail@plt+0x4d6c>
   15c60:	ldr	r0, [pc, #728]	; 15f40 <__assert_fail@plt+0x504c>
   15c64:	ldr	r1, [fp, #8]
   15c68:	cmp	r1, r0
   15c6c:	blt	15c84 <__assert_fail@plt+0x4d90>
   15c70:	b	15c90 <__assert_fail@plt+0x4d9c>
   15c74:	ldr	r0, [fp, #8]
   15c78:	movw	r1, #0
   15c7c:	cmp	r1, r0
   15c80:	bge	15c90 <__assert_fail@plt+0x4d9c>
   15c84:	movw	r0, #1
   15c88:	str	r0, [fp, #-64]	; 0xffffffc0
   15c8c:	b	15ca8 <__assert_fail@plt+0x4db4>
   15c90:	ldr	r0, [fp, #8]
   15c94:	movw	r1, #0
   15c98:	sub	r0, r1, r0
   15c9c:	mvn	r1, #0
   15ca0:	udiv	r0, r1, r0
   15ca4:	str	r0, [fp, #-64]	; 0xffffffc0
   15ca8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15cac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15cb0:	mvn	r2, #0
   15cb4:	sub	r1, r2, r1
   15cb8:	cmp	r0, r1
   15cbc:	bls	15dd8 <__assert_fail@plt+0x4ee4>
   15cc0:	b	15dec <__assert_fail@plt+0x4ef8>
   15cc4:	b	15cc8 <__assert_fail@plt+0x4dd4>
   15cc8:	b	15d20 <__assert_fail@plt+0x4e2c>
   15ccc:	b	15d20 <__assert_fail@plt+0x4e2c>
   15cd0:	ldr	r0, [fp, #8]
   15cd4:	cmn	r0, #1
   15cd8:	bne	15d20 <__assert_fail@plt+0x4e2c>
   15cdc:	b	15ce0 <__assert_fail@plt+0x4dec>
   15ce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ce4:	add	r0, r0, #0
   15ce8:	movw	r1, #0
   15cec:	cmp	r1, r0
   15cf0:	blt	15dd8 <__assert_fail@plt+0x4ee4>
   15cf4:	b	15dec <__assert_fail@plt+0x4ef8>
   15cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15cfc:	movw	r1, #0
   15d00:	cmp	r1, r0
   15d04:	bge	15dec <__assert_fail@plt+0x4ef8>
   15d08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d0c:	sub	r0, r0, #1
   15d10:	mvn	r1, #0
   15d14:	cmp	r1, r0
   15d18:	blt	15dd8 <__assert_fail@plt+0x4ee4>
   15d1c:	b	15dec <__assert_fail@plt+0x4ef8>
   15d20:	ldr	r0, [fp, #8]
   15d24:	movw	r1, #0
   15d28:	sdiv	r0, r1, r0
   15d2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15d30:	cmp	r0, r1
   15d34:	blt	15dd8 <__assert_fail@plt+0x4ee4>
   15d38:	b	15dec <__assert_fail@plt+0x4ef8>
   15d3c:	ldr	r0, [fp, #8]
   15d40:	cmp	r0, #0
   15d44:	bne	15d4c <__assert_fail@plt+0x4e58>
   15d48:	b	15dec <__assert_fail@plt+0x4ef8>
   15d4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d50:	cmp	r0, #0
   15d54:	bge	15dc0 <__assert_fail@plt+0x4ecc>
   15d58:	b	15d5c <__assert_fail@plt+0x4e68>
   15d5c:	b	15da4 <__assert_fail@plt+0x4eb0>
   15d60:	b	15da4 <__assert_fail@plt+0x4eb0>
   15d64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d68:	cmn	r0, #1
   15d6c:	bne	15da4 <__assert_fail@plt+0x4eb0>
   15d70:	b	15d74 <__assert_fail@plt+0x4e80>
   15d74:	ldr	r0, [fp, #8]
   15d78:	add	r0, r0, #0
   15d7c:	movw	r1, #0
   15d80:	cmp	r1, r0
   15d84:	blt	15dd8 <__assert_fail@plt+0x4ee4>
   15d88:	b	15dec <__assert_fail@plt+0x4ef8>
   15d8c:	ldr	r0, [fp, #8]
   15d90:	sub	r0, r0, #1
   15d94:	mvn	r1, #0
   15d98:	cmp	r1, r0
   15d9c:	blt	15dd8 <__assert_fail@plt+0x4ee4>
   15da0:	b	15dec <__assert_fail@plt+0x4ef8>
   15da4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15da8:	movw	r1, #0
   15dac:	sdiv	r0, r1, r0
   15db0:	ldr	r1, [fp, #8]
   15db4:	cmp	r0, r1
   15db8:	blt	15dd8 <__assert_fail@plt+0x4ee4>
   15dbc:	b	15dec <__assert_fail@plt+0x4ef8>
   15dc0:	ldr	r0, [fp, #8]
   15dc4:	mvn	r1, #0
   15dc8:	udiv	r0, r1, r0
   15dcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15dd0:	cmp	r0, r1
   15dd4:	bcs	15dec <__assert_fail@plt+0x4ef8>
   15dd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ddc:	ldr	r1, [fp, #8]
   15de0:	mul	r0, r0, r1
   15de4:	str	r0, [fp, #-28]	; 0xffffffe4
   15de8:	b	162a0 <__assert_fail@plt+0x53ac>
   15dec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15df0:	ldr	r1, [fp, #8]
   15df4:	mul	r0, r0, r1
   15df8:	str	r0, [fp, #-28]	; 0xffffffe4
   15dfc:	b	162ac <__assert_fail@plt+0x53b8>
   15e00:	b	15e04 <__assert_fail@plt+0x4f10>
   15e04:	ldr	r0, [fp, #8]
   15e08:	cmp	r0, #0
   15e0c:	bge	15f7c <__assert_fail@plt+0x5088>
   15e10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e14:	cmp	r0, #0
   15e18:	bge	15ef4 <__assert_fail@plt+0x5000>
   15e1c:	b	15e20 <__assert_fail@plt+0x4f2c>
   15e20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e24:	ldr	r1, [fp, #8]
   15e28:	asr	r3, r1, #31
   15e2c:	mvn	r2, #0
   15e30:	mvn	ip, #-2147483648	; 0x80000000
   15e34:	str	r0, [fp, #-68]	; 0xffffffbc
   15e38:	mov	r0, r2
   15e3c:	str	r1, [fp, #-72]	; 0xffffffb8
   15e40:	mov	r1, ip
   15e44:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15e48:	bl	19cd4 <__assert_fail@plt+0x8de0>
   15e4c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15e50:	subs	r0, r2, r0
   15e54:	rscs	r1, r1, r2, asr #31
   15e58:	blt	16044 <__assert_fail@plt+0x5150>
   15e5c:	b	16058 <__assert_fail@plt+0x5164>
   15e60:	b	15e64 <__assert_fail@plt+0x4f70>
   15e64:	ldr	r0, [pc, #212]	; 15f40 <__assert_fail@plt+0x504c>
   15e68:	ldr	r1, [fp, #8]
   15e6c:	cmp	r1, r0
   15e70:	blt	15e88 <__assert_fail@plt+0x4f94>
   15e74:	b	15ea0 <__assert_fail@plt+0x4fac>
   15e78:	ldr	r0, [fp, #8]
   15e7c:	movw	r1, #0
   15e80:	cmp	r1, r0
   15e84:	bge	15ea0 <__assert_fail@plt+0x4fac>
   15e88:	mov	r0, #0
   15e8c:	mvn	r1, #0
   15e90:	str	r1, [fp, #-76]	; 0xffffffb4
   15e94:	str	r0, [fp, #-80]	; 0xffffffb0
   15e98:	b	15ed4 <__assert_fail@plt+0x4fe0>
   15e9c:	svcvc	0x00ffffff
   15ea0:	ldr	r0, [fp, #8]
   15ea4:	rsb	r0, r0, #0
   15ea8:	asr	r3, r0, #31
   15eac:	mvn	r1, #0
   15eb0:	mvn	r2, #-2147483648	; 0x80000000
   15eb4:	str	r0, [fp, #-84]	; 0xffffffac
   15eb8:	mov	r0, r1
   15ebc:	mov	r1, r2
   15ec0:	ldr	r2, [fp, #-84]	; 0xffffffac
   15ec4:	bl	19cd4 <__assert_fail@plt+0x8de0>
   15ec8:	str	r0, [fp, #-76]	; 0xffffffb4
   15ecc:	str	r1, [fp, #-80]	; 0xffffffb0
   15ed0:	b	15ed4 <__assert_fail@plt+0x4fe0>
   15ed4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   15ed8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   15edc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15ee0:	mvn	r2, r2
   15ee4:	subs	r1, r2, r1
   15ee8:	rscs	r0, r0, r2, asr #31
   15eec:	bge	16044 <__assert_fail@plt+0x5150>
   15ef0:	b	16058 <__assert_fail@plt+0x5164>
   15ef4:	ldr	r0, [fp, #8]
   15ef8:	cmn	r0, #1
   15efc:	bne	15f44 <__assert_fail@plt+0x5050>
   15f00:	b	15f04 <__assert_fail@plt+0x5010>
   15f04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f08:	mov	r1, #-2147483648	; 0x80000000
   15f0c:	add	r1, r1, r0, asr #31
   15f10:	rsbs	r0, r0, #0
   15f14:	rscs	r1, r1, #0
   15f18:	blt	16044 <__assert_fail@plt+0x5150>
   15f1c:	b	16058 <__assert_fail@plt+0x5164>
   15f20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f24:	movw	r1, #0
   15f28:	cmp	r1, r0
   15f2c:	bge	16058 <__assert_fail@plt+0x5164>
   15f30:	mov	r0, #0
   15f34:	cmp	r0, #0
   15f38:	bne	16044 <__assert_fail@plt+0x5150>
   15f3c:	b	16058 <__assert_fail@plt+0x5164>
   15f40:	andhi	r0, r0, r1
   15f44:	ldr	r0, [fp, #8]
   15f48:	asr	r3, r0, #31
   15f4c:	mov	r1, #0
   15f50:	mov	r2, #-2147483648	; 0x80000000
   15f54:	str	r0, [fp, #-88]	; 0xffffffa8
   15f58:	mov	r0, r1
   15f5c:	mov	r1, r2
   15f60:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15f64:	bl	19cd4 <__assert_fail@plt+0x8de0>
   15f68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15f6c:	subs	r0, r0, r2
   15f70:	sbcs	r1, r1, r2, asr #31
   15f74:	blt	16044 <__assert_fail@plt+0x5150>
   15f78:	b	16058 <__assert_fail@plt+0x5164>
   15f7c:	ldr	r0, [fp, #8]
   15f80:	cmp	r0, #0
   15f84:	bne	15f8c <__assert_fail@plt+0x5098>
   15f88:	b	16058 <__assert_fail@plt+0x5164>
   15f8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f90:	cmp	r0, #0
   15f94:	bge	1600c <__assert_fail@plt+0x5118>
   15f98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f9c:	cmn	r0, #1
   15fa0:	bne	15fd4 <__assert_fail@plt+0x50e0>
   15fa4:	b	15fa8 <__assert_fail@plt+0x50b4>
   15fa8:	ldr	r0, [fp, #8]
   15fac:	mov	r1, #-2147483648	; 0x80000000
   15fb0:	add	r1, r1, r0, asr #31
   15fb4:	rsbs	r0, r0, #0
   15fb8:	rscs	r1, r1, #0
   15fbc:	blt	16044 <__assert_fail@plt+0x5150>
   15fc0:	b	16058 <__assert_fail@plt+0x5164>
   15fc4:	mov	r0, #0
   15fc8:	cmp	r0, #0
   15fcc:	bne	16044 <__assert_fail@plt+0x5150>
   15fd0:	b	16058 <__assert_fail@plt+0x5164>
   15fd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fd8:	asr	r3, r0, #31
   15fdc:	mov	r1, #0
   15fe0:	mov	r2, #-2147483648	; 0x80000000
   15fe4:	str	r0, [fp, #-92]	; 0xffffffa4
   15fe8:	mov	r0, r1
   15fec:	mov	r1, r2
   15ff0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   15ff4:	bl	19cd4 <__assert_fail@plt+0x8de0>
   15ff8:	ldr	r2, [fp, #8]
   15ffc:	subs	r0, r0, r2
   16000:	sbcs	r1, r1, r2, asr #31
   16004:	blt	16044 <__assert_fail@plt+0x5150>
   16008:	b	16058 <__assert_fail@plt+0x5164>
   1600c:	ldr	r0, [fp, #8]
   16010:	asr	r3, r0, #31
   16014:	mvn	r1, #0
   16018:	mvn	r2, #-2147483648	; 0x80000000
   1601c:	str	r0, [fp, #-96]	; 0xffffffa0
   16020:	mov	r0, r1
   16024:	mov	r1, r2
   16028:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1602c:	bl	19cd4 <__assert_fail@plt+0x8de0>
   16030:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16034:	subs	r0, r0, r2
   16038:	sbcs	r1, r1, r2, asr #31
   1603c:	bge	16058 <__assert_fail@plt+0x5164>
   16040:	b	16044 <__assert_fail@plt+0x5150>
   16044:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16048:	ldr	r1, [fp, #8]
   1604c:	mul	r0, r0, r1
   16050:	str	r0, [fp, #-28]	; 0xffffffe4
   16054:	b	162a0 <__assert_fail@plt+0x53ac>
   16058:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1605c:	ldr	r1, [fp, #8]
   16060:	mul	r0, r0, r1
   16064:	str	r0, [fp, #-28]	; 0xffffffe4
   16068:	b	162ac <__assert_fail@plt+0x53b8>
   1606c:	ldr	r0, [fp, #8]
   16070:	cmp	r0, #0
   16074:	bge	161c4 <__assert_fail@plt+0x52d0>
   16078:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1607c:	cmp	r0, #0
   16080:	bge	1614c <__assert_fail@plt+0x5258>
   16084:	b	160c4 <__assert_fail@plt+0x51d0>
   16088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1608c:	ldr	r1, [fp, #8]
   16090:	asr	r3, r1, #31
   16094:	mvn	r2, #0
   16098:	str	r0, [fp, #-100]	; 0xffffff9c
   1609c:	mov	r0, r2
   160a0:	str	r1, [fp, #-104]	; 0xffffff98
   160a4:	mov	r1, r2
   160a8:	ldr	r2, [fp, #-104]	; 0xffffff98
   160ac:	bl	19da8 <__assert_fail@plt+0x8eb4>
   160b0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   160b4:	subs	r0, r2, r0
   160b8:	rscs	r1, r1, r2, asr #31
   160bc:	bcc	16278 <__assert_fail@plt+0x5384>
   160c0:	b	1628c <__assert_fail@plt+0x5398>
   160c4:	b	160c8 <__assert_fail@plt+0x51d4>
   160c8:	ldr	r0, [pc, #-400]	; 15f40 <__assert_fail@plt+0x504c>
   160cc:	ldr	r1, [fp, #8]
   160d0:	cmp	r1, r0
   160d4:	blt	160ec <__assert_fail@plt+0x51f8>
   160d8:	b	16100 <__assert_fail@plt+0x520c>
   160dc:	ldr	r0, [fp, #8]
   160e0:	movw	r1, #0
   160e4:	cmp	r1, r0
   160e8:	bge	16100 <__assert_fail@plt+0x520c>
   160ec:	mov	r0, #1
   160f0:	mvn	r1, #0
   160f4:	str	r1, [sp, #108]	; 0x6c
   160f8:	str	r0, [sp, #104]	; 0x68
   160fc:	b	1612c <__assert_fail@plt+0x5238>
   16100:	ldr	r0, [fp, #8]
   16104:	rsb	r0, r0, #0
   16108:	asr	r3, r0, #31
   1610c:	mvn	r1, #0
   16110:	str	r0, [sp, #100]	; 0x64
   16114:	mov	r0, r1
   16118:	ldr	r2, [sp, #100]	; 0x64
   1611c:	bl	19da8 <__assert_fail@plt+0x8eb4>
   16120:	str	r0, [sp, #108]	; 0x6c
   16124:	str	r1, [sp, #104]	; 0x68
   16128:	b	1612c <__assert_fail@plt+0x5238>
   1612c:	ldr	r0, [sp, #104]	; 0x68
   16130:	ldr	r1, [sp, #108]	; 0x6c
   16134:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16138:	mvn	r2, r2
   1613c:	subs	r1, r2, r1
   16140:	rscs	r0, r0, r2, asr #31
   16144:	bcs	16278 <__assert_fail@plt+0x5384>
   16148:	b	1628c <__assert_fail@plt+0x5398>
   1614c:	b	16150 <__assert_fail@plt+0x525c>
   16150:	b	161a8 <__assert_fail@plt+0x52b4>
   16154:	b	161a8 <__assert_fail@plt+0x52b4>
   16158:	ldr	r0, [fp, #8]
   1615c:	cmn	r0, #1
   16160:	bne	161a8 <__assert_fail@plt+0x52b4>
   16164:	b	16168 <__assert_fail@plt+0x5274>
   16168:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1616c:	add	r0, r0, #0
   16170:	movw	r1, #0
   16174:	cmp	r1, r0
   16178:	blt	16278 <__assert_fail@plt+0x5384>
   1617c:	b	1628c <__assert_fail@plt+0x5398>
   16180:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16184:	movw	r1, #0
   16188:	cmp	r1, r0
   1618c:	bge	1628c <__assert_fail@plt+0x5398>
   16190:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16194:	sub	r0, r0, #1
   16198:	mvn	r1, #0
   1619c:	cmp	r1, r0
   161a0:	blt	16278 <__assert_fail@plt+0x5384>
   161a4:	b	1628c <__assert_fail@plt+0x5398>
   161a8:	ldr	r0, [fp, #8]
   161ac:	movw	r1, #0
   161b0:	sdiv	r0, r1, r0
   161b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   161b8:	cmp	r0, r1
   161bc:	blt	16278 <__assert_fail@plt+0x5384>
   161c0:	b	1628c <__assert_fail@plt+0x5398>
   161c4:	ldr	r0, [fp, #8]
   161c8:	cmp	r0, #0
   161cc:	bne	161d4 <__assert_fail@plt+0x52e0>
   161d0:	b	1628c <__assert_fail@plt+0x5398>
   161d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161d8:	cmp	r0, #0
   161dc:	bge	16248 <__assert_fail@plt+0x5354>
   161e0:	b	161e4 <__assert_fail@plt+0x52f0>
   161e4:	b	1622c <__assert_fail@plt+0x5338>
   161e8:	b	1622c <__assert_fail@plt+0x5338>
   161ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161f0:	cmn	r0, #1
   161f4:	bne	1622c <__assert_fail@plt+0x5338>
   161f8:	b	161fc <__assert_fail@plt+0x5308>
   161fc:	ldr	r0, [fp, #8]
   16200:	add	r0, r0, #0
   16204:	movw	r1, #0
   16208:	cmp	r1, r0
   1620c:	blt	16278 <__assert_fail@plt+0x5384>
   16210:	b	1628c <__assert_fail@plt+0x5398>
   16214:	ldr	r0, [fp, #8]
   16218:	sub	r0, r0, #1
   1621c:	mvn	r1, #0
   16220:	cmp	r1, r0
   16224:	blt	16278 <__assert_fail@plt+0x5384>
   16228:	b	1628c <__assert_fail@plt+0x5398>
   1622c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16230:	movw	r1, #0
   16234:	sdiv	r0, r1, r0
   16238:	ldr	r1, [fp, #8]
   1623c:	cmp	r0, r1
   16240:	blt	16278 <__assert_fail@plt+0x5384>
   16244:	b	1628c <__assert_fail@plt+0x5398>
   16248:	ldr	r0, [fp, #8]
   1624c:	asr	r3, r0, #31
   16250:	mvn	r1, #0
   16254:	str	r0, [sp, #96]	; 0x60
   16258:	mov	r0, r1
   1625c:	ldr	r2, [sp, #96]	; 0x60
   16260:	bl	19da8 <__assert_fail@plt+0x8eb4>
   16264:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16268:	subs	r0, r0, r2
   1626c:	sbcs	r1, r1, r2, asr #31
   16270:	bcs	1628c <__assert_fail@plt+0x5398>
   16274:	b	16278 <__assert_fail@plt+0x5384>
   16278:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1627c:	ldr	r1, [fp, #8]
   16280:	mul	r0, r0, r1
   16284:	str	r0, [fp, #-28]	; 0xffffffe4
   16288:	b	162a0 <__assert_fail@plt+0x53ac>
   1628c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16290:	ldr	r1, [fp, #8]
   16294:	mul	r0, r0, r1
   16298:	str	r0, [fp, #-28]	; 0xffffffe4
   1629c:	b	162ac <__assert_fail@plt+0x53b8>
   162a0:	ldr	r0, [pc, #-1036]	; 15e9c <__assert_fail@plt+0x4fa8>
   162a4:	str	r0, [sp, #92]	; 0x5c
   162a8:	b	162cc <__assert_fail@plt+0x53d8>
   162ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   162b0:	cmp	r0, #64	; 0x40
   162b4:	movw	r0, #0
   162b8:	movlt	r0, #1
   162bc:	tst	r0, #1
   162c0:	movw	r0, #64	; 0x40
   162c4:	moveq	r0, #0
   162c8:	str	r0, [sp, #92]	; 0x5c
   162cc:	ldr	r0, [sp, #92]	; 0x5c
   162d0:	str	r0, [fp, #-32]	; 0xffffffe0
   162d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   162d8:	cmp	r0, #0
   162dc:	beq	1630c <__assert_fail@plt+0x5418>
   162e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   162e4:	ldr	r1, [fp, #8]
   162e8:	sdiv	r0, r0, r1
   162ec:	str	r0, [fp, #-24]	; 0xffffffe8
   162f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   162f4:	mov	r1, r0
   162f8:	ldr	r2, [fp, #8]
   162fc:	sdiv	r3, r0, r2
   16300:	mls	r0, r3, r2, r0
   16304:	sub	r0, r1, r0
   16308:	str	r0, [fp, #-28]	; 0xffffffe4
   1630c:	ldr	r0, [fp, #-4]
   16310:	movw	r1, #0
   16314:	cmp	r0, r1
   16318:	bne	16328 <__assert_fail@plt+0x5434>
   1631c:	ldr	r0, [fp, #-8]
   16320:	movw	r1, #0
   16324:	str	r1, [r0]
   16328:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1632c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16330:	sub	r0, r0, r1
   16334:	ldr	r1, [fp, #-12]
   16338:	cmp	r0, r1
   1633c:	bge	17728 <__assert_fail@plt+0x6834>
   16340:	ldr	r0, [fp, #-20]	; 0xffffffec
   16344:	ldr	r1, [fp, #-12]
   16348:	add	r1, r0, r1
   1634c:	mov	r2, #1
   16350:	cmp	r1, r0
   16354:	movwvc	r2, #0
   16358:	str	r1, [fp, #-24]	; 0xffffffe8
   1635c:	tst	r2, #1
   16360:	bne	17724 <__assert_fail@plt+0x6830>
   16364:	ldr	r0, [fp, #-16]
   16368:	movw	r1, #0
   1636c:	cmp	r1, r0
   16370:	bgt	16384 <__assert_fail@plt+0x5490>
   16374:	ldr	r0, [fp, #-16]
   16378:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1637c:	cmp	r0, r1
   16380:	blt	17724 <__assert_fail@plt+0x6830>
   16384:	b	16760 <__assert_fail@plt+0x586c>
   16388:			; <UNDEFINED> instruction: 0xffff8000
   1638c:	b	16390 <__assert_fail@plt+0x549c>
   16390:	ldr	r0, [fp, #8]
   16394:	cmp	r0, #0
   16398:	bge	164ac <__assert_fail@plt+0x55b8>
   1639c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163a0:	cmp	r0, #0
   163a4:	bge	16430 <__assert_fail@plt+0x553c>
   163a8:	b	163ac <__assert_fail@plt+0x54b8>
   163ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163b0:	ldr	r1, [fp, #8]
   163b4:	movw	r2, #127	; 0x7f
   163b8:	sdiv	r1, r2, r1
   163bc:	cmp	r0, r1
   163c0:	blt	1654c <__assert_fail@plt+0x5658>
   163c4:	b	16564 <__assert_fail@plt+0x5670>
   163c8:	b	163cc <__assert_fail@plt+0x54d8>
   163cc:	ldr	r0, [pc, #-1172]	; 15f40 <__assert_fail@plt+0x504c>
   163d0:	ldr	r1, [fp, #8]
   163d4:	cmp	r1, r0
   163d8:	blt	163f0 <__assert_fail@plt+0x54fc>
   163dc:	b	163fc <__assert_fail@plt+0x5508>
   163e0:	ldr	r0, [fp, #8]
   163e4:	movw	r1, #0
   163e8:	cmp	r1, r0
   163ec:	bge	163fc <__assert_fail@plt+0x5508>
   163f0:	movw	r0, #0
   163f4:	str	r0, [sp, #88]	; 0x58
   163f8:	b	16414 <__assert_fail@plt+0x5520>
   163fc:	ldr	r0, [fp, #8]
   16400:	movw	r1, #0
   16404:	sub	r0, r1, r0
   16408:	movw	r1, #127	; 0x7f
   1640c:	sdiv	r0, r1, r0
   16410:	str	r0, [sp, #88]	; 0x58
   16414:	ldr	r0, [sp, #88]	; 0x58
   16418:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1641c:	mvn	r2, #0
   16420:	sub	r1, r2, r1
   16424:	cmp	r0, r1
   16428:	ble	1654c <__assert_fail@plt+0x5658>
   1642c:	b	16564 <__assert_fail@plt+0x5670>
   16430:	b	16434 <__assert_fail@plt+0x5540>
   16434:	b	16490 <__assert_fail@plt+0x559c>
   16438:	b	16490 <__assert_fail@plt+0x559c>
   1643c:	ldr	r0, [fp, #8]
   16440:	cmn	r0, #1
   16444:	bne	16490 <__assert_fail@plt+0x559c>
   16448:	b	1644c <__assert_fail@plt+0x5558>
   1644c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16450:	mvn	r1, #127	; 0x7f
   16454:	add	r0, r0, r1
   16458:	movw	r1, #0
   1645c:	cmp	r1, r0
   16460:	blt	1654c <__assert_fail@plt+0x5658>
   16464:	b	16564 <__assert_fail@plt+0x5670>
   16468:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1646c:	movw	r1, #0
   16470:	cmp	r1, r0
   16474:	bge	16564 <__assert_fail@plt+0x5670>
   16478:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1647c:	sub	r0, r0, #1
   16480:	movw	r1, #127	; 0x7f
   16484:	cmp	r1, r0
   16488:	blt	1654c <__assert_fail@plt+0x5658>
   1648c:	b	16564 <__assert_fail@plt+0x5670>
   16490:	ldr	r0, [fp, #8]
   16494:	mvn	r1, #127	; 0x7f
   16498:	sdiv	r0, r1, r0
   1649c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   164a0:	cmp	r0, r1
   164a4:	blt	1654c <__assert_fail@plt+0x5658>
   164a8:	b	16564 <__assert_fail@plt+0x5670>
   164ac:	ldr	r0, [fp, #8]
   164b0:	cmp	r0, #0
   164b4:	bne	164bc <__assert_fail@plt+0x55c8>
   164b8:	b	16564 <__assert_fail@plt+0x5670>
   164bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164c0:	cmp	r0, #0
   164c4:	bge	16534 <__assert_fail@plt+0x5640>
   164c8:	b	164cc <__assert_fail@plt+0x55d8>
   164cc:	b	16518 <__assert_fail@plt+0x5624>
   164d0:	b	16518 <__assert_fail@plt+0x5624>
   164d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164d8:	cmn	r0, #1
   164dc:	bne	16518 <__assert_fail@plt+0x5624>
   164e0:	b	164e4 <__assert_fail@plt+0x55f0>
   164e4:	ldr	r0, [fp, #8]
   164e8:	mvn	r1, #127	; 0x7f
   164ec:	add	r0, r0, r1
   164f0:	movw	r1, #0
   164f4:	cmp	r1, r0
   164f8:	blt	1654c <__assert_fail@plt+0x5658>
   164fc:	b	16564 <__assert_fail@plt+0x5670>
   16500:	ldr	r0, [fp, #8]
   16504:	sub	r0, r0, #1
   16508:	movw	r1, #127	; 0x7f
   1650c:	cmp	r1, r0
   16510:	blt	1654c <__assert_fail@plt+0x5658>
   16514:	b	16564 <__assert_fail@plt+0x5670>
   16518:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1651c:	mvn	r1, #127	; 0x7f
   16520:	sdiv	r0, r1, r0
   16524:	ldr	r1, [fp, #8]
   16528:	cmp	r0, r1
   1652c:	blt	1654c <__assert_fail@plt+0x5658>
   16530:	b	16564 <__assert_fail@plt+0x5670>
   16534:	ldr	r0, [fp, #8]
   16538:	movw	r1, #127	; 0x7f
   1653c:	sdiv	r0, r1, r0
   16540:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16544:	cmp	r0, r1
   16548:	bge	16564 <__assert_fail@plt+0x5670>
   1654c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16550:	ldr	r1, [fp, #8]
   16554:	mul	r0, r0, r1
   16558:	sxtb	r0, r0
   1655c:	str	r0, [fp, #-28]	; 0xffffffe4
   16560:	b	17724 <__assert_fail@plt+0x6830>
   16564:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16568:	ldr	r1, [fp, #8]
   1656c:	mul	r0, r0, r1
   16570:	sxtb	r0, r0
   16574:	str	r0, [fp, #-28]	; 0xffffffe4
   16578:	b	17728 <__assert_fail@plt+0x6834>
   1657c:	ldr	r0, [fp, #8]
   16580:	cmp	r0, #0
   16584:	bge	16694 <__assert_fail@plt+0x57a0>
   16588:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1658c:	cmp	r0, #0
   16590:	bge	1661c <__assert_fail@plt+0x5728>
   16594:	b	16598 <__assert_fail@plt+0x56a4>
   16598:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1659c:	ldr	r1, [fp, #8]
   165a0:	movw	r2, #255	; 0xff
   165a4:	sdiv	r1, r2, r1
   165a8:	cmp	r0, r1
   165ac:	blt	16730 <__assert_fail@plt+0x583c>
   165b0:	b	16748 <__assert_fail@plt+0x5854>
   165b4:	b	165b8 <__assert_fail@plt+0x56c4>
   165b8:	ldr	r0, [pc, #-1664]	; 15f40 <__assert_fail@plt+0x504c>
   165bc:	ldr	r1, [fp, #8]
   165c0:	cmp	r1, r0
   165c4:	blt	165dc <__assert_fail@plt+0x56e8>
   165c8:	b	165e8 <__assert_fail@plt+0x56f4>
   165cc:	ldr	r0, [fp, #8]
   165d0:	movw	r1, #0
   165d4:	cmp	r1, r0
   165d8:	bge	165e8 <__assert_fail@plt+0x56f4>
   165dc:	movw	r0, #0
   165e0:	str	r0, [sp, #84]	; 0x54
   165e4:	b	16600 <__assert_fail@plt+0x570c>
   165e8:	ldr	r0, [fp, #8]
   165ec:	movw	r1, #0
   165f0:	sub	r0, r1, r0
   165f4:	movw	r1, #255	; 0xff
   165f8:	sdiv	r0, r1, r0
   165fc:	str	r0, [sp, #84]	; 0x54
   16600:	ldr	r0, [sp, #84]	; 0x54
   16604:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16608:	mvn	r2, #0
   1660c:	sub	r1, r2, r1
   16610:	cmp	r0, r1
   16614:	ble	16730 <__assert_fail@plt+0x583c>
   16618:	b	16748 <__assert_fail@plt+0x5854>
   1661c:	b	16620 <__assert_fail@plt+0x572c>
   16620:	b	16678 <__assert_fail@plt+0x5784>
   16624:	b	16678 <__assert_fail@plt+0x5784>
   16628:	ldr	r0, [fp, #8]
   1662c:	cmn	r0, #1
   16630:	bne	16678 <__assert_fail@plt+0x5784>
   16634:	b	16638 <__assert_fail@plt+0x5744>
   16638:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1663c:	add	r0, r0, #0
   16640:	movw	r1, #0
   16644:	cmp	r1, r0
   16648:	blt	16730 <__assert_fail@plt+0x583c>
   1664c:	b	16748 <__assert_fail@plt+0x5854>
   16650:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16654:	movw	r1, #0
   16658:	cmp	r1, r0
   1665c:	bge	16748 <__assert_fail@plt+0x5854>
   16660:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16664:	sub	r0, r0, #1
   16668:	mvn	r1, #0
   1666c:	cmp	r1, r0
   16670:	blt	16730 <__assert_fail@plt+0x583c>
   16674:	b	16748 <__assert_fail@plt+0x5854>
   16678:	ldr	r0, [fp, #8]
   1667c:	movw	r1, #0
   16680:	sdiv	r0, r1, r0
   16684:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16688:	cmp	r0, r1
   1668c:	blt	16730 <__assert_fail@plt+0x583c>
   16690:	b	16748 <__assert_fail@plt+0x5854>
   16694:	ldr	r0, [fp, #8]
   16698:	cmp	r0, #0
   1669c:	bne	166a4 <__assert_fail@plt+0x57b0>
   166a0:	b	16748 <__assert_fail@plt+0x5854>
   166a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166a8:	cmp	r0, #0
   166ac:	bge	16718 <__assert_fail@plt+0x5824>
   166b0:	b	166b4 <__assert_fail@plt+0x57c0>
   166b4:	b	166fc <__assert_fail@plt+0x5808>
   166b8:	b	166fc <__assert_fail@plt+0x5808>
   166bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166c0:	cmn	r0, #1
   166c4:	bne	166fc <__assert_fail@plt+0x5808>
   166c8:	b	166cc <__assert_fail@plt+0x57d8>
   166cc:	ldr	r0, [fp, #8]
   166d0:	add	r0, r0, #0
   166d4:	movw	r1, #0
   166d8:	cmp	r1, r0
   166dc:	blt	16730 <__assert_fail@plt+0x583c>
   166e0:	b	16748 <__assert_fail@plt+0x5854>
   166e4:	ldr	r0, [fp, #8]
   166e8:	sub	r0, r0, #1
   166ec:	mvn	r1, #0
   166f0:	cmp	r1, r0
   166f4:	blt	16730 <__assert_fail@plt+0x583c>
   166f8:	b	16748 <__assert_fail@plt+0x5854>
   166fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16700:	movw	r1, #0
   16704:	sdiv	r0, r1, r0
   16708:	ldr	r1, [fp, #8]
   1670c:	cmp	r0, r1
   16710:	blt	16730 <__assert_fail@plt+0x583c>
   16714:	b	16748 <__assert_fail@plt+0x5854>
   16718:	ldr	r0, [fp, #8]
   1671c:	movw	r1, #255	; 0xff
   16720:	sdiv	r0, r1, r0
   16724:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16728:	cmp	r0, r1
   1672c:	bge	16748 <__assert_fail@plt+0x5854>
   16730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16734:	ldr	r1, [fp, #8]
   16738:	mul	r0, r0, r1
   1673c:	and	r0, r0, #255	; 0xff
   16740:	str	r0, [fp, #-28]	; 0xffffffe4
   16744:	b	17724 <__assert_fail@plt+0x6830>
   16748:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1674c:	ldr	r1, [fp, #8]
   16750:	mul	r0, r0, r1
   16754:	and	r0, r0, #255	; 0xff
   16758:	str	r0, [fp, #-28]	; 0xffffffe4
   1675c:	b	17728 <__assert_fail@plt+0x6834>
   16760:	b	16b3c <__assert_fail@plt+0x5c48>
   16764:	b	16768 <__assert_fail@plt+0x5874>
   16768:	ldr	r0, [fp, #8]
   1676c:	cmp	r0, #0
   16770:	bge	16888 <__assert_fail@plt+0x5994>
   16774:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16778:	cmp	r0, #0
   1677c:	bge	1680c <__assert_fail@plt+0x5918>
   16780:	b	16784 <__assert_fail@plt+0x5890>
   16784:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16788:	ldr	r1, [fp, #8]
   1678c:	movw	r2, #32767	; 0x7fff
   16790:	sdiv	r1, r2, r1
   16794:	cmp	r0, r1
   16798:	blt	16928 <__assert_fail@plt+0x5a34>
   1679c:	b	16940 <__assert_fail@plt+0x5a4c>
   167a0:	andhi	r0, r0, r0
   167a4:	b	167a8 <__assert_fail@plt+0x58b4>
   167a8:	ldr	r0, [pc, #4004]	; 17754 <__assert_fail@plt+0x6860>
   167ac:	ldr	r1, [fp, #8]
   167b0:	cmp	r1, r0
   167b4:	blt	167cc <__assert_fail@plt+0x58d8>
   167b8:	b	167d8 <__assert_fail@plt+0x58e4>
   167bc:	ldr	r0, [fp, #8]
   167c0:	movw	r1, #0
   167c4:	cmp	r1, r0
   167c8:	bge	167d8 <__assert_fail@plt+0x58e4>
   167cc:	movw	r0, #0
   167d0:	str	r0, [sp, #80]	; 0x50
   167d4:	b	167f0 <__assert_fail@plt+0x58fc>
   167d8:	ldr	r0, [fp, #8]
   167dc:	movw	r1, #0
   167e0:	sub	r0, r1, r0
   167e4:	movw	r1, #32767	; 0x7fff
   167e8:	sdiv	r0, r1, r0
   167ec:	str	r0, [sp, #80]	; 0x50
   167f0:	ldr	r0, [sp, #80]	; 0x50
   167f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   167f8:	mvn	r2, #0
   167fc:	sub	r1, r2, r1
   16800:	cmp	r0, r1
   16804:	ble	16928 <__assert_fail@plt+0x5a34>
   16808:	b	16940 <__assert_fail@plt+0x5a4c>
   1680c:	b	16810 <__assert_fail@plt+0x591c>
   16810:	b	1686c <__assert_fail@plt+0x5978>
   16814:	b	1686c <__assert_fail@plt+0x5978>
   16818:	ldr	r0, [fp, #8]
   1681c:	cmn	r0, #1
   16820:	bne	1686c <__assert_fail@plt+0x5978>
   16824:	b	16828 <__assert_fail@plt+0x5934>
   16828:	ldr	r0, [pc, #3884]	; 1775c <__assert_fail@plt+0x6868>
   1682c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16830:	add	r0, r1, r0
   16834:	movw	r1, #0
   16838:	cmp	r1, r0
   1683c:	blt	16928 <__assert_fail@plt+0x5a34>
   16840:	b	16940 <__assert_fail@plt+0x5a4c>
   16844:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16848:	movw	r1, #0
   1684c:	cmp	r1, r0
   16850:	bge	16940 <__assert_fail@plt+0x5a4c>
   16854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16858:	sub	r0, r0, #1
   1685c:	movw	r1, #32767	; 0x7fff
   16860:	cmp	r1, r0
   16864:	blt	16928 <__assert_fail@plt+0x5a34>
   16868:	b	16940 <__assert_fail@plt+0x5a4c>
   1686c:	ldr	r0, [pc, #3816]	; 1775c <__assert_fail@plt+0x6868>
   16870:	ldr	r1, [fp, #8]
   16874:	sdiv	r0, r0, r1
   16878:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1687c:	cmp	r0, r1
   16880:	blt	16928 <__assert_fail@plt+0x5a34>
   16884:	b	16940 <__assert_fail@plt+0x5a4c>
   16888:	ldr	r0, [fp, #8]
   1688c:	cmp	r0, #0
   16890:	bne	16898 <__assert_fail@plt+0x59a4>
   16894:	b	16940 <__assert_fail@plt+0x5a4c>
   16898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1689c:	cmp	r0, #0
   168a0:	bge	16910 <__assert_fail@plt+0x5a1c>
   168a4:	b	168a8 <__assert_fail@plt+0x59b4>
   168a8:	b	168f4 <__assert_fail@plt+0x5a00>
   168ac:	b	168f4 <__assert_fail@plt+0x5a00>
   168b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168b4:	cmn	r0, #1
   168b8:	bne	168f4 <__assert_fail@plt+0x5a00>
   168bc:	b	168c0 <__assert_fail@plt+0x59cc>
   168c0:	ldr	r0, [pc, #3732]	; 1775c <__assert_fail@plt+0x6868>
   168c4:	ldr	r1, [fp, #8]
   168c8:	add	r0, r1, r0
   168cc:	movw	r1, #0
   168d0:	cmp	r1, r0
   168d4:	blt	16928 <__assert_fail@plt+0x5a34>
   168d8:	b	16940 <__assert_fail@plt+0x5a4c>
   168dc:	ldr	r0, [fp, #8]
   168e0:	sub	r0, r0, #1
   168e4:	movw	r1, #32767	; 0x7fff
   168e8:	cmp	r1, r0
   168ec:	blt	16928 <__assert_fail@plt+0x5a34>
   168f0:	b	16940 <__assert_fail@plt+0x5a4c>
   168f4:	ldr	r0, [pc, #3680]	; 1775c <__assert_fail@plt+0x6868>
   168f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   168fc:	sdiv	r0, r0, r1
   16900:	ldr	r1, [fp, #8]
   16904:	cmp	r0, r1
   16908:	blt	16928 <__assert_fail@plt+0x5a34>
   1690c:	b	16940 <__assert_fail@plt+0x5a4c>
   16910:	ldr	r0, [fp, #8]
   16914:	movw	r1, #32767	; 0x7fff
   16918:	sdiv	r0, r1, r0
   1691c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16920:	cmp	r0, r1
   16924:	bge	16940 <__assert_fail@plt+0x5a4c>
   16928:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1692c:	ldr	r1, [fp, #8]
   16930:	mul	r0, r0, r1
   16934:	sxth	r0, r0
   16938:	str	r0, [fp, #-28]	; 0xffffffe4
   1693c:	b	17724 <__assert_fail@plt+0x6830>
   16940:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16944:	ldr	r1, [fp, #8]
   16948:	mul	r0, r0, r1
   1694c:	sxth	r0, r0
   16950:	str	r0, [fp, #-28]	; 0xffffffe4
   16954:	b	17728 <__assert_fail@plt+0x6834>
   16958:	ldr	r0, [fp, #8]
   1695c:	cmp	r0, #0
   16960:	bge	16a70 <__assert_fail@plt+0x5b7c>
   16964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16968:	cmp	r0, #0
   1696c:	bge	169f8 <__assert_fail@plt+0x5b04>
   16970:	b	16974 <__assert_fail@plt+0x5a80>
   16974:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16978:	ldr	r1, [fp, #8]
   1697c:	movw	r2, #65535	; 0xffff
   16980:	sdiv	r1, r2, r1
   16984:	cmp	r0, r1
   16988:	blt	16b0c <__assert_fail@plt+0x5c18>
   1698c:	b	16b24 <__assert_fail@plt+0x5c30>
   16990:	b	16994 <__assert_fail@plt+0x5aa0>
   16994:	ldr	r0, [pc, #3512]	; 17754 <__assert_fail@plt+0x6860>
   16998:	ldr	r1, [fp, #8]
   1699c:	cmp	r1, r0
   169a0:	blt	169b8 <__assert_fail@plt+0x5ac4>
   169a4:	b	169c4 <__assert_fail@plt+0x5ad0>
   169a8:	ldr	r0, [fp, #8]
   169ac:	movw	r1, #0
   169b0:	cmp	r1, r0
   169b4:	bge	169c4 <__assert_fail@plt+0x5ad0>
   169b8:	movw	r0, #0
   169bc:	str	r0, [sp, #76]	; 0x4c
   169c0:	b	169dc <__assert_fail@plt+0x5ae8>
   169c4:	ldr	r0, [fp, #8]
   169c8:	movw	r1, #0
   169cc:	sub	r0, r1, r0
   169d0:	movw	r1, #65535	; 0xffff
   169d4:	sdiv	r0, r1, r0
   169d8:	str	r0, [sp, #76]	; 0x4c
   169dc:	ldr	r0, [sp, #76]	; 0x4c
   169e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   169e4:	mvn	r2, #0
   169e8:	sub	r1, r2, r1
   169ec:	cmp	r0, r1
   169f0:	ble	16b0c <__assert_fail@plt+0x5c18>
   169f4:	b	16b24 <__assert_fail@plt+0x5c30>
   169f8:	b	169fc <__assert_fail@plt+0x5b08>
   169fc:	b	16a54 <__assert_fail@plt+0x5b60>
   16a00:	b	16a54 <__assert_fail@plt+0x5b60>
   16a04:	ldr	r0, [fp, #8]
   16a08:	cmn	r0, #1
   16a0c:	bne	16a54 <__assert_fail@plt+0x5b60>
   16a10:	b	16a14 <__assert_fail@plt+0x5b20>
   16a14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a18:	add	r0, r0, #0
   16a1c:	movw	r1, #0
   16a20:	cmp	r1, r0
   16a24:	blt	16b0c <__assert_fail@plt+0x5c18>
   16a28:	b	16b24 <__assert_fail@plt+0x5c30>
   16a2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a30:	movw	r1, #0
   16a34:	cmp	r1, r0
   16a38:	bge	16b24 <__assert_fail@plt+0x5c30>
   16a3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a40:	sub	r0, r0, #1
   16a44:	mvn	r1, #0
   16a48:	cmp	r1, r0
   16a4c:	blt	16b0c <__assert_fail@plt+0x5c18>
   16a50:	b	16b24 <__assert_fail@plt+0x5c30>
   16a54:	ldr	r0, [fp, #8]
   16a58:	movw	r1, #0
   16a5c:	sdiv	r0, r1, r0
   16a60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a64:	cmp	r0, r1
   16a68:	blt	16b0c <__assert_fail@plt+0x5c18>
   16a6c:	b	16b24 <__assert_fail@plt+0x5c30>
   16a70:	ldr	r0, [fp, #8]
   16a74:	cmp	r0, #0
   16a78:	bne	16a80 <__assert_fail@plt+0x5b8c>
   16a7c:	b	16b24 <__assert_fail@plt+0x5c30>
   16a80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a84:	cmp	r0, #0
   16a88:	bge	16af4 <__assert_fail@plt+0x5c00>
   16a8c:	b	16a90 <__assert_fail@plt+0x5b9c>
   16a90:	b	16ad8 <__assert_fail@plt+0x5be4>
   16a94:	b	16ad8 <__assert_fail@plt+0x5be4>
   16a98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a9c:	cmn	r0, #1
   16aa0:	bne	16ad8 <__assert_fail@plt+0x5be4>
   16aa4:	b	16aa8 <__assert_fail@plt+0x5bb4>
   16aa8:	ldr	r0, [fp, #8]
   16aac:	add	r0, r0, #0
   16ab0:	movw	r1, #0
   16ab4:	cmp	r1, r0
   16ab8:	blt	16b0c <__assert_fail@plt+0x5c18>
   16abc:	b	16b24 <__assert_fail@plt+0x5c30>
   16ac0:	ldr	r0, [fp, #8]
   16ac4:	sub	r0, r0, #1
   16ac8:	mvn	r1, #0
   16acc:	cmp	r1, r0
   16ad0:	blt	16b0c <__assert_fail@plt+0x5c18>
   16ad4:	b	16b24 <__assert_fail@plt+0x5c30>
   16ad8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16adc:	movw	r1, #0
   16ae0:	sdiv	r0, r1, r0
   16ae4:	ldr	r1, [fp, #8]
   16ae8:	cmp	r0, r1
   16aec:	blt	16b0c <__assert_fail@plt+0x5c18>
   16af0:	b	16b24 <__assert_fail@plt+0x5c30>
   16af4:	ldr	r0, [fp, #8]
   16af8:	movw	r1, #65535	; 0xffff
   16afc:	sdiv	r0, r1, r0
   16b00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b04:	cmp	r0, r1
   16b08:	bge	16b24 <__assert_fail@plt+0x5c30>
   16b0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b10:	ldr	r1, [fp, #8]
   16b14:	mul	r0, r0, r1
   16b18:	uxth	r0, r0
   16b1c:	str	r0, [fp, #-28]	; 0xffffffe4
   16b20:	b	17724 <__assert_fail@plt+0x6830>
   16b24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b28:	ldr	r1, [fp, #8]
   16b2c:	mul	r0, r0, r1
   16b30:	uxth	r0, r0
   16b34:	str	r0, [fp, #-28]	; 0xffffffe4
   16b38:	b	17728 <__assert_fail@plt+0x6834>
   16b3c:	b	16b40 <__assert_fail@plt+0x5c4c>
   16b40:	b	16b44 <__assert_fail@plt+0x5c50>
   16b44:	ldr	r0, [fp, #8]
   16b48:	cmp	r0, #0
   16b4c:	bge	16c50 <__assert_fail@plt+0x5d5c>
   16b50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b54:	cmp	r0, #0
   16b58:	bge	16be4 <__assert_fail@plt+0x5cf0>
   16b5c:	b	16b60 <__assert_fail@plt+0x5c6c>
   16b60:	ldr	r0, [pc, #3048]	; 17750 <__assert_fail@plt+0x685c>
   16b64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b68:	ldr	r2, [fp, #8]
   16b6c:	sdiv	r0, r0, r2
   16b70:	cmp	r1, r0
   16b74:	blt	16ce0 <__assert_fail@plt+0x5dec>
   16b78:	b	16cf4 <__assert_fail@plt+0x5e00>
   16b7c:	b	16b80 <__assert_fail@plt+0x5c8c>
   16b80:	ldr	r0, [pc, #3020]	; 17754 <__assert_fail@plt+0x6860>
   16b84:	ldr	r1, [fp, #8]
   16b88:	cmp	r1, r0
   16b8c:	blt	16ba4 <__assert_fail@plt+0x5cb0>
   16b90:	b	16bb0 <__assert_fail@plt+0x5cbc>
   16b94:	ldr	r0, [fp, #8]
   16b98:	movw	r1, #0
   16b9c:	cmp	r1, r0
   16ba0:	bge	16bb0 <__assert_fail@plt+0x5cbc>
   16ba4:	movw	r0, #0
   16ba8:	str	r0, [sp, #72]	; 0x48
   16bac:	b	16bc8 <__assert_fail@plt+0x5cd4>
   16bb0:	ldr	r0, [pc, #2968]	; 17750 <__assert_fail@plt+0x685c>
   16bb4:	ldr	r1, [fp, #8]
   16bb8:	movw	r2, #0
   16bbc:	sub	r1, r2, r1
   16bc0:	sdiv	r0, r0, r1
   16bc4:	str	r0, [sp, #72]	; 0x48
   16bc8:	ldr	r0, [sp, #72]	; 0x48
   16bcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16bd0:	mvn	r2, #0
   16bd4:	sub	r1, r2, r1
   16bd8:	cmp	r0, r1
   16bdc:	ble	16ce0 <__assert_fail@plt+0x5dec>
   16be0:	b	16cf4 <__assert_fail@plt+0x5e00>
   16be4:	ldr	r0, [fp, #8]
   16be8:	cmn	r0, #1
   16bec:	bne	16c34 <__assert_fail@plt+0x5d40>
   16bf0:	b	16bf4 <__assert_fail@plt+0x5d00>
   16bf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bf8:	add	r0, r0, #-2147483648	; 0x80000000
   16bfc:	movw	r1, #0
   16c00:	cmp	r1, r0
   16c04:	blt	16ce0 <__assert_fail@plt+0x5dec>
   16c08:	b	16cf4 <__assert_fail@plt+0x5e00>
   16c0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c10:	movw	r1, #0
   16c14:	cmp	r1, r0
   16c18:	bge	16cf4 <__assert_fail@plt+0x5e00>
   16c1c:	ldr	r0, [pc, #2860]	; 17750 <__assert_fail@plt+0x685c>
   16c20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c24:	sub	r1, r1, #1
   16c28:	cmp	r0, r1
   16c2c:	blt	16ce0 <__assert_fail@plt+0x5dec>
   16c30:	b	16cf4 <__assert_fail@plt+0x5e00>
   16c34:	ldr	r0, [pc, #2844]	; 17758 <__assert_fail@plt+0x6864>
   16c38:	ldr	r1, [fp, #8]
   16c3c:	sdiv	r0, r0, r1
   16c40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c44:	cmp	r0, r1
   16c48:	blt	16ce0 <__assert_fail@plt+0x5dec>
   16c4c:	b	16cf4 <__assert_fail@plt+0x5e00>
   16c50:	ldr	r0, [fp, #8]
   16c54:	cmp	r0, #0
   16c58:	bne	16c60 <__assert_fail@plt+0x5d6c>
   16c5c:	b	16cf4 <__assert_fail@plt+0x5e00>
   16c60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c64:	cmp	r0, #0
   16c68:	bge	16cc8 <__assert_fail@plt+0x5dd4>
   16c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c70:	cmn	r0, #1
   16c74:	bne	16cac <__assert_fail@plt+0x5db8>
   16c78:	b	16c7c <__assert_fail@plt+0x5d88>
   16c7c:	ldr	r0, [fp, #8]
   16c80:	add	r0, r0, #-2147483648	; 0x80000000
   16c84:	movw	r1, #0
   16c88:	cmp	r1, r0
   16c8c:	blt	16ce0 <__assert_fail@plt+0x5dec>
   16c90:	b	16cf4 <__assert_fail@plt+0x5e00>
   16c94:	ldr	r0, [pc, #2740]	; 17750 <__assert_fail@plt+0x685c>
   16c98:	ldr	r1, [fp, #8]
   16c9c:	sub	r1, r1, #1
   16ca0:	cmp	r0, r1
   16ca4:	blt	16ce0 <__assert_fail@plt+0x5dec>
   16ca8:	b	16cf4 <__assert_fail@plt+0x5e00>
   16cac:	ldr	r0, [pc, #2724]	; 17758 <__assert_fail@plt+0x6864>
   16cb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16cb4:	sdiv	r0, r0, r1
   16cb8:	ldr	r1, [fp, #8]
   16cbc:	cmp	r0, r1
   16cc0:	blt	16ce0 <__assert_fail@plt+0x5dec>
   16cc4:	b	16cf4 <__assert_fail@plt+0x5e00>
   16cc8:	ldr	r0, [pc, #2688]	; 17750 <__assert_fail@plt+0x685c>
   16ccc:	ldr	r1, [fp, #8]
   16cd0:	sdiv	r0, r0, r1
   16cd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16cd8:	cmp	r0, r1
   16cdc:	bge	16cf4 <__assert_fail@plt+0x5e00>
   16ce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ce4:	ldr	r1, [fp, #8]
   16ce8:	mul	r0, r0, r1
   16cec:	str	r0, [fp, #-28]	; 0xffffffe4
   16cf0:	b	17724 <__assert_fail@plt+0x6830>
   16cf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cf8:	ldr	r1, [fp, #8]
   16cfc:	mul	r0, r0, r1
   16d00:	str	r0, [fp, #-28]	; 0xffffffe4
   16d04:	b	17728 <__assert_fail@plt+0x6834>
   16d08:	ldr	r0, [fp, #8]
   16d0c:	cmp	r0, #0
   16d10:	bge	16e20 <__assert_fail@plt+0x5f2c>
   16d14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d18:	cmp	r0, #0
   16d1c:	bge	16da8 <__assert_fail@plt+0x5eb4>
   16d20:	b	16d40 <__assert_fail@plt+0x5e4c>
   16d24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d28:	ldr	r1, [fp, #8]
   16d2c:	mvn	r2, #0
   16d30:	udiv	r1, r2, r1
   16d34:	cmp	r0, r1
   16d38:	bcc	16ebc <__assert_fail@plt+0x5fc8>
   16d3c:	b	16ed0 <__assert_fail@plt+0x5fdc>
   16d40:	b	16d44 <__assert_fail@plt+0x5e50>
   16d44:	ldr	r0, [pc, #2568]	; 17754 <__assert_fail@plt+0x6860>
   16d48:	ldr	r1, [fp, #8]
   16d4c:	cmp	r1, r0
   16d50:	blt	16d68 <__assert_fail@plt+0x5e74>
   16d54:	b	16d74 <__assert_fail@plt+0x5e80>
   16d58:	ldr	r0, [fp, #8]
   16d5c:	movw	r1, #0
   16d60:	cmp	r1, r0
   16d64:	bge	16d74 <__assert_fail@plt+0x5e80>
   16d68:	movw	r0, #1
   16d6c:	str	r0, [sp, #68]	; 0x44
   16d70:	b	16d8c <__assert_fail@plt+0x5e98>
   16d74:	ldr	r0, [fp, #8]
   16d78:	movw	r1, #0
   16d7c:	sub	r0, r1, r0
   16d80:	mvn	r1, #0
   16d84:	udiv	r0, r1, r0
   16d88:	str	r0, [sp, #68]	; 0x44
   16d8c:	ldr	r0, [sp, #68]	; 0x44
   16d90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d94:	mvn	r2, #0
   16d98:	sub	r1, r2, r1
   16d9c:	cmp	r0, r1
   16da0:	bls	16ebc <__assert_fail@plt+0x5fc8>
   16da4:	b	16ed0 <__assert_fail@plt+0x5fdc>
   16da8:	b	16dac <__assert_fail@plt+0x5eb8>
   16dac:	b	16e04 <__assert_fail@plt+0x5f10>
   16db0:	b	16e04 <__assert_fail@plt+0x5f10>
   16db4:	ldr	r0, [fp, #8]
   16db8:	cmn	r0, #1
   16dbc:	bne	16e04 <__assert_fail@plt+0x5f10>
   16dc0:	b	16dc4 <__assert_fail@plt+0x5ed0>
   16dc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16dc8:	add	r0, r0, #0
   16dcc:	movw	r1, #0
   16dd0:	cmp	r1, r0
   16dd4:	blt	16ebc <__assert_fail@plt+0x5fc8>
   16dd8:	b	16ed0 <__assert_fail@plt+0x5fdc>
   16ddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16de0:	movw	r1, #0
   16de4:	cmp	r1, r0
   16de8:	bge	16ed0 <__assert_fail@plt+0x5fdc>
   16dec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16df0:	sub	r0, r0, #1
   16df4:	mvn	r1, #0
   16df8:	cmp	r1, r0
   16dfc:	blt	16ebc <__assert_fail@plt+0x5fc8>
   16e00:	b	16ed0 <__assert_fail@plt+0x5fdc>
   16e04:	ldr	r0, [fp, #8]
   16e08:	movw	r1, #0
   16e0c:	sdiv	r0, r1, r0
   16e10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e14:	cmp	r0, r1
   16e18:	blt	16ebc <__assert_fail@plt+0x5fc8>
   16e1c:	b	16ed0 <__assert_fail@plt+0x5fdc>
   16e20:	ldr	r0, [fp, #8]
   16e24:	cmp	r0, #0
   16e28:	bne	16e30 <__assert_fail@plt+0x5f3c>
   16e2c:	b	16ed0 <__assert_fail@plt+0x5fdc>
   16e30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e34:	cmp	r0, #0
   16e38:	bge	16ea4 <__assert_fail@plt+0x5fb0>
   16e3c:	b	16e40 <__assert_fail@plt+0x5f4c>
   16e40:	b	16e88 <__assert_fail@plt+0x5f94>
   16e44:	b	16e88 <__assert_fail@plt+0x5f94>
   16e48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e4c:	cmn	r0, #1
   16e50:	bne	16e88 <__assert_fail@plt+0x5f94>
   16e54:	b	16e58 <__assert_fail@plt+0x5f64>
   16e58:	ldr	r0, [fp, #8]
   16e5c:	add	r0, r0, #0
   16e60:	movw	r1, #0
   16e64:	cmp	r1, r0
   16e68:	blt	16ebc <__assert_fail@plt+0x5fc8>
   16e6c:	b	16ed0 <__assert_fail@plt+0x5fdc>
   16e70:	ldr	r0, [fp, #8]
   16e74:	sub	r0, r0, #1
   16e78:	mvn	r1, #0
   16e7c:	cmp	r1, r0
   16e80:	blt	16ebc <__assert_fail@plt+0x5fc8>
   16e84:	b	16ed0 <__assert_fail@plt+0x5fdc>
   16e88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e8c:	movw	r1, #0
   16e90:	sdiv	r0, r1, r0
   16e94:	ldr	r1, [fp, #8]
   16e98:	cmp	r0, r1
   16e9c:	blt	16ebc <__assert_fail@plt+0x5fc8>
   16ea0:	b	16ed0 <__assert_fail@plt+0x5fdc>
   16ea4:	ldr	r0, [fp, #8]
   16ea8:	mvn	r1, #0
   16eac:	udiv	r0, r1, r0
   16eb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16eb4:	cmp	r0, r1
   16eb8:	bcs	16ed0 <__assert_fail@plt+0x5fdc>
   16ebc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ec0:	ldr	r1, [fp, #8]
   16ec4:	mul	r0, r0, r1
   16ec8:	str	r0, [fp, #-28]	; 0xffffffe4
   16ecc:	b	17724 <__assert_fail@plt+0x6830>
   16ed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ed4:	ldr	r1, [fp, #8]
   16ed8:	mul	r0, r0, r1
   16edc:	str	r0, [fp, #-28]	; 0xffffffe4
   16ee0:	b	17728 <__assert_fail@plt+0x6834>
   16ee4:	b	16ee8 <__assert_fail@plt+0x5ff4>
   16ee8:	b	16eec <__assert_fail@plt+0x5ff8>
   16eec:	ldr	r0, [fp, #8]
   16ef0:	cmp	r0, #0
   16ef4:	bge	16ff8 <__assert_fail@plt+0x6104>
   16ef8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16efc:	cmp	r0, #0
   16f00:	bge	16f8c <__assert_fail@plt+0x6098>
   16f04:	b	16f08 <__assert_fail@plt+0x6014>
   16f08:	ldr	r0, [pc, #2112]	; 17750 <__assert_fail@plt+0x685c>
   16f0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f10:	ldr	r2, [fp, #8]
   16f14:	sdiv	r0, r0, r2
   16f18:	cmp	r1, r0
   16f1c:	blt	17088 <__assert_fail@plt+0x6194>
   16f20:	b	1709c <__assert_fail@plt+0x61a8>
   16f24:	b	16f28 <__assert_fail@plt+0x6034>
   16f28:	ldr	r0, [pc, #2084]	; 17754 <__assert_fail@plt+0x6860>
   16f2c:	ldr	r1, [fp, #8]
   16f30:	cmp	r1, r0
   16f34:	blt	16f4c <__assert_fail@plt+0x6058>
   16f38:	b	16f58 <__assert_fail@plt+0x6064>
   16f3c:	ldr	r0, [fp, #8]
   16f40:	movw	r1, #0
   16f44:	cmp	r1, r0
   16f48:	bge	16f58 <__assert_fail@plt+0x6064>
   16f4c:	movw	r0, #0
   16f50:	str	r0, [sp, #64]	; 0x40
   16f54:	b	16f70 <__assert_fail@plt+0x607c>
   16f58:	ldr	r0, [pc, #2032]	; 17750 <__assert_fail@plt+0x685c>
   16f5c:	ldr	r1, [fp, #8]
   16f60:	movw	r2, #0
   16f64:	sub	r1, r2, r1
   16f68:	sdiv	r0, r0, r1
   16f6c:	str	r0, [sp, #64]	; 0x40
   16f70:	ldr	r0, [sp, #64]	; 0x40
   16f74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f78:	mvn	r2, #0
   16f7c:	sub	r1, r2, r1
   16f80:	cmp	r0, r1
   16f84:	ble	17088 <__assert_fail@plt+0x6194>
   16f88:	b	1709c <__assert_fail@plt+0x61a8>
   16f8c:	ldr	r0, [fp, #8]
   16f90:	cmn	r0, #1
   16f94:	bne	16fdc <__assert_fail@plt+0x60e8>
   16f98:	b	16f9c <__assert_fail@plt+0x60a8>
   16f9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fa0:	add	r0, r0, #-2147483648	; 0x80000000
   16fa4:	movw	r1, #0
   16fa8:	cmp	r1, r0
   16fac:	blt	17088 <__assert_fail@plt+0x6194>
   16fb0:	b	1709c <__assert_fail@plt+0x61a8>
   16fb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fb8:	movw	r1, #0
   16fbc:	cmp	r1, r0
   16fc0:	bge	1709c <__assert_fail@plt+0x61a8>
   16fc4:	ldr	r0, [pc, #1924]	; 17750 <__assert_fail@plt+0x685c>
   16fc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16fcc:	sub	r1, r1, #1
   16fd0:	cmp	r0, r1
   16fd4:	blt	17088 <__assert_fail@plt+0x6194>
   16fd8:	b	1709c <__assert_fail@plt+0x61a8>
   16fdc:	ldr	r0, [pc, #1908]	; 17758 <__assert_fail@plt+0x6864>
   16fe0:	ldr	r1, [fp, #8]
   16fe4:	sdiv	r0, r0, r1
   16fe8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16fec:	cmp	r0, r1
   16ff0:	blt	17088 <__assert_fail@plt+0x6194>
   16ff4:	b	1709c <__assert_fail@plt+0x61a8>
   16ff8:	ldr	r0, [fp, #8]
   16ffc:	cmp	r0, #0
   17000:	bne	17008 <__assert_fail@plt+0x6114>
   17004:	b	1709c <__assert_fail@plt+0x61a8>
   17008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1700c:	cmp	r0, #0
   17010:	bge	17070 <__assert_fail@plt+0x617c>
   17014:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17018:	cmn	r0, #1
   1701c:	bne	17054 <__assert_fail@plt+0x6160>
   17020:	b	17024 <__assert_fail@plt+0x6130>
   17024:	ldr	r0, [fp, #8]
   17028:	add	r0, r0, #-2147483648	; 0x80000000
   1702c:	movw	r1, #0
   17030:	cmp	r1, r0
   17034:	blt	17088 <__assert_fail@plt+0x6194>
   17038:	b	1709c <__assert_fail@plt+0x61a8>
   1703c:	ldr	r0, [pc, #1804]	; 17750 <__assert_fail@plt+0x685c>
   17040:	ldr	r1, [fp, #8]
   17044:	sub	r1, r1, #1
   17048:	cmp	r0, r1
   1704c:	blt	17088 <__assert_fail@plt+0x6194>
   17050:	b	1709c <__assert_fail@plt+0x61a8>
   17054:	ldr	r0, [pc, #1788]	; 17758 <__assert_fail@plt+0x6864>
   17058:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1705c:	sdiv	r0, r0, r1
   17060:	ldr	r1, [fp, #8]
   17064:	cmp	r0, r1
   17068:	blt	17088 <__assert_fail@plt+0x6194>
   1706c:	b	1709c <__assert_fail@plt+0x61a8>
   17070:	ldr	r0, [pc, #1752]	; 17750 <__assert_fail@plt+0x685c>
   17074:	ldr	r1, [fp, #8]
   17078:	sdiv	r0, r0, r1
   1707c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17080:	cmp	r0, r1
   17084:	bge	1709c <__assert_fail@plt+0x61a8>
   17088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1708c:	ldr	r1, [fp, #8]
   17090:	mul	r0, r0, r1
   17094:	str	r0, [fp, #-28]	; 0xffffffe4
   17098:	b	17724 <__assert_fail@plt+0x6830>
   1709c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170a0:	ldr	r1, [fp, #8]
   170a4:	mul	r0, r0, r1
   170a8:	str	r0, [fp, #-28]	; 0xffffffe4
   170ac:	b	17728 <__assert_fail@plt+0x6834>
   170b0:	ldr	r0, [fp, #8]
   170b4:	cmp	r0, #0
   170b8:	bge	171c8 <__assert_fail@plt+0x62d4>
   170bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170c0:	cmp	r0, #0
   170c4:	bge	17150 <__assert_fail@plt+0x625c>
   170c8:	b	170e8 <__assert_fail@plt+0x61f4>
   170cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170d0:	ldr	r1, [fp, #8]
   170d4:	mvn	r2, #0
   170d8:	udiv	r1, r2, r1
   170dc:	cmp	r0, r1
   170e0:	bcc	17264 <__assert_fail@plt+0x6370>
   170e4:	b	17278 <__assert_fail@plt+0x6384>
   170e8:	b	170ec <__assert_fail@plt+0x61f8>
   170ec:	ldr	r0, [pc, #1632]	; 17754 <__assert_fail@plt+0x6860>
   170f0:	ldr	r1, [fp, #8]
   170f4:	cmp	r1, r0
   170f8:	blt	17110 <__assert_fail@plt+0x621c>
   170fc:	b	1711c <__assert_fail@plt+0x6228>
   17100:	ldr	r0, [fp, #8]
   17104:	movw	r1, #0
   17108:	cmp	r1, r0
   1710c:	bge	1711c <__assert_fail@plt+0x6228>
   17110:	movw	r0, #1
   17114:	str	r0, [sp, #60]	; 0x3c
   17118:	b	17134 <__assert_fail@plt+0x6240>
   1711c:	ldr	r0, [fp, #8]
   17120:	movw	r1, #0
   17124:	sub	r0, r1, r0
   17128:	mvn	r1, #0
   1712c:	udiv	r0, r1, r0
   17130:	str	r0, [sp, #60]	; 0x3c
   17134:	ldr	r0, [sp, #60]	; 0x3c
   17138:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1713c:	mvn	r2, #0
   17140:	sub	r1, r2, r1
   17144:	cmp	r0, r1
   17148:	bls	17264 <__assert_fail@plt+0x6370>
   1714c:	b	17278 <__assert_fail@plt+0x6384>
   17150:	b	17154 <__assert_fail@plt+0x6260>
   17154:	b	171ac <__assert_fail@plt+0x62b8>
   17158:	b	171ac <__assert_fail@plt+0x62b8>
   1715c:	ldr	r0, [fp, #8]
   17160:	cmn	r0, #1
   17164:	bne	171ac <__assert_fail@plt+0x62b8>
   17168:	b	1716c <__assert_fail@plt+0x6278>
   1716c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17170:	add	r0, r0, #0
   17174:	movw	r1, #0
   17178:	cmp	r1, r0
   1717c:	blt	17264 <__assert_fail@plt+0x6370>
   17180:	b	17278 <__assert_fail@plt+0x6384>
   17184:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17188:	movw	r1, #0
   1718c:	cmp	r1, r0
   17190:	bge	17278 <__assert_fail@plt+0x6384>
   17194:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17198:	sub	r0, r0, #1
   1719c:	mvn	r1, #0
   171a0:	cmp	r1, r0
   171a4:	blt	17264 <__assert_fail@plt+0x6370>
   171a8:	b	17278 <__assert_fail@plt+0x6384>
   171ac:	ldr	r0, [fp, #8]
   171b0:	movw	r1, #0
   171b4:	sdiv	r0, r1, r0
   171b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   171bc:	cmp	r0, r1
   171c0:	blt	17264 <__assert_fail@plt+0x6370>
   171c4:	b	17278 <__assert_fail@plt+0x6384>
   171c8:	ldr	r0, [fp, #8]
   171cc:	cmp	r0, #0
   171d0:	bne	171d8 <__assert_fail@plt+0x62e4>
   171d4:	b	17278 <__assert_fail@plt+0x6384>
   171d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171dc:	cmp	r0, #0
   171e0:	bge	1724c <__assert_fail@plt+0x6358>
   171e4:	b	171e8 <__assert_fail@plt+0x62f4>
   171e8:	b	17230 <__assert_fail@plt+0x633c>
   171ec:	b	17230 <__assert_fail@plt+0x633c>
   171f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171f4:	cmn	r0, #1
   171f8:	bne	17230 <__assert_fail@plt+0x633c>
   171fc:	b	17200 <__assert_fail@plt+0x630c>
   17200:	ldr	r0, [fp, #8]
   17204:	add	r0, r0, #0
   17208:	movw	r1, #0
   1720c:	cmp	r1, r0
   17210:	blt	17264 <__assert_fail@plt+0x6370>
   17214:	b	17278 <__assert_fail@plt+0x6384>
   17218:	ldr	r0, [fp, #8]
   1721c:	sub	r0, r0, #1
   17220:	mvn	r1, #0
   17224:	cmp	r1, r0
   17228:	blt	17264 <__assert_fail@plt+0x6370>
   1722c:	b	17278 <__assert_fail@plt+0x6384>
   17230:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17234:	movw	r1, #0
   17238:	sdiv	r0, r1, r0
   1723c:	ldr	r1, [fp, #8]
   17240:	cmp	r0, r1
   17244:	blt	17264 <__assert_fail@plt+0x6370>
   17248:	b	17278 <__assert_fail@plt+0x6384>
   1724c:	ldr	r0, [fp, #8]
   17250:	mvn	r1, #0
   17254:	udiv	r0, r1, r0
   17258:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1725c:	cmp	r0, r1
   17260:	bcs	17278 <__assert_fail@plt+0x6384>
   17264:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17268:	ldr	r1, [fp, #8]
   1726c:	mul	r0, r0, r1
   17270:	str	r0, [fp, #-28]	; 0xffffffe4
   17274:	b	17724 <__assert_fail@plt+0x6830>
   17278:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1727c:	ldr	r1, [fp, #8]
   17280:	mul	r0, r0, r1
   17284:	str	r0, [fp, #-28]	; 0xffffffe4
   17288:	b	17728 <__assert_fail@plt+0x6834>
   1728c:	b	17290 <__assert_fail@plt+0x639c>
   17290:	ldr	r0, [fp, #8]
   17294:	cmp	r0, #0
   17298:	bge	17400 <__assert_fail@plt+0x650c>
   1729c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172a0:	cmp	r0, #0
   172a4:	bge	1737c <__assert_fail@plt+0x6488>
   172a8:	b	172ac <__assert_fail@plt+0x63b8>
   172ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172b0:	ldr	r1, [fp, #8]
   172b4:	asr	r3, r1, #31
   172b8:	mvn	r2, #0
   172bc:	mvn	ip, #-2147483648	; 0x80000000
   172c0:	str	r0, [sp, #56]	; 0x38
   172c4:	mov	r0, r2
   172c8:	str	r1, [sp, #52]	; 0x34
   172cc:	mov	r1, ip
   172d0:	ldr	r2, [sp, #52]	; 0x34
   172d4:	bl	19cd4 <__assert_fail@plt+0x8de0>
   172d8:	ldr	r2, [sp, #56]	; 0x38
   172dc:	subs	r0, r2, r0
   172e0:	rscs	r1, r1, r2, asr #31
   172e4:	blt	174c8 <__assert_fail@plt+0x65d4>
   172e8:	b	174dc <__assert_fail@plt+0x65e8>
   172ec:	b	172f0 <__assert_fail@plt+0x63fc>
   172f0:	ldr	r0, [pc, #1116]	; 17754 <__assert_fail@plt+0x6860>
   172f4:	ldr	r1, [fp, #8]
   172f8:	cmp	r1, r0
   172fc:	blt	17314 <__assert_fail@plt+0x6420>
   17300:	b	17328 <__assert_fail@plt+0x6434>
   17304:	ldr	r0, [fp, #8]
   17308:	movw	r1, #0
   1730c:	cmp	r1, r0
   17310:	bge	17328 <__assert_fail@plt+0x6434>
   17314:	mov	r0, #0
   17318:	mvn	r1, #0
   1731c:	str	r1, [sp, #48]	; 0x30
   17320:	str	r0, [sp, #44]	; 0x2c
   17324:	b	1735c <__assert_fail@plt+0x6468>
   17328:	ldr	r0, [fp, #8]
   1732c:	rsb	r0, r0, #0
   17330:	asr	r3, r0, #31
   17334:	mvn	r1, #0
   17338:	mvn	r2, #-2147483648	; 0x80000000
   1733c:	str	r0, [sp, #40]	; 0x28
   17340:	mov	r0, r1
   17344:	mov	r1, r2
   17348:	ldr	r2, [sp, #40]	; 0x28
   1734c:	bl	19cd4 <__assert_fail@plt+0x8de0>
   17350:	str	r0, [sp, #48]	; 0x30
   17354:	str	r1, [sp, #44]	; 0x2c
   17358:	b	1735c <__assert_fail@plt+0x6468>
   1735c:	ldr	r0, [sp, #44]	; 0x2c
   17360:	ldr	r1, [sp, #48]	; 0x30
   17364:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17368:	mvn	r2, r2
   1736c:	subs	r1, r2, r1
   17370:	rscs	r0, r0, r2, asr #31
   17374:	bge	174c8 <__assert_fail@plt+0x65d4>
   17378:	b	174dc <__assert_fail@plt+0x65e8>
   1737c:	ldr	r0, [fp, #8]
   17380:	cmn	r0, #1
   17384:	bne	173c8 <__assert_fail@plt+0x64d4>
   17388:	b	1738c <__assert_fail@plt+0x6498>
   1738c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17390:	mov	r1, #-2147483648	; 0x80000000
   17394:	add	r1, r1, r0, asr #31
   17398:	rsbs	r0, r0, #0
   1739c:	rscs	r1, r1, #0
   173a0:	blt	174c8 <__assert_fail@plt+0x65d4>
   173a4:	b	174dc <__assert_fail@plt+0x65e8>
   173a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173ac:	movw	r1, #0
   173b0:	cmp	r1, r0
   173b4:	bge	174dc <__assert_fail@plt+0x65e8>
   173b8:	mov	r0, #0
   173bc:	cmp	r0, #0
   173c0:	bne	174c8 <__assert_fail@plt+0x65d4>
   173c4:	b	174dc <__assert_fail@plt+0x65e8>
   173c8:	ldr	r0, [fp, #8]
   173cc:	asr	r3, r0, #31
   173d0:	mov	r1, #0
   173d4:	mov	r2, #-2147483648	; 0x80000000
   173d8:	str	r0, [sp, #36]	; 0x24
   173dc:	mov	r0, r1
   173e0:	mov	r1, r2
   173e4:	ldr	r2, [sp, #36]	; 0x24
   173e8:	bl	19cd4 <__assert_fail@plt+0x8de0>
   173ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   173f0:	subs	r0, r0, r2
   173f4:	sbcs	r1, r1, r2, asr #31
   173f8:	blt	174c8 <__assert_fail@plt+0x65d4>
   173fc:	b	174dc <__assert_fail@plt+0x65e8>
   17400:	ldr	r0, [fp, #8]
   17404:	cmp	r0, #0
   17408:	bne	17410 <__assert_fail@plt+0x651c>
   1740c:	b	174dc <__assert_fail@plt+0x65e8>
   17410:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17414:	cmp	r0, #0
   17418:	bge	17490 <__assert_fail@plt+0x659c>
   1741c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17420:	cmn	r0, #1
   17424:	bne	17458 <__assert_fail@plt+0x6564>
   17428:	b	1742c <__assert_fail@plt+0x6538>
   1742c:	ldr	r0, [fp, #8]
   17430:	mov	r1, #-2147483648	; 0x80000000
   17434:	add	r1, r1, r0, asr #31
   17438:	rsbs	r0, r0, #0
   1743c:	rscs	r1, r1, #0
   17440:	blt	174c8 <__assert_fail@plt+0x65d4>
   17444:	b	174dc <__assert_fail@plt+0x65e8>
   17448:	mov	r0, #0
   1744c:	cmp	r0, #0
   17450:	bne	174c8 <__assert_fail@plt+0x65d4>
   17454:	b	174dc <__assert_fail@plt+0x65e8>
   17458:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1745c:	asr	r3, r0, #31
   17460:	mov	r1, #0
   17464:	mov	r2, #-2147483648	; 0x80000000
   17468:	str	r0, [sp, #32]
   1746c:	mov	r0, r1
   17470:	mov	r1, r2
   17474:	ldr	r2, [sp, #32]
   17478:	bl	19cd4 <__assert_fail@plt+0x8de0>
   1747c:	ldr	r2, [fp, #8]
   17480:	subs	r0, r0, r2
   17484:	sbcs	r1, r1, r2, asr #31
   17488:	blt	174c8 <__assert_fail@plt+0x65d4>
   1748c:	b	174dc <__assert_fail@plt+0x65e8>
   17490:	ldr	r0, [fp, #8]
   17494:	asr	r3, r0, #31
   17498:	mvn	r1, #0
   1749c:	mvn	r2, #-2147483648	; 0x80000000
   174a0:	str	r0, [sp, #28]
   174a4:	mov	r0, r1
   174a8:	mov	r1, r2
   174ac:	ldr	r2, [sp, #28]
   174b0:	bl	19cd4 <__assert_fail@plt+0x8de0>
   174b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   174b8:	subs	r0, r0, r2
   174bc:	sbcs	r1, r1, r2, asr #31
   174c0:	bge	174dc <__assert_fail@plt+0x65e8>
   174c4:	b	174c8 <__assert_fail@plt+0x65d4>
   174c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174cc:	ldr	r1, [fp, #8]
   174d0:	mul	r0, r0, r1
   174d4:	str	r0, [fp, #-28]	; 0xffffffe4
   174d8:	b	17724 <__assert_fail@plt+0x6830>
   174dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174e0:	ldr	r1, [fp, #8]
   174e4:	mul	r0, r0, r1
   174e8:	str	r0, [fp, #-28]	; 0xffffffe4
   174ec:	b	17728 <__assert_fail@plt+0x6834>
   174f0:	ldr	r0, [fp, #8]
   174f4:	cmp	r0, #0
   174f8:	bge	17648 <__assert_fail@plt+0x6754>
   174fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17500:	cmp	r0, #0
   17504:	bge	175d0 <__assert_fail@plt+0x66dc>
   17508:	b	17548 <__assert_fail@plt+0x6654>
   1750c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17510:	ldr	r1, [fp, #8]
   17514:	asr	r3, r1, #31
   17518:	mvn	r2, #0
   1751c:	str	r0, [sp, #24]
   17520:	mov	r0, r2
   17524:	str	r1, [sp, #20]
   17528:	mov	r1, r2
   1752c:	ldr	r2, [sp, #20]
   17530:	bl	19da8 <__assert_fail@plt+0x8eb4>
   17534:	ldr	r2, [sp, #24]
   17538:	subs	r0, r2, r0
   1753c:	rscs	r1, r1, r2, asr #31
   17540:	bcc	176fc <__assert_fail@plt+0x6808>
   17544:	b	17710 <__assert_fail@plt+0x681c>
   17548:	b	1754c <__assert_fail@plt+0x6658>
   1754c:	ldr	r0, [pc, #512]	; 17754 <__assert_fail@plt+0x6860>
   17550:	ldr	r1, [fp, #8]
   17554:	cmp	r1, r0
   17558:	blt	17570 <__assert_fail@plt+0x667c>
   1755c:	b	17584 <__assert_fail@plt+0x6690>
   17560:	ldr	r0, [fp, #8]
   17564:	movw	r1, #0
   17568:	cmp	r1, r0
   1756c:	bge	17584 <__assert_fail@plt+0x6690>
   17570:	mov	r0, #1
   17574:	mvn	r1, #0
   17578:	str	r1, [sp, #16]
   1757c:	str	r0, [sp, #12]
   17580:	b	175b0 <__assert_fail@plt+0x66bc>
   17584:	ldr	r0, [fp, #8]
   17588:	rsb	r0, r0, #0
   1758c:	asr	r3, r0, #31
   17590:	mvn	r1, #0
   17594:	str	r0, [sp, #8]
   17598:	mov	r0, r1
   1759c:	ldr	r2, [sp, #8]
   175a0:	bl	19da8 <__assert_fail@plt+0x8eb4>
   175a4:	str	r0, [sp, #16]
   175a8:	str	r1, [sp, #12]
   175ac:	b	175b0 <__assert_fail@plt+0x66bc>
   175b0:	ldr	r0, [sp, #12]
   175b4:	ldr	r1, [sp, #16]
   175b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   175bc:	mvn	r2, r2
   175c0:	subs	r1, r2, r1
   175c4:	rscs	r0, r0, r2, asr #31
   175c8:	bcs	176fc <__assert_fail@plt+0x6808>
   175cc:	b	17710 <__assert_fail@plt+0x681c>
   175d0:	b	175d4 <__assert_fail@plt+0x66e0>
   175d4:	b	1762c <__assert_fail@plt+0x6738>
   175d8:	b	1762c <__assert_fail@plt+0x6738>
   175dc:	ldr	r0, [fp, #8]
   175e0:	cmn	r0, #1
   175e4:	bne	1762c <__assert_fail@plt+0x6738>
   175e8:	b	175ec <__assert_fail@plt+0x66f8>
   175ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175f0:	add	r0, r0, #0
   175f4:	movw	r1, #0
   175f8:	cmp	r1, r0
   175fc:	blt	176fc <__assert_fail@plt+0x6808>
   17600:	b	17710 <__assert_fail@plt+0x681c>
   17604:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17608:	movw	r1, #0
   1760c:	cmp	r1, r0
   17610:	bge	17710 <__assert_fail@plt+0x681c>
   17614:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17618:	sub	r0, r0, #1
   1761c:	mvn	r1, #0
   17620:	cmp	r1, r0
   17624:	blt	176fc <__assert_fail@plt+0x6808>
   17628:	b	17710 <__assert_fail@plt+0x681c>
   1762c:	ldr	r0, [fp, #8]
   17630:	movw	r1, #0
   17634:	sdiv	r0, r1, r0
   17638:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1763c:	cmp	r0, r1
   17640:	blt	176fc <__assert_fail@plt+0x6808>
   17644:	b	17710 <__assert_fail@plt+0x681c>
   17648:	ldr	r0, [fp, #8]
   1764c:	cmp	r0, #0
   17650:	bne	17658 <__assert_fail@plt+0x6764>
   17654:	b	17710 <__assert_fail@plt+0x681c>
   17658:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1765c:	cmp	r0, #0
   17660:	bge	176cc <__assert_fail@plt+0x67d8>
   17664:	b	17668 <__assert_fail@plt+0x6774>
   17668:	b	176b0 <__assert_fail@plt+0x67bc>
   1766c:	b	176b0 <__assert_fail@plt+0x67bc>
   17670:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17674:	cmn	r0, #1
   17678:	bne	176b0 <__assert_fail@plt+0x67bc>
   1767c:	b	17680 <__assert_fail@plt+0x678c>
   17680:	ldr	r0, [fp, #8]
   17684:	add	r0, r0, #0
   17688:	movw	r1, #0
   1768c:	cmp	r1, r0
   17690:	blt	176fc <__assert_fail@plt+0x6808>
   17694:	b	17710 <__assert_fail@plt+0x681c>
   17698:	ldr	r0, [fp, #8]
   1769c:	sub	r0, r0, #1
   176a0:	mvn	r1, #0
   176a4:	cmp	r1, r0
   176a8:	blt	176fc <__assert_fail@plt+0x6808>
   176ac:	b	17710 <__assert_fail@plt+0x681c>
   176b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176b4:	movw	r1, #0
   176b8:	sdiv	r0, r1, r0
   176bc:	ldr	r1, [fp, #8]
   176c0:	cmp	r0, r1
   176c4:	blt	176fc <__assert_fail@plt+0x6808>
   176c8:	b	17710 <__assert_fail@plt+0x681c>
   176cc:	ldr	r0, [fp, #8]
   176d0:	asr	r3, r0, #31
   176d4:	mvn	r1, #0
   176d8:	str	r0, [sp, #4]
   176dc:	mov	r0, r1
   176e0:	ldr	r2, [sp, #4]
   176e4:	bl	19da8 <__assert_fail@plt+0x8eb4>
   176e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   176ec:	subs	r0, r0, r2
   176f0:	sbcs	r1, r1, r2, asr #31
   176f4:	bcs	17710 <__assert_fail@plt+0x681c>
   176f8:	b	176fc <__assert_fail@plt+0x6808>
   176fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17700:	ldr	r1, [fp, #8]
   17704:	mul	r0, r0, r1
   17708:	str	r0, [fp, #-28]	; 0xffffffe4
   1770c:	b	17724 <__assert_fail@plt+0x6830>
   17710:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17714:	ldr	r1, [fp, #8]
   17718:	mul	r0, r0, r1
   1771c:	str	r0, [fp, #-28]	; 0xffffffe4
   17720:	b	17728 <__assert_fail@plt+0x6834>
   17724:	bl	17900 <__assert_fail@plt+0x6a0c>
   17728:	ldr	r0, [fp, #-4]
   1772c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17730:	bl	14c60 <__assert_fail@plt+0x3d6c>
   17734:	str	r0, [fp, #-4]
   17738:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1773c:	ldr	r1, [fp, #-8]
   17740:	str	r0, [r1]
   17744:	ldr	r0, [fp, #-4]
   17748:	mov	sp, fp
   1774c:	pop	{fp, pc}
   17750:	svcvc	0x00ffffff
   17754:	andhi	r0, r0, r1
   17758:	andhi	r0, r0, r0
   1775c:			; <UNDEFINED> instruction: 0xffff8000
   17760:	push	{fp, lr}
   17764:	mov	fp, sp
   17768:	sub	sp, sp, #8
   1776c:	str	r0, [sp, #4]
   17770:	ldr	r0, [sp, #4]
   17774:	movw	r1, #1
   17778:	bl	17784 <__assert_fail@plt+0x6890>
   1777c:	mov	sp, fp
   17780:	pop	{fp, pc}
   17784:	push	{fp, lr}
   17788:	mov	fp, sp
   1778c:	sub	sp, sp, #8
   17790:	str	r0, [sp, #4]
   17794:	str	r1, [sp]
   17798:	ldr	r0, [sp, #4]
   1779c:	ldr	r1, [sp]
   177a0:	bl	17950 <__assert_fail@plt+0x6a5c>
   177a4:	bl	14bec <__assert_fail@plt+0x3cf8>
   177a8:	mov	sp, fp
   177ac:	pop	{fp, pc}
   177b0:	push	{fp, lr}
   177b4:	mov	fp, sp
   177b8:	sub	sp, sp, #8
   177bc:	str	r0, [sp, #4]
   177c0:	ldr	r0, [sp, #4]
   177c4:	movw	r1, #1
   177c8:	bl	177d4 <__assert_fail@plt+0x68e0>
   177cc:	mov	sp, fp
   177d0:	pop	{fp, pc}
   177d4:	push	{fp, lr}
   177d8:	mov	fp, sp
   177dc:	sub	sp, sp, #8
   177e0:	str	r0, [sp, #4]
   177e4:	str	r1, [sp]
   177e8:	ldr	r0, [sp, #4]
   177ec:	ldr	r1, [sp]
   177f0:	bl	193cc <__assert_fail@plt+0x84d8>
   177f4:	bl	14bec <__assert_fail@plt+0x3cf8>
   177f8:	mov	sp, fp
   177fc:	pop	{fp, pc}
   17800:	push	{fp, lr}
   17804:	mov	fp, sp
   17808:	sub	sp, sp, #16
   1780c:	str	r0, [fp, #-4]
   17810:	str	r1, [sp, #8]
   17814:	ldr	r0, [sp, #8]
   17818:	bl	14bc8 <__assert_fail@plt+0x3cd4>
   1781c:	ldr	r1, [fp, #-4]
   17820:	ldr	r2, [sp, #8]
   17824:	str	r0, [sp, #4]
   17828:	bl	10d44 <memcpy@plt>
   1782c:	ldr	r0, [sp, #4]
   17830:	mov	sp, fp
   17834:	pop	{fp, pc}
   17838:	push	{fp, lr}
   1783c:	mov	fp, sp
   17840:	sub	sp, sp, #16
   17844:	str	r0, [fp, #-4]
   17848:	str	r1, [sp, #8]
   1784c:	ldr	r0, [sp, #8]
   17850:	bl	14c1c <__assert_fail@plt+0x3d28>
   17854:	ldr	r1, [fp, #-4]
   17858:	ldr	r2, [sp, #8]
   1785c:	str	r0, [sp, #4]
   17860:	bl	10d44 <memcpy@plt>
   17864:	ldr	r0, [sp, #4]
   17868:	mov	sp, fp
   1786c:	pop	{fp, pc}
   17870:	push	{fp, lr}
   17874:	mov	fp, sp
   17878:	sub	sp, sp, #16
   1787c:	str	r0, [fp, #-4]
   17880:	str	r1, [sp, #8]
   17884:	ldr	r0, [sp, #8]
   17888:	add	r0, r0, #1
   1788c:	bl	14c1c <__assert_fail@plt+0x3d28>
   17890:	str	r0, [sp, #4]
   17894:	ldr	r0, [sp, #4]
   17898:	ldr	r1, [sp, #8]
   1789c:	add	r0, r0, r1
   178a0:	movw	r1, #0
   178a4:	strb	r1, [r0]
   178a8:	ldr	r0, [sp, #4]
   178ac:	ldr	r1, [fp, #-4]
   178b0:	ldr	r2, [sp, #8]
   178b4:	str	r0, [sp]
   178b8:	bl	10d44 <memcpy@plt>
   178bc:	ldr	r0, [sp]
   178c0:	mov	sp, fp
   178c4:	pop	{fp, pc}
   178c8:	push	{fp, lr}
   178cc:	mov	fp, sp
   178d0:	sub	sp, sp, #8
   178d4:	str	r0, [sp, #4]
   178d8:	ldr	r0, [sp, #4]
   178dc:	ldr	r1, [sp, #4]
   178e0:	str	r0, [sp]
   178e4:	mov	r0, r1
   178e8:	bl	10e28 <strlen@plt>
   178ec:	add	r1, r0, #1
   178f0:	ldr	r0, [sp]
   178f4:	bl	17800 <__assert_fail@plt+0x690c>
   178f8:	mov	sp, fp
   178fc:	pop	{fp, pc}
   17900:	push	{fp, lr}
   17904:	mov	fp, sp
   17908:	sub	sp, sp, #8
   1790c:	movw	r0, #45268	; 0xb0d4
   17910:	movt	r0, #2
   17914:	ldr	r0, [r0]
   17918:	movw	r1, #42890	; 0xa78a
   1791c:	movt	r1, #1
   17920:	str	r0, [sp, #4]
   17924:	mov	r0, r1
   17928:	bl	10e1c <gettext@plt>
   1792c:	ldr	r1, [sp, #4]
   17930:	str	r0, [sp]
   17934:	mov	r0, r1
   17938:	movw	r1, #0
   1793c:	movw	r2, #41859	; 0xa383
   17940:	movt	r2, #1
   17944:	ldr	r3, [sp]
   17948:	bl	10dbc <error@plt>
   1794c:	bl	10ee8 <abort@plt>
   17950:	push	{fp, lr}
   17954:	mov	fp, sp
   17958:	sub	sp, sp, #16
   1795c:	str	r0, [sp, #8]
   17960:	str	r1, [sp, #4]
   17964:	ldr	r0, [sp, #8]
   17968:	cmp	r0, #0
   1796c:	beq	1797c <__assert_fail@plt+0x6a88>
   17970:	ldr	r0, [sp, #4]
   17974:	cmp	r0, #0
   17978:	bne	17988 <__assert_fail@plt+0x6a94>
   1797c:	movw	r0, #1
   17980:	str	r0, [sp, #4]
   17984:	str	r0, [sp, #8]
   17988:	ldr	r0, [sp, #4]
   1798c:	cmp	r0, #0
   17990:	beq	179c4 <__assert_fail@plt+0x6ad0>
   17994:	ldr	r0, [pc, #76]	; 179e8 <__assert_fail@plt+0x6af4>
   17998:	ldr	r1, [sp, #4]
   1799c:	udiv	r0, r0, r1
   179a0:	ldr	r1, [sp, #8]
   179a4:	cmp	r0, r1
   179a8:	bcs	179c4 <__assert_fail@plt+0x6ad0>
   179ac:	bl	10e40 <__errno_location@plt>
   179b0:	movw	r1, #12
   179b4:	str	r1, [r0]
   179b8:	movw	r0, #0
   179bc:	str	r0, [fp, #-4]
   179c0:	b	179dc <__assert_fail@plt+0x6ae8>
   179c4:	ldr	r0, [sp, #8]
   179c8:	ldr	r1, [sp, #4]
   179cc:	bl	10cd8 <calloc@plt>
   179d0:	str	r0, [sp]
   179d4:	ldr	r0, [sp]
   179d8:	str	r0, [fp, #-4]
   179dc:	ldr	r0, [fp, #-4]
   179e0:	mov	sp, fp
   179e4:	pop	{fp, pc}
   179e8:	svcvc	0x00ffffff
   179ec:	push	{fp, lr}
   179f0:	mov	fp, sp
   179f4:	sub	sp, sp, #8
   179f8:	str	r0, [sp]
   179fc:	ldr	r0, [sp]
   17a00:	movw	r1, #0
   17a04:	cmp	r0, r1
   17a08:	beq	17a1c <__assert_fail@plt+0x6b28>
   17a0c:	ldr	r0, [sp]
   17a10:	bl	10de0 <__freading@plt>
   17a14:	cmp	r0, #0
   17a18:	bne	17a2c <__assert_fail@plt+0x6b38>
   17a1c:	ldr	r0, [sp]
   17a20:	bl	10d14 <fflush@plt>
   17a24:	str	r0, [sp, #4]
   17a28:	b	17a40 <__assert_fail@plt+0x6b4c>
   17a2c:	ldr	r0, [sp]
   17a30:	bl	17a4c <__assert_fail@plt+0x6b58>
   17a34:	ldr	r0, [sp]
   17a38:	bl	10d14 <fflush@plt>
   17a3c:	str	r0, [sp, #4]
   17a40:	ldr	r0, [sp, #4]
   17a44:	mov	sp, fp
   17a48:	pop	{fp, pc}
   17a4c:	push	{fp, lr}
   17a50:	mov	fp, sp
   17a54:	sub	sp, sp, #8
   17a58:	str	r0, [sp, #4]
   17a5c:	ldr	r0, [sp, #4]
   17a60:	ldr	r0, [r0]
   17a64:	and	r0, r0, #256	; 0x100
   17a68:	cmp	r0, #0
   17a6c:	beq	17a90 <__assert_fail@plt+0x6b9c>
   17a70:	ldr	r0, [sp, #4]
   17a74:	mov	r1, sp
   17a78:	mov	r2, #1
   17a7c:	str	r2, [r1]
   17a80:	mov	r1, #0
   17a84:	mov	r2, r1
   17a88:	mov	r3, r1
   17a8c:	bl	17ad8 <__assert_fail@plt+0x6be4>
   17a90:	mov	sp, fp
   17a94:	pop	{fp, pc}
   17a98:	push	{fp, lr}
   17a9c:	mov	fp, sp
   17aa0:	sub	sp, sp, #16
   17aa4:	str	r0, [fp, #-4]
   17aa8:	bl	10e40 <__errno_location@plt>
   17aac:	ldr	r0, [r0]
   17ab0:	str	r0, [sp, #8]
   17ab4:	ldr	r0, [fp, #-4]
   17ab8:	bl	10d20 <free@plt>
   17abc:	ldr	r0, [sp, #8]
   17ac0:	str	r0, [sp, #4]
   17ac4:	bl	10e40 <__errno_location@plt>
   17ac8:	ldr	r1, [sp, #4]
   17acc:	str	r1, [r0]
   17ad0:	mov	sp, fp
   17ad4:	pop	{fp, pc}
   17ad8:	push	{fp, lr}
   17adc:	mov	fp, sp
   17ae0:	sub	sp, sp, #32
   17ae4:	ldr	r1, [fp, #8]
   17ae8:	str	r0, [fp, #-8]
   17aec:	str	r3, [sp, #20]
   17af0:	str	r2, [sp, #16]
   17af4:	ldr	r0, [fp, #-8]
   17af8:	ldr	r0, [r0, #8]
   17afc:	ldr	r2, [fp, #-8]
   17b00:	ldr	r2, [r2, #4]
   17b04:	cmp	r0, r2
   17b08:	bne	17bb4 <__assert_fail@plt+0x6cc0>
   17b0c:	ldr	r0, [fp, #-8]
   17b10:	ldr	r0, [r0, #20]
   17b14:	ldr	r1, [fp, #-8]
   17b18:	ldr	r1, [r1, #16]
   17b1c:	cmp	r0, r1
   17b20:	bne	17bb4 <__assert_fail@plt+0x6cc0>
   17b24:	ldr	r0, [fp, #-8]
   17b28:	ldr	r0, [r0, #36]	; 0x24
   17b2c:	movw	r1, #0
   17b30:	cmp	r0, r1
   17b34:	bne	17bb4 <__assert_fail@plt+0x6cc0>
   17b38:	ldr	r0, [fp, #-8]
   17b3c:	bl	10e64 <fileno@plt>
   17b40:	ldr	r2, [sp, #16]
   17b44:	ldr	r3, [sp, #20]
   17b48:	ldr	r1, [fp, #8]
   17b4c:	mov	ip, sp
   17b50:	str	r1, [ip]
   17b54:	bl	10d8c <lseek64@plt>
   17b58:	str	r1, [sp, #12]
   17b5c:	str	r0, [sp, #8]
   17b60:	ldr	r0, [sp, #8]
   17b64:	ldr	r1, [sp, #12]
   17b68:	and	r0, r0, r1
   17b6c:	cmn	r0, #1
   17b70:	bne	17b84 <__assert_fail@plt+0x6c90>
   17b74:	b	17b78 <__assert_fail@plt+0x6c84>
   17b78:	mvn	r0, #0
   17b7c:	str	r0, [fp, #-4]
   17b80:	b	17bd4 <__assert_fail@plt+0x6ce0>
   17b84:	ldr	r0, [fp, #-8]
   17b88:	ldr	r1, [r0]
   17b8c:	bic	r1, r1, #16
   17b90:	str	r1, [r0]
   17b94:	ldr	r0, [sp, #8]
   17b98:	ldr	r1, [sp, #12]
   17b9c:	ldr	r2, [fp, #-8]
   17ba0:	str	r1, [r2, #84]	; 0x54
   17ba4:	str	r0, [r2, #80]	; 0x50
   17ba8:	movw	r0, #0
   17bac:	str	r0, [fp, #-4]
   17bb0:	b	17bd4 <__assert_fail@plt+0x6ce0>
   17bb4:	ldr	r0, [fp, #-8]
   17bb8:	ldr	r2, [sp, #16]
   17bbc:	ldr	r3, [sp, #20]
   17bc0:	ldr	r1, [fp, #8]
   17bc4:	mov	ip, sp
   17bc8:	str	r1, [ip]
   17bcc:	bl	10e7c <fseeko64@plt>
   17bd0:	str	r0, [fp, #-4]
   17bd4:	ldr	r0, [fp, #-4]
   17bd8:	mov	sp, fp
   17bdc:	pop	{fp, pc}
   17be0:	push	{fp, lr}
   17be4:	mov	fp, sp
   17be8:	sub	sp, sp, #16
   17bec:	str	r0, [sp, #8]
   17bf0:	ldr	r0, [sp, #8]
   17bf4:	cmp	r0, #0
   17bf8:	bne	17c04 <__assert_fail@plt+0x6d10>
   17bfc:	movw	r0, #1
   17c00:	str	r0, [sp, #8]
   17c04:	ldr	r0, [pc, #64]	; 17c4c <__assert_fail@plt+0x6d58>
   17c08:	ldr	r1, [sp, #8]
   17c0c:	cmp	r0, r1
   17c10:	bcs	17c2c <__assert_fail@plt+0x6d38>
   17c14:	bl	10e40 <__errno_location@plt>
   17c18:	movw	r1, #12
   17c1c:	str	r1, [r0]
   17c20:	movw	r0, #0
   17c24:	str	r0, [fp, #-4]
   17c28:	b	17c40 <__assert_fail@plt+0x6d4c>
   17c2c:	ldr	r0, [sp, #8]
   17c30:	bl	10dc8 <malloc@plt>
   17c34:	str	r0, [sp, #4]
   17c38:	ldr	r0, [sp, #4]
   17c3c:	str	r0, [fp, #-4]
   17c40:	ldr	r0, [fp, #-4]
   17c44:	mov	sp, fp
   17c48:	pop	{fp, pc}
   17c4c:	svcvc	0x00ffffff
   17c50:	push	{fp, lr}
   17c54:	mov	fp, sp
   17c58:	sub	sp, sp, #32
   17c5c:	str	r0, [fp, #-8]
   17c60:	str	r1, [fp, #-12]
   17c64:	str	r2, [sp, #16]
   17c68:	str	r3, [sp, #12]
   17c6c:	ldr	r0, [fp, #-8]
   17c70:	movw	r1, #0
   17c74:	cmp	r0, r1
   17c78:	bne	17c84 <__assert_fail@plt+0x6d90>
   17c7c:	add	r0, sp, #4
   17c80:	str	r0, [fp, #-8]
   17c84:	ldr	r0, [fp, #-8]
   17c88:	ldr	r1, [fp, #-12]
   17c8c:	ldr	r2, [sp, #16]
   17c90:	ldr	r3, [sp, #12]
   17c94:	bl	10db0 <mbrtowc@plt>
   17c98:	str	r0, [sp, #8]
   17c9c:	ldr	r0, [sp, #8]
   17ca0:	mvn	r1, #1
   17ca4:	cmp	r1, r0
   17ca8:	bhi	17cec <__assert_fail@plt+0x6df8>
   17cac:	ldr	r0, [sp, #16]
   17cb0:	cmp	r0, #0
   17cb4:	beq	17cec <__assert_fail@plt+0x6df8>
   17cb8:	movw	r0, #0
   17cbc:	bl	1926c <__assert_fail@plt+0x8378>
   17cc0:	tst	r0, #1
   17cc4:	bne	17cec <__assert_fail@plt+0x6df8>
   17cc8:	ldr	r0, [fp, #-12]
   17ccc:	ldrb	r0, [r0]
   17cd0:	strb	r0, [sp, #3]
   17cd4:	ldrb	r0, [sp, #3]
   17cd8:	ldr	r1, [fp, #-8]
   17cdc:	str	r0, [r1]
   17ce0:	movw	r0, #1
   17ce4:	str	r0, [fp, #-4]
   17ce8:	b	17cf4 <__assert_fail@plt+0x6e00>
   17cec:	ldr	r0, [sp, #8]
   17cf0:	str	r0, [fp, #-4]
   17cf4:	ldr	r0, [fp, #-4]
   17cf8:	mov	sp, fp
   17cfc:	pop	{fp, pc}
   17d00:	push	{fp, lr}
   17d04:	mov	fp, sp
   17d08:	sub	sp, sp, #16
   17d0c:	str	r0, [sp, #8]
   17d10:	str	r1, [sp, #4]
   17d14:	ldr	r0, [sp, #8]
   17d18:	movw	r1, #0
   17d1c:	cmp	r0, r1
   17d20:	bne	17d34 <__assert_fail@plt+0x6e40>
   17d24:	ldr	r0, [sp, #4]
   17d28:	bl	17be0 <__assert_fail@plt+0x6cec>
   17d2c:	str	r0, [fp, #-4]
   17d30:	b	17d94 <__assert_fail@plt+0x6ea0>
   17d34:	ldr	r0, [sp, #4]
   17d38:	cmp	r0, #0
   17d3c:	bne	17d54 <__assert_fail@plt+0x6e60>
   17d40:	ldr	r0, [sp, #8]
   17d44:	bl	17a98 <__assert_fail@plt+0x6ba4>
   17d48:	movw	r0, #0
   17d4c:	str	r0, [fp, #-4]
   17d50:	b	17d94 <__assert_fail@plt+0x6ea0>
   17d54:	ldr	r0, [pc, #68]	; 17da0 <__assert_fail@plt+0x6eac>
   17d58:	ldr	r1, [sp, #4]
   17d5c:	cmp	r0, r1
   17d60:	bcs	17d7c <__assert_fail@plt+0x6e88>
   17d64:	bl	10e40 <__errno_location@plt>
   17d68:	movw	r1, #12
   17d6c:	str	r1, [r0]
   17d70:	movw	r0, #0
   17d74:	str	r0, [fp, #-4]
   17d78:	b	17d94 <__assert_fail@plt+0x6ea0>
   17d7c:	ldr	r0, [sp, #8]
   17d80:	ldr	r1, [sp, #4]
   17d84:	bl	10d68 <realloc@plt>
   17d88:	str	r0, [sp]
   17d8c:	ldr	r0, [sp]
   17d90:	str	r0, [fp, #-4]
   17d94:	ldr	r0, [fp, #-4]
   17d98:	mov	sp, fp
   17d9c:	pop	{fp, pc}
   17da0:	svcvc	0x00ffffff
   17da4:	push	{fp, lr}
   17da8:	mov	fp, sp
   17dac:	sub	sp, sp, #96	; 0x60
   17db0:	str	r0, [fp, #-8]
   17db4:	str	r1, [fp, #-12]
   17db8:	str	r2, [fp, #-16]
   17dbc:	b	18174 <__assert_fail@plt+0x7280>
   17dc0:	b	17f94 <__assert_fail@plt+0x70a0>
   17dc4:	ldr	r0, [fp, #-16]
   17dc8:	cmp	r0, #0
   17dcc:	bcs	17ed0 <__assert_fail@plt+0x6fdc>
   17dd0:	ldr	r0, [fp, #-12]
   17dd4:	cmp	r0, #0
   17dd8:	bcs	17e60 <__assert_fail@plt+0x6f6c>
   17ddc:	b	17dfc <__assert_fail@plt+0x6f08>
   17de0:	ldr	r0, [fp, #-12]
   17de4:	ldr	r1, [fp, #-16]
   17de8:	movw	r2, #127	; 0x7f
   17dec:	udiv	r1, r2, r1
   17df0:	cmp	r0, r1
   17df4:	bcc	17f64 <__assert_fail@plt+0x7070>
   17df8:	b	17f7c <__assert_fail@plt+0x7088>
   17dfc:	b	17e10 <__assert_fail@plt+0x6f1c>
   17e00:	ldr	r0, [fp, #-16]
   17e04:	cmp	r0, #1
   17e08:	bcc	17e20 <__assert_fail@plt+0x6f2c>
   17e0c:	b	17e2c <__assert_fail@plt+0x6f38>
   17e10:	ldr	r0, [fp, #-16]
   17e14:	movw	r1, #0
   17e18:	cmp	r1, r0
   17e1c:	bcs	17e2c <__assert_fail@plt+0x6f38>
   17e20:	movw	r0, #0
   17e24:	str	r0, [fp, #-24]	; 0xffffffe8
   17e28:	b	17e44 <__assert_fail@plt+0x6f50>
   17e2c:	ldr	r0, [fp, #-16]
   17e30:	movw	r1, #0
   17e34:	sub	r0, r1, r0
   17e38:	movw	r1, #127	; 0x7f
   17e3c:	udiv	r0, r1, r0
   17e40:	str	r0, [fp, #-24]	; 0xffffffe8
   17e44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e48:	ldr	r1, [fp, #-12]
   17e4c:	mvn	r2, #0
   17e50:	sub	r1, r2, r1
   17e54:	cmp	r0, r1
   17e58:	bls	17f64 <__assert_fail@plt+0x7070>
   17e5c:	b	17f7c <__assert_fail@plt+0x7088>
   17e60:	ldr	r0, [fp, #-16]
   17e64:	cmn	r0, #1
   17e68:	bne	17eb4 <__assert_fail@plt+0x6fc0>
   17e6c:	b	17e8c <__assert_fail@plt+0x6f98>
   17e70:	ldr	r0, [fp, #-12]
   17e74:	mvn	r1, #127	; 0x7f
   17e78:	add	r0, r0, r1
   17e7c:	movw	r1, #0
   17e80:	cmp	r1, r0
   17e84:	bcc	17f64 <__assert_fail@plt+0x7070>
   17e88:	b	17f7c <__assert_fail@plt+0x7088>
   17e8c:	ldr	r0, [fp, #-12]
   17e90:	movw	r1, #0
   17e94:	cmp	r1, r0
   17e98:	bcs	17f7c <__assert_fail@plt+0x7088>
   17e9c:	ldr	r0, [fp, #-12]
   17ea0:	sub	r0, r0, #1
   17ea4:	movw	r1, #127	; 0x7f
   17ea8:	cmp	r1, r0
   17eac:	bcc	17f64 <__assert_fail@plt+0x7070>
   17eb0:	b	17f7c <__assert_fail@plt+0x7088>
   17eb4:	ldr	r0, [fp, #-16]
   17eb8:	mvn	r1, #127	; 0x7f
   17ebc:	udiv	r0, r1, r0
   17ec0:	ldr	r1, [fp, #-12]
   17ec4:	cmp	r0, r1
   17ec8:	bcc	17f64 <__assert_fail@plt+0x7070>
   17ecc:	b	17f7c <__assert_fail@plt+0x7088>
   17ed0:	ldr	r0, [fp, #-16]
   17ed4:	cmp	r0, #0
   17ed8:	bne	17ee0 <__assert_fail@plt+0x6fec>
   17edc:	b	17f7c <__assert_fail@plt+0x7088>
   17ee0:	ldr	r0, [fp, #-12]
   17ee4:	cmp	r0, #0
   17ee8:	bcs	17f4c <__assert_fail@plt+0x7058>
   17eec:	ldr	r0, [fp, #-12]
   17ef0:	cmn	r0, #1
   17ef4:	bne	17f30 <__assert_fail@plt+0x703c>
   17ef8:	b	17f18 <__assert_fail@plt+0x7024>
   17efc:	ldr	r0, [fp, #-16]
   17f00:	mvn	r1, #127	; 0x7f
   17f04:	add	r0, r0, r1
   17f08:	movw	r1, #0
   17f0c:	cmp	r1, r0
   17f10:	bcc	17f64 <__assert_fail@plt+0x7070>
   17f14:	b	17f7c <__assert_fail@plt+0x7088>
   17f18:	ldr	r0, [fp, #-16]
   17f1c:	sub	r0, r0, #1
   17f20:	movw	r1, #127	; 0x7f
   17f24:	cmp	r1, r0
   17f28:	bcc	17f64 <__assert_fail@plt+0x7070>
   17f2c:	b	17f7c <__assert_fail@plt+0x7088>
   17f30:	ldr	r0, [fp, #-12]
   17f34:	mvn	r1, #127	; 0x7f
   17f38:	udiv	r0, r1, r0
   17f3c:	ldr	r1, [fp, #-16]
   17f40:	cmp	r0, r1
   17f44:	bcc	17f64 <__assert_fail@plt+0x7070>
   17f48:	b	17f7c <__assert_fail@plt+0x7088>
   17f4c:	ldr	r0, [fp, #-16]
   17f50:	movw	r1, #127	; 0x7f
   17f54:	udiv	r0, r1, r0
   17f58:	ldr	r1, [fp, #-12]
   17f5c:	cmp	r0, r1
   17f60:	bcs	17f7c <__assert_fail@plt+0x7088>
   17f64:	ldr	r0, [fp, #-12]
   17f68:	ldr	r1, [fp, #-16]
   17f6c:	mul	r0, r0, r1
   17f70:	sxtb	r0, r0
   17f74:	str	r0, [fp, #-20]	; 0xffffffec
   17f78:	b	190a4 <__assert_fail@plt+0x81b0>
   17f7c:	ldr	r0, [fp, #-12]
   17f80:	ldr	r1, [fp, #-16]
   17f84:	mul	r0, r0, r1
   17f88:	sxtb	r0, r0
   17f8c:	str	r0, [fp, #-20]	; 0xffffffec
   17f90:	b	190bc <__assert_fail@plt+0x81c8>
   17f94:	ldr	r0, [fp, #-16]
   17f98:	cmp	r0, #0
   17f9c:	bcs	180a8 <__assert_fail@plt+0x71b4>
   17fa0:	ldr	r0, [fp, #-12]
   17fa4:	cmp	r0, #0
   17fa8:	bcs	18030 <__assert_fail@plt+0x713c>
   17fac:	b	17fcc <__assert_fail@plt+0x70d8>
   17fb0:	ldr	r0, [fp, #-12]
   17fb4:	ldr	r1, [fp, #-16]
   17fb8:	movw	r2, #255	; 0xff
   17fbc:	udiv	r1, r2, r1
   17fc0:	cmp	r0, r1
   17fc4:	bcc	18144 <__assert_fail@plt+0x7250>
   17fc8:	b	1815c <__assert_fail@plt+0x7268>
   17fcc:	b	17fe0 <__assert_fail@plt+0x70ec>
   17fd0:	ldr	r0, [fp, #-16]
   17fd4:	cmp	r0, #1
   17fd8:	bcc	17ff0 <__assert_fail@plt+0x70fc>
   17fdc:	b	17ffc <__assert_fail@plt+0x7108>
   17fe0:	ldr	r0, [fp, #-16]
   17fe4:	movw	r1, #0
   17fe8:	cmp	r1, r0
   17fec:	bcs	17ffc <__assert_fail@plt+0x7108>
   17ff0:	movw	r0, #0
   17ff4:	str	r0, [fp, #-28]	; 0xffffffe4
   17ff8:	b	18014 <__assert_fail@plt+0x7120>
   17ffc:	ldr	r0, [fp, #-16]
   18000:	movw	r1, #0
   18004:	sub	r0, r1, r0
   18008:	movw	r1, #255	; 0xff
   1800c:	udiv	r0, r1, r0
   18010:	str	r0, [fp, #-28]	; 0xffffffe4
   18014:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18018:	ldr	r1, [fp, #-12]
   1801c:	mvn	r2, #0
   18020:	sub	r1, r2, r1
   18024:	cmp	r0, r1
   18028:	bls	18144 <__assert_fail@plt+0x7250>
   1802c:	b	1815c <__assert_fail@plt+0x7268>
   18030:	b	18038 <__assert_fail@plt+0x7144>
   18034:	b	1803c <__assert_fail@plt+0x7148>
   18038:	b	1808c <__assert_fail@plt+0x7198>
   1803c:	ldr	r0, [fp, #-16]
   18040:	cmn	r0, #1
   18044:	bne	1808c <__assert_fail@plt+0x7198>
   18048:	b	18064 <__assert_fail@plt+0x7170>
   1804c:	ldr	r0, [fp, #-12]
   18050:	add	r0, r0, #0
   18054:	movw	r1, #0
   18058:	cmp	r1, r0
   1805c:	bcc	18144 <__assert_fail@plt+0x7250>
   18060:	b	1815c <__assert_fail@plt+0x7268>
   18064:	ldr	r0, [fp, #-12]
   18068:	movw	r1, #0
   1806c:	cmp	r1, r0
   18070:	bcs	1815c <__assert_fail@plt+0x7268>
   18074:	ldr	r0, [fp, #-12]
   18078:	sub	r0, r0, #1
   1807c:	mvn	r1, #0
   18080:	cmp	r1, r0
   18084:	bcc	18144 <__assert_fail@plt+0x7250>
   18088:	b	1815c <__assert_fail@plt+0x7268>
   1808c:	ldr	r0, [fp, #-16]
   18090:	movw	r1, #0
   18094:	udiv	r0, r1, r0
   18098:	ldr	r1, [fp, #-12]
   1809c:	cmp	r0, r1
   180a0:	bcc	18144 <__assert_fail@plt+0x7250>
   180a4:	b	1815c <__assert_fail@plt+0x7268>
   180a8:	ldr	r0, [fp, #-16]
   180ac:	cmp	r0, #0
   180b0:	bne	180b8 <__assert_fail@plt+0x71c4>
   180b4:	b	1815c <__assert_fail@plt+0x7268>
   180b8:	ldr	r0, [fp, #-12]
   180bc:	cmp	r0, #0
   180c0:	bcs	1812c <__assert_fail@plt+0x7238>
   180c4:	b	180cc <__assert_fail@plt+0x71d8>
   180c8:	b	180d0 <__assert_fail@plt+0x71dc>
   180cc:	b	18110 <__assert_fail@plt+0x721c>
   180d0:	ldr	r0, [fp, #-12]
   180d4:	cmn	r0, #1
   180d8:	bne	18110 <__assert_fail@plt+0x721c>
   180dc:	b	180f8 <__assert_fail@plt+0x7204>
   180e0:	ldr	r0, [fp, #-16]
   180e4:	add	r0, r0, #0
   180e8:	movw	r1, #0
   180ec:	cmp	r1, r0
   180f0:	bcc	18144 <__assert_fail@plt+0x7250>
   180f4:	b	1815c <__assert_fail@plt+0x7268>
   180f8:	ldr	r0, [fp, #-16]
   180fc:	sub	r0, r0, #1
   18100:	mvn	r1, #0
   18104:	cmp	r1, r0
   18108:	bcc	18144 <__assert_fail@plt+0x7250>
   1810c:	b	1815c <__assert_fail@plt+0x7268>
   18110:	ldr	r0, [fp, #-12]
   18114:	movw	r1, #0
   18118:	udiv	r0, r1, r0
   1811c:	ldr	r1, [fp, #-16]
   18120:	cmp	r0, r1
   18124:	bcc	18144 <__assert_fail@plt+0x7250>
   18128:	b	1815c <__assert_fail@plt+0x7268>
   1812c:	ldr	r0, [fp, #-16]
   18130:	movw	r1, #255	; 0xff
   18134:	udiv	r0, r1, r0
   18138:	ldr	r1, [fp, #-12]
   1813c:	cmp	r0, r1
   18140:	bcs	1815c <__assert_fail@plt+0x7268>
   18144:	ldr	r0, [fp, #-12]
   18148:	ldr	r1, [fp, #-16]
   1814c:	mul	r0, r0, r1
   18150:	and	r0, r0, #255	; 0xff
   18154:	str	r0, [fp, #-20]	; 0xffffffec
   18158:	b	190a4 <__assert_fail@plt+0x81b0>
   1815c:	ldr	r0, [fp, #-12]
   18160:	ldr	r1, [fp, #-16]
   18164:	mul	r0, r0, r1
   18168:	and	r0, r0, #255	; 0xff
   1816c:	str	r0, [fp, #-20]	; 0xffffffec
   18170:	b	190bc <__assert_fail@plt+0x81c8>
   18174:	b	1852c <__assert_fail@plt+0x7638>
   18178:	b	1834c <__assert_fail@plt+0x7458>
   1817c:	ldr	r0, [fp, #-16]
   18180:	cmp	r0, #0
   18184:	bcs	18288 <__assert_fail@plt+0x7394>
   18188:	ldr	r0, [fp, #-12]
   1818c:	cmp	r0, #0
   18190:	bcs	18218 <__assert_fail@plt+0x7324>
   18194:	b	181b4 <__assert_fail@plt+0x72c0>
   18198:	ldr	r0, [fp, #-12]
   1819c:	ldr	r1, [fp, #-16]
   181a0:	movw	r2, #32767	; 0x7fff
   181a4:	udiv	r1, r2, r1
   181a8:	cmp	r0, r1
   181ac:	bcc	1831c <__assert_fail@plt+0x7428>
   181b0:	b	18334 <__assert_fail@plt+0x7440>
   181b4:	b	181c8 <__assert_fail@plt+0x72d4>
   181b8:	ldr	r0, [fp, #-16]
   181bc:	cmp	r0, #1
   181c0:	bcc	181d8 <__assert_fail@plt+0x72e4>
   181c4:	b	181e4 <__assert_fail@plt+0x72f0>
   181c8:	ldr	r0, [fp, #-16]
   181cc:	movw	r1, #0
   181d0:	cmp	r1, r0
   181d4:	bcs	181e4 <__assert_fail@plt+0x72f0>
   181d8:	movw	r0, #0
   181dc:	str	r0, [fp, #-32]	; 0xffffffe0
   181e0:	b	181fc <__assert_fail@plt+0x7308>
   181e4:	ldr	r0, [fp, #-16]
   181e8:	movw	r1, #0
   181ec:	sub	r0, r1, r0
   181f0:	movw	r1, #32767	; 0x7fff
   181f4:	udiv	r0, r1, r0
   181f8:	str	r0, [fp, #-32]	; 0xffffffe0
   181fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18200:	ldr	r1, [fp, #-12]
   18204:	mvn	r2, #0
   18208:	sub	r1, r2, r1
   1820c:	cmp	r0, r1
   18210:	bls	1831c <__assert_fail@plt+0x7428>
   18214:	b	18334 <__assert_fail@plt+0x7440>
   18218:	ldr	r0, [fp, #-16]
   1821c:	cmn	r0, #1
   18220:	bne	1826c <__assert_fail@plt+0x7378>
   18224:	b	18244 <__assert_fail@plt+0x7350>
   18228:	ldr	r0, [pc, #3760]	; 190e0 <__assert_fail@plt+0x81ec>
   1822c:	ldr	r1, [fp, #-12]
   18230:	add	r0, r1, r0
   18234:	movw	r1, #0
   18238:	cmp	r1, r0
   1823c:	bcc	1831c <__assert_fail@plt+0x7428>
   18240:	b	18334 <__assert_fail@plt+0x7440>
   18244:	ldr	r0, [fp, #-12]
   18248:	movw	r1, #0
   1824c:	cmp	r1, r0
   18250:	bcs	18334 <__assert_fail@plt+0x7440>
   18254:	ldr	r0, [fp, #-12]
   18258:	sub	r0, r0, #1
   1825c:	movw	r1, #32767	; 0x7fff
   18260:	cmp	r1, r0
   18264:	bcc	1831c <__assert_fail@plt+0x7428>
   18268:	b	18334 <__assert_fail@plt+0x7440>
   1826c:	ldr	r0, [pc, #3692]	; 190e0 <__assert_fail@plt+0x81ec>
   18270:	ldr	r1, [fp, #-16]
   18274:	udiv	r0, r0, r1
   18278:	ldr	r1, [fp, #-12]
   1827c:	cmp	r0, r1
   18280:	bcc	1831c <__assert_fail@plt+0x7428>
   18284:	b	18334 <__assert_fail@plt+0x7440>
   18288:	ldr	r0, [fp, #-16]
   1828c:	cmp	r0, #0
   18290:	bne	18298 <__assert_fail@plt+0x73a4>
   18294:	b	18334 <__assert_fail@plt+0x7440>
   18298:	ldr	r0, [fp, #-12]
   1829c:	cmp	r0, #0
   182a0:	bcs	18304 <__assert_fail@plt+0x7410>
   182a4:	ldr	r0, [fp, #-12]
   182a8:	cmn	r0, #1
   182ac:	bne	182e8 <__assert_fail@plt+0x73f4>
   182b0:	b	182d0 <__assert_fail@plt+0x73dc>
   182b4:	ldr	r0, [pc, #3620]	; 190e0 <__assert_fail@plt+0x81ec>
   182b8:	ldr	r1, [fp, #-16]
   182bc:	add	r0, r1, r0
   182c0:	movw	r1, #0
   182c4:	cmp	r1, r0
   182c8:	bcc	1831c <__assert_fail@plt+0x7428>
   182cc:	b	18334 <__assert_fail@plt+0x7440>
   182d0:	ldr	r0, [fp, #-16]
   182d4:	sub	r0, r0, #1
   182d8:	movw	r1, #32767	; 0x7fff
   182dc:	cmp	r1, r0
   182e0:	bcc	1831c <__assert_fail@plt+0x7428>
   182e4:	b	18334 <__assert_fail@plt+0x7440>
   182e8:	ldr	r0, [pc, #3568]	; 190e0 <__assert_fail@plt+0x81ec>
   182ec:	ldr	r1, [fp, #-12]
   182f0:	udiv	r0, r0, r1
   182f4:	ldr	r1, [fp, #-16]
   182f8:	cmp	r0, r1
   182fc:	bcc	1831c <__assert_fail@plt+0x7428>
   18300:	b	18334 <__assert_fail@plt+0x7440>
   18304:	ldr	r0, [fp, #-16]
   18308:	movw	r1, #32767	; 0x7fff
   1830c:	udiv	r0, r1, r0
   18310:	ldr	r1, [fp, #-12]
   18314:	cmp	r0, r1
   18318:	bcs	18334 <__assert_fail@plt+0x7440>
   1831c:	ldr	r0, [fp, #-12]
   18320:	ldr	r1, [fp, #-16]
   18324:	mul	r0, r0, r1
   18328:	sxth	r0, r0
   1832c:	str	r0, [fp, #-20]	; 0xffffffec
   18330:	b	190a4 <__assert_fail@plt+0x81b0>
   18334:	ldr	r0, [fp, #-12]
   18338:	ldr	r1, [fp, #-16]
   1833c:	mul	r0, r0, r1
   18340:	sxth	r0, r0
   18344:	str	r0, [fp, #-20]	; 0xffffffec
   18348:	b	190bc <__assert_fail@plt+0x81c8>
   1834c:	ldr	r0, [fp, #-16]
   18350:	cmp	r0, #0
   18354:	bcs	18460 <__assert_fail@plt+0x756c>
   18358:	ldr	r0, [fp, #-12]
   1835c:	cmp	r0, #0
   18360:	bcs	183e8 <__assert_fail@plt+0x74f4>
   18364:	b	18384 <__assert_fail@plt+0x7490>
   18368:	ldr	r0, [fp, #-12]
   1836c:	ldr	r1, [fp, #-16]
   18370:	movw	r2, #65535	; 0xffff
   18374:	udiv	r1, r2, r1
   18378:	cmp	r0, r1
   1837c:	bcc	184fc <__assert_fail@plt+0x7608>
   18380:	b	18514 <__assert_fail@plt+0x7620>
   18384:	b	18398 <__assert_fail@plt+0x74a4>
   18388:	ldr	r0, [fp, #-16]
   1838c:	cmp	r0, #1
   18390:	bcc	183a8 <__assert_fail@plt+0x74b4>
   18394:	b	183b4 <__assert_fail@plt+0x74c0>
   18398:	ldr	r0, [fp, #-16]
   1839c:	movw	r1, #0
   183a0:	cmp	r1, r0
   183a4:	bcs	183b4 <__assert_fail@plt+0x74c0>
   183a8:	movw	r0, #0
   183ac:	str	r0, [fp, #-36]	; 0xffffffdc
   183b0:	b	183cc <__assert_fail@plt+0x74d8>
   183b4:	ldr	r0, [fp, #-16]
   183b8:	movw	r1, #0
   183bc:	sub	r0, r1, r0
   183c0:	movw	r1, #65535	; 0xffff
   183c4:	udiv	r0, r1, r0
   183c8:	str	r0, [fp, #-36]	; 0xffffffdc
   183cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   183d0:	ldr	r1, [fp, #-12]
   183d4:	mvn	r2, #0
   183d8:	sub	r1, r2, r1
   183dc:	cmp	r0, r1
   183e0:	bls	184fc <__assert_fail@plt+0x7608>
   183e4:	b	18514 <__assert_fail@plt+0x7620>
   183e8:	b	183f0 <__assert_fail@plt+0x74fc>
   183ec:	b	183f4 <__assert_fail@plt+0x7500>
   183f0:	b	18444 <__assert_fail@plt+0x7550>
   183f4:	ldr	r0, [fp, #-16]
   183f8:	cmn	r0, #1
   183fc:	bne	18444 <__assert_fail@plt+0x7550>
   18400:	b	1841c <__assert_fail@plt+0x7528>
   18404:	ldr	r0, [fp, #-12]
   18408:	add	r0, r0, #0
   1840c:	movw	r1, #0
   18410:	cmp	r1, r0
   18414:	bcc	184fc <__assert_fail@plt+0x7608>
   18418:	b	18514 <__assert_fail@plt+0x7620>
   1841c:	ldr	r0, [fp, #-12]
   18420:	movw	r1, #0
   18424:	cmp	r1, r0
   18428:	bcs	18514 <__assert_fail@plt+0x7620>
   1842c:	ldr	r0, [fp, #-12]
   18430:	sub	r0, r0, #1
   18434:	mvn	r1, #0
   18438:	cmp	r1, r0
   1843c:	bcc	184fc <__assert_fail@plt+0x7608>
   18440:	b	18514 <__assert_fail@plt+0x7620>
   18444:	ldr	r0, [fp, #-16]
   18448:	movw	r1, #0
   1844c:	udiv	r0, r1, r0
   18450:	ldr	r1, [fp, #-12]
   18454:	cmp	r0, r1
   18458:	bcc	184fc <__assert_fail@plt+0x7608>
   1845c:	b	18514 <__assert_fail@plt+0x7620>
   18460:	ldr	r0, [fp, #-16]
   18464:	cmp	r0, #0
   18468:	bne	18470 <__assert_fail@plt+0x757c>
   1846c:	b	18514 <__assert_fail@plt+0x7620>
   18470:	ldr	r0, [fp, #-12]
   18474:	cmp	r0, #0
   18478:	bcs	184e4 <__assert_fail@plt+0x75f0>
   1847c:	b	18484 <__assert_fail@plt+0x7590>
   18480:	b	18488 <__assert_fail@plt+0x7594>
   18484:	b	184c8 <__assert_fail@plt+0x75d4>
   18488:	ldr	r0, [fp, #-12]
   1848c:	cmn	r0, #1
   18490:	bne	184c8 <__assert_fail@plt+0x75d4>
   18494:	b	184b0 <__assert_fail@plt+0x75bc>
   18498:	ldr	r0, [fp, #-16]
   1849c:	add	r0, r0, #0
   184a0:	movw	r1, #0
   184a4:	cmp	r1, r0
   184a8:	bcc	184fc <__assert_fail@plt+0x7608>
   184ac:	b	18514 <__assert_fail@plt+0x7620>
   184b0:	ldr	r0, [fp, #-16]
   184b4:	sub	r0, r0, #1
   184b8:	mvn	r1, #0
   184bc:	cmp	r1, r0
   184c0:	bcc	184fc <__assert_fail@plt+0x7608>
   184c4:	b	18514 <__assert_fail@plt+0x7620>
   184c8:	ldr	r0, [fp, #-12]
   184cc:	movw	r1, #0
   184d0:	udiv	r0, r1, r0
   184d4:	ldr	r1, [fp, #-16]
   184d8:	cmp	r0, r1
   184dc:	bcc	184fc <__assert_fail@plt+0x7608>
   184e0:	b	18514 <__assert_fail@plt+0x7620>
   184e4:	ldr	r0, [fp, #-16]
   184e8:	movw	r1, #65535	; 0xffff
   184ec:	udiv	r0, r1, r0
   184f0:	ldr	r1, [fp, #-12]
   184f4:	cmp	r0, r1
   184f8:	bcs	18514 <__assert_fail@plt+0x7620>
   184fc:	ldr	r0, [fp, #-12]
   18500:	ldr	r1, [fp, #-16]
   18504:	mul	r0, r0, r1
   18508:	uxth	r0, r0
   1850c:	str	r0, [fp, #-20]	; 0xffffffec
   18510:	b	190a4 <__assert_fail@plt+0x81b0>
   18514:	ldr	r0, [fp, #-12]
   18518:	ldr	r1, [fp, #-16]
   1851c:	mul	r0, r0, r1
   18520:	uxth	r0, r0
   18524:	str	r0, [fp, #-20]	; 0xffffffec
   18528:	b	190bc <__assert_fail@plt+0x81c8>
   1852c:	b	18530 <__assert_fail@plt+0x763c>
   18530:	b	186f4 <__assert_fail@plt+0x7800>
   18534:	ldr	r0, [fp, #-16]
   18538:	cmp	r0, #0
   1853c:	bcs	1863c <__assert_fail@plt+0x7748>
   18540:	ldr	r0, [fp, #-12]
   18544:	cmp	r0, #0
   18548:	bcs	185d0 <__assert_fail@plt+0x76dc>
   1854c:	b	1856c <__assert_fail@plt+0x7678>
   18550:	ldr	r0, [pc, #2944]	; 190d8 <__assert_fail@plt+0x81e4>
   18554:	ldr	r1, [fp, #-12]
   18558:	ldr	r2, [fp, #-16]
   1855c:	udiv	r0, r0, r2
   18560:	cmp	r1, r0
   18564:	bcc	186cc <__assert_fail@plt+0x77d8>
   18568:	b	186e0 <__assert_fail@plt+0x77ec>
   1856c:	b	18580 <__assert_fail@plt+0x768c>
   18570:	ldr	r0, [fp, #-16]
   18574:	cmp	r0, #1
   18578:	bcc	18590 <__assert_fail@plt+0x769c>
   1857c:	b	1859c <__assert_fail@plt+0x76a8>
   18580:	ldr	r0, [fp, #-16]
   18584:	movw	r1, #0
   18588:	cmp	r1, r0
   1858c:	bcs	1859c <__assert_fail@plt+0x76a8>
   18590:	movw	r0, #0
   18594:	str	r0, [fp, #-40]	; 0xffffffd8
   18598:	b	185b4 <__assert_fail@plt+0x76c0>
   1859c:	ldr	r0, [pc, #2868]	; 190d8 <__assert_fail@plt+0x81e4>
   185a0:	ldr	r1, [fp, #-16]
   185a4:	movw	r2, #0
   185a8:	sub	r1, r2, r1
   185ac:	udiv	r0, r0, r1
   185b0:	str	r0, [fp, #-40]	; 0xffffffd8
   185b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   185b8:	ldr	r1, [fp, #-12]
   185bc:	mvn	r2, #0
   185c0:	sub	r1, r2, r1
   185c4:	cmp	r0, r1
   185c8:	bls	186cc <__assert_fail@plt+0x77d8>
   185cc:	b	186e0 <__assert_fail@plt+0x77ec>
   185d0:	ldr	r0, [fp, #-16]
   185d4:	cmn	r0, #1
   185d8:	bne	18620 <__assert_fail@plt+0x772c>
   185dc:	b	185f8 <__assert_fail@plt+0x7704>
   185e0:	ldr	r0, [fp, #-12]
   185e4:	add	r0, r0, #-2147483648	; 0x80000000
   185e8:	movw	r1, #0
   185ec:	cmp	r1, r0
   185f0:	bcc	186cc <__assert_fail@plt+0x77d8>
   185f4:	b	186e0 <__assert_fail@plt+0x77ec>
   185f8:	ldr	r0, [fp, #-12]
   185fc:	movw	r1, #0
   18600:	cmp	r1, r0
   18604:	bcs	186e0 <__assert_fail@plt+0x77ec>
   18608:	ldr	r0, [pc, #2760]	; 190d8 <__assert_fail@plt+0x81e4>
   1860c:	ldr	r1, [fp, #-12]
   18610:	sub	r1, r1, #1
   18614:	cmp	r0, r1
   18618:	bcc	186cc <__assert_fail@plt+0x77d8>
   1861c:	b	186e0 <__assert_fail@plt+0x77ec>
   18620:	ldr	r0, [pc, #2740]	; 190dc <__assert_fail@plt+0x81e8>
   18624:	ldr	r1, [fp, #-16]
   18628:	udiv	r0, r0, r1
   1862c:	ldr	r1, [fp, #-12]
   18630:	cmp	r0, r1
   18634:	bcc	186cc <__assert_fail@plt+0x77d8>
   18638:	b	186e0 <__assert_fail@plt+0x77ec>
   1863c:	ldr	r0, [fp, #-16]
   18640:	cmp	r0, #0
   18644:	bne	1864c <__assert_fail@plt+0x7758>
   18648:	b	186e0 <__assert_fail@plt+0x77ec>
   1864c:	ldr	r0, [fp, #-12]
   18650:	cmp	r0, #0
   18654:	bcs	186b4 <__assert_fail@plt+0x77c0>
   18658:	ldr	r0, [fp, #-12]
   1865c:	cmn	r0, #1
   18660:	bne	18698 <__assert_fail@plt+0x77a4>
   18664:	b	18680 <__assert_fail@plt+0x778c>
   18668:	ldr	r0, [fp, #-16]
   1866c:	add	r0, r0, #-2147483648	; 0x80000000
   18670:	movw	r1, #0
   18674:	cmp	r1, r0
   18678:	bcc	186cc <__assert_fail@plt+0x77d8>
   1867c:	b	186e0 <__assert_fail@plt+0x77ec>
   18680:	ldr	r0, [pc, #2640]	; 190d8 <__assert_fail@plt+0x81e4>
   18684:	ldr	r1, [fp, #-16]
   18688:	sub	r1, r1, #1
   1868c:	cmp	r0, r1
   18690:	bcc	186cc <__assert_fail@plt+0x77d8>
   18694:	b	186e0 <__assert_fail@plt+0x77ec>
   18698:	ldr	r0, [pc, #2620]	; 190dc <__assert_fail@plt+0x81e8>
   1869c:	ldr	r1, [fp, #-12]
   186a0:	udiv	r0, r0, r1
   186a4:	ldr	r1, [fp, #-16]
   186a8:	cmp	r0, r1
   186ac:	bcc	186cc <__assert_fail@plt+0x77d8>
   186b0:	b	186e0 <__assert_fail@plt+0x77ec>
   186b4:	ldr	r0, [pc, #2588]	; 190d8 <__assert_fail@plt+0x81e4>
   186b8:	ldr	r1, [fp, #-16]
   186bc:	udiv	r0, r0, r1
   186c0:	ldr	r1, [fp, #-12]
   186c4:	cmp	r0, r1
   186c8:	bcs	186e0 <__assert_fail@plt+0x77ec>
   186cc:	ldr	r0, [fp, #-12]
   186d0:	ldr	r1, [fp, #-16]
   186d4:	mul	r0, r0, r1
   186d8:	str	r0, [fp, #-20]	; 0xffffffec
   186dc:	b	190a4 <__assert_fail@plt+0x81b0>
   186e0:	ldr	r0, [fp, #-12]
   186e4:	ldr	r1, [fp, #-16]
   186e8:	mul	r0, r0, r1
   186ec:	str	r0, [fp, #-20]	; 0xffffffec
   186f0:	b	190bc <__assert_fail@plt+0x81c8>
   186f4:	ldr	r0, [fp, #-16]
   186f8:	cmp	r0, #0
   186fc:	bcs	18808 <__assert_fail@plt+0x7914>
   18700:	ldr	r0, [fp, #-12]
   18704:	cmp	r0, #0
   18708:	bcs	18790 <__assert_fail@plt+0x789c>
   1870c:	b	1872c <__assert_fail@plt+0x7838>
   18710:	ldr	r0, [fp, #-12]
   18714:	ldr	r1, [fp, #-16]
   18718:	mvn	r2, #0
   1871c:	udiv	r1, r2, r1
   18720:	cmp	r0, r1
   18724:	bcc	188a4 <__assert_fail@plt+0x79b0>
   18728:	b	188b8 <__assert_fail@plt+0x79c4>
   1872c:	b	18740 <__assert_fail@plt+0x784c>
   18730:	ldr	r0, [fp, #-16]
   18734:	cmp	r0, #1
   18738:	bcc	18750 <__assert_fail@plt+0x785c>
   1873c:	b	1875c <__assert_fail@plt+0x7868>
   18740:	ldr	r0, [fp, #-16]
   18744:	movw	r1, #0
   18748:	cmp	r1, r0
   1874c:	bcs	1875c <__assert_fail@plt+0x7868>
   18750:	movw	r0, #1
   18754:	str	r0, [fp, #-44]	; 0xffffffd4
   18758:	b	18774 <__assert_fail@plt+0x7880>
   1875c:	ldr	r0, [fp, #-16]
   18760:	movw	r1, #0
   18764:	sub	r0, r1, r0
   18768:	mvn	r1, #0
   1876c:	udiv	r0, r1, r0
   18770:	str	r0, [fp, #-44]	; 0xffffffd4
   18774:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18778:	ldr	r1, [fp, #-12]
   1877c:	mvn	r2, #0
   18780:	sub	r1, r2, r1
   18784:	cmp	r0, r1
   18788:	bls	188a4 <__assert_fail@plt+0x79b0>
   1878c:	b	188b8 <__assert_fail@plt+0x79c4>
   18790:	b	18798 <__assert_fail@plt+0x78a4>
   18794:	b	1879c <__assert_fail@plt+0x78a8>
   18798:	b	187ec <__assert_fail@plt+0x78f8>
   1879c:	ldr	r0, [fp, #-16]
   187a0:	cmn	r0, #1
   187a4:	bne	187ec <__assert_fail@plt+0x78f8>
   187a8:	b	187c4 <__assert_fail@plt+0x78d0>
   187ac:	ldr	r0, [fp, #-12]
   187b0:	add	r0, r0, #0
   187b4:	movw	r1, #0
   187b8:	cmp	r1, r0
   187bc:	bcc	188a4 <__assert_fail@plt+0x79b0>
   187c0:	b	188b8 <__assert_fail@plt+0x79c4>
   187c4:	ldr	r0, [fp, #-12]
   187c8:	movw	r1, #0
   187cc:	cmp	r1, r0
   187d0:	bcs	188b8 <__assert_fail@plt+0x79c4>
   187d4:	ldr	r0, [fp, #-12]
   187d8:	sub	r0, r0, #1
   187dc:	mvn	r1, #0
   187e0:	cmp	r1, r0
   187e4:	bcc	188a4 <__assert_fail@plt+0x79b0>
   187e8:	b	188b8 <__assert_fail@plt+0x79c4>
   187ec:	ldr	r0, [fp, #-16]
   187f0:	movw	r1, #0
   187f4:	udiv	r0, r1, r0
   187f8:	ldr	r1, [fp, #-12]
   187fc:	cmp	r0, r1
   18800:	bcc	188a4 <__assert_fail@plt+0x79b0>
   18804:	b	188b8 <__assert_fail@plt+0x79c4>
   18808:	ldr	r0, [fp, #-16]
   1880c:	cmp	r0, #0
   18810:	bne	18818 <__assert_fail@plt+0x7924>
   18814:	b	188b8 <__assert_fail@plt+0x79c4>
   18818:	ldr	r0, [fp, #-12]
   1881c:	cmp	r0, #0
   18820:	bcs	1888c <__assert_fail@plt+0x7998>
   18824:	b	1882c <__assert_fail@plt+0x7938>
   18828:	b	18830 <__assert_fail@plt+0x793c>
   1882c:	b	18870 <__assert_fail@plt+0x797c>
   18830:	ldr	r0, [fp, #-12]
   18834:	cmn	r0, #1
   18838:	bne	18870 <__assert_fail@plt+0x797c>
   1883c:	b	18858 <__assert_fail@plt+0x7964>
   18840:	ldr	r0, [fp, #-16]
   18844:	add	r0, r0, #0
   18848:	movw	r1, #0
   1884c:	cmp	r1, r0
   18850:	bcc	188a4 <__assert_fail@plt+0x79b0>
   18854:	b	188b8 <__assert_fail@plt+0x79c4>
   18858:	ldr	r0, [fp, #-16]
   1885c:	sub	r0, r0, #1
   18860:	mvn	r1, #0
   18864:	cmp	r1, r0
   18868:	bcc	188a4 <__assert_fail@plt+0x79b0>
   1886c:	b	188b8 <__assert_fail@plt+0x79c4>
   18870:	ldr	r0, [fp, #-12]
   18874:	movw	r1, #0
   18878:	udiv	r0, r1, r0
   1887c:	ldr	r1, [fp, #-16]
   18880:	cmp	r0, r1
   18884:	bcc	188a4 <__assert_fail@plt+0x79b0>
   18888:	b	188b8 <__assert_fail@plt+0x79c4>
   1888c:	ldr	r0, [fp, #-16]
   18890:	mvn	r1, #0
   18894:	udiv	r0, r1, r0
   18898:	ldr	r1, [fp, #-12]
   1889c:	cmp	r0, r1
   188a0:	bcs	188b8 <__assert_fail@plt+0x79c4>
   188a4:	ldr	r0, [fp, #-12]
   188a8:	ldr	r1, [fp, #-16]
   188ac:	mul	r0, r0, r1
   188b0:	str	r0, [fp, #-20]	; 0xffffffec
   188b4:	b	190a4 <__assert_fail@plt+0x81b0>
   188b8:	ldr	r0, [fp, #-12]
   188bc:	ldr	r1, [fp, #-16]
   188c0:	mul	r0, r0, r1
   188c4:	str	r0, [fp, #-20]	; 0xffffffec
   188c8:	b	190bc <__assert_fail@plt+0x81c8>
   188cc:	b	188d0 <__assert_fail@plt+0x79dc>
   188d0:	b	18a94 <__assert_fail@plt+0x7ba0>
   188d4:	ldr	r0, [fp, #-16]
   188d8:	cmp	r0, #0
   188dc:	bcs	189dc <__assert_fail@plt+0x7ae8>
   188e0:	ldr	r0, [fp, #-12]
   188e4:	cmp	r0, #0
   188e8:	bcs	18970 <__assert_fail@plt+0x7a7c>
   188ec:	b	1890c <__assert_fail@plt+0x7a18>
   188f0:	ldr	r0, [pc, #2016]	; 190d8 <__assert_fail@plt+0x81e4>
   188f4:	ldr	r1, [fp, #-12]
   188f8:	ldr	r2, [fp, #-16]
   188fc:	udiv	r0, r0, r2
   18900:	cmp	r1, r0
   18904:	bcc	18a6c <__assert_fail@plt+0x7b78>
   18908:	b	18a80 <__assert_fail@plt+0x7b8c>
   1890c:	b	18920 <__assert_fail@plt+0x7a2c>
   18910:	ldr	r0, [fp, #-16]
   18914:	cmp	r0, #1
   18918:	bcc	18930 <__assert_fail@plt+0x7a3c>
   1891c:	b	1893c <__assert_fail@plt+0x7a48>
   18920:	ldr	r0, [fp, #-16]
   18924:	movw	r1, #0
   18928:	cmp	r1, r0
   1892c:	bcs	1893c <__assert_fail@plt+0x7a48>
   18930:	movw	r0, #0
   18934:	str	r0, [sp, #48]	; 0x30
   18938:	b	18954 <__assert_fail@plt+0x7a60>
   1893c:	ldr	r0, [pc, #1940]	; 190d8 <__assert_fail@plt+0x81e4>
   18940:	ldr	r1, [fp, #-16]
   18944:	movw	r2, #0
   18948:	sub	r1, r2, r1
   1894c:	udiv	r0, r0, r1
   18950:	str	r0, [sp, #48]	; 0x30
   18954:	ldr	r0, [sp, #48]	; 0x30
   18958:	ldr	r1, [fp, #-12]
   1895c:	mvn	r2, #0
   18960:	sub	r1, r2, r1
   18964:	cmp	r0, r1
   18968:	bls	18a6c <__assert_fail@plt+0x7b78>
   1896c:	b	18a80 <__assert_fail@plt+0x7b8c>
   18970:	ldr	r0, [fp, #-16]
   18974:	cmn	r0, #1
   18978:	bne	189c0 <__assert_fail@plt+0x7acc>
   1897c:	b	18998 <__assert_fail@plt+0x7aa4>
   18980:	ldr	r0, [fp, #-12]
   18984:	add	r0, r0, #-2147483648	; 0x80000000
   18988:	movw	r1, #0
   1898c:	cmp	r1, r0
   18990:	bcc	18a6c <__assert_fail@plt+0x7b78>
   18994:	b	18a80 <__assert_fail@plt+0x7b8c>
   18998:	ldr	r0, [fp, #-12]
   1899c:	movw	r1, #0
   189a0:	cmp	r1, r0
   189a4:	bcs	18a80 <__assert_fail@plt+0x7b8c>
   189a8:	ldr	r0, [pc, #1832]	; 190d8 <__assert_fail@plt+0x81e4>
   189ac:	ldr	r1, [fp, #-12]
   189b0:	sub	r1, r1, #1
   189b4:	cmp	r0, r1
   189b8:	bcc	18a6c <__assert_fail@plt+0x7b78>
   189bc:	b	18a80 <__assert_fail@plt+0x7b8c>
   189c0:	ldr	r0, [pc, #1812]	; 190dc <__assert_fail@plt+0x81e8>
   189c4:	ldr	r1, [fp, #-16]
   189c8:	udiv	r0, r0, r1
   189cc:	ldr	r1, [fp, #-12]
   189d0:	cmp	r0, r1
   189d4:	bcc	18a6c <__assert_fail@plt+0x7b78>
   189d8:	b	18a80 <__assert_fail@plt+0x7b8c>
   189dc:	ldr	r0, [fp, #-16]
   189e0:	cmp	r0, #0
   189e4:	bne	189ec <__assert_fail@plt+0x7af8>
   189e8:	b	18a80 <__assert_fail@plt+0x7b8c>
   189ec:	ldr	r0, [fp, #-12]
   189f0:	cmp	r0, #0
   189f4:	bcs	18a54 <__assert_fail@plt+0x7b60>
   189f8:	ldr	r0, [fp, #-12]
   189fc:	cmn	r0, #1
   18a00:	bne	18a38 <__assert_fail@plt+0x7b44>
   18a04:	b	18a20 <__assert_fail@plt+0x7b2c>
   18a08:	ldr	r0, [fp, #-16]
   18a0c:	add	r0, r0, #-2147483648	; 0x80000000
   18a10:	movw	r1, #0
   18a14:	cmp	r1, r0
   18a18:	bcc	18a6c <__assert_fail@plt+0x7b78>
   18a1c:	b	18a80 <__assert_fail@plt+0x7b8c>
   18a20:	ldr	r0, [pc, #1712]	; 190d8 <__assert_fail@plt+0x81e4>
   18a24:	ldr	r1, [fp, #-16]
   18a28:	sub	r1, r1, #1
   18a2c:	cmp	r0, r1
   18a30:	bcc	18a6c <__assert_fail@plt+0x7b78>
   18a34:	b	18a80 <__assert_fail@plt+0x7b8c>
   18a38:	ldr	r0, [pc, #1692]	; 190dc <__assert_fail@plt+0x81e8>
   18a3c:	ldr	r1, [fp, #-12]
   18a40:	udiv	r0, r0, r1
   18a44:	ldr	r1, [fp, #-16]
   18a48:	cmp	r0, r1
   18a4c:	bcc	18a6c <__assert_fail@plt+0x7b78>
   18a50:	b	18a80 <__assert_fail@plt+0x7b8c>
   18a54:	ldr	r0, [pc, #1660]	; 190d8 <__assert_fail@plt+0x81e4>
   18a58:	ldr	r1, [fp, #-16]
   18a5c:	udiv	r0, r0, r1
   18a60:	ldr	r1, [fp, #-12]
   18a64:	cmp	r0, r1
   18a68:	bcs	18a80 <__assert_fail@plt+0x7b8c>
   18a6c:	ldr	r0, [fp, #-12]
   18a70:	ldr	r1, [fp, #-16]
   18a74:	mul	r0, r0, r1
   18a78:	str	r0, [fp, #-20]	; 0xffffffec
   18a7c:	b	190a4 <__assert_fail@plt+0x81b0>
   18a80:	ldr	r0, [fp, #-12]
   18a84:	ldr	r1, [fp, #-16]
   18a88:	mul	r0, r0, r1
   18a8c:	str	r0, [fp, #-20]	; 0xffffffec
   18a90:	b	190bc <__assert_fail@plt+0x81c8>
   18a94:	ldr	r0, [fp, #-16]
   18a98:	cmp	r0, #0
   18a9c:	bcs	18ba8 <__assert_fail@plt+0x7cb4>
   18aa0:	ldr	r0, [fp, #-12]
   18aa4:	cmp	r0, #0
   18aa8:	bcs	18b30 <__assert_fail@plt+0x7c3c>
   18aac:	b	18acc <__assert_fail@plt+0x7bd8>
   18ab0:	ldr	r0, [fp, #-12]
   18ab4:	ldr	r1, [fp, #-16]
   18ab8:	mvn	r2, #0
   18abc:	udiv	r1, r2, r1
   18ac0:	cmp	r0, r1
   18ac4:	bcc	18c44 <__assert_fail@plt+0x7d50>
   18ac8:	b	18c58 <__assert_fail@plt+0x7d64>
   18acc:	b	18ae0 <__assert_fail@plt+0x7bec>
   18ad0:	ldr	r0, [fp, #-16]
   18ad4:	cmp	r0, #1
   18ad8:	bcc	18af0 <__assert_fail@plt+0x7bfc>
   18adc:	b	18afc <__assert_fail@plt+0x7c08>
   18ae0:	ldr	r0, [fp, #-16]
   18ae4:	movw	r1, #0
   18ae8:	cmp	r1, r0
   18aec:	bcs	18afc <__assert_fail@plt+0x7c08>
   18af0:	movw	r0, #1
   18af4:	str	r0, [sp, #44]	; 0x2c
   18af8:	b	18b14 <__assert_fail@plt+0x7c20>
   18afc:	ldr	r0, [fp, #-16]
   18b00:	movw	r1, #0
   18b04:	sub	r0, r1, r0
   18b08:	mvn	r1, #0
   18b0c:	udiv	r0, r1, r0
   18b10:	str	r0, [sp, #44]	; 0x2c
   18b14:	ldr	r0, [sp, #44]	; 0x2c
   18b18:	ldr	r1, [fp, #-12]
   18b1c:	mvn	r2, #0
   18b20:	sub	r1, r2, r1
   18b24:	cmp	r0, r1
   18b28:	bls	18c44 <__assert_fail@plt+0x7d50>
   18b2c:	b	18c58 <__assert_fail@plt+0x7d64>
   18b30:	b	18b38 <__assert_fail@plt+0x7c44>
   18b34:	b	18b3c <__assert_fail@plt+0x7c48>
   18b38:	b	18b8c <__assert_fail@plt+0x7c98>
   18b3c:	ldr	r0, [fp, #-16]
   18b40:	cmn	r0, #1
   18b44:	bne	18b8c <__assert_fail@plt+0x7c98>
   18b48:	b	18b64 <__assert_fail@plt+0x7c70>
   18b4c:	ldr	r0, [fp, #-12]
   18b50:	add	r0, r0, #0
   18b54:	movw	r1, #0
   18b58:	cmp	r1, r0
   18b5c:	bcc	18c44 <__assert_fail@plt+0x7d50>
   18b60:	b	18c58 <__assert_fail@plt+0x7d64>
   18b64:	ldr	r0, [fp, #-12]
   18b68:	movw	r1, #0
   18b6c:	cmp	r1, r0
   18b70:	bcs	18c58 <__assert_fail@plt+0x7d64>
   18b74:	ldr	r0, [fp, #-12]
   18b78:	sub	r0, r0, #1
   18b7c:	mvn	r1, #0
   18b80:	cmp	r1, r0
   18b84:	bcc	18c44 <__assert_fail@plt+0x7d50>
   18b88:	b	18c58 <__assert_fail@plt+0x7d64>
   18b8c:	ldr	r0, [fp, #-16]
   18b90:	movw	r1, #0
   18b94:	udiv	r0, r1, r0
   18b98:	ldr	r1, [fp, #-12]
   18b9c:	cmp	r0, r1
   18ba0:	bcc	18c44 <__assert_fail@plt+0x7d50>
   18ba4:	b	18c58 <__assert_fail@plt+0x7d64>
   18ba8:	ldr	r0, [fp, #-16]
   18bac:	cmp	r0, #0
   18bb0:	bne	18bb8 <__assert_fail@plt+0x7cc4>
   18bb4:	b	18c58 <__assert_fail@plt+0x7d64>
   18bb8:	ldr	r0, [fp, #-12]
   18bbc:	cmp	r0, #0
   18bc0:	bcs	18c2c <__assert_fail@plt+0x7d38>
   18bc4:	b	18bcc <__assert_fail@plt+0x7cd8>
   18bc8:	b	18bd0 <__assert_fail@plt+0x7cdc>
   18bcc:	b	18c10 <__assert_fail@plt+0x7d1c>
   18bd0:	ldr	r0, [fp, #-12]
   18bd4:	cmn	r0, #1
   18bd8:	bne	18c10 <__assert_fail@plt+0x7d1c>
   18bdc:	b	18bf8 <__assert_fail@plt+0x7d04>
   18be0:	ldr	r0, [fp, #-16]
   18be4:	add	r0, r0, #0
   18be8:	movw	r1, #0
   18bec:	cmp	r1, r0
   18bf0:	bcc	18c44 <__assert_fail@plt+0x7d50>
   18bf4:	b	18c58 <__assert_fail@plt+0x7d64>
   18bf8:	ldr	r0, [fp, #-16]
   18bfc:	sub	r0, r0, #1
   18c00:	mvn	r1, #0
   18c04:	cmp	r1, r0
   18c08:	bcc	18c44 <__assert_fail@plt+0x7d50>
   18c0c:	b	18c58 <__assert_fail@plt+0x7d64>
   18c10:	ldr	r0, [fp, #-12]
   18c14:	movw	r1, #0
   18c18:	udiv	r0, r1, r0
   18c1c:	ldr	r1, [fp, #-16]
   18c20:	cmp	r0, r1
   18c24:	bcc	18c44 <__assert_fail@plt+0x7d50>
   18c28:	b	18c58 <__assert_fail@plt+0x7d64>
   18c2c:	ldr	r0, [fp, #-16]
   18c30:	mvn	r1, #0
   18c34:	udiv	r0, r1, r0
   18c38:	ldr	r1, [fp, #-12]
   18c3c:	cmp	r0, r1
   18c40:	bcs	18c58 <__assert_fail@plt+0x7d64>
   18c44:	ldr	r0, [fp, #-12]
   18c48:	ldr	r1, [fp, #-16]
   18c4c:	mul	r0, r0, r1
   18c50:	str	r0, [fp, #-20]	; 0xffffffec
   18c54:	b	190a4 <__assert_fail@plt+0x81b0>
   18c58:	ldr	r0, [fp, #-12]
   18c5c:	ldr	r1, [fp, #-16]
   18c60:	mul	r0, r0, r1
   18c64:	str	r0, [fp, #-20]	; 0xffffffec
   18c68:	b	190bc <__assert_fail@plt+0x81c8>
   18c6c:	b	18e88 <__assert_fail@plt+0x7f94>
   18c70:	ldr	r0, [fp, #-16]
   18c74:	cmp	r0, #0
   18c78:	bcs	18db8 <__assert_fail@plt+0x7ec4>
   18c7c:	ldr	r0, [fp, #-12]
   18c80:	cmp	r0, #0
   18c84:	bcs	18d44 <__assert_fail@plt+0x7e50>
   18c88:	b	18c8c <__assert_fail@plt+0x7d98>
   18c8c:	ldr	r0, [fp, #-12]
   18c90:	ldr	r2, [fp, #-16]
   18c94:	mvn	r1, #0
   18c98:	mvn	r3, #-2147483648	; 0x80000000
   18c9c:	mov	ip, #0
   18ca0:	str	r0, [sp, #40]	; 0x28
   18ca4:	mov	r0, r1
   18ca8:	mov	r1, r3
   18cac:	mov	r3, ip
   18cb0:	bl	19da8 <__assert_fail@plt+0x8eb4>
   18cb4:	ldr	r2, [sp, #40]	; 0x28
   18cb8:	subs	r0, r2, r0
   18cbc:	rscs	r1, r1, #0
   18cc0:	blt	18e60 <__assert_fail@plt+0x7f6c>
   18cc4:	b	18e74 <__assert_fail@plt+0x7f80>
   18cc8:	b	18cdc <__assert_fail@plt+0x7de8>
   18ccc:	ldr	r0, [fp, #-16]
   18cd0:	cmp	r0, #1
   18cd4:	bcc	18cec <__assert_fail@plt+0x7df8>
   18cd8:	b	18d00 <__assert_fail@plt+0x7e0c>
   18cdc:	ldr	r0, [fp, #-16]
   18ce0:	movw	r1, #0
   18ce4:	cmp	r1, r0
   18ce8:	bcs	18d00 <__assert_fail@plt+0x7e0c>
   18cec:	mov	r0, #0
   18cf0:	mvn	r1, #0
   18cf4:	str	r1, [sp, #36]	; 0x24
   18cf8:	str	r0, [sp, #32]
   18cfc:	b	18d24 <__assert_fail@plt+0x7e30>
   18d00:	ldr	r0, [fp, #-16]
   18d04:	rsb	r2, r0, #0
   18d08:	mvn	r0, #0
   18d0c:	mvn	r1, #-2147483648	; 0x80000000
   18d10:	mov	r3, #0
   18d14:	bl	19da8 <__assert_fail@plt+0x8eb4>
   18d18:	str	r0, [sp, #36]	; 0x24
   18d1c:	str	r1, [sp, #32]
   18d20:	b	18d24 <__assert_fail@plt+0x7e30>
   18d24:	ldr	r0, [sp, #32]
   18d28:	ldr	r1, [sp, #36]	; 0x24
   18d2c:	ldr	r2, [fp, #-12]
   18d30:	mvn	r2, r2
   18d34:	subs	r1, r2, r1
   18d38:	rscs	r0, r0, #0
   18d3c:	bge	18e60 <__assert_fail@plt+0x7f6c>
   18d40:	b	18e74 <__assert_fail@plt+0x7f80>
   18d44:	ldr	r0, [fp, #-16]
   18d48:	cmn	r0, #1
   18d4c:	bne	18d8c <__assert_fail@plt+0x7e98>
   18d50:	b	18d6c <__assert_fail@plt+0x7e78>
   18d54:	ldr	r0, [fp, #-12]
   18d58:	rsbs	r0, r0, #0
   18d5c:	mov	r1, #0
   18d60:	sbcs	r1, r1, #-2147483648	; 0x80000000
   18d64:	blt	18e60 <__assert_fail@plt+0x7f6c>
   18d68:	b	18e74 <__assert_fail@plt+0x7f80>
   18d6c:	ldr	r0, [fp, #-12]
   18d70:	movw	r1, #0
   18d74:	cmp	r1, r0
   18d78:	bcs	18e74 <__assert_fail@plt+0x7f80>
   18d7c:	mov	r0, #0
   18d80:	cmp	r0, #0
   18d84:	bne	18e60 <__assert_fail@plt+0x7f6c>
   18d88:	b	18e74 <__assert_fail@plt+0x7f80>
   18d8c:	ldr	r2, [fp, #-16]
   18d90:	mov	r1, #-2147483648	; 0x80000000
   18d94:	mov	r0, #0
   18d98:	str	r0, [sp, #28]
   18d9c:	ldr	r3, [sp, #28]
   18da0:	bl	19cd4 <__assert_fail@plt+0x8de0>
   18da4:	ldr	r2, [fp, #-12]
   18da8:	subs	r0, r0, r2
   18dac:	sbcs	r1, r1, #0
   18db0:	blt	18e60 <__assert_fail@plt+0x7f6c>
   18db4:	b	18e74 <__assert_fail@plt+0x7f80>
   18db8:	ldr	r0, [fp, #-16]
   18dbc:	cmp	r0, #0
   18dc0:	bne	18dc8 <__assert_fail@plt+0x7ed4>
   18dc4:	b	18e74 <__assert_fail@plt+0x7f80>
   18dc8:	ldr	r0, [fp, #-12]
   18dcc:	cmp	r0, #0
   18dd0:	bcs	18e38 <__assert_fail@plt+0x7f44>
   18dd4:	ldr	r0, [fp, #-12]
   18dd8:	cmn	r0, #1
   18ddc:	bne	18e0c <__assert_fail@plt+0x7f18>
   18de0:	b	18dfc <__assert_fail@plt+0x7f08>
   18de4:	ldr	r0, [fp, #-16]
   18de8:	rsbs	r0, r0, #0
   18dec:	mov	r1, #0
   18df0:	sbcs	r1, r1, #-2147483648	; 0x80000000
   18df4:	blt	18e60 <__assert_fail@plt+0x7f6c>
   18df8:	b	18e74 <__assert_fail@plt+0x7f80>
   18dfc:	mov	r0, #0
   18e00:	cmp	r0, #0
   18e04:	bne	18e60 <__assert_fail@plt+0x7f6c>
   18e08:	b	18e74 <__assert_fail@plt+0x7f80>
   18e0c:	ldr	r2, [fp, #-12]
   18e10:	mov	r1, #-2147483648	; 0x80000000
   18e14:	mov	r0, #0
   18e18:	str	r0, [sp, #24]
   18e1c:	ldr	r3, [sp, #24]
   18e20:	bl	19cd4 <__assert_fail@plt+0x8de0>
   18e24:	ldr	r2, [fp, #-16]
   18e28:	subs	r0, r0, r2
   18e2c:	sbcs	r1, r1, #0
   18e30:	blt	18e60 <__assert_fail@plt+0x7f6c>
   18e34:	b	18e74 <__assert_fail@plt+0x7f80>
   18e38:	ldr	r2, [fp, #-16]
   18e3c:	mvn	r0, #0
   18e40:	mvn	r1, #-2147483648	; 0x80000000
   18e44:	mov	r3, #0
   18e48:	bl	19da8 <__assert_fail@plt+0x8eb4>
   18e4c:	ldr	r2, [fp, #-12]
   18e50:	subs	r0, r0, r2
   18e54:	sbcs	r1, r1, #0
   18e58:	bge	18e74 <__assert_fail@plt+0x7f80>
   18e5c:	b	18e60 <__assert_fail@plt+0x7f6c>
   18e60:	ldr	r0, [fp, #-12]
   18e64:	ldr	r1, [fp, #-16]
   18e68:	mul	r0, r0, r1
   18e6c:	str	r0, [fp, #-20]	; 0xffffffec
   18e70:	b	190a4 <__assert_fail@plt+0x81b0>
   18e74:	ldr	r0, [fp, #-12]
   18e78:	ldr	r1, [fp, #-16]
   18e7c:	mul	r0, r0, r1
   18e80:	str	r0, [fp, #-20]	; 0xffffffec
   18e84:	b	190bc <__assert_fail@plt+0x81c8>
   18e88:	ldr	r0, [fp, #-16]
   18e8c:	cmp	r0, #0
   18e90:	bcs	18fcc <__assert_fail@plt+0x80d8>
   18e94:	ldr	r0, [fp, #-12]
   18e98:	cmp	r0, #0
   18e9c:	bcs	18f54 <__assert_fail@plt+0x8060>
   18ea0:	b	18ed4 <__assert_fail@plt+0x7fe0>
   18ea4:	ldr	r0, [fp, #-12]
   18ea8:	ldr	r2, [fp, #-16]
   18eac:	mvn	r1, #0
   18eb0:	mov	r3, #0
   18eb4:	str	r0, [sp, #20]
   18eb8:	mov	r0, r1
   18ebc:	bl	19da8 <__assert_fail@plt+0x8eb4>
   18ec0:	ldr	r2, [sp, #20]
   18ec4:	subs	r0, r2, r0
   18ec8:	rscs	r1, r1, #0
   18ecc:	bcc	1907c <__assert_fail@plt+0x8188>
   18ed0:	b	19090 <__assert_fail@plt+0x819c>
   18ed4:	b	18ee8 <__assert_fail@plt+0x7ff4>
   18ed8:	ldr	r0, [fp, #-16]
   18edc:	cmp	r0, #1
   18ee0:	bcc	18ef8 <__assert_fail@plt+0x8004>
   18ee4:	b	18f0c <__assert_fail@plt+0x8018>
   18ee8:	ldr	r0, [fp, #-16]
   18eec:	movw	r1, #0
   18ef0:	cmp	r1, r0
   18ef4:	bcs	18f0c <__assert_fail@plt+0x8018>
   18ef8:	mov	r0, #1
   18efc:	mvn	r1, #0
   18f00:	str	r1, [sp, #16]
   18f04:	str	r0, [sp, #12]
   18f08:	b	18f34 <__assert_fail@plt+0x8040>
   18f0c:	ldr	r0, [fp, #-16]
   18f10:	rsb	r2, r0, #0
   18f14:	mvn	r0, #0
   18f18:	mov	r3, #0
   18f1c:	str	r0, [sp, #8]
   18f20:	ldr	r1, [sp, #8]
   18f24:	bl	19da8 <__assert_fail@plt+0x8eb4>
   18f28:	str	r0, [sp, #16]
   18f2c:	str	r1, [sp, #12]
   18f30:	b	18f34 <__assert_fail@plt+0x8040>
   18f34:	ldr	r0, [sp, #12]
   18f38:	ldr	r1, [sp, #16]
   18f3c:	ldr	r2, [fp, #-12]
   18f40:	mvn	r2, r2
   18f44:	subs	r1, r2, r1
   18f48:	rscs	r0, r0, #0
   18f4c:	bcs	1907c <__assert_fail@plt+0x8188>
   18f50:	b	19090 <__assert_fail@plt+0x819c>
   18f54:	b	18f5c <__assert_fail@plt+0x8068>
   18f58:	b	18f60 <__assert_fail@plt+0x806c>
   18f5c:	b	18fb0 <__assert_fail@plt+0x80bc>
   18f60:	ldr	r0, [fp, #-16]
   18f64:	cmn	r0, #1
   18f68:	bne	18fb0 <__assert_fail@plt+0x80bc>
   18f6c:	b	18f88 <__assert_fail@plt+0x8094>
   18f70:	ldr	r0, [fp, #-12]
   18f74:	add	r0, r0, #0
   18f78:	movw	r1, #0
   18f7c:	cmp	r1, r0
   18f80:	bcc	1907c <__assert_fail@plt+0x8188>
   18f84:	b	19090 <__assert_fail@plt+0x819c>
   18f88:	ldr	r0, [fp, #-12]
   18f8c:	movw	r1, #0
   18f90:	cmp	r1, r0
   18f94:	bcs	19090 <__assert_fail@plt+0x819c>
   18f98:	ldr	r0, [fp, #-12]
   18f9c:	sub	r0, r0, #1
   18fa0:	mvn	r1, #0
   18fa4:	cmp	r1, r0
   18fa8:	bcc	1907c <__assert_fail@plt+0x8188>
   18fac:	b	19090 <__assert_fail@plt+0x819c>
   18fb0:	ldr	r0, [fp, #-16]
   18fb4:	movw	r1, #0
   18fb8:	udiv	r0, r1, r0
   18fbc:	ldr	r1, [fp, #-12]
   18fc0:	cmp	r0, r1
   18fc4:	bcc	1907c <__assert_fail@plt+0x8188>
   18fc8:	b	19090 <__assert_fail@plt+0x819c>
   18fcc:	ldr	r0, [fp, #-16]
   18fd0:	cmp	r0, #0
   18fd4:	bne	18fdc <__assert_fail@plt+0x80e8>
   18fd8:	b	19090 <__assert_fail@plt+0x819c>
   18fdc:	ldr	r0, [fp, #-12]
   18fe0:	cmp	r0, #0
   18fe4:	bcs	19050 <__assert_fail@plt+0x815c>
   18fe8:	b	18ff0 <__assert_fail@plt+0x80fc>
   18fec:	b	18ff4 <__assert_fail@plt+0x8100>
   18ff0:	b	19034 <__assert_fail@plt+0x8140>
   18ff4:	ldr	r0, [fp, #-12]
   18ff8:	cmn	r0, #1
   18ffc:	bne	19034 <__assert_fail@plt+0x8140>
   19000:	b	1901c <__assert_fail@plt+0x8128>
   19004:	ldr	r0, [fp, #-16]
   19008:	add	r0, r0, #0
   1900c:	movw	r1, #0
   19010:	cmp	r1, r0
   19014:	bcc	1907c <__assert_fail@plt+0x8188>
   19018:	b	19090 <__assert_fail@plt+0x819c>
   1901c:	ldr	r0, [fp, #-16]
   19020:	sub	r0, r0, #1
   19024:	mvn	r1, #0
   19028:	cmp	r1, r0
   1902c:	bcc	1907c <__assert_fail@plt+0x8188>
   19030:	b	19090 <__assert_fail@plt+0x819c>
   19034:	ldr	r0, [fp, #-12]
   19038:	movw	r1, #0
   1903c:	udiv	r0, r1, r0
   19040:	ldr	r1, [fp, #-16]
   19044:	cmp	r0, r1
   19048:	bcc	1907c <__assert_fail@plt+0x8188>
   1904c:	b	19090 <__assert_fail@plt+0x819c>
   19050:	ldr	r2, [fp, #-16]
   19054:	mvn	r0, #0
   19058:	mov	r3, #0
   1905c:	str	r0, [sp, #4]
   19060:	ldr	r1, [sp, #4]
   19064:	bl	19da8 <__assert_fail@plt+0x8eb4>
   19068:	ldr	r2, [fp, #-12]
   1906c:	subs	r0, r0, r2
   19070:	sbcs	r1, r1, #0
   19074:	bcs	19090 <__assert_fail@plt+0x819c>
   19078:	b	1907c <__assert_fail@plt+0x8188>
   1907c:	ldr	r0, [fp, #-12]
   19080:	ldr	r1, [fp, #-16]
   19084:	mul	r0, r0, r1
   19088:	str	r0, [fp, #-20]	; 0xffffffec
   1908c:	b	190a4 <__assert_fail@plt+0x81b0>
   19090:	ldr	r0, [fp, #-12]
   19094:	ldr	r1, [fp, #-16]
   19098:	mul	r0, r0, r1
   1909c:	str	r0, [fp, #-20]	; 0xffffffec
   190a0:	b	190bc <__assert_fail@plt+0x81c8>
   190a4:	bl	10e40 <__errno_location@plt>
   190a8:	movw	r1, #12
   190ac:	str	r1, [r0]
   190b0:	movw	r0, #0
   190b4:	str	r0, [fp, #-4]
   190b8:	b	190cc <__assert_fail@plt+0x81d8>
   190bc:	ldr	r0, [fp, #-8]
   190c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   190c4:	bl	17d00 <__assert_fail@plt+0x6e0c>
   190c8:	str	r0, [fp, #-4]
   190cc:	ldr	r0, [fp, #-4]
   190d0:	mov	sp, fp
   190d4:	pop	{fp, pc}
   190d8:	svcvc	0x00ffffff
   190dc:	andhi	r0, r0, r0
   190e0:			; <UNDEFINED> instruction: 0xffff8000
   190e4:	push	{fp, lr}
   190e8:	mov	fp, sp
   190ec:	sub	sp, sp, #24
   190f0:	str	r0, [fp, #-8]
   190f4:	str	r1, [sp, #12]
   190f8:	ldr	r0, [fp, #-8]
   190fc:	str	r0, [sp, #8]
   19100:	ldr	r0, [sp, #12]
   19104:	str	r0, [sp, #4]
   19108:	ldr	r0, [sp, #8]
   1910c:	ldr	r1, [sp, #4]
   19110:	cmp	r0, r1
   19114:	bne	19124 <__assert_fail@plt+0x8230>
   19118:	movw	r0, #0
   1911c:	str	r0, [fp, #-4]
   19120:	b	19190 <__assert_fail@plt+0x829c>
   19124:	b	19128 <__assert_fail@plt+0x8234>
   19128:	ldr	r0, [sp, #8]
   1912c:	ldrb	r0, [r0]
   19130:	bl	19c4c <__assert_fail@plt+0x8d58>
   19134:	strb	r0, [sp, #3]
   19138:	ldr	r0, [sp, #4]
   1913c:	ldrb	r0, [r0]
   19140:	bl	19c4c <__assert_fail@plt+0x8d58>
   19144:	strb	r0, [sp, #2]
   19148:	ldrb	r0, [sp, #3]
   1914c:	cmp	r0, #0
   19150:	bne	19158 <__assert_fail@plt+0x8264>
   19154:	b	19180 <__assert_fail@plt+0x828c>
   19158:	ldr	r0, [sp, #8]
   1915c:	add	r0, r0, #1
   19160:	str	r0, [sp, #8]
   19164:	ldr	r0, [sp, #4]
   19168:	add	r0, r0, #1
   1916c:	str	r0, [sp, #4]
   19170:	ldrb	r0, [sp, #3]
   19174:	ldrb	r1, [sp, #2]
   19178:	cmp	r0, r1
   1917c:	beq	19128 <__assert_fail@plt+0x8234>
   19180:	ldrb	r0, [sp, #3]
   19184:	ldrb	r1, [sp, #2]
   19188:	sub	r0, r0, r1
   1918c:	str	r0, [fp, #-4]
   19190:	ldr	r0, [fp, #-4]
   19194:	mov	sp, fp
   19198:	pop	{fp, pc}
   1919c:	push	{fp, lr}
   191a0:	mov	fp, sp
   191a4:	sub	sp, sp, #16
   191a8:	str	r0, [sp, #8]
   191ac:	ldr	r0, [sp, #8]
   191b0:	bl	10da4 <__fpending@plt>
   191b4:	cmp	r0, #0
   191b8:	movw	r0, #0
   191bc:	movne	r0, #1
   191c0:	and	r0, r0, #1
   191c4:	strb	r0, [sp, #7]
   191c8:	ldr	r0, [sp, #8]
   191cc:	bl	10d2c <ferror@plt>
   191d0:	cmp	r0, #0
   191d4:	movw	r0, #0
   191d8:	movne	r0, #1
   191dc:	and	r0, r0, #1
   191e0:	strb	r0, [sp, #6]
   191e4:	ldr	r0, [sp, #8]
   191e8:	bl	10e70 <fclose@plt>
   191ec:	cmp	r0, #0
   191f0:	movw	r0, #0
   191f4:	movne	r0, #1
   191f8:	and	r0, r0, #1
   191fc:	strb	r0, [sp, #5]
   19200:	ldrb	r0, [sp, #6]
   19204:	tst	r0, #1
   19208:	bne	19234 <__assert_fail@plt+0x8340>
   1920c:	ldrb	r0, [sp, #5]
   19210:	tst	r0, #1
   19214:	beq	19258 <__assert_fail@plt+0x8364>
   19218:	ldrb	r0, [sp, #7]
   1921c:	tst	r0, #1
   19220:	bne	19234 <__assert_fail@plt+0x8340>
   19224:	bl	10e40 <__errno_location@plt>
   19228:	ldr	r0, [r0]
   1922c:	cmp	r0, #9
   19230:	beq	19258 <__assert_fail@plt+0x8364>
   19234:	ldrb	r0, [sp, #5]
   19238:	tst	r0, #1
   1923c:	bne	1924c <__assert_fail@plt+0x8358>
   19240:	bl	10e40 <__errno_location@plt>
   19244:	movw	r1, #0
   19248:	str	r1, [r0]
   1924c:	mvn	r0, #0
   19250:	str	r0, [fp, #-4]
   19254:	b	19260 <__assert_fail@plt+0x836c>
   19258:	movw	r0, #0
   1925c:	str	r0, [fp, #-4]
   19260:	ldr	r0, [fp, #-4]
   19264:	mov	sp, fp
   19268:	pop	{fp, pc}
   1926c:	push	{r4, r5, fp, lr}
   19270:	add	fp, sp, #8
   19274:	sub	sp, sp, #272	; 0x110
   19278:	add	r1, sp, #7
   1927c:	str	r0, [fp, #-16]
   19280:	ldr	r0, [fp, #-16]
   19284:	movw	r2, #257	; 0x101
   19288:	bl	19538 <__assert_fail@plt+0x8644>
   1928c:	cmp	r0, #0
   19290:	beq	192a4 <__assert_fail@plt+0x83b0>
   19294:	movw	r0, #0
   19298:	and	r0, r0, #1
   1929c:	strb	r0, [fp, #-9]
   192a0:	b	192f8 <__assert_fail@plt+0x8404>
   192a4:	add	r0, sp, #7
   192a8:	movw	r1, #42907	; 0xa79b
   192ac:	movt	r1, #1
   192b0:	bl	10cf0 <strcmp@plt>
   192b4:	cmp	r0, #0
   192b8:	movw	r0, #1
   192bc:	str	r0, [sp]
   192c0:	beq	192e4 <__assert_fail@plt+0x83f0>
   192c4:	add	r0, sp, #7
   192c8:	movw	r1, #42909	; 0xa79d
   192cc:	movt	r1, #1
   192d0:	bl	10cf0 <strcmp@plt>
   192d4:	cmp	r0, #0
   192d8:	movw	r0, #0
   192dc:	moveq	r0, #1
   192e0:	str	r0, [sp]
   192e4:	ldr	r0, [sp]
   192e8:	mvn	r1, #0
   192ec:	eor	r0, r0, r1
   192f0:	and	r0, r0, #1
   192f4:	strb	r0, [fp, #-9]
   192f8:	ldrb	r0, [fp, #-9]
   192fc:	and	r0, r0, #1
   19300:	sub	sp, fp, #8
   19304:	pop	{r4, r5, fp, pc}
   19308:	push	{fp, lr}
   1930c:	mov	fp, sp
   19310:	bl	10e40 <__errno_location@plt>
   19314:	movw	r1, #12
   19318:	str	r1, [r0]
   1931c:	movw	r0, #0
   19320:	pop	{fp, pc}
   19324:	push	{fp, lr}
   19328:	mov	fp, sp
   1932c:	sub	sp, sp, #8
   19330:	str	r0, [sp, #4]
   19334:	ldr	r0, [sp, #4]
   19338:	cmn	r0, #1
   1933c:	bhi	19350 <__assert_fail@plt+0x845c>
   19340:	ldr	r0, [sp, #4]
   19344:	bl	17be0 <__assert_fail@plt+0x6cec>
   19348:	str	r0, [sp]
   1934c:	b	19358 <__assert_fail@plt+0x8464>
   19350:	bl	19308 <__assert_fail@plt+0x8414>
   19354:	str	r0, [sp]
   19358:	ldr	r0, [sp]
   1935c:	mov	sp, fp
   19360:	pop	{fp, pc}
   19364:	push	{fp, lr}
   19368:	mov	fp, sp
   1936c:	sub	sp, sp, #16
   19370:	str	r0, [fp, #-4]
   19374:	str	r1, [sp, #8]
   19378:	ldr	r0, [sp, #8]
   1937c:	cmn	r0, #1
   19380:	bhi	193b8 <__assert_fail@plt+0x84c4>
   19384:	ldr	r0, [fp, #-4]
   19388:	ldr	r1, [sp, #8]
   1938c:	ldr	r2, [sp, #8]
   19390:	cmp	r2, #0
   19394:	movw	r2, #0
   19398:	movne	r2, #1
   1939c:	mvn	r3, #0
   193a0:	eor	r2, r2, r3
   193a4:	and	r2, r2, #1
   193a8:	orr	r1, r1, r2
   193ac:	bl	17d00 <__assert_fail@plt+0x6e0c>
   193b0:	str	r0, [sp, #4]
   193b4:	b	193c0 <__assert_fail@plt+0x84cc>
   193b8:	bl	19308 <__assert_fail@plt+0x8414>
   193bc:	str	r0, [sp, #4]
   193c0:	ldr	r0, [sp, #4]
   193c4:	mov	sp, fp
   193c8:	pop	{fp, pc}
   193cc:	push	{fp, lr}
   193d0:	mov	fp, sp
   193d4:	sub	sp, sp, #16
   193d8:	str	r0, [sp, #8]
   193dc:	str	r1, [sp, #4]
   193e0:	ldr	r0, [sp, #8]
   193e4:	mvn	r1, #0
   193e8:	cmp	r1, r0
   193ec:	bcs	19410 <__assert_fail@plt+0x851c>
   193f0:	ldr	r0, [sp, #4]
   193f4:	cmp	r0, #0
   193f8:	beq	19408 <__assert_fail@plt+0x8514>
   193fc:	bl	19308 <__assert_fail@plt+0x8414>
   19400:	str	r0, [fp, #-4]
   19404:	b	19450 <__assert_fail@plt+0x855c>
   19408:	movw	r0, #0
   1940c:	str	r0, [sp, #8]
   19410:	ldr	r0, [sp, #4]
   19414:	mvn	r1, #0
   19418:	cmp	r1, r0
   1941c:	bcs	19440 <__assert_fail@plt+0x854c>
   19420:	ldr	r0, [sp, #8]
   19424:	cmp	r0, #0
   19428:	beq	19438 <__assert_fail@plt+0x8544>
   1942c:	bl	19308 <__assert_fail@plt+0x8414>
   19430:	str	r0, [fp, #-4]
   19434:	b	19450 <__assert_fail@plt+0x855c>
   19438:	movw	r0, #0
   1943c:	str	r0, [sp, #4]
   19440:	ldr	r0, [sp, #8]
   19444:	ldr	r1, [sp, #4]
   19448:	bl	17950 <__assert_fail@plt+0x6a5c>
   1944c:	str	r0, [fp, #-4]
   19450:	ldr	r0, [fp, #-4]
   19454:	mov	sp, fp
   19458:	pop	{fp, pc}
   1945c:	push	{fp, lr}
   19460:	mov	fp, sp
   19464:	sub	sp, sp, #16
   19468:	str	r0, [fp, #-4]
   1946c:	str	r1, [sp, #8]
   19470:	str	r2, [sp, #4]
   19474:	ldr	r0, [sp, #8]
   19478:	cmp	r0, #0
   1947c:	beq	1948c <__assert_fail@plt+0x8598>
   19480:	ldr	r0, [sp, #4]
   19484:	cmp	r0, #0
   19488:	bne	19498 <__assert_fail@plt+0x85a4>
   1948c:	movw	r0, #1
   19490:	str	r0, [sp, #4]
   19494:	str	r0, [sp, #8]
   19498:	ldr	r0, [sp, #8]
   1949c:	cmn	r0, #1
   194a0:	bhi	194c8 <__assert_fail@plt+0x85d4>
   194a4:	ldr	r0, [sp, #4]
   194a8:	cmn	r0, #1
   194ac:	bhi	194c8 <__assert_fail@plt+0x85d4>
   194b0:	ldr	r0, [fp, #-4]
   194b4:	ldr	r1, [sp, #8]
   194b8:	ldr	r2, [sp, #4]
   194bc:	bl	17da4 <__assert_fail@plt+0x6eb0>
   194c0:	str	r0, [sp]
   194c4:	b	194d0 <__assert_fail@plt+0x85dc>
   194c8:	bl	19308 <__assert_fail@plt+0x8414>
   194cc:	str	r0, [sp]
   194d0:	ldr	r0, [sp]
   194d4:	mov	sp, fp
   194d8:	pop	{fp, pc}
   194dc:	push	{fp, lr}
   194e0:	mov	fp, sp
   194e4:	sub	sp, sp, #8
   194e8:	movw	r0, #14
   194ec:	bl	10ea0 <nl_langinfo@plt>
   194f0:	str	r0, [sp, #4]
   194f4:	ldr	r0, [sp, #4]
   194f8:	movw	r1, #0
   194fc:	cmp	r0, r1
   19500:	bne	19510 <__assert_fail@plt+0x861c>
   19504:	movw	r0, #41746	; 0xa312
   19508:	movt	r0, #1
   1950c:	str	r0, [sp, #4]
   19510:	ldr	r0, [sp, #4]
   19514:	ldrb	r0, [r0]
   19518:	cmp	r0, #0
   1951c:	bne	1952c <__assert_fail@plt+0x8638>
   19520:	movw	r0, #42915	; 0xa7a3
   19524:	movt	r0, #1
   19528:	str	r0, [sp, #4]
   1952c:	ldr	r0, [sp, #4]
   19530:	mov	sp, fp
   19534:	pop	{fp, pc}
   19538:	push	{fp, lr}
   1953c:	mov	fp, sp
   19540:	sub	sp, sp, #16
   19544:	str	r0, [fp, #-4]
   19548:	str	r1, [sp, #8]
   1954c:	str	r2, [sp, #4]
   19550:	ldr	r0, [fp, #-4]
   19554:	ldr	r1, [sp, #8]
   19558:	ldr	r2, [sp, #4]
   1955c:	bl	19568 <__assert_fail@plt+0x8674>
   19560:	mov	sp, fp
   19564:	pop	{fp, pc}
   19568:	push	{fp, lr}
   1956c:	mov	fp, sp
   19570:	sub	sp, sp, #24
   19574:	str	r0, [fp, #-8]
   19578:	str	r1, [sp, #12]
   1957c:	str	r2, [sp, #8]
   19580:	ldr	r0, [fp, #-8]
   19584:	bl	19668 <__assert_fail@plt+0x8774>
   19588:	str	r0, [sp, #4]
   1958c:	ldr	r0, [sp, #4]
   19590:	movw	r1, #0
   19594:	cmp	r0, r1
   19598:	bne	195c0 <__assert_fail@plt+0x86cc>
   1959c:	ldr	r0, [sp, #8]
   195a0:	cmp	r0, #0
   195a4:	bls	195b4 <__assert_fail@plt+0x86c0>
   195a8:	ldr	r0, [sp, #12]
   195ac:	movw	r1, #0
   195b0:	strb	r1, [r0]
   195b4:	movw	r0, #22
   195b8:	str	r0, [fp, #-4]
   195bc:	b	1963c <__assert_fail@plt+0x8748>
   195c0:	ldr	r0, [sp, #4]
   195c4:	bl	10e28 <strlen@plt>
   195c8:	str	r0, [sp]
   195cc:	ldr	r0, [sp]
   195d0:	ldr	r1, [sp, #8]
   195d4:	cmp	r0, r1
   195d8:	bcs	195fc <__assert_fail@plt+0x8708>
   195dc:	ldr	r0, [sp, #12]
   195e0:	ldr	r1, [sp, #4]
   195e4:	ldr	r2, [sp]
   195e8:	add	r2, r2, #1
   195ec:	bl	10d44 <memcpy@plt>
   195f0:	movw	r0, #0
   195f4:	str	r0, [fp, #-4]
   195f8:	b	1963c <__assert_fail@plt+0x8748>
   195fc:	ldr	r0, [sp, #8]
   19600:	cmp	r0, #0
   19604:	bls	19634 <__assert_fail@plt+0x8740>
   19608:	ldr	r0, [sp, #12]
   1960c:	ldr	r1, [sp, #4]
   19610:	ldr	r2, [sp, #8]
   19614:	sub	r2, r2, #1
   19618:	bl	10d44 <memcpy@plt>
   1961c:	ldr	r0, [sp, #12]
   19620:	ldr	r1, [sp, #8]
   19624:	sub	r1, r1, #1
   19628:	add	r0, r0, r1
   1962c:	movw	r1, #0
   19630:	strb	r1, [r0]
   19634:	movw	r0, #34	; 0x22
   19638:	str	r0, [fp, #-4]
   1963c:	ldr	r0, [fp, #-4]
   19640:	mov	sp, fp
   19644:	pop	{fp, pc}
   19648:	push	{fp, lr}
   1964c:	mov	fp, sp
   19650:	sub	sp, sp, #8
   19654:	str	r0, [sp, #4]
   19658:	ldr	r0, [sp, #4]
   1965c:	bl	19668 <__assert_fail@plt+0x8774>
   19660:	mov	sp, fp
   19664:	pop	{fp, pc}
   19668:	push	{fp, lr}
   1966c:	mov	fp, sp
   19670:	sub	sp, sp, #8
   19674:	str	r0, [sp, #4]
   19678:	ldr	r0, [sp, #4]
   1967c:	movw	r1, #0
   19680:	bl	10e88 <setlocale@plt>
   19684:	str	r0, [sp]
   19688:	ldr	r0, [sp]
   1968c:	mov	sp, fp
   19690:	pop	{fp, pc}
   19694:	sub	sp, sp, #12
   19698:	str	r0, [sp, #4]
   1969c:	ldr	r0, [sp, #4]
   196a0:	sub	r1, r0, #48	; 0x30
   196a4:	cmp	r1, #10
   196a8:	str	r0, [sp]
   196ac:	bcc	196dc <__assert_fail@plt+0x87e8>
   196b0:	b	196b4 <__assert_fail@plt+0x87c0>
   196b4:	ldr	r0, [sp]
   196b8:	sub	r1, r0, #65	; 0x41
   196bc:	cmp	r1, #26
   196c0:	bcc	196dc <__assert_fail@plt+0x87e8>
   196c4:	b	196c8 <__assert_fail@plt+0x87d4>
   196c8:	ldr	r0, [sp]
   196cc:	sub	r1, r0, #97	; 0x61
   196d0:	cmp	r1, #25
   196d4:	bhi	196ec <__assert_fail@plt+0x87f8>
   196d8:	b	196dc <__assert_fail@plt+0x87e8>
   196dc:	movw	r0, #1
   196e0:	and	r0, r0, #1
   196e4:	strb	r0, [sp, #11]
   196e8:	b	196f8 <__assert_fail@plt+0x8804>
   196ec:	movw	r0, #0
   196f0:	and	r0, r0, #1
   196f4:	strb	r0, [sp, #11]
   196f8:	ldrb	r0, [sp, #11]
   196fc:	and	r0, r0, #1
   19700:	add	sp, sp, #12
   19704:	bx	lr
   19708:	sub	sp, sp, #12
   1970c:	str	r0, [sp, #4]
   19710:	ldr	r0, [sp, #4]
   19714:	sub	r1, r0, #65	; 0x41
   19718:	cmp	r1, #26
   1971c:	str	r0, [sp]
   19720:	bcc	1973c <__assert_fail@plt+0x8848>
   19724:	b	19728 <__assert_fail@plt+0x8834>
   19728:	ldr	r0, [sp]
   1972c:	sub	r1, r0, #97	; 0x61
   19730:	cmp	r1, #25
   19734:	bhi	1974c <__assert_fail@plt+0x8858>
   19738:	b	1973c <__assert_fail@plt+0x8848>
   1973c:	movw	r0, #1
   19740:	and	r0, r0, #1
   19744:	strb	r0, [sp, #11]
   19748:	b	19758 <__assert_fail@plt+0x8864>
   1974c:	movw	r0, #0
   19750:	and	r0, r0, #1
   19754:	strb	r0, [sp, #11]
   19758:	ldrb	r0, [sp, #11]
   1975c:	and	r0, r0, #1
   19760:	add	sp, sp, #12
   19764:	bx	lr
   19768:	sub	sp, sp, #8
   1976c:	str	r0, [sp]
   19770:	ldr	r0, [sp]
   19774:	cmp	r0, #127	; 0x7f
   19778:	bhi	19790 <__assert_fail@plt+0x889c>
   1977c:	b	19780 <__assert_fail@plt+0x888c>
   19780:	movw	r0, #1
   19784:	and	r0, r0, #1
   19788:	strb	r0, [sp, #7]
   1978c:	b	1979c <__assert_fail@plt+0x88a8>
   19790:	movw	r0, #0
   19794:	and	r0, r0, #1
   19798:	strb	r0, [sp, #7]
   1979c:	ldrb	r0, [sp, #7]
   197a0:	and	r0, r0, #1
   197a4:	add	sp, sp, #8
   197a8:	bx	lr
   197ac:	sub	sp, sp, #8
   197b0:	str	r0, [sp, #4]
   197b4:	ldr	r0, [sp, #4]
   197b8:	cmp	r0, #32
   197bc:	movw	r0, #1
   197c0:	str	r0, [sp]
   197c4:	beq	197dc <__assert_fail@plt+0x88e8>
   197c8:	ldr	r0, [sp, #4]
   197cc:	cmp	r0, #9
   197d0:	movw	r0, #0
   197d4:	moveq	r0, #1
   197d8:	str	r0, [sp]
   197dc:	ldr	r0, [sp]
   197e0:	and	r0, r0, #1
   197e4:	add	sp, sp, #8
   197e8:	bx	lr
   197ec:	sub	sp, sp, #12
   197f0:	str	r0, [sp, #4]
   197f4:	ldr	r0, [sp, #4]
   197f8:	cmp	r0, #32
   197fc:	str	r0, [sp]
   19800:	bcc	19818 <__assert_fail@plt+0x8924>
   19804:	b	19808 <__assert_fail@plt+0x8914>
   19808:	ldr	r0, [sp]
   1980c:	cmp	r0, #127	; 0x7f
   19810:	bne	19828 <__assert_fail@plt+0x8934>
   19814:	b	19818 <__assert_fail@plt+0x8924>
   19818:	movw	r0, #1
   1981c:	and	r0, r0, #1
   19820:	strb	r0, [sp, #11]
   19824:	b	19834 <__assert_fail@plt+0x8940>
   19828:	movw	r0, #0
   1982c:	and	r0, r0, #1
   19830:	strb	r0, [sp, #11]
   19834:	ldrb	r0, [sp, #11]
   19838:	and	r0, r0, #1
   1983c:	add	sp, sp, #12
   19840:	bx	lr
   19844:	sub	sp, sp, #8
   19848:	str	r0, [sp]
   1984c:	ldr	r0, [sp]
   19850:	sub	r0, r0, #48	; 0x30
   19854:	cmp	r0, #9
   19858:	bhi	19870 <__assert_fail@plt+0x897c>
   1985c:	b	19860 <__assert_fail@plt+0x896c>
   19860:	movw	r0, #1
   19864:	and	r0, r0, #1
   19868:	strb	r0, [sp, #7]
   1986c:	b	1987c <__assert_fail@plt+0x8988>
   19870:	movw	r0, #0
   19874:	and	r0, r0, #1
   19878:	strb	r0, [sp, #7]
   1987c:	ldrb	r0, [sp, #7]
   19880:	and	r0, r0, #1
   19884:	add	sp, sp, #8
   19888:	bx	lr
   1988c:	sub	sp, sp, #8
   19890:	str	r0, [sp]
   19894:	ldr	r0, [sp]
   19898:	sub	r0, r0, #33	; 0x21
   1989c:	cmp	r0, #93	; 0x5d
   198a0:	bhi	198b8 <__assert_fail@plt+0x89c4>
   198a4:	b	198a8 <__assert_fail@plt+0x89b4>
   198a8:	movw	r0, #1
   198ac:	and	r0, r0, #1
   198b0:	strb	r0, [sp, #7]
   198b4:	b	198c4 <__assert_fail@plt+0x89d0>
   198b8:	movw	r0, #0
   198bc:	and	r0, r0, #1
   198c0:	strb	r0, [sp, #7]
   198c4:	ldrb	r0, [sp, #7]
   198c8:	and	r0, r0, #1
   198cc:	add	sp, sp, #8
   198d0:	bx	lr
   198d4:	sub	sp, sp, #8
   198d8:	str	r0, [sp]
   198dc:	ldr	r0, [sp]
   198e0:	sub	r0, r0, #97	; 0x61
   198e4:	cmp	r0, #25
   198e8:	bhi	19900 <__assert_fail@plt+0x8a0c>
   198ec:	b	198f0 <__assert_fail@plt+0x89fc>
   198f0:	movw	r0, #1
   198f4:	and	r0, r0, #1
   198f8:	strb	r0, [sp, #7]
   198fc:	b	1990c <__assert_fail@plt+0x8a18>
   19900:	movw	r0, #0
   19904:	and	r0, r0, #1
   19908:	strb	r0, [sp, #7]
   1990c:	ldrb	r0, [sp, #7]
   19910:	and	r0, r0, #1
   19914:	add	sp, sp, #8
   19918:	bx	lr
   1991c:	sub	sp, sp, #8
   19920:	str	r0, [sp]
   19924:	ldr	r0, [sp]
   19928:	sub	r0, r0, #32
   1992c:	cmp	r0, #94	; 0x5e
   19930:	bhi	19948 <__assert_fail@plt+0x8a54>
   19934:	b	19938 <__assert_fail@plt+0x8a44>
   19938:	movw	r0, #1
   1993c:	and	r0, r0, #1
   19940:	strb	r0, [sp, #7]
   19944:	b	19954 <__assert_fail@plt+0x8a60>
   19948:	movw	r0, #0
   1994c:	and	r0, r0, #1
   19950:	strb	r0, [sp, #7]
   19954:	ldrb	r0, [sp, #7]
   19958:	and	r0, r0, #1
   1995c:	add	sp, sp, #8
   19960:	bx	lr
   19964:	sub	sp, sp, #12
   19968:	str	r0, [sp, #4]
   1996c:	ldr	r0, [sp, #4]
   19970:	sub	r0, r0, #33	; 0x21
   19974:	cmp	r0, #93	; 0x5d
   19978:	str	r0, [sp]
   1997c:	bhi	19b18 <__assert_fail@plt+0x8c24>
   19980:	add	r0, pc, #8
   19984:	ldr	r1, [sp]
   19988:	ldr	r0, [r0, r1, lsl #2]
   1998c:	mov	pc, r0
   19990:	andeq	r9, r1, r8, lsl #22
   19994:	andeq	r9, r1, r8, lsl #22
   19998:	andeq	r9, r1, r8, lsl #22
   1999c:	andeq	r9, r1, r8, lsl #22
   199a0:	andeq	r9, r1, r8, lsl #22
   199a4:	andeq	r9, r1, r8, lsl #22
   199a8:	andeq	r9, r1, r8, lsl #22
   199ac:	andeq	r9, r1, r8, lsl #22
   199b0:	andeq	r9, r1, r8, lsl #22
   199b4:	andeq	r9, r1, r8, lsl #22
   199b8:	andeq	r9, r1, r8, lsl #22
   199bc:	andeq	r9, r1, r8, lsl #22
   199c0:	andeq	r9, r1, r8, lsl #22
   199c4:	andeq	r9, r1, r8, lsl #22
   199c8:	andeq	r9, r1, r8, lsl #22
   199cc:	andeq	r9, r1, r8, lsl fp
   199d0:	andeq	r9, r1, r8, lsl fp
   199d4:	andeq	r9, r1, r8, lsl fp
   199d8:	andeq	r9, r1, r8, lsl fp
   199dc:	andeq	r9, r1, r8, lsl fp
   199e0:	andeq	r9, r1, r8, lsl fp
   199e4:	andeq	r9, r1, r8, lsl fp
   199e8:	andeq	r9, r1, r8, lsl fp
   199ec:	andeq	r9, r1, r8, lsl fp
   199f0:	andeq	r9, r1, r8, lsl fp
   199f4:	andeq	r9, r1, r8, lsl #22
   199f8:	andeq	r9, r1, r8, lsl #22
   199fc:	andeq	r9, r1, r8, lsl #22
   19a00:	andeq	r9, r1, r8, lsl #22
   19a04:	andeq	r9, r1, r8, lsl #22
   19a08:	andeq	r9, r1, r8, lsl #22
   19a0c:	andeq	r9, r1, r8, lsl #22
   19a10:	andeq	r9, r1, r8, lsl fp
   19a14:	andeq	r9, r1, r8, lsl fp
   19a18:	andeq	r9, r1, r8, lsl fp
   19a1c:	andeq	r9, r1, r8, lsl fp
   19a20:	andeq	r9, r1, r8, lsl fp
   19a24:	andeq	r9, r1, r8, lsl fp
   19a28:	andeq	r9, r1, r8, lsl fp
   19a2c:	andeq	r9, r1, r8, lsl fp
   19a30:	andeq	r9, r1, r8, lsl fp
   19a34:	andeq	r9, r1, r8, lsl fp
   19a38:	andeq	r9, r1, r8, lsl fp
   19a3c:	andeq	r9, r1, r8, lsl fp
   19a40:	andeq	r9, r1, r8, lsl fp
   19a44:	andeq	r9, r1, r8, lsl fp
   19a48:	andeq	r9, r1, r8, lsl fp
   19a4c:	andeq	r9, r1, r8, lsl fp
   19a50:	andeq	r9, r1, r8, lsl fp
   19a54:	andeq	r9, r1, r8, lsl fp
   19a58:	andeq	r9, r1, r8, lsl fp
   19a5c:	andeq	r9, r1, r8, lsl fp
   19a60:	andeq	r9, r1, r8, lsl fp
   19a64:	andeq	r9, r1, r8, lsl fp
   19a68:	andeq	r9, r1, r8, lsl fp
   19a6c:	andeq	r9, r1, r8, lsl fp
   19a70:	andeq	r9, r1, r8, lsl fp
   19a74:	andeq	r9, r1, r8, lsl fp
   19a78:	andeq	r9, r1, r8, lsl #22
   19a7c:	andeq	r9, r1, r8, lsl #22
   19a80:	andeq	r9, r1, r8, lsl #22
   19a84:	andeq	r9, r1, r8, lsl #22
   19a88:	andeq	r9, r1, r8, lsl #22
   19a8c:	andeq	r9, r1, r8, lsl #22
   19a90:	andeq	r9, r1, r8, lsl fp
   19a94:	andeq	r9, r1, r8, lsl fp
   19a98:	andeq	r9, r1, r8, lsl fp
   19a9c:	andeq	r9, r1, r8, lsl fp
   19aa0:	andeq	r9, r1, r8, lsl fp
   19aa4:	andeq	r9, r1, r8, lsl fp
   19aa8:	andeq	r9, r1, r8, lsl fp
   19aac:	andeq	r9, r1, r8, lsl fp
   19ab0:	andeq	r9, r1, r8, lsl fp
   19ab4:	andeq	r9, r1, r8, lsl fp
   19ab8:	andeq	r9, r1, r8, lsl fp
   19abc:	andeq	r9, r1, r8, lsl fp
   19ac0:	andeq	r9, r1, r8, lsl fp
   19ac4:	andeq	r9, r1, r8, lsl fp
   19ac8:	andeq	r9, r1, r8, lsl fp
   19acc:	andeq	r9, r1, r8, lsl fp
   19ad0:	andeq	r9, r1, r8, lsl fp
   19ad4:	andeq	r9, r1, r8, lsl fp
   19ad8:	andeq	r9, r1, r8, lsl fp
   19adc:	andeq	r9, r1, r8, lsl fp
   19ae0:	andeq	r9, r1, r8, lsl fp
   19ae4:	andeq	r9, r1, r8, lsl fp
   19ae8:	andeq	r9, r1, r8, lsl fp
   19aec:	andeq	r9, r1, r8, lsl fp
   19af0:	andeq	r9, r1, r8, lsl fp
   19af4:	andeq	r9, r1, r8, lsl fp
   19af8:	andeq	r9, r1, r8, lsl #22
   19afc:	andeq	r9, r1, r8, lsl #22
   19b00:	andeq	r9, r1, r8, lsl #22
   19b04:	andeq	r9, r1, r8, lsl #22
   19b08:	movw	r0, #1
   19b0c:	and	r0, r0, #1
   19b10:	strb	r0, [sp, #11]
   19b14:	b	19b24 <__assert_fail@plt+0x8c30>
   19b18:	movw	r0, #0
   19b1c:	and	r0, r0, #1
   19b20:	strb	r0, [sp, #11]
   19b24:	ldrb	r0, [sp, #11]
   19b28:	and	r0, r0, #1
   19b2c:	add	sp, sp, #12
   19b30:	bx	lr
   19b34:	sub	sp, sp, #12
   19b38:	str	r0, [sp, #4]
   19b3c:	ldr	r0, [sp, #4]
   19b40:	sub	r1, r0, #9
   19b44:	cmp	r1, #5
   19b48:	str	r0, [sp]
   19b4c:	bcc	19b64 <__assert_fail@plt+0x8c70>
   19b50:	b	19b54 <__assert_fail@plt+0x8c60>
   19b54:	ldr	r0, [sp]
   19b58:	cmp	r0, #32
   19b5c:	bne	19b74 <__assert_fail@plt+0x8c80>
   19b60:	b	19b64 <__assert_fail@plt+0x8c70>
   19b64:	movw	r0, #1
   19b68:	and	r0, r0, #1
   19b6c:	strb	r0, [sp, #11]
   19b70:	b	19b80 <__assert_fail@plt+0x8c8c>
   19b74:	movw	r0, #0
   19b78:	and	r0, r0, #1
   19b7c:	strb	r0, [sp, #11]
   19b80:	ldrb	r0, [sp, #11]
   19b84:	and	r0, r0, #1
   19b88:	add	sp, sp, #12
   19b8c:	bx	lr
   19b90:	sub	sp, sp, #8
   19b94:	str	r0, [sp]
   19b98:	ldr	r0, [sp]
   19b9c:	sub	r0, r0, #65	; 0x41
   19ba0:	cmp	r0, #25
   19ba4:	bhi	19bbc <__assert_fail@plt+0x8cc8>
   19ba8:	b	19bac <__assert_fail@plt+0x8cb8>
   19bac:	movw	r0, #1
   19bb0:	and	r0, r0, #1
   19bb4:	strb	r0, [sp, #7]
   19bb8:	b	19bc8 <__assert_fail@plt+0x8cd4>
   19bbc:	movw	r0, #0
   19bc0:	and	r0, r0, #1
   19bc4:	strb	r0, [sp, #7]
   19bc8:	ldrb	r0, [sp, #7]
   19bcc:	and	r0, r0, #1
   19bd0:	add	sp, sp, #8
   19bd4:	bx	lr
   19bd8:	sub	sp, sp, #12
   19bdc:	str	r0, [sp, #4]
   19be0:	ldr	r0, [sp, #4]
   19be4:	sub	r1, r0, #48	; 0x30
   19be8:	cmp	r1, #10
   19bec:	str	r0, [sp]
   19bf0:	bcc	19c20 <__assert_fail@plt+0x8d2c>
   19bf4:	b	19bf8 <__assert_fail@plt+0x8d04>
   19bf8:	ldr	r0, [sp]
   19bfc:	sub	r1, r0, #65	; 0x41
   19c00:	cmp	r1, #6
   19c04:	bcc	19c20 <__assert_fail@plt+0x8d2c>
   19c08:	b	19c0c <__assert_fail@plt+0x8d18>
   19c0c:	ldr	r0, [sp]
   19c10:	sub	r1, r0, #97	; 0x61
   19c14:	cmp	r1, #5
   19c18:	bhi	19c30 <__assert_fail@plt+0x8d3c>
   19c1c:	b	19c20 <__assert_fail@plt+0x8d2c>
   19c20:	movw	r0, #1
   19c24:	and	r0, r0, #1
   19c28:	strb	r0, [sp, #11]
   19c2c:	b	19c3c <__assert_fail@plt+0x8d48>
   19c30:	movw	r0, #0
   19c34:	and	r0, r0, #1
   19c38:	strb	r0, [sp, #11]
   19c3c:	ldrb	r0, [sp, #11]
   19c40:	and	r0, r0, #1
   19c44:	add	sp, sp, #12
   19c48:	bx	lr
   19c4c:	sub	sp, sp, #8
   19c50:	str	r0, [sp]
   19c54:	ldr	r0, [sp]
   19c58:	sub	r0, r0, #65	; 0x41
   19c5c:	cmp	r0, #25
   19c60:	bhi	19c7c <__assert_fail@plt+0x8d88>
   19c64:	b	19c68 <__assert_fail@plt+0x8d74>
   19c68:	ldr	r0, [sp]
   19c6c:	sub	r0, r0, #65	; 0x41
   19c70:	add	r0, r0, #97	; 0x61
   19c74:	str	r0, [sp, #4]
   19c78:	b	19c84 <__assert_fail@plt+0x8d90>
   19c7c:	ldr	r0, [sp]
   19c80:	str	r0, [sp, #4]
   19c84:	ldr	r0, [sp, #4]
   19c88:	add	sp, sp, #8
   19c8c:	bx	lr
   19c90:	sub	sp, sp, #8
   19c94:	str	r0, [sp]
   19c98:	ldr	r0, [sp]
   19c9c:	sub	r0, r0, #97	; 0x61
   19ca0:	cmp	r0, #25
   19ca4:	bhi	19cc0 <__assert_fail@plt+0x8dcc>
   19ca8:	b	19cac <__assert_fail@plt+0x8db8>
   19cac:	ldr	r0, [sp]
   19cb0:	sub	r0, r0, #97	; 0x61
   19cb4:	add	r0, r0, #65	; 0x41
   19cb8:	str	r0, [sp, #4]
   19cbc:	b	19cc8 <__assert_fail@plt+0x8dd4>
   19cc0:	ldr	r0, [sp]
   19cc4:	str	r0, [sp, #4]
   19cc8:	ldr	r0, [sp, #4]
   19ccc:	add	sp, sp, #8
   19cd0:	bx	lr
   19cd4:	cmp	r3, #0
   19cd8:	cmpeq	r2, #0
   19cdc:	bne	19d00 <__assert_fail@plt+0x8e0c>
   19ce0:	cmp	r1, #0
   19ce4:	movlt	r1, #-2147483648	; 0x80000000
   19ce8:	movlt	r0, #0
   19cec:	blt	19cfc <__assert_fail@plt+0x8e08>
   19cf0:	cmpeq	r0, #0
   19cf4:	mvnne	r1, #-2147483648	; 0x80000000
   19cf8:	mvnne	r0, #0
   19cfc:	b	19de4 <__assert_fail@plt+0x8ef0>
   19d00:	sub	sp, sp, #8
   19d04:	push	{sp, lr}
   19d08:	cmp	r1, #0
   19d0c:	blt	19d2c <__assert_fail@plt+0x8e38>
   19d10:	cmp	r3, #0
   19d14:	blt	19d60 <__assert_fail@plt+0x8e6c>
   19d18:	bl	19df4 <__assert_fail@plt+0x8f00>
   19d1c:	ldr	lr, [sp, #4]
   19d20:	add	sp, sp, #8
   19d24:	pop	{r2, r3}
   19d28:	bx	lr
   19d2c:	rsbs	r0, r0, #0
   19d30:	sbc	r1, r1, r1, lsl #1
   19d34:	cmp	r3, #0
   19d38:	blt	19d84 <__assert_fail@plt+0x8e90>
   19d3c:	bl	19df4 <__assert_fail@plt+0x8f00>
   19d40:	ldr	lr, [sp, #4]
   19d44:	add	sp, sp, #8
   19d48:	pop	{r2, r3}
   19d4c:	rsbs	r0, r0, #0
   19d50:	sbc	r1, r1, r1, lsl #1
   19d54:	rsbs	r2, r2, #0
   19d58:	sbc	r3, r3, r3, lsl #1
   19d5c:	bx	lr
   19d60:	rsbs	r2, r2, #0
   19d64:	sbc	r3, r3, r3, lsl #1
   19d68:	bl	19df4 <__assert_fail@plt+0x8f00>
   19d6c:	ldr	lr, [sp, #4]
   19d70:	add	sp, sp, #8
   19d74:	pop	{r2, r3}
   19d78:	rsbs	r0, r0, #0
   19d7c:	sbc	r1, r1, r1, lsl #1
   19d80:	bx	lr
   19d84:	rsbs	r2, r2, #0
   19d88:	sbc	r3, r3, r3, lsl #1
   19d8c:	bl	19df4 <__assert_fail@plt+0x8f00>
   19d90:	ldr	lr, [sp, #4]
   19d94:	add	sp, sp, #8
   19d98:	pop	{r2, r3}
   19d9c:	rsbs	r2, r2, #0
   19da0:	sbc	r3, r3, r3, lsl #1
   19da4:	bx	lr
   19da8:	cmp	r3, #0
   19dac:	cmpeq	r2, #0
   19db0:	bne	19dc8 <__assert_fail@plt+0x8ed4>
   19db4:	cmp	r1, #0
   19db8:	cmpeq	r0, #0
   19dbc:	mvnne	r1, #0
   19dc0:	mvnne	r0, #0
   19dc4:	b	19de4 <__assert_fail@plt+0x8ef0>
   19dc8:	sub	sp, sp, #8
   19dcc:	push	{sp, lr}
   19dd0:	bl	19df4 <__assert_fail@plt+0x8f00>
   19dd4:	ldr	lr, [sp, #4]
   19dd8:	add	sp, sp, #8
   19ddc:	pop	{r2, r3}
   19de0:	bx	lr
   19de4:	push	{r1, lr}
   19de8:	mov	r0, #8
   19dec:	bl	10ce4 <raise@plt>
   19df0:	pop	{r1, pc}
   19df4:	cmp	r1, r3
   19df8:	cmpeq	r0, r2
   19dfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19e00:	mov	r4, r0
   19e04:	movcc	r0, #0
   19e08:	mov	r5, r1
   19e0c:	ldr	lr, [sp, #36]	; 0x24
   19e10:	movcc	r1, r0
   19e14:	bcc	19f10 <__assert_fail@plt+0x901c>
   19e18:	cmp	r3, #0
   19e1c:	clzeq	ip, r2
   19e20:	clzne	ip, r3
   19e24:	addeq	ip, ip, #32
   19e28:	cmp	r5, #0
   19e2c:	clzeq	r1, r4
   19e30:	addeq	r1, r1, #32
   19e34:	clzne	r1, r5
   19e38:	sub	ip, ip, r1
   19e3c:	sub	sl, ip, #32
   19e40:	lsl	r9, r3, ip
   19e44:	rsb	fp, ip, #32
   19e48:	orr	r9, r9, r2, lsl sl
   19e4c:	orr	r9, r9, r2, lsr fp
   19e50:	lsl	r8, r2, ip
   19e54:	cmp	r5, r9
   19e58:	cmpeq	r4, r8
   19e5c:	movcc	r0, #0
   19e60:	movcc	r1, r0
   19e64:	bcc	19e80 <__assert_fail@plt+0x8f8c>
   19e68:	mov	r0, #1
   19e6c:	subs	r4, r4, r8
   19e70:	lsl	r1, r0, sl
   19e74:	orr	r1, r1, r0, lsr fp
   19e78:	lsl	r0, r0, ip
   19e7c:	sbc	r5, r5, r9
   19e80:	cmp	ip, #0
   19e84:	beq	19f10 <__assert_fail@plt+0x901c>
   19e88:	lsr	r6, r8, #1
   19e8c:	orr	r6, r6, r9, lsl #31
   19e90:	lsr	r7, r9, #1
   19e94:	mov	r2, ip
   19e98:	b	19ebc <__assert_fail@plt+0x8fc8>
   19e9c:	subs	r3, r4, r6
   19ea0:	sbc	r8, r5, r7
   19ea4:	adds	r3, r3, r3
   19ea8:	adc	r8, r8, r8
   19eac:	adds	r4, r3, #1
   19eb0:	adc	r5, r8, #0
   19eb4:	subs	r2, r2, #1
   19eb8:	beq	19ed8 <__assert_fail@plt+0x8fe4>
   19ebc:	cmp	r5, r7
   19ec0:	cmpeq	r4, r6
   19ec4:	bcs	19e9c <__assert_fail@plt+0x8fa8>
   19ec8:	adds	r4, r4, r4
   19ecc:	adc	r5, r5, r5
   19ed0:	subs	r2, r2, #1
   19ed4:	bne	19ebc <__assert_fail@plt+0x8fc8>
   19ed8:	lsr	r3, r4, ip
   19edc:	orr	r3, r3, r5, lsl fp
   19ee0:	lsr	r2, r5, ip
   19ee4:	orr	r3, r3, r5, lsr sl
   19ee8:	adds	r0, r0, r4
   19eec:	mov	r4, r3
   19ef0:	lsl	r3, r2, ip
   19ef4:	orr	r3, r3, r4, lsl sl
   19ef8:	lsl	ip, r4, ip
   19efc:	orr	r3, r3, r4, lsr fp
   19f00:	adc	r1, r1, r5
   19f04:	subs	r0, r0, ip
   19f08:	mov	r5, r2
   19f0c:	sbc	r1, r1, r3
   19f10:	cmp	lr, #0
   19f14:	strdne	r4, [lr]
   19f18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19f1c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19f20:	mov	r7, r0
   19f24:	ldr	r6, [pc, #72]	; 19f74 <__assert_fail@plt+0x9080>
   19f28:	ldr	r5, [pc, #72]	; 19f78 <__assert_fail@plt+0x9084>
   19f2c:	add	r6, pc, r6
   19f30:	add	r5, pc, r5
   19f34:	sub	r6, r6, r5
   19f38:	mov	r8, r1
   19f3c:	mov	r9, r2
   19f40:	bl	10cb8 <calloc@plt-0x20>
   19f44:	asrs	r6, r6, #2
   19f48:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19f4c:	mov	r4, #0
   19f50:	add	r4, r4, #1
   19f54:	ldr	r3, [r5], #4
   19f58:	mov	r2, r9
   19f5c:	mov	r1, r8
   19f60:	mov	r0, r7
   19f64:	blx	r3
   19f68:	cmp	r6, r4
   19f6c:	bne	19f50 <__assert_fail@plt+0x905c>
   19f70:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19f74:	ldrdeq	r0, [r1], -r8
   19f78:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   19f7c:	bx	lr
   19f80:	ldr	r3, [pc, #12]	; 19f94 <__assert_fail@plt+0x90a0>
   19f84:	mov	r1, #0
   19f88:	add	r3, pc, r3
   19f8c:	ldr	r2, [r3]
   19f90:	b	10e4c <__cxa_atexit@plt>
   19f94:	andeq	r1, r1, ip, lsr r1

Disassembly of section .fini:

00019f98 <.fini>:
   19f98:	push	{r3, lr}
   19f9c:	pop	{r3, pc}
