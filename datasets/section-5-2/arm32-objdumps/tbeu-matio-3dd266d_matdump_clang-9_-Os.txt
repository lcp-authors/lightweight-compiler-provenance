
../repos/tbeu-matio-3dd266d/tools/.libs/matdump:     file format elf32-littlearm


Disassembly of section .init:

00010e8c <.init>:
   10e8c:	push	{r3, lr}
   10e90:	bl	1114c <Mat_VarReadNextInfo@plt+0x48>
   10e94:	pop	{r3, pc}

Disassembly of section .plt:

00010e98 <Mat_VarGetNumberOfFields@plt-0x14>:
   10e98:	push	{lr}		; (str lr, [sp, #-4]!)
   10e9c:	ldr	lr, [pc, #4]	; 10ea8 <Mat_VarGetNumberOfFields@plt-0x4>
   10ea0:	add	lr, pc, lr
   10ea4:	ldr	pc, [lr, #8]!
   10ea8:	andeq	r4, r1, r8, asr r1

00010eac <Mat_VarGetNumberOfFields@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #20, 20	; 0x14000
   10eb4:	ldr	pc, [ip, #344]!	; 0x158

00010eb8 <Mat_SetVerbose@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #20, 20	; 0x14000
   10ec0:	ldr	pc, [ip, #336]!	; 0x150

00010ec4 <Mat_LogClose@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #20, 20	; 0x14000
   10ecc:	ldr	pc, [ip, #328]!	; 0x148

00010ed0 <Mat_VarReadNext@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #20, 20	; 0x14000
   10ed8:	ldr	pc, [ip, #320]!	; 0x140

00010edc <strcmp@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #20, 20	; 0x14000
   10ee4:	ldr	pc, [ip, #312]!	; 0x138

00010ee8 <Mat_Open@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #20, 20	; 0x14000
   10ef0:	ldr	pc, [ip, #304]!	; 0x130

00010ef4 <printf@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #20, 20	; 0x14000
   10efc:	ldr	pc, [ip, #296]!	; 0x128

00010f00 <Mat_VarGetCells@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #20, 20	; 0x14000
   10f08:	ldr	pc, [ip, #288]!	; 0x120

00010f0c <Mat_VarGetCell@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #20, 20	; 0x14000
   10f14:	ldr	pc, [ip, #280]!	; 0x118

00010f18 <Mat_VarCreate@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #20, 20	; 0x14000
   10f20:	ldr	pc, [ip, #272]!	; 0x110

00010f24 <free@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #20, 20	; 0x14000
   10f2c:	ldr	pc, [ip, #264]!	; 0x108

00010f30 <Mat_Warning@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #20, 20	; 0x14000
   10f38:	ldr	pc, [ip, #256]!	; 0x100

00010f3c <Mat_VarReadDataLinear@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #20, 20	; 0x14000
   10f44:	ldr	pc, [ip, #248]!	; 0xf8

00010f48 <Mat_Message@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #20, 20	; 0x14000
   10f50:	ldr	pc, [ip, #240]!	; 0xf0

00010f54 <Mat_VarReadData@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #20, 20	; 0x14000
   10f5c:	ldr	pc, [ip, #232]!	; 0xe8

00010f60 <Mat_VarReadDataAll@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #20, 20	; 0x14000
   10f68:	ldr	pc, [ip, #224]!	; 0xe0

00010f6c <Mat_VarReadInfo@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #20, 20	; 0x14000
   10f74:	ldr	pc, [ip, #216]!	; 0xd8

00010f78 <fwrite@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #20, 20	; 0x14000
   10f80:	ldr	pc, [ip, #208]!	; 0xd0

00010f84 <Mat_VarGetStructFieldnames@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #20, 20	; 0x14000
   10f8c:	ldr	pc, [ip, #200]!	; 0xc8

00010f90 <getenv@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #20, 20	; 0x14000
   10f98:	ldr	pc, [ip, #192]!	; 0xc0

00010f9c <puts@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #20, 20	; 0x14000
   10fa4:	ldr	pc, [ip, #184]!	; 0xb8

00010fa8 <malloc@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #20, 20	; 0x14000
   10fb0:	ldr	pc, [ip, #176]!	; 0xb0

00010fb4 <log10@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #20, 20	; 0x14000
   10fbc:	ldr	pc, [ip, #168]!	; 0xa8

00010fc0 <__libc_start_main@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #20, 20	; 0x14000
   10fc8:	ldr	pc, [ip, #160]!	; 0xa0

00010fcc <__gmon_start__@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #20, 20	; 0x14000
   10fd4:	ldr	pc, [ip, #152]!	; 0x98

00010fd8 <exit@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #20, 20	; 0x14000
   10fe0:	ldr	pc, [ip, #144]!	; 0x90

00010fe4 <Mat_VarFree@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #20, 20	; 0x14000
   10fec:	ldr	pc, [ip, #136]!	; 0x88

00010ff0 <Mat_SizeOf@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #20, 20	; 0x14000
   10ff8:	ldr	pc, [ip, #128]!	; 0x80

00010ffc <strlen@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #20, 20	; 0x14000
   11004:	ldr	pc, [ip, #120]!	; 0x78

00011008 <strchr@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #20, 20	; 0x14000
   11010:	ldr	pc, [ip, #112]!	; 0x70

00011014 <warnx@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #20, 20	; 0x14000
   1101c:	ldr	pc, [ip, #104]!	; 0x68

00011020 <fprintf@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #20, 20	; 0x14000
   11028:	ldr	pc, [ip, #96]!	; 0x60

0001102c <Mat_GetLibraryVersion@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #20, 20	; 0x14000
   11034:	ldr	pc, [ip, #88]!	; 0x58

00011038 <Mat_VarPrint@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #20, 20	; 0x14000
   11040:	ldr	pc, [ip, #80]!	; 0x50

00011044 <memset@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #20, 20	; 0x14000
   1104c:	ldr	pc, [ip, #72]!	; 0x48

00011050 <putchar@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #20, 20	; 0x14000
   11058:	ldr	pc, [ip, #64]!	; 0x40

0001105c <Mat_Close@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #20, 20	; 0x14000
   11064:	ldr	pc, [ip, #56]!	; 0x38

00011068 <Mat_Critical@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #20, 20	; 0x14000
   11070:	ldr	pc, [ip, #48]!	; 0x30

00011074 <Mat_LogInitFunc@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #20, 20	; 0x14000
   1107c:	ldr	pc, [ip, #40]!	; 0x28

00011080 <Mat_VerbMessage@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #20, 20	; 0x14000
   11088:	ldr	pc, [ip, #32]!

0001108c <Mat_VarGetCellsLinear@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #20, 20	; 0x14000
   11094:	ldr	pc, [ip, #24]!

00011098 <sprintf@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #20, 20	; 0x14000
   110a0:	ldr	pc, [ip, #16]!

000110a4 <Mat_Help@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #20, 20	; 0x14000
   110ac:	ldr	pc, [ip, #8]!

000110b0 <atoi@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #20, 20	; 0x14000
   110b8:	ldr	pc, [ip, #0]!

000110bc <Mat_VarGetStructFieldByName@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #77824	; 0x13000
   110c4:	ldr	pc, [ip, #4088]!	; 0xff8

000110c8 <Mat_SizeOfClass@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #77824	; 0x13000
   110d0:	ldr	pc, [ip, #4080]!	; 0xff0

000110d4 <Mat_VarGetSize@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #77824	; 0x13000
   110dc:	ldr	pc, [ip, #4072]!	; 0xfe8

000110e0 <strncmp@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #77824	; 0x13000
   110e8:	ldr	pc, [ip, #4064]!	; 0xfe0

000110ec <abort@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #77824	; 0x13000
   110f4:	ldr	pc, [ip, #4056]!	; 0xfd8

000110f8 <Mat_VarDuplicate@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #77824	; 0x13000
   11100:	ldr	pc, [ip, #4048]!	; 0xfd0

00011104 <Mat_VarReadNextInfo@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #77824	; 0x13000
   1110c:	ldr	pc, [ip, #4040]!	; 0xfc8

Disassembly of section .text:

00011110 <getopt@@Base-0x1c44>:
   11110:	mov	fp, #0
   11114:	mov	lr, #0
   11118:	pop	{r1}		; (ldr r1, [sp], #4)
   1111c:	mov	r2, sp
   11120:	push	{r2}		; (str r2, [sp, #-4]!)
   11124:	push	{r0}		; (str r0, [sp, #-4]!)
   11128:	ldr	ip, [pc, #16]	; 11140 <Mat_VarReadNextInfo@plt+0x3c>
   1112c:	push	{ip}		; (str ip, [sp, #-4]!)
   11130:	ldr	r0, [pc, #12]	; 11144 <Mat_VarReadNextInfo@plt+0x40>
   11134:	ldr	r3, [pc, #12]	; 11148 <Mat_VarReadNextInfo@plt+0x44>
   11138:	bl	10fc0 <__libc_start_main@plt>
   1113c:	bl	110ec <abort@plt>
   11140:			; <UNDEFINED> instruction: 0x00013abc
   11144:	andeq	r1, r1, r0, lsl #4
   11148:	andeq	r3, r1, ip, asr sl
   1114c:	ldr	r3, [pc, #20]	; 11168 <Mat_VarReadNextInfo@plt+0x64>
   11150:	ldr	r2, [pc, #20]	; 1116c <Mat_VarReadNextInfo@plt+0x68>
   11154:	add	r3, pc, r3
   11158:	ldr	r2, [r3, r2]
   1115c:	cmp	r2, #0
   11160:	bxeq	lr
   11164:	b	10fcc <__gmon_start__@plt>
   11168:	andeq	r3, r1, r4, lsr #29
   1116c:	andeq	r0, r0, r0, ror #1
   11170:	ldr	r0, [pc, #24]	; 11190 <Mat_VarReadNextInfo@plt+0x8c>
   11174:	ldr	r3, [pc, #24]	; 11194 <Mat_VarReadNextInfo@plt+0x90>
   11178:	cmp	r3, r0
   1117c:	bxeq	lr
   11180:	ldr	r3, [pc, #16]	; 11198 <Mat_VarReadNextInfo@plt+0x94>
   11184:	cmp	r3, #0
   11188:	bxeq	lr
   1118c:	bx	r3
   11190:	andeq	r5, r2, ip, asr #3
   11194:	andeq	r5, r2, ip, asr #3
   11198:	andeq	r0, r0, r0
   1119c:	ldr	r0, [pc, #36]	; 111c8 <Mat_VarReadNextInfo@plt+0xc4>
   111a0:	ldr	r1, [pc, #36]	; 111cc <Mat_VarReadNextInfo@plt+0xc8>
   111a4:	sub	r1, r1, r0
   111a8:	asr	r1, r1, #2
   111ac:	add	r1, r1, r1, lsr #31
   111b0:	asrs	r1, r1, #1
   111b4:	bxeq	lr
   111b8:	ldr	r3, [pc, #16]	; 111d0 <Mat_VarReadNextInfo@plt+0xcc>
   111bc:	cmp	r3, #0
   111c0:	bxeq	lr
   111c4:	bx	r3
   111c8:	andeq	r5, r2, ip, asr #3
   111cc:	andeq	r5, r2, ip, asr #3
   111d0:	andeq	r0, r0, r0
   111d4:	push	{r4, lr}
   111d8:	ldr	r4, [pc, #24]	; 111f8 <Mat_VarReadNextInfo@plt+0xf4>
   111dc:	ldrb	r3, [r4]
   111e0:	cmp	r3, #0
   111e4:	popne	{r4, pc}
   111e8:	bl	11170 <Mat_VarReadNextInfo@plt+0x6c>
   111ec:	mov	r3, #1
   111f0:	strb	r3, [r4]
   111f4:	pop	{r4, pc}
   111f8:	ldrdeq	r5, [r2], -r4
   111fc:	b	1119c <Mat_VarReadNextInfo@plt+0x98>
   11200:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11204:	add	fp, sp, #28
   11208:	sub	sp, sp, #60	; 0x3c
   1120c:	mov	r6, r0
   11210:	sub	r0, fp, #40	; 0x28
   11214:	mov	r4, r1
   11218:	add	r1, r0, #4
   1121c:	add	r2, r0, #8
   11220:	bl	1102c <Mat_GetLibraryVersion@plt>
   11224:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11228:	cmp	r0, #1
   1122c:	ldreq	r0, [fp, #-36]	; 0xffffffdc
   11230:	cmpeq	r0, #5
   11234:	beq	11260 <Mat_VarReadNextInfo@plt+0x15c>
   11238:	movw	r0, #20944	; 0x51d0
   1123c:	mov	r1, #55	; 0x37
   11240:	mov	r2, #1
   11244:	mov	r4, #1
   11248:	movt	r0, #2
   1124c:	ldr	r3, [r0]
   11250:	movw	r0, #15060	; 0x3ad4
   11254:	movt	r0, #1
   11258:	bl	10f78 <fwrite@plt>
   1125c:	b	11d50 <Mat_VarReadNextInfo@plt+0xc4c>
   11260:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11264:	cmp	r0, #15
   11268:	bne	11238 <Mat_VarReadNextInfo@plt+0x134>
   1126c:	movw	r0, #15052	; 0x3acc
   11270:	movw	r1, #7568	; 0x1d90
   11274:	str	r4, [sp, #36]	; 0x24
   11278:	movt	r0, #1
   1127c:	movt	r1, #1
   11280:	bl	11074 <Mat_LogInitFunc@plt>
   11284:	movw	r1, #20952	; 0x51d8
   11288:	movw	r0, #7648	; 0x1de0
   1128c:	movw	r9, #15588	; 0x3ce4
   11290:	movw	sl, #20728	; 0x50f8
   11294:	movw	r8, #15116	; 0x3b0c
   11298:	movw	r4, #15320	; 0x3bd8
   1129c:	mov	r7, #0
   112a0:	mov	r5, #1
   112a4:	movt	r1, #2
   112a8:	movt	r0, #1
   112ac:	movt	r9, #1
   112b0:	movt	sl, #2
   112b4:	movt	r8, #1
   112b8:	movt	r4, #1
   112bc:	str	r0, [r1]
   112c0:	ldr	r1, [sp, #36]	; 0x24
   112c4:	mov	r0, r6
   112c8:	mov	r2, r9
   112cc:	mov	r3, sl
   112d0:	str	r7, [sp]
   112d4:	bl	13510 <getopt_long@@Base>
   112d8:	mov	r1, r0
   112dc:	cmp	r0, #101	; 0x65
   112e0:	ble	1130c <Mat_VarReadNextInfo@plt+0x208>
   112e4:	cmp	r1, #102	; 0x66
   112e8:	beq	1134c <Mat_VarReadNextInfo@plt+0x248>
   112ec:	cmp	r1, #104	; 0x68
   112f0:	beq	11390 <Mat_VarReadNextInfo@plt+0x28c>
   112f4:	cmp	r1, #118	; 0x76
   112f8:	bne	113b8 <Mat_VarReadNextInfo@plt+0x2b4>
   112fc:	mov	r0, #1
   11300:	mov	r1, #0
   11304:	bl	10eb8 <Mat_SetVerbose@plt>
   11308:	b	112c0 <Mat_VarReadNextInfo@plt+0x1bc>
   1130c:	cmp	r1, #85	; 0x55
   11310:	bgt	11328 <Mat_VarReadNextInfo@plt+0x224>
   11314:	cmn	r1, #1
   11318:	beq	113e8 <Mat_VarReadNextInfo@plt+0x2e4>
   1131c:	cmp	r1, #72	; 0x48
   11320:	bne	113b8 <Mat_VarReadNextInfo@plt+0x2b4>
   11324:	b	11d5c <Mat_VarReadNextInfo@plt+0xc58>
   11328:	cmp	r1, #100	; 0x64
   1132c:	bne	113b0 <Mat_VarReadNextInfo@plt+0x2ac>
   11330:	movw	r0, #20956	; 0x51dc
   11334:	mov	r1, r8
   11338:	movt	r0, #2
   1133c:	strb	r5, [r0]
   11340:	mov	r0, #1
   11344:	bl	11080 <Mat_VerbMessage@plt>
   11348:	b	112c0 <Mat_VarReadNextInfo@plt+0x1bc>
   1134c:	movw	r0, #20976	; 0x51f0
   11350:	mov	r7, r8
   11354:	movt	r0, #2
   11358:	ldr	r8, [r0]
   1135c:	cmp	r8, #0
   11360:	beq	113a0 <Mat_VarReadNextInfo@plt+0x29c>
   11364:	movw	r1, #15131	; 0x3b1b
   11368:	mov	r0, r8
   1136c:	movt	r1, #1
   11370:	bl	10edc <strcmp@plt>
   11374:	cmp	r0, #0
   11378:	beq	113c4 <Mat_VarReadNextInfo@plt+0x2c0>
   1137c:	movw	r0, #15136	; 0x3b20
   11380:	mov	r1, r8
   11384:	movt	r0, #1
   11388:	bl	10f30 <Mat_Warning@plt>
   1138c:	b	113d8 <Mat_VarReadNextInfo@plt+0x2d4>
   11390:	movw	r0, #20960	; 0x51e0
   11394:	movt	r0, #2
   11398:	strb	r5, [r0]
   1139c:	b	112c0 <Mat_VarReadNextInfo@plt+0x1bc>
   113a0:	movw	r0, #15189	; 0x3b55
   113a4:	movt	r0, #1
   113a8:	bl	10f30 <Mat_Warning@plt>
   113ac:	b	113d8 <Mat_VarReadNextInfo@plt+0x2d4>
   113b0:	cmp	r1, #86	; 0x56
   113b4:	beq	11d6c <Mat_VarReadNextInfo@plt+0xc68>
   113b8:	mov	r0, r4
   113bc:	bl	10ef4 <printf@plt>
   113c0:	b	112c0 <Mat_VarReadNextInfo@plt+0x1bc>
   113c4:	movw	r0, #20952	; 0x51d8
   113c8:	movw	r1, #9376	; 0x24a0
   113cc:	movt	r0, #2
   113d0:	movt	r1, #1
   113d4:	str	r1, [r0]
   113d8:	mov	r8, r7
   113dc:	mov	r5, #1
   113e0:	mov	r7, #0
   113e4:	b	112c0 <Mat_VarReadNextInfo@plt+0x1bc>
   113e8:	movw	r4, #20916	; 0x51b4
   113ec:	movt	r4, #2
   113f0:	ldr	r0, [r4]
   113f4:	cmp	r0, r6
   113f8:	bge	11c78 <Mat_VarReadNextInfo@plt+0xb74>
   113fc:	ldr	r8, [sp, #36]	; 0x24
   11400:	mov	r1, #0
   11404:	ldr	r0, [r8, r0, lsl #2]
   11408:	bl	10ee8 <Mat_Open@plt>
   1140c:	mov	r9, r0
   11410:	ldr	r0, [r4]
   11414:	cmp	r9, #0
   11418:	beq	11c88 <Mat_VarReadNextInfo@plt+0xb84>
   1141c:	add	r7, r0, #1
   11420:	cmp	r7, r6
   11424:	str	r7, [r4]
   11428:	bge	11ca0 <Mat_VarReadNextInfo@plt+0xb9c>
   1142c:	str	r6, [sp, #16]
   11430:	str	r9, [sp, #12]
   11434:	ldr	r5, [r8, r7, lsl #2]
   11438:	mov	r0, r5
   1143c:	bl	126c0 <Mat_VarReadNextInfo@plt+0x15bc>
   11440:	mov	r4, r0
   11444:	cmp	r0, r5
   11448:	mov	r6, #0
   1144c:	beq	11460 <Mat_VarReadNextInfo@plt+0x35c>
   11450:	mov	r0, #0
   11454:	ldrb	r6, [r4]
   11458:	strb	r0, [r4]
   1145c:	ldr	r5, [r8, r7, lsl #2]
   11460:	mov	r0, r9
   11464:	mov	r1, r5
   11468:	str	r7, [sp, #32]
   1146c:	bl	10f6c <Mat_VarReadInfo@plt>
   11470:	cmp	r0, #0
   11474:	beq	11930 <Mat_VarReadNextInfo@plt+0x82c>
   11478:	mov	sl, r0
   1147c:	movw	r0, #20956	; 0x51dc
   11480:	movt	r0, #2
   11484:	ldrb	r0, [r0]
   11488:	cmp	r0, #1
   1148c:	bne	11bf4 <Mat_VarReadNextInfo@plt+0xaf0>
   11490:	cmp	r6, #0
   11494:	mov	r8, #1
   11498:	beq	11948 <Mat_VarReadNextInfo@plt+0x844>
   1149c:	mov	r0, r4
   114a0:	strb	r6, [r4]
   114a4:	bl	126c0 <Mat_VarReadNextInfo@plt+0x15bc>
   114a8:	ldrb	r1, [r0]
   114ac:	str	sl, [sp, #44]	; 0x2c
   114b0:	mov	sl, r0
   114b4:	uxtb	r0, r1
   114b8:	mov	r2, #0
   114bc:	cmp	r0, #46	; 0x2e
   114c0:	beq	11530 <Mat_VarReadNextInfo@plt+0x42c>
   114c4:	cmp	r0, #123	; 0x7b
   114c8:	beq	114e0 <Mat_VarReadNextInfo@plt+0x3dc>
   114cc:	cmp	r0, #40	; 0x28
   114d0:	beq	11958 <Mat_VarReadNextInfo@plt+0x854>
   114d4:	mov	r0, sl
   114d8:	ldr	sl, [sp, #44]	; 0x2c
   114dc:	b	118e0 <Mat_VarReadNextInfo@plt+0x7dc>
   114e0:	ldr	r0, [sp, #44]	; 0x2c
   114e4:	ldr	r0, [r0, #16]
   114e8:	cmp	r0, #1
   114ec:	bne	11a90 <Mat_VarReadNextInfo@plt+0x98c>
   114f0:	add	r6, sl, #1
   114f4:	mov	r1, #125	; 0x7d
   114f8:	mov	r0, r6
   114fc:	bl	11008 <strchr@plt>
   11500:	mov	r5, r0
   11504:	add	r0, r0, #1
   11508:	bl	126c0 <Mat_VarReadNextInfo@plt+0x15bc>
   1150c:	ldrb	r1, [r0]
   11510:	mov	r4, #1
   11514:	cmp	r1, #0
   11518:	beq	115a4 <Mat_VarReadNextInfo@plt+0x4a0>
   1151c:	mov	r3, #0
   11520:	mov	r2, #0
   11524:	str	r2, [sp, #20]
   11528:	strb	r3, [r0]
   1152c:	b	115b0 <Mat_VarReadNextInfo@plt+0x4ac>
   11530:	add	r4, sl, #1
   11534:	ldr	sl, [sp, #44]	; 0x2c
   11538:	ldr	r0, [sl, #16]
   1153c:	cmp	r0, #1
   11540:	beq	11570 <Mat_VarReadNextInfo@plt+0x46c>
   11544:	cmp	r0, #2
   11548:	bne	11ab8 <Mat_VarReadNextInfo@plt+0x9b4>
   1154c:	mov	r0, r4
   11550:	bl	126c0 <Mat_VarReadNextInfo@plt+0x15bc>
   11554:	cmp	r0, r4
   11558:	beq	11708 <Mat_VarReadNextInfo@plt+0x604>
   1155c:	ldrb	r9, [r0]
   11560:	mov	r5, #0
   11564:	mov	r7, r0
   11568:	strb	r5, [r0]
   1156c:	b	11714 <Mat_VarReadNextInfo@plt+0x610>
   11570:	ldr	r0, [sl]
   11574:	ldr	r1, [sl, #12]
   11578:	ldr	r2, [sl, #40]	; 0x28
   1157c:	udiv	r9, r0, r1
   11580:	mov	r0, r4
   11584:	str	r2, [sp, #40]	; 0x28
   11588:	bl	126c0 <Mat_VarReadNextInfo@plt+0x15bc>
   1158c:	cmp	r0, r4
   11590:	beq	11760 <Mat_VarReadNextInfo@plt+0x65c>
   11594:	ldrb	r1, [r0]
   11598:	mov	r2, #0
   1159c:	strb	r2, [r0]
   115a0:	b	11768 <Mat_VarReadNextInfo@plt+0x664>
   115a4:	mov	r2, #1
   115a8:	mov	r1, #123	; 0x7b
   115ac:	str	r2, [sp, #20]
   115b0:	cmp	r6, r5
   115b4:	str	r0, [sp, #24]
   115b8:	str	r1, [sp, #28]
   115bc:	beq	115d8 <Mat_VarReadNextInfo@plt+0x4d4>
   115c0:	mov	r4, #1
   115c4:	ldrb	r0, [r6], #1
   115c8:	cmp	r0, #44	; 0x2c
   115cc:	addeq	r4, r4, #1
   115d0:	cmp	r5, r6
   115d4:	bne	115c4 <Mat_VarReadNextInfo@plt+0x4c0>
   115d8:	lsl	r7, r4, #2
   115dc:	mov	r0, r7
   115e0:	bl	10fa8 <malloc@plt>
   115e4:	mov	r9, r0
   115e8:	mov	r0, r7
   115ec:	bl	10fa8 <malloc@plt>
   115f0:	str	r0, [sp, #40]	; 0x28
   115f4:	mov	r0, r7
   115f8:	bl	10fa8 <malloc@plt>
   115fc:	mov	r6, r0
   11600:	cmp	r4, #1
   11604:	blt	11634 <Mat_VarReadNextInfo@plt+0x530>
   11608:	mov	r0, r9
   1160c:	mov	r1, #0
   11610:	mov	r2, r7
   11614:	bl	11044 <memset@plt>
   11618:	ldr	r0, [sp, #40]	; 0x28
   1161c:	mov	r1, r6
   11620:	mov	r2, r4
   11624:	str	r8, [r0], #4
   11628:	str	r8, [r1], #4
   1162c:	subs	r2, r2, #1
   11630:	bne	11624 <Mat_VarReadNextInfo@plt+0x520>
   11634:	mov	r1, r5
   11638:	ldr	r5, [sp, #40]	; 0x28
   1163c:	mov	r0, sl
   11640:	mov	r2, r9
   11644:	str	r6, [sp]
   11648:	mov	r3, r5
   1164c:	bl	12818 <Mat_VarReadNextInfo@plt+0x1714>
   11650:	ldr	sl, [sp, #44]	; 0x2c
   11654:	mov	r0, r4
   11658:	mov	r1, r9
   1165c:	mov	r2, r5
   11660:	mov	r3, r6
   11664:	str	sl, [sp]
   11668:	bl	12a40 <Mat_VarReadNextInfo@plt+0x193c>
   1166c:	cmp	r0, #0
   11670:	beq	118ec <Mat_VarReadNextInfo@plt+0x7e8>
   11674:	mov	r5, r0
   11678:	cmp	r4, #1
   1167c:	bne	116c4 <Mat_VarReadNextInfo@plt+0x5c0>
   11680:	ldr	r0, [sp, #40]	; 0x28
   11684:	ldr	r3, [r6]
   11688:	ldr	r1, [r9]
   1168c:	ldr	r2, [r0]
   11690:	mov	r0, sl
   11694:	bl	1108c <Mat_VarGetCellsLinear@plt>
   11698:	ldr	r1, [sl, #4]
   1169c:	mov	r7, r0
   116a0:	ldr	r0, [sl, #32]
   116a4:	cmp	r1, #2
   116a8:	bne	11700 <Mat_VarReadNextInfo@plt+0x5fc>
   116ac:	ldr	r1, [r0]
   116b0:	cmp	r1, #1
   116b4:	bne	11808 <Mat_VarReadNextInfo@plt+0x704>
   116b8:	ldr	r1, [r6]
   116bc:	str	r1, [r0, #4]
   116c0:	b	1181c <Mat_VarReadNextInfo@plt+0x718>
   116c4:	ldr	r2, [sp, #40]	; 0x28
   116c8:	mov	r0, sl
   116cc:	mov	r1, r9
   116d0:	mov	r3, r6
   116d4:	bl	10f00 <Mat_VarGetCells@plt>
   116d8:	mov	r7, r0
   116dc:	cmp	r4, #1
   116e0:	blt	1181c <Mat_VarReadNextInfo@plt+0x718>
   116e4:	ldr	r0, [sl, #32]
   116e8:	mov	r1, r6
   116ec:	ldr	r2, [r1], #4
   116f0:	subs	r4, r4, #1
   116f4:	str	r2, [r0], #4
   116f8:	bne	116ec <Mat_VarReadNextInfo@plt+0x5e8>
   116fc:	b	1181c <Mat_VarReadNextInfo@plt+0x718>
   11700:	str	r8, [sl, #4]
   11704:	b	11814 <Mat_VarReadNextInfo@plt+0x710>
   11708:	mov	r7, r0
   1170c:	mov	r9, #46	; 0x2e
   11710:	mov	r5, #1
   11714:	mov	r0, sl
   11718:	mov	r1, r4
   1171c:	mov	r2, #0
   11720:	bl	110bc <Mat_VarGetStructFieldByName@plt>
   11724:	ldr	r6, [sp, #12]
   11728:	cmp	r0, #0
   1172c:	beq	11ad8 <Mat_VarReadNextInfo@plt+0x9d4>
   11730:	mov	r1, #1
   11734:	bl	110f8 <Mat_VarDuplicate@plt>
   11738:	mov	r4, r0
   1173c:	mov	r0, sl
   11740:	bl	10fe4 <Mat_VarFree@plt>
   11744:	cmp	r5, #0
   11748:	bne	11b98 <Mat_VarReadNextInfo@plt+0xa94>
   1174c:	mov	sl, r4
   11750:	mov	r1, r9
   11754:	mov	r0, r7
   11758:	mov	r2, #0
   1175c:	b	118e0 <Mat_VarReadNextInfo@plt+0x7dc>
   11760:	mov	r1, #46	; 0x2e
   11764:	mov	r2, #1
   11768:	mov	r5, #0
   1176c:	cmp	r9, #1
   11770:	str	r2, [sp, #20]
   11774:	str	r0, [sp, #24]
   11778:	str	r1, [sp, #28]
   1177c:	blt	118cc <Mat_VarReadNextInfo@plt+0x7c8>
   11780:	mov	r0, sl
   11784:	mov	r1, r5
   11788:	bl	10f0c <Mat_VarGetCell@plt>
   1178c:	cmp	r0, #0
   11790:	beq	117e8 <Mat_VarReadNextInfo@plt+0x6e4>
   11794:	mov	r6, r0
   11798:	ldr	r0, [r0, #16]
   1179c:	cmp	r0, #2
   117a0:	bne	117e8 <Mat_VarReadNextInfo@plt+0x6e4>
   117a4:	mov	r0, r6
   117a8:	mov	r1, r4
   117ac:	mov	r2, #0
   117b0:	bl	110bc <Mat_VarGetStructFieldByName@plt>
   117b4:	cmp	r0, #0
   117b8:	beq	118ac <Mat_VarReadNextInfo@plt+0x7a8>
   117bc:	mov	r1, #1
   117c0:	bl	110f8 <Mat_VarDuplicate@plt>
   117c4:	mov	r7, r0
   117c8:	mov	r0, r6
   117cc:	bl	10fe4 <Mat_VarFree@plt>
   117d0:	ldr	r0, [sp, #40]	; 0x28
   117d4:	str	r7, [r0, r5, lsl #2]
   117d8:	add	r5, r5, #1
   117dc:	cmp	r5, r9
   117e0:	blt	11780 <Mat_VarReadNextInfo@plt+0x67c>
   117e4:	b	118cc <Mat_VarReadNextInfo@plt+0x7c8>
   117e8:	movw	r0, #20944	; 0x51d0
   117ec:	movw	r1, #16726	; 0x4156
   117f0:	mov	r2, r5
   117f4:	movt	r0, #2
   117f8:	movt	r1, #1
   117fc:	ldr	r0, [r0]
   11800:	bl	11020 <fprintf@plt>
   11804:	b	118cc <Mat_VarReadNextInfo@plt+0x7c8>
   11808:	ldr	r1, [r0, #4]
   1180c:	cmp	r1, #1
   11810:	strne	r8, [sl, #4]
   11814:	ldr	r1, [r6]
   11818:	str	r1, [r0]
   1181c:	cmp	r7, #0
   11820:	beq	11908 <Mat_VarReadNextInfo@plt+0x804>
   11824:	cmp	r5, #1
   11828:	mov	r4, r7
   1182c:	blt	11848 <Mat_VarReadNextInfo@plt+0x744>
   11830:	ldr	r0, [r4]
   11834:	mov	r1, #1
   11838:	bl	110f8 <Mat_VarDuplicate@plt>
   1183c:	str	r0, [r4], #4
   11840:	subs	r5, r5, #1
   11844:	bne	11830 <Mat_VarReadNextInfo@plt+0x72c>
   11848:	ldr	r1, [sl, #32]
   1184c:	ldr	r3, [sl, #4]
   11850:	ldr	r0, [sl, #36]	; 0x24
   11854:	mov	r5, #1
   11858:	mov	r2, #21
   1185c:	stm	sp, {r1, r7}
   11860:	mov	r1, #1
   11864:	str	r5, [sp, #8]
   11868:	bl	10f18 <Mat_VarCreate@plt>
   1186c:	mov	r4, r0
   11870:	mov	r0, sl
   11874:	bl	10fe4 <Mat_VarFree@plt>
   11878:	mov	sl, r4
   1187c:	mov	r0, r9
   11880:	bl	10f24 <free@plt>
   11884:	ldr	r0, [sp, #40]	; 0x28
   11888:	bl	10f24 <free@plt>
   1188c:	mov	r0, r6
   11890:	bl	10f24 <free@plt>
   11894:	ldr	r1, [sp, #28]
   11898:	ldr	r0, [sp, #24]
   1189c:	ldr	r2, [sp, #20]
   118a0:	cmp	r5, #0
   118a4:	bne	118e0 <Mat_VarReadNextInfo@plt+0x7dc>
   118a8:	b	11bf4 <Mat_VarReadNextInfo@plt+0xaf0>
   118ac:	movw	r0, #20944	; 0x51d0
   118b0:	ldr	r3, [sl, #36]	; 0x24
   118b4:	movw	r1, #16687	; 0x412f
   118b8:	mov	r2, r4
   118bc:	movt	r0, #2
   118c0:	movt	r1, #1
   118c4:	ldr	r0, [r0]
   118c8:	bl	11020 <fprintf@plt>
   118cc:	ldr	r1, [sp, #28]
   118d0:	ldr	r0, [sp, #24]
   118d4:	ldr	r2, [sp, #20]
   118d8:	cmp	r5, r9
   118dc:	bne	11bf4 <Mat_VarReadNextInfo@plt+0xaf0>
   118e0:	cmp	r2, #0
   118e4:	beq	114ac <Mat_VarReadNextInfo@plt+0x3a8>
   118e8:	b	11bf4 <Mat_VarReadNextInfo@plt+0xaf0>
   118ec:	movw	r0, #20944	; 0x51d0
   118f0:	mov	r1, #24
   118f4:	movt	r0, #2
   118f8:	ldr	r3, [r0]
   118fc:	movw	r0, #16848	; 0x41d0
   11900:	movt	r0, #1
   11904:	b	11920 <Mat_VarReadNextInfo@plt+0x81c>
   11908:	movw	r0, #20944	; 0x51d0
   1190c:	mov	r1, #31
   11910:	movt	r0, #2
   11914:	ldr	r3, [r0]
   11918:	movw	r0, #16816	; 0x41b0
   1191c:	movt	r0, #1
   11920:	mov	r2, #1
   11924:	bl	10f78 <fwrite@plt>
   11928:	mov	r5, #0
   1192c:	b	1187c <Mat_VarReadNextInfo@plt+0x778>
   11930:	ldr	r7, [sp, #32]
   11934:	movw	r0, #15396	; 0x3c24
   11938:	movt	r0, #1
   1193c:	ldr	r1, [r8, r7, lsl #2]
   11940:	bl	10f30 <Mat_Warning@plt>
   11944:	b	11c1c <Mat_VarReadNextInfo@plt+0xb18>
   11948:	mov	r0, r9
   1194c:	mov	r1, sl
   11950:	bl	10f60 <Mat_VarReadDataAll@plt>
   11954:	b	11bf4 <Mat_VarReadNextInfo@plt+0xaf0>
   11958:	add	r6, sl, #1
   1195c:	mov	r1, #41	; 0x29
   11960:	mov	r0, r6
   11964:	bl	11008 <strchr@plt>
   11968:	add	r5, r0, #1
   1196c:	mov	r4, r0
   11970:	mov	r0, r5
   11974:	bl	126c0 <Mat_VarReadNextInfo@plt+0x15bc>
   11978:	cmp	r0, r5
   1197c:	bne	11c30 <Mat_VarReadNextInfo@plt+0xb2c>
   11980:	mov	r5, #1
   11984:	cmp	r6, r4
   11988:	beq	119a0 <Mat_VarReadNextInfo@plt+0x89c>
   1198c:	ldrb	r0, [r6], #1
   11990:	cmp	r0, #44	; 0x2c
   11994:	addeq	r5, r5, #1
   11998:	cmp	r4, r6
   1199c:	bne	1198c <Mat_VarReadNextInfo@plt+0x888>
   119a0:	lsl	r6, r5, #2
   119a4:	mov	r0, r6
   119a8:	bl	10fa8 <malloc@plt>
   119ac:	mov	r9, r0
   119b0:	mov	r0, r6
   119b4:	bl	10fa8 <malloc@plt>
   119b8:	str	r0, [sp, #40]	; 0x28
   119bc:	mov	r0, r6
   119c0:	bl	10fa8 <malloc@plt>
   119c4:	mov	r7, r0
   119c8:	cmp	r5, #1
   119cc:	blt	119fc <Mat_VarReadNextInfo@plt+0x8f8>
   119d0:	mov	r0, r9
   119d4:	mov	r1, #0
   119d8:	mov	r2, r6
   119dc:	bl	11044 <memset@plt>
   119e0:	ldr	r0, [sp, #40]	; 0x28
   119e4:	mov	r1, r7
   119e8:	mov	r2, r5
   119ec:	str	r8, [r0], #4
   119f0:	str	r8, [r1], #4
   119f4:	subs	r2, r2, #1
   119f8:	bne	119ec <Mat_VarReadNextInfo@plt+0x8e8>
   119fc:	ldr	r6, [sp, #40]	; 0x28
   11a00:	mov	r0, sl
   11a04:	mov	r1, r4
   11a08:	mov	r2, r9
   11a0c:	str	r7, [sp]
   11a10:	mov	r3, r6
   11a14:	bl	12818 <Mat_VarReadNextInfo@plt+0x1714>
   11a18:	ldr	sl, [sp, #44]	; 0x2c
   11a1c:	mov	r0, r5
   11a20:	mov	r1, r9
   11a24:	mov	r2, r6
   11a28:	mov	r3, r7
   11a2c:	str	sl, [sp]
   11a30:	bl	12a40 <Mat_VarReadNextInfo@plt+0x193c>
   11a34:	cmp	r0, #0
   11a38:	beq	11bdc <Mat_VarReadNextInfo@plt+0xad8>
   11a3c:	mov	r4, r0
   11a40:	ldr	r0, [sl, #16]
   11a44:	bl	110c8 <Mat_SizeOfClass@plt>
   11a48:	str	r0, [sl, #12]
   11a4c:	mul	r0, r0, r4
   11a50:	str	r0, [sl]
   11a54:	ldr	r1, [sl, #20]
   11a58:	cmp	r1, #0
   11a5c:	beq	11afc <Mat_VarReadNextInfo@plt+0x9f8>
   11a60:	mov	r0, #8
   11a64:	bl	10fa8 <malloc@plt>
   11a68:	str	r0, [sl, #40]	; 0x28
   11a6c:	mov	r4, r0
   11a70:	ldr	r0, [sl]
   11a74:	bl	10fa8 <malloc@plt>
   11a78:	str	r0, [r4]
   11a7c:	ldr	r0, [sl]
   11a80:	bl	10fa8 <malloc@plt>
   11a84:	str	r0, [r4, #4]
   11a88:	ldr	r2, [sl, #40]	; 0x28
   11a8c:	b	11b08 <Mat_VarReadNextInfo@plt+0xa04>
   11a90:	movw	r0, #20944	; 0x51d0
   11a94:	mov	r1, #34	; 0x22
   11a98:	movt	r0, #2
   11a9c:	ldr	r3, [r0]
   11aa0:	movw	r0, #16781	; 0x418d
   11aa4:	movt	r0, #1
   11aa8:	mov	r2, #1
   11aac:	bl	10f78 <fwrite@plt>
   11ab0:	ldr	sl, [sp, #44]	; 0x2c
   11ab4:	b	11bf4 <Mat_VarReadNextInfo@plt+0xaf0>
   11ab8:	movw	r0, #20944	; 0x51d0
   11abc:	movw	r1, #16759	; 0x4177
   11ac0:	mov	r2, r4
   11ac4:	movt	r0, #2
   11ac8:	movt	r1, #1
   11acc:	ldr	r0, [r0]
   11ad0:	bl	11020 <fprintf@plt>
   11ad4:	b	11bf4 <Mat_VarReadNextInfo@plt+0xaf0>
   11ad8:	movw	r0, #20944	; 0x51d0
   11adc:	ldr	r3, [sl, #36]	; 0x24
   11ae0:	movw	r1, #16687	; 0x412f
   11ae4:	mov	r2, r4
   11ae8:	movt	r0, #2
   11aec:	movt	r1, #1
   11af0:	ldr	r0, [r0]
   11af4:	bl	11020 <fprintf@plt>
   11af8:	b	11bf4 <Mat_VarReadNextInfo@plt+0xaf0>
   11afc:	bl	10fa8 <malloc@plt>
   11b00:	mov	r2, r0
   11b04:	str	r0, [sl, #40]	; 0x28
   11b08:	ldr	r0, [sp, #12]
   11b0c:	cmp	r2, #0
   11b10:	beq	11c54 <Mat_VarReadNextInfo@plt+0xb50>
   11b14:	cmp	r5, #1
   11b18:	bne	11b64 <Mat_VarReadNextInfo@plt+0xa60>
   11b1c:	ldr	r1, [r7]
   11b20:	ldr	r6, [r6]
   11b24:	ldr	r3, [r9]
   11b28:	str	r1, [sp, #4]
   11b2c:	mov	r1, sl
   11b30:	str	r6, [sp]
   11b34:	bl	10f3c <Mat_VarReadDataLinear@plt>
   11b38:	ldr	r1, [sl, #4]
   11b3c:	ldr	r0, [sl, #32]
   11b40:	cmp	r1, #2
   11b44:	bne	11bc8 <Mat_VarReadNextInfo@plt+0xac4>
   11b48:	ldr	r1, [r0]
   11b4c:	cmp	r1, #1
   11b50:	bne	11bac <Mat_VarReadNextInfo@plt+0xaa8>
   11b54:	ldr	r1, [r7]
   11b58:	ldr	r6, [sp, #40]	; 0x28
   11b5c:	str	r1, [r0, #4]
   11b60:	b	11bdc <Mat_VarReadNextInfo@plt+0xad8>
   11b64:	mov	r1, sl
   11b68:	mov	r3, r9
   11b6c:	stm	sp, {r6, r7}
   11b70:	bl	10f54 <Mat_VarReadData@plt>
   11b74:	cmp	r5, #1
   11b78:	blt	11bdc <Mat_VarReadNextInfo@plt+0xad8>
   11b7c:	ldr	r0, [sl, #32]
   11b80:	mov	r1, r7
   11b84:	ldr	r2, [r1], #4
   11b88:	subs	r5, r5, #1
   11b8c:	str	r2, [r0], #4
   11b90:	bne	11b84 <Mat_VarReadNextInfo@plt+0xa80>
   11b94:	b	11bdc <Mat_VarReadNextInfo@plt+0xad8>
   11b98:	mov	r0, r6
   11b9c:	mov	r1, r4
   11ba0:	bl	10f60 <Mat_VarReadDataAll@plt>
   11ba4:	mov	sl, r4
   11ba8:	b	11bf4 <Mat_VarReadNextInfo@plt+0xaf0>
   11bac:	ldr	r1, [r0, #4]
   11bb0:	cmp	r1, #1
   11bb4:	bne	11bc8 <Mat_VarReadNextInfo@plt+0xac4>
   11bb8:	ldr	r1, [r7]
   11bbc:	ldr	r6, [sp, #40]	; 0x28
   11bc0:	str	r1, [r0]
   11bc4:	b	11bdc <Mat_VarReadNextInfo@plt+0xad8>
   11bc8:	mov	r1, #2
   11bcc:	str	r1, [sl, #4]
   11bd0:	ldr	r1, [r7]
   11bd4:	stm	r0, {r1, r8}
   11bd8:	ldr	r6, [sp, #40]	; 0x28
   11bdc:	mov	r0, r9
   11be0:	bl	10f24 <free@plt>
   11be4:	mov	r0, r6
   11be8:	bl	10f24 <free@plt>
   11bec:	mov	r0, r7
   11bf0:	bl	10f24 <free@plt>
   11bf4:	movw	r0, #20952	; 0x51d8
   11bf8:	movt	r0, #2
   11bfc:	ldr	r1, [r0]
   11c00:	mov	r0, sl
   11c04:	blx	r1
   11c08:	mov	r0, sl
   11c0c:	bl	10fe4 <Mat_VarFree@plt>
   11c10:	ldr	r8, [sp, #36]	; 0x24
   11c14:	ldr	r9, [sp, #12]
   11c18:	ldr	r7, [sp, #32]
   11c1c:	ldr	r0, [sp, #16]
   11c20:	add	r7, r7, #1
   11c24:	cmp	r7, r0
   11c28:	bne	11434 <Mat_VarReadNextInfo@plt+0x330>
   11c2c:	b	11d40 <Mat_VarReadNextInfo@plt+0xc3c>
   11c30:	mov	r1, #0
   11c34:	strb	r1, [r0]
   11c38:	movw	r0, #20944	; 0x51d0
   11c3c:	mov	r1, #56	; 0x38
   11c40:	movt	r0, #2
   11c44:	ldr	r3, [r0]
   11c48:	movw	r0, #16592	; 0x40d0
   11c4c:	movt	r0, #1
   11c50:	b	11aa8 <Mat_VarReadNextInfo@plt+0x9a4>
   11c54:	movw	r0, #20944	; 0x51d0
   11c58:	mov	r1, #37	; 0x25
   11c5c:	mov	r2, #1
   11c60:	movt	r0, #2
   11c64:	ldr	r3, [r0]
   11c68:	movw	r0, #16649	; 0x4109
   11c6c:	movt	r0, #1
   11c70:	bl	10f78 <fwrite@plt>
   11c74:	b	11bdc <Mat_VarReadNextInfo@plt+0xad8>
   11c78:	movw	r0, #15343	; 0x3bef
   11c7c:	movt	r0, #1
   11c80:	bl	11068 <Mat_Critical@plt>
   11c84:	b	11c98 <Mat_VarReadNextInfo@plt+0xb94>
   11c88:	ldr	r1, [r8, r0, lsl #2]
   11c8c:	movw	r0, #15378	; 0x3c12
   11c90:	movt	r0, #1
   11c94:	bl	11068 <Mat_Critical@plt>
   11c98:	mov	r4, #1
   11c9c:	b	11d50 <Mat_VarReadNextInfo@plt+0xc4c>
   11ca0:	movw	r0, #20956	; 0x51dc
   11ca4:	movt	r0, #2
   11ca8:	ldrb	r0, [r0]
   11cac:	cmp	r0, #0
   11cb0:	beq	11cfc <Mat_VarReadNextInfo@plt+0xbf8>
   11cb4:	mov	r0, r9
   11cb8:	bl	10ed0 <Mat_VarReadNext@plt>
   11cbc:	cmp	r0, #0
   11cc0:	beq	11d40 <Mat_VarReadNextInfo@plt+0xc3c>
   11cc4:	mov	r4, r0
   11cc8:	movw	r0, #20952	; 0x51d8
   11ccc:	movt	r0, #2
   11cd0:	ldr	r1, [r0]
   11cd4:	mov	r0, r4
   11cd8:	blx	r1
   11cdc:	mov	r0, r4
   11ce0:	bl	10fe4 <Mat_VarFree@plt>
   11ce4:	mov	r0, r9
   11ce8:	bl	10ed0 <Mat_VarReadNext@plt>
   11cec:	mov	r4, r0
   11cf0:	cmp	r0, #0
   11cf4:	bne	11cc8 <Mat_VarReadNextInfo@plt+0xbc4>
   11cf8:	b	11d40 <Mat_VarReadNextInfo@plt+0xc3c>
   11cfc:	mov	r0, r9
   11d00:	bl	11104 <Mat_VarReadNextInfo@plt>
   11d04:	cmp	r0, #0
   11d08:	beq	11d40 <Mat_VarReadNextInfo@plt+0xc3c>
   11d0c:	mov	r4, r0
   11d10:	movw	r0, #20952	; 0x51d8
   11d14:	movt	r0, #2
   11d18:	ldr	r1, [r0]
   11d1c:	mov	r0, r4
   11d20:	blx	r1
   11d24:	mov	r0, r4
   11d28:	bl	10fe4 <Mat_VarFree@plt>
   11d2c:	mov	r0, r9
   11d30:	bl	11104 <Mat_VarReadNextInfo@plt>
   11d34:	mov	r4, r0
   11d38:	cmp	r0, #0
   11d3c:	bne	11d10 <Mat_VarReadNextInfo@plt+0xc0c>
   11d40:	mov	r0, r9
   11d44:	bl	1105c <Mat_Close@plt>
   11d48:	bl	10ec4 <Mat_LogClose@plt>
   11d4c:	mov	r4, #0
   11d50:	mov	r0, r4
   11d54:	sub	sp, fp, #28
   11d58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d5c:	movw	r0, #20840	; 0x5168
   11d60:	movt	r0, #2
   11d64:	bl	110a4 <Mat_Help@plt>
   11d68:	b	11d88 <Mat_VarReadNextInfo@plt+0xc84>
   11d6c:	movw	r0, #15227	; 0x3b7b
   11d70:	movw	r1, #15052	; 0x3acc
   11d74:	movw	r2, #15313	; 0x3bd1
   11d78:	movt	r0, #1
   11d7c:	movt	r1, #1
   11d80:	movt	r2, #1
   11d84:	bl	10ef4 <printf@plt>
   11d88:	mov	r0, #0
   11d8c:	bl	10fd8 <exit@plt>
   11d90:	push	{r4, r5, r6, r7, fp, lr}
   11d94:	add	fp, sp, #16
   11d98:	movw	r6, #20964	; 0x51e4
   11d9c:	mov	r4, r1
   11da0:	movt	r6, #2
   11da4:	ldr	r0, [r6]
   11da8:	cmp	r0, #1
   11dac:	blt	11dd4 <Mat_VarReadNextInfo@plt+0xcd0>
   11db0:	movw	r5, #15730	; 0x3d72
   11db4:	mov	r7, #0
   11db8:	movt	r5, #1
   11dbc:	mov	r0, r5
   11dc0:	bl	10ef4 <printf@plt>
   11dc4:	ldr	r0, [r6]
   11dc8:	add	r7, r7, #1
   11dcc:	cmp	r7, r0
   11dd0:	blt	11dbc <Mat_VarReadNextInfo@plt+0xcb8>
   11dd4:	mov	r0, r4
   11dd8:	pop	{r4, r5, r6, r7, fp, lr}
   11ddc:	b	10f9c <puts@plt>
   11de0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11de4:	add	fp, sp, #28
   11de8:	sub	sp, sp, #20
   11dec:	cmp	r0, #0
   11df0:	beq	12420 <Mat_VarReadNextInfo@plt+0x131c>
   11df4:	mov	r4, r0
   11df8:	ldr	r0, [r0, #16]
   11dfc:	sub	r1, r0, #6
   11e00:	cmp	r1, #10
   11e04:	bcs	11eec <Mat_VarReadNextInfo@plt+0xde8>
   11e08:	ldr	r0, [r4, #4]
   11e0c:	str	r4, [sp, #16]
   11e10:	cmp	r0, #3
   11e14:	beq	11fe8 <Mat_VarReadNextInfo@plt+0xee4>
   11e18:	cmp	r0, #2
   11e1c:	bne	12420 <Mat_VarReadNextInfo@plt+0x131c>
   11e20:	ldr	r0, [r4, #40]	; 0x28
   11e24:	cmp	r0, #0
   11e28:	beq	12420 <Mat_VarReadNextInfo@plt+0x131c>
   11e2c:	ldr	r0, [r4, #8]
   11e30:	bl	10ff0 <Mat_SizeOf@plt>
   11e34:	mov	r5, r0
   11e38:	ldr	r0, [r4, #20]
   11e3c:	cmp	r0, #0
   11e40:	beq	1224c <Mat_VarReadNextInfo@plt+0x1148>
   11e44:	ldr	r1, [r4, #32]
   11e48:	ldr	r0, [r1]
   11e4c:	cmp	r0, #0
   11e50:	beq	12420 <Mat_VarReadNextInfo@plt+0x131c>
   11e54:	ldr	r2, [r4, #40]	; 0x28
   11e58:	ldr	r4, [sp, #16]
   11e5c:	mov	r6, #0
   11e60:	ldr	sl, [r2]
   11e64:	ldr	r7, [r2, #4]
   11e68:	ldr	r1, [r1, #4]
   11e6c:	cmp	r1, #0
   11e70:	beq	11ec8 <Mat_VarReadNextInfo@plt+0xdc4>
   11e74:	mov	r8, #0
   11e78:	mla	r9, r8, r0, r6
   11e7c:	ldr	r0, [r4, #8]
   11e80:	mla	r1, r9, r5, sl
   11e84:	bl	1272c <Mat_VarReadNextInfo@plt+0x1628>
   11e88:	movw	r0, #15532	; 0x3cac
   11e8c:	movt	r0, #1
   11e90:	bl	10ef4 <printf@plt>
   11e94:	ldr	r0, [r4, #8]
   11e98:	mla	r1, r9, r5, r7
   11e9c:	bl	1272c <Mat_VarReadNextInfo@plt+0x1628>
   11ea0:	movw	r0, #15536	; 0x3cb0
   11ea4:	movt	r0, #1
   11ea8:	bl	10ef4 <printf@plt>
   11eac:	ldr	r0, [r4, #32]
   11eb0:	add	r8, r8, #1
   11eb4:	ldr	r1, [r0, #4]
   11eb8:	cmp	r8, r1
   11ebc:	bcs	11ec8 <Mat_VarReadNextInfo@plt+0xdc4>
   11ec0:	ldr	r0, [r0]
   11ec4:	b	11e78 <Mat_VarReadNextInfo@plt+0xd74>
   11ec8:	mov	r0, #10
   11ecc:	bl	11050 <putchar@plt>
   11ed0:	ldr	r0, [sp, #16]
   11ed4:	add	r6, r6, #1
   11ed8:	ldr	r1, [r0, #32]
   11edc:	ldr	r0, [r1]
   11ee0:	cmp	r6, r0
   11ee4:	bcc	11e68 <Mat_VarReadNextInfo@plt+0xd64>
   11ee8:	b	12420 <Mat_VarReadNextInfo@plt+0x131c>
   11eec:	sub	r1, r0, #4
   11ef0:	cmp	r1, #2
   11ef4:	bcc	1216c <Mat_VarReadNextInfo@plt+0x1068>
   11ef8:	cmp	r0, #1
   11efc:	beq	12188 <Mat_VarReadNextInfo@plt+0x1084>
   11f00:	cmp	r0, #2
   11f04:	bne	12240 <Mat_VarReadNextInfo@plt+0x113c>
   11f08:	ldr	r1, [r4, #36]	; 0x24
   11f0c:	cmp	r1, #0
   11f10:	beq	11f20 <Mat_VarReadNextInfo@plt+0xe1c>
   11f14:	movw	r0, #15438	; 0x3c4e
   11f18:	movt	r0, #1
   11f1c:	bl	10f48 <Mat_Message@plt>
   11f20:	ldr	r1, [r4, #4]
   11f24:	movw	r0, #15453	; 0x3c5d
   11f28:	movt	r0, #1
   11f2c:	bl	10f48 <Mat_Message@plt>
   11f30:	ldr	r0, [r4, #4]
   11f34:	cmp	r0, #0
   11f38:	beq	12420 <Mat_VarReadNextInfo@plt+0x131c>
   11f3c:	movw	r0, #15468	; 0x3c6c
   11f40:	movt	r0, #1
   11f44:	bl	10f48 <Mat_Message@plt>
   11f48:	mov	r0, r4
   11f4c:	bl	10eac <Mat_VarGetNumberOfFields@plt>
   11f50:	ldr	r1, [r4, #32]
   11f54:	ldr	r7, [r4, #4]
   11f58:	mov	r5, r0
   11f5c:	ldr	r6, [r1]
   11f60:	cmp	r7, #2
   11f64:	blt	11f80 <Mat_VarReadNextInfo@plt+0xe7c>
   11f68:	mov	r2, #1
   11f6c:	ldr	r3, [r1, r2, lsl #2]
   11f70:	add	r2, r2, #1
   11f74:	cmp	r2, r7
   11f78:	mul	r6, r3, r6
   11f7c:	blt	11f6c <Mat_VarReadNextInfo@plt+0xe68>
   11f80:	cmp	r5, #1
   11f84:	blt	12428 <Mat_VarReadNextInfo@plt+0x1324>
   11f88:	cmp	r6, #0
   11f8c:	bne	12428 <Mat_VarReadNextInfo@plt+0x1324>
   11f90:	mov	r0, r4
   11f94:	bl	10f84 <Mat_VarGetStructFieldnames@plt>
   11f98:	mov	r4, r0
   11f9c:	movw	r0, #15490	; 0x3c82
   11fa0:	mov	r1, r5
   11fa4:	movt	r0, #1
   11fa8:	bl	10f48 <Mat_Message@plt>
   11fac:	movw	r7, #20964	; 0x51e4
   11fb0:	cmp	r4, #0
   11fb4:	movt	r7, #2
   11fb8:	ldr	r0, [r7]
   11fbc:	add	r0, r0, #1
   11fc0:	str	r0, [r7]
   11fc4:	beq	12484 <Mat_VarReadNextInfo@plt+0x1380>
   11fc8:	movw	r6, #15440	; 0x3c50
   11fcc:	movt	r6, #1
   11fd0:	ldr	r1, [r4], #4
   11fd4:	mov	r0, r6
   11fd8:	bl	10f48 <Mat_Message@plt>
   11fdc:	subs	r5, r5, #1
   11fe0:	bne	11fd0 <Mat_VarReadNextInfo@plt+0xecc>
   11fe4:	b	12480 <Mat_VarReadNextInfo@plt+0x137c>
   11fe8:	ldr	r0, [r4, #40]	; 0x28
   11fec:	cmp	r0, #0
   11ff0:	beq	12420 <Mat_VarReadNextInfo@plt+0x131c>
   11ff4:	ldr	r0, [r4, #8]
   11ff8:	bl	10ff0 <Mat_SizeOf@plt>
   11ffc:	str	r0, [sp, #8]
   12000:	ldr	r0, [r4, #20]
   12004:	cmp	r0, #0
   12008:	beq	122e8 <Mat_VarReadNextInfo@plt+0x11e4>
   1200c:	ldr	r0, [r4, #32]
   12010:	ldr	r0, [r0, #8]
   12014:	cmp	r0, #0
   12018:	beq	12420 <Mat_VarReadNextInfo@plt+0x131c>
   1201c:	ldr	r0, [r4, #40]	; 0x28
   12020:	movw	r5, #20964	; 0x51e4
   12024:	movw	r7, #15730	; 0x3d72
   12028:	mov	r2, #0
   1202c:	movt	r5, #2
   12030:	movt	r7, #1
   12034:	ldr	sl, [r0]
   12038:	ldr	r0, [r0, #4]
   1203c:	str	r0, [sp, #16]
   12040:	ldr	r1, [r4, #36]	; 0x24
   12044:	movw	r0, #15573	; 0x3cd5
   12048:	str	r2, [sp, #12]
   1204c:	movt	r0, #1
   12050:	bl	10f48 <Mat_Message@plt>
   12054:	ldr	r0, [r5]
   12058:	add	r1, r0, #1
   1205c:	str	r1, [r5]
   12060:	ldr	r0, [r4, #32]
   12064:	ldr	r2, [r0]
   12068:	cmp	r2, #0
   1206c:	beq	12140 <Mat_VarReadNextInfo@plt+0x103c>
   12070:	mov	r8, #0
   12074:	cmp	r1, #0
   12078:	beq	1209c <Mat_VarReadNextInfo@plt+0xf98>
   1207c:	mov	r6, #0
   12080:	mov	r0, r7
   12084:	bl	10ef4 <printf@plt>
   12088:	ldr	r0, [r5]
   1208c:	add	r6, r6, #1
   12090:	cmp	r6, r0
   12094:	bcc	12080 <Mat_VarReadNextInfo@plt+0xf7c>
   12098:	ldr	r0, [r4, #32]
   1209c:	ldr	r1, [r0, #4]
   120a0:	ldr	r5, [sp, #12]
   120a4:	ldr	r7, [sp, #8]
   120a8:	mov	r9, sl
   120ac:	cmp	r1, #0
   120b0:	beq	1210c <Mat_VarReadNextInfo@plt+0x1008>
   120b4:	mov	sl, #0
   120b8:	ldr	r0, [r0]
   120bc:	mla	r1, r5, r1, sl
   120c0:	mla	r6, r1, r0, r8
   120c4:	ldr	r0, [r4, #8]
   120c8:	mla	r1, r6, r7, r9
   120cc:	bl	1272c <Mat_VarReadNextInfo@plt+0x1628>
   120d0:	movw	r0, #15532	; 0x3cac
   120d4:	movt	r0, #1
   120d8:	bl	10ef4 <printf@plt>
   120dc:	ldr	r0, [sp, #16]
   120e0:	mla	r1, r6, r7, r0
   120e4:	ldr	r0, [r4, #8]
   120e8:	bl	1272c <Mat_VarReadNextInfo@plt+0x1628>
   120ec:	movw	r0, #15536	; 0x3cb0
   120f0:	movt	r0, #1
   120f4:	bl	10ef4 <printf@plt>
   120f8:	ldr	r0, [r4, #32]
   120fc:	add	sl, sl, #1
   12100:	ldr	r1, [r0, #4]
   12104:	cmp	sl, r1
   12108:	bcc	120b8 <Mat_VarReadNextInfo@plt+0xfb4>
   1210c:	mov	r0, #10
   12110:	bl	11050 <putchar@plt>
   12114:	ldr	r0, [r4, #32]
   12118:	movw	r5, #20964	; 0x51e4
   1211c:	movw	r7, #15730	; 0x3d72
   12120:	add	r8, r8, #1
   12124:	mov	sl, r9
   12128:	movt	r5, #2
   1212c:	movt	r7, #1
   12130:	ldr	r1, [r5]
   12134:	ldr	r2, [r0]
   12138:	cmp	r8, r2
   1213c:	bcc	12074 <Mat_VarReadNextInfo@plt+0xf70>
   12140:	sub	r0, r1, #1
   12144:	str	r0, [r5]
   12148:	mov	r0, #10
   1214c:	bl	11050 <putchar@plt>
   12150:	ldr	r0, [r4, #32]
   12154:	ldr	r2, [sp, #12]
   12158:	ldr	r0, [r0, #8]
   1215c:	add	r2, r2, #1
   12160:	cmp	r2, r0
   12164:	bcc	12040 <Mat_VarReadNextInfo@plt+0xf3c>
   12168:	b	12420 <Mat_VarReadNextInfo@plt+0x131c>
   1216c:	movw	r0, #20956	; 0x51dc
   12170:	movt	r0, #2
   12174:	ldrb	r1, [r0]
   12178:	mov	r0, r4
   1217c:	sub	sp, fp, #28
   12180:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12184:	b	11038 <Mat_VarPrint@plt>
   12188:	ldr	r1, [r4, #36]	; 0x24
   1218c:	cmp	r1, #0
   12190:	beq	121a0 <Mat_VarReadNextInfo@plt+0x109c>
   12194:	movw	r0, #15438	; 0x3c4e
   12198:	movt	r0, #1
   1219c:	bl	10f48 <Mat_Message@plt>
   121a0:	ldr	r1, [r4, #4]
   121a4:	movw	r0, #15453	; 0x3c5d
   121a8:	movt	r0, #1
   121ac:	bl	10f48 <Mat_Message@plt>
   121b0:	ldr	r1, [r4, #4]
   121b4:	cmp	r1, #0
   121b8:	beq	12420 <Mat_VarReadNextInfo@plt+0x131c>
   121bc:	ldr	r0, [r4, #32]
   121c0:	cmp	r1, #2
   121c4:	ldr	r5, [r0]
   121c8:	blt	121e4 <Mat_VarReadNextInfo@plt+0x10e0>
   121cc:	add	r0, r0, #4
   121d0:	sub	r1, r1, #1
   121d4:	ldr	r2, [r0], #4
   121d8:	subs	r1, r1, #1
   121dc:	mul	r5, r2, r5
   121e0:	bne	121d4 <Mat_VarReadNextInfo@plt+0x10d0>
   121e4:	movw	r0, #15503	; 0x3c8f
   121e8:	movt	r0, #1
   121ec:	bl	10f48 <Mat_Message@plt>
   121f0:	movw	r0, #15501	; 0x3c8d
   121f4:	movt	r0, #1
   121f8:	bl	10f48 <Mat_Message@plt>
   121fc:	movw	r6, #20964	; 0x51e4
   12200:	movt	r6, #2
   12204:	ldr	r0, [r6]
   12208:	add	r0, r0, #1
   1220c:	str	r0, [r6]
   12210:	ldr	r4, [r4, #40]	; 0x28
   12214:	cmp	r4, #0
   12218:	cmpne	r5, #0
   1221c:	beq	12234 <Mat_VarReadNextInfo@plt+0x1130>
   12220:	ldr	r0, [r4], #4
   12224:	bl	11de0 <Mat_VarReadNextInfo@plt+0xcdc>
   12228:	subs	r5, r5, #1
   1222c:	bne	12220 <Mat_VarReadNextInfo@plt+0x111c>
   12230:	ldr	r0, [r6]
   12234:	sub	r0, r0, #1
   12238:	str	r0, [r6]
   1223c:	b	1248c <Mat_VarReadNextInfo@plt+0x1388>
   12240:	movw	r0, #15526	; 0x3ca6
   12244:	movt	r0, #1
   12248:	b	12494 <Mat_VarReadNextInfo@plt+0x1390>
   1224c:	ldr	r0, [r4, #32]
   12250:	ldr	r1, [r0]
   12254:	cmp	r1, #0
   12258:	beq	12420 <Mat_VarReadNextInfo@plt+0x131c>
   1225c:	ldr	r8, [r4, #40]	; 0x28
   12260:	mov	r7, #0
   12264:	ldr	r0, [r0, #4]
   12268:	cmp	r0, #0
   1226c:	beq	122c8 <Mat_VarReadNextInfo@plt+0x11c4>
   12270:	ldr	r0, [r4, #8]
   12274:	mla	r1, r7, r5, r8
   12278:	bl	1272c <Mat_VarReadNextInfo@plt+0x1628>
   1227c:	mov	r0, #32
   12280:	bl	11050 <putchar@plt>
   12284:	ldr	r0, [r4, #32]
   12288:	ldr	r1, [r0, #4]
   1228c:	cmp	r1, #2
   12290:	bcc	122c8 <Mat_VarReadNextInfo@plt+0x11c4>
   12294:	mov	r6, #1
   12298:	ldr	r0, [r0]
   1229c:	mla	r0, r6, r0, r7
   122a0:	mla	r1, r0, r5, r8
   122a4:	ldr	r0, [r4, #8]
   122a8:	bl	1272c <Mat_VarReadNextInfo@plt+0x1628>
   122ac:	mov	r0, #32
   122b0:	bl	11050 <putchar@plt>
   122b4:	ldr	r0, [r4, #32]
   122b8:	add	r6, r6, #1
   122bc:	ldr	r1, [r0, #4]
   122c0:	cmp	r6, r1
   122c4:	bcc	12298 <Mat_VarReadNextInfo@plt+0x1194>
   122c8:	mov	r0, #10
   122cc:	bl	11050 <putchar@plt>
   122d0:	ldr	r0, [r4, #32]
   122d4:	add	r7, r7, #1
   122d8:	ldr	r1, [r0]
   122dc:	cmp	r7, r1
   122e0:	bcc	12264 <Mat_VarReadNextInfo@plt+0x1160>
   122e4:	b	12420 <Mat_VarReadNextInfo@plt+0x131c>
   122e8:	ldr	r0, [r4, #32]
   122ec:	ldr	r0, [r0, #8]
   122f0:	cmp	r0, #0
   122f4:	beq	12420 <Mat_VarReadNextInfo@plt+0x131c>
   122f8:	ldr	r0, [r4, #40]	; 0x28
   122fc:	movw	r8, #20964	; 0x51e4
   12300:	mov	r7, r4
   12304:	movw	r4, #15730	; 0x3d72
   12308:	mov	r2, #0
   1230c:	movt	r8, #2
   12310:	movt	r4, #1
   12314:	str	r0, [sp, #4]
   12318:	ldr	r5, [sp, #8]
   1231c:	ldr	r1, [r7, #36]	; 0x24
   12320:	movw	r0, #15573	; 0x3cd5
   12324:	str	r2, [sp, #12]
   12328:	movt	r0, #1
   1232c:	bl	10f48 <Mat_Message@plt>
   12330:	ldr	r0, [r8]
   12334:	add	r1, r0, #1
   12338:	str	r1, [r8]
   1233c:	ldr	r0, [r7, #32]
   12340:	ldr	r2, [r0]
   12344:	cmp	r2, #0
   12348:	beq	123f8 <Mat_VarReadNextInfo@plt+0x12f4>
   1234c:	mov	r6, #0
   12350:	cmp	r1, #0
   12354:	beq	1237c <Mat_VarReadNextInfo@plt+0x1278>
   12358:	mov	r7, #0
   1235c:	mov	r0, r4
   12360:	bl	10ef4 <printf@plt>
   12364:	ldr	r0, [r8]
   12368:	add	r7, r7, #1
   1236c:	cmp	r7, r0
   12370:	bcc	1235c <Mat_VarReadNextInfo@plt+0x1258>
   12374:	ldr	r7, [sp, #16]
   12378:	ldr	r0, [r7, #32]
   1237c:	ldr	r1, [r0, #4]
   12380:	mov	r4, r8
   12384:	ldr	r8, [sp, #4]
   12388:	ldr	sl, [sp, #12]
   1238c:	cmp	r1, #0
   12390:	beq	123cc <Mat_VarReadNextInfo@plt+0x12c8>
   12394:	mov	r9, #0
   12398:	ldr	r0, [r0]
   1239c:	mla	r1, sl, r1, r9
   123a0:	mla	r0, r1, r0, r6
   123a4:	mla	r1, r0, r5, r8
   123a8:	ldr	r0, [r7, #8]
   123ac:	bl	1272c <Mat_VarReadNextInfo@plt+0x1628>
   123b0:	mov	r0, #32
   123b4:	bl	11050 <putchar@plt>
   123b8:	ldr	r0, [r7, #32]
   123bc:	add	r9, r9, #1
   123c0:	ldr	r1, [r0, #4]
   123c4:	cmp	r9, r1
   123c8:	bcc	12398 <Mat_VarReadNextInfo@plt+0x1294>
   123cc:	mov	r0, #10
   123d0:	bl	11050 <putchar@plt>
   123d4:	ldr	r0, [r7, #32]
   123d8:	ldr	r1, [r4]
   123dc:	mov	r8, r4
   123e0:	movw	r4, #15730	; 0x3d72
   123e4:	add	r6, r6, #1
   123e8:	movt	r4, #1
   123ec:	ldr	r2, [r0]
   123f0:	cmp	r6, r2
   123f4:	bcc	12350 <Mat_VarReadNextInfo@plt+0x124c>
   123f8:	sub	r0, r1, #1
   123fc:	str	r0, [r8]
   12400:	mov	r0, #10
   12404:	bl	11050 <putchar@plt>
   12408:	ldr	r0, [r7, #32]
   1240c:	ldr	r2, [sp, #12]
   12410:	ldr	r0, [r0, #8]
   12414:	add	r2, r2, #1
   12418:	cmp	r2, r0
   1241c:	bcc	1231c <Mat_VarReadNextInfo@plt+0x1218>
   12420:	sub	sp, fp, #28
   12424:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12428:	cmp	r5, #1
   1242c:	blt	12420 <Mat_VarReadNextInfo@plt+0x131c>
   12430:	cmp	r6, #0
   12434:	beq	12420 <Mat_VarReadNextInfo@plt+0x131c>
   12438:	movw	r0, #15490	; 0x3c82
   1243c:	mov	r1, r5
   12440:	movt	r0, #1
   12444:	bl	10f48 <Mat_Message@plt>
   12448:	movw	r7, #20964	; 0x51e4
   1244c:	movt	r7, #2
   12450:	ldr	r0, [r7]
   12454:	add	r0, r0, #1
   12458:	str	r0, [r7]
   1245c:	ldr	r4, [r4, #40]	; 0x28
   12460:	cmp	r4, #0
   12464:	mulne	r5, r6, r5
   12468:	cmpne	r5, #0
   1246c:	beq	12484 <Mat_VarReadNextInfo@plt+0x1380>
   12470:	ldr	r0, [r4], #4
   12474:	bl	11de0 <Mat_VarReadNextInfo@plt+0xcdc>
   12478:	subs	r5, r5, #1
   1247c:	bne	12470 <Mat_VarReadNextInfo@plt+0x136c>
   12480:	ldr	r0, [r7]
   12484:	sub	r0, r0, #1
   12488:	str	r0, [r7]
   1248c:	movw	r0, #16814	; 0x41ae
   12490:	movt	r0, #1
   12494:	sub	sp, fp, #28
   12498:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1249c:	b	10f48 <Mat_Message@plt>
   124a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   124a4:	add	fp, sp, #24
   124a8:	vpush	{d8-d9}
   124ac:	sub	sp, sp, #40	; 0x28
   124b0:	vmov.i32	q8, #0	; 0x00000000
   124b4:	movw	r5, #20968	; 0x51e8
   124b8:	add	r8, sp, #8
   124bc:	mov	r4, r0
   124c0:	mov	r0, r8
   124c4:	movt	r5, #2
   124c8:	vst1.64	{d16-d17}, [r0]!
   124cc:	vst1.64	{d16-d17}, [r0]
   124d0:	ldrb	r0, [r5]
   124d4:	cmp	r0, #0
   124d8:	bne	12514 <Mat_VarReadNextInfo@plt+0x1410>
   124dc:	movw	r0, #15686	; 0x3d46
   124e0:	movw	r1, #15670	; 0x3d36
   124e4:	movw	r2, #15675	; 0x3d3b
   124e8:	movw	r3, #15680	; 0x3d40
   124ec:	movt	r0, #1
   124f0:	movt	r1, #1
   124f4:	movt	r2, #1
   124f8:	movt	r3, #1
   124fc:	str	r0, [sp]
   12500:	movw	r0, #15630	; 0x3d0e
   12504:	movt	r0, #1
   12508:	bl	10ef4 <printf@plt>
   1250c:	mov	r0, #1
   12510:	strb	r0, [r5]
   12514:	ldr	r1, [r4, #36]	; 0x24
   12518:	movw	r0, #15692	; 0x3d4c
   1251c:	movt	r0, #1
   12520:	bl	10ef4 <printf@plt>
   12524:	ldr	r0, [r4, #4]
   12528:	cmp	r0, #1
   1252c:	blt	125cc <Mat_VarReadNextInfo@plt+0x14c8>
   12530:	ldr	r0, [r4, #32]
   12534:	ldr	r1, [r0]
   12538:	movw	r0, #15698	; 0x3d52
   1253c:	movt	r0, #1
   12540:	bl	10ef4 <printf@plt>
   12544:	ldr	r0, [r4, #4]
   12548:	cmp	r0, #2
   1254c:	blt	125b8 <Mat_VarReadNextInfo@plt+0x14b4>
   12550:	vldr	d8, [pc, #328]	; 126a0 <Mat_VarReadNextInfo@plt+0x159c>
   12554:	movw	r5, #15703	; 0x3d57
   12558:	vmov.f64	d9, #112	; 0x3f800000  1.0
   1255c:	mov	r7, #1
   12560:	mov	r6, #0
   12564:	movt	r5, #1
   12568:	ldr	r0, [r4, #32]
   1256c:	add	r0, r0, r7, lsl #2
   12570:	vldr	s0, [r0]
   12574:	vcvt.f64.u32	d0, s0
   12578:	bl	10fb4 <log10@plt>
   1257c:	vrintp.f64	d16, d0
   12580:	vadd.f64	d16, d16, d9
   12584:	vcmpe.f64	d16, d8
   12588:	vmrs	APSR_nzcv, fpscr
   1258c:	bpl	125a8 <Mat_VarReadNextInfo@plt+0x14a4>
   12590:	ldr	r0, [r4, #32]
   12594:	mov	r1, r5
   12598:	ldr	r2, [r0, r7, lsl #2]
   1259c:	add	r0, r8, r6
   125a0:	bl	11098 <sprintf@plt>
   125a4:	add	r6, r0, r6
   125a8:	ldr	r0, [r4, #4]
   125ac:	add	r7, r7, #1
   125b0:	cmp	r7, r0
   125b4:	blt	12568 <Mat_VarReadNextInfo@plt+0x1464>
   125b8:	movw	r0, #15708	; 0x3d5c
   125bc:	add	r1, sp, #8
   125c0:	movt	r0, #1
   125c4:	bl	10ef4 <printf@plt>
   125c8:	b	125d8 <Mat_VarReadNextInfo@plt+0x14d4>
   125cc:	movw	r0, #15714	; 0x3d62
   125d0:	movt	r0, #1
   125d4:	bl	10ef4 <printf@plt>
   125d8:	mov	r0, r4
   125dc:	bl	110d4 <Mat_VarGetSize@plt>
   125e0:	mov	r1, r0
   125e4:	movw	r0, #20960	; 0x51e0
   125e8:	movt	r0, #2
   125ec:	ldrb	r0, [r0]
   125f0:	cmp	r0, #1
   125f4:	bne	12614 <Mat_VarReadNextInfo@plt+0x1510>
   125f8:	cmp	r1, #1073741825	; 0x40000001
   125fc:	bcc	12624 <Mat_VarReadNextInfo@plt+0x1520>
   12600:	vmov	s0, r1
   12604:	vldr	d16, [pc, #172]	; 126b8 <Mat_VarReadNextInfo@plt+0x15b4>
   12608:	movw	r0, #15735	; 0x3d77
   1260c:	movt	r0, #1
   12610:	b	12658 <Mat_VarReadNextInfo@plt+0x1554>
   12614:	movw	r0, #15770	; 0x3d9a
   12618:	movt	r0, #1
   1261c:	bl	10ef4 <printf@plt>
   12620:	b	12668 <Mat_VarReadNextInfo@plt+0x1564>
   12624:	cmp	r1, #1048576	; 0x100000
   12628:	bls	12640 <Mat_VarReadNextInfo@plt+0x153c>
   1262c:	vmov	s0, r1
   12630:	vldr	d16, [pc, #120]	; 126b0 <Mat_VarReadNextInfo@plt+0x15ac>
   12634:	movw	r0, #15744	; 0x3d80
   12638:	movt	r0, #1
   1263c:	b	12658 <Mat_VarReadNextInfo@plt+0x1554>
   12640:	cmp	r1, #1024	; 0x400
   12644:	bls	12690 <Mat_VarReadNextInfo@plt+0x158c>
   12648:	vmov	s0, r1
   1264c:	vldr	d16, [pc, #84]	; 126a8 <Mat_VarReadNextInfo@plt+0x15a4>
   12650:	movw	r0, #15753	; 0x3d89
   12654:	movt	r0, #1
   12658:	vcvt.f64.u32	d17, s0
   1265c:	vmul.f64	d16, d17, d16
   12660:	vmov	r2, r3, d16
   12664:	bl	10ef4 <printf@plt>
   12668:	ldr	r0, [r4, #16]
   1266c:	movw	r1, #17036	; 0x428c
   12670:	movt	r1, #1
   12674:	ldr	r1, [r1, r0, lsl #2]
   12678:	movw	r0, #15778	; 0x3da2
   1267c:	movt	r0, #1
   12680:	bl	10ef4 <printf@plt>
   12684:	sub	sp, fp, #40	; 0x28
   12688:	vpop	{d8-d9}
   1268c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12690:	movw	r0, #15762	; 0x3d92
   12694:	movt	r0, #1
   12698:	b	1261c <Mat_VarReadNextInfo@plt+0x1518>
   1269c:	nop	{0}
   126a0:	andeq	r0, r0, r0
   126a4:	submi	r0, r0, r0
   126a8:	andeq	r0, r0, r0
   126ac:	svccc	0x00500000
   126b0:	andeq	r0, r0, r0
   126b4:	cdpcc	0, 11, cr0, cr0, cr0, {0}
   126b8:	andeq	r0, r0, r0
   126bc:	cdpcc	0, 1, cr0, cr0, cr0, {0}
   126c0:	push	{r4, r5, r6, r7, fp, lr}
   126c4:	add	fp, sp, #16
   126c8:	movw	r7, #16586	; 0x40ca
   126cc:	mov	r4, r0
   126d0:	mov	r5, #0
   126d4:	mov	r0, #40	; 0x28
   126d8:	mvn	r6, #0
   126dc:	movt	r7, #1
   126e0:	uxtb	r1, r0
   126e4:	mov	r0, r4
   126e8:	bl	11008 <strchr@plt>
   126ec:	cmp	r0, #0
   126f0:	beq	1270c <Mat_VarReadNextInfo@plt+0x1608>
   126f4:	cmp	r5, #0
   126f8:	beq	12708 <Mat_VarReadNextInfo@plt+0x1604>
   126fc:	cmp	r0, r5
   12700:	movcc	r5, r0
   12704:	b	1270c <Mat_VarReadNextInfo@plt+0x1608>
   12708:	mov	r5, r0
   1270c:	ldrb	r0, [r7, -r6]
   12710:	sub	r6, r6, #1
   12714:	cmn	r6, #6
   12718:	bne	126e0 <Mat_VarReadNextInfo@plt+0x15dc>
   1271c:	cmp	r5, #0
   12720:	movne	r4, r5
   12724:	mov	r0, r4
   12728:	pop	{r4, r5, r6, r7, fp, pc}
   1272c:	sub	r0, r0, #1
   12730:	cmp	r0, #12
   12734:	bxhi	lr
   12738:	add	r2, pc, #0
   1273c:	ldr	pc, [r2, r0, lsl #2]
   12740:	andeq	r2, r1, r4, ror r7
   12744:	andeq	r2, r1, r4, lsl #15
   12748:	muleq	r1, r4, r7
   1274c:	andeq	r2, r1, r4, lsr #15
   12750:			; <UNDEFINED> instruction: 0x000127b4
   12754:	andeq	r2, r1, r4, asr #15
   12758:	ldrdeq	r2, [r1], -r4
   1275c:	andeq	r2, r1, r4, lsl r8
   12760:	andeq	r2, r1, r0, ror #15
   12764:	andeq	r2, r1, r4, lsl r8
   12768:	andeq	r2, r1, r4, lsl r8
   1276c:	strdeq	r2, [r1], -r4
   12770:	andeq	r2, r1, r4, lsl #16
   12774:	ldrsb	r1, [r1]
   12778:	movw	r0, #15563	; 0x3ccb
   1277c:	movt	r0, #1
   12780:	b	10ef4 <printf@plt>
   12784:	ldrb	r1, [r1]
   12788:	movw	r0, #15568	; 0x3cd0
   1278c:	movt	r0, #1
   12790:	b	10ef4 <printf@plt>
   12794:	ldrsh	r1, [r1]
   12798:	movw	r0, #15555	; 0x3cc3
   1279c:	movt	r0, #1
   127a0:	b	10ef4 <printf@plt>
   127a4:	ldrh	r1, [r1]
   127a8:	movw	r0, #15559	; 0x3cc7
   127ac:	movt	r0, #1
   127b0:	b	10ef4 <printf@plt>
   127b4:	ldr	r1, [r1]
   127b8:	movw	r0, #15465	; 0x3c69
   127bc:	movt	r0, #1
   127c0:	b	10ef4 <printf@plt>
   127c4:	ldr	r1, [r1]
   127c8:	movw	r0, #15552	; 0x3cc0
   127cc:	movt	r0, #1
   127d0:	b	10ef4 <printf@plt>
   127d4:	vldr	s0, [r1]
   127d8:	vcvt.f64.f32	d16, s0
   127dc:	b	127e4 <Mat_VarReadNextInfo@plt+0x16e0>
   127e0:	vldr	d16, [r1]
   127e4:	vmov	r2, r3, d16
   127e8:	movw	r0, #15539	; 0x3cb3
   127ec:	movt	r0, #1
   127f0:	b	10ef4 <printf@plt>
   127f4:	ldrd	r2, [r1]
   127f8:	movw	r0, #15542	; 0x3cb6
   127fc:	movt	r0, #1
   12800:	b	10ef4 <printf@plt>
   12804:	ldrd	r2, [r1]
   12808:	movw	r0, #15547	; 0x3cbb
   1280c:	movt	r0, #1
   12810:	b	10ef4 <printf@plt>
   12814:	bx	lr
   12818:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1281c:	add	fp, sp, #28
   12820:	sub	sp, sp, #12
   12824:	movw	r4, #16873	; 0x41e9
   12828:	mov	r6, r1
   1282c:	mov	r7, r0
   12830:	add	r5, r0, #1
   12834:	mov	r9, #0
   12838:	mov	sl, #0
   1283c:	str	r3, [sp, #4]
   12840:	str	r2, [sp, #8]
   12844:	movt	r4, #1
   12848:	mov	r8, r7
   1284c:	ldrb	r0, [r7, #1]!
   12850:	cmp	r0, #57	; 0x39
   12854:	bgt	128a4 <Mat_VarReadNextInfo@plt+0x17a0>
   12858:	cmp	r0, #41	; 0x29
   1285c:	beq	128b4 <Mat_VarReadNextInfo@plt+0x17b0>
   12860:	cmp	r0, #44	; 0x2c
   12864:	bne	12a30 <Mat_VarReadNextInfo@plt+0x192c>
   12868:	cmp	r9, #0
   1286c:	beq	1299c <Mat_VarReadNextInfo@plt+0x1898>
   12870:	cmp	r9, #1
   12874:	cmpne	r9, #2
   12878:	bne	12a24 <Mat_VarReadNextInfo@plt+0x1920>
   1287c:	mov	r0, #0
   12880:	mov	r1, r4
   12884:	strb	r0, [r8, #1]
   12888:	mov	r0, r5
   1288c:	bl	10edc <strcmp@plt>
   12890:	cmp	r0, #0
   12894:	beq	129d8 <Mat_VarReadNextInfo@plt+0x18d4>
   12898:	mov	r0, r5
   1289c:	bl	110b0 <atoi@plt>
   128a0:	b	12a1c <Mat_VarReadNextInfo@plt+0x1918>
   128a4:	cmp	r0, #58	; 0x3a
   128a8:	beq	128f0 <Mat_VarReadNextInfo@plt+0x17ec>
   128ac:	cmp	r0, #125	; 0x7d
   128b0:	bne	12a30 <Mat_VarReadNextInfo@plt+0x192c>
   128b4:	mov	r0, #0
   128b8:	mov	r1, r4
   128bc:	strb	r0, [r8, #1]
   128c0:	mov	r0, r5
   128c4:	bl	10edc <strcmp@plt>
   128c8:	cmp	r0, #0
   128cc:	beq	12938 <Mat_VarReadNextInfo@plt+0x1834>
   128d0:	mov	r0, r5
   128d4:	bl	110b0 <atoi@plt>
   128d8:	cmp	r9, #2
   128dc:	cmpne	r9, #1
   128e0:	bne	12984 <Mat_VarReadNextInfo@plt+0x1880>
   128e4:	ldr	r1, [fp, #8]
   128e8:	str	r0, [r1, sl, lsl #2]
   128ec:	b	12978 <Mat_VarReadNextInfo@plt+0x1874>
   128f0:	mov	r0, #0
   128f4:	mov	r1, r4
   128f8:	strb	r0, [r8, #1]
   128fc:	mov	r0, r5
   12900:	bl	10edc <strcmp@plt>
   12904:	cmp	r0, #0
   12908:	beq	12960 <Mat_VarReadNextInfo@plt+0x185c>
   1290c:	mov	r0, r5
   12910:	bl	110b0 <atoi@plt>
   12914:	cmp	r9, #2
   12918:	beq	128e4 <Mat_VarReadNextInfo@plt+0x17e0>
   1291c:	cmp	r9, #1
   12920:	beq	129d0 <Mat_VarReadNextInfo@plt+0x18cc>
   12924:	cmp	r9, #0
   12928:	bne	129f0 <Mat_VarReadNextInfo@plt+0x18ec>
   1292c:	ldr	r1, [sp, #8]
   12930:	sub	r0, r0, #1
   12934:	b	128e8 <Mat_VarReadNextInfo@plt+0x17e4>
   12938:	cmp	r9, #2
   1293c:	cmpne	r9, #1
   12940:	beq	1296c <Mat_VarReadNextInfo@plt+0x1868>
   12944:	cmp	r9, #0
   12948:	bne	129f0 <Mat_VarReadNextInfo@plt+0x18ec>
   1294c:	ldr	r0, [sp, #8]
   12950:	mvn	r1, #0
   12954:	str	r1, [r0, sl, lsl #2]
   12958:	ldr	r0, [fp, #8]
   1295c:	b	12974 <Mat_VarReadNextInfo@plt+0x1870>
   12960:	cmp	r9, #2
   12964:	cmpne	r9, #1
   12968:	bne	129e0 <Mat_VarReadNextInfo@plt+0x18dc>
   1296c:	ldr	r0, [fp, #8]
   12970:	mvn	r1, #0
   12974:	str	r1, [r0, sl, lsl #2]
   12978:	add	r5, r8, #2
   1297c:	add	r9, r9, #1
   12980:	b	12a30 <Mat_VarReadNextInfo@plt+0x192c>
   12984:	cmp	r9, #0
   12988:	bne	129f0 <Mat_VarReadNextInfo@plt+0x18ec>
   1298c:	ldr	r2, [sp, #8]
   12990:	sub	r1, r0, #1
   12994:	str	r1, [r2, sl, lsl #2]
   12998:	b	128e4 <Mat_VarReadNextInfo@plt+0x17e0>
   1299c:	mov	r0, #0
   129a0:	mov	r1, r4
   129a4:	strb	r0, [r8, #1]
   129a8:	mov	r0, r5
   129ac:	bl	10edc <strcmp@plt>
   129b0:	cmp	r0, #0
   129b4:	beq	12a10 <Mat_VarReadNextInfo@plt+0x190c>
   129b8:	mov	r0, r5
   129bc:	bl	110b0 <atoi@plt>
   129c0:	ldr	r2, [sp, #8]
   129c4:	sub	r1, r0, #1
   129c8:	str	r1, [r2, sl, lsl #2]
   129cc:	b	12a1c <Mat_VarReadNextInfo@plt+0x1918>
   129d0:	ldr	r1, [sp, #4]
   129d4:	b	128e8 <Mat_VarReadNextInfo@plt+0x17e4>
   129d8:	mvn	r0, #0
   129dc:	b	12a1c <Mat_VarReadNextInfo@plt+0x1918>
   129e0:	cmp	r9, #0
   129e4:	bne	129f0 <Mat_VarReadNextInfo@plt+0x18ec>
   129e8:	ldr	r0, [sp, #8]
   129ec:	b	12970 <Mat_VarReadNextInfo@plt+0x186c>
   129f0:	movw	r0, #20944	; 0x51d0
   129f4:	movw	r1, #16877	; 0x41ed
   129f8:	add	r2, sl, #1
   129fc:	movt	r0, #2
   12a00:	movt	r1, #1
   12a04:	ldr	r0, [r0]
   12a08:	bl	11020 <fprintf@plt>
   12a0c:	b	12978 <Mat_VarReadNextInfo@plt+0x1874>
   12a10:	ldr	r1, [sp, #8]
   12a14:	mvn	r0, #0
   12a18:	str	r0, [r1, sl, lsl #2]
   12a1c:	ldr	r1, [fp, #8]
   12a20:	str	r0, [r1, sl, lsl #2]
   12a24:	add	r5, r8, #2
   12a28:	add	sl, sl, #1
   12a2c:	mov	r9, #0
   12a30:	cmp	r6, r7
   12a34:	bne	12848 <Mat_VarReadNextInfo@plt+0x1744>
   12a38:	sub	sp, fp, #28
   12a3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a44:	add	fp, sp, #28
   12a48:	sub	sp, sp, #4
   12a4c:	ldr	ip, [fp, #8]
   12a50:	cmp	r0, #1
   12a54:	mov	r9, #0
   12a58:	ldr	r7, [ip, #4]
   12a5c:	cmpne	r7, r0
   12a60:	bne	12d48 <Mat_VarReadNextInfo@plt+0x1c44>
   12a64:	cmp	r0, #1
   12a68:	bne	12a90 <Mat_VarReadNextInfo@plt+0x198c>
   12a6c:	cmp	r7, #1
   12a70:	blt	12bb4 <Mat_VarReadNextInfo@plt+0x1ab0>
   12a74:	ldr	r6, [ip, #32]
   12a78:	mov	r0, #1
   12a7c:	ldr	r5, [r6], #4
   12a80:	subs	r7, r7, #1
   12a84:	mul	r0, r5, r0
   12a88:	bne	12a7c <Mat_VarReadNextInfo@plt+0x1978>
   12a8c:	b	12bb8 <Mat_VarReadNextInfo@plt+0x1ab4>
   12a90:	blt	12c18 <Mat_VarReadNextInfo@plt+0x1b14>
   12a94:	mov	lr, #0
   12a98:	mov	r8, #1
   12a9c:	mov	r9, #1
   12aa0:	mov	r4, #0
   12aa4:	ldr	r7, [r2, r4, lsl #2]
   12aa8:	cmp	r7, #0
   12aac:	ble	12c48 <Mat_VarReadNextInfo@plt+0x1b44>
   12ab0:	ldr	r6, [r3, r4, lsl #2]
   12ab4:	cmn	r6, #1
   12ab8:	beq	12b00 <Mat_VarReadNextInfo@plt+0x19fc>
   12abc:	cmp	r6, #0
   12ac0:	bmi	12b0c <Mat_VarReadNextInfo@plt+0x1a08>
   12ac4:	ldr	r5, [ip, #32]
   12ac8:	ldr	r5, [r5, r4, lsl #2]
   12acc:	cmp	r6, r5
   12ad0:	bhi	12cb4 <Mat_VarReadNextInfo@plt+0x1bb0>
   12ad4:	ldr	sl, [r1, r4, lsl #2]
   12ad8:	cmp	sl, r5
   12adc:	bcs	12c6c <Mat_VarReadNextInfo@plt+0x1b68>
   12ae0:	cmp	r6, #1
   12ae4:	cmpge	sl, r6
   12ae8:	bgt	12c6c <Mat_VarReadNextInfo@plt+0x1b68>
   12aec:	add	r5, sl, #1
   12af0:	cmp	r6, r5
   12af4:	bne	12b50 <Mat_VarReadNextInfo@plt+0x1a4c>
   12af8:	str	r8, [r3, r4, lsl #2]
   12afc:	b	12b9c <Mat_VarReadNextInfo@plt+0x1a98>
   12b00:	ldr	r5, [r1, r4, lsl #2]
   12b04:	cmn	r5, #1
   12b08:	beq	12b88 <Mat_VarReadNextInfo@plt+0x1a84>
   12b0c:	ldr	r5, [ip, #32]
   12b10:	cmp	r7, #1
   12b14:	ldr	r5, [r5, r4, lsl #2]
   12b18:	bne	12b30 <Mat_VarReadNextInfo@plt+0x1a2c>
   12b1c:	str	r5, [r3, r4, lsl #2]
   12b20:	ldr	r5, [r1, r4, lsl #2]
   12b24:	cmn	r5, #1
   12b28:	strle	lr, [r1, r4, lsl #2]
   12b2c:	b	12b9c <Mat_VarReadNextInfo@plt+0x1a98>
   12b30:	ldr	r6, [r1, r4, lsl #2]
   12b34:	vmov	s0, r7
   12b38:	mvn	r6, r6
   12b3c:	add	r5, r5, r6
   12b40:	vcvt.f64.s32	d16, s0
   12b44:	vmov	s0, r5
   12b48:	vcvt.f64.u32	d17, s0
   12b4c:	b	12b70 <Mat_VarReadNextInfo@plt+0x1a6c>
   12b50:	cmp	r6, #1
   12b54:	blt	12b9c <Mat_VarReadNextInfo@plt+0x1a98>
   12b58:	vmov	s0, r7
   12b5c:	mvn	r5, sl
   12b60:	add	r5, r6, r5
   12b64:	vcvt.f64.s32	d16, s0
   12b68:	vmov	s0, r5
   12b6c:	vcvt.f64.s32	d17, s0
   12b70:	vdiv.f64	d16, d17, d16
   12b74:	vcvtm.s32.f64	s0, d16
   12b78:	vmov	r5, s0
   12b7c:	add	r5, r5, #1
   12b80:	str	r5, [r3, r4, lsl #2]
   12b84:	b	12b9c <Mat_VarReadNextInfo@plt+0x1a98>
   12b88:	str	r8, [r3, r4, lsl #2]
   12b8c:	ldr	r5, [ip, #32]
   12b90:	ldr	r5, [r5, r4, lsl #2]
   12b94:	sub	r5, r5, #1
   12b98:	str	r5, [r1, r4, lsl #2]
   12b9c:	ldr	r5, [r3, r4, lsl #2]
   12ba0:	add	r4, r4, #1
   12ba4:	cmp	r0, r4
   12ba8:	mul	r9, r5, r9
   12bac:	bne	12aa4 <Mat_VarReadNextInfo@plt+0x19a0>
   12bb0:	b	12d48 <Mat_VarReadNextInfo@plt+0x1c44>
   12bb4:	mov	r0, #1
   12bb8:	ldr	r7, [r2]
   12bbc:	cmp	r7, #0
   12bc0:	ble	12d0c <Mat_VarReadNextInfo@plt+0x1c08>
   12bc4:	ldr	r6, [r3]
   12bc8:	cmp	r6, r0
   12bcc:	bgt	12d28 <Mat_VarReadNextInfo@plt+0x1c24>
   12bd0:	ldr	r4, [r1]
   12bd4:	cmp	r4, r0
   12bd8:	bge	12c98 <Mat_VarReadNextInfo@plt+0x1b94>
   12bdc:	cmp	r6, #1
   12be0:	cmpge	r4, r6
   12be4:	bgt	12c98 <Mat_VarReadNextInfo@plt+0x1b94>
   12be8:	cmn	r6, #1
   12bec:	beq	12c20 <Mat_VarReadNextInfo@plt+0x1b1c>
   12bf0:	cmp	r6, #1
   12bf4:	blt	12d04 <Mat_VarReadNextInfo@plt+0x1c00>
   12bf8:	vmov	s0, r7
   12bfc:	mvn	r0, r4
   12c00:	add	r0, r6, r0
   12c04:	vcvt.f64.s32	d16, s0
   12c08:	vmov	s0, r0
   12c0c:	vcvt.f64.s32	d17, s0
   12c10:	vdiv.f64	d16, d17, d16
   12c14:	b	12cf4 <Mat_VarReadNextInfo@plt+0x1bf0>
   12c18:	mov	r9, #1
   12c1c:	b	12d48 <Mat_VarReadNextInfo@plt+0x1c44>
   12c20:	cmn	r4, #1
   12c24:	beq	12c84 <Mat_VarReadNextInfo@plt+0x1b80>
   12c28:	str	r0, [r3]
   12c2c:	cmp	r7, #1
   12c30:	ldr	r6, [r1]
   12c34:	bne	12cd8 <Mat_VarReadNextInfo@plt+0x1bd4>
   12c38:	cmn	r6, #1
   12c3c:	bgt	12d04 <Mat_VarReadNextInfo@plt+0x1c00>
   12c40:	mov	r0, #0
   12c44:	b	12c90 <Mat_VarReadNextInfo@plt+0x1b8c>
   12c48:	movw	r0, #20944	; 0x51d0
   12c4c:	mov	r1, #23
   12c50:	mov	r2, #1
   12c54:	movt	r0, #2
   12c58:	ldr	r3, [r0]
   12c5c:	movw	r0, #16903	; 0x4207
   12c60:	movt	r0, #1
   12c64:	bl	10f78 <fwrite@plt>
   12c68:	b	12cd0 <Mat_VarReadNextInfo@plt+0x1bcc>
   12c6c:	movw	r0, #20944	; 0x51d0
   12c70:	movw	r1, #16998	; 0x4266
   12c74:	add	r2, r4, #1
   12c78:	movt	r0, #2
   12c7c:	movt	r1, #1
   12c80:	b	12cc8 <Mat_VarReadNextInfo@plt+0x1bc4>
   12c84:	mov	r2, #1
   12c88:	sub	r0, r0, #1
   12c8c:	str	r2, [r3]
   12c90:	str	r0, [r1]
   12c94:	b	12d04 <Mat_VarReadNextInfo@plt+0x1c00>
   12c98:	movw	r0, #20944	; 0x51d0
   12c9c:	mov	r1, #18
   12ca0:	movt	r0, #2
   12ca4:	ldr	r3, [r0]
   12ca8:	movw	r0, #16945	; 0x4231
   12cac:	movt	r0, #1
   12cb0:	b	12d40 <Mat_VarReadNextInfo@plt+0x1c3c>
   12cb4:	movw	r0, #20944	; 0x51d0
   12cb8:	movw	r1, #16964	; 0x4244
   12cbc:	add	r2, r4, #1
   12cc0:	movt	r0, #2
   12cc4:	movt	r1, #1
   12cc8:	ldr	r0, [r0]
   12ccc:	bl	11020 <fprintf@plt>
   12cd0:	mov	r9, #0
   12cd4:	b	12d48 <Mat_VarReadNextInfo@plt+0x1c44>
   12cd8:	mvn	r1, r6
   12cdc:	vldr	s0, [r2]
   12ce0:	add	r0, r0, r1
   12ce4:	vmov	s2, r0
   12ce8:	vcvt.f64.s32	d16, s2
   12cec:	vcvt.f64.s32	d17, s0
   12cf0:	vdiv.f64	d16, d16, d17
   12cf4:	vcvtm.s32.f64	s0, d16
   12cf8:	vmov	r0, s0
   12cfc:	add	r0, r0, #1
   12d00:	str	r0, [r3]
   12d04:	ldr	r9, [r3]
   12d08:	b	12d48 <Mat_VarReadNextInfo@plt+0x1c44>
   12d0c:	movw	r0, #20944	; 0x51d0
   12d10:	mov	r1, #23
   12d14:	movt	r0, #2
   12d18:	ldr	r3, [r0]
   12d1c:	movw	r0, #16903	; 0x4207
   12d20:	movt	r0, #1
   12d24:	b	12d40 <Mat_VarReadNextInfo@plt+0x1c3c>
   12d28:	movw	r0, #20944	; 0x51d0
   12d2c:	mov	r1, #17
   12d30:	movt	r0, #2
   12d34:	ldr	r3, [r0]
   12d38:	movw	r0, #16927	; 0x421f
   12d3c:	movt	r0, #1
   12d40:	mov	r2, #1
   12d44:	bl	10f78 <fwrite@plt>
   12d48:	mov	r0, r9
   12d4c:	sub	sp, fp, #28
   12d50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012d54 <getopt@@Base>:
   12d54:	push	{fp, lr}
   12d58:	mov	fp, sp
   12d5c:	sub	sp, sp, #8
   12d60:	mov	r3, #0
   12d64:	str	r3, [sp]
   12d68:	str	r3, [sp, #4]
   12d6c:	mov	r3, #0
   12d70:	bl	12d7c <getopt@@Base+0x28>
   12d74:	mov	sp, fp
   12d78:	pop	{fp, pc}
   12d7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d80:	add	fp, sp, #28
   12d84:	sub	sp, sp, #36	; 0x24
   12d88:	cmp	r2, #0
   12d8c:	beq	13260 <getopt@@Base+0x50c>
   12d90:	str	r1, [sp, #32]
   12d94:	str	r0, [sp, #28]
   12d98:	ldr	r4, [fp, #12]
   12d9c:	mov	r8, r3
   12da0:	mov	r6, r2
   12da4:	ldr	r0, [pc, #1684]	; 13440 <getopt@@Base+0x6ec>
   12da8:	add	r0, pc, r0
   12dac:	bl	10f90 <getenv@plt>
   12db0:	ldrb	r1, [r6]
   12db4:	cmp	r1, #45	; 0x2d
   12db8:	bne	12dc4 <getopt@@Base+0x70>
   12dbc:	orr	r7, r4, #2
   12dc0:	b	12de0 <getopt@@Base+0x8c>
   12dc4:	bic	r7, r4, #1
   12dc8:	cmp	r1, #43	; 0x2b
   12dcc:	moveq	r4, r7
   12dd0:	cmp	r0, #0
   12dd4:	movne	r4, r7
   12dd8:	cmp	r1, #43	; 0x2b
   12ddc:	bne	12de8 <getopt@@Base+0x94>
   12de0:	add	r6, r6, #1
   12de4:	b	12dec <getopt@@Base+0x98>
   12de8:	mov	r7, r4
   12dec:	str	r0, [sp, #12]
   12df0:	ldr	r5, [sp, #28]
   12df4:	ldr	ip, [sp, #32]
   12df8:	ldr	r3, [pc, #1604]	; 13444 <getopt@@Base+0x6f0>
   12dfc:	ldr	r3, [pc, r3]
   12e00:	str	r6, [sp, #24]
   12e04:	str	r8, [sp, #20]
   12e08:	ldr	r2, [r3]
   12e0c:	cmp	r2, #0
   12e10:	beq	12e3c <getopt@@Base+0xe8>
   12e14:	ldr	r1, [pc, #1588]	; 13450 <getopt@@Base+0x6fc>
   12e18:	mov	r0, #0
   12e1c:	ldr	r1, [pc, r1]
   12e20:	str	r0, [r1]
   12e24:	ldr	r1, [pc, #1576]	; 13454 <getopt@@Base+0x700>
   12e28:	ldr	r1, [pc, r1]
   12e2c:	ldr	r1, [r1]
   12e30:	cmp	r1, #0
   12e34:	bne	12e64 <getopt@@Base+0x110>
   12e38:	b	12e84 <getopt@@Base+0x130>
   12e3c:	mov	r2, #1
   12e40:	mov	r1, #0
   12e44:	str	r2, [r3]
   12e48:	ldr	r0, [pc, #1528]	; 13448 <getopt@@Base+0x6f4>
   12e4c:	ldr	r0, [pc, r0]
   12e50:	str	r2, [r0]
   12e54:	ldr	r0, [pc, #1520]	; 1344c <getopt@@Base+0x6f8>
   12e58:	ldr	r0, [pc, r0]
   12e5c:	str	r1, [r0]
   12e60:	mov	r1, #1
   12e64:	ldr	r6, [pc, #1516]	; 13458 <getopt@@Base+0x704>
   12e68:	mvn	r0, #0
   12e6c:	add	r6, pc, r6
   12e70:	str	r0, [r6]
   12e74:	ldr	r6, [pc, #1504]	; 1345c <getopt@@Base+0x708>
   12e78:	add	r6, pc, r6
   12e7c:	str	r0, [r6]
   12e80:	mov	r0, r1
   12e84:	str	r7, [sp, #16]
   12e88:	and	r9, r7, #1
   12e8c:	and	sl, r7, #2
   12e90:	ldr	r8, [pc, #1480]	; 13460 <getopt@@Base+0x70c>
   12e94:	ldr	r8, [pc, r8]
   12e98:	ldr	r6, [pc, #1476]	; 13464 <getopt@@Base+0x710>
   12e9c:	ldr	lr, [pc, #1476]	; 13468 <getopt@@Base+0x714>
   12ea0:	add	r6, pc, r6
   12ea4:	add	lr, pc, lr
   12ea8:	cmp	r0, #0
   12eac:	bne	12ec4 <getopt@@Base+0x170>
   12eb0:	ldr	r1, [pc, #1460]	; 1346c <getopt@@Base+0x718>
   12eb4:	ldr	r1, [pc, r1]
   12eb8:	ldrb	r7, [r1]
   12ebc:	cmp	r7, #0
   12ec0:	bne	13048 <getopt@@Base+0x2f4>
   12ec4:	mov	r0, #0
   12ec8:	cmp	r2, r5
   12ecc:	str	r0, [r8]
   12ed0:	bge	12fa4 <getopt@@Base+0x250>
   12ed4:	ldr	r0, [ip, r2, lsl #2]
   12ed8:	str	r0, [r6]
   12edc:	ldrb	r1, [r0]
   12ee0:	cmp	r1, #45	; 0x2d
   12ee4:	bne	12ef4 <getopt@@Base+0x1a0>
   12ee8:	ldrb	r7, [r0, #1]
   12eec:	cmp	r7, #0
   12ef0:	bne	13008 <getopt@@Base+0x2b4>
   12ef4:	cmp	sl, #0
   12ef8:	str	lr, [r6]
   12efc:	bne	12fec <getopt@@Base+0x298>
   12f00:	cmp	r9, #0
   12f04:	beq	13260 <getopt@@Base+0x50c>
   12f08:	ldr	r7, [pc, #1404]	; 1348c <getopt@@Base+0x738>
   12f0c:	ldr	r7, [pc, r7]
   12f10:	cmn	r7, #1
   12f14:	beq	12f88 <getopt@@Base+0x234>
   12f18:	ldr	r4, [pc, #1396]	; 13494 <getopt@@Base+0x740>
   12f1c:	ldr	r4, [pc, r4]
   12f20:	cmn	r4, #1
   12f24:	beq	12f94 <getopt@@Base+0x240>
   12f28:	mov	r0, r7
   12f2c:	mov	r1, r4
   12f30:	mov	r3, ip
   12f34:	mov	r5, lr
   12f38:	bl	13560 <getopt_long_only@@Base+0x28>
   12f3c:	ldr	r6, [pc, #1364]	; 13498 <getopt@@Base+0x744>
   12f40:	mov	lr, r5
   12f44:	ldr	ip, [sp, #32]
   12f48:	ldr	r5, [sp, #28]
   12f4c:	ldr	r3, [pc, #1352]	; 1349c <getopt@@Base+0x748>
   12f50:	mvn	r1, #0
   12f54:	ldr	r3, [pc, r3]
   12f58:	ldr	r0, [pc, #1344]	; 134a0 <getopt@@Base+0x74c>
   12f5c:	add	r6, pc, r6
   12f60:	add	r0, pc, r0
   12f64:	ldr	r2, [r3]
   12f68:	str	r1, [r0]
   12f6c:	sub	r0, r7, r4
   12f70:	ldr	r1, [pc, #1324]	; 134a4 <getopt@@Base+0x750>
   12f74:	add	r0, r0, r2
   12f78:	add	r1, pc, r1
   12f7c:	str	r0, [r1]
   12f80:	ldr	r0, [r8]
   12f84:	b	12f98 <getopt@@Base+0x244>
   12f88:	ldr	r0, [pc, #1280]	; 13490 <getopt@@Base+0x73c>
   12f8c:	add	r0, pc, r0
   12f90:	str	r2, [r0]
   12f94:	mov	r0, #0
   12f98:	add	r2, r2, #1
   12f9c:	str	r2, [r3]
   12fa0:	b	12ea8 <getopt@@Base+0x154>
   12fa4:	str	lr, [r6]
   12fa8:	ldr	r4, [pc, #1220]	; 13474 <getopt@@Base+0x720>
   12fac:	ldr	r4, [pc, r4]
   12fb0:	ldr	r6, [pc, #1216]	; 13478 <getopt@@Base+0x724>
   12fb4:	ldr	r6, [pc, r6]
   12fb8:	cmn	r6, #1
   12fbc:	beq	13058 <getopt@@Base+0x304>
   12fc0:	mov	r0, r4
   12fc4:	mov	r1, r6
   12fc8:	mov	r3, ip
   12fcc:	bl	13560 <getopt_long_only@@Base+0x28>
   12fd0:	ldr	r3, [pc, #1188]	; 1347c <getopt@@Base+0x728>
   12fd4:	sub	r0, r4, r6
   12fd8:	ldr	r3, [pc, r3]
   12fdc:	ldr	r1, [r3]
   12fe0:	add	r4, r0, r1
   12fe4:	str	r4, [r3]
   12fe8:	b	13060 <getopt@@Base+0x30c>
   12fec:	ldr	r1, [pc, #1172]	; 13488 <getopt@@Base+0x734>
   12ff0:	mov	r7, #1
   12ff4:	ldr	r1, [pc, r1]
   12ff8:	str	r0, [r1]
   12ffc:	add	r0, r2, #1
   13000:	str	r0, [r3]
   13004:	b	13264 <getopt@@Base+0x510>
   13008:	ldr	r4, [pc, #1176]	; 134a8 <getopt@@Base+0x754>
   1300c:	add	r1, r0, #1
   13010:	ldr	r4, [pc, r4]
   13014:	ldr	r5, [pc, #1168]	; 134ac <getopt@@Base+0x758>
   13018:	ldr	r5, [pc, r5]
   1301c:	cmn	r5, #1
   13020:	beq	13080 <getopt@@Base+0x32c>
   13024:	cmn	r4, #1
   13028:	ldr	r8, [sp, #24]
   1302c:	ldr	sl, [sp, #20]
   13030:	ldr	r9, [sp, #16]
   13034:	ldreq	r4, [pc, #1140]	; 134b0 <getopt@@Base+0x75c>
   13038:	addeq	r4, pc, r4
   1303c:	streq	r2, [r4]
   13040:	moveq	r4, r2
   13044:	b	1308c <getopt@@Base+0x338>
   13048:	ldr	r8, [sp, #24]
   1304c:	ldr	sl, [sp, #20]
   13050:	ldr	r9, [sp, #16]
   13054:	b	130a8 <getopt@@Base+0x354>
   13058:	cmn	r4, #1
   1305c:	strne	r4, [r3]
   13060:	ldr	r0, [pc, #1048]	; 13480 <getopt@@Base+0x72c>
   13064:	mvn	r7, #0
   13068:	add	r0, pc, r0
   1306c:	str	r7, [r0]
   13070:	ldr	r0, [pc, #1036]	; 13484 <getopt@@Base+0x730>
   13074:	add	r0, pc, r0
   13078:	str	r7, [r0]
   1307c:	b	13264 <getopt@@Base+0x510>
   13080:	ldr	r8, [sp, #24]
   13084:	ldr	sl, [sp, #20]
   13088:	ldr	r9, [sp, #16]
   1308c:	cmp	r7, #45	; 0x2d
   13090:	str	r1, [r6]
   13094:	bne	130a8 <getopt@@Base+0x354>
   13098:	ldrb	r0, [r0, #2]
   1309c:	mov	r7, #45	; 0x2d
   130a0:	cmp	r0, #0
   130a4:	beq	13104 <getopt@@Base+0x3b0>
   130a8:	cmp	sl, #0
   130ac:	beq	131ac <getopt@@Base+0x458>
   130b0:	ldr	r0, [ip, r2, lsl #2]
   130b4:	cmp	r1, r0
   130b8:	beq	131ac <getopt@@Base+0x458>
   130bc:	tst	r9, #4
   130c0:	bne	130cc <getopt@@Base+0x378>
   130c4:	cmp	r7, #45	; 0x2d
   130c8:	bne	131ac <getopt@@Base+0x458>
   130cc:	ldr	r2, [pc, #924]	; 13470 <getopt@@Base+0x71c>
   130d0:	mov	r0, #0
   130d4:	mov	r4, lr
   130d8:	cmp	r7, #58	; 0x3a
   130dc:	add	r2, pc, r2
   130e0:	str	r0, [r2]
   130e4:	beq	13158 <getopt@@Base+0x404>
   130e8:	cmp	r7, #45	; 0x2d
   130ec:	bne	13140 <getopt@@Base+0x3ec>
   130f0:	mov	r3, #1
   130f4:	add	r1, r1, #1
   130f8:	str	r3, [r2]
   130fc:	str	r1, [r6]
   13100:	b	13158 <getopt@@Base+0x404>
   13104:	add	r2, r2, #1
   13108:	cmn	r4, #1
   1310c:	str	lr, [r6]
   13110:	str	r2, [r3]
   13114:	beq	13060 <getopt@@Base+0x30c>
   13118:	mov	r6, r3
   1311c:	mov	r0, r5
   13120:	mov	r1, r4
   13124:	mov	r3, ip
   13128:	bl	13560 <getopt_long_only@@Base+0x28>
   1312c:	ldr	r1, [r6]
   13130:	sub	r0, r5, r4
   13134:	add	r0, r0, r1
   13138:	str	r0, [r6]
   1313c:	b	13060 <getopt@@Base+0x30c>
   13140:	mov	r0, r8
   13144:	mov	r1, r7
   13148:	bl	11008 <strchr@plt>
   1314c:	ldr	ip, [sp, #32]
   13150:	cmp	r0, #0
   13154:	movwne	r0, #1
   13158:	ldr	r3, [fp, #8]
   1315c:	stm	sp, {r0, r9}
   13160:	mov	r0, ip
   13164:	mov	r1, r8
   13168:	mov	r2, sl
   1316c:	bl	13604 <getopt_long_only@@Base+0xcc>
   13170:	cmn	r0, #1
   13174:	beq	1318c <getopt@@Base+0x438>
   13178:	mov	r7, r0
   1317c:	ldr	r0, [pc, #904]	; 1350c <getopt@@Base+0x7b8>
   13180:	add	r0, pc, r0
   13184:	str	r4, [r0]
   13188:	b	13264 <getopt@@Base+0x510>
   1318c:	ldr	r1, [pc, #800]	; 134b4 <getopt@@Base+0x760>
   13190:	mov	lr, r4
   13194:	ldr	r1, [pc, r1]
   13198:	ldrb	r7, [r1]
   1319c:	ldr	r3, [pc, #788]	; 134b8 <getopt@@Base+0x764>
   131a0:	ldr	r3, [pc, r3]
   131a4:	ldr	r6, [pc, #784]	; 134bc <getopt@@Base+0x768>
   131a8:	add	r6, pc, r6
   131ac:	add	r4, r1, #1
   131b0:	cmp	r7, #58	; 0x3a
   131b4:	str	r4, [r6]
   131b8:	beq	13270 <getopt@@Base+0x51c>
   131bc:	cmp	r7, #45	; 0x2d
   131c0:	bne	131d0 <getopt@@Base+0x47c>
   131c4:	ldrb	r0, [r4]
   131c8:	cmp	r0, #0
   131cc:	bne	13288 <getopt@@Base+0x534>
   131d0:	mov	r0, r8
   131d4:	mov	r1, r7
   131d8:	mov	r6, lr
   131dc:	bl	11008 <strchr@plt>
   131e0:	cmp	r0, #0
   131e4:	beq	13244 <getopt@@Base+0x4f0>
   131e8:	ldrb	r1, [r0, #1]
   131ec:	ldr	r3, [pc, #736]	; 134d4 <getopt@@Base+0x780>
   131f0:	cmp	sl, #0
   131f4:	ldr	r3, [pc, r3]
   131f8:	beq	13208 <getopt@@Base+0x4b4>
   131fc:	cmp	r7, #87	; 0x57
   13200:	cmpeq	r1, #59	; 0x3b
   13204:	beq	132f0 <getopt@@Base+0x59c>
   13208:	cmp	r1, #58	; 0x3a
   1320c:	ldr	r5, [sp, #28]
   13210:	ldr	r1, [sp, #32]
   13214:	bne	132e0 <getopt@@Base+0x58c>
   13218:	ldr	ip, [pc, #724]	; 134f4 <getopt@@Base+0x7a0>
   1321c:	mov	r2, #0
   13220:	ldr	ip, [pc, ip]
   13224:	str	r2, [ip]
   13228:	ldrb	r2, [r4]
   1322c:	cmp	r2, #0
   13230:	beq	13360 <getopt@@Base+0x60c>
   13234:	str	r4, [ip]
   13238:	ldr	r2, [pc, #696]	; 134f8 <getopt@@Base+0x7a4>
   1323c:	add	r2, pc, r2
   13240:	b	13390 <getopt@@Base+0x63c>
   13244:	ldr	r3, [pc, #628]	; 134c0 <getopt@@Base+0x76c>
   13248:	cmp	r7, #45	; 0x2d
   1324c:	ldr	r3, [pc, r3]
   13250:	bne	13270 <getopt@@Base+0x51c>
   13254:	ldrb	r0, [r4]
   13258:	cmp	r0, #0
   1325c:	bne	13288 <getopt@@Base+0x534>
   13260:	mvn	r7, #0
   13264:	mov	r0, r7
   13268:	sub	sp, fp, #28
   1326c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13270:	ldrb	r0, [r4]
   13274:	cmp	r0, #0
   13278:	bne	13288 <getopt@@Base+0x534>
   1327c:	ldr	r0, [r3]
   13280:	add	r0, r0, #1
   13284:	str	r0, [r3]
   13288:	ldr	r0, [pc, #564]	; 134c4 <getopt@@Base+0x770>
   1328c:	ldr	r0, [pc, r0]
   13290:	ldr	r0, [r0]
   13294:	cmp	r0, #0
   13298:	beq	132cc <getopt@@Base+0x578>
   1329c:	ldrb	r0, [r8]
   132a0:	cmp	r0, #58	; 0x3a
   132a4:	beq	132cc <getopt@@Base+0x578>
   132a8:	ldr	r1, [pc, #536]	; 134c8 <getopt@@Base+0x774>
   132ac:	ldr	r0, [pc, #536]	; 134cc <getopt@@Base+0x778>
   132b0:	ldr	r2, [sp, #12]
   132b4:	add	r1, pc, r1
   132b8:	cmp	r2, #0
   132bc:	add	r0, pc, r0
   132c0:	movne	r0, r1
   132c4:	mov	r1, r7
   132c8:	bl	11014 <warnx@plt>
   132cc:	ldr	r0, [pc, #508]	; 134d0 <getopt@@Base+0x77c>
   132d0:	ldr	r0, [pc, r0]
   132d4:	str	r7, [r0]
   132d8:	mov	r7, #63	; 0x3f
   132dc:	b	13264 <getopt@@Base+0x510>
   132e0:	ldrb	r0, [r4]
   132e4:	cmp	r0, #0
   132e8:	bne	13264 <getopt@@Base+0x510>
   132ec:	b	13394 <getopt@@Base+0x640>
   132f0:	ldrb	r0, [r4]
   132f4:	ldr	r1, [sp, #28]
   132f8:	cmp	r0, #0
   132fc:	ldr	r0, [sp, #32]
   13300:	bne	13328 <getopt@@Base+0x5d4>
   13304:	ldr	r2, [r3]
   13308:	add	r2, r2, #1
   1330c:	cmp	r2, r1
   13310:	str	r2, [r3]
   13314:	bge	133a0 <getopt@@Base+0x64c>
   13318:	ldr	r1, [r0, r2, lsl #2]
   1331c:	ldr	r2, [pc, #452]	; 134e8 <getopt@@Base+0x794>
   13320:	add	r2, pc, r2
   13324:	str	r1, [r2]
   13328:	ldr	r2, [pc, #444]	; 134ec <getopt@@Base+0x798>
   1332c:	ldr	r3, [fp, #8]
   13330:	mov	r1, #2
   13334:	add	r2, pc, r2
   13338:	str	r1, [r2]
   1333c:	mov	r1, #0
   13340:	mov	r2, sl
   13344:	stm	sp, {r1, r9}
   13348:	mov	r1, r8
   1334c:	bl	13604 <getopt_long_only@@Base+0xcc>
   13350:	ldr	r1, [pc, #408]	; 134f0 <getopt@@Base+0x79c>
   13354:	add	r1, pc, r1
   13358:	str	r6, [r1]
   1335c:	b	13268 <getopt@@Base+0x514>
   13360:	ldrb	r0, [r0, #2]
   13364:	ldr	r2, [pc, #400]	; 134fc <getopt@@Base+0x7a8>
   13368:	cmp	r0, #58	; 0x3a
   1336c:	add	r2, pc, r2
   13370:	beq	13390 <getopt@@Base+0x63c>
   13374:	ldr	r0, [r3]
   13378:	add	r0, r0, #1
   1337c:	cmp	r0, r5
   13380:	str	r0, [r3]
   13384:	bge	133f0 <getopt@@Base+0x69c>
   13388:	ldr	r0, [r1, r0, lsl #2]
   1338c:	str	r0, [ip]
   13390:	str	r6, [r2]
   13394:	ldr	r0, [r3]
   13398:	add	r0, r0, #1
   1339c:	b	13000 <getopt@@Base+0x2ac>
   133a0:	ldr	r0, [pc, #304]	; 134d8 <getopt@@Base+0x784>
   133a4:	add	r0, pc, r0
   133a8:	str	r6, [r0]
   133ac:	ldr	r0, [pc, #296]	; 134dc <getopt@@Base+0x788>
   133b0:	ldr	r0, [pc, r0]
   133b4:	ldr	r0, [r0]
   133b8:	cmp	r0, #0
   133bc:	beq	133dc <getopt@@Base+0x688>
   133c0:	ldrb	r0, [r8]
   133c4:	cmp	r0, #58	; 0x3a
   133c8:	beq	133dc <getopt@@Base+0x688>
   133cc:	ldr	r0, [pc, #268]	; 134e0 <getopt@@Base+0x78c>
   133d0:	mov	r1, #87	; 0x57
   133d4:	add	r0, pc, r0
   133d8:	bl	11014 <warnx@plt>
   133dc:	ldr	r0, [pc, #256]	; 134e4 <getopt@@Base+0x790>
   133e0:	mov	r1, #87	; 0x57
   133e4:	ldr	r0, [pc, r0]
   133e8:	str	r1, [r0]
   133ec:	b	13430 <getopt@@Base+0x6dc>
   133f0:	str	r6, [r2]
   133f4:	ldr	r0, [pc, #260]	; 13500 <getopt@@Base+0x7ac>
   133f8:	ldr	r0, [pc, r0]
   133fc:	ldr	r0, [r0]
   13400:	cmp	r0, #0
   13404:	beq	13424 <getopt@@Base+0x6d0>
   13408:	ldrb	r0, [r8]
   1340c:	cmp	r0, #58	; 0x3a
   13410:	beq	13424 <getopt@@Base+0x6d0>
   13414:	ldr	r0, [pc, #232]	; 13504 <getopt@@Base+0x7b0>
   13418:	mov	r1, r7
   1341c:	add	r0, pc, r0
   13420:	bl	11014 <warnx@plt>
   13424:	ldr	r0, [pc, #220]	; 13508 <getopt@@Base+0x7b4>
   13428:	ldr	r0, [pc, r0]
   1342c:	str	r7, [r0]
   13430:	ldrb	r7, [r8]
   13434:	cmp	r7, #58	; 0x3a
   13438:	movwne	r7, #63	; 0x3f
   1343c:	b	13264 <getopt@@Base+0x510>
   13440:	andeq	r1, r0, r4, lsr #10
   13444:	andeq	r2, r1, r0, ror #5
   13448:	andeq	r2, r1, r4, lsl #5
   1344c:	andeq	r2, r1, ip, lsl #5
   13450:	andeq	r2, r1, r8, asr #5
   13454:	andeq	r2, r1, r8, lsr #5
   13458:	andeq	r2, r1, ip, asr #6
   1345c:	andeq	r2, r1, ip, lsr r3
   13460:	andeq	r2, r1, ip, lsr r2
   13464:	andeq	r2, r1, ip, lsl r3
   13468:	andeq	r0, r0, r9, lsl #29
   1346c:	andeq	r2, r1, r8, lsl #6
   13470:	andeq	r2, r1, r4, ror #1
   13474:	andeq	r2, r1, ip, lsl #4
   13478:	andeq	r2, r1, r0, lsl #4
   1347c:	andeq	r2, r1, r4, lsl #2
   13480:	andeq	r2, r1, r0, asr r1
   13484:	andeq	r2, r1, r0, asr #2
   13488:	strdeq	r2, [r1], -r0
   1348c:	andeq	r2, r1, ip, lsr #5
   13490:	andeq	r2, r1, ip, lsr #4
   13494:	muleq	r1, r8, r2
   13498:	andeq	r2, r1, r0, ror #4
   1349c:	andeq	r2, r1, r8, lsl #3
   134a0:	andeq	r2, r1, r4, asr r2
   134a4:	andeq	r2, r1, r0, asr #4
   134a8:	andeq	r2, r1, r4, lsr #3
   134ac:	andeq	r2, r1, r0, lsr #3
   134b0:	andeq	r2, r1, ip, ror r1
   134b4:	andeq	r2, r1, r8, lsr #32
   134b8:	andeq	r1, r1, ip, lsr pc
   134bc:	andeq	r2, r1, r4, lsl r0
   134c0:	muleq	r1, r0, lr
   134c4:	andeq	r1, r1, r8, asr #28
   134c8:	andeq	r1, r0, pc, lsr #32
   134cc:	andeq	r1, r0, ip, lsr r0
   134d0:	andeq	r1, r1, r0, lsl lr
   134d4:	andeq	r1, r1, r8, ror #29
   134d8:	andeq	r1, r1, r8, lsl lr
   134dc:	andeq	r1, r1, r4, lsr #26
   134e0:	andeq	r0, r0, r9, lsr pc
   134e4:	strdeq	r1, [r1], -ip
   134e8:	muleq	r1, ip, lr
   134ec:	andeq	r1, r1, ip, lsl #29
   134f0:	andeq	r1, r1, r8, ror #28
   134f4:	andeq	r1, r1, r4, asr #29
   134f8:	andeq	r1, r1, r0, lsl #31
   134fc:	andeq	r1, r1, r0, asr lr
   13500:	ldrdeq	r1, [r1], -ip
   13504:	strdeq	r0, [r0], -r1
   13508:			; <UNDEFINED> instruction: 0x00011cb8
   1350c:	andeq	r2, r1, ip, lsr r0

00013510 <getopt_long@@Base>:
   13510:	push	{fp, lr}
   13514:	mov	fp, sp
   13518:	sub	sp, sp, #8
   1351c:	mov	ip, #1
   13520:	str	ip, [sp, #4]
   13524:	ldr	ip, [fp, #8]
   13528:	str	ip, [sp]
   1352c:	bl	12d7c <getopt@@Base+0x28>
   13530:	mov	sp, fp
   13534:	pop	{fp, pc}

00013538 <getopt_long_only@@Base>:
   13538:	push	{fp, lr}
   1353c:	mov	fp, sp
   13540:	sub	sp, sp, #8
   13544:	mov	ip, #5
   13548:	str	ip, [sp, #4]
   1354c:	ldr	ip, [fp, #8]
   13550:	str	ip, [sp]
   13554:	bl	12d7c <getopt@@Base+0x28>
   13558:	mov	sp, fp
   1355c:	pop	{fp, pc}
   13560:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13564:	add	fp, sp, #24
   13568:	sub	ip, r2, r1
   1356c:	sub	lr, r1, r0
   13570:	sdiv	r4, lr, ip
   13574:	mov	r9, ip
   13578:	mls	r5, r4, ip, lr
   1357c:	cmp	r5, #0
   13580:	beq	135a0 <getopt_long_only@@Base+0x68>
   13584:	mov	r6, ip
   13588:	mov	r9, r5
   1358c:	sdiv	r5, r6, r5
   13590:	mls	r5, r5, r9, r6
   13594:	mov	r6, r9
   13598:	cmp	r5, #0
   1359c:	bne	13588 <getopt_long_only@@Base+0x50>
   135a0:	cmp	r9, #1
   135a4:	blt	13600 <getopt_long_only@@Base+0xc8>
   135a8:	sub	r0, r2, r0
   135ac:	mov	r2, #0
   135b0:	sdiv	r8, r0, r9
   135b4:	cmp	r8, #1
   135b8:	blt	135f4 <getopt_long_only@@Base+0xbc>
   135bc:	add	r5, r2, r1
   135c0:	mov	r6, r8
   135c4:	ldr	r0, [r3, r5, lsl #2]
   135c8:	mov	r7, r5
   135cc:	cmp	r7, r1
   135d0:	mov	r4, ip
   135d4:	rsbge	r4, lr, #0
   135d8:	subs	r6, r6, #1
   135dc:	add	r7, r4, r7
   135e0:	ldr	r4, [r3, r7, lsl #2]
   135e4:	str	r0, [r3, r7, lsl #2]
   135e8:	mov	r0, r4
   135ec:	str	r4, [r3, r5, lsl #2]
   135f0:	bne	135cc <getopt_long_only@@Base+0x94>
   135f4:	add	r2, r2, #1
   135f8:	cmp	r2, r9
   135fc:	bne	135b4 <getopt_long_only@@Base+0x7c>
   13600:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13604:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13608:	add	fp, sp, #28
   1360c:	sub	sp, sp, #36	; 0x24
   13610:	str	r3, [sp, #16]
   13614:	mov	r8, r0
   13618:	mov	r5, r2
   1361c:	mov	sl, r1
   13620:	ldr	r0, [pc, #988]	; 13a04 <getopt_long_only@@Base+0x4cc>
   13624:	ldr	r0, [pc, r0]
   13628:	ldr	r4, [pc, #984]	; 13a08 <getopt_long_only@@Base+0x4d0>
   1362c:	ldr	r4, [pc, r4]
   13630:	cmp	r0, #2
   13634:	bhi	13648 <getopt_long_only@@Base+0x110>
   13638:	ldr	r1, [pc, #976]	; 13a10 <getopt_long_only@@Base+0x4d8>
   1363c:	add	r1, pc, r1
   13640:	ldr	r9, [r1, r0, lsl #2]
   13644:	b	13650 <getopt_long_only@@Base+0x118>
   13648:	ldr	r9, [pc, #956]	; 13a0c <getopt_long_only@@Base+0x4d4>
   1364c:	add	r9, pc, r9
   13650:	ldr	r0, [pc, #956]	; 13a14 <getopt_long_only@@Base+0x4dc>
   13654:	mov	r1, #61	; 0x3d
   13658:	ldr	r0, [pc, r0]
   1365c:	ldr	r7, [r0]
   13660:	add	r6, r7, #1
   13664:	str	r6, [r0]
   13668:	mov	r0, r4
   1366c:	bl	11008 <strchr@plt>
   13670:	cmp	r0, #0
   13674:	str	r7, [sp, #24]
   13678:	stm	sp, {r6, r8}
   1367c:	beq	1368c <getopt_long_only@@Base+0x154>
   13680:	sub	r6, r0, r4
   13684:	add	r0, r0, #1
   13688:	b	1369c <getopt_long_only@@Base+0x164>
   1368c:	mov	r0, r4
   13690:	bl	10ffc <strlen@plt>
   13694:	mov	r6, r0
   13698:	mov	r0, #0
   1369c:	ldr	r8, [r5]
   136a0:	ldr	r1, [fp, #8]
   136a4:	mov	r7, sl
   136a8:	cmp	r8, #0
   136ac:	beq	1387c <getopt_long_only@@Base+0x344>
   136b0:	str	r0, [sp, #8]
   136b4:	ldr	r0, [fp, #12]
   136b8:	sub	r2, r6, #1
   136bc:	cmp	r1, #0
   136c0:	str	r9, [sp, #12]
   136c4:	str	r7, [sp, #20]
   136c8:	mvn	sl, #0
   136cc:	mov	r9, #0
   136d0:	clz	r2, r2
   136d4:	movwne	r1, #1
   136d8:	lsr	r2, r2, #5
   136dc:	and	r7, r1, r2
   136e0:	and	r0, r0, #4
   136e4:	str	r0, [sp, #28]
   136e8:	mov	r0, #0
   136ec:	str	r0, [sp, #32]
   136f0:	mov	r0, r4
   136f4:	mov	r1, r8
   136f8:	mov	r2, r6
   136fc:	bl	110e0 <strncmp@plt>
   13700:	cmp	r0, #0
   13704:	bne	1377c <getopt_long_only@@Base+0x244>
   13708:	mov	r0, r8
   1370c:	bl	10ffc <strlen@plt>
   13710:	cmp	r0, r6
   13714:	beq	137dc <getopt_long_only@@Base+0x2a4>
   13718:	cmp	r7, #0
   1371c:	bne	1377c <getopt_long_only@@Base+0x244>
   13720:	cmn	sl, #1
   13724:	beq	13778 <getopt_long_only@@Base+0x240>
   13728:	ldr	r0, [sp, #28]
   1372c:	cmp	r0, #0
   13730:	bne	1376c <getopt_long_only@@Base+0x234>
   13734:	add	r0, r5, sl, lsl #4
   13738:	add	r1, r5, r9, lsl #4
   1373c:	ldr	r2, [r0, #4]
   13740:	ldr	r3, [r1, #4]
   13744:	cmp	r3, r2
   13748:	bne	1376c <getopt_long_only@@Base+0x234>
   1374c:	ldr	r2, [r0, #8]
   13750:	ldr	r3, [r1, #8]
   13754:	cmp	r3, r2
   13758:	bne	1376c <getopt_long_only@@Base+0x234>
   1375c:	ldr	r0, [r0, #12]
   13760:	ldr	r1, [r1, #12]
   13764:	cmp	r1, r0
   13768:	beq	1377c <getopt_long_only@@Base+0x244>
   1376c:	mov	r0, #1
   13770:	str	r0, [sp, #32]
   13774:	b	1377c <getopt_long_only@@Base+0x244>
   13778:	mov	sl, r9
   1377c:	add	r0, r5, r9, lsl #4
   13780:	add	r9, r9, #1
   13784:	ldr	r8, [r0, #16]
   13788:	cmp	r8, #0
   1378c:	bne	136f0 <getopt_long_only@@Base+0x1b8>
   13790:	ldr	r0, [sp, #32]
   13794:	cmp	r0, #0
   13798:	beq	137f0 <getopt_long_only@@Base+0x2b8>
   1379c:	ldr	r0, [pc, #628]	; 13a18 <getopt_long_only@@Base+0x4e0>
   137a0:	ldr	r0, [pc, r0]
   137a4:	ldr	r0, [r0]
   137a8:	cmp	r0, #0
   137ac:	beq	138d0 <getopt_long_only@@Base+0x398>
   137b0:	ldr	r0, [sp, #20]
   137b4:	ldrb	r0, [r0]
   137b8:	cmp	r0, #58	; 0x3a
   137bc:	beq	138d0 <getopt_long_only@@Base+0x398>
   137c0:	ldr	r0, [pc, #596]	; 13a1c <getopt_long_only@@Base+0x4e4>
   137c4:	ldr	r1, [sp, #12]
   137c8:	mov	r2, r6
   137cc:	mov	r3, r4
   137d0:	add	r0, pc, r0
   137d4:	bl	11014 <warnx@plt>
   137d8:	b	138d0 <getopt_long_only@@Base+0x398>
   137dc:	mov	sl, r9
   137e0:	ldr	r7, [sp, #20]
   137e4:	ldr	r9, [sp, #12]
   137e8:	ldr	r2, [sp, #8]
   137ec:	b	13808 <getopt_long_only@@Base+0x2d0>
   137f0:	ldr	r7, [sp, #20]
   137f4:	ldr	r9, [sp, #12]
   137f8:	ldr	r2, [sp, #8]
   137fc:	ldr	r1, [fp, #8]
   13800:	cmn	sl, #1
   13804:	beq	1387c <getopt_long_only@@Base+0x344>
   13808:	add	r5, r5, sl, lsl #4
   1380c:	cmp	r2, #0
   13810:	mov	r0, r5
   13814:	ldr	r1, [r0, #4]!
   13818:	beq	138ec <getopt_long_only@@Base+0x3b4>
   1381c:	cmp	r1, #0
   13820:	bne	138ec <getopt_long_only@@Base+0x3b4>
   13824:	ldr	r0, [pc, #504]	; 13a24 <getopt_long_only@@Base+0x4ec>
   13828:	ldr	r0, [pc, r0]
   1382c:	ldr	r0, [r0]
   13830:	cmp	r0, #0
   13834:	beq	1385c <getopt_long_only@@Base+0x324>
   13838:	ldrb	r0, [r7]
   1383c:	cmp	r0, #58	; 0x3a
   13840:	beq	1385c <getopt_long_only@@Base+0x324>
   13844:	ldr	r0, [pc, #476]	; 13a28 <getopt_long_only@@Base+0x4f0>
   13848:	mov	r1, r9
   1384c:	mov	r2, r6
   13850:	mov	r3, r4
   13854:	add	r0, pc, r0
   13858:	bl	11014 <warnx@plt>
   1385c:	ldr	r1, [r5, #8]
   13860:	mov	r0, #0
   13864:	cmp	r1, #0
   13868:	ldreq	r0, [r5, #12]
   1386c:	ldr	r1, [pc, #440]	; 13a2c <getopt_long_only@@Base+0x4f4>
   13870:	ldr	r1, [pc, r1]
   13874:	str	r0, [r1]
   13878:	b	138e0 <getopt_long_only@@Base+0x3a8>
   1387c:	cmp	r1, #0
   13880:	beq	1389c <getopt_long_only@@Base+0x364>
   13884:	ldr	r0, [pc, #452]	; 13a50 <getopt_long_only@@Base+0x518>
   13888:	ldr	r0, [pc, r0]
   1388c:	ldr	r1, [sp, #24]
   13890:	str	r1, [r0]
   13894:	mvn	r0, #0
   13898:	b	138e4 <getopt_long_only@@Base+0x3ac>
   1389c:	ldr	r0, [pc, #432]	; 13a54 <getopt_long_only@@Base+0x51c>
   138a0:	ldr	r0, [pc, r0]
   138a4:	ldr	r0, [r0]
   138a8:	cmp	r0, #0
   138ac:	beq	138d0 <getopt_long_only@@Base+0x398>
   138b0:	ldrb	r0, [r7]
   138b4:	cmp	r0, #58	; 0x3a
   138b8:	beq	138d0 <getopt_long_only@@Base+0x398>
   138bc:	ldr	r0, [pc, #404]	; 13a58 <getopt_long_only@@Base+0x520>
   138c0:	mov	r1, r9
   138c4:	mov	r2, r4
   138c8:	add	r0, pc, r0
   138cc:	bl	11014 <warnx@plt>
   138d0:	ldr	r0, [pc, #328]	; 13a20 <getopt_long_only@@Base+0x4e8>
   138d4:	mov	r1, #0
   138d8:	ldr	r0, [pc, r0]
   138dc:	str	r1, [r0]
   138e0:	mov	r0, #63	; 0x3f
   138e4:	sub	sp, fp, #28
   138e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138ec:	sub	r2, r1, #1
   138f0:	cmp	r2, #1
   138f4:	bhi	139e0 <getopt_long_only@@Base+0x4a8>
   138f8:	ldr	r2, [sp, #8]
   138fc:	cmp	r2, #0
   13900:	beq	13914 <getopt_long_only@@Base+0x3dc>
   13904:	ldr	r0, [pc, #292]	; 13a30 <getopt_long_only@@Base+0x4f8>
   13908:	ldr	r0, [pc, r0]
   1390c:	str	r2, [r0]
   13910:	b	1394c <getopt_long_only@@Base+0x414>
   13914:	cmp	r1, #1
   13918:	bne	139e0 <getopt_long_only@@Base+0x4a8>
   1391c:	ldr	r1, [sp, #24]
   13920:	ldr	r2, [pc, #268]	; 13a34 <getopt_long_only@@Base+0x4fc>
   13924:	ldr	r2, [pc, r2]
   13928:	add	r1, r1, #2
   1392c:	str	r1, [r2]
   13930:	ldr	r1, [sp, #4]
   13934:	ldr	r2, [sp]
   13938:	ldr	r1, [r1, r2, lsl #2]
   1393c:	ldr	r2, [pc, #244]	; 13a38 <getopt_long_only@@Base+0x500>
   13940:	ldr	r2, [pc, r2]
   13944:	str	r1, [r2]
   13948:	ldr	r1, [r0]
   1394c:	cmp	r1, #1
   13950:	bne	139e0 <getopt_long_only@@Base+0x4a8>
   13954:	ldr	r0, [pc, #224]	; 13a3c <getopt_long_only@@Base+0x504>
   13958:	ldr	r0, [pc, r0]
   1395c:	ldr	r0, [r0]
   13960:	cmp	r0, #0
   13964:	bne	139e0 <getopt_long_only@@Base+0x4a8>
   13968:	ldr	r0, [pc, #208]	; 13a40 <getopt_long_only@@Base+0x508>
   1396c:	ldr	r0, [pc, r0]
   13970:	ldr	r0, [r0]
   13974:	cmp	r0, #0
   13978:	beq	1399c <getopt_long_only@@Base+0x464>
   1397c:	ldrb	r0, [r7]
   13980:	cmp	r0, #58	; 0x3a
   13984:	beq	1399c <getopt_long_only@@Base+0x464>
   13988:	ldr	r0, [pc, #180]	; 13a44 <getopt_long_only@@Base+0x50c>
   1398c:	mov	r1, r9
   13990:	mov	r2, r4
   13994:	add	r0, pc, r0
   13998:	bl	11014 <warnx@plt>
   1399c:	ldr	r1, [r5, #8]
   139a0:	mov	r0, #0
   139a4:	cmp	r1, #0
   139a8:	ldreq	r0, [r5, #12]
   139ac:	ldr	r1, [pc, #148]	; 13a48 <getopt_long_only@@Base+0x510>
   139b0:	ldr	r1, [pc, r1]
   139b4:	str	r0, [r1]
   139b8:	ldr	r0, [pc, #140]	; 13a4c <getopt_long_only@@Base+0x514>
   139bc:	ldr	r0, [pc, r0]
   139c0:	mov	r1, r0
   139c4:	ldr	r0, [r0]
   139c8:	sub	r0, r0, #1
   139cc:	str	r0, [r1]
   139d0:	ldrb	r0, [r7]
   139d4:	cmp	r0, #58	; 0x3a
   139d8:	movwne	r0, #63	; 0x3f
   139dc:	b	138e4 <getopt_long_only@@Base+0x3ac>
   139e0:	ldr	r0, [sp, #16]
   139e4:	cmp	r0, #0
   139e8:	strne	sl, [r0]
   139ec:	ldr	r1, [r5, #8]
   139f0:	ldr	r0, [r5, #12]
   139f4:	cmp	r1, #0
   139f8:	strne	r0, [r1]
   139fc:	movne	r0, #0
   13a00:	b	138e4 <getopt_long_only@@Base+0x3ac>
   13a04:	muleq	r1, ip, fp
   13a08:	muleq	r1, r0, fp
   13a0c:	andeq	r0, r0, r1, ror #13
   13a10:	andeq	r1, r1, r8, lsr #17
   13a14:	andeq	r1, r1, r4, lsl #21
   13a18:	andeq	r1, r1, r4, lsr r9
   13a1c:	andeq	r0, r0, pc, asr fp
   13a20:	andeq	r1, r1, r8, lsl #16
   13a24:	andeq	r1, r1, ip, lsr #17
   13a28:	strdeq	r0, [r0], -r8
   13a2c:	andeq	r1, r1, r0, ror r8
   13a30:	ldrdeq	r1, [r1], -ip
   13a34:			; <UNDEFINED> instruction: 0x000117b8
   13a38:	andeq	r1, r1, r4, lsr #15
   13a3c:	andeq	r1, r1, ip, lsl #15
   13a40:	andeq	r1, r1, r8, ror #14
   13a44:	andeq	r0, r0, r2, ror #19
   13a48:	andeq	r1, r1, r0, lsr r7
   13a4c:	andeq	r1, r1, r0, lsr #14
   13a50:	andeq	r1, r1, r4, asr r8
   13a54:	andeq	r1, r1, r4, lsr r8
   13a58:	ldrdeq	r0, [r0], -r1
   13a5c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13a60:	mov	r7, r0
   13a64:	ldr	r6, [pc, #72]	; 13ab4 <getopt_long_only@@Base+0x57c>
   13a68:	ldr	r5, [pc, #72]	; 13ab8 <getopt_long_only@@Base+0x580>
   13a6c:	add	r6, pc, r6
   13a70:	add	r5, pc, r5
   13a74:	sub	r6, r6, r5
   13a78:	mov	r8, r1
   13a7c:	mov	r9, r2
   13a80:	bl	10e8c <Mat_VarGetNumberOfFields@plt-0x20>
   13a84:	asrs	r6, r6, #2
   13a88:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13a8c:	mov	r4, #0
   13a90:	add	r4, r4, #1
   13a94:	ldr	r3, [r5], #4
   13a98:	mov	r2, r9
   13a9c:	mov	r1, r8
   13aa0:	mov	r0, r7
   13aa4:	blx	r3
   13aa8:	cmp	r6, r4
   13aac:	bne	13a90 <getopt_long_only@@Base+0x558>
   13ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13ab4:	andeq	r1, r1, r4, ror r4
   13ab8:	andeq	r1, r1, ip, ror #8
   13abc:	bx	lr

Disassembly of section .fini:

00013ac0 <.fini>:
   13ac0:	push	{r3, lr}
   13ac4:	pop	{r3, pc}
