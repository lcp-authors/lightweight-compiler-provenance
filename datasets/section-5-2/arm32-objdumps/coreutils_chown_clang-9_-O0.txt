
../repos/coreutils/src/chown:     file format elf32-littlearm


Disassembly of section .init:

000111e0 <.init>:
   111e0:	push	{r3, lr}
   111e4:	bl	11594 <__assert_fail@plt+0x4c>
   111e8:	pop	{r3, pc}

Disassembly of section .plt:

000111ec <fstatfs64@plt-0x14>:
   111ec:	push	{lr}		; (str lr, [sp, #-4]!)
   111f0:	ldr	lr, [pc, #4]	; 111fc <fstatfs64@plt-0x4>
   111f4:	add	lr, pc, lr
   111f8:	ldr	pc, [lr, #8]!
   111fc:	andeq	r4, r2, r4, lsl #28

00011200 <fstatfs64@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #36, 20	; 0x24000
   11208:	ldr	pc, [ip, #3588]!	; 0xe04

0001120c <calloc@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #36, 20	; 0x24000
   11214:	ldr	pc, [ip, #3580]!	; 0xdfc

00011218 <endgrent@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #36, 20	; 0x24000
   11220:	ldr	pc, [ip, #3572]!	; 0xdf4

00011224 <fputs_unlocked@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #36, 20	; 0x24000
   1122c:	ldr	pc, [ip, #3564]!	; 0xdec

00011230 <raise@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #36, 20	; 0x24000
   11238:	ldr	pc, [ip, #3556]!	; 0xde4

0001123c <getpwnam@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #36, 20	; 0x24000
   11244:	ldr	pc, [ip, #3548]!	; 0xddc

00011248 <strcmp@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #36, 20	; 0x24000
   11250:	ldr	pc, [ip, #3540]!	; 0xdd4

00011254 <getpwuid@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #36, 20	; 0x24000
   1125c:	ldr	pc, [ip, #3532]!	; 0xdcc

00011260 <printf@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #36, 20	; 0x24000
   11268:	ldr	pc, [ip, #3524]!	; 0xdc4

0001126c <fflush@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #36, 20	; 0x24000
   11274:	ldr	pc, [ip, #3516]!	; 0xdbc

00011278 <memmove@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #36, 20	; 0x24000
   11280:	ldr	pc, [ip, #3508]!	; 0xdb4

00011284 <free@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #36, 20	; 0x24000
   1128c:	ldr	pc, [ip, #3500]!	; 0xdac

00011290 <_exit@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #36, 20	; 0x24000
   11298:	ldr	pc, [ip, #3492]!	; 0xda4

0001129c <memcpy@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #36, 20	; 0x24000
   112a4:	ldr	pc, [ip, #3484]!	; 0xd9c

000112a8 <mbsinit@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #36, 20	; 0x24000
   112b0:	ldr	pc, [ip, #3476]!	; 0xd94

000112b4 <memcmp@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #36, 20	; 0x24000
   112bc:	ldr	pc, [ip, #3468]!	; 0xd8c

000112c0 <stpcpy@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #36, 20	; 0x24000
   112c8:	ldr	pc, [ip, #3460]!	; 0xd84

000112cc <realloc@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #36, 20	; 0x24000
   112d4:	ldr	pc, [ip, #3452]!	; 0xd7c

000112d8 <textdomain@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #36, 20	; 0x24000
   112e0:	ldr	pc, [ip, #3444]!	; 0xd74

000112e4 <__fxstatat64@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #36, 20	; 0x24000
   112ec:	ldr	pc, [ip, #3436]!	; 0xd6c

000112f0 <iswprint@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #36, 20	; 0x24000
   112f8:	ldr	pc, [ip, #3428]!	; 0xd64

000112fc <__fxstat64@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #36, 20	; 0x24000
   11304:	ldr	pc, [ip, #3420]!	; 0xd5c

00011308 <lseek64@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #36, 20	; 0x24000
   11310:	ldr	pc, [ip, #3412]!	; 0xd54

00011314 <__ctype_get_mb_cur_max@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #36, 20	; 0x24000
   1131c:	ldr	pc, [ip, #3404]!	; 0xd4c

00011320 <__fpending@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #36, 20	; 0x24000
   11328:	ldr	pc, [ip, #3396]!	; 0xd44

0001132c <ferror_unlocked@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #36, 20	; 0x24000
   11334:	ldr	pc, [ip, #3388]!	; 0xd3c

00011338 <mbrtowc@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #36, 20	; 0x24000
   11340:	ldr	pc, [ip, #3380]!	; 0xd34

00011344 <error@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #36, 20	; 0x24000
   1134c:	ldr	pc, [ip, #3372]!	; 0xd2c

00011350 <open64@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #36, 20	; 0x24000
   11358:	ldr	pc, [ip, #3364]!	; 0xd24

0001135c <malloc@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #36, 20	; 0x24000
   11364:	ldr	pc, [ip, #3356]!	; 0xd1c

00011368 <__libc_start_main@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #36, 20	; 0x24000
   11370:	ldr	pc, [ip, #3348]!	; 0xd14

00011374 <__freading@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #36, 20	; 0x24000
   1137c:	ldr	pc, [ip, #3340]!	; 0xd0c

00011380 <__gmon_start__@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #36, 20	; 0x24000
   11388:	ldr	pc, [ip, #3332]!	; 0xd04

0001138c <getopt_long@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #36, 20	; 0x24000
   11394:	ldr	pc, [ip, #3324]!	; 0xcfc

00011398 <__ctype_b_loc@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #36, 20	; 0x24000
   113a0:	ldr	pc, [ip, #3316]!	; 0xcf4

000113a4 <exit@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #36, 20	; 0x24000
   113ac:	ldr	pc, [ip, #3308]!	; 0xcec

000113b0 <gettext@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #36, 20	; 0x24000
   113b8:	ldr	pc, [ip, #3300]!	; 0xce4

000113bc <strtoul@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #36, 20	; 0x24000
   113c4:	ldr	pc, [ip, #3292]!	; 0xcdc

000113c8 <strlen@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #36, 20	; 0x24000
   113d0:	ldr	pc, [ip, #3284]!	; 0xcd4

000113d4 <strchr@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #36, 20	; 0x24000
   113dc:	ldr	pc, [ip, #3276]!	; 0xccc

000113e0 <openat64@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #36, 20	; 0x24000
   113e8:	ldr	pc, [ip, #3268]!	; 0xcc4

000113ec <fchown@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #36, 20	; 0x24000
   113f4:	ldr	pc, [ip, #3260]!	; 0xcbc

000113f8 <fprintf@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #36, 20	; 0x24000
   11400:	ldr	pc, [ip, #3252]!	; 0xcb4

00011404 <__errno_location@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #36, 20	; 0x24000
   1140c:	ldr	pc, [ip, #3244]!	; 0xcac

00011410 <__cxa_atexit@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #36, 20	; 0x24000
   11418:	ldr	pc, [ip, #3236]!	; 0xca4

0001141c <memset@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #36, 20	; 0x24000
   11424:	ldr	pc, [ip, #3228]!	; 0xc9c

00011428 <fileno@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #36, 20	; 0x24000
   11430:	ldr	pc, [ip, #3220]!	; 0xc94

00011434 <fclose@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #36, 20	; 0x24000
   1143c:	ldr	pc, [ip, #3212]!	; 0xc8c

00011440 <fseeko64@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #36, 20	; 0x24000
   11448:	ldr	pc, [ip, #3204]!	; 0xc84

0001144c <fcntl64@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #36, 20	; 0x24000
   11454:	ldr	pc, [ip, #3196]!	; 0xc7c

00011458 <setlocale@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #36, 20	; 0x24000
   11460:	ldr	pc, [ip, #3188]!	; 0xc74

00011464 <endpwent@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #36, 20	; 0x24000
   1146c:	ldr	pc, [ip, #3180]!	; 0xc6c

00011470 <strrchr@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #36, 20	; 0x24000
   11478:	ldr	pc, [ip, #3172]!	; 0xc64

0001147c <nl_langinfo@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #36, 20	; 0x24000
   11484:	ldr	pc, [ip, #3164]!	; 0xc5c

00011488 <readdir64@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #36, 20	; 0x24000
   11490:	ldr	pc, [ip, #3156]!	; 0xc54

00011494 <fdopendir@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #36, 20	; 0x24000
   1149c:	ldr	pc, [ip, #3148]!	; 0xc4c

000114a0 <dirfd@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #36, 20	; 0x24000
   114a8:	ldr	pc, [ip, #3140]!	; 0xc44

000114ac <fchdir@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #36, 20	; 0x24000
   114b4:	ldr	pc, [ip, #3132]!	; 0xc3c

000114b8 <qsort@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #36, 20	; 0x24000
   114c0:	ldr	pc, [ip, #3124]!	; 0xc34

000114c4 <fchownat@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #36, 20	; 0x24000
   114cc:	ldr	pc, [ip, #3116]!	; 0xc2c

000114d0 <bindtextdomain@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #36, 20	; 0x24000
   114d8:	ldr	pc, [ip, #3108]!	; 0xc24

000114dc <__xstat64@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #36, 20	; 0x24000
   114e4:	ldr	pc, [ip, #3100]!	; 0xc1c

000114e8 <fputs@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #36, 20	; 0x24000
   114f0:	ldr	pc, [ip, #3092]!	; 0xc14

000114f4 <strncmp@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #36, 20	; 0x24000
   114fc:	ldr	pc, [ip, #3084]!	; 0xc0c

00011500 <abort@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #36, 20	; 0x24000
   11508:	ldr	pc, [ip, #3076]!	; 0xc04

0001150c <close@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #36, 20	; 0x24000
   11514:	ldr	pc, [ip, #3068]!	; 0xbfc

00011518 <__lxstat64@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #36, 20	; 0x24000
   11520:	ldr	pc, [ip, #3060]!	; 0xbf4

00011524 <closedir@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #36, 20	; 0x24000
   1152c:	ldr	pc, [ip, #3052]!	; 0xbec

00011530 <getgrgid@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #36, 20	; 0x24000
   11538:	ldr	pc, [ip, #3044]!	; 0xbe4

0001153c <getgrnam@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #36, 20	; 0x24000
   11544:	ldr	pc, [ip, #3036]!	; 0xbdc

00011548 <__assert_fail@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #36, 20	; 0x24000
   11550:	ldr	pc, [ip, #3028]!	; 0xbd4

Disassembly of section .text:

00011558 <.text>:
   11558:	mov	fp, #0
   1155c:	mov	lr, #0
   11560:	pop	{r1}		; (ldr r1, [sp], #4)
   11564:	mov	r2, sp
   11568:	push	{r2}		; (str r2, [sp, #-4]!)
   1156c:	push	{r0}		; (str r0, [sp, #-4]!)
   11570:	ldr	ip, [pc, #16]	; 11588 <__assert_fail@plt+0x40>
   11574:	push	{ip}		; (str ip, [sp, #-4]!)
   11578:	ldr	r0, [pc, #12]	; 1158c <__assert_fail@plt+0x44>
   1157c:	ldr	r3, [pc, #12]	; 11590 <__assert_fail@plt+0x48>
   11580:	bl	11368 <__libc_start_main@plt>
   11584:	bl	11500 <abort@plt>
   11588:	andeq	r4, r2, r8, lsr r7
   1158c:	andeq	r1, r1, ip, lsl #21
   11590:	ldrdeq	r4, [r2], -r8
   11594:	ldr	r3, [pc, #20]	; 115b0 <__assert_fail@plt+0x68>
   11598:	ldr	r2, [pc, #20]	; 115b4 <__assert_fail@plt+0x6c>
   1159c:	add	r3, pc, r3
   115a0:	ldr	r2, [r3, r2]
   115a4:	cmp	r2, #0
   115a8:	bxeq	lr
   115ac:	b	11380 <__gmon_start__@plt>
   115b0:	andeq	r4, r2, ip, asr sl
   115b4:	andeq	r0, r0, r8, lsr #2
   115b8:	ldr	r0, [pc, #24]	; 115d8 <__assert_fail@plt+0x90>
   115bc:	ldr	r3, [pc, #24]	; 115dc <__assert_fail@plt+0x94>
   115c0:	cmp	r3, r0
   115c4:	bxeq	lr
   115c8:	ldr	r3, [pc, #16]	; 115e0 <__assert_fail@plt+0x98>
   115cc:	cmp	r3, #0
   115d0:	bxeq	lr
   115d4:	bx	r3
   115d8:	andeq	r6, r3, r8, lsl #3
   115dc:	andeq	r6, r3, r8, lsl #3
   115e0:	andeq	r0, r0, r0
   115e4:	ldr	r0, [pc, #36]	; 11610 <__assert_fail@plt+0xc8>
   115e8:	ldr	r1, [pc, #36]	; 11614 <__assert_fail@plt+0xcc>
   115ec:	sub	r1, r1, r0
   115f0:	asr	r1, r1, #2
   115f4:	add	r1, r1, r1, lsr #31
   115f8:	asrs	r1, r1, #1
   115fc:	bxeq	lr
   11600:	ldr	r3, [pc, #16]	; 11618 <__assert_fail@plt+0xd0>
   11604:	cmp	r3, #0
   11608:	bxeq	lr
   1160c:	bx	r3
   11610:	andeq	r6, r3, r8, lsl #3
   11614:	andeq	r6, r3, r8, lsl #3
   11618:	andeq	r0, r0, r0
   1161c:	push	{r4, lr}
   11620:	ldr	r4, [pc, #24]	; 11640 <__assert_fail@plt+0xf8>
   11624:	ldrb	r3, [r4]
   11628:	cmp	r3, #0
   1162c:	popne	{r4, pc}
   11630:	bl	115b8 <__assert_fail@plt+0x70>
   11634:	mov	r3, #1
   11638:	strb	r3, [r4]
   1163c:	pop	{r4, pc}
   11640:	andeq	r6, r3, r4, lsr #3
   11644:	b	115e4 <__assert_fail@plt+0x9c>
   11648:	push	{fp, lr}
   1164c:	mov	fp, sp
   11650:	sub	sp, sp, #80	; 0x50
   11654:	str	r0, [fp, #-4]
   11658:	ldr	r0, [fp, #-4]
   1165c:	cmp	r0, #0
   11660:	beq	116ac <__assert_fail@plt+0x164>
   11664:	b	11668 <__assert_fail@plt+0x120>
   11668:	movw	r0, #24984	; 0x6198
   1166c:	movt	r0, #3
   11670:	ldr	r0, [r0]
   11674:	movw	r1, #18360	; 0x47b8
   11678:	movt	r1, #2
   1167c:	str	r0, [fp, #-8]
   11680:	mov	r0, r1
   11684:	bl	113b0 <gettext@plt>
   11688:	movw	r1, #25032	; 0x61c8
   1168c:	movt	r1, #3
   11690:	ldr	r2, [r1]
   11694:	ldr	r1, [fp, #-8]
   11698:	str	r0, [fp, #-12]
   1169c:	mov	r0, r1
   116a0:	ldr	r1, [fp, #-12]
   116a4:	bl	113f8 <fprintf@plt>
   116a8:	b	118d8 <__assert_fail@plt+0x390>
   116ac:	movw	r0, #18399	; 0x47df
   116b0:	movt	r0, #2
   116b4:	bl	113b0 <gettext@plt>
   116b8:	movw	r1, #25032	; 0x61c8
   116bc:	movt	r1, #3
   116c0:	ldr	r2, [r1]
   116c4:	ldr	r1, [r1]
   116c8:	str	r1, [fp, #-16]
   116cc:	mov	r1, r2
   116d0:	ldr	r2, [fp, #-16]
   116d4:	bl	11260 <printf@plt>
   116d8:	movw	r1, #18496	; 0x4840
   116dc:	movt	r1, #2
   116e0:	str	r0, [fp, #-20]	; 0xffffffec
   116e4:	mov	r0, r1
   116e8:	bl	113b0 <gettext@plt>
   116ec:	movw	r1, #24988	; 0x619c
   116f0:	movt	r1, #3
   116f4:	ldr	r1, [r1]
   116f8:	bl	11224 <fputs_unlocked@plt>
   116fc:	movw	r1, #18641	; 0x48d1
   11700:	movt	r1, #2
   11704:	str	r0, [fp, #-24]	; 0xffffffe8
   11708:	mov	r0, r1
   1170c:	bl	113b0 <gettext@plt>
   11710:	movw	r1, #24988	; 0x619c
   11714:	movt	r1, #3
   11718:	ldr	r1, [r1]
   1171c:	bl	11224 <fputs_unlocked@plt>
   11720:	movw	r1, #18842	; 0x499a
   11724:	movt	r1, #2
   11728:	str	r0, [fp, #-28]	; 0xffffffe4
   1172c:	mov	r0, r1
   11730:	bl	113b0 <gettext@plt>
   11734:	movw	r1, #24988	; 0x619c
   11738:	movt	r1, #3
   1173c:	ldr	r1, [r1]
   11740:	bl	11224 <fputs_unlocked@plt>
   11744:	movw	r1, #19073	; 0x4a81
   11748:	movt	r1, #2
   1174c:	str	r0, [fp, #-32]	; 0xffffffe0
   11750:	mov	r0, r1
   11754:	bl	113b0 <gettext@plt>
   11758:	movw	r1, #24988	; 0x619c
   1175c:	movt	r1, #3
   11760:	ldr	r1, [r1]
   11764:	bl	11224 <fputs_unlocked@plt>
   11768:	movw	r1, #19192	; 0x4af8
   1176c:	movt	r1, #2
   11770:	str	r0, [fp, #-36]	; 0xffffffdc
   11774:	mov	r0, r1
   11778:	bl	113b0 <gettext@plt>
   1177c:	movw	r1, #24988	; 0x619c
   11780:	movt	r1, #3
   11784:	ldr	r1, [r1]
   11788:	bl	11224 <fputs_unlocked@plt>
   1178c:	movw	r1, #19532	; 0x4c4c
   11790:	movt	r1, #2
   11794:	str	r0, [sp, #40]	; 0x28
   11798:	mov	r0, r1
   1179c:	bl	113b0 <gettext@plt>
   117a0:	movw	r1, #24988	; 0x619c
   117a4:	movt	r1, #3
   117a8:	ldr	r1, [r1]
   117ac:	bl	11224 <fputs_unlocked@plt>
   117b0:	movw	r1, #19660	; 0x4ccc
   117b4:	movt	r1, #2
   117b8:	str	r0, [sp, #36]	; 0x24
   117bc:	mov	r0, r1
   117c0:	bl	113b0 <gettext@plt>
   117c4:	movw	r1, #24988	; 0x619c
   117c8:	movt	r1, #3
   117cc:	ldr	r1, [r1]
   117d0:	bl	11224 <fputs_unlocked@plt>
   117d4:	movw	r1, #19781	; 0x4d45
   117d8:	movt	r1, #2
   117dc:	str	r0, [sp, #32]
   117e0:	mov	r0, r1
   117e4:	bl	113b0 <gettext@plt>
   117e8:	movw	r1, #24988	; 0x619c
   117ec:	movt	r1, #3
   117f0:	ldr	r1, [r1]
   117f4:	bl	11224 <fputs_unlocked@plt>
   117f8:	movw	r1, #19852	; 0x4d8c
   117fc:	movt	r1, #2
   11800:	str	r0, [sp, #28]
   11804:	mov	r0, r1
   11808:	bl	113b0 <gettext@plt>
   1180c:	movw	r1, #24988	; 0x619c
   11810:	movt	r1, #3
   11814:	ldr	r1, [r1]
   11818:	bl	11224 <fputs_unlocked@plt>
   1181c:	movw	r1, #20317	; 0x4f5d
   11820:	movt	r1, #2
   11824:	str	r0, [sp, #24]
   11828:	mov	r0, r1
   1182c:	bl	113b0 <gettext@plt>
   11830:	movw	r1, #24988	; 0x619c
   11834:	movt	r1, #3
   11838:	ldr	r1, [r1]
   1183c:	bl	11224 <fputs_unlocked@plt>
   11840:	movw	r1, #20362	; 0x4f8a
   11844:	movt	r1, #2
   11848:	str	r0, [sp, #20]
   1184c:	mov	r0, r1
   11850:	bl	113b0 <gettext@plt>
   11854:	movw	r1, #24988	; 0x619c
   11858:	movt	r1, #3
   1185c:	ldr	r1, [r1]
   11860:	bl	11224 <fputs_unlocked@plt>
   11864:	movw	r1, #20416	; 0x4fc0
   11868:	movt	r1, #2
   1186c:	str	r0, [sp, #16]
   11870:	mov	r0, r1
   11874:	bl	113b0 <gettext@plt>
   11878:	movw	r1, #24988	; 0x619c
   1187c:	movt	r1, #3
   11880:	ldr	r1, [r1]
   11884:	bl	11224 <fputs_unlocked@plt>
   11888:	movw	r1, #20608	; 0x5080
   1188c:	movt	r1, #2
   11890:	str	r0, [sp, #12]
   11894:	mov	r0, r1
   11898:	bl	113b0 <gettext@plt>
   1189c:	movw	r1, #25032	; 0x61c8
   118a0:	movt	r1, #3
   118a4:	ldr	r2, [r1]
   118a8:	ldr	r3, [r1]
   118ac:	ldr	r1, [r1]
   118b0:	str	r1, [sp, #8]
   118b4:	mov	r1, r2
   118b8:	mov	r2, r3
   118bc:	ldr	r3, [sp, #8]
   118c0:	bl	11260 <printf@plt>
   118c4:	movw	r1, #20809	; 0x5149
   118c8:	movt	r1, #2
   118cc:	str	r0, [sp, #4]
   118d0:	mov	r0, r1
   118d4:	bl	118e0 <__assert_fail@plt+0x398>
   118d8:	ldr	r0, [fp, #-4]
   118dc:	bl	113a4 <exit@plt>
   118e0:	push	{fp, lr}
   118e4:	mov	fp, sp
   118e8:	sub	sp, sp, #88	; 0x58
   118ec:	add	r1, sp, #28
   118f0:	movw	r2, #21636	; 0x5484
   118f4:	movt	r2, #2
   118f8:	str	r0, [fp, #-4]
   118fc:	mov	r0, r1
   11900:	str	r1, [sp, #12]
   11904:	mov	r1, r2
   11908:	movw	r2, #56	; 0x38
   1190c:	bl	1129c <memcpy@plt>
   11910:	ldr	r0, [fp, #-4]
   11914:	str	r0, [sp, #24]
   11918:	ldr	r0, [sp, #12]
   1191c:	str	r0, [sp, #20]
   11920:	ldr	r0, [sp, #20]
   11924:	ldr	r0, [r0]
   11928:	movw	r1, #0
   1192c:	cmp	r0, r1
   11930:	movw	r0, #0
   11934:	str	r0, [sp, #8]
   11938:	beq	11964 <__assert_fail@plt+0x41c>
   1193c:	ldr	r0, [fp, #-4]
   11940:	ldr	r1, [sp, #20]
   11944:	ldr	r1, [r1]
   11948:	bl	11248 <strcmp@plt>
   1194c:	cmp	r0, #0
   11950:	movw	r0, #0
   11954:	moveq	r0, #1
   11958:	mvn	r1, #0
   1195c:	eor	r0, r0, r1
   11960:	str	r0, [sp, #8]
   11964:	ldr	r0, [sp, #8]
   11968:	tst	r0, #1
   1196c:	beq	11980 <__assert_fail@plt+0x438>
   11970:	ldr	r0, [sp, #20]
   11974:	add	r0, r0, #8
   11978:	str	r0, [sp, #20]
   1197c:	b	11920 <__assert_fail@plt+0x3d8>
   11980:	ldr	r0, [sp, #20]
   11984:	ldr	r0, [r0, #4]
   11988:	movw	r1, #0
   1198c:	cmp	r0, r1
   11990:	beq	119a0 <__assert_fail@plt+0x458>
   11994:	ldr	r0, [sp, #20]
   11998:	ldr	r0, [r0, #4]
   1199c:	str	r0, [sp, #24]
   119a0:	movw	r0, #21107	; 0x5273
   119a4:	movt	r0, #2
   119a8:	bl	113b0 <gettext@plt>
   119ac:	movw	r1, #20855	; 0x5177
   119b0:	movt	r1, #2
   119b4:	movw	r2, #21130	; 0x528a
   119b8:	movt	r2, #2
   119bc:	bl	11260 <printf@plt>
   119c0:	movw	r1, #5
   119c4:	str	r0, [sp, #4]
   119c8:	mov	r0, r1
   119cc:	movw	r1, #0
   119d0:	bl	11458 <setlocale@plt>
   119d4:	str	r0, [sp, #16]
   119d8:	ldr	r0, [sp, #16]
   119dc:	movw	r1, #0
   119e0:	cmp	r0, r1
   119e4:	beq	11a20 <__assert_fail@plt+0x4d8>
   119e8:	ldr	r0, [sp, #16]
   119ec:	movw	r1, #21170	; 0x52b2
   119f0:	movt	r1, #2
   119f4:	movw	r2, #3
   119f8:	bl	114f4 <strncmp@plt>
   119fc:	cmp	r0, #0
   11a00:	beq	11a20 <__assert_fail@plt+0x4d8>
   11a04:	movw	r0, #21174	; 0x52b6
   11a08:	movt	r0, #2
   11a0c:	bl	113b0 <gettext@plt>
   11a10:	movw	r1, #24988	; 0x619c
   11a14:	movt	r1, #3
   11a18:	ldr	r1, [r1]
   11a1c:	bl	11224 <fputs_unlocked@plt>
   11a20:	movw	r0, #21245	; 0x52fd
   11a24:	movt	r0, #2
   11a28:	bl	113b0 <gettext@plt>
   11a2c:	ldr	r2, [fp, #-4]
   11a30:	movw	r1, #21130	; 0x528a
   11a34:	movt	r1, #2
   11a38:	bl	11260 <printf@plt>
   11a3c:	movw	r1, #21272	; 0x5318
   11a40:	movt	r1, #2
   11a44:	str	r0, [sp]
   11a48:	mov	r0, r1
   11a4c:	bl	113b0 <gettext@plt>
   11a50:	ldr	r1, [sp, #24]
   11a54:	ldr	r2, [sp, #24]
   11a58:	ldr	r3, [fp, #-4]
   11a5c:	cmp	r2, r3
   11a60:	movw	r2, #0
   11a64:	moveq	r2, #1
   11a68:	tst	r2, #1
   11a6c:	movw	r2, #20316	; 0x4f5c
   11a70:	movt	r2, #2
   11a74:	movw	r3, #21040	; 0x5230
   11a78:	movt	r3, #2
   11a7c:	movne	r2, r3
   11a80:	bl	11260 <printf@plt>
   11a84:	mov	sp, fp
   11a88:	pop	{fp, pc}
   11a8c:	push	{r4, r5, fp, lr}
   11a90:	add	fp, sp, #8
   11a94:	sub	sp, sp, #288	; 0x120
   11a98:	movw	r2, #0
   11a9c:	str	r2, [fp, #-12]
   11aa0:	str	r0, [fp, #-16]
   11aa4:	str	r1, [fp, #-20]	; 0xffffffec
   11aa8:	movw	r0, #0
   11aac:	strb	r0, [fp, #-21]	; 0xffffffeb
   11ab0:	mvn	r0, #0
   11ab4:	str	r0, [fp, #-28]	; 0xffffffe4
   11ab8:	str	r0, [fp, #-32]	; 0xffffffe0
   11abc:	str	r0, [fp, #-36]	; 0xffffffdc
   11ac0:	str	r0, [fp, #-40]	; 0xffffffd8
   11ac4:	movw	r1, #16
   11ac8:	str	r1, [fp, #-44]	; 0xffffffd4
   11acc:	str	r0, [fp, #-48]	; 0xffffffd0
   11ad0:	ldr	r0, [fp, #-20]	; 0xffffffec
   11ad4:	ldr	r0, [r0]
   11ad8:	bl	19498 <__assert_fail@plt+0x7f50>
   11adc:	movw	r0, #6
   11ae0:	movw	r1, #20316	; 0x4f5c
   11ae4:	movt	r1, #2
   11ae8:	bl	11458 <setlocale@plt>
   11aec:	movw	r1, #20859	; 0x517b
   11af0:	movt	r1, #2
   11af4:	str	r0, [sp, #96]	; 0x60
   11af8:	mov	r0, r1
   11afc:	movw	r1, #20815	; 0x514f
   11b00:	movt	r1, #2
   11b04:	bl	114d0 <bindtextdomain@plt>
   11b08:	movw	r1, #20859	; 0x517b
   11b0c:	movt	r1, #2
   11b10:	str	r0, [sp, #92]	; 0x5c
   11b14:	mov	r0, r1
   11b18:	bl	112d8 <textdomain@plt>
   11b1c:	movw	r1, #14376	; 0x3828
   11b20:	movt	r1, #1
   11b24:	str	r0, [sp, #88]	; 0x58
   11b28:	mov	r0, r1
   11b2c:	bl	2473c <__assert_fail@plt+0x131f4>
   11b30:	sub	r1, fp, #72	; 0x48
   11b34:	str	r0, [sp, #84]	; 0x54
   11b38:	mov	r0, r1
   11b3c:	bl	121bc <__assert_fail@plt+0xc74>
   11b40:	ldr	r0, [fp, #-16]
   11b44:	ldr	r1, [fp, #-20]	; 0xffffffec
   11b48:	movw	r2, #20839	; 0x5167
   11b4c:	movt	r2, #2
   11b50:	movw	r3, #21412	; 0x53a4
   11b54:	movt	r3, #2
   11b58:	movw	ip, #0
   11b5c:	str	ip, [sp]
   11b60:	bl	1138c <getopt_long@plt>
   11b64:	str	r0, [fp, #-80]	; 0xffffffb0
   11b68:	cmn	r0, #1
   11b6c:	beq	11df8 <__assert_fail@plt+0x8b0>
   11b70:	ldr	r0, [fp, #-80]	; 0xffffffb0
   11b74:	cmn	r0, #3
   11b78:	str	r0, [sp, #80]	; 0x50
   11b7c:	beq	11d98 <__assert_fail@plt+0x850>
   11b80:	b	11b84 <__assert_fail@plt+0x63c>
   11b84:	ldr	r0, [sp, #80]	; 0x50
   11b88:	cmn	r0, #2
   11b8c:	beq	11d90 <__assert_fail@plt+0x848>
   11b90:	b	11b94 <__assert_fail@plt+0x64c>
   11b94:	ldr	r0, [sp, #80]	; 0x50
   11b98:	cmp	r0, #72	; 0x48
   11b9c:	beq	11c70 <__assert_fail@plt+0x728>
   11ba0:	b	11ba4 <__assert_fail@plt+0x65c>
   11ba4:	ldr	r0, [sp, #80]	; 0x50
   11ba8:	cmp	r0, #76	; 0x4c
   11bac:	beq	11c7c <__assert_fail@plt+0x734>
   11bb0:	b	11bb4 <__assert_fail@plt+0x66c>
   11bb4:	ldr	r0, [sp, #80]	; 0x50
   11bb8:	cmp	r0, #80	; 0x50
   11bbc:	beq	11c88 <__assert_fail@plt+0x740>
   11bc0:	b	11bc4 <__assert_fail@plt+0x67c>
   11bc4:	ldr	r0, [sp, #80]	; 0x50
   11bc8:	cmp	r0, #82	; 0x52
   11bcc:	beq	11d60 <__assert_fail@plt+0x818>
   11bd0:	b	11bd4 <__assert_fail@plt+0x68c>
   11bd4:	ldr	r0, [sp, #80]	; 0x50
   11bd8:	cmp	r0, #99	; 0x63
   11bdc:	beq	11d6c <__assert_fail@plt+0x824>
   11be0:	b	11be4 <__assert_fail@plt+0x69c>
   11be4:	ldr	r0, [sp, #80]	; 0x50
   11be8:	cmp	r0, #102	; 0x66
   11bec:	beq	11d78 <__assert_fail@plt+0x830>
   11bf0:	b	11bf4 <__assert_fail@plt+0x6ac>
   11bf4:	ldr	r0, [sp, #80]	; 0x50
   11bf8:	cmp	r0, #104	; 0x68
   11bfc:	beq	11c94 <__assert_fail@plt+0x74c>
   11c00:	b	11c04 <__assert_fail@plt+0x6bc>
   11c04:	ldr	r0, [sp, #80]	; 0x50
   11c08:	cmp	r0, #118	; 0x76
   11c0c:	beq	11d84 <__assert_fail@plt+0x83c>
   11c10:	b	11c14 <__assert_fail@plt+0x6cc>
   11c14:	ldr	r0, [sp, #80]	; 0x50
   11c18:	cmp	r0, #256	; 0x100
   11c1c:	beq	11ca0 <__assert_fail@plt+0x758>
   11c20:	b	11c24 <__assert_fail@plt+0x6dc>
   11c24:	movw	r0, #257	; 0x101
   11c28:	ldr	r1, [sp, #80]	; 0x50
   11c2c:	cmp	r1, r0
   11c30:	beq	11ce0 <__assert_fail@plt+0x798>
   11c34:	b	11c38 <__assert_fail@plt+0x6f0>
   11c38:	movw	r0, #258	; 0x102
   11c3c:	ldr	r1, [sp, #80]	; 0x50
   11c40:	cmp	r1, r0
   11c44:	beq	11cac <__assert_fail@plt+0x764>
   11c48:	b	11c4c <__assert_fail@plt+0x704>
   11c4c:	movw	r0, #259	; 0x103
   11c50:	ldr	r1, [sp, #80]	; 0x50
   11c54:	cmp	r1, r0
   11c58:	beq	11cb8 <__assert_fail@plt+0x770>
   11c5c:	b	11c60 <__assert_fail@plt+0x718>
   11c60:	ldr	r0, [sp, #80]	; 0x50
   11c64:	cmp	r0, #260	; 0x104
   11c68:	beq	11cc4 <__assert_fail@plt+0x77c>
   11c6c:	b	11dec <__assert_fail@plt+0x8a4>
   11c70:	movw	r0, #17
   11c74:	str	r0, [fp, #-44]	; 0xffffffd4
   11c78:	b	11df4 <__assert_fail@plt+0x8ac>
   11c7c:	movw	r0, #2
   11c80:	str	r0, [fp, #-44]	; 0xffffffd4
   11c84:	b	11df4 <__assert_fail@plt+0x8ac>
   11c88:	movw	r0, #16
   11c8c:	str	r0, [fp, #-44]	; 0xffffffd4
   11c90:	b	11df4 <__assert_fail@plt+0x8ac>
   11c94:	movw	r0, #0
   11c98:	str	r0, [fp, #-48]	; 0xffffffd0
   11c9c:	b	11df4 <__assert_fail@plt+0x8ac>
   11ca0:	movw	r0, #1
   11ca4:	str	r0, [fp, #-48]	; 0xffffffd0
   11ca8:	b	11df4 <__assert_fail@plt+0x8ac>
   11cac:	movw	r0, #0
   11cb0:	strb	r0, [fp, #-21]	; 0xffffffeb
   11cb4:	b	11df4 <__assert_fail@plt+0x8ac>
   11cb8:	movw	r0, #1
   11cbc:	strb	r0, [fp, #-21]	; 0xffffffeb
   11cc0:	b	11df4 <__assert_fail@plt+0x8ac>
   11cc4:	movw	r0, #24992	; 0x61a0
   11cc8:	movt	r0, #3
   11ccc:	ldr	r0, [r0]
   11cd0:	movw	r1, #25000	; 0x61a8
   11cd4:	movt	r1, #3
   11cd8:	str	r0, [r1]
   11cdc:	b	11df4 <__assert_fail@plt+0x8ac>
   11ce0:	movw	r0, #24992	; 0x61a0
   11ce4:	movt	r0, #3
   11ce8:	ldr	r0, [r0]
   11cec:	sub	r1, fp, #36	; 0x24
   11cf0:	sub	r2, fp, #40	; 0x28
   11cf4:	movw	r3, #0
   11cf8:	str	r3, [sp, #76]	; 0x4c
   11cfc:	ldr	ip, [sp, #76]	; 0x4c
   11d00:	str	ip, [sp]
   11d04:	bl	1bd14 <__assert_fail@plt+0xa7cc>
   11d08:	str	r0, [fp, #-84]	; 0xffffffac
   11d0c:	ldr	r0, [fp, #-84]	; 0xffffffac
   11d10:	movw	r1, #0
   11d14:	cmp	r0, r1
   11d18:	beq	11d5c <__assert_fail@plt+0x814>
   11d1c:	ldr	r3, [fp, #-84]	; 0xffffffac
   11d20:	movw	r0, #24992	; 0x61a0
   11d24:	movt	r0, #3
   11d28:	ldr	r0, [r0]
   11d2c:	str	r3, [sp, #72]	; 0x48
   11d30:	bl	1baf4 <__assert_fail@plt+0xa5ac>
   11d34:	movw	r1, #1
   11d38:	str	r0, [sp, #68]	; 0x44
   11d3c:	mov	r0, r1
   11d40:	movw	r1, #0
   11d44:	movw	r2, #20848	; 0x5170
   11d48:	movt	r2, #2
   11d4c:	ldr	r3, [sp, #72]	; 0x48
   11d50:	ldr	ip, [sp, #68]	; 0x44
   11d54:	str	ip, [sp]
   11d58:	bl	11344 <error@plt>
   11d5c:	b	11df4 <__assert_fail@plt+0x8ac>
   11d60:	movw	r0, #1
   11d64:	strb	r0, [fp, #-68]	; 0xffffffbc
   11d68:	b	11df4 <__assert_fail@plt+0x8ac>
   11d6c:	movw	r0, #1
   11d70:	str	r0, [fp, #-72]	; 0xffffffb8
   11d74:	b	11df4 <__assert_fail@plt+0x8ac>
   11d78:	movw	r0, #1
   11d7c:	strb	r0, [fp, #-59]	; 0xffffffc5
   11d80:	b	11df4 <__assert_fail@plt+0x8ac>
   11d84:	movw	r0, #0
   11d88:	str	r0, [fp, #-72]	; 0xffffffb8
   11d8c:	b	11df4 <__assert_fail@plt+0x8ac>
   11d90:	movw	r0, #0
   11d94:	bl	11648 <__assert_fail@plt+0x100>
   11d98:	movw	r0, #24988	; 0x619c
   11d9c:	movt	r0, #3
   11da0:	ldr	r0, [r0]
   11da4:	movw	r1, #24884	; 0x6134
   11da8:	movt	r1, #3
   11dac:	ldr	r3, [r1]
   11db0:	movw	r1, #20809	; 0x5149
   11db4:	movt	r1, #2
   11db8:	movw	r2, #20855	; 0x5177
   11dbc:	movt	r2, #2
   11dc0:	movw	ip, #20869	; 0x5185
   11dc4:	movt	ip, #2
   11dc8:	str	ip, [sp]
   11dcc:	movw	ip, #20885	; 0x5195
   11dd0:	movt	ip, #2
   11dd4:	str	ip, [sp, #4]
   11dd8:	movw	ip, #0
   11ddc:	str	ip, [sp, #8]
   11de0:	bl	1ca18 <__assert_fail@plt+0xb4d0>
   11de4:	movw	r0, #0
   11de8:	bl	113a4 <exit@plt>
   11dec:	movw	r0, #1
   11df0:	bl	11648 <__assert_fail@plt+0x100>
   11df4:	b	11b40 <__assert_fail@plt+0x5f8>
   11df8:	ldrb	r0, [fp, #-68]	; 0xffffffbc
   11dfc:	tst	r0, #1
   11e00:	beq	11e4c <__assert_fail@plt+0x904>
   11e04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11e08:	cmp	r0, #16
   11e0c:	bne	11e48 <__assert_fail@plt+0x900>
   11e10:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11e14:	cmp	r0, #1
   11e18:	bne	11e40 <__assert_fail@plt+0x8f8>
   11e1c:	movw	r0, #20898	; 0x51a2
   11e20:	movt	r0, #2
   11e24:	bl	113b0 <gettext@plt>
   11e28:	movw	r1, #1
   11e2c:	str	r0, [sp, #64]	; 0x40
   11e30:	mov	r0, r1
   11e34:	movw	r1, #0
   11e38:	ldr	r2, [sp, #64]	; 0x40
   11e3c:	bl	11344 <error@plt>
   11e40:	movw	r0, #0
   11e44:	str	r0, [fp, #-48]	; 0xffffffd0
   11e48:	b	11e54 <__assert_fail@plt+0x90c>
   11e4c:	movw	r0, #16
   11e50:	str	r0, [fp, #-44]	; 0xffffffd4
   11e54:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11e58:	cmp	r0, #0
   11e5c:	movw	r0, #0
   11e60:	movne	r0, #1
   11e64:	and	r0, r0, #1
   11e68:	strb	r0, [fp, #-60]	; 0xffffffc4
   11e6c:	ldr	r0, [fp, #-16]
   11e70:	movw	r1, #24976	; 0x6190
   11e74:	movt	r1, #3
   11e78:	ldr	r1, [r1]
   11e7c:	sub	r0, r0, r1
   11e80:	movw	r1, #25000	; 0x61a8
   11e84:	movt	r1, #3
   11e88:	ldr	r1, [r1]
   11e8c:	movw	r2, #0
   11e90:	cmp	r1, r2
   11e94:	movw	r1, #0
   11e98:	movne	r1, #1
   11e9c:	tst	r1, #1
   11ea0:	movw	r1, #1
   11ea4:	moveq	r1, #2
   11ea8:	cmp	r0, r1
   11eac:	bge	11f38 <__assert_fail@plt+0x9f0>
   11eb0:	ldr	r0, [fp, #-16]
   11eb4:	movw	r1, #24976	; 0x6190
   11eb8:	movt	r1, #3
   11ebc:	ldr	r1, [r1]
   11ec0:	cmp	r0, r1
   11ec4:	bgt	11eec <__assert_fail@plt+0x9a4>
   11ec8:	movw	r0, #20940	; 0x51cc
   11ecc:	movt	r0, #2
   11ed0:	bl	113b0 <gettext@plt>
   11ed4:	movw	r1, #0
   11ed8:	str	r0, [sp, #60]	; 0x3c
   11edc:	mov	r0, r1
   11ee0:	ldr	r2, [sp, #60]	; 0x3c
   11ee4:	bl	11344 <error@plt>
   11ee8:	b	11f30 <__assert_fail@plt+0x9e8>
   11eec:	movw	r0, #20956	; 0x51dc
   11ef0:	movt	r0, #2
   11ef4:	bl	113b0 <gettext@plt>
   11ef8:	ldr	r1, [fp, #-20]	; 0xffffffec
   11efc:	ldr	r2, [fp, #-16]
   11f00:	sub	r2, r2, #1
   11f04:	add	r1, r1, r2, lsl #2
   11f08:	ldr	r1, [r1]
   11f0c:	str	r0, [sp, #56]	; 0x38
   11f10:	mov	r0, r1
   11f14:	bl	1baf4 <__assert_fail@plt+0xa5ac>
   11f18:	movw	r1, #0
   11f1c:	str	r0, [sp, #52]	; 0x34
   11f20:	mov	r0, r1
   11f24:	ldr	r2, [sp, #56]	; 0x38
   11f28:	ldr	r3, [sp, #52]	; 0x34
   11f2c:	bl	11344 <error@plt>
   11f30:	movw	r0, #1
   11f34:	bl	11648 <__assert_fail@plt+0x100>
   11f38:	movw	r0, #25000	; 0x61a8
   11f3c:	movt	r0, #3
   11f40:	ldr	r0, [r0]
   11f44:	movw	r1, #0
   11f48:	cmp	r0, r1
   11f4c:	beq	11fe8 <__assert_fail@plt+0xaa0>
   11f50:	movw	r0, #25000	; 0x61a8
   11f54:	movt	r0, #3
   11f58:	ldr	r0, [r0]
   11f5c:	add	r1, sp, #104	; 0x68
   11f60:	bl	24754 <__assert_fail@plt+0x1320c>
   11f64:	cmp	r0, #0
   11f68:	beq	11fbc <__assert_fail@plt+0xa74>
   11f6c:	bl	11404 <__errno_location@plt>
   11f70:	ldr	r1, [r0]
   11f74:	movw	r0, #20981	; 0x51f5
   11f78:	movt	r0, #2
   11f7c:	str	r1, [sp, #48]	; 0x30
   11f80:	bl	113b0 <gettext@plt>
   11f84:	movw	r1, #25000	; 0x61a8
   11f88:	movt	r1, #3
   11f8c:	ldr	r1, [r1]
   11f90:	movw	r2, #4
   11f94:	str	r0, [sp, #44]	; 0x2c
   11f98:	mov	r0, r2
   11f9c:	bl	1b75c <__assert_fail@plt+0xa214>
   11fa0:	movw	r1, #1
   11fa4:	str	r0, [sp, #40]	; 0x28
   11fa8:	mov	r0, r1
   11fac:	ldr	r1, [sp, #48]	; 0x30
   11fb0:	ldr	r2, [sp, #44]	; 0x2c
   11fb4:	ldr	r3, [sp, #40]	; 0x28
   11fb8:	bl	11344 <error@plt>
   11fbc:	ldr	r0, [sp, #128]	; 0x80
   11fc0:	str	r0, [fp, #-28]	; 0xffffffe4
   11fc4:	ldr	r0, [sp, #132]	; 0x84
   11fc8:	str	r0, [fp, #-32]	; 0xffffffe0
   11fcc:	ldr	r0, [sp, #128]	; 0x80
   11fd0:	bl	122a4 <__assert_fail@plt+0xd5c>
   11fd4:	str	r0, [fp, #-56]	; 0xffffffc8
   11fd8:	ldr	r0, [sp, #132]	; 0x84
   11fdc:	bl	12244 <__assert_fail@plt+0xcfc>
   11fe0:	str	r0, [fp, #-52]	; 0xffffffcc
   11fe4:	b	120cc <__assert_fail@plt+0xb84>
   11fe8:	ldr	r0, [fp, #-20]	; 0xffffffec
   11fec:	movw	r1, #24976	; 0x6190
   11ff0:	movt	r1, #3
   11ff4:	ldr	r1, [r1]
   11ff8:	add	r0, r0, r1, lsl #2
   11ffc:	ldr	r0, [r0]
   12000:	sub	r1, fp, #72	; 0x48
   12004:	add	r3, r1, #16
   12008:	add	r1, r1, #20
   1200c:	sub	r2, fp, #28
   12010:	str	r1, [sp, #36]	; 0x24
   12014:	mov	r1, r2
   12018:	sub	r2, fp, #32
   1201c:	ldr	ip, [sp, #36]	; 0x24
   12020:	str	ip, [sp]
   12024:	bl	1bd14 <__assert_fail@plt+0xa7cc>
   12028:	str	r0, [sp, #100]	; 0x64
   1202c:	ldr	r0, [sp, #100]	; 0x64
   12030:	movw	r1, #0
   12034:	cmp	r0, r1
   12038:	beq	12088 <__assert_fail@plt+0xb40>
   1203c:	ldr	r3, [sp, #100]	; 0x64
   12040:	ldr	r0, [fp, #-20]	; 0xffffffec
   12044:	movw	r1, #24976	; 0x6190
   12048:	movt	r1, #3
   1204c:	ldr	r1, [r1]
   12050:	add	r0, r0, r1, lsl #2
   12054:	ldr	r0, [r0]
   12058:	str	r3, [sp, #32]
   1205c:	bl	1baf4 <__assert_fail@plt+0xa5ac>
   12060:	movw	r1, #1
   12064:	str	r0, [sp, #28]
   12068:	mov	r0, r1
   1206c:	movw	r1, #0
   12070:	movw	r2, #20848	; 0x5170
   12074:	movt	r2, #2
   12078:	ldr	r3, [sp, #32]
   1207c:	ldr	ip, [sp, #28]
   12080:	str	ip, [sp]
   12084:	bl	11344 <error@plt>
   12088:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1208c:	movw	r1, #0
   12090:	cmp	r0, r1
   12094:	bne	120b8 <__assert_fail@plt+0xb70>
   12098:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1209c:	movw	r1, #0
   120a0:	cmp	r0, r1
   120a4:	beq	120b8 <__assert_fail@plt+0xb70>
   120a8:	movw	r0, #20316	; 0x4f5c
   120ac:	movt	r0, #2
   120b0:	bl	1f8a0 <__assert_fail@plt+0xe358>
   120b4:	str	r0, [fp, #-56]	; 0xffffffc8
   120b8:	movw	r0, #24976	; 0x6190
   120bc:	movt	r0, #3
   120c0:	ldr	r1, [r0]
   120c4:	add	r1, r1, #1
   120c8:	str	r1, [r0]
   120cc:	ldrb	r0, [fp, #-68]	; 0xffffffbc
   120d0:	tst	r0, #1
   120d4:	beq	12154 <__assert_fail@plt+0xc0c>
   120d8:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   120dc:	tst	r0, #1
   120e0:	beq	12154 <__assert_fail@plt+0xc0c>
   120e4:	movw	r0, #25008	; 0x61b0
   120e8:	movt	r0, #3
   120ec:	bl	1bc2c <__assert_fail@plt+0xa6e4>
   120f0:	str	r0, [fp, #-64]	; 0xffffffc0
   120f4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   120f8:	movw	r1, #0
   120fc:	cmp	r0, r1
   12100:	bne	12150 <__assert_fail@plt+0xc08>
   12104:	bl	11404 <__errno_location@plt>
   12108:	ldr	r1, [r0]
   1210c:	movw	r0, #20981	; 0x51f5
   12110:	movt	r0, #2
   12114:	str	r1, [sp, #24]
   12118:	bl	113b0 <gettext@plt>
   1211c:	movw	r1, #4
   12120:	str	r0, [sp, #20]
   12124:	mov	r0, r1
   12128:	movw	r1, #23819	; 0x5d0b
   1212c:	movt	r1, #2
   12130:	bl	1b75c <__assert_fail@plt+0xa214>
   12134:	movw	r1, #1
   12138:	str	r0, [sp, #16]
   1213c:	mov	r0, r1
   12140:	ldr	r1, [sp, #24]
   12144:	ldr	r2, [sp, #20]
   12148:	ldr	r3, [sp, #16]
   1214c:	bl	11344 <error@plt>
   12150:	b	12154 <__assert_fail@plt+0xc0c>
   12154:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12158:	orr	r0, r0, #1024	; 0x400
   1215c:	str	r0, [fp, #-44]	; 0xffffffd4
   12160:	ldr	r0, [fp, #-20]	; 0xffffffec
   12164:	movw	r1, #24976	; 0x6190
   12168:	movt	r1, #3
   1216c:	ldr	r1, [r1]
   12170:	add	r0, r0, r1, lsl #2
   12174:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12178:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1217c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12180:	ldr	ip, [fp, #-36]	; 0xffffffdc
   12184:	ldr	lr, [fp, #-40]	; 0xffffffd8
   12188:	str	ip, [sp]
   1218c:	str	lr, [sp, #4]
   12190:	sub	ip, fp, #72	; 0x48
   12194:	str	ip, [sp, #8]
   12198:	bl	12304 <__assert_fail@plt+0xdbc>
   1219c:	and	r0, r0, #1
   121a0:	strb	r0, [fp, #-73]	; 0xffffffb7
   121a4:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   121a8:	tst	r0, #1
   121ac:	movw	r0, #0
   121b0:	moveq	r0, #1
   121b4:	sub	sp, fp, #8
   121b8:	pop	{r4, r5, fp, pc}
   121bc:	sub	sp, sp, #4
   121c0:	str	r0, [sp]
   121c4:	ldr	r0, [sp]
   121c8:	movw	r1, #2
   121cc:	str	r1, [r0]
   121d0:	ldr	r0, [sp]
   121d4:	movw	r1, #0
   121d8:	str	r1, [r0, #8]
   121dc:	ldr	r0, [sp]
   121e0:	movw	r2, #1
   121e4:	strb	r2, [r0, #12]
   121e8:	ldr	r0, [sp]
   121ec:	movw	r2, #0
   121f0:	strb	r2, [r0, #4]
   121f4:	ldr	r0, [sp]
   121f8:	strb	r2, [r0, #13]
   121fc:	ldr	r0, [sp]
   12200:	str	r1, [r0, #16]
   12204:	ldr	r0, [sp]
   12208:	str	r1, [r0, #20]
   1220c:	add	sp, sp, #4
   12210:	bx	lr
   12214:	push	{fp, lr}
   12218:	mov	fp, sp
   1221c:	sub	sp, sp, #8
   12220:	str	r0, [sp, #4]
   12224:	ldr	r0, [sp, #4]
   12228:	ldr	r0, [r0, #16]
   1222c:	bl	13948 <__assert_fail@plt+0x2400>
   12230:	ldr	r0, [sp, #4]
   12234:	ldr	r0, [r0, #20]
   12238:	bl	13948 <__assert_fail@plt+0x2400>
   1223c:	mov	sp, fp
   12240:	pop	{fp, pc}
   12244:	push	{fp, lr}
   12248:	mov	fp, sp
   1224c:	sub	sp, sp, #40	; 0x28
   12250:	str	r0, [fp, #-4]
   12254:	ldr	r0, [fp, #-4]
   12258:	bl	11530 <getgrgid@plt>
   1225c:	str	r0, [sp, #8]
   12260:	ldr	r0, [sp, #8]
   12264:	movw	r1, #0
   12268:	cmp	r0, r1
   1226c:	beq	12280 <__assert_fail@plt+0xd38>
   12270:	ldr	r0, [sp, #8]
   12274:	ldr	r0, [r0]
   12278:	str	r0, [sp, #4]
   1227c:	b	12294 <__assert_fail@plt+0xd4c>
   12280:	add	r2, sp, #15
   12284:	ldr	r0, [fp, #-4]
   12288:	mov	r1, #0
   1228c:	bl	1921c <__assert_fail@plt+0x7cd4>
   12290:	str	r0, [sp, #4]
   12294:	ldr	r0, [sp, #4]
   12298:	bl	1f8a0 <__assert_fail@plt+0xe358>
   1229c:	mov	sp, fp
   122a0:	pop	{fp, pc}
   122a4:	push	{fp, lr}
   122a8:	mov	fp, sp
   122ac:	sub	sp, sp, #40	; 0x28
   122b0:	str	r0, [fp, #-4]
   122b4:	ldr	r0, [fp, #-4]
   122b8:	bl	11254 <getpwuid@plt>
   122bc:	str	r0, [sp, #8]
   122c0:	ldr	r0, [sp, #8]
   122c4:	movw	r1, #0
   122c8:	cmp	r0, r1
   122cc:	beq	122e0 <__assert_fail@plt+0xd98>
   122d0:	ldr	r0, [sp, #8]
   122d4:	ldr	r0, [r0]
   122d8:	str	r0, [sp, #4]
   122dc:	b	122f4 <__assert_fail@plt+0xdac>
   122e0:	add	r2, sp, #15
   122e4:	ldr	r0, [fp, #-4]
   122e8:	mov	r1, #0
   122ec:	bl	1921c <__assert_fail@plt+0x7cd4>
   122f0:	str	r0, [sp, #4]
   122f4:	ldr	r0, [sp, #4]
   122f8:	bl	1f8a0 <__assert_fail@plt+0xe358>
   122fc:	mov	sp, fp
   12300:	pop	{fp, pc}
   12304:	push	{r4, sl, fp, lr}
   12308:	add	fp, sp, #8
   1230c:	sub	sp, sp, #72	; 0x48
   12310:	ldr	ip, [fp, #16]
   12314:	ldr	lr, [fp, #12]
   12318:	ldr	r4, [fp, #8]
   1231c:	str	r0, [fp, #-12]
   12320:	str	r1, [fp, #-16]
   12324:	str	r2, [fp, #-20]	; 0xffffffec
   12328:	str	r3, [fp, #-24]	; 0xffffffe8
   1232c:	movw	r0, #1
   12330:	strb	r0, [fp, #-25]	; 0xffffffe7
   12334:	ldr	r0, [fp, #8]
   12338:	cmn	r0, #1
   1233c:	movw	r0, #1
   12340:	str	r0, [sp, #36]	; 0x24
   12344:	bne	1238c <__assert_fail@plt+0xe44>
   12348:	ldr	r0, [fp, #12]
   1234c:	cmn	r0, #1
   12350:	movw	r0, #1
   12354:	str	r0, [sp, #36]	; 0x24
   12358:	bne	1238c <__assert_fail@plt+0xe44>
   1235c:	ldr	r0, [fp, #16]
   12360:	ldrb	r0, [r0, #12]
   12364:	tst	r0, #1
   12368:	movw	r0, #1
   1236c:	str	r0, [sp, #36]	; 0x24
   12370:	bne	1238c <__assert_fail@plt+0xe44>
   12374:	ldr	r0, [fp, #16]
   12378:	ldr	r0, [r0]
   1237c:	cmp	r0, #2
   12380:	movw	r0, #0
   12384:	movne	r0, #1
   12388:	str	r0, [sp, #36]	; 0x24
   1238c:	ldr	r0, [sp, #36]	; 0x24
   12390:	tst	r0, #1
   12394:	movw	r0, #0
   12398:	mov	r1, r0
   1239c:	moveq	r1, #8
   123a0:	str	r1, [fp, #-32]	; 0xffffffe0
   123a4:	ldr	r1, [fp, #-12]
   123a8:	ldr	r2, [fp, #-16]
   123ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   123b0:	orr	r2, r2, r3
   123b4:	str	r0, [sp, #32]
   123b8:	mov	r0, r1
   123bc:	mov	r1, r2
   123c0:	ldr	r2, [sp, #32]
   123c4:	bl	1f928 <__assert_fail@plt+0xe3e0>
   123c8:	str	r0, [fp, #-36]	; 0xffffffdc
   123cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   123d0:	bl	14a88 <__assert_fail@plt+0x3540>
   123d4:	str	r0, [sp, #40]	; 0x28
   123d8:	ldr	r0, [sp, #40]	; 0x28
   123dc:	movw	r1, #0
   123e0:	cmp	r0, r1
   123e4:	bne	12444 <__assert_fail@plt+0xefc>
   123e8:	bl	11404 <__errno_location@plt>
   123ec:	ldr	r0, [r0]
   123f0:	cmp	r0, #0
   123f4:	beq	12440 <__assert_fail@plt+0xef8>
   123f8:	ldr	r0, [fp, #16]
   123fc:	ldrb	r0, [r0, #13]
   12400:	tst	r0, #1
   12404:	bne	12438 <__assert_fail@plt+0xef0>
   12408:	bl	11404 <__errno_location@plt>
   1240c:	ldr	r1, [r0]
   12410:	movw	r0, #21692	; 0x54bc
   12414:	movt	r0, #2
   12418:	str	r1, [sp, #28]
   1241c:	bl	113b0 <gettext@plt>
   12420:	movw	r1, #0
   12424:	str	r0, [sp, #24]
   12428:	mov	r0, r1
   1242c:	ldr	r1, [sp, #28]
   12430:	ldr	r2, [sp, #24]
   12434:	bl	11344 <error@plt>
   12438:	movw	r0, #0
   1243c:	strb	r0, [fp, #-25]	; 0xffffffe7
   12440:	b	12498 <__assert_fail@plt+0xf50>
   12444:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12448:	ldr	r1, [sp, #40]	; 0x28
   1244c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12450:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12454:	ldr	ip, [fp, #8]
   12458:	ldr	lr, [fp, #12]
   1245c:	ldr	r4, [fp, #16]
   12460:	str	ip, [sp]
   12464:	str	lr, [sp, #4]
   12468:	str	r4, [sp, #8]
   1246c:	bl	124f0 <__assert_fail@plt+0xfa8>
   12470:	and	r0, r0, #1
   12474:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   12478:	and	r1, r1, #1
   1247c:	and	r0, r1, r0
   12480:	cmp	r0, #0
   12484:	movw	r0, #0
   12488:	movne	r0, #1
   1248c:	and	r0, r0, #1
   12490:	strb	r0, [fp, #-25]	; 0xffffffe7
   12494:	b	123cc <__assert_fail@plt+0xe84>
   12498:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1249c:	bl	147c8 <__assert_fail@plt+0x3280>
   124a0:	cmp	r0, #0
   124a4:	beq	124e0 <__assert_fail@plt+0xf98>
   124a8:	bl	11404 <__errno_location@plt>
   124ac:	ldr	r1, [r0]
   124b0:	movw	r0, #21708	; 0x54cc
   124b4:	movt	r0, #2
   124b8:	str	r1, [sp, #20]
   124bc:	bl	113b0 <gettext@plt>
   124c0:	movw	r1, #0
   124c4:	str	r0, [sp, #16]
   124c8:	mov	r0, r1
   124cc:	ldr	r1, [sp, #20]
   124d0:	ldr	r2, [sp, #16]
   124d4:	bl	11344 <error@plt>
   124d8:	movw	r0, #0
   124dc:	strb	r0, [fp, #-25]	; 0xffffffe7
   124e0:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   124e4:	and	r0, r0, #1
   124e8:	sub	sp, fp, #8
   124ec:	pop	{r4, sl, fp, pc}
   124f0:	push	{r4, r5, r6, r7, fp, lr}
   124f4:	add	fp, sp, #16
   124f8:	sub	sp, sp, #344	; 0x158
   124fc:	ldr	ip, [fp, #16]
   12500:	ldr	lr, [fp, #12]
   12504:	ldr	r4, [fp, #8]
   12508:	str	r0, [fp, #-24]	; 0xffffffe8
   1250c:	str	r1, [fp, #-28]	; 0xffffffe4
   12510:	str	r2, [fp, #-32]	; 0xffffffe0
   12514:	str	r3, [fp, #-36]	; 0xffffffdc
   12518:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1251c:	ldr	r0, [r0, #28]
   12520:	str	r0, [fp, #-40]	; 0xffffffd8
   12524:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12528:	ldr	r0, [r0, #24]
   1252c:	str	r0, [fp, #-44]	; 0xffffffd4
   12530:	mov	r0, #1
   12534:	strb	r0, [fp, #-153]	; 0xffffff67
   12538:	strb	r0, [fp, #-155]	; 0xffffff65
   1253c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12540:	ldrh	r0, [r0, #56]	; 0x38
   12544:	sub	r0, r0, #1
   12548:	cmp	r0, #9
   1254c:	str	r0, [sp, #180]	; 0xb4
   12550:	bhi	12938 <__assert_fail@plt+0x13f0>
   12554:	add	r0, pc, #8
   12558:	ldr	r1, [sp, #180]	; 0xb4
   1255c:	ldr	r0, [r0, r1, lsl #2]
   12560:	mov	pc, r0
   12564:	andeq	r2, r1, ip, lsl #11
   12568:	ldrdeq	r2, [r1], -r0
   1256c:	andeq	r2, r1, r8, lsr r9
   12570:	andeq	r2, r1, ip, ror #16
   12574:	andeq	r2, r1, r8, lsr r9
   12578:	andeq	r2, r1, r4, lsr r7
   1257c:	andeq	r2, r1, r0, lsl r8
   12580:	andeq	r2, r1, r8, lsr r9
   12584:	andeq	r2, r1, r8, lsr r9
   12588:	andeq	r2, r1, r8, asr r7
   1258c:	ldr	r0, [fp, #16]
   12590:	ldrb	r0, [r0, #4]
   12594:	tst	r0, #1
   12598:	beq	12730 <__assert_fail@plt+0x11e8>
   1259c:	ldr	r0, [fp, #16]
   125a0:	ldr	r0, [r0, #8]
   125a4:	movw	r1, #0
   125a8:	cmp	r0, r1
   125ac:	beq	12720 <__assert_fail@plt+0x11d8>
   125b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   125b4:	ldr	r1, [r0, #160]	; 0xa0
   125b8:	ldr	r0, [r0, #164]	; 0xa4
   125bc:	ldr	r2, [fp, #16]
   125c0:	ldr	r2, [r2, #8]
   125c4:	ldr	r3, [r2]
   125c8:	ldr	r2, [r2, #4]
   125cc:	eor	r0, r0, r2
   125d0:	eor	r1, r1, r3
   125d4:	orr	r0, r1, r0
   125d8:	cmp	r0, #0
   125dc:	bne	12720 <__assert_fail@plt+0x11d8>
   125e0:	b	125e4 <__assert_fail@plt+0x109c>
   125e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   125e8:	ldr	r1, [r0, #64]	; 0x40
   125ec:	ldr	r0, [r0, #68]	; 0x44
   125f0:	ldr	r2, [fp, #16]
   125f4:	ldr	r2, [r2, #8]
   125f8:	ldr	r3, [r2, #8]
   125fc:	ldr	r2, [r2, #12]
   12600:	eor	r0, r0, r2
   12604:	eor	r1, r1, r3
   12608:	orr	r0, r1, r0
   1260c:	cmp	r0, #0
   12610:	bne	12720 <__assert_fail@plt+0x11d8>
   12614:	b	12618 <__assert_fail@plt+0x10d0>
   12618:	b	1261c <__assert_fail@plt+0x10d4>
   1261c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12620:	movw	r1, #23819	; 0x5d0b
   12624:	movt	r1, #2
   12628:	bl	11248 <strcmp@plt>
   1262c:	cmp	r0, #0
   12630:	bne	12670 <__assert_fail@plt+0x1128>
   12634:	movw	r0, #21725	; 0x54dd
   12638:	movt	r0, #2
   1263c:	bl	113b0 <gettext@plt>
   12640:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12644:	movw	r2, #4
   12648:	str	r0, [sp, #176]	; 0xb0
   1264c:	mov	r0, r2
   12650:	bl	1b75c <__assert_fail@plt+0xa214>
   12654:	movw	r1, #0
   12658:	str	r0, [sp, #172]	; 0xac
   1265c:	mov	r0, r1
   12660:	ldr	r2, [sp, #176]	; 0xb0
   12664:	ldr	r3, [sp, #172]	; 0xac
   12668:	bl	11344 <error@plt>
   1266c:	b	126d0 <__assert_fail@plt+0x1188>
   12670:	movw	r0, #21770	; 0x550a
   12674:	movt	r0, #2
   12678:	bl	113b0 <gettext@plt>
   1267c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12680:	movw	r1, #0
   12684:	str	r0, [sp, #168]	; 0xa8
   12688:	mov	r0, r1
   1268c:	movw	r1, #4
   12690:	bl	1b688 <__assert_fail@plt+0xa140>
   12694:	movw	r1, #1
   12698:	str	r0, [sp, #164]	; 0xa4
   1269c:	mov	r0, r1
   126a0:	movw	r1, #4
   126a4:	movw	r2, #23819	; 0x5d0b
   126a8:	movt	r2, #2
   126ac:	bl	1b688 <__assert_fail@plt+0xa140>
   126b0:	movw	r1, #0
   126b4:	str	r0, [sp, #160]	; 0xa0
   126b8:	mov	r0, r1
   126bc:	ldr	r2, [sp, #168]	; 0xa8
   126c0:	ldr	r3, [sp, #164]	; 0xa4
   126c4:	ldr	ip, [sp, #160]	; 0xa0
   126c8:	str	ip, [sp]
   126cc:	bl	11344 <error@plt>
   126d0:	movw	r0, #21828	; 0x5544
   126d4:	movt	r0, #2
   126d8:	bl	113b0 <gettext@plt>
   126dc:	movw	r1, #0
   126e0:	str	r0, [sp, #156]	; 0x9c
   126e4:	mov	r0, r1
   126e8:	ldr	r2, [sp, #156]	; 0x9c
   126ec:	bl	11344 <error@plt>
   126f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   126f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   126f8:	movw	r2, #4
   126fc:	bl	169ac <__assert_fail@plt+0x5464>
   12700:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12704:	str	r0, [sp, #152]	; 0x98
   12708:	mov	r0, r1
   1270c:	bl	14a88 <__assert_fail@plt+0x3540>
   12710:	movw	r1, #0
   12714:	and	r1, r1, #1
   12718:	strb	r1, [fp, #-17]	; 0xffffffef
   1271c:	b	130a4 <__assert_fail@plt+0x1b5c>
   12720:	movw	r0, #1
   12724:	and	r0, r0, #1
   12728:	strb	r0, [fp, #-17]	; 0xffffffef
   1272c:	b	130a4 <__assert_fail@plt+0x1b5c>
   12730:	b	1293c <__assert_fail@plt+0x13f4>
   12734:	ldr	r0, [fp, #16]
   12738:	ldrb	r0, [r0, #4]
   1273c:	tst	r0, #1
   12740:	bne	12754 <__assert_fail@plt+0x120c>
   12744:	movw	r0, #1
   12748:	and	r0, r0, #1
   1274c:	strb	r0, [fp, #-17]	; 0xffffffef
   12750:	b	130a4 <__assert_fail@plt+0x1b5c>
   12754:	b	1293c <__assert_fail@plt+0x13f4>
   12758:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1275c:	ldr	r0, [r0, #48]	; 0x30
   12760:	cmp	r0, #0
   12764:	bne	127ac <__assert_fail@plt+0x1264>
   12768:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1276c:	ldr	r0, [r0, #16]
   12770:	cmp	r0, #0
   12774:	bne	127ac <__assert_fail@plt+0x1264>
   12778:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1277c:	movw	r1, #1
   12780:	str	r1, [r0, #16]
   12784:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12788:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1278c:	str	r1, [sp, #148]	; 0x94
   12790:	mov	r1, r2
   12794:	ldr	r2, [sp, #148]	; 0x94
   12798:	bl	169ac <__assert_fail@plt+0x5464>
   1279c:	movw	r1, #1
   127a0:	and	r1, r1, #1
   127a4:	strb	r1, [fp, #-17]	; 0xffffffef
   127a8:	b	130a4 <__assert_fail@plt+0x1b5c>
   127ac:	ldr	r0, [fp, #16]
   127b0:	ldrb	r0, [r0, #13]
   127b4:	tst	r0, #1
   127b8:	bne	12804 <__assert_fail@plt+0x12bc>
   127bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   127c0:	ldr	r1, [r0, #32]
   127c4:	movw	r0, #21877	; 0x5575
   127c8:	movt	r0, #2
   127cc:	str	r1, [sp, #144]	; 0x90
   127d0:	bl	113b0 <gettext@plt>
   127d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   127d8:	movw	r2, #4
   127dc:	str	r0, [sp, #140]	; 0x8c
   127e0:	mov	r0, r2
   127e4:	bl	1b75c <__assert_fail@plt+0xa214>
   127e8:	movw	r1, #0
   127ec:	str	r0, [sp, #136]	; 0x88
   127f0:	mov	r0, r1
   127f4:	ldr	r1, [sp, #144]	; 0x90
   127f8:	ldr	r2, [sp, #140]	; 0x8c
   127fc:	ldr	r3, [sp, #136]	; 0x88
   12800:	bl	11344 <error@plt>
   12804:	movw	r0, #0
   12808:	strb	r0, [fp, #-153]	; 0xffffff67
   1280c:	b	1293c <__assert_fail@plt+0x13f4>
   12810:	ldr	r0, [fp, #16]
   12814:	ldrb	r0, [r0, #13]
   12818:	tst	r0, #1
   1281c:	bne	12860 <__assert_fail@plt+0x1318>
   12820:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12824:	ldr	r1, [r0, #32]
   12828:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1282c:	movw	r0, #0
   12830:	movw	r3, #3
   12834:	str	r1, [sp, #132]	; 0x84
   12838:	mov	r1, r3
   1283c:	bl	1b8b0 <__assert_fail@plt+0xa368>
   12840:	movw	r1, #0
   12844:	str	r0, [sp, #128]	; 0x80
   12848:	mov	r0, r1
   1284c:	ldr	r1, [sp, #132]	; 0x84
   12850:	movw	r2, #20852	; 0x5174
   12854:	movt	r2, #2
   12858:	ldr	r3, [sp, #128]	; 0x80
   1285c:	bl	11344 <error@plt>
   12860:	movw	r0, #0
   12864:	strb	r0, [fp, #-153]	; 0xffffff67
   12868:	b	1293c <__assert_fail@plt+0x13f4>
   1286c:	ldr	r0, [fp, #16]
   12870:	ldrb	r0, [r0, #13]
   12874:	tst	r0, #1
   12878:	bne	128c4 <__assert_fail@plt+0x137c>
   1287c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12880:	ldr	r1, [r0, #32]
   12884:	movw	r0, #21894	; 0x5586
   12888:	movt	r0, #2
   1288c:	str	r1, [sp, #124]	; 0x7c
   12890:	bl	113b0 <gettext@plt>
   12894:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12898:	movw	r2, #4
   1289c:	str	r0, [sp, #120]	; 0x78
   128a0:	mov	r0, r2
   128a4:	bl	1b75c <__assert_fail@plt+0xa214>
   128a8:	movw	r1, #0
   128ac:	str	r0, [sp, #116]	; 0x74
   128b0:	mov	r0, r1
   128b4:	ldr	r1, [sp, #124]	; 0x7c
   128b8:	ldr	r2, [sp, #120]	; 0x78
   128bc:	ldr	r3, [sp, #116]	; 0x74
   128c0:	bl	11344 <error@plt>
   128c4:	movw	r0, #0
   128c8:	strb	r0, [fp, #-153]	; 0xffffff67
   128cc:	b	1293c <__assert_fail@plt+0x13f4>
   128d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   128d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   128d8:	bl	1f9ac <__assert_fail@plt+0xe464>
   128dc:	tst	r0, #1
   128e0:	beq	12934 <__assert_fail@plt+0x13ec>
   128e4:	b	128e8 <__assert_fail@plt+0x13a0>
   128e8:	movw	r0, #21919	; 0x559f
   128ec:	movt	r0, #2
   128f0:	bl	113b0 <gettext@plt>
   128f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   128f8:	movw	r1, #0
   128fc:	str	r0, [sp, #112]	; 0x70
   12900:	mov	r0, r1
   12904:	movw	r1, #3
   12908:	bl	1b8b0 <__assert_fail@plt+0xa368>
   1290c:	movw	r1, #0
   12910:	str	r0, [sp, #108]	; 0x6c
   12914:	mov	r0, r1
   12918:	ldr	r2, [sp, #112]	; 0x70
   1291c:	ldr	r3, [sp, #108]	; 0x6c
   12920:	bl	11344 <error@plt>
   12924:	movw	r0, #0
   12928:	and	r0, r0, #1
   1292c:	strb	r0, [fp, #-17]	; 0xffffffef
   12930:	b	130a4 <__assert_fail@plt+0x1b5c>
   12934:	b	1293c <__assert_fail@plt+0x13f4>
   12938:	b	1293c <__assert_fail@plt+0x13f4>
   1293c:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12940:	tst	r0, #1
   12944:	bne	1295c <__assert_fail@plt+0x1414>
   12948:	movw	r0, #0
   1294c:	strb	r0, [fp, #-154]	; 0xffffff66
   12950:	movw	r0, #0
   12954:	str	r0, [fp, #-48]	; 0xffffffd0
   12958:	b	12afc <__assert_fail@plt+0x15b4>
   1295c:	ldr	r0, [fp, #8]
   12960:	cmn	r0, #1
   12964:	bne	129c0 <__assert_fail@plt+0x1478>
   12968:	ldr	r0, [fp, #12]
   1296c:	cmn	r0, #1
   12970:	bne	129c0 <__assert_fail@plt+0x1478>
   12974:	ldr	r0, [fp, #16]
   12978:	ldr	r0, [r0]
   1297c:	cmp	r0, #2
   12980:	bne	129c0 <__assert_fail@plt+0x1478>
   12984:	ldr	r0, [fp, #16]
   12988:	ldr	r0, [r0, #8]
   1298c:	movw	r1, #0
   12990:	cmp	r0, r1
   12994:	bne	129c0 <__assert_fail@plt+0x1478>
   12998:	ldr	r0, [fp, #16]
   1299c:	ldrb	r0, [r0, #12]
   129a0:	tst	r0, #1
   129a4:	bne	129c0 <__assert_fail@plt+0x1478>
   129a8:	movw	r0, #1
   129ac:	strb	r0, [fp, #-154]	; 0xffffff66
   129b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   129b4:	add	r0, r0, #64	; 0x40
   129b8:	str	r0, [fp, #-48]	; 0xffffffd0
   129bc:	b	12af8 <__assert_fail@plt+0x15b0>
   129c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   129c4:	add	r0, r0, #64	; 0x40
   129c8:	str	r0, [fp, #-48]	; 0xffffffd0
   129cc:	ldr	r0, [fp, #16]
   129d0:	ldrb	r0, [r0, #12]
   129d4:	tst	r0, #1
   129d8:	beq	12a78 <__assert_fail@plt+0x1530>
   129dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   129e0:	ldr	r0, [r0, #16]
   129e4:	and	r0, r0, #61440	; 0xf000
   129e8:	cmp	r0, #40960	; 0xa000
   129ec:	bne	12a78 <__assert_fail@plt+0x1530>
   129f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   129f4:	ldr	r0, [r0, #32]
   129f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   129fc:	sub	r2, fp, #152	; 0x98
   12a00:	movw	r3, #0
   12a04:	bl	24784 <__assert_fail@plt+0x1323c>
   12a08:	cmp	r0, #0
   12a0c:	beq	12a70 <__assert_fail@plt+0x1528>
   12a10:	ldr	r0, [fp, #16]
   12a14:	ldrb	r0, [r0, #13]
   12a18:	tst	r0, #1
   12a1c:	bne	12a68 <__assert_fail@plt+0x1520>
   12a20:	bl	11404 <__errno_location@plt>
   12a24:	ldr	r1, [r0]
   12a28:	movw	r0, #22105	; 0x5659
   12a2c:	movt	r0, #2
   12a30:	str	r1, [sp, #104]	; 0x68
   12a34:	bl	113b0 <gettext@plt>
   12a38:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12a3c:	movw	r2, #4
   12a40:	str	r0, [sp, #100]	; 0x64
   12a44:	mov	r0, r2
   12a48:	bl	1b75c <__assert_fail@plt+0xa214>
   12a4c:	movw	r1, #0
   12a50:	str	r0, [sp, #96]	; 0x60
   12a54:	mov	r0, r1
   12a58:	ldr	r1, [sp, #104]	; 0x68
   12a5c:	ldr	r2, [sp, #100]	; 0x64
   12a60:	ldr	r3, [sp, #96]	; 0x60
   12a64:	bl	11344 <error@plt>
   12a68:	movw	r0, #0
   12a6c:	strb	r0, [fp, #-153]	; 0xffffff67
   12a70:	sub	r0, fp, #152	; 0x98
   12a74:	str	r0, [fp, #-48]	; 0xffffffd0
   12a78:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12a7c:	tst	r0, #1
   12a80:	movw	r0, #0
   12a84:	str	r0, [sp, #92]	; 0x5c
   12a88:	beq	12aec <__assert_fail@plt+0x15a4>
   12a8c:	ldr	r0, [fp, #8]
   12a90:	cmn	r0, #1
   12a94:	beq	12ab4 <__assert_fail@plt+0x156c>
   12a98:	ldr	r0, [fp, #8]
   12a9c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12aa0:	ldr	r1, [r1, #24]
   12aa4:	cmp	r0, r1
   12aa8:	movw	r0, #0
   12aac:	str	r0, [sp, #92]	; 0x5c
   12ab0:	bne	12aec <__assert_fail@plt+0x15a4>
   12ab4:	ldr	r0, [fp, #12]
   12ab8:	cmn	r0, #1
   12abc:	movw	r0, #1
   12ac0:	str	r0, [sp, #88]	; 0x58
   12ac4:	beq	12ae4 <__assert_fail@plt+0x159c>
   12ac8:	ldr	r0, [fp, #12]
   12acc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12ad0:	ldr	r1, [r1, #28]
   12ad4:	cmp	r0, r1
   12ad8:	movw	r0, #0
   12adc:	moveq	r0, #1
   12ae0:	str	r0, [sp, #88]	; 0x58
   12ae4:	ldr	r0, [sp, #88]	; 0x58
   12ae8:	str	r0, [sp, #92]	; 0x5c
   12aec:	ldr	r0, [sp, #92]	; 0x5c
   12af0:	and	r0, r0, #1
   12af4:	strb	r0, [fp, #-154]	; 0xffffff66
   12af8:	b	12afc <__assert_fail@plt+0x15b4>
   12afc:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12b00:	tst	r0, #1
   12b04:	beq	12cac <__assert_fail@plt+0x1764>
   12b08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12b0c:	ldrh	r0, [r0, #56]	; 0x38
   12b10:	cmp	r0, #1
   12b14:	beq	12b48 <__assert_fail@plt+0x1600>
   12b18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12b1c:	ldrh	r0, [r0, #56]	; 0x38
   12b20:	cmp	r0, #2
   12b24:	beq	12b48 <__assert_fail@plt+0x1600>
   12b28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12b2c:	ldrh	r0, [r0, #56]	; 0x38
   12b30:	cmp	r0, #6
   12b34:	beq	12b48 <__assert_fail@plt+0x1600>
   12b38:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12b3c:	ldrh	r0, [r0, #56]	; 0x38
   12b40:	cmp	r0, #4
   12b44:	bne	12cac <__assert_fail@plt+0x1764>
   12b48:	ldr	r0, [fp, #16]
   12b4c:	ldr	r0, [r0, #8]
   12b50:	movw	r1, #0
   12b54:	cmp	r0, r1
   12b58:	beq	12cac <__assert_fail@plt+0x1764>
   12b5c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12b60:	ldr	r1, [r0, #96]	; 0x60
   12b64:	ldr	r0, [r0, #100]	; 0x64
   12b68:	ldr	r2, [fp, #16]
   12b6c:	ldr	r2, [r2, #8]
   12b70:	ldr	r3, [r2]
   12b74:	ldr	r2, [r2, #4]
   12b78:	eor	r0, r0, r2
   12b7c:	eor	r1, r1, r3
   12b80:	orr	r0, r1, r0
   12b84:	cmp	r0, #0
   12b88:	bne	12cac <__assert_fail@plt+0x1764>
   12b8c:	b	12b90 <__assert_fail@plt+0x1648>
   12b90:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12b94:	ldr	r1, [r0]
   12b98:	ldr	r0, [r0, #4]
   12b9c:	ldr	r2, [fp, #16]
   12ba0:	ldr	r2, [r2, #8]
   12ba4:	ldr	r3, [r2, #8]
   12ba8:	ldr	r2, [r2, #12]
   12bac:	eor	r0, r0, r2
   12bb0:	eor	r1, r1, r3
   12bb4:	orr	r0, r1, r0
   12bb8:	cmp	r0, #0
   12bbc:	bne	12cac <__assert_fail@plt+0x1764>
   12bc0:	b	12bc4 <__assert_fail@plt+0x167c>
   12bc4:	b	12bc8 <__assert_fail@plt+0x1680>
   12bc8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12bcc:	movw	r1, #23819	; 0x5d0b
   12bd0:	movt	r1, #2
   12bd4:	bl	11248 <strcmp@plt>
   12bd8:	cmp	r0, #0
   12bdc:	bne	12c1c <__assert_fail@plt+0x16d4>
   12be0:	movw	r0, #21725	; 0x54dd
   12be4:	movt	r0, #2
   12be8:	bl	113b0 <gettext@plt>
   12bec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12bf0:	movw	r2, #4
   12bf4:	str	r0, [sp, #84]	; 0x54
   12bf8:	mov	r0, r2
   12bfc:	bl	1b75c <__assert_fail@plt+0xa214>
   12c00:	movw	r1, #0
   12c04:	str	r0, [sp, #80]	; 0x50
   12c08:	mov	r0, r1
   12c0c:	ldr	r2, [sp, #84]	; 0x54
   12c10:	ldr	r3, [sp, #80]	; 0x50
   12c14:	bl	11344 <error@plt>
   12c18:	b	12c7c <__assert_fail@plt+0x1734>
   12c1c:	movw	r0, #21770	; 0x550a
   12c20:	movt	r0, #2
   12c24:	bl	113b0 <gettext@plt>
   12c28:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12c2c:	movw	r1, #0
   12c30:	str	r0, [sp, #76]	; 0x4c
   12c34:	mov	r0, r1
   12c38:	movw	r1, #4
   12c3c:	bl	1b688 <__assert_fail@plt+0xa140>
   12c40:	movw	r1, #1
   12c44:	str	r0, [sp, #72]	; 0x48
   12c48:	mov	r0, r1
   12c4c:	movw	r1, #4
   12c50:	movw	r2, #23819	; 0x5d0b
   12c54:	movt	r2, #2
   12c58:	bl	1b688 <__assert_fail@plt+0xa140>
   12c5c:	movw	r1, #0
   12c60:	str	r0, [sp, #68]	; 0x44
   12c64:	mov	r0, r1
   12c68:	ldr	r2, [sp, #76]	; 0x4c
   12c6c:	ldr	r3, [sp, #72]	; 0x48
   12c70:	ldr	ip, [sp, #68]	; 0x44
   12c74:	str	ip, [sp]
   12c78:	bl	11344 <error@plt>
   12c7c:	movw	r0, #21828	; 0x5544
   12c80:	movt	r0, #2
   12c84:	bl	113b0 <gettext@plt>
   12c88:	movw	r1, #0
   12c8c:	str	r0, [sp, #64]	; 0x40
   12c90:	mov	r0, r1
   12c94:	ldr	r2, [sp, #64]	; 0x40
   12c98:	bl	11344 <error@plt>
   12c9c:	movw	r0, #0
   12ca0:	and	r0, r0, #1
   12ca4:	strb	r0, [fp, #-17]	; 0xffffffef
   12ca8:	b	130a4 <__assert_fail@plt+0x1b5c>
   12cac:	ldrb	r0, [fp, #-154]	; 0xffffff66
   12cb0:	tst	r0, #1
   12cb4:	beq	12e88 <__assert_fail@plt+0x1940>
   12cb8:	ldr	r0, [fp, #16]
   12cbc:	ldrb	r0, [r0, #12]
   12cc0:	tst	r0, #1
   12cc4:	bne	12d24 <__assert_fail@plt+0x17dc>
   12cc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12ccc:	ldr	r0, [r0, #32]
   12cd0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12cd4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12cd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12cdc:	bl	137a0 <__assert_fail@plt+0x2258>
   12ce0:	cmp	r0, #0
   12ce4:	movw	r0, #0
   12ce8:	moveq	r0, #1
   12cec:	and	r0, r0, #1
   12cf0:	strb	r0, [fp, #-153]	; 0xffffff67
   12cf4:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12cf8:	tst	r0, #1
   12cfc:	bne	12d20 <__assert_fail@plt+0x17d8>
   12d00:	bl	11404 <__errno_location@plt>
   12d04:	ldr	r0, [r0]
   12d08:	cmp	r0, #95	; 0x5f
   12d0c:	bne	12d20 <__assert_fail@plt+0x17d8>
   12d10:	movw	r0, #1
   12d14:	strb	r0, [fp, #-153]	; 0xffffff67
   12d18:	movw	r0, #0
   12d1c:	strb	r0, [fp, #-155]	; 0xffffff65
   12d20:	b	12dec <__assert_fail@plt+0x18a4>
   12d24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12d28:	ldr	r0, [r0, #32]
   12d2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12d30:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12d34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12d38:	ldr	ip, [fp, #-36]	; 0xffffffdc
   12d3c:	ldr	lr, [fp, #8]
   12d40:	ldr	r4, [fp, #12]
   12d44:	mov	r5, sp
   12d48:	str	r4, [r5, #8]
   12d4c:	str	lr, [r5, #4]
   12d50:	str	ip, [r5]
   12d54:	bl	130b4 <__assert_fail@plt+0x1b6c>
   12d58:	str	r0, [fp, #-160]	; 0xffffff60
   12d5c:	ldr	r0, [fp, #-160]	; 0xffffff60
   12d60:	sub	r0, r0, #2
   12d64:	cmp	r0, #4
   12d68:	str	r0, [sp, #60]	; 0x3c
   12d6c:	bhi	12de4 <__assert_fail@plt+0x189c>
   12d70:	add	r0, pc, #8
   12d74:	ldr	r1, [sp, #60]	; 0x3c
   12d78:	ldr	r0, [r0, r1, lsl #2]
   12d7c:	mov	pc, r0
   12d80:	muleq	r1, r4, sp
   12d84:	ldrdeq	r2, [r1], -r4
   12d88:	ldrdeq	r2, [r1], -r4
   12d8c:	muleq	r1, r8, sp
   12d90:	andeq	r2, r1, r8, asr #27
   12d94:	b	12de8 <__assert_fail@plt+0x18a0>
   12d98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12d9c:	ldr	r0, [r0, #32]
   12da0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12da4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12da8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12dac:	bl	13760 <__assert_fail@plt+0x2218>
   12db0:	cmp	r0, #0
   12db4:	movw	r0, #0
   12db8:	moveq	r0, #1
   12dbc:	and	r0, r0, #1
   12dc0:	strb	r0, [fp, #-153]	; 0xffffff67
   12dc4:	b	12de8 <__assert_fail@plt+0x18a0>
   12dc8:	movw	r0, #0
   12dcc:	strb	r0, [fp, #-153]	; 0xffffff67
   12dd0:	b	12de8 <__assert_fail@plt+0x18a0>
   12dd4:	movw	r0, #0
   12dd8:	strb	r0, [fp, #-154]	; 0xffffff66
   12ddc:	strb	r0, [fp, #-153]	; 0xffffff67
   12de0:	b	12de8 <__assert_fail@plt+0x18a0>
   12de4:	bl	11500 <abort@plt>
   12de8:	b	12dec <__assert_fail@plt+0x18a4>
   12dec:	ldrb	r0, [fp, #-154]	; 0xffffff66
   12df0:	tst	r0, #1
   12df4:	beq	12e84 <__assert_fail@plt+0x193c>
   12df8:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12dfc:	tst	r0, #1
   12e00:	bne	12e84 <__assert_fail@plt+0x193c>
   12e04:	ldr	r0, [fp, #16]
   12e08:	ldrb	r0, [r0, #13]
   12e0c:	tst	r0, #1
   12e10:	bne	12e84 <__assert_fail@plt+0x193c>
   12e14:	bl	11404 <__errno_location@plt>
   12e18:	ldr	r1, [r0]
   12e1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12e20:	cmn	r0, #1
   12e24:	str	r1, [sp, #56]	; 0x38
   12e28:	beq	12e40 <__assert_fail@plt+0x18f8>
   12e2c:	movw	r0, #22127	; 0x566f
   12e30:	movt	r0, #2
   12e34:	bl	113b0 <gettext@plt>
   12e38:	str	r0, [sp, #52]	; 0x34
   12e3c:	b	12e50 <__assert_fail@plt+0x1908>
   12e40:	movw	r0, #22152	; 0x5688
   12e44:	movt	r0, #2
   12e48:	bl	113b0 <gettext@plt>
   12e4c:	str	r0, [sp, #52]	; 0x34
   12e50:	ldr	r0, [sp, #52]	; 0x34
   12e54:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12e58:	movw	r2, #4
   12e5c:	str	r0, [sp, #48]	; 0x30
   12e60:	mov	r0, r2
   12e64:	bl	1b75c <__assert_fail@plt+0xa214>
   12e68:	movw	r1, #0
   12e6c:	str	r0, [sp, #44]	; 0x2c
   12e70:	mov	r0, r1
   12e74:	ldr	r1, [sp, #56]	; 0x38
   12e78:	ldr	r2, [sp, #48]	; 0x30
   12e7c:	ldr	r3, [sp, #44]	; 0x2c
   12e80:	bl	11344 <error@plt>
   12e84:	b	12e88 <__assert_fail@plt+0x1940>
   12e88:	ldr	r0, [fp, #16]
   12e8c:	ldr	r0, [r0]
   12e90:	cmp	r0, #2
   12e94:	beq	13078 <__assert_fail@plt+0x1b30>
   12e98:	ldrb	r0, [fp, #-154]	; 0xffffff66
   12e9c:	tst	r0, #1
   12ea0:	movw	r0, #0
   12ea4:	str	r0, [sp, #40]	; 0x28
   12ea8:	beq	12f44 <__assert_fail@plt+0x19fc>
   12eac:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12eb0:	tst	r0, #1
   12eb4:	movw	r0, #0
   12eb8:	str	r0, [sp, #40]	; 0x28
   12ebc:	beq	12f44 <__assert_fail@plt+0x19fc>
   12ec0:	ldrb	r0, [fp, #-155]	; 0xffffff65
   12ec4:	tst	r0, #1
   12ec8:	movw	r0, #0
   12ecc:	str	r0, [sp, #40]	; 0x28
   12ed0:	beq	12f44 <__assert_fail@plt+0x19fc>
   12ed4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12ed8:	cmn	r0, #1
   12edc:	beq	12efc <__assert_fail@plt+0x19b4>
   12ee0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12ee4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12ee8:	ldr	r1, [r1, #24]
   12eec:	cmp	r0, r1
   12ef0:	movw	r0, #0
   12ef4:	str	r0, [sp, #36]	; 0x24
   12ef8:	bne	12f34 <__assert_fail@plt+0x19ec>
   12efc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12f00:	cmn	r0, #1
   12f04:	movw	r0, #1
   12f08:	str	r0, [sp, #32]
   12f0c:	beq	12f2c <__assert_fail@plt+0x19e4>
   12f10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12f14:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12f18:	ldr	r1, [r1, #28]
   12f1c:	cmp	r0, r1
   12f20:	movw	r0, #0
   12f24:	moveq	r0, #1
   12f28:	str	r0, [sp, #32]
   12f2c:	ldr	r0, [sp, #32]
   12f30:	str	r0, [sp, #36]	; 0x24
   12f34:	ldr	r0, [sp, #36]	; 0x24
   12f38:	mvn	r1, #0
   12f3c:	eor	r0, r0, r1
   12f40:	str	r0, [sp, #40]	; 0x28
   12f44:	ldr	r0, [sp, #40]	; 0x28
   12f48:	and	r0, r0, #1
   12f4c:	strb	r0, [fp, #-161]	; 0xffffff5f
   12f50:	ldrb	r0, [fp, #-161]	; 0xffffff5f
   12f54:	tst	r0, #1
   12f58:	bne	12f6c <__assert_fail@plt+0x1a24>
   12f5c:	ldr	r0, [fp, #16]
   12f60:	ldr	r0, [r0]
   12f64:	cmp	r0, #0
   12f68:	bne	13074 <__assert_fail@plt+0x1b2c>
   12f6c:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12f70:	tst	r0, #1
   12f74:	bne	12f84 <__assert_fail@plt+0x1a3c>
   12f78:	movw	r0, #3
   12f7c:	str	r0, [sp, #28]
   12f80:	b	12fc0 <__assert_fail@plt+0x1a78>
   12f84:	ldrb	r0, [fp, #-155]	; 0xffffff65
   12f88:	tst	r0, #1
   12f8c:	bne	12f9c <__assert_fail@plt+0x1a54>
   12f90:	movw	r0, #1
   12f94:	str	r0, [sp, #24]
   12f98:	b	12fb8 <__assert_fail@plt+0x1a70>
   12f9c:	ldrb	r0, [fp, #-161]	; 0xffffff5f
   12fa0:	mvn	r1, #0
   12fa4:	eor	r0, r0, r1
   12fa8:	tst	r0, #1
   12fac:	movw	r0, #4
   12fb0:	moveq	r0, #2
   12fb4:	str	r0, [sp, #24]
   12fb8:	ldr	r0, [sp, #24]
   12fbc:	str	r0, [sp, #28]
   12fc0:	ldr	r0, [sp, #28]
   12fc4:	str	r0, [fp, #-168]	; 0xffffff58
   12fc8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12fcc:	movw	r1, #0
   12fd0:	cmp	r0, r1
   12fd4:	beq	12fec <__assert_fail@plt+0x1aa4>
   12fd8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12fdc:	ldr	r0, [r0, #24]
   12fe0:	bl	122a4 <__assert_fail@plt+0xd5c>
   12fe4:	str	r0, [sp, #20]
   12fe8:	b	12ff8 <__assert_fail@plt+0x1ab0>
   12fec:	movw	r0, #0
   12ff0:	str	r0, [sp, #20]
   12ff4:	b	12ff8 <__assert_fail@plt+0x1ab0>
   12ff8:	ldr	r0, [sp, #20]
   12ffc:	str	r0, [fp, #-172]	; 0xffffff54
   13000:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13004:	movw	r1, #0
   13008:	cmp	r0, r1
   1300c:	beq	13024 <__assert_fail@plt+0x1adc>
   13010:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13014:	ldr	r0, [r0, #28]
   13018:	bl	12244 <__assert_fail@plt+0xcfc>
   1301c:	str	r0, [sp, #16]
   13020:	b	13030 <__assert_fail@plt+0x1ae8>
   13024:	movw	r0, #0
   13028:	str	r0, [sp, #16]
   1302c:	b	13030 <__assert_fail@plt+0x1ae8>
   13030:	ldr	r0, [sp, #16]
   13034:	str	r0, [fp, #-176]	; 0xffffff50
   13038:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1303c:	ldr	r1, [fp, #-168]	; 0xffffff58
   13040:	ldr	r2, [fp, #-172]	; 0xffffff54
   13044:	ldr	r3, [fp, #-176]	; 0xffffff50
   13048:	ldr	ip, [fp, #16]
   1304c:	ldr	ip, [ip, #16]
   13050:	ldr	lr, [fp, #16]
   13054:	ldr	lr, [lr, #20]
   13058:	str	ip, [sp]
   1305c:	str	lr, [sp, #4]
   13060:	bl	13348 <__assert_fail@plt+0x1e00>
   13064:	ldr	r0, [fp, #-172]	; 0xffffff54
   13068:	bl	13948 <__assert_fail@plt+0x2400>
   1306c:	ldr	r0, [fp, #-176]	; 0xffffff50
   13070:	bl	13948 <__assert_fail@plt+0x2400>
   13074:	b	13078 <__assert_fail@plt+0x1b30>
   13078:	ldr	r0, [fp, #16]
   1307c:	ldrb	r0, [r0, #4]
   13080:	tst	r0, #1
   13084:	bne	13098 <__assert_fail@plt+0x1b50>
   13088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1308c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13090:	movw	r2, #4
   13094:	bl	169ac <__assert_fail@plt+0x5464>
   13098:	ldrb	r0, [fp, #-153]	; 0xffffff67
   1309c:	and	r0, r0, #1
   130a0:	strb	r0, [fp, #-17]	; 0xffffffef
   130a4:	ldrb	r0, [fp, #-17]	; 0xffffffef
   130a8:	and	r0, r0, #1
   130ac:	sub	sp, fp, #16
   130b0:	pop	{r4, r5, r6, r7, fp, pc}
   130b4:	push	{r4, sl, fp, lr}
   130b8:	add	fp, sp, #8
   130bc:	sub	sp, sp, #152	; 0x98
   130c0:	ldr	ip, [fp, #16]
   130c4:	ldr	lr, [fp, #12]
   130c8:	ldr	r4, [fp, #8]
   130cc:	str	r0, [fp, #-16]
   130d0:	str	r1, [fp, #-20]	; 0xffffffec
   130d4:	str	r2, [fp, #-24]	; 0xffffffe8
   130d8:	str	r3, [fp, #-28]	; 0xffffffe4
   130dc:	movw	r0, #2
   130e0:	str	r0, [fp, #-32]	; 0xffffffe0
   130e4:	movw	r0, #2304	; 0x900
   130e8:	str	r0, [sp, #20]
   130ec:	ldr	r0, [fp, #12]
   130f0:	cmn	r0, #1
   130f4:	bne	13110 <__assert_fail@plt+0x1bc8>
   130f8:	ldr	r0, [fp, #16]
   130fc:	cmn	r0, #1
   13100:	bne	13110 <__assert_fail@plt+0x1bc8>
   13104:	movw	r0, #5
   13108:	str	r0, [fp, #-12]
   1310c:	b	1333c <__assert_fail@plt+0x1df4>
   13110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13114:	ldr	r0, [r0, #16]
   13118:	and	r0, r0, #61440	; 0xf000
   1311c:	cmp	r0, #32768	; 0x8000
   13120:	beq	13158 <__assert_fail@plt+0x1c10>
   13124:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13128:	ldr	r0, [r0, #16]
   1312c:	and	r0, r0, #61440	; 0xf000
   13130:	cmp	r0, #16384	; 0x4000
   13134:	bne	13148 <__assert_fail@plt+0x1c00>
   13138:	ldr	r0, [sp, #20]
   1313c:	orr	r0, r0, #16384	; 0x4000
   13140:	str	r0, [sp, #20]
   13144:	b	13154 <__assert_fail@plt+0x1c0c>
   13148:	movw	r0, #5
   1314c:	str	r0, [fp, #-12]
   13150:	b	1333c <__assert_fail@plt+0x1df4>
   13154:	b	13158 <__assert_fail@plt+0x1c10>
   13158:	ldr	r0, [fp, #-16]
   1315c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13160:	ldr	r2, [sp, #20]
   13164:	orr	r2, r2, #0
   13168:	bl	113e0 <openat64@plt>
   1316c:	str	r0, [sp, #16]
   13170:	ldr	r0, [sp, #16]
   13174:	movw	r1, #0
   13178:	cmp	r1, r0
   1317c:	ble	131f0 <__assert_fail@plt+0x1ca8>
   13180:	bl	11404 <__errno_location@plt>
   13184:	ldr	r0, [r0]
   13188:	cmp	r0, #13
   1318c:	bne	131c8 <__assert_fail@plt+0x1c80>
   13190:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13194:	ldr	r0, [r0, #16]
   13198:	and	r0, r0, #61440	; 0xf000
   1319c:	cmp	r0, #32768	; 0x8000
   131a0:	bne	131c8 <__assert_fail@plt+0x1c80>
   131a4:	ldr	r0, [fp, #-16]
   131a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   131ac:	ldr	r2, [sp, #20]
   131b0:	orr	r2, r2, #1
   131b4:	bl	113e0 <openat64@plt>
   131b8:	str	r0, [sp, #16]
   131bc:	movw	r1, #0
   131c0:	cmp	r1, r0
   131c4:	ble	131f0 <__assert_fail@plt+0x1ca8>
   131c8:	bl	11404 <__errno_location@plt>
   131cc:	ldr	r0, [r0]
   131d0:	cmp	r0, #13
   131d4:	movw	r0, #0
   131d8:	moveq	r0, #1
   131dc:	tst	r0, #1
   131e0:	movw	r0, #5
   131e4:	moveq	r0, #6
   131e8:	str	r0, [fp, #-12]
   131ec:	b	1333c <__assert_fail@plt+0x1df4>
   131f0:	ldr	r0, [sp, #16]
   131f4:	add	r1, sp, #24
   131f8:	bl	24764 <__assert_fail@plt+0x1321c>
   131fc:	cmp	r0, #0
   13200:	beq	13210 <__assert_fail@plt+0x1cc8>
   13204:	movw	r0, #6
   13208:	str	r0, [fp, #-32]	; 0xffffffe0
   1320c:	b	13308 <__assert_fail@plt+0x1dc0>
   13210:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13214:	ldr	r1, [r0, #96]	; 0x60
   13218:	ldr	r0, [r0, #100]	; 0x64
   1321c:	ldr	r2, [sp, #120]	; 0x78
   13220:	ldr	r3, [sp, #124]	; 0x7c
   13224:	eor	r0, r0, r3
   13228:	eor	r1, r1, r2
   1322c:	orr	r0, r1, r0
   13230:	cmp	r0, #0
   13234:	bne	13268 <__assert_fail@plt+0x1d20>
   13238:	b	1323c <__assert_fail@plt+0x1cf4>
   1323c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13240:	ldr	r1, [r0]
   13244:	ldr	r0, [r0, #4]
   13248:	ldr	r2, [sp, #24]
   1324c:	ldr	r3, [sp, #28]
   13250:	eor	r0, r0, r3
   13254:	eor	r1, r1, r2
   13258:	orr	r0, r1, r0
   1325c:	cmp	r0, #0
   13260:	beq	13274 <__assert_fail@plt+0x1d2c>
   13264:	b	13268 <__assert_fail@plt+0x1d20>
   13268:	movw	r0, #4
   1326c:	str	r0, [fp, #-32]	; 0xffffffe0
   13270:	b	13304 <__assert_fail@plt+0x1dbc>
   13274:	ldr	r0, [fp, #12]
   13278:	cmn	r0, #1
   1327c:	beq	13290 <__assert_fail@plt+0x1d48>
   13280:	ldr	r0, [fp, #12]
   13284:	ldr	r1, [sp, #48]	; 0x30
   13288:	cmp	r0, r1
   1328c:	bne	13300 <__assert_fail@plt+0x1db8>
   13290:	ldr	r0, [fp, #16]
   13294:	cmn	r0, #1
   13298:	beq	132ac <__assert_fail@plt+0x1d64>
   1329c:	ldr	r0, [fp, #16]
   132a0:	ldr	r1, [sp, #52]	; 0x34
   132a4:	cmp	r0, r1
   132a8:	bne	13300 <__assert_fail@plt+0x1db8>
   132ac:	ldr	r0, [sp, #16]
   132b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   132b4:	ldr	r2, [fp, #8]
   132b8:	bl	113ec <fchown@plt>
   132bc:	cmp	r0, #0
   132c0:	bne	132f4 <__assert_fail@plt+0x1dac>
   132c4:	ldr	r0, [sp, #16]
   132c8:	bl	1150c <close@plt>
   132cc:	cmp	r0, #0
   132d0:	movw	r0, #0
   132d4:	moveq	r0, #1
   132d8:	tst	r0, #1
   132dc:	movw	r0, #2
   132e0:	moveq	r0, #6
   132e4:	str	r0, [fp, #-32]	; 0xffffffe0
   132e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   132ec:	str	r0, [fp, #-12]
   132f0:	b	1333c <__assert_fail@plt+0x1df4>
   132f4:	movw	r0, #6
   132f8:	str	r0, [fp, #-32]	; 0xffffffe0
   132fc:	b	13300 <__assert_fail@plt+0x1db8>
   13300:	b	13304 <__assert_fail@plt+0x1dbc>
   13304:	b	13308 <__assert_fail@plt+0x1dc0>
   13308:	bl	11404 <__errno_location@plt>
   1330c:	ldr	r0, [r0]
   13310:	str	r0, [sp, #12]
   13314:	ldr	r0, [sp, #16]
   13318:	bl	1150c <close@plt>
   1331c:	ldr	r1, [sp, #12]
   13320:	str	r0, [sp, #8]
   13324:	str	r1, [sp, #4]
   13328:	bl	11404 <__errno_location@plt>
   1332c:	ldr	r1, [sp, #4]
   13330:	str	r1, [r0]
   13334:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13338:	str	r0, [fp, #-12]
   1333c:	ldr	r0, [fp, #-12]
   13340:	sub	sp, fp, #8
   13344:	pop	{r4, sl, fp, pc}
   13348:	push	{fp, lr}
   1334c:	mov	fp, sp
   13350:	sub	sp, sp, #104	; 0x68
   13354:	ldr	ip, [fp, #12]
   13358:	ldr	lr, [fp, #8]
   1335c:	str	r0, [fp, #-4]
   13360:	str	r1, [fp, #-8]
   13364:	str	r2, [fp, #-12]
   13368:	str	r3, [fp, #-16]
   1336c:	ldr	r0, [fp, #-8]
   13370:	cmp	r0, #1
   13374:	bne	133b0 <__assert_fail@plt+0x1e68>
   13378:	movw	r0, #22173	; 0x569d
   1337c:	movt	r0, #2
   13380:	bl	113b0 <gettext@plt>
   13384:	ldr	r1, [fp, #-4]
   13388:	movw	r2, #4
   1338c:	str	r0, [fp, #-32]	; 0xffffffe0
   13390:	mov	r0, r2
   13394:	bl	1b75c <__assert_fail@plt+0xa214>
   13398:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1339c:	str	r0, [fp, #-36]	; 0xffffffdc
   133a0:	mov	r0, r1
   133a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   133a8:	bl	11260 <printf@plt>
   133ac:	b	13690 <__assert_fail@plt+0x2148>
   133b0:	ldr	r0, [fp, #8]
   133b4:	ldr	r1, [fp, #12]
   133b8:	bl	13698 <__assert_fail@plt+0x2150>
   133bc:	str	r0, [fp, #-28]	; 0xffffffe4
   133c0:	ldr	r0, [fp, #8]
   133c4:	movw	r1, #0
   133c8:	cmp	r0, r1
   133cc:	beq	133dc <__assert_fail@plt+0x1e94>
   133d0:	ldr	r0, [fp, #-12]
   133d4:	str	r0, [fp, #-40]	; 0xffffffd8
   133d8:	b	133e8 <__assert_fail@plt+0x1ea0>
   133dc:	movw	r0, #0
   133e0:	str	r0, [fp, #-40]	; 0xffffffd8
   133e4:	b	133e8 <__assert_fail@plt+0x1ea0>
   133e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   133ec:	ldr	r1, [fp, #12]
   133f0:	movw	r2, #0
   133f4:	cmp	r1, r2
   133f8:	str	r0, [fp, #-44]	; 0xffffffd4
   133fc:	beq	1340c <__assert_fail@plt+0x1ec4>
   13400:	ldr	r0, [fp, #-16]
   13404:	str	r0, [fp, #-48]	; 0xffffffd0
   13408:	b	13418 <__assert_fail@plt+0x1ed0>
   1340c:	movw	r0, #0
   13410:	str	r0, [fp, #-48]	; 0xffffffd0
   13414:	b	13418 <__assert_fail@plt+0x1ed0>
   13418:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1341c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13420:	str	r0, [sp, #52]	; 0x34
   13424:	mov	r0, r1
   13428:	ldr	r1, [sp, #52]	; 0x34
   1342c:	bl	13698 <__assert_fail@plt+0x2150>
   13430:	str	r0, [fp, #-24]	; 0xffffffe8
   13434:	ldr	r0, [fp, #-8]
   13438:	cmp	r0, #2
   1343c:	str	r0, [sp, #48]	; 0x30
   13440:	beq	13468 <__assert_fail@plt+0x1f20>
   13444:	b	13448 <__assert_fail@plt+0x1f00>
   13448:	ldr	r0, [sp, #48]	; 0x30
   1344c:	cmp	r0, #3
   13450:	beq	134d4 <__assert_fail@plt+0x1f8c>
   13454:	b	13458 <__assert_fail@plt+0x1f10>
   13458:	ldr	r0, [sp, #48]	; 0x30
   1345c:	cmp	r0, #4
   13460:	beq	135d4 <__assert_fail@plt+0x208c>
   13464:	b	13640 <__assert_fail@plt+0x20f8>
   13468:	ldr	r0, [fp, #8]
   1346c:	movw	r1, #0
   13470:	cmp	r0, r1
   13474:	beq	1348c <__assert_fail@plt+0x1f44>
   13478:	movw	r0, #22229	; 0x56d5
   1347c:	movt	r0, #2
   13480:	bl	113b0 <gettext@plt>
   13484:	str	r0, [sp, #44]	; 0x2c
   13488:	b	134c8 <__assert_fail@plt+0x1f80>
   1348c:	ldr	r0, [fp, #12]
   13490:	movw	r1, #0
   13494:	cmp	r0, r1
   13498:	beq	134b0 <__assert_fail@plt+0x1f68>
   1349c:	movw	r0, #22268	; 0x56fc
   134a0:	movt	r0, #2
   134a4:	bl	113b0 <gettext@plt>
   134a8:	str	r0, [sp, #40]	; 0x28
   134ac:	b	134c0 <__assert_fail@plt+0x1f78>
   134b0:	movw	r0, #22303	; 0x571f
   134b4:	movt	r0, #2
   134b8:	bl	113b0 <gettext@plt>
   134bc:	str	r0, [sp, #40]	; 0x28
   134c0:	ldr	r0, [sp, #40]	; 0x28
   134c4:	str	r0, [sp, #44]	; 0x2c
   134c8:	ldr	r0, [sp, #44]	; 0x2c
   134cc:	str	r0, [fp, #-20]	; 0xffffffec
   134d0:	b	13644 <__assert_fail@plt+0x20fc>
   134d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   134d8:	movw	r1, #0
   134dc:	cmp	r0, r1
   134e0:	beq	13550 <__assert_fail@plt+0x2008>
   134e4:	ldr	r0, [fp, #8]
   134e8:	movw	r1, #0
   134ec:	cmp	r0, r1
   134f0:	beq	13508 <__assert_fail@plt+0x1fc0>
   134f4:	movw	r0, #22333	; 0x573d
   134f8:	movt	r0, #2
   134fc:	bl	113b0 <gettext@plt>
   13500:	str	r0, [sp, #36]	; 0x24
   13504:	b	13544 <__assert_fail@plt+0x1ffc>
   13508:	ldr	r0, [fp, #12]
   1350c:	movw	r1, #0
   13510:	cmp	r0, r1
   13514:	beq	1352c <__assert_fail@plt+0x1fe4>
   13518:	movw	r0, #22381	; 0x576d
   1351c:	movt	r0, #2
   13520:	bl	113b0 <gettext@plt>
   13524:	str	r0, [sp, #32]
   13528:	b	1353c <__assert_fail@plt+0x1ff4>
   1352c:	movw	r0, #22425	; 0x5799
   13530:	movt	r0, #2
   13534:	bl	113b0 <gettext@plt>
   13538:	str	r0, [sp, #32]
   1353c:	ldr	r0, [sp, #32]
   13540:	str	r0, [sp, #36]	; 0x24
   13544:	ldr	r0, [sp, #36]	; 0x24
   13548:	str	r0, [fp, #-20]	; 0xffffffec
   1354c:	b	135d0 <__assert_fail@plt+0x2088>
   13550:	ldr	r0, [fp, #8]
   13554:	movw	r1, #0
   13558:	cmp	r0, r1
   1355c:	beq	13574 <__assert_fail@plt+0x202c>
   13560:	movw	r0, #22459	; 0x57bb
   13564:	movt	r0, #2
   13568:	bl	113b0 <gettext@plt>
   1356c:	str	r0, [sp, #28]
   13570:	b	135b0 <__assert_fail@plt+0x2068>
   13574:	ldr	r0, [fp, #12]
   13578:	movw	r1, #0
   1357c:	cmp	r0, r1
   13580:	beq	13598 <__assert_fail@plt+0x2050>
   13584:	movw	r0, #22499	; 0x57e3
   13588:	movt	r0, #2
   1358c:	bl	113b0 <gettext@plt>
   13590:	str	r0, [sp, #24]
   13594:	b	135a8 <__assert_fail@plt+0x2060>
   13598:	movw	r0, #22425	; 0x5799
   1359c:	movt	r0, #2
   135a0:	bl	113b0 <gettext@plt>
   135a4:	str	r0, [sp, #24]
   135a8:	ldr	r0, [sp, #24]
   135ac:	str	r0, [sp, #28]
   135b0:	ldr	r0, [sp, #28]
   135b4:	str	r0, [fp, #-20]	; 0xffffffec
   135b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   135bc:	bl	13948 <__assert_fail@plt+0x2400>
   135c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   135c4:	str	r0, [fp, #-24]	; 0xffffffe8
   135c8:	movw	r0, #0
   135cc:	str	r0, [fp, #-28]	; 0xffffffe4
   135d0:	b	13644 <__assert_fail@plt+0x20fc>
   135d4:	ldr	r0, [fp, #8]
   135d8:	movw	r1, #0
   135dc:	cmp	r0, r1
   135e0:	beq	135f8 <__assert_fail@plt+0x20b0>
   135e4:	movw	r0, #22535	; 0x5807
   135e8:	movt	r0, #2
   135ec:	bl	113b0 <gettext@plt>
   135f0:	str	r0, [sp, #20]
   135f4:	b	13634 <__assert_fail@plt+0x20ec>
   135f8:	ldr	r0, [fp, #12]
   135fc:	movw	r1, #0
   13600:	cmp	r0, r1
   13604:	beq	1361c <__assert_fail@plt+0x20d4>
   13608:	movw	r0, #22567	; 0x5827
   1360c:	movt	r0, #2
   13610:	bl	113b0 <gettext@plt>
   13614:	str	r0, [sp, #16]
   13618:	b	1362c <__assert_fail@plt+0x20e4>
   1361c:	movw	r0, #22595	; 0x5843
   13620:	movt	r0, #2
   13624:	bl	113b0 <gettext@plt>
   13628:	str	r0, [sp, #16]
   1362c:	ldr	r0, [sp, #16]
   13630:	str	r0, [sp, #20]
   13634:	ldr	r0, [sp, #20]
   13638:	str	r0, [fp, #-20]	; 0xffffffec
   1363c:	b	13644 <__assert_fail@plt+0x20fc>
   13640:	bl	11500 <abort@plt>
   13644:	ldr	r0, [fp, #-20]	; 0xffffffec
   13648:	ldr	r1, [fp, #-4]
   1364c:	movw	r2, #4
   13650:	str	r0, [sp, #12]
   13654:	mov	r0, r2
   13658:	bl	1b75c <__assert_fail@plt+0xa214>
   1365c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13660:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13664:	ldr	r1, [sp, #12]
   13668:	str	r0, [sp, #8]
   1366c:	mov	r0, r1
   13670:	ldr	r1, [sp, #8]
   13674:	bl	11260 <printf@plt>
   13678:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1367c:	str	r0, [sp, #4]
   13680:	mov	r0, r1
   13684:	bl	13948 <__assert_fail@plt+0x2400>
   13688:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1368c:	bl	13948 <__assert_fail@plt+0x2400>
   13690:	mov	sp, fp
   13694:	pop	{fp, pc}
   13698:	push	{fp, lr}
   1369c:	mov	fp, sp
   136a0:	sub	sp, sp, #16
   136a4:	str	r0, [fp, #-4]
   136a8:	str	r1, [sp, #8]
   136ac:	movw	r0, #0
   136b0:	str	r0, [sp, #4]
   136b4:	ldr	r1, [fp, #-4]
   136b8:	cmp	r1, r0
   136bc:	beq	13734 <__assert_fail@plt+0x21ec>
   136c0:	ldr	r0, [sp, #8]
   136c4:	movw	r1, #0
   136c8:	cmp	r0, r1
   136cc:	beq	13724 <__assert_fail@plt+0x21dc>
   136d0:	ldr	r0, [fp, #-4]
   136d4:	bl	113c8 <strlen@plt>
   136d8:	add	r0, r0, #1
   136dc:	ldr	r1, [sp, #8]
   136e0:	str	r0, [sp]
   136e4:	mov	r0, r1
   136e8:	bl	113c8 <strlen@plt>
   136ec:	ldr	r1, [sp]
   136f0:	add	r0, r1, r0
   136f4:	add	r0, r0, #1
   136f8:	bl	1cba0 <__assert_fail@plt+0xb658>
   136fc:	str	r0, [sp, #4]
   13700:	ldr	r0, [sp, #4]
   13704:	ldr	r1, [fp, #-4]
   13708:	bl	112c0 <stpcpy@plt>
   1370c:	movw	r1, #22621	; 0x585d
   13710:	movt	r1, #2
   13714:	bl	112c0 <stpcpy@plt>
   13718:	ldr	r1, [sp, #8]
   1371c:	bl	112c0 <stpcpy@plt>
   13720:	b	13730 <__assert_fail@plt+0x21e8>
   13724:	ldr	r0, [fp, #-4]
   13728:	bl	1f8a0 <__assert_fail@plt+0xe358>
   1372c:	str	r0, [sp, #4]
   13730:	b	13754 <__assert_fail@plt+0x220c>
   13734:	ldr	r0, [sp, #8]
   13738:	movw	r1, #0
   1373c:	cmp	r0, r1
   13740:	beq	13750 <__assert_fail@plt+0x2208>
   13744:	ldr	r0, [sp, #8]
   13748:	bl	1f8a0 <__assert_fail@plt+0xe358>
   1374c:	str	r0, [sp, #4]
   13750:	b	13754 <__assert_fail@plt+0x220c>
   13754:	ldr	r0, [sp, #4]
   13758:	mov	sp, fp
   1375c:	pop	{fp, pc}
   13760:	push	{fp, lr}
   13764:	mov	fp, sp
   13768:	sub	sp, sp, #24
   1376c:	str	r0, [fp, #-4]
   13770:	str	r1, [fp, #-8]
   13774:	str	r2, [sp, #12]
   13778:	str	r3, [sp, #8]
   1377c:	ldr	r0, [fp, #-4]
   13780:	ldr	r1, [fp, #-8]
   13784:	ldr	r2, [sp, #12]
   13788:	ldr	r3, [sp, #8]
   1378c:	movw	ip, #0
   13790:	str	ip, [sp]
   13794:	bl	114c4 <fchownat@plt>
   13798:	mov	sp, fp
   1379c:	pop	{fp, pc}
   137a0:	push	{fp, lr}
   137a4:	mov	fp, sp
   137a8:	sub	sp, sp, #24
   137ac:	str	r0, [fp, #-4]
   137b0:	str	r1, [fp, #-8]
   137b4:	str	r2, [sp, #12]
   137b8:	str	r3, [sp, #8]
   137bc:	ldr	r0, [fp, #-4]
   137c0:	ldr	r1, [fp, #-8]
   137c4:	ldr	r2, [sp, #12]
   137c8:	ldr	r3, [sp, #8]
   137cc:	movw	ip, #256	; 0x100
   137d0:	str	ip, [sp]
   137d4:	bl	114c4 <fchownat@plt>
   137d8:	mov	sp, fp
   137dc:	pop	{fp, pc}
   137e0:	sub	sp, sp, #4
   137e4:	str	r0, [sp]
   137e8:	ldr	r0, [sp]
   137ec:	movw	r1, #25024	; 0x61c0
   137f0:	movt	r1, #3
   137f4:	str	r0, [r1]
   137f8:	add	sp, sp, #4
   137fc:	bx	lr
   13800:	sub	sp, sp, #4
   13804:	and	r0, r0, #1
   13808:	strb	r0, [sp, #3]
   1380c:	ldrb	r0, [sp, #3]
   13810:	and	r0, r0, #1
   13814:	movw	r1, #25028	; 0x61c4
   13818:	movt	r1, #3
   1381c:	strb	r0, [r1]
   13820:	add	sp, sp, #4
   13824:	bx	lr
   13828:	push	{fp, lr}
   1382c:	mov	fp, sp
   13830:	sub	sp, sp, #24
   13834:	movw	r0, #24988	; 0x619c
   13838:	movt	r0, #3
   1383c:	ldr	r0, [r0]
   13840:	bl	21c50 <__assert_fail@plt+0x10708>
   13844:	cmp	r0, #0
   13848:	beq	13918 <__assert_fail@plt+0x23d0>
   1384c:	movw	r0, #25028	; 0x61c4
   13850:	movt	r0, #3
   13854:	ldrb	r0, [r0]
   13858:	tst	r0, #1
   1385c:	beq	13870 <__assert_fail@plt+0x2328>
   13860:	bl	11404 <__errno_location@plt>
   13864:	ldr	r0, [r0]
   13868:	cmp	r0, #32
   1386c:	beq	13918 <__assert_fail@plt+0x23d0>
   13870:	movw	r0, #22638	; 0x586e
   13874:	movt	r0, #2
   13878:	bl	113b0 <gettext@plt>
   1387c:	str	r0, [fp, #-4]
   13880:	movw	r0, #25024	; 0x61c0
   13884:	movt	r0, #3
   13888:	ldr	r0, [r0]
   1388c:	movw	r1, #0
   13890:	cmp	r0, r1
   13894:	beq	138ec <__assert_fail@plt+0x23a4>
   13898:	bl	11404 <__errno_location@plt>
   1389c:	ldr	r1, [r0]
   138a0:	movw	r0, #25024	; 0x61c0
   138a4:	movt	r0, #3
   138a8:	ldr	r0, [r0]
   138ac:	str	r1, [fp, #-8]
   138b0:	bl	1b858 <__assert_fail@plt+0xa310>
   138b4:	ldr	r1, [fp, #-4]
   138b8:	movw	r2, #0
   138bc:	str	r0, [sp, #12]
   138c0:	mov	r0, r2
   138c4:	ldr	r2, [fp, #-8]
   138c8:	str	r1, [sp, #8]
   138cc:	mov	r1, r2
   138d0:	movw	r2, #20848	; 0x5170
   138d4:	movt	r2, #2
   138d8:	ldr	r3, [sp, #12]
   138dc:	ldr	ip, [sp, #8]
   138e0:	str	ip, [sp]
   138e4:	bl	11344 <error@plt>
   138e8:	b	13908 <__assert_fail@plt+0x23c0>
   138ec:	bl	11404 <__errno_location@plt>
   138f0:	ldr	r1, [r0]
   138f4:	ldr	r3, [fp, #-4]
   138f8:	movw	r0, #0
   138fc:	movw	r2, #20852	; 0x5174
   13900:	movt	r2, #2
   13904:	bl	11344 <error@plt>
   13908:	movw	r0, #24888	; 0x6138
   1390c:	movt	r0, #3
   13910:	ldr	r0, [r0]
   13914:	bl	11290 <_exit@plt>
   13918:	movw	r0, #24984	; 0x6198
   1391c:	movt	r0, #3
   13920:	ldr	r0, [r0]
   13924:	bl	21c50 <__assert_fail@plt+0x10708>
   13928:	cmp	r0, #0
   1392c:	beq	13940 <__assert_fail@plt+0x23f8>
   13930:	movw	r0, #24888	; 0x6138
   13934:	movt	r0, #3
   13938:	ldr	r0, [r0]
   1393c:	bl	11290 <_exit@plt>
   13940:	mov	sp, fp
   13944:	pop	{fp, pc}
   13948:	push	{fp, lr}
   1394c:	mov	fp, sp
   13950:	sub	sp, sp, #16
   13954:	str	r0, [fp, #-4]
   13958:	bl	11404 <__errno_location@plt>
   1395c:	ldr	r0, [r0]
   13960:	str	r0, [sp, #8]
   13964:	ldr	r0, [fp, #-4]
   13968:	bl	11284 <free@plt>
   1396c:	ldr	r0, [sp, #8]
   13970:	str	r0, [sp, #4]
   13974:	bl	11404 <__errno_location@plt>
   13978:	ldr	r1, [sp, #4]
   1397c:	str	r1, [r0]
   13980:	mov	sp, fp
   13984:	pop	{fp, pc}
   13988:	push	{fp, lr}
   1398c:	mov	fp, sp
   13990:	sub	sp, sp, #80	; 0x50
   13994:	ldr	r3, [pc, #1452]	; 13f48 <__assert_fail@plt+0x2a00>
   13998:	str	r0, [fp, #-8]
   1399c:	str	r1, [fp, #-12]
   139a0:	str	r2, [fp, #-16]
   139a4:	movw	r0, #0
   139a8:	str	r0, [fp, #-36]	; 0xffffffdc
   139ac:	str	r0, [sp, #40]	; 0x28
   139b0:	ldr	r0, [fp, #-12]
   139b4:	and	r0, r0, r3
   139b8:	cmp	r0, #0
   139bc:	beq	139d8 <__assert_fail@plt+0x2490>
   139c0:	bl	11404 <__errno_location@plt>
   139c4:	movw	r1, #22
   139c8:	str	r1, [r0]
   139cc:	movw	r0, #0
   139d0:	str	r0, [fp, #-4]
   139d4:	b	13f3c <__assert_fail@plt+0x29f4>
   139d8:	ldr	r0, [fp, #-12]
   139dc:	and	r0, r0, #4
   139e0:	cmp	r0, #0
   139e4:	beq	13a10 <__assert_fail@plt+0x24c8>
   139e8:	ldr	r0, [fp, #-12]
   139ec:	and	r0, r0, #512	; 0x200
   139f0:	cmp	r0, #0
   139f4:	beq	13a10 <__assert_fail@plt+0x24c8>
   139f8:	bl	11404 <__errno_location@plt>
   139fc:	movw	r1, #22
   13a00:	str	r1, [r0]
   13a04:	movw	r0, #0
   13a08:	str	r0, [fp, #-4]
   13a0c:	b	13f3c <__assert_fail@plt+0x29f4>
   13a10:	ldr	r0, [fp, #-12]
   13a14:	and	r0, r0, #18
   13a18:	cmp	r0, #0
   13a1c:	bne	13a38 <__assert_fail@plt+0x24f0>
   13a20:	bl	11404 <__errno_location@plt>
   13a24:	movw	r1, #22
   13a28:	str	r1, [r0]
   13a2c:	movw	r0, #0
   13a30:	str	r0, [fp, #-4]
   13a34:	b	13f3c <__assert_fail@plt+0x29f4>
   13a38:	movw	r0, #1
   13a3c:	movw	r1, #96	; 0x60
   13a40:	bl	21708 <__assert_fail@plt+0x101c0>
   13a44:	str	r0, [fp, #-20]	; 0xffffffec
   13a48:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a4c:	movw	r1, #0
   13a50:	cmp	r0, r1
   13a54:	bne	13a64 <__assert_fail@plt+0x251c>
   13a58:	movw	r0, #0
   13a5c:	str	r0, [fp, #-4]
   13a60:	b	13f3c <__assert_fail@plt+0x29f4>
   13a64:	ldr	r0, [fp, #-16]
   13a68:	ldr	r1, [fp, #-20]	; 0xffffffec
   13a6c:	str	r0, [r1, #44]	; 0x2c
   13a70:	ldr	r0, [fp, #-12]
   13a74:	ldr	r1, [fp, #-20]	; 0xffffffec
   13a78:	str	r0, [r1, #48]	; 0x30
   13a7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a80:	ldr	r0, [r0, #48]	; 0x30
   13a84:	and	r0, r0, #2
   13a88:	cmp	r0, #0
   13a8c:	beq	13ab4 <__assert_fail@plt+0x256c>
   13a90:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a94:	ldr	r1, [r0, #48]	; 0x30
   13a98:	orr	r1, r1, #4
   13a9c:	str	r1, [r0, #48]	; 0x30
   13aa0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13aa4:	ldr	r1, [r0, #48]	; 0x30
   13aa8:	mvn	r2, #512	; 0x200
   13aac:	and	r1, r1, r2
   13ab0:	str	r1, [r0, #48]	; 0x30
   13ab4:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ab8:	mvn	r1, #99	; 0x63
   13abc:	str	r1, [r0, #32]
   13ac0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ac4:	ldr	r0, [r0, #48]	; 0x30
   13ac8:	and	r0, r0, #512	; 0x200
   13acc:	cmp	r0, #0
   13ad0:	beq	13b08 <__assert_fail@plt+0x25c0>
   13ad4:	b	13b08 <__assert_fail@plt+0x25c0>
   13ad8:	ldr	r1, [pc, #1132]	; 13f4c <__assert_fail@plt+0x2a04>
   13adc:	movw	r0, #22651	; 0x587b
   13ae0:	movt	r0, #2
   13ae4:	bl	223dc <__assert_fail@plt+0x10e94>
   13ae8:	str	r0, [sp, #32]
   13aec:	ldr	r0, [sp, #32]
   13af0:	cmp	r0, #0
   13af4:	bge	13afc <__assert_fail@plt+0x25b4>
   13af8:	b	13b04 <__assert_fail@plt+0x25bc>
   13afc:	ldr	r0, [sp, #32]
   13b00:	bl	1150c <close@plt>
   13b04:	b	13b08 <__assert_fail@plt+0x25c0>
   13b08:	ldr	r0, [fp, #-8]
   13b0c:	bl	13f50 <__assert_fail@plt+0x2a08>
   13b10:	str	r0, [sp, #28]
   13b14:	ldr	r0, [fp, #-20]	; 0xffffffec
   13b18:	ldr	r1, [sp, #28]
   13b1c:	cmp	r1, #4096	; 0x1000
   13b20:	str	r0, [sp, #16]
   13b24:	bls	13b34 <__assert_fail@plt+0x25ec>
   13b28:	ldr	r0, [sp, #28]
   13b2c:	str	r0, [sp, #12]
   13b30:	b	13b40 <__assert_fail@plt+0x25f8>
   13b34:	movw	r0, #4096	; 0x1000
   13b38:	str	r0, [sp, #12]
   13b3c:	b	13b40 <__assert_fail@plt+0x25f8>
   13b40:	ldr	r0, [sp, #12]
   13b44:	ldr	r1, [sp, #16]
   13b48:	str	r0, [sp, #8]
   13b4c:	mov	r0, r1
   13b50:	ldr	r1, [sp, #8]
   13b54:	bl	13fc4 <__assert_fail@plt+0x2a7c>
   13b58:	tst	r0, #1
   13b5c:	bne	13b64 <__assert_fail@plt+0x261c>
   13b60:	b	13f2c <__assert_fail@plt+0x29e4>
   13b64:	ldr	r0, [fp, #-8]
   13b68:	ldr	r0, [r0]
   13b6c:	movw	r1, #0
   13b70:	cmp	r0, r1
   13b74:	beq	13bac <__assert_fail@plt+0x2664>
   13b78:	ldr	r0, [fp, #-20]	; 0xffffffec
   13b7c:	movw	r1, #20316	; 0x4f5c
   13b80:	movt	r1, #2
   13b84:	movw	r2, #0
   13b88:	bl	140bc <__assert_fail@plt+0x2b74>
   13b8c:	str	r0, [fp, #-36]	; 0xffffffdc
   13b90:	movw	r1, #0
   13b94:	cmp	r0, r1
   13b98:	bne	13ba0 <__assert_fail@plt+0x2658>
   13b9c:	b	13f20 <__assert_fail@plt+0x29d8>
   13ba0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13ba4:	mvn	r1, #0
   13ba8:	str	r1, [r0, #48]	; 0x30
   13bac:	ldr	r0, [fp, #-16]
   13bb0:	movw	r1, #0
   13bb4:	cmp	r0, r1
   13bb8:	movw	r0, #1
   13bbc:	str	r0, [sp, #4]
   13bc0:	beq	13be0 <__assert_fail@plt+0x2698>
   13bc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   13bc8:	ldr	r0, [r0, #48]	; 0x30
   13bcc:	and	r0, r0, #1024	; 0x400
   13bd0:	cmp	r0, #0
   13bd4:	movw	r0, #0
   13bd8:	movne	r0, #1
   13bdc:	str	r0, [sp, #4]
   13be0:	ldr	r0, [sp, #4]
   13be4:	and	r0, r0, #1
   13be8:	strb	r0, [sp, #39]	; 0x27
   13bec:	movw	r0, #0
   13bf0:	str	r0, [fp, #-28]	; 0xffffffe4
   13bf4:	str	r0, [fp, #-32]	; 0xffffffe0
   13bf8:	ldr	r0, [fp, #-8]
   13bfc:	ldr	r0, [r0]
   13c00:	movw	r1, #0
   13c04:	cmp	r0, r1
   13c08:	beq	13dfc <__assert_fail@plt+0x28b4>
   13c0c:	ldr	r0, [fp, #-8]
   13c10:	ldr	r0, [r0]
   13c14:	bl	113c8 <strlen@plt>
   13c18:	str	r0, [sp, #24]
   13c1c:	ldr	r0, [fp, #-12]
   13c20:	and	r0, r0, #2048	; 0x800
   13c24:	cmp	r0, #0
   13c28:	bne	13ccc <__assert_fail@plt+0x2784>
   13c2c:	ldr	r0, [fp, #-8]
   13c30:	ldr	r0, [r0]
   13c34:	str	r0, [sp, #20]
   13c38:	ldr	r0, [sp, #24]
   13c3c:	movw	r1, #2
   13c40:	cmp	r1, r0
   13c44:	bcs	13cc8 <__assert_fail@plt+0x2780>
   13c48:	ldr	r0, [sp, #20]
   13c4c:	ldr	r1, [sp, #24]
   13c50:	sub	r1, r1, #1
   13c54:	add	r0, r0, r1
   13c58:	ldrb	r0, [r0]
   13c5c:	cmp	r0, #47	; 0x2f
   13c60:	bne	13cc8 <__assert_fail@plt+0x2780>
   13c64:	b	13c68 <__assert_fail@plt+0x2720>
   13c68:	ldr	r0, [sp, #24]
   13c6c:	movw	r1, #1
   13c70:	cmp	r1, r0
   13c74:	movw	r0, #0
   13c78:	str	r0, [sp]
   13c7c:	bcs	13ca4 <__assert_fail@plt+0x275c>
   13c80:	ldr	r0, [sp, #20]
   13c84:	ldr	r1, [sp, #24]
   13c88:	sub	r1, r1, #2
   13c8c:	add	r0, r0, r1
   13c90:	ldrb	r0, [r0]
   13c94:	cmp	r0, #47	; 0x2f
   13c98:	movw	r0, #0
   13c9c:	moveq	r0, #1
   13ca0:	str	r0, [sp]
   13ca4:	ldr	r0, [sp]
   13ca8:	tst	r0, #1
   13cac:	beq	13cc4 <__assert_fail@plt+0x277c>
   13cb0:	ldr	r0, [sp, #24]
   13cb4:	mvn	r1, #0
   13cb8:	add	r0, r0, r1
   13cbc:	str	r0, [sp, #24]
   13cc0:	b	13c68 <__assert_fail@plt+0x2720>
   13cc4:	b	13cc8 <__assert_fail@plt+0x2780>
   13cc8:	b	13ccc <__assert_fail@plt+0x2784>
   13ccc:	ldr	r0, [fp, #-20]	; 0xffffffec
   13cd0:	ldr	r1, [fp, #-8]
   13cd4:	ldr	r1, [r1]
   13cd8:	ldr	r2, [sp, #24]
   13cdc:	bl	140bc <__assert_fail@plt+0x2b74>
   13ce0:	str	r0, [fp, #-24]	; 0xffffffe8
   13ce4:	movw	r1, #0
   13ce8:	cmp	r0, r1
   13cec:	bne	13cf4 <__assert_fail@plt+0x27ac>
   13cf0:	b	13f10 <__assert_fail@plt+0x29c8>
   13cf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13cf8:	movw	r1, #0
   13cfc:	str	r1, [r0, #48]	; 0x30
   13d00:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13d04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13d08:	str	r0, [r1, #4]
   13d0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d10:	add	r0, r0, #168	; 0xa8
   13d14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13d18:	str	r0, [r1, #24]
   13d1c:	ldrb	r0, [sp, #39]	; 0x27
   13d20:	tst	r0, #1
   13d24:	beq	13d58 <__assert_fail@plt+0x2810>
   13d28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13d2c:	movw	r1, #0
   13d30:	cmp	r0, r1
   13d34:	beq	13d58 <__assert_fail@plt+0x2810>
   13d38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d3c:	movw	r1, #11
   13d40:	strh	r1, [r0, #56]	; 0x38
   13d44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d48:	movw	r1, #1
   13d4c:	and	r1, r1, #1
   13d50:	bl	141b4 <__assert_fail@plt+0x2c6c>
   13d54:	b	13d74 <__assert_fail@plt+0x282c>
   13d58:	ldr	r0, [fp, #-20]	; 0xffffffec
   13d5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13d60:	movw	r2, #0
   13d64:	and	r2, r2, #1
   13d68:	bl	1420c <__assert_fail@plt+0x2cc4>
   13d6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13d70:	strh	r0, [r1, #56]	; 0x38
   13d74:	ldr	r0, [fp, #-16]
   13d78:	movw	r1, #0
   13d7c:	cmp	r0, r1
   13d80:	beq	13d9c <__assert_fail@plt+0x2854>
   13d84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13d88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13d8c:	str	r0, [r1, #8]
   13d90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d94:	str	r0, [fp, #-28]	; 0xffffffe4
   13d98:	b	13ddc <__assert_fail@plt+0x2894>
   13d9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13da0:	movw	r1, #0
   13da4:	str	r1, [r0, #8]
   13da8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13dac:	cmp	r0, r1
   13db0:	bne	13dc4 <__assert_fail@plt+0x287c>
   13db4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13db8:	str	r0, [fp, #-28]	; 0xffffffe4
   13dbc:	str	r0, [sp, #40]	; 0x28
   13dc0:	b	13dd8 <__assert_fail@plt+0x2890>
   13dc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13dc8:	ldr	r1, [sp, #40]	; 0x28
   13dcc:	str	r0, [r1, #8]
   13dd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13dd4:	str	r0, [sp, #40]	; 0x28
   13dd8:	b	13ddc <__assert_fail@plt+0x2894>
   13ddc:	b	13de0 <__assert_fail@plt+0x2898>
   13de0:	ldr	r0, [fp, #-8]
   13de4:	add	r0, r0, #4
   13de8:	str	r0, [fp, #-8]
   13dec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13df0:	add	r0, r0, #1
   13df4:	str	r0, [fp, #-32]	; 0xffffffe0
   13df8:	b	13bf8 <__assert_fail@plt+0x26b0>
   13dfc:	ldr	r0, [fp, #-16]
   13e00:	movw	r1, #0
   13e04:	cmp	r0, r1
   13e08:	beq	13e2c <__assert_fail@plt+0x28e4>
   13e0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e10:	cmp	r0, #1
   13e14:	bls	13e2c <__assert_fail@plt+0x28e4>
   13e18:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13e20:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13e24:	bl	14424 <__assert_fail@plt+0x2edc>
   13e28:	str	r0, [fp, #-28]	; 0xffffffe4
   13e2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e30:	movw	r1, #20316	; 0x4f5c
   13e34:	movt	r1, #2
   13e38:	movw	r2, #0
   13e3c:	bl	140bc <__assert_fail@plt+0x2b74>
   13e40:	ldr	r1, [fp, #-20]	; 0xffffffec
   13e44:	str	r0, [r1]
   13e48:	movw	r1, #0
   13e4c:	cmp	r0, r1
   13e50:	bne	13e58 <__assert_fail@plt+0x2910>
   13e54:	b	13f10 <__assert_fail@plt+0x29c8>
   13e58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13e5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13e60:	ldr	r1, [r1]
   13e64:	str	r0, [r1, #8]
   13e68:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e6c:	ldr	r0, [r0]
   13e70:	movw	r1, #9
   13e74:	strh	r1, [r0, #56]	; 0x38
   13e78:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e7c:	ldr	r0, [r0]
   13e80:	movw	r1, #1
   13e84:	str	r1, [r0, #48]	; 0x30
   13e88:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e8c:	bl	145ec <__assert_fail@plt+0x30a4>
   13e90:	tst	r0, #1
   13e94:	bne	13e9c <__assert_fail@plt+0x2954>
   13e98:	b	13f10 <__assert_fail@plt+0x29c8>
   13e9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ea0:	ldr	r0, [r0, #48]	; 0x30
   13ea4:	and	r0, r0, #4
   13ea8:	cmp	r0, #0
   13eac:	bne	13ef4 <__assert_fail@plt+0x29ac>
   13eb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13eb4:	ldr	r0, [r0, #48]	; 0x30
   13eb8:	and	r0, r0, #512	; 0x200
   13ebc:	cmp	r0, #0
   13ec0:	bne	13ef4 <__assert_fail@plt+0x29ac>
   13ec4:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ec8:	movw	r1, #22651	; 0x587b
   13ecc:	movt	r1, #2
   13ed0:	bl	146c8 <__assert_fail@plt+0x3180>
   13ed4:	ldr	r1, [fp, #-20]	; 0xffffffec
   13ed8:	str	r0, [r1, #28]
   13edc:	cmp	r0, #0
   13ee0:	bge	13ef4 <__assert_fail@plt+0x29ac>
   13ee4:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ee8:	ldr	r1, [r0, #48]	; 0x30
   13eec:	orr	r1, r1, #4
   13ef0:	str	r1, [r0, #48]	; 0x30
   13ef4:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ef8:	add	r0, r0, #60	; 0x3c
   13efc:	mvn	r1, #0
   13f00:	bl	19040 <__assert_fail@plt+0x7af8>
   13f04:	ldr	r0, [fp, #-20]	; 0xffffffec
   13f08:	str	r0, [fp, #-4]
   13f0c:	b	13f3c <__assert_fail@plt+0x29f4>
   13f10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13f14:	bl	14764 <__assert_fail@plt+0x321c>
   13f18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13f1c:	bl	13948 <__assert_fail@plt+0x2400>
   13f20:	ldr	r0, [fp, #-20]	; 0xffffffec
   13f24:	ldr	r0, [r0, #24]
   13f28:	bl	13948 <__assert_fail@plt+0x2400>
   13f2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13f30:	bl	13948 <__assert_fail@plt+0x2400>
   13f34:	movw	r0, #0
   13f38:	str	r0, [fp, #-4]
   13f3c:	ldr	r0, [fp, #-4]
   13f40:	mov	sp, fp
   13f44:	pop	{fp, pc}
   13f48:			; <UNDEFINED> instruction: 0xfffff000
   13f4c:	andeq	r0, r8, r0
   13f50:	push	{fp, lr}
   13f54:	mov	fp, sp
   13f58:	sub	sp, sp, #16
   13f5c:	str	r0, [fp, #-4]
   13f60:	movw	r0, #0
   13f64:	str	r0, [sp, #4]
   13f68:	ldr	r0, [fp, #-4]
   13f6c:	ldr	r0, [r0]
   13f70:	movw	r1, #0
   13f74:	cmp	r0, r1
   13f78:	beq	13fb4 <__assert_fail@plt+0x2a6c>
   13f7c:	ldr	r0, [fp, #-4]
   13f80:	ldr	r0, [r0]
   13f84:	bl	113c8 <strlen@plt>
   13f88:	str	r0, [sp, #8]
   13f8c:	ldr	r1, [sp, #4]
   13f90:	cmp	r0, r1
   13f94:	bls	13fa0 <__assert_fail@plt+0x2a58>
   13f98:	ldr	r0, [sp, #8]
   13f9c:	str	r0, [sp, #4]
   13fa0:	b	13fa4 <__assert_fail@plt+0x2a5c>
   13fa4:	ldr	r0, [fp, #-4]
   13fa8:	add	r0, r0, #4
   13fac:	str	r0, [fp, #-4]
   13fb0:	b	13f68 <__assert_fail@plt+0x2a20>
   13fb4:	ldr	r0, [sp, #4]
   13fb8:	add	r0, r0, #1
   13fbc:	mov	sp, fp
   13fc0:	pop	{fp, pc}
   13fc4:	push	{fp, lr}
   13fc8:	mov	fp, sp
   13fcc:	sub	sp, sp, #24
   13fd0:	str	r0, [fp, #-8]
   13fd4:	str	r1, [sp, #12]
   13fd8:	ldr	r0, [fp, #-8]
   13fdc:	ldr	r0, [r0, #36]	; 0x24
   13fe0:	ldr	r1, [sp, #12]
   13fe4:	add	r0, r0, r1
   13fe8:	add	r0, r0, #256	; 0x100
   13fec:	str	r0, [sp, #4]
   13ff0:	ldr	r0, [sp, #4]
   13ff4:	ldr	r1, [fp, #-8]
   13ff8:	ldr	r1, [r1, #36]	; 0x24
   13ffc:	cmp	r0, r1
   14000:	bcs	14038 <__assert_fail@plt+0x2af0>
   14004:	ldr	r0, [fp, #-8]
   14008:	ldr	r0, [r0, #24]
   1400c:	bl	13948 <__assert_fail@plt+0x2400>
   14010:	ldr	r0, [fp, #-8]
   14014:	movw	r1, #0
   14018:	str	r1, [r0, #24]
   1401c:	bl	11404 <__errno_location@plt>
   14020:	movw	r1, #36	; 0x24
   14024:	str	r1, [r0]
   14028:	movw	r0, #0
   1402c:	and	r0, r0, #1
   14030:	strb	r0, [fp, #-1]
   14034:	b	140ac <__assert_fail@plt+0x2b64>
   14038:	ldr	r0, [sp, #4]
   1403c:	ldr	r1, [fp, #-8]
   14040:	str	r0, [r1, #36]	; 0x24
   14044:	ldr	r0, [fp, #-8]
   14048:	ldr	r0, [r0, #24]
   1404c:	ldr	r1, [fp, #-8]
   14050:	ldr	r1, [r1, #36]	; 0x24
   14054:	bl	21814 <__assert_fail@plt+0x102cc>
   14058:	str	r0, [sp, #8]
   1405c:	ldr	r0, [sp, #8]
   14060:	movw	r1, #0
   14064:	cmp	r0, r1
   14068:	bne	14094 <__assert_fail@plt+0x2b4c>
   1406c:	ldr	r0, [fp, #-8]
   14070:	ldr	r0, [r0, #24]
   14074:	bl	13948 <__assert_fail@plt+0x2400>
   14078:	ldr	r0, [fp, #-8]
   1407c:	movw	r1, #0
   14080:	str	r1, [r0, #24]
   14084:	movw	r0, #0
   14088:	and	r0, r0, #1
   1408c:	strb	r0, [fp, #-1]
   14090:	b	140ac <__assert_fail@plt+0x2b64>
   14094:	ldr	r0, [sp, #8]
   14098:	ldr	r1, [fp, #-8]
   1409c:	str	r0, [r1, #24]
   140a0:	movw	r0, #1
   140a4:	and	r0, r0, #1
   140a8:	strb	r0, [fp, #-1]
   140ac:	ldrb	r0, [fp, #-1]
   140b0:	and	r0, r0, #1
   140b4:	mov	sp, fp
   140b8:	pop	{fp, pc}
   140bc:	push	{fp, lr}
   140c0:	mov	fp, sp
   140c4:	sub	sp, sp, #24
   140c8:	str	r0, [fp, #-8]
   140cc:	str	r1, [sp, #12]
   140d0:	str	r2, [sp, #8]
   140d4:	ldr	r0, [sp, #8]
   140d8:	add	r0, r0, #1
   140dc:	add	r0, r0, #175	; 0xaf
   140e0:	mvn	r1, #7
   140e4:	and	r0, r0, r1
   140e8:	str	r0, [sp]
   140ec:	ldr	r0, [sp]
   140f0:	bl	217a4 <__assert_fail@plt+0x1025c>
   140f4:	str	r0, [sp, #4]
   140f8:	movw	r1, #0
   140fc:	cmp	r0, r1
   14100:	bne	14110 <__assert_fail@plt+0x2bc8>
   14104:	movw	r0, #0
   14108:	str	r0, [fp, #-4]
   1410c:	b	141a8 <__assert_fail@plt+0x2c60>
   14110:	ldr	r0, [sp, #4]
   14114:	add	r0, r0, #168	; 0xa8
   14118:	ldr	r1, [sp, #12]
   1411c:	ldr	r2, [sp, #8]
   14120:	bl	1129c <memcpy@plt>
   14124:	ldr	r0, [sp, #4]
   14128:	add	r0, r0, #168	; 0xa8
   1412c:	ldr	r1, [sp, #8]
   14130:	add	r0, r0, r1
   14134:	movw	r1, #0
   14138:	strb	r1, [r0]
   1413c:	ldr	r0, [sp, #8]
   14140:	ldr	r1, [sp, #4]
   14144:	str	r0, [r1, #52]	; 0x34
   14148:	ldr	r0, [fp, #-8]
   1414c:	ldr	r1, [sp, #4]
   14150:	str	r0, [r1, #44]	; 0x2c
   14154:	ldr	r0, [fp, #-8]
   14158:	ldr	r0, [r0, #24]
   1415c:	ldr	r1, [sp, #4]
   14160:	str	r0, [r1, #28]
   14164:	ldr	r0, [sp, #4]
   14168:	movw	r1, #0
   1416c:	str	r1, [r0, #32]
   14170:	ldr	r0, [sp, #4]
   14174:	str	r1, [r0, #12]
   14178:	ldr	r0, [sp, #4]
   1417c:	movw	r2, #0
   14180:	strh	r2, [r0, #58]	; 0x3a
   14184:	ldr	r0, [sp, #4]
   14188:	movw	r2, #3
   1418c:	strh	r2, [r0, #60]	; 0x3c
   14190:	ldr	r0, [sp, #4]
   14194:	str	r1, [r0, #16]
   14198:	ldr	r0, [sp, #4]
   1419c:	str	r1, [r0, #20]
   141a0:	ldr	r0, [sp, #4]
   141a4:	str	r0, [fp, #-4]
   141a8:	ldr	r0, [fp, #-4]
   141ac:	mov	sp, fp
   141b0:	pop	{fp, pc}
   141b4:	push	{fp, lr}
   141b8:	mov	fp, sp
   141bc:	sub	sp, sp, #8
   141c0:	str	r0, [sp, #4]
   141c4:	and	r0, r1, #1
   141c8:	strb	r0, [sp, #3]
   141cc:	ldr	r0, [sp, #4]
   141d0:	ldrh	r0, [r0, #56]	; 0x38
   141d4:	cmp	r0, #11
   141d8:	beq	141e0 <__assert_fail@plt+0x2c98>
   141dc:	bl	11500 <abort@plt>
   141e0:	b	141e4 <__assert_fail@plt+0x2c9c>
   141e4:	ldrb	r0, [sp, #3]
   141e8:	mov	r1, #1
   141ec:	tst	r0, #1
   141f0:	movwne	r1, #2
   141f4:	ldr	r0, [sp, #4]
   141f8:	mov	r2, #0
   141fc:	str	r2, [r0, #116]	; 0x74
   14200:	str	r1, [r0, #112]	; 0x70
   14204:	mov	sp, fp
   14208:	pop	{fp, pc}
   1420c:	push	{fp, lr}
   14210:	mov	fp, sp
   14214:	sub	sp, sp, #24
   14218:	str	r0, [fp, #-8]
   1421c:	str	r1, [sp, #12]
   14220:	and	r0, r2, #1
   14224:	strb	r0, [sp, #11]
   14228:	ldr	r0, [sp, #12]
   1422c:	add	r0, r0, #64	; 0x40
   14230:	str	r0, [sp, #4]
   14234:	ldr	r0, [sp, #12]
   14238:	ldr	r0, [r0, #48]	; 0x30
   1423c:	cmp	r0, #0
   14240:	bne	14260 <__assert_fail@plt+0x2d18>
   14244:	ldr	r0, [fp, #-8]
   14248:	ldr	r0, [r0, #48]	; 0x30
   1424c:	and	r0, r0, #1
   14250:	cmp	r0, #0
   14254:	beq	14260 <__assert_fail@plt+0x2d18>
   14258:	movw	r0, #1
   1425c:	strb	r0, [sp, #11]
   14260:	ldr	r0, [fp, #-8]
   14264:	ldr	r0, [r0, #48]	; 0x30
   14268:	and	r0, r0, #2
   1426c:	cmp	r0, #0
   14270:	bne	14280 <__assert_fail@plt+0x2d38>
   14274:	ldrb	r0, [sp, #11]
   14278:	tst	r0, #1
   1427c:	beq	142f0 <__assert_fail@plt+0x2da8>
   14280:	ldr	r0, [sp, #12]
   14284:	ldr	r0, [r0, #24]
   14288:	ldr	r1, [sp, #4]
   1428c:	bl	24754 <__assert_fail@plt+0x1320c>
   14290:	cmp	r0, #0
   14294:	beq	142ec <__assert_fail@plt+0x2da4>
   14298:	bl	11404 <__errno_location@plt>
   1429c:	ldr	r0, [r0]
   142a0:	cmp	r0, #2
   142a4:	bne	142d8 <__assert_fail@plt+0x2d90>
   142a8:	ldr	r0, [sp, #12]
   142ac:	ldr	r0, [r0, #24]
   142b0:	ldr	r1, [sp, #4]
   142b4:	bl	24774 <__assert_fail@plt+0x1322c>
   142b8:	cmp	r0, #0
   142bc:	bne	142d8 <__assert_fail@plt+0x2d90>
   142c0:	bl	11404 <__errno_location@plt>
   142c4:	movw	r1, #0
   142c8:	str	r1, [r0]
   142cc:	movw	r0, #13
   142d0:	strh	r0, [fp, #-2]
   142d4:	b	14418 <__assert_fail@plt+0x2ed0>
   142d8:	bl	11404 <__errno_location@plt>
   142dc:	ldr	r0, [r0]
   142e0:	ldr	r1, [sp, #12]
   142e4:	str	r0, [r1, #32]
   142e8:	b	14324 <__assert_fail@plt+0x2ddc>
   142ec:	b	14348 <__assert_fail@plt+0x2e00>
   142f0:	ldr	r0, [fp, #-8]
   142f4:	ldr	r0, [r0, #32]
   142f8:	ldr	r1, [sp, #12]
   142fc:	ldr	r1, [r1, #24]
   14300:	ldr	r2, [sp, #4]
   14304:	movw	r3, #256	; 0x100
   14308:	bl	24784 <__assert_fail@plt+0x1323c>
   1430c:	cmp	r0, #0
   14310:	beq	14344 <__assert_fail@plt+0x2dfc>
   14314:	bl	11404 <__errno_location@plt>
   14318:	ldr	r0, [r0]
   1431c:	ldr	r1, [sp, #12]
   14320:	str	r0, [r1, #32]
   14324:	ldr	r0, [sp, #4]
   14328:	movw	r1, #0
   1432c:	and	r1, r1, #255	; 0xff
   14330:	movw	r2, #104	; 0x68
   14334:	bl	1141c <memset@plt>
   14338:	movw	r0, #10
   1433c:	strh	r0, [fp, #-2]
   14340:	b	14418 <__assert_fail@plt+0x2ed0>
   14344:	b	14348 <__assert_fail@plt+0x2e00>
   14348:	ldr	r0, [sp, #4]
   1434c:	ldr	r0, [r0, #16]
   14350:	and	r0, r0, #61440	; 0xf000
   14354:	cmp	r0, #16384	; 0x4000
   14358:	bne	143d0 <__assert_fail@plt+0x2e88>
   1435c:	ldr	r0, [sp, #12]
   14360:	ldrb	r0, [r0, #168]	; 0xa8
   14364:	cmp	r0, #46	; 0x2e
   14368:	bne	143c4 <__assert_fail@plt+0x2e7c>
   1436c:	ldr	r0, [sp, #12]
   14370:	ldrsb	r0, [r0, #169]	; 0xa9
   14374:	cmp	r0, #0
   14378:	beq	1439c <__assert_fail@plt+0x2e54>
   1437c:	ldr	r0, [sp, #12]
   14380:	ldrb	r0, [r0, #169]	; 0xa9
   14384:	cmp	r0, #46	; 0x2e
   14388:	bne	143c4 <__assert_fail@plt+0x2e7c>
   1438c:	ldr	r0, [sp, #12]
   14390:	ldrsb	r0, [r0, #170]	; 0xaa
   14394:	cmp	r0, #0
   14398:	bne	143c4 <__assert_fail@plt+0x2e7c>
   1439c:	ldr	r0, [sp, #12]
   143a0:	ldr	r0, [r0, #48]	; 0x30
   143a4:	cmp	r0, #0
   143a8:	movw	r0, #0
   143ac:	moveq	r0, #1
   143b0:	tst	r0, #1
   143b4:	movw	r0, #1
   143b8:	moveq	r0, #5
   143bc:	strh	r0, [fp, #-2]
   143c0:	b	14418 <__assert_fail@plt+0x2ed0>
   143c4:	movw	r0, #1
   143c8:	strh	r0, [fp, #-2]
   143cc:	b	14418 <__assert_fail@plt+0x2ed0>
   143d0:	ldr	r0, [sp, #4]
   143d4:	ldr	r0, [r0, #16]
   143d8:	and	r0, r0, #61440	; 0xf000
   143dc:	cmp	r0, #40960	; 0xa000
   143e0:	bne	143f0 <__assert_fail@plt+0x2ea8>
   143e4:	movw	r0, #12
   143e8:	strh	r0, [fp, #-2]
   143ec:	b	14418 <__assert_fail@plt+0x2ed0>
   143f0:	ldr	r0, [sp, #4]
   143f4:	ldr	r0, [r0, #16]
   143f8:	and	r0, r0, #61440	; 0xf000
   143fc:	cmp	r0, #32768	; 0x8000
   14400:	bne	14410 <__assert_fail@plt+0x2ec8>
   14404:	movw	r0, #8
   14408:	strh	r0, [fp, #-2]
   1440c:	b	14418 <__assert_fail@plt+0x2ed0>
   14410:	movw	r0, #3
   14414:	strh	r0, [fp, #-2]
   14418:	ldrh	r0, [fp, #-2]
   1441c:	mov	sp, fp
   14420:	pop	{fp, pc}
   14424:	push	{fp, lr}
   14428:	mov	fp, sp
   1442c:	sub	sp, sp, #48	; 0x30
   14430:	add	r3, sp, #20
   14434:	str	r0, [fp, #-8]
   14438:	str	r1, [fp, #-12]
   1443c:	str	r2, [fp, #-16]
   14440:	mov	r0, r3
   14444:	cmp	r3, r0
   14448:	bne	1445c <__assert_fail@plt+0x2f14>
   1444c:	ldr	r0, [fp, #-8]
   14450:	ldr	r0, [r0, #44]	; 0x2c
   14454:	str	r0, [sp, #8]
   14458:	b	1446c <__assert_fail@plt+0x2f24>
   1445c:	movw	r0, #29576	; 0x7388
   14460:	movt	r0, #1
   14464:	str	r0, [sp, #8]
   14468:	b	1446c <__assert_fail@plt+0x2f24>
   1446c:	ldr	r0, [sp, #8]
   14470:	str	r0, [sp, #16]
   14474:	ldr	r0, [fp, #-16]
   14478:	ldr	r1, [fp, #-8]
   1447c:	ldr	r1, [r1, #40]	; 0x28
   14480:	cmp	r0, r1
   14484:	bls	14514 <__assert_fail@plt+0x2fcc>
   14488:	ldr	r0, [pc, #344]	; 145e8 <__assert_fail@plt+0x30a0>
   1448c:	ldr	r1, [fp, #-16]
   14490:	add	r1, r1, #40	; 0x28
   14494:	ldr	r2, [fp, #-8]
   14498:	str	r1, [r2, #40]	; 0x28
   1449c:	ldr	r1, [fp, #-8]
   144a0:	ldr	r1, [r1, #40]	; 0x28
   144a4:	cmp	r0, r1
   144a8:	bcc	144dc <__assert_fail@plt+0x2f94>
   144ac:	ldr	r0, [fp, #-8]
   144b0:	ldr	r1, [r0, #8]
   144b4:	ldr	r0, [r0, #40]	; 0x28
   144b8:	lsl	r0, r0, #2
   144bc:	str	r0, [sp, #4]
   144c0:	mov	r0, r1
   144c4:	ldr	r1, [sp, #4]
   144c8:	bl	21814 <__assert_fail@plt+0x102cc>
   144cc:	str	r0, [sp, #12]
   144d0:	movw	r1, #0
   144d4:	cmp	r0, r1
   144d8:	bne	14508 <__assert_fail@plt+0x2fc0>
   144dc:	ldr	r0, [fp, #-8]
   144e0:	ldr	r0, [r0, #8]
   144e4:	bl	13948 <__assert_fail@plt+0x2400>
   144e8:	ldr	r0, [fp, #-8]
   144ec:	movw	r1, #0
   144f0:	str	r1, [r0, #8]
   144f4:	ldr	r0, [fp, #-8]
   144f8:	str	r1, [r0, #40]	; 0x28
   144fc:	ldr	r0, [fp, #-12]
   14500:	str	r0, [fp, #-4]
   14504:	b	145dc <__assert_fail@plt+0x3094>
   14508:	ldr	r0, [sp, #12]
   1450c:	ldr	r1, [fp, #-8]
   14510:	str	r0, [r1, #8]
   14514:	ldr	r0, [fp, #-8]
   14518:	ldr	r0, [r0, #8]
   1451c:	str	r0, [fp, #-20]	; 0xffffffec
   14520:	ldr	r0, [fp, #-12]
   14524:	str	r0, [sp, #24]
   14528:	ldr	r0, [sp, #24]
   1452c:	movw	r1, #0
   14530:	cmp	r0, r1
   14534:	beq	1455c <__assert_fail@plt+0x3014>
   14538:	ldr	r0, [sp, #24]
   1453c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14540:	add	r2, r1, #4
   14544:	str	r2, [fp, #-20]	; 0xffffffec
   14548:	str	r0, [r1]
   1454c:	ldr	r0, [sp, #24]
   14550:	ldr	r0, [r0, #8]
   14554:	str	r0, [sp, #24]
   14558:	b	14528 <__assert_fail@plt+0x2fe0>
   1455c:	ldr	r0, [fp, #-8]
   14560:	ldr	r0, [r0, #8]
   14564:	ldr	r1, [fp, #-16]
   14568:	ldr	r3, [sp, #16]
   1456c:	movw	r2, #4
   14570:	bl	114b8 <qsort@plt>
   14574:	ldr	r0, [fp, #-8]
   14578:	ldr	r0, [r0, #8]
   1457c:	str	r0, [fp, #-20]	; 0xffffffec
   14580:	ldr	r0, [r0]
   14584:	str	r0, [fp, #-12]
   14588:	ldr	r0, [fp, #-16]
   1458c:	mvn	r1, #0
   14590:	add	r0, r0, r1
   14594:	str	r0, [fp, #-16]
   14598:	cmp	r0, #0
   1459c:	beq	145c4 <__assert_fail@plt+0x307c>
   145a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   145a4:	ldr	r0, [r0, #4]
   145a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   145ac:	ldr	r1, [r1]
   145b0:	str	r0, [r1, #8]
   145b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   145b8:	add	r0, r0, #4
   145bc:	str	r0, [fp, #-20]	; 0xffffffec
   145c0:	b	14588 <__assert_fail@plt+0x3040>
   145c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   145c8:	ldr	r0, [r0]
   145cc:	movw	r1, #0
   145d0:	str	r1, [r0, #8]
   145d4:	ldr	r0, [fp, #-12]
   145d8:	str	r0, [fp, #-4]
   145dc:	ldr	r0, [fp, #-4]
   145e0:	mov	sp, fp
   145e4:	pop	{fp, pc}
   145e8:	svccc	0x00ffffff
   145ec:	push	{fp, lr}
   145f0:	mov	fp, sp
   145f4:	sub	sp, sp, #16
   145f8:	str	r0, [sp, #8]
   145fc:	ldr	r0, [sp, #8]
   14600:	ldr	r0, [r0, #48]	; 0x30
   14604:	movw	r1, #258	; 0x102
   14608:	and	r0, r0, r1
   1460c:	cmp	r0, #0
   14610:	beq	1466c <__assert_fail@plt+0x3124>
   14614:	movw	r0, #31
   14618:	movw	r1, #0
   1461c:	movw	r2, #27756	; 0x6c6c
   14620:	movt	r2, #1
   14624:	movw	r3, #27836	; 0x6cbc
   14628:	movt	r3, #1
   1462c:	movw	ip, #14664	; 0x3948
   14630:	movt	ip, #1
   14634:	str	ip, [sp]
   14638:	bl	17bec <__assert_fail@plt+0x66a4>
   1463c:	ldr	r1, [sp, #8]
   14640:	str	r0, [r1, #56]	; 0x38
   14644:	ldr	r0, [sp, #8]
   14648:	ldr	r0, [r0, #56]	; 0x38
   1464c:	movw	r1, #0
   14650:	cmp	r0, r1
   14654:	bne	14668 <__assert_fail@plt+0x3120>
   14658:	movw	r0, #0
   1465c:	and	r0, r0, #1
   14660:	strb	r0, [fp, #-1]
   14664:	b	146b8 <__assert_fail@plt+0x3170>
   14668:	b	146ac <__assert_fail@plt+0x3164>
   1466c:	movw	r0, #32
   14670:	bl	217a4 <__assert_fail@plt+0x1025c>
   14674:	ldr	r1, [sp, #8]
   14678:	str	r0, [r1, #56]	; 0x38
   1467c:	ldr	r0, [sp, #8]
   14680:	ldr	r0, [r0, #56]	; 0x38
   14684:	movw	r1, #0
   14688:	cmp	r0, r1
   1468c:	bne	146a0 <__assert_fail@plt+0x3158>
   14690:	movw	r0, #0
   14694:	and	r0, r0, #1
   14698:	strb	r0, [fp, #-1]
   1469c:	b	146b8 <__assert_fail@plt+0x3170>
   146a0:	ldr	r0, [sp, #8]
   146a4:	ldr	r0, [r0, #56]	; 0x38
   146a8:	bl	21d20 <__assert_fail@plt+0x107d8>
   146ac:	movw	r0, #1
   146b0:	and	r0, r0, #1
   146b4:	strb	r0, [fp, #-1]
   146b8:	ldrb	r0, [fp, #-1]
   146bc:	and	r0, r0, #1
   146c0:	mov	sp, fp
   146c4:	pop	{fp, pc}
   146c8:	push	{fp, lr}
   146cc:	mov	fp, sp
   146d0:	sub	sp, sp, #24
   146d4:	ldr	r2, [pc, #132]	; 14760 <__assert_fail@plt+0x3218>
   146d8:	str	r0, [fp, #-4]
   146dc:	str	r1, [fp, #-8]
   146e0:	ldr	r0, [fp, #-4]
   146e4:	ldr	r0, [r0, #48]	; 0x30
   146e8:	and	r0, r0, #16
   146ec:	cmp	r0, #0
   146f0:	movw	r0, #0
   146f4:	movne	r0, #1
   146f8:	tst	r0, #1
   146fc:	movw	r0, #32768	; 0x8000
   14700:	moveq	r0, #0
   14704:	orr	r0, r0, r2
   14708:	str	r0, [sp, #12]
   1470c:	ldr	r0, [fp, #-4]
   14710:	ldr	r0, [r0, #48]	; 0x30
   14714:	and	r0, r0, #512	; 0x200
   14718:	cmp	r0, #0
   1471c:	beq	1473c <__assert_fail@plt+0x31f4>
   14720:	ldr	r0, [fp, #-4]
   14724:	ldr	r0, [r0, #32]
   14728:	ldr	r1, [fp, #-8]
   1472c:	ldr	r2, [sp, #12]
   14730:	bl	1934c <__assert_fail@plt+0x7e04>
   14734:	str	r0, [sp, #4]
   14738:	b	1474c <__assert_fail@plt+0x3204>
   1473c:	ldr	r0, [fp, #-8]
   14740:	ldr	r1, [sp, #12]
   14744:	bl	223dc <__assert_fail@plt+0x10e94>
   14748:	str	r0, [sp, #4]
   1474c:	ldr	r0, [sp, #4]
   14750:	str	r0, [sp, #8]
   14754:	ldr	r0, [sp, #8]
   14758:	mov	sp, fp
   1475c:	pop	{fp, pc}
   14760:	andeq	r4, r8, r0, lsl #18
   14764:	push	{fp, lr}
   14768:	mov	fp, sp
   1476c:	sub	sp, sp, #8
   14770:	str	r0, [sp, #4]
   14774:	ldr	r0, [sp, #4]
   14778:	str	r0, [sp]
   1477c:	movw	r1, #0
   14780:	cmp	r0, r1
   14784:	beq	147c0 <__assert_fail@plt+0x3278>
   14788:	ldr	r0, [sp, #4]
   1478c:	ldr	r0, [r0, #8]
   14790:	str	r0, [sp, #4]
   14794:	ldr	r0, [sp]
   14798:	ldr	r0, [r0, #12]
   1479c:	movw	r1, #0
   147a0:	cmp	r0, r1
   147a4:	beq	147b4 <__assert_fail@plt+0x326c>
   147a8:	ldr	r0, [sp]
   147ac:	ldr	r0, [r0, #12]
   147b0:	bl	11524 <closedir@plt>
   147b4:	ldr	r0, [sp]
   147b8:	bl	13948 <__assert_fail@plt+0x2400>
   147bc:	b	14774 <__assert_fail@plt+0x322c>
   147c0:	mov	sp, fp
   147c4:	pop	{fp, pc}
   147c8:	push	{fp, lr}
   147cc:	mov	fp, sp
   147d0:	sub	sp, sp, #32
   147d4:	str	r0, [fp, #-8]
   147d8:	movw	r0, #0
   147dc:	str	r0, [sp, #12]
   147e0:	ldr	r1, [fp, #-8]
   147e4:	ldr	r1, [r1]
   147e8:	cmp	r1, r0
   147ec:	beq	14860 <__assert_fail@plt+0x3318>
   147f0:	ldr	r0, [fp, #-8]
   147f4:	ldr	r0, [r0]
   147f8:	str	r0, [sp, #16]
   147fc:	ldr	r0, [sp, #16]
   14800:	ldr	r0, [r0, #48]	; 0x30
   14804:	cmp	r0, #0
   14808:	blt	14858 <__assert_fail@plt+0x3310>
   1480c:	ldr	r0, [sp, #16]
   14810:	str	r0, [fp, #-12]
   14814:	ldr	r0, [sp, #16]
   14818:	ldr	r0, [r0, #8]
   1481c:	movw	r1, #0
   14820:	cmp	r0, r1
   14824:	beq	14838 <__assert_fail@plt+0x32f0>
   14828:	ldr	r0, [sp, #16]
   1482c:	ldr	r0, [r0, #8]
   14830:	str	r0, [sp, #8]
   14834:	b	14844 <__assert_fail@plt+0x32fc>
   14838:	ldr	r0, [sp, #16]
   1483c:	ldr	r0, [r0, #4]
   14840:	str	r0, [sp, #8]
   14844:	ldr	r0, [sp, #8]
   14848:	str	r0, [sp, #16]
   1484c:	ldr	r0, [fp, #-12]
   14850:	bl	13948 <__assert_fail@plt+0x2400>
   14854:	b	147fc <__assert_fail@plt+0x32b4>
   14858:	ldr	r0, [sp, #16]
   1485c:	bl	13948 <__assert_fail@plt+0x2400>
   14860:	ldr	r0, [fp, #-8]
   14864:	ldr	r0, [r0, #4]
   14868:	movw	r1, #0
   1486c:	cmp	r0, r1
   14870:	beq	14880 <__assert_fail@plt+0x3338>
   14874:	ldr	r0, [fp, #-8]
   14878:	ldr	r0, [r0, #4]
   1487c:	bl	14764 <__assert_fail@plt+0x321c>
   14880:	ldr	r0, [fp, #-8]
   14884:	ldr	r0, [r0, #8]
   14888:	bl	13948 <__assert_fail@plt+0x2400>
   1488c:	ldr	r0, [fp, #-8]
   14890:	ldr	r0, [r0, #24]
   14894:	bl	13948 <__assert_fail@plt+0x2400>
   14898:	ldr	r0, [fp, #-8]
   1489c:	ldr	r0, [r0, #48]	; 0x30
   148a0:	and	r0, r0, #512	; 0x200
   148a4:	cmp	r0, #0
   148a8:	beq	148e8 <__assert_fail@plt+0x33a0>
   148ac:	ldr	r0, [fp, #-8]
   148b0:	ldr	r0, [r0, #32]
   148b4:	movw	r1, #0
   148b8:	cmp	r1, r0
   148bc:	bgt	148e4 <__assert_fail@plt+0x339c>
   148c0:	ldr	r0, [fp, #-8]
   148c4:	ldr	r0, [r0, #32]
   148c8:	bl	1150c <close@plt>
   148cc:	cmp	r0, #0
   148d0:	beq	148e0 <__assert_fail@plt+0x3398>
   148d4:	bl	11404 <__errno_location@plt>
   148d8:	ldr	r0, [r0]
   148dc:	str	r0, [sp, #12]
   148e0:	b	148e4 <__assert_fail@plt+0x339c>
   148e4:	b	14954 <__assert_fail@plt+0x340c>
   148e8:	ldr	r0, [fp, #-8]
   148ec:	ldr	r0, [r0, #48]	; 0x30
   148f0:	and	r0, r0, #4
   148f4:	cmp	r0, #0
   148f8:	bne	14950 <__assert_fail@plt+0x3408>
   148fc:	ldr	r0, [fp, #-8]
   14900:	ldr	r0, [r0, #28]
   14904:	bl	114ac <fchdir@plt>
   14908:	cmp	r0, #0
   1490c:	beq	1491c <__assert_fail@plt+0x33d4>
   14910:	bl	11404 <__errno_location@plt>
   14914:	ldr	r0, [r0]
   14918:	str	r0, [sp, #12]
   1491c:	ldr	r0, [fp, #-8]
   14920:	ldr	r0, [r0, #28]
   14924:	bl	1150c <close@plt>
   14928:	cmp	r0, #0
   1492c:	beq	1494c <__assert_fail@plt+0x3404>
   14930:	ldr	r0, [sp, #12]
   14934:	cmp	r0, #0
   14938:	bne	14948 <__assert_fail@plt+0x3400>
   1493c:	bl	11404 <__errno_location@plt>
   14940:	ldr	r0, [r0]
   14944:	str	r0, [sp, #12]
   14948:	b	1494c <__assert_fail@plt+0x3404>
   1494c:	b	14950 <__assert_fail@plt+0x3408>
   14950:	b	14954 <__assert_fail@plt+0x340c>
   14954:	ldr	r0, [fp, #-8]
   14958:	add	r0, r0, #60	; 0x3c
   1495c:	bl	149d0 <__assert_fail@plt+0x3488>
   14960:	ldr	r0, [fp, #-8]
   14964:	ldr	r0, [r0, #52]	; 0x34
   14968:	movw	r1, #0
   1496c:	cmp	r0, r1
   14970:	beq	14980 <__assert_fail@plt+0x3438>
   14974:	ldr	r0, [fp, #-8]
   14978:	ldr	r0, [r0, #52]	; 0x34
   1497c:	bl	1813c <__assert_fail@plt+0x6bf4>
   14980:	ldr	r0, [fp, #-8]
   14984:	bl	14a28 <__assert_fail@plt+0x34e0>
   14988:	ldr	r0, [fp, #-8]
   1498c:	bl	13948 <__assert_fail@plt+0x2400>
   14990:	ldr	r0, [sp, #12]
   14994:	cmp	r0, #0
   14998:	beq	149bc <__assert_fail@plt+0x3474>
   1499c:	ldr	r0, [sp, #12]
   149a0:	str	r0, [sp, #4]
   149a4:	bl	11404 <__errno_location@plt>
   149a8:	ldr	r1, [sp, #4]
   149ac:	str	r1, [r0]
   149b0:	mvn	r0, #0
   149b4:	str	r0, [fp, #-4]
   149b8:	b	149c4 <__assert_fail@plt+0x347c>
   149bc:	movw	r0, #0
   149c0:	str	r0, [fp, #-4]
   149c4:	ldr	r0, [fp, #-4]
   149c8:	mov	sp, fp
   149cc:	pop	{fp, pc}
   149d0:	push	{fp, lr}
   149d4:	mov	fp, sp
   149d8:	sub	sp, sp, #8
   149dc:	str	r0, [sp, #4]
   149e0:	ldr	r0, [sp, #4]
   149e4:	bl	190b4 <__assert_fail@plt+0x7b6c>
   149e8:	mvn	r1, #0
   149ec:	eor	r0, r0, r1
   149f0:	tst	r0, #1
   149f4:	beq	14a20 <__assert_fail@plt+0x34d8>
   149f8:	ldr	r0, [sp, #4]
   149fc:	bl	19184 <__assert_fail@plt+0x7c3c>
   14a00:	str	r0, [sp]
   14a04:	ldr	r0, [sp]
   14a08:	movw	r1, #0
   14a0c:	cmp	r1, r0
   14a10:	bgt	14a1c <__assert_fail@plt+0x34d4>
   14a14:	ldr	r0, [sp]
   14a18:	bl	1150c <close@plt>
   14a1c:	b	149e0 <__assert_fail@plt+0x3498>
   14a20:	mov	sp, fp
   14a24:	pop	{fp, pc}
   14a28:	push	{fp, lr}
   14a2c:	mov	fp, sp
   14a30:	sub	sp, sp, #8
   14a34:	str	r0, [sp, #4]
   14a38:	ldr	r0, [sp, #4]
   14a3c:	ldr	r0, [r0, #48]	; 0x30
   14a40:	movw	r1, #258	; 0x102
   14a44:	and	r0, r0, r1
   14a48:	cmp	r0, #0
   14a4c:	beq	14a74 <__assert_fail@plt+0x352c>
   14a50:	ldr	r0, [sp, #4]
   14a54:	ldr	r0, [r0, #56]	; 0x38
   14a58:	movw	r1, #0
   14a5c:	cmp	r0, r1
   14a60:	beq	14a70 <__assert_fail@plt+0x3528>
   14a64:	ldr	r0, [sp, #4]
   14a68:	ldr	r0, [r0, #56]	; 0x38
   14a6c:	bl	1813c <__assert_fail@plt+0x6bf4>
   14a70:	b	14a80 <__assert_fail@plt+0x3538>
   14a74:	ldr	r0, [sp, #4]
   14a78:	ldr	r0, [r0, #56]	; 0x38
   14a7c:	bl	13948 <__assert_fail@plt+0x2400>
   14a80:	mov	sp, fp
   14a84:	pop	{fp, pc}
   14a88:	push	{fp, lr}
   14a8c:	mov	fp, sp
   14a90:	sub	sp, sp, #40	; 0x28
   14a94:	str	r0, [fp, #-8]
   14a98:	ldr	r0, [fp, #-8]
   14a9c:	ldr	r0, [r0]
   14aa0:	movw	r1, #0
   14aa4:	cmp	r0, r1
   14aa8:	beq	14ac0 <__assert_fail@plt+0x3578>
   14aac:	ldr	r0, [fp, #-8]
   14ab0:	ldr	r0, [r0, #48]	; 0x30
   14ab4:	and	r0, r0, #8192	; 0x2000
   14ab8:	cmp	r0, #0
   14abc:	beq	14acc <__assert_fail@plt+0x3584>
   14ac0:	movw	r0, #0
   14ac4:	str	r0, [fp, #-4]
   14ac8:	b	1545c <__assert_fail@plt+0x3f14>
   14acc:	ldr	r0, [fp, #-8]
   14ad0:	ldr	r0, [r0]
   14ad4:	str	r0, [fp, #-12]
   14ad8:	ldr	r0, [fp, #-12]
   14adc:	ldrh	r0, [r0, #60]	; 0x3c
   14ae0:	strh	r0, [fp, #-18]	; 0xffffffee
   14ae4:	ldr	r0, [fp, #-12]
   14ae8:	movw	r1, #3
   14aec:	strh	r1, [r0, #60]	; 0x3c
   14af0:	ldrh	r0, [fp, #-18]	; 0xffffffee
   14af4:	cmp	r0, #1
   14af8:	bne	14b24 <__assert_fail@plt+0x35dc>
   14afc:	ldr	r0, [fp, #-8]
   14b00:	ldr	r1, [fp, #-12]
   14b04:	movw	r2, #0
   14b08:	and	r2, r2, #1
   14b0c:	bl	1420c <__assert_fail@plt+0x2cc4>
   14b10:	ldr	r1, [fp, #-12]
   14b14:	strh	r0, [r1, #56]	; 0x38
   14b18:	ldr	r0, [fp, #-12]
   14b1c:	str	r0, [fp, #-4]
   14b20:	b	1545c <__assert_fail@plt+0x3f14>
   14b24:	ldrh	r0, [fp, #-18]	; 0xffffffee
   14b28:	cmp	r0, #2
   14b2c:	bne	14be8 <__assert_fail@plt+0x36a0>
   14b30:	ldr	r0, [fp, #-12]
   14b34:	ldrh	r0, [r0, #56]	; 0x38
   14b38:	cmp	r0, #12
   14b3c:	beq	14b50 <__assert_fail@plt+0x3608>
   14b40:	ldr	r0, [fp, #-12]
   14b44:	ldrh	r0, [r0, #56]	; 0x38
   14b48:	cmp	r0, #13
   14b4c:	bne	14be8 <__assert_fail@plt+0x36a0>
   14b50:	ldr	r0, [fp, #-8]
   14b54:	ldr	r1, [fp, #-12]
   14b58:	movw	r2, #1
   14b5c:	and	r2, r2, #1
   14b60:	bl	1420c <__assert_fail@plt+0x2cc4>
   14b64:	ldr	r1, [fp, #-12]
   14b68:	strh	r0, [r1, #56]	; 0x38
   14b6c:	ldr	r0, [fp, #-12]
   14b70:	ldrh	r0, [r0, #56]	; 0x38
   14b74:	cmp	r0, #1
   14b78:	bne	14be4 <__assert_fail@plt+0x369c>
   14b7c:	ldr	r0, [fp, #-8]
   14b80:	ldr	r0, [r0, #48]	; 0x30
   14b84:	and	r0, r0, #4
   14b88:	cmp	r0, #0
   14b8c:	bne	14be4 <__assert_fail@plt+0x369c>
   14b90:	ldr	r0, [fp, #-8]
   14b94:	movw	r1, #22651	; 0x587b
   14b98:	movt	r1, #2
   14b9c:	bl	146c8 <__assert_fail@plt+0x3180>
   14ba0:	ldr	r1, [fp, #-12]
   14ba4:	str	r0, [r1, #36]	; 0x24
   14ba8:	cmp	r0, #0
   14bac:	bge	14bd0 <__assert_fail@plt+0x3688>
   14bb0:	bl	11404 <__errno_location@plt>
   14bb4:	ldr	r0, [r0]
   14bb8:	ldr	r1, [fp, #-12]
   14bbc:	str	r0, [r1, #32]
   14bc0:	ldr	r0, [fp, #-12]
   14bc4:	movw	r1, #7
   14bc8:	strh	r1, [r0, #56]	; 0x38
   14bcc:	b	14be0 <__assert_fail@plt+0x3698>
   14bd0:	ldr	r0, [fp, #-12]
   14bd4:	ldrh	r1, [r0, #58]	; 0x3a
   14bd8:	orr	r1, r1, #2
   14bdc:	strh	r1, [r0, #58]	; 0x3a
   14be0:	b	14be4 <__assert_fail@plt+0x369c>
   14be4:	b	150f8 <__assert_fail@plt+0x3bb0>
   14be8:	ldr	r0, [fp, #-12]
   14bec:	ldrh	r0, [r0, #56]	; 0x38
   14bf0:	cmp	r0, #1
   14bf4:	bne	14e50 <__assert_fail@plt+0x3908>
   14bf8:	ldrh	r0, [fp, #-18]	; 0xffffffee
   14bfc:	cmp	r0, #4
   14c00:	beq	14c48 <__assert_fail@plt+0x3700>
   14c04:	ldr	r0, [fp, #-8]
   14c08:	ldr	r0, [r0, #48]	; 0x30
   14c0c:	and	r0, r0, #64	; 0x40
   14c10:	cmp	r0, #0
   14c14:	beq	14cb8 <__assert_fail@plt+0x3770>
   14c18:	ldr	r0, [fp, #-12]
   14c1c:	ldr	r1, [r0, #64]	; 0x40
   14c20:	ldr	r0, [r0, #68]	; 0x44
   14c24:	ldr	r2, [fp, #-8]
   14c28:	ldr	r3, [r2, #16]
   14c2c:	ldr	r2, [r2, #20]
   14c30:	eor	r0, r0, r2
   14c34:	eor	r1, r1, r3
   14c38:	orr	r0, r1, r0
   14c3c:	cmp	r0, #0
   14c40:	beq	14cb8 <__assert_fail@plt+0x3770>
   14c44:	b	14c48 <__assert_fail@plt+0x3700>
   14c48:	ldr	r0, [fp, #-12]
   14c4c:	ldrh	r0, [r0, #58]	; 0x3a
   14c50:	and	r0, r0, #2
   14c54:	cmp	r0, #0
   14c58:	beq	14c68 <__assert_fail@plt+0x3720>
   14c5c:	ldr	r0, [fp, #-12]
   14c60:	ldr	r0, [r0, #36]	; 0x24
   14c64:	bl	1150c <close@plt>
   14c68:	ldr	r0, [fp, #-8]
   14c6c:	ldr	r0, [r0, #4]
   14c70:	movw	r1, #0
   14c74:	cmp	r0, r1
   14c78:	beq	14c94 <__assert_fail@plt+0x374c>
   14c7c:	ldr	r0, [fp, #-8]
   14c80:	ldr	r0, [r0, #4]
   14c84:	bl	14764 <__assert_fail@plt+0x321c>
   14c88:	ldr	r0, [fp, #-8]
   14c8c:	movw	r1, #0
   14c90:	str	r1, [r0, #4]
   14c94:	ldr	r0, [fp, #-12]
   14c98:	movw	r1, #6
   14c9c:	strh	r1, [r0, #56]	; 0x38
   14ca0:	ldr	r0, [fp, #-8]
   14ca4:	ldr	r1, [fp, #-12]
   14ca8:	bl	15468 <__assert_fail@plt+0x3f20>
   14cac:	ldr	r0, [fp, #-12]
   14cb0:	str	r0, [fp, #-4]
   14cb4:	b	1545c <__assert_fail@plt+0x3f14>
   14cb8:	ldr	r0, [fp, #-8]
   14cbc:	ldr	r0, [r0, #4]
   14cc0:	movw	r1, #0
   14cc4:	cmp	r0, r1
   14cc8:	beq	14d0c <__assert_fail@plt+0x37c4>
   14ccc:	ldr	r0, [fp, #-8]
   14cd0:	ldr	r0, [r0, #48]	; 0x30
   14cd4:	and	r0, r0, #4096	; 0x1000
   14cd8:	cmp	r0, #0
   14cdc:	beq	14d0c <__assert_fail@plt+0x37c4>
   14ce0:	ldr	r0, [fp, #-8]
   14ce4:	ldr	r1, [r0, #48]	; 0x30
   14ce8:	mvn	r2, #4096	; 0x1000
   14cec:	and	r1, r1, r2
   14cf0:	str	r1, [r0, #48]	; 0x30
   14cf4:	ldr	r0, [fp, #-8]
   14cf8:	ldr	r0, [r0, #4]
   14cfc:	bl	14764 <__assert_fail@plt+0x321c>
   14d00:	ldr	r0, [fp, #-8]
   14d04:	movw	r1, #0
   14d08:	str	r1, [r0, #4]
   14d0c:	ldr	r0, [fp, #-8]
   14d10:	ldr	r0, [r0, #4]
   14d14:	movw	r1, #0
   14d18:	cmp	r0, r1
   14d1c:	beq	14da8 <__assert_fail@plt+0x3860>
   14d20:	ldr	r0, [fp, #-8]
   14d24:	ldr	r1, [fp, #-12]
   14d28:	ldr	r2, [fp, #-12]
   14d2c:	ldr	r3, [r2, #24]
   14d30:	mvn	r2, #0
   14d34:	bl	15608 <__assert_fail@plt+0x40c0>
   14d38:	cmp	r0, #0
   14d3c:	beq	14da4 <__assert_fail@plt+0x385c>
   14d40:	bl	11404 <__errno_location@plt>
   14d44:	ldr	r0, [r0]
   14d48:	ldr	r1, [fp, #-12]
   14d4c:	str	r0, [r1, #32]
   14d50:	ldr	r0, [fp, #-12]
   14d54:	ldrh	r1, [r0, #58]	; 0x3a
   14d58:	orr	r1, r1, #1
   14d5c:	strh	r1, [r0, #58]	; 0x3a
   14d60:	ldr	r0, [fp, #-8]
   14d64:	ldr	r0, [r0, #4]
   14d68:	str	r0, [fp, #-12]
   14d6c:	ldr	r0, [fp, #-12]
   14d70:	movw	r1, #0
   14d74:	cmp	r0, r1
   14d78:	beq	14da0 <__assert_fail@plt+0x3858>
   14d7c:	ldr	r0, [fp, #-12]
   14d80:	ldr	r0, [r0, #4]
   14d84:	ldr	r0, [r0, #24]
   14d88:	ldr	r1, [fp, #-12]
   14d8c:	str	r0, [r1, #24]
   14d90:	ldr	r0, [fp, #-12]
   14d94:	ldr	r0, [r0, #8]
   14d98:	str	r0, [fp, #-12]
   14d9c:	b	14d6c <__assert_fail@plt+0x3824>
   14da0:	b	14da4 <__assert_fail@plt+0x385c>
   14da4:	b	14e34 <__assert_fail@plt+0x38ec>
   14da8:	ldr	r0, [fp, #-8]
   14dac:	movw	r1, #3
   14db0:	bl	158c8 <__assert_fail@plt+0x4380>
   14db4:	ldr	r1, [fp, #-8]
   14db8:	str	r0, [r1, #4]
   14dbc:	movw	r1, #0
   14dc0:	cmp	r0, r1
   14dc4:	bne	14e30 <__assert_fail@plt+0x38e8>
   14dc8:	ldr	r0, [fp, #-8]
   14dcc:	ldr	r0, [r0, #48]	; 0x30
   14dd0:	and	r0, r0, #8192	; 0x2000
   14dd4:	cmp	r0, #0
   14dd8:	beq	14de8 <__assert_fail@plt+0x38a0>
   14ddc:	movw	r0, #0
   14de0:	str	r0, [fp, #-4]
   14de4:	b	1545c <__assert_fail@plt+0x3f14>
   14de8:	ldr	r0, [fp, #-12]
   14dec:	ldr	r0, [r0, #32]
   14df0:	cmp	r0, #0
   14df4:	beq	14e14 <__assert_fail@plt+0x38cc>
   14df8:	ldr	r0, [fp, #-12]
   14dfc:	ldrh	r0, [r0, #56]	; 0x38
   14e00:	cmp	r0, #4
   14e04:	beq	14e14 <__assert_fail@plt+0x38cc>
   14e08:	ldr	r0, [fp, #-12]
   14e0c:	movw	r1, #7
   14e10:	strh	r1, [r0, #56]	; 0x38
   14e14:	b	14e18 <__assert_fail@plt+0x38d0>
   14e18:	ldr	r0, [fp, #-8]
   14e1c:	ldr	r1, [fp, #-12]
   14e20:	bl	15468 <__assert_fail@plt+0x3f20>
   14e24:	ldr	r0, [fp, #-12]
   14e28:	str	r0, [fp, #-4]
   14e2c:	b	1545c <__assert_fail@plt+0x3f14>
   14e30:	b	14e34 <__assert_fail@plt+0x38ec>
   14e34:	ldr	r0, [fp, #-8]
   14e38:	ldr	r0, [r0, #4]
   14e3c:	str	r0, [fp, #-12]
   14e40:	ldr	r0, [fp, #-8]
   14e44:	movw	r1, #0
   14e48:	str	r1, [r0, #4]
   14e4c:	b	15058 <__assert_fail@plt+0x3b10>
   14e50:	b	14e54 <__assert_fail@plt+0x390c>
   14e54:	ldr	r0, [fp, #-12]
   14e58:	str	r0, [fp, #-16]
   14e5c:	ldr	r0, [fp, #-12]
   14e60:	ldr	r0, [r0, #8]
   14e64:	movw	r1, #0
   14e68:	cmp	r0, r1
   14e6c:	bne	14f08 <__assert_fail@plt+0x39c0>
   14e70:	ldr	r0, [fp, #-12]
   14e74:	ldr	r0, [r0, #4]
   14e78:	ldr	r0, [r0, #12]
   14e7c:	movw	r1, #0
   14e80:	cmp	r0, r1
   14e84:	beq	14f08 <__assert_fail@plt+0x39c0>
   14e88:	ldr	r0, [fp, #-16]
   14e8c:	ldr	r0, [r0, #4]
   14e90:	str	r0, [fp, #-12]
   14e94:	ldr	r0, [fp, #-12]
   14e98:	ldr	r1, [fp, #-8]
   14e9c:	str	r0, [r1]
   14ea0:	ldr	r0, [fp, #-8]
   14ea4:	ldr	r0, [r0, #24]
   14ea8:	ldr	r1, [fp, #-12]
   14eac:	ldr	r1, [r1, #40]	; 0x28
   14eb0:	add	r0, r0, r1
   14eb4:	movw	r1, #0
   14eb8:	strb	r1, [r0]
   14ebc:	ldr	r0, [fp, #-8]
   14ec0:	movw	r1, #3
   14ec4:	bl	158c8 <__assert_fail@plt+0x4380>
   14ec8:	str	r0, [fp, #-12]
   14ecc:	movw	r1, #0
   14ed0:	cmp	r0, r1
   14ed4:	bne	14efc <__assert_fail@plt+0x39b4>
   14ed8:	ldr	r0, [fp, #-8]
   14edc:	ldr	r0, [r0, #48]	; 0x30
   14ee0:	and	r0, r0, #8192	; 0x2000
   14ee4:	cmp	r0, #0
   14ee8:	beq	14ef8 <__assert_fail@plt+0x39b0>
   14eec:	movw	r0, #0
   14ef0:	str	r0, [fp, #-4]
   14ef4:	b	1545c <__assert_fail@plt+0x3f14>
   14ef8:	b	15200 <__assert_fail@plt+0x3cb8>
   14efc:	ldr	r0, [fp, #-16]
   14f00:	bl	13948 <__assert_fail@plt+0x2400>
   14f04:	b	15058 <__assert_fail@plt+0x3b10>
   14f08:	ldr	r0, [fp, #-12]
   14f0c:	ldr	r0, [r0, #8]
   14f10:	str	r0, [fp, #-12]
   14f14:	movw	r1, #0
   14f18:	cmp	r0, r1
   14f1c:	beq	151fc <__assert_fail@plt+0x3cb4>
   14f20:	ldr	r0, [fp, #-12]
   14f24:	ldr	r1, [fp, #-8]
   14f28:	str	r0, [r1]
   14f2c:	ldr	r0, [fp, #-16]
   14f30:	bl	13948 <__assert_fail@plt+0x2400>
   14f34:	ldr	r0, [fp, #-12]
   14f38:	ldr	r0, [r0, #48]	; 0x30
   14f3c:	cmp	r0, #0
   14f40:	bne	14f90 <__assert_fail@plt+0x3a48>
   14f44:	ldr	r0, [fp, #-8]
   14f48:	bl	1658c <__assert_fail@plt+0x5044>
   14f4c:	cmp	r0, #0
   14f50:	beq	14f70 <__assert_fail@plt+0x3a28>
   14f54:	ldr	r0, [fp, #-8]
   14f58:	ldr	r1, [r0, #48]	; 0x30
   14f5c:	orr	r1, r1, #8192	; 0x2000
   14f60:	str	r1, [r0, #48]	; 0x30
   14f64:	movw	r0, #0
   14f68:	str	r0, [fp, #-4]
   14f6c:	b	1545c <__assert_fail@plt+0x3f14>
   14f70:	ldr	r0, [fp, #-8]
   14f74:	bl	14a28 <__assert_fail@plt+0x34e0>
   14f78:	ldr	r0, [fp, #-8]
   14f7c:	ldr	r1, [fp, #-12]
   14f80:	bl	1669c <__assert_fail@plt+0x5154>
   14f84:	ldr	r0, [fp, #-8]
   14f88:	bl	145ec <__assert_fail@plt+0x30a4>
   14f8c:	b	150f8 <__assert_fail@plt+0x3bb0>
   14f90:	ldr	r0, [fp, #-12]
   14f94:	ldrh	r0, [r0, #60]	; 0x3c
   14f98:	cmp	r0, #4
   14f9c:	bne	14fa4 <__assert_fail@plt+0x3a5c>
   14fa0:	b	14e54 <__assert_fail@plt+0x390c>
   14fa4:	ldr	r0, [fp, #-12]
   14fa8:	ldrh	r0, [r0, #60]	; 0x3c
   14fac:	cmp	r0, #2
   14fb0:	bne	15054 <__assert_fail@plt+0x3b0c>
   14fb4:	ldr	r0, [fp, #-8]
   14fb8:	ldr	r1, [fp, #-12]
   14fbc:	movw	r2, #1
   14fc0:	and	r2, r2, #1
   14fc4:	bl	1420c <__assert_fail@plt+0x2cc4>
   14fc8:	ldr	r1, [fp, #-12]
   14fcc:	strh	r0, [r1, #56]	; 0x38
   14fd0:	ldr	r0, [fp, #-12]
   14fd4:	ldrh	r0, [r0, #56]	; 0x38
   14fd8:	cmp	r0, #1
   14fdc:	bne	15048 <__assert_fail@plt+0x3b00>
   14fe0:	ldr	r0, [fp, #-8]
   14fe4:	ldr	r0, [r0, #48]	; 0x30
   14fe8:	and	r0, r0, #4
   14fec:	cmp	r0, #0
   14ff0:	bne	15048 <__assert_fail@plt+0x3b00>
   14ff4:	ldr	r0, [fp, #-8]
   14ff8:	movw	r1, #22651	; 0x587b
   14ffc:	movt	r1, #2
   15000:	bl	146c8 <__assert_fail@plt+0x3180>
   15004:	ldr	r1, [fp, #-12]
   15008:	str	r0, [r1, #36]	; 0x24
   1500c:	cmp	r0, #0
   15010:	bge	15034 <__assert_fail@plt+0x3aec>
   15014:	bl	11404 <__errno_location@plt>
   15018:	ldr	r0, [r0]
   1501c:	ldr	r1, [fp, #-12]
   15020:	str	r0, [r1, #32]
   15024:	ldr	r0, [fp, #-12]
   15028:	movw	r1, #7
   1502c:	strh	r1, [r0, #56]	; 0x38
   15030:	b	15044 <__assert_fail@plt+0x3afc>
   15034:	ldr	r0, [fp, #-12]
   15038:	ldrh	r1, [r0, #58]	; 0x3a
   1503c:	orr	r1, r1, #2
   15040:	strh	r1, [r0, #58]	; 0x3a
   15044:	b	15048 <__assert_fail@plt+0x3b00>
   15048:	ldr	r0, [fp, #-12]
   1504c:	movw	r1, #3
   15050:	strh	r1, [r0, #60]	; 0x3c
   15054:	b	15058 <__assert_fail@plt+0x3b10>
   15058:	ldr	r0, [fp, #-8]
   1505c:	ldr	r0, [r0, #24]
   15060:	ldr	r1, [fp, #-12]
   15064:	ldr	r1, [r1, #4]
   15068:	ldr	r1, [r1, #28]
   1506c:	ldr	r2, [fp, #-12]
   15070:	ldr	r2, [r2, #4]
   15074:	ldr	r2, [r2, #40]	; 0x28
   15078:	sub	r2, r2, #1
   1507c:	add	r1, r1, r2
   15080:	ldrb	r1, [r1]
   15084:	cmp	r1, #47	; 0x2f
   15088:	str	r0, [sp, #12]
   1508c:	bne	150a8 <__assert_fail@plt+0x3b60>
   15090:	ldr	r0, [fp, #-12]
   15094:	ldr	r0, [r0, #4]
   15098:	ldr	r0, [r0, #40]	; 0x28
   1509c:	sub	r0, r0, #1
   150a0:	str	r0, [sp, #8]
   150a4:	b	150b8 <__assert_fail@plt+0x3b70>
   150a8:	ldr	r0, [fp, #-12]
   150ac:	ldr	r0, [r0, #4]
   150b0:	ldr	r0, [r0, #40]	; 0x28
   150b4:	str	r0, [sp, #8]
   150b8:	ldr	r0, [sp, #8]
   150bc:	ldr	r1, [sp, #12]
   150c0:	add	r0, r1, r0
   150c4:	str	r0, [sp, #16]
   150c8:	ldr	r0, [sp, #16]
   150cc:	add	r2, r0, #1
   150d0:	str	r2, [sp, #16]
   150d4:	movw	r2, #47	; 0x2f
   150d8:	strb	r2, [r0]
   150dc:	ldr	r0, [sp, #16]
   150e0:	ldr	r2, [fp, #-12]
   150e4:	add	r1, r2, #168	; 0xa8
   150e8:	ldr	r2, [fp, #-12]
   150ec:	ldr	r2, [r2, #52]	; 0x34
   150f0:	add	r2, r2, #1
   150f4:	bl	11278 <memmove@plt>
   150f8:	ldr	r0, [fp, #-12]
   150fc:	ldr	r1, [fp, #-8]
   15100:	str	r0, [r1]
   15104:	ldr	r0, [fp, #-12]
   15108:	ldrh	r0, [r0, #56]	; 0x38
   1510c:	cmp	r0, #11
   15110:	bne	15188 <__assert_fail@plt+0x3c40>
   15114:	ldr	r0, [fp, #-12]
   15118:	ldr	r1, [r0, #112]	; 0x70
   1511c:	ldr	r0, [r0, #116]	; 0x74
   15120:	eor	r1, r1, #2
   15124:	orr	r0, r1, r0
   15128:	cmp	r0, #0
   1512c:	bne	15154 <__assert_fail@plt+0x3c0c>
   15130:	b	15134 <__assert_fail@plt+0x3bec>
   15134:	ldr	r0, [fp, #-8]
   15138:	ldr	r1, [fp, #-12]
   1513c:	movw	r2, #0
   15140:	and	r2, r2, #1
   15144:	bl	1420c <__assert_fail@plt+0x2cc4>
   15148:	ldr	r1, [fp, #-12]
   1514c:	strh	r0, [r1, #56]	; 0x38
   15150:	b	15184 <__assert_fail@plt+0x3c3c>
   15154:	b	15158 <__assert_fail@plt+0x3c10>
   15158:	ldr	r0, [fp, #-12]
   1515c:	ldr	r1, [r0, #112]	; 0x70
   15160:	ldr	r0, [r0, #116]	; 0x74
   15164:	eor	r1, r1, #1
   15168:	orr	r0, r1, r0
   1516c:	cmp	r0, #0
   15170:	beq	1517c <__assert_fail@plt+0x3c34>
   15174:	b	15178 <__assert_fail@plt+0x3c30>
   15178:	bl	11500 <abort@plt>
   1517c:	b	15180 <__assert_fail@plt+0x3c38>
   15180:	b	15184 <__assert_fail@plt+0x3c3c>
   15184:	b	15188 <__assert_fail@plt+0x3c40>
   15188:	ldr	r0, [fp, #-12]
   1518c:	ldrh	r0, [r0, #56]	; 0x38
   15190:	cmp	r0, #1
   15194:	bne	151f0 <__assert_fail@plt+0x3ca8>
   15198:	ldr	r0, [fp, #-12]
   1519c:	ldr	r0, [r0, #48]	; 0x30
   151a0:	cmp	r0, #0
   151a4:	bne	151c0 <__assert_fail@plt+0x3c78>
   151a8:	ldr	r0, [fp, #-12]
   151ac:	ldr	r1, [r0, #64]	; 0x40
   151b0:	ldr	r0, [r0, #68]	; 0x44
   151b4:	ldr	r2, [fp, #-8]
   151b8:	str	r0, [r2, #20]
   151bc:	str	r1, [r2, #16]
   151c0:	ldr	r0, [fp, #-8]
   151c4:	ldr	r1, [fp, #-12]
   151c8:	bl	1677c <__assert_fail@plt+0x5234>
   151cc:	tst	r0, #1
   151d0:	bne	151ec <__assert_fail@plt+0x3ca4>
   151d4:	bl	11404 <__errno_location@plt>
   151d8:	movw	r1, #12
   151dc:	str	r1, [r0]
   151e0:	movw	r0, #0
   151e4:	str	r0, [fp, #-4]
   151e8:	b	1545c <__assert_fail@plt+0x3f14>
   151ec:	b	151f0 <__assert_fail@plt+0x3ca8>
   151f0:	ldr	r0, [fp, #-12]
   151f4:	str	r0, [fp, #-4]
   151f8:	b	1545c <__assert_fail@plt+0x3f14>
   151fc:	b	15200 <__assert_fail@plt+0x3cb8>
   15200:	ldr	r0, [fp, #-16]
   15204:	ldr	r0, [r0, #4]
   15208:	str	r0, [fp, #-12]
   1520c:	ldr	r0, [fp, #-12]
   15210:	ldr	r1, [fp, #-8]
   15214:	str	r0, [r1]
   15218:	ldr	r0, [fp, #-16]
   1521c:	bl	13948 <__assert_fail@plt+0x2400>
   15220:	ldr	r0, [fp, #-12]
   15224:	ldr	r0, [r0, #48]	; 0x30
   15228:	cmn	r0, #1
   1522c:	bne	15254 <__assert_fail@plt+0x3d0c>
   15230:	ldr	r0, [fp, #-12]
   15234:	bl	13948 <__assert_fail@plt+0x2400>
   15238:	bl	11404 <__errno_location@plt>
   1523c:	movw	r1, #0
   15240:	str	r1, [r0]
   15244:	ldr	r0, [fp, #-8]
   15248:	str	r1, [r0]
   1524c:	str	r1, [fp, #-4]
   15250:	b	1545c <__assert_fail@plt+0x3f14>
   15254:	b	15258 <__assert_fail@plt+0x3d10>
   15258:	ldr	r0, [fp, #-12]
   1525c:	ldrh	r0, [r0, #56]	; 0x38
   15260:	cmp	r0, #11
   15264:	bne	1526c <__assert_fail@plt+0x3d24>
   15268:	bl	11500 <abort@plt>
   1526c:	b	15270 <__assert_fail@plt+0x3d28>
   15270:	ldr	r0, [fp, #-8]
   15274:	ldr	r0, [r0, #24]
   15278:	ldr	r1, [fp, #-12]
   1527c:	ldr	r1, [r1, #40]	; 0x28
   15280:	add	r0, r0, r1
   15284:	movw	r1, #0
   15288:	strb	r1, [r0]
   1528c:	ldr	r0, [fp, #-12]
   15290:	ldr	r0, [r0, #48]	; 0x30
   15294:	cmp	r0, #0
   15298:	bne	152d0 <__assert_fail@plt+0x3d88>
   1529c:	ldr	r0, [fp, #-8]
   152a0:	bl	1658c <__assert_fail@plt+0x5044>
   152a4:	cmp	r0, #0
   152a8:	beq	152cc <__assert_fail@plt+0x3d84>
   152ac:	bl	11404 <__errno_location@plt>
   152b0:	ldr	r0, [r0]
   152b4:	ldr	r1, [fp, #-12]
   152b8:	str	r0, [r1, #32]
   152bc:	ldr	r0, [fp, #-8]
   152c0:	ldr	r1, [r0, #48]	; 0x30
   152c4:	orr	r1, r1, #8192	; 0x2000
   152c8:	str	r1, [r0, #48]	; 0x30
   152cc:	b	153cc <__assert_fail@plt+0x3e84>
   152d0:	ldr	r0, [fp, #-12]
   152d4:	ldrh	r0, [r0, #58]	; 0x3a
   152d8:	and	r0, r0, #2
   152dc:	cmp	r0, #0
   152e0:	beq	1536c <__assert_fail@plt+0x3e24>
   152e4:	ldr	r0, [fp, #-8]
   152e8:	ldr	r0, [r0, #48]	; 0x30
   152ec:	and	r0, r0, #4
   152f0:	cmp	r0, #0
   152f4:	bne	1535c <__assert_fail@plt+0x3e14>
   152f8:	ldr	r0, [fp, #-8]
   152fc:	ldr	r0, [r0, #48]	; 0x30
   15300:	and	r0, r0, #512	; 0x200
   15304:	cmp	r0, #0
   15308:	beq	15328 <__assert_fail@plt+0x3de0>
   1530c:	ldr	r0, [fp, #-8]
   15310:	ldr	r1, [fp, #-12]
   15314:	ldr	r1, [r1, #36]	; 0x24
   15318:	movw	r2, #1
   1531c:	and	r2, r2, #1
   15320:	bl	168dc <__assert_fail@plt+0x5394>
   15324:	b	1535c <__assert_fail@plt+0x3e14>
   15328:	ldr	r0, [fp, #-12]
   1532c:	ldr	r0, [r0, #36]	; 0x24
   15330:	bl	114ac <fchdir@plt>
   15334:	cmp	r0, #0
   15338:	beq	1535c <__assert_fail@plt+0x3e14>
   1533c:	bl	11404 <__errno_location@plt>
   15340:	ldr	r0, [r0]
   15344:	ldr	r1, [fp, #-12]
   15348:	str	r0, [r1, #32]
   1534c:	ldr	r0, [fp, #-8]
   15350:	ldr	r1, [r0, #48]	; 0x30
   15354:	orr	r1, r1, #8192	; 0x2000
   15358:	str	r1, [r0, #48]	; 0x30
   1535c:	ldr	r0, [fp, #-12]
   15360:	ldr	r0, [r0, #36]	; 0x24
   15364:	bl	1150c <close@plt>
   15368:	b	153c8 <__assert_fail@plt+0x3e80>
   1536c:	ldr	r0, [fp, #-12]
   15370:	ldrh	r0, [r0, #58]	; 0x3a
   15374:	and	r0, r0, #1
   15378:	cmp	r0, #0
   1537c:	bne	153c4 <__assert_fail@plt+0x3e7c>
   15380:	ldr	r0, [fp, #-8]
   15384:	ldr	r1, [fp, #-12]
   15388:	ldr	r1, [r1, #4]
   1538c:	mvn	r2, #0
   15390:	movw	r3, #22650	; 0x587a
   15394:	movt	r3, #2
   15398:	bl	15608 <__assert_fail@plt+0x40c0>
   1539c:	cmp	r0, #0
   153a0:	beq	153c4 <__assert_fail@plt+0x3e7c>
   153a4:	bl	11404 <__errno_location@plt>
   153a8:	ldr	r0, [r0]
   153ac:	ldr	r1, [fp, #-12]
   153b0:	str	r0, [r1, #32]
   153b4:	ldr	r0, [fp, #-8]
   153b8:	ldr	r1, [r0, #48]	; 0x30
   153bc:	orr	r1, r1, #8192	; 0x2000
   153c0:	str	r1, [r0, #48]	; 0x30
   153c4:	b	153c8 <__assert_fail@plt+0x3e80>
   153c8:	b	153cc <__assert_fail@plt+0x3e84>
   153cc:	ldr	r0, [fp, #-12]
   153d0:	ldrh	r0, [r0, #56]	; 0x38
   153d4:	cmp	r0, #2
   153d8:	beq	1542c <__assert_fail@plt+0x3ee4>
   153dc:	ldr	r0, [fp, #-12]
   153e0:	ldr	r0, [r0, #32]
   153e4:	cmp	r0, #0
   153e8:	movw	r0, #0
   153ec:	movne	r0, #1
   153f0:	tst	r0, #1
   153f4:	movw	r0, #7
   153f8:	moveq	r0, #6
   153fc:	ldr	r1, [fp, #-12]
   15400:	strh	r0, [r1, #56]	; 0x38
   15404:	ldr	r0, [fp, #-12]
   15408:	ldr	r0, [r0, #32]
   1540c:	cmp	r0, #0
   15410:	bne	15428 <__assert_fail@plt+0x3ee0>
   15414:	b	15418 <__assert_fail@plt+0x3ed0>
   15418:	ldr	r0, [fp, #-8]
   1541c:	ldr	r1, [fp, #-12]
   15420:	bl	15468 <__assert_fail@plt+0x3f20>
   15424:	b	15428 <__assert_fail@plt+0x3ee0>
   15428:	b	1542c <__assert_fail@plt+0x3ee4>
   1542c:	ldr	r0, [fp, #-8]
   15430:	ldr	r0, [r0, #48]	; 0x30
   15434:	and	r0, r0, #8192	; 0x2000
   15438:	cmp	r0, #0
   1543c:	beq	1544c <__assert_fail@plt+0x3f04>
   15440:	movw	r0, #0
   15444:	str	r0, [sp, #4]
   15448:	b	15454 <__assert_fail@plt+0x3f0c>
   1544c:	ldr	r0, [fp, #-12]
   15450:	str	r0, [sp, #4]
   15454:	ldr	r0, [sp, #4]
   15458:	str	r0, [fp, #-4]
   1545c:	ldr	r0, [fp, #-4]
   15460:	mov	sp, fp
   15464:	pop	{fp, pc}
   15468:	push	{fp, lr}
   1546c:	mov	fp, sp
   15470:	sub	sp, sp, #48	; 0x30
   15474:	str	r0, [fp, #-4]
   15478:	str	r1, [fp, #-8]
   1547c:	ldr	r0, [fp, #-8]
   15480:	add	r0, r0, #64	; 0x40
   15484:	str	r0, [fp, #-12]
   15488:	ldr	r0, [fp, #-4]
   1548c:	ldr	r0, [r0, #48]	; 0x30
   15490:	movw	r1, #258	; 0x102
   15494:	and	r0, r0, r1
   15498:	cmp	r0, #0
   1549c:	beq	154fc <__assert_fail@plt+0x3fb4>
   154a0:	ldr	r0, [fp, #-12]
   154a4:	ldr	r1, [r0]
   154a8:	ldr	r0, [r0, #4]
   154ac:	str	r0, [sp, #12]
   154b0:	str	r1, [sp, #8]
   154b4:	ldr	r0, [fp, #-12]
   154b8:	ldr	r1, [r0, #96]	; 0x60
   154bc:	ldr	r0, [r0, #100]	; 0x64
   154c0:	str	r0, [sp, #20]
   154c4:	str	r1, [sp, #16]
   154c8:	ldr	r0, [fp, #-4]
   154cc:	ldr	r0, [r0, #56]	; 0x38
   154d0:	add	r1, sp, #8
   154d4:	bl	18c84 <__assert_fail@plt+0x773c>
   154d8:	str	r0, [sp, #4]
   154dc:	ldr	r0, [sp, #4]
   154e0:	movw	r1, #0
   154e4:	cmp	r0, r1
   154e8:	bne	154f0 <__assert_fail@plt+0x3fa8>
   154ec:	bl	11500 <abort@plt>
   154f0:	ldr	r0, [sp, #4]
   154f4:	bl	13948 <__assert_fail@plt+0x2400>
   154f8:	b	15600 <__assert_fail@plt+0x40b8>
   154fc:	ldr	r0, [fp, #-8]
   15500:	ldr	r0, [r0, #4]
   15504:	str	r0, [sp]
   15508:	ldr	r0, [sp]
   1550c:	movw	r1, #0
   15510:	cmp	r0, r1
   15514:	beq	155fc <__assert_fail@plt+0x40b4>
   15518:	ldr	r0, [sp]
   1551c:	ldr	r0, [r0, #48]	; 0x30
   15520:	movw	r1, #0
   15524:	cmp	r1, r0
   15528:	bgt	155fc <__assert_fail@plt+0x40b4>
   1552c:	b	15530 <__assert_fail@plt+0x3fe8>
   15530:	ldr	r0, [fp, #-4]
   15534:	ldr	r0, [r0, #56]	; 0x38
   15538:	ldr	r1, [r0, #16]
   1553c:	ldr	r0, [r0, #20]
   15540:	orr	r0, r1, r0
   15544:	cmp	r0, #0
   15548:	bne	15554 <__assert_fail@plt+0x400c>
   1554c:	b	15550 <__assert_fail@plt+0x4008>
   15550:	bl	11500 <abort@plt>
   15554:	ldr	r0, [fp, #-4]
   15558:	ldr	r0, [r0, #56]	; 0x38
   1555c:	ldr	r1, [r0]
   15560:	ldr	r0, [r0, #4]
   15564:	ldr	r2, [fp, #-12]
   15568:	ldr	r3, [r2, #96]	; 0x60
   1556c:	ldr	r2, [r2, #100]	; 0x64
   15570:	eor	r0, r0, r2
   15574:	eor	r1, r1, r3
   15578:	orr	r0, r1, r0
   1557c:	cmp	r0, #0
   15580:	bne	155f4 <__assert_fail@plt+0x40ac>
   15584:	b	15588 <__assert_fail@plt+0x4040>
   15588:	ldr	r0, [fp, #-4]
   1558c:	ldr	r0, [r0, #56]	; 0x38
   15590:	ldr	r1, [r0, #8]
   15594:	ldr	r0, [r0, #12]
   15598:	ldr	r2, [fp, #-12]
   1559c:	ldr	r3, [r2]
   155a0:	ldr	r2, [r2, #4]
   155a4:	eor	r0, r0, r2
   155a8:	eor	r1, r1, r3
   155ac:	orr	r0, r1, r0
   155b0:	cmp	r0, #0
   155b4:	bne	155f4 <__assert_fail@plt+0x40ac>
   155b8:	b	155bc <__assert_fail@plt+0x4074>
   155bc:	ldr	r0, [sp]
   155c0:	ldr	r1, [r0, #64]	; 0x40
   155c4:	ldr	r0, [r0, #68]	; 0x44
   155c8:	ldr	r2, [fp, #-4]
   155cc:	ldr	r2, [r2, #56]	; 0x38
   155d0:	str	r0, [r2, #12]
   155d4:	str	r1, [r2, #8]
   155d8:	ldr	r0, [sp]
   155dc:	ldr	r1, [r0, #160]	; 0xa0
   155e0:	ldr	r0, [r0, #164]	; 0xa4
   155e4:	ldr	r2, [fp, #-4]
   155e8:	ldr	r2, [r2, #56]	; 0x38
   155ec:	str	r0, [r2, #4]
   155f0:	str	r1, [r2]
   155f4:	b	155f8 <__assert_fail@plt+0x40b0>
   155f8:	b	155fc <__assert_fail@plt+0x40b4>
   155fc:	b	15600 <__assert_fail@plt+0x40b8>
   15600:	mov	sp, fp
   15604:	pop	{fp, pc}
   15608:	push	{fp, lr}
   1560c:	mov	fp, sp
   15610:	sub	sp, sp, #160	; 0xa0
   15614:	str	r0, [fp, #-8]
   15618:	str	r1, [fp, #-12]
   1561c:	str	r2, [fp, #-16]
   15620:	str	r3, [fp, #-20]	; 0xffffffec
   15624:	ldr	r0, [fp, #-20]	; 0xffffffec
   15628:	movw	r1, #0
   1562c:	cmp	r0, r1
   15630:	movw	r0, #0
   15634:	str	r0, [sp, #8]
   15638:	beq	1565c <__assert_fail@plt+0x4114>
   1563c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15640:	movw	r1, #22650	; 0x587a
   15644:	movt	r1, #2
   15648:	bl	11248 <strcmp@plt>
   1564c:	cmp	r0, #0
   15650:	movw	r0, #0
   15654:	moveq	r0, #1
   15658:	str	r0, [sp, #8]
   1565c:	ldr	r0, [sp, #8]
   15660:	and	r0, r0, #1
   15664:	strb	r0, [fp, #-25]	; 0xffffffe7
   15668:	ldr	r0, [fp, #-8]
   1566c:	ldr	r0, [r0, #48]	; 0x30
   15670:	and	r0, r0, #4
   15674:	cmp	r0, #0
   15678:	beq	156b4 <__assert_fail@plt+0x416c>
   1567c:	ldr	r0, [fp, #-8]
   15680:	ldr	r0, [r0, #48]	; 0x30
   15684:	and	r0, r0, #512	; 0x200
   15688:	cmp	r0, #0
   1568c:	beq	156a8 <__assert_fail@plt+0x4160>
   15690:	ldr	r0, [fp, #-16]
   15694:	movw	r1, #0
   15698:	cmp	r1, r0
   1569c:	bgt	156a8 <__assert_fail@plt+0x4160>
   156a0:	ldr	r0, [fp, #-16]
   156a4:	bl	1150c <close@plt>
   156a8:	movw	r0, #0
   156ac:	str	r0, [fp, #-4]
   156b0:	b	158bc <__assert_fail@plt+0x4374>
   156b4:	ldr	r0, [fp, #-16]
   156b8:	cmp	r0, #0
   156bc:	bge	1572c <__assert_fail@plt+0x41e4>
   156c0:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   156c4:	tst	r0, #1
   156c8:	beq	1572c <__assert_fail@plt+0x41e4>
   156cc:	ldr	r0, [fp, #-8]
   156d0:	ldr	r0, [r0, #48]	; 0x30
   156d4:	and	r0, r0, #512	; 0x200
   156d8:	cmp	r0, #0
   156dc:	beq	1572c <__assert_fail@plt+0x41e4>
   156e0:	ldr	r0, [fp, #-8]
   156e4:	add	r0, r0, #60	; 0x3c
   156e8:	bl	190b4 <__assert_fail@plt+0x7b6c>
   156ec:	tst	r0, #1
   156f0:	bne	15728 <__assert_fail@plt+0x41e0>
   156f4:	ldr	r0, [fp, #-8]
   156f8:	add	r0, r0, #60	; 0x3c
   156fc:	bl	19184 <__assert_fail@plt+0x7c3c>
   15700:	str	r0, [fp, #-36]	; 0xffffffdc
   15704:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15708:	movw	r1, #0
   1570c:	cmp	r1, r0
   15710:	bgt	15724 <__assert_fail@plt+0x41dc>
   15714:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15718:	str	r0, [fp, #-16]
   1571c:	movw	r0, #0
   15720:	str	r0, [fp, #-20]	; 0xffffffec
   15724:	b	15728 <__assert_fail@plt+0x41e0>
   15728:	b	1572c <__assert_fail@plt+0x41e4>
   1572c:	ldr	r0, [fp, #-16]
   15730:	str	r0, [fp, #-32]	; 0xffffffe0
   15734:	ldr	r0, [fp, #-16]
   15738:	cmp	r0, #0
   1573c:	bge	15764 <__assert_fail@plt+0x421c>
   15740:	ldr	r0, [fp, #-8]
   15744:	ldr	r1, [fp, #-20]	; 0xffffffec
   15748:	bl	146c8 <__assert_fail@plt+0x3180>
   1574c:	str	r0, [fp, #-32]	; 0xffffffe0
   15750:	cmp	r0, #0
   15754:	bge	15764 <__assert_fail@plt+0x421c>
   15758:	mvn	r0, #0
   1575c:	str	r0, [fp, #-4]
   15760:	b	158bc <__assert_fail@plt+0x4374>
   15764:	ldr	r0, [fp, #-8]
   15768:	ldr	r0, [r0, #48]	; 0x30
   1576c:	and	r0, r0, #2
   15770:	cmp	r0, #0
   15774:	bne	157a0 <__assert_fail@plt+0x4258>
   15778:	ldr	r0, [fp, #-20]	; 0xffffffec
   1577c:	movw	r1, #0
   15780:	cmp	r0, r1
   15784:	beq	15834 <__assert_fail@plt+0x42ec>
   15788:	ldr	r0, [fp, #-20]	; 0xffffffec
   1578c:	movw	r1, #22650	; 0x587a
   15790:	movt	r1, #2
   15794:	bl	11248 <strcmp@plt>
   15798:	cmp	r0, #0
   1579c:	bne	15834 <__assert_fail@plt+0x42ec>
   157a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   157a4:	add	r1, sp, #16
   157a8:	bl	24764 <__assert_fail@plt+0x1321c>
   157ac:	cmp	r0, #0
   157b0:	beq	157c0 <__assert_fail@plt+0x4278>
   157b4:	mvn	r0, #0
   157b8:	str	r0, [fp, #-24]	; 0xffffffe8
   157bc:	b	1587c <__assert_fail@plt+0x4334>
   157c0:	ldr	r0, [fp, #-12]
   157c4:	ldr	r1, [r0, #64]	; 0x40
   157c8:	ldr	r0, [r0, #68]	; 0x44
   157cc:	ldr	r2, [sp, #16]
   157d0:	ldr	r3, [sp, #20]
   157d4:	eor	r0, r0, r3
   157d8:	eor	r1, r1, r2
   157dc:	orr	r0, r1, r0
   157e0:	cmp	r0, #0
   157e4:	bne	15818 <__assert_fail@plt+0x42d0>
   157e8:	b	157ec <__assert_fail@plt+0x42a4>
   157ec:	ldr	r0, [fp, #-12]
   157f0:	ldr	r1, [r0, #160]	; 0xa0
   157f4:	ldr	r0, [r0, #164]	; 0xa4
   157f8:	ldr	r2, [sp, #112]	; 0x70
   157fc:	ldr	r3, [sp, #116]	; 0x74
   15800:	eor	r0, r0, r3
   15804:	eor	r1, r1, r2
   15808:	orr	r0, r1, r0
   1580c:	cmp	r0, #0
   15810:	beq	15830 <__assert_fail@plt+0x42e8>
   15814:	b	15818 <__assert_fail@plt+0x42d0>
   15818:	bl	11404 <__errno_location@plt>
   1581c:	movw	r1, #2
   15820:	str	r1, [r0]
   15824:	mvn	r0, #0
   15828:	str	r0, [fp, #-24]	; 0xffffffe8
   1582c:	b	1587c <__assert_fail@plt+0x4334>
   15830:	b	15834 <__assert_fail@plt+0x42ec>
   15834:	ldr	r0, [fp, #-8]
   15838:	ldr	r0, [r0, #48]	; 0x30
   1583c:	and	r0, r0, #512	; 0x200
   15840:	cmp	r0, #0
   15844:	beq	15870 <__assert_fail@plt+0x4328>
   15848:	ldr	r0, [fp, #-8]
   1584c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15850:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   15854:	mvn	r3, #0
   15858:	eor	r2, r2, r3
   1585c:	and	r2, r2, #1
   15860:	bl	168dc <__assert_fail@plt+0x5394>
   15864:	movw	r0, #0
   15868:	str	r0, [fp, #-4]
   1586c:	b	158bc <__assert_fail@plt+0x4374>
   15870:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15874:	bl	114ac <fchdir@plt>
   15878:	str	r0, [fp, #-24]	; 0xffffffe8
   1587c:	ldr	r0, [fp, #-16]
   15880:	cmp	r0, #0
   15884:	bge	158b4 <__assert_fail@plt+0x436c>
   15888:	bl	11404 <__errno_location@plt>
   1588c:	ldr	r0, [r0]
   15890:	str	r0, [sp, #12]
   15894:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15898:	bl	1150c <close@plt>
   1589c:	ldr	r1, [sp, #12]
   158a0:	str	r0, [sp, #4]
   158a4:	str	r1, [sp]
   158a8:	bl	11404 <__errno_location@plt>
   158ac:	ldr	r1, [sp]
   158b0:	str	r1, [r0]
   158b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158b8:	str	r0, [fp, #-4]
   158bc:	ldr	r0, [fp, #-4]
   158c0:	mov	sp, fp
   158c4:	pop	{fp, pc}
   158c8:	push	{fp, lr}
   158cc:	mov	fp, sp
   158d0:	sub	sp, sp, #152	; 0x98
   158d4:	str	r0, [fp, #-8]
   158d8:	str	r1, [fp, #-12]
   158dc:	ldr	r0, [fp, #-8]
   158e0:	ldr	r0, [r0]
   158e4:	str	r0, [fp, #-68]	; 0xffffffbc
   158e8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   158ec:	ldr	r0, [r0, #12]
   158f0:	movw	r1, #0
   158f4:	cmp	r0, r1
   158f8:	movw	r0, #0
   158fc:	movne	r0, #1
   15900:	mvn	r1, #0
   15904:	eor	r0, r0, r1
   15908:	eor	r0, r0, r1
   1590c:	and	r0, r0, #1
   15910:	strb	r0, [fp, #-69]	; 0xffffffbb
   15914:	movw	r0, #0
   15918:	strb	r0, [fp, #-70]	; 0xffffffba
   1591c:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   15920:	tst	r0, #1
   15924:	beq	159a0 <__assert_fail@plt+0x4458>
   15928:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1592c:	ldr	r0, [r0, #12]
   15930:	str	r0, [sp, #72]	; 0x48
   15934:	ldr	r0, [sp, #72]	; 0x48
   15938:	bl	114a0 <dirfd@plt>
   1593c:	str	r0, [fp, #-64]	; 0xffffffc0
   15940:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15944:	cmp	r0, #0
   15948:	bge	1599c <__assert_fail@plt+0x4454>
   1594c:	b	15950 <__assert_fail@plt+0x4408>
   15950:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15954:	ldr	r0, [r0, #12]
   15958:	bl	11524 <closedir@plt>
   1595c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15960:	movw	r2, #0
   15964:	str	r2, [r1, #12]
   15968:	ldr	r0, [fp, #-12]
   1596c:	cmp	r0, #3
   15970:	bne	15990 <__assert_fail@plt+0x4448>
   15974:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15978:	movw	r1, #4
   1597c:	strh	r1, [r0, #56]	; 0x38
   15980:	bl	11404 <__errno_location@plt>
   15984:	ldr	r0, [r0]
   15988:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1598c:	str	r0, [r1, #32]
   15990:	movw	r0, #0
   15994:	str	r0, [fp, #-4]
   15998:	b	1657c <__assert_fail@plt+0x5034>
   1599c:	b	15b78 <__assert_fail@plt+0x4630>
   159a0:	ldr	r0, [fp, #-8]
   159a4:	ldr	r0, [r0, #48]	; 0x30
   159a8:	and	r0, r0, #4
   159ac:	cmp	r0, #0
   159b0:	bne	159d8 <__assert_fail@plt+0x4490>
   159b4:	ldr	r0, [fp, #-8]
   159b8:	ldr	r0, [r0, #48]	; 0x30
   159bc:	and	r0, r0, #512	; 0x200
   159c0:	cmp	r0, #0
   159c4:	beq	159d8 <__assert_fail@plt+0x4490>
   159c8:	ldr	r0, [fp, #-8]
   159cc:	ldr	r0, [r0, #32]
   159d0:	str	r0, [sp, #56]	; 0x38
   159d4:	b	159e4 <__assert_fail@plt+0x449c>
   159d8:	mvn	r0, #99	; 0x63
   159dc:	str	r0, [sp, #56]	; 0x38
   159e0:	b	159e4 <__assert_fail@plt+0x449c>
   159e4:	ldr	r0, [sp, #56]	; 0x38
   159e8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   159ec:	ldr	r1, [r1, #24]
   159f0:	ldr	r2, [fp, #-8]
   159f4:	ldr	r2, [r2, #48]	; 0x30
   159f8:	and	r2, r2, #16
   159fc:	cmp	r2, #0
   15a00:	movw	r2, #0
   15a04:	str	r0, [sp, #52]	; 0x34
   15a08:	str	r1, [sp, #48]	; 0x30
   15a0c:	str	r2, [sp, #44]	; 0x2c
   15a10:	beq	15a58 <__assert_fail@plt+0x4510>
   15a14:	ldr	r0, [fp, #-8]
   15a18:	ldr	r0, [r0, #48]	; 0x30
   15a1c:	and	r0, r0, #1
   15a20:	cmp	r0, #0
   15a24:	movw	r0, #0
   15a28:	str	r0, [sp, #40]	; 0x28
   15a2c:	beq	15a48 <__assert_fail@plt+0x4500>
   15a30:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15a34:	ldr	r0, [r0, #48]	; 0x30
   15a38:	cmp	r0, #0
   15a3c:	movw	r0, #0
   15a40:	moveq	r0, #1
   15a44:	str	r0, [sp, #40]	; 0x28
   15a48:	ldr	r0, [sp, #40]	; 0x28
   15a4c:	mvn	r1, #0
   15a50:	eor	r0, r0, r1
   15a54:	str	r0, [sp, #44]	; 0x2c
   15a58:	ldr	r0, [sp, #44]	; 0x2c
   15a5c:	tst	r0, #1
   15a60:	movw	r0, #32768	; 0x8000
   15a64:	moveq	r0, #0
   15a68:	ldr	r1, [sp, #52]	; 0x34
   15a6c:	str	r0, [sp, #36]	; 0x24
   15a70:	mov	r0, r1
   15a74:	ldr	r1, [sp, #48]	; 0x30
   15a78:	ldr	r2, [sp, #36]	; 0x24
   15a7c:	sub	r3, fp, #64	; 0x40
   15a80:	bl	193d0 <__assert_fail@plt+0x7e88>
   15a84:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15a88:	str	r0, [r1, #12]
   15a8c:	movw	r1, #0
   15a90:	cmp	r0, r1
   15a94:	bne	15acc <__assert_fail@plt+0x4584>
   15a98:	ldr	r0, [fp, #-12]
   15a9c:	cmp	r0, #3
   15aa0:	bne	15ac0 <__assert_fail@plt+0x4578>
   15aa4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15aa8:	movw	r1, #4
   15aac:	strh	r1, [r0, #56]	; 0x38
   15ab0:	bl	11404 <__errno_location@plt>
   15ab4:	ldr	r0, [r0]
   15ab8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15abc:	str	r0, [r1, #32]
   15ac0:	movw	r0, #0
   15ac4:	str	r0, [fp, #-4]
   15ac8:	b	1657c <__assert_fail@plt+0x5034>
   15acc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15ad0:	ldrh	r0, [r0, #56]	; 0x38
   15ad4:	cmp	r0, #11
   15ad8:	bne	15afc <__assert_fail@plt+0x45b4>
   15adc:	ldr	r0, [fp, #-8]
   15ae0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15ae4:	movw	r2, #0
   15ae8:	and	r2, r2, #1
   15aec:	bl	1420c <__assert_fail@plt+0x2cc4>
   15af0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15af4:	strh	r0, [r1, #56]	; 0x38
   15af8:	b	15b74 <__assert_fail@plt+0x462c>
   15afc:	ldr	r0, [fp, #-8]
   15b00:	ldr	r0, [r0, #48]	; 0x30
   15b04:	and	r0, r0, #256	; 0x100
   15b08:	cmp	r0, #0
   15b0c:	beq	15b70 <__assert_fail@plt+0x4628>
   15b10:	b	15b14 <__assert_fail@plt+0x45cc>
   15b14:	ldr	r0, [fp, #-8]
   15b18:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15b1c:	bl	15468 <__assert_fail@plt+0x3f20>
   15b20:	ldr	r0, [fp, #-8]
   15b24:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15b28:	movw	r2, #0
   15b2c:	and	r2, r2, #1
   15b30:	bl	1420c <__assert_fail@plt+0x2cc4>
   15b34:	ldr	r1, [fp, #-8]
   15b38:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15b3c:	str	r0, [sp, #32]
   15b40:	mov	r0, r1
   15b44:	mov	r1, r2
   15b48:	bl	1677c <__assert_fail@plt+0x5234>
   15b4c:	tst	r0, #1
   15b50:	bne	15b6c <__assert_fail@plt+0x4624>
   15b54:	bl	11404 <__errno_location@plt>
   15b58:	movw	r1, #12
   15b5c:	str	r1, [r0]
   15b60:	movw	r0, #0
   15b64:	str	r0, [fp, #-4]
   15b68:	b	1657c <__assert_fail@plt+0x5034>
   15b6c:	b	15b70 <__assert_fail@plt+0x4628>
   15b70:	b	15b74 <__assert_fail@plt+0x462c>
   15b74:	b	15b78 <__assert_fail@plt+0x4630>
   15b78:	ldr	r0, [pc, #2568]	; 16588 <__assert_fail@plt+0x5040>
   15b7c:	ldr	r1, [fp, #-8]
   15b80:	ldr	r1, [r1, #44]	; 0x2c
   15b84:	movw	r2, #0
   15b88:	cmp	r1, r2
   15b8c:	movw	r1, #0
   15b90:	movne	r1, #1
   15b94:	tst	r1, #1
   15b98:	mvn	r1, #0
   15b9c:	movne	r0, r1
   15ba0:	str	r0, [sp, #76]	; 0x4c
   15ba4:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   15ba8:	tst	r0, #1
   15bac:	beq	15bbc <__assert_fail@plt+0x4674>
   15bb0:	movw	r0, #1
   15bb4:	strb	r0, [fp, #-37]	; 0xffffffdb
   15bb8:	b	15d80 <__assert_fail@plt+0x4838>
   15bbc:	ldr	r0, [fp, #-12]
   15bc0:	cmp	r0, #2
   15bc4:	movw	r0, #0
   15bc8:	str	r0, [sp, #28]
   15bcc:	beq	15c68 <__assert_fail@plt+0x4720>
   15bd0:	ldr	r0, [fp, #-8]
   15bd4:	ldr	r0, [r0, #48]	; 0x30
   15bd8:	and	r0, r0, #8
   15bdc:	cmp	r0, #0
   15be0:	movw	r0, #0
   15be4:	str	r0, [sp, #24]
   15be8:	beq	15c58 <__assert_fail@plt+0x4710>
   15bec:	ldr	r0, [fp, #-8]
   15bf0:	ldr	r0, [r0, #48]	; 0x30
   15bf4:	and	r0, r0, #16
   15bf8:	cmp	r0, #0
   15bfc:	movw	r0, #0
   15c00:	str	r0, [sp, #24]
   15c04:	beq	15c58 <__assert_fail@plt+0x4710>
   15c08:	ldr	r0, [fp, #-8]
   15c0c:	ldr	r0, [r0, #48]	; 0x30
   15c10:	and	r0, r0, #32
   15c14:	cmp	r0, #0
   15c18:	movw	r0, #0
   15c1c:	str	r0, [sp, #24]
   15c20:	bne	15c58 <__assert_fail@plt+0x4710>
   15c24:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15c28:	ldr	r0, [r0, #84]	; 0x54
   15c2c:	cmp	r0, #2
   15c30:	movw	r0, #0
   15c34:	str	r0, [sp, #24]
   15c38:	bne	15c58 <__assert_fail@plt+0x4710>
   15c3c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15c40:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15c44:	bl	16d50 <__assert_fail@plt+0x5808>
   15c48:	cmp	r0, #0
   15c4c:	movw	r0, #0
   15c50:	movne	r0, #1
   15c54:	str	r0, [sp, #24]
   15c58:	ldr	r0, [sp, #24]
   15c5c:	mvn	r1, #0
   15c60:	eor	r0, r0, r1
   15c64:	str	r0, [sp, #28]
   15c68:	ldr	r0, [sp, #28]
   15c6c:	and	r0, r0, #1
   15c70:	strb	r0, [fp, #-37]	; 0xffffffdb
   15c74:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   15c78:	tst	r0, #1
   15c7c:	bne	15c8c <__assert_fail@plt+0x4744>
   15c80:	ldr	r0, [fp, #-12]
   15c84:	cmp	r0, #3
   15c88:	bne	15d7c <__assert_fail@plt+0x4834>
   15c8c:	ldr	r0, [fp, #-8]
   15c90:	ldr	r0, [r0, #48]	; 0x30
   15c94:	and	r0, r0, #512	; 0x200
   15c98:	cmp	r0, #0
   15c9c:	beq	15cb4 <__assert_fail@plt+0x476c>
   15ca0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15ca4:	movw	r1, #1030	; 0x406
   15ca8:	movw	r2, #3
   15cac:	bl	21ffc <__assert_fail@plt+0x10ab4>
   15cb0:	str	r0, [fp, #-64]	; 0xffffffc0
   15cb4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15cb8:	cmp	r0, #0
   15cbc:	blt	15cdc <__assert_fail@plt+0x4794>
   15cc0:	ldr	r0, [fp, #-8]
   15cc4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15cc8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15ccc:	movw	r3, #0
   15cd0:	bl	15608 <__assert_fail@plt+0x40c0>
   15cd4:	cmp	r0, #0
   15cd8:	beq	15d70 <__assert_fail@plt+0x4828>
   15cdc:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   15ce0:	tst	r0, #1
   15ce4:	beq	15d04 <__assert_fail@plt+0x47bc>
   15ce8:	ldr	r0, [fp, #-12]
   15cec:	cmp	r0, #3
   15cf0:	bne	15d04 <__assert_fail@plt+0x47bc>
   15cf4:	bl	11404 <__errno_location@plt>
   15cf8:	ldr	r0, [r0]
   15cfc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15d00:	str	r0, [r1, #32]
   15d04:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15d08:	ldrh	r1, [r0, #58]	; 0x3a
   15d0c:	orr	r1, r1, #1
   15d10:	strh	r1, [r0, #58]	; 0x3a
   15d14:	movw	r0, #0
   15d18:	strb	r0, [fp, #-37]	; 0xffffffdb
   15d1c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15d20:	ldr	r0, [r0, #12]
   15d24:	bl	11524 <closedir@plt>
   15d28:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15d2c:	movw	r2, #0
   15d30:	str	r2, [r1, #12]
   15d34:	ldr	r0, [fp, #-8]
   15d38:	ldr	r0, [r0, #48]	; 0x30
   15d3c:	and	r0, r0, #512	; 0x200
   15d40:	cmp	r0, #0
   15d44:	beq	15d60 <__assert_fail@plt+0x4818>
   15d48:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15d4c:	movw	r1, #0
   15d50:	cmp	r1, r0
   15d54:	bgt	15d60 <__assert_fail@plt+0x4818>
   15d58:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15d5c:	bl	1150c <close@plt>
   15d60:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15d64:	movw	r1, #0
   15d68:	str	r1, [r0, #12]
   15d6c:	b	15d78 <__assert_fail@plt+0x4830>
   15d70:	movw	r0, #1
   15d74:	strb	r0, [fp, #-37]	; 0xffffffdb
   15d78:	b	15d7c <__assert_fail@plt+0x4834>
   15d7c:	b	15d80 <__assert_fail@plt+0x4838>
   15d80:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15d84:	ldr	r0, [r0, #28]
   15d88:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15d8c:	ldr	r1, [r1, #40]	; 0x28
   15d90:	sub	r1, r1, #1
   15d94:	add	r0, r0, r1
   15d98:	ldrb	r0, [r0]
   15d9c:	cmp	r0, #47	; 0x2f
   15da0:	bne	15db8 <__assert_fail@plt+0x4870>
   15da4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15da8:	ldr	r0, [r0, #40]	; 0x28
   15dac:	sub	r0, r0, #1
   15db0:	str	r0, [sp, #20]
   15db4:	b	15dc4 <__assert_fail@plt+0x487c>
   15db8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15dbc:	ldr	r0, [r0, #40]	; 0x28
   15dc0:	str	r0, [sp, #20]
   15dc4:	ldr	r0, [sp, #20]
   15dc8:	str	r0, [fp, #-48]	; 0xffffffd0
   15dcc:	ldr	r0, [fp, #-8]
   15dd0:	ldr	r0, [r0, #48]	; 0x30
   15dd4:	and	r0, r0, #4
   15dd8:	cmp	r0, #0
   15ddc:	beq	15e0c <__assert_fail@plt+0x48c4>
   15de0:	ldr	r0, [fp, #-8]
   15de4:	ldr	r0, [r0, #24]
   15de8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15dec:	add	r0, r0, r1
   15df0:	str	r0, [fp, #-60]	; 0xffffffc4
   15df4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15df8:	add	r1, r0, #1
   15dfc:	str	r1, [fp, #-60]	; 0xffffffc4
   15e00:	movw	r1, #47	; 0x2f
   15e04:	strb	r1, [r0]
   15e08:	b	15e14 <__assert_fail@plt+0x48cc>
   15e0c:	movw	r0, #0
   15e10:	str	r0, [fp, #-60]	; 0xffffffc4
   15e14:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15e18:	add	r0, r0, #1
   15e1c:	str	r0, [fp, #-48]	; 0xffffffd0
   15e20:	ldr	r0, [fp, #-8]
   15e24:	ldr	r0, [r0, #36]	; 0x24
   15e28:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15e2c:	sub	r0, r0, r1
   15e30:	str	r0, [fp, #-52]	; 0xffffffcc
   15e34:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15e38:	ldr	r0, [r0, #48]	; 0x30
   15e3c:	add	r0, r0, #1
   15e40:	str	r0, [fp, #-44]	; 0xffffffd4
   15e44:	movw	r0, #0
   15e48:	strb	r0, [fp, #-38]	; 0xffffffda
   15e4c:	movw	r0, #0
   15e50:	str	r0, [fp, #-20]	; 0xffffffec
   15e54:	str	r0, [fp, #-28]	; 0xffffffe4
   15e58:	str	r0, [fp, #-24]	; 0xffffffe8
   15e5c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15e60:	ldr	r0, [r0, #12]
   15e64:	movw	r1, #0
   15e68:	cmp	r0, r1
   15e6c:	beq	16364 <__assert_fail@plt+0x4e1c>
   15e70:	bl	11404 <__errno_location@plt>
   15e74:	movw	r1, #0
   15e78:	str	r1, [r0]
   15e7c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15e80:	ldr	r0, [r0, #12]
   15e84:	bl	11488 <readdir64@plt>
   15e88:	str	r0, [sp, #64]	; 0x40
   15e8c:	ldr	r0, [sp, #64]	; 0x40
   15e90:	movw	r1, #0
   15e94:	cmp	r0, r1
   15e98:	bne	15f00 <__assert_fail@plt+0x49b8>
   15e9c:	bl	11404 <__errno_location@plt>
   15ea0:	ldr	r0, [r0]
   15ea4:	cmp	r0, #0
   15ea8:	beq	15efc <__assert_fail@plt+0x49b4>
   15eac:	bl	11404 <__errno_location@plt>
   15eb0:	ldr	r0, [r0]
   15eb4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15eb8:	str	r0, [r1, #32]
   15ebc:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   15ec0:	tst	r0, #1
   15ec4:	movw	r0, #1
   15ec8:	str	r0, [sp, #16]
   15ecc:	bne	15ee4 <__assert_fail@plt+0x499c>
   15ed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ed4:	cmp	r0, #0
   15ed8:	movw	r0, #0
   15edc:	movne	r0, #1
   15ee0:	str	r0, [sp, #16]
   15ee4:	ldr	r0, [sp, #16]
   15ee8:	tst	r0, #1
   15eec:	movw	r0, #7
   15ef0:	moveq	r0, #4
   15ef4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15ef8:	strh	r0, [r1, #56]	; 0x38
   15efc:	b	16364 <__assert_fail@plt+0x4e1c>
   15f00:	ldr	r0, [fp, #-8]
   15f04:	ldr	r0, [r0, #48]	; 0x30
   15f08:	and	r0, r0, #32
   15f0c:	cmp	r0, #0
   15f10:	bne	15f58 <__assert_fail@plt+0x4a10>
   15f14:	ldr	r0, [sp, #64]	; 0x40
   15f18:	ldrb	r0, [r0, #19]
   15f1c:	cmp	r0, #46	; 0x2e
   15f20:	bne	15f58 <__assert_fail@plt+0x4a10>
   15f24:	ldr	r0, [sp, #64]	; 0x40
   15f28:	ldrsb	r0, [r0, #20]
   15f2c:	cmp	r0, #0
   15f30:	beq	15f54 <__assert_fail@plt+0x4a0c>
   15f34:	ldr	r0, [sp, #64]	; 0x40
   15f38:	ldrb	r0, [r0, #20]
   15f3c:	cmp	r0, #46	; 0x2e
   15f40:	bne	15f58 <__assert_fail@plt+0x4a10>
   15f44:	ldr	r0, [sp, #64]	; 0x40
   15f48:	ldrsb	r0, [r0, #21]
   15f4c:	cmp	r0, #0
   15f50:	bne	15f58 <__assert_fail@plt+0x4a10>
   15f54:	b	15e5c <__assert_fail@plt+0x4914>
   15f58:	ldr	r0, [sp, #64]	; 0x40
   15f5c:	add	r0, r0, #19
   15f60:	bl	113c8 <strlen@plt>
   15f64:	str	r0, [sp, #68]	; 0x44
   15f68:	ldr	r0, [fp, #-8]
   15f6c:	ldr	r1, [sp, #64]	; 0x40
   15f70:	add	r1, r1, #19
   15f74:	ldr	r2, [sp, #68]	; 0x44
   15f78:	bl	140bc <__assert_fail@plt+0x2b74>
   15f7c:	str	r0, [fp, #-16]
   15f80:	ldr	r0, [fp, #-16]
   15f84:	movw	r1, #0
   15f88:	cmp	r0, r1
   15f8c:	bne	15f94 <__assert_fail@plt+0x4a4c>
   15f90:	b	15fd4 <__assert_fail@plt+0x4a8c>
   15f94:	ldr	r0, [sp, #68]	; 0x44
   15f98:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15f9c:	cmp	r0, r1
   15fa0:	bcc	160a0 <__assert_fail@plt+0x4b58>
   15fa4:	ldr	r0, [fp, #-8]
   15fa8:	ldr	r0, [r0, #24]
   15fac:	str	r0, [fp, #-32]	; 0xffffffe0
   15fb0:	ldr	r0, [fp, #-8]
   15fb4:	ldr	r1, [sp, #68]	; 0x44
   15fb8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15fbc:	add	r1, r1, r2
   15fc0:	add	r1, r1, #1
   15fc4:	bl	13fc4 <__assert_fail@plt+0x2a7c>
   15fc8:	tst	r0, #1
   15fcc:	bne	16044 <__assert_fail@plt+0x4afc>
   15fd0:	b	15fd4 <__assert_fail@plt+0x4a8c>
   15fd4:	bl	11404 <__errno_location@plt>
   15fd8:	ldr	r0, [r0]
   15fdc:	str	r0, [fp, #-36]	; 0xffffffdc
   15fe0:	ldr	r0, [fp, #-16]
   15fe4:	bl	13948 <__assert_fail@plt+0x2400>
   15fe8:	ldr	r0, [fp, #-20]	; 0xffffffec
   15fec:	bl	14764 <__assert_fail@plt+0x321c>
   15ff0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15ff4:	ldr	r0, [r0, #12]
   15ff8:	bl	11524 <closedir@plt>
   15ffc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   16000:	movw	r2, #0
   16004:	str	r2, [r1, #12]
   16008:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1600c:	movw	r1, #7
   16010:	strh	r1, [r0, #56]	; 0x38
   16014:	ldr	r0, [fp, #-8]
   16018:	ldr	r1, [r0, #48]	; 0x30
   1601c:	orr	r1, r1, #8192	; 0x2000
   16020:	str	r1, [r0, #48]	; 0x30
   16024:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16028:	str	r0, [sp, #12]
   1602c:	bl	11404 <__errno_location@plt>
   16030:	ldr	r1, [sp, #12]
   16034:	str	r1, [r0]
   16038:	movw	r0, #0
   1603c:	str	r0, [fp, #-4]
   16040:	b	1657c <__assert_fail@plt+0x5034>
   16044:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16048:	ldr	r1, [fp, #-8]
   1604c:	ldr	r1, [r1, #24]
   16050:	cmp	r0, r1
   16054:	beq	1608c <__assert_fail@plt+0x4b44>
   16058:	movw	r0, #1
   1605c:	strb	r0, [fp, #-38]	; 0xffffffda
   16060:	ldr	r0, [fp, #-8]
   16064:	ldr	r0, [r0, #48]	; 0x30
   16068:	and	r0, r0, #4
   1606c:	cmp	r0, #0
   16070:	beq	16088 <__assert_fail@plt+0x4b40>
   16074:	ldr	r0, [fp, #-8]
   16078:	ldr	r0, [r0, #24]
   1607c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16080:	add	r0, r0, r1
   16084:	str	r0, [fp, #-60]	; 0xffffffc4
   16088:	b	1608c <__assert_fail@plt+0x4b44>
   1608c:	ldr	r0, [fp, #-8]
   16090:	ldr	r0, [r0, #36]	; 0x24
   16094:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16098:	sub	r0, r0, r1
   1609c:	str	r0, [fp, #-52]	; 0xffffffcc
   160a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   160a4:	ldr	r1, [sp, #68]	; 0x44
   160a8:	add	r0, r0, r1
   160ac:	str	r0, [fp, #-56]	; 0xffffffc8
   160b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   160b4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   160b8:	cmp	r0, r1
   160bc:	bcs	1611c <__assert_fail@plt+0x4bd4>
   160c0:	ldr	r0, [fp, #-16]
   160c4:	bl	13948 <__assert_fail@plt+0x2400>
   160c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   160cc:	bl	14764 <__assert_fail@plt+0x321c>
   160d0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   160d4:	ldr	r0, [r0, #12]
   160d8:	bl	11524 <closedir@plt>
   160dc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   160e0:	movw	r2, #0
   160e4:	str	r2, [r1, #12]
   160e8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   160ec:	movw	r1, #7
   160f0:	strh	r1, [r0, #56]	; 0x38
   160f4:	ldr	r0, [fp, #-8]
   160f8:	ldr	r1, [r0, #48]	; 0x30
   160fc:	orr	r1, r1, #8192	; 0x2000
   16100:	str	r1, [r0, #48]	; 0x30
   16104:	bl	11404 <__errno_location@plt>
   16108:	movw	r1, #36	; 0x24
   1610c:	str	r1, [r0]
   16110:	movw	r0, #0
   16114:	str	r0, [fp, #-4]
   16118:	b	1657c <__assert_fail@plt+0x5034>
   1611c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16120:	ldr	r1, [fp, #-16]
   16124:	str	r0, [r1, #48]	; 0x30
   16128:	ldr	r0, [fp, #-8]
   1612c:	ldr	r0, [r0]
   16130:	ldr	r1, [fp, #-16]
   16134:	str	r0, [r1, #4]
   16138:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1613c:	ldr	r1, [fp, #-16]
   16140:	str	r0, [r1, #40]	; 0x28
   16144:	ldr	r0, [sp, #64]	; 0x40
   16148:	ldr	r1, [r0]
   1614c:	ldr	r0, [r0, #4]
   16150:	ldr	r2, [fp, #-16]
   16154:	str	r0, [r2, #164]	; 0xa4
   16158:	str	r1, [r2, #160]	; 0xa0
   1615c:	ldr	r0, [fp, #-8]
   16160:	ldr	r0, [r0, #48]	; 0x30
   16164:	and	r0, r0, #4
   16168:	cmp	r0, #0
   1616c:	beq	161a0 <__assert_fail@plt+0x4c58>
   16170:	ldr	r0, [fp, #-16]
   16174:	ldr	r0, [r0, #28]
   16178:	ldr	r1, [fp, #-16]
   1617c:	str	r0, [r1, #24]
   16180:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16184:	ldr	r1, [fp, #-16]
   16188:	add	r1, r1, #168	; 0xa8
   1618c:	ldr	r2, [fp, #-16]
   16190:	ldr	r2, [r2, #52]	; 0x34
   16194:	add	r2, r2, #1
   16198:	bl	11278 <memmove@plt>
   1619c:	b	161b0 <__assert_fail@plt+0x4c68>
   161a0:	ldr	r0, [fp, #-16]
   161a4:	add	r0, r0, #168	; 0xa8
   161a8:	ldr	r1, [fp, #-16]
   161ac:	str	r0, [r1, #24]
   161b0:	ldr	r0, [fp, #-8]
   161b4:	ldr	r0, [r0, #44]	; 0x2c
   161b8:	movw	r1, #0
   161bc:	cmp	r0, r1
   161c0:	beq	161d8 <__assert_fail@plt+0x4c90>
   161c4:	ldr	r0, [fp, #-8]
   161c8:	ldr	r0, [r0, #48]	; 0x30
   161cc:	and	r0, r0, #1024	; 0x400
   161d0:	cmp	r0, #0
   161d4:	beq	162b0 <__assert_fail@plt+0x4d68>
   161d8:	ldr	r0, [fp, #-8]
   161dc:	ldr	r0, [r0, #48]	; 0x30
   161e0:	and	r0, r0, #8
   161e4:	cmp	r0, #0
   161e8:	movw	r0, #0
   161ec:	str	r0, [sp, #8]
   161f0:	beq	16268 <__assert_fail@plt+0x4d20>
   161f4:	ldr	r0, [sp, #64]	; 0x40
   161f8:	ldrb	r0, [r0, #18]
   161fc:	cmp	r0, #0
   16200:	movw	r0, #0
   16204:	str	r0, [sp, #8]
   16208:	beq	16268 <__assert_fail@plt+0x4d20>
   1620c:	ldr	r0, [sp, #64]	; 0x40
   16210:	ldrb	r0, [r0, #18]
   16214:	cmp	r0, #4
   16218:	movw	r0, #0
   1621c:	str	r0, [sp, #8]
   16220:	beq	16268 <__assert_fail@plt+0x4d20>
   16224:	ldr	r0, [fp, #-8]
   16228:	ldr	r0, [r0, #48]	; 0x30
   1622c:	and	r0, r0, #16
   16230:	cmp	r0, #0
   16234:	movw	r0, #1
   16238:	str	r0, [sp, #4]
   1623c:	bne	16260 <__assert_fail@plt+0x4d18>
   16240:	ldr	r0, [sp, #64]	; 0x40
   16244:	ldrb	r0, [r0, #18]
   16248:	cmp	r0, #10
   1624c:	movw	r0, #0
   16250:	moveq	r0, #1
   16254:	mvn	r1, #0
   16258:	eor	r0, r0, r1
   1625c:	str	r0, [sp, #4]
   16260:	ldr	r0, [sp, #4]
   16264:	str	r0, [sp, #8]
   16268:	ldr	r0, [sp, #8]
   1626c:	and	r0, r0, #1
   16270:	strb	r0, [sp, #63]	; 0x3f
   16274:	ldr	r0, [fp, #-16]
   16278:	movw	r1, #11
   1627c:	strh	r1, [r0, #56]	; 0x38
   16280:	ldr	r0, [fp, #-16]
   16284:	add	r0, r0, #64	; 0x40
   16288:	ldr	r1, [sp, #64]	; 0x40
   1628c:	ldrb	r1, [r1, #18]
   16290:	bl	16e0c <__assert_fail@plt+0x58c4>
   16294:	ldr	r0, [fp, #-16]
   16298:	ldrb	r1, [sp, #63]	; 0x3f
   1629c:	mvn	r2, #0
   162a0:	eor	r1, r1, r2
   162a4:	and	r1, r1, #1
   162a8:	bl	141b4 <__assert_fail@plt+0x2c6c>
   162ac:	b	162cc <__assert_fail@plt+0x4d84>
   162b0:	ldr	r0, [fp, #-8]
   162b4:	ldr	r1, [fp, #-16]
   162b8:	movw	r2, #0
   162bc:	and	r2, r2, #1
   162c0:	bl	1420c <__assert_fail@plt+0x2cc4>
   162c4:	ldr	r1, [fp, #-16]
   162c8:	strh	r0, [r1, #56]	; 0x38
   162cc:	ldr	r0, [fp, #-16]
   162d0:	movw	r1, #0
   162d4:	str	r1, [r0, #8]
   162d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   162dc:	cmp	r0, r1
   162e0:	bne	162f4 <__assert_fail@plt+0x4dac>
   162e4:	ldr	r0, [fp, #-16]
   162e8:	str	r0, [fp, #-28]	; 0xffffffe4
   162ec:	str	r0, [fp, #-20]	; 0xffffffec
   162f0:	b	16308 <__assert_fail@plt+0x4dc0>
   162f4:	ldr	r0, [fp, #-16]
   162f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   162fc:	str	r0, [r1, #8]
   16300:	ldr	r0, [fp, #-16]
   16304:	str	r0, [fp, #-28]	; 0xffffffe4
   16308:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1630c:	movw	r1, #10000	; 0x2710
   16310:	cmp	r0, r1
   16314:	bne	16340 <__assert_fail@plt+0x4df8>
   16318:	ldr	r0, [fp, #-8]
   1631c:	ldr	r0, [r0, #44]	; 0x2c
   16320:	movw	r1, #0
   16324:	cmp	r0, r1
   16328:	bne	16340 <__assert_fail@plt+0x4df8>
   1632c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16330:	ldr	r1, [fp, #-64]	; 0xffffffc0
   16334:	bl	16edc <__assert_fail@plt+0x5994>
   16338:	and	r0, r0, #1
   1633c:	strb	r0, [fp, #-70]	; 0xffffffba
   16340:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16344:	add	r0, r0, #1
   16348:	str	r0, [fp, #-24]	; 0xffffffe8
   1634c:	ldr	r0, [sp, #76]	; 0x4c
   16350:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16354:	cmp	r0, r1
   16358:	bhi	16360 <__assert_fail@plt+0x4e18>
   1635c:	b	1639c <__assert_fail@plt+0x4e54>
   16360:	b	15e5c <__assert_fail@plt+0x4914>
   16364:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16368:	ldr	r0, [r0, #12]
   1636c:	movw	r1, #0
   16370:	cmp	r0, r1
   16374:	beq	16398 <__assert_fail@plt+0x4e50>
   16378:	b	1637c <__assert_fail@plt+0x4e34>
   1637c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16380:	ldr	r0, [r0, #12]
   16384:	bl	11524 <closedir@plt>
   16388:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1638c:	movw	r2, #0
   16390:	str	r2, [r1, #12]
   16394:	b	16398 <__assert_fail@plt+0x4e50>
   16398:	b	1639c <__assert_fail@plt+0x4e54>
   1639c:	ldrb	r0, [fp, #-38]	; 0xffffffda
   163a0:	tst	r0, #1
   163a4:	beq	163b4 <__assert_fail@plt+0x4e6c>
   163a8:	ldr	r0, [fp, #-8]
   163ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   163b0:	bl	16f70 <__assert_fail@plt+0x5a28>
   163b4:	ldr	r0, [fp, #-8]
   163b8:	ldr	r0, [r0, #48]	; 0x30
   163bc:	and	r0, r0, #4
   163c0:	cmp	r0, #0
   163c4:	beq	16404 <__assert_fail@plt+0x4ebc>
   163c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   163cc:	ldr	r1, [fp, #-8]
   163d0:	ldr	r1, [r1, #36]	; 0x24
   163d4:	cmp	r0, r1
   163d8:	beq	163e8 <__assert_fail@plt+0x4ea0>
   163dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163e0:	cmp	r0, #0
   163e4:	bne	163f8 <__assert_fail@plt+0x4eb0>
   163e8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   163ec:	mvn	r1, #0
   163f0:	add	r0, r0, r1
   163f4:	str	r0, [fp, #-60]	; 0xffffffc4
   163f8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   163fc:	movw	r1, #0
   16400:	strb	r1, [r0]
   16404:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   16408:	tst	r0, #1
   1640c:	bne	164ac <__assert_fail@plt+0x4f64>
   16410:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   16414:	tst	r0, #1
   16418:	beq	164ac <__assert_fail@plt+0x4f64>
   1641c:	ldr	r0, [fp, #-12]
   16420:	cmp	r0, #1
   16424:	beq	16434 <__assert_fail@plt+0x4eec>
   16428:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1642c:	cmp	r0, #0
   16430:	bne	164ac <__assert_fail@plt+0x4f64>
   16434:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16438:	ldr	r0, [r0, #48]	; 0x30
   1643c:	cmp	r0, #0
   16440:	bne	16458 <__assert_fail@plt+0x4f10>
   16444:	ldr	r0, [fp, #-8]
   16448:	bl	1658c <__assert_fail@plt+0x5044>
   1644c:	cmp	r0, #0
   16450:	bne	1647c <__assert_fail@plt+0x4f34>
   16454:	b	164ac <__assert_fail@plt+0x4f64>
   16458:	ldr	r0, [fp, #-8]
   1645c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   16460:	ldr	r1, [r1, #4]
   16464:	mvn	r2, #0
   16468:	movw	r3, #22650	; 0x587a
   1646c:	movt	r3, #2
   16470:	bl	15608 <__assert_fail@plt+0x40c0>
   16474:	cmp	r0, #0
   16478:	beq	164ac <__assert_fail@plt+0x4f64>
   1647c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16480:	movw	r1, #7
   16484:	strh	r1, [r0, #56]	; 0x38
   16488:	ldr	r0, [fp, #-8]
   1648c:	ldr	r1, [r0, #48]	; 0x30
   16490:	orr	r1, r1, #8192	; 0x2000
   16494:	str	r1, [r0, #48]	; 0x30
   16498:	ldr	r0, [fp, #-20]	; 0xffffffec
   1649c:	bl	14764 <__assert_fail@plt+0x321c>
   164a0:	movw	r0, #0
   164a4:	str	r0, [fp, #-4]
   164a8:	b	1657c <__assert_fail@plt+0x5034>
   164ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164b0:	cmp	r0, #0
   164b4:	bne	16504 <__assert_fail@plt+0x4fbc>
   164b8:	ldr	r0, [fp, #-12]
   164bc:	cmp	r0, #3
   164c0:	bne	164f0 <__assert_fail@plt+0x4fa8>
   164c4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   164c8:	ldrh	r0, [r0, #56]	; 0x38
   164cc:	cmp	r0, #4
   164d0:	beq	164f0 <__assert_fail@plt+0x4fa8>
   164d4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   164d8:	ldrh	r0, [r0, #56]	; 0x38
   164dc:	cmp	r0, #7
   164e0:	beq	164f0 <__assert_fail@plt+0x4fa8>
   164e4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   164e8:	movw	r1, #6
   164ec:	strh	r1, [r0, #56]	; 0x38
   164f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   164f4:	bl	14764 <__assert_fail@plt+0x321c>
   164f8:	movw	r0, #0
   164fc:	str	r0, [fp, #-4]
   16500:	b	1657c <__assert_fail@plt+0x5034>
   16504:	ldrb	r0, [fp, #-70]	; 0xffffffba
   16508:	tst	r0, #1
   1650c:	beq	16540 <__assert_fail@plt+0x4ff8>
   16510:	ldr	r0, [fp, #-8]
   16514:	movw	r1, #28844	; 0x70ac
   16518:	movt	r1, #1
   1651c:	str	r1, [r0, #44]	; 0x2c
   16520:	ldr	r0, [fp, #-8]
   16524:	ldr	r1, [fp, #-20]	; 0xffffffec
   16528:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1652c:	bl	14424 <__assert_fail@plt+0x2edc>
   16530:	str	r0, [fp, #-20]	; 0xffffffec
   16534:	ldr	r0, [fp, #-8]
   16538:	movw	r1, #0
   1653c:	str	r1, [r0, #44]	; 0x2c
   16540:	ldr	r0, [fp, #-8]
   16544:	ldr	r0, [r0, #44]	; 0x2c
   16548:	movw	r1, #0
   1654c:	cmp	r0, r1
   16550:	beq	16574 <__assert_fail@plt+0x502c>
   16554:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16558:	cmp	r0, #1
   1655c:	bls	16574 <__assert_fail@plt+0x502c>
   16560:	ldr	r0, [fp, #-8]
   16564:	ldr	r1, [fp, #-20]	; 0xffffffec
   16568:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1656c:	bl	14424 <__assert_fail@plt+0x2edc>
   16570:	str	r0, [fp, #-20]	; 0xffffffec
   16574:	ldr	r0, [fp, #-20]	; 0xffffffec
   16578:	str	r0, [fp, #-4]
   1657c:	ldr	r0, [fp, #-4]
   16580:	mov	sp, fp
   16584:	pop	{fp, pc}
   16588:	andeq	r8, r1, r0, lsr #13
   1658c:	push	{fp, lr}
   16590:	mov	fp, sp
   16594:	sub	sp, sp, #32
   16598:	str	r0, [fp, #-4]
   1659c:	ldr	r0, [fp, #-4]
   165a0:	ldr	r0, [r0, #48]	; 0x30
   165a4:	and	r0, r0, #4
   165a8:	cmp	r0, #0
   165ac:	movw	r0, #0
   165b0:	str	r0, [fp, #-12]
   165b4:	bne	16678 <__assert_fail@plt+0x5130>
   165b8:	ldr	r0, [fp, #-4]
   165bc:	ldr	r0, [r0, #48]	; 0x30
   165c0:	and	r0, r0, #512	; 0x200
   165c4:	cmp	r0, #0
   165c8:	beq	1662c <__assert_fail@plt+0x50e4>
   165cc:	ldr	r0, [fp, #-4]
   165d0:	ldr	r1, [fp, #-4]
   165d4:	ldr	r1, [r1, #48]	; 0x30
   165d8:	and	r1, r1, #512	; 0x200
   165dc:	cmp	r1, #0
   165e0:	str	r0, [sp, #16]
   165e4:	beq	165f4 <__assert_fail@plt+0x50ac>
   165e8:	mvn	r0, #99	; 0x63
   165ec:	str	r0, [sp, #12]
   165f0:	b	16600 <__assert_fail@plt+0x50b8>
   165f4:	ldr	r0, [fp, #-4]
   165f8:	ldr	r0, [r0, #28]
   165fc:	str	r0, [sp, #12]
   16600:	ldr	r0, [sp, #12]
   16604:	ldr	r1, [sp, #16]
   16608:	str	r0, [sp, #8]
   1660c:	mov	r0, r1
   16610:	ldr	r1, [sp, #8]
   16614:	movw	r2, #1
   16618:	and	r2, r2, #1
   1661c:	bl	168dc <__assert_fail@plt+0x5394>
   16620:	movw	r0, #0
   16624:	str	r0, [sp, #4]
   16628:	b	16664 <__assert_fail@plt+0x511c>
   1662c:	ldr	r0, [fp, #-4]
   16630:	ldr	r0, [r0, #48]	; 0x30
   16634:	and	r0, r0, #512	; 0x200
   16638:	cmp	r0, #0
   1663c:	beq	1664c <__assert_fail@plt+0x5104>
   16640:	mvn	r0, #99	; 0x63
   16644:	str	r0, [sp]
   16648:	b	16658 <__assert_fail@plt+0x5110>
   1664c:	ldr	r0, [fp, #-4]
   16650:	ldr	r0, [r0, #28]
   16654:	str	r0, [sp]
   16658:	ldr	r0, [sp]
   1665c:	bl	114ac <fchdir@plt>
   16660:	str	r0, [sp, #4]
   16664:	ldr	r0, [sp, #4]
   16668:	cmp	r0, #0
   1666c:	movw	r0, #0
   16670:	movne	r0, #1
   16674:	str	r0, [fp, #-12]
   16678:	ldr	r0, [fp, #-12]
   1667c:	and	r0, r0, #1
   16680:	str	r0, [fp, #-8]
   16684:	ldr	r0, [fp, #-4]
   16688:	add	r0, r0, #60	; 0x3c
   1668c:	bl	149d0 <__assert_fail@plt+0x3488>
   16690:	ldr	r0, [fp, #-8]
   16694:	mov	sp, fp
   16698:	pop	{fp, pc}
   1669c:	push	{fp, lr}
   166a0:	mov	fp, sp
   166a4:	sub	sp, sp, #16
   166a8:	str	r0, [fp, #-4]
   166ac:	str	r1, [sp, #8]
   166b0:	ldr	r0, [sp, #8]
   166b4:	ldr	r0, [r0, #52]	; 0x34
   166b8:	ldr	r1, [sp, #8]
   166bc:	str	r0, [r1, #40]	; 0x28
   166c0:	str	r0, [sp, #4]
   166c4:	ldr	r0, [fp, #-4]
   166c8:	ldr	r0, [r0, #24]
   166cc:	ldr	r1, [sp, #8]
   166d0:	add	r1, r1, #168	; 0xa8
   166d4:	ldr	r2, [sp, #4]
   166d8:	add	r2, r2, #1
   166dc:	bl	11278 <memmove@plt>
   166e0:	ldr	r0, [sp, #8]
   166e4:	add	r0, r0, #168	; 0xa8
   166e8:	movw	r1, #47	; 0x2f
   166ec:	bl	11470 <strrchr@plt>
   166f0:	str	r0, [sp]
   166f4:	movw	r1, #0
   166f8:	cmp	r0, r1
   166fc:	beq	1675c <__assert_fail@plt+0x5214>
   16700:	ldr	r0, [sp]
   16704:	ldr	r1, [sp, #8]
   16708:	add	r1, r1, #168	; 0xa8
   1670c:	cmp	r0, r1
   16710:	bne	16724 <__assert_fail@plt+0x51dc>
   16714:	ldr	r0, [sp]
   16718:	ldrb	r0, [r0, #1]
   1671c:	cmp	r0, #0
   16720:	beq	1675c <__assert_fail@plt+0x5214>
   16724:	ldr	r0, [sp]
   16728:	add	r0, r0, #1
   1672c:	str	r0, [sp]
   16730:	bl	113c8 <strlen@plt>
   16734:	str	r0, [sp, #4]
   16738:	ldr	r0, [sp, #8]
   1673c:	add	r0, r0, #168	; 0xa8
   16740:	ldr	r1, [sp]
   16744:	ldr	r2, [sp, #4]
   16748:	add	r2, r2, #1
   1674c:	bl	11278 <memmove@plt>
   16750:	ldr	r0, [sp, #4]
   16754:	ldr	r1, [sp, #8]
   16758:	str	r0, [r1, #52]	; 0x34
   1675c:	ldr	r0, [fp, #-4]
   16760:	ldr	r0, [r0, #24]
   16764:	ldr	r1, [sp, #8]
   16768:	str	r0, [r1, #28]
   1676c:	ldr	r1, [sp, #8]
   16770:	str	r0, [r1, #24]
   16774:	mov	sp, fp
   16778:	pop	{fp, pc}
   1677c:	push	{fp, lr}
   16780:	mov	fp, sp
   16784:	sub	sp, sp, #24
   16788:	str	r0, [fp, #-8]
   1678c:	str	r1, [sp, #12]
   16790:	ldr	r0, [fp, #-8]
   16794:	ldr	r0, [r0, #48]	; 0x30
   16798:	movw	r1, #258	; 0x102
   1679c:	and	r0, r0, r1
   167a0:	cmp	r0, #0
   167a4:	beq	16888 <__assert_fail@plt+0x5340>
   167a8:	ldr	r0, [sp, #12]
   167ac:	add	r0, r0, #64	; 0x40
   167b0:	str	r0, [sp, #8]
   167b4:	movw	r0, #24
   167b8:	bl	217a4 <__assert_fail@plt+0x1025c>
   167bc:	str	r0, [sp, #4]
   167c0:	ldr	r0, [sp, #4]
   167c4:	movw	r1, #0
   167c8:	cmp	r0, r1
   167cc:	bne	167e0 <__assert_fail@plt+0x5298>
   167d0:	movw	r0, #0
   167d4:	and	r0, r0, #1
   167d8:	strb	r0, [fp, #-1]
   167dc:	b	168cc <__assert_fail@plt+0x5384>
   167e0:	ldr	r0, [sp, #8]
   167e4:	ldr	r1, [r0]
   167e8:	ldr	r0, [r0, #4]
   167ec:	ldr	r2, [sp, #4]
   167f0:	str	r0, [r2, #4]
   167f4:	str	r1, [r2]
   167f8:	ldr	r0, [sp, #8]
   167fc:	ldr	r1, [r0, #96]	; 0x60
   16800:	ldr	r0, [r0, #100]	; 0x64
   16804:	ldr	r2, [sp, #4]
   16808:	str	r0, [r2, #12]
   1680c:	str	r1, [r2, #8]
   16810:	ldr	r0, [sp, #12]
   16814:	ldr	r1, [sp, #4]
   16818:	str	r0, [r1, #16]
   1681c:	ldr	r0, [fp, #-8]
   16820:	ldr	r0, [r0, #56]	; 0x38
   16824:	ldr	r1, [sp, #4]
   16828:	bl	18c10 <__assert_fail@plt+0x76c8>
   1682c:	str	r0, [sp]
   16830:	ldr	r0, [sp]
   16834:	ldr	r1, [sp, #4]
   16838:	cmp	r0, r1
   1683c:	beq	16884 <__assert_fail@plt+0x533c>
   16840:	ldr	r0, [sp, #4]
   16844:	bl	13948 <__assert_fail@plt+0x2400>
   16848:	ldr	r0, [sp]
   1684c:	movw	r1, #0
   16850:	cmp	r0, r1
   16854:	bne	16868 <__assert_fail@plt+0x5320>
   16858:	movw	r0, #0
   1685c:	and	r0, r0, #1
   16860:	strb	r0, [fp, #-1]
   16864:	b	168cc <__assert_fail@plt+0x5384>
   16868:	ldr	r0, [sp]
   1686c:	ldr	r0, [r0, #16]
   16870:	ldr	r1, [sp, #12]
   16874:	str	r0, [r1]
   16878:	ldr	r0, [sp, #12]
   1687c:	movw	r1, #2
   16880:	strh	r1, [r0, #56]	; 0x38
   16884:	b	168c0 <__assert_fail@plt+0x5378>
   16888:	ldr	r0, [fp, #-8]
   1688c:	ldr	r0, [r0, #56]	; 0x38
   16890:	ldr	r1, [sp, #12]
   16894:	add	r1, r1, #64	; 0x40
   16898:	bl	21d50 <__assert_fail@plt+0x10808>
   1689c:	tst	r0, #1
   168a0:	beq	168bc <__assert_fail@plt+0x5374>
   168a4:	ldr	r0, [sp, #12]
   168a8:	ldr	r1, [sp, #12]
   168ac:	str	r0, [r1]
   168b0:	ldr	r0, [sp, #12]
   168b4:	movw	r1, #2
   168b8:	strh	r1, [r0, #56]	; 0x38
   168bc:	b	168c0 <__assert_fail@plt+0x5378>
   168c0:	movw	r0, #1
   168c4:	and	r0, r0, #1
   168c8:	strb	r0, [fp, #-1]
   168cc:	ldrb	r0, [fp, #-1]
   168d0:	and	r0, r0, #1
   168d4:	mov	sp, fp
   168d8:	pop	{fp, pc}
   168dc:	push	{fp, lr}
   168e0:	mov	fp, sp
   168e4:	sub	sp, sp, #24
   168e8:	str	r0, [fp, #-4]
   168ec:	str	r1, [fp, #-8]
   168f0:	and	r0, r2, #1
   168f4:	strb	r0, [fp, #-9]
   168f8:	ldr	r0, [fp, #-4]
   168fc:	ldr	r0, [r0, #32]
   16900:	str	r0, [sp, #8]
   16904:	ldr	r0, [sp, #8]
   16908:	ldr	r1, [fp, #-8]
   1690c:	cmp	r0, r1
   16910:	bne	16924 <__assert_fail@plt+0x53dc>
   16914:	ldr	r0, [sp, #8]
   16918:	cmn	r0, #100	; 0x64
   1691c:	beq	16924 <__assert_fail@plt+0x53dc>
   16920:	bl	11500 <abort@plt>
   16924:	b	16928 <__assert_fail@plt+0x53e0>
   16928:	ldrb	r0, [fp, #-9]
   1692c:	tst	r0, #1
   16930:	beq	16964 <__assert_fail@plt+0x541c>
   16934:	ldr	r0, [fp, #-4]
   16938:	add	r0, r0, #60	; 0x3c
   1693c:	ldr	r1, [sp, #8]
   16940:	bl	190d0 <__assert_fail@plt+0x7b88>
   16944:	str	r0, [sp, #4]
   16948:	ldr	r0, [sp, #4]
   1694c:	movw	r1, #0
   16950:	cmp	r1, r0
   16954:	bgt	16960 <__assert_fail@plt+0x5418>
   16958:	ldr	r0, [sp, #4]
   1695c:	bl	1150c <close@plt>
   16960:	b	16998 <__assert_fail@plt+0x5450>
   16964:	ldr	r0, [fp, #-4]
   16968:	ldr	r0, [r0, #48]	; 0x30
   1696c:	and	r0, r0, #4
   16970:	cmp	r0, #0
   16974:	bne	16994 <__assert_fail@plt+0x544c>
   16978:	ldr	r0, [sp, #8]
   1697c:	movw	r1, #0
   16980:	cmp	r1, r0
   16984:	bgt	16990 <__assert_fail@plt+0x5448>
   16988:	ldr	r0, [sp, #8]
   1698c:	bl	1150c <close@plt>
   16990:	b	16994 <__assert_fail@plt+0x544c>
   16994:	b	16998 <__assert_fail@plt+0x5450>
   16998:	ldr	r0, [fp, #-8]
   1699c:	ldr	r1, [fp, #-4]
   169a0:	str	r0, [r1, #32]
   169a4:	mov	sp, fp
   169a8:	pop	{fp, pc}
   169ac:	push	{fp, lr}
   169b0:	mov	fp, sp
   169b4:	sub	sp, sp, #16
   169b8:	str	r0, [sp, #8]
   169bc:	str	r1, [sp, #4]
   169c0:	str	r2, [sp]
   169c4:	ldr	r0, [sp]
   169c8:	cmp	r0, #0
   169cc:	beq	16a18 <__assert_fail@plt+0x54d0>
   169d0:	ldr	r0, [sp]
   169d4:	cmp	r0, #1
   169d8:	beq	16a18 <__assert_fail@plt+0x54d0>
   169dc:	ldr	r0, [sp]
   169e0:	cmp	r0, #2
   169e4:	beq	16a18 <__assert_fail@plt+0x54d0>
   169e8:	ldr	r0, [sp]
   169ec:	cmp	r0, #3
   169f0:	beq	16a18 <__assert_fail@plt+0x54d0>
   169f4:	ldr	r0, [sp]
   169f8:	cmp	r0, #4
   169fc:	beq	16a18 <__assert_fail@plt+0x54d0>
   16a00:	bl	11404 <__errno_location@plt>
   16a04:	movw	r1, #22
   16a08:	str	r1, [r0]
   16a0c:	movw	r0, #1
   16a10:	str	r0, [fp, #-4]
   16a14:	b	16a2c <__assert_fail@plt+0x54e4>
   16a18:	ldr	r0, [sp]
   16a1c:	ldr	r1, [sp, #4]
   16a20:	strh	r0, [r1, #60]	; 0x3c
   16a24:	movw	r0, #0
   16a28:	str	r0, [fp, #-4]
   16a2c:	ldr	r0, [fp, #-4]
   16a30:	mov	sp, fp
   16a34:	pop	{fp, pc}
   16a38:	push	{fp, lr}
   16a3c:	mov	fp, sp
   16a40:	sub	sp, sp, #32
   16a44:	str	r0, [fp, #-8]
   16a48:	str	r1, [fp, #-12]
   16a4c:	ldr	r0, [fp, #-12]
   16a50:	cmp	r0, #0
   16a54:	beq	16a7c <__assert_fail@plt+0x5534>
   16a58:	ldr	r0, [fp, #-12]
   16a5c:	cmp	r0, #4096	; 0x1000
   16a60:	beq	16a7c <__assert_fail@plt+0x5534>
   16a64:	bl	11404 <__errno_location@plt>
   16a68:	movw	r1, #22
   16a6c:	str	r1, [r0]
   16a70:	movw	r0, #0
   16a74:	str	r0, [fp, #-4]
   16a78:	b	16c60 <__assert_fail@plt+0x5718>
   16a7c:	ldr	r0, [fp, #-8]
   16a80:	ldr	r0, [r0]
   16a84:	str	r0, [sp, #16]
   16a88:	bl	11404 <__errno_location@plt>
   16a8c:	movw	r1, #0
   16a90:	str	r1, [r0]
   16a94:	ldr	r0, [fp, #-8]
   16a98:	ldr	r0, [r0, #48]	; 0x30
   16a9c:	and	r0, r0, #8192	; 0x2000
   16aa0:	cmp	r0, #0
   16aa4:	beq	16ab4 <__assert_fail@plt+0x556c>
   16aa8:	movw	r0, #0
   16aac:	str	r0, [fp, #-4]
   16ab0:	b	16c60 <__assert_fail@plt+0x5718>
   16ab4:	ldr	r0, [sp, #16]
   16ab8:	ldrh	r0, [r0, #56]	; 0x38
   16abc:	cmp	r0, #9
   16ac0:	bne	16ad4 <__assert_fail@plt+0x558c>
   16ac4:	ldr	r0, [sp, #16]
   16ac8:	ldr	r0, [r0, #8]
   16acc:	str	r0, [fp, #-4]
   16ad0:	b	16c60 <__assert_fail@plt+0x5718>
   16ad4:	ldr	r0, [sp, #16]
   16ad8:	ldrh	r0, [r0, #56]	; 0x38
   16adc:	cmp	r0, #1
   16ae0:	beq	16af0 <__assert_fail@plt+0x55a8>
   16ae4:	movw	r0, #0
   16ae8:	str	r0, [fp, #-4]
   16aec:	b	16c60 <__assert_fail@plt+0x5718>
   16af0:	ldr	r0, [fp, #-8]
   16af4:	ldr	r0, [r0, #4]
   16af8:	movw	r1, #0
   16afc:	cmp	r0, r1
   16b00:	beq	16b10 <__assert_fail@plt+0x55c8>
   16b04:	ldr	r0, [fp, #-8]
   16b08:	ldr	r0, [r0, #4]
   16b0c:	bl	14764 <__assert_fail@plt+0x321c>
   16b10:	ldr	r0, [fp, #-12]
   16b14:	cmp	r0, #4096	; 0x1000
   16b18:	bne	16b38 <__assert_fail@plt+0x55f0>
   16b1c:	ldr	r0, [fp, #-8]
   16b20:	ldr	r1, [r0, #48]	; 0x30
   16b24:	orr	r1, r1, #4096	; 0x1000
   16b28:	str	r1, [r0, #48]	; 0x30
   16b2c:	movw	r0, #2
   16b30:	str	r0, [fp, #-12]
   16b34:	b	16b40 <__assert_fail@plt+0x55f8>
   16b38:	movw	r0, #1
   16b3c:	str	r0, [fp, #-12]
   16b40:	ldr	r0, [sp, #16]
   16b44:	ldr	r0, [r0, #48]	; 0x30
   16b48:	cmp	r0, #0
   16b4c:	bne	16b78 <__assert_fail@plt+0x5630>
   16b50:	ldr	r0, [sp, #16]
   16b54:	ldr	r0, [r0, #24]
   16b58:	ldrb	r0, [r0]
   16b5c:	cmp	r0, #47	; 0x2f
   16b60:	beq	16b78 <__assert_fail@plt+0x5630>
   16b64:	ldr	r0, [fp, #-8]
   16b68:	ldr	r0, [r0, #48]	; 0x30
   16b6c:	and	r0, r0, #4
   16b70:	cmp	r0, #0
   16b74:	beq	16b94 <__assert_fail@plt+0x564c>
   16b78:	ldr	r0, [fp, #-8]
   16b7c:	ldr	r1, [fp, #-12]
   16b80:	bl	158c8 <__assert_fail@plt+0x4380>
   16b84:	ldr	r1, [fp, #-8]
   16b88:	str	r0, [r1, #4]
   16b8c:	str	r0, [fp, #-4]
   16b90:	b	16c60 <__assert_fail@plt+0x5718>
   16b94:	ldr	r0, [fp, #-8]
   16b98:	movw	r1, #22651	; 0x587b
   16b9c:	movt	r1, #2
   16ba0:	bl	146c8 <__assert_fail@plt+0x3180>
   16ba4:	str	r0, [sp, #12]
   16ba8:	cmp	r0, #0
   16bac:	bge	16bc4 <__assert_fail@plt+0x567c>
   16bb0:	ldr	r0, [fp, #-8]
   16bb4:	movw	r1, #0
   16bb8:	str	r1, [r0, #4]
   16bbc:	str	r1, [fp, #-4]
   16bc0:	b	16c60 <__assert_fail@plt+0x5718>
   16bc4:	ldr	r0, [fp, #-8]
   16bc8:	ldr	r1, [fp, #-12]
   16bcc:	bl	158c8 <__assert_fail@plt+0x4380>
   16bd0:	ldr	r1, [fp, #-8]
   16bd4:	str	r0, [r1, #4]
   16bd8:	ldr	r0, [fp, #-8]
   16bdc:	ldr	r0, [r0, #48]	; 0x30
   16be0:	and	r0, r0, #512	; 0x200
   16be4:	cmp	r0, #0
   16be8:	beq	16c04 <__assert_fail@plt+0x56bc>
   16bec:	ldr	r0, [fp, #-8]
   16bf0:	ldr	r1, [sp, #12]
   16bf4:	movw	r2, #1
   16bf8:	and	r2, r2, #1
   16bfc:	bl	168dc <__assert_fail@plt+0x5394>
   16c00:	b	16c54 <__assert_fail@plt+0x570c>
   16c04:	ldr	r0, [sp, #12]
   16c08:	bl	114ac <fchdir@plt>
   16c0c:	cmp	r0, #0
   16c10:	beq	16c4c <__assert_fail@plt+0x5704>
   16c14:	bl	11404 <__errno_location@plt>
   16c18:	ldr	r0, [r0]
   16c1c:	str	r0, [sp, #8]
   16c20:	ldr	r0, [sp, #12]
   16c24:	bl	1150c <close@plt>
   16c28:	ldr	r1, [sp, #8]
   16c2c:	str	r0, [sp, #4]
   16c30:	str	r1, [sp]
   16c34:	bl	11404 <__errno_location@plt>
   16c38:	ldr	r1, [sp]
   16c3c:	str	r1, [r0]
   16c40:	movw	r0, #0
   16c44:	str	r0, [fp, #-4]
   16c48:	b	16c60 <__assert_fail@plt+0x5718>
   16c4c:	ldr	r0, [sp, #12]
   16c50:	bl	1150c <close@plt>
   16c54:	ldr	r0, [fp, #-8]
   16c58:	ldr	r0, [r0, #4]
   16c5c:	str	r0, [fp, #-4]
   16c60:	ldr	r0, [fp, #-4]
   16c64:	mov	sp, fp
   16c68:	pop	{fp, pc}
   16c6c:	push	{fp, lr}
   16c70:	mov	fp, sp
   16c74:	sub	sp, sp, #24
   16c78:	str	r0, [fp, #-4]
   16c7c:	str	r1, [fp, #-8]
   16c80:	ldr	r0, [fp, #-4]
   16c84:	str	r0, [sp, #12]
   16c88:	ldr	r0, [sp, #12]
   16c8c:	ldr	r1, [r0, #8]
   16c90:	ldr	r0, [r0, #12]
   16c94:	ldr	r2, [fp, #-8]
   16c98:	mov	r3, #0
   16c9c:	str	r0, [sp, #8]
   16ca0:	mov	r0, r1
   16ca4:	ldr	r1, [sp, #8]
   16ca8:	bl	24564 <__assert_fail@plt+0x1301c>
   16cac:	str	r0, [sp, #4]
   16cb0:	mov	r0, r2
   16cb4:	mov	sp, fp
   16cb8:	pop	{fp, pc}
   16cbc:	sub	sp, sp, #20
   16cc0:	str	r0, [sp, #16]
   16cc4:	str	r1, [sp, #12]
   16cc8:	ldr	r0, [sp, #16]
   16ccc:	str	r0, [sp, #8]
   16cd0:	ldr	r0, [sp, #12]
   16cd4:	str	r0, [sp, #4]
   16cd8:	ldr	r0, [sp, #8]
   16cdc:	ldr	r1, [r0, #8]
   16ce0:	ldr	r0, [r0, #12]
   16ce4:	ldr	r2, [sp, #4]
   16ce8:	ldr	r3, [r2, #8]
   16cec:	ldr	r2, [r2, #12]
   16cf0:	eor	r0, r0, r2
   16cf4:	eor	r1, r1, r3
   16cf8:	orr	r0, r1, r0
   16cfc:	mov	r1, #0
   16d00:	cmp	r0, #0
   16d04:	str	r1, [sp]
   16d08:	bne	16d40 <__assert_fail@plt+0x57f8>
   16d0c:	b	16d10 <__assert_fail@plt+0x57c8>
   16d10:	ldr	r0, [sp, #8]
   16d14:	ldr	r1, [r0]
   16d18:	ldr	r0, [r0, #4]
   16d1c:	ldr	r2, [sp, #4]
   16d20:	ldr	r3, [r2]
   16d24:	ldr	r2, [r2, #4]
   16d28:	eor	r0, r0, r2
   16d2c:	eor	r1, r1, r3
   16d30:	orr	r0, r1, r0
   16d34:	clz	r0, r0
   16d38:	lsr	r0, r0, #5
   16d3c:	str	r0, [sp]
   16d40:	ldr	r0, [sp]
   16d44:	and	r0, r0, #1
   16d48:	add	sp, sp, #20
   16d4c:	bx	lr
   16d50:	push	{fp, lr}
   16d54:	mov	fp, sp
   16d58:	sub	sp, sp, #16
   16d5c:	str	r0, [sp, #8]
   16d60:	str	r1, [sp, #4]
   16d64:	ldr	r0, [sp, #8]
   16d68:	ldr	r1, [sp, #4]
   16d6c:	bl	17118 <__assert_fail@plt+0x5bd0>
   16d70:	mov	r1, r0
   16d74:	movw	r2, #19778	; 0x4d42
   16d78:	movt	r2, #65363	; 0xff53
   16d7c:	cmp	r0, r2
   16d80:	str	r1, [sp]
   16d84:	beq	16de4 <__assert_fail@plt+0x589c>
   16d88:	b	16d8c <__assert_fail@plt+0x5844>
   16d8c:	ldr	r0, [sp]
   16d90:	cmp	r0, #0
   16d94:	beq	16ddc <__assert_fail@plt+0x5894>
   16d98:	b	16d9c <__assert_fail@plt+0x5854>
   16d9c:	movw	r0, #26985	; 0x6969
   16da0:	ldr	r1, [sp]
   16da4:	cmp	r1, r0
   16da8:	beq	16de8 <__assert_fail@plt+0x58a0>
   16dac:	b	16db0 <__assert_fail@plt+0x5868>
   16db0:	movw	r0, #40864	; 0x9fa0
   16db4:	ldr	r1, [sp]
   16db8:	cmp	r1, r0
   16dbc:	beq	16dec <__assert_fail@plt+0x58a4>
   16dc0:	b	16dc4 <__assert_fail@plt+0x587c>
   16dc4:	movw	r0, #16719	; 0x414f
   16dc8:	movt	r0, #21318	; 0x5346
   16dcc:	ldr	r1, [sp]
   16dd0:	cmp	r1, r0
   16dd4:	beq	16de0 <__assert_fail@plt+0x5898>
   16dd8:	b	16df8 <__assert_fail@plt+0x58b0>
   16ddc:	b	16de0 <__assert_fail@plt+0x5898>
   16de0:	b	16de4 <__assert_fail@plt+0x589c>
   16de4:	b	16de8 <__assert_fail@plt+0x58a0>
   16de8:	b	16dec <__assert_fail@plt+0x58a4>
   16dec:	movw	r0, #0
   16df0:	str	r0, [fp, #-4]
   16df4:	b	16e00 <__assert_fail@plt+0x58b8>
   16df8:	movw	r0, #1
   16dfc:	str	r0, [fp, #-4]
   16e00:	ldr	r0, [fp, #-4]
   16e04:	mov	sp, fp
   16e08:	pop	{fp, pc}
   16e0c:	sub	sp, sp, #16
   16e10:	str	r0, [sp, #12]
   16e14:	str	r1, [sp, #8]
   16e18:	ldr	r0, [sp, #8]
   16e1c:	sub	r0, r0, #1
   16e20:	cmp	r0, #11
   16e24:	str	r0, [sp]
   16e28:	bhi	16ec0 <__assert_fail@plt+0x5978>
   16e2c:	add	r0, pc, #8
   16e30:	ldr	r1, [sp]
   16e34:	ldr	r0, [r0, r1, lsl #2]
   16e38:	mov	pc, r0
   16e3c:	muleq	r1, r0, lr
   16e40:	andeq	r6, r1, r8, ror lr
   16e44:	andeq	r6, r1, r0, asr #29
   16e48:	andeq	r6, r1, r4, lsl #29
   16e4c:	andeq	r6, r1, r0, asr #29
   16e50:	andeq	r6, r1, ip, ror #28
   16e54:	andeq	r6, r1, r0, asr #29
   16e58:	andeq	r6, r1, r8, lsr #29
   16e5c:	andeq	r6, r1, r0, asr #29
   16e60:	muleq	r1, ip, lr
   16e64:	andeq	r6, r1, r0, asr #29
   16e68:			; <UNDEFINED> instruction: 0x00016eb4
   16e6c:	movw	r0, #24576	; 0x6000
   16e70:	str	r0, [sp, #4]
   16e74:	b	16ec8 <__assert_fail@plt+0x5980>
   16e78:	movw	r0, #8192	; 0x2000
   16e7c:	str	r0, [sp, #4]
   16e80:	b	16ec8 <__assert_fail@plt+0x5980>
   16e84:	movw	r0, #16384	; 0x4000
   16e88:	str	r0, [sp, #4]
   16e8c:	b	16ec8 <__assert_fail@plt+0x5980>
   16e90:	movw	r0, #4096	; 0x1000
   16e94:	str	r0, [sp, #4]
   16e98:	b	16ec8 <__assert_fail@plt+0x5980>
   16e9c:	movw	r0, #40960	; 0xa000
   16ea0:	str	r0, [sp, #4]
   16ea4:	b	16ec8 <__assert_fail@plt+0x5980>
   16ea8:	movw	r0, #32768	; 0x8000
   16eac:	str	r0, [sp, #4]
   16eb0:	b	16ec8 <__assert_fail@plt+0x5980>
   16eb4:	movw	r0, #49152	; 0xc000
   16eb8:	str	r0, [sp, #4]
   16ebc:	b	16ec8 <__assert_fail@plt+0x5980>
   16ec0:	movw	r0, #0
   16ec4:	str	r0, [sp, #4]
   16ec8:	ldr	r0, [sp, #4]
   16ecc:	ldr	r1, [sp, #12]
   16ed0:	str	r0, [r1, #16]
   16ed4:	add	sp, sp, #16
   16ed8:	bx	lr
   16edc:	push	{fp, lr}
   16ee0:	mov	fp, sp
   16ee4:	sub	sp, sp, #16
   16ee8:	str	r0, [sp, #8]
   16eec:	str	r1, [sp, #4]
   16ef0:	ldr	r0, [sp, #8]
   16ef4:	ldr	r1, [sp, #4]
   16ef8:	bl	17118 <__assert_fail@plt+0x5bd0>
   16efc:	mov	r1, r0
   16f00:	movw	r2, #19778	; 0x4d42
   16f04:	movt	r2, #65363	; 0xff53
   16f08:	cmp	r0, r2
   16f0c:	str	r1, [sp]
   16f10:	beq	16f44 <__assert_fail@plt+0x59fc>
   16f14:	b	16f18 <__assert_fail@plt+0x59d0>
   16f18:	movw	r0, #26985	; 0x6969
   16f1c:	ldr	r1, [sp]
   16f20:	cmp	r1, r0
   16f24:	beq	16f44 <__assert_fail@plt+0x59fc>
   16f28:	b	16f2c <__assert_fail@plt+0x59e4>
   16f2c:	movw	r0, #6548	; 0x1994
   16f30:	movt	r0, #258	; 0x102
   16f34:	ldr	r1, [sp]
   16f38:	cmp	r1, r0
   16f3c:	bne	16f54 <__assert_fail@plt+0x5a0c>
   16f40:	b	16f44 <__assert_fail@plt+0x59fc>
   16f44:	movw	r0, #0
   16f48:	and	r0, r0, #1
   16f4c:	strb	r0, [fp, #-1]
   16f50:	b	16f60 <__assert_fail@plt+0x5a18>
   16f54:	movw	r0, #1
   16f58:	and	r0, r0, #1
   16f5c:	strb	r0, [fp, #-1]
   16f60:	ldrb	r0, [fp, #-1]
   16f64:	and	r0, r0, #1
   16f68:	mov	sp, fp
   16f6c:	pop	{fp, pc}
   16f70:	sub	sp, sp, #20
   16f74:	str	r0, [sp, #16]
   16f78:	str	r1, [sp, #12]
   16f7c:	ldr	r0, [sp, #16]
   16f80:	ldr	r0, [r0, #24]
   16f84:	str	r0, [sp, #4]
   16f88:	ldr	r0, [sp, #16]
   16f8c:	ldr	r0, [r0, #4]
   16f90:	str	r0, [sp, #8]
   16f94:	ldr	r0, [sp, #8]
   16f98:	movw	r1, #0
   16f9c:	cmp	r0, r1
   16fa0:	beq	17004 <__assert_fail@plt+0x5abc>
   16fa4:	b	16fa8 <__assert_fail@plt+0x5a60>
   16fa8:	ldr	r0, [sp, #8]
   16fac:	ldr	r0, [r0, #24]
   16fb0:	ldr	r1, [sp, #8]
   16fb4:	add	r1, r1, #168	; 0xa8
   16fb8:	cmp	r0, r1
   16fbc:	beq	16fe4 <__assert_fail@plt+0x5a9c>
   16fc0:	ldr	r0, [sp, #4]
   16fc4:	ldr	r1, [sp, #8]
   16fc8:	ldr	r1, [r1, #24]
   16fcc:	ldr	r2, [sp, #8]
   16fd0:	ldr	r2, [r2, #28]
   16fd4:	sub	r1, r1, r2
   16fd8:	add	r0, r0, r1
   16fdc:	ldr	r1, [sp, #8]
   16fe0:	str	r0, [r1, #24]
   16fe4:	ldr	r0, [sp, #4]
   16fe8:	ldr	r1, [sp, #8]
   16fec:	str	r0, [r1, #28]
   16ff0:	b	16ff4 <__assert_fail@plt+0x5aac>
   16ff4:	ldr	r0, [sp, #8]
   16ff8:	ldr	r0, [r0, #8]
   16ffc:	str	r0, [sp, #8]
   17000:	b	16f94 <__assert_fail@plt+0x5a4c>
   17004:	ldr	r0, [sp, #12]
   17008:	str	r0, [sp, #8]
   1700c:	ldr	r0, [sp, #8]
   17010:	ldr	r0, [r0, #48]	; 0x30
   17014:	cmp	r0, #0
   17018:	blt	170a4 <__assert_fail@plt+0x5b5c>
   1701c:	b	17020 <__assert_fail@plt+0x5ad8>
   17020:	ldr	r0, [sp, #8]
   17024:	ldr	r0, [r0, #24]
   17028:	ldr	r1, [sp, #8]
   1702c:	add	r1, r1, #168	; 0xa8
   17030:	cmp	r0, r1
   17034:	beq	1705c <__assert_fail@plt+0x5b14>
   17038:	ldr	r0, [sp, #4]
   1703c:	ldr	r1, [sp, #8]
   17040:	ldr	r1, [r1, #24]
   17044:	ldr	r2, [sp, #8]
   17048:	ldr	r2, [r2, #28]
   1704c:	sub	r1, r1, r2
   17050:	add	r0, r0, r1
   17054:	ldr	r1, [sp, #8]
   17058:	str	r0, [r1, #24]
   1705c:	ldr	r0, [sp, #4]
   17060:	ldr	r1, [sp, #8]
   17064:	str	r0, [r1, #28]
   17068:	ldr	r0, [sp, #8]
   1706c:	ldr	r0, [r0, #8]
   17070:	movw	r1, #0
   17074:	cmp	r0, r1
   17078:	beq	1708c <__assert_fail@plt+0x5b44>
   1707c:	ldr	r0, [sp, #8]
   17080:	ldr	r0, [r0, #8]
   17084:	str	r0, [sp]
   17088:	b	17098 <__assert_fail@plt+0x5b50>
   1708c:	ldr	r0, [sp, #8]
   17090:	ldr	r0, [r0, #4]
   17094:	str	r0, [sp]
   17098:	ldr	r0, [sp]
   1709c:	str	r0, [sp, #8]
   170a0:	b	1700c <__assert_fail@plt+0x5ac4>
   170a4:	add	sp, sp, #20
   170a8:	bx	lr
   170ac:	push	{r4, r5, fp, lr}
   170b0:	add	fp, sp, #8
   170b4:	sub	sp, sp, #12
   170b8:	str	r0, [sp, #8]
   170bc:	str	r1, [sp, #4]
   170c0:	ldr	r0, [sp, #8]
   170c4:	ldr	r0, [r0]
   170c8:	ldr	r1, [r0, #160]	; 0xa0
   170cc:	ldr	r0, [r0, #164]	; 0xa4
   170d0:	ldr	r2, [sp, #4]
   170d4:	ldr	r2, [r2]
   170d8:	ldr	r3, [r2, #160]	; 0xa0
   170dc:	ldr	r2, [r2, #164]	; 0xa4
   170e0:	subs	ip, r3, r1
   170e4:	sbcs	lr, r2, r0
   170e8:	mov	r4, #0
   170ec:	mov	r5, r4
   170f0:	movwcc	r5, #1
   170f4:	subs	r1, r1, r3
   170f8:	sbcs	r0, r0, r2
   170fc:	movwcc	r4, #1
   17100:	and	r2, r4, #1
   17104:	sub	r2, r5, r2
   17108:	str	r0, [sp]
   1710c:	mov	r0, r2
   17110:	sub	sp, fp, #8
   17114:	pop	{r4, r5, fp, pc}
   17118:	push	{fp, lr}
   1711c:	mov	fp, sp
   17120:	sub	sp, sp, #136	; 0x88
   17124:	str	r0, [fp, #-8]
   17128:	str	r1, [fp, #-12]
   1712c:	ldr	r0, [fp, #-8]
   17130:	ldr	r0, [r0, #44]	; 0x2c
   17134:	str	r0, [fp, #-16]
   17138:	ldr	r0, [fp, #-16]
   1713c:	ldr	r0, [r0, #52]	; 0x34
   17140:	str	r0, [fp, #-20]	; 0xffffffec
   17144:	ldr	r0, [fp, #-16]
   17148:	ldr	r0, [r0, #48]	; 0x30
   1714c:	and	r0, r0, #512	; 0x200
   17150:	cmp	r0, #0
   17154:	bne	17164 <__assert_fail@plt+0x5c1c>
   17158:	movw	r0, #0
   1715c:	str	r0, [fp, #-4]
   17160:	b	172d4 <__assert_fail@plt+0x5d8c>
   17164:	ldr	r0, [fp, #-20]	; 0xffffffec
   17168:	movw	r1, #0
   1716c:	cmp	r0, r1
   17170:	bne	171a8 <__assert_fail@plt+0x5c60>
   17174:	movw	r0, #13
   17178:	movw	r1, #0
   1717c:	movw	r2, #29408	; 0x72e0
   17180:	movt	r2, #1
   17184:	movw	r3, #29492	; 0x7334
   17188:	movt	r3, #1
   1718c:	movw	ip, #14664	; 0x3948
   17190:	movt	ip, #1
   17194:	str	ip, [sp]
   17198:	bl	17bec <__assert_fail@plt+0x66a4>
   1719c:	ldr	r1, [fp, #-16]
   171a0:	str	r0, [r1, #52]	; 0x34
   171a4:	str	r0, [fp, #-20]	; 0xffffffec
   171a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   171ac:	movw	r1, #0
   171b0:	cmp	r0, r1
   171b4:	beq	17200 <__assert_fail@plt+0x5cb8>
   171b8:	ldr	r0, [fp, #-8]
   171bc:	ldr	r1, [r0, #64]	; 0x40
   171c0:	ldr	r0, [r0, #68]	; 0x44
   171c4:	str	r0, [sp, #12]
   171c8:	str	r1, [sp, #8]
   171cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   171d0:	add	r1, sp, #8
   171d4:	bl	176d0 <__assert_fail@plt+0x6188>
   171d8:	str	r0, [fp, #-24]	; 0xffffffe8
   171dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171e0:	movw	r1, #0
   171e4:	cmp	r0, r1
   171e8:	beq	171fc <__assert_fail@plt+0x5cb4>
   171ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171f0:	ldr	r0, [r0, #8]
   171f4:	str	r0, [fp, #-4]
   171f8:	b	172d4 <__assert_fail@plt+0x5d8c>
   171fc:	b	17200 <__assert_fail@plt+0x5cb8>
   17200:	ldr	r0, [fp, #-12]
   17204:	cmp	r0, #0
   17208:	blt	17220 <__assert_fail@plt+0x5cd8>
   1720c:	ldr	r0, [fp, #-12]
   17210:	add	r1, sp, #24
   17214:	bl	11200 <fstatfs64@plt>
   17218:	cmp	r0, #0
   1721c:	beq	1722c <__assert_fail@plt+0x5ce4>
   17220:	movw	r0, #0
   17224:	str	r0, [fp, #-4]
   17228:	b	172d4 <__assert_fail@plt+0x5d8c>
   1722c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17230:	movw	r1, #0
   17234:	cmp	r0, r1
   17238:	beq	172cc <__assert_fail@plt+0x5d84>
   1723c:	movw	r0, #16
   17240:	bl	217a4 <__assert_fail@plt+0x1025c>
   17244:	str	r0, [sp, #4]
   17248:	ldr	r0, [sp, #4]
   1724c:	movw	r1, #0
   17250:	cmp	r0, r1
   17254:	beq	172c8 <__assert_fail@plt+0x5d80>
   17258:	ldr	r0, [fp, #-8]
   1725c:	ldr	r1, [r0, #64]	; 0x40
   17260:	ldr	r0, [r0, #68]	; 0x44
   17264:	ldr	r2, [sp, #4]
   17268:	str	r0, [r2, #4]
   1726c:	str	r1, [r2]
   17270:	ldr	r0, [sp, #24]
   17274:	ldr	r1, [sp, #4]
   17278:	str	r0, [r1, #8]
   1727c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17280:	ldr	r1, [sp, #4]
   17284:	bl	18c10 <__assert_fail@plt+0x76c8>
   17288:	str	r0, [fp, #-24]	; 0xffffffe8
   1728c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17290:	movw	r1, #0
   17294:	cmp	r0, r1
   17298:	beq	172bc <__assert_fail@plt+0x5d74>
   1729c:	b	172a0 <__assert_fail@plt+0x5d58>
   172a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172a4:	ldr	r1, [sp, #4]
   172a8:	cmp	r0, r1
   172ac:	beq	172b4 <__assert_fail@plt+0x5d6c>
   172b0:	bl	11500 <abort@plt>
   172b4:	b	172b8 <__assert_fail@plt+0x5d70>
   172b8:	b	172c4 <__assert_fail@plt+0x5d7c>
   172bc:	ldr	r0, [sp, #4]
   172c0:	bl	13948 <__assert_fail@plt+0x2400>
   172c4:	b	172c8 <__assert_fail@plt+0x5d80>
   172c8:	b	172cc <__assert_fail@plt+0x5d84>
   172cc:	ldr	r0, [sp, #24]
   172d0:	str	r0, [fp, #-4]
   172d4:	ldr	r0, [fp, #-4]
   172d8:	mov	sp, fp
   172dc:	pop	{fp, pc}
   172e0:	push	{fp, lr}
   172e4:	mov	fp, sp
   172e8:	sub	sp, sp, #32
   172ec:	str	r0, [fp, #-4]
   172f0:	str	r1, [fp, #-8]
   172f4:	ldr	r0, [fp, #-4]
   172f8:	str	r0, [fp, #-12]
   172fc:	ldr	r0, [fp, #-12]
   17300:	ldr	r1, [r0]
   17304:	ldr	r0, [r0, #4]
   17308:	str	r0, [sp, #12]
   1730c:	str	r1, [sp, #8]
   17310:	ldr	r0, [sp, #8]
   17314:	ldr	r1, [sp, #12]
   17318:	ldr	r2, [fp, #-8]
   1731c:	mov	r3, #0
   17320:	bl	24564 <__assert_fail@plt+0x1301c>
   17324:	str	r0, [sp, #4]
   17328:	mov	r0, r2
   1732c:	mov	sp, fp
   17330:	pop	{fp, pc}
   17334:	sub	sp, sp, #16
   17338:	str	r0, [sp, #12]
   1733c:	str	r1, [sp, #8]
   17340:	ldr	r0, [sp, #12]
   17344:	str	r0, [sp, #4]
   17348:	ldr	r0, [sp, #8]
   1734c:	str	r0, [sp]
   17350:	ldr	r0, [sp, #4]
   17354:	ldr	r1, [r0]
   17358:	ldr	r0, [r0, #4]
   1735c:	ldr	r2, [sp]
   17360:	ldr	r3, [r2]
   17364:	ldr	r2, [r2, #4]
   17368:	eor	r0, r0, r2
   1736c:	eor	r1, r1, r3
   17370:	orr	r0, r1, r0
   17374:	clz	r0, r0
   17378:	lsr	r0, r0, #5
   1737c:	and	r0, r0, #1
   17380:	add	sp, sp, #16
   17384:	bx	lr
   17388:	push	{fp, lr}
   1738c:	mov	fp, sp
   17390:	sub	sp, sp, #24
   17394:	str	r0, [fp, #-4]
   17398:	str	r1, [fp, #-8]
   1739c:	ldr	r0, [fp, #-4]
   173a0:	str	r0, [sp, #12]
   173a4:	ldr	r0, [fp, #-8]
   173a8:	str	r0, [sp, #8]
   173ac:	ldr	r0, [sp, #12]
   173b0:	ldr	r0, [r0]
   173b4:	ldr	r0, [r0, #44]	; 0x2c
   173b8:	ldr	r0, [r0, #44]	; 0x2c
   173bc:	ldr	r1, [sp, #12]
   173c0:	ldr	r2, [sp, #8]
   173c4:	str	r0, [sp, #4]
   173c8:	mov	r0, r1
   173cc:	mov	r1, r2
   173d0:	ldr	r2, [sp, #4]
   173d4:	blx	r2
   173d8:	mov	sp, fp
   173dc:	pop	{fp, pc}
   173e0:	sub	sp, sp, #4
   173e4:	str	r0, [sp]
   173e8:	ldr	r0, [sp]
   173ec:	ldr	r0, [r0, #8]
   173f0:	add	sp, sp, #4
   173f4:	bx	lr
   173f8:	sub	sp, sp, #4
   173fc:	str	r0, [sp]
   17400:	ldr	r0, [sp]
   17404:	ldr	r0, [r0, #12]
   17408:	add	sp, sp, #4
   1740c:	bx	lr
   17410:	sub	sp, sp, #4
   17414:	str	r0, [sp]
   17418:	ldr	r0, [sp]
   1741c:	ldr	r0, [r0, #16]
   17420:	add	sp, sp, #4
   17424:	bx	lr
   17428:	sub	sp, sp, #20
   1742c:	str	r0, [sp, #16]
   17430:	movw	r0, #0
   17434:	str	r0, [sp, #8]
   17438:	ldr	r0, [sp, #16]
   1743c:	ldr	r0, [r0]
   17440:	str	r0, [sp, #12]
   17444:	ldr	r0, [sp, #12]
   17448:	ldr	r1, [sp, #16]
   1744c:	ldr	r1, [r1, #4]
   17450:	cmp	r0, r1
   17454:	bcs	174d8 <__assert_fail@plt+0x5f90>
   17458:	ldr	r0, [sp, #12]
   1745c:	ldr	r0, [r0]
   17460:	movw	r1, #0
   17464:	cmp	r0, r1
   17468:	beq	174c4 <__assert_fail@plt+0x5f7c>
   1746c:	ldr	r0, [sp, #12]
   17470:	str	r0, [sp, #4]
   17474:	movw	r0, #1
   17478:	str	r0, [sp]
   1747c:	ldr	r0, [sp, #4]
   17480:	ldr	r0, [r0, #4]
   17484:	str	r0, [sp, #4]
   17488:	ldr	r0, [sp, #4]
   1748c:	movw	r1, #0
   17490:	cmp	r0, r1
   17494:	beq	174a8 <__assert_fail@plt+0x5f60>
   17498:	ldr	r0, [sp]
   1749c:	add	r0, r0, #1
   174a0:	str	r0, [sp]
   174a4:	b	1747c <__assert_fail@plt+0x5f34>
   174a8:	ldr	r0, [sp]
   174ac:	ldr	r1, [sp, #8]
   174b0:	cmp	r0, r1
   174b4:	bls	174c0 <__assert_fail@plt+0x5f78>
   174b8:	ldr	r0, [sp]
   174bc:	str	r0, [sp, #8]
   174c0:	b	174c4 <__assert_fail@plt+0x5f7c>
   174c4:	b	174c8 <__assert_fail@plt+0x5f80>
   174c8:	ldr	r0, [sp, #12]
   174cc:	add	r0, r0, #8
   174d0:	str	r0, [sp, #12]
   174d4:	b	17444 <__assert_fail@plt+0x5efc>
   174d8:	ldr	r0, [sp, #8]
   174dc:	add	sp, sp, #20
   174e0:	bx	lr
   174e4:	sub	sp, sp, #24
   174e8:	str	r0, [sp, #16]
   174ec:	movw	r0, #0
   174f0:	str	r0, [sp, #8]
   174f4:	str	r0, [sp, #4]
   174f8:	ldr	r0, [sp, #16]
   174fc:	ldr	r0, [r0]
   17500:	str	r0, [sp, #12]
   17504:	ldr	r0, [sp, #12]
   17508:	ldr	r1, [sp, #16]
   1750c:	ldr	r1, [r1, #4]
   17510:	cmp	r0, r1
   17514:	bcs	17590 <__assert_fail@plt+0x6048>
   17518:	ldr	r0, [sp, #12]
   1751c:	ldr	r0, [r0]
   17520:	movw	r1, #0
   17524:	cmp	r0, r1
   17528:	beq	1757c <__assert_fail@plt+0x6034>
   1752c:	ldr	r0, [sp, #12]
   17530:	str	r0, [sp]
   17534:	ldr	r0, [sp, #8]
   17538:	add	r0, r0, #1
   1753c:	str	r0, [sp, #8]
   17540:	ldr	r0, [sp, #4]
   17544:	add	r0, r0, #1
   17548:	str	r0, [sp, #4]
   1754c:	ldr	r0, [sp]
   17550:	ldr	r0, [r0, #4]
   17554:	str	r0, [sp]
   17558:	ldr	r0, [sp]
   1755c:	movw	r1, #0
   17560:	cmp	r0, r1
   17564:	beq	17578 <__assert_fail@plt+0x6030>
   17568:	ldr	r0, [sp, #4]
   1756c:	add	r0, r0, #1
   17570:	str	r0, [sp, #4]
   17574:	b	1754c <__assert_fail@plt+0x6004>
   17578:	b	1757c <__assert_fail@plt+0x6034>
   1757c:	b	17580 <__assert_fail@plt+0x6038>
   17580:	ldr	r0, [sp, #12]
   17584:	add	r0, r0, #8
   17588:	str	r0, [sp, #12]
   1758c:	b	17504 <__assert_fail@plt+0x5fbc>
   17590:	ldr	r0, [sp, #8]
   17594:	ldr	r1, [sp, #16]
   17598:	ldr	r1, [r1, #12]
   1759c:	cmp	r0, r1
   175a0:	bne	175c8 <__assert_fail@plt+0x6080>
   175a4:	ldr	r0, [sp, #4]
   175a8:	ldr	r1, [sp, #16]
   175ac:	ldr	r1, [r1, #16]
   175b0:	cmp	r0, r1
   175b4:	bne	175c8 <__assert_fail@plt+0x6080>
   175b8:	movw	r0, #1
   175bc:	and	r0, r0, #1
   175c0:	strb	r0, [sp, #23]
   175c4:	b	175d4 <__assert_fail@plt+0x608c>
   175c8:	movw	r0, #0
   175cc:	and	r0, r0, #1
   175d0:	strb	r0, [sp, #23]
   175d4:	ldrb	r0, [sp, #23]
   175d8:	and	r0, r0, #1
   175dc:	add	sp, sp, #24
   175e0:	bx	lr
   175e4:	nop	{0}
   175e8:	push	{fp, lr}
   175ec:	mov	fp, sp
   175f0:	sub	sp, sp, #48	; 0x30
   175f4:	str	r0, [fp, #-4]
   175f8:	str	r1, [fp, #-8]
   175fc:	ldr	r0, [fp, #-4]
   17600:	bl	17410 <__assert_fail@plt+0x5ec8>
   17604:	str	r0, [fp, #-12]
   17608:	ldr	r0, [fp, #-4]
   1760c:	bl	173e0 <__assert_fail@plt+0x5e98>
   17610:	str	r0, [fp, #-16]
   17614:	ldr	r0, [fp, #-4]
   17618:	bl	173f8 <__assert_fail@plt+0x5eb0>
   1761c:	str	r0, [fp, #-20]	; 0xffffffec
   17620:	ldr	r0, [fp, #-4]
   17624:	bl	17428 <__assert_fail@plt+0x5ee0>
   17628:	str	r0, [sp, #24]
   1762c:	ldr	r0, [fp, #-8]
   17630:	ldr	r2, [fp, #-12]
   17634:	movw	r1, #22653	; 0x587d
   17638:	movt	r1, #2
   1763c:	bl	113f8 <fprintf@plt>
   17640:	ldr	r1, [fp, #-8]
   17644:	ldr	r2, [fp, #-16]
   17648:	str	r0, [sp, #20]
   1764c:	mov	r0, r1
   17650:	movw	r1, #22677	; 0x5895
   17654:	movt	r1, #2
   17658:	bl	113f8 <fprintf@plt>
   1765c:	vldr	d16, [pc, #100]	; 176c8 <__assert_fail@plt+0x6180>
   17660:	ldr	r1, [fp, #-8]
   17664:	ldr	r2, [fp, #-20]	; 0xffffffec
   17668:	ldr	r3, [fp, #-20]	; 0xffffffec
   1766c:	vmov	s0, r3
   17670:	vcvt.f64.u32	d17, s0
   17674:	vmul.f64	d16, d16, d17
   17678:	ldr	r3, [fp, #-16]
   1767c:	vmov	s0, r3
   17680:	vcvt.f64.u32	d17, s0
   17684:	vdiv.f64	d16, d16, d17
   17688:	str	r0, [sp, #16]
   1768c:	mov	r0, r1
   17690:	movw	r1, #22701	; 0x58ad
   17694:	movt	r1, #2
   17698:	vstr	d16, [sp]
   1769c:	bl	113f8 <fprintf@plt>
   176a0:	ldr	r1, [fp, #-8]
   176a4:	ldr	r2, [sp, #24]
   176a8:	str	r0, [sp, #12]
   176ac:	mov	r0, r1
   176b0:	movw	r1, #22734	; 0x58ce
   176b4:	movt	r1, #2
   176b8:	bl	113f8 <fprintf@plt>
   176bc:	mov	sp, fp
   176c0:	pop	{fp, pc}
   176c4:	nop	{0}
   176c8:	andeq	r0, r0, r0
   176cc:	subsmi	r0, r9, r0
   176d0:	push	{fp, lr}
   176d4:	mov	fp, sp
   176d8:	sub	sp, sp, #24
   176dc:	str	r0, [fp, #-8]
   176e0:	str	r1, [sp, #12]
   176e4:	ldr	r0, [fp, #-8]
   176e8:	ldr	r1, [sp, #12]
   176ec:	bl	177a8 <__assert_fail@plt+0x6260>
   176f0:	str	r0, [sp, #8]
   176f4:	ldr	r0, [sp, #8]
   176f8:	ldr	r0, [r0]
   176fc:	movw	r1, #0
   17700:	cmp	r0, r1
   17704:	bne	17714 <__assert_fail@plt+0x61cc>
   17708:	movw	r0, #0
   1770c:	str	r0, [fp, #-4]
   17710:	b	1779c <__assert_fail@plt+0x6254>
   17714:	ldr	r0, [sp, #8]
   17718:	str	r0, [sp, #4]
   1771c:	ldr	r0, [sp, #4]
   17720:	movw	r1, #0
   17724:	cmp	r0, r1
   17728:	beq	17794 <__assert_fail@plt+0x624c>
   1772c:	ldr	r0, [sp, #12]
   17730:	ldr	r1, [sp, #4]
   17734:	ldr	r1, [r1]
   17738:	cmp	r0, r1
   1773c:	beq	17770 <__assert_fail@plt+0x6228>
   17740:	ldr	r0, [fp, #-8]
   17744:	ldr	r0, [r0, #28]
   17748:	ldr	r1, [sp, #12]
   1774c:	ldr	r2, [sp, #4]
   17750:	ldr	r2, [r2]
   17754:	str	r0, [sp]
   17758:	mov	r0, r1
   1775c:	mov	r1, r2
   17760:	ldr	r2, [sp]
   17764:	blx	r2
   17768:	tst	r0, #1
   1776c:	beq	17780 <__assert_fail@plt+0x6238>
   17770:	ldr	r0, [sp, #4]
   17774:	ldr	r0, [r0]
   17778:	str	r0, [fp, #-4]
   1777c:	b	1779c <__assert_fail@plt+0x6254>
   17780:	b	17784 <__assert_fail@plt+0x623c>
   17784:	ldr	r0, [sp, #4]
   17788:	ldr	r0, [r0, #4]
   1778c:	str	r0, [sp, #4]
   17790:	b	1771c <__assert_fail@plt+0x61d4>
   17794:	movw	r0, #0
   17798:	str	r0, [fp, #-4]
   1779c:	ldr	r0, [fp, #-4]
   177a0:	mov	sp, fp
   177a4:	pop	{fp, pc}
   177a8:	push	{fp, lr}
   177ac:	mov	fp, sp
   177b0:	sub	sp, sp, #16
   177b4:	str	r0, [fp, #-4]
   177b8:	str	r1, [sp, #8]
   177bc:	ldr	r0, [fp, #-4]
   177c0:	ldr	r0, [r0, #24]
   177c4:	ldr	r1, [sp, #8]
   177c8:	ldr	r2, [fp, #-4]
   177cc:	ldr	r2, [r2, #8]
   177d0:	str	r0, [sp]
   177d4:	mov	r0, r1
   177d8:	mov	r1, r2
   177dc:	ldr	r2, [sp]
   177e0:	blx	r2
   177e4:	str	r0, [sp, #4]
   177e8:	ldr	r0, [sp, #4]
   177ec:	ldr	r1, [fp, #-4]
   177f0:	ldr	r1, [r1, #8]
   177f4:	cmp	r0, r1
   177f8:	bcc	17800 <__assert_fail@plt+0x62b8>
   177fc:	bl	11500 <abort@plt>
   17800:	ldr	r0, [fp, #-4]
   17804:	ldr	r0, [r0]
   17808:	ldr	r1, [sp, #4]
   1780c:	add	r0, r0, r1, lsl #3
   17810:	mov	sp, fp
   17814:	pop	{fp, pc}
   17818:	push	{fp, lr}
   1781c:	mov	fp, sp
   17820:	sub	sp, sp, #16
   17824:	str	r0, [sp, #8]
   17828:	ldr	r0, [sp, #8]
   1782c:	ldr	r0, [r0, #16]
   17830:	cmp	r0, #0
   17834:	bne	17844 <__assert_fail@plt+0x62fc>
   17838:	movw	r0, #0
   1783c:	str	r0, [fp, #-4]
   17840:	b	178a4 <__assert_fail@plt+0x635c>
   17844:	ldr	r0, [sp, #8]
   17848:	ldr	r0, [r0]
   1784c:	str	r0, [sp, #4]
   17850:	ldr	r0, [sp, #4]
   17854:	ldr	r1, [sp, #8]
   17858:	ldr	r1, [r1, #4]
   1785c:	cmp	r0, r1
   17860:	bcc	17868 <__assert_fail@plt+0x6320>
   17864:	bl	11500 <abort@plt>
   17868:	ldr	r0, [sp, #4]
   1786c:	ldr	r0, [r0]
   17870:	movw	r1, #0
   17874:	cmp	r0, r1
   17878:	beq	1788c <__assert_fail@plt+0x6344>
   1787c:	ldr	r0, [sp, #4]
   17880:	ldr	r0, [r0]
   17884:	str	r0, [fp, #-4]
   17888:	b	178a4 <__assert_fail@plt+0x635c>
   1788c:	b	17890 <__assert_fail@plt+0x6348>
   17890:	b	17894 <__assert_fail@plt+0x634c>
   17894:	ldr	r0, [sp, #4]
   17898:	add	r0, r0, #8
   1789c:	str	r0, [sp, #4]
   178a0:	b	17850 <__assert_fail@plt+0x6308>
   178a4:	ldr	r0, [fp, #-4]
   178a8:	mov	sp, fp
   178ac:	pop	{fp, pc}
   178b0:	push	{fp, lr}
   178b4:	mov	fp, sp
   178b8:	sub	sp, sp, #24
   178bc:	str	r0, [fp, #-8]
   178c0:	str	r1, [sp, #12]
   178c4:	ldr	r0, [fp, #-8]
   178c8:	ldr	r1, [sp, #12]
   178cc:	bl	177a8 <__assert_fail@plt+0x6260>
   178d0:	str	r0, [sp, #8]
   178d4:	ldr	r0, [sp, #8]
   178d8:	str	r0, [sp, #4]
   178dc:	ldr	r0, [sp, #4]
   178e0:	ldr	r0, [r0]
   178e4:	ldr	r1, [sp, #12]
   178e8:	cmp	r0, r1
   178ec:	bne	17918 <__assert_fail@plt+0x63d0>
   178f0:	ldr	r0, [sp, #4]
   178f4:	ldr	r0, [r0, #4]
   178f8:	movw	r1, #0
   178fc:	cmp	r0, r1
   17900:	beq	17918 <__assert_fail@plt+0x63d0>
   17904:	ldr	r0, [sp, #4]
   17908:	ldr	r0, [r0, #4]
   1790c:	ldr	r0, [r0]
   17910:	str	r0, [fp, #-4]
   17914:	b	17984 <__assert_fail@plt+0x643c>
   17918:	ldr	r0, [sp, #4]
   1791c:	ldr	r0, [r0, #4]
   17920:	str	r0, [sp, #4]
   17924:	ldr	r0, [sp, #4]
   17928:	movw	r1, #0
   1792c:	cmp	r0, r1
   17930:	bne	178dc <__assert_fail@plt+0x6394>
   17934:	b	17938 <__assert_fail@plt+0x63f0>
   17938:	ldr	r0, [sp, #8]
   1793c:	add	r0, r0, #8
   17940:	str	r0, [sp, #8]
   17944:	ldr	r1, [fp, #-8]
   17948:	ldr	r1, [r1, #4]
   1794c:	cmp	r0, r1
   17950:	bcs	1797c <__assert_fail@plt+0x6434>
   17954:	ldr	r0, [sp, #8]
   17958:	ldr	r0, [r0]
   1795c:	movw	r1, #0
   17960:	cmp	r0, r1
   17964:	beq	17978 <__assert_fail@plt+0x6430>
   17968:	ldr	r0, [sp, #8]
   1796c:	ldr	r0, [r0]
   17970:	str	r0, [fp, #-4]
   17974:	b	17984 <__assert_fail@plt+0x643c>
   17978:	b	17938 <__assert_fail@plt+0x63f0>
   1797c:	movw	r0, #0
   17980:	str	r0, [fp, #-4]
   17984:	ldr	r0, [fp, #-4]
   17988:	mov	sp, fp
   1798c:	pop	{fp, pc}
   17990:	sub	sp, sp, #28
   17994:	str	r0, [sp, #20]
   17998:	str	r1, [sp, #16]
   1799c:	str	r2, [sp, #12]
   179a0:	movw	r0, #0
   179a4:	str	r0, [sp, #8]
   179a8:	ldr	r0, [sp, #20]
   179ac:	ldr	r0, [r0]
   179b0:	str	r0, [sp, #4]
   179b4:	ldr	r0, [sp, #4]
   179b8:	ldr	r1, [sp, #20]
   179bc:	ldr	r1, [r1, #4]
   179c0:	cmp	r0, r1
   179c4:	bcs	17a58 <__assert_fail@plt+0x6510>
   179c8:	ldr	r0, [sp, #4]
   179cc:	ldr	r0, [r0]
   179d0:	movw	r1, #0
   179d4:	cmp	r0, r1
   179d8:	beq	17a44 <__assert_fail@plt+0x64fc>
   179dc:	ldr	r0, [sp, #4]
   179e0:	str	r0, [sp]
   179e4:	ldr	r0, [sp]
   179e8:	movw	r1, #0
   179ec:	cmp	r0, r1
   179f0:	beq	17a40 <__assert_fail@plt+0x64f8>
   179f4:	ldr	r0, [sp, #8]
   179f8:	ldr	r1, [sp, #12]
   179fc:	cmp	r0, r1
   17a00:	bcc	17a10 <__assert_fail@plt+0x64c8>
   17a04:	ldr	r0, [sp, #8]
   17a08:	str	r0, [sp, #24]
   17a0c:	b	17a60 <__assert_fail@plt+0x6518>
   17a10:	ldr	r0, [sp]
   17a14:	ldr	r0, [r0]
   17a18:	ldr	r1, [sp, #16]
   17a1c:	ldr	r2, [sp, #8]
   17a20:	add	r3, r2, #1
   17a24:	str	r3, [sp, #8]
   17a28:	add	r1, r1, r2, lsl #2
   17a2c:	str	r0, [r1]
   17a30:	ldr	r0, [sp]
   17a34:	ldr	r0, [r0, #4]
   17a38:	str	r0, [sp]
   17a3c:	b	179e4 <__assert_fail@plt+0x649c>
   17a40:	b	17a44 <__assert_fail@plt+0x64fc>
   17a44:	b	17a48 <__assert_fail@plt+0x6500>
   17a48:	ldr	r0, [sp, #4]
   17a4c:	add	r0, r0, #8
   17a50:	str	r0, [sp, #4]
   17a54:	b	179b4 <__assert_fail@plt+0x646c>
   17a58:	ldr	r0, [sp, #8]
   17a5c:	str	r0, [sp, #24]
   17a60:	ldr	r0, [sp, #24]
   17a64:	add	sp, sp, #28
   17a68:	bx	lr
   17a6c:	push	{fp, lr}
   17a70:	mov	fp, sp
   17a74:	sub	sp, sp, #32
   17a78:	str	r0, [fp, #-8]
   17a7c:	str	r1, [fp, #-12]
   17a80:	str	r2, [sp, #16]
   17a84:	movw	r0, #0
   17a88:	str	r0, [sp, #12]
   17a8c:	ldr	r0, [fp, #-8]
   17a90:	ldr	r0, [r0]
   17a94:	str	r0, [sp, #8]
   17a98:	ldr	r0, [sp, #8]
   17a9c:	ldr	r1, [fp, #-8]
   17aa0:	ldr	r1, [r1, #4]
   17aa4:	cmp	r0, r1
   17aa8:	bcs	17b44 <__assert_fail@plt+0x65fc>
   17aac:	ldr	r0, [sp, #8]
   17ab0:	ldr	r0, [r0]
   17ab4:	movw	r1, #0
   17ab8:	cmp	r0, r1
   17abc:	beq	17b30 <__assert_fail@plt+0x65e8>
   17ac0:	ldr	r0, [sp, #8]
   17ac4:	str	r0, [sp, #4]
   17ac8:	ldr	r0, [sp, #4]
   17acc:	movw	r1, #0
   17ad0:	cmp	r0, r1
   17ad4:	beq	17b2c <__assert_fail@plt+0x65e4>
   17ad8:	ldr	r0, [fp, #-12]
   17adc:	ldr	r1, [sp, #4]
   17ae0:	ldr	r1, [r1]
   17ae4:	ldr	r2, [sp, #16]
   17ae8:	str	r0, [sp]
   17aec:	mov	r0, r1
   17af0:	mov	r1, r2
   17af4:	ldr	r2, [sp]
   17af8:	blx	r2
   17afc:	tst	r0, #1
   17b00:	bne	17b10 <__assert_fail@plt+0x65c8>
   17b04:	ldr	r0, [sp, #12]
   17b08:	str	r0, [fp, #-4]
   17b0c:	b	17b4c <__assert_fail@plt+0x6604>
   17b10:	ldr	r0, [sp, #12]
   17b14:	add	r0, r0, #1
   17b18:	str	r0, [sp, #12]
   17b1c:	ldr	r0, [sp, #4]
   17b20:	ldr	r0, [r0, #4]
   17b24:	str	r0, [sp, #4]
   17b28:	b	17ac8 <__assert_fail@plt+0x6580>
   17b2c:	b	17b30 <__assert_fail@plt+0x65e8>
   17b30:	b	17b34 <__assert_fail@plt+0x65ec>
   17b34:	ldr	r0, [sp, #8]
   17b38:	add	r0, r0, #8
   17b3c:	str	r0, [sp, #8]
   17b40:	b	17a98 <__assert_fail@plt+0x6550>
   17b44:	ldr	r0, [sp, #12]
   17b48:	str	r0, [fp, #-4]
   17b4c:	ldr	r0, [fp, #-4]
   17b50:	mov	sp, fp
   17b54:	pop	{fp, pc}
   17b58:	sub	sp, sp, #16
   17b5c:	str	r0, [sp, #12]
   17b60:	str	r1, [sp, #8]
   17b64:	movw	r0, #0
   17b68:	str	r0, [sp, #4]
   17b6c:	ldr	r0, [sp, #12]
   17b70:	ldrb	r0, [r0]
   17b74:	strb	r0, [sp, #3]
   17b78:	sxtb	r0, r0
   17b7c:	cmp	r0, #0
   17b80:	beq	17bb4 <__assert_fail@plt+0x666c>
   17b84:	ldr	r0, [sp, #4]
   17b88:	rsb	r0, r0, r0, lsl #5
   17b8c:	ldrb	r1, [sp, #3]
   17b90:	add	r0, r0, r1
   17b94:	ldr	r1, [sp, #8]
   17b98:	udiv	r2, r0, r1
   17b9c:	mls	r0, r2, r1, r0
   17ba0:	str	r0, [sp, #4]
   17ba4:	ldr	r0, [sp, #12]
   17ba8:	add	r0, r0, #1
   17bac:	str	r0, [sp, #12]
   17bb0:	b	17b6c <__assert_fail@plt+0x6624>
   17bb4:	ldr	r0, [sp, #4]
   17bb8:	add	sp, sp, #16
   17bbc:	bx	lr
   17bc0:	push	{fp, lr}
   17bc4:	mov	fp, sp
   17bc8:	sub	sp, sp, #8
   17bcc:	movw	r1, #22760	; 0x58e8
   17bd0:	movt	r1, #2
   17bd4:	str	r0, [sp, #4]
   17bd8:	ldr	r0, [sp, #4]
   17bdc:	movw	r2, #20
   17be0:	bl	1129c <memcpy@plt>
   17be4:	mov	sp, fp
   17be8:	pop	{fp, pc}
   17bec:	push	{fp, lr}
   17bf0:	mov	fp, sp
   17bf4:	sub	sp, sp, #24
   17bf8:	ldr	ip, [fp, #8]
   17bfc:	str	r0, [fp, #-8]
   17c00:	str	r1, [sp, #12]
   17c04:	str	r2, [sp, #8]
   17c08:	str	r3, [sp, #4]
   17c0c:	ldr	r0, [sp, #8]
   17c10:	movw	r1, #0
   17c14:	cmp	r0, r1
   17c18:	bne	17c28 <__assert_fail@plt+0x66e0>
   17c1c:	movw	r0, #32128	; 0x7d80
   17c20:	movt	r0, #1
   17c24:	str	r0, [sp, #8]
   17c28:	ldr	r0, [sp, #4]
   17c2c:	movw	r1, #0
   17c30:	cmp	r0, r1
   17c34:	bne	17c44 <__assert_fail@plt+0x66fc>
   17c38:	movw	r0, #32188	; 0x7dbc
   17c3c:	movt	r0, #1
   17c40:	str	r0, [sp, #4]
   17c44:	movw	r0, #40	; 0x28
   17c48:	bl	217a4 <__assert_fail@plt+0x1025c>
   17c4c:	str	r0, [sp]
   17c50:	ldr	r0, [sp]
   17c54:	movw	r1, #0
   17c58:	cmp	r0, r1
   17c5c:	bne	17c6c <__assert_fail@plt+0x6724>
   17c60:	movw	r0, #0
   17c64:	str	r0, [fp, #-4]
   17c68:	b	17d74 <__assert_fail@plt+0x682c>
   17c6c:	ldr	r0, [sp, #12]
   17c70:	movw	r1, #0
   17c74:	cmp	r0, r1
   17c78:	bne	17c88 <__assert_fail@plt+0x6740>
   17c7c:	movw	r0, #22760	; 0x58e8
   17c80:	movt	r0, #2
   17c84:	str	r0, [sp, #12]
   17c88:	ldr	r0, [sp, #12]
   17c8c:	ldr	r1, [sp]
   17c90:	str	r0, [r1, #20]
   17c94:	ldr	r0, [sp]
   17c98:	bl	17de8 <__assert_fail@plt+0x68a0>
   17c9c:	tst	r0, #1
   17ca0:	bne	17ca8 <__assert_fail@plt+0x6760>
   17ca4:	b	17d64 <__assert_fail@plt+0x681c>
   17ca8:	ldr	r0, [fp, #-8]
   17cac:	ldr	r1, [sp, #12]
   17cb0:	bl	17f3c <__assert_fail@plt+0x69f4>
   17cb4:	ldr	r1, [sp]
   17cb8:	str	r0, [r1, #8]
   17cbc:	ldr	r0, [sp]
   17cc0:	ldr	r0, [r0, #8]
   17cc4:	cmp	r0, #0
   17cc8:	bne	17cd0 <__assert_fail@plt+0x6788>
   17ccc:	b	17d64 <__assert_fail@plt+0x681c>
   17cd0:	ldr	r0, [sp]
   17cd4:	ldr	r0, [r0, #8]
   17cd8:	movw	r1, #8
   17cdc:	bl	21708 <__assert_fail@plt+0x101c0>
   17ce0:	ldr	r1, [sp]
   17ce4:	str	r0, [r1]
   17ce8:	ldr	r0, [sp]
   17cec:	ldr	r0, [r0]
   17cf0:	movw	r1, #0
   17cf4:	cmp	r0, r1
   17cf8:	bne	17d00 <__assert_fail@plt+0x67b8>
   17cfc:	b	17d64 <__assert_fail@plt+0x681c>
   17d00:	ldr	r0, [sp]
   17d04:	ldr	r1, [r0]
   17d08:	ldr	r0, [r0, #8]
   17d0c:	add	r0, r1, r0, lsl #3
   17d10:	ldr	r1, [sp]
   17d14:	str	r0, [r1, #4]
   17d18:	ldr	r0, [sp]
   17d1c:	movw	r1, #0
   17d20:	str	r1, [r0, #12]
   17d24:	ldr	r0, [sp]
   17d28:	str	r1, [r0, #16]
   17d2c:	ldr	r0, [sp, #8]
   17d30:	ldr	r2, [sp]
   17d34:	str	r0, [r2, #24]
   17d38:	ldr	r0, [sp, #4]
   17d3c:	ldr	r2, [sp]
   17d40:	str	r0, [r2, #28]
   17d44:	ldr	r0, [fp, #8]
   17d48:	ldr	r2, [sp]
   17d4c:	str	r0, [r2, #32]
   17d50:	ldr	r0, [sp]
   17d54:	str	r1, [r0, #36]	; 0x24
   17d58:	ldr	r0, [sp]
   17d5c:	str	r0, [fp, #-4]
   17d60:	b	17d74 <__assert_fail@plt+0x682c>
   17d64:	ldr	r0, [sp]
   17d68:	bl	13948 <__assert_fail@plt+0x2400>
   17d6c:	movw	r0, #0
   17d70:	str	r0, [fp, #-4]
   17d74:	ldr	r0, [fp, #-4]
   17d78:	mov	sp, fp
   17d7c:	pop	{fp, pc}
   17d80:	push	{fp, lr}
   17d84:	mov	fp, sp
   17d88:	sub	sp, sp, #16
   17d8c:	str	r0, [fp, #-4]
   17d90:	str	r1, [sp, #8]
   17d94:	ldr	r0, [fp, #-4]
   17d98:	mov	r1, #3
   17d9c:	bl	21a58 <__assert_fail@plt+0x10510>
   17da0:	str	r0, [sp, #4]
   17da4:	ldr	r0, [sp, #4]
   17da8:	ldr	r1, [sp, #8]
   17dac:	udiv	r2, r0, r1
   17db0:	mls	r0, r2, r1, r0
   17db4:	mov	sp, fp
   17db8:	pop	{fp, pc}
   17dbc:	sub	sp, sp, #8
   17dc0:	str	r0, [sp, #4]
   17dc4:	str	r1, [sp]
   17dc8:	ldr	r0, [sp, #4]
   17dcc:	ldr	r1, [sp]
   17dd0:	cmp	r0, r1
   17dd4:	movw	r0, #0
   17dd8:	moveq	r0, #1
   17ddc:	and	r0, r0, #1
   17de0:	add	sp, sp, #8
   17de4:	bx	lr
   17de8:	sub	sp, sp, #16
   17dec:	str	r0, [sp, #8]
   17df0:	ldr	r0, [sp, #8]
   17df4:	ldr	r0, [r0, #20]
   17df8:	str	r0, [sp, #4]
   17dfc:	ldr	r0, [sp, #4]
   17e00:	movw	r1, #22760	; 0x58e8
   17e04:	movt	r1, #2
   17e08:	cmp	r0, r1
   17e0c:	bne	17e20 <__assert_fail@plt+0x68d8>
   17e10:	movw	r0, #1
   17e14:	and	r0, r0, #1
   17e18:	strb	r0, [sp, #15]
   17e1c:	b	17f24 <__assert_fail@plt+0x69dc>
   17e20:	vldr	s0, [pc, #268]	; 17f34 <__assert_fail@plt+0x69ec>
   17e24:	vstr	s0, [sp]
   17e28:	vldr	s0, [sp]
   17e2c:	ldr	r0, [sp, #4]
   17e30:	vldr	s2, [r0, #8]
   17e34:	vcmpe.f32	s0, s2
   17e38:	vmrs	APSR_nzcv, fpscr
   17e3c:	bpl	17f08 <__assert_fail@plt+0x69c0>
   17e40:	ldr	r0, [sp, #4]
   17e44:	vldr	s0, [r0, #8]
   17e48:	vldr	s2, [sp]
   17e4c:	vmov.f32	s4, #112	; 0x3f800000  1.0
   17e50:	vsub.f32	s2, s4, s2
   17e54:	vcmpe.f32	s0, s2
   17e58:	vmrs	APSR_nzcv, fpscr
   17e5c:	bpl	17f08 <__assert_fail@plt+0x69c0>
   17e60:	vldr	s0, [sp]
   17e64:	vmov.f32	s2, #112	; 0x3f800000  1.0
   17e68:	vadd.f32	s0, s2, s0
   17e6c:	ldr	r0, [sp, #4]
   17e70:	vldr	s2, [r0, #12]
   17e74:	vcmpe.f32	s0, s2
   17e78:	vmrs	APSR_nzcv, fpscr
   17e7c:	bpl	17f08 <__assert_fail@plt+0x69c0>
   17e80:	vldr	s0, [pc, #176]	; 17f38 <__assert_fail@plt+0x69f0>
   17e84:	ldr	r0, [sp, #4]
   17e88:	vldr	s2, [r0]
   17e8c:	vcmpe.f32	s0, s2
   17e90:	vmrs	APSR_nzcv, fpscr
   17e94:	bhi	17f08 <__assert_fail@plt+0x69c0>
   17e98:	ldr	r0, [sp, #4]
   17e9c:	vldr	s0, [r0]
   17ea0:	vldr	s2, [sp]
   17ea4:	vadd.f32	s0, s0, s2
   17ea8:	ldr	r0, [sp, #4]
   17eac:	vldr	s2, [r0, #4]
   17eb0:	vcmpe.f32	s0, s2
   17eb4:	vmrs	APSR_nzcv, fpscr
   17eb8:	bpl	17f08 <__assert_fail@plt+0x69c0>
   17ebc:	ldr	r0, [sp, #4]
   17ec0:	vldr	s0, [r0, #4]
   17ec4:	vmov.f32	s2, #112	; 0x3f800000  1.0
   17ec8:	vcmpe.f32	s0, s2
   17ecc:	vmrs	APSR_nzcv, fpscr
   17ed0:	bhi	17f08 <__assert_fail@plt+0x69c0>
   17ed4:	ldr	r0, [sp, #4]
   17ed8:	vldr	s0, [r0]
   17edc:	vldr	s2, [sp]
   17ee0:	vadd.f32	s0, s0, s2
   17ee4:	ldr	r0, [sp, #4]
   17ee8:	vldr	s2, [r0, #8]
   17eec:	vcmpe.f32	s0, s2
   17ef0:	vmrs	APSR_nzcv, fpscr
   17ef4:	bpl	17f08 <__assert_fail@plt+0x69c0>
   17ef8:	movw	r0, #1
   17efc:	and	r0, r0, #1
   17f00:	strb	r0, [sp, #15]
   17f04:	b	17f24 <__assert_fail@plt+0x69dc>
   17f08:	ldr	r0, [sp, #8]
   17f0c:	movw	r1, #22760	; 0x58e8
   17f10:	movt	r1, #2
   17f14:	str	r1, [r0, #20]
   17f18:	movw	r0, #0
   17f1c:	and	r0, r0, #1
   17f20:	strb	r0, [sp, #15]
   17f24:	ldrb	r0, [sp, #15]
   17f28:	and	r0, r0, #1
   17f2c:	add	sp, sp, #16
   17f30:	bx	lr
   17f34:	stclcc	12, cr12, [ip, #820]	; 0x334
   17f38:	andeq	r0, r0, r0
   17f3c:	push	{fp, lr}
   17f40:	mov	fp, sp
   17f44:	sub	sp, sp, #16
   17f48:	str	r0, [sp, #8]
   17f4c:	str	r1, [sp, #4]
   17f50:	ldr	r0, [sp, #4]
   17f54:	ldrb	r0, [r0, #16]
   17f58:	tst	r0, #1
   17f5c:	bne	17fac <__assert_fail@plt+0x6a64>
   17f60:	vldr	s0, [pc, #128]	; 17fe8 <__assert_fail@plt+0x6aa0>
   17f64:	ldr	r0, [sp, #8]
   17f68:	vmov	s2, r0
   17f6c:	vcvt.f32.u32	s2, s2
   17f70:	ldr	r0, [sp, #4]
   17f74:	vldr	s4, [r0, #8]
   17f78:	vdiv.f32	s2, s2, s4
   17f7c:	vstr	s2, [sp]
   17f80:	vldr	s2, [sp]
   17f84:	vcmpe.f32	s0, s2
   17f88:	vmrs	APSR_nzcv, fpscr
   17f8c:	bhi	17f9c <__assert_fail@plt+0x6a54>
   17f90:	movw	r0, #0
   17f94:	str	r0, [fp, #-4]
   17f98:	b	17fdc <__assert_fail@plt+0x6a94>
   17f9c:	vldr	s0, [sp]
   17fa0:	vcvt.u32.f32	s0, s0
   17fa4:	vmov	r0, s0
   17fa8:	str	r0, [sp, #8]
   17fac:	ldr	r0, [sp, #8]
   17fb0:	bl	18eac <__assert_fail@plt+0x7964>
   17fb4:	ldr	r1, [pc, #48]	; 17fec <__assert_fail@plt+0x6aa4>
   17fb8:	str	r0, [sp, #8]
   17fbc:	ldr	r0, [sp, #8]
   17fc0:	cmp	r1, r0
   17fc4:	bcs	17fd4 <__assert_fail@plt+0x6a8c>
   17fc8:	movw	r0, #0
   17fcc:	str	r0, [fp, #-4]
   17fd0:	b	17fdc <__assert_fail@plt+0x6a94>
   17fd4:	ldr	r0, [sp, #8]
   17fd8:	str	r0, [fp, #-4]
   17fdc:	ldr	r0, [fp, #-4]
   17fe0:	mov	sp, fp
   17fe4:	pop	{fp, pc}
   17fe8:	svcmi	0x00800000
   17fec:	svcne	0x00ffffff
   17ff0:	push	{fp, lr}
   17ff4:	mov	fp, sp
   17ff8:	sub	sp, sp, #24
   17ffc:	str	r0, [fp, #-4]
   18000:	ldr	r0, [fp, #-4]
   18004:	ldr	r0, [r0]
   18008:	str	r0, [fp, #-8]
   1800c:	ldr	r0, [fp, #-8]
   18010:	ldr	r1, [fp, #-4]
   18014:	ldr	r1, [r1, #4]
   18018:	cmp	r0, r1
   1801c:	bcs	18120 <__assert_fail@plt+0x6bd8>
   18020:	ldr	r0, [fp, #-8]
   18024:	ldr	r0, [r0]
   18028:	movw	r1, #0
   1802c:	cmp	r0, r1
   18030:	beq	1810c <__assert_fail@plt+0x6bc4>
   18034:	ldr	r0, [fp, #-8]
   18038:	ldr	r0, [r0, #4]
   1803c:	str	r0, [sp, #12]
   18040:	ldr	r0, [sp, #12]
   18044:	movw	r1, #0
   18048:	cmp	r0, r1
   1804c:	beq	180c4 <__assert_fail@plt+0x6b7c>
   18050:	ldr	r0, [fp, #-4]
   18054:	ldr	r0, [r0, #32]
   18058:	movw	r1, #0
   1805c:	cmp	r0, r1
   18060:	beq	18084 <__assert_fail@plt+0x6b3c>
   18064:	ldr	r0, [fp, #-4]
   18068:	ldr	r0, [r0, #32]
   1806c:	ldr	r1, [sp, #12]
   18070:	ldr	r1, [r1]
   18074:	str	r0, [sp, #4]
   18078:	mov	r0, r1
   1807c:	ldr	r1, [sp, #4]
   18080:	blx	r1
   18084:	ldr	r0, [sp, #12]
   18088:	movw	r1, #0
   1808c:	str	r1, [r0]
   18090:	ldr	r0, [sp, #12]
   18094:	ldr	r0, [r0, #4]
   18098:	str	r0, [sp, #8]
   1809c:	ldr	r0, [fp, #-4]
   180a0:	ldr	r0, [r0, #36]	; 0x24
   180a4:	ldr	r1, [sp, #12]
   180a8:	str	r0, [r1, #4]
   180ac:	ldr	r0, [sp, #12]
   180b0:	ldr	r1, [fp, #-4]
   180b4:	str	r0, [r1, #36]	; 0x24
   180b8:	ldr	r0, [sp, #8]
   180bc:	str	r0, [sp, #12]
   180c0:	b	18040 <__assert_fail@plt+0x6af8>
   180c4:	ldr	r0, [fp, #-4]
   180c8:	ldr	r0, [r0, #32]
   180cc:	movw	r1, #0
   180d0:	cmp	r0, r1
   180d4:	beq	180f8 <__assert_fail@plt+0x6bb0>
   180d8:	ldr	r0, [fp, #-4]
   180dc:	ldr	r0, [r0, #32]
   180e0:	ldr	r1, [fp, #-8]
   180e4:	ldr	r1, [r1]
   180e8:	str	r0, [sp]
   180ec:	mov	r0, r1
   180f0:	ldr	r1, [sp]
   180f4:	blx	r1
   180f8:	ldr	r0, [fp, #-8]
   180fc:	movw	r1, #0
   18100:	str	r1, [r0]
   18104:	ldr	r0, [fp, #-8]
   18108:	str	r1, [r0, #4]
   1810c:	b	18110 <__assert_fail@plt+0x6bc8>
   18110:	ldr	r0, [fp, #-8]
   18114:	add	r0, r0, #8
   18118:	str	r0, [fp, #-8]
   1811c:	b	1800c <__assert_fail@plt+0x6ac4>
   18120:	ldr	r0, [fp, #-4]
   18124:	movw	r1, #0
   18128:	str	r1, [r0, #12]
   1812c:	ldr	r0, [fp, #-4]
   18130:	str	r1, [r0, #16]
   18134:	mov	sp, fp
   18138:	pop	{fp, pc}
   1813c:	push	{fp, lr}
   18140:	mov	fp, sp
   18144:	sub	sp, sp, #24
   18148:	str	r0, [fp, #-4]
   1814c:	ldr	r0, [fp, #-4]
   18150:	ldr	r0, [r0, #32]
   18154:	movw	r1, #0
   18158:	cmp	r0, r1
   1815c:	beq	18208 <__assert_fail@plt+0x6cc0>
   18160:	ldr	r0, [fp, #-4]
   18164:	ldr	r0, [r0, #16]
   18168:	cmp	r0, #0
   1816c:	beq	18208 <__assert_fail@plt+0x6cc0>
   18170:	ldr	r0, [fp, #-4]
   18174:	ldr	r0, [r0]
   18178:	str	r0, [fp, #-8]
   1817c:	ldr	r0, [fp, #-8]
   18180:	ldr	r1, [fp, #-4]
   18184:	ldr	r1, [r1, #4]
   18188:	cmp	r0, r1
   1818c:	bcs	18204 <__assert_fail@plt+0x6cbc>
   18190:	ldr	r0, [fp, #-8]
   18194:	ldr	r0, [r0]
   18198:	movw	r1, #0
   1819c:	cmp	r0, r1
   181a0:	beq	181f0 <__assert_fail@plt+0x6ca8>
   181a4:	ldr	r0, [fp, #-8]
   181a8:	str	r0, [sp, #12]
   181ac:	ldr	r0, [sp, #12]
   181b0:	movw	r1, #0
   181b4:	cmp	r0, r1
   181b8:	beq	181ec <__assert_fail@plt+0x6ca4>
   181bc:	ldr	r0, [fp, #-4]
   181c0:	ldr	r0, [r0, #32]
   181c4:	ldr	r1, [sp, #12]
   181c8:	ldr	r1, [r1]
   181cc:	str	r0, [sp, #4]
   181d0:	mov	r0, r1
   181d4:	ldr	r1, [sp, #4]
   181d8:	blx	r1
   181dc:	ldr	r0, [sp, #12]
   181e0:	ldr	r0, [r0, #4]
   181e4:	str	r0, [sp, #12]
   181e8:	b	181ac <__assert_fail@plt+0x6c64>
   181ec:	b	181f0 <__assert_fail@plt+0x6ca8>
   181f0:	b	181f4 <__assert_fail@plt+0x6cac>
   181f4:	ldr	r0, [fp, #-8]
   181f8:	add	r0, r0, #8
   181fc:	str	r0, [fp, #-8]
   18200:	b	1817c <__assert_fail@plt+0x6c34>
   18204:	b	18208 <__assert_fail@plt+0x6cc0>
   18208:	ldr	r0, [fp, #-4]
   1820c:	ldr	r0, [r0]
   18210:	str	r0, [fp, #-8]
   18214:	ldr	r0, [fp, #-8]
   18218:	ldr	r1, [fp, #-4]
   1821c:	ldr	r1, [r1, #4]
   18220:	cmp	r0, r1
   18224:	bcs	18278 <__assert_fail@plt+0x6d30>
   18228:	ldr	r0, [fp, #-8]
   1822c:	ldr	r0, [r0, #4]
   18230:	str	r0, [sp, #12]
   18234:	ldr	r0, [sp, #12]
   18238:	movw	r1, #0
   1823c:	cmp	r0, r1
   18240:	beq	18264 <__assert_fail@plt+0x6d1c>
   18244:	ldr	r0, [sp, #12]
   18248:	ldr	r0, [r0, #4]
   1824c:	str	r0, [sp, #8]
   18250:	ldr	r0, [sp, #12]
   18254:	bl	13948 <__assert_fail@plt+0x2400>
   18258:	ldr	r0, [sp, #8]
   1825c:	str	r0, [sp, #12]
   18260:	b	18234 <__assert_fail@plt+0x6cec>
   18264:	b	18268 <__assert_fail@plt+0x6d20>
   18268:	ldr	r0, [fp, #-8]
   1826c:	add	r0, r0, #8
   18270:	str	r0, [fp, #-8]
   18274:	b	18214 <__assert_fail@plt+0x6ccc>
   18278:	ldr	r0, [fp, #-4]
   1827c:	ldr	r0, [r0, #36]	; 0x24
   18280:	str	r0, [sp, #12]
   18284:	ldr	r0, [sp, #12]
   18288:	movw	r1, #0
   1828c:	cmp	r0, r1
   18290:	beq	182b4 <__assert_fail@plt+0x6d6c>
   18294:	ldr	r0, [sp, #12]
   18298:	ldr	r0, [r0, #4]
   1829c:	str	r0, [sp, #8]
   182a0:	ldr	r0, [sp, #12]
   182a4:	bl	13948 <__assert_fail@plt+0x2400>
   182a8:	ldr	r0, [sp, #8]
   182ac:	str	r0, [sp, #12]
   182b0:	b	18284 <__assert_fail@plt+0x6d3c>
   182b4:	ldr	r0, [fp, #-4]
   182b8:	ldr	r0, [r0]
   182bc:	bl	13948 <__assert_fail@plt+0x2400>
   182c0:	ldr	r0, [fp, #-4]
   182c4:	bl	13948 <__assert_fail@plt+0x2400>
   182c8:	mov	sp, fp
   182cc:	pop	{fp, pc}
   182d0:	push	{fp, lr}
   182d4:	mov	fp, sp
   182d8:	sub	sp, sp, #64	; 0x40
   182dc:	str	r0, [fp, #-8]
   182e0:	str	r1, [fp, #-12]
   182e4:	ldr	r0, [fp, #-12]
   182e8:	ldr	r1, [fp, #-8]
   182ec:	ldr	r1, [r1, #20]
   182f0:	bl	17f3c <__assert_fail@plt+0x69f4>
   182f4:	str	r0, [sp, #4]
   182f8:	ldr	r0, [sp, #4]
   182fc:	cmp	r0, #0
   18300:	bne	18314 <__assert_fail@plt+0x6dcc>
   18304:	movw	r0, #0
   18308:	and	r0, r0, #1
   1830c:	strb	r0, [fp, #-1]
   18310:	b	184ec <__assert_fail@plt+0x6fa4>
   18314:	ldr	r0, [sp, #4]
   18318:	ldr	r1, [fp, #-8]
   1831c:	ldr	r1, [r1, #8]
   18320:	cmp	r0, r1
   18324:	bne	18338 <__assert_fail@plt+0x6df0>
   18328:	movw	r0, #1
   1832c:	and	r0, r0, #1
   18330:	strb	r0, [fp, #-1]
   18334:	b	184ec <__assert_fail@plt+0x6fa4>
   18338:	add	r0, sp, #12
   1833c:	str	r0, [sp, #8]
   18340:	ldr	r0, [sp, #4]
   18344:	movw	r1, #8
   18348:	bl	21708 <__assert_fail@plt+0x101c0>
   1834c:	ldr	r1, [sp, #8]
   18350:	str	r0, [r1]
   18354:	ldr	r0, [sp, #8]
   18358:	ldr	r0, [r0]
   1835c:	movw	r1, #0
   18360:	cmp	r0, r1
   18364:	bne	18378 <__assert_fail@plt+0x6e30>
   18368:	movw	r0, #0
   1836c:	and	r0, r0, #1
   18370:	strb	r0, [fp, #-1]
   18374:	b	184ec <__assert_fail@plt+0x6fa4>
   18378:	ldr	r0, [sp, #4]
   1837c:	ldr	r1, [sp, #8]
   18380:	str	r0, [r1, #8]
   18384:	ldr	r0, [sp, #8]
   18388:	ldr	r0, [r0]
   1838c:	ldr	r1, [sp, #4]
   18390:	add	r0, r0, r1, lsl #3
   18394:	ldr	r1, [sp, #8]
   18398:	str	r0, [r1, #4]
   1839c:	ldr	r0, [sp, #8]
   183a0:	movw	r1, #0
   183a4:	str	r1, [r0, #12]
   183a8:	ldr	r0, [sp, #8]
   183ac:	str	r1, [r0, #16]
   183b0:	ldr	r0, [fp, #-8]
   183b4:	ldr	r0, [r0, #20]
   183b8:	ldr	r1, [sp, #8]
   183bc:	str	r0, [r1, #20]
   183c0:	ldr	r0, [fp, #-8]
   183c4:	ldr	r0, [r0, #24]
   183c8:	ldr	r1, [sp, #8]
   183cc:	str	r0, [r1, #24]
   183d0:	ldr	r0, [fp, #-8]
   183d4:	ldr	r0, [r0, #28]
   183d8:	ldr	r1, [sp, #8]
   183dc:	str	r0, [r1, #28]
   183e0:	ldr	r0, [fp, #-8]
   183e4:	ldr	r0, [r0, #32]
   183e8:	ldr	r1, [sp, #8]
   183ec:	str	r0, [r1, #32]
   183f0:	ldr	r0, [fp, #-8]
   183f4:	ldr	r0, [r0, #36]	; 0x24
   183f8:	ldr	r1, [sp, #8]
   183fc:	str	r0, [r1, #36]	; 0x24
   18400:	ldr	r0, [sp, #8]
   18404:	ldr	r1, [fp, #-8]
   18408:	movw	r2, #0
   1840c:	and	r2, r2, #1
   18410:	bl	184fc <__assert_fail@plt+0x6fb4>
   18414:	tst	r0, #1
   18418:	beq	18488 <__assert_fail@plt+0x6f40>
   1841c:	ldr	r0, [fp, #-8]
   18420:	ldr	r0, [r0]
   18424:	bl	13948 <__assert_fail@plt+0x2400>
   18428:	ldr	r0, [sp, #8]
   1842c:	ldr	r0, [r0]
   18430:	ldr	r1, [fp, #-8]
   18434:	str	r0, [r1]
   18438:	ldr	r0, [sp, #8]
   1843c:	ldr	r0, [r0, #4]
   18440:	ldr	r1, [fp, #-8]
   18444:	str	r0, [r1, #4]
   18448:	ldr	r0, [sp, #8]
   1844c:	ldr	r0, [r0, #8]
   18450:	ldr	r1, [fp, #-8]
   18454:	str	r0, [r1, #8]
   18458:	ldr	r0, [sp, #8]
   1845c:	ldr	r0, [r0, #12]
   18460:	ldr	r1, [fp, #-8]
   18464:	str	r0, [r1, #12]
   18468:	ldr	r0, [sp, #8]
   1846c:	ldr	r0, [r0, #36]	; 0x24
   18470:	ldr	r1, [fp, #-8]
   18474:	str	r0, [r1, #36]	; 0x24
   18478:	movw	r0, #1
   1847c:	and	r0, r0, #1
   18480:	strb	r0, [fp, #-1]
   18484:	b	184ec <__assert_fail@plt+0x6fa4>
   18488:	ldr	r0, [sp, #8]
   1848c:	ldr	r0, [r0, #36]	; 0x24
   18490:	ldr	r1, [fp, #-8]
   18494:	str	r0, [r1, #36]	; 0x24
   18498:	ldr	r0, [fp, #-8]
   1849c:	ldr	r1, [sp, #8]
   184a0:	movw	r2, #1
   184a4:	and	r2, r2, #1
   184a8:	bl	184fc <__assert_fail@plt+0x6fb4>
   184ac:	tst	r0, #1
   184b0:	beq	184d0 <__assert_fail@plt+0x6f88>
   184b4:	ldr	r0, [fp, #-8]
   184b8:	ldr	r1, [sp, #8]
   184bc:	movw	r2, #0
   184c0:	and	r2, r2, #1
   184c4:	bl	184fc <__assert_fail@plt+0x6fb4>
   184c8:	tst	r0, #1
   184cc:	bne	184d4 <__assert_fail@plt+0x6f8c>
   184d0:	bl	11500 <abort@plt>
   184d4:	ldr	r0, [sp, #8]
   184d8:	ldr	r0, [r0]
   184dc:	bl	13948 <__assert_fail@plt+0x2400>
   184e0:	movw	r0, #0
   184e4:	and	r0, r0, #1
   184e8:	strb	r0, [fp, #-1]
   184ec:	ldrb	r0, [fp, #-1]
   184f0:	and	r0, r0, #1
   184f4:	mov	sp, fp
   184f8:	pop	{fp, pc}
   184fc:	push	{fp, lr}
   18500:	mov	fp, sp
   18504:	sub	sp, sp, #40	; 0x28
   18508:	str	r0, [fp, #-8]
   1850c:	str	r1, [fp, #-12]
   18510:	and	r0, r2, #1
   18514:	strb	r0, [fp, #-13]
   18518:	ldr	r0, [fp, #-12]
   1851c:	ldr	r0, [r0]
   18520:	str	r0, [sp, #20]
   18524:	ldr	r0, [sp, #20]
   18528:	ldr	r1, [fp, #-12]
   1852c:	ldr	r1, [r1, #4]
   18530:	cmp	r0, r1
   18534:	bcs	186f0 <__assert_fail@plt+0x71a8>
   18538:	ldr	r0, [sp, #20]
   1853c:	ldr	r0, [r0]
   18540:	movw	r1, #0
   18544:	cmp	r0, r1
   18548:	beq	186dc <__assert_fail@plt+0x7194>
   1854c:	ldr	r0, [sp, #20]
   18550:	ldr	r0, [r0, #4]
   18554:	str	r0, [sp, #16]
   18558:	ldr	r0, [sp, #16]
   1855c:	movw	r1, #0
   18560:	cmp	r0, r1
   18564:	beq	185fc <__assert_fail@plt+0x70b4>
   18568:	ldr	r0, [sp, #16]
   1856c:	ldr	r0, [r0]
   18570:	str	r0, [sp, #8]
   18574:	ldr	r0, [fp, #-8]
   18578:	ldr	r1, [sp, #8]
   1857c:	bl	177a8 <__assert_fail@plt+0x6260>
   18580:	str	r0, [sp, #4]
   18584:	ldr	r0, [sp, #16]
   18588:	ldr	r0, [r0, #4]
   1858c:	str	r0, [sp, #12]
   18590:	ldr	r0, [sp, #4]
   18594:	ldr	r0, [r0]
   18598:	movw	r1, #0
   1859c:	cmp	r0, r1
   185a0:	beq	185c4 <__assert_fail@plt+0x707c>
   185a4:	ldr	r0, [sp, #4]
   185a8:	ldr	r0, [r0, #4]
   185ac:	ldr	r1, [sp, #16]
   185b0:	str	r0, [r1, #4]
   185b4:	ldr	r0, [sp, #16]
   185b8:	ldr	r1, [sp, #4]
   185bc:	str	r0, [r1, #4]
   185c0:	b	185ec <__assert_fail@plt+0x70a4>
   185c4:	ldr	r0, [sp, #8]
   185c8:	ldr	r1, [sp, #4]
   185cc:	str	r0, [r1]
   185d0:	ldr	r0, [fp, #-8]
   185d4:	ldr	r1, [r0, #12]
   185d8:	add	r1, r1, #1
   185dc:	str	r1, [r0, #12]
   185e0:	ldr	r0, [fp, #-8]
   185e4:	ldr	r1, [sp, #16]
   185e8:	bl	19004 <__assert_fail@plt+0x7abc>
   185ec:	b	185f0 <__assert_fail@plt+0x70a8>
   185f0:	ldr	r0, [sp, #12]
   185f4:	str	r0, [sp, #16]
   185f8:	b	18558 <__assert_fail@plt+0x7010>
   185fc:	ldr	r0, [sp, #20]
   18600:	ldr	r0, [r0]
   18604:	str	r0, [sp, #8]
   18608:	ldr	r0, [sp, #20]
   1860c:	movw	r1, #0
   18610:	str	r1, [r0, #4]
   18614:	ldrb	r0, [fp, #-13]
   18618:	tst	r0, #1
   1861c:	beq	18624 <__assert_fail@plt+0x70dc>
   18620:	b	186e0 <__assert_fail@plt+0x7198>
   18624:	ldr	r0, [fp, #-8]
   18628:	ldr	r1, [sp, #8]
   1862c:	bl	177a8 <__assert_fail@plt+0x6260>
   18630:	str	r0, [sp, #4]
   18634:	ldr	r0, [sp, #4]
   18638:	ldr	r0, [r0]
   1863c:	movw	r1, #0
   18640:	cmp	r0, r1
   18644:	beq	186a0 <__assert_fail@plt+0x7158>
   18648:	ldr	r0, [fp, #-8]
   1864c:	bl	18bb4 <__assert_fail@plt+0x766c>
   18650:	str	r0, [sp]
   18654:	ldr	r0, [sp]
   18658:	movw	r1, #0
   1865c:	cmp	r0, r1
   18660:	bne	18674 <__assert_fail@plt+0x712c>
   18664:	movw	r0, #0
   18668:	and	r0, r0, #1
   1866c:	strb	r0, [fp, #-1]
   18670:	b	186fc <__assert_fail@plt+0x71b4>
   18674:	ldr	r0, [sp, #8]
   18678:	ldr	r1, [sp]
   1867c:	str	r0, [r1]
   18680:	ldr	r0, [sp, #4]
   18684:	ldr	r0, [r0, #4]
   18688:	ldr	r1, [sp]
   1868c:	str	r0, [r1, #4]
   18690:	ldr	r0, [sp]
   18694:	ldr	r1, [sp, #4]
   18698:	str	r0, [r1, #4]
   1869c:	b	186bc <__assert_fail@plt+0x7174>
   186a0:	ldr	r0, [sp, #8]
   186a4:	ldr	r1, [sp, #4]
   186a8:	str	r0, [r1]
   186ac:	ldr	r0, [fp, #-8]
   186b0:	ldr	r1, [r0, #12]
   186b4:	add	r1, r1, #1
   186b8:	str	r1, [r0, #12]
   186bc:	ldr	r0, [sp, #20]
   186c0:	movw	r1, #0
   186c4:	str	r1, [r0]
   186c8:	ldr	r0, [fp, #-12]
   186cc:	ldr	r1, [r0, #12]
   186d0:	mvn	r2, #0
   186d4:	add	r1, r1, r2
   186d8:	str	r1, [r0, #12]
   186dc:	b	186e0 <__assert_fail@plt+0x7198>
   186e0:	ldr	r0, [sp, #20]
   186e4:	add	r0, r0, #8
   186e8:	str	r0, [sp, #20]
   186ec:	b	18524 <__assert_fail@plt+0x6fdc>
   186f0:	movw	r0, #1
   186f4:	and	r0, r0, #1
   186f8:	strb	r0, [fp, #-1]
   186fc:	ldrb	r0, [fp, #-1]
   18700:	and	r0, r0, #1
   18704:	mov	sp, fp
   18708:	pop	{fp, pc}
   1870c:	push	{fp, lr}
   18710:	mov	fp, sp
   18714:	sub	sp, sp, #40	; 0x28
   18718:	str	r0, [fp, #-8]
   1871c:	str	r1, [fp, #-12]
   18720:	str	r2, [fp, #-16]
   18724:	ldr	r0, [fp, #-12]
   18728:	movw	r1, #0
   1872c:	cmp	r0, r1
   18730:	bne	18738 <__assert_fail@plt+0x71f0>
   18734:	bl	11500 <abort@plt>
   18738:	ldr	r0, [fp, #-8]
   1873c:	ldr	r1, [fp, #-12]
   18740:	add	r2, sp, #16
   18744:	movw	r3, #0
   18748:	and	r3, r3, #1
   1874c:	bl	189b8 <__assert_fail@plt+0x7470>
   18750:	str	r0, [sp, #20]
   18754:	movw	r1, #0
   18758:	cmp	r0, r1
   1875c:	beq	18788 <__assert_fail@plt+0x7240>
   18760:	ldr	r0, [fp, #-16]
   18764:	movw	r1, #0
   18768:	cmp	r0, r1
   1876c:	beq	1877c <__assert_fail@plt+0x7234>
   18770:	ldr	r0, [sp, #20]
   18774:	ldr	r1, [fp, #-16]
   18778:	str	r0, [r1]
   1877c:	movw	r0, #0
   18780:	str	r0, [fp, #-4]
   18784:	b	189a8 <__assert_fail@plt+0x7460>
   18788:	ldr	r0, [fp, #-8]
   1878c:	ldr	r0, [r0, #12]
   18790:	vmov	s0, r0
   18794:	vcvt.f32.u32	s0, s0
   18798:	ldr	r0, [fp, #-8]
   1879c:	ldr	r0, [r0, #20]
   187a0:	vldr	s2, [r0, #8]
   187a4:	ldr	r0, [fp, #-8]
   187a8:	ldr	r0, [r0, #8]
   187ac:	vmov	s4, r0
   187b0:	vcvt.f32.u32	s4, s4
   187b4:	vmul.f32	s2, s2, s4
   187b8:	vcmpe.f32	s0, s2
   187bc:	vmrs	APSR_nzcv, fpscr
   187c0:	ble	188f4 <__assert_fail@plt+0x73ac>
   187c4:	ldr	r0, [fp, #-8]
   187c8:	bl	17de8 <__assert_fail@plt+0x68a0>
   187cc:	ldr	r1, [fp, #-8]
   187d0:	ldr	r1, [r1, #12]
   187d4:	vmov	s0, r1
   187d8:	vcvt.f32.u32	s0, s0
   187dc:	ldr	r1, [fp, #-8]
   187e0:	ldr	r1, [r1, #20]
   187e4:	vldr	s2, [r1, #8]
   187e8:	ldr	r1, [fp, #-8]
   187ec:	ldr	r1, [r1, #8]
   187f0:	vmov	s4, r1
   187f4:	vcvt.f32.u32	s4, s4
   187f8:	vmul.f32	s2, s2, s4
   187fc:	vcmpe.f32	s0, s2
   18800:	vmrs	APSR_nzcv, fpscr
   18804:	ble	188f0 <__assert_fail@plt+0x73a8>
   18808:	ldr	r0, [fp, #-8]
   1880c:	ldr	r0, [r0, #20]
   18810:	str	r0, [sp, #12]
   18814:	ldr	r0, [sp, #12]
   18818:	ldrb	r0, [r0, #16]
   1881c:	tst	r0, #1
   18820:	beq	18848 <__assert_fail@plt+0x7300>
   18824:	ldr	r0, [fp, #-8]
   18828:	ldr	r0, [r0, #8]
   1882c:	vmov	s0, r0
   18830:	vcvt.f32.u32	s0, s0
   18834:	ldr	r0, [sp, #12]
   18838:	vldr	s2, [r0, #12]
   1883c:	vmul.f32	s0, s0, s2
   18840:	vstr	s0, [sp]
   18844:	b	18874 <__assert_fail@plt+0x732c>
   18848:	ldr	r0, [fp, #-8]
   1884c:	ldr	r0, [r0, #8]
   18850:	vmov	s0, r0
   18854:	vcvt.f32.u32	s0, s0
   18858:	ldr	r0, [sp, #12]
   1885c:	vldr	s2, [r0, #12]
   18860:	vmul.f32	s0, s0, s2
   18864:	ldr	r0, [sp, #12]
   18868:	vldr	s2, [r0, #8]
   1886c:	vmul.f32	s0, s0, s2
   18870:	vstr	s0, [sp]
   18874:	vldr	s0, [sp]
   18878:	vldr	s2, [pc, #308]	; 189b4 <__assert_fail@plt+0x746c>
   1887c:	vstr	s0, [sp, #8]
   18880:	vldr	s0, [sp, #8]
   18884:	vcmpe.f32	s2, s0
   18888:	vmrs	APSR_nzcv, fpscr
   1888c:	bhi	1889c <__assert_fail@plt+0x7354>
   18890:	mvn	r0, #0
   18894:	str	r0, [fp, #-4]
   18898:	b	189a8 <__assert_fail@plt+0x7460>
   1889c:	ldr	r0, [fp, #-8]
   188a0:	vldr	s0, [sp, #8]
   188a4:	vcvt.u32.f32	s0, s0
   188a8:	vmov	r1, s0
   188ac:	bl	182d0 <__assert_fail@plt+0x6d88>
   188b0:	tst	r0, #1
   188b4:	bne	188c4 <__assert_fail@plt+0x737c>
   188b8:	mvn	r0, #0
   188bc:	str	r0, [fp, #-4]
   188c0:	b	189a8 <__assert_fail@plt+0x7460>
   188c4:	ldr	r0, [fp, #-8]
   188c8:	ldr	r1, [fp, #-12]
   188cc:	add	r2, sp, #16
   188d0:	movw	r3, #0
   188d4:	and	r3, r3, #1
   188d8:	bl	189b8 <__assert_fail@plt+0x7470>
   188dc:	movw	r1, #0
   188e0:	cmp	r0, r1
   188e4:	beq	188ec <__assert_fail@plt+0x73a4>
   188e8:	bl	11500 <abort@plt>
   188ec:	b	188f0 <__assert_fail@plt+0x73a8>
   188f0:	b	188f4 <__assert_fail@plt+0x73ac>
   188f4:	ldr	r0, [sp, #16]
   188f8:	ldr	r0, [r0]
   188fc:	movw	r1, #0
   18900:	cmp	r0, r1
   18904:	beq	18974 <__assert_fail@plt+0x742c>
   18908:	ldr	r0, [fp, #-8]
   1890c:	bl	18bb4 <__assert_fail@plt+0x766c>
   18910:	str	r0, [sp, #4]
   18914:	ldr	r0, [sp, #4]
   18918:	movw	r1, #0
   1891c:	cmp	r0, r1
   18920:	bne	18930 <__assert_fail@plt+0x73e8>
   18924:	mvn	r0, #0
   18928:	str	r0, [fp, #-4]
   1892c:	b	189a8 <__assert_fail@plt+0x7460>
   18930:	ldr	r0, [fp, #-12]
   18934:	ldr	r1, [sp, #4]
   18938:	str	r0, [r1]
   1893c:	ldr	r0, [sp, #16]
   18940:	ldr	r0, [r0, #4]
   18944:	ldr	r1, [sp, #4]
   18948:	str	r0, [r1, #4]
   1894c:	ldr	r0, [sp, #4]
   18950:	ldr	r1, [sp, #16]
   18954:	str	r0, [r1, #4]
   18958:	ldr	r0, [fp, #-8]
   1895c:	ldr	r1, [r0, #16]
   18960:	add	r1, r1, #1
   18964:	str	r1, [r0, #16]
   18968:	movw	r0, #1
   1896c:	str	r0, [fp, #-4]
   18970:	b	189a8 <__assert_fail@plt+0x7460>
   18974:	ldr	r0, [fp, #-12]
   18978:	ldr	r1, [sp, #16]
   1897c:	str	r0, [r1]
   18980:	ldr	r0, [fp, #-8]
   18984:	ldr	r1, [r0, #16]
   18988:	add	r1, r1, #1
   1898c:	str	r1, [r0, #16]
   18990:	ldr	r0, [fp, #-8]
   18994:	ldr	r1, [r0, #12]
   18998:	add	r1, r1, #1
   1899c:	str	r1, [r0, #12]
   189a0:	movw	r0, #1
   189a4:	str	r0, [fp, #-4]
   189a8:	ldr	r0, [fp, #-4]
   189ac:	mov	sp, fp
   189b0:	pop	{fp, pc}
   189b4:	svcmi	0x00800000
   189b8:	push	{fp, lr}
   189bc:	mov	fp, sp
   189c0:	sub	sp, sp, #56	; 0x38
   189c4:	str	r0, [fp, #-8]
   189c8:	str	r1, [fp, #-12]
   189cc:	str	r2, [fp, #-16]
   189d0:	and	r0, r3, #1
   189d4:	strb	r0, [fp, #-17]	; 0xffffffef
   189d8:	ldr	r0, [fp, #-8]
   189dc:	ldr	r1, [fp, #-12]
   189e0:	bl	177a8 <__assert_fail@plt+0x6260>
   189e4:	str	r0, [fp, #-24]	; 0xffffffe8
   189e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189ec:	ldr	r1, [fp, #-16]
   189f0:	str	r0, [r1]
   189f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189f8:	ldr	r0, [r0]
   189fc:	movw	r1, #0
   18a00:	cmp	r0, r1
   18a04:	bne	18a14 <__assert_fail@plt+0x74cc>
   18a08:	movw	r0, #0
   18a0c:	str	r0, [fp, #-4]
   18a10:	b	18ba8 <__assert_fail@plt+0x7660>
   18a14:	ldr	r0, [fp, #-12]
   18a18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18a1c:	ldr	r1, [r1]
   18a20:	cmp	r0, r1
   18a24:	beq	18a58 <__assert_fail@plt+0x7510>
   18a28:	ldr	r0, [fp, #-8]
   18a2c:	ldr	r0, [r0, #28]
   18a30:	ldr	r1, [fp, #-12]
   18a34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18a38:	ldr	r2, [r2]
   18a3c:	str	r0, [sp, #8]
   18a40:	mov	r0, r1
   18a44:	mov	r1, r2
   18a48:	ldr	r2, [sp, #8]
   18a4c:	blx	r2
   18a50:	tst	r0, #1
   18a54:	beq	18ad4 <__assert_fail@plt+0x758c>
   18a58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a5c:	ldr	r0, [r0]
   18a60:	str	r0, [sp, #24]
   18a64:	ldrb	r0, [fp, #-17]	; 0xffffffef
   18a68:	tst	r0, #1
   18a6c:	beq	18ac8 <__assert_fail@plt+0x7580>
   18a70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a74:	ldr	r0, [r0, #4]
   18a78:	movw	r1, #0
   18a7c:	cmp	r0, r1
   18a80:	beq	18ab8 <__assert_fail@plt+0x7570>
   18a84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a88:	ldr	r0, [r0, #4]
   18a8c:	str	r0, [sp, #20]
   18a90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a94:	ldr	r1, [sp, #20]
   18a98:	ldr	r2, [r1]
   18a9c:	str	r2, [r0]
   18aa0:	ldr	r1, [r1, #4]
   18aa4:	str	r1, [r0, #4]
   18aa8:	ldr	r0, [fp, #-8]
   18aac:	ldr	r1, [sp, #20]
   18ab0:	bl	19004 <__assert_fail@plt+0x7abc>
   18ab4:	b	18ac4 <__assert_fail@plt+0x757c>
   18ab8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18abc:	movw	r1, #0
   18ac0:	str	r1, [r0]
   18ac4:	b	18ac8 <__assert_fail@plt+0x7580>
   18ac8:	ldr	r0, [sp, #24]
   18acc:	str	r0, [fp, #-4]
   18ad0:	b	18ba8 <__assert_fail@plt+0x7660>
   18ad4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ad8:	str	r0, [sp, #28]
   18adc:	ldr	r0, [sp, #28]
   18ae0:	ldr	r0, [r0, #4]
   18ae4:	movw	r1, #0
   18ae8:	cmp	r0, r1
   18aec:	beq	18ba0 <__assert_fail@plt+0x7658>
   18af0:	ldr	r0, [fp, #-12]
   18af4:	ldr	r1, [sp, #28]
   18af8:	ldr	r1, [r1, #4]
   18afc:	ldr	r1, [r1]
   18b00:	cmp	r0, r1
   18b04:	beq	18b3c <__assert_fail@plt+0x75f4>
   18b08:	ldr	r0, [fp, #-8]
   18b0c:	ldr	r0, [r0, #28]
   18b10:	ldr	r1, [fp, #-12]
   18b14:	ldr	r2, [sp, #28]
   18b18:	ldr	r2, [r2, #4]
   18b1c:	ldr	r2, [r2]
   18b20:	str	r0, [sp, #4]
   18b24:	mov	r0, r1
   18b28:	mov	r1, r2
   18b2c:	ldr	r2, [sp, #4]
   18b30:	blx	r2
   18b34:	tst	r0, #1
   18b38:	beq	18b8c <__assert_fail@plt+0x7644>
   18b3c:	ldr	r0, [sp, #28]
   18b40:	ldr	r0, [r0, #4]
   18b44:	ldr	r0, [r0]
   18b48:	str	r0, [sp, #16]
   18b4c:	ldrb	r0, [fp, #-17]	; 0xffffffef
   18b50:	tst	r0, #1
   18b54:	beq	18b80 <__assert_fail@plt+0x7638>
   18b58:	ldr	r0, [sp, #28]
   18b5c:	ldr	r0, [r0, #4]
   18b60:	str	r0, [sp, #12]
   18b64:	ldr	r0, [sp, #12]
   18b68:	ldr	r0, [r0, #4]
   18b6c:	ldr	r1, [sp, #28]
   18b70:	str	r0, [r1, #4]
   18b74:	ldr	r0, [fp, #-8]
   18b78:	ldr	r1, [sp, #12]
   18b7c:	bl	19004 <__assert_fail@plt+0x7abc>
   18b80:	ldr	r0, [sp, #16]
   18b84:	str	r0, [fp, #-4]
   18b88:	b	18ba8 <__assert_fail@plt+0x7660>
   18b8c:	b	18b90 <__assert_fail@plt+0x7648>
   18b90:	ldr	r0, [sp, #28]
   18b94:	ldr	r0, [r0, #4]
   18b98:	str	r0, [sp, #28]
   18b9c:	b	18adc <__assert_fail@plt+0x7594>
   18ba0:	movw	r0, #0
   18ba4:	str	r0, [fp, #-4]
   18ba8:	ldr	r0, [fp, #-4]
   18bac:	mov	sp, fp
   18bb0:	pop	{fp, pc}
   18bb4:	push	{fp, lr}
   18bb8:	mov	fp, sp
   18bbc:	sub	sp, sp, #8
   18bc0:	str	r0, [sp, #4]
   18bc4:	ldr	r0, [sp, #4]
   18bc8:	ldr	r0, [r0, #36]	; 0x24
   18bcc:	movw	r1, #0
   18bd0:	cmp	r0, r1
   18bd4:	beq	18bf8 <__assert_fail@plt+0x76b0>
   18bd8:	ldr	r0, [sp, #4]
   18bdc:	ldr	r0, [r0, #36]	; 0x24
   18be0:	str	r0, [sp]
   18be4:	ldr	r0, [sp]
   18be8:	ldr	r0, [r0, #4]
   18bec:	ldr	r1, [sp, #4]
   18bf0:	str	r0, [r1, #36]	; 0x24
   18bf4:	b	18c04 <__assert_fail@plt+0x76bc>
   18bf8:	movw	r0, #8
   18bfc:	bl	217a4 <__assert_fail@plt+0x1025c>
   18c00:	str	r0, [sp]
   18c04:	ldr	r0, [sp]
   18c08:	mov	sp, fp
   18c0c:	pop	{fp, pc}
   18c10:	push	{fp, lr}
   18c14:	mov	fp, sp
   18c18:	sub	sp, sp, #24
   18c1c:	str	r0, [fp, #-4]
   18c20:	str	r1, [fp, #-8]
   18c24:	ldr	r0, [fp, #-4]
   18c28:	ldr	r1, [fp, #-8]
   18c2c:	add	r2, sp, #12
   18c30:	bl	1870c <__assert_fail@plt+0x71c4>
   18c34:	str	r0, [sp, #8]
   18c38:	ldr	r0, [sp, #8]
   18c3c:	cmn	r0, #1
   18c40:	bne	18c50 <__assert_fail@plt+0x7708>
   18c44:	movw	r0, #0
   18c48:	str	r0, [sp, #4]
   18c4c:	b	18c78 <__assert_fail@plt+0x7730>
   18c50:	ldr	r0, [sp, #8]
   18c54:	cmp	r0, #0
   18c58:	bne	18c68 <__assert_fail@plt+0x7720>
   18c5c:	ldr	r0, [sp, #12]
   18c60:	str	r0, [sp]
   18c64:	b	18c70 <__assert_fail@plt+0x7728>
   18c68:	ldr	r0, [fp, #-8]
   18c6c:	str	r0, [sp]
   18c70:	ldr	r0, [sp]
   18c74:	str	r0, [sp, #4]
   18c78:	ldr	r0, [sp, #4]
   18c7c:	mov	sp, fp
   18c80:	pop	{fp, pc}
   18c84:	push	{fp, lr}
   18c88:	mov	fp, sp
   18c8c:	sub	sp, sp, #40	; 0x28
   18c90:	str	r0, [fp, #-8]
   18c94:	str	r1, [fp, #-12]
   18c98:	ldr	r0, [fp, #-8]
   18c9c:	ldr	r1, [fp, #-12]
   18ca0:	add	r2, sp, #20
   18ca4:	movw	r3, #1
   18ca8:	and	r3, r3, #1
   18cac:	bl	189b8 <__assert_fail@plt+0x7470>
   18cb0:	str	r0, [fp, #-16]
   18cb4:	ldr	r0, [fp, #-16]
   18cb8:	movw	r1, #0
   18cbc:	cmp	r0, r1
   18cc0:	bne	18cd0 <__assert_fail@plt+0x7788>
   18cc4:	movw	r0, #0
   18cc8:	str	r0, [fp, #-4]
   18ccc:	b	18e78 <__assert_fail@plt+0x7930>
   18cd0:	ldr	r0, [fp, #-8]
   18cd4:	ldr	r1, [r0, #16]
   18cd8:	mvn	r2, #0
   18cdc:	add	r1, r1, r2
   18ce0:	str	r1, [r0, #16]
   18ce4:	ldr	r0, [sp, #20]
   18ce8:	ldr	r0, [r0]
   18cec:	movw	r1, #0
   18cf0:	cmp	r0, r1
   18cf4:	bne	18e70 <__assert_fail@plt+0x7928>
   18cf8:	ldr	r0, [fp, #-8]
   18cfc:	ldr	r1, [r0, #12]
   18d00:	mvn	r2, #0
   18d04:	add	r1, r1, r2
   18d08:	str	r1, [r0, #12]
   18d0c:	ldr	r0, [fp, #-8]
   18d10:	ldr	r0, [r0, #12]
   18d14:	vmov	s0, r0
   18d18:	vcvt.f32.u32	s0, s0
   18d1c:	ldr	r0, [fp, #-8]
   18d20:	ldr	r0, [r0, #20]
   18d24:	vldr	s2, [r0]
   18d28:	ldr	r0, [fp, #-8]
   18d2c:	ldr	r0, [r0, #8]
   18d30:	vmov	s4, r0
   18d34:	vcvt.f32.u32	s4, s4
   18d38:	vmul.f32	s2, s2, s4
   18d3c:	vcmpe.f32	s0, s2
   18d40:	vmrs	APSR_nzcv, fpscr
   18d44:	bpl	18e6c <__assert_fail@plt+0x7924>
   18d48:	ldr	r0, [fp, #-8]
   18d4c:	bl	17de8 <__assert_fail@plt+0x68a0>
   18d50:	ldr	r1, [fp, #-8]
   18d54:	ldr	r1, [r1, #12]
   18d58:	vmov	s0, r1
   18d5c:	vcvt.f32.u32	s0, s0
   18d60:	ldr	r1, [fp, #-8]
   18d64:	ldr	r1, [r1, #20]
   18d68:	vldr	s2, [r1]
   18d6c:	ldr	r1, [fp, #-8]
   18d70:	ldr	r1, [r1, #8]
   18d74:	vmov	s4, r1
   18d78:	vcvt.f32.u32	s4, s4
   18d7c:	vmul.f32	s2, s2, s4
   18d80:	vcmpe.f32	s0, s2
   18d84:	vmrs	APSR_nzcv, fpscr
   18d88:	bpl	18e68 <__assert_fail@plt+0x7920>
   18d8c:	ldr	r0, [fp, #-8]
   18d90:	ldr	r0, [r0, #20]
   18d94:	str	r0, [sp, #16]
   18d98:	ldr	r0, [sp, #16]
   18d9c:	ldrb	r0, [r0, #16]
   18da0:	tst	r0, #1
   18da4:	beq	18dcc <__assert_fail@plt+0x7884>
   18da8:	ldr	r0, [fp, #-8]
   18dac:	ldr	r0, [r0, #8]
   18db0:	vmov	s0, r0
   18db4:	vcvt.f32.u32	s0, s0
   18db8:	ldr	r0, [sp, #16]
   18dbc:	vldr	s2, [r0, #4]
   18dc0:	vmul.f32	s0, s0, s2
   18dc4:	vstr	s0, [sp]
   18dc8:	b	18df8 <__assert_fail@plt+0x78b0>
   18dcc:	ldr	r0, [fp, #-8]
   18dd0:	ldr	r0, [r0, #8]
   18dd4:	vmov	s0, r0
   18dd8:	vcvt.f32.u32	s0, s0
   18ddc:	ldr	r0, [sp, #16]
   18de0:	vldr	s2, [r0, #4]
   18de4:	vmul.f32	s0, s0, s2
   18de8:	ldr	r0, [sp, #16]
   18dec:	vldr	s2, [r0, #8]
   18df0:	vmul.f32	s0, s0, s2
   18df4:	vstr	s0, [sp]
   18df8:	vldr	s0, [sp]
   18dfc:	vcvt.u32.f32	s0, s0
   18e00:	vmov	r0, s0
   18e04:	str	r0, [sp, #12]
   18e08:	ldr	r0, [fp, #-8]
   18e0c:	ldr	r1, [sp, #12]
   18e10:	bl	182d0 <__assert_fail@plt+0x6d88>
   18e14:	tst	r0, #1
   18e18:	bne	18e64 <__assert_fail@plt+0x791c>
   18e1c:	ldr	r0, [fp, #-8]
   18e20:	ldr	r0, [r0, #36]	; 0x24
   18e24:	str	r0, [sp, #8]
   18e28:	ldr	r0, [sp, #8]
   18e2c:	movw	r1, #0
   18e30:	cmp	r0, r1
   18e34:	beq	18e58 <__assert_fail@plt+0x7910>
   18e38:	ldr	r0, [sp, #8]
   18e3c:	ldr	r0, [r0, #4]
   18e40:	str	r0, [sp, #4]
   18e44:	ldr	r0, [sp, #8]
   18e48:	bl	13948 <__assert_fail@plt+0x2400>
   18e4c:	ldr	r0, [sp, #4]
   18e50:	str	r0, [sp, #8]
   18e54:	b	18e28 <__assert_fail@plt+0x78e0>
   18e58:	ldr	r0, [fp, #-8]
   18e5c:	movw	r1, #0
   18e60:	str	r1, [r0, #36]	; 0x24
   18e64:	b	18e68 <__assert_fail@plt+0x7920>
   18e68:	b	18e6c <__assert_fail@plt+0x7924>
   18e6c:	b	18e70 <__assert_fail@plt+0x7928>
   18e70:	ldr	r0, [fp, #-16]
   18e74:	str	r0, [fp, #-4]
   18e78:	ldr	r0, [fp, #-4]
   18e7c:	mov	sp, fp
   18e80:	pop	{fp, pc}
   18e84:	push	{fp, lr}
   18e88:	mov	fp, sp
   18e8c:	sub	sp, sp, #8
   18e90:	str	r0, [sp, #4]
   18e94:	str	r1, [sp]
   18e98:	ldr	r0, [sp, #4]
   18e9c:	ldr	r1, [sp]
   18ea0:	bl	18c84 <__assert_fail@plt+0x773c>
   18ea4:	mov	sp, fp
   18ea8:	pop	{fp, pc}
   18eac:	push	{fp, lr}
   18eb0:	mov	fp, sp
   18eb4:	sub	sp, sp, #8
   18eb8:	str	r0, [sp, #4]
   18ebc:	ldr	r0, [sp, #4]
   18ec0:	cmp	r0, #10
   18ec4:	bcs	18ed0 <__assert_fail@plt+0x7988>
   18ec8:	movw	r0, #10
   18ecc:	str	r0, [sp, #4]
   18ed0:	ldr	r0, [sp, #4]
   18ed4:	orr	r0, r0, #1
   18ed8:	str	r0, [sp, #4]
   18edc:	ldr	r0, [sp, #4]
   18ee0:	mvn	r1, #0
   18ee4:	cmp	r1, r0
   18ee8:	movw	r0, #0
   18eec:	str	r0, [sp]
   18ef0:	beq	18f08 <__assert_fail@plt+0x79c0>
   18ef4:	ldr	r0, [sp, #4]
   18ef8:	bl	18f30 <__assert_fail@plt+0x79e8>
   18efc:	mvn	r1, #0
   18f00:	eor	r0, r0, r1
   18f04:	str	r0, [sp]
   18f08:	ldr	r0, [sp]
   18f0c:	tst	r0, #1
   18f10:	beq	18f24 <__assert_fail@plt+0x79dc>
   18f14:	ldr	r0, [sp, #4]
   18f18:	add	r0, r0, #2
   18f1c:	str	r0, [sp, #4]
   18f20:	b	18edc <__assert_fail@plt+0x7994>
   18f24:	ldr	r0, [sp, #4]
   18f28:	mov	sp, fp
   18f2c:	pop	{fp, pc}
   18f30:	sub	sp, sp, #16
   18f34:	str	r0, [sp, #12]
   18f38:	movw	r0, #3
   18f3c:	str	r0, [sp, #8]
   18f40:	ldr	r0, [sp, #8]
   18f44:	ldr	r1, [sp, #8]
   18f48:	mul	r0, r0, r1
   18f4c:	str	r0, [sp, #4]
   18f50:	ldr	r0, [sp, #4]
   18f54:	ldr	r1, [sp, #12]
   18f58:	cmp	r0, r1
   18f5c:	movw	r0, #0
   18f60:	str	r0, [sp]
   18f64:	bcs	18f88 <__assert_fail@plt+0x7a40>
   18f68:	ldr	r0, [sp, #12]
   18f6c:	ldr	r1, [sp, #8]
   18f70:	udiv	r2, r0, r1
   18f74:	mls	r0, r2, r1, r0
   18f78:	cmp	r0, #0
   18f7c:	movw	r0, #0
   18f80:	movne	r0, #1
   18f84:	str	r0, [sp]
   18f88:	ldr	r0, [sp]
   18f8c:	tst	r0, #1
   18f90:	beq	18fc4 <__assert_fail@plt+0x7a7c>
   18f94:	ldr	r0, [sp, #8]
   18f98:	add	r0, r0, #1
   18f9c:	str	r0, [sp, #8]
   18fa0:	ldr	r0, [sp, #8]
   18fa4:	lsl	r0, r0, #2
   18fa8:	ldr	r1, [sp, #4]
   18fac:	add	r0, r1, r0
   18fb0:	str	r0, [sp, #4]
   18fb4:	ldr	r0, [sp, #8]
   18fb8:	add	r0, r0, #1
   18fbc:	str	r0, [sp, #8]
   18fc0:	b	18f50 <__assert_fail@plt+0x7a08>
   18fc4:	ldr	r0, [sp, #12]
   18fc8:	ldr	r1, [sp, #8]
   18fcc:	udiv	r2, r0, r1
   18fd0:	mls	r0, r2, r1, r0
   18fd4:	cmp	r0, #0
   18fd8:	movw	r0, #0
   18fdc:	movne	r0, #1
   18fe0:	tst	r0, #1
   18fe4:	movw	r0, #1
   18fe8:	moveq	r0, #0
   18fec:	cmp	r0, #0
   18ff0:	movw	r0, #0
   18ff4:	movne	r0, #1
   18ff8:	and	r0, r0, #1
   18ffc:	add	sp, sp, #16
   19000:	bx	lr
   19004:	sub	sp, sp, #8
   19008:	str	r0, [sp, #4]
   1900c:	str	r1, [sp]
   19010:	ldr	r0, [sp]
   19014:	movw	r1, #0
   19018:	str	r1, [r0]
   1901c:	ldr	r0, [sp, #4]
   19020:	ldr	r0, [r0, #36]	; 0x24
   19024:	ldr	r1, [sp]
   19028:	str	r0, [r1, #4]
   1902c:	ldr	r0, [sp]
   19030:	ldr	r1, [sp, #4]
   19034:	str	r0, [r1, #36]	; 0x24
   19038:	add	sp, sp, #8
   1903c:	bx	lr
   19040:	sub	sp, sp, #12
   19044:	str	r0, [sp, #8]
   19048:	str	r1, [sp, #4]
   1904c:	ldr	r0, [sp, #8]
   19050:	movw	r1, #1
   19054:	strb	r1, [r0, #28]
   19058:	ldr	r0, [sp, #8]
   1905c:	movw	r1, #0
   19060:	str	r1, [r0, #20]
   19064:	ldr	r0, [sp, #8]
   19068:	str	r1, [r0, #24]
   1906c:	str	r1, [sp]
   19070:	ldr	r0, [sp]
   19074:	cmp	r0, #4
   19078:	bge	190a0 <__assert_fail@plt+0x7b58>
   1907c:	ldr	r0, [sp, #4]
   19080:	ldr	r1, [sp, #8]
   19084:	ldr	r2, [sp]
   19088:	add	r1, r1, r2, lsl #2
   1908c:	str	r0, [r1]
   19090:	ldr	r0, [sp]
   19094:	add	r0, r0, #1
   19098:	str	r0, [sp]
   1909c:	b	19070 <__assert_fail@plt+0x7b28>
   190a0:	ldr	r0, [sp, #4]
   190a4:	ldr	r1, [sp, #8]
   190a8:	str	r0, [r1, #16]
   190ac:	add	sp, sp, #12
   190b0:	bx	lr
   190b4:	sub	sp, sp, #4
   190b8:	str	r0, [sp]
   190bc:	ldr	r0, [sp]
   190c0:	ldrb	r0, [r0, #28]
   190c4:	and	r0, r0, #1
   190c8:	add	sp, sp, #4
   190cc:	bx	lr
   190d0:	sub	sp, sp, #16
   190d4:	str	r0, [sp, #12]
   190d8:	str	r1, [sp, #8]
   190dc:	ldr	r0, [sp, #12]
   190e0:	ldr	r1, [r0, #20]
   190e4:	ldrb	r0, [r0, #28]
   190e8:	mov	r2, #1
   190ec:	bic	r0, r2, r0
   190f0:	add	r0, r1, r0
   190f4:	and	r0, r0, #3
   190f8:	str	r0, [sp, #4]
   190fc:	ldr	r0, [sp, #12]
   19100:	ldr	r1, [sp, #4]
   19104:	ldr	r0, [r0, r1, lsl #2]
   19108:	str	r0, [sp]
   1910c:	ldr	r0, [sp, #8]
   19110:	ldr	r1, [sp, #12]
   19114:	ldr	r2, [sp, #4]
   19118:	add	r1, r1, r2, lsl #2
   1911c:	str	r0, [r1]
   19120:	ldr	r0, [sp, #4]
   19124:	ldr	r1, [sp, #12]
   19128:	str	r0, [r1, #20]
   1912c:	ldr	r0, [sp, #4]
   19130:	ldr	r1, [sp, #12]
   19134:	ldr	r1, [r1, #24]
   19138:	cmp	r0, r1
   1913c:	bne	1916c <__assert_fail@plt+0x7c24>
   19140:	ldr	r0, [sp, #12]
   19144:	ldr	r0, [r0, #24]
   19148:	ldr	r1, [sp, #12]
   1914c:	ldrb	r1, [r1, #28]
   19150:	mvn	r2, #0
   19154:	eor	r1, r1, r2
   19158:	and	r1, r1, #1
   1915c:	add	r0, r0, r1
   19160:	and	r0, r0, #3
   19164:	ldr	r1, [sp, #12]
   19168:	str	r0, [r1, #24]
   1916c:	ldr	r0, [sp, #12]
   19170:	movw	r1, #0
   19174:	strb	r1, [r0, #28]
   19178:	ldr	r0, [sp]
   1917c:	add	sp, sp, #16
   19180:	bx	lr
   19184:	push	{fp, lr}
   19188:	mov	fp, sp
   1918c:	sub	sp, sp, #8
   19190:	str	r0, [sp, #4]
   19194:	ldr	r0, [sp, #4]
   19198:	bl	190b4 <__assert_fail@plt+0x7b6c>
   1919c:	tst	r0, #1
   191a0:	beq	191a8 <__assert_fail@plt+0x7c60>
   191a4:	bl	11500 <abort@plt>
   191a8:	ldr	r0, [sp, #4]
   191ac:	ldr	r1, [r0, #20]
   191b0:	ldr	r0, [r0, r1, lsl #2]
   191b4:	str	r0, [sp]
   191b8:	ldr	r0, [sp, #4]
   191bc:	ldr	r1, [r0, #16]
   191c0:	ldr	r2, [r0, #20]
   191c4:	add	r0, r0, r2, lsl #2
   191c8:	str	r1, [r0]
   191cc:	ldr	r0, [sp, #4]
   191d0:	ldr	r0, [r0, #20]
   191d4:	ldr	r1, [sp, #4]
   191d8:	ldr	r1, [r1, #24]
   191dc:	cmp	r0, r1
   191e0:	bne	191f4 <__assert_fail@plt+0x7cac>
   191e4:	ldr	r0, [sp, #4]
   191e8:	movw	r1, #1
   191ec:	strb	r1, [r0, #28]
   191f0:	b	19210 <__assert_fail@plt+0x7cc8>
   191f4:	ldr	r0, [sp, #4]
   191f8:	ldr	r0, [r0, #20]
   191fc:	add	r0, r0, #4
   19200:	sub	r0, r0, #1
   19204:	and	r0, r0, #3
   19208:	ldr	r1, [sp, #4]
   1920c:	str	r0, [r1, #20]
   19210:	ldr	r0, [sp]
   19214:	mov	sp, fp
   19218:	pop	{fp, pc}
   1921c:	push	{fp, lr}
   19220:	mov	fp, sp
   19224:	sub	sp, sp, #16
   19228:	str	r0, [sp, #8]
   1922c:	str	r1, [sp, #12]
   19230:	str	r2, [sp, #4]
   19234:	ldr	r0, [sp, #4]
   19238:	add	r0, r0, #20
   1923c:	str	r0, [sp]
   19240:	ldr	r0, [sp]
   19244:	mov	r1, #0
   19248:	strb	r1, [r0]
   1924c:	mov	r0, #1
   19250:	cmp	r0, #0
   19254:	bne	192dc <__assert_fail@plt+0x7d94>
   19258:	b	1925c <__assert_fail@plt+0x7d14>
   1925c:	b	19260 <__assert_fail@plt+0x7d18>
   19260:	ldr	r0, [sp, #8]
   19264:	ldr	r1, [sp, #12]
   19268:	mov	r2, #10
   1926c:	mov	r3, #0
   19270:	bl	24564 <__assert_fail@plt+0x1301c>
   19274:	rsb	r2, r2, #48	; 0x30
   19278:	ldr	r3, [sp]
   1927c:	mvn	ip, #0
   19280:	add	lr, r3, ip
   19284:	str	lr, [sp]
   19288:	add	r3, r3, ip
   1928c:	strb	r2, [r3]
   19290:	ldr	r0, [sp, #8]
   19294:	ldr	r1, [sp, #12]
   19298:	mov	r2, #10
   1929c:	mov	r3, #0
   192a0:	bl	24564 <__assert_fail@plt+0x1301c>
   192a4:	str	r1, [sp, #12]
   192a8:	str	r0, [sp, #8]
   192ac:	orr	r0, r0, r1
   192b0:	cmp	r0, #0
   192b4:	bne	19260 <__assert_fail@plt+0x7d18>
   192b8:	b	192bc <__assert_fail@plt+0x7d74>
   192bc:	ldr	r0, [sp]
   192c0:	mvn	r1, #0
   192c4:	add	r2, r0, r1
   192c8:	str	r2, [sp]
   192cc:	add	r0, r0, r1
   192d0:	movw	r1, #45	; 0x2d
   192d4:	strb	r1, [r0]
   192d8:	b	19340 <__assert_fail@plt+0x7df8>
   192dc:	b	192e0 <__assert_fail@plt+0x7d98>
   192e0:	ldr	r0, [sp, #8]
   192e4:	ldr	r1, [sp, #12]
   192e8:	mov	r2, #10
   192ec:	mov	r3, #0
   192f0:	bl	24564 <__assert_fail@plt+0x1301c>
   192f4:	orr	r2, r2, #48	; 0x30
   192f8:	ldr	r3, [sp]
   192fc:	mvn	ip, #0
   19300:	add	lr, r3, ip
   19304:	str	lr, [sp]
   19308:	add	r3, r3, ip
   1930c:	strb	r2, [r3]
   19310:	ldr	r0, [sp, #8]
   19314:	ldr	r1, [sp, #12]
   19318:	mov	r2, #10
   1931c:	mov	r3, #0
   19320:	bl	24564 <__assert_fail@plt+0x1301c>
   19324:	str	r1, [sp, #12]
   19328:	str	r0, [sp, #8]
   1932c:	orr	r0, r0, r1
   19330:	cmp	r0, #0
   19334:	bne	192e0 <__assert_fail@plt+0x7d98>
   19338:	b	1933c <__assert_fail@plt+0x7df4>
   1933c:	b	19340 <__assert_fail@plt+0x7df8>
   19340:	ldr	r0, [sp]
   19344:	mov	sp, fp
   19348:	pop	{fp, pc}
   1934c:	sub	sp, sp, #4
   19350:	push	{fp, lr}
   19354:	mov	fp, sp
   19358:	sub	sp, sp, #20
   1935c:	str	r3, [fp, #8]
   19360:	str	r0, [fp, #-4]
   19364:	str	r1, [fp, #-8]
   19368:	str	r2, [sp, #8]
   1936c:	movw	r0, #0
   19370:	str	r0, [sp, #4]
   19374:	ldr	r0, [sp, #8]
   19378:	and	r0, r0, #64	; 0x40
   1937c:	cmp	r0, #0
   19380:	beq	193a8 <__assert_fail@plt+0x7e60>
   19384:	mov	r0, sp
   19388:	mov	r1, r0
   1938c:	add	r2, fp, #8
   19390:	str	r2, [r1]
   19394:	ldr	r1, [sp]
   19398:	add	r2, r1, #4
   1939c:	str	r2, [sp]
   193a0:	ldr	r1, [r1]
   193a4:	str	r1, [sp, #4]
   193a8:	ldr	r0, [fp, #-4]
   193ac:	ldr	r1, [fp, #-8]
   193b0:	ldr	r2, [sp, #8]
   193b4:	ldr	r3, [sp, #4]
   193b8:	bl	113e0 <openat64@plt>
   193bc:	bl	1bc9c <__assert_fail@plt+0xa754>
   193c0:	mov	sp, fp
   193c4:	pop	{fp, lr}
   193c8:	add	sp, sp, #4
   193cc:	bx	lr
   193d0:	push	{fp, lr}
   193d4:	mov	fp, sp
   193d8:	sub	sp, sp, #48	; 0x30
   193dc:	ldr	ip, [pc, #176]	; 19494 <__assert_fail@plt+0x7f4c>
   193e0:	str	r0, [fp, #-8]
   193e4:	str	r1, [fp, #-12]
   193e8:	str	r2, [fp, #-16]
   193ec:	str	r3, [fp, #-20]	; 0xffffffec
   193f0:	ldr	r0, [fp, #-16]
   193f4:	orr	r0, r0, ip
   193f8:	str	r0, [sp, #24]
   193fc:	ldr	r0, [fp, #-8]
   19400:	ldr	r1, [fp, #-12]
   19404:	ldr	r2, [sp, #24]
   19408:	bl	1934c <__assert_fail@plt+0x7e04>
   1940c:	str	r0, [sp, #20]
   19410:	ldr	r0, [sp, #20]
   19414:	cmp	r0, #0
   19418:	bge	19428 <__assert_fail@plt+0x7ee0>
   1941c:	movw	r0, #0
   19420:	str	r0, [fp, #-4]
   19424:	b	19488 <__assert_fail@plt+0x7f40>
   19428:	ldr	r0, [sp, #20]
   1942c:	bl	11494 <fdopendir@plt>
   19430:	str	r0, [sp, #16]
   19434:	ldr	r0, [sp, #16]
   19438:	movw	r1, #0
   1943c:	cmp	r0, r1
   19440:	beq	19454 <__assert_fail@plt+0x7f0c>
   19444:	ldr	r0, [sp, #20]
   19448:	ldr	r1, [fp, #-20]	; 0xffffffec
   1944c:	str	r0, [r1]
   19450:	b	19480 <__assert_fail@plt+0x7f38>
   19454:	bl	11404 <__errno_location@plt>
   19458:	ldr	r0, [r0]
   1945c:	str	r0, [sp, #12]
   19460:	ldr	r0, [sp, #20]
   19464:	bl	1150c <close@plt>
   19468:	ldr	r1, [sp, #12]
   1946c:	str	r0, [sp, #8]
   19470:	str	r1, [sp, #4]
   19474:	bl	11404 <__errno_location@plt>
   19478:	ldr	r1, [sp, #4]
   1947c:	str	r1, [r0]
   19480:	ldr	r0, [sp, #16]
   19484:	str	r0, [fp, #-4]
   19488:	ldr	r0, [fp, #-4]
   1948c:	mov	sp, fp
   19490:	pop	{fp, pc}
   19494:	andeq	r4, r8, r0, lsl #18
   19498:	push	{fp, lr}
   1949c:	mov	fp, sp
   194a0:	sub	sp, sp, #24
   194a4:	str	r0, [fp, #-4]
   194a8:	ldr	r0, [fp, #-4]
   194ac:	movw	r1, #0
   194b0:	cmp	r0, r1
   194b4:	bne	194d8 <__assert_fail@plt+0x7f90>
   194b8:	movw	r0, #24984	; 0x6198
   194bc:	movt	r0, #3
   194c0:	ldr	r1, [r0]
   194c4:	movw	r0, #22780	; 0x58fc
   194c8:	movt	r0, #2
   194cc:	bl	114e8 <fputs@plt>
   194d0:	str	r0, [sp, #8]
   194d4:	bl	11500 <abort@plt>
   194d8:	ldr	r0, [fp, #-4]
   194dc:	movw	r1, #47	; 0x2f
   194e0:	bl	11470 <strrchr@plt>
   194e4:	str	r0, [fp, #-8]
   194e8:	ldr	r0, [fp, #-8]
   194ec:	movw	r1, #0
   194f0:	cmp	r0, r1
   194f4:	beq	19508 <__assert_fail@plt+0x7fc0>
   194f8:	ldr	r0, [fp, #-8]
   194fc:	add	r0, r0, #1
   19500:	str	r0, [sp, #4]
   19504:	b	19510 <__assert_fail@plt+0x7fc8>
   19508:	ldr	r0, [fp, #-4]
   1950c:	str	r0, [sp, #4]
   19510:	ldr	r0, [sp, #4]
   19514:	str	r0, [sp, #12]
   19518:	ldr	r0, [sp, #12]
   1951c:	ldr	r1, [fp, #-4]
   19520:	sub	r0, r0, r1
   19524:	cmp	r0, #7
   19528:	blt	19594 <__assert_fail@plt+0x804c>
   1952c:	ldr	r0, [sp, #12]
   19530:	mvn	r1, #6
   19534:	add	r0, r0, r1
   19538:	movw	r1, #22836	; 0x5934
   1953c:	movt	r1, #2
   19540:	movw	r2, #7
   19544:	bl	114f4 <strncmp@plt>
   19548:	cmp	r0, #0
   1954c:	bne	19594 <__assert_fail@plt+0x804c>
   19550:	ldr	r0, [sp, #12]
   19554:	str	r0, [fp, #-4]
   19558:	ldr	r0, [sp, #12]
   1955c:	movw	r1, #22844	; 0x593c
   19560:	movt	r1, #2
   19564:	movw	r2, #3
   19568:	bl	114f4 <strncmp@plt>
   1956c:	cmp	r0, #0
   19570:	bne	19590 <__assert_fail@plt+0x8048>
   19574:	ldr	r0, [sp, #12]
   19578:	add	r0, r0, #3
   1957c:	str	r0, [fp, #-4]
   19580:	ldr	r0, [fp, #-4]
   19584:	movw	r1, #24968	; 0x6188
   19588:	movt	r1, #3
   1958c:	str	r0, [r1]
   19590:	b	19594 <__assert_fail@plt+0x804c>
   19594:	ldr	r0, [fp, #-4]
   19598:	movw	r1, #25032	; 0x61c8
   1959c:	movt	r1, #3
   195a0:	str	r0, [r1]
   195a4:	ldr	r0, [fp, #-4]
   195a8:	movw	r1, #24972	; 0x618c
   195ac:	movt	r1, #3
   195b0:	str	r0, [r1]
   195b4:	mov	sp, fp
   195b8:	pop	{fp, pc}
   195bc:	push	{fp, lr}
   195c0:	mov	fp, sp
   195c4:	sub	sp, sp, #24
   195c8:	str	r0, [fp, #-4]
   195cc:	bl	11404 <__errno_location@plt>
   195d0:	ldr	r0, [r0]
   195d4:	str	r0, [fp, #-8]
   195d8:	ldr	r0, [fp, #-4]
   195dc:	movw	r1, #0
   195e0:	cmp	r0, r1
   195e4:	beq	195f4 <__assert_fail@plt+0x80ac>
   195e8:	ldr	r0, [fp, #-4]
   195ec:	str	r0, [sp, #8]
   195f0:	b	19604 <__assert_fail@plt+0x80bc>
   195f4:	movw	r0, #25036	; 0x61cc
   195f8:	movt	r0, #3
   195fc:	str	r0, [sp, #8]
   19600:	b	19604 <__assert_fail@plt+0x80bc>
   19604:	ldr	r0, [sp, #8]
   19608:	movw	r1, #48	; 0x30
   1960c:	bl	1f7d8 <__assert_fail@plt+0xe290>
   19610:	str	r0, [sp, #12]
   19614:	ldr	r0, [fp, #-8]
   19618:	str	r0, [sp, #4]
   1961c:	bl	11404 <__errno_location@plt>
   19620:	ldr	r1, [sp, #4]
   19624:	str	r1, [r0]
   19628:	ldr	r0, [sp, #12]
   1962c:	mov	sp, fp
   19630:	pop	{fp, pc}
   19634:	sub	sp, sp, #8
   19638:	str	r0, [sp, #4]
   1963c:	ldr	r0, [sp, #4]
   19640:	movw	r1, #0
   19644:	cmp	r0, r1
   19648:	beq	19658 <__assert_fail@plt+0x8110>
   1964c:	ldr	r0, [sp, #4]
   19650:	str	r0, [sp]
   19654:	b	19668 <__assert_fail@plt+0x8120>
   19658:	movw	r0, #25036	; 0x61cc
   1965c:	movt	r0, #3
   19660:	str	r0, [sp]
   19664:	b	19668 <__assert_fail@plt+0x8120>
   19668:	ldr	r0, [sp]
   1966c:	ldr	r0, [r0]
   19670:	add	sp, sp, #8
   19674:	bx	lr
   19678:	sub	sp, sp, #16
   1967c:	str	r0, [sp, #12]
   19680:	str	r1, [sp, #8]
   19684:	ldr	r0, [sp, #8]
   19688:	ldr	r1, [sp, #12]
   1968c:	movw	r2, #0
   19690:	cmp	r1, r2
   19694:	str	r0, [sp, #4]
   19698:	beq	196a8 <__assert_fail@plt+0x8160>
   1969c:	ldr	r0, [sp, #12]
   196a0:	str	r0, [sp]
   196a4:	b	196b8 <__assert_fail@plt+0x8170>
   196a8:	movw	r0, #25036	; 0x61cc
   196ac:	movt	r0, #3
   196b0:	str	r0, [sp]
   196b4:	b	196b8 <__assert_fail@plt+0x8170>
   196b8:	ldr	r0, [sp]
   196bc:	ldr	r1, [sp, #4]
   196c0:	str	r1, [r0]
   196c4:	add	sp, sp, #16
   196c8:	bx	lr
   196cc:	sub	sp, sp, #32
   196d0:	str	r0, [sp, #28]
   196d4:	strb	r1, [sp, #27]
   196d8:	str	r2, [sp, #20]
   196dc:	ldrb	r0, [sp, #27]
   196e0:	strb	r0, [sp, #19]
   196e4:	ldr	r0, [sp, #28]
   196e8:	movw	r1, #0
   196ec:	cmp	r0, r1
   196f0:	beq	19700 <__assert_fail@plt+0x81b8>
   196f4:	ldr	r0, [sp, #28]
   196f8:	str	r0, [sp]
   196fc:	b	19710 <__assert_fail@plt+0x81c8>
   19700:	movw	r0, #25036	; 0x61cc
   19704:	movt	r0, #3
   19708:	str	r0, [sp]
   1970c:	b	19710 <__assert_fail@plt+0x81c8>
   19710:	ldr	r0, [sp]
   19714:	add	r0, r0, #8
   19718:	ldrb	r1, [sp, #19]
   1971c:	lsr	r1, r1, #5
   19720:	add	r0, r0, r1, lsl #2
   19724:	str	r0, [sp, #12]
   19728:	ldrb	r0, [sp, #19]
   1972c:	and	r0, r0, #31
   19730:	str	r0, [sp, #8]
   19734:	ldr	r0, [sp, #12]
   19738:	ldr	r0, [r0]
   1973c:	ldr	r1, [sp, #8]
   19740:	lsr	r0, r0, r1
   19744:	and	r0, r0, #1
   19748:	str	r0, [sp, #4]
   1974c:	ldr	r0, [sp, #20]
   19750:	and	r0, r0, #1
   19754:	ldr	r1, [sp, #4]
   19758:	eor	r0, r0, r1
   1975c:	ldr	r1, [sp, #8]
   19760:	lsl	r0, r0, r1
   19764:	ldr	r1, [sp, #12]
   19768:	ldr	r2, [r1]
   1976c:	eor	r0, r2, r0
   19770:	str	r0, [r1]
   19774:	ldr	r0, [sp, #4]
   19778:	add	sp, sp, #32
   1977c:	bx	lr
   19780:	sub	sp, sp, #12
   19784:	str	r0, [sp, #8]
   19788:	str	r1, [sp, #4]
   1978c:	ldr	r0, [sp, #8]
   19790:	movw	r1, #0
   19794:	cmp	r0, r1
   19798:	bne	197a8 <__assert_fail@plt+0x8260>
   1979c:	movw	r0, #25036	; 0x61cc
   197a0:	movt	r0, #3
   197a4:	str	r0, [sp, #8]
   197a8:	ldr	r0, [sp, #8]
   197ac:	ldr	r0, [r0, #4]
   197b0:	str	r0, [sp]
   197b4:	ldr	r0, [sp, #4]
   197b8:	ldr	r1, [sp, #8]
   197bc:	str	r0, [r1, #4]
   197c0:	ldr	r0, [sp]
   197c4:	add	sp, sp, #12
   197c8:	bx	lr
   197cc:	push	{fp, lr}
   197d0:	mov	fp, sp
   197d4:	sub	sp, sp, #16
   197d8:	str	r0, [fp, #-4]
   197dc:	str	r1, [sp, #8]
   197e0:	str	r2, [sp, #4]
   197e4:	ldr	r0, [fp, #-4]
   197e8:	movw	r1, #0
   197ec:	cmp	r0, r1
   197f0:	bne	19800 <__assert_fail@plt+0x82b8>
   197f4:	movw	r0, #25036	; 0x61cc
   197f8:	movt	r0, #3
   197fc:	str	r0, [fp, #-4]
   19800:	ldr	r0, [fp, #-4]
   19804:	movw	r1, #10
   19808:	str	r1, [r0]
   1980c:	ldr	r0, [sp, #8]
   19810:	movw	r1, #0
   19814:	cmp	r0, r1
   19818:	beq	1982c <__assert_fail@plt+0x82e4>
   1981c:	ldr	r0, [sp, #4]
   19820:	movw	r1, #0
   19824:	cmp	r0, r1
   19828:	bne	19830 <__assert_fail@plt+0x82e8>
   1982c:	bl	11500 <abort@plt>
   19830:	ldr	r0, [sp, #8]
   19834:	ldr	r1, [fp, #-4]
   19838:	str	r0, [r1, #40]	; 0x28
   1983c:	ldr	r0, [sp, #4]
   19840:	ldr	r1, [fp, #-4]
   19844:	str	r0, [r1, #44]	; 0x2c
   19848:	mov	sp, fp
   1984c:	pop	{fp, pc}
   19850:	push	{r4, r5, r6, sl, fp, lr}
   19854:	add	fp, sp, #16
   19858:	sub	sp, sp, #56	; 0x38
   1985c:	ldr	ip, [fp, #8]
   19860:	str	r0, [fp, #-20]	; 0xffffffec
   19864:	str	r1, [fp, #-24]	; 0xffffffe8
   19868:	str	r2, [fp, #-28]	; 0xffffffe4
   1986c:	str	r3, [fp, #-32]	; 0xffffffe0
   19870:	ldr	r0, [fp, #8]
   19874:	movw	r1, #0
   19878:	cmp	r0, r1
   1987c:	beq	1988c <__assert_fail@plt+0x8344>
   19880:	ldr	r0, [fp, #8]
   19884:	str	r0, [sp, #24]
   19888:	b	1989c <__assert_fail@plt+0x8354>
   1988c:	movw	r0, #25036	; 0x61cc
   19890:	movt	r0, #3
   19894:	str	r0, [sp, #24]
   19898:	b	1989c <__assert_fail@plt+0x8354>
   1989c:	ldr	r0, [sp, #24]
   198a0:	str	r0, [sp, #36]	; 0x24
   198a4:	bl	11404 <__errno_location@plt>
   198a8:	ldr	r0, [r0]
   198ac:	str	r0, [sp, #32]
   198b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   198b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   198b8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   198bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   198c0:	ldr	ip, [sp, #36]	; 0x24
   198c4:	ldr	ip, [ip]
   198c8:	ldr	lr, [sp, #36]	; 0x24
   198cc:	ldr	lr, [lr, #4]
   198d0:	ldr	r4, [sp, #36]	; 0x24
   198d4:	add	r4, r4, #8
   198d8:	ldr	r5, [sp, #36]	; 0x24
   198dc:	ldr	r5, [r5, #40]	; 0x28
   198e0:	ldr	r6, [sp, #36]	; 0x24
   198e4:	ldr	r6, [r6, #44]	; 0x2c
   198e8:	str	ip, [sp]
   198ec:	str	lr, [sp, #4]
   198f0:	str	r4, [sp, #8]
   198f4:	str	r5, [sp, #12]
   198f8:	str	r6, [sp, #16]
   198fc:	bl	19924 <__assert_fail@plt+0x83dc>
   19900:	str	r0, [sp, #28]
   19904:	ldr	r0, [sp, #32]
   19908:	str	r0, [sp, #20]
   1990c:	bl	11404 <__errno_location@plt>
   19910:	ldr	r1, [sp, #20]
   19914:	str	r1, [r0]
   19918:	ldr	r0, [sp, #28]
   1991c:	sub	sp, fp, #16
   19920:	pop	{r4, r5, r6, sl, fp, pc}
   19924:	push	{r4, r5, r6, sl, fp, lr}
   19928:	add	fp, sp, #16
   1992c:	sub	sp, sp, #160	; 0xa0
   19930:	ldr	ip, [fp, #24]
   19934:	ldr	lr, [fp, #20]
   19938:	ldr	r4, [fp, #16]
   1993c:	ldr	r5, [fp, #12]
   19940:	ldr	r6, [fp, #8]
   19944:	str	r0, [fp, #-24]	; 0xffffffe8
   19948:	str	r1, [fp, #-28]	; 0xffffffe4
   1994c:	str	r2, [fp, #-32]	; 0xffffffe0
   19950:	str	r3, [fp, #-36]	; 0xffffffdc
   19954:	movw	r0, #0
   19958:	str	r0, [fp, #-44]	; 0xffffffd4
   1995c:	str	r0, [fp, #-48]	; 0xffffffd0
   19960:	str	r0, [fp, #-52]	; 0xffffffcc
   19964:	str	r0, [fp, #-56]	; 0xffffffc8
   19968:	movw	r0, #0
   1996c:	strb	r0, [fp, #-57]	; 0xffffffc7
   19970:	str	ip, [sp, #72]	; 0x48
   19974:	str	lr, [sp, #68]	; 0x44
   19978:	str	r4, [sp, #64]	; 0x40
   1997c:	str	r5, [sp, #60]	; 0x3c
   19980:	str	r6, [sp, #56]	; 0x38
   19984:	bl	11314 <__ctype_get_mb_cur_max@plt>
   19988:	cmp	r0, #1
   1998c:	movw	r0, #0
   19990:	moveq	r0, #1
   19994:	and	r0, r0, #1
   19998:	strb	r0, [fp, #-58]	; 0xffffffc6
   1999c:	ldr	r0, [fp, #12]
   199a0:	and	r0, r0, #2
   199a4:	cmp	r0, #0
   199a8:	movw	r0, #0
   199ac:	movne	r0, #1
   199b0:	and	r0, r0, #1
   199b4:	strb	r0, [fp, #-59]	; 0xffffffc5
   199b8:	movw	r0, #0
   199bc:	strb	r0, [fp, #-60]	; 0xffffffc4
   199c0:	strb	r0, [fp, #-61]	; 0xffffffc3
   199c4:	movw	r0, #1
   199c8:	strb	r0, [fp, #-62]	; 0xffffffc2
   199cc:	ldr	r0, [fp, #8]
   199d0:	cmp	r0, #10
   199d4:	str	r0, [sp, #52]	; 0x34
   199d8:	bhi	19c00 <__assert_fail@plt+0x86b8>
   199dc:	add	r0, pc, #8
   199e0:	ldr	r1, [sp, #52]	; 0x34
   199e4:	ldr	r0, [r0, r1, lsl #2]
   199e8:	mov	pc, r0
   199ec:	strdeq	r9, [r1], -r4
   199f0:	andeq	r9, r1, r0, ror fp
   199f4:	muleq	r1, r0, fp
   199f8:	andeq	r9, r1, r8, ror #22
   199fc:	andeq	r9, r1, r8, ror fp
   19a00:	andeq	r9, r1, r8, lsr #20
   19a04:	andeq	r9, r1, r8, lsl sl
   19a08:	andeq	r9, r1, ip, lsl #21
   19a0c:	andeq	r9, r1, r0, lsr #21
   19a10:	andeq	r9, r1, r0, lsr #21
   19a14:	andeq	r9, r1, r0, lsr #21
   19a18:	movw	r0, #5
   19a1c:	str	r0, [fp, #8]
   19a20:	movw	r0, #1
   19a24:	strb	r0, [fp, #-59]	; 0xffffffc5
   19a28:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19a2c:	tst	r0, #1
   19a30:	bne	19a6c <__assert_fail@plt+0x8524>
   19a34:	b	19a38 <__assert_fail@plt+0x84f0>
   19a38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19a40:	cmp	r0, r1
   19a44:	bcs	19a5c <__assert_fail@plt+0x8514>
   19a48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a4c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19a50:	add	r0, r0, r1
   19a54:	movw	r1, #34	; 0x22
   19a58:	strb	r1, [r0]
   19a5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a60:	add	r0, r0, #1
   19a64:	str	r0, [fp, #-44]	; 0xffffffd4
   19a68:	b	19a6c <__assert_fail@plt+0x8524>
   19a6c:	movw	r0, #1
   19a70:	strb	r0, [fp, #-57]	; 0xffffffc7
   19a74:	movw	r0, #22924	; 0x598c
   19a78:	movt	r0, #2
   19a7c:	str	r0, [fp, #-52]	; 0xffffffcc
   19a80:	movw	r0, #1
   19a84:	str	r0, [fp, #-56]	; 0xffffffc8
   19a88:	b	19c04 <__assert_fail@plt+0x86bc>
   19a8c:	movw	r0, #1
   19a90:	strb	r0, [fp, #-57]	; 0xffffffc7
   19a94:	movw	r0, #0
   19a98:	strb	r0, [fp, #-59]	; 0xffffffc5
   19a9c:	b	19c04 <__assert_fail@plt+0x86bc>
   19aa0:	ldr	r0, [fp, #8]
   19aa4:	cmp	r0, #10
   19aa8:	beq	19ad4 <__assert_fail@plt+0x858c>
   19aac:	ldr	r1, [fp, #8]
   19ab0:	movw	r0, #22926	; 0x598e
   19ab4:	movt	r0, #2
   19ab8:	bl	1bb18 <__assert_fail@plt+0xa5d0>
   19abc:	str	r0, [fp, #20]
   19ac0:	ldr	r1, [fp, #8]
   19ac4:	movw	r0, #22928	; 0x5990
   19ac8:	movt	r0, #2
   19acc:	bl	1bb18 <__assert_fail@plt+0xa5d0>
   19ad0:	str	r0, [fp, #24]
   19ad4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19ad8:	tst	r0, #1
   19adc:	bne	19b48 <__assert_fail@plt+0x8600>
   19ae0:	ldr	r0, [fp, #20]
   19ae4:	str	r0, [fp, #-52]	; 0xffffffcc
   19ae8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19aec:	ldrsb	r0, [r0]
   19af0:	cmp	r0, #0
   19af4:	beq	19b44 <__assert_fail@plt+0x85fc>
   19af8:	b	19afc <__assert_fail@plt+0x85b4>
   19afc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19b00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19b04:	cmp	r0, r1
   19b08:	bcs	19b24 <__assert_fail@plt+0x85dc>
   19b0c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19b10:	ldrb	r0, [r0]
   19b14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19b18:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19b1c:	add	r1, r1, r2
   19b20:	strb	r0, [r1]
   19b24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19b28:	add	r0, r0, #1
   19b2c:	str	r0, [fp, #-44]	; 0xffffffd4
   19b30:	b	19b34 <__assert_fail@plt+0x85ec>
   19b34:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19b38:	add	r0, r0, #1
   19b3c:	str	r0, [fp, #-52]	; 0xffffffcc
   19b40:	b	19ae8 <__assert_fail@plt+0x85a0>
   19b44:	b	19b48 <__assert_fail@plt+0x8600>
   19b48:	movw	r0, #1
   19b4c:	strb	r0, [fp, #-57]	; 0xffffffc7
   19b50:	ldr	r0, [fp, #24]
   19b54:	str	r0, [fp, #-52]	; 0xffffffcc
   19b58:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19b5c:	bl	113c8 <strlen@plt>
   19b60:	str	r0, [fp, #-56]	; 0xffffffc8
   19b64:	b	19c04 <__assert_fail@plt+0x86bc>
   19b68:	movw	r0, #1
   19b6c:	strb	r0, [fp, #-57]	; 0xffffffc7
   19b70:	movw	r0, #1
   19b74:	strb	r0, [fp, #-59]	; 0xffffffc5
   19b78:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19b7c:	tst	r0, #1
   19b80:	bne	19b8c <__assert_fail@plt+0x8644>
   19b84:	movw	r0, #1
   19b88:	strb	r0, [fp, #-57]	; 0xffffffc7
   19b8c:	b	19b90 <__assert_fail@plt+0x8648>
   19b90:	movw	r0, #2
   19b94:	str	r0, [fp, #8]
   19b98:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19b9c:	tst	r0, #1
   19ba0:	bne	19bdc <__assert_fail@plt+0x8694>
   19ba4:	b	19ba8 <__assert_fail@plt+0x8660>
   19ba8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19bac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19bb0:	cmp	r0, r1
   19bb4:	bcs	19bcc <__assert_fail@plt+0x8684>
   19bb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bbc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19bc0:	add	r0, r0, r1
   19bc4:	movw	r1, #39	; 0x27
   19bc8:	strb	r1, [r0]
   19bcc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19bd0:	add	r0, r0, #1
   19bd4:	str	r0, [fp, #-44]	; 0xffffffd4
   19bd8:	b	19bdc <__assert_fail@plt+0x8694>
   19bdc:	movw	r0, #22928	; 0x5990
   19be0:	movt	r0, #2
   19be4:	str	r0, [fp, #-52]	; 0xffffffcc
   19be8:	movw	r0, #1
   19bec:	str	r0, [fp, #-56]	; 0xffffffc8
   19bf0:	b	19c04 <__assert_fail@plt+0x86bc>
   19bf4:	movw	r0, #0
   19bf8:	strb	r0, [fp, #-59]	; 0xffffffc5
   19bfc:	b	19c04 <__assert_fail@plt+0x86bc>
   19c00:	bl	11500 <abort@plt>
   19c04:	movw	r0, #0
   19c08:	str	r0, [fp, #-40]	; 0xffffffd8
   19c0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19c10:	cmn	r0, #1
   19c14:	bne	19c40 <__assert_fail@plt+0x86f8>
   19c18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19c1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19c20:	add	r0, r0, r1
   19c24:	ldrb	r0, [r0]
   19c28:	cmp	r0, #0
   19c2c:	movw	r0, #0
   19c30:	moveq	r0, #1
   19c34:	and	r0, r0, #1
   19c38:	str	r0, [sp, #48]	; 0x30
   19c3c:	b	19c5c <__assert_fail@plt+0x8714>
   19c40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19c44:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19c48:	cmp	r0, r1
   19c4c:	movw	r0, #0
   19c50:	moveq	r0, #1
   19c54:	and	r0, r0, #1
   19c58:	str	r0, [sp, #48]	; 0x30
   19c5c:	ldr	r0, [sp, #48]	; 0x30
   19c60:	cmp	r0, #0
   19c64:	movw	r0, #0
   19c68:	movne	r0, #1
   19c6c:	mvn	r1, #0
   19c70:	eor	r0, r0, r1
   19c74:	tst	r0, #1
   19c78:	beq	1ae64 <__assert_fail@plt+0x991c>
   19c7c:	movw	r0, #0
   19c80:	strb	r0, [fp, #-65]	; 0xffffffbf
   19c84:	strb	r0, [fp, #-66]	; 0xffffffbe
   19c88:	strb	r0, [fp, #-67]	; 0xffffffbd
   19c8c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   19c90:	tst	r0, #1
   19c94:	beq	19d40 <__assert_fail@plt+0x87f8>
   19c98:	ldr	r0, [fp, #8]
   19c9c:	cmp	r0, #2
   19ca0:	beq	19d40 <__assert_fail@plt+0x87f8>
   19ca4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19ca8:	cmp	r0, #0
   19cac:	beq	19d40 <__assert_fail@plt+0x87f8>
   19cb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19cb4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   19cb8:	add	r0, r0, r1
   19cbc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19cc0:	cmn	r1, #1
   19cc4:	str	r0, [sp, #44]	; 0x2c
   19cc8:	bne	19cf0 <__assert_fail@plt+0x87a8>
   19ccc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19cd0:	movw	r1, #1
   19cd4:	cmp	r1, r0
   19cd8:	bcs	19cf0 <__assert_fail@plt+0x87a8>
   19cdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19ce0:	bl	113c8 <strlen@plt>
   19ce4:	str	r0, [fp, #-36]	; 0xffffffdc
   19ce8:	str	r0, [sp, #40]	; 0x28
   19cec:	b	19cf8 <__assert_fail@plt+0x87b0>
   19cf0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19cf4:	str	r0, [sp, #40]	; 0x28
   19cf8:	ldr	r0, [sp, #40]	; 0x28
   19cfc:	ldr	r1, [sp, #44]	; 0x2c
   19d00:	cmp	r1, r0
   19d04:	bhi	19d40 <__assert_fail@plt+0x87f8>
   19d08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19d0c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19d10:	add	r0, r0, r1
   19d14:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19d18:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19d1c:	bl	112b4 <memcmp@plt>
   19d20:	cmp	r0, #0
   19d24:	bne	19d40 <__assert_fail@plt+0x87f8>
   19d28:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19d2c:	tst	r0, #1
   19d30:	beq	19d38 <__assert_fail@plt+0x87f0>
   19d34:	b	1afe4 <__assert_fail@plt+0x9a9c>
   19d38:	movw	r0, #1
   19d3c:	strb	r0, [fp, #-65]	; 0xffffffbf
   19d40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19d44:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19d48:	ldrb	r0, [r0, r1]
   19d4c:	strb	r0, [fp, #-63]	; 0xffffffc1
   19d50:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   19d54:	mov	r1, r0
   19d58:	cmp	r0, #126	; 0x7e
   19d5c:	str	r1, [sp, #36]	; 0x24
   19d60:	bhi	1a5d0 <__assert_fail@plt+0x9088>
   19d64:	add	r0, pc, #8
   19d68:	ldr	r1, [sp, #36]	; 0x24
   19d6c:	ldr	r0, [r0, r1, lsl #2]
   19d70:	mov	pc, r0
   19d74:	andeq	r9, r1, r0, ror pc
   19d78:	ldrdeq	sl, [r1], -r0
   19d7c:	ldrdeq	sl, [r1], -r0
   19d80:	ldrdeq	sl, [r1], -r0
   19d84:	ldrdeq	sl, [r1], -r0
   19d88:	ldrdeq	sl, [r1], -r0
   19d8c:	ldrdeq	sl, [r1], -r0
   19d90:	andeq	sl, r1, r8, ror r3
   19d94:	andeq	sl, r1, r4, lsl #7
   19d98:			; <UNDEFINED> instruction: 0x0001a3b4
   19d9c:	muleq	r1, ip, r3
   19da0:	andeq	sl, r1, r0, asr #7
   19da4:	muleq	r1, r0, r3
   19da8:	andeq	sl, r1, r8, lsr #7
   19dac:	ldrdeq	sl, [r1], -r0
   19db0:	ldrdeq	sl, [r1], -r0
   19db4:	ldrdeq	sl, [r1], -r0
   19db8:	ldrdeq	sl, [r1], -r0
   19dbc:	ldrdeq	sl, [r1], -r0
   19dc0:	ldrdeq	sl, [r1], -r0
   19dc4:	ldrdeq	sl, [r1], -r0
   19dc8:	ldrdeq	sl, [r1], -r0
   19dcc:	ldrdeq	sl, [r1], -r0
   19dd0:	ldrdeq	sl, [r1], -r0
   19dd4:	ldrdeq	sl, [r1], -r0
   19dd8:	ldrdeq	sl, [r1], -r0
   19ddc:	ldrdeq	sl, [r1], -r0
   19de0:	ldrdeq	sl, [r1], -r0
   19de4:	ldrdeq	sl, [r1], -r0
   19de8:	ldrdeq	sl, [r1], -r0
   19dec:	ldrdeq	sl, [r1], -r0
   19df0:	ldrdeq	sl, [r1], -r0
   19df4:	andeq	sl, r1, r4, lsr #9
   19df8:	andeq	sl, r1, ip, lsr #9
   19dfc:	andeq	sl, r1, ip, lsr #9
   19e00:	muleq	r1, r0, r4
   19e04:	andeq	sl, r1, ip, lsr #9
   19e08:	andeq	sl, r1, r4, asr #11
   19e0c:	andeq	sl, r1, ip, lsr #9
   19e10:	andeq	sl, r1, ip, asr #9
   19e14:	andeq	sl, r1, ip, lsr #9
   19e18:	andeq	sl, r1, ip, lsr #9
   19e1c:	andeq	sl, r1, ip, lsr #9
   19e20:	andeq	sl, r1, r4, asr #11
   19e24:	andeq	sl, r1, r4, asr #11
   19e28:	andeq	sl, r1, r4, asr #11
   19e2c:	andeq	sl, r1, r4, asr #11
   19e30:	andeq	sl, r1, r4, asr #11
   19e34:	andeq	sl, r1, r4, asr #11
   19e38:	andeq	sl, r1, r4, asr #11
   19e3c:	andeq	sl, r1, r4, asr #11
   19e40:	andeq	sl, r1, r4, asr #11
   19e44:	andeq	sl, r1, r4, asr #11
   19e48:	andeq	sl, r1, r4, asr #11
   19e4c:	andeq	sl, r1, r4, asr #11
   19e50:	andeq	sl, r1, r4, asr #11
   19e54:	andeq	sl, r1, r4, asr #11
   19e58:	andeq	sl, r1, r4, asr #11
   19e5c:	andeq	sl, r1, r4, asr #11
   19e60:	andeq	sl, r1, ip, lsr #9
   19e64:	andeq	sl, r1, ip, lsr #9
   19e68:	andeq	sl, r1, ip, lsr #9
   19e6c:	andeq	sl, r1, ip, lsr #9
   19e70:	andeq	sl, r1, ip, ror r1
   19e74:	ldrdeq	sl, [r1], -r0
   19e78:	andeq	sl, r1, r4, asr #11
   19e7c:	andeq	sl, r1, r4, asr #11
   19e80:	andeq	sl, r1, r4, asr #11
   19e84:	andeq	sl, r1, r4, asr #11
   19e88:	andeq	sl, r1, r4, asr #11
   19e8c:	andeq	sl, r1, r4, asr #11
   19e90:	andeq	sl, r1, r4, asr #11
   19e94:	andeq	sl, r1, r4, asr #11
   19e98:	andeq	sl, r1, r4, asr #11
   19e9c:	andeq	sl, r1, r4, asr #11
   19ea0:	andeq	sl, r1, r4, asr #11
   19ea4:	andeq	sl, r1, r4, asr #11
   19ea8:	andeq	sl, r1, r4, asr #11
   19eac:	andeq	sl, r1, r4, asr #11
   19eb0:	andeq	sl, r1, r4, asr #11
   19eb4:	andeq	sl, r1, r4, asr #11
   19eb8:	andeq	sl, r1, r4, asr #11
   19ebc:	andeq	sl, r1, r4, asr #11
   19ec0:	andeq	sl, r1, r4, asr #11
   19ec4:	andeq	sl, r1, r4, asr #11
   19ec8:	andeq	sl, r1, r4, asr #11
   19ecc:	andeq	sl, r1, r4, asr #11
   19ed0:	andeq	sl, r1, r4, asr #11
   19ed4:	andeq	sl, r1, r4, asr #11
   19ed8:	andeq	sl, r1, r4, asr #11
   19edc:	andeq	sl, r1, r4, asr #11
   19ee0:	andeq	sl, r1, ip, lsr #9
   19ee4:	andeq	sl, r1, ip, asr #7
   19ee8:	andeq	sl, r1, r4, asr #11
   19eec:	andeq	sl, r1, ip, lsr #9
   19ef0:	andeq	sl, r1, r4, asr #11
   19ef4:	andeq	sl, r1, ip, lsr #9
   19ef8:	andeq	sl, r1, r4, asr #11
   19efc:	andeq	sl, r1, r4, asr #11
   19f00:	andeq	sl, r1, r4, asr #11
   19f04:	andeq	sl, r1, r4, asr #11
   19f08:	andeq	sl, r1, r4, asr #11
   19f0c:	andeq	sl, r1, r4, asr #11
   19f10:	andeq	sl, r1, r4, asr #11
   19f14:	andeq	sl, r1, r4, asr #11
   19f18:	andeq	sl, r1, r4, asr #11
   19f1c:	andeq	sl, r1, r4, asr #11
   19f20:	andeq	sl, r1, r4, asr #11
   19f24:	andeq	sl, r1, r4, asr #11
   19f28:	andeq	sl, r1, r4, asr #11
   19f2c:	andeq	sl, r1, r4, asr #11
   19f30:	andeq	sl, r1, r4, asr #11
   19f34:	andeq	sl, r1, r4, asr #11
   19f38:	andeq	sl, r1, r4, asr #11
   19f3c:	andeq	sl, r1, r4, asr #11
   19f40:	andeq	sl, r1, r4, asr #11
   19f44:	andeq	sl, r1, r4, asr #11
   19f48:	andeq	sl, r1, r4, asr #11
   19f4c:	andeq	sl, r1, r4, asr #11
   19f50:	andeq	sl, r1, r4, asr #11
   19f54:	andeq	sl, r1, r4, asr #11
   19f58:	andeq	sl, r1, r4, asr #11
   19f5c:	andeq	sl, r1, r4, asr #11
   19f60:	andeq	sl, r1, ip, asr r4
   19f64:	andeq	sl, r1, ip, lsr #9
   19f68:	andeq	sl, r1, ip, asr r4
   19f6c:	muleq	r1, r0, r4
   19f70:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   19f74:	tst	r0, #1
   19f78:	beq	1a160 <__assert_fail@plt+0x8c18>
   19f7c:	b	19f80 <__assert_fail@plt+0x8a38>
   19f80:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19f84:	tst	r0, #1
   19f88:	beq	19f90 <__assert_fail@plt+0x8a48>
   19f8c:	b	1afe4 <__assert_fail@plt+0x9a9c>
   19f90:	movw	r0, #1
   19f94:	strb	r0, [fp, #-66]	; 0xffffffbe
   19f98:	ldr	r0, [fp, #8]
   19f9c:	cmp	r0, #2
   19fa0:	bne	1a054 <__assert_fail@plt+0x8b0c>
   19fa4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   19fa8:	tst	r0, #1
   19fac:	bne	1a054 <__assert_fail@plt+0x8b0c>
   19fb0:	b	19fb4 <__assert_fail@plt+0x8a6c>
   19fb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19fb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19fbc:	cmp	r0, r1
   19fc0:	bcs	19fd8 <__assert_fail@plt+0x8a90>
   19fc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fc8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19fcc:	add	r0, r0, r1
   19fd0:	movw	r1, #39	; 0x27
   19fd4:	strb	r1, [r0]
   19fd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19fdc:	add	r0, r0, #1
   19fe0:	str	r0, [fp, #-44]	; 0xffffffd4
   19fe4:	b	19fe8 <__assert_fail@plt+0x8aa0>
   19fe8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19fec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19ff0:	cmp	r0, r1
   19ff4:	bcs	1a00c <__assert_fail@plt+0x8ac4>
   19ff8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ffc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a000:	add	r0, r0, r1
   1a004:	movw	r1, #36	; 0x24
   1a008:	strb	r1, [r0]
   1a00c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a010:	add	r0, r0, #1
   1a014:	str	r0, [fp, #-44]	; 0xffffffd4
   1a018:	b	1a01c <__assert_fail@plt+0x8ad4>
   1a01c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a020:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a024:	cmp	r0, r1
   1a028:	bcs	1a040 <__assert_fail@plt+0x8af8>
   1a02c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a030:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a034:	add	r0, r0, r1
   1a038:	movw	r1, #39	; 0x27
   1a03c:	strb	r1, [r0]
   1a040:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a044:	add	r0, r0, #1
   1a048:	str	r0, [fp, #-44]	; 0xffffffd4
   1a04c:	movw	r0, #1
   1a050:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a054:	b	1a058 <__assert_fail@plt+0x8b10>
   1a058:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a05c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a060:	cmp	r0, r1
   1a064:	bcs	1a07c <__assert_fail@plt+0x8b34>
   1a068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a06c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a070:	add	r0, r0, r1
   1a074:	movw	r1, #92	; 0x5c
   1a078:	strb	r1, [r0]
   1a07c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a080:	add	r0, r0, #1
   1a084:	str	r0, [fp, #-44]	; 0xffffffd4
   1a088:	b	1a08c <__assert_fail@plt+0x8b44>
   1a08c:	ldr	r0, [fp, #8]
   1a090:	cmp	r0, #2
   1a094:	beq	1a154 <__assert_fail@plt+0x8c0c>
   1a098:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a09c:	add	r0, r0, #1
   1a0a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a0a4:	cmp	r0, r1
   1a0a8:	bcs	1a154 <__assert_fail@plt+0x8c0c>
   1a0ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a0b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a0b4:	add	r1, r1, #1
   1a0b8:	add	r0, r0, r1
   1a0bc:	ldrb	r0, [r0]
   1a0c0:	movw	r1, #48	; 0x30
   1a0c4:	cmp	r1, r0
   1a0c8:	bgt	1a154 <__assert_fail@plt+0x8c0c>
   1a0cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a0d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a0d4:	add	r1, r1, #1
   1a0d8:	add	r0, r0, r1
   1a0dc:	ldrb	r0, [r0]
   1a0e0:	cmp	r0, #57	; 0x39
   1a0e4:	bgt	1a154 <__assert_fail@plt+0x8c0c>
   1a0e8:	b	1a0ec <__assert_fail@plt+0x8ba4>
   1a0ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a0f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a0f4:	cmp	r0, r1
   1a0f8:	bcs	1a110 <__assert_fail@plt+0x8bc8>
   1a0fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a100:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a104:	add	r0, r0, r1
   1a108:	movw	r1, #48	; 0x30
   1a10c:	strb	r1, [r0]
   1a110:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a114:	add	r0, r0, #1
   1a118:	str	r0, [fp, #-44]	; 0xffffffd4
   1a11c:	b	1a120 <__assert_fail@plt+0x8bd8>
   1a120:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a124:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a128:	cmp	r0, r1
   1a12c:	bcs	1a144 <__assert_fail@plt+0x8bfc>
   1a130:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a134:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a138:	add	r0, r0, r1
   1a13c:	movw	r1, #48	; 0x30
   1a140:	strb	r1, [r0]
   1a144:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a148:	add	r0, r0, #1
   1a14c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a150:	b	1a154 <__assert_fail@plt+0x8c0c>
   1a154:	movw	r0, #48	; 0x30
   1a158:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a15c:	b	1a178 <__assert_fail@plt+0x8c30>
   1a160:	ldr	r0, [fp, #12]
   1a164:	and	r0, r0, #1
   1a168:	cmp	r0, #0
   1a16c:	beq	1a174 <__assert_fail@plt+0x8c2c>
   1a170:	b	1ae54 <__assert_fail@plt+0x990c>
   1a174:	b	1a178 <__assert_fail@plt+0x8c30>
   1a178:	b	1abf0 <__assert_fail@plt+0x96a8>
   1a17c:	ldr	r0, [fp, #8]
   1a180:	cmp	r0, #2
   1a184:	str	r0, [sp, #32]
   1a188:	beq	1a1a0 <__assert_fail@plt+0x8c58>
   1a18c:	b	1a190 <__assert_fail@plt+0x8c48>
   1a190:	ldr	r0, [sp, #32]
   1a194:	cmp	r0, #5
   1a198:	beq	1a1b4 <__assert_fail@plt+0x8c6c>
   1a19c:	b	1a370 <__assert_fail@plt+0x8e28>
   1a1a0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a1a4:	tst	r0, #1
   1a1a8:	beq	1a1b0 <__assert_fail@plt+0x8c68>
   1a1ac:	b	1afe4 <__assert_fail@plt+0x9a9c>
   1a1b0:	b	1a374 <__assert_fail@plt+0x8e2c>
   1a1b4:	ldr	r0, [fp, #12]
   1a1b8:	and	r0, r0, #4
   1a1bc:	cmp	r0, #0
   1a1c0:	beq	1a36c <__assert_fail@plt+0x8e24>
   1a1c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a1c8:	add	r0, r0, #2
   1a1cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a1d0:	cmp	r0, r1
   1a1d4:	bcs	1a36c <__assert_fail@plt+0x8e24>
   1a1d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a1dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a1e0:	add	r1, r1, #1
   1a1e4:	add	r0, r0, r1
   1a1e8:	ldrb	r0, [r0]
   1a1ec:	cmp	r0, #63	; 0x3f
   1a1f0:	bne	1a36c <__assert_fail@plt+0x8e24>
   1a1f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a1f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a1fc:	add	r0, r1, r0
   1a200:	ldrb	r0, [r0, #2]
   1a204:	mov	r1, r0
   1a208:	cmp	r0, #33	; 0x21
   1a20c:	str	r1, [sp, #28]
   1a210:	beq	1a260 <__assert_fail@plt+0x8d18>
   1a214:	b	1a218 <__assert_fail@plt+0x8cd0>
   1a218:	ldr	r0, [sp, #28]
   1a21c:	sub	r1, r0, #39	; 0x27
   1a220:	cmp	r1, #3
   1a224:	bcc	1a260 <__assert_fail@plt+0x8d18>
   1a228:	b	1a22c <__assert_fail@plt+0x8ce4>
   1a22c:	ldr	r0, [sp, #28]
   1a230:	cmp	r0, #45	; 0x2d
   1a234:	beq	1a260 <__assert_fail@plt+0x8d18>
   1a238:	b	1a23c <__assert_fail@plt+0x8cf4>
   1a23c:	ldr	r0, [sp, #28]
   1a240:	cmp	r0, #47	; 0x2f
   1a244:	beq	1a260 <__assert_fail@plt+0x8d18>
   1a248:	b	1a24c <__assert_fail@plt+0x8d04>
   1a24c:	ldr	r0, [sp, #28]
   1a250:	sub	r1, r0, #60	; 0x3c
   1a254:	cmp	r1, #2
   1a258:	bhi	1a364 <__assert_fail@plt+0x8e1c>
   1a25c:	b	1a260 <__assert_fail@plt+0x8d18>
   1a260:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a264:	tst	r0, #1
   1a268:	beq	1a270 <__assert_fail@plt+0x8d28>
   1a26c:	b	1afe4 <__assert_fail@plt+0x9a9c>
   1a270:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a274:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a278:	add	r1, r1, #2
   1a27c:	add	r0, r0, r1
   1a280:	ldrb	r0, [r0]
   1a284:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a288:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a28c:	add	r0, r0, #2
   1a290:	str	r0, [fp, #-40]	; 0xffffffd8
   1a294:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a298:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a29c:	cmp	r0, r1
   1a2a0:	bcs	1a2b8 <__assert_fail@plt+0x8d70>
   1a2a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a2ac:	add	r0, r0, r1
   1a2b0:	movw	r1, #63	; 0x3f
   1a2b4:	strb	r1, [r0]
   1a2b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a2bc:	add	r0, r0, #1
   1a2c0:	str	r0, [fp, #-44]	; 0xffffffd4
   1a2c4:	b	1a2c8 <__assert_fail@plt+0x8d80>
   1a2c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a2cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a2d0:	cmp	r0, r1
   1a2d4:	bcs	1a2ec <__assert_fail@plt+0x8da4>
   1a2d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a2e0:	add	r0, r0, r1
   1a2e4:	movw	r1, #34	; 0x22
   1a2e8:	strb	r1, [r0]
   1a2ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a2f0:	add	r0, r0, #1
   1a2f4:	str	r0, [fp, #-44]	; 0xffffffd4
   1a2f8:	b	1a2fc <__assert_fail@plt+0x8db4>
   1a2fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a300:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a304:	cmp	r0, r1
   1a308:	bcs	1a320 <__assert_fail@plt+0x8dd8>
   1a30c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a310:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a314:	add	r0, r0, r1
   1a318:	movw	r1, #34	; 0x22
   1a31c:	strb	r1, [r0]
   1a320:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a324:	add	r0, r0, #1
   1a328:	str	r0, [fp, #-44]	; 0xffffffd4
   1a32c:	b	1a330 <__assert_fail@plt+0x8de8>
   1a330:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a334:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a338:	cmp	r0, r1
   1a33c:	bcs	1a354 <__assert_fail@plt+0x8e0c>
   1a340:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a344:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a348:	add	r0, r0, r1
   1a34c:	movw	r1, #63	; 0x3f
   1a350:	strb	r1, [r0]
   1a354:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a358:	add	r0, r0, #1
   1a35c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a360:	b	1a368 <__assert_fail@plt+0x8e20>
   1a364:	b	1a368 <__assert_fail@plt+0x8e20>
   1a368:	b	1a36c <__assert_fail@plt+0x8e24>
   1a36c:	b	1a374 <__assert_fail@plt+0x8e2c>
   1a370:	b	1a374 <__assert_fail@plt+0x8e2c>
   1a374:	b	1abf0 <__assert_fail@plt+0x96a8>
   1a378:	movw	r0, #97	; 0x61
   1a37c:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a380:	b	1a440 <__assert_fail@plt+0x8ef8>
   1a384:	movw	r0, #98	; 0x62
   1a388:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a38c:	b	1a440 <__assert_fail@plt+0x8ef8>
   1a390:	movw	r0, #102	; 0x66
   1a394:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a398:	b	1a440 <__assert_fail@plt+0x8ef8>
   1a39c:	movw	r0, #110	; 0x6e
   1a3a0:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a3a4:	b	1a420 <__assert_fail@plt+0x8ed8>
   1a3a8:	movw	r0, #114	; 0x72
   1a3ac:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a3b0:	b	1a420 <__assert_fail@plt+0x8ed8>
   1a3b4:	movw	r0, #116	; 0x74
   1a3b8:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a3bc:	b	1a420 <__assert_fail@plt+0x8ed8>
   1a3c0:	movw	r0, #118	; 0x76
   1a3c4:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a3c8:	b	1a440 <__assert_fail@plt+0x8ef8>
   1a3cc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a3d0:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a3d4:	ldr	r0, [fp, #8]
   1a3d8:	cmp	r0, #2
   1a3dc:	bne	1a3f4 <__assert_fail@plt+0x8eac>
   1a3e0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a3e4:	tst	r0, #1
   1a3e8:	beq	1a3f0 <__assert_fail@plt+0x8ea8>
   1a3ec:	b	1afe4 <__assert_fail@plt+0x9a9c>
   1a3f0:	b	1ad78 <__assert_fail@plt+0x9830>
   1a3f4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a3f8:	tst	r0, #1
   1a3fc:	beq	1a41c <__assert_fail@plt+0x8ed4>
   1a400:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a404:	tst	r0, #1
   1a408:	beq	1a41c <__assert_fail@plt+0x8ed4>
   1a40c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a410:	cmp	r0, #0
   1a414:	beq	1a41c <__assert_fail@plt+0x8ed4>
   1a418:	b	1ad78 <__assert_fail@plt+0x9830>
   1a41c:	b	1a420 <__assert_fail@plt+0x8ed8>
   1a420:	ldr	r0, [fp, #8]
   1a424:	cmp	r0, #2
   1a428:	bne	1a43c <__assert_fail@plt+0x8ef4>
   1a42c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a430:	tst	r0, #1
   1a434:	beq	1a43c <__assert_fail@plt+0x8ef4>
   1a438:	b	1afe4 <__assert_fail@plt+0x9a9c>
   1a43c:	b	1a440 <__assert_fail@plt+0x8ef8>
   1a440:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a444:	tst	r0, #1
   1a448:	beq	1a458 <__assert_fail@plt+0x8f10>
   1a44c:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   1a450:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a454:	b	1ac64 <__assert_fail@plt+0x971c>
   1a458:	b	1abf0 <__assert_fail@plt+0x96a8>
   1a45c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a460:	cmn	r0, #1
   1a464:	bne	1a47c <__assert_fail@plt+0x8f34>
   1a468:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a46c:	ldrb	r0, [r0, #1]
   1a470:	cmp	r0, #0
   1a474:	beq	1a48c <__assert_fail@plt+0x8f44>
   1a478:	b	1a488 <__assert_fail@plt+0x8f40>
   1a47c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a480:	cmp	r0, #1
   1a484:	beq	1a48c <__assert_fail@plt+0x8f44>
   1a488:	b	1abf0 <__assert_fail@plt+0x96a8>
   1a48c:	b	1a490 <__assert_fail@plt+0x8f48>
   1a490:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a494:	cmp	r0, #0
   1a498:	beq	1a4a0 <__assert_fail@plt+0x8f58>
   1a49c:	b	1abf0 <__assert_fail@plt+0x96a8>
   1a4a0:	b	1a4a4 <__assert_fail@plt+0x8f5c>
   1a4a4:	movw	r0, #1
   1a4a8:	strb	r0, [fp, #-67]	; 0xffffffbd
   1a4ac:	ldr	r0, [fp, #8]
   1a4b0:	cmp	r0, #2
   1a4b4:	bne	1a4c8 <__assert_fail@plt+0x8f80>
   1a4b8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a4bc:	tst	r0, #1
   1a4c0:	beq	1a4c8 <__assert_fail@plt+0x8f80>
   1a4c4:	b	1afe4 <__assert_fail@plt+0x9a9c>
   1a4c8:	b	1abf0 <__assert_fail@plt+0x96a8>
   1a4cc:	movw	r0, #1
   1a4d0:	strb	r0, [fp, #-61]	; 0xffffffc3
   1a4d4:	strb	r0, [fp, #-67]	; 0xffffffbd
   1a4d8:	ldr	r0, [fp, #8]
   1a4dc:	cmp	r0, #2
   1a4e0:	bne	1a5c0 <__assert_fail@plt+0x9078>
   1a4e4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a4e8:	tst	r0, #1
   1a4ec:	beq	1a4f4 <__assert_fail@plt+0x8fac>
   1a4f0:	b	1afe4 <__assert_fail@plt+0x9a9c>
   1a4f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a4f8:	cmp	r0, #0
   1a4fc:	beq	1a51c <__assert_fail@plt+0x8fd4>
   1a500:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a504:	cmp	r0, #0
   1a508:	bne	1a51c <__assert_fail@plt+0x8fd4>
   1a50c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a510:	str	r0, [fp, #-48]	; 0xffffffd0
   1a514:	movw	r0, #0
   1a518:	str	r0, [fp, #-28]	; 0xffffffe4
   1a51c:	b	1a520 <__assert_fail@plt+0x8fd8>
   1a520:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a524:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a528:	cmp	r0, r1
   1a52c:	bcs	1a544 <__assert_fail@plt+0x8ffc>
   1a530:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a534:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a538:	add	r0, r0, r1
   1a53c:	movw	r1, #39	; 0x27
   1a540:	strb	r1, [r0]
   1a544:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a548:	add	r0, r0, #1
   1a54c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a550:	b	1a554 <__assert_fail@plt+0x900c>
   1a554:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a558:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a55c:	cmp	r0, r1
   1a560:	bcs	1a578 <__assert_fail@plt+0x9030>
   1a564:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a568:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a56c:	add	r0, r0, r1
   1a570:	movw	r1, #92	; 0x5c
   1a574:	strb	r1, [r0]
   1a578:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a57c:	add	r0, r0, #1
   1a580:	str	r0, [fp, #-44]	; 0xffffffd4
   1a584:	b	1a588 <__assert_fail@plt+0x9040>
   1a588:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a58c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a590:	cmp	r0, r1
   1a594:	bcs	1a5ac <__assert_fail@plt+0x9064>
   1a598:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a59c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a5a0:	add	r0, r0, r1
   1a5a4:	movw	r1, #39	; 0x27
   1a5a8:	strb	r1, [r0]
   1a5ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a5b0:	add	r0, r0, #1
   1a5b4:	str	r0, [fp, #-44]	; 0xffffffd4
   1a5b8:	movw	r0, #0
   1a5bc:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a5c0:	b	1abf0 <__assert_fail@plt+0x96a8>
   1a5c4:	movw	r0, #1
   1a5c8:	strb	r0, [fp, #-67]	; 0xffffffbd
   1a5cc:	b	1abf0 <__assert_fail@plt+0x96a8>
   1a5d0:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   1a5d4:	tst	r0, #1
   1a5d8:	beq	1a618 <__assert_fail@plt+0x90d0>
   1a5dc:	mov	r0, #1
   1a5e0:	str	r0, [fp, #-72]	; 0xffffffb8
   1a5e4:	bl	11398 <__ctype_b_loc@plt>
   1a5e8:	ldr	r0, [r0]
   1a5ec:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1a5f0:	mov	r2, r1
   1a5f4:	add	r0, r0, r1, lsl #1
   1a5f8:	ldrh	r0, [r0]
   1a5fc:	and	r0, r0, #16384	; 0x4000
   1a600:	cmp	r0, #0
   1a604:	movw	r0, #0
   1a608:	movne	r0, #1
   1a60c:	and	r0, r0, #1
   1a610:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a614:	b	1a8a4 <__assert_fail@plt+0x935c>
   1a618:	sub	r0, fp, #84	; 0x54
   1a61c:	movw	r1, #0
   1a620:	and	r1, r1, #255	; 0xff
   1a624:	movw	r2, #8
   1a628:	bl	1141c <memset@plt>
   1a62c:	movw	r0, #0
   1a630:	str	r0, [fp, #-72]	; 0xffffffb8
   1a634:	movw	r0, #1
   1a638:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a63c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a640:	cmn	r0, #1
   1a644:	bne	1a654 <__assert_fail@plt+0x910c>
   1a648:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a64c:	bl	113c8 <strlen@plt>
   1a650:	str	r0, [fp, #-36]	; 0xffffffdc
   1a654:	b	1a658 <__assert_fail@plt+0x9110>
   1a658:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a65c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a660:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a664:	add	r1, r1, r2
   1a668:	add	r1, r0, r1
   1a66c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a670:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a674:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a678:	add	r2, r2, r3
   1a67c:	sub	r2, r0, r2
   1a680:	add	r0, sp, #88	; 0x58
   1a684:	sub	r3, fp, #84	; 0x54
   1a688:	bl	22840 <__assert_fail@plt+0x112f8>
   1a68c:	str	r0, [sp, #84]	; 0x54
   1a690:	ldr	r0, [sp, #84]	; 0x54
   1a694:	cmp	r0, #0
   1a698:	bne	1a6a0 <__assert_fail@plt+0x9158>
   1a69c:	b	1a8a0 <__assert_fail@plt+0x9358>
   1a6a0:	ldr	r0, [sp, #84]	; 0x54
   1a6a4:	cmn	r0, #1
   1a6a8:	bne	1a6b8 <__assert_fail@plt+0x9170>
   1a6ac:	movw	r0, #0
   1a6b0:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a6b4:	b	1a8a0 <__assert_fail@plt+0x9358>
   1a6b8:	ldr	r0, [sp, #84]	; 0x54
   1a6bc:	cmn	r0, #2
   1a6c0:	bne	1a734 <__assert_fail@plt+0x91ec>
   1a6c4:	movw	r0, #0
   1a6c8:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a6cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a6d0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a6d4:	add	r0, r0, r1
   1a6d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a6dc:	cmp	r0, r1
   1a6e0:	movw	r0, #0
   1a6e4:	str	r0, [sp, #24]
   1a6e8:	bcs	1a714 <__assert_fail@plt+0x91cc>
   1a6ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a6f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a6f4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a6f8:	add	r1, r1, r2
   1a6fc:	add	r0, r0, r1
   1a700:	ldrb	r0, [r0]
   1a704:	cmp	r0, #0
   1a708:	movw	r0, #0
   1a70c:	movne	r0, #1
   1a710:	str	r0, [sp, #24]
   1a714:	ldr	r0, [sp, #24]
   1a718:	tst	r0, #1
   1a71c:	beq	1a730 <__assert_fail@plt+0x91e8>
   1a720:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a724:	add	r0, r0, #1
   1a728:	str	r0, [fp, #-72]	; 0xffffffb8
   1a72c:	b	1a6cc <__assert_fail@plt+0x9184>
   1a730:	b	1a8a0 <__assert_fail@plt+0x9358>
   1a734:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a738:	tst	r0, #1
   1a73c:	beq	1a848 <__assert_fail@plt+0x9300>
   1a740:	ldr	r0, [fp, #8]
   1a744:	cmp	r0, #2
   1a748:	bne	1a848 <__assert_fail@plt+0x9300>
   1a74c:	movw	r0, #1
   1a750:	str	r0, [sp, #80]	; 0x50
   1a754:	ldr	r0, [sp, #80]	; 0x50
   1a758:	ldr	r1, [sp, #84]	; 0x54
   1a75c:	cmp	r0, r1
   1a760:	bcs	1a844 <__assert_fail@plt+0x92fc>
   1a764:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a768:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a76c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a770:	add	r1, r1, r2
   1a774:	ldr	r2, [sp, #80]	; 0x50
   1a778:	add	r1, r1, r2
   1a77c:	ldrb	r0, [r0, r1]
   1a780:	sub	r0, r0, #91	; 0x5b
   1a784:	cmp	r0, #33	; 0x21
   1a788:	str	r0, [sp, #20]
   1a78c:	bhi	1a82c <__assert_fail@plt+0x92e4>
   1a790:	add	r0, pc, #8
   1a794:	ldr	r1, [sp, #20]
   1a798:	ldr	r0, [r0, r1, lsl #2]
   1a79c:	mov	pc, r0
   1a7a0:	andeq	sl, r1, r8, lsr #16
   1a7a4:	andeq	sl, r1, r8, lsr #16
   1a7a8:	andeq	sl, r1, ip, lsr #16
   1a7ac:	andeq	sl, r1, r8, lsr #16
   1a7b0:	andeq	sl, r1, ip, lsr #16
   1a7b4:	andeq	sl, r1, r8, lsr #16
   1a7b8:	andeq	sl, r1, ip, lsr #16
   1a7bc:	andeq	sl, r1, ip, lsr #16
   1a7c0:	andeq	sl, r1, ip, lsr #16
   1a7c4:	andeq	sl, r1, ip, lsr #16
   1a7c8:	andeq	sl, r1, ip, lsr #16
   1a7cc:	andeq	sl, r1, ip, lsr #16
   1a7d0:	andeq	sl, r1, ip, lsr #16
   1a7d4:	andeq	sl, r1, ip, lsr #16
   1a7d8:	andeq	sl, r1, ip, lsr #16
   1a7dc:	andeq	sl, r1, ip, lsr #16
   1a7e0:	andeq	sl, r1, ip, lsr #16
   1a7e4:	andeq	sl, r1, ip, lsr #16
   1a7e8:	andeq	sl, r1, ip, lsr #16
   1a7ec:	andeq	sl, r1, ip, lsr #16
   1a7f0:	andeq	sl, r1, ip, lsr #16
   1a7f4:	andeq	sl, r1, ip, lsr #16
   1a7f8:	andeq	sl, r1, ip, lsr #16
   1a7fc:	andeq	sl, r1, ip, lsr #16
   1a800:	andeq	sl, r1, ip, lsr #16
   1a804:	andeq	sl, r1, ip, lsr #16
   1a808:	andeq	sl, r1, ip, lsr #16
   1a80c:	andeq	sl, r1, ip, lsr #16
   1a810:	andeq	sl, r1, ip, lsr #16
   1a814:	andeq	sl, r1, ip, lsr #16
   1a818:	andeq	sl, r1, ip, lsr #16
   1a81c:	andeq	sl, r1, ip, lsr #16
   1a820:	andeq	sl, r1, ip, lsr #16
   1a824:	andeq	sl, r1, r8, lsr #16
   1a828:	b	1afe4 <__assert_fail@plt+0x9a9c>
   1a82c:	b	1a830 <__assert_fail@plt+0x92e8>
   1a830:	b	1a834 <__assert_fail@plt+0x92ec>
   1a834:	ldr	r0, [sp, #80]	; 0x50
   1a838:	add	r0, r0, #1
   1a83c:	str	r0, [sp, #80]	; 0x50
   1a840:	b	1a754 <__assert_fail@plt+0x920c>
   1a844:	b	1a848 <__assert_fail@plt+0x9300>
   1a848:	ldr	r0, [sp, #88]	; 0x58
   1a84c:	bl	112f0 <iswprint@plt>
   1a850:	cmp	r0, #0
   1a854:	bne	1a860 <__assert_fail@plt+0x9318>
   1a858:	movw	r0, #0
   1a85c:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a860:	ldr	r0, [sp, #84]	; 0x54
   1a864:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a868:	add	r0, r1, r0
   1a86c:	str	r0, [fp, #-72]	; 0xffffffb8
   1a870:	b	1a874 <__assert_fail@plt+0x932c>
   1a874:	b	1a878 <__assert_fail@plt+0x9330>
   1a878:	b	1a87c <__assert_fail@plt+0x9334>
   1a87c:	sub	r0, fp, #84	; 0x54
   1a880:	bl	112a8 <mbsinit@plt>
   1a884:	cmp	r0, #0
   1a888:	movw	r0, #0
   1a88c:	movne	r0, #1
   1a890:	mvn	r1, #0
   1a894:	eor	r0, r0, r1
   1a898:	tst	r0, #1
   1a89c:	bne	1a658 <__assert_fail@plt+0x9110>
   1a8a0:	b	1a8a4 <__assert_fail@plt+0x935c>
   1a8a4:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1a8a8:	and	r0, r0, #1
   1a8ac:	strb	r0, [fp, #-67]	; 0xffffffbd
   1a8b0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a8b4:	movw	r1, #1
   1a8b8:	cmp	r1, r0
   1a8bc:	bcc	1a8d8 <__assert_fail@plt+0x9390>
   1a8c0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a8c4:	tst	r0, #1
   1a8c8:	beq	1abec <__assert_fail@plt+0x96a4>
   1a8cc:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1a8d0:	tst	r0, #1
   1a8d4:	bne	1abec <__assert_fail@plt+0x96a4>
   1a8d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a8dc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a8e0:	add	r0, r0, r1
   1a8e4:	str	r0, [sp, #76]	; 0x4c
   1a8e8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a8ec:	tst	r0, #1
   1a8f0:	beq	1aaa0 <__assert_fail@plt+0x9558>
   1a8f4:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1a8f8:	tst	r0, #1
   1a8fc:	bne	1aaa0 <__assert_fail@plt+0x9558>
   1a900:	b	1a904 <__assert_fail@plt+0x93bc>
   1a904:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a908:	tst	r0, #1
   1a90c:	beq	1a914 <__assert_fail@plt+0x93cc>
   1a910:	b	1afe4 <__assert_fail@plt+0x9a9c>
   1a914:	movw	r0, #1
   1a918:	strb	r0, [fp, #-66]	; 0xffffffbe
   1a91c:	ldr	r0, [fp, #8]
   1a920:	cmp	r0, #2
   1a924:	bne	1a9d8 <__assert_fail@plt+0x9490>
   1a928:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1a92c:	tst	r0, #1
   1a930:	bne	1a9d8 <__assert_fail@plt+0x9490>
   1a934:	b	1a938 <__assert_fail@plt+0x93f0>
   1a938:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a93c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a940:	cmp	r0, r1
   1a944:	bcs	1a95c <__assert_fail@plt+0x9414>
   1a948:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a94c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a950:	add	r0, r0, r1
   1a954:	movw	r1, #39	; 0x27
   1a958:	strb	r1, [r0]
   1a95c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a960:	add	r0, r0, #1
   1a964:	str	r0, [fp, #-44]	; 0xffffffd4
   1a968:	b	1a96c <__assert_fail@plt+0x9424>
   1a96c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a970:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a974:	cmp	r0, r1
   1a978:	bcs	1a990 <__assert_fail@plt+0x9448>
   1a97c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a980:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a984:	add	r0, r0, r1
   1a988:	movw	r1, #36	; 0x24
   1a98c:	strb	r1, [r0]
   1a990:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a994:	add	r0, r0, #1
   1a998:	str	r0, [fp, #-44]	; 0xffffffd4
   1a99c:	b	1a9a0 <__assert_fail@plt+0x9458>
   1a9a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a9a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a9a8:	cmp	r0, r1
   1a9ac:	bcs	1a9c4 <__assert_fail@plt+0x947c>
   1a9b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a9b8:	add	r0, r0, r1
   1a9bc:	movw	r1, #39	; 0x27
   1a9c0:	strb	r1, [r0]
   1a9c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a9c8:	add	r0, r0, #1
   1a9cc:	str	r0, [fp, #-44]	; 0xffffffd4
   1a9d0:	movw	r0, #1
   1a9d4:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a9d8:	b	1a9dc <__assert_fail@plt+0x9494>
   1a9dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a9e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a9e4:	cmp	r0, r1
   1a9e8:	bcs	1aa00 <__assert_fail@plt+0x94b8>
   1a9ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a9f4:	add	r0, r0, r1
   1a9f8:	movw	r1, #92	; 0x5c
   1a9fc:	strb	r1, [r0]
   1aa00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa04:	add	r0, r0, #1
   1aa08:	str	r0, [fp, #-44]	; 0xffffffd4
   1aa0c:	b	1aa10 <__assert_fail@plt+0x94c8>
   1aa10:	b	1aa14 <__assert_fail@plt+0x94cc>
   1aa14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aa1c:	cmp	r0, r1
   1aa20:	bcs	1aa40 <__assert_fail@plt+0x94f8>
   1aa24:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1aa28:	asr	r0, r0, #6
   1aa2c:	add	r0, r0, #48	; 0x30
   1aa30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aa34:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1aa38:	add	r1, r1, r2
   1aa3c:	strb	r0, [r1]
   1aa40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa44:	add	r0, r0, #1
   1aa48:	str	r0, [fp, #-44]	; 0xffffffd4
   1aa4c:	b	1aa50 <__assert_fail@plt+0x9508>
   1aa50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aa58:	cmp	r0, r1
   1aa5c:	bcs	1aa80 <__assert_fail@plt+0x9538>
   1aa60:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1aa64:	asr	r0, r0, #3
   1aa68:	and	r0, r0, #7
   1aa6c:	add	r0, r0, #48	; 0x30
   1aa70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aa74:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1aa78:	add	r1, r1, r2
   1aa7c:	strb	r0, [r1]
   1aa80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa84:	add	r0, r0, #1
   1aa88:	str	r0, [fp, #-44]	; 0xffffffd4
   1aa8c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1aa90:	and	r0, r0, #7
   1aa94:	add	r0, r0, #48	; 0x30
   1aa98:	strb	r0, [fp, #-63]	; 0xffffffc1
   1aa9c:	b	1aaec <__assert_fail@plt+0x95a4>
   1aaa0:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1aaa4:	tst	r0, #1
   1aaa8:	beq	1aae8 <__assert_fail@plt+0x95a0>
   1aaac:	b	1aab0 <__assert_fail@plt+0x9568>
   1aab0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aab4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aab8:	cmp	r0, r1
   1aabc:	bcs	1aad4 <__assert_fail@plt+0x958c>
   1aac0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aac4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1aac8:	add	r0, r0, r1
   1aacc:	movw	r1, #92	; 0x5c
   1aad0:	strb	r1, [r0]
   1aad4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aad8:	add	r0, r0, #1
   1aadc:	str	r0, [fp, #-44]	; 0xffffffd4
   1aae0:	movw	r0, #0
   1aae4:	strb	r0, [fp, #-65]	; 0xffffffbf
   1aae8:	b	1aaec <__assert_fail@plt+0x95a4>
   1aaec:	ldr	r0, [sp, #76]	; 0x4c
   1aaf0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1aaf4:	add	r1, r1, #1
   1aaf8:	cmp	r0, r1
   1aafc:	bhi	1ab04 <__assert_fail@plt+0x95bc>
   1ab00:	b	1abe8 <__assert_fail@plt+0x96a0>
   1ab04:	b	1ab08 <__assert_fail@plt+0x95c0>
   1ab08:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1ab0c:	tst	r0, #1
   1ab10:	beq	1ab90 <__assert_fail@plt+0x9648>
   1ab14:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1ab18:	tst	r0, #1
   1ab1c:	bne	1ab90 <__assert_fail@plt+0x9648>
   1ab20:	b	1ab24 <__assert_fail@plt+0x95dc>
   1ab24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ab28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ab2c:	cmp	r0, r1
   1ab30:	bcs	1ab48 <__assert_fail@plt+0x9600>
   1ab34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab38:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ab3c:	add	r0, r0, r1
   1ab40:	movw	r1, #39	; 0x27
   1ab44:	strb	r1, [r0]
   1ab48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ab4c:	add	r0, r0, #1
   1ab50:	str	r0, [fp, #-44]	; 0xffffffd4
   1ab54:	b	1ab58 <__assert_fail@plt+0x9610>
   1ab58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ab5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ab60:	cmp	r0, r1
   1ab64:	bcs	1ab7c <__assert_fail@plt+0x9634>
   1ab68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ab70:	add	r0, r0, r1
   1ab74:	movw	r1, #39	; 0x27
   1ab78:	strb	r1, [r0]
   1ab7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ab80:	add	r0, r0, #1
   1ab84:	str	r0, [fp, #-44]	; 0xffffffd4
   1ab88:	movw	r0, #0
   1ab8c:	strb	r0, [fp, #-60]	; 0xffffffc4
   1ab90:	b	1ab94 <__assert_fail@plt+0x964c>
   1ab94:	b	1ab98 <__assert_fail@plt+0x9650>
   1ab98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ab9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aba0:	cmp	r0, r1
   1aba4:	bcs	1abbc <__assert_fail@plt+0x9674>
   1aba8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1abac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1abb0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1abb4:	add	r1, r1, r2
   1abb8:	strb	r0, [r1]
   1abbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1abc0:	add	r0, r0, #1
   1abc4:	str	r0, [fp, #-44]	; 0xffffffd4
   1abc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1abcc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1abd0:	add	r1, r1, #1
   1abd4:	str	r1, [fp, #-40]	; 0xffffffd8
   1abd8:	add	r0, r0, r1
   1abdc:	ldrb	r0, [r0]
   1abe0:	strb	r0, [fp, #-63]	; 0xffffffc1
   1abe4:	b	1a8e8 <__assert_fail@plt+0x93a0>
   1abe8:	b	1ad78 <__assert_fail@plt+0x9830>
   1abec:	b	1abf0 <__assert_fail@plt+0x96a8>
   1abf0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1abf4:	tst	r0, #1
   1abf8:	beq	1ac08 <__assert_fail@plt+0x96c0>
   1abfc:	ldr	r0, [fp, #8]
   1ac00:	cmp	r0, #2
   1ac04:	bne	1ac14 <__assert_fail@plt+0x96cc>
   1ac08:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1ac0c:	tst	r0, #1
   1ac10:	beq	1ac50 <__assert_fail@plt+0x9708>
   1ac14:	ldr	r0, [fp, #16]
   1ac18:	movw	r1, #0
   1ac1c:	cmp	r0, r1
   1ac20:	beq	1ac50 <__assert_fail@plt+0x9708>
   1ac24:	ldr	r0, [fp, #16]
   1ac28:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1ac2c:	lsr	r1, r1, #5
   1ac30:	add	r0, r0, r1, lsl #2
   1ac34:	ldr	r0, [r0]
   1ac38:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1ac3c:	and	r1, r1, #31
   1ac40:	lsr	r0, r0, r1
   1ac44:	and	r0, r0, #1
   1ac48:	cmp	r0, #0
   1ac4c:	bne	1ac60 <__assert_fail@plt+0x9718>
   1ac50:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1ac54:	tst	r0, #1
   1ac58:	bne	1ac60 <__assert_fail@plt+0x9718>
   1ac5c:	b	1ad78 <__assert_fail@plt+0x9830>
   1ac60:	b	1ac64 <__assert_fail@plt+0x971c>
   1ac64:	b	1ac68 <__assert_fail@plt+0x9720>
   1ac68:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1ac6c:	tst	r0, #1
   1ac70:	beq	1ac78 <__assert_fail@plt+0x9730>
   1ac74:	b	1afe4 <__assert_fail@plt+0x9a9c>
   1ac78:	movw	r0, #1
   1ac7c:	strb	r0, [fp, #-66]	; 0xffffffbe
   1ac80:	ldr	r0, [fp, #8]
   1ac84:	cmp	r0, #2
   1ac88:	bne	1ad3c <__assert_fail@plt+0x97f4>
   1ac8c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1ac90:	tst	r0, #1
   1ac94:	bne	1ad3c <__assert_fail@plt+0x97f4>
   1ac98:	b	1ac9c <__assert_fail@plt+0x9754>
   1ac9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aca0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aca4:	cmp	r0, r1
   1aca8:	bcs	1acc0 <__assert_fail@plt+0x9778>
   1acac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1acb0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1acb4:	add	r0, r0, r1
   1acb8:	movw	r1, #39	; 0x27
   1acbc:	strb	r1, [r0]
   1acc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1acc4:	add	r0, r0, #1
   1acc8:	str	r0, [fp, #-44]	; 0xffffffd4
   1accc:	b	1acd0 <__assert_fail@plt+0x9788>
   1acd0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1acd4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1acd8:	cmp	r0, r1
   1acdc:	bcs	1acf4 <__assert_fail@plt+0x97ac>
   1ace0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ace4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ace8:	add	r0, r0, r1
   1acec:	movw	r1, #36	; 0x24
   1acf0:	strb	r1, [r0]
   1acf4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1acf8:	add	r0, r0, #1
   1acfc:	str	r0, [fp, #-44]	; 0xffffffd4
   1ad00:	b	1ad04 <__assert_fail@plt+0x97bc>
   1ad04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ad08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ad0c:	cmp	r0, r1
   1ad10:	bcs	1ad28 <__assert_fail@plt+0x97e0>
   1ad14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad18:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ad1c:	add	r0, r0, r1
   1ad20:	movw	r1, #39	; 0x27
   1ad24:	strb	r1, [r0]
   1ad28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ad2c:	add	r0, r0, #1
   1ad30:	str	r0, [fp, #-44]	; 0xffffffd4
   1ad34:	movw	r0, #1
   1ad38:	strb	r0, [fp, #-60]	; 0xffffffc4
   1ad3c:	b	1ad40 <__assert_fail@plt+0x97f8>
   1ad40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ad44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ad48:	cmp	r0, r1
   1ad4c:	bcs	1ad64 <__assert_fail@plt+0x981c>
   1ad50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ad58:	add	r0, r0, r1
   1ad5c:	movw	r1, #92	; 0x5c
   1ad60:	strb	r1, [r0]
   1ad64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ad68:	add	r0, r0, #1
   1ad6c:	str	r0, [fp, #-44]	; 0xffffffd4
   1ad70:	b	1ad74 <__assert_fail@plt+0x982c>
   1ad74:	b	1ad78 <__assert_fail@plt+0x9830>
   1ad78:	b	1ad7c <__assert_fail@plt+0x9834>
   1ad7c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1ad80:	tst	r0, #1
   1ad84:	beq	1ae04 <__assert_fail@plt+0x98bc>
   1ad88:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1ad8c:	tst	r0, #1
   1ad90:	bne	1ae04 <__assert_fail@plt+0x98bc>
   1ad94:	b	1ad98 <__assert_fail@plt+0x9850>
   1ad98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ad9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ada0:	cmp	r0, r1
   1ada4:	bcs	1adbc <__assert_fail@plt+0x9874>
   1ada8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1adac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1adb0:	add	r0, r0, r1
   1adb4:	movw	r1, #39	; 0x27
   1adb8:	strb	r1, [r0]
   1adbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1adc0:	add	r0, r0, #1
   1adc4:	str	r0, [fp, #-44]	; 0xffffffd4
   1adc8:	b	1adcc <__assert_fail@plt+0x9884>
   1adcc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1add0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1add4:	cmp	r0, r1
   1add8:	bcs	1adf0 <__assert_fail@plt+0x98a8>
   1addc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ade0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ade4:	add	r0, r0, r1
   1ade8:	movw	r1, #39	; 0x27
   1adec:	strb	r1, [r0]
   1adf0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1adf4:	add	r0, r0, #1
   1adf8:	str	r0, [fp, #-44]	; 0xffffffd4
   1adfc:	movw	r0, #0
   1ae00:	strb	r0, [fp, #-60]	; 0xffffffc4
   1ae04:	b	1ae08 <__assert_fail@plt+0x98c0>
   1ae08:	b	1ae0c <__assert_fail@plt+0x98c4>
   1ae0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ae10:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ae14:	cmp	r0, r1
   1ae18:	bcs	1ae30 <__assert_fail@plt+0x98e8>
   1ae1c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1ae20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ae24:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1ae28:	add	r1, r1, r2
   1ae2c:	strb	r0, [r1]
   1ae30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ae34:	add	r0, r0, #1
   1ae38:	str	r0, [fp, #-44]	; 0xffffffd4
   1ae3c:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   1ae40:	tst	r0, #1
   1ae44:	bne	1ae50 <__assert_fail@plt+0x9908>
   1ae48:	movw	r0, #0
   1ae4c:	strb	r0, [fp, #-62]	; 0xffffffc2
   1ae50:	b	1ae54 <__assert_fail@plt+0x990c>
   1ae54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ae58:	add	r0, r0, #1
   1ae5c:	str	r0, [fp, #-40]	; 0xffffffd8
   1ae60:	b	19c0c <__assert_fail@plt+0x86c4>
   1ae64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ae68:	cmp	r0, #0
   1ae6c:	bne	1ae8c <__assert_fail@plt+0x9944>
   1ae70:	ldr	r0, [fp, #8]
   1ae74:	cmp	r0, #2
   1ae78:	bne	1ae8c <__assert_fail@plt+0x9944>
   1ae7c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1ae80:	tst	r0, #1
   1ae84:	beq	1ae8c <__assert_fail@plt+0x9944>
   1ae88:	b	1afe4 <__assert_fail@plt+0x9a9c>
   1ae8c:	ldr	r0, [fp, #8]
   1ae90:	cmp	r0, #2
   1ae94:	bne	1af34 <__assert_fail@plt+0x99ec>
   1ae98:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1ae9c:	tst	r0, #1
   1aea0:	bne	1af34 <__assert_fail@plt+0x99ec>
   1aea4:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   1aea8:	tst	r0, #1
   1aeac:	beq	1af34 <__assert_fail@plt+0x99ec>
   1aeb0:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   1aeb4:	tst	r0, #1
   1aeb8:	beq	1af00 <__assert_fail@plt+0x99b8>
   1aebc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aec0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1aec4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1aec8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1aecc:	ldr	ip, [fp, #12]
   1aed0:	ldr	lr, [fp, #16]
   1aed4:	ldr	r4, [fp, #20]
   1aed8:	ldr	r5, [fp, #24]
   1aedc:	movw	r6, #5
   1aee0:	str	r6, [sp]
   1aee4:	str	ip, [sp, #4]
   1aee8:	str	lr, [sp, #8]
   1aeec:	str	r4, [sp, #12]
   1aef0:	str	r5, [sp, #16]
   1aef4:	bl	19924 <__assert_fail@plt+0x83dc>
   1aef8:	str	r0, [fp, #-20]	; 0xffffffec
   1aefc:	b	1b04c <__assert_fail@plt+0x9b04>
   1af00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1af04:	cmp	r0, #0
   1af08:	bne	1af2c <__assert_fail@plt+0x99e4>
   1af0c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1af10:	cmp	r0, #0
   1af14:	beq	1af2c <__assert_fail@plt+0x99e4>
   1af18:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1af1c:	str	r0, [fp, #-28]	; 0xffffffe4
   1af20:	movw	r0, #0
   1af24:	str	r0, [fp, #-44]	; 0xffffffd4
   1af28:	b	199cc <__assert_fail@plt+0x8484>
   1af2c:	b	1af30 <__assert_fail@plt+0x99e8>
   1af30:	b	1af34 <__assert_fail@plt+0x99ec>
   1af34:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1af38:	movw	r1, #0
   1af3c:	cmp	r0, r1
   1af40:	beq	1afb4 <__assert_fail@plt+0x9a6c>
   1af44:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1af48:	tst	r0, #1
   1af4c:	bne	1afb4 <__assert_fail@plt+0x9a6c>
   1af50:	b	1af54 <__assert_fail@plt+0x9a0c>
   1af54:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1af58:	ldrsb	r0, [r0]
   1af5c:	cmp	r0, #0
   1af60:	beq	1afb0 <__assert_fail@plt+0x9a68>
   1af64:	b	1af68 <__assert_fail@plt+0x9a20>
   1af68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1af6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1af70:	cmp	r0, r1
   1af74:	bcs	1af90 <__assert_fail@plt+0x9a48>
   1af78:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1af7c:	ldrb	r0, [r0]
   1af80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1af84:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1af88:	add	r1, r1, r2
   1af8c:	strb	r0, [r1]
   1af90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1af94:	add	r0, r0, #1
   1af98:	str	r0, [fp, #-44]	; 0xffffffd4
   1af9c:	b	1afa0 <__assert_fail@plt+0x9a58>
   1afa0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1afa4:	add	r0, r0, #1
   1afa8:	str	r0, [fp, #-52]	; 0xffffffcc
   1afac:	b	1af54 <__assert_fail@plt+0x9a0c>
   1afb0:	b	1afb4 <__assert_fail@plt+0x9a6c>
   1afb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1afb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1afbc:	cmp	r0, r1
   1afc0:	bcs	1afd8 <__assert_fail@plt+0x9a90>
   1afc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1afc8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1afcc:	add	r0, r0, r1
   1afd0:	movw	r1, #0
   1afd4:	strb	r1, [r0]
   1afd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1afdc:	str	r0, [fp, #-20]	; 0xffffffec
   1afe0:	b	1b04c <__assert_fail@plt+0x9b04>
   1afe4:	ldr	r0, [fp, #8]
   1afe8:	cmp	r0, #2
   1afec:	bne	1b004 <__assert_fail@plt+0x9abc>
   1aff0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1aff4:	tst	r0, #1
   1aff8:	beq	1b004 <__assert_fail@plt+0x9abc>
   1affc:	movw	r0, #4
   1b000:	str	r0, [fp, #8]
   1b004:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b008:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b00c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b010:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b014:	ldr	ip, [fp, #8]
   1b018:	ldr	lr, [fp, #12]
   1b01c:	mvn	r4, #2
   1b020:	and	lr, lr, r4
   1b024:	ldr	r4, [fp, #20]
   1b028:	ldr	r5, [fp, #24]
   1b02c:	str	ip, [sp]
   1b030:	str	lr, [sp, #4]
   1b034:	movw	ip, #0
   1b038:	str	ip, [sp, #8]
   1b03c:	str	r4, [sp, #12]
   1b040:	str	r5, [sp, #16]
   1b044:	bl	19924 <__assert_fail@plt+0x83dc>
   1b048:	str	r0, [fp, #-20]	; 0xffffffec
   1b04c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b050:	sub	sp, fp, #16
   1b054:	pop	{r4, r5, r6, sl, fp, pc}
   1b058:	push	{fp, lr}
   1b05c:	mov	fp, sp
   1b060:	sub	sp, sp, #16
   1b064:	str	r0, [fp, #-4]
   1b068:	str	r1, [sp, #8]
   1b06c:	str	r2, [sp, #4]
   1b070:	ldr	r0, [fp, #-4]
   1b074:	ldr	r1, [sp, #8]
   1b078:	ldr	r3, [sp, #4]
   1b07c:	movw	r2, #0
   1b080:	bl	1b08c <__assert_fail@plt+0x9b44>
   1b084:	mov	sp, fp
   1b088:	pop	{fp, pc}
   1b08c:	push	{r4, r5, r6, sl, fp, lr}
   1b090:	add	fp, sp, #16
   1b094:	sub	sp, sp, #80	; 0x50
   1b098:	str	r0, [fp, #-20]	; 0xffffffec
   1b09c:	str	r1, [fp, #-24]	; 0xffffffe8
   1b0a0:	str	r2, [fp, #-28]	; 0xffffffe4
   1b0a4:	str	r3, [fp, #-32]	; 0xffffffe0
   1b0a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b0ac:	movw	r1, #0
   1b0b0:	cmp	r0, r1
   1b0b4:	beq	1b0c4 <__assert_fail@plt+0x9b7c>
   1b0b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b0bc:	str	r0, [sp, #40]	; 0x28
   1b0c0:	b	1b0d4 <__assert_fail@plt+0x9b8c>
   1b0c4:	movw	r0, #25036	; 0x61cc
   1b0c8:	movt	r0, #3
   1b0cc:	str	r0, [sp, #40]	; 0x28
   1b0d0:	b	1b0d4 <__assert_fail@plt+0x9b8c>
   1b0d4:	ldr	r0, [sp, #40]	; 0x28
   1b0d8:	str	r0, [fp, #-36]	; 0xffffffdc
   1b0dc:	bl	11404 <__errno_location@plt>
   1b0e0:	ldr	r0, [r0]
   1b0e4:	str	r0, [fp, #-40]	; 0xffffffd8
   1b0e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b0ec:	ldr	r0, [r0, #4]
   1b0f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b0f4:	movw	r2, #0
   1b0f8:	cmp	r1, r2
   1b0fc:	movw	r1, #0
   1b100:	movne	r1, #1
   1b104:	tst	r1, #1
   1b108:	mov	r1, r2
   1b10c:	moveq	r1, #1
   1b110:	orr	r0, r0, r1
   1b114:	str	r0, [fp, #-44]	; 0xffffffd4
   1b118:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b11c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b120:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b124:	ldr	r1, [r1]
   1b128:	ldr	ip, [fp, #-44]	; 0xffffffd4
   1b12c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1b130:	add	lr, lr, #8
   1b134:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1b138:	ldr	r4, [r4, #40]	; 0x28
   1b13c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1b140:	ldr	r5, [r5, #44]	; 0x2c
   1b144:	str	r0, [sp, #36]	; 0x24
   1b148:	mov	r0, r2
   1b14c:	str	r1, [sp, #32]
   1b150:	mov	r1, r2
   1b154:	ldr	r2, [sp, #36]	; 0x24
   1b158:	ldr	r6, [sp, #32]
   1b15c:	str	r6, [sp]
   1b160:	str	ip, [sp, #4]
   1b164:	str	lr, [sp, #8]
   1b168:	str	r4, [sp, #12]
   1b16c:	str	r5, [sp, #16]
   1b170:	bl	19924 <__assert_fail@plt+0x83dc>
   1b174:	add	r0, r0, #1
   1b178:	str	r0, [sp, #48]	; 0x30
   1b17c:	ldr	r0, [sp, #48]	; 0x30
   1b180:	bl	1cc18 <__assert_fail@plt+0xb6d0>
   1b184:	str	r0, [sp, #44]	; 0x2c
   1b188:	ldr	r0, [sp, #44]	; 0x2c
   1b18c:	ldr	r1, [sp, #48]	; 0x30
   1b190:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b194:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b198:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1b19c:	ldr	ip, [ip]
   1b1a0:	ldr	lr, [fp, #-44]	; 0xffffffd4
   1b1a4:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1b1a8:	add	r4, r4, #8
   1b1ac:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1b1b0:	ldr	r5, [r5, #40]	; 0x28
   1b1b4:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1b1b8:	ldr	r6, [r6, #44]	; 0x2c
   1b1bc:	str	ip, [sp]
   1b1c0:	str	lr, [sp, #4]
   1b1c4:	str	r4, [sp, #8]
   1b1c8:	str	r5, [sp, #12]
   1b1cc:	str	r6, [sp, #16]
   1b1d0:	bl	19924 <__assert_fail@plt+0x83dc>
   1b1d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b1d8:	str	r0, [sp, #28]
   1b1dc:	str	r1, [sp, #24]
   1b1e0:	bl	11404 <__errno_location@plt>
   1b1e4:	ldr	r1, [sp, #24]
   1b1e8:	str	r1, [r0]
   1b1ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b1f0:	movw	r2, #0
   1b1f4:	cmp	r0, r2
   1b1f8:	beq	1b20c <__assert_fail@plt+0x9cc4>
   1b1fc:	ldr	r0, [sp, #48]	; 0x30
   1b200:	sub	r0, r0, #1
   1b204:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b208:	str	r0, [r1]
   1b20c:	ldr	r0, [sp, #44]	; 0x2c
   1b210:	sub	sp, fp, #16
   1b214:	pop	{r4, r5, r6, sl, fp, pc}
   1b218:	push	{fp, lr}
   1b21c:	mov	fp, sp
   1b220:	sub	sp, sp, #8
   1b224:	movw	r0, #24892	; 0x613c
   1b228:	movt	r0, #3
   1b22c:	ldr	r0, [r0]
   1b230:	str	r0, [sp, #4]
   1b234:	movw	r0, #1
   1b238:	str	r0, [sp]
   1b23c:	ldr	r0, [sp]
   1b240:	movw	r1, #24896	; 0x6140
   1b244:	movt	r1, #3
   1b248:	ldr	r1, [r1]
   1b24c:	cmp	r0, r1
   1b250:	bge	1b278 <__assert_fail@plt+0x9d30>
   1b254:	ldr	r0, [sp, #4]
   1b258:	ldr	r1, [sp]
   1b25c:	add	r0, r0, r1, lsl #3
   1b260:	ldr	r0, [r0, #4]
   1b264:	bl	13948 <__assert_fail@plt+0x2400>
   1b268:	ldr	r0, [sp]
   1b26c:	add	r0, r0, #1
   1b270:	str	r0, [sp]
   1b274:	b	1b23c <__assert_fail@plt+0x9cf4>
   1b278:	ldr	r0, [sp, #4]
   1b27c:	ldr	r0, [r0, #4]
   1b280:	movw	r1, #25084	; 0x61fc
   1b284:	movt	r1, #3
   1b288:	cmp	r0, r1
   1b28c:	beq	1b2b8 <__assert_fail@plt+0x9d70>
   1b290:	ldr	r0, [sp, #4]
   1b294:	ldr	r0, [r0, #4]
   1b298:	bl	13948 <__assert_fail@plt+0x2400>
   1b29c:	movw	r0, #256	; 0x100
   1b2a0:	movw	r1, #24900	; 0x6144
   1b2a4:	movt	r1, #3
   1b2a8:	str	r0, [r1]
   1b2ac:	movw	r0, #25084	; 0x61fc
   1b2b0:	movt	r0, #3
   1b2b4:	str	r0, [r1, #4]
   1b2b8:	ldr	r0, [sp, #4]
   1b2bc:	movw	r1, #24900	; 0x6144
   1b2c0:	movt	r1, #3
   1b2c4:	cmp	r0, r1
   1b2c8:	beq	1b2e8 <__assert_fail@plt+0x9da0>
   1b2cc:	ldr	r0, [sp, #4]
   1b2d0:	bl	13948 <__assert_fail@plt+0x2400>
   1b2d4:	movw	r0, #24892	; 0x613c
   1b2d8:	movt	r0, #3
   1b2dc:	movw	r1, #24900	; 0x6144
   1b2e0:	movt	r1, #3
   1b2e4:	str	r1, [r0]
   1b2e8:	movw	r0, #24896	; 0x6140
   1b2ec:	movt	r0, #3
   1b2f0:	movw	r1, #1
   1b2f4:	str	r1, [r0]
   1b2f8:	mov	sp, fp
   1b2fc:	pop	{fp, pc}
   1b300:	push	{fp, lr}
   1b304:	mov	fp, sp
   1b308:	sub	sp, sp, #8
   1b30c:	str	r0, [sp, #4]
   1b310:	str	r1, [sp]
   1b314:	ldr	r0, [sp, #4]
   1b318:	ldr	r1, [sp]
   1b31c:	mvn	r2, #0
   1b320:	movw	r3, #25036	; 0x61cc
   1b324:	movt	r3, #3
   1b328:	bl	1b334 <__assert_fail@plt+0x9dec>
   1b32c:	mov	sp, fp
   1b330:	pop	{fp, pc}
   1b334:	push	{r4, r5, r6, sl, fp, lr}
   1b338:	add	fp, sp, #16
   1b33c:	sub	sp, sp, #80	; 0x50
   1b340:	str	r0, [fp, #-20]	; 0xffffffec
   1b344:	str	r1, [fp, #-24]	; 0xffffffe8
   1b348:	str	r2, [fp, #-28]	; 0xffffffe4
   1b34c:	str	r3, [fp, #-32]	; 0xffffffe0
   1b350:	bl	11404 <__errno_location@plt>
   1b354:	ldr	r1, [pc, #672]	; 1b5fc <__assert_fail@plt+0xa0b4>
   1b358:	ldr	r0, [r0]
   1b35c:	str	r0, [fp, #-36]	; 0xffffffdc
   1b360:	movw	r0, #24892	; 0x613c
   1b364:	movt	r0, #3
   1b368:	ldr	r0, [r0]
   1b36c:	str	r0, [fp, #-40]	; 0xffffffd8
   1b370:	str	r1, [fp, #-44]	; 0xffffffd4
   1b374:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b378:	movw	r1, #0
   1b37c:	cmp	r1, r0
   1b380:	bgt	1b394 <__assert_fail@plt+0x9e4c>
   1b384:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b388:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b38c:	cmp	r0, r1
   1b390:	blt	1b398 <__assert_fail@plt+0x9e50>
   1b394:	bl	11500 <abort@plt>
   1b398:	movw	r0, #24896	; 0x6140
   1b39c:	movt	r0, #3
   1b3a0:	ldr	r0, [r0]
   1b3a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b3a8:	cmp	r0, r1
   1b3ac:	bgt	1b4a4 <__assert_fail@plt+0x9f5c>
   1b3b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b3b4:	movw	r1, #24900	; 0x6144
   1b3b8:	movt	r1, #3
   1b3bc:	cmp	r0, r1
   1b3c0:	movw	r0, #0
   1b3c4:	moveq	r0, #1
   1b3c8:	and	r0, r0, #1
   1b3cc:	strb	r0, [fp, #-45]	; 0xffffffd3
   1b3d0:	movw	r0, #24896	; 0x6140
   1b3d4:	movt	r0, #3
   1b3d8:	ldr	r0, [r0]
   1b3dc:	str	r0, [sp, #44]	; 0x2c
   1b3e0:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1b3e4:	tst	r0, #1
   1b3e8:	beq	1b3f8 <__assert_fail@plt+0x9eb0>
   1b3ec:	movw	r0, #0
   1b3f0:	str	r0, [sp, #24]
   1b3f4:	b	1b400 <__assert_fail@plt+0x9eb8>
   1b3f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b3fc:	str	r0, [sp, #24]
   1b400:	ldr	r0, [sp, #24]
   1b404:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b408:	movw	r2, #24896	; 0x6140
   1b40c:	movt	r2, #3
   1b410:	ldr	r2, [r2]
   1b414:	sub	r1, r1, r2
   1b418:	add	r2, r1, #1
   1b41c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b420:	add	r1, sp, #44	; 0x2c
   1b424:	movw	ip, #8
   1b428:	str	ip, [sp]
   1b42c:	bl	1ce54 <__assert_fail@plt+0xb90c>
   1b430:	str	r0, [fp, #-40]	; 0xffffffd8
   1b434:	movw	r1, #24892	; 0x613c
   1b438:	movt	r1, #3
   1b43c:	str	r0, [r1]
   1b440:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1b444:	tst	r0, #1
   1b448:	beq	1b468 <__assert_fail@plt+0x9f20>
   1b44c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b450:	movw	r1, #24900	; 0x6144
   1b454:	movt	r1, #3
   1b458:	ldr	r2, [r1]
   1b45c:	str	r2, [r0]
   1b460:	ldr	r1, [r1, #4]
   1b464:	str	r1, [r0, #4]
   1b468:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b46c:	movw	r1, #24896	; 0x6140
   1b470:	movt	r1, #3
   1b474:	ldr	r1, [r1]
   1b478:	add	r0, r0, r1, lsl #3
   1b47c:	ldr	r2, [sp, #44]	; 0x2c
   1b480:	sub	r1, r2, r1
   1b484:	lsl	r2, r1, #3
   1b488:	movw	r1, #0
   1b48c:	and	r1, r1, #255	; 0xff
   1b490:	bl	1141c <memset@plt>
   1b494:	ldr	r0, [sp, #44]	; 0x2c
   1b498:	movw	r1, #24896	; 0x6140
   1b49c:	movt	r1, #3
   1b4a0:	str	r0, [r1]
   1b4a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b4a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b4ac:	ldr	r0, [r0, r1, lsl #3]
   1b4b0:	str	r0, [sp, #40]	; 0x28
   1b4b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b4b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b4bc:	add	r0, r0, r1, lsl #3
   1b4c0:	ldr	r0, [r0, #4]
   1b4c4:	str	r0, [sp, #36]	; 0x24
   1b4c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b4cc:	ldr	r0, [r0, #4]
   1b4d0:	orr	r0, r0, #1
   1b4d4:	str	r0, [sp, #32]
   1b4d8:	ldr	r0, [sp, #36]	; 0x24
   1b4dc:	ldr	r1, [sp, #40]	; 0x28
   1b4e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b4e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b4e8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1b4ec:	ldr	ip, [ip]
   1b4f0:	ldr	lr, [sp, #32]
   1b4f4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1b4f8:	add	r4, r4, #8
   1b4fc:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1b500:	ldr	r5, [r5, #40]	; 0x28
   1b504:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1b508:	ldr	r6, [r6, #44]	; 0x2c
   1b50c:	str	ip, [sp]
   1b510:	str	lr, [sp, #4]
   1b514:	str	r4, [sp, #8]
   1b518:	str	r5, [sp, #12]
   1b51c:	str	r6, [sp, #16]
   1b520:	bl	19924 <__assert_fail@plt+0x83dc>
   1b524:	str	r0, [sp, #28]
   1b528:	ldr	r0, [sp, #40]	; 0x28
   1b52c:	ldr	r1, [sp, #28]
   1b530:	cmp	r0, r1
   1b534:	bhi	1b5dc <__assert_fail@plt+0xa094>
   1b538:	ldr	r0, [sp, #28]
   1b53c:	add	r0, r0, #1
   1b540:	str	r0, [sp, #40]	; 0x28
   1b544:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b548:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b54c:	add	r1, r1, r2, lsl #3
   1b550:	str	r0, [r1]
   1b554:	ldr	r0, [sp, #36]	; 0x24
   1b558:	movw	r1, #25084	; 0x61fc
   1b55c:	movt	r1, #3
   1b560:	cmp	r0, r1
   1b564:	beq	1b570 <__assert_fail@plt+0xa028>
   1b568:	ldr	r0, [sp, #36]	; 0x24
   1b56c:	bl	13948 <__assert_fail@plt+0x2400>
   1b570:	ldr	r0, [sp, #40]	; 0x28
   1b574:	bl	1cc18 <__assert_fail@plt+0xb6d0>
   1b578:	mov	r1, r0
   1b57c:	str	r0, [sp, #36]	; 0x24
   1b580:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b584:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b588:	add	r0, r0, r2, lsl #3
   1b58c:	str	r1, [r0, #4]
   1b590:	ldr	r0, [sp, #36]	; 0x24
   1b594:	ldr	r1, [sp, #40]	; 0x28
   1b598:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b59c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b5a0:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1b5a4:	ldr	ip, [ip]
   1b5a8:	ldr	lr, [sp, #32]
   1b5ac:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1b5b0:	add	r4, r4, #8
   1b5b4:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1b5b8:	ldr	r5, [r5, #40]	; 0x28
   1b5bc:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1b5c0:	ldr	r6, [r6, #44]	; 0x2c
   1b5c4:	str	ip, [sp]
   1b5c8:	str	lr, [sp, #4]
   1b5cc:	str	r4, [sp, #8]
   1b5d0:	str	r5, [sp, #12]
   1b5d4:	str	r6, [sp, #16]
   1b5d8:	bl	19924 <__assert_fail@plt+0x83dc>
   1b5dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b5e0:	str	r0, [sp, #20]
   1b5e4:	bl	11404 <__errno_location@plt>
   1b5e8:	ldr	r1, [sp, #20]
   1b5ec:	str	r1, [r0]
   1b5f0:	ldr	r0, [sp, #36]	; 0x24
   1b5f4:	sub	sp, fp, #16
   1b5f8:	pop	{r4, r5, r6, sl, fp, pc}
   1b5fc:	svcvc	0x00ffffff
   1b600:	push	{fp, lr}
   1b604:	mov	fp, sp
   1b608:	sub	sp, sp, #16
   1b60c:	str	r0, [fp, #-4]
   1b610:	str	r1, [sp, #8]
   1b614:	str	r2, [sp, #4]
   1b618:	ldr	r0, [fp, #-4]
   1b61c:	ldr	r1, [sp, #8]
   1b620:	ldr	r2, [sp, #4]
   1b624:	movw	r3, #25036	; 0x61cc
   1b628:	movt	r3, #3
   1b62c:	bl	1b334 <__assert_fail@plt+0x9dec>
   1b630:	mov	sp, fp
   1b634:	pop	{fp, pc}
   1b638:	push	{fp, lr}
   1b63c:	mov	fp, sp
   1b640:	sub	sp, sp, #8
   1b644:	str	r0, [sp, #4]
   1b648:	ldr	r1, [sp, #4]
   1b64c:	movw	r0, #0
   1b650:	bl	1b300 <__assert_fail@plt+0x9db8>
   1b654:	mov	sp, fp
   1b658:	pop	{fp, pc}
   1b65c:	push	{fp, lr}
   1b660:	mov	fp, sp
   1b664:	sub	sp, sp, #8
   1b668:	str	r0, [sp, #4]
   1b66c:	str	r1, [sp]
   1b670:	ldr	r1, [sp, #4]
   1b674:	ldr	r2, [sp]
   1b678:	movw	r0, #0
   1b67c:	bl	1b600 <__assert_fail@plt+0xa0b8>
   1b680:	mov	sp, fp
   1b684:	pop	{fp, pc}
   1b688:	push	{fp, lr}
   1b68c:	mov	fp, sp
   1b690:	sub	sp, sp, #64	; 0x40
   1b694:	str	r0, [fp, #-4]
   1b698:	str	r1, [fp, #-8]
   1b69c:	str	r2, [fp, #-12]
   1b6a0:	ldr	r1, [fp, #-8]
   1b6a4:	add	r0, sp, #4
   1b6a8:	bl	1b6c8 <__assert_fail@plt+0xa180>
   1b6ac:	ldr	r0, [fp, #-4]
   1b6b0:	ldr	r1, [fp, #-12]
   1b6b4:	mvn	r2, #0
   1b6b8:	add	r3, sp, #4
   1b6bc:	bl	1b334 <__assert_fail@plt+0x9dec>
   1b6c0:	mov	sp, fp
   1b6c4:	pop	{fp, pc}
   1b6c8:	push	{fp, lr}
   1b6cc:	mov	fp, sp
   1b6d0:	sub	sp, sp, #8
   1b6d4:	str	r1, [sp, #4]
   1b6d8:	mov	r1, r0
   1b6dc:	str	r0, [sp]
   1b6e0:	mov	r0, r1
   1b6e4:	movw	r1, #0
   1b6e8:	and	r1, r1, #255	; 0xff
   1b6ec:	movw	r2, #48	; 0x30
   1b6f0:	bl	1141c <memset@plt>
   1b6f4:	ldr	r0, [sp, #4]
   1b6f8:	cmp	r0, #10
   1b6fc:	bne	1b704 <__assert_fail@plt+0xa1bc>
   1b700:	bl	11500 <abort@plt>
   1b704:	ldr	r0, [sp, #4]
   1b708:	ldr	r1, [sp]
   1b70c:	str	r0, [r1]
   1b710:	mov	sp, fp
   1b714:	pop	{fp, pc}
   1b718:	push	{fp, lr}
   1b71c:	mov	fp, sp
   1b720:	sub	sp, sp, #64	; 0x40
   1b724:	str	r0, [fp, #-4]
   1b728:	str	r1, [fp, #-8]
   1b72c:	str	r2, [fp, #-12]
   1b730:	str	r3, [fp, #-16]
   1b734:	ldr	r1, [fp, #-8]
   1b738:	mov	r0, sp
   1b73c:	bl	1b6c8 <__assert_fail@plt+0xa180>
   1b740:	ldr	r0, [fp, #-4]
   1b744:	ldr	r1, [fp, #-12]
   1b748:	ldr	r2, [fp, #-16]
   1b74c:	mov	r3, sp
   1b750:	bl	1b334 <__assert_fail@plt+0x9dec>
   1b754:	mov	sp, fp
   1b758:	pop	{fp, pc}
   1b75c:	push	{fp, lr}
   1b760:	mov	fp, sp
   1b764:	sub	sp, sp, #8
   1b768:	str	r0, [sp, #4]
   1b76c:	str	r1, [sp]
   1b770:	ldr	r1, [sp, #4]
   1b774:	ldr	r2, [sp]
   1b778:	movw	r0, #0
   1b77c:	bl	1b688 <__assert_fail@plt+0xa140>
   1b780:	mov	sp, fp
   1b784:	pop	{fp, pc}
   1b788:	push	{fp, lr}
   1b78c:	mov	fp, sp
   1b790:	sub	sp, sp, #16
   1b794:	str	r0, [fp, #-4]
   1b798:	str	r1, [sp, #8]
   1b79c:	str	r2, [sp, #4]
   1b7a0:	ldr	r1, [fp, #-4]
   1b7a4:	ldr	r2, [sp, #8]
   1b7a8:	ldr	r3, [sp, #4]
   1b7ac:	movw	r0, #0
   1b7b0:	bl	1b718 <__assert_fail@plt+0xa1d0>
   1b7b4:	mov	sp, fp
   1b7b8:	pop	{fp, pc}
   1b7bc:	push	{fp, lr}
   1b7c0:	mov	fp, sp
   1b7c4:	sub	sp, sp, #72	; 0x48
   1b7c8:	movw	r3, #25036	; 0x61cc
   1b7cc:	movt	r3, #3
   1b7d0:	str	r0, [fp, #-4]
   1b7d4:	str	r1, [fp, #-8]
   1b7d8:	strb	r2, [fp, #-9]
   1b7dc:	add	r0, sp, #12
   1b7e0:	mov	r1, r0
   1b7e4:	str	r0, [sp, #8]
   1b7e8:	mov	r0, r1
   1b7ec:	mov	r1, r3
   1b7f0:	movw	r2, #48	; 0x30
   1b7f4:	bl	1129c <memcpy@plt>
   1b7f8:	ldr	r0, [sp, #8]
   1b7fc:	ldrb	r1, [fp, #-9]
   1b800:	movw	r2, #1
   1b804:	bl	196cc <__assert_fail@plt+0x8184>
   1b808:	ldr	r1, [fp, #-4]
   1b80c:	ldr	r2, [fp, #-8]
   1b810:	movw	r3, #0
   1b814:	str	r0, [sp, #4]
   1b818:	mov	r0, r3
   1b81c:	add	r3, sp, #12
   1b820:	bl	1b334 <__assert_fail@plt+0x9dec>
   1b824:	mov	sp, fp
   1b828:	pop	{fp, pc}
   1b82c:	push	{fp, lr}
   1b830:	mov	fp, sp
   1b834:	sub	sp, sp, #8
   1b838:	str	r0, [sp, #4]
   1b83c:	strb	r1, [sp, #3]
   1b840:	ldr	r0, [sp, #4]
   1b844:	mvn	r1, #0
   1b848:	ldrb	r2, [sp, #3]
   1b84c:	bl	1b7bc <__assert_fail@plt+0xa274>
   1b850:	mov	sp, fp
   1b854:	pop	{fp, pc}
   1b858:	push	{fp, lr}
   1b85c:	mov	fp, sp
   1b860:	sub	sp, sp, #8
   1b864:	str	r0, [sp, #4]
   1b868:	ldr	r0, [sp, #4]
   1b86c:	movw	r1, #58	; 0x3a
   1b870:	and	r1, r1, #255	; 0xff
   1b874:	bl	1b82c <__assert_fail@plt+0xa2e4>
   1b878:	mov	sp, fp
   1b87c:	pop	{fp, pc}
   1b880:	push	{fp, lr}
   1b884:	mov	fp, sp
   1b888:	sub	sp, sp, #8
   1b88c:	str	r0, [sp, #4]
   1b890:	str	r1, [sp]
   1b894:	ldr	r0, [sp, #4]
   1b898:	ldr	r1, [sp]
   1b89c:	movw	r2, #58	; 0x3a
   1b8a0:	and	r2, r2, #255	; 0xff
   1b8a4:	bl	1b7bc <__assert_fail@plt+0xa274>
   1b8a8:	mov	sp, fp
   1b8ac:	pop	{fp, pc}
   1b8b0:	push	{fp, lr}
   1b8b4:	mov	fp, sp
   1b8b8:	sub	sp, sp, #120	; 0x78
   1b8bc:	str	r0, [fp, #-4]
   1b8c0:	str	r1, [fp, #-8]
   1b8c4:	str	r2, [fp, #-12]
   1b8c8:	ldr	r1, [fp, #-8]
   1b8cc:	add	r0, sp, #12
   1b8d0:	bl	1b6c8 <__assert_fail@plt+0xa180>
   1b8d4:	add	r0, sp, #60	; 0x3c
   1b8d8:	mov	r1, r0
   1b8dc:	add	r2, sp, #12
   1b8e0:	str	r0, [sp, #8]
   1b8e4:	mov	r0, r1
   1b8e8:	mov	r1, r2
   1b8ec:	movw	r2, #48	; 0x30
   1b8f0:	bl	1129c <memcpy@plt>
   1b8f4:	ldr	r0, [sp, #8]
   1b8f8:	movw	r1, #58	; 0x3a
   1b8fc:	and	r1, r1, #255	; 0xff
   1b900:	movw	r2, #1
   1b904:	bl	196cc <__assert_fail@plt+0x8184>
   1b908:	ldr	r1, [fp, #-4]
   1b90c:	ldr	r2, [fp, #-12]
   1b910:	str	r0, [sp, #4]
   1b914:	mov	r0, r1
   1b918:	mov	r1, r2
   1b91c:	mvn	r2, #0
   1b920:	add	r3, sp, #60	; 0x3c
   1b924:	bl	1b334 <__assert_fail@plt+0x9dec>
   1b928:	mov	sp, fp
   1b92c:	pop	{fp, pc}
   1b930:	push	{fp, lr}
   1b934:	mov	fp, sp
   1b938:	sub	sp, sp, #24
   1b93c:	str	r0, [fp, #-4]
   1b940:	str	r1, [fp, #-8]
   1b944:	str	r2, [sp, #12]
   1b948:	str	r3, [sp, #8]
   1b94c:	ldr	r0, [fp, #-4]
   1b950:	ldr	r1, [fp, #-8]
   1b954:	ldr	r2, [sp, #12]
   1b958:	ldr	r3, [sp, #8]
   1b95c:	mvn	ip, #0
   1b960:	str	ip, [sp]
   1b964:	bl	1b970 <__assert_fail@plt+0xa428>
   1b968:	mov	sp, fp
   1b96c:	pop	{fp, pc}
   1b970:	push	{fp, lr}
   1b974:	mov	fp, sp
   1b978:	sub	sp, sp, #72	; 0x48
   1b97c:	ldr	ip, [fp, #8]
   1b980:	movw	lr, #25036	; 0x61cc
   1b984:	movt	lr, #3
   1b988:	str	r0, [fp, #-4]
   1b98c:	str	r1, [fp, #-8]
   1b990:	str	r2, [fp, #-12]
   1b994:	str	r3, [fp, #-16]
   1b998:	add	r0, sp, #8
   1b99c:	mov	r1, r0
   1b9a0:	str	r0, [sp, #4]
   1b9a4:	mov	r0, r1
   1b9a8:	mov	r1, lr
   1b9ac:	movw	r2, #48	; 0x30
   1b9b0:	str	ip, [sp]
   1b9b4:	bl	1129c <memcpy@plt>
   1b9b8:	ldr	r1, [fp, #-8]
   1b9bc:	ldr	r2, [fp, #-12]
   1b9c0:	ldr	r0, [sp, #4]
   1b9c4:	bl	197cc <__assert_fail@plt+0x8284>
   1b9c8:	ldr	r0, [fp, #-4]
   1b9cc:	ldr	r1, [fp, #-16]
   1b9d0:	ldr	r2, [fp, #8]
   1b9d4:	add	r3, sp, #8
   1b9d8:	bl	1b334 <__assert_fail@plt+0x9dec>
   1b9dc:	mov	sp, fp
   1b9e0:	pop	{fp, pc}
   1b9e4:	push	{fp, lr}
   1b9e8:	mov	fp, sp
   1b9ec:	sub	sp, sp, #16
   1b9f0:	str	r0, [fp, #-4]
   1b9f4:	str	r1, [sp, #8]
   1b9f8:	str	r2, [sp, #4]
   1b9fc:	ldr	r1, [fp, #-4]
   1ba00:	ldr	r2, [sp, #8]
   1ba04:	ldr	r3, [sp, #4]
   1ba08:	movw	r0, #0
   1ba0c:	bl	1b930 <__assert_fail@plt+0xa3e8>
   1ba10:	mov	sp, fp
   1ba14:	pop	{fp, pc}
   1ba18:	push	{fp, lr}
   1ba1c:	mov	fp, sp
   1ba20:	sub	sp, sp, #24
   1ba24:	str	r0, [fp, #-4]
   1ba28:	str	r1, [fp, #-8]
   1ba2c:	str	r2, [sp, #12]
   1ba30:	str	r3, [sp, #8]
   1ba34:	ldr	r1, [fp, #-4]
   1ba38:	ldr	r2, [fp, #-8]
   1ba3c:	ldr	r3, [sp, #12]
   1ba40:	ldr	r0, [sp, #8]
   1ba44:	movw	ip, #0
   1ba48:	str	r0, [sp, #4]
   1ba4c:	mov	r0, ip
   1ba50:	ldr	ip, [sp, #4]
   1ba54:	str	ip, [sp]
   1ba58:	bl	1b970 <__assert_fail@plt+0xa428>
   1ba5c:	mov	sp, fp
   1ba60:	pop	{fp, pc}
   1ba64:	push	{fp, lr}
   1ba68:	mov	fp, sp
   1ba6c:	sub	sp, sp, #16
   1ba70:	str	r0, [fp, #-4]
   1ba74:	str	r1, [sp, #8]
   1ba78:	str	r2, [sp, #4]
   1ba7c:	ldr	r0, [fp, #-4]
   1ba80:	ldr	r1, [sp, #8]
   1ba84:	ldr	r2, [sp, #4]
   1ba88:	movw	r3, #24908	; 0x614c
   1ba8c:	movt	r3, #3
   1ba90:	bl	1b334 <__assert_fail@plt+0x9dec>
   1ba94:	mov	sp, fp
   1ba98:	pop	{fp, pc}
   1ba9c:	push	{fp, lr}
   1baa0:	mov	fp, sp
   1baa4:	sub	sp, sp, #8
   1baa8:	str	r0, [sp, #4]
   1baac:	str	r1, [sp]
   1bab0:	ldr	r1, [sp, #4]
   1bab4:	ldr	r2, [sp]
   1bab8:	movw	r0, #0
   1babc:	bl	1ba64 <__assert_fail@plt+0xa51c>
   1bac0:	mov	sp, fp
   1bac4:	pop	{fp, pc}
   1bac8:	push	{fp, lr}
   1bacc:	mov	fp, sp
   1bad0:	sub	sp, sp, #8
   1bad4:	str	r0, [sp, #4]
   1bad8:	str	r1, [sp]
   1badc:	ldr	r0, [sp, #4]
   1bae0:	ldr	r1, [sp]
   1bae4:	mvn	r2, #0
   1bae8:	bl	1ba64 <__assert_fail@plt+0xa51c>
   1baec:	mov	sp, fp
   1baf0:	pop	{fp, pc}
   1baf4:	push	{fp, lr}
   1baf8:	mov	fp, sp
   1bafc:	sub	sp, sp, #8
   1bb00:	str	r0, [sp, #4]
   1bb04:	ldr	r1, [sp, #4]
   1bb08:	movw	r0, #0
   1bb0c:	bl	1bac8 <__assert_fail@plt+0xa580>
   1bb10:	mov	sp, fp
   1bb14:	pop	{fp, pc}
   1bb18:	push	{fp, lr}
   1bb1c:	mov	fp, sp
   1bb20:	sub	sp, sp, #24
   1bb24:	str	r0, [fp, #-8]
   1bb28:	str	r1, [sp, #12]
   1bb2c:	ldr	r0, [fp, #-8]
   1bb30:	bl	113b0 <gettext@plt>
   1bb34:	str	r0, [sp, #8]
   1bb38:	ldr	r0, [sp, #8]
   1bb3c:	ldr	r1, [fp, #-8]
   1bb40:	cmp	r0, r1
   1bb44:	beq	1bb54 <__assert_fail@plt+0xa60c>
   1bb48:	ldr	r0, [sp, #8]
   1bb4c:	str	r0, [fp, #-4]
   1bb50:	b	1bc20 <__assert_fail@plt+0xa6d8>
   1bb54:	bl	227e4 <__assert_fail@plt+0x1129c>
   1bb58:	str	r0, [sp, #4]
   1bb5c:	ldr	r0, [sp, #4]
   1bb60:	movw	r1, #22930	; 0x5992
   1bb64:	movt	r1, #2
   1bb68:	bl	21b98 <__assert_fail@plt+0x10650>
   1bb6c:	cmp	r0, #0
   1bb70:	bne	1bba8 <__assert_fail@plt+0xa660>
   1bb74:	ldr	r0, [fp, #-8]
   1bb78:	ldrb	r0, [r0]
   1bb7c:	cmp	r0, #96	; 0x60
   1bb80:	movw	r0, #0
   1bb84:	moveq	r0, #1
   1bb88:	tst	r0, #1
   1bb8c:	movw	r0, #22940	; 0x599c
   1bb90:	movt	r0, #2
   1bb94:	movw	r1, #22936	; 0x5998
   1bb98:	movt	r1, #2
   1bb9c:	movne	r0, r1
   1bba0:	str	r0, [fp, #-4]
   1bba4:	b	1bc20 <__assert_fail@plt+0xa6d8>
   1bba8:	ldr	r0, [sp, #4]
   1bbac:	movw	r1, #22944	; 0x59a0
   1bbb0:	movt	r1, #2
   1bbb4:	bl	21b98 <__assert_fail@plt+0x10650>
   1bbb8:	cmp	r0, #0
   1bbbc:	bne	1bbf4 <__assert_fail@plt+0xa6ac>
   1bbc0:	ldr	r0, [fp, #-8]
   1bbc4:	ldrb	r0, [r0]
   1bbc8:	cmp	r0, #96	; 0x60
   1bbcc:	movw	r0, #0
   1bbd0:	moveq	r0, #1
   1bbd4:	tst	r0, #1
   1bbd8:	movw	r0, #22956	; 0x59ac
   1bbdc:	movt	r0, #2
   1bbe0:	movw	r1, #22952	; 0x59a8
   1bbe4:	movt	r1, #2
   1bbe8:	movne	r0, r1
   1bbec:	str	r0, [fp, #-4]
   1bbf0:	b	1bc20 <__assert_fail@plt+0xa6d8>
   1bbf4:	ldr	r0, [sp, #12]
   1bbf8:	cmp	r0, #9
   1bbfc:	movw	r0, #0
   1bc00:	moveq	r0, #1
   1bc04:	tst	r0, #1
   1bc08:	movw	r0, #22928	; 0x5990
   1bc0c:	movt	r0, #2
   1bc10:	movw	r1, #22924	; 0x598c
   1bc14:	movt	r1, #2
   1bc18:	movne	r0, r1
   1bc1c:	str	r0, [fp, #-4]
   1bc20:	ldr	r0, [fp, #-4]
   1bc24:	mov	sp, fp
   1bc28:	pop	{fp, pc}
   1bc2c:	push	{fp, lr}
   1bc30:	mov	fp, sp
   1bc34:	sub	sp, sp, #112	; 0x70
   1bc38:	str	r0, [fp, #-8]
   1bc3c:	movw	r0, #23819	; 0x5d0b
   1bc40:	movt	r0, #2
   1bc44:	mov	r1, sp
   1bc48:	bl	24774 <__assert_fail@plt+0x1322c>
   1bc4c:	cmp	r0, #0
   1bc50:	beq	1bc60 <__assert_fail@plt+0xa718>
   1bc54:	movw	r0, #0
   1bc58:	str	r0, [fp, #-4]
   1bc5c:	b	1bc90 <__assert_fail@plt+0xa748>
   1bc60:	ldr	r0, [sp, #96]	; 0x60
   1bc64:	ldr	r1, [sp, #100]	; 0x64
   1bc68:	ldr	r2, [fp, #-8]
   1bc6c:	str	r1, [r2, #4]
   1bc70:	str	r0, [r2]
   1bc74:	ldr	r0, [sp]
   1bc78:	ldr	r1, [sp, #4]
   1bc7c:	ldr	r2, [fp, #-8]
   1bc80:	str	r1, [r2, #12]
   1bc84:	str	r0, [r2, #8]
   1bc88:	ldr	r0, [fp, #-8]
   1bc8c:	str	r0, [fp, #-4]
   1bc90:	ldr	r0, [fp, #-4]
   1bc94:	mov	sp, fp
   1bc98:	pop	{fp, pc}
   1bc9c:	push	{fp, lr}
   1bca0:	mov	fp, sp
   1bca4:	sub	sp, sp, #24
   1bca8:	str	r0, [fp, #-4]
   1bcac:	ldr	r0, [fp, #-4]
   1bcb0:	movw	r1, #0
   1bcb4:	cmp	r1, r0
   1bcb8:	bgt	1bd08 <__assert_fail@plt+0xa7c0>
   1bcbc:	ldr	r0, [fp, #-4]
   1bcc0:	cmp	r0, #2
   1bcc4:	bgt	1bd08 <__assert_fail@plt+0xa7c0>
   1bcc8:	ldr	r0, [fp, #-4]
   1bccc:	bl	23c30 <__assert_fail@plt+0x126e8>
   1bcd0:	str	r0, [fp, #-8]
   1bcd4:	bl	11404 <__errno_location@plt>
   1bcd8:	ldr	r0, [r0]
   1bcdc:	str	r0, [sp, #12]
   1bce0:	ldr	r0, [fp, #-4]
   1bce4:	bl	1150c <close@plt>
   1bce8:	ldr	r1, [sp, #12]
   1bcec:	str	r0, [sp, #8]
   1bcf0:	str	r1, [sp, #4]
   1bcf4:	bl	11404 <__errno_location@plt>
   1bcf8:	ldr	r1, [sp, #4]
   1bcfc:	str	r1, [r0]
   1bd00:	ldr	r0, [fp, #-8]
   1bd04:	str	r0, [fp, #-4]
   1bd08:	ldr	r0, [fp, #-4]
   1bd0c:	mov	sp, fp
   1bd10:	pop	{fp, pc}
   1bd14:	push	{fp, lr}
   1bd18:	mov	fp, sp
   1bd1c:	sub	sp, sp, #40	; 0x28
   1bd20:	ldr	ip, [fp, #8]
   1bd24:	str	r0, [fp, #-4]
   1bd28:	str	r1, [fp, #-8]
   1bd2c:	str	r2, [fp, #-12]
   1bd30:	str	r3, [fp, #-16]
   1bd34:	ldr	r0, [fp, #-12]
   1bd38:	movw	r1, #0
   1bd3c:	cmp	r0, r1
   1bd40:	beq	1bd58 <__assert_fail@plt+0xa810>
   1bd44:	ldr	r0, [fp, #-4]
   1bd48:	movw	r1, #58	; 0x3a
   1bd4c:	bl	113d4 <strchr@plt>
   1bd50:	str	r0, [sp, #8]
   1bd54:	b	1bd64 <__assert_fail@plt+0xa81c>
   1bd58:	movw	r0, #0
   1bd5c:	str	r0, [sp, #8]
   1bd60:	b	1bd64 <__assert_fail@plt+0xa81c>
   1bd64:	ldr	r0, [sp, #8]
   1bd68:	str	r0, [sp, #20]
   1bd6c:	ldr	r0, [fp, #-4]
   1bd70:	ldr	r1, [sp, #20]
   1bd74:	ldr	r2, [fp, #-8]
   1bd78:	ldr	r3, [fp, #-12]
   1bd7c:	ldr	ip, [fp, #-16]
   1bd80:	ldr	lr, [fp, #8]
   1bd84:	str	ip, [sp]
   1bd88:	str	lr, [sp, #4]
   1bd8c:	bl	1be2c <__assert_fail@plt+0xa8e4>
   1bd90:	str	r0, [sp, #16]
   1bd94:	ldr	r0, [fp, #-12]
   1bd98:	movw	r1, #0
   1bd9c:	cmp	r0, r1
   1bda0:	beq	1be20 <__assert_fail@plt+0xa8d8>
   1bda4:	ldr	r0, [sp, #20]
   1bda8:	movw	r1, #0
   1bdac:	cmp	r0, r1
   1bdb0:	bne	1be20 <__assert_fail@plt+0xa8d8>
   1bdb4:	ldr	r0, [sp, #16]
   1bdb8:	movw	r1, #0
   1bdbc:	cmp	r0, r1
   1bdc0:	beq	1be20 <__assert_fail@plt+0xa8d8>
   1bdc4:	ldr	r0, [fp, #-4]
   1bdc8:	movw	r1, #46	; 0x2e
   1bdcc:	bl	113d4 <strchr@plt>
   1bdd0:	str	r0, [sp, #12]
   1bdd4:	ldr	r0, [sp, #12]
   1bdd8:	movw	r1, #0
   1bddc:	cmp	r0, r1
   1bde0:	beq	1be1c <__assert_fail@plt+0xa8d4>
   1bde4:	ldr	r0, [fp, #-4]
   1bde8:	ldr	r1, [sp, #12]
   1bdec:	ldr	r2, [fp, #-8]
   1bdf0:	ldr	r3, [fp, #-12]
   1bdf4:	ldr	ip, [fp, #-16]
   1bdf8:	ldr	lr, [fp, #8]
   1bdfc:	str	ip, [sp]
   1be00:	str	lr, [sp, #4]
   1be04:	bl	1be2c <__assert_fail@plt+0xa8e4>
   1be08:	movw	r1, #0
   1be0c:	cmp	r0, r1
   1be10:	bne	1be1c <__assert_fail@plt+0xa8d4>
   1be14:	movw	r0, #0
   1be18:	str	r0, [sp, #16]
   1be1c:	b	1be20 <__assert_fail@plt+0xa8d8>
   1be20:	ldr	r0, [sp, #16]
   1be24:	mov	sp, fp
   1be28:	pop	{fp, pc}
   1be2c:	push	{fp, lr}
   1be30:	mov	fp, sp
   1be34:	sub	sp, sp, #120	; 0x78
   1be38:	ldr	ip, [fp, #12]
   1be3c:	ldr	lr, [fp, #8]
   1be40:	str	r0, [fp, #-4]
   1be44:	str	r1, [fp, #-8]
   1be48:	str	r2, [fp, #-12]
   1be4c:	str	r3, [fp, #-16]
   1be50:	movw	r0, #0
   1be54:	str	r0, [fp, #-40]	; 0xffffffd8
   1be58:	ldr	r1, [fp, #-12]
   1be5c:	ldr	r1, [r1]
   1be60:	str	r1, [fp, #-44]	; 0xffffffd4
   1be64:	ldr	r1, [fp, #-16]
   1be68:	cmp	r1, r0
   1be6c:	beq	1be80 <__assert_fail@plt+0xa938>
   1be70:	ldr	r0, [fp, #-16]
   1be74:	ldr	r0, [r0]
   1be78:	str	r0, [sp, #28]
   1be7c:	b	1be8c <__assert_fail@plt+0xa944>
   1be80:	mvn	r0, #0
   1be84:	str	r0, [sp, #28]
   1be88:	b	1be8c <__assert_fail@plt+0xa944>
   1be8c:	ldr	r0, [sp, #28]
   1be90:	str	r0, [fp, #-48]	; 0xffffffd0
   1be94:	movw	r0, #0
   1be98:	str	r0, [fp, #-20]	; 0xffffffec
   1be9c:	ldr	r1, [fp, #8]
   1bea0:	cmp	r1, r0
   1bea4:	beq	1beb4 <__assert_fail@plt+0xa96c>
   1bea8:	ldr	r0, [fp, #8]
   1beac:	movw	r1, #0
   1beb0:	str	r1, [r0]
   1beb4:	ldr	r0, [fp, #12]
   1beb8:	movw	r1, #0
   1bebc:	cmp	r0, r1
   1bec0:	beq	1bed0 <__assert_fail@plt+0xa988>
   1bec4:	ldr	r0, [fp, #12]
   1bec8:	movw	r1, #0
   1becc:	str	r1, [r0]
   1bed0:	movw	r0, #0
   1bed4:	str	r0, [fp, #-32]	; 0xffffffe0
   1bed8:	ldr	r1, [fp, #-8]
   1bedc:	cmp	r1, r0
   1bee0:	bne	1bf04 <__assert_fail@plt+0xa9bc>
   1bee4:	ldr	r0, [fp, #-4]
   1bee8:	ldrsb	r0, [r0]
   1beec:	cmp	r0, #0
   1bef0:	beq	1bf00 <__assert_fail@plt+0xa9b8>
   1bef4:	ldr	r0, [fp, #-4]
   1bef8:	bl	1f8a0 <__assert_fail@plt+0xe358>
   1befc:	str	r0, [fp, #-32]	; 0xffffffe0
   1bf00:	b	1bf4c <__assert_fail@plt+0xaa04>
   1bf04:	ldr	r0, [fp, #-8]
   1bf08:	ldr	r1, [fp, #-4]
   1bf0c:	sub	r0, r0, r1
   1bf10:	str	r0, [fp, #-52]	; 0xffffffcc
   1bf14:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1bf18:	cmp	r0, #0
   1bf1c:	beq	1bf48 <__assert_fail@plt+0xaa00>
   1bf20:	ldr	r0, [fp, #-4]
   1bf24:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1bf28:	add	r1, r1, #1
   1bf2c:	bl	1f810 <__assert_fail@plt+0xe2c8>
   1bf30:	str	r0, [fp, #-32]	; 0xffffffe0
   1bf34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bf38:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1bf3c:	add	r0, r0, r1
   1bf40:	movw	r1, #0
   1bf44:	strb	r1, [r0]
   1bf48:	b	1bf4c <__assert_fail@plt+0xaa04>
   1bf4c:	ldr	r0, [fp, #-8]
   1bf50:	movw	r1, #0
   1bf54:	cmp	r0, r1
   1bf58:	beq	1bf6c <__assert_fail@plt+0xaa24>
   1bf5c:	ldr	r0, [fp, #-8]
   1bf60:	ldrb	r0, [r0, #1]
   1bf64:	cmp	r0, #0
   1bf68:	bne	1bf78 <__assert_fail@plt+0xaa30>
   1bf6c:	movw	r0, #0
   1bf70:	str	r0, [sp, #24]
   1bf74:	b	1bf84 <__assert_fail@plt+0xaa3c>
   1bf78:	ldr	r0, [fp, #-8]
   1bf7c:	add	r0, r0, #1
   1bf80:	str	r0, [sp, #24]
   1bf84:	ldr	r0, [sp, #24]
   1bf88:	str	r0, [fp, #-36]	; 0xffffffdc
   1bf8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bf90:	movw	r1, #0
   1bf94:	cmp	r0, r1
   1bf98:	beq	1c12c <__assert_fail@plt+0xabe4>
   1bf9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bfa0:	ldrb	r0, [r0]
   1bfa4:	cmp	r0, #43	; 0x2b
   1bfa8:	bne	1bfb8 <__assert_fail@plt+0xaa70>
   1bfac:	movw	r0, #0
   1bfb0:	str	r0, [sp, #20]
   1bfb4:	b	1bfc4 <__assert_fail@plt+0xaa7c>
   1bfb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bfbc:	bl	1123c <getpwnam@plt>
   1bfc0:	str	r0, [sp, #20]
   1bfc4:	ldr	r0, [sp, #20]
   1bfc8:	str	r0, [fp, #-24]	; 0xffffffe8
   1bfcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bfd0:	movw	r1, #0
   1bfd4:	cmp	r0, r1
   1bfd8:	bne	1c09c <__assert_fail@plt+0xab54>
   1bfdc:	ldr	r0, [fp, #-8]
   1bfe0:	movw	r1, #0
   1bfe4:	cmp	r0, r1
   1bfe8:	movw	r0, #0
   1bfec:	str	r0, [sp, #16]
   1bff0:	beq	1c00c <__assert_fail@plt+0xaac4>
   1bff4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bff8:	movw	r1, #0
   1bffc:	cmp	r0, r1
   1c000:	movw	r0, #0
   1c004:	moveq	r0, #1
   1c008:	str	r0, [sp, #16]
   1c00c:	ldr	r0, [sp, #16]
   1c010:	and	r0, r0, #1
   1c014:	strb	r0, [fp, #-53]	; 0xffffffcb
   1c018:	ldrb	r0, [fp, #-53]	; 0xffffffcb
   1c01c:	tst	r0, #1
   1c020:	beq	1c038 <__assert_fail@plt+0xaaf0>
   1c024:	movw	r0, #24964	; 0x6184
   1c028:	movt	r0, #3
   1c02c:	ldr	r0, [r0]
   1c030:	str	r0, [fp, #-20]	; 0xffffffec
   1c034:	b	1c098 <__assert_fail@plt+0xab50>
   1c038:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c03c:	movw	r1, #0
   1c040:	movw	r2, #10
   1c044:	add	r3, sp, #60	; 0x3c
   1c048:	movw	ip, #20316	; 0x4f5c
   1c04c:	movt	ip, #2
   1c050:	str	ip, [sp]
   1c054:	bl	1fa50 <__assert_fail@plt+0xe508>
   1c058:	cmp	r0, #0
   1c05c:	bne	1c084 <__assert_fail@plt+0xab3c>
   1c060:	ldr	r0, [sp, #60]	; 0x3c
   1c064:	cmn	r0, #1
   1c068:	bhi	1c084 <__assert_fail@plt+0xab3c>
   1c06c:	ldr	r0, [sp, #60]	; 0x3c
   1c070:	cmn	r0, #1
   1c074:	beq	1c084 <__assert_fail@plt+0xab3c>
   1c078:	ldr	r0, [sp, #60]	; 0x3c
   1c07c:	str	r0, [fp, #-44]	; 0xffffffd4
   1c080:	b	1c094 <__assert_fail@plt+0xab4c>
   1c084:	movw	r0, #24956	; 0x617c
   1c088:	movt	r0, #3
   1c08c:	ldr	r0, [r0]
   1c090:	str	r0, [fp, #-20]	; 0xffffffec
   1c094:	b	1c098 <__assert_fail@plt+0xab50>
   1c098:	b	1c128 <__assert_fail@plt+0xabe0>
   1c09c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c0a0:	ldr	r0, [r0, #8]
   1c0a4:	str	r0, [fp, #-44]	; 0xffffffd4
   1c0a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c0ac:	movw	r1, #0
   1c0b0:	cmp	r0, r1
   1c0b4:	bne	1c124 <__assert_fail@plt+0xabdc>
   1c0b8:	ldr	r0, [fp, #-8]
   1c0bc:	movw	r1, #0
   1c0c0:	cmp	r0, r1
   1c0c4:	beq	1c124 <__assert_fail@plt+0xabdc>
   1c0c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c0cc:	ldr	r0, [r0, #12]
   1c0d0:	str	r0, [fp, #-48]	; 0xffffffd0
   1c0d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c0d8:	bl	11530 <getgrgid@plt>
   1c0dc:	str	r0, [fp, #-28]	; 0xffffffe4
   1c0e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c0e4:	movw	r1, #0
   1c0e8:	cmp	r0, r1
   1c0ec:	beq	1c100 <__assert_fail@plt+0xabb8>
   1c0f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c0f4:	ldr	r0, [r0]
   1c0f8:	str	r0, [sp, #12]
   1c0fc:	b	1c114 <__assert_fail@plt+0xabcc>
   1c100:	add	r2, sp, #39	; 0x27
   1c104:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c108:	mov	r1, #0
   1c10c:	bl	1921c <__assert_fail@plt+0x7cd4>
   1c110:	str	r0, [sp, #12]
   1c114:	ldr	r0, [sp, #12]
   1c118:	bl	1f8a0 <__assert_fail@plt+0xe358>
   1c11c:	str	r0, [fp, #-40]	; 0xffffffd8
   1c120:	bl	11218 <endgrent@plt>
   1c124:	b	1c128 <__assert_fail@plt+0xabe0>
   1c128:	bl	11464 <endpwent@plt>
   1c12c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c130:	movw	r1, #0
   1c134:	cmp	r0, r1
   1c138:	beq	1c208 <__assert_fail@plt+0xacc0>
   1c13c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c140:	movw	r1, #0
   1c144:	cmp	r0, r1
   1c148:	bne	1c208 <__assert_fail@plt+0xacc0>
   1c14c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c150:	ldrb	r0, [r0]
   1c154:	cmp	r0, #43	; 0x2b
   1c158:	bne	1c168 <__assert_fail@plt+0xac20>
   1c15c:	movw	r0, #0
   1c160:	str	r0, [sp, #8]
   1c164:	b	1c174 <__assert_fail@plt+0xac2c>
   1c168:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c16c:	bl	1153c <getgrnam@plt>
   1c170:	str	r0, [sp, #8]
   1c174:	ldr	r0, [sp, #8]
   1c178:	str	r0, [fp, #-28]	; 0xffffffe4
   1c17c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c180:	movw	r1, #0
   1c184:	cmp	r0, r1
   1c188:	bne	1c1ec <__assert_fail@plt+0xaca4>
   1c18c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c190:	movw	r1, #0
   1c194:	movw	r2, #10
   1c198:	add	r3, sp, #32
   1c19c:	movw	ip, #20316	; 0x4f5c
   1c1a0:	movt	ip, #2
   1c1a4:	str	ip, [sp]
   1c1a8:	bl	1fa50 <__assert_fail@plt+0xe508>
   1c1ac:	cmp	r0, #0
   1c1b0:	bne	1c1d8 <__assert_fail@plt+0xac90>
   1c1b4:	ldr	r0, [sp, #32]
   1c1b8:	cmn	r0, #1
   1c1bc:	bhi	1c1d8 <__assert_fail@plt+0xac90>
   1c1c0:	ldr	r0, [sp, #32]
   1c1c4:	cmn	r0, #1
   1c1c8:	beq	1c1d8 <__assert_fail@plt+0xac90>
   1c1cc:	ldr	r0, [sp, #32]
   1c1d0:	str	r0, [fp, #-48]	; 0xffffffd0
   1c1d4:	b	1c1e8 <__assert_fail@plt+0xaca0>
   1c1d8:	movw	r0, #24960	; 0x6180
   1c1dc:	movt	r0, #3
   1c1e0:	ldr	r0, [r0]
   1c1e4:	str	r0, [fp, #-20]	; 0xffffffec
   1c1e8:	b	1c1f8 <__assert_fail@plt+0xacb0>
   1c1ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c1f0:	ldr	r0, [r0, #8]
   1c1f4:	str	r0, [fp, #-48]	; 0xffffffd0
   1c1f8:	bl	11218 <endgrent@plt>
   1c1fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c200:	bl	1f8a0 <__assert_fail@plt+0xe358>
   1c204:	str	r0, [fp, #-40]	; 0xffffffd8
   1c208:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c20c:	movw	r1, #0
   1c210:	cmp	r0, r1
   1c214:	bne	1c28c <__assert_fail@plt+0xad44>
   1c218:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c21c:	ldr	r1, [fp, #-12]
   1c220:	str	r0, [r1]
   1c224:	ldr	r0, [fp, #-16]
   1c228:	movw	r1, #0
   1c22c:	cmp	r0, r1
   1c230:	beq	1c240 <__assert_fail@plt+0xacf8>
   1c234:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c238:	ldr	r1, [fp, #-16]
   1c23c:	str	r0, [r1]
   1c240:	ldr	r0, [fp, #8]
   1c244:	movw	r1, #0
   1c248:	cmp	r0, r1
   1c24c:	beq	1c264 <__assert_fail@plt+0xad1c>
   1c250:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c254:	ldr	r1, [fp, #8]
   1c258:	str	r0, [r1]
   1c25c:	movw	r0, #0
   1c260:	str	r0, [fp, #-32]	; 0xffffffe0
   1c264:	ldr	r0, [fp, #12]
   1c268:	movw	r1, #0
   1c26c:	cmp	r0, r1
   1c270:	beq	1c288 <__assert_fail@plt+0xad40>
   1c274:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c278:	ldr	r1, [fp, #12]
   1c27c:	str	r0, [r1]
   1c280:	movw	r0, #0
   1c284:	str	r0, [fp, #-40]	; 0xffffffd8
   1c288:	b	1c28c <__assert_fail@plt+0xad44>
   1c28c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c290:	bl	13948 <__assert_fail@plt+0x2400>
   1c294:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c298:	bl	13948 <__assert_fail@plt+0x2400>
   1c29c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c2a0:	movw	r1, #0
   1c2a4:	cmp	r0, r1
   1c2a8:	beq	1c2bc <__assert_fail@plt+0xad74>
   1c2ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c2b0:	bl	113b0 <gettext@plt>
   1c2b4:	str	r0, [sp, #4]
   1c2b8:	b	1c2c8 <__assert_fail@plt+0xad80>
   1c2bc:	movw	r0, #0
   1c2c0:	str	r0, [sp, #4]
   1c2c4:	b	1c2c8 <__assert_fail@plt+0xad80>
   1c2c8:	ldr	r0, [sp, #4]
   1c2cc:	mov	sp, fp
   1c2d0:	pop	{fp, pc}
   1c2d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c2d8:	add	fp, sp, #28
   1c2dc:	sub	sp, sp, #196	; 0xc4
   1c2e0:	ldr	ip, [fp, #12]
   1c2e4:	ldr	lr, [fp, #8]
   1c2e8:	str	r0, [fp, #-32]	; 0xffffffe0
   1c2ec:	str	r1, [fp, #-36]	; 0xffffffdc
   1c2f0:	str	r2, [fp, #-40]	; 0xffffffd8
   1c2f4:	str	r3, [fp, #-44]	; 0xffffffd4
   1c2f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c2fc:	movw	r1, #0
   1c300:	cmp	r0, r1
   1c304:	beq	1c338 <__assert_fail@plt+0xadf0>
   1c308:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c30c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c310:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c314:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c318:	movw	ip, #23084	; 0x5a2c
   1c31c:	movt	ip, #2
   1c320:	str	r1, [fp, #-48]	; 0xffffffd0
   1c324:	mov	r1, ip
   1c328:	ldr	ip, [fp, #-48]	; 0xffffffd0
   1c32c:	str	ip, [sp]
   1c330:	bl	113f8 <fprintf@plt>
   1c334:	b	1c350 <__assert_fail@plt+0xae08>
   1c338:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c33c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c340:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c344:	movw	r1, #23096	; 0x5a38
   1c348:	movt	r1, #2
   1c34c:	bl	113f8 <fprintf@plt>
   1c350:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c354:	movw	r1, #23103	; 0x5a3f
   1c358:	movt	r1, #2
   1c35c:	str	r0, [fp, #-52]	; 0xffffffcc
   1c360:	mov	r0, r1
   1c364:	bl	113b0 <gettext@plt>
   1c368:	movw	r1, #23821	; 0x5d0d
   1c36c:	movt	r1, #2
   1c370:	movw	r3, #2022	; 0x7e6
   1c374:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1c378:	str	r0, [fp, #-56]	; 0xffffffc8
   1c37c:	mov	r0, r2
   1c380:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c384:	bl	113f8 <fprintf@plt>
   1c388:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c38c:	movw	r2, #20315	; 0x4f5b
   1c390:	movt	r2, #2
   1c394:	str	r0, [fp, #-60]	; 0xffffffc4
   1c398:	mov	r0, r2
   1c39c:	str	r2, [fp, #-64]	; 0xffffffc0
   1c3a0:	bl	11224 <fputs_unlocked@plt>
   1c3a4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c3a8:	movw	r2, #23107	; 0x5a43
   1c3ac:	movt	r2, #2
   1c3b0:	str	r0, [fp, #-68]	; 0xffffffbc
   1c3b4:	mov	r0, r2
   1c3b8:	str	r1, [fp, #-72]	; 0xffffffb8
   1c3bc:	bl	113b0 <gettext@plt>
   1c3c0:	movw	r2, #23278	; 0x5aee
   1c3c4:	movt	r2, #2
   1c3c8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1c3cc:	str	r0, [fp, #-76]	; 0xffffffb4
   1c3d0:	mov	r0, r1
   1c3d4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1c3d8:	bl	113f8 <fprintf@plt>
   1c3dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c3e0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1c3e4:	str	r0, [fp, #-80]	; 0xffffffb0
   1c3e8:	mov	r0, r2
   1c3ec:	bl	11224 <fputs_unlocked@plt>
   1c3f0:	ldr	r1, [fp, #12]
   1c3f4:	cmp	r1, #9
   1c3f8:	str	r1, [fp, #-84]	; 0xffffffac
   1c3fc:	bhi	1c818 <__assert_fail@plt+0xb2d0>
   1c400:	add	r0, pc, #8
   1c404:	ldr	r1, [fp, #-84]	; 0xffffffac
   1c408:	ldr	r0, [r0, r1, lsl #2]
   1c40c:	mov	pc, r0
   1c410:	andeq	ip, r1, r8, lsr r4
   1c414:	andeq	ip, r1, ip, lsr r4
   1c418:	andeq	ip, r1, r4, ror r4
   1c41c:			; <UNDEFINED> instruction: 0x0001c4b4
   1c420:	andeq	ip, r1, ip, lsl #10
   1c424:	andeq	ip, r1, r0, ror r5
   1c428:	andeq	ip, r1, r0, ror #11
   1c42c:	andeq	ip, r1, ip, asr r6
   1c430:	andeq	ip, r1, r4, ror #13
   1c434:	andeq	ip, r1, r8, ror r7
   1c438:	b	1c8b4 <__assert_fail@plt+0xb36c>
   1c43c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c440:	movw	r1, #23312	; 0x5b10
   1c444:	movt	r1, #2
   1c448:	str	r0, [fp, #-88]	; 0xffffffa8
   1c44c:	mov	r0, r1
   1c450:	bl	113b0 <gettext@plt>
   1c454:	ldr	r1, [fp, #8]
   1c458:	ldr	r2, [r1]
   1c45c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1c460:	str	r0, [fp, #-92]	; 0xffffffa4
   1c464:	mov	r0, r1
   1c468:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1c46c:	bl	113f8 <fprintf@plt>
   1c470:	b	1c8b4 <__assert_fail@plt+0xb36c>
   1c474:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c478:	movw	r1, #23328	; 0x5b20
   1c47c:	movt	r1, #2
   1c480:	str	r0, [fp, #-96]	; 0xffffffa0
   1c484:	mov	r0, r1
   1c488:	bl	113b0 <gettext@plt>
   1c48c:	ldr	r1, [fp, #8]
   1c490:	ldr	r2, [r1]
   1c494:	ldr	r1, [fp, #8]
   1c498:	ldr	r3, [r1, #4]
   1c49c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1c4a0:	str	r0, [fp, #-100]	; 0xffffff9c
   1c4a4:	mov	r0, r1
   1c4a8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1c4ac:	bl	113f8 <fprintf@plt>
   1c4b0:	b	1c8b4 <__assert_fail@plt+0xb36c>
   1c4b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c4b8:	movw	r1, #23351	; 0x5b37
   1c4bc:	movt	r1, #2
   1c4c0:	str	r0, [fp, #-104]	; 0xffffff98
   1c4c4:	mov	r0, r1
   1c4c8:	bl	113b0 <gettext@plt>
   1c4cc:	ldr	r1, [fp, #8]
   1c4d0:	ldr	r2, [r1]
   1c4d4:	ldr	r1, [fp, #8]
   1c4d8:	ldr	r3, [r1, #4]
   1c4dc:	ldr	r1, [fp, #8]
   1c4e0:	ldr	r1, [r1, #8]
   1c4e4:	ldr	ip, [fp, #-104]	; 0xffffff98
   1c4e8:	str	r0, [fp, #-108]	; 0xffffff94
   1c4ec:	mov	r0, ip
   1c4f0:	ldr	lr, [fp, #-108]	; 0xffffff94
   1c4f4:	str	r1, [sp, #112]	; 0x70
   1c4f8:	mov	r1, lr
   1c4fc:	ldr	r4, [sp, #112]	; 0x70
   1c500:	str	r4, [sp]
   1c504:	bl	113f8 <fprintf@plt>
   1c508:	b	1c8b4 <__assert_fail@plt+0xb36c>
   1c50c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c510:	movw	r1, #23379	; 0x5b53
   1c514:	movt	r1, #2
   1c518:	str	r0, [sp, #108]	; 0x6c
   1c51c:	mov	r0, r1
   1c520:	bl	113b0 <gettext@plt>
   1c524:	ldr	r1, [fp, #8]
   1c528:	ldr	r2, [r1]
   1c52c:	ldr	r1, [fp, #8]
   1c530:	ldr	r3, [r1, #4]
   1c534:	ldr	r1, [fp, #8]
   1c538:	ldr	r1, [r1, #8]
   1c53c:	ldr	ip, [fp, #8]
   1c540:	ldr	ip, [ip, #12]
   1c544:	ldr	lr, [sp, #108]	; 0x6c
   1c548:	str	r0, [sp, #104]	; 0x68
   1c54c:	mov	r0, lr
   1c550:	ldr	r4, [sp, #104]	; 0x68
   1c554:	str	r1, [sp, #100]	; 0x64
   1c558:	mov	r1, r4
   1c55c:	ldr	r5, [sp, #100]	; 0x64
   1c560:	str	r5, [sp]
   1c564:	str	ip, [sp, #4]
   1c568:	bl	113f8 <fprintf@plt>
   1c56c:	b	1c8b4 <__assert_fail@plt+0xb36c>
   1c570:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c574:	movw	r1, #23411	; 0x5b73
   1c578:	movt	r1, #2
   1c57c:	str	r0, [sp, #96]	; 0x60
   1c580:	mov	r0, r1
   1c584:	bl	113b0 <gettext@plt>
   1c588:	ldr	r1, [fp, #8]
   1c58c:	ldr	r2, [r1]
   1c590:	ldr	r1, [fp, #8]
   1c594:	ldr	r3, [r1, #4]
   1c598:	ldr	r1, [fp, #8]
   1c59c:	ldr	r1, [r1, #8]
   1c5a0:	ldr	ip, [fp, #8]
   1c5a4:	ldr	ip, [ip, #12]
   1c5a8:	ldr	lr, [fp, #8]
   1c5ac:	ldr	lr, [lr, #16]
   1c5b0:	ldr	r4, [sp, #96]	; 0x60
   1c5b4:	str	r0, [sp, #92]	; 0x5c
   1c5b8:	mov	r0, r4
   1c5bc:	ldr	r5, [sp, #92]	; 0x5c
   1c5c0:	str	r1, [sp, #88]	; 0x58
   1c5c4:	mov	r1, r5
   1c5c8:	ldr	r6, [sp, #88]	; 0x58
   1c5cc:	str	r6, [sp]
   1c5d0:	str	ip, [sp, #4]
   1c5d4:	str	lr, [sp, #8]
   1c5d8:	bl	113f8 <fprintf@plt>
   1c5dc:	b	1c8b4 <__assert_fail@plt+0xb36c>
   1c5e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c5e4:	movw	r1, #23447	; 0x5b97
   1c5e8:	movt	r1, #2
   1c5ec:	str	r0, [sp, #84]	; 0x54
   1c5f0:	mov	r0, r1
   1c5f4:	bl	113b0 <gettext@plt>
   1c5f8:	ldr	r1, [fp, #8]
   1c5fc:	ldr	r2, [r1]
   1c600:	ldr	r1, [fp, #8]
   1c604:	ldr	r3, [r1, #4]
   1c608:	ldr	r1, [fp, #8]
   1c60c:	ldr	r1, [r1, #8]
   1c610:	ldr	ip, [fp, #8]
   1c614:	ldr	ip, [ip, #12]
   1c618:	ldr	lr, [fp, #8]
   1c61c:	ldr	lr, [lr, #16]
   1c620:	ldr	r4, [fp, #8]
   1c624:	ldr	r4, [r4, #20]
   1c628:	ldr	r5, [sp, #84]	; 0x54
   1c62c:	str	r0, [sp, #80]	; 0x50
   1c630:	mov	r0, r5
   1c634:	ldr	r6, [sp, #80]	; 0x50
   1c638:	str	r1, [sp, #76]	; 0x4c
   1c63c:	mov	r1, r6
   1c640:	ldr	r7, [sp, #76]	; 0x4c
   1c644:	str	r7, [sp]
   1c648:	str	ip, [sp, #4]
   1c64c:	str	lr, [sp, #8]
   1c650:	str	r4, [sp, #12]
   1c654:	bl	113f8 <fprintf@plt>
   1c658:	b	1c8b4 <__assert_fail@plt+0xb36c>
   1c65c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c660:	movw	r1, #23487	; 0x5bbf
   1c664:	movt	r1, #2
   1c668:	str	r0, [sp, #72]	; 0x48
   1c66c:	mov	r0, r1
   1c670:	bl	113b0 <gettext@plt>
   1c674:	ldr	r1, [fp, #8]
   1c678:	ldr	r2, [r1]
   1c67c:	ldr	r1, [fp, #8]
   1c680:	ldr	r3, [r1, #4]
   1c684:	ldr	r1, [fp, #8]
   1c688:	ldr	r1, [r1, #8]
   1c68c:	ldr	ip, [fp, #8]
   1c690:	ldr	ip, [ip, #12]
   1c694:	ldr	lr, [fp, #8]
   1c698:	ldr	lr, [lr, #16]
   1c69c:	ldr	r4, [fp, #8]
   1c6a0:	ldr	r4, [r4, #20]
   1c6a4:	ldr	r5, [fp, #8]
   1c6a8:	ldr	r5, [r5, #24]
   1c6ac:	ldr	r6, [sp, #72]	; 0x48
   1c6b0:	str	r0, [sp, #68]	; 0x44
   1c6b4:	mov	r0, r6
   1c6b8:	ldr	r7, [sp, #68]	; 0x44
   1c6bc:	str	r1, [sp, #64]	; 0x40
   1c6c0:	mov	r1, r7
   1c6c4:	ldr	r8, [sp, #64]	; 0x40
   1c6c8:	str	r8, [sp]
   1c6cc:	str	ip, [sp, #4]
   1c6d0:	str	lr, [sp, #8]
   1c6d4:	str	r4, [sp, #12]
   1c6d8:	str	r5, [sp, #16]
   1c6dc:	bl	113f8 <fprintf@plt>
   1c6e0:	b	1c8b4 <__assert_fail@plt+0xb36c>
   1c6e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c6e8:	movw	r1, #23531	; 0x5beb
   1c6ec:	movt	r1, #2
   1c6f0:	str	r0, [sp, #60]	; 0x3c
   1c6f4:	mov	r0, r1
   1c6f8:	bl	113b0 <gettext@plt>
   1c6fc:	ldr	r1, [fp, #8]
   1c700:	ldr	r2, [r1]
   1c704:	ldr	r1, [fp, #8]
   1c708:	ldr	r3, [r1, #4]
   1c70c:	ldr	r1, [fp, #8]
   1c710:	ldr	r1, [r1, #8]
   1c714:	ldr	ip, [fp, #8]
   1c718:	ldr	ip, [ip, #12]
   1c71c:	ldr	lr, [fp, #8]
   1c720:	ldr	lr, [lr, #16]
   1c724:	ldr	r4, [fp, #8]
   1c728:	ldr	r4, [r4, #20]
   1c72c:	ldr	r5, [fp, #8]
   1c730:	ldr	r5, [r5, #24]
   1c734:	ldr	r6, [fp, #8]
   1c738:	ldr	r6, [r6, #28]
   1c73c:	ldr	r7, [sp, #60]	; 0x3c
   1c740:	str	r0, [sp, #56]	; 0x38
   1c744:	mov	r0, r7
   1c748:	ldr	r8, [sp, #56]	; 0x38
   1c74c:	str	r1, [sp, #52]	; 0x34
   1c750:	mov	r1, r8
   1c754:	ldr	r9, [sp, #52]	; 0x34
   1c758:	str	r9, [sp]
   1c75c:	str	ip, [sp, #4]
   1c760:	str	lr, [sp, #8]
   1c764:	str	r4, [sp, #12]
   1c768:	str	r5, [sp, #16]
   1c76c:	str	r6, [sp, #20]
   1c770:	bl	113f8 <fprintf@plt>
   1c774:	b	1c8b4 <__assert_fail@plt+0xb36c>
   1c778:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c77c:	movw	r1, #23579	; 0x5c1b
   1c780:	movt	r1, #2
   1c784:	str	r0, [sp, #48]	; 0x30
   1c788:	mov	r0, r1
   1c78c:	bl	113b0 <gettext@plt>
   1c790:	ldr	r1, [fp, #8]
   1c794:	ldr	r2, [r1]
   1c798:	ldr	r1, [fp, #8]
   1c79c:	ldr	r3, [r1, #4]
   1c7a0:	ldr	r1, [fp, #8]
   1c7a4:	ldr	r1, [r1, #8]
   1c7a8:	ldr	ip, [fp, #8]
   1c7ac:	ldr	ip, [ip, #12]
   1c7b0:	ldr	lr, [fp, #8]
   1c7b4:	ldr	lr, [lr, #16]
   1c7b8:	ldr	r4, [fp, #8]
   1c7bc:	ldr	r4, [r4, #20]
   1c7c0:	ldr	r5, [fp, #8]
   1c7c4:	ldr	r5, [r5, #24]
   1c7c8:	ldr	r6, [fp, #8]
   1c7cc:	ldr	r6, [r6, #28]
   1c7d0:	ldr	r7, [fp, #8]
   1c7d4:	ldr	r7, [r7, #32]
   1c7d8:	ldr	r8, [sp, #48]	; 0x30
   1c7dc:	str	r0, [sp, #44]	; 0x2c
   1c7e0:	mov	r0, r8
   1c7e4:	ldr	r9, [sp, #44]	; 0x2c
   1c7e8:	str	r1, [sp, #40]	; 0x28
   1c7ec:	mov	r1, r9
   1c7f0:	ldr	sl, [sp, #40]	; 0x28
   1c7f4:	str	sl, [sp]
   1c7f8:	str	ip, [sp, #4]
   1c7fc:	str	lr, [sp, #8]
   1c800:	str	r4, [sp, #12]
   1c804:	str	r5, [sp, #16]
   1c808:	str	r6, [sp, #20]
   1c80c:	str	r7, [sp, #24]
   1c810:	bl	113f8 <fprintf@plt>
   1c814:	b	1c8b4 <__assert_fail@plt+0xb36c>
   1c818:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c81c:	movw	r1, #23631	; 0x5c4f
   1c820:	movt	r1, #2
   1c824:	str	r0, [sp, #36]	; 0x24
   1c828:	mov	r0, r1
   1c82c:	bl	113b0 <gettext@plt>
   1c830:	ldr	r1, [fp, #8]
   1c834:	ldr	r2, [r1]
   1c838:	ldr	r1, [fp, #8]
   1c83c:	ldr	r3, [r1, #4]
   1c840:	ldr	r1, [fp, #8]
   1c844:	ldr	r1, [r1, #8]
   1c848:	ldr	ip, [fp, #8]
   1c84c:	ldr	ip, [ip, #12]
   1c850:	ldr	lr, [fp, #8]
   1c854:	ldr	lr, [lr, #16]
   1c858:	ldr	r4, [fp, #8]
   1c85c:	ldr	r4, [r4, #20]
   1c860:	ldr	r5, [fp, #8]
   1c864:	ldr	r5, [r5, #24]
   1c868:	ldr	r6, [fp, #8]
   1c86c:	ldr	r6, [r6, #28]
   1c870:	ldr	r7, [fp, #8]
   1c874:	ldr	r7, [r7, #32]
   1c878:	ldr	r8, [sp, #36]	; 0x24
   1c87c:	str	r0, [sp, #32]
   1c880:	mov	r0, r8
   1c884:	ldr	r9, [sp, #32]
   1c888:	str	r1, [sp, #28]
   1c88c:	mov	r1, r9
   1c890:	ldr	sl, [sp, #28]
   1c894:	str	sl, [sp]
   1c898:	str	ip, [sp, #4]
   1c89c:	str	lr, [sp, #8]
   1c8a0:	str	r4, [sp, #12]
   1c8a4:	str	r5, [sp, #16]
   1c8a8:	str	r6, [sp, #20]
   1c8ac:	str	r7, [sp, #24]
   1c8b0:	bl	113f8 <fprintf@plt>
   1c8b4:	sub	sp, fp, #28
   1c8b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c8bc:	push	{fp, lr}
   1c8c0:	mov	fp, sp
   1c8c4:	sub	sp, sp, #32
   1c8c8:	ldr	ip, [fp, #8]
   1c8cc:	str	r0, [fp, #-4]
   1c8d0:	str	r1, [fp, #-8]
   1c8d4:	str	r2, [fp, #-12]
   1c8d8:	str	r3, [sp, #16]
   1c8dc:	movw	r0, #0
   1c8e0:	str	r0, [sp, #12]
   1c8e4:	ldr	r0, [fp, #8]
   1c8e8:	ldr	r1, [sp, #12]
   1c8ec:	add	r0, r0, r1, lsl #2
   1c8f0:	ldr	r0, [r0]
   1c8f4:	movw	r1, #0
   1c8f8:	cmp	r0, r1
   1c8fc:	beq	1c914 <__assert_fail@plt+0xb3cc>
   1c900:	b	1c904 <__assert_fail@plt+0xb3bc>
   1c904:	ldr	r0, [sp, #12]
   1c908:	add	r0, r0, #1
   1c90c:	str	r0, [sp, #12]
   1c910:	b	1c8e4 <__assert_fail@plt+0xb39c>
   1c914:	ldr	r0, [fp, #-4]
   1c918:	ldr	r1, [fp, #-8]
   1c91c:	ldr	r2, [fp, #-12]
   1c920:	ldr	r3, [sp, #16]
   1c924:	ldr	ip, [fp, #8]
   1c928:	ldr	lr, [sp, #12]
   1c92c:	str	ip, [sp]
   1c930:	str	lr, [sp, #4]
   1c934:	bl	1c2d4 <__assert_fail@plt+0xad8c>
   1c938:	mov	sp, fp
   1c93c:	pop	{fp, pc}
   1c940:	push	{fp, lr}
   1c944:	mov	fp, sp
   1c948:	sub	sp, sp, #80	; 0x50
   1c94c:	ldr	ip, [fp, #8]
   1c950:	str	ip, [fp, #-4]
   1c954:	str	r0, [fp, #-8]
   1c958:	str	r1, [fp, #-12]
   1c95c:	str	r2, [fp, #-16]
   1c960:	str	r3, [fp, #-20]	; 0xffffffec
   1c964:	movw	r0, #0
   1c968:	str	r0, [fp, #-24]	; 0xffffffe8
   1c96c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c970:	cmp	r0, #10
   1c974:	movw	r0, #0
   1c978:	str	r0, [sp, #12]
   1c97c:	bcs	1c9b4 <__assert_fail@plt+0xb46c>
   1c980:	ldr	r0, [fp, #-4]
   1c984:	add	r1, r0, #4
   1c988:	str	r1, [fp, #-4]
   1c98c:	ldr	r0, [r0]
   1c990:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c994:	add	r2, sp, #16
   1c998:	add	r1, r2, r1, lsl #2
   1c99c:	str	r0, [r1]
   1c9a0:	movw	r1, #0
   1c9a4:	cmp	r0, r1
   1c9a8:	movw	r0, #0
   1c9ac:	movne	r0, #1
   1c9b0:	str	r0, [sp, #12]
   1c9b4:	ldr	r0, [sp, #12]
   1c9b8:	tst	r0, #1
   1c9bc:	beq	1c9d4 <__assert_fail@plt+0xb48c>
   1c9c0:	b	1c9c4 <__assert_fail@plt+0xb47c>
   1c9c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c9c8:	add	r0, r0, #1
   1c9cc:	str	r0, [fp, #-24]	; 0xffffffe8
   1c9d0:	b	1c96c <__assert_fail@plt+0xb424>
   1c9d4:	add	r0, sp, #16
   1c9d8:	ldr	r1, [fp, #-8]
   1c9dc:	ldr	r2, [fp, #-12]
   1c9e0:	ldr	r3, [fp, #-16]
   1c9e4:	ldr	ip, [fp, #-20]	; 0xffffffec
   1c9e8:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1c9ec:	str	r0, [sp, #8]
   1c9f0:	mov	r0, r1
   1c9f4:	mov	r1, r2
   1c9f8:	mov	r2, r3
   1c9fc:	mov	r3, ip
   1ca00:	ldr	ip, [sp, #8]
   1ca04:	str	ip, [sp]
   1ca08:	str	lr, [sp, #4]
   1ca0c:	bl	1c2d4 <__assert_fail@plt+0xad8c>
   1ca10:	mov	sp, fp
   1ca14:	pop	{fp, pc}
   1ca18:	push	{fp, lr}
   1ca1c:	mov	fp, sp
   1ca20:	sub	sp, sp, #24
   1ca24:	str	r0, [fp, #-4]
   1ca28:	str	r1, [fp, #-8]
   1ca2c:	str	r2, [sp, #12]
   1ca30:	str	r3, [sp, #8]
   1ca34:	add	r0, fp, #8
   1ca38:	str	r0, [sp, #4]
   1ca3c:	ldr	r0, [fp, #-4]
   1ca40:	ldr	r1, [fp, #-8]
   1ca44:	ldr	r2, [sp, #12]
   1ca48:	ldr	r3, [sp, #8]
   1ca4c:	ldr	ip, [sp, #4]
   1ca50:	mov	lr, sp
   1ca54:	str	ip, [lr]
   1ca58:	bl	1c940 <__assert_fail@plt+0xb3f8>
   1ca5c:	add	r0, sp, #4
   1ca60:	mov	sp, fp
   1ca64:	pop	{fp, pc}
   1ca68:	push	{fp, lr}
   1ca6c:	mov	fp, sp
   1ca70:	sub	sp, sp, #16
   1ca74:	movw	r0, #24988	; 0x619c
   1ca78:	movt	r0, #3
   1ca7c:	ldr	r1, [r0]
   1ca80:	movw	r0, #20315	; 0x4f5b
   1ca84:	movt	r0, #2
   1ca88:	bl	11224 <fputs_unlocked@plt>
   1ca8c:	movw	r1, #23691	; 0x5c8b
   1ca90:	movt	r1, #2
   1ca94:	str	r0, [fp, #-4]
   1ca98:	mov	r0, r1
   1ca9c:	bl	113b0 <gettext@plt>
   1caa0:	movw	r1, #23711	; 0x5c9f
   1caa4:	movt	r1, #2
   1caa8:	bl	11260 <printf@plt>
   1caac:	movw	r1, #23733	; 0x5cb5
   1cab0:	movt	r1, #2
   1cab4:	str	r0, [sp, #8]
   1cab8:	mov	r0, r1
   1cabc:	bl	113b0 <gettext@plt>
   1cac0:	movw	r1, #20855	; 0x5177
   1cac4:	movt	r1, #2
   1cac8:	movw	r2, #21130	; 0x528a
   1cacc:	movt	r2, #2
   1cad0:	bl	11260 <printf@plt>
   1cad4:	movw	r1, #23753	; 0x5cc9
   1cad8:	movt	r1, #2
   1cadc:	str	r0, [sp, #4]
   1cae0:	mov	r0, r1
   1cae4:	bl	113b0 <gettext@plt>
   1cae8:	movw	r1, #23792	; 0x5cf0
   1caec:	movt	r1, #2
   1caf0:	bl	11260 <printf@plt>
   1caf4:	mov	sp, fp
   1caf8:	pop	{fp, pc}
   1cafc:	push	{fp, lr}
   1cb00:	mov	fp, sp
   1cb04:	sub	sp, sp, #16
   1cb08:	str	r0, [fp, #-4]
   1cb0c:	str	r1, [sp, #8]
   1cb10:	str	r2, [sp, #4]
   1cb14:	ldr	r0, [fp, #-4]
   1cb18:	ldr	r1, [sp, #8]
   1cb1c:	ldr	r2, [sp, #4]
   1cb20:	bl	1cb2c <__assert_fail@plt+0xb5e4>
   1cb24:	mov	sp, fp
   1cb28:	pop	{fp, pc}
   1cb2c:	push	{fp, lr}
   1cb30:	mov	fp, sp
   1cb34:	sub	sp, sp, #16
   1cb38:	str	r0, [fp, #-4]
   1cb3c:	str	r1, [sp, #8]
   1cb40:	str	r2, [sp, #4]
   1cb44:	ldr	r0, [fp, #-4]
   1cb48:	ldr	r1, [sp, #8]
   1cb4c:	ldr	r2, [sp, #4]
   1cb50:	bl	228f0 <__assert_fail@plt+0x113a8>
   1cb54:	str	r0, [sp]
   1cb58:	ldr	r0, [sp]
   1cb5c:	movw	r1, #0
   1cb60:	cmp	r0, r1
   1cb64:	bne	1cb94 <__assert_fail@plt+0xb64c>
   1cb68:	ldr	r0, [fp, #-4]
   1cb6c:	movw	r1, #0
   1cb70:	cmp	r0, r1
   1cb74:	beq	1cb90 <__assert_fail@plt+0xb648>
   1cb78:	ldr	r0, [sp, #8]
   1cb7c:	cmp	r0, #0
   1cb80:	beq	1cb94 <__assert_fail@plt+0xb64c>
   1cb84:	ldr	r0, [sp, #4]
   1cb88:	cmp	r0, #0
   1cb8c:	beq	1cb94 <__assert_fail@plt+0xb64c>
   1cb90:	bl	1f8d8 <__assert_fail@plt+0xe390>
   1cb94:	ldr	r0, [sp]
   1cb98:	mov	sp, fp
   1cb9c:	pop	{fp, pc}
   1cba0:	push	{fp, lr}
   1cba4:	mov	fp, sp
   1cba8:	sub	sp, sp, #8
   1cbac:	str	r0, [sp, #4]
   1cbb0:	ldr	r0, [sp, #4]
   1cbb4:	bl	217a4 <__assert_fail@plt+0x1025c>
   1cbb8:	bl	1cbc4 <__assert_fail@plt+0xb67c>
   1cbbc:	mov	sp, fp
   1cbc0:	pop	{fp, pc}
   1cbc4:	push	{fp, lr}
   1cbc8:	mov	fp, sp
   1cbcc:	sub	sp, sp, #8
   1cbd0:	str	r0, [sp, #4]
   1cbd4:	ldr	r0, [sp, #4]
   1cbd8:	movw	r1, #0
   1cbdc:	cmp	r0, r1
   1cbe0:	bne	1cbe8 <__assert_fail@plt+0xb6a0>
   1cbe4:	bl	1f8d8 <__assert_fail@plt+0xe390>
   1cbe8:	ldr	r0, [sp, #4]
   1cbec:	mov	sp, fp
   1cbf0:	pop	{fp, pc}
   1cbf4:	push	{fp, lr}
   1cbf8:	mov	fp, sp
   1cbfc:	sub	sp, sp, #8
   1cc00:	str	r0, [sp, #4]
   1cc04:	ldr	r0, [sp, #4]
   1cc08:	bl	2262c <__assert_fail@plt+0x110e4>
   1cc0c:	bl	1cbc4 <__assert_fail@plt+0xb67c>
   1cc10:	mov	sp, fp
   1cc14:	pop	{fp, pc}
   1cc18:	push	{fp, lr}
   1cc1c:	mov	fp, sp
   1cc20:	sub	sp, sp, #8
   1cc24:	str	r0, [sp, #4]
   1cc28:	ldr	r0, [sp, #4]
   1cc2c:	bl	1cba0 <__assert_fail@plt+0xb658>
   1cc30:	mov	sp, fp
   1cc34:	pop	{fp, pc}
   1cc38:	push	{fp, lr}
   1cc3c:	mov	fp, sp
   1cc40:	sub	sp, sp, #16
   1cc44:	str	r0, [fp, #-4]
   1cc48:	str	r1, [sp, #8]
   1cc4c:	ldr	r0, [fp, #-4]
   1cc50:	ldr	r1, [sp, #8]
   1cc54:	bl	21814 <__assert_fail@plt+0x102cc>
   1cc58:	str	r0, [sp, #4]
   1cc5c:	ldr	r0, [sp, #4]
   1cc60:	movw	r1, #0
   1cc64:	cmp	r0, r1
   1cc68:	bne	1cc8c <__assert_fail@plt+0xb744>
   1cc6c:	ldr	r0, [fp, #-4]
   1cc70:	movw	r1, #0
   1cc74:	cmp	r0, r1
   1cc78:	beq	1cc88 <__assert_fail@plt+0xb740>
   1cc7c:	ldr	r0, [sp, #8]
   1cc80:	cmp	r0, #0
   1cc84:	beq	1cc8c <__assert_fail@plt+0xb744>
   1cc88:	bl	1f8d8 <__assert_fail@plt+0xe390>
   1cc8c:	ldr	r0, [sp, #4]
   1cc90:	mov	sp, fp
   1cc94:	pop	{fp, pc}
   1cc98:	push	{fp, lr}
   1cc9c:	mov	fp, sp
   1cca0:	sub	sp, sp, #8
   1cca4:	str	r0, [sp, #4]
   1cca8:	str	r1, [sp]
   1ccac:	ldr	r0, [sp, #4]
   1ccb0:	ldr	r1, [sp]
   1ccb4:	bl	2266c <__assert_fail@plt+0x11124>
   1ccb8:	bl	1cbc4 <__assert_fail@plt+0xb67c>
   1ccbc:	mov	sp, fp
   1ccc0:	pop	{fp, pc}
   1ccc4:	push	{fp, lr}
   1ccc8:	mov	fp, sp
   1cccc:	sub	sp, sp, #16
   1ccd0:	str	r0, [fp, #-4]
   1ccd4:	str	r1, [sp, #8]
   1ccd8:	str	r2, [sp, #4]
   1ccdc:	ldr	r0, [fp, #-4]
   1cce0:	ldr	r1, [sp, #8]
   1cce4:	ldr	r2, [sp, #4]
   1cce8:	bl	22764 <__assert_fail@plt+0x1121c>
   1ccec:	bl	1cbc4 <__assert_fail@plt+0xb67c>
   1ccf0:	mov	sp, fp
   1ccf4:	pop	{fp, pc}
   1ccf8:	push	{fp, lr}
   1ccfc:	mov	fp, sp
   1cd00:	sub	sp, sp, #8
   1cd04:	str	r0, [sp, #4]
   1cd08:	str	r1, [sp]
   1cd0c:	ldr	r1, [sp, #4]
   1cd10:	ldr	r2, [sp]
   1cd14:	movw	r0, #0
   1cd18:	bl	1cb2c <__assert_fail@plt+0xb5e4>
   1cd1c:	mov	sp, fp
   1cd20:	pop	{fp, pc}
   1cd24:	push	{fp, lr}
   1cd28:	mov	fp, sp
   1cd2c:	sub	sp, sp, #8
   1cd30:	str	r0, [sp, #4]
   1cd34:	str	r1, [sp]
   1cd38:	ldr	r1, [sp, #4]
   1cd3c:	ldr	r2, [sp]
   1cd40:	movw	r0, #0
   1cd44:	bl	1ccc4 <__assert_fail@plt+0xb77c>
   1cd48:	mov	sp, fp
   1cd4c:	pop	{fp, pc}
   1cd50:	push	{fp, lr}
   1cd54:	mov	fp, sp
   1cd58:	sub	sp, sp, #8
   1cd5c:	str	r0, [sp, #4]
   1cd60:	str	r1, [sp]
   1cd64:	ldr	r0, [sp, #4]
   1cd68:	ldr	r1, [sp]
   1cd6c:	movw	r2, #1
   1cd70:	bl	1cd7c <__assert_fail@plt+0xb834>
   1cd74:	mov	sp, fp
   1cd78:	pop	{fp, pc}
   1cd7c:	push	{fp, lr}
   1cd80:	mov	fp, sp
   1cd84:	sub	sp, sp, #16
   1cd88:	str	r0, [fp, #-4]
   1cd8c:	str	r1, [sp, #8]
   1cd90:	str	r2, [sp, #4]
   1cd94:	ldr	r0, [sp, #8]
   1cd98:	ldr	r0, [r0]
   1cd9c:	str	r0, [sp]
   1cda0:	ldr	r0, [fp, #-4]
   1cda4:	movw	r1, #0
   1cda8:	cmp	r0, r1
   1cdac:	bne	1cdf8 <__assert_fail@plt+0xb8b0>
   1cdb0:	ldr	r0, [sp]
   1cdb4:	cmp	r0, #0
   1cdb8:	bne	1cdf4 <__assert_fail@plt+0xb8ac>
   1cdbc:	ldr	r0, [sp, #4]
   1cdc0:	movw	r1, #64	; 0x40
   1cdc4:	udiv	r0, r1, r0
   1cdc8:	str	r0, [sp]
   1cdcc:	ldr	r0, [sp]
   1cdd0:	cmp	r0, #0
   1cdd4:	movw	r0, #0
   1cdd8:	movne	r0, #1
   1cddc:	mvn	r1, #0
   1cde0:	eor	r0, r0, r1
   1cde4:	and	r0, r0, #1
   1cde8:	ldr	r1, [sp]
   1cdec:	add	r0, r1, r0
   1cdf0:	str	r0, [sp]
   1cdf4:	b	1ce28 <__assert_fail@plt+0xb8e0>
   1cdf8:	ldr	r0, [sp]
   1cdfc:	ldr	r1, [sp]
   1ce00:	lsr	r1, r1, #1
   1ce04:	add	r1, r1, #1
   1ce08:	adds	r0, r0, r1
   1ce0c:	mov	r1, #0
   1ce10:	adc	r1, r1, #0
   1ce14:	str	r0, [sp]
   1ce18:	tst	r1, #1
   1ce1c:	beq	1ce24 <__assert_fail@plt+0xb8dc>
   1ce20:	bl	1f8d8 <__assert_fail@plt+0xe390>
   1ce24:	b	1ce28 <__assert_fail@plt+0xb8e0>
   1ce28:	ldr	r0, [fp, #-4]
   1ce2c:	ldr	r1, [sp]
   1ce30:	ldr	r2, [sp, #4]
   1ce34:	bl	1cb2c <__assert_fail@plt+0xb5e4>
   1ce38:	str	r0, [fp, #-4]
   1ce3c:	ldr	r0, [sp]
   1ce40:	ldr	r1, [sp, #8]
   1ce44:	str	r0, [r1]
   1ce48:	ldr	r0, [fp, #-4]
   1ce4c:	mov	sp, fp
   1ce50:	pop	{fp, pc}
   1ce54:	push	{fp, lr}
   1ce58:	mov	fp, sp
   1ce5c:	sub	sp, sp, #216	; 0xd8
   1ce60:	ldr	ip, [fp, #8]
   1ce64:	str	r0, [fp, #-4]
   1ce68:	str	r1, [fp, #-8]
   1ce6c:	str	r2, [fp, #-12]
   1ce70:	str	r3, [fp, #-16]
   1ce74:	ldr	r0, [fp, #-8]
   1ce78:	ldr	r0, [r0]
   1ce7c:	str	r0, [fp, #-20]	; 0xffffffec
   1ce80:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ce84:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ce88:	asr	r1, r1, #1
   1ce8c:	add	r1, r0, r1
   1ce90:	mov	r2, #1
   1ce94:	cmp	r1, r0
   1ce98:	movwvc	r2, #0
   1ce9c:	str	r1, [fp, #-24]	; 0xffffffe8
   1cea0:	tst	r2, #1
   1cea4:	beq	1ceb0 <__assert_fail@plt+0xb968>
   1cea8:	ldr	r0, [pc, #4036]	; 1de74 <__assert_fail@plt+0xc92c>
   1ceac:	str	r0, [fp, #-24]	; 0xffffffe8
   1ceb0:	ldr	r0, [fp, #-16]
   1ceb4:	movw	r1, #0
   1ceb8:	cmp	r1, r0
   1cebc:	bgt	1ced8 <__assert_fail@plt+0xb990>
   1cec0:	ldr	r0, [fp, #-16]
   1cec4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cec8:	cmp	r0, r1
   1cecc:	bge	1ced8 <__assert_fail@plt+0xb990>
   1ced0:	ldr	r0, [fp, #-16]
   1ced4:	str	r0, [fp, #-24]	; 0xffffffe8
   1ced8:	b	1d2b0 <__assert_fail@plt+0xbd68>
   1cedc:	b	1cee0 <__assert_fail@plt+0xb998>
   1cee0:	ldr	r0, [fp, #8]
   1cee4:	cmp	r0, #0
   1cee8:	bge	1cffc <__assert_fail@plt+0xbab4>
   1ceec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cef0:	cmp	r0, #0
   1cef4:	bge	1cf80 <__assert_fail@plt+0xba38>
   1cef8:	b	1cefc <__assert_fail@plt+0xb9b4>
   1cefc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf00:	ldr	r1, [fp, #8]
   1cf04:	movw	r2, #127	; 0x7f
   1cf08:	sdiv	r1, r2, r1
   1cf0c:	cmp	r0, r1
   1cf10:	blt	1d09c <__assert_fail@plt+0xbb54>
   1cf14:	b	1d0b4 <__assert_fail@plt+0xbb6c>
   1cf18:	b	1cf1c <__assert_fail@plt+0xb9d4>
   1cf1c:	ldr	r0, [pc, #4084]	; 1df18 <__assert_fail@plt+0xc9d0>
   1cf20:	ldr	r1, [fp, #8]
   1cf24:	cmp	r1, r0
   1cf28:	blt	1cf40 <__assert_fail@plt+0xb9f8>
   1cf2c:	b	1cf4c <__assert_fail@plt+0xba04>
   1cf30:	ldr	r0, [fp, #8]
   1cf34:	movw	r1, #0
   1cf38:	cmp	r1, r0
   1cf3c:	bge	1cf4c <__assert_fail@plt+0xba04>
   1cf40:	movw	r0, #0
   1cf44:	str	r0, [fp, #-36]	; 0xffffffdc
   1cf48:	b	1cf64 <__assert_fail@plt+0xba1c>
   1cf4c:	ldr	r0, [fp, #8]
   1cf50:	movw	r1, #0
   1cf54:	sub	r0, r1, r0
   1cf58:	movw	r1, #127	; 0x7f
   1cf5c:	sdiv	r0, r1, r0
   1cf60:	str	r0, [fp, #-36]	; 0xffffffdc
   1cf64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1cf68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cf6c:	mvn	r2, #0
   1cf70:	sub	r1, r2, r1
   1cf74:	cmp	r0, r1
   1cf78:	ble	1d09c <__assert_fail@plt+0xbb54>
   1cf7c:	b	1d0b4 <__assert_fail@plt+0xbb6c>
   1cf80:	b	1cf84 <__assert_fail@plt+0xba3c>
   1cf84:	b	1cfe0 <__assert_fail@plt+0xba98>
   1cf88:	b	1cfe0 <__assert_fail@plt+0xba98>
   1cf8c:	ldr	r0, [fp, #8]
   1cf90:	cmn	r0, #1
   1cf94:	bne	1cfe0 <__assert_fail@plt+0xba98>
   1cf98:	b	1cf9c <__assert_fail@plt+0xba54>
   1cf9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cfa0:	mvn	r1, #127	; 0x7f
   1cfa4:	add	r0, r0, r1
   1cfa8:	movw	r1, #0
   1cfac:	cmp	r1, r0
   1cfb0:	blt	1d09c <__assert_fail@plt+0xbb54>
   1cfb4:	b	1d0b4 <__assert_fail@plt+0xbb6c>
   1cfb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cfbc:	movw	r1, #0
   1cfc0:	cmp	r1, r0
   1cfc4:	bge	1d0b4 <__assert_fail@plt+0xbb6c>
   1cfc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cfcc:	sub	r0, r0, #1
   1cfd0:	movw	r1, #127	; 0x7f
   1cfd4:	cmp	r1, r0
   1cfd8:	blt	1d09c <__assert_fail@plt+0xbb54>
   1cfdc:	b	1d0b4 <__assert_fail@plt+0xbb6c>
   1cfe0:	ldr	r0, [fp, #8]
   1cfe4:	mvn	r1, #127	; 0x7f
   1cfe8:	sdiv	r0, r1, r0
   1cfec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cff0:	cmp	r0, r1
   1cff4:	blt	1d09c <__assert_fail@plt+0xbb54>
   1cff8:	b	1d0b4 <__assert_fail@plt+0xbb6c>
   1cffc:	ldr	r0, [fp, #8]
   1d000:	cmp	r0, #0
   1d004:	bne	1d00c <__assert_fail@plt+0xbac4>
   1d008:	b	1d0b4 <__assert_fail@plt+0xbb6c>
   1d00c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d010:	cmp	r0, #0
   1d014:	bge	1d084 <__assert_fail@plt+0xbb3c>
   1d018:	b	1d01c <__assert_fail@plt+0xbad4>
   1d01c:	b	1d068 <__assert_fail@plt+0xbb20>
   1d020:	b	1d068 <__assert_fail@plt+0xbb20>
   1d024:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d028:	cmn	r0, #1
   1d02c:	bne	1d068 <__assert_fail@plt+0xbb20>
   1d030:	b	1d034 <__assert_fail@plt+0xbaec>
   1d034:	ldr	r0, [fp, #8]
   1d038:	mvn	r1, #127	; 0x7f
   1d03c:	add	r0, r0, r1
   1d040:	movw	r1, #0
   1d044:	cmp	r1, r0
   1d048:	blt	1d09c <__assert_fail@plt+0xbb54>
   1d04c:	b	1d0b4 <__assert_fail@plt+0xbb6c>
   1d050:	ldr	r0, [fp, #8]
   1d054:	sub	r0, r0, #1
   1d058:	movw	r1, #127	; 0x7f
   1d05c:	cmp	r1, r0
   1d060:	blt	1d09c <__assert_fail@plt+0xbb54>
   1d064:	b	1d0b4 <__assert_fail@plt+0xbb6c>
   1d068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d06c:	mvn	r1, #127	; 0x7f
   1d070:	sdiv	r0, r1, r0
   1d074:	ldr	r1, [fp, #8]
   1d078:	cmp	r0, r1
   1d07c:	blt	1d09c <__assert_fail@plt+0xbb54>
   1d080:	b	1d0b4 <__assert_fail@plt+0xbb6c>
   1d084:	ldr	r0, [fp, #8]
   1d088:	movw	r1, #127	; 0x7f
   1d08c:	sdiv	r0, r1, r0
   1d090:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d094:	cmp	r0, r1
   1d098:	bge	1d0b4 <__assert_fail@plt+0xbb6c>
   1d09c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0a0:	ldr	r1, [fp, #8]
   1d0a4:	mul	r0, r0, r1
   1d0a8:	sxtb	r0, r0
   1d0ac:	str	r0, [fp, #-28]	; 0xffffffe4
   1d0b0:	b	1e278 <__assert_fail@plt+0xcd30>
   1d0b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0b8:	ldr	r1, [fp, #8]
   1d0bc:	mul	r0, r0, r1
   1d0c0:	sxtb	r0, r0
   1d0c4:	str	r0, [fp, #-28]	; 0xffffffe4
   1d0c8:	b	1e284 <__assert_fail@plt+0xcd3c>
   1d0cc:	ldr	r0, [fp, #8]
   1d0d0:	cmp	r0, #0
   1d0d4:	bge	1d1e4 <__assert_fail@plt+0xbc9c>
   1d0d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0dc:	cmp	r0, #0
   1d0e0:	bge	1d16c <__assert_fail@plt+0xbc24>
   1d0e4:	b	1d0e8 <__assert_fail@plt+0xbba0>
   1d0e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0ec:	ldr	r1, [fp, #8]
   1d0f0:	movw	r2, #255	; 0xff
   1d0f4:	sdiv	r1, r2, r1
   1d0f8:	cmp	r0, r1
   1d0fc:	blt	1d280 <__assert_fail@plt+0xbd38>
   1d100:	b	1d298 <__assert_fail@plt+0xbd50>
   1d104:	b	1d108 <__assert_fail@plt+0xbbc0>
   1d108:	ldr	r0, [pc, #3592]	; 1df18 <__assert_fail@plt+0xc9d0>
   1d10c:	ldr	r1, [fp, #8]
   1d110:	cmp	r1, r0
   1d114:	blt	1d12c <__assert_fail@plt+0xbbe4>
   1d118:	b	1d138 <__assert_fail@plt+0xbbf0>
   1d11c:	ldr	r0, [fp, #8]
   1d120:	movw	r1, #0
   1d124:	cmp	r1, r0
   1d128:	bge	1d138 <__assert_fail@plt+0xbbf0>
   1d12c:	movw	r0, #0
   1d130:	str	r0, [fp, #-40]	; 0xffffffd8
   1d134:	b	1d150 <__assert_fail@plt+0xbc08>
   1d138:	ldr	r0, [fp, #8]
   1d13c:	movw	r1, #0
   1d140:	sub	r0, r1, r0
   1d144:	movw	r1, #255	; 0xff
   1d148:	sdiv	r0, r1, r0
   1d14c:	str	r0, [fp, #-40]	; 0xffffffd8
   1d150:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d154:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d158:	mvn	r2, #0
   1d15c:	sub	r1, r2, r1
   1d160:	cmp	r0, r1
   1d164:	ble	1d280 <__assert_fail@plt+0xbd38>
   1d168:	b	1d298 <__assert_fail@plt+0xbd50>
   1d16c:	b	1d170 <__assert_fail@plt+0xbc28>
   1d170:	b	1d1c8 <__assert_fail@plt+0xbc80>
   1d174:	b	1d1c8 <__assert_fail@plt+0xbc80>
   1d178:	ldr	r0, [fp, #8]
   1d17c:	cmn	r0, #1
   1d180:	bne	1d1c8 <__assert_fail@plt+0xbc80>
   1d184:	b	1d188 <__assert_fail@plt+0xbc40>
   1d188:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d18c:	add	r0, r0, #0
   1d190:	movw	r1, #0
   1d194:	cmp	r1, r0
   1d198:	blt	1d280 <__assert_fail@plt+0xbd38>
   1d19c:	b	1d298 <__assert_fail@plt+0xbd50>
   1d1a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1a4:	movw	r1, #0
   1d1a8:	cmp	r1, r0
   1d1ac:	bge	1d298 <__assert_fail@plt+0xbd50>
   1d1b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1b4:	sub	r0, r0, #1
   1d1b8:	mvn	r1, #0
   1d1bc:	cmp	r1, r0
   1d1c0:	blt	1d280 <__assert_fail@plt+0xbd38>
   1d1c4:	b	1d298 <__assert_fail@plt+0xbd50>
   1d1c8:	ldr	r0, [fp, #8]
   1d1cc:	movw	r1, #0
   1d1d0:	sdiv	r0, r1, r0
   1d1d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d1d8:	cmp	r0, r1
   1d1dc:	blt	1d280 <__assert_fail@plt+0xbd38>
   1d1e0:	b	1d298 <__assert_fail@plt+0xbd50>
   1d1e4:	ldr	r0, [fp, #8]
   1d1e8:	cmp	r0, #0
   1d1ec:	bne	1d1f4 <__assert_fail@plt+0xbcac>
   1d1f0:	b	1d298 <__assert_fail@plt+0xbd50>
   1d1f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1f8:	cmp	r0, #0
   1d1fc:	bge	1d268 <__assert_fail@plt+0xbd20>
   1d200:	b	1d204 <__assert_fail@plt+0xbcbc>
   1d204:	b	1d24c <__assert_fail@plt+0xbd04>
   1d208:	b	1d24c <__assert_fail@plt+0xbd04>
   1d20c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d210:	cmn	r0, #1
   1d214:	bne	1d24c <__assert_fail@plt+0xbd04>
   1d218:	b	1d21c <__assert_fail@plt+0xbcd4>
   1d21c:	ldr	r0, [fp, #8]
   1d220:	add	r0, r0, #0
   1d224:	movw	r1, #0
   1d228:	cmp	r1, r0
   1d22c:	blt	1d280 <__assert_fail@plt+0xbd38>
   1d230:	b	1d298 <__assert_fail@plt+0xbd50>
   1d234:	ldr	r0, [fp, #8]
   1d238:	sub	r0, r0, #1
   1d23c:	mvn	r1, #0
   1d240:	cmp	r1, r0
   1d244:	blt	1d280 <__assert_fail@plt+0xbd38>
   1d248:	b	1d298 <__assert_fail@plt+0xbd50>
   1d24c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d250:	movw	r1, #0
   1d254:	sdiv	r0, r1, r0
   1d258:	ldr	r1, [fp, #8]
   1d25c:	cmp	r0, r1
   1d260:	blt	1d280 <__assert_fail@plt+0xbd38>
   1d264:	b	1d298 <__assert_fail@plt+0xbd50>
   1d268:	ldr	r0, [fp, #8]
   1d26c:	movw	r1, #255	; 0xff
   1d270:	sdiv	r0, r1, r0
   1d274:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d278:	cmp	r0, r1
   1d27c:	bge	1d298 <__assert_fail@plt+0xbd50>
   1d280:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d284:	ldr	r1, [fp, #8]
   1d288:	mul	r0, r0, r1
   1d28c:	and	r0, r0, #255	; 0xff
   1d290:	str	r0, [fp, #-28]	; 0xffffffe4
   1d294:	b	1e278 <__assert_fail@plt+0xcd30>
   1d298:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d29c:	ldr	r1, [fp, #8]
   1d2a0:	mul	r0, r0, r1
   1d2a4:	and	r0, r0, #255	; 0xff
   1d2a8:	str	r0, [fp, #-28]	; 0xffffffe4
   1d2ac:	b	1e284 <__assert_fail@plt+0xcd3c>
   1d2b0:	b	1d688 <__assert_fail@plt+0xc140>
   1d2b4:	b	1d2b8 <__assert_fail@plt+0xbd70>
   1d2b8:	ldr	r0, [fp, #8]
   1d2bc:	cmp	r0, #0
   1d2c0:	bge	1d3d4 <__assert_fail@plt+0xbe8c>
   1d2c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2c8:	cmp	r0, #0
   1d2cc:	bge	1d358 <__assert_fail@plt+0xbe10>
   1d2d0:	b	1d2d4 <__assert_fail@plt+0xbd8c>
   1d2d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2d8:	ldr	r1, [fp, #8]
   1d2dc:	movw	r2, #32767	; 0x7fff
   1d2e0:	sdiv	r1, r2, r1
   1d2e4:	cmp	r0, r1
   1d2e8:	blt	1d474 <__assert_fail@plt+0xbf2c>
   1d2ec:	b	1d48c <__assert_fail@plt+0xbf44>
   1d2f0:	b	1d2f4 <__assert_fail@plt+0xbdac>
   1d2f4:	ldr	r0, [pc, #3100]	; 1df18 <__assert_fail@plt+0xc9d0>
   1d2f8:	ldr	r1, [fp, #8]
   1d2fc:	cmp	r1, r0
   1d300:	blt	1d318 <__assert_fail@plt+0xbdd0>
   1d304:	b	1d324 <__assert_fail@plt+0xbddc>
   1d308:	ldr	r0, [fp, #8]
   1d30c:	movw	r1, #0
   1d310:	cmp	r1, r0
   1d314:	bge	1d324 <__assert_fail@plt+0xbddc>
   1d318:	movw	r0, #0
   1d31c:	str	r0, [fp, #-44]	; 0xffffffd4
   1d320:	b	1d33c <__assert_fail@plt+0xbdf4>
   1d324:	ldr	r0, [fp, #8]
   1d328:	movw	r1, #0
   1d32c:	sub	r0, r1, r0
   1d330:	movw	r1, #32767	; 0x7fff
   1d334:	sdiv	r0, r1, r0
   1d338:	str	r0, [fp, #-44]	; 0xffffffd4
   1d33c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d340:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d344:	mvn	r2, #0
   1d348:	sub	r1, r2, r1
   1d34c:	cmp	r0, r1
   1d350:	ble	1d474 <__assert_fail@plt+0xbf2c>
   1d354:	b	1d48c <__assert_fail@plt+0xbf44>
   1d358:	b	1d35c <__assert_fail@plt+0xbe14>
   1d35c:	b	1d3b8 <__assert_fail@plt+0xbe70>
   1d360:	b	1d3b8 <__assert_fail@plt+0xbe70>
   1d364:	ldr	r0, [fp, #8]
   1d368:	cmn	r0, #1
   1d36c:	bne	1d3b8 <__assert_fail@plt+0xbe70>
   1d370:	b	1d374 <__assert_fail@plt+0xbe2c>
   1d374:	ldr	r0, [pc, #4068]	; 1e360 <__assert_fail@plt+0xce18>
   1d378:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d37c:	add	r0, r1, r0
   1d380:	movw	r1, #0
   1d384:	cmp	r1, r0
   1d388:	blt	1d474 <__assert_fail@plt+0xbf2c>
   1d38c:	b	1d48c <__assert_fail@plt+0xbf44>
   1d390:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d394:	movw	r1, #0
   1d398:	cmp	r1, r0
   1d39c:	bge	1d48c <__assert_fail@plt+0xbf44>
   1d3a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d3a4:	sub	r0, r0, #1
   1d3a8:	movw	r1, #32767	; 0x7fff
   1d3ac:	cmp	r1, r0
   1d3b0:	blt	1d474 <__assert_fail@plt+0xbf2c>
   1d3b4:	b	1d48c <__assert_fail@plt+0xbf44>
   1d3b8:	ldr	r0, [pc, #4000]	; 1e360 <__assert_fail@plt+0xce18>
   1d3bc:	ldr	r1, [fp, #8]
   1d3c0:	sdiv	r0, r0, r1
   1d3c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d3c8:	cmp	r0, r1
   1d3cc:	blt	1d474 <__assert_fail@plt+0xbf2c>
   1d3d0:	b	1d48c <__assert_fail@plt+0xbf44>
   1d3d4:	ldr	r0, [fp, #8]
   1d3d8:	cmp	r0, #0
   1d3dc:	bne	1d3e4 <__assert_fail@plt+0xbe9c>
   1d3e0:	b	1d48c <__assert_fail@plt+0xbf44>
   1d3e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d3e8:	cmp	r0, #0
   1d3ec:	bge	1d45c <__assert_fail@plt+0xbf14>
   1d3f0:	b	1d3f4 <__assert_fail@plt+0xbeac>
   1d3f4:	b	1d440 <__assert_fail@plt+0xbef8>
   1d3f8:	b	1d440 <__assert_fail@plt+0xbef8>
   1d3fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d400:	cmn	r0, #1
   1d404:	bne	1d440 <__assert_fail@plt+0xbef8>
   1d408:	b	1d40c <__assert_fail@plt+0xbec4>
   1d40c:	ldr	r0, [pc, #3916]	; 1e360 <__assert_fail@plt+0xce18>
   1d410:	ldr	r1, [fp, #8]
   1d414:	add	r0, r1, r0
   1d418:	movw	r1, #0
   1d41c:	cmp	r1, r0
   1d420:	blt	1d474 <__assert_fail@plt+0xbf2c>
   1d424:	b	1d48c <__assert_fail@plt+0xbf44>
   1d428:	ldr	r0, [fp, #8]
   1d42c:	sub	r0, r0, #1
   1d430:	movw	r1, #32767	; 0x7fff
   1d434:	cmp	r1, r0
   1d438:	blt	1d474 <__assert_fail@plt+0xbf2c>
   1d43c:	b	1d48c <__assert_fail@plt+0xbf44>
   1d440:	ldr	r0, [pc, #3864]	; 1e360 <__assert_fail@plt+0xce18>
   1d444:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d448:	sdiv	r0, r0, r1
   1d44c:	ldr	r1, [fp, #8]
   1d450:	cmp	r0, r1
   1d454:	blt	1d474 <__assert_fail@plt+0xbf2c>
   1d458:	b	1d48c <__assert_fail@plt+0xbf44>
   1d45c:	ldr	r0, [fp, #8]
   1d460:	movw	r1, #32767	; 0x7fff
   1d464:	sdiv	r0, r1, r0
   1d468:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d46c:	cmp	r0, r1
   1d470:	bge	1d48c <__assert_fail@plt+0xbf44>
   1d474:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d478:	ldr	r1, [fp, #8]
   1d47c:	mul	r0, r0, r1
   1d480:	sxth	r0, r0
   1d484:	str	r0, [fp, #-28]	; 0xffffffe4
   1d488:	b	1e278 <__assert_fail@plt+0xcd30>
   1d48c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d490:	ldr	r1, [fp, #8]
   1d494:	mul	r0, r0, r1
   1d498:	sxth	r0, r0
   1d49c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d4a0:	b	1e284 <__assert_fail@plt+0xcd3c>
   1d4a4:	ldr	r0, [fp, #8]
   1d4a8:	cmp	r0, #0
   1d4ac:	bge	1d5bc <__assert_fail@plt+0xc074>
   1d4b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d4b4:	cmp	r0, #0
   1d4b8:	bge	1d544 <__assert_fail@plt+0xbffc>
   1d4bc:	b	1d4c0 <__assert_fail@plt+0xbf78>
   1d4c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d4c4:	ldr	r1, [fp, #8]
   1d4c8:	movw	r2, #65535	; 0xffff
   1d4cc:	sdiv	r1, r2, r1
   1d4d0:	cmp	r0, r1
   1d4d4:	blt	1d658 <__assert_fail@plt+0xc110>
   1d4d8:	b	1d670 <__assert_fail@plt+0xc128>
   1d4dc:	b	1d4e0 <__assert_fail@plt+0xbf98>
   1d4e0:	ldr	r0, [pc, #2608]	; 1df18 <__assert_fail@plt+0xc9d0>
   1d4e4:	ldr	r1, [fp, #8]
   1d4e8:	cmp	r1, r0
   1d4ec:	blt	1d504 <__assert_fail@plt+0xbfbc>
   1d4f0:	b	1d510 <__assert_fail@plt+0xbfc8>
   1d4f4:	ldr	r0, [fp, #8]
   1d4f8:	movw	r1, #0
   1d4fc:	cmp	r1, r0
   1d500:	bge	1d510 <__assert_fail@plt+0xbfc8>
   1d504:	movw	r0, #0
   1d508:	str	r0, [fp, #-48]	; 0xffffffd0
   1d50c:	b	1d528 <__assert_fail@plt+0xbfe0>
   1d510:	ldr	r0, [fp, #8]
   1d514:	movw	r1, #0
   1d518:	sub	r0, r1, r0
   1d51c:	movw	r1, #65535	; 0xffff
   1d520:	sdiv	r0, r1, r0
   1d524:	str	r0, [fp, #-48]	; 0xffffffd0
   1d528:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d52c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d530:	mvn	r2, #0
   1d534:	sub	r1, r2, r1
   1d538:	cmp	r0, r1
   1d53c:	ble	1d658 <__assert_fail@plt+0xc110>
   1d540:	b	1d670 <__assert_fail@plt+0xc128>
   1d544:	b	1d548 <__assert_fail@plt+0xc000>
   1d548:	b	1d5a0 <__assert_fail@plt+0xc058>
   1d54c:	b	1d5a0 <__assert_fail@plt+0xc058>
   1d550:	ldr	r0, [fp, #8]
   1d554:	cmn	r0, #1
   1d558:	bne	1d5a0 <__assert_fail@plt+0xc058>
   1d55c:	b	1d560 <__assert_fail@plt+0xc018>
   1d560:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d564:	add	r0, r0, #0
   1d568:	movw	r1, #0
   1d56c:	cmp	r1, r0
   1d570:	blt	1d658 <__assert_fail@plt+0xc110>
   1d574:	b	1d670 <__assert_fail@plt+0xc128>
   1d578:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d57c:	movw	r1, #0
   1d580:	cmp	r1, r0
   1d584:	bge	1d670 <__assert_fail@plt+0xc128>
   1d588:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d58c:	sub	r0, r0, #1
   1d590:	mvn	r1, #0
   1d594:	cmp	r1, r0
   1d598:	blt	1d658 <__assert_fail@plt+0xc110>
   1d59c:	b	1d670 <__assert_fail@plt+0xc128>
   1d5a0:	ldr	r0, [fp, #8]
   1d5a4:	movw	r1, #0
   1d5a8:	sdiv	r0, r1, r0
   1d5ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d5b0:	cmp	r0, r1
   1d5b4:	blt	1d658 <__assert_fail@plt+0xc110>
   1d5b8:	b	1d670 <__assert_fail@plt+0xc128>
   1d5bc:	ldr	r0, [fp, #8]
   1d5c0:	cmp	r0, #0
   1d5c4:	bne	1d5cc <__assert_fail@plt+0xc084>
   1d5c8:	b	1d670 <__assert_fail@plt+0xc128>
   1d5cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5d0:	cmp	r0, #0
   1d5d4:	bge	1d640 <__assert_fail@plt+0xc0f8>
   1d5d8:	b	1d5dc <__assert_fail@plt+0xc094>
   1d5dc:	b	1d624 <__assert_fail@plt+0xc0dc>
   1d5e0:	b	1d624 <__assert_fail@plt+0xc0dc>
   1d5e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5e8:	cmn	r0, #1
   1d5ec:	bne	1d624 <__assert_fail@plt+0xc0dc>
   1d5f0:	b	1d5f4 <__assert_fail@plt+0xc0ac>
   1d5f4:	ldr	r0, [fp, #8]
   1d5f8:	add	r0, r0, #0
   1d5fc:	movw	r1, #0
   1d600:	cmp	r1, r0
   1d604:	blt	1d658 <__assert_fail@plt+0xc110>
   1d608:	b	1d670 <__assert_fail@plt+0xc128>
   1d60c:	ldr	r0, [fp, #8]
   1d610:	sub	r0, r0, #1
   1d614:	mvn	r1, #0
   1d618:	cmp	r1, r0
   1d61c:	blt	1d658 <__assert_fail@plt+0xc110>
   1d620:	b	1d670 <__assert_fail@plt+0xc128>
   1d624:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d628:	movw	r1, #0
   1d62c:	sdiv	r0, r1, r0
   1d630:	ldr	r1, [fp, #8]
   1d634:	cmp	r0, r1
   1d638:	blt	1d658 <__assert_fail@plt+0xc110>
   1d63c:	b	1d670 <__assert_fail@plt+0xc128>
   1d640:	ldr	r0, [fp, #8]
   1d644:	movw	r1, #65535	; 0xffff
   1d648:	sdiv	r0, r1, r0
   1d64c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d650:	cmp	r0, r1
   1d654:	bge	1d670 <__assert_fail@plt+0xc128>
   1d658:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d65c:	ldr	r1, [fp, #8]
   1d660:	mul	r0, r0, r1
   1d664:	uxth	r0, r0
   1d668:	str	r0, [fp, #-28]	; 0xffffffe4
   1d66c:	b	1e278 <__assert_fail@plt+0xcd30>
   1d670:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d674:	ldr	r1, [fp, #8]
   1d678:	mul	r0, r0, r1
   1d67c:	uxth	r0, r0
   1d680:	str	r0, [fp, #-28]	; 0xffffffe4
   1d684:	b	1e284 <__assert_fail@plt+0xcd3c>
   1d688:	b	1d68c <__assert_fail@plt+0xc144>
   1d68c:	b	1d690 <__assert_fail@plt+0xc148>
   1d690:	ldr	r0, [fp, #8]
   1d694:	cmp	r0, #0
   1d698:	bge	1d79c <__assert_fail@plt+0xc254>
   1d69c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6a0:	cmp	r0, #0
   1d6a4:	bge	1d730 <__assert_fail@plt+0xc1e8>
   1d6a8:	b	1d6ac <__assert_fail@plt+0xc164>
   1d6ac:	ldr	r0, [pc, #1984]	; 1de74 <__assert_fail@plt+0xc92c>
   1d6b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d6b4:	ldr	r2, [fp, #8]
   1d6b8:	sdiv	r0, r0, r2
   1d6bc:	cmp	r1, r0
   1d6c0:	blt	1d82c <__assert_fail@plt+0xc2e4>
   1d6c4:	b	1d840 <__assert_fail@plt+0xc2f8>
   1d6c8:	b	1d6cc <__assert_fail@plt+0xc184>
   1d6cc:	ldr	r0, [pc, #2116]	; 1df18 <__assert_fail@plt+0xc9d0>
   1d6d0:	ldr	r1, [fp, #8]
   1d6d4:	cmp	r1, r0
   1d6d8:	blt	1d6f0 <__assert_fail@plt+0xc1a8>
   1d6dc:	b	1d6fc <__assert_fail@plt+0xc1b4>
   1d6e0:	ldr	r0, [fp, #8]
   1d6e4:	movw	r1, #0
   1d6e8:	cmp	r1, r0
   1d6ec:	bge	1d6fc <__assert_fail@plt+0xc1b4>
   1d6f0:	movw	r0, #0
   1d6f4:	str	r0, [fp, #-52]	; 0xffffffcc
   1d6f8:	b	1d714 <__assert_fail@plt+0xc1cc>
   1d6fc:	ldr	r0, [pc, #1904]	; 1de74 <__assert_fail@plt+0xc92c>
   1d700:	ldr	r1, [fp, #8]
   1d704:	movw	r2, #0
   1d708:	sub	r1, r2, r1
   1d70c:	sdiv	r0, r0, r1
   1d710:	str	r0, [fp, #-52]	; 0xffffffcc
   1d714:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1d718:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d71c:	mvn	r2, #0
   1d720:	sub	r1, r2, r1
   1d724:	cmp	r0, r1
   1d728:	ble	1d82c <__assert_fail@plt+0xc2e4>
   1d72c:	b	1d840 <__assert_fail@plt+0xc2f8>
   1d730:	ldr	r0, [fp, #8]
   1d734:	cmn	r0, #1
   1d738:	bne	1d780 <__assert_fail@plt+0xc238>
   1d73c:	b	1d740 <__assert_fail@plt+0xc1f8>
   1d740:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d744:	add	r0, r0, #-2147483648	; 0x80000000
   1d748:	movw	r1, #0
   1d74c:	cmp	r1, r0
   1d750:	blt	1d82c <__assert_fail@plt+0xc2e4>
   1d754:	b	1d840 <__assert_fail@plt+0xc2f8>
   1d758:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d75c:	movw	r1, #0
   1d760:	cmp	r1, r0
   1d764:	bge	1d840 <__assert_fail@plt+0xc2f8>
   1d768:	ldr	r0, [pc, #1796]	; 1de74 <__assert_fail@plt+0xc92c>
   1d76c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d770:	sub	r1, r1, #1
   1d774:	cmp	r0, r1
   1d778:	blt	1d82c <__assert_fail@plt+0xc2e4>
   1d77c:	b	1d840 <__assert_fail@plt+0xc2f8>
   1d780:	ldr	r0, [pc, #4080]	; 1e778 <__assert_fail@plt+0xd230>
   1d784:	ldr	r1, [fp, #8]
   1d788:	sdiv	r0, r0, r1
   1d78c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d790:	cmp	r0, r1
   1d794:	blt	1d82c <__assert_fail@plt+0xc2e4>
   1d798:	b	1d840 <__assert_fail@plt+0xc2f8>
   1d79c:	ldr	r0, [fp, #8]
   1d7a0:	cmp	r0, #0
   1d7a4:	bne	1d7ac <__assert_fail@plt+0xc264>
   1d7a8:	b	1d840 <__assert_fail@plt+0xc2f8>
   1d7ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7b0:	cmp	r0, #0
   1d7b4:	bge	1d814 <__assert_fail@plt+0xc2cc>
   1d7b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7bc:	cmn	r0, #1
   1d7c0:	bne	1d7f8 <__assert_fail@plt+0xc2b0>
   1d7c4:	b	1d7c8 <__assert_fail@plt+0xc280>
   1d7c8:	ldr	r0, [fp, #8]
   1d7cc:	add	r0, r0, #-2147483648	; 0x80000000
   1d7d0:	movw	r1, #0
   1d7d4:	cmp	r1, r0
   1d7d8:	blt	1d82c <__assert_fail@plt+0xc2e4>
   1d7dc:	b	1d840 <__assert_fail@plt+0xc2f8>
   1d7e0:	ldr	r0, [pc, #1676]	; 1de74 <__assert_fail@plt+0xc92c>
   1d7e4:	ldr	r1, [fp, #8]
   1d7e8:	sub	r1, r1, #1
   1d7ec:	cmp	r0, r1
   1d7f0:	blt	1d82c <__assert_fail@plt+0xc2e4>
   1d7f4:	b	1d840 <__assert_fail@plt+0xc2f8>
   1d7f8:	ldr	r0, [pc, #3960]	; 1e778 <__assert_fail@plt+0xd230>
   1d7fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d800:	sdiv	r0, r0, r1
   1d804:	ldr	r1, [fp, #8]
   1d808:	cmp	r0, r1
   1d80c:	blt	1d82c <__assert_fail@plt+0xc2e4>
   1d810:	b	1d840 <__assert_fail@plt+0xc2f8>
   1d814:	ldr	r0, [pc, #1624]	; 1de74 <__assert_fail@plt+0xc92c>
   1d818:	ldr	r1, [fp, #8]
   1d81c:	sdiv	r0, r0, r1
   1d820:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d824:	cmp	r0, r1
   1d828:	bge	1d840 <__assert_fail@plt+0xc2f8>
   1d82c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d830:	ldr	r1, [fp, #8]
   1d834:	mul	r0, r0, r1
   1d838:	str	r0, [fp, #-28]	; 0xffffffe4
   1d83c:	b	1e278 <__assert_fail@plt+0xcd30>
   1d840:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d844:	ldr	r1, [fp, #8]
   1d848:	mul	r0, r0, r1
   1d84c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d850:	b	1e284 <__assert_fail@plt+0xcd3c>
   1d854:	ldr	r0, [fp, #8]
   1d858:	cmp	r0, #0
   1d85c:	bge	1d96c <__assert_fail@plt+0xc424>
   1d860:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d864:	cmp	r0, #0
   1d868:	bge	1d8f4 <__assert_fail@plt+0xc3ac>
   1d86c:	b	1d88c <__assert_fail@plt+0xc344>
   1d870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d874:	ldr	r1, [fp, #8]
   1d878:	mvn	r2, #0
   1d87c:	udiv	r1, r2, r1
   1d880:	cmp	r0, r1
   1d884:	bcc	1da08 <__assert_fail@plt+0xc4c0>
   1d888:	b	1da1c <__assert_fail@plt+0xc4d4>
   1d88c:	b	1d890 <__assert_fail@plt+0xc348>
   1d890:	ldr	r0, [pc, #1664]	; 1df18 <__assert_fail@plt+0xc9d0>
   1d894:	ldr	r1, [fp, #8]
   1d898:	cmp	r1, r0
   1d89c:	blt	1d8b4 <__assert_fail@plt+0xc36c>
   1d8a0:	b	1d8c0 <__assert_fail@plt+0xc378>
   1d8a4:	ldr	r0, [fp, #8]
   1d8a8:	movw	r1, #0
   1d8ac:	cmp	r1, r0
   1d8b0:	bge	1d8c0 <__assert_fail@plt+0xc378>
   1d8b4:	movw	r0, #1
   1d8b8:	str	r0, [fp, #-56]	; 0xffffffc8
   1d8bc:	b	1d8d8 <__assert_fail@plt+0xc390>
   1d8c0:	ldr	r0, [fp, #8]
   1d8c4:	movw	r1, #0
   1d8c8:	sub	r0, r1, r0
   1d8cc:	mvn	r1, #0
   1d8d0:	udiv	r0, r1, r0
   1d8d4:	str	r0, [fp, #-56]	; 0xffffffc8
   1d8d8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d8dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d8e0:	mvn	r2, #0
   1d8e4:	sub	r1, r2, r1
   1d8e8:	cmp	r0, r1
   1d8ec:	bls	1da08 <__assert_fail@plt+0xc4c0>
   1d8f0:	b	1da1c <__assert_fail@plt+0xc4d4>
   1d8f4:	b	1d8f8 <__assert_fail@plt+0xc3b0>
   1d8f8:	b	1d950 <__assert_fail@plt+0xc408>
   1d8fc:	b	1d950 <__assert_fail@plt+0xc408>
   1d900:	ldr	r0, [fp, #8]
   1d904:	cmn	r0, #1
   1d908:	bne	1d950 <__assert_fail@plt+0xc408>
   1d90c:	b	1d910 <__assert_fail@plt+0xc3c8>
   1d910:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d914:	add	r0, r0, #0
   1d918:	movw	r1, #0
   1d91c:	cmp	r1, r0
   1d920:	blt	1da08 <__assert_fail@plt+0xc4c0>
   1d924:	b	1da1c <__assert_fail@plt+0xc4d4>
   1d928:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d92c:	movw	r1, #0
   1d930:	cmp	r1, r0
   1d934:	bge	1da1c <__assert_fail@plt+0xc4d4>
   1d938:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d93c:	sub	r0, r0, #1
   1d940:	mvn	r1, #0
   1d944:	cmp	r1, r0
   1d948:	blt	1da08 <__assert_fail@plt+0xc4c0>
   1d94c:	b	1da1c <__assert_fail@plt+0xc4d4>
   1d950:	ldr	r0, [fp, #8]
   1d954:	movw	r1, #0
   1d958:	sdiv	r0, r1, r0
   1d95c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d960:	cmp	r0, r1
   1d964:	blt	1da08 <__assert_fail@plt+0xc4c0>
   1d968:	b	1da1c <__assert_fail@plt+0xc4d4>
   1d96c:	ldr	r0, [fp, #8]
   1d970:	cmp	r0, #0
   1d974:	bne	1d97c <__assert_fail@plt+0xc434>
   1d978:	b	1da1c <__assert_fail@plt+0xc4d4>
   1d97c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d980:	cmp	r0, #0
   1d984:	bge	1d9f0 <__assert_fail@plt+0xc4a8>
   1d988:	b	1d98c <__assert_fail@plt+0xc444>
   1d98c:	b	1d9d4 <__assert_fail@plt+0xc48c>
   1d990:	b	1d9d4 <__assert_fail@plt+0xc48c>
   1d994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d998:	cmn	r0, #1
   1d99c:	bne	1d9d4 <__assert_fail@plt+0xc48c>
   1d9a0:	b	1d9a4 <__assert_fail@plt+0xc45c>
   1d9a4:	ldr	r0, [fp, #8]
   1d9a8:	add	r0, r0, #0
   1d9ac:	movw	r1, #0
   1d9b0:	cmp	r1, r0
   1d9b4:	blt	1da08 <__assert_fail@plt+0xc4c0>
   1d9b8:	b	1da1c <__assert_fail@plt+0xc4d4>
   1d9bc:	ldr	r0, [fp, #8]
   1d9c0:	sub	r0, r0, #1
   1d9c4:	mvn	r1, #0
   1d9c8:	cmp	r1, r0
   1d9cc:	blt	1da08 <__assert_fail@plt+0xc4c0>
   1d9d0:	b	1da1c <__assert_fail@plt+0xc4d4>
   1d9d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d9d8:	movw	r1, #0
   1d9dc:	sdiv	r0, r1, r0
   1d9e0:	ldr	r1, [fp, #8]
   1d9e4:	cmp	r0, r1
   1d9e8:	blt	1da08 <__assert_fail@plt+0xc4c0>
   1d9ec:	b	1da1c <__assert_fail@plt+0xc4d4>
   1d9f0:	ldr	r0, [fp, #8]
   1d9f4:	mvn	r1, #0
   1d9f8:	udiv	r0, r1, r0
   1d9fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1da00:	cmp	r0, r1
   1da04:	bcs	1da1c <__assert_fail@plt+0xc4d4>
   1da08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da0c:	ldr	r1, [fp, #8]
   1da10:	mul	r0, r0, r1
   1da14:	str	r0, [fp, #-28]	; 0xffffffe4
   1da18:	b	1e278 <__assert_fail@plt+0xcd30>
   1da1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da20:	ldr	r1, [fp, #8]
   1da24:	mul	r0, r0, r1
   1da28:	str	r0, [fp, #-28]	; 0xffffffe4
   1da2c:	b	1e284 <__assert_fail@plt+0xcd3c>
   1da30:	b	1da34 <__assert_fail@plt+0xc4ec>
   1da34:	b	1da38 <__assert_fail@plt+0xc4f0>
   1da38:	ldr	r0, [fp, #8]
   1da3c:	cmp	r0, #0
   1da40:	bge	1db44 <__assert_fail@plt+0xc5fc>
   1da44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da48:	cmp	r0, #0
   1da4c:	bge	1dad8 <__assert_fail@plt+0xc590>
   1da50:	b	1da54 <__assert_fail@plt+0xc50c>
   1da54:	ldr	r0, [pc, #1048]	; 1de74 <__assert_fail@plt+0xc92c>
   1da58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1da5c:	ldr	r2, [fp, #8]
   1da60:	sdiv	r0, r0, r2
   1da64:	cmp	r1, r0
   1da68:	blt	1dbd4 <__assert_fail@plt+0xc68c>
   1da6c:	b	1dbe8 <__assert_fail@plt+0xc6a0>
   1da70:	b	1da74 <__assert_fail@plt+0xc52c>
   1da74:	ldr	r0, [pc, #1180]	; 1df18 <__assert_fail@plt+0xc9d0>
   1da78:	ldr	r1, [fp, #8]
   1da7c:	cmp	r1, r0
   1da80:	blt	1da98 <__assert_fail@plt+0xc550>
   1da84:	b	1daa4 <__assert_fail@plt+0xc55c>
   1da88:	ldr	r0, [fp, #8]
   1da8c:	movw	r1, #0
   1da90:	cmp	r1, r0
   1da94:	bge	1daa4 <__assert_fail@plt+0xc55c>
   1da98:	movw	r0, #0
   1da9c:	str	r0, [fp, #-60]	; 0xffffffc4
   1daa0:	b	1dabc <__assert_fail@plt+0xc574>
   1daa4:	ldr	r0, [pc, #968]	; 1de74 <__assert_fail@plt+0xc92c>
   1daa8:	ldr	r1, [fp, #8]
   1daac:	movw	r2, #0
   1dab0:	sub	r1, r2, r1
   1dab4:	sdiv	r0, r0, r1
   1dab8:	str	r0, [fp, #-60]	; 0xffffffc4
   1dabc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1dac0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dac4:	mvn	r2, #0
   1dac8:	sub	r1, r2, r1
   1dacc:	cmp	r0, r1
   1dad0:	ble	1dbd4 <__assert_fail@plt+0xc68c>
   1dad4:	b	1dbe8 <__assert_fail@plt+0xc6a0>
   1dad8:	ldr	r0, [fp, #8]
   1dadc:	cmn	r0, #1
   1dae0:	bne	1db28 <__assert_fail@plt+0xc5e0>
   1dae4:	b	1dae8 <__assert_fail@plt+0xc5a0>
   1dae8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1daec:	add	r0, r0, #-2147483648	; 0x80000000
   1daf0:	movw	r1, #0
   1daf4:	cmp	r1, r0
   1daf8:	blt	1dbd4 <__assert_fail@plt+0xc68c>
   1dafc:	b	1dbe8 <__assert_fail@plt+0xc6a0>
   1db00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db04:	movw	r1, #0
   1db08:	cmp	r1, r0
   1db0c:	bge	1dbe8 <__assert_fail@plt+0xc6a0>
   1db10:	ldr	r0, [pc, #860]	; 1de74 <__assert_fail@plt+0xc92c>
   1db14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1db18:	sub	r1, r1, #1
   1db1c:	cmp	r0, r1
   1db20:	blt	1dbd4 <__assert_fail@plt+0xc68c>
   1db24:	b	1dbe8 <__assert_fail@plt+0xc6a0>
   1db28:	ldr	r0, [pc, #3144]	; 1e778 <__assert_fail@plt+0xd230>
   1db2c:	ldr	r1, [fp, #8]
   1db30:	sdiv	r0, r0, r1
   1db34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1db38:	cmp	r0, r1
   1db3c:	blt	1dbd4 <__assert_fail@plt+0xc68c>
   1db40:	b	1dbe8 <__assert_fail@plt+0xc6a0>
   1db44:	ldr	r0, [fp, #8]
   1db48:	cmp	r0, #0
   1db4c:	bne	1db54 <__assert_fail@plt+0xc60c>
   1db50:	b	1dbe8 <__assert_fail@plt+0xc6a0>
   1db54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db58:	cmp	r0, #0
   1db5c:	bge	1dbbc <__assert_fail@plt+0xc674>
   1db60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db64:	cmn	r0, #1
   1db68:	bne	1dba0 <__assert_fail@plt+0xc658>
   1db6c:	b	1db70 <__assert_fail@plt+0xc628>
   1db70:	ldr	r0, [fp, #8]
   1db74:	add	r0, r0, #-2147483648	; 0x80000000
   1db78:	movw	r1, #0
   1db7c:	cmp	r1, r0
   1db80:	blt	1dbd4 <__assert_fail@plt+0xc68c>
   1db84:	b	1dbe8 <__assert_fail@plt+0xc6a0>
   1db88:	ldr	r0, [pc, #740]	; 1de74 <__assert_fail@plt+0xc92c>
   1db8c:	ldr	r1, [fp, #8]
   1db90:	sub	r1, r1, #1
   1db94:	cmp	r0, r1
   1db98:	blt	1dbd4 <__assert_fail@plt+0xc68c>
   1db9c:	b	1dbe8 <__assert_fail@plt+0xc6a0>
   1dba0:	ldr	r0, [pc, #3024]	; 1e778 <__assert_fail@plt+0xd230>
   1dba4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dba8:	sdiv	r0, r0, r1
   1dbac:	ldr	r1, [fp, #8]
   1dbb0:	cmp	r0, r1
   1dbb4:	blt	1dbd4 <__assert_fail@plt+0xc68c>
   1dbb8:	b	1dbe8 <__assert_fail@plt+0xc6a0>
   1dbbc:	ldr	r0, [pc, #688]	; 1de74 <__assert_fail@plt+0xc92c>
   1dbc0:	ldr	r1, [fp, #8]
   1dbc4:	sdiv	r0, r0, r1
   1dbc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dbcc:	cmp	r0, r1
   1dbd0:	bge	1dbe8 <__assert_fail@plt+0xc6a0>
   1dbd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dbd8:	ldr	r1, [fp, #8]
   1dbdc:	mul	r0, r0, r1
   1dbe0:	str	r0, [fp, #-28]	; 0xffffffe4
   1dbe4:	b	1e278 <__assert_fail@plt+0xcd30>
   1dbe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dbec:	ldr	r1, [fp, #8]
   1dbf0:	mul	r0, r0, r1
   1dbf4:	str	r0, [fp, #-28]	; 0xffffffe4
   1dbf8:	b	1e284 <__assert_fail@plt+0xcd3c>
   1dbfc:	ldr	r0, [fp, #8]
   1dc00:	cmp	r0, #0
   1dc04:	bge	1dd14 <__assert_fail@plt+0xc7cc>
   1dc08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc0c:	cmp	r0, #0
   1dc10:	bge	1dc9c <__assert_fail@plt+0xc754>
   1dc14:	b	1dc34 <__assert_fail@plt+0xc6ec>
   1dc18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc1c:	ldr	r1, [fp, #8]
   1dc20:	mvn	r2, #0
   1dc24:	udiv	r1, r2, r1
   1dc28:	cmp	r0, r1
   1dc2c:	bcc	1ddb0 <__assert_fail@plt+0xc868>
   1dc30:	b	1ddc4 <__assert_fail@plt+0xc87c>
   1dc34:	b	1dc38 <__assert_fail@plt+0xc6f0>
   1dc38:	ldr	r0, [pc, #728]	; 1df18 <__assert_fail@plt+0xc9d0>
   1dc3c:	ldr	r1, [fp, #8]
   1dc40:	cmp	r1, r0
   1dc44:	blt	1dc5c <__assert_fail@plt+0xc714>
   1dc48:	b	1dc68 <__assert_fail@plt+0xc720>
   1dc4c:	ldr	r0, [fp, #8]
   1dc50:	movw	r1, #0
   1dc54:	cmp	r1, r0
   1dc58:	bge	1dc68 <__assert_fail@plt+0xc720>
   1dc5c:	movw	r0, #1
   1dc60:	str	r0, [fp, #-64]	; 0xffffffc0
   1dc64:	b	1dc80 <__assert_fail@plt+0xc738>
   1dc68:	ldr	r0, [fp, #8]
   1dc6c:	movw	r1, #0
   1dc70:	sub	r0, r1, r0
   1dc74:	mvn	r1, #0
   1dc78:	udiv	r0, r1, r0
   1dc7c:	str	r0, [fp, #-64]	; 0xffffffc0
   1dc80:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1dc84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dc88:	mvn	r2, #0
   1dc8c:	sub	r1, r2, r1
   1dc90:	cmp	r0, r1
   1dc94:	bls	1ddb0 <__assert_fail@plt+0xc868>
   1dc98:	b	1ddc4 <__assert_fail@plt+0xc87c>
   1dc9c:	b	1dca0 <__assert_fail@plt+0xc758>
   1dca0:	b	1dcf8 <__assert_fail@plt+0xc7b0>
   1dca4:	b	1dcf8 <__assert_fail@plt+0xc7b0>
   1dca8:	ldr	r0, [fp, #8]
   1dcac:	cmn	r0, #1
   1dcb0:	bne	1dcf8 <__assert_fail@plt+0xc7b0>
   1dcb4:	b	1dcb8 <__assert_fail@plt+0xc770>
   1dcb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dcbc:	add	r0, r0, #0
   1dcc0:	movw	r1, #0
   1dcc4:	cmp	r1, r0
   1dcc8:	blt	1ddb0 <__assert_fail@plt+0xc868>
   1dccc:	b	1ddc4 <__assert_fail@plt+0xc87c>
   1dcd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dcd4:	movw	r1, #0
   1dcd8:	cmp	r1, r0
   1dcdc:	bge	1ddc4 <__assert_fail@plt+0xc87c>
   1dce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dce4:	sub	r0, r0, #1
   1dce8:	mvn	r1, #0
   1dcec:	cmp	r1, r0
   1dcf0:	blt	1ddb0 <__assert_fail@plt+0xc868>
   1dcf4:	b	1ddc4 <__assert_fail@plt+0xc87c>
   1dcf8:	ldr	r0, [fp, #8]
   1dcfc:	movw	r1, #0
   1dd00:	sdiv	r0, r1, r0
   1dd04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dd08:	cmp	r0, r1
   1dd0c:	blt	1ddb0 <__assert_fail@plt+0xc868>
   1dd10:	b	1ddc4 <__assert_fail@plt+0xc87c>
   1dd14:	ldr	r0, [fp, #8]
   1dd18:	cmp	r0, #0
   1dd1c:	bne	1dd24 <__assert_fail@plt+0xc7dc>
   1dd20:	b	1ddc4 <__assert_fail@plt+0xc87c>
   1dd24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd28:	cmp	r0, #0
   1dd2c:	bge	1dd98 <__assert_fail@plt+0xc850>
   1dd30:	b	1dd34 <__assert_fail@plt+0xc7ec>
   1dd34:	b	1dd7c <__assert_fail@plt+0xc834>
   1dd38:	b	1dd7c <__assert_fail@plt+0xc834>
   1dd3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd40:	cmn	r0, #1
   1dd44:	bne	1dd7c <__assert_fail@plt+0xc834>
   1dd48:	b	1dd4c <__assert_fail@plt+0xc804>
   1dd4c:	ldr	r0, [fp, #8]
   1dd50:	add	r0, r0, #0
   1dd54:	movw	r1, #0
   1dd58:	cmp	r1, r0
   1dd5c:	blt	1ddb0 <__assert_fail@plt+0xc868>
   1dd60:	b	1ddc4 <__assert_fail@plt+0xc87c>
   1dd64:	ldr	r0, [fp, #8]
   1dd68:	sub	r0, r0, #1
   1dd6c:	mvn	r1, #0
   1dd70:	cmp	r1, r0
   1dd74:	blt	1ddb0 <__assert_fail@plt+0xc868>
   1dd78:	b	1ddc4 <__assert_fail@plt+0xc87c>
   1dd7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd80:	movw	r1, #0
   1dd84:	sdiv	r0, r1, r0
   1dd88:	ldr	r1, [fp, #8]
   1dd8c:	cmp	r0, r1
   1dd90:	blt	1ddb0 <__assert_fail@plt+0xc868>
   1dd94:	b	1ddc4 <__assert_fail@plt+0xc87c>
   1dd98:	ldr	r0, [fp, #8]
   1dd9c:	mvn	r1, #0
   1dda0:	udiv	r0, r1, r0
   1dda4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dda8:	cmp	r0, r1
   1ddac:	bcs	1ddc4 <__assert_fail@plt+0xc87c>
   1ddb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ddb4:	ldr	r1, [fp, #8]
   1ddb8:	mul	r0, r0, r1
   1ddbc:	str	r0, [fp, #-28]	; 0xffffffe4
   1ddc0:	b	1e278 <__assert_fail@plt+0xcd30>
   1ddc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ddc8:	ldr	r1, [fp, #8]
   1ddcc:	mul	r0, r0, r1
   1ddd0:	str	r0, [fp, #-28]	; 0xffffffe4
   1ddd4:	b	1e284 <__assert_fail@plt+0xcd3c>
   1ddd8:	b	1dddc <__assert_fail@plt+0xc894>
   1dddc:	ldr	r0, [fp, #8]
   1dde0:	cmp	r0, #0
   1dde4:	bge	1df54 <__assert_fail@plt+0xca0c>
   1dde8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ddec:	cmp	r0, #0
   1ddf0:	bge	1decc <__assert_fail@plt+0xc984>
   1ddf4:	b	1ddf8 <__assert_fail@plt+0xc8b0>
   1ddf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ddfc:	ldr	r1, [fp, #8]
   1de00:	asr	r3, r1, #31
   1de04:	mvn	r2, #0
   1de08:	mvn	ip, #-2147483648	; 0x80000000
   1de0c:	str	r0, [fp, #-68]	; 0xffffffbc
   1de10:	mov	r0, r2
   1de14:	str	r1, [fp, #-72]	; 0xffffffb8
   1de18:	mov	r1, ip
   1de1c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1de20:	bl	24490 <__assert_fail@plt+0x12f48>
   1de24:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1de28:	subs	r0, r2, r0
   1de2c:	rscs	r1, r1, r2, asr #31
   1de30:	blt	1e01c <__assert_fail@plt+0xcad4>
   1de34:	b	1e030 <__assert_fail@plt+0xcae8>
   1de38:	b	1de3c <__assert_fail@plt+0xc8f4>
   1de3c:	ldr	r0, [pc, #212]	; 1df18 <__assert_fail@plt+0xc9d0>
   1de40:	ldr	r1, [fp, #8]
   1de44:	cmp	r1, r0
   1de48:	blt	1de60 <__assert_fail@plt+0xc918>
   1de4c:	b	1de78 <__assert_fail@plt+0xc930>
   1de50:	ldr	r0, [fp, #8]
   1de54:	movw	r1, #0
   1de58:	cmp	r1, r0
   1de5c:	bge	1de78 <__assert_fail@plt+0xc930>
   1de60:	mov	r0, #0
   1de64:	mvn	r1, #0
   1de68:	str	r1, [fp, #-76]	; 0xffffffb4
   1de6c:	str	r0, [fp, #-80]	; 0xffffffb0
   1de70:	b	1deac <__assert_fail@plt+0xc964>
   1de74:	svcvc	0x00ffffff
   1de78:	ldr	r0, [fp, #8]
   1de7c:	rsb	r0, r0, #0
   1de80:	asr	r3, r0, #31
   1de84:	mvn	r1, #0
   1de88:	mvn	r2, #-2147483648	; 0x80000000
   1de8c:	str	r0, [fp, #-84]	; 0xffffffac
   1de90:	mov	r0, r1
   1de94:	mov	r1, r2
   1de98:	ldr	r2, [fp, #-84]	; 0xffffffac
   1de9c:	bl	24490 <__assert_fail@plt+0x12f48>
   1dea0:	str	r0, [fp, #-76]	; 0xffffffb4
   1dea4:	str	r1, [fp, #-80]	; 0xffffffb0
   1dea8:	b	1deac <__assert_fail@plt+0xc964>
   1deac:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1deb0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1deb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1deb8:	mvn	r2, r2
   1debc:	subs	r1, r2, r1
   1dec0:	rscs	r0, r0, r2, asr #31
   1dec4:	bge	1e01c <__assert_fail@plt+0xcad4>
   1dec8:	b	1e030 <__assert_fail@plt+0xcae8>
   1decc:	ldr	r0, [fp, #8]
   1ded0:	cmn	r0, #1
   1ded4:	bne	1df1c <__assert_fail@plt+0xc9d4>
   1ded8:	b	1dedc <__assert_fail@plt+0xc994>
   1dedc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dee0:	mov	r1, #-2147483648	; 0x80000000
   1dee4:	add	r1, r1, r0, asr #31
   1dee8:	rsbs	r0, r0, #0
   1deec:	rscs	r1, r1, #0
   1def0:	blt	1e01c <__assert_fail@plt+0xcad4>
   1def4:	b	1e030 <__assert_fail@plt+0xcae8>
   1def8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1defc:	movw	r1, #0
   1df00:	cmp	r1, r0
   1df04:	bge	1e030 <__assert_fail@plt+0xcae8>
   1df08:	mov	r0, #0
   1df0c:	cmp	r0, #0
   1df10:	bne	1e01c <__assert_fail@plt+0xcad4>
   1df14:	b	1e030 <__assert_fail@plt+0xcae8>
   1df18:	andhi	r0, r0, r1
   1df1c:	ldr	r0, [fp, #8]
   1df20:	asr	r3, r0, #31
   1df24:	mov	r1, #0
   1df28:	mov	r2, #-2147483648	; 0x80000000
   1df2c:	str	r0, [fp, #-88]	; 0xffffffa8
   1df30:	mov	r0, r1
   1df34:	mov	r1, r2
   1df38:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1df3c:	bl	24490 <__assert_fail@plt+0x12f48>
   1df40:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1df44:	subs	r0, r0, r2
   1df48:	sbcs	r1, r1, r2, asr #31
   1df4c:	blt	1e01c <__assert_fail@plt+0xcad4>
   1df50:	b	1e030 <__assert_fail@plt+0xcae8>
   1df54:	ldr	r0, [fp, #8]
   1df58:	cmp	r0, #0
   1df5c:	bne	1df64 <__assert_fail@plt+0xca1c>
   1df60:	b	1e030 <__assert_fail@plt+0xcae8>
   1df64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df68:	cmp	r0, #0
   1df6c:	bge	1dfe4 <__assert_fail@plt+0xca9c>
   1df70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df74:	cmn	r0, #1
   1df78:	bne	1dfac <__assert_fail@plt+0xca64>
   1df7c:	b	1df80 <__assert_fail@plt+0xca38>
   1df80:	ldr	r0, [fp, #8]
   1df84:	mov	r1, #-2147483648	; 0x80000000
   1df88:	add	r1, r1, r0, asr #31
   1df8c:	rsbs	r0, r0, #0
   1df90:	rscs	r1, r1, #0
   1df94:	blt	1e01c <__assert_fail@plt+0xcad4>
   1df98:	b	1e030 <__assert_fail@plt+0xcae8>
   1df9c:	mov	r0, #0
   1dfa0:	cmp	r0, #0
   1dfa4:	bne	1e01c <__assert_fail@plt+0xcad4>
   1dfa8:	b	1e030 <__assert_fail@plt+0xcae8>
   1dfac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dfb0:	asr	r3, r0, #31
   1dfb4:	mov	r1, #0
   1dfb8:	mov	r2, #-2147483648	; 0x80000000
   1dfbc:	str	r0, [fp, #-92]	; 0xffffffa4
   1dfc0:	mov	r0, r1
   1dfc4:	mov	r1, r2
   1dfc8:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1dfcc:	bl	24490 <__assert_fail@plt+0x12f48>
   1dfd0:	ldr	r2, [fp, #8]
   1dfd4:	subs	r0, r0, r2
   1dfd8:	sbcs	r1, r1, r2, asr #31
   1dfdc:	blt	1e01c <__assert_fail@plt+0xcad4>
   1dfe0:	b	1e030 <__assert_fail@plt+0xcae8>
   1dfe4:	ldr	r0, [fp, #8]
   1dfe8:	asr	r3, r0, #31
   1dfec:	mvn	r1, #0
   1dff0:	mvn	r2, #-2147483648	; 0x80000000
   1dff4:	str	r0, [fp, #-96]	; 0xffffffa0
   1dff8:	mov	r0, r1
   1dffc:	mov	r1, r2
   1e000:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1e004:	bl	24490 <__assert_fail@plt+0x12f48>
   1e008:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e00c:	subs	r0, r0, r2
   1e010:	sbcs	r1, r1, r2, asr #31
   1e014:	bge	1e030 <__assert_fail@plt+0xcae8>
   1e018:	b	1e01c <__assert_fail@plt+0xcad4>
   1e01c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e020:	ldr	r1, [fp, #8]
   1e024:	mul	r0, r0, r1
   1e028:	str	r0, [fp, #-28]	; 0xffffffe4
   1e02c:	b	1e278 <__assert_fail@plt+0xcd30>
   1e030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e034:	ldr	r1, [fp, #8]
   1e038:	mul	r0, r0, r1
   1e03c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e040:	b	1e284 <__assert_fail@plt+0xcd3c>
   1e044:	ldr	r0, [fp, #8]
   1e048:	cmp	r0, #0
   1e04c:	bge	1e19c <__assert_fail@plt+0xcc54>
   1e050:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e054:	cmp	r0, #0
   1e058:	bge	1e124 <__assert_fail@plt+0xcbdc>
   1e05c:	b	1e09c <__assert_fail@plt+0xcb54>
   1e060:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e064:	ldr	r1, [fp, #8]
   1e068:	asr	r3, r1, #31
   1e06c:	mvn	r2, #0
   1e070:	str	r0, [fp, #-100]	; 0xffffff9c
   1e074:	mov	r0, r2
   1e078:	str	r1, [fp, #-104]	; 0xffffff98
   1e07c:	mov	r1, r2
   1e080:	ldr	r2, [fp, #-104]	; 0xffffff98
   1e084:	bl	24564 <__assert_fail@plt+0x1301c>
   1e088:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1e08c:	subs	r0, r2, r0
   1e090:	rscs	r1, r1, r2, asr #31
   1e094:	bcc	1e250 <__assert_fail@plt+0xcd08>
   1e098:	b	1e264 <__assert_fail@plt+0xcd1c>
   1e09c:	b	1e0a0 <__assert_fail@plt+0xcb58>
   1e0a0:	ldr	r0, [pc, #-400]	; 1df18 <__assert_fail@plt+0xc9d0>
   1e0a4:	ldr	r1, [fp, #8]
   1e0a8:	cmp	r1, r0
   1e0ac:	blt	1e0c4 <__assert_fail@plt+0xcb7c>
   1e0b0:	b	1e0d8 <__assert_fail@plt+0xcb90>
   1e0b4:	ldr	r0, [fp, #8]
   1e0b8:	movw	r1, #0
   1e0bc:	cmp	r1, r0
   1e0c0:	bge	1e0d8 <__assert_fail@plt+0xcb90>
   1e0c4:	mov	r0, #1
   1e0c8:	mvn	r1, #0
   1e0cc:	str	r1, [sp, #108]	; 0x6c
   1e0d0:	str	r0, [sp, #104]	; 0x68
   1e0d4:	b	1e104 <__assert_fail@plt+0xcbbc>
   1e0d8:	ldr	r0, [fp, #8]
   1e0dc:	rsb	r0, r0, #0
   1e0e0:	asr	r3, r0, #31
   1e0e4:	mvn	r1, #0
   1e0e8:	str	r0, [sp, #100]	; 0x64
   1e0ec:	mov	r0, r1
   1e0f0:	ldr	r2, [sp, #100]	; 0x64
   1e0f4:	bl	24564 <__assert_fail@plt+0x1301c>
   1e0f8:	str	r0, [sp, #108]	; 0x6c
   1e0fc:	str	r1, [sp, #104]	; 0x68
   1e100:	b	1e104 <__assert_fail@plt+0xcbbc>
   1e104:	ldr	r0, [sp, #104]	; 0x68
   1e108:	ldr	r1, [sp, #108]	; 0x6c
   1e10c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e110:	mvn	r2, r2
   1e114:	subs	r1, r2, r1
   1e118:	rscs	r0, r0, r2, asr #31
   1e11c:	bcs	1e250 <__assert_fail@plt+0xcd08>
   1e120:	b	1e264 <__assert_fail@plt+0xcd1c>
   1e124:	b	1e128 <__assert_fail@plt+0xcbe0>
   1e128:	b	1e180 <__assert_fail@plt+0xcc38>
   1e12c:	b	1e180 <__assert_fail@plt+0xcc38>
   1e130:	ldr	r0, [fp, #8]
   1e134:	cmn	r0, #1
   1e138:	bne	1e180 <__assert_fail@plt+0xcc38>
   1e13c:	b	1e140 <__assert_fail@plt+0xcbf8>
   1e140:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e144:	add	r0, r0, #0
   1e148:	movw	r1, #0
   1e14c:	cmp	r1, r0
   1e150:	blt	1e250 <__assert_fail@plt+0xcd08>
   1e154:	b	1e264 <__assert_fail@plt+0xcd1c>
   1e158:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e15c:	movw	r1, #0
   1e160:	cmp	r1, r0
   1e164:	bge	1e264 <__assert_fail@plt+0xcd1c>
   1e168:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e16c:	sub	r0, r0, #1
   1e170:	mvn	r1, #0
   1e174:	cmp	r1, r0
   1e178:	blt	1e250 <__assert_fail@plt+0xcd08>
   1e17c:	b	1e264 <__assert_fail@plt+0xcd1c>
   1e180:	ldr	r0, [fp, #8]
   1e184:	movw	r1, #0
   1e188:	sdiv	r0, r1, r0
   1e18c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e190:	cmp	r0, r1
   1e194:	blt	1e250 <__assert_fail@plt+0xcd08>
   1e198:	b	1e264 <__assert_fail@plt+0xcd1c>
   1e19c:	ldr	r0, [fp, #8]
   1e1a0:	cmp	r0, #0
   1e1a4:	bne	1e1ac <__assert_fail@plt+0xcc64>
   1e1a8:	b	1e264 <__assert_fail@plt+0xcd1c>
   1e1ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1b0:	cmp	r0, #0
   1e1b4:	bge	1e220 <__assert_fail@plt+0xccd8>
   1e1b8:	b	1e1bc <__assert_fail@plt+0xcc74>
   1e1bc:	b	1e204 <__assert_fail@plt+0xccbc>
   1e1c0:	b	1e204 <__assert_fail@plt+0xccbc>
   1e1c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1c8:	cmn	r0, #1
   1e1cc:	bne	1e204 <__assert_fail@plt+0xccbc>
   1e1d0:	b	1e1d4 <__assert_fail@plt+0xcc8c>
   1e1d4:	ldr	r0, [fp, #8]
   1e1d8:	add	r0, r0, #0
   1e1dc:	movw	r1, #0
   1e1e0:	cmp	r1, r0
   1e1e4:	blt	1e250 <__assert_fail@plt+0xcd08>
   1e1e8:	b	1e264 <__assert_fail@plt+0xcd1c>
   1e1ec:	ldr	r0, [fp, #8]
   1e1f0:	sub	r0, r0, #1
   1e1f4:	mvn	r1, #0
   1e1f8:	cmp	r1, r0
   1e1fc:	blt	1e250 <__assert_fail@plt+0xcd08>
   1e200:	b	1e264 <__assert_fail@plt+0xcd1c>
   1e204:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e208:	movw	r1, #0
   1e20c:	sdiv	r0, r1, r0
   1e210:	ldr	r1, [fp, #8]
   1e214:	cmp	r0, r1
   1e218:	blt	1e250 <__assert_fail@plt+0xcd08>
   1e21c:	b	1e264 <__assert_fail@plt+0xcd1c>
   1e220:	ldr	r0, [fp, #8]
   1e224:	asr	r3, r0, #31
   1e228:	mvn	r1, #0
   1e22c:	str	r0, [sp, #96]	; 0x60
   1e230:	mov	r0, r1
   1e234:	ldr	r2, [sp, #96]	; 0x60
   1e238:	bl	24564 <__assert_fail@plt+0x1301c>
   1e23c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e240:	subs	r0, r0, r2
   1e244:	sbcs	r1, r1, r2, asr #31
   1e248:	bcs	1e264 <__assert_fail@plt+0xcd1c>
   1e24c:	b	1e250 <__assert_fail@plt+0xcd08>
   1e250:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e254:	ldr	r1, [fp, #8]
   1e258:	mul	r0, r0, r1
   1e25c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e260:	b	1e278 <__assert_fail@plt+0xcd30>
   1e264:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e268:	ldr	r1, [fp, #8]
   1e26c:	mul	r0, r0, r1
   1e270:	str	r0, [fp, #-28]	; 0xffffffe4
   1e274:	b	1e284 <__assert_fail@plt+0xcd3c>
   1e278:	ldr	r0, [pc, #-1036]	; 1de74 <__assert_fail@plt+0xc92c>
   1e27c:	str	r0, [sp, #92]	; 0x5c
   1e280:	b	1e2a4 <__assert_fail@plt+0xcd5c>
   1e284:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e288:	cmp	r0, #64	; 0x40
   1e28c:	movw	r0, #0
   1e290:	movlt	r0, #1
   1e294:	tst	r0, #1
   1e298:	movw	r0, #64	; 0x40
   1e29c:	moveq	r0, #0
   1e2a0:	str	r0, [sp, #92]	; 0x5c
   1e2a4:	ldr	r0, [sp, #92]	; 0x5c
   1e2a8:	str	r0, [fp, #-32]	; 0xffffffe0
   1e2ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e2b0:	cmp	r0, #0
   1e2b4:	beq	1e2e4 <__assert_fail@plt+0xcd9c>
   1e2b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e2bc:	ldr	r1, [fp, #8]
   1e2c0:	sdiv	r0, r0, r1
   1e2c4:	str	r0, [fp, #-24]	; 0xffffffe8
   1e2c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e2cc:	mov	r1, r0
   1e2d0:	ldr	r2, [fp, #8]
   1e2d4:	sdiv	r3, r0, r2
   1e2d8:	mls	r0, r3, r2, r0
   1e2dc:	sub	r0, r1, r0
   1e2e0:	str	r0, [fp, #-28]	; 0xffffffe4
   1e2e4:	ldr	r0, [fp, #-4]
   1e2e8:	movw	r1, #0
   1e2ec:	cmp	r0, r1
   1e2f0:	bne	1e300 <__assert_fail@plt+0xcdb8>
   1e2f4:	ldr	r0, [fp, #-8]
   1e2f8:	movw	r1, #0
   1e2fc:	str	r1, [r0]
   1e300:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e304:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e308:	sub	r0, r0, r1
   1e30c:	ldr	r1, [fp, #-12]
   1e310:	cmp	r0, r1
   1e314:	bge	1f700 <__assert_fail@plt+0xe1b8>
   1e318:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e31c:	ldr	r1, [fp, #-12]
   1e320:	add	r1, r0, r1
   1e324:	mov	r2, #1
   1e328:	cmp	r1, r0
   1e32c:	movwvc	r2, #0
   1e330:	str	r1, [fp, #-24]	; 0xffffffe8
   1e334:	tst	r2, #1
   1e338:	bne	1f6fc <__assert_fail@plt+0xe1b4>
   1e33c:	ldr	r0, [fp, #-16]
   1e340:	movw	r1, #0
   1e344:	cmp	r1, r0
   1e348:	bgt	1e35c <__assert_fail@plt+0xce14>
   1e34c:	ldr	r0, [fp, #-16]
   1e350:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e354:	cmp	r0, r1
   1e358:	blt	1f6fc <__assert_fail@plt+0xe1b4>
   1e35c:	b	1e738 <__assert_fail@plt+0xd1f0>
   1e360:			; <UNDEFINED> instruction: 0xffff8000
   1e364:	b	1e368 <__assert_fail@plt+0xce20>
   1e368:	ldr	r0, [fp, #8]
   1e36c:	cmp	r0, #0
   1e370:	bge	1e484 <__assert_fail@plt+0xcf3c>
   1e374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e378:	cmp	r0, #0
   1e37c:	bge	1e408 <__assert_fail@plt+0xcec0>
   1e380:	b	1e384 <__assert_fail@plt+0xce3c>
   1e384:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e388:	ldr	r1, [fp, #8]
   1e38c:	movw	r2, #127	; 0x7f
   1e390:	sdiv	r1, r2, r1
   1e394:	cmp	r0, r1
   1e398:	blt	1e524 <__assert_fail@plt+0xcfdc>
   1e39c:	b	1e53c <__assert_fail@plt+0xcff4>
   1e3a0:	b	1e3a4 <__assert_fail@plt+0xce5c>
   1e3a4:	ldr	r0, [pc, #-1172]	; 1df18 <__assert_fail@plt+0xc9d0>
   1e3a8:	ldr	r1, [fp, #8]
   1e3ac:	cmp	r1, r0
   1e3b0:	blt	1e3c8 <__assert_fail@plt+0xce80>
   1e3b4:	b	1e3d4 <__assert_fail@plt+0xce8c>
   1e3b8:	ldr	r0, [fp, #8]
   1e3bc:	movw	r1, #0
   1e3c0:	cmp	r1, r0
   1e3c4:	bge	1e3d4 <__assert_fail@plt+0xce8c>
   1e3c8:	movw	r0, #0
   1e3cc:	str	r0, [sp, #88]	; 0x58
   1e3d0:	b	1e3ec <__assert_fail@plt+0xcea4>
   1e3d4:	ldr	r0, [fp, #8]
   1e3d8:	movw	r1, #0
   1e3dc:	sub	r0, r1, r0
   1e3e0:	movw	r1, #127	; 0x7f
   1e3e4:	sdiv	r0, r1, r0
   1e3e8:	str	r0, [sp, #88]	; 0x58
   1e3ec:	ldr	r0, [sp, #88]	; 0x58
   1e3f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e3f4:	mvn	r2, #0
   1e3f8:	sub	r1, r2, r1
   1e3fc:	cmp	r0, r1
   1e400:	ble	1e524 <__assert_fail@plt+0xcfdc>
   1e404:	b	1e53c <__assert_fail@plt+0xcff4>
   1e408:	b	1e40c <__assert_fail@plt+0xcec4>
   1e40c:	b	1e468 <__assert_fail@plt+0xcf20>
   1e410:	b	1e468 <__assert_fail@plt+0xcf20>
   1e414:	ldr	r0, [fp, #8]
   1e418:	cmn	r0, #1
   1e41c:	bne	1e468 <__assert_fail@plt+0xcf20>
   1e420:	b	1e424 <__assert_fail@plt+0xcedc>
   1e424:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e428:	mvn	r1, #127	; 0x7f
   1e42c:	add	r0, r0, r1
   1e430:	movw	r1, #0
   1e434:	cmp	r1, r0
   1e438:	blt	1e524 <__assert_fail@plt+0xcfdc>
   1e43c:	b	1e53c <__assert_fail@plt+0xcff4>
   1e440:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e444:	movw	r1, #0
   1e448:	cmp	r1, r0
   1e44c:	bge	1e53c <__assert_fail@plt+0xcff4>
   1e450:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e454:	sub	r0, r0, #1
   1e458:	movw	r1, #127	; 0x7f
   1e45c:	cmp	r1, r0
   1e460:	blt	1e524 <__assert_fail@plt+0xcfdc>
   1e464:	b	1e53c <__assert_fail@plt+0xcff4>
   1e468:	ldr	r0, [fp, #8]
   1e46c:	mvn	r1, #127	; 0x7f
   1e470:	sdiv	r0, r1, r0
   1e474:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e478:	cmp	r0, r1
   1e47c:	blt	1e524 <__assert_fail@plt+0xcfdc>
   1e480:	b	1e53c <__assert_fail@plt+0xcff4>
   1e484:	ldr	r0, [fp, #8]
   1e488:	cmp	r0, #0
   1e48c:	bne	1e494 <__assert_fail@plt+0xcf4c>
   1e490:	b	1e53c <__assert_fail@plt+0xcff4>
   1e494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e498:	cmp	r0, #0
   1e49c:	bge	1e50c <__assert_fail@plt+0xcfc4>
   1e4a0:	b	1e4a4 <__assert_fail@plt+0xcf5c>
   1e4a4:	b	1e4f0 <__assert_fail@plt+0xcfa8>
   1e4a8:	b	1e4f0 <__assert_fail@plt+0xcfa8>
   1e4ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4b0:	cmn	r0, #1
   1e4b4:	bne	1e4f0 <__assert_fail@plt+0xcfa8>
   1e4b8:	b	1e4bc <__assert_fail@plt+0xcf74>
   1e4bc:	ldr	r0, [fp, #8]
   1e4c0:	mvn	r1, #127	; 0x7f
   1e4c4:	add	r0, r0, r1
   1e4c8:	movw	r1, #0
   1e4cc:	cmp	r1, r0
   1e4d0:	blt	1e524 <__assert_fail@plt+0xcfdc>
   1e4d4:	b	1e53c <__assert_fail@plt+0xcff4>
   1e4d8:	ldr	r0, [fp, #8]
   1e4dc:	sub	r0, r0, #1
   1e4e0:	movw	r1, #127	; 0x7f
   1e4e4:	cmp	r1, r0
   1e4e8:	blt	1e524 <__assert_fail@plt+0xcfdc>
   1e4ec:	b	1e53c <__assert_fail@plt+0xcff4>
   1e4f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4f4:	mvn	r1, #127	; 0x7f
   1e4f8:	sdiv	r0, r1, r0
   1e4fc:	ldr	r1, [fp, #8]
   1e500:	cmp	r0, r1
   1e504:	blt	1e524 <__assert_fail@plt+0xcfdc>
   1e508:	b	1e53c <__assert_fail@plt+0xcff4>
   1e50c:	ldr	r0, [fp, #8]
   1e510:	movw	r1, #127	; 0x7f
   1e514:	sdiv	r0, r1, r0
   1e518:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e51c:	cmp	r0, r1
   1e520:	bge	1e53c <__assert_fail@plt+0xcff4>
   1e524:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e528:	ldr	r1, [fp, #8]
   1e52c:	mul	r0, r0, r1
   1e530:	sxtb	r0, r0
   1e534:	str	r0, [fp, #-28]	; 0xffffffe4
   1e538:	b	1f6fc <__assert_fail@plt+0xe1b4>
   1e53c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e540:	ldr	r1, [fp, #8]
   1e544:	mul	r0, r0, r1
   1e548:	sxtb	r0, r0
   1e54c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e550:	b	1f700 <__assert_fail@plt+0xe1b8>
   1e554:	ldr	r0, [fp, #8]
   1e558:	cmp	r0, #0
   1e55c:	bge	1e66c <__assert_fail@plt+0xd124>
   1e560:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e564:	cmp	r0, #0
   1e568:	bge	1e5f4 <__assert_fail@plt+0xd0ac>
   1e56c:	b	1e570 <__assert_fail@plt+0xd028>
   1e570:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e574:	ldr	r1, [fp, #8]
   1e578:	movw	r2, #255	; 0xff
   1e57c:	sdiv	r1, r2, r1
   1e580:	cmp	r0, r1
   1e584:	blt	1e708 <__assert_fail@plt+0xd1c0>
   1e588:	b	1e720 <__assert_fail@plt+0xd1d8>
   1e58c:	b	1e590 <__assert_fail@plt+0xd048>
   1e590:	ldr	r0, [pc, #-1664]	; 1df18 <__assert_fail@plt+0xc9d0>
   1e594:	ldr	r1, [fp, #8]
   1e598:	cmp	r1, r0
   1e59c:	blt	1e5b4 <__assert_fail@plt+0xd06c>
   1e5a0:	b	1e5c0 <__assert_fail@plt+0xd078>
   1e5a4:	ldr	r0, [fp, #8]
   1e5a8:	movw	r1, #0
   1e5ac:	cmp	r1, r0
   1e5b0:	bge	1e5c0 <__assert_fail@plt+0xd078>
   1e5b4:	movw	r0, #0
   1e5b8:	str	r0, [sp, #84]	; 0x54
   1e5bc:	b	1e5d8 <__assert_fail@plt+0xd090>
   1e5c0:	ldr	r0, [fp, #8]
   1e5c4:	movw	r1, #0
   1e5c8:	sub	r0, r1, r0
   1e5cc:	movw	r1, #255	; 0xff
   1e5d0:	sdiv	r0, r1, r0
   1e5d4:	str	r0, [sp, #84]	; 0x54
   1e5d8:	ldr	r0, [sp, #84]	; 0x54
   1e5dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e5e0:	mvn	r2, #0
   1e5e4:	sub	r1, r2, r1
   1e5e8:	cmp	r0, r1
   1e5ec:	ble	1e708 <__assert_fail@plt+0xd1c0>
   1e5f0:	b	1e720 <__assert_fail@plt+0xd1d8>
   1e5f4:	b	1e5f8 <__assert_fail@plt+0xd0b0>
   1e5f8:	b	1e650 <__assert_fail@plt+0xd108>
   1e5fc:	b	1e650 <__assert_fail@plt+0xd108>
   1e600:	ldr	r0, [fp, #8]
   1e604:	cmn	r0, #1
   1e608:	bne	1e650 <__assert_fail@plt+0xd108>
   1e60c:	b	1e610 <__assert_fail@plt+0xd0c8>
   1e610:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e614:	add	r0, r0, #0
   1e618:	movw	r1, #0
   1e61c:	cmp	r1, r0
   1e620:	blt	1e708 <__assert_fail@plt+0xd1c0>
   1e624:	b	1e720 <__assert_fail@plt+0xd1d8>
   1e628:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e62c:	movw	r1, #0
   1e630:	cmp	r1, r0
   1e634:	bge	1e720 <__assert_fail@plt+0xd1d8>
   1e638:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e63c:	sub	r0, r0, #1
   1e640:	mvn	r1, #0
   1e644:	cmp	r1, r0
   1e648:	blt	1e708 <__assert_fail@plt+0xd1c0>
   1e64c:	b	1e720 <__assert_fail@plt+0xd1d8>
   1e650:	ldr	r0, [fp, #8]
   1e654:	movw	r1, #0
   1e658:	sdiv	r0, r1, r0
   1e65c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e660:	cmp	r0, r1
   1e664:	blt	1e708 <__assert_fail@plt+0xd1c0>
   1e668:	b	1e720 <__assert_fail@plt+0xd1d8>
   1e66c:	ldr	r0, [fp, #8]
   1e670:	cmp	r0, #0
   1e674:	bne	1e67c <__assert_fail@plt+0xd134>
   1e678:	b	1e720 <__assert_fail@plt+0xd1d8>
   1e67c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e680:	cmp	r0, #0
   1e684:	bge	1e6f0 <__assert_fail@plt+0xd1a8>
   1e688:	b	1e68c <__assert_fail@plt+0xd144>
   1e68c:	b	1e6d4 <__assert_fail@plt+0xd18c>
   1e690:	b	1e6d4 <__assert_fail@plt+0xd18c>
   1e694:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e698:	cmn	r0, #1
   1e69c:	bne	1e6d4 <__assert_fail@plt+0xd18c>
   1e6a0:	b	1e6a4 <__assert_fail@plt+0xd15c>
   1e6a4:	ldr	r0, [fp, #8]
   1e6a8:	add	r0, r0, #0
   1e6ac:	movw	r1, #0
   1e6b0:	cmp	r1, r0
   1e6b4:	blt	1e708 <__assert_fail@plt+0xd1c0>
   1e6b8:	b	1e720 <__assert_fail@plt+0xd1d8>
   1e6bc:	ldr	r0, [fp, #8]
   1e6c0:	sub	r0, r0, #1
   1e6c4:	mvn	r1, #0
   1e6c8:	cmp	r1, r0
   1e6cc:	blt	1e708 <__assert_fail@plt+0xd1c0>
   1e6d0:	b	1e720 <__assert_fail@plt+0xd1d8>
   1e6d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e6d8:	movw	r1, #0
   1e6dc:	sdiv	r0, r1, r0
   1e6e0:	ldr	r1, [fp, #8]
   1e6e4:	cmp	r0, r1
   1e6e8:	blt	1e708 <__assert_fail@plt+0xd1c0>
   1e6ec:	b	1e720 <__assert_fail@plt+0xd1d8>
   1e6f0:	ldr	r0, [fp, #8]
   1e6f4:	movw	r1, #255	; 0xff
   1e6f8:	sdiv	r0, r1, r0
   1e6fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e700:	cmp	r0, r1
   1e704:	bge	1e720 <__assert_fail@plt+0xd1d8>
   1e708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e70c:	ldr	r1, [fp, #8]
   1e710:	mul	r0, r0, r1
   1e714:	and	r0, r0, #255	; 0xff
   1e718:	str	r0, [fp, #-28]	; 0xffffffe4
   1e71c:	b	1f6fc <__assert_fail@plt+0xe1b4>
   1e720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e724:	ldr	r1, [fp, #8]
   1e728:	mul	r0, r0, r1
   1e72c:	and	r0, r0, #255	; 0xff
   1e730:	str	r0, [fp, #-28]	; 0xffffffe4
   1e734:	b	1f700 <__assert_fail@plt+0xe1b8>
   1e738:	b	1eb14 <__assert_fail@plt+0xd5cc>
   1e73c:	b	1e740 <__assert_fail@plt+0xd1f8>
   1e740:	ldr	r0, [fp, #8]
   1e744:	cmp	r0, #0
   1e748:	bge	1e860 <__assert_fail@plt+0xd318>
   1e74c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e750:	cmp	r0, #0
   1e754:	bge	1e7e4 <__assert_fail@plt+0xd29c>
   1e758:	b	1e75c <__assert_fail@plt+0xd214>
   1e75c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e760:	ldr	r1, [fp, #8]
   1e764:	movw	r2, #32767	; 0x7fff
   1e768:	sdiv	r1, r2, r1
   1e76c:	cmp	r0, r1
   1e770:	blt	1e900 <__assert_fail@plt+0xd3b8>
   1e774:	b	1e918 <__assert_fail@plt+0xd3d0>
   1e778:	andhi	r0, r0, r0
   1e77c:	b	1e780 <__assert_fail@plt+0xd238>
   1e780:	ldr	r0, [pc, #4004]	; 1f72c <__assert_fail@plt+0xe1e4>
   1e784:	ldr	r1, [fp, #8]
   1e788:	cmp	r1, r0
   1e78c:	blt	1e7a4 <__assert_fail@plt+0xd25c>
   1e790:	b	1e7b0 <__assert_fail@plt+0xd268>
   1e794:	ldr	r0, [fp, #8]
   1e798:	movw	r1, #0
   1e79c:	cmp	r1, r0
   1e7a0:	bge	1e7b0 <__assert_fail@plt+0xd268>
   1e7a4:	movw	r0, #0
   1e7a8:	str	r0, [sp, #80]	; 0x50
   1e7ac:	b	1e7c8 <__assert_fail@plt+0xd280>
   1e7b0:	ldr	r0, [fp, #8]
   1e7b4:	movw	r1, #0
   1e7b8:	sub	r0, r1, r0
   1e7bc:	movw	r1, #32767	; 0x7fff
   1e7c0:	sdiv	r0, r1, r0
   1e7c4:	str	r0, [sp, #80]	; 0x50
   1e7c8:	ldr	r0, [sp, #80]	; 0x50
   1e7cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e7d0:	mvn	r2, #0
   1e7d4:	sub	r1, r2, r1
   1e7d8:	cmp	r0, r1
   1e7dc:	ble	1e900 <__assert_fail@plt+0xd3b8>
   1e7e0:	b	1e918 <__assert_fail@plt+0xd3d0>
   1e7e4:	b	1e7e8 <__assert_fail@plt+0xd2a0>
   1e7e8:	b	1e844 <__assert_fail@plt+0xd2fc>
   1e7ec:	b	1e844 <__assert_fail@plt+0xd2fc>
   1e7f0:	ldr	r0, [fp, #8]
   1e7f4:	cmn	r0, #1
   1e7f8:	bne	1e844 <__assert_fail@plt+0xd2fc>
   1e7fc:	b	1e800 <__assert_fail@plt+0xd2b8>
   1e800:	ldr	r0, [pc, #3884]	; 1f734 <__assert_fail@plt+0xe1ec>
   1e804:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e808:	add	r0, r1, r0
   1e80c:	movw	r1, #0
   1e810:	cmp	r1, r0
   1e814:	blt	1e900 <__assert_fail@plt+0xd3b8>
   1e818:	b	1e918 <__assert_fail@plt+0xd3d0>
   1e81c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e820:	movw	r1, #0
   1e824:	cmp	r1, r0
   1e828:	bge	1e918 <__assert_fail@plt+0xd3d0>
   1e82c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e830:	sub	r0, r0, #1
   1e834:	movw	r1, #32767	; 0x7fff
   1e838:	cmp	r1, r0
   1e83c:	blt	1e900 <__assert_fail@plt+0xd3b8>
   1e840:	b	1e918 <__assert_fail@plt+0xd3d0>
   1e844:	ldr	r0, [pc, #3816]	; 1f734 <__assert_fail@plt+0xe1ec>
   1e848:	ldr	r1, [fp, #8]
   1e84c:	sdiv	r0, r0, r1
   1e850:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e854:	cmp	r0, r1
   1e858:	blt	1e900 <__assert_fail@plt+0xd3b8>
   1e85c:	b	1e918 <__assert_fail@plt+0xd3d0>
   1e860:	ldr	r0, [fp, #8]
   1e864:	cmp	r0, #0
   1e868:	bne	1e870 <__assert_fail@plt+0xd328>
   1e86c:	b	1e918 <__assert_fail@plt+0xd3d0>
   1e870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e874:	cmp	r0, #0
   1e878:	bge	1e8e8 <__assert_fail@plt+0xd3a0>
   1e87c:	b	1e880 <__assert_fail@plt+0xd338>
   1e880:	b	1e8cc <__assert_fail@plt+0xd384>
   1e884:	b	1e8cc <__assert_fail@plt+0xd384>
   1e888:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e88c:	cmn	r0, #1
   1e890:	bne	1e8cc <__assert_fail@plt+0xd384>
   1e894:	b	1e898 <__assert_fail@plt+0xd350>
   1e898:	ldr	r0, [pc, #3732]	; 1f734 <__assert_fail@plt+0xe1ec>
   1e89c:	ldr	r1, [fp, #8]
   1e8a0:	add	r0, r1, r0
   1e8a4:	movw	r1, #0
   1e8a8:	cmp	r1, r0
   1e8ac:	blt	1e900 <__assert_fail@plt+0xd3b8>
   1e8b0:	b	1e918 <__assert_fail@plt+0xd3d0>
   1e8b4:	ldr	r0, [fp, #8]
   1e8b8:	sub	r0, r0, #1
   1e8bc:	movw	r1, #32767	; 0x7fff
   1e8c0:	cmp	r1, r0
   1e8c4:	blt	1e900 <__assert_fail@plt+0xd3b8>
   1e8c8:	b	1e918 <__assert_fail@plt+0xd3d0>
   1e8cc:	ldr	r0, [pc, #3680]	; 1f734 <__assert_fail@plt+0xe1ec>
   1e8d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e8d4:	sdiv	r0, r0, r1
   1e8d8:	ldr	r1, [fp, #8]
   1e8dc:	cmp	r0, r1
   1e8e0:	blt	1e900 <__assert_fail@plt+0xd3b8>
   1e8e4:	b	1e918 <__assert_fail@plt+0xd3d0>
   1e8e8:	ldr	r0, [fp, #8]
   1e8ec:	movw	r1, #32767	; 0x7fff
   1e8f0:	sdiv	r0, r1, r0
   1e8f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e8f8:	cmp	r0, r1
   1e8fc:	bge	1e918 <__assert_fail@plt+0xd3d0>
   1e900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e904:	ldr	r1, [fp, #8]
   1e908:	mul	r0, r0, r1
   1e90c:	sxth	r0, r0
   1e910:	str	r0, [fp, #-28]	; 0xffffffe4
   1e914:	b	1f6fc <__assert_fail@plt+0xe1b4>
   1e918:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e91c:	ldr	r1, [fp, #8]
   1e920:	mul	r0, r0, r1
   1e924:	sxth	r0, r0
   1e928:	str	r0, [fp, #-28]	; 0xffffffe4
   1e92c:	b	1f700 <__assert_fail@plt+0xe1b8>
   1e930:	ldr	r0, [fp, #8]
   1e934:	cmp	r0, #0
   1e938:	bge	1ea48 <__assert_fail@plt+0xd500>
   1e93c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e940:	cmp	r0, #0
   1e944:	bge	1e9d0 <__assert_fail@plt+0xd488>
   1e948:	b	1e94c <__assert_fail@plt+0xd404>
   1e94c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e950:	ldr	r1, [fp, #8]
   1e954:	movw	r2, #65535	; 0xffff
   1e958:	sdiv	r1, r2, r1
   1e95c:	cmp	r0, r1
   1e960:	blt	1eae4 <__assert_fail@plt+0xd59c>
   1e964:	b	1eafc <__assert_fail@plt+0xd5b4>
   1e968:	b	1e96c <__assert_fail@plt+0xd424>
   1e96c:	ldr	r0, [pc, #3512]	; 1f72c <__assert_fail@plt+0xe1e4>
   1e970:	ldr	r1, [fp, #8]
   1e974:	cmp	r1, r0
   1e978:	blt	1e990 <__assert_fail@plt+0xd448>
   1e97c:	b	1e99c <__assert_fail@plt+0xd454>
   1e980:	ldr	r0, [fp, #8]
   1e984:	movw	r1, #0
   1e988:	cmp	r1, r0
   1e98c:	bge	1e99c <__assert_fail@plt+0xd454>
   1e990:	movw	r0, #0
   1e994:	str	r0, [sp, #76]	; 0x4c
   1e998:	b	1e9b4 <__assert_fail@plt+0xd46c>
   1e99c:	ldr	r0, [fp, #8]
   1e9a0:	movw	r1, #0
   1e9a4:	sub	r0, r1, r0
   1e9a8:	movw	r1, #65535	; 0xffff
   1e9ac:	sdiv	r0, r1, r0
   1e9b0:	str	r0, [sp, #76]	; 0x4c
   1e9b4:	ldr	r0, [sp, #76]	; 0x4c
   1e9b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e9bc:	mvn	r2, #0
   1e9c0:	sub	r1, r2, r1
   1e9c4:	cmp	r0, r1
   1e9c8:	ble	1eae4 <__assert_fail@plt+0xd59c>
   1e9cc:	b	1eafc <__assert_fail@plt+0xd5b4>
   1e9d0:	b	1e9d4 <__assert_fail@plt+0xd48c>
   1e9d4:	b	1ea2c <__assert_fail@plt+0xd4e4>
   1e9d8:	b	1ea2c <__assert_fail@plt+0xd4e4>
   1e9dc:	ldr	r0, [fp, #8]
   1e9e0:	cmn	r0, #1
   1e9e4:	bne	1ea2c <__assert_fail@plt+0xd4e4>
   1e9e8:	b	1e9ec <__assert_fail@plt+0xd4a4>
   1e9ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9f0:	add	r0, r0, #0
   1e9f4:	movw	r1, #0
   1e9f8:	cmp	r1, r0
   1e9fc:	blt	1eae4 <__assert_fail@plt+0xd59c>
   1ea00:	b	1eafc <__assert_fail@plt+0xd5b4>
   1ea04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea08:	movw	r1, #0
   1ea0c:	cmp	r1, r0
   1ea10:	bge	1eafc <__assert_fail@plt+0xd5b4>
   1ea14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea18:	sub	r0, r0, #1
   1ea1c:	mvn	r1, #0
   1ea20:	cmp	r1, r0
   1ea24:	blt	1eae4 <__assert_fail@plt+0xd59c>
   1ea28:	b	1eafc <__assert_fail@plt+0xd5b4>
   1ea2c:	ldr	r0, [fp, #8]
   1ea30:	movw	r1, #0
   1ea34:	sdiv	r0, r1, r0
   1ea38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ea3c:	cmp	r0, r1
   1ea40:	blt	1eae4 <__assert_fail@plt+0xd59c>
   1ea44:	b	1eafc <__assert_fail@plt+0xd5b4>
   1ea48:	ldr	r0, [fp, #8]
   1ea4c:	cmp	r0, #0
   1ea50:	bne	1ea58 <__assert_fail@plt+0xd510>
   1ea54:	b	1eafc <__assert_fail@plt+0xd5b4>
   1ea58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea5c:	cmp	r0, #0
   1ea60:	bge	1eacc <__assert_fail@plt+0xd584>
   1ea64:	b	1ea68 <__assert_fail@plt+0xd520>
   1ea68:	b	1eab0 <__assert_fail@plt+0xd568>
   1ea6c:	b	1eab0 <__assert_fail@plt+0xd568>
   1ea70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea74:	cmn	r0, #1
   1ea78:	bne	1eab0 <__assert_fail@plt+0xd568>
   1ea7c:	b	1ea80 <__assert_fail@plt+0xd538>
   1ea80:	ldr	r0, [fp, #8]
   1ea84:	add	r0, r0, #0
   1ea88:	movw	r1, #0
   1ea8c:	cmp	r1, r0
   1ea90:	blt	1eae4 <__assert_fail@plt+0xd59c>
   1ea94:	b	1eafc <__assert_fail@plt+0xd5b4>
   1ea98:	ldr	r0, [fp, #8]
   1ea9c:	sub	r0, r0, #1
   1eaa0:	mvn	r1, #0
   1eaa4:	cmp	r1, r0
   1eaa8:	blt	1eae4 <__assert_fail@plt+0xd59c>
   1eaac:	b	1eafc <__assert_fail@plt+0xd5b4>
   1eab0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eab4:	movw	r1, #0
   1eab8:	sdiv	r0, r1, r0
   1eabc:	ldr	r1, [fp, #8]
   1eac0:	cmp	r0, r1
   1eac4:	blt	1eae4 <__assert_fail@plt+0xd59c>
   1eac8:	b	1eafc <__assert_fail@plt+0xd5b4>
   1eacc:	ldr	r0, [fp, #8]
   1ead0:	movw	r1, #65535	; 0xffff
   1ead4:	sdiv	r0, r1, r0
   1ead8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eadc:	cmp	r0, r1
   1eae0:	bge	1eafc <__assert_fail@plt+0xd5b4>
   1eae4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eae8:	ldr	r1, [fp, #8]
   1eaec:	mul	r0, r0, r1
   1eaf0:	uxth	r0, r0
   1eaf4:	str	r0, [fp, #-28]	; 0xffffffe4
   1eaf8:	b	1f6fc <__assert_fail@plt+0xe1b4>
   1eafc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb00:	ldr	r1, [fp, #8]
   1eb04:	mul	r0, r0, r1
   1eb08:	uxth	r0, r0
   1eb0c:	str	r0, [fp, #-28]	; 0xffffffe4
   1eb10:	b	1f700 <__assert_fail@plt+0xe1b8>
   1eb14:	b	1eb18 <__assert_fail@plt+0xd5d0>
   1eb18:	b	1eb1c <__assert_fail@plt+0xd5d4>
   1eb1c:	ldr	r0, [fp, #8]
   1eb20:	cmp	r0, #0
   1eb24:	bge	1ec28 <__assert_fail@plt+0xd6e0>
   1eb28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb2c:	cmp	r0, #0
   1eb30:	bge	1ebbc <__assert_fail@plt+0xd674>
   1eb34:	b	1eb38 <__assert_fail@plt+0xd5f0>
   1eb38:	ldr	r0, [pc, #3048]	; 1f728 <__assert_fail@plt+0xe1e0>
   1eb3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eb40:	ldr	r2, [fp, #8]
   1eb44:	sdiv	r0, r0, r2
   1eb48:	cmp	r1, r0
   1eb4c:	blt	1ecb8 <__assert_fail@plt+0xd770>
   1eb50:	b	1eccc <__assert_fail@plt+0xd784>
   1eb54:	b	1eb58 <__assert_fail@plt+0xd610>
   1eb58:	ldr	r0, [pc, #3020]	; 1f72c <__assert_fail@plt+0xe1e4>
   1eb5c:	ldr	r1, [fp, #8]
   1eb60:	cmp	r1, r0
   1eb64:	blt	1eb7c <__assert_fail@plt+0xd634>
   1eb68:	b	1eb88 <__assert_fail@plt+0xd640>
   1eb6c:	ldr	r0, [fp, #8]
   1eb70:	movw	r1, #0
   1eb74:	cmp	r1, r0
   1eb78:	bge	1eb88 <__assert_fail@plt+0xd640>
   1eb7c:	movw	r0, #0
   1eb80:	str	r0, [sp, #72]	; 0x48
   1eb84:	b	1eba0 <__assert_fail@plt+0xd658>
   1eb88:	ldr	r0, [pc, #2968]	; 1f728 <__assert_fail@plt+0xe1e0>
   1eb8c:	ldr	r1, [fp, #8]
   1eb90:	movw	r2, #0
   1eb94:	sub	r1, r2, r1
   1eb98:	sdiv	r0, r0, r1
   1eb9c:	str	r0, [sp, #72]	; 0x48
   1eba0:	ldr	r0, [sp, #72]	; 0x48
   1eba4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eba8:	mvn	r2, #0
   1ebac:	sub	r1, r2, r1
   1ebb0:	cmp	r0, r1
   1ebb4:	ble	1ecb8 <__assert_fail@plt+0xd770>
   1ebb8:	b	1eccc <__assert_fail@plt+0xd784>
   1ebbc:	ldr	r0, [fp, #8]
   1ebc0:	cmn	r0, #1
   1ebc4:	bne	1ec0c <__assert_fail@plt+0xd6c4>
   1ebc8:	b	1ebcc <__assert_fail@plt+0xd684>
   1ebcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebd0:	add	r0, r0, #-2147483648	; 0x80000000
   1ebd4:	movw	r1, #0
   1ebd8:	cmp	r1, r0
   1ebdc:	blt	1ecb8 <__assert_fail@plt+0xd770>
   1ebe0:	b	1eccc <__assert_fail@plt+0xd784>
   1ebe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebe8:	movw	r1, #0
   1ebec:	cmp	r1, r0
   1ebf0:	bge	1eccc <__assert_fail@plt+0xd784>
   1ebf4:	ldr	r0, [pc, #2860]	; 1f728 <__assert_fail@plt+0xe1e0>
   1ebf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ebfc:	sub	r1, r1, #1
   1ec00:	cmp	r0, r1
   1ec04:	blt	1ecb8 <__assert_fail@plt+0xd770>
   1ec08:	b	1eccc <__assert_fail@plt+0xd784>
   1ec0c:	ldr	r0, [pc, #2844]	; 1f730 <__assert_fail@plt+0xe1e8>
   1ec10:	ldr	r1, [fp, #8]
   1ec14:	sdiv	r0, r0, r1
   1ec18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ec1c:	cmp	r0, r1
   1ec20:	blt	1ecb8 <__assert_fail@plt+0xd770>
   1ec24:	b	1eccc <__assert_fail@plt+0xd784>
   1ec28:	ldr	r0, [fp, #8]
   1ec2c:	cmp	r0, #0
   1ec30:	bne	1ec38 <__assert_fail@plt+0xd6f0>
   1ec34:	b	1eccc <__assert_fail@plt+0xd784>
   1ec38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec3c:	cmp	r0, #0
   1ec40:	bge	1eca0 <__assert_fail@plt+0xd758>
   1ec44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec48:	cmn	r0, #1
   1ec4c:	bne	1ec84 <__assert_fail@plt+0xd73c>
   1ec50:	b	1ec54 <__assert_fail@plt+0xd70c>
   1ec54:	ldr	r0, [fp, #8]
   1ec58:	add	r0, r0, #-2147483648	; 0x80000000
   1ec5c:	movw	r1, #0
   1ec60:	cmp	r1, r0
   1ec64:	blt	1ecb8 <__assert_fail@plt+0xd770>
   1ec68:	b	1eccc <__assert_fail@plt+0xd784>
   1ec6c:	ldr	r0, [pc, #2740]	; 1f728 <__assert_fail@plt+0xe1e0>
   1ec70:	ldr	r1, [fp, #8]
   1ec74:	sub	r1, r1, #1
   1ec78:	cmp	r0, r1
   1ec7c:	blt	1ecb8 <__assert_fail@plt+0xd770>
   1ec80:	b	1eccc <__assert_fail@plt+0xd784>
   1ec84:	ldr	r0, [pc, #2724]	; 1f730 <__assert_fail@plt+0xe1e8>
   1ec88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ec8c:	sdiv	r0, r0, r1
   1ec90:	ldr	r1, [fp, #8]
   1ec94:	cmp	r0, r1
   1ec98:	blt	1ecb8 <__assert_fail@plt+0xd770>
   1ec9c:	b	1eccc <__assert_fail@plt+0xd784>
   1eca0:	ldr	r0, [pc, #2688]	; 1f728 <__assert_fail@plt+0xe1e0>
   1eca4:	ldr	r1, [fp, #8]
   1eca8:	sdiv	r0, r0, r1
   1ecac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ecb0:	cmp	r0, r1
   1ecb4:	bge	1eccc <__assert_fail@plt+0xd784>
   1ecb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ecbc:	ldr	r1, [fp, #8]
   1ecc0:	mul	r0, r0, r1
   1ecc4:	str	r0, [fp, #-28]	; 0xffffffe4
   1ecc8:	b	1f6fc <__assert_fail@plt+0xe1b4>
   1eccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ecd0:	ldr	r1, [fp, #8]
   1ecd4:	mul	r0, r0, r1
   1ecd8:	str	r0, [fp, #-28]	; 0xffffffe4
   1ecdc:	b	1f700 <__assert_fail@plt+0xe1b8>
   1ece0:	ldr	r0, [fp, #8]
   1ece4:	cmp	r0, #0
   1ece8:	bge	1edf8 <__assert_fail@plt+0xd8b0>
   1ecec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ecf0:	cmp	r0, #0
   1ecf4:	bge	1ed80 <__assert_fail@plt+0xd838>
   1ecf8:	b	1ed18 <__assert_fail@plt+0xd7d0>
   1ecfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed00:	ldr	r1, [fp, #8]
   1ed04:	mvn	r2, #0
   1ed08:	udiv	r1, r2, r1
   1ed0c:	cmp	r0, r1
   1ed10:	bcc	1ee94 <__assert_fail@plt+0xd94c>
   1ed14:	b	1eea8 <__assert_fail@plt+0xd960>
   1ed18:	b	1ed1c <__assert_fail@plt+0xd7d4>
   1ed1c:	ldr	r0, [pc, #2568]	; 1f72c <__assert_fail@plt+0xe1e4>
   1ed20:	ldr	r1, [fp, #8]
   1ed24:	cmp	r1, r0
   1ed28:	blt	1ed40 <__assert_fail@plt+0xd7f8>
   1ed2c:	b	1ed4c <__assert_fail@plt+0xd804>
   1ed30:	ldr	r0, [fp, #8]
   1ed34:	movw	r1, #0
   1ed38:	cmp	r1, r0
   1ed3c:	bge	1ed4c <__assert_fail@plt+0xd804>
   1ed40:	movw	r0, #1
   1ed44:	str	r0, [sp, #68]	; 0x44
   1ed48:	b	1ed64 <__assert_fail@plt+0xd81c>
   1ed4c:	ldr	r0, [fp, #8]
   1ed50:	movw	r1, #0
   1ed54:	sub	r0, r1, r0
   1ed58:	mvn	r1, #0
   1ed5c:	udiv	r0, r1, r0
   1ed60:	str	r0, [sp, #68]	; 0x44
   1ed64:	ldr	r0, [sp, #68]	; 0x44
   1ed68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ed6c:	mvn	r2, #0
   1ed70:	sub	r1, r2, r1
   1ed74:	cmp	r0, r1
   1ed78:	bls	1ee94 <__assert_fail@plt+0xd94c>
   1ed7c:	b	1eea8 <__assert_fail@plt+0xd960>
   1ed80:	b	1ed84 <__assert_fail@plt+0xd83c>
   1ed84:	b	1eddc <__assert_fail@plt+0xd894>
   1ed88:	b	1eddc <__assert_fail@plt+0xd894>
   1ed8c:	ldr	r0, [fp, #8]
   1ed90:	cmn	r0, #1
   1ed94:	bne	1eddc <__assert_fail@plt+0xd894>
   1ed98:	b	1ed9c <__assert_fail@plt+0xd854>
   1ed9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eda0:	add	r0, r0, #0
   1eda4:	movw	r1, #0
   1eda8:	cmp	r1, r0
   1edac:	blt	1ee94 <__assert_fail@plt+0xd94c>
   1edb0:	b	1eea8 <__assert_fail@plt+0xd960>
   1edb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1edb8:	movw	r1, #0
   1edbc:	cmp	r1, r0
   1edc0:	bge	1eea8 <__assert_fail@plt+0xd960>
   1edc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1edc8:	sub	r0, r0, #1
   1edcc:	mvn	r1, #0
   1edd0:	cmp	r1, r0
   1edd4:	blt	1ee94 <__assert_fail@plt+0xd94c>
   1edd8:	b	1eea8 <__assert_fail@plt+0xd960>
   1eddc:	ldr	r0, [fp, #8]
   1ede0:	movw	r1, #0
   1ede4:	sdiv	r0, r1, r0
   1ede8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1edec:	cmp	r0, r1
   1edf0:	blt	1ee94 <__assert_fail@plt+0xd94c>
   1edf4:	b	1eea8 <__assert_fail@plt+0xd960>
   1edf8:	ldr	r0, [fp, #8]
   1edfc:	cmp	r0, #0
   1ee00:	bne	1ee08 <__assert_fail@plt+0xd8c0>
   1ee04:	b	1eea8 <__assert_fail@plt+0xd960>
   1ee08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee0c:	cmp	r0, #0
   1ee10:	bge	1ee7c <__assert_fail@plt+0xd934>
   1ee14:	b	1ee18 <__assert_fail@plt+0xd8d0>
   1ee18:	b	1ee60 <__assert_fail@plt+0xd918>
   1ee1c:	b	1ee60 <__assert_fail@plt+0xd918>
   1ee20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee24:	cmn	r0, #1
   1ee28:	bne	1ee60 <__assert_fail@plt+0xd918>
   1ee2c:	b	1ee30 <__assert_fail@plt+0xd8e8>
   1ee30:	ldr	r0, [fp, #8]
   1ee34:	add	r0, r0, #0
   1ee38:	movw	r1, #0
   1ee3c:	cmp	r1, r0
   1ee40:	blt	1ee94 <__assert_fail@plt+0xd94c>
   1ee44:	b	1eea8 <__assert_fail@plt+0xd960>
   1ee48:	ldr	r0, [fp, #8]
   1ee4c:	sub	r0, r0, #1
   1ee50:	mvn	r1, #0
   1ee54:	cmp	r1, r0
   1ee58:	blt	1ee94 <__assert_fail@plt+0xd94c>
   1ee5c:	b	1eea8 <__assert_fail@plt+0xd960>
   1ee60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee64:	movw	r1, #0
   1ee68:	sdiv	r0, r1, r0
   1ee6c:	ldr	r1, [fp, #8]
   1ee70:	cmp	r0, r1
   1ee74:	blt	1ee94 <__assert_fail@plt+0xd94c>
   1ee78:	b	1eea8 <__assert_fail@plt+0xd960>
   1ee7c:	ldr	r0, [fp, #8]
   1ee80:	mvn	r1, #0
   1ee84:	udiv	r0, r1, r0
   1ee88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ee8c:	cmp	r0, r1
   1ee90:	bcs	1eea8 <__assert_fail@plt+0xd960>
   1ee94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee98:	ldr	r1, [fp, #8]
   1ee9c:	mul	r0, r0, r1
   1eea0:	str	r0, [fp, #-28]	; 0xffffffe4
   1eea4:	b	1f6fc <__assert_fail@plt+0xe1b4>
   1eea8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eeac:	ldr	r1, [fp, #8]
   1eeb0:	mul	r0, r0, r1
   1eeb4:	str	r0, [fp, #-28]	; 0xffffffe4
   1eeb8:	b	1f700 <__assert_fail@plt+0xe1b8>
   1eebc:	b	1eec0 <__assert_fail@plt+0xd978>
   1eec0:	b	1eec4 <__assert_fail@plt+0xd97c>
   1eec4:	ldr	r0, [fp, #8]
   1eec8:	cmp	r0, #0
   1eecc:	bge	1efd0 <__assert_fail@plt+0xda88>
   1eed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eed4:	cmp	r0, #0
   1eed8:	bge	1ef64 <__assert_fail@plt+0xda1c>
   1eedc:	b	1eee0 <__assert_fail@plt+0xd998>
   1eee0:	ldr	r0, [pc, #2112]	; 1f728 <__assert_fail@plt+0xe1e0>
   1eee4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eee8:	ldr	r2, [fp, #8]
   1eeec:	sdiv	r0, r0, r2
   1eef0:	cmp	r1, r0
   1eef4:	blt	1f060 <__assert_fail@plt+0xdb18>
   1eef8:	b	1f074 <__assert_fail@plt+0xdb2c>
   1eefc:	b	1ef00 <__assert_fail@plt+0xd9b8>
   1ef00:	ldr	r0, [pc, #2084]	; 1f72c <__assert_fail@plt+0xe1e4>
   1ef04:	ldr	r1, [fp, #8]
   1ef08:	cmp	r1, r0
   1ef0c:	blt	1ef24 <__assert_fail@plt+0xd9dc>
   1ef10:	b	1ef30 <__assert_fail@plt+0xd9e8>
   1ef14:	ldr	r0, [fp, #8]
   1ef18:	movw	r1, #0
   1ef1c:	cmp	r1, r0
   1ef20:	bge	1ef30 <__assert_fail@plt+0xd9e8>
   1ef24:	movw	r0, #0
   1ef28:	str	r0, [sp, #64]	; 0x40
   1ef2c:	b	1ef48 <__assert_fail@plt+0xda00>
   1ef30:	ldr	r0, [pc, #2032]	; 1f728 <__assert_fail@plt+0xe1e0>
   1ef34:	ldr	r1, [fp, #8]
   1ef38:	movw	r2, #0
   1ef3c:	sub	r1, r2, r1
   1ef40:	sdiv	r0, r0, r1
   1ef44:	str	r0, [sp, #64]	; 0x40
   1ef48:	ldr	r0, [sp, #64]	; 0x40
   1ef4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ef50:	mvn	r2, #0
   1ef54:	sub	r1, r2, r1
   1ef58:	cmp	r0, r1
   1ef5c:	ble	1f060 <__assert_fail@plt+0xdb18>
   1ef60:	b	1f074 <__assert_fail@plt+0xdb2c>
   1ef64:	ldr	r0, [fp, #8]
   1ef68:	cmn	r0, #1
   1ef6c:	bne	1efb4 <__assert_fail@plt+0xda6c>
   1ef70:	b	1ef74 <__assert_fail@plt+0xda2c>
   1ef74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef78:	add	r0, r0, #-2147483648	; 0x80000000
   1ef7c:	movw	r1, #0
   1ef80:	cmp	r1, r0
   1ef84:	blt	1f060 <__assert_fail@plt+0xdb18>
   1ef88:	b	1f074 <__assert_fail@plt+0xdb2c>
   1ef8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef90:	movw	r1, #0
   1ef94:	cmp	r1, r0
   1ef98:	bge	1f074 <__assert_fail@plt+0xdb2c>
   1ef9c:	ldr	r0, [pc, #1924]	; 1f728 <__assert_fail@plt+0xe1e0>
   1efa0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1efa4:	sub	r1, r1, #1
   1efa8:	cmp	r0, r1
   1efac:	blt	1f060 <__assert_fail@plt+0xdb18>
   1efb0:	b	1f074 <__assert_fail@plt+0xdb2c>
   1efb4:	ldr	r0, [pc, #1908]	; 1f730 <__assert_fail@plt+0xe1e8>
   1efb8:	ldr	r1, [fp, #8]
   1efbc:	sdiv	r0, r0, r1
   1efc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1efc4:	cmp	r0, r1
   1efc8:	blt	1f060 <__assert_fail@plt+0xdb18>
   1efcc:	b	1f074 <__assert_fail@plt+0xdb2c>
   1efd0:	ldr	r0, [fp, #8]
   1efd4:	cmp	r0, #0
   1efd8:	bne	1efe0 <__assert_fail@plt+0xda98>
   1efdc:	b	1f074 <__assert_fail@plt+0xdb2c>
   1efe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1efe4:	cmp	r0, #0
   1efe8:	bge	1f048 <__assert_fail@plt+0xdb00>
   1efec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eff0:	cmn	r0, #1
   1eff4:	bne	1f02c <__assert_fail@plt+0xdae4>
   1eff8:	b	1effc <__assert_fail@plt+0xdab4>
   1effc:	ldr	r0, [fp, #8]
   1f000:	add	r0, r0, #-2147483648	; 0x80000000
   1f004:	movw	r1, #0
   1f008:	cmp	r1, r0
   1f00c:	blt	1f060 <__assert_fail@plt+0xdb18>
   1f010:	b	1f074 <__assert_fail@plt+0xdb2c>
   1f014:	ldr	r0, [pc, #1804]	; 1f728 <__assert_fail@plt+0xe1e0>
   1f018:	ldr	r1, [fp, #8]
   1f01c:	sub	r1, r1, #1
   1f020:	cmp	r0, r1
   1f024:	blt	1f060 <__assert_fail@plt+0xdb18>
   1f028:	b	1f074 <__assert_fail@plt+0xdb2c>
   1f02c:	ldr	r0, [pc, #1788]	; 1f730 <__assert_fail@plt+0xe1e8>
   1f030:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f034:	sdiv	r0, r0, r1
   1f038:	ldr	r1, [fp, #8]
   1f03c:	cmp	r0, r1
   1f040:	blt	1f060 <__assert_fail@plt+0xdb18>
   1f044:	b	1f074 <__assert_fail@plt+0xdb2c>
   1f048:	ldr	r0, [pc, #1752]	; 1f728 <__assert_fail@plt+0xe1e0>
   1f04c:	ldr	r1, [fp, #8]
   1f050:	sdiv	r0, r0, r1
   1f054:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f058:	cmp	r0, r1
   1f05c:	bge	1f074 <__assert_fail@plt+0xdb2c>
   1f060:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f064:	ldr	r1, [fp, #8]
   1f068:	mul	r0, r0, r1
   1f06c:	str	r0, [fp, #-28]	; 0xffffffe4
   1f070:	b	1f6fc <__assert_fail@plt+0xe1b4>
   1f074:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f078:	ldr	r1, [fp, #8]
   1f07c:	mul	r0, r0, r1
   1f080:	str	r0, [fp, #-28]	; 0xffffffe4
   1f084:	b	1f700 <__assert_fail@plt+0xe1b8>
   1f088:	ldr	r0, [fp, #8]
   1f08c:	cmp	r0, #0
   1f090:	bge	1f1a0 <__assert_fail@plt+0xdc58>
   1f094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f098:	cmp	r0, #0
   1f09c:	bge	1f128 <__assert_fail@plt+0xdbe0>
   1f0a0:	b	1f0c0 <__assert_fail@plt+0xdb78>
   1f0a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f0a8:	ldr	r1, [fp, #8]
   1f0ac:	mvn	r2, #0
   1f0b0:	udiv	r1, r2, r1
   1f0b4:	cmp	r0, r1
   1f0b8:	bcc	1f23c <__assert_fail@plt+0xdcf4>
   1f0bc:	b	1f250 <__assert_fail@plt+0xdd08>
   1f0c0:	b	1f0c4 <__assert_fail@plt+0xdb7c>
   1f0c4:	ldr	r0, [pc, #1632]	; 1f72c <__assert_fail@plt+0xe1e4>
   1f0c8:	ldr	r1, [fp, #8]
   1f0cc:	cmp	r1, r0
   1f0d0:	blt	1f0e8 <__assert_fail@plt+0xdba0>
   1f0d4:	b	1f0f4 <__assert_fail@plt+0xdbac>
   1f0d8:	ldr	r0, [fp, #8]
   1f0dc:	movw	r1, #0
   1f0e0:	cmp	r1, r0
   1f0e4:	bge	1f0f4 <__assert_fail@plt+0xdbac>
   1f0e8:	movw	r0, #1
   1f0ec:	str	r0, [sp, #60]	; 0x3c
   1f0f0:	b	1f10c <__assert_fail@plt+0xdbc4>
   1f0f4:	ldr	r0, [fp, #8]
   1f0f8:	movw	r1, #0
   1f0fc:	sub	r0, r1, r0
   1f100:	mvn	r1, #0
   1f104:	udiv	r0, r1, r0
   1f108:	str	r0, [sp, #60]	; 0x3c
   1f10c:	ldr	r0, [sp, #60]	; 0x3c
   1f110:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f114:	mvn	r2, #0
   1f118:	sub	r1, r2, r1
   1f11c:	cmp	r0, r1
   1f120:	bls	1f23c <__assert_fail@plt+0xdcf4>
   1f124:	b	1f250 <__assert_fail@plt+0xdd08>
   1f128:	b	1f12c <__assert_fail@plt+0xdbe4>
   1f12c:	b	1f184 <__assert_fail@plt+0xdc3c>
   1f130:	b	1f184 <__assert_fail@plt+0xdc3c>
   1f134:	ldr	r0, [fp, #8]
   1f138:	cmn	r0, #1
   1f13c:	bne	1f184 <__assert_fail@plt+0xdc3c>
   1f140:	b	1f144 <__assert_fail@plt+0xdbfc>
   1f144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f148:	add	r0, r0, #0
   1f14c:	movw	r1, #0
   1f150:	cmp	r1, r0
   1f154:	blt	1f23c <__assert_fail@plt+0xdcf4>
   1f158:	b	1f250 <__assert_fail@plt+0xdd08>
   1f15c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f160:	movw	r1, #0
   1f164:	cmp	r1, r0
   1f168:	bge	1f250 <__assert_fail@plt+0xdd08>
   1f16c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f170:	sub	r0, r0, #1
   1f174:	mvn	r1, #0
   1f178:	cmp	r1, r0
   1f17c:	blt	1f23c <__assert_fail@plt+0xdcf4>
   1f180:	b	1f250 <__assert_fail@plt+0xdd08>
   1f184:	ldr	r0, [fp, #8]
   1f188:	movw	r1, #0
   1f18c:	sdiv	r0, r1, r0
   1f190:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f194:	cmp	r0, r1
   1f198:	blt	1f23c <__assert_fail@plt+0xdcf4>
   1f19c:	b	1f250 <__assert_fail@plt+0xdd08>
   1f1a0:	ldr	r0, [fp, #8]
   1f1a4:	cmp	r0, #0
   1f1a8:	bne	1f1b0 <__assert_fail@plt+0xdc68>
   1f1ac:	b	1f250 <__assert_fail@plt+0xdd08>
   1f1b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1b4:	cmp	r0, #0
   1f1b8:	bge	1f224 <__assert_fail@plt+0xdcdc>
   1f1bc:	b	1f1c0 <__assert_fail@plt+0xdc78>
   1f1c0:	b	1f208 <__assert_fail@plt+0xdcc0>
   1f1c4:	b	1f208 <__assert_fail@plt+0xdcc0>
   1f1c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1cc:	cmn	r0, #1
   1f1d0:	bne	1f208 <__assert_fail@plt+0xdcc0>
   1f1d4:	b	1f1d8 <__assert_fail@plt+0xdc90>
   1f1d8:	ldr	r0, [fp, #8]
   1f1dc:	add	r0, r0, #0
   1f1e0:	movw	r1, #0
   1f1e4:	cmp	r1, r0
   1f1e8:	blt	1f23c <__assert_fail@plt+0xdcf4>
   1f1ec:	b	1f250 <__assert_fail@plt+0xdd08>
   1f1f0:	ldr	r0, [fp, #8]
   1f1f4:	sub	r0, r0, #1
   1f1f8:	mvn	r1, #0
   1f1fc:	cmp	r1, r0
   1f200:	blt	1f23c <__assert_fail@plt+0xdcf4>
   1f204:	b	1f250 <__assert_fail@plt+0xdd08>
   1f208:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f20c:	movw	r1, #0
   1f210:	sdiv	r0, r1, r0
   1f214:	ldr	r1, [fp, #8]
   1f218:	cmp	r0, r1
   1f21c:	blt	1f23c <__assert_fail@plt+0xdcf4>
   1f220:	b	1f250 <__assert_fail@plt+0xdd08>
   1f224:	ldr	r0, [fp, #8]
   1f228:	mvn	r1, #0
   1f22c:	udiv	r0, r1, r0
   1f230:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f234:	cmp	r0, r1
   1f238:	bcs	1f250 <__assert_fail@plt+0xdd08>
   1f23c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f240:	ldr	r1, [fp, #8]
   1f244:	mul	r0, r0, r1
   1f248:	str	r0, [fp, #-28]	; 0xffffffe4
   1f24c:	b	1f6fc <__assert_fail@plt+0xe1b4>
   1f250:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f254:	ldr	r1, [fp, #8]
   1f258:	mul	r0, r0, r1
   1f25c:	str	r0, [fp, #-28]	; 0xffffffe4
   1f260:	b	1f700 <__assert_fail@plt+0xe1b8>
   1f264:	b	1f268 <__assert_fail@plt+0xdd20>
   1f268:	ldr	r0, [fp, #8]
   1f26c:	cmp	r0, #0
   1f270:	bge	1f3d8 <__assert_fail@plt+0xde90>
   1f274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f278:	cmp	r0, #0
   1f27c:	bge	1f354 <__assert_fail@plt+0xde0c>
   1f280:	b	1f284 <__assert_fail@plt+0xdd3c>
   1f284:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f288:	ldr	r1, [fp, #8]
   1f28c:	asr	r3, r1, #31
   1f290:	mvn	r2, #0
   1f294:	mvn	ip, #-2147483648	; 0x80000000
   1f298:	str	r0, [sp, #56]	; 0x38
   1f29c:	mov	r0, r2
   1f2a0:	str	r1, [sp, #52]	; 0x34
   1f2a4:	mov	r1, ip
   1f2a8:	ldr	r2, [sp, #52]	; 0x34
   1f2ac:	bl	24490 <__assert_fail@plt+0x12f48>
   1f2b0:	ldr	r2, [sp, #56]	; 0x38
   1f2b4:	subs	r0, r2, r0
   1f2b8:	rscs	r1, r1, r2, asr #31
   1f2bc:	blt	1f4a0 <__assert_fail@plt+0xdf58>
   1f2c0:	b	1f4b4 <__assert_fail@plt+0xdf6c>
   1f2c4:	b	1f2c8 <__assert_fail@plt+0xdd80>
   1f2c8:	ldr	r0, [pc, #1116]	; 1f72c <__assert_fail@plt+0xe1e4>
   1f2cc:	ldr	r1, [fp, #8]
   1f2d0:	cmp	r1, r0
   1f2d4:	blt	1f2ec <__assert_fail@plt+0xdda4>
   1f2d8:	b	1f300 <__assert_fail@plt+0xddb8>
   1f2dc:	ldr	r0, [fp, #8]
   1f2e0:	movw	r1, #0
   1f2e4:	cmp	r1, r0
   1f2e8:	bge	1f300 <__assert_fail@plt+0xddb8>
   1f2ec:	mov	r0, #0
   1f2f0:	mvn	r1, #0
   1f2f4:	str	r1, [sp, #48]	; 0x30
   1f2f8:	str	r0, [sp, #44]	; 0x2c
   1f2fc:	b	1f334 <__assert_fail@plt+0xddec>
   1f300:	ldr	r0, [fp, #8]
   1f304:	rsb	r0, r0, #0
   1f308:	asr	r3, r0, #31
   1f30c:	mvn	r1, #0
   1f310:	mvn	r2, #-2147483648	; 0x80000000
   1f314:	str	r0, [sp, #40]	; 0x28
   1f318:	mov	r0, r1
   1f31c:	mov	r1, r2
   1f320:	ldr	r2, [sp, #40]	; 0x28
   1f324:	bl	24490 <__assert_fail@plt+0x12f48>
   1f328:	str	r0, [sp, #48]	; 0x30
   1f32c:	str	r1, [sp, #44]	; 0x2c
   1f330:	b	1f334 <__assert_fail@plt+0xddec>
   1f334:	ldr	r0, [sp, #44]	; 0x2c
   1f338:	ldr	r1, [sp, #48]	; 0x30
   1f33c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f340:	mvn	r2, r2
   1f344:	subs	r1, r2, r1
   1f348:	rscs	r0, r0, r2, asr #31
   1f34c:	bge	1f4a0 <__assert_fail@plt+0xdf58>
   1f350:	b	1f4b4 <__assert_fail@plt+0xdf6c>
   1f354:	ldr	r0, [fp, #8]
   1f358:	cmn	r0, #1
   1f35c:	bne	1f3a0 <__assert_fail@plt+0xde58>
   1f360:	b	1f364 <__assert_fail@plt+0xde1c>
   1f364:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f368:	mov	r1, #-2147483648	; 0x80000000
   1f36c:	add	r1, r1, r0, asr #31
   1f370:	rsbs	r0, r0, #0
   1f374:	rscs	r1, r1, #0
   1f378:	blt	1f4a0 <__assert_fail@plt+0xdf58>
   1f37c:	b	1f4b4 <__assert_fail@plt+0xdf6c>
   1f380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f384:	movw	r1, #0
   1f388:	cmp	r1, r0
   1f38c:	bge	1f4b4 <__assert_fail@plt+0xdf6c>
   1f390:	mov	r0, #0
   1f394:	cmp	r0, #0
   1f398:	bne	1f4a0 <__assert_fail@plt+0xdf58>
   1f39c:	b	1f4b4 <__assert_fail@plt+0xdf6c>
   1f3a0:	ldr	r0, [fp, #8]
   1f3a4:	asr	r3, r0, #31
   1f3a8:	mov	r1, #0
   1f3ac:	mov	r2, #-2147483648	; 0x80000000
   1f3b0:	str	r0, [sp, #36]	; 0x24
   1f3b4:	mov	r0, r1
   1f3b8:	mov	r1, r2
   1f3bc:	ldr	r2, [sp, #36]	; 0x24
   1f3c0:	bl	24490 <__assert_fail@plt+0x12f48>
   1f3c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f3c8:	subs	r0, r0, r2
   1f3cc:	sbcs	r1, r1, r2, asr #31
   1f3d0:	blt	1f4a0 <__assert_fail@plt+0xdf58>
   1f3d4:	b	1f4b4 <__assert_fail@plt+0xdf6c>
   1f3d8:	ldr	r0, [fp, #8]
   1f3dc:	cmp	r0, #0
   1f3e0:	bne	1f3e8 <__assert_fail@plt+0xdea0>
   1f3e4:	b	1f4b4 <__assert_fail@plt+0xdf6c>
   1f3e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f3ec:	cmp	r0, #0
   1f3f0:	bge	1f468 <__assert_fail@plt+0xdf20>
   1f3f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f3f8:	cmn	r0, #1
   1f3fc:	bne	1f430 <__assert_fail@plt+0xdee8>
   1f400:	b	1f404 <__assert_fail@plt+0xdebc>
   1f404:	ldr	r0, [fp, #8]
   1f408:	mov	r1, #-2147483648	; 0x80000000
   1f40c:	add	r1, r1, r0, asr #31
   1f410:	rsbs	r0, r0, #0
   1f414:	rscs	r1, r1, #0
   1f418:	blt	1f4a0 <__assert_fail@plt+0xdf58>
   1f41c:	b	1f4b4 <__assert_fail@plt+0xdf6c>
   1f420:	mov	r0, #0
   1f424:	cmp	r0, #0
   1f428:	bne	1f4a0 <__assert_fail@plt+0xdf58>
   1f42c:	b	1f4b4 <__assert_fail@plt+0xdf6c>
   1f430:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f434:	asr	r3, r0, #31
   1f438:	mov	r1, #0
   1f43c:	mov	r2, #-2147483648	; 0x80000000
   1f440:	str	r0, [sp, #32]
   1f444:	mov	r0, r1
   1f448:	mov	r1, r2
   1f44c:	ldr	r2, [sp, #32]
   1f450:	bl	24490 <__assert_fail@plt+0x12f48>
   1f454:	ldr	r2, [fp, #8]
   1f458:	subs	r0, r0, r2
   1f45c:	sbcs	r1, r1, r2, asr #31
   1f460:	blt	1f4a0 <__assert_fail@plt+0xdf58>
   1f464:	b	1f4b4 <__assert_fail@plt+0xdf6c>
   1f468:	ldr	r0, [fp, #8]
   1f46c:	asr	r3, r0, #31
   1f470:	mvn	r1, #0
   1f474:	mvn	r2, #-2147483648	; 0x80000000
   1f478:	str	r0, [sp, #28]
   1f47c:	mov	r0, r1
   1f480:	mov	r1, r2
   1f484:	ldr	r2, [sp, #28]
   1f488:	bl	24490 <__assert_fail@plt+0x12f48>
   1f48c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f490:	subs	r0, r0, r2
   1f494:	sbcs	r1, r1, r2, asr #31
   1f498:	bge	1f4b4 <__assert_fail@plt+0xdf6c>
   1f49c:	b	1f4a0 <__assert_fail@plt+0xdf58>
   1f4a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f4a4:	ldr	r1, [fp, #8]
   1f4a8:	mul	r0, r0, r1
   1f4ac:	str	r0, [fp, #-28]	; 0xffffffe4
   1f4b0:	b	1f6fc <__assert_fail@plt+0xe1b4>
   1f4b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f4b8:	ldr	r1, [fp, #8]
   1f4bc:	mul	r0, r0, r1
   1f4c0:	str	r0, [fp, #-28]	; 0xffffffe4
   1f4c4:	b	1f700 <__assert_fail@plt+0xe1b8>
   1f4c8:	ldr	r0, [fp, #8]
   1f4cc:	cmp	r0, #0
   1f4d0:	bge	1f620 <__assert_fail@plt+0xe0d8>
   1f4d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f4d8:	cmp	r0, #0
   1f4dc:	bge	1f5a8 <__assert_fail@plt+0xe060>
   1f4e0:	b	1f520 <__assert_fail@plt+0xdfd8>
   1f4e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f4e8:	ldr	r1, [fp, #8]
   1f4ec:	asr	r3, r1, #31
   1f4f0:	mvn	r2, #0
   1f4f4:	str	r0, [sp, #24]
   1f4f8:	mov	r0, r2
   1f4fc:	str	r1, [sp, #20]
   1f500:	mov	r1, r2
   1f504:	ldr	r2, [sp, #20]
   1f508:	bl	24564 <__assert_fail@plt+0x1301c>
   1f50c:	ldr	r2, [sp, #24]
   1f510:	subs	r0, r2, r0
   1f514:	rscs	r1, r1, r2, asr #31
   1f518:	bcc	1f6d4 <__assert_fail@plt+0xe18c>
   1f51c:	b	1f6e8 <__assert_fail@plt+0xe1a0>
   1f520:	b	1f524 <__assert_fail@plt+0xdfdc>
   1f524:	ldr	r0, [pc, #512]	; 1f72c <__assert_fail@plt+0xe1e4>
   1f528:	ldr	r1, [fp, #8]
   1f52c:	cmp	r1, r0
   1f530:	blt	1f548 <__assert_fail@plt+0xe000>
   1f534:	b	1f55c <__assert_fail@plt+0xe014>
   1f538:	ldr	r0, [fp, #8]
   1f53c:	movw	r1, #0
   1f540:	cmp	r1, r0
   1f544:	bge	1f55c <__assert_fail@plt+0xe014>
   1f548:	mov	r0, #1
   1f54c:	mvn	r1, #0
   1f550:	str	r1, [sp, #16]
   1f554:	str	r0, [sp, #12]
   1f558:	b	1f588 <__assert_fail@plt+0xe040>
   1f55c:	ldr	r0, [fp, #8]
   1f560:	rsb	r0, r0, #0
   1f564:	asr	r3, r0, #31
   1f568:	mvn	r1, #0
   1f56c:	str	r0, [sp, #8]
   1f570:	mov	r0, r1
   1f574:	ldr	r2, [sp, #8]
   1f578:	bl	24564 <__assert_fail@plt+0x1301c>
   1f57c:	str	r0, [sp, #16]
   1f580:	str	r1, [sp, #12]
   1f584:	b	1f588 <__assert_fail@plt+0xe040>
   1f588:	ldr	r0, [sp, #12]
   1f58c:	ldr	r1, [sp, #16]
   1f590:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f594:	mvn	r2, r2
   1f598:	subs	r1, r2, r1
   1f59c:	rscs	r0, r0, r2, asr #31
   1f5a0:	bcs	1f6d4 <__assert_fail@plt+0xe18c>
   1f5a4:	b	1f6e8 <__assert_fail@plt+0xe1a0>
   1f5a8:	b	1f5ac <__assert_fail@plt+0xe064>
   1f5ac:	b	1f604 <__assert_fail@plt+0xe0bc>
   1f5b0:	b	1f604 <__assert_fail@plt+0xe0bc>
   1f5b4:	ldr	r0, [fp, #8]
   1f5b8:	cmn	r0, #1
   1f5bc:	bne	1f604 <__assert_fail@plt+0xe0bc>
   1f5c0:	b	1f5c4 <__assert_fail@plt+0xe07c>
   1f5c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f5c8:	add	r0, r0, #0
   1f5cc:	movw	r1, #0
   1f5d0:	cmp	r1, r0
   1f5d4:	blt	1f6d4 <__assert_fail@plt+0xe18c>
   1f5d8:	b	1f6e8 <__assert_fail@plt+0xe1a0>
   1f5dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f5e0:	movw	r1, #0
   1f5e4:	cmp	r1, r0
   1f5e8:	bge	1f6e8 <__assert_fail@plt+0xe1a0>
   1f5ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f5f0:	sub	r0, r0, #1
   1f5f4:	mvn	r1, #0
   1f5f8:	cmp	r1, r0
   1f5fc:	blt	1f6d4 <__assert_fail@plt+0xe18c>
   1f600:	b	1f6e8 <__assert_fail@plt+0xe1a0>
   1f604:	ldr	r0, [fp, #8]
   1f608:	movw	r1, #0
   1f60c:	sdiv	r0, r1, r0
   1f610:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f614:	cmp	r0, r1
   1f618:	blt	1f6d4 <__assert_fail@plt+0xe18c>
   1f61c:	b	1f6e8 <__assert_fail@plt+0xe1a0>
   1f620:	ldr	r0, [fp, #8]
   1f624:	cmp	r0, #0
   1f628:	bne	1f630 <__assert_fail@plt+0xe0e8>
   1f62c:	b	1f6e8 <__assert_fail@plt+0xe1a0>
   1f630:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f634:	cmp	r0, #0
   1f638:	bge	1f6a4 <__assert_fail@plt+0xe15c>
   1f63c:	b	1f640 <__assert_fail@plt+0xe0f8>
   1f640:	b	1f688 <__assert_fail@plt+0xe140>
   1f644:	b	1f688 <__assert_fail@plt+0xe140>
   1f648:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f64c:	cmn	r0, #1
   1f650:	bne	1f688 <__assert_fail@plt+0xe140>
   1f654:	b	1f658 <__assert_fail@plt+0xe110>
   1f658:	ldr	r0, [fp, #8]
   1f65c:	add	r0, r0, #0
   1f660:	movw	r1, #0
   1f664:	cmp	r1, r0
   1f668:	blt	1f6d4 <__assert_fail@plt+0xe18c>
   1f66c:	b	1f6e8 <__assert_fail@plt+0xe1a0>
   1f670:	ldr	r0, [fp, #8]
   1f674:	sub	r0, r0, #1
   1f678:	mvn	r1, #0
   1f67c:	cmp	r1, r0
   1f680:	blt	1f6d4 <__assert_fail@plt+0xe18c>
   1f684:	b	1f6e8 <__assert_fail@plt+0xe1a0>
   1f688:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f68c:	movw	r1, #0
   1f690:	sdiv	r0, r1, r0
   1f694:	ldr	r1, [fp, #8]
   1f698:	cmp	r0, r1
   1f69c:	blt	1f6d4 <__assert_fail@plt+0xe18c>
   1f6a0:	b	1f6e8 <__assert_fail@plt+0xe1a0>
   1f6a4:	ldr	r0, [fp, #8]
   1f6a8:	asr	r3, r0, #31
   1f6ac:	mvn	r1, #0
   1f6b0:	str	r0, [sp, #4]
   1f6b4:	mov	r0, r1
   1f6b8:	ldr	r2, [sp, #4]
   1f6bc:	bl	24564 <__assert_fail@plt+0x1301c>
   1f6c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f6c4:	subs	r0, r0, r2
   1f6c8:	sbcs	r1, r1, r2, asr #31
   1f6cc:	bcs	1f6e8 <__assert_fail@plt+0xe1a0>
   1f6d0:	b	1f6d4 <__assert_fail@plt+0xe18c>
   1f6d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f6d8:	ldr	r1, [fp, #8]
   1f6dc:	mul	r0, r0, r1
   1f6e0:	str	r0, [fp, #-28]	; 0xffffffe4
   1f6e4:	b	1f6fc <__assert_fail@plt+0xe1b4>
   1f6e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f6ec:	ldr	r1, [fp, #8]
   1f6f0:	mul	r0, r0, r1
   1f6f4:	str	r0, [fp, #-28]	; 0xffffffe4
   1f6f8:	b	1f700 <__assert_fail@plt+0xe1b8>
   1f6fc:	bl	1f8d8 <__assert_fail@plt+0xe390>
   1f700:	ldr	r0, [fp, #-4]
   1f704:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f708:	bl	1cc38 <__assert_fail@plt+0xb6f0>
   1f70c:	str	r0, [fp, #-4]
   1f710:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f714:	ldr	r1, [fp, #-8]
   1f718:	str	r0, [r1]
   1f71c:	ldr	r0, [fp, #-4]
   1f720:	mov	sp, fp
   1f724:	pop	{fp, pc}
   1f728:	svcvc	0x00ffffff
   1f72c:	andhi	r0, r0, r1
   1f730:	andhi	r0, r0, r0
   1f734:			; <UNDEFINED> instruction: 0xffff8000
   1f738:	push	{fp, lr}
   1f73c:	mov	fp, sp
   1f740:	sub	sp, sp, #8
   1f744:	str	r0, [sp, #4]
   1f748:	ldr	r0, [sp, #4]
   1f74c:	movw	r1, #1
   1f750:	bl	1f75c <__assert_fail@plt+0xe214>
   1f754:	mov	sp, fp
   1f758:	pop	{fp, pc}
   1f75c:	push	{fp, lr}
   1f760:	mov	fp, sp
   1f764:	sub	sp, sp, #8
   1f768:	str	r0, [sp, #4]
   1f76c:	str	r1, [sp]
   1f770:	ldr	r0, [sp, #4]
   1f774:	ldr	r1, [sp]
   1f778:	bl	21708 <__assert_fail@plt+0x101c0>
   1f77c:	bl	1cbc4 <__assert_fail@plt+0xb67c>
   1f780:	mov	sp, fp
   1f784:	pop	{fp, pc}
   1f788:	push	{fp, lr}
   1f78c:	mov	fp, sp
   1f790:	sub	sp, sp, #8
   1f794:	str	r0, [sp, #4]
   1f798:	ldr	r0, [sp, #4]
   1f79c:	movw	r1, #1
   1f7a0:	bl	1f7ac <__assert_fail@plt+0xe264>
   1f7a4:	mov	sp, fp
   1f7a8:	pop	{fp, pc}
   1f7ac:	push	{fp, lr}
   1f7b0:	mov	fp, sp
   1f7b4:	sub	sp, sp, #8
   1f7b8:	str	r0, [sp, #4]
   1f7bc:	str	r1, [sp]
   1f7c0:	ldr	r0, [sp, #4]
   1f7c4:	ldr	r1, [sp]
   1f7c8:	bl	226d4 <__assert_fail@plt+0x1118c>
   1f7cc:	bl	1cbc4 <__assert_fail@plt+0xb67c>
   1f7d0:	mov	sp, fp
   1f7d4:	pop	{fp, pc}
   1f7d8:	push	{fp, lr}
   1f7dc:	mov	fp, sp
   1f7e0:	sub	sp, sp, #16
   1f7e4:	str	r0, [fp, #-4]
   1f7e8:	str	r1, [sp, #8]
   1f7ec:	ldr	r0, [sp, #8]
   1f7f0:	bl	1cba0 <__assert_fail@plt+0xb658>
   1f7f4:	ldr	r1, [fp, #-4]
   1f7f8:	ldr	r2, [sp, #8]
   1f7fc:	str	r0, [sp, #4]
   1f800:	bl	1129c <memcpy@plt>
   1f804:	ldr	r0, [sp, #4]
   1f808:	mov	sp, fp
   1f80c:	pop	{fp, pc}
   1f810:	push	{fp, lr}
   1f814:	mov	fp, sp
   1f818:	sub	sp, sp, #16
   1f81c:	str	r0, [fp, #-4]
   1f820:	str	r1, [sp, #8]
   1f824:	ldr	r0, [sp, #8]
   1f828:	bl	1cbf4 <__assert_fail@plt+0xb6ac>
   1f82c:	ldr	r1, [fp, #-4]
   1f830:	ldr	r2, [sp, #8]
   1f834:	str	r0, [sp, #4]
   1f838:	bl	1129c <memcpy@plt>
   1f83c:	ldr	r0, [sp, #4]
   1f840:	mov	sp, fp
   1f844:	pop	{fp, pc}
   1f848:	push	{fp, lr}
   1f84c:	mov	fp, sp
   1f850:	sub	sp, sp, #16
   1f854:	str	r0, [fp, #-4]
   1f858:	str	r1, [sp, #8]
   1f85c:	ldr	r0, [sp, #8]
   1f860:	add	r0, r0, #1
   1f864:	bl	1cbf4 <__assert_fail@plt+0xb6ac>
   1f868:	str	r0, [sp, #4]
   1f86c:	ldr	r0, [sp, #4]
   1f870:	ldr	r1, [sp, #8]
   1f874:	add	r0, r0, r1
   1f878:	movw	r1, #0
   1f87c:	strb	r1, [r0]
   1f880:	ldr	r0, [sp, #4]
   1f884:	ldr	r1, [fp, #-4]
   1f888:	ldr	r2, [sp, #8]
   1f88c:	str	r0, [sp]
   1f890:	bl	1129c <memcpy@plt>
   1f894:	ldr	r0, [sp]
   1f898:	mov	sp, fp
   1f89c:	pop	{fp, pc}
   1f8a0:	push	{fp, lr}
   1f8a4:	mov	fp, sp
   1f8a8:	sub	sp, sp, #8
   1f8ac:	str	r0, [sp, #4]
   1f8b0:	ldr	r0, [sp, #4]
   1f8b4:	ldr	r1, [sp, #4]
   1f8b8:	str	r0, [sp]
   1f8bc:	mov	r0, r1
   1f8c0:	bl	113c8 <strlen@plt>
   1f8c4:	add	r1, r0, #1
   1f8c8:	ldr	r0, [sp]
   1f8cc:	bl	1f7d8 <__assert_fail@plt+0xe290>
   1f8d0:	mov	sp, fp
   1f8d4:	pop	{fp, pc}
   1f8d8:	push	{fp, lr}
   1f8dc:	mov	fp, sp
   1f8e0:	sub	sp, sp, #8
   1f8e4:	movw	r0, #24888	; 0x6138
   1f8e8:	movt	r0, #3
   1f8ec:	ldr	r0, [r0]
   1f8f0:	movw	r1, #23868	; 0x5d3c
   1f8f4:	movt	r1, #2
   1f8f8:	str	r0, [sp, #4]
   1f8fc:	mov	r0, r1
   1f900:	bl	113b0 <gettext@plt>
   1f904:	ldr	r1, [sp, #4]
   1f908:	str	r0, [sp]
   1f90c:	mov	r0, r1
   1f910:	movw	r1, #0
   1f914:	movw	r2, #20852	; 0x5174
   1f918:	movt	r2, #2
   1f91c:	ldr	r3, [sp]
   1f920:	bl	11344 <error@plt>
   1f924:	bl	11500 <abort@plt>
   1f928:	push	{fp, lr}
   1f92c:	mov	fp, sp
   1f930:	sub	sp, sp, #16
   1f934:	str	r0, [fp, #-4]
   1f938:	str	r1, [sp, #8]
   1f93c:	str	r2, [sp, #4]
   1f940:	ldr	r0, [fp, #-4]
   1f944:	ldr	r1, [sp, #8]
   1f948:	orr	r1, r1, #512	; 0x200
   1f94c:	ldr	r2, [sp, #4]
   1f950:	bl	13988 <__assert_fail@plt+0x2440>
   1f954:	str	r0, [sp]
   1f958:	ldr	r0, [sp]
   1f95c:	movw	r1, #0
   1f960:	cmp	r0, r1
   1f964:	bne	1f9a0 <__assert_fail@plt+0xe458>
   1f968:	bl	11404 <__errno_location@plt>
   1f96c:	ldr	r0, [r0]
   1f970:	cmp	r0, #22
   1f974:	beq	1f97c <__assert_fail@plt+0xe434>
   1f978:	b	1f99c <__assert_fail@plt+0xe454>
   1f97c:	movw	r0, #23885	; 0x5d4d
   1f980:	movt	r0, #2
   1f984:	movw	r1, #23901	; 0x5d5d
   1f988:	movt	r1, #2
   1f98c:	movw	r2, #41	; 0x29
   1f990:	movw	r3, #23912	; 0x5d68
   1f994:	movt	r3, #2
   1f998:	bl	11548 <__assert_fail@plt>
   1f99c:	bl	1f8d8 <__assert_fail@plt+0xe390>
   1f9a0:	ldr	r0, [sp]
   1f9a4:	mov	sp, fp
   1f9a8:	pop	{fp, pc}
   1f9ac:	sub	sp, sp, #16
   1f9b0:	str	r0, [sp, #12]
   1f9b4:	str	r1, [sp, #8]
   1f9b8:	ldr	r0, [sp, #12]
   1f9bc:	ldr	r0, [r0, #48]	; 0x30
   1f9c0:	and	r0, r0, #16
   1f9c4:	cmp	r0, #0
   1f9c8:	beq	1f9e8 <__assert_fail@plt+0xe4a0>
   1f9cc:	ldr	r0, [sp, #12]
   1f9d0:	ldr	r0, [r0, #48]	; 0x30
   1f9d4:	and	r0, r0, #1
   1f9d8:	cmp	r0, #0
   1f9dc:	movw	r0, #1
   1f9e0:	str	r0, [sp, #4]
   1f9e4:	beq	1fa40 <__assert_fail@plt+0xe4f8>
   1f9e8:	ldr	r0, [sp, #12]
   1f9ec:	ldr	r0, [r0, #48]	; 0x30
   1f9f0:	and	r0, r0, #16
   1f9f4:	cmp	r0, #0
   1f9f8:	movw	r0, #0
   1f9fc:	str	r0, [sp]
   1fa00:	beq	1fa38 <__assert_fail@plt+0xe4f0>
   1fa04:	ldr	r0, [sp, #12]
   1fa08:	ldr	r0, [r0, #48]	; 0x30
   1fa0c:	and	r0, r0, #1
   1fa10:	cmp	r0, #0
   1fa14:	movw	r0, #0
   1fa18:	str	r0, [sp]
   1fa1c:	beq	1fa38 <__assert_fail@plt+0xe4f0>
   1fa20:	ldr	r0, [sp, #8]
   1fa24:	ldr	r0, [r0, #48]	; 0x30
   1fa28:	cmp	r0, #0
   1fa2c:	movw	r0, #0
   1fa30:	movne	r0, #1
   1fa34:	str	r0, [sp]
   1fa38:	ldr	r0, [sp]
   1fa3c:	str	r0, [sp, #4]
   1fa40:	ldr	r0, [sp, #4]
   1fa44:	and	r0, r0, #1
   1fa48:	add	sp, sp, #16
   1fa4c:	bx	lr
   1fa50:	push	{fp, lr}
   1fa54:	mov	fp, sp
   1fa58:	sub	sp, sp, #72	; 0x48
   1fa5c:	ldr	ip, [fp, #8]
   1fa60:	str	r0, [fp, #-8]
   1fa64:	str	r1, [fp, #-12]
   1fa68:	str	r2, [fp, #-16]
   1fa6c:	str	r3, [fp, #-20]	; 0xffffffec
   1fa70:	movw	r0, #0
   1fa74:	str	r0, [sp, #36]	; 0x24
   1fa78:	ldr	r1, [fp, #-16]
   1fa7c:	cmp	r0, r1
   1fa80:	bgt	1fa94 <__assert_fail@plt+0xe54c>
   1fa84:	ldr	r0, [fp, #-16]
   1fa88:	cmp	r0, #36	; 0x24
   1fa8c:	bgt	1fa94 <__assert_fail@plt+0xe54c>
   1fa90:	b	1fab4 <__assert_fail@plt+0xe56c>
   1fa94:	movw	r0, #23990	; 0x5db6
   1fa98:	movt	r0, #2
   1fa9c:	movw	r1, #24028	; 0x5ddc
   1faa0:	movt	r1, #2
   1faa4:	movw	r2, #85	; 0x55
   1faa8:	movw	r3, #24044	; 0x5dec
   1faac:	movt	r3, #2
   1fab0:	bl	11548 <__assert_fail@plt>
   1fab4:	ldr	r0, [fp, #-12]
   1fab8:	movw	r1, #0
   1fabc:	cmp	r0, r1
   1fac0:	beq	1fad0 <__assert_fail@plt+0xe588>
   1fac4:	ldr	r0, [fp, #-12]
   1fac8:	str	r0, [sp, #12]
   1facc:	b	1fadc <__assert_fail@plt+0xe594>
   1fad0:	sub	r0, fp, #24
   1fad4:	str	r0, [sp, #12]
   1fad8:	b	1fadc <__assert_fail@plt+0xe594>
   1fadc:	ldr	r0, [sp, #12]
   1fae0:	str	r0, [fp, #-28]	; 0xffffffe4
   1fae4:	bl	11404 <__errno_location@plt>
   1fae8:	movw	r1, #0
   1faec:	str	r1, [r0]
   1faf0:	ldr	r0, [fp, #-8]
   1faf4:	str	r0, [sp, #32]
   1faf8:	ldr	r0, [sp, #32]
   1fafc:	ldrb	r0, [r0]
   1fb00:	strb	r0, [sp, #31]
   1fb04:	bl	11398 <__ctype_b_loc@plt>
   1fb08:	ldr	r0, [r0]
   1fb0c:	ldrb	r1, [sp, #31]
   1fb10:	mov	r2, r1
   1fb14:	add	r0, r0, r1, lsl #1
   1fb18:	ldrh	r0, [r0]
   1fb1c:	and	r0, r0, #8192	; 0x2000
   1fb20:	cmp	r0, #0
   1fb24:	beq	1fb40 <__assert_fail@plt+0xe5f8>
   1fb28:	ldr	r0, [sp, #32]
   1fb2c:	add	r1, r0, #1
   1fb30:	str	r1, [sp, #32]
   1fb34:	ldrb	r0, [r0, #1]
   1fb38:	strb	r0, [sp, #31]
   1fb3c:	b	1fb04 <__assert_fail@plt+0xe5bc>
   1fb40:	ldrb	r0, [sp, #31]
   1fb44:	cmp	r0, #45	; 0x2d
   1fb48:	bne	1fb58 <__assert_fail@plt+0xe610>
   1fb4c:	movw	r0, #4
   1fb50:	str	r0, [fp, #-4]
   1fb54:	b	200a8 <__assert_fail@plt+0xeb60>
   1fb58:	ldr	r0, [fp, #-8]
   1fb5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fb60:	ldr	r2, [fp, #-16]
   1fb64:	bl	113bc <strtoul@plt>
   1fb68:	str	r0, [fp, #-32]	; 0xffffffe0
   1fb6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fb70:	ldr	r0, [r0]
   1fb74:	ldr	r1, [fp, #-8]
   1fb78:	cmp	r0, r1
   1fb7c:	bne	1fbe0 <__assert_fail@plt+0xe698>
   1fb80:	ldr	r0, [fp, #8]
   1fb84:	movw	r1, #0
   1fb88:	cmp	r0, r1
   1fb8c:	beq	1fbd0 <__assert_fail@plt+0xe688>
   1fb90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fb94:	ldr	r0, [r0]
   1fb98:	ldrb	r0, [r0]
   1fb9c:	cmp	r0, #0
   1fba0:	beq	1fbd0 <__assert_fail@plt+0xe688>
   1fba4:	ldr	r0, [fp, #8]
   1fba8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fbac:	ldr	r1, [r1]
   1fbb0:	ldrb	r1, [r1]
   1fbb4:	bl	113d4 <strchr@plt>
   1fbb8:	movw	r1, #0
   1fbbc:	cmp	r0, r1
   1fbc0:	beq	1fbd0 <__assert_fail@plt+0xe688>
   1fbc4:	movw	r0, #1
   1fbc8:	str	r0, [fp, #-32]	; 0xffffffe0
   1fbcc:	b	1fbdc <__assert_fail@plt+0xe694>
   1fbd0:	movw	r0, #4
   1fbd4:	str	r0, [fp, #-4]
   1fbd8:	b	200a8 <__assert_fail@plt+0xeb60>
   1fbdc:	b	1fc18 <__assert_fail@plt+0xe6d0>
   1fbe0:	bl	11404 <__errno_location@plt>
   1fbe4:	ldr	r0, [r0]
   1fbe8:	cmp	r0, #0
   1fbec:	beq	1fc14 <__assert_fail@plt+0xe6cc>
   1fbf0:	bl	11404 <__errno_location@plt>
   1fbf4:	ldr	r0, [r0]
   1fbf8:	cmp	r0, #34	; 0x22
   1fbfc:	beq	1fc0c <__assert_fail@plt+0xe6c4>
   1fc00:	movw	r0, #4
   1fc04:	str	r0, [fp, #-4]
   1fc08:	b	200a8 <__assert_fail@plt+0xeb60>
   1fc0c:	movw	r0, #1
   1fc10:	str	r0, [sp, #36]	; 0x24
   1fc14:	b	1fc18 <__assert_fail@plt+0xe6d0>
   1fc18:	ldr	r0, [fp, #8]
   1fc1c:	movw	r1, #0
   1fc20:	cmp	r0, r1
   1fc24:	bne	1fc40 <__assert_fail@plt+0xe6f8>
   1fc28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fc2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fc30:	str	r0, [r1]
   1fc34:	ldr	r0, [sp, #36]	; 0x24
   1fc38:	str	r0, [fp, #-4]
   1fc3c:	b	200a8 <__assert_fail@plt+0xeb60>
   1fc40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fc44:	ldr	r0, [r0]
   1fc48:	ldrb	r0, [r0]
   1fc4c:	cmp	r0, #0
   1fc50:	beq	20094 <__assert_fail@plt+0xeb4c>
   1fc54:	movw	r0, #1024	; 0x400
   1fc58:	str	r0, [sp, #24]
   1fc5c:	movw	r0, #1
   1fc60:	str	r0, [sp, #20]
   1fc64:	ldr	r0, [fp, #8]
   1fc68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fc6c:	ldr	r1, [r1]
   1fc70:	ldrb	r1, [r1]
   1fc74:	bl	113d4 <strchr@plt>
   1fc78:	movw	r1, #0
   1fc7c:	cmp	r0, r1
   1fc80:	bne	1fca0 <__assert_fail@plt+0xe758>
   1fc84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fc88:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fc8c:	str	r0, [r1]
   1fc90:	ldr	r0, [sp, #36]	; 0x24
   1fc94:	orr	r0, r0, #2
   1fc98:	str	r0, [fp, #-4]
   1fc9c:	b	200a8 <__assert_fail@plt+0xeb60>
   1fca0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fca4:	ldr	r0, [r0]
   1fca8:	ldrb	r0, [r0]
   1fcac:	sub	r0, r0, #69	; 0x45
   1fcb0:	cmp	r0, #47	; 0x2f
   1fcb4:	str	r0, [sp, #8]
   1fcb8:	bhi	1fe24 <__assert_fail@plt+0xe8dc>
   1fcbc:	add	r0, pc, #8
   1fcc0:	ldr	r1, [sp, #8]
   1fcc4:	ldr	r0, [r0, r1, lsl #2]
   1fcc8:	mov	pc, r0
   1fccc:	andeq	pc, r1, ip, lsl #27
   1fcd0:	andeq	pc, r1, r4, lsr #28
   1fcd4:	andeq	pc, r1, ip, lsl #27
   1fcd8:	andeq	pc, r1, r4, lsr #28
   1fcdc:	andeq	pc, r1, r4, lsr #28
   1fce0:	andeq	pc, r1, r4, lsr #28
   1fce4:	andeq	pc, r1, ip, lsl #27
   1fce8:	andeq	pc, r1, r4, lsr #28
   1fcec:	andeq	pc, r1, ip, lsl #27
   1fcf0:	andeq	pc, r1, r4, lsr #28
   1fcf4:	andeq	pc, r1, r4, lsr #28
   1fcf8:	andeq	pc, r1, ip, lsl #27
   1fcfc:	andeq	pc, r1, r4, lsr #28
   1fd00:	andeq	pc, r1, r4, lsr #28
   1fd04:	andeq	pc, r1, r4, lsr #28
   1fd08:	andeq	pc, r1, ip, lsl #27
   1fd0c:	andeq	pc, r1, r4, lsr #28
   1fd10:	andeq	pc, r1, r4, lsr #28
   1fd14:	andeq	pc, r1, r4, lsr #28
   1fd18:	andeq	pc, r1, r4, lsr #28
   1fd1c:	andeq	pc, r1, ip, lsl #27
   1fd20:	andeq	pc, r1, ip, lsl #27
   1fd24:	andeq	pc, r1, r4, lsr #28
   1fd28:	andeq	pc, r1, r4, lsr #28
   1fd2c:	andeq	pc, r1, r4, lsr #28
   1fd30:	andeq	pc, r1, r4, lsr #28
   1fd34:	andeq	pc, r1, r4, lsr #28
   1fd38:	andeq	pc, r1, r4, lsr #28
   1fd3c:	andeq	pc, r1, r4, lsr #28
   1fd40:	andeq	pc, r1, r4, lsr #28
   1fd44:	andeq	pc, r1, r4, lsr #28
   1fd48:	andeq	pc, r1, r4, lsr #28
   1fd4c:	andeq	pc, r1, r4, lsr #28
   1fd50:	andeq	pc, r1, r4, lsr #28
   1fd54:	andeq	pc, r1, ip, lsl #27
   1fd58:	andeq	pc, r1, r4, lsr #28
   1fd5c:	andeq	pc, r1, r4, lsr #28
   1fd60:	andeq	pc, r1, r4, lsr #28
   1fd64:	andeq	pc, r1, ip, lsl #27
   1fd68:	andeq	pc, r1, r4, lsr #28
   1fd6c:	andeq	pc, r1, ip, lsl #27
   1fd70:	andeq	pc, r1, r4, lsr #28
   1fd74:	andeq	pc, r1, r4, lsr #28
   1fd78:	andeq	pc, r1, r4, lsr #28
   1fd7c:	andeq	pc, r1, r4, lsr #28
   1fd80:	andeq	pc, r1, r4, lsr #28
   1fd84:	andeq	pc, r1, r4, lsr #28
   1fd88:	andeq	pc, r1, ip, lsl #27
   1fd8c:	ldr	r0, [fp, #8]
   1fd90:	movw	r1, #48	; 0x30
   1fd94:	bl	113d4 <strchr@plt>
   1fd98:	movw	r1, #0
   1fd9c:	cmp	r0, r1
   1fda0:	beq	1fe20 <__assert_fail@plt+0xe8d8>
   1fda4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fda8:	ldr	r0, [r0]
   1fdac:	ldrb	r0, [r0, #1]
   1fdb0:	mov	r1, r0
   1fdb4:	cmp	r0, #66	; 0x42
   1fdb8:	str	r1, [sp, #4]
   1fdbc:	beq	1fe08 <__assert_fail@plt+0xe8c0>
   1fdc0:	b	1fdc4 <__assert_fail@plt+0xe87c>
   1fdc4:	ldr	r0, [sp, #4]
   1fdc8:	cmp	r0, #68	; 0x44
   1fdcc:	beq	1fe08 <__assert_fail@plt+0xe8c0>
   1fdd0:	b	1fdd4 <__assert_fail@plt+0xe88c>
   1fdd4:	ldr	r0, [sp, #4]
   1fdd8:	cmp	r0, #105	; 0x69
   1fddc:	bne	1fe1c <__assert_fail@plt+0xe8d4>
   1fde0:	b	1fde4 <__assert_fail@plt+0xe89c>
   1fde4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fde8:	ldr	r0, [r0]
   1fdec:	ldrb	r0, [r0, #2]
   1fdf0:	cmp	r0, #66	; 0x42
   1fdf4:	bne	1fe04 <__assert_fail@plt+0xe8bc>
   1fdf8:	ldr	r0, [sp, #20]
   1fdfc:	add	r0, r0, #2
   1fe00:	str	r0, [sp, #20]
   1fe04:	b	1fe1c <__assert_fail@plt+0xe8d4>
   1fe08:	movw	r0, #1000	; 0x3e8
   1fe0c:	str	r0, [sp, #24]
   1fe10:	ldr	r0, [sp, #20]
   1fe14:	add	r0, r0, #1
   1fe18:	str	r0, [sp, #20]
   1fe1c:	b	1fe20 <__assert_fail@plt+0xe8d8>
   1fe20:	b	1fe24 <__assert_fail@plt+0xe8dc>
   1fe24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fe28:	ldr	r0, [r0]
   1fe2c:	ldrb	r0, [r0]
   1fe30:	sub	r0, r0, #66	; 0x42
   1fe34:	cmp	r0, #53	; 0x35
   1fe38:	str	r0, [sp]
   1fe3c:	bhi	20030 <__assert_fail@plt+0xeae8>
   1fe40:	add	r0, pc, #8
   1fe44:	ldr	r1, [sp]
   1fe48:	ldr	r0, [r0, r1, lsl #2]
   1fe4c:	mov	pc, r0
   1fe50:	andeq	pc, r1, ip, lsr pc	; <UNPREDICTABLE>
   1fe54:	andeq	r0, r2, r0, lsr r0
   1fe58:	andeq	r0, r2, r0, lsr r0
   1fe5c:	andeq	pc, r1, ip, asr pc	; <UNPREDICTABLE>
   1fe60:	andeq	r0, r2, r0, lsr r0
   1fe64:	andeq	pc, r1, r4, ror pc	; <UNPREDICTABLE>
   1fe68:	andeq	r0, r2, r0, lsr r0
   1fe6c:	andeq	r0, r2, r0, lsr r0
   1fe70:	andeq	r0, r2, r0, lsr r0
   1fe74:	andeq	pc, r1, ip, lsl #31
   1fe78:	andeq	r0, r2, r0, lsr r0
   1fe7c:	andeq	pc, r1, r4, lsr #31
   1fe80:	andeq	r0, r2, r0, lsr r0
   1fe84:	andeq	r0, r2, r0, lsr r0
   1fe88:			; <UNDEFINED> instruction: 0x0001ffbc
   1fe8c:	andeq	r0, r2, r0, lsr r0
   1fe90:	andeq	r0, r2, r0, lsr r0
   1fe94:	andeq	r0, r2, r0, lsr r0
   1fe98:	ldrdeq	pc, [r1], -r4
   1fe9c:	andeq	r0, r2, r0, lsr r0
   1fea0:	andeq	r0, r2, r0, lsr r0
   1fea4:	andeq	r0, r2, r0, lsr r0
   1fea8:	andeq	r0, r2, r0, lsr r0
   1feac:	andeq	r0, r2, r0
   1feb0:	andeq	r0, r2, r8, lsl r0
   1feb4:	andeq	r0, r2, r0, lsr r0
   1feb8:	andeq	r0, r2, r0, lsr r0
   1febc:	andeq	r0, r2, r0, lsr r0
   1fec0:	andeq	r0, r2, r0, lsr r0
   1fec4:	andeq	r0, r2, r0, lsr r0
   1fec8:	andeq	r0, r2, r0, lsr r0
   1fecc:	andeq	r0, r2, r0, lsr r0
   1fed0:	andeq	pc, r1, r8, lsr #30
   1fed4:	andeq	pc, r1, r0, asr pc	; <UNPREDICTABLE>
   1fed8:	andeq	r0, r2, r0, lsr r0
   1fedc:	andeq	r0, r2, r0, lsr r0
   1fee0:	andeq	r0, r2, r0, lsr r0
   1fee4:	andeq	pc, r1, r4, ror pc	; <UNPREDICTABLE>
   1fee8:	andeq	r0, r2, r0, lsr r0
   1feec:	andeq	r0, r2, r0, lsr r0
   1fef0:	andeq	r0, r2, r0, lsr r0
   1fef4:	andeq	pc, r1, ip, lsl #31
   1fef8:	andeq	r0, r2, r0, lsr r0
   1fefc:	andeq	pc, r1, r4, lsr #31
   1ff00:	andeq	r0, r2, r0, lsr r0
   1ff04:	andeq	r0, r2, r0, lsr r0
   1ff08:	andeq	r0, r2, r0, lsr r0
   1ff0c:	andeq	r0, r2, r0, lsr r0
   1ff10:	andeq	r0, r2, r0, lsr r0
   1ff14:	andeq	r0, r2, r0, lsr r0
   1ff18:	ldrdeq	pc, [r1], -r4
   1ff1c:	andeq	r0, r2, r0, lsr r0
   1ff20:	andeq	r0, r2, r0, lsr r0
   1ff24:	andeq	pc, r1, ip, ror #31
   1ff28:	sub	r0, fp, #32
   1ff2c:	movw	r1, #512	; 0x200
   1ff30:	bl	200b4 <__assert_fail@plt+0xeb6c>
   1ff34:	str	r0, [sp, #16]
   1ff38:	b	2004c <__assert_fail@plt+0xeb04>
   1ff3c:	sub	r0, fp, #32
   1ff40:	movw	r1, #1024	; 0x400
   1ff44:	bl	200b4 <__assert_fail@plt+0xeb6c>
   1ff48:	str	r0, [sp, #16]
   1ff4c:	b	2004c <__assert_fail@plt+0xeb04>
   1ff50:	movw	r0, #0
   1ff54:	str	r0, [sp, #16]
   1ff58:	b	2004c <__assert_fail@plt+0xeb04>
   1ff5c:	ldr	r1, [sp, #24]
   1ff60:	sub	r0, fp, #32
   1ff64:	movw	r2, #6
   1ff68:	bl	216a8 <__assert_fail@plt+0x10160>
   1ff6c:	str	r0, [sp, #16]
   1ff70:	b	2004c <__assert_fail@plt+0xeb04>
   1ff74:	ldr	r1, [sp, #24]
   1ff78:	sub	r0, fp, #32
   1ff7c:	movw	r2, #3
   1ff80:	bl	216a8 <__assert_fail@plt+0x10160>
   1ff84:	str	r0, [sp, #16]
   1ff88:	b	2004c <__assert_fail@plt+0xeb04>
   1ff8c:	ldr	r1, [sp, #24]
   1ff90:	sub	r0, fp, #32
   1ff94:	movw	r2, #1
   1ff98:	bl	216a8 <__assert_fail@plt+0x10160>
   1ff9c:	str	r0, [sp, #16]
   1ffa0:	b	2004c <__assert_fail@plt+0xeb04>
   1ffa4:	ldr	r1, [sp, #24]
   1ffa8:	sub	r0, fp, #32
   1ffac:	movw	r2, #2
   1ffb0:	bl	216a8 <__assert_fail@plt+0x10160>
   1ffb4:	str	r0, [sp, #16]
   1ffb8:	b	2004c <__assert_fail@plt+0xeb04>
   1ffbc:	ldr	r1, [sp, #24]
   1ffc0:	sub	r0, fp, #32
   1ffc4:	movw	r2, #5
   1ffc8:	bl	216a8 <__assert_fail@plt+0x10160>
   1ffcc:	str	r0, [sp, #16]
   1ffd0:	b	2004c <__assert_fail@plt+0xeb04>
   1ffd4:	ldr	r1, [sp, #24]
   1ffd8:	sub	r0, fp, #32
   1ffdc:	movw	r2, #4
   1ffe0:	bl	216a8 <__assert_fail@plt+0x10160>
   1ffe4:	str	r0, [sp, #16]
   1ffe8:	b	2004c <__assert_fail@plt+0xeb04>
   1ffec:	sub	r0, fp, #32
   1fff0:	movw	r1, #2
   1fff4:	bl	200b4 <__assert_fail@plt+0xeb6c>
   1fff8:	str	r0, [sp, #16]
   1fffc:	b	2004c <__assert_fail@plt+0xeb04>
   20000:	ldr	r1, [sp, #24]
   20004:	sub	r0, fp, #32
   20008:	movw	r2, #8
   2000c:	bl	216a8 <__assert_fail@plt+0x10160>
   20010:	str	r0, [sp, #16]
   20014:	b	2004c <__assert_fail@plt+0xeb04>
   20018:	ldr	r1, [sp, #24]
   2001c:	sub	r0, fp, #32
   20020:	movw	r2, #7
   20024:	bl	216a8 <__assert_fail@plt+0x10160>
   20028:	str	r0, [sp, #16]
   2002c:	b	2004c <__assert_fail@plt+0xeb04>
   20030:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20034:	ldr	r1, [fp, #-20]	; 0xffffffec
   20038:	str	r0, [r1]
   2003c:	ldr	r0, [sp, #36]	; 0x24
   20040:	orr	r0, r0, #2
   20044:	str	r0, [fp, #-4]
   20048:	b	200a8 <__assert_fail@plt+0xeb60>
   2004c:	ldr	r0, [sp, #16]
   20050:	ldr	r1, [sp, #36]	; 0x24
   20054:	orr	r0, r1, r0
   20058:	str	r0, [sp, #36]	; 0x24
   2005c:	ldr	r0, [sp, #20]
   20060:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20064:	ldr	r2, [r1]
   20068:	add	r0, r2, r0
   2006c:	str	r0, [r1]
   20070:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20074:	ldr	r0, [r0]
   20078:	ldrsb	r0, [r0]
   2007c:	cmp	r0, #0
   20080:	beq	20090 <__assert_fail@plt+0xeb48>
   20084:	ldr	r0, [sp, #36]	; 0x24
   20088:	orr	r0, r0, #2
   2008c:	str	r0, [sp, #36]	; 0x24
   20090:	b	20094 <__assert_fail@plt+0xeb4c>
   20094:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20098:	ldr	r1, [fp, #-20]	; 0xffffffec
   2009c:	str	r0, [r1]
   200a0:	ldr	r0, [sp, #36]	; 0x24
   200a4:	str	r0, [fp, #-4]
   200a8:	ldr	r0, [fp, #-4]
   200ac:	mov	sp, fp
   200b0:	pop	{fp, pc}
   200b4:	push	{fp, lr}
   200b8:	mov	fp, sp
   200bc:	sub	sp, sp, #104	; 0x68
   200c0:	str	r0, [fp, #-8]
   200c4:	str	r1, [fp, #-12]
   200c8:	b	204fc <__assert_fail@plt+0xefb4>
   200cc:	b	202e4 <__assert_fail@plt+0xed9c>
   200d0:	ldr	r0, [fp, #-12]
   200d4:	cmp	r0, #0
   200d8:	bge	20208 <__assert_fail@plt+0xecc0>
   200dc:	ldr	r0, [fp, #-8]
   200e0:	ldr	r0, [r0]
   200e4:	cmp	r0, #0
   200e8:	bcs	2017c <__assert_fail@plt+0xec34>
   200ec:	b	200f0 <__assert_fail@plt+0xeba8>
   200f0:	ldr	r0, [fp, #-8]
   200f4:	ldr	r0, [r0]
   200f8:	ldr	r1, [fp, #-12]
   200fc:	movw	r2, #127	; 0x7f
   20100:	sdiv	r1, r2, r1
   20104:	cmp	r0, r1
   20108:	bcc	202ac <__assert_fail@plt+0xed64>
   2010c:	b	202c8 <__assert_fail@plt+0xed80>
   20110:	b	20114 <__assert_fail@plt+0xebcc>
   20114:	ldr	r0, [pc, #4072]	; 21104 <__assert_fail@plt+0xfbbc>
   20118:	ldr	r1, [fp, #-12]
   2011c:	cmp	r1, r0
   20120:	blt	20138 <__assert_fail@plt+0xebf0>
   20124:	b	20144 <__assert_fail@plt+0xebfc>
   20128:	ldr	r0, [fp, #-12]
   2012c:	movw	r1, #0
   20130:	cmp	r1, r0
   20134:	bge	20144 <__assert_fail@plt+0xebfc>
   20138:	movw	r0, #0
   2013c:	str	r0, [fp, #-20]	; 0xffffffec
   20140:	b	2015c <__assert_fail@plt+0xec14>
   20144:	ldr	r0, [fp, #-12]
   20148:	movw	r1, #0
   2014c:	sub	r0, r1, r0
   20150:	movw	r1, #127	; 0x7f
   20154:	sdiv	r0, r1, r0
   20158:	str	r0, [fp, #-20]	; 0xffffffec
   2015c:	ldr	r0, [fp, #-20]	; 0xffffffec
   20160:	ldr	r1, [fp, #-8]
   20164:	ldr	r1, [r1]
   20168:	mvn	r2, #0
   2016c:	sub	r1, r2, r1
   20170:	cmp	r0, r1
   20174:	bls	202ac <__assert_fail@plt+0xed64>
   20178:	b	202c8 <__assert_fail@plt+0xed80>
   2017c:	b	20180 <__assert_fail@plt+0xec38>
   20180:	b	201e8 <__assert_fail@plt+0xeca0>
   20184:	b	201e8 <__assert_fail@plt+0xeca0>
   20188:	ldr	r0, [fp, #-12]
   2018c:	cmn	r0, #1
   20190:	bne	201e8 <__assert_fail@plt+0xeca0>
   20194:	b	201b8 <__assert_fail@plt+0xec70>
   20198:	ldr	r0, [fp, #-8]
   2019c:	ldr	r0, [r0]
   201a0:	mvn	r1, #127	; 0x7f
   201a4:	add	r0, r0, r1
   201a8:	movw	r1, #0
   201ac:	cmp	r1, r0
   201b0:	bcc	202ac <__assert_fail@plt+0xed64>
   201b4:	b	202c8 <__assert_fail@plt+0xed80>
   201b8:	ldr	r0, [fp, #-8]
   201bc:	ldr	r0, [r0]
   201c0:	movw	r1, #0
   201c4:	cmp	r1, r0
   201c8:	bcs	202c8 <__assert_fail@plt+0xed80>
   201cc:	ldr	r0, [fp, #-8]
   201d0:	ldr	r0, [r0]
   201d4:	sub	r0, r0, #1
   201d8:	movw	r1, #127	; 0x7f
   201dc:	cmp	r1, r0
   201e0:	bcc	202ac <__assert_fail@plt+0xed64>
   201e4:	b	202c8 <__assert_fail@plt+0xed80>
   201e8:	ldr	r0, [fp, #-12]
   201ec:	mvn	r1, #127	; 0x7f
   201f0:	sdiv	r0, r1, r0
   201f4:	ldr	r1, [fp, #-8]
   201f8:	ldr	r1, [r1]
   201fc:	cmp	r0, r1
   20200:	bcc	202ac <__assert_fail@plt+0xed64>
   20204:	b	202c8 <__assert_fail@plt+0xed80>
   20208:	ldr	r0, [fp, #-12]
   2020c:	cmp	r0, #0
   20210:	bne	20218 <__assert_fail@plt+0xecd0>
   20214:	b	202c8 <__assert_fail@plt+0xed80>
   20218:	ldr	r0, [fp, #-8]
   2021c:	ldr	r0, [r0]
   20220:	cmp	r0, #0
   20224:	bcs	20290 <__assert_fail@plt+0xed48>
   20228:	ldr	r0, [fp, #-8]
   2022c:	ldr	r0, [r0]
   20230:	cmn	r0, #1
   20234:	bne	20270 <__assert_fail@plt+0xed28>
   20238:	b	2023c <__assert_fail@plt+0xecf4>
   2023c:	ldr	r0, [fp, #-12]
   20240:	mvn	r1, #127	; 0x7f
   20244:	add	r0, r0, r1
   20248:	movw	r1, #0
   2024c:	cmp	r1, r0
   20250:	blt	202ac <__assert_fail@plt+0xed64>
   20254:	b	202c8 <__assert_fail@plt+0xed80>
   20258:	ldr	r0, [fp, #-12]
   2025c:	sub	r0, r0, #1
   20260:	movw	r1, #127	; 0x7f
   20264:	cmp	r1, r0
   20268:	blt	202ac <__assert_fail@plt+0xed64>
   2026c:	b	202c8 <__assert_fail@plt+0xed80>
   20270:	ldr	r0, [fp, #-8]
   20274:	ldr	r0, [r0]
   20278:	mvn	r1, #127	; 0x7f
   2027c:	udiv	r0, r1, r0
   20280:	ldr	r1, [fp, #-12]
   20284:	cmp	r0, r1
   20288:	bcc	202ac <__assert_fail@plt+0xed64>
   2028c:	b	202c8 <__assert_fail@plt+0xed80>
   20290:	ldr	r0, [fp, #-12]
   20294:	movw	r1, #127	; 0x7f
   20298:	sdiv	r0, r1, r0
   2029c:	ldr	r1, [fp, #-8]
   202a0:	ldr	r1, [r1]
   202a4:	cmp	r0, r1
   202a8:	bcs	202c8 <__assert_fail@plt+0xed80>
   202ac:	ldr	r0, [fp, #-8]
   202b0:	ldr	r0, [r0]
   202b4:	ldr	r1, [fp, #-12]
   202b8:	mul	r0, r0, r1
   202bc:	sxtb	r0, r0
   202c0:	str	r0, [fp, #-16]
   202c4:	b	21644 <__assert_fail@plt+0x100fc>
   202c8:	ldr	r0, [fp, #-8]
   202cc:	ldr	r0, [r0]
   202d0:	ldr	r1, [fp, #-12]
   202d4:	mul	r0, r0, r1
   202d8:	sxtb	r0, r0
   202dc:	str	r0, [fp, #-16]
   202e0:	b	21678 <__assert_fail@plt+0x10130>
   202e4:	ldr	r0, [fp, #-12]
   202e8:	cmp	r0, #0
   202ec:	bge	20418 <__assert_fail@plt+0xeed0>
   202f0:	ldr	r0, [fp, #-8]
   202f4:	ldr	r0, [r0]
   202f8:	cmp	r0, #0
   202fc:	bcs	20390 <__assert_fail@plt+0xee48>
   20300:	b	20304 <__assert_fail@plt+0xedbc>
   20304:	ldr	r0, [fp, #-8]
   20308:	ldr	r0, [r0]
   2030c:	ldr	r1, [fp, #-12]
   20310:	movw	r2, #255	; 0xff
   20314:	sdiv	r1, r2, r1
   20318:	cmp	r0, r1
   2031c:	bcc	204c4 <__assert_fail@plt+0xef7c>
   20320:	b	204e0 <__assert_fail@plt+0xef98>
   20324:	b	20328 <__assert_fail@plt+0xede0>
   20328:	ldr	r0, [pc, #3540]	; 21104 <__assert_fail@plt+0xfbbc>
   2032c:	ldr	r1, [fp, #-12]
   20330:	cmp	r1, r0
   20334:	blt	2034c <__assert_fail@plt+0xee04>
   20338:	b	20358 <__assert_fail@plt+0xee10>
   2033c:	ldr	r0, [fp, #-12]
   20340:	movw	r1, #0
   20344:	cmp	r1, r0
   20348:	bge	20358 <__assert_fail@plt+0xee10>
   2034c:	movw	r0, #0
   20350:	str	r0, [fp, #-24]	; 0xffffffe8
   20354:	b	20370 <__assert_fail@plt+0xee28>
   20358:	ldr	r0, [fp, #-12]
   2035c:	movw	r1, #0
   20360:	sub	r0, r1, r0
   20364:	movw	r1, #255	; 0xff
   20368:	sdiv	r0, r1, r0
   2036c:	str	r0, [fp, #-24]	; 0xffffffe8
   20370:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20374:	ldr	r1, [fp, #-8]
   20378:	ldr	r1, [r1]
   2037c:	mvn	r2, #0
   20380:	sub	r1, r2, r1
   20384:	cmp	r0, r1
   20388:	bls	204c4 <__assert_fail@plt+0xef7c>
   2038c:	b	204e0 <__assert_fail@plt+0xef98>
   20390:	b	20394 <__assert_fail@plt+0xee4c>
   20394:	b	203f8 <__assert_fail@plt+0xeeb0>
   20398:	b	203f8 <__assert_fail@plt+0xeeb0>
   2039c:	ldr	r0, [fp, #-12]
   203a0:	cmn	r0, #1
   203a4:	bne	203f8 <__assert_fail@plt+0xeeb0>
   203a8:	b	203c8 <__assert_fail@plt+0xee80>
   203ac:	ldr	r0, [fp, #-8]
   203b0:	ldr	r0, [r0]
   203b4:	add	r0, r0, #0
   203b8:	movw	r1, #0
   203bc:	cmp	r1, r0
   203c0:	bcc	204c4 <__assert_fail@plt+0xef7c>
   203c4:	b	204e0 <__assert_fail@plt+0xef98>
   203c8:	ldr	r0, [fp, #-8]
   203cc:	ldr	r0, [r0]
   203d0:	movw	r1, #0
   203d4:	cmp	r1, r0
   203d8:	bcs	204e0 <__assert_fail@plt+0xef98>
   203dc:	ldr	r0, [fp, #-8]
   203e0:	ldr	r0, [r0]
   203e4:	sub	r0, r0, #1
   203e8:	mvn	r1, #0
   203ec:	cmp	r1, r0
   203f0:	bcc	204c4 <__assert_fail@plt+0xef7c>
   203f4:	b	204e0 <__assert_fail@plt+0xef98>
   203f8:	ldr	r0, [fp, #-12]
   203fc:	movw	r1, #0
   20400:	sdiv	r0, r1, r0
   20404:	ldr	r1, [fp, #-8]
   20408:	ldr	r1, [r1]
   2040c:	cmp	r0, r1
   20410:	bcc	204c4 <__assert_fail@plt+0xef7c>
   20414:	b	204e0 <__assert_fail@plt+0xef98>
   20418:	ldr	r0, [fp, #-12]
   2041c:	cmp	r0, #0
   20420:	bne	20428 <__assert_fail@plt+0xeee0>
   20424:	b	204e0 <__assert_fail@plt+0xef98>
   20428:	ldr	r0, [fp, #-8]
   2042c:	ldr	r0, [r0]
   20430:	cmp	r0, #0
   20434:	bcs	204a8 <__assert_fail@plt+0xef60>
   20438:	b	20440 <__assert_fail@plt+0xeef8>
   2043c:	b	20444 <__assert_fail@plt+0xeefc>
   20440:	b	20488 <__assert_fail@plt+0xef40>
   20444:	ldr	r0, [fp, #-8]
   20448:	ldr	r0, [r0]
   2044c:	cmn	r0, #1
   20450:	bne	20488 <__assert_fail@plt+0xef40>
   20454:	b	20458 <__assert_fail@plt+0xef10>
   20458:	ldr	r0, [fp, #-12]
   2045c:	add	r0, r0, #0
   20460:	movw	r1, #0
   20464:	cmp	r1, r0
   20468:	blt	204c4 <__assert_fail@plt+0xef7c>
   2046c:	b	204e0 <__assert_fail@plt+0xef98>
   20470:	ldr	r0, [fp, #-12]
   20474:	sub	r0, r0, #1
   20478:	mvn	r1, #0
   2047c:	cmp	r1, r0
   20480:	blt	204c4 <__assert_fail@plt+0xef7c>
   20484:	b	204e0 <__assert_fail@plt+0xef98>
   20488:	ldr	r0, [fp, #-8]
   2048c:	ldr	r0, [r0]
   20490:	movw	r1, #0
   20494:	udiv	r0, r1, r0
   20498:	ldr	r1, [fp, #-12]
   2049c:	cmp	r0, r1
   204a0:	bcc	204c4 <__assert_fail@plt+0xef7c>
   204a4:	b	204e0 <__assert_fail@plt+0xef98>
   204a8:	ldr	r0, [fp, #-12]
   204ac:	movw	r1, #255	; 0xff
   204b0:	sdiv	r0, r1, r0
   204b4:	ldr	r1, [fp, #-8]
   204b8:	ldr	r1, [r1]
   204bc:	cmp	r0, r1
   204c0:	bcs	204e0 <__assert_fail@plt+0xef98>
   204c4:	ldr	r0, [fp, #-8]
   204c8:	ldr	r0, [r0]
   204cc:	ldr	r1, [fp, #-12]
   204d0:	mul	r0, r0, r1
   204d4:	and	r0, r0, #255	; 0xff
   204d8:	str	r0, [fp, #-16]
   204dc:	b	21644 <__assert_fail@plt+0x100fc>
   204e0:	ldr	r0, [fp, #-8]
   204e4:	ldr	r0, [r0]
   204e8:	ldr	r1, [fp, #-12]
   204ec:	mul	r0, r0, r1
   204f0:	and	r0, r0, #255	; 0xff
   204f4:	str	r0, [fp, #-16]
   204f8:	b	21678 <__assert_fail@plt+0x10130>
   204fc:	b	20930 <__assert_fail@plt+0xf3e8>
   20500:	b	20718 <__assert_fail@plt+0xf1d0>
   20504:	ldr	r0, [fp, #-12]
   20508:	cmp	r0, #0
   2050c:	bge	2063c <__assert_fail@plt+0xf0f4>
   20510:	ldr	r0, [fp, #-8]
   20514:	ldr	r0, [r0]
   20518:	cmp	r0, #0
   2051c:	bcs	205b0 <__assert_fail@plt+0xf068>
   20520:	b	20524 <__assert_fail@plt+0xefdc>
   20524:	ldr	r0, [fp, #-8]
   20528:	ldr	r0, [r0]
   2052c:	ldr	r1, [fp, #-12]
   20530:	movw	r2, #32767	; 0x7fff
   20534:	sdiv	r1, r2, r1
   20538:	cmp	r0, r1
   2053c:	bcc	206e0 <__assert_fail@plt+0xf198>
   20540:	b	206fc <__assert_fail@plt+0xf1b4>
   20544:	b	20548 <__assert_fail@plt+0xf000>
   20548:	ldr	r0, [pc, #2996]	; 21104 <__assert_fail@plt+0xfbbc>
   2054c:	ldr	r1, [fp, #-12]
   20550:	cmp	r1, r0
   20554:	blt	2056c <__assert_fail@plt+0xf024>
   20558:	b	20578 <__assert_fail@plt+0xf030>
   2055c:	ldr	r0, [fp, #-12]
   20560:	movw	r1, #0
   20564:	cmp	r1, r0
   20568:	bge	20578 <__assert_fail@plt+0xf030>
   2056c:	movw	r0, #0
   20570:	str	r0, [fp, #-28]	; 0xffffffe4
   20574:	b	20590 <__assert_fail@plt+0xf048>
   20578:	ldr	r0, [fp, #-12]
   2057c:	movw	r1, #0
   20580:	sub	r0, r1, r0
   20584:	movw	r1, #32767	; 0x7fff
   20588:	sdiv	r0, r1, r0
   2058c:	str	r0, [fp, #-28]	; 0xffffffe4
   20590:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20594:	ldr	r1, [fp, #-8]
   20598:	ldr	r1, [r1]
   2059c:	mvn	r2, #0
   205a0:	sub	r1, r2, r1
   205a4:	cmp	r0, r1
   205a8:	bls	206e0 <__assert_fail@plt+0xf198>
   205ac:	b	206fc <__assert_fail@plt+0xf1b4>
   205b0:	b	205b4 <__assert_fail@plt+0xf06c>
   205b4:	b	2061c <__assert_fail@plt+0xf0d4>
   205b8:	b	2061c <__assert_fail@plt+0xf0d4>
   205bc:	ldr	r0, [fp, #-12]
   205c0:	cmn	r0, #1
   205c4:	bne	2061c <__assert_fail@plt+0xf0d4>
   205c8:	b	205ec <__assert_fail@plt+0xf0a4>
   205cc:	ldr	r0, [pc, #4072]	; 215bc <__assert_fail@plt+0x10074>
   205d0:	ldr	r1, [fp, #-8]
   205d4:	ldr	r1, [r1]
   205d8:	add	r0, r1, r0
   205dc:	movw	r1, #0
   205e0:	cmp	r1, r0
   205e4:	bcc	206e0 <__assert_fail@plt+0xf198>
   205e8:	b	206fc <__assert_fail@plt+0xf1b4>
   205ec:	ldr	r0, [fp, #-8]
   205f0:	ldr	r0, [r0]
   205f4:	movw	r1, #0
   205f8:	cmp	r1, r0
   205fc:	bcs	206fc <__assert_fail@plt+0xf1b4>
   20600:	ldr	r0, [fp, #-8]
   20604:	ldr	r0, [r0]
   20608:	sub	r0, r0, #1
   2060c:	movw	r1, #32767	; 0x7fff
   20610:	cmp	r1, r0
   20614:	bcc	206e0 <__assert_fail@plt+0xf198>
   20618:	b	206fc <__assert_fail@plt+0xf1b4>
   2061c:	ldr	r0, [pc, #3992]	; 215bc <__assert_fail@plt+0x10074>
   20620:	ldr	r1, [fp, #-12]
   20624:	sdiv	r0, r0, r1
   20628:	ldr	r1, [fp, #-8]
   2062c:	ldr	r1, [r1]
   20630:	cmp	r0, r1
   20634:	bcc	206e0 <__assert_fail@plt+0xf198>
   20638:	b	206fc <__assert_fail@plt+0xf1b4>
   2063c:	ldr	r0, [fp, #-12]
   20640:	cmp	r0, #0
   20644:	bne	2064c <__assert_fail@plt+0xf104>
   20648:	b	206fc <__assert_fail@plt+0xf1b4>
   2064c:	ldr	r0, [fp, #-8]
   20650:	ldr	r0, [r0]
   20654:	cmp	r0, #0
   20658:	bcs	206c4 <__assert_fail@plt+0xf17c>
   2065c:	ldr	r0, [fp, #-8]
   20660:	ldr	r0, [r0]
   20664:	cmn	r0, #1
   20668:	bne	206a4 <__assert_fail@plt+0xf15c>
   2066c:	b	20670 <__assert_fail@plt+0xf128>
   20670:	ldr	r0, [pc, #3908]	; 215bc <__assert_fail@plt+0x10074>
   20674:	ldr	r1, [fp, #-12]
   20678:	add	r0, r1, r0
   2067c:	movw	r1, #0
   20680:	cmp	r1, r0
   20684:	blt	206e0 <__assert_fail@plt+0xf198>
   20688:	b	206fc <__assert_fail@plt+0xf1b4>
   2068c:	ldr	r0, [fp, #-12]
   20690:	sub	r0, r0, #1
   20694:	movw	r1, #32767	; 0x7fff
   20698:	cmp	r1, r0
   2069c:	blt	206e0 <__assert_fail@plt+0xf198>
   206a0:	b	206fc <__assert_fail@plt+0xf1b4>
   206a4:	ldr	r0, [pc, #4088]	; 216a4 <__assert_fail@plt+0x1015c>
   206a8:	ldr	r1, [fp, #-8]
   206ac:	ldr	r1, [r1]
   206b0:	udiv	r0, r0, r1
   206b4:	ldr	r1, [fp, #-12]
   206b8:	cmp	r0, r1
   206bc:	bcc	206e0 <__assert_fail@plt+0xf198>
   206c0:	b	206fc <__assert_fail@plt+0xf1b4>
   206c4:	ldr	r0, [fp, #-12]
   206c8:	movw	r1, #32767	; 0x7fff
   206cc:	sdiv	r0, r1, r0
   206d0:	ldr	r1, [fp, #-8]
   206d4:	ldr	r1, [r1]
   206d8:	cmp	r0, r1
   206dc:	bcs	206fc <__assert_fail@plt+0xf1b4>
   206e0:	ldr	r0, [fp, #-8]
   206e4:	ldr	r0, [r0]
   206e8:	ldr	r1, [fp, #-12]
   206ec:	mul	r0, r0, r1
   206f0:	sxth	r0, r0
   206f4:	str	r0, [fp, #-16]
   206f8:	b	21644 <__assert_fail@plt+0x100fc>
   206fc:	ldr	r0, [fp, #-8]
   20700:	ldr	r0, [r0]
   20704:	ldr	r1, [fp, #-12]
   20708:	mul	r0, r0, r1
   2070c:	sxth	r0, r0
   20710:	str	r0, [fp, #-16]
   20714:	b	21678 <__assert_fail@plt+0x10130>
   20718:	ldr	r0, [fp, #-12]
   2071c:	cmp	r0, #0
   20720:	bge	2084c <__assert_fail@plt+0xf304>
   20724:	ldr	r0, [fp, #-8]
   20728:	ldr	r0, [r0]
   2072c:	cmp	r0, #0
   20730:	bcs	207c4 <__assert_fail@plt+0xf27c>
   20734:	b	20738 <__assert_fail@plt+0xf1f0>
   20738:	ldr	r0, [fp, #-8]
   2073c:	ldr	r0, [r0]
   20740:	ldr	r1, [fp, #-12]
   20744:	movw	r2, #65535	; 0xffff
   20748:	sdiv	r1, r2, r1
   2074c:	cmp	r0, r1
   20750:	bcc	208f8 <__assert_fail@plt+0xf3b0>
   20754:	b	20914 <__assert_fail@plt+0xf3cc>
   20758:	b	2075c <__assert_fail@plt+0xf214>
   2075c:	ldr	r0, [pc, #3892]	; 21698 <__assert_fail@plt+0x10150>
   20760:	ldr	r1, [fp, #-12]
   20764:	cmp	r1, r0
   20768:	blt	20780 <__assert_fail@plt+0xf238>
   2076c:	b	2078c <__assert_fail@plt+0xf244>
   20770:	ldr	r0, [fp, #-12]
   20774:	movw	r1, #0
   20778:	cmp	r1, r0
   2077c:	bge	2078c <__assert_fail@plt+0xf244>
   20780:	movw	r0, #0
   20784:	str	r0, [fp, #-32]	; 0xffffffe0
   20788:	b	207a4 <__assert_fail@plt+0xf25c>
   2078c:	ldr	r0, [fp, #-12]
   20790:	movw	r1, #0
   20794:	sub	r0, r1, r0
   20798:	movw	r1, #65535	; 0xffff
   2079c:	sdiv	r0, r1, r0
   207a0:	str	r0, [fp, #-32]	; 0xffffffe0
   207a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   207a8:	ldr	r1, [fp, #-8]
   207ac:	ldr	r1, [r1]
   207b0:	mvn	r2, #0
   207b4:	sub	r1, r2, r1
   207b8:	cmp	r0, r1
   207bc:	bls	208f8 <__assert_fail@plt+0xf3b0>
   207c0:	b	20914 <__assert_fail@plt+0xf3cc>
   207c4:	b	207c8 <__assert_fail@plt+0xf280>
   207c8:	b	2082c <__assert_fail@plt+0xf2e4>
   207cc:	b	2082c <__assert_fail@plt+0xf2e4>
   207d0:	ldr	r0, [fp, #-12]
   207d4:	cmn	r0, #1
   207d8:	bne	2082c <__assert_fail@plt+0xf2e4>
   207dc:	b	207fc <__assert_fail@plt+0xf2b4>
   207e0:	ldr	r0, [fp, #-8]
   207e4:	ldr	r0, [r0]
   207e8:	add	r0, r0, #0
   207ec:	movw	r1, #0
   207f0:	cmp	r1, r0
   207f4:	bcc	208f8 <__assert_fail@plt+0xf3b0>
   207f8:	b	20914 <__assert_fail@plt+0xf3cc>
   207fc:	ldr	r0, [fp, #-8]
   20800:	ldr	r0, [r0]
   20804:	movw	r1, #0
   20808:	cmp	r1, r0
   2080c:	bcs	20914 <__assert_fail@plt+0xf3cc>
   20810:	ldr	r0, [fp, #-8]
   20814:	ldr	r0, [r0]
   20818:	sub	r0, r0, #1
   2081c:	mvn	r1, #0
   20820:	cmp	r1, r0
   20824:	bcc	208f8 <__assert_fail@plt+0xf3b0>
   20828:	b	20914 <__assert_fail@plt+0xf3cc>
   2082c:	ldr	r0, [fp, #-12]
   20830:	movw	r1, #0
   20834:	sdiv	r0, r1, r0
   20838:	ldr	r1, [fp, #-8]
   2083c:	ldr	r1, [r1]
   20840:	cmp	r0, r1
   20844:	bcc	208f8 <__assert_fail@plt+0xf3b0>
   20848:	b	20914 <__assert_fail@plt+0xf3cc>
   2084c:	ldr	r0, [fp, #-12]
   20850:	cmp	r0, #0
   20854:	bne	2085c <__assert_fail@plt+0xf314>
   20858:	b	20914 <__assert_fail@plt+0xf3cc>
   2085c:	ldr	r0, [fp, #-8]
   20860:	ldr	r0, [r0]
   20864:	cmp	r0, #0
   20868:	bcs	208dc <__assert_fail@plt+0xf394>
   2086c:	b	20874 <__assert_fail@plt+0xf32c>
   20870:	b	20878 <__assert_fail@plt+0xf330>
   20874:	b	208bc <__assert_fail@plt+0xf374>
   20878:	ldr	r0, [fp, #-8]
   2087c:	ldr	r0, [r0]
   20880:	cmn	r0, #1
   20884:	bne	208bc <__assert_fail@plt+0xf374>
   20888:	b	2088c <__assert_fail@plt+0xf344>
   2088c:	ldr	r0, [fp, #-12]
   20890:	add	r0, r0, #0
   20894:	movw	r1, #0
   20898:	cmp	r1, r0
   2089c:	blt	208f8 <__assert_fail@plt+0xf3b0>
   208a0:	b	20914 <__assert_fail@plt+0xf3cc>
   208a4:	ldr	r0, [fp, #-12]
   208a8:	sub	r0, r0, #1
   208ac:	mvn	r1, #0
   208b0:	cmp	r1, r0
   208b4:	blt	208f8 <__assert_fail@plt+0xf3b0>
   208b8:	b	20914 <__assert_fail@plt+0xf3cc>
   208bc:	ldr	r0, [fp, #-8]
   208c0:	ldr	r0, [r0]
   208c4:	movw	r1, #0
   208c8:	udiv	r0, r1, r0
   208cc:	ldr	r1, [fp, #-12]
   208d0:	cmp	r0, r1
   208d4:	bcc	208f8 <__assert_fail@plt+0xf3b0>
   208d8:	b	20914 <__assert_fail@plt+0xf3cc>
   208dc:	ldr	r0, [fp, #-12]
   208e0:	movw	r1, #65535	; 0xffff
   208e4:	sdiv	r0, r1, r0
   208e8:	ldr	r1, [fp, #-8]
   208ec:	ldr	r1, [r1]
   208f0:	cmp	r0, r1
   208f4:	bcs	20914 <__assert_fail@plt+0xf3cc>
   208f8:	ldr	r0, [fp, #-8]
   208fc:	ldr	r0, [r0]
   20900:	ldr	r1, [fp, #-12]
   20904:	mul	r0, r0, r1
   20908:	uxth	r0, r0
   2090c:	str	r0, [fp, #-16]
   20910:	b	21644 <__assert_fail@plt+0x100fc>
   20914:	ldr	r0, [fp, #-8]
   20918:	ldr	r0, [r0]
   2091c:	ldr	r1, [fp, #-12]
   20920:	mul	r0, r0, r1
   20924:	uxth	r0, r0
   20928:	str	r0, [fp, #-16]
   2092c:	b	21678 <__assert_fail@plt+0x10130>
   20930:	b	20934 <__assert_fail@plt+0xf3ec>
   20934:	b	20b30 <__assert_fail@plt+0xf5e8>
   20938:	ldr	r0, [fp, #-12]
   2093c:	cmp	r0, #0
   20940:	bge	20a60 <__assert_fail@plt+0xf518>
   20944:	ldr	r0, [fp, #-8]
   20948:	ldr	r0, [r0]
   2094c:	cmp	r0, #0
   20950:	bcs	209e4 <__assert_fail@plt+0xf49c>
   20954:	b	20958 <__assert_fail@plt+0xf410>
   20958:	ldr	r0, [pc, #3388]	; 2169c <__assert_fail@plt+0x10154>
   2095c:	ldr	r1, [fp, #-8]
   20960:	ldr	r1, [r1]
   20964:	ldr	r2, [fp, #-12]
   20968:	sdiv	r0, r0, r2
   2096c:	cmp	r1, r0
   20970:	bcc	20b00 <__assert_fail@plt+0xf5b8>
   20974:	b	20b18 <__assert_fail@plt+0xf5d0>
   20978:	b	2097c <__assert_fail@plt+0xf434>
   2097c:	ldr	r0, [pc, #3348]	; 21698 <__assert_fail@plt+0x10150>
   20980:	ldr	r1, [fp, #-12]
   20984:	cmp	r1, r0
   20988:	blt	209a0 <__assert_fail@plt+0xf458>
   2098c:	b	209ac <__assert_fail@plt+0xf464>
   20990:	ldr	r0, [fp, #-12]
   20994:	movw	r1, #0
   20998:	cmp	r1, r0
   2099c:	bge	209ac <__assert_fail@plt+0xf464>
   209a0:	movw	r0, #0
   209a4:	str	r0, [fp, #-36]	; 0xffffffdc
   209a8:	b	209c4 <__assert_fail@plt+0xf47c>
   209ac:	ldr	r0, [pc, #3304]	; 2169c <__assert_fail@plt+0x10154>
   209b0:	ldr	r1, [fp, #-12]
   209b4:	movw	r2, #0
   209b8:	sub	r1, r2, r1
   209bc:	sdiv	r0, r0, r1
   209c0:	str	r0, [fp, #-36]	; 0xffffffdc
   209c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   209c8:	ldr	r1, [fp, #-8]
   209cc:	ldr	r1, [r1]
   209d0:	mvn	r2, #0
   209d4:	sub	r1, r2, r1
   209d8:	cmp	r0, r1
   209dc:	bls	20b00 <__assert_fail@plt+0xf5b8>
   209e0:	b	20b18 <__assert_fail@plt+0xf5d0>
   209e4:	ldr	r0, [fp, #-12]
   209e8:	cmn	r0, #1
   209ec:	bne	20a40 <__assert_fail@plt+0xf4f8>
   209f0:	b	20a10 <__assert_fail@plt+0xf4c8>
   209f4:	ldr	r0, [fp, #-8]
   209f8:	ldr	r0, [r0]
   209fc:	add	r0, r0, #-2147483648	; 0x80000000
   20a00:	movw	r1, #0
   20a04:	cmp	r1, r0
   20a08:	bcc	20b00 <__assert_fail@plt+0xf5b8>
   20a0c:	b	20b18 <__assert_fail@plt+0xf5d0>
   20a10:	ldr	r0, [fp, #-8]
   20a14:	ldr	r0, [r0]
   20a18:	movw	r1, #0
   20a1c:	cmp	r1, r0
   20a20:	bcs	20b18 <__assert_fail@plt+0xf5d0>
   20a24:	ldr	r0, [pc, #3184]	; 2169c <__assert_fail@plt+0x10154>
   20a28:	ldr	r1, [fp, #-8]
   20a2c:	ldr	r1, [r1]
   20a30:	sub	r1, r1, #1
   20a34:	cmp	r0, r1
   20a38:	bcc	20b00 <__assert_fail@plt+0xf5b8>
   20a3c:	b	20b18 <__assert_fail@plt+0xf5d0>
   20a40:	ldr	r0, [pc, #3160]	; 216a0 <__assert_fail@plt+0x10158>
   20a44:	ldr	r1, [fp, #-12]
   20a48:	sdiv	r0, r0, r1
   20a4c:	ldr	r1, [fp, #-8]
   20a50:	ldr	r1, [r1]
   20a54:	cmp	r0, r1
   20a58:	bcc	20b00 <__assert_fail@plt+0xf5b8>
   20a5c:	b	20b18 <__assert_fail@plt+0xf5d0>
   20a60:	ldr	r0, [fp, #-12]
   20a64:	cmp	r0, #0
   20a68:	bne	20a70 <__assert_fail@plt+0xf528>
   20a6c:	b	20b18 <__assert_fail@plt+0xf5d0>
   20a70:	ldr	r0, [fp, #-8]
   20a74:	ldr	r0, [r0]
   20a78:	cmp	r0, #0
   20a7c:	bcs	20ae4 <__assert_fail@plt+0xf59c>
   20a80:	ldr	r0, [fp, #-8]
   20a84:	ldr	r0, [r0]
   20a88:	cmn	r0, #1
   20a8c:	bne	20ac4 <__assert_fail@plt+0xf57c>
   20a90:	b	20a94 <__assert_fail@plt+0xf54c>
   20a94:	ldr	r0, [fp, #-12]
   20a98:	add	r0, r0, #-2147483648	; 0x80000000
   20a9c:	movw	r1, #0
   20aa0:	cmp	r1, r0
   20aa4:	blt	20b00 <__assert_fail@plt+0xf5b8>
   20aa8:	b	20b18 <__assert_fail@plt+0xf5d0>
   20aac:	ldr	r0, [pc, #3048]	; 2169c <__assert_fail@plt+0x10154>
   20ab0:	ldr	r1, [fp, #-12]
   20ab4:	sub	r1, r1, #1
   20ab8:	cmp	r0, r1
   20abc:	blt	20b00 <__assert_fail@plt+0xf5b8>
   20ac0:	b	20b18 <__assert_fail@plt+0xf5d0>
   20ac4:	ldr	r0, [pc, #3028]	; 216a0 <__assert_fail@plt+0x10158>
   20ac8:	ldr	r1, [fp, #-8]
   20acc:	ldr	r1, [r1]
   20ad0:	udiv	r0, r0, r1
   20ad4:	ldr	r1, [fp, #-12]
   20ad8:	cmp	r0, r1
   20adc:	bcc	20b00 <__assert_fail@plt+0xf5b8>
   20ae0:	b	20b18 <__assert_fail@plt+0xf5d0>
   20ae4:	ldr	r0, [pc, #2992]	; 2169c <__assert_fail@plt+0x10154>
   20ae8:	ldr	r1, [fp, #-12]
   20aec:	sdiv	r0, r0, r1
   20af0:	ldr	r1, [fp, #-8]
   20af4:	ldr	r1, [r1]
   20af8:	cmp	r0, r1
   20afc:	bcs	20b18 <__assert_fail@plt+0xf5d0>
   20b00:	ldr	r0, [fp, #-8]
   20b04:	ldr	r0, [r0]
   20b08:	ldr	r1, [fp, #-12]
   20b0c:	mul	r0, r0, r1
   20b10:	str	r0, [fp, #-16]
   20b14:	b	21644 <__assert_fail@plt+0x100fc>
   20b18:	ldr	r0, [fp, #-8]
   20b1c:	ldr	r0, [r0]
   20b20:	ldr	r1, [fp, #-12]
   20b24:	mul	r0, r0, r1
   20b28:	str	r0, [fp, #-16]
   20b2c:	b	21678 <__assert_fail@plt+0x10130>
   20b30:	ldr	r0, [fp, #-12]
   20b34:	cmp	r0, #0
   20b38:	bge	20c64 <__assert_fail@plt+0xf71c>
   20b3c:	ldr	r0, [fp, #-8]
   20b40:	ldr	r0, [r0]
   20b44:	cmp	r0, #0
   20b48:	bcs	20bdc <__assert_fail@plt+0xf694>
   20b4c:	b	20b70 <__assert_fail@plt+0xf628>
   20b50:	ldr	r0, [fp, #-8]
   20b54:	ldr	r0, [r0]
   20b58:	ldr	r1, [fp, #-12]
   20b5c:	mvn	r2, #0
   20b60:	udiv	r1, r2, r1
   20b64:	cmp	r0, r1
   20b68:	bcc	20d10 <__assert_fail@plt+0xf7c8>
   20b6c:	b	20d28 <__assert_fail@plt+0xf7e0>
   20b70:	b	20b74 <__assert_fail@plt+0xf62c>
   20b74:	ldr	r0, [pc, #2844]	; 21698 <__assert_fail@plt+0x10150>
   20b78:	ldr	r1, [fp, #-12]
   20b7c:	cmp	r1, r0
   20b80:	blt	20b98 <__assert_fail@plt+0xf650>
   20b84:	b	20ba4 <__assert_fail@plt+0xf65c>
   20b88:	ldr	r0, [fp, #-12]
   20b8c:	movw	r1, #0
   20b90:	cmp	r1, r0
   20b94:	bge	20ba4 <__assert_fail@plt+0xf65c>
   20b98:	movw	r0, #1
   20b9c:	str	r0, [fp, #-40]	; 0xffffffd8
   20ba0:	b	20bbc <__assert_fail@plt+0xf674>
   20ba4:	ldr	r0, [fp, #-12]
   20ba8:	movw	r1, #0
   20bac:	sub	r0, r1, r0
   20bb0:	mvn	r1, #0
   20bb4:	udiv	r0, r1, r0
   20bb8:	str	r0, [fp, #-40]	; 0xffffffd8
   20bbc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20bc0:	ldr	r1, [fp, #-8]
   20bc4:	ldr	r1, [r1]
   20bc8:	mvn	r2, #0
   20bcc:	sub	r1, r2, r1
   20bd0:	cmp	r0, r1
   20bd4:	bls	20d10 <__assert_fail@plt+0xf7c8>
   20bd8:	b	20d28 <__assert_fail@plt+0xf7e0>
   20bdc:	b	20be0 <__assert_fail@plt+0xf698>
   20be0:	b	20c44 <__assert_fail@plt+0xf6fc>
   20be4:	b	20c44 <__assert_fail@plt+0xf6fc>
   20be8:	ldr	r0, [fp, #-12]
   20bec:	cmn	r0, #1
   20bf0:	bne	20c44 <__assert_fail@plt+0xf6fc>
   20bf4:	b	20c14 <__assert_fail@plt+0xf6cc>
   20bf8:	ldr	r0, [fp, #-8]
   20bfc:	ldr	r0, [r0]
   20c00:	add	r0, r0, #0
   20c04:	movw	r1, #0
   20c08:	cmp	r1, r0
   20c0c:	bcc	20d10 <__assert_fail@plt+0xf7c8>
   20c10:	b	20d28 <__assert_fail@plt+0xf7e0>
   20c14:	ldr	r0, [fp, #-8]
   20c18:	ldr	r0, [r0]
   20c1c:	movw	r1, #0
   20c20:	cmp	r1, r0
   20c24:	bcs	20d28 <__assert_fail@plt+0xf7e0>
   20c28:	ldr	r0, [fp, #-8]
   20c2c:	ldr	r0, [r0]
   20c30:	sub	r0, r0, #1
   20c34:	mvn	r1, #0
   20c38:	cmp	r1, r0
   20c3c:	bcc	20d10 <__assert_fail@plt+0xf7c8>
   20c40:	b	20d28 <__assert_fail@plt+0xf7e0>
   20c44:	ldr	r0, [fp, #-12]
   20c48:	movw	r1, #0
   20c4c:	sdiv	r0, r1, r0
   20c50:	ldr	r1, [fp, #-8]
   20c54:	ldr	r1, [r1]
   20c58:	cmp	r0, r1
   20c5c:	bcc	20d10 <__assert_fail@plt+0xf7c8>
   20c60:	b	20d28 <__assert_fail@plt+0xf7e0>
   20c64:	ldr	r0, [fp, #-12]
   20c68:	cmp	r0, #0
   20c6c:	bne	20c74 <__assert_fail@plt+0xf72c>
   20c70:	b	20d28 <__assert_fail@plt+0xf7e0>
   20c74:	ldr	r0, [fp, #-8]
   20c78:	ldr	r0, [r0]
   20c7c:	cmp	r0, #0
   20c80:	bcs	20cf4 <__assert_fail@plt+0xf7ac>
   20c84:	b	20c8c <__assert_fail@plt+0xf744>
   20c88:	b	20c90 <__assert_fail@plt+0xf748>
   20c8c:	b	20cd4 <__assert_fail@plt+0xf78c>
   20c90:	ldr	r0, [fp, #-8]
   20c94:	ldr	r0, [r0]
   20c98:	cmn	r0, #1
   20c9c:	bne	20cd4 <__assert_fail@plt+0xf78c>
   20ca0:	b	20ca4 <__assert_fail@plt+0xf75c>
   20ca4:	ldr	r0, [fp, #-12]
   20ca8:	add	r0, r0, #0
   20cac:	movw	r1, #0
   20cb0:	cmp	r1, r0
   20cb4:	blt	20d10 <__assert_fail@plt+0xf7c8>
   20cb8:	b	20d28 <__assert_fail@plt+0xf7e0>
   20cbc:	ldr	r0, [fp, #-12]
   20cc0:	sub	r0, r0, #1
   20cc4:	mvn	r1, #0
   20cc8:	cmp	r1, r0
   20ccc:	blt	20d10 <__assert_fail@plt+0xf7c8>
   20cd0:	b	20d28 <__assert_fail@plt+0xf7e0>
   20cd4:	ldr	r0, [fp, #-8]
   20cd8:	ldr	r0, [r0]
   20cdc:	movw	r1, #0
   20ce0:	udiv	r0, r1, r0
   20ce4:	ldr	r1, [fp, #-12]
   20ce8:	cmp	r0, r1
   20cec:	bcc	20d10 <__assert_fail@plt+0xf7c8>
   20cf0:	b	20d28 <__assert_fail@plt+0xf7e0>
   20cf4:	ldr	r0, [fp, #-12]
   20cf8:	mvn	r1, #0
   20cfc:	udiv	r0, r1, r0
   20d00:	ldr	r1, [fp, #-8]
   20d04:	ldr	r1, [r1]
   20d08:	cmp	r0, r1
   20d0c:	bcs	20d28 <__assert_fail@plt+0xf7e0>
   20d10:	ldr	r0, [fp, #-8]
   20d14:	ldr	r0, [r0]
   20d18:	ldr	r1, [fp, #-12]
   20d1c:	mul	r0, r0, r1
   20d20:	str	r0, [fp, #-16]
   20d24:	b	21644 <__assert_fail@plt+0x100fc>
   20d28:	ldr	r0, [fp, #-8]
   20d2c:	ldr	r0, [r0]
   20d30:	ldr	r1, [fp, #-12]
   20d34:	mul	r0, r0, r1
   20d38:	str	r0, [fp, #-16]
   20d3c:	b	21678 <__assert_fail@plt+0x10130>
   20d40:	b	20d44 <__assert_fail@plt+0xf7fc>
   20d44:	b	20f40 <__assert_fail@plt+0xf9f8>
   20d48:	ldr	r0, [fp, #-12]
   20d4c:	cmp	r0, #0
   20d50:	bge	20e70 <__assert_fail@plt+0xf928>
   20d54:	ldr	r0, [fp, #-8]
   20d58:	ldr	r0, [r0]
   20d5c:	cmp	r0, #0
   20d60:	bcs	20df4 <__assert_fail@plt+0xf8ac>
   20d64:	b	20d68 <__assert_fail@plt+0xf820>
   20d68:	ldr	r0, [pc, #2348]	; 2169c <__assert_fail@plt+0x10154>
   20d6c:	ldr	r1, [fp, #-8]
   20d70:	ldr	r1, [r1]
   20d74:	ldr	r2, [fp, #-12]
   20d78:	sdiv	r0, r0, r2
   20d7c:	cmp	r1, r0
   20d80:	bcc	20f10 <__assert_fail@plt+0xf9c8>
   20d84:	b	20f28 <__assert_fail@plt+0xf9e0>
   20d88:	b	20d8c <__assert_fail@plt+0xf844>
   20d8c:	ldr	r0, [pc, #2308]	; 21698 <__assert_fail@plt+0x10150>
   20d90:	ldr	r1, [fp, #-12]
   20d94:	cmp	r1, r0
   20d98:	blt	20db0 <__assert_fail@plt+0xf868>
   20d9c:	b	20dbc <__assert_fail@plt+0xf874>
   20da0:	ldr	r0, [fp, #-12]
   20da4:	movw	r1, #0
   20da8:	cmp	r1, r0
   20dac:	bge	20dbc <__assert_fail@plt+0xf874>
   20db0:	movw	r0, #0
   20db4:	str	r0, [fp, #-44]	; 0xffffffd4
   20db8:	b	20dd4 <__assert_fail@plt+0xf88c>
   20dbc:	ldr	r0, [pc, #2264]	; 2169c <__assert_fail@plt+0x10154>
   20dc0:	ldr	r1, [fp, #-12]
   20dc4:	movw	r2, #0
   20dc8:	sub	r1, r2, r1
   20dcc:	sdiv	r0, r0, r1
   20dd0:	str	r0, [fp, #-44]	; 0xffffffd4
   20dd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   20dd8:	ldr	r1, [fp, #-8]
   20ddc:	ldr	r1, [r1]
   20de0:	mvn	r2, #0
   20de4:	sub	r1, r2, r1
   20de8:	cmp	r0, r1
   20dec:	bls	20f10 <__assert_fail@plt+0xf9c8>
   20df0:	b	20f28 <__assert_fail@plt+0xf9e0>
   20df4:	ldr	r0, [fp, #-12]
   20df8:	cmn	r0, #1
   20dfc:	bne	20e50 <__assert_fail@plt+0xf908>
   20e00:	b	20e20 <__assert_fail@plt+0xf8d8>
   20e04:	ldr	r0, [fp, #-8]
   20e08:	ldr	r0, [r0]
   20e0c:	add	r0, r0, #-2147483648	; 0x80000000
   20e10:	movw	r1, #0
   20e14:	cmp	r1, r0
   20e18:	bcc	20f10 <__assert_fail@plt+0xf9c8>
   20e1c:	b	20f28 <__assert_fail@plt+0xf9e0>
   20e20:	ldr	r0, [fp, #-8]
   20e24:	ldr	r0, [r0]
   20e28:	movw	r1, #0
   20e2c:	cmp	r1, r0
   20e30:	bcs	20f28 <__assert_fail@plt+0xf9e0>
   20e34:	ldr	r0, [pc, #2144]	; 2169c <__assert_fail@plt+0x10154>
   20e38:	ldr	r1, [fp, #-8]
   20e3c:	ldr	r1, [r1]
   20e40:	sub	r1, r1, #1
   20e44:	cmp	r0, r1
   20e48:	bcc	20f10 <__assert_fail@plt+0xf9c8>
   20e4c:	b	20f28 <__assert_fail@plt+0xf9e0>
   20e50:	ldr	r0, [pc, #2120]	; 216a0 <__assert_fail@plt+0x10158>
   20e54:	ldr	r1, [fp, #-12]
   20e58:	sdiv	r0, r0, r1
   20e5c:	ldr	r1, [fp, #-8]
   20e60:	ldr	r1, [r1]
   20e64:	cmp	r0, r1
   20e68:	bcc	20f10 <__assert_fail@plt+0xf9c8>
   20e6c:	b	20f28 <__assert_fail@plt+0xf9e0>
   20e70:	ldr	r0, [fp, #-12]
   20e74:	cmp	r0, #0
   20e78:	bne	20e80 <__assert_fail@plt+0xf938>
   20e7c:	b	20f28 <__assert_fail@plt+0xf9e0>
   20e80:	ldr	r0, [fp, #-8]
   20e84:	ldr	r0, [r0]
   20e88:	cmp	r0, #0
   20e8c:	bcs	20ef4 <__assert_fail@plt+0xf9ac>
   20e90:	ldr	r0, [fp, #-8]
   20e94:	ldr	r0, [r0]
   20e98:	cmn	r0, #1
   20e9c:	bne	20ed4 <__assert_fail@plt+0xf98c>
   20ea0:	b	20ea4 <__assert_fail@plt+0xf95c>
   20ea4:	ldr	r0, [fp, #-12]
   20ea8:	add	r0, r0, #-2147483648	; 0x80000000
   20eac:	movw	r1, #0
   20eb0:	cmp	r1, r0
   20eb4:	blt	20f10 <__assert_fail@plt+0xf9c8>
   20eb8:	b	20f28 <__assert_fail@plt+0xf9e0>
   20ebc:	ldr	r0, [pc, #2008]	; 2169c <__assert_fail@plt+0x10154>
   20ec0:	ldr	r1, [fp, #-12]
   20ec4:	sub	r1, r1, #1
   20ec8:	cmp	r0, r1
   20ecc:	blt	20f10 <__assert_fail@plt+0xf9c8>
   20ed0:	b	20f28 <__assert_fail@plt+0xf9e0>
   20ed4:	ldr	r0, [pc, #1988]	; 216a0 <__assert_fail@plt+0x10158>
   20ed8:	ldr	r1, [fp, #-8]
   20edc:	ldr	r1, [r1]
   20ee0:	udiv	r0, r0, r1
   20ee4:	ldr	r1, [fp, #-12]
   20ee8:	cmp	r0, r1
   20eec:	bcc	20f10 <__assert_fail@plt+0xf9c8>
   20ef0:	b	20f28 <__assert_fail@plt+0xf9e0>
   20ef4:	ldr	r0, [pc, #1952]	; 2169c <__assert_fail@plt+0x10154>
   20ef8:	ldr	r1, [fp, #-12]
   20efc:	sdiv	r0, r0, r1
   20f00:	ldr	r1, [fp, #-8]
   20f04:	ldr	r1, [r1]
   20f08:	cmp	r0, r1
   20f0c:	bcs	20f28 <__assert_fail@plt+0xf9e0>
   20f10:	ldr	r0, [fp, #-8]
   20f14:	ldr	r0, [r0]
   20f18:	ldr	r1, [fp, #-12]
   20f1c:	mul	r0, r0, r1
   20f20:	str	r0, [fp, #-16]
   20f24:	b	21644 <__assert_fail@plt+0x100fc>
   20f28:	ldr	r0, [fp, #-8]
   20f2c:	ldr	r0, [r0]
   20f30:	ldr	r1, [fp, #-12]
   20f34:	mul	r0, r0, r1
   20f38:	str	r0, [fp, #-16]
   20f3c:	b	21678 <__assert_fail@plt+0x10130>
   20f40:	ldr	r0, [fp, #-12]
   20f44:	cmp	r0, #0
   20f48:	bge	21074 <__assert_fail@plt+0xfb2c>
   20f4c:	ldr	r0, [fp, #-8]
   20f50:	ldr	r0, [r0]
   20f54:	cmp	r0, #0
   20f58:	bcs	20fec <__assert_fail@plt+0xfaa4>
   20f5c:	b	20f80 <__assert_fail@plt+0xfa38>
   20f60:	ldr	r0, [fp, #-8]
   20f64:	ldr	r0, [r0]
   20f68:	ldr	r1, [fp, #-12]
   20f6c:	mvn	r2, #0
   20f70:	udiv	r1, r2, r1
   20f74:	cmp	r0, r1
   20f78:	bcc	21124 <__assert_fail@plt+0xfbdc>
   20f7c:	b	2113c <__assert_fail@plt+0xfbf4>
   20f80:	b	20f84 <__assert_fail@plt+0xfa3c>
   20f84:	ldr	r0, [pc, #1804]	; 21698 <__assert_fail@plt+0x10150>
   20f88:	ldr	r1, [fp, #-12]
   20f8c:	cmp	r1, r0
   20f90:	blt	20fa8 <__assert_fail@plt+0xfa60>
   20f94:	b	20fb4 <__assert_fail@plt+0xfa6c>
   20f98:	ldr	r0, [fp, #-12]
   20f9c:	movw	r1, #0
   20fa0:	cmp	r1, r0
   20fa4:	bge	20fb4 <__assert_fail@plt+0xfa6c>
   20fa8:	movw	r0, #1
   20fac:	str	r0, [fp, #-48]	; 0xffffffd0
   20fb0:	b	20fcc <__assert_fail@plt+0xfa84>
   20fb4:	ldr	r0, [fp, #-12]
   20fb8:	movw	r1, #0
   20fbc:	sub	r0, r1, r0
   20fc0:	mvn	r1, #0
   20fc4:	udiv	r0, r1, r0
   20fc8:	str	r0, [fp, #-48]	; 0xffffffd0
   20fcc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   20fd0:	ldr	r1, [fp, #-8]
   20fd4:	ldr	r1, [r1]
   20fd8:	mvn	r2, #0
   20fdc:	sub	r1, r2, r1
   20fe0:	cmp	r0, r1
   20fe4:	bls	21124 <__assert_fail@plt+0xfbdc>
   20fe8:	b	2113c <__assert_fail@plt+0xfbf4>
   20fec:	b	20ff0 <__assert_fail@plt+0xfaa8>
   20ff0:	b	21054 <__assert_fail@plt+0xfb0c>
   20ff4:	b	21054 <__assert_fail@plt+0xfb0c>
   20ff8:	ldr	r0, [fp, #-12]
   20ffc:	cmn	r0, #1
   21000:	bne	21054 <__assert_fail@plt+0xfb0c>
   21004:	b	21024 <__assert_fail@plt+0xfadc>
   21008:	ldr	r0, [fp, #-8]
   2100c:	ldr	r0, [r0]
   21010:	add	r0, r0, #0
   21014:	movw	r1, #0
   21018:	cmp	r1, r0
   2101c:	bcc	21124 <__assert_fail@plt+0xfbdc>
   21020:	b	2113c <__assert_fail@plt+0xfbf4>
   21024:	ldr	r0, [fp, #-8]
   21028:	ldr	r0, [r0]
   2102c:	movw	r1, #0
   21030:	cmp	r1, r0
   21034:	bcs	2113c <__assert_fail@plt+0xfbf4>
   21038:	ldr	r0, [fp, #-8]
   2103c:	ldr	r0, [r0]
   21040:	sub	r0, r0, #1
   21044:	mvn	r1, #0
   21048:	cmp	r1, r0
   2104c:	bcc	21124 <__assert_fail@plt+0xfbdc>
   21050:	b	2113c <__assert_fail@plt+0xfbf4>
   21054:	ldr	r0, [fp, #-12]
   21058:	movw	r1, #0
   2105c:	sdiv	r0, r1, r0
   21060:	ldr	r1, [fp, #-8]
   21064:	ldr	r1, [r1]
   21068:	cmp	r0, r1
   2106c:	bcc	21124 <__assert_fail@plt+0xfbdc>
   21070:	b	2113c <__assert_fail@plt+0xfbf4>
   21074:	ldr	r0, [fp, #-12]
   21078:	cmp	r0, #0
   2107c:	bne	21084 <__assert_fail@plt+0xfb3c>
   21080:	b	2113c <__assert_fail@plt+0xfbf4>
   21084:	ldr	r0, [fp, #-8]
   21088:	ldr	r0, [r0]
   2108c:	cmp	r0, #0
   21090:	bcs	21108 <__assert_fail@plt+0xfbc0>
   21094:	b	2109c <__assert_fail@plt+0xfb54>
   21098:	b	210a0 <__assert_fail@plt+0xfb58>
   2109c:	b	210e4 <__assert_fail@plt+0xfb9c>
   210a0:	ldr	r0, [fp, #-8]
   210a4:	ldr	r0, [r0]
   210a8:	cmn	r0, #1
   210ac:	bne	210e4 <__assert_fail@plt+0xfb9c>
   210b0:	b	210b4 <__assert_fail@plt+0xfb6c>
   210b4:	ldr	r0, [fp, #-12]
   210b8:	add	r0, r0, #0
   210bc:	movw	r1, #0
   210c0:	cmp	r1, r0
   210c4:	blt	21124 <__assert_fail@plt+0xfbdc>
   210c8:	b	2113c <__assert_fail@plt+0xfbf4>
   210cc:	ldr	r0, [fp, #-12]
   210d0:	sub	r0, r0, #1
   210d4:	mvn	r1, #0
   210d8:	cmp	r1, r0
   210dc:	blt	21124 <__assert_fail@plt+0xfbdc>
   210e0:	b	2113c <__assert_fail@plt+0xfbf4>
   210e4:	ldr	r0, [fp, #-8]
   210e8:	ldr	r0, [r0]
   210ec:	movw	r1, #0
   210f0:	udiv	r0, r1, r0
   210f4:	ldr	r1, [fp, #-12]
   210f8:	cmp	r0, r1
   210fc:	bcc	21124 <__assert_fail@plt+0xfbdc>
   21100:	b	2113c <__assert_fail@plt+0xfbf4>
   21104:	andhi	r0, r0, r1
   21108:	ldr	r0, [fp, #-12]
   2110c:	mvn	r1, #0
   21110:	udiv	r0, r1, r0
   21114:	ldr	r1, [fp, #-8]
   21118:	ldr	r1, [r1]
   2111c:	cmp	r0, r1
   21120:	bcs	2113c <__assert_fail@plt+0xfbf4>
   21124:	ldr	r0, [fp, #-8]
   21128:	ldr	r0, [r0]
   2112c:	ldr	r1, [fp, #-12]
   21130:	mul	r0, r0, r1
   21134:	str	r0, [fp, #-16]
   21138:	b	21644 <__assert_fail@plt+0x100fc>
   2113c:	ldr	r0, [fp, #-8]
   21140:	ldr	r0, [r0]
   21144:	ldr	r1, [fp, #-12]
   21148:	mul	r0, r0, r1
   2114c:	str	r0, [fp, #-16]
   21150:	b	21678 <__assert_fail@plt+0x10130>
   21154:	b	213d8 <__assert_fail@plt+0xfe90>
   21158:	ldr	r0, [fp, #-12]
   2115c:	cmp	r0, #0
   21160:	bge	212dc <__assert_fail@plt+0xfd94>
   21164:	ldr	r0, [fp, #-8]
   21168:	ldr	r0, [r0]
   2116c:	cmp	r0, #0
   21170:	bcs	21250 <__assert_fail@plt+0xfd08>
   21174:	b	21178 <__assert_fail@plt+0xfc30>
   21178:	ldr	r0, [fp, #-8]
   2117c:	ldr	r0, [r0]
   21180:	ldr	r1, [fp, #-12]
   21184:	asr	r3, r1, #31
   21188:	mvn	r2, #0
   2118c:	mvn	ip, #-2147483648	; 0x80000000
   21190:	str	r0, [sp, #52]	; 0x34
   21194:	mov	r0, r2
   21198:	str	r1, [sp, #48]	; 0x30
   2119c:	mov	r1, ip
   211a0:	ldr	r2, [sp, #48]	; 0x30
   211a4:	bl	24490 <__assert_fail@plt+0x12f48>
   211a8:	ldr	r2, [sp, #52]	; 0x34
   211ac:	subs	r0, r2, r0
   211b0:	rscs	r1, r1, #0
   211b4:	blt	213a8 <__assert_fail@plt+0xfe60>
   211b8:	b	213c0 <__assert_fail@plt+0xfe78>
   211bc:	b	211c0 <__assert_fail@plt+0xfc78>
   211c0:	ldr	r0, [pc, #1232]	; 21698 <__assert_fail@plt+0x10150>
   211c4:	ldr	r1, [fp, #-12]
   211c8:	cmp	r1, r0
   211cc:	blt	211e4 <__assert_fail@plt+0xfc9c>
   211d0:	b	211f8 <__assert_fail@plt+0xfcb0>
   211d4:	ldr	r0, [fp, #-12]
   211d8:	movw	r1, #0
   211dc:	cmp	r1, r0
   211e0:	bge	211f8 <__assert_fail@plt+0xfcb0>
   211e4:	mov	r0, #0
   211e8:	mvn	r1, #0
   211ec:	str	r1, [sp, #44]	; 0x2c
   211f0:	str	r0, [sp, #40]	; 0x28
   211f4:	b	2122c <__assert_fail@plt+0xfce4>
   211f8:	ldr	r0, [fp, #-12]
   211fc:	rsb	r0, r0, #0
   21200:	asr	r3, r0, #31
   21204:	mvn	r1, #0
   21208:	mvn	r2, #-2147483648	; 0x80000000
   2120c:	str	r0, [sp, #36]	; 0x24
   21210:	mov	r0, r1
   21214:	mov	r1, r2
   21218:	ldr	r2, [sp, #36]	; 0x24
   2121c:	bl	24490 <__assert_fail@plt+0x12f48>
   21220:	str	r0, [sp, #44]	; 0x2c
   21224:	str	r1, [sp, #40]	; 0x28
   21228:	b	2122c <__assert_fail@plt+0xfce4>
   2122c:	ldr	r0, [sp, #40]	; 0x28
   21230:	ldr	r1, [sp, #44]	; 0x2c
   21234:	ldr	r2, [fp, #-8]
   21238:	ldr	r2, [r2]
   2123c:	mvn	r2, r2
   21240:	subs	r1, r2, r1
   21244:	rscs	r0, r0, #0
   21248:	bge	213a8 <__assert_fail@plt+0xfe60>
   2124c:	b	213c0 <__assert_fail@plt+0xfe78>
   21250:	ldr	r0, [fp, #-12]
   21254:	cmn	r0, #1
   21258:	bne	212a0 <__assert_fail@plt+0xfd58>
   2125c:	b	2127c <__assert_fail@plt+0xfd34>
   21260:	ldr	r0, [fp, #-8]
   21264:	ldr	r0, [r0]
   21268:	rsbs	r0, r0, #0
   2126c:	mov	r1, #0
   21270:	sbcs	r1, r1, #-2147483648	; 0x80000000
   21274:	blt	213a8 <__assert_fail@plt+0xfe60>
   21278:	b	213c0 <__assert_fail@plt+0xfe78>
   2127c:	ldr	r0, [fp, #-8]
   21280:	ldr	r0, [r0]
   21284:	movw	r1, #0
   21288:	cmp	r1, r0
   2128c:	bcs	213c0 <__assert_fail@plt+0xfe78>
   21290:	mov	r0, #0
   21294:	cmp	r0, #0
   21298:	bne	213a8 <__assert_fail@plt+0xfe60>
   2129c:	b	213c0 <__assert_fail@plt+0xfe78>
   212a0:	ldr	r0, [fp, #-12]
   212a4:	asr	r3, r0, #31
   212a8:	mov	r1, #0
   212ac:	mov	r2, #-2147483648	; 0x80000000
   212b0:	str	r0, [sp, #32]
   212b4:	mov	r0, r1
   212b8:	mov	r1, r2
   212bc:	ldr	r2, [sp, #32]
   212c0:	bl	24490 <__assert_fail@plt+0x12f48>
   212c4:	ldr	r2, [fp, #-8]
   212c8:	ldr	r2, [r2]
   212cc:	subs	r0, r0, r2
   212d0:	sbcs	r1, r1, #0
   212d4:	blt	213a8 <__assert_fail@plt+0xfe60>
   212d8:	b	213c0 <__assert_fail@plt+0xfe78>
   212dc:	ldr	r0, [fp, #-12]
   212e0:	cmp	r0, #0
   212e4:	bne	212ec <__assert_fail@plt+0xfda4>
   212e8:	b	213c0 <__assert_fail@plt+0xfe78>
   212ec:	ldr	r0, [fp, #-8]
   212f0:	ldr	r0, [r0]
   212f4:	cmp	r0, #0
   212f8:	bcs	2136c <__assert_fail@plt+0xfe24>
   212fc:	ldr	r0, [fp, #-8]
   21300:	ldr	r0, [r0]
   21304:	cmn	r0, #1
   21308:	bne	2133c <__assert_fail@plt+0xfdf4>
   2130c:	b	21310 <__assert_fail@plt+0xfdc8>
   21310:	ldr	r0, [fp, #-12]
   21314:	mov	r1, #-2147483648	; 0x80000000
   21318:	add	r1, r1, r0, asr #31
   2131c:	rsbs	r0, r0, #0
   21320:	rscs	r1, r1, #0
   21324:	blt	213a8 <__assert_fail@plt+0xfe60>
   21328:	b	213c0 <__assert_fail@plt+0xfe78>
   2132c:	mov	r0, #0
   21330:	cmp	r0, #0
   21334:	bne	213a8 <__assert_fail@plt+0xfe60>
   21338:	b	213c0 <__assert_fail@plt+0xfe78>
   2133c:	ldr	r0, [fp, #-8]
   21340:	ldr	r2, [r0]
   21344:	mov	r1, #-2147483648	; 0x80000000
   21348:	mov	r0, #0
   2134c:	str	r0, [sp, #28]
   21350:	ldr	r3, [sp, #28]
   21354:	bl	24490 <__assert_fail@plt+0x12f48>
   21358:	ldr	r2, [fp, #-12]
   2135c:	subs	r0, r0, r2
   21360:	sbcs	r1, r1, r2, asr #31
   21364:	blt	213a8 <__assert_fail@plt+0xfe60>
   21368:	b	213c0 <__assert_fail@plt+0xfe78>
   2136c:	ldr	r0, [fp, #-12]
   21370:	asr	r3, r0, #31
   21374:	mvn	r1, #0
   21378:	mvn	r2, #-2147483648	; 0x80000000
   2137c:	str	r0, [sp, #24]
   21380:	mov	r0, r1
   21384:	mov	r1, r2
   21388:	ldr	r2, [sp, #24]
   2138c:	bl	24490 <__assert_fail@plt+0x12f48>
   21390:	ldr	r2, [fp, #-8]
   21394:	ldr	r2, [r2]
   21398:	subs	r0, r0, r2
   2139c:	sbcs	r1, r1, #0
   213a0:	bge	213c0 <__assert_fail@plt+0xfe78>
   213a4:	b	213a8 <__assert_fail@plt+0xfe60>
   213a8:	ldr	r0, [fp, #-8]
   213ac:	ldr	r0, [r0]
   213b0:	ldr	r1, [fp, #-12]
   213b4:	mul	r0, r0, r1
   213b8:	str	r0, [fp, #-16]
   213bc:	b	21644 <__assert_fail@plt+0x100fc>
   213c0:	ldr	r0, [fp, #-8]
   213c4:	ldr	r0, [r0]
   213c8:	ldr	r1, [fp, #-12]
   213cc:	mul	r0, r0, r1
   213d0:	str	r0, [fp, #-16]
   213d4:	b	21678 <__assert_fail@plt+0x10130>
   213d8:	ldr	r0, [fp, #-12]
   213dc:	cmp	r0, #0
   213e0:	bge	2154c <__assert_fail@plt+0x10004>
   213e4:	ldr	r0, [fp, #-8]
   213e8:	ldr	r0, [r0]
   213ec:	cmp	r0, #0
   213f0:	bcs	214c4 <__assert_fail@plt+0xff7c>
   213f4:	b	21438 <__assert_fail@plt+0xfef0>
   213f8:	ldr	r0, [fp, #-8]
   213fc:	ldr	r0, [r0]
   21400:	ldr	r1, [fp, #-12]
   21404:	asr	r3, r1, #31
   21408:	mvn	r2, #0
   2140c:	str	r0, [sp, #20]
   21410:	mov	r0, r2
   21414:	str	r1, [sp, #16]
   21418:	mov	r1, r2
   2141c:	ldr	r2, [sp, #16]
   21420:	bl	24564 <__assert_fail@plt+0x1301c>
   21424:	ldr	r2, [sp, #20]
   21428:	subs	r0, r2, r0
   2142c:	rscs	r1, r1, #0
   21430:	bcc	21614 <__assert_fail@plt+0x100cc>
   21434:	b	2162c <__assert_fail@plt+0x100e4>
   21438:	b	2143c <__assert_fail@plt+0xfef4>
   2143c:	ldr	r0, [pc, #596]	; 21698 <__assert_fail@plt+0x10150>
   21440:	ldr	r1, [fp, #-12]
   21444:	cmp	r1, r0
   21448:	blt	21460 <__assert_fail@plt+0xff18>
   2144c:	b	21474 <__assert_fail@plt+0xff2c>
   21450:	ldr	r0, [fp, #-12]
   21454:	movw	r1, #0
   21458:	cmp	r1, r0
   2145c:	bge	21474 <__assert_fail@plt+0xff2c>
   21460:	mov	r0, #1
   21464:	mvn	r1, #0
   21468:	str	r1, [sp, #12]
   2146c:	str	r0, [sp, #8]
   21470:	b	214a0 <__assert_fail@plt+0xff58>
   21474:	ldr	r0, [fp, #-12]
   21478:	rsb	r0, r0, #0
   2147c:	asr	r3, r0, #31
   21480:	mvn	r1, #0
   21484:	str	r0, [sp, #4]
   21488:	mov	r0, r1
   2148c:	ldr	r2, [sp, #4]
   21490:	bl	24564 <__assert_fail@plt+0x1301c>
   21494:	str	r0, [sp, #12]
   21498:	str	r1, [sp, #8]
   2149c:	b	214a0 <__assert_fail@plt+0xff58>
   214a0:	ldr	r0, [sp, #8]
   214a4:	ldr	r1, [sp, #12]
   214a8:	ldr	r2, [fp, #-8]
   214ac:	ldr	r2, [r2]
   214b0:	mvn	r2, r2
   214b4:	subs	r1, r2, r1
   214b8:	rscs	r0, r0, #0
   214bc:	bcs	21614 <__assert_fail@plt+0x100cc>
   214c0:	b	2162c <__assert_fail@plt+0x100e4>
   214c4:	b	214c8 <__assert_fail@plt+0xff80>
   214c8:	b	2152c <__assert_fail@plt+0xffe4>
   214cc:	b	2152c <__assert_fail@plt+0xffe4>
   214d0:	ldr	r0, [fp, #-12]
   214d4:	cmn	r0, #1
   214d8:	bne	2152c <__assert_fail@plt+0xffe4>
   214dc:	b	214fc <__assert_fail@plt+0xffb4>
   214e0:	ldr	r0, [fp, #-8]
   214e4:	ldr	r0, [r0]
   214e8:	add	r0, r0, #0
   214ec:	movw	r1, #0
   214f0:	cmp	r1, r0
   214f4:	bcc	21614 <__assert_fail@plt+0x100cc>
   214f8:	b	2162c <__assert_fail@plt+0x100e4>
   214fc:	ldr	r0, [fp, #-8]
   21500:	ldr	r0, [r0]
   21504:	movw	r1, #0
   21508:	cmp	r1, r0
   2150c:	bcs	2162c <__assert_fail@plt+0x100e4>
   21510:	ldr	r0, [fp, #-8]
   21514:	ldr	r0, [r0]
   21518:	sub	r0, r0, #1
   2151c:	mvn	r1, #0
   21520:	cmp	r1, r0
   21524:	bcc	21614 <__assert_fail@plt+0x100cc>
   21528:	b	2162c <__assert_fail@plt+0x100e4>
   2152c:	ldr	r0, [fp, #-12]
   21530:	movw	r1, #0
   21534:	sdiv	r0, r1, r0
   21538:	ldr	r1, [fp, #-8]
   2153c:	ldr	r1, [r1]
   21540:	cmp	r0, r1
   21544:	bcc	21614 <__assert_fail@plt+0x100cc>
   21548:	b	2162c <__assert_fail@plt+0x100e4>
   2154c:	ldr	r0, [fp, #-12]
   21550:	cmp	r0, #0
   21554:	bne	2155c <__assert_fail@plt+0x10014>
   21558:	b	2162c <__assert_fail@plt+0x100e4>
   2155c:	ldr	r0, [fp, #-8]
   21560:	ldr	r0, [r0]
   21564:	cmp	r0, #0
   21568:	bcs	215e0 <__assert_fail@plt+0x10098>
   2156c:	b	21574 <__assert_fail@plt+0x1002c>
   21570:	b	21578 <__assert_fail@plt+0x10030>
   21574:	b	215c0 <__assert_fail@plt+0x10078>
   21578:	ldr	r0, [fp, #-8]
   2157c:	ldr	r0, [r0]
   21580:	cmn	r0, #1
   21584:	bne	215c0 <__assert_fail@plt+0x10078>
   21588:	b	2158c <__assert_fail@plt+0x10044>
   2158c:	ldr	r0, [fp, #-12]
   21590:	add	r0, r0, #0
   21594:	movw	r1, #0
   21598:	cmp	r1, r0
   2159c:	blt	21614 <__assert_fail@plt+0x100cc>
   215a0:	b	2162c <__assert_fail@plt+0x100e4>
   215a4:	ldr	r0, [fp, #-12]
   215a8:	sub	r0, r0, #1
   215ac:	mvn	r1, #0
   215b0:	cmp	r1, r0
   215b4:	blt	21614 <__assert_fail@plt+0x100cc>
   215b8:	b	2162c <__assert_fail@plt+0x100e4>
   215bc:			; <UNDEFINED> instruction: 0xffff8000
   215c0:	ldr	r0, [fp, #-8]
   215c4:	ldr	r0, [r0]
   215c8:	movw	r1, #0
   215cc:	udiv	r0, r1, r0
   215d0:	ldr	r1, [fp, #-12]
   215d4:	cmp	r0, r1
   215d8:	bcc	21614 <__assert_fail@plt+0x100cc>
   215dc:	b	2162c <__assert_fail@plt+0x100e4>
   215e0:	ldr	r0, [fp, #-12]
   215e4:	asr	r3, r0, #31
   215e8:	mvn	r1, #0
   215ec:	str	r0, [sp]
   215f0:	mov	r0, r1
   215f4:	ldr	r2, [sp]
   215f8:	bl	24564 <__assert_fail@plt+0x1301c>
   215fc:	ldr	r2, [fp, #-8]
   21600:	ldr	r2, [r2]
   21604:	subs	r0, r0, r2
   21608:	sbcs	r1, r1, #0
   2160c:	bcs	2162c <__assert_fail@plt+0x100e4>
   21610:	b	21614 <__assert_fail@plt+0x100cc>
   21614:	ldr	r0, [fp, #-8]
   21618:	ldr	r0, [r0]
   2161c:	ldr	r1, [fp, #-12]
   21620:	mul	r0, r0, r1
   21624:	str	r0, [fp, #-16]
   21628:	b	21644 <__assert_fail@plt+0x100fc>
   2162c:	ldr	r0, [fp, #-8]
   21630:	ldr	r0, [r0]
   21634:	ldr	r1, [fp, #-12]
   21638:	mul	r0, r0, r1
   2163c:	str	r0, [fp, #-16]
   21640:	b	21678 <__assert_fail@plt+0x10130>
   21644:	ldr	r0, [fp, #-8]
   21648:	ldr	r0, [r0]
   2164c:	cmp	r0, #0
   21650:	movw	r0, #0
   21654:	movcc	r0, #1
   21658:	tst	r0, #1
   2165c:	movw	r0, #0
   21660:	mvneq	r0, #0
   21664:	ldr	r1, [fp, #-8]
   21668:	str	r0, [r1]
   2166c:	movw	r0, #1
   21670:	str	r0, [fp, #-4]
   21674:	b	2168c <__assert_fail@plt+0x10144>
   21678:	ldr	r0, [fp, #-16]
   2167c:	ldr	r1, [fp, #-8]
   21680:	str	r0, [r1]
   21684:	movw	r0, #0
   21688:	str	r0, [fp, #-4]
   2168c:	ldr	r0, [fp, #-4]
   21690:	mov	sp, fp
   21694:	pop	{fp, pc}
   21698:	andhi	r0, r0, r1
   2169c:	svcvc	0x00ffffff
   216a0:	andhi	r0, r0, r0
   216a4:			; <UNDEFINED> instruction: 0xffff8000
   216a8:	push	{fp, lr}
   216ac:	mov	fp, sp
   216b0:	sub	sp, sp, #16
   216b4:	str	r0, [fp, #-4]
   216b8:	str	r1, [sp, #8]
   216bc:	str	r2, [sp, #4]
   216c0:	movw	r0, #0
   216c4:	str	r0, [sp]
   216c8:	ldr	r0, [sp, #4]
   216cc:	mvn	r1, #0
   216d0:	add	r1, r0, r1
   216d4:	str	r1, [sp, #4]
   216d8:	cmp	r0, #0
   216dc:	beq	216fc <__assert_fail@plt+0x101b4>
   216e0:	ldr	r0, [fp, #-4]
   216e4:	ldr	r1, [sp, #8]
   216e8:	bl	200b4 <__assert_fail@plt+0xeb6c>
   216ec:	ldr	r1, [sp]
   216f0:	orr	r0, r1, r0
   216f4:	str	r0, [sp]
   216f8:	b	216c8 <__assert_fail@plt+0x10180>
   216fc:	ldr	r0, [sp]
   21700:	mov	sp, fp
   21704:	pop	{fp, pc}
   21708:	push	{fp, lr}
   2170c:	mov	fp, sp
   21710:	sub	sp, sp, #16
   21714:	str	r0, [sp, #8]
   21718:	str	r1, [sp, #4]
   2171c:	ldr	r0, [sp, #8]
   21720:	cmp	r0, #0
   21724:	beq	21734 <__assert_fail@plt+0x101ec>
   21728:	ldr	r0, [sp, #4]
   2172c:	cmp	r0, #0
   21730:	bne	21740 <__assert_fail@plt+0x101f8>
   21734:	movw	r0, #1
   21738:	str	r0, [sp, #4]
   2173c:	str	r0, [sp, #8]
   21740:	ldr	r0, [sp, #4]
   21744:	cmp	r0, #0
   21748:	beq	2177c <__assert_fail@plt+0x10234>
   2174c:	ldr	r0, [pc, #76]	; 217a0 <__assert_fail@plt+0x10258>
   21750:	ldr	r1, [sp, #4]
   21754:	udiv	r0, r0, r1
   21758:	ldr	r1, [sp, #8]
   2175c:	cmp	r0, r1
   21760:	bcs	2177c <__assert_fail@plt+0x10234>
   21764:	bl	11404 <__errno_location@plt>
   21768:	movw	r1, #12
   2176c:	str	r1, [r0]
   21770:	movw	r0, #0
   21774:	str	r0, [fp, #-4]
   21778:	b	21794 <__assert_fail@plt+0x1024c>
   2177c:	ldr	r0, [sp, #8]
   21780:	ldr	r1, [sp, #4]
   21784:	bl	1120c <calloc@plt>
   21788:	str	r0, [sp]
   2178c:	ldr	r0, [sp]
   21790:	str	r0, [fp, #-4]
   21794:	ldr	r0, [fp, #-4]
   21798:	mov	sp, fp
   2179c:	pop	{fp, pc}
   217a0:	svcvc	0x00ffffff
   217a4:	push	{fp, lr}
   217a8:	mov	fp, sp
   217ac:	sub	sp, sp, #16
   217b0:	str	r0, [sp, #8]
   217b4:	ldr	r0, [sp, #8]
   217b8:	cmp	r0, #0
   217bc:	bne	217c8 <__assert_fail@plt+0x10280>
   217c0:	movw	r0, #1
   217c4:	str	r0, [sp, #8]
   217c8:	ldr	r0, [pc, #64]	; 21810 <__assert_fail@plt+0x102c8>
   217cc:	ldr	r1, [sp, #8]
   217d0:	cmp	r0, r1
   217d4:	bcs	217f0 <__assert_fail@plt+0x102a8>
   217d8:	bl	11404 <__errno_location@plt>
   217dc:	movw	r1, #12
   217e0:	str	r1, [r0]
   217e4:	movw	r0, #0
   217e8:	str	r0, [fp, #-4]
   217ec:	b	21804 <__assert_fail@plt+0x102bc>
   217f0:	ldr	r0, [sp, #8]
   217f4:	bl	1135c <malloc@plt>
   217f8:	str	r0, [sp, #4]
   217fc:	ldr	r0, [sp, #4]
   21800:	str	r0, [fp, #-4]
   21804:	ldr	r0, [fp, #-4]
   21808:	mov	sp, fp
   2180c:	pop	{fp, pc}
   21810:	svcvc	0x00ffffff
   21814:	push	{fp, lr}
   21818:	mov	fp, sp
   2181c:	sub	sp, sp, #16
   21820:	str	r0, [sp, #8]
   21824:	str	r1, [sp, #4]
   21828:	ldr	r0, [sp, #8]
   2182c:	movw	r1, #0
   21830:	cmp	r0, r1
   21834:	bne	21848 <__assert_fail@plt+0x10300>
   21838:	ldr	r0, [sp, #4]
   2183c:	bl	217a4 <__assert_fail@plt+0x1025c>
   21840:	str	r0, [fp, #-4]
   21844:	b	218a8 <__assert_fail@plt+0x10360>
   21848:	ldr	r0, [sp, #4]
   2184c:	cmp	r0, #0
   21850:	bne	21868 <__assert_fail@plt+0x10320>
   21854:	ldr	r0, [sp, #8]
   21858:	bl	13948 <__assert_fail@plt+0x2400>
   2185c:	movw	r0, #0
   21860:	str	r0, [fp, #-4]
   21864:	b	218a8 <__assert_fail@plt+0x10360>
   21868:	ldr	r0, [pc, #68]	; 218b4 <__assert_fail@plt+0x1036c>
   2186c:	ldr	r1, [sp, #4]
   21870:	cmp	r0, r1
   21874:	bcs	21890 <__assert_fail@plt+0x10348>
   21878:	bl	11404 <__errno_location@plt>
   2187c:	movw	r1, #12
   21880:	str	r1, [r0]
   21884:	movw	r0, #0
   21888:	str	r0, [fp, #-4]
   2188c:	b	218a8 <__assert_fail@plt+0x10360>
   21890:	ldr	r0, [sp, #8]
   21894:	ldr	r1, [sp, #4]
   21898:	bl	112cc <realloc@plt>
   2189c:	str	r0, [sp]
   218a0:	ldr	r0, [sp]
   218a4:	str	r0, [fp, #-4]
   218a8:	ldr	r0, [fp, #-4]
   218ac:	mov	sp, fp
   218b0:	pop	{fp, pc}
   218b4:	svcvc	0x00ffffff
   218b8:	push	{r4, sl, fp, lr}
   218bc:	add	fp, sp, #8
   218c0:	sub	sp, sp, #16
   218c4:	str	r0, [sp, #8]
   218c8:	str	r1, [sp, #12]
   218cc:	str	r2, [sp, #4]
   218d0:	ldr	r0, [sp, #8]
   218d4:	ldr	r1, [sp, #12]
   218d8:	ldr	r2, [sp, #4]
   218dc:	rsb	r3, r2, #32
   218e0:	lsr	ip, r0, r3
   218e4:	orr	ip, ip, r1, lsl r2
   218e8:	sub	lr, r2, #32
   218ec:	cmp	lr, #0
   218f0:	lslpl	ip, r0, lr
   218f4:	lsl	r4, r0, r2
   218f8:	cmp	lr, #0
   218fc:	movwpl	r4, #0
   21900:	rsb	r2, r2, #64	; 0x40
   21904:	lsr	lr, r1, r2
   21908:	cmp	r3, #0
   2190c:	movwpl	lr, #0
   21910:	lsr	r0, r0, r2
   21914:	rsb	r2, r2, #32
   21918:	orr	r0, r0, r1, lsl r2
   2191c:	cmp	r3, #0
   21920:	lsrpl	r0, r1, r3
   21924:	orr	r0, r4, r0
   21928:	orr	r1, ip, lr
   2192c:	sub	sp, fp, #8
   21930:	pop	{r4, sl, fp, pc}
   21934:	push	{r4, sl, fp, lr}
   21938:	add	fp, sp, #8
   2193c:	sub	sp, sp, #16
   21940:	str	r0, [sp, #8]
   21944:	str	r1, [sp, #12]
   21948:	str	r2, [sp, #4]
   2194c:	ldr	r0, [sp, #8]
   21950:	ldr	r1, [sp, #12]
   21954:	ldr	r2, [sp, #4]
   21958:	lsr	r3, r1, r2
   2195c:	sub	ip, r2, #32
   21960:	cmp	ip, #0
   21964:	movwpl	r3, #0
   21968:	lsr	lr, r0, r2
   2196c:	rsb	r4, r2, #32
   21970:	orr	lr, lr, r1, lsl r4
   21974:	cmp	ip, #0
   21978:	lsrpl	lr, r1, ip
   2197c:	rsb	r2, r2, #64	; 0x40
   21980:	rsb	ip, r2, #32
   21984:	lsr	ip, r0, ip
   21988:	orr	r1, ip, r1, lsl r2
   2198c:	cmp	r4, #0
   21990:	lslpl	r1, r0, r4
   21994:	lsl	r0, r0, r2
   21998:	cmp	r4, #0
   2199c:	movwpl	r0, #0
   219a0:	orr	r0, lr, r0
   219a4:	orr	r1, r3, r1
   219a8:	sub	sp, fp, #8
   219ac:	pop	{r4, sl, fp, pc}
   219b0:	sub	sp, sp, #8
   219b4:	str	r0, [sp, #4]
   219b8:	str	r1, [sp]
   219bc:	ldr	r0, [sp, #4]
   219c0:	ldr	r1, [sp]
   219c4:	lsl	r0, r0, r1
   219c8:	ldr	r1, [sp, #4]
   219cc:	ldr	r2, [sp]
   219d0:	movw	r3, #32
   219d4:	sub	r2, r3, r2
   219d8:	lsr	r1, r1, r2
   219dc:	orr	r0, r0, r1
   219e0:	add	sp, sp, #8
   219e4:	bx	lr
   219e8:	sub	sp, sp, #8
   219ec:	str	r0, [sp, #4]
   219f0:	str	r1, [sp]
   219f4:	ldr	r0, [sp, #4]
   219f8:	ldr	r1, [sp]
   219fc:	lsr	r0, r0, r1
   21a00:	ldr	r1, [sp, #4]
   21a04:	ldr	r2, [sp]
   21a08:	movw	r3, #32
   21a0c:	sub	r2, r3, r2
   21a10:	lsl	r1, r1, r2
   21a14:	orr	r0, r0, r1
   21a18:	add	sp, sp, #8
   21a1c:	bx	lr
   21a20:	sub	sp, sp, #8
   21a24:	str	r0, [sp, #4]
   21a28:	str	r1, [sp]
   21a2c:	ldr	r0, [sp, #4]
   21a30:	ldr	r1, [sp]
   21a34:	lsl	r0, r0, r1
   21a38:	ldr	r1, [sp, #4]
   21a3c:	ldr	r2, [sp]
   21a40:	movw	r3, #32
   21a44:	sub	r2, r3, r2
   21a48:	lsr	r1, r1, r2
   21a4c:	orr	r0, r0, r1
   21a50:	add	sp, sp, #8
   21a54:	bx	lr
   21a58:	sub	sp, sp, #8
   21a5c:	str	r0, [sp, #4]
   21a60:	str	r1, [sp]
   21a64:	ldr	r0, [sp, #4]
   21a68:	ldr	r1, [sp]
   21a6c:	lsr	r0, r0, r1
   21a70:	ldr	r1, [sp, #4]
   21a74:	ldr	r2, [sp]
   21a78:	movw	r3, #32
   21a7c:	sub	r2, r3, r2
   21a80:	lsl	r1, r1, r2
   21a84:	orr	r0, r0, r1
   21a88:	add	sp, sp, #8
   21a8c:	bx	lr
   21a90:	sub	sp, sp, #8
   21a94:	strh	r0, [sp, #6]
   21a98:	str	r1, [sp]
   21a9c:	ldrh	r0, [sp, #6]
   21aa0:	ldr	r1, [sp]
   21aa4:	lsl	r0, r0, r1
   21aa8:	ldrh	r1, [sp, #6]
   21aac:	ldr	r2, [sp]
   21ab0:	movw	r3, #16
   21ab4:	sub	r2, r3, r2
   21ab8:	lsr	r1, r1, r2
   21abc:	orr	r0, r0, r1
   21ac0:	movw	r1, #65535	; 0xffff
   21ac4:	and	r0, r0, r1
   21ac8:	uxth	r0, r0
   21acc:	add	sp, sp, #8
   21ad0:	bx	lr
   21ad4:	sub	sp, sp, #8
   21ad8:	strh	r0, [sp, #6]
   21adc:	str	r1, [sp]
   21ae0:	ldrh	r0, [sp, #6]
   21ae4:	ldr	r1, [sp]
   21ae8:	lsr	r0, r0, r1
   21aec:	ldrh	r1, [sp, #6]
   21af0:	ldr	r2, [sp]
   21af4:	movw	r3, #16
   21af8:	sub	r2, r3, r2
   21afc:	lsl	r1, r1, r2
   21b00:	orr	r0, r0, r1
   21b04:	movw	r1, #65535	; 0xffff
   21b08:	and	r0, r0, r1
   21b0c:	uxth	r0, r0
   21b10:	add	sp, sp, #8
   21b14:	bx	lr
   21b18:	sub	sp, sp, #8
   21b1c:	strb	r0, [sp, #7]
   21b20:	str	r1, [sp]
   21b24:	ldrb	r0, [sp, #7]
   21b28:	ldr	r1, [sp]
   21b2c:	lsl	r0, r0, r1
   21b30:	ldrb	r1, [sp, #7]
   21b34:	ldr	r2, [sp]
   21b38:	movw	r3, #8
   21b3c:	sub	r2, r3, r2
   21b40:	lsr	r1, r1, r2
   21b44:	orr	r0, r0, r1
   21b48:	and	r0, r0, #255	; 0xff
   21b4c:	and	r0, r0, #255	; 0xff
   21b50:	add	sp, sp, #8
   21b54:	bx	lr
   21b58:	sub	sp, sp, #8
   21b5c:	strb	r0, [sp, #7]
   21b60:	str	r1, [sp]
   21b64:	ldrb	r0, [sp, #7]
   21b68:	ldr	r1, [sp]
   21b6c:	lsr	r0, r0, r1
   21b70:	ldrb	r1, [sp, #7]
   21b74:	ldr	r2, [sp]
   21b78:	movw	r3, #8
   21b7c:	sub	r2, r3, r2
   21b80:	lsl	r1, r1, r2
   21b84:	orr	r0, r0, r1
   21b88:	and	r0, r0, #255	; 0xff
   21b8c:	and	r0, r0, #255	; 0xff
   21b90:	add	sp, sp, #8
   21b94:	bx	lr
   21b98:	push	{fp, lr}
   21b9c:	mov	fp, sp
   21ba0:	sub	sp, sp, #24
   21ba4:	str	r0, [fp, #-8]
   21ba8:	str	r1, [sp, #12]
   21bac:	ldr	r0, [fp, #-8]
   21bb0:	str	r0, [sp, #8]
   21bb4:	ldr	r0, [sp, #12]
   21bb8:	str	r0, [sp, #4]
   21bbc:	ldr	r0, [sp, #8]
   21bc0:	ldr	r1, [sp, #4]
   21bc4:	cmp	r0, r1
   21bc8:	bne	21bd8 <__assert_fail@plt+0x10690>
   21bcc:	movw	r0, #0
   21bd0:	str	r0, [fp, #-4]
   21bd4:	b	21c44 <__assert_fail@plt+0x106fc>
   21bd8:	b	21bdc <__assert_fail@plt+0x10694>
   21bdc:	ldr	r0, [sp, #8]
   21be0:	ldrb	r0, [r0]
   21be4:	bl	24210 <__assert_fail@plt+0x12cc8>
   21be8:	strb	r0, [sp, #3]
   21bec:	ldr	r0, [sp, #4]
   21bf0:	ldrb	r0, [r0]
   21bf4:	bl	24210 <__assert_fail@plt+0x12cc8>
   21bf8:	strb	r0, [sp, #2]
   21bfc:	ldrb	r0, [sp, #3]
   21c00:	cmp	r0, #0
   21c04:	bne	21c0c <__assert_fail@plt+0x106c4>
   21c08:	b	21c34 <__assert_fail@plt+0x106ec>
   21c0c:	ldr	r0, [sp, #8]
   21c10:	add	r0, r0, #1
   21c14:	str	r0, [sp, #8]
   21c18:	ldr	r0, [sp, #4]
   21c1c:	add	r0, r0, #1
   21c20:	str	r0, [sp, #4]
   21c24:	ldrb	r0, [sp, #3]
   21c28:	ldrb	r1, [sp, #2]
   21c2c:	cmp	r0, r1
   21c30:	beq	21bdc <__assert_fail@plt+0x10694>
   21c34:	ldrb	r0, [sp, #3]
   21c38:	ldrb	r1, [sp, #2]
   21c3c:	sub	r0, r0, r1
   21c40:	str	r0, [fp, #-4]
   21c44:	ldr	r0, [fp, #-4]
   21c48:	mov	sp, fp
   21c4c:	pop	{fp, pc}
   21c50:	push	{fp, lr}
   21c54:	mov	fp, sp
   21c58:	sub	sp, sp, #16
   21c5c:	str	r0, [sp, #8]
   21c60:	ldr	r0, [sp, #8]
   21c64:	bl	11320 <__fpending@plt>
   21c68:	cmp	r0, #0
   21c6c:	movw	r0, #0
   21c70:	movne	r0, #1
   21c74:	and	r0, r0, #1
   21c78:	strb	r0, [sp, #7]
   21c7c:	ldr	r0, [sp, #8]
   21c80:	bl	1132c <ferror_unlocked@plt>
   21c84:	cmp	r0, #0
   21c88:	movw	r0, #0
   21c8c:	movne	r0, #1
   21c90:	and	r0, r0, #1
   21c94:	strb	r0, [sp, #6]
   21c98:	ldr	r0, [sp, #8]
   21c9c:	bl	21f10 <__assert_fail@plt+0x109c8>
   21ca0:	cmp	r0, #0
   21ca4:	movw	r0, #0
   21ca8:	movne	r0, #1
   21cac:	and	r0, r0, #1
   21cb0:	strb	r0, [sp, #5]
   21cb4:	ldrb	r0, [sp, #6]
   21cb8:	tst	r0, #1
   21cbc:	bne	21ce8 <__assert_fail@plt+0x107a0>
   21cc0:	ldrb	r0, [sp, #5]
   21cc4:	tst	r0, #1
   21cc8:	beq	21d0c <__assert_fail@plt+0x107c4>
   21ccc:	ldrb	r0, [sp, #7]
   21cd0:	tst	r0, #1
   21cd4:	bne	21ce8 <__assert_fail@plt+0x107a0>
   21cd8:	bl	11404 <__errno_location@plt>
   21cdc:	ldr	r0, [r0]
   21ce0:	cmp	r0, #9
   21ce4:	beq	21d0c <__assert_fail@plt+0x107c4>
   21ce8:	ldrb	r0, [sp, #5]
   21cec:	tst	r0, #1
   21cf0:	bne	21d00 <__assert_fail@plt+0x107b8>
   21cf4:	bl	11404 <__errno_location@plt>
   21cf8:	movw	r1, #0
   21cfc:	str	r1, [r0]
   21d00:	mvn	r0, #0
   21d04:	str	r0, [fp, #-4]
   21d08:	b	21d14 <__assert_fail@plt+0x107cc>
   21d0c:	movw	r0, #0
   21d10:	str	r0, [fp, #-4]
   21d14:	ldr	r0, [fp, #-4]
   21d18:	mov	sp, fp
   21d1c:	pop	{fp, pc}
   21d20:	sub	sp, sp, #4
   21d24:	ldr	r1, [pc, #32]	; 21d4c <__assert_fail@plt+0x10804>
   21d28:	str	r0, [sp]
   21d2c:	ldr	r0, [sp]
   21d30:	mov	r2, #0
   21d34:	str	r2, [r0, #20]
   21d38:	str	r2, [r0, #16]
   21d3c:	ldr	r0, [sp]
   21d40:	str	r1, [r0, #24]
   21d44:	add	sp, sp, #4
   21d48:	bx	lr
   21d4c:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   21d50:	push	{fp, lr}
   21d54:	mov	fp, sp
   21d58:	sub	sp, sp, #16
   21d5c:	ldr	r2, [pc, #364]	; 21ed0 <__assert_fail@plt+0x10988>
   21d60:	str	r0, [sp, #8]
   21d64:	str	r1, [sp, #4]
   21d68:	ldr	r0, [sp, #8]
   21d6c:	ldr	r0, [r0, #24]
   21d70:	cmp	r0, r2
   21d74:	bne	21d7c <__assert_fail@plt+0x10834>
   21d78:	b	21d9c <__assert_fail@plt+0x10854>
   21d7c:	movw	r0, #24125	; 0x5e3d
   21d80:	movt	r0, #2
   21d84:	movw	r1, #24149	; 0x5e55
   21d88:	movt	r1, #2
   21d8c:	movw	r2, #60	; 0x3c
   21d90:	movw	r3, #24167	; 0x5e67
   21d94:	movt	r3, #2
   21d98:	bl	11548 <__assert_fail@plt>
   21d9c:	ldr	r0, [sp, #8]
   21da0:	ldr	r1, [r0, #16]
   21da4:	ldr	r0, [r0, #20]
   21da8:	orr	r0, r1, r0
   21dac:	cmp	r0, #0
   21db0:	beq	21e28 <__assert_fail@plt+0x108e0>
   21db4:	b	21db8 <__assert_fail@plt+0x10870>
   21db8:	ldr	r0, [sp, #4]
   21dbc:	ldr	r1, [r0, #96]	; 0x60
   21dc0:	ldr	r0, [r0, #100]	; 0x64
   21dc4:	ldr	r2, [sp, #8]
   21dc8:	ldr	r3, [r2]
   21dcc:	ldr	r2, [r2, #4]
   21dd0:	eor	r0, r0, r2
   21dd4:	eor	r1, r1, r3
   21dd8:	orr	r0, r1, r0
   21ddc:	cmp	r0, #0
   21de0:	bne	21e28 <__assert_fail@plt+0x108e0>
   21de4:	b	21de8 <__assert_fail@plt+0x108a0>
   21de8:	ldr	r0, [sp, #4]
   21dec:	ldr	r1, [r0]
   21df0:	ldr	r0, [r0, #4]
   21df4:	ldr	r2, [sp, #8]
   21df8:	ldr	r3, [r2, #8]
   21dfc:	ldr	r2, [r2, #12]
   21e00:	eor	r0, r0, r2
   21e04:	eor	r1, r1, r3
   21e08:	orr	r0, r1, r0
   21e0c:	cmp	r0, #0
   21e10:	bne	21e28 <__assert_fail@plt+0x108e0>
   21e14:	b	21e18 <__assert_fail@plt+0x108d0>
   21e18:	movw	r0, #1
   21e1c:	and	r0, r0, #1
   21e20:	strb	r0, [fp, #-1]
   21e24:	b	21ec0 <__assert_fail@plt+0x10978>
   21e28:	ldr	r0, [sp, #8]
   21e2c:	ldr	r1, [r0, #16]
   21e30:	ldr	r2, [r0, #20]
   21e34:	adds	r1, r1, #1
   21e38:	adc	r2, r2, #0
   21e3c:	str	r1, [r0, #16]
   21e40:	str	r2, [r0, #20]
   21e44:	mov	r0, r1
   21e48:	mov	r1, r2
   21e4c:	bl	21ed4 <__assert_fail@plt+0x1098c>
   21e50:	tst	r0, #1
   21e54:	beq	21eb4 <__assert_fail@plt+0x1096c>
   21e58:	ldr	r0, [sp, #8]
   21e5c:	ldr	r1, [r0, #16]
   21e60:	ldr	r0, [r0, #20]
   21e64:	orr	r0, r1, r0
   21e68:	cmp	r0, #0
   21e6c:	bne	21e84 <__assert_fail@plt+0x1093c>
   21e70:	b	21e74 <__assert_fail@plt+0x1092c>
   21e74:	movw	r0, #1
   21e78:	and	r0, r0, #1
   21e7c:	strb	r0, [fp, #-1]
   21e80:	b	21ec0 <__assert_fail@plt+0x10978>
   21e84:	ldr	r0, [sp, #4]
   21e88:	ldr	r1, [r0]
   21e8c:	ldr	r0, [r0, #4]
   21e90:	ldr	r2, [sp, #8]
   21e94:	str	r0, [r2, #12]
   21e98:	str	r1, [r2, #8]
   21e9c:	ldr	r0, [sp, #4]
   21ea0:	ldr	r1, [r0, #96]	; 0x60
   21ea4:	ldr	r0, [r0, #100]	; 0x64
   21ea8:	ldr	r2, [sp, #8]
   21eac:	str	r0, [r2, #4]
   21eb0:	str	r1, [r2]
   21eb4:	movw	r0, #0
   21eb8:	and	r0, r0, #1
   21ebc:	strb	r0, [fp, #-1]
   21ec0:	ldrb	r0, [fp, #-1]
   21ec4:	and	r0, r0, #1
   21ec8:	mov	sp, fp
   21ecc:	pop	{fp, pc}
   21ed0:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   21ed4:	sub	sp, sp, #8
   21ed8:	str	r0, [sp]
   21edc:	str	r1, [sp, #4]
   21ee0:	ldr	r0, [sp]
   21ee4:	ldr	r1, [sp, #4]
   21ee8:	subs	r2, r0, #1
   21eec:	sbc	r3, r1, #0
   21ef0:	and	r0, r0, r2
   21ef4:	and	r1, r1, r3
   21ef8:	orr	r0, r0, r1
   21efc:	clz	r0, r0
   21f00:	lsr	r0, r0, #5
   21f04:	and	r0, r0, #1
   21f08:	add	sp, sp, #8
   21f0c:	bx	lr
   21f10:	push	{fp, lr}
   21f14:	mov	fp, sp
   21f18:	sub	sp, sp, #32
   21f1c:	str	r0, [fp, #-8]
   21f20:	movw	r0, #0
   21f24:	str	r0, [fp, #-12]
   21f28:	str	r0, [sp, #12]
   21f2c:	ldr	r0, [fp, #-8]
   21f30:	bl	11428 <fileno@plt>
   21f34:	str	r0, [sp, #16]
   21f38:	ldr	r0, [sp, #16]
   21f3c:	cmp	r0, #0
   21f40:	bge	21f54 <__assert_fail@plt+0x10a0c>
   21f44:	ldr	r0, [fp, #-8]
   21f48:	bl	11434 <fclose@plt>
   21f4c:	str	r0, [fp, #-4]
   21f50:	b	21ff0 <__assert_fail@plt+0x10aa8>
   21f54:	ldr	r0, [fp, #-8]
   21f58:	bl	11374 <__freading@plt>
   21f5c:	cmp	r0, #0
   21f60:	beq	21f98 <__assert_fail@plt+0x10a50>
   21f64:	ldr	r0, [fp, #-8]
   21f68:	bl	11428 <fileno@plt>
   21f6c:	mov	r1, sp
   21f70:	mov	r2, #1
   21f74:	str	r2, [r1]
   21f78:	mov	r1, #0
   21f7c:	mov	r2, r1
   21f80:	mov	r3, r1
   21f84:	bl	11308 <lseek64@plt>
   21f88:	and	r0, r0, r1
   21f8c:	cmn	r0, #1
   21f90:	beq	21fb4 <__assert_fail@plt+0x10a6c>
   21f94:	b	21f98 <__assert_fail@plt+0x10a50>
   21f98:	ldr	r0, [fp, #-8]
   21f9c:	bl	2245c <__assert_fail@plt+0x10f14>
   21fa0:	cmp	r0, #0
   21fa4:	beq	21fb4 <__assert_fail@plt+0x10a6c>
   21fa8:	bl	11404 <__errno_location@plt>
   21fac:	ldr	r0, [r0]
   21fb0:	str	r0, [fp, #-12]
   21fb4:	ldr	r0, [fp, #-8]
   21fb8:	bl	11434 <fclose@plt>
   21fbc:	str	r0, [sp, #12]
   21fc0:	ldr	r0, [fp, #-12]
   21fc4:	cmp	r0, #0
   21fc8:	beq	21fe8 <__assert_fail@plt+0x10aa0>
   21fcc:	ldr	r0, [fp, #-12]
   21fd0:	str	r0, [sp, #8]
   21fd4:	bl	11404 <__errno_location@plt>
   21fd8:	ldr	r1, [sp, #8]
   21fdc:	str	r1, [r0]
   21fe0:	mvn	r0, #0
   21fe4:	str	r0, [sp, #12]
   21fe8:	ldr	r0, [sp, #12]
   21fec:	str	r0, [fp, #-4]
   21ff0:	ldr	r0, [fp, #-4]
   21ff4:	mov	sp, fp
   21ff8:	pop	{fp, pc}
   21ffc:	sub	sp, sp, #8
   22000:	push	{fp, lr}
   22004:	mov	fp, sp
   22008:	sub	sp, sp, #48	; 0x30
   2200c:	str	r3, [fp, #12]
   22010:	str	r2, [fp, #8]
   22014:	str	r0, [fp, #-4]
   22018:	str	r1, [fp, #-8]
   2201c:	mvn	r0, #0
   22020:	str	r0, [fp, #-16]
   22024:	add	r0, fp, #8
   22028:	str	r0, [fp, #-12]
   2202c:	ldr	r0, [fp, #-8]
   22030:	cmp	r0, #0
   22034:	str	r0, [sp, #12]
   22038:	beq	22054 <__assert_fail@plt+0x10b0c>
   2203c:	b	22040 <__assert_fail@plt+0x10af8>
   22040:	movw	r0, #1030	; 0x406
   22044:	ldr	r1, [sp, #12]
   22048:	cmp	r1, r0
   2204c:	beq	2207c <__assert_fail@plt+0x10b34>
   22050:	b	220a4 <__assert_fail@plt+0x10b5c>
   22054:	ldr	r0, [fp, #-12]
   22058:	add	r1, r0, #4
   2205c:	str	r1, [fp, #-12]
   22060:	ldr	r0, [r0]
   22064:	str	r0, [fp, #-20]	; 0xffffffec
   22068:	ldr	r0, [fp, #-4]
   2206c:	ldr	r1, [fp, #-20]	; 0xffffffec
   22070:	bl	22250 <__assert_fail@plt+0x10d08>
   22074:	str	r0, [fp, #-16]
   22078:	b	22230 <__assert_fail@plt+0x10ce8>
   2207c:	ldr	r0, [fp, #-12]
   22080:	add	r1, r0, #4
   22084:	str	r1, [fp, #-12]
   22088:	ldr	r0, [r0]
   2208c:	str	r0, [sp, #24]
   22090:	ldr	r0, [fp, #-4]
   22094:	ldr	r1, [sp, #24]
   22098:	bl	22284 <__assert_fail@plt+0x10d3c>
   2209c:	str	r0, [fp, #-16]
   220a0:	b	22230 <__assert_fail@plt+0x10ce8>
   220a4:	ldr	r0, [fp, #-8]
   220a8:	cmp	r0, #0
   220ac:	str	r0, [sp, #8]
   220b0:	beq	221d8 <__assert_fail@plt+0x10c90>
   220b4:	b	220b8 <__assert_fail@plt+0x10b70>
   220b8:	ldr	r0, [sp, #8]
   220bc:	cmp	r0, #1
   220c0:	beq	221c4 <__assert_fail@plt+0x10c7c>
   220c4:	b	220c8 <__assert_fail@plt+0x10b80>
   220c8:	ldr	r0, [sp, #8]
   220cc:	cmp	r0, #2
   220d0:	beq	221d8 <__assert_fail@plt+0x10c90>
   220d4:	b	220d8 <__assert_fail@plt+0x10b90>
   220d8:	ldr	r0, [sp, #8]
   220dc:	cmp	r0, #3
   220e0:	beq	221c4 <__assert_fail@plt+0x10c7c>
   220e4:	b	220e8 <__assert_fail@plt+0x10ba0>
   220e8:	ldr	r0, [sp, #8]
   220ec:	cmp	r0, #4
   220f0:	beq	221d8 <__assert_fail@plt+0x10c90>
   220f4:	b	220f8 <__assert_fail@plt+0x10bb0>
   220f8:	ldr	r0, [sp, #8]
   220fc:	cmp	r0, #8
   22100:	beq	221d8 <__assert_fail@plt+0x10c90>
   22104:	b	22108 <__assert_fail@plt+0x10bc0>
   22108:	ldr	r0, [sp, #8]
   2210c:	cmp	r0, #9
   22110:	beq	221c4 <__assert_fail@plt+0x10c7c>
   22114:	b	22118 <__assert_fail@plt+0x10bd0>
   22118:	ldr	r0, [sp, #8]
   2211c:	cmp	r0, #10
   22120:	beq	221d8 <__assert_fail@plt+0x10c90>
   22124:	b	22128 <__assert_fail@plt+0x10be0>
   22128:	ldr	r0, [sp, #8]
   2212c:	cmp	r0, #11
   22130:	beq	221c4 <__assert_fail@plt+0x10c7c>
   22134:	b	22138 <__assert_fail@plt+0x10bf0>
   22138:	ldr	r0, [sp, #8]
   2213c:	cmp	r0, #1024	; 0x400
   22140:	beq	221d8 <__assert_fail@plt+0x10c90>
   22144:	b	22148 <__assert_fail@plt+0x10c00>
   22148:	movw	r0, #1025	; 0x401
   2214c:	ldr	r1, [sp, #8]
   22150:	cmp	r1, r0
   22154:	beq	221c4 <__assert_fail@plt+0x10c7c>
   22158:	b	2215c <__assert_fail@plt+0x10c14>
   2215c:	movw	r0, #1026	; 0x402
   22160:	ldr	r1, [sp, #8]
   22164:	cmp	r1, r0
   22168:	beq	221d8 <__assert_fail@plt+0x10c90>
   2216c:	b	22170 <__assert_fail@plt+0x10c28>
   22170:	movw	r0, #1030	; 0x406
   22174:	ldr	r1, [sp, #8]
   22178:	sub	r0, r1, r0
   2217c:	cmp	r0, #2
   22180:	bcc	221d8 <__assert_fail@plt+0x10c90>
   22184:	b	22188 <__assert_fail@plt+0x10c40>
   22188:	movw	r0, #1032	; 0x408
   2218c:	ldr	r1, [sp, #8]
   22190:	cmp	r1, r0
   22194:	beq	221c4 <__assert_fail@plt+0x10c7c>
   22198:	b	2219c <__assert_fail@plt+0x10c54>
   2219c:	movw	r0, #1033	; 0x409
   221a0:	ldr	r1, [sp, #8]
   221a4:	cmp	r1, r0
   221a8:	beq	221d8 <__assert_fail@plt+0x10c90>
   221ac:	b	221b0 <__assert_fail@plt+0x10c68>
   221b0:	movw	r0, #1034	; 0x40a
   221b4:	ldr	r1, [sp, #8]
   221b8:	cmp	r1, r0
   221bc:	bne	22204 <__assert_fail@plt+0x10cbc>
   221c0:	b	221c4 <__assert_fail@plt+0x10c7c>
   221c4:	ldr	r0, [fp, #-4]
   221c8:	ldr	r1, [fp, #-8]
   221cc:	bl	1144c <fcntl64@plt>
   221d0:	str	r0, [fp, #-16]
   221d4:	b	2222c <__assert_fail@plt+0x10ce4>
   221d8:	ldr	r0, [fp, #-12]
   221dc:	add	r1, r0, #4
   221e0:	str	r1, [fp, #-12]
   221e4:	ldr	r0, [r0]
   221e8:	str	r0, [sp, #20]
   221ec:	ldr	r0, [fp, #-4]
   221f0:	ldr	r1, [fp, #-8]
   221f4:	ldr	r2, [sp, #20]
   221f8:	bl	1144c <fcntl64@plt>
   221fc:	str	r0, [fp, #-16]
   22200:	b	2222c <__assert_fail@plt+0x10ce4>
   22204:	ldr	r0, [fp, #-12]
   22208:	add	r1, r0, #4
   2220c:	str	r1, [fp, #-12]
   22210:	ldr	r0, [r0]
   22214:	str	r0, [sp, #16]
   22218:	ldr	r0, [fp, #-4]
   2221c:	ldr	r1, [fp, #-8]
   22220:	ldr	r2, [sp, #16]
   22224:	bl	1144c <fcntl64@plt>
   22228:	str	r0, [fp, #-16]
   2222c:	b	22230 <__assert_fail@plt+0x10ce8>
   22230:	sub	r0, fp, #12
   22234:	ldr	r1, [fp, #-16]
   22238:	str	r0, [sp, #4]
   2223c:	mov	r0, r1
   22240:	mov	sp, fp
   22244:	pop	{fp, lr}
   22248:	add	sp, sp, #8
   2224c:	bx	lr
   22250:	push	{fp, lr}
   22254:	mov	fp, sp
   22258:	sub	sp, sp, #16
   2225c:	str	r0, [fp, #-4]
   22260:	str	r1, [sp, #8]
   22264:	ldr	r0, [fp, #-4]
   22268:	ldr	r2, [sp, #8]
   2226c:	movw	r1, #0
   22270:	bl	1144c <fcntl64@plt>
   22274:	str	r0, [sp, #4]
   22278:	ldr	r0, [sp, #4]
   2227c:	mov	sp, fp
   22280:	pop	{fp, pc}
   22284:	push	{fp, lr}
   22288:	mov	fp, sp
   2228c:	sub	sp, sp, #32
   22290:	str	r0, [fp, #-4]
   22294:	str	r1, [fp, #-8]
   22298:	movw	r0, #25340	; 0x62fc
   2229c:	movt	r0, #3
   222a0:	ldr	r0, [r0]
   222a4:	movw	r1, #0
   222a8:	cmp	r1, r0
   222ac:	bgt	2232c <__assert_fail@plt+0x10de4>
   222b0:	ldr	r0, [fp, #-4]
   222b4:	ldr	r2, [fp, #-8]
   222b8:	movw	r1, #1030	; 0x406
   222bc:	bl	1144c <fcntl64@plt>
   222c0:	str	r0, [fp, #-12]
   222c4:	ldr	r0, [fp, #-12]
   222c8:	movw	r1, #0
   222cc:	cmp	r1, r0
   222d0:	ble	222e4 <__assert_fail@plt+0x10d9c>
   222d4:	bl	11404 <__errno_location@plt>
   222d8:	ldr	r0, [r0]
   222dc:	cmp	r0, #22
   222e0:	beq	222f8 <__assert_fail@plt+0x10db0>
   222e4:	movw	r0, #25340	; 0x62fc
   222e8:	movt	r0, #3
   222ec:	movw	r1, #1
   222f0:	str	r1, [r0]
   222f4:	b	22328 <__assert_fail@plt+0x10de0>
   222f8:	ldr	r0, [fp, #-4]
   222fc:	ldr	r1, [fp, #-8]
   22300:	bl	22250 <__assert_fail@plt+0x10d08>
   22304:	str	r0, [fp, #-12]
   22308:	ldr	r0, [fp, #-12]
   2230c:	cmp	r0, #0
   22310:	blt	22324 <__assert_fail@plt+0x10ddc>
   22314:	movw	r0, #25340	; 0x62fc
   22318:	movt	r0, #3
   2231c:	mvn	r1, #0
   22320:	str	r1, [r0]
   22324:	b	22328 <__assert_fail@plt+0x10de0>
   22328:	b	2233c <__assert_fail@plt+0x10df4>
   2232c:	ldr	r0, [fp, #-4]
   22330:	ldr	r1, [fp, #-8]
   22334:	bl	22250 <__assert_fail@plt+0x10d08>
   22338:	str	r0, [fp, #-12]
   2233c:	ldr	r0, [fp, #-12]
   22340:	movw	r1, #0
   22344:	cmp	r1, r0
   22348:	bgt	223d0 <__assert_fail@plt+0x10e88>
   2234c:	movw	r0, #25340	; 0x62fc
   22350:	movt	r0, #3
   22354:	ldr	r0, [r0]
   22358:	cmn	r0, #1
   2235c:	bne	223d0 <__assert_fail@plt+0x10e88>
   22360:	ldr	r0, [fp, #-12]
   22364:	movw	r1, #1
   22368:	bl	1144c <fcntl64@plt>
   2236c:	str	r0, [sp, #16]
   22370:	ldr	r0, [sp, #16]
   22374:	cmp	r0, #0
   22378:	blt	22398 <__assert_fail@plt+0x10e50>
   2237c:	ldr	r0, [fp, #-12]
   22380:	ldr	r1, [sp, #16]
   22384:	orr	r2, r1, #1
   22388:	movw	r1, #2
   2238c:	bl	1144c <fcntl64@plt>
   22390:	cmn	r0, #1
   22394:	bne	223cc <__assert_fail@plt+0x10e84>
   22398:	bl	11404 <__errno_location@plt>
   2239c:	ldr	r0, [r0]
   223a0:	str	r0, [sp, #12]
   223a4:	ldr	r0, [fp, #-12]
   223a8:	bl	1150c <close@plt>
   223ac:	ldr	r1, [sp, #12]
   223b0:	str	r0, [sp, #8]
   223b4:	str	r1, [sp, #4]
   223b8:	bl	11404 <__errno_location@plt>
   223bc:	ldr	r1, [sp, #4]
   223c0:	str	r1, [r0]
   223c4:	mvn	r0, #0
   223c8:	str	r0, [fp, #-12]
   223cc:	b	223d0 <__assert_fail@plt+0x10e88>
   223d0:	ldr	r0, [fp, #-12]
   223d4:	mov	sp, fp
   223d8:	pop	{fp, pc}
   223dc:	sub	sp, sp, #8
   223e0:	push	{fp, lr}
   223e4:	mov	fp, sp
   223e8:	sub	sp, sp, #16
   223ec:	str	r3, [fp, #12]
   223f0:	str	r2, [fp, #8]
   223f4:	str	r0, [fp, #-4]
   223f8:	str	r1, [sp, #8]
   223fc:	movw	r0, #0
   22400:	str	r0, [sp, #4]
   22404:	ldr	r0, [sp, #8]
   22408:	and	r0, r0, #64	; 0x40
   2240c:	cmp	r0, #0
   22410:	beq	22438 <__assert_fail@plt+0x10ef0>
   22414:	mov	r0, sp
   22418:	mov	r1, r0
   2241c:	add	r2, fp, #8
   22420:	str	r2, [r1]
   22424:	ldr	r1, [sp]
   22428:	add	r2, r1, #4
   2242c:	str	r2, [sp]
   22430:	ldr	r1, [r1]
   22434:	str	r1, [sp, #4]
   22438:	ldr	r0, [fp, #-4]
   2243c:	ldr	r1, [sp, #8]
   22440:	ldr	r2, [sp, #4]
   22444:	bl	11350 <open64@plt>
   22448:	bl	1bc9c <__assert_fail@plt+0xa754>
   2244c:	mov	sp, fp
   22450:	pop	{fp, lr}
   22454:	add	sp, sp, #8
   22458:	bx	lr
   2245c:	push	{fp, lr}
   22460:	mov	fp, sp
   22464:	sub	sp, sp, #8
   22468:	str	r0, [sp]
   2246c:	ldr	r0, [sp]
   22470:	movw	r1, #0
   22474:	cmp	r0, r1
   22478:	beq	2248c <__assert_fail@plt+0x10f44>
   2247c:	ldr	r0, [sp]
   22480:	bl	11374 <__freading@plt>
   22484:	cmp	r0, #0
   22488:	bne	2249c <__assert_fail@plt+0x10f54>
   2248c:	ldr	r0, [sp]
   22490:	bl	1126c <fflush@plt>
   22494:	str	r0, [sp, #4]
   22498:	b	224b0 <__assert_fail@plt+0x10f68>
   2249c:	ldr	r0, [sp]
   224a0:	bl	224bc <__assert_fail@plt+0x10f74>
   224a4:	ldr	r0, [sp]
   224a8:	bl	1126c <fflush@plt>
   224ac:	str	r0, [sp, #4]
   224b0:	ldr	r0, [sp, #4]
   224b4:	mov	sp, fp
   224b8:	pop	{fp, pc}
   224bc:	push	{fp, lr}
   224c0:	mov	fp, sp
   224c4:	sub	sp, sp, #8
   224c8:	str	r0, [sp, #4]
   224cc:	ldr	r0, [sp, #4]
   224d0:	ldr	r0, [r0]
   224d4:	and	r0, r0, #256	; 0x100
   224d8:	cmp	r0, #0
   224dc:	beq	22500 <__assert_fail@plt+0x10fb8>
   224e0:	ldr	r0, [sp, #4]
   224e4:	mov	r1, sp
   224e8:	mov	r2, #1
   224ec:	str	r2, [r1]
   224f0:	mov	r1, #0
   224f4:	mov	r2, r1
   224f8:	mov	r3, r1
   224fc:	bl	22508 <__assert_fail@plt+0x10fc0>
   22500:	mov	sp, fp
   22504:	pop	{fp, pc}
   22508:	push	{fp, lr}
   2250c:	mov	fp, sp
   22510:	sub	sp, sp, #32
   22514:	ldr	r1, [fp, #8]
   22518:	str	r0, [fp, #-8]
   2251c:	str	r3, [sp, #20]
   22520:	str	r2, [sp, #16]
   22524:	ldr	r0, [fp, #-8]
   22528:	ldr	r0, [r0, #8]
   2252c:	ldr	r2, [fp, #-8]
   22530:	ldr	r2, [r2, #4]
   22534:	cmp	r0, r2
   22538:	bne	225e4 <__assert_fail@plt+0x1109c>
   2253c:	ldr	r0, [fp, #-8]
   22540:	ldr	r0, [r0, #20]
   22544:	ldr	r1, [fp, #-8]
   22548:	ldr	r1, [r1, #16]
   2254c:	cmp	r0, r1
   22550:	bne	225e4 <__assert_fail@plt+0x1109c>
   22554:	ldr	r0, [fp, #-8]
   22558:	ldr	r0, [r0, #36]	; 0x24
   2255c:	movw	r1, #0
   22560:	cmp	r0, r1
   22564:	bne	225e4 <__assert_fail@plt+0x1109c>
   22568:	ldr	r0, [fp, #-8]
   2256c:	bl	11428 <fileno@plt>
   22570:	ldr	r2, [sp, #16]
   22574:	ldr	r3, [sp, #20]
   22578:	ldr	r1, [fp, #8]
   2257c:	mov	ip, sp
   22580:	str	r1, [ip]
   22584:	bl	11308 <lseek64@plt>
   22588:	str	r1, [sp, #12]
   2258c:	str	r0, [sp, #8]
   22590:	ldr	r0, [sp, #8]
   22594:	ldr	r1, [sp, #12]
   22598:	and	r0, r0, r1
   2259c:	cmn	r0, #1
   225a0:	bne	225b4 <__assert_fail@plt+0x1106c>
   225a4:	b	225a8 <__assert_fail@plt+0x11060>
   225a8:	mvn	r0, #0
   225ac:	str	r0, [fp, #-4]
   225b0:	b	22604 <__assert_fail@plt+0x110bc>
   225b4:	ldr	r0, [fp, #-8]
   225b8:	ldr	r1, [r0]
   225bc:	bic	r1, r1, #16
   225c0:	str	r1, [r0]
   225c4:	ldr	r0, [sp, #8]
   225c8:	ldr	r1, [sp, #12]
   225cc:	ldr	r2, [fp, #-8]
   225d0:	str	r1, [r2, #84]	; 0x54
   225d4:	str	r0, [r2, #80]	; 0x50
   225d8:	movw	r0, #0
   225dc:	str	r0, [fp, #-4]
   225e0:	b	22604 <__assert_fail@plt+0x110bc>
   225e4:	ldr	r0, [fp, #-8]
   225e8:	ldr	r2, [sp, #16]
   225ec:	ldr	r3, [sp, #20]
   225f0:	ldr	r1, [fp, #8]
   225f4:	mov	ip, sp
   225f8:	str	r1, [ip]
   225fc:	bl	11440 <fseeko64@plt>
   22600:	str	r0, [fp, #-4]
   22604:	ldr	r0, [fp, #-4]
   22608:	mov	sp, fp
   2260c:	pop	{fp, pc}
   22610:	push	{fp, lr}
   22614:	mov	fp, sp
   22618:	bl	11404 <__errno_location@plt>
   2261c:	movw	r1, #12
   22620:	str	r1, [r0]
   22624:	movw	r0, #0
   22628:	pop	{fp, pc}
   2262c:	push	{fp, lr}
   22630:	mov	fp, sp
   22634:	sub	sp, sp, #8
   22638:	str	r0, [sp, #4]
   2263c:	ldr	r0, [sp, #4]
   22640:	cmn	r0, #1
   22644:	bhi	22658 <__assert_fail@plt+0x11110>
   22648:	ldr	r0, [sp, #4]
   2264c:	bl	217a4 <__assert_fail@plt+0x1025c>
   22650:	str	r0, [sp]
   22654:	b	22660 <__assert_fail@plt+0x11118>
   22658:	bl	22610 <__assert_fail@plt+0x110c8>
   2265c:	str	r0, [sp]
   22660:	ldr	r0, [sp]
   22664:	mov	sp, fp
   22668:	pop	{fp, pc}
   2266c:	push	{fp, lr}
   22670:	mov	fp, sp
   22674:	sub	sp, sp, #16
   22678:	str	r0, [fp, #-4]
   2267c:	str	r1, [sp, #8]
   22680:	ldr	r0, [sp, #8]
   22684:	cmn	r0, #1
   22688:	bhi	226c0 <__assert_fail@plt+0x11178>
   2268c:	ldr	r0, [fp, #-4]
   22690:	ldr	r1, [sp, #8]
   22694:	ldr	r2, [sp, #8]
   22698:	cmp	r2, #0
   2269c:	movw	r2, #0
   226a0:	movne	r2, #1
   226a4:	mvn	r3, #0
   226a8:	eor	r2, r2, r3
   226ac:	and	r2, r2, #1
   226b0:	orr	r1, r1, r2
   226b4:	bl	21814 <__assert_fail@plt+0x102cc>
   226b8:	str	r0, [sp, #4]
   226bc:	b	226c8 <__assert_fail@plt+0x11180>
   226c0:	bl	22610 <__assert_fail@plt+0x110c8>
   226c4:	str	r0, [sp, #4]
   226c8:	ldr	r0, [sp, #4]
   226cc:	mov	sp, fp
   226d0:	pop	{fp, pc}
   226d4:	push	{fp, lr}
   226d8:	mov	fp, sp
   226dc:	sub	sp, sp, #16
   226e0:	str	r0, [sp, #8]
   226e4:	str	r1, [sp, #4]
   226e8:	ldr	r0, [sp, #8]
   226ec:	mvn	r1, #0
   226f0:	cmp	r1, r0
   226f4:	bcs	22718 <__assert_fail@plt+0x111d0>
   226f8:	ldr	r0, [sp, #4]
   226fc:	cmp	r0, #0
   22700:	beq	22710 <__assert_fail@plt+0x111c8>
   22704:	bl	22610 <__assert_fail@plt+0x110c8>
   22708:	str	r0, [fp, #-4]
   2270c:	b	22758 <__assert_fail@plt+0x11210>
   22710:	movw	r0, #0
   22714:	str	r0, [sp, #8]
   22718:	ldr	r0, [sp, #4]
   2271c:	mvn	r1, #0
   22720:	cmp	r1, r0
   22724:	bcs	22748 <__assert_fail@plt+0x11200>
   22728:	ldr	r0, [sp, #8]
   2272c:	cmp	r0, #0
   22730:	beq	22740 <__assert_fail@plt+0x111f8>
   22734:	bl	22610 <__assert_fail@plt+0x110c8>
   22738:	str	r0, [fp, #-4]
   2273c:	b	22758 <__assert_fail@plt+0x11210>
   22740:	movw	r0, #0
   22744:	str	r0, [sp, #4]
   22748:	ldr	r0, [sp, #8]
   2274c:	ldr	r1, [sp, #4]
   22750:	bl	21708 <__assert_fail@plt+0x101c0>
   22754:	str	r0, [fp, #-4]
   22758:	ldr	r0, [fp, #-4]
   2275c:	mov	sp, fp
   22760:	pop	{fp, pc}
   22764:	push	{fp, lr}
   22768:	mov	fp, sp
   2276c:	sub	sp, sp, #16
   22770:	str	r0, [fp, #-4]
   22774:	str	r1, [sp, #8]
   22778:	str	r2, [sp, #4]
   2277c:	ldr	r0, [sp, #8]
   22780:	cmp	r0, #0
   22784:	beq	22794 <__assert_fail@plt+0x1124c>
   22788:	ldr	r0, [sp, #4]
   2278c:	cmp	r0, #0
   22790:	bne	227a0 <__assert_fail@plt+0x11258>
   22794:	movw	r0, #1
   22798:	str	r0, [sp, #4]
   2279c:	str	r0, [sp, #8]
   227a0:	ldr	r0, [sp, #8]
   227a4:	cmn	r0, #1
   227a8:	bhi	227d0 <__assert_fail@plt+0x11288>
   227ac:	ldr	r0, [sp, #4]
   227b0:	cmn	r0, #1
   227b4:	bhi	227d0 <__assert_fail@plt+0x11288>
   227b8:	ldr	r0, [fp, #-4]
   227bc:	ldr	r1, [sp, #8]
   227c0:	ldr	r2, [sp, #4]
   227c4:	bl	228f0 <__assert_fail@plt+0x113a8>
   227c8:	str	r0, [sp]
   227cc:	b	227d8 <__assert_fail@plt+0x11290>
   227d0:	bl	22610 <__assert_fail@plt+0x110c8>
   227d4:	str	r0, [sp]
   227d8:	ldr	r0, [sp]
   227dc:	mov	sp, fp
   227e0:	pop	{fp, pc}
   227e4:	push	{fp, lr}
   227e8:	mov	fp, sp
   227ec:	sub	sp, sp, #8
   227f0:	movw	r0, #14
   227f4:	bl	1147c <nl_langinfo@plt>
   227f8:	str	r0, [sp, #4]
   227fc:	ldr	r0, [sp, #4]
   22800:	movw	r1, #0
   22804:	cmp	r0, r1
   22808:	bne	22818 <__assert_fail@plt+0x112d0>
   2280c:	movw	r0, #20316	; 0x4f5c
   22810:	movt	r0, #2
   22814:	str	r0, [sp, #4]
   22818:	ldr	r0, [sp, #4]
   2281c:	ldrb	r0, [r0]
   22820:	cmp	r0, #0
   22824:	bne	22834 <__assert_fail@plt+0x112ec>
   22828:	movw	r0, #24234	; 0x5eaa
   2282c:	movt	r0, #2
   22830:	str	r0, [sp, #4]
   22834:	ldr	r0, [sp, #4]
   22838:	mov	sp, fp
   2283c:	pop	{fp, pc}
   22840:	push	{fp, lr}
   22844:	mov	fp, sp
   22848:	sub	sp, sp, #32
   2284c:	str	r0, [fp, #-8]
   22850:	str	r1, [fp, #-12]
   22854:	str	r2, [sp, #16]
   22858:	str	r3, [sp, #12]
   2285c:	ldr	r0, [fp, #-8]
   22860:	movw	r1, #0
   22864:	cmp	r0, r1
   22868:	bne	22874 <__assert_fail@plt+0x1132c>
   2286c:	add	r0, sp, #4
   22870:	str	r0, [fp, #-8]
   22874:	ldr	r0, [fp, #-8]
   22878:	ldr	r1, [fp, #-12]
   2287c:	ldr	r2, [sp, #16]
   22880:	ldr	r3, [sp, #12]
   22884:	bl	11338 <mbrtowc@plt>
   22888:	str	r0, [sp, #8]
   2288c:	ldr	r0, [sp, #8]
   22890:	mvn	r1, #1
   22894:	cmp	r1, r0
   22898:	bhi	228dc <__assert_fail@plt+0x11394>
   2289c:	ldr	r0, [sp, #16]
   228a0:	cmp	r0, #0
   228a4:	beq	228dc <__assert_fail@plt+0x11394>
   228a8:	movw	r0, #0
   228ac:	bl	24298 <__assert_fail@plt+0x12d50>
   228b0:	tst	r0, #1
   228b4:	bne	228dc <__assert_fail@plt+0x11394>
   228b8:	ldr	r0, [fp, #-12]
   228bc:	ldrb	r0, [r0]
   228c0:	strb	r0, [sp, #3]
   228c4:	ldrb	r0, [sp, #3]
   228c8:	ldr	r1, [fp, #-8]
   228cc:	str	r0, [r1]
   228d0:	movw	r0, #1
   228d4:	str	r0, [fp, #-4]
   228d8:	b	228e4 <__assert_fail@plt+0x1139c>
   228dc:	ldr	r0, [sp, #8]
   228e0:	str	r0, [fp, #-4]
   228e4:	ldr	r0, [fp, #-4]
   228e8:	mov	sp, fp
   228ec:	pop	{fp, pc}
   228f0:	push	{fp, lr}
   228f4:	mov	fp, sp
   228f8:	sub	sp, sp, #96	; 0x60
   228fc:	str	r0, [fp, #-8]
   22900:	str	r1, [fp, #-12]
   22904:	str	r2, [fp, #-16]
   22908:	b	22cc0 <__assert_fail@plt+0x11778>
   2290c:	b	22ae0 <__assert_fail@plt+0x11598>
   22910:	ldr	r0, [fp, #-16]
   22914:	cmp	r0, #0
   22918:	bcs	22a1c <__assert_fail@plt+0x114d4>
   2291c:	ldr	r0, [fp, #-12]
   22920:	cmp	r0, #0
   22924:	bcs	229ac <__assert_fail@plt+0x11464>
   22928:	b	22948 <__assert_fail@plt+0x11400>
   2292c:	ldr	r0, [fp, #-12]
   22930:	ldr	r1, [fp, #-16]
   22934:	movw	r2, #127	; 0x7f
   22938:	udiv	r1, r2, r1
   2293c:	cmp	r0, r1
   22940:	bcc	22ab0 <__assert_fail@plt+0x11568>
   22944:	b	22ac8 <__assert_fail@plt+0x11580>
   22948:	b	2295c <__assert_fail@plt+0x11414>
   2294c:	ldr	r0, [fp, #-16]
   22950:	cmp	r0, #1
   22954:	bcc	2296c <__assert_fail@plt+0x11424>
   22958:	b	22978 <__assert_fail@plt+0x11430>
   2295c:	ldr	r0, [fp, #-16]
   22960:	movw	r1, #0
   22964:	cmp	r1, r0
   22968:	bcs	22978 <__assert_fail@plt+0x11430>
   2296c:	movw	r0, #0
   22970:	str	r0, [fp, #-24]	; 0xffffffe8
   22974:	b	22990 <__assert_fail@plt+0x11448>
   22978:	ldr	r0, [fp, #-16]
   2297c:	movw	r1, #0
   22980:	sub	r0, r1, r0
   22984:	movw	r1, #127	; 0x7f
   22988:	udiv	r0, r1, r0
   2298c:	str	r0, [fp, #-24]	; 0xffffffe8
   22990:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22994:	ldr	r1, [fp, #-12]
   22998:	mvn	r2, #0
   2299c:	sub	r1, r2, r1
   229a0:	cmp	r0, r1
   229a4:	bls	22ab0 <__assert_fail@plt+0x11568>
   229a8:	b	22ac8 <__assert_fail@plt+0x11580>
   229ac:	ldr	r0, [fp, #-16]
   229b0:	cmn	r0, #1
   229b4:	bne	22a00 <__assert_fail@plt+0x114b8>
   229b8:	b	229d8 <__assert_fail@plt+0x11490>
   229bc:	ldr	r0, [fp, #-12]
   229c0:	mvn	r1, #127	; 0x7f
   229c4:	add	r0, r0, r1
   229c8:	movw	r1, #0
   229cc:	cmp	r1, r0
   229d0:	bcc	22ab0 <__assert_fail@plt+0x11568>
   229d4:	b	22ac8 <__assert_fail@plt+0x11580>
   229d8:	ldr	r0, [fp, #-12]
   229dc:	movw	r1, #0
   229e0:	cmp	r1, r0
   229e4:	bcs	22ac8 <__assert_fail@plt+0x11580>
   229e8:	ldr	r0, [fp, #-12]
   229ec:	sub	r0, r0, #1
   229f0:	movw	r1, #127	; 0x7f
   229f4:	cmp	r1, r0
   229f8:	bcc	22ab0 <__assert_fail@plt+0x11568>
   229fc:	b	22ac8 <__assert_fail@plt+0x11580>
   22a00:	ldr	r0, [fp, #-16]
   22a04:	mvn	r1, #127	; 0x7f
   22a08:	udiv	r0, r1, r0
   22a0c:	ldr	r1, [fp, #-12]
   22a10:	cmp	r0, r1
   22a14:	bcc	22ab0 <__assert_fail@plt+0x11568>
   22a18:	b	22ac8 <__assert_fail@plt+0x11580>
   22a1c:	ldr	r0, [fp, #-16]
   22a20:	cmp	r0, #0
   22a24:	bne	22a2c <__assert_fail@plt+0x114e4>
   22a28:	b	22ac8 <__assert_fail@plt+0x11580>
   22a2c:	ldr	r0, [fp, #-12]
   22a30:	cmp	r0, #0
   22a34:	bcs	22a98 <__assert_fail@plt+0x11550>
   22a38:	ldr	r0, [fp, #-12]
   22a3c:	cmn	r0, #1
   22a40:	bne	22a7c <__assert_fail@plt+0x11534>
   22a44:	b	22a64 <__assert_fail@plt+0x1151c>
   22a48:	ldr	r0, [fp, #-16]
   22a4c:	mvn	r1, #127	; 0x7f
   22a50:	add	r0, r0, r1
   22a54:	movw	r1, #0
   22a58:	cmp	r1, r0
   22a5c:	bcc	22ab0 <__assert_fail@plt+0x11568>
   22a60:	b	22ac8 <__assert_fail@plt+0x11580>
   22a64:	ldr	r0, [fp, #-16]
   22a68:	sub	r0, r0, #1
   22a6c:	movw	r1, #127	; 0x7f
   22a70:	cmp	r1, r0
   22a74:	bcc	22ab0 <__assert_fail@plt+0x11568>
   22a78:	b	22ac8 <__assert_fail@plt+0x11580>
   22a7c:	ldr	r0, [fp, #-12]
   22a80:	mvn	r1, #127	; 0x7f
   22a84:	udiv	r0, r1, r0
   22a88:	ldr	r1, [fp, #-16]
   22a8c:	cmp	r0, r1
   22a90:	bcc	22ab0 <__assert_fail@plt+0x11568>
   22a94:	b	22ac8 <__assert_fail@plt+0x11580>
   22a98:	ldr	r0, [fp, #-16]
   22a9c:	movw	r1, #127	; 0x7f
   22aa0:	udiv	r0, r1, r0
   22aa4:	ldr	r1, [fp, #-12]
   22aa8:	cmp	r0, r1
   22aac:	bcs	22ac8 <__assert_fail@plt+0x11580>
   22ab0:	ldr	r0, [fp, #-12]
   22ab4:	ldr	r1, [fp, #-16]
   22ab8:	mul	r0, r0, r1
   22abc:	sxtb	r0, r0
   22ac0:	str	r0, [fp, #-20]	; 0xffffffec
   22ac4:	b	23bf0 <__assert_fail@plt+0x126a8>
   22ac8:	ldr	r0, [fp, #-12]
   22acc:	ldr	r1, [fp, #-16]
   22ad0:	mul	r0, r0, r1
   22ad4:	sxtb	r0, r0
   22ad8:	str	r0, [fp, #-20]	; 0xffffffec
   22adc:	b	23c08 <__assert_fail@plt+0x126c0>
   22ae0:	ldr	r0, [fp, #-16]
   22ae4:	cmp	r0, #0
   22ae8:	bcs	22bf4 <__assert_fail@plt+0x116ac>
   22aec:	ldr	r0, [fp, #-12]
   22af0:	cmp	r0, #0
   22af4:	bcs	22b7c <__assert_fail@plt+0x11634>
   22af8:	b	22b18 <__assert_fail@plt+0x115d0>
   22afc:	ldr	r0, [fp, #-12]
   22b00:	ldr	r1, [fp, #-16]
   22b04:	movw	r2, #255	; 0xff
   22b08:	udiv	r1, r2, r1
   22b0c:	cmp	r0, r1
   22b10:	bcc	22c90 <__assert_fail@plt+0x11748>
   22b14:	b	22ca8 <__assert_fail@plt+0x11760>
   22b18:	b	22b2c <__assert_fail@plt+0x115e4>
   22b1c:	ldr	r0, [fp, #-16]
   22b20:	cmp	r0, #1
   22b24:	bcc	22b3c <__assert_fail@plt+0x115f4>
   22b28:	b	22b48 <__assert_fail@plt+0x11600>
   22b2c:	ldr	r0, [fp, #-16]
   22b30:	movw	r1, #0
   22b34:	cmp	r1, r0
   22b38:	bcs	22b48 <__assert_fail@plt+0x11600>
   22b3c:	movw	r0, #0
   22b40:	str	r0, [fp, #-28]	; 0xffffffe4
   22b44:	b	22b60 <__assert_fail@plt+0x11618>
   22b48:	ldr	r0, [fp, #-16]
   22b4c:	movw	r1, #0
   22b50:	sub	r0, r1, r0
   22b54:	movw	r1, #255	; 0xff
   22b58:	udiv	r0, r1, r0
   22b5c:	str	r0, [fp, #-28]	; 0xffffffe4
   22b60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22b64:	ldr	r1, [fp, #-12]
   22b68:	mvn	r2, #0
   22b6c:	sub	r1, r2, r1
   22b70:	cmp	r0, r1
   22b74:	bls	22c90 <__assert_fail@plt+0x11748>
   22b78:	b	22ca8 <__assert_fail@plt+0x11760>
   22b7c:	b	22b84 <__assert_fail@plt+0x1163c>
   22b80:	b	22b88 <__assert_fail@plt+0x11640>
   22b84:	b	22bd8 <__assert_fail@plt+0x11690>
   22b88:	ldr	r0, [fp, #-16]
   22b8c:	cmn	r0, #1
   22b90:	bne	22bd8 <__assert_fail@plt+0x11690>
   22b94:	b	22bb0 <__assert_fail@plt+0x11668>
   22b98:	ldr	r0, [fp, #-12]
   22b9c:	add	r0, r0, #0
   22ba0:	movw	r1, #0
   22ba4:	cmp	r1, r0
   22ba8:	bcc	22c90 <__assert_fail@plt+0x11748>
   22bac:	b	22ca8 <__assert_fail@plt+0x11760>
   22bb0:	ldr	r0, [fp, #-12]
   22bb4:	movw	r1, #0
   22bb8:	cmp	r1, r0
   22bbc:	bcs	22ca8 <__assert_fail@plt+0x11760>
   22bc0:	ldr	r0, [fp, #-12]
   22bc4:	sub	r0, r0, #1
   22bc8:	mvn	r1, #0
   22bcc:	cmp	r1, r0
   22bd0:	bcc	22c90 <__assert_fail@plt+0x11748>
   22bd4:	b	22ca8 <__assert_fail@plt+0x11760>
   22bd8:	ldr	r0, [fp, #-16]
   22bdc:	movw	r1, #0
   22be0:	udiv	r0, r1, r0
   22be4:	ldr	r1, [fp, #-12]
   22be8:	cmp	r0, r1
   22bec:	bcc	22c90 <__assert_fail@plt+0x11748>
   22bf0:	b	22ca8 <__assert_fail@plt+0x11760>
   22bf4:	ldr	r0, [fp, #-16]
   22bf8:	cmp	r0, #0
   22bfc:	bne	22c04 <__assert_fail@plt+0x116bc>
   22c00:	b	22ca8 <__assert_fail@plt+0x11760>
   22c04:	ldr	r0, [fp, #-12]
   22c08:	cmp	r0, #0
   22c0c:	bcs	22c78 <__assert_fail@plt+0x11730>
   22c10:	b	22c18 <__assert_fail@plt+0x116d0>
   22c14:	b	22c1c <__assert_fail@plt+0x116d4>
   22c18:	b	22c5c <__assert_fail@plt+0x11714>
   22c1c:	ldr	r0, [fp, #-12]
   22c20:	cmn	r0, #1
   22c24:	bne	22c5c <__assert_fail@plt+0x11714>
   22c28:	b	22c44 <__assert_fail@plt+0x116fc>
   22c2c:	ldr	r0, [fp, #-16]
   22c30:	add	r0, r0, #0
   22c34:	movw	r1, #0
   22c38:	cmp	r1, r0
   22c3c:	bcc	22c90 <__assert_fail@plt+0x11748>
   22c40:	b	22ca8 <__assert_fail@plt+0x11760>
   22c44:	ldr	r0, [fp, #-16]
   22c48:	sub	r0, r0, #1
   22c4c:	mvn	r1, #0
   22c50:	cmp	r1, r0
   22c54:	bcc	22c90 <__assert_fail@plt+0x11748>
   22c58:	b	22ca8 <__assert_fail@plt+0x11760>
   22c5c:	ldr	r0, [fp, #-12]
   22c60:	movw	r1, #0
   22c64:	udiv	r0, r1, r0
   22c68:	ldr	r1, [fp, #-16]
   22c6c:	cmp	r0, r1
   22c70:	bcc	22c90 <__assert_fail@plt+0x11748>
   22c74:	b	22ca8 <__assert_fail@plt+0x11760>
   22c78:	ldr	r0, [fp, #-16]
   22c7c:	movw	r1, #255	; 0xff
   22c80:	udiv	r0, r1, r0
   22c84:	ldr	r1, [fp, #-12]
   22c88:	cmp	r0, r1
   22c8c:	bcs	22ca8 <__assert_fail@plt+0x11760>
   22c90:	ldr	r0, [fp, #-12]
   22c94:	ldr	r1, [fp, #-16]
   22c98:	mul	r0, r0, r1
   22c9c:	and	r0, r0, #255	; 0xff
   22ca0:	str	r0, [fp, #-20]	; 0xffffffec
   22ca4:	b	23bf0 <__assert_fail@plt+0x126a8>
   22ca8:	ldr	r0, [fp, #-12]
   22cac:	ldr	r1, [fp, #-16]
   22cb0:	mul	r0, r0, r1
   22cb4:	and	r0, r0, #255	; 0xff
   22cb8:	str	r0, [fp, #-20]	; 0xffffffec
   22cbc:	b	23c08 <__assert_fail@plt+0x126c0>
   22cc0:	b	23078 <__assert_fail@plt+0x11b30>
   22cc4:	b	22e98 <__assert_fail@plt+0x11950>
   22cc8:	ldr	r0, [fp, #-16]
   22ccc:	cmp	r0, #0
   22cd0:	bcs	22dd4 <__assert_fail@plt+0x1188c>
   22cd4:	ldr	r0, [fp, #-12]
   22cd8:	cmp	r0, #0
   22cdc:	bcs	22d64 <__assert_fail@plt+0x1181c>
   22ce0:	b	22d00 <__assert_fail@plt+0x117b8>
   22ce4:	ldr	r0, [fp, #-12]
   22ce8:	ldr	r1, [fp, #-16]
   22cec:	movw	r2, #32767	; 0x7fff
   22cf0:	udiv	r1, r2, r1
   22cf4:	cmp	r0, r1
   22cf8:	bcc	22e68 <__assert_fail@plt+0x11920>
   22cfc:	b	22e80 <__assert_fail@plt+0x11938>
   22d00:	b	22d14 <__assert_fail@plt+0x117cc>
   22d04:	ldr	r0, [fp, #-16]
   22d08:	cmp	r0, #1
   22d0c:	bcc	22d24 <__assert_fail@plt+0x117dc>
   22d10:	b	22d30 <__assert_fail@plt+0x117e8>
   22d14:	ldr	r0, [fp, #-16]
   22d18:	movw	r1, #0
   22d1c:	cmp	r1, r0
   22d20:	bcs	22d30 <__assert_fail@plt+0x117e8>
   22d24:	movw	r0, #0
   22d28:	str	r0, [fp, #-32]	; 0xffffffe0
   22d2c:	b	22d48 <__assert_fail@plt+0x11800>
   22d30:	ldr	r0, [fp, #-16]
   22d34:	movw	r1, #0
   22d38:	sub	r0, r1, r0
   22d3c:	movw	r1, #32767	; 0x7fff
   22d40:	udiv	r0, r1, r0
   22d44:	str	r0, [fp, #-32]	; 0xffffffe0
   22d48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22d4c:	ldr	r1, [fp, #-12]
   22d50:	mvn	r2, #0
   22d54:	sub	r1, r2, r1
   22d58:	cmp	r0, r1
   22d5c:	bls	22e68 <__assert_fail@plt+0x11920>
   22d60:	b	22e80 <__assert_fail@plt+0x11938>
   22d64:	ldr	r0, [fp, #-16]
   22d68:	cmn	r0, #1
   22d6c:	bne	22db8 <__assert_fail@plt+0x11870>
   22d70:	b	22d90 <__assert_fail@plt+0x11848>
   22d74:	ldr	r0, [pc, #3760]	; 23c2c <__assert_fail@plt+0x126e4>
   22d78:	ldr	r1, [fp, #-12]
   22d7c:	add	r0, r1, r0
   22d80:	movw	r1, #0
   22d84:	cmp	r1, r0
   22d88:	bcc	22e68 <__assert_fail@plt+0x11920>
   22d8c:	b	22e80 <__assert_fail@plt+0x11938>
   22d90:	ldr	r0, [fp, #-12]
   22d94:	movw	r1, #0
   22d98:	cmp	r1, r0
   22d9c:	bcs	22e80 <__assert_fail@plt+0x11938>
   22da0:	ldr	r0, [fp, #-12]
   22da4:	sub	r0, r0, #1
   22da8:	movw	r1, #32767	; 0x7fff
   22dac:	cmp	r1, r0
   22db0:	bcc	22e68 <__assert_fail@plt+0x11920>
   22db4:	b	22e80 <__assert_fail@plt+0x11938>
   22db8:	ldr	r0, [pc, #3692]	; 23c2c <__assert_fail@plt+0x126e4>
   22dbc:	ldr	r1, [fp, #-16]
   22dc0:	udiv	r0, r0, r1
   22dc4:	ldr	r1, [fp, #-12]
   22dc8:	cmp	r0, r1
   22dcc:	bcc	22e68 <__assert_fail@plt+0x11920>
   22dd0:	b	22e80 <__assert_fail@plt+0x11938>
   22dd4:	ldr	r0, [fp, #-16]
   22dd8:	cmp	r0, #0
   22ddc:	bne	22de4 <__assert_fail@plt+0x1189c>
   22de0:	b	22e80 <__assert_fail@plt+0x11938>
   22de4:	ldr	r0, [fp, #-12]
   22de8:	cmp	r0, #0
   22dec:	bcs	22e50 <__assert_fail@plt+0x11908>
   22df0:	ldr	r0, [fp, #-12]
   22df4:	cmn	r0, #1
   22df8:	bne	22e34 <__assert_fail@plt+0x118ec>
   22dfc:	b	22e1c <__assert_fail@plt+0x118d4>
   22e00:	ldr	r0, [pc, #3620]	; 23c2c <__assert_fail@plt+0x126e4>
   22e04:	ldr	r1, [fp, #-16]
   22e08:	add	r0, r1, r0
   22e0c:	movw	r1, #0
   22e10:	cmp	r1, r0
   22e14:	bcc	22e68 <__assert_fail@plt+0x11920>
   22e18:	b	22e80 <__assert_fail@plt+0x11938>
   22e1c:	ldr	r0, [fp, #-16]
   22e20:	sub	r0, r0, #1
   22e24:	movw	r1, #32767	; 0x7fff
   22e28:	cmp	r1, r0
   22e2c:	bcc	22e68 <__assert_fail@plt+0x11920>
   22e30:	b	22e80 <__assert_fail@plt+0x11938>
   22e34:	ldr	r0, [pc, #3568]	; 23c2c <__assert_fail@plt+0x126e4>
   22e38:	ldr	r1, [fp, #-12]
   22e3c:	udiv	r0, r0, r1
   22e40:	ldr	r1, [fp, #-16]
   22e44:	cmp	r0, r1
   22e48:	bcc	22e68 <__assert_fail@plt+0x11920>
   22e4c:	b	22e80 <__assert_fail@plt+0x11938>
   22e50:	ldr	r0, [fp, #-16]
   22e54:	movw	r1, #32767	; 0x7fff
   22e58:	udiv	r0, r1, r0
   22e5c:	ldr	r1, [fp, #-12]
   22e60:	cmp	r0, r1
   22e64:	bcs	22e80 <__assert_fail@plt+0x11938>
   22e68:	ldr	r0, [fp, #-12]
   22e6c:	ldr	r1, [fp, #-16]
   22e70:	mul	r0, r0, r1
   22e74:	sxth	r0, r0
   22e78:	str	r0, [fp, #-20]	; 0xffffffec
   22e7c:	b	23bf0 <__assert_fail@plt+0x126a8>
   22e80:	ldr	r0, [fp, #-12]
   22e84:	ldr	r1, [fp, #-16]
   22e88:	mul	r0, r0, r1
   22e8c:	sxth	r0, r0
   22e90:	str	r0, [fp, #-20]	; 0xffffffec
   22e94:	b	23c08 <__assert_fail@plt+0x126c0>
   22e98:	ldr	r0, [fp, #-16]
   22e9c:	cmp	r0, #0
   22ea0:	bcs	22fac <__assert_fail@plt+0x11a64>
   22ea4:	ldr	r0, [fp, #-12]
   22ea8:	cmp	r0, #0
   22eac:	bcs	22f34 <__assert_fail@plt+0x119ec>
   22eb0:	b	22ed0 <__assert_fail@plt+0x11988>
   22eb4:	ldr	r0, [fp, #-12]
   22eb8:	ldr	r1, [fp, #-16]
   22ebc:	movw	r2, #65535	; 0xffff
   22ec0:	udiv	r1, r2, r1
   22ec4:	cmp	r0, r1
   22ec8:	bcc	23048 <__assert_fail@plt+0x11b00>
   22ecc:	b	23060 <__assert_fail@plt+0x11b18>
   22ed0:	b	22ee4 <__assert_fail@plt+0x1199c>
   22ed4:	ldr	r0, [fp, #-16]
   22ed8:	cmp	r0, #1
   22edc:	bcc	22ef4 <__assert_fail@plt+0x119ac>
   22ee0:	b	22f00 <__assert_fail@plt+0x119b8>
   22ee4:	ldr	r0, [fp, #-16]
   22ee8:	movw	r1, #0
   22eec:	cmp	r1, r0
   22ef0:	bcs	22f00 <__assert_fail@plt+0x119b8>
   22ef4:	movw	r0, #0
   22ef8:	str	r0, [fp, #-36]	; 0xffffffdc
   22efc:	b	22f18 <__assert_fail@plt+0x119d0>
   22f00:	ldr	r0, [fp, #-16]
   22f04:	movw	r1, #0
   22f08:	sub	r0, r1, r0
   22f0c:	movw	r1, #65535	; 0xffff
   22f10:	udiv	r0, r1, r0
   22f14:	str	r0, [fp, #-36]	; 0xffffffdc
   22f18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22f1c:	ldr	r1, [fp, #-12]
   22f20:	mvn	r2, #0
   22f24:	sub	r1, r2, r1
   22f28:	cmp	r0, r1
   22f2c:	bls	23048 <__assert_fail@plt+0x11b00>
   22f30:	b	23060 <__assert_fail@plt+0x11b18>
   22f34:	b	22f3c <__assert_fail@plt+0x119f4>
   22f38:	b	22f40 <__assert_fail@plt+0x119f8>
   22f3c:	b	22f90 <__assert_fail@plt+0x11a48>
   22f40:	ldr	r0, [fp, #-16]
   22f44:	cmn	r0, #1
   22f48:	bne	22f90 <__assert_fail@plt+0x11a48>
   22f4c:	b	22f68 <__assert_fail@plt+0x11a20>
   22f50:	ldr	r0, [fp, #-12]
   22f54:	add	r0, r0, #0
   22f58:	movw	r1, #0
   22f5c:	cmp	r1, r0
   22f60:	bcc	23048 <__assert_fail@plt+0x11b00>
   22f64:	b	23060 <__assert_fail@plt+0x11b18>
   22f68:	ldr	r0, [fp, #-12]
   22f6c:	movw	r1, #0
   22f70:	cmp	r1, r0
   22f74:	bcs	23060 <__assert_fail@plt+0x11b18>
   22f78:	ldr	r0, [fp, #-12]
   22f7c:	sub	r0, r0, #1
   22f80:	mvn	r1, #0
   22f84:	cmp	r1, r0
   22f88:	bcc	23048 <__assert_fail@plt+0x11b00>
   22f8c:	b	23060 <__assert_fail@plt+0x11b18>
   22f90:	ldr	r0, [fp, #-16]
   22f94:	movw	r1, #0
   22f98:	udiv	r0, r1, r0
   22f9c:	ldr	r1, [fp, #-12]
   22fa0:	cmp	r0, r1
   22fa4:	bcc	23048 <__assert_fail@plt+0x11b00>
   22fa8:	b	23060 <__assert_fail@plt+0x11b18>
   22fac:	ldr	r0, [fp, #-16]
   22fb0:	cmp	r0, #0
   22fb4:	bne	22fbc <__assert_fail@plt+0x11a74>
   22fb8:	b	23060 <__assert_fail@plt+0x11b18>
   22fbc:	ldr	r0, [fp, #-12]
   22fc0:	cmp	r0, #0
   22fc4:	bcs	23030 <__assert_fail@plt+0x11ae8>
   22fc8:	b	22fd0 <__assert_fail@plt+0x11a88>
   22fcc:	b	22fd4 <__assert_fail@plt+0x11a8c>
   22fd0:	b	23014 <__assert_fail@plt+0x11acc>
   22fd4:	ldr	r0, [fp, #-12]
   22fd8:	cmn	r0, #1
   22fdc:	bne	23014 <__assert_fail@plt+0x11acc>
   22fe0:	b	22ffc <__assert_fail@plt+0x11ab4>
   22fe4:	ldr	r0, [fp, #-16]
   22fe8:	add	r0, r0, #0
   22fec:	movw	r1, #0
   22ff0:	cmp	r1, r0
   22ff4:	bcc	23048 <__assert_fail@plt+0x11b00>
   22ff8:	b	23060 <__assert_fail@plt+0x11b18>
   22ffc:	ldr	r0, [fp, #-16]
   23000:	sub	r0, r0, #1
   23004:	mvn	r1, #0
   23008:	cmp	r1, r0
   2300c:	bcc	23048 <__assert_fail@plt+0x11b00>
   23010:	b	23060 <__assert_fail@plt+0x11b18>
   23014:	ldr	r0, [fp, #-12]
   23018:	movw	r1, #0
   2301c:	udiv	r0, r1, r0
   23020:	ldr	r1, [fp, #-16]
   23024:	cmp	r0, r1
   23028:	bcc	23048 <__assert_fail@plt+0x11b00>
   2302c:	b	23060 <__assert_fail@plt+0x11b18>
   23030:	ldr	r0, [fp, #-16]
   23034:	movw	r1, #65535	; 0xffff
   23038:	udiv	r0, r1, r0
   2303c:	ldr	r1, [fp, #-12]
   23040:	cmp	r0, r1
   23044:	bcs	23060 <__assert_fail@plt+0x11b18>
   23048:	ldr	r0, [fp, #-12]
   2304c:	ldr	r1, [fp, #-16]
   23050:	mul	r0, r0, r1
   23054:	uxth	r0, r0
   23058:	str	r0, [fp, #-20]	; 0xffffffec
   2305c:	b	23bf0 <__assert_fail@plt+0x126a8>
   23060:	ldr	r0, [fp, #-12]
   23064:	ldr	r1, [fp, #-16]
   23068:	mul	r0, r0, r1
   2306c:	uxth	r0, r0
   23070:	str	r0, [fp, #-20]	; 0xffffffec
   23074:	b	23c08 <__assert_fail@plt+0x126c0>
   23078:	b	2307c <__assert_fail@plt+0x11b34>
   2307c:	b	23240 <__assert_fail@plt+0x11cf8>
   23080:	ldr	r0, [fp, #-16]
   23084:	cmp	r0, #0
   23088:	bcs	23188 <__assert_fail@plt+0x11c40>
   2308c:	ldr	r0, [fp, #-12]
   23090:	cmp	r0, #0
   23094:	bcs	2311c <__assert_fail@plt+0x11bd4>
   23098:	b	230b8 <__assert_fail@plt+0x11b70>
   2309c:	ldr	r0, [pc, #2944]	; 23c24 <__assert_fail@plt+0x126dc>
   230a0:	ldr	r1, [fp, #-12]
   230a4:	ldr	r2, [fp, #-16]
   230a8:	udiv	r0, r0, r2
   230ac:	cmp	r1, r0
   230b0:	bcc	23218 <__assert_fail@plt+0x11cd0>
   230b4:	b	2322c <__assert_fail@plt+0x11ce4>
   230b8:	b	230cc <__assert_fail@plt+0x11b84>
   230bc:	ldr	r0, [fp, #-16]
   230c0:	cmp	r0, #1
   230c4:	bcc	230dc <__assert_fail@plt+0x11b94>
   230c8:	b	230e8 <__assert_fail@plt+0x11ba0>
   230cc:	ldr	r0, [fp, #-16]
   230d0:	movw	r1, #0
   230d4:	cmp	r1, r0
   230d8:	bcs	230e8 <__assert_fail@plt+0x11ba0>
   230dc:	movw	r0, #0
   230e0:	str	r0, [fp, #-40]	; 0xffffffd8
   230e4:	b	23100 <__assert_fail@plt+0x11bb8>
   230e8:	ldr	r0, [pc, #2868]	; 23c24 <__assert_fail@plt+0x126dc>
   230ec:	ldr	r1, [fp, #-16]
   230f0:	movw	r2, #0
   230f4:	sub	r1, r2, r1
   230f8:	udiv	r0, r0, r1
   230fc:	str	r0, [fp, #-40]	; 0xffffffd8
   23100:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23104:	ldr	r1, [fp, #-12]
   23108:	mvn	r2, #0
   2310c:	sub	r1, r2, r1
   23110:	cmp	r0, r1
   23114:	bls	23218 <__assert_fail@plt+0x11cd0>
   23118:	b	2322c <__assert_fail@plt+0x11ce4>
   2311c:	ldr	r0, [fp, #-16]
   23120:	cmn	r0, #1
   23124:	bne	2316c <__assert_fail@plt+0x11c24>
   23128:	b	23144 <__assert_fail@plt+0x11bfc>
   2312c:	ldr	r0, [fp, #-12]
   23130:	add	r0, r0, #-2147483648	; 0x80000000
   23134:	movw	r1, #0
   23138:	cmp	r1, r0
   2313c:	bcc	23218 <__assert_fail@plt+0x11cd0>
   23140:	b	2322c <__assert_fail@plt+0x11ce4>
   23144:	ldr	r0, [fp, #-12]
   23148:	movw	r1, #0
   2314c:	cmp	r1, r0
   23150:	bcs	2322c <__assert_fail@plt+0x11ce4>
   23154:	ldr	r0, [pc, #2760]	; 23c24 <__assert_fail@plt+0x126dc>
   23158:	ldr	r1, [fp, #-12]
   2315c:	sub	r1, r1, #1
   23160:	cmp	r0, r1
   23164:	bcc	23218 <__assert_fail@plt+0x11cd0>
   23168:	b	2322c <__assert_fail@plt+0x11ce4>
   2316c:	ldr	r0, [pc, #2740]	; 23c28 <__assert_fail@plt+0x126e0>
   23170:	ldr	r1, [fp, #-16]
   23174:	udiv	r0, r0, r1
   23178:	ldr	r1, [fp, #-12]
   2317c:	cmp	r0, r1
   23180:	bcc	23218 <__assert_fail@plt+0x11cd0>
   23184:	b	2322c <__assert_fail@plt+0x11ce4>
   23188:	ldr	r0, [fp, #-16]
   2318c:	cmp	r0, #0
   23190:	bne	23198 <__assert_fail@plt+0x11c50>
   23194:	b	2322c <__assert_fail@plt+0x11ce4>
   23198:	ldr	r0, [fp, #-12]
   2319c:	cmp	r0, #0
   231a0:	bcs	23200 <__assert_fail@plt+0x11cb8>
   231a4:	ldr	r0, [fp, #-12]
   231a8:	cmn	r0, #1
   231ac:	bne	231e4 <__assert_fail@plt+0x11c9c>
   231b0:	b	231cc <__assert_fail@plt+0x11c84>
   231b4:	ldr	r0, [fp, #-16]
   231b8:	add	r0, r0, #-2147483648	; 0x80000000
   231bc:	movw	r1, #0
   231c0:	cmp	r1, r0
   231c4:	bcc	23218 <__assert_fail@plt+0x11cd0>
   231c8:	b	2322c <__assert_fail@plt+0x11ce4>
   231cc:	ldr	r0, [pc, #2640]	; 23c24 <__assert_fail@plt+0x126dc>
   231d0:	ldr	r1, [fp, #-16]
   231d4:	sub	r1, r1, #1
   231d8:	cmp	r0, r1
   231dc:	bcc	23218 <__assert_fail@plt+0x11cd0>
   231e0:	b	2322c <__assert_fail@plt+0x11ce4>
   231e4:	ldr	r0, [pc, #2620]	; 23c28 <__assert_fail@plt+0x126e0>
   231e8:	ldr	r1, [fp, #-12]
   231ec:	udiv	r0, r0, r1
   231f0:	ldr	r1, [fp, #-16]
   231f4:	cmp	r0, r1
   231f8:	bcc	23218 <__assert_fail@plt+0x11cd0>
   231fc:	b	2322c <__assert_fail@plt+0x11ce4>
   23200:	ldr	r0, [pc, #2588]	; 23c24 <__assert_fail@plt+0x126dc>
   23204:	ldr	r1, [fp, #-16]
   23208:	udiv	r0, r0, r1
   2320c:	ldr	r1, [fp, #-12]
   23210:	cmp	r0, r1
   23214:	bcs	2322c <__assert_fail@plt+0x11ce4>
   23218:	ldr	r0, [fp, #-12]
   2321c:	ldr	r1, [fp, #-16]
   23220:	mul	r0, r0, r1
   23224:	str	r0, [fp, #-20]	; 0xffffffec
   23228:	b	23bf0 <__assert_fail@plt+0x126a8>
   2322c:	ldr	r0, [fp, #-12]
   23230:	ldr	r1, [fp, #-16]
   23234:	mul	r0, r0, r1
   23238:	str	r0, [fp, #-20]	; 0xffffffec
   2323c:	b	23c08 <__assert_fail@plt+0x126c0>
   23240:	ldr	r0, [fp, #-16]
   23244:	cmp	r0, #0
   23248:	bcs	23354 <__assert_fail@plt+0x11e0c>
   2324c:	ldr	r0, [fp, #-12]
   23250:	cmp	r0, #0
   23254:	bcs	232dc <__assert_fail@plt+0x11d94>
   23258:	b	23278 <__assert_fail@plt+0x11d30>
   2325c:	ldr	r0, [fp, #-12]
   23260:	ldr	r1, [fp, #-16]
   23264:	mvn	r2, #0
   23268:	udiv	r1, r2, r1
   2326c:	cmp	r0, r1
   23270:	bcc	233f0 <__assert_fail@plt+0x11ea8>
   23274:	b	23404 <__assert_fail@plt+0x11ebc>
   23278:	b	2328c <__assert_fail@plt+0x11d44>
   2327c:	ldr	r0, [fp, #-16]
   23280:	cmp	r0, #1
   23284:	bcc	2329c <__assert_fail@plt+0x11d54>
   23288:	b	232a8 <__assert_fail@plt+0x11d60>
   2328c:	ldr	r0, [fp, #-16]
   23290:	movw	r1, #0
   23294:	cmp	r1, r0
   23298:	bcs	232a8 <__assert_fail@plt+0x11d60>
   2329c:	movw	r0, #1
   232a0:	str	r0, [fp, #-44]	; 0xffffffd4
   232a4:	b	232c0 <__assert_fail@plt+0x11d78>
   232a8:	ldr	r0, [fp, #-16]
   232ac:	movw	r1, #0
   232b0:	sub	r0, r1, r0
   232b4:	mvn	r1, #0
   232b8:	udiv	r0, r1, r0
   232bc:	str	r0, [fp, #-44]	; 0xffffffd4
   232c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   232c4:	ldr	r1, [fp, #-12]
   232c8:	mvn	r2, #0
   232cc:	sub	r1, r2, r1
   232d0:	cmp	r0, r1
   232d4:	bls	233f0 <__assert_fail@plt+0x11ea8>
   232d8:	b	23404 <__assert_fail@plt+0x11ebc>
   232dc:	b	232e4 <__assert_fail@plt+0x11d9c>
   232e0:	b	232e8 <__assert_fail@plt+0x11da0>
   232e4:	b	23338 <__assert_fail@plt+0x11df0>
   232e8:	ldr	r0, [fp, #-16]
   232ec:	cmn	r0, #1
   232f0:	bne	23338 <__assert_fail@plt+0x11df0>
   232f4:	b	23310 <__assert_fail@plt+0x11dc8>
   232f8:	ldr	r0, [fp, #-12]
   232fc:	add	r0, r0, #0
   23300:	movw	r1, #0
   23304:	cmp	r1, r0
   23308:	bcc	233f0 <__assert_fail@plt+0x11ea8>
   2330c:	b	23404 <__assert_fail@plt+0x11ebc>
   23310:	ldr	r0, [fp, #-12]
   23314:	movw	r1, #0
   23318:	cmp	r1, r0
   2331c:	bcs	23404 <__assert_fail@plt+0x11ebc>
   23320:	ldr	r0, [fp, #-12]
   23324:	sub	r0, r0, #1
   23328:	mvn	r1, #0
   2332c:	cmp	r1, r0
   23330:	bcc	233f0 <__assert_fail@plt+0x11ea8>
   23334:	b	23404 <__assert_fail@plt+0x11ebc>
   23338:	ldr	r0, [fp, #-16]
   2333c:	movw	r1, #0
   23340:	udiv	r0, r1, r0
   23344:	ldr	r1, [fp, #-12]
   23348:	cmp	r0, r1
   2334c:	bcc	233f0 <__assert_fail@plt+0x11ea8>
   23350:	b	23404 <__assert_fail@plt+0x11ebc>
   23354:	ldr	r0, [fp, #-16]
   23358:	cmp	r0, #0
   2335c:	bne	23364 <__assert_fail@plt+0x11e1c>
   23360:	b	23404 <__assert_fail@plt+0x11ebc>
   23364:	ldr	r0, [fp, #-12]
   23368:	cmp	r0, #0
   2336c:	bcs	233d8 <__assert_fail@plt+0x11e90>
   23370:	b	23378 <__assert_fail@plt+0x11e30>
   23374:	b	2337c <__assert_fail@plt+0x11e34>
   23378:	b	233bc <__assert_fail@plt+0x11e74>
   2337c:	ldr	r0, [fp, #-12]
   23380:	cmn	r0, #1
   23384:	bne	233bc <__assert_fail@plt+0x11e74>
   23388:	b	233a4 <__assert_fail@plt+0x11e5c>
   2338c:	ldr	r0, [fp, #-16]
   23390:	add	r0, r0, #0
   23394:	movw	r1, #0
   23398:	cmp	r1, r0
   2339c:	bcc	233f0 <__assert_fail@plt+0x11ea8>
   233a0:	b	23404 <__assert_fail@plt+0x11ebc>
   233a4:	ldr	r0, [fp, #-16]
   233a8:	sub	r0, r0, #1
   233ac:	mvn	r1, #0
   233b0:	cmp	r1, r0
   233b4:	bcc	233f0 <__assert_fail@plt+0x11ea8>
   233b8:	b	23404 <__assert_fail@plt+0x11ebc>
   233bc:	ldr	r0, [fp, #-12]
   233c0:	movw	r1, #0
   233c4:	udiv	r0, r1, r0
   233c8:	ldr	r1, [fp, #-16]
   233cc:	cmp	r0, r1
   233d0:	bcc	233f0 <__assert_fail@plt+0x11ea8>
   233d4:	b	23404 <__assert_fail@plt+0x11ebc>
   233d8:	ldr	r0, [fp, #-16]
   233dc:	mvn	r1, #0
   233e0:	udiv	r0, r1, r0
   233e4:	ldr	r1, [fp, #-12]
   233e8:	cmp	r0, r1
   233ec:	bcs	23404 <__assert_fail@plt+0x11ebc>
   233f0:	ldr	r0, [fp, #-12]
   233f4:	ldr	r1, [fp, #-16]
   233f8:	mul	r0, r0, r1
   233fc:	str	r0, [fp, #-20]	; 0xffffffec
   23400:	b	23bf0 <__assert_fail@plt+0x126a8>
   23404:	ldr	r0, [fp, #-12]
   23408:	ldr	r1, [fp, #-16]
   2340c:	mul	r0, r0, r1
   23410:	str	r0, [fp, #-20]	; 0xffffffec
   23414:	b	23c08 <__assert_fail@plt+0x126c0>
   23418:	b	2341c <__assert_fail@plt+0x11ed4>
   2341c:	b	235e0 <__assert_fail@plt+0x12098>
   23420:	ldr	r0, [fp, #-16]
   23424:	cmp	r0, #0
   23428:	bcs	23528 <__assert_fail@plt+0x11fe0>
   2342c:	ldr	r0, [fp, #-12]
   23430:	cmp	r0, #0
   23434:	bcs	234bc <__assert_fail@plt+0x11f74>
   23438:	b	23458 <__assert_fail@plt+0x11f10>
   2343c:	ldr	r0, [pc, #2016]	; 23c24 <__assert_fail@plt+0x126dc>
   23440:	ldr	r1, [fp, #-12]
   23444:	ldr	r2, [fp, #-16]
   23448:	udiv	r0, r0, r2
   2344c:	cmp	r1, r0
   23450:	bcc	235b8 <__assert_fail@plt+0x12070>
   23454:	b	235cc <__assert_fail@plt+0x12084>
   23458:	b	2346c <__assert_fail@plt+0x11f24>
   2345c:	ldr	r0, [fp, #-16]
   23460:	cmp	r0, #1
   23464:	bcc	2347c <__assert_fail@plt+0x11f34>
   23468:	b	23488 <__assert_fail@plt+0x11f40>
   2346c:	ldr	r0, [fp, #-16]
   23470:	movw	r1, #0
   23474:	cmp	r1, r0
   23478:	bcs	23488 <__assert_fail@plt+0x11f40>
   2347c:	movw	r0, #0
   23480:	str	r0, [sp, #48]	; 0x30
   23484:	b	234a0 <__assert_fail@plt+0x11f58>
   23488:	ldr	r0, [pc, #1940]	; 23c24 <__assert_fail@plt+0x126dc>
   2348c:	ldr	r1, [fp, #-16]
   23490:	movw	r2, #0
   23494:	sub	r1, r2, r1
   23498:	udiv	r0, r0, r1
   2349c:	str	r0, [sp, #48]	; 0x30
   234a0:	ldr	r0, [sp, #48]	; 0x30
   234a4:	ldr	r1, [fp, #-12]
   234a8:	mvn	r2, #0
   234ac:	sub	r1, r2, r1
   234b0:	cmp	r0, r1
   234b4:	bls	235b8 <__assert_fail@plt+0x12070>
   234b8:	b	235cc <__assert_fail@plt+0x12084>
   234bc:	ldr	r0, [fp, #-16]
   234c0:	cmn	r0, #1
   234c4:	bne	2350c <__assert_fail@plt+0x11fc4>
   234c8:	b	234e4 <__assert_fail@plt+0x11f9c>
   234cc:	ldr	r0, [fp, #-12]
   234d0:	add	r0, r0, #-2147483648	; 0x80000000
   234d4:	movw	r1, #0
   234d8:	cmp	r1, r0
   234dc:	bcc	235b8 <__assert_fail@plt+0x12070>
   234e0:	b	235cc <__assert_fail@plt+0x12084>
   234e4:	ldr	r0, [fp, #-12]
   234e8:	movw	r1, #0
   234ec:	cmp	r1, r0
   234f0:	bcs	235cc <__assert_fail@plt+0x12084>
   234f4:	ldr	r0, [pc, #1832]	; 23c24 <__assert_fail@plt+0x126dc>
   234f8:	ldr	r1, [fp, #-12]
   234fc:	sub	r1, r1, #1
   23500:	cmp	r0, r1
   23504:	bcc	235b8 <__assert_fail@plt+0x12070>
   23508:	b	235cc <__assert_fail@plt+0x12084>
   2350c:	ldr	r0, [pc, #1812]	; 23c28 <__assert_fail@plt+0x126e0>
   23510:	ldr	r1, [fp, #-16]
   23514:	udiv	r0, r0, r1
   23518:	ldr	r1, [fp, #-12]
   2351c:	cmp	r0, r1
   23520:	bcc	235b8 <__assert_fail@plt+0x12070>
   23524:	b	235cc <__assert_fail@plt+0x12084>
   23528:	ldr	r0, [fp, #-16]
   2352c:	cmp	r0, #0
   23530:	bne	23538 <__assert_fail@plt+0x11ff0>
   23534:	b	235cc <__assert_fail@plt+0x12084>
   23538:	ldr	r0, [fp, #-12]
   2353c:	cmp	r0, #0
   23540:	bcs	235a0 <__assert_fail@plt+0x12058>
   23544:	ldr	r0, [fp, #-12]
   23548:	cmn	r0, #1
   2354c:	bne	23584 <__assert_fail@plt+0x1203c>
   23550:	b	2356c <__assert_fail@plt+0x12024>
   23554:	ldr	r0, [fp, #-16]
   23558:	add	r0, r0, #-2147483648	; 0x80000000
   2355c:	movw	r1, #0
   23560:	cmp	r1, r0
   23564:	bcc	235b8 <__assert_fail@plt+0x12070>
   23568:	b	235cc <__assert_fail@plt+0x12084>
   2356c:	ldr	r0, [pc, #1712]	; 23c24 <__assert_fail@plt+0x126dc>
   23570:	ldr	r1, [fp, #-16]
   23574:	sub	r1, r1, #1
   23578:	cmp	r0, r1
   2357c:	bcc	235b8 <__assert_fail@plt+0x12070>
   23580:	b	235cc <__assert_fail@plt+0x12084>
   23584:	ldr	r0, [pc, #1692]	; 23c28 <__assert_fail@plt+0x126e0>
   23588:	ldr	r1, [fp, #-12]
   2358c:	udiv	r0, r0, r1
   23590:	ldr	r1, [fp, #-16]
   23594:	cmp	r0, r1
   23598:	bcc	235b8 <__assert_fail@plt+0x12070>
   2359c:	b	235cc <__assert_fail@plt+0x12084>
   235a0:	ldr	r0, [pc, #1660]	; 23c24 <__assert_fail@plt+0x126dc>
   235a4:	ldr	r1, [fp, #-16]
   235a8:	udiv	r0, r0, r1
   235ac:	ldr	r1, [fp, #-12]
   235b0:	cmp	r0, r1
   235b4:	bcs	235cc <__assert_fail@plt+0x12084>
   235b8:	ldr	r0, [fp, #-12]
   235bc:	ldr	r1, [fp, #-16]
   235c0:	mul	r0, r0, r1
   235c4:	str	r0, [fp, #-20]	; 0xffffffec
   235c8:	b	23bf0 <__assert_fail@plt+0x126a8>
   235cc:	ldr	r0, [fp, #-12]
   235d0:	ldr	r1, [fp, #-16]
   235d4:	mul	r0, r0, r1
   235d8:	str	r0, [fp, #-20]	; 0xffffffec
   235dc:	b	23c08 <__assert_fail@plt+0x126c0>
   235e0:	ldr	r0, [fp, #-16]
   235e4:	cmp	r0, #0
   235e8:	bcs	236f4 <__assert_fail@plt+0x121ac>
   235ec:	ldr	r0, [fp, #-12]
   235f0:	cmp	r0, #0
   235f4:	bcs	2367c <__assert_fail@plt+0x12134>
   235f8:	b	23618 <__assert_fail@plt+0x120d0>
   235fc:	ldr	r0, [fp, #-12]
   23600:	ldr	r1, [fp, #-16]
   23604:	mvn	r2, #0
   23608:	udiv	r1, r2, r1
   2360c:	cmp	r0, r1
   23610:	bcc	23790 <__assert_fail@plt+0x12248>
   23614:	b	237a4 <__assert_fail@plt+0x1225c>
   23618:	b	2362c <__assert_fail@plt+0x120e4>
   2361c:	ldr	r0, [fp, #-16]
   23620:	cmp	r0, #1
   23624:	bcc	2363c <__assert_fail@plt+0x120f4>
   23628:	b	23648 <__assert_fail@plt+0x12100>
   2362c:	ldr	r0, [fp, #-16]
   23630:	movw	r1, #0
   23634:	cmp	r1, r0
   23638:	bcs	23648 <__assert_fail@plt+0x12100>
   2363c:	movw	r0, #1
   23640:	str	r0, [sp, #44]	; 0x2c
   23644:	b	23660 <__assert_fail@plt+0x12118>
   23648:	ldr	r0, [fp, #-16]
   2364c:	movw	r1, #0
   23650:	sub	r0, r1, r0
   23654:	mvn	r1, #0
   23658:	udiv	r0, r1, r0
   2365c:	str	r0, [sp, #44]	; 0x2c
   23660:	ldr	r0, [sp, #44]	; 0x2c
   23664:	ldr	r1, [fp, #-12]
   23668:	mvn	r2, #0
   2366c:	sub	r1, r2, r1
   23670:	cmp	r0, r1
   23674:	bls	23790 <__assert_fail@plt+0x12248>
   23678:	b	237a4 <__assert_fail@plt+0x1225c>
   2367c:	b	23684 <__assert_fail@plt+0x1213c>
   23680:	b	23688 <__assert_fail@plt+0x12140>
   23684:	b	236d8 <__assert_fail@plt+0x12190>
   23688:	ldr	r0, [fp, #-16]
   2368c:	cmn	r0, #1
   23690:	bne	236d8 <__assert_fail@plt+0x12190>
   23694:	b	236b0 <__assert_fail@plt+0x12168>
   23698:	ldr	r0, [fp, #-12]
   2369c:	add	r0, r0, #0
   236a0:	movw	r1, #0
   236a4:	cmp	r1, r0
   236a8:	bcc	23790 <__assert_fail@plt+0x12248>
   236ac:	b	237a4 <__assert_fail@plt+0x1225c>
   236b0:	ldr	r0, [fp, #-12]
   236b4:	movw	r1, #0
   236b8:	cmp	r1, r0
   236bc:	bcs	237a4 <__assert_fail@plt+0x1225c>
   236c0:	ldr	r0, [fp, #-12]
   236c4:	sub	r0, r0, #1
   236c8:	mvn	r1, #0
   236cc:	cmp	r1, r0
   236d0:	bcc	23790 <__assert_fail@plt+0x12248>
   236d4:	b	237a4 <__assert_fail@plt+0x1225c>
   236d8:	ldr	r0, [fp, #-16]
   236dc:	movw	r1, #0
   236e0:	udiv	r0, r1, r0
   236e4:	ldr	r1, [fp, #-12]
   236e8:	cmp	r0, r1
   236ec:	bcc	23790 <__assert_fail@plt+0x12248>
   236f0:	b	237a4 <__assert_fail@plt+0x1225c>
   236f4:	ldr	r0, [fp, #-16]
   236f8:	cmp	r0, #0
   236fc:	bne	23704 <__assert_fail@plt+0x121bc>
   23700:	b	237a4 <__assert_fail@plt+0x1225c>
   23704:	ldr	r0, [fp, #-12]
   23708:	cmp	r0, #0
   2370c:	bcs	23778 <__assert_fail@plt+0x12230>
   23710:	b	23718 <__assert_fail@plt+0x121d0>
   23714:	b	2371c <__assert_fail@plt+0x121d4>
   23718:	b	2375c <__assert_fail@plt+0x12214>
   2371c:	ldr	r0, [fp, #-12]
   23720:	cmn	r0, #1
   23724:	bne	2375c <__assert_fail@plt+0x12214>
   23728:	b	23744 <__assert_fail@plt+0x121fc>
   2372c:	ldr	r0, [fp, #-16]
   23730:	add	r0, r0, #0
   23734:	movw	r1, #0
   23738:	cmp	r1, r0
   2373c:	bcc	23790 <__assert_fail@plt+0x12248>
   23740:	b	237a4 <__assert_fail@plt+0x1225c>
   23744:	ldr	r0, [fp, #-16]
   23748:	sub	r0, r0, #1
   2374c:	mvn	r1, #0
   23750:	cmp	r1, r0
   23754:	bcc	23790 <__assert_fail@plt+0x12248>
   23758:	b	237a4 <__assert_fail@plt+0x1225c>
   2375c:	ldr	r0, [fp, #-12]
   23760:	movw	r1, #0
   23764:	udiv	r0, r1, r0
   23768:	ldr	r1, [fp, #-16]
   2376c:	cmp	r0, r1
   23770:	bcc	23790 <__assert_fail@plt+0x12248>
   23774:	b	237a4 <__assert_fail@plt+0x1225c>
   23778:	ldr	r0, [fp, #-16]
   2377c:	mvn	r1, #0
   23780:	udiv	r0, r1, r0
   23784:	ldr	r1, [fp, #-12]
   23788:	cmp	r0, r1
   2378c:	bcs	237a4 <__assert_fail@plt+0x1225c>
   23790:	ldr	r0, [fp, #-12]
   23794:	ldr	r1, [fp, #-16]
   23798:	mul	r0, r0, r1
   2379c:	str	r0, [fp, #-20]	; 0xffffffec
   237a0:	b	23bf0 <__assert_fail@plt+0x126a8>
   237a4:	ldr	r0, [fp, #-12]
   237a8:	ldr	r1, [fp, #-16]
   237ac:	mul	r0, r0, r1
   237b0:	str	r0, [fp, #-20]	; 0xffffffec
   237b4:	b	23c08 <__assert_fail@plt+0x126c0>
   237b8:	b	239d4 <__assert_fail@plt+0x1248c>
   237bc:	ldr	r0, [fp, #-16]
   237c0:	cmp	r0, #0
   237c4:	bcs	23904 <__assert_fail@plt+0x123bc>
   237c8:	ldr	r0, [fp, #-12]
   237cc:	cmp	r0, #0
   237d0:	bcs	23890 <__assert_fail@plt+0x12348>
   237d4:	b	237d8 <__assert_fail@plt+0x12290>
   237d8:	ldr	r0, [fp, #-12]
   237dc:	ldr	r2, [fp, #-16]
   237e0:	mvn	r1, #0
   237e4:	mvn	r3, #-2147483648	; 0x80000000
   237e8:	mov	ip, #0
   237ec:	str	r0, [sp, #40]	; 0x28
   237f0:	mov	r0, r1
   237f4:	mov	r1, r3
   237f8:	mov	r3, ip
   237fc:	bl	24564 <__assert_fail@plt+0x1301c>
   23800:	ldr	r2, [sp, #40]	; 0x28
   23804:	subs	r0, r2, r0
   23808:	rscs	r1, r1, #0
   2380c:	blt	239ac <__assert_fail@plt+0x12464>
   23810:	b	239c0 <__assert_fail@plt+0x12478>
   23814:	b	23828 <__assert_fail@plt+0x122e0>
   23818:	ldr	r0, [fp, #-16]
   2381c:	cmp	r0, #1
   23820:	bcc	23838 <__assert_fail@plt+0x122f0>
   23824:	b	2384c <__assert_fail@plt+0x12304>
   23828:	ldr	r0, [fp, #-16]
   2382c:	movw	r1, #0
   23830:	cmp	r1, r0
   23834:	bcs	2384c <__assert_fail@plt+0x12304>
   23838:	mov	r0, #0
   2383c:	mvn	r1, #0
   23840:	str	r1, [sp, #36]	; 0x24
   23844:	str	r0, [sp, #32]
   23848:	b	23870 <__assert_fail@plt+0x12328>
   2384c:	ldr	r0, [fp, #-16]
   23850:	rsb	r2, r0, #0
   23854:	mvn	r0, #0
   23858:	mvn	r1, #-2147483648	; 0x80000000
   2385c:	mov	r3, #0
   23860:	bl	24564 <__assert_fail@plt+0x1301c>
   23864:	str	r0, [sp, #36]	; 0x24
   23868:	str	r1, [sp, #32]
   2386c:	b	23870 <__assert_fail@plt+0x12328>
   23870:	ldr	r0, [sp, #32]
   23874:	ldr	r1, [sp, #36]	; 0x24
   23878:	ldr	r2, [fp, #-12]
   2387c:	mvn	r2, r2
   23880:	subs	r1, r2, r1
   23884:	rscs	r0, r0, #0
   23888:	bge	239ac <__assert_fail@plt+0x12464>
   2388c:	b	239c0 <__assert_fail@plt+0x12478>
   23890:	ldr	r0, [fp, #-16]
   23894:	cmn	r0, #1
   23898:	bne	238d8 <__assert_fail@plt+0x12390>
   2389c:	b	238b8 <__assert_fail@plt+0x12370>
   238a0:	ldr	r0, [fp, #-12]
   238a4:	rsbs	r0, r0, #0
   238a8:	mov	r1, #0
   238ac:	sbcs	r1, r1, #-2147483648	; 0x80000000
   238b0:	blt	239ac <__assert_fail@plt+0x12464>
   238b4:	b	239c0 <__assert_fail@plt+0x12478>
   238b8:	ldr	r0, [fp, #-12]
   238bc:	movw	r1, #0
   238c0:	cmp	r1, r0
   238c4:	bcs	239c0 <__assert_fail@plt+0x12478>
   238c8:	mov	r0, #0
   238cc:	cmp	r0, #0
   238d0:	bne	239ac <__assert_fail@plt+0x12464>
   238d4:	b	239c0 <__assert_fail@plt+0x12478>
   238d8:	ldr	r2, [fp, #-16]
   238dc:	mov	r1, #-2147483648	; 0x80000000
   238e0:	mov	r0, #0
   238e4:	str	r0, [sp, #28]
   238e8:	ldr	r3, [sp, #28]
   238ec:	bl	24490 <__assert_fail@plt+0x12f48>
   238f0:	ldr	r2, [fp, #-12]
   238f4:	subs	r0, r0, r2
   238f8:	sbcs	r1, r1, #0
   238fc:	blt	239ac <__assert_fail@plt+0x12464>
   23900:	b	239c0 <__assert_fail@plt+0x12478>
   23904:	ldr	r0, [fp, #-16]
   23908:	cmp	r0, #0
   2390c:	bne	23914 <__assert_fail@plt+0x123cc>
   23910:	b	239c0 <__assert_fail@plt+0x12478>
   23914:	ldr	r0, [fp, #-12]
   23918:	cmp	r0, #0
   2391c:	bcs	23984 <__assert_fail@plt+0x1243c>
   23920:	ldr	r0, [fp, #-12]
   23924:	cmn	r0, #1
   23928:	bne	23958 <__assert_fail@plt+0x12410>
   2392c:	b	23948 <__assert_fail@plt+0x12400>
   23930:	ldr	r0, [fp, #-16]
   23934:	rsbs	r0, r0, #0
   23938:	mov	r1, #0
   2393c:	sbcs	r1, r1, #-2147483648	; 0x80000000
   23940:	blt	239ac <__assert_fail@plt+0x12464>
   23944:	b	239c0 <__assert_fail@plt+0x12478>
   23948:	mov	r0, #0
   2394c:	cmp	r0, #0
   23950:	bne	239ac <__assert_fail@plt+0x12464>
   23954:	b	239c0 <__assert_fail@plt+0x12478>
   23958:	ldr	r2, [fp, #-12]
   2395c:	mov	r1, #-2147483648	; 0x80000000
   23960:	mov	r0, #0
   23964:	str	r0, [sp, #24]
   23968:	ldr	r3, [sp, #24]
   2396c:	bl	24490 <__assert_fail@plt+0x12f48>
   23970:	ldr	r2, [fp, #-16]
   23974:	subs	r0, r0, r2
   23978:	sbcs	r1, r1, #0
   2397c:	blt	239ac <__assert_fail@plt+0x12464>
   23980:	b	239c0 <__assert_fail@plt+0x12478>
   23984:	ldr	r2, [fp, #-16]
   23988:	mvn	r0, #0
   2398c:	mvn	r1, #-2147483648	; 0x80000000
   23990:	mov	r3, #0
   23994:	bl	24564 <__assert_fail@plt+0x1301c>
   23998:	ldr	r2, [fp, #-12]
   2399c:	subs	r0, r0, r2
   239a0:	sbcs	r1, r1, #0
   239a4:	bge	239c0 <__assert_fail@plt+0x12478>
   239a8:	b	239ac <__assert_fail@plt+0x12464>
   239ac:	ldr	r0, [fp, #-12]
   239b0:	ldr	r1, [fp, #-16]
   239b4:	mul	r0, r0, r1
   239b8:	str	r0, [fp, #-20]	; 0xffffffec
   239bc:	b	23bf0 <__assert_fail@plt+0x126a8>
   239c0:	ldr	r0, [fp, #-12]
   239c4:	ldr	r1, [fp, #-16]
   239c8:	mul	r0, r0, r1
   239cc:	str	r0, [fp, #-20]	; 0xffffffec
   239d0:	b	23c08 <__assert_fail@plt+0x126c0>
   239d4:	ldr	r0, [fp, #-16]
   239d8:	cmp	r0, #0
   239dc:	bcs	23b18 <__assert_fail@plt+0x125d0>
   239e0:	ldr	r0, [fp, #-12]
   239e4:	cmp	r0, #0
   239e8:	bcs	23aa0 <__assert_fail@plt+0x12558>
   239ec:	b	23a20 <__assert_fail@plt+0x124d8>
   239f0:	ldr	r0, [fp, #-12]
   239f4:	ldr	r2, [fp, #-16]
   239f8:	mvn	r1, #0
   239fc:	mov	r3, #0
   23a00:	str	r0, [sp, #20]
   23a04:	mov	r0, r1
   23a08:	bl	24564 <__assert_fail@plt+0x1301c>
   23a0c:	ldr	r2, [sp, #20]
   23a10:	subs	r0, r2, r0
   23a14:	rscs	r1, r1, #0
   23a18:	bcc	23bc8 <__assert_fail@plt+0x12680>
   23a1c:	b	23bdc <__assert_fail@plt+0x12694>
   23a20:	b	23a34 <__assert_fail@plt+0x124ec>
   23a24:	ldr	r0, [fp, #-16]
   23a28:	cmp	r0, #1
   23a2c:	bcc	23a44 <__assert_fail@plt+0x124fc>
   23a30:	b	23a58 <__assert_fail@plt+0x12510>
   23a34:	ldr	r0, [fp, #-16]
   23a38:	movw	r1, #0
   23a3c:	cmp	r1, r0
   23a40:	bcs	23a58 <__assert_fail@plt+0x12510>
   23a44:	mov	r0, #1
   23a48:	mvn	r1, #0
   23a4c:	str	r1, [sp, #16]
   23a50:	str	r0, [sp, #12]
   23a54:	b	23a80 <__assert_fail@plt+0x12538>
   23a58:	ldr	r0, [fp, #-16]
   23a5c:	rsb	r2, r0, #0
   23a60:	mvn	r0, #0
   23a64:	mov	r3, #0
   23a68:	str	r0, [sp, #8]
   23a6c:	ldr	r1, [sp, #8]
   23a70:	bl	24564 <__assert_fail@plt+0x1301c>
   23a74:	str	r0, [sp, #16]
   23a78:	str	r1, [sp, #12]
   23a7c:	b	23a80 <__assert_fail@plt+0x12538>
   23a80:	ldr	r0, [sp, #12]
   23a84:	ldr	r1, [sp, #16]
   23a88:	ldr	r2, [fp, #-12]
   23a8c:	mvn	r2, r2
   23a90:	subs	r1, r2, r1
   23a94:	rscs	r0, r0, #0
   23a98:	bcs	23bc8 <__assert_fail@plt+0x12680>
   23a9c:	b	23bdc <__assert_fail@plt+0x12694>
   23aa0:	b	23aa8 <__assert_fail@plt+0x12560>
   23aa4:	b	23aac <__assert_fail@plt+0x12564>
   23aa8:	b	23afc <__assert_fail@plt+0x125b4>
   23aac:	ldr	r0, [fp, #-16]
   23ab0:	cmn	r0, #1
   23ab4:	bne	23afc <__assert_fail@plt+0x125b4>
   23ab8:	b	23ad4 <__assert_fail@plt+0x1258c>
   23abc:	ldr	r0, [fp, #-12]
   23ac0:	add	r0, r0, #0
   23ac4:	movw	r1, #0
   23ac8:	cmp	r1, r0
   23acc:	bcc	23bc8 <__assert_fail@plt+0x12680>
   23ad0:	b	23bdc <__assert_fail@plt+0x12694>
   23ad4:	ldr	r0, [fp, #-12]
   23ad8:	movw	r1, #0
   23adc:	cmp	r1, r0
   23ae0:	bcs	23bdc <__assert_fail@plt+0x12694>
   23ae4:	ldr	r0, [fp, #-12]
   23ae8:	sub	r0, r0, #1
   23aec:	mvn	r1, #0
   23af0:	cmp	r1, r0
   23af4:	bcc	23bc8 <__assert_fail@plt+0x12680>
   23af8:	b	23bdc <__assert_fail@plt+0x12694>
   23afc:	ldr	r0, [fp, #-16]
   23b00:	movw	r1, #0
   23b04:	udiv	r0, r1, r0
   23b08:	ldr	r1, [fp, #-12]
   23b0c:	cmp	r0, r1
   23b10:	bcc	23bc8 <__assert_fail@plt+0x12680>
   23b14:	b	23bdc <__assert_fail@plt+0x12694>
   23b18:	ldr	r0, [fp, #-16]
   23b1c:	cmp	r0, #0
   23b20:	bne	23b28 <__assert_fail@plt+0x125e0>
   23b24:	b	23bdc <__assert_fail@plt+0x12694>
   23b28:	ldr	r0, [fp, #-12]
   23b2c:	cmp	r0, #0
   23b30:	bcs	23b9c <__assert_fail@plt+0x12654>
   23b34:	b	23b3c <__assert_fail@plt+0x125f4>
   23b38:	b	23b40 <__assert_fail@plt+0x125f8>
   23b3c:	b	23b80 <__assert_fail@plt+0x12638>
   23b40:	ldr	r0, [fp, #-12]
   23b44:	cmn	r0, #1
   23b48:	bne	23b80 <__assert_fail@plt+0x12638>
   23b4c:	b	23b68 <__assert_fail@plt+0x12620>
   23b50:	ldr	r0, [fp, #-16]
   23b54:	add	r0, r0, #0
   23b58:	movw	r1, #0
   23b5c:	cmp	r1, r0
   23b60:	bcc	23bc8 <__assert_fail@plt+0x12680>
   23b64:	b	23bdc <__assert_fail@plt+0x12694>
   23b68:	ldr	r0, [fp, #-16]
   23b6c:	sub	r0, r0, #1
   23b70:	mvn	r1, #0
   23b74:	cmp	r1, r0
   23b78:	bcc	23bc8 <__assert_fail@plt+0x12680>
   23b7c:	b	23bdc <__assert_fail@plt+0x12694>
   23b80:	ldr	r0, [fp, #-12]
   23b84:	movw	r1, #0
   23b88:	udiv	r0, r1, r0
   23b8c:	ldr	r1, [fp, #-16]
   23b90:	cmp	r0, r1
   23b94:	bcc	23bc8 <__assert_fail@plt+0x12680>
   23b98:	b	23bdc <__assert_fail@plt+0x12694>
   23b9c:	ldr	r2, [fp, #-16]
   23ba0:	mvn	r0, #0
   23ba4:	mov	r3, #0
   23ba8:	str	r0, [sp, #4]
   23bac:	ldr	r1, [sp, #4]
   23bb0:	bl	24564 <__assert_fail@plt+0x1301c>
   23bb4:	ldr	r2, [fp, #-12]
   23bb8:	subs	r0, r0, r2
   23bbc:	sbcs	r1, r1, #0
   23bc0:	bcs	23bdc <__assert_fail@plt+0x12694>
   23bc4:	b	23bc8 <__assert_fail@plt+0x12680>
   23bc8:	ldr	r0, [fp, #-12]
   23bcc:	ldr	r1, [fp, #-16]
   23bd0:	mul	r0, r0, r1
   23bd4:	str	r0, [fp, #-20]	; 0xffffffec
   23bd8:	b	23bf0 <__assert_fail@plt+0x126a8>
   23bdc:	ldr	r0, [fp, #-12]
   23be0:	ldr	r1, [fp, #-16]
   23be4:	mul	r0, r0, r1
   23be8:	str	r0, [fp, #-20]	; 0xffffffec
   23bec:	b	23c08 <__assert_fail@plt+0x126c0>
   23bf0:	bl	11404 <__errno_location@plt>
   23bf4:	movw	r1, #12
   23bf8:	str	r1, [r0]
   23bfc:	movw	r0, #0
   23c00:	str	r0, [fp, #-4]
   23c04:	b	23c18 <__assert_fail@plt+0x126d0>
   23c08:	ldr	r0, [fp, #-8]
   23c0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   23c10:	bl	21814 <__assert_fail@plt+0x102cc>
   23c14:	str	r0, [fp, #-4]
   23c18:	ldr	r0, [fp, #-4]
   23c1c:	mov	sp, fp
   23c20:	pop	{fp, pc}
   23c24:	svcvc	0x00ffffff
   23c28:	andhi	r0, r0, r0
   23c2c:			; <UNDEFINED> instruction: 0xffff8000
   23c30:	push	{fp, lr}
   23c34:	mov	fp, sp
   23c38:	sub	sp, sp, #8
   23c3c:	str	r0, [sp, #4]
   23c40:	ldr	r0, [sp, #4]
   23c44:	movw	r1, #0
   23c48:	movw	r2, #3
   23c4c:	bl	21ffc <__assert_fail@plt+0x10ab4>
   23c50:	mov	sp, fp
   23c54:	pop	{fp, pc}
   23c58:	sub	sp, sp, #12
   23c5c:	str	r0, [sp, #4]
   23c60:	ldr	r0, [sp, #4]
   23c64:	sub	r1, r0, #48	; 0x30
   23c68:	cmp	r1, #10
   23c6c:	str	r0, [sp]
   23c70:	bcc	23ca0 <__assert_fail@plt+0x12758>
   23c74:	b	23c78 <__assert_fail@plt+0x12730>
   23c78:	ldr	r0, [sp]
   23c7c:	sub	r1, r0, #65	; 0x41
   23c80:	cmp	r1, #26
   23c84:	bcc	23ca0 <__assert_fail@plt+0x12758>
   23c88:	b	23c8c <__assert_fail@plt+0x12744>
   23c8c:	ldr	r0, [sp]
   23c90:	sub	r1, r0, #97	; 0x61
   23c94:	cmp	r1, #25
   23c98:	bhi	23cb0 <__assert_fail@plt+0x12768>
   23c9c:	b	23ca0 <__assert_fail@plt+0x12758>
   23ca0:	movw	r0, #1
   23ca4:	and	r0, r0, #1
   23ca8:	strb	r0, [sp, #11]
   23cac:	b	23cbc <__assert_fail@plt+0x12774>
   23cb0:	movw	r0, #0
   23cb4:	and	r0, r0, #1
   23cb8:	strb	r0, [sp, #11]
   23cbc:	ldrb	r0, [sp, #11]
   23cc0:	and	r0, r0, #1
   23cc4:	add	sp, sp, #12
   23cc8:	bx	lr
   23ccc:	sub	sp, sp, #12
   23cd0:	str	r0, [sp, #4]
   23cd4:	ldr	r0, [sp, #4]
   23cd8:	sub	r1, r0, #65	; 0x41
   23cdc:	cmp	r1, #26
   23ce0:	str	r0, [sp]
   23ce4:	bcc	23d00 <__assert_fail@plt+0x127b8>
   23ce8:	b	23cec <__assert_fail@plt+0x127a4>
   23cec:	ldr	r0, [sp]
   23cf0:	sub	r1, r0, #97	; 0x61
   23cf4:	cmp	r1, #25
   23cf8:	bhi	23d10 <__assert_fail@plt+0x127c8>
   23cfc:	b	23d00 <__assert_fail@plt+0x127b8>
   23d00:	movw	r0, #1
   23d04:	and	r0, r0, #1
   23d08:	strb	r0, [sp, #11]
   23d0c:	b	23d1c <__assert_fail@plt+0x127d4>
   23d10:	movw	r0, #0
   23d14:	and	r0, r0, #1
   23d18:	strb	r0, [sp, #11]
   23d1c:	ldrb	r0, [sp, #11]
   23d20:	and	r0, r0, #1
   23d24:	add	sp, sp, #12
   23d28:	bx	lr
   23d2c:	sub	sp, sp, #8
   23d30:	str	r0, [sp]
   23d34:	ldr	r0, [sp]
   23d38:	cmp	r0, #127	; 0x7f
   23d3c:	bhi	23d54 <__assert_fail@plt+0x1280c>
   23d40:	b	23d44 <__assert_fail@plt+0x127fc>
   23d44:	movw	r0, #1
   23d48:	and	r0, r0, #1
   23d4c:	strb	r0, [sp, #7]
   23d50:	b	23d60 <__assert_fail@plt+0x12818>
   23d54:	movw	r0, #0
   23d58:	and	r0, r0, #1
   23d5c:	strb	r0, [sp, #7]
   23d60:	ldrb	r0, [sp, #7]
   23d64:	and	r0, r0, #1
   23d68:	add	sp, sp, #8
   23d6c:	bx	lr
   23d70:	sub	sp, sp, #8
   23d74:	str	r0, [sp, #4]
   23d78:	ldr	r0, [sp, #4]
   23d7c:	cmp	r0, #32
   23d80:	movw	r0, #1
   23d84:	str	r0, [sp]
   23d88:	beq	23da0 <__assert_fail@plt+0x12858>
   23d8c:	ldr	r0, [sp, #4]
   23d90:	cmp	r0, #9
   23d94:	movw	r0, #0
   23d98:	moveq	r0, #1
   23d9c:	str	r0, [sp]
   23da0:	ldr	r0, [sp]
   23da4:	and	r0, r0, #1
   23da8:	add	sp, sp, #8
   23dac:	bx	lr
   23db0:	sub	sp, sp, #12
   23db4:	str	r0, [sp, #4]
   23db8:	ldr	r0, [sp, #4]
   23dbc:	cmp	r0, #32
   23dc0:	str	r0, [sp]
   23dc4:	bcc	23ddc <__assert_fail@plt+0x12894>
   23dc8:	b	23dcc <__assert_fail@plt+0x12884>
   23dcc:	ldr	r0, [sp]
   23dd0:	cmp	r0, #127	; 0x7f
   23dd4:	bne	23dec <__assert_fail@plt+0x128a4>
   23dd8:	b	23ddc <__assert_fail@plt+0x12894>
   23ddc:	movw	r0, #1
   23de0:	and	r0, r0, #1
   23de4:	strb	r0, [sp, #11]
   23de8:	b	23df8 <__assert_fail@plt+0x128b0>
   23dec:	movw	r0, #0
   23df0:	and	r0, r0, #1
   23df4:	strb	r0, [sp, #11]
   23df8:	ldrb	r0, [sp, #11]
   23dfc:	and	r0, r0, #1
   23e00:	add	sp, sp, #12
   23e04:	bx	lr
   23e08:	sub	sp, sp, #8
   23e0c:	str	r0, [sp]
   23e10:	ldr	r0, [sp]
   23e14:	sub	r0, r0, #48	; 0x30
   23e18:	cmp	r0, #9
   23e1c:	bhi	23e34 <__assert_fail@plt+0x128ec>
   23e20:	b	23e24 <__assert_fail@plt+0x128dc>
   23e24:	movw	r0, #1
   23e28:	and	r0, r0, #1
   23e2c:	strb	r0, [sp, #7]
   23e30:	b	23e40 <__assert_fail@plt+0x128f8>
   23e34:	movw	r0, #0
   23e38:	and	r0, r0, #1
   23e3c:	strb	r0, [sp, #7]
   23e40:	ldrb	r0, [sp, #7]
   23e44:	and	r0, r0, #1
   23e48:	add	sp, sp, #8
   23e4c:	bx	lr
   23e50:	sub	sp, sp, #8
   23e54:	str	r0, [sp]
   23e58:	ldr	r0, [sp]
   23e5c:	sub	r0, r0, #33	; 0x21
   23e60:	cmp	r0, #93	; 0x5d
   23e64:	bhi	23e7c <__assert_fail@plt+0x12934>
   23e68:	b	23e6c <__assert_fail@plt+0x12924>
   23e6c:	movw	r0, #1
   23e70:	and	r0, r0, #1
   23e74:	strb	r0, [sp, #7]
   23e78:	b	23e88 <__assert_fail@plt+0x12940>
   23e7c:	movw	r0, #0
   23e80:	and	r0, r0, #1
   23e84:	strb	r0, [sp, #7]
   23e88:	ldrb	r0, [sp, #7]
   23e8c:	and	r0, r0, #1
   23e90:	add	sp, sp, #8
   23e94:	bx	lr
   23e98:	sub	sp, sp, #8
   23e9c:	str	r0, [sp]
   23ea0:	ldr	r0, [sp]
   23ea4:	sub	r0, r0, #97	; 0x61
   23ea8:	cmp	r0, #25
   23eac:	bhi	23ec4 <__assert_fail@plt+0x1297c>
   23eb0:	b	23eb4 <__assert_fail@plt+0x1296c>
   23eb4:	movw	r0, #1
   23eb8:	and	r0, r0, #1
   23ebc:	strb	r0, [sp, #7]
   23ec0:	b	23ed0 <__assert_fail@plt+0x12988>
   23ec4:	movw	r0, #0
   23ec8:	and	r0, r0, #1
   23ecc:	strb	r0, [sp, #7]
   23ed0:	ldrb	r0, [sp, #7]
   23ed4:	and	r0, r0, #1
   23ed8:	add	sp, sp, #8
   23edc:	bx	lr
   23ee0:	sub	sp, sp, #8
   23ee4:	str	r0, [sp]
   23ee8:	ldr	r0, [sp]
   23eec:	sub	r0, r0, #32
   23ef0:	cmp	r0, #94	; 0x5e
   23ef4:	bhi	23f0c <__assert_fail@plt+0x129c4>
   23ef8:	b	23efc <__assert_fail@plt+0x129b4>
   23efc:	movw	r0, #1
   23f00:	and	r0, r0, #1
   23f04:	strb	r0, [sp, #7]
   23f08:	b	23f18 <__assert_fail@plt+0x129d0>
   23f0c:	movw	r0, #0
   23f10:	and	r0, r0, #1
   23f14:	strb	r0, [sp, #7]
   23f18:	ldrb	r0, [sp, #7]
   23f1c:	and	r0, r0, #1
   23f20:	add	sp, sp, #8
   23f24:	bx	lr
   23f28:	sub	sp, sp, #12
   23f2c:	str	r0, [sp, #4]
   23f30:	ldr	r0, [sp, #4]
   23f34:	sub	r0, r0, #33	; 0x21
   23f38:	cmp	r0, #93	; 0x5d
   23f3c:	str	r0, [sp]
   23f40:	bhi	240dc <__assert_fail@plt+0x12b94>
   23f44:	add	r0, pc, #8
   23f48:	ldr	r1, [sp]
   23f4c:	ldr	r0, [r0, r1, lsl #2]
   23f50:	mov	pc, r0
   23f54:	andeq	r4, r2, ip, asr #1
   23f58:	andeq	r4, r2, ip, asr #1
   23f5c:	andeq	r4, r2, ip, asr #1
   23f60:	andeq	r4, r2, ip, asr #1
   23f64:	andeq	r4, r2, ip, asr #1
   23f68:	andeq	r4, r2, ip, asr #1
   23f6c:	andeq	r4, r2, ip, asr #1
   23f70:	andeq	r4, r2, ip, asr #1
   23f74:	andeq	r4, r2, ip, asr #1
   23f78:	andeq	r4, r2, ip, asr #1
   23f7c:	andeq	r4, r2, ip, asr #1
   23f80:	andeq	r4, r2, ip, asr #1
   23f84:	andeq	r4, r2, ip, asr #1
   23f88:	andeq	r4, r2, ip, asr #1
   23f8c:	andeq	r4, r2, ip, asr #1
   23f90:	ldrdeq	r4, [r2], -ip
   23f94:	ldrdeq	r4, [r2], -ip
   23f98:	ldrdeq	r4, [r2], -ip
   23f9c:	ldrdeq	r4, [r2], -ip
   23fa0:	ldrdeq	r4, [r2], -ip
   23fa4:	ldrdeq	r4, [r2], -ip
   23fa8:	ldrdeq	r4, [r2], -ip
   23fac:	ldrdeq	r4, [r2], -ip
   23fb0:	ldrdeq	r4, [r2], -ip
   23fb4:	ldrdeq	r4, [r2], -ip
   23fb8:	andeq	r4, r2, ip, asr #1
   23fbc:	andeq	r4, r2, ip, asr #1
   23fc0:	andeq	r4, r2, ip, asr #1
   23fc4:	andeq	r4, r2, ip, asr #1
   23fc8:	andeq	r4, r2, ip, asr #1
   23fcc:	andeq	r4, r2, ip, asr #1
   23fd0:	andeq	r4, r2, ip, asr #1
   23fd4:	ldrdeq	r4, [r2], -ip
   23fd8:	ldrdeq	r4, [r2], -ip
   23fdc:	ldrdeq	r4, [r2], -ip
   23fe0:	ldrdeq	r4, [r2], -ip
   23fe4:	ldrdeq	r4, [r2], -ip
   23fe8:	ldrdeq	r4, [r2], -ip
   23fec:	ldrdeq	r4, [r2], -ip
   23ff0:	ldrdeq	r4, [r2], -ip
   23ff4:	ldrdeq	r4, [r2], -ip
   23ff8:	ldrdeq	r4, [r2], -ip
   23ffc:	ldrdeq	r4, [r2], -ip
   24000:	ldrdeq	r4, [r2], -ip
   24004:	ldrdeq	r4, [r2], -ip
   24008:	ldrdeq	r4, [r2], -ip
   2400c:	ldrdeq	r4, [r2], -ip
   24010:	ldrdeq	r4, [r2], -ip
   24014:	ldrdeq	r4, [r2], -ip
   24018:	ldrdeq	r4, [r2], -ip
   2401c:	ldrdeq	r4, [r2], -ip
   24020:	ldrdeq	r4, [r2], -ip
   24024:	ldrdeq	r4, [r2], -ip
   24028:	ldrdeq	r4, [r2], -ip
   2402c:	ldrdeq	r4, [r2], -ip
   24030:	ldrdeq	r4, [r2], -ip
   24034:	ldrdeq	r4, [r2], -ip
   24038:	ldrdeq	r4, [r2], -ip
   2403c:	andeq	r4, r2, ip, asr #1
   24040:	andeq	r4, r2, ip, asr #1
   24044:	andeq	r4, r2, ip, asr #1
   24048:	andeq	r4, r2, ip, asr #1
   2404c:	andeq	r4, r2, ip, asr #1
   24050:	andeq	r4, r2, ip, asr #1
   24054:	ldrdeq	r4, [r2], -ip
   24058:	ldrdeq	r4, [r2], -ip
   2405c:	ldrdeq	r4, [r2], -ip
   24060:	ldrdeq	r4, [r2], -ip
   24064:	ldrdeq	r4, [r2], -ip
   24068:	ldrdeq	r4, [r2], -ip
   2406c:	ldrdeq	r4, [r2], -ip
   24070:	ldrdeq	r4, [r2], -ip
   24074:	ldrdeq	r4, [r2], -ip
   24078:	ldrdeq	r4, [r2], -ip
   2407c:	ldrdeq	r4, [r2], -ip
   24080:	ldrdeq	r4, [r2], -ip
   24084:	ldrdeq	r4, [r2], -ip
   24088:	ldrdeq	r4, [r2], -ip
   2408c:	ldrdeq	r4, [r2], -ip
   24090:	ldrdeq	r4, [r2], -ip
   24094:	ldrdeq	r4, [r2], -ip
   24098:	ldrdeq	r4, [r2], -ip
   2409c:	ldrdeq	r4, [r2], -ip
   240a0:	ldrdeq	r4, [r2], -ip
   240a4:	ldrdeq	r4, [r2], -ip
   240a8:	ldrdeq	r4, [r2], -ip
   240ac:	ldrdeq	r4, [r2], -ip
   240b0:	ldrdeq	r4, [r2], -ip
   240b4:	ldrdeq	r4, [r2], -ip
   240b8:	ldrdeq	r4, [r2], -ip
   240bc:	andeq	r4, r2, ip, asr #1
   240c0:	andeq	r4, r2, ip, asr #1
   240c4:	andeq	r4, r2, ip, asr #1
   240c8:	andeq	r4, r2, ip, asr #1
   240cc:	movw	r0, #1
   240d0:	and	r0, r0, #1
   240d4:	strb	r0, [sp, #11]
   240d8:	b	240e8 <__assert_fail@plt+0x12ba0>
   240dc:	movw	r0, #0
   240e0:	and	r0, r0, #1
   240e4:	strb	r0, [sp, #11]
   240e8:	ldrb	r0, [sp, #11]
   240ec:	and	r0, r0, #1
   240f0:	add	sp, sp, #12
   240f4:	bx	lr
   240f8:	sub	sp, sp, #12
   240fc:	str	r0, [sp, #4]
   24100:	ldr	r0, [sp, #4]
   24104:	sub	r1, r0, #9
   24108:	cmp	r1, #5
   2410c:	str	r0, [sp]
   24110:	bcc	24128 <__assert_fail@plt+0x12be0>
   24114:	b	24118 <__assert_fail@plt+0x12bd0>
   24118:	ldr	r0, [sp]
   2411c:	cmp	r0, #32
   24120:	bne	24138 <__assert_fail@plt+0x12bf0>
   24124:	b	24128 <__assert_fail@plt+0x12be0>
   24128:	movw	r0, #1
   2412c:	and	r0, r0, #1
   24130:	strb	r0, [sp, #11]
   24134:	b	24144 <__assert_fail@plt+0x12bfc>
   24138:	movw	r0, #0
   2413c:	and	r0, r0, #1
   24140:	strb	r0, [sp, #11]
   24144:	ldrb	r0, [sp, #11]
   24148:	and	r0, r0, #1
   2414c:	add	sp, sp, #12
   24150:	bx	lr
   24154:	sub	sp, sp, #8
   24158:	str	r0, [sp]
   2415c:	ldr	r0, [sp]
   24160:	sub	r0, r0, #65	; 0x41
   24164:	cmp	r0, #25
   24168:	bhi	24180 <__assert_fail@plt+0x12c38>
   2416c:	b	24170 <__assert_fail@plt+0x12c28>
   24170:	movw	r0, #1
   24174:	and	r0, r0, #1
   24178:	strb	r0, [sp, #7]
   2417c:	b	2418c <__assert_fail@plt+0x12c44>
   24180:	movw	r0, #0
   24184:	and	r0, r0, #1
   24188:	strb	r0, [sp, #7]
   2418c:	ldrb	r0, [sp, #7]
   24190:	and	r0, r0, #1
   24194:	add	sp, sp, #8
   24198:	bx	lr
   2419c:	sub	sp, sp, #12
   241a0:	str	r0, [sp, #4]
   241a4:	ldr	r0, [sp, #4]
   241a8:	sub	r1, r0, #48	; 0x30
   241ac:	cmp	r1, #10
   241b0:	str	r0, [sp]
   241b4:	bcc	241e4 <__assert_fail@plt+0x12c9c>
   241b8:	b	241bc <__assert_fail@plt+0x12c74>
   241bc:	ldr	r0, [sp]
   241c0:	sub	r1, r0, #65	; 0x41
   241c4:	cmp	r1, #6
   241c8:	bcc	241e4 <__assert_fail@plt+0x12c9c>
   241cc:	b	241d0 <__assert_fail@plt+0x12c88>
   241d0:	ldr	r0, [sp]
   241d4:	sub	r1, r0, #97	; 0x61
   241d8:	cmp	r1, #5
   241dc:	bhi	241f4 <__assert_fail@plt+0x12cac>
   241e0:	b	241e4 <__assert_fail@plt+0x12c9c>
   241e4:	movw	r0, #1
   241e8:	and	r0, r0, #1
   241ec:	strb	r0, [sp, #11]
   241f0:	b	24200 <__assert_fail@plt+0x12cb8>
   241f4:	movw	r0, #0
   241f8:	and	r0, r0, #1
   241fc:	strb	r0, [sp, #11]
   24200:	ldrb	r0, [sp, #11]
   24204:	and	r0, r0, #1
   24208:	add	sp, sp, #12
   2420c:	bx	lr
   24210:	sub	sp, sp, #8
   24214:	str	r0, [sp]
   24218:	ldr	r0, [sp]
   2421c:	sub	r0, r0, #65	; 0x41
   24220:	cmp	r0, #25
   24224:	bhi	24240 <__assert_fail@plt+0x12cf8>
   24228:	b	2422c <__assert_fail@plt+0x12ce4>
   2422c:	ldr	r0, [sp]
   24230:	sub	r0, r0, #65	; 0x41
   24234:	add	r0, r0, #97	; 0x61
   24238:	str	r0, [sp, #4]
   2423c:	b	24248 <__assert_fail@plt+0x12d00>
   24240:	ldr	r0, [sp]
   24244:	str	r0, [sp, #4]
   24248:	ldr	r0, [sp, #4]
   2424c:	add	sp, sp, #8
   24250:	bx	lr
   24254:	sub	sp, sp, #8
   24258:	str	r0, [sp]
   2425c:	ldr	r0, [sp]
   24260:	sub	r0, r0, #97	; 0x61
   24264:	cmp	r0, #25
   24268:	bhi	24284 <__assert_fail@plt+0x12d3c>
   2426c:	b	24270 <__assert_fail@plt+0x12d28>
   24270:	ldr	r0, [sp]
   24274:	sub	r0, r0, #97	; 0x61
   24278:	add	r0, r0, #65	; 0x41
   2427c:	str	r0, [sp, #4]
   24280:	b	2428c <__assert_fail@plt+0x12d44>
   24284:	ldr	r0, [sp]
   24288:	str	r0, [sp, #4]
   2428c:	ldr	r0, [sp, #4]
   24290:	add	sp, sp, #8
   24294:	bx	lr
   24298:	push	{r4, r5, fp, lr}
   2429c:	add	fp, sp, #8
   242a0:	sub	sp, sp, #272	; 0x110
   242a4:	add	r1, sp, #7
   242a8:	str	r0, [fp, #-16]
   242ac:	ldr	r0, [fp, #-16]
   242b0:	movw	r2, #257	; 0x101
   242b4:	bl	24334 <__assert_fail@plt+0x12dec>
   242b8:	cmp	r0, #0
   242bc:	beq	242d0 <__assert_fail@plt+0x12d88>
   242c0:	movw	r0, #0
   242c4:	and	r0, r0, #1
   242c8:	strb	r0, [fp, #-9]
   242cc:	b	24324 <__assert_fail@plt+0x12ddc>
   242d0:	add	r0, sp, #7
   242d4:	movw	r1, #24240	; 0x5eb0
   242d8:	movt	r1, #2
   242dc:	bl	11248 <strcmp@plt>
   242e0:	cmp	r0, #0
   242e4:	movw	r0, #1
   242e8:	str	r0, [sp]
   242ec:	beq	24310 <__assert_fail@plt+0x12dc8>
   242f0:	add	r0, sp, #7
   242f4:	movw	r1, #24242	; 0x5eb2
   242f8:	movt	r1, #2
   242fc:	bl	11248 <strcmp@plt>
   24300:	cmp	r0, #0
   24304:	movw	r0, #0
   24308:	moveq	r0, #1
   2430c:	str	r0, [sp]
   24310:	ldr	r0, [sp]
   24314:	mvn	r1, #0
   24318:	eor	r0, r0, r1
   2431c:	and	r0, r0, #1
   24320:	strb	r0, [fp, #-9]
   24324:	ldrb	r0, [fp, #-9]
   24328:	and	r0, r0, #1
   2432c:	sub	sp, fp, #8
   24330:	pop	{r4, r5, fp, pc}
   24334:	push	{fp, lr}
   24338:	mov	fp, sp
   2433c:	sub	sp, sp, #16
   24340:	str	r0, [fp, #-4]
   24344:	str	r1, [sp, #8]
   24348:	str	r2, [sp, #4]
   2434c:	ldr	r0, [fp, #-4]
   24350:	ldr	r1, [sp, #8]
   24354:	ldr	r2, [sp, #4]
   24358:	bl	24364 <__assert_fail@plt+0x12e1c>
   2435c:	mov	sp, fp
   24360:	pop	{fp, pc}
   24364:	push	{fp, lr}
   24368:	mov	fp, sp
   2436c:	sub	sp, sp, #24
   24370:	str	r0, [fp, #-8]
   24374:	str	r1, [sp, #12]
   24378:	str	r2, [sp, #8]
   2437c:	ldr	r0, [fp, #-8]
   24380:	bl	24464 <__assert_fail@plt+0x12f1c>
   24384:	str	r0, [sp, #4]
   24388:	ldr	r0, [sp, #4]
   2438c:	movw	r1, #0
   24390:	cmp	r0, r1
   24394:	bne	243bc <__assert_fail@plt+0x12e74>
   24398:	ldr	r0, [sp, #8]
   2439c:	cmp	r0, #0
   243a0:	bls	243b0 <__assert_fail@plt+0x12e68>
   243a4:	ldr	r0, [sp, #12]
   243a8:	movw	r1, #0
   243ac:	strb	r1, [r0]
   243b0:	movw	r0, #22
   243b4:	str	r0, [fp, #-4]
   243b8:	b	24438 <__assert_fail@plt+0x12ef0>
   243bc:	ldr	r0, [sp, #4]
   243c0:	bl	113c8 <strlen@plt>
   243c4:	str	r0, [sp]
   243c8:	ldr	r0, [sp]
   243cc:	ldr	r1, [sp, #8]
   243d0:	cmp	r0, r1
   243d4:	bcs	243f8 <__assert_fail@plt+0x12eb0>
   243d8:	ldr	r0, [sp, #12]
   243dc:	ldr	r1, [sp, #4]
   243e0:	ldr	r2, [sp]
   243e4:	add	r2, r2, #1
   243e8:	bl	1129c <memcpy@plt>
   243ec:	movw	r0, #0
   243f0:	str	r0, [fp, #-4]
   243f4:	b	24438 <__assert_fail@plt+0x12ef0>
   243f8:	ldr	r0, [sp, #8]
   243fc:	cmp	r0, #0
   24400:	bls	24430 <__assert_fail@plt+0x12ee8>
   24404:	ldr	r0, [sp, #12]
   24408:	ldr	r1, [sp, #4]
   2440c:	ldr	r2, [sp, #8]
   24410:	sub	r2, r2, #1
   24414:	bl	1129c <memcpy@plt>
   24418:	ldr	r0, [sp, #12]
   2441c:	ldr	r1, [sp, #8]
   24420:	sub	r1, r1, #1
   24424:	add	r0, r0, r1
   24428:	movw	r1, #0
   2442c:	strb	r1, [r0]
   24430:	movw	r0, #34	; 0x22
   24434:	str	r0, [fp, #-4]
   24438:	ldr	r0, [fp, #-4]
   2443c:	mov	sp, fp
   24440:	pop	{fp, pc}
   24444:	push	{fp, lr}
   24448:	mov	fp, sp
   2444c:	sub	sp, sp, #8
   24450:	str	r0, [sp, #4]
   24454:	ldr	r0, [sp, #4]
   24458:	bl	24464 <__assert_fail@plt+0x12f1c>
   2445c:	mov	sp, fp
   24460:	pop	{fp, pc}
   24464:	push	{fp, lr}
   24468:	mov	fp, sp
   2446c:	sub	sp, sp, #8
   24470:	str	r0, [sp, #4]
   24474:	ldr	r0, [sp, #4]
   24478:	movw	r1, #0
   2447c:	bl	11458 <setlocale@plt>
   24480:	str	r0, [sp]
   24484:	ldr	r0, [sp]
   24488:	mov	sp, fp
   2448c:	pop	{fp, pc}
   24490:	cmp	r3, #0
   24494:	cmpeq	r2, #0
   24498:	bne	244bc <__assert_fail@plt+0x12f74>
   2449c:	cmp	r1, #0
   244a0:	movlt	r1, #-2147483648	; 0x80000000
   244a4:	movlt	r0, #0
   244a8:	blt	244b8 <__assert_fail@plt+0x12f70>
   244ac:	cmpeq	r0, #0
   244b0:	mvnne	r1, #-2147483648	; 0x80000000
   244b4:	mvnne	r0, #0
   244b8:	b	245a0 <__assert_fail@plt+0x13058>
   244bc:	sub	sp, sp, #8
   244c0:	push	{sp, lr}
   244c4:	cmp	r1, #0
   244c8:	blt	244e8 <__assert_fail@plt+0x12fa0>
   244cc:	cmp	r3, #0
   244d0:	blt	2451c <__assert_fail@plt+0x12fd4>
   244d4:	bl	245b0 <__assert_fail@plt+0x13068>
   244d8:	ldr	lr, [sp, #4]
   244dc:	add	sp, sp, #8
   244e0:	pop	{r2, r3}
   244e4:	bx	lr
   244e8:	rsbs	r0, r0, #0
   244ec:	sbc	r1, r1, r1, lsl #1
   244f0:	cmp	r3, #0
   244f4:	blt	24540 <__assert_fail@plt+0x12ff8>
   244f8:	bl	245b0 <__assert_fail@plt+0x13068>
   244fc:	ldr	lr, [sp, #4]
   24500:	add	sp, sp, #8
   24504:	pop	{r2, r3}
   24508:	rsbs	r0, r0, #0
   2450c:	sbc	r1, r1, r1, lsl #1
   24510:	rsbs	r2, r2, #0
   24514:	sbc	r3, r3, r3, lsl #1
   24518:	bx	lr
   2451c:	rsbs	r2, r2, #0
   24520:	sbc	r3, r3, r3, lsl #1
   24524:	bl	245b0 <__assert_fail@plt+0x13068>
   24528:	ldr	lr, [sp, #4]
   2452c:	add	sp, sp, #8
   24530:	pop	{r2, r3}
   24534:	rsbs	r0, r0, #0
   24538:	sbc	r1, r1, r1, lsl #1
   2453c:	bx	lr
   24540:	rsbs	r2, r2, #0
   24544:	sbc	r3, r3, r3, lsl #1
   24548:	bl	245b0 <__assert_fail@plt+0x13068>
   2454c:	ldr	lr, [sp, #4]
   24550:	add	sp, sp, #8
   24554:	pop	{r2, r3}
   24558:	rsbs	r2, r2, #0
   2455c:	sbc	r3, r3, r3, lsl #1
   24560:	bx	lr
   24564:	cmp	r3, #0
   24568:	cmpeq	r2, #0
   2456c:	bne	24584 <__assert_fail@plt+0x1303c>
   24570:	cmp	r1, #0
   24574:	cmpeq	r0, #0
   24578:	mvnne	r1, #0
   2457c:	mvnne	r0, #0
   24580:	b	245a0 <__assert_fail@plt+0x13058>
   24584:	sub	sp, sp, #8
   24588:	push	{sp, lr}
   2458c:	bl	245b0 <__assert_fail@plt+0x13068>
   24590:	ldr	lr, [sp, #4]
   24594:	add	sp, sp, #8
   24598:	pop	{r2, r3}
   2459c:	bx	lr
   245a0:	push	{r1, lr}
   245a4:	mov	r0, #8
   245a8:	bl	11230 <raise@plt>
   245ac:	pop	{r1, pc}
   245b0:	cmp	r1, r3
   245b4:	cmpeq	r0, r2
   245b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   245bc:	mov	r4, r0
   245c0:	movcc	r0, #0
   245c4:	mov	r5, r1
   245c8:	ldr	lr, [sp, #36]	; 0x24
   245cc:	movcc	r1, r0
   245d0:	bcc	246cc <__assert_fail@plt+0x13184>
   245d4:	cmp	r3, #0
   245d8:	clzeq	ip, r2
   245dc:	clzne	ip, r3
   245e0:	addeq	ip, ip, #32
   245e4:	cmp	r5, #0
   245e8:	clzeq	r1, r4
   245ec:	addeq	r1, r1, #32
   245f0:	clzne	r1, r5
   245f4:	sub	ip, ip, r1
   245f8:	sub	sl, ip, #32
   245fc:	lsl	r9, r3, ip
   24600:	rsb	fp, ip, #32
   24604:	orr	r9, r9, r2, lsl sl
   24608:	orr	r9, r9, r2, lsr fp
   2460c:	lsl	r8, r2, ip
   24610:	cmp	r5, r9
   24614:	cmpeq	r4, r8
   24618:	movcc	r0, #0
   2461c:	movcc	r1, r0
   24620:	bcc	2463c <__assert_fail@plt+0x130f4>
   24624:	mov	r0, #1
   24628:	subs	r4, r4, r8
   2462c:	lsl	r1, r0, sl
   24630:	orr	r1, r1, r0, lsr fp
   24634:	lsl	r0, r0, ip
   24638:	sbc	r5, r5, r9
   2463c:	cmp	ip, #0
   24640:	beq	246cc <__assert_fail@plt+0x13184>
   24644:	lsr	r6, r8, #1
   24648:	orr	r6, r6, r9, lsl #31
   2464c:	lsr	r7, r9, #1
   24650:	mov	r2, ip
   24654:	b	24678 <__assert_fail@plt+0x13130>
   24658:	subs	r3, r4, r6
   2465c:	sbc	r8, r5, r7
   24660:	adds	r3, r3, r3
   24664:	adc	r8, r8, r8
   24668:	adds	r4, r3, #1
   2466c:	adc	r5, r8, #0
   24670:	subs	r2, r2, #1
   24674:	beq	24694 <__assert_fail@plt+0x1314c>
   24678:	cmp	r5, r7
   2467c:	cmpeq	r4, r6
   24680:	bcs	24658 <__assert_fail@plt+0x13110>
   24684:	adds	r4, r4, r4
   24688:	adc	r5, r5, r5
   2468c:	subs	r2, r2, #1
   24690:	bne	24678 <__assert_fail@plt+0x13130>
   24694:	lsr	r3, r4, ip
   24698:	orr	r3, r3, r5, lsl fp
   2469c:	lsr	r2, r5, ip
   246a0:	orr	r3, r3, r5, lsr sl
   246a4:	adds	r0, r0, r4
   246a8:	mov	r4, r3
   246ac:	lsl	r3, r2, ip
   246b0:	orr	r3, r3, r4, lsl sl
   246b4:	lsl	ip, r4, ip
   246b8:	orr	r3, r3, r4, lsr fp
   246bc:	adc	r1, r1, r5
   246c0:	subs	r0, r0, ip
   246c4:	mov	r5, r2
   246c8:	sbc	r1, r1, r3
   246cc:	cmp	lr, #0
   246d0:	strdne	r4, [lr]
   246d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   246d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   246dc:	mov	r7, r0
   246e0:	ldr	r6, [pc, #72]	; 24730 <__assert_fail@plt+0x131e8>
   246e4:	ldr	r5, [pc, #72]	; 24734 <__assert_fail@plt+0x131ec>
   246e8:	add	r6, pc, r6
   246ec:	add	r5, pc, r5
   246f0:	sub	r6, r6, r5
   246f4:	mov	r8, r1
   246f8:	mov	r9, r2
   246fc:	bl	111e0 <fstatfs64@plt-0x20>
   24700:	asrs	r6, r6, #2
   24704:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   24708:	mov	r4, #0
   2470c:	add	r4, r4, #1
   24710:	ldr	r3, [r5], #4
   24714:	mov	r2, r9
   24718:	mov	r1, r8
   2471c:	mov	r0, r7
   24720:	blx	r3
   24724:	cmp	r6, r4
   24728:	bne	2470c <__assert_fail@plt+0x131c4>
   2472c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24730:	andeq	r1, r1, ip, lsl r8
   24734:	andeq	r1, r1, r4, lsl r8
   24738:	bx	lr
   2473c:	ldr	r3, [pc, #12]	; 24750 <__assert_fail@plt+0x13208>
   24740:	mov	r1, #0
   24744:	add	r3, pc, r3
   24748:	ldr	r2, [r3]
   2474c:	b	11410 <__cxa_atexit@plt>
   24750:	andeq	r1, r1, r4, ror #19
   24754:	mov	r2, r1
   24758:	mov	r1, r0
   2475c:	mov	r0, #3
   24760:	b	114dc <__xstat64@plt>
   24764:	mov	r2, r1
   24768:	mov	r1, r0
   2476c:	mov	r0, #3
   24770:	b	112fc <__fxstat64@plt>
   24774:	mov	r2, r1
   24778:	mov	r1, r0
   2477c:	mov	r0, #3
   24780:	b	11518 <__lxstat64@plt>
   24784:	push	{lr}		; (str lr, [sp, #-4]!)
   24788:	sub	sp, sp, #12
   2478c:	str	r3, [sp]
   24790:	mov	r3, r2
   24794:	mov	r2, r1
   24798:	mov	r1, r0
   2479c:	mov	r0, #3
   247a0:	bl	112e4 <__fxstatat64@plt>
   247a4:	add	sp, sp, #12
   247a8:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

000247ac <.fini>:
   247ac:	push	{r3, lr}
   247b0:	pop	{r3, pc}
