
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uql:     file format elf32-littlearm


Disassembly of section .init:

00014e10 <.init>:
   14e10:	push	{r3, lr}
   14e14:	bl	14f8c <_start@@Base+0x3c>
   14e18:	pop	{r3, pc}

Disassembly of section .plt:

00014e1c <raise@plt-0x14>:
   14e1c:	push	{lr}		; (str lr, [sp, #-4]!)
   14e20:	ldr	lr, [pc, #4]	; 14e2c <raise@plt-0x4>
   14e24:	add	lr, pc, lr
   14e28:	ldr	pc, [lr, #8]!
   14e2c:	ldrdeq	fp, [r4], -r4

00014e30 <raise@plt>:
   14e30:	add	ip, pc, #0, 12
   14e34:	add	ip, ip, #307200	; 0x4b000
   14e38:	ldr	pc, [ip, #468]!	; 0x1d4

00014e3c <strcmp@plt>:
   14e3c:	add	ip, pc, #0, 12
   14e40:	add	ip, ip, #307200	; 0x4b000
   14e44:	ldr	pc, [ip, #460]!	; 0x1cc

00014e48 <memmove@plt>:
   14e48:	add	ip, pc, #0, 12
   14e4c:	add	ip, ip, #307200	; 0x4b000
   14e50:	ldr	pc, [ip, #452]!	; 0x1c4

00014e54 <free@plt>:
   14e54:	add	ip, pc, #0, 12
   14e58:	add	ip, ip, #307200	; 0x4b000
   14e5c:	ldr	pc, [ip, #444]!	; 0x1bc

00014e60 <memcpy@plt>:
   14e60:	add	ip, pc, #0, 12
   14e64:	add	ip, ip, #307200	; 0x4b000
   14e68:	ldr	pc, [ip, #436]!	; 0x1b4

00014e6c <memcmp@plt>:
   14e6c:	add	ip, pc, #0, 12
   14e70:	add	ip, ip, #307200	; 0x4b000
   14e74:	ldr	pc, [ip, #428]!	; 0x1ac

00014e78 <__isinff@plt>:
   14e78:	add	ip, pc, #0, 12
   14e7c:	add	ip, ip, #307200	; 0x4b000
   14e80:	ldr	pc, [ip, #420]!	; 0x1a4

00014e84 <__isinf@plt>:
   14e84:	add	ip, pc, #0, 12
   14e88:	add	ip, ip, #307200	; 0x4b000
   14e8c:	ldr	pc, [ip, #412]!	; 0x19c

00014e90 <realloc@plt>:
   14e90:	add	ip, pc, #0, 12
   14e94:	add	ip, ip, #307200	; 0x4b000
   14e98:	ldr	pc, [ip, #404]!	; 0x194

00014e9c <fwrite@plt>:
   14e9c:	add	ip, pc, #0, 12
   14ea0:	add	ip, ip, #307200	; 0x4b000
   14ea4:	ldr	pc, [ip, #396]!	; 0x18c

00014ea8 <malloc@plt>:
   14ea8:	add	ip, pc, #0, 12
   14eac:	add	ip, ip, #307200	; 0x4b000
   14eb0:	ldr	pc, [ip, #388]!	; 0x184

00014eb4 <__libc_start_main@plt>:
   14eb4:	add	ip, pc, #0, 12
   14eb8:	add	ip, ip, #307200	; 0x4b000
   14ebc:	ldr	pc, [ip, #380]!	; 0x17c

00014ec0 <__gmon_start__@plt>:
   14ec0:	add	ip, pc, #0, 12
   14ec4:	add	ip, ip, #307200	; 0x4b000
   14ec8:	ldr	pc, [ip, #372]!	; 0x174

00014ecc <strlen@plt>:
   14ecc:	add	ip, pc, #0, 12
   14ed0:	add	ip, ip, #307200	; 0x4b000
   14ed4:	ldr	pc, [ip, #364]!	; 0x16c

00014ed8 <fprintf@plt>:
   14ed8:	add	ip, pc, #0, 12
   14edc:	add	ip, ip, #307200	; 0x4b000
   14ee0:	ldr	pc, [ip, #356]!	; 0x164

00014ee4 <posix_memalign@plt>:
   14ee4:	add	ip, pc, #0, 12
   14ee8:	add	ip, ip, #307200	; 0x4b000
   14eec:	ldr	pc, [ip, #348]!	; 0x15c

00014ef0 <memset@plt>:
   14ef0:	add	ip, pc, #0, 12
   14ef4:	add	ip, ip, #307200	; 0x4b000
   14ef8:	ldr	pc, [ip, #340]!	; 0x154

00014efc <strncpy@plt>:
   14efc:	add	ip, pc, #0, 12
   14f00:	add	ip, ip, #307200	; 0x4b000
   14f04:	ldr	pc, [ip, #332]!	; 0x14c

00014f08 <strtod@plt>:
   14f08:	add	ip, pc, #0, 12
   14f0c:	add	ip, ip, #307200	; 0x4b000
   14f10:	ldr	pc, [ip, #324]!	; 0x144

00014f14 <memchr@plt>:
   14f14:	add	ip, pc, #0, 12
   14f18:	add	ip, ip, #307200	; 0x4b000
   14f1c:	ldr	pc, [ip, #316]!	; 0x13c

00014f20 <fputc@plt>:
   14f20:	add	ip, pc, #0, 12
   14f24:	add	ip, ip, #307200	; 0x4b000
   14f28:	ldr	pc, [ip, #308]!	; 0x134

00014f2c <sprintf@plt>:
   14f2c:	add	ip, pc, #0, 12
   14f30:	add	ip, ip, #307200	; 0x4b000
   14f34:	ldr	pc, [ip, #300]!	; 0x12c

00014f38 <abort@plt>:
   14f38:	add	ip, pc, #0, 12
   14f3c:	add	ip, ip, #307200	; 0x4b000
   14f40:	ldr	pc, [ip, #292]!	; 0x124

00014f44 <__assert_fail@plt>:
   14f44:	add	ip, pc, #0, 12
   14f48:	add	ip, ip, #307200	; 0x4b000
   14f4c:	ldr	pc, [ip, #284]!	; 0x11c

Disassembly of section .text:

00014f50 <_start@@Base>:
   14f50:	mov	fp, #0
   14f54:	mov	lr, #0
   14f58:	pop	{r1}		; (ldr r1, [sp], #4)
   14f5c:	mov	r2, sp
   14f60:	push	{r2}		; (str r2, [sp, #-4]!)
   14f64:	push	{r0}		; (str r0, [sp, #-4]!)
   14f68:	ldr	ip, [pc, #16]	; 14f80 <_start@@Base+0x30>
   14f6c:	push	{ip}		; (str ip, [sp, #-4]!)
   14f70:	ldr	r0, [pc, #12]	; 14f84 <_start@@Base+0x34>
   14f74:	ldr	r3, [pc, #12]	; 14f88 <_start@@Base+0x38>
   14f78:	bl	14eb4 <__libc_start_main@plt>
   14f7c:	bl	14f38 <abort@plt>
   14f80:	andeq	r8, r4, r0, asr #14
   14f84:	muleq	r1, ip, r0
   14f88:	andeq	r8, r4, r0, ror #13
   14f8c:	ldr	r3, [pc, #20]	; 14fa8 <_start@@Base+0x58>
   14f90:	ldr	r2, [pc, #20]	; 14fac <_start@@Base+0x5c>
   14f94:	add	r3, pc, r3
   14f98:	ldr	r2, [r3, r2]
   14f9c:	cmp	r2, #0
   14fa0:	bxeq	lr
   14fa4:	b	14ec0 <__gmon_start__@plt>
   14fa8:	andeq	fp, r4, r4, rrx
   14fac:	andeq	r0, r0, ip, rrx
   14fb0:	ldr	r0, [pc, #24]	; 14fd0 <_start@@Base+0x80>
   14fb4:	ldr	r3, [pc, #24]	; 14fd4 <_start@@Base+0x84>
   14fb8:	cmp	r3, r0
   14fbc:	bxeq	lr
   14fc0:	ldr	r3, [pc, #16]	; 14fd8 <_start@@Base+0x88>
   14fc4:	cmp	r3, #0
   14fc8:	bxeq	lr
   14fcc:	bx	r3
   14fd0:	andeq	r0, r6, r4, asr #6
   14fd4:	andeq	r0, r6, r4, asr #6
   14fd8:	andeq	r0, r0, r0
   14fdc:	ldr	r0, [pc, #36]	; 15008 <_start@@Base+0xb8>
   14fe0:	ldr	r1, [pc, #36]	; 1500c <_start@@Base+0xbc>
   14fe4:	sub	r1, r1, r0
   14fe8:	asr	r1, r1, #2
   14fec:	add	r1, r1, r1, lsr #31
   14ff0:	asrs	r1, r1, #1
   14ff4:	bxeq	lr
   14ff8:	ldr	r3, [pc, #16]	; 15010 <_start@@Base+0xc0>
   14ffc:	cmp	r3, #0
   15000:	bxeq	lr
   15004:	bx	r3
   15008:	andeq	r0, r6, r4, asr #6
   1500c:	andeq	r0, r6, r4, asr #6
   15010:	andeq	r0, r0, r0
   15014:	push	{r4, lr}
   15018:	ldr	r4, [pc, #24]	; 15038 <_start@@Base+0xe8>
   1501c:	ldrb	r3, [r4]
   15020:	cmp	r3, #0
   15024:	popne	{r4, pc}
   15028:	bl	14fb0 <_start@@Base+0x60>
   1502c:	mov	r3, #1
   15030:	strb	r3, [r4]
   15034:	pop	{r4, pc}
   15038:	andeq	r0, r6, r0, asr r3
   1503c:	b	14fdc <_start@@Base+0x8c>

00015040 <test_json@@Base>:
   15040:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15044:	add	fp, sp, #28
   15048:	sub	sp, sp, #372	; 0x174
   1504c:	mov	r6, r0
   15050:	add	r0, sp, #108	; 0x6c
   15054:	mov	r7, r3
   15058:	mov	r9, r2
   1505c:	mov	r4, r1
   15060:	bl	2fd80 <flatcc_builder_init@@Base>
   15064:	add	r0, sp, #16
   15068:	mov	r1, #0
   1506c:	bl	47c10 <flatcc_json_printer_init_dynamic_buffer@@Base>
   15070:	ldr	r0, [fp, #12]
   15074:	ldr	r5, [fp, #8]
   15078:	ldr	r8, [fp, #16]
   1507c:	and	r1, r0, #1
   15080:	tst	r0, #16
   15084:	strb	r1, [sp, #42]	; 0x2a
   15088:	uxtb	r1, r0
   1508c:	ubfx	r2, r1, #1, #1
   15090:	strb	r2, [sp, #43]	; 0x2b
   15094:	ubfx	r2, r1, #2, #1
   15098:	strb	r2, [sp, #44]	; 0x2c
   1509c:	ubfx	r1, r1, #3, #1
   150a0:	strb	r1, [sp, #45]	; 0x2d
   150a4:	movne	r1, #2
   150a8:	strbne	r1, [sp, #41]	; 0x29
   150ac:	tst	r0, #32
   150b0:	movne	r0, #0
   150b4:	strbne	r0, [sp, #43]	; 0x2b
   150b8:	movwne	r0, #258	; 0x102
   150bc:	strhne	r0, [sp, #41]	; 0x29
   150c0:	mov	r0, r4
   150c4:	bl	14ecc <strlen@plt>
   150c8:	mov	r3, r0
   150cc:	ldm	r6, {r0, r1}
   150d0:	str	r5, [sp]
   150d4:	mov	r2, r4
   150d8:	stmib	sp, {r0, r1}
   150dc:	add	r0, sp, #108	; 0x6c
   150e0:	add	r1, sp, #64	; 0x40
   150e4:	bl	3b0c0 <flatcc_json_parser_table_as_root@@Base>
   150e8:	cmp	r0, r7
   150ec:	bne	1519c <test_json@@Base+0x15c>
   150f0:	mov	r5, #0
   150f4:	cmp	r7, #0
   150f8:	beq	15104 <test_json@@Base+0xc4>
   150fc:	mov	r4, #0
   15100:	b	15178 <test_json@@Base+0x138>
   15104:	add	r0, sp, #108	; 0x6c
   15108:	sub	r1, fp, #56	; 0x38
   1510c:	bl	3479c <flatcc_builder_finalize_aligned_buffer@@Base>
   15110:	ldr	r2, [r6]
   15114:	ldr	r3, [r6, #12]
   15118:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1511c:	mov	r4, r0
   15120:	bl	35b2c <flatcc_verify_table_as_root@@Base>
   15124:	cmp	r0, #0
   15128:	bne	15260 <test_json@@Base+0x220>
   1512c:	ldr	r0, [r6, #8]
   15130:	ldr	r3, [r6]
   15134:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15138:	add	r6, sp, #16
   1513c:	mov	r1, r4
   15140:	str	r0, [sp]
   15144:	mov	r0, r6
   15148:	bl	472c4 <flatcc_json_printer_table_as_root@@Base>
   1514c:	sub	r1, fp, #60	; 0x3c
   15150:	mov	r0, r6
   15154:	bl	47d3c <flatcc_json_printer_get_buffer@@Base>
   15158:	mov	r6, r0
   1515c:	cmp	r0, #0
   15160:	beq	151d0 <test_json@@Base+0x190>
   15164:	mov	r0, r9
   15168:	mov	r1, r6
   1516c:	bl	14e3c <strcmp@plt>
   15170:	cmp	r0, #0
   15174:	bne	151d0 <test_json@@Base+0x190>
   15178:	mov	r0, r4
   1517c:	bl	348dc <flatcc_builder_aligned_free@@Base>
   15180:	add	r0, sp, #108	; 0x6c
   15184:	bl	30328 <flatcc_builder_clear@@Base>
   15188:	add	r0, sp, #16
   1518c:	bl	47dc4 <flatcc_json_printer_clear@@Base>
   15190:	mov	r0, r5
   15194:	sub	sp, fp, #28
   15198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1519c:	movw	r6, #840	; 0x348
   151a0:	cmp	r7, #0
   151a4:	movt	r6, #6
   151a8:	beq	1523c <test_json@@Base+0x1fc>
   151ac:	ldr	r5, [r6]
   151b0:	cmp	r0, #0
   151b4:	bne	153b8 <test_json@@Base+0x378>
   151b8:	mov	r0, r7
   151bc:	bl	36d80 <flatcc_json_parser_error_string@@Base>
   151c0:	movw	r1, #34682	; 0x877a
   151c4:	mov	r3, r0
   151c8:	movt	r1, #4
   151cc:	b	15250 <test_json@@Base+0x210>
   151d0:	movw	r7, #840	; 0x348
   151d4:	movw	r1, #34896	; 0x8850
   151d8:	mov	r2, r8
   151dc:	movt	r7, #6
   151e0:	movt	r1, #4
   151e4:	ldr	r0, [r7]
   151e8:	bl	14ed8 <fprintf@plt>
   151ec:	ldr	r0, [r7]
   151f0:	movw	r5, #48951	; 0xbf37
   151f4:	mov	r2, r6
   151f8:	movt	r5, #4
   151fc:	mov	r1, r5
   15200:	bl	14ed8 <fprintf@plt>
   15204:	ldr	r3, [r7]
   15208:	movw	r0, #34949	; 0x8885
   1520c:	mov	r1, #10
   15210:	mov	r2, #1
   15214:	movt	r0, #4
   15218:	bl	14e9c <fwrite@plt>
   1521c:	ldr	r0, [r7]
   15220:	mov	r1, r5
   15224:	mov	r2, r9
   15228:	bl	14ed8 <fprintf@plt>
   1522c:	mvn	r5, #0
   15230:	cmp	r4, #0
   15234:	beq	150fc <test_json@@Base+0xbc>
   15238:	b	1529c <test_json@@Base+0x25c>
   1523c:	ldr	r5, [r6]
   15240:	bl	36d80 <flatcc_json_parser_error_string@@Base>
   15244:	movw	r1, #34746	; 0x87ba
   15248:	mov	r3, r0
   1524c:	movt	r1, #4
   15250:	mov	r0, r5
   15254:	mov	r2, r8
   15258:	bl	14ed8 <fprintf@plt>
   1525c:	b	153f4 <test_json@@Base+0x3b4>
   15260:	movw	r1, #840	; 0x348
   15264:	movt	r1, #6
   15268:	ldr	r5, [r1]
   1526c:	bl	34ea8 <flatcc_verify_error_string@@Base>
   15270:	movw	r1, #34782	; 0x87de
   15274:	movw	r2, #34821	; 0x8805
   15278:	str	r0, [sp]
   1527c:	mov	r0, r5
   15280:	mov	r3, r8
   15284:	movt	r1, #4
   15288:	movt	r2, #4
   1528c:	bl	14ed8 <fprintf@plt>
   15290:	mvn	r5, #0
   15294:	cmp	r4, #0
   15298:	beq	150fc <test_json@@Base+0xbc>
   1529c:	movw	r0, #840	; 0x348
   152a0:	ldr	r9, [fp, #-56]	; 0xffffffc8
   152a4:	movw	r1, #48944	; 0xbf30
   152a8:	movw	r2, #34960	; 0x8890
   152ac:	movt	r0, #6
   152b0:	movt	r1, #4
   152b4:	movt	r2, #4
   152b8:	ldr	r6, [r0]
   152bc:	mov	r0, r6
   152c0:	bl	14ed8 <fprintf@plt>
   152c4:	cmp	r9, #0
   152c8:	beq	153a0 <test_json@@Base+0x360>
   152cc:	sub	r7, fp, #49	; 0x31
   152d0:	mov	r8, #0
   152d4:	ands	sl, r8, #15
   152d8:	bne	15310 <test_json@@Base+0x2d0>
   152dc:	cmp	r8, #0
   152e0:	beq	152f8 <test_json@@Base+0x2b8>
   152e4:	movw	r1, #48949	; 0xbf35
   152e8:	mov	r0, r6
   152ec:	mov	r2, r7
   152f0:	movt	r1, #4
   152f4:	bl	14ed8 <fprintf@plt>
   152f8:	movw	r1, #48955	; 0xbf3b
   152fc:	mov	r0, r6
   15300:	mov	r2, r8
   15304:	movt	r1, #4
   15308:	bl	14ed8 <fprintf@plt>
   1530c:	b	15324 <test_json@@Base+0x2e4>
   15310:	tst	r8, #7
   15314:	bne	15324 <test_json@@Base+0x2e4>
   15318:	mov	r0, #32
   1531c:	mov	r1, r6
   15320:	bl	14f20 <fputc@plt>
   15324:	ldrb	r2, [r4, r8]
   15328:	movw	r1, #48963	; 0xbf43
   1532c:	mov	r0, r6
   15330:	movt	r1, #4
   15334:	bl	14ed8 <fprintf@plt>
   15338:	ldrb	r0, [r4, r8]
   1533c:	add	r8, r8, #1
   15340:	sub	r1, r0, #32
   15344:	uxtb	r1, r1
   15348:	cmp	r1, #94	; 0x5e
   1534c:	mov	r1, #0
   15350:	movwhi	r0, #46	; 0x2e
   15354:	cmp	r9, r8
   15358:	strb	r0, [r7, sl]
   1535c:	add	r0, r7, sl
   15360:	strb	r1, [r0, #1]
   15364:	bne	152d4 <test_json@@Base+0x294>
   15368:	tst	r9, #15
   1536c:	beq	153a0 <test_json@@Base+0x360>
   15370:	movw	r8, #48969	; 0xbf49
   15374:	add	r7, r9, #1
   15378:	movt	r8, #4
   1537c:	mov	r0, r8
   15380:	mov	r1, #3
   15384:	mov	r2, #1
   15388:	mov	r3, r6
   1538c:	bl	14e9c <fwrite@plt>
   15390:	add	r0, r7, #1
   15394:	tst	r7, #15
   15398:	mov	r7, r0
   1539c:	bne	1537c <test_json@@Base+0x33c>
   153a0:	movw	r1, #48949	; 0xbf35
   153a4:	sub	r2, fp, #49	; 0x31
   153a8:	mov	r0, r6
   153ac:	movt	r1, #4
   153b0:	bl	14ed8 <fprintf@plt>
   153b4:	b	15178 <test_json@@Base+0x138>
   153b8:	bl	36d80 <flatcc_json_parser_error_string@@Base>
   153bc:	movw	r1, #34644	; 0x8754
   153c0:	mov	r3, r0
   153c4:	mov	r0, r5
   153c8:	mov	r2, r8
   153cc:	movt	r1, #4
   153d0:	bl	14ed8 <fprintf@plt>
   153d4:	ldr	r5, [r6]
   153d8:	mov	r0, r7
   153dc:	bl	36d80 <flatcc_json_parser_error_string@@Base>
   153e0:	movw	r1, #34715	; 0x879b
   153e4:	mov	r2, r0
   153e8:	mov	r0, r5
   153ec:	movt	r1, #4
   153f0:	bl	14ed8 <fprintf@plt>
   153f4:	ldr	r0, [r6]
   153f8:	movw	r1, #48951	; 0xbf37
   153fc:	mov	r2, r4
   15400:	movt	r1, #4
   15404:	bl	14ed8 <fprintf@plt>
   15408:	movw	r4, #840	; 0x348
   1540c:	ldr	r0, [sp, #84]	; 0x54
   15410:	movt	r4, #6
   15414:	ldr	r3, [r4]
   15418:	cmp	r0, #2
   1541c:	blt	15448 <test_json@@Base+0x408>
   15420:	mov	r5, #0
   15424:	mov	r0, #32
   15428:	mov	r1, r3
   1542c:	bl	14f20 <fputc@plt>
   15430:	ldr	r0, [sp, #84]	; 0x54
   15434:	ldr	r3, [r4]
   15438:	add	r5, r5, #1
   1543c:	sub	r0, r0, #1
   15440:	cmp	r5, r0
   15444:	blt	15424 <test_json@@Base+0x3e4>
   15448:	movw	r0, #34779	; 0x87db
   1544c:	mov	r1, #2
   15450:	mov	r2, #1
   15454:	movt	r0, #4
   15458:	bl	14e9c <fwrite@plt>
   1545c:	mvn	r5, #0
   15460:	b	150fc <test_json@@Base+0xbc>

00015464 <edge_case_tests@@Base>:
   15464:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15468:	add	fp, sp, #28
   1546c:	sub	sp, sp, #60	; 0x3c
   15470:	movw	r4, #49904	; 0xc2f0
   15474:	movw	r1, #34974	; 0x889e
   15478:	movw	r2, #35023	; 0x88cf
   1547c:	mov	r0, #155	; 0x9b
   15480:	mov	sl, #0
   15484:	mov	r3, #0
   15488:	movt	r4, #4
   1548c:	str	r0, [sp, #8]
   15490:	movt	r1, #4
   15494:	movt	r2, #4
   15498:	str	sl, [sp]
   1549c:	str	sl, [sp, #4]
   154a0:	mov	r0, r4
   154a4:	bl	15040 <test_json@@Base>
   154a8:	movw	r5, #35053	; 0x88ed
   154ac:	movw	r8, #35086	; 0x890e
   154b0:	str	r0, [fp, #-32]	; 0xffffffe0
   154b4:	mov	r9, #2
   154b8:	mov	r0, #168	; 0xa8
   154bc:	mov	r3, #0
   154c0:	movt	r5, #4
   154c4:	movt	r8, #4
   154c8:	stm	sp, {r9, sl}
   154cc:	str	r0, [sp, #8]
   154d0:	mov	r0, r4
   154d4:	mov	r1, r5
   154d8:	mov	r2, r8
   154dc:	bl	15040 <test_json@@Base>
   154e0:	movw	r1, #35120	; 0x8930
   154e4:	movw	r2, #35159	; 0x8957
   154e8:	str	r0, [fp, #-36]	; 0xffffffdc
   154ec:	mov	r0, #172	; 0xac
   154f0:	mov	r3, #0
   154f4:	str	sl, [sp]
   154f8:	str	r9, [sp, #4]
   154fc:	str	r0, [sp, #8]
   15500:	movt	r1, #4
   15504:	movt	r2, #4
   15508:	mov	r0, r4
   1550c:	bl	15040 <test_json@@Base>
   15510:	movw	r2, #35188	; 0x8974
   15514:	str	r0, [fp, #-40]	; 0xffffffd8
   15518:	mov	r0, #176	; 0xb0
   1551c:	mov	r1, #4
   15520:	mov	r3, #0
   15524:	str	r9, [sp]
   15528:	str	r1, [sp, #4]
   1552c:	str	r0, [sp, #8]
   15530:	movt	r2, #4
   15534:	mov	r0, r4
   15538:	mov	r1, r5
   1553c:	bl	15040 <test_json@@Base>
   15540:	mov	r1, #8
   15544:	movw	r2, #35241	; 0x89a9
   15548:	str	r0, [sp, #44]	; 0x2c
   1554c:	mov	r0, #180	; 0xb4
   15550:	mov	r3, #0
   15554:	str	sl, [sp]
   15558:	str	r1, [sp, #4]
   1555c:	movw	r1, #35207	; 0x8987
   15560:	str	r0, [sp, #8]
   15564:	movt	r2, #4
   15568:	mov	r0, r4
   1556c:	movt	r1, #4
   15570:	bl	15040 <test_json@@Base>
   15574:	str	r0, [sp, #40]	; 0x28
   15578:	movw	r1, #35515	; 0x8abb
   1557c:	mov	r0, #195	; 0xc3
   15580:	stm	sp, {r9, sl}
   15584:	mov	r2, r8
   15588:	mov	r3, #0
   1558c:	str	r0, [sp, #8]
   15590:	movt	r1, #4
   15594:	mov	r0, r4
   15598:	bl	15040 <test_json@@Base>
   1559c:	movw	r5, #35553	; 0x8ae1
   155a0:	movw	r7, #35603	; 0x8b13
   155a4:	str	r0, [sp, #36]	; 0x24
   155a8:	mov	r6, #1
   155ac:	mov	r0, #199	; 0xc7
   155b0:	mov	r3, #0
   155b4:	movt	r5, #4
   155b8:	movt	r7, #4
   155bc:	stm	sp, {r6, sl}
   155c0:	str	r0, [sp, #8]
   155c4:	mov	r0, r4
   155c8:	mov	r1, r5
   155cc:	mov	r2, r7
   155d0:	bl	15040 <test_json@@Base>
   155d4:	movw	r2, #35630	; 0x8b2e
   155d8:	str	r0, [sp, #32]
   155dc:	mov	r0, #203	; 0xcb
   155e0:	mov	r1, r5
   155e4:	mov	r3, #0
   155e8:	str	r6, [sp]
   155ec:	str	r6, [sp, #4]
   155f0:	str	r0, [sp, #8]
   155f4:	movt	r2, #4
   155f8:	mov	r0, r4
   155fc:	bl	15040 <test_json@@Base>
   15600:	str	r0, [sp, #28]
   15604:	movw	r1, #35653	; 0x8b45
   15608:	mov	r0, #209	; 0xd1
   1560c:	stm	sp, {r6, sl}
   15610:	mov	r2, r7
   15614:	mov	r3, #0
   15618:	str	r0, [sp, #8]
   1561c:	movt	r1, #4
   15620:	mov	r0, r4
   15624:	bl	15040 <test_json@@Base>
   15628:	movw	r5, #35766	; 0x8bb6
   1562c:	str	r0, [sp, #24]
   15630:	mov	r0, #217	; 0xd9
   15634:	stm	sp, {r9, sl}
   15638:	mov	r2, r8
   1563c:	mov	r3, #0
   15640:	movt	r5, #4
   15644:	str	r0, [sp, #8]
   15648:	mov	r0, r4
   1564c:	mov	r1, r5
   15650:	bl	15040 <test_json@@Base>
   15654:	movw	r1, #35795	; 0x8bd3
   15658:	movw	r2, #35159	; 0x8957
   1565c:	str	r0, [sp, #20]
   15660:	mov	r0, #221	; 0xdd
   15664:	mov	r3, #0
   15668:	str	sl, [sp]
   1566c:	str	r9, [sp, #4]
   15670:	str	r0, [sp, #8]
   15674:	movt	r1, #4
   15678:	mov	r0, r4
   1567c:	movt	r2, #4
   15680:	bl	15040 <test_json@@Base>
   15684:	movw	r2, #35188	; 0x8974
   15688:	str	r0, [sp, #16]
   1568c:	mov	r0, #225	; 0xe1
   15690:	mov	r1, #4
   15694:	mov	r3, #0
   15698:	str	r9, [sp]
   1569c:	str	r1, [sp, #4]
   156a0:	str	r0, [sp, #8]
   156a4:	mov	r0, r4
   156a8:	mov	r1, r5
   156ac:	movt	r2, #4
   156b0:	bl	15040 <test_json@@Base>
   156b4:	mov	r1, #8
   156b8:	movw	r2, #35847	; 0x8c07
   156bc:	str	r0, [sp, #12]
   156c0:	mov	r0, #229	; 0xe5
   156c4:	mov	r3, #0
   156c8:	str	sl, [sp]
   156cc:	str	r1, [sp, #4]
   156d0:	movw	r1, #35828	; 0x8bf4
   156d4:	str	r0, [sp, #8]
   156d8:	movt	r2, #4
   156dc:	mov	r0, r4
   156e0:	movt	r1, #4
   156e4:	bl	15040 <test_json@@Base>
   156e8:	movw	r1, #36126	; 0x8d1e
   156ec:	mov	r5, r0
   156f0:	mov	r0, #233	; 0xe9
   156f4:	stm	sp, {r9, sl}
   156f8:	mov	r2, r8
   156fc:	mov	r3, #0
   15700:	str	r0, [sp, #8]
   15704:	movt	r1, #4
   15708:	mov	r0, r4
   1570c:	bl	15040 <test_json@@Base>
   15710:	movw	r9, #36158	; 0x8d3e
   15714:	movw	r2, #35603	; 0x8b13
   15718:	mov	r8, r0
   1571c:	mov	r0, #237	; 0xed
   15720:	stm	sp, {r6, sl}
   15724:	mov	r3, #0
   15728:	movt	r9, #4
   1572c:	str	r0, [sp, #8]
   15730:	mov	r0, r4
   15734:	movt	r2, #4
   15738:	mov	r1, r9
   1573c:	bl	15040 <test_json@@Base>
   15740:	movw	r2, #35630	; 0x8b2e
   15744:	mov	r7, r0
   15748:	mov	r0, #241	; 0xf1
   1574c:	mov	r1, r9
   15750:	mov	r3, #0
   15754:	str	r6, [sp]
   15758:	str	r6, [sp, #4]
   1575c:	str	r0, [sp, #8]
   15760:	mov	r0, r4
   15764:	movt	r2, #4
   15768:	bl	15040 <test_json@@Base>
   1576c:	stm	sp, {r6, sl}
   15770:	mov	r1, #247	; 0xf7
   15774:	mov	r3, #0
   15778:	str	r1, [sp, #8]
   1577c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15780:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15784:	orr	r1, r2, r1
   15788:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1578c:	orr	r1, r1, r2
   15790:	ldr	r2, [sp, #44]	; 0x2c
   15794:	orr	r1, r1, r2
   15798:	ldr	r2, [sp, #40]	; 0x28
   1579c:	orr	r1, r1, r2
   157a0:	ldr	r2, [sp, #36]	; 0x24
   157a4:	orr	r1, r1, r2
   157a8:	ldr	r2, [sp, #32]
   157ac:	orr	r1, r1, r2
   157b0:	ldr	r2, [sp, #28]
   157b4:	orr	r1, r1, r2
   157b8:	ldr	r2, [sp, #24]
   157bc:	orr	r1, r1, r2
   157c0:	ldr	r2, [sp, #20]
   157c4:	orr	r1, r1, r2
   157c8:	ldr	r2, [sp, #16]
   157cc:	orr	r1, r1, r2
   157d0:	ldr	r2, [sp, #12]
   157d4:	orr	r1, r1, r2
   157d8:	movw	r2, #35603	; 0x8b13
   157dc:	orr	r1, r1, r5
   157e0:	movt	r2, #4
   157e4:	orr	r1, r1, r8
   157e8:	orr	r1, r1, r7
   157ec:	orr	r5, r1, r0
   157f0:	movw	r1, #36200	; 0x8d68
   157f4:	mov	r0, r4
   157f8:	movt	r1, #4
   157fc:	bl	15040 <test_json@@Base>
   15800:	orr	r0, r5, r0
   15804:	sub	sp, fp, #28
   15808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001580c <error_case_tests@@Base>:
   1580c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15810:	add	fp, sp, #28
   15814:	sub	sp, sp, #60	; 0x3c
   15818:	movw	r4, #49904	; 0xc2f0
   1581c:	movw	r1, #36295	; 0x8dc7
   15820:	movw	r0, #285	; 0x11d
   15824:	mov	r6, #0
   15828:	mov	r2, #0
   1582c:	mov	r3, #13
   15830:	movt	r4, #4
   15834:	str	r0, [sp, #8]
   15838:	movt	r1, #4
   1583c:	str	r6, [sp]
   15840:	str	r6, [sp, #4]
   15844:	mov	r0, r4
   15848:	bl	15040 <test_json@@Base>
   1584c:	movw	r1, #36321	; 0x8de1
   15850:	str	r0, [fp, #-32]	; 0xffffffe0
   15854:	movw	r0, #287	; 0x11f
   15858:	mov	r2, #0
   1585c:	mov	r3, #13
   15860:	str	r6, [sp]
   15864:	str	r6, [sp, #4]
   15868:	str	r0, [sp, #8]
   1586c:	movt	r1, #4
   15870:	mov	r0, r4
   15874:	bl	15040 <test_json@@Base>
   15878:	movw	r1, #36418	; 0x8e42
   1587c:	str	r0, [fp, #-36]	; 0xffffffdc
   15880:	movw	r0, #289	; 0x121
   15884:	mov	r2, #0
   15888:	mov	r3, #13
   1588c:	str	r6, [sp]
   15890:	str	r6, [sp, #4]
   15894:	str	r0, [sp, #8]
   15898:	movt	r1, #4
   1589c:	mov	r0, r4
   158a0:	bl	15040 <test_json@@Base>
   158a4:	movw	r1, #36512	; 0x8ea0
   158a8:	str	r0, [fp, #-40]	; 0xffffffd8
   158ac:	movw	r0, #291	; 0x123
   158b0:	mov	r2, #0
   158b4:	mov	r3, #13
   158b8:	str	r6, [sp]
   158bc:	str	r6, [sp, #4]
   158c0:	str	r0, [sp, #8]
   158c4:	movt	r1, #4
   158c8:	mov	r0, r4
   158cc:	bl	15040 <test_json@@Base>
   158d0:	movw	r1, #36600	; 0x8ef8
   158d4:	str	r0, [sp, #44]	; 0x2c
   158d8:	movw	r0, #293	; 0x125
   158dc:	mov	r2, #0
   158e0:	mov	r3, #13
   158e4:	str	r6, [sp]
   158e8:	str	r6, [sp, #4]
   158ec:	str	r0, [sp, #8]
   158f0:	movt	r1, #4
   158f4:	mov	r0, r4
   158f8:	bl	15040 <test_json@@Base>
   158fc:	movw	r1, #36685	; 0x8f4d
   15900:	str	r0, [sp, #40]	; 0x28
   15904:	mov	r0, #296	; 0x128
   15908:	mov	r2, #0
   1590c:	mov	r3, #13
   15910:	str	r6, [sp]
   15914:	str	r6, [sp, #4]
   15918:	str	r0, [sp, #8]
   1591c:	movt	r1, #4
   15920:	mov	r0, r4
   15924:	bl	15040 <test_json@@Base>
   15928:	movw	r1, #36843	; 0x8feb
   1592c:	str	r0, [sp, #36]	; 0x24
   15930:	movw	r0, #299	; 0x12b
   15934:	mov	r2, #0
   15938:	mov	r3, #13
   1593c:	str	r6, [sp]
   15940:	str	r6, [sp, #4]
   15944:	str	r0, [sp, #8]
   15948:	movt	r1, #4
   1594c:	mov	r0, r4
   15950:	bl	15040 <test_json@@Base>
   15954:	movw	r1, #36998	; 0x9086
   15958:	str	r0, [sp, #32]
   1595c:	movw	r0, #303	; 0x12f
   15960:	mov	r2, #0
   15964:	mov	r3, #13
   15968:	str	r6, [sp]
   1596c:	str	r6, [sp, #4]
   15970:	str	r0, [sp, #8]
   15974:	movt	r1, #4
   15978:	mov	r0, r4
   1597c:	bl	15040 <test_json@@Base>
   15980:	movw	r1, #37197	; 0x914d
   15984:	str	r0, [sp, #28]
   15988:	movw	r0, #307	; 0x133
   1598c:	mov	r2, #0
   15990:	mov	r3, #13
   15994:	str	r6, [sp]
   15998:	str	r6, [sp, #4]
   1599c:	str	r0, [sp, #8]
   159a0:	movt	r1, #4
   159a4:	mov	r0, r4
   159a8:	bl	15040 <test_json@@Base>
   159ac:	movw	r1, #37396	; 0x9214
   159b0:	str	r0, [sp, #24]
   159b4:	movw	r0, #322	; 0x142
   159b8:	mov	r2, #0
   159bc:	mov	r3, #13
   159c0:	str	r6, [sp]
   159c4:	str	r6, [sp, #4]
   159c8:	str	r0, [sp, #8]
   159cc:	movt	r1, #4
   159d0:	mov	r0, r4
   159d4:	bl	15040 <test_json@@Base>
   159d8:	movw	r1, #37420	; 0x922c
   159dc:	str	r0, [sp, #20]
   159e0:	mov	r0, #324	; 0x144
   159e4:	mov	r2, #0
   159e8:	mov	r3, #13
   159ec:	str	r6, [sp]
   159f0:	str	r6, [sp, #4]
   159f4:	str	r0, [sp, #8]
   159f8:	movt	r1, #4
   159fc:	mov	r0, r4
   15a00:	bl	15040 <test_json@@Base>
   15a04:	movw	r1, #37505	; 0x9281
   15a08:	str	r0, [sp, #16]
   15a0c:	movw	r0, #326	; 0x146
   15a10:	mov	r2, #0
   15a14:	mov	r3, #13
   15a18:	str	r6, [sp]
   15a1c:	str	r6, [sp, #4]
   15a20:	str	r0, [sp, #8]
   15a24:	movt	r1, #4
   15a28:	mov	r0, r4
   15a2c:	bl	15040 <test_json@@Base>
   15a30:	movw	r1, #37587	; 0x92d3
   15a34:	mov	r7, r0
   15a38:	mov	r0, #328	; 0x148
   15a3c:	mov	r2, #0
   15a40:	mov	r3, #13
   15a44:	str	r6, [sp]
   15a48:	str	r6, [sp, #4]
   15a4c:	str	r0, [sp, #8]
   15a50:	movt	r1, #4
   15a54:	mov	r0, r4
   15a58:	bl	15040 <test_json@@Base>
   15a5c:	movw	r1, #37667	; 0x9323
   15a60:	mov	r8, r0
   15a64:	movw	r0, #330	; 0x14a
   15a68:	mov	r2, #0
   15a6c:	mov	r3, #13
   15a70:	str	r6, [sp]
   15a74:	str	r6, [sp, #4]
   15a78:	str	r0, [sp, #8]
   15a7c:	movt	r1, #4
   15a80:	mov	r0, r4
   15a84:	bl	15040 <test_json@@Base>
   15a88:	movw	r1, #37744	; 0x9370
   15a8c:	mov	r9, r0
   15a90:	movw	r0, #333	; 0x14d
   15a94:	mov	r2, #0
   15a98:	mov	r3, #13
   15a9c:	str	r6, [sp]
   15aa0:	str	r6, [sp, #4]
   15aa4:	str	r0, [sp, #8]
   15aa8:	movt	r1, #4
   15aac:	mov	r0, r4
   15ab0:	bl	15040 <test_json@@Base>
   15ab4:	movw	r1, #37884	; 0x93fc
   15ab8:	mov	sl, r0
   15abc:	mov	r0, #336	; 0x150
   15ac0:	mov	r2, #0
   15ac4:	mov	r3, #13
   15ac8:	str	r6, [sp]
   15acc:	str	r6, [sp, #4]
   15ad0:	str	r0, [sp, #8]
   15ad4:	movt	r1, #4
   15ad8:	mov	r0, r4
   15adc:	bl	15040 <test_json@@Base>
   15ae0:	movw	r1, #38021	; 0x9485
   15ae4:	mov	r5, r0
   15ae8:	mov	r0, #340	; 0x154
   15aec:	mov	r2, #0
   15af0:	mov	r3, #13
   15af4:	str	r6, [sp]
   15af8:	str	r6, [sp, #4]
   15afc:	str	r0, [sp, #8]
   15b00:	movt	r1, #4
   15b04:	mov	r0, r4
   15b08:	bl	15040 <test_json@@Base>
   15b0c:	mov	r1, #344	; 0x158
   15b10:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15b14:	mov	r3, #13
   15b18:	str	r6, [sp]
   15b1c:	str	r6, [sp, #4]
   15b20:	str	r1, [sp, #8]
   15b24:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15b28:	orr	r1, r2, r1
   15b2c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15b30:	orr	r1, r1, r2
   15b34:	ldr	r2, [sp, #44]	; 0x2c
   15b38:	orr	r1, r1, r2
   15b3c:	ldr	r2, [sp, #40]	; 0x28
   15b40:	orr	r1, r1, r2
   15b44:	ldr	r2, [sp, #36]	; 0x24
   15b48:	orr	r1, r1, r2
   15b4c:	ldr	r2, [sp, #32]
   15b50:	orr	r1, r1, r2
   15b54:	ldr	r2, [sp, #28]
   15b58:	orr	r1, r1, r2
   15b5c:	ldr	r2, [sp, #24]
   15b60:	orr	r1, r1, r2
   15b64:	ldr	r2, [sp, #20]
   15b68:	orr	r1, r1, r2
   15b6c:	ldr	r2, [sp, #16]
   15b70:	orr	r1, r1, r2
   15b74:	mov	r2, #0
   15b78:	orr	r1, r1, r7
   15b7c:	orr	r1, r1, r8
   15b80:	orr	r1, r1, r9
   15b84:	orr	r1, r1, sl
   15b88:	orr	r1, r1, r5
   15b8c:	orr	r5, r1, r0
   15b90:	movw	r1, #38196	; 0x9534
   15b94:	mov	r0, r4
   15b98:	movt	r1, #4
   15b9c:	bl	15040 <test_json@@Base>
   15ba0:	orr	r0, r5, r0
   15ba4:	sub	sp, fp, #28
   15ba8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015bac <base64_tests@@Base>:
   15bac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15bb0:	add	fp, sp, #28
   15bb4:	sub	sp, sp, #28
   15bb8:	movw	r4, #49904	; 0xc2f0
   15bbc:	movw	r1, #38371	; 0x95e3
   15bc0:	movw	r2, #35188	; 0x8974
   15bc4:	movw	r0, #369	; 0x171
   15bc8:	mov	r5, #0
   15bcc:	mov	r3, #0
   15bd0:	movt	r4, #4
   15bd4:	str	r0, [sp, #8]
   15bd8:	movt	r1, #4
   15bdc:	movt	r2, #4
   15be0:	str	r5, [sp]
   15be4:	str	r5, [sp, #4]
   15be8:	mov	r0, r4
   15bec:	bl	15040 <test_json@@Base>
   15bf0:	movw	r1, #38393	; 0x95f9
   15bf4:	movw	r2, #38432	; 0x9620
   15bf8:	str	r0, [sp, #24]
   15bfc:	mov	r0, #372	; 0x174
   15c00:	mov	r3, #0
   15c04:	str	r5, [sp]
   15c08:	str	r5, [sp, #4]
   15c0c:	str	r0, [sp, #8]
   15c10:	movt	r1, #4
   15c14:	movt	r2, #4
   15c18:	mov	r0, r4
   15c1c:	bl	15040 <test_json@@Base>
   15c20:	movw	r6, #38652	; 0x96fc
   15c24:	movw	r1, #38467	; 0x9643
   15c28:	str	r0, [sp, #20]
   15c2c:	mov	r0, #376	; 0x178
   15c30:	mov	r3, #0
   15c34:	str	r5, [sp]
   15c38:	str	r5, [sp, #4]
   15c3c:	movt	r6, #4
   15c40:	str	r0, [sp, #8]
   15c44:	movt	r1, #4
   15c48:	mov	r0, r4
   15c4c:	mov	r2, r6
   15c50:	bl	15040 <test_json@@Base>
   15c54:	movw	r7, #39020	; 0x986c
   15c58:	movw	r1, #38832	; 0x97b0
   15c5c:	str	r0, [sp, #16]
   15c60:	movw	r0, #379	; 0x17b
   15c64:	mov	r3, #0
   15c68:	str	r5, [sp]
   15c6c:	str	r5, [sp, #4]
   15c70:	movt	r7, #4
   15c74:	str	r0, [sp, #8]
   15c78:	movt	r1, #4
   15c7c:	mov	r0, r4
   15c80:	mov	r2, r7
   15c84:	bl	15040 <test_json@@Base>
   15c88:	movw	r1, #39203	; 0x9923
   15c8c:	str	r0, [sp, #12]
   15c90:	movw	r0, #382	; 0x17e
   15c94:	mov	r2, r6
   15c98:	mov	r3, #0
   15c9c:	str	r5, [sp]
   15ca0:	str	r5, [sp, #4]
   15ca4:	str	r0, [sp, #8]
   15ca8:	movt	r1, #4
   15cac:	mov	r0, r4
   15cb0:	bl	15040 <test_json@@Base>
   15cb4:	movw	r1, #39386	; 0x99da
   15cb8:	mov	r6, r0
   15cbc:	movw	r0, #385	; 0x181
   15cc0:	mov	r2, r7
   15cc4:	mov	r3, #0
   15cc8:	str	r5, [sp]
   15ccc:	str	r5, [sp, #4]
   15cd0:	str	r0, [sp, #8]
   15cd4:	movt	r1, #4
   15cd8:	mov	r0, r4
   15cdc:	bl	15040 <test_json@@Base>
   15ce0:	movw	r1, #39572	; 0x9a94
   15ce4:	mov	r7, r0
   15ce8:	mov	r0, #388	; 0x184
   15cec:	mov	r2, #0
   15cf0:	mov	r3, #31
   15cf4:	str	r5, [sp]
   15cf8:	str	r5, [sp, #4]
   15cfc:	str	r0, [sp, #8]
   15d00:	movt	r1, #4
   15d04:	mov	r0, r4
   15d08:	bl	15040 <test_json@@Base>
   15d0c:	movw	r1, #39757	; 0x9b4d
   15d10:	mov	r8, r0
   15d14:	movw	r0, #391	; 0x187
   15d18:	mov	r2, #0
   15d1c:	mov	r3, #32
   15d20:	str	r5, [sp]
   15d24:	str	r5, [sp, #4]
   15d28:	str	r0, [sp, #8]
   15d2c:	movt	r1, #4
   15d30:	mov	r0, r4
   15d34:	bl	15040 <test_json@@Base>
   15d38:	movw	sl, #40153	; 0x9cd9
   15d3c:	movw	r1, #39945	; 0x9c09
   15d40:	mov	r9, r0
   15d44:	movw	r0, #406	; 0x196
   15d48:	mov	r3, #0
   15d4c:	str	r5, [sp]
   15d50:	str	r5, [sp, #4]
   15d54:	movt	sl, #4
   15d58:	str	r0, [sp, #8]
   15d5c:	movt	r1, #4
   15d60:	mov	r0, r4
   15d64:	mov	r2, sl
   15d68:	bl	15040 <test_json@@Base>
   15d6c:	movw	r1, #419	; 0x1a3
   15d70:	ldr	r2, [sp, #20]
   15d74:	str	r5, [sp]
   15d78:	str	r5, [sp, #4]
   15d7c:	mov	r3, #0
   15d80:	str	r1, [sp, #8]
   15d84:	ldr	r1, [sp, #24]
   15d88:	orr	r1, r2, r1
   15d8c:	ldr	r2, [sp, #16]
   15d90:	orr	r1, r1, r2
   15d94:	ldr	r2, [sp, #12]
   15d98:	orr	r1, r1, r2
   15d9c:	mov	r2, sl
   15da0:	orr	r1, r1, r6
   15da4:	orr	r1, r1, r7
   15da8:	orr	r1, r1, r8
   15dac:	orr	r1, r1, r9
   15db0:	orr	r5, r1, r0
   15db4:	movw	r1, #40366	; 0x9dae
   15db8:	mov	r0, r4
   15dbc:	movt	r1, #4
   15dc0:	bl	15040 <test_json@@Base>
   15dc4:	orr	r0, r5, r0
   15dc8:	sub	sp, fp, #28
   15dcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015dd0 <mixed_type_union_tests@@Base>:
   15dd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15dd4:	add	fp, sp, #28
   15dd8:	sub	sp, sp, #20
   15ddc:	movw	r4, #49920	; 0xc300
   15de0:	movw	r1, #40570	; 0x9e7a
   15de4:	movw	r2, #40649	; 0x9ec9
   15de8:	mov	r0, #432	; 0x1b0
   15dec:	mov	r8, #0
   15df0:	mov	r3, #0
   15df4:	movt	r4, #4
   15df8:	str	r0, [sp, #8]
   15dfc:	movt	r1, #4
   15e00:	movt	r2, #4
   15e04:	str	r8, [sp]
   15e08:	str	r8, [sp, #4]
   15e0c:	mov	r0, r4
   15e10:	bl	15040 <test_json@@Base>
   15e14:	movw	r9, #40851	; 0x9f93
   15e18:	movw	r1, #40720	; 0x9f10
   15e1c:	str	r0, [sp, #16]
   15e20:	movw	r0, #437	; 0x1b5
   15e24:	mov	r3, #0
   15e28:	str	r8, [sp]
   15e2c:	str	r8, [sp, #4]
   15e30:	movt	r9, #4
   15e34:	str	r0, [sp, #8]
   15e38:	movt	r1, #4
   15e3c:	mov	r0, r4
   15e40:	mov	r2, r9
   15e44:	bl	15040 <test_json@@Base>
   15e48:	movw	r1, #40970	; 0xa00a
   15e4c:	mov	sl, r0
   15e50:	movw	r0, #442	; 0x1ba
   15e54:	mov	r2, r9
   15e58:	mov	r3, #0
   15e5c:	str	r8, [sp]
   15e60:	str	r8, [sp, #4]
   15e64:	str	r0, [sp, #8]
   15e68:	movt	r1, #4
   15e6c:	mov	r0, r4
   15e70:	bl	15040 <test_json@@Base>
   15e74:	movw	r1, #41120	; 0xa0a0
   15e78:	movw	r2, #41341	; 0xa17d
   15e7c:	mov	r5, r0
   15e80:	movw	r0, #449	; 0x1c1
   15e84:	mov	r3, #0
   15e88:	str	r8, [sp]
   15e8c:	str	r8, [sp, #4]
   15e90:	str	r0, [sp, #8]
   15e94:	movt	r1, #4
   15e98:	movt	r2, #4
   15e9c:	mov	r0, r4
   15ea0:	bl	15040 <test_json@@Base>
   15ea4:	movw	r1, #41526	; 0xa236
   15ea8:	movw	r2, #41788	; 0xa33c
   15eac:	mov	r6, r0
   15eb0:	movw	r0, #458	; 0x1ca
   15eb4:	mov	r3, #0
   15eb8:	str	r8, [sp]
   15ebc:	str	r8, [sp, #4]
   15ec0:	str	r0, [sp, #8]
   15ec4:	movt	r1, #4
   15ec8:	movt	r2, #4
   15ecc:	mov	r0, r4
   15ed0:	bl	15040 <test_json@@Base>
   15ed4:	movw	r1, #42010	; 0xa41a
   15ed8:	movw	r2, #42395	; 0xa59b
   15edc:	mov	r7, r0
   15ee0:	movw	r0, #469	; 0x1d5
   15ee4:	mov	r3, #0
   15ee8:	str	r8, [sp]
   15eec:	str	r8, [sp, #4]
   15ef0:	str	r0, [sp, #8]
   15ef4:	movt	r1, #4
   15ef8:	movt	r2, #4
   15efc:	mov	r0, r4
   15f00:	bl	15040 <test_json@@Base>
   15f04:	movw	r1, #474	; 0x1da
   15f08:	mov	r2, r9
   15f0c:	mov	r3, #0
   15f10:	str	r8, [sp]
   15f14:	str	r8, [sp, #4]
   15f18:	str	r1, [sp, #8]
   15f1c:	ldr	r1, [sp, #16]
   15f20:	orr	r1, sl, r1
   15f24:	orr	r1, r1, r5
   15f28:	orr	r1, r1, r6
   15f2c:	orr	r1, r1, r7
   15f30:	orr	r5, r1, r0
   15f34:	movw	r1, #42721	; 0xa6e1
   15f38:	mov	r0, r4
   15f3c:	movt	r1, #4
   15f40:	bl	15040 <test_json@@Base>
   15f44:	orr	r0, r5, r0
   15f48:	sub	sp, fp, #28
   15f4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015f50 <union_vector_tests@@Base>:
   15f50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f54:	add	fp, sp, #28
   15f58:	sub	sp, sp, #12
   15f5c:	movw	r4, #49936	; 0xc310
   15f60:	movw	r8, #42926	; 0xa7ae
   15f64:	movw	r1, #42862	; 0xa76e
   15f68:	movw	r0, #485	; 0x1e5
   15f6c:	mov	r7, #0
   15f70:	mov	r3, #0
   15f74:	movt	r8, #4
   15f78:	movt	r4, #4
   15f7c:	str	r0, [sp, #8]
   15f80:	movt	r1, #4
   15f84:	str	r7, [sp]
   15f88:	str	r7, [sp, #4]
   15f8c:	mov	r0, r4
   15f90:	mov	r2, r8
   15f94:	bl	15040 <test_json@@Base>
   15f98:	movw	r1, #42982	; 0xa7e6
   15f9c:	movw	r2, #43033	; 0xa819
   15fa0:	mov	r9, r0
   15fa4:	mov	r0, #488	; 0x1e8
   15fa8:	mov	r3, #0
   15fac:	str	r7, [sp]
   15fb0:	str	r7, [sp, #4]
   15fb4:	str	r0, [sp, #8]
   15fb8:	movt	r1, #4
   15fbc:	movt	r2, #4
   15fc0:	mov	r0, r4
   15fc4:	bl	15040 <test_json@@Base>
   15fc8:	movw	r1, #43076	; 0xa844
   15fcc:	movw	r2, #43153	; 0xa891
   15fd0:	mov	sl, r0
   15fd4:	movw	r0, #491	; 0x1eb
   15fd8:	mov	r3, #0
   15fdc:	str	r7, [sp]
   15fe0:	str	r7, [sp, #4]
   15fe4:	str	r0, [sp, #8]
   15fe8:	movt	r1, #4
   15fec:	movt	r2, #4
   15ff0:	mov	r0, r4
   15ff4:	bl	15040 <test_json@@Base>
   15ff8:	movw	r1, #43221	; 0xa8d5
   15ffc:	movw	r2, #43346	; 0xa952
   16000:	mov	r6, r0
   16004:	movw	r0, #494	; 0x1ee
   16008:	mov	r3, #0
   1600c:	str	r7, [sp]
   16010:	str	r7, [sp, #4]
   16014:	str	r0, [sp, #8]
   16018:	movt	r1, #4
   1601c:	movt	r2, #4
   16020:	mov	r0, r4
   16024:	bl	15040 <test_json@@Base>
   16028:	movw	r1, #43454	; 0xa9be
   1602c:	mov	r5, r0
   16030:	movw	r0, #497	; 0x1f1
   16034:	mov	r2, r8
   16038:	mov	r3, #0
   1603c:	str	r7, [sp]
   16040:	str	r7, [sp, #4]
   16044:	str	r0, [sp, #8]
   16048:	movt	r1, #4
   1604c:	mov	r0, r4
   16050:	bl	15040 <test_json@@Base>
   16054:	mov	r1, #500	; 0x1f4
   16058:	movw	r2, #43619	; 0xaa63
   1605c:	mov	r3, #0
   16060:	str	r7, [sp]
   16064:	str	r7, [sp, #4]
   16068:	str	r1, [sp, #8]
   1606c:	orr	r1, sl, r9
   16070:	movt	r2, #4
   16074:	orr	r1, r1, r6
   16078:	orr	r1, r1, r5
   1607c:	orr	r5, r1, r0
   16080:	movw	r1, #43517	; 0xa9fd
   16084:	mov	r0, r4
   16088:	movt	r1, #4
   1608c:	bl	15040 <test_json@@Base>
   16090:	orr	r0, r5, r0
   16094:	sub	sp, fp, #28
   16098:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001609c <main@@Base>:
   1609c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160a0:	add	fp, sp, #28
   160a4:	sub	sp, sp, #284	; 0x11c
   160a8:	bl	15464 <edge_case_tests@@Base>
   160ac:	str	r0, [fp, #-32]	; 0xffffffe0
   160b0:	bl	1580c <error_case_tests@@Base>
   160b4:	str	r0, [fp, #-36]	; 0xffffffdc
   160b8:	bl	15f50 <union_vector_tests@@Base>
   160bc:	str	r0, [fp, #-40]	; 0xffffffd8
   160c0:	bl	15bac <base64_tests@@Base>
   160c4:	str	r0, [fp, #-44]	; 0xffffffd4
   160c8:	bl	15dd0 <mixed_type_union_tests@@Base>
   160cc:	movw	r4, #49904	; 0xc2f0
   160d0:	movw	sl, #35188	; 0x8974
   160d4:	movw	r1, #43711	; 0xaabf
   160d8:	str	r0, [fp, #-48]	; 0xffffffd0
   160dc:	movw	r0, #525	; 0x20d
   160e0:	mov	r8, #0
   160e4:	mov	r3, #0
   160e8:	movt	sl, #4
   160ec:	movt	r4, #4
   160f0:	str	r0, [sp, #8]
   160f4:	movt	r1, #4
   160f8:	str	r8, [sp]
   160fc:	str	r8, [sp, #4]
   16100:	mov	r0, r4
   16104:	mov	r2, sl
   16108:	bl	15040 <test_json@@Base>
   1610c:	movw	r7, #43773	; 0xaafd
   16110:	movw	r1, #43734	; 0xaad6
   16114:	str	r0, [fp, #-52]	; 0xffffffcc
   16118:	mov	r0, #528	; 0x210
   1611c:	mov	r3, #0
   16120:	str	r8, [sp]
   16124:	str	r8, [sp, #4]
   16128:	movt	r7, #4
   1612c:	str	r0, [sp, #8]
   16130:	movt	r1, #4
   16134:	mov	r0, r4
   16138:	mov	r2, r7
   1613c:	bl	15040 <test_json@@Base>
   16140:	movw	r6, #43846	; 0xab46
   16144:	movw	r1, #43806	; 0xab1e
   16148:	str	r0, [fp, #-56]	; 0xffffffc8
   1614c:	movw	r0, #531	; 0x213
   16150:	mov	r3, #0
   16154:	str	r8, [sp]
   16158:	str	r8, [sp, #4]
   1615c:	movt	r6, #4
   16160:	str	r0, [sp, #8]
   16164:	movt	r1, #4
   16168:	mov	r0, r4
   1616c:	mov	r2, r6
   16170:	bl	15040 <test_json@@Base>
   16174:	movw	r9, #43930	; 0xab9a
   16178:	movw	r1, #43881	; 0xab69
   1617c:	str	r0, [fp, #-60]	; 0xffffffc4
   16180:	movw	r0, #534	; 0x216
   16184:	mov	r3, #0
   16188:	str	r8, [sp]
   1618c:	str	r8, [sp, #4]
   16190:	movt	r9, #4
   16194:	str	r0, [sp, #8]
   16198:	movt	r1, #4
   1619c:	mov	r0, r4
   161a0:	mov	r2, r9
   161a4:	bl	15040 <test_json@@Base>
   161a8:	movw	r1, #43974	; 0xabc6
   161ac:	str	r0, [fp, #-64]	; 0xffffffc0
   161b0:	movw	r0, #537	; 0x219
   161b4:	mov	r2, r9
   161b8:	mov	r3, #0
   161bc:	str	r8, [sp]
   161c0:	str	r8, [sp, #4]
   161c4:	str	r0, [sp, #8]
   161c8:	movt	r1, #4
   161cc:	mov	r0, r4
   161d0:	bl	15040 <test_json@@Base>
   161d4:	movw	r1, #44032	; 0xac00
   161d8:	str	r0, [fp, #-68]	; 0xffffffbc
   161dc:	mov	r0, #540	; 0x21c
   161e0:	mov	r2, r7
   161e4:	mov	r3, #0
   161e8:	str	r8, [sp]
   161ec:	str	r8, [sp, #4]
   161f0:	str	r0, [sp, #8]
   161f4:	movt	r1, #4
   161f8:	mov	r0, r4
   161fc:	bl	15040 <test_json@@Base>
   16200:	movw	r1, #44070	; 0xac26
   16204:	str	r0, [fp, #-72]	; 0xffffffb8
   16208:	movw	r0, #543	; 0x21f
   1620c:	mov	r2, r6
   16210:	mov	r3, #0
   16214:	str	r8, [sp]
   16218:	str	r8, [sp, #4]
   1621c:	str	r0, [sp, #8]
   16220:	movt	r1, #4
   16224:	mov	r0, r4
   16228:	bl	15040 <test_json@@Base>
   1622c:	movw	r1, #44111	; 0xac4f
   16230:	str	r0, [fp, #-76]	; 0xffffffb4
   16234:	movw	r0, #547	; 0x223
   16238:	mov	r2, sl
   1623c:	mov	r3, #0
   16240:	str	r8, [sp]
   16244:	str	r8, [sp, #4]
   16248:	str	r0, [sp, #8]
   1624c:	movt	r1, #4
   16250:	mov	r0, r4
   16254:	bl	15040 <test_json@@Base>
   16258:	movw	r1, #35053	; 0x88ed
   1625c:	str	r0, [fp, #-80]	; 0xffffffb0
   16260:	movw	r0, #551	; 0x227
   16264:	mov	r2, sl
   16268:	mov	r3, #0
   1626c:	str	r8, [sp]
   16270:	str	r8, [sp, #4]
   16274:	str	r0, [sp, #8]
   16278:	movt	r1, #4
   1627c:	mov	r0, r4
   16280:	bl	15040 <test_json@@Base>
   16284:	movw	r1, #44150	; 0xac76
   16288:	str	r0, [fp, #-84]	; 0xffffffac
   1628c:	movw	r0, #555	; 0x22b
   16290:	mov	r2, sl
   16294:	mov	r3, #0
   16298:	str	r8, [sp]
   1629c:	str	r8, [sp, #4]
   162a0:	str	r0, [sp, #8]
   162a4:	movt	r1, #4
   162a8:	mov	r0, r4
   162ac:	bl	15040 <test_json@@Base>
   162b0:	movw	r1, #44171	; 0xac8b
   162b4:	str	r0, [fp, #-88]	; 0xffffffa8
   162b8:	movw	r0, #558	; 0x22e
   162bc:	mov	r2, r7
   162c0:	mov	r3, #0
   162c4:	str	r8, [sp]
   162c8:	str	r8, [sp, #4]
   162cc:	str	r0, [sp, #8]
   162d0:	movt	r1, #4
   162d4:	mov	r0, r4
   162d8:	bl	15040 <test_json@@Base>
   162dc:	movw	r1, #44206	; 0xacae
   162e0:	str	r0, [fp, #-92]	; 0xffffffa4
   162e4:	movw	r0, #561	; 0x231
   162e8:	mov	r2, r6
   162ec:	mov	r3, #0
   162f0:	str	r8, [sp]
   162f4:	str	r8, [sp, #4]
   162f8:	str	r0, [sp, #8]
   162fc:	movt	r1, #4
   16300:	mov	r0, r4
   16304:	bl	15040 <test_json@@Base>
   16308:	movw	r1, #44242	; 0xacd2
   1630c:	str	r0, [fp, #-96]	; 0xffffffa0
   16310:	mov	r0, #564	; 0x234
   16314:	mov	r2, r9
   16318:	mov	r3, #0
   1631c:	str	r8, [sp]
   16320:	str	r8, [sp, #4]
   16324:	str	r0, [sp, #8]
   16328:	movt	r1, #4
   1632c:	mov	r0, r4
   16330:	bl	15040 <test_json@@Base>
   16334:	movw	r1, #44287	; 0xacff
   16338:	str	r0, [fp, #-100]	; 0xffffff9c
   1633c:	movw	r0, #567	; 0x237
   16340:	mov	r2, r9
   16344:	mov	r3, #0
   16348:	str	r8, [sp]
   1634c:	str	r8, [sp, #4]
   16350:	str	r0, [sp, #8]
   16354:	movt	r1, #4
   16358:	mov	r0, r4
   1635c:	bl	15040 <test_json@@Base>
   16360:	movw	r1, #44341	; 0xad35
   16364:	str	r0, [fp, #-104]	; 0xffffff98
   16368:	movw	r0, #570	; 0x23a
   1636c:	mov	r2, r7
   16370:	mov	r3, #0
   16374:	str	r8, [sp]
   16378:	str	r8, [sp, #4]
   1637c:	str	r0, [sp, #8]
   16380:	movt	r1, #4
   16384:	mov	r0, r4
   16388:	bl	15040 <test_json@@Base>
   1638c:	movw	r1, #44373	; 0xad55
   16390:	str	r0, [fp, #-108]	; 0xffffff94
   16394:	movw	r0, #573	; 0x23d
   16398:	mov	r2, r6
   1639c:	mov	r3, #0
   163a0:	str	r8, [sp]
   163a4:	str	r8, [sp, #4]
   163a8:	str	r0, [sp, #8]
   163ac:	movt	r1, #4
   163b0:	mov	r0, r4
   163b4:	bl	15040 <test_json@@Base>
   163b8:	movw	r1, #44407	; 0xad77
   163bc:	str	r0, [fp, #-112]	; 0xffffff90
   163c0:	movw	r0, #577	; 0x241
   163c4:	mov	r2, sl
   163c8:	mov	r3, #0
   163cc:	str	r8, [sp]
   163d0:	str	r8, [sp, #4]
   163d4:	str	r0, [sp, #8]
   163d8:	movt	r1, #4
   163dc:	mov	r0, r4
   163e0:	bl	15040 <test_json@@Base>
   163e4:	movw	r1, #35766	; 0x8bb6
   163e8:	str	r0, [fp, #-116]	; 0xffffff8c
   163ec:	movw	r0, #581	; 0x245
   163f0:	mov	r2, sl
   163f4:	mov	r3, #0
   163f8:	str	r8, [sp]
   163fc:	str	r8, [sp, #4]
   16400:	str	r0, [sp, #8]
   16404:	movt	r1, #4
   16408:	mov	r0, r4
   1640c:	bl	15040 <test_json@@Base>
   16410:	movw	r5, #44478	; 0xadbe
   16414:	movw	r1, #44440	; 0xad98
   16418:	str	r0, [fp, #-120]	; 0xffffff88
   1641c:	movw	r0, #585	; 0x249
   16420:	mov	r3, #0
   16424:	str	r8, [sp]
   16428:	str	r8, [sp, #4]
   1642c:	movt	r5, #4
   16430:	str	r0, [sp, #8]
   16434:	movt	r1, #4
   16438:	mov	r0, r4
   1643c:	mov	r2, r5
   16440:	bl	15040 <test_json@@Base>
   16444:	movw	r1, #44517	; 0xade5
   16448:	str	r0, [fp, #-124]	; 0xffffff84
   1644c:	movw	r0, #591	; 0x24f
   16450:	mov	r2, r5
   16454:	mov	r3, #0
   16458:	str	r8, [sp]
   1645c:	str	r8, [sp, #4]
   16460:	str	r0, [sp, #8]
   16464:	movt	r1, #4
   16468:	mov	r0, r4
   1646c:	bl	15040 <test_json@@Base>
   16470:	movw	r1, #44554	; 0xae0a
   16474:	str	r0, [fp, #-128]	; 0xffffff80
   16478:	movw	r0, #594	; 0x252
   1647c:	mov	r2, r5
   16480:	mov	r3, #0
   16484:	str	r8, [sp]
   16488:	str	r8, [sp, #4]
   1648c:	str	r0, [sp, #8]
   16490:	movt	r1, #4
   16494:	mov	r0, r4
   16498:	bl	15040 <test_json@@Base>
   1649c:	movw	r1, #44591	; 0xae2f
   164a0:	str	r0, [fp, #-132]	; 0xffffff7c
   164a4:	movw	r0, #597	; 0x255
   164a8:	mov	r2, r9
   164ac:	mov	r3, #0
   164b0:	str	r8, [sp]
   164b4:	str	r8, [sp, #4]
   164b8:	str	r0, [sp, #8]
   164bc:	movt	r1, #4
   164c0:	mov	r0, r4
   164c4:	bl	15040 <test_json@@Base>
   164c8:	movw	r1, #44637	; 0xae5d
   164cc:	str	r0, [fp, #-136]	; 0xffffff78
   164d0:	movw	r0, #601	; 0x259
   164d4:	mov	r2, r7
   164d8:	mov	r3, #0
   164dc:	str	r8, [sp]
   164e0:	str	r8, [sp, #4]
   164e4:	str	r0, [sp, #8]
   164e8:	movt	r1, #4
   164ec:	mov	r0, r4
   164f0:	bl	15040 <test_json@@Base>
   164f4:	movw	r1, #44670	; 0xae7e
   164f8:	str	r0, [fp, #-140]	; 0xffffff74
   164fc:	mov	r0, #604	; 0x25c
   16500:	mov	r2, r6
   16504:	mov	r3, #0
   16508:	str	r8, [sp]
   1650c:	str	r8, [sp, #4]
   16510:	str	r0, [sp, #8]
   16514:	movt	r1, #4
   16518:	mov	r0, r4
   1651c:	bl	15040 <test_json@@Base>
   16520:	movw	r1, #44703	; 0xae9f
   16524:	movw	r2, #44736	; 0xaec0
   16528:	str	r0, [fp, #-144]	; 0xffffff70
   1652c:	movw	r0, #607	; 0x25f
   16530:	mov	r3, #0
   16534:	str	r8, [sp]
   16538:	str	r8, [sp, #4]
   1653c:	str	r0, [sp, #8]
   16540:	movt	r1, #4
   16544:	movt	r2, #4
   16548:	mov	r0, r4
   1654c:	bl	15040 <test_json@@Base>
   16550:	movw	r1, #44774	; 0xaee6
   16554:	str	r0, [fp, #-148]	; 0xffffff6c
   16558:	movw	r0, #610	; 0x262
   1655c:	mov	r2, r9
   16560:	mov	r3, #0
   16564:	str	r8, [sp]
   16568:	str	r8, [sp, #4]
   1656c:	str	r0, [sp, #8]
   16570:	movt	r1, #4
   16574:	mov	r0, r4
   16578:	bl	15040 <test_json@@Base>
   1657c:	movw	r1, #44808	; 0xaf08
   16580:	movw	r2, #44842	; 0xaf2a
   16584:	str	r0, [fp, #-152]	; 0xffffff68
   16588:	movw	r0, #613	; 0x265
   1658c:	mov	r3, #0
   16590:	str	r8, [sp]
   16594:	str	r8, [sp, #4]
   16598:	str	r0, [sp, #8]
   1659c:	movt	r1, #4
   165a0:	movt	r2, #4
   165a4:	mov	r0, r4
   165a8:	bl	15040 <test_json@@Base>
   165ac:	movw	r1, #44872	; 0xaf48
   165b0:	movw	r2, #44906	; 0xaf6a
   165b4:	str	r0, [sp, #156]	; 0x9c
   165b8:	mov	r0, #616	; 0x268
   165bc:	mov	r3, #0
   165c0:	str	r8, [sp]
   165c4:	str	r8, [sp, #4]
   165c8:	str	r0, [sp, #8]
   165cc:	movt	r1, #4
   165d0:	movt	r2, #4
   165d4:	mov	r0, r4
   165d8:	bl	15040 <test_json@@Base>
   165dc:	movw	r1, #44936	; 0xaf88
   165e0:	movw	r2, #44969	; 0xafa9
   165e4:	str	r0, [sp, #152]	; 0x98
   165e8:	movw	r0, #619	; 0x26b
   165ec:	mov	r3, #0
   165f0:	str	r8, [sp]
   165f4:	str	r8, [sp, #4]
   165f8:	str	r0, [sp, #8]
   165fc:	movt	r1, #4
   16600:	movt	r2, #4
   16604:	mov	r0, r4
   16608:	bl	15040 <test_json@@Base>
   1660c:	movw	r1, #44998	; 0xafc6
   16610:	str	r0, [sp, #148]	; 0x94
   16614:	movw	r0, #622	; 0x26e
   16618:	mov	r2, r7
   1661c:	mov	r3, #0
   16620:	str	r8, [sp]
   16624:	str	r8, [sp, #4]
   16628:	str	r0, [sp, #8]
   1662c:	movt	r1, #4
   16630:	mov	r0, r4
   16634:	bl	15040 <test_json@@Base>
   16638:	movw	r1, #45041	; 0xaff1
   1663c:	str	r0, [sp, #144]	; 0x90
   16640:	movw	r0, #625	; 0x271
   16644:	mov	r2, r7
   16648:	mov	r3, #0
   1664c:	str	r8, [sp]
   16650:	str	r8, [sp, #4]
   16654:	str	r0, [sp, #8]
   16658:	movt	r1, #4
   1665c:	mov	r0, r4
   16660:	bl	15040 <test_json@@Base>
   16664:	movw	r6, #45099	; 0xb02b
   16668:	movw	r5, #45141	; 0xb055
   1666c:	str	r0, [sp, #140]	; 0x8c
   16670:	mov	r0, #628	; 0x274
   16674:	mov	r3, #0
   16678:	str	r8, [sp]
   1667c:	str	r8, [sp, #4]
   16680:	movt	r6, #4
   16684:	movt	r5, #4
   16688:	str	r0, [sp, #8]
   1668c:	mov	r0, r4
   16690:	mov	r1, r6
   16694:	mov	r2, r5
   16698:	bl	15040 <test_json@@Base>
   1669c:	str	r0, [sp, #136]	; 0x88
   166a0:	movw	r0, #631	; 0x277
   166a4:	mov	r1, r6
   166a8:	mov	r2, r5
   166ac:	mov	r3, #0
   166b0:	str	r8, [sp]
   166b4:	str	r8, [sp, #4]
   166b8:	str	r0, [sp, #8]
   166bc:	mov	r0, r4
   166c0:	bl	15040 <test_json@@Base>
   166c4:	movw	r1, #45167	; 0xb06f
   166c8:	movw	r2, #45248	; 0xb0c0
   166cc:	str	r0, [sp, #132]	; 0x84
   166d0:	movw	r0, #634	; 0x27a
   166d4:	mov	r3, #0
   166d8:	str	r8, [sp]
   166dc:	str	r8, [sp, #4]
   166e0:	str	r0, [sp, #8]
   166e4:	movt	r1, #4
   166e8:	movt	r2, #4
   166ec:	mov	r0, r4
   166f0:	bl	15040 <test_json@@Base>
   166f4:	movw	r1, #45319	; 0xb107
   166f8:	movw	r2, #45404	; 0xb15c
   166fc:	str	r0, [sp, #128]	; 0x80
   16700:	movw	r0, #638	; 0x27e
   16704:	mov	r3, #0
   16708:	str	r8, [sp]
   1670c:	str	r8, [sp, #4]
   16710:	str	r0, [sp, #8]
   16714:	movt	r1, #4
   16718:	movt	r2, #4
   1671c:	mov	r0, r4
   16720:	bl	15040 <test_json@@Base>
   16724:	movw	r1, #45478	; 0xb1a6
   16728:	movw	r2, #45589	; 0xb215
   1672c:	str	r0, [sp, #124]	; 0x7c
   16730:	movw	r0, #642	; 0x282
   16734:	mov	r3, #0
   16738:	str	r8, [sp]
   1673c:	str	r8, [sp, #4]
   16740:	str	r0, [sp, #8]
   16744:	movt	r1, #4
   16748:	movt	r2, #4
   1674c:	mov	r0, r4
   16750:	bl	15040 <test_json@@Base>
   16754:	movw	r1, #45687	; 0xb277
   16758:	str	r0, [sp, #120]	; 0x78
   1675c:	movw	r0, #646	; 0x286
   16760:	mov	r2, sl
   16764:	mov	r3, #0
   16768:	str	r8, [sp]
   1676c:	str	r8, [sp, #4]
   16770:	str	r0, [sp, #8]
   16774:	movt	r1, #4
   16778:	mov	r0, r4
   1677c:	bl	15040 <test_json@@Base>
   16780:	movw	r1, #45730	; 0xb2a2
   16784:	str	r0, [sp, #116]	; 0x74
   16788:	movw	r0, #649	; 0x289
   1678c:	mov	r2, sl
   16790:	mov	r3, #0
   16794:	str	r8, [sp]
   16798:	str	r8, [sp, #4]
   1679c:	str	r0, [sp, #8]
   167a0:	movt	r1, #4
   167a4:	mov	r0, r4
   167a8:	bl	15040 <test_json@@Base>
   167ac:	movw	r1, #45768	; 0xb2c8
   167b0:	str	r0, [sp, #112]	; 0x70
   167b4:	movw	r0, #653	; 0x28d
   167b8:	mov	r2, r7
   167bc:	mov	r3, #0
   167c0:	str	r8, [sp]
   167c4:	str	r8, [sp, #4]
   167c8:	str	r0, [sp, #8]
   167cc:	movt	r1, #4
   167d0:	mov	r0, r4
   167d4:	bl	15040 <test_json@@Base>
   167d8:	movw	r1, #45797	; 0xb2e5
   167dc:	movw	r2, #43846	; 0xab46
   167e0:	str	r0, [sp, #108]	; 0x6c
   167e4:	mov	r0, #656	; 0x290
   167e8:	mov	r3, #0
   167ec:	str	r8, [sp]
   167f0:	str	r8, [sp, #4]
   167f4:	str	r0, [sp, #8]
   167f8:	movt	r1, #4
   167fc:	mov	r0, r4
   16800:	movt	r2, #4
   16804:	bl	15040 <test_json@@Base>
   16808:	movw	r1, #45826	; 0xb302
   1680c:	movw	r2, #44736	; 0xaec0
   16810:	str	r0, [sp, #104]	; 0x68
   16814:	movw	r0, #659	; 0x293
   16818:	mov	r3, #0
   1681c:	str	r8, [sp]
   16820:	str	r8, [sp, #4]
   16824:	str	r0, [sp, #8]
   16828:	movt	r1, #4
   1682c:	mov	r0, r4
   16830:	movt	r2, #4
   16834:	bl	15040 <test_json@@Base>
   16838:	movw	r1, #45855	; 0xb31f
   1683c:	str	r0, [sp, #100]	; 0x64
   16840:	movw	r0, #662	; 0x296
   16844:	mov	r2, r9
   16848:	mov	r3, #0
   1684c:	str	r8, [sp]
   16850:	str	r8, [sp, #4]
   16854:	str	r0, [sp, #8]
   16858:	movt	r1, #4
   1685c:	mov	r0, r4
   16860:	bl	15040 <test_json@@Base>
   16864:	movw	r1, #45885	; 0xb33d
   16868:	movw	r2, #44842	; 0xaf2a
   1686c:	str	r0, [sp, #96]	; 0x60
   16870:	movw	r0, #665	; 0x299
   16874:	mov	r3, #0
   16878:	str	r8, [sp]
   1687c:	str	r8, [sp, #4]
   16880:	str	r0, [sp, #8]
   16884:	movt	r1, #4
   16888:	mov	r0, r4
   1688c:	movt	r2, #4
   16890:	bl	15040 <test_json@@Base>
   16894:	movw	r1, #45915	; 0xb35b
   16898:	movw	r2, #44906	; 0xaf6a
   1689c:	str	r0, [sp, #92]	; 0x5c
   168a0:	mov	r0, #668	; 0x29c
   168a4:	mov	r3, #0
   168a8:	str	r8, [sp]
   168ac:	str	r8, [sp, #4]
   168b0:	str	r0, [sp, #8]
   168b4:	movt	r1, #4
   168b8:	mov	r0, r4
   168bc:	movt	r2, #4
   168c0:	bl	15040 <test_json@@Base>
   168c4:	movw	r1, #45945	; 0xb379
   168c8:	movw	r2, #44969	; 0xafa9
   168cc:	str	r0, [sp, #88]	; 0x58
   168d0:	movw	r0, #671	; 0x29f
   168d4:	mov	r3, #0
   168d8:	str	r8, [sp]
   168dc:	str	r8, [sp, #4]
   168e0:	str	r0, [sp, #8]
   168e4:	movt	r1, #4
   168e8:	mov	r0, r4
   168ec:	movt	r2, #4
   168f0:	bl	15040 <test_json@@Base>
   168f4:	movw	r1, #45974	; 0xb396
   168f8:	str	r0, [sp, #84]	; 0x54
   168fc:	movw	r0, #674	; 0x2a2
   16900:	mov	r2, r7
   16904:	mov	r3, #0
   16908:	str	r8, [sp]
   1690c:	str	r8, [sp, #4]
   16910:	str	r0, [sp, #8]
   16914:	movt	r1, #4
   16918:	mov	r0, r4
   1691c:	bl	15040 <test_json@@Base>
   16920:	movw	r1, #46011	; 0xb3bb
   16924:	str	r0, [sp, #80]	; 0x50
   16928:	movw	r0, #677	; 0x2a5
   1692c:	mov	r2, r7
   16930:	mov	r3, #0
   16934:	str	r8, [sp]
   16938:	str	r8, [sp, #4]
   1693c:	str	r0, [sp, #8]
   16940:	movt	r1, #4
   16944:	mov	r0, r4
   16948:	bl	15040 <test_json@@Base>
   1694c:	movw	r6, #46063	; 0xb3ef
   16950:	str	r0, [sp, #76]	; 0x4c
   16954:	mov	r0, #680	; 0x2a8
   16958:	mov	r2, r5
   1695c:	mov	r3, #0
   16960:	str	r8, [sp]
   16964:	str	r8, [sp, #4]
   16968:	movt	r6, #4
   1696c:	str	r0, [sp, #8]
   16970:	mov	r0, r4
   16974:	mov	r1, r6
   16978:	bl	15040 <test_json@@Base>
   1697c:	str	r0, [sp, #72]	; 0x48
   16980:	movw	r0, #683	; 0x2ab
   16984:	mov	r1, r6
   16988:	mov	r2, r5
   1698c:	mov	r3, #0
   16990:	str	r8, [sp]
   16994:	str	r8, [sp, #4]
   16998:	str	r0, [sp, #8]
   1699c:	mov	r0, r4
   169a0:	bl	15040 <test_json@@Base>
   169a4:	movw	r1, #46099	; 0xb413
   169a8:	movw	r2, #45248	; 0xb0c0
   169ac:	str	r0, [sp, #68]	; 0x44
   169b0:	movw	r0, #686	; 0x2ae
   169b4:	mov	r3, #0
   169b8:	str	r8, [sp]
   169bc:	str	r8, [sp, #4]
   169c0:	str	r0, [sp, #8]
   169c4:	movt	r1, #4
   169c8:	mov	r0, r4
   169cc:	movt	r2, #4
   169d0:	bl	15040 <test_json@@Base>
   169d4:	movw	r1, #46170	; 0xb45a
   169d8:	movw	r2, #45404	; 0xb15c
   169dc:	str	r0, [sp, #64]	; 0x40
   169e0:	movw	r0, #690	; 0x2b2
   169e4:	mov	r3, #0
   169e8:	str	r8, [sp]
   169ec:	str	r8, [sp, #4]
   169f0:	str	r0, [sp, #8]
   169f4:	movt	r1, #4
   169f8:	mov	r0, r4
   169fc:	movt	r2, #4
   16a00:	bl	15040 <test_json@@Base>
   16a04:	movw	r1, #46245	; 0xb4a5
   16a08:	movw	r2, #45589	; 0xb215
   16a0c:	str	r0, [sp, #60]	; 0x3c
   16a10:	movw	r0, #694	; 0x2b6
   16a14:	mov	r3, #0
   16a18:	str	r8, [sp]
   16a1c:	str	r8, [sp, #4]
   16a20:	str	r0, [sp, #8]
   16a24:	movt	r1, #4
   16a28:	mov	r0, r4
   16a2c:	movt	r2, #4
   16a30:	bl	15040 <test_json@@Base>
   16a34:	movw	r1, #46340	; 0xb504
   16a38:	str	r0, [sp, #56]	; 0x38
   16a3c:	movw	r0, #698	; 0x2ba
   16a40:	mov	r2, sl
   16a44:	mov	r3, #0
   16a48:	str	r8, [sp]
   16a4c:	str	r8, [sp, #4]
   16a50:	str	r0, [sp, #8]
   16a54:	movt	r1, #4
   16a58:	mov	r0, r4
   16a5c:	bl	15040 <test_json@@Base>
   16a60:	movw	r1, #46377	; 0xb529
   16a64:	str	r0, [sp, #52]	; 0x34
   16a68:	movw	r0, #701	; 0x2bd
   16a6c:	mov	r2, sl
   16a70:	mov	r3, #0
   16a74:	str	r8, [sp]
   16a78:	str	r8, [sp, #4]
   16a7c:	str	r0, [sp, #8]
   16a80:	movt	r1, #4
   16a84:	mov	r0, r4
   16a88:	bl	15040 <test_json@@Base>
   16a8c:	movw	r5, #46504	; 0xb5a8
   16a90:	movw	r1, #46411	; 0xb54b
   16a94:	str	r0, [sp, #48]	; 0x30
   16a98:	movw	r0, #711	; 0x2c7
   16a9c:	mov	r3, #0
   16aa0:	str	r8, [sp]
   16aa4:	str	r8, [sp, #4]
   16aa8:	movt	r5, #4
   16aac:	str	r0, [sp, #8]
   16ab0:	movt	r1, #4
   16ab4:	mov	r0, r4
   16ab8:	mov	r2, r5
   16abc:	bl	15040 <test_json@@Base>
   16ac0:	movw	r1, #46598	; 0xb606
   16ac4:	str	r0, [sp, #44]	; 0x2c
   16ac8:	mov	r0, #716	; 0x2cc
   16acc:	mov	r2, r5
   16ad0:	mov	r3, #0
   16ad4:	str	r8, [sp]
   16ad8:	str	r8, [sp, #4]
   16adc:	str	r0, [sp, #8]
   16ae0:	movt	r1, #4
   16ae4:	mov	r0, r4
   16ae8:	bl	15040 <test_json@@Base>
   16aec:	movw	r1, #46707	; 0xb673
   16af0:	movw	r2, #46768	; 0xb6b0
   16af4:	str	r0, [sp, #40]	; 0x28
   16af8:	movw	r0, #731	; 0x2db
   16afc:	mov	r3, #0
   16b00:	str	r8, [sp]
   16b04:	str	r8, [sp, #4]
   16b08:	str	r0, [sp, #8]
   16b0c:	movt	r1, #4
   16b10:	movt	r2, #4
   16b14:	mov	r0, r4
   16b18:	bl	15040 <test_json@@Base>
   16b1c:	movw	r1, #46816	; 0xb6e0
   16b20:	movw	r2, #46842	; 0xb6fa
   16b24:	str	r0, [sp, #36]	; 0x24
   16b28:	movw	r0, #734	; 0x2de
   16b2c:	mov	r3, #0
   16b30:	str	r8, [sp]
   16b34:	str	r8, [sp, #4]
   16b38:	str	r0, [sp, #8]
   16b3c:	movt	r1, #4
   16b40:	movt	r2, #4
   16b44:	mov	r0, r4
   16b48:	bl	15040 <test_json@@Base>
   16b4c:	movw	r5, #46932	; 0xb754
   16b50:	movw	r1, #46860	; 0xb70c
   16b54:	str	r0, [sp, #32]
   16b58:	movw	r0, #738	; 0x2e2
   16b5c:	mov	r3, #0
   16b60:	str	r8, [sp]
   16b64:	str	r8, [sp, #4]
   16b68:	movt	r5, #4
   16b6c:	str	r0, [sp, #8]
   16b70:	movt	r1, #4
   16b74:	mov	r0, r4
   16b78:	mov	r2, r5
   16b7c:	bl	15040 <test_json@@Base>
   16b80:	movw	r1, #46997	; 0xb795
   16b84:	str	r0, [sp, #28]
   16b88:	movw	r0, #750	; 0x2ee
   16b8c:	mov	r2, r5
   16b90:	mov	r3, #0
   16b94:	str	r8, [sp]
   16b98:	str	r8, [sp, #4]
   16b9c:	str	r0, [sp, #8]
   16ba0:	movt	r1, #4
   16ba4:	mov	r0, r4
   16ba8:	bl	15040 <test_json@@Base>
   16bac:	movw	r1, #47154	; 0xb832
   16bb0:	movw	r2, #47193	; 0xb859
   16bb4:	str	r0, [sp, #24]
   16bb8:	movw	r0, #766	; 0x2fe
   16bbc:	mov	r3, #0
   16bc0:	str	r8, [sp]
   16bc4:	str	r8, [sp, #4]
   16bc8:	str	r0, [sp, #8]
   16bcc:	movt	r1, #4
   16bd0:	movt	r2, #4
   16bd4:	mov	r0, r4
   16bd8:	bl	15040 <test_json@@Base>
   16bdc:	movw	r1, #47227	; 0xb87b
   16be0:	movw	r2, #47274	; 0xb8aa
   16be4:	str	r0, [sp, #20]
   16be8:	movw	r0, #770	; 0x302
   16bec:	mov	r3, #0
   16bf0:	str	r8, [sp]
   16bf4:	str	r8, [sp, #4]
   16bf8:	str	r0, [sp, #8]
   16bfc:	movt	r1, #4
   16c00:	movt	r2, #4
   16c04:	mov	r0, r4
   16c08:	bl	15040 <test_json@@Base>
   16c0c:	movw	r1, #47316	; 0xb8d4
   16c10:	movw	r2, #47439	; 0xb94f
   16c14:	str	r0, [sp, #16]
   16c18:	mov	r0, #776	; 0x308
   16c1c:	mov	r3, #0
   16c20:	str	r8, [sp]
   16c24:	str	r8, [sp, #4]
   16c28:	str	r0, [sp, #8]
   16c2c:	movt	r1, #4
   16c30:	movt	r2, #4
   16c34:	mov	r0, r4
   16c38:	bl	15040 <test_json@@Base>
   16c3c:	movw	r1, #47551	; 0xb9bf
   16c40:	mov	r7, r0
   16c44:	movw	r0, #781	; 0x30d
   16c48:	mov	r2, sl
   16c4c:	mov	r3, #0
   16c50:	str	r8, [sp]
   16c54:	str	r8, [sp, #4]
   16c58:	str	r0, [sp, #8]
   16c5c:	movt	r1, #4
   16c60:	mov	r0, r4
   16c64:	bl	15040 <test_json@@Base>
   16c68:	movw	r1, #47671	; 0xba37
   16c6c:	movw	r2, #47793	; 0xbab1
   16c70:	mov	r5, r0
   16c74:	movw	r0, #786	; 0x312
   16c78:	mov	r3, #0
   16c7c:	str	r8, [sp]
   16c80:	str	r8, [sp, #4]
   16c84:	str	r0, [sp, #8]
   16c88:	movt	r1, #4
   16c8c:	movt	r2, #4
   16c90:	mov	r0, r4
   16c94:	bl	15040 <test_json@@Base>
   16c98:	movw	r1, #47904	; 0xbb20
   16c9c:	movw	r2, #48043	; 0xbbab
   16ca0:	mov	r6, r0
   16ca4:	movw	r0, #791	; 0x317
   16ca8:	mov	r3, #0
   16cac:	str	r8, [sp]
   16cb0:	str	r8, [sp, #4]
   16cb4:	str	r0, [sp, #8]
   16cb8:	movt	r1, #4
   16cbc:	movt	r2, #4
   16cc0:	mov	r0, r4
   16cc4:	bl	15040 <test_json@@Base>
   16cc8:	movw	r1, #48169	; 0xbc29
   16ccc:	movw	r2, #48292	; 0xbca4
   16cd0:	mov	sl, r0
   16cd4:	mov	r0, #796	; 0x31c
   16cd8:	mov	r3, #0
   16cdc:	str	r8, [sp]
   16ce0:	str	r8, [sp, #4]
   16ce4:	str	r0, [sp, #8]
   16ce8:	movt	r1, #4
   16cec:	movt	r2, #4
   16cf0:	mov	r0, r4
   16cf4:	bl	15040 <test_json@@Base>
   16cf8:	movw	r1, #48404	; 0xbd14
   16cfc:	movw	r2, #48542	; 0xbd9e
   16d00:	mov	r9, r0
   16d04:	movw	r0, #801	; 0x321
   16d08:	mov	r3, #0
   16d0c:	str	r8, [sp]
   16d10:	str	r8, [sp, #4]
   16d14:	str	r0, [sp, #8]
   16d18:	movt	r1, #4
   16d1c:	movt	r2, #4
   16d20:	mov	r0, r4
   16d24:	bl	15040 <test_json@@Base>
   16d28:	movw	r1, #806	; 0x326
   16d2c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16d30:	mov	r3, #0
   16d34:	str	r8, [sp]
   16d38:	str	r8, [sp, #4]
   16d3c:	str	r1, [sp, #8]
   16d40:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16d44:	orr	r1, r2, r1
   16d48:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16d4c:	orr	r1, r1, r2
   16d50:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16d54:	orr	r1, r1, r2
   16d58:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16d5c:	orr	r1, r1, r2
   16d60:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16d64:	orr	r1, r1, r2
   16d68:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16d6c:	orr	r1, r1, r2
   16d70:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16d74:	orr	r1, r1, r2
   16d78:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16d7c:	orr	r1, r1, r2
   16d80:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16d84:	orr	r1, r1, r2
   16d88:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16d8c:	orr	r1, r1, r2
   16d90:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16d94:	orr	r1, r1, r2
   16d98:	ldr	r2, [fp, #-80]	; 0xffffffb0
   16d9c:	orr	r1, r1, r2
   16da0:	ldr	r2, [fp, #-84]	; 0xffffffac
   16da4:	orr	r1, r1, r2
   16da8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16dac:	orr	r1, r1, r2
   16db0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16db4:	orr	r1, r1, r2
   16db8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16dbc:	orr	r1, r1, r2
   16dc0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16dc4:	orr	r1, r1, r2
   16dc8:	ldr	r2, [fp, #-104]	; 0xffffff98
   16dcc:	orr	r1, r1, r2
   16dd0:	ldr	r2, [fp, #-108]	; 0xffffff94
   16dd4:	orr	r1, r1, r2
   16dd8:	ldr	r2, [fp, #-112]	; 0xffffff90
   16ddc:	orr	r1, r1, r2
   16de0:	ldr	r2, [fp, #-116]	; 0xffffff8c
   16de4:	orr	r1, r1, r2
   16de8:	ldr	r2, [fp, #-120]	; 0xffffff88
   16dec:	orr	r1, r1, r2
   16df0:	ldr	r2, [fp, #-124]	; 0xffffff84
   16df4:	orr	r1, r1, r2
   16df8:	ldr	r2, [fp, #-128]	; 0xffffff80
   16dfc:	orr	r1, r1, r2
   16e00:	ldr	r2, [fp, #-132]	; 0xffffff7c
   16e04:	orr	r1, r1, r2
   16e08:	ldr	r2, [fp, #-136]	; 0xffffff78
   16e0c:	orr	r1, r1, r2
   16e10:	ldr	r2, [fp, #-140]	; 0xffffff74
   16e14:	orr	r1, r1, r2
   16e18:	ldr	r2, [fp, #-144]	; 0xffffff70
   16e1c:	orr	r1, r1, r2
   16e20:	ldr	r2, [fp, #-148]	; 0xffffff6c
   16e24:	orr	r1, r1, r2
   16e28:	ldr	r2, [fp, #-152]	; 0xffffff68
   16e2c:	orr	r1, r1, r2
   16e30:	ldr	r2, [sp, #156]	; 0x9c
   16e34:	orr	r1, r1, r2
   16e38:	ldr	r2, [sp, #152]	; 0x98
   16e3c:	orr	r1, r1, r2
   16e40:	ldr	r2, [sp, #148]	; 0x94
   16e44:	orr	r1, r1, r2
   16e48:	ldr	r2, [sp, #144]	; 0x90
   16e4c:	orr	r1, r1, r2
   16e50:	ldr	r2, [sp, #140]	; 0x8c
   16e54:	orr	r1, r1, r2
   16e58:	ldr	r2, [sp, #136]	; 0x88
   16e5c:	orr	r1, r1, r2
   16e60:	ldr	r2, [sp, #132]	; 0x84
   16e64:	orr	r1, r1, r2
   16e68:	ldr	r2, [sp, #128]	; 0x80
   16e6c:	orr	r1, r1, r2
   16e70:	ldr	r2, [sp, #124]	; 0x7c
   16e74:	orr	r1, r1, r2
   16e78:	ldr	r2, [sp, #120]	; 0x78
   16e7c:	orr	r1, r1, r2
   16e80:	ldr	r2, [sp, #116]	; 0x74
   16e84:	orr	r1, r1, r2
   16e88:	ldr	r2, [sp, #112]	; 0x70
   16e8c:	orr	r1, r1, r2
   16e90:	ldr	r2, [sp, #108]	; 0x6c
   16e94:	orr	r1, r1, r2
   16e98:	ldr	r2, [sp, #104]	; 0x68
   16e9c:	orr	r1, r1, r2
   16ea0:	ldr	r2, [sp, #100]	; 0x64
   16ea4:	orr	r1, r1, r2
   16ea8:	ldr	r2, [sp, #96]	; 0x60
   16eac:	orr	r1, r1, r2
   16eb0:	ldr	r2, [sp, #92]	; 0x5c
   16eb4:	orr	r1, r1, r2
   16eb8:	ldr	r2, [sp, #88]	; 0x58
   16ebc:	orr	r1, r1, r2
   16ec0:	ldr	r2, [sp, #84]	; 0x54
   16ec4:	orr	r1, r1, r2
   16ec8:	ldr	r2, [sp, #80]	; 0x50
   16ecc:	orr	r1, r1, r2
   16ed0:	ldr	r2, [sp, #76]	; 0x4c
   16ed4:	orr	r1, r1, r2
   16ed8:	ldr	r2, [sp, #72]	; 0x48
   16edc:	orr	r1, r1, r2
   16ee0:	ldr	r2, [sp, #68]	; 0x44
   16ee4:	orr	r1, r1, r2
   16ee8:	ldr	r2, [sp, #64]	; 0x40
   16eec:	orr	r1, r1, r2
   16ef0:	ldr	r2, [sp, #60]	; 0x3c
   16ef4:	orr	r1, r1, r2
   16ef8:	ldr	r2, [sp, #56]	; 0x38
   16efc:	orr	r1, r1, r2
   16f00:	ldr	r2, [sp, #52]	; 0x34
   16f04:	orr	r1, r1, r2
   16f08:	ldr	r2, [sp, #48]	; 0x30
   16f0c:	orr	r1, r1, r2
   16f10:	ldr	r2, [sp, #44]	; 0x2c
   16f14:	orr	r1, r1, r2
   16f18:	ldr	r2, [sp, #40]	; 0x28
   16f1c:	orr	r1, r1, r2
   16f20:	ldr	r2, [sp, #36]	; 0x24
   16f24:	orr	r1, r1, r2
   16f28:	ldr	r2, [sp, #32]
   16f2c:	orr	r1, r1, r2
   16f30:	ldr	r2, [sp, #28]
   16f34:	orr	r1, r1, r2
   16f38:	ldr	r2, [sp, #24]
   16f3c:	orr	r1, r1, r2
   16f40:	ldr	r2, [sp, #20]
   16f44:	orr	r1, r1, r2
   16f48:	ldr	r2, [sp, #16]
   16f4c:	orr	r1, r1, r2
   16f50:	movw	r2, #48812	; 0xbeac
   16f54:	orr	r1, r1, r7
   16f58:	movt	r2, #4
   16f5c:	orr	r1, r1, r5
   16f60:	orr	r1, r1, r6
   16f64:	orr	r1, r1, sl
   16f68:	orr	r1, r1, r9
   16f6c:	orr	r5, r1, r0
   16f70:	movw	r1, #48669	; 0xbe1d
   16f74:	mov	r0, r4
   16f78:	movt	r1, #4
   16f7c:	bl	15040 <test_json@@Base>
   16f80:	orrs	r0, r5, r0
   16f84:	mvnne	r0, #0
   16f88:	sub	sp, fp, #28
   16f8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f94:	add	fp, sp, #28
   16f98:	sub	sp, sp, #4
   16f9c:	vpush	{d8-d9}
   16fa0:	sub	sp, sp, #88	; 0x58
   16fa4:	mov	sl, r0
   16fa8:	mov	r0, #0
   16fac:	mov	r4, r1
   16fb0:	mov	r1, #36	; 0x24
   16fb4:	mov	r5, r3
   16fb8:	mov	r6, r2
   16fbc:	str	r0, [r3]
   16fc0:	ldr	r0, [sl]
   16fc4:	bl	32294 <flatcc_builder_start_table@@Base>
   16fc8:	cmp	r0, #0
   16fcc:	beq	16ffc <main@@Base+0xf60>
   16fd0:	mov	r0, sl
   16fd4:	mov	r1, r4
   16fd8:	mov	r2, r6
   16fdc:	mov	r3, #33	; 0x21
   16fe0:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   16fe4:	mov	r4, r0
   16fe8:	mov	r0, r4
   16fec:	sub	sp, fp, #48	; 0x30
   16ff0:	vpop	{d8-d9}
   16ff4:	add	sp, sp, #4
   16ff8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ffc:	add	r0, sp, #56	; 0x38
   17000:	mov	r1, r4
   17004:	mov	r2, r6
   17008:	mov	r3, #1
   1700c:	str	r0, [sp]
   17010:	mov	r0, sl
   17014:	bl	39bd0 <flatcc_json_parser_prepare_unions@@Base>
   17018:	cmp	r0, r6
   1701c:	beq	16fd0 <main@@Base+0xf34>
   17020:	cmp	r4, r6
   17024:	beq	17064 <main@@Base+0xfc8>
   17028:	ldrb	r0, [r4]
   1702c:	cmp	r0, #123	; 0x7b
   17030:	bne	17064 <main@@Base+0xfc8>
   17034:	add	r1, r4, #1
   17038:	sub	r0, r6, r1
   1703c:	cmp	r0, #2
   17040:	blt	170fc <main@@Base+0x1060>
   17044:	ldrb	r0, [r1]
   17048:	cmp	r0, #32
   1704c:	bls	170ec <main@@Base+0x1050>
   17050:	mov	r4, r1
   17054:	cmp	r4, r6
   17058:	mov	r2, r6
   1705c:	bne	17118 <main@@Base+0x107c>
   17060:	b	1715c <main@@Base+0x10c0>
   17064:	mov	r0, sl
   17068:	mov	r1, r4
   1706c:	mov	r2, r6
   17070:	mov	r3, #21
   17074:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   17078:	mov	r4, r0
   1707c:	add	r0, sl, #24
   17080:	ldr	r0, [r0]
   17084:	cmp	r0, #0
   17088:	bne	16fd0 <main@@Base+0xf34>
   1708c:	ldr	r0, [sl]
   17090:	mov	r1, #3
   17094:	bl	32ab8 <flatcc_builder_check_required_field@@Base>
   17098:	cmp	r0, #0
   1709c:	beq	170d0 <main@@Base+0x1034>
   170a0:	ldr	r3, [sp, #56]	; 0x38
   170a4:	mov	r0, sl
   170a8:	mov	r1, r4
   170ac:	mov	r2, r6
   170b0:	bl	39c60 <flatcc_json_parser_finalize_unions@@Base>
   170b4:	mov	r4, r0
   170b8:	ldr	r0, [sl]
   170bc:	bl	32c44 <flatcc_builder_end_table@@Base>
   170c0:	cmp	r0, #0
   170c4:	str	r0, [r5]
   170c8:	bne	16fe8 <main@@Base+0xf4c>
   170cc:	b	16fd0 <main@@Base+0xf34>
   170d0:	mov	r0, sl
   170d4:	mov	r1, r4
   170d8:	mov	r2, r6
   170dc:	mov	r3, #29
   170e0:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   170e4:	mov	r4, r0
   170e8:	b	16fd0 <main@@Base+0xf34>
   170ec:	bne	170fc <main@@Base+0x1060>
   170f0:	ldrb	r0, [r4, #2]!
   170f4:	cmp	r0, #32
   170f8:	bhi	1710c <main@@Base+0x1070>
   170fc:	mov	r0, sl
   17100:	mov	r2, r6
   17104:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   17108:	mov	r4, r0
   1710c:	cmp	r4, r6
   17110:	mov	r2, r6
   17114:	beq	1715c <main@@Base+0x10c0>
   17118:	ldrb	r0, [r4]
   1711c:	cmp	r0, #125	; 0x7d
   17120:	bne	17158 <main@@Base+0x10bc>
   17124:	add	r1, r4, #1
   17128:	sub	r0, r6, r1
   1712c:	cmp	r0, #2
   17130:	blt	21890 <main@@Base+0xb7f4>
   17134:	ldrb	r0, [r1]
   17138:	cmp	r0, #32
   1713c:	bls	21880 <main@@Base+0xb7e4>
   17140:	mov	r4, r1
   17144:	add	r0, sl, #24
   17148:	ldr	r0, [r0]
   1714c:	cmp	r0, #0
   17150:	bne	16fd0 <main@@Base+0xf34>
   17154:	b	1708c <main@@Base+0xff0>
   17158:	mov	r2, r4
   1715c:	add	r0, sl, #24
   17160:	vldr	s18, [pc, #912]	; 174f8 <main@@Base+0x145c>
   17164:	vmov.f32	s16, #8	; 0x40400000  3.0
   17168:	str	r6, [sp, #52]	; 0x34
   1716c:	str	sl, [sp, #44]	; 0x2c
   17170:	str	r5, [sp, #48]	; 0x30
   17174:	str	r0, [sp, #36]	; 0x24
   17178:	add	r0, sl, #12
   1717c:	str	r0, [sp, #40]	; 0x28
   17180:	movw	r0, #628	; 0x274
   17184:	movt	r0, #6
   17188:	add	r0, r0, #48	; 0x30
   1718c:	str	r0, [sp, #28]
   17190:	movw	r0, #13407	; 0x345f
   17194:	movt	r0, #29494	; 0x7336
   17198:	sub	r0, r0, #512	; 0x200
   1719c:	sub	r0, r0, #196608	; 0x30000
   171a0:	str	r0, [sp, #32]
   171a4:	b	1e410 <main@@Base+0x8374>
   171a8:	bne	171b8 <main@@Base+0x111c>
   171ac:	ldrb	r0, [r2, #2]!
   171b0:	cmp	r0, #32
   171b4:	bhi	171c8 <main@@Base+0x112c>
   171b8:	mov	r0, sl
   171bc:	mov	r2, r6
   171c0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   171c4:	mov	r2, r0
   171c8:	cmp	r2, r6
   171cc:	bne	217bc <main@@Base+0xb720>
   171d0:	b	2181c <main@@Base+0xb780>
   171d4:	mov	r0, sl
   171d8:	mov	r1, r7
   171dc:	mov	r2, r6
   171e0:	mov	r3, #22
   171e4:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   171e8:	ldr	r5, [sp, #48]	; 0x30
   171ec:	mov	r7, r0
   171f0:	ldr	r0, [sl]
   171f4:	bl	32f5c <flatcc_builder_end_vector@@Base>
   171f8:	cmp	r0, #0
   171fc:	str	r0, [sp, #60]	; 0x3c
   17200:	beq	218cc <main@@Base+0xb830>
   17204:	ldr	r0, [sl]
   17208:	mov	r1, #31
   1720c:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   17210:	cmp	r0, #0
   17214:	beq	218cc <main@@Base+0xb830>
   17218:	ldr	r1, [sp, #60]	; 0x3c
   1721c:	mov	r4, r7
   17220:	str	r1, [r0]
   17224:	sub	r0, r6, r4
   17228:	cmp	r0, #2
   1722c:	bge	21770 <main@@Base+0xb6d4>
   17230:	b	19970 <main@@Base+0x38d4>
   17234:	cmp	r0, #34	; 0x22
   17238:	bne	1d0c8 <main@@Base+0x702c>
   1723c:	add	r1, r8, #10
   17240:	sub	r0, r6, r1
   17244:	cmp	r0, #2
   17248:	blt	1745c <main@@Base+0x13c0>
   1724c:	ldrb	r0, [r1]
   17250:	cmp	r0, #32
   17254:	bls	17448 <main@@Base+0x13ac>
   17258:	mov	r2, r1
   1725c:	cmp	r2, r6
   17260:	bne	17474 <main@@Base+0x13d8>
   17264:	b	174ac <main@@Base+0x1410>
   17268:	bne	17278 <main@@Base+0x11dc>
   1726c:	ldrb	r0, [r7, #2]!
   17270:	cmp	r0, #32
   17274:	bhi	17288 <main@@Base+0x11ec>
   17278:	mov	r0, sl
   1727c:	mov	r2, r6
   17280:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   17284:	mov	r7, r0
   17288:	cmp	r7, r6
   1728c:	mov	r4, r6
   17290:	beq	172d8 <main@@Base+0x123c>
   17294:	ldrb	r0, [r7]
   17298:	cmp	r0, #93	; 0x5d
   1729c:	bne	172d4 <main@@Base+0x1238>
   172a0:	ldr	r5, [sp, #48]	; 0x30
   172a4:	add	r1, r7, #1
   172a8:	sub	r0, r6, r1
   172ac:	cmp	r0, #2
   172b0:	blt	1a908 <main@@Base+0x486c>
   172b4:	ldrb	r0, [r1]
   172b8:	cmp	r0, #32
   172bc:	bhi	173e4 <main@@Base+0x1348>
   172c0:	bne	1a908 <main@@Base+0x486c>
   172c4:	ldrb	r0, [r7, #2]!
   172c8:	cmp	r0, #32
   172cc:	bhi	171f0 <main@@Base+0x1154>
   172d0:	b	1a908 <main@@Base+0x486c>
   172d4:	mov	r4, r7
   172d8:	ldr	r0, [sl]
   172dc:	mov	r1, #1
   172e0:	bl	31188 <flatcc_builder_extend_vector@@Base>
   172e4:	mov	r3, r0
   172e8:	cmp	r0, #0
   172ec:	beq	16fd0 <main@@Base+0xf34>
   172f0:	mov	r0, sl
   172f4:	mov	r1, r4
   172f8:	mov	r2, r6
   172fc:	bl	23f18 <main@@Base+0xde7c>
   17300:	mov	r1, r0
   17304:	sub	r0, r6, r0
   17308:	cmp	r0, #2
   1730c:	blt	17340 <main@@Base+0x12a4>
   17310:	ldrb	r0, [r1]
   17314:	cmp	r0, #32
   17318:	bls	1732c <main@@Base+0x1290>
   1731c:	mov	r4, r1
   17320:	cmp	r4, r6
   17324:	bne	17358 <main@@Base+0x12bc>
   17328:	b	173ec <main@@Base+0x1350>
   1732c:	bne	17340 <main@@Base+0x12a4>
   17330:	mov	r4, r1
   17334:	ldrb	r0, [r4, #1]!
   17338:	cmp	r0, #32
   1733c:	bhi	17350 <main@@Base+0x12b4>
   17340:	mov	r0, sl
   17344:	mov	r2, r6
   17348:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1734c:	mov	r4, r0
   17350:	cmp	r4, r6
   17354:	beq	173ec <main@@Base+0x1350>
   17358:	ldrb	r0, [r4]
   1735c:	cmp	r0, #44	; 0x2c
   17360:	bne	173f8 <main@@Base+0x135c>
   17364:	add	r1, r4, #1
   17368:	sub	r0, r6, r1
   1736c:	cmp	r0, #2
   17370:	blt	173a0 <main@@Base+0x1304>
   17374:	ldrb	r0, [r1]
   17378:	cmp	r0, #32
   1737c:	bls	17390 <main@@Base+0x12f4>
   17380:	mov	r4, r1
   17384:	cmp	r4, r6
   17388:	bne	173b8 <main@@Base+0x131c>
   1738c:	b	17434 <main@@Base+0x1398>
   17390:	bne	173a0 <main@@Base+0x1304>
   17394:	ldrb	r0, [r4, #2]!
   17398:	cmp	r0, #32
   1739c:	bhi	173b0 <main@@Base+0x1314>
   173a0:	mov	r0, sl
   173a4:	mov	r2, r6
   173a8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   173ac:	mov	r4, r0
   173b0:	cmp	r4, r6
   173b4:	beq	17434 <main@@Base+0x1398>
   173b8:	ldrb	r0, [r4]
   173bc:	cmp	r0, #93	; 0x5d
   173c0:	bne	172d8 <main@@Base+0x123c>
   173c4:	ldr	r5, [sp, #48]	; 0x30
   173c8:	add	r1, r4, #1
   173cc:	sub	r0, r6, r1
   173d0:	cmp	r0, #2
   173d4:	blt	1a908 <main@@Base+0x486c>
   173d8:	ldrb	r0, [r1]
   173dc:	cmp	r0, #32
   173e0:	bls	19c4c <main@@Base+0x3bb0>
   173e4:	mov	r7, r1
   173e8:	b	171f0 <main@@Base+0x1154>
   173ec:	ldr	r5, [sp, #48]	; 0x30
   173f0:	mov	r7, r6
   173f4:	b	171f0 <main@@Base+0x1154>
   173f8:	ldr	r5, [sp, #48]	; 0x30
   173fc:	cmp	r0, #93	; 0x5d
   17400:	bne	18dd4 <main@@Base+0x2d38>
   17404:	add	r1, r4, #1
   17408:	sub	r0, r6, r1
   1740c:	cmp	r0, #2
   17410:	blt	1a908 <main@@Base+0x486c>
   17414:	ldrb	r0, [r1]
   17418:	cmp	r0, #32
   1741c:	bls	1a8e8 <main@@Base+0x484c>
   17420:	ldr	r6, [sp, #52]	; 0x34
   17424:	ldr	sl, [sp, #44]	; 0x2c
   17428:	ldr	r5, [sp, #48]	; 0x30
   1742c:	mov	r7, r1
   17430:	b	171f0 <main@@Base+0x1154>
   17434:	mov	r0, sl
   17438:	mov	r1, r6
   1743c:	mov	r2, r6
   17440:	mov	r3, #9
   17444:	b	171e4 <main@@Base+0x1148>
   17448:	bne	1745c <main@@Base+0x13c0>
   1744c:	mov	r2, r1
   17450:	ldrb	r0, [r2, #1]!
   17454:	cmp	r0, #32
   17458:	bhi	1746c <main@@Base+0x13d0>
   1745c:	mov	r0, sl
   17460:	mov	r2, r6
   17464:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   17468:	mov	r2, r0
   1746c:	cmp	r2, r6
   17470:	beq	174ac <main@@Base+0x1410>
   17474:	ldrb	r0, [r2]
   17478:	cmp	r0, #58	; 0x3a
   1747c:	bne	174ac <main@@Base+0x1410>
   17480:	add	r1, r2, #1
   17484:	sub	r0, r6, r1
   17488:	cmp	r0, #2
   1748c:	blt	19568 <main@@Base+0x34cc>
   17490:	ldrb	r0, [r1]
   17494:	cmp	r0, #32
   17498:	bls	19558 <main@@Base+0x34bc>
   1749c:	mov	r2, r1
   174a0:	cmp	r4, r2
   174a4:	bne	19580 <main@@Base+0x34e4>
   174a8:	b	1d0c8 <main@@Base+0x702c>
   174ac:	mov	r1, r2
   174b0:	mov	r0, sl
   174b4:	mov	r2, r6
   174b8:	mov	r3, #4
   174bc:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   174c0:	b	19574 <main@@Base+0x34d8>
   174c4:	cmp	r0, #34	; 0x22
   174c8:	bne	1c464 <main@@Base+0x63c8>
   174cc:	add	r1, r8, #18
   174d0:	sub	r0, r6, r1
   174d4:	cmp	r0, #2
   174d8:	blt	19b60 <main@@Base+0x3ac4>
   174dc:	ldrb	r0, [r1]
   174e0:	cmp	r0, #32
   174e4:	bls	19b4c <main@@Base+0x3ab0>
   174e8:	mov	r4, r1
   174ec:	cmp	r4, r6
   174f0:	bne	19b78 <main@@Base+0x3adc>
   174f4:	b	19bb8 <main@@Base+0x3b1c>
   174f8:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   174fc:	bne	1750c <main@@Base+0x1470>
   17500:	ldrb	r0, [r7, #2]!
   17504:	cmp	r0, #32
   17508:	bhi	1751c <main@@Base+0x1480>
   1750c:	mov	r0, sl
   17510:	mov	r2, r6
   17514:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   17518:	mov	r7, r0
   1751c:	cmp	r8, r7
   17520:	beq	2174c <main@@Base+0xb6b0>
   17524:	mov	r0, #0
   17528:	strb	r0, [fp, #-60]	; 0xffffffc4
   1752c:	sub	r0, r6, r7
   17530:	cmp	r0, #4
   17534:	blt	17570 <main@@Base+0x14d4>
   17538:	ldr	r1, [r7]
   1753c:	movw	r2, #29300	; 0x7274
   17540:	movt	r2, #25973	; 0x6575
   17544:	cmp	r1, r2
   17548:	beq	175e8 <main@@Base+0x154c>
   1754c:	cmp	r0, #5
   17550:	blt	17570 <main@@Base+0x14d4>
   17554:	movw	r1, #48983	; 0xbf57
   17558:	mov	r0, r7
   1755c:	mov	r2, #5
   17560:	movt	r1, #4
   17564:	bl	14e6c <memcmp@plt>
   17568:	cmp	r0, #0
   1756c:	beq	176d0 <main@@Base+0x1634>
   17570:	mov	r2, r6
   17574:	mov	r6, #0
   17578:	cmp	r7, r2
   1757c:	str	r6, [fp, #-52]	; 0xffffffcc
   17580:	str	r6, [fp, #-56]	; 0xffffffc8
   17584:	str	r6, [sp, #64]	; 0x40
   17588:	beq	175d8 <main@@Base+0x153c>
   1758c:	sub	r0, fp, #56	; 0x38
   17590:	mov	r1, r7
   17594:	add	r3, sp, #64	; 0x40
   17598:	mov	r8, r2
   1759c:	str	r0, [sp]
   175a0:	mov	r0, sl
   175a4:	bl	392f4 <flatcc_json_parser_integer@@Base>
   175a8:	cmp	r0, r7
   175ac:	beq	17608 <main@@Base+0x156c>
   175b0:	mov	r4, r0
   175b4:	ldr	r0, [sp, #64]	; 0x40
   175b8:	ldr	r5, [sp, #48]	; 0x30
   175bc:	cmp	r0, #0
   175c0:	beq	17614 <main@@Base+0x1578>
   175c4:	mov	r0, sl
   175c8:	mov	r1, r4
   175cc:	mov	r2, r8
   175d0:	mov	r3, #8
   175d4:	b	17638 <main@@Base+0x159c>
   175d8:	ldr	r5, [sp, #48]	; 0x30
   175dc:	mov	r8, r2
   175e0:	mov	r4, r2
   175e4:	b	17640 <main@@Base+0x15a4>
   175e8:	ldr	r5, [sp, #48]	; 0x30
   175ec:	mov	r8, r6
   175f0:	mov	r6, #1
   175f4:	add	r4, r7, #4
   175f8:	strb	r6, [fp, #-60]	; 0xffffffc4
   175fc:	cmp	r7, r4
   17600:	bne	1769c <main@@Base+0x1600>
   17604:	b	17658 <main@@Base+0x15bc>
   17608:	ldr	r5, [sp, #48]	; 0x30
   1760c:	mov	r4, r7
   17610:	b	17640 <main@@Base+0x15a4>
   17614:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17618:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1761c:	subs	r2, r0, #256	; 0x100
   17620:	sbcs	r1, r1, #0
   17624:	bcc	176f0 <main@@Base+0x1654>
   17628:	mov	r0, sl
   1762c:	mov	r1, r4
   17630:	mov	r2, r8
   17634:	mov	r3, #7
   17638:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1763c:	mov	r4, r0
   17640:	uxtb	r6, r6
   17644:	cmp	r6, #0
   17648:	movwne	r6, #1
   1764c:	strb	r6, [fp, #-60]	; 0xffffffc4
   17650:	cmp	r7, r4
   17654:	bne	1769c <main@@Base+0x1600>
   17658:	sub	r0, fp, #60	; 0x3c
   1765c:	mov	r1, r7
   17660:	mov	r2, r8
   17664:	mov	r6, r8
   17668:	str	r0, [sp]
   1766c:	movw	r0, #148	; 0x94
   17670:	movt	r0, #6
   17674:	add	r3, r0, #60	; 0x3c
   17678:	mov	r0, sl
   1767c:	bl	25d24 <main@@Base+0xfc88>
   17680:	mov	r4, r0
   17684:	cmp	r0, r7
   17688:	beq	16fd0 <main@@Base+0xf34>
   1768c:	mov	r8, r6
   17690:	cmp	r4, r6
   17694:	beq	218d4 <main@@Base+0xb838>
   17698:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   1769c:	cmp	r6, #1
   176a0:	ldrbeq	r0, [sl, #8]
   176a4:	tsteq	r0, #2
   176a8:	beq	19960 <main@@Base+0x38c4>
   176ac:	ldr	r0, [sl]
   176b0:	mov	r1, #15
   176b4:	mov	r2, #1
   176b8:	mov	r3, #1
   176bc:	bl	33604 <flatcc_builder_table_add@@Base>
   176c0:	cmp	r0, #0
   176c4:	beq	218d4 <main@@Base+0xb838>
   176c8:	strb	r6, [r0]
   176cc:	b	19960 <main@@Base+0x38c4>
   176d0:	ldr	r5, [sp, #48]	; 0x30
   176d4:	mov	r8, r6
   176d8:	mov	r6, #0
   176dc:	add	r4, r7, #5
   176e0:	strb	r6, [fp, #-60]	; 0xffffffc4
   176e4:	cmp	r7, r4
   176e8:	bne	1769c <main@@Base+0x1600>
   176ec:	b	17658 <main@@Base+0x15bc>
   176f0:	mov	r6, r0
   176f4:	b	17640 <main@@Base+0x15a4>
   176f8:	bne	1770c <main@@Base+0x1670>
   176fc:	mov	r4, r1
   17700:	ldrb	r0, [r4, #1]!
   17704:	cmp	r0, #32
   17708:	bhi	1771c <main@@Base+0x1680>
   1770c:	mov	r0, sl
   17710:	mov	r2, r6
   17714:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   17718:	mov	r4, r0
   1771c:	cmp	r4, r6
   17720:	beq	1775c <main@@Base+0x16c0>
   17724:	ldrb	r0, [r4]
   17728:	cmp	r0, #58	; 0x3a
   1772c:	bne	1775c <main@@Base+0x16c0>
   17730:	add	r1, r4, #1
   17734:	sub	r0, r6, r1
   17738:	cmp	r0, #2
   1773c:	blt	19c64 <main@@Base+0x3bc8>
   17740:	ldrb	r0, [r1]
   17744:	cmp	r0, #32
   17748:	bls	19c54 <main@@Base+0x3bb8>
   1774c:	mov	r4, r1
   17750:	cmp	r9, r4
   17754:	bne	19c7c <main@@Base+0x3be0>
   17758:	b	1ab4c <main@@Base+0x4ab0>
   1775c:	mov	r0, sl
   17760:	mov	r1, r4
   17764:	mov	r2, r6
   17768:	mov	r3, #4
   1776c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   17770:	b	19c70 <main@@Base+0x3bd4>
   17774:	mov	r0, sl
   17778:	mov	r1, r4
   1777c:	mov	r2, r6
   17780:	mov	r3, #9
   17784:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   17788:	b	20ef0 <main@@Base+0xae54>
   1778c:	bne	1779c <main@@Base+0x1700>
   17790:	ldrb	r0, [r4, #2]!
   17794:	cmp	r0, #32
   17798:	bhi	177ac <main@@Base+0x1710>
   1779c:	mov	r0, r6
   177a0:	mov	r2, r5
   177a4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   177a8:	mov	r4, r0
   177ac:	cmp	r9, r4
   177b0:	beq	207a8 <main@@Base+0xa70c>
   177b4:	ldr	sl, [sp, #44]	; 0x2c
   177b8:	mov	r1, #1
   177bc:	mov	r2, #1
   177c0:	mvn	r3, #0
   177c4:	ldr	r0, [sl]
   177c8:	bl	31cdc <flatcc_builder_start_vector@@Base>
   177cc:	cmp	r0, #0
   177d0:	bne	218f4 <main@@Base+0xb858>
   177d4:	mov	r6, r5
   177d8:	cmp	r4, r5
   177dc:	beq	17818 <main@@Base+0x177c>
   177e0:	ldrb	r0, [r4]
   177e4:	cmp	r0, #91	; 0x5b
   177e8:	bne	17818 <main@@Base+0x177c>
   177ec:	add	r1, r4, #1
   177f0:	sub	r0, r6, r1
   177f4:	cmp	r0, #2
   177f8:	blt	19090 <main@@Base+0x2ff4>
   177fc:	ldrb	r0, [r1]
   17800:	cmp	r0, #32
   17804:	bls	19080 <main@@Base+0x2fe4>
   17808:	mov	r4, r1
   1780c:	cmp	r4, r6
   17810:	bne	190a8 <main@@Base+0x300c>
   17814:	b	190d4 <main@@Base+0x3038>
   17818:	mov	r0, sl
   1781c:	mov	r1, r4
   17820:	mov	r2, r6
   17824:	mov	r3, #22
   17828:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1782c:	ldr	r5, [sp, #48]	; 0x30
   17830:	mov	r4, r0
   17834:	ldr	r0, [sl]
   17838:	bl	32f5c <flatcc_builder_end_vector@@Base>
   1783c:	cmp	r0, #0
   17840:	str	r0, [sp, #60]	; 0x3c
   17844:	beq	16fd0 <main@@Base+0xf34>
   17848:	ldr	r0, [sl]
   1784c:	mov	r1, #24
   17850:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   17854:	cmp	r0, #0
   17858:	bne	20f1c <main@@Base+0xae80>
   1785c:	b	16fd0 <main@@Base+0xf34>
   17860:	bne	17874 <main@@Base+0x17d8>
   17864:	mov	r4, r1
   17868:	ldrb	r0, [r4, #1]!
   1786c:	cmp	r0, #32
   17870:	bhi	17884 <main@@Base+0x17e8>
   17874:	mov	r0, sl
   17878:	mov	r2, r6
   1787c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   17880:	mov	r4, r0
   17884:	cmp	r4, r6
   17888:	beq	178c4 <main@@Base+0x1828>
   1788c:	ldrb	r0, [r4]
   17890:	cmp	r0, #58	; 0x3a
   17894:	bne	178c4 <main@@Base+0x1828>
   17898:	add	r1, r4, #1
   1789c:	sub	r0, r6, r1
   178a0:	cmp	r0, #2
   178a4:	blt	19de4 <main@@Base+0x3d48>
   178a8:	ldrb	r0, [r1]
   178ac:	cmp	r0, #32
   178b0:	bls	19dd4 <main@@Base+0x3d38>
   178b4:	mov	r4, r1
   178b8:	cmp	r7, r4
   178bc:	bne	19dfc <main@@Base+0x3d60>
   178c0:	b	1c464 <main@@Base+0x63c8>
   178c4:	mov	r0, sl
   178c8:	mov	r1, r4
   178cc:	mov	r2, r6
   178d0:	mov	r3, #4
   178d4:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   178d8:	b	19df0 <main@@Base+0x3d54>
   178dc:	cmp	r0, #34	; 0x22
   178e0:	bne	1d0c8 <main@@Base+0x702c>
   178e4:	add	r1, r8, #18
   178e8:	sub	r0, r6, r1
   178ec:	cmp	r0, #2
   178f0:	blt	19d64 <main@@Base+0x3cc8>
   178f4:	ldrb	r0, [r1]
   178f8:	cmp	r0, #32
   178fc:	bls	19d50 <main@@Base+0x3cb4>
   17900:	mov	r7, r1
   17904:	cmp	r7, r6
   17908:	bne	19d7c <main@@Base+0x3ce0>
   1790c:	b	19dbc <main@@Base+0x3d20>
   17910:	bne	17920 <main@@Base+0x1884>
   17914:	ldrb	r0, [r7, #2]!
   17918:	cmp	r0, #32
   1791c:	bhi	17930 <main@@Base+0x1894>
   17920:	mov	r0, sl
   17924:	mov	r2, r6
   17928:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1792c:	mov	r7, r0
   17930:	cmp	r8, r7
   17934:	beq	2174c <main@@Base+0xb6b0>
   17938:	mov	r2, r6
   1793c:	mov	r6, #0
   17940:	cmp	r7, r2
   17944:	str	r6, [fp, #-52]	; 0xffffffcc
   17948:	str	r6, [fp, #-56]	; 0xffffffc8
   1794c:	strh	r6, [fp, #-60]	; 0xffffffc4
   17950:	str	r6, [sp, #64]	; 0x40
   17954:	beq	179bc <main@@Base+0x1920>
   17958:	sub	r0, fp, #56	; 0x38
   1795c:	mov	r1, r7
   17960:	add	r3, sp, #64	; 0x40
   17964:	mov	r8, r2
   17968:	str	r0, [sp]
   1796c:	mov	r0, sl
   17970:	bl	392f4 <flatcc_json_parser_integer@@Base>
   17974:	ldr	r5, [sp, #48]	; 0x30
   17978:	cmp	r0, r7
   1797c:	beq	179d4 <main@@Base+0x1938>
   17980:	ldr	r2, [sp, #64]	; 0x40
   17984:	mov	r4, r0
   17988:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1798c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17990:	cmp	r2, #0
   17994:	beq	179e4 <main@@Base+0x1948>
   17998:	movw	r2, #32769	; 0x8001
   1799c:	subs	r2, r0, r2
   179a0:	sbcs	r1, r1, #0
   179a4:	bcc	17a14 <main@@Base+0x1978>
   179a8:	mov	r0, sl
   179ac:	mov	r1, r4
   179b0:	mov	r2, r8
   179b4:	mov	r3, #8
   179b8:	b	17a00 <main@@Base+0x1964>
   179bc:	ldr	r5, [sp, #48]	; 0x30
   179c0:	mov	r8, r2
   179c4:	mov	r4, r2
   179c8:	cmp	r7, r4
   179cc:	bne	17a7c <main@@Base+0x19e0>
   179d0:	b	17a38 <main@@Base+0x199c>
   179d4:	mov	r4, r7
   179d8:	cmp	r7, r4
   179dc:	bne	17a7c <main@@Base+0x19e0>
   179e0:	b	17a38 <main@@Base+0x199c>
   179e4:	subs	r2, r0, #32768	; 0x8000
   179e8:	sbcs	r1, r1, #0
   179ec:	bcc	17a28 <main@@Base+0x198c>
   179f0:	mov	r0, sl
   179f4:	mov	r1, r4
   179f8:	mov	r2, r8
   179fc:	mov	r3, #7
   17a00:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   17a04:	mov	r4, r0
   17a08:	cmp	r7, r4
   17a0c:	bne	17a7c <main@@Base+0x19e0>
   17a10:	b	17a38 <main@@Base+0x199c>
   17a14:	rsb	r6, r0, #0
   17a18:	strh	r6, [fp, #-60]	; 0xffffffc4
   17a1c:	cmp	r7, r4
   17a20:	bne	17a7c <main@@Base+0x19e0>
   17a24:	b	17a38 <main@@Base+0x199c>
   17a28:	mov	r6, r0
   17a2c:	strh	r6, [fp, #-60]	; 0xffffffc4
   17a30:	cmp	r7, r4
   17a34:	bne	17a7c <main@@Base+0x19e0>
   17a38:	sub	r0, fp, #60	; 0x3c
   17a3c:	mov	r1, r7
   17a40:	mov	r2, r8
   17a44:	mov	r6, r8
   17a48:	str	r0, [sp]
   17a4c:	movw	r0, #148	; 0x94
   17a50:	movt	r0, #6
   17a54:	add	r3, r0, #12
   17a58:	mov	r0, sl
   17a5c:	bl	23cbc <main@@Base+0xdc20>
   17a60:	mov	r4, r0
   17a64:	cmp	r0, r7
   17a68:	beq	16fd0 <main@@Base+0xf34>
   17a6c:	mov	r8, r6
   17a70:	cmp	r4, r6
   17a74:	beq	218d4 <main@@Base+0xb838>
   17a78:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   17a7c:	uxth	r0, r6
   17a80:	cmp	r0, #100	; 0x64
   17a84:	ldrbeq	r0, [sl, #8]
   17a88:	tsteq	r0, #2
   17a8c:	beq	19960 <main@@Base+0x38c4>
   17a90:	ldr	r0, [sl]
   17a94:	mov	r1, #2
   17a98:	mov	r2, #2
   17a9c:	mov	r3, #2
   17aa0:	bl	33604 <flatcc_builder_table_add@@Base>
   17aa4:	cmp	r0, #0
   17aa8:	bne	1995c <main@@Base+0x38c0>
   17aac:	b	218d4 <main@@Base+0xb838>
   17ab0:	bne	17ac0 <main@@Base+0x1a24>
   17ab4:	ldrb	r0, [r4, #2]!
   17ab8:	cmp	r0, #32
   17abc:	bhi	17ad0 <main@@Base+0x1a34>
   17ac0:	mov	r0, sl
   17ac4:	mov	r2, r6
   17ac8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   17acc:	mov	r4, r0
   17ad0:	cmp	r8, r4
   17ad4:	beq	2174c <main@@Base+0xb6b0>
   17ad8:	ldr	r0, [sl]
   17adc:	mov	r1, #0
   17ae0:	mov	r2, #32
   17ae4:	mov	r3, #16
   17ae8:	bl	33604 <flatcc_builder_table_add@@Base>
   17aec:	cmp	r0, #0
   17af0:	str	r0, [sp, #24]
   17af4:	beq	16fd0 <main@@Base+0xf34>
   17af8:	ldr	r5, [sp, #48]	; 0x30
   17afc:	cmp	r4, r6
   17b00:	beq	17b40 <main@@Base+0x1aa4>
   17b04:	ldrb	r0, [r4]
   17b08:	cmp	r0, #123	; 0x7b
   17b0c:	bne	17b40 <main@@Base+0x1aa4>
   17b10:	add	r1, r4, #1
   17b14:	sub	r0, r6, r1
   17b18:	cmp	r0, #2
   17b1c:	blt	17b78 <main@@Base+0x1adc>
   17b20:	ldrb	r0, [r1]
   17b24:	cmp	r0, #32
   17b28:	bls	17b68 <main@@Base+0x1acc>
   17b2c:	mov	r4, r1
   17b30:	cmp	r4, r6
   17b34:	mov	r2, r6
   17b38:	bne	17b94 <main@@Base+0x1af8>
   17b3c:	b	17bd4 <main@@Base+0x1b38>
   17b40:	mov	r0, sl
   17b44:	mov	r1, r4
   17b48:	mov	r2, r6
   17b4c:	mov	r3, #21
   17b50:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   17b54:	mov	r4, r0
   17b58:	sub	r0, r6, r4
   17b5c:	cmp	r0, #2
   17b60:	bge	21770 <main@@Base+0xb6d4>
   17b64:	b	19970 <main@@Base+0x38d4>
   17b68:	bne	17b78 <main@@Base+0x1adc>
   17b6c:	ldrb	r0, [r4, #2]!
   17b70:	cmp	r0, #32
   17b74:	bhi	17b88 <main@@Base+0x1aec>
   17b78:	mov	r0, sl
   17b7c:	mov	r2, r6
   17b80:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   17b84:	mov	r4, r0
   17b88:	cmp	r4, r6
   17b8c:	mov	r2, r6
   17b90:	beq	17bd4 <main@@Base+0x1b38>
   17b94:	ldrb	r0, [r4]
   17b98:	cmp	r0, #125	; 0x7d
   17b9c:	bne	17bd0 <main@@Base+0x1b34>
   17ba0:	add	r1, r4, #1
   17ba4:	sub	r0, r6, r1
   17ba8:	cmp	r0, #2
   17bac:	blt	1bb94 <main@@Base+0x5af8>
   17bb0:	ldrb	r0, [r1]
   17bb4:	cmp	r0, #32
   17bb8:	bhi	189a8 <main@@Base+0x290c>
   17bbc:	bne	1bb94 <main@@Base+0x5af8>
   17bc0:	ldrb	r0, [r4, #2]!
   17bc4:	cmp	r0, #32
   17bc8:	bhi	21764 <main@@Base+0xb6c8>
   17bcc:	b	1bb94 <main@@Base+0x5af8>
   17bd0:	mov	r2, r4
   17bd4:	ldr	r0, [sp, #24]
   17bd8:	add	r0, r0, #26
   17bdc:	str	r0, [sp, #20]
   17be0:	cmp	r2, r6
   17be4:	mov	r8, r6
   17be8:	beq	17c3c <main@@Base+0x1ba0>
   17bec:	ldrb	r0, [r2]
   17bf0:	cmp	r0, #46	; 0x2e
   17bf4:	beq	17c10 <main@@Base+0x1b74>
   17bf8:	cmp	r0, #34	; 0x22
   17bfc:	bne	17c2c <main@@Base+0x1b90>
   17c00:	ldr	r0, [sp, #40]	; 0x28
   17c04:	mov	r1, #0
   17c08:	add	r8, r2, #1
   17c0c:	b	17c38 <main@@Base+0x1b9c>
   17c10:	mov	r1, r2
   17c14:	mov	r0, sl
   17c18:	mov	r2, r6
   17c1c:	mov	r3, #5
   17c20:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   17c24:	mov	r8, r0
   17c28:	b	17c3c <main@@Base+0x1ba0>
   17c2c:	ldr	r0, [sp, #40]	; 0x28
   17c30:	mov	r1, #1
   17c34:	mov	r8, r2
   17c38:	str	r1, [r0]
   17c3c:	sub	ip, r6, r8
   17c40:	mov	r0, #8
   17c44:	cmp	ip, #8
   17c48:	movcc	r0, ip
   17c4c:	and	r0, r0, #15
   17c50:	sub	r7, r0, #1
   17c54:	cmp	r7, #7
   17c58:	bhi	188b4 <main@@Base+0x2818>
   17c5c:	add	r5, pc, #32
   17c60:	mov	r1, #0
   17c64:	mov	lr, #0
   17c68:	mov	r9, #0
   17c6c:	mov	r6, #0
   17c70:	mov	r3, #0
   17c74:	mov	r4, #0
   17c78:	mov	r0, #0
   17c7c:	mov	r2, #0
   17c80:	ldr	pc, [r5, r7, lsl #2]
   17c84:	andeq	r7, r1, r8, ror #25
   17c88:	andeq	r7, r1, r0, ror #25
   17c8c:	ldrdeq	r7, [r1], -r8
   17c90:	ldrdeq	r7, [r1], -r0
   17c94:	andeq	r7, r1, r4, asr #25
   17c98:			; <UNDEFINED> instruction: 0x00017cb8
   17c9c:	andeq	r7, r1, r8, lsr #25
   17ca0:	andeq	r7, r1, r4, lsr #25
   17ca4:	ldrb	lr, [r8, #7]
   17ca8:	ldrb	r0, [r8, #6]
   17cac:	mov	r9, r1
   17cb0:	orr	r0, lr, r0, lsl #8
   17cb4:	mov	r1, r0
   17cb8:	ldrb	r0, [r8, #5]
   17cbc:	mov	r6, r9
   17cc0:	orr	r1, r1, r0, lsl #16
   17cc4:	ldrb	r0, [r8, #4]
   17cc8:	mov	r3, r6
   17ccc:	orr	r1, r1, r0, lsl #24
   17cd0:	ldrb	r0, [r8, #3]
   17cd4:	orr	r4, r0, r3
   17cd8:	ldrb	r0, [r8, #2]
   17cdc:	orr	r0, r4, r0, lsl #8
   17ce0:	ldrb	r2, [r8, #1]
   17ce4:	orr	r2, r0, r2, lsl #16
   17ce8:	ldrb	r0, [r8]
   17cec:	movw	r3, #29556	; 0x7374
   17cf0:	movt	r3, #29797	; 0x7465
   17cf4:	orr	r2, r2, r0, lsl #24
   17cf8:	mvn	r0, #-855638016	; 0xcd000000
   17cfc:	subs	r0, r0, r1
   17d00:	sbcs	r0, r3, r2
   17d04:	bcc	17d84 <main@@Base+0x1ce8>
   17d08:	ldr	r6, [sp, #52]	; 0x34
   17d0c:	and	r1, r1, #-16777216	; 0xff000000
   17d10:	eor	r0, r2, r3
   17d14:	eor	r2, r1, #822083584	; 0x31000000
   17d18:	orrs	r2, r2, r0
   17d1c:	beq	17e64 <main@@Base+0x1dc8>
   17d20:	eor	r1, r1, #838860800	; 0x32000000
   17d24:	orrs	r0, r1, r0
   17d28:	bne	188b4 <main@@Base+0x2818>
   17d2c:	cmp	ip, #6
   17d30:	mov	r6, r8
   17d34:	blt	1832c <main@@Base+0x2290>
   17d38:	ldr	r2, [sp, #40]	; 0x28
   17d3c:	mov	r1, r8
   17d40:	ldrb	r0, [r1, #5]!
   17d44:	ldr	r2, [r2]
   17d48:	cmp	r2, #0
   17d4c:	beq	17f78 <main@@Base+0x1edc>
   17d50:	cmp	r0, #33	; 0x21
   17d54:	bcc	17d64 <main@@Base+0x1cc8>
   17d58:	cmp	r0, #58	; 0x3a
   17d5c:	mov	r6, r8
   17d60:	bne	1832c <main@@Base+0x2290>
   17d64:	ldr	r0, [sp, #40]	; 0x28
   17d68:	mov	r2, #0
   17d6c:	str	r2, [r0]
   17d70:	ldr	r4, [sp, #52]	; 0x34
   17d74:	sub	r0, r4, r1
   17d78:	cmp	r0, #2
   17d7c:	bge	17f98 <main@@Base+0x1efc>
   17d80:	b	1807c <main@@Base+0x1fe0>
   17d84:	ldr	r6, [sp, #52]	; 0x34
   17d88:	cmn	r2, #-2013265919	; 0x88000001
   17d8c:	bhi	17df8 <main@@Base+0x1d5c>
   17d90:	and	r1, r1, #-16777216	; 0xff000000
   17d94:	eor	r0, r2, r3
   17d98:	eor	r1, r1, #855638016	; 0x33000000
   17d9c:	orrs	r0, r1, r0
   17da0:	bne	188b4 <main@@Base+0x2818>
   17da4:	cmp	ip, #6
   17da8:	mov	r1, r8
   17dac:	blt	1868c <main@@Base+0x25f0>
   17db0:	ldr	r1, [sp, #40]	; 0x28
   17db4:	mov	r2, r8
   17db8:	ldrb	r0, [r2, #5]!
   17dbc:	ldr	r1, [r1]
   17dc0:	cmp	r1, #0
   17dc4:	beq	17ff0 <main@@Base+0x1f54>
   17dc8:	cmp	r0, #33	; 0x21
   17dcc:	bcc	17ddc <main@@Base+0x1d40>
   17dd0:	cmp	r0, #58	; 0x3a
   17dd4:	mov	r1, r8
   17dd8:	bne	1868c <main@@Base+0x25f0>
   17ddc:	ldr	r0, [sp, #40]	; 0x28
   17de0:	mov	r1, #0
   17de4:	str	r1, [r0]
   17de8:	sub	r0, r6, r2
   17dec:	cmp	r0, #2
   17df0:	bge	1800c <main@@Base+0x1f70>
   17df4:	b	18208 <main@@Base+0x216c>
   17df8:	lsr	r1, r2, #24
   17dfc:	and	r0, r2, #-16777216	; 0xff000000
   17e00:	cmp	r1, #120	; 0x78
   17e04:	bhi	17eb8 <main@@Base+0x1e1c>
   17e08:	teq	r0, #2013265920	; 0x78000000
   17e0c:	bne	188b4 <main@@Base+0x2818>
   17e10:	cmp	ip, #2
   17e14:	mov	r7, r8
   17e18:	blt	186d0 <main@@Base+0x2634>
   17e1c:	ldr	r2, [sp, #40]	; 0x28
   17e20:	mov	r1, r8
   17e24:	ldrb	r0, [r1, #1]!
   17e28:	ldr	r2, [r2]
   17e2c:	cmp	r2, #0
   17e30:	beq	18028 <main@@Base+0x1f8c>
   17e34:	cmp	r0, #33	; 0x21
   17e38:	bcc	17e48 <main@@Base+0x1dac>
   17e3c:	cmp	r0, #58	; 0x3a
   17e40:	mov	r7, r8
   17e44:	bne	186d0 <main@@Base+0x2634>
   17e48:	ldr	r0, [sp, #40]	; 0x28
   17e4c:	mov	r2, #0
   17e50:	str	r2, [r0]
   17e54:	sub	r0, r6, r1
   17e58:	cmp	r0, #2
   17e5c:	bge	18044 <main@@Base+0x1fa8>
   17e60:	b	18290 <main@@Base+0x21f4>
   17e64:	cmp	ip, #6
   17e68:	mov	r7, r8
   17e6c:	blt	184ac <main@@Base+0x2410>
   17e70:	ldr	r2, [sp, #40]	; 0x28
   17e74:	mov	r1, r8
   17e78:	ldrb	r0, [r1, #5]!
   17e7c:	ldr	r2, [r2]
   17e80:	cmp	r2, #0
   17e84:	beq	17fb8 <main@@Base+0x1f1c>
   17e88:	cmp	r0, #33	; 0x21
   17e8c:	bcc	17e9c <main@@Base+0x1e00>
   17e90:	cmp	r0, #58	; 0x3a
   17e94:	mov	r7, r8
   17e98:	bne	184ac <main@@Base+0x2410>
   17e9c:	ldr	r0, [sp, #40]	; 0x28
   17ea0:	mov	r2, #0
   17ea4:	str	r2, [r0]
   17ea8:	sub	r0, r6, r1
   17eac:	cmp	r0, #2
   17eb0:	bge	17fd4 <main@@Base+0x1f38>
   17eb4:	b	18104 <main@@Base+0x2068>
   17eb8:	teq	r0, #2030043136	; 0x79000000
   17ebc:	beq	17f20 <main@@Base+0x1e84>
   17ec0:	teq	r0, #2046820352	; 0x7a000000
   17ec4:	bne	188b4 <main@@Base+0x2818>
   17ec8:	cmp	ip, #2
   17ecc:	mov	r7, r8
   17ed0:	blt	1877c <main@@Base+0x26e0>
   17ed4:	ldr	r2, [sp, #40]	; 0x28
   17ed8:	mov	r1, r8
   17edc:	ldrb	r0, [r1, #1]!
   17ee0:	ldr	r2, [r2]
   17ee4:	cmp	r2, #0
   17ee8:	beq	18174 <main@@Base+0x20d8>
   17eec:	cmp	r0, #33	; 0x21
   17ef0:	bcc	17f00 <main@@Base+0x1e64>
   17ef4:	cmp	r0, #58	; 0x3a
   17ef8:	mov	r7, r8
   17efc:	bne	1877c <main@@Base+0x26e0>
   17f00:	ldr	r0, [sp, #40]	; 0x28
   17f04:	mov	r2, #0
   17f08:	str	r2, [r0]
   17f0c:	ldr	r4, [sp, #52]	; 0x34
   17f10:	sub	r0, r4, r1
   17f14:	cmp	r0, #2
   17f18:	bge	18194 <main@@Base+0x20f8>
   17f1c:	b	18548 <main@@Base+0x24ac>
   17f20:	cmp	ip, #2
   17f24:	mov	r7, r8
   17f28:	blt	1882c <main@@Base+0x2790>
   17f2c:	ldr	r2, [sp, #40]	; 0x28
   17f30:	mov	r1, r8
   17f34:	ldrb	r0, [r1, #1]!
   17f38:	ldr	r2, [r2]
   17f3c:	cmp	r2, #0
   17f40:	beq	181b4 <main@@Base+0x2118>
   17f44:	cmp	r0, #33	; 0x21
   17f48:	bcc	17f58 <main@@Base+0x1ebc>
   17f4c:	cmp	r0, #58	; 0x3a
   17f50:	mov	r7, r8
   17f54:	bne	1882c <main@@Base+0x2790>
   17f58:	ldr	r0, [sp, #40]	; 0x28
   17f5c:	mov	r2, #0
   17f60:	str	r2, [r0]
   17f64:	ldr	r4, [sp, #52]	; 0x34
   17f68:	sub	r0, r4, r1
   17f6c:	cmp	r0, #2
   17f70:	bge	181d4 <main@@Base+0x2138>
   17f74:	b	185e0 <main@@Base+0x2544>
   17f78:	cmp	r0, #34	; 0x22
   17f7c:	mov	r6, r8
   17f80:	bne	1832c <main@@Base+0x2290>
   17f84:	add	r1, r8, #6
   17f88:	ldr	r4, [sp, #52]	; 0x34
   17f8c:	sub	r0, r4, r1
   17f90:	cmp	r0, #2
   17f94:	blt	1807c <main@@Base+0x1fe0>
   17f98:	ldrb	r0, [r1]
   17f9c:	cmp	r0, #32
   17fa0:	bls	18064 <main@@Base+0x1fc8>
   17fa4:	ldr	r4, [sp, #52]	; 0x34
   17fa8:	mov	r6, r1
   17fac:	cmp	r6, r4
   17fb0:	bne	18094 <main@@Base+0x1ff8>
   17fb4:	b	180d8 <main@@Base+0x203c>
   17fb8:	cmp	r0, #34	; 0x22
   17fbc:	mov	r7, r8
   17fc0:	bne	184ac <main@@Base+0x2410>
   17fc4:	add	r1, r8, #6
   17fc8:	sub	r0, r6, r1
   17fcc:	cmp	r0, #2
   17fd0:	blt	18104 <main@@Base+0x2068>
   17fd4:	ldrb	r0, [r1]
   17fd8:	cmp	r0, #32
   17fdc:	bls	180f0 <main@@Base+0x2054>
   17fe0:	mov	r7, r1
   17fe4:	cmp	r7, r6
   17fe8:	bne	1811c <main@@Base+0x2080>
   17fec:	b	1815c <main@@Base+0x20c0>
   17ff0:	cmp	r0, #34	; 0x22
   17ff4:	mov	r1, r8
   17ff8:	bne	1868c <main@@Base+0x25f0>
   17ffc:	add	r2, r8, #6
   18000:	sub	r0, r6, r2
   18004:	cmp	r0, #2
   18008:	blt	18208 <main@@Base+0x216c>
   1800c:	ldrb	r0, [r2]
   18010:	cmp	r0, #32
   18014:	bls	181f4 <main@@Base+0x2158>
   18018:	mov	r1, r2
   1801c:	cmp	r1, r6
   18020:	bne	18224 <main@@Base+0x2188>
   18024:	b	18264 <main@@Base+0x21c8>
   18028:	cmp	r0, #34	; 0x22
   1802c:	mov	r7, r8
   18030:	bne	186d0 <main@@Base+0x2634>
   18034:	add	r1, r8, #2
   18038:	sub	r0, r6, r1
   1803c:	cmp	r0, #2
   18040:	blt	18290 <main@@Base+0x21f4>
   18044:	ldrb	r0, [r1]
   18048:	cmp	r0, #32
   1804c:	bls	18278 <main@@Base+0x21dc>
   18050:	ldr	r6, [sp, #52]	; 0x34
   18054:	mov	r7, r1
   18058:	cmp	r7, r6
   1805c:	bne	182a8 <main@@Base+0x220c>
   18060:	b	182ec <main@@Base+0x2250>
   18064:	ldr	r4, [sp, #52]	; 0x34
   18068:	bne	1807c <main@@Base+0x1fe0>
   1806c:	mov	r6, r1
   18070:	ldrb	r0, [r6, #1]!
   18074:	cmp	r0, #32
   18078:	bhi	1808c <main@@Base+0x1ff0>
   1807c:	mov	r0, sl
   18080:	mov	r2, r4
   18084:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   18088:	mov	r6, r0
   1808c:	cmp	r6, r4
   18090:	beq	180d8 <main@@Base+0x203c>
   18094:	ldrb	r0, [r6]
   18098:	cmp	r0, #58	; 0x3a
   1809c:	bne	180d8 <main@@Base+0x203c>
   180a0:	ldr	r0, [sp, #52]	; 0x34
   180a4:	add	r1, r6, #1
   180a8:	sub	r0, r0, r1
   180ac:	cmp	r0, #2
   180b0:	blt	1831c <main@@Base+0x2280>
   180b4:	ldrb	r0, [r1]
   180b8:	cmp	r0, #32
   180bc:	bls	18308 <main@@Base+0x226c>
   180c0:	ldr	sl, [sp, #44]	; 0x2c
   180c4:	mov	r6, r1
   180c8:	cmp	r8, r6
   180cc:	bne	18334 <main@@Base+0x2298>
   180d0:	ldr	r6, [sp, #52]	; 0x34
   180d4:	b	188b4 <main@@Base+0x2818>
   180d8:	ldr	r2, [sp, #52]	; 0x34
   180dc:	mov	r0, sl
   180e0:	mov	r1, r6
   180e4:	mov	r3, #4
   180e8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   180ec:	b	18328 <main@@Base+0x228c>
   180f0:	bne	18104 <main@@Base+0x2068>
   180f4:	mov	r7, r1
   180f8:	ldrb	r0, [r7, #1]!
   180fc:	cmp	r0, #32
   18100:	bhi	18114 <main@@Base+0x2078>
   18104:	mov	r0, sl
   18108:	mov	r2, r6
   1810c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   18110:	mov	r7, r0
   18114:	cmp	r7, r6
   18118:	beq	1815c <main@@Base+0x20c0>
   1811c:	ldrb	r0, [r7]
   18120:	cmp	r0, #58	; 0x3a
   18124:	bne	1815c <main@@Base+0x20c0>
   18128:	add	r1, r7, #1
   1812c:	sub	r0, r6, r1
   18130:	cmp	r0, #2
   18134:	blt	1849c <main@@Base+0x2400>
   18138:	ldrb	r0, [r1]
   1813c:	cmp	r0, #32
   18140:	bls	18484 <main@@Base+0x23e8>
   18144:	ldr	r6, [sp, #52]	; 0x34
   18148:	ldr	sl, [sp, #44]	; 0x2c
   1814c:	mov	r7, r1
   18150:	cmp	r8, r7
   18154:	bne	184b4 <main@@Base+0x2418>
   18158:	b	188b4 <main@@Base+0x2818>
   1815c:	mov	r0, sl
   18160:	mov	r1, r7
   18164:	mov	r2, r6
   18168:	mov	r3, #4
   1816c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   18170:	b	184a8 <main@@Base+0x240c>
   18174:	cmp	r0, #34	; 0x22
   18178:	mov	r7, r8
   1817c:	bne	1877c <main@@Base+0x26e0>
   18180:	add	r1, r8, #2
   18184:	ldr	r4, [sp, #52]	; 0x34
   18188:	sub	r0, r4, r1
   1818c:	cmp	r0, #2
   18190:	blt	18548 <main@@Base+0x24ac>
   18194:	ldrb	r0, [r1]
   18198:	cmp	r0, #32
   1819c:	bls	18530 <main@@Base+0x2494>
   181a0:	ldr	r4, [sp, #52]	; 0x34
   181a4:	mov	r7, r1
   181a8:	cmp	r7, r4
   181ac:	bne	18560 <main@@Base+0x24c4>
   181b0:	b	185a8 <main@@Base+0x250c>
   181b4:	cmp	r0, #34	; 0x22
   181b8:	mov	r7, r8
   181bc:	bne	1882c <main@@Base+0x2790>
   181c0:	add	r1, r8, #2
   181c4:	ldr	r4, [sp, #52]	; 0x34
   181c8:	sub	r0, r4, r1
   181cc:	cmp	r0, #2
   181d0:	blt	185e0 <main@@Base+0x2544>
   181d4:	ldrb	r0, [r1]
   181d8:	cmp	r0, #32
   181dc:	bls	185c8 <main@@Base+0x252c>
   181e0:	ldr	r4, [sp, #52]	; 0x34
   181e4:	mov	r7, r1
   181e8:	cmp	r7, r4
   181ec:	bne	185f8 <main@@Base+0x255c>
   181f0:	b	18640 <main@@Base+0x25a4>
   181f4:	bne	18208 <main@@Base+0x216c>
   181f8:	mov	r1, r2
   181fc:	ldrb	r0, [r1, #1]!
   18200:	cmp	r0, #32
   18204:	bhi	1821c <main@@Base+0x2180>
   18208:	mov	r1, r2
   1820c:	mov	r0, sl
   18210:	mov	r2, r6
   18214:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   18218:	mov	r1, r0
   1821c:	cmp	r1, r6
   18220:	beq	18264 <main@@Base+0x21c8>
   18224:	ldrb	r0, [r1]
   18228:	cmp	r0, #58	; 0x3a
   1822c:	bne	18264 <main@@Base+0x21c8>
   18230:	add	r2, r1, #1
   18234:	sub	r0, r6, r2
   18238:	cmp	r0, #2
   1823c:	blt	18678 <main@@Base+0x25dc>
   18240:	ldrb	r0, [r2]
   18244:	cmp	r0, #32
   18248:	bls	18660 <main@@Base+0x25c4>
   1824c:	ldr	r6, [sp, #52]	; 0x34
   18250:	ldr	sl, [sp, #44]	; 0x2c
   18254:	mov	r1, r2
   18258:	cmp	r8, r1
   1825c:	bne	18694 <main@@Base+0x25f8>
   18260:	b	188b4 <main@@Base+0x2818>
   18264:	mov	r0, sl
   18268:	mov	r2, r6
   1826c:	mov	r3, #4
   18270:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   18274:	b	18688 <main@@Base+0x25ec>
   18278:	ldr	r6, [sp, #52]	; 0x34
   1827c:	bne	18290 <main@@Base+0x21f4>
   18280:	mov	r7, r1
   18284:	ldrb	r0, [r7, #1]!
   18288:	cmp	r0, #32
   1828c:	bhi	182a0 <main@@Base+0x2204>
   18290:	ldr	r0, [sp, #44]	; 0x2c
   18294:	mov	r2, r6
   18298:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1829c:	mov	r7, r0
   182a0:	cmp	r7, r6
   182a4:	beq	182ec <main@@Base+0x2250>
   182a8:	ldrb	r0, [r7]
   182ac:	cmp	r0, #58	; 0x3a
   182b0:	bne	182ec <main@@Base+0x2250>
   182b4:	ldr	sl, [sp, #44]	; 0x2c
   182b8:	add	r1, r7, #1
   182bc:	sub	r0, r6, r1
   182c0:	cmp	r0, #2
   182c4:	blt	186c0 <main@@Base+0x2624>
   182c8:	ldrb	r0, [r1]
   182cc:	cmp	r0, #32
   182d0:	bls	186a8 <main@@Base+0x260c>
   182d4:	ldr	r6, [sp, #52]	; 0x34
   182d8:	ldr	sl, [sp, #44]	; 0x2c
   182dc:	mov	r7, r1
   182e0:	cmp	r8, r7
   182e4:	bne	186d8 <main@@Base+0x263c>
   182e8:	b	188b4 <main@@Base+0x2818>
   182ec:	ldr	sl, [sp, #44]	; 0x2c
   182f0:	mov	r1, r7
   182f4:	mov	r2, r6
   182f8:	mov	r3, #4
   182fc:	mov	r0, sl
   18300:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   18304:	b	186cc <main@@Base+0x2630>
   18308:	ldr	sl, [sp, #44]	; 0x2c
   1830c:	bne	1831c <main@@Base+0x2280>
   18310:	ldrb	r0, [r6, #2]!
   18314:	cmp	r0, #32
   18318:	bhi	1832c <main@@Base+0x2290>
   1831c:	ldr	r2, [sp, #52]	; 0x34
   18320:	mov	r0, sl
   18324:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   18328:	mov	r6, r0
   1832c:	cmp	r8, r6
   18330:	beq	180d0 <main@@Base+0x2034>
   18334:	ldr	r2, [sp, #52]	; 0x34
   18338:	mov	r4, #0
   1833c:	str	r4, [fp, #-52]	; 0xffffffcc
   18340:	str	r4, [fp, #-56]	; 0xffffffc8
   18344:	strb	r4, [fp, #-60]	; 0xffffffc4
   18348:	str	r4, [sp, #64]	; 0x40
   1834c:	cmp	r6, r2
   18350:	beq	183a8 <main@@Base+0x230c>
   18354:	sub	r0, fp, #56	; 0x38
   18358:	mov	r1, r6
   1835c:	add	r3, sp, #64	; 0x40
   18360:	str	r0, [sp]
   18364:	mov	r0, sl
   18368:	bl	392f4 <flatcc_json_parser_integer@@Base>
   1836c:	cmp	r0, r6
   18370:	beq	183bc <main@@Base+0x2320>
   18374:	ldr	r3, [sp, #64]	; 0x40
   18378:	mov	r1, r0
   1837c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18380:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18384:	cmp	r3, #0
   18388:	beq	183d0 <main@@Base+0x2334>
   1838c:	subs	r3, r0, #129	; 0x81
   18390:	sbcs	r2, r2, #0
   18394:	bcc	18400 <main@@Base+0x2364>
   18398:	ldr	r2, [sp, #52]	; 0x34
   1839c:	mov	r0, sl
   183a0:	mov	r3, #8
   183a4:	b	183e8 <main@@Base+0x234c>
   183a8:	mov	r1, r2
   183ac:	ldr	r5, [sp, #48]	; 0x30
   183b0:	cmp	r6, r1
   183b4:	bne	18468 <main@@Base+0x23cc>
   183b8:	b	1842c <main@@Base+0x2390>
   183bc:	mov	r1, r6
   183c0:	ldr	r5, [sp, #48]	; 0x30
   183c4:	cmp	r6, r1
   183c8:	bne	18468 <main@@Base+0x23cc>
   183cc:	b	1842c <main@@Base+0x2390>
   183d0:	subs	r3, r0, #128	; 0x80
   183d4:	sbcs	r2, r2, #0
   183d8:	bcc	18418 <main@@Base+0x237c>
   183dc:	ldr	r2, [sp, #52]	; 0x34
   183e0:	mov	r0, sl
   183e4:	mov	r3, #7
   183e8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   183ec:	mov	r1, r0
   183f0:	ldr	r5, [sp, #48]	; 0x30
   183f4:	cmp	r6, r1
   183f8:	bne	18468 <main@@Base+0x23cc>
   183fc:	b	1842c <main@@Base+0x2390>
   18400:	rsb	r4, r0, #0
   18404:	strb	r4, [fp, #-60]	; 0xffffffc4
   18408:	ldr	r5, [sp, #48]	; 0x30
   1840c:	cmp	r6, r1
   18410:	bne	18468 <main@@Base+0x23cc>
   18414:	b	1842c <main@@Base+0x2390>
   18418:	mov	r4, r0
   1841c:	strb	r4, [fp, #-60]	; 0xffffffc4
   18420:	ldr	r5, [sp, #48]	; 0x30
   18424:	cmp	r6, r1
   18428:	bne	18468 <main@@Base+0x23cc>
   1842c:	ldr	r4, [sp, #52]	; 0x34
   18430:	sub	r0, fp, #60	; 0x3c
   18434:	mov	r1, r6
   18438:	str	r0, [sp]
   1843c:	movw	r0, #628	; 0x274
   18440:	movt	r0, #6
   18444:	add	r3, r0, #80	; 0x50
   18448:	mov	r0, sl
   1844c:	mov	r2, r4
   18450:	bl	23820 <main@@Base+0xd784>
   18454:	mov	r1, r0
   18458:	cmp	r0, r6
   1845c:	cmpne	r1, r4
   18460:	beq	189bc <main@@Base+0x2920>
   18464:	ldrb	r4, [fp, #-60]	; 0xffffffc4
   18468:	ldr	r0, [sp, #24]
   1846c:	ldr	r6, [sp, #52]	; 0x34
   18470:	strb	r4, [r0, #24]
   18474:	sub	r0, r6, r1
   18478:	cmp	r0, #2
   1847c:	bge	188d8 <main@@Base+0x283c>
   18480:	b	18908 <main@@Base+0x286c>
   18484:	ldr	r6, [sp, #52]	; 0x34
   18488:	ldr	sl, [sp, #44]	; 0x2c
   1848c:	bne	1849c <main@@Base+0x2400>
   18490:	ldrb	r0, [r7, #2]!
   18494:	cmp	r0, #32
   18498:	bhi	184ac <main@@Base+0x2410>
   1849c:	mov	r0, sl
   184a0:	mov	r2, r6
   184a4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   184a8:	mov	r7, r0
   184ac:	cmp	r8, r7
   184b0:	beq	188b4 <main@@Base+0x2818>
   184b4:	mov	r0, #0
   184b8:	mov	r1, r7
   184bc:	mov	r2, r6
   184c0:	sub	r3, fp, #56	; 0x38
   184c4:	str	r0, [fp, #-52]	; 0xffffffcc
   184c8:	str	r0, [fp, #-56]	; 0xffffffc8
   184cc:	mov	r0, sl
   184d0:	bl	38758 <flatcc_json_parser_double@@Base>
   184d4:	ldr	r5, [sp, #48]	; 0x30
   184d8:	mov	r1, r0
   184dc:	cmp	r7, r0
   184e0:	bne	18514 <main@@Base+0x2478>
   184e4:	movw	r3, #388	; 0x184
   184e8:	sub	r0, fp, #56	; 0x38
   184ec:	mov	r1, r7
   184f0:	mov	r2, r6
   184f4:	str	r0, [sp]
   184f8:	mov	r0, sl
   184fc:	movt	r3, #6
   18500:	bl	26a34 <main@@Base+0x10998>
   18504:	mov	r1, r0
   18508:	cmp	r0, r7
   1850c:	cmpne	r1, r6
   18510:	beq	189bc <main@@Base+0x2920>
   18514:	vldr	d16, [fp, #-56]	; 0xffffffc8
   18518:	ldr	r0, [sp, #24]
   1851c:	vstr	d16, [r0, #16]
   18520:	sub	r0, r6, r1
   18524:	cmp	r0, #2
   18528:	bge	188d8 <main@@Base+0x283c>
   1852c:	b	18908 <main@@Base+0x286c>
   18530:	ldr	r4, [sp, #52]	; 0x34
   18534:	bne	18548 <main@@Base+0x24ac>
   18538:	mov	r7, r1
   1853c:	ldrb	r0, [r7, #1]!
   18540:	cmp	r0, #32
   18544:	bhi	18558 <main@@Base+0x24bc>
   18548:	ldr	r0, [sp, #44]	; 0x2c
   1854c:	mov	r2, r4
   18550:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   18554:	mov	r7, r0
   18558:	cmp	r7, r4
   1855c:	beq	185a8 <main@@Base+0x250c>
   18560:	ldrb	r0, [r7]
   18564:	cmp	r0, #58	; 0x3a
   18568:	bne	185a8 <main@@Base+0x250c>
   1856c:	ldr	r6, [sp, #52]	; 0x34
   18570:	ldr	sl, [sp, #44]	; 0x2c
   18574:	add	r1, r7, #1
   18578:	sub	r0, r6, r1
   1857c:	cmp	r0, #2
   18580:	blt	1876c <main@@Base+0x26d0>
   18584:	ldrb	r0, [r1]
   18588:	cmp	r0, #32
   1858c:	bls	18754 <main@@Base+0x26b8>
   18590:	ldr	r6, [sp, #52]	; 0x34
   18594:	ldr	sl, [sp, #44]	; 0x2c
   18598:	mov	r7, r1
   1859c:	cmp	r8, r7
   185a0:	bne	18784 <main@@Base+0x26e8>
   185a4:	b	188b4 <main@@Base+0x2818>
   185a8:	ldr	sl, [sp, #44]	; 0x2c
   185ac:	ldr	r6, [sp, #52]	; 0x34
   185b0:	mov	r1, r7
   185b4:	mov	r3, #4
   185b8:	mov	r0, sl
   185bc:	mov	r2, r6
   185c0:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   185c4:	b	18778 <main@@Base+0x26dc>
   185c8:	ldr	r4, [sp, #52]	; 0x34
   185cc:	bne	185e0 <main@@Base+0x2544>
   185d0:	mov	r7, r1
   185d4:	ldrb	r0, [r7, #1]!
   185d8:	cmp	r0, #32
   185dc:	bhi	185f0 <main@@Base+0x2554>
   185e0:	ldr	r0, [sp, #44]	; 0x2c
   185e4:	mov	r2, r4
   185e8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   185ec:	mov	r7, r0
   185f0:	cmp	r7, r4
   185f4:	beq	18640 <main@@Base+0x25a4>
   185f8:	ldrb	r0, [r7]
   185fc:	cmp	r0, #58	; 0x3a
   18600:	bne	18640 <main@@Base+0x25a4>
   18604:	ldr	r6, [sp, #52]	; 0x34
   18608:	ldr	sl, [sp, #44]	; 0x2c
   1860c:	add	r1, r7, #1
   18610:	sub	r0, r6, r1
   18614:	cmp	r0, #2
   18618:	blt	1881c <main@@Base+0x2780>
   1861c:	ldrb	r0, [r1]
   18620:	cmp	r0, #32
   18624:	bls	18804 <main@@Base+0x2768>
   18628:	ldr	r6, [sp, #52]	; 0x34
   1862c:	ldr	sl, [sp, #44]	; 0x2c
   18630:	mov	r7, r1
   18634:	cmp	r8, r7
   18638:	bne	18834 <main@@Base+0x2798>
   1863c:	b	188b4 <main@@Base+0x2818>
   18640:	ldr	sl, [sp, #44]	; 0x2c
   18644:	ldr	r6, [sp, #52]	; 0x34
   18648:	mov	r1, r7
   1864c:	mov	r3, #4
   18650:	mov	r0, sl
   18654:	mov	r2, r6
   18658:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1865c:	b	18828 <main@@Base+0x278c>
   18660:	ldr	r6, [sp, #52]	; 0x34
   18664:	ldr	sl, [sp, #44]	; 0x2c
   18668:	bne	18678 <main@@Base+0x25dc>
   1866c:	ldrb	r0, [r1, #2]!
   18670:	cmp	r0, #32
   18674:	bhi	1868c <main@@Base+0x25f0>
   18678:	mov	r1, r2
   1867c:	mov	r0, sl
   18680:	mov	r2, r6
   18684:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   18688:	mov	r1, r0
   1868c:	cmp	r8, r1
   18690:	beq	188b4 <main@@Base+0x2818>
   18694:	ldr	r3, [sp, #20]
   18698:	mov	r0, sl
   1869c:	mov	r2, r6
   186a0:	bl	23f18 <main@@Base+0xde7c>
   186a4:	b	188c4 <main@@Base+0x2828>
   186a8:	ldr	r6, [sp, #52]	; 0x34
   186ac:	ldr	sl, [sp, #44]	; 0x2c
   186b0:	bne	186c0 <main@@Base+0x2624>
   186b4:	ldrb	r0, [r7, #2]!
   186b8:	cmp	r0, #32
   186bc:	bhi	186d0 <main@@Base+0x2634>
   186c0:	mov	r0, sl
   186c4:	mov	r2, r6
   186c8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   186cc:	mov	r7, r0
   186d0:	cmp	r8, r7
   186d4:	beq	188b4 <main@@Base+0x2818>
   186d8:	mov	r0, #0
   186dc:	mov	r1, r7
   186e0:	mov	r2, r6
   186e4:	sub	r3, fp, #56	; 0x38
   186e8:	str	r0, [fp, #-56]	; 0xffffffc8
   186ec:	mov	r0, sl
   186f0:	bl	391a8 <flatcc_json_parser_float@@Base>
   186f4:	ldr	r5, [sp, #48]	; 0x30
   186f8:	mov	r1, r0
   186fc:	cmp	r7, r0
   18700:	bne	18738 <main@@Base+0x269c>
   18704:	sub	r0, fp, #56	; 0x38
   18708:	mov	r1, r7
   1870c:	mov	r2, r6
   18710:	str	r0, [sp]
   18714:	movw	r0, #388	; 0x184
   18718:	movt	r0, #6
   1871c:	add	r3, r0, #12
   18720:	mov	r0, sl
   18724:	bl	25f44 <main@@Base+0xfea8>
   18728:	mov	r1, r0
   1872c:	cmp	r0, r7
   18730:	cmpne	r1, r6
   18734:	beq	189bc <main@@Base+0x2920>
   18738:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1873c:	ldr	r2, [sp, #24]
   18740:	str	r0, [r2]
   18744:	sub	r0, r6, r1
   18748:	cmp	r0, #2
   1874c:	bge	188d8 <main@@Base+0x283c>
   18750:	b	18908 <main@@Base+0x286c>
   18754:	ldr	r6, [sp, #52]	; 0x34
   18758:	ldr	sl, [sp, #44]	; 0x2c
   1875c:	bne	1876c <main@@Base+0x26d0>
   18760:	ldrb	r0, [r7, #2]!
   18764:	cmp	r0, #32
   18768:	bhi	1877c <main@@Base+0x26e0>
   1876c:	mov	r0, sl
   18770:	mov	r2, r6
   18774:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   18778:	mov	r7, r0
   1877c:	cmp	r8, r7
   18780:	beq	188b4 <main@@Base+0x2818>
   18784:	mov	r0, #0
   18788:	mov	r1, r7
   1878c:	mov	r2, r6
   18790:	sub	r3, fp, #56	; 0x38
   18794:	str	r0, [fp, #-56]	; 0xffffffc8
   18798:	mov	r0, sl
   1879c:	bl	391a8 <flatcc_json_parser_float@@Base>
   187a0:	mov	r1, r0
   187a4:	cmp	r7, r0
   187a8:	bne	187e4 <main@@Base+0x2748>
   187ac:	sub	r0, fp, #56	; 0x38
   187b0:	mov	r1, r7
   187b4:	mov	r2, r6
   187b8:	str	r0, [sp]
   187bc:	movw	r0, #388	; 0x184
   187c0:	movt	r0, #6
   187c4:	add	r3, r0, #24
   187c8:	mov	r0, sl
   187cc:	bl	25f44 <main@@Base+0xfea8>
   187d0:	mov	r1, r0
   187d4:	cmp	r0, r7
   187d8:	cmpne	r1, r6
   187dc:	beq	189bc <main@@Base+0x2920>
   187e0:	ldr	sl, [sp, #44]	; 0x2c
   187e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   187e8:	ldr	r2, [sp, #24]
   187ec:	str	r0, [r2, #8]
   187f0:	ldr	r5, [sp, #48]	; 0x30
   187f4:	sub	r0, r6, r1
   187f8:	cmp	r0, #2
   187fc:	bge	188d8 <main@@Base+0x283c>
   18800:	b	18908 <main@@Base+0x286c>
   18804:	ldr	r6, [sp, #52]	; 0x34
   18808:	ldr	sl, [sp, #44]	; 0x2c
   1880c:	bne	1881c <main@@Base+0x2780>
   18810:	ldrb	r0, [r7, #2]!
   18814:	cmp	r0, #32
   18818:	bhi	1882c <main@@Base+0x2790>
   1881c:	mov	r0, sl
   18820:	mov	r2, r6
   18824:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   18828:	mov	r7, r0
   1882c:	cmp	r8, r7
   18830:	beq	188b4 <main@@Base+0x2818>
   18834:	mov	r0, #0
   18838:	mov	r1, r7
   1883c:	mov	r2, r6
   18840:	sub	r3, fp, #56	; 0x38
   18844:	str	r0, [fp, #-56]	; 0xffffffc8
   18848:	mov	r0, sl
   1884c:	bl	391a8 <flatcc_json_parser_float@@Base>
   18850:	mov	r1, r0
   18854:	cmp	r7, r0
   18858:	bne	18894 <main@@Base+0x27f8>
   1885c:	sub	r0, fp, #56	; 0x38
   18860:	mov	r1, r7
   18864:	mov	r2, r6
   18868:	str	r0, [sp]
   1886c:	movw	r0, #388	; 0x184
   18870:	movt	r0, #6
   18874:	add	r3, r0, #36	; 0x24
   18878:	mov	r0, sl
   1887c:	bl	25f44 <main@@Base+0xfea8>
   18880:	mov	r1, r0
   18884:	cmp	r0, r7
   18888:	cmpne	r1, r6
   1888c:	beq	189bc <main@@Base+0x2920>
   18890:	ldr	sl, [sp, #44]	; 0x2c
   18894:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18898:	ldr	r2, [sp, #24]
   1889c:	str	r0, [r2, #4]
   188a0:	ldr	r5, [sp, #48]	; 0x30
   188a4:	sub	r0, r6, r1
   188a8:	cmp	r0, #2
   188ac:	blt	18908 <main@@Base+0x286c>
   188b0:	b	188d8 <main@@Base+0x283c>
   188b4:	mov	r0, sl
   188b8:	mov	r1, r8
   188bc:	mov	r2, r6
   188c0:	bl	376d0 <flatcc_json_parser_unmatched_symbol@@Base>
   188c4:	mov	r1, r0
   188c8:	ldr	r5, [sp, #48]	; 0x30
   188cc:	sub	r0, r6, r1
   188d0:	cmp	r0, #2
   188d4:	blt	18908 <main@@Base+0x286c>
   188d8:	ldrb	r0, [r1]
   188dc:	cmp	r0, #32
   188e0:	bls	188f4 <main@@Base+0x2858>
   188e4:	mov	r2, r1
   188e8:	cmp	r2, r6
   188ec:	bne	18920 <main@@Base+0x2884>
   188f0:	b	189d8 <main@@Base+0x293c>
   188f4:	bne	18908 <main@@Base+0x286c>
   188f8:	mov	r2, r1
   188fc:	ldrb	r0, [r2, #1]!
   18900:	cmp	r0, #32
   18904:	bhi	18918 <main@@Base+0x287c>
   18908:	mov	r0, sl
   1890c:	mov	r2, r6
   18910:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   18914:	mov	r2, r0
   18918:	cmp	r2, r6
   1891c:	beq	189d8 <main@@Base+0x293c>
   18920:	ldrb	r0, [r2]
   18924:	cmp	r0, #44	; 0x2c
   18928:	bne	189ec <main@@Base+0x2950>
   1892c:	add	r1, r2, #1
   18930:	sub	r0, r6, r1
   18934:	cmp	r0, #2
   18938:	blt	18968 <main@@Base+0x28cc>
   1893c:	ldrb	r0, [r1]
   18940:	cmp	r0, #32
   18944:	bls	18958 <main@@Base+0x28bc>
   18948:	mov	r2, r1
   1894c:	cmp	r2, r6
   18950:	bne	18980 <main@@Base+0x28e4>
   18954:	b	18a20 <main@@Base+0x2984>
   18958:	bne	18968 <main@@Base+0x28cc>
   1895c:	ldrb	r0, [r2, #2]!
   18960:	cmp	r0, #32
   18964:	bhi	18978 <main@@Base+0x28dc>
   18968:	mov	r0, sl
   1896c:	mov	r2, r6
   18970:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   18974:	mov	r2, r0
   18978:	cmp	r2, r6
   1897c:	beq	18a20 <main@@Base+0x2984>
   18980:	ldrb	r0, [r2]
   18984:	cmp	r0, #125	; 0x7d
   18988:	bne	17be0 <main@@Base+0x1b44>
   1898c:	add	r1, r2, #1
   18990:	sub	r0, r6, r1
   18994:	cmp	r0, #2
   18998:	blt	1bb94 <main@@Base+0x5af8>
   1899c:	ldrb	r0, [r1]
   189a0:	cmp	r0, #32
   189a4:	bls	1a5dc <main@@Base+0x4540>
   189a8:	mov	r4, r1
   189ac:	sub	r0, r6, r4
   189b0:	cmp	r0, #2
   189b4:	bge	21770 <main@@Base+0xb6d4>
   189b8:	b	19970 <main@@Base+0x38d4>
   189bc:	ldr	sl, [sp, #44]	; 0x2c
   189c0:	ldr	r6, [sp, #52]	; 0x34
   189c4:	mov	r3, #33	; 0x21
   189c8:	mov	r0, sl
   189cc:	mov	r2, r6
   189d0:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   189d4:	b	2175c <main@@Base+0xb6c0>
   189d8:	mov	r4, r6
   189dc:	sub	r0, r6, r4
   189e0:	cmp	r0, #2
   189e4:	bge	21770 <main@@Base+0xb6d4>
   189e8:	b	19970 <main@@Base+0x38d4>
   189ec:	cmp	r0, #125	; 0x7d
   189f0:	bne	19544 <main@@Base+0x34a8>
   189f4:	add	r1, r2, #1
   189f8:	sub	r0, r6, r1
   189fc:	cmp	r0, #2
   18a00:	blt	1bb94 <main@@Base+0x5af8>
   18a04:	ldrb	r0, [r1]
   18a08:	cmp	r0, #32
   18a0c:	bls	1bb74 <main@@Base+0x5ad8>
   18a10:	ldr	r6, [sp, #52]	; 0x34
   18a14:	ldr	sl, [sp, #44]	; 0x2c
   18a18:	mov	r4, r1
   18a1c:	b	21760 <main@@Base+0xb6c4>
   18a20:	mov	r0, sl
   18a24:	mov	r1, r6
   18a28:	b	1954c <main@@Base+0x34b0>
   18a2c:	bne	18a3c <main@@Base+0x29a0>
   18a30:	ldrb	r0, [r7, #2]!
   18a34:	cmp	r0, #32
   18a38:	bhi	18a4c <main@@Base+0x29b0>
   18a3c:	mov	r0, sl
   18a40:	mov	r2, r6
   18a44:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   18a48:	mov	r7, r0
   18a4c:	cmp	r8, r7
   18a50:	beq	2174c <main@@Base+0xb6b0>
   18a54:	mov	r0, #0
   18a58:	mov	r1, r7
   18a5c:	mov	r2, r6
   18a60:	sub	r3, fp, #56	; 0x38
   18a64:	str	r0, [fp, #-56]	; 0xffffffc8
   18a68:	mov	r0, sl
   18a6c:	bl	391a8 <flatcc_json_parser_float@@Base>
   18a70:	ldr	r5, [sp, #48]	; 0x30
   18a74:	mov	r4, r0
   18a78:	cmp	r7, r0
   18a7c:	bne	18ab4 <main@@Base+0x2a18>
   18a80:	sub	r0, fp, #56	; 0x38
   18a84:	mov	r1, r7
   18a88:	mov	r2, r6
   18a8c:	str	r0, [sp]
   18a90:	movw	r0, #148	; 0x94
   18a94:	movt	r0, #6
   18a98:	add	r3, r0, #72	; 0x48
   18a9c:	mov	r0, sl
   18aa0:	bl	25f44 <main@@Base+0xfea8>
   18aa4:	mov	r4, r0
   18aa8:	cmp	r0, r7
   18aac:	cmpne	r4, r6
   18ab0:	beq	16fd0 <main@@Base+0xf34>
   18ab4:	vldr	s0, [fp, #-56]	; 0xffffffc8
   18ab8:	vcmp.f32	s0, s16
   18abc:	vmrs	APSR_nzcv, fpscr
   18ac0:	bne	18ad0 <main@@Base+0x2a34>
   18ac4:	ldrb	r0, [sl, #8]
   18ac8:	tst	r0, #2
   18acc:	beq	21764 <main@@Base+0xb6c8>
   18ad0:	ldr	r0, [sl]
   18ad4:	mov	r1, #26
   18ad8:	b	2044c <main@@Base+0xa3b0>
   18adc:	bne	18af0 <main@@Base+0x2a54>
   18ae0:	mov	r4, r1
   18ae4:	ldrb	r0, [r4, #1]!
   18ae8:	cmp	r0, #32
   18aec:	bhi	18b00 <main@@Base+0x2a64>
   18af0:	mov	r0, sl
   18af4:	mov	r2, r6
   18af8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   18afc:	mov	r4, r0
   18b00:	cmp	r4, r6
   18b04:	beq	18b40 <main@@Base+0x2aa4>
   18b08:	ldrb	r0, [r4]
   18b0c:	cmp	r0, #58	; 0x3a
   18b10:	bne	18b40 <main@@Base+0x2aa4>
   18b14:	add	r1, r4, #1
   18b18:	sub	r0, r6, r1
   18b1c:	cmp	r0, #2
   18b20:	blt	1a130 <main@@Base+0x4094>
   18b24:	ldrb	r0, [r1]
   18b28:	cmp	r0, #32
   18b2c:	bls	1a120 <main@@Base+0x4084>
   18b30:	mov	r4, r1
   18b34:	cmp	r7, r4
   18b38:	bne	1a148 <main@@Base+0x40ac>
   18b3c:	b	1c464 <main@@Base+0x63c8>
   18b40:	mov	r0, sl
   18b44:	mov	r1, r4
   18b48:	mov	r2, r6
   18b4c:	mov	r3, #4
   18b50:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   18b54:	b	1a13c <main@@Base+0x40a0>
   18b58:	bne	18b6c <main@@Base+0x2ad0>
   18b5c:	mov	r4, r1
   18b60:	ldrb	r0, [r4, #1]!
   18b64:	cmp	r0, #32
   18b68:	bhi	18b7c <main@@Base+0x2ae0>
   18b6c:	mov	r0, sl
   18b70:	mov	r2, r6
   18b74:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   18b78:	mov	r4, r0
   18b7c:	cmp	r4, r6
   18b80:	beq	18bbc <main@@Base+0x2b20>
   18b84:	ldrb	r0, [r4]
   18b88:	cmp	r0, #58	; 0x3a
   18b8c:	bne	18bbc <main@@Base+0x2b20>
   18b90:	add	r1, r4, #1
   18b94:	sub	r0, r6, r1
   18b98:	cmp	r0, #2
   18b9c:	blt	1a224 <main@@Base+0x4188>
   18ba0:	ldrb	r0, [r1]
   18ba4:	cmp	r0, #32
   18ba8:	bls	1a214 <main@@Base+0x4178>
   18bac:	mov	r4, r1
   18bb0:	cmp	r7, r4
   18bb4:	bne	1a23c <main@@Base+0x41a0>
   18bb8:	b	1c464 <main@@Base+0x63c8>
   18bbc:	mov	r0, sl
   18bc0:	mov	r1, r4
   18bc4:	mov	r2, r6
   18bc8:	mov	r3, #4
   18bcc:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   18bd0:	b	1a230 <main@@Base+0x4194>
   18bd4:	bne	18be8 <main@@Base+0x2b4c>
   18bd8:	mov	r7, r1
   18bdc:	ldrb	r0, [r7, #1]!
   18be0:	cmp	r0, #32
   18be4:	bhi	18bf8 <main@@Base+0x2b5c>
   18be8:	mov	r0, sl
   18bec:	mov	r2, r6
   18bf0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   18bf4:	mov	r7, r0
   18bf8:	cmp	r7, r6
   18bfc:	beq	18cbc <main@@Base+0x2c20>
   18c00:	ldrb	r0, [r7]
   18c04:	cmp	r0, #58	; 0x3a
   18c08:	bne	18cbc <main@@Base+0x2c20>
   18c0c:	add	r1, r7, #1
   18c10:	sub	r0, r6, r1
   18c14:	cmp	r0, #2
   18c18:	blt	1a300 <main@@Base+0x4264>
   18c1c:	ldrb	r0, [r1]
   18c20:	cmp	r0, #32
   18c24:	bls	1a2e8 <main@@Base+0x424c>
   18c28:	ldr	r6, [sp, #52]	; 0x34
   18c2c:	ldr	sl, [sp, #44]	; 0x2c
   18c30:	mov	r7, r1
   18c34:	cmp	r9, r7
   18c38:	bne	1a318 <main@@Base+0x427c>
   18c3c:	add	r4, r8, #16
   18c40:	mov	r1, #8
   18c44:	mov	r2, #-268435456	; 0xf0000000
   18c48:	sub	r0, r6, r4
   18c4c:	cmp	r0, #8
   18c50:	movcc	r1, r0
   18c54:	add	r1, r2, r1, lsl #28
   18c58:	asr	r1, r1, #28
   18c5c:	cmp	r1, #0
   18c60:	blt	1d0c8 <main@@Base+0x702c>
   18c64:	ldrb	r1, [r4]
   18c68:	cmp	r1, #97	; 0x61
   18c6c:	bne	1d0c8 <main@@Base+0x702c>
   18c70:	cmp	r0, #2
   18c74:	blt	1d0c8 <main@@Base+0x702c>
   18c78:	ldr	r2, [sp, #40]	; 0x28
   18c7c:	mov	r1, r8
   18c80:	ldrb	r0, [r1, #17]!
   18c84:	ldr	r2, [r2]
   18c88:	cmp	r2, #0
   18c8c:	beq	19008 <main@@Base+0x2f6c>
   18c90:	cmp	r0, #33	; 0x21
   18c94:	bcc	18ca0 <main@@Base+0x2c04>
   18c98:	cmp	r0, #58	; 0x3a
   18c9c:	bne	1d0c8 <main@@Base+0x702c>
   18ca0:	ldr	r0, [sp, #40]	; 0x28
   18ca4:	mov	r2, #0
   18ca8:	str	r2, [r0]
   18cac:	sub	r0, r6, r1
   18cb0:	cmp	r0, #2
   18cb4:	bge	19020 <main@@Base+0x2f84>
   18cb8:	b	1a6d0 <main@@Base+0x4634>
   18cbc:	mov	r0, sl
   18cc0:	mov	r1, r7
   18cc4:	mov	r2, r6
   18cc8:	mov	r3, #4
   18ccc:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   18cd0:	b	1a30c <main@@Base+0x4270>
   18cd4:	bne	18ce8 <main@@Base+0x2c4c>
   18cd8:	mov	r7, r1
   18cdc:	ldrb	r0, [r7, #1]!
   18ce0:	cmp	r0, #32
   18ce4:	bhi	18cf8 <main@@Base+0x2c5c>
   18ce8:	mov	r0, sl
   18cec:	mov	r2, r6
   18cf0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   18cf4:	mov	r7, r0
   18cf8:	cmp	r7, r6
   18cfc:	beq	18dbc <main@@Base+0x2d20>
   18d00:	ldrb	r0, [r7]
   18d04:	cmp	r0, #58	; 0x3a
   18d08:	bne	18dbc <main@@Base+0x2d20>
   18d0c:	add	r1, r7, #1
   18d10:	sub	r0, r6, r1
   18d14:	cmp	r0, #2
   18d18:	blt	1a460 <main@@Base+0x43c4>
   18d1c:	ldrb	r0, [r1]
   18d20:	cmp	r0, #32
   18d24:	bls	1a448 <main@@Base+0x43ac>
   18d28:	ldr	r6, [sp, #52]	; 0x34
   18d2c:	ldr	sl, [sp, #44]	; 0x2c
   18d30:	mov	r7, r1
   18d34:	cmp	r9, r7
   18d38:	bne	1a478 <main@@Base+0x43dc>
   18d3c:	add	r4, r8, #16
   18d40:	mov	r1, #8
   18d44:	mov	r2, #-268435456	; 0xf0000000
   18d48:	sub	r0, r6, r4
   18d4c:	cmp	r0, #8
   18d50:	movcc	r1, r0
   18d54:	add	r1, r2, r1, lsl #28
   18d58:	asr	r1, r1, #28
   18d5c:	cmp	r1, #0
   18d60:	blt	1d0c8 <main@@Base+0x702c>
   18d64:	ldrb	r1, [r4]
   18d68:	cmp	r1, #97	; 0x61
   18d6c:	bne	1d0c8 <main@@Base+0x702c>
   18d70:	cmp	r0, #2
   18d74:	blt	1d0c8 <main@@Base+0x702c>
   18d78:	ldr	r2, [sp, #40]	; 0x28
   18d7c:	mov	r1, r8
   18d80:	ldrb	r0, [r1, #17]!
   18d84:	ldr	r2, [r2]
   18d88:	cmp	r2, #0
   18d8c:	beq	19044 <main@@Base+0x2fa8>
   18d90:	cmp	r0, #33	; 0x21
   18d94:	bcc	18da0 <main@@Base+0x2d04>
   18d98:	cmp	r0, #58	; 0x3a
   18d9c:	bne	1d0c8 <main@@Base+0x702c>
   18da0:	ldr	r0, [sp, #40]	; 0x28
   18da4:	mov	r2, #0
   18da8:	str	r2, [r0]
   18dac:	sub	r0, r6, r1
   18db0:	cmp	r0, #2
   18db4:	bge	1905c <main@@Base+0x2fc0>
   18db8:	b	1a75c <main@@Base+0x46c0>
   18dbc:	mov	r0, sl
   18dc0:	mov	r1, r7
   18dc4:	mov	r2, r6
   18dc8:	mov	r3, #4
   18dcc:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   18dd0:	b	1a46c <main@@Base+0x43d0>
   18dd4:	mov	r0, sl
   18dd8:	mov	r1, r4
   18ddc:	mov	r2, r6
   18de0:	mov	r3, #9
   18de4:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   18de8:	b	171ec <main@@Base+0x1150>
   18dec:	bne	18dfc <main@@Base+0x2d60>
   18df0:	ldrb	r0, [r7, #2]!
   18df4:	cmp	r0, #32
   18df8:	bhi	18e0c <main@@Base+0x2d70>
   18dfc:	mov	r0, sl
   18e00:	mov	r2, r6
   18e04:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   18e08:	mov	r7, r0
   18e0c:	cmp	r9, r7
   18e10:	beq	20ab0 <main@@Base+0xaa14>
   18e14:	mov	r2, r6
   18e18:	mov	r6, #0
   18e1c:	cmp	r7, r2
   18e20:	str	r6, [fp, #-52]	; 0xffffffcc
   18e24:	str	r6, [fp, #-56]	; 0xffffffc8
   18e28:	str	r6, [fp, #-60]	; 0xffffffc4
   18e2c:	str	r6, [sp, #64]	; 0x40
   18e30:	beq	18e94 <main@@Base+0x2df8>
   18e34:	sub	r0, fp, #56	; 0x38
   18e38:	mov	r1, r7
   18e3c:	add	r3, sp, #64	; 0x40
   18e40:	mov	r8, r2
   18e44:	str	r0, [sp]
   18e48:	mov	r0, sl
   18e4c:	bl	392f4 <flatcc_json_parser_integer@@Base>
   18e50:	ldr	r5, [sp, #48]	; 0x30
   18e54:	cmp	r0, r7
   18e58:	beq	18eac <main@@Base+0x2e10>
   18e5c:	ldr	r2, [sp, #64]	; 0x40
   18e60:	mov	r4, r0
   18e64:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18e68:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18e6c:	cmp	r2, #0
   18e70:	beq	18ebc <main@@Base+0x2e20>
   18e74:	subs	r2, r0, #-2147483647	; 0x80000001
   18e78:	sbcs	r1, r1, #0
   18e7c:	bcc	18eec <main@@Base+0x2e50>
   18e80:	mov	r0, sl
   18e84:	mov	r1, r4
   18e88:	mov	r2, r8
   18e8c:	mov	r3, #8
   18e90:	b	18ed8 <main@@Base+0x2e3c>
   18e94:	ldr	r5, [sp, #48]	; 0x30
   18e98:	mov	r8, r2
   18e9c:	mov	r4, r2
   18ea0:	cmp	r7, r4
   18ea4:	bne	197a4 <main@@Base+0x3708>
   18ea8:	b	19764 <main@@Base+0x36c8>
   18eac:	mov	r4, r7
   18eb0:	cmp	r7, r4
   18eb4:	bne	197a4 <main@@Base+0x3708>
   18eb8:	b	19764 <main@@Base+0x36c8>
   18ebc:	subs	r2, r0, #-2147483648	; 0x80000000
   18ec0:	sbcs	r1, r1, #0
   18ec4:	bcc	19754 <main@@Base+0x36b8>
   18ec8:	mov	r0, sl
   18ecc:	mov	r1, r4
   18ed0:	mov	r2, r8
   18ed4:	mov	r3, #7
   18ed8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   18edc:	mov	r4, r0
   18ee0:	cmp	r7, r4
   18ee4:	bne	197a4 <main@@Base+0x3708>
   18ee8:	b	19764 <main@@Base+0x36c8>
   18eec:	rsb	r6, r0, #0
   18ef0:	str	r6, [fp, #-60]	; 0xffffffc4
   18ef4:	cmp	r7, r4
   18ef8:	bne	197a4 <main@@Base+0x3708>
   18efc:	b	19764 <main@@Base+0x36c8>
   18f00:	bne	18f14 <main@@Base+0x2e78>
   18f04:	mov	r4, r1
   18f08:	ldrb	r0, [r4, #1]!
   18f0c:	cmp	r0, #32
   18f10:	bhi	18f24 <main@@Base+0x2e88>
   18f14:	mov	r0, sl
   18f18:	mov	r2, r6
   18f1c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   18f20:	mov	r4, r0
   18f24:	cmp	r4, r6
   18f28:	beq	18f6c <main@@Base+0x2ed0>
   18f2c:	ldrb	r0, [r4]
   18f30:	cmp	r0, #58	; 0x3a
   18f34:	bne	18f6c <main@@Base+0x2ed0>
   18f38:	add	r1, r4, #1
   18f3c:	sub	r0, r6, r1
   18f40:	cmp	r0, #2
   18f44:	blt	1a5fc <main@@Base+0x4560>
   18f48:	ldrb	r0, [r1]
   18f4c:	cmp	r0, #32
   18f50:	bls	1a5e4 <main@@Base+0x4548>
   18f54:	ldr	r6, [sp, #52]	; 0x34
   18f58:	ldr	sl, [sp, #44]	; 0x2c
   18f5c:	mov	r4, r1
   18f60:	cmp	r7, r4
   18f64:	bne	1a614 <main@@Base+0x4578>
   18f68:	b	1c464 <main@@Base+0x63c8>
   18f6c:	mov	r0, sl
   18f70:	mov	r1, r4
   18f74:	mov	r2, r6
   18f78:	mov	r3, #4
   18f7c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   18f80:	b	1a608 <main@@Base+0x456c>
   18f84:	bne	18f98 <main@@Base+0x2efc>
   18f88:	mov	r7, r1
   18f8c:	ldrb	r0, [r7, #1]!
   18f90:	cmp	r0, #32
   18f94:	bhi	18fa8 <main@@Base+0x2f0c>
   18f98:	mov	r0, sl
   18f9c:	mov	r2, r6
   18fa0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   18fa4:	mov	r7, r0
   18fa8:	cmp	r7, r6
   18fac:	beq	18ff0 <main@@Base+0x2f54>
   18fb0:	ldrb	r0, [r7]
   18fb4:	cmp	r0, #58	; 0x3a
   18fb8:	bne	18ff0 <main@@Base+0x2f54>
   18fbc:	add	r1, r7, #1
   18fc0:	sub	r0, r6, r1
   18fc4:	cmp	r0, #2
   18fc8:	blt	1a7e4 <main@@Base+0x4748>
   18fcc:	ldrb	r0, [r1]
   18fd0:	cmp	r0, #32
   18fd4:	bls	1a7cc <main@@Base+0x4730>
   18fd8:	ldr	r6, [sp, #52]	; 0x34
   18fdc:	ldr	sl, [sp, #44]	; 0x2c
   18fe0:	mov	r7, r1
   18fe4:	cmp	r4, r7
   18fe8:	bne	1a7fc <main@@Base+0x4760>
   18fec:	b	1d0c8 <main@@Base+0x702c>
   18ff0:	mov	r0, sl
   18ff4:	mov	r1, r7
   18ff8:	mov	r2, r6
   18ffc:	mov	r3, #4
   19000:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   19004:	b	1a7f0 <main@@Base+0x4754>
   19008:	cmp	r0, #34	; 0x22
   1900c:	bne	1d0c8 <main@@Base+0x702c>
   19010:	add	r1, r8, #18
   19014:	sub	r0, r6, r1
   19018:	cmp	r0, #2
   1901c:	blt	1a6d0 <main@@Base+0x4634>
   19020:	ldrb	r0, [r1]
   19024:	cmp	r0, #32
   19028:	bls	1a6b4 <main@@Base+0x4618>
   1902c:	ldr	r6, [sp, #52]	; 0x34
   19030:	ldr	sl, [sp, #44]	; 0x2c
   19034:	mov	r7, r1
   19038:	cmp	r7, r6
   1903c:	bne	1a6e8 <main@@Base+0x464c>
   19040:	b	1a728 <main@@Base+0x468c>
   19044:	cmp	r0, #34	; 0x22
   19048:	bne	1d0c8 <main@@Base+0x702c>
   1904c:	add	r1, r8, #18
   19050:	sub	r0, r6, r1
   19054:	cmp	r0, #2
   19058:	blt	1a75c <main@@Base+0x46c0>
   1905c:	ldrb	r0, [r1]
   19060:	cmp	r0, #32
   19064:	bls	1a740 <main@@Base+0x46a4>
   19068:	ldr	r6, [sp, #52]	; 0x34
   1906c:	ldr	sl, [sp, #44]	; 0x2c
   19070:	mov	r7, r1
   19074:	cmp	r7, r6
   19078:	bne	1a774 <main@@Base+0x46d8>
   1907c:	b	1a7b4 <main@@Base+0x4718>
   19080:	bne	19090 <main@@Base+0x2ff4>
   19084:	ldrb	r0, [r4, #2]!
   19088:	cmp	r0, #32
   1908c:	bhi	190a0 <main@@Base+0x3004>
   19090:	mov	r0, sl
   19094:	mov	r2, r6
   19098:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1909c:	mov	r4, r0
   190a0:	cmp	r4, r6
   190a4:	beq	190d4 <main@@Base+0x3038>
   190a8:	ldrb	r0, [r4]
   190ac:	cmp	r0, #93	; 0x5d
   190b0:	bne	190d0 <main@@Base+0x3034>
   190b4:	add	r1, r4, #1
   190b8:	mov	r6, r5
   190bc:	sub	r0, r5, r1
   190c0:	cmp	r0, #2
   190c4:	ldr	r5, [sp, #48]	; 0x30
   190c8:	bge	19ec4 <main@@Base+0x3e28>
   190cc:	b	19f00 <main@@Base+0x3e64>
   190d0:	mov	r6, r4
   190d4:	mov	r0, #0
   190d8:	mov	r1, #1
   190dc:	strb	r0, [fp, #-60]	; 0xffffffc4
   190e0:	ldr	r0, [sl]
   190e4:	bl	31188 <flatcc_builder_extend_vector@@Base>
   190e8:	cmp	r0, #0
   190ec:	beq	2190c <main@@Base+0xb870>
   190f0:	mov	r4, r6
   190f4:	mov	r7, r0
   190f8:	mov	r6, r5
   190fc:	sub	r0, r6, r4
   19100:	cmp	r0, #4
   19104:	blt	19140 <main@@Base+0x30a4>
   19108:	ldr	r1, [r4]
   1910c:	movw	r2, #29300	; 0x7274
   19110:	movt	r2, #25973	; 0x6575
   19114:	cmp	r1, r2
   19118:	beq	191a4 <main@@Base+0x3108>
   1911c:	cmp	r0, #5
   19120:	blt	19140 <main@@Base+0x30a4>
   19124:	movw	r1, #48983	; 0xbf57
   19128:	mov	r0, r4
   1912c:	mov	r2, #5
   19130:	movt	r1, #4
   19134:	bl	14e6c <memcmp@plt>
   19138:	cmp	r0, #0
   1913c:	beq	1932c <main@@Base+0x3290>
   19140:	mov	r2, r6
   19144:	mov	r6, #0
   19148:	cmp	r4, r2
   1914c:	str	r6, [fp, #-52]	; 0xffffffcc
   19150:	str	r6, [fp, #-56]	; 0xffffffc8
   19154:	str	r6, [sp, #64]	; 0x40
   19158:	beq	1919c <main@@Base+0x3100>
   1915c:	sub	r0, fp, #56	; 0x38
   19160:	mov	r1, r4
   19164:	add	r3, sp, #64	; 0x40
   19168:	str	r0, [sp]
   1916c:	mov	r0, sl
   19170:	bl	392f4 <flatcc_json_parser_integer@@Base>
   19174:	cmp	r0, r4
   19178:	beq	191bc <main@@Base+0x3120>
   1917c:	mov	r1, r0
   19180:	ldr	r0, [sp, #64]	; 0x40
   19184:	cmp	r0, #0
   19188:	beq	191c4 <main@@Base+0x3128>
   1918c:	mov	r0, sl
   19190:	mov	r2, r5
   19194:	mov	r3, #8
   19198:	b	191e4 <main@@Base+0x3148>
   1919c:	mov	r1, r2
   191a0:	b	191ec <main@@Base+0x3150>
   191a4:	mov	r0, #1
   191a8:	add	r1, r4, #4
   191ac:	strb	r0, [fp, #-60]	; 0xffffffc4
   191b0:	cmp	r4, r1
   191b4:	bne	19244 <main@@Base+0x31a8>
   191b8:	b	19208 <main@@Base+0x316c>
   191bc:	mov	r1, r4
   191c0:	b	191ec <main@@Base+0x3150>
   191c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   191c8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   191cc:	subs	r3, r0, #256	; 0x100
   191d0:	sbcs	r2, r2, #0
   191d4:	bcc	19344 <main@@Base+0x32a8>
   191d8:	mov	r0, sl
   191dc:	mov	r2, r5
   191e0:	mov	r3, #7
   191e4:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   191e8:	mov	r1, r0
   191ec:	uxtb	r0, r6
   191f0:	mov	r6, r5
   191f4:	cmp	r0, #0
   191f8:	movwne	r0, #1
   191fc:	strb	r0, [fp, #-60]	; 0xffffffc4
   19200:	cmp	r4, r1
   19204:	bne	19244 <main@@Base+0x31a8>
   19208:	sub	r0, fp, #60	; 0x3c
   1920c:	mov	r1, r4
   19210:	mov	r2, r6
   19214:	str	r0, [sp]
   19218:	movw	r0, #148	; 0x94
   1921c:	movt	r0, #6
   19220:	add	r3, r0, #48	; 0x30
   19224:	mov	r0, sl
   19228:	bl	25d24 <main@@Base+0xfc88>
   1922c:	mov	r1, r0
   19230:	cmp	r0, r4
   19234:	beq	218fc <main@@Base+0xb860>
   19238:	cmp	r1, r6
   1923c:	beq	218fc <main@@Base+0xb860>
   19240:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   19244:	strb	r0, [r7]
   19248:	sub	r0, r6, r1
   1924c:	cmp	r0, #2
   19250:	blt	19284 <main@@Base+0x31e8>
   19254:	ldrb	r0, [r1]
   19258:	cmp	r0, #32
   1925c:	bls	19270 <main@@Base+0x31d4>
   19260:	mov	r4, r1
   19264:	cmp	r4, r6
   19268:	bne	1929c <main@@Base+0x3200>
   1926c:	b	19d44 <main@@Base+0x3ca8>
   19270:	bne	19284 <main@@Base+0x31e8>
   19274:	mov	r4, r1
   19278:	ldrb	r0, [r4, #1]!
   1927c:	cmp	r0, #32
   19280:	bhi	19294 <main@@Base+0x31f8>
   19284:	mov	r0, sl
   19288:	mov	r2, r6
   1928c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   19290:	mov	r4, r0
   19294:	cmp	r4, r6
   19298:	beq	19d44 <main@@Base+0x3ca8>
   1929c:	ldrb	r0, [r4]
   192a0:	cmp	r0, #44	; 0x2c
   192a4:	bne	19ea0 <main@@Base+0x3e04>
   192a8:	add	r1, r4, #1
   192ac:	sub	r0, r6, r1
   192b0:	cmp	r0, #2
   192b4:	blt	192e4 <main@@Base+0x3248>
   192b8:	ldrb	r0, [r1]
   192bc:	cmp	r0, #32
   192c0:	bls	192d4 <main@@Base+0x3238>
   192c4:	mov	r4, r1
   192c8:	cmp	r4, r6
   192cc:	bne	192fc <main@@Base+0x3260>
   192d0:	b	19f10 <main@@Base+0x3e74>
   192d4:	bne	192e4 <main@@Base+0x3248>
   192d8:	ldrb	r0, [r4, #2]!
   192dc:	cmp	r0, #32
   192e0:	bhi	192f4 <main@@Base+0x3258>
   192e4:	mov	r0, sl
   192e8:	mov	r2, r6
   192ec:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   192f0:	mov	r4, r0
   192f4:	cmp	r4, r6
   192f8:	beq	19f10 <main@@Base+0x3e74>
   192fc:	ldrb	r0, [r4]
   19300:	cmp	r0, #93	; 0x5d
   19304:	beq	19eb0 <main@@Base+0x3e14>
   19308:	mov	r0, #0
   1930c:	mov	r1, #1
   19310:	strb	r0, [fp, #-60]	; 0xffffffc4
   19314:	ldr	r0, [sl]
   19318:	bl	31188 <flatcc_builder_extend_vector@@Base>
   1931c:	mov	r7, r0
   19320:	cmp	r0, #0
   19324:	bne	190fc <main@@Base+0x3060>
   19328:	b	16fd0 <main@@Base+0xf34>
   1932c:	mov	r0, #0
   19330:	add	r1, r4, #5
   19334:	strb	r0, [fp, #-60]	; 0xffffffc4
   19338:	cmp	r4, r1
   1933c:	bne	19244 <main@@Base+0x31a8>
   19340:	b	19208 <main@@Base+0x316c>
   19344:	mov	r6, r0
   19348:	b	191ec <main@@Base+0x3150>
   1934c:	bne	19360 <main@@Base+0x32c4>
   19350:	mov	r4, r1
   19354:	ldrb	r0, [r4, #1]!
   19358:	cmp	r0, #32
   1935c:	bhi	19370 <main@@Base+0x32d4>
   19360:	mov	r0, sl
   19364:	mov	r2, r6
   19368:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1936c:	mov	r4, r0
   19370:	cmp	r4, r6
   19374:	beq	193b8 <main@@Base+0x331c>
   19378:	ldrb	r0, [r4]
   1937c:	cmp	r0, #58	; 0x3a
   19380:	bne	193b8 <main@@Base+0x331c>
   19384:	add	r1, r4, #1
   19388:	sub	r0, r6, r1
   1938c:	cmp	r0, #2
   19390:	blt	1aad4 <main@@Base+0x4a38>
   19394:	ldrb	r0, [r1]
   19398:	cmp	r0, #32
   1939c:	bls	1aabc <main@@Base+0x4a20>
   193a0:	ldr	r6, [sp, #52]	; 0x34
   193a4:	ldr	sl, [sp, #44]	; 0x2c
   193a8:	mov	r4, r1
   193ac:	cmp	r9, r4
   193b0:	bne	1aaec <main@@Base+0x4a50>
   193b4:	b	1ab4c <main@@Base+0x4ab0>
   193b8:	mov	r0, sl
   193bc:	mov	r1, r4
   193c0:	mov	r2, r6
   193c4:	mov	r3, #4
   193c8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   193cc:	b	1aae0 <main@@Base+0x4a44>
   193d0:	bne	193e4 <main@@Base+0x3348>
   193d4:	mov	r4, r1
   193d8:	ldrb	r0, [r4, #1]!
   193dc:	cmp	r0, #32
   193e0:	bhi	193f4 <main@@Base+0x3358>
   193e4:	mov	r0, sl
   193e8:	mov	r2, r6
   193ec:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   193f0:	mov	r4, r0
   193f4:	cmp	r4, r6
   193f8:	beq	1943c <main@@Base+0x33a0>
   193fc:	ldrb	r0, [r4]
   19400:	cmp	r0, #58	; 0x3a
   19404:	bne	1943c <main@@Base+0x33a0>
   19408:	add	r1, r4, #1
   1940c:	sub	r0, r6, r1
   19410:	cmp	r0, #2
   19414:	blt	1abb8 <main@@Base+0x4b1c>
   19418:	ldrb	r0, [r1]
   1941c:	cmp	r0, #32
   19420:	bls	1aba0 <main@@Base+0x4b04>
   19424:	ldr	r6, [sp, #52]	; 0x34
   19428:	ldr	sl, [sp, #44]	; 0x2c
   1942c:	mov	r4, r1
   19430:	cmp	r7, r4
   19434:	bne	1abd0 <main@@Base+0x4b34>
   19438:	b	1c464 <main@@Base+0x63c8>
   1943c:	mov	r0, sl
   19440:	mov	r1, r4
   19444:	mov	r2, r6
   19448:	mov	r3, #4
   1944c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   19450:	b	1abc4 <main@@Base+0x4b28>
   19454:	bne	19464 <main@@Base+0x33c8>
   19458:	ldrb	r0, [r4, #2]!
   1945c:	cmp	r0, #32
   19460:	bhi	19474 <main@@Base+0x33d8>
   19464:	mov	r0, sl
   19468:	mov	r2, r6
   1946c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   19470:	mov	r4, r0
   19474:	cmp	r7, r4
   19478:	beq	1c464 <main@@Base+0x63c8>
   1947c:	mov	r0, #0
   19480:	mov	r1, #3
   19484:	str	r0, [sp, #60]	; 0x3c
   19488:	ldr	r0, [sl]
   1948c:	bl	32294 <flatcc_builder_start_table@@Base>
   19490:	cmp	r0, #0
   19494:	bne	19508 <main@@Base+0x346c>
   19498:	cmp	r4, r6
   1949c:	beq	194e0 <main@@Base+0x3444>
   194a0:	ldrb	r0, [r4]
   194a4:	cmp	r0, #123	; 0x7b
   194a8:	bne	194e0 <main@@Base+0x3444>
   194ac:	add	r1, r4, #1
   194b0:	sub	r0, r6, r1
   194b4:	cmp	r0, #2
   194b8:	blt	1bc14 <main@@Base+0x5b78>
   194bc:	ldrb	r0, [r1]
   194c0:	cmp	r0, #32
   194c4:	bls	1bbfc <main@@Base+0x5b60>
   194c8:	ldr	r6, [sp, #52]	; 0x34
   194cc:	mov	r4, r1
   194d0:	cmp	r4, r6
   194d4:	mov	r2, r6
   194d8:	bne	1bc30 <main@@Base+0x5b94>
   194dc:	b	1bc80 <main@@Base+0x5be4>
   194e0:	mov	r0, sl
   194e4:	mov	r1, r4
   194e8:	mov	r2, r6
   194ec:	mov	r3, #21
   194f0:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   194f4:	mov	r4, r0
   194f8:	ldr	r0, [sp, #36]	; 0x24
   194fc:	ldr	r0, [r0]
   19500:	cmp	r0, #0
   19504:	beq	1cf00 <main@@Base+0x6e64>
   19508:	mov	r0, sl
   1950c:	mov	r1, r4
   19510:	mov	r2, r6
   19514:	mov	r3, #33	; 0x21
   19518:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1951c:	mov	r4, r0
   19520:	ldr	r0, [sp, #60]	; 0x3c
   19524:	cmp	r0, #0
   19528:	beq	16fd0 <main@@Base+0xf34>
   1952c:	ldr	r0, [sl]
   19530:	mov	r1, #35	; 0x23
   19534:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   19538:	cmp	r0, #0
   1953c:	bne	20e40 <main@@Base+0xada4>
   19540:	b	16fd0 <main@@Base+0xf34>
   19544:	mov	r0, sl
   19548:	mov	r1, r2
   1954c:	mov	r2, r6
   19550:	mov	r3, #10
   19554:	b	17b50 <main@@Base+0x1ab4>
   19558:	bne	19568 <main@@Base+0x34cc>
   1955c:	ldrb	r0, [r2, #2]!
   19560:	cmp	r0, #32
   19564:	bhi	19578 <main@@Base+0x34dc>
   19568:	mov	r0, sl
   1956c:	mov	r2, r6
   19570:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   19574:	mov	r2, r0
   19578:	cmp	r4, r2
   1957c:	beq	1d0c8 <main@@Base+0x702c>
   19580:	ldr	r0, [sp, #56]	; 0x38
   19584:	movw	r1, #628	; 0x274
   19588:	mov	r3, #8
   1958c:	movt	r1, #6
   19590:	str	r3, [sp]
   19594:	mov	r3, #0
   19598:	add	r1, r1, #64	; 0x40
   1959c:	stmib	sp, {r0, r1}
   195a0:	movw	r0, #18280	; 0x4768
   195a4:	mov	r1, r2
   195a8:	mov	r2, r6
   195ac:	movt	r0, #2
   195b0:	str	r0, [sp, #12]
   195b4:	mov	r0, sl
   195b8:	bl	39e2c <flatcc_json_parser_union_type@@Base>
   195bc:	b	2175c <main@@Base+0xb6c0>
   195c0:	bne	195d0 <main@@Base+0x3534>
   195c4:	ldrb	r0, [r4, #2]!
   195c8:	cmp	r0, #32
   195cc:	bhi	195e0 <main@@Base+0x3544>
   195d0:	mov	r0, sl
   195d4:	mov	r2, r6
   195d8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   195dc:	mov	r4, r0
   195e0:	cmp	r7, r4
   195e4:	beq	1c464 <main@@Base+0x63c8>
   195e8:	ldr	r0, [sl]
   195ec:	bl	31d68 <flatcc_builder_start_offset_vector@@Base>
   195f0:	cmp	r0, #0
   195f4:	bne	16fd0 <main@@Base+0xf34>
   195f8:	cmp	r4, r6
   195fc:	beq	1963c <main@@Base+0x35a0>
   19600:	ldrb	r0, [r4]
   19604:	cmp	r0, #91	; 0x5b
   19608:	bne	1963c <main@@Base+0x35a0>
   1960c:	add	r1, r4, #1
   19610:	sub	r0, r6, r1
   19614:	cmp	r0, #2
   19618:	blt	19f2c <main@@Base+0x3e90>
   1961c:	ldrb	r0, [r1]
   19620:	cmp	r0, #32
   19624:	bls	19f1c <main@@Base+0x3e80>
   19628:	mov	r4, r1
   1962c:	cmp	r4, r6
   19630:	mov	r2, r6
   19634:	bne	19f48 <main@@Base+0x3eac>
   19638:	b	19f90 <main@@Base+0x3ef4>
   1963c:	mov	r0, sl
   19640:	mov	r1, r4
   19644:	mov	r2, r6
   19648:	mov	r3, #22
   1964c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   19650:	mov	r4, r0
   19654:	ldr	r0, [sl]
   19658:	bl	32020 <flatcc_builder_end_offset_vector@@Base>
   1965c:	ldr	r5, [sp, #48]	; 0x30
   19660:	cmp	r0, #0
   19664:	str	r0, [sp, #60]	; 0x3c
   19668:	beq	16fd0 <main@@Base+0xf34>
   1966c:	ldr	r0, [sl]
   19670:	mov	r1, #28
   19674:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   19678:	cmp	r0, #0
   1967c:	bne	20f1c <main@@Base+0xae80>
   19680:	b	16fd0 <main@@Base+0xf34>
   19684:	bne	19694 <main@@Base+0x35f8>
   19688:	ldrb	r0, [r7, #2]!
   1968c:	cmp	r0, #32
   19690:	bhi	196a4 <main@@Base+0x3608>
   19694:	mov	r0, sl
   19698:	mov	r2, r6
   1969c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   196a0:	mov	r7, r0
   196a4:	cmp	r9, r7
   196a8:	beq	1ab4c <main@@Base+0x4ab0>
   196ac:	ldr	r0, [sl]
   196b0:	mov	r1, #8
   196b4:	mov	r2, #4
   196b8:	mvn	r3, #-536870912	; 0xe0000000
   196bc:	bl	31cdc <flatcc_builder_start_vector@@Base>
   196c0:	cmp	r0, #0
   196c4:	bne	218cc <main@@Base+0xb830>
   196c8:	cmp	r7, r6
   196cc:	beq	1970c <main@@Base+0x3670>
   196d0:	ldrb	r0, [r7]
   196d4:	cmp	r0, #91	; 0x5b
   196d8:	bne	1970c <main@@Base+0x3670>
   196dc:	add	r1, r7, #1
   196e0:	sub	r0, r6, r1
   196e4:	cmp	r0, #2
   196e8:	blt	1a0b8 <main@@Base+0x401c>
   196ec:	ldrb	r0, [r1]
   196f0:	cmp	r0, #32
   196f4:	bls	1a0a8 <main@@Base+0x400c>
   196f8:	mov	r7, r1
   196fc:	cmp	r7, r6
   19700:	mov	r4, r6
   19704:	bne	1a0d4 <main@@Base+0x4038>
   19708:	b	1afec <main@@Base+0x4f50>
   1970c:	mov	r0, sl
   19710:	mov	r1, r7
   19714:	mov	r2, r6
   19718:	mov	r3, #22
   1971c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   19720:	mov	r7, r0
   19724:	ldr	r0, [sl]
   19728:	bl	32f5c <flatcc_builder_end_vector@@Base>
   1972c:	ldr	r5, [sp, #48]	; 0x30
   19730:	cmp	r0, #0
   19734:	str	r0, [sp, #60]	; 0x3c
   19738:	beq	218cc <main@@Base+0xb830>
   1973c:	ldr	r0, [sl]
   19740:	mov	r1, #29
   19744:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   19748:	cmp	r0, #0
   1974c:	bne	17218 <main@@Base+0x117c>
   19750:	b	218cc <main@@Base+0xb830>
   19754:	mov	r6, r0
   19758:	str	r6, [fp, #-60]	; 0xffffffc4
   1975c:	cmp	r7, r4
   19760:	bne	197a4 <main@@Base+0x3708>
   19764:	sub	r0, fp, #60	; 0x3c
   19768:	mov	r1, r7
   1976c:	mov	r2, r8
   19770:	mov	r6, r8
   19774:	str	r0, [sp]
   19778:	movw	r0, #148	; 0x94
   1977c:	movt	r0, #6
   19780:	add	r3, r0, #108	; 0x6c
   19784:	mov	r0, sl
   19788:	bl	26114 <main@@Base+0x10078>
   1978c:	mov	r4, r0
   19790:	cmp	r0, r7
   19794:	cmpne	r4, r6
   19798:	beq	21968 <main@@Base+0xb8cc>
   1979c:	mov	r8, r6
   197a0:	ldr	r6, [fp, #-60]	; 0xffffffc4
   197a4:	cmp	r6, #0
   197a8:	bne	197b8 <main@@Base+0x371c>
   197ac:	ldrb	r0, [sl, #8]
   197b0:	tst	r0, #2
   197b4:	beq	19960 <main@@Base+0x38c4>
   197b8:	ldr	r0, [sl]
   197bc:	mov	r1, #16
   197c0:	b	1c53c <main@@Base+0x64a0>
   197c4:	bne	197d4 <main@@Base+0x3738>
   197c8:	ldrb	r0, [r7, #2]!
   197cc:	cmp	r0, #32
   197d0:	bhi	197e4 <main@@Base+0x3748>
   197d4:	mov	r0, sl
   197d8:	mov	r2, r6
   197dc:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   197e0:	mov	r7, r0
   197e4:	cmp	r8, r7
   197e8:	beq	2174c <main@@Base+0xb6b0>
   197ec:	mov	r2, r6
   197f0:	mov	r6, #0
   197f4:	cmp	r7, r2
   197f8:	str	r6, [fp, #-52]	; 0xffffffcc
   197fc:	str	r6, [fp, #-56]	; 0xffffffc8
   19800:	strh	r6, [fp, #-60]	; 0xffffffc4
   19804:	str	r6, [sp, #64]	; 0x40
   19808:	beq	19870 <main@@Base+0x37d4>
   1980c:	sub	r0, fp, #56	; 0x38
   19810:	mov	r1, r7
   19814:	add	r3, sp, #64	; 0x40
   19818:	mov	r8, r2
   1981c:	str	r0, [sp]
   19820:	mov	r0, sl
   19824:	bl	392f4 <flatcc_json_parser_integer@@Base>
   19828:	ldr	r5, [sp, #48]	; 0x30
   1982c:	cmp	r0, r7
   19830:	beq	19888 <main@@Base+0x37ec>
   19834:	ldr	r2, [sp, #64]	; 0x40
   19838:	mov	r4, r0
   1983c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19840:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19844:	cmp	r2, #0
   19848:	beq	19898 <main@@Base+0x37fc>
   1984c:	movw	r2, #32769	; 0x8001
   19850:	subs	r2, r0, r2
   19854:	sbcs	r1, r1, #0
   19858:	bcc	198c8 <main@@Base+0x382c>
   1985c:	mov	r0, sl
   19860:	mov	r1, r4
   19864:	mov	r2, r8
   19868:	mov	r3, #8
   1986c:	b	198b4 <main@@Base+0x3818>
   19870:	ldr	r5, [sp, #48]	; 0x30
   19874:	mov	r8, r2
   19878:	mov	r4, r2
   1987c:	cmp	r7, r4
   19880:	bne	1992c <main@@Base+0x3890>
   19884:	b	198ec <main@@Base+0x3850>
   19888:	mov	r4, r7
   1988c:	cmp	r7, r4
   19890:	bne	1992c <main@@Base+0x3890>
   19894:	b	198ec <main@@Base+0x3850>
   19898:	subs	r2, r0, #32768	; 0x8000
   1989c:	sbcs	r1, r1, #0
   198a0:	bcc	198dc <main@@Base+0x3840>
   198a4:	mov	r0, sl
   198a8:	mov	r1, r4
   198ac:	mov	r2, r8
   198b0:	mov	r3, #7
   198b4:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   198b8:	mov	r4, r0
   198bc:	cmp	r7, r4
   198c0:	bne	1992c <main@@Base+0x3890>
   198c4:	b	198ec <main@@Base+0x3850>
   198c8:	rsb	r6, r0, #0
   198cc:	strh	r6, [fp, #-60]	; 0xffffffc4
   198d0:	cmp	r7, r4
   198d4:	bne	1992c <main@@Base+0x3890>
   198d8:	b	198ec <main@@Base+0x3850>
   198dc:	mov	r6, r0
   198e0:	strh	r6, [fp, #-60]	; 0xffffffc4
   198e4:	cmp	r7, r4
   198e8:	bne	1992c <main@@Base+0x3890>
   198ec:	sub	r0, fp, #60	; 0x3c
   198f0:	mov	r1, r7
   198f4:	mov	r2, r8
   198f8:	mov	r6, r8
   198fc:	str	r0, [sp]
   19900:	movw	r0, #148	; 0x94
   19904:	movt	r0, #6
   19908:	add	r3, r0, #36	; 0x24
   1990c:	mov	r0, sl
   19910:	bl	23cbc <main@@Base+0xdc20>
   19914:	mov	r4, r0
   19918:	cmp	r0, r7
   1991c:	cmpne	r4, r6
   19920:	beq	21968 <main@@Base+0xb8cc>
   19924:	mov	r8, r6
   19928:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   1992c:	uxth	r0, r6
   19930:	cmp	r0, #150	; 0x96
   19934:	ldrbeq	r0, [sl, #8]
   19938:	tsteq	r0, #2
   1993c:	beq	19960 <main@@Base+0x38c4>
   19940:	ldr	r0, [sl]
   19944:	mov	r1, #1
   19948:	mov	r2, #2
   1994c:	mov	r3, #2
   19950:	bl	33604 <flatcc_builder_table_add@@Base>
   19954:	cmp	r0, #0
   19958:	beq	21968 <main@@Base+0xb8cc>
   1995c:	strh	r6, [r0]
   19960:	mov	r6, r8
   19964:	sub	r0, r6, r4
   19968:	cmp	r0, #2
   1996c:	bge	21770 <main@@Base+0xb6d4>
   19970:	mov	r0, sl
   19974:	mov	r1, r4
   19978:	mov	r2, r6
   1997c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   19980:	mov	r2, r0
   19984:	cmp	r2, r6
   19988:	bne	21788 <main@@Base+0xb6ec>
   1998c:	b	217e8 <main@@Base+0xb74c>
   19990:	bne	199a0 <main@@Base+0x3904>
   19994:	ldrb	r0, [r7, #2]!
   19998:	cmp	r0, #32
   1999c:	bhi	199b0 <main@@Base+0x3914>
   199a0:	mov	r0, sl
   199a4:	mov	r2, r6
   199a8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   199ac:	mov	r7, r0
   199b0:	cmp	r8, r7
   199b4:	beq	2174c <main@@Base+0xb6b0>
   199b8:	mov	r0, #0
   199bc:	mov	r1, r7
   199c0:	mov	r2, r6
   199c4:	sub	r3, fp, #56	; 0x38
   199c8:	str	r0, [fp, #-56]	; 0xffffffc8
   199cc:	mov	r0, sl
   199d0:	bl	391a8 <flatcc_json_parser_float@@Base>
   199d4:	ldr	r5, [sp, #48]	; 0x30
   199d8:	mov	r4, r0
   199dc:	cmp	r7, r0
   199e0:	bne	19a18 <main@@Base+0x397c>
   199e4:	sub	r0, fp, #56	; 0x38
   199e8:	mov	r1, r7
   199ec:	mov	r2, r6
   199f0:	str	r0, [sp]
   199f4:	movw	r0, #148	; 0x94
   199f8:	movt	r0, #6
   199fc:	add	r3, r0, #84	; 0x54
   19a00:	mov	r0, sl
   19a04:	bl	25f44 <main@@Base+0xfea8>
   19a08:	mov	r4, r0
   19a0c:	cmp	r0, r7
   19a10:	cmpne	r4, r6
   19a14:	beq	16fd0 <main@@Base+0xf34>
   19a18:	vldr	s0, [fp, #-56]	; 0xffffffc8
   19a1c:	vcmp.f32	s0, s18
   19a20:	vmrs	APSR_nzcv, fpscr
   19a24:	bne	19a34 <main@@Base+0x3998>
   19a28:	ldrb	r0, [sl, #8]
   19a2c:	tst	r0, #2
   19a30:	beq	21764 <main@@Base+0xb6c8>
   19a34:	ldr	r0, [sl]
   19a38:	mov	r1, #25
   19a3c:	b	2044c <main@@Base+0xa3b0>
   19a40:	bne	19a50 <main@@Base+0x39b4>
   19a44:	ldrb	r0, [r7, #2]!
   19a48:	cmp	r0, #32
   19a4c:	bhi	19a60 <main@@Base+0x39c4>
   19a50:	mov	r0, sl
   19a54:	mov	r2, r6
   19a58:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   19a5c:	mov	r7, r0
   19a60:	cmp	r9, r7
   19a64:	beq	2158c <main@@Base+0xb4f0>
   19a68:	mov	r2, r6
   19a6c:	mov	r6, #0
   19a70:	cmp	r7, r2
   19a74:	str	r6, [fp, #-52]	; 0xffffffcc
   19a78:	str	r6, [fp, #-56]	; 0xffffffc8
   19a7c:	str	r6, [sp, #68]	; 0x44
   19a80:	str	r6, [sp, #64]	; 0x40
   19a84:	str	r6, [fp, #-60]	; 0xffffffc4
   19a88:	beq	19ae0 <main@@Base+0x3a44>
   19a8c:	sub	r0, fp, #56	; 0x38
   19a90:	mov	r1, r7
   19a94:	sub	r3, fp, #60	; 0x3c
   19a98:	str	r0, [sp]
   19a9c:	mov	r0, sl
   19aa0:	bl	392f4 <flatcc_json_parser_integer@@Base>
   19aa4:	cmp	r0, r7
   19aa8:	beq	19af8 <main@@Base+0x3a5c>
   19aac:	sub	r9, fp, #60	; 0x3c
   19ab0:	mov	r4, r0
   19ab4:	ldm	r9, {r0, r6, r9}
   19ab8:	cmp	r0, #0
   19abc:	beq	19b14 <main@@Base+0x3a78>
   19ac0:	subs	r0, r6, #1
   19ac4:	sbcs	r0, r9, #-2147483648	; 0x80000000
   19ac8:	bcc	19bd0 <main@@Base+0x3b34>
   19acc:	ldr	r2, [sp, #52]	; 0x34
   19ad0:	mov	r0, sl
   19ad4:	mov	r1, r4
   19ad8:	mov	r3, #8
   19adc:	b	19b2c <main@@Base+0x3a90>
   19ae0:	mov	r4, r2
   19ae4:	mov	r9, #0
   19ae8:	ldr	r5, [sp, #48]	; 0x30
   19aec:	cmp	r7, r4
   19af0:	bne	19c2c <main@@Base+0x3b90>
   19af4:	b	19bec <main@@Base+0x3b50>
   19af8:	mov	r6, #0
   19afc:	mov	r9, #0
   19b00:	mov	r4, r7
   19b04:	ldr	r5, [sp, #48]	; 0x30
   19b08:	cmp	r7, r4
   19b0c:	bne	19c2c <main@@Base+0x3b90>
   19b10:	b	19bec <main@@Base+0x3b50>
   19b14:	cmn	r9, #1
   19b18:	bgt	19bd8 <main@@Base+0x3b3c>
   19b1c:	ldr	r2, [sp, #52]	; 0x34
   19b20:	mov	r0, sl
   19b24:	mov	r1, r4
   19b28:	mov	r3, #7
   19b2c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   19b30:	mov	r4, r0
   19b34:	mov	r6, #0
   19b38:	mov	r9, #0
   19b3c:	ldr	r5, [sp, #48]	; 0x30
   19b40:	cmp	r7, r4
   19b44:	bne	19c2c <main@@Base+0x3b90>
   19b48:	b	19bec <main@@Base+0x3b50>
   19b4c:	bne	19b60 <main@@Base+0x3ac4>
   19b50:	mov	r4, r1
   19b54:	ldrb	r0, [r4, #1]!
   19b58:	cmp	r0, #32
   19b5c:	bhi	19b70 <main@@Base+0x3ad4>
   19b60:	mov	r0, sl
   19b64:	mov	r2, r6
   19b68:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   19b6c:	mov	r4, r0
   19b70:	cmp	r4, r6
   19b74:	beq	19bb8 <main@@Base+0x3b1c>
   19b78:	ldrb	r0, [r4]
   19b7c:	cmp	r0, #58	; 0x3a
   19b80:	bne	19bb8 <main@@Base+0x3b1c>
   19b84:	add	r1, r4, #1
   19b88:	sub	r0, r6, r1
   19b8c:	cmp	r0, #2
   19b90:	blt	1c3ec <main@@Base+0x6350>
   19b94:	ldrb	r0, [r1]
   19b98:	cmp	r0, #32
   19b9c:	bls	1c3d4 <main@@Base+0x6338>
   19ba0:	ldr	r6, [sp, #52]	; 0x34
   19ba4:	ldr	sl, [sp, #44]	; 0x2c
   19ba8:	mov	r4, r1
   19bac:	cmp	r7, r4
   19bb0:	bne	1c404 <main@@Base+0x6368>
   19bb4:	b	1c464 <main@@Base+0x63c8>
   19bb8:	mov	r0, sl
   19bbc:	mov	r1, r4
   19bc0:	mov	r2, r6
   19bc4:	mov	r3, #4
   19bc8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   19bcc:	b	1c3f8 <main@@Base+0x635c>
   19bd0:	rsbs	r6, r6, #0
   19bd4:	rsc	r9, r9, #0
   19bd8:	str	r6, [sp, #64]	; 0x40
   19bdc:	str	r9, [sp, #68]	; 0x44
   19be0:	ldr	r5, [sp, #48]	; 0x30
   19be4:	cmp	r7, r4
   19be8:	bne	19c2c <main@@Base+0x3b90>
   19bec:	ldr	r6, [sp, #52]	; 0x34
   19bf0:	add	r0, sp, #64	; 0x40
   19bf4:	mov	r1, r7
   19bf8:	str	r0, [sp]
   19bfc:	movw	r0, #268	; 0x10c
   19c00:	movt	r0, #6
   19c04:	add	r3, r0, #12
   19c08:	mov	r0, sl
   19c0c:	mov	r2, r6
   19c10:	bl	2636c <main@@Base+0x102d0>
   19c14:	mov	r4, r0
   19c18:	cmp	r0, r7
   19c1c:	cmpne	r4, r6
   19c20:	beq	21968 <main@@Base+0xb8cc>
   19c24:	ldr	r6, [sp, #64]	; 0x40
   19c28:	ldr	r9, [sp, #68]	; 0x44
   19c2c:	orrs	r0, r6, r9
   19c30:	bne	19c40 <main@@Base+0x3ba4>
   19c34:	ldrb	r0, [sl, #8]
   19c38:	tst	r0, #2
   19c3c:	beq	1a5c8 <main@@Base+0x452c>
   19c40:	ldr	r0, [sl]
   19c44:	mov	r1, #18
   19c48:	b	1a5b0 <main@@Base+0x4514>
   19c4c:	beq	1a8f8 <main@@Base+0x485c>
   19c50:	b	1a908 <main@@Base+0x486c>
   19c54:	bne	19c64 <main@@Base+0x3bc8>
   19c58:	ldrb	r0, [r4, #2]!
   19c5c:	cmp	r0, #32
   19c60:	bhi	19c74 <main@@Base+0x3bd8>
   19c64:	mov	r0, sl
   19c68:	mov	r2, r6
   19c6c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   19c70:	mov	r4, r0
   19c74:	cmp	r9, r4
   19c78:	beq	1ab4c <main@@Base+0x4ab0>
   19c7c:	mov	r0, #0
   19c80:	mov	r1, #0
   19c84:	str	r0, [sp, #60]	; 0x3c
   19c88:	ldr	r0, [sl]
   19c8c:	bl	32294 <flatcc_builder_start_table@@Base>
   19c90:	cmp	r0, #0
   19c94:	bne	19d08 <main@@Base+0x3c6c>
   19c98:	cmp	r4, r6
   19c9c:	beq	19ce0 <main@@Base+0x3c44>
   19ca0:	ldrb	r0, [r4]
   19ca4:	cmp	r0, #123	; 0x7b
   19ca8:	bne	19ce0 <main@@Base+0x3c44>
   19cac:	add	r1, r4, #1
   19cb0:	sub	r0, r6, r1
   19cb4:	cmp	r0, #2
   19cb8:	blt	1ca94 <main@@Base+0x69f8>
   19cbc:	ldrb	r0, [r1]
   19cc0:	cmp	r0, #32
   19cc4:	bls	1ca80 <main@@Base+0x69e4>
   19cc8:	ldr	r6, [sp, #52]	; 0x34
   19ccc:	mov	r4, r1
   19cd0:	cmp	r4, r6
   19cd4:	mov	r3, r6
   19cd8:	bne	1cab0 <main@@Base+0x6a14>
   19cdc:	b	1cb00 <main@@Base+0x6a64>
   19ce0:	mov	r0, sl
   19ce4:	mov	r1, r4
   19ce8:	mov	r2, r6
   19cec:	mov	r3, #21
   19cf0:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   19cf4:	mov	r4, r0
   19cf8:	ldr	r0, [sp, #36]	; 0x24
   19cfc:	ldr	r0, [r0]
   19d00:	cmp	r0, #0
   19d04:	beq	1dc70 <main@@Base+0x7bd4>
   19d08:	mov	r0, sl
   19d0c:	mov	r1, r4
   19d10:	mov	r2, r6
   19d14:	mov	r3, #33	; 0x21
   19d18:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   19d1c:	mov	r4, r0
   19d20:	ldr	r0, [sp, #60]	; 0x3c
   19d24:	cmp	r0, #0
   19d28:	beq	16fd0 <main@@Base+0xf34>
   19d2c:	ldr	r0, [sl]
   19d30:	mov	r1, #34	; 0x22
   19d34:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   19d38:	cmp	r0, #0
   19d3c:	bne	20e40 <main@@Base+0xada4>
   19d40:	b	16fd0 <main@@Base+0xf34>
   19d44:	ldr	r5, [sp, #48]	; 0x30
   19d48:	mov	r4, r6
   19d4c:	b	17834 <main@@Base+0x1798>
   19d50:	bne	19d64 <main@@Base+0x3cc8>
   19d54:	mov	r7, r1
   19d58:	ldrb	r0, [r7, #1]!
   19d5c:	cmp	r0, #32
   19d60:	bhi	19d74 <main@@Base+0x3cd8>
   19d64:	mov	r0, sl
   19d68:	mov	r2, r6
   19d6c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   19d70:	mov	r7, r0
   19d74:	cmp	r7, r6
   19d78:	beq	19dbc <main@@Base+0x3d20>
   19d7c:	ldrb	r0, [r7]
   19d80:	cmp	r0, #58	; 0x3a
   19d84:	bne	19dbc <main@@Base+0x3d20>
   19d88:	add	r1, r7, #1
   19d8c:	sub	r0, r6, r1
   19d90:	cmp	r0, #2
   19d94:	blt	1c85c <main@@Base+0x67c0>
   19d98:	ldrb	r0, [r1]
   19d9c:	cmp	r0, #32
   19da0:	bls	1c844 <main@@Base+0x67a8>
   19da4:	ldr	r6, [sp, #52]	; 0x34
   19da8:	ldr	sl, [sp, #44]	; 0x2c
   19dac:	mov	r7, r1
   19db0:	cmp	r4, r7
   19db4:	bne	1c874 <main@@Base+0x67d8>
   19db8:	b	1d0c8 <main@@Base+0x702c>
   19dbc:	mov	r0, sl
   19dc0:	mov	r1, r7
   19dc4:	mov	r2, r6
   19dc8:	mov	r3, #4
   19dcc:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   19dd0:	b	1c868 <main@@Base+0x67cc>
   19dd4:	bne	19de4 <main@@Base+0x3d48>
   19dd8:	ldrb	r0, [r4, #2]!
   19ddc:	cmp	r0, #32
   19de0:	bhi	19df4 <main@@Base+0x3d58>
   19de4:	mov	r0, sl
   19de8:	mov	r2, r6
   19dec:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   19df0:	mov	r4, r0
   19df4:	cmp	r7, r4
   19df8:	beq	1c464 <main@@Base+0x63c8>
   19dfc:	ldr	r0, [sl]
   19e00:	bl	31d68 <flatcc_builder_start_offset_vector@@Base>
   19e04:	cmp	r0, #0
   19e08:	bne	16fd0 <main@@Base+0xf34>
   19e0c:	cmp	r4, r6
   19e10:	beq	19e58 <main@@Base+0x3dbc>
   19e14:	ldrb	r0, [r4]
   19e18:	cmp	r0, #91	; 0x5b
   19e1c:	bne	19e58 <main@@Base+0x3dbc>
   19e20:	add	r1, r4, #1
   19e24:	sub	r0, r6, r1
   19e28:	cmp	r0, #2
   19e2c:	blt	1a930 <main@@Base+0x4894>
   19e30:	ldrb	r0, [r1]
   19e34:	cmp	r0, #32
   19e38:	bls	1a918 <main@@Base+0x487c>
   19e3c:	ldr	r6, [sp, #52]	; 0x34
   19e40:	ldr	sl, [sp, #44]	; 0x2c
   19e44:	mov	r4, r1
   19e48:	cmp	r4, r6
   19e4c:	mov	r2, r6
   19e50:	bne	1a94c <main@@Base+0x48b0>
   19e54:	b	1a9a4 <main@@Base+0x4908>
   19e58:	mov	r0, sl
   19e5c:	mov	r1, r4
   19e60:	mov	r2, r6
   19e64:	mov	r3, #22
   19e68:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   19e6c:	mov	r4, r0
   19e70:	ldr	r0, [sl]
   19e74:	bl	32020 <flatcc_builder_end_offset_vector@@Base>
   19e78:	ldr	r5, [sp, #48]	; 0x30
   19e7c:	cmp	r0, #0
   19e80:	str	r0, [sp, #60]	; 0x3c
   19e84:	beq	16fd0 <main@@Base+0xf34>
   19e88:	ldr	r0, [sl]
   19e8c:	mov	r1, #11
   19e90:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   19e94:	cmp	r0, #0
   19e98:	bne	20f1c <main@@Base+0xae80>
   19e9c:	b	16fd0 <main@@Base+0xf34>
   19ea0:	cmp	r0, #93	; 0x5d
   19ea4:	bne	1af7c <main@@Base+0x4ee0>
   19ea8:	ldr	r6, [sp, #52]	; 0x34
   19eac:	ldr	sl, [sp, #44]	; 0x2c
   19eb0:	add	r1, r4, #1
   19eb4:	sub	r0, r6, r1
   19eb8:	cmp	r0, #2
   19ebc:	ldr	r5, [sp, #48]	; 0x30
   19ec0:	blt	19f00 <main@@Base+0x3e64>
   19ec4:	ldrb	r0, [r1]
   19ec8:	cmp	r0, #32
   19ecc:	bls	19ee4 <main@@Base+0x3e48>
   19ed0:	ldr	r6, [sp, #52]	; 0x34
   19ed4:	ldr	sl, [sp, #44]	; 0x2c
   19ed8:	ldr	r5, [sp, #48]	; 0x30
   19edc:	mov	r4, r1
   19ee0:	b	17834 <main@@Base+0x1798>
   19ee4:	ldr	r6, [sp, #52]	; 0x34
   19ee8:	ldr	sl, [sp, #44]	; 0x2c
   19eec:	ldr	r5, [sp, #48]	; 0x30
   19ef0:	bne	19f00 <main@@Base+0x3e64>
   19ef4:	ldrb	r0, [r4, #2]!
   19ef8:	cmp	r0, #32
   19efc:	bhi	17834 <main@@Base+0x1798>
   19f00:	mov	r0, sl
   19f04:	mov	r2, r6
   19f08:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   19f0c:	b	17830 <main@@Base+0x1794>
   19f10:	mov	r0, sl
   19f14:	mov	r1, r6
   19f18:	b	1af8c <main@@Base+0x4ef0>
   19f1c:	bne	19f2c <main@@Base+0x3e90>
   19f20:	ldrb	r0, [r4, #2]!
   19f24:	cmp	r0, #32
   19f28:	bhi	19f3c <main@@Base+0x3ea0>
   19f2c:	mov	r0, sl
   19f30:	mov	r2, r6
   19f34:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   19f38:	mov	r4, r0
   19f3c:	cmp	r4, r6
   19f40:	mov	r2, r6
   19f44:	beq	19f90 <main@@Base+0x3ef4>
   19f48:	ldrb	r0, [r4]
   19f4c:	cmp	r0, #93	; 0x5d
   19f50:	bne	19f8c <main@@Base+0x3ef0>
   19f54:	add	r1, r4, #1
   19f58:	sub	r0, r6, r1
   19f5c:	cmp	r0, #2
   19f60:	blt	1df78 <main@@Base+0x7edc>
   19f64:	ldrb	r0, [r1]
   19f68:	cmp	r0, #32
   19f6c:	bhi	1bbe0 <main@@Base+0x5b44>
   19f70:	ldr	r6, [sp, #52]	; 0x34
   19f74:	ldr	sl, [sp, #44]	; 0x2c
   19f78:	bne	1df78 <main@@Base+0x7edc>
   19f7c:	ldrb	r0, [r4, #2]!
   19f80:	cmp	r0, #32
   19f84:	bhi	19654 <main@@Base+0x35b8>
   19f88:	b	1df78 <main@@Base+0x7edc>
   19f8c:	mov	r2, r4
   19f90:	mov	r1, r2
   19f94:	mov	r0, sl
   19f98:	mov	r2, r6
   19f9c:	add	r3, sp, #60	; 0x3c
   19fa0:	bl	398b4 <flatcc_json_parser_build_string@@Base>
   19fa4:	mov	r4, r0
   19fa8:	ldr	r0, [sp, #60]	; 0x3c
   19fac:	cmp	r0, #0
   19fb0:	beq	16fd0 <main@@Base+0xf34>
   19fb4:	ldr	r0, [sl]
   19fb8:	mov	r1, #1
   19fbc:	bl	31524 <flatcc_builder_extend_offset_vector@@Base>
   19fc0:	cmp	r0, #0
   19fc4:	beq	16fd0 <main@@Base+0xf34>
   19fc8:	ldr	r1, [sp, #60]	; 0x3c
   19fcc:	str	r1, [r0]
   19fd0:	sub	r0, r6, r4
   19fd4:	cmp	r0, #2
   19fd8:	blt	1a00c <main@@Base+0x3f70>
   19fdc:	ldrb	r0, [r4]
   19fe0:	cmp	r0, #32
   19fe4:	bls	19ff8 <main@@Base+0x3f5c>
   19fe8:	mov	r2, r4
   19fec:	cmp	r2, r6
   19ff0:	bne	1a028 <main@@Base+0x3f8c>
   19ff4:	b	1bb6c <main@@Base+0x5ad0>
   19ff8:	bne	1a00c <main@@Base+0x3f70>
   19ffc:	mov	r2, r4
   1a000:	ldrb	r0, [r2, #1]!
   1a004:	cmp	r0, #32
   1a008:	bhi	1a020 <main@@Base+0x3f84>
   1a00c:	mov	r0, sl
   1a010:	mov	r1, r4
   1a014:	mov	r2, r6
   1a018:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1a01c:	mov	r2, r0
   1a020:	cmp	r2, r6
   1a024:	beq	1bb6c <main@@Base+0x5ad0>
   1a028:	ldrb	r0, [r2]
   1a02c:	cmp	r0, #44	; 0x2c
   1a030:	bne	1bbb4 <main@@Base+0x5b18>
   1a034:	add	r1, r2, #1
   1a038:	sub	r0, r6, r1
   1a03c:	cmp	r0, #2
   1a040:	blt	1a070 <main@@Base+0x3fd4>
   1a044:	ldrb	r0, [r1]
   1a048:	cmp	r0, #32
   1a04c:	bls	1a060 <main@@Base+0x3fc4>
   1a050:	mov	r2, r1
   1a054:	cmp	r2, r6
   1a058:	bne	1a088 <main@@Base+0x3fec>
   1a05c:	b	1bbf0 <main@@Base+0x5b54>
   1a060:	bne	1a070 <main@@Base+0x3fd4>
   1a064:	ldrb	r0, [r2, #2]!
   1a068:	cmp	r0, #32
   1a06c:	bhi	1a080 <main@@Base+0x3fe4>
   1a070:	mov	r0, sl
   1a074:	mov	r2, r6
   1a078:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1a07c:	mov	r2, r0
   1a080:	cmp	r2, r6
   1a084:	beq	1bbf0 <main@@Base+0x5b54>
   1a088:	ldrb	r0, [r2]
   1a08c:	cmp	r0, #93	; 0x5d
   1a090:	bne	19f90 <main@@Base+0x3ef4>
   1a094:	add	r1, r2, #1
   1a098:	sub	r0, r6, r1
   1a09c:	cmp	r0, #2
   1a0a0:	bge	1bbd4 <main@@Base+0x5b38>
   1a0a4:	b	1df78 <main@@Base+0x7edc>
   1a0a8:	bne	1a0b8 <main@@Base+0x401c>
   1a0ac:	ldrb	r0, [r7, #2]!
   1a0b0:	cmp	r0, #32
   1a0b4:	bhi	1a0c8 <main@@Base+0x402c>
   1a0b8:	mov	r0, sl
   1a0bc:	mov	r2, r6
   1a0c0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1a0c4:	mov	r7, r0
   1a0c8:	cmp	r7, r6
   1a0cc:	mov	r4, r6
   1a0d0:	beq	1afec <main@@Base+0x4f50>
   1a0d4:	ldrb	r0, [r7]
   1a0d8:	cmp	r0, #93	; 0x5d
   1a0dc:	bne	1a118 <main@@Base+0x407c>
   1a0e0:	add	r1, r7, #1
   1a0e4:	sub	r0, r6, r1
   1a0e8:	cmp	r0, #2
   1a0ec:	blt	1e0c0 <main@@Base+0x8024>
   1a0f0:	ldrb	r0, [r1]
   1a0f4:	cmp	r0, #32
   1a0f8:	bhi	1b960 <main@@Base+0x58c4>
   1a0fc:	ldr	r6, [sp, #52]	; 0x34
   1a100:	ldr	sl, [sp, #44]	; 0x2c
   1a104:	bne	1e0c0 <main@@Base+0x8024>
   1a108:	ldrb	r0, [r7, #2]!
   1a10c:	cmp	r0, #32
   1a110:	bhi	19724 <main@@Base+0x3688>
   1a114:	b	1e0c0 <main@@Base+0x8024>
   1a118:	mov	r4, r7
   1a11c:	b	1afec <main@@Base+0x4f50>
   1a120:	bne	1a130 <main@@Base+0x4094>
   1a124:	ldrb	r0, [r4, #2]!
   1a128:	cmp	r0, #32
   1a12c:	bhi	1a140 <main@@Base+0x40a4>
   1a130:	mov	r0, sl
   1a134:	mov	r2, r6
   1a138:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1a13c:	mov	r4, r0
   1a140:	cmp	r7, r4
   1a144:	beq	1c464 <main@@Base+0x63c8>
   1a148:	mov	r0, #0
   1a14c:	mov	r1, #3
   1a150:	str	r0, [sp, #60]	; 0x3c
   1a154:	ldr	r0, [sl]
   1a158:	bl	32294 <flatcc_builder_start_table@@Base>
   1a15c:	cmp	r0, #0
   1a160:	bne	1a1d8 <main@@Base+0x413c>
   1a164:	cmp	r4, r6
   1a168:	beq	1a1a8 <main@@Base+0x410c>
   1a16c:	ldrb	r0, [r4]
   1a170:	cmp	r0, #123	; 0x7b
   1a174:	bne	1a1a8 <main@@Base+0x410c>
   1a178:	add	r1, r4, #1
   1a17c:	sub	r0, r6, r1
   1a180:	cmp	r0, #2
   1a184:	blt	1d1b0 <main@@Base+0x7114>
   1a188:	ldrb	r0, [r1]
   1a18c:	cmp	r0, #32
   1a190:	bls	1d1a0 <main@@Base+0x7104>
   1a194:	mov	r4, r1
   1a198:	ldr	r2, [sp, #52]	; 0x34
   1a19c:	cmp	r4, r2
   1a1a0:	bne	1d1cc <main@@Base+0x7130>
   1a1a4:	b	1d210 <main@@Base+0x7174>
   1a1a8:	mov	r0, sl
   1a1ac:	mov	r1, r4
   1a1b0:	mov	r2, r6
   1a1b4:	mov	r3, #21
   1a1b8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1a1bc:	mov	r4, r0
   1a1c0:	ldr	r0, [sp, #36]	; 0x24
   1a1c4:	ldr	r0, [r0]
   1a1c8:	cmp	r0, #0
   1a1cc:	beq	1e204 <main@@Base+0x8168>
   1a1d0:	ldr	r6, [sp, #52]	; 0x34
   1a1d4:	ldr	sl, [sp, #44]	; 0x2c
   1a1d8:	mov	r0, sl
   1a1dc:	mov	r1, r4
   1a1e0:	mov	r2, r6
   1a1e4:	mov	r3, #33	; 0x21
   1a1e8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1a1ec:	mov	r4, r0
   1a1f0:	ldr	r0, [sp, #60]	; 0x3c
   1a1f4:	cmp	r0, #0
   1a1f8:	beq	16fd0 <main@@Base+0xf34>
   1a1fc:	ldr	r0, [sl]
   1a200:	mov	r1, #14
   1a204:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   1a208:	cmp	r0, #0
   1a20c:	bne	20e40 <main@@Base+0xada4>
   1a210:	b	16fd0 <main@@Base+0xf34>
   1a214:	bne	1a224 <main@@Base+0x4188>
   1a218:	ldrb	r0, [r4, #2]!
   1a21c:	cmp	r0, #32
   1a220:	bhi	1a234 <main@@Base+0x4198>
   1a224:	mov	r0, sl
   1a228:	mov	r2, r6
   1a22c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1a230:	mov	r4, r0
   1a234:	cmp	r7, r4
   1a238:	beq	1c464 <main@@Base+0x63c8>
   1a23c:	ldr	r0, [sl]
   1a240:	mov	r1, #1
   1a244:	mov	r2, #1
   1a248:	mvn	r3, #0
   1a24c:	bl	31cdc <flatcc_builder_start_vector@@Base>
   1a250:	cmp	r0, #0
   1a254:	bne	16fd0 <main@@Base+0xf34>
   1a258:	cmp	r4, r6
   1a25c:	beq	1a2a0 <main@@Base+0x4204>
   1a260:	ldrb	r0, [r4]
   1a264:	cmp	r0, #91	; 0x5b
   1a268:	bne	1a2a0 <main@@Base+0x4204>
   1a26c:	add	r1, r4, #1
   1a270:	sub	r0, r6, r1
   1a274:	cmp	r0, #2
   1a278:	blt	1accc <main@@Base+0x4c30>
   1a27c:	ldrb	r0, [r1]
   1a280:	cmp	r0, #32
   1a284:	bls	1acb4 <main@@Base+0x4c18>
   1a288:	ldr	r6, [sp, #52]	; 0x34
   1a28c:	ldr	sl, [sp, #44]	; 0x2c
   1a290:	mov	r4, r1
   1a294:	cmp	r4, r6
   1a298:	bne	1ace4 <main@@Base+0x4c48>
   1a29c:	b	1ad44 <main@@Base+0x4ca8>
   1a2a0:	mov	r0, sl
   1a2a4:	mov	r1, r4
   1a2a8:	mov	r2, r6
   1a2ac:	mov	r3, #22
   1a2b0:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1a2b4:	mov	r4, r0
   1a2b8:	ldr	r0, [sl]
   1a2bc:	bl	32f5c <flatcc_builder_end_vector@@Base>
   1a2c0:	ldr	r5, [sp, #48]	; 0x30
   1a2c4:	cmp	r0, #0
   1a2c8:	str	r0, [sp, #60]	; 0x3c
   1a2cc:	beq	16fd0 <main@@Base+0xf34>
   1a2d0:	ldr	r0, [sl]
   1a2d4:	mov	r1, #5
   1a2d8:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   1a2dc:	cmp	r0, #0
   1a2e0:	bne	20f1c <main@@Base+0xae80>
   1a2e4:	b	16fd0 <main@@Base+0xf34>
   1a2e8:	ldr	r6, [sp, #52]	; 0x34
   1a2ec:	ldr	sl, [sp, #44]	; 0x2c
   1a2f0:	bne	1a300 <main@@Base+0x4264>
   1a2f4:	ldrb	r0, [r7, #2]!
   1a2f8:	cmp	r0, #32
   1a2fc:	bhi	1a310 <main@@Base+0x4274>
   1a300:	mov	r0, sl
   1a304:	mov	r2, r6
   1a308:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1a30c:	mov	r7, r0
   1a310:	cmp	r9, r7
   1a314:	beq	18c3c <main@@Base+0x2ba0>
   1a318:	mov	r2, r6
   1a31c:	mov	r6, #0
   1a320:	cmp	r7, r2
   1a324:	str	r6, [fp, #-52]	; 0xffffffcc
   1a328:	str	r6, [fp, #-56]	; 0xffffffc8
   1a32c:	str	r6, [fp, #-60]	; 0xffffffc4
   1a330:	str	r6, [sp, #64]	; 0x40
   1a334:	beq	1a380 <main@@Base+0x42e4>
   1a338:	sub	r0, fp, #56	; 0x38
   1a33c:	mov	r1, r7
   1a340:	add	r3, sp, #64	; 0x40
   1a344:	mov	r8, r2
   1a348:	str	r0, [sp]
   1a34c:	mov	r0, sl
   1a350:	bl	392f4 <flatcc_json_parser_integer@@Base>
   1a354:	cmp	r0, r7
   1a358:	beq	1a398 <main@@Base+0x42fc>
   1a35c:	mov	r4, r0
   1a360:	ldr	r0, [sp, #64]	; 0x40
   1a364:	cmp	r0, #0
   1a368:	beq	1a3ac <main@@Base+0x4310>
   1a36c:	mov	r0, sl
   1a370:	mov	r1, r4
   1a374:	mov	r2, r8
   1a378:	mov	r3, #8
   1a37c:	b	1a3d0 <main@@Base+0x4334>
   1a380:	mov	r8, r2
   1a384:	mov	r4, r2
   1a388:	ldr	r5, [sp, #48]	; 0x30
   1a38c:	cmp	r7, r4
   1a390:	bne	1a428 <main@@Base+0x438c>
   1a394:	b	1a3e4 <main@@Base+0x4348>
   1a398:	mov	r4, r7
   1a39c:	ldr	r5, [sp, #48]	; 0x30
   1a3a0:	cmp	r7, r4
   1a3a4:	bne	1a428 <main@@Base+0x438c>
   1a3a8:	b	1a3e4 <main@@Base+0x4348>
   1a3ac:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a3b0:	cmp	r0, #0
   1a3b4:	beq	1b99c <main@@Base+0x5900>
   1a3b8:	ldr	sl, [sp, #44]	; 0x2c
   1a3bc:	ldr	r2, [sp, #52]	; 0x34
   1a3c0:	mov	r1, r4
   1a3c4:	mov	r3, #7
   1a3c8:	mov	r0, sl
   1a3cc:	mov	r8, r2
   1a3d0:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1a3d4:	mov	r4, r0
   1a3d8:	ldr	r5, [sp, #48]	; 0x30
   1a3dc:	cmp	r7, r4
   1a3e0:	bne	1a428 <main@@Base+0x438c>
   1a3e4:	sub	r0, fp, #60	; 0x3c
   1a3e8:	mov	r1, r7
   1a3ec:	mov	r2, r8
   1a3f0:	mov	r5, r8
   1a3f4:	str	r0, [sp]
   1a3f8:	movw	r0, #268	; 0x10c
   1a3fc:	movt	r0, #6
   1a400:	add	r3, r0, #36	; 0x24
   1a404:	mov	r0, sl
   1a408:	bl	265c4 <main@@Base+0x10528>
   1a40c:	mov	r4, r0
   1a410:	cmp	r0, r7
   1a414:	cmpne	r4, r5
   1a418:	beq	21968 <main@@Base+0xb8cc>
   1a41c:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1a420:	ldr	sl, [sp, #44]	; 0x2c
   1a424:	ldr	r5, [sp, #48]	; 0x30
   1a428:	cmp	r6, #0
   1a42c:	bne	1a43c <main@@Base+0x43a0>
   1a430:	ldrb	r0, [sl, #8]
   1a434:	tst	r0, #2
   1a438:	beq	19960 <main@@Base+0x38c4>
   1a43c:	ldr	r0, [sl]
   1a440:	mov	r1, #17
   1a444:	b	1c53c <main@@Base+0x64a0>
   1a448:	ldr	r6, [sp, #52]	; 0x34
   1a44c:	ldr	sl, [sp, #44]	; 0x2c
   1a450:	bne	1a460 <main@@Base+0x43c4>
   1a454:	ldrb	r0, [r7, #2]!
   1a458:	cmp	r0, #32
   1a45c:	bhi	1a470 <main@@Base+0x43d4>
   1a460:	mov	r0, sl
   1a464:	mov	r2, r6
   1a468:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1a46c:	mov	r7, r0
   1a470:	cmp	r9, r7
   1a474:	beq	18d3c <main@@Base+0x2ca0>
   1a478:	mov	r2, r6
   1a47c:	mov	r6, #0
   1a480:	cmp	r7, r2
   1a484:	str	r6, [fp, #-52]	; 0xffffffcc
   1a488:	str	r6, [fp, #-56]	; 0xffffffc8
   1a48c:	str	r6, [sp, #68]	; 0x44
   1a490:	str	r6, [sp, #64]	; 0x40
   1a494:	str	r6, [fp, #-60]	; 0xffffffc4
   1a498:	beq	1a4fc <main@@Base+0x4460>
   1a49c:	sub	r0, fp, #56	; 0x38
   1a4a0:	mov	r1, r7
   1a4a4:	sub	r3, fp, #60	; 0x3c
   1a4a8:	str	r0, [sp]
   1a4ac:	mov	r0, sl
   1a4b0:	bl	392f4 <flatcc_json_parser_integer@@Base>
   1a4b4:	cmp	r0, r7
   1a4b8:	beq	1a514 <main@@Base+0x4478>
   1a4bc:	mov	r4, r0
   1a4c0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1a4c4:	cmp	r0, #0
   1a4c8:	beq	1a530 <main@@Base+0x4494>
   1a4cc:	ldr	r2, [sp, #52]	; 0x34
   1a4d0:	mov	r0, sl
   1a4d4:	mov	r1, r4
   1a4d8:	mov	r3, #8
   1a4dc:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1a4e0:	mov	r4, r0
   1a4e4:	mov	r6, #0
   1a4e8:	mov	r9, #0
   1a4ec:	ldr	r5, [sp, #48]	; 0x30
   1a4f0:	cmp	r7, r4
   1a4f4:	bne	1a594 <main@@Base+0x44f8>
   1a4f8:	b	1a54c <main@@Base+0x44b0>
   1a4fc:	mov	r4, r2
   1a500:	mov	r9, #0
   1a504:	ldr	r5, [sp, #48]	; 0x30
   1a508:	cmp	r7, r4
   1a50c:	bne	1a594 <main@@Base+0x44f8>
   1a510:	b	1a54c <main@@Base+0x44b0>
   1a514:	mov	r6, #0
   1a518:	mov	r9, #0
   1a51c:	mov	r4, r7
   1a520:	ldr	r5, [sp, #48]	; 0x30
   1a524:	cmp	r7, r4
   1a528:	bne	1a594 <main@@Base+0x44f8>
   1a52c:	b	1a54c <main@@Base+0x44b0>
   1a530:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1a534:	ldr	r9, [fp, #-52]	; 0xffffffcc
   1a538:	str	r9, [sp, #68]	; 0x44
   1a53c:	str	r6, [sp, #64]	; 0x40
   1a540:	ldr	r5, [sp, #48]	; 0x30
   1a544:	cmp	r7, r4
   1a548:	bne	1a594 <main@@Base+0x44f8>
   1a54c:	ldr	r5, [sp, #52]	; 0x34
   1a550:	add	r0, sp, #64	; 0x40
   1a554:	mov	r1, r7
   1a558:	str	r0, [sp]
   1a55c:	movw	r0, #268	; 0x10c
   1a560:	movt	r0, #6
   1a564:	add	r3, r0, #60	; 0x3c
   1a568:	mov	r0, sl
   1a56c:	mov	r2, r5
   1a570:	bl	26804 <main@@Base+0x10768>
   1a574:	mov	r4, r0
   1a578:	cmp	r0, r7
   1a57c:	cmpne	r4, r5
   1a580:	beq	21968 <main@@Base+0xb8cc>
   1a584:	ldr	r6, [sp, #64]	; 0x40
   1a588:	ldr	r9, [sp, #68]	; 0x44
   1a58c:	ldr	sl, [sp, #44]	; 0x2c
   1a590:	ldr	r5, [sp, #48]	; 0x30
   1a594:	orrs	r0, r6, r9
   1a598:	bne	1a5a8 <main@@Base+0x450c>
   1a59c:	ldrb	r0, [sl, #8]
   1a5a0:	tst	r0, #2
   1a5a4:	beq	1a5c8 <main@@Base+0x452c>
   1a5a8:	ldr	r0, [sl]
   1a5ac:	mov	r1, #19
   1a5b0:	mov	r2, #8
   1a5b4:	mov	r3, #8
   1a5b8:	bl	33604 <flatcc_builder_table_add@@Base>
   1a5bc:	cmp	r0, #0
   1a5c0:	beq	21968 <main@@Base+0xb8cc>
   1a5c4:	stm	r0, {r6, r9}
   1a5c8:	ldr	r6, [sp, #52]	; 0x34
   1a5cc:	sub	r0, r6, r4
   1a5d0:	cmp	r0, #2
   1a5d4:	bge	21770 <main@@Base+0xb6d4>
   1a5d8:	b	19970 <main@@Base+0x38d4>
   1a5dc:	beq	1bb84 <main@@Base+0x5ae8>
   1a5e0:	b	1bb94 <main@@Base+0x5af8>
   1a5e4:	ldr	r6, [sp, #52]	; 0x34
   1a5e8:	ldr	sl, [sp, #44]	; 0x2c
   1a5ec:	bne	1a5fc <main@@Base+0x4560>
   1a5f0:	ldrb	r0, [r4, #2]!
   1a5f4:	cmp	r0, #32
   1a5f8:	bhi	1a60c <main@@Base+0x4570>
   1a5fc:	mov	r0, sl
   1a600:	mov	r2, r6
   1a604:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1a608:	mov	r4, r0
   1a60c:	cmp	r7, r4
   1a610:	beq	1c464 <main@@Base+0x63c8>
   1a614:	ldr	r0, [sl]
   1a618:	bl	31d68 <flatcc_builder_start_offset_vector@@Base>
   1a61c:	cmp	r0, #0
   1a620:	bne	16fd0 <main@@Base+0xf34>
   1a624:	cmp	r4, r6
   1a628:	beq	1a66c <main@@Base+0x45d0>
   1a62c:	ldrb	r0, [r4]
   1a630:	cmp	r0, #91	; 0x5b
   1a634:	bne	1a66c <main@@Base+0x45d0>
   1a638:	add	r1, r4, #1
   1a63c:	sub	r0, r6, r1
   1a640:	cmp	r0, #2
   1a644:	blt	1b9e0 <main@@Base+0x5944>
   1a648:	ldrb	r0, [r1]
   1a64c:	cmp	r0, #32
   1a650:	bls	1b9c8 <main@@Base+0x592c>
   1a654:	ldr	r6, [sp, #52]	; 0x34
   1a658:	mov	r4, r1
   1a65c:	cmp	r4, r6
   1a660:	mov	r2, r6
   1a664:	bne	1b9fc <main@@Base+0x5960>
   1a668:	b	1ba4c <main@@Base+0x59b0>
   1a66c:	mov	r0, sl
   1a670:	mov	r1, r4
   1a674:	mov	r2, r6
   1a678:	mov	r3, #22
   1a67c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1a680:	mov	r4, r0
   1a684:	ldr	r0, [sl]
   1a688:	bl	32020 <flatcc_builder_end_offset_vector@@Base>
   1a68c:	ldr	r5, [sp, #48]	; 0x30
   1a690:	cmp	r0, #0
   1a694:	str	r0, [sp, #60]	; 0x3c
   1a698:	beq	16fd0 <main@@Base+0xf34>
   1a69c:	ldr	r0, [sl]
   1a6a0:	mov	r1, #10
   1a6a4:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   1a6a8:	cmp	r0, #0
   1a6ac:	bne	20f1c <main@@Base+0xae80>
   1a6b0:	b	16fd0 <main@@Base+0xf34>
   1a6b4:	ldr	r6, [sp, #52]	; 0x34
   1a6b8:	ldr	sl, [sp, #44]	; 0x2c
   1a6bc:	bne	1a6d0 <main@@Base+0x4634>
   1a6c0:	mov	r7, r1
   1a6c4:	ldrb	r0, [r7, #1]!
   1a6c8:	cmp	r0, #32
   1a6cc:	bhi	1a6e0 <main@@Base+0x4644>
   1a6d0:	mov	r0, sl
   1a6d4:	mov	r2, r6
   1a6d8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1a6dc:	mov	r7, r0
   1a6e0:	cmp	r7, r6
   1a6e4:	beq	1a728 <main@@Base+0x468c>
   1a6e8:	ldrb	r0, [r7]
   1a6ec:	cmp	r0, #58	; 0x3a
   1a6f0:	bne	1a728 <main@@Base+0x468c>
   1a6f4:	add	r1, r7, #1
   1a6f8:	sub	r0, r6, r1
   1a6fc:	cmp	r0, #2
   1a700:	blt	1cf3c <main@@Base+0x6ea0>
   1a704:	ldrb	r0, [r1]
   1a708:	cmp	r0, #32
   1a70c:	bls	1cf24 <main@@Base+0x6e88>
   1a710:	ldr	r6, [sp, #52]	; 0x34
   1a714:	ldr	sl, [sp, #44]	; 0x2c
   1a718:	mov	r7, r1
   1a71c:	cmp	r4, r7
   1a720:	bne	1cf54 <main@@Base+0x6eb8>
   1a724:	b	1d0c8 <main@@Base+0x702c>
   1a728:	mov	r0, sl
   1a72c:	mov	r1, r7
   1a730:	mov	r2, r6
   1a734:	mov	r3, #4
   1a738:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1a73c:	b	1cf48 <main@@Base+0x6eac>
   1a740:	ldr	r6, [sp, #52]	; 0x34
   1a744:	ldr	sl, [sp, #44]	; 0x2c
   1a748:	bne	1a75c <main@@Base+0x46c0>
   1a74c:	mov	r7, r1
   1a750:	ldrb	r0, [r7, #1]!
   1a754:	cmp	r0, #32
   1a758:	bhi	1a76c <main@@Base+0x46d0>
   1a75c:	mov	r0, sl
   1a760:	mov	r2, r6
   1a764:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1a768:	mov	r7, r0
   1a76c:	cmp	r7, r6
   1a770:	beq	1a7b4 <main@@Base+0x4718>
   1a774:	ldrb	r0, [r7]
   1a778:	cmp	r0, #58	; 0x3a
   1a77c:	bne	1a7b4 <main@@Base+0x4718>
   1a780:	add	r1, r7, #1
   1a784:	sub	r0, r6, r1
   1a788:	cmp	r0, #2
   1a78c:	blt	1d030 <main@@Base+0x6f94>
   1a790:	ldrb	r0, [r1]
   1a794:	cmp	r0, #32
   1a798:	bls	1d018 <main@@Base+0x6f7c>
   1a79c:	ldr	r6, [sp, #52]	; 0x34
   1a7a0:	ldr	sl, [sp, #44]	; 0x2c
   1a7a4:	mov	r7, r1
   1a7a8:	cmp	r4, r7
   1a7ac:	bne	1d048 <main@@Base+0x6fac>
   1a7b0:	b	1d0c8 <main@@Base+0x702c>
   1a7b4:	mov	r0, sl
   1a7b8:	mov	r1, r7
   1a7bc:	mov	r2, r6
   1a7c0:	mov	r3, #4
   1a7c4:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1a7c8:	b	1d03c <main@@Base+0x6fa0>
   1a7cc:	ldr	r6, [sp, #52]	; 0x34
   1a7d0:	ldr	sl, [sp, #44]	; 0x2c
   1a7d4:	bne	1a7e4 <main@@Base+0x4748>
   1a7d8:	ldrb	r0, [r7, #2]!
   1a7dc:	cmp	r0, #32
   1a7e0:	bhi	1a7f4 <main@@Base+0x4758>
   1a7e4:	mov	r0, sl
   1a7e8:	mov	r2, r6
   1a7ec:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1a7f0:	mov	r7, r0
   1a7f4:	cmp	r4, r7
   1a7f8:	beq	1d0c8 <main@@Base+0x702c>
   1a7fc:	mov	r2, r6
   1a800:	mov	r6, #0
   1a804:	cmp	r7, r2
   1a808:	str	r6, [fp, #-52]	; 0xffffffcc
   1a80c:	str	r6, [fp, #-56]	; 0xffffffc8
   1a810:	str	r6, [fp, #-60]	; 0xffffffc4
   1a814:	str	r6, [sp, #64]	; 0x40
   1a818:	beq	1a878 <main@@Base+0x47dc>
   1a81c:	sub	r0, fp, #56	; 0x38
   1a820:	mov	r1, r7
   1a824:	add	r3, sp, #64	; 0x40
   1a828:	mov	r8, r2
   1a82c:	str	r0, [sp]
   1a830:	mov	r0, sl
   1a834:	bl	392f4 <flatcc_json_parser_integer@@Base>
   1a838:	cmp	r0, r7
   1a83c:	beq	1a890 <main@@Base+0x47f4>
   1a840:	ldr	r2, [sp, #64]	; 0x40
   1a844:	mov	r4, r0
   1a848:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a84c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a850:	cmp	r2, #0
   1a854:	beq	1a8a4 <main@@Base+0x4808>
   1a858:	subs	r2, r0, #-2147483647	; 0x80000001
   1a85c:	sbcs	r1, r1, #0
   1a860:	bcc	1a8e0 <main@@Base+0x4844>
   1a864:	ldr	sl, [sp, #44]	; 0x2c
   1a868:	ldr	r2, [sp, #52]	; 0x34
   1a86c:	mov	r1, r4
   1a870:	mov	r3, #8
   1a874:	b	1a8c0 <main@@Base+0x4824>
   1a878:	mov	r8, r2
   1a87c:	mov	r4, r2
   1a880:	ldr	r5, [sp, #48]	; 0x30
   1a884:	cmp	r7, r4
   1a888:	bne	1c520 <main@@Base+0x6484>
   1a88c:	b	1c4e0 <main@@Base+0x6444>
   1a890:	mov	r4, r7
   1a894:	ldr	r5, [sp, #48]	; 0x30
   1a898:	cmp	r7, r4
   1a89c:	bne	1c520 <main@@Base+0x6484>
   1a8a0:	b	1c4e0 <main@@Base+0x6444>
   1a8a4:	subs	r2, r0, #-2147483648	; 0x80000000
   1a8a8:	sbcs	r1, r1, #0
   1a8ac:	bcc	1c4c4 <main@@Base+0x6428>
   1a8b0:	ldr	sl, [sp, #44]	; 0x2c
   1a8b4:	ldr	r2, [sp, #52]	; 0x34
   1a8b8:	mov	r1, r4
   1a8bc:	mov	r3, #7
   1a8c0:	mov	r0, sl
   1a8c4:	mov	r8, r2
   1a8c8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1a8cc:	mov	r4, r0
   1a8d0:	ldr	r5, [sp, #48]	; 0x30
   1a8d4:	cmp	r7, r4
   1a8d8:	bne	1c520 <main@@Base+0x6484>
   1a8dc:	b	1c4e0 <main@@Base+0x6444>
   1a8e0:	rsb	r6, r0, #0
   1a8e4:	b	1c4c8 <main@@Base+0x642c>
   1a8e8:	ldr	r6, [sp, #52]	; 0x34
   1a8ec:	ldr	sl, [sp, #44]	; 0x2c
   1a8f0:	ldr	r5, [sp, #48]	; 0x30
   1a8f4:	bne	1a908 <main@@Base+0x486c>
   1a8f8:	ldrb	r0, [r4, #2]!
   1a8fc:	cmp	r0, #32
   1a900:	mov	r7, r4
   1a904:	bhi	171f0 <main@@Base+0x1154>
   1a908:	mov	r0, sl
   1a90c:	mov	r2, r6
   1a910:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1a914:	b	171ec <main@@Base+0x1150>
   1a918:	ldr	r6, [sp, #52]	; 0x34
   1a91c:	ldr	sl, [sp, #44]	; 0x2c
   1a920:	bne	1a930 <main@@Base+0x4894>
   1a924:	ldrb	r0, [r4, #2]!
   1a928:	cmp	r0, #32
   1a92c:	bhi	1a940 <main@@Base+0x48a4>
   1a930:	mov	r0, sl
   1a934:	mov	r2, r6
   1a938:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1a93c:	mov	r4, r0
   1a940:	cmp	r4, r6
   1a944:	mov	r2, r6
   1a948:	beq	1a9a4 <main@@Base+0x4908>
   1a94c:	ldrb	r0, [r4]
   1a950:	cmp	r0, #93	; 0x5d
   1a954:	bne	1a998 <main@@Base+0x48fc>
   1a958:	ldr	r6, [sp, #52]	; 0x34
   1a95c:	ldr	sl, [sp, #44]	; 0x2c
   1a960:	add	r1, r4, #1
   1a964:	sub	r0, r6, r1
   1a968:	cmp	r0, #2
   1a96c:	blt	1e140 <main@@Base+0x80a4>
   1a970:	ldrb	r0, [r1]
   1a974:	cmp	r0, #32
   1a978:	bhi	1ca2c <main@@Base+0x6990>
   1a97c:	ldr	r6, [sp, #52]	; 0x34
   1a980:	ldr	sl, [sp, #44]	; 0x2c
   1a984:	bne	1e140 <main@@Base+0x80a4>
   1a988:	ldrb	r0, [r4, #2]!
   1a98c:	cmp	r0, #32
   1a990:	bhi	19e70 <main@@Base+0x3dd4>
   1a994:	b	1e140 <main@@Base+0x80a4>
   1a998:	ldr	r6, [sp, #52]	; 0x34
   1a99c:	ldr	sl, [sp, #44]	; 0x2c
   1a9a0:	mov	r2, r4
   1a9a4:	mov	r1, r2
   1a9a8:	mov	r0, sl
   1a9ac:	mov	r2, r6
   1a9b0:	add	r3, sp, #60	; 0x3c
   1a9b4:	bl	16f90 <main@@Base+0xef4>
   1a9b8:	mov	r4, r0
   1a9bc:	ldr	r0, [sp, #60]	; 0x3c
   1a9c0:	cmp	r0, #0
   1a9c4:	beq	16fd0 <main@@Base+0xf34>
   1a9c8:	ldr	r0, [sl]
   1a9cc:	mov	r1, #1
   1a9d0:	bl	31524 <flatcc_builder_extend_offset_vector@@Base>
   1a9d4:	cmp	r0, #0
   1a9d8:	beq	16fd0 <main@@Base+0xf34>
   1a9dc:	ldr	r1, [sp, #60]	; 0x3c
   1a9e0:	str	r1, [r0]
   1a9e4:	sub	r0, r6, r4
   1a9e8:	cmp	r0, #2
   1a9ec:	blt	1aa20 <main@@Base+0x4984>
   1a9f0:	ldrb	r0, [r4]
   1a9f4:	cmp	r0, #32
   1a9f8:	bls	1aa0c <main@@Base+0x4970>
   1a9fc:	mov	r2, r4
   1aa00:	cmp	r2, r6
   1aa04:	bne	1aa3c <main@@Base+0x49a0>
   1aa08:	b	1c9f8 <main@@Base+0x695c>
   1aa0c:	bne	1aa20 <main@@Base+0x4984>
   1aa10:	mov	r2, r4
   1aa14:	ldrb	r0, [r2, #1]!
   1aa18:	cmp	r0, #32
   1aa1c:	bhi	1aa34 <main@@Base+0x4998>
   1aa20:	mov	r0, sl
   1aa24:	mov	r1, r4
   1aa28:	mov	r2, r6
   1aa2c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1aa30:	mov	r2, r0
   1aa34:	cmp	r2, r6
   1aa38:	beq	1c9f8 <main@@Base+0x695c>
   1aa3c:	ldrb	r0, [r2]
   1aa40:	cmp	r0, #44	; 0x2c
   1aa44:	bne	1ca00 <main@@Base+0x6964>
   1aa48:	add	r1, r2, #1
   1aa4c:	sub	r0, r6, r1
   1aa50:	cmp	r0, #2
   1aa54:	blt	1aa84 <main@@Base+0x49e8>
   1aa58:	ldrb	r0, [r1]
   1aa5c:	cmp	r0, #32
   1aa60:	bls	1aa74 <main@@Base+0x49d8>
   1aa64:	mov	r2, r1
   1aa68:	cmp	r2, r6
   1aa6c:	bne	1aa9c <main@@Base+0x4a00>
   1aa70:	b	1ca44 <main@@Base+0x69a8>
   1aa74:	bne	1aa84 <main@@Base+0x49e8>
   1aa78:	ldrb	r0, [r2, #2]!
   1aa7c:	cmp	r0, #32
   1aa80:	bhi	1aa94 <main@@Base+0x49f8>
   1aa84:	mov	r0, sl
   1aa88:	mov	r2, r6
   1aa8c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1aa90:	mov	r2, r0
   1aa94:	cmp	r2, r6
   1aa98:	beq	1ca44 <main@@Base+0x69a8>
   1aa9c:	ldrb	r0, [r2]
   1aaa0:	cmp	r0, #93	; 0x5d
   1aaa4:	bne	1a9a4 <main@@Base+0x4908>
   1aaa8:	add	r1, r2, #1
   1aaac:	sub	r0, r6, r1
   1aab0:	cmp	r0, #2
   1aab4:	bge	1ca20 <main@@Base+0x6984>
   1aab8:	b	1e140 <main@@Base+0x80a4>
   1aabc:	ldr	r6, [sp, #52]	; 0x34
   1aac0:	ldr	sl, [sp, #44]	; 0x2c
   1aac4:	bne	1aad4 <main@@Base+0x4a38>
   1aac8:	ldrb	r0, [r4, #2]!
   1aacc:	cmp	r0, #32
   1aad0:	bhi	1aae4 <main@@Base+0x4a48>
   1aad4:	mov	r0, sl
   1aad8:	mov	r2, r6
   1aadc:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1aae0:	mov	r4, r0
   1aae4:	cmp	r9, r4
   1aae8:	beq	1ab4c <main@@Base+0x4ab0>
   1aaec:	ldr	r0, [sl]
   1aaf0:	mov	r1, #8
   1aaf4:	mov	r2, #8
   1aaf8:	mvn	r3, #-536870912	; 0xe0000000
   1aafc:	bl	31cdc <flatcc_builder_start_vector@@Base>
   1ab00:	cmp	r0, #0
   1ab04:	bne	16fd0 <main@@Base+0xf34>
   1ab08:	cmp	r4, r6
   1ab0c:	beq	1ab58 <main@@Base+0x4abc>
   1ab10:	ldrb	r0, [r4]
   1ab14:	cmp	r0, #91	; 0x5b
   1ab18:	bne	1ab58 <main@@Base+0x4abc>
   1ab1c:	add	r1, r4, #1
   1ab20:	sub	r0, r6, r1
   1ab24:	cmp	r0, #2
   1ab28:	blt	1c570 <main@@Base+0x64d4>
   1ab2c:	ldrb	r0, [r1]
   1ab30:	cmp	r0, #32
   1ab34:	bls	1c558 <main@@Base+0x64bc>
   1ab38:	ldr	r6, [sp, #52]	; 0x34
   1ab3c:	mov	r4, r1
   1ab40:	cmp	r4, r6
   1ab44:	bne	1c588 <main@@Base+0x64ec>
   1ab48:	b	1c5e4 <main@@Base+0x6548>
   1ab4c:	mov	r0, sl
   1ab50:	mov	r1, r9
   1ab54:	b	21754 <main@@Base+0xb6b8>
   1ab58:	mov	r0, sl
   1ab5c:	mov	r1, r4
   1ab60:	mov	r2, r6
   1ab64:	mov	r3, #22
   1ab68:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1ab6c:	mov	r4, r0
   1ab70:	ldr	r0, [sl]
   1ab74:	bl	32f5c <flatcc_builder_end_vector@@Base>
   1ab78:	ldr	r5, [sp, #48]	; 0x30
   1ab7c:	cmp	r0, #0
   1ab80:	str	r0, [sp, #60]	; 0x3c
   1ab84:	beq	16fd0 <main@@Base+0xf34>
   1ab88:	ldr	r0, [sl]
   1ab8c:	mov	r1, #32
   1ab90:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   1ab94:	cmp	r0, #0
   1ab98:	bne	20f1c <main@@Base+0xae80>
   1ab9c:	b	16fd0 <main@@Base+0xf34>
   1aba0:	ldr	r6, [sp, #52]	; 0x34
   1aba4:	ldr	sl, [sp, #44]	; 0x2c
   1aba8:	bne	1abb8 <main@@Base+0x4b1c>
   1abac:	ldrb	r0, [r4, #2]!
   1abb0:	cmp	r0, #32
   1abb4:	bhi	1abc8 <main@@Base+0x4b2c>
   1abb8:	mov	r0, sl
   1abbc:	mov	r2, r6
   1abc0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1abc4:	mov	r4, r0
   1abc8:	cmp	r7, r4
   1abcc:	beq	1c464 <main@@Base+0x63c8>
   1abd0:	cmp	r4, r6
   1abd4:	beq	1ac40 <main@@Base+0x4ba4>
   1abd8:	ldrb	r0, [r4]
   1abdc:	cmp	r0, #91	; 0x5b
   1abe0:	bne	1ac40 <main@@Base+0x4ba4>
   1abe4:	ldr	r0, [sl]
   1abe8:	mov	r1, #1
   1abec:	mov	r2, #1
   1abf0:	mvn	r3, #0
   1abf4:	bl	31cdc <flatcc_builder_start_vector@@Base>
   1abf8:	cmp	r0, #0
   1abfc:	bne	21968 <main@@Base+0xb8cc>
   1ac00:	ldrb	r0, [r4]
   1ac04:	cmp	r0, #91	; 0x5b
   1ac08:	bne	1ac9c <main@@Base+0x4c00>
   1ac0c:	ldr	r0, [sp, #52]	; 0x34
   1ac10:	add	r1, r4, #1
   1ac14:	sub	r0, r0, r1
   1ac18:	cmp	r0, #2
   1ac1c:	blt	1dcc8 <main@@Base+0x7c2c>
   1ac20:	ldrb	r0, [r1]
   1ac24:	cmp	r0, #32
   1ac28:	bls	1dcb8 <main@@Base+0x7c1c>
   1ac2c:	mov	r4, r1
   1ac30:	ldr	r6, [sp, #52]	; 0x34
   1ac34:	cmp	r4, r6
   1ac38:	bne	1dce4 <main@@Base+0x7c48>
   1ac3c:	b	1dcf4 <main@@Base+0x7c58>
   1ac40:	ldr	r0, [sl]
   1ac44:	mov	r1, #0
   1ac48:	mov	r2, #0
   1ac4c:	mov	r3, #0
   1ac50:	bl	30c9c <flatcc_builder_start_buffer@@Base>
   1ac54:	cmp	r0, #0
   1ac58:	bne	16fd0 <main@@Base+0xf34>
   1ac5c:	mov	r0, sl
   1ac60:	mov	r1, r4
   1ac64:	mov	r2, r6
   1ac68:	add	r3, sp, #60	; 0x3c
   1ac6c:	bl	16f90 <main@@Base+0xef4>
   1ac70:	ldr	r1, [sp, #60]	; 0x3c
   1ac74:	mov	r4, r0
   1ac78:	cmp	r1, #0
   1ac7c:	beq	16fd0 <main@@Base+0xf34>
   1ac80:	ldr	r0, [sl]
   1ac84:	bl	30e8c <flatcc_builder_end_buffer@@Base>
   1ac88:	ldr	r5, [sp, #48]	; 0x30
   1ac8c:	cmp	r0, #0
   1ac90:	str	r0, [sp, #60]	; 0x3c
   1ac94:	bne	1e308 <main@@Base+0x826c>
   1ac98:	b	16fd0 <main@@Base+0xf34>
   1ac9c:	ldr	r0, [sp, #44]	; 0x2c
   1aca0:	ldr	r2, [sp, #52]	; 0x34
   1aca4:	mov	r1, r4
   1aca8:	mov	r3, #22
   1acac:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1acb0:	b	1e2e4 <main@@Base+0x8248>
   1acb4:	ldr	r6, [sp, #52]	; 0x34
   1acb8:	ldr	sl, [sp, #44]	; 0x2c
   1acbc:	bne	1accc <main@@Base+0x4c30>
   1acc0:	ldrb	r0, [r4, #2]!
   1acc4:	cmp	r0, #32
   1acc8:	bhi	1acdc <main@@Base+0x4c40>
   1accc:	mov	r0, sl
   1acd0:	mov	r2, r6
   1acd4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1acd8:	mov	r4, r0
   1acdc:	cmp	r4, r6
   1ace0:	beq	1ad44 <main@@Base+0x4ca8>
   1ace4:	ldrb	r0, [r4]
   1ace8:	cmp	r0, #93	; 0x5d
   1acec:	bne	1ad3c <main@@Base+0x4ca0>
   1acf0:	ldr	r6, [sp, #52]	; 0x34
   1acf4:	ldr	sl, [sp, #44]	; 0x2c
   1acf8:	add	r1, r4, #1
   1acfc:	sub	r0, r6, r1
   1ad00:	cmp	r0, #2
   1ad04:	blt	1ad2c <main@@Base+0x4c90>
   1ad08:	ldrb	r0, [r1]
   1ad0c:	cmp	r0, #32
   1ad10:	bhi	1cc6c <main@@Base+0x6bd0>
   1ad14:	ldr	r6, [sp, #52]	; 0x34
   1ad18:	ldr	sl, [sp, #44]	; 0x2c
   1ad1c:	bne	1ad2c <main@@Base+0x4c90>
   1ad20:	ldrb	r0, [r4, #2]!
   1ad24:	cmp	r0, #32
   1ad28:	bhi	1a2b8 <main@@Base+0x421c>
   1ad2c:	mov	r0, sl
   1ad30:	mov	r2, r6
   1ad34:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1ad38:	b	1a2b4 <main@@Base+0x4218>
   1ad3c:	ldr	sl, [sp, #44]	; 0x2c
   1ad40:	mov	r6, r4
   1ad44:	mov	r0, #0
   1ad48:	mov	r1, #1
   1ad4c:	strb	r0, [fp, #-60]	; 0xffffffc4
   1ad50:	ldr	r0, [sl]
   1ad54:	bl	31188 <flatcc_builder_extend_vector@@Base>
   1ad58:	cmp	r0, #0
   1ad5c:	beq	21940 <main@@Base+0xb8a4>
   1ad60:	ldr	r5, [sp, #52]	; 0x34
   1ad64:	ldr	sl, [sp, #44]	; 0x2c
   1ad68:	mov	r7, r0
   1ad6c:	mov	r4, r6
   1ad70:	mov	r6, #0
   1ad74:	mov	r2, r5
   1ad78:	cmp	r4, r5
   1ad7c:	str	r6, [fp, #-52]	; 0xffffffcc
   1ad80:	str	r6, [fp, #-56]	; 0xffffffc8
   1ad84:	strb	r6, [fp, #-60]	; 0xffffffc4
   1ad88:	str	r6, [sp, #64]	; 0x40
   1ad8c:	beq	1ade0 <main@@Base+0x4d44>
   1ad90:	sub	r0, fp, #56	; 0x38
   1ad94:	mov	r1, r4
   1ad98:	add	r3, sp, #64	; 0x40
   1ad9c:	str	r0, [sp]
   1ada0:	mov	r0, sl
   1ada4:	bl	392f4 <flatcc_json_parser_integer@@Base>
   1ada8:	cmp	r0, r4
   1adac:	beq	1adf0 <main@@Base+0x4d54>
   1adb0:	mov	r1, r0
   1adb4:	ldr	r0, [sp, #64]	; 0x40
   1adb8:	cmp	r0, #0
   1adbc:	beq	1ae00 <main@@Base+0x4d64>
   1adc0:	mov	r0, sl
   1adc4:	mov	r2, r5
   1adc8:	mov	r3, #8
   1adcc:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1add0:	mov	r1, r0
   1add4:	cmp	r4, r1
   1add8:	bne	1ae90 <main@@Base+0x4df4>
   1addc:	b	1ae54 <main@@Base+0x4db8>
   1ade0:	mov	r1, r2
   1ade4:	cmp	r4, r1
   1ade8:	bne	1ae90 <main@@Base+0x4df4>
   1adec:	b	1ae54 <main@@Base+0x4db8>
   1adf0:	mov	r1, r4
   1adf4:	cmp	r4, r1
   1adf8:	bne	1ae90 <main@@Base+0x4df4>
   1adfc:	b	1ae54 <main@@Base+0x4db8>
   1ae00:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ae04:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1ae08:	subs	r3, r0, #256	; 0x100
   1ae0c:	sbcs	r2, r2, #0
   1ae10:	bcc	1ae3c <main@@Base+0x4da0>
   1ae14:	ldr	sl, [sp, #44]	; 0x2c
   1ae18:	ldr	r2, [sp, #52]	; 0x34
   1ae1c:	mov	r3, #7
   1ae20:	mov	r0, sl
   1ae24:	mov	r5, r2
   1ae28:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1ae2c:	mov	r1, r0
   1ae30:	cmp	r4, r1
   1ae34:	bne	1ae90 <main@@Base+0x4df4>
   1ae38:	b	1ae54 <main@@Base+0x4db8>
   1ae3c:	ldr	r5, [sp, #52]	; 0x34
   1ae40:	ldr	sl, [sp, #44]	; 0x2c
   1ae44:	mov	r6, r0
   1ae48:	strb	r0, [fp, #-60]	; 0xffffffc4
   1ae4c:	cmp	r4, r1
   1ae50:	bne	1ae90 <main@@Base+0x4df4>
   1ae54:	sub	r0, fp, #60	; 0x3c
   1ae58:	mov	r1, r4
   1ae5c:	mov	r2, r5
   1ae60:	mov	r6, r5
   1ae64:	str	r0, [sp]
   1ae68:	movw	r0, #148	; 0x94
   1ae6c:	movt	r0, #6
   1ae70:	add	r3, r0, #24
   1ae74:	mov	r0, sl
   1ae78:	bl	23a78 <main@@Base+0xd9dc>
   1ae7c:	mov	r1, r0
   1ae80:	cmp	r0, r4
   1ae84:	cmpne	r1, r6
   1ae88:	beq	21918 <main@@Base+0xb87c>
   1ae8c:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   1ae90:	sub	r0, r5, r1
   1ae94:	strb	r6, [r7]
   1ae98:	mov	r6, r5
   1ae9c:	cmp	r0, #2
   1aea0:	blt	1aed4 <main@@Base+0x4e38>
   1aea4:	ldrb	r0, [r1]
   1aea8:	cmp	r0, #32
   1aeac:	bls	1aec0 <main@@Base+0x4e24>
   1aeb0:	mov	r4, r1
   1aeb4:	cmp	r4, r6
   1aeb8:	bne	1aeec <main@@Base+0x4e50>
   1aebc:	b	1ca3c <main@@Base+0x69a0>
   1aec0:	bne	1aed4 <main@@Base+0x4e38>
   1aec4:	mov	r4, r1
   1aec8:	ldrb	r0, [r4, #1]!
   1aecc:	cmp	r0, #32
   1aed0:	bhi	1aee4 <main@@Base+0x4e48>
   1aed4:	mov	r0, sl
   1aed8:	mov	r2, r6
   1aedc:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1aee0:	mov	r4, r0
   1aee4:	cmp	r4, r6
   1aee8:	beq	1ca3c <main@@Base+0x69a0>
   1aeec:	ldrb	r0, [r4]
   1aef0:	cmp	r0, #44	; 0x2c
   1aef4:	bne	1ca50 <main@@Base+0x69b4>
   1aef8:	add	r1, r4, #1
   1aefc:	sub	r0, r6, r1
   1af00:	cmp	r0, #2
   1af04:	blt	1af34 <main@@Base+0x4e98>
   1af08:	ldrb	r0, [r1]
   1af0c:	cmp	r0, #32
   1af10:	bls	1af24 <main@@Base+0x4e88>
   1af14:	mov	r4, r1
   1af18:	cmp	r4, r6
   1af1c:	bne	1af4c <main@@Base+0x4eb0>
   1af20:	b	1ca70 <main@@Base+0x69d4>
   1af24:	bne	1af34 <main@@Base+0x4e98>
   1af28:	ldrb	r0, [r4, #2]!
   1af2c:	cmp	r0, #32
   1af30:	bhi	1af44 <main@@Base+0x4ea8>
   1af34:	mov	r0, sl
   1af38:	mov	r2, r6
   1af3c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1af40:	mov	r4, r0
   1af44:	cmp	r4, r6
   1af48:	beq	1ca70 <main@@Base+0x69d4>
   1af4c:	ldrb	r0, [r4]
   1af50:	cmp	r0, #93	; 0x5d
   1af54:	beq	1cc50 <main@@Base+0x6bb4>
   1af58:	mov	r0, #0
   1af5c:	mov	r1, #1
   1af60:	strb	r0, [fp, #-60]	; 0xffffffc4
   1af64:	ldr	r0, [sl]
   1af68:	bl	31188 <flatcc_builder_extend_vector@@Base>
   1af6c:	mov	r7, r0
   1af70:	cmp	r0, #0
   1af74:	bne	1ad70 <main@@Base+0x4cd4>
   1af78:	b	218f4 <main@@Base+0xb858>
   1af7c:	ldr	sl, [sp, #44]	; 0x2c
   1af80:	ldr	r6, [sp, #52]	; 0x34
   1af84:	mov	r1, r4
   1af88:	mov	r0, sl
   1af8c:	mov	r2, r6
   1af90:	mov	r3, #9
   1af94:	b	17828 <main@@Base+0x178c>
   1af98:	mov	r0, sl
   1af9c:	mov	r1, r6
   1afa0:	b	1afb4 <main@@Base+0x4f18>
   1afa4:	ldr	sl, [sp, #44]	; 0x2c
   1afa8:	ldr	r6, [sp, #52]	; 0x34
   1afac:	mov	r1, r2
   1afb0:	mov	r0, sl
   1afb4:	mov	r2, r6
   1afb8:	mov	r3, #10
   1afbc:	b	1b058 <main@@Base+0x4fbc>
   1afc0:	ldr	r6, [sp, #52]	; 0x34
   1afc4:	ldr	sl, [sp, #44]	; 0x2c
   1afc8:	bne	1afdc <main@@Base+0x4f40>
   1afcc:	ldrb	r0, [r2, #2]!
   1afd0:	cmp	r0, #32
   1afd4:	mov	r4, r2
   1afd8:	bhi	1b060 <main@@Base+0x4fc4>
   1afdc:	mov	r0, sl
   1afe0:	mov	r2, r6
   1afe4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1afe8:	b	1b05c <main@@Base+0x4fc0>
   1afec:	ldr	r0, [sl]
   1aff0:	mov	r1, #1
   1aff4:	bl	31188 <flatcc_builder_extend_vector@@Base>
   1aff8:	mov	r8, r0
   1affc:	cmp	r0, #0
   1b000:	beq	16fd0 <main@@Base+0xf34>
   1b004:	cmp	r4, r6
   1b008:	beq	1b048 <main@@Base+0x4fac>
   1b00c:	ldrb	r0, [r4]
   1b010:	cmp	r0, #123	; 0x7b
   1b014:	bne	1b048 <main@@Base+0x4fac>
   1b018:	add	r1, r4, #1
   1b01c:	sub	r0, r6, r1
   1b020:	cmp	r0, #2
   1b024:	blt	1b0b0 <main@@Base+0x5014>
   1b028:	ldrb	r0, [r1]
   1b02c:	cmp	r0, #32
   1b030:	bls	1b0a0 <main@@Base+0x5004>
   1b034:	mov	r4, r1
   1b038:	cmp	r4, r6
   1b03c:	mov	r2, r6
   1b040:	bne	1b0cc <main@@Base+0x5030>
   1b044:	b	1b134 <main@@Base+0x5098>
   1b048:	mov	r0, sl
   1b04c:	mov	r1, r4
   1b050:	mov	r2, r6
   1b054:	mov	r3, #21
   1b058:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1b05c:	mov	r4, r0
   1b060:	sub	r0, r6, r4
   1b064:	cmp	r0, #2
   1b068:	blt	1b8b8 <main@@Base+0x581c>
   1b06c:	ldrb	r0, [r4]
   1b070:	cmp	r0, #32
   1b074:	bls	1b088 <main@@Base+0x4fec>
   1b078:	mov	r7, r4
   1b07c:	cmp	r7, r6
   1b080:	bne	1b8d4 <main@@Base+0x5838>
   1b084:	b	1b970 <main@@Base+0x58d4>
   1b088:	bne	1b8b8 <main@@Base+0x581c>
   1b08c:	mov	r7, r4
   1b090:	ldrb	r0, [r7, #1]!
   1b094:	cmp	r0, #32
   1b098:	bls	1b8b8 <main@@Base+0x581c>
   1b09c:	b	1b8cc <main@@Base+0x5830>
   1b0a0:	bne	1b0b0 <main@@Base+0x5014>
   1b0a4:	ldrb	r0, [r4, #2]!
   1b0a8:	cmp	r0, #32
   1b0ac:	bhi	1b0c0 <main@@Base+0x5024>
   1b0b0:	mov	r0, sl
   1b0b4:	mov	r2, r6
   1b0b8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1b0bc:	mov	r4, r0
   1b0c0:	cmp	r4, r6
   1b0c4:	mov	r2, r6
   1b0c8:	beq	1b134 <main@@Base+0x5098>
   1b0cc:	ldrb	r0, [r4]
   1b0d0:	cmp	r0, #125	; 0x7d
   1b0d4:	bne	1b110 <main@@Base+0x5074>
   1b0d8:	add	r1, r4, #1
   1b0dc:	sub	r0, r6, r1
   1b0e0:	cmp	r0, #2
   1b0e4:	blt	1afdc <main@@Base+0x4f40>
   1b0e8:	ldrb	r0, [r1]
   1b0ec:	cmp	r0, #32
   1b0f0:	bhi	1b8a0 <main@@Base+0x5804>
   1b0f4:	ldr	r6, [sp, #52]	; 0x34
   1b0f8:	ldr	sl, [sp, #44]	; 0x2c
   1b0fc:	bne	1afdc <main@@Base+0x4f40>
   1b100:	ldrb	r0, [r4, #2]!
   1b104:	cmp	r0, #32
   1b108:	bls	1afdc <main@@Base+0x4f40>
   1b10c:	b	1b060 <main@@Base+0x4fc4>
   1b110:	mov	r2, r4
   1b114:	b	1b134 <main@@Base+0x5098>
   1b118:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1b11c:	ldr	r6, [sp, #52]	; 0x34
   1b120:	ldr	sl, [sp, #44]	; 0x2c
   1b124:	str	r4, [fp, #-60]	; 0xffffffc4
   1b128:	cmp	r7, r1
   1b12c:	bne	1b7a0 <main@@Base+0x5704>
   1b130:	b	1b764 <main@@Base+0x56c8>
   1b134:	cmp	r2, r6
   1b138:	mov	r9, r6
   1b13c:	beq	1b190 <main@@Base+0x50f4>
   1b140:	ldrb	r0, [r2]
   1b144:	cmp	r0, #46	; 0x2e
   1b148:	beq	1b164 <main@@Base+0x50c8>
   1b14c:	cmp	r0, #34	; 0x22
   1b150:	bne	1b180 <main@@Base+0x50e4>
   1b154:	ldr	r0, [sp, #40]	; 0x28
   1b158:	mov	r1, #0
   1b15c:	add	r9, r2, #1
   1b160:	b	1b18c <main@@Base+0x50f0>
   1b164:	mov	r1, r2
   1b168:	mov	r0, sl
   1b16c:	mov	r2, r6
   1b170:	mov	r3, #5
   1b174:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1b178:	mov	r9, r0
   1b17c:	b	1b190 <main@@Base+0x50f4>
   1b180:	ldr	r0, [sp, #40]	; 0x28
   1b184:	mov	r1, #1
   1b188:	mov	r9, r2
   1b18c:	str	r1, [r0]
   1b190:	sub	lr, r6, r9
   1b194:	mov	r0, #8
   1b198:	cmp	lr, #8
   1b19c:	movcc	r0, lr
   1b1a0:	and	r0, r0, #15
   1b1a4:	sub	r7, r0, #1
   1b1a8:	cmp	r7, #7
   1b1ac:	bhi	1b6c0 <main@@Base+0x5624>
   1b1b0:	add	r4, pc, #32
   1b1b4:	mov	r1, #0
   1b1b8:	mov	ip, #0
   1b1bc:	mov	sl, #0
   1b1c0:	mov	r6, #0
   1b1c4:	mov	r3, #0
   1b1c8:	mov	r5, #0
   1b1cc:	mov	r2, #0
   1b1d0:	mov	r0, #0
   1b1d4:	ldr	pc, [r4, r7, lsl #2]
   1b1d8:	andeq	fp, r1, ip, lsr r2
   1b1dc:	andeq	fp, r1, r4, lsr r2
   1b1e0:	andeq	fp, r1, ip, lsr #4
   1b1e4:	andeq	fp, r1, r4, lsr #4
   1b1e8:	andeq	fp, r1, r8, lsl r2
   1b1ec:	andeq	fp, r1, ip, lsl #4
   1b1f0:	strdeq	fp, [r1], -ip
   1b1f4:	strdeq	fp, [r1], -r8
   1b1f8:	ldrb	ip, [r9, #7]
   1b1fc:	ldrb	r0, [r9, #6]
   1b200:	mov	sl, r1
   1b204:	orr	r0, ip, r0, lsl #8
   1b208:	mov	r1, r0
   1b20c:	ldrb	r0, [r9, #5]
   1b210:	mov	r6, sl
   1b214:	orr	r1, r1, r0, lsl #16
   1b218:	ldrb	r0, [r9, #4]
   1b21c:	mov	r3, r6
   1b220:	orr	r1, r1, r0, lsl #24
   1b224:	ldrb	r0, [r9, #3]
   1b228:	orr	r5, r0, r3
   1b22c:	ldrb	r0, [r9, #2]
   1b230:	orr	r2, r5, r0, lsl #8
   1b234:	ldrb	r0, [r9, #1]
   1b238:	orr	r0, r2, r0, lsl #16
   1b23c:	ldrb	r2, [r9]
   1b240:	movw	r3, #0
   1b244:	movt	r3, #26980	; 0x6964
   1b248:	orr	r0, r0, r2, lsl #24
   1b24c:	mov	r2, r0
   1b250:	bfc	r2, #0, #16
   1b254:	teq	r2, r3
   1b258:	bne	1b2b8 <main@@Base+0x521c>
   1b25c:	ldr	r6, [sp, #52]	; 0x34
   1b260:	ldr	sl, [sp, #44]	; 0x2c
   1b264:	cmp	lr, #3
   1b268:	mov	r7, r9
   1b26c:	blt	1b504 <main@@Base+0x5468>
   1b270:	ldr	r2, [sp, #40]	; 0x28
   1b274:	mov	r1, r9
   1b278:	ldrb	r0, [r1, #2]!
   1b27c:	ldr	r2, [r2]
   1b280:	cmp	r2, #0
   1b284:	beq	1b338 <main@@Base+0x529c>
   1b288:	cmp	r0, #33	; 0x21
   1b28c:	bcc	1b29c <main@@Base+0x5200>
   1b290:	cmp	r0, #58	; 0x3a
   1b294:	mov	r7, r9
   1b298:	bne	1b504 <main@@Base+0x5468>
   1b29c:	ldr	r0, [sp, #40]	; 0x28
   1b2a0:	mov	r2, #0
   1b2a4:	str	r2, [r0]
   1b2a8:	sub	r0, r6, r1
   1b2ac:	cmp	r0, #2
   1b2b0:	bge	1b354 <main@@Base+0x52b8>
   1b2b4:	b	1b3d4 <main@@Base+0x5338>
   1b2b8:	movw	r2, #25445	; 0x6365
   1b2bc:	ldr	r6, [sp, #52]	; 0x34
   1b2c0:	ldr	sl, [sp, #44]	; 0x2c
   1b2c4:	movt	r2, #24942	; 0x616e
   1b2c8:	eor	r1, r1, r2
   1b2cc:	movw	r2, #29556	; 0x7374
   1b2d0:	movt	r2, #25705	; 0x6469
   1b2d4:	eor	r0, r0, r2
   1b2d8:	orrs	r0, r1, r0
   1b2dc:	bne	1b6c0 <main@@Base+0x5624>
   1b2e0:	cmp	lr, #9
   1b2e4:	mov	r7, r9
   1b2e8:	blt	1b658 <main@@Base+0x55bc>
   1b2ec:	ldr	r2, [sp, #40]	; 0x28
   1b2f0:	mov	r1, r9
   1b2f4:	ldrb	r0, [r1, #8]!
   1b2f8:	ldr	r2, [r2]
   1b2fc:	cmp	r2, #0
   1b300:	beq	1b378 <main@@Base+0x52dc>
   1b304:	cmp	r0, #33	; 0x21
   1b308:	bcc	1b318 <main@@Base+0x527c>
   1b30c:	cmp	r0, #58	; 0x3a
   1b310:	mov	r7, r9
   1b314:	bne	1b658 <main@@Base+0x55bc>
   1b318:	ldr	r0, [sp, #40]	; 0x28
   1b31c:	mov	r2, #0
   1b320:	str	r2, [r0]
   1b324:	ldr	r4, [sp, #52]	; 0x34
   1b328:	sub	r0, r4, r1
   1b32c:	cmp	r0, #2
   1b330:	bge	1b398 <main@@Base+0x52fc>
   1b334:	b	1b45c <main@@Base+0x53c0>
   1b338:	cmp	r0, #34	; 0x22
   1b33c:	mov	r7, r9
   1b340:	bne	1b504 <main@@Base+0x5468>
   1b344:	add	r1, r9, #3
   1b348:	sub	r0, r6, r1
   1b34c:	cmp	r0, #2
   1b350:	blt	1b3d4 <main@@Base+0x5338>
   1b354:	ldrb	r0, [r1]
   1b358:	cmp	r0, #32
   1b35c:	bls	1b3b8 <main@@Base+0x531c>
   1b360:	ldr	r6, [sp, #52]	; 0x34
   1b364:	ldr	sl, [sp, #44]	; 0x2c
   1b368:	mov	r7, r1
   1b36c:	cmp	r7, r6
   1b370:	bne	1b3ec <main@@Base+0x5350>
   1b374:	b	1b42c <main@@Base+0x5390>
   1b378:	cmp	r0, #34	; 0x22
   1b37c:	mov	r7, r9
   1b380:	bne	1b658 <main@@Base+0x55bc>
   1b384:	add	r1, r9, #9
   1b388:	ldr	r4, [sp, #52]	; 0x34
   1b38c:	sub	r0, r4, r1
   1b390:	cmp	r0, #2
   1b394:	blt	1b45c <main@@Base+0x53c0>
   1b398:	ldrb	r0, [r1]
   1b39c:	cmp	r0, #32
   1b3a0:	bls	1b444 <main@@Base+0x53a8>
   1b3a4:	ldr	r4, [sp, #52]	; 0x34
   1b3a8:	mov	r7, r1
   1b3ac:	cmp	r7, r4
   1b3b0:	bne	1b474 <main@@Base+0x53d8>
   1b3b4:	b	1b4bc <main@@Base+0x5420>
   1b3b8:	ldr	r6, [sp, #52]	; 0x34
   1b3bc:	ldr	sl, [sp, #44]	; 0x2c
   1b3c0:	bne	1b3d4 <main@@Base+0x5338>
   1b3c4:	mov	r7, r1
   1b3c8:	ldrb	r0, [r7, #1]!
   1b3cc:	cmp	r0, #32
   1b3d0:	bhi	1b3e4 <main@@Base+0x5348>
   1b3d4:	mov	r0, sl
   1b3d8:	mov	r2, r6
   1b3dc:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1b3e0:	mov	r7, r0
   1b3e4:	cmp	r7, r6
   1b3e8:	beq	1b42c <main@@Base+0x5390>
   1b3ec:	ldrb	r0, [r7]
   1b3f0:	cmp	r0, #58	; 0x3a
   1b3f4:	bne	1b42c <main@@Base+0x5390>
   1b3f8:	add	r1, r7, #1
   1b3fc:	sub	r0, r6, r1
   1b400:	cmp	r0, #2
   1b404:	blt	1b4f4 <main@@Base+0x5458>
   1b408:	ldrb	r0, [r1]
   1b40c:	cmp	r0, #32
   1b410:	bls	1b4dc <main@@Base+0x5440>
   1b414:	ldr	r6, [sp, #52]	; 0x34
   1b418:	ldr	sl, [sp, #44]	; 0x2c
   1b41c:	mov	r7, r1
   1b420:	cmp	r9, r7
   1b424:	bne	1b50c <main@@Base+0x5470>
   1b428:	b	1b6c0 <main@@Base+0x5624>
   1b42c:	mov	r0, sl
   1b430:	mov	r1, r7
   1b434:	mov	r2, r6
   1b438:	mov	r3, #4
   1b43c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1b440:	b	1b500 <main@@Base+0x5464>
   1b444:	ldr	r4, [sp, #52]	; 0x34
   1b448:	bne	1b45c <main@@Base+0x53c0>
   1b44c:	mov	r7, r1
   1b450:	ldrb	r0, [r7, #1]!
   1b454:	cmp	r0, #32
   1b458:	bhi	1b46c <main@@Base+0x53d0>
   1b45c:	ldr	r0, [sp, #44]	; 0x2c
   1b460:	mov	r2, r4
   1b464:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1b468:	mov	r7, r0
   1b46c:	cmp	r7, r4
   1b470:	beq	1b4bc <main@@Base+0x5420>
   1b474:	ldrb	r0, [r7]
   1b478:	cmp	r0, #58	; 0x3a
   1b47c:	bne	1b4bc <main@@Base+0x5420>
   1b480:	ldr	r6, [sp, #52]	; 0x34
   1b484:	ldr	sl, [sp, #44]	; 0x2c
   1b488:	add	r1, r7, #1
   1b48c:	sub	r0, r6, r1
   1b490:	cmp	r0, #2
   1b494:	blt	1b648 <main@@Base+0x55ac>
   1b498:	ldrb	r0, [r1]
   1b49c:	cmp	r0, #32
   1b4a0:	bls	1b630 <main@@Base+0x5594>
   1b4a4:	ldr	r6, [sp, #52]	; 0x34
   1b4a8:	ldr	sl, [sp, #44]	; 0x2c
   1b4ac:	mov	r7, r1
   1b4b0:	cmp	r9, r7
   1b4b4:	bne	1b660 <main@@Base+0x55c4>
   1b4b8:	b	1b6c0 <main@@Base+0x5624>
   1b4bc:	ldr	sl, [sp, #44]	; 0x2c
   1b4c0:	ldr	r6, [sp, #52]	; 0x34
   1b4c4:	mov	r1, r7
   1b4c8:	mov	r3, #4
   1b4cc:	mov	r0, sl
   1b4d0:	mov	r2, r6
   1b4d4:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1b4d8:	b	1b654 <main@@Base+0x55b8>
   1b4dc:	ldr	r6, [sp, #52]	; 0x34
   1b4e0:	ldr	sl, [sp, #44]	; 0x2c
   1b4e4:	bne	1b4f4 <main@@Base+0x5458>
   1b4e8:	ldrb	r0, [r7, #2]!
   1b4ec:	cmp	r0, #32
   1b4f0:	bhi	1b504 <main@@Base+0x5468>
   1b4f4:	mov	r0, sl
   1b4f8:	mov	r2, r6
   1b4fc:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1b500:	mov	r7, r0
   1b504:	cmp	r9, r7
   1b508:	beq	1b6c0 <main@@Base+0x5624>
   1b50c:	mov	r4, #0
   1b510:	cmp	r7, r6
   1b514:	str	r4, [fp, #-52]	; 0xffffffcc
   1b518:	str	r4, [fp, #-56]	; 0xffffffc8
   1b51c:	str	r4, [fp, #-60]	; 0xffffffc4
   1b520:	str	r4, [sp, #64]	; 0x40
   1b524:	beq	1b57c <main@@Base+0x54e0>
   1b528:	sub	r0, fp, #56	; 0x38
   1b52c:	mov	r1, r7
   1b530:	mov	r2, r6
   1b534:	add	r3, sp, #64	; 0x40
   1b538:	str	r0, [sp]
   1b53c:	mov	r0, sl
   1b540:	bl	392f4 <flatcc_json_parser_integer@@Base>
   1b544:	cmp	r0, r7
   1b548:	beq	1b58c <main@@Base+0x54f0>
   1b54c:	mov	r1, r0
   1b550:	ldr	r0, [sp, #64]	; 0x40
   1b554:	cmp	r0, #0
   1b558:	beq	1b59c <main@@Base+0x5500>
   1b55c:	mov	r0, sl
   1b560:	mov	r2, r6
   1b564:	mov	r3, #8
   1b568:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1b56c:	mov	r1, r0
   1b570:	cmp	r7, r1
   1b574:	bne	1b61c <main@@Base+0x5580>
   1b578:	b	1b5e8 <main@@Base+0x554c>
   1b57c:	mov	r1, r6
   1b580:	cmp	r7, r1
   1b584:	bne	1b61c <main@@Base+0x5580>
   1b588:	b	1b5e8 <main@@Base+0x554c>
   1b58c:	mov	r1, r7
   1b590:	cmp	r7, r1
   1b594:	bne	1b61c <main@@Base+0x5580>
   1b598:	b	1b5e8 <main@@Base+0x554c>
   1b59c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b5a0:	cmp	r0, #0
   1b5a4:	beq	1b5d0 <main@@Base+0x5534>
   1b5a8:	ldr	sl, [sp, #44]	; 0x2c
   1b5ac:	ldr	r6, [sp, #52]	; 0x34
   1b5b0:	mov	r3, #7
   1b5b4:	mov	r0, sl
   1b5b8:	mov	r2, r6
   1b5bc:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1b5c0:	mov	r1, r0
   1b5c4:	cmp	r7, r1
   1b5c8:	bne	1b61c <main@@Base+0x5580>
   1b5cc:	b	1b5e8 <main@@Base+0x554c>
   1b5d0:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1b5d4:	ldr	r6, [sp, #52]	; 0x34
   1b5d8:	ldr	sl, [sp, #44]	; 0x2c
   1b5dc:	str	r4, [fp, #-60]	; 0xffffffc4
   1b5e0:	cmp	r7, r1
   1b5e4:	bne	1b61c <main@@Base+0x5580>
   1b5e8:	movw	r3, #628	; 0x274
   1b5ec:	sub	r0, fp, #60	; 0x3c
   1b5f0:	mov	r1, r7
   1b5f4:	mov	r2, r6
   1b5f8:	str	r0, [sp]
   1b5fc:	mov	r0, sl
   1b600:	movt	r3, #6
   1b604:	bl	265c4 <main@@Base+0x10528>
   1b608:	mov	r1, r0
   1b60c:	cmp	r0, r7
   1b610:	cmpne	r1, r6
   1b614:	beq	1b848 <main@@Base+0x57ac>
   1b618:	ldr	r4, [fp, #-60]	; 0xffffffc4
   1b61c:	str	r4, [r8]
   1b620:	sub	r0, r6, r1
   1b624:	cmp	r0, #2
   1b628:	blt	1b7b0 <main@@Base+0x5714>
   1b62c:	b	1b6e0 <main@@Base+0x5644>
   1b630:	ldr	r6, [sp, #52]	; 0x34
   1b634:	ldr	sl, [sp, #44]	; 0x2c
   1b638:	bne	1b648 <main@@Base+0x55ac>
   1b63c:	ldrb	r0, [r7, #2]!
   1b640:	cmp	r0, #32
   1b644:	bhi	1b658 <main@@Base+0x55bc>
   1b648:	mov	r0, sl
   1b64c:	mov	r2, r6
   1b650:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1b654:	mov	r7, r0
   1b658:	cmp	r9, r7
   1b65c:	beq	1b6c0 <main@@Base+0x5624>
   1b660:	mov	r4, #0
   1b664:	cmp	r7, r6
   1b668:	str	r4, [fp, #-52]	; 0xffffffcc
   1b66c:	str	r4, [fp, #-56]	; 0xffffffc8
   1b670:	str	r4, [fp, #-60]	; 0xffffffc4
   1b674:	str	r4, [sp, #64]	; 0x40
   1b678:	beq	1b714 <main@@Base+0x5678>
   1b67c:	sub	r0, fp, #56	; 0x38
   1b680:	mov	r1, r7
   1b684:	mov	r2, r6
   1b688:	add	r3, sp, #64	; 0x40
   1b68c:	str	r0, [sp]
   1b690:	mov	r0, sl
   1b694:	bl	392f4 <flatcc_json_parser_integer@@Base>
   1b698:	cmp	r0, r7
   1b69c:	beq	1b724 <main@@Base+0x5688>
   1b6a0:	mov	r1, r0
   1b6a4:	ldr	r0, [sp, #64]	; 0x40
   1b6a8:	cmp	r0, #0
   1b6ac:	beq	1b734 <main@@Base+0x5698>
   1b6b0:	ldr	sl, [sp, #44]	; 0x2c
   1b6b4:	ldr	r6, [sp, #52]	; 0x34
   1b6b8:	mov	r3, #8
   1b6bc:	b	1b74c <main@@Base+0x56b0>
   1b6c0:	mov	r0, sl
   1b6c4:	mov	r1, r9
   1b6c8:	mov	r2, r6
   1b6cc:	bl	376d0 <flatcc_json_parser_unmatched_symbol@@Base>
   1b6d0:	mov	r1, r0
   1b6d4:	sub	r0, r6, r1
   1b6d8:	cmp	r0, #2
   1b6dc:	blt	1b7b0 <main@@Base+0x5714>
   1b6e0:	ldrb	r0, [r1]
   1b6e4:	cmp	r0, #32
   1b6e8:	bls	1b6fc <main@@Base+0x5660>
   1b6ec:	mov	r2, r1
   1b6f0:	cmp	r2, r6
   1b6f4:	bne	1b7c8 <main@@Base+0x572c>
   1b6f8:	b	1b860 <main@@Base+0x57c4>
   1b6fc:	bne	1b7b0 <main@@Base+0x5714>
   1b700:	mov	r2, r1
   1b704:	ldrb	r0, [r2, #1]!
   1b708:	cmp	r0, #32
   1b70c:	bls	1b7b0 <main@@Base+0x5714>
   1b710:	b	1b7c0 <main@@Base+0x5724>
   1b714:	mov	r1, r6
   1b718:	cmp	r7, r1
   1b71c:	bne	1b7a0 <main@@Base+0x5704>
   1b720:	b	1b764 <main@@Base+0x56c8>
   1b724:	mov	r1, r7
   1b728:	cmp	r7, r1
   1b72c:	bne	1b7a0 <main@@Base+0x5704>
   1b730:	b	1b764 <main@@Base+0x56c8>
   1b734:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b738:	cmp	r0, #0
   1b73c:	beq	1b118 <main@@Base+0x507c>
   1b740:	ldr	sl, [sp, #44]	; 0x2c
   1b744:	ldr	r6, [sp, #52]	; 0x34
   1b748:	mov	r3, #7
   1b74c:	mov	r0, sl
   1b750:	mov	r2, r6
   1b754:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1b758:	mov	r1, r0
   1b75c:	cmp	r7, r1
   1b760:	bne	1b7a0 <main@@Base+0x5704>
   1b764:	sub	r0, fp, #60	; 0x3c
   1b768:	mov	r1, r7
   1b76c:	mov	r2, r6
   1b770:	str	r0, [sp]
   1b774:	movw	r0, #628	; 0x274
   1b778:	movt	r0, #6
   1b77c:	add	r3, r0, #12
   1b780:	mov	r0, sl
   1b784:	bl	265c4 <main@@Base+0x10528>
   1b788:	mov	r1, r0
   1b78c:	cmp	r0, r7
   1b790:	cmpne	r1, r6
   1b794:	beq	1b848 <main@@Base+0x57ac>
   1b798:	ldr	r4, [fp, #-60]	; 0xffffffc4
   1b79c:	ldr	sl, [sp, #44]	; 0x2c
   1b7a0:	str	r4, [r8, #4]
   1b7a4:	sub	r0, r6, r1
   1b7a8:	cmp	r0, #2
   1b7ac:	bge	1b6e0 <main@@Base+0x5644>
   1b7b0:	mov	r0, sl
   1b7b4:	mov	r2, r6
   1b7b8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1b7bc:	mov	r2, r0
   1b7c0:	cmp	r2, r6
   1b7c4:	beq	1b860 <main@@Base+0x57c4>
   1b7c8:	ldrb	r0, [r2]
   1b7cc:	cmp	r0, #44	; 0x2c
   1b7d0:	bne	1b874 <main@@Base+0x57d8>
   1b7d4:	add	r1, r2, #1
   1b7d8:	sub	r0, r6, r1
   1b7dc:	cmp	r0, #2
   1b7e0:	blt	1b810 <main@@Base+0x5774>
   1b7e4:	ldrb	r0, [r1]
   1b7e8:	cmp	r0, #32
   1b7ec:	bls	1b800 <main@@Base+0x5764>
   1b7f0:	mov	r2, r1
   1b7f4:	cmp	r2, r6
   1b7f8:	bne	1b828 <main@@Base+0x578c>
   1b7fc:	b	1af98 <main@@Base+0x4efc>
   1b800:	bne	1b810 <main@@Base+0x5774>
   1b804:	ldrb	r0, [r2, #2]!
   1b808:	cmp	r0, #32
   1b80c:	bhi	1b820 <main@@Base+0x5784>
   1b810:	mov	r0, sl
   1b814:	mov	r2, r6
   1b818:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1b81c:	mov	r2, r0
   1b820:	cmp	r2, r6
   1b824:	beq	1af98 <main@@Base+0x4efc>
   1b828:	ldrb	r0, [r2]
   1b82c:	cmp	r0, #125	; 0x7d
   1b830:	bne	1b134 <main@@Base+0x5098>
   1b834:	add	r1, r2, #1
   1b838:	sub	r0, r6, r1
   1b83c:	cmp	r0, #2
   1b840:	blt	1afdc <main@@Base+0x4f40>
   1b844:	b	1b894 <main@@Base+0x57f8>
   1b848:	ldr	sl, [sp, #44]	; 0x2c
   1b84c:	ldr	r6, [sp, #52]	; 0x34
   1b850:	mov	r3, #33	; 0x21
   1b854:	mov	r0, sl
   1b858:	mov	r2, r6
   1b85c:	b	1b058 <main@@Base+0x4fbc>
   1b860:	mov	r4, r6
   1b864:	sub	r0, r6, r4
   1b868:	cmp	r0, #2
   1b86c:	bge	1b06c <main@@Base+0x4fd0>
   1b870:	b	1b8b8 <main@@Base+0x581c>
   1b874:	cmp	r0, #125	; 0x7d
   1b878:	bne	1afa4 <main@@Base+0x4f08>
   1b87c:	ldr	r6, [sp, #52]	; 0x34
   1b880:	ldr	sl, [sp, #44]	; 0x2c
   1b884:	add	r1, r2, #1
   1b888:	sub	r0, r6, r1
   1b88c:	cmp	r0, #2
   1b890:	blt	1afdc <main@@Base+0x4f40>
   1b894:	ldrb	r0, [r1]
   1b898:	cmp	r0, #32
   1b89c:	bls	1afc0 <main@@Base+0x4f24>
   1b8a0:	ldr	r6, [sp, #52]	; 0x34
   1b8a4:	ldr	sl, [sp, #44]	; 0x2c
   1b8a8:	mov	r4, r1
   1b8ac:	sub	r0, r6, r4
   1b8b0:	cmp	r0, #2
   1b8b4:	bge	1b06c <main@@Base+0x4fd0>
   1b8b8:	mov	r0, sl
   1b8bc:	mov	r1, r4
   1b8c0:	mov	r2, r6
   1b8c4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1b8c8:	mov	r7, r0
   1b8cc:	cmp	r7, r6
   1b8d0:	beq	1b970 <main@@Base+0x58d4>
   1b8d4:	ldrb	r0, [r7]
   1b8d8:	cmp	r0, #44	; 0x2c
   1b8dc:	bne	1b978 <main@@Base+0x58dc>
   1b8e0:	add	r1, r7, #1
   1b8e4:	sub	r0, r6, r1
   1b8e8:	cmp	r0, #2
   1b8ec:	blt	1b920 <main@@Base+0x5884>
   1b8f0:	ldrb	r0, [r1]
   1b8f4:	cmp	r0, #32
   1b8f8:	bls	1b90c <main@@Base+0x5870>
   1b8fc:	mov	r4, r1
   1b900:	cmp	r4, r6
   1b904:	bne	1b938 <main@@Base+0x589c>
   1b908:	b	1b9bc <main@@Base+0x5920>
   1b90c:	bne	1b920 <main@@Base+0x5884>
   1b910:	ldrb	r0, [r7, #2]!
   1b914:	cmp	r0, #32
   1b918:	mov	r4, r7
   1b91c:	bhi	1b930 <main@@Base+0x5894>
   1b920:	mov	r0, sl
   1b924:	mov	r2, r6
   1b928:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1b92c:	mov	r4, r0
   1b930:	cmp	r4, r6
   1b934:	beq	1b9bc <main@@Base+0x5920>
   1b938:	ldrb	r0, [r4]
   1b93c:	cmp	r0, #93	; 0x5d
   1b940:	bne	1afec <main@@Base+0x4f50>
   1b944:	add	r1, r4, #1
   1b948:	sub	r0, r6, r1
   1b94c:	cmp	r0, #2
   1b950:	blt	1e0c0 <main@@Base+0x8024>
   1b954:	ldrb	r0, [r1]
   1b958:	cmp	r0, #32
   1b95c:	bls	1e0a4 <main@@Base+0x8008>
   1b960:	ldr	r6, [sp, #52]	; 0x34
   1b964:	ldr	sl, [sp, #44]	; 0x2c
   1b968:	mov	r7, r1
   1b96c:	b	19724 <main@@Base+0x3688>
   1b970:	mov	r7, r6
   1b974:	b	19724 <main@@Base+0x3688>
   1b978:	cmp	r0, #93	; 0x5d
   1b97c:	bne	1cc74 <main@@Base+0x6bd8>
   1b980:	ldr	r6, [sp, #52]	; 0x34
   1b984:	ldr	sl, [sp, #44]	; 0x2c
   1b988:	add	r1, r7, #1
   1b98c:	sub	r0, r6, r1
   1b990:	cmp	r0, #2
   1b994:	bge	1a0f0 <main@@Base+0x4054>
   1b998:	b	1e0c0 <main@@Base+0x8024>
   1b99c:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1b9a0:	ldr	r8, [sp, #52]	; 0x34
   1b9a4:	ldr	sl, [sp, #44]	; 0x2c
   1b9a8:	str	r6, [fp, #-60]	; 0xffffffc4
   1b9ac:	ldr	r5, [sp, #48]	; 0x30
   1b9b0:	cmp	r7, r4
   1b9b4:	bne	1a428 <main@@Base+0x438c>
   1b9b8:	b	1a3e4 <main@@Base+0x4348>
   1b9bc:	mov	r0, sl
   1b9c0:	mov	r1, r6
   1b9c4:	b	1cc84 <main@@Base+0x6be8>
   1b9c8:	ldr	r6, [sp, #52]	; 0x34
   1b9cc:	ldr	sl, [sp, #44]	; 0x2c
   1b9d0:	bne	1b9e0 <main@@Base+0x5944>
   1b9d4:	ldrb	r0, [r4, #2]!
   1b9d8:	cmp	r0, #32
   1b9dc:	bhi	1b9f0 <main@@Base+0x5954>
   1b9e0:	mov	r0, sl
   1b9e4:	mov	r2, r6
   1b9e8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1b9ec:	mov	r4, r0
   1b9f0:	cmp	r4, r6
   1b9f4:	mov	r2, r6
   1b9f8:	beq	1ba4c <main@@Base+0x59b0>
   1b9fc:	ldrb	r0, [r4]
   1ba00:	cmp	r0, #93	; 0x5d
   1ba04:	bne	1ba48 <main@@Base+0x59ac>
   1ba08:	ldr	r6, [sp, #52]	; 0x34
   1ba0c:	ldr	sl, [sp, #44]	; 0x2c
   1ba10:	add	r1, r4, #1
   1ba14:	sub	r0, r6, r1
   1ba18:	cmp	r0, #2
   1ba1c:	blt	1e33c <main@@Base+0x82a0>
   1ba20:	ldrb	r0, [r1]
   1ba24:	cmp	r0, #32
   1ba28:	bhi	1dba0 <main@@Base+0x7b04>
   1ba2c:	ldr	r6, [sp, #52]	; 0x34
   1ba30:	ldr	sl, [sp, #44]	; 0x2c
   1ba34:	bne	1e33c <main@@Base+0x82a0>
   1ba38:	ldrb	r0, [r4, #2]!
   1ba3c:	cmp	r0, #32
   1ba40:	bhi	1a684 <main@@Base+0x45e8>
   1ba44:	b	1e33c <main@@Base+0x82a0>
   1ba48:	mov	r2, r4
   1ba4c:	ldr	r6, [sp, #52]	; 0x34
   1ba50:	ldr	sl, [sp, #44]	; 0x2c
   1ba54:	mov	r1, r2
   1ba58:	mov	r0, sl
   1ba5c:	mov	r2, r6
   1ba60:	add	r3, sp, #60	; 0x3c
   1ba64:	bl	398b4 <flatcc_json_parser_build_string@@Base>
   1ba68:	mov	r4, r0
   1ba6c:	ldr	r0, [sp, #60]	; 0x3c
   1ba70:	cmp	r0, #0
   1ba74:	beq	16fd0 <main@@Base+0xf34>
   1ba78:	ldr	r0, [sl]
   1ba7c:	mov	r1, #1
   1ba80:	bl	31524 <flatcc_builder_extend_offset_vector@@Base>
   1ba84:	cmp	r0, #0
   1ba88:	beq	16fd0 <main@@Base+0xf34>
   1ba8c:	ldr	r1, [sp, #60]	; 0x3c
   1ba90:	str	r1, [r0]
   1ba94:	sub	r0, r6, r4
   1ba98:	cmp	r0, #2
   1ba9c:	blt	1bad0 <main@@Base+0x5a34>
   1baa0:	ldrb	r0, [r4]
   1baa4:	cmp	r0, #32
   1baa8:	bls	1babc <main@@Base+0x5a20>
   1baac:	mov	r2, r4
   1bab0:	cmp	r2, r6
   1bab4:	bne	1baec <main@@Base+0x5a50>
   1bab8:	b	1d198 <main@@Base+0x70fc>
   1babc:	bne	1bad0 <main@@Base+0x5a34>
   1bac0:	mov	r2, r4
   1bac4:	ldrb	r0, [r2, #1]!
   1bac8:	cmp	r0, #32
   1bacc:	bhi	1bae4 <main@@Base+0x5a48>
   1bad0:	mov	r0, sl
   1bad4:	mov	r1, r4
   1bad8:	mov	r2, r6
   1badc:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1bae0:	mov	r2, r0
   1bae4:	cmp	r2, r6
   1bae8:	beq	1d198 <main@@Base+0x70fc>
   1baec:	ldrb	r0, [r2]
   1baf0:	cmp	r0, #44	; 0x2c
   1baf4:	bne	1db74 <main@@Base+0x7ad8>
   1baf8:	add	r1, r2, #1
   1bafc:	sub	r0, r6, r1
   1bb00:	cmp	r0, #2
   1bb04:	blt	1bb34 <main@@Base+0x5a98>
   1bb08:	ldrb	r0, [r1]
   1bb0c:	cmp	r0, #32
   1bb10:	bls	1bb24 <main@@Base+0x5a88>
   1bb14:	mov	r2, r1
   1bb18:	cmp	r2, r6
   1bb1c:	bne	1bb4c <main@@Base+0x5ab0>
   1bb20:	b	1dbd4 <main@@Base+0x7b38>
   1bb24:	bne	1bb34 <main@@Base+0x5a98>
   1bb28:	ldrb	r0, [r2, #2]!
   1bb2c:	cmp	r0, #32
   1bb30:	bhi	1bb44 <main@@Base+0x5aa8>
   1bb34:	mov	r0, sl
   1bb38:	mov	r2, r6
   1bb3c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1bb40:	mov	r2, r0
   1bb44:	cmp	r2, r6
   1bb48:	beq	1dbd4 <main@@Base+0x7b38>
   1bb4c:	ldrb	r0, [r2]
   1bb50:	cmp	r0, #93	; 0x5d
   1bb54:	bne	1ba54 <main@@Base+0x59b8>
   1bb58:	add	r1, r2, #1
   1bb5c:	sub	r0, r6, r1
   1bb60:	cmp	r0, #2
   1bb64:	bge	1db94 <main@@Base+0x7af8>
   1bb68:	b	1e33c <main@@Base+0x82a0>
   1bb6c:	mov	r4, r6
   1bb70:	b	19654 <main@@Base+0x35b8>
   1bb74:	ldr	r6, [sp, #52]	; 0x34
   1bb78:	ldr	sl, [sp, #44]	; 0x2c
   1bb7c:	ldr	r5, [sp, #48]	; 0x30
   1bb80:	bne	1bb94 <main@@Base+0x5af8>
   1bb84:	ldrb	r0, [r2, #2]!
   1bb88:	cmp	r0, #32
   1bb8c:	mov	r4, r2
   1bb90:	bhi	21764 <main@@Base+0xb6c8>
   1bb94:	mov	r0, sl
   1bb98:	mov	r2, r6
   1bb9c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1bba0:	mov	r4, r0
   1bba4:	sub	r0, r6, r4
   1bba8:	cmp	r0, #2
   1bbac:	bge	21770 <main@@Base+0xb6d4>
   1bbb0:	b	19970 <main@@Base+0x38d4>
   1bbb4:	cmp	r0, #93	; 0x5d
   1bbb8:	bne	1dbb0 <main@@Base+0x7b14>
   1bbbc:	ldr	r6, [sp, #52]	; 0x34
   1bbc0:	ldr	sl, [sp, #44]	; 0x2c
   1bbc4:	add	r1, r2, #1
   1bbc8:	sub	r0, r6, r1
   1bbcc:	cmp	r0, #2
   1bbd0:	blt	1df78 <main@@Base+0x7edc>
   1bbd4:	ldrb	r0, [r1]
   1bbd8:	cmp	r0, #32
   1bbdc:	bls	1df5c <main@@Base+0x7ec0>
   1bbe0:	ldr	r6, [sp, #52]	; 0x34
   1bbe4:	ldr	sl, [sp, #44]	; 0x2c
   1bbe8:	mov	r4, r1
   1bbec:	b	19654 <main@@Base+0x35b8>
   1bbf0:	mov	r0, sl
   1bbf4:	mov	r1, r6
   1bbf8:	b	1dbc0 <main@@Base+0x7b24>
   1bbfc:	ldr	r6, [sp, #52]	; 0x34
   1bc00:	ldr	sl, [sp, #44]	; 0x2c
   1bc04:	bne	1bc14 <main@@Base+0x5b78>
   1bc08:	ldrb	r0, [r4, #2]!
   1bc0c:	cmp	r0, #32
   1bc10:	bhi	1bc24 <main@@Base+0x5b88>
   1bc14:	mov	r0, sl
   1bc18:	mov	r2, r6
   1bc1c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1bc20:	mov	r4, r0
   1bc24:	cmp	r4, r6
   1bc28:	mov	r2, r6
   1bc2c:	beq	1bc80 <main@@Base+0x5be4>
   1bc30:	ldrb	r0, [r4]
   1bc34:	cmp	r0, #125	; 0x7d
   1bc38:	bne	1bc7c <main@@Base+0x5be0>
   1bc3c:	ldr	r6, [sp, #52]	; 0x34
   1bc40:	ldr	sl, [sp, #44]	; 0x2c
   1bc44:	add	r1, r4, #1
   1bc48:	sub	r0, r6, r1
   1bc4c:	cmp	r0, #2
   1bc50:	blt	1e2a8 <main@@Base+0x820c>
   1bc54:	ldrb	r0, [r1]
   1bc58:	cmp	r0, #32
   1bc5c:	bhi	1cee4 <main@@Base+0x6e48>
   1bc60:	ldr	r6, [sp, #52]	; 0x34
   1bc64:	ldr	sl, [sp, #44]	; 0x2c
   1bc68:	bne	1e2a8 <main@@Base+0x820c>
   1bc6c:	ldrb	r0, [r4, #2]!
   1bc70:	cmp	r0, #32
   1bc74:	bhi	194f8 <main@@Base+0x345c>
   1bc78:	b	1e2a8 <main@@Base+0x820c>
   1bc7c:	mov	r2, r4
   1bc80:	ldr	r6, [sp, #52]	; 0x34
   1bc84:	ldr	sl, [sp, #44]	; 0x2c
   1bc88:	cmp	r2, r6
   1bc8c:	mov	r8, r6
   1bc90:	beq	1bce4 <main@@Base+0x5c48>
   1bc94:	ldrb	r0, [r2]
   1bc98:	cmp	r0, #46	; 0x2e
   1bc9c:	beq	1bcb8 <main@@Base+0x5c1c>
   1bca0:	cmp	r0, #34	; 0x22
   1bca4:	bne	1bcd4 <main@@Base+0x5c38>
   1bca8:	ldr	r0, [sp, #40]	; 0x28
   1bcac:	mov	r1, #0
   1bcb0:	add	r8, r2, #1
   1bcb4:	b	1bce0 <main@@Base+0x5c44>
   1bcb8:	mov	r1, r2
   1bcbc:	mov	r0, sl
   1bcc0:	mov	r2, r6
   1bcc4:	mov	r3, #5
   1bcc8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1bccc:	mov	r8, r0
   1bcd0:	b	1bce4 <main@@Base+0x5c48>
   1bcd4:	ldr	r0, [sp, #40]	; 0x28
   1bcd8:	mov	r1, #1
   1bcdc:	mov	r8, r2
   1bce0:	str	r1, [r0]
   1bce4:	sub	lr, r6, r8
   1bce8:	mov	r0, #8
   1bcec:	cmp	lr, #8
   1bcf0:	movcc	r0, lr
   1bcf4:	and	r0, r0, #15
   1bcf8:	sub	r7, r0, #1
   1bcfc:	cmp	r7, #7
   1bd00:	bhi	1bea0 <main@@Base+0x5e04>
   1bd04:	add	r4, pc, #32
   1bd08:	mov	r1, #0
   1bd0c:	mov	ip, #0
   1bd10:	mov	r9, #0
   1bd14:	mov	r6, #0
   1bd18:	mov	r3, #0
   1bd1c:	mov	r5, #0
   1bd20:	mov	r2, #0
   1bd24:	mov	r0, #0
   1bd28:	ldr	pc, [r4, r7, lsl #2]
   1bd2c:	muleq	r1, r0, sp
   1bd30:	andeq	fp, r1, r8, lsl #27
   1bd34:	andeq	fp, r1, r0, lsl #27
   1bd38:	andeq	fp, r1, r8, ror sp
   1bd3c:	andeq	fp, r1, ip, ror #26
   1bd40:	andeq	fp, r1, r0, ror #26
   1bd44:	andeq	fp, r1, r0, asr sp
   1bd48:	andeq	fp, r1, ip, asr #26
   1bd4c:	ldrb	ip, [r8, #7]
   1bd50:	ldrb	r0, [r8, #6]
   1bd54:	mov	r9, r1
   1bd58:	orr	r0, ip, r0, lsl #8
   1bd5c:	mov	r1, r0
   1bd60:	ldrb	r0, [r8, #5]
   1bd64:	mov	r6, r9
   1bd68:	orr	r1, r1, r0, lsl #16
   1bd6c:	ldrb	r0, [r8, #4]
   1bd70:	mov	r3, r6
   1bd74:	orr	r1, r1, r0, lsl #24
   1bd78:	ldrb	r0, [r8, #3]
   1bd7c:	orr	r5, r0, r3
   1bd80:	ldrb	r0, [r8, #2]
   1bd84:	orr	r2, r5, r0, lsl #8
   1bd88:	ldrb	r0, [r8, #1]
   1bd8c:	orr	r0, r2, r0, lsl #16
   1bd90:	ldrb	r2, [r8]
   1bd94:	orr	r2, r0, r2, lsl #24
   1bd98:	movw	r0, #0
   1bd9c:	movt	r0, #25956	; 0x6564
   1bda0:	subs	r0, r1, r0
   1bda4:	movw	r0, #29556	; 0x7374
   1bda8:	movt	r0, #28261	; 0x6e65
   1bdac:	sbcs	r0, r2, r0
   1bdb0:	bcs	1be20 <main@@Base+0x5d84>
   1bdb4:	ldr	r6, [sp, #52]	; 0x34
   1bdb8:	movw	r0, #29793	; 0x7461
   1bdbc:	movt	r0, #25697	; 0x6461
   1bdc0:	teq	r2, r0
   1bdc4:	bne	1bea0 <main@@Base+0x5e04>
   1bdc8:	cmp	lr, #5
   1bdcc:	mov	r1, r8
   1bdd0:	blt	1c198 <main@@Base+0x60fc>
   1bdd4:	ldr	r1, [sp, #40]	; 0x28
   1bdd8:	mov	r2, r8
   1bddc:	ldrb	r0, [r2, #4]!
   1bde0:	ldr	r1, [r1]
   1bde4:	cmp	r1, #0
   1bde8:	beq	1bf28 <main@@Base+0x5e8c>
   1bdec:	cmp	r0, #33	; 0x21
   1bdf0:	bcc	1be00 <main@@Base+0x5d64>
   1bdf4:	cmp	r0, #58	; 0x3a
   1bdf8:	mov	r1, r8
   1bdfc:	bne	1c198 <main@@Base+0x60fc>
   1be00:	ldr	r0, [sp, #40]	; 0x28
   1be04:	mov	r1, #0
   1be08:	str	r1, [r0]
   1be0c:	ldr	r0, [sp, #52]	; 0x34
   1be10:	sub	r0, r0, r2
   1be14:	cmp	r0, #2
   1be18:	bge	1bf48 <main@@Base+0x5eac>
   1be1c:	b	1bffc <main@@Base+0x5f60>
   1be20:	movw	r0, #29292	; 0x726c
   1be24:	lsr	r3, r1, #8
   1be28:	movw	r7, #29793	; 0x7461
   1be2c:	movt	r0, #117	; 0x75
   1be30:	orr	r3, r3, r2, lsl #24
   1be34:	movt	r7, #25697	; 0x6461
   1be38:	eor	r0, r0, r2, lsr #8
   1be3c:	eor	r3, r3, r7
   1be40:	orrs	r0, r3, r0
   1be44:	bne	1beac <main@@Base+0x5e10>
   1be48:	cmp	lr, #8
   1be4c:	mov	r1, r8
   1be50:	blt	1c208 <main@@Base+0x616c>
   1be54:	ldr	r1, [sp, #40]	; 0x28
   1be58:	mov	r2, r8
   1be5c:	ldrb	r0, [r2, #7]!
   1be60:	ldr	r1, [r1]
   1be64:	cmp	r1, #0
   1be68:	beq	1bf68 <main@@Base+0x5ecc>
   1be6c:	cmp	r0, #33	; 0x21
   1be70:	bcc	1be80 <main@@Base+0x5de4>
   1be74:	cmp	r0, #58	; 0x3a
   1be78:	mov	r1, r8
   1be7c:	bne	1c208 <main@@Base+0x616c>
   1be80:	ldr	r0, [sp, #40]	; 0x28
   1be84:	mov	r1, #0
   1be88:	str	r1, [r0]
   1be8c:	ldr	r0, [sp, #52]	; 0x34
   1be90:	sub	r0, r0, r2
   1be94:	cmp	r0, #2
   1be98:	bge	1bf88 <main@@Base+0x5eec>
   1be9c:	b	1c080 <main@@Base+0x5fe4>
   1bea0:	mov	r0, sl
   1bea4:	mov	r1, r8
   1bea8:	b	1c2f0 <main@@Base+0x6254>
   1beac:	movw	r0, #29556	; 0x7374
   1beb0:	bfc	r1, #0, #16
   1beb4:	movt	r0, #28261	; 0x6e65
   1beb8:	eor	r0, r2, r0
   1bebc:	movw	r2, #0
   1bec0:	movt	r2, #25956	; 0x6564
   1bec4:	eor	r1, r1, r2
   1bec8:	orrs	r0, r1, r0
   1becc:	bne	1c2e0 <main@@Base+0x6244>
   1bed0:	cmp	lr, #7
   1bed4:	mov	r1, r8
   1bed8:	blt	1c278 <main@@Base+0x61dc>
   1bedc:	ldr	r1, [sp, #40]	; 0x28
   1bee0:	mov	r2, r8
   1bee4:	ldrb	r0, [r2, #6]!
   1bee8:	ldr	r1, [r1]
   1beec:	cmp	r1, #0
   1bef0:	beq	1bfa8 <main@@Base+0x5f0c>
   1bef4:	cmp	r0, #33	; 0x21
   1bef8:	bcc	1bf08 <main@@Base+0x5e6c>
   1befc:	cmp	r0, #58	; 0x3a
   1bf00:	mov	r1, r8
   1bf04:	bne	1c278 <main@@Base+0x61dc>
   1bf08:	ldr	r0, [sp, #40]	; 0x28
   1bf0c:	mov	r1, #0
   1bf10:	str	r1, [r0]
   1bf14:	ldr	r0, [sp, #52]	; 0x34
   1bf18:	sub	r0, r0, r2
   1bf1c:	cmp	r0, #2
   1bf20:	bge	1bfc8 <main@@Base+0x5f2c>
   1bf24:	b	1c104 <main@@Base+0x6068>
   1bf28:	cmp	r0, #34	; 0x22
   1bf2c:	mov	r1, r8
   1bf30:	bne	1c198 <main@@Base+0x60fc>
   1bf34:	add	r2, r8, #5
   1bf38:	ldr	r0, [sp, #52]	; 0x34
   1bf3c:	sub	r0, r0, r2
   1bf40:	cmp	r0, #2
   1bf44:	blt	1bffc <main@@Base+0x5f60>
   1bf48:	ldrb	r0, [r2]
   1bf4c:	cmp	r0, #32
   1bf50:	bls	1bfe8 <main@@Base+0x5f4c>
   1bf54:	mov	r1, r2
   1bf58:	ldr	r0, [sp, #52]	; 0x34
   1bf5c:	cmp	r1, r0
   1bf60:	bne	1c01c <main@@Base+0x5f80>
   1bf64:	b	1c058 <main@@Base+0x5fbc>
   1bf68:	cmp	r0, #34	; 0x22
   1bf6c:	mov	r1, r8
   1bf70:	bne	1c208 <main@@Base+0x616c>
   1bf74:	add	r2, r8, #8
   1bf78:	ldr	r0, [sp, #52]	; 0x34
   1bf7c:	sub	r0, r0, r2
   1bf80:	cmp	r0, #2
   1bf84:	blt	1c080 <main@@Base+0x5fe4>
   1bf88:	ldrb	r0, [r2]
   1bf8c:	cmp	r0, #32
   1bf90:	bls	1c06c <main@@Base+0x5fd0>
   1bf94:	mov	r1, r2
   1bf98:	ldr	r0, [sp, #52]	; 0x34
   1bf9c:	cmp	r1, r0
   1bfa0:	bne	1c0a0 <main@@Base+0x6004>
   1bfa4:	b	1c0dc <main@@Base+0x6040>
   1bfa8:	cmp	r0, #34	; 0x22
   1bfac:	mov	r1, r8
   1bfb0:	bne	1c278 <main@@Base+0x61dc>
   1bfb4:	add	r2, r8, #7
   1bfb8:	ldr	r0, [sp, #52]	; 0x34
   1bfbc:	sub	r0, r0, r2
   1bfc0:	cmp	r0, #2
   1bfc4:	blt	1c104 <main@@Base+0x6068>
   1bfc8:	ldrb	r0, [r2]
   1bfcc:	cmp	r0, #32
   1bfd0:	bls	1c0f0 <main@@Base+0x6054>
   1bfd4:	mov	r1, r2
   1bfd8:	ldr	r0, [sp, #52]	; 0x34
   1bfdc:	cmp	r1, r0
   1bfe0:	bne	1c124 <main@@Base+0x6088>
   1bfe4:	b	1c160 <main@@Base+0x60c4>
   1bfe8:	bne	1bffc <main@@Base+0x5f60>
   1bfec:	mov	r1, r2
   1bff0:	ldrb	r0, [r1, #1]!
   1bff4:	cmp	r0, #32
   1bff8:	bhi	1c010 <main@@Base+0x5f74>
   1bffc:	mov	r1, r2
   1c000:	ldr	r0, [sp, #44]	; 0x2c
   1c004:	ldr	r2, [sp, #52]	; 0x34
   1c008:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1c00c:	mov	r1, r0
   1c010:	ldr	r0, [sp, #52]	; 0x34
   1c014:	cmp	r1, r0
   1c018:	beq	1c058 <main@@Base+0x5fbc>
   1c01c:	ldrb	r0, [r1]
   1c020:	cmp	r0, #58	; 0x3a
   1c024:	bne	1c058 <main@@Base+0x5fbc>
   1c028:	ldr	r0, [sp, #52]	; 0x34
   1c02c:	add	r2, r1, #1
   1c030:	sub	r0, r0, r2
   1c034:	cmp	r0, #2
   1c038:	blt	1c184 <main@@Base+0x60e8>
   1c03c:	ldrb	r0, [r2]
   1c040:	cmp	r0, #32
   1c044:	bls	1c174 <main@@Base+0x60d8>
   1c048:	mov	r1, r2
   1c04c:	cmp	r8, r1
   1c050:	bne	1c1a0 <main@@Base+0x6104>
   1c054:	b	1c2e0 <main@@Base+0x6244>
   1c058:	ldr	r0, [sp, #44]	; 0x2c
   1c05c:	ldr	r2, [sp, #52]	; 0x34
   1c060:	mov	r3, #4
   1c064:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1c068:	b	1c194 <main@@Base+0x60f8>
   1c06c:	bne	1c080 <main@@Base+0x5fe4>
   1c070:	mov	r1, r2
   1c074:	ldrb	r0, [r1, #1]!
   1c078:	cmp	r0, #32
   1c07c:	bhi	1c094 <main@@Base+0x5ff8>
   1c080:	mov	r1, r2
   1c084:	ldr	r0, [sp, #44]	; 0x2c
   1c088:	ldr	r2, [sp, #52]	; 0x34
   1c08c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1c090:	mov	r1, r0
   1c094:	ldr	r0, [sp, #52]	; 0x34
   1c098:	cmp	r1, r0
   1c09c:	beq	1c0dc <main@@Base+0x6040>
   1c0a0:	ldrb	r0, [r1]
   1c0a4:	cmp	r0, #58	; 0x3a
   1c0a8:	bne	1c0dc <main@@Base+0x6040>
   1c0ac:	ldr	r0, [sp, #52]	; 0x34
   1c0b0:	add	r2, r1, #1
   1c0b4:	sub	r0, r0, r2
   1c0b8:	cmp	r0, #2
   1c0bc:	blt	1c1f4 <main@@Base+0x6158>
   1c0c0:	ldrb	r0, [r2]
   1c0c4:	cmp	r0, #32
   1c0c8:	bls	1c1e4 <main@@Base+0x6148>
   1c0cc:	mov	r1, r2
   1c0d0:	cmp	r8, r1
   1c0d4:	bne	1c210 <main@@Base+0x6174>
   1c0d8:	b	1c2e0 <main@@Base+0x6244>
   1c0dc:	ldr	r0, [sp, #44]	; 0x2c
   1c0e0:	ldr	r2, [sp, #52]	; 0x34
   1c0e4:	mov	r3, #4
   1c0e8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1c0ec:	b	1c204 <main@@Base+0x6168>
   1c0f0:	bne	1c104 <main@@Base+0x6068>
   1c0f4:	mov	r1, r2
   1c0f8:	ldrb	r0, [r1, #1]!
   1c0fc:	cmp	r0, #32
   1c100:	bhi	1c118 <main@@Base+0x607c>
   1c104:	mov	r1, r2
   1c108:	ldr	r0, [sp, #44]	; 0x2c
   1c10c:	ldr	r2, [sp, #52]	; 0x34
   1c110:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1c114:	mov	r1, r0
   1c118:	ldr	r0, [sp, #52]	; 0x34
   1c11c:	cmp	r1, r0
   1c120:	beq	1c160 <main@@Base+0x60c4>
   1c124:	ldrb	r0, [r1]
   1c128:	cmp	r0, #58	; 0x3a
   1c12c:	bne	1c160 <main@@Base+0x60c4>
   1c130:	ldr	r0, [sp, #52]	; 0x34
   1c134:	add	r2, r1, #1
   1c138:	sub	r0, r0, r2
   1c13c:	cmp	r0, #2
   1c140:	blt	1c264 <main@@Base+0x61c8>
   1c144:	ldrb	r0, [r2]
   1c148:	cmp	r0, #32
   1c14c:	bls	1c254 <main@@Base+0x61b8>
   1c150:	mov	r1, r2
   1c154:	cmp	r8, r1
   1c158:	bne	1c280 <main@@Base+0x61e4>
   1c15c:	b	1c2e0 <main@@Base+0x6244>
   1c160:	ldr	r0, [sp, #44]	; 0x2c
   1c164:	ldr	r2, [sp, #52]	; 0x34
   1c168:	mov	r3, #4
   1c16c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1c170:	b	1c274 <main@@Base+0x61d8>
   1c174:	bne	1c184 <main@@Base+0x60e8>
   1c178:	ldrb	r0, [r1, #2]!
   1c17c:	cmp	r0, #32
   1c180:	bhi	1c198 <main@@Base+0x60fc>
   1c184:	mov	r1, r2
   1c188:	ldr	r0, [sp, #44]	; 0x2c
   1c18c:	ldr	r2, [sp, #52]	; 0x34
   1c190:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1c194:	mov	r1, r0
   1c198:	cmp	r8, r1
   1c19c:	beq	1c2e0 <main@@Base+0x6244>
   1c1a0:	mov	r0, #0
   1c1a4:	ldr	r2, [sp, #52]	; 0x34
   1c1a8:	sub	r3, fp, #56	; 0x38
   1c1ac:	str	r0, [sp]
   1c1b0:	ldr	r0, [sp, #44]	; 0x2c
   1c1b4:	bl	39464 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1c1b8:	mov	r4, r0
   1c1bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c1c0:	cmp	r0, #0
   1c1c4:	beq	1df50 <main@@Base+0x7eb4>
   1c1c8:	ldr	r0, [sp, #44]	; 0x2c
   1c1cc:	mov	r1, #0
   1c1d0:	ldr	r0, [r0]
   1c1d4:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   1c1d8:	cmp	r0, #0
   1c1dc:	bne	1c2c0 <main@@Base+0x6224>
   1c1e0:	b	1df50 <main@@Base+0x7eb4>
   1c1e4:	bne	1c1f4 <main@@Base+0x6158>
   1c1e8:	ldrb	r0, [r1, #2]!
   1c1ec:	cmp	r0, #32
   1c1f0:	bhi	1c208 <main@@Base+0x616c>
   1c1f4:	mov	r1, r2
   1c1f8:	ldr	r0, [sp, #44]	; 0x2c
   1c1fc:	ldr	r2, [sp, #52]	; 0x34
   1c200:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1c204:	mov	r1, r0
   1c208:	cmp	r8, r1
   1c20c:	beq	1c2e0 <main@@Base+0x6244>
   1c210:	mov	r0, #1
   1c214:	ldr	r2, [sp, #52]	; 0x34
   1c218:	sub	r3, fp, #56	; 0x38
   1c21c:	str	r0, [sp]
   1c220:	ldr	r0, [sp, #44]	; 0x2c
   1c224:	bl	39464 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1c228:	mov	r4, r0
   1c22c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c230:	cmp	r0, #0
   1c234:	beq	1df50 <main@@Base+0x7eb4>
   1c238:	ldr	r0, [sp, #44]	; 0x2c
   1c23c:	mov	r1, #1
   1c240:	ldr	r0, [r0]
   1c244:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   1c248:	cmp	r0, #0
   1c24c:	bne	1c2c0 <main@@Base+0x6224>
   1c250:	b	1df50 <main@@Base+0x7eb4>
   1c254:	bne	1c264 <main@@Base+0x61c8>
   1c258:	ldrb	r0, [r1, #2]!
   1c25c:	cmp	r0, #32
   1c260:	bhi	1c278 <main@@Base+0x61dc>
   1c264:	mov	r1, r2
   1c268:	ldr	r0, [sp, #44]	; 0x2c
   1c26c:	ldr	r2, [sp, #52]	; 0x34
   1c270:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1c274:	mov	r1, r0
   1c278:	cmp	r8, r1
   1c27c:	beq	1c2e0 <main@@Base+0x6244>
   1c280:	mov	r0, #0
   1c284:	ldr	r2, [sp, #52]	; 0x34
   1c288:	sub	r3, fp, #56	; 0x38
   1c28c:	str	r0, [sp]
   1c290:	ldr	r0, [sp, #44]	; 0x2c
   1c294:	bl	39464 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1c298:	mov	r4, r0
   1c29c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c2a0:	cmp	r0, #0
   1c2a4:	beq	1df50 <main@@Base+0x7eb4>
   1c2a8:	ldr	r0, [sp, #44]	; 0x2c
   1c2ac:	mov	r1, #2
   1c2b0:	ldr	r0, [r0]
   1c2b4:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   1c2b8:	cmp	r0, #0
   1c2bc:	beq	1df50 <main@@Base+0x7eb4>
   1c2c0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1c2c4:	str	r1, [r0]
   1c2c8:	ldr	r6, [sp, #52]	; 0x34
   1c2cc:	ldr	sl, [sp, #44]	; 0x2c
   1c2d0:	sub	r0, r6, r4
   1c2d4:	cmp	r0, #2
   1c2d8:	blt	1c338 <main@@Base+0x629c>
   1c2dc:	b	1c308 <main@@Base+0x626c>
   1c2e0:	ldr	sl, [sp, #44]	; 0x2c
   1c2e4:	ldr	r6, [sp, #52]	; 0x34
   1c2e8:	mov	r1, r8
   1c2ec:	mov	r0, sl
   1c2f0:	mov	r2, r6
   1c2f4:	bl	376d0 <flatcc_json_parser_unmatched_symbol@@Base>
   1c2f8:	mov	r4, r0
   1c2fc:	sub	r0, r6, r4
   1c300:	cmp	r0, #2
   1c304:	blt	1c338 <main@@Base+0x629c>
   1c308:	ldrb	r0, [r4]
   1c30c:	cmp	r0, #32
   1c310:	bls	1c324 <main@@Base+0x6288>
   1c314:	mov	r2, r4
   1c318:	cmp	r2, r6
   1c31c:	bne	1c354 <main@@Base+0x62b8>
   1c320:	b	1cc90 <main@@Base+0x6bf4>
   1c324:	bne	1c338 <main@@Base+0x629c>
   1c328:	mov	r2, r4
   1c32c:	ldrb	r0, [r2, #1]!
   1c330:	cmp	r0, #32
   1c334:	bhi	1c34c <main@@Base+0x62b0>
   1c338:	mov	r0, sl
   1c33c:	mov	r1, r4
   1c340:	mov	r2, r6
   1c344:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1c348:	mov	r2, r0
   1c34c:	cmp	r2, r6
   1c350:	beq	1cc90 <main@@Base+0x6bf4>
   1c354:	ldrb	r0, [r2]
   1c358:	cmp	r0, #44	; 0x2c
   1c35c:	bne	1ceb8 <main@@Base+0x6e1c>
   1c360:	add	r1, r2, #1
   1c364:	sub	r0, r6, r1
   1c368:	cmp	r0, #2
   1c36c:	blt	1c39c <main@@Base+0x6300>
   1c370:	ldrb	r0, [r1]
   1c374:	cmp	r0, #32
   1c378:	bls	1c38c <main@@Base+0x62f0>
   1c37c:	mov	r2, r1
   1c380:	cmp	r2, r6
   1c384:	bne	1c3b4 <main@@Base+0x6318>
   1c388:	b	1cf18 <main@@Base+0x6e7c>
   1c38c:	bne	1c39c <main@@Base+0x6300>
   1c390:	ldrb	r0, [r2, #2]!
   1c394:	cmp	r0, #32
   1c398:	bhi	1c3ac <main@@Base+0x6310>
   1c39c:	mov	r0, sl
   1c3a0:	mov	r2, r6
   1c3a4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1c3a8:	mov	r2, r0
   1c3ac:	cmp	r2, r6
   1c3b0:	beq	1cf18 <main@@Base+0x6e7c>
   1c3b4:	ldrb	r0, [r2]
   1c3b8:	cmp	r0, #125	; 0x7d
   1c3bc:	bne	1bc88 <main@@Base+0x5bec>
   1c3c0:	add	r1, r2, #1
   1c3c4:	sub	r0, r6, r1
   1c3c8:	cmp	r0, #2
   1c3cc:	bge	1ced8 <main@@Base+0x6e3c>
   1c3d0:	b	1e2a8 <main@@Base+0x820c>
   1c3d4:	ldr	r6, [sp, #52]	; 0x34
   1c3d8:	ldr	sl, [sp, #44]	; 0x2c
   1c3dc:	bne	1c3ec <main@@Base+0x6350>
   1c3e0:	ldrb	r0, [r4, #2]!
   1c3e4:	cmp	r0, #32
   1c3e8:	bhi	1c3fc <main@@Base+0x6360>
   1c3ec:	mov	r0, sl
   1c3f0:	mov	r2, r6
   1c3f4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1c3f8:	mov	r4, r0
   1c3fc:	cmp	r7, r4
   1c400:	beq	1c464 <main@@Base+0x63c8>
   1c404:	ldr	r0, [sl]
   1c408:	mov	r1, #8
   1c40c:	mov	r2, #8
   1c410:	mvn	r3, #-536870912	; 0xe0000000
   1c414:	bl	31cdc <flatcc_builder_start_vector@@Base>
   1c418:	cmp	r0, #0
   1c41c:	bne	21924 <main@@Base+0xb888>
   1c420:	cmp	r4, r6
   1c424:	beq	1c470 <main@@Base+0x63d4>
   1c428:	ldrb	r0, [r4]
   1c42c:	cmp	r0, #91	; 0x5b
   1c430:	bne	1c470 <main@@Base+0x63d4>
   1c434:	add	r1, r4, #1
   1c438:	sub	r0, r6, r1
   1c43c:	cmp	r0, #2
   1c440:	blt	1ccb8 <main@@Base+0x6c1c>
   1c444:	ldrb	r0, [r1]
   1c448:	cmp	r0, #32
   1c44c:	bls	1cca8 <main@@Base+0x6c0c>
   1c450:	mov	r4, r1
   1c454:	ldr	r7, [sp, #52]	; 0x34
   1c458:	cmp	r4, r7
   1c45c:	bne	1ccd4 <main@@Base+0x6c38>
   1c460:	b	1cd2c <main@@Base+0x6c90>
   1c464:	mov	r0, sl
   1c468:	mov	r1, r7
   1c46c:	b	21754 <main@@Base+0xb6b8>
   1c470:	ldr	sl, [sp, #44]	; 0x2c
   1c474:	mov	r1, r4
   1c478:	mov	r2, r6
   1c47c:	mov	r3, #22
   1c480:	mov	r0, sl
   1c484:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1c488:	mov	r4, r0
   1c48c:	ldr	r0, [sl]
   1c490:	bl	32f5c <flatcc_builder_end_vector@@Base>
   1c494:	cmp	r0, #0
   1c498:	str	r0, [sp, #60]	; 0x3c
   1c49c:	beq	21904 <main@@Base+0xb868>
   1c4a0:	ldr	r0, [sl]
   1c4a4:	mov	r1, #33	; 0x21
   1c4a8:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   1c4ac:	cmp	r0, #0
   1c4b0:	beq	21904 <main@@Base+0xb868>
   1c4b4:	ldr	r1, [sp, #60]	; 0x3c
   1c4b8:	ldr	r6, [sp, #52]	; 0x34
   1c4bc:	str	r1, [r0]
   1c4c0:	b	21760 <main@@Base+0xb6c4>
   1c4c4:	mov	r6, r0
   1c4c8:	ldr	r8, [sp, #52]	; 0x34
   1c4cc:	ldr	sl, [sp, #44]	; 0x2c
   1c4d0:	str	r6, [fp, #-60]	; 0xffffffc4
   1c4d4:	ldr	r5, [sp, #48]	; 0x30
   1c4d8:	cmp	r7, r4
   1c4dc:	bne	1c520 <main@@Base+0x6484>
   1c4e0:	movw	r3, #268	; 0x10c
   1c4e4:	sub	r0, fp, #60	; 0x3c
   1c4e8:	mov	r1, r7
   1c4ec:	mov	r2, r8
   1c4f0:	mov	r5, r8
   1c4f4:	str	r0, [sp]
   1c4f8:	mov	r0, sl
   1c4fc:	movt	r3, #6
   1c500:	bl	26114 <main@@Base+0x10078>
   1c504:	mov	r4, r0
   1c508:	cmp	r0, r7
   1c50c:	cmpne	r4, r5
   1c510:	beq	21968 <main@@Base+0xb8cc>
   1c514:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1c518:	ldr	sl, [sp, #44]	; 0x2c
   1c51c:	ldr	r5, [sp, #48]	; 0x30
   1c520:	cmp	r6, #0
   1c524:	bne	1c534 <main@@Base+0x6498>
   1c528:	ldrb	r0, [sl, #8]
   1c52c:	tst	r0, #2
   1c530:	beq	19960 <main@@Base+0x38c4>
   1c534:	ldr	r0, [sl]
   1c538:	mov	r1, #20
   1c53c:	mov	r2, #4
   1c540:	mov	r3, #4
   1c544:	bl	33604 <flatcc_builder_table_add@@Base>
   1c548:	cmp	r0, #0
   1c54c:	beq	21968 <main@@Base+0xb8cc>
   1c550:	str	r6, [r0]
   1c554:	b	19960 <main@@Base+0x38c4>
   1c558:	ldr	r6, [sp, #52]	; 0x34
   1c55c:	ldr	sl, [sp, #44]	; 0x2c
   1c560:	bne	1c570 <main@@Base+0x64d4>
   1c564:	ldrb	r0, [r4, #2]!
   1c568:	cmp	r0, #32
   1c56c:	bhi	1c580 <main@@Base+0x64e4>
   1c570:	mov	r0, sl
   1c574:	mov	r2, r6
   1c578:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1c57c:	mov	r4, r0
   1c580:	cmp	r4, r6
   1c584:	beq	1c5e4 <main@@Base+0x6548>
   1c588:	ldrb	r0, [r4]
   1c58c:	cmp	r0, #93	; 0x5d
   1c590:	bne	1c5e0 <main@@Base+0x6544>
   1c594:	ldr	r6, [sp, #52]	; 0x34
   1c598:	ldr	sl, [sp, #44]	; 0x2c
   1c59c:	add	r1, r4, #1
   1c5a0:	sub	r0, r6, r1
   1c5a4:	cmp	r0, #2
   1c5a8:	blt	1c5d0 <main@@Base+0x6534>
   1c5ac:	ldrb	r0, [r1]
   1c5b0:	cmp	r0, #32
   1c5b4:	bhi	1dca4 <main@@Base+0x7c08>
   1c5b8:	ldr	r6, [sp, #52]	; 0x34
   1c5bc:	ldr	sl, [sp, #44]	; 0x2c
   1c5c0:	bne	1c5d0 <main@@Base+0x6534>
   1c5c4:	ldrb	r0, [r4, #2]!
   1c5c8:	cmp	r0, #32
   1c5cc:	bhi	1ab70 <main@@Base+0x4ad4>
   1c5d0:	mov	r0, sl
   1c5d4:	mov	r2, r6
   1c5d8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1c5dc:	b	1ab6c <main@@Base+0x4ad0>
   1c5e0:	mov	r6, r4
   1c5e4:	mov	r0, #0
   1c5e8:	mov	r1, #1
   1c5ec:	str	r0, [sp, #68]	; 0x44
   1c5f0:	str	r0, [sp, #64]	; 0x40
   1c5f4:	ldr	r0, [sp, #44]	; 0x2c
   1c5f8:	ldr	r0, [r0]
   1c5fc:	bl	31188 <flatcc_builder_extend_vector@@Base>
   1c600:	cmp	r0, #0
   1c604:	beq	21938 <main@@Base+0xb89c>
   1c608:	mov	r4, r6
   1c60c:	ldr	r6, [sp, #52]	; 0x34
   1c610:	ldr	sl, [sp, #44]	; 0x2c
   1c614:	mov	r7, r0
   1c618:	mov	r0, #0
   1c61c:	cmp	r4, r6
   1c620:	str	r0, [fp, #-52]	; 0xffffffcc
   1c624:	str	r0, [fp, #-56]	; 0xffffffc8
   1c628:	str	r0, [sp, #68]	; 0x44
   1c62c:	str	r0, [sp, #64]	; 0x40
   1c630:	str	r0, [fp, #-60]	; 0xffffffc4
   1c634:	beq	1c694 <main@@Base+0x65f8>
   1c638:	sub	r0, fp, #56	; 0x38
   1c63c:	mov	r1, r4
   1c640:	mov	r2, r6
   1c644:	sub	r3, fp, #60	; 0x3c
   1c648:	str	r0, [sp]
   1c64c:	mov	r0, sl
   1c650:	bl	392f4 <flatcc_json_parser_integer@@Base>
   1c654:	cmp	r0, r4
   1c658:	beq	1c6a8 <main@@Base+0x660c>
   1c65c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1c660:	mov	r1, r0
   1c664:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c668:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c66c:	cmp	r2, #0
   1c670:	beq	1c6c0 <main@@Base+0x6624>
   1c674:	rsbs	r2, r0, #0
   1c678:	mov	r2, #-2147483648	; 0x80000000
   1c67c:	sbcs	r2, r2, r3
   1c680:	bcs	1c6f8 <main@@Base+0x665c>
   1c684:	ldr	sl, [sp, #44]	; 0x2c
   1c688:	ldr	r6, [sp, #52]	; 0x34
   1c68c:	mov	r3, #8
   1c690:	b	1c6d4 <main@@Base+0x6638>
   1c694:	mov	r3, #0
   1c698:	mov	r1, r6
   1c69c:	cmp	r4, r1
   1c6a0:	bne	1c758 <main@@Base+0x66bc>
   1c6a4:	b	1c718 <main@@Base+0x667c>
   1c6a8:	mov	r0, #0
   1c6ac:	mov	r3, #0
   1c6b0:	mov	r1, r4
   1c6b4:	cmp	r4, r1
   1c6b8:	bne	1c758 <main@@Base+0x66bc>
   1c6bc:	b	1c718 <main@@Base+0x667c>
   1c6c0:	cmn	r3, #1
   1c6c4:	bgt	1c700 <main@@Base+0x6664>
   1c6c8:	ldr	sl, [sp, #44]	; 0x2c
   1c6cc:	ldr	r6, [sp, #52]	; 0x34
   1c6d0:	mov	r3, #7
   1c6d4:	mov	r0, sl
   1c6d8:	mov	r2, r6
   1c6dc:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1c6e0:	mov	r1, r0
   1c6e4:	mov	r0, #0
   1c6e8:	mov	r3, #0
   1c6ec:	cmp	r4, r1
   1c6f0:	bne	1c758 <main@@Base+0x66bc>
   1c6f4:	b	1c718 <main@@Base+0x667c>
   1c6f8:	rsbs	r0, r0, #0
   1c6fc:	rsc	r3, r3, #0
   1c700:	ldr	r6, [sp, #52]	; 0x34
   1c704:	ldr	sl, [sp, #44]	; 0x2c
   1c708:	str	r0, [sp, #64]	; 0x40
   1c70c:	str	r3, [sp, #68]	; 0x44
   1c710:	cmp	r4, r1
   1c714:	bne	1c758 <main@@Base+0x66bc>
   1c718:	add	r0, sp, #64	; 0x40
   1c71c:	mov	r1, r4
   1c720:	mov	r2, r6
   1c724:	str	r0, [sp]
   1c728:	movw	r0, #268	; 0x10c
   1c72c:	movt	r0, #6
   1c730:	add	r3, r0, #108	; 0x6c
   1c734:	mov	r0, sl
   1c738:	bl	2636c <main@@Base+0x102d0>
   1c73c:	mov	r1, r0
   1c740:	cmp	r0, r4
   1c744:	cmpne	r1, r6
   1c748:	beq	2192c <main@@Base+0xb890>
   1c74c:	ldr	r0, [sp, #64]	; 0x40
   1c750:	ldr	r3, [sp, #68]	; 0x44
   1c754:	ldr	sl, [sp, #44]	; 0x2c
   1c758:	stm	r7, {r0, r3}
   1c75c:	sub	r0, r6, r1
   1c760:	cmp	r0, #2
   1c764:	blt	1c798 <main@@Base+0x66fc>
   1c768:	ldrb	r0, [r1]
   1c76c:	cmp	r0, #32
   1c770:	bls	1c784 <main@@Base+0x66e8>
   1c774:	mov	r4, r1
   1c778:	cmp	r4, r6
   1c77c:	bne	1c7b0 <main@@Base+0x6714>
   1c780:	b	1dbcc <main@@Base+0x7b30>
   1c784:	bne	1c798 <main@@Base+0x66fc>
   1c788:	mov	r4, r1
   1c78c:	ldrb	r0, [r4, #1]!
   1c790:	cmp	r0, #32
   1c794:	bhi	1c7a8 <main@@Base+0x670c>
   1c798:	mov	r0, sl
   1c79c:	mov	r2, r6
   1c7a0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1c7a4:	mov	r4, r0
   1c7a8:	cmp	r4, r6
   1c7ac:	beq	1dbcc <main@@Base+0x7b30>
   1c7b0:	ldrb	r0, [r4]
   1c7b4:	cmp	r0, #44	; 0x2c
   1c7b8:	bne	1dbe0 <main@@Base+0x7b44>
   1c7bc:	add	r1, r4, #1
   1c7c0:	sub	r0, r6, r1
   1c7c4:	cmp	r0, #2
   1c7c8:	blt	1c7f8 <main@@Base+0x675c>
   1c7cc:	ldrb	r0, [r1]
   1c7d0:	cmp	r0, #32
   1c7d4:	bls	1c7e8 <main@@Base+0x674c>
   1c7d8:	mov	r4, r1
   1c7dc:	cmp	r4, r6
   1c7e0:	bne	1c810 <main@@Base+0x6774>
   1c7e4:	b	1dc18 <main@@Base+0x7b7c>
   1c7e8:	bne	1c7f8 <main@@Base+0x675c>
   1c7ec:	ldrb	r0, [r4, #2]!
   1c7f0:	cmp	r0, #32
   1c7f4:	bhi	1c808 <main@@Base+0x676c>
   1c7f8:	mov	r0, sl
   1c7fc:	mov	r2, r6
   1c800:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1c804:	mov	r4, r0
   1c808:	cmp	r4, r6
   1c80c:	beq	1dc18 <main@@Base+0x7b7c>
   1c810:	ldrb	r0, [r4]
   1c814:	cmp	r0, #93	; 0x5d
   1c818:	beq	1dc88 <main@@Base+0x7bec>
   1c81c:	mov	r0, #0
   1c820:	mov	r1, #1
   1c824:	str	r0, [sp, #68]	; 0x44
   1c828:	str	r0, [sp, #64]	; 0x40
   1c82c:	ldr	r0, [sl]
   1c830:	bl	31188 <flatcc_builder_extend_vector@@Base>
   1c834:	mov	r7, r0
   1c838:	cmp	r0, #0
   1c83c:	bne	1c618 <main@@Base+0x657c>
   1c840:	b	16fd0 <main@@Base+0xf34>
   1c844:	ldr	r6, [sp, #52]	; 0x34
   1c848:	ldr	sl, [sp, #44]	; 0x2c
   1c84c:	bne	1c85c <main@@Base+0x67c0>
   1c850:	ldrb	r0, [r7, #2]!
   1c854:	cmp	r0, #32
   1c858:	bhi	1c86c <main@@Base+0x67d0>
   1c85c:	mov	r0, sl
   1c860:	mov	r2, r6
   1c864:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1c868:	mov	r7, r0
   1c86c:	cmp	r4, r7
   1c870:	beq	1d0c8 <main@@Base+0x702c>
   1c874:	mov	r2, r6
   1c878:	mov	r6, #0
   1c87c:	cmp	r7, r2
   1c880:	str	r6, [fp, #-52]	; 0xffffffcc
   1c884:	str	r6, [fp, #-56]	; 0xffffffc8
   1c888:	str	r6, [sp, #68]	; 0x44
   1c88c:	str	r6, [sp, #64]	; 0x40
   1c890:	str	r6, [fp, #-60]	; 0xffffffc4
   1c894:	beq	1c8f0 <main@@Base+0x6854>
   1c898:	sub	r0, fp, #56	; 0x38
   1c89c:	mov	r1, r7
   1c8a0:	sub	r3, fp, #60	; 0x3c
   1c8a4:	str	r0, [sp]
   1c8a8:	mov	r0, sl
   1c8ac:	bl	392f4 <flatcc_json_parser_integer@@Base>
   1c8b0:	cmp	r0, r7
   1c8b4:	beq	1c904 <main@@Base+0x6868>
   1c8b8:	mov	r4, r0
   1c8bc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1c8c0:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1c8c4:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1c8c8:	cmp	r0, #0
   1c8cc:	beq	1c920 <main@@Base+0x6884>
   1c8d0:	subs	r0, r6, #1
   1c8d4:	sbcs	r0, r5, #-2147483648	; 0x80000000
   1c8d8:	bcc	1c958 <main@@Base+0x68bc>
   1c8dc:	ldr	sl, [sp, #44]	; 0x2c
   1c8e0:	ldr	r2, [sp, #52]	; 0x34
   1c8e4:	mov	r1, r4
   1c8e8:	mov	r3, #8
   1c8ec:	b	1c938 <main@@Base+0x689c>
   1c8f0:	mov	r5, #0
   1c8f4:	mov	r4, r2
   1c8f8:	cmp	r7, r4
   1c8fc:	bne	1c9b8 <main@@Base+0x691c>
   1c900:	b	1c974 <main@@Base+0x68d8>
   1c904:	mov	r6, #0
   1c908:	mov	r5, #0
   1c90c:	mov	r4, r7
   1c910:	ldr	sl, [sp, #44]	; 0x2c
   1c914:	cmp	r7, r4
   1c918:	bne	1c9b8 <main@@Base+0x691c>
   1c91c:	b	1c974 <main@@Base+0x68d8>
   1c920:	cmn	r5, #1
   1c924:	bgt	1c960 <main@@Base+0x68c4>
   1c928:	ldr	sl, [sp, #44]	; 0x2c
   1c92c:	ldr	r2, [sp, #52]	; 0x34
   1c930:	mov	r1, r4
   1c934:	mov	r3, #7
   1c938:	mov	r0, sl
   1c93c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1c940:	mov	r4, r0
   1c944:	mov	r6, #0
   1c948:	mov	r5, #0
   1c94c:	cmp	r7, r4
   1c950:	bne	1c9b8 <main@@Base+0x691c>
   1c954:	b	1c974 <main@@Base+0x68d8>
   1c958:	rsbs	r6, r6, #0
   1c95c:	rsc	r5, r5, #0
   1c960:	str	r6, [sp, #64]	; 0x40
   1c964:	str	r5, [sp, #68]	; 0x44
   1c968:	ldr	sl, [sp, #44]	; 0x2c
   1c96c:	cmp	r7, r4
   1c970:	bne	1c9b8 <main@@Base+0x691c>
   1c974:	add	r0, sp, #64	; 0x40
   1c978:	ldr	r2, [sp, #52]	; 0x34
   1c97c:	mov	r1, r7
   1c980:	str	r0, [sp]
   1c984:	movw	r0, #268	; 0x10c
   1c988:	movt	r0, #6
   1c98c:	add	r3, r0, #24
   1c990:	mov	r0, sl
   1c994:	bl	2636c <main@@Base+0x102d0>
   1c998:	cmp	r0, r7
   1c99c:	mov	r4, r0
   1c9a0:	ldrne	r0, [sp, #52]	; 0x34
   1c9a4:	cmpne	r4, r0
   1c9a8:	beq	21968 <main@@Base+0xb8cc>
   1c9ac:	ldr	r6, [sp, #64]	; 0x40
   1c9b0:	ldr	r5, [sp, #68]	; 0x44
   1c9b4:	ldr	sl, [sp, #44]	; 0x2c
   1c9b8:	orrs	r0, r6, r5
   1c9bc:	bne	1c9cc <main@@Base+0x6930>
   1c9c0:	ldrb	r0, [sl, #8]
   1c9c4:	tst	r0, #2
   1c9c8:	beq	1c9f0 <main@@Base+0x6954>
   1c9cc:	ldr	r0, [sl]
   1c9d0:	mov	r1, #22
   1c9d4:	mov	r2, #8
   1c9d8:	mov	r3, #8
   1c9dc:	bl	33604 <flatcc_builder_table_add@@Base>
   1c9e0:	cmp	r0, #0
   1c9e4:	beq	21968 <main@@Base+0xb8cc>
   1c9e8:	str	r6, [r0]
   1c9ec:	str	r5, [r0, #4]
   1c9f0:	ldr	r6, [sp, #52]	; 0x34
   1c9f4:	b	21760 <main@@Base+0xb6c4>
   1c9f8:	mov	r4, r6
   1c9fc:	b	19e70 <main@@Base+0x3dd4>
   1ca00:	cmp	r0, #93	; 0x5d
   1ca04:	bne	1df88 <main@@Base+0x7eec>
   1ca08:	ldr	r6, [sp, #52]	; 0x34
   1ca0c:	ldr	sl, [sp, #44]	; 0x2c
   1ca10:	add	r1, r2, #1
   1ca14:	sub	r0, r6, r1
   1ca18:	cmp	r0, #2
   1ca1c:	blt	1e140 <main@@Base+0x80a4>
   1ca20:	ldrb	r0, [r1]
   1ca24:	cmp	r0, #32
   1ca28:	bls	1e124 <main@@Base+0x8088>
   1ca2c:	ldr	r6, [sp, #52]	; 0x34
   1ca30:	ldr	sl, [sp, #44]	; 0x2c
   1ca34:	mov	r4, r1
   1ca38:	b	19e70 <main@@Base+0x3dd4>
   1ca3c:	mov	r4, r6
   1ca40:	b	1e18c <main@@Base+0x80f0>
   1ca44:	mov	r0, sl
   1ca48:	mov	r1, r6
   1ca4c:	b	1df98 <main@@Base+0x7efc>
   1ca50:	cmp	r0, #93	; 0x5d
   1ca54:	bne	1dfa4 <main@@Base+0x7f08>
   1ca58:	ldr	r0, [sp, #52]	; 0x34
   1ca5c:	add	r1, r4, #1
   1ca60:	sub	r0, r0, r1
   1ca64:	cmp	r0, #2
   1ca68:	blt	1e17c <main@@Base+0x80e0>
   1ca6c:	b	1cc60 <main@@Base+0x6bc4>
   1ca70:	mov	r0, sl
   1ca74:	mov	r1, r6
   1ca78:	mov	r2, r6
   1ca7c:	b	1dfb0 <main@@Base+0x7f14>
   1ca80:	ldr	r6, [sp, #52]	; 0x34
   1ca84:	bne	1ca94 <main@@Base+0x69f8>
   1ca88:	ldrb	r0, [r4, #2]!
   1ca8c:	cmp	r0, #32
   1ca90:	bhi	1caa4 <main@@Base+0x6a08>
   1ca94:	ldr	r0, [sp, #44]	; 0x2c
   1ca98:	mov	r2, r6
   1ca9c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1caa0:	mov	r4, r0
   1caa4:	cmp	r4, r6
   1caa8:	mov	r3, r6
   1caac:	beq	1cb00 <main@@Base+0x6a64>
   1cab0:	ldrb	r0, [r4]
   1cab4:	cmp	r0, #125	; 0x7d
   1cab8:	bne	1cafc <main@@Base+0x6a60>
   1cabc:	ldr	r6, [sp, #52]	; 0x34
   1cac0:	ldr	sl, [sp, #44]	; 0x2c
   1cac4:	add	r1, r4, #1
   1cac8:	sub	r0, r6, r1
   1cacc:	cmp	r0, #2
   1cad0:	blt	1e394 <main@@Base+0x82f8>
   1cad4:	ldrb	r0, [r1]
   1cad8:	cmp	r0, #32
   1cadc:	bhi	1dc54 <main@@Base+0x7bb8>
   1cae0:	ldr	r6, [sp, #52]	; 0x34
   1cae4:	ldr	sl, [sp, #44]	; 0x2c
   1cae8:	bne	1e394 <main@@Base+0x82f8>
   1caec:	ldrb	r0, [r4, #2]!
   1caf0:	cmp	r0, #32
   1caf4:	bhi	19cf8 <main@@Base+0x3c5c>
   1caf8:	b	1e394 <main@@Base+0x82f8>
   1cafc:	mov	r3, r4
   1cb00:	ldr	r6, [sp, #52]	; 0x34
   1cb04:	ldr	sl, [sp, #44]	; 0x2c
   1cb08:	cmp	r3, r6
   1cb0c:	mov	r1, r6
   1cb10:	beq	1cb68 <main@@Base+0x6acc>
   1cb14:	ldrb	r0, [r3]
   1cb18:	cmp	r0, #46	; 0x2e
   1cb1c:	beq	1cb3c <main@@Base+0x6aa0>
   1cb20:	cmp	r0, #34	; 0x22
   1cb24:	bne	1cb58 <main@@Base+0x6abc>
   1cb28:	ldr	r0, [sp, #40]	; 0x28
   1cb2c:	mov	r1, #0
   1cb30:	str	r1, [r0]
   1cb34:	add	r1, r3, #1
   1cb38:	b	1cb68 <main@@Base+0x6acc>
   1cb3c:	mov	r1, r3
   1cb40:	mov	r0, sl
   1cb44:	mov	r2, r6
   1cb48:	mov	r3, #5
   1cb4c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1cb50:	mov	r1, r0
   1cb54:	b	1cb68 <main@@Base+0x6acc>
   1cb58:	ldr	r0, [sp, #40]	; 0x28
   1cb5c:	mov	r1, #1
   1cb60:	str	r1, [r0]
   1cb64:	mov	r1, r3
   1cb68:	mov	r0, sl
   1cb6c:	mov	r2, r6
   1cb70:	bl	376d0 <flatcc_json_parser_unmatched_symbol@@Base>
   1cb74:	mov	r2, r0
   1cb78:	sub	r0, r6, r0
   1cb7c:	cmp	r0, #2
   1cb80:	blt	1cbb4 <main@@Base+0x6b18>
   1cb84:	ldrb	r0, [r2]
   1cb88:	cmp	r0, #32
   1cb8c:	bls	1cba0 <main@@Base+0x6b04>
   1cb90:	mov	r3, r2
   1cb94:	cmp	r3, r6
   1cb98:	bne	1cbd0 <main@@Base+0x6b34>
   1cb9c:	b	1dc00 <main@@Base+0x7b64>
   1cba0:	bne	1cbb4 <main@@Base+0x6b18>
   1cba4:	mov	r3, r2
   1cba8:	ldrb	r0, [r3, #1]!
   1cbac:	cmp	r0, #32
   1cbb0:	bhi	1cbc8 <main@@Base+0x6b2c>
   1cbb4:	mov	r1, r2
   1cbb8:	mov	r0, sl
   1cbbc:	mov	r2, r6
   1cbc0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1cbc4:	mov	r3, r0
   1cbc8:	cmp	r3, r6
   1cbcc:	beq	1dc00 <main@@Base+0x7b64>
   1cbd0:	ldrb	r0, [r3]
   1cbd4:	cmp	r0, #44	; 0x2c
   1cbd8:	bne	1dc28 <main@@Base+0x7b8c>
   1cbdc:	add	r1, r3, #1
   1cbe0:	sub	r0, r6, r1
   1cbe4:	cmp	r0, #2
   1cbe8:	blt	1cc18 <main@@Base+0x6b7c>
   1cbec:	ldrb	r0, [r1]
   1cbf0:	cmp	r0, #32
   1cbf4:	bls	1cc08 <main@@Base+0x6b6c>
   1cbf8:	mov	r3, r1
   1cbfc:	cmp	r3, r6
   1cc00:	bne	1cc30 <main@@Base+0x6b94>
   1cc04:	b	1dcac <main@@Base+0x7c10>
   1cc08:	bne	1cc18 <main@@Base+0x6b7c>
   1cc0c:	ldrb	r0, [r3, #2]!
   1cc10:	cmp	r0, #32
   1cc14:	bhi	1cc28 <main@@Base+0x6b8c>
   1cc18:	mov	r0, sl
   1cc1c:	mov	r2, r6
   1cc20:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1cc24:	mov	r3, r0
   1cc28:	cmp	r3, r6
   1cc2c:	beq	1dcac <main@@Base+0x7c10>
   1cc30:	ldrb	r0, [r3]
   1cc34:	cmp	r0, #125	; 0x7d
   1cc38:	bne	1cb08 <main@@Base+0x6a6c>
   1cc3c:	add	r1, r3, #1
   1cc40:	sub	r0, r6, r1
   1cc44:	cmp	r0, #2
   1cc48:	bge	1dc48 <main@@Base+0x7bac>
   1cc4c:	b	1e394 <main@@Base+0x82f8>
   1cc50:	add	r1, r4, #1
   1cc54:	sub	r0, r6, r1
   1cc58:	cmp	r0, #2
   1cc5c:	blt	1e17c <main@@Base+0x80e0>
   1cc60:	ldrb	r0, [r1]
   1cc64:	cmp	r0, #32
   1cc68:	bls	1e16c <main@@Base+0x80d0>
   1cc6c:	mov	r4, r1
   1cc70:	b	1e18c <main@@Base+0x80f0>
   1cc74:	ldr	sl, [sp, #44]	; 0x2c
   1cc78:	ldr	r6, [sp, #52]	; 0x34
   1cc7c:	mov	r1, r7
   1cc80:	mov	r0, sl
   1cc84:	mov	r2, r6
   1cc88:	mov	r3, #9
   1cc8c:	b	1971c <main@@Base+0x3680>
   1cc90:	mov	r4, r6
   1cc94:	ldr	r0, [sp, #36]	; 0x24
   1cc98:	ldr	r0, [r0]
   1cc9c:	cmp	r0, #0
   1cca0:	bne	19508 <main@@Base+0x346c>
   1cca4:	b	1cf00 <main@@Base+0x6e64>
   1cca8:	bne	1ccb8 <main@@Base+0x6c1c>
   1ccac:	ldrb	r0, [r4, #2]!
   1ccb0:	cmp	r0, #32
   1ccb4:	bhi	1ccc8 <main@@Base+0x6c2c>
   1ccb8:	ldr	r0, [sp, #44]	; 0x2c
   1ccbc:	ldr	r2, [sp, #52]	; 0x34
   1ccc0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1ccc4:	mov	r4, r0
   1ccc8:	ldr	r7, [sp, #52]	; 0x34
   1cccc:	cmp	r4, r7
   1ccd0:	beq	1cd2c <main@@Base+0x6c90>
   1ccd4:	ldrb	r0, [r4]
   1ccd8:	cmp	r0, #93	; 0x5d
   1ccdc:	bne	1cd28 <main@@Base+0x6c8c>
   1cce0:	ldr	r0, [sp, #52]	; 0x34
   1cce4:	ldr	sl, [sp, #44]	; 0x2c
   1cce8:	add	r1, r4, #1
   1ccec:	sub	r0, r0, r1
   1ccf0:	cmp	r0, #2
   1ccf4:	blt	1cd18 <main@@Base+0x6c7c>
   1ccf8:	ldrb	r0, [r1]
   1ccfc:	cmp	r0, #32
   1cd00:	bhi	1e108 <main@@Base+0x806c>
   1cd04:	ldr	sl, [sp, #44]	; 0x2c
   1cd08:	bne	1cd18 <main@@Base+0x6c7c>
   1cd0c:	ldrb	r0, [r4, #2]!
   1cd10:	cmp	r0, #32
   1cd14:	bhi	1c48c <main@@Base+0x63f0>
   1cd18:	ldr	r2, [sp, #52]	; 0x34
   1cd1c:	mov	r0, sl
   1cd20:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1cd24:	b	1c488 <main@@Base+0x63ec>
   1cd28:	mov	r7, r4
   1cd2c:	mov	r0, #0
   1cd30:	mov	r1, #1
   1cd34:	str	r0, [fp, #-52]	; 0xffffffcc
   1cd38:	str	r0, [fp, #-56]	; 0xffffffc8
   1cd3c:	ldr	r0, [sp, #44]	; 0x2c
   1cd40:	ldr	r0, [r0]
   1cd44:	bl	31188 <flatcc_builder_extend_vector@@Base>
   1cd48:	cmp	r0, #0
   1cd4c:	beq	21954 <main@@Base+0xb8b8>
   1cd50:	ldr	r6, [sp, #52]	; 0x34
   1cd54:	ldr	sl, [sp, #44]	; 0x2c
   1cd58:	mov	r8, r0
   1cd5c:	mov	r4, r7
   1cd60:	mov	r0, sl
   1cd64:	mov	r1, r4
   1cd68:	mov	r2, r6
   1cd6c:	sub	r3, fp, #56	; 0x38
   1cd70:	bl	38758 <flatcc_json_parser_double@@Base>
   1cd74:	mov	r7, r0
   1cd78:	cmp	r4, r0
   1cd7c:	bne	1cdc0 <main@@Base+0x6d24>
   1cd80:	sub	r0, fp, #56	; 0x38
   1cd84:	mov	r1, r4
   1cd88:	mov	r2, r6
   1cd8c:	str	r0, [sp]
   1cd90:	movw	r0, #268	; 0x10c
   1cd94:	movt	r0, #6
   1cd98:	add	r3, r0, #96	; 0x60
   1cd9c:	mov	r0, sl
   1cda0:	bl	26a34 <main@@Base+0x10998>
   1cda4:	mov	r7, r0
   1cda8:	cmp	r0, r4
   1cdac:	beq	21954 <main@@Base+0xb8b8>
   1cdb0:	ldr	r6, [sp, #52]	; 0x34
   1cdb4:	ldr	sl, [sp, #44]	; 0x2c
   1cdb8:	cmp	r7, r6
   1cdbc:	beq	218cc <main@@Base+0xb830>
   1cdc0:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1cdc4:	sub	r0, r6, r7
   1cdc8:	cmp	r0, #2
   1cdcc:	vstr	d16, [r8]
   1cdd0:	blt	1ce04 <main@@Base+0x6d68>
   1cdd4:	ldrb	r0, [r7]
   1cdd8:	cmp	r0, #32
   1cddc:	bls	1cdf0 <main@@Base+0x6d54>
   1cde0:	mov	r4, r7
   1cde4:	cmp	r4, r6
   1cde8:	bne	1ce20 <main@@Base+0x6d84>
   1cdec:	b	1e04c <main@@Base+0x7fb0>
   1cdf0:	bne	1ce04 <main@@Base+0x6d68>
   1cdf4:	mov	r4, r7
   1cdf8:	ldrb	r0, [r4, #1]!
   1cdfc:	cmp	r0, #32
   1ce00:	bhi	1ce18 <main@@Base+0x6d7c>
   1ce04:	mov	r0, sl
   1ce08:	mov	r1, r7
   1ce0c:	mov	r2, r6
   1ce10:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1ce14:	mov	r4, r0
   1ce18:	cmp	r4, r6
   1ce1c:	beq	1e04c <main@@Base+0x7fb0>
   1ce20:	ldrb	r0, [r4]
   1ce24:	cmp	r0, #44	; 0x2c
   1ce28:	bne	1e058 <main@@Base+0x7fbc>
   1ce2c:	add	r1, r4, #1
   1ce30:	sub	r0, r6, r1
   1ce34:	cmp	r0, #2
   1ce38:	blt	1ce68 <main@@Base+0x6dcc>
   1ce3c:	ldrb	r0, [r1]
   1ce40:	cmp	r0, #32
   1ce44:	bls	1ce58 <main@@Base+0x6dbc>
   1ce48:	mov	r4, r1
   1ce4c:	cmp	r4, r6
   1ce50:	bne	1ce80 <main@@Base+0x6de4>
   1ce54:	b	1e094 <main@@Base+0x7ff8>
   1ce58:	bne	1ce68 <main@@Base+0x6dcc>
   1ce5c:	ldrb	r0, [r4, #2]!
   1ce60:	cmp	r0, #32
   1ce64:	bhi	1ce78 <main@@Base+0x6ddc>
   1ce68:	mov	r0, sl
   1ce6c:	mov	r2, r6
   1ce70:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1ce74:	mov	r4, r0
   1ce78:	cmp	r4, r6
   1ce7c:	beq	1e094 <main@@Base+0x7ff8>
   1ce80:	ldrb	r0, [r4]
   1ce84:	cmp	r0, #93	; 0x5d
   1ce88:	beq	1e0ec <main@@Base+0x8050>
   1ce8c:	mov	r0, #0
   1ce90:	mov	r1, #1
   1ce94:	str	r0, [fp, #-52]	; 0xffffffcc
   1ce98:	str	r0, [fp, #-56]	; 0xffffffc8
   1ce9c:	ldr	r0, [sl]
   1cea0:	bl	31188 <flatcc_builder_extend_vector@@Base>
   1cea4:	mov	r8, r0
   1cea8:	cmp	r0, #0
   1ceac:	mov	r7, r4
   1ceb0:	bne	1cd60 <main@@Base+0x6cc4>
   1ceb4:	b	218cc <main@@Base+0xb830>
   1ceb8:	cmp	r0, #125	; 0x7d
   1cebc:	bne	1e0d0 <main@@Base+0x8034>
   1cec0:	ldr	r6, [sp, #52]	; 0x34
   1cec4:	ldr	sl, [sp, #44]	; 0x2c
   1cec8:	add	r1, r2, #1
   1cecc:	sub	r0, r6, r1
   1ced0:	cmp	r0, #2
   1ced4:	blt	1e2a8 <main@@Base+0x820c>
   1ced8:	ldrb	r0, [r1]
   1cedc:	cmp	r0, #32
   1cee0:	bls	1e28c <main@@Base+0x81f0>
   1cee4:	ldr	r6, [sp, #52]	; 0x34
   1cee8:	ldr	sl, [sp, #44]	; 0x2c
   1ceec:	mov	r4, r1
   1cef0:	ldr	r0, [sp, #36]	; 0x24
   1cef4:	ldr	r0, [r0]
   1cef8:	cmp	r0, #0
   1cefc:	bne	19508 <main@@Base+0x346c>
   1cf00:	ldr	r0, [sl]
   1cf04:	bl	32c44 <flatcc_builder_end_table@@Base>
   1cf08:	cmp	r0, #0
   1cf0c:	str	r0, [sp, #60]	; 0x3c
   1cf10:	bne	1952c <main@@Base+0x3490>
   1cf14:	b	19508 <main@@Base+0x346c>
   1cf18:	mov	r0, sl
   1cf1c:	mov	r1, r6
   1cf20:	b	1e0e0 <main@@Base+0x8044>
   1cf24:	ldr	r6, [sp, #52]	; 0x34
   1cf28:	ldr	sl, [sp, #44]	; 0x2c
   1cf2c:	bne	1cf3c <main@@Base+0x6ea0>
   1cf30:	ldrb	r0, [r7, #2]!
   1cf34:	cmp	r0, #32
   1cf38:	bhi	1cf4c <main@@Base+0x6eb0>
   1cf3c:	mov	r0, sl
   1cf40:	mov	r2, r6
   1cf44:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1cf48:	mov	r7, r0
   1cf4c:	cmp	r4, r7
   1cf50:	beq	1d0c8 <main@@Base+0x702c>
   1cf54:	mov	r2, r6
   1cf58:	mov	r6, #0
   1cf5c:	cmp	r7, r2
   1cf60:	str	r6, [fp, #-52]	; 0xffffffcc
   1cf64:	str	r6, [fp, #-56]	; 0xffffffc8
   1cf68:	str	r6, [fp, #-60]	; 0xffffffc4
   1cf6c:	str	r6, [sp, #64]	; 0x40
   1cf70:	beq	1cfc8 <main@@Base+0x6f2c>
   1cf74:	sub	r0, fp, #56	; 0x38
   1cf78:	mov	r1, r7
   1cf7c:	add	r3, sp, #64	; 0x40
   1cf80:	str	r0, [sp]
   1cf84:	ldr	r0, [sp, #44]	; 0x2c
   1cf88:	bl	392f4 <flatcc_json_parser_integer@@Base>
   1cf8c:	cmp	r0, r7
   1cf90:	beq	1cfd8 <main@@Base+0x6f3c>
   1cf94:	mov	r4, r0
   1cf98:	ldr	r0, [sp, #64]	; 0x40
   1cf9c:	cmp	r0, #0
   1cfa0:	beq	1cfe8 <main@@Base+0x6f4c>
   1cfa4:	ldr	r0, [sp, #44]	; 0x2c
   1cfa8:	ldr	r2, [sp, #52]	; 0x34
   1cfac:	mov	r1, r4
   1cfb0:	mov	r3, #8
   1cfb4:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1cfb8:	mov	r4, r0
   1cfbc:	cmp	r7, r4
   1cfc0:	bne	1e008 <main@@Base+0x7f6c>
   1cfc4:	b	1dfcc <main@@Base+0x7f30>
   1cfc8:	mov	r4, r2
   1cfcc:	cmp	r7, r4
   1cfd0:	bne	1e008 <main@@Base+0x7f6c>
   1cfd4:	b	1dfcc <main@@Base+0x7f30>
   1cfd8:	mov	r4, r7
   1cfdc:	cmp	r7, r4
   1cfe0:	bne	1e008 <main@@Base+0x7f6c>
   1cfe4:	b	1dfcc <main@@Base+0x7f30>
   1cfe8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1cfec:	cmp	r0, #0
   1cff0:	beq	1dfbc <main@@Base+0x7f20>
   1cff4:	ldr	r0, [sp, #44]	; 0x2c
   1cff8:	ldr	r2, [sp, #52]	; 0x34
   1cffc:	mov	r1, r4
   1d000:	mov	r3, #7
   1d004:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1d008:	mov	r4, r0
   1d00c:	cmp	r7, r4
   1d010:	bne	1e008 <main@@Base+0x7f6c>
   1d014:	b	1dfcc <main@@Base+0x7f30>
   1d018:	ldr	r6, [sp, #52]	; 0x34
   1d01c:	ldr	sl, [sp, #44]	; 0x2c
   1d020:	bne	1d030 <main@@Base+0x6f94>
   1d024:	ldrb	r0, [r7, #2]!
   1d028:	cmp	r0, #32
   1d02c:	bhi	1d040 <main@@Base+0x6fa4>
   1d030:	mov	r0, sl
   1d034:	mov	r2, r6
   1d038:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1d03c:	mov	r7, r0
   1d040:	cmp	r4, r7
   1d044:	beq	1d0c8 <main@@Base+0x702c>
   1d048:	mov	r2, r6
   1d04c:	mov	r6, #0
   1d050:	cmp	r7, r2
   1d054:	str	r6, [fp, #-52]	; 0xffffffcc
   1d058:	str	r6, [fp, #-56]	; 0xffffffc8
   1d05c:	str	r6, [sp, #68]	; 0x44
   1d060:	str	r6, [sp, #64]	; 0x40
   1d064:	str	r6, [fp, #-60]	; 0xffffffc4
   1d068:	beq	1d0d4 <main@@Base+0x7038>
   1d06c:	sub	r0, fp, #56	; 0x38
   1d070:	mov	r1, r7
   1d074:	sub	r3, fp, #60	; 0x3c
   1d078:	str	r0, [sp]
   1d07c:	ldr	r0, [sp, #44]	; 0x2c
   1d080:	bl	392f4 <flatcc_json_parser_integer@@Base>
   1d084:	cmp	r0, r7
   1d088:	beq	1d0e8 <main@@Base+0x704c>
   1d08c:	mov	r4, r0
   1d090:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1d094:	cmp	r0, #0
   1d098:	beq	1d100 <main@@Base+0x7064>
   1d09c:	ldr	r0, [sp, #44]	; 0x2c
   1d0a0:	ldr	r2, [sp, #52]	; 0x34
   1d0a4:	mov	r1, r4
   1d0a8:	mov	r3, #8
   1d0ac:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1d0b0:	mov	r4, r0
   1d0b4:	mov	r6, #0
   1d0b8:	mov	r5, #0
   1d0bc:	cmp	r7, r4
   1d0c0:	bne	1d158 <main@@Base+0x70bc>
   1d0c4:	b	1d118 <main@@Base+0x707c>
   1d0c8:	mov	r0, sl
   1d0cc:	mov	r1, r4
   1d0d0:	b	21754 <main@@Base+0xb6b8>
   1d0d4:	mov	r5, #0
   1d0d8:	mov	r4, r2
   1d0dc:	cmp	r7, r4
   1d0e0:	bne	1d158 <main@@Base+0x70bc>
   1d0e4:	b	1d118 <main@@Base+0x707c>
   1d0e8:	mov	r6, #0
   1d0ec:	mov	r5, #0
   1d0f0:	mov	r4, r7
   1d0f4:	cmp	r7, r4
   1d0f8:	bne	1d158 <main@@Base+0x70bc>
   1d0fc:	b	1d118 <main@@Base+0x707c>
   1d100:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1d104:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1d108:	str	r5, [sp, #68]	; 0x44
   1d10c:	str	r6, [sp, #64]	; 0x40
   1d110:	cmp	r7, r4
   1d114:	bne	1d158 <main@@Base+0x70bc>
   1d118:	add	r0, sp, #64	; 0x40
   1d11c:	ldr	r2, [sp, #52]	; 0x34
   1d120:	mov	r1, r7
   1d124:	str	r0, [sp]
   1d128:	movw	r0, #268	; 0x10c
   1d12c:	movt	r0, #6
   1d130:	add	r3, r0, #72	; 0x48
   1d134:	ldr	r0, [sp, #44]	; 0x2c
   1d138:	bl	26804 <main@@Base+0x10768>
   1d13c:	cmp	r0, r7
   1d140:	mov	r4, r0
   1d144:	ldrne	r0, [sp, #52]	; 0x34
   1d148:	cmpne	r4, r0
   1d14c:	beq	21968 <main@@Base+0xb8cc>
   1d150:	ldr	r6, [sp, #64]	; 0x40
   1d154:	ldr	r5, [sp, #68]	; 0x44
   1d158:	ldr	sl, [sp, #44]	; 0x2c
   1d15c:	orrs	r0, r6, r5
   1d160:	bne	1d170 <main@@Base+0x70d4>
   1d164:	ldrb	r0, [sl, #8]
   1d168:	tst	r0, #2
   1d16c:	beq	1c9f0 <main@@Base+0x6954>
   1d170:	ldr	r0, [sl]
   1d174:	mov	r1, #23
   1d178:	mov	r2, #8
   1d17c:	mov	r3, #8
   1d180:	bl	33604 <flatcc_builder_table_add@@Base>
   1d184:	cmp	r0, #0
   1d188:	beq	21968 <main@@Base+0xb8cc>
   1d18c:	str	r6, [r0]
   1d190:	str	r5, [r0, #4]
   1d194:	b	1e040 <main@@Base+0x7fa4>
   1d198:	mov	r4, r6
   1d19c:	b	1a684 <main@@Base+0x45e8>
   1d1a0:	bne	1d1b0 <main@@Base+0x7114>
   1d1a4:	ldrb	r0, [r4, #2]!
   1d1a8:	cmp	r0, #32
   1d1ac:	bhi	1d1c0 <main@@Base+0x7124>
   1d1b0:	ldr	r0, [sp, #44]	; 0x2c
   1d1b4:	ldr	r2, [sp, #52]	; 0x34
   1d1b8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1d1bc:	mov	r4, r0
   1d1c0:	ldr	r2, [sp, #52]	; 0x34
   1d1c4:	cmp	r4, r2
   1d1c8:	beq	1d210 <main@@Base+0x7174>
   1d1cc:	ldrb	r0, [r4]
   1d1d0:	cmp	r0, #125	; 0x7d
   1d1d4:	bne	1d20c <main@@Base+0x7170>
   1d1d8:	ldr	r0, [sp, #52]	; 0x34
   1d1dc:	add	r1, r4, #1
   1d1e0:	sub	r0, r0, r1
   1d1e4:	cmp	r0, #2
   1d1e8:	blt	1e400 <main@@Base+0x8364>
   1d1ec:	ldrb	r0, [r1]
   1d1f0:	cmp	r0, #32
   1d1f4:	bhi	1e1f0 <main@@Base+0x8154>
   1d1f8:	bne	1e400 <main@@Base+0x8364>
   1d1fc:	ldrb	r0, [r4, #2]!
   1d200:	cmp	r0, #32
   1d204:	bhi	1a1c0 <main@@Base+0x4124>
   1d208:	b	1e400 <main@@Base+0x8364>
   1d20c:	mov	r2, r4
   1d210:	ldr	r5, [sp, #52]	; 0x34
   1d214:	ldr	sl, [sp, #44]	; 0x2c
   1d218:	cmp	r2, r5
   1d21c:	mov	r8, r5
   1d220:	beq	1d274 <main@@Base+0x71d8>
   1d224:	ldrb	r0, [r2]
   1d228:	cmp	r0, #46	; 0x2e
   1d22c:	beq	1d248 <main@@Base+0x71ac>
   1d230:	cmp	r0, #34	; 0x22
   1d234:	bne	1d264 <main@@Base+0x71c8>
   1d238:	ldr	r0, [sp, #40]	; 0x28
   1d23c:	mov	r1, #0
   1d240:	add	r8, r2, #1
   1d244:	b	1d270 <main@@Base+0x71d4>
   1d248:	mov	r1, r2
   1d24c:	mov	r0, sl
   1d250:	mov	r2, r5
   1d254:	mov	r3, #5
   1d258:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1d25c:	mov	r8, r0
   1d260:	b	1d274 <main@@Base+0x71d8>
   1d264:	ldr	r0, [sp, #40]	; 0x28
   1d268:	mov	r1, #1
   1d26c:	mov	r8, r2
   1d270:	str	r1, [r0]
   1d274:	sub	lr, r5, r8
   1d278:	mov	r0, #8
   1d27c:	cmp	lr, #8
   1d280:	movcc	r0, lr
   1d284:	and	r0, r0, #15
   1d288:	sub	r7, r0, #1
   1d28c:	cmp	r7, #7
   1d290:	bhi	1da84 <main@@Base+0x79e8>
   1d294:	add	r4, pc, #32
   1d298:	mov	r1, #0
   1d29c:	mov	ip, #0
   1d2a0:	mov	r9, #0
   1d2a4:	mov	r6, #0
   1d2a8:	mov	r3, #0
   1d2ac:	mov	r5, #0
   1d2b0:	mov	r2, #0
   1d2b4:	mov	r0, #0
   1d2b8:	ldr	pc, [r4, r7, lsl #2]
   1d2bc:	andeq	sp, r1, r0, lsr #6
   1d2c0:	andeq	sp, r1, r8, lsl r3
   1d2c4:	andeq	sp, r1, r0, lsl r3
   1d2c8:	andeq	sp, r1, r8, lsl #6
   1d2cc:	strdeq	sp, [r1], -ip
   1d2d0:	strdeq	sp, [r1], -r0
   1d2d4:	andeq	sp, r1, r0, ror #5
   1d2d8:	ldrdeq	sp, [r1], -ip
   1d2dc:	ldrb	ip, [r8, #7]
   1d2e0:	ldrb	r0, [r8, #6]
   1d2e4:	mov	r9, r1
   1d2e8:	orr	r0, ip, r0, lsl #8
   1d2ec:	mov	r1, r0
   1d2f0:	ldrb	r0, [r8, #5]
   1d2f4:	mov	r6, r9
   1d2f8:	orr	r1, r1, r0, lsl #16
   1d2fc:	ldrb	r0, [r8, #4]
   1d300:	mov	r3, r6
   1d304:	orr	r1, r1, r0, lsl #24
   1d308:	ldrb	r0, [r8, #3]
   1d30c:	orr	r5, r0, r3
   1d310:	ldrb	r0, [r8, #2]
   1d314:	orr	r2, r5, r0, lsl #8
   1d318:	ldrb	r0, [r8, #1]
   1d31c:	orr	r0, r2, r0, lsl #16
   1d320:	ldrb	r2, [r8]
   1d324:	orr	r2, r0, r2, lsl #24
   1d328:	movw	r0, #65535	; 0xffff
   1d32c:	movt	r0, #26979	; 0x6963
   1d330:	cmp	r2, r0
   1d334:	bhi	1d3ac <main@@Base+0x7310>
   1d338:	movw	r0, #30062	; 0x756e
   1d33c:	and	r1, r1, #-16777216	; 0xff000000
   1d340:	movt	r0, #25455	; 0x636f
   1d344:	eor	r1, r1, #1946157056	; 0x74000000
   1d348:	eor	r0, r2, r0
   1d34c:	orrs	r0, r1, r0
   1d350:	bne	1da84 <main@@Base+0x79e8>
   1d354:	cmp	lr, #6
   1d358:	mov	r7, r8
   1d35c:	blt	1d6f0 <main@@Base+0x7654>
   1d360:	ldr	r2, [sp, #40]	; 0x28
   1d364:	mov	r1, r8
   1d368:	ldrb	r0, [r1, #5]!
   1d36c:	ldr	r2, [r2]
   1d370:	cmp	r2, #0
   1d374:	beq	1d484 <main@@Base+0x73e8>
   1d378:	cmp	r0, #33	; 0x21
   1d37c:	bcc	1d38c <main@@Base+0x72f0>
   1d380:	cmp	r0, #58	; 0x3a
   1d384:	mov	r7, r8
   1d388:	bne	1d6f0 <main@@Base+0x7654>
   1d38c:	ldr	r0, [sp, #40]	; 0x28
   1d390:	mov	r2, #0
   1d394:	str	r2, [r0]
   1d398:	ldr	r0, [sp, #52]	; 0x34
   1d39c:	sub	r0, r0, r1
   1d3a0:	cmp	r0, #2
   1d3a4:	bge	1d4a4 <main@@Base+0x7408>
   1d3a8:	b	1d558 <main@@Base+0x74bc>
   1d3ac:	movw	r1, #27648	; 0x6c00
   1d3b0:	bic	r0, r2, #255	; 0xff
   1d3b4:	movt	r1, #30305	; 0x7661
   1d3b8:	teq	r0, r1
   1d3bc:	bne	1d418 <main@@Base+0x737c>
   1d3c0:	cmp	lr, #4
   1d3c4:	mov	r7, r8
   1d3c8:	blt	1d878 <main@@Base+0x77dc>
   1d3cc:	ldr	r2, [sp, #40]	; 0x28
   1d3d0:	mov	r1, r8
   1d3d4:	ldrb	r0, [r1, #3]!
   1d3d8:	ldr	r2, [r2]
   1d3dc:	cmp	r2, #0
   1d3e0:	beq	1d4c4 <main@@Base+0x7428>
   1d3e4:	cmp	r0, #33	; 0x21
   1d3e8:	bcc	1d3f8 <main@@Base+0x735c>
   1d3ec:	cmp	r0, #58	; 0x3a
   1d3f0:	mov	r7, r8
   1d3f4:	bne	1d878 <main@@Base+0x77dc>
   1d3f8:	ldr	r0, [sp, #40]	; 0x28
   1d3fc:	mov	r2, #0
   1d400:	str	r2, [r0]
   1d404:	ldr	r0, [sp, #52]	; 0x34
   1d408:	sub	r0, r0, r1
   1d40c:	cmp	r0, #2
   1d410:	bge	1d4e4 <main@@Base+0x7448>
   1d414:	b	1d5dc <main@@Base+0x7540>
   1d418:	movw	r0, #0
   1d41c:	bfc	r2, #0, #16
   1d420:	movt	r0, #26980	; 0x6964
   1d424:	teq	r2, r0
   1d428:	bne	1da80 <main@@Base+0x79e4>
   1d42c:	cmp	lr, #3
   1d430:	mov	r1, r8
   1d434:	blt	1da20 <main@@Base+0x7984>
   1d438:	ldr	r1, [sp, #40]	; 0x28
   1d43c:	mov	r2, r8
   1d440:	ldrb	r0, [r2, #2]!
   1d444:	ldr	r1, [r1]
   1d448:	cmp	r1, #0
   1d44c:	beq	1d504 <main@@Base+0x7468>
   1d450:	cmp	r0, #33	; 0x21
   1d454:	bcc	1d464 <main@@Base+0x73c8>
   1d458:	cmp	r0, #58	; 0x3a
   1d45c:	mov	r1, r8
   1d460:	bne	1da20 <main@@Base+0x7984>
   1d464:	ldr	r0, [sp, #40]	; 0x28
   1d468:	mov	r1, #0
   1d46c:	str	r1, [r0]
   1d470:	ldr	r0, [sp, #52]	; 0x34
   1d474:	sub	r0, r0, r2
   1d478:	cmp	r0, #2
   1d47c:	bge	1d524 <main@@Base+0x7488>
   1d480:	b	1d660 <main@@Base+0x75c4>
   1d484:	cmp	r0, #34	; 0x22
   1d488:	mov	r7, r8
   1d48c:	bne	1d6f0 <main@@Base+0x7654>
   1d490:	add	r1, r8, #6
   1d494:	ldr	r0, [sp, #52]	; 0x34
   1d498:	sub	r0, r0, r1
   1d49c:	cmp	r0, #2
   1d4a0:	blt	1d558 <main@@Base+0x74bc>
   1d4a4:	ldrb	r0, [r1]
   1d4a8:	cmp	r0, #32
   1d4ac:	bls	1d544 <main@@Base+0x74a8>
   1d4b0:	mov	r7, r1
   1d4b4:	ldr	r0, [sp, #52]	; 0x34
   1d4b8:	cmp	r7, r0
   1d4bc:	bne	1d574 <main@@Base+0x74d8>
   1d4c0:	b	1d5b0 <main@@Base+0x7514>
   1d4c4:	cmp	r0, #34	; 0x22
   1d4c8:	mov	r7, r8
   1d4cc:	bne	1d878 <main@@Base+0x77dc>
   1d4d0:	add	r1, r8, #4
   1d4d4:	ldr	r0, [sp, #52]	; 0x34
   1d4d8:	sub	r0, r0, r1
   1d4dc:	cmp	r0, #2
   1d4e0:	blt	1d5dc <main@@Base+0x7540>
   1d4e4:	ldrb	r0, [r1]
   1d4e8:	cmp	r0, #32
   1d4ec:	bls	1d5c8 <main@@Base+0x752c>
   1d4f0:	mov	r7, r1
   1d4f4:	ldr	r0, [sp, #52]	; 0x34
   1d4f8:	cmp	r7, r0
   1d4fc:	bne	1d5f8 <main@@Base+0x755c>
   1d500:	b	1d634 <main@@Base+0x7598>
   1d504:	cmp	r0, #34	; 0x22
   1d508:	mov	r1, r8
   1d50c:	bne	1da20 <main@@Base+0x7984>
   1d510:	add	r2, r8, #3
   1d514:	ldr	r0, [sp, #52]	; 0x34
   1d518:	sub	r0, r0, r2
   1d51c:	cmp	r0, #2
   1d520:	blt	1d660 <main@@Base+0x75c4>
   1d524:	ldrb	r0, [r2]
   1d528:	cmp	r0, #32
   1d52c:	bls	1d64c <main@@Base+0x75b0>
   1d530:	mov	r1, r2
   1d534:	ldr	r0, [sp, #52]	; 0x34
   1d538:	cmp	r1, r0
   1d53c:	bne	1d680 <main@@Base+0x75e4>
   1d540:	b	1d6bc <main@@Base+0x7620>
   1d544:	bne	1d558 <main@@Base+0x74bc>
   1d548:	mov	r7, r1
   1d54c:	ldrb	r0, [r7, #1]!
   1d550:	cmp	r0, #32
   1d554:	bhi	1d568 <main@@Base+0x74cc>
   1d558:	ldr	r0, [sp, #44]	; 0x2c
   1d55c:	ldr	r2, [sp, #52]	; 0x34
   1d560:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1d564:	mov	r7, r0
   1d568:	ldr	r0, [sp, #52]	; 0x34
   1d56c:	cmp	r7, r0
   1d570:	beq	1d5b0 <main@@Base+0x7514>
   1d574:	ldrb	r0, [r7]
   1d578:	cmp	r0, #58	; 0x3a
   1d57c:	bne	1d5b0 <main@@Base+0x7514>
   1d580:	ldr	r0, [sp, #52]	; 0x34
   1d584:	add	r1, r7, #1
   1d588:	sub	r0, r0, r1
   1d58c:	cmp	r0, #2
   1d590:	blt	1d6e0 <main@@Base+0x7644>
   1d594:	ldrb	r0, [r1]
   1d598:	cmp	r0, #32
   1d59c:	bls	1d6d0 <main@@Base+0x7634>
   1d5a0:	mov	r7, r1
   1d5a4:	cmp	r8, r7
   1d5a8:	bne	1d6f8 <main@@Base+0x765c>
   1d5ac:	b	1da80 <main@@Base+0x79e4>
   1d5b0:	ldr	r0, [sp, #44]	; 0x2c
   1d5b4:	ldr	r2, [sp, #52]	; 0x34
   1d5b8:	mov	r1, r7
   1d5bc:	mov	r3, #4
   1d5c0:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1d5c4:	b	1d6ec <main@@Base+0x7650>
   1d5c8:	bne	1d5dc <main@@Base+0x7540>
   1d5cc:	mov	r7, r1
   1d5d0:	ldrb	r0, [r7, #1]!
   1d5d4:	cmp	r0, #32
   1d5d8:	bhi	1d5ec <main@@Base+0x7550>
   1d5dc:	ldr	r0, [sp, #44]	; 0x2c
   1d5e0:	ldr	r2, [sp, #52]	; 0x34
   1d5e4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1d5e8:	mov	r7, r0
   1d5ec:	ldr	r0, [sp, #52]	; 0x34
   1d5f0:	cmp	r7, r0
   1d5f4:	beq	1d634 <main@@Base+0x7598>
   1d5f8:	ldrb	r0, [r7]
   1d5fc:	cmp	r0, #58	; 0x3a
   1d600:	bne	1d634 <main@@Base+0x7598>
   1d604:	ldr	r0, [sp, #52]	; 0x34
   1d608:	add	r1, r7, #1
   1d60c:	sub	r0, r0, r1
   1d610:	cmp	r0, #2
   1d614:	blt	1d868 <main@@Base+0x77cc>
   1d618:	ldrb	r0, [r1]
   1d61c:	cmp	r0, #32
   1d620:	bls	1d858 <main@@Base+0x77bc>
   1d624:	mov	r7, r1
   1d628:	cmp	r8, r7
   1d62c:	bne	1d880 <main@@Base+0x77e4>
   1d630:	b	1da80 <main@@Base+0x79e4>
   1d634:	ldr	r0, [sp, #44]	; 0x2c
   1d638:	ldr	r2, [sp, #52]	; 0x34
   1d63c:	mov	r1, r7
   1d640:	mov	r3, #4
   1d644:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1d648:	b	1d874 <main@@Base+0x77d8>
   1d64c:	bne	1d660 <main@@Base+0x75c4>
   1d650:	mov	r1, r2
   1d654:	ldrb	r0, [r1, #1]!
   1d658:	cmp	r0, #32
   1d65c:	bhi	1d674 <main@@Base+0x75d8>
   1d660:	mov	r1, r2
   1d664:	ldr	r0, [sp, #44]	; 0x2c
   1d668:	ldr	r2, [sp, #52]	; 0x34
   1d66c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1d670:	mov	r1, r0
   1d674:	ldr	r0, [sp, #52]	; 0x34
   1d678:	cmp	r1, r0
   1d67c:	beq	1d6bc <main@@Base+0x7620>
   1d680:	ldrb	r0, [r1]
   1d684:	cmp	r0, #58	; 0x3a
   1d688:	bne	1d6bc <main@@Base+0x7620>
   1d68c:	ldr	r0, [sp, #52]	; 0x34
   1d690:	add	r2, r1, #1
   1d694:	sub	r0, r0, r2
   1d698:	cmp	r0, #2
   1d69c:	blt	1da0c <main@@Base+0x7970>
   1d6a0:	ldrb	r0, [r2]
   1d6a4:	cmp	r0, #32
   1d6a8:	bls	1d9fc <main@@Base+0x7960>
   1d6ac:	mov	r1, r2
   1d6b0:	cmp	r8, r1
   1d6b4:	bne	1da28 <main@@Base+0x798c>
   1d6b8:	b	1da80 <main@@Base+0x79e4>
   1d6bc:	ldr	r0, [sp, #44]	; 0x2c
   1d6c0:	ldr	r2, [sp, #52]	; 0x34
   1d6c4:	mov	r3, #4
   1d6c8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1d6cc:	b	1da1c <main@@Base+0x7980>
   1d6d0:	bne	1d6e0 <main@@Base+0x7644>
   1d6d4:	ldrb	r0, [r7, #2]!
   1d6d8:	cmp	r0, #32
   1d6dc:	bhi	1d6f0 <main@@Base+0x7654>
   1d6e0:	ldr	r0, [sp, #44]	; 0x2c
   1d6e4:	ldr	r2, [sp, #52]	; 0x34
   1d6e8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1d6ec:	mov	r7, r0
   1d6f0:	cmp	r8, r7
   1d6f4:	beq	1da80 <main@@Base+0x79e4>
   1d6f8:	ldr	r0, [sp, #52]	; 0x34
   1d6fc:	mov	r6, #0
   1d700:	str	r6, [fp, #-52]	; 0xffffffcc
   1d704:	str	r6, [fp, #-56]	; 0xffffffc8
   1d708:	strh	r6, [fp, #-60]	; 0xffffffc4
   1d70c:	str	r6, [sp, #64]	; 0x40
   1d710:	cmp	r7, r0
   1d714:	beq	1d770 <main@@Base+0x76d4>
   1d718:	sub	r0, fp, #56	; 0x38
   1d71c:	ldr	r2, [sp, #52]	; 0x34
   1d720:	mov	r1, r7
   1d724:	add	r3, sp, #64	; 0x40
   1d728:	str	r0, [sp]
   1d72c:	ldr	r0, [sp, #44]	; 0x2c
   1d730:	bl	392f4 <flatcc_json_parser_integer@@Base>
   1d734:	cmp	r0, r7
   1d738:	beq	1d780 <main@@Base+0x76e4>
   1d73c:	mov	r4, r0
   1d740:	ldr	r0, [sp, #64]	; 0x40
   1d744:	cmp	r0, #0
   1d748:	beq	1d790 <main@@Base+0x76f4>
   1d74c:	ldr	r0, [sp, #44]	; 0x2c
   1d750:	ldr	r2, [sp, #52]	; 0x34
   1d754:	mov	r1, r4
   1d758:	mov	r3, #8
   1d75c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1d760:	mov	r4, r0
   1d764:	cmp	r7, r4
   1d768:	bne	1d814 <main@@Base+0x7778>
   1d76c:	b	1d7d8 <main@@Base+0x773c>
   1d770:	ldr	r4, [sp, #52]	; 0x34
   1d774:	cmp	r7, r4
   1d778:	bne	1d814 <main@@Base+0x7778>
   1d77c:	b	1d7d8 <main@@Base+0x773c>
   1d780:	mov	r4, r7
   1d784:	cmp	r7, r4
   1d788:	bne	1d814 <main@@Base+0x7778>
   1d78c:	b	1d7d8 <main@@Base+0x773c>
   1d790:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d794:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1d798:	subs	r2, r0, #65536	; 0x10000
   1d79c:	sbcs	r1, r1, #0
   1d7a0:	bcc	1d7c8 <main@@Base+0x772c>
   1d7a4:	ldr	r0, [sp, #44]	; 0x2c
   1d7a8:	ldr	r2, [sp, #52]	; 0x34
   1d7ac:	mov	r1, r4
   1d7b0:	mov	r3, #7
   1d7b4:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1d7b8:	mov	r4, r0
   1d7bc:	cmp	r7, r4
   1d7c0:	bne	1d814 <main@@Base+0x7778>
   1d7c4:	b	1d7d8 <main@@Base+0x773c>
   1d7c8:	mov	r6, r0
   1d7cc:	strh	r0, [fp, #-60]	; 0xffffffc4
   1d7d0:	cmp	r7, r4
   1d7d4:	bne	1d814 <main@@Base+0x7778>
   1d7d8:	sub	r0, fp, #60	; 0x3c
   1d7dc:	ldr	r2, [sp, #52]	; 0x34
   1d7e0:	mov	r1, r7
   1d7e4:	str	r0, [sp]
   1d7e8:	movw	r0, #628	; 0x274
   1d7ec:	movt	r0, #6
   1d7f0:	add	r3, r0, #24
   1d7f4:	ldr	r0, [sp, #44]	; 0x2c
   1d7f8:	bl	2e944 <main@@Base+0x188a8>
   1d7fc:	cmp	r0, r7
   1d800:	mov	r4, r0
   1d804:	ldrne	r0, [sp, #52]	; 0x34
   1d808:	cmpne	r4, r0
   1d80c:	beq	1a1d0 <main@@Base+0x4134>
   1d810:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   1d814:	movw	r0, #65535	; 0xffff
   1d818:	tst	r6, r0
   1d81c:	bne	1d830 <main@@Base+0x7794>
   1d820:	ldr	r0, [sp, #44]	; 0x2c
   1d824:	ldrb	r0, [r0, #8]
   1d828:	tst	r0, #2
   1d82c:	beq	1da68 <main@@Base+0x79cc>
   1d830:	ldr	r0, [sp, #44]	; 0x2c
   1d834:	mov	r1, #2
   1d838:	mov	r2, #2
   1d83c:	mov	r3, #2
   1d840:	ldr	r0, [r0]
   1d844:	bl	33604 <flatcc_builder_table_add@@Base>
   1d848:	cmp	r0, #0
   1d84c:	beq	1a1d0 <main@@Base+0x4134>
   1d850:	strh	r6, [r0]
   1d854:	b	1da68 <main@@Base+0x79cc>
   1d858:	bne	1d868 <main@@Base+0x77cc>
   1d85c:	ldrb	r0, [r7, #2]!
   1d860:	cmp	r0, #32
   1d864:	bhi	1d878 <main@@Base+0x77dc>
   1d868:	ldr	r0, [sp, #44]	; 0x2c
   1d86c:	ldr	r2, [sp, #52]	; 0x34
   1d870:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1d874:	mov	r7, r0
   1d878:	cmp	r8, r7
   1d87c:	beq	1da80 <main@@Base+0x79e4>
   1d880:	ldr	r0, [sp, #52]	; 0x34
   1d884:	mov	r6, #0
   1d888:	str	r6, [fp, #-52]	; 0xffffffcc
   1d88c:	str	r6, [fp, #-56]	; 0xffffffc8
   1d890:	str	r6, [sp, #68]	; 0x44
   1d894:	str	r6, [sp, #64]	; 0x40
   1d898:	str	r6, [fp, #-60]	; 0xffffffc4
   1d89c:	cmp	r7, r0
   1d8a0:	beq	1d900 <main@@Base+0x7864>
   1d8a4:	sub	r0, fp, #56	; 0x38
   1d8a8:	ldr	r2, [sp, #52]	; 0x34
   1d8ac:	mov	r1, r7
   1d8b0:	sub	r3, fp, #60	; 0x3c
   1d8b4:	str	r0, [sp]
   1d8b8:	ldr	r0, [sp, #44]	; 0x2c
   1d8bc:	bl	392f4 <flatcc_json_parser_integer@@Base>
   1d8c0:	cmp	r0, r7
   1d8c4:	beq	1d914 <main@@Base+0x7878>
   1d8c8:	mov	r4, r0
   1d8cc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1d8d0:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1d8d4:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1d8d8:	cmp	r0, #0
   1d8dc:	beq	1d92c <main@@Base+0x7890>
   1d8e0:	subs	r0, r6, #1
   1d8e4:	sbcs	r0, r5, #-2147483648	; 0x80000000
   1d8e8:	bcc	1d960 <main@@Base+0x78c4>
   1d8ec:	ldr	r0, [sp, #44]	; 0x2c
   1d8f0:	ldr	r2, [sp, #52]	; 0x34
   1d8f4:	mov	r1, r4
   1d8f8:	mov	r3, #8
   1d8fc:	b	1d944 <main@@Base+0x78a8>
   1d900:	ldr	r4, [sp, #52]	; 0x34
   1d904:	mov	r5, #0
   1d908:	cmp	r7, r4
   1d90c:	bne	1d9b8 <main@@Base+0x791c>
   1d910:	b	1d978 <main@@Base+0x78dc>
   1d914:	mov	r6, #0
   1d918:	mov	r5, #0
   1d91c:	mov	r4, r7
   1d920:	cmp	r7, r4
   1d924:	bne	1d9b8 <main@@Base+0x791c>
   1d928:	b	1d978 <main@@Base+0x78dc>
   1d92c:	cmn	r5, #1
   1d930:	bgt	1d968 <main@@Base+0x78cc>
   1d934:	ldr	r0, [sp, #44]	; 0x2c
   1d938:	ldr	r2, [sp, #52]	; 0x34
   1d93c:	mov	r1, r4
   1d940:	mov	r3, #7
   1d944:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1d948:	mov	r4, r0
   1d94c:	mov	r6, #0
   1d950:	mov	r5, #0
   1d954:	cmp	r7, r4
   1d958:	bne	1d9b8 <main@@Base+0x791c>
   1d95c:	b	1d978 <main@@Base+0x78dc>
   1d960:	rsbs	r6, r6, #0
   1d964:	rsc	r5, r5, #0
   1d968:	str	r6, [sp, #64]	; 0x40
   1d96c:	str	r5, [sp, #68]	; 0x44
   1d970:	cmp	r7, r4
   1d974:	bne	1d9b8 <main@@Base+0x791c>
   1d978:	add	r0, sp, #64	; 0x40
   1d97c:	ldr	r2, [sp, #52]	; 0x34
   1d980:	mov	r1, r7
   1d984:	str	r0, [sp]
   1d988:	movw	r0, #628	; 0x274
   1d98c:	movt	r0, #6
   1d990:	add	r3, r0, #36	; 0x24
   1d994:	ldr	r0, [sp, #44]	; 0x2c
   1d998:	bl	2636c <main@@Base+0x102d0>
   1d99c:	cmp	r0, r7
   1d9a0:	mov	r4, r0
   1d9a4:	ldrne	r0, [sp, #52]	; 0x34
   1d9a8:	cmpne	r4, r0
   1d9ac:	beq	1a1d0 <main@@Base+0x4134>
   1d9b0:	ldr	r6, [sp, #64]	; 0x40
   1d9b4:	ldr	r5, [sp, #68]	; 0x44
   1d9b8:	orrs	r0, r6, r5
   1d9bc:	bne	1d9d0 <main@@Base+0x7934>
   1d9c0:	ldr	r0, [sp, #44]	; 0x2c
   1d9c4:	ldrb	r0, [r0, #8]
   1d9c8:	tst	r0, #2
   1d9cc:	beq	1da68 <main@@Base+0x79cc>
   1d9d0:	ldr	r0, [sp, #44]	; 0x2c
   1d9d4:	mov	r1, #1
   1d9d8:	mov	r2, #8
   1d9dc:	mov	r3, #8
   1d9e0:	ldr	r0, [r0]
   1d9e4:	bl	33604 <flatcc_builder_table_add@@Base>
   1d9e8:	cmp	r0, #0
   1d9ec:	beq	1a1d0 <main@@Base+0x4134>
   1d9f0:	str	r6, [r0]
   1d9f4:	str	r5, [r0, #4]
   1d9f8:	b	1da68 <main@@Base+0x79cc>
   1d9fc:	bne	1da0c <main@@Base+0x7970>
   1da00:	ldrb	r0, [r1, #2]!
   1da04:	cmp	r0, #32
   1da08:	bhi	1da20 <main@@Base+0x7984>
   1da0c:	mov	r1, r2
   1da10:	ldr	r0, [sp, #44]	; 0x2c
   1da14:	ldr	r2, [sp, #52]	; 0x34
   1da18:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1da1c:	mov	r1, r0
   1da20:	cmp	r8, r1
   1da24:	beq	1da80 <main@@Base+0x79e4>
   1da28:	ldr	r0, [sp, #44]	; 0x2c
   1da2c:	ldr	r2, [sp, #52]	; 0x34
   1da30:	sub	r3, fp, #64	; 0x40
   1da34:	bl	398b4 <flatcc_json_parser_build_string@@Base>
   1da38:	mov	r4, r0
   1da3c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1da40:	cmp	r0, #0
   1da44:	beq	1a1d0 <main@@Base+0x4134>
   1da48:	ldr	r0, [sp, #44]	; 0x2c
   1da4c:	mov	r1, #0
   1da50:	ldr	r0, [r0]
   1da54:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   1da58:	cmp	r0, #0
   1da5c:	beq	1a1d0 <main@@Base+0x4134>
   1da60:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1da64:	str	r1, [r0]
   1da68:	ldr	r5, [sp, #52]	; 0x34
   1da6c:	ldr	sl, [sp, #44]	; 0x2c
   1da70:	sub	r0, r5, r4
   1da74:	cmp	r0, #2
   1da78:	blt	1dad8 <main@@Base+0x7a3c>
   1da7c:	b	1daa8 <main@@Base+0x7a0c>
   1da80:	ldr	sl, [sp, #44]	; 0x2c
   1da84:	ldr	r5, [sp, #52]	; 0x34
   1da88:	mov	r0, sl
   1da8c:	mov	r1, r8
   1da90:	mov	r2, r5
   1da94:	bl	376d0 <flatcc_json_parser_unmatched_symbol@@Base>
   1da98:	mov	r4, r0
   1da9c:	sub	r0, r5, r4
   1daa0:	cmp	r0, #2
   1daa4:	blt	1dad8 <main@@Base+0x7a3c>
   1daa8:	ldrb	r0, [r4]
   1daac:	cmp	r0, #32
   1dab0:	bls	1dac4 <main@@Base+0x7a28>
   1dab4:	mov	r2, r4
   1dab8:	cmp	r2, r5
   1dabc:	bne	1daf4 <main@@Base+0x7a58>
   1dac0:	b	1e1b0 <main@@Base+0x8114>
   1dac4:	bne	1dad8 <main@@Base+0x7a3c>
   1dac8:	mov	r2, r4
   1dacc:	ldrb	r0, [r2, #1]!
   1dad0:	cmp	r0, #32
   1dad4:	bhi	1daec <main@@Base+0x7a50>
   1dad8:	mov	r0, sl
   1dadc:	mov	r1, r4
   1dae0:	mov	r2, r5
   1dae4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1dae8:	mov	r2, r0
   1daec:	cmp	r2, r5
   1daf0:	beq	1e1b0 <main@@Base+0x8114>
   1daf4:	ldrb	r0, [r2]
   1daf8:	cmp	r0, #44	; 0x2c
   1dafc:	bne	1e1c8 <main@@Base+0x812c>
   1db00:	add	r1, r2, #1
   1db04:	sub	r0, r5, r1
   1db08:	cmp	r0, #2
   1db0c:	blt	1db3c <main@@Base+0x7aa0>
   1db10:	ldrb	r0, [r1]
   1db14:	cmp	r0, #32
   1db18:	bls	1db2c <main@@Base+0x7a90>
   1db1c:	mov	r2, r1
   1db20:	cmp	r2, r5
   1db24:	bne	1db54 <main@@Base+0x7ab8>
   1db28:	b	1e244 <main@@Base+0x81a8>
   1db2c:	bne	1db3c <main@@Base+0x7aa0>
   1db30:	ldrb	r0, [r2, #2]!
   1db34:	cmp	r0, #32
   1db38:	bhi	1db4c <main@@Base+0x7ab0>
   1db3c:	mov	r0, sl
   1db40:	mov	r2, r5
   1db44:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1db48:	mov	r2, r0
   1db4c:	cmp	r2, r5
   1db50:	beq	1e244 <main@@Base+0x81a8>
   1db54:	ldrb	r0, [r2]
   1db58:	cmp	r0, #125	; 0x7d
   1db5c:	bne	1d218 <main@@Base+0x717c>
   1db60:	add	r1, r2, #1
   1db64:	sub	r0, r5, r1
   1db68:	cmp	r0, #2
   1db6c:	blt	1e400 <main@@Base+0x8364>
   1db70:	b	1e1e4 <main@@Base+0x8148>
   1db74:	cmp	r0, #93	; 0x5d
   1db78:	bne	1e150 <main@@Base+0x80b4>
   1db7c:	ldr	r6, [sp, #52]	; 0x34
   1db80:	ldr	sl, [sp, #44]	; 0x2c
   1db84:	add	r1, r2, #1
   1db88:	sub	r0, r6, r1
   1db8c:	cmp	r0, #2
   1db90:	blt	1e33c <main@@Base+0x82a0>
   1db94:	ldrb	r0, [r1]
   1db98:	cmp	r0, #32
   1db9c:	bls	1e320 <main@@Base+0x8284>
   1dba0:	ldr	r6, [sp, #52]	; 0x34
   1dba4:	ldr	sl, [sp, #44]	; 0x2c
   1dba8:	mov	r4, r1
   1dbac:	b	1a684 <main@@Base+0x45e8>
   1dbb0:	ldr	sl, [sp, #44]	; 0x2c
   1dbb4:	ldr	r6, [sp, #52]	; 0x34
   1dbb8:	mov	r1, r2
   1dbbc:	mov	r0, sl
   1dbc0:	mov	r2, r6
   1dbc4:	mov	r3, #9
   1dbc8:	b	1964c <main@@Base+0x35b0>
   1dbcc:	mov	r4, r6
   1dbd0:	b	1e36c <main@@Base+0x82d0>
   1dbd4:	mov	r0, sl
   1dbd8:	mov	r1, r6
   1dbdc:	b	1e160 <main@@Base+0x80c4>
   1dbe0:	cmp	r0, #93	; 0x5d
   1dbe4:	bne	1e198 <main@@Base+0x80fc>
   1dbe8:	ldr	r0, [sp, #52]	; 0x34
   1dbec:	add	r1, r4, #1
   1dbf0:	sub	r0, r0, r1
   1dbf4:	cmp	r0, #2
   1dbf8:	blt	1e35c <main@@Base+0x82c0>
   1dbfc:	b	1dc98 <main@@Base+0x7bfc>
   1dc00:	mov	r4, r6
   1dc04:	ldr	r0, [sp, #36]	; 0x24
   1dc08:	ldr	r0, [r0]
   1dc0c:	cmp	r0, #0
   1dc10:	bne	19d08 <main@@Base+0x3c6c>
   1dc14:	b	1dc70 <main@@Base+0x7bd4>
   1dc18:	mov	r0, sl
   1dc1c:	mov	r1, r6
   1dc20:	mov	r2, r6
   1dc24:	b	1e1a4 <main@@Base+0x8108>
   1dc28:	cmp	r0, #125	; 0x7d
   1dc2c:	bne	1e228 <main@@Base+0x818c>
   1dc30:	ldr	r6, [sp, #52]	; 0x34
   1dc34:	ldr	sl, [sp, #44]	; 0x2c
   1dc38:	add	r1, r3, #1
   1dc3c:	sub	r0, r6, r1
   1dc40:	cmp	r0, #2
   1dc44:	blt	1e394 <main@@Base+0x82f8>
   1dc48:	ldrb	r0, [r1]
   1dc4c:	cmp	r0, #32
   1dc50:	bls	1e378 <main@@Base+0x82dc>
   1dc54:	ldr	r6, [sp, #52]	; 0x34
   1dc58:	ldr	sl, [sp, #44]	; 0x2c
   1dc5c:	mov	r4, r1
   1dc60:	ldr	r0, [sp, #36]	; 0x24
   1dc64:	ldr	r0, [r0]
   1dc68:	cmp	r0, #0
   1dc6c:	bne	19d08 <main@@Base+0x3c6c>
   1dc70:	ldr	r0, [sl]
   1dc74:	bl	32c44 <flatcc_builder_end_table@@Base>
   1dc78:	cmp	r0, #0
   1dc7c:	str	r0, [sp, #60]	; 0x3c
   1dc80:	bne	19d2c <main@@Base+0x3c90>
   1dc84:	b	19d08 <main@@Base+0x3c6c>
   1dc88:	add	r1, r4, #1
   1dc8c:	sub	r0, r6, r1
   1dc90:	cmp	r0, #2
   1dc94:	blt	1e35c <main@@Base+0x82c0>
   1dc98:	ldrb	r0, [r1]
   1dc9c:	cmp	r0, #32
   1dca0:	bls	1e34c <main@@Base+0x82b0>
   1dca4:	mov	r4, r1
   1dca8:	b	1e36c <main@@Base+0x82d0>
   1dcac:	mov	r0, sl
   1dcb0:	mov	r1, r6
   1dcb4:	b	1e238 <main@@Base+0x819c>
   1dcb8:	bne	1dcc8 <main@@Base+0x7c2c>
   1dcbc:	ldrb	r0, [r4, #2]!
   1dcc0:	cmp	r0, #32
   1dcc4:	bhi	1dcd8 <main@@Base+0x7c3c>
   1dcc8:	ldr	r0, [sp, #44]	; 0x2c
   1dccc:	ldr	r2, [sp, #52]	; 0x34
   1dcd0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1dcd4:	mov	r4, r0
   1dcd8:	ldr	r6, [sp, #52]	; 0x34
   1dcdc:	cmp	r4, r6
   1dce0:	beq	1dcf4 <main@@Base+0x7c58>
   1dce4:	ldrb	r0, [r4]
   1dce8:	cmp	r0, #93	; 0x5d
   1dcec:	beq	1e264 <main@@Base+0x81c8>
   1dcf0:	mov	r6, r4
   1dcf4:	mov	r0, #0
   1dcf8:	mov	r1, #1
   1dcfc:	strb	r0, [fp, #-60]	; 0xffffffc4
   1dd00:	ldr	r0, [sp, #44]	; 0x2c
   1dd04:	ldr	r0, [r0]
   1dd08:	bl	31188 <flatcc_builder_extend_vector@@Base>
   1dd0c:	cmp	r0, #0
   1dd10:	beq	21938 <main@@Base+0xb89c>
   1dd14:	mov	r8, r0
   1dd18:	mov	r4, r6
   1dd1c:	ldr	r5, [sp, #52]	; 0x34
   1dd20:	mov	r6, #0
   1dd24:	str	r6, [fp, #-52]	; 0xffffffcc
   1dd28:	str	r6, [fp, #-56]	; 0xffffffc8
   1dd2c:	strb	r6, [fp, #-60]	; 0xffffffc4
   1dd30:	str	r6, [sp, #64]	; 0x40
   1dd34:	cmp	r4, r5
   1dd38:	beq	1dd80 <main@@Base+0x7ce4>
   1dd3c:	sub	r0, fp, #56	; 0x38
   1dd40:	mov	r1, r4
   1dd44:	mov	r2, r5
   1dd48:	add	r3, sp, #64	; 0x40
   1dd4c:	str	r0, [sp]
   1dd50:	ldr	r0, [sp, #44]	; 0x2c
   1dd54:	bl	392f4 <flatcc_json_parser_integer@@Base>
   1dd58:	cmp	r0, r4
   1dd5c:	beq	1dd94 <main@@Base+0x7cf8>
   1dd60:	mov	r1, r0
   1dd64:	ldr	r0, [sp, #64]	; 0x40
   1dd68:	cmp	r0, #0
   1dd6c:	beq	1ddac <main@@Base+0x7d10>
   1dd70:	ldr	r7, [sp, #44]	; 0x2c
   1dd74:	ldr	r5, [sp, #52]	; 0x34
   1dd78:	mov	r3, #8
   1dd7c:	b	1ddcc <main@@Base+0x7d30>
   1dd80:	mov	r1, r5
   1dd84:	ldr	r7, [sp, #44]	; 0x2c
   1dd88:	cmp	r4, r1
   1dd8c:	bne	1de2c <main@@Base+0x7d90>
   1dd90:	b	1dde4 <main@@Base+0x7d48>
   1dd94:	mov	r1, r4
   1dd98:	ldr	r5, [sp, #52]	; 0x34
   1dd9c:	ldr	r7, [sp, #44]	; 0x2c
   1dda0:	cmp	r4, r1
   1dda4:	bne	1de2c <main@@Base+0x7d90>
   1dda8:	b	1dde4 <main@@Base+0x7d48>
   1ddac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ddb0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1ddb4:	subs	r3, r0, #256	; 0x100
   1ddb8:	sbcs	r2, r2, #0
   1ddbc:	bcc	1df34 <main@@Base+0x7e98>
   1ddc0:	ldr	r7, [sp, #44]	; 0x2c
   1ddc4:	ldr	r5, [sp, #52]	; 0x34
   1ddc8:	mov	r3, #7
   1ddcc:	mov	r0, r7
   1ddd0:	mov	r2, r5
   1ddd4:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1ddd8:	mov	r1, r0
   1dddc:	cmp	r4, r1
   1dde0:	bne	1de2c <main@@Base+0x7d90>
   1dde4:	sub	r0, fp, #60	; 0x3c
   1dde8:	mov	r1, r4
   1ddec:	mov	r2, r5
   1ddf0:	str	r0, [sp]
   1ddf4:	movw	r0, #268	; 0x10c
   1ddf8:	movt	r0, #6
   1ddfc:	add	r3, r0, #84	; 0x54
   1de00:	mov	r0, r7
   1de04:	bl	23a78 <main@@Base+0xd9dc>
   1de08:	mov	r1, r0
   1de0c:	cmp	r0, r4
   1de10:	beq	21964 <main@@Base+0xb8c8>
   1de14:	ldr	r0, [sp, #52]	; 0x34
   1de18:	cmp	r1, r0
   1de1c:	beq	21964 <main@@Base+0xb8c8>
   1de20:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   1de24:	ldr	r5, [sp, #52]	; 0x34
   1de28:	ldr	r7, [sp, #44]	; 0x2c
   1de2c:	sub	r0, r5, r1
   1de30:	strb	r6, [r8]
   1de34:	cmp	r0, #2
   1de38:	blt	1de78 <main@@Base+0x7ddc>
   1de3c:	ldrb	r0, [r1]
   1de40:	cmp	r0, #32
   1de44:	bls	1de5c <main@@Base+0x7dc0>
   1de48:	ldr	r5, [sp, #52]	; 0x34
   1de4c:	mov	r4, r1
   1de50:	cmp	r4, r5
   1de54:	bne	1de90 <main@@Base+0x7df4>
   1de58:	b	1e254 <main@@Base+0x81b8>
   1de5c:	ldr	r5, [sp, #52]	; 0x34
   1de60:	ldr	r7, [sp, #44]	; 0x2c
   1de64:	bne	1de78 <main@@Base+0x7ddc>
   1de68:	mov	r4, r1
   1de6c:	ldrb	r0, [r4, #1]!
   1de70:	cmp	r0, #32
   1de74:	bhi	1de88 <main@@Base+0x7dec>
   1de78:	mov	r0, r7
   1de7c:	mov	r2, r5
   1de80:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1de84:	mov	r4, r0
   1de88:	cmp	r4, r5
   1de8c:	beq	1e254 <main@@Base+0x81b8>
   1de90:	ldrb	r0, [r4]
   1de94:	cmp	r0, #44	; 0x2c
   1de98:	bne	1e25c <main@@Base+0x81c0>
   1de9c:	ldr	r5, [sp, #52]	; 0x34
   1dea0:	add	r1, r4, #1
   1dea4:	sub	r0, r5, r1
   1dea8:	cmp	r0, #2
   1deac:	ldr	r0, [sp, #44]	; 0x2c
   1deb0:	blt	1deec <main@@Base+0x7e50>
   1deb4:	ldrb	r0, [r1]
   1deb8:	cmp	r0, #32
   1debc:	bls	1ded4 <main@@Base+0x7e38>
   1dec0:	ldr	r5, [sp, #52]	; 0x34
   1dec4:	mov	r4, r1
   1dec8:	cmp	r4, r5
   1decc:	bne	1df00 <main@@Base+0x7e64>
   1ded0:	b	1e2b8 <main@@Base+0x821c>
   1ded4:	ldr	r5, [sp, #52]	; 0x34
   1ded8:	ldr	r0, [sp, #44]	; 0x2c
   1dedc:	bne	1deec <main@@Base+0x7e50>
   1dee0:	ldrb	r2, [r4, #2]!
   1dee4:	cmp	r2, #32
   1dee8:	bhi	1def8 <main@@Base+0x7e5c>
   1deec:	mov	r2, r5
   1def0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1def4:	mov	r4, r0
   1def8:	cmp	r4, r5
   1defc:	beq	1e2b8 <main@@Base+0x821c>
   1df00:	ldrb	r0, [r4]
   1df04:	cmp	r0, #93	; 0x5d
   1df08:	beq	1e264 <main@@Base+0x81c8>
   1df0c:	mov	r0, #0
   1df10:	mov	r1, #1
   1df14:	strb	r0, [fp, #-60]	; 0xffffffc4
   1df18:	ldr	r0, [sp, #44]	; 0x2c
   1df1c:	ldr	r0, [r0]
   1df20:	bl	31188 <flatcc_builder_extend_vector@@Base>
   1df24:	mov	r8, r0
   1df28:	cmp	r0, #0
   1df2c:	bne	1dd1c <main@@Base+0x7c80>
   1df30:	b	21968 <main@@Base+0xb8cc>
   1df34:	mov	r6, r0
   1df38:	strb	r0, [fp, #-60]	; 0xffffffc4
   1df3c:	ldr	r5, [sp, #52]	; 0x34
   1df40:	ldr	r7, [sp, #44]	; 0x2c
   1df44:	cmp	r4, r1
   1df48:	bne	1de2c <main@@Base+0x7d90>
   1df4c:	b	1dde4 <main@@Base+0x7d48>
   1df50:	ldr	r6, [sp, #52]	; 0x34
   1df54:	ldr	sl, [sp, #44]	; 0x2c
   1df58:	b	19508 <main@@Base+0x346c>
   1df5c:	ldr	r6, [sp, #52]	; 0x34
   1df60:	ldr	sl, [sp, #44]	; 0x2c
   1df64:	bne	1df78 <main@@Base+0x7edc>
   1df68:	ldrb	r0, [r2, #2]!
   1df6c:	cmp	r0, #32
   1df70:	mov	r4, r2
   1df74:	bhi	19654 <main@@Base+0x35b8>
   1df78:	mov	r0, sl
   1df7c:	mov	r2, r6
   1df80:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1df84:	b	19650 <main@@Base+0x35b4>
   1df88:	ldr	sl, [sp, #44]	; 0x2c
   1df8c:	ldr	r6, [sp, #52]	; 0x34
   1df90:	mov	r1, r2
   1df94:	mov	r0, sl
   1df98:	mov	r2, r6
   1df9c:	mov	r3, #9
   1dfa0:	b	19e68 <main@@Base+0x3dcc>
   1dfa4:	ldr	r0, [sp, #44]	; 0x2c
   1dfa8:	ldr	r2, [sp, #52]	; 0x34
   1dfac:	mov	r1, r4
   1dfb0:	mov	r3, #9
   1dfb4:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1dfb8:	b	1e188 <main@@Base+0x80ec>
   1dfbc:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1dfc0:	str	r6, [fp, #-60]	; 0xffffffc4
   1dfc4:	cmp	r7, r4
   1dfc8:	bne	1e008 <main@@Base+0x7f6c>
   1dfcc:	sub	r0, fp, #60	; 0x3c
   1dfd0:	ldr	r2, [sp, #52]	; 0x34
   1dfd4:	mov	r1, r7
   1dfd8:	str	r0, [sp]
   1dfdc:	movw	r0, #268	; 0x10c
   1dfe0:	movt	r0, #6
   1dfe4:	add	r3, r0, #48	; 0x30
   1dfe8:	ldr	r0, [sp, #44]	; 0x2c
   1dfec:	bl	265c4 <main@@Base+0x10528>
   1dff0:	cmp	r0, r7
   1dff4:	mov	r4, r0
   1dff8:	ldrne	r0, [sp, #52]	; 0x34
   1dffc:	cmpne	r4, r0
   1e000:	beq	21968 <main@@Base+0xb8cc>
   1e004:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1e008:	ldr	sl, [sp, #44]	; 0x2c
   1e00c:	cmp	r6, #0
   1e010:	bne	1e020 <main@@Base+0x7f84>
   1e014:	ldrb	r0, [sl, #8]
   1e018:	tst	r0, #2
   1e01c:	beq	1c9f0 <main@@Base+0x6954>
   1e020:	ldr	r0, [sl]
   1e024:	mov	r1, #21
   1e028:	mov	r2, #4
   1e02c:	mov	r3, #4
   1e030:	bl	33604 <flatcc_builder_table_add@@Base>
   1e034:	cmp	r0, #0
   1e038:	beq	21968 <main@@Base+0xb8cc>
   1e03c:	str	r6, [r0]
   1e040:	ldr	sl, [sp, #44]	; 0x2c
   1e044:	ldr	r6, [sp, #52]	; 0x34
   1e048:	b	21760 <main@@Base+0xb6c4>
   1e04c:	ldr	sl, [sp, #44]	; 0x2c
   1e050:	mov	r4, r6
   1e054:	b	1c48c <main@@Base+0x63f0>
   1e058:	cmp	r0, #93	; 0x5d
   1e05c:	bne	1e3a4 <main@@Base+0x8308>
   1e060:	ldr	r0, [sp, #52]	; 0x34
   1e064:	add	r1, r4, #1
   1e068:	sub	r0, r0, r1
   1e06c:	cmp	r0, #2
   1e070:	blt	1e114 <main@@Base+0x8078>
   1e074:	ldrb	r0, [r1]
   1e078:	cmp	r0, #32
   1e07c:	bhi	1e108 <main@@Base+0x806c>
   1e080:	bne	1e114 <main@@Base+0x8078>
   1e084:	ldrb	r0, [r4, #2]!
   1e088:	cmp	r0, #32
   1e08c:	bhi	1e3bc <main@@Base+0x8320>
   1e090:	b	1e114 <main@@Base+0x8078>
   1e094:	mov	r0, sl
   1e098:	mov	r1, r6
   1e09c:	mov	r2, r6
   1e0a0:	b	1e3b0 <main@@Base+0x8314>
   1e0a4:	ldr	r6, [sp, #52]	; 0x34
   1e0a8:	ldr	sl, [sp, #44]	; 0x2c
   1e0ac:	bne	1e0c0 <main@@Base+0x8024>
   1e0b0:	ldrb	r0, [r4, #2]!
   1e0b4:	cmp	r0, #32
   1e0b8:	mov	r7, r4
   1e0bc:	bhi	19724 <main@@Base+0x3688>
   1e0c0:	mov	r0, sl
   1e0c4:	mov	r2, r6
   1e0c8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1e0cc:	b	19720 <main@@Base+0x3684>
   1e0d0:	ldr	sl, [sp, #44]	; 0x2c
   1e0d4:	ldr	r6, [sp, #52]	; 0x34
   1e0d8:	mov	r1, r2
   1e0dc:	mov	r0, sl
   1e0e0:	mov	r2, r6
   1e0e4:	mov	r3, #10
   1e0e8:	b	194f0 <main@@Base+0x3454>
   1e0ec:	add	r1, r4, #1
   1e0f0:	sub	r0, r6, r1
   1e0f4:	cmp	r0, #2
   1e0f8:	blt	1e114 <main@@Base+0x8078>
   1e0fc:	ldrb	r0, [r1]
   1e100:	cmp	r0, #32
   1e104:	bls	1e080 <main@@Base+0x7fe4>
   1e108:	ldr	sl, [sp, #44]	; 0x2c
   1e10c:	mov	r4, r1
   1e110:	b	1c48c <main@@Base+0x63f0>
   1e114:	ldr	r0, [sp, #44]	; 0x2c
   1e118:	ldr	r2, [sp, #52]	; 0x34
   1e11c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1e120:	b	1e3b8 <main@@Base+0x831c>
   1e124:	ldr	r6, [sp, #52]	; 0x34
   1e128:	ldr	sl, [sp, #44]	; 0x2c
   1e12c:	bne	1e140 <main@@Base+0x80a4>
   1e130:	ldrb	r0, [r2, #2]!
   1e134:	cmp	r0, #32
   1e138:	mov	r4, r2
   1e13c:	bhi	19e70 <main@@Base+0x3dd4>
   1e140:	mov	r0, sl
   1e144:	mov	r2, r6
   1e148:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1e14c:	b	19e6c <main@@Base+0x3dd0>
   1e150:	ldr	sl, [sp, #44]	; 0x2c
   1e154:	ldr	r6, [sp, #52]	; 0x34
   1e158:	mov	r1, r2
   1e15c:	mov	r0, sl
   1e160:	mov	r2, r6
   1e164:	mov	r3, #9
   1e168:	b	1a67c <main@@Base+0x45e0>
   1e16c:	bne	1e17c <main@@Base+0x80e0>
   1e170:	ldrb	r0, [r4, #2]!
   1e174:	cmp	r0, #32
   1e178:	bhi	1e18c <main@@Base+0x80f0>
   1e17c:	ldr	r0, [sp, #44]	; 0x2c
   1e180:	ldr	r2, [sp, #52]	; 0x34
   1e184:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1e188:	mov	r4, r0
   1e18c:	ldr	r6, [sp, #52]	; 0x34
   1e190:	ldr	sl, [sp, #44]	; 0x2c
   1e194:	b	1a2b8 <main@@Base+0x421c>
   1e198:	ldr	r0, [sp, #44]	; 0x2c
   1e19c:	ldr	r2, [sp, #52]	; 0x34
   1e1a0:	mov	r1, r4
   1e1a4:	mov	r3, #9
   1e1a8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1e1ac:	b	1e368 <main@@Base+0x82cc>
   1e1b0:	mov	r4, r5
   1e1b4:	ldr	r0, [sp, #36]	; 0x24
   1e1b8:	ldr	r0, [r0]
   1e1bc:	cmp	r0, #0
   1e1c0:	bne	1a1d0 <main@@Base+0x4134>
   1e1c4:	b	1e204 <main@@Base+0x8168>
   1e1c8:	cmp	r0, #125	; 0x7d
   1e1cc:	bne	1e3c4 <main@@Base+0x8328>
   1e1d0:	ldr	r0, [sp, #52]	; 0x34
   1e1d4:	add	r1, r2, #1
   1e1d8:	sub	r0, r0, r1
   1e1dc:	cmp	r0, #2
   1e1e0:	blt	1e400 <main@@Base+0x8364>
   1e1e4:	ldrb	r0, [r1]
   1e1e8:	cmp	r0, #32
   1e1ec:	bls	1e3ec <main@@Base+0x8350>
   1e1f0:	mov	r4, r1
   1e1f4:	ldr	r0, [sp, #36]	; 0x24
   1e1f8:	ldr	r0, [r0]
   1e1fc:	cmp	r0, #0
   1e200:	bne	1a1d0 <main@@Base+0x4134>
   1e204:	ldr	r0, [sp, #44]	; 0x2c
   1e208:	ldr	r0, [r0]
   1e20c:	bl	32c44 <flatcc_builder_end_table@@Base>
   1e210:	cmp	r0, #0
   1e214:	str	r0, [sp, #60]	; 0x3c
   1e218:	beq	1a1d0 <main@@Base+0x4134>
   1e21c:	ldr	r6, [sp, #52]	; 0x34
   1e220:	ldr	sl, [sp, #44]	; 0x2c
   1e224:	b	1a1fc <main@@Base+0x4160>
   1e228:	ldr	sl, [sp, #44]	; 0x2c
   1e22c:	ldr	r6, [sp, #52]	; 0x34
   1e230:	mov	r1, r3
   1e234:	mov	r0, sl
   1e238:	mov	r2, r6
   1e23c:	mov	r3, #10
   1e240:	b	19cf0 <main@@Base+0x3c54>
   1e244:	mov	r0, sl
   1e248:	mov	r1, r5
   1e24c:	mov	r2, r5
   1e250:	b	1e3d0 <main@@Base+0x8334>
   1e254:	ldr	r4, [sp, #52]	; 0x34
   1e258:	b	1e2e8 <main@@Base+0x824c>
   1e25c:	cmp	r0, #93	; 0x5d
   1e260:	bne	1e3d8 <main@@Base+0x833c>
   1e264:	ldr	r0, [sp, #52]	; 0x34
   1e268:	add	r1, r4, #1
   1e26c:	sub	r0, r0, r1
   1e270:	cmp	r0, #2
   1e274:	blt	1e2d8 <main@@Base+0x823c>
   1e278:	ldrb	r0, [r1]
   1e27c:	cmp	r0, #32
   1e280:	bls	1e2c8 <main@@Base+0x822c>
   1e284:	mov	r4, r1
   1e288:	b	1e2e8 <main@@Base+0x824c>
   1e28c:	ldr	r6, [sp, #52]	; 0x34
   1e290:	ldr	sl, [sp, #44]	; 0x2c
   1e294:	bne	1e2a8 <main@@Base+0x820c>
   1e298:	ldrb	r0, [r2, #2]!
   1e29c:	cmp	r0, #32
   1e2a0:	mov	r4, r2
   1e2a4:	bhi	194f8 <main@@Base+0x345c>
   1e2a8:	mov	r0, sl
   1e2ac:	mov	r2, r6
   1e2b0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1e2b4:	b	194f4 <main@@Base+0x3458>
   1e2b8:	ldr	r1, [sp, #52]	; 0x34
   1e2bc:	ldr	r0, [sp, #44]	; 0x2c
   1e2c0:	mov	r2, r1
   1e2c4:	b	1e3e4 <main@@Base+0x8348>
   1e2c8:	bne	1e2d8 <main@@Base+0x823c>
   1e2cc:	ldrb	r0, [r4, #2]!
   1e2d0:	cmp	r0, #32
   1e2d4:	bhi	1e2e8 <main@@Base+0x824c>
   1e2d8:	ldr	r0, [sp, #44]	; 0x2c
   1e2dc:	ldr	r2, [sp, #52]	; 0x34
   1e2e0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1e2e4:	mov	r4, r0
   1e2e8:	ldr	sl, [sp, #44]	; 0x2c
   1e2ec:	ldr	r0, [sl]
   1e2f0:	bl	32f5c <flatcc_builder_end_vector@@Base>
   1e2f4:	ldr	r6, [sp, #52]	; 0x34
   1e2f8:	ldr	r5, [sp, #48]	; 0x30
   1e2fc:	cmp	r0, #0
   1e300:	str	r0, [sp, #60]	; 0x3c
   1e304:	beq	16fd0 <main@@Base+0xf34>
   1e308:	ldr	r0, [sl]
   1e30c:	mov	r1, #13
   1e310:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   1e314:	cmp	r0, #0
   1e318:	bne	20f1c <main@@Base+0xae80>
   1e31c:	b	16fd0 <main@@Base+0xf34>
   1e320:	ldr	r6, [sp, #52]	; 0x34
   1e324:	ldr	sl, [sp, #44]	; 0x2c
   1e328:	bne	1e33c <main@@Base+0x82a0>
   1e32c:	ldrb	r0, [r2, #2]!
   1e330:	cmp	r0, #32
   1e334:	mov	r4, r2
   1e338:	bhi	1a684 <main@@Base+0x45e8>
   1e33c:	mov	r0, sl
   1e340:	mov	r2, r6
   1e344:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1e348:	b	1a680 <main@@Base+0x45e4>
   1e34c:	bne	1e35c <main@@Base+0x82c0>
   1e350:	ldrb	r0, [r4, #2]!
   1e354:	cmp	r0, #32
   1e358:	bhi	1e36c <main@@Base+0x82d0>
   1e35c:	ldr	r0, [sp, #44]	; 0x2c
   1e360:	ldr	r2, [sp, #52]	; 0x34
   1e364:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1e368:	mov	r4, r0
   1e36c:	ldr	r6, [sp, #52]	; 0x34
   1e370:	ldr	sl, [sp, #44]	; 0x2c
   1e374:	b	1ab70 <main@@Base+0x4ad4>
   1e378:	ldr	r6, [sp, #52]	; 0x34
   1e37c:	ldr	sl, [sp, #44]	; 0x2c
   1e380:	bne	1e394 <main@@Base+0x82f8>
   1e384:	ldrb	r0, [r3, #2]!
   1e388:	cmp	r0, #32
   1e38c:	mov	r4, r3
   1e390:	bhi	19cf8 <main@@Base+0x3c5c>
   1e394:	mov	r0, sl
   1e398:	mov	r2, r6
   1e39c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1e3a0:	b	19cf4 <main@@Base+0x3c58>
   1e3a4:	ldr	r0, [sp, #44]	; 0x2c
   1e3a8:	ldr	r2, [sp, #52]	; 0x34
   1e3ac:	mov	r1, r4
   1e3b0:	mov	r3, #9
   1e3b4:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1e3b8:	mov	r4, r0
   1e3bc:	ldr	sl, [sp, #44]	; 0x2c
   1e3c0:	b	1c48c <main@@Base+0x63f0>
   1e3c4:	mov	r1, r2
   1e3c8:	ldr	r0, [sp, #44]	; 0x2c
   1e3cc:	ldr	r2, [sp, #52]	; 0x34
   1e3d0:	mov	r3, #10
   1e3d4:	b	1a1b8 <main@@Base+0x411c>
   1e3d8:	ldr	r0, [sp, #44]	; 0x2c
   1e3dc:	ldr	r2, [sp, #52]	; 0x34
   1e3e0:	mov	r1, r4
   1e3e4:	mov	r3, #9
   1e3e8:	b	1acac <main@@Base+0x4c10>
   1e3ec:	bne	1e400 <main@@Base+0x8364>
   1e3f0:	ldrb	r0, [r2, #2]!
   1e3f4:	cmp	r0, #32
   1e3f8:	mov	r4, r2
   1e3fc:	bhi	1a1c0 <main@@Base+0x4124>
   1e400:	ldr	r0, [sp, #44]	; 0x2c
   1e404:	ldr	r2, [sp, #52]	; 0x34
   1e408:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1e40c:	b	1a1bc <main@@Base+0x4120>
   1e410:	cmp	r2, r6
   1e414:	mov	r8, r6
   1e418:	beq	1e46c <main@@Base+0x83d0>
   1e41c:	ldrb	r0, [r2]
   1e420:	cmp	r0, #46	; 0x2e
   1e424:	beq	1e440 <main@@Base+0x83a4>
   1e428:	cmp	r0, #34	; 0x22
   1e42c:	bne	1e45c <main@@Base+0x83c0>
   1e430:	ldr	r0, [sp, #40]	; 0x28
   1e434:	mov	r1, #0
   1e438:	add	r8, r2, #1
   1e43c:	b	1e468 <main@@Base+0x83cc>
   1e440:	mov	r1, r2
   1e444:	mov	r0, sl
   1e448:	mov	r2, r6
   1e44c:	mov	r3, #5
   1e450:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1e454:	mov	r8, r0
   1e458:	b	1e46c <main@@Base+0x83d0>
   1e45c:	ldr	r0, [sp, #40]	; 0x28
   1e460:	mov	r1, #1
   1e464:	mov	r8, r2
   1e468:	str	r1, [r0]
   1e46c:	sub	r9, r6, r8
   1e470:	mov	r0, #8
   1e474:	cmp	r9, #8
   1e478:	movcc	r0, r9
   1e47c:	and	r0, r0, #15
   1e480:	sub	r2, r0, #1
   1e484:	cmp	r2, #7
   1e488:	bhi	2174c <main@@Base+0xb6b0>
   1e48c:	add	r0, pc, #32
   1e490:	mov	sl, #0
   1e494:	mov	ip, #0
   1e498:	mov	r4, #0
   1e49c:	mov	r1, #0
   1e4a0:	mov	r3, #0
   1e4a4:	mov	r6, #0
   1e4a8:	mov	r7, #0
   1e4ac:	mov	r5, #0
   1e4b0:	ldr	pc, [r0, r2, lsl #2]
   1e4b4:	andeq	lr, r1, r8, lsl r5
   1e4b8:	andeq	lr, r1, r0, lsl r5
   1e4bc:	andeq	lr, r1, r8, lsl #10
   1e4c0:	andeq	lr, r1, r0, lsl #10
   1e4c4:	strdeq	lr, [r1], -r4
   1e4c8:	andeq	lr, r1, r8, ror #9
   1e4cc:	ldrdeq	lr, [r1], -r8
   1e4d0:	ldrdeq	lr, [r1], -r4
   1e4d4:	ldrb	ip, [r8, #7]
   1e4d8:	ldrb	r0, [r8, #6]
   1e4dc:	mov	r4, sl
   1e4e0:	orr	r0, ip, r0, lsl #8
   1e4e4:	mov	sl, r0
   1e4e8:	ldrb	r0, [r8, #5]
   1e4ec:	mov	r1, r4
   1e4f0:	orr	sl, sl, r0, lsl #16
   1e4f4:	ldrb	r0, [r8, #4]
   1e4f8:	mov	r3, r1
   1e4fc:	orr	sl, sl, r0, lsl #24
   1e500:	ldrb	r0, [r8, #3]
   1e504:	orr	r6, r0, r3
   1e508:	ldrb	r0, [r8, #2]
   1e50c:	orr	r7, r6, r0, lsl #8
   1e510:	ldrb	r0, [r8, #1]
   1e514:	orr	r5, r7, r0, lsl #16
   1e518:	ldrb	r0, [r8]
   1e51c:	movw	r1, #29281	; 0x7261
   1e520:	movw	r7, #29556	; 0x7374
   1e524:	movt	r1, #24946	; 0x6172
   1e528:	movt	r7, #29797	; 0x7465
   1e52c:	subs	r1, sl, r1
   1e530:	orr	r0, r5, r0, lsl #24
   1e534:	sbcs	r1, r0, r7
   1e538:	bcs	1e604 <main@@Base+0x8568>
   1e53c:	movw	r1, #28004	; 0x6d64
   1e540:	movw	r3, #28530	; 0x6f72
   1e544:	movw	r2, #29285	; 0x7265
   1e548:	movw	r6, #24430	; 0x5f6e
   1e54c:	movt	r1, #28257	; 0x6e61
   1e550:	movt	r3, #28276	; 0x6e74
   1e554:	movt	r2, #28769	; 0x7061
   1e558:	movt	r6, #28276	; 0x6e74
   1e55c:	cmp	r0, r1
   1e560:	bhi	1e794 <main@@Base+0x86f8>
   1e564:	ldr	r6, [sp, #52]	; 0x34
   1e568:	movw	r1, #25975	; 0x6577
   1e56c:	movt	r1, #26220	; 0x666c
   1e570:	cmp	r0, r1
   1e574:	bhi	1e8a4 <main@@Base+0x8808>
   1e578:	movw	r1, #27759	; 0x6c6f
   1e57c:	movt	r1, #25455	; 0x636f
   1e580:	eor	r2, r0, r1
   1e584:	and	r1, sl, #-16777216	; 0xff000000
   1e588:	eor	r3, r1, #1912602624	; 0x72000000
   1e58c:	orrs	r2, r3, r2
   1e590:	beq	1f1d0 <main@@Base+0x9134>
   1e594:	movw	r2, #25965	; 0x656d
   1e598:	ldr	sl, [sp, #44]	; 0x2c
   1e59c:	eor	r1, r1, #2030043136	; 0x79000000
   1e5a0:	movt	r2, #25966	; 0x656e
   1e5a4:	eor	r0, r0, r2
   1e5a8:	orrs	r0, r1, r0
   1e5ac:	bne	2174c <main@@Base+0xb6b0>
   1e5b0:	cmp	r9, #6
   1e5b4:	mov	r1, r8
   1e5b8:	blt	20b6c <main@@Base+0xaad0>
   1e5bc:	ldr	r1, [sp, #40]	; 0x28
   1e5c0:	mov	r2, r8
   1e5c4:	ldrb	r0, [r2, #5]!
   1e5c8:	ldr	r1, [r1]
   1e5cc:	cmp	r1, #0
   1e5d0:	beq	1f9d0 <main@@Base+0x9934>
   1e5d4:	cmp	r0, #33	; 0x21
   1e5d8:	bcc	1e5e8 <main@@Base+0x854c>
   1e5dc:	cmp	r0, #58	; 0x3a
   1e5e0:	mov	r1, r8
   1e5e4:	bne	20b6c <main@@Base+0xaad0>
   1e5e8:	ldr	r0, [sp, #40]	; 0x28
   1e5ec:	mov	r1, #0
   1e5f0:	str	r1, [r0]
   1e5f4:	sub	r0, r6, r2
   1e5f8:	cmp	r0, #2
   1e5fc:	bge	1f9ec <main@@Base+0x9950>
   1e600:	b	1fe74 <main@@Base+0x9dd8>
   1e604:	movw	r1, #0
   1e608:	movw	r2, #29544	; 0x7368
   1e60c:	movt	r1, #26163	; 0x6633
   1e610:	movt	r2, #26721	; 0x6861
   1e614:	subs	r1, sl, r1
   1e618:	sbcs	r1, r0, r7
   1e61c:	bcs	1e820 <main@@Base+0x8784>
   1e620:	movw	r1, #29281	; 0x7261
   1e624:	ldr	r6, [sp, #52]	; 0x34
   1e628:	movt	r1, #24946	; 0x6172
   1e62c:	eor	r2, sl, r1
   1e630:	eor	r1, r0, r7
   1e634:	orrs	r2, r2, r1
   1e638:	bne	1e924 <main@@Base+0x8888>
   1e63c:	add	r9, r8, #8
   1e640:	mov	r0, #8
   1e644:	mov	r5, r6
   1e648:	sub	ip, r6, r9
   1e64c:	cmp	ip, #8
   1e650:	movcc	r0, ip
   1e654:	and	r0, r0, #15
   1e658:	sub	r6, r0, #1
   1e65c:	cmp	r6, #7
   1e660:	bhi	207a8 <main@@Base+0xa70c>
   1e664:	add	r7, pc, #32
   1e668:	mov	r1, #0
   1e66c:	mov	lr, #0
   1e670:	mov	sl, #0
   1e674:	mov	r4, #0
   1e678:	mov	r3, #0
   1e67c:	mov	r5, #0
   1e680:	mov	r0, #0
   1e684:	mov	r2, #0
   1e688:	ldr	pc, [r7, r6, lsl #2]
   1e68c:	strdeq	lr, [r1], -r0
   1e690:	andeq	lr, r1, r8, ror #13
   1e694:	andeq	lr, r1, r0, ror #13
   1e698:	ldrdeq	lr, [r1], -r8
   1e69c:	andeq	lr, r1, ip, asr #13
   1e6a0:	andeq	lr, r1, r0, asr #13
   1e6a4:			; <UNDEFINED> instruction: 0x0001e6b0
   1e6a8:	andeq	lr, r1, ip, lsr #13
   1e6ac:	ldrb	lr, [r8, #15]
   1e6b0:	ldrb	r0, [r8, #14]
   1e6b4:	mov	sl, r1
   1e6b8:	orr	r0, lr, r0, lsl #8
   1e6bc:	mov	r1, r0
   1e6c0:	ldrb	r0, [r8, #13]
   1e6c4:	mov	r4, sl
   1e6c8:	orr	r1, r1, r0, lsl #16
   1e6cc:	ldrb	r0, [r8, #12]
   1e6d0:	mov	r3, r4
   1e6d4:	orr	r1, r1, r0, lsl #24
   1e6d8:	ldrb	r0, [r8, #11]
   1e6dc:	orr	r5, r0, r3
   1e6e0:	ldrb	r0, [r8, #10]
   1e6e4:	orr	r0, r5, r0, lsl #8
   1e6e8:	ldrb	r2, [r8, #9]
   1e6ec:	orr	r2, r0, r2, lsl #16
   1e6f0:	ldrb	r0, [r9]
   1e6f4:	movw	r7, #26227	; 0x6673
   1e6f8:	movt	r7, #31087	; 0x796f
   1e6fc:	orr	r2, r2, r0, lsl #24
   1e700:	movw	r0, #26989	; 0x696d
   1e704:	movt	r0, #29810	; 0x7472
   1e708:	subs	r0, r0, r1
   1e70c:	sbcs	r0, r7, r2
   1e710:	bcc	1f0f8 <main@@Base+0x905c>
   1e714:	movw	r0, #29797	; 0x7465
   1e718:	ldr	r6, [sp, #52]	; 0x34
   1e71c:	eor	r3, r2, r7
   1e720:	movt	r0, #28530	; 0x6f72
   1e724:	eor	r0, r1, r0
   1e728:	orrs	r0, r0, r3
   1e72c:	beq	1f61c <main@@Base+0x9580>
   1e730:	movw	r0, #27763	; 0x6c73
   1e734:	mov	r5, r6
   1e738:	movt	r0, #28527	; 0x6f6f
   1e73c:	eor	r0, r1, r0
   1e740:	movw	r1, #26210	; 0x6662
   1e744:	movt	r1, #31087	; 0x796f
   1e748:	eor	r1, r2, r1
   1e74c:	orrs	r0, r0, r1
   1e750:	bne	207a8 <main@@Base+0xa70c>
   1e754:	cmp	ip, #9
   1e758:	blt	207a8 <main@@Base+0xa70c>
   1e75c:	ldr	r2, [sp, #40]	; 0x28
   1e760:	mov	r1, r8
   1e764:	ldrb	r0, [r1, #16]!
   1e768:	ldr	r2, [r2]
   1e76c:	cmp	r2, #0
   1e770:	beq	1fd44 <main@@Base+0x9ca8>
   1e774:	cmp	r0, #33	; 0x21
   1e778:	bcc	1e784 <main@@Base+0x86e8>
   1e77c:	cmp	r0, #58	; 0x3a
   1e780:	bne	207a8 <main@@Base+0xa70c>
   1e784:	ldr	r0, [sp, #40]	; 0x28
   1e788:	mov	r2, #0
   1e78c:	str	r2, [r0]
   1e790:	b	1fd50 <main@@Base+0x9cb4>
   1e794:	ldr	r5, [sp, #52]	; 0x34
   1e798:	movw	r1, #29555	; 0x7373
   1e79c:	movt	r1, #29797	; 0x7465
   1e7a0:	cmp	r0, r1
   1e7a4:	bhi	1e9fc <main@@Base+0x8960>
   1e7a8:	subs	r1, sl, r6
   1e7ac:	sbcs	r1, r0, r2
   1e7b0:	bcs	1ebb4 <main@@Base+0x8b18>
   1e7b4:	movw	r1, #28005	; 0x6d65
   1e7b8:	movt	r1, #28257	; 0x6e61
   1e7bc:	teq	r0, r1
   1e7c0:	bne	1f228 <main@@Base+0x918c>
   1e7c4:	ldr	sl, [sp, #44]	; 0x2c
   1e7c8:	cmp	r9, #5
   1e7cc:	mov	r1, r8
   1e7d0:	mov	r6, r5
   1e7d4:	blt	20e04 <main@@Base+0xad68>
   1e7d8:	ldr	r1, [sp, #40]	; 0x28
   1e7dc:	mov	r2, r8
   1e7e0:	ldrb	r0, [r2, #4]!
   1e7e4:	ldr	r1, [r1]
   1e7e8:	cmp	r1, #0
   1e7ec:	beq	1fac0 <main@@Base+0x9a24>
   1e7f0:	cmp	r0, #33	; 0x21
   1e7f4:	bcc	1e804 <main@@Base+0x8768>
   1e7f8:	cmp	r0, #58	; 0x3a
   1e7fc:	mov	r1, r8
   1e800:	bne	20e04 <main@@Base+0xad68>
   1e804:	ldr	r0, [sp, #40]	; 0x28
   1e808:	mov	r1, #0
   1e80c:	str	r1, [r0]
   1e810:	sub	r0, r6, r2
   1e814:	cmp	r0, #2
   1e818:	bge	1fadc <main@@Base+0x9a40>
   1e81c:	b	1ff6c <main@@Base+0x9ed0>
   1e820:	ldr	r6, [sp, #52]	; 0x34
   1e824:	subs	r1, sl, r2
   1e828:	sbcs	r1, r0, r7
   1e82c:	bcs	1ea68 <main@@Base+0x89cc>
   1e830:	movw	r1, #0
   1e834:	bfc	sl, #0, #16
   1e838:	eor	r0, r0, r7
   1e83c:	movt	r1, #26163	; 0x6633
   1e840:	eor	r1, sl, r1
   1e844:	orrs	r0, r1, r0
   1e848:	bne	21748 <main@@Base+0xb6ac>
   1e84c:	ldr	sl, [sp, #44]	; 0x2c
   1e850:	cmp	r9, #7
   1e854:	mov	r7, r8
   1e858:	blt	203c0 <main@@Base+0xa324>
   1e85c:	ldr	r2, [sp, #40]	; 0x28
   1e860:	mov	r1, r8
   1e864:	ldrb	r0, [r1, #6]!
   1e868:	ldr	r2, [r2]
   1e86c:	cmp	r2, #0
   1e870:	beq	1f908 <main@@Base+0x986c>
   1e874:	cmp	r0, #33	; 0x21
   1e878:	bcc	1e888 <main@@Base+0x87ec>
   1e87c:	cmp	r0, #58	; 0x3a
   1e880:	mov	r7, r8
   1e884:	bne	203c0 <main@@Base+0xa324>
   1e888:	ldr	r0, [sp, #40]	; 0x28
   1e88c:	mov	r2, #0
   1e890:	str	r2, [r0]
   1e894:	sub	r0, r6, r1
   1e898:	cmp	r0, #2
   1e89c:	bge	1f924 <main@@Base+0x9888>
   1e8a0:	b	1fc60 <main@@Base+0x9bc4>
   1e8a4:	movw	r1, #65535	; 0xffff
   1e8a8:	movw	r2, #30309	; 0x7665
   1e8ac:	movt	r1, #26735	; 0x686f
   1e8b0:	movt	r2, #26990	; 0x696e
   1e8b4:	cmp	r0, r1
   1e8b8:	bhi	1eda0 <main@@Base+0x8d04>
   1e8bc:	movw	r1, #25976	; 0x6578
   1e8c0:	movt	r1, #26220	; 0x666c
   1e8c4:	teq	r0, r1
   1e8c8:	bne	21748 <main@@Base+0xb6ac>
   1e8cc:	ldr	sl, [sp, #44]	; 0x2c
   1e8d0:	cmp	r9, #5
   1e8d4:	mov	r4, r8
   1e8d8:	blt	20e6c <main@@Base+0xadd0>
   1e8dc:	ldr	r2, [sp, #40]	; 0x28
   1e8e0:	mov	r1, r8
   1e8e4:	ldrb	r0, [r1, #4]!
   1e8e8:	ldr	r2, [r2]
   1e8ec:	cmp	r2, #0
   1e8f0:	beq	1faf8 <main@@Base+0x9a5c>
   1e8f4:	cmp	r0, #33	; 0x21
   1e8f8:	bcc	1e908 <main@@Base+0x886c>
   1e8fc:	cmp	r0, #58	; 0x3a
   1e900:	mov	r4, r8
   1e904:	bne	20e6c <main@@Base+0xadd0>
   1e908:	ldr	r0, [sp, #40]	; 0x28
   1e90c:	mov	r2, #0
   1e910:	str	r2, [r0]
   1e914:	sub	r0, r6, r1
   1e918:	cmp	r0, #2
   1e91c:	bge	1fb14 <main@@Base+0x9a78>
   1e920:	b	1ffe8 <main@@Base+0x9f4c>
   1e924:	movw	r2, #28788	; 0x7074
   1e928:	movt	r2, #25965	; 0x656d
   1e92c:	subs	r2, sl, r2
   1e930:	sbcs	r2, r0, r7
   1e934:	bcs	1ee18 <main@@Base+0x8d7c>
   1e938:	movw	r0, #28524	; 0x6f6c
   1e93c:	movt	r0, #25199	; 0x626f
   1e940:	eor	r0, sl, r0
   1e944:	orrs	r0, r0, r1
   1e948:	beq	1f5bc <main@@Base+0x9520>
   1e94c:	movw	r0, #29541	; 0x7365
   1e950:	movt	r0, #25185	; 0x6261
   1e954:	eor	r0, sl, r0
   1e958:	orrs	r0, r0, r1
   1e95c:	bne	21748 <main@@Base+0xb6ac>
   1e960:	add	r7, r8, #8
   1e964:	mov	r1, #8
   1e968:	ldr	sl, [sp, #44]	; 0x2c
   1e96c:	sub	r0, r6, r7
   1e970:	cmp	r0, #8
   1e974:	movcc	r1, r0
   1e978:	and	r2, r1, #15
   1e97c:	sub	r1, r2, #2
   1e980:	cmp	r1, #7
   1e984:	bcs	1fba0 <main@@Base+0x9b04>
   1e988:	ldrb	r1, [r8, #9]
   1e98c:	lsl	r2, r1, #16
   1e990:	mov	r1, #0
   1e994:	ldrb	r3, [r7]
   1e998:	orr	r2, r2, r3, lsl #24
   1e99c:	movw	r3, #0
   1e9a0:	movt	r3, #13876	; 0x3634
   1e9a4:	eor	r2, r2, r3
   1e9a8:	orrs	r1, r1, r2
   1e9ac:	bne	1c464 <main@@Base+0x63c8>
   1e9b0:	cmp	r0, #3
   1e9b4:	blt	1c464 <main@@Base+0x63c8>
   1e9b8:	ldr	r2, [sp, #40]	; 0x28
   1e9bc:	mov	r1, r8
   1e9c0:	ldrb	r0, [r1, #10]!
   1e9c4:	ldr	r2, [r2]
   1e9c8:	cmp	r2, #0
   1e9cc:	beq	20168 <main@@Base+0xa0cc>
   1e9d0:	cmp	r0, #33	; 0x21
   1e9d4:	bcc	1e9e0 <main@@Base+0x8944>
   1e9d8:	cmp	r0, #58	; 0x3a
   1e9dc:	bne	1c464 <main@@Base+0x63c8>
   1e9e0:	ldr	r0, [sp, #40]	; 0x28
   1e9e4:	mov	r2, #0
   1e9e8:	str	r2, [r0]
   1e9ec:	sub	r0, r6, r1
   1e9f0:	cmp	r0, #2
   1e9f4:	bge	20180 <main@@Base+0xa0e4>
   1e9f8:	b	212d4 <main@@Base+0xb238>
   1e9fc:	and	r6, sl, #-16777216	; 0xff000000
   1ea00:	eor	r4, r0, r7
   1ea04:	eor	r1, r6, #872415232	; 0x34000000
   1ea08:	orrs	r1, r1, r4
   1ea0c:	bne	1eec0 <main@@Base+0x8e24>
   1ea10:	cmp	r9, #6
   1ea14:	mov	r7, r8
   1ea18:	mov	r6, r5
   1ea1c:	blt	20498 <main@@Base+0xa3fc>
   1ea20:	ldr	r2, [sp, #40]	; 0x28
   1ea24:	mov	r1, r8
   1ea28:	ldrb	r0, [r1, #5]!
   1ea2c:	ldr	r2, [r2]
   1ea30:	cmp	r2, #0
   1ea34:	beq	1f940 <main@@Base+0x98a4>
   1ea38:	cmp	r0, #33	; 0x21
   1ea3c:	bcc	1ea4c <main@@Base+0x89b0>
   1ea40:	cmp	r0, #58	; 0x3a
   1ea44:	mov	r7, r8
   1ea48:	bne	20498 <main@@Base+0xa3fc>
   1ea4c:	ldr	r0, [sp, #40]	; 0x28
   1ea50:	mov	r2, #0
   1ea54:	str	r2, [r0]
   1ea58:	sub	r0, r6, r1
   1ea5c:	cmp	r0, #2
   1ea60:	bge	1f95c <main@@Base+0x98c0>
   1ea64:	b	1fcdc <main@@Base+0x9c40>
   1ea68:	eor	r2, sl, r2
   1ea6c:	eor	r1, r0, r7
   1ea70:	orrs	r2, r2, r1
   1ea74:	bne	1ef20 <main@@Base+0x8e84>
   1ea78:	add	r9, r8, #8
   1ea7c:	mov	r0, #8
   1ea80:	sub	ip, r6, r9
   1ea84:	cmp	ip, #8
   1ea88:	movcc	r0, ip
   1ea8c:	and	r0, r0, #15
   1ea90:	sub	r7, r0, #1
   1ea94:	cmp	r7, #7
   1ea98:	bhi	1f614 <main@@Base+0x9578>
   1ea9c:	add	r4, pc, #32
   1eaa0:	mov	r1, #0
   1eaa4:	mov	lr, #0
   1eaa8:	mov	sl, #0
   1eaac:	mov	r6, #0
   1eab0:	mov	r3, #0
   1eab4:	mov	r5, #0
   1eab8:	mov	r0, #0
   1eabc:	mov	r2, #0
   1eac0:	ldr	pc, [r4, r7, lsl #2]
   1eac4:	andeq	lr, r1, r8, lsr #22
   1eac8:	andeq	lr, r1, r0, lsr #22
   1eacc:	andeq	lr, r1, r8, lsl fp
   1ead0:	andeq	lr, r1, r0, lsl fp
   1ead4:	andeq	lr, r1, r4, lsl #22
   1ead8:	strdeq	lr, [r1], -r8
   1eadc:	andeq	lr, r1, r8, ror #21
   1eae0:	andeq	lr, r1, r4, ror #21
   1eae4:	ldrb	lr, [r8, #15]
   1eae8:	ldrb	r0, [r8, #14]
   1eaec:	mov	sl, r1
   1eaf0:	orr	r0, lr, r0, lsl #8
   1eaf4:	mov	r1, r0
   1eaf8:	ldrb	r0, [r8, #13]
   1eafc:	mov	r6, sl
   1eb00:	orr	r1, r1, r0, lsl #16
   1eb04:	ldrb	r0, [r8, #12]
   1eb08:	mov	r3, r6
   1eb0c:	orr	r1, r1, r0, lsl #24
   1eb10:	ldrb	r0, [r8, #11]
   1eb14:	orr	r5, r0, r3
   1eb18:	ldrb	r0, [r8, #10]
   1eb1c:	orr	r0, r5, r0, lsl #8
   1eb20:	ldrb	r2, [r8, #9]
   1eb24:	orr	r2, r0, r2, lsl #16
   1eb28:	ldrb	r0, [r9]
   1eb2c:	movw	r3, #30257	; 0x7631
   1eb30:	movt	r3, #26222	; 0x666e
   1eb34:	orr	r2, r2, r0, lsl #24
   1eb38:	subs	r0, r1, r3
   1eb3c:	movw	r0, #13407	; 0x345f
   1eb40:	movt	r0, #29494	; 0x7336
   1eb44:	sbcs	r0, r2, r0
   1eb48:	bcs	1f52c <main@@Base+0x9490>
   1eb4c:	eor	r0, r1, r3
   1eb50:	ldr	r1, [sp, #32]
   1eb54:	ldr	r6, [sp, #52]	; 0x34
   1eb58:	eor	r1, r2, r1
   1eb5c:	orrs	r0, r0, r1
   1eb60:	bne	1f614 <main@@Base+0x9578>
   1eb64:	ldr	sl, [sp, #44]	; 0x2c
   1eb68:	cmp	ip, #9
   1eb6c:	blt	20ab0 <main@@Base+0xaa14>
   1eb70:	ldr	r2, [sp, #40]	; 0x28
   1eb74:	mov	r1, r8
   1eb78:	ldrb	r0, [r1, #16]!
   1eb7c:	ldr	r2, [r2]
   1eb80:	cmp	r2, #0
   1eb84:	beq	1fe2c <main@@Base+0x9d90>
   1eb88:	cmp	r0, #33	; 0x21
   1eb8c:	bcc	1eb98 <main@@Base+0x8afc>
   1eb90:	cmp	r0, #58	; 0x3a
   1eb94:	bne	20ab0 <main@@Base+0xaa14>
   1eb98:	ldr	r0, [sp, #40]	; 0x28
   1eb9c:	mov	r2, #0
   1eba0:	str	r2, [r0]
   1eba4:	sub	r0, r6, r1
   1eba8:	cmp	r0, #2
   1ebac:	bge	1fe44 <main@@Base+0x9da8>
   1ebb0:	b	20a64 <main@@Base+0xa9c8>
   1ebb4:	eor	r1, sl, r6
   1ebb8:	eor	r2, r0, r2
   1ebbc:	orrs	r1, r1, r2
   1ebc0:	bne	1f234 <main@@Base+0x9198>
   1ebc4:	add	r1, r8, #8
   1ebc8:	mov	r2, #8
   1ebcc:	ldr	sl, [sp, #44]	; 0x2c
   1ebd0:	mov	r6, r5
   1ebd4:	sub	r0, r5, r1
   1ebd8:	cmp	r0, #8
   1ebdc:	movcs	r0, r2
   1ebe0:	and	r0, r0, #15
   1ebe4:	sub	r7, r0, #1
   1ebe8:	cmp	r7, #7
   1ebec:	bhi	1f5b4 <main@@Base+0x9518>
   1ebf0:	add	r0, pc, #32
   1ebf4:	mov	r9, #0
   1ebf8:	mov	ip, #0
   1ebfc:	mov	lr, #0
   1ec00:	mov	r6, #0
   1ec04:	mov	r3, #0
   1ec08:	mov	r4, #0
   1ec0c:	mov	r2, #0
   1ec10:	mov	r5, #0
   1ec14:	ldr	pc, [r0, r7, lsl #2]
   1ec18:	andeq	lr, r1, ip, ror ip
   1ec1c:	andeq	lr, r1, r4, ror ip
   1ec20:	andeq	lr, r1, ip, ror #24
   1ec24:	andeq	lr, r1, r4, ror #24
   1ec28:	andeq	lr, r1, r8, asr ip
   1ec2c:	andeq	lr, r1, ip, asr #24
   1ec30:	andeq	lr, r1, ip, lsr ip
   1ec34:	andeq	lr, r1, r8, lsr ip
   1ec38:	ldrb	ip, [r8, #15]
   1ec3c:	ldrb	r0, [r8, #14]
   1ec40:	mov	lr, r9
   1ec44:	orr	r0, ip, r0, lsl #8
   1ec48:	mov	r9, r0
   1ec4c:	ldrb	r0, [r8, #13]
   1ec50:	mov	r6, lr
   1ec54:	orr	r9, r9, r0, lsl #16
   1ec58:	ldrb	r0, [r8, #12]
   1ec5c:	mov	r3, r6
   1ec60:	orr	r9, r9, r0, lsl #24
   1ec64:	ldrb	r0, [r8, #11]
   1ec68:	orr	r4, r0, r3
   1ec6c:	ldrb	r0, [r8, #10]
   1ec70:	orr	r2, r4, r0, lsl #8
   1ec74:	ldrb	r0, [r8, #9]
   1ec78:	orr	r5, r2, r0, lsl #16
   1ec7c:	ldrb	r2, [r1]
   1ec80:	movw	r0, #25445	; 0x6365
   1ec84:	movw	r3, #25971	; 0x6573
   1ec88:	ldr	r6, [sp, #52]	; 0x34
   1ec8c:	movt	r0, #28769	; 0x7061
   1ec90:	movt	r3, #24941	; 0x616d
   1ec94:	eor	r0, r9, r0
   1ec98:	orr	r2, r5, r2, lsl #24
   1ec9c:	eor	r2, r2, r3
   1eca0:	orrs	r0, r0, r2
   1eca4:	bne	1f5b4 <main@@Base+0x9518>
   1eca8:	add	r9, r8, #16
   1ecac:	mov	r1, #8
   1ecb0:	sub	r0, r6, r9
   1ecb4:	cmp	r0, #8
   1ecb8:	movcc	r1, r0
   1ecbc:	and	r1, r1, #15
   1ecc0:	sub	r3, r1, #1
   1ecc4:	cmp	r3, #7
   1ecc8:	bhi	1ab4c <main@@Base+0x4ab0>
   1eccc:	add	r7, pc, #20
   1ecd0:	mov	r1, #0
   1ecd4:	mov	r2, #0
   1ecd8:	mov	r6, #0
   1ecdc:	mov	r5, #0
   1ece0:	mov	r4, #0
   1ece4:	ldr	pc, [r7, r3, lsl #2]
   1ece8:	andeq	lr, r1, ip, lsr #26
   1ecec:	andeq	lr, r1, r4, lsr #26
   1ecf0:	andeq	lr, r1, ip, lsl sp
   1ecf4:	andeq	lr, r1, r0, lsl sp
   1ecf8:	andeq	lr, r1, r8, lsl #26
   1ecfc:	andeq	lr, r1, r8, lsl #26
   1ed00:	andeq	lr, r1, r8, lsl #26
   1ed04:	andeq	lr, r1, r8, lsl #26
   1ed08:	ldrb	r2, [r8, #20]
   1ed0c:	lsl	r2, r2, #24
   1ed10:	ldrb	r3, [r8, #19]
   1ed14:	orr	r6, r3, r1
   1ed18:	mov	r1, r2
   1ed1c:	ldrb	r2, [r8, #18]
   1ed20:	orr	r5, r6, r2, lsl #8
   1ed24:	ldrb	r2, [r8, #17]
   1ed28:	orr	r4, r5, r2, lsl #16
   1ed2c:	ldrb	r2, [r9]
   1ed30:	movw	r3, #25971	; 0x6573
   1ed34:	ldr	r6, [sp, #52]	; 0x34
   1ed38:	and	r1, r1, #-16777216	; 0xff000000
   1ed3c:	movt	r3, #24436	; 0x5f74
   1ed40:	eor	r1, r1, #1946157056	; 0x74000000
   1ed44:	orr	r2, r4, r2, lsl #24
   1ed48:	eor	r2, r2, r3
   1ed4c:	orrs	r1, r1, r2
   1ed50:	bne	1ab4c <main@@Base+0x4ab0>
   1ed54:	cmp	r0, #6
   1ed58:	blt	1ab4c <main@@Base+0x4ab0>
   1ed5c:	ldr	r2, [sp, #40]	; 0x28
   1ed60:	mov	r1, r8
   1ed64:	ldrb	r0, [r1, #21]!
   1ed68:	ldr	r2, [r2]
   1ed6c:	cmp	r2, #0
   1ed70:	beq	20710 <main@@Base+0xa674>
   1ed74:	cmp	r0, #33	; 0x21
   1ed78:	bcc	1ed84 <main@@Base+0x8ce8>
   1ed7c:	cmp	r0, #58	; 0x3a
   1ed80:	bne	1ab4c <main@@Base+0x4ab0>
   1ed84:	ldr	r0, [sp, #40]	; 0x28
   1ed88:	mov	r2, #0
   1ed8c:	str	r2, [r0]
   1ed90:	sub	r0, r6, r1
   1ed94:	cmp	r0, #2
   1ed98:	bge	20728 <main@@Base+0xa68c>
   1ed9c:	b	1770c <main@@Base+0x1670>
   1eda0:	subs	r1, sl, r3
   1eda4:	sbcs	r1, r0, r2
   1eda8:	bcs	1f2a4 <main@@Base+0x9208>
   1edac:	movw	r1, #0
   1edb0:	bfc	r0, #0, #16
   1edb4:	movt	r1, #26736	; 0x6870
   1edb8:	teq	r0, r1
   1edbc:	bne	21748 <main@@Base+0xb6ac>
   1edc0:	ldr	sl, [sp, #44]	; 0x2c
   1edc4:	cmp	r9, #3
   1edc8:	mov	r7, r8
   1edcc:	blt	17930 <main@@Base+0x1894>
   1edd0:	ldr	r2, [sp, #40]	; 0x28
   1edd4:	mov	r1, r8
   1edd8:	ldrb	r0, [r1, #2]!
   1eddc:	ldr	r2, [r2]
   1ede0:	cmp	r2, #0
   1ede4:	beq	1fd84 <main@@Base+0x9ce8>
   1ede8:	cmp	r0, #33	; 0x21
   1edec:	bcc	1edfc <main@@Base+0x8d60>
   1edf0:	cmp	r0, #58	; 0x3a
   1edf4:	mov	r7, r8
   1edf8:	bne	17930 <main@@Base+0x1894>
   1edfc:	ldr	r0, [sp, #40]	; 0x28
   1ee00:	mov	r2, #0
   1ee04:	str	r2, [r0]
   1ee08:	sub	r0, r6, r1
   1ee0c:	cmp	r0, #2
   1ee10:	bge	1fda0 <main@@Base+0x9d04>
   1ee14:	b	20820 <main@@Base+0xa784>
   1ee18:	mvn	r2, #-1711276032	; 0x9a000000
   1ee1c:	subs	r2, r2, sl
   1ee20:	sbcs	r2, r7, r0
   1ee24:	bcc	1f338 <main@@Base+0x929c>
   1ee28:	movw	r0, #28788	; 0x7074
   1ee2c:	movt	r0, #25965	; 0x656d
   1ee30:	eor	r0, sl, r0
   1ee34:	orrs	r0, r0, r1
   1ee38:	bne	21748 <main@@Base+0xb6ac>
   1ee3c:	add	r7, r8, #8
   1ee40:	mov	r1, #8
   1ee44:	mov	r2, #-268435456	; 0xf0000000
   1ee48:	ldr	sl, [sp, #44]	; 0x2c
   1ee4c:	sub	r0, r6, r7
   1ee50:	cmp	r0, #8
   1ee54:	movcc	r1, r0
   1ee58:	add	r1, r2, r1, lsl #28
   1ee5c:	asr	r1, r1, #28
   1ee60:	cmp	r1, #0
   1ee64:	blt	1c464 <main@@Base+0x63c8>
   1ee68:	ldrb	r1, [r7]
   1ee6c:	cmp	r1, #121	; 0x79
   1ee70:	bne	1c464 <main@@Base+0x63c8>
   1ee74:	cmp	r0, #2
   1ee78:	blt	1c464 <main@@Base+0x63c8>
   1ee7c:	ldr	r2, [sp, #40]	; 0x28
   1ee80:	mov	r1, r8
   1ee84:	ldrb	r0, [r1, #9]!
   1ee88:	ldr	r2, [r2]
   1ee8c:	cmp	r2, #0
   1ee90:	beq	20980 <main@@Base+0xa8e4>
   1ee94:	cmp	r0, #33	; 0x21
   1ee98:	bcc	1eea4 <main@@Base+0x8e08>
   1ee9c:	cmp	r0, #58	; 0x3a
   1eea0:	bne	1c464 <main@@Base+0x63c8>
   1eea4:	ldr	r0, [sp, #40]	; 0x28
   1eea8:	mov	r2, #0
   1eeac:	str	r2, [r0]
   1eeb0:	sub	r0, r6, r1
   1eeb4:	cmp	r0, #2
   1eeb8:	bge	20998 <main@@Base+0xa8fc>
   1eebc:	b	18af0 <main@@Base+0x2a54>
   1eec0:	teq	r0, r7
   1eec4:	bne	200b8 <main@@Base+0xa01c>
   1eec8:	cmp	r9, #5
   1eecc:	mov	r1, r8
   1eed0:	blt	21228 <main@@Base+0xb18c>
   1eed4:	ldr	r1, [sp, #40]	; 0x28
   1eed8:	mov	r2, r8
   1eedc:	ldrb	r0, [r2, #4]!
   1eee0:	ldr	r1, [r1]
   1eee4:	cmp	r1, #0
   1eee8:	beq	1fb30 <main@@Base+0x9a94>
   1eeec:	cmp	r0, #33	; 0x21
   1eef0:	bcc	1ef00 <main@@Base+0x8e64>
   1eef4:	cmp	r0, #58	; 0x3a
   1eef8:	mov	r1, r8
   1eefc:	bne	21228 <main@@Base+0xb18c>
   1ef00:	ldr	r0, [sp, #40]	; 0x28
   1ef04:	mov	r1, #0
   1ef08:	str	r1, [r0]
   1ef0c:	sub	r0, r5, r2
   1ef10:	mov	r7, r5
   1ef14:	cmp	r0, #2
   1ef18:	bge	1fb50 <main@@Base+0x9ab4>
   1ef1c:	b	20068 <main@@Base+0x9fcc>
   1ef20:	movw	r7, #24431	; 0x5f6f
   1ef24:	movw	r3, #25460	; 0x6374
   1ef28:	movt	r7, #28530	; 0x6f72
   1ef2c:	movt	r3, #30309	; 0x7665
   1ef30:	subs	r2, sl, r7
   1ef34:	sbcs	r2, r0, r3
   1ef38:	bcs	1f3b8 <main@@Base+0x931c>
   1ef3c:	movw	r0, #29556	; 0x7374
   1ef40:	movt	r0, #28261	; 0x6e65
   1ef44:	eor	r0, sl, r0
   1ef48:	orrs	r0, r0, r1
   1ef4c:	bne	21748 <main@@Base+0xb6ac>
   1ef50:	add	r1, r8, #8
   1ef54:	mov	r2, #8
   1ef58:	ldr	sl, [sp, #44]	; 0x2c
   1ef5c:	sub	r0, r6, r1
   1ef60:	cmp	r0, #8
   1ef64:	movcs	r0, r2
   1ef68:	and	r0, r0, #15
   1ef6c:	sub	r7, r0, #1
   1ef70:	cmp	r7, #7
   1ef74:	bhi	1f5b4 <main@@Base+0x9518>
   1ef78:	add	r0, pc, #32
   1ef7c:	mov	r9, #0
   1ef80:	mov	ip, #0
   1ef84:	mov	lr, #0
   1ef88:	mov	r6, #0
   1ef8c:	mov	r3, #0
   1ef90:	mov	r5, #0
   1ef94:	mov	r2, #0
   1ef98:	mov	r4, #0
   1ef9c:	ldr	pc, [r0, r7, lsl #2]
   1efa0:	andeq	pc, r1, r4
   1efa4:	strdeq	lr, [r1], -ip
   1efa8:	strdeq	lr, [r1], -r4
   1efac:	andeq	lr, r1, ip, ror #31
   1efb0:	andeq	lr, r1, r0, ror #31
   1efb4:	ldrdeq	lr, [r1], -r4
   1efb8:	andeq	lr, r1, r4, asr #31
   1efbc:	andeq	lr, r1, r0, asr #31
   1efc0:	ldrb	ip, [r8, #15]
   1efc4:	ldrb	r0, [r8, #14]
   1efc8:	mov	lr, r9
   1efcc:	orr	r0, ip, r0, lsl #8
   1efd0:	mov	r9, r0
   1efd4:	ldrb	r0, [r8, #13]
   1efd8:	mov	r6, lr
   1efdc:	orr	r9, r9, r0, lsl #16
   1efe0:	ldrb	r0, [r8, #12]
   1efe4:	mov	r3, r6
   1efe8:	orr	r9, r9, r0, lsl #24
   1efec:	ldrb	r0, [r8, #11]
   1eff0:	orr	r5, r0, r3
   1eff4:	ldrb	r0, [r8, #10]
   1eff8:	orr	r2, r5, r0, lsl #8
   1effc:	ldrb	r0, [r8, #9]
   1f000:	orr	r4, r2, r0, lsl #16
   1f004:	ldrb	r2, [r1]
   1f008:	movw	r0, #25205	; 0x6275
   1f00c:	movw	r3, #26220	; 0x666c
   1f010:	ldr	r6, [sp, #52]	; 0x34
   1f014:	movt	r0, #24948	; 0x6174
   1f018:	movt	r3, #25956	; 0x6564
   1f01c:	eor	r0, r9, r0
   1f020:	orr	r2, r4, r2, lsl #24
   1f024:	eor	r2, r2, r3
   1f028:	orrs	r0, r0, r2
   1f02c:	bne	1f5b4 <main@@Base+0x9518>
   1f030:	add	r7, r8, #16
   1f034:	mov	r1, #8
   1f038:	sub	r0, r6, r7
   1f03c:	cmp	r0, #8
   1f040:	movcc	r1, r0
   1f044:	and	r1, r1, #15
   1f048:	sub	r2, r1, #1
   1f04c:	cmp	r2, #7
   1f050:	bhi	1c464 <main@@Base+0x63c8>
   1f054:	add	r3, pc, #4
   1f058:	mov	r1, #0
   1f05c:	ldr	pc, [r3, r2, lsl #2]
   1f060:	muleq	r1, r4, r0
   1f064:	andeq	pc, r1, ip, lsl #1
   1f068:	andeq	pc, r1, r4, lsl #1
   1f06c:	andeq	pc, r1, r0, lsl #1
   1f070:	andeq	pc, r1, r0, lsl #1
   1f074:	andeq	pc, r1, r0, lsl #1
   1f078:	andeq	pc, r1, r0, lsl #1
   1f07c:	andeq	pc, r1, r0, lsl #1
   1f080:	ldrb	r1, [r8, #19]
   1f084:	ldrb	r2, [r8, #18]
   1f088:	orr	r1, r1, r2, lsl #8
   1f08c:	ldrb	r2, [r8, #17]
   1f090:	orr	r1, r1, r2, lsl #16
   1f094:	ldrb	r2, [r7]
   1f098:	orr	r1, r1, r2, lsl #24
   1f09c:	movw	r2, #25970	; 0x6572
   1f0a0:	movt	r2, #26214	; 0x6666
   1f0a4:	teq	r1, r2
   1f0a8:	bne	1c464 <main@@Base+0x63c8>
   1f0ac:	cmp	r0, #5
   1f0b0:	blt	1c464 <main@@Base+0x63c8>
   1f0b4:	ldr	r2, [sp, #40]	; 0x28
   1f0b8:	mov	r1, r8
   1f0bc:	ldrb	r0, [r1, #20]!
   1f0c0:	ldr	r2, [r2]
   1f0c4:	cmp	r2, #0
   1f0c8:	beq	2128c <main@@Base+0xb1f0>
   1f0cc:	cmp	r0, #33	; 0x21
   1f0d0:	bcc	1f0dc <main@@Base+0x9040>
   1f0d4:	cmp	r0, #58	; 0x3a
   1f0d8:	bne	1c464 <main@@Base+0x63c8>
   1f0dc:	ldr	r0, [sp, #40]	; 0x28
   1f0e0:	mov	r2, #0
   1f0e4:	str	r2, [r0]
   1f0e8:	sub	r0, r6, r1
   1f0ec:	cmp	r0, #2
   1f0f0:	bge	212a4 <main@@Base+0xb208>
   1f0f4:	b	193e4 <main@@Base+0x3348>
   1f0f8:	movw	r0, #27749	; 0x6c65
   1f0fc:	movw	r3, #26228	; 0x6674
   1f100:	ldr	r6, [sp, #52]	; 0x34
   1f104:	ldr	sl, [sp, #44]	; 0x2c
   1f108:	movt	r0, #24930	; 0x6162
   1f10c:	movt	r3, #31087	; 0x796f
   1f110:	eor	r0, r1, r0
   1f114:	eor	r3, r2, r3
   1f118:	orrs	r0, r0, r3
   1f11c:	beq	1f740 <main@@Base+0x96a4>
   1f120:	movw	r0, #26990	; 0x696e
   1f124:	movt	r0, #29810	; 0x7472
   1f128:	eor	r0, r1, r0
   1f12c:	eor	r1, r2, r7
   1f130:	orrs	r0, r0, r1
   1f134:	bne	1ab4c <main@@Base+0x4ab0>
   1f138:	add	r7, r8, #16
   1f13c:	mov	r1, #8
   1f140:	sub	r0, r6, r7
   1f144:	cmp	r0, #8
   1f148:	movcc	r1, r0
   1f14c:	and	r2, r1, #15
   1f150:	sub	r1, r2, #2
   1f154:	cmp	r1, #7
   1f158:	bcs	1fc00 <main@@Base+0x9b64>
   1f15c:	ldrb	r1, [r8, #17]
   1f160:	lsl	r2, r1, #16
   1f164:	mov	r1, #0
   1f168:	ldrb	r3, [r7]
   1f16c:	orr	r2, r2, r3, lsl #24
   1f170:	movw	r3, #0
   1f174:	movt	r3, #26418	; 0x6732
   1f178:	eor	r3, r2, r3
   1f17c:	orrs	r1, r1, r3
   1f180:	bne	1f978 <main@@Base+0x98dc>
   1f184:	cmp	r0, #3
   1f188:	blt	1c464 <main@@Base+0x63c8>
   1f18c:	ldr	r2, [sp, #40]	; 0x28
   1f190:	mov	r1, r8
   1f194:	ldrb	r0, [r1, #18]!
   1f198:	ldr	r2, [r2]
   1f19c:	cmp	r2, #0
   1f1a0:	beq	2019c <main@@Base+0xa100>
   1f1a4:	cmp	r0, #33	; 0x21
   1f1a8:	bcc	1f1b4 <main@@Base+0x9118>
   1f1ac:	cmp	r0, #58	; 0x3a
   1f1b0:	bne	1c464 <main@@Base+0x63c8>
   1f1b4:	ldr	r0, [sp, #40]	; 0x28
   1f1b8:	mov	r2, #0
   1f1bc:	str	r2, [r0]
   1f1c0:	sub	r0, r6, r1
   1f1c4:	cmp	r0, #2
   1f1c8:	bge	201b4 <main@@Base+0xa118>
   1f1cc:	b	21350 <main@@Base+0xb2b4>
   1f1d0:	ldr	sl, [sp, #44]	; 0x2c
   1f1d4:	cmp	r9, #6
   1f1d8:	mov	r7, r8
   1f1dc:	blt	20bcc <main@@Base+0xab30>
   1f1e0:	ldr	r2, [sp, #40]	; 0x28
   1f1e4:	mov	r1, r8
   1f1e8:	ldrb	r0, [r1, #5]!
   1f1ec:	ldr	r2, [r2]
   1f1f0:	cmp	r2, #0
   1f1f4:	beq	1fa08 <main@@Base+0x996c>
   1f1f8:	cmp	r0, #33	; 0x21
   1f1fc:	bcc	1f20c <main@@Base+0x9170>
   1f200:	cmp	r0, #58	; 0x3a
   1f204:	mov	r7, r8
   1f208:	bne	20bcc <main@@Base+0xab30>
   1f20c:	ldr	r0, [sp, #40]	; 0x28
   1f210:	mov	r2, #0
   1f214:	str	r2, [r0]
   1f218:	sub	r0, r6, r1
   1f21c:	cmp	r0, #2
   1f220:	bge	1fa24 <main@@Base+0x9988>
   1f224:	b	1fef0 <main@@Base+0x9e54>
   1f228:	ldr	sl, [sp, #44]	; 0x2c
   1f22c:	mov	r1, r8
   1f230:	b	207b0 <main@@Base+0xa714>
   1f234:	ldr	sl, [sp, #44]	; 0x2c
   1f238:	movw	r1, #29440	; 0x7300
   1f23c:	bic	r0, r0, #255	; 0xff
   1f240:	mov	r6, r5
   1f244:	movt	r1, #28783	; 0x706f
   1f248:	teq	r0, r1
   1f24c:	bne	2174c <main@@Base+0xb6b0>
   1f250:	cmp	r9, #4
   1f254:	mov	r4, r8
   1f258:	blt	17ad0 <main@@Base+0x1a34>
   1f25c:	ldr	r2, [sp, #40]	; 0x28
   1f260:	mov	r1, r8
   1f264:	ldrb	r0, [r1, #3]!
   1f268:	ldr	r2, [r2]
   1f26c:	cmp	r2, #0
   1f270:	beq	1fdbc <main@@Base+0x9d20>
   1f274:	cmp	r0, #33	; 0x21
   1f278:	bcc	1f288 <main@@Base+0x91ec>
   1f27c:	cmp	r0, #58	; 0x3a
   1f280:	mov	r4, r8
   1f284:	bne	17ad0 <main@@Base+0x1a34>
   1f288:	ldr	r0, [sp, #40]	; 0x28
   1f28c:	mov	r2, #0
   1f290:	str	r2, [r0]
   1f294:	sub	r0, r6, r1
   1f298:	cmp	r0, #2
   1f29c:	bge	1fdd8 <main@@Base+0x9d3c>
   1f2a0:	b	2089c <main@@Base+0xa800>
   1f2a4:	eor	r1, sl, r3
   1f2a8:	eor	r2, r0, r2
   1f2ac:	orrs	r1, r1, r2
   1f2b0:	bne	1f7c0 <main@@Base+0x9724>
   1f2b4:	add	r7, r8, #8
   1f2b8:	mov	r1, #8
   1f2bc:	mov	r2, #-268435456	; 0xf0000000
   1f2c0:	ldr	sl, [sp, #44]	; 0x2c
   1f2c4:	sub	r0, r6, r7
   1f2c8:	cmp	r0, #8
   1f2cc:	movcc	r1, r0
   1f2d0:	add	r1, r2, r1, lsl #28
   1f2d4:	asr	r1, r1, #28
   1f2d8:	cmp	r1, #0
   1f2dc:	blt	1c464 <main@@Base+0x63c8>
   1f2e0:	ldrb	r1, [r7]
   1f2e4:	cmp	r1, #121	; 0x79
   1f2e8:	bne	1c464 <main@@Base+0x63c8>
   1f2ec:	cmp	r0, #2
   1f2f0:	blt	1c464 <main@@Base+0x63c8>
   1f2f4:	ldr	r2, [sp, #40]	; 0x28
   1f2f8:	mov	r1, r8
   1f2fc:	ldrb	r0, [r1, #9]!
   1f300:	ldr	r2, [r2]
   1f304:	cmp	r2, #0
   1f308:	beq	209b4 <main@@Base+0xa918>
   1f30c:	cmp	r0, #33	; 0x21
   1f310:	bcc	1f31c <main@@Base+0x9280>
   1f314:	cmp	r0, #58	; 0x3a
   1f318:	bne	1c464 <main@@Base+0x63c8>
   1f31c:	ldr	r0, [sp, #40]	; 0x28
   1f320:	mov	r2, #0
   1f324:	str	r2, [r0]
   1f328:	sub	r0, r6, r1
   1f32c:	cmp	r0, #2
   1f330:	bge	209cc <main@@Base+0xa930>
   1f334:	b	18b6c <main@@Base+0x2ad0>
   1f338:	movw	r3, #0
   1f33c:	mov	r2, sl
   1f340:	movt	r3, #26163	; 0x6633
   1f344:	bfc	r2, #0, #16
   1f348:	subs	r3, r3, #65536	; 0x10000
   1f34c:	eor	r2, r2, r3
   1f350:	sbc	r3, r7, #0
   1f354:	eor	r0, r0, r3
   1f358:	orrs	r0, r2, r0
   1f35c:	bne	1f828 <main@@Base+0x978c>
   1f360:	ldr	sl, [sp, #44]	; 0x2c
   1f364:	cmp	r9, #7
   1f368:	mov	r7, r8
   1f36c:	blt	18a4c <main@@Base+0x29b0>
   1f370:	ldr	r2, [sp, #40]	; 0x28
   1f374:	mov	r1, r8
   1f378:	ldrb	r0, [r1, #6]!
   1f37c:	ldr	r2, [r2]
   1f380:	cmp	r2, #0
   1f384:	beq	1fdf4 <main@@Base+0x9d58>
   1f388:	cmp	r0, #33	; 0x21
   1f38c:	bcc	1f39c <main@@Base+0x9300>
   1f390:	cmp	r0, #58	; 0x3a
   1f394:	mov	r7, r8
   1f398:	bne	18a4c <main@@Base+0x29b0>
   1f39c:	ldr	r0, [sp, #40]	; 0x28
   1f3a0:	mov	r2, #0
   1f3a4:	str	r2, [r0]
   1f3a8:	sub	r0, r6, r1
   1f3ac:	cmp	r0, #2
   1f3b0:	bge	1fe10 <main@@Base+0x9d74>
   1f3b4:	b	20918 <main@@Base+0xa87c>
   1f3b8:	eor	r1, sl, r7
   1f3bc:	eor	r0, r0, r3
   1f3c0:	orrs	r0, r1, r0
   1f3c4:	bne	21748 <main@@Base+0xb6ac>
   1f3c8:	add	r9, r8, #8
   1f3cc:	mov	r0, #8
   1f3d0:	mov	r7, r6
   1f3d4:	sub	lr, r6, r9
   1f3d8:	cmp	lr, #8
   1f3dc:	movcc	r0, lr
   1f3e0:	and	r0, r0, #15
   1f3e4:	sub	r6, r0, #1
   1f3e8:	cmp	r6, #7
   1f3ec:	bhi	1fb70 <main@@Base+0x9ad4>
   1f3f0:	add	r7, pc, #32
   1f3f4:	mov	r1, #0
   1f3f8:	mov	ip, #0
   1f3fc:	mov	sl, #0
   1f400:	mov	r4, #0
   1f404:	mov	r3, #0
   1f408:	mov	r5, #0
   1f40c:	mov	r2, #0
   1f410:	mov	r0, #0
   1f414:	ldr	pc, [r7, r6, lsl #2]
   1f418:	andeq	pc, r1, ip, ror r4	; <UNPREDICTABLE>
   1f41c:	andeq	pc, r1, r4, ror r4	; <UNPREDICTABLE>
   1f420:	andeq	pc, r1, ip, ror #8
   1f424:	andeq	pc, r1, r4, ror #8
   1f428:	andeq	pc, r1, r8, asr r4	; <UNPREDICTABLE>
   1f42c:	andeq	pc, r1, ip, asr #8
   1f430:	andeq	pc, r1, ip, lsr r4	; <UNPREDICTABLE>
   1f434:	andeq	pc, r1, r8, lsr r4	; <UNPREDICTABLE>
   1f438:	ldrb	ip, [r8, #15]
   1f43c:	ldrb	r0, [r8, #14]
   1f440:	mov	sl, r1
   1f444:	orr	r0, ip, r0, lsl #8
   1f448:	mov	r1, r0
   1f44c:	ldrb	r0, [r8, #13]
   1f450:	mov	r4, sl
   1f454:	orr	r1, r1, r0, lsl #16
   1f458:	ldrb	r0, [r8, #12]
   1f45c:	mov	r3, r4
   1f460:	orr	r1, r1, r0, lsl #24
   1f464:	ldrb	r0, [r8, #11]
   1f468:	orr	r5, r0, r3
   1f46c:	ldrb	r0, [r8, #10]
   1f470:	orr	r2, r5, r0, lsl #8
   1f474:	ldrb	r0, [r8, #9]
   1f478:	orr	r0, r2, r0, lsl #16
   1f47c:	ldrb	r3, [r9]
   1f480:	movw	r2, #27749	; 0x6c65
   1f484:	movt	r2, #30050	; 0x7562
   1f488:	eor	r2, r1, r2
   1f48c:	orr	r0, r0, r3, lsl #24
   1f490:	movw	r3, #25711	; 0x646f
   1f494:	movt	r3, #26207	; 0x665f
   1f498:	eor	r3, r0, r3
   1f49c:	orrs	r2, r2, r3
   1f4a0:	bne	1fa40 <main@@Base+0x99a4>
   1f4a4:	ldr	r6, [sp, #52]	; 0x34
   1f4a8:	add	r7, r8, #16
   1f4ac:	mov	r1, #8
   1f4b0:	mov	r2, #-268435456	; 0xf0000000
   1f4b4:	ldr	sl, [sp, #44]	; 0x2c
   1f4b8:	sub	r0, r6, r7
   1f4bc:	cmp	r0, #8
   1f4c0:	movcc	r1, r0
   1f4c4:	add	r1, r2, r1, lsl #28
   1f4c8:	asr	r1, r1, #28
   1f4cc:	cmp	r1, #0
   1f4d0:	blt	1c464 <main@@Base+0x63c8>
   1f4d4:	ldrb	r1, [r7]
   1f4d8:	cmp	r1, #115	; 0x73
   1f4dc:	bne	1c464 <main@@Base+0x63c8>
   1f4e0:	cmp	r0, #2
   1f4e4:	blt	1c464 <main@@Base+0x63c8>
   1f4e8:	ldr	r2, [sp, #40]	; 0x28
   1f4ec:	mov	r1, r8
   1f4f0:	ldrb	r0, [r1, #17]!
   1f4f4:	ldr	r2, [r2]
   1f4f8:	cmp	r2, #0
   1f4fc:	beq	174c4 <main@@Base+0x1428>
   1f500:	cmp	r0, #33	; 0x21
   1f504:	bcc	1f510 <main@@Base+0x9474>
   1f508:	cmp	r0, #58	; 0x3a
   1f50c:	bne	1c464 <main@@Base+0x63c8>
   1f510:	ldr	r0, [sp, #40]	; 0x28
   1f514:	mov	r2, #0
   1f518:	str	r2, [r0]
   1f51c:	sub	r0, r6, r1
   1f520:	cmp	r0, #2
   1f524:	bge	174dc <main@@Base+0x1440>
   1f528:	b	19b60 <main@@Base+0x3ac4>
   1f52c:	movw	r0, #30256	; 0x7630
   1f530:	ldr	r6, [sp, #52]	; 0x34
   1f534:	movt	r0, #26222	; 0x666e
   1f538:	subs	r0, r0, r1
   1f53c:	movw	r0, #12895	; 0x325f
   1f540:	movt	r0, #30003	; 0x7533
   1f544:	sbcs	r0, r0, r2
   1f548:	eor	r0, r1, r3
   1f54c:	bcc	1f890 <main@@Base+0x97f4>
   1f550:	movw	r1, #13407	; 0x345f
   1f554:	ldr	sl, [sp, #44]	; 0x2c
   1f558:	movt	r1, #29494	; 0x7336
   1f55c:	eor	r1, r2, r1
   1f560:	orrs	r0, r0, r1
   1f564:	bne	1ab4c <main@@Base+0x4ab0>
   1f568:	cmp	ip, #9
   1f56c:	blt	2158c <main@@Base+0xb4f0>
   1f570:	ldr	r2, [sp, #40]	; 0x28
   1f574:	mov	r1, r8
   1f578:	ldrb	r0, [r1, #16]!
   1f57c:	ldr	r2, [r2]
   1f580:	cmp	r2, #0
   1f584:	beq	202f0 <main@@Base+0xa254>
   1f588:	cmp	r0, #33	; 0x21
   1f58c:	bcc	1f598 <main@@Base+0x94fc>
   1f590:	cmp	r0, #58	; 0x3a
   1f594:	bne	2158c <main@@Base+0xb4f0>
   1f598:	ldr	r0, [sp, #40]	; 0x28
   1f59c:	mov	r2, #0
   1f5a0:	str	r2, [r0]
   1f5a4:	sub	r0, r6, r1
   1f5a8:	cmp	r0, #2
   1f5ac:	bge	20308 <main@@Base+0xa26c>
   1f5b0:	b	21540 <main@@Base+0xb4a4>
   1f5b4:	mov	r0, sl
   1f5b8:	b	21754 <main@@Base+0xb6b8>
   1f5bc:	ldr	sl, [sp, #44]	; 0x2c
   1f5c0:	cmp	r9, #9
   1f5c4:	mov	r7, r8
   1f5c8:	blt	1751c <main@@Base+0x1480>
   1f5cc:	ldr	r2, [sp, #40]	; 0x28
   1f5d0:	mov	r1, r8
   1f5d4:	ldrb	r0, [r1, #8]!
   1f5d8:	ldr	r2, [r2]
   1f5dc:	cmp	r2, #0
   1f5e0:	beq	1fc14 <main@@Base+0x9b78>
   1f5e4:	cmp	r0, #33	; 0x21
   1f5e8:	bcc	1f5f8 <main@@Base+0x955c>
   1f5ec:	cmp	r0, #58	; 0x3a
   1f5f0:	mov	r7, r8
   1f5f4:	bne	1751c <main@@Base+0x1480>
   1f5f8:	ldr	r0, [sp, #40]	; 0x28
   1f5fc:	mov	r2, #0
   1f600:	str	r2, [r0]
   1f604:	sub	r0, r6, r1
   1f608:	cmp	r0, #2
   1f60c:	bge	1fc30 <main@@Base+0x9b94>
   1f610:	b	20338 <main@@Base+0xa29c>
   1f614:	ldr	sl, [sp, #44]	; 0x2c
   1f618:	b	1ab4c <main@@Base+0x4ab0>
   1f61c:	add	r9, r8, #16
   1f620:	mov	r1, #8
   1f624:	ldr	sl, [sp, #44]	; 0x2c
   1f628:	sub	lr, r6, r9
   1f62c:	cmp	lr, #8
   1f630:	movcc	r1, lr
   1f634:	and	r1, r1, #15
   1f638:	sub	r7, r1, #1
   1f63c:	cmp	r7, #7
   1f640:	bhi	1ab4c <main@@Base+0x4ab0>
   1f644:	add	r0, pc, #28
   1f648:	mov	r1, #0
   1f64c:	mov	ip, #0
   1f650:	mov	r5, #0
   1f654:	mov	r3, #0
   1f658:	mov	r6, #0
   1f65c:	mov	r4, #0
   1f660:	mov	r2, #0
   1f664:	ldr	pc, [r0, r7, lsl #2]
   1f668:	andeq	pc, r1, r4, asr #13
   1f66c:			; <UNDEFINED> instruction: 0x0001f6bc
   1f670:			; <UNDEFINED> instruction: 0x0001f6b4
   1f674:	andeq	pc, r1, ip, lsr #13
   1f678:	andeq	pc, r1, r0, lsr #13
   1f67c:	muleq	r1, r0, r6
   1f680:	andeq	pc, r1, r8, lsl #13
   1f684:	andeq	pc, r1, r8, lsl #13
   1f688:	ldrb	r0, [r8, #22]
   1f68c:	lsl	ip, r0, #8
   1f690:	ldrb	r0, [r8, #21]
   1f694:	mov	r5, r1
   1f698:	orr	r0, ip, r0, lsl #16
   1f69c:	mov	r1, r0
   1f6a0:	ldrb	r0, [r8, #20]
   1f6a4:	mov	r3, r5
   1f6a8:	orr	r1, r1, r0, lsl #24
   1f6ac:	ldrb	r0, [r8, #19]
   1f6b0:	orr	r6, r0, r3
   1f6b4:	ldrb	r0, [r8, #18]
   1f6b8:	orr	r4, r6, r0, lsl #8
   1f6bc:	ldrb	r0, [r8, #17]
   1f6c0:	orr	r2, r4, r0, lsl #16
   1f6c4:	bic	r0, r1, #255	; 0xff
   1f6c8:	movw	r1, #29696	; 0x7400
   1f6cc:	ldr	r6, [sp, #52]	; 0x34
   1f6d0:	movt	r1, #30051	; 0x7563
   1f6d4:	eor	r0, r0, r1
   1f6d8:	ldrb	r1, [r9]
   1f6dc:	orr	r1, r2, r1, lsl #24
   1f6e0:	movw	r2, #29810	; 0x7472
   1f6e4:	movt	r2, #25715	; 0x6473
   1f6e8:	eor	r1, r1, r2
   1f6ec:	orrs	r0, r0, r1
   1f6f0:	bne	1ab4c <main@@Base+0x4ab0>
   1f6f4:	cmp	lr, #8
   1f6f8:	blt	1ab4c <main@@Base+0x4ab0>
   1f6fc:	ldr	r2, [sp, #40]	; 0x28
   1f700:	mov	r1, r8
   1f704:	ldrb	r0, [r1, #23]!
   1f708:	ldr	r2, [r2]
   1f70c:	cmp	r2, #0
   1f710:	beq	201d0 <main@@Base+0xa134>
   1f714:	cmp	r0, #33	; 0x21
   1f718:	bcc	1f724 <main@@Base+0x9688>
   1f71c:	cmp	r0, #58	; 0x3a
   1f720:	bne	1ab4c <main@@Base+0x4ab0>
   1f724:	ldr	r0, [sp, #40]	; 0x28
   1f728:	mov	r2, #0
   1f72c:	str	r2, [r0]
   1f730:	sub	r0, r6, r1
   1f734:	cmp	r0, #2
   1f738:	bge	201e8 <main@@Base+0xa14c>
   1f73c:	b	213cc <main@@Base+0xb330>
   1f740:	add	r7, r8, #16
   1f744:	mov	r1, #8
   1f748:	mov	r2, #-268435456	; 0xf0000000
   1f74c:	sub	r0, r6, r7
   1f750:	cmp	r0, #8
   1f754:	movcc	r1, r0
   1f758:	add	r1, r2, r1, lsl #28
   1f75c:	asr	r1, r1, #28
   1f760:	cmp	r1, #0
   1f764:	blt	1c464 <main@@Base+0x63c8>
   1f768:	ldrb	r1, [r7]
   1f76c:	cmp	r1, #115	; 0x73
   1f770:	bne	1c464 <main@@Base+0x63c8>
   1f774:	cmp	r0, #2
   1f778:	blt	1c464 <main@@Base+0x63c8>
   1f77c:	ldr	r2, [sp, #40]	; 0x28
   1f780:	mov	r1, r8
   1f784:	ldrb	r0, [r1, #17]!
   1f788:	ldr	r2, [r2]
   1f78c:	cmp	r2, #0
   1f790:	beq	207d8 <main@@Base+0xa73c>
   1f794:	cmp	r0, #33	; 0x21
   1f798:	bcc	1f7a4 <main@@Base+0x9708>
   1f79c:	cmp	r0, #58	; 0x3a
   1f7a0:	bne	1c464 <main@@Base+0x63c8>
   1f7a4:	ldr	r0, [sp, #40]	; 0x28
   1f7a8:	mov	r2, #0
   1f7ac:	str	r2, [r0]
   1f7b0:	sub	r0, r6, r1
   1f7b4:	cmp	r0, #2
   1f7b8:	bge	207f0 <main@@Base+0xa754>
   1f7bc:	b	17874 <main@@Base+0x17d8>
   1f7c0:	ldr	sl, [sp, #44]	; 0x2c
   1f7c4:	movw	r1, #28257	; 0x6e61
   1f7c8:	movt	r1, #28001	; 0x6d61
   1f7cc:	teq	r0, r1
   1f7d0:	bne	2174c <main@@Base+0xb6b0>
   1f7d4:	cmp	r9, #5
   1f7d8:	mov	r7, r8
   1f7dc:	blt	197e4 <main@@Base+0x3748>
   1f7e0:	ldr	r2, [sp, #40]	; 0x28
   1f7e4:	mov	r1, r8
   1f7e8:	ldrb	r0, [r1, #4]!
   1f7ec:	ldr	r2, [r2]
   1f7f0:	cmp	r2, #0
   1f7f4:	beq	20204 <main@@Base+0xa168>
   1f7f8:	cmp	r0, #33	; 0x21
   1f7fc:	bcc	1f80c <main@@Base+0x9770>
   1f800:	cmp	r0, #58	; 0x3a
   1f804:	mov	r7, r8
   1f808:	bne	197e4 <main@@Base+0x3748>
   1f80c:	ldr	r0, [sp, #40]	; 0x28
   1f810:	mov	r2, #0
   1f814:	str	r2, [r0]
   1f818:	sub	r0, r6, r1
   1f81c:	cmp	r0, #2
   1f820:	bge	20220 <main@@Base+0xa184>
   1f824:	b	21448 <main@@Base+0xb3ac>
   1f828:	and	r0, sl, #-16777216	; 0xff000000
   1f82c:	eor	r0, r0, #1711276032	; 0x66000000
   1f830:	orrs	r0, r0, r1
   1f834:	bne	21748 <main@@Base+0xb6ac>
   1f838:	ldr	sl, [sp, #44]	; 0x2c
   1f83c:	cmp	r9, #6
   1f840:	mov	r7, r8
   1f844:	blt	199b0 <main@@Base+0x3914>
   1f848:	ldr	r2, [sp, #40]	; 0x28
   1f84c:	mov	r1, r8
   1f850:	ldrb	r0, [r1, #5]!
   1f854:	ldr	r2, [r2]
   1f858:	cmp	r2, #0
   1f85c:	beq	2023c <main@@Base+0xa1a0>
   1f860:	cmp	r0, #33	; 0x21
   1f864:	bcc	1f874 <main@@Base+0x97d8>
   1f868:	cmp	r0, #58	; 0x3a
   1f86c:	mov	r7, r8
   1f870:	bne	199b0 <main@@Base+0x3914>
   1f874:	ldr	r0, [sp, #40]	; 0x28
   1f878:	mov	r2, #0
   1f87c:	str	r2, [r0]
   1f880:	sub	r0, r6, r1
   1f884:	cmp	r0, #2
   1f888:	bge	20258 <main@@Base+0xa1bc>
   1f88c:	b	214c4 <main@@Base+0xb428>
   1f890:	movw	r1, #13407	; 0x345f
   1f894:	ldr	sl, [sp, #44]	; 0x2c
   1f898:	movt	r1, #30006	; 0x7536
   1f89c:	eor	r1, r2, r1
   1f8a0:	orrs	r1, r0, r1
   1f8a4:	beq	1fbb4 <main@@Base+0x9b18>
   1f8a8:	movw	r1, #12895	; 0x325f
   1f8ac:	movt	r1, #30003	; 0x7533
   1f8b0:	eor	r1, r2, r1
   1f8b4:	orrs	r0, r0, r1
   1f8b8:	bne	1ab4c <main@@Base+0x4ab0>
   1f8bc:	cmp	ip, #9
   1f8c0:	blt	18c3c <main@@Base+0x2ba0>
   1f8c4:	ldr	r2, [sp, #40]	; 0x28
   1f8c8:	mov	r1, r8
   1f8cc:	ldrb	r0, [r1, #16]!
   1f8d0:	ldr	r2, [r2]
   1f8d4:	cmp	r2, #0
   1f8d8:	beq	209e8 <main@@Base+0xa94c>
   1f8dc:	cmp	r0, #33	; 0x21
   1f8e0:	bcc	1f8ec <main@@Base+0x9850>
   1f8e4:	cmp	r0, #58	; 0x3a
   1f8e8:	bne	18c3c <main@@Base+0x2ba0>
   1f8ec:	ldr	r0, [sp, #40]	; 0x28
   1f8f0:	mov	r2, #0
   1f8f4:	str	r2, [r0]
   1f8f8:	sub	r0, r6, r1
   1f8fc:	cmp	r0, #2
   1f900:	bge	20a00 <main@@Base+0xa964>
   1f904:	b	18be8 <main@@Base+0x2b4c>
   1f908:	cmp	r0, #34	; 0x22
   1f90c:	mov	r7, r8
   1f910:	bne	203c0 <main@@Base+0xa324>
   1f914:	add	r1, r8, #7
   1f918:	sub	r0, r6, r1
   1f91c:	cmp	r0, #2
   1f920:	blt	1fc60 <main@@Base+0x9bc4>
   1f924:	ldrb	r0, [r1]
   1f928:	cmp	r0, #32
   1f92c:	bls	1fc4c <main@@Base+0x9bb0>
   1f930:	mov	r7, r1
   1f934:	cmp	r7, r6
   1f938:	bne	1fc78 <main@@Base+0x9bdc>
   1f93c:	b	1fcb0 <main@@Base+0x9c14>
   1f940:	cmp	r0, #34	; 0x22
   1f944:	mov	r7, r8
   1f948:	bne	20498 <main@@Base+0xa3fc>
   1f94c:	add	r1, r8, #6
   1f950:	sub	r0, r6, r1
   1f954:	cmp	r0, #2
   1f958:	blt	1fcdc <main@@Base+0x9c40>
   1f95c:	ldrb	r0, [r1]
   1f960:	cmp	r0, #32
   1f964:	bls	1fcc8 <main@@Base+0x9c2c>
   1f968:	mov	r7, r1
   1f96c:	cmp	r7, r6
   1f970:	bne	1fcf4 <main@@Base+0x9c58>
   1f974:	b	1fd2c <main@@Base+0x9c90>
   1f978:	and	r1, r2, #-16777216	; 0xff000000
   1f97c:	teq	r1, #1728053248	; 0x67000000
   1f980:	bne	1c464 <main@@Base+0x63c8>
   1f984:	cmp	r0, #2
   1f988:	blt	1c464 <main@@Base+0x63c8>
   1f98c:	ldr	r2, [sp, #40]	; 0x28
   1f990:	mov	r1, r8
   1f994:	ldrb	r0, [r1, #17]!
   1f998:	ldr	r2, [r2]
   1f99c:	cmp	r2, #0
   1f9a0:	beq	20d44 <main@@Base+0xaca8>
   1f9a4:	cmp	r0, #33	; 0x21
   1f9a8:	bcc	1f9b4 <main@@Base+0x9918>
   1f9ac:	cmp	r0, #58	; 0x3a
   1f9b0:	bne	1c464 <main@@Base+0x63c8>
   1f9b4:	ldr	r0, [sp, #40]	; 0x28
   1f9b8:	mov	r2, #0
   1f9bc:	str	r2, [r0]
   1f9c0:	sub	r0, r6, r1
   1f9c4:	cmp	r0, #2
   1f9c8:	bge	20d5c <main@@Base+0xacc0>
   1f9cc:	b	18f14 <main@@Base+0x2e78>
   1f9d0:	cmp	r0, #34	; 0x22
   1f9d4:	mov	r1, r8
   1f9d8:	bne	20b6c <main@@Base+0xaad0>
   1f9dc:	add	r2, r8, #6
   1f9e0:	sub	r0, r6, r2
   1f9e4:	cmp	r0, #2
   1f9e8:	blt	1fe74 <main@@Base+0x9dd8>
   1f9ec:	ldrb	r0, [r2]
   1f9f0:	cmp	r0, #32
   1f9f4:	bls	1fe60 <main@@Base+0x9dc4>
   1f9f8:	mov	r1, r2
   1f9fc:	cmp	r1, r6
   1fa00:	bne	1fe90 <main@@Base+0x9df4>
   1fa04:	b	1fec8 <main@@Base+0x9e2c>
   1fa08:	cmp	r0, #34	; 0x22
   1fa0c:	mov	r7, r8
   1fa10:	bne	20bcc <main@@Base+0xab30>
   1fa14:	add	r1, r8, #6
   1fa18:	sub	r0, r6, r1
   1fa1c:	cmp	r0, #2
   1fa20:	blt	1fef0 <main@@Base+0x9e54>
   1fa24:	ldrb	r0, [r1]
   1fa28:	cmp	r0, #32
   1fa2c:	bls	1fedc <main@@Base+0x9e40>
   1fa30:	mov	r7, r1
   1fa34:	cmp	r7, r6
   1fa38:	bne	1ff08 <main@@Base+0x9e6c>
   1fa3c:	b	1ff40 <main@@Base+0x9ea4>
   1fa40:	movw	r2, #24428	; 0x5f6c
   1fa44:	lsr	r1, r1, #8
   1fa48:	ldr	r7, [sp, #52]	; 0x34
   1fa4c:	movt	r2, #102	; 0x66
   1fa50:	eor	r2, r2, r0, lsr #8
   1fa54:	orr	r0, r1, r0, lsl #24
   1fa58:	movw	r1, #26483	; 0x6773
   1fa5c:	movt	r1, #28526	; 0x6f6e
   1fa60:	eor	r0, r0, r1
   1fa64:	orrs	r0, r0, r2
   1fa68:	bne	1fb70 <main@@Base+0x9ad4>
   1fa6c:	ldr	sl, [sp, #44]	; 0x2c
   1fa70:	cmp	lr, #8
   1fa74:	mov	r6, r7
   1fa78:	blt	1ab4c <main@@Base+0x4ab0>
   1fa7c:	ldr	r2, [sp, #40]	; 0x28
   1fa80:	mov	r1, r8
   1fa84:	ldrb	r0, [r1, #15]!
   1fa88:	ldr	r2, [r2]
   1fa8c:	cmp	r2, #0
   1fa90:	beq	20dac <main@@Base+0xad10>
   1fa94:	cmp	r0, #33	; 0x21
   1fa98:	bcc	1faa4 <main@@Base+0x9a08>
   1fa9c:	cmp	r0, #58	; 0x3a
   1faa0:	bne	1ab4c <main@@Base+0x4ab0>
   1faa4:	ldr	r0, [sp, #40]	; 0x28
   1faa8:	mov	r2, #0
   1faac:	str	r2, [r0]
   1fab0:	sub	r0, r6, r1
   1fab4:	cmp	r0, #2
   1fab8:	bge	20dc4 <main@@Base+0xad28>
   1fabc:	b	19360 <main@@Base+0x32c4>
   1fac0:	cmp	r0, #34	; 0x22
   1fac4:	mov	r1, r8
   1fac8:	bne	20e04 <main@@Base+0xad68>
   1facc:	add	r2, r8, #5
   1fad0:	sub	r0, r6, r2
   1fad4:	cmp	r0, #2
   1fad8:	blt	1ff6c <main@@Base+0x9ed0>
   1fadc:	ldrb	r0, [r2]
   1fae0:	cmp	r0, #32
   1fae4:	bls	1ff58 <main@@Base+0x9ebc>
   1fae8:	mov	r1, r2
   1faec:	cmp	r1, r6
   1faf0:	bne	1ff88 <main@@Base+0x9eec>
   1faf4:	b	1ffc0 <main@@Base+0x9f24>
   1faf8:	cmp	r0, #34	; 0x22
   1fafc:	mov	r4, r8
   1fb00:	bne	20e6c <main@@Base+0xadd0>
   1fb04:	add	r1, r8, #5
   1fb08:	sub	r0, r6, r1
   1fb0c:	cmp	r0, #2
   1fb10:	blt	1ffe8 <main@@Base+0x9f4c>
   1fb14:	ldrb	r0, [r1]
   1fb18:	cmp	r0, #32
   1fb1c:	bls	1ffd4 <main@@Base+0x9f38>
   1fb20:	mov	r4, r1
   1fb24:	cmp	r4, r6
   1fb28:	bne	20000 <main@@Base+0x9f64>
   1fb2c:	b	20038 <main@@Base+0x9f9c>
   1fb30:	cmp	r0, #34	; 0x22
   1fb34:	mov	r1, r8
   1fb38:	bne	21228 <main@@Base+0xb18c>
   1fb3c:	add	r2, r8, #5
   1fb40:	sub	r0, r5, r2
   1fb44:	mov	r7, r5
   1fb48:	cmp	r0, #2
   1fb4c:	blt	20068 <main@@Base+0x9fcc>
   1fb50:	ldrb	r0, [r2]
   1fb54:	cmp	r0, #32
   1fb58:	bls	20050 <main@@Base+0x9fb4>
   1fb5c:	mov	r1, r2
   1fb60:	mov	r7, r5
   1fb64:	cmp	r1, r7
   1fb68:	bne	20084 <main@@Base+0x9fe8>
   1fb6c:	b	2011c <main@@Base+0xa080>
   1fb70:	ldr	sl, [sp, #44]	; 0x2c
   1fb74:	mov	r1, r9
   1fb78:	mov	r2, r7
   1fb7c:	mov	r0, sl
   1fb80:	bl	376d0 <flatcc_json_parser_unmatched_symbol@@Base>
   1fb84:	ldr	r5, [sp, #48]	; 0x30
   1fb88:	mov	r4, r0
   1fb8c:	mov	r6, r7
   1fb90:	sub	r0, r6, r4
   1fb94:	cmp	r0, #2
   1fb98:	bge	21770 <main@@Base+0xb6d4>
   1fb9c:	b	19970 <main@@Base+0x38d4>
   1fba0:	cmp	r2, #1
   1fba4:	mov	r1, #0
   1fba8:	mov	r2, #0
   1fbac:	beq	1e994 <main@@Base+0x88f8>
   1fbb0:	b	1c464 <main@@Base+0x63c8>
   1fbb4:	cmp	ip, #9
   1fbb8:	blt	18d3c <main@@Base+0x2ca0>
   1fbbc:	ldr	r2, [sp, #40]	; 0x28
   1fbc0:	mov	r1, r8
   1fbc4:	ldrb	r0, [r1, #16]!
   1fbc8:	ldr	r2, [r2]
   1fbcc:	cmp	r2, #0
   1fbd0:	beq	20a1c <main@@Base+0xa980>
   1fbd4:	cmp	r0, #33	; 0x21
   1fbd8:	bcc	1fbe4 <main@@Base+0x9b48>
   1fbdc:	cmp	r0, #58	; 0x3a
   1fbe0:	bne	18d3c <main@@Base+0x2ca0>
   1fbe4:	ldr	r0, [sp, #40]	; 0x28
   1fbe8:	mov	r2, #0
   1fbec:	str	r2, [r0]
   1fbf0:	sub	r0, r6, r1
   1fbf4:	cmp	r0, #2
   1fbf8:	bge	20a34 <main@@Base+0xa998>
   1fbfc:	b	18ce8 <main@@Base+0x2c4c>
   1fc00:	cmp	r2, #1
   1fc04:	mov	r1, #0
   1fc08:	mov	r2, #0
   1fc0c:	beq	1f168 <main@@Base+0x90cc>
   1fc10:	b	1c464 <main@@Base+0x63c8>
   1fc14:	cmp	r0, #34	; 0x22
   1fc18:	mov	r7, r8
   1fc1c:	bne	1751c <main@@Base+0x1480>
   1fc20:	add	r1, r8, #9
   1fc24:	sub	r0, r6, r1
   1fc28:	cmp	r0, #2
   1fc2c:	blt	20338 <main@@Base+0xa29c>
   1fc30:	ldrb	r0, [r1]
   1fc34:	cmp	r0, #32
   1fc38:	bls	20324 <main@@Base+0xa288>
   1fc3c:	mov	r7, r1
   1fc40:	cmp	r7, r6
   1fc44:	bne	20350 <main@@Base+0xa2b4>
   1fc48:	b	20388 <main@@Base+0xa2ec>
   1fc4c:	bne	1fc60 <main@@Base+0x9bc4>
   1fc50:	mov	r7, r1
   1fc54:	ldrb	r0, [r7, #1]!
   1fc58:	cmp	r0, #32
   1fc5c:	bhi	1fc70 <main@@Base+0x9bd4>
   1fc60:	mov	r0, sl
   1fc64:	mov	r2, r6
   1fc68:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1fc6c:	mov	r7, r0
   1fc70:	cmp	r7, r6
   1fc74:	beq	1fcb0 <main@@Base+0x9c14>
   1fc78:	ldrb	r0, [r7]
   1fc7c:	cmp	r0, #58	; 0x3a
   1fc80:	bne	1fcb0 <main@@Base+0x9c14>
   1fc84:	add	r1, r7, #1
   1fc88:	sub	r0, r6, r1
   1fc8c:	cmp	r0, #2
   1fc90:	blt	203b0 <main@@Base+0xa314>
   1fc94:	ldrb	r0, [r1]
   1fc98:	cmp	r0, #32
   1fc9c:	bls	203a0 <main@@Base+0xa304>
   1fca0:	mov	r7, r1
   1fca4:	cmp	r8, r7
   1fca8:	bne	203c8 <main@@Base+0xa32c>
   1fcac:	b	2174c <main@@Base+0xb6b0>
   1fcb0:	mov	r0, sl
   1fcb4:	mov	r1, r7
   1fcb8:	mov	r2, r6
   1fcbc:	mov	r3, #4
   1fcc0:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1fcc4:	b	203bc <main@@Base+0xa320>
   1fcc8:	bne	1fcdc <main@@Base+0x9c40>
   1fccc:	mov	r7, r1
   1fcd0:	ldrb	r0, [r7, #1]!
   1fcd4:	cmp	r0, #32
   1fcd8:	bhi	1fcec <main@@Base+0x9c50>
   1fcdc:	ldr	r0, [sp, #44]	; 0x2c
   1fce0:	mov	r2, r6
   1fce4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1fce8:	mov	r7, r0
   1fcec:	cmp	r7, r6
   1fcf0:	beq	1fd2c <main@@Base+0x9c90>
   1fcf4:	ldrb	r0, [r7]
   1fcf8:	cmp	r0, #58	; 0x3a
   1fcfc:	bne	1fd2c <main@@Base+0x9c90>
   1fd00:	add	r1, r7, #1
   1fd04:	sub	r0, r6, r1
   1fd08:	cmp	r0, #2
   1fd0c:	blt	20488 <main@@Base+0xa3ec>
   1fd10:	ldrb	r0, [r1]
   1fd14:	cmp	r0, #32
   1fd18:	bls	20478 <main@@Base+0xa3dc>
   1fd1c:	mov	r7, r1
   1fd20:	cmp	r8, r7
   1fd24:	bne	204a0 <main@@Base+0xa404>
   1fd28:	b	216b0 <main@@Base+0xb614>
   1fd2c:	ldr	r0, [sp, #44]	; 0x2c
   1fd30:	mov	r1, r7
   1fd34:	mov	r2, r6
   1fd38:	mov	r3, #4
   1fd3c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1fd40:	b	20494 <main@@Base+0xa3f8>
   1fd44:	cmp	r0, #34	; 0x22
   1fd48:	bne	207a8 <main@@Base+0xa70c>
   1fd4c:	add	r1, r8, #17
   1fd50:	ldr	r6, [sp, #44]	; 0x2c
   1fd54:	sub	r0, r5, r1
   1fd58:	mov	r7, r5
   1fd5c:	cmp	r0, #2
   1fd60:	blt	2075c <main@@Base+0xa6c0>
   1fd64:	ldrb	r0, [r1]
   1fd68:	cmp	r0, #32
   1fd6c:	bls	20744 <main@@Base+0xa6a8>
   1fd70:	mov	r4, r1
   1fd74:	mov	r7, r5
   1fd78:	cmp	r4, r7
   1fd7c:	bne	20774 <main@@Base+0xa6d8>
   1fd80:	b	207c0 <main@@Base+0xa724>
   1fd84:	cmp	r0, #34	; 0x22
   1fd88:	mov	r7, r8
   1fd8c:	bne	17930 <main@@Base+0x1894>
   1fd90:	add	r1, r8, #3
   1fd94:	sub	r0, r6, r1
   1fd98:	cmp	r0, #2
   1fd9c:	blt	20820 <main@@Base+0xa784>
   1fda0:	ldrb	r0, [r1]
   1fda4:	cmp	r0, #32
   1fda8:	bls	2080c <main@@Base+0xa770>
   1fdac:	mov	r7, r1
   1fdb0:	cmp	r7, r6
   1fdb4:	bne	20838 <main@@Base+0xa79c>
   1fdb8:	b	20870 <main@@Base+0xa7d4>
   1fdbc:	cmp	r0, #34	; 0x22
   1fdc0:	mov	r4, r8
   1fdc4:	bne	17ad0 <main@@Base+0x1a34>
   1fdc8:	add	r1, r8, #4
   1fdcc:	sub	r0, r6, r1
   1fdd0:	cmp	r0, #2
   1fdd4:	blt	2089c <main@@Base+0xa800>
   1fdd8:	ldrb	r0, [r1]
   1fddc:	cmp	r0, #32
   1fde0:	bls	20888 <main@@Base+0xa7ec>
   1fde4:	mov	r4, r1
   1fde8:	cmp	r4, r6
   1fdec:	bne	208b4 <main@@Base+0xa818>
   1fdf0:	b	208ec <main@@Base+0xa850>
   1fdf4:	cmp	r0, #34	; 0x22
   1fdf8:	mov	r7, r8
   1fdfc:	bne	18a4c <main@@Base+0x29b0>
   1fe00:	add	r1, r8, #7
   1fe04:	sub	r0, r6, r1
   1fe08:	cmp	r0, #2
   1fe0c:	blt	20918 <main@@Base+0xa87c>
   1fe10:	ldrb	r0, [r1]
   1fe14:	cmp	r0, #32
   1fe18:	bls	20904 <main@@Base+0xa868>
   1fe1c:	mov	r7, r1
   1fe20:	cmp	r7, r6
   1fe24:	bne	20930 <main@@Base+0xa894>
   1fe28:	b	20968 <main@@Base+0xa8cc>
   1fe2c:	cmp	r0, #34	; 0x22
   1fe30:	bne	20ab0 <main@@Base+0xaa14>
   1fe34:	add	r1, r8, #17
   1fe38:	sub	r0, r6, r1
   1fe3c:	cmp	r0, #2
   1fe40:	blt	20a64 <main@@Base+0xa9c8>
   1fe44:	ldrb	r0, [r1]
   1fe48:	cmp	r0, #32
   1fe4c:	bls	20a50 <main@@Base+0xa9b4>
   1fe50:	mov	r7, r1
   1fe54:	cmp	r7, r6
   1fe58:	bne	20a7c <main@@Base+0xa9e0>
   1fe5c:	b	20b30 <main@@Base+0xaa94>
   1fe60:	bne	1fe74 <main@@Base+0x9dd8>
   1fe64:	mov	r1, r2
   1fe68:	ldrb	r0, [r1, #1]!
   1fe6c:	cmp	r0, #32
   1fe70:	bhi	1fe88 <main@@Base+0x9dec>
   1fe74:	mov	r1, r2
   1fe78:	mov	r0, sl
   1fe7c:	mov	r2, r6
   1fe80:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1fe84:	mov	r1, r0
   1fe88:	cmp	r1, r6
   1fe8c:	beq	1fec8 <main@@Base+0x9e2c>
   1fe90:	ldrb	r0, [r1]
   1fe94:	cmp	r0, #58	; 0x3a
   1fe98:	bne	1fec8 <main@@Base+0x9e2c>
   1fe9c:	add	r2, r1, #1
   1fea0:	sub	r0, r6, r2
   1fea4:	cmp	r0, #2
   1fea8:	blt	20b58 <main@@Base+0xaabc>
   1feac:	ldrb	r0, [r2]
   1feb0:	cmp	r0, #32
   1feb4:	bls	20b48 <main@@Base+0xaaac>
   1feb8:	mov	r1, r2
   1febc:	cmp	r8, r1
   1fec0:	bne	20b74 <main@@Base+0xaad8>
   1fec4:	b	2174c <main@@Base+0xb6b0>
   1fec8:	mov	r0, sl
   1fecc:	mov	r2, r6
   1fed0:	mov	r3, #4
   1fed4:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1fed8:	b	20b68 <main@@Base+0xaacc>
   1fedc:	bne	1fef0 <main@@Base+0x9e54>
   1fee0:	mov	r7, r1
   1fee4:	ldrb	r0, [r7, #1]!
   1fee8:	cmp	r0, #32
   1feec:	bhi	1ff00 <main@@Base+0x9e64>
   1fef0:	mov	r0, sl
   1fef4:	mov	r2, r6
   1fef8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1fefc:	mov	r7, r0
   1ff00:	cmp	r7, r6
   1ff04:	beq	1ff40 <main@@Base+0x9ea4>
   1ff08:	ldrb	r0, [r7]
   1ff0c:	cmp	r0, #58	; 0x3a
   1ff10:	bne	1ff40 <main@@Base+0x9ea4>
   1ff14:	add	r1, r7, #1
   1ff18:	sub	r0, r6, r1
   1ff1c:	cmp	r0, #2
   1ff20:	blt	20bbc <main@@Base+0xab20>
   1ff24:	ldrb	r0, [r1]
   1ff28:	cmp	r0, #32
   1ff2c:	bls	20bac <main@@Base+0xab10>
   1ff30:	mov	r7, r1
   1ff34:	cmp	r8, r7
   1ff38:	bne	20bd4 <main@@Base+0xab38>
   1ff3c:	b	2174c <main@@Base+0xb6b0>
   1ff40:	mov	r0, sl
   1ff44:	mov	r1, r7
   1ff48:	mov	r2, r6
   1ff4c:	mov	r3, #4
   1ff50:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1ff54:	b	20bc8 <main@@Base+0xab2c>
   1ff58:	bne	1ff6c <main@@Base+0x9ed0>
   1ff5c:	mov	r1, r2
   1ff60:	ldrb	r0, [r1, #1]!
   1ff64:	cmp	r0, #32
   1ff68:	bhi	1ff80 <main@@Base+0x9ee4>
   1ff6c:	mov	r1, r2
   1ff70:	mov	r0, sl
   1ff74:	mov	r2, r6
   1ff78:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1ff7c:	mov	r1, r0
   1ff80:	cmp	r1, r6
   1ff84:	beq	1ffc0 <main@@Base+0x9f24>
   1ff88:	ldrb	r0, [r1]
   1ff8c:	cmp	r0, #58	; 0x3a
   1ff90:	bne	1ffc0 <main@@Base+0x9f24>
   1ff94:	add	r2, r1, #1
   1ff98:	sub	r0, r6, r2
   1ff9c:	cmp	r0, #2
   1ffa0:	blt	20df0 <main@@Base+0xad54>
   1ffa4:	ldrb	r0, [r2]
   1ffa8:	cmp	r0, #32
   1ffac:	bls	20de0 <main@@Base+0xad44>
   1ffb0:	mov	r1, r2
   1ffb4:	cmp	r8, r1
   1ffb8:	bne	20e0c <main@@Base+0xad70>
   1ffbc:	b	2174c <main@@Base+0xb6b0>
   1ffc0:	mov	r0, sl
   1ffc4:	mov	r2, r6
   1ffc8:	mov	r3, #4
   1ffcc:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   1ffd0:	b	20e00 <main@@Base+0xad64>
   1ffd4:	bne	1ffe8 <main@@Base+0x9f4c>
   1ffd8:	mov	r4, r1
   1ffdc:	ldrb	r0, [r4, #1]!
   1ffe0:	cmp	r0, #32
   1ffe4:	bhi	1fff8 <main@@Base+0x9f5c>
   1ffe8:	mov	r0, sl
   1ffec:	mov	r2, r6
   1fff0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   1fff4:	mov	r4, r0
   1fff8:	cmp	r4, r6
   1fffc:	beq	20038 <main@@Base+0x9f9c>
   20000:	ldrb	r0, [r4]
   20004:	cmp	r0, #58	; 0x3a
   20008:	bne	20038 <main@@Base+0x9f9c>
   2000c:	add	r1, r4, #1
   20010:	sub	r0, r6, r1
   20014:	cmp	r0, #2
   20018:	blt	20e5c <main@@Base+0xadc0>
   2001c:	ldrb	r0, [r1]
   20020:	cmp	r0, #32
   20024:	bls	20e4c <main@@Base+0xadb0>
   20028:	mov	r4, r1
   2002c:	cmp	r8, r4
   20030:	bne	20e74 <main@@Base+0xadd8>
   20034:	b	2174c <main@@Base+0xb6b0>
   20038:	mov	r0, sl
   2003c:	mov	r1, r4
   20040:	mov	r2, r6
   20044:	mov	r3, #4
   20048:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2004c:	b	20e68 <main@@Base+0xadcc>
   20050:	mov	r7, r5
   20054:	bne	20068 <main@@Base+0x9fcc>
   20058:	mov	r1, r2
   2005c:	ldrb	r0, [r1, #1]!
   20060:	cmp	r0, #32
   20064:	bhi	2007c <main@@Base+0x9fe0>
   20068:	ldr	r0, [sp, #44]	; 0x2c
   2006c:	mov	r1, r2
   20070:	mov	r2, r7
   20074:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   20078:	mov	r1, r0
   2007c:	cmp	r1, r7
   20080:	beq	2011c <main@@Base+0xa080>
   20084:	ldrb	r0, [r1]
   20088:	cmp	r0, #58	; 0x3a
   2008c:	bne	2011c <main@@Base+0xa080>
   20090:	add	r2, r1, #1
   20094:	sub	r0, r5, r2
   20098:	cmp	r0, #2
   2009c:	blt	21214 <main@@Base+0xb178>
   200a0:	ldrb	r0, [r2]
   200a4:	cmp	r0, #32
   200a8:	bls	21204 <main@@Base+0xb168>
   200ac:	mov	r1, r2
   200b0:	cmp	r8, r1
   200b4:	bne	21230 <main@@Base+0xb194>
   200b8:	eor	r0, r6, #889192448	; 0x35000000
   200bc:	mov	r6, r5
   200c0:	orrs	r0, r0, r4
   200c4:	bne	216b0 <main@@Base+0xb614>
   200c8:	cmp	r9, #6
   200cc:	mov	r7, r8
   200d0:	blt	21644 <main@@Base+0xb5a8>
   200d4:	ldr	r2, [sp, #40]	; 0x28
   200d8:	mov	r1, r8
   200dc:	ldrb	r0, [r1, #5]!
   200e0:	ldr	r2, [r2]
   200e4:	cmp	r2, #0
   200e8:	beq	20130 <main@@Base+0xa094>
   200ec:	cmp	r0, #33	; 0x21
   200f0:	bcc	20100 <main@@Base+0xa064>
   200f4:	cmp	r0, #58	; 0x3a
   200f8:	mov	r7, r8
   200fc:	bne	21644 <main@@Base+0xb5a8>
   20100:	ldr	r0, [sp, #40]	; 0x28
   20104:	mov	r2, #0
   20108:	str	r2, [r0]
   2010c:	sub	r0, r6, r1
   20110:	cmp	r0, #2
   20114:	bge	2014c <main@@Base+0xa0b0>
   20118:	b	20288 <main@@Base+0xa1ec>
   2011c:	ldr	r0, [sp, #44]	; 0x2c
   20120:	mov	r2, r5
   20124:	mov	r3, #4
   20128:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2012c:	b	21224 <main@@Base+0xb188>
   20130:	cmp	r0, #34	; 0x22
   20134:	mov	r7, r8
   20138:	bne	21644 <main@@Base+0xb5a8>
   2013c:	add	r1, r8, #6
   20140:	sub	r0, r6, r1
   20144:	cmp	r0, #2
   20148:	blt	20288 <main@@Base+0xa1ec>
   2014c:	ldrb	r0, [r1]
   20150:	cmp	r0, #32
   20154:	bls	20274 <main@@Base+0xa1d8>
   20158:	mov	r7, r1
   2015c:	cmp	r7, r6
   20160:	bne	202a0 <main@@Base+0xa204>
   20164:	b	202d8 <main@@Base+0xa23c>
   20168:	cmp	r0, #34	; 0x22
   2016c:	bne	1c464 <main@@Base+0x63c8>
   20170:	add	r1, r8, #11
   20174:	sub	r0, r6, r1
   20178:	cmp	r0, #2
   2017c:	blt	212d4 <main@@Base+0xb238>
   20180:	ldrb	r0, [r1]
   20184:	cmp	r0, #32
   20188:	bls	212c0 <main@@Base+0xb224>
   2018c:	mov	r4, r1
   20190:	cmp	r4, r6
   20194:	bne	212ec <main@@Base+0xb250>
   20198:	b	21324 <main@@Base+0xb288>
   2019c:	cmp	r0, #34	; 0x22
   201a0:	bne	1c464 <main@@Base+0x63c8>
   201a4:	add	r1, r8, #19
   201a8:	sub	r0, r6, r1
   201ac:	cmp	r0, #2
   201b0:	blt	21350 <main@@Base+0xb2b4>
   201b4:	ldrb	r0, [r1]
   201b8:	cmp	r0, #32
   201bc:	bls	2133c <main@@Base+0xb2a0>
   201c0:	mov	r4, r1
   201c4:	cmp	r4, r6
   201c8:	bne	21368 <main@@Base+0xb2cc>
   201cc:	b	213a0 <main@@Base+0xb304>
   201d0:	cmp	r0, #34	; 0x22
   201d4:	bne	1ab4c <main@@Base+0x4ab0>
   201d8:	add	r1, r8, #24
   201dc:	sub	r0, r6, r1
   201e0:	cmp	r0, #2
   201e4:	blt	213cc <main@@Base+0xb330>
   201e8:	ldrb	r0, [r1]
   201ec:	cmp	r0, #32
   201f0:	bls	213b8 <main@@Base+0xb31c>
   201f4:	mov	r7, r1
   201f8:	cmp	r7, r6
   201fc:	bne	213e4 <main@@Base+0xb348>
   20200:	b	2141c <main@@Base+0xb380>
   20204:	cmp	r0, #34	; 0x22
   20208:	mov	r7, r8
   2020c:	bne	197e4 <main@@Base+0x3748>
   20210:	add	r1, r8, #5
   20214:	sub	r0, r6, r1
   20218:	cmp	r0, #2
   2021c:	blt	21448 <main@@Base+0xb3ac>
   20220:	ldrb	r0, [r1]
   20224:	cmp	r0, #32
   20228:	bls	21434 <main@@Base+0xb398>
   2022c:	mov	r7, r1
   20230:	cmp	r7, r6
   20234:	bne	21460 <main@@Base+0xb3c4>
   20238:	b	21498 <main@@Base+0xb3fc>
   2023c:	cmp	r0, #34	; 0x22
   20240:	mov	r7, r8
   20244:	bne	199b0 <main@@Base+0x3914>
   20248:	add	r1, r8, #6
   2024c:	sub	r0, r6, r1
   20250:	cmp	r0, #2
   20254:	blt	214c4 <main@@Base+0xb428>
   20258:	ldrb	r0, [r1]
   2025c:	cmp	r0, #32
   20260:	bls	214b0 <main@@Base+0xb414>
   20264:	mov	r7, r1
   20268:	cmp	r7, r6
   2026c:	bne	214dc <main@@Base+0xb440>
   20270:	b	21514 <main@@Base+0xb478>
   20274:	bne	20288 <main@@Base+0xa1ec>
   20278:	mov	r7, r1
   2027c:	ldrb	r0, [r7, #1]!
   20280:	cmp	r0, #32
   20284:	bhi	20298 <main@@Base+0xa1fc>
   20288:	ldr	r0, [sp, #44]	; 0x2c
   2028c:	mov	r2, r6
   20290:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   20294:	mov	r7, r0
   20298:	cmp	r7, r6
   2029c:	beq	202d8 <main@@Base+0xa23c>
   202a0:	ldrb	r0, [r7]
   202a4:	cmp	r0, #58	; 0x3a
   202a8:	bne	202d8 <main@@Base+0xa23c>
   202ac:	add	r1, r7, #1
   202b0:	sub	r0, r6, r1
   202b4:	cmp	r0, #2
   202b8:	blt	21634 <main@@Base+0xb598>
   202bc:	ldrb	r0, [r1]
   202c0:	cmp	r0, #32
   202c4:	bls	21624 <main@@Base+0xb588>
   202c8:	mov	r7, r1
   202cc:	cmp	r8, r7
   202d0:	bne	2164c <main@@Base+0xb5b0>
   202d4:	b	216b0 <main@@Base+0xb614>
   202d8:	ldr	r0, [sp, #44]	; 0x2c
   202dc:	mov	r1, r7
   202e0:	mov	r2, r6
   202e4:	mov	r3, #4
   202e8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   202ec:	b	21640 <main@@Base+0xb5a4>
   202f0:	cmp	r0, #34	; 0x22
   202f4:	bne	2158c <main@@Base+0xb4f0>
   202f8:	add	r1, r8, #17
   202fc:	sub	r0, r6, r1
   20300:	cmp	r0, #2
   20304:	blt	21540 <main@@Base+0xb4a4>
   20308:	ldrb	r0, [r1]
   2030c:	cmp	r0, #32
   20310:	bls	2152c <main@@Base+0xb490>
   20314:	mov	r7, r1
   20318:	cmp	r7, r6
   2031c:	bne	21558 <main@@Base+0xb4bc>
   20320:	b	2160c <main@@Base+0xb570>
   20324:	bne	20338 <main@@Base+0xa29c>
   20328:	mov	r7, r1
   2032c:	ldrb	r0, [r7, #1]!
   20330:	cmp	r0, #32
   20334:	bhi	20348 <main@@Base+0xa2ac>
   20338:	mov	r0, sl
   2033c:	mov	r2, r6
   20340:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   20344:	mov	r7, r0
   20348:	cmp	r7, r6
   2034c:	beq	20388 <main@@Base+0xa2ec>
   20350:	ldrb	r0, [r7]
   20354:	cmp	r0, #58	; 0x3a
   20358:	bne	20388 <main@@Base+0xa2ec>
   2035c:	add	r1, r7, #1
   20360:	sub	r0, r6, r1
   20364:	cmp	r0, #2
   20368:	blt	1750c <main@@Base+0x1470>
   2036c:	ldrb	r0, [r1]
   20370:	cmp	r0, #32
   20374:	bls	174fc <main@@Base+0x1460>
   20378:	mov	r7, r1
   2037c:	cmp	r8, r7
   20380:	bne	17524 <main@@Base+0x1488>
   20384:	b	2174c <main@@Base+0xb6b0>
   20388:	mov	r0, sl
   2038c:	mov	r1, r7
   20390:	mov	r2, r6
   20394:	mov	r3, #4
   20398:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2039c:	b	17518 <main@@Base+0x147c>
   203a0:	bne	203b0 <main@@Base+0xa314>
   203a4:	ldrb	r0, [r7, #2]!
   203a8:	cmp	r0, #32
   203ac:	bhi	203c0 <main@@Base+0xa324>
   203b0:	mov	r0, sl
   203b4:	mov	r2, r6
   203b8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   203bc:	mov	r7, r0
   203c0:	cmp	r8, r7
   203c4:	beq	2174c <main@@Base+0xb6b0>
   203c8:	mov	r0, #0
   203cc:	mov	r1, r7
   203d0:	mov	r2, r6
   203d4:	sub	r3, fp, #56	; 0x38
   203d8:	str	r0, [fp, #-56]	; 0xffffffc8
   203dc:	mov	r0, sl
   203e0:	bl	391a8 <flatcc_json_parser_float@@Base>
   203e4:	ldr	r5, [sp, #48]	; 0x30
   203e8:	mov	r4, r0
   203ec:	cmp	r7, r0
   203f0:	bne	20428 <main@@Base+0xa38c>
   203f4:	sub	r0, fp, #56	; 0x38
   203f8:	mov	r1, r7
   203fc:	mov	r2, r6
   20400:	str	r0, [sp]
   20404:	movw	r0, #148	; 0x94
   20408:	movt	r0, #6
   2040c:	add	r3, r0, #96	; 0x60
   20410:	mov	r0, sl
   20414:	bl	25f44 <main@@Base+0xfea8>
   20418:	mov	r4, r0
   2041c:	cmp	r0, r7
   20420:	cmpne	r4, r6
   20424:	beq	16fd0 <main@@Base+0xf34>
   20428:	vldr	s0, [fp, #-56]	; 0xffffffc8
   2042c:	vcmp.f32	s0, #0.0
   20430:	vmrs	APSR_nzcv, fpscr
   20434:	bne	20444 <main@@Base+0xa3a8>
   20438:	ldrb	r0, [sl, #8]
   2043c:	tst	r0, #2
   20440:	beq	21764 <main@@Base+0xb6c8>
   20444:	ldr	r0, [sl]
   20448:	mov	r1, #27
   2044c:	mov	r2, #4
   20450:	mov	r3, #4
   20454:	bl	33604 <flatcc_builder_table_add@@Base>
   20458:	cmp	r0, #0
   2045c:	beq	16fd0 <main@@Base+0xf34>
   20460:	ldr	r1, [fp, #-56]	; 0xffffffc8
   20464:	str	r1, [r0]
   20468:	sub	r0, r6, r4
   2046c:	cmp	r0, #2
   20470:	bge	21770 <main@@Base+0xb6d4>
   20474:	b	19970 <main@@Base+0x38d4>
   20478:	bne	20488 <main@@Base+0xa3ec>
   2047c:	ldrb	r0, [r7, #2]!
   20480:	cmp	r0, #32
   20484:	bhi	20498 <main@@Base+0xa3fc>
   20488:	ldr	r0, [sp, #44]	; 0x2c
   2048c:	mov	r2, r6
   20490:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   20494:	mov	r7, r0
   20498:	cmp	r8, r7
   2049c:	beq	216b0 <main@@Base+0xb614>
   204a0:	ldr	sl, [sp, #44]	; 0x2c
   204a4:	mov	r1, #4
   204a8:	mov	r2, #2
   204ac:	mvn	r3, #-1073741824	; 0xc0000000
   204b0:	ldr	r0, [sl]
   204b4:	bl	31cdc <flatcc_builder_start_vector@@Base>
   204b8:	cmp	r0, #0
   204bc:	bne	218cc <main@@Base+0xb830>
   204c0:	cmp	r7, r6
   204c4:	beq	20504 <main@@Base+0xa468>
   204c8:	ldrb	r0, [r7]
   204cc:	cmp	r0, #91	; 0x5b
   204d0:	bne	20504 <main@@Base+0xa468>
   204d4:	add	r1, r7, #1
   204d8:	sub	r0, r6, r1
   204dc:	cmp	r0, #2
   204e0:	blt	2055c <main@@Base+0xa4c0>
   204e4:	ldrb	r0, [r1]
   204e8:	cmp	r0, #32
   204ec:	bls	2054c <main@@Base+0xa4b0>
   204f0:	mov	r7, r1
   204f4:	cmp	r7, r6
   204f8:	mov	r4, r6
   204fc:	bne	20578 <main@@Base+0xa4dc>
   20500:	b	205bc <main@@Base+0xa520>
   20504:	mov	r0, sl
   20508:	mov	r1, r7
   2050c:	mov	r2, r6
   20510:	mov	r3, #22
   20514:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   20518:	ldr	r5, [sp, #48]	; 0x30
   2051c:	mov	r7, r0
   20520:	ldr	r0, [sl]
   20524:	bl	32f5c <flatcc_builder_end_vector@@Base>
   20528:	cmp	r0, #0
   2052c:	str	r0, [sp, #60]	; 0x3c
   20530:	beq	218cc <main@@Base+0xb830>
   20534:	ldr	r0, [sl]
   20538:	mov	r1, #9
   2053c:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   20540:	cmp	r0, #0
   20544:	bne	17218 <main@@Base+0x117c>
   20548:	b	218cc <main@@Base+0xb830>
   2054c:	bne	2055c <main@@Base+0xa4c0>
   20550:	ldrb	r0, [r7, #2]!
   20554:	cmp	r0, #32
   20558:	bhi	2056c <main@@Base+0xa4d0>
   2055c:	mov	r0, sl
   20560:	mov	r2, r6
   20564:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   20568:	mov	r7, r0
   2056c:	cmp	r7, r6
   20570:	mov	r4, r6
   20574:	beq	205bc <main@@Base+0xa520>
   20578:	ldrb	r0, [r7]
   2057c:	cmp	r0, #93	; 0x5d
   20580:	bne	205b8 <main@@Base+0xa51c>
   20584:	ldr	r5, [sp, #48]	; 0x30
   20588:	add	r1, r7, #1
   2058c:	sub	r0, r6, r1
   20590:	cmp	r0, #2
   20594:	blt	2127c <main@@Base+0xb1e0>
   20598:	ldrb	r0, [r1]
   2059c:	cmp	r0, #32
   205a0:	bhi	206f4 <main@@Base+0xa658>
   205a4:	bne	2127c <main@@Base+0xb1e0>
   205a8:	ldrb	r0, [r7, #2]!
   205ac:	cmp	r0, #32
   205b0:	bhi	20520 <main@@Base+0xa484>
   205b4:	b	2127c <main@@Base+0xb1e0>
   205b8:	mov	r4, r7
   205bc:	ldr	r0, [sl]
   205c0:	mov	r1, #1
   205c4:	bl	31188 <flatcc_builder_extend_vector@@Base>
   205c8:	mov	r3, r0
   205cc:	cmp	r0, #0
   205d0:	beq	16fd0 <main@@Base+0xf34>
   205d4:	mov	r0, sl
   205d8:	mov	r1, r4
   205dc:	mov	r2, r6
   205e0:	bl	23f18 <main@@Base+0xde7c>
   205e4:	mov	r1, r0
   205e8:	sub	r0, r6, r0
   205ec:	cmp	r0, #2
   205f0:	blt	20624 <main@@Base+0xa588>
   205f4:	ldrb	r0, [r1]
   205f8:	cmp	r0, #32
   205fc:	bls	20610 <main@@Base+0xa574>
   20600:	mov	r4, r1
   20604:	cmp	r4, r6
   20608:	bne	2063c <main@@Base+0xa5a0>
   2060c:	b	206c0 <main@@Base+0xa624>
   20610:	bne	20624 <main@@Base+0xa588>
   20614:	mov	r4, r1
   20618:	ldrb	r0, [r4, #1]!
   2061c:	cmp	r0, #32
   20620:	bhi	20634 <main@@Base+0xa598>
   20624:	mov	r0, sl
   20628:	mov	r2, r6
   2062c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   20630:	mov	r4, r0
   20634:	cmp	r4, r6
   20638:	beq	206c0 <main@@Base+0xa624>
   2063c:	ldrb	r0, [r4]
   20640:	cmp	r0, #44	; 0x2c
   20644:	bne	206cc <main@@Base+0xa630>
   20648:	add	r1, r4, #1
   2064c:	sub	r0, r6, r1
   20650:	cmp	r0, #2
   20654:	blt	20684 <main@@Base+0xa5e8>
   20658:	ldrb	r0, [r1]
   2065c:	cmp	r0, #32
   20660:	bls	20674 <main@@Base+0xa5d8>
   20664:	mov	r4, r1
   20668:	cmp	r4, r6
   2066c:	bne	2069c <main@@Base+0xa600>
   20670:	b	206fc <main@@Base+0xa660>
   20674:	bne	20684 <main@@Base+0xa5e8>
   20678:	ldrb	r0, [r4, #2]!
   2067c:	cmp	r0, #32
   20680:	bhi	20694 <main@@Base+0xa5f8>
   20684:	mov	r0, sl
   20688:	mov	r2, r6
   2068c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   20690:	mov	r4, r0
   20694:	cmp	r4, r6
   20698:	beq	206fc <main@@Base+0xa660>
   2069c:	ldrb	r0, [r4]
   206a0:	cmp	r0, #93	; 0x5d
   206a4:	bne	205bc <main@@Base+0xa520>
   206a8:	ldr	r5, [sp, #48]	; 0x30
   206ac:	add	r1, r4, #1
   206b0:	sub	r0, r6, r1
   206b4:	cmp	r0, #2
   206b8:	blt	2127c <main@@Base+0xb1e0>
   206bc:	b	206e8 <main@@Base+0xa64c>
   206c0:	ldr	r5, [sp, #48]	; 0x30
   206c4:	mov	r7, r6
   206c8:	b	20520 <main@@Base+0xa484>
   206cc:	ldr	r5, [sp, #48]	; 0x30
   206d0:	cmp	r0, #93	; 0x5d
   206d4:	bne	20d2c <main@@Base+0xac90>
   206d8:	add	r1, r4, #1
   206dc:	sub	r0, r6, r1
   206e0:	cmp	r0, #2
   206e4:	blt	2127c <main@@Base+0xb1e0>
   206e8:	ldrb	r0, [r1]
   206ec:	cmp	r0, #32
   206f0:	bls	21268 <main@@Base+0xb1cc>
   206f4:	mov	r7, r1
   206f8:	b	20520 <main@@Base+0xa484>
   206fc:	mov	r0, sl
   20700:	mov	r1, r6
   20704:	mov	r2, r6
   20708:	mov	r3, #9
   2070c:	b	20514 <main@@Base+0xa478>
   20710:	cmp	r0, #34	; 0x22
   20714:	bne	1ab4c <main@@Base+0x4ab0>
   20718:	add	r1, r8, #22
   2071c:	sub	r0, r6, r1
   20720:	cmp	r0, #2
   20724:	blt	1770c <main@@Base+0x1670>
   20728:	ldrb	r0, [r1]
   2072c:	cmp	r0, #32
   20730:	bls	176f8 <main@@Base+0x165c>
   20734:	mov	r4, r1
   20738:	cmp	r4, r6
   2073c:	bne	17724 <main@@Base+0x1688>
   20740:	b	1775c <main@@Base+0x16c0>
   20744:	mov	r7, r5
   20748:	bne	2075c <main@@Base+0xa6c0>
   2074c:	mov	r4, r1
   20750:	ldrb	r0, [r4, #1]!
   20754:	cmp	r0, #32
   20758:	bhi	2076c <main@@Base+0xa6d0>
   2075c:	mov	r0, r6
   20760:	mov	r2, r7
   20764:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   20768:	mov	r4, r0
   2076c:	cmp	r4, r7
   20770:	beq	207c0 <main@@Base+0xa724>
   20774:	ldrb	r0, [r4]
   20778:	cmp	r0, #58	; 0x3a
   2077c:	bne	207c0 <main@@Base+0xa724>
   20780:	add	r1, r4, #1
   20784:	sub	r0, r5, r1
   20788:	cmp	r0, #2
   2078c:	blt	1779c <main@@Base+0x1700>
   20790:	ldrb	r0, [r1]
   20794:	cmp	r0, #32
   20798:	bls	1778c <main@@Base+0x16f0>
   2079c:	mov	r4, r1
   207a0:	cmp	r9, r4
   207a4:	bne	177b4 <main@@Base+0x1718>
   207a8:	ldr	sl, [sp, #44]	; 0x2c
   207ac:	mov	r1, r9
   207b0:	mov	r0, sl
   207b4:	mov	r6, r5
   207b8:	mov	r2, r5
   207bc:	b	21758 <main@@Base+0xb6bc>
   207c0:	mov	r0, r6
   207c4:	mov	r1, r4
   207c8:	mov	r2, r5
   207cc:	mov	r3, #4
   207d0:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   207d4:	b	177a8 <main@@Base+0x170c>
   207d8:	cmp	r0, #34	; 0x22
   207dc:	bne	1c464 <main@@Base+0x63c8>
   207e0:	add	r1, r8, #18
   207e4:	sub	r0, r6, r1
   207e8:	cmp	r0, #2
   207ec:	blt	17874 <main@@Base+0x17d8>
   207f0:	ldrb	r0, [r1]
   207f4:	cmp	r0, #32
   207f8:	bls	17860 <main@@Base+0x17c4>
   207fc:	mov	r4, r1
   20800:	cmp	r4, r6
   20804:	bne	1788c <main@@Base+0x17f0>
   20808:	b	178c4 <main@@Base+0x1828>
   2080c:	bne	20820 <main@@Base+0xa784>
   20810:	mov	r7, r1
   20814:	ldrb	r0, [r7, #1]!
   20818:	cmp	r0, #32
   2081c:	bhi	20830 <main@@Base+0xa794>
   20820:	mov	r0, sl
   20824:	mov	r2, r6
   20828:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2082c:	mov	r7, r0
   20830:	cmp	r7, r6
   20834:	beq	20870 <main@@Base+0xa7d4>
   20838:	ldrb	r0, [r7]
   2083c:	cmp	r0, #58	; 0x3a
   20840:	bne	20870 <main@@Base+0xa7d4>
   20844:	add	r1, r7, #1
   20848:	sub	r0, r6, r1
   2084c:	cmp	r0, #2
   20850:	blt	17920 <main@@Base+0x1884>
   20854:	ldrb	r0, [r1]
   20858:	cmp	r0, #32
   2085c:	bls	17910 <main@@Base+0x1874>
   20860:	mov	r7, r1
   20864:	cmp	r8, r7
   20868:	bne	17938 <main@@Base+0x189c>
   2086c:	b	2174c <main@@Base+0xb6b0>
   20870:	mov	r0, sl
   20874:	mov	r1, r7
   20878:	mov	r2, r6
   2087c:	mov	r3, #4
   20880:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   20884:	b	1792c <main@@Base+0x1890>
   20888:	bne	2089c <main@@Base+0xa800>
   2088c:	mov	r4, r1
   20890:	ldrb	r0, [r4, #1]!
   20894:	cmp	r0, #32
   20898:	bhi	208ac <main@@Base+0xa810>
   2089c:	mov	r0, sl
   208a0:	mov	r2, r6
   208a4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   208a8:	mov	r4, r0
   208ac:	cmp	r4, r6
   208b0:	beq	208ec <main@@Base+0xa850>
   208b4:	ldrb	r0, [r4]
   208b8:	cmp	r0, #58	; 0x3a
   208bc:	bne	208ec <main@@Base+0xa850>
   208c0:	add	r1, r4, #1
   208c4:	sub	r0, r6, r1
   208c8:	cmp	r0, #2
   208cc:	blt	17ac0 <main@@Base+0x1a24>
   208d0:	ldrb	r0, [r1]
   208d4:	cmp	r0, #32
   208d8:	bls	17ab0 <main@@Base+0x1a14>
   208dc:	mov	r4, r1
   208e0:	cmp	r8, r4
   208e4:	bne	17ad8 <main@@Base+0x1a3c>
   208e8:	b	2174c <main@@Base+0xb6b0>
   208ec:	mov	r0, sl
   208f0:	mov	r1, r4
   208f4:	mov	r2, r6
   208f8:	mov	r3, #4
   208fc:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   20900:	b	17acc <main@@Base+0x1a30>
   20904:	bne	20918 <main@@Base+0xa87c>
   20908:	mov	r7, r1
   2090c:	ldrb	r0, [r7, #1]!
   20910:	cmp	r0, #32
   20914:	bhi	20928 <main@@Base+0xa88c>
   20918:	mov	r0, sl
   2091c:	mov	r2, r6
   20920:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   20924:	mov	r7, r0
   20928:	cmp	r7, r6
   2092c:	beq	20968 <main@@Base+0xa8cc>
   20930:	ldrb	r0, [r7]
   20934:	cmp	r0, #58	; 0x3a
   20938:	bne	20968 <main@@Base+0xa8cc>
   2093c:	add	r1, r7, #1
   20940:	sub	r0, r6, r1
   20944:	cmp	r0, #2
   20948:	blt	18a3c <main@@Base+0x29a0>
   2094c:	ldrb	r0, [r1]
   20950:	cmp	r0, #32
   20954:	bls	18a2c <main@@Base+0x2990>
   20958:	mov	r7, r1
   2095c:	cmp	r8, r7
   20960:	bne	18a54 <main@@Base+0x29b8>
   20964:	b	2174c <main@@Base+0xb6b0>
   20968:	mov	r0, sl
   2096c:	mov	r1, r7
   20970:	mov	r2, r6
   20974:	mov	r3, #4
   20978:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2097c:	b	18a48 <main@@Base+0x29ac>
   20980:	cmp	r0, #34	; 0x22
   20984:	bne	1c464 <main@@Base+0x63c8>
   20988:	add	r1, r8, #10
   2098c:	sub	r0, r6, r1
   20990:	cmp	r0, #2
   20994:	blt	18af0 <main@@Base+0x2a54>
   20998:	ldrb	r0, [r1]
   2099c:	cmp	r0, #32
   209a0:	bls	18adc <main@@Base+0x2a40>
   209a4:	mov	r4, r1
   209a8:	cmp	r4, r6
   209ac:	bne	18b08 <main@@Base+0x2a6c>
   209b0:	b	18b40 <main@@Base+0x2aa4>
   209b4:	cmp	r0, #34	; 0x22
   209b8:	bne	1c464 <main@@Base+0x63c8>
   209bc:	add	r1, r8, #10
   209c0:	sub	r0, r6, r1
   209c4:	cmp	r0, #2
   209c8:	blt	18b6c <main@@Base+0x2ad0>
   209cc:	ldrb	r0, [r1]
   209d0:	cmp	r0, #32
   209d4:	bls	18b58 <main@@Base+0x2abc>
   209d8:	mov	r4, r1
   209dc:	cmp	r4, r6
   209e0:	bne	18b84 <main@@Base+0x2ae8>
   209e4:	b	18bbc <main@@Base+0x2b20>
   209e8:	cmp	r0, #34	; 0x22
   209ec:	bne	18c3c <main@@Base+0x2ba0>
   209f0:	add	r1, r8, #17
   209f4:	sub	r0, r6, r1
   209f8:	cmp	r0, #2
   209fc:	blt	18be8 <main@@Base+0x2b4c>
   20a00:	ldrb	r0, [r1]
   20a04:	cmp	r0, #32
   20a08:	bls	18bd4 <main@@Base+0x2b38>
   20a0c:	mov	r7, r1
   20a10:	cmp	r7, r6
   20a14:	bne	18c00 <main@@Base+0x2b64>
   20a18:	b	18cbc <main@@Base+0x2c20>
   20a1c:	cmp	r0, #34	; 0x22
   20a20:	bne	18d3c <main@@Base+0x2ca0>
   20a24:	add	r1, r8, #17
   20a28:	sub	r0, r6, r1
   20a2c:	cmp	r0, #2
   20a30:	blt	18ce8 <main@@Base+0x2c4c>
   20a34:	ldrb	r0, [r1]
   20a38:	cmp	r0, #32
   20a3c:	bls	18cd4 <main@@Base+0x2c38>
   20a40:	mov	r7, r1
   20a44:	cmp	r7, r6
   20a48:	bne	18d00 <main@@Base+0x2c64>
   20a4c:	b	18dbc <main@@Base+0x2d20>
   20a50:	bne	20a64 <main@@Base+0xa9c8>
   20a54:	mov	r7, r1
   20a58:	ldrb	r0, [r7, #1]!
   20a5c:	cmp	r0, #32
   20a60:	bhi	20a74 <main@@Base+0xa9d8>
   20a64:	mov	r0, sl
   20a68:	mov	r2, r6
   20a6c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   20a70:	mov	r7, r0
   20a74:	cmp	r7, r6
   20a78:	beq	20b30 <main@@Base+0xaa94>
   20a7c:	ldrb	r0, [r7]
   20a80:	cmp	r0, #58	; 0x3a
   20a84:	bne	20b30 <main@@Base+0xaa94>
   20a88:	add	r1, r7, #1
   20a8c:	sub	r0, r6, r1
   20a90:	cmp	r0, #2
   20a94:	blt	18dfc <main@@Base+0x2d60>
   20a98:	ldrb	r0, [r1]
   20a9c:	cmp	r0, #32
   20aa0:	bls	18dec <main@@Base+0x2d50>
   20aa4:	mov	r7, r1
   20aa8:	cmp	r9, r7
   20aac:	bne	18e14 <main@@Base+0x2d78>
   20ab0:	add	r4, r8, #16
   20ab4:	mov	r1, #8
   20ab8:	mov	r2, #-268435456	; 0xf0000000
   20abc:	sub	r0, r6, r4
   20ac0:	cmp	r0, #8
   20ac4:	movcc	r1, r0
   20ac8:	add	r1, r2, r1, lsl #28
   20acc:	asr	r1, r1, #28
   20ad0:	cmp	r1, #0
   20ad4:	blt	1d0c8 <main@@Base+0x702c>
   20ad8:	ldrb	r1, [r4]
   20adc:	cmp	r1, #97	; 0x61
   20ae0:	bne	1d0c8 <main@@Base+0x702c>
   20ae4:	cmp	r0, #2
   20ae8:	blt	1d0c8 <main@@Base+0x702c>
   20aec:	ldr	r2, [sp, #40]	; 0x28
   20af0:	mov	r1, r8
   20af4:	ldrb	r0, [r1, #17]!
   20af8:	ldr	r2, [r2]
   20afc:	cmp	r2, #0
   20b00:	beq	20d78 <main@@Base+0xacdc>
   20b04:	cmp	r0, #33	; 0x21
   20b08:	bcc	20b14 <main@@Base+0xaa78>
   20b0c:	cmp	r0, #58	; 0x3a
   20b10:	bne	1d0c8 <main@@Base+0x702c>
   20b14:	ldr	r0, [sp, #40]	; 0x28
   20b18:	mov	r2, #0
   20b1c:	str	r2, [r0]
   20b20:	sub	r0, r6, r1
   20b24:	cmp	r0, #2
   20b28:	bge	20d90 <main@@Base+0xacf4>
   20b2c:	b	18f98 <main@@Base+0x2efc>
   20b30:	mov	r0, sl
   20b34:	mov	r1, r7
   20b38:	mov	r2, r6
   20b3c:	mov	r3, #4
   20b40:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   20b44:	b	18e08 <main@@Base+0x2d6c>
   20b48:	bne	20b58 <main@@Base+0xaabc>
   20b4c:	ldrb	r0, [r1, #2]!
   20b50:	cmp	r0, #32
   20b54:	bhi	20b6c <main@@Base+0xaad0>
   20b58:	mov	r1, r2
   20b5c:	mov	r0, sl
   20b60:	mov	r2, r6
   20b64:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   20b68:	mov	r1, r0
   20b6c:	cmp	r8, r1
   20b70:	beq	2174c <main@@Base+0xb6b0>
   20b74:	mov	r0, sl
   20b78:	mov	r2, r6
   20b7c:	add	r3, sp, #60	; 0x3c
   20b80:	bl	16f90 <main@@Base+0xef4>
   20b84:	mov	r4, r0
   20b88:	ldr	r0, [sp, #60]	; 0x3c
   20b8c:	cmp	r0, #0
   20b90:	beq	16fd0 <main@@Base+0xf34>
   20b94:	ldr	r0, [sl]
   20b98:	mov	r1, #12
   20b9c:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   20ba0:	cmp	r0, #0
   20ba4:	bne	20e40 <main@@Base+0xada4>
   20ba8:	b	16fd0 <main@@Base+0xf34>
   20bac:	bne	20bbc <main@@Base+0xab20>
   20bb0:	ldrb	r0, [r7, #2]!
   20bb4:	cmp	r0, #32
   20bb8:	bhi	20bcc <main@@Base+0xab30>
   20bbc:	mov	r0, sl
   20bc0:	mov	r2, r6
   20bc4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   20bc8:	mov	r7, r0
   20bcc:	cmp	r8, r7
   20bd0:	beq	2174c <main@@Base+0xb6b0>
   20bd4:	mov	r2, r6
   20bd8:	mov	r6, #0
   20bdc:	cmp	r7, r2
   20be0:	str	r6, [fp, #-52]	; 0xffffffcc
   20be4:	str	r6, [fp, #-56]	; 0xffffffc8
   20be8:	strb	r6, [fp, #-60]	; 0xffffffc4
   20bec:	str	r6, [sp, #64]	; 0x40
   20bf0:	beq	20c54 <main@@Base+0xabb8>
   20bf4:	sub	r0, fp, #56	; 0x38
   20bf8:	mov	r1, r7
   20bfc:	add	r3, sp, #64	; 0x40
   20c00:	mov	r8, r2
   20c04:	str	r0, [sp]
   20c08:	mov	r0, sl
   20c0c:	bl	392f4 <flatcc_json_parser_integer@@Base>
   20c10:	ldr	r5, [sp, #48]	; 0x30
   20c14:	cmp	r0, r7
   20c18:	beq	20c6c <main@@Base+0xabd0>
   20c1c:	ldr	r2, [sp, #64]	; 0x40
   20c20:	mov	r4, r0
   20c24:	ldr	r0, [fp, #-56]	; 0xffffffc8
   20c28:	ldr	r1, [fp, #-52]	; 0xffffffcc
   20c2c:	cmp	r2, #0
   20c30:	beq	20c7c <main@@Base+0xabe0>
   20c34:	subs	r2, r0, #129	; 0x81
   20c38:	sbcs	r1, r1, #0
   20c3c:	bcc	20cac <main@@Base+0xac10>
   20c40:	mov	r0, sl
   20c44:	mov	r1, r4
   20c48:	mov	r2, r8
   20c4c:	mov	r3, #8
   20c50:	b	20c98 <main@@Base+0xabfc>
   20c54:	ldr	r5, [sp, #48]	; 0x30
   20c58:	mov	r8, r2
   20c5c:	mov	r4, r2
   20c60:	cmp	r7, r4
   20c64:	bne	20d0c <main@@Base+0xac70>
   20c68:	b	20cd0 <main@@Base+0xac34>
   20c6c:	mov	r4, r7
   20c70:	cmp	r7, r4
   20c74:	bne	20d0c <main@@Base+0xac70>
   20c78:	b	20cd0 <main@@Base+0xac34>
   20c7c:	subs	r2, r0, #128	; 0x80
   20c80:	sbcs	r1, r1, #0
   20c84:	bcc	20cc0 <main@@Base+0xac24>
   20c88:	mov	r0, sl
   20c8c:	mov	r1, r4
   20c90:	mov	r2, r8
   20c94:	mov	r3, #7
   20c98:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   20c9c:	mov	r4, r0
   20ca0:	cmp	r7, r4
   20ca4:	bne	20d0c <main@@Base+0xac70>
   20ca8:	b	20cd0 <main@@Base+0xac34>
   20cac:	rsb	r6, r0, #0
   20cb0:	strb	r6, [fp, #-60]	; 0xffffffc4
   20cb4:	cmp	r7, r4
   20cb8:	bne	20d0c <main@@Base+0xac70>
   20cbc:	b	20cd0 <main@@Base+0xac34>
   20cc0:	mov	r6, r0
   20cc4:	strb	r6, [fp, #-60]	; 0xffffffc4
   20cc8:	cmp	r7, r4
   20ccc:	bne	20d0c <main@@Base+0xac70>
   20cd0:	ldr	r3, [sp, #28]
   20cd4:	sub	r0, fp, #60	; 0x3c
   20cd8:	mov	r1, r7
   20cdc:	mov	r2, r8
   20ce0:	mov	r6, r8
   20ce4:	str	r0, [sp]
   20ce8:	mov	r0, sl
   20cec:	bl	23820 <main@@Base+0xd784>
   20cf0:	mov	r4, r0
   20cf4:	cmp	r0, r7
   20cf8:	beq	16fd0 <main@@Base+0xf34>
   20cfc:	mov	r8, r6
   20d00:	cmp	r4, r6
   20d04:	beq	218d4 <main@@Base+0xb838>
   20d08:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   20d0c:	uxtb	r0, r6
   20d10:	cmp	r0, #8
   20d14:	ldrbeq	r0, [sl, #8]
   20d18:	tsteq	r0, #2
   20d1c:	beq	19960 <main@@Base+0x38c4>
   20d20:	ldr	r0, [sl]
   20d24:	mov	r1, #6
   20d28:	b	176b4 <main@@Base+0x1618>
   20d2c:	mov	r0, sl
   20d30:	mov	r1, r4
   20d34:	mov	r2, r6
   20d38:	mov	r3, #9
   20d3c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   20d40:	b	2051c <main@@Base+0xa480>
   20d44:	cmp	r0, #34	; 0x22
   20d48:	bne	1c464 <main@@Base+0x63c8>
   20d4c:	add	r1, r8, #18
   20d50:	sub	r0, r6, r1
   20d54:	cmp	r0, #2
   20d58:	blt	18f14 <main@@Base+0x2e78>
   20d5c:	ldrb	r0, [r1]
   20d60:	cmp	r0, #32
   20d64:	bls	18f00 <main@@Base+0x2e64>
   20d68:	mov	r4, r1
   20d6c:	cmp	r4, r6
   20d70:	bne	18f2c <main@@Base+0x2e90>
   20d74:	b	18f6c <main@@Base+0x2ed0>
   20d78:	cmp	r0, #34	; 0x22
   20d7c:	bne	1d0c8 <main@@Base+0x702c>
   20d80:	add	r1, r8, #18
   20d84:	sub	r0, r6, r1
   20d88:	cmp	r0, #2
   20d8c:	blt	18f98 <main@@Base+0x2efc>
   20d90:	ldrb	r0, [r1]
   20d94:	cmp	r0, #32
   20d98:	bls	18f84 <main@@Base+0x2ee8>
   20d9c:	mov	r7, r1
   20da0:	cmp	r7, r6
   20da4:	bne	18fb0 <main@@Base+0x2f14>
   20da8:	b	18ff0 <main@@Base+0x2f54>
   20dac:	cmp	r0, #34	; 0x22
   20db0:	bne	1ab4c <main@@Base+0x4ab0>
   20db4:	add	r1, r8, #16
   20db8:	sub	r0, r6, r1
   20dbc:	cmp	r0, #2
   20dc0:	blt	19360 <main@@Base+0x32c4>
   20dc4:	ldrb	r0, [r1]
   20dc8:	cmp	r0, #32
   20dcc:	bls	1934c <main@@Base+0x32b0>
   20dd0:	mov	r4, r1
   20dd4:	cmp	r4, r6
   20dd8:	bne	19378 <main@@Base+0x32dc>
   20ddc:	b	193b8 <main@@Base+0x331c>
   20de0:	bne	20df0 <main@@Base+0xad54>
   20de4:	ldrb	r0, [r1, #2]!
   20de8:	cmp	r0, #32
   20dec:	bhi	20e04 <main@@Base+0xad68>
   20df0:	mov	r1, r2
   20df4:	mov	r0, sl
   20df8:	mov	r2, r6
   20dfc:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   20e00:	mov	r1, r0
   20e04:	cmp	r8, r1
   20e08:	beq	2174c <main@@Base+0xb6b0>
   20e0c:	mov	r0, sl
   20e10:	mov	r2, r6
   20e14:	add	r3, sp, #60	; 0x3c
   20e18:	bl	398b4 <flatcc_json_parser_build_string@@Base>
   20e1c:	mov	r4, r0
   20e20:	ldr	r0, [sp, #60]	; 0x3c
   20e24:	cmp	r0, #0
   20e28:	beq	16fd0 <main@@Base+0xf34>
   20e2c:	ldr	r0, [sl]
   20e30:	mov	r1, #3
   20e34:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   20e38:	cmp	r0, #0
   20e3c:	beq	16fd0 <main@@Base+0xf34>
   20e40:	ldr	r1, [sp, #60]	; 0x3c
   20e44:	str	r1, [r0]
   20e48:	b	21760 <main@@Base+0xb6c4>
   20e4c:	bne	20e5c <main@@Base+0xadc0>
   20e50:	ldrb	r0, [r4, #2]!
   20e54:	cmp	r0, #32
   20e58:	bhi	20e6c <main@@Base+0xadd0>
   20e5c:	mov	r0, sl
   20e60:	mov	r2, r6
   20e64:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   20e68:	mov	r4, r0
   20e6c:	cmp	r8, r4
   20e70:	beq	2174c <main@@Base+0xb6b0>
   20e74:	ldr	r0, [sl]
   20e78:	mov	r1, #1
   20e7c:	mov	r2, #1
   20e80:	mvn	r3, #0
   20e84:	bl	31cdc <flatcc_builder_start_vector@@Base>
   20e88:	cmp	r0, #0
   20e8c:	bne	16fd0 <main@@Base+0xf34>
   20e90:	cmp	r4, r6
   20e94:	beq	20ed8 <main@@Base+0xae3c>
   20e98:	ldrb	r0, [r4]
   20e9c:	cmp	r0, #91	; 0x5b
   20ea0:	bne	20ed8 <main@@Base+0xae3c>
   20ea4:	ldr	r5, [sp, #48]	; 0x30
   20ea8:	add	r1, r4, #1
   20eac:	sub	r0, r6, r1
   20eb0:	cmp	r0, #2
   20eb4:	blt	20f44 <main@@Base+0xaea8>
   20eb8:	ldrb	r0, [r1]
   20ebc:	cmp	r0, #32
   20ec0:	bls	20f34 <main@@Base+0xae98>
   20ec4:	mov	r4, r1
   20ec8:	cmp	r4, r6
   20ecc:	mov	r8, r6
   20ed0:	bne	20f60 <main@@Base+0xaec4>
   20ed4:	b	20f88 <main@@Base+0xaeec>
   20ed8:	mov	r0, sl
   20edc:	mov	r1, r4
   20ee0:	mov	r2, r6
   20ee4:	mov	r3, #22
   20ee8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   20eec:	ldr	r5, [sp, #48]	; 0x30
   20ef0:	mov	r4, r0
   20ef4:	ldr	r0, [sl]
   20ef8:	bl	32f5c <flatcc_builder_end_vector@@Base>
   20efc:	cmp	r0, #0
   20f00:	str	r0, [sp, #60]	; 0x3c
   20f04:	beq	16fd0 <main@@Base+0xf34>
   20f08:	ldr	r0, [sl]
   20f0c:	mov	r1, #30
   20f10:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   20f14:	cmp	r0, #0
   20f18:	beq	16fd0 <main@@Base+0xf34>
   20f1c:	ldr	r1, [sp, #60]	; 0x3c
   20f20:	str	r1, [r0]
   20f24:	sub	r0, r6, r4
   20f28:	cmp	r0, #2
   20f2c:	bge	21770 <main@@Base+0xb6d4>
   20f30:	b	19970 <main@@Base+0x38d4>
   20f34:	bne	20f44 <main@@Base+0xaea8>
   20f38:	ldrb	r0, [r4, #2]!
   20f3c:	cmp	r0, #32
   20f40:	bhi	20f54 <main@@Base+0xaeb8>
   20f44:	mov	r0, sl
   20f48:	mov	r2, r6
   20f4c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   20f50:	mov	r4, r0
   20f54:	cmp	r4, r6
   20f58:	mov	r8, r6
   20f5c:	beq	20f88 <main@@Base+0xaeec>
   20f60:	ldrb	r0, [r4]
   20f64:	cmp	r0, #93	; 0x5d
   20f68:	bne	20f84 <main@@Base+0xaee8>
   20f6c:	add	r1, r4, #1
   20f70:	mov	r6, r8
   20f74:	sub	r0, r8, r1
   20f78:	cmp	r0, #2
   20f7c:	blt	211e8 <main@@Base+0xb14c>
   20f80:	b	211c4 <main@@Base+0xb128>
   20f84:	mov	r6, r4
   20f88:	mov	r0, #0
   20f8c:	mov	r1, #1
   20f90:	strb	r0, [fp, #-60]	; 0xffffffc4
   20f94:	ldr	r0, [sl]
   20f98:	bl	31188 <flatcc_builder_extend_vector@@Base>
   20f9c:	cmp	r0, #0
   20fa0:	beq	218e8 <main@@Base+0xb84c>
   20fa4:	mov	r7, r0
   20fa8:	mov	r4, r6
   20fac:	mov	r6, #0
   20fb0:	mov	r2, r8
   20fb4:	cmp	r4, r8
   20fb8:	str	r6, [fp, #-52]	; 0xffffffcc
   20fbc:	str	r6, [fp, #-56]	; 0xffffffc8
   20fc0:	strb	r6, [fp, #-60]	; 0xffffffc4
   20fc4:	str	r6, [sp, #64]	; 0x40
   20fc8:	beq	2101c <main@@Base+0xaf80>
   20fcc:	sub	r0, fp, #56	; 0x38
   20fd0:	mov	r1, r4
   20fd4:	add	r3, sp, #64	; 0x40
   20fd8:	str	r0, [sp]
   20fdc:	mov	r0, sl
   20fe0:	bl	392f4 <flatcc_json_parser_integer@@Base>
   20fe4:	cmp	r0, r4
   20fe8:	beq	2102c <main@@Base+0xaf90>
   20fec:	mov	r1, r0
   20ff0:	ldr	r0, [sp, #64]	; 0x40
   20ff4:	cmp	r0, #0
   20ff8:	beq	2103c <main@@Base+0xafa0>
   20ffc:	mov	r0, sl
   21000:	mov	r2, r8
   21004:	mov	r3, #8
   21008:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2100c:	mov	r1, r0
   21010:	cmp	r4, r1
   21014:	bne	210b8 <main@@Base+0xb01c>
   21018:	b	21080 <main@@Base+0xafe4>
   2101c:	mov	r1, r2
   21020:	cmp	r4, r1
   21024:	bne	210b8 <main@@Base+0xb01c>
   21028:	b	21080 <main@@Base+0xafe4>
   2102c:	mov	r1, r4
   21030:	cmp	r4, r1
   21034:	bne	210b8 <main@@Base+0xb01c>
   21038:	b	21080 <main@@Base+0xafe4>
   2103c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   21040:	ldr	r2, [fp, #-52]	; 0xffffffcc
   21044:	subs	r3, r0, #256	; 0x100
   21048:	sbcs	r2, r2, #0
   2104c:	bcc	21070 <main@@Base+0xafd4>
   21050:	mov	r0, sl
   21054:	mov	r2, r8
   21058:	mov	r3, #7
   2105c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   21060:	mov	r1, r0
   21064:	cmp	r4, r1
   21068:	bne	210b8 <main@@Base+0xb01c>
   2106c:	b	21080 <main@@Base+0xafe4>
   21070:	mov	r6, r0
   21074:	strb	r0, [fp, #-60]	; 0xffffffc4
   21078:	cmp	r4, r1
   2107c:	bne	210b8 <main@@Base+0xb01c>
   21080:	movw	r3, #148	; 0x94
   21084:	sub	r0, fp, #60	; 0x3c
   21088:	mov	r1, r4
   2108c:	mov	r2, r8
   21090:	mov	r6, r8
   21094:	str	r0, [sp]
   21098:	mov	r0, sl
   2109c:	movt	r3, #6
   210a0:	bl	23a78 <main@@Base+0xd9dc>
   210a4:	mov	r1, r0
   210a8:	cmp	r0, r4
   210ac:	cmpne	r1, r6
   210b0:	beq	218dc <main@@Base+0xb840>
   210b4:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   210b8:	sub	r0, r8, r1
   210bc:	strb	r6, [r7]
   210c0:	mov	r6, r8
   210c4:	cmp	r0, #2
   210c8:	blt	210fc <main@@Base+0xb060>
   210cc:	ldrb	r0, [r1]
   210d0:	cmp	r0, #32
   210d4:	bls	210e8 <main@@Base+0xb04c>
   210d8:	mov	r4, r1
   210dc:	cmp	r4, r6
   210e0:	bne	21114 <main@@Base+0xb078>
   210e4:	b	211a4 <main@@Base+0xb108>
   210e8:	bne	210fc <main@@Base+0xb060>
   210ec:	mov	r4, r1
   210f0:	ldrb	r0, [r4, #1]!
   210f4:	cmp	r0, #32
   210f8:	bhi	2110c <main@@Base+0xb070>
   210fc:	mov	r0, sl
   21100:	mov	r2, r6
   21104:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   21108:	mov	r4, r0
   2110c:	cmp	r4, r6
   21110:	beq	211a4 <main@@Base+0xb108>
   21114:	ldrb	r0, [r4]
   21118:	cmp	r0, #44	; 0x2c
   2111c:	bne	211ac <main@@Base+0xb110>
   21120:	add	r1, r4, #1
   21124:	sub	r0, r6, r1
   21128:	cmp	r0, #2
   2112c:	blt	2115c <main@@Base+0xb0c0>
   21130:	ldrb	r0, [r1]
   21134:	cmp	r0, #32
   21138:	bls	2114c <main@@Base+0xb0b0>
   2113c:	mov	r4, r1
   21140:	cmp	r4, r6
   21144:	bne	21174 <main@@Base+0xb0d8>
   21148:	b	211f8 <main@@Base+0xb15c>
   2114c:	bne	2115c <main@@Base+0xb0c0>
   21150:	ldrb	r0, [r4, #2]!
   21154:	cmp	r0, #32
   21158:	bhi	2116c <main@@Base+0xb0d0>
   2115c:	mov	r0, sl
   21160:	mov	r2, r6
   21164:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   21168:	mov	r4, r0
   2116c:	cmp	r4, r6
   21170:	beq	211f8 <main@@Base+0xb15c>
   21174:	ldrb	r0, [r4]
   21178:	cmp	r0, #93	; 0x5d
   2117c:	beq	211b4 <main@@Base+0xb118>
   21180:	mov	r0, #0
   21184:	mov	r1, #1
   21188:	strb	r0, [fp, #-60]	; 0xffffffc4
   2118c:	ldr	r0, [sl]
   21190:	bl	31188 <flatcc_builder_extend_vector@@Base>
   21194:	mov	r7, r0
   21198:	cmp	r0, #0
   2119c:	bne	20fac <main@@Base+0xaf10>
   211a0:	b	218d4 <main@@Base+0xb838>
   211a4:	mov	r4, r6
   211a8:	b	20ef4 <main@@Base+0xae58>
   211ac:	cmp	r0, #93	; 0x5d
   211b0:	bne	17774 <main@@Base+0x16d8>
   211b4:	add	r1, r4, #1
   211b8:	sub	r0, r6, r1
   211bc:	cmp	r0, #2
   211c0:	blt	211e8 <main@@Base+0xb14c>
   211c4:	ldrb	r0, [r1]
   211c8:	cmp	r0, #32
   211cc:	bls	211d8 <main@@Base+0xb13c>
   211d0:	mov	r4, r1
   211d4:	b	20ef4 <main@@Base+0xae58>
   211d8:	bne	211e8 <main@@Base+0xb14c>
   211dc:	ldrb	r0, [r4, #2]!
   211e0:	cmp	r0, #32
   211e4:	bhi	20ef4 <main@@Base+0xae58>
   211e8:	mov	r0, sl
   211ec:	mov	r2, r6
   211f0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   211f4:	b	20ef0 <main@@Base+0xae54>
   211f8:	mov	r0, sl
   211fc:	mov	r1, r6
   21200:	b	1777c <main@@Base+0x16e0>
   21204:	bne	21214 <main@@Base+0xb178>
   21208:	ldrb	r0, [r1, #2]!
   2120c:	cmp	r0, #32
   21210:	bhi	21228 <main@@Base+0xb18c>
   21214:	ldr	r0, [sp, #44]	; 0x2c
   21218:	mov	r1, r2
   2121c:	mov	r2, r5
   21220:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   21224:	mov	r1, r0
   21228:	cmp	r8, r1
   2122c:	beq	200b8 <main@@Base+0xa01c>
   21230:	ldr	r0, [sp, #56]	; 0x38
   21234:	ldr	sl, [sp, #44]	; 0x2c
   21238:	mov	r2, #8
   2123c:	mov	r3, #0
   21240:	mov	r6, r5
   21244:	str	r2, [sp]
   21248:	mov	r2, r5
   2124c:	str	r0, [sp, #4]
   21250:	movw	r0, #18280	; 0x4768
   21254:	movt	r0, #2
   21258:	str	r0, [sp, #8]
   2125c:	mov	r0, sl
   21260:	bl	39cd4 <flatcc_json_parser_union@@Base>
   21264:	b	2175c <main@@Base+0xb6c0>
   21268:	bne	2127c <main@@Base+0xb1e0>
   2126c:	ldrb	r0, [r4, #2]!
   21270:	cmp	r0, #32
   21274:	mov	r7, r4
   21278:	bhi	20520 <main@@Base+0xa484>
   2127c:	mov	r0, sl
   21280:	mov	r2, r6
   21284:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   21288:	b	2051c <main@@Base+0xa480>
   2128c:	cmp	r0, #34	; 0x22
   21290:	bne	1c464 <main@@Base+0x63c8>
   21294:	add	r1, r8, #21
   21298:	sub	r0, r6, r1
   2129c:	cmp	r0, #2
   212a0:	blt	193e4 <main@@Base+0x3348>
   212a4:	ldrb	r0, [r1]
   212a8:	cmp	r0, #32
   212ac:	bls	193d0 <main@@Base+0x3334>
   212b0:	mov	r4, r1
   212b4:	cmp	r4, r6
   212b8:	bne	193fc <main@@Base+0x3360>
   212bc:	b	1943c <main@@Base+0x33a0>
   212c0:	bne	212d4 <main@@Base+0xb238>
   212c4:	mov	r4, r1
   212c8:	ldrb	r0, [r4, #1]!
   212cc:	cmp	r0, #32
   212d0:	bhi	212e4 <main@@Base+0xb248>
   212d4:	mov	r0, sl
   212d8:	mov	r2, r6
   212dc:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   212e0:	mov	r4, r0
   212e4:	cmp	r4, r6
   212e8:	beq	21324 <main@@Base+0xb288>
   212ec:	ldrb	r0, [r4]
   212f0:	cmp	r0, #58	; 0x3a
   212f4:	bne	21324 <main@@Base+0xb288>
   212f8:	add	r1, r4, #1
   212fc:	sub	r0, r6, r1
   21300:	cmp	r0, #2
   21304:	blt	19464 <main@@Base+0x33c8>
   21308:	ldrb	r0, [r1]
   2130c:	cmp	r0, #32
   21310:	bls	19454 <main@@Base+0x33b8>
   21314:	mov	r4, r1
   21318:	cmp	r7, r4
   2131c:	bne	1947c <main@@Base+0x33e0>
   21320:	b	1c464 <main@@Base+0x63c8>
   21324:	mov	r0, sl
   21328:	mov	r1, r4
   2132c:	mov	r2, r6
   21330:	mov	r3, #4
   21334:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   21338:	b	19470 <main@@Base+0x33d4>
   2133c:	bne	21350 <main@@Base+0xb2b4>
   21340:	mov	r4, r1
   21344:	ldrb	r0, [r4, #1]!
   21348:	cmp	r0, #32
   2134c:	bhi	21360 <main@@Base+0xb2c4>
   21350:	mov	r0, sl
   21354:	mov	r2, r6
   21358:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2135c:	mov	r4, r0
   21360:	cmp	r4, r6
   21364:	beq	213a0 <main@@Base+0xb304>
   21368:	ldrb	r0, [r4]
   2136c:	cmp	r0, #58	; 0x3a
   21370:	bne	213a0 <main@@Base+0xb304>
   21374:	add	r1, r4, #1
   21378:	sub	r0, r6, r1
   2137c:	cmp	r0, #2
   21380:	blt	195d0 <main@@Base+0x3534>
   21384:	ldrb	r0, [r1]
   21388:	cmp	r0, #32
   2138c:	bls	195c0 <main@@Base+0x3524>
   21390:	mov	r4, r1
   21394:	cmp	r7, r4
   21398:	bne	195e8 <main@@Base+0x354c>
   2139c:	b	1c464 <main@@Base+0x63c8>
   213a0:	mov	r0, sl
   213a4:	mov	r1, r4
   213a8:	mov	r2, r6
   213ac:	mov	r3, #4
   213b0:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   213b4:	b	195dc <main@@Base+0x3540>
   213b8:	bne	213cc <main@@Base+0xb330>
   213bc:	mov	r7, r1
   213c0:	ldrb	r0, [r7, #1]!
   213c4:	cmp	r0, #32
   213c8:	bhi	213dc <main@@Base+0xb340>
   213cc:	mov	r0, sl
   213d0:	mov	r2, r6
   213d4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   213d8:	mov	r7, r0
   213dc:	cmp	r7, r6
   213e0:	beq	2141c <main@@Base+0xb380>
   213e4:	ldrb	r0, [r7]
   213e8:	cmp	r0, #58	; 0x3a
   213ec:	bne	2141c <main@@Base+0xb380>
   213f0:	add	r1, r7, #1
   213f4:	sub	r0, r6, r1
   213f8:	cmp	r0, #2
   213fc:	blt	19694 <main@@Base+0x35f8>
   21400:	ldrb	r0, [r1]
   21404:	cmp	r0, #32
   21408:	bls	19684 <main@@Base+0x35e8>
   2140c:	mov	r7, r1
   21410:	cmp	r9, r7
   21414:	bne	196ac <main@@Base+0x3610>
   21418:	b	1ab4c <main@@Base+0x4ab0>
   2141c:	mov	r0, sl
   21420:	mov	r1, r7
   21424:	mov	r2, r6
   21428:	mov	r3, #4
   2142c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   21430:	b	196a0 <main@@Base+0x3604>
   21434:	bne	21448 <main@@Base+0xb3ac>
   21438:	mov	r7, r1
   2143c:	ldrb	r0, [r7, #1]!
   21440:	cmp	r0, #32
   21444:	bhi	21458 <main@@Base+0xb3bc>
   21448:	mov	r0, sl
   2144c:	mov	r2, r6
   21450:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   21454:	mov	r7, r0
   21458:	cmp	r7, r6
   2145c:	beq	21498 <main@@Base+0xb3fc>
   21460:	ldrb	r0, [r7]
   21464:	cmp	r0, #58	; 0x3a
   21468:	bne	21498 <main@@Base+0xb3fc>
   2146c:	add	r1, r7, #1
   21470:	sub	r0, r6, r1
   21474:	cmp	r0, #2
   21478:	blt	197d4 <main@@Base+0x3738>
   2147c:	ldrb	r0, [r1]
   21480:	cmp	r0, #32
   21484:	bls	197c4 <main@@Base+0x3728>
   21488:	mov	r7, r1
   2148c:	cmp	r8, r7
   21490:	bne	197ec <main@@Base+0x3750>
   21494:	b	2174c <main@@Base+0xb6b0>
   21498:	mov	r0, sl
   2149c:	mov	r1, r7
   214a0:	mov	r2, r6
   214a4:	mov	r3, #4
   214a8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   214ac:	b	197e0 <main@@Base+0x3744>
   214b0:	bne	214c4 <main@@Base+0xb428>
   214b4:	mov	r7, r1
   214b8:	ldrb	r0, [r7, #1]!
   214bc:	cmp	r0, #32
   214c0:	bhi	214d4 <main@@Base+0xb438>
   214c4:	mov	r0, sl
   214c8:	mov	r2, r6
   214cc:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   214d0:	mov	r7, r0
   214d4:	cmp	r7, r6
   214d8:	beq	21514 <main@@Base+0xb478>
   214dc:	ldrb	r0, [r7]
   214e0:	cmp	r0, #58	; 0x3a
   214e4:	bne	21514 <main@@Base+0xb478>
   214e8:	add	r1, r7, #1
   214ec:	sub	r0, r6, r1
   214f0:	cmp	r0, #2
   214f4:	blt	199a0 <main@@Base+0x3904>
   214f8:	ldrb	r0, [r1]
   214fc:	cmp	r0, #32
   21500:	bls	19990 <main@@Base+0x38f4>
   21504:	mov	r7, r1
   21508:	cmp	r8, r7
   2150c:	bne	199b8 <main@@Base+0x391c>
   21510:	b	2174c <main@@Base+0xb6b0>
   21514:	mov	r0, sl
   21518:	mov	r1, r7
   2151c:	mov	r2, r6
   21520:	mov	r3, #4
   21524:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   21528:	b	199ac <main@@Base+0x3910>
   2152c:	bne	21540 <main@@Base+0xb4a4>
   21530:	mov	r7, r1
   21534:	ldrb	r0, [r7, #1]!
   21538:	cmp	r0, #32
   2153c:	bhi	21550 <main@@Base+0xb4b4>
   21540:	mov	r0, sl
   21544:	mov	r2, r6
   21548:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2154c:	mov	r7, r0
   21550:	cmp	r7, r6
   21554:	beq	2160c <main@@Base+0xb570>
   21558:	ldrb	r0, [r7]
   2155c:	cmp	r0, #58	; 0x3a
   21560:	bne	2160c <main@@Base+0xb570>
   21564:	add	r1, r7, #1
   21568:	sub	r0, r6, r1
   2156c:	cmp	r0, #2
   21570:	blt	19a50 <main@@Base+0x39b4>
   21574:	ldrb	r0, [r1]
   21578:	cmp	r0, #32
   2157c:	bls	19a40 <main@@Base+0x39a4>
   21580:	mov	r7, r1
   21584:	cmp	r9, r7
   21588:	bne	19a68 <main@@Base+0x39cc>
   2158c:	add	r4, r8, #16
   21590:	mov	r1, #8
   21594:	mov	r2, #-268435456	; 0xf0000000
   21598:	sub	r0, r6, r4
   2159c:	cmp	r0, #8
   215a0:	movcc	r1, r0
   215a4:	add	r1, r2, r1, lsl #28
   215a8:	asr	r1, r1, #28
   215ac:	cmp	r1, #0
   215b0:	blt	1d0c8 <main@@Base+0x702c>
   215b4:	ldrb	r1, [r4]
   215b8:	cmp	r1, #97	; 0x61
   215bc:	bne	1d0c8 <main@@Base+0x702c>
   215c0:	cmp	r0, #2
   215c4:	blt	1d0c8 <main@@Base+0x702c>
   215c8:	ldr	r2, [sp, #40]	; 0x28
   215cc:	mov	r1, r8
   215d0:	ldrb	r0, [r1, #17]!
   215d4:	ldr	r2, [r2]
   215d8:	cmp	r2, #0
   215dc:	beq	178dc <main@@Base+0x1840>
   215e0:	cmp	r0, #33	; 0x21
   215e4:	bcc	215f0 <main@@Base+0xb554>
   215e8:	cmp	r0, #58	; 0x3a
   215ec:	bne	1d0c8 <main@@Base+0x702c>
   215f0:	ldr	r0, [sp, #40]	; 0x28
   215f4:	mov	r2, #0
   215f8:	str	r2, [r0]
   215fc:	sub	r0, r6, r1
   21600:	cmp	r0, #2
   21604:	bge	178f4 <main@@Base+0x1858>
   21608:	b	19d64 <main@@Base+0x3cc8>
   2160c:	mov	r0, sl
   21610:	mov	r1, r7
   21614:	mov	r2, r6
   21618:	mov	r3, #4
   2161c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   21620:	b	19a5c <main@@Base+0x39c0>
   21624:	bne	21634 <main@@Base+0xb598>
   21628:	ldrb	r0, [r7, #2]!
   2162c:	cmp	r0, #32
   21630:	bhi	21644 <main@@Base+0xb5a8>
   21634:	ldr	r0, [sp, #44]	; 0x2c
   21638:	mov	r2, r6
   2163c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   21640:	mov	r7, r0
   21644:	cmp	r8, r7
   21648:	beq	216b0 <main@@Base+0xb614>
   2164c:	ldr	sl, [sp, #44]	; 0x2c
   21650:	mov	r1, #4
   21654:	mov	r2, #2
   21658:	mvn	r3, #-1073741824	; 0xc0000000
   2165c:	ldr	r0, [sl]
   21660:	bl	31cdc <flatcc_builder_start_vector@@Base>
   21664:	cmp	r0, #0
   21668:	bne	218cc <main@@Base+0xb830>
   2166c:	cmp	r7, r6
   21670:	beq	171d4 <main@@Base+0x1138>
   21674:	ldrb	r0, [r7]
   21678:	cmp	r0, #91	; 0x5b
   2167c:	bne	171d4 <main@@Base+0x1138>
   21680:	add	r1, r7, #1
   21684:	sub	r0, r6, r1
   21688:	cmp	r0, #2
   2168c:	blt	17278 <main@@Base+0x11dc>
   21690:	ldrb	r0, [r1]
   21694:	cmp	r0, #32
   21698:	bls	17268 <main@@Base+0x11cc>
   2169c:	mov	r7, r1
   216a0:	cmp	r7, r6
   216a4:	mov	r4, r6
   216a8:	bne	17294 <main@@Base+0x11f8>
   216ac:	b	172d8 <main@@Base+0x123c>
   216b0:	movw	r0, #31088	; 0x7970
   216b4:	movt	r0, #24436	; 0x5f74
   216b8:	eor	r0, sl, r0
   216bc:	orrs	r0, r0, r4
   216c0:	bne	21748 <main@@Base+0xb6ac>
   216c4:	add	r4, r8, #8
   216c8:	mov	r1, #8
   216cc:	mov	r2, #-268435456	; 0xf0000000
   216d0:	ldr	sl, [sp, #44]	; 0x2c
   216d4:	sub	r0, r6, r4
   216d8:	cmp	r0, #8
   216dc:	movcc	r1, r0
   216e0:	add	r1, r2, r1, lsl #28
   216e4:	asr	r1, r1, #28
   216e8:	cmp	r1, #0
   216ec:	blt	1d0c8 <main@@Base+0x702c>
   216f0:	ldrb	r1, [r4]
   216f4:	cmp	r1, #101	; 0x65
   216f8:	bne	1d0c8 <main@@Base+0x702c>
   216fc:	cmp	r0, #2
   21700:	blt	1d0c8 <main@@Base+0x702c>
   21704:	ldr	r2, [sp, #40]	; 0x28
   21708:	mov	r1, r8
   2170c:	ldrb	r0, [r1, #9]!
   21710:	ldr	r2, [r2]
   21714:	cmp	r2, #0
   21718:	beq	17234 <main@@Base+0x1198>
   2171c:	cmp	r0, #33	; 0x21
   21720:	bcc	2172c <main@@Base+0xb690>
   21724:	cmp	r0, #58	; 0x3a
   21728:	bne	1d0c8 <main@@Base+0x702c>
   2172c:	ldr	r0, [sp, #40]	; 0x28
   21730:	mov	r2, #0
   21734:	str	r2, [r0]
   21738:	sub	r0, r6, r1
   2173c:	cmp	r0, #2
   21740:	bge	1724c <main@@Base+0x11b0>
   21744:	b	1745c <main@@Base+0x13c0>
   21748:	ldr	sl, [sp, #44]	; 0x2c
   2174c:	mov	r0, sl
   21750:	mov	r1, r8
   21754:	mov	r2, r6
   21758:	bl	376d0 <flatcc_json_parser_unmatched_symbol@@Base>
   2175c:	mov	r4, r0
   21760:	ldr	r5, [sp, #48]	; 0x30
   21764:	sub	r0, r6, r4
   21768:	cmp	r0, #2
   2176c:	blt	19970 <main@@Base+0x38d4>
   21770:	ldrb	r0, [r4]
   21774:	cmp	r0, #32
   21778:	bls	217cc <main@@Base+0xb730>
   2177c:	mov	r2, r4
   21780:	cmp	r2, r6
   21784:	beq	217e8 <main@@Base+0xb74c>
   21788:	ldrb	r0, [r2]
   2178c:	cmp	r0, #44	; 0x2c
   21790:	bne	21800 <main@@Base+0xb764>
   21794:	add	r1, r2, #1
   21798:	sub	r0, r6, r1
   2179c:	cmp	r0, #2
   217a0:	blt	171b8 <main@@Base+0x111c>
   217a4:	ldrb	r0, [r1]
   217a8:	cmp	r0, #32
   217ac:	bls	171a8 <main@@Base+0x110c>
   217b0:	mov	r2, r1
   217b4:	cmp	r2, r6
   217b8:	beq	2181c <main@@Base+0xb780>
   217bc:	ldrb	r0, [r2]
   217c0:	cmp	r0, #125	; 0x7d
   217c4:	bne	1e410 <main@@Base+0x8374>
   217c8:	b	21828 <main@@Base+0xb78c>
   217cc:	bne	19970 <main@@Base+0x38d4>
   217d0:	mov	r2, r4
   217d4:	ldrb	r0, [r2, #1]!
   217d8:	cmp	r0, #32
   217dc:	bls	19970 <main@@Base+0x38d4>
   217e0:	cmp	r2, r6
   217e4:	bne	21788 <main@@Base+0xb6ec>
   217e8:	mov	r4, r6
   217ec:	ldr	r0, [sp, #36]	; 0x24
   217f0:	ldr	r0, [r0]
   217f4:	cmp	r0, #0
   217f8:	bne	16fd0 <main@@Base+0xf34>
   217fc:	b	1708c <main@@Base+0xff0>
   21800:	cmp	r0, #125	; 0x7d
   21804:	bne	218a0 <main@@Base+0xb804>
   21808:	add	r4, r2, #1
   2180c:	sub	r0, r6, r4
   21810:	cmp	r0, #2
   21814:	blt	2186c <main@@Base+0xb7d0>
   21818:	b	21838 <main@@Base+0xb79c>
   2181c:	mov	r0, sl
   21820:	mov	r1, r6
   21824:	b	218a8 <main@@Base+0xb80c>
   21828:	add	r4, r2, #1
   2182c:	sub	r0, r6, r4
   21830:	cmp	r0, #2
   21834:	blt	2186c <main@@Base+0xb7d0>
   21838:	ldrb	r0, [r4]
   2183c:	cmp	r0, #32
   21840:	bhi	218b8 <main@@Base+0xb81c>
   21844:	bne	2186c <main@@Base+0xb7d0>
   21848:	ldrb	r0, [r2, #2]!
   2184c:	cmp	r0, #32
   21850:	bls	2186c <main@@Base+0xb7d0>
   21854:	mov	r4, r2
   21858:	ldr	r0, [sp, #36]	; 0x24
   2185c:	ldr	r0, [r0]
   21860:	cmp	r0, #0
   21864:	bne	16fd0 <main@@Base+0xf34>
   21868:	b	1708c <main@@Base+0xff0>
   2186c:	mov	r0, sl
   21870:	mov	r1, r4
   21874:	mov	r2, r6
   21878:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2187c:	b	218b4 <main@@Base+0xb818>
   21880:	bne	21890 <main@@Base+0xb7f4>
   21884:	ldrb	r0, [r4, #2]!
   21888:	cmp	r0, #32
   2188c:	bhi	1707c <main@@Base+0xfe0>
   21890:	mov	r0, sl
   21894:	mov	r2, r6
   21898:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2189c:	b	17078 <main@@Base+0xfdc>
   218a0:	mov	r0, sl
   218a4:	mov	r1, r2
   218a8:	mov	r2, r6
   218ac:	mov	r3, #10
   218b0:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   218b4:	mov	r4, r0
   218b8:	ldr	r0, [sp, #36]	; 0x24
   218bc:	ldr	r0, [r0]
   218c0:	cmp	r0, #0
   218c4:	bne	16fd0 <main@@Base+0xf34>
   218c8:	b	1708c <main@@Base+0xff0>
   218cc:	mov	r4, r7
   218d0:	b	16fd0 <main@@Base+0xf34>
   218d4:	mov	r6, r8
   218d8:	b	16fd0 <main@@Base+0xf34>
   218dc:	mov	r4, r1
   218e0:	mov	r6, r8
   218e4:	b	16fd0 <main@@Base+0xf34>
   218e8:	mov	r4, r6
   218ec:	mov	r6, r8
   218f0:	b	16fd0 <main@@Base+0xf34>
   218f4:	mov	r6, r5
   218f8:	b	16fd0 <main@@Base+0xf34>
   218fc:	mov	r4, r1
   21900:	b	16fd0 <main@@Base+0xf34>
   21904:	ldr	r6, [sp, #52]	; 0x34
   21908:	b	16fd0 <main@@Base+0xf34>
   2190c:	mov	r4, r6
   21910:	mov	r6, r5
   21914:	b	16fd0 <main@@Base+0xf34>
   21918:	mov	r4, r1
   2191c:	mov	r6, r5
   21920:	b	16fd0 <main@@Base+0xf34>
   21924:	ldr	sl, [sp, #44]	; 0x2c
   21928:	b	16fd0 <main@@Base+0xf34>
   2192c:	ldr	sl, [sp, #44]	; 0x2c
   21930:	mov	r4, r1
   21934:	b	16fd0 <main@@Base+0xf34>
   21938:	mov	r4, r6
   2193c:	b	21968 <main@@Base+0xb8cc>
   21940:	ldr	r5, [sp, #52]	; 0x34
   21944:	ldr	sl, [sp, #44]	; 0x2c
   21948:	mov	r4, r6
   2194c:	mov	r6, r5
   21950:	b	16fd0 <main@@Base+0xf34>
   21954:	ldr	r6, [sp, #52]	; 0x34
   21958:	ldr	sl, [sp, #44]	; 0x2c
   2195c:	mov	r4, r7
   21960:	b	16fd0 <main@@Base+0xf34>
   21964:	mov	r4, r1
   21968:	ldr	r6, [sp, #52]	; 0x34
   2196c:	ldr	sl, [sp, #44]	; 0x2c
   21970:	b	16fd0 <main@@Base+0xf34>
   21974:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21978:	add	fp, sp, #28
   2197c:	sub	sp, sp, #20
   21980:	mov	r5, r0
   21984:	movw	r0, #60296	; 0xeb88
   21988:	movw	r3, #48989	; 0xbf5d
   2198c:	mov	r4, r1
   21990:	mov	r1, #3
   21994:	mov	r2, #0
   21998:	mov	r8, #0
   2199c:	movt	r0, #2
   219a0:	str	r1, [sp]
   219a4:	movt	r3, #4
   219a8:	mov	r1, r4
   219ac:	str	r0, [sp, #4]
   219b0:	mov	r0, r5
   219b4:	bl	46f0c <flatcc_json_printer_struct_field@@Base>
   219b8:	movw	r3, #48993	; 0xbf61
   219bc:	mov	r0, #150	; 0x96
   219c0:	mov	r1, #4
   219c4:	mov	r2, #1
   219c8:	mov	r6, #4
   219cc:	str	r1, [sp]
   219d0:	str	r0, [sp, #4]
   219d4:	movt	r3, #4
   219d8:	mov	r0, r5
   219dc:	mov	r1, r4
   219e0:	bl	3df20 <flatcc_json_printer_int16_field@@Base>
   219e4:	movw	r3, #48998	; 0xbf66
   219e8:	mov	r0, #100	; 0x64
   219ec:	mov	r1, #2
   219f0:	mov	r2, #2
   219f4:	str	r1, [sp]
   219f8:	str	r0, [sp, #4]
   219fc:	movt	r3, #4
   21a00:	mov	r0, r5
   21a04:	mov	r1, r4
   21a08:	bl	3df20 <flatcc_json_printer_int16_field@@Base>
   21a0c:	movw	r3, #49001	; 0xbf69
   21a10:	mov	r0, r5
   21a14:	mov	r1, r4
   21a18:	mov	r2, #3
   21a1c:	str	r6, [sp]
   21a20:	movt	r3, #4
   21a24:	bl	3d54c <flatcc_json_printer_string_field@@Base>
   21a28:	movw	r3, #49006	; 0xbf6e
   21a2c:	mov	r0, #9
   21a30:	mov	r1, r4
   21a34:	mov	r2, #5
   21a38:	mov	r7, #5
   21a3c:	str	r0, [sp]
   21a40:	movt	r3, #4
   21a44:	mov	r0, r5
   21a48:	bl	40000 <flatcc_json_printer_uint8_vector_field@@Base>
   21a4c:	movw	r0, #60548	; 0xec84
   21a50:	movw	r3, #49016	; 0xbf78
   21a54:	mov	r1, #8
   21a58:	mov	r2, #6
   21a5c:	str	r7, [sp]
   21a60:	mov	r7, #5
   21a64:	movt	r0, #2
   21a68:	str	r1, [sp, #4]
   21a6c:	movt	r3, #4
   21a70:	mov	r1, r4
   21a74:	str	r0, [sp, #8]
   21a78:	mov	r0, r5
   21a7c:	bl	3e8b0 <flatcc_json_printer_int8_enum_field@@Base>
   21a80:	movw	r0, #60892	; 0xeddc
   21a84:	movw	r1, #60776	; 0xed68
   21a88:	movw	r3, #49392	; 0xc0f0
   21a8c:	mov	r2, #8
   21a90:	str	r6, [sp]
   21a94:	movt	r0, #2
   21a98:	movt	r1, #2
   21a9c:	movt	r3, #4
   21aa0:	str	r1, [sp, #4]
   21aa4:	str	r0, [sp, #8]
   21aa8:	mov	r0, r5
   21aac:	mov	r1, r4
   21ab0:	bl	46618 <flatcc_json_printer_union_field@@Base>
   21ab4:	movw	r0, #60980	; 0xee34
   21ab8:	movw	r3, #49022	; 0xbf7e
   21abc:	mov	r1, r4
   21ac0:	mov	r2, #9
   21ac4:	str	r7, [sp]
   21ac8:	mov	sl, #5
   21acc:	str	r6, [sp, #4]
   21ad0:	movt	r0, #2
   21ad4:	movt	r3, #4
   21ad8:	str	r0, [sp, #8]
   21adc:	mov	r0, r5
   21ae0:	bl	4526c <flatcc_json_printer_struct_vector_field@@Base>
   21ae4:	movw	r3, #49028	; 0xbf84
   21ae8:	mov	r7, #17
   21aec:	mov	r0, r5
   21af0:	mov	r1, r4
   21af4:	mov	r2, #10
   21af8:	movt	r3, #4
   21afc:	str	r7, [sp]
   21b00:	bl	45808 <flatcc_json_printer_string_vector_field@@Base>
   21b04:	movw	r9, #6516	; 0x1974
   21b08:	movw	r3, #49046	; 0xbf96
   21b0c:	mov	r0, r5
   21b10:	mov	r1, r4
   21b14:	mov	r2, #11
   21b18:	movt	r9, #2
   21b1c:	movt	r3, #4
   21b20:	stm	sp, {r7, r9}
   21b24:	bl	45bc0 <flatcc_json_printer_table_vector_field@@Base>
   21b28:	movw	r3, #49064	; 0xbfa8
   21b2c:	mov	r0, r5
   21b30:	mov	r1, r4
   21b34:	mov	r2, #12
   21b38:	str	sl, [sp]
   21b3c:	mov	sl, #5
   21b40:	str	r9, [sp, #4]
   21b44:	movt	r3, #4
   21b48:	bl	46430 <flatcc_json_printer_table_field@@Base>
   21b4c:	movw	r3, #49070	; 0xbfae
   21b50:	mov	r0, #20
   21b54:	mov	r1, r4
   21b58:	mov	r2, #13
   21b5c:	stm	sp, {r0, r8, r9}
   21b60:	movt	r3, #4
   21b64:	mov	r0, r5
   21b68:	bl	47768 <flatcc_json_printer_table_as_nested_root@@Base>
   21b6c:	movw	r0, #61076	; 0xee94
   21b70:	movw	r3, #49091	; 0xbfc3
   21b74:	mov	r1, #9
   21b78:	mov	r2, #14
   21b7c:	movt	r0, #2
   21b80:	str	r1, [sp]
   21b84:	movt	r3, #4
   21b88:	mov	r1, r4
   21b8c:	str	r0, [sp, #4]
   21b90:	mov	r0, r5
   21b94:	bl	46430 <flatcc_json_printer_table_field@@Base>
   21b98:	movw	r3, #49101	; 0xbfcd
   21b9c:	mov	r0, #1
   21ba0:	mov	r9, #8
   21ba4:	mov	r1, r4
   21ba8:	mov	r2, #15
   21bac:	str	r0, [sp, #4]
   21bb0:	movt	r3, #4
   21bb4:	mov	r0, r5
   21bb8:	str	r9, [sp]
   21bbc:	bl	3e1d0 <flatcc_json_printer_bool_field@@Base>
   21bc0:	movw	r3, #49110	; 0xbfd6
   21bc4:	mov	r6, #16
   21bc8:	mov	r0, r5
   21bcc:	mov	r1, r4
   21bd0:	mov	r2, #16
   21bd4:	movt	r3, #4
   21bd8:	stm	sp, {r6, r8}
   21bdc:	bl	3e000 <flatcc_json_printer_int32_field@@Base>
   21be0:	movw	r3, #49127	; 0xbfe7
   21be4:	mov	r0, r5
   21be8:	mov	r1, r4
   21bec:	mov	r2, #17
   21bf0:	stm	sp, {r6, r8}
   21bf4:	movt	r3, #4
   21bf8:	bl	3dc00 <flatcc_json_printer_uint32_field@@Base>
   21bfc:	movw	r3, #49144	; 0xbff8
   21c00:	mov	r0, r5
   21c04:	mov	r1, r4
   21c08:	mov	r2, #18
   21c0c:	str	r8, [sp, #8]
   21c10:	str	r8, [sp, #12]
   21c14:	str	r6, [sp]
   21c18:	movt	r3, #4
   21c1c:	bl	3e0d8 <flatcc_json_printer_int64_field@@Base>
   21c20:	movw	r3, #49161	; 0xc009
   21c24:	mov	r0, r5
   21c28:	mov	r1, r4
   21c2c:	mov	r2, #19
   21c30:	str	r8, [sp, #8]
   21c34:	str	r8, [sp, #12]
   21c38:	str	r6, [sp]
   21c3c:	movt	r3, #4
   21c40:	bl	3dcc0 <flatcc_json_printer_uint64_field@@Base>
   21c44:	movw	r3, #49178	; 0xc01a
   21c48:	mov	r0, r5
   21c4c:	mov	r1, r4
   21c50:	mov	r2, #20
   21c54:	stm	sp, {r7, r8}
   21c58:	movt	r3, #4
   21c5c:	bl	3e000 <flatcc_json_printer_int32_field@@Base>
   21c60:	movw	r3, #49196	; 0xc02c
   21c64:	mov	r0, r5
   21c68:	mov	r1, r4
   21c6c:	mov	r2, #21
   21c70:	stm	sp, {r7, r8}
   21c74:	movt	r3, #4
   21c78:	bl	3dc00 <flatcc_json_printer_uint32_field@@Base>
   21c7c:	movw	r3, #49214	; 0xc03e
   21c80:	mov	r0, r5
   21c84:	mov	r1, r4
   21c88:	mov	r2, #22
   21c8c:	str	r8, [sp, #8]
   21c90:	str	r8, [sp, #12]
   21c94:	str	r7, [sp]
   21c98:	movt	r3, #4
   21c9c:	bl	3e0d8 <flatcc_json_printer_int64_field@@Base>
   21ca0:	movw	r3, #49232	; 0xc050
   21ca4:	mov	r0, r5
   21ca8:	mov	r1, r4
   21cac:	mov	r2, #23
   21cb0:	str	r8, [sp, #8]
   21cb4:	str	r8, [sp, #12]
   21cb8:	str	r7, [sp]
   21cbc:	mov	r8, #23
   21cc0:	movt	r3, #4
   21cc4:	bl	3dcc0 <flatcc_json_printer_uint64_field@@Base>
   21cc8:	movw	r3, #49250	; 0xc062
   21ccc:	mov	r0, r5
   21cd0:	mov	r1, r4
   21cd4:	mov	r2, #24
   21cd8:	str	r6, [sp]
   21cdc:	movt	r3, #4
   21ce0:	bl	42150 <flatcc_json_printer_bool_vector_field@@Base>
   21ce4:	vldr	s0, [pc, #396]	; 21e78 <main@@Base+0xbddc>
   21ce8:	movw	r3, #49267	; 0xc073
   21cec:	mov	r0, r5
   21cf0:	mov	r1, r4
   21cf4:	mov	r2, #25
   21cf8:	str	sl, [sp]
   21cfc:	movt	r3, #4
   21d00:	bl	3e2c4 <flatcc_json_printer_float_field@@Base>
   21d04:	movw	r3, #49273	; 0xc079
   21d08:	mov	r6, #6
   21d0c:	vmov.f32	s0, #8	; 0x40400000  3.0
   21d10:	mov	r0, r5
   21d14:	mov	r1, r4
   21d18:	mov	r2, #26
   21d1c:	movt	r3, #4
   21d20:	str	r6, [sp]
   21d24:	bl	3e2c4 <flatcc_json_printer_float_field@@Base>
   21d28:	vldr	s0, [pc, #332]	; 21e7c <main@@Base+0xbde0>
   21d2c:	movw	r3, #49280	; 0xc080
   21d30:	mov	r0, r5
   21d34:	mov	r1, r4
   21d38:	mov	r2, #27
   21d3c:	str	r6, [sp]
   21d40:	movt	r3, #4
   21d44:	bl	3e2c4 <flatcc_json_printer_float_field@@Base>
   21d48:	movw	r3, #49287	; 0xc087
   21d4c:	mov	r0, #18
   21d50:	mov	r1, r4
   21d54:	mov	r2, #28
   21d58:	str	r0, [sp]
   21d5c:	movt	r3, #4
   21d60:	mov	r0, r5
   21d64:	bl	45808 <flatcc_json_printer_string_vector_field@@Base>
   21d68:	movw	r0, #61208	; 0xef18
   21d6c:	movw	r3, #49306	; 0xc09a
   21d70:	stm	sp, {r8, r9}
   21d74:	mov	r1, r4
   21d78:	mov	r2, #29
   21d7c:	movt	r0, #2
   21d80:	movt	r3, #4
   21d84:	str	r0, [sp, #8]
   21d88:	mov	r0, r5
   21d8c:	bl	4526c <flatcc_json_printer_struct_vector_field@@Base>
   21d90:	movw	r3, #49330	; 0xc0b2
   21d94:	mov	r6, #4
   21d98:	mov	r0, r5
   21d9c:	mov	r1, r4
   21da0:	mov	r2, #30
   21da4:	movt	r3, #4
   21da8:	str	r6, [sp]
   21dac:	bl	40000 <flatcc_json_printer_uint8_vector_field@@Base>
   21db0:	movw	r0, #60980	; 0xee34
   21db4:	movw	r3, #49335	; 0xc0b7
   21db8:	mov	r1, r4
   21dbc:	mov	r2, #31
   21dc0:	str	sl, [sp]
   21dc4:	str	r6, [sp, #4]
   21dc8:	movt	r0, #2
   21dcc:	movt	r3, #4
   21dd0:	str	r0, [sp, #8]
   21dd4:	mov	r0, r5
   21dd8:	bl	4526c <flatcc_json_printer_struct_vector_field@@Base>
   21ddc:	movw	r3, #49341	; 0xc0bd
   21de0:	mov	r0, #15
   21de4:	mov	r1, r4
   21de8:	mov	r2, #32
   21dec:	str	r0, [sp]
   21df0:	movt	r3, #4
   21df4:	mov	r0, r5
   21df8:	bl	41d48 <flatcc_json_printer_int64_vector_field@@Base>
   21dfc:	movw	r3, #49357	; 0xc0cd
   21e00:	mov	r0, r5
   21e04:	mov	r1, r4
   21e08:	mov	r2, #33	; 0x21
   21e0c:	str	r7, [sp]
   21e10:	movt	r3, #4
   21e14:	bl	42954 <flatcc_json_printer_double_vector_field@@Base>
   21e18:	movw	r0, #61316	; 0xef84
   21e1c:	movw	r3, #49375	; 0xc0df
   21e20:	mov	r1, #21
   21e24:	mov	r2, #34	; 0x22
   21e28:	movt	r0, #2
   21e2c:	str	r1, [sp]
   21e30:	movt	r3, #4
   21e34:	mov	r1, r4
   21e38:	str	r0, [sp, #4]
   21e3c:	mov	r0, r5
   21e40:	bl	46430 <flatcc_json_printer_table_field@@Base>
   21e44:	movw	r0, #61320	; 0xef88
   21e48:	movw	r3, #49397	; 0xc0f5
   21e4c:	mov	r1, #10
   21e50:	mov	r2, #35	; 0x23
   21e54:	movt	r0, #2
   21e58:	str	r1, [sp]
   21e5c:	movt	r3, #4
   21e60:	mov	r1, r4
   21e64:	str	r0, [sp, #4]
   21e68:	mov	r0, r5
   21e6c:	bl	46430 <flatcc_json_printer_table_field@@Base>
   21e70:	sub	sp, fp, #28
   21e74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21e78:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   21e7c:	andeq	r0, r0, r0
   21e80:	push	{r4, r5, r6, r7, fp, lr}
   21e84:	add	fp, sp, #16
   21e88:	sub	sp, sp, #8
   21e8c:	mov	r1, #0
   21e90:	mov	r2, #32
   21e94:	mov	r3, #16
   21e98:	mov	r4, r0
   21e9c:	bl	34ec8 <flatcc_verify_field@@Base>
   21ea0:	cmp	r0, #0
   21ea4:	bne	222ac <main@@Base+0xc210>
   21ea8:	mov	r0, r4
   21eac:	mov	r1, #2
   21eb0:	mov	r2, #2
   21eb4:	mov	r3, #2
   21eb8:	bl	34ec8 <flatcc_verify_field@@Base>
   21ebc:	cmp	r0, #0
   21ec0:	bne	222ac <main@@Base+0xc210>
   21ec4:	mov	r0, r4
   21ec8:	mov	r1, #1
   21ecc:	mov	r2, #2
   21ed0:	mov	r3, #2
   21ed4:	bl	34ec8 <flatcc_verify_field@@Base>
   21ed8:	cmp	r0, #0
   21edc:	bne	222ac <main@@Base+0xc210>
   21ee0:	mov	r0, r4
   21ee4:	mov	r1, #3
   21ee8:	mov	r2, #1
   21eec:	bl	34f4c <flatcc_verify_string_field@@Base>
   21ef0:	cmp	r0, #0
   21ef4:	bne	222ac <main@@Base+0xc210>
   21ef8:	mov	r0, r4
   21efc:	mov	r1, #6
   21f00:	mov	r2, #1
   21f04:	mov	r3, #1
   21f08:	mov	r5, #1
   21f0c:	bl	34ec8 <flatcc_verify_field@@Base>
   21f10:	cmp	r0, #0
   21f14:	bne	222ac <main@@Base+0xc210>
   21f18:	mvn	r0, #0
   21f1c:	mov	r1, #5
   21f20:	mov	r2, #0
   21f24:	mov	r3, #1
   21f28:	str	r5, [sp]
   21f2c:	str	r0, [sp, #4]
   21f30:	mov	r0, r4
   21f34:	bl	35030 <flatcc_verify_vector_field@@Base>
   21f38:	cmp	r0, #0
   21f3c:	bne	222ac <main@@Base+0xc210>
   21f40:	movw	r3, #7808	; 0x1e80
   21f44:	mov	r0, r4
   21f48:	mov	r1, #11
   21f4c:	mov	r2, #0
   21f50:	movt	r3, #2
   21f54:	bl	35438 <flatcc_verify_table_vector_field@@Base>
   21f58:	cmp	r0, #0
   21f5c:	bne	222ac <main@@Base+0xc210>
   21f60:	mov	r0, r4
   21f64:	mov	r1, #10
   21f68:	mov	r2, #0
   21f6c:	bl	35128 <flatcc_verify_string_vector_field@@Base>
   21f70:	cmp	r0, #0
   21f74:	bne	222ac <main@@Base+0xc210>
   21f78:	mov	r0, r4
   21f7c:	mov	r1, #28
   21f80:	mov	r2, #0
   21f84:	bl	35128 <flatcc_verify_string_vector_field@@Base>
   21f88:	cmp	r0, #0
   21f8c:	bne	222ac <main@@Base+0xc210>
   21f90:	mvn	r0, #0
   21f94:	mov	r1, #1
   21f98:	mov	r2, #0
   21f9c:	mov	r3, #1
   21fa0:	str	r1, [sp]
   21fa4:	str	r0, [sp, #4]
   21fa8:	mov	r0, r4
   21fac:	mov	r1, #24
   21fb0:	bl	35030 <flatcc_verify_vector_field@@Base>
   21fb4:	cmp	r0, #0
   21fb8:	bne	222ac <main@@Base+0xc210>
   21fbc:	mvn	r0, #-536870912	; 0xe0000000
   21fc0:	mov	r1, #4
   21fc4:	mov	r2, #0
   21fc8:	mov	r3, #8
   21fcc:	str	r1, [sp]
   21fd0:	str	r0, [sp, #4]
   21fd4:	mov	r0, r4
   21fd8:	mov	r1, #29
   21fdc:	bl	35030 <flatcc_verify_vector_field@@Base>
   21fe0:	cmp	r0, #0
   21fe4:	bne	222ac <main@@Base+0xc210>
   21fe8:	movw	r5, #7808	; 0x1e80
   21fec:	mov	r0, r4
   21ff0:	mov	r1, #12
   21ff4:	mov	r2, #0
   21ff8:	movt	r5, #2
   21ffc:	mov	r3, r5
   22000:	bl	352cc <flatcc_verify_table_field@@Base>
   22004:	cmp	r0, #0
   22008:	bne	222ac <main@@Base+0xc210>
   2200c:	movw	r3, #63160	; 0xf6b8
   22010:	mov	r0, r4
   22014:	mov	r1, #8
   22018:	mov	r2, #0
   2201c:	movt	r3, #2
   22020:	bl	36374 <flatcc_verify_union_field@@Base>
   22024:	cmp	r0, #0
   22028:	bne	222ac <main@@Base+0xc210>
   2202c:	mvn	r6, #-1073741824	; 0xc0000000
   22030:	mov	r7, #2
   22034:	mov	r0, r4
   22038:	mov	r1, #9
   2203c:	mov	r2, #0
   22040:	mov	r3, #4
   22044:	str	r7, [sp]
   22048:	str	r6, [sp, #4]
   2204c:	bl	35030 <flatcc_verify_vector_field@@Base>
   22050:	cmp	r0, #0
   22054:	bne	222ac <main@@Base+0xc210>
   22058:	mov	r0, r4
   2205c:	mov	r1, #31
   22060:	mov	r2, #0
   22064:	mov	r3, #4
   22068:	str	r7, [sp]
   2206c:	str	r6, [sp, #4]
   22070:	bl	35030 <flatcc_verify_vector_field@@Base>
   22074:	cmp	r0, #0
   22078:	bne	222ac <main@@Base+0xc210>
   2207c:	mov	r0, #1
   22080:	mov	r1, #13
   22084:	mov	r2, #0
   22088:	mov	r3, #0
   2208c:	stm	sp, {r0, r5}
   22090:	mov	r0, r4
   22094:	bl	3603c <flatcc_verify_table_as_nested_root@@Base>
   22098:	cmp	r0, #0
   2209c:	bne	222ac <main@@Base+0xc210>
   220a0:	movw	r3, #63204	; 0xf6e4
   220a4:	mov	r0, r4
   220a8:	mov	r1, #14
   220ac:	mov	r2, #0
   220b0:	movt	r3, #2
   220b4:	bl	352cc <flatcc_verify_table_field@@Base>
   220b8:	cmp	r0, #0
   220bc:	bne	222ac <main@@Base+0xc210>
   220c0:	mov	r0, r4
   220c4:	mov	r1, #15
   220c8:	mov	r2, #1
   220cc:	mov	r3, #1
   220d0:	bl	34ec8 <flatcc_verify_field@@Base>
   220d4:	cmp	r0, #0
   220d8:	bne	222ac <main@@Base+0xc210>
   220dc:	mov	r0, r4
   220e0:	mov	r1, #16
   220e4:	mov	r2, #4
   220e8:	mov	r3, #4
   220ec:	bl	34ec8 <flatcc_verify_field@@Base>
   220f0:	cmp	r0, #0
   220f4:	bne	222ac <main@@Base+0xc210>
   220f8:	mov	r0, r4
   220fc:	mov	r1, #17
   22100:	mov	r2, #4
   22104:	mov	r3, #4
   22108:	bl	34ec8 <flatcc_verify_field@@Base>
   2210c:	cmp	r0, #0
   22110:	bne	222ac <main@@Base+0xc210>
   22114:	mov	r0, r4
   22118:	mov	r1, #18
   2211c:	mov	r2, #8
   22120:	mov	r3, #8
   22124:	bl	34ec8 <flatcc_verify_field@@Base>
   22128:	cmp	r0, #0
   2212c:	bne	222ac <main@@Base+0xc210>
   22130:	mov	r0, r4
   22134:	mov	r1, #19
   22138:	mov	r2, #8
   2213c:	mov	r3, #8
   22140:	bl	34ec8 <flatcc_verify_field@@Base>
   22144:	cmp	r0, #0
   22148:	bne	222ac <main@@Base+0xc210>
   2214c:	mov	r0, r4
   22150:	mov	r1, #20
   22154:	mov	r2, #4
   22158:	mov	r3, #4
   2215c:	bl	34ec8 <flatcc_verify_field@@Base>
   22160:	cmp	r0, #0
   22164:	bne	222ac <main@@Base+0xc210>
   22168:	mov	r0, r4
   2216c:	mov	r1, #21
   22170:	mov	r2, #4
   22174:	mov	r3, #4
   22178:	bl	34ec8 <flatcc_verify_field@@Base>
   2217c:	cmp	r0, #0
   22180:	bne	222ac <main@@Base+0xc210>
   22184:	mov	r0, r4
   22188:	mov	r1, #22
   2218c:	mov	r2, #8
   22190:	mov	r3, #8
   22194:	bl	34ec8 <flatcc_verify_field@@Base>
   22198:	cmp	r0, #0
   2219c:	bne	222ac <main@@Base+0xc210>
   221a0:	mov	r0, r4
   221a4:	mov	r1, #23
   221a8:	mov	r2, #8
   221ac:	mov	r3, #8
   221b0:	bl	34ec8 <flatcc_verify_field@@Base>
   221b4:	cmp	r0, #0
   221b8:	bne	222ac <main@@Base+0xc210>
   221bc:	mov	r0, r4
   221c0:	mov	r1, #25
   221c4:	mov	r2, #4
   221c8:	mov	r3, #4
   221cc:	bl	34ec8 <flatcc_verify_field@@Base>
   221d0:	cmp	r0, #0
   221d4:	bne	222ac <main@@Base+0xc210>
   221d8:	mov	r0, r4
   221dc:	mov	r1, #26
   221e0:	mov	r2, #4
   221e4:	mov	r3, #4
   221e8:	bl	34ec8 <flatcc_verify_field@@Base>
   221ec:	cmp	r0, #0
   221f0:	bne	222ac <main@@Base+0xc210>
   221f4:	mov	r0, r4
   221f8:	mov	r1, #27
   221fc:	mov	r2, #4
   22200:	mov	r3, #4
   22204:	bl	34ec8 <flatcc_verify_field@@Base>
   22208:	cmp	r0, #0
   2220c:	bne	222ac <main@@Base+0xc210>
   22210:	mvn	r0, #0
   22214:	mov	r1, #1
   22218:	mov	r2, #0
   2221c:	mov	r3, #1
   22220:	str	r1, [sp]
   22224:	str	r0, [sp, #4]
   22228:	mov	r0, r4
   2222c:	mov	r1, #30
   22230:	bl	35030 <flatcc_verify_vector_field@@Base>
   22234:	cmp	r0, #0
   22238:	bne	222ac <main@@Base+0xc210>
   2223c:	mvn	r5, #-536870912	; 0xe0000000
   22240:	mov	r6, #8
   22244:	mov	r0, r4
   22248:	mov	r1, #32
   2224c:	mov	r2, #0
   22250:	mov	r3, #8
   22254:	str	r6, [sp]
   22258:	str	r5, [sp, #4]
   2225c:	bl	35030 <flatcc_verify_vector_field@@Base>
   22260:	cmp	r0, #0
   22264:	bne	222ac <main@@Base+0xc210>
   22268:	mov	r0, r4
   2226c:	mov	r1, #33	; 0x21
   22270:	mov	r2, #0
   22274:	mov	r3, #8
   22278:	str	r6, [sp]
   2227c:	str	r5, [sp, #4]
   22280:	bl	35030 <flatcc_verify_vector_field@@Base>
   22284:	cmp	r0, #0
   22288:	bne	222ac <main@@Base+0xc210>
   2228c:	movw	r3, #63292	; 0xf73c
   22290:	mov	r0, r4
   22294:	mov	r1, #34	; 0x22
   22298:	mov	r2, #0
   2229c:	movt	r3, #2
   222a0:	bl	352cc <flatcc_verify_table_field@@Base>
   222a4:	cmp	r0, #0
   222a8:	beq	222b4 <main@@Base+0xc218>
   222ac:	sub	sp, fp, #16
   222b0:	pop	{r4, r5, r6, r7, fp, pc}
   222b4:	movw	r3, #63300	; 0xf744
   222b8:	mov	r0, r4
   222bc:	mov	r1, #35	; 0x23
   222c0:	mov	r2, #0
   222c4:	movt	r3, #2
   222c8:	sub	sp, fp, #16
   222cc:	pop	{r4, r5, r6, r7, fp, lr}
   222d0:	b	352cc <flatcc_verify_table_field@@Base>
   222d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   222d8:	add	fp, sp, #28
   222dc:	sub	sp, sp, #12
   222e0:	mov	r5, r1
   222e4:	sub	r1, r2, r1
   222e8:	cmp	r1, #8
   222ec:	movcs	r1, #8
   222f0:	and	r1, r1, #15
   222f4:	sub	r4, r1, #1
   222f8:	cmp	r4, #7
   222fc:	bhi	2246c <main@@Base+0xc3d0>
   22300:	str	r3, [sp, #8]
   22304:	add	r8, pc, #32
   22308:	mov	r9, #0
   2230c:	mov	ip, #0
   22310:	mov	lr, #0
   22314:	mov	sl, #0
   22318:	mov	r6, #0
   2231c:	mov	r3, #0
   22320:	mov	r1, #0
   22324:	mov	r7, #0
   22328:	ldr	pc, [r8, r4, lsl #2]
   2232c:	muleq	r2, r0, r3
   22330:	andeq	r2, r2, r8, lsl #7
   22334:	andeq	r2, r2, r0, lsl #7
   22338:	andeq	r2, r2, r8, ror r3
   2233c:	andeq	r2, r2, ip, ror #6
   22340:	andeq	r2, r2, r0, ror #6
   22344:	andeq	r2, r2, r0, asr r3
   22348:	andeq	r2, r2, ip, asr #6
   2234c:	ldrb	ip, [r5, #7]
   22350:	ldrb	r1, [r5, #6]
   22354:	mov	lr, r9
   22358:	orr	r1, ip, r1, lsl #8
   2235c:	mov	r9, r1
   22360:	ldrb	r1, [r5, #5]
   22364:	mov	sl, lr
   22368:	orr	r9, r9, r1, lsl #16
   2236c:	ldrb	r1, [r5, #4]
   22370:	mov	r6, sl
   22374:	orr	r9, r9, r1, lsl #24
   22378:	ldrb	r1, [r5, #3]
   2237c:	orr	r3, r1, r6
   22380:	ldrb	r1, [r5, #2]
   22384:	orr	r1, r3, r1, lsl #8
   22388:	ldrb	r3, [r5, #1]
   2238c:	orr	r7, r1, r3, lsl #16
   22390:	ldrb	r1, [r5]
   22394:	ldr	r3, [fp, #12]
   22398:	ldr	r8, [fp, #8]
   2239c:	movw	r4, #25957	; 0x6565
   223a0:	movt	r4, #18290	; 0x4772
   223a4:	orr	r7, r7, r1, lsl #24
   223a8:	mvn	r1, #-1845493760	; 0x92000000
   223ac:	subs	r1, r1, r9
   223b0:	sbcs	r1, r4, r7
   223b4:	bcc	223ec <main@@Base+0xc350>
   223b8:	movw	r1, #30053	; 0x7565
   223bc:	movt	r1, #17004	; 0x426c
   223c0:	teq	r7, r1
   223c4:	bne	2246c <main@@Base+0xc3d0>
   223c8:	str	r3, [sp]
   223cc:	mov	r1, r5
   223d0:	mov	r3, #4
   223d4:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   223d8:	cmp	r0, r5
   223dc:	beq	2246c <main@@Base+0xc3d0>
   223e0:	mov	r1, #0
   223e4:	mov	r2, #8
   223e8:	b	22458 <main@@Base+0xc3bc>
   223ec:	movw	r6, #25600	; 0x6400
   223f0:	bic	r1, r7, #255	; 0xff
   223f4:	movt	r6, #21093	; 0x5265
   223f8:	teq	r1, r6
   223fc:	bne	22424 <main@@Base+0xc388>
   22400:	str	r3, [sp]
   22404:	mov	r1, r5
   22408:	mov	r3, #3
   2240c:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   22410:	cmp	r0, r5
   22414:	beq	2246c <main@@Base+0xc3d0>
   22418:	mov	r1, #0
   2241c:	mov	r2, #1
   22420:	b	22458 <main@@Base+0xc3bc>
   22424:	eor	r1, r7, r4
   22428:	and	r7, r9, #-16777216	; 0xff000000
   2242c:	eor	r7, r7, #1845493760	; 0x6e000000
   22430:	orrs	r1, r7, r1
   22434:	bne	2246c <main@@Base+0xc3d0>
   22438:	str	r3, [sp]
   2243c:	mov	r1, r5
   22440:	mov	r3, #5
   22444:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   22448:	cmp	r0, r5
   2244c:	beq	2246c <main@@Base+0xc3d0>
   22450:	mov	r1, #0
   22454:	mov	r2, #2
   22458:	str	r2, [r8]
   2245c:	str	r1, [r8, #4]
   22460:	mov	r5, r0
   22464:	ldr	r2, [sp, #8]
   22468:	str	r1, [r2]
   2246c:	mov	r0, r5
   22470:	sub	sp, fp, #28
   22474:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22478:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2247c:	add	fp, sp, #28
   22480:	sub	sp, sp, #20
   22484:	sub	lr, r2, r1
   22488:	cmp	lr, #8
   2248c:	mov	r7, lr
   22490:	movcs	r7, #8
   22494:	and	r7, r7, #15
   22498:	sub	r7, r7, #1
   2249c:	cmp	r7, #7
   224a0:	bhi	228c0 <main@@Base+0xc824>
   224a4:	str	r0, [sp, #16]
   224a8:	str	r3, [sp, #12]
   224ac:	mov	r4, #0
   224b0:	mov	sl, #0
   224b4:	mov	r8, #0
   224b8:	mov	r5, #0
   224bc:	mov	r3, #0
   224c0:	mov	r6, #0
   224c4:	mov	r9, #0
   224c8:	mov	ip, #0
   224cc:	ldr	r0, [fp, #12]
   224d0:	str	r0, [sp, #8]
   224d4:	ldr	r0, [fp, #8]
   224d8:	str	r0, [sp, #4]
   224dc:	add	r0, pc, #0
   224e0:	ldr	pc, [r0, r7, lsl #2]
   224e4:	andeq	r2, r2, r8, asr #10
   224e8:	andeq	r2, r2, r0, asr #10
   224ec:	andeq	r2, r2, r8, lsr r5
   224f0:	andeq	r2, r2, r0, lsr r5
   224f4:	andeq	r2, r2, r4, lsr #10
   224f8:	andeq	r2, r2, r8, lsl r5
   224fc:	andeq	r2, r2, r8, lsl #10
   22500:	andeq	r2, r2, r4, lsl #10
   22504:	ldrb	sl, [r1, #7]
   22508:	ldrb	r0, [r1, #6]
   2250c:	mov	r8, r4
   22510:	orr	r0, sl, r0, lsl #8
   22514:	mov	r4, r0
   22518:	ldrb	r0, [r1, #5]
   2251c:	mov	r5, r8
   22520:	orr	r4, r4, r0, lsl #16
   22524:	ldrb	r0, [r1, #4]
   22528:	mov	r3, r5
   2252c:	orr	r4, r4, r0, lsl #24
   22530:	ldrb	r0, [r1, #3]
   22534:	orr	r6, r0, r3
   22538:	ldrb	r0, [r1, #2]
   2253c:	orr	r9, r6, r0, lsl #8
   22540:	ldrb	r0, [r1, #1]
   22544:	orr	ip, r9, r0, lsl #16
   22548:	ldrb	r0, [r1]
   2254c:	movw	r7, #30061	; 0x756d
   22550:	movw	r3, #30815	; 0x785f
   22554:	movt	r7, #25966	; 0x656e
   22558:	movt	r3, #26725	; 0x6865
   2255c:	orr	r6, ip, r0, lsl #24
   22560:	subs	r0, r4, r7
   22564:	sbcs	r0, r6, r3
   22568:	bcs	225d0 <main@@Base+0xc534>
   2256c:	movw	r3, #27759	; 0x6c6f
   22570:	mvn	r0, #-1912602624	; 0x8e000000
   22574:	bic	r7, r6, #255	; 0xff
   22578:	movt	r3, #17263	; 0x436f
   2257c:	subs	r0, r0, r4
   22580:	sbcs	r0, r3, r6
   22584:	bcc	2262c <main@@Base+0xc590>
   22588:	cmp	lr, #4
   2258c:	blt	228c0 <main@@Base+0xc824>
   22590:	movw	r0, #30976	; 0x7900
   22594:	movt	r0, #16750	; 0x416e
   22598:	teq	r7, r0
   2259c:	bne	228c0 <main@@Base+0xc824>
   225a0:	ldrb	r0, [r1, #3]
   225a4:	mov	r3, r1
   225a8:	cmp	r0, #46	; 0x2e
   225ac:	addeq	r3, r3, #4
   225b0:	cmp	r3, r1
   225b4:	beq	228c0 <main@@Base+0xc824>
   225b8:	mov	r1, r3
   225bc:	ldr	r0, [sp, #16]
   225c0:	ldr	r3, [sp, #12]
   225c4:	sub	sp, fp, #28
   225c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   225cc:	b	258e8 <main@@Base+0xf84c>
   225d0:	add	r0, r3, #64512	; 0xfc00
   225d4:	add	r5, r0, #17301504	; 0x1080000
   225d8:	subs	r0, r4, r7
   225dc:	sbcs	r0, r6, r5
   225e0:	bcs	22674 <main@@Base+0xc5d8>
   225e4:	cmp	lr, #9
   225e8:	blt	228c0 <main@@Base+0xc824>
   225ec:	eor	r0, r4, r7
   225f0:	eor	r3, r6, r3
   225f4:	orrs	r0, r0, r3
   225f8:	bne	228c0 <main@@Base+0xc824>
   225fc:	ldrb	r0, [r1, #8]
   22600:	mov	r3, r1
   22604:	cmp	r0, #46	; 0x2e
   22608:	addeq	r3, r3, #9
   2260c:	cmp	r3, r1
   22610:	beq	228c0 <main@@Base+0xc824>
   22614:	mov	r1, r3
   22618:	ldr	r0, [sp, #16]
   2261c:	ldr	r3, [sp, #12]
   22620:	sub	sp, fp, #28
   22624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22628:	b	26e80 <main@@Base+0x10de4>
   2262c:	movw	r0, #28416	; 0x6f00
   22630:	movt	r0, #18031	; 0x466f
   22634:	teq	r7, r0
   22638:	bne	226d0 <main@@Base+0xc634>
   2263c:	cmp	lr, #4
   22640:	blt	228c0 <main@@Base+0xc824>
   22644:	ldrb	r0, [r1, #3]
   22648:	mov	r3, r1
   2264c:	cmp	r0, #46	; 0x2e
   22650:	addeq	r3, r3, #4
   22654:	cmp	r3, r1
   22658:	beq	228c0 <main@@Base+0xc824>
   2265c:	mov	r1, r3
   22660:	ldr	r0, [sp, #16]
   22664:	ldr	r3, [sp, #12]
   22668:	sub	sp, fp, #28
   2266c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22670:	b	26c10 <main@@Base+0x10b74>
   22674:	sub	r0, r3, #4352	; 0x1100
   22678:	subs	r3, r4, r7
   2267c:	sub	r0, r0, #-100663296	; 0xfa000000
   22680:	sbcs	r0, r6, r0
   22684:	bcs	2271c <main@@Base+0xc680>
   22688:	cmp	lr, #9
   2268c:	blt	228c0 <main@@Base+0xc824>
   22690:	eor	r0, r4, r7
   22694:	eor	r3, r6, r5
   22698:	orrs	r0, r0, r3
   2269c:	bne	228c0 <main@@Base+0xc824>
   226a0:	ldrb	r0, [r1, #8]
   226a4:	mov	r3, r1
   226a8:	cmp	r0, #46	; 0x2e
   226ac:	addeq	r3, r3, #9
   226b0:	cmp	r3, r1
   226b4:	beq	228c0 <main@@Base+0xc824>
   226b8:	mov	r1, r3
   226bc:	ldr	r0, [sp, #16]
   226c0:	ldr	r3, [sp, #12]
   226c4:	sub	sp, fp, #28
   226c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   226cc:	b	27030 <main@@Base+0x10f94>
   226d0:	cmp	lr, #6
   226d4:	blt	228c0 <main@@Base+0xc824>
   226d8:	and	r0, r4, #-16777216	; 0xff000000
   226dc:	eor	r3, r6, r3
   226e0:	eor	r0, r0, #1912602624	; 0x72000000
   226e4:	orrs	r0, r0, r3
   226e8:	bne	228c0 <main@@Base+0xc824>
   226ec:	ldrb	r0, [r1, #5]
   226f0:	mov	r3, r1
   226f4:	cmp	r0, #46	; 0x2e
   226f8:	addeq	r3, r3, #6
   226fc:	cmp	r3, r1
   22700:	beq	228c0 <main@@Base+0xc824>
   22704:	mov	r1, r3
   22708:	ldr	r0, [sp, #16]
   2270c:	ldr	r3, [sp, #12]
   22710:	sub	sp, fp, #28
   22714:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22718:	b	222d4 <main@@Base+0xc238>
   2271c:	movw	r0, #29817	; 0x7479
   22720:	movw	r3, #29797	; 0x7465
   22724:	movt	r0, #28016	; 0x6d70
   22728:	movt	r3, #28271	; 0x6e6f
   2272c:	eor	r0, r4, r0
   22730:	eor	r3, r6, r3
   22734:	orrs	r0, r0, r3
   22738:	beq	2278c <main@@Base+0xc6f0>
   2273c:	movw	r3, #26463	; 0x675f
   22740:	eor	r0, r4, r7
   22744:	movt	r3, #28261	; 0x6e65
   22748:	eor	r3, r6, r3
   2274c:	orrs	r0, r0, r3
   22750:	bne	228c0 <main@@Base+0xc824>
   22754:	cmp	lr, #9
   22758:	blt	228c0 <main@@Base+0xc824>
   2275c:	ldrb	r0, [r1, #8]
   22760:	mov	r3, r1
   22764:	cmp	r0, #46	; 0x2e
   22768:	addeq	r3, r3, #9
   2276c:	cmp	r3, r1
   22770:	beq	228c0 <main@@Base+0xc824>
   22774:	mov	r1, r3
   22778:	ldr	r0, [sp, #16]
   2277c:	ldr	r3, [sp, #12]
   22780:	sub	sp, fp, #28
   22784:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22788:	b	27224 <main@@Base+0x11188>
   2278c:	add	r8, r1, #8
   22790:	sub	r5, r2, r8
   22794:	cmp	r5, #8
   22798:	mov	r0, r5
   2279c:	movcs	r0, #8
   227a0:	and	r0, r0, #15
   227a4:	sub	r4, r0, #1
   227a8:	cmp	r4, #7
   227ac:	bhi	228c0 <main@@Base+0xc824>
   227b0:	add	r0, pc, #16
   227b4:	mov	lr, #0
   227b8:	mov	r9, #0
   227bc:	mov	r3, #0
   227c0:	mov	r6, #0
   227c4:	ldr	pc, [r0, r4, lsl #2]
   227c8:	andeq	r2, r2, r0, lsl #16
   227cc:	strdeq	r2, [r2], -r8
   227d0:	strdeq	r2, [r2], -r0
   227d4:	andeq	r2, r2, r8, ror #15
   227d8:	andeq	r2, r2, r8, ror #15
   227dc:	andeq	r2, r2, r8, ror #15
   227e0:	andeq	r2, r2, r8, ror #15
   227e4:	andeq	r2, r2, r8, ror #15
   227e8:	ldrb	r9, [r1, #11]
   227ec:	mov	lr, #0
   227f0:	ldrb	r0, [r1, #10]
   227f4:	orr	r3, r9, r0, lsl #8
   227f8:	ldrb	r0, [r1, #9]
   227fc:	orr	r6, r3, r0, lsl #16
   22800:	cmp	r5, #5
   22804:	blt	228c0 <main@@Base+0xc824>
   22808:	ldrb	r0, [r8]
   2280c:	orr	r0, r6, r0, lsl #24
   22810:	eor	r0, r0, r7
   22814:	orrs	r0, lr, r0
   22818:	bne	228c0 <main@@Base+0xc824>
   2281c:	ldrb	r0, [r1, #12]
   22820:	mov	r5, r8
   22824:	cmp	r0, #46	; 0x2e
   22828:	addeq	r5, r1, #13
   2282c:	cmp	r5, r8
   22830:	beq	228c0 <main@@Base+0xc824>
   22834:	sub	r0, r2, r5
   22838:	mov	r1, #-268435456	; 0xf0000000
   2283c:	cmp	r0, #8
   22840:	movcs	r0, #8
   22844:	add	r0, r1, r0, lsl #28
   22848:	asr	r0, r0, #28
   2284c:	cmp	r0, #0
   22850:	blt	228ac <main@@Base+0xc810>
   22854:	ldrb	r0, [r5]
   22858:	cmp	r0, #120	; 0x78
   2285c:	bne	228bc <main@@Base+0xc820>
   22860:	ldr	r0, [sp, #8]
   22864:	mov	r1, r5
   22868:	mov	r3, #1
   2286c:	str	r0, [sp]
   22870:	ldr	r0, [sp, #16]
   22874:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   22878:	cmp	r0, r5
   2287c:	mov	r1, r5
   22880:	beq	228c0 <main@@Base+0xc824>
   22884:	ldr	r2, [sp, #4]
   22888:	mov	r1, #0
   2288c:	str	r1, [r2]
   22890:	str	r1, [r2, #4]
   22894:	ldr	r2, [sp, #12]
   22898:	str	r1, [r2]
   2289c:	mov	r1, r0
   228a0:	mov	r0, r1
   228a4:	sub	sp, fp, #28
   228a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   228ac:	mov	r1, r5
   228b0:	mov	r0, r1
   228b4:	sub	sp, fp, #28
   228b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   228bc:	mov	r1, r5
   228c0:	mov	r0, r1
   228c4:	sub	sp, fp, #28
   228c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   228cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   228d0:	add	fp, sp, #28
   228d4:	sub	sp, sp, #28
   228d8:	mov	r8, r2
   228dc:	sub	r2, r2, r1
   228e0:	cmp	r2, #8
   228e4:	movcs	r2, #8
   228e8:	and	r2, r2, #15
   228ec:	sub	r2, r2, #1
   228f0:	cmp	r2, #7
   228f4:	bhi	23814 <main@@Base+0xd778>
   228f8:	str	r0, [sp, #24]
   228fc:	mov	sl, #0
   22900:	mov	ip, #0
   22904:	mov	lr, #0
   22908:	mov	r9, #0
   2290c:	mov	r6, #0
   22910:	mov	r4, #0
   22914:	mov	r5, #0
   22918:	ldr	r0, [fp, #12]
   2291c:	str	r0, [sp, #20]
   22920:	ldr	r0, [fp, #8]
   22924:	str	r0, [sp, #16]
   22928:	add	r7, pc, #4
   2292c:	mov	r0, #0
   22930:	ldr	pc, [r7, r2, lsl #2]
   22934:	muleq	r2, r8, r9
   22938:	muleq	r2, r0, r9
   2293c:	andeq	r2, r2, r8, lsl #19
   22940:	andeq	r2, r2, r0, lsl #19
   22944:	andeq	r2, r2, r4, ror r9
   22948:	andeq	r2, r2, r8, ror #18
   2294c:	andeq	r2, r2, r8, asr r9
   22950:	andeq	r2, r2, r4, asr r9
   22954:	ldrb	ip, [r1, #7]
   22958:	ldrb	r2, [r1, #6]
   2295c:	mov	lr, sl
   22960:	orr	r2, ip, r2, lsl #8
   22964:	mov	sl, r2
   22968:	ldrb	r2, [r1, #5]
   2296c:	mov	r9, lr
   22970:	orr	sl, sl, r2, lsl #16
   22974:	ldrb	r2, [r1, #4]
   22978:	mov	r6, r9
   2297c:	orr	sl, sl, r2, lsl #24
   22980:	ldrb	r2, [r1, #3]
   22984:	orr	r4, r2, r6
   22988:	ldrb	r2, [r1, #2]
   2298c:	orr	r0, r4, r2, lsl #8
   22990:	ldrb	r2, [r1, #1]
   22994:	orr	r5, r0, r2, lsl #16
   22998:	ldrb	r2, [r1]
   2299c:	movw	r7, #11844	; 0x2e44
   229a0:	movw	r0, #18273	; 0x4761
   229a4:	movt	r7, #28005	; 0x6d65
   229a8:	movt	r0, #19833	; 0x4d79
   229ac:	subs	r7, r7, sl
   229b0:	orr	r2, r5, r2, lsl #24
   229b4:	sbcs	r7, r0, r2
   229b8:	bcc	22b20 <main@@Base+0xca84>
   229bc:	movw	r0, #31022	; 0x792e
   229c0:	movw	r7, #28276	; 0x6e74
   229c4:	movt	r0, #24947	; 0x6173
   229c8:	movt	r7, #18017	; 0x4661
   229cc:	eor	r0, sl, r0
   229d0:	eor	r2, r2, r7
   229d4:	orrs	r0, r0, r2
   229d8:	bne	23814 <main@@Base+0xd778>
   229dc:	add	lr, r1, #8
   229e0:	sub	r0, r8, lr
   229e4:	cmp	r0, #8
   229e8:	movcs	r0, #8
   229ec:	and	r0, r0, #15
   229f0:	sub	r6, r0, #1
   229f4:	cmp	r6, #7
   229f8:	bhi	23814 <main@@Base+0xd778>
   229fc:	str	r3, [sp, #12]
   22a00:	add	r2, pc, #32
   22a04:	mov	sl, #0
   22a08:	mov	ip, #0
   22a0c:	mov	r9, #0
   22a10:	mov	r4, #0
   22a14:	mov	r7, #0
   22a18:	mov	r5, #0
   22a1c:	mov	r0, #0
   22a20:	mov	r3, #0
   22a24:	ldr	pc, [r2, r6, lsl #2]
   22a28:	andeq	r2, r2, ip, lsl #21
   22a2c:	andeq	r2, r2, r4, lsl #21
   22a30:	andeq	r2, r2, ip, ror sl
   22a34:	andeq	r2, r2, r4, ror sl
   22a38:	andeq	r2, r2, r8, ror #20
   22a3c:	andeq	r2, r2, ip, asr sl
   22a40:	andeq	r2, r2, ip, asr #20
   22a44:	andeq	r2, r2, r8, asr #20
   22a48:	ldrb	ip, [r1, #15]
   22a4c:	ldrb	r0, [r1, #14]
   22a50:	mov	r9, sl
   22a54:	orr	r0, ip, r0, lsl #8
   22a58:	mov	sl, r0
   22a5c:	ldrb	r0, [r1, #13]
   22a60:	mov	r4, r9
   22a64:	orr	sl, sl, r0, lsl #16
   22a68:	ldrb	r0, [r1, #12]
   22a6c:	mov	r7, r4
   22a70:	orr	sl, sl, r0, lsl #24
   22a74:	ldrb	r0, [r1, #11]
   22a78:	orr	r5, r0, r7
   22a7c:	ldrb	r0, [r1, #10]
   22a80:	orr	r0, r5, r0, lsl #8
   22a84:	ldrb	r2, [r1, #9]
   22a88:	orr	r3, r0, r2, lsl #16
   22a8c:	ldrb	r2, [lr]
   22a90:	movw	r0, #29797	; 0x7465
   22a94:	movt	r0, #24931	; 0x6163
   22a98:	eor	r0, sl, r0
   22a9c:	orr	r2, r3, r2, lsl #24
   22aa0:	movw	r3, #24946	; 0x6172
   22aa4:	movt	r3, #17256	; 0x4368
   22aa8:	eor	r2, r2, r3
   22aac:	orrs	r0, r0, r2
   22ab0:	bne	23814 <main@@Base+0xd778>
   22ab4:	add	r0, r1, #16
   22ab8:	mov	r7, #-268435456	; 0xf0000000
   22abc:	sub	r2, r8, r0
   22ac0:	cmp	r2, #8
   22ac4:	mov	r3, r2
   22ac8:	movcs	r3, #8
   22acc:	add	r3, r7, r3, lsl #28
   22ad0:	asr	r3, r3, #28
   22ad4:	cmp	r3, #0
   22ad8:	cmpge	r2, #2
   22adc:	blt	23814 <main@@Base+0xd778>
   22ae0:	ldrb	r2, [r0]
   22ae4:	cmp	r2, #114	; 0x72
   22ae8:	bne	23814 <main@@Base+0xd778>
   22aec:	ldrb	r2, [r1, #17]
   22af0:	ldr	r3, [sp, #12]
   22af4:	cmp	r2, #46	; 0x2e
   22af8:	mov	r2, r0
   22afc:	addeq	r2, r1, #18
   22b00:	cmp	r2, r0
   22b04:	beq	23814 <main@@Base+0xd778>
   22b08:	ldr	r0, [sp, #24]
   22b0c:	mov	r1, r2
   22b10:	mov	r2, r8
   22b14:	sub	sp, fp, #28
   22b18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22b1c:	b	27370 <main@@Base+0x112d4>
   22b20:	movw	r7, #11855	; 0x2e4f
   22b24:	eor	r2, r2, r0
   22b28:	movt	r7, #28005	; 0x6d65
   22b2c:	eor	r7, sl, r7
   22b30:	orrs	r0, r7, r2
   22b34:	beq	22cd4 <main@@Base+0xcc38>
   22b38:	movw	r0, #11845	; 0x2e45
   22b3c:	movt	r0, #28005	; 0x6d65
   22b40:	eor	r0, sl, r0
   22b44:	orrs	r0, r0, r2
   22b48:	bne	23814 <main@@Base+0xd778>
   22b4c:	add	lr, r1, #8
   22b50:	sub	r0, r8, lr
   22b54:	cmp	r0, #8
   22b58:	movcs	r0, #8
   22b5c:	and	r0, r0, #15
   22b60:	sub	r7, r0, #1
   22b64:	cmp	r7, #7
   22b68:	bhi	23814 <main@@Base+0xd778>
   22b6c:	str	r3, [sp, #12]
   22b70:	add	sl, pc, #32
   22b74:	mov	r0, #0
   22b78:	mov	ip, #0
   22b7c:	mov	r9, #0
   22b80:	mov	r4, #0
   22b84:	mov	r6, #0
   22b88:	mov	r5, #0
   22b8c:	mov	r2, #0
   22b90:	mov	r3, #0
   22b94:	ldr	pc, [sl, r7, lsl #2]
   22b98:	strdeq	r2, [r2], -ip
   22b9c:	strdeq	r2, [r2], -r4
   22ba0:	andeq	r2, r2, ip, ror #23
   22ba4:	andeq	r2, r2, r4, ror #23
   22ba8:	ldrdeq	r2, [r2], -r8
   22bac:	andeq	r2, r2, ip, asr #23
   22bb0:			; <UNDEFINED> instruction: 0x00022bbc
   22bb4:			; <UNDEFINED> instruction: 0x00022bb8
   22bb8:	ldrb	ip, [r1, #15]
   22bbc:	ldrb	r2, [r1, #14]
   22bc0:	mov	r9, r0
   22bc4:	orr	r2, ip, r2, lsl #8
   22bc8:	mov	r0, r2
   22bcc:	ldrb	r2, [r1, #13]
   22bd0:	mov	r4, r9
   22bd4:	orr	r0, r0, r2, lsl #16
   22bd8:	ldrb	r2, [r1, #12]
   22bdc:	mov	r6, r4
   22be0:	orr	r0, r0, r2, lsl #24
   22be4:	ldrb	r2, [r1, #11]
   22be8:	orr	r5, r2, r6
   22bec:	ldrb	r2, [r1, #10]
   22bf0:	orr	r2, r5, r2, lsl #8
   22bf4:	ldrb	r3, [r1, #9]
   22bf8:	orr	r3, r2, r3, lsl #16
   22bfc:	ldrb	r2, [lr]
   22c00:	movw	r6, #11880	; 0x2e68
   22c04:	movt	r6, #27749	; 0x6c65
   22c08:	subs	r7, r0, r6
   22c0c:	orr	r2, r3, r2, lsl #24
   22c10:	movw	r3, #28016	; 0x6d70
   22c14:	movt	r3, #30817	; 0x7861
   22c18:	sbcs	r7, r2, r3
   22c1c:	bcs	230a4 <main@@Base+0xd008>
   22c20:	ldr	lr, [sp, #12]
   22c24:	subs	r7, r6, #37	; 0x25
   22c28:	sbc	r5, r3, #0
   22c2c:	subs	r7, r0, r7
   22c30:	sbcs	r7, r2, r5
   22c34:	bcs	231c0 <main@@Base+0xd124>
   22c38:	subs	r7, r6, #39	; 0x27
   22c3c:	sbc	r3, r3, #0
   22c40:	eor	r0, r0, r7
   22c44:	eor	r2, r2, r3
   22c48:	orrs	r0, r0, r2
   22c4c:	bne	23814 <main@@Base+0xd778>
   22c50:	add	r0, r1, #16
   22c54:	sub	r2, r8, r0
   22c58:	cmp	r2, #8
   22c5c:	mov	r3, r2
   22c60:	movcs	r3, #8
   22c64:	and	r7, r3, #15
   22c68:	sub	r3, r7, #2
   22c6c:	cmp	r3, #7
   22c70:	bcs	236a4 <main@@Base+0xd608>
   22c74:	ldrb	r3, [r1, #17]
   22c78:	lsl	r7, r3, #16
   22c7c:	mov	r3, #0
   22c80:	cmp	r2, #3
   22c84:	blt	23814 <main@@Base+0xd778>
   22c88:	ldrb	r2, [r0]
   22c8c:	orr	r2, r7, r2, lsl #24
   22c90:	eor	r2, r2, #7929856	; 0x790000
   22c94:	eor	r2, r2, #1845493760	; 0x6e000000
   22c98:	orrs	r2, r3, r2
   22c9c:	bne	23814 <main@@Base+0xd778>
   22ca0:	ldrb	r2, [r1, #18]
   22ca4:	cmp	r2, #46	; 0x2e
   22ca8:	mov	r2, r0
   22cac:	addeq	r2, r1, #19
   22cb0:	cmp	r2, r0
   22cb4:	beq	23814 <main@@Base+0xd778>
   22cb8:	ldr	r0, [sp, #24]
   22cbc:	mov	r1, r2
   22cc0:	mov	r2, r8
   22cc4:	mov	r3, lr
   22cc8:	sub	sp, fp, #28
   22ccc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22cd0:	b	258e8 <main@@Base+0xf84c>
   22cd4:	add	lr, r1, #8
   22cd8:	sub	r0, r8, lr
   22cdc:	cmp	r0, #8
   22ce0:	movcs	r0, #8
   22ce4:	and	r0, r0, #15
   22ce8:	sub	r7, r0, #1
   22cec:	cmp	r7, #7
   22cf0:	bhi	23814 <main@@Base+0xd778>
   22cf4:	str	r3, [sp, #12]
   22cf8:	add	r3, pc, #32
   22cfc:	mov	r2, #0
   22d00:	mov	ip, #0
   22d04:	mov	sl, #0
   22d08:	mov	r4, #0
   22d0c:	mov	r6, #0
   22d10:	mov	r5, #0
   22d14:	mov	r0, #0
   22d18:	mov	r9, #0
   22d1c:	ldr	pc, [r3, r7, lsl #2]
   22d20:	andeq	r2, r2, r4, lsl #27
   22d24:	andeq	r2, r2, ip, ror sp
   22d28:	andeq	r2, r2, r4, ror sp
   22d2c:	andeq	r2, r2, ip, ror #26
   22d30:	andeq	r2, r2, r0, ror #26
   22d34:	andeq	r2, r2, r4, asr sp
   22d38:	andeq	r2, r2, r4, asr #26
   22d3c:	andeq	r2, r2, r0, asr #26
   22d40:	ldrb	ip, [r1, #15]
   22d44:	ldrb	r0, [r1, #14]
   22d48:	mov	sl, r2
   22d4c:	orr	r0, ip, r0, lsl #8
   22d50:	mov	r2, r0
   22d54:	ldrb	r0, [r1, #13]
   22d58:	mov	r4, sl
   22d5c:	orr	r2, r2, r0, lsl #16
   22d60:	ldrb	r0, [r1, #12]
   22d64:	mov	r6, r4
   22d68:	orr	r2, r2, r0, lsl #24
   22d6c:	ldrb	r0, [r1, #11]
   22d70:	orr	r5, r0, r6
   22d74:	ldrb	r0, [r1, #10]
   22d78:	orr	r0, r5, r0, lsl #8
   22d7c:	ldrb	r3, [r1, #9]
   22d80:	orr	r9, r0, r3, lsl #16
   22d84:	movw	r0, #28005	; 0x6d65
   22d88:	movw	r3, #25970	; 0x6572
   22d8c:	movt	r0, #20065	; 0x4e61
   22d90:	movt	r3, #29800	; 0x7468
   22d94:	eor	r0, r2, r0
   22d98:	ldrb	r2, [lr]
   22d9c:	orr	r2, r9, r2, lsl #24
   22da0:	eor	r2, r2, r3
   22da4:	orrs	r0, r0, r2
   22da8:	bne	23814 <main@@Base+0xd778>
   22dac:	add	lr, r1, #16
   22db0:	sub	r0, r8, lr
   22db4:	cmp	r0, #8
   22db8:	movcs	r0, #8
   22dbc:	and	r0, r0, #15
   22dc0:	sub	r7, r0, #1
   22dc4:	cmp	r7, #7
   22dc8:	bhi	23814 <main@@Base+0xd778>
   22dcc:	add	r2, pc, #32
   22dd0:	mov	sl, #0
   22dd4:	mov	ip, #0
   22dd8:	mov	r9, #0
   22ddc:	mov	r4, #0
   22de0:	mov	r6, #0
   22de4:	mov	r5, #0
   22de8:	mov	r0, #0
   22dec:	mov	r3, #0
   22df0:	ldr	pc, [r2, r7, lsl #2]
   22df4:	andeq	r2, r2, r8, asr lr
   22df8:	andeq	r2, r2, r0, asr lr
   22dfc:	andeq	r2, r2, r8, asr #28
   22e00:	andeq	r2, r2, r0, asr #28
   22e04:	andeq	r2, r2, r4, lsr lr
   22e08:	andeq	r2, r2, r8, lsr #28
   22e0c:	andeq	r2, r2, r8, lsl lr
   22e10:	andeq	r2, r2, r4, lsl lr
   22e14:	ldrb	ip, [r1, #23]
   22e18:	ldrb	r0, [r1, #22]
   22e1c:	mov	r9, sl
   22e20:	orr	r0, ip, r0, lsl #8
   22e24:	mov	sl, r0
   22e28:	ldrb	r0, [r1, #21]
   22e2c:	mov	r4, r9
   22e30:	orr	sl, sl, r0, lsl #16
   22e34:	ldrb	r0, [r1, #20]
   22e38:	mov	r6, r4
   22e3c:	orr	sl, sl, r0, lsl #24
   22e40:	ldrb	r0, [r1, #19]
   22e44:	orr	r5, r0, r6
   22e48:	ldrb	r0, [r1, #18]
   22e4c:	orr	r0, r5, r0, lsl #8
   22e50:	ldrb	r2, [r1, #17]
   22e54:	orr	r3, r0, r2, lsl #16
   22e58:	ldrb	r2, [lr]
   22e5c:	movw	r0, #18034	; 0x4672
   22e60:	movt	r0, #25902	; 0x652e
   22e64:	eor	r0, sl, r0
   22e68:	orr	r2, r3, r2, lsl #24
   22e6c:	movw	r3, #24931	; 0x6163
   22e70:	movt	r3, #21360	; 0x5370
   22e74:	eor	r2, r2, r3
   22e78:	orrs	r0, r0, r2
   22e7c:	bne	23814 <main@@Base+0xd778>
   22e80:	add	lr, r1, #24
   22e84:	sub	r0, r8, lr
   22e88:	cmp	r0, #8
   22e8c:	movcs	r0, #8
   22e90:	and	r0, r0, #15
   22e94:	sub	r7, r0, #1
   22e98:	cmp	r7, #7
   22e9c:	bhi	23814 <main@@Base+0xd778>
   22ea0:	add	r2, pc, #32
   22ea4:	mov	sl, #0
   22ea8:	mov	ip, #0
   22eac:	mov	r9, #0
   22eb0:	mov	r4, #0
   22eb4:	mov	r6, #0
   22eb8:	mov	r5, #0
   22ebc:	mov	r0, #0
   22ec0:	mov	r3, #0
   22ec4:	ldr	pc, [r2, r7, lsl #2]
   22ec8:	andeq	r2, r2, ip, lsr #30
   22ecc:	andeq	r2, r2, r4, lsr #30
   22ed0:	andeq	r2, r2, ip, lsl pc
   22ed4:	andeq	r2, r2, r4, lsl pc
   22ed8:	andeq	r2, r2, r8, lsl #30
   22edc:	strdeq	r2, [r2], -ip
   22ee0:	andeq	r2, r2, ip, ror #29
   22ee4:	andeq	r2, r2, r8, ror #29
   22ee8:	ldrb	ip, [r1, #31]
   22eec:	ldrb	r0, [r1, #30]
   22ef0:	mov	r9, sl
   22ef4:	orr	r0, ip, r0, lsl #8
   22ef8:	mov	sl, r0
   22efc:	ldrb	r0, [r1, #29]
   22f00:	mov	r4, r9
   22f04:	orr	sl, sl, r0, lsl #16
   22f08:	ldrb	r0, [r1, #28]
   22f0c:	mov	r6, r4
   22f10:	orr	sl, sl, r0, lsl #24
   22f14:	ldrb	r0, [r1, #27]
   22f18:	orr	r5, r0, r6
   22f1c:	ldrb	r0, [r1, #26]
   22f20:	orr	r0, r5, r0, lsl #8
   22f24:	ldrb	r2, [r1, #25]
   22f28:	orr	r3, r0, r2, lsl #16
   22f2c:	ldrb	r2, [lr]
   22f30:	movw	r0, #30052	; 0x7564
   22f34:	movt	r0, #25452	; 0x636c
   22f38:	eor	r0, sl, r0
   22f3c:	orr	r2, r3, r2, lsl #24
   22f40:	movw	r3, #18798	; 0x496e
   22f44:	movt	r3, #28525	; 0x6f6d
   22f48:	eor	r2, r2, r3
   22f4c:	orrs	r0, r0, r2
   22f50:	bne	23814 <main@@Base+0xd778>
   22f54:	add	r0, r1, #32
   22f58:	mov	r7, #-268435456	; 0xf0000000
   22f5c:	sub	r2, r8, r0
   22f60:	cmp	r2, #8
   22f64:	mov	r3, r2
   22f68:	movcs	r3, #8
   22f6c:	add	r3, r7, r3, lsl #28
   22f70:	asr	r3, r3, #28
   22f74:	cmp	r3, #0
   22f78:	cmpge	r2, #2
   22f7c:	blt	23814 <main@@Base+0xd778>
   22f80:	ldrb	r2, [r0]
   22f84:	cmp	r2, #101	; 0x65
   22f88:	bne	23814 <main@@Base+0xd778>
   22f8c:	ldrb	r2, [r1, #33]	; 0x21
   22f90:	ldr	r9, [sp, #12]
   22f94:	mov	r7, r0
   22f98:	cmp	r2, #46	; 0x2e
   22f9c:	addeq	r7, r1, #34	; 0x22
   22fa0:	cmp	r7, r0
   22fa4:	beq	23814 <main@@Base+0xd778>
   22fa8:	sub	r0, r8, r7
   22fac:	cmp	r0, #8
   22fb0:	movcs	r0, #8
   22fb4:	and	r0, r0, #15
   22fb8:	sub	r2, r0, #1
   22fbc:	cmp	r2, #7
   22fc0:	bhi	237f0 <main@@Base+0xd754>
   22fc4:	add	r5, pc, #32
   22fc8:	mov	sl, #0
   22fcc:	mov	ip, #0
   22fd0:	mov	lr, #0
   22fd4:	mov	r1, #0
   22fd8:	mov	r3, #0
   22fdc:	mov	r6, #0
   22fe0:	mov	r4, #0
   22fe4:	mov	r0, #0
   22fe8:	ldr	pc, [r5, r2, lsl #2]
   22fec:	andeq	r3, r2, r0, asr r0
   22ff0:	andeq	r3, r2, r8, asr #32
   22ff4:	andeq	r3, r2, r0, asr #32
   22ff8:	andeq	r3, r2, r8, lsr r0
   22ffc:	andeq	r3, r2, ip, lsr #32
   23000:	andeq	r3, r2, r0, lsr #32
   23004:	andeq	r3, r2, r0, lsl r0
   23008:	andeq	r3, r2, ip
   2300c:	ldrb	ip, [r7, #7]
   23010:	ldrb	r0, [r7, #6]
   23014:	mov	lr, sl
   23018:	orr	r0, ip, r0, lsl #8
   2301c:	mov	sl, r0
   23020:	ldrb	r0, [r7, #5]
   23024:	mov	r1, lr
   23028:	orr	sl, sl, r0, lsl #16
   2302c:	ldrb	r0, [r7, #4]
   23030:	mov	r3, r1
   23034:	orr	sl, sl, r0, lsl #24
   23038:	ldrb	r0, [r7, #3]
   2303c:	orr	r6, r0, r3
   23040:	ldrb	r0, [r7, #2]
   23044:	orr	r4, r6, r0, lsl #8
   23048:	ldrb	r0, [r7, #1]
   2304c:	orr	r0, r4, r0, lsl #16
   23050:	ldrb	r1, [r7]
   23054:	ldr	r4, [sp, #24]
   23058:	orr	r6, r0, r1, lsl #24
   2305c:	movw	r1, #28416	; 0x6f00
   23060:	bic	r0, r6, #255	; 0xff
   23064:	movt	r1, #18031	; 0x466f
   23068:	teq	r0, r1
   2306c:	bne	236cc <main@@Base+0xd630>
   23070:	ldr	r0, [sp, #20]
   23074:	mov	r1, r7
   23078:	mov	r2, r8
   2307c:	mov	r3, #3
   23080:	str	r0, [sp]
   23084:	mov	r0, r4
   23088:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   2308c:	cmp	r0, r7
   23090:	beq	236cc <main@@Base+0xd630>
   23094:	mov	r1, r0
   23098:	mov	r3, #0
   2309c:	mov	r2, #17
   230a0:	b	23764 <main@@Base+0xd6c8>
   230a4:	eor	r5, r0, r6
   230a8:	eor	r7, r2, r3
   230ac:	orrs	r5, r5, r7
   230b0:	bne	232b8 <main@@Base+0xd21c>
   230b4:	add	ip, r1, #16
   230b8:	sub	r2, r8, ip
   230bc:	cmp	r2, #8
   230c0:	mov	r0, r2
   230c4:	movcs	r0, #8
   230c8:	and	r0, r0, #15
   230cc:	sub	r4, r0, #1
   230d0:	cmp	r4, #7
   230d4:	bhi	23814 <main@@Base+0xd778>
   230d8:	add	r6, pc, #28
   230dc:	mov	r9, #0
   230e0:	mov	lr, #0
   230e4:	mov	sl, #0
   230e8:	mov	r3, #0
   230ec:	mov	r5, #0
   230f0:	mov	r0, #0
   230f4:	mov	r7, #0
   230f8:	ldr	pc, [r6, r4, lsl #2]
   230fc:	andeq	r3, r2, r8, asr r1
   23100:	andeq	r3, r2, r0, asr r1
   23104:	andeq	r3, r2, r8, asr #2
   23108:	andeq	r3, r2, r0, asr #2
   2310c:	andeq	r3, r2, r4, lsr r1
   23110:	andeq	r3, r2, r4, lsr #2
   23114:	andeq	r3, r2, ip, lsl r1
   23118:	andeq	r3, r2, ip, lsl r1
   2311c:	ldrb	r0, [r1, #22]
   23120:	lsl	lr, r0, #8
   23124:	ldrb	r0, [r1, #21]
   23128:	mov	sl, r9
   2312c:	orr	r0, lr, r0, lsl #16
   23130:	mov	r9, r0
   23134:	ldrb	r0, [r1, #20]
   23138:	mov	r3, sl
   2313c:	orr	r9, r9, r0, lsl #24
   23140:	ldrb	r0, [r1, #19]
   23144:	orr	r5, r0, r3
   23148:	ldrb	r0, [r1, #18]
   2314c:	orr	r0, r5, r0, lsl #8
   23150:	ldrb	r3, [r1, #17]
   23154:	orr	r7, r0, r3, lsl #16
   23158:	cmp	r2, #8
   2315c:	blt	23814 <main@@Base+0xd778>
   23160:	ldrb	r0, [ip]
   23164:	movw	r2, #24421	; 0x5f65
   23168:	movw	r3, #27904	; 0x6d00
   2316c:	movt	r2, #25959	; 0x6567
   23170:	movt	r3, #28277	; 0x6e75
   23174:	add	r2, r2, #1114112	; 0x110000
   23178:	eor	r3, r9, r3
   2317c:	orr	r0, r7, r0, lsl #24
   23180:	eor	r0, r0, r2
   23184:	orrs	r0, r3, r0
   23188:	bne	23814 <main@@Base+0xd778>
   2318c:	ldrb	r0, [r1, #23]
   23190:	ldr	r3, [sp, #12]
   23194:	mov	r2, ip
   23198:	cmp	r0, #46	; 0x2e
   2319c:	addeq	r2, r1, #24
   231a0:	cmp	r2, ip
   231a4:	beq	23814 <main@@Base+0xd778>
   231a8:	ldr	r0, [sp, #24]
   231ac:	mov	r1, r2
   231b0:	mov	r2, r8
   231b4:	sub	sp, fp, #28
   231b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   231bc:	b	26e80 <main@@Base+0x10de4>
   231c0:	movw	r7, #11846	; 0x2e46
   231c4:	eor	r2, r2, r3
   231c8:	movt	r7, #27749	; 0x6c65
   231cc:	eor	r7, r0, r7
   231d0:	orrs	r3, r7, r2
   231d4:	beq	23518 <main@@Base+0xd47c>
   231d8:	movw	r3, #11843	; 0x2e43
   231dc:	movt	r3, #27749	; 0x6c65
   231e0:	eor	r0, r0, r3
   231e4:	orrs	r0, r0, r2
   231e8:	bne	23814 <main@@Base+0xd778>
   231ec:	add	r0, r1, #16
   231f0:	sub	r2, r8, r0
   231f4:	cmp	r2, #8
   231f8:	mov	r3, r2
   231fc:	movcs	r3, #8
   23200:	and	r3, r3, #15
   23204:	sub	r6, r3, #1
   23208:	cmp	r6, #7
   2320c:	bhi	23814 <main@@Base+0xd778>
   23210:	add	r3, pc, #16
   23214:	mov	ip, #0
   23218:	mov	r7, #0
   2321c:	mov	r4, #0
   23220:	mov	r5, #0
   23224:	ldr	pc, [r3, r6, lsl #2]
   23228:	andeq	r3, r2, r0, ror #4
   2322c:	andeq	r3, r2, r8, asr r2
   23230:	andeq	r3, r2, r0, asr r2
   23234:	andeq	r3, r2, r8, asr #4
   23238:	andeq	r3, r2, r8, asr #4
   2323c:	andeq	r3, r2, r8, asr #4
   23240:	andeq	r3, r2, r8, asr #4
   23244:	andeq	r3, r2, r8, asr #4
   23248:	ldrb	r7, [r1, #19]
   2324c:	mov	ip, #0
   23250:	ldrb	r3, [r1, #18]
   23254:	orr	r4, r7, r3, lsl #8
   23258:	ldrb	r3, [r1, #17]
   2325c:	orr	r5, r4, r3, lsl #16
   23260:	cmp	r2, #5
   23264:	blt	23814 <main@@Base+0xd778>
   23268:	ldrb	r2, [r0]
   2326c:	movw	r3, #28530	; 0x6f72
   23270:	movt	r3, #28524	; 0x6f6c
   23274:	orr	r2, r5, r2, lsl #24
   23278:	eor	r2, r2, r3
   2327c:	orrs	r2, ip, r2
   23280:	bne	23814 <main@@Base+0xd778>
   23284:	ldrb	r2, [r1, #20]
   23288:	cmp	r2, #46	; 0x2e
   2328c:	mov	r2, r0
   23290:	addeq	r2, r1, #21
   23294:	cmp	r2, r0
   23298:	beq	23814 <main@@Base+0xd778>
   2329c:	ldr	r0, [sp, #24]
   232a0:	mov	r1, r2
   232a4:	mov	r2, r8
   232a8:	mov	r3, lr
   232ac:	sub	sp, fp, #28
   232b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   232b4:	b	222d4 <main@@Base+0xc238>
   232b8:	add	r5, r6, #6
   232bc:	subs	r4, r0, r5
   232c0:	sbcs	r2, r2, r3
   232c4:	bcs	233e8 <main@@Base+0xd34c>
   232c8:	add	r2, r6, #1
   232cc:	eor	r0, r0, r2
   232d0:	orrs	r0, r0, r7
   232d4:	bne	23814 <main@@Base+0xd778>
   232d8:	add	ip, r1, #16
   232dc:	sub	r2, r8, ip
   232e0:	cmp	r2, #8
   232e4:	mov	r0, r2
   232e8:	movcs	r0, #8
   232ec:	and	r0, r0, #15
   232f0:	sub	r4, r0, #1
   232f4:	cmp	r4, #7
   232f8:	bhi	23814 <main@@Base+0xd778>
   232fc:	add	r6, pc, #28
   23300:	mov	r9, #0
   23304:	mov	lr, #0
   23308:	mov	sl, #0
   2330c:	mov	r3, #0
   23310:	mov	r5, #0
   23314:	mov	r7, #0
   23318:	mov	r0, #0
   2331c:	ldr	pc, [r6, r4, lsl #2]
   23320:	andeq	r3, r2, ip, ror r3
   23324:	andeq	r3, r2, r4, ror r3
   23328:	andeq	r3, r2, ip, ror #6
   2332c:	andeq	r3, r2, r4, ror #6
   23330:	andeq	r3, r2, r8, asr r3
   23334:	andeq	r3, r2, r8, asr #6
   23338:	andeq	r3, r2, r0, asr #6
   2333c:	andeq	r3, r2, r0, asr #6
   23340:	ldrb	r0, [r1, #22]
   23344:	lsl	lr, r0, #8
   23348:	ldrb	r0, [r1, #21]
   2334c:	mov	sl, r9
   23350:	orr	r0, lr, r0, lsl #16
   23354:	mov	r9, r0
   23358:	ldrb	r0, [r1, #20]
   2335c:	mov	r3, sl
   23360:	orr	r9, r9, r0, lsl #24
   23364:	ldrb	r0, [r1, #19]
   23368:	orr	r5, r0, r3
   2336c:	ldrb	r0, [r1, #18]
   23370:	orr	r7, r5, r0, lsl #8
   23374:	ldrb	r0, [r1, #17]
   23378:	orr	r0, r7, r0, lsl #16
   2337c:	cmp	r2, #8
   23380:	blt	23814 <main@@Base+0xd778>
   23384:	ldrb	r3, [ip]
   23388:	movw	r2, #24421	; 0x5f65
   2338c:	movt	r2, #25959	; 0x6567
   23390:	add	r2, r2, #851968	; 0xd0000
   23394:	add	r2, r2, #150994944	; 0x9000000
   23398:	orr	r0, r0, r3, lsl #24
   2339c:	movw	r3, #27904	; 0x6d00
   233a0:	movt	r3, #28277	; 0x6e75
   233a4:	eor	r0, r0, r2
   233a8:	eor	r3, r9, r3
   233ac:	orrs	r0, r3, r0
   233b0:	bne	23814 <main@@Base+0xd778>
   233b4:	ldrb	r0, [r1, #23]
   233b8:	ldr	r3, [sp, #12]
   233bc:	mov	r2, ip
   233c0:	cmp	r0, #46	; 0x2e
   233c4:	addeq	r2, r1, #24
   233c8:	cmp	r2, ip
   233cc:	beq	23814 <main@@Base+0xd778>
   233d0:	ldr	r0, [sp, #24]
   233d4:	mov	r1, r2
   233d8:	mov	r2, r8
   233dc:	sub	sp, fp, #28
   233e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   233e4:	b	27030 <main@@Base+0x10f94>
   233e8:	eor	r0, r0, r5
   233ec:	orrs	r0, r0, r7
   233f0:	bne	23814 <main@@Base+0xd778>
   233f4:	add	lr, r1, #16
   233f8:	sub	r2, r8, lr
   233fc:	cmp	r2, #8
   23400:	mov	r0, r2
   23404:	movcs	r0, #8
   23408:	and	r0, r0, #15
   2340c:	sub	r7, r0, #1
   23410:	cmp	r7, #7
   23414:	bhi	23814 <main@@Base+0xd778>
   23418:	add	r3, pc, #36	; 0x24
   2341c:	mov	r0, #0
   23420:	mov	sl, #0
   23424:	mov	r9, #0
   23428:	mov	r4, #0
   2342c:	mov	r6, #0
   23430:	mov	r5, #0
   23434:	mov	ip, #0
   23438:	str	r0, [sp, #8]
   2343c:	mov	r0, #0
   23440:	ldr	pc, [r3, r7, lsl #2]
   23444:			; <UNDEFINED> instruction: 0x000234b0
   23448:	andeq	r3, r2, r8, lsr #9
   2344c:	andeq	r3, r2, r0, lsr #9
   23450:	muleq	r2, r8, r4
   23454:	andeq	r3, r2, ip, lsl #9
   23458:	andeq	r3, r2, r0, lsl #9
   2345c:	andeq	r3, r2, ip, ror #8
   23460:	andeq	r3, r2, r4, ror #8
   23464:	ldrb	r0, [r1, #23]
   23468:	str	r0, [sp, #8]
   2346c:	ldrb	r0, [r1, #22]
   23470:	ldr	r3, [sp, #8]
   23474:	mov	r9, sl
   23478:	orr	r0, r3, r0, lsl #8
   2347c:	mov	sl, r0
   23480:	ldrb	r0, [r1, #21]
   23484:	mov	r4, r9
   23488:	orr	sl, sl, r0, lsl #16
   2348c:	ldrb	r0, [r1, #20]
   23490:	mov	r6, r4
   23494:	orr	sl, sl, r0, lsl #24
   23498:	ldrb	r0, [r1, #19]
   2349c:	orr	r5, r0, r6
   234a0:	ldrb	r0, [r1, #18]
   234a4:	orr	ip, r5, r0, lsl #8
   234a8:	ldrb	r0, [r1, #17]
   234ac:	orr	r0, ip, r0, lsl #16
   234b0:	ldrb	r3, [lr]
   234b4:	movw	ip, #27904	; 0x6d00
   234b8:	cmp	r2, #8
   234bc:	movt	ip, #28277	; 0x6e75
   234c0:	orr	r6, r0, r3, lsl #24
   234c4:	blt	2359c <main@@Base+0xd500>
   234c8:	movw	r2, #24421	; 0x5f65
   234cc:	bic	r0, sl, #255	; 0xff
   234d0:	movt	r2, #25959	; 0x6567
   234d4:	eor	r0, r0, ip
   234d8:	eor	r2, r6, r2
   234dc:	orrs	r0, r0, r2
   234e0:	bne	2359c <main@@Base+0xd500>
   234e4:	ldrb	r0, [r1, #23]
   234e8:	mov	r2, lr
   234ec:	cmp	r0, #46	; 0x2e
   234f0:	addeq	r2, r1, #24
   234f4:	cmp	r2, lr
   234f8:	beq	2359c <main@@Base+0xd500>
   234fc:	ldr	r0, [sp, #24]
   23500:	ldr	r3, [sp, #12]
   23504:	mov	r1, r2
   23508:	mov	r2, r8
   2350c:	sub	sp, fp, #28
   23510:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23514:	b	27224 <main@@Base+0x11188>
   23518:	add	r0, r1, #16
   2351c:	sub	r2, r8, r0
   23520:	cmp	r2, #8
   23524:	mov	r3, r2
   23528:	movcs	r3, #8
   2352c:	and	r7, r3, #15
   23530:	sub	r3, r7, #2
   23534:	cmp	r3, #7
   23538:	bcs	236b8 <main@@Base+0xd61c>
   2353c:	ldrb	r3, [r1, #17]
   23540:	lsl	r7, r3, #16
   23544:	mov	r3, #0
   23548:	cmp	r2, #3
   2354c:	blt	23814 <main@@Base+0xd778>
   23550:	ldrb	r2, [r0]
   23554:	orr	r2, r7, r2, lsl #24
   23558:	eor	r2, r2, #7274496	; 0x6f0000
   2355c:	eor	r2, r2, #1862270976	; 0x6f000000
   23560:	orrs	r2, r3, r2
   23564:	bne	23814 <main@@Base+0xd778>
   23568:	ldrb	r2, [r1, #18]
   2356c:	cmp	r2, #46	; 0x2e
   23570:	mov	r2, r0
   23574:	addeq	r2, r1, #19
   23578:	cmp	r2, r0
   2357c:	beq	23814 <main@@Base+0xd778>
   23580:	ldr	r0, [sp, #24]
   23584:	mov	r1, r2
   23588:	mov	r2, r8
   2358c:	mov	r3, lr
   23590:	sub	sp, fp, #28
   23594:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23598:	b	26c10 <main@@Base+0x10b74>
   2359c:	movw	r0, #31077	; 0x7965
   235a0:	movw	r2, #25965	; 0x656d
   235a4:	movt	r0, #28788	; 0x7074
   235a8:	movt	r2, #28532	; 0x6f74
   235ac:	eor	r0, sl, r0
   235b0:	eor	r2, r6, r2
   235b4:	orrs	r0, r0, r2
   235b8:	bne	23814 <main@@Base+0xd778>
   235bc:	add	r0, r1, #24
   235c0:	sub	r2, r8, r0
   235c4:	cmp	r2, #8
   235c8:	mov	r3, r2
   235cc:	movcs	r3, #8
   235d0:	and	r7, r3, #15
   235d4:	sub	r3, r7, #3
   235d8:	cmp	r3, #6
   235dc:	bcs	23780 <main@@Base+0xd6e4>
   235e0:	ldrb	r3, [r1, #26]
   235e4:	ldr	r4, [sp, #12]
   235e8:	lsl	r7, r3, #8
   235ec:	mov	r3, #0
   235f0:	ldrb	r6, [r1, #25]
   235f4:	orr	r7, r7, r6, lsl #16
   235f8:	cmp	r2, #4
   235fc:	blt	23814 <main@@Base+0xd778>
   23600:	ldrb	r2, [r0]
   23604:	orr	r2, r7, r2, lsl #24
   23608:	eor	r2, r2, ip
   2360c:	orrs	r2, r3, r2
   23610:	bne	23814 <main@@Base+0xd778>
   23614:	ldrb	r2, [r1, #27]
   23618:	mov	r6, r0
   2361c:	cmp	r2, #46	; 0x2e
   23620:	addeq	r6, r1, #28
   23624:	cmp	r6, r0
   23628:	beq	23814 <main@@Base+0xd778>
   2362c:	sub	r0, r8, r6
   23630:	mov	r1, #-268435456	; 0xf0000000
   23634:	cmp	r0, #8
   23638:	movcs	r0, #8
   2363c:	add	r0, r1, r0, lsl #28
   23640:	asr	r0, r0, #28
   23644:	cmp	r0, #0
   23648:	blt	237c0 <main@@Base+0xd724>
   2364c:	ldrb	r0, [r6]
   23650:	cmp	r0, #120	; 0x78
   23654:	bne	237e0 <main@@Base+0xd744>
   23658:	ldr	r0, [sp, #20]
   2365c:	mov	r1, r6
   23660:	mov	r2, r8
   23664:	mov	r3, #1
   23668:	str	r0, [sp]
   2366c:	ldr	r0, [sp, #24]
   23670:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   23674:	cmp	r0, r6
   23678:	mov	r1, r6
   2367c:	beq	23814 <main@@Base+0xd778>
   23680:	ldr	r2, [sp, #16]
   23684:	mov	r1, #0
   23688:	str	r1, [r2]
   2368c:	str	r1, [r2, #4]
   23690:	str	r1, [r4]
   23694:	mov	r1, r0
   23698:	mov	r0, r1
   2369c:	sub	sp, fp, #28
   236a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   236a4:	cmp	r7, #1
   236a8:	mov	r3, #0
   236ac:	mov	r7, #0
   236b0:	beq	22c80 <main@@Base+0xcbe4>
   236b4:	b	23814 <main@@Base+0xd778>
   236b8:	cmp	r7, #1
   236bc:	mov	r3, #0
   236c0:	mov	r7, #0
   236c4:	beq	23548 <main@@Base+0xd4ac>
   236c8:	b	23814 <main@@Base+0xd778>
   236cc:	movw	r0, #25942	; 0x6556
   236d0:	movw	r1, #25452	; 0x636c
   236d4:	movt	r0, #30052	; 0x7564
   236d8:	movt	r1, #18798	; 0x496e
   236dc:	eor	r0, sl, r0
   236e0:	eor	r1, r6, r1
   236e4:	orrs	r0, r0, r1
   236e8:	bne	237a0 <main@@Base+0xd704>
   236ec:	add	r6, r7, #8
   236f0:	sub	r0, r8, r6
   236f4:	cmp	r0, #8
   236f8:	movcs	r0, #8
   236fc:	and	r1, r0, #15
   23700:	sub	r0, r1, #2
   23704:	cmp	r0, #7
   23708:	bcs	23800 <main@@Base+0xd764>
   2370c:	ldrb	r0, [r7, #9]
   23710:	lsl	r1, r0, #16
   23714:	mov	r0, #0
   23718:	ldrb	r2, [r6]
   2371c:	orr	r1, r1, r2, lsl #24
   23720:	eor	r1, r1, #23855104	; 0x16c0000
   23724:	eor	r1, r1, #1610612736	; 0x60000000
   23728:	orrs	r0, r0, r1
   2372c:	bne	237d0 <main@@Base+0xd734>
   23730:	ldr	r0, [sp, #20]
   23734:	mov	r1, r6
   23738:	mov	r2, r8
   2373c:	mov	r3, #2
   23740:	str	r0, [sp]
   23744:	mov	r0, r4
   23748:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   2374c:	cmp	r0, r6
   23750:	mov	r1, r7
   23754:	beq	23814 <main@@Base+0xd778>
   23758:	mov	r2, #0
   2375c:	mov	r3, #0
   23760:	mov	r1, r0
   23764:	ldr	r0, [sp, #16]
   23768:	strd	r2, [r0]
   2376c:	mov	r0, #0
   23770:	str	r0, [r9]
   23774:	mov	r0, r1
   23778:	sub	sp, fp, #28
   2377c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23780:	ldr	r4, [sp, #12]
   23784:	mov	r3, #0
   23788:	cmp	r7, #1
   2378c:	beq	237b0 <main@@Base+0xd714>
   23790:	cmp	r7, #2
   23794:	mov	r7, #0
   23798:	beq	235f0 <main@@Base+0xd554>
   2379c:	b	23814 <main@@Base+0xd778>
   237a0:	mov	r1, r7
   237a4:	mov	r0, r1
   237a8:	sub	sp, fp, #28
   237ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   237b0:	mov	r7, #0
   237b4:	cmp	r2, #4
   237b8:	bge	23600 <main@@Base+0xd564>
   237bc:	b	23814 <main@@Base+0xd778>
   237c0:	mov	r1, r6
   237c4:	mov	r0, r1
   237c8:	sub	sp, fp, #28
   237cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   237d0:	mov	r1, r7
   237d4:	mov	r0, r1
   237d8:	sub	sp, fp, #28
   237dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   237e0:	mov	r1, r6
   237e4:	mov	r0, r1
   237e8:	sub	sp, fp, #28
   237ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   237f0:	mov	r1, r7
   237f4:	mov	r0, r1
   237f8:	sub	sp, fp, #28
   237fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23800:	cmp	r1, #1
   23804:	mov	r0, #0
   23808:	mov	r1, #0
   2380c:	beq	23718 <main@@Base+0xd67c>
   23810:	mov	r1, r7
   23814:	mov	r0, r1
   23818:	sub	sp, fp, #28
   2381c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23820:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23824:	add	fp, sp, #28
   23828:	sub	sp, sp, #44	; 0x2c
   2382c:	mov	r6, r2
   23830:	ldr	r2, [fp, #8]
   23834:	mov	r5, r0
   23838:	mov	r0, #0
   2383c:	mov	sl, r3
   23840:	cmp	r1, r6
   23844:	strb	r0, [r2]
   23848:	beq	2386c <main@@Base+0xd7d0>
   2384c:	ldrb	r0, [r1]
   23850:	cmp	r0, #46	; 0x2e
   23854:	beq	23894 <main@@Base+0xd7f8>
   23858:	cmp	r0, #34	; 0x22
   2385c:	bne	23a50 <main@@Base+0xd9b4>
   23860:	mov	r0, #0
   23864:	add	r1, r1, #1
   23868:	str	r0, [r5, #12]
   2386c:	ldr	r0, [r5, #12]
   23870:	cmp	r0, #0
   23874:	beq	238b4 <main@@Base+0xd818>
   23878:	mov	r7, r1
   2387c:	cmp	r7, r6
   23880:	bne	238f8 <main@@Base+0xd85c>
   23884:	mov	r4, r6
   23888:	mov	r0, r4
   2388c:	sub	sp, fp, #28
   23890:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23894:	mov	r0, r5
   23898:	mov	r2, r6
   2389c:	mov	r3, #5
   238a0:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   238a4:	mov	r1, r0
   238a8:	ldr	r0, [r5, #12]
   238ac:	cmp	r0, #0
   238b0:	bne	23878 <main@@Base+0xd7dc>
   238b4:	sub	r0, r6, r1
   238b8:	cmp	r0, #2
   238bc:	blt	238e0 <main@@Base+0xd844>
   238c0:	ldrb	r0, [r1]
   238c4:	cmp	r0, #32
   238c8:	bhi	23878 <main@@Base+0xd7dc>
   238cc:	bne	238e0 <main@@Base+0xd844>
   238d0:	mov	r7, r1
   238d4:	ldrb	r0, [r7, #1]!
   238d8:	cmp	r0, #32
   238dc:	bhi	238f0 <main@@Base+0xd854>
   238e0:	mov	r0, r5
   238e4:	mov	r2, r6
   238e8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   238ec:	mov	r7, r0
   238f0:	cmp	r7, r6
   238f4:	beq	23884 <main@@Base+0xd7e8>
   238f8:	add	r0, sl, #4
   238fc:	mov	r2, #0
   23900:	add	r8, sp, #32
   23904:	add	r9, sp, #28
   23908:	str	sl, [sp, #16]
   2390c:	str	r0, [sp, #12]
   23910:	ldr	r4, [sl]
   23914:	mov	sl, r0
   23918:	str	r2, [sp, #20]
   2391c:	add	r0, sp, #24
   23920:	mov	r1, r7
   23924:	mov	r2, r6
   23928:	mov	r3, r9
   2392c:	str	r8, [sp]
   23930:	str	r0, [sp, #4]
   23934:	mov	r0, r5
   23938:	blx	r4
   2393c:	cmp	r0, r6
   23940:	beq	23a1c <main@@Base+0xd980>
   23944:	mov	r4, r0
   23948:	cmp	r0, r7
   2394c:	bne	23960 <main@@Base+0xd8c4>
   23950:	ldr	r4, [sl], #4
   23954:	cmp	r4, #0
   23958:	bne	2391c <main@@Base+0xd880>
   2395c:	b	23a2c <main@@Base+0xd990>
   23960:	ldr	r2, [sp, #28]
   23964:	ldr	r0, [sp, #32]
   23968:	ldr	r1, [sp, #36]	; 0x24
   2396c:	cmp	r2, #0
   23970:	beq	23998 <main@@Base+0xd8fc>
   23974:	ldr	sl, [sp, #16]
   23978:	subs	r2, r0, #129	; 0x81
   2397c:	sbcs	r1, r1, #0
   23980:	bcc	239cc <main@@Base+0xd930>
   23984:	mov	r0, r5
   23988:	mov	r1, r4
   2398c:	mov	r2, r6
   23990:	mov	r3, #8
   23994:	b	239b8 <main@@Base+0xd91c>
   23998:	ldr	sl, [sp, #16]
   2399c:	subs	r2, r0, #128	; 0x80
   239a0:	sbcs	r1, r1, #0
   239a4:	bcc	239e0 <main@@Base+0xd944>
   239a8:	mov	r0, r5
   239ac:	mov	r1, r4
   239b0:	mov	r2, r6
   239b4:	mov	r3, #7
   239b8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   239bc:	ldr	r2, [sp, #20]
   239c0:	cmp	r0, r6
   239c4:	bne	239f0 <main@@Base+0xd954>
   239c8:	b	23a68 <main@@Base+0xd9cc>
   239cc:	rsb	r2, r0, #0
   239d0:	mov	r0, r4
   239d4:	cmp	r0, r6
   239d8:	bne	239f0 <main@@Base+0xd954>
   239dc:	b	23a68 <main@@Base+0xd9cc>
   239e0:	mov	r2, r0
   239e4:	mov	r0, r4
   239e8:	cmp	r0, r6
   239ec:	beq	23a68 <main@@Base+0xd9cc>
   239f0:	ldr	r0, [fp, #8]
   239f4:	mov	r7, r4
   239f8:	mov	r1, r0
   239fc:	ldrb	r0, [r0]
   23a00:	add	r0, r0, r2
   23a04:	strb	r0, [r1]
   23a08:	ldr	r0, [sp, #24]
   23a0c:	cmp	r0, #0
   23a10:	ldr	r0, [sp, #12]
   23a14:	bne	23910 <main@@Base+0xd874>
   23a18:	b	23888 <main@@Base+0xd7ec>
   23a1c:	mov	r4, r6
   23a20:	mov	r0, r4
   23a24:	sub	sp, fp, #28
   23a28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23a2c:	mov	r0, r5
   23a30:	mov	r1, r7
   23a34:	mov	r2, r6
   23a38:	mov	r3, #23
   23a3c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   23a40:	mov	r4, r0
   23a44:	mov	r0, r4
   23a48:	sub	sp, fp, #28
   23a4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23a50:	mov	r0, #1
   23a54:	str	r0, [r5, #12]
   23a58:	ldr	r0, [r5, #12]
   23a5c:	cmp	r0, #0
   23a60:	bne	23878 <main@@Base+0xd7dc>
   23a64:	b	238b4 <main@@Base+0xd818>
   23a68:	mov	r4, r6
   23a6c:	mov	r0, r4
   23a70:	sub	sp, fp, #28
   23a74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23a78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23a7c:	add	fp, sp, #28
   23a80:	sub	sp, sp, #44	; 0x2c
   23a84:	mov	r6, r2
   23a88:	ldr	r2, [fp, #8]
   23a8c:	mov	r5, r0
   23a90:	mov	r0, #0
   23a94:	mov	r8, r3
   23a98:	cmp	r1, r6
   23a9c:	strb	r0, [r2]
   23aa0:	beq	23ac4 <main@@Base+0xda28>
   23aa4:	ldrb	r0, [r1]
   23aa8:	cmp	r0, #46	; 0x2e
   23aac:	beq	23aec <main@@Base+0xda50>
   23ab0:	cmp	r0, #34	; 0x22
   23ab4:	bne	23c94 <main@@Base+0xdbf8>
   23ab8:	mov	r0, #0
   23abc:	add	r1, r1, #1
   23ac0:	str	r0, [r5, #12]
   23ac4:	ldr	r0, [r5, #12]
   23ac8:	cmp	r0, #0
   23acc:	beq	23b0c <main@@Base+0xda70>
   23ad0:	mov	r7, r1
   23ad4:	cmp	r7, r6
   23ad8:	bne	23b50 <main@@Base+0xdab4>
   23adc:	mov	r4, r6
   23ae0:	mov	r0, r4
   23ae4:	sub	sp, fp, #28
   23ae8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23aec:	mov	r0, r5
   23af0:	mov	r2, r6
   23af4:	mov	r3, #5
   23af8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   23afc:	mov	r1, r0
   23b00:	ldr	r0, [r5, #12]
   23b04:	cmp	r0, #0
   23b08:	bne	23ad0 <main@@Base+0xda34>
   23b0c:	sub	r0, r6, r1
   23b10:	cmp	r0, #2
   23b14:	blt	23b38 <main@@Base+0xda9c>
   23b18:	ldrb	r0, [r1]
   23b1c:	cmp	r0, #32
   23b20:	bhi	23ad0 <main@@Base+0xda34>
   23b24:	bne	23b38 <main@@Base+0xda9c>
   23b28:	mov	r7, r1
   23b2c:	ldrb	r0, [r7, #1]!
   23b30:	cmp	r0, #32
   23b34:	bhi	23b48 <main@@Base+0xdaac>
   23b38:	mov	r0, r5
   23b3c:	mov	r2, r6
   23b40:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   23b44:	mov	r7, r0
   23b48:	cmp	r7, r6
   23b4c:	beq	23adc <main@@Base+0xda40>
   23b50:	add	r0, r8, #4
   23b54:	mov	r1, #0
   23b58:	add	sl, sp, #32
   23b5c:	add	r9, sp, #28
   23b60:	str	r8, [sp, #16]
   23b64:	str	r1, [sp, #20]
   23b68:	str	r0, [sp, #12]
   23b6c:	ldr	r4, [r8]
   23b70:	mov	r8, r0
   23b74:	add	r0, sp, #24
   23b78:	mov	r1, r7
   23b7c:	mov	r2, r6
   23b80:	mov	r3, r9
   23b84:	str	sl, [sp]
   23b88:	str	r0, [sp, #4]
   23b8c:	mov	r0, r5
   23b90:	blx	r4
   23b94:	cmp	r0, r6
   23b98:	beq	23c60 <main@@Base+0xdbc4>
   23b9c:	mov	r4, r0
   23ba0:	cmp	r0, r7
   23ba4:	bne	23bb8 <main@@Base+0xdb1c>
   23ba8:	ldr	r4, [r8], #4
   23bac:	cmp	r4, #0
   23bb0:	bne	23b74 <main@@Base+0xdad8>
   23bb4:	b	23c70 <main@@Base+0xdbd4>
   23bb8:	ldr	r0, [sp, #28]
   23bbc:	cmp	r0, #0
   23bc0:	beq	23be8 <main@@Base+0xdb4c>
   23bc4:	mov	r0, r5
   23bc8:	mov	r1, r4
   23bcc:	mov	r2, r6
   23bd0:	mov	r3, #8
   23bd4:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   23bd8:	ldr	r8, [sp, #16]
   23bdc:	cmp	r0, r6
   23be0:	bne	23c30 <main@@Base+0xdb94>
   23be4:	b	23cac <main@@Base+0xdc10>
   23be8:	ldr	r0, [sp, #32]
   23bec:	ldr	r1, [sp, #36]	; 0x24
   23bf0:	ldr	r8, [sp, #16]
   23bf4:	subs	r2, r0, #256	; 0x100
   23bf8:	sbcs	r1, r1, #0
   23bfc:	bcc	23c20 <main@@Base+0xdb84>
   23c00:	mov	r0, r5
   23c04:	mov	r1, r4
   23c08:	mov	r2, r6
   23c0c:	mov	r3, #7
   23c10:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   23c14:	cmp	r0, r6
   23c18:	bne	23c30 <main@@Base+0xdb94>
   23c1c:	b	23cac <main@@Base+0xdc10>
   23c20:	str	r0, [sp, #20]
   23c24:	mov	r0, r4
   23c28:	cmp	r0, r6
   23c2c:	beq	23cac <main@@Base+0xdc10>
   23c30:	ldr	r0, [fp, #8]
   23c34:	ldr	r2, [sp, #20]
   23c38:	mov	r7, r4
   23c3c:	mov	r1, r0
   23c40:	ldrb	r0, [r0]
   23c44:	add	r0, r0, r2
   23c48:	strb	r0, [r1]
   23c4c:	ldr	r0, [sp, #24]
   23c50:	cmp	r0, #0
   23c54:	ldr	r0, [sp, #12]
   23c58:	bne	23b6c <main@@Base+0xdad0>
   23c5c:	b	23ae0 <main@@Base+0xda44>
   23c60:	mov	r4, r6
   23c64:	mov	r0, r4
   23c68:	sub	sp, fp, #28
   23c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23c70:	mov	r0, r5
   23c74:	mov	r1, r7
   23c78:	mov	r2, r6
   23c7c:	mov	r3, #23
   23c80:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   23c84:	mov	r4, r0
   23c88:	mov	r0, r4
   23c8c:	sub	sp, fp, #28
   23c90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23c94:	mov	r0, #1
   23c98:	str	r0, [r5, #12]
   23c9c:	ldr	r0, [r5, #12]
   23ca0:	cmp	r0, #0
   23ca4:	bne	23ad0 <main@@Base+0xda34>
   23ca8:	b	23b0c <main@@Base+0xda70>
   23cac:	mov	r4, r6
   23cb0:	mov	r0, r4
   23cb4:	sub	sp, fp, #28
   23cb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23cbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23cc0:	add	fp, sp, #28
   23cc4:	sub	sp, sp, #44	; 0x2c
   23cc8:	mov	r6, r2
   23ccc:	ldr	r2, [fp, #8]
   23cd0:	mov	r5, r0
   23cd4:	mov	r0, #0
   23cd8:	mov	sl, r3
   23cdc:	cmp	r1, r6
   23ce0:	strh	r0, [r2]
   23ce4:	beq	23d08 <main@@Base+0xdc6c>
   23ce8:	ldrb	r0, [r1]
   23cec:	cmp	r0, #46	; 0x2e
   23cf0:	beq	23d30 <main@@Base+0xdc94>
   23cf4:	cmp	r0, #34	; 0x22
   23cf8:	bne	23ef0 <main@@Base+0xde54>
   23cfc:	mov	r0, #0
   23d00:	add	r1, r1, #1
   23d04:	str	r0, [r5, #12]
   23d08:	ldr	r0, [r5, #12]
   23d0c:	cmp	r0, #0
   23d10:	beq	23d50 <main@@Base+0xdcb4>
   23d14:	mov	r7, r1
   23d18:	cmp	r7, r6
   23d1c:	bne	23d94 <main@@Base+0xdcf8>
   23d20:	mov	r4, r6
   23d24:	mov	r0, r4
   23d28:	sub	sp, fp, #28
   23d2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23d30:	mov	r0, r5
   23d34:	mov	r2, r6
   23d38:	mov	r3, #5
   23d3c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   23d40:	mov	r1, r0
   23d44:	ldr	r0, [r5, #12]
   23d48:	cmp	r0, #0
   23d4c:	bne	23d14 <main@@Base+0xdc78>
   23d50:	sub	r0, r6, r1
   23d54:	cmp	r0, #2
   23d58:	blt	23d7c <main@@Base+0xdce0>
   23d5c:	ldrb	r0, [r1]
   23d60:	cmp	r0, #32
   23d64:	bhi	23d14 <main@@Base+0xdc78>
   23d68:	bne	23d7c <main@@Base+0xdce0>
   23d6c:	mov	r7, r1
   23d70:	ldrb	r0, [r7, #1]!
   23d74:	cmp	r0, #32
   23d78:	bhi	23d8c <main@@Base+0xdcf0>
   23d7c:	mov	r0, r5
   23d80:	mov	r2, r6
   23d84:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   23d88:	mov	r7, r0
   23d8c:	cmp	r7, r6
   23d90:	beq	23d20 <main@@Base+0xdc84>
   23d94:	add	r0, sl, #4
   23d98:	mov	r2, #0
   23d9c:	add	r8, sp, #32
   23da0:	add	r9, sp, #28
   23da4:	str	sl, [sp, #16]
   23da8:	str	r0, [sp, #12]
   23dac:	ldr	r4, [sl]
   23db0:	mov	sl, r0
   23db4:	str	r2, [sp, #20]
   23db8:	add	r0, sp, #24
   23dbc:	mov	r1, r7
   23dc0:	mov	r2, r6
   23dc4:	mov	r3, r9
   23dc8:	str	r8, [sp]
   23dcc:	str	r0, [sp, #4]
   23dd0:	mov	r0, r5
   23dd4:	blx	r4
   23dd8:	cmp	r0, r6
   23ddc:	beq	23ebc <main@@Base+0xde20>
   23de0:	mov	r4, r0
   23de4:	cmp	r0, r7
   23de8:	bne	23dfc <main@@Base+0xdd60>
   23dec:	ldr	r4, [sl], #4
   23df0:	cmp	r4, #0
   23df4:	bne	23db8 <main@@Base+0xdd1c>
   23df8:	b	23ecc <main@@Base+0xde30>
   23dfc:	ldr	r2, [sp, #28]
   23e00:	ldr	r0, [sp, #32]
   23e04:	ldr	r1, [sp, #36]	; 0x24
   23e08:	cmp	r2, #0
   23e0c:	beq	23e38 <main@@Base+0xdd9c>
   23e10:	ldr	sl, [sp, #16]
   23e14:	movw	r2, #32769	; 0x8001
   23e18:	subs	r2, r0, r2
   23e1c:	sbcs	r1, r1, #0
   23e20:	bcc	23e6c <main@@Base+0xddd0>
   23e24:	mov	r0, r5
   23e28:	mov	r1, r4
   23e2c:	mov	r2, r6
   23e30:	mov	r3, #8
   23e34:	b	23e58 <main@@Base+0xddbc>
   23e38:	ldr	sl, [sp, #16]
   23e3c:	subs	r2, r0, #32768	; 0x8000
   23e40:	sbcs	r1, r1, #0
   23e44:	bcc	23e80 <main@@Base+0xdde4>
   23e48:	mov	r0, r5
   23e4c:	mov	r1, r4
   23e50:	mov	r2, r6
   23e54:	mov	r3, #7
   23e58:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   23e5c:	ldr	r2, [sp, #20]
   23e60:	cmp	r0, r6
   23e64:	bne	23e90 <main@@Base+0xddf4>
   23e68:	b	23f08 <main@@Base+0xde6c>
   23e6c:	rsb	r2, r0, #0
   23e70:	mov	r0, r4
   23e74:	cmp	r0, r6
   23e78:	bne	23e90 <main@@Base+0xddf4>
   23e7c:	b	23f08 <main@@Base+0xde6c>
   23e80:	mov	r2, r0
   23e84:	mov	r0, r4
   23e88:	cmp	r0, r6
   23e8c:	beq	23f08 <main@@Base+0xde6c>
   23e90:	ldr	r0, [fp, #8]
   23e94:	mov	r7, r4
   23e98:	mov	r1, r0
   23e9c:	ldrh	r0, [r0]
   23ea0:	add	r0, r0, r2
   23ea4:	strh	r0, [r1]
   23ea8:	ldr	r0, [sp, #24]
   23eac:	cmp	r0, #0
   23eb0:	ldr	r0, [sp, #12]
   23eb4:	bne	23dac <main@@Base+0xdd10>
   23eb8:	b	23d24 <main@@Base+0xdc88>
   23ebc:	mov	r4, r6
   23ec0:	mov	r0, r4
   23ec4:	sub	sp, fp, #28
   23ec8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23ecc:	mov	r0, r5
   23ed0:	mov	r1, r7
   23ed4:	mov	r2, r6
   23ed8:	mov	r3, #23
   23edc:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   23ee0:	mov	r4, r0
   23ee4:	mov	r0, r4
   23ee8:	sub	sp, fp, #28
   23eec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23ef0:	mov	r0, #1
   23ef4:	str	r0, [r5, #12]
   23ef8:	ldr	r0, [r5, #12]
   23efc:	cmp	r0, #0
   23f00:	bne	23d14 <main@@Base+0xdc78>
   23f04:	b	23d50 <main@@Base+0xdcb4>
   23f08:	mov	r4, r6
   23f0c:	mov	r0, r4
   23f10:	sub	sp, fp, #28
   23f14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23f18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23f1c:	add	fp, sp, #28
   23f20:	sub	sp, sp, #28
   23f24:	mov	r7, r2
   23f28:	mov	r5, r0
   23f2c:	cmp	r1, r2
   23f30:	beq	23fa8 <main@@Base+0xdf0c>
   23f34:	ldrb	r0, [r1]
   23f38:	cmp	r0, #123	; 0x7b
   23f3c:	bne	23fa8 <main@@Base+0xdf0c>
   23f40:	add	r2, r1, #1
   23f44:	mov	sl, r3
   23f48:	sub	r0, r7, r2
   23f4c:	cmp	r0, #2
   23f50:	blt	23fd8 <main@@Base+0xdf3c>
   23f54:	ldrb	r0, [r2]
   23f58:	cmp	r0, #32
   23f5c:	bls	23fc8 <main@@Base+0xdf2c>
   23f60:	mov	r1, r2
   23f64:	cmp	r1, r7
   23f68:	mov	r2, r7
   23f6c:	beq	23ff8 <main@@Base+0xdf5c>
   23f70:	ldrb	r0, [r1]
   23f74:	cmp	r0, #125	; 0x7d
   23f78:	bne	23fc0 <main@@Base+0xdf24>
   23f7c:	add	r2, r1, #1
   23f80:	sub	r0, r7, r2
   23f84:	cmp	r0, #2
   23f88:	blt	24704 <main@@Base+0xe668>
   23f8c:	ldrb	r0, [r2]
   23f90:	cmp	r0, #32
   23f94:	bls	246f4 <main@@Base+0xe658>
   23f98:	mov	r1, r2
   23f9c:	mov	r0, r1
   23fa0:	sub	sp, fp, #28
   23fa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23fa8:	mov	r0, r5
   23fac:	mov	r2, r7
   23fb0:	mov	r3, #21
   23fb4:	sub	sp, fp, #28
   23fb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23fbc:	b	36da0 <flatcc_json_parser_set_error@@Base>
   23fc0:	mov	r2, r1
   23fc4:	b	23ff8 <main@@Base+0xdf5c>
   23fc8:	bne	23fd8 <main@@Base+0xdf3c>
   23fcc:	ldrb	r0, [r1, #2]!
   23fd0:	cmp	r0, #32
   23fd4:	bhi	23fec <main@@Base+0xdf50>
   23fd8:	mov	r1, r2
   23fdc:	mov	r0, r5
   23fe0:	mov	r2, r7
   23fe4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   23fe8:	mov	r1, r0
   23fec:	cmp	r1, r7
   23ff0:	mov	r2, r7
   23ff4:	bne	23f70 <main@@Base+0xded4>
   23ff8:	movw	r0, #388	; 0x184
   23ffc:	mov	r8, #-268435456	; 0xf0000000
   24000:	mov	r9, #1627389952	; 0x61000000
   24004:	movt	r0, #6
   24008:	add	r0, r0, #60	; 0x3c
   2400c:	str	r0, [sp, #4]
   24010:	cmp	r2, r7
   24014:	mov	r4, r7
   24018:	beq	24064 <main@@Base+0xdfc8>
   2401c:	ldrb	r0, [r2]
   24020:	cmp	r0, #46	; 0x2e
   24024:	beq	2403c <main@@Base+0xdfa0>
   24028:	cmp	r0, #34	; 0x22
   2402c:	bne	24058 <main@@Base+0xdfbc>
   24030:	mov	r0, #0
   24034:	add	r4, r2, #1
   24038:	b	24060 <main@@Base+0xdfc4>
   2403c:	mov	r1, r2
   24040:	mov	r0, r5
   24044:	mov	r2, r7
   24048:	mov	r3, #5
   2404c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   24050:	mov	r4, r0
   24054:	b	24064 <main@@Base+0xdfc8>
   24058:	mov	r0, #1
   2405c:	mov	r4, r2
   24060:	str	r0, [r5, #12]
   24064:	sub	r0, r7, r4
   24068:	mov	r1, #8
   2406c:	cmp	r0, #8
   24070:	movcc	r1, r0
   24074:	add	r1, r8, r1, lsl #28
   24078:	asr	r1, r1, #28
   2407c:	cmp	r1, #0
   24080:	blt	24568 <main@@Base+0xe4cc>
   24084:	ldrb	r1, [r4]
   24088:	teq	r9, r1, lsl #24
   2408c:	beq	24100 <main@@Base+0xe064>
   24090:	lsl	r1, r1, #24
   24094:	teq	r1, #1644167168	; 0x62000000
   24098:	bne	24568 <main@@Base+0xe4cc>
   2409c:	cmp	r0, #2
   240a0:	mov	r6, r4
   240a4:	blt	242bc <main@@Base+0xe220>
   240a8:	mov	r1, r4
   240ac:	ldr	r2, [r5, #12]
   240b0:	ldrb	r0, [r1, #1]!
   240b4:	cmp	r2, #0
   240b8:	beq	24164 <main@@Base+0xe0c8>
   240bc:	cmp	r0, #33	; 0x21
   240c0:	bcc	240d0 <main@@Base+0xe034>
   240c4:	cmp	r0, #58	; 0x3a
   240c8:	mov	r6, r4
   240cc:	bne	242bc <main@@Base+0xe220>
   240d0:	mov	r0, #0
   240d4:	str	r0, [r5, #12]
   240d8:	sub	r0, r7, r1
   240dc:	cmp	r0, #2
   240e0:	blt	241b8 <main@@Base+0xe11c>
   240e4:	ldrb	r0, [r1]
   240e8:	cmp	r0, #32
   240ec:	bls	241a4 <main@@Base+0xe108>
   240f0:	mov	r6, r1
   240f4:	cmp	r6, r7
   240f8:	bne	241d0 <main@@Base+0xe134>
   240fc:	b	24208 <main@@Base+0xe16c>
   24100:	cmp	r0, #2
   24104:	mov	r6, r4
   24108:	blt	244d8 <main@@Base+0xe43c>
   2410c:	mov	r1, r4
   24110:	ldr	r2, [r5, #12]
   24114:	ldrb	r0, [r1, #1]!
   24118:	cmp	r2, #0
   2411c:	beq	24184 <main@@Base+0xe0e8>
   24120:	cmp	r0, #33	; 0x21
   24124:	bcc	24134 <main@@Base+0xe098>
   24128:	cmp	r0, #58	; 0x3a
   2412c:	mov	r6, r4
   24130:	bne	244d8 <main@@Base+0xe43c>
   24134:	mov	r0, #0
   24138:	str	r0, [r5, #12]
   2413c:	sub	r0, r7, r1
   24140:	cmp	r0, #2
   24144:	blt	24234 <main@@Base+0xe198>
   24148:	ldrb	r0, [r1]
   2414c:	cmp	r0, #32
   24150:	bls	24220 <main@@Base+0xe184>
   24154:	mov	r6, r1
   24158:	cmp	r6, r7
   2415c:	bne	2424c <main@@Base+0xe1b0>
   24160:	b	24284 <main@@Base+0xe1e8>
   24164:	cmp	r0, #34	; 0x22
   24168:	mov	r6, r4
   2416c:	bne	242bc <main@@Base+0xe220>
   24170:	add	r1, r4, #2
   24174:	sub	r0, r7, r1
   24178:	cmp	r0, #2
   2417c:	bge	240e4 <main@@Base+0xe048>
   24180:	b	241b8 <main@@Base+0xe11c>
   24184:	cmp	r0, #34	; 0x22
   24188:	mov	r6, r4
   2418c:	bne	244d8 <main@@Base+0xe43c>
   24190:	add	r1, r4, #2
   24194:	sub	r0, r7, r1
   24198:	cmp	r0, #2
   2419c:	bge	24148 <main@@Base+0xe0ac>
   241a0:	b	24234 <main@@Base+0xe198>
   241a4:	bne	241b8 <main@@Base+0xe11c>
   241a8:	mov	r6, r1
   241ac:	ldrb	r0, [r6, #1]!
   241b0:	cmp	r0, #32
   241b4:	bhi	241c8 <main@@Base+0xe12c>
   241b8:	mov	r0, r5
   241bc:	mov	r2, r7
   241c0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   241c4:	mov	r6, r0
   241c8:	cmp	r6, r7
   241cc:	beq	24208 <main@@Base+0xe16c>
   241d0:	ldrb	r0, [r6]
   241d4:	cmp	r0, #58	; 0x3a
   241d8:	bne	24208 <main@@Base+0xe16c>
   241dc:	add	r1, r6, #1
   241e0:	sub	r0, r7, r1
   241e4:	cmp	r0, #2
   241e8:	blt	242ac <main@@Base+0xe210>
   241ec:	ldrb	r0, [r1]
   241f0:	cmp	r0, #32
   241f4:	bls	2429c <main@@Base+0xe200>
   241f8:	mov	r6, r1
   241fc:	cmp	r4, r6
   24200:	bne	242c4 <main@@Base+0xe228>
   24204:	b	24568 <main@@Base+0xe4cc>
   24208:	mov	r0, r5
   2420c:	mov	r1, r6
   24210:	mov	r2, r7
   24214:	mov	r3, #4
   24218:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2421c:	b	242b8 <main@@Base+0xe21c>
   24220:	bne	24234 <main@@Base+0xe198>
   24224:	mov	r6, r1
   24228:	ldrb	r0, [r6, #1]!
   2422c:	cmp	r0, #32
   24230:	bhi	24244 <main@@Base+0xe1a8>
   24234:	mov	r0, r5
   24238:	mov	r2, r7
   2423c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   24240:	mov	r6, r0
   24244:	cmp	r6, r7
   24248:	beq	24284 <main@@Base+0xe1e8>
   2424c:	ldrb	r0, [r6]
   24250:	cmp	r0, #58	; 0x3a
   24254:	bne	24284 <main@@Base+0xe1e8>
   24258:	add	r1, r6, #1
   2425c:	sub	r0, r7, r1
   24260:	cmp	r0, #2
   24264:	blt	244c8 <main@@Base+0xe42c>
   24268:	ldrb	r0, [r1]
   2426c:	cmp	r0, #32
   24270:	bls	244b8 <main@@Base+0xe41c>
   24274:	mov	r6, r1
   24278:	cmp	r4, r6
   2427c:	bne	244e0 <main@@Base+0xe444>
   24280:	b	24568 <main@@Base+0xe4cc>
   24284:	mov	r0, r5
   24288:	mov	r1, r6
   2428c:	mov	r2, r7
   24290:	mov	r3, #4
   24294:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   24298:	b	244d4 <main@@Base+0xe438>
   2429c:	bne	242ac <main@@Base+0xe210>
   242a0:	ldrb	r0, [r6, #2]!
   242a4:	cmp	r0, #32
   242a8:	bhi	242bc <main@@Base+0xe220>
   242ac:	mov	r0, r5
   242b0:	mov	r2, r7
   242b4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   242b8:	mov	r6, r0
   242bc:	cmp	r4, r6
   242c0:	beq	24568 <main@@Base+0xe4cc>
   242c4:	mov	r4, #0
   242c8:	cmp	r6, r7
   242cc:	str	r4, [sp, #20]
   242d0:	str	r4, [sp, #16]
   242d4:	strb	r4, [sp, #10]
   242d8:	str	r4, [sp, #12]
   242dc:	beq	24348 <main@@Base+0xe2ac>
   242e0:	add	r0, sp, #16
   242e4:	mov	r1, r6
   242e8:	mov	r2, r7
   242ec:	add	r3, sp, #12
   242f0:	str	r0, [sp]
   242f4:	mov	r0, r5
   242f8:	bl	392f4 <flatcc_json_parser_integer@@Base>
   242fc:	cmp	r0, r6
   24300:	beq	2440c <main@@Base+0xe370>
   24304:	ldr	r3, [sp, #12]
   24308:	mov	r1, r0
   2430c:	ldr	r0, [sp, #16]
   24310:	ldr	r2, [sp, #20]
   24314:	cmp	r3, #0
   24318:	beq	2441c <main@@Base+0xe380>
   2431c:	subs	r3, r0, #129	; 0x81
   24320:	sbcs	r2, r2, #0
   24324:	bcc	24448 <main@@Base+0xe3ac>
   24328:	mov	r0, r5
   2432c:	mov	r2, r7
   24330:	mov	r3, #8
   24334:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   24338:	mov	r1, r0
   2433c:	cmp	r6, r1
   24340:	bne	24354 <main@@Base+0xe2b8>
   24344:	b	2446c <main@@Base+0xe3d0>
   24348:	mov	r1, r7
   2434c:	cmp	r6, r1
   24350:	beq	2446c <main@@Base+0xe3d0>
   24354:	strb	r4, [sl, #2]
   24358:	sub	r0, r7, r1
   2435c:	cmp	r0, #2
   24360:	blt	24588 <main@@Base+0xe4ec>
   24364:	ldrb	r0, [r1]
   24368:	cmp	r0, #32
   2436c:	bls	243c0 <main@@Base+0xe324>
   24370:	mov	r2, r1
   24374:	cmp	r2, r7
   24378:	beq	24678 <main@@Base+0xe5dc>
   2437c:	ldrb	r0, [r2]
   24380:	cmp	r0, #44	; 0x2c
   24384:	bne	24688 <main@@Base+0xe5ec>
   24388:	add	r1, r2, #1
   2438c:	sub	r0, r7, r1
   24390:	cmp	r0, #2
   24394:	blt	243f0 <main@@Base+0xe354>
   24398:	ldrb	r0, [r1]
   2439c:	cmp	r0, #32
   243a0:	bls	243e0 <main@@Base+0xe344>
   243a4:	mov	r2, r1
   243a8:	cmp	r2, r7
   243ac:	beq	246bc <main@@Base+0xe620>
   243b0:	ldrb	r0, [r2]
   243b4:	cmp	r0, #125	; 0x7d
   243b8:	bne	24010 <main@@Base+0xdf74>
   243bc:	b	246c8 <main@@Base+0xe62c>
   243c0:	bne	24588 <main@@Base+0xe4ec>
   243c4:	mov	r2, r1
   243c8:	ldrb	r0, [r2, #1]!
   243cc:	cmp	r0, #32
   243d0:	bls	24588 <main@@Base+0xe4ec>
   243d4:	cmp	r2, r7
   243d8:	bne	2437c <main@@Base+0xe2e0>
   243dc:	b	24678 <main@@Base+0xe5dc>
   243e0:	bne	243f0 <main@@Base+0xe354>
   243e4:	ldrb	r0, [r2, #2]!
   243e8:	cmp	r0, #32
   243ec:	bhi	24400 <main@@Base+0xe364>
   243f0:	mov	r0, r5
   243f4:	mov	r2, r7
   243f8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   243fc:	mov	r2, r0
   24400:	cmp	r2, r7
   24404:	bne	243b0 <main@@Base+0xe314>
   24408:	b	246bc <main@@Base+0xe620>
   2440c:	mov	r1, r6
   24410:	cmp	r6, r1
   24414:	bne	24354 <main@@Base+0xe2b8>
   24418:	b	2446c <main@@Base+0xe3d0>
   2441c:	subs	r3, r0, #128	; 0x80
   24420:	sbcs	r2, r2, #0
   24424:	bcc	2445c <main@@Base+0xe3c0>
   24428:	mov	r0, r5
   2442c:	mov	r2, r7
   24430:	mov	r3, #7
   24434:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   24438:	mov	r1, r0
   2443c:	cmp	r6, r1
   24440:	bne	24354 <main@@Base+0xe2b8>
   24444:	b	2446c <main@@Base+0xe3d0>
   24448:	rsb	r4, r0, #0
   2444c:	strb	r4, [sp, #10]
   24450:	cmp	r6, r1
   24454:	bne	24354 <main@@Base+0xe2b8>
   24458:	b	2446c <main@@Base+0xe3d0>
   2445c:	mov	r4, r0
   24460:	strb	r4, [sp, #10]
   24464:	cmp	r6, r1
   24468:	bne	24354 <main@@Base+0xe2b8>
   2446c:	add	r0, sp, #10
   24470:	mov	r1, r6
   24474:	mov	r2, r7
   24478:	str	r0, [sp]
   2447c:	movw	r0, #388	; 0x184
   24480:	movt	r0, #6
   24484:	add	r3, r0, #48	; 0x30
   24488:	mov	r0, r5
   2448c:	bl	23820 <main@@Base+0xd784>
   24490:	mov	r1, r0
   24494:	cmp	r0, r6
   24498:	cmpne	r1, r7
   2449c:	beq	24668 <main@@Base+0xe5cc>
   244a0:	ldrb	r4, [sp, #10]
   244a4:	strb	r4, [sl, #2]
   244a8:	sub	r0, r7, r1
   244ac:	cmp	r0, #2
   244b0:	blt	24588 <main@@Base+0xe4ec>
   244b4:	b	24364 <main@@Base+0xe2c8>
   244b8:	bne	244c8 <main@@Base+0xe42c>
   244bc:	ldrb	r0, [r6, #2]!
   244c0:	cmp	r0, #32
   244c4:	bhi	244d8 <main@@Base+0xe43c>
   244c8:	mov	r0, r5
   244cc:	mov	r2, r7
   244d0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   244d4:	mov	r6, r0
   244d8:	cmp	r4, r6
   244dc:	beq	24568 <main@@Base+0xe4cc>
   244e0:	mov	r4, #0
   244e4:	cmp	r6, r7
   244e8:	str	r4, [sp, #20]
   244ec:	str	r4, [sp, #16]
   244f0:	strh	r4, [sp, #10]
   244f4:	str	r4, [sp, #12]
   244f8:	beq	245a4 <main@@Base+0xe508>
   244fc:	add	r0, sp, #16
   24500:	mov	r1, r6
   24504:	mov	r2, r7
   24508:	add	r3, sp, #12
   2450c:	str	r0, [sp]
   24510:	mov	r0, r5
   24514:	bl	392f4 <flatcc_json_parser_integer@@Base>
   24518:	cmp	r0, r6
   2451c:	beq	245c4 <main@@Base+0xe528>
   24520:	ldr	r3, [sp, #12]
   24524:	mov	r1, r0
   24528:	ldr	r0, [sp, #16]
   2452c:	ldr	r2, [sp, #20]
   24530:	cmp	r3, #0
   24534:	beq	24614 <main@@Base+0xe578>
   24538:	movw	r3, #32769	; 0x8001
   2453c:	subs	r3, r0, r3
   24540:	sbcs	r2, r2, #0
   24544:	bcc	24640 <main@@Base+0xe5a4>
   24548:	mov	r0, r5
   2454c:	mov	r2, r7
   24550:	mov	r3, #8
   24554:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   24558:	mov	r1, r0
   2455c:	cmp	r6, r1
   24560:	bne	245b0 <main@@Base+0xe514>
   24564:	b	245d0 <main@@Base+0xe534>
   24568:	mov	r0, r5
   2456c:	mov	r1, r4
   24570:	mov	r2, r7
   24574:	bl	376d0 <flatcc_json_parser_unmatched_symbol@@Base>
   24578:	mov	r1, r0
   2457c:	sub	r0, r7, r1
   24580:	cmp	r0, #2
   24584:	bge	24364 <main@@Base+0xe2c8>
   24588:	mov	r0, r5
   2458c:	mov	r2, r7
   24590:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   24594:	mov	r2, r0
   24598:	cmp	r2, r7
   2459c:	bne	2437c <main@@Base+0xe2e0>
   245a0:	b	24678 <main@@Base+0xe5dc>
   245a4:	mov	r1, r7
   245a8:	cmp	r6, r1
   245ac:	beq	245d0 <main@@Base+0xe534>
   245b0:	strh	r4, [sl]
   245b4:	sub	r0, r7, r1
   245b8:	cmp	r0, #2
   245bc:	bge	24364 <main@@Base+0xe2c8>
   245c0:	b	24588 <main@@Base+0xe4ec>
   245c4:	mov	r1, r6
   245c8:	cmp	r6, r1
   245cc:	bne	245b0 <main@@Base+0xe514>
   245d0:	add	r0, sp, #10
   245d4:	mov	r1, r6
   245d8:	mov	r2, r7
   245dc:	str	r0, [sp]
   245e0:	mov	r0, r5
   245e4:	ldr	r3, [sp, #4]
   245e8:	bl	23cbc <main@@Base+0xdc20>
   245ec:	mov	r1, r0
   245f0:	cmp	r0, r6
   245f4:	cmpne	r1, r7
   245f8:	beq	24668 <main@@Base+0xe5cc>
   245fc:	ldrh	r4, [sp, #10]
   24600:	strh	r4, [sl]
   24604:	sub	r0, r7, r1
   24608:	cmp	r0, #2
   2460c:	bge	24364 <main@@Base+0xe2c8>
   24610:	b	24588 <main@@Base+0xe4ec>
   24614:	subs	r3, r0, #32768	; 0x8000
   24618:	sbcs	r2, r2, #0
   2461c:	bcc	24654 <main@@Base+0xe5b8>
   24620:	mov	r0, r5
   24624:	mov	r2, r7
   24628:	mov	r3, #7
   2462c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   24630:	mov	r1, r0
   24634:	cmp	r6, r1
   24638:	bne	245b0 <main@@Base+0xe514>
   2463c:	b	245d0 <main@@Base+0xe534>
   24640:	rsb	r4, r0, #0
   24644:	strh	r4, [sp, #10]
   24648:	cmp	r6, r1
   2464c:	bne	245b0 <main@@Base+0xe514>
   24650:	b	245d0 <main@@Base+0xe534>
   24654:	mov	r4, r0
   24658:	strh	r4, [sp, #10]
   2465c:	cmp	r6, r1
   24660:	bne	245b0 <main@@Base+0xe514>
   24664:	b	245d0 <main@@Base+0xe534>
   24668:	mov	r0, r5
   2466c:	mov	r2, r7
   24670:	mov	r3, #33	; 0x21
   24674:	b	2472c <main@@Base+0xe690>
   24678:	mov	r1, r7
   2467c:	mov	r0, r1
   24680:	sub	sp, fp, #28
   24684:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24688:	cmp	r0, #125	; 0x7d
   2468c:	bne	2471c <main@@Base+0xe680>
   24690:	add	r3, r2, #1
   24694:	sub	r0, r7, r3
   24698:	cmp	r0, #2
   2469c:	blt	24748 <main@@Base+0xe6ac>
   246a0:	ldrb	r0, [r3]
   246a4:	cmp	r0, #32
   246a8:	bls	24734 <main@@Base+0xe698>
   246ac:	mov	r1, r3
   246b0:	mov	r0, r1
   246b4:	sub	sp, fp, #28
   246b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   246bc:	mov	r0, r5
   246c0:	mov	r1, r7
   246c4:	b	24724 <main@@Base+0xe688>
   246c8:	add	r3, r2, #1
   246cc:	sub	r0, r7, r3
   246d0:	cmp	r0, #2
   246d4:	blt	24748 <main@@Base+0xe6ac>
   246d8:	ldrb	r0, [r3]
   246dc:	cmp	r0, #32
   246e0:	bls	24734 <main@@Base+0xe698>
   246e4:	mov	r1, r3
   246e8:	mov	r0, r1
   246ec:	sub	sp, fp, #28
   246f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   246f4:	bne	24704 <main@@Base+0xe668>
   246f8:	ldrb	r0, [r1, #2]!
   246fc:	cmp	r0, #32
   24700:	bhi	2475c <main@@Base+0xe6c0>
   24704:	mov	r1, r2
   24708:	mov	r0, r5
   2470c:	mov	r2, r7
   24710:	sub	sp, fp, #28
   24714:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24718:	b	36e50 <flatcc_json_parser_space_ext@@Base>
   2471c:	mov	r0, r5
   24720:	mov	r1, r2
   24724:	mov	r2, r7
   24728:	mov	r3, #10
   2472c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   24730:	b	24758 <main@@Base+0xe6bc>
   24734:	bne	24748 <main@@Base+0xe6ac>
   24738:	ldrb	r0, [r2, #2]!
   2473c:	cmp	r0, #32
   24740:	mov	r1, r2
   24744:	bhi	2475c <main@@Base+0xe6c0>
   24748:	mov	r0, r5
   2474c:	mov	r1, r3
   24750:	mov	r2, r7
   24754:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   24758:	mov	r1, r0
   2475c:	mov	r0, r1
   24760:	sub	sp, fp, #28
   24764:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24768:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2476c:	add	fp, sp, #28
   24770:	sub	sp, sp, #36	; 0x24
   24774:	ldr	r5, [fp, #8]
   24778:	mov	r8, r0
   2477c:	mov	r0, #0
   24780:	mov	sl, r2
   24784:	mov	r4, r1
   24788:	cmp	r3, #4
   2478c:	str	r0, [r5]
   24790:	bhi	247ec <main@@Base+0xe750>
   24794:	add	r0, pc, #0
   24798:	ldr	pc, [r0, r3, lsl #2]
   2479c:			; <UNDEFINED> instruction: 0x000247b0
   247a0:	andeq	r4, r2, r4, lsl r8
   247a4:	andeq	r4, r2, ip, lsr #16
   247a8:	andeq	r4, r2, ip, lsl #17
   247ac:	andeq	r4, r2, ip, ror #17
   247b0:	sub	r0, sl, r4
   247b4:	cmp	r0, #4
   247b8:	blt	247d0 <main@@Base+0xe734>
   247bc:	ldr	r0, [r4]
   247c0:	movw	r1, #30062	; 0x756e
   247c4:	movt	r1, #27756	; 0x6c6c
   247c8:	cmp	r0, r1
   247cc:	beq	249a0 <main@@Base+0xe904>
   247d0:	mov	r0, r8
   247d4:	mov	r1, r4
   247d8:	mov	r2, sl
   247dc:	mov	r3, #26
   247e0:	sub	sp, fp, #28
   247e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   247e8:	b	36da0 <flatcc_json_parser_set_error@@Base>
   247ec:	ldrb	r0, [r8, #8]
   247f0:	tst	r0, #1
   247f4:	bne	24988 <main@@Base+0xe8ec>
   247f8:	mov	r0, r8
   247fc:	mov	r1, r4
   24800:	mov	r2, sl
   24804:	mov	r3, #15
   24808:	sub	sp, fp, #28
   2480c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24810:	b	36da0 <flatcc_json_parser_set_error@@Base>
   24814:	mov	r0, r8
   24818:	mov	r1, r4
   2481c:	mov	r2, sl
   24820:	mov	r3, r5
   24824:	bl	16f90 <main@@Base+0xef4>
   24828:	b	2493c <main@@Base+0xe8a0>
   2482c:	mov	r0, #0
   24830:	mov	r1, #4
   24834:	str	r0, [r5]
   24838:	ldr	r0, [r8]
   2483c:	bl	32294 <flatcc_builder_start_table@@Base>
   24840:	cmp	r0, #0
   24844:	bne	24928 <main@@Base+0xe88c>
   24848:	cmp	r4, sl
   2484c:	beq	24904 <main@@Base+0xe868>
   24850:	ldrb	r0, [r4]
   24854:	cmp	r0, #123	; 0x7b
   24858:	bne	24904 <main@@Base+0xe868>
   2485c:	add	r1, r4, #1
   24860:	sub	r0, sl, r1
   24864:	cmp	r0, #2
   24868:	blt	249c0 <main@@Base+0xe924>
   2486c:	ldrb	r0, [r1]
   24870:	cmp	r0, #32
   24874:	bls	249b0 <main@@Base+0xe914>
   24878:	mov	r4, r1
   2487c:	cmp	r4, sl
   24880:	mov	r2, sl
   24884:	bne	249dc <main@@Base+0xe940>
   24888:	b	24a0c <main@@Base+0xe970>
   2488c:	mov	r0, #0
   24890:	mov	r1, #0
   24894:	str	r0, [r5]
   24898:	ldr	r0, [r8]
   2489c:	bl	32294 <flatcc_builder_start_table@@Base>
   248a0:	cmp	r0, #0
   248a4:	bne	24928 <main@@Base+0xe88c>
   248a8:	cmp	r4, sl
   248ac:	beq	24904 <main@@Base+0xe868>
   248b0:	ldrb	r0, [r4]
   248b4:	cmp	r0, #123	; 0x7b
   248b8:	bne	24904 <main@@Base+0xe868>
   248bc:	add	r1, r4, #1
   248c0:	sub	r0, sl, r1
   248c4:	cmp	r0, #2
   248c8:	blt	25674 <main@@Base+0xf5d8>
   248cc:	ldrb	r0, [r1]
   248d0:	cmp	r0, #32
   248d4:	bls	25664 <main@@Base+0xf5c8>
   248d8:	mov	r4, r1
   248dc:	cmp	r4, sl
   248e0:	mov	r3, sl
   248e4:	bne	25690 <main@@Base+0xf5f4>
   248e8:	b	256d0 <main@@Base+0xf634>
   248ec:	mov	r0, r8
   248f0:	mov	r1, r4
   248f4:	mov	r2, sl
   248f8:	mov	r3, r5
   248fc:	bl	27660 <main@@Base+0x115c4>
   24900:	b	2493c <main@@Base+0xe8a0>
   24904:	mov	r0, r8
   24908:	mov	r1, r4
   2490c:	mov	r2, sl
   24910:	mov	r3, #21
   24914:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   24918:	mov	r4, r0
   2491c:	ldr	r0, [r8, #24]
   24920:	cmp	r0, #0
   24924:	beq	25898 <main@@Base+0xf7fc>
   24928:	mov	r0, r8
   2492c:	mov	r1, r4
   24930:	mov	r2, sl
   24934:	mov	r3, #33	; 0x21
   24938:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2493c:	mov	r4, r0
   24940:	ldr	r0, [r8, #24]
   24944:	cmp	r0, #0
   24948:	bne	24958 <main@@Base+0xe8bc>
   2494c:	ldr	r0, [r5]
   24950:	cmp	r0, #0
   24954:	beq	24964 <main@@Base+0xe8c8>
   24958:	mov	r0, r4
   2495c:	sub	sp, fp, #28
   24960:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24964:	mov	r0, r8
   24968:	mov	r1, r4
   2496c:	mov	r2, sl
   24970:	mov	r3, #33	; 0x21
   24974:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   24978:	mov	r4, r0
   2497c:	mov	r0, r4
   24980:	sub	sp, fp, #28
   24984:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24988:	mov	r0, r8
   2498c:	mov	r1, r4
   24990:	mov	r2, sl
   24994:	sub	sp, fp, #28
   24998:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2499c:	b	37960 <flatcc_json_parser_generic_json@@Base>
   249a0:	add	r4, r4, #4
   249a4:	mov	r0, r4
   249a8:	sub	sp, fp, #28
   249ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   249b0:	bne	249c0 <main@@Base+0xe924>
   249b4:	ldrb	r0, [r4, #2]!
   249b8:	cmp	r0, #32
   249bc:	bhi	249d0 <main@@Base+0xe934>
   249c0:	mov	r0, r8
   249c4:	mov	r2, sl
   249c8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   249cc:	mov	r4, r0
   249d0:	cmp	r4, sl
   249d4:	mov	r2, sl
   249d8:	beq	24a0c <main@@Base+0xe970>
   249dc:	ldrb	r0, [r4]
   249e0:	cmp	r0, #125	; 0x7d
   249e4:	bne	24a08 <main@@Base+0xe96c>
   249e8:	add	r1, r4, #1
   249ec:	sub	r0, sl, r1
   249f0:	cmp	r0, #2
   249f4:	blt	258d8 <main@@Base+0xf83c>
   249f8:	ldrb	r0, [r1]
   249fc:	cmp	r0, #32
   24a00:	bls	256b8 <main@@Base+0xf61c>
   24a04:	b	25888 <main@@Base+0xf7ec>
   24a08:	mov	r2, r4
   24a0c:	movw	r0, #628	; 0x274
   24a10:	movt	r0, #6
   24a14:	add	r0, r0, #96	; 0x60
   24a18:	str	r0, [sp, #12]
   24a1c:	movw	r0, #388	; 0x184
   24a20:	movt	r0, #6
   24a24:	add	r0, r0, #72	; 0x48
   24a28:	str	r0, [sp, #8]
   24a2c:	cmp	r2, sl
   24a30:	mov	r9, sl
   24a34:	beq	24a80 <main@@Base+0xe9e4>
   24a38:	ldrb	r0, [r2]
   24a3c:	cmp	r0, #46	; 0x2e
   24a40:	beq	24a58 <main@@Base+0xe9bc>
   24a44:	cmp	r0, #34	; 0x22
   24a48:	bne	24a74 <main@@Base+0xe9d8>
   24a4c:	mov	r0, #0
   24a50:	add	r9, r2, #1
   24a54:	b	24a7c <main@@Base+0xe9e0>
   24a58:	mov	r1, r2
   24a5c:	mov	r0, r8
   24a60:	mov	r2, sl
   24a64:	mov	r3, #5
   24a68:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   24a6c:	mov	r9, r0
   24a70:	b	24a80 <main@@Base+0xe9e4>
   24a74:	mov	r0, #1
   24a78:	mov	r9, r2
   24a7c:	str	r0, [r8, #12]
   24a80:	sub	lr, sl, r9
   24a84:	mov	r0, #8
   24a88:	cmp	lr, #8
   24a8c:	movcc	r0, lr
   24a90:	and	r0, r0, #15
   24a94:	sub	r2, r0, #1
   24a98:	cmp	r2, #7
   24a9c:	bhi	25494 <main@@Base+0xf3f8>
   24aa0:	mov	ip, r5
   24aa4:	add	r5, pc, #24
   24aa8:	mov	r0, #0
   24aac:	mov	r1, #0
   24ab0:	mov	r3, #0
   24ab4:	mov	r7, #0
   24ab8:	mov	r6, #0
   24abc:	mov	r4, #0
   24ac0:	ldr	pc, [r5, r2, lsl #2]
   24ac4:	andeq	r4, r2, r4, lsl fp
   24ac8:	andeq	r4, r2, ip, lsl #22
   24acc:	andeq	r4, r2, r4, lsl #22
   24ad0:	strdeq	r4, [r2], -ip
   24ad4:	andeq	r4, r2, ip, ror #21
   24ad8:	andeq	r4, r2, r4, ror #21
   24adc:	andeq	r4, r2, r4, ror #21
   24ae0:	andeq	r4, r2, r4, ror #21
   24ae4:	ldrb	r1, [r9, #5]
   24ae8:	lsl	r1, r1, #16
   24aec:	ldrb	r2, [r9, #4]
   24af0:	mov	r3, r0
   24af4:	orr	r1, r1, r2, lsl #24
   24af8:	mov	r0, r1
   24afc:	ldrb	r1, [r9, #3]
   24b00:	orr	r7, r1, r3
   24b04:	ldrb	r1, [r9, #2]
   24b08:	orr	r6, r7, r1, lsl #8
   24b0c:	ldrb	r1, [r9, #1]
   24b10:	orr	r4, r6, r1, lsl #16
   24b14:	ldrb	r1, [r9]
   24b18:	movw	r3, #29234	; 0x7232
   24b1c:	lsr	r2, r0, #16
   24b20:	movt	r3, #27759	; 0x6c6f
   24b24:	orr	r7, r4, r1, lsl #24
   24b28:	movw	r1, #25455	; 0x636f
   24b2c:	orr	r2, r2, r7, lsl #16
   24b30:	eor	r1, r1, r7, lsr #16
   24b34:	eor	r2, r2, r3
   24b38:	orrs	r1, r2, r1
   24b3c:	bne	24b90 <main@@Base+0xeaf4>
   24b40:	cmp	lr, #7
   24b44:	mov	r6, r9
   24b48:	mov	r5, ip
   24b4c:	blt	24da4 <main@@Base+0xed08>
   24b50:	mov	r1, r9
   24b54:	ldr	r2, [r8, #12]
   24b58:	ldrb	r0, [r1, #6]!
   24b5c:	cmp	r2, #0
   24b60:	beq	24bfc <main@@Base+0xeb60>
   24b64:	cmp	r0, #33	; 0x21
   24b68:	bcc	24b78 <main@@Base+0xeadc>
   24b6c:	cmp	r0, #58	; 0x3a
   24b70:	mov	r6, r9
   24b74:	bne	24da4 <main@@Base+0xed08>
   24b78:	mov	r0, #0
   24b7c:	str	r0, [r8, #12]
   24b80:	sub	r0, sl, r1
   24b84:	cmp	r0, #2
   24b88:	bge	24c18 <main@@Base+0xeb7c>
   24b8c:	b	24c80 <main@@Base+0xebe4>
   24b90:	movw	r1, #27759	; 0x6c6f
   24b94:	and	r0, r0, #-16777216	; 0xff000000
   24b98:	mov	r5, ip
   24b9c:	movt	r1, #25455	; 0x636f
   24ba0:	eor	r0, r0, #1912602624	; 0x72000000
   24ba4:	eor	r1, r7, r1
   24ba8:	orrs	r0, r0, r1
   24bac:	bne	24f90 <main@@Base+0xeef4>
   24bb0:	cmp	lr, #6
   24bb4:	mov	r6, r9
   24bb8:	blt	24f10 <main@@Base+0xee74>
   24bbc:	mov	r1, r9
   24bc0:	ldr	r2, [r8, #12]
   24bc4:	ldrb	r0, [r1, #5]!
   24bc8:	cmp	r2, #0
   24bcc:	beq	24c34 <main@@Base+0xeb98>
   24bd0:	cmp	r0, #33	; 0x21
   24bd4:	bcc	24be4 <main@@Base+0xeb48>
   24bd8:	cmp	r0, #58	; 0x3a
   24bdc:	mov	r6, r9
   24be0:	bne	24f10 <main@@Base+0xee74>
   24be4:	mov	r0, #0
   24be8:	str	r0, [r8, #12]
   24bec:	sub	r0, sl, r1
   24bf0:	cmp	r0, #2
   24bf4:	bge	24c50 <main@@Base+0xebb4>
   24bf8:	b	24d08 <main@@Base+0xec6c>
   24bfc:	cmp	r0, #34	; 0x22
   24c00:	mov	r6, r9
   24c04:	bne	24da4 <main@@Base+0xed08>
   24c08:	add	r1, r9, #7
   24c0c:	sub	r0, sl, r1
   24c10:	cmp	r0, #2
   24c14:	blt	24c80 <main@@Base+0xebe4>
   24c18:	ldrb	r0, [r1]
   24c1c:	cmp	r0, #32
   24c20:	bls	24c6c <main@@Base+0xebd0>
   24c24:	mov	r6, r1
   24c28:	cmp	r6, sl
   24c2c:	bne	24ca0 <main@@Base+0xec04>
   24c30:	b	24cd8 <main@@Base+0xec3c>
   24c34:	cmp	r0, #34	; 0x22
   24c38:	mov	r6, r9
   24c3c:	bne	24f10 <main@@Base+0xee74>
   24c40:	add	r1, r9, #6
   24c44:	sub	r0, sl, r1
   24c48:	cmp	r0, #2
   24c4c:	blt	24d08 <main@@Base+0xec6c>
   24c50:	ldrb	r0, [r1]
   24c54:	cmp	r0, #32
   24c58:	bls	24cf4 <main@@Base+0xec58>
   24c5c:	mov	r6, r1
   24c60:	cmp	r6, sl
   24c64:	bne	24d28 <main@@Base+0xec8c>
   24c68:	b	24d60 <main@@Base+0xecc4>
   24c6c:	bne	24c80 <main@@Base+0xebe4>
   24c70:	mov	r6, r1
   24c74:	ldrb	r0, [r6, #1]!
   24c78:	cmp	r0, #32
   24c7c:	bhi	24c98 <main@@Base+0xebfc>
   24c80:	mov	r0, r8
   24c84:	mov	r2, sl
   24c88:	mov	r4, lr
   24c8c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   24c90:	mov	lr, r4
   24c94:	mov	r6, r0
   24c98:	cmp	r6, sl
   24c9c:	beq	24cd8 <main@@Base+0xec3c>
   24ca0:	ldrb	r0, [r6]
   24ca4:	cmp	r0, #58	; 0x3a
   24ca8:	bne	24cd8 <main@@Base+0xec3c>
   24cac:	add	r1, r6, #1
   24cb0:	sub	r0, sl, r1
   24cb4:	cmp	r0, #2
   24cb8:	blt	24d8c <main@@Base+0xecf0>
   24cbc:	ldrb	r0, [r1]
   24cc0:	cmp	r0, #32
   24cc4:	bls	24d7c <main@@Base+0xece0>
   24cc8:	mov	r6, r1
   24ccc:	cmp	r9, r6
   24cd0:	bne	24dac <main@@Base+0xed10>
   24cd4:	b	24f90 <main@@Base+0xeef4>
   24cd8:	mov	r0, r8
   24cdc:	mov	r1, r6
   24ce0:	mov	r2, sl
   24ce4:	mov	r3, #4
   24ce8:	mov	r4, lr
   24cec:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   24cf0:	b	24d9c <main@@Base+0xed00>
   24cf4:	bne	24d08 <main@@Base+0xec6c>
   24cf8:	mov	r6, r1
   24cfc:	ldrb	r0, [r6, #1]!
   24d00:	cmp	r0, #32
   24d04:	bhi	24d20 <main@@Base+0xec84>
   24d08:	mov	r0, r8
   24d0c:	mov	r2, sl
   24d10:	mov	r4, lr
   24d14:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   24d18:	mov	lr, r4
   24d1c:	mov	r6, r0
   24d20:	cmp	r6, sl
   24d24:	beq	24d60 <main@@Base+0xecc4>
   24d28:	ldrb	r0, [r6]
   24d2c:	cmp	r0, #58	; 0x3a
   24d30:	bne	24d60 <main@@Base+0xecc4>
   24d34:	add	r1, r6, #1
   24d38:	sub	r0, sl, r1
   24d3c:	cmp	r0, #2
   24d40:	blt	24ef8 <main@@Base+0xee5c>
   24d44:	ldrb	r0, [r1]
   24d48:	cmp	r0, #32
   24d4c:	bls	24ee8 <main@@Base+0xee4c>
   24d50:	mov	r6, r1
   24d54:	cmp	r9, r6
   24d58:	bne	24f18 <main@@Base+0xee7c>
   24d5c:	b	24f90 <main@@Base+0xeef4>
   24d60:	mov	r0, r8
   24d64:	mov	r1, r6
   24d68:	mov	r2, sl
   24d6c:	mov	r3, #4
   24d70:	mov	r4, lr
   24d74:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   24d78:	b	24f08 <main@@Base+0xee6c>
   24d7c:	bne	24d8c <main@@Base+0xecf0>
   24d80:	ldrb	r0, [r6, #2]!
   24d84:	cmp	r0, #32
   24d88:	bhi	24da4 <main@@Base+0xed08>
   24d8c:	mov	r0, r8
   24d90:	mov	r2, sl
   24d94:	mov	r4, lr
   24d98:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   24d9c:	mov	lr, r4
   24da0:	mov	r6, r0
   24da4:	cmp	r9, r6
   24da8:	beq	24f90 <main@@Base+0xeef4>
   24dac:	mov	r7, #0
   24db0:	cmp	r6, sl
   24db4:	str	r7, [sp, #28]
   24db8:	str	r7, [sp, #24]
   24dbc:	strb	r7, [sp, #19]
   24dc0:	str	r7, [sp, #20]
   24dc4:	beq	24e24 <main@@Base+0xed88>
   24dc8:	add	r0, sp, #24
   24dcc:	mov	r1, r6
   24dd0:	mov	r2, sl
   24dd4:	add	r3, sp, #20
   24dd8:	str	r0, [sp]
   24ddc:	mov	r0, r8
   24de0:	bl	392f4 <flatcc_json_parser_integer@@Base>
   24de4:	cmp	r0, r6
   24de8:	beq	24e34 <main@@Base+0xed98>
   24dec:	ldr	r2, [sp, #20]
   24df0:	mov	r4, r0
   24df4:	ldr	r0, [sp, #24]
   24df8:	ldr	r1, [sp, #28]
   24dfc:	cmp	r2, #0
   24e00:	beq	24e44 <main@@Base+0xeda8>
   24e04:	subs	r2, r0, #129	; 0x81
   24e08:	sbcs	r1, r1, #0
   24e0c:	bcc	24e74 <main@@Base+0xedd8>
   24e10:	mov	r0, r8
   24e14:	mov	r1, r4
   24e18:	mov	r2, sl
   24e1c:	mov	r3, #8
   24e20:	b	24e60 <main@@Base+0xedc4>
   24e24:	mov	r4, sl
   24e28:	cmp	r6, r4
   24e2c:	bne	24ec8 <main@@Base+0xee2c>
   24e30:	b	24e98 <main@@Base+0xedfc>
   24e34:	mov	r4, r6
   24e38:	cmp	r6, r4
   24e3c:	bne	24ec8 <main@@Base+0xee2c>
   24e40:	b	24e98 <main@@Base+0xedfc>
   24e44:	subs	r2, r0, #128	; 0x80
   24e48:	sbcs	r1, r1, #0
   24e4c:	bcc	24e88 <main@@Base+0xedec>
   24e50:	mov	r0, r8
   24e54:	mov	r1, r4
   24e58:	mov	r2, sl
   24e5c:	mov	r3, #7
   24e60:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   24e64:	mov	r4, r0
   24e68:	cmp	r6, r4
   24e6c:	bne	24ec8 <main@@Base+0xee2c>
   24e70:	b	24e98 <main@@Base+0xedfc>
   24e74:	rsb	r7, r0, #0
   24e78:	strb	r7, [sp, #19]
   24e7c:	cmp	r6, r4
   24e80:	bne	24ec8 <main@@Base+0xee2c>
   24e84:	b	24e98 <main@@Base+0xedfc>
   24e88:	mov	r7, r0
   24e8c:	strb	r7, [sp, #19]
   24e90:	cmp	r6, r4
   24e94:	bne	24ec8 <main@@Base+0xee2c>
   24e98:	add	r0, sp, #19
   24e9c:	mov	r1, r6
   24ea0:	mov	r2, sl
   24ea4:	str	r0, [sp]
   24ea8:	mov	r0, r8
   24eac:	ldr	r3, [sp, #12]
   24eb0:	bl	23820 <main@@Base+0xd784>
   24eb4:	mov	r4, r0
   24eb8:	cmp	r0, r6
   24ebc:	cmpne	r4, sl
   24ec0:	beq	24928 <main@@Base+0xe88c>
   24ec4:	ldrb	r7, [sp, #19]
   24ec8:	uxtb	r0, r7
   24ecc:	cmp	r0, #2
   24ed0:	ldrbeq	r0, [r8, #8]
   24ed4:	tsteq	r0, #2
   24ed8:	beq	254a8 <main@@Base+0xf40c>
   24edc:	ldr	r0, [r8]
   24ee0:	mov	r1, #1
   24ee4:	b	25200 <main@@Base+0xf164>
   24ee8:	bne	24ef8 <main@@Base+0xee5c>
   24eec:	ldrb	r0, [r6, #2]!
   24ef0:	cmp	r0, #32
   24ef4:	bhi	24f10 <main@@Base+0xee74>
   24ef8:	mov	r0, r8
   24efc:	mov	r2, sl
   24f00:	mov	r4, lr
   24f04:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   24f08:	mov	lr, r4
   24f0c:	mov	r6, r0
   24f10:	cmp	r9, r6
   24f14:	beq	24f90 <main@@Base+0xeef4>
   24f18:	mov	r7, #0
   24f1c:	cmp	r6, sl
   24f20:	str	r7, [sp, #28]
   24f24:	str	r7, [sp, #24]
   24f28:	strb	r7, [sp, #19]
   24f2c:	str	r7, [sp, #20]
   24f30:	beq	25050 <main@@Base+0xefb4>
   24f34:	add	r0, sp, #24
   24f38:	mov	r1, r6
   24f3c:	mov	r2, sl
   24f40:	add	r3, sp, #20
   24f44:	str	r0, [sp]
   24f48:	mov	r0, r8
   24f4c:	bl	392f4 <flatcc_json_parser_integer@@Base>
   24f50:	cmp	r0, r6
   24f54:	beq	25098 <main@@Base+0xeffc>
   24f58:	ldr	r2, [sp, #20]
   24f5c:	mov	r4, r0
   24f60:	ldr	r0, [sp, #24]
   24f64:	ldr	r1, [sp, #28]
   24f68:	cmp	r2, #0
   24f6c:	beq	250e0 <main@@Base+0xf044>
   24f70:	subs	r2, r0, #129	; 0x81
   24f74:	sbcs	r1, r1, #0
   24f78:	bcc	25110 <main@@Base+0xf074>
   24f7c:	mov	r0, r8
   24f80:	mov	r1, r4
   24f84:	mov	r2, sl
   24f88:	mov	r3, #8
   24f8c:	b	250fc <main@@Base+0xf060>
   24f90:	movw	r1, #12800	; 0x3200
   24f94:	bic	r0, r7, #255	; 0xff
   24f98:	movt	r1, #30051	; 0x7563
   24f9c:	teq	r0, r1
   24fa0:	bne	24ff0 <main@@Base+0xef54>
   24fa4:	cmp	lr, #4
   24fa8:	mov	r7, r9
   24fac:	blt	252c4 <main@@Base+0xf228>
   24fb0:	mov	r1, r9
   24fb4:	ldr	r2, [r8, #12]
   24fb8:	ldrb	r0, [r1, #3]!
   24fbc:	cmp	r2, #0
   24fc0:	beq	25060 <main@@Base+0xefc4>
   24fc4:	cmp	r0, #33	; 0x21
   24fc8:	bcc	24fd8 <main@@Base+0xef3c>
   24fcc:	cmp	r0, #58	; 0x3a
   24fd0:	mov	r7, r9
   24fd4:	bne	252c4 <main@@Base+0xf228>
   24fd8:	mov	r0, #0
   24fdc:	str	r0, [r8, #12]
   24fe0:	sub	r0, sl, r1
   24fe4:	cmp	r0, #2
   24fe8:	bge	2507c <main@@Base+0xefe0>
   24fec:	b	25138 <main@@Base+0xf09c>
   24ff0:	movw	r0, #0
   24ff4:	bfc	r7, #0, #16
   24ff8:	movt	r0, #30051	; 0x7563
   24ffc:	teq	r7, r0
   25000:	bne	25494 <main@@Base+0xf3f8>
   25004:	cmp	lr, #3
   25008:	mov	r7, r9
   2500c:	blt	25418 <main@@Base+0xf37c>
   25010:	mov	r1, r9
   25014:	ldr	r2, [r8, #12]
   25018:	ldrb	r0, [r1, #2]!
   2501c:	cmp	r2, #0
   25020:	beq	250a8 <main@@Base+0xf00c>
   25024:	cmp	r0, #33	; 0x21
   25028:	bcc	25038 <main@@Base+0xef9c>
   2502c:	cmp	r0, #58	; 0x3a
   25030:	mov	r7, r9
   25034:	bne	25418 <main@@Base+0xf37c>
   25038:	mov	r0, #0
   2503c:	str	r0, [r8, #12]
   25040:	sub	r0, sl, r1
   25044:	cmp	r0, #2
   25048:	bge	250c4 <main@@Base+0xf028>
   2504c:	b	2523c <main@@Base+0xf1a0>
   25050:	mov	r4, sl
   25054:	cmp	r6, r4
   25058:	bne	251e4 <main@@Base+0xf148>
   2505c:	b	251b0 <main@@Base+0xf114>
   25060:	cmp	r0, #34	; 0x22
   25064:	mov	r7, r9
   25068:	bne	252c4 <main@@Base+0xf228>
   2506c:	add	r1, r9, #4
   25070:	sub	r0, sl, r1
   25074:	cmp	r0, #2
   25078:	blt	25138 <main@@Base+0xf09c>
   2507c:	ldrb	r0, [r1]
   25080:	cmp	r0, #32
   25084:	bls	25124 <main@@Base+0xf088>
   25088:	mov	r7, r1
   2508c:	cmp	r7, sl
   25090:	bne	25150 <main@@Base+0xf0b4>
   25094:	b	25188 <main@@Base+0xf0ec>
   25098:	mov	r4, r6
   2509c:	cmp	r6, r4
   250a0:	bne	251e4 <main@@Base+0xf148>
   250a4:	b	251b0 <main@@Base+0xf114>
   250a8:	cmp	r0, #34	; 0x22
   250ac:	mov	r7, r9
   250b0:	bne	25418 <main@@Base+0xf37c>
   250b4:	add	r1, r9, #3
   250b8:	sub	r0, sl, r1
   250bc:	cmp	r0, #2
   250c0:	blt	2523c <main@@Base+0xf1a0>
   250c4:	ldrb	r0, [r1]
   250c8:	cmp	r0, #32
   250cc:	bls	25228 <main@@Base+0xf18c>
   250d0:	mov	r7, r1
   250d4:	cmp	r7, sl
   250d8:	bne	25254 <main@@Base+0xf1b8>
   250dc:	b	2528c <main@@Base+0xf1f0>
   250e0:	subs	r2, r0, #128	; 0x80
   250e4:	sbcs	r1, r1, #0
   250e8:	bcc	251a0 <main@@Base+0xf104>
   250ec:	mov	r0, r8
   250f0:	mov	r1, r4
   250f4:	mov	r2, sl
   250f8:	mov	r3, #7
   250fc:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   25100:	mov	r4, r0
   25104:	cmp	r6, r4
   25108:	bne	251e4 <main@@Base+0xf148>
   2510c:	b	251b0 <main@@Base+0xf114>
   25110:	rsb	r7, r0, #0
   25114:	strb	r7, [sp, #19]
   25118:	cmp	r6, r4
   2511c:	bne	251e4 <main@@Base+0xf148>
   25120:	b	251b0 <main@@Base+0xf114>
   25124:	bne	25138 <main@@Base+0xf09c>
   25128:	mov	r7, r1
   2512c:	ldrb	r0, [r7, #1]!
   25130:	cmp	r0, #32
   25134:	bhi	25148 <main@@Base+0xf0ac>
   25138:	mov	r0, r8
   2513c:	mov	r2, sl
   25140:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   25144:	mov	r7, r0
   25148:	cmp	r7, sl
   2514c:	beq	25188 <main@@Base+0xf0ec>
   25150:	ldrb	r0, [r7]
   25154:	cmp	r0, #58	; 0x3a
   25158:	bne	25188 <main@@Base+0xf0ec>
   2515c:	add	r1, r7, #1
   25160:	sub	r0, sl, r1
   25164:	cmp	r0, #2
   25168:	blt	252b4 <main@@Base+0xf218>
   2516c:	ldrb	r0, [r1]
   25170:	cmp	r0, #32
   25174:	bls	252a4 <main@@Base+0xf208>
   25178:	mov	r7, r1
   2517c:	cmp	r9, r7
   25180:	bne	252cc <main@@Base+0xf230>
   25184:	b	25494 <main@@Base+0xf3f8>
   25188:	mov	r0, r8
   2518c:	mov	r1, r7
   25190:	mov	r2, sl
   25194:	mov	r3, #4
   25198:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2519c:	b	252c0 <main@@Base+0xf224>
   251a0:	mov	r7, r0
   251a4:	strb	r7, [sp, #19]
   251a8:	cmp	r6, r4
   251ac:	bne	251e4 <main@@Base+0xf148>
   251b0:	movw	r3, #740	; 0x2e4
   251b4:	add	r0, sp, #19
   251b8:	mov	r1, r6
   251bc:	mov	r2, sl
   251c0:	str	r0, [sp]
   251c4:	mov	r0, r8
   251c8:	movt	r3, #6
   251cc:	bl	23820 <main@@Base+0xd784>
   251d0:	mov	r4, r0
   251d4:	cmp	r0, r6
   251d8:	cmpne	r4, sl
   251dc:	beq	24928 <main@@Base+0xe88c>
   251e0:	ldrb	r7, [sp, #19]
   251e4:	uxtb	r0, r7
   251e8:	cmp	r0, #2
   251ec:	ldrbeq	r0, [r8, #8]
   251f0:	tsteq	r0, #2
   251f4:	beq	254a8 <main@@Base+0xf40c>
   251f8:	ldr	r0, [r8]
   251fc:	mov	r1, #0
   25200:	mov	r2, #1
   25204:	mov	r3, #1
   25208:	bl	33604 <flatcc_builder_table_add@@Base>
   2520c:	cmp	r0, #0
   25210:	beq	24928 <main@@Base+0xe88c>
   25214:	strb	r7, [r0]
   25218:	sub	r0, sl, r4
   2521c:	cmp	r0, #2
   25220:	bge	254b4 <main@@Base+0xf418>
   25224:	b	255c8 <main@@Base+0xf52c>
   25228:	bne	2523c <main@@Base+0xf1a0>
   2522c:	mov	r7, r1
   25230:	ldrb	r0, [r7, #1]!
   25234:	cmp	r0, #32
   25238:	bhi	2524c <main@@Base+0xf1b0>
   2523c:	mov	r0, r8
   25240:	mov	r2, sl
   25244:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   25248:	mov	r7, r0
   2524c:	cmp	r7, sl
   25250:	beq	2528c <main@@Base+0xf1f0>
   25254:	ldrb	r0, [r7]
   25258:	cmp	r0, #58	; 0x3a
   2525c:	bne	2528c <main@@Base+0xf1f0>
   25260:	add	r1, r7, #1
   25264:	sub	r0, sl, r1
   25268:	cmp	r0, #2
   2526c:	blt	25408 <main@@Base+0xf36c>
   25270:	ldrb	r0, [r1]
   25274:	cmp	r0, #32
   25278:	bls	253f8 <main@@Base+0xf35c>
   2527c:	mov	r7, r1
   25280:	cmp	r9, r7
   25284:	bne	25420 <main@@Base+0xf384>
   25288:	b	25494 <main@@Base+0xf3f8>
   2528c:	mov	r0, r8
   25290:	mov	r1, r7
   25294:	mov	r2, sl
   25298:	mov	r3, #4
   2529c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   252a0:	b	25414 <main@@Base+0xf378>
   252a4:	bne	252b4 <main@@Base+0xf218>
   252a8:	ldrb	r0, [r7, #2]!
   252ac:	cmp	r0, #32
   252b0:	bhi	252c4 <main@@Base+0xf228>
   252b4:	mov	r0, r8
   252b8:	mov	r2, sl
   252bc:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   252c0:	mov	r7, r0
   252c4:	cmp	r9, r7
   252c8:	beq	25494 <main@@Base+0xf3f8>
   252cc:	mov	r6, #0
   252d0:	cmp	r7, sl
   252d4:	str	r6, [sp, #28]
   252d8:	str	r6, [sp, #24]
   252dc:	strb	r6, [sp, #19]
   252e0:	str	r6, [sp, #20]
   252e4:	beq	25340 <main@@Base+0xf2a4>
   252e8:	add	r0, sp, #24
   252ec:	mov	r1, r7
   252f0:	mov	r2, sl
   252f4:	add	r3, sp, #20
   252f8:	str	r0, [sp]
   252fc:	mov	r0, r8
   25300:	bl	392f4 <flatcc_json_parser_integer@@Base>
   25304:	cmp	r0, r7
   25308:	beq	25350 <main@@Base+0xf2b4>
   2530c:	mov	r4, r0
   25310:	ldr	r0, [sp, #20]
   25314:	cmp	r0, #0
   25318:	beq	25360 <main@@Base+0xf2c4>
   2531c:	mov	r0, r8
   25320:	mov	r1, r4
   25324:	mov	r2, sl
   25328:	mov	r3, #8
   2532c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   25330:	mov	r4, r0
   25334:	cmp	r7, r4
   25338:	bne	253d8 <main@@Base+0xf33c>
   2533c:	b	253a8 <main@@Base+0xf30c>
   25340:	mov	r4, sl
   25344:	cmp	r7, r4
   25348:	bne	253d8 <main@@Base+0xf33c>
   2534c:	b	253a8 <main@@Base+0xf30c>
   25350:	mov	r4, r7
   25354:	cmp	r7, r4
   25358:	bne	253d8 <main@@Base+0xf33c>
   2535c:	b	253a8 <main@@Base+0xf30c>
   25360:	ldr	r0, [sp, #24]
   25364:	ldr	r1, [sp, #28]
   25368:	subs	r2, r0, #256	; 0x100
   2536c:	sbcs	r1, r1, #0
   25370:	bcc	25398 <main@@Base+0xf2fc>
   25374:	mov	r0, r8
   25378:	mov	r1, r4
   2537c:	mov	r2, sl
   25380:	mov	r3, #7
   25384:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   25388:	mov	r4, r0
   2538c:	cmp	r7, r4
   25390:	bne	253d8 <main@@Base+0xf33c>
   25394:	b	253a8 <main@@Base+0xf30c>
   25398:	mov	r6, r0
   2539c:	strb	r0, [sp, #19]
   253a0:	cmp	r7, r4
   253a4:	bne	253d8 <main@@Base+0xf33c>
   253a8:	add	r0, sp, #19
   253ac:	mov	r1, r7
   253b0:	mov	r2, sl
   253b4:	str	r0, [sp]
   253b8:	mov	r0, r8
   253bc:	ldr	r3, [sp, #8]
   253c0:	bl	23a78 <main@@Base+0xd9dc>
   253c4:	mov	r4, r0
   253c8:	cmp	r0, r7
   253cc:	cmpne	r4, sl
   253d0:	beq	24928 <main@@Base+0xe88c>
   253d4:	ldrb	r6, [sp, #19]
   253d8:	uxtb	r0, r6
   253dc:	cmp	r0, #2
   253e0:	ldrbeq	r0, [r8, #8]
   253e4:	tsteq	r0, #2
   253e8:	beq	254a8 <main@@Base+0xf40c>
   253ec:	ldr	r0, [r8]
   253f0:	mov	r1, #3
   253f4:	b	255a4 <main@@Base+0xf508>
   253f8:	bne	25408 <main@@Base+0xf36c>
   253fc:	ldrb	r0, [r7, #2]!
   25400:	cmp	r0, #32
   25404:	bhi	25418 <main@@Base+0xf37c>
   25408:	mov	r0, r8
   2540c:	mov	r2, sl
   25410:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   25414:	mov	r7, r0
   25418:	cmp	r9, r7
   2541c:	beq	25494 <main@@Base+0xf3f8>
   25420:	mov	r6, #0
   25424:	cmp	r7, sl
   25428:	str	r6, [sp, #28]
   2542c:	str	r6, [sp, #24]
   25430:	strb	r6, [sp, #19]
   25434:	str	r6, [sp, #20]
   25438:	beq	254e8 <main@@Base+0xf44c>
   2543c:	add	r0, sp, #24
   25440:	mov	r1, r7
   25444:	mov	r2, sl
   25448:	add	r3, sp, #20
   2544c:	str	r0, [sp]
   25450:	mov	r0, r8
   25454:	bl	392f4 <flatcc_json_parser_integer@@Base>
   25458:	cmp	r0, r7
   2545c:	beq	254f8 <main@@Base+0xf45c>
   25460:	mov	r4, r0
   25464:	ldr	r0, [sp, #20]
   25468:	cmp	r0, #0
   2546c:	beq	25508 <main@@Base+0xf46c>
   25470:	mov	r0, r8
   25474:	mov	r1, r4
   25478:	mov	r2, sl
   2547c:	mov	r3, #8
   25480:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   25484:	mov	r4, r0
   25488:	cmp	r7, r4
   2548c:	bne	25588 <main@@Base+0xf4ec>
   25490:	b	25550 <main@@Base+0xf4b4>
   25494:	mov	r0, r8
   25498:	mov	r1, r9
   2549c:	mov	r2, sl
   254a0:	bl	376d0 <flatcc_json_parser_unmatched_symbol@@Base>
   254a4:	mov	r4, r0
   254a8:	sub	r0, sl, r4
   254ac:	cmp	r0, #2
   254b0:	blt	255c8 <main@@Base+0xf52c>
   254b4:	ldrb	r0, [r4]
   254b8:	cmp	r0, #32
   254bc:	bls	254d0 <main@@Base+0xf434>
   254c0:	mov	r2, r4
   254c4:	cmp	r2, sl
   254c8:	bne	255e4 <main@@Base+0xf548>
   254cc:	b	25808 <main@@Base+0xf76c>
   254d0:	bne	255c8 <main@@Base+0xf52c>
   254d4:	mov	r2, r4
   254d8:	ldrb	r0, [r2, #1]!
   254dc:	cmp	r0, #32
   254e0:	bhi	255dc <main@@Base+0xf540>
   254e4:	b	255c8 <main@@Base+0xf52c>
   254e8:	mov	r4, sl
   254ec:	cmp	r7, r4
   254f0:	bne	25588 <main@@Base+0xf4ec>
   254f4:	b	25550 <main@@Base+0xf4b4>
   254f8:	mov	r4, r7
   254fc:	cmp	r7, r4
   25500:	bne	25588 <main@@Base+0xf4ec>
   25504:	b	25550 <main@@Base+0xf4b4>
   25508:	ldr	r0, [sp, #24]
   2550c:	ldr	r1, [sp, #28]
   25510:	subs	r2, r0, #256	; 0x100
   25514:	sbcs	r1, r1, #0
   25518:	bcc	25540 <main@@Base+0xf4a4>
   2551c:	mov	r0, r8
   25520:	mov	r1, r4
   25524:	mov	r2, sl
   25528:	mov	r3, #7
   2552c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   25530:	mov	r4, r0
   25534:	cmp	r7, r4
   25538:	bne	25588 <main@@Base+0xf4ec>
   2553c:	b	25550 <main@@Base+0xf4b4>
   25540:	mov	r6, r0
   25544:	strb	r0, [sp, #19]
   25548:	cmp	r7, r4
   2554c:	bne	25588 <main@@Base+0xf4ec>
   25550:	add	r0, sp, #19
   25554:	mov	r1, r7
   25558:	mov	r2, sl
   2555c:	str	r0, [sp]
   25560:	movw	r0, #388	; 0x184
   25564:	movt	r0, #6
   25568:	add	r3, r0, #84	; 0x54
   2556c:	mov	r0, r8
   25570:	bl	23a78 <main@@Base+0xd9dc>
   25574:	mov	r4, r0
   25578:	cmp	r0, r7
   2557c:	cmpne	r4, sl
   25580:	beq	24928 <main@@Base+0xe88c>
   25584:	ldrb	r6, [sp, #19]
   25588:	uxtb	r0, r6
   2558c:	cmp	r0, #2
   25590:	ldrbeq	r0, [r8, #8]
   25594:	tsteq	r0, #2
   25598:	beq	254a8 <main@@Base+0xf40c>
   2559c:	ldr	r0, [r8]
   255a0:	mov	r1, #2
   255a4:	mov	r2, #1
   255a8:	mov	r3, #1
   255ac:	bl	33604 <flatcc_builder_table_add@@Base>
   255b0:	cmp	r0, #0
   255b4:	beq	24928 <main@@Base+0xe88c>
   255b8:	strb	r6, [r0]
   255bc:	sub	r0, sl, r4
   255c0:	cmp	r0, #2
   255c4:	bge	254b4 <main@@Base+0xf418>
   255c8:	mov	r0, r8
   255cc:	mov	r1, r4
   255d0:	mov	r2, sl
   255d4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   255d8:	mov	r2, r0
   255dc:	cmp	r2, sl
   255e0:	beq	25808 <main@@Base+0xf76c>
   255e4:	ldrb	r0, [r2]
   255e8:	cmp	r0, #44	; 0x2c
   255ec:	bne	25864 <main@@Base+0xf7c8>
   255f0:	add	r1, r2, #1
   255f4:	sub	r0, sl, r1
   255f8:	cmp	r0, #2
   255fc:	blt	2562c <main@@Base+0xf590>
   25600:	ldrb	r0, [r1]
   25604:	cmp	r0, #32
   25608:	bls	2561c <main@@Base+0xf580>
   2560c:	mov	r2, r1
   25610:	cmp	r2, sl
   25614:	bne	25644 <main@@Base+0xf5a8>
   25618:	b	257fc <main@@Base+0xf760>
   2561c:	bne	2562c <main@@Base+0xf590>
   25620:	ldrb	r0, [r2, #2]!
   25624:	cmp	r0, #32
   25628:	bhi	2563c <main@@Base+0xf5a0>
   2562c:	mov	r0, r8
   25630:	mov	r2, sl
   25634:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   25638:	mov	r2, r0
   2563c:	cmp	r2, sl
   25640:	beq	257fc <main@@Base+0xf760>
   25644:	ldrb	r0, [r2]
   25648:	cmp	r0, #125	; 0x7d
   2564c:	bne	24a2c <main@@Base+0xe990>
   25650:	add	r1, r2, #1
   25654:	sub	r0, sl, r1
   25658:	cmp	r0, #2
   2565c:	blt	258d8 <main@@Base+0xf83c>
   25660:	b	2587c <main@@Base+0xf7e0>
   25664:	bne	25674 <main@@Base+0xf5d8>
   25668:	ldrb	r0, [r4, #2]!
   2566c:	cmp	r0, #32
   25670:	bhi	25684 <main@@Base+0xf5e8>
   25674:	mov	r0, r8
   25678:	mov	r2, sl
   2567c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   25680:	mov	r4, r0
   25684:	cmp	r4, sl
   25688:	mov	r3, sl
   2568c:	beq	256d0 <main@@Base+0xf634>
   25690:	ldrb	r0, [r4]
   25694:	cmp	r0, #125	; 0x7d
   25698:	bne	256cc <main@@Base+0xf630>
   2569c:	add	r1, r4, #1
   256a0:	sub	r0, sl, r1
   256a4:	cmp	r0, #2
   256a8:	blt	258d8 <main@@Base+0xf83c>
   256ac:	ldrb	r0, [r1]
   256b0:	cmp	r0, #32
   256b4:	bhi	25888 <main@@Base+0xf7ec>
   256b8:	bne	258d8 <main@@Base+0xf83c>
   256bc:	ldrb	r0, [r4, #2]!
   256c0:	cmp	r0, #32
   256c4:	bhi	2491c <main@@Base+0xe880>
   256c8:	b	258d8 <main@@Base+0xf83c>
   256cc:	mov	r3, r4
   256d0:	mov	r4, #0
   256d4:	mov	r7, #1
   256d8:	cmp	r3, sl
   256dc:	mov	r1, sl
   256e0:	beq	25728 <main@@Base+0xf68c>
   256e4:	ldrb	r0, [r3]
   256e8:	cmp	r0, #46	; 0x2e
   256ec:	beq	25704 <main@@Base+0xf668>
   256f0:	cmp	r0, #34	; 0x22
   256f4:	bne	25720 <main@@Base+0xf684>
   256f8:	str	r4, [r8, #12]
   256fc:	add	r1, r3, #1
   25700:	b	25728 <main@@Base+0xf68c>
   25704:	mov	r1, r3
   25708:	mov	r0, r8
   2570c:	mov	r2, sl
   25710:	mov	r3, #5
   25714:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   25718:	mov	r1, r0
   2571c:	b	25728 <main@@Base+0xf68c>
   25720:	mov	r1, r3
   25724:	str	r7, [r8, #12]
   25728:	mov	r0, r8
   2572c:	mov	r2, sl
   25730:	bl	376d0 <flatcc_json_parser_unmatched_symbol@@Base>
   25734:	mov	r2, r0
   25738:	sub	r0, sl, r0
   2573c:	cmp	r0, #2
   25740:	blt	257b4 <main@@Base+0xf718>
   25744:	ldrb	r0, [r2]
   25748:	cmp	r0, #32
   2574c:	bls	257a0 <main@@Base+0xf704>
   25750:	mov	r3, r2
   25754:	cmp	r3, sl
   25758:	beq	25808 <main@@Base+0xf76c>
   2575c:	ldrb	r0, [r3]
   25760:	cmp	r0, #44	; 0x2c
   25764:	bne	2581c <main@@Base+0xf780>
   25768:	add	r1, r3, #1
   2576c:	sub	r0, sl, r1
   25770:	cmp	r0, #2
   25774:	blt	257e4 <main@@Base+0xf748>
   25778:	ldrb	r0, [r1]
   2577c:	cmp	r0, #32
   25780:	bls	257d4 <main@@Base+0xf738>
   25784:	mov	r3, r1
   25788:	cmp	r3, sl
   2578c:	beq	257fc <main@@Base+0xf760>
   25790:	ldrb	r0, [r3]
   25794:	cmp	r0, #125	; 0x7d
   25798:	bne	256d8 <main@@Base+0xf63c>
   2579c:	b	25824 <main@@Base+0xf788>
   257a0:	bne	257b4 <main@@Base+0xf718>
   257a4:	mov	r3, r2
   257a8:	ldrb	r0, [r3, #1]!
   257ac:	cmp	r0, #32
   257b0:	bhi	257c8 <main@@Base+0xf72c>
   257b4:	mov	r1, r2
   257b8:	mov	r0, r8
   257bc:	mov	r2, sl
   257c0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   257c4:	mov	r3, r0
   257c8:	cmp	r3, sl
   257cc:	bne	2575c <main@@Base+0xf6c0>
   257d0:	b	25808 <main@@Base+0xf76c>
   257d4:	bne	257e4 <main@@Base+0xf748>
   257d8:	ldrb	r0, [r3, #2]!
   257dc:	cmp	r0, #32
   257e0:	bhi	257f4 <main@@Base+0xf758>
   257e4:	mov	r0, r8
   257e8:	mov	r2, sl
   257ec:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   257f0:	mov	r3, r0
   257f4:	cmp	r3, sl
   257f8:	bne	25790 <main@@Base+0xf6f4>
   257fc:	mov	r0, r8
   25800:	mov	r1, sl
   25804:	b	258b8 <main@@Base+0xf81c>
   25808:	mov	r4, sl
   2580c:	ldr	r0, [r8, #24]
   25810:	cmp	r0, #0
   25814:	bne	24928 <main@@Base+0xe88c>
   25818:	b	25898 <main@@Base+0xf7fc>
   2581c:	cmp	r0, #125	; 0x7d
   25820:	bne	25858 <main@@Base+0xf7bc>
   25824:	add	r1, r3, #1
   25828:	sub	r0, sl, r1
   2582c:	cmp	r0, #2
   25830:	blt	258d8 <main@@Base+0xf83c>
   25834:	ldrb	r0, [r1]
   25838:	cmp	r0, #32
   2583c:	bhi	25888 <main@@Base+0xf7ec>
   25840:	bne	258d8 <main@@Base+0xf83c>
   25844:	ldrb	r0, [r3, #2]!
   25848:	cmp	r0, #32
   2584c:	mov	r4, r3
   25850:	bhi	2491c <main@@Base+0xe880>
   25854:	b	258d8 <main@@Base+0xf83c>
   25858:	mov	r0, r8
   2585c:	mov	r1, r3
   25860:	b	258b8 <main@@Base+0xf81c>
   25864:	cmp	r0, #125	; 0x7d
   25868:	bne	258b0 <main@@Base+0xf814>
   2586c:	add	r1, r2, #1
   25870:	sub	r0, sl, r1
   25874:	cmp	r0, #2
   25878:	blt	258d8 <main@@Base+0xf83c>
   2587c:	ldrb	r0, [r1]
   25880:	cmp	r0, #32
   25884:	bls	258c4 <main@@Base+0xf828>
   25888:	mov	r4, r1
   2588c:	ldr	r0, [r8, #24]
   25890:	cmp	r0, #0
   25894:	bne	24928 <main@@Base+0xe88c>
   25898:	ldr	r0, [r8]
   2589c:	bl	32c44 <flatcc_builder_end_table@@Base>
   258a0:	cmp	r0, #0
   258a4:	str	r0, [r5]
   258a8:	bne	24940 <main@@Base+0xe8a4>
   258ac:	b	24928 <main@@Base+0xe88c>
   258b0:	mov	r0, r8
   258b4:	mov	r1, r2
   258b8:	mov	r2, sl
   258bc:	mov	r3, #10
   258c0:	b	24914 <main@@Base+0xe878>
   258c4:	bne	258d8 <main@@Base+0xf83c>
   258c8:	ldrb	r0, [r2, #2]!
   258cc:	cmp	r0, #32
   258d0:	mov	r4, r2
   258d4:	bhi	2491c <main@@Base+0xe880>
   258d8:	mov	r0, r8
   258dc:	mov	r2, sl
   258e0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   258e4:	b	24918 <main@@Base+0xe87c>
   258e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   258ec:	add	fp, sp, #28
   258f0:	sub	sp, sp, #20
   258f4:	mov	sl, r1
   258f8:	sub	r1, r2, r1
   258fc:	cmp	r1, #8
   25900:	movcs	r1, #8
   25904:	and	r1, r1, #15
   25908:	sub	r5, r1, #1
   2590c:	cmp	r5, #7
   25910:	bhi	25b14 <main@@Base+0xfa78>
   25914:	str	r2, [sp, #16]
   25918:	str	r0, [sp, #12]
   2591c:	add	r0, pc, #36	; 0x24
   25920:	mov	lr, r3
   25924:	mov	r8, #0
   25928:	mov	ip, #0
   2592c:	mov	r2, #0
   25930:	mov	r1, #0
   25934:	mov	r3, #0
   25938:	mov	r7, #0
   2593c:	mov	r6, #0
   25940:	mov	r4, #0
   25944:	ldr	pc, [r0, r5, lsl #2]
   25948:	andeq	r5, r2, ip, lsr #19
   2594c:	andeq	r5, r2, r4, lsr #19
   25950:	muleq	r2, ip, r9
   25954:	muleq	r2, r4, r9
   25958:	andeq	r5, r2, r8, lsl #19
   2595c:	andeq	r5, r2, ip, ror r9
   25960:	andeq	r5, r2, ip, ror #18
   25964:	andeq	r5, r2, r8, ror #18
   25968:	ldrb	ip, [sl, #7]
   2596c:	ldrb	r0, [sl, #6]
   25970:	mov	r2, r8
   25974:	orr	r0, ip, r0, lsl #8
   25978:	mov	r8, r0
   2597c:	ldrb	r0, [sl, #5]
   25980:	mov	r1, r2
   25984:	orr	r8, r8, r0, lsl #16
   25988:	ldrb	r0, [sl, #4]
   2598c:	mov	r3, r1
   25990:	orr	r8, r8, r0, lsl #24
   25994:	ldrb	r0, [sl, #3]
   25998:	orr	r7, r0, r3
   2599c:	ldrb	r0, [sl, #2]
   259a0:	orr	r6, r7, r0, lsl #8
   259a4:	ldrb	r0, [sl, #1]
   259a8:	orr	r4, r6, r0, lsl #16
   259ac:	ldrb	r0, [sl]
   259b0:	ldr	r7, [fp, #12]
   259b4:	ldr	r5, [fp, #8]
   259b8:	movw	r1, #28275	; 0x6e73
   259bc:	movt	r1, #19823	; 0x4d6f
   259c0:	orr	r9, r4, r0, lsl #24
   259c4:	movw	r0, #29184	; 0x7200
   259c8:	movt	r0, #29797	; 0x7465
   259cc:	subs	r2, r8, r0
   259d0:	sbcs	r2, r9, r1
   259d4:	bcs	25a1c <main@@Base+0xf980>
   259d8:	movw	r1, #29696	; 0x7400
   259dc:	bic	r0, r9, #255	; 0xff
   259e0:	movt	r1, #16748	; 0x416c
   259e4:	teq	r0, r1
   259e8:	bne	25b14 <main@@Base+0xfa78>
   259ec:	ldr	r0, [sp, #12]
   259f0:	ldr	r2, [sp, #16]
   259f4:	mov	r1, sl
   259f8:	mov	r3, #3
   259fc:	mov	r4, lr
   25a00:	str	r7, [sp]
   25a04:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   25a08:	cmp	r0, sl
   25a0c:	beq	25b14 <main@@Base+0xfa78>
   25a10:	mov	r1, #0
   25a14:	mov	r2, #4
   25a18:	b	25a5c <main@@Base+0xf9c0>
   25a1c:	add	r2, r0, #50	; 0x32
   25a20:	eor	r1, r9, r1
   25a24:	eor	r2, r8, r2
   25a28:	orrs	r2, r2, r1
   25a2c:	bne	25a6c <main@@Base+0xf9d0>
   25a30:	ldr	r0, [sp, #12]
   25a34:	ldr	r2, [sp, #16]
   25a38:	mov	r1, sl
   25a3c:	mov	r3, #8
   25a40:	mov	r4, lr
   25a44:	str	r7, [sp]
   25a48:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   25a4c:	cmp	r0, sl
   25a50:	beq	25b14 <main@@Base+0xfa78>
   25a54:	mov	r1, #0
   25a58:	mov	r2, #3
   25a5c:	str	r2, [r5]
   25a60:	str	r1, [r5, #4]
   25a64:	str	r1, [r4]
   25a68:	b	25b10 <main@@Base+0xfa74>
   25a6c:	ldr	r5, [sp, #16]
   25a70:	ldr	r6, [sp, #12]
   25a74:	bic	r2, r8, #255	; 0xff
   25a78:	eor	r0, r2, r0
   25a7c:	orrs	r0, r0, r1
   25a80:	bne	25ac4 <main@@Base+0xfa28>
   25a84:	mov	r0, r6
   25a88:	mov	r1, sl
   25a8c:	mov	r2, r5
   25a90:	mov	r3, #7
   25a94:	str	r7, [sp]
   25a98:	mov	r4, lr
   25a9c:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   25aa0:	mov	lr, r4
   25aa4:	cmp	r0, sl
   25aa8:	beq	25ac4 <main@@Base+0xfa28>
   25aac:	ldr	r3, [fp, #8]
   25ab0:	mov	r2, #1
   25ab4:	mov	r1, #0
   25ab8:	str	r2, [r3]
   25abc:	str	r1, [r3, #4]
   25ac0:	b	25b0c <main@@Base+0xfa70>
   25ac4:	movw	r0, #20037	; 0x4e45
   25ac8:	movt	r0, #20047	; 0x4e4f
   25acc:	teq	r9, r0
   25ad0:	bne	25b20 <main@@Base+0xfa84>
   25ad4:	mov	r0, r6
   25ad8:	mov	r1, sl
   25adc:	mov	r2, r5
   25ae0:	mov	r3, #4
   25ae4:	str	r7, [sp]
   25ae8:	mov	r4, lr
   25aec:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   25af0:	mov	lr, r4
   25af4:	cmp	r0, sl
   25af8:	beq	25b20 <main@@Base+0xfa84>
   25afc:	ldr	r2, [fp, #8]
   25b00:	mov	r1, #0
   25b04:	str	r1, [r2]
   25b08:	str	r1, [r2, #4]
   25b0c:	str	r1, [lr]
   25b10:	mov	sl, r0
   25b14:	mov	r0, sl
   25b18:	sub	sp, fp, #28
   25b1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25b20:	movw	r0, #28016	; 0x6d70
   25b24:	movw	r1, #29556	; 0x7374
   25b28:	movt	r0, #21353	; 0x5369
   25b2c:	movt	r1, #21605	; 0x5465
   25b30:	eor	r0, r8, r0
   25b34:	eor	r1, r9, r1
   25b38:	orrs	r0, r0, r1
   25b3c:	bne	25b14 <main@@Base+0xfa78>
   25b40:	str	lr, [sp, #8]
   25b44:	add	lr, sl, #8
   25b48:	sub	r0, r5, lr
   25b4c:	cmp	r0, #8
   25b50:	movcs	r0, #8
   25b54:	and	r0, r0, #15
   25b58:	sub	r5, r0, #1
   25b5c:	cmp	r5, #7
   25b60:	bhi	25b14 <main@@Base+0xfa78>
   25b64:	add	r1, pc, #32
   25b68:	mov	r9, #0
   25b6c:	mov	ip, #0
   25b70:	mov	r8, #0
   25b74:	mov	r2, #0
   25b78:	mov	r3, #0
   25b7c:	mov	r0, #0
   25b80:	mov	r4, #0
   25b84:	mov	r6, #0
   25b88:	ldr	pc, [r1, r5, lsl #2]
   25b8c:	strdeq	r5, [r2], -r0
   25b90:	andeq	r5, r2, r8, ror #23
   25b94:	andeq	r5, r2, r0, ror #23
   25b98:	ldrdeq	r5, [r2], -r8
   25b9c:	andeq	r5, r2, ip, asr #23
   25ba0:	andeq	r5, r2, r0, asr #23
   25ba4:			; <UNDEFINED> instruction: 0x00025bb0
   25ba8:	andeq	r5, r2, ip, lsr #23
   25bac:	ldrb	ip, [sl, #15]
   25bb0:	ldrb	r0, [sl, #14]
   25bb4:	mov	r8, r9
   25bb8:	orr	r0, ip, r0, lsl #8
   25bbc:	mov	r9, r0
   25bc0:	ldrb	r0, [sl, #13]
   25bc4:	mov	r2, r8
   25bc8:	orr	r9, r9, r0, lsl #16
   25bcc:	ldrb	r0, [sl, #12]
   25bd0:	mov	r3, r2
   25bd4:	orr	r9, r9, r0, lsl #24
   25bd8:	ldrb	r0, [sl, #11]
   25bdc:	orr	r0, r0, r3
   25be0:	ldrb	r1, [sl, #10]
   25be4:	orr	r4, r0, r1, lsl #8
   25be8:	ldrb	r0, [sl, #9]
   25bec:	orr	r6, r4, r0, lsl #16
   25bf0:	ldrb	r1, [lr]
   25bf4:	movw	r0, #25943	; 0x6557
   25bf8:	movw	r2, #21601	; 0x5461
   25bfc:	movt	r0, #25196	; 0x626c
   25c00:	movt	r2, #27749	; 0x6c65
   25c04:	eor	r0, r9, r0
   25c08:	orr	r1, r6, r1, lsl #24
   25c0c:	eor	r1, r1, r2
   25c10:	orrs	r0, r0, r1
   25c14:	bne	25b14 <main@@Base+0xfa78>
   25c18:	ldr	r0, [sp, #16]
   25c1c:	add	r9, sl, #16
   25c20:	sub	r0, r0, r9
   25c24:	cmp	r0, #8
   25c28:	movcs	r0, #8
   25c2c:	and	r0, r0, #15
   25c30:	sub	r3, r0, #1
   25c34:	cmp	r3, #7
   25c38:	bhi	25b14 <main@@Base+0xfa78>
   25c3c:	add	r1, pc, #28
   25c40:	mov	r0, #0
   25c44:	mov	ip, #0
   25c48:	mov	lr, #0
   25c4c:	mov	r2, #0
   25c50:	mov	r5, #0
   25c54:	mov	r6, #0
   25c58:	mov	r4, #0
   25c5c:	ldr	pc, [r1, r3, lsl #2]
   25c60:			; <UNDEFINED> instruction: 0x00025cbc
   25c64:			; <UNDEFINED> instruction: 0x00025cb4
   25c68:	andeq	r5, r2, ip, lsr #25
   25c6c:	andeq	r5, r2, r4, lsr #25
   25c70:	muleq	r2, r8, ip
   25c74:	andeq	r5, r2, r8, lsl #25
   25c78:	andeq	r5, r2, r0, lsl #25
   25c7c:	andeq	r5, r2, r0, lsl #25
   25c80:	ldrb	r1, [sl, #22]
   25c84:	lsl	ip, r1, #8
   25c88:	ldrb	r1, [sl, #21]
   25c8c:	mov	lr, r0
   25c90:	orr	r1, ip, r1, lsl #16
   25c94:	mov	r0, r1
   25c98:	ldrb	r1, [sl, #20]
   25c9c:	mov	r2, lr
   25ca0:	orr	r0, r0, r1, lsl #24
   25ca4:	ldrb	r1, [sl, #19]
   25ca8:	orr	r5, r1, r2
   25cac:	ldrb	r1, [sl, #18]
   25cb0:	orr	r6, r5, r1, lsl #8
   25cb4:	ldrb	r1, [sl, #17]
   25cb8:	orr	r4, r6, r1, lsl #16
   25cbc:	movw	r1, #27904	; 0x6d00
   25cc0:	movw	r2, #26693	; 0x6845
   25cc4:	movt	r1, #28277	; 0x6e75
   25cc8:	movt	r2, #26996	; 0x6974
   25ccc:	eor	r0, r0, r1
   25cd0:	ldrb	r1, [r9]
   25cd4:	orr	r1, r4, r1, lsl #24
   25cd8:	eor	r1, r1, r2
   25cdc:	orrs	r0, r0, r1
   25ce0:	bne	25b14 <main@@Base+0xfa78>
   25ce4:	ldr	r0, [sp, #12]
   25ce8:	ldr	r2, [sp, #16]
   25cec:	mov	r1, r9
   25cf0:	mov	r3, #7
   25cf4:	str	r7, [sp]
   25cf8:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   25cfc:	ldr	r3, [fp, #8]
   25d00:	cmp	r0, r9
   25d04:	beq	25b14 <main@@Base+0xfa78>
   25d08:	mov	r2, #2
   25d0c:	mov	r1, #0
   25d10:	str	r2, [r3]
   25d14:	str	r1, [r3, #4]
   25d18:	ldr	r2, [sp, #8]
   25d1c:	str	r1, [r2]
   25d20:	b	25b10 <main@@Base+0xfa74>
   25d24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25d28:	add	fp, sp, #28
   25d2c:	sub	sp, sp, #44	; 0x2c
   25d30:	mov	r7, r2
   25d34:	ldr	r2, [fp, #8]
   25d38:	mov	r5, r0
   25d3c:	mov	r0, #0
   25d40:	mov	r8, r3
   25d44:	cmp	r1, r7
   25d48:	strb	r0, [r2]
   25d4c:	beq	25d70 <main@@Base+0xfcd4>
   25d50:	ldrb	r0, [r1]
   25d54:	cmp	r0, #46	; 0x2e
   25d58:	beq	25d98 <main@@Base+0xfcfc>
   25d5c:	cmp	r0, #34	; 0x22
   25d60:	bne	25f1c <main@@Base+0xfe80>
   25d64:	mov	r0, #0
   25d68:	add	r1, r1, #1
   25d6c:	str	r0, [r5, #12]
   25d70:	ldr	r0, [r5, #12]
   25d74:	cmp	r0, #0
   25d78:	beq	25db8 <main@@Base+0xfd1c>
   25d7c:	mov	r6, r1
   25d80:	cmp	r6, r7
   25d84:	bne	25dfc <main@@Base+0xfd60>
   25d88:	mov	r4, r7
   25d8c:	mov	r0, r4
   25d90:	sub	sp, fp, #28
   25d94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25d98:	mov	r0, r5
   25d9c:	mov	r2, r7
   25da0:	mov	r3, #5
   25da4:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   25da8:	mov	r1, r0
   25dac:	ldr	r0, [r5, #12]
   25db0:	cmp	r0, #0
   25db4:	bne	25d7c <main@@Base+0xfce0>
   25db8:	sub	r0, r7, r1
   25dbc:	cmp	r0, #2
   25dc0:	blt	25de4 <main@@Base+0xfd48>
   25dc4:	ldrb	r0, [r1]
   25dc8:	cmp	r0, #32
   25dcc:	bhi	25d7c <main@@Base+0xfce0>
   25dd0:	bne	25de4 <main@@Base+0xfd48>
   25dd4:	mov	r6, r1
   25dd8:	ldrb	r0, [r6, #1]!
   25ddc:	cmp	r0, #32
   25de0:	bhi	25df4 <main@@Base+0xfd58>
   25de4:	mov	r0, r5
   25de8:	mov	r2, r7
   25dec:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   25df0:	mov	r6, r0
   25df4:	cmp	r6, r7
   25df8:	beq	25d88 <main@@Base+0xfcec>
   25dfc:	add	r0, r8, #4
   25e00:	mov	r1, #0
   25e04:	add	sl, sp, #32
   25e08:	add	r9, sp, #28
   25e0c:	str	r8, [sp, #16]
   25e10:	str	r1, [sp, #20]
   25e14:	str	r0, [sp, #12]
   25e18:	ldr	r4, [r8]
   25e1c:	mov	r8, r0
   25e20:	add	r0, sp, #24
   25e24:	mov	r1, r6
   25e28:	mov	r2, r7
   25e2c:	mov	r3, r9
   25e30:	str	sl, [sp]
   25e34:	str	r0, [sp, #4]
   25e38:	mov	r0, r5
   25e3c:	blx	r4
   25e40:	cmp	r0, r7
   25e44:	beq	25ee8 <main@@Base+0xfe4c>
   25e48:	mov	r4, r0
   25e4c:	cmp	r0, r6
   25e50:	bne	25e64 <main@@Base+0xfdc8>
   25e54:	ldr	r4, [r8], #4
   25e58:	cmp	r4, #0
   25e5c:	bne	25e20 <main@@Base+0xfd84>
   25e60:	b	25ef8 <main@@Base+0xfe5c>
   25e64:	ldr	r0, [sp, #28]
   25e68:	cmp	r0, #0
   25e6c:	beq	25e94 <main@@Base+0xfdf8>
   25e70:	mov	r0, r5
   25e74:	mov	r1, r4
   25e78:	mov	r2, r7
   25e7c:	mov	r3, #8
   25e80:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   25e84:	ldr	r8, [sp, #16]
   25e88:	cmp	r0, r7
   25e8c:	bne	25eb8 <main@@Base+0xfe1c>
   25e90:	b	25f34 <main@@Base+0xfe98>
   25e94:	ldr	r0, [sp, #32]
   25e98:	ldr	r1, [sp, #36]	; 0x24
   25e9c:	orrs	r0, r0, r1
   25ea0:	movwne	r0, #1
   25ea4:	str	r0, [sp, #20]
   25ea8:	mov	r0, r4
   25eac:	ldr	r8, [sp, #16]
   25eb0:	cmp	r0, r7
   25eb4:	beq	25f34 <main@@Base+0xfe98>
   25eb8:	ldr	r0, [fp, #8]
   25ebc:	ldr	r2, [sp, #20]
   25ec0:	mov	r6, r4
   25ec4:	mov	r1, r0
   25ec8:	ldrb	r0, [r0]
   25ecc:	add	r0, r0, r2
   25ed0:	strb	r0, [r1]
   25ed4:	ldr	r0, [sp, #24]
   25ed8:	cmp	r0, #0
   25edc:	ldr	r0, [sp, #12]
   25ee0:	bne	25e18 <main@@Base+0xfd7c>
   25ee4:	b	25d8c <main@@Base+0xfcf0>
   25ee8:	mov	r4, r7
   25eec:	mov	r0, r4
   25ef0:	sub	sp, fp, #28
   25ef4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25ef8:	mov	r0, r5
   25efc:	mov	r1, r6
   25f00:	mov	r2, r7
   25f04:	mov	r3, #23
   25f08:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   25f0c:	mov	r4, r0
   25f10:	mov	r0, r4
   25f14:	sub	sp, fp, #28
   25f18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25f1c:	mov	r0, #1
   25f20:	str	r0, [r5, #12]
   25f24:	ldr	r0, [r5, #12]
   25f28:	cmp	r0, #0
   25f2c:	bne	25d7c <main@@Base+0xfce0>
   25f30:	b	25db8 <main@@Base+0xfd1c>
   25f34:	mov	r4, r7
   25f38:	mov	r0, r4
   25f3c:	sub	sp, fp, #28
   25f40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25f44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25f48:	add	fp, sp, #28
   25f4c:	sub	sp, sp, #36	; 0x24
   25f50:	mov	r6, r2
   25f54:	ldr	r2, [fp, #8]
   25f58:	mov	r5, r0
   25f5c:	mov	r0, #0
   25f60:	mov	r8, r3
   25f64:	cmp	r1, r6
   25f68:	str	r0, [r2]
   25f6c:	beq	25f90 <main@@Base+0xfef4>
   25f70:	ldrb	r0, [r1]
   25f74:	cmp	r0, #46	; 0x2e
   25f78:	beq	25fb8 <main@@Base+0xff1c>
   25f7c:	cmp	r0, #34	; 0x22
   25f80:	bne	260fc <main@@Base+0x10060>
   25f84:	mov	r0, #0
   25f88:	add	r1, r1, #1
   25f8c:	str	r0, [r5, #12]
   25f90:	ldr	r0, [r5, #12]
   25f94:	cmp	r0, #0
   25f98:	beq	25fd8 <main@@Base+0xff3c>
   25f9c:	mov	r7, r1
   25fa0:	cmp	r7, r6
   25fa4:	bne	2601c <main@@Base+0xff80>
   25fa8:	mov	r4, r6
   25fac:	mov	r0, r4
   25fb0:	sub	sp, fp, #28
   25fb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25fb8:	mov	r0, r5
   25fbc:	mov	r2, r6
   25fc0:	mov	r3, #5
   25fc4:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   25fc8:	mov	r1, r0
   25fcc:	ldr	r0, [r5, #12]
   25fd0:	cmp	r0, #0
   25fd4:	bne	25f9c <main@@Base+0xff00>
   25fd8:	sub	r0, r6, r1
   25fdc:	cmp	r0, #2
   25fe0:	blt	26004 <main@@Base+0xff68>
   25fe4:	ldrb	r0, [r1]
   25fe8:	cmp	r0, #32
   25fec:	bhi	25f9c <main@@Base+0xff00>
   25ff0:	bne	26004 <main@@Base+0xff68>
   25ff4:	mov	r7, r1
   25ff8:	ldrb	r0, [r7, #1]!
   25ffc:	cmp	r0, #32
   26000:	bhi	26014 <main@@Base+0xff78>
   26004:	mov	r0, r5
   26008:	mov	r2, r6
   2600c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   26010:	mov	r7, r0
   26014:	cmp	r7, r6
   26018:	beq	25fa8 <main@@Base+0xff0c>
   2601c:	add	r0, r8, #4
   26020:	add	sl, sp, #24
   26024:	add	r9, sp, #20
   26028:	str	r8, [sp, #12]
   2602c:	str	r0, [sp, #8]
   26030:	ldr	r4, [r8]
   26034:	mov	r8, r0
   26038:	add	r0, sp, #16
   2603c:	mov	r1, r7
   26040:	mov	r2, r6
   26044:	mov	r3, r9
   26048:	str	sl, [sp]
   2604c:	str	r0, [sp, #4]
   26050:	mov	r0, r5
   26054:	blx	r4
   26058:	cmp	r0, r6
   2605c:	beq	260c8 <main@@Base+0x1002c>
   26060:	mov	r4, r0
   26064:	cmp	r0, r7
   26068:	bne	2607c <main@@Base+0xffe0>
   2606c:	ldr	r4, [r8], #4
   26070:	cmp	r4, #0
   26074:	bne	26038 <main@@Base+0xff9c>
   26078:	b	260d8 <main@@Base+0x1003c>
   2607c:	ldr	r0, [sp, #24]
   26080:	ldr	r1, [sp, #28]
   26084:	bl	484e0 <flatcc_json_printer_clear@@Base+0x71c>
   26088:	ldr	r2, [fp, #8]
   2608c:	ldr	r1, [sp, #20]
   26090:	vmov	s2, r0
   26094:	ldr	r8, [sp, #12]
   26098:	mov	r7, r4
   2609c:	vneg.f32	s4, s2
   260a0:	vldr	s0, [r2]
   260a4:	cmp	r1, #0
   260a8:	vseleq.f32	s2, s2, s4
   260ac:	vadd.f32	s0, s0, s2
   260b0:	vstr	s0, [r2]
   260b4:	ldr	r0, [sp, #16]
   260b8:	cmp	r0, #0
   260bc:	ldr	r0, [sp, #8]
   260c0:	bne	26030 <main@@Base+0xff94>
   260c4:	b	25fac <main@@Base+0xff10>
   260c8:	mov	r4, r6
   260cc:	mov	r0, r4
   260d0:	sub	sp, fp, #28
   260d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   260d8:	mov	r0, r5
   260dc:	mov	r1, r7
   260e0:	mov	r2, r6
   260e4:	mov	r3, #23
   260e8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   260ec:	mov	r4, r0
   260f0:	mov	r0, r4
   260f4:	sub	sp, fp, #28
   260f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   260fc:	mov	r0, #1
   26100:	str	r0, [r5, #12]
   26104:	ldr	r0, [r5, #12]
   26108:	cmp	r0, #0
   2610c:	bne	25f9c <main@@Base+0xff00>
   26110:	b	25fd8 <main@@Base+0xff3c>
   26114:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26118:	add	fp, sp, #28
   2611c:	sub	sp, sp, #44	; 0x2c
   26120:	mov	r6, r2
   26124:	ldr	r2, [fp, #8]
   26128:	mov	r5, r0
   2612c:	mov	r0, #0
   26130:	mov	sl, r3
   26134:	cmp	r1, r6
   26138:	str	r0, [r2]
   2613c:	beq	26160 <main@@Base+0x100c4>
   26140:	ldrb	r0, [r1]
   26144:	cmp	r0, #46	; 0x2e
   26148:	beq	26188 <main@@Base+0x100ec>
   2614c:	cmp	r0, #34	; 0x22
   26150:	bne	26344 <main@@Base+0x102a8>
   26154:	mov	r0, #0
   26158:	add	r1, r1, #1
   2615c:	str	r0, [r5, #12]
   26160:	ldr	r0, [r5, #12]
   26164:	cmp	r0, #0
   26168:	beq	261a8 <main@@Base+0x1010c>
   2616c:	mov	r7, r1
   26170:	cmp	r7, r6
   26174:	bne	261ec <main@@Base+0x10150>
   26178:	mov	r4, r6
   2617c:	mov	r0, r4
   26180:	sub	sp, fp, #28
   26184:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26188:	mov	r0, r5
   2618c:	mov	r2, r6
   26190:	mov	r3, #5
   26194:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   26198:	mov	r1, r0
   2619c:	ldr	r0, [r5, #12]
   261a0:	cmp	r0, #0
   261a4:	bne	2616c <main@@Base+0x100d0>
   261a8:	sub	r0, r6, r1
   261ac:	cmp	r0, #2
   261b0:	blt	261d4 <main@@Base+0x10138>
   261b4:	ldrb	r0, [r1]
   261b8:	cmp	r0, #32
   261bc:	bhi	2616c <main@@Base+0x100d0>
   261c0:	bne	261d4 <main@@Base+0x10138>
   261c4:	mov	r7, r1
   261c8:	ldrb	r0, [r7, #1]!
   261cc:	cmp	r0, #32
   261d0:	bhi	261e4 <main@@Base+0x10148>
   261d4:	mov	r0, r5
   261d8:	mov	r2, r6
   261dc:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   261e0:	mov	r7, r0
   261e4:	cmp	r7, r6
   261e8:	beq	26178 <main@@Base+0x100dc>
   261ec:	add	r0, sl, #4
   261f0:	mov	r2, #0
   261f4:	add	r8, sp, #32
   261f8:	add	r9, sp, #28
   261fc:	str	sl, [sp, #16]
   26200:	str	r0, [sp, #12]
   26204:	ldr	r4, [sl]
   26208:	mov	sl, r0
   2620c:	str	r2, [sp, #20]
   26210:	add	r0, sp, #24
   26214:	mov	r1, r7
   26218:	mov	r2, r6
   2621c:	mov	r3, r9
   26220:	str	r8, [sp]
   26224:	str	r0, [sp, #4]
   26228:	mov	r0, r5
   2622c:	blx	r4
   26230:	cmp	r0, r6
   26234:	beq	26310 <main@@Base+0x10274>
   26238:	mov	r4, r0
   2623c:	cmp	r0, r7
   26240:	bne	26254 <main@@Base+0x101b8>
   26244:	ldr	r4, [sl], #4
   26248:	cmp	r4, #0
   2624c:	bne	26210 <main@@Base+0x10174>
   26250:	b	26320 <main@@Base+0x10284>
   26254:	ldr	r2, [sp, #28]
   26258:	ldr	r0, [sp, #32]
   2625c:	ldr	r1, [sp, #36]	; 0x24
   26260:	cmp	r2, #0
   26264:	beq	2628c <main@@Base+0x101f0>
   26268:	ldr	sl, [sp, #16]
   2626c:	subs	r2, r0, #-2147483647	; 0x80000001
   26270:	sbcs	r1, r1, #0
   26274:	bcc	262c0 <main@@Base+0x10224>
   26278:	mov	r0, r5
   2627c:	mov	r1, r4
   26280:	mov	r2, r6
   26284:	mov	r3, #8
   26288:	b	262ac <main@@Base+0x10210>
   2628c:	ldr	sl, [sp, #16]
   26290:	subs	r2, r0, #-2147483648	; 0x80000000
   26294:	sbcs	r1, r1, #0
   26298:	bcc	262d4 <main@@Base+0x10238>
   2629c:	mov	r0, r5
   262a0:	mov	r1, r4
   262a4:	mov	r2, r6
   262a8:	mov	r3, #7
   262ac:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   262b0:	ldr	r2, [sp, #20]
   262b4:	cmp	r0, r6
   262b8:	bne	262e4 <main@@Base+0x10248>
   262bc:	b	2635c <main@@Base+0x102c0>
   262c0:	rsb	r2, r0, #0
   262c4:	mov	r0, r4
   262c8:	cmp	r0, r6
   262cc:	bne	262e4 <main@@Base+0x10248>
   262d0:	b	2635c <main@@Base+0x102c0>
   262d4:	mov	r2, r0
   262d8:	mov	r0, r4
   262dc:	cmp	r0, r6
   262e0:	beq	2635c <main@@Base+0x102c0>
   262e4:	ldr	r0, [fp, #8]
   262e8:	mov	r7, r4
   262ec:	mov	r1, r0
   262f0:	ldr	r0, [r0]
   262f4:	add	r0, r0, r2
   262f8:	str	r0, [r1]
   262fc:	ldr	r0, [sp, #24]
   26300:	cmp	r0, #0
   26304:	ldr	r0, [sp, #12]
   26308:	bne	26204 <main@@Base+0x10168>
   2630c:	b	2617c <main@@Base+0x100e0>
   26310:	mov	r4, r6
   26314:	mov	r0, r4
   26318:	sub	sp, fp, #28
   2631c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26320:	mov	r0, r5
   26324:	mov	r1, r7
   26328:	mov	r2, r6
   2632c:	mov	r3, #23
   26330:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   26334:	mov	r4, r0
   26338:	mov	r0, r4
   2633c:	sub	sp, fp, #28
   26340:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26344:	mov	r0, #1
   26348:	str	r0, [r5, #12]
   2634c:	ldr	r0, [r5, #12]
   26350:	cmp	r0, #0
   26354:	bne	2616c <main@@Base+0x100d0>
   26358:	b	261a8 <main@@Base+0x1010c>
   2635c:	mov	r4, r6
   26360:	mov	r0, r4
   26364:	sub	sp, fp, #28
   26368:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2636c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26370:	add	fp, sp, #28
   26374:	sub	sp, sp, #44	; 0x2c
   26378:	mov	r6, r2
   2637c:	ldr	r2, [fp, #8]
   26380:	mov	r5, r0
   26384:	mov	r0, #0
   26388:	mov	sl, r3
   2638c:	cmp	r1, r6
   26390:	str	r0, [r2]
   26394:	str	r0, [r2, #4]
   26398:	beq	263bc <main@@Base+0x10320>
   2639c:	ldrb	r0, [r1]
   263a0:	cmp	r0, #46	; 0x2e
   263a4:	beq	263e4 <main@@Base+0x10348>
   263a8:	cmp	r0, #34	; 0x22
   263ac:	bne	2659c <main@@Base+0x10500>
   263b0:	mov	r0, #0
   263b4:	add	r1, r1, #1
   263b8:	str	r0, [r5, #12]
   263bc:	ldr	r0, [r5, #12]
   263c0:	cmp	r0, #0
   263c4:	beq	26404 <main@@Base+0x10368>
   263c8:	mov	r7, r1
   263cc:	cmp	r7, r6
   263d0:	bne	26448 <main@@Base+0x103ac>
   263d4:	mov	r4, r6
   263d8:	mov	r0, r4
   263dc:	sub	sp, fp, #28
   263e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   263e4:	mov	r0, r5
   263e8:	mov	r2, r6
   263ec:	mov	r3, #5
   263f0:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   263f4:	mov	r1, r0
   263f8:	ldr	r0, [r5, #12]
   263fc:	cmp	r0, #0
   26400:	bne	263c8 <main@@Base+0x1032c>
   26404:	sub	r0, r6, r1
   26408:	cmp	r0, #2
   2640c:	blt	26430 <main@@Base+0x10394>
   26410:	ldrb	r0, [r1]
   26414:	cmp	r0, #32
   26418:	bhi	263c8 <main@@Base+0x1032c>
   2641c:	bne	26430 <main@@Base+0x10394>
   26420:	mov	r7, r1
   26424:	ldrb	r0, [r7, #1]!
   26428:	cmp	r0, #32
   2642c:	bhi	26440 <main@@Base+0x103a4>
   26430:	mov	r0, r5
   26434:	mov	r2, r6
   26438:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2643c:	mov	r7, r0
   26440:	cmp	r7, r6
   26444:	beq	263d4 <main@@Base+0x10338>
   26448:	add	r0, sl, #4
   2644c:	mov	r1, #0
   26450:	add	r8, sp, #32
   26454:	add	r9, sp, #28
   26458:	mov	r2, #0
   2645c:	str	sl, [sp, #12]
   26460:	str	r0, [sp, #8]
   26464:	ldr	r4, [sl]
   26468:	mov	sl, r0
   2646c:	str	r2, [sp, #16]
   26470:	str	r1, [sp, #20]
   26474:	add	r0, sp, #24
   26478:	mov	r1, r7
   2647c:	mov	r2, r6
   26480:	mov	r3, r9
   26484:	str	r8, [sp]
   26488:	str	r0, [sp, #4]
   2648c:	mov	r0, r5
   26490:	blx	r4
   26494:	cmp	r0, r6
   26498:	beq	26568 <main@@Base+0x104cc>
   2649c:	mov	r4, r0
   264a0:	cmp	r0, r7
   264a4:	bne	264b8 <main@@Base+0x1041c>
   264a8:	ldr	r4, [sl], #4
   264ac:	cmp	r4, #0
   264b0:	bne	26474 <main@@Base+0x103d8>
   264b4:	b	26578 <main@@Base+0x104dc>
   264b8:	add	r2, sp, #28
   264bc:	ldm	r2, {r0, r1, r2}
   264c0:	cmp	r0, #0
   264c4:	beq	264ec <main@@Base+0x10450>
   264c8:	ldr	sl, [sp, #12]
   264cc:	subs	r0, r1, #1
   264d0:	sbcs	r0, r2, #-2147483648	; 0x80000000
   264d4:	bcc	26524 <main@@Base+0x10488>
   264d8:	mov	r0, r5
   264dc:	mov	r1, r4
   264e0:	mov	r2, r6
   264e4:	mov	r3, #8
   264e8:	b	2650c <main@@Base+0x10470>
   264ec:	ldr	sl, [sp, #12]
   264f0:	cmn	r2, #1
   264f4:	mov	r0, r4
   264f8:	bgt	26518 <main@@Base+0x1047c>
   264fc:	mov	r0, r5
   26500:	mov	r1, r4
   26504:	mov	r2, r6
   26508:	mov	r3, #7
   2650c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   26510:	ldr	r1, [sp, #20]
   26514:	ldr	r2, [sp, #16]
   26518:	cmp	r0, r6
   2651c:	bne	26538 <main@@Base+0x1049c>
   26520:	b	265b4 <main@@Base+0x10518>
   26524:	rsbs	r1, r1, #0
   26528:	mov	r0, r4
   2652c:	rsc	r2, r2, #0
   26530:	cmp	r0, r6
   26534:	beq	265b4 <main@@Base+0x10518>
   26538:	ldr	r0, [fp, #8]
   2653c:	mov	r7, r0
   26540:	ldm	r0, {r0, r3}
   26544:	adds	r0, r0, r1
   26548:	adc	r3, r3, r2
   2654c:	stm	r7, {r0, r3}
   26550:	mov	r7, r4
   26554:	ldr	r0, [sp, #24]
   26558:	cmp	r0, #0
   2655c:	ldr	r0, [sp, #8]
   26560:	bne	26464 <main@@Base+0x103c8>
   26564:	b	263d8 <main@@Base+0x1033c>
   26568:	mov	r4, r6
   2656c:	mov	r0, r4
   26570:	sub	sp, fp, #28
   26574:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26578:	mov	r0, r5
   2657c:	mov	r1, r7
   26580:	mov	r2, r6
   26584:	mov	r3, #23
   26588:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2658c:	mov	r4, r0
   26590:	mov	r0, r4
   26594:	sub	sp, fp, #28
   26598:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2659c:	mov	r0, #1
   265a0:	str	r0, [r5, #12]
   265a4:	ldr	r0, [r5, #12]
   265a8:	cmp	r0, #0
   265ac:	bne	263c8 <main@@Base+0x1032c>
   265b0:	b	26404 <main@@Base+0x10368>
   265b4:	mov	r4, r6
   265b8:	mov	r0, r4
   265bc:	sub	sp, fp, #28
   265c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   265c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   265c8:	add	fp, sp, #28
   265cc:	sub	sp, sp, #44	; 0x2c
   265d0:	mov	r6, r2
   265d4:	ldr	r2, [fp, #8]
   265d8:	mov	r5, r0
   265dc:	mov	r0, #0
   265e0:	mov	r8, r3
   265e4:	cmp	r1, r6
   265e8:	str	r0, [r2]
   265ec:	beq	26610 <main@@Base+0x10574>
   265f0:	ldrb	r0, [r1]
   265f4:	cmp	r0, #46	; 0x2e
   265f8:	beq	26638 <main@@Base+0x1059c>
   265fc:	cmp	r0, #34	; 0x22
   26600:	bne	267dc <main@@Base+0x10740>
   26604:	mov	r0, #0
   26608:	add	r1, r1, #1
   2660c:	str	r0, [r5, #12]
   26610:	ldr	r0, [r5, #12]
   26614:	cmp	r0, #0
   26618:	beq	26658 <main@@Base+0x105bc>
   2661c:	mov	r7, r1
   26620:	cmp	r7, r6
   26624:	bne	2669c <main@@Base+0x10600>
   26628:	mov	r4, r6
   2662c:	mov	r0, r4
   26630:	sub	sp, fp, #28
   26634:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26638:	mov	r0, r5
   2663c:	mov	r2, r6
   26640:	mov	r3, #5
   26644:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   26648:	mov	r1, r0
   2664c:	ldr	r0, [r5, #12]
   26650:	cmp	r0, #0
   26654:	bne	2661c <main@@Base+0x10580>
   26658:	sub	r0, r6, r1
   2665c:	cmp	r0, #2
   26660:	blt	26684 <main@@Base+0x105e8>
   26664:	ldrb	r0, [r1]
   26668:	cmp	r0, #32
   2666c:	bhi	2661c <main@@Base+0x10580>
   26670:	bne	26684 <main@@Base+0x105e8>
   26674:	mov	r7, r1
   26678:	ldrb	r0, [r7, #1]!
   2667c:	cmp	r0, #32
   26680:	bhi	26694 <main@@Base+0x105f8>
   26684:	mov	r0, r5
   26688:	mov	r2, r6
   2668c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   26690:	mov	r7, r0
   26694:	cmp	r7, r6
   26698:	beq	26628 <main@@Base+0x1058c>
   2669c:	add	r0, r8, #4
   266a0:	mov	r1, #0
   266a4:	add	sl, sp, #32
   266a8:	add	r9, sp, #28
   266ac:	str	r8, [sp, #16]
   266b0:	str	r1, [sp, #20]
   266b4:	str	r0, [sp, #12]
   266b8:	ldr	r4, [r8]
   266bc:	mov	r8, r0
   266c0:	add	r0, sp, #24
   266c4:	mov	r1, r7
   266c8:	mov	r2, r6
   266cc:	mov	r3, r9
   266d0:	str	sl, [sp]
   266d4:	str	r0, [sp, #4]
   266d8:	mov	r0, r5
   266dc:	blx	r4
   266e0:	cmp	r0, r6
   266e4:	beq	267a8 <main@@Base+0x1070c>
   266e8:	mov	r4, r0
   266ec:	cmp	r0, r7
   266f0:	bne	26704 <main@@Base+0x10668>
   266f4:	ldr	r4, [r8], #4
   266f8:	cmp	r4, #0
   266fc:	bne	266c0 <main@@Base+0x10624>
   26700:	b	267b8 <main@@Base+0x1071c>
   26704:	ldr	r0, [sp, #28]
   26708:	cmp	r0, #0
   2670c:	beq	26734 <main@@Base+0x10698>
   26710:	mov	r0, r5
   26714:	mov	r1, r4
   26718:	mov	r2, r6
   2671c:	mov	r3, #8
   26720:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   26724:	ldr	r8, [sp, #16]
   26728:	cmp	r0, r6
   2672c:	bne	26778 <main@@Base+0x106dc>
   26730:	b	267f4 <main@@Base+0x10758>
   26734:	ldr	r0, [sp, #36]	; 0x24
   26738:	ldr	r8, [sp, #16]
   2673c:	cmp	r0, #0
   26740:	beq	26764 <main@@Base+0x106c8>
   26744:	mov	r0, r5
   26748:	mov	r1, r4
   2674c:	mov	r2, r6
   26750:	mov	r3, #7
   26754:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   26758:	cmp	r0, r6
   2675c:	bne	26778 <main@@Base+0x106dc>
   26760:	b	267f4 <main@@Base+0x10758>
   26764:	ldr	r0, [sp, #32]
   26768:	str	r0, [sp, #20]
   2676c:	mov	r0, r4
   26770:	cmp	r0, r6
   26774:	beq	267f4 <main@@Base+0x10758>
   26778:	ldr	r0, [fp, #8]
   2677c:	ldr	r2, [sp, #20]
   26780:	mov	r7, r4
   26784:	mov	r1, r0
   26788:	ldr	r0, [r0]
   2678c:	add	r0, r0, r2
   26790:	str	r0, [r1]
   26794:	ldr	r0, [sp, #24]
   26798:	cmp	r0, #0
   2679c:	ldr	r0, [sp, #12]
   267a0:	bne	266b8 <main@@Base+0x1061c>
   267a4:	b	2662c <main@@Base+0x10590>
   267a8:	mov	r4, r6
   267ac:	mov	r0, r4
   267b0:	sub	sp, fp, #28
   267b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   267b8:	mov	r0, r5
   267bc:	mov	r1, r7
   267c0:	mov	r2, r6
   267c4:	mov	r3, #23
   267c8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   267cc:	mov	r4, r0
   267d0:	mov	r0, r4
   267d4:	sub	sp, fp, #28
   267d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   267dc:	mov	r0, #1
   267e0:	str	r0, [r5, #12]
   267e4:	ldr	r0, [r5, #12]
   267e8:	cmp	r0, #0
   267ec:	bne	2661c <main@@Base+0x10580>
   267f0:	b	26658 <main@@Base+0x105bc>
   267f4:	mov	r4, r6
   267f8:	mov	r0, r4
   267fc:	sub	sp, fp, #28
   26800:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26804:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26808:	add	fp, sp, #28
   2680c:	sub	sp, sp, #44	; 0x2c
   26810:	mov	r7, r2
   26814:	ldr	r2, [fp, #8]
   26818:	mov	r5, r0
   2681c:	mov	r0, #0
   26820:	mov	r8, r3
   26824:	cmp	r1, r7
   26828:	str	r0, [r2]
   2682c:	str	r0, [r2, #4]
   26830:	beq	26854 <main@@Base+0x107b8>
   26834:	ldrb	r0, [r1]
   26838:	cmp	r0, #46	; 0x2e
   2683c:	beq	2687c <main@@Base+0x107e0>
   26840:	cmp	r0, #34	; 0x22
   26844:	bne	26a0c <main@@Base+0x10970>
   26848:	mov	r0, #0
   2684c:	add	r1, r1, #1
   26850:	str	r0, [r5, #12]
   26854:	ldr	r0, [r5, #12]
   26858:	cmp	r0, #0
   2685c:	beq	2689c <main@@Base+0x10800>
   26860:	mov	r6, r1
   26864:	cmp	r6, r7
   26868:	bne	268e0 <main@@Base+0x10844>
   2686c:	mov	r4, r7
   26870:	mov	r0, r4
   26874:	sub	sp, fp, #28
   26878:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2687c:	mov	r0, r5
   26880:	mov	r2, r7
   26884:	mov	r3, #5
   26888:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2688c:	mov	r1, r0
   26890:	ldr	r0, [r5, #12]
   26894:	cmp	r0, #0
   26898:	bne	26860 <main@@Base+0x107c4>
   2689c:	sub	r0, r7, r1
   268a0:	cmp	r0, #2
   268a4:	blt	268c8 <main@@Base+0x1082c>
   268a8:	ldrb	r0, [r1]
   268ac:	cmp	r0, #32
   268b0:	bhi	26860 <main@@Base+0x107c4>
   268b4:	bne	268c8 <main@@Base+0x1082c>
   268b8:	mov	r6, r1
   268bc:	ldrb	r0, [r6, #1]!
   268c0:	cmp	r0, #32
   268c4:	bhi	268d8 <main@@Base+0x1083c>
   268c8:	mov	r0, r5
   268cc:	mov	r2, r7
   268d0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   268d4:	mov	r6, r0
   268d8:	cmp	r6, r7
   268dc:	beq	2686c <main@@Base+0x107d0>
   268e0:	mov	r1, #0
   268e4:	add	r0, r8, #4
   268e8:	add	sl, sp, #32
   268ec:	add	r9, sp, #28
   268f0:	str	r8, [sp, #12]
   268f4:	str	r1, [sp, #20]
   268f8:	mov	r1, #0
   268fc:	str	r0, [sp, #8]
   26900:	str	r1, [sp, #16]
   26904:	ldr	r4, [r8]
   26908:	mov	r8, r0
   2690c:	add	r0, sp, #24
   26910:	mov	r1, r6
   26914:	mov	r2, r7
   26918:	mov	r3, r9
   2691c:	str	sl, [sp]
   26920:	str	r0, [sp, #4]
   26924:	mov	r0, r5
   26928:	blx	r4
   2692c:	cmp	r0, r7
   26930:	beq	269d8 <main@@Base+0x1093c>
   26934:	mov	r4, r0
   26938:	cmp	r0, r6
   2693c:	bne	26950 <main@@Base+0x108b4>
   26940:	ldr	r4, [r8], #4
   26944:	cmp	r4, #0
   26948:	bne	2690c <main@@Base+0x10870>
   2694c:	b	269e8 <main@@Base+0x1094c>
   26950:	ldr	r0, [sp, #28]
   26954:	cmp	r0, #0
   26958:	beq	26980 <main@@Base+0x108e4>
   2695c:	mov	r0, r5
   26960:	mov	r1, r4
   26964:	mov	r2, r7
   26968:	mov	r3, #8
   2696c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   26970:	ldr	r8, [sp, #12]
   26974:	cmp	r0, r7
   26978:	bne	269a0 <main@@Base+0x10904>
   2697c:	b	26a24 <main@@Base+0x10988>
   26980:	ldr	r0, [sp, #32]
   26984:	str	r0, [sp, #20]
   26988:	ldr	r0, [sp, #36]	; 0x24
   2698c:	str	r0, [sp, #16]
   26990:	mov	r0, r4
   26994:	ldr	r8, [sp, #12]
   26998:	cmp	r0, r7
   2699c:	beq	26a24 <main@@Base+0x10988>
   269a0:	ldr	r0, [fp, #8]
   269a4:	ldr	r3, [sp, #20]
   269a8:	mov	r6, r4
   269ac:	mov	r2, r0
   269b0:	ldrd	r0, [r0]
   269b4:	adds	r0, r0, r3
   269b8:	ldr	r3, [sp, #16]
   269bc:	adc	r1, r1, r3
   269c0:	strd	r0, [r2]
   269c4:	ldr	r0, [sp, #24]
   269c8:	cmp	r0, #0
   269cc:	ldr	r0, [sp, #8]
   269d0:	bne	26904 <main@@Base+0x10868>
   269d4:	b	26870 <main@@Base+0x107d4>
   269d8:	mov	r4, r7
   269dc:	mov	r0, r4
   269e0:	sub	sp, fp, #28
   269e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   269e8:	mov	r0, r5
   269ec:	mov	r1, r6
   269f0:	mov	r2, r7
   269f4:	mov	r3, #23
   269f8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   269fc:	mov	r4, r0
   26a00:	mov	r0, r4
   26a04:	sub	sp, fp, #28
   26a08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26a0c:	mov	r0, #1
   26a10:	str	r0, [r5, #12]
   26a14:	ldr	r0, [r5, #12]
   26a18:	cmp	r0, #0
   26a1c:	bne	26860 <main@@Base+0x107c4>
   26a20:	b	2689c <main@@Base+0x10800>
   26a24:	mov	r4, r7
   26a28:	mov	r0, r4
   26a2c:	sub	sp, fp, #28
   26a30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26a34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26a38:	add	fp, sp, #28
   26a3c:	sub	sp, sp, #36	; 0x24
   26a40:	mov	r6, r2
   26a44:	ldr	r2, [fp, #8]
   26a48:	mov	r5, r0
   26a4c:	mov	r0, #0
   26a50:	mov	r8, r3
   26a54:	cmp	r1, r6
   26a58:	str	r0, [r2]
   26a5c:	str	r0, [r2, #4]
   26a60:	beq	26a84 <main@@Base+0x109e8>
   26a64:	ldrb	r0, [r1]
   26a68:	cmp	r0, #46	; 0x2e
   26a6c:	beq	26aac <main@@Base+0x10a10>
   26a70:	cmp	r0, #34	; 0x22
   26a74:	bne	26bf8 <main@@Base+0x10b5c>
   26a78:	mov	r0, #0
   26a7c:	add	r1, r1, #1
   26a80:	str	r0, [r5, #12]
   26a84:	ldr	r0, [r5, #12]
   26a88:	cmp	r0, #0
   26a8c:	beq	26acc <main@@Base+0x10a30>
   26a90:	mov	r7, r1
   26a94:	cmp	r7, r6
   26a98:	bne	26b10 <main@@Base+0x10a74>
   26a9c:	mov	r4, r6
   26aa0:	mov	r0, r4
   26aa4:	sub	sp, fp, #28
   26aa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26aac:	mov	r0, r5
   26ab0:	mov	r2, r6
   26ab4:	mov	r3, #5
   26ab8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   26abc:	mov	r1, r0
   26ac0:	ldr	r0, [r5, #12]
   26ac4:	cmp	r0, #0
   26ac8:	bne	26a90 <main@@Base+0x109f4>
   26acc:	sub	r0, r6, r1
   26ad0:	cmp	r0, #2
   26ad4:	blt	26af8 <main@@Base+0x10a5c>
   26ad8:	ldrb	r0, [r1]
   26adc:	cmp	r0, #32
   26ae0:	bhi	26a90 <main@@Base+0x109f4>
   26ae4:	bne	26af8 <main@@Base+0x10a5c>
   26ae8:	mov	r7, r1
   26aec:	ldrb	r0, [r7, #1]!
   26af0:	cmp	r0, #32
   26af4:	bhi	26b08 <main@@Base+0x10a6c>
   26af8:	mov	r0, r5
   26afc:	mov	r2, r6
   26b00:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   26b04:	mov	r7, r0
   26b08:	cmp	r7, r6
   26b0c:	beq	26a9c <main@@Base+0x10a00>
   26b10:	add	r0, r8, #4
   26b14:	add	sl, sp, #24
   26b18:	add	r9, sp, #20
   26b1c:	str	r8, [sp, #12]
   26b20:	str	r0, [sp, #8]
   26b24:	ldr	r4, [r8]
   26b28:	mov	r8, r0
   26b2c:	add	r0, sp, #16
   26b30:	mov	r1, r7
   26b34:	mov	r2, r6
   26b38:	mov	r3, r9
   26b3c:	str	sl, [sp]
   26b40:	str	r0, [sp, #4]
   26b44:	mov	r0, r5
   26b48:	blx	r4
   26b4c:	cmp	r0, r6
   26b50:	beq	26bc4 <main@@Base+0x10b28>
   26b54:	mov	r4, r0
   26b58:	cmp	r0, r7
   26b5c:	bne	26b70 <main@@Base+0x10ad4>
   26b60:	ldr	r4, [r8], #4
   26b64:	cmp	r4, #0
   26b68:	bne	26b2c <main@@Base+0x10a90>
   26b6c:	b	26bd4 <main@@Base+0x10b38>
   26b70:	ldr	r0, [sp, #24]
   26b74:	ldr	r1, [sp, #28]
   26b78:	bl	482a8 <flatcc_json_printer_clear@@Base+0x4e4>
   26b7c:	ldr	r2, [fp, #8]
   26b80:	ldr	r3, [sp, #20]
   26b84:	vmov	d17, r0, r1
   26b88:	ldr	r8, [sp, #12]
   26b8c:	vldr	d16, [r2]
   26b90:	mov	r7, r2
   26b94:	eor	r2, r1, #-2147483648	; 0x80000000
   26b98:	cmp	r3, #0
   26b9c:	vmov	d18, r0, r2
   26ba0:	vseleq.f64	d17, d17, d18
   26ba4:	vadd.f64	d16, d16, d17
   26ba8:	vstr	d16, [r7]
   26bac:	mov	r7, r4
   26bb0:	ldr	r0, [sp, #16]
   26bb4:	cmp	r0, #0
   26bb8:	ldr	r0, [sp, #8]
   26bbc:	bne	26b24 <main@@Base+0x10a88>
   26bc0:	b	26aa0 <main@@Base+0x10a04>
   26bc4:	mov	r4, r6
   26bc8:	mov	r0, r4
   26bcc:	sub	sp, fp, #28
   26bd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26bd4:	mov	r0, r5
   26bd8:	mov	r1, r7
   26bdc:	mov	r2, r6
   26be0:	mov	r3, #23
   26be4:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   26be8:	mov	r4, r0
   26bec:	mov	r0, r4
   26bf0:	sub	sp, fp, #28
   26bf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26bf8:	mov	r0, #1
   26bfc:	str	r0, [r5, #12]
   26c00:	ldr	r0, [r5, #12]
   26c04:	cmp	r0, #0
   26c08:	bne	26a90 <main@@Base+0x109f4>
   26c0c:	b	26acc <main@@Base+0x10a30>
   26c10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26c14:	add	fp, sp, #28
   26c18:	sub	sp, sp, #12
   26c1c:	mov	sl, r1
   26c20:	sub	r1, r2, r1
   26c24:	cmp	r1, #8
   26c28:	movcs	r1, #8
   26c2c:	and	r1, r1, #15
   26c30:	sub	r5, r1, #1
   26c34:	cmp	r5, #7
   26c38:	bhi	26e74 <main@@Base+0x10dd8>
   26c3c:	str	r3, [sp, #8]
   26c40:	add	r7, pc, #32
   26c44:	mov	r8, #0
   26c48:	mov	ip, #0
   26c4c:	mov	lr, #0
   26c50:	mov	r9, #0
   26c54:	mov	r6, #0
   26c58:	mov	r1, #0
   26c5c:	mov	r3, #0
   26c60:	mov	r4, #0
   26c64:	ldr	pc, [r7, r5, lsl #2]
   26c68:	andeq	r6, r2, ip, asr #25
   26c6c:	andeq	r6, r2, r4, asr #25
   26c70:			; <UNDEFINED> instruction: 0x00026cbc
   26c74:			; <UNDEFINED> instruction: 0x00026cb4
   26c78:	andeq	r6, r2, r8, lsr #25
   26c7c:	muleq	r2, ip, ip
   26c80:	andeq	r6, r2, ip, lsl #25
   26c84:	andeq	r6, r2, r8, lsl #25
   26c88:	ldrb	ip, [sl, #7]
   26c8c:	ldrb	r1, [sl, #6]
   26c90:	mov	lr, r8
   26c94:	orr	r1, ip, r1, lsl #8
   26c98:	mov	r8, r1
   26c9c:	ldrb	r1, [sl, #5]
   26ca0:	mov	r9, lr
   26ca4:	orr	r8, r8, r1, lsl #16
   26ca8:	ldrb	r1, [sl, #4]
   26cac:	mov	r6, r9
   26cb0:	orr	r8, r8, r1, lsl #24
   26cb4:	ldrb	r1, [sl, #3]
   26cb8:	orr	r1, r1, r6
   26cbc:	ldrb	r3, [sl, #2]
   26cc0:	orr	r3, r1, r3, lsl #8
   26cc4:	ldrb	r1, [sl, #1]
   26cc8:	orr	r4, r3, r1, lsl #16
   26ccc:	movw	r1, #28276	; 0x6e74
   26cd0:	movw	r7, #20577	; 0x5061
   26cd4:	ldr	r6, [fp, #12]
   26cd8:	movt	r1, #29285	; 0x7265
   26cdc:	movt	r7, #18798	; 0x496e
   26ce0:	eor	r3, r8, r1
   26ce4:	ldrb	r1, [sl]
   26ce8:	orr	r1, r4, r1, lsl #24
   26cec:	eor	r7, r1, r7
   26cf0:	orrs	r3, r3, r7
   26cf4:	bne	26e28 <main@@Base+0x10d8c>
   26cf8:	add	r8, sl, #8
   26cfc:	sub	r1, r2, r8
   26d00:	cmp	r1, #8
   26d04:	movcs	r1, #8
   26d08:	and	r1, r1, #15
   26d0c:	sub	r7, r1, #1
   26d10:	cmp	r7, #7
   26d14:	bhi	26e74 <main@@Base+0x10dd8>
   26d18:	str	r0, [sp, #4]
   26d1c:	add	lr, pc, #32
   26d20:	mov	r6, #0
   26d24:	mov	r0, #0
   26d28:	mov	r1, #0
   26d2c:	mov	r5, #0
   26d30:	mov	r4, #0
   26d34:	mov	r3, #0
   26d38:	mov	ip, #0
   26d3c:	mov	r9, #0
   26d40:	ldr	pc, [lr, r7, lsl #2]
   26d44:	andeq	r6, r2, r8, lsr #27
   26d48:	andeq	r6, r2, r0, lsr #27
   26d4c:	muleq	r2, r8, sp
   26d50:	muleq	r2, r0, sp
   26d54:	andeq	r6, r2, r4, lsl #27
   26d58:	andeq	r6, r2, r8, ror sp
   26d5c:	andeq	r6, r2, r8, ror #26
   26d60:	andeq	r6, r2, r4, ror #26
   26d64:	ldrb	r0, [sl, #15]
   26d68:	ldrb	r1, [sl, #14]
   26d6c:	orr	r0, r0, r1, lsl #8
   26d70:	mov	r1, r6
   26d74:	mov	r6, r0
   26d78:	ldrb	r0, [sl, #13]
   26d7c:	mov	r5, r1
   26d80:	orr	r6, r6, r0, lsl #16
   26d84:	ldrb	r0, [sl, #12]
   26d88:	mov	r4, r5
   26d8c:	orr	r6, r6, r0, lsl #24
   26d90:	ldrb	r0, [sl, #11]
   26d94:	orr	r3, r0, r4
   26d98:	ldrb	r0, [sl, #10]
   26d9c:	orr	ip, r3, r0, lsl #8
   26da0:	ldrb	r0, [sl, #9]
   26da4:	orr	r9, ip, r0, lsl #16
   26da8:	ldrb	r1, [r8]
   26dac:	movw	r0, #24931	; 0x6163
   26db0:	movw	r3, #28005	; 0x6d65
   26db4:	movt	r0, #29552	; 0x7370
   26db8:	movt	r3, #20065	; 0x4e61
   26dbc:	eor	r0, r6, r0
   26dc0:	orr	r1, r9, r1, lsl #24
   26dc4:	eor	r1, r1, r3
   26dc8:	orrs	r0, r0, r1
   26dcc:	bne	26e74 <main@@Base+0x10dd8>
   26dd0:	add	r6, sl, #16
   26dd4:	mov	r1, #-268435456	; 0xf0000000
   26dd8:	sub	r0, r2, r6
   26ddc:	cmp	r0, #8
   26de0:	movcs	r0, #8
   26de4:	add	r0, r1, r0, lsl #28
   26de8:	asr	r0, r0, #28
   26dec:	cmp	r0, #0
   26df0:	blt	26e74 <main@@Base+0x10dd8>
   26df4:	ldrb	r0, [r6]
   26df8:	cmp	r0, #101	; 0x65
   26dfc:	bne	26e74 <main@@Base+0x10dd8>
   26e00:	ldr	r0, [fp, #12]
   26e04:	mov	r1, r6
   26e08:	mov	r3, #1
   26e0c:	mov	r8, #1
   26e10:	str	r0, [sp]
   26e14:	ldr	r0, [sp, #4]
   26e18:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   26e1c:	cmp	r0, r6
   26e20:	bne	26e54 <main@@Base+0x10db8>
   26e24:	b	26e74 <main@@Base+0x10dd8>
   26e28:	movw	r3, #20037	; 0x4e45
   26e2c:	movt	r3, #20047	; 0x4e4f
   26e30:	teq	r1, r3
   26e34:	bne	26e74 <main@@Base+0x10dd8>
   26e38:	mov	r1, sl
   26e3c:	mov	r3, #4
   26e40:	str	r6, [sp]
   26e44:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   26e48:	cmp	r0, sl
   26e4c:	beq	26e74 <main@@Base+0x10dd8>
   26e50:	mov	r8, #0
   26e54:	mov	sl, r0
   26e58:	ldr	r0, [fp, #8]
   26e5c:	mov	r1, #0
   26e60:	str	r8, [r0]
   26e64:	str	r1, [r0, #4]
   26e68:	mov	r0, #0
   26e6c:	ldr	r1, [sp, #8]
   26e70:	str	r0, [r1]
   26e74:	mov	r0, sl
   26e78:	sub	sp, fp, #28
   26e7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26e80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26e84:	add	fp, sp, #28
   26e88:	sub	sp, sp, #12
   26e8c:	mov	r5, r1
   26e90:	sub	r1, r2, r1
   26e94:	cmp	r1, #8
   26e98:	movcs	r1, #8
   26e9c:	and	r1, r1, #15
   26ea0:	sub	r7, r1, #1
   26ea4:	cmp	r7, #7
   26ea8:	bhi	27024 <main@@Base+0x10f88>
   26eac:	str	r3, [sp, #8]
   26eb0:	add	r8, pc, #32
   26eb4:	mov	lr, #0
   26eb8:	mov	ip, #0
   26ebc:	mov	r9, #0
   26ec0:	mov	sl, #0
   26ec4:	mov	r1, #0
   26ec8:	mov	r3, #0
   26ecc:	mov	r4, #0
   26ed0:	mov	r6, #0
   26ed4:	ldr	pc, [r8, r7, lsl #2]
   26ed8:	andeq	r6, r2, ip, lsr pc
   26edc:	andeq	r6, r2, r4, lsr pc
   26ee0:	andeq	r6, r2, ip, lsr #30
   26ee4:	andeq	r6, r2, r4, lsr #30
   26ee8:	andeq	r6, r2, r8, lsl pc
   26eec:	andeq	r6, r2, ip, lsl #30
   26ef0:	strdeq	r6, [r2], -ip
   26ef4:	strdeq	r6, [r2], -r8
   26ef8:	ldrb	ip, [r5, #7]
   26efc:	ldrb	r1, [r5, #6]
   26f00:	mov	r9, lr
   26f04:	orr	r1, ip, r1, lsl #8
   26f08:	mov	lr, r1
   26f0c:	ldrb	r1, [r5, #5]
   26f10:	mov	sl, r9
   26f14:	orr	lr, lr, r1, lsl #16
   26f18:	ldrb	r1, [r5, #4]
   26f1c:	orr	lr, lr, r1, lsl #24
   26f20:	mov	r1, sl
   26f24:	ldrb	r3, [r5, #3]
   26f28:	orr	r3, r3, r1
   26f2c:	ldrb	r1, [r5, #2]
   26f30:	orr	r4, r3, r1, lsl #8
   26f34:	ldrb	r1, [r5, #1]
   26f38:	orr	r6, r4, r1, lsl #16
   26f3c:	ldrb	r1, [r5]
   26f40:	ldr	r3, [fp, #12]
   26f44:	ldr	r8, [fp, #8]
   26f48:	orr	r1, r6, r1, lsl #24
   26f4c:	movw	r6, #30769	; 0x7831
   26f50:	movt	r6, #26725	; 0x6865
   26f54:	cmp	r1, r6
   26f58:	bhi	26f88 <main@@Base+0x10eec>
   26f5c:	teq	r1, r6
   26f60:	bne	27024 <main@@Base+0x10f88>
   26f64:	str	r3, [sp]
   26f68:	mov	r1, r5
   26f6c:	mov	r3, #4
   26f70:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   26f74:	cmp	r0, r5
   26f78:	beq	27024 <main@@Base+0x10f88>
   26f7c:	mov	r1, #0
   26f80:	mov	r2, #3
   26f84:	b	27010 <main@@Base+0x10f74>
   26f88:	lsr	r4, lr, #16
   26f8c:	movw	r7, #25959	; 0x6567
   26f90:	movw	r6, #26725	; 0x6865
   26f94:	orr	r4, r4, r1, lsl #16
   26f98:	movt	r7, #30830	; 0x786e
   26f9c:	eor	r6, r6, r1, lsr #16
   26fa0:	eor	r7, r4, r7
   26fa4:	orrs	r7, r7, r6
   26fa8:	bne	26fdc <main@@Base+0x10f40>
   26fac:	str	r3, [sp]
   26fb0:	mov	r1, r5
   26fb4:	mov	r3, #6
   26fb8:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   26fbc:	cmp	r0, r5
   26fc0:	beq	27024 <main@@Base+0x10f88>
   26fc4:	mvn	r2, #1
   26fc8:	mvn	r1, #0
   26fcc:	str	r2, [r8]
   26fd0:	str	r1, [r8, #4]
   26fd4:	mov	r1, #1
   26fd8:	b	27018 <main@@Base+0x10f7c>
   26fdc:	movw	r7, #30770	; 0x7832
   26fe0:	movt	r7, #26725	; 0x6865
   26fe4:	teq	r1, r7
   26fe8:	bne	27024 <main@@Base+0x10f88>
   26fec:	str	r3, [sp]
   26ff0:	mov	r1, r5
   26ff4:	mov	r3, #4
   26ff8:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   26ffc:	cmp	r0, r5
   27000:	beq	27024 <main@@Base+0x10f88>
   27004:	movw	r2, #48815	; 0xbeaf
   27008:	mov	r1, #0
   2700c:	movt	r2, #32431	; 0x7eaf
   27010:	str	r2, [r8]
   27014:	str	r1, [r8, #4]
   27018:	ldr	r2, [sp, #8]
   2701c:	mov	r5, r0
   27020:	str	r1, [r2]
   27024:	mov	r0, r5
   27028:	sub	sp, fp, #28
   2702c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27030:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27034:	add	fp, sp, #28
   27038:	sub	sp, sp, #12
   2703c:	mov	sl, r1
   27040:	sub	r1, r2, r1
   27044:	cmp	r1, #8
   27048:	movcs	r1, #8
   2704c:	and	r1, r1, #15
   27050:	sub	r4, r1, #1
   27054:	cmp	r4, #7
   27058:	bhi	27218 <main@@Base+0x1117c>
   2705c:	str	r3, [sp, #8]
   27060:	add	r8, pc, #32
   27064:	mov	r9, #0
   27068:	mov	ip, #0
   2706c:	mov	lr, #0
   27070:	mov	r7, #0
   27074:	mov	r6, #0
   27078:	mov	r3, #0
   2707c:	mov	r1, #0
   27080:	mov	r5, #0
   27084:	ldr	pc, [r8, r4, lsl #2]
   27088:	andeq	r7, r2, ip, ror #1
   2708c:	andeq	r7, r2, r4, ror #1
   27090:	ldrdeq	r7, [r2], -ip
   27094:	ldrdeq	r7, [r2], -r4
   27098:	andeq	r7, r2, r8, asr #1
   2709c:	strheq	r7, [r2], -ip
   270a0:	andeq	r7, r2, ip, lsr #1
   270a4:	andeq	r7, r2, r8, lsr #1
   270a8:	ldrb	ip, [sl, #7]
   270ac:	ldrb	r1, [sl, #6]
   270b0:	mov	lr, r9
   270b4:	orr	r1, ip, r1, lsl #8
   270b8:	mov	r9, r1
   270bc:	ldrb	r1, [sl, #5]
   270c0:	mov	r7, lr
   270c4:	orr	r9, r9, r1, lsl #16
   270c8:	ldrb	r1, [sl, #4]
   270cc:	mov	r6, r7
   270d0:	orr	r9, r9, r1, lsl #24
   270d4:	ldrb	r1, [sl, #3]
   270d8:	orr	r3, r1, r6
   270dc:	ldrb	r1, [sl, #2]
   270e0:	orr	r1, r3, r1, lsl #8
   270e4:	ldrb	r3, [sl, #1]
   270e8:	orr	r5, r1, r3, lsl #16
   270ec:	ldrb	r1, [sl]
   270f0:	ldr	r3, [fp, #12]
   270f4:	ldr	r6, [fp, #8]
   270f8:	orr	r7, r5, r1, lsl #24
   270fc:	movw	r1, #29745	; 0x7431
   27100:	movt	r1, #26990	; 0x696e
   27104:	cmp	r7, r1
   27108:	bhi	27138 <main@@Base+0x1109c>
   2710c:	teq	r7, r1
   27110:	bne	27218 <main@@Base+0x1117c>
   27114:	str	r3, [sp]
   27118:	mov	r1, sl
   2711c:	mov	r3, #4
   27120:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   27124:	cmp	r0, sl
   27128:	beq	27218 <main@@Base+0x1117c>
   2712c:	mov	r1, #0
   27130:	mov	r2, #2
   27134:	b	27184 <main@@Base+0x110e8>
   27138:	movw	r4, #0
   2713c:	movw	r1, #29806	; 0x746e
   27140:	movt	r4, #25959	; 0x6567
   27144:	movt	r1, #26990	; 0x696e
   27148:	subs	r5, r9, r4
   2714c:	sbcs	r5, r7, r1
   27150:	bcs	27190 <main@@Base+0x110f4>
   27154:	movw	r1, #29746	; 0x7432
   27158:	movt	r1, #26990	; 0x696e
   2715c:	teq	r7, r1
   27160:	bne	27218 <main@@Base+0x1117c>
   27164:	str	r3, [sp]
   27168:	mov	r1, sl
   2716c:	mov	r3, #4
   27170:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   27174:	cmp	r0, sl
   27178:	beq	27218 <main@@Base+0x1117c>
   2717c:	mov	r1, #0
   27180:	mov	r2, #42	; 0x2a
   27184:	str	r2, [r6]
   27188:	str	r1, [r6, #4]
   2718c:	b	2720c <main@@Base+0x11170>
   27190:	eor	r1, r7, r1
   27194:	add	r7, r4, #12800	; 0x3200
   27198:	bic	r5, r9, #255	; 0xff
   2719c:	eor	r7, r5, r7
   271a0:	orrs	r7, r7, r1
   271a4:	bne	271d0 <main@@Base+0x11134>
   271a8:	str	r3, [sp]
   271ac:	mov	r1, sl
   271b0:	mov	r3, #7
   271b4:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   271b8:	cmp	r0, sl
   271bc:	beq	27218 <main@@Base+0x1117c>
   271c0:	mvn	r2, #1
   271c4:	mvn	r1, #0
   271c8:	add	r2, r2, #1
   271cc:	b	27200 <main@@Base+0x11164>
   271d0:	bfc	r9, #0, #16
   271d4:	eor	r7, r9, r4
   271d8:	orrs	r1, r7, r1
   271dc:	bne	27218 <main@@Base+0x1117c>
   271e0:	str	r3, [sp]
   271e4:	mov	r1, sl
   271e8:	mov	r3, #6
   271ec:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   271f0:	cmp	r0, sl
   271f4:	beq	27218 <main@@Base+0x1117c>
   271f8:	mvn	r1, #0
   271fc:	mvn	r2, #1
   27200:	str	r2, [r6]
   27204:	str	r1, [r6, #4]
   27208:	mov	r1, #1
   2720c:	ldr	r2, [sp, #8]
   27210:	mov	sl, r0
   27214:	str	r1, [r2]
   27218:	mov	r0, sl
   2721c:	sub	sp, fp, #28
   27220:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27224:	push	{r4, r5, r6, r7, fp, lr}
   27228:	add	fp, sp, #16
   2722c:	sub	sp, sp, #8
   27230:	mov	r5, r1
   27234:	sub	r1, r2, r1
   27238:	mov	r4, r3
   2723c:	cmp	r1, #8
   27240:	movcs	r1, #8
   27244:	and	r1, r1, #15
   27248:	sub	r3, r1, #1
   2724c:	cmp	r3, #7
   27250:	bhi	27364 <main@@Base+0x112c8>
   27254:	add	r7, pc, #4
   27258:	mov	r1, #0
   2725c:	ldr	pc, [r7, r3, lsl #2]
   27260:	muleq	r2, r8, r2
   27264:	muleq	r2, r0, r2
   27268:	andeq	r7, r2, r8, lsl #5
   2726c:	andeq	r7, r2, r0, lsl #5
   27270:	andeq	r7, r2, r0, lsl #5
   27274:	andeq	r7, r2, r0, lsl #5
   27278:	andeq	r7, r2, r0, lsl #5
   2727c:	andeq	r7, r2, r0, lsl #5
   27280:	ldrb	r3, [r5, #3]
   27284:	orr	r1, r3, r1
   27288:	ldrb	r3, [r5, #2]
   2728c:	orr	r1, r1, r3, lsl #8
   27290:	ldrb	r3, [r5, #1]
   27294:	orr	r1, r1, r3, lsl #16
   27298:	ldrb	r6, [r5]
   2729c:	ldr	r3, [fp, #12]
   272a0:	ldr	r7, [fp, #8]
   272a4:	orr	r1, r1, r6, lsl #24
   272a8:	movw	r6, #26417	; 0x6731
   272ac:	movt	r6, #28261	; 0x6e65
   272b0:	cmp	r1, r6
   272b4:	bhi	272e4 <main@@Base+0x11248>
   272b8:	teq	r1, r6
   272bc:	bne	27364 <main@@Base+0x112c8>
   272c0:	str	r3, [sp]
   272c4:	mov	r1, r5
   272c8:	mov	r3, #4
   272cc:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   272d0:	cmp	r0, r5
   272d4:	beq	27364 <main@@Base+0x112c8>
   272d8:	mvn	r1, #0
   272dc:	mvn	r2, #11
   272e0:	b	27350 <main@@Base+0x112b4>
   272e4:	movw	r6, #26418	; 0x6732
   272e8:	movt	r6, #28261	; 0x6e65
   272ec:	teq	r1, r6
   272f0:	beq	2732c <main@@Base+0x11290>
   272f4:	movw	r6, #26419	; 0x6733
   272f8:	movt	r6, #28261	; 0x6e65
   272fc:	teq	r1, r6
   27300:	bne	27364 <main@@Base+0x112c8>
   27304:	str	r3, [sp]
   27308:	mov	r1, r5
   2730c:	mov	r3, #4
   27310:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   27314:	cmp	r0, r5
   27318:	beq	27364 <main@@Base+0x112c8>
   2731c:	mvn	r2, #11
   27320:	mvn	r1, #0
   27324:	add	r2, r2, #2
   27328:	b	27350 <main@@Base+0x112b4>
   2732c:	str	r3, [sp]
   27330:	mov	r1, r5
   27334:	mov	r3, #4
   27338:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   2733c:	cmp	r0, r5
   27340:	beq	27364 <main@@Base+0x112c8>
   27344:	mvn	r2, #11
   27348:	mvn	r1, #0
   2734c:	add	r2, r2, #1
   27350:	str	r2, [r7]
   27354:	str	r1, [r7, #4]
   27358:	mov	r1, #1
   2735c:	mov	r5, r0
   27360:	str	r1, [r4]
   27364:	mov	r0, r5
   27368:	sub	sp, fp, #16
   2736c:	pop	{r4, r5, r6, r7, fp, pc}
   27370:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27374:	add	fp, sp, #28
   27378:	sub	sp, sp, #12
   2737c:	mov	sl, r1
   27380:	sub	r1, r2, r1
   27384:	cmp	r1, #8
   27388:	movcs	r1, #8
   2738c:	and	r1, r1, #15
   27390:	sub	r6, r1, #1
   27394:	cmp	r6, #7
   27398:	bhi	27614 <main@@Base+0x11578>
   2739c:	str	r3, [sp, #8]
   273a0:	add	r9, pc, #32
   273a4:	mov	r1, #0
   273a8:	mov	ip, #0
   273ac:	mov	lr, #0
   273b0:	mov	r4, #0
   273b4:	mov	r7, #0
   273b8:	mov	r3, #0
   273bc:	mov	r5, #0
   273c0:	mov	r8, #0
   273c4:	ldr	pc, [r9, r6, lsl #2]
   273c8:	andeq	r7, r2, ip, lsr #8
   273cc:	andeq	r7, r2, r4, lsr #8
   273d0:	andeq	r7, r2, ip, lsl r4
   273d4:	andeq	r7, r2, r4, lsl r4
   273d8:	andeq	r7, r2, r8, lsl #8
   273dc:	strdeq	r7, [r2], -ip
   273e0:	andeq	r7, r2, ip, ror #7
   273e4:	andeq	r7, r2, r8, ror #7
   273e8:	ldrb	ip, [sl, #7]
   273ec:	ldrb	r3, [sl, #6]
   273f0:	mov	lr, r1
   273f4:	orr	r3, ip, r3, lsl #8
   273f8:	mov	r1, r3
   273fc:	ldrb	r3, [sl, #5]
   27400:	mov	r4, lr
   27404:	orr	r1, r1, r3, lsl #16
   27408:	ldrb	r3, [sl, #4]
   2740c:	mov	r7, r4
   27410:	orr	r1, r1, r3, lsl #24
   27414:	ldrb	r3, [sl, #3]
   27418:	orr	r3, r3, r7
   2741c:	ldrb	r7, [sl, #2]
   27420:	orr	r5, r3, r7, lsl #8
   27424:	ldrb	r3, [sl, #1]
   27428:	orr	r8, r5, r3, lsl #16
   2742c:	ldrb	r3, [sl]
   27430:	ldr	lr, [fp, #12]
   27434:	ldr	r9, [fp, #8]
   27438:	orr	r6, r8, r3, lsl #24
   2743c:	movw	r3, #20036	; 0x4e44
   27440:	movt	r3, #20047	; 0x4e4f
   27444:	cmp	r6, r3
   27448:	bhi	274a8 <main@@Base+0x1140c>
   2744c:	movw	r7, #28160	; 0x6e00
   27450:	movw	r4, #28523	; 0x6f6b
   27454:	and	r3, r1, #-16777216	; 0xff000000
   27458:	movt	r7, #18017	; 0x4661
   2745c:	movt	r4, #17007	; 0x426f
   27460:	subs	r5, r1, r7
   27464:	sbcs	r5, r6, r4
   27468:	bcs	274f4 <main@@Base+0x11458>
   2746c:	movw	r1, #27756	; 0x6c6c
   27470:	eor	r3, r3, #1694498816	; 0x65000000
   27474:	movt	r1, #16997	; 0x4265
   27478:	eor	r1, r6, r1
   2747c:	orrs	r1, r3, r1
   27480:	bne	27614 <main@@Base+0x11578>
   27484:	mov	r1, sl
   27488:	mov	r3, #5
   2748c:	str	lr, [sp]
   27490:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   27494:	cmp	r0, sl
   27498:	beq	27614 <main@@Base+0x11578>
   2749c:	mov	r1, #0
   274a0:	mov	r2, #9
   274a4:	b	27600 <main@@Base+0x11564>
   274a8:	movw	r7, #26725	; 0x6865
   274ac:	mvn	r3, #-1912602624	; 0x8e000000
   274b0:	movt	r7, #20340	; 0x4f74
   274b4:	subs	r3, r3, r1
   274b8:	sbcs	r3, r7, r6
   274bc:	bcc	27530 <main@@Base+0x11494>
   274c0:	movw	r1, #20037	; 0x4e45
   274c4:	movt	r1, #20047	; 0x4e4f
   274c8:	teq	r6, r1
   274cc:	bne	27614 <main@@Base+0x11578>
   274d0:	mov	r1, sl
   274d4:	mov	r3, #4
   274d8:	str	lr, [sp]
   274dc:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   274e0:	cmp	r0, sl
   274e4:	beq	27614 <main@@Base+0x11578>
   274e8:	mov	r1, #0
   274ec:	str	r1, [r9]
   274f0:	b	27604 <main@@Base+0x11568>
   274f4:	movw	r5, #19553	; 0x4c61
   274f8:	eor	r3, r3, #1845493760	; 0x6e000000
   274fc:	movt	r5, #19829	; 0x4d75
   27500:	eor	r5, r6, r5
   27504:	orrs	r3, r3, r5
   27508:	bne	27584 <main@@Base+0x114e8>
   2750c:	mov	r1, sl
   27510:	mov	r3, #5
   27514:	str	lr, [sp]
   27518:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   2751c:	cmp	r0, sl
   27520:	beq	27614 <main@@Base+0x11578>
   27524:	mov	r1, #0
   27528:	mov	r2, #2
   2752c:	b	27600 <main@@Base+0x11564>
   27530:	movw	r4, #25964	; 0x656c
   27534:	movw	ip, #28789	; 0x7075
   27538:	movt	r4, #28282	; 0x6e7a
   2753c:	movt	ip, #21089	; 0x5261
   27540:	subs	r3, r1, r4
   27544:	sbcs	r3, r6, ip
   27548:	bcs	275bc <main@@Base+0x11520>
   2754c:	and	r1, r1, #-16777216	; 0xff000000
   27550:	eor	r3, r6, r7
   27554:	eor	r1, r1, #1912602624	; 0x72000000
   27558:	orrs	r1, r1, r3
   2755c:	bne	27614 <main@@Base+0x11578>
   27560:	mov	r1, sl
   27564:	mov	r3, #5
   27568:	str	lr, [sp]
   2756c:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   27570:	cmp	r0, sl
   27574:	beq	27614 <main@@Base+0x11578>
   27578:	mov	r1, #0
   2757c:	mov	r2, #11
   27580:	b	27600 <main@@Base+0x11564>
   27584:	bic	r1, r1, #255	; 0xff
   27588:	eor	r3, r6, r4
   2758c:	eor	r1, r1, r7
   27590:	orrs	r1, r1, r3
   27594:	bne	27614 <main@@Base+0x11578>
   27598:	mov	r1, sl
   2759c:	mov	r3, #7
   275a0:	str	lr, [sp]
   275a4:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   275a8:	cmp	r0, sl
   275ac:	beq	27614 <main@@Base+0x11578>
   275b0:	mov	r1, #0
   275b4:	mov	r2, #10
   275b8:	b	27600 <main@@Base+0x11564>
   275bc:	lsr	r5, r1, #16
   275c0:	movw	r7, #25956	; 0x6564
   275c4:	movw	r3, #21870	; 0x556e
   275c8:	orr	r5, r5, r6, lsl #16
   275cc:	movt	r7, #30067	; 0x7573
   275d0:	eor	r3, r3, r6, lsr #16
   275d4:	eor	r5, r5, r7
   275d8:	orrs	r3, r5, r3
   275dc:	bne	27620 <main@@Base+0x11584>
   275e0:	mov	r1, sl
   275e4:	mov	r3, #6
   275e8:	str	lr, [sp]
   275ec:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   275f0:	cmp	r0, sl
   275f4:	beq	27614 <main@@Base+0x11578>
   275f8:	mov	r1, #0
   275fc:	mov	r2, #255	; 0xff
   27600:	str	r2, [r9]
   27604:	str	r1, [r9, #4]
   27608:	ldr	r2, [sp, #8]
   2760c:	str	r1, [r2]
   27610:	mov	sl, r0
   27614:	mov	r0, sl
   27618:	sub	sp, fp, #28
   2761c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27620:	eor	r1, r1, r4
   27624:	eor	r3, r6, ip
   27628:	orrs	r1, r1, r3
   2762c:	bne	27614 <main@@Base+0x11578>
   27630:	mov	r1, sl
   27634:	mov	r3, #8
   27638:	str	lr, [sp]
   2763c:	mov	r4, #8
   27640:	bl	374dc <flatcc_json_parser_match_constant@@Base>
   27644:	cmp	r0, sl
   27648:	beq	27614 <main@@Base+0x11578>
   2764c:	mov	r5, #0
   27650:	strd	r4, [r9]
   27654:	ldr	r1, [sp, #8]
   27658:	str	r5, [r1]
   2765c:	b	27610 <main@@Base+0x11574>
   27660:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27664:	add	fp, sp, #28
   27668:	sub	sp, sp, #36	; 0x24
   2766c:	mov	r5, r0
   27670:	mov	r0, #0
   27674:	mov	r4, r1
   27678:	mov	r1, #4
   2767c:	mov	r7, r3
   27680:	mov	r8, r2
   27684:	str	r0, [r3]
   27688:	ldr	r0, [r5]
   2768c:	bl	32294 <flatcc_builder_start_table@@Base>
   27690:	cmp	r0, #0
   27694:	beq	276bc <main@@Base+0x11620>
   27698:	mov	r0, r5
   2769c:	mov	r1, r4
   276a0:	mov	r2, r8
   276a4:	mov	r3, #33	; 0x21
   276a8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   276ac:	mov	r4, r0
   276b0:	mov	r0, r4
   276b4:	sub	sp, fp, #28
   276b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   276bc:	add	r0, sp, #28
   276c0:	mov	r1, r4
   276c4:	mov	r2, r8
   276c8:	mov	r3, #1
   276cc:	str	r0, [sp]
   276d0:	mov	r0, r5
   276d4:	bl	39bd0 <flatcc_json_parser_prepare_unions@@Base>
   276d8:	cmp	r0, r8
   276dc:	beq	27698 <main@@Base+0x115fc>
   276e0:	cmp	r4, r8
   276e4:	beq	27724 <main@@Base+0x11688>
   276e8:	ldrb	r0, [r4]
   276ec:	cmp	r0, #123	; 0x7b
   276f0:	bne	27724 <main@@Base+0x11688>
   276f4:	add	r1, r4, #1
   276f8:	sub	r0, r8, r1
   276fc:	cmp	r0, #2
   27700:	blt	27788 <main@@Base+0x116ec>
   27704:	ldrb	r0, [r1]
   27708:	cmp	r0, #32
   2770c:	bls	27778 <main@@Base+0x116dc>
   27710:	mov	r4, r1
   27714:	cmp	r4, r8
   27718:	mov	r2, r8
   2771c:	bne	277a4 <main@@Base+0x11708>
   27720:	b	277e4 <main@@Base+0x11748>
   27724:	mov	r0, r5
   27728:	mov	r1, r4
   2772c:	mov	r2, r8
   27730:	mov	r3, #21
   27734:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   27738:	mov	r4, r0
   2773c:	ldr	r0, [r5, #24]
   27740:	cmp	r0, #0
   27744:	bne	27698 <main@@Base+0x115fc>
   27748:	ldr	r3, [sp, #28]
   2774c:	mov	r0, r5
   27750:	mov	r1, r4
   27754:	mov	r2, r8
   27758:	bl	39c60 <flatcc_json_parser_finalize_unions@@Base>
   2775c:	mov	r4, r0
   27760:	ldr	r0, [r5]
   27764:	bl	32c44 <flatcc_builder_end_table@@Base>
   27768:	cmp	r0, #0
   2776c:	str	r0, [r7]
   27770:	bne	276b0 <main@@Base+0x11614>
   27774:	b	27698 <main@@Base+0x115fc>
   27778:	bne	27788 <main@@Base+0x116ec>
   2777c:	ldrb	r0, [r4, #2]!
   27780:	cmp	r0, #32
   27784:	bhi	27798 <main@@Base+0x116fc>
   27788:	mov	r0, r5
   2778c:	mov	r2, r8
   27790:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   27794:	mov	r4, r0
   27798:	cmp	r4, r8
   2779c:	mov	r2, r8
   277a0:	beq	277e4 <main@@Base+0x11748>
   277a4:	ldrb	r0, [r4]
   277a8:	cmp	r0, #125	; 0x7d
   277ac:	bne	277e0 <main@@Base+0x11744>
   277b0:	add	r1, r4, #1
   277b4:	sub	r0, r8, r1
   277b8:	cmp	r0, #2
   277bc:	blt	28124 <main@@Base+0x12088>
   277c0:	ldrb	r0, [r1]
   277c4:	cmp	r0, #32
   277c8:	bhi	280dc <main@@Base+0x12040>
   277cc:	bne	28124 <main@@Base+0x12088>
   277d0:	ldrb	r0, [r4, #2]!
   277d4:	cmp	r0, #32
   277d8:	bhi	2773c <main@@Base+0x116a0>
   277dc:	b	28124 <main@@Base+0x12088>
   277e0:	mov	r2, r4
   277e4:	str	r7, [sp, #20]
   277e8:	cmp	r2, r8
   277ec:	mov	r9, r8
   277f0:	beq	2783c <main@@Base+0x117a0>
   277f4:	ldrb	r0, [r2]
   277f8:	cmp	r0, #46	; 0x2e
   277fc:	beq	27814 <main@@Base+0x11778>
   27800:	cmp	r0, #34	; 0x22
   27804:	bne	27830 <main@@Base+0x11794>
   27808:	mov	r0, #0
   2780c:	add	r9, r2, #1
   27810:	b	27838 <main@@Base+0x1179c>
   27814:	mov	r1, r2
   27818:	mov	r0, r5
   2781c:	mov	r2, r8
   27820:	mov	r3, #5
   27824:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   27828:	mov	r9, r0
   2782c:	b	2783c <main@@Base+0x117a0>
   27830:	mov	r0, #1
   27834:	mov	r9, r2
   27838:	str	r0, [r5, #12]
   2783c:	sub	r1, r8, r9
   27840:	mov	r0, #8
   27844:	cmp	r1, #8
   27848:	movcc	r0, r1
   2784c:	and	r0, r0, #15
   27850:	sub	r2, r0, #1
   27854:	cmp	r2, #7
   27858:	bhi	28068 <main@@Base+0x11fcc>
   2785c:	str	r1, [sp, #24]
   27860:	add	r0, pc, #36	; 0x24
   27864:	mov	lr, r5
   27868:	mov	sl, #0
   2786c:	mov	ip, #0
   27870:	mov	r6, #0
   27874:	mov	r1, #0
   27878:	mov	r3, #0
   2787c:	mov	r5, #0
   27880:	mov	r7, #0
   27884:	mov	r4, #0
   27888:	ldr	pc, [r0, r2, lsl #2]
   2788c:	strdeq	r7, [r2], -r0
   27890:	andeq	r7, r2, r8, ror #17
   27894:	andeq	r7, r2, r0, ror #17
   27898:	ldrdeq	r7, [r2], -r8
   2789c:	andeq	r7, r2, ip, asr #17
   278a0:	andeq	r7, r2, r0, asr #17
   278a4:			; <UNDEFINED> instruction: 0x000278b0
   278a8:	andeq	r7, r2, ip, lsr #17
   278ac:	ldrb	ip, [r9, #7]
   278b0:	ldrb	r0, [r9, #6]
   278b4:	mov	r6, sl
   278b8:	orr	r0, ip, r0, lsl #8
   278bc:	mov	sl, r0
   278c0:	ldrb	r0, [r9, #5]
   278c4:	mov	r1, r6
   278c8:	orr	sl, sl, r0, lsl #16
   278cc:	ldrb	r0, [r9, #4]
   278d0:	mov	r3, r1
   278d4:	orr	sl, sl, r0, lsl #24
   278d8:	ldrb	r0, [r9, #3]
   278dc:	orr	r5, r0, r3
   278e0:	ldrb	r0, [r9, #2]
   278e4:	orr	r7, r5, r0, lsl #8
   278e8:	ldrb	r0, [r9, #1]
   278ec:	orr	r4, r7, r0, lsl #16
   278f0:	movw	r2, #30976	; 0x7900
   278f4:	movt	r2, #24942	; 0x616e
   278f8:	add	r0, r2, #95	; 0x5f
   278fc:	eor	r1, sl, r0
   27900:	ldrb	r0, [r9]
   27904:	orr	r4, r4, r0, lsl #24
   27908:	movw	r0, #28281	; 0x6e79
   2790c:	movt	r0, #28001	; 0x6d61
   27910:	eor	r0, r4, r0
   27914:	orrs	r1, r1, r0
   27918:	bne	279e4 <main@@Base+0x11948>
   2791c:	add	r6, r9, #8
   27920:	mov	r1, #8
   27924:	ldr	r7, [sp, #20]
   27928:	mov	r5, lr
   2792c:	sub	r0, r8, r6
   27930:	cmp	r0, #8
   27934:	movcc	r1, r0
   27938:	and	r1, r1, #15
   2793c:	sub	r2, r1, #1
   27940:	cmp	r2, #7
   27944:	bhi	27cdc <main@@Base+0x11c40>
   27948:	add	r3, pc, #4
   2794c:	mov	r1, #0
   27950:	ldr	pc, [r3, r2, lsl #2]
   27954:	andeq	r7, r2, r8, lsl #19
   27958:	andeq	r7, r2, r0, lsl #19
   2795c:	andeq	r7, r2, r8, ror r9
   27960:	andeq	r7, r2, r4, ror r9
   27964:	andeq	r7, r2, r4, ror r9
   27968:	andeq	r7, r2, r4, ror r9
   2796c:	andeq	r7, r2, r4, ror r9
   27970:	andeq	r7, r2, r4, ror r9
   27974:	ldrb	r1, [r9, #11]
   27978:	ldrb	r2, [r9, #10]
   2797c:	orr	r1, r1, r2, lsl #8
   27980:	ldrb	r2, [r9, #9]
   27984:	orr	r1, r1, r2, lsl #16
   27988:	ldrb	r2, [r6]
   2798c:	orr	r1, r1, r2, lsl #24
   27990:	movw	r2, #28773	; 0x7065
   27994:	movt	r2, #29817	; 0x7479
   27998:	teq	r1, r2
   2799c:	bne	27cdc <main@@Base+0x11c40>
   279a0:	cmp	r0, #5
   279a4:	blt	27cdc <main@@Base+0x11c40>
   279a8:	mov	r1, r9
   279ac:	ldr	r2, [r5, #12]
   279b0:	ldrb	r0, [r1, #12]!
   279b4:	cmp	r2, #0
   279b8:	beq	27a80 <main@@Base+0x119e4>
   279bc:	cmp	r0, #33	; 0x21
   279c0:	bcc	279cc <main@@Base+0x11930>
   279c4:	cmp	r0, #58	; 0x3a
   279c8:	bne	27cdc <main@@Base+0x11c40>
   279cc:	mov	r0, #0
   279d0:	str	r0, [r5, #12]
   279d4:	sub	r0, r8, r1
   279d8:	cmp	r0, #2
   279dc:	bge	27a98 <main@@Base+0x119fc>
   279e0:	b	27c90 <main@@Base+0x11bf4>
   279e4:	ldr	r6, [sp, #24]
   279e8:	bic	r1, sl, #255	; 0xff
   279ec:	mov	r5, lr
   279f0:	eor	r1, r1, r2
   279f4:	orrs	r0, r1, r0
   279f8:	bne	27b18 <main@@Base+0x11a7c>
   279fc:	cmp	r6, #8
   27a00:	mov	r1, r9
   27a04:	blt	27e1c <main@@Base+0x11d80>
   27a08:	mov	r2, r9
   27a0c:	ldr	r1, [r5, #12]
   27a10:	ldrb	r0, [r2, #7]!
   27a14:	cmp	r1, #0
   27a18:	beq	27a48 <main@@Base+0x119ac>
   27a1c:	cmp	r0, #33	; 0x21
   27a20:	bcc	27a30 <main@@Base+0x11994>
   27a24:	cmp	r0, #58	; 0x3a
   27a28:	mov	r1, r9
   27a2c:	bne	27e1c <main@@Base+0x11d80>
   27a30:	mov	r0, #0
   27a34:	str	r0, [r5, #12]
   27a38:	sub	r0, r8, r2
   27a3c:	cmp	r0, #2
   27a40:	bge	27a64 <main@@Base+0x119c8>
   27a44:	b	27ac8 <main@@Base+0x11a2c>
   27a48:	cmp	r0, #34	; 0x22
   27a4c:	mov	r1, r9
   27a50:	bne	27e1c <main@@Base+0x11d80>
   27a54:	add	r2, r9, #8
   27a58:	sub	r0, r8, r2
   27a5c:	cmp	r0, #2
   27a60:	blt	27ac8 <main@@Base+0x11a2c>
   27a64:	ldrb	r0, [r2]
   27a68:	cmp	r0, #32
   27a6c:	bls	27ab4 <main@@Base+0x11a18>
   27a70:	mov	r1, r2
   27a74:	cmp	r1, r8
   27a78:	bne	27ae4 <main@@Base+0x11a48>
   27a7c:	b	27bf8 <main@@Base+0x11b5c>
   27a80:	cmp	r0, #34	; 0x22
   27a84:	bne	27cdc <main@@Base+0x11c40>
   27a88:	add	r1, r9, #13
   27a8c:	sub	r0, r8, r1
   27a90:	cmp	r0, #2
   27a94:	blt	27c90 <main@@Base+0x11bf4>
   27a98:	ldrb	r0, [r1]
   27a9c:	cmp	r0, #32
   27aa0:	bls	27c7c <main@@Base+0x11be0>
   27aa4:	mov	r2, r1
   27aa8:	cmp	r2, r8
   27aac:	bne	27ca8 <main@@Base+0x11c0c>
   27ab0:	b	27ce8 <main@@Base+0x11c4c>
   27ab4:	bne	27ac8 <main@@Base+0x11a2c>
   27ab8:	mov	r1, r2
   27abc:	ldrb	r0, [r1, #1]!
   27ac0:	cmp	r0, #32
   27ac4:	bhi	27adc <main@@Base+0x11a40>
   27ac8:	mov	r1, r2
   27acc:	mov	r0, r5
   27ad0:	mov	r2, r8
   27ad4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   27ad8:	mov	r1, r0
   27adc:	cmp	r1, r8
   27ae0:	beq	27bf8 <main@@Base+0x11b5c>
   27ae4:	ldrb	r0, [r1]
   27ae8:	cmp	r0, #58	; 0x3a
   27aec:	bne	27bf8 <main@@Base+0x11b5c>
   27af0:	add	r2, r1, #1
   27af4:	sub	r0, r8, r2
   27af8:	cmp	r0, #2
   27afc:	blt	27e08 <main@@Base+0x11d6c>
   27b00:	ldrb	r0, [r2]
   27b04:	cmp	r0, #32
   27b08:	bls	27df8 <main@@Base+0x11d5c>
   27b0c:	mov	r1, r2
   27b10:	cmp	r9, r1
   27b14:	bne	27e24 <main@@Base+0x11d88>
   27b18:	lsr	r1, sl, #16
   27b1c:	movw	r2, #27000	; 0x6978
   27b20:	movw	r0, #28786	; 0x7072
   27b24:	orr	r1, r1, r4, lsl #16
   27b28:	movt	r2, #25958	; 0x6566
   27b2c:	eor	r0, r0, r4, lsr #16
   27b30:	eor	r1, r1, r2
   27b34:	orrs	r0, r1, r0
   27b38:	bne	27b8c <main@@Base+0x11af0>
   27b3c:	ldr	r7, [sp, #20]
   27b40:	cmp	r6, #7
   27b44:	mov	r1, r9
   27b48:	blt	27fb4 <main@@Base+0x11f18>
   27b4c:	mov	r2, r9
   27b50:	ldr	r1, [r5, #12]
   27b54:	ldrb	r0, [r2, #6]!
   27b58:	cmp	r1, #0
   27b5c:	beq	27c0c <main@@Base+0x11b70>
   27b60:	cmp	r0, #33	; 0x21
   27b64:	bcc	27b74 <main@@Base+0x11ad8>
   27b68:	cmp	r0, #58	; 0x3a
   27b6c:	mov	r1, r9
   27b70:	bne	27fb4 <main@@Base+0x11f18>
   27b74:	mov	r0, #0
   27b78:	str	r0, [r5, #12]
   27b7c:	sub	r0, r8, r2
   27b80:	cmp	r0, #2
   27b84:	bge	27c28 <main@@Base+0x11b8c>
   27b88:	b	27d14 <main@@Base+0x11c78>
   27b8c:	movw	r0, #30313	; 0x7669
   27b90:	ldr	r7, [sp, #20]
   27b94:	and	r1, sl, #-16777216	; 0xff000000
   27b98:	movt	r0, #28015	; 0x6d6f
   27b9c:	eor	r1, r1, #1694498816	; 0x65000000
   27ba0:	eor	r0, r4, r0
   27ba4:	orrs	r0, r1, r0
   27ba8:	bne	28068 <main@@Base+0x11fcc>
   27bac:	cmp	r6, #6
   27bb0:	mov	r1, r9
   27bb4:	blt	28018 <main@@Base+0x11f7c>
   27bb8:	mov	r2, r9
   27bbc:	ldr	r1, [r5, #12]
   27bc0:	ldrb	r0, [r2, #5]!
   27bc4:	cmp	r1, #0
   27bc8:	beq	27c44 <main@@Base+0x11ba8>
   27bcc:	cmp	r0, #33	; 0x21
   27bd0:	bcc	27be0 <main@@Base+0x11b44>
   27bd4:	cmp	r0, #58	; 0x3a
   27bd8:	mov	r1, r9
   27bdc:	bne	28018 <main@@Base+0x11f7c>
   27be0:	mov	r0, #0
   27be4:	str	r0, [r5, #12]
   27be8:	sub	r0, r8, r2
   27bec:	cmp	r0, #2
   27bf0:	bge	27c60 <main@@Base+0x11bc4>
   27bf4:	b	27d90 <main@@Base+0x11cf4>
   27bf8:	mov	r0, r5
   27bfc:	mov	r2, r8
   27c00:	mov	r3, #4
   27c04:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   27c08:	b	27e18 <main@@Base+0x11d7c>
   27c0c:	cmp	r0, #34	; 0x22
   27c10:	mov	r1, r9
   27c14:	bne	27fb4 <main@@Base+0x11f18>
   27c18:	add	r2, r9, #7
   27c1c:	sub	r0, r8, r2
   27c20:	cmp	r0, #2
   27c24:	blt	27d14 <main@@Base+0x11c78>
   27c28:	ldrb	r0, [r2]
   27c2c:	cmp	r0, #32
   27c30:	bls	27d00 <main@@Base+0x11c64>
   27c34:	mov	r1, r2
   27c38:	cmp	r1, r8
   27c3c:	bne	27d30 <main@@Base+0x11c94>
   27c40:	b	27d68 <main@@Base+0x11ccc>
   27c44:	cmp	r0, #34	; 0x22
   27c48:	mov	r1, r9
   27c4c:	bne	28018 <main@@Base+0x11f7c>
   27c50:	add	r2, r9, #6
   27c54:	sub	r0, r8, r2
   27c58:	cmp	r0, #2
   27c5c:	blt	27d90 <main@@Base+0x11cf4>
   27c60:	ldrb	r0, [r2]
   27c64:	cmp	r0, #32
   27c68:	bls	27d7c <main@@Base+0x11ce0>
   27c6c:	mov	r1, r2
   27c70:	cmp	r1, r8
   27c74:	bne	27dac <main@@Base+0x11d10>
   27c78:	b	27de4 <main@@Base+0x11d48>
   27c7c:	bne	27c90 <main@@Base+0x11bf4>
   27c80:	mov	r2, r1
   27c84:	ldrb	r0, [r2, #1]!
   27c88:	cmp	r0, #32
   27c8c:	bhi	27ca0 <main@@Base+0x11c04>
   27c90:	mov	r0, r5
   27c94:	mov	r2, r8
   27c98:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   27c9c:	mov	r2, r0
   27ca0:	cmp	r2, r8
   27ca4:	beq	27ce8 <main@@Base+0x11c4c>
   27ca8:	ldrb	r0, [r2]
   27cac:	cmp	r0, #58	; 0x3a
   27cb0:	bne	27ce8 <main@@Base+0x11c4c>
   27cb4:	add	r1, r2, #1
   27cb8:	sub	r0, r8, r1
   27cbc:	cmp	r0, #2
   27cc0:	blt	27f1c <main@@Base+0x11e80>
   27cc4:	ldrb	r0, [r1]
   27cc8:	cmp	r0, #32
   27ccc:	bls	27f0c <main@@Base+0x11e70>
   27cd0:	mov	r2, r1
   27cd4:	cmp	r6, r2
   27cd8:	bne	27f34 <main@@Base+0x11e98>
   27cdc:	mov	r0, r5
   27ce0:	mov	r1, r6
   27ce4:	b	28070 <main@@Base+0x11fd4>
   27ce8:	mov	r1, r2
   27cec:	mov	r0, r5
   27cf0:	mov	r2, r8
   27cf4:	mov	r3, #4
   27cf8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   27cfc:	b	27f28 <main@@Base+0x11e8c>
   27d00:	bne	27d14 <main@@Base+0x11c78>
   27d04:	mov	r1, r2
   27d08:	ldrb	r0, [r1, #1]!
   27d0c:	cmp	r0, #32
   27d10:	bhi	27d28 <main@@Base+0x11c8c>
   27d14:	mov	r1, r2
   27d18:	mov	r0, r5
   27d1c:	mov	r2, r8
   27d20:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   27d24:	mov	r1, r0
   27d28:	cmp	r1, r8
   27d2c:	beq	27d68 <main@@Base+0x11ccc>
   27d30:	ldrb	r0, [r1]
   27d34:	cmp	r0, #58	; 0x3a
   27d38:	bne	27d68 <main@@Base+0x11ccc>
   27d3c:	add	r2, r1, #1
   27d40:	sub	r0, r8, r2
   27d44:	cmp	r0, #2
   27d48:	blt	27fa0 <main@@Base+0x11f04>
   27d4c:	ldrb	r0, [r2]
   27d50:	cmp	r0, #32
   27d54:	bls	27f90 <main@@Base+0x11ef4>
   27d58:	mov	r1, r2
   27d5c:	cmp	r9, r1
   27d60:	bne	27fbc <main@@Base+0x11f20>
   27d64:	b	28068 <main@@Base+0x11fcc>
   27d68:	mov	r0, r5
   27d6c:	mov	r2, r8
   27d70:	mov	r3, #4
   27d74:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   27d78:	b	27fb0 <main@@Base+0x11f14>
   27d7c:	bne	27d90 <main@@Base+0x11cf4>
   27d80:	mov	r1, r2
   27d84:	ldrb	r0, [r1, #1]!
   27d88:	cmp	r0, #32
   27d8c:	bhi	27da4 <main@@Base+0x11d08>
   27d90:	mov	r1, r2
   27d94:	mov	r0, r5
   27d98:	mov	r2, r8
   27d9c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   27da0:	mov	r1, r0
   27da4:	cmp	r1, r8
   27da8:	beq	27de4 <main@@Base+0x11d48>
   27dac:	ldrb	r0, [r1]
   27db0:	cmp	r0, #58	; 0x3a
   27db4:	bne	27de4 <main@@Base+0x11d48>
   27db8:	add	r2, r1, #1
   27dbc:	sub	r0, r8, r2
   27dc0:	cmp	r0, #2
   27dc4:	blt	28004 <main@@Base+0x11f68>
   27dc8:	ldrb	r0, [r2]
   27dcc:	cmp	r0, #32
   27dd0:	bls	27ff4 <main@@Base+0x11f58>
   27dd4:	mov	r1, r2
   27dd8:	cmp	r9, r1
   27ddc:	bne	28020 <main@@Base+0x11f84>
   27de0:	b	28068 <main@@Base+0x11fcc>
   27de4:	mov	r0, r5
   27de8:	mov	r2, r8
   27dec:	mov	r3, #4
   27df0:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   27df4:	b	28014 <main@@Base+0x11f78>
   27df8:	bne	27e08 <main@@Base+0x11d6c>
   27dfc:	ldrb	r0, [r1, #2]!
   27e00:	cmp	r0, #32
   27e04:	bhi	27e1c <main@@Base+0x11d80>
   27e08:	mov	r1, r2
   27e0c:	mov	r0, r5
   27e10:	mov	r2, r8
   27e14:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   27e18:	mov	r1, r0
   27e1c:	cmp	r9, r1
   27e20:	beq	27b18 <main@@Base+0x11a7c>
   27e24:	ldr	r0, [sp, #28]
   27e28:	mov	r2, #3
   27e2c:	mov	r3, #0
   27e30:	str	r2, [sp]
   27e34:	mov	r2, r8
   27e38:	str	r0, [sp, #4]
   27e3c:	movw	r0, #18280	; 0x4768
   27e40:	movt	r0, #2
   27e44:	str	r0, [sp, #8]
   27e48:	mov	r0, r5
   27e4c:	bl	3a3f0 <flatcc_json_parser_union_vector@@Base>
   27e50:	ldr	r7, [sp, #20]
   27e54:	mov	r4, r0
   27e58:	sub	r0, r8, r4
   27e5c:	cmp	r0, #2
   27e60:	blt	28088 <main@@Base+0x11fec>
   27e64:	ldrb	r0, [r4]
   27e68:	cmp	r0, #32
   27e6c:	bls	27ec0 <main@@Base+0x11e24>
   27e70:	mov	r2, r4
   27e74:	cmp	r2, r8
   27e78:	beq	280a4 <main@@Base+0x12008>
   27e7c:	ldrb	r0, [r2]
   27e80:	cmp	r0, #44	; 0x2c
   27e84:	bne	280b8 <main@@Base+0x1201c>
   27e88:	add	r1, r2, #1
   27e8c:	sub	r0, r8, r1
   27e90:	cmp	r0, #2
   27e94:	blt	27ef0 <main@@Base+0x11e54>
   27e98:	ldrb	r0, [r1]
   27e9c:	cmp	r0, #32
   27ea0:	bls	27ee0 <main@@Base+0x11e44>
   27ea4:	mov	r2, r1
   27ea8:	cmp	r2, r8
   27eac:	beq	280f0 <main@@Base+0x12054>
   27eb0:	ldrb	r0, [r2]
   27eb4:	cmp	r0, #125	; 0x7d
   27eb8:	bne	277e8 <main@@Base+0x1174c>
   27ebc:	b	280c0 <main@@Base+0x12024>
   27ec0:	bne	28088 <main@@Base+0x11fec>
   27ec4:	mov	r2, r4
   27ec8:	ldrb	r0, [r2, #1]!
   27ecc:	cmp	r0, #32
   27ed0:	bls	28088 <main@@Base+0x11fec>
   27ed4:	cmp	r2, r8
   27ed8:	bne	27e7c <main@@Base+0x11de0>
   27edc:	b	280a4 <main@@Base+0x12008>
   27ee0:	bne	27ef0 <main@@Base+0x11e54>
   27ee4:	ldrb	r0, [r2, #2]!
   27ee8:	cmp	r0, #32
   27eec:	bhi	27f00 <main@@Base+0x11e64>
   27ef0:	mov	r0, r5
   27ef4:	mov	r2, r8
   27ef8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   27efc:	mov	r2, r0
   27f00:	cmp	r2, r8
   27f04:	bne	27eb0 <main@@Base+0x11e14>
   27f08:	b	280f0 <main@@Base+0x12054>
   27f0c:	bne	27f1c <main@@Base+0x11e80>
   27f10:	ldrb	r0, [r2, #2]!
   27f14:	cmp	r0, #32
   27f18:	bhi	27f2c <main@@Base+0x11e90>
   27f1c:	mov	r0, r5
   27f20:	mov	r2, r8
   27f24:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   27f28:	mov	r2, r0
   27f2c:	cmp	r6, r2
   27f30:	beq	27cdc <main@@Base+0x11c40>
   27f34:	ldr	r0, [sp, #28]
   27f38:	mov	r1, #3
   27f3c:	mov	r3, #0
   27f40:	str	r1, [sp]
   27f44:	mov	r1, r2
   27f48:	mov	r2, r8
   27f4c:	str	r0, [sp, #4]
   27f50:	movw	r0, #120	; 0x78
   27f54:	movt	r0, #6
   27f58:	str	r0, [sp, #8]
   27f5c:	movw	r0, #18280	; 0x4768
   27f60:	movt	r0, #2
   27f64:	str	r0, [sp, #12]
   27f68:	movw	r0, #33076	; 0x8134
   27f6c:	movt	r0, #2
   27f70:	str	r0, [sp, #16]
   27f74:	mov	r0, r5
   27f78:	bl	3a964 <flatcc_json_parser_union_type_vector@@Base>
   27f7c:	mov	r4, r0
   27f80:	sub	r0, r8, r4
   27f84:	cmp	r0, #2
   27f88:	bge	27e64 <main@@Base+0x11dc8>
   27f8c:	b	28088 <main@@Base+0x11fec>
   27f90:	bne	27fa0 <main@@Base+0x11f04>
   27f94:	ldrb	r0, [r1, #2]!
   27f98:	cmp	r0, #32
   27f9c:	bhi	27fb4 <main@@Base+0x11f18>
   27fa0:	mov	r1, r2
   27fa4:	mov	r0, r5
   27fa8:	mov	r2, r8
   27fac:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   27fb0:	mov	r1, r0
   27fb4:	cmp	r9, r1
   27fb8:	beq	28068 <main@@Base+0x11fcc>
   27fbc:	mov	r0, r5
   27fc0:	mov	r2, r8
   27fc4:	add	r3, sp, #32
   27fc8:	bl	28148 <main@@Base+0x120ac>
   27fcc:	ldr	r6, [sp, #32]
   27fd0:	mov	r4, r0
   27fd4:	cmp	r6, #0
   27fd8:	beq	27698 <main@@Base+0x115fc>
   27fdc:	ldr	r0, [r5]
   27fe0:	mov	r1, #0
   27fe4:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   27fe8:	cmp	r0, #0
   27fec:	bne	28054 <main@@Base+0x11fb8>
   27ff0:	b	27698 <main@@Base+0x115fc>
   27ff4:	bne	28004 <main@@Base+0x11f68>
   27ff8:	ldrb	r0, [r1, #2]!
   27ffc:	cmp	r0, #32
   28000:	bhi	28018 <main@@Base+0x11f7c>
   28004:	mov	r1, r2
   28008:	mov	r0, r5
   2800c:	mov	r2, r8
   28010:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   28014:	mov	r1, r0
   28018:	cmp	r9, r1
   2801c:	beq	28068 <main@@Base+0x11fcc>
   28020:	mov	r0, r5
   28024:	mov	r2, r8
   28028:	add	r3, sp, #32
   2802c:	bl	2ba6c <main@@Base+0x159d0>
   28030:	ldr	r6, [sp, #32]
   28034:	mov	r4, r0
   28038:	cmp	r6, #0
   2803c:	beq	27698 <main@@Base+0x115fc>
   28040:	ldr	r0, [r5]
   28044:	mov	r1, #1
   28048:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   2804c:	cmp	r0, #0
   28050:	beq	27698 <main@@Base+0x115fc>
   28054:	str	r6, [r0]
   28058:	sub	r0, r8, r4
   2805c:	cmp	r0, #2
   28060:	bge	27e64 <main@@Base+0x11dc8>
   28064:	b	28088 <main@@Base+0x11fec>
   28068:	mov	r0, r5
   2806c:	mov	r1, r9
   28070:	mov	r2, r8
   28074:	bl	376d0 <flatcc_json_parser_unmatched_symbol@@Base>
   28078:	mov	r4, r0
   2807c:	sub	r0, r8, r4
   28080:	cmp	r0, #2
   28084:	bge	27e64 <main@@Base+0x11dc8>
   28088:	mov	r0, r5
   2808c:	mov	r1, r4
   28090:	mov	r2, r8
   28094:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   28098:	mov	r2, r0
   2809c:	cmp	r2, r8
   280a0:	bne	27e7c <main@@Base+0x11de0>
   280a4:	mov	r4, r8
   280a8:	ldr	r0, [r5, #24]
   280ac:	cmp	r0, #0
   280b0:	bne	27698 <main@@Base+0x115fc>
   280b4:	b	27748 <main@@Base+0x116ac>
   280b8:	cmp	r0, #125	; 0x7d
   280bc:	bne	280fc <main@@Base+0x12060>
   280c0:	add	r1, r2, #1
   280c4:	sub	r0, r8, r1
   280c8:	cmp	r0, #2
   280cc:	blt	28124 <main@@Base+0x12088>
   280d0:	ldrb	r0, [r1]
   280d4:	cmp	r0, #32
   280d8:	bls	28110 <main@@Base+0x12074>
   280dc:	mov	r4, r1
   280e0:	ldr	r0, [r5, #24]
   280e4:	cmp	r0, #0
   280e8:	bne	27698 <main@@Base+0x115fc>
   280ec:	b	27748 <main@@Base+0x116ac>
   280f0:	mov	r0, r5
   280f4:	mov	r1, r8
   280f8:	b	28104 <main@@Base+0x12068>
   280fc:	mov	r0, r5
   28100:	mov	r1, r2
   28104:	mov	r2, r8
   28108:	mov	r3, #10
   2810c:	b	27734 <main@@Base+0x11698>
   28110:	bne	28124 <main@@Base+0x12088>
   28114:	ldrb	r0, [r2, #2]!
   28118:	cmp	r0, #32
   2811c:	mov	r4, r2
   28120:	bhi	2773c <main@@Base+0x116a0>
   28124:	mov	r0, r5
   28128:	mov	r2, r8
   2812c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   28130:	b	27738 <main@@Base+0x1169c>
   28134:	mov	r1, #0
   28138:	cmp	r0, #5
   2813c:	movwcc	r1, #1
   28140:	mov	r0, r1
   28144:	bx	lr
   28148:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2814c:	add	fp, sp, #28
   28150:	sub	sp, sp, #68	; 0x44
   28154:	mov	sl, r0
   28158:	mov	r0, #0
   2815c:	mov	r4, r1
   28160:	mov	r1, #3
   28164:	mov	r5, r3
   28168:	mov	r9, r2
   2816c:	str	r0, [r3]
   28170:	ldr	r0, [sl]
   28174:	bl	32294 <flatcc_builder_start_table@@Base>
   28178:	cmp	r0, #0
   2817c:	bne	2ba48 <main@@Base+0x159ac>
   28180:	cmp	r4, r9
   28184:	beq	281c4 <main@@Base+0x12128>
   28188:	ldrb	r0, [r4]
   2818c:	cmp	r0, #123	; 0x7b
   28190:	bne	281c4 <main@@Base+0x12128>
   28194:	add	r1, r4, #1
   28198:	sub	r0, r9, r1
   2819c:	cmp	r0, #2
   281a0:	blt	28200 <main@@Base+0x12164>
   281a4:	ldrb	r0, [r1]
   281a8:	cmp	r0, #32
   281ac:	bls	281f0 <main@@Base+0x12154>
   281b0:	mov	r4, r1
   281b4:	cmp	r4, r9
   281b8:	mov	r2, r9
   281bc:	bne	2821c <main@@Base+0x12180>
   281c0:	b	28260 <main@@Base+0x121c4>
   281c4:	mov	r0, sl
   281c8:	mov	r1, r4
   281cc:	mov	r2, r9
   281d0:	mov	r3, #21
   281d4:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   281d8:	mov	r4, r0
   281dc:	add	r0, sl, #24
   281e0:	ldr	r0, [r0]
   281e4:	cmp	r0, #0
   281e8:	bne	2ba48 <main@@Base+0x159ac>
   281ec:	b	2b9ec <main@@Base+0x15950>
   281f0:	bne	28200 <main@@Base+0x12164>
   281f4:	ldrb	r0, [r4, #2]!
   281f8:	cmp	r0, #32
   281fc:	bhi	28210 <main@@Base+0x12174>
   28200:	mov	r0, sl
   28204:	mov	r2, r9
   28208:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2820c:	mov	r4, r0
   28210:	cmp	r4, r9
   28214:	mov	r2, r9
   28218:	beq	28260 <main@@Base+0x121c4>
   2821c:	ldrb	r0, [r4]
   28220:	cmp	r0, #125	; 0x7d
   28224:	bne	2825c <main@@Base+0x121c0>
   28228:	add	r1, r4, #1
   2822c:	sub	r0, r9, r1
   28230:	cmp	r0, #2
   28234:	blt	2ba1c <main@@Base+0x15980>
   28238:	ldrb	r0, [r1]
   2823c:	cmp	r0, #32
   28240:	bls	2ba0c <main@@Base+0x15970>
   28244:	mov	r4, r1
   28248:	add	r0, sl, #24
   2824c:	ldr	r0, [r0]
   28250:	cmp	r0, #0
   28254:	bne	2ba48 <main@@Base+0x159ac>
   28258:	b	2b9ec <main@@Base+0x15950>
   2825c:	mov	r2, r4
   28260:	add	r0, sl, #24
   28264:	movw	r1, #25186	; 0x6262
   28268:	str	sl, [sp, #24]
   2826c:	str	r5, [sp, #32]
   28270:	str	r0, [sp, #20]
   28274:	add	r0, sl, #12
   28278:	movt	r1, #25186	; 0x6262
   2827c:	str	r0, [sp, #28]
   28280:	movw	r0, #388	; 0x184
   28284:	movt	r0, #6
   28288:	add	r0, r0, #96	; 0x60
   2828c:	str	r0, [sp, #8]
   28290:	movw	r0, #257	; 0x101
   28294:	movt	r0, #257	; 0x101
   28298:	add	r0, r1, r0
   2829c:	str	r0, [sp, #16]
   282a0:	movw	r0, #514	; 0x202
   282a4:	movt	r0, #514	; 0x202
   282a8:	add	r0, r1, r0
   282ac:	str	r0, [sp, #12]
   282b0:	cmp	r2, r9
   282b4:	mov	r8, r9
   282b8:	beq	2830c <main@@Base+0x12270>
   282bc:	ldrb	r0, [r2]
   282c0:	cmp	r0, #46	; 0x2e
   282c4:	beq	282e0 <main@@Base+0x12244>
   282c8:	cmp	r0, #34	; 0x22
   282cc:	bne	282fc <main@@Base+0x12260>
   282d0:	ldr	r0, [sp, #28]
   282d4:	mov	r1, #0
   282d8:	add	r8, r2, #1
   282dc:	b	28308 <main@@Base+0x1226c>
   282e0:	mov	r1, r2
   282e4:	mov	r0, sl
   282e8:	mov	r2, r9
   282ec:	mov	r3, #5
   282f0:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   282f4:	mov	r8, r0
   282f8:	b	2830c <main@@Base+0x12270>
   282fc:	ldr	r0, [sp, #28]
   28300:	mov	r1, #1
   28304:	mov	r8, r2
   28308:	str	r1, [r0]
   2830c:	sub	r0, r9, r8
   28310:	mov	r1, #8
   28314:	cmp	r0, #8
   28318:	movcs	r0, r1
   2831c:	and	r0, r0, #15
   28320:	sub	r3, r0, #1
   28324:	cmp	r3, #7
   28328:	bhi	285cc <main@@Base+0x12530>
   2832c:	add	r5, pc, #32
   28330:	mov	r0, #0
   28334:	mov	ip, #0
   28338:	mov	lr, #0
   2833c:	mov	r7, #0
   28340:	mov	r2, #0
   28344:	mov	r6, #0
   28348:	mov	r4, #0
   2834c:	mov	r1, #0
   28350:	ldr	pc, [r5, r3, lsl #2]
   28354:			; <UNDEFINED> instruction: 0x000283b8
   28358:			; <UNDEFINED> instruction: 0x000283b0
   2835c:	andeq	r8, r2, r8, lsr #7
   28360:	andeq	r8, r2, r0, lsr #7
   28364:	muleq	r2, r4, r3
   28368:	andeq	r8, r2, r8, lsl #7
   2836c:	andeq	r8, r2, r8, ror r3
   28370:	andeq	r8, r2, r4, ror r3
   28374:	ldrb	ip, [r8, #7]
   28378:	ldrb	r1, [r8, #6]
   2837c:	mov	lr, r0
   28380:	orr	r1, ip, r1, lsl #8
   28384:	mov	r0, r1
   28388:	ldrb	r1, [r8, #5]
   2838c:	mov	r7, lr
   28390:	orr	r0, r0, r1, lsl #16
   28394:	ldrb	r1, [r8, #4]
   28398:	mov	r2, r7
   2839c:	orr	r0, r0, r1, lsl #24
   283a0:	ldrb	r1, [r8, #3]
   283a4:	orr	r6, r1, r2
   283a8:	ldrb	r1, [r8, #2]
   283ac:	orr	r4, r6, r1, lsl #8
   283b0:	ldrb	r1, [r8, #1]
   283b4:	orr	r1, r4, r1, lsl #16
   283b8:	movw	r2, #28526	; 0x6f6e
   283bc:	movt	r2, #27251	; 0x6a73
   283c0:	eor	r0, r0, r2
   283c4:	ldrb	r2, [r8]
   283c8:	orr	r1, r1, r2, lsl #24
   283cc:	movw	r2, #29556	; 0x7374
   283d0:	movt	r2, #29797	; 0x7465
   283d4:	eor	r1, r1, r2
   283d8:	orrs	r0, r0, r1
   283dc:	bne	285cc <main@@Base+0x12530>
   283e0:	add	r1, r8, #8
   283e4:	mov	r2, #8
   283e8:	sub	r0, r9, r1
   283ec:	cmp	r0, #8
   283f0:	movcs	r0, r2
   283f4:	and	r0, r0, #15
   283f8:	sub	r7, r0, #1
   283fc:	cmp	r7, #7
   28400:	bhi	285d8 <main@@Base+0x1253c>
   28404:	add	r0, pc, #32
   28408:	mov	sl, #0
   2840c:	mov	ip, #0
   28410:	mov	lr, #0
   28414:	mov	r6, #0
   28418:	mov	r3, #0
   2841c:	mov	r5, #0
   28420:	mov	r2, #0
   28424:	mov	r4, #0
   28428:	ldr	pc, [r0, r7, lsl #2]
   2842c:	muleq	r2, r0, r4
   28430:	andeq	r8, r2, r8, lsl #9
   28434:	andeq	r8, r2, r0, lsl #9
   28438:	andeq	r8, r2, r8, ror r4
   2843c:	andeq	r8, r2, ip, ror #8
   28440:	andeq	r8, r2, r0, ror #8
   28444:	andeq	r8, r2, r0, asr r4
   28448:	andeq	r8, r2, ip, asr #8
   2844c:	ldrb	ip, [r8, #15]
   28450:	ldrb	r0, [r8, #14]
   28454:	mov	lr, sl
   28458:	orr	r0, ip, r0, lsl #8
   2845c:	mov	sl, r0
   28460:	ldrb	r0, [r8, #13]
   28464:	mov	r6, lr
   28468:	orr	sl, sl, r0, lsl #16
   2846c:	ldrb	r0, [r8, #12]
   28470:	mov	r3, r6
   28474:	orr	sl, sl, r0, lsl #24
   28478:	ldrb	r0, [r8, #11]
   2847c:	orr	r5, r0, r3
   28480:	ldrb	r0, [r8, #10]
   28484:	orr	r2, r5, r0, lsl #8
   28488:	ldrb	r0, [r8, #9]
   2848c:	orr	r4, r2, r0, lsl #16
   28490:	ldrb	r2, [r1]
   28494:	movw	r0, #28769	; 0x7061
   28498:	movw	r3, #25958	; 0x6566
   2849c:	movt	r0, #27000	; 0x6978
   284a0:	movt	r3, #28786	; 0x7072
   284a4:	eor	r0, sl, r0
   284a8:	orr	r2, r4, r2, lsl #24
   284ac:	eor	r2, r2, r3
   284b0:	orrs	r0, r0, r2
   284b4:	bne	285d8 <main@@Base+0x1253c>
   284b8:	add	ip, r8, #16
   284bc:	mov	r0, #8
   284c0:	sub	sl, r9, ip
   284c4:	cmp	sl, #8
   284c8:	movcc	r0, sl
   284cc:	and	r0, r0, #15
   284d0:	sub	r2, r0, #1
   284d4:	cmp	r2, #7
   284d8:	bhi	2898c <main@@Base+0x128f0>
   284dc:	add	r7, pc, #24
   284e0:	mov	r0, #0
   284e4:	mov	r1, #0
   284e8:	mov	r3, #0
   284ec:	mov	r6, #0
   284f0:	mov	r4, #0
   284f4:	mov	r5, #0
   284f8:	ldr	pc, [r7, r2, lsl #2]
   284fc:	andeq	r8, r2, ip, asr #10
   28500:	andeq	r8, r2, r4, asr #10
   28504:	andeq	r8, r2, ip, lsr r5
   28508:	andeq	r8, r2, r4, lsr r5
   2850c:	andeq	r8, r2, r4, lsr #10
   28510:	andeq	r8, r2, ip, lsl r5
   28514:	andeq	r8, r2, ip, lsl r5
   28518:	andeq	r8, r2, ip, lsl r5
   2851c:	ldrb	r1, [r8, #21]
   28520:	lsl	r1, r1, #16
   28524:	ldrb	r2, [r8, #20]
   28528:	mov	r3, r0
   2852c:	orr	r1, r1, r2, lsl #24
   28530:	mov	r0, r1
   28534:	ldrb	r1, [r8, #19]
   28538:	orr	r6, r1, r3
   2853c:	ldrb	r1, [r8, #18]
   28540:	orr	r4, r6, r1, lsl #8
   28544:	ldrb	r1, [r8, #17]
   28548:	orr	r5, r4, r1, lsl #16
   2854c:	mov	r6, r0
   28550:	movw	r1, #0
   28554:	movw	r3, #26990	; 0x696e
   28558:	bfc	r6, #0, #16
   2855c:	movt	r1, #26418	; 0x6732
   28560:	movt	r3, #29299	; 0x7273
   28564:	eor	r2, r6, r1
   28568:	ldrb	r1, [ip]
   2856c:	orr	r1, r5, r1, lsl #24
   28570:	eor	r5, r1, r3
   28574:	orrs	r2, r2, r5
   28578:	bne	285e4 <main@@Base+0x12548>
   2857c:	cmp	sl, #7
   28580:	blt	2898c <main@@Base+0x128f0>
   28584:	ldr	r2, [sp, #28]
   28588:	mov	r1, r8
   2858c:	ldrb	r0, [r1, #22]!
   28590:	ldr	r2, [r2]
   28594:	cmp	r2, #0
   28598:	beq	2864c <main@@Base+0x125b0>
   2859c:	cmp	r0, #33	; 0x21
   285a0:	bcc	285ac <main@@Base+0x12510>
   285a4:	cmp	r0, #58	; 0x3a
   285a8:	bne	2898c <main@@Base+0x128f0>
   285ac:	ldr	r0, [sp, #28]
   285b0:	mov	r2, #0
   285b4:	str	r2, [r0]
   285b8:	ldr	r5, [sp, #24]
   285bc:	sub	r0, r9, r1
   285c0:	cmp	r0, #2
   285c4:	bge	28668 <main@@Base+0x125cc>
   285c8:	b	286d4 <main@@Base+0x12638>
   285cc:	mov	r0, sl
   285d0:	mov	r1, r8
   285d4:	b	28998 <main@@Base+0x128fc>
   285d8:	ldr	sl, [sp, #24]
   285dc:	mov	r0, sl
   285e0:	b	28998 <main@@Base+0x128fc>
   285e4:	cmp	sl, #6
   285e8:	blt	287bc <main@@Base+0x12720>
   285ec:	movw	r2, #26990	; 0x696e
   285f0:	and	r0, r0, #-16777216	; 0xff000000
   285f4:	movt	r2, #29299	; 0x7273
   285f8:	eor	r0, r0, #1728053248	; 0x67000000
   285fc:	eor	r1, r1, r2
   28600:	orrs	r0, r0, r1
   28604:	bne	287bc <main@@Base+0x12720>
   28608:	ldr	r2, [sp, #28]
   2860c:	mov	r1, r8
   28610:	ldrb	r0, [r1, #21]!
   28614:	ldr	r2, [r2]
   28618:	cmp	r2, #0
   2861c:	beq	28688 <main@@Base+0x125ec>
   28620:	cmp	r0, #33	; 0x21
   28624:	bcc	28630 <main@@Base+0x12594>
   28628:	cmp	r0, #58	; 0x3a
   2862c:	bne	287bc <main@@Base+0x12720>
   28630:	ldr	r0, [sp, #28]
   28634:	mov	r2, #0
   28638:	str	r2, [r0]
   2863c:	sub	r0, r9, r1
   28640:	cmp	r0, #2
   28644:	bge	286a0 <main@@Base+0x12604>
   28648:	b	28760 <main@@Base+0x126c4>
   2864c:	cmp	r0, #34	; 0x22
   28650:	bne	2898c <main@@Base+0x128f0>
   28654:	add	r1, r8, #23
   28658:	ldr	r5, [sp, #24]
   2865c:	sub	r0, r9, r1
   28660:	cmp	r0, #2
   28664:	blt	286d4 <main@@Base+0x12638>
   28668:	ldrb	r0, [r1]
   2866c:	cmp	r0, #32
   28670:	bls	286c0 <main@@Base+0x12624>
   28674:	mov	r4, r1
   28678:	mov	r6, ip
   2867c:	cmp	r4, r9
   28680:	bne	286f8 <main@@Base+0x1265c>
   28684:	b	28734 <main@@Base+0x12698>
   28688:	cmp	r0, #34	; 0x22
   2868c:	bne	287bc <main@@Base+0x12720>
   28690:	add	r1, r8, #22
   28694:	sub	r0, r9, r1
   28698:	cmp	r0, #2
   2869c:	blt	28760 <main@@Base+0x126c4>
   286a0:	ldrb	r0, [r1]
   286a4:	cmp	r0, #32
   286a8:	bls	2874c <main@@Base+0x126b0>
   286ac:	mov	r4, r1
   286b0:	mov	r7, ip
   286b4:	cmp	r4, r9
   286b8:	bne	28784 <main@@Base+0x126e8>
   286bc:	b	28824 <main@@Base+0x12788>
   286c0:	bne	286d4 <main@@Base+0x12638>
   286c4:	mov	r4, r1
   286c8:	ldrb	r0, [r4, #1]!
   286cc:	cmp	r0, #32
   286d0:	bhi	286ec <main@@Base+0x12650>
   286d4:	mov	r0, r5
   286d8:	mov	r2, r9
   286dc:	mov	r4, ip
   286e0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   286e4:	mov	ip, r4
   286e8:	mov	r4, r0
   286ec:	mov	r6, ip
   286f0:	cmp	r4, r9
   286f4:	beq	28734 <main@@Base+0x12698>
   286f8:	ldrb	r0, [r4]
   286fc:	cmp	r0, #58	; 0x3a
   28700:	bne	28734 <main@@Base+0x12698>
   28704:	add	r1, r4, #1
   28708:	sub	r0, r9, r1
   2870c:	cmp	r0, #2
   28710:	blt	28910 <main@@Base+0x12874>
   28714:	ldrb	r0, [r1]
   28718:	cmp	r0, #32
   2871c:	bls	28900 <main@@Base+0x12864>
   28720:	mov	r4, r1
   28724:	mov	ip, r6
   28728:	cmp	r6, r4
   2872c:	bne	2892c <main@@Base+0x12890>
   28730:	b	2898c <main@@Base+0x128f0>
   28734:	mov	r0, r5
   28738:	mov	r1, r4
   2873c:	mov	r2, r9
   28740:	mov	r3, #4
   28744:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   28748:	b	2891c <main@@Base+0x12880>
   2874c:	bne	28760 <main@@Base+0x126c4>
   28750:	mov	r4, r1
   28754:	ldrb	r0, [r4, #1]!
   28758:	cmp	r0, #32
   2875c:	bhi	28778 <main@@Base+0x126dc>
   28760:	ldr	r0, [sp, #24]
   28764:	mov	r2, r9
   28768:	mov	r4, ip
   2876c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   28770:	mov	ip, r4
   28774:	mov	r4, r0
   28778:	mov	r7, ip
   2877c:	cmp	r4, r9
   28780:	beq	28824 <main@@Base+0x12788>
   28784:	ldrb	r0, [r4]
   28788:	cmp	r0, #58	; 0x3a
   2878c:	bne	28824 <main@@Base+0x12788>
   28790:	add	r1, r4, #1
   28794:	sub	r0, r9, r1
   28798:	cmp	r0, #2
   2879c:	blt	28ab0 <main@@Base+0x12a14>
   287a0:	ldrb	r0, [r1]
   287a4:	cmp	r0, #32
   287a8:	bls	28aa0 <main@@Base+0x12a04>
   287ac:	mov	r4, r1
   287b0:	mov	ip, r7
   287b4:	cmp	r7, r4
   287b8:	bne	28acc <main@@Base+0x12a30>
   287bc:	movw	r0, #0
   287c0:	movt	r0, #26418	; 0x6732
   287c4:	add	r0, r0, #65536	; 0x10000
   287c8:	eor	r0, r6, r0
   287cc:	orrs	r0, r0, r5
   287d0:	bne	2898c <main@@Base+0x128f0>
   287d4:	cmp	sl, #7
   287d8:	ldr	sl, [sp, #24]
   287dc:	blt	28990 <main@@Base+0x128f4>
   287e0:	ldr	r2, [sp, #28]
   287e4:	mov	r1, r8
   287e8:	ldrb	r0, [r1, #22]!
   287ec:	ldr	r2, [r2]
   287f0:	cmp	r2, #0
   287f4:	beq	2883c <main@@Base+0x127a0>
   287f8:	cmp	r0, #33	; 0x21
   287fc:	bcc	28808 <main@@Base+0x1276c>
   28800:	cmp	r0, #58	; 0x3a
   28804:	bne	28990 <main@@Base+0x128f4>
   28808:	ldr	r0, [sp, #28]
   2880c:	mov	r2, #0
   28810:	str	r2, [r0]
   28814:	sub	r0, r9, r1
   28818:	cmp	r0, #2
   2881c:	bge	28854 <main@@Base+0x127b8>
   28820:	b	28888 <main@@Base+0x127ec>
   28824:	ldr	r0, [sp, #24]
   28828:	mov	r1, r4
   2882c:	mov	r2, r9
   28830:	mov	r3, #4
   28834:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   28838:	b	28abc <main@@Base+0x12a20>
   2883c:	cmp	r0, #34	; 0x22
   28840:	bne	28990 <main@@Base+0x128f4>
   28844:	add	r1, r8, #23
   28848:	sub	r0, r9, r1
   2884c:	cmp	r0, #2
   28850:	blt	28888 <main@@Base+0x127ec>
   28854:	ldrb	r0, [r1]
   28858:	cmp	r0, #32
   2885c:	bls	28874 <main@@Base+0x127d8>
   28860:	mov	r4, r1
   28864:	mov	r5, ip
   28868:	cmp	r4, r9
   2886c:	bne	288ac <main@@Base+0x12810>
   28870:	b	288e8 <main@@Base+0x1284c>
   28874:	bne	28888 <main@@Base+0x127ec>
   28878:	mov	r4, r1
   2887c:	ldrb	r0, [r4, #1]!
   28880:	cmp	r0, #32
   28884:	bhi	288a0 <main@@Base+0x12804>
   28888:	mov	r0, sl
   2888c:	mov	r2, r9
   28890:	mov	r4, ip
   28894:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   28898:	mov	ip, r4
   2889c:	mov	r4, r0
   288a0:	mov	r5, ip
   288a4:	cmp	r4, r9
   288a8:	beq	288e8 <main@@Base+0x1284c>
   288ac:	ldrb	r0, [r4]
   288b0:	cmp	r0, #58	; 0x3a
   288b4:	bne	288e8 <main@@Base+0x1284c>
   288b8:	add	r1, r4, #1
   288bc:	sub	r0, r9, r1
   288c0:	cmp	r0, #2
   288c4:	blt	28c74 <main@@Base+0x12bd8>
   288c8:	ldrb	r0, [r1]
   288cc:	cmp	r0, #32
   288d0:	bls	28c64 <main@@Base+0x12bc8>
   288d4:	mov	r4, r1
   288d8:	mov	ip, r5
   288dc:	cmp	r5, r4
   288e0:	bne	28c90 <main@@Base+0x12bf4>
   288e4:	b	28990 <main@@Base+0x128f4>
   288e8:	mov	r0, sl
   288ec:	mov	r1, r4
   288f0:	mov	r2, r9
   288f4:	mov	r3, #4
   288f8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   288fc:	b	28c80 <main@@Base+0x12be4>
   28900:	bne	28910 <main@@Base+0x12874>
   28904:	ldrb	r0, [r4, #2]!
   28908:	cmp	r0, #32
   2890c:	bhi	28920 <main@@Base+0x12884>
   28910:	mov	r0, r5
   28914:	mov	r2, r9
   28918:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2891c:	mov	r4, r0
   28920:	mov	ip, r6
   28924:	cmp	r6, r4
   28928:	beq	2898c <main@@Base+0x128f0>
   2892c:	ldr	sl, [sp, #24]
   28930:	mov	r1, #2
   28934:	ldr	r0, [sl]
   28938:	bl	32294 <flatcc_builder_start_table@@Base>
   2893c:	cmp	r0, #0
   28940:	bne	2ba30 <main@@Base+0x15994>
   28944:	cmp	r4, r9
   28948:	beq	28a70 <main@@Base+0x129d4>
   2894c:	ldrb	r0, [r4]
   28950:	cmp	r0, #123	; 0x7b
   28954:	bne	28a70 <main@@Base+0x129d4>
   28958:	ldr	r5, [sp, #32]
   2895c:	add	r1, r4, #1
   28960:	sub	r0, r9, r1
   28964:	cmp	r0, #2
   28968:	blt	28b94 <main@@Base+0x12af8>
   2896c:	ldrb	r0, [r1]
   28970:	cmp	r0, #32
   28974:	bls	28b84 <main@@Base+0x12ae8>
   28978:	mov	r4, r1
   2897c:	cmp	r4, r9
   28980:	mov	r2, r9
   28984:	bne	28bb0 <main@@Base+0x12b14>
   28988:	b	29860 <main@@Base+0x137c4>
   2898c:	ldr	sl, [sp, #24]
   28990:	mov	r0, sl
   28994:	mov	r1, ip
   28998:	mov	r2, r9
   2899c:	bl	376d0 <flatcc_json_parser_unmatched_symbol@@Base>
   289a0:	ldr	r5, [sp, #32]
   289a4:	mov	r4, r0
   289a8:	sub	r0, r9, r4
   289ac:	cmp	r0, #2
   289b0:	blt	28a24 <main@@Base+0x12988>
   289b4:	ldrb	r0, [r4]
   289b8:	cmp	r0, #32
   289bc:	bls	28a10 <main@@Base+0x12974>
   289c0:	mov	r2, r4
   289c4:	cmp	r2, r9
   289c8:	beq	2b92c <main@@Base+0x15890>
   289cc:	ldrb	r0, [r2]
   289d0:	cmp	r0, #44	; 0x2c
   289d4:	bne	2b944 <main@@Base+0x158a8>
   289d8:	add	r1, r2, #1
   289dc:	sub	r0, r9, r1
   289e0:	cmp	r0, #2
   289e4:	blt	28a54 <main@@Base+0x129b8>
   289e8:	ldrb	r0, [r1]
   289ec:	cmp	r0, #32
   289f0:	bls	28a44 <main@@Base+0x129a8>
   289f4:	mov	r2, r1
   289f8:	cmp	r2, r9
   289fc:	beq	2b960 <main@@Base+0x158c4>
   28a00:	ldrb	r0, [r2]
   28a04:	cmp	r0, #125	; 0x7d
   28a08:	bne	282b0 <main@@Base+0x12214>
   28a0c:	b	2b96c <main@@Base+0x158d0>
   28a10:	bne	28a24 <main@@Base+0x12988>
   28a14:	mov	r2, r4
   28a18:	ldrb	r0, [r2, #1]!
   28a1c:	cmp	r0, #32
   28a20:	bhi	28a38 <main@@Base+0x1299c>
   28a24:	mov	r0, sl
   28a28:	mov	r1, r4
   28a2c:	mov	r2, r9
   28a30:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   28a34:	mov	r2, r0
   28a38:	cmp	r2, r9
   28a3c:	bne	289cc <main@@Base+0x12930>
   28a40:	b	2b92c <main@@Base+0x15890>
   28a44:	bne	28a54 <main@@Base+0x129b8>
   28a48:	ldrb	r0, [r2, #2]!
   28a4c:	cmp	r0, #32
   28a50:	bhi	28a64 <main@@Base+0x129c8>
   28a54:	mov	r0, sl
   28a58:	mov	r2, r9
   28a5c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   28a60:	mov	r2, r0
   28a64:	cmp	r2, r9
   28a68:	bne	28a00 <main@@Base+0x12964>
   28a6c:	b	2b960 <main@@Base+0x158c4>
   28a70:	mov	r0, sl
   28a74:	mov	r1, r4
   28a78:	mov	r2, r9
   28a7c:	mov	r3, #21
   28a80:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   28a84:	ldr	r5, [sp, #32]
   28a88:	mov	r4, r0
   28a8c:	ldr	r0, [sp, #20]
   28a90:	ldr	r0, [r0]
   28a94:	cmp	r0, #0
   28a98:	beq	2a0a8 <main@@Base+0x1400c>
   28a9c:	b	2ba30 <main@@Base+0x15994>
   28aa0:	bne	28ab0 <main@@Base+0x12a14>
   28aa4:	ldrb	r0, [r4, #2]!
   28aa8:	cmp	r0, #32
   28aac:	bhi	28ac0 <main@@Base+0x12a24>
   28ab0:	ldr	r0, [sp, #24]
   28ab4:	mov	r2, r9
   28ab8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   28abc:	mov	r4, r0
   28ac0:	mov	ip, r7
   28ac4:	cmp	r7, r4
   28ac8:	beq	287bc <main@@Base+0x12720>
   28acc:	ldr	sl, [sp, #24]
   28ad0:	mov	r1, #9
   28ad4:	ldr	r0, [sl]
   28ad8:	bl	32294 <flatcc_builder_start_table@@Base>
   28adc:	cmp	r0, #0
   28ae0:	bne	2ba30 <main@@Base+0x15994>
   28ae4:	cmp	r4, r9
   28ae8:	beq	28b2c <main@@Base+0x12a90>
   28aec:	ldrb	r0, [r4]
   28af0:	cmp	r0, #123	; 0x7b
   28af4:	bne	28b2c <main@@Base+0x12a90>
   28af8:	ldr	r5, [sp, #32]
   28afc:	add	r1, r4, #1
   28b00:	sub	r0, r9, r1
   28b04:	cmp	r0, #2
   28b08:	blt	28c04 <main@@Base+0x12b68>
   28b0c:	ldrb	r0, [r1]
   28b10:	cmp	r0, #32
   28b14:	bls	28bf4 <main@@Base+0x12b58>
   28b18:	mov	r4, r1
   28b1c:	cmp	r4, r9
   28b20:	mov	r2, r9
   28b24:	bne	28c20 <main@@Base+0x12b84>
   28b28:	b	2a228 <main@@Base+0x1418c>
   28b2c:	mov	r0, sl
   28b30:	mov	r1, r4
   28b34:	mov	r2, r9
   28b38:	mov	r3, #21
   28b3c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   28b40:	ldr	r5, [sp, #32]
   28b44:	mov	r4, r0
   28b48:	ldr	r0, [sp, #20]
   28b4c:	ldr	r0, [r0]
   28b50:	cmp	r0, #0
   28b54:	bne	2ba30 <main@@Base+0x15994>
   28b58:	ldr	r0, [sl]
   28b5c:	bl	32c44 <flatcc_builder_end_table@@Base>
   28b60:	cmp	r0, #0
   28b64:	beq	2ba30 <main@@Base+0x15994>
   28b68:	mov	r7, r0
   28b6c:	ldr	r0, [sl]
   28b70:	mov	r1, #0
   28b74:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   28b78:	cmp	r0, #0
   28b7c:	bne	2a138 <main@@Base+0x1409c>
   28b80:	b	2ba48 <main@@Base+0x159ac>
   28b84:	bne	28b94 <main@@Base+0x12af8>
   28b88:	ldrb	r0, [r4, #2]!
   28b8c:	cmp	r0, #32
   28b90:	bhi	28ba4 <main@@Base+0x12b08>
   28b94:	mov	r0, sl
   28b98:	mov	r2, r9
   28b9c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   28ba0:	mov	r4, r0
   28ba4:	cmp	r4, r9
   28ba8:	mov	r2, r9
   28bac:	beq	29860 <main@@Base+0x137c4>
   28bb0:	ldrb	r0, [r4]
   28bb4:	cmp	r0, #125	; 0x7d
   28bb8:	bne	28bec <main@@Base+0x12b50>
   28bbc:	add	r1, r4, #1
   28bc0:	sub	r0, r9, r1
   28bc4:	cmp	r0, #2
   28bc8:	blt	2a088 <main@@Base+0x13fec>
   28bcc:	ldrb	r0, [r1]
   28bd0:	cmp	r0, #32
   28bd4:	bhi	2a038 <main@@Base+0x13f9c>
   28bd8:	bne	2a088 <main@@Base+0x13fec>
   28bdc:	ldrb	r0, [r4, #2]!
   28be0:	cmp	r0, #32
   28be4:	bls	2a088 <main@@Base+0x13fec>
   28be8:	b	2a098 <main@@Base+0x13ffc>
   28bec:	mov	r2, r4
   28bf0:	b	29860 <main@@Base+0x137c4>
   28bf4:	bne	28c04 <main@@Base+0x12b68>
   28bf8:	ldrb	r0, [r4, #2]!
   28bfc:	cmp	r0, #32
   28c00:	bhi	28c14 <main@@Base+0x12b78>
   28c04:	mov	r0, sl
   28c08:	mov	r2, r9
   28c0c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   28c10:	mov	r4, r0
   28c14:	cmp	r4, r9
   28c18:	mov	r2, r9
   28c1c:	beq	2a228 <main@@Base+0x1418c>
   28c20:	ldrb	r0, [r4]
   28c24:	cmp	r0, #125	; 0x7d
   28c28:	bne	28c5c <main@@Base+0x12bc0>
   28c2c:	add	r1, r4, #1
   28c30:	sub	r0, r9, r1
   28c34:	cmp	r0, #2
   28c38:	blt	2b908 <main@@Base+0x1586c>
   28c3c:	ldrb	r0, [r1]
   28c40:	cmp	r0, #32
   28c44:	bhi	2b8b8 <main@@Base+0x1581c>
   28c48:	bne	2b908 <main@@Base+0x1586c>
   28c4c:	ldrb	r0, [r4, #2]!
   28c50:	cmp	r0, #32
   28c54:	bhi	28b48 <main@@Base+0x12aac>
   28c58:	b	2b908 <main@@Base+0x1586c>
   28c5c:	mov	r2, r4
   28c60:	b	2a228 <main@@Base+0x1418c>
   28c64:	bne	28c74 <main@@Base+0x12bd8>
   28c68:	ldrb	r0, [r4, #2]!
   28c6c:	cmp	r0, #32
   28c70:	bhi	28c84 <main@@Base+0x12be8>
   28c74:	mov	r0, sl
   28c78:	mov	r2, r9
   28c7c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   28c80:	mov	r4, r0
   28c84:	mov	ip, r5
   28c88:	cmp	r5, r4
   28c8c:	beq	28990 <main@@Base+0x128f4>
   28c90:	ldr	r0, [sl]
   28c94:	mov	r1, #2
   28c98:	bl	32294 <flatcc_builder_start_table@@Base>
   28c9c:	cmp	r0, #0
   28ca0:	bne	2ba30 <main@@Base+0x15994>
   28ca4:	cmp	r4, r9
   28ca8:	beq	28cec <main@@Base+0x12c50>
   28cac:	ldrb	r0, [r4]
   28cb0:	cmp	r0, #123	; 0x7b
   28cb4:	bne	28cec <main@@Base+0x12c50>
   28cb8:	ldr	r5, [sp, #32]
   28cbc:	add	r1, r4, #1
   28cc0:	sub	r0, r9, r1
   28cc4:	cmp	r0, #2
   28cc8:	blt	28d2c <main@@Base+0x12c90>
   28ccc:	ldrb	r0, [r1]
   28cd0:	cmp	r0, #32
   28cd4:	bls	28d1c <main@@Base+0x12c80>
   28cd8:	mov	r4, r1
   28cdc:	cmp	r4, r9
   28ce0:	mov	r2, r9
   28ce4:	bne	28d48 <main@@Base+0x12cac>
   28ce8:	b	290e4 <main@@Base+0x13048>
   28cec:	mov	r0, sl
   28cf0:	mov	r1, r4
   28cf4:	mov	r2, r9
   28cf8:	mov	r3, #21
   28cfc:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   28d00:	ldr	r5, [sp, #32]
   28d04:	mov	r4, r0
   28d08:	ldr	r0, [sp, #20]
   28d0c:	ldr	r0, [r0]
   28d10:	cmp	r0, #0
   28d14:	beq	2a110 <main@@Base+0x14074>
   28d18:	b	2ba30 <main@@Base+0x15994>
   28d1c:	bne	28d2c <main@@Base+0x12c90>
   28d20:	ldrb	r0, [r4, #2]!
   28d24:	cmp	r0, #32
   28d28:	bhi	28d3c <main@@Base+0x12ca0>
   28d2c:	mov	r0, sl
   28d30:	mov	r2, r9
   28d34:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   28d38:	mov	r4, r0
   28d3c:	cmp	r4, r9
   28d40:	mov	r2, r9
   28d44:	beq	290e4 <main@@Base+0x13048>
   28d48:	ldrb	r0, [r4]
   28d4c:	cmp	r0, #125	; 0x7d
   28d50:	bne	28d84 <main@@Base+0x12ce8>
   28d54:	add	r1, r4, #1
   28d58:	sub	r0, r9, r1
   28d5c:	cmp	r0, #2
   28d60:	blt	2a0f0 <main@@Base+0x14054>
   28d64:	ldrb	r0, [r1]
   28d68:	cmp	r0, #32
   28d6c:	bhi	29730 <main@@Base+0x13694>
   28d70:	bne	2a0f0 <main@@Base+0x14054>
   28d74:	ldrb	r0, [r4, #2]!
   28d78:	cmp	r0, #32
   28d7c:	bls	2a0f0 <main@@Base+0x14054>
   28d80:	b	2a100 <main@@Base+0x14064>
   28d84:	mov	r2, r4
   28d88:	b	290e4 <main@@Base+0x13048>
   28d8c:	mov	r0, sl
   28d90:	mov	r1, r7
   28d94:	mov	r2, r9
   28d98:	mov	r3, #4
   28d9c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   28da0:	b	28f84 <main@@Base+0x12ee8>
   28da4:	ldr	sl, [sp, #24]
   28da8:	ldr	r5, [sp, #32]
   28dac:	ldr	r4, [sp, #4]
   28db0:	bne	28dc0 <main@@Base+0x12d24>
   28db4:	ldrb	r0, [r7, #2]!
   28db8:	cmp	r0, #32
   28dbc:	bhi	28dd0 <main@@Base+0x12d34>
   28dc0:	mov	r0, sl
   28dc4:	mov	r2, r9
   28dc8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   28dcc:	mov	r7, r0
   28dd0:	cmp	r4, r7
   28dd4:	beq	29548 <main@@Base+0x134ac>
   28dd8:	mov	r6, #0
   28ddc:	cmp	r7, r9
   28de0:	str	r6, [fp, #-36]	; 0xffffffdc
   28de4:	str	r6, [fp, #-40]	; 0xffffffd8
   28de8:	str	r6, [sp, #44]	; 0x2c
   28dec:	str	r6, [sp, #40]	; 0x28
   28df0:	str	r6, [fp, #-44]	; 0xffffffd4
   28df4:	beq	28e54 <main@@Base+0x12db8>
   28df8:	sub	r0, fp, #40	; 0x28
   28dfc:	mov	r1, r7
   28e00:	mov	r2, r9
   28e04:	sub	r3, fp, #44	; 0x2c
   28e08:	str	r0, [sp]
   28e0c:	mov	r0, sl
   28e10:	bl	392f4 <flatcc_json_parser_integer@@Base>
   28e14:	cmp	r0, r7
   28e18:	beq	28e68 <main@@Base+0x12dcc>
   28e1c:	mov	r4, r0
   28e20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   28e24:	ldr	r6, [fp, #-40]	; 0xffffffd8
   28e28:	ldr	r5, [fp, #-36]	; 0xffffffdc
   28e2c:	cmp	r0, #0
   28e30:	beq	28e84 <main@@Base+0x12de8>
   28e34:	subs	r0, r6, #1
   28e38:	sbcs	r0, r5, #-2147483648	; 0x80000000
   28e3c:	bcc	28ebc <main@@Base+0x12e20>
   28e40:	ldr	sl, [sp, #24]
   28e44:	mov	r1, r4
   28e48:	mov	r2, r9
   28e4c:	mov	r3, #8
   28e50:	b	28e9c <main@@Base+0x12e00>
   28e54:	mov	r5, #0
   28e58:	mov	r4, r9
   28e5c:	cmp	r7, r4
   28e60:	bne	28f18 <main@@Base+0x12e7c>
   28e64:	b	28ed8 <main@@Base+0x12e3c>
   28e68:	mov	r6, #0
   28e6c:	mov	r5, #0
   28e70:	mov	r4, r7
   28e74:	ldr	sl, [sp, #24]
   28e78:	cmp	r7, r4
   28e7c:	bne	28f18 <main@@Base+0x12e7c>
   28e80:	b	28ed8 <main@@Base+0x12e3c>
   28e84:	cmn	r5, #1
   28e88:	bgt	28ec4 <main@@Base+0x12e28>
   28e8c:	ldr	sl, [sp, #24]
   28e90:	mov	r1, r4
   28e94:	mov	r2, r9
   28e98:	mov	r3, #7
   28e9c:	mov	r0, sl
   28ea0:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   28ea4:	mov	r4, r0
   28ea8:	mov	r6, #0
   28eac:	mov	r5, #0
   28eb0:	cmp	r7, r4
   28eb4:	bne	28f18 <main@@Base+0x12e7c>
   28eb8:	b	28ed8 <main@@Base+0x12e3c>
   28ebc:	rsbs	r6, r6, #0
   28ec0:	rsc	r5, r5, #0
   28ec4:	str	r6, [sp, #40]	; 0x28
   28ec8:	str	r5, [sp, #44]	; 0x2c
   28ecc:	ldr	sl, [sp, #24]
   28ed0:	cmp	r7, r4
   28ed4:	bne	28f18 <main@@Base+0x12e7c>
   28ed8:	add	r0, sp, #40	; 0x28
   28edc:	mov	r1, r7
   28ee0:	mov	r2, r9
   28ee4:	str	r0, [sp]
   28ee8:	movw	r0, #508	; 0x1fc
   28eec:	movt	r0, #6
   28ef0:	add	r3, r0, #84	; 0x54
   28ef4:	mov	r0, sl
   28ef8:	bl	2636c <main@@Base+0x102d0>
   28efc:	mov	r4, r0
   28f00:	cmp	r0, r7
   28f04:	cmpne	r4, r9
   28f08:	beq	2ba2c <main@@Base+0x15990>
   28f0c:	ldr	r6, [sp, #40]	; 0x28
   28f10:	ldr	r5, [sp, #44]	; 0x2c
   28f14:	ldr	sl, [sp, #24]
   28f18:	orrs	r0, r6, r5
   28f1c:	bne	28f2c <main@@Base+0x12e90>
   28f20:	ldrb	r0, [sl, #8]
   28f24:	tst	r0, #2
   28f28:	beq	29600 <main@@Base+0x13564>
   28f2c:	ldr	r0, [sl]
   28f30:	mov	r1, #0
   28f34:	mov	r2, #8
   28f38:	mov	r3, #8
   28f3c:	bl	33604 <flatcc_builder_table_add@@Base>
   28f40:	cmp	r0, #0
   28f44:	beq	2ba2c <main@@Base+0x15990>
   28f48:	str	r6, [r0]
   28f4c:	str	r5, [r0, #4]
   28f50:	ldr	r5, [sp, #32]
   28f54:	sub	r0, r9, r4
   28f58:	cmp	r0, #2
   28f5c:	bge	29610 <main@@Base+0x13574>
   28f60:	b	29640 <main@@Base+0x135a4>
   28f64:	ldr	sl, [sp, #24]
   28f68:	bne	28f78 <main@@Base+0x12edc>
   28f6c:	ldrb	r0, [r7, #2]!
   28f70:	cmp	r0, #32
   28f74:	bhi	28f88 <main@@Base+0x12eec>
   28f78:	mov	r0, sl
   28f7c:	mov	r2, r9
   28f80:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   28f84:	mov	r7, r0
   28f88:	cmp	r8, r7
   28f8c:	beq	295ec <main@@Base+0x13550>
   28f90:	mov	r5, #0
   28f94:	cmp	r7, r9
   28f98:	str	r5, [fp, #-36]	; 0xffffffdc
   28f9c:	str	r5, [fp, #-40]	; 0xffffffd8
   28fa0:	str	r5, [fp, #-44]	; 0xffffffd4
   28fa4:	str	r5, [sp, #40]	; 0x28
   28fa8:	beq	28ff4 <main@@Base+0x12f58>
   28fac:	sub	r0, fp, #40	; 0x28
   28fb0:	mov	r1, r7
   28fb4:	mov	r2, r9
   28fb8:	add	r3, sp, #40	; 0x28
   28fbc:	str	r0, [sp]
   28fc0:	mov	r0, sl
   28fc4:	bl	392f4 <flatcc_json_parser_integer@@Base>
   28fc8:	cmp	r0, r7
   28fcc:	beq	29004 <main@@Base+0x12f68>
   28fd0:	mov	r4, r0
   28fd4:	ldr	r0, [sp, #40]	; 0x28
   28fd8:	cmp	r0, #0
   28fdc:	beq	29018 <main@@Base+0x12f7c>
   28fe0:	ldr	sl, [sp, #24]
   28fe4:	mov	r1, r4
   28fe8:	mov	r2, r9
   28fec:	mov	r3, #8
   28ff0:	b	29034 <main@@Base+0x12f98>
   28ff4:	mov	r4, r9
   28ff8:	cmp	r7, r4
   28ffc:	bne	29084 <main@@Base+0x12fe8>
   29000:	b	29048 <main@@Base+0x12fac>
   29004:	mov	r4, r7
   29008:	ldr	sl, [sp, #24]
   2900c:	cmp	r7, r4
   29010:	bne	29084 <main@@Base+0x12fe8>
   29014:	b	29048 <main@@Base+0x12fac>
   29018:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2901c:	cmp	r0, #0
   29020:	beq	290cc <main@@Base+0x13030>
   29024:	ldr	sl, [sp, #24]
   29028:	mov	r1, r4
   2902c:	mov	r2, r9
   29030:	mov	r3, #7
   29034:	mov	r0, sl
   29038:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2903c:	mov	r4, r0
   29040:	cmp	r7, r4
   29044:	bne	29084 <main@@Base+0x12fe8>
   29048:	sub	r0, fp, #44	; 0x2c
   2904c:	mov	r1, r7
   29050:	mov	r2, r9
   29054:	str	r0, [sp]
   29058:	movw	r0, #508	; 0x1fc
   2905c:	movt	r0, #6
   29060:	add	r3, r0, #72	; 0x48
   29064:	mov	r0, sl
   29068:	bl	265c4 <main@@Base+0x10528>
   2906c:	mov	r4, r0
   29070:	cmp	r0, r7
   29074:	cmpne	r4, r9
   29078:	beq	2ba2c <main@@Base+0x15990>
   2907c:	ldr	r5, [fp, #-44]	; 0xffffffd4
   29080:	ldr	sl, [sp, #24]
   29084:	cmp	r5, #0
   29088:	bne	29098 <main@@Base+0x12ffc>
   2908c:	ldrb	r0, [sl, #8]
   29090:	tst	r0, #2
   29094:	beq	29600 <main@@Base+0x13564>
   29098:	ldr	r0, [sl]
   2909c:	mov	r1, #1
   290a0:	mov	r2, #4
   290a4:	mov	r3, #4
   290a8:	bl	33604 <flatcc_builder_table_add@@Base>
   290ac:	cmp	r0, #0
   290b0:	beq	2ba2c <main@@Base+0x15990>
   290b4:	str	r5, [r0]
   290b8:	ldr	r5, [sp, #32]
   290bc:	sub	r0, r9, r4
   290c0:	cmp	r0, #2
   290c4:	bge	29610 <main@@Base+0x13574>
   290c8:	b	29640 <main@@Base+0x135a4>
   290cc:	ldr	r5, [fp, #-40]	; 0xffffffd8
   290d0:	str	r5, [fp, #-44]	; 0xffffffd4
   290d4:	ldr	sl, [sp, #24]
   290d8:	cmp	r7, r4
   290dc:	bne	29084 <main@@Base+0x12fe8>
   290e0:	b	29048 <main@@Base+0x12fac>
   290e4:	cmp	r2, r9
   290e8:	mov	r1, r9
   290ec:	beq	29144 <main@@Base+0x130a8>
   290f0:	ldrb	r0, [r2]
   290f4:	cmp	r0, #46	; 0x2e
   290f8:	beq	29118 <main@@Base+0x1307c>
   290fc:	cmp	r0, #34	; 0x22
   29100:	bne	29134 <main@@Base+0x13098>
   29104:	ldr	r0, [sp, #28]
   29108:	mov	r1, #0
   2910c:	str	r1, [r0]
   29110:	add	r1, r2, #1
   29114:	b	29144 <main@@Base+0x130a8>
   29118:	mov	r1, r2
   2911c:	mov	r0, sl
   29120:	mov	r2, r9
   29124:	mov	r3, #5
   29128:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2912c:	mov	r1, r0
   29130:	b	29144 <main@@Base+0x130a8>
   29134:	ldr	r0, [sp, #28]
   29138:	mov	r1, #1
   2913c:	str	r1, [r0]
   29140:	mov	r1, r2
   29144:	sub	r0, r9, r1
   29148:	mov	r2, #8
   2914c:	cmp	r0, #8
   29150:	movcs	r0, r2
   29154:	and	r0, r0, #15
   29158:	sub	r7, r0, #1
   2915c:	cmp	r7, #7
   29160:	bhi	293f0 <main@@Base+0x13354>
   29164:	add	r0, pc, #32
   29168:	mov	r8, #0
   2916c:	mov	ip, #0
   29170:	mov	lr, #0
   29174:	mov	r6, #0
   29178:	mov	r3, #0
   2917c:	mov	r5, #0
   29180:	mov	r2, #0
   29184:	mov	r4, #0
   29188:	ldr	pc, [r0, r7, lsl #2]
   2918c:	strdeq	r9, [r2], -r0
   29190:	andeq	r9, r2, r8, ror #3
   29194:	andeq	r9, r2, r0, ror #3
   29198:	ldrdeq	r9, [r2], -r8
   2919c:	andeq	r9, r2, ip, asr #3
   291a0:	andeq	r9, r2, r0, asr #3
   291a4:			; <UNDEFINED> instruction: 0x000291b0
   291a8:	andeq	r9, r2, ip, lsr #3
   291ac:	ldrb	ip, [r1, #7]
   291b0:	ldrb	r0, [r1, #6]
   291b4:	mov	lr, r8
   291b8:	orr	r0, ip, r0, lsl #8
   291bc:	mov	r8, r0
   291c0:	ldrb	r0, [r1, #5]
   291c4:	mov	r6, lr
   291c8:	orr	r8, r8, r0, lsl #16
   291cc:	ldrb	r0, [r1, #4]
   291d0:	mov	r3, r6
   291d4:	orr	r8, r8, r0, lsl #24
   291d8:	ldrb	r0, [r1, #3]
   291dc:	orr	r5, r0, r3
   291e0:	ldrb	r0, [r1, #2]
   291e4:	orr	r2, r5, r0, lsl #8
   291e8:	ldrb	r0, [r1, #1]
   291ec:	orr	r4, r2, r0, lsl #16
   291f0:	ldrb	r2, [r1]
   291f4:	movw	r0, #25186	; 0x6262
   291f8:	movw	r3, #24929	; 0x6161
   291fc:	movt	r0, #24418	; 0x5f62
   29200:	movt	r3, #24929	; 0x6161
   29204:	eor	r0, r8, r0
   29208:	orr	r2, r4, r2, lsl #24
   2920c:	eor	r2, r2, r3
   29210:	orrs	r0, r0, r2
   29214:	bne	293f0 <main@@Base+0x13354>
   29218:	add	r4, r1, #8
   2921c:	mov	r0, #8
   29220:	sub	lr, r9, r4
   29224:	cmp	lr, #8
   29228:	movcc	r0, lr
   2922c:	and	r0, r0, #15
   29230:	sub	r6, r0, #1
   29234:	cmp	r6, #7
   29238:	bhi	29464 <main@@Base+0x133c8>
   2923c:	str	r4, [sp, #4]
   29240:	add	r8, pc, #32
   29244:	mov	r2, #0
   29248:	mov	ip, #0
   2924c:	mov	sl, #0
   29250:	mov	r5, #0
   29254:	mov	r7, #0
   29258:	mov	r4, #0
   2925c:	mov	r0, #0
   29260:	mov	r3, #0
   29264:	ldr	pc, [r8, r6, lsl #2]
   29268:	andeq	r9, r2, ip, asr #5
   2926c:	andeq	r9, r2, r4, asr #5
   29270:			; <UNDEFINED> instruction: 0x000292bc
   29274:			; <UNDEFINED> instruction: 0x000292b4
   29278:	andeq	r9, r2, r8, lsr #5
   2927c:	muleq	r2, ip, r2
   29280:	andeq	r9, r2, ip, lsl #5
   29284:	andeq	r9, r2, r8, lsl #5
   29288:	ldrb	ip, [r1, #15]
   2928c:	ldrb	r0, [r1, #14]
   29290:	mov	sl, r2
   29294:	orr	r0, ip, r0, lsl #8
   29298:	mov	r2, r0
   2929c:	ldrb	r0, [r1, #13]
   292a0:	mov	r5, sl
   292a4:	orr	r2, r2, r0, lsl #16
   292a8:	ldrb	r0, [r1, #12]
   292ac:	mov	r7, r5
   292b0:	orr	r2, r2, r0, lsl #24
   292b4:	ldrb	r0, [r1, #11]
   292b8:	orr	r4, r0, r7
   292bc:	ldrb	r0, [r1, #10]
   292c0:	orr	r0, r4, r0, lsl #8
   292c4:	ldrb	r3, [r1, #9]
   292c8:	orr	r3, r0, r3, lsl #16
   292cc:	ldr	r4, [sp, #4]
   292d0:	movw	r0, #29791	; 0x745f
   292d4:	movt	r0, #24946	; 0x6172
   292d8:	eor	r7, r2, r0
   292dc:	ldrb	r0, [r4]
   292e0:	orr	r0, r3, r0, lsl #24
   292e4:	movw	r3, #29556	; 0x7374
   292e8:	movt	r3, #25183	; 0x625f
   292ec:	eor	r0, r0, r3
   292f0:	orrs	r3, r7, r0
   292f4:	bne	293f8 <main@@Base+0x1335c>
   292f8:	add	r8, r1, #16
   292fc:	mov	r2, #8
   29300:	ldr	sl, [sp, #24]
   29304:	sub	ip, r9, r8
   29308:	cmp	ip, #8
   2930c:	movcc	r2, ip
   29310:	and	r2, r2, #15
   29314:	sub	r7, r2, #1
   29318:	cmp	r7, #7
   2931c:	bhi	295ec <main@@Base+0x13550>
   29320:	add	r0, pc, #20
   29324:	mov	r2, #0
   29328:	mov	r3, #0
   2932c:	mov	r6, #0
   29330:	mov	r5, #0
   29334:	mov	r4, #0
   29338:	ldr	pc, [r0, r7, lsl #2]
   2933c:	andeq	r9, r2, r0, lsl #7
   29340:	andeq	r9, r2, r8, ror r3
   29344:	andeq	r9, r2, r0, ror r3
   29348:	andeq	r9, r2, r4, ror #6
   2934c:	andeq	r9, r2, ip, asr r3
   29350:	andeq	r9, r2, ip, asr r3
   29354:	andeq	r9, r2, ip, asr r3
   29358:	andeq	r9, r2, ip, asr r3
   2935c:	ldrb	r0, [r1, #20]
   29360:	lsl	r3, r0, #24
   29364:	ldrb	r0, [r1, #19]
   29368:	orr	r6, r0, r2
   2936c:	mov	r2, r3
   29370:	ldrb	r0, [r1, #18]
   29374:	orr	r5, r6, r0, lsl #8
   29378:	ldrb	r0, [r1, #17]
   2937c:	orr	r4, r5, r0, lsl #16
   29380:	ldrb	r0, [r8]
   29384:	movw	r3, #25968	; 0x6570
   29388:	and	r2, r2, #-16777216	; 0xff000000
   2938c:	movt	r3, #29556	; 0x7374
   29390:	eor	r2, r2, #1929379840	; 0x73000000
   29394:	orr	r0, r4, r0, lsl #24
   29398:	eor	r0, r0, r3
   2939c:	orrs	r0, r2, r0
   293a0:	bne	295ec <main@@Base+0x13550>
   293a4:	cmp	ip, #6
   293a8:	blt	295ec <main@@Base+0x13550>
   293ac:	ldr	r3, [sp, #28]
   293b0:	mov	r2, r1
   293b4:	ldrb	r0, [r2, #21]!
   293b8:	ldr	r3, [r3]
   293bc:	cmp	r3, #0
   293c0:	beq	294a4 <main@@Base+0x13408>
   293c4:	cmp	r0, #33	; 0x21
   293c8:	bcc	293d4 <main@@Base+0x13338>
   293cc:	cmp	r0, #58	; 0x3a
   293d0:	bne	295ec <main@@Base+0x13550>
   293d4:	ldr	r0, [sp, #28]
   293d8:	mov	r1, #0
   293dc:	str	r1, [r0]
   293e0:	sub	r0, r9, r2
   293e4:	cmp	r0, #2
   293e8:	bge	294bc <main@@Base+0x13420>
   293ec:	b	29598 <main@@Base+0x134fc>
   293f0:	mov	r0, sl
   293f4:	b	295f4 <main@@Base+0x13558>
   293f8:	movw	r3, #29440	; 0x7300
   293fc:	ldr	sl, [sp, #24]
   29400:	bic	r2, r2, #255	; 0xff
   29404:	movt	r3, #25968	; 0x6570
   29408:	eor	r2, r2, r3
   2940c:	orrs	r0, r2, r0
   29410:	bne	29464 <main@@Base+0x133c8>
   29414:	ldr	r5, [sp, #32]
   29418:	cmp	lr, #8
   2941c:	blt	29548 <main@@Base+0x134ac>
   29420:	ldr	r3, [sp, #28]
   29424:	mov	r2, r1
   29428:	ldrb	r0, [r2, #15]!
   2942c:	ldr	r3, [r3]
   29430:	cmp	r3, #0
   29434:	beq	29470 <main@@Base+0x133d4>
   29438:	cmp	r0, #33	; 0x21
   2943c:	bcc	29448 <main@@Base+0x133ac>
   29440:	cmp	r0, #58	; 0x3a
   29444:	bne	29548 <main@@Base+0x134ac>
   29448:	ldr	r0, [sp, #28]
   2944c:	mov	r1, #0
   29450:	str	r1, [r0]
   29454:	sub	r0, r9, r2
   29458:	cmp	r0, #2
   2945c:	bge	29488 <main@@Base+0x133ec>
   29460:	b	294ec <main@@Base+0x13450>
   29464:	mov	r0, sl
   29468:	mov	r1, r4
   2946c:	b	295f4 <main@@Base+0x13558>
   29470:	cmp	r0, #34	; 0x22
   29474:	bne	29548 <main@@Base+0x134ac>
   29478:	add	r2, r1, #16
   2947c:	sub	r0, r9, r2
   29480:	cmp	r0, #2
   29484:	blt	294ec <main@@Base+0x13450>
   29488:	ldrb	r0, [r2]
   2948c:	cmp	r0, #32
   29490:	bls	294d8 <main@@Base+0x1343c>
   29494:	mov	r7, r2
   29498:	cmp	r7, r9
   2949c:	bne	29508 <main@@Base+0x1346c>
   294a0:	b	2956c <main@@Base+0x134d0>
   294a4:	cmp	r0, #34	; 0x22
   294a8:	bne	295ec <main@@Base+0x13550>
   294ac:	add	r2, r1, #22
   294b0:	sub	r0, r9, r2
   294b4:	cmp	r0, #2
   294b8:	blt	29598 <main@@Base+0x134fc>
   294bc:	ldrb	r0, [r2]
   294c0:	cmp	r0, #32
   294c4:	bls	29584 <main@@Base+0x134e8>
   294c8:	mov	r7, r2
   294cc:	cmp	r7, r9
   294d0:	bne	295b4 <main@@Base+0x13518>
   294d4:	b	28d8c <main@@Base+0x12cf0>
   294d8:	bne	294ec <main@@Base+0x13450>
   294dc:	mov	r7, r2
   294e0:	ldrb	r0, [r7, #1]!
   294e4:	cmp	r0, #32
   294e8:	bhi	29500 <main@@Base+0x13464>
   294ec:	mov	r1, r2
   294f0:	mov	r0, sl
   294f4:	mov	r2, r9
   294f8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   294fc:	mov	r7, r0
   29500:	cmp	r7, r9
   29504:	beq	2956c <main@@Base+0x134d0>
   29508:	ldrb	r0, [r7]
   2950c:	cmp	r0, #58	; 0x3a
   29510:	bne	2956c <main@@Base+0x134d0>
   29514:	add	r1, r7, #1
   29518:	sub	r0, r9, r1
   2951c:	cmp	r0, #2
   29520:	blt	28dc0 <main@@Base+0x12d24>
   29524:	ldrb	r0, [r1]
   29528:	cmp	r0, #32
   2952c:	bls	28da4 <main@@Base+0x12d08>
   29530:	ldr	sl, [sp, #24]
   29534:	ldr	r5, [sp, #32]
   29538:	ldr	r4, [sp, #4]
   2953c:	mov	r7, r1
   29540:	cmp	r4, r7
   29544:	bne	28dd8 <main@@Base+0x12d3c>
   29548:	mov	r0, sl
   2954c:	mov	r1, r4
   29550:	mov	r2, r9
   29554:	bl	376d0 <flatcc_json_parser_unmatched_symbol@@Base>
   29558:	mov	r4, r0
   2955c:	sub	r0, r9, r4
   29560:	cmp	r0, #2
   29564:	blt	29640 <main@@Base+0x135a4>
   29568:	b	29610 <main@@Base+0x13574>
   2956c:	mov	r0, sl
   29570:	mov	r1, r7
   29574:	mov	r2, r9
   29578:	mov	r3, #4
   2957c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   29580:	b	28dcc <main@@Base+0x12d30>
   29584:	bne	29598 <main@@Base+0x134fc>
   29588:	mov	r7, r2
   2958c:	ldrb	r0, [r7, #1]!
   29590:	cmp	r0, #32
   29594:	bhi	295ac <main@@Base+0x13510>
   29598:	mov	r1, r2
   2959c:	mov	r0, sl
   295a0:	mov	r2, r9
   295a4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   295a8:	mov	r7, r0
   295ac:	cmp	r7, r9
   295b0:	beq	28d8c <main@@Base+0x12cf0>
   295b4:	ldrb	r0, [r7]
   295b8:	cmp	r0, #58	; 0x3a
   295bc:	bne	28d8c <main@@Base+0x12cf0>
   295c0:	add	r1, r7, #1
   295c4:	sub	r0, r9, r1
   295c8:	cmp	r0, #2
   295cc:	blt	28f78 <main@@Base+0x12edc>
   295d0:	ldrb	r0, [r1]
   295d4:	cmp	r0, #32
   295d8:	bls	28f64 <main@@Base+0x12ec8>
   295dc:	ldr	sl, [sp, #24]
   295e0:	mov	r7, r1
   295e4:	cmp	r8, r7
   295e8:	bne	28f90 <main@@Base+0x12ef4>
   295ec:	mov	r0, sl
   295f0:	mov	r1, r8
   295f4:	mov	r2, r9
   295f8:	bl	376d0 <flatcc_json_parser_unmatched_symbol@@Base>
   295fc:	mov	r4, r0
   29600:	ldr	r5, [sp, #32]
   29604:	sub	r0, r9, r4
   29608:	cmp	r0, #2
   2960c:	blt	29640 <main@@Base+0x135a4>
   29610:	ldrb	r0, [r4]
   29614:	cmp	r0, #32
   29618:	bls	2962c <main@@Base+0x13590>
   2961c:	mov	r2, r4
   29620:	cmp	r2, r9
   29624:	bne	2965c <main@@Base+0x135c0>
   29628:	b	296ec <main@@Base+0x13650>
   2962c:	bne	29640 <main@@Base+0x135a4>
   29630:	mov	r2, r4
   29634:	ldrb	r0, [r2, #1]!
   29638:	cmp	r0, #32
   2963c:	bhi	29654 <main@@Base+0x135b8>
   29640:	mov	r0, sl
   29644:	mov	r1, r4
   29648:	mov	r2, r9
   2964c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   29650:	mov	r2, r0
   29654:	cmp	r2, r9
   29658:	beq	296ec <main@@Base+0x13650>
   2965c:	ldrb	r0, [r2]
   29660:	cmp	r0, #44	; 0x2c
   29664:	bne	29704 <main@@Base+0x13668>
   29668:	add	r1, r2, #1
   2966c:	sub	r0, r9, r1
   29670:	cmp	r0, #2
   29674:	blt	296a4 <main@@Base+0x13608>
   29678:	ldrb	r0, [r1]
   2967c:	cmp	r0, #32
   29680:	bls	29694 <main@@Base+0x135f8>
   29684:	mov	r2, r1
   29688:	cmp	r2, r9
   2968c:	bne	296bc <main@@Base+0x13620>
   29690:	b	29748 <main@@Base+0x136ac>
   29694:	bne	296a4 <main@@Base+0x13608>
   29698:	ldrb	r0, [r2, #2]!
   2969c:	cmp	r0, #32
   296a0:	bhi	296b4 <main@@Base+0x13618>
   296a4:	mov	r0, sl
   296a8:	mov	r2, r9
   296ac:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   296b0:	mov	r2, r0
   296b4:	cmp	r2, r9
   296b8:	beq	29748 <main@@Base+0x136ac>
   296bc:	ldrb	r0, [r2]
   296c0:	cmp	r0, #125	; 0x7d
   296c4:	bne	290e4 <main@@Base+0x13048>
   296c8:	add	r1, r2, #1
   296cc:	sub	r0, r9, r1
   296d0:	cmp	r0, #2
   296d4:	blt	2a0f0 <main@@Base+0x14054>
   296d8:	ldrb	r0, [r1]
   296dc:	cmp	r0, #32
   296e0:	bhi	29730 <main@@Base+0x13694>
   296e4:	beq	2a0e0 <main@@Base+0x14044>
   296e8:	b	2a0f0 <main@@Base+0x14054>
   296ec:	mov	r4, r9
   296f0:	ldr	r0, [sp, #20]
   296f4:	ldr	r0, [r0]
   296f8:	cmp	r0, #0
   296fc:	beq	2a110 <main@@Base+0x14074>
   29700:	b	2ba30 <main@@Base+0x15994>
   29704:	cmp	r0, #125	; 0x7d
   29708:	bne	29754 <main@@Base+0x136b8>
   2970c:	add	r1, r2, #1
   29710:	sub	r0, r9, r1
   29714:	cmp	r0, #2
   29718:	blt	2a0f0 <main@@Base+0x14054>
   2971c:	ldrb	r0, [r1]
   29720:	cmp	r0, #32
   29724:	bls	2a0d4 <main@@Base+0x14038>
   29728:	ldr	sl, [sp, #24]
   2972c:	ldr	r5, [sp, #32]
   29730:	mov	r4, r1
   29734:	ldr	r0, [sp, #20]
   29738:	ldr	r0, [r0]
   2973c:	cmp	r0, #0
   29740:	beq	2a110 <main@@Base+0x14074>
   29744:	b	2ba30 <main@@Base+0x15994>
   29748:	mov	r0, sl
   2974c:	mov	r1, r9
   29750:	b	2975c <main@@Base+0x136c0>
   29754:	mov	r0, sl
   29758:	mov	r1, r2
   2975c:	mov	r2, r9
   29760:	mov	r3, #10
   29764:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   29768:	b	2a0fc <main@@Base+0x14060>
   2976c:	mov	r4, r9
   29770:	cmp	r7, r4
   29774:	bne	2981c <main@@Base+0x13780>
   29778:	b	297dc <main@@Base+0x13740>
   2977c:	mov	r4, r7
   29780:	cmp	r7, r4
   29784:	bne	2981c <main@@Base+0x13780>
   29788:	b	297dc <main@@Base+0x13740>
   2978c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29790:	cmp	r0, #0
   29794:	beq	297c4 <main@@Base+0x13728>
   29798:	ldr	sl, [sp, #24]
   2979c:	mov	r1, r4
   297a0:	mov	r2, r9
   297a4:	mov	r3, #7
   297a8:	mov	r0, sl
   297ac:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   297b0:	mov	r4, r0
   297b4:	ldr	r5, [sp, #32]
   297b8:	cmp	r7, r4
   297bc:	bne	2981c <main@@Base+0x13780>
   297c0:	b	297dc <main@@Base+0x13740>
   297c4:	ldr	r6, [fp, #-40]	; 0xffffffd8
   297c8:	ldr	sl, [sp, #24]
   297cc:	str	r6, [fp, #-44]	; 0xffffffd4
   297d0:	ldr	r5, [sp, #32]
   297d4:	cmp	r7, r4
   297d8:	bne	2981c <main@@Base+0x13780>
   297dc:	sub	r0, fp, #44	; 0x2c
   297e0:	mov	r1, r7
   297e4:	mov	r2, r9
   297e8:	str	r0, [sp]
   297ec:	movw	r0, #388	; 0x184
   297f0:	movt	r0, #6
   297f4:	add	r3, r0, #108	; 0x6c
   297f8:	mov	r0, sl
   297fc:	bl	265c4 <main@@Base+0x10528>
   29800:	mov	r4, r0
   29804:	cmp	r0, r7
   29808:	cmpne	r4, r9
   2980c:	beq	2ba2c <main@@Base+0x15990>
   29810:	ldr	r6, [fp, #-44]	; 0xffffffd4
   29814:	ldr	sl, [sp, #24]
   29818:	ldr	r5, [sp, #32]
   2981c:	cmp	r6, #0
   29820:	bne	29830 <main@@Base+0x13794>
   29824:	ldrb	r0, [sl, #8]
   29828:	tst	r0, #2
   2982c:	beq	29f24 <main@@Base+0x13e88>
   29830:	ldr	r0, [sl]
   29834:	mov	r1, #1
   29838:	mov	r2, #4
   2983c:	mov	r3, #4
   29840:	bl	33604 <flatcc_builder_table_add@@Base>
   29844:	cmp	r0, #0
   29848:	beq	2ba2c <main@@Base+0x15990>
   2984c:	str	r6, [r0]
   29850:	sub	r0, r9, r4
   29854:	cmp	r0, #2
   29858:	bge	29f30 <main@@Base+0x13e94>
   2985c:	b	29f60 <main@@Base+0x13ec4>
   29860:	cmp	r2, r9
   29864:	mov	r1, r9
   29868:	beq	298c0 <main@@Base+0x13824>
   2986c:	ldrb	r0, [r2]
   29870:	cmp	r0, #46	; 0x2e
   29874:	beq	29894 <main@@Base+0x137f8>
   29878:	cmp	r0, #34	; 0x22
   2987c:	bne	298b0 <main@@Base+0x13814>
   29880:	ldr	r0, [sp, #28]
   29884:	mov	r1, #0
   29888:	str	r1, [r0]
   2988c:	add	r1, r2, #1
   29890:	b	298c0 <main@@Base+0x13824>
   29894:	mov	r1, r2
   29898:	mov	r0, sl
   2989c:	mov	r2, r9
   298a0:	mov	r3, #5
   298a4:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   298a8:	mov	r1, r0
   298ac:	b	298c0 <main@@Base+0x13824>
   298b0:	ldr	r0, [sp, #28]
   298b4:	mov	r1, #1
   298b8:	str	r1, [r0]
   298bc:	mov	r1, r2
   298c0:	sub	r0, r9, r1
   298c4:	mov	r2, #8
   298c8:	cmp	r0, #8
   298cc:	movcs	r0, r2
   298d0:	and	r0, r0, #15
   298d4:	sub	r7, r0, #1
   298d8:	cmp	r7, #7
   298dc:	bhi	29acc <main@@Base+0x13a30>
   298e0:	add	r0, pc, #32
   298e4:	mov	r8, #0
   298e8:	mov	ip, #0
   298ec:	mov	lr, #0
   298f0:	mov	r6, #0
   298f4:	mov	r3, #0
   298f8:	mov	r5, #0
   298fc:	mov	r2, #0
   29900:	mov	r4, #0
   29904:	ldr	pc, [r0, r7, lsl #2]
   29908:	andeq	r9, r2, ip, ror #18
   2990c:	andeq	r9, r2, r4, ror #18
   29910:	andeq	r9, r2, ip, asr r9
   29914:	andeq	r9, r2, r4, asr r9
   29918:	andeq	r9, r2, r8, asr #18
   2991c:	andeq	r9, r2, ip, lsr r9
   29920:	andeq	r9, r2, ip, lsr #18
   29924:	andeq	r9, r2, r8, lsr #18
   29928:	ldrb	ip, [r1, #7]
   2992c:	ldrb	r0, [r1, #6]
   29930:	mov	lr, r8
   29934:	orr	r0, ip, r0, lsl #8
   29938:	mov	r8, r0
   2993c:	ldrb	r0, [r1, #5]
   29940:	mov	r6, lr
   29944:	orr	r8, r8, r0, lsl #16
   29948:	ldrb	r0, [r1, #4]
   2994c:	mov	r3, r6
   29950:	orr	r8, r8, r0, lsl #24
   29954:	ldrb	r0, [r1, #3]
   29958:	orr	r5, r0, r3
   2995c:	ldrb	r0, [r1, #2]
   29960:	orr	r2, r5, r0, lsl #8
   29964:	ldrb	r0, [r1, #1]
   29968:	orr	r4, r2, r0, lsl #16
   2996c:	ldrb	r2, [r1]
   29970:	movw	r0, #25186	; 0x6262
   29974:	movw	r3, #24929	; 0x6161
   29978:	movt	r0, #24418	; 0x5f62
   2997c:	movt	r3, #24929	; 0x6161
   29980:	eor	r0, r8, r0
   29984:	orr	r2, r4, r2, lsl #24
   29988:	eor	r2, r2, r3
   2998c:	orrs	r0, r0, r2
   29990:	bne	29acc <main@@Base+0x13a30>
   29994:	add	r4, r1, #8
   29998:	mov	r0, #8
   2999c:	sub	lr, r9, r4
   299a0:	cmp	lr, #8
   299a4:	movcc	r0, lr
   299a8:	and	r0, r0, #15
   299ac:	sub	r6, r0, #1
   299b0:	cmp	r6, #7
   299b4:	bhi	29b3c <main@@Base+0x13aa0>
   299b8:	str	r4, [sp, #4]
   299bc:	add	r8, pc, #32
   299c0:	mov	r2, #0
   299c4:	mov	ip, #0
   299c8:	mov	sl, #0
   299cc:	mov	r5, #0
   299d0:	mov	r7, #0
   299d4:	mov	r4, #0
   299d8:	mov	r0, #0
   299dc:	mov	r3, #0
   299e0:	ldr	pc, [r8, r6, lsl #2]
   299e4:	andeq	r9, r2, r8, asr #20
   299e8:	andeq	r9, r2, r0, asr #20
   299ec:	andeq	r9, r2, r8, lsr sl
   299f0:	andeq	r9, r2, r0, lsr sl
   299f4:	andeq	r9, r2, r4, lsr #20
   299f8:	andeq	r9, r2, r8, lsl sl
   299fc:	andeq	r9, r2, r8, lsl #20
   29a00:	andeq	r9, r2, r4, lsl #20
   29a04:	ldrb	ip, [r1, #15]
   29a08:	ldrb	r0, [r1, #14]
   29a0c:	mov	sl, r2
   29a10:	orr	r0, ip, r0, lsl #8
   29a14:	mov	r2, r0
   29a18:	ldrb	r0, [r1, #13]
   29a1c:	mov	r5, sl
   29a20:	orr	r2, r2, r0, lsl #16
   29a24:	ldrb	r0, [r1, #12]
   29a28:	mov	r7, r5
   29a2c:	orr	r2, r2, r0, lsl #24
   29a30:	ldrb	r0, [r1, #11]
   29a34:	orr	r4, r0, r7
   29a38:	ldrb	r0, [r1, #10]
   29a3c:	orr	r0, r4, r0, lsl #8
   29a40:	ldrb	r3, [r1, #9]
   29a44:	orr	r3, r0, r3, lsl #16
   29a48:	ldr	r4, [sp, #4]
   29a4c:	movw	r7, #29440	; 0x7300
   29a50:	bic	r0, r2, #255	; 0xff
   29a54:	movt	r7, #25968	; 0x6570
   29a58:	eor	r7, r0, r7
   29a5c:	ldrb	r0, [r4]
   29a60:	orr	r0, r3, r0, lsl #24
   29a64:	movw	r3, #29556	; 0x7374
   29a68:	movt	r3, #25183	; 0x625f
   29a6c:	eor	r0, r0, r3
   29a70:	orrs	r3, r7, r0
   29a74:	bne	29ad4 <main@@Base+0x13a38>
   29a78:	ldr	sl, [sp, #24]
   29a7c:	ldr	r5, [sp, #32]
   29a80:	cmp	lr, #8
   29a84:	blt	29f10 <main@@Base+0x13e74>
   29a88:	ldr	r3, [sp, #28]
   29a8c:	mov	r2, r1
   29a90:	ldrb	r0, [r2, #15]!
   29a94:	ldr	r3, [r3]
   29a98:	cmp	r3, #0
   29a9c:	beq	29b64 <main@@Base+0x13ac8>
   29aa0:	cmp	r0, #33	; 0x21
   29aa4:	bcc	29ab0 <main@@Base+0x13a14>
   29aa8:	cmp	r0, #58	; 0x3a
   29aac:	bne	29f10 <main@@Base+0x13e74>
   29ab0:	ldr	r0, [sp, #28]
   29ab4:	mov	r1, #0
   29ab8:	str	r1, [r0]
   29abc:	sub	r0, r9, r2
   29ac0:	cmp	r0, #2
   29ac4:	bge	29b7c <main@@Base+0x13ae0>
   29ac8:	b	29be0 <main@@Base+0x13b44>
   29acc:	mov	r0, sl
   29ad0:	b	29b44 <main@@Base+0x13aa8>
   29ad4:	movw	r3, #29791	; 0x745f
   29ad8:	ldr	sl, [sp, #24]
   29adc:	movt	r3, #24946	; 0x6172
   29ae0:	eor	r2, r2, r3
   29ae4:	orrs	r0, r2, r0
   29ae8:	bne	29b3c <main@@Base+0x13aa0>
   29aec:	ldr	r5, [sp, #32]
   29af0:	cmp	lr, #9
   29af4:	blt	29f10 <main@@Base+0x13e74>
   29af8:	ldr	r3, [sp, #28]
   29afc:	mov	r2, r1
   29b00:	ldrb	r0, [r2, #16]!
   29b04:	ldr	r3, [r3]
   29b08:	cmp	r3, #0
   29b0c:	beq	29b98 <main@@Base+0x13afc>
   29b10:	cmp	r0, #33	; 0x21
   29b14:	bcc	29b20 <main@@Base+0x13a84>
   29b18:	cmp	r0, #58	; 0x3a
   29b1c:	bne	29f10 <main@@Base+0x13e74>
   29b20:	ldr	r0, [sp, #28]
   29b24:	mov	r1, #0
   29b28:	str	r1, [r0]
   29b2c:	sub	r0, r9, r2
   29b30:	cmp	r0, #2
   29b34:	bge	29bb0 <main@@Base+0x13b14>
   29b38:	b	29c60 <main@@Base+0x13bc4>
   29b3c:	mov	r0, sl
   29b40:	mov	r1, r4
   29b44:	mov	r2, r9
   29b48:	bl	376d0 <flatcc_json_parser_unmatched_symbol@@Base>
   29b4c:	ldr	r5, [sp, #32]
   29b50:	mov	r4, r0
   29b54:	sub	r0, r9, r4
   29b58:	cmp	r0, #2
   29b5c:	bge	29f30 <main@@Base+0x13e94>
   29b60:	b	29f60 <main@@Base+0x13ec4>
   29b64:	cmp	r0, #34	; 0x22
   29b68:	bne	29f10 <main@@Base+0x13e74>
   29b6c:	add	r2, r1, #16
   29b70:	sub	r0, r9, r2
   29b74:	cmp	r0, #2
   29b78:	blt	29be0 <main@@Base+0x13b44>
   29b7c:	ldrb	r0, [r2]
   29b80:	cmp	r0, #32
   29b84:	bls	29bcc <main@@Base+0x13b30>
   29b88:	mov	r7, r2
   29b8c:	cmp	r7, r9
   29b90:	bne	29bfc <main@@Base+0x13b60>
   29b94:	b	29c34 <main@@Base+0x13b98>
   29b98:	cmp	r0, #34	; 0x22
   29b9c:	bne	29f10 <main@@Base+0x13e74>
   29ba0:	add	r2, r1, #17
   29ba4:	sub	r0, r9, r2
   29ba8:	cmp	r0, #2
   29bac:	blt	29c60 <main@@Base+0x13bc4>
   29bb0:	ldrb	r0, [r2]
   29bb4:	cmp	r0, #32
   29bb8:	bls	29c4c <main@@Base+0x13bb0>
   29bbc:	mov	r7, r2
   29bc0:	cmp	r7, r9
   29bc4:	bne	29c7c <main@@Base+0x13be0>
   29bc8:	b	29cc0 <main@@Base+0x13c24>
   29bcc:	bne	29be0 <main@@Base+0x13b44>
   29bd0:	mov	r7, r2
   29bd4:	ldrb	r0, [r7, #1]!
   29bd8:	cmp	r0, #32
   29bdc:	bhi	29bf4 <main@@Base+0x13b58>
   29be0:	mov	r1, r2
   29be4:	mov	r0, sl
   29be8:	mov	r2, r9
   29bec:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   29bf0:	mov	r7, r0
   29bf4:	cmp	r7, r9
   29bf8:	beq	29c34 <main@@Base+0x13b98>
   29bfc:	ldrb	r0, [r7]
   29c00:	cmp	r0, #58	; 0x3a
   29c04:	bne	29c34 <main@@Base+0x13b98>
   29c08:	add	r1, r7, #1
   29c0c:	sub	r0, r9, r1
   29c10:	cmp	r0, #2
   29c14:	blt	29ce8 <main@@Base+0x13c4c>
   29c18:	ldrb	r0, [r1]
   29c1c:	cmp	r0, #32
   29c20:	bls	29cd8 <main@@Base+0x13c3c>
   29c24:	mov	r7, r1
   29c28:	cmp	r4, r7
   29c2c:	bne	29d00 <main@@Base+0x13c64>
   29c30:	b	29f10 <main@@Base+0x13e74>
   29c34:	mov	r0, sl
   29c38:	mov	r1, r7
   29c3c:	mov	r2, r9
   29c40:	mov	r3, #4
   29c44:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   29c48:	b	29cf4 <main@@Base+0x13c58>
   29c4c:	bne	29c60 <main@@Base+0x13bc4>
   29c50:	mov	r7, r2
   29c54:	ldrb	r0, [r7, #1]!
   29c58:	cmp	r0, #32
   29c5c:	bhi	29c74 <main@@Base+0x13bd8>
   29c60:	mov	r1, r2
   29c64:	mov	r0, sl
   29c68:	mov	r2, r9
   29c6c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   29c70:	mov	r7, r0
   29c74:	cmp	r7, r9
   29c78:	beq	29cc0 <main@@Base+0x13c24>
   29c7c:	ldrb	r0, [r7]
   29c80:	cmp	r0, #58	; 0x3a
   29c84:	bne	29cc0 <main@@Base+0x13c24>
   29c88:	add	r1, r7, #1
   29c8c:	sub	r0, r9, r1
   29c90:	cmp	r0, #2
   29c94:	blt	29e84 <main@@Base+0x13de8>
   29c98:	ldrb	r0, [r1]
   29c9c:	cmp	r0, #32
   29ca0:	bls	29e68 <main@@Base+0x13dcc>
   29ca4:	ldr	sl, [sp, #24]
   29ca8:	ldr	r5, [sp, #32]
   29cac:	ldr	r4, [sp, #4]
   29cb0:	mov	r7, r1
   29cb4:	cmp	r4, r7
   29cb8:	bne	29e9c <main@@Base+0x13e00>
   29cbc:	b	29f10 <main@@Base+0x13e74>
   29cc0:	mov	r0, sl
   29cc4:	mov	r1, r7
   29cc8:	mov	r2, r9
   29ccc:	mov	r3, #4
   29cd0:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   29cd4:	b	29e90 <main@@Base+0x13df4>
   29cd8:	bne	29ce8 <main@@Base+0x13c4c>
   29cdc:	ldrb	r0, [r7, #2]!
   29ce0:	cmp	r0, #32
   29ce4:	bhi	29cf8 <main@@Base+0x13c5c>
   29ce8:	mov	r0, sl
   29cec:	mov	r2, r9
   29cf0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   29cf4:	mov	r7, r0
   29cf8:	cmp	r4, r7
   29cfc:	beq	29f10 <main@@Base+0x13e74>
   29d00:	mov	r6, #0
   29d04:	cmp	r7, r9
   29d08:	str	r6, [fp, #-36]	; 0xffffffdc
   29d0c:	str	r6, [fp, #-40]	; 0xffffffd8
   29d10:	str	r6, [sp, #44]	; 0x2c
   29d14:	str	r6, [sp, #40]	; 0x28
   29d18:	str	r6, [fp, #-44]	; 0xffffffd4
   29d1c:	beq	29d78 <main@@Base+0x13cdc>
   29d20:	sub	r0, fp, #40	; 0x28
   29d24:	mov	r1, r7
   29d28:	mov	r2, r9
   29d2c:	sub	r3, fp, #44	; 0x2c
   29d30:	str	r0, [sp]
   29d34:	mov	r0, sl
   29d38:	bl	392f4 <flatcc_json_parser_integer@@Base>
   29d3c:	cmp	r0, r7
   29d40:	beq	29d8c <main@@Base+0x13cf0>
   29d44:	sub	r8, fp, #44	; 0x2c
   29d48:	mov	r4, r0
   29d4c:	ldm	r8, {r0, r6, r8}
   29d50:	cmp	r0, #0
   29d54:	beq	29da4 <main@@Base+0x13d08>
   29d58:	subs	r0, r6, #1
   29d5c:	sbcs	r0, r8, #-2147483648	; 0x80000000
   29d60:	bcc	29dd8 <main@@Base+0x13d3c>
   29d64:	mov	r0, sl
   29d68:	mov	r1, r4
   29d6c:	mov	r2, r9
   29d70:	mov	r3, #8
   29d74:	b	29dbc <main@@Base+0x13d20>
   29d78:	mov	r8, #0
   29d7c:	mov	r4, r9
   29d80:	cmp	r7, r4
   29d84:	bne	29e24 <main@@Base+0x13d88>
   29d88:	b	29df0 <main@@Base+0x13d54>
   29d8c:	mov	r6, #0
   29d90:	mov	r8, #0
   29d94:	mov	r4, r7
   29d98:	cmp	r7, r4
   29d9c:	bne	29e24 <main@@Base+0x13d88>
   29da0:	b	29df0 <main@@Base+0x13d54>
   29da4:	cmn	r8, #1
   29da8:	bgt	29de0 <main@@Base+0x13d44>
   29dac:	mov	r0, sl
   29db0:	mov	r1, r4
   29db4:	mov	r2, r9
   29db8:	mov	r3, #7
   29dbc:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   29dc0:	mov	r4, r0
   29dc4:	mov	r6, #0
   29dc8:	mov	r8, #0
   29dcc:	cmp	r7, r4
   29dd0:	bne	29e24 <main@@Base+0x13d88>
   29dd4:	b	29df0 <main@@Base+0x13d54>
   29dd8:	rsbs	r6, r6, #0
   29ddc:	rsc	r8, r8, #0
   29de0:	str	r6, [sp, #40]	; 0x28
   29de4:	str	r8, [sp, #44]	; 0x2c
   29de8:	cmp	r7, r4
   29dec:	bne	29e24 <main@@Base+0x13d88>
   29df0:	ldr	r3, [sp, #8]
   29df4:	add	r0, sp, #40	; 0x28
   29df8:	mov	r1, r7
   29dfc:	mov	r2, r9
   29e00:	str	r0, [sp]
   29e04:	mov	r0, sl
   29e08:	bl	2636c <main@@Base+0x102d0>
   29e0c:	mov	r4, r0
   29e10:	cmp	r0, r7
   29e14:	cmpne	r4, r9
   29e18:	beq	2ba2c <main@@Base+0x15990>
   29e1c:	ldr	r6, [sp, #40]	; 0x28
   29e20:	ldr	r8, [sp, #44]	; 0x2c
   29e24:	orrs	r0, r6, r8
   29e28:	bne	29e38 <main@@Base+0x13d9c>
   29e2c:	ldrb	r0, [sl, #8]
   29e30:	tst	r0, #2
   29e34:	beq	29f24 <main@@Base+0x13e88>
   29e38:	ldr	r0, [sl]
   29e3c:	mov	r1, #0
   29e40:	mov	r2, #8
   29e44:	mov	r3, #8
   29e48:	bl	33604 <flatcc_builder_table_add@@Base>
   29e4c:	cmp	r0, #0
   29e50:	beq	2ba2c <main@@Base+0x15990>
   29e54:	stm	r0, {r6, r8}
   29e58:	sub	r0, r9, r4
   29e5c:	cmp	r0, #2
   29e60:	bge	29f30 <main@@Base+0x13e94>
   29e64:	b	29f60 <main@@Base+0x13ec4>
   29e68:	ldr	sl, [sp, #24]
   29e6c:	ldr	r5, [sp, #32]
   29e70:	ldr	r4, [sp, #4]
   29e74:	bne	29e84 <main@@Base+0x13de8>
   29e78:	ldrb	r0, [r7, #2]!
   29e7c:	cmp	r0, #32
   29e80:	bhi	29e94 <main@@Base+0x13df8>
   29e84:	mov	r0, sl
   29e88:	mov	r2, r9
   29e8c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   29e90:	mov	r7, r0
   29e94:	cmp	r4, r7
   29e98:	beq	29f10 <main@@Base+0x13e74>
   29e9c:	mov	r6, #0
   29ea0:	cmp	r7, r9
   29ea4:	str	r6, [fp, #-36]	; 0xffffffdc
   29ea8:	str	r6, [fp, #-40]	; 0xffffffd8
   29eac:	str	r6, [fp, #-44]	; 0xffffffd4
   29eb0:	str	r6, [sp, #40]	; 0x28
   29eb4:	beq	2976c <main@@Base+0x136d0>
   29eb8:	sub	r0, fp, #40	; 0x28
   29ebc:	mov	r1, r7
   29ec0:	mov	r2, r9
   29ec4:	add	r3, sp, #40	; 0x28
   29ec8:	str	r0, [sp]
   29ecc:	mov	r0, sl
   29ed0:	bl	392f4 <flatcc_json_parser_integer@@Base>
   29ed4:	cmp	r0, r7
   29ed8:	beq	2977c <main@@Base+0x136e0>
   29edc:	mov	r4, r0
   29ee0:	ldr	r0, [sp, #40]	; 0x28
   29ee4:	cmp	r0, #0
   29ee8:	beq	2978c <main@@Base+0x136f0>
   29eec:	mov	r0, sl
   29ef0:	mov	r1, r4
   29ef4:	mov	r2, r9
   29ef8:	mov	r3, #8
   29efc:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   29f00:	mov	r4, r0
   29f04:	cmp	r7, r4
   29f08:	bne	2981c <main@@Base+0x13780>
   29f0c:	b	297dc <main@@Base+0x13740>
   29f10:	mov	r0, sl
   29f14:	mov	r1, r4
   29f18:	mov	r2, r9
   29f1c:	bl	376d0 <flatcc_json_parser_unmatched_symbol@@Base>
   29f20:	mov	r4, r0
   29f24:	sub	r0, r9, r4
   29f28:	cmp	r0, #2
   29f2c:	blt	29f60 <main@@Base+0x13ec4>
   29f30:	ldrb	r0, [r4]
   29f34:	cmp	r0, #32
   29f38:	bls	29f4c <main@@Base+0x13eb0>
   29f3c:	mov	r2, r4
   29f40:	cmp	r2, r9
   29f44:	bne	29f7c <main@@Base+0x13ee0>
   29f48:	b	29ffc <main@@Base+0x13f60>
   29f4c:	bne	29f60 <main@@Base+0x13ec4>
   29f50:	mov	r2, r4
   29f54:	ldrb	r0, [r2, #1]!
   29f58:	cmp	r0, #32
   29f5c:	bhi	29f74 <main@@Base+0x13ed8>
   29f60:	mov	r0, sl
   29f64:	mov	r1, r4
   29f68:	mov	r2, r9
   29f6c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   29f70:	mov	r2, r0
   29f74:	cmp	r2, r9
   29f78:	beq	29ffc <main@@Base+0x13f60>
   29f7c:	ldrb	r0, [r2]
   29f80:	cmp	r0, #44	; 0x2c
   29f84:	bne	2a014 <main@@Base+0x13f78>
   29f88:	add	r1, r2, #1
   29f8c:	sub	r0, r9, r1
   29f90:	cmp	r0, #2
   29f94:	blt	29fc4 <main@@Base+0x13f28>
   29f98:	ldrb	r0, [r1]
   29f9c:	cmp	r0, #32
   29fa0:	bls	29fb4 <main@@Base+0x13f18>
   29fa4:	mov	r2, r1
   29fa8:	cmp	r2, r9
   29fac:	bne	29fdc <main@@Base+0x13f40>
   29fb0:	b	2a050 <main@@Base+0x13fb4>
   29fb4:	bne	29fc4 <main@@Base+0x13f28>
   29fb8:	ldrb	r0, [r2, #2]!
   29fbc:	cmp	r0, #32
   29fc0:	bhi	29fd4 <main@@Base+0x13f38>
   29fc4:	mov	r0, sl
   29fc8:	mov	r2, r9
   29fcc:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   29fd0:	mov	r2, r0
   29fd4:	cmp	r2, r9
   29fd8:	beq	2a050 <main@@Base+0x13fb4>
   29fdc:	ldrb	r0, [r2]
   29fe0:	cmp	r0, #125	; 0x7d
   29fe4:	bne	29860 <main@@Base+0x137c4>
   29fe8:	add	r1, r2, #1
   29fec:	sub	r0, r9, r1
   29ff0:	cmp	r0, #2
   29ff4:	blt	2a088 <main@@Base+0x13fec>
   29ff8:	b	2a02c <main@@Base+0x13f90>
   29ffc:	mov	r4, r9
   2a000:	ldr	r0, [sp, #20]
   2a004:	ldr	r0, [r0]
   2a008:	cmp	r0, #0
   2a00c:	beq	2a0a8 <main@@Base+0x1400c>
   2a010:	b	2ba30 <main@@Base+0x15994>
   2a014:	cmp	r0, #125	; 0x7d
   2a018:	bne	2a05c <main@@Base+0x13fc0>
   2a01c:	add	r1, r2, #1
   2a020:	sub	r0, r9, r1
   2a024:	cmp	r0, #2
   2a028:	blt	2a088 <main@@Base+0x13fec>
   2a02c:	ldrb	r0, [r1]
   2a030:	cmp	r0, #32
   2a034:	bls	2a074 <main@@Base+0x13fd8>
   2a038:	mov	r4, r1
   2a03c:	ldr	r0, [sp, #20]
   2a040:	ldr	r0, [r0]
   2a044:	cmp	r0, #0
   2a048:	beq	2a0a8 <main@@Base+0x1400c>
   2a04c:	b	2ba30 <main@@Base+0x15994>
   2a050:	mov	r0, sl
   2a054:	mov	r1, r9
   2a058:	b	2a064 <main@@Base+0x13fc8>
   2a05c:	mov	r0, sl
   2a060:	mov	r1, r2
   2a064:	mov	r2, r9
   2a068:	mov	r3, #10
   2a06c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2a070:	b	2a094 <main@@Base+0x13ff8>
   2a074:	bne	2a088 <main@@Base+0x13fec>
   2a078:	ldrb	r0, [r2, #2]!
   2a07c:	cmp	r0, #32
   2a080:	mov	r4, r2
   2a084:	bhi	2a098 <main@@Base+0x13ffc>
   2a088:	mov	r0, sl
   2a08c:	mov	r2, r9
   2a090:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2a094:	mov	r4, r0
   2a098:	ldr	r0, [sp, #20]
   2a09c:	ldr	r0, [r0]
   2a0a0:	cmp	r0, #0
   2a0a4:	bne	2ba30 <main@@Base+0x15994>
   2a0a8:	ldr	r0, [sl]
   2a0ac:	bl	32c44 <flatcc_builder_end_table@@Base>
   2a0b0:	cmp	r0, #0
   2a0b4:	beq	2ba30 <main@@Base+0x15994>
   2a0b8:	mov	r7, r0
   2a0bc:	ldr	r0, [sl]
   2a0c0:	mov	r1, #1
   2a0c4:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   2a0c8:	cmp	r0, #0
   2a0cc:	bne	2a138 <main@@Base+0x1409c>
   2a0d0:	b	2ba48 <main@@Base+0x159ac>
   2a0d4:	ldr	sl, [sp, #24]
   2a0d8:	ldr	r5, [sp, #32]
   2a0dc:	bne	2a0f0 <main@@Base+0x14054>
   2a0e0:	ldrb	r0, [r2, #2]!
   2a0e4:	cmp	r0, #32
   2a0e8:	mov	r4, r2
   2a0ec:	bhi	2a100 <main@@Base+0x14064>
   2a0f0:	mov	r0, sl
   2a0f4:	mov	r2, r9
   2a0f8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2a0fc:	mov	r4, r0
   2a100:	ldr	r0, [sp, #20]
   2a104:	ldr	r0, [r0]
   2a108:	cmp	r0, #0
   2a10c:	bne	2ba30 <main@@Base+0x15994>
   2a110:	ldr	r0, [sl]
   2a114:	bl	32c44 <flatcc_builder_end_table@@Base>
   2a118:	cmp	r0, #0
   2a11c:	beq	2ba30 <main@@Base+0x15994>
   2a120:	mov	r7, r0
   2a124:	ldr	r0, [sl]
   2a128:	mov	r1, #2
   2a12c:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   2a130:	cmp	r0, #0
   2a134:	beq	2ba48 <main@@Base+0x159ac>
   2a138:	str	r7, [r0]
   2a13c:	sub	r0, r9, r4
   2a140:	cmp	r0, #2
   2a144:	bge	289b4 <main@@Base+0x12918>
   2a148:	b	28a24 <main@@Base+0x12988>
   2a14c:	mov	r4, r9
   2a150:	cmp	r8, r4
   2a154:	bne	2a1e4 <main@@Base+0x14148>
   2a158:	b	2a1ac <main@@Base+0x14110>
   2a15c:	mov	r4, r8
   2a160:	cmp	r8, r4
   2a164:	bne	2a1e4 <main@@Base+0x14148>
   2a168:	b	2a1ac <main@@Base+0x14110>
   2a16c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a170:	cmp	r0, #0
   2a174:	beq	2a19c <main@@Base+0x14100>
   2a178:	ldr	r0, [sp, #24]
   2a17c:	mov	r1, r4
   2a180:	mov	r2, r9
   2a184:	mov	r3, #7
   2a188:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2a18c:	mov	r4, r0
   2a190:	cmp	r8, r4
   2a194:	bne	2a1e4 <main@@Base+0x14148>
   2a198:	b	2a1ac <main@@Base+0x14110>
   2a19c:	ldr	r5, [fp, #-40]	; 0xffffffd8
   2a1a0:	str	r5, [fp, #-44]	; 0xffffffd4
   2a1a4:	cmp	r8, r4
   2a1a8:	bne	2a1e4 <main@@Base+0x14148>
   2a1ac:	sub	r0, fp, #44	; 0x2c
   2a1b0:	mov	r1, r8
   2a1b4:	mov	r2, r9
   2a1b8:	str	r0, [sp]
   2a1bc:	movw	r0, #508	; 0x1fc
   2a1c0:	movt	r0, #6
   2a1c4:	add	r3, r0, #60	; 0x3c
   2a1c8:	ldr	r0, [sp, #24]
   2a1cc:	bl	265c4 <main@@Base+0x10528>
   2a1d0:	mov	r4, r0
   2a1d4:	cmp	r0, r8
   2a1d8:	cmpne	r4, r9
   2a1dc:	beq	2ba2c <main@@Base+0x15990>
   2a1e0:	ldr	r5, [fp, #-44]	; 0xffffffd4
   2a1e4:	cmp	r5, #0
   2a1e8:	bne	2a1fc <main@@Base+0x14160>
   2a1ec:	ldr	r0, [sp, #24]
   2a1f0:	ldrb	r0, [r0, #8]
   2a1f4:	tst	r0, #2
   2a1f8:	beq	2a220 <main@@Base+0x14184>
   2a1fc:	ldr	r0, [sp, #24]
   2a200:	mov	r1, #8
   2a204:	mov	r2, #4
   2a208:	mov	r3, #4
   2a20c:	ldr	r0, [r0]
   2a210:	bl	33604 <flatcc_builder_table_add@@Base>
   2a214:	cmp	r0, #0
   2a218:	beq	2ba2c <main@@Base+0x15990>
   2a21c:	str	r5, [r0]
   2a220:	ldr	sl, [sp, #24]
   2a224:	b	2b7a0 <main@@Base+0x15704>
   2a228:	cmp	r2, r9
   2a22c:	mov	sl, r9
   2a230:	beq	2a284 <main@@Base+0x141e8>
   2a234:	ldrb	r0, [r2]
   2a238:	cmp	r0, #46	; 0x2e
   2a23c:	beq	2a258 <main@@Base+0x141bc>
   2a240:	cmp	r0, #34	; 0x22
   2a244:	bne	2a274 <main@@Base+0x141d8>
   2a248:	ldr	r0, [sp, #28]
   2a24c:	mov	r1, #0
   2a250:	add	sl, r2, #1
   2a254:	b	2a280 <main@@Base+0x141e4>
   2a258:	ldr	r0, [sp, #24]
   2a25c:	mov	r1, r2
   2a260:	mov	r2, r9
   2a264:	mov	r3, #5
   2a268:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2a26c:	mov	sl, r0
   2a270:	b	2a284 <main@@Base+0x141e8>
   2a274:	ldr	r0, [sp, #28]
   2a278:	mov	r1, #1
   2a27c:	mov	sl, r2
   2a280:	str	r1, [r0]
   2a284:	sub	r8, r9, sl
   2a288:	mov	r0, #8
   2a28c:	cmp	r8, #8
   2a290:	movcc	r0, r8
   2a294:	and	r0, r0, #15
   2a298:	sub	r3, r0, #1
   2a29c:	cmp	r3, #7
   2a2a0:	bhi	2a978 <main@@Base+0x148dc>
   2a2a4:	add	r5, pc, #32
   2a2a8:	mov	r0, #0
   2a2ac:	mov	ip, #0
   2a2b0:	mov	lr, #0
   2a2b4:	mov	r7, #0
   2a2b8:	mov	r2, #0
   2a2bc:	mov	r6, #0
   2a2c0:	mov	r4, #0
   2a2c4:	mov	r1, #0
   2a2c8:	ldr	pc, [r5, r3, lsl #2]
   2a2cc:	andeq	sl, r2, r0, lsr r3
   2a2d0:	andeq	sl, r2, r8, lsr #6
   2a2d4:	andeq	sl, r2, r0, lsr #6
   2a2d8:	andeq	sl, r2, r8, lsl r3
   2a2dc:	andeq	sl, r2, ip, lsl #6
   2a2e0:	andeq	sl, r2, r0, lsl #6
   2a2e4:	strdeq	sl, [r2], -r0
   2a2e8:	andeq	sl, r2, ip, ror #5
   2a2ec:	ldrb	ip, [sl, #7]
   2a2f0:	ldrb	r1, [sl, #6]
   2a2f4:	mov	lr, r0
   2a2f8:	orr	r1, ip, r1, lsl #8
   2a2fc:	mov	r0, r1
   2a300:	ldrb	r1, [sl, #5]
   2a304:	mov	r7, lr
   2a308:	orr	r0, r0, r1, lsl #16
   2a30c:	ldrb	r1, [sl, #4]
   2a310:	mov	r2, r7
   2a314:	orr	r0, r0, r1, lsl #24
   2a318:	ldrb	r1, [sl, #3]
   2a31c:	orr	r6, r1, r2
   2a320:	ldrb	r1, [sl, #2]
   2a324:	orr	r4, r6, r1, lsl #8
   2a328:	ldrb	r1, [sl, #1]
   2a32c:	orr	r1, r4, r1, lsl #16
   2a330:	ldrb	r2, [sl]
   2a334:	orr	r7, r1, r2, lsl #24
   2a338:	movw	r1, #25442	; 0x6362
   2a33c:	movt	r1, #25443	; 0x6363
   2a340:	cmp	r7, r1
   2a344:	bhi	2a3ec <main@@Base+0x14350>
   2a348:	movw	r1, #13108	; 0x3334
   2a34c:	movt	r1, #12594	; 0x3132
   2a350:	eor	r5, r0, r1
   2a354:	movw	r1, #24929	; 0x6161
   2a358:	movt	r1, #24929	; 0x6161
   2a35c:	eor	r0, r7, r1
   2a360:	orrs	r0, r5, r0
   2a364:	bne	2a460 <main@@Base+0x143c4>
   2a368:	add	r7, sl, #8
   2a36c:	mov	r1, #8
   2a370:	mov	r2, #-268435456	; 0xf0000000
   2a374:	sub	r0, r9, r7
   2a378:	cmp	r0, #8
   2a37c:	movcc	r1, r0
   2a380:	add	r1, r2, r1, lsl #28
   2a384:	asr	r1, r1, #28
   2a388:	cmp	r1, #0
   2a38c:	blt	2b788 <main@@Base+0x156ec>
   2a390:	ldrb	r1, [r7]
   2a394:	cmp	r1, #53	; 0x35
   2a398:	bne	2b788 <main@@Base+0x156ec>
   2a39c:	cmp	r0, #2
   2a3a0:	blt	2b788 <main@@Base+0x156ec>
   2a3a4:	ldr	r2, [sp, #28]
   2a3a8:	mov	r1, sl
   2a3ac:	ldrb	r0, [r1, #9]!
   2a3b0:	ldr	r2, [r2]
   2a3b4:	cmp	r2, #0
   2a3b8:	beq	2a6c4 <main@@Base+0x14628>
   2a3bc:	cmp	r0, #33	; 0x21
   2a3c0:	bcc	2a3cc <main@@Base+0x14330>
   2a3c4:	cmp	r0, #58	; 0x3a
   2a3c8:	bne	2b788 <main@@Base+0x156ec>
   2a3cc:	ldr	r0, [sp, #28]
   2a3d0:	mov	r2, #0
   2a3d4:	str	r2, [r0]
   2a3d8:	ldr	r4, [sp, #24]
   2a3dc:	sub	r0, r9, r1
   2a3e0:	cmp	r0, #2
   2a3e4:	bge	2a6e0 <main@@Base+0x14644>
   2a3e8:	b	2ad40 <main@@Base+0x14ca4>
   2a3ec:	movw	r1, #13108	; 0x3334
   2a3f0:	movt	r1, #12594	; 0x3132
   2a3f4:	eor	r5, r0, r1
   2a3f8:	ldr	r0, [sp, #16]
   2a3fc:	eor	r0, r7, r0
   2a400:	orrs	r0, r5, r0
   2a404:	bne	2a4bc <main@@Base+0x14420>
   2a408:	ldr	r5, [sp, #32]
   2a40c:	cmp	r8, #9
   2a410:	mov	r7, sl
   2a414:	blt	2abbc <main@@Base+0x14b20>
   2a418:	ldr	r2, [sp, #28]
   2a41c:	mov	r1, sl
   2a420:	ldrb	r0, [r1, #8]!
   2a424:	ldr	r2, [r2]
   2a428:	cmp	r2, #0
   2a42c:	beq	2a520 <main@@Base+0x14484>
   2a430:	cmp	r0, #33	; 0x21
   2a434:	bcc	2a444 <main@@Base+0x143a8>
   2a438:	cmp	r0, #58	; 0x3a
   2a43c:	mov	r7, sl
   2a440:	bne	2abbc <main@@Base+0x14b20>
   2a444:	ldr	r0, [sp, #28]
   2a448:	mov	r2, #0
   2a44c:	str	r2, [r0]
   2a450:	sub	r0, r9, r1
   2a454:	cmp	r0, #2
   2a458:	bge	2a53c <main@@Base+0x144a0>
   2a45c:	b	2a5dc <main@@Base+0x14540>
   2a460:	teq	r7, r1
   2a464:	bne	2a760 <main@@Base+0x146c4>
   2a468:	cmp	r8, #5
   2a46c:	mov	r1, sl
   2a470:	blt	2ae4c <main@@Base+0x14db0>
   2a474:	ldr	r1, [sp, #28]
   2a478:	mov	r2, sl
   2a47c:	ldrb	r0, [r2, #4]!
   2a480:	ldr	r1, [r1]
   2a484:	cmp	r1, #0
   2a488:	beq	2a558 <main@@Base+0x144bc>
   2a48c:	cmp	r0, #33	; 0x21
   2a490:	bcc	2a4a0 <main@@Base+0x14404>
   2a494:	cmp	r0, #58	; 0x3a
   2a498:	mov	r1, sl
   2a49c:	bne	2ae4c <main@@Base+0x14db0>
   2a4a0:	ldr	r0, [sp, #28]
   2a4a4:	mov	r1, #0
   2a4a8:	str	r1, [r0]
   2a4ac:	sub	r0, r9, r2
   2a4b0:	cmp	r0, #2
   2a4b4:	bge	2a574 <main@@Base+0x144d8>
   2a4b8:	b	2a710 <main@@Base+0x14674>
   2a4bc:	movw	r0, #25443	; 0x6363
   2a4c0:	movt	r0, #25443	; 0x6363
   2a4c4:	teq	r7, r0
   2a4c8:	bne	2a914 <main@@Base+0x14878>
   2a4cc:	cmp	r8, #5
   2a4d0:	mov	r1, sl
   2a4d4:	blt	2aeb8 <main@@Base+0x14e1c>
   2a4d8:	ldr	r1, [sp, #28]
   2a4dc:	mov	r2, sl
   2a4e0:	ldrb	r0, [r2, #4]!
   2a4e4:	ldr	r1, [r1]
   2a4e8:	cmp	r1, #0
   2a4ec:	beq	2a590 <main@@Base+0x144f4>
   2a4f0:	cmp	r0, #33	; 0x21
   2a4f4:	bcc	2a504 <main@@Base+0x14468>
   2a4f8:	cmp	r0, #58	; 0x3a
   2a4fc:	mov	r1, sl
   2a500:	bne	2aeb8 <main@@Base+0x14e1c>
   2a504:	ldr	r0, [sp, #28]
   2a508:	mov	r1, #0
   2a50c:	str	r1, [r0]
   2a510:	sub	r0, r9, r2
   2a514:	cmp	r0, #2
   2a518:	bge	2a5ac <main@@Base+0x14510>
   2a51c:	b	2a8c4 <main@@Base+0x14828>
   2a520:	cmp	r0, #34	; 0x22
   2a524:	mov	r7, sl
   2a528:	bne	2abbc <main@@Base+0x14b20>
   2a52c:	add	r1, sl, #9
   2a530:	sub	r0, r9, r1
   2a534:	cmp	r0, #2
   2a538:	blt	2a5dc <main@@Base+0x14540>
   2a53c:	ldrb	r0, [r1]
   2a540:	cmp	r0, #32
   2a544:	bls	2a5c8 <main@@Base+0x1452c>
   2a548:	mov	r7, r1
   2a54c:	cmp	r7, r9
   2a550:	bne	2a5f4 <main@@Base+0x14558>
   2a554:	b	2a6ac <main@@Base+0x14610>
   2a558:	cmp	r0, #34	; 0x22
   2a55c:	mov	r1, sl
   2a560:	bne	2ae4c <main@@Base+0x14db0>
   2a564:	add	r2, sl, #5
   2a568:	sub	r0, r9, r2
   2a56c:	cmp	r0, #2
   2a570:	blt	2a710 <main@@Base+0x14674>
   2a574:	ldrb	r0, [r2]
   2a578:	cmp	r0, #32
   2a57c:	bls	2a6fc <main@@Base+0x14660>
   2a580:	mov	r1, r2
   2a584:	cmp	r1, r9
   2a588:	bne	2a72c <main@@Base+0x14690>
   2a58c:	b	2a82c <main@@Base+0x14790>
   2a590:	cmp	r0, #34	; 0x22
   2a594:	mov	r1, sl
   2a598:	bne	2aeb8 <main@@Base+0x14e1c>
   2a59c:	add	r2, sl, #5
   2a5a0:	sub	r0, r9, r2
   2a5a4:	cmp	r0, #2
   2a5a8:	blt	2a8c4 <main@@Base+0x14828>
   2a5ac:	ldrb	r0, [r2]
   2a5b0:	cmp	r0, #32
   2a5b4:	bls	2a8b0 <main@@Base+0x14814>
   2a5b8:	mov	r1, r2
   2a5bc:	cmp	r1, r9
   2a5c0:	bne	2a8e0 <main@@Base+0x14844>
   2a5c4:	b	2a988 <main@@Base+0x148ec>
   2a5c8:	bne	2a5dc <main@@Base+0x14540>
   2a5cc:	mov	r7, r1
   2a5d0:	ldrb	r0, [r7, #1]!
   2a5d4:	cmp	r0, #32
   2a5d8:	bhi	2a5ec <main@@Base+0x14550>
   2a5dc:	ldr	r0, [sp, #24]
   2a5e0:	mov	r2, r9
   2a5e4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2a5e8:	mov	r7, r0
   2a5ec:	cmp	r7, r9
   2a5f0:	beq	2a6ac <main@@Base+0x14610>
   2a5f4:	ldrb	r0, [r7]
   2a5f8:	cmp	r0, #58	; 0x3a
   2a5fc:	bne	2a6ac <main@@Base+0x14610>
   2a600:	add	r1, r7, #1
   2a604:	sub	r0, r9, r1
   2a608:	cmp	r0, #2
   2a60c:	blt	2abac <main@@Base+0x14b10>
   2a610:	ldrb	r0, [r1]
   2a614:	cmp	r0, #32
   2a618:	bls	2ab9c <main@@Base+0x14b00>
   2a61c:	mov	r7, r1
   2a620:	cmp	sl, r7
   2a624:	bne	2abc4 <main@@Base+0x14b28>
   2a628:	add	r7, sl, #8
   2a62c:	mov	r1, #8
   2a630:	mov	r2, #-268435456	; 0xf0000000
   2a634:	sub	r0, r9, r7
   2a638:	cmp	r0, #8
   2a63c:	movcc	r1, r0
   2a640:	add	r1, r2, r1, lsl #28
   2a644:	asr	r1, r1, #28
   2a648:	cmp	r1, #0
   2a64c:	blt	2ab74 <main@@Base+0x14ad8>
   2a650:	ldrb	r1, [r7]
   2a654:	cmp	r1, #53	; 0x35
   2a658:	bne	2ab74 <main@@Base+0x14ad8>
   2a65c:	cmp	r0, #2
   2a660:	blt	2b788 <main@@Base+0x156ec>
   2a664:	ldr	r2, [sp, #28]
   2a668:	mov	r1, sl
   2a66c:	ldrb	r0, [r1, #9]!
   2a670:	ldr	r2, [r2]
   2a674:	cmp	r2, #0
   2a678:	beq	2a9d4 <main@@Base+0x14938>
   2a67c:	cmp	r0, #33	; 0x21
   2a680:	bcc	2a68c <main@@Base+0x145f0>
   2a684:	cmp	r0, #58	; 0x3a
   2a688:	bne	2b788 <main@@Base+0x156ec>
   2a68c:	ldr	r0, [sp, #28]
   2a690:	mov	r2, #0
   2a694:	str	r2, [r0]
   2a698:	ldr	r4, [sp, #24]
   2a69c:	sub	r0, r9, r1
   2a6a0:	cmp	r0, #2
   2a6a4:	bge	2a9f0 <main@@Base+0x14954>
   2a6a8:	b	2af4c <main@@Base+0x14eb0>
   2a6ac:	ldr	r0, [sp, #24]
   2a6b0:	mov	r1, r7
   2a6b4:	mov	r2, r9
   2a6b8:	mov	r3, #4
   2a6bc:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2a6c0:	b	2abb8 <main@@Base+0x14b1c>
   2a6c4:	cmp	r0, #34	; 0x22
   2a6c8:	bne	2b788 <main@@Base+0x156ec>
   2a6cc:	add	r1, sl, #10
   2a6d0:	ldr	r4, [sp, #24]
   2a6d4:	sub	r0, r9, r1
   2a6d8:	cmp	r0, #2
   2a6dc:	blt	2ad40 <main@@Base+0x14ca4>
   2a6e0:	ldrb	r0, [r1]
   2a6e4:	cmp	r0, #32
   2a6e8:	bls	2ad2c <main@@Base+0x14c90>
   2a6ec:	mov	r8, r1
   2a6f0:	cmp	r8, r9
   2a6f4:	bne	2ad58 <main@@Base+0x14cbc>
   2a6f8:	b	2ad90 <main@@Base+0x14cf4>
   2a6fc:	bne	2a710 <main@@Base+0x14674>
   2a700:	mov	r1, r2
   2a704:	ldrb	r0, [r1, #1]!
   2a708:	cmp	r0, #32
   2a70c:	bhi	2a724 <main@@Base+0x14688>
   2a710:	ldr	r0, [sp, #24]
   2a714:	mov	r1, r2
   2a718:	mov	r2, r9
   2a71c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2a720:	mov	r1, r0
   2a724:	cmp	r1, r9
   2a728:	beq	2a82c <main@@Base+0x14790>
   2a72c:	ldrb	r0, [r1]
   2a730:	cmp	r0, #58	; 0x3a
   2a734:	bne	2a82c <main@@Base+0x14790>
   2a738:	add	r2, r1, #1
   2a73c:	sub	r0, r9, r2
   2a740:	cmp	r0, #2
   2a744:	blt	2ae38 <main@@Base+0x14d9c>
   2a748:	ldrb	r0, [r2]
   2a74c:	cmp	r0, #32
   2a750:	bls	2ae28 <main@@Base+0x14d8c>
   2a754:	mov	r1, r2
   2a758:	cmp	sl, r1
   2a75c:	bne	2ae54 <main@@Base+0x14db8>
   2a760:	movw	r1, #25186	; 0x6262
   2a764:	movt	r1, #25186	; 0x6262
   2a768:	eor	r0, r7, r1
   2a76c:	orrs	r0, r5, r0
   2a770:	bne	2a7cc <main@@Base+0x14730>
   2a774:	ldr	r5, [sp, #32]
   2a778:	cmp	r8, #9
   2a77c:	mov	r7, sl
   2a780:	blt	2afd8 <main@@Base+0x14f3c>
   2a784:	ldr	r2, [sp, #28]
   2a788:	mov	r1, sl
   2a78c:	ldrb	r0, [r1, #8]!
   2a790:	ldr	r2, [r2]
   2a794:	cmp	r2, #0
   2a798:	beq	2a840 <main@@Base+0x147a4>
   2a79c:	cmp	r0, #33	; 0x21
   2a7a0:	bcc	2a7b0 <main@@Base+0x14714>
   2a7a4:	cmp	r0, #58	; 0x3a
   2a7a8:	mov	r7, sl
   2a7ac:	bne	2afd8 <main@@Base+0x14f3c>
   2a7b0:	ldr	r0, [sp, #28]
   2a7b4:	mov	r2, #0
   2a7b8:	str	r2, [r0]
   2a7bc:	sub	r0, r9, r1
   2a7c0:	cmp	r0, #2
   2a7c4:	bge	2a85c <main@@Base+0x147c0>
   2a7c8:	b	2aa24 <main@@Base+0x14988>
   2a7cc:	teq	r7, r1
   2a7d0:	bne	2a978 <main@@Base+0x148dc>
   2a7d4:	ldr	r5, [sp, #32]
   2a7d8:	cmp	r8, #5
   2a7dc:	mov	r1, sl
   2a7e0:	blt	2b47c <main@@Base+0x153e0>
   2a7e4:	ldr	r1, [sp, #28]
   2a7e8:	mov	r2, sl
   2a7ec:	ldrb	r0, [r2, #4]!
   2a7f0:	ldr	r1, [r1]
   2a7f4:	cmp	r1, #0
   2a7f8:	beq	2a878 <main@@Base+0x147dc>
   2a7fc:	cmp	r0, #33	; 0x21
   2a800:	bcc	2a810 <main@@Base+0x14774>
   2a804:	cmp	r0, #58	; 0x3a
   2a808:	mov	r1, sl
   2a80c:	bne	2b47c <main@@Base+0x153e0>
   2a810:	ldr	r0, [sp, #28]
   2a814:	mov	r1, #0
   2a818:	str	r1, [r0]
   2a81c:	sub	r0, r9, r2
   2a820:	cmp	r0, #2
   2a824:	bge	2a894 <main@@Base+0x147f8>
   2a828:	b	2adbc <main@@Base+0x14d20>
   2a82c:	ldr	r0, [sp, #24]
   2a830:	mov	r2, r9
   2a834:	mov	r3, #4
   2a838:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2a83c:	b	2ae48 <main@@Base+0x14dac>
   2a840:	cmp	r0, #34	; 0x22
   2a844:	mov	r7, sl
   2a848:	bne	2afd8 <main@@Base+0x14f3c>
   2a84c:	add	r1, sl, #9
   2a850:	sub	r0, r9, r1
   2a854:	cmp	r0, #2
   2a858:	blt	2aa24 <main@@Base+0x14988>
   2a85c:	ldrb	r0, [r1]
   2a860:	cmp	r0, #32
   2a864:	bls	2aa10 <main@@Base+0x14974>
   2a868:	mov	r7, r1
   2a86c:	cmp	r7, r9
   2a870:	bne	2aa3c <main@@Base+0x149a0>
   2a874:	b	2aa78 <main@@Base+0x149dc>
   2a878:	cmp	r0, #34	; 0x22
   2a87c:	mov	r1, sl
   2a880:	bne	2b47c <main@@Base+0x153e0>
   2a884:	add	r2, sl, #5
   2a888:	sub	r0, r9, r2
   2a88c:	cmp	r0, #2
   2a890:	blt	2adbc <main@@Base+0x14d20>
   2a894:	ldrb	r0, [r2]
   2a898:	cmp	r0, #32
   2a89c:	bls	2ada8 <main@@Base+0x14d0c>
   2a8a0:	mov	r1, r2
   2a8a4:	cmp	r1, r9
   2a8a8:	bne	2add8 <main@@Base+0x14d3c>
   2a8ac:	b	2ae14 <main@@Base+0x14d78>
   2a8b0:	bne	2a8c4 <main@@Base+0x14828>
   2a8b4:	mov	r1, r2
   2a8b8:	ldrb	r0, [r1, #1]!
   2a8bc:	cmp	r0, #32
   2a8c0:	bhi	2a8d8 <main@@Base+0x1483c>
   2a8c4:	ldr	r0, [sp, #24]
   2a8c8:	mov	r1, r2
   2a8cc:	mov	r2, r9
   2a8d0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2a8d4:	mov	r1, r0
   2a8d8:	cmp	r1, r9
   2a8dc:	beq	2a988 <main@@Base+0x148ec>
   2a8e0:	ldrb	r0, [r1]
   2a8e4:	cmp	r0, #58	; 0x3a
   2a8e8:	bne	2a988 <main@@Base+0x148ec>
   2a8ec:	add	r2, r1, #1
   2a8f0:	sub	r0, r9, r2
   2a8f4:	cmp	r0, #2
   2a8f8:	blt	2aea4 <main@@Base+0x14e08>
   2a8fc:	ldrb	r0, [r2]
   2a900:	cmp	r0, #32
   2a904:	bls	2ae94 <main@@Base+0x14df8>
   2a908:	mov	r1, r2
   2a90c:	cmp	sl, r1
   2a910:	bne	2aec0 <main@@Base+0x14e24>
   2a914:	ldr	r0, [sp, #12]
   2a918:	eor	r0, r7, r0
   2a91c:	orrs	r0, r5, r0
   2a920:	bne	2a978 <main@@Base+0x148dc>
   2a924:	cmp	r8, #9
   2a928:	mov	r7, sl
   2a92c:	blt	2b154 <main@@Base+0x150b8>
   2a930:	ldr	r2, [sp, #28]
   2a934:	mov	r1, sl
   2a938:	ldrb	r0, [r1, #8]!
   2a93c:	ldr	r2, [r2]
   2a940:	cmp	r2, #0
   2a944:	beq	2a99c <main@@Base+0x14900>
   2a948:	cmp	r0, #33	; 0x21
   2a94c:	bcc	2a95c <main@@Base+0x148c0>
   2a950:	cmp	r0, #58	; 0x3a
   2a954:	mov	r7, sl
   2a958:	bne	2b154 <main@@Base+0x150b8>
   2a95c:	ldr	r0, [sp, #28]
   2a960:	mov	r2, #0
   2a964:	str	r2, [r0]
   2a968:	sub	r0, r9, r1
   2a96c:	cmp	r0, #2
   2a970:	bge	2a9b8 <main@@Base+0x1491c>
   2a974:	b	2aaa4 <main@@Base+0x14a08>
   2a978:	ldr	r0, [sp, #24]
   2a97c:	mov	r1, sl
   2a980:	mov	sl, r0
   2a984:	b	2b794 <main@@Base+0x156f8>
   2a988:	ldr	r0, [sp, #24]
   2a98c:	mov	r2, r9
   2a990:	mov	r3, #4
   2a994:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2a998:	b	2aeb4 <main@@Base+0x14e18>
   2a99c:	cmp	r0, #34	; 0x22
   2a9a0:	mov	r7, sl
   2a9a4:	bne	2b154 <main@@Base+0x150b8>
   2a9a8:	add	r1, sl, #9
   2a9ac:	sub	r0, r9, r1
   2a9b0:	cmp	r0, #2
   2a9b4:	blt	2aaa4 <main@@Base+0x14a08>
   2a9b8:	ldrb	r0, [r1]
   2a9bc:	cmp	r0, #32
   2a9c0:	bls	2aa90 <main@@Base+0x149f4>
   2a9c4:	mov	r7, r1
   2a9c8:	cmp	r7, r9
   2a9cc:	bne	2aabc <main@@Base+0x14a20>
   2a9d0:	b	2ab84 <main@@Base+0x14ae8>
   2a9d4:	cmp	r0, #34	; 0x22
   2a9d8:	bne	2b788 <main@@Base+0x156ec>
   2a9dc:	add	r1, sl, #10
   2a9e0:	ldr	r4, [sp, #24]
   2a9e4:	sub	r0, r9, r1
   2a9e8:	cmp	r0, #2
   2a9ec:	blt	2af4c <main@@Base+0x14eb0>
   2a9f0:	ldrb	r0, [r1]
   2a9f4:	cmp	r0, #32
   2a9f8:	bls	2af34 <main@@Base+0x14e98>
   2a9fc:	ldr	r4, [sp, #24]
   2aa00:	mov	r8, r1
   2aa04:	cmp	r8, r9
   2aa08:	bne	2af64 <main@@Base+0x14ec8>
   2aa0c:	b	2af9c <main@@Base+0x14f00>
   2aa10:	bne	2aa24 <main@@Base+0x14988>
   2aa14:	mov	r7, r1
   2aa18:	ldrb	r0, [r7, #1]!
   2aa1c:	cmp	r0, #32
   2aa20:	bhi	2aa34 <main@@Base+0x14998>
   2aa24:	ldr	r0, [sp, #24]
   2aa28:	mov	r2, r9
   2aa2c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2aa30:	mov	r7, r0
   2aa34:	cmp	r7, r9
   2aa38:	beq	2aa78 <main@@Base+0x149dc>
   2aa3c:	ldrb	r0, [r7]
   2aa40:	cmp	r0, #58	; 0x3a
   2aa44:	bne	2aa78 <main@@Base+0x149dc>
   2aa48:	add	r1, r7, #1
   2aa4c:	sub	r0, r9, r1
   2aa50:	cmp	r0, #2
   2aa54:	blt	2afc8 <main@@Base+0x14f2c>
   2aa58:	ldrb	r0, [r1]
   2aa5c:	cmp	r0, #32
   2aa60:	bls	2afb4 <main@@Base+0x14f18>
   2aa64:	ldr	r5, [sp, #32]
   2aa68:	mov	r7, r1
   2aa6c:	cmp	sl, r7
   2aa70:	bne	2afe0 <main@@Base+0x14f44>
   2aa74:	b	2b4d4 <main@@Base+0x15438>
   2aa78:	ldr	r0, [sp, #24]
   2aa7c:	mov	r1, r7
   2aa80:	mov	r2, r9
   2aa84:	mov	r3, #4
   2aa88:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2aa8c:	b	2afd4 <main@@Base+0x14f38>
   2aa90:	bne	2aaa4 <main@@Base+0x14a08>
   2aa94:	mov	r7, r1
   2aa98:	ldrb	r0, [r7, #1]!
   2aa9c:	cmp	r0, #32
   2aaa0:	bhi	2aab4 <main@@Base+0x14a18>
   2aaa4:	ldr	r0, [sp, #24]
   2aaa8:	mov	r2, r9
   2aaac:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2aab0:	mov	r7, r0
   2aab4:	cmp	r7, r9
   2aab8:	beq	2ab84 <main@@Base+0x14ae8>
   2aabc:	ldrb	r0, [r7]
   2aac0:	cmp	r0, #58	; 0x3a
   2aac4:	bne	2ab84 <main@@Base+0x14ae8>
   2aac8:	add	r1, r7, #1
   2aacc:	sub	r0, r9, r1
   2aad0:	cmp	r0, #2
   2aad4:	blt	2b144 <main@@Base+0x150a8>
   2aad8:	ldrb	r0, [r1]
   2aadc:	cmp	r0, #32
   2aae0:	bls	2b134 <main@@Base+0x15098>
   2aae4:	mov	r7, r1
   2aae8:	cmp	sl, r7
   2aaec:	bne	2b15c <main@@Base+0x150c0>
   2aaf0:	add	r7, sl, #8
   2aaf4:	mov	r1, #8
   2aaf8:	mov	r2, #-268435456	; 0xf0000000
   2aafc:	ldr	r5, [sp, #32]
   2ab00:	sub	r0, r9, r7
   2ab04:	cmp	r0, #8
   2ab08:	movcc	r1, r0
   2ab0c:	add	r1, r2, r1, lsl #28
   2ab10:	asr	r1, r1, #28
   2ab14:	cmp	r1, #0
   2ab18:	blt	2ab74 <main@@Base+0x14ad8>
   2ab1c:	ldrb	r1, [r7]
   2ab20:	cmp	r1, #53	; 0x35
   2ab24:	bne	2ab74 <main@@Base+0x14ad8>
   2ab28:	cmp	r0, #2
   2ab2c:	blt	2b788 <main@@Base+0x156ec>
   2ab30:	ldr	r2, [sp, #28]
   2ab34:	mov	r1, sl
   2ab38:	ldrb	r0, [r1, #9]!
   2ab3c:	ldr	r2, [r2]
   2ab40:	cmp	r2, #0
   2ab44:	beq	2af00 <main@@Base+0x14e64>
   2ab48:	cmp	r0, #33	; 0x21
   2ab4c:	bcc	2ab58 <main@@Base+0x14abc>
   2ab50:	cmp	r0, #58	; 0x3a
   2ab54:	bne	2b788 <main@@Base+0x156ec>
   2ab58:	ldr	r0, [sp, #28]
   2ab5c:	mov	r2, #0
   2ab60:	str	r2, [r0]
   2ab64:	sub	r0, r9, r1
   2ab68:	cmp	r0, #2
   2ab6c:	bge	2af18 <main@@Base+0x14e7c>
   2ab70:	b	2b510 <main@@Base+0x15474>
   2ab74:	ldr	sl, [sp, #24]
   2ab78:	mov	r1, r7
   2ab7c:	mov	r0, sl
   2ab80:	b	2b4e0 <main@@Base+0x15444>
   2ab84:	ldr	r0, [sp, #24]
   2ab88:	mov	r1, r7
   2ab8c:	mov	r2, r9
   2ab90:	mov	r3, #4
   2ab94:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2ab98:	b	2b150 <main@@Base+0x150b4>
   2ab9c:	bne	2abac <main@@Base+0x14b10>
   2aba0:	ldrb	r0, [r7, #2]!
   2aba4:	cmp	r0, #32
   2aba8:	bhi	2abbc <main@@Base+0x14b20>
   2abac:	ldr	r0, [sp, #24]
   2abb0:	mov	r2, r9
   2abb4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2abb8:	mov	r7, r0
   2abbc:	cmp	sl, r7
   2abc0:	beq	2a628 <main@@Base+0x1458c>
   2abc4:	mov	r6, #0
   2abc8:	cmp	r7, r9
   2abcc:	str	r6, [fp, #-36]	; 0xffffffdc
   2abd0:	str	r6, [fp, #-40]	; 0xffffffd8
   2abd4:	str	r6, [sp, #44]	; 0x2c
   2abd8:	str	r6, [sp, #40]	; 0x28
   2abdc:	str	r6, [fp, #-44]	; 0xffffffd4
   2abe0:	beq	2ac40 <main@@Base+0x14ba4>
   2abe4:	ldr	sl, [sp, #24]
   2abe8:	sub	r0, fp, #40	; 0x28
   2abec:	mov	r1, r7
   2abf0:	mov	r2, r9
   2abf4:	sub	r3, fp, #44	; 0x2c
   2abf8:	str	r0, [sp]
   2abfc:	mov	r0, sl
   2ac00:	bl	392f4 <flatcc_json_parser_integer@@Base>
   2ac04:	cmp	r0, r7
   2ac08:	beq	2ac58 <main@@Base+0x14bbc>
   2ac0c:	sub	r8, fp, #44	; 0x2c
   2ac10:	mov	r4, r0
   2ac14:	ldm	r8, {r0, r6, r8}
   2ac18:	cmp	r0, #0
   2ac1c:	beq	2ac70 <main@@Base+0x14bd4>
   2ac20:	subs	r0, r6, #1
   2ac24:	sbcs	r0, r8, #-2147483648	; 0x80000000
   2ac28:	bcc	2aca4 <main@@Base+0x14c08>
   2ac2c:	mov	r0, sl
   2ac30:	mov	r1, r4
   2ac34:	mov	r2, r9
   2ac38:	mov	r3, #8
   2ac3c:	b	2ac88 <main@@Base+0x14bec>
   2ac40:	ldr	sl, [sp, #24]
   2ac44:	mov	r8, #0
   2ac48:	mov	r4, r9
   2ac4c:	cmp	r7, r4
   2ac50:	bne	2acf8 <main@@Base+0x14c5c>
   2ac54:	b	2acbc <main@@Base+0x14c20>
   2ac58:	mov	r6, #0
   2ac5c:	mov	r8, #0
   2ac60:	mov	r4, r7
   2ac64:	cmp	r7, r4
   2ac68:	bne	2acf8 <main@@Base+0x14c5c>
   2ac6c:	b	2acbc <main@@Base+0x14c20>
   2ac70:	cmn	r8, #1
   2ac74:	bgt	2acac <main@@Base+0x14c10>
   2ac78:	mov	r0, sl
   2ac7c:	mov	r1, r4
   2ac80:	mov	r2, r9
   2ac84:	mov	r3, #7
   2ac88:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2ac8c:	mov	r4, r0
   2ac90:	mov	r6, #0
   2ac94:	mov	r8, #0
   2ac98:	cmp	r7, r4
   2ac9c:	bne	2acf8 <main@@Base+0x14c5c>
   2aca0:	b	2acbc <main@@Base+0x14c20>
   2aca4:	rsbs	r6, r6, #0
   2aca8:	rsc	r8, r8, #0
   2acac:	str	r6, [sp, #40]	; 0x28
   2acb0:	str	r8, [sp, #44]	; 0x2c
   2acb4:	cmp	r7, r4
   2acb8:	bne	2acf8 <main@@Base+0x14c5c>
   2acbc:	add	r0, sp, #40	; 0x28
   2acc0:	mov	r1, r7
   2acc4:	mov	r2, r9
   2acc8:	str	r0, [sp]
   2accc:	movw	r0, #508	; 0x1fc
   2acd0:	movt	r0, #6
   2acd4:	add	r3, r0, #24
   2acd8:	mov	r0, sl
   2acdc:	bl	2636c <main@@Base+0x102d0>
   2ace0:	mov	r4, r0
   2ace4:	cmp	r0, r7
   2ace8:	cmpne	r4, r9
   2acec:	beq	2ba30 <main@@Base+0x15994>
   2acf0:	ldr	r6, [sp, #40]	; 0x28
   2acf4:	ldr	r8, [sp, #44]	; 0x2c
   2acf8:	orrs	r0, r6, r8
   2acfc:	bne	2ad0c <main@@Base+0x14c70>
   2ad00:	ldrb	r0, [sl, #8]
   2ad04:	tst	r0, #2
   2ad08:	beq	2b7a4 <main@@Base+0x15708>
   2ad0c:	ldr	r0, [sl]
   2ad10:	mov	r1, #5
   2ad14:	mov	r2, #8
   2ad18:	mov	r3, #8
   2ad1c:	bl	33604 <flatcc_builder_table_add@@Base>
   2ad20:	cmp	r0, #0
   2ad24:	bne	2b2c4 <main@@Base+0x15228>
   2ad28:	b	2ba30 <main@@Base+0x15994>
   2ad2c:	bne	2ad40 <main@@Base+0x14ca4>
   2ad30:	mov	r8, r1
   2ad34:	ldrb	r0, [r8, #1]!
   2ad38:	cmp	r0, #32
   2ad3c:	bhi	2ad50 <main@@Base+0x14cb4>
   2ad40:	mov	r0, r4
   2ad44:	mov	r2, r9
   2ad48:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2ad4c:	mov	r8, r0
   2ad50:	cmp	r8, r9
   2ad54:	beq	2ad90 <main@@Base+0x14cf4>
   2ad58:	ldrb	r0, [r8]
   2ad5c:	cmp	r0, #58	; 0x3a
   2ad60:	bne	2ad90 <main@@Base+0x14cf4>
   2ad64:	add	r1, r8, #1
   2ad68:	sub	r0, r9, r1
   2ad6c:	cmp	r0, #2
   2ad70:	blt	2b2e8 <main@@Base+0x1524c>
   2ad74:	ldrb	r0, [r1]
   2ad78:	cmp	r0, #32
   2ad7c:	bls	2b2d8 <main@@Base+0x1523c>
   2ad80:	mov	r8, r1
   2ad84:	cmp	r7, r8
   2ad88:	bne	2b300 <main@@Base+0x15264>
   2ad8c:	b	2b788 <main@@Base+0x156ec>
   2ad90:	mov	r0, r4
   2ad94:	mov	r1, r8
   2ad98:	mov	r2, r9
   2ad9c:	mov	r3, #4
   2ada0:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2ada4:	b	2b2f4 <main@@Base+0x15258>
   2ada8:	bne	2adbc <main@@Base+0x14d20>
   2adac:	mov	r1, r2
   2adb0:	ldrb	r0, [r1, #1]!
   2adb4:	cmp	r0, #32
   2adb8:	bhi	2add0 <main@@Base+0x14d34>
   2adbc:	ldr	r0, [sp, #24]
   2adc0:	mov	r1, r2
   2adc4:	mov	r2, r9
   2adc8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2adcc:	mov	r1, r0
   2add0:	cmp	r1, r9
   2add4:	beq	2ae14 <main@@Base+0x14d78>
   2add8:	ldrb	r0, [r1]
   2addc:	cmp	r0, #58	; 0x3a
   2ade0:	bne	2ae14 <main@@Base+0x14d78>
   2ade4:	add	r2, r1, #1
   2ade8:	sub	r0, r9, r2
   2adec:	cmp	r0, #2
   2adf0:	blt	2b468 <main@@Base+0x153cc>
   2adf4:	ldrb	r0, [r2]
   2adf8:	cmp	r0, #32
   2adfc:	bls	2b454 <main@@Base+0x153b8>
   2ae00:	ldr	r5, [sp, #32]
   2ae04:	mov	r1, r2
   2ae08:	cmp	sl, r1
   2ae0c:	bne	2b484 <main@@Base+0x153e8>
   2ae10:	b	2b4d4 <main@@Base+0x15438>
   2ae14:	ldr	r0, [sp, #24]
   2ae18:	mov	r2, r9
   2ae1c:	mov	r3, #4
   2ae20:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2ae24:	b	2b478 <main@@Base+0x153dc>
   2ae28:	bne	2ae38 <main@@Base+0x14d9c>
   2ae2c:	ldrb	r0, [r1, #2]!
   2ae30:	cmp	r0, #32
   2ae34:	bhi	2ae4c <main@@Base+0x14db0>
   2ae38:	ldr	r0, [sp, #24]
   2ae3c:	mov	r1, r2
   2ae40:	mov	r2, r9
   2ae44:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2ae48:	mov	r1, r0
   2ae4c:	cmp	sl, r1
   2ae50:	beq	2a760 <main@@Base+0x146c4>
   2ae54:	ldr	sl, [sp, #24]
   2ae58:	mov	r2, r9
   2ae5c:	add	r3, sp, #36	; 0x24
   2ae60:	mov	r0, sl
   2ae64:	bl	398b4 <flatcc_json_parser_build_string@@Base>
   2ae68:	mov	r4, r0
   2ae6c:	ldr	r0, [sp, #36]	; 0x24
   2ae70:	ldr	r5, [sp, #32]
   2ae74:	cmp	r0, #0
   2ae78:	beq	2ba30 <main@@Base+0x15994>
   2ae7c:	ldr	r0, [sl]
   2ae80:	mov	r1, #0
   2ae84:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   2ae88:	cmp	r0, #0
   2ae8c:	bne	2b4bc <main@@Base+0x15420>
   2ae90:	b	2ba30 <main@@Base+0x15994>
   2ae94:	bne	2aea4 <main@@Base+0x14e08>
   2ae98:	ldrb	r0, [r1, #2]!
   2ae9c:	cmp	r0, #32
   2aea0:	bhi	2aeb8 <main@@Base+0x14e1c>
   2aea4:	ldr	r0, [sp, #24]
   2aea8:	mov	r1, r2
   2aeac:	mov	r2, r9
   2aeb0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2aeb4:	mov	r1, r0
   2aeb8:	cmp	sl, r1
   2aebc:	beq	2a914 <main@@Base+0x14878>
   2aec0:	ldr	sl, [sp, #24]
   2aec4:	mov	r2, r9
   2aec8:	add	r3, sp, #36	; 0x24
   2aecc:	mov	r0, sl
   2aed0:	bl	398b4 <flatcc_json_parser_build_string@@Base>
   2aed4:	mov	r4, r0
   2aed8:	ldr	r0, [sp, #36]	; 0x24
   2aedc:	cmp	r0, #0
   2aee0:	beq	2ba30 <main@@Base+0x15994>
   2aee4:	ldr	r0, [sl]
   2aee8:	mov	r1, #4
   2aeec:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   2aef0:	ldr	r5, [sp, #32]
   2aef4:	cmp	r0, #0
   2aef8:	bne	2b4bc <main@@Base+0x15420>
   2aefc:	b	2ba30 <main@@Base+0x15994>
   2af00:	cmp	r0, #34	; 0x22
   2af04:	bne	2b788 <main@@Base+0x156ec>
   2af08:	add	r1, sl, #10
   2af0c:	sub	r0, r9, r1
   2af10:	cmp	r0, #2
   2af14:	blt	2b510 <main@@Base+0x15474>
   2af18:	ldrb	r0, [r1]
   2af1c:	cmp	r0, #32
   2af20:	bls	2b4fc <main@@Base+0x15460>
   2af24:	mov	r8, r1
   2af28:	cmp	r8, r9
   2af2c:	bne	2b528 <main@@Base+0x1548c>
   2af30:	b	2b560 <main@@Base+0x154c4>
   2af34:	ldr	r4, [sp, #24]
   2af38:	bne	2af4c <main@@Base+0x14eb0>
   2af3c:	mov	r8, r1
   2af40:	ldrb	r0, [r8, #1]!
   2af44:	cmp	r0, #32
   2af48:	bhi	2af5c <main@@Base+0x14ec0>
   2af4c:	mov	r0, r4
   2af50:	mov	r2, r9
   2af54:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2af58:	mov	r8, r0
   2af5c:	cmp	r8, r9
   2af60:	beq	2af9c <main@@Base+0x14f00>
   2af64:	ldrb	r0, [r8]
   2af68:	cmp	r0, #58	; 0x3a
   2af6c:	bne	2af9c <main@@Base+0x14f00>
   2af70:	add	r1, r8, #1
   2af74:	sub	r0, r9, r1
   2af78:	cmp	r0, #2
   2af7c:	blt	2b588 <main@@Base+0x154ec>
   2af80:	ldrb	r0, [r1]
   2af84:	cmp	r0, #32
   2af88:	bls	2b578 <main@@Base+0x154dc>
   2af8c:	mov	r8, r1
   2af90:	cmp	r7, r8
   2af94:	bne	2b5a0 <main@@Base+0x15504>
   2af98:	b	2b788 <main@@Base+0x156ec>
   2af9c:	mov	r0, r4
   2afa0:	mov	r1, r8
   2afa4:	mov	r2, r9
   2afa8:	mov	r3, #4
   2afac:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2afb0:	b	2b594 <main@@Base+0x154f8>
   2afb4:	ldr	r5, [sp, #32]
   2afb8:	bne	2afc8 <main@@Base+0x14f2c>
   2afbc:	ldrb	r0, [r7, #2]!
   2afc0:	cmp	r0, #32
   2afc4:	bhi	2afd8 <main@@Base+0x14f3c>
   2afc8:	ldr	r0, [sp, #24]
   2afcc:	mov	r2, r9
   2afd0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2afd4:	mov	r7, r0
   2afd8:	cmp	sl, r7
   2afdc:	beq	2b4d4 <main@@Base+0x15438>
   2afe0:	mov	r6, #0
   2afe4:	cmp	r7, r9
   2afe8:	str	r6, [fp, #-36]	; 0xffffffdc
   2afec:	str	r6, [fp, #-40]	; 0xffffffd8
   2aff0:	str	r6, [sp, #44]	; 0x2c
   2aff4:	str	r6, [sp, #40]	; 0x28
   2aff8:	str	r6, [fp, #-44]	; 0xffffffd4
   2affc:	beq	2b05c <main@@Base+0x14fc0>
   2b000:	ldr	sl, [sp, #24]
   2b004:	sub	r0, fp, #40	; 0x28
   2b008:	mov	r1, r7
   2b00c:	mov	r2, r9
   2b010:	sub	r3, fp, #44	; 0x2c
   2b014:	str	r0, [sp]
   2b018:	mov	r0, sl
   2b01c:	bl	392f4 <flatcc_json_parser_integer@@Base>
   2b020:	cmp	r0, r7
   2b024:	beq	2b074 <main@@Base+0x14fd8>
   2b028:	sub	r8, fp, #44	; 0x2c
   2b02c:	mov	r4, r0
   2b030:	ldm	r8, {r0, r6, r8}
   2b034:	cmp	r0, #0
   2b038:	beq	2b08c <main@@Base+0x14ff0>
   2b03c:	subs	r0, r6, #1
   2b040:	sbcs	r0, r8, #-2147483648	; 0x80000000
   2b044:	bcc	2b0c0 <main@@Base+0x15024>
   2b048:	mov	r0, sl
   2b04c:	mov	r1, r4
   2b050:	mov	r2, r9
   2b054:	mov	r3, #8
   2b058:	b	2b0a4 <main@@Base+0x15008>
   2b05c:	ldr	sl, [sp, #24]
   2b060:	mov	r8, #0
   2b064:	mov	r4, r9
   2b068:	cmp	r7, r4
   2b06c:	bne	2b114 <main@@Base+0x15078>
   2b070:	b	2b0d8 <main@@Base+0x1503c>
   2b074:	mov	r6, #0
   2b078:	mov	r8, #0
   2b07c:	mov	r4, r7
   2b080:	cmp	r7, r4
   2b084:	bne	2b114 <main@@Base+0x15078>
   2b088:	b	2b0d8 <main@@Base+0x1503c>
   2b08c:	cmn	r8, #1
   2b090:	bgt	2b0c8 <main@@Base+0x1502c>
   2b094:	mov	r0, sl
   2b098:	mov	r1, r4
   2b09c:	mov	r2, r9
   2b0a0:	mov	r3, #7
   2b0a4:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2b0a8:	mov	r4, r0
   2b0ac:	mov	r6, #0
   2b0b0:	mov	r8, #0
   2b0b4:	cmp	r7, r4
   2b0b8:	bne	2b114 <main@@Base+0x15078>
   2b0bc:	b	2b0d8 <main@@Base+0x1503c>
   2b0c0:	rsbs	r6, r6, #0
   2b0c4:	rsc	r8, r8, #0
   2b0c8:	str	r6, [sp, #40]	; 0x28
   2b0cc:	str	r8, [sp, #44]	; 0x2c
   2b0d0:	cmp	r7, r4
   2b0d4:	bne	2b114 <main@@Base+0x15078>
   2b0d8:	add	r0, sp, #40	; 0x28
   2b0dc:	mov	r1, r7
   2b0e0:	mov	r2, r9
   2b0e4:	str	r0, [sp]
   2b0e8:	movw	r0, #508	; 0x1fc
   2b0ec:	movt	r0, #6
   2b0f0:	add	r3, r0, #12
   2b0f4:	mov	r0, sl
   2b0f8:	bl	2636c <main@@Base+0x102d0>
   2b0fc:	mov	r4, r0
   2b100:	cmp	r0, r7
   2b104:	cmpne	r4, r9
   2b108:	beq	2ba2c <main@@Base+0x15990>
   2b10c:	ldr	r6, [sp, #40]	; 0x28
   2b110:	ldr	r8, [sp, #44]	; 0x2c
   2b114:	orrs	r0, r6, r8
   2b118:	bne	2b128 <main@@Base+0x1508c>
   2b11c:	ldrb	r0, [sl, #8]
   2b120:	tst	r0, #2
   2b124:	beq	2b7a4 <main@@Base+0x15708>
   2b128:	ldr	r0, [sl]
   2b12c:	mov	r1, #3
   2b130:	b	2b2b0 <main@@Base+0x15214>
   2b134:	bne	2b144 <main@@Base+0x150a8>
   2b138:	ldrb	r0, [r7, #2]!
   2b13c:	cmp	r0, #32
   2b140:	bhi	2b154 <main@@Base+0x150b8>
   2b144:	ldr	r0, [sp, #24]
   2b148:	mov	r2, r9
   2b14c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2b150:	mov	r7, r0
   2b154:	cmp	sl, r7
   2b158:	beq	2aaf0 <main@@Base+0x14a54>
   2b15c:	ldr	r5, [sp, #32]
   2b160:	mov	r6, #0
   2b164:	cmp	r7, r9
   2b168:	str	r6, [fp, #-36]	; 0xffffffdc
   2b16c:	str	r6, [fp, #-40]	; 0xffffffd8
   2b170:	str	r6, [sp, #44]	; 0x2c
   2b174:	str	r6, [sp, #40]	; 0x28
   2b178:	str	r6, [fp, #-44]	; 0xffffffd4
   2b17c:	beq	2b1dc <main@@Base+0x15140>
   2b180:	ldr	sl, [sp, #24]
   2b184:	sub	r0, fp, #40	; 0x28
   2b188:	mov	r1, r7
   2b18c:	mov	r2, r9
   2b190:	sub	r3, fp, #44	; 0x2c
   2b194:	str	r0, [sp]
   2b198:	mov	r0, sl
   2b19c:	bl	392f4 <flatcc_json_parser_integer@@Base>
   2b1a0:	cmp	r0, r7
   2b1a4:	beq	2b1f4 <main@@Base+0x15158>
   2b1a8:	sub	r8, fp, #44	; 0x2c
   2b1ac:	mov	r4, r0
   2b1b0:	ldm	r8, {r0, r6, r8}
   2b1b4:	cmp	r0, #0
   2b1b8:	beq	2b20c <main@@Base+0x15170>
   2b1bc:	subs	r0, r6, #1
   2b1c0:	sbcs	r0, r8, #-2147483648	; 0x80000000
   2b1c4:	bcc	2b240 <main@@Base+0x151a4>
   2b1c8:	mov	r0, sl
   2b1cc:	mov	r1, r4
   2b1d0:	mov	r2, r9
   2b1d4:	mov	r3, #8
   2b1d8:	b	2b224 <main@@Base+0x15188>
   2b1dc:	ldr	sl, [sp, #24]
   2b1e0:	mov	r8, #0
   2b1e4:	mov	r4, r9
   2b1e8:	cmp	r7, r4
   2b1ec:	bne	2b294 <main@@Base+0x151f8>
   2b1f0:	b	2b258 <main@@Base+0x151bc>
   2b1f4:	mov	r6, #0
   2b1f8:	mov	r8, #0
   2b1fc:	mov	r4, r7
   2b200:	cmp	r7, r4
   2b204:	bne	2b294 <main@@Base+0x151f8>
   2b208:	b	2b258 <main@@Base+0x151bc>
   2b20c:	cmn	r8, #1
   2b210:	bgt	2b248 <main@@Base+0x151ac>
   2b214:	mov	r0, sl
   2b218:	mov	r1, r4
   2b21c:	mov	r2, r9
   2b220:	mov	r3, #7
   2b224:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2b228:	mov	r4, r0
   2b22c:	mov	r6, #0
   2b230:	mov	r8, #0
   2b234:	cmp	r7, r4
   2b238:	bne	2b294 <main@@Base+0x151f8>
   2b23c:	b	2b258 <main@@Base+0x151bc>
   2b240:	rsbs	r6, r6, #0
   2b244:	rsc	r8, r8, #0
   2b248:	str	r6, [sp, #40]	; 0x28
   2b24c:	str	r8, [sp, #44]	; 0x2c
   2b250:	cmp	r7, r4
   2b254:	bne	2b294 <main@@Base+0x151f8>
   2b258:	add	r0, sp, #40	; 0x28
   2b25c:	mov	r1, r7
   2b260:	mov	r2, r9
   2b264:	str	r0, [sp]
   2b268:	movw	r0, #508	; 0x1fc
   2b26c:	movt	r0, #6
   2b270:	add	r3, r0, #48	; 0x30
   2b274:	mov	r0, sl
   2b278:	bl	2636c <main@@Base+0x102d0>
   2b27c:	mov	r4, r0
   2b280:	cmp	r0, r7
   2b284:	cmpne	r4, r9
   2b288:	beq	2ba2c <main@@Base+0x15990>
   2b28c:	ldr	r6, [sp, #40]	; 0x28
   2b290:	ldr	r8, [sp, #44]	; 0x2c
   2b294:	orrs	r0, r6, r8
   2b298:	bne	2b2a8 <main@@Base+0x1520c>
   2b29c:	ldrb	r0, [sl, #8]
   2b2a0:	tst	r0, #2
   2b2a4:	beq	2b7a4 <main@@Base+0x15708>
   2b2a8:	ldr	r0, [sl]
   2b2ac:	mov	r1, #7
   2b2b0:	mov	r2, #8
   2b2b4:	mov	r3, #8
   2b2b8:	bl	33604 <flatcc_builder_table_add@@Base>
   2b2bc:	cmp	r0, #0
   2b2c0:	beq	2ba2c <main@@Base+0x15990>
   2b2c4:	stm	r0, {r6, r8}
   2b2c8:	sub	r0, r9, r4
   2b2cc:	cmp	r0, #2
   2b2d0:	bge	2b7b0 <main@@Base+0x15714>
   2b2d4:	b	2b7e0 <main@@Base+0x15744>
   2b2d8:	bne	2b2e8 <main@@Base+0x1524c>
   2b2dc:	ldrb	r0, [r8, #2]!
   2b2e0:	cmp	r0, #32
   2b2e4:	bhi	2b2f8 <main@@Base+0x1525c>
   2b2e8:	ldr	r0, [sp, #24]
   2b2ec:	mov	r2, r9
   2b2f0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2b2f4:	mov	r8, r0
   2b2f8:	cmp	r7, r8
   2b2fc:	beq	2b788 <main@@Base+0x156ec>
   2b300:	mov	r6, #0
   2b304:	cmp	r8, r9
   2b308:	str	r6, [fp, #-36]	; 0xffffffdc
   2b30c:	str	r6, [fp, #-40]	; 0xffffffd8
   2b310:	str	r6, [fp, #-44]	; 0xffffffd4
   2b314:	str	r6, [sp, #40]	; 0x28
   2b318:	beq	2b368 <main@@Base+0x152cc>
   2b31c:	ldr	sl, [sp, #24]
   2b320:	sub	r0, fp, #40	; 0x28
   2b324:	mov	r1, r8
   2b328:	mov	r2, r9
   2b32c:	add	r3, sp, #40	; 0x28
   2b330:	str	r0, [sp]
   2b334:	mov	r0, sl
   2b338:	bl	392f4 <flatcc_json_parser_integer@@Base>
   2b33c:	cmp	r0, r8
   2b340:	beq	2b37c <main@@Base+0x152e0>
   2b344:	mov	r4, r0
   2b348:	ldr	r0, [sp, #40]	; 0x28
   2b34c:	cmp	r0, #0
   2b350:	beq	2b38c <main@@Base+0x152f0>
   2b354:	ldr	sl, [sp, #24]
   2b358:	mov	r1, r4
   2b35c:	mov	r2, r9
   2b360:	mov	r3, #8
   2b364:	b	2b3a8 <main@@Base+0x1530c>
   2b368:	mov	r4, r9
   2b36c:	ldr	sl, [sp, #24]
   2b370:	cmp	r8, r4
   2b374:	bne	2b3f4 <main@@Base+0x15358>
   2b378:	b	2b3bc <main@@Base+0x15320>
   2b37c:	mov	r4, r8
   2b380:	cmp	r8, r4
   2b384:	bne	2b3f4 <main@@Base+0x15358>
   2b388:	b	2b3bc <main@@Base+0x15320>
   2b38c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2b390:	cmp	r0, #0
   2b394:	beq	2b43c <main@@Base+0x153a0>
   2b398:	ldr	sl, [sp, #24]
   2b39c:	mov	r1, r4
   2b3a0:	mov	r2, r9
   2b3a4:	mov	r3, #7
   2b3a8:	mov	r0, sl
   2b3ac:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2b3b0:	mov	r4, r0
   2b3b4:	cmp	r8, r4
   2b3b8:	bne	2b3f4 <main@@Base+0x15358>
   2b3bc:	movw	r3, #508	; 0x1fc
   2b3c0:	sub	r0, fp, #44	; 0x2c
   2b3c4:	mov	r1, r8
   2b3c8:	mov	r2, r9
   2b3cc:	str	r0, [sp]
   2b3d0:	mov	r0, sl
   2b3d4:	movt	r3, #6
   2b3d8:	bl	265c4 <main@@Base+0x10528>
   2b3dc:	mov	r4, r0
   2b3e0:	cmp	r0, r8
   2b3e4:	cmpne	r4, r9
   2b3e8:	beq	2ba2c <main@@Base+0x15990>
   2b3ec:	ldr	r6, [fp, #-44]	; 0xffffffd4
   2b3f0:	ldr	sl, [sp, #24]
   2b3f4:	ldr	r5, [sp, #32]
   2b3f8:	cmp	r6, #0
   2b3fc:	bne	2b40c <main@@Base+0x15370>
   2b400:	ldrb	r0, [sl, #8]
   2b404:	tst	r0, #2
   2b408:	beq	2b7a4 <main@@Base+0x15708>
   2b40c:	ldr	r0, [sl]
   2b410:	mov	r1, #1
   2b414:	mov	r2, #4
   2b418:	mov	r3, #4
   2b41c:	bl	33604 <flatcc_builder_table_add@@Base>
   2b420:	cmp	r0, #0
   2b424:	beq	2ba2c <main@@Base+0x15990>
   2b428:	str	r6, [r0]
   2b42c:	sub	r0, r9, r4
   2b430:	cmp	r0, #2
   2b434:	bge	2b7b0 <main@@Base+0x15714>
   2b438:	b	2b7e0 <main@@Base+0x15744>
   2b43c:	ldr	r6, [fp, #-40]	; 0xffffffd8
   2b440:	str	r6, [fp, #-44]	; 0xffffffd4
   2b444:	ldr	sl, [sp, #24]
   2b448:	cmp	r8, r4
   2b44c:	bne	2b3f4 <main@@Base+0x15358>
   2b450:	b	2b3bc <main@@Base+0x15320>
   2b454:	ldr	r5, [sp, #32]
   2b458:	bne	2b468 <main@@Base+0x153cc>
   2b45c:	ldrb	r0, [r1, #2]!
   2b460:	cmp	r0, #32
   2b464:	bhi	2b47c <main@@Base+0x153e0>
   2b468:	ldr	r0, [sp, #24]
   2b46c:	mov	r1, r2
   2b470:	mov	r2, r9
   2b474:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2b478:	mov	r1, r0
   2b47c:	cmp	sl, r1
   2b480:	beq	2b4d4 <main@@Base+0x15438>
   2b484:	ldr	sl, [sp, #24]
   2b488:	mov	r2, r9
   2b48c:	add	r3, sp, #36	; 0x24
   2b490:	mov	r0, sl
   2b494:	bl	398b4 <flatcc_json_parser_build_string@@Base>
   2b498:	mov	r4, r0
   2b49c:	ldr	r0, [sp, #36]	; 0x24
   2b4a0:	cmp	r0, #0
   2b4a4:	beq	2ba30 <main@@Base+0x15994>
   2b4a8:	ldr	r0, [sl]
   2b4ac:	mov	r1, #2
   2b4b0:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   2b4b4:	cmp	r0, #0
   2b4b8:	beq	2ba30 <main@@Base+0x15994>
   2b4bc:	ldr	r1, [sp, #36]	; 0x24
   2b4c0:	str	r1, [r0]
   2b4c4:	sub	r0, r9, r4
   2b4c8:	cmp	r0, #2
   2b4cc:	bge	2b7b0 <main@@Base+0x15714>
   2b4d0:	b	2b7e0 <main@@Base+0x15744>
   2b4d4:	ldr	r0, [sp, #24]
   2b4d8:	mov	r1, sl
   2b4dc:	mov	sl, r0
   2b4e0:	mov	r2, r9
   2b4e4:	bl	376d0 <flatcc_json_parser_unmatched_symbol@@Base>
   2b4e8:	mov	r4, r0
   2b4ec:	sub	r0, r9, r4
   2b4f0:	cmp	r0, #2
   2b4f4:	bge	2b7b0 <main@@Base+0x15714>
   2b4f8:	b	2b7e0 <main@@Base+0x15744>
   2b4fc:	bne	2b510 <main@@Base+0x15474>
   2b500:	mov	r8, r1
   2b504:	ldrb	r0, [r8, #1]!
   2b508:	cmp	r0, #32
   2b50c:	bhi	2b520 <main@@Base+0x15484>
   2b510:	ldr	r0, [sp, #24]
   2b514:	mov	r2, r9
   2b518:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2b51c:	mov	r8, r0
   2b520:	cmp	r8, r9
   2b524:	beq	2b560 <main@@Base+0x154c4>
   2b528:	ldrb	r0, [r8]
   2b52c:	cmp	r0, #58	; 0x3a
   2b530:	bne	2b560 <main@@Base+0x154c4>
   2b534:	add	r1, r8, #1
   2b538:	sub	r0, r9, r1
   2b53c:	cmp	r0, #2
   2b540:	blt	2b6fc <main@@Base+0x15660>
   2b544:	ldrb	r0, [r1]
   2b548:	cmp	r0, #32
   2b54c:	bls	2b6ec <main@@Base+0x15650>
   2b550:	mov	r8, r1
   2b554:	cmp	r7, r8
   2b558:	bne	2b714 <main@@Base+0x15678>
   2b55c:	b	2b788 <main@@Base+0x156ec>
   2b560:	ldr	r0, [sp, #24]
   2b564:	mov	r1, r8
   2b568:	mov	r2, r9
   2b56c:	mov	r3, #4
   2b570:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2b574:	b	2b708 <main@@Base+0x1566c>
   2b578:	bne	2b588 <main@@Base+0x154ec>
   2b57c:	ldrb	r0, [r8, #2]!
   2b580:	cmp	r0, #32
   2b584:	bhi	2b598 <main@@Base+0x154fc>
   2b588:	ldr	r0, [sp, #24]
   2b58c:	mov	r2, r9
   2b590:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2b594:	mov	r8, r0
   2b598:	cmp	r7, r8
   2b59c:	beq	2b788 <main@@Base+0x156ec>
   2b5a0:	mov	r5, #0
   2b5a4:	cmp	r8, r9
   2b5a8:	str	r5, [fp, #-36]	; 0xffffffdc
   2b5ac:	str	r5, [fp, #-40]	; 0xffffffd8
   2b5b0:	str	r5, [fp, #-44]	; 0xffffffd4
   2b5b4:	str	r5, [sp, #40]	; 0x28
   2b5b8:	beq	2b614 <main@@Base+0x15578>
   2b5bc:	sub	r0, fp, #40	; 0x28
   2b5c0:	mov	r1, r8
   2b5c4:	mov	r2, r9
   2b5c8:	add	r3, sp, #40	; 0x28
   2b5cc:	str	r0, [sp]
   2b5d0:	ldr	r0, [sp, #24]
   2b5d4:	bl	392f4 <flatcc_json_parser_integer@@Base>
   2b5d8:	cmp	r0, r8
   2b5dc:	beq	2b624 <main@@Base+0x15588>
   2b5e0:	mov	r4, r0
   2b5e4:	ldr	r0, [sp, #40]	; 0x28
   2b5e8:	cmp	r0, #0
   2b5ec:	beq	2b634 <main@@Base+0x15598>
   2b5f0:	ldr	r0, [sp, #24]
   2b5f4:	mov	r1, r4
   2b5f8:	mov	r2, r9
   2b5fc:	mov	r3, #8
   2b600:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2b604:	mov	r4, r0
   2b608:	cmp	r8, r4
   2b60c:	bne	2b6ac <main@@Base+0x15610>
   2b610:	b	2b674 <main@@Base+0x155d8>
   2b614:	mov	r4, r9
   2b618:	cmp	r8, r4
   2b61c:	bne	2b6ac <main@@Base+0x15610>
   2b620:	b	2b674 <main@@Base+0x155d8>
   2b624:	mov	r4, r8
   2b628:	cmp	r8, r4
   2b62c:	bne	2b6ac <main@@Base+0x15610>
   2b630:	b	2b674 <main@@Base+0x155d8>
   2b634:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2b638:	cmp	r0, #0
   2b63c:	beq	2b664 <main@@Base+0x155c8>
   2b640:	ldr	r0, [sp, #24]
   2b644:	mov	r1, r4
   2b648:	mov	r2, r9
   2b64c:	mov	r3, #7
   2b650:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2b654:	mov	r4, r0
   2b658:	cmp	r8, r4
   2b65c:	bne	2b6ac <main@@Base+0x15610>
   2b660:	b	2b674 <main@@Base+0x155d8>
   2b664:	ldr	r5, [fp, #-40]	; 0xffffffd8
   2b668:	str	r5, [fp, #-44]	; 0xffffffd4
   2b66c:	cmp	r8, r4
   2b670:	bne	2b6ac <main@@Base+0x15610>
   2b674:	sub	r0, fp, #44	; 0x2c
   2b678:	mov	r1, r8
   2b67c:	mov	r2, r9
   2b680:	str	r0, [sp]
   2b684:	movw	r0, #508	; 0x1fc
   2b688:	movt	r0, #6
   2b68c:	add	r3, r0, #36	; 0x24
   2b690:	ldr	r0, [sp, #24]
   2b694:	bl	265c4 <main@@Base+0x10528>
   2b698:	mov	r4, r0
   2b69c:	cmp	r0, r8
   2b6a0:	cmpne	r4, r9
   2b6a4:	beq	2ba2c <main@@Base+0x15990>
   2b6a8:	ldr	r5, [fp, #-44]	; 0xffffffd4
   2b6ac:	ldr	sl, [sp, #24]
   2b6b0:	cmp	r5, #0
   2b6b4:	bne	2b6c4 <main@@Base+0x15628>
   2b6b8:	ldrb	r0, [sl, #8]
   2b6bc:	tst	r0, #2
   2b6c0:	beq	2b7a0 <main@@Base+0x15704>
   2b6c4:	ldr	r0, [sl]
   2b6c8:	mov	r1, #6
   2b6cc:	mov	r2, #4
   2b6d0:	mov	r3, #4
   2b6d4:	bl	33604 <flatcc_builder_table_add@@Base>
   2b6d8:	cmp	r0, #0
   2b6dc:	beq	2ba2c <main@@Base+0x15990>
   2b6e0:	ldr	sl, [sp, #24]
   2b6e4:	str	r5, [r0]
   2b6e8:	b	2b7a0 <main@@Base+0x15704>
   2b6ec:	bne	2b6fc <main@@Base+0x15660>
   2b6f0:	ldrb	r0, [r8, #2]!
   2b6f4:	cmp	r0, #32
   2b6f8:	bhi	2b70c <main@@Base+0x15670>
   2b6fc:	ldr	r0, [sp, #24]
   2b700:	mov	r2, r9
   2b704:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2b708:	mov	r8, r0
   2b70c:	cmp	r7, r8
   2b710:	beq	2b788 <main@@Base+0x156ec>
   2b714:	mov	r5, #0
   2b718:	cmp	r8, r9
   2b71c:	str	r5, [fp, #-36]	; 0xffffffdc
   2b720:	str	r5, [fp, #-40]	; 0xffffffd8
   2b724:	str	r5, [fp, #-44]	; 0xffffffd4
   2b728:	str	r5, [sp, #40]	; 0x28
   2b72c:	beq	2a14c <main@@Base+0x140b0>
   2b730:	sub	r0, fp, #40	; 0x28
   2b734:	mov	r1, r8
   2b738:	mov	r2, r9
   2b73c:	add	r3, sp, #40	; 0x28
   2b740:	str	r0, [sp]
   2b744:	ldr	r0, [sp, #24]
   2b748:	bl	392f4 <flatcc_json_parser_integer@@Base>
   2b74c:	cmp	r0, r8
   2b750:	beq	2a15c <main@@Base+0x140c0>
   2b754:	mov	r4, r0
   2b758:	ldr	r0, [sp, #40]	; 0x28
   2b75c:	cmp	r0, #0
   2b760:	beq	2a16c <main@@Base+0x140d0>
   2b764:	ldr	r0, [sp, #24]
   2b768:	mov	r1, r4
   2b76c:	mov	r2, r9
   2b770:	mov	r3, #8
   2b774:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2b778:	mov	r4, r0
   2b77c:	cmp	r8, r4
   2b780:	bne	2a1e4 <main@@Base+0x14148>
   2b784:	b	2a1ac <main@@Base+0x14110>
   2b788:	ldr	sl, [sp, #24]
   2b78c:	mov	r1, r7
   2b790:	mov	r0, sl
   2b794:	mov	r2, r9
   2b798:	bl	376d0 <flatcc_json_parser_unmatched_symbol@@Base>
   2b79c:	mov	r4, r0
   2b7a0:	ldr	r5, [sp, #32]
   2b7a4:	sub	r0, r9, r4
   2b7a8:	cmp	r0, #2
   2b7ac:	blt	2b7e0 <main@@Base+0x15744>
   2b7b0:	ldrb	r0, [r4]
   2b7b4:	cmp	r0, #32
   2b7b8:	bls	2b7cc <main@@Base+0x15730>
   2b7bc:	mov	r2, r4
   2b7c0:	cmp	r2, r9
   2b7c4:	bne	2b7fc <main@@Base+0x15760>
   2b7c8:	b	2b87c <main@@Base+0x157e0>
   2b7cc:	bne	2b7e0 <main@@Base+0x15744>
   2b7d0:	mov	r2, r4
   2b7d4:	ldrb	r0, [r2, #1]!
   2b7d8:	cmp	r0, #32
   2b7dc:	bhi	2b7f4 <main@@Base+0x15758>
   2b7e0:	mov	r0, sl
   2b7e4:	mov	r1, r4
   2b7e8:	mov	r2, r9
   2b7ec:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2b7f0:	mov	r2, r0
   2b7f4:	cmp	r2, r9
   2b7f8:	beq	2b87c <main@@Base+0x157e0>
   2b7fc:	ldrb	r0, [r2]
   2b800:	cmp	r0, #44	; 0x2c
   2b804:	bne	2b894 <main@@Base+0x157f8>
   2b808:	add	r1, r2, #1
   2b80c:	sub	r0, r9, r1
   2b810:	cmp	r0, #2
   2b814:	blt	2b844 <main@@Base+0x157a8>
   2b818:	ldrb	r0, [r1]
   2b81c:	cmp	r0, #32
   2b820:	bls	2b834 <main@@Base+0x15798>
   2b824:	mov	r2, r1
   2b828:	cmp	r2, r9
   2b82c:	bne	2b85c <main@@Base+0x157c0>
   2b830:	b	2b8d0 <main@@Base+0x15834>
   2b834:	bne	2b844 <main@@Base+0x157a8>
   2b838:	ldrb	r0, [r2, #2]!
   2b83c:	cmp	r0, #32
   2b840:	bhi	2b854 <main@@Base+0x157b8>
   2b844:	mov	r0, sl
   2b848:	mov	r2, r9
   2b84c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2b850:	mov	r2, r0
   2b854:	cmp	r2, r9
   2b858:	beq	2b8d0 <main@@Base+0x15834>
   2b85c:	ldrb	r0, [r2]
   2b860:	cmp	r0, #125	; 0x7d
   2b864:	bne	2a228 <main@@Base+0x1418c>
   2b868:	add	r1, r2, #1
   2b86c:	sub	r0, r9, r1
   2b870:	cmp	r0, #2
   2b874:	blt	2b908 <main@@Base+0x1586c>
   2b878:	b	2b8ac <main@@Base+0x15810>
   2b87c:	mov	r4, r9
   2b880:	ldr	r0, [sp, #20]
   2b884:	ldr	r0, [r0]
   2b888:	cmp	r0, #0
   2b88c:	beq	28b58 <main@@Base+0x12abc>
   2b890:	b	2ba30 <main@@Base+0x15994>
   2b894:	cmp	r0, #125	; 0x7d
   2b898:	bne	2b8dc <main@@Base+0x15840>
   2b89c:	add	r1, r2, #1
   2b8a0:	sub	r0, r9, r1
   2b8a4:	cmp	r0, #2
   2b8a8:	blt	2b908 <main@@Base+0x1586c>
   2b8ac:	ldrb	r0, [r1]
   2b8b0:	cmp	r0, #32
   2b8b4:	bls	2b8f4 <main@@Base+0x15858>
   2b8b8:	mov	r4, r1
   2b8bc:	ldr	r0, [sp, #20]
   2b8c0:	ldr	r0, [r0]
   2b8c4:	cmp	r0, #0
   2b8c8:	beq	28b58 <main@@Base+0x12abc>
   2b8cc:	b	2ba30 <main@@Base+0x15994>
   2b8d0:	mov	r0, sl
   2b8d4:	mov	r1, r9
   2b8d8:	b	2b8e4 <main@@Base+0x15848>
   2b8dc:	mov	r0, sl
   2b8e0:	mov	r1, r2
   2b8e4:	mov	r2, r9
   2b8e8:	mov	r3, #10
   2b8ec:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2b8f0:	b	2b914 <main@@Base+0x15878>
   2b8f4:	bne	2b908 <main@@Base+0x1586c>
   2b8f8:	ldrb	r0, [r2, #2]!
   2b8fc:	cmp	r0, #32
   2b900:	mov	r4, r2
   2b904:	bhi	28b48 <main@@Base+0x12aac>
   2b908:	mov	r0, sl
   2b90c:	mov	r2, r9
   2b910:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2b914:	mov	r4, r0
   2b918:	ldr	r0, [sp, #20]
   2b91c:	ldr	r0, [r0]
   2b920:	cmp	r0, #0
   2b924:	beq	28b58 <main@@Base+0x12abc>
   2b928:	b	2ba30 <main@@Base+0x15994>
   2b92c:	mov	r4, r9
   2b930:	ldr	r0, [sp, #20]
   2b934:	ldr	r0, [r0]
   2b938:	cmp	r0, #0
   2b93c:	bne	2ba48 <main@@Base+0x159ac>
   2b940:	b	2b9ec <main@@Base+0x15950>
   2b944:	cmp	r0, #125	; 0x7d
   2b948:	bne	2b9c4 <main@@Base+0x15928>
   2b94c:	add	r4, r2, #1
   2b950:	sub	r0, r9, r4
   2b954:	cmp	r0, #2
   2b958:	blt	2b9b0 <main@@Base+0x15914>
   2b95c:	b	2b97c <main@@Base+0x158e0>
   2b960:	mov	r0, sl
   2b964:	mov	r1, r9
   2b968:	b	2b9cc <main@@Base+0x15930>
   2b96c:	add	r4, r2, #1
   2b970:	sub	r0, r9, r4
   2b974:	cmp	r0, #2
   2b978:	blt	2b9b0 <main@@Base+0x15914>
   2b97c:	ldrb	r0, [r4]
   2b980:	cmp	r0, #32
   2b984:	bhi	2b9dc <main@@Base+0x15940>
   2b988:	bne	2b9b0 <main@@Base+0x15914>
   2b98c:	ldrb	r0, [r2, #2]!
   2b990:	cmp	r0, #32
   2b994:	bls	2b9b0 <main@@Base+0x15914>
   2b998:	mov	r4, r2
   2b99c:	ldr	r0, [sp, #20]
   2b9a0:	ldr	r0, [r0]
   2b9a4:	cmp	r0, #0
   2b9a8:	bne	2ba48 <main@@Base+0x159ac>
   2b9ac:	b	2b9ec <main@@Base+0x15950>
   2b9b0:	mov	r0, sl
   2b9b4:	mov	r1, r4
   2b9b8:	mov	r2, r9
   2b9bc:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2b9c0:	b	2b9d8 <main@@Base+0x1593c>
   2b9c4:	mov	r0, sl
   2b9c8:	mov	r1, r2
   2b9cc:	mov	r2, r9
   2b9d0:	mov	r3, #10
   2b9d4:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2b9d8:	mov	r4, r0
   2b9dc:	ldr	r0, [sp, #20]
   2b9e0:	ldr	r0, [r0]
   2b9e4:	cmp	r0, #0
   2b9e8:	bne	2ba48 <main@@Base+0x159ac>
   2b9ec:	ldr	r0, [sl]
   2b9f0:	bl	32c44 <flatcc_builder_end_table@@Base>
   2b9f4:	cmp	r0, #0
   2b9f8:	str	r0, [r5]
   2b9fc:	beq	2ba48 <main@@Base+0x159ac>
   2ba00:	mov	r0, r4
   2ba04:	sub	sp, fp, #28
   2ba08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ba0c:	bne	2ba1c <main@@Base+0x15980>
   2ba10:	ldrb	r0, [r4, #2]!
   2ba14:	cmp	r0, #32
   2ba18:	bhi	281dc <main@@Base+0x12140>
   2ba1c:	mov	r0, sl
   2ba20:	mov	r2, r9
   2ba24:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2ba28:	b	281d8 <main@@Base+0x1213c>
   2ba2c:	ldr	sl, [sp, #24]
   2ba30:	mov	r0, sl
   2ba34:	mov	r1, r4
   2ba38:	mov	r2, r9
   2ba3c:	mov	r3, #33	; 0x21
   2ba40:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2ba44:	mov	r4, r0
   2ba48:	mov	r0, sl
   2ba4c:	mov	r1, r4
   2ba50:	mov	r2, r9
   2ba54:	mov	r3, #33	; 0x21
   2ba58:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2ba5c:	mov	r4, r0
   2ba60:	mov	r0, r4
   2ba64:	sub	sp, fp, #28
   2ba68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ba6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ba70:	add	fp, sp, #28
   2ba74:	sub	sp, sp, #52	; 0x34
   2ba78:	mov	sl, r0
   2ba7c:	mov	r0, #0
   2ba80:	mov	r7, r1
   2ba84:	mov	r1, #10
   2ba88:	mov	r4, r3
   2ba8c:	mov	r5, r2
   2ba90:	str	r0, [r3]
   2ba94:	ldr	r0, [sl]
   2ba98:	bl	32294 <flatcc_builder_start_table@@Base>
   2ba9c:	cmp	r0, #0
   2baa0:	beq	2bac8 <main@@Base+0x15a2c>
   2baa4:	mov	r0, sl
   2baa8:	mov	r1, r7
   2baac:	mov	r2, r5
   2bab0:	mov	r3, #33	; 0x21
   2bab4:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2bab8:	mov	r7, r0
   2babc:	mov	r0, r7
   2bac0:	sub	sp, fp, #28
   2bac4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bac8:	sub	r0, fp, #32
   2bacc:	mov	r1, r7
   2bad0:	mov	r2, r5
   2bad4:	mov	r3, #5
   2bad8:	str	r0, [sp]
   2badc:	mov	r0, sl
   2bae0:	bl	39bd0 <flatcc_json_parser_prepare_unions@@Base>
   2bae4:	cmp	r0, r5
   2bae8:	beq	2baa4 <main@@Base+0x15a08>
   2baec:	cmp	r7, r5
   2baf0:	beq	2bb30 <main@@Base+0x15a94>
   2baf4:	ldrb	r0, [r7]
   2baf8:	cmp	r0, #123	; 0x7b
   2bafc:	bne	2bb30 <main@@Base+0x15a94>
   2bb00:	add	r1, r7, #1
   2bb04:	sub	r0, r5, r1
   2bb08:	cmp	r0, #2
   2bb0c:	blt	2bb94 <main@@Base+0x15af8>
   2bb10:	ldrb	r0, [r1]
   2bb14:	cmp	r0, #32
   2bb18:	bls	2bb84 <main@@Base+0x15ae8>
   2bb1c:	mov	r7, r1
   2bb20:	cmp	r7, r5
   2bb24:	mov	r3, r5
   2bb28:	bne	2bbb0 <main@@Base+0x15b14>
   2bb2c:	b	2bbf0 <main@@Base+0x15b54>
   2bb30:	mov	r0, sl
   2bb34:	mov	r1, r7
   2bb38:	mov	r2, r5
   2bb3c:	mov	r3, #21
   2bb40:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2bb44:	mov	r7, r0
   2bb48:	ldr	r0, [sl, #24]
   2bb4c:	cmp	r0, #0
   2bb50:	bne	2baa4 <main@@Base+0x15a08>
   2bb54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2bb58:	mov	r0, sl
   2bb5c:	mov	r1, r7
   2bb60:	mov	r2, r5
   2bb64:	bl	39c60 <flatcc_json_parser_finalize_unions@@Base>
   2bb68:	mov	r7, r0
   2bb6c:	ldr	r0, [sl]
   2bb70:	bl	32c44 <flatcc_builder_end_table@@Base>
   2bb74:	cmp	r0, #0
   2bb78:	str	r0, [r4]
   2bb7c:	bne	2babc <main@@Base+0x15a20>
   2bb80:	b	2baa4 <main@@Base+0x15a08>
   2bb84:	bne	2bb94 <main@@Base+0x15af8>
   2bb88:	ldrb	r0, [r7, #2]!
   2bb8c:	cmp	r0, #32
   2bb90:	bhi	2bba4 <main@@Base+0x15b08>
   2bb94:	mov	r0, sl
   2bb98:	mov	r2, r5
   2bb9c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2bba0:	mov	r7, r0
   2bba4:	cmp	r7, r5
   2bba8:	mov	r3, r5
   2bbac:	beq	2bbf0 <main@@Base+0x15b54>
   2bbb0:	ldrb	r0, [r7]
   2bbb4:	cmp	r0, #125	; 0x7d
   2bbb8:	bne	2bbec <main@@Base+0x15b50>
   2bbbc:	add	r1, r7, #1
   2bbc0:	sub	r0, r5, r1
   2bbc4:	cmp	r0, #2
   2bbc8:	blt	2d160 <main@@Base+0x170c4>
   2bbcc:	ldrb	r0, [r1]
   2bbd0:	cmp	r0, #32
   2bbd4:	bhi	2d124 <main@@Base+0x17088>
   2bbd8:	bne	2d160 <main@@Base+0x170c4>
   2bbdc:	ldrb	r0, [r7, #2]!
   2bbe0:	cmp	r0, #32
   2bbe4:	bhi	2bb48 <main@@Base+0x15aac>
   2bbe8:	b	2d160 <main@@Base+0x170c4>
   2bbec:	mov	r3, r7
   2bbf0:	add	r0, sl, #12
   2bbf4:	movw	r1, #740	; 0x2e4
   2bbf8:	str	r5, [sp, #40]	; 0x28
   2bbfc:	str	r4, [fp, #-36]	; 0xffffffdc
   2bc00:	str	r0, [sp, #36]	; 0x24
   2bc04:	movw	r0, #24436	; 0x5f74
   2bc08:	movt	r1, #6
   2bc0c:	movt	r0, #29299	; 0x7273
   2bc10:	add	r1, r1, #32
   2bc14:	add	r0, r0, #65536	; 0x10000
   2bc18:	str	r1, [sp, #24]
   2bc1c:	add	r0, r0, #16777216	; 0x1000000
   2bc20:	str	r0, [sp, #28]
   2bc24:	cmp	r3, r5
   2bc28:	mov	r8, r5
   2bc2c:	beq	2bc80 <main@@Base+0x15be4>
   2bc30:	ldrb	r0, [r3]
   2bc34:	cmp	r0, #46	; 0x2e
   2bc38:	beq	2bc54 <main@@Base+0x15bb8>
   2bc3c:	cmp	r0, #34	; 0x22
   2bc40:	bne	2bc70 <main@@Base+0x15bd4>
   2bc44:	ldr	r0, [sp, #36]	; 0x24
   2bc48:	mov	r1, #0
   2bc4c:	add	r8, r3, #1
   2bc50:	b	2bc7c <main@@Base+0x15be0>
   2bc54:	mov	r1, r3
   2bc58:	mov	r0, sl
   2bc5c:	mov	r2, r5
   2bc60:	mov	r3, #5
   2bc64:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2bc68:	mov	r8, r0
   2bc6c:	b	2bc80 <main@@Base+0x15be4>
   2bc70:	ldr	r0, [sp, #36]	; 0x24
   2bc74:	mov	r1, #1
   2bc78:	mov	r8, r3
   2bc7c:	str	r1, [r0]
   2bc80:	sub	ip, r5, r8
   2bc84:	mov	r0, #8
   2bc88:	cmp	ip, #8
   2bc8c:	movcc	r0, ip
   2bc90:	and	r0, r0, #15
   2bc94:	sub	r6, r0, #1
   2bc98:	cmp	r6, #7
   2bc9c:	bhi	2c7b0 <main@@Base+0x16714>
   2bca0:	mov	r9, sl
   2bca4:	add	sl, pc, #32
   2bca8:	mov	r1, #0
   2bcac:	mov	lr, #0
   2bcb0:	mov	r7, #0
   2bcb4:	mov	r5, #0
   2bcb8:	mov	r3, #0
   2bcbc:	mov	r4, #0
   2bcc0:	mov	r0, #0
   2bcc4:	mov	r2, #0
   2bcc8:	ldr	pc, [sl, r6, lsl #2]
   2bccc:	andeq	fp, r2, r0, lsr sp
   2bcd0:	andeq	fp, r2, r8, lsr #26
   2bcd4:	andeq	fp, r2, r0, lsr #26
   2bcd8:	andeq	fp, r2, r8, lsl sp
   2bcdc:	andeq	fp, r2, ip, lsl #26
   2bce0:	andeq	fp, r2, r0, lsl #26
   2bce4:	strdeq	fp, [r2], -r0
   2bce8:	andeq	fp, r2, ip, ror #25
   2bcec:	ldrb	lr, [r8, #7]
   2bcf0:	ldrb	r0, [r8, #6]
   2bcf4:	mov	r7, r1
   2bcf8:	orr	r0, lr, r0, lsl #8
   2bcfc:	mov	r1, r0
   2bd00:	ldrb	r0, [r8, #5]
   2bd04:	mov	r5, r7
   2bd08:	orr	r1, r1, r0, lsl #16
   2bd0c:	ldrb	r0, [r8, #4]
   2bd10:	mov	r3, r5
   2bd14:	orr	r1, r1, r0, lsl #24
   2bd18:	ldrb	r0, [r8, #3]
   2bd1c:	orr	r4, r0, r3
   2bd20:	ldrb	r0, [r8, #2]
   2bd24:	orr	r0, r4, r0, lsl #8
   2bd28:	ldrb	r2, [r8, #1]
   2bd2c:	orr	r2, r0, r2, lsl #16
   2bd30:	ldrb	r0, [r8]
   2bd34:	orr	r2, r2, r0, lsl #24
   2bd38:	movw	r0, #29797	; 0x7465
   2bd3c:	movt	r0, #24931	; 0x6163
   2bd40:	subs	r0, r1, r0
   2bd44:	movw	r0, #24946	; 0x6172
   2bd48:	movt	r0, #25448	; 0x6368
   2bd4c:	sbcs	r0, r2, r0
   2bd50:	bcs	2bebc <main@@Base+0x15e20>
   2bd54:	movw	r0, #29817	; 0x7479
   2bd58:	movw	r3, #28005	; 0x6d65
   2bd5c:	mov	sl, r9
   2bd60:	movt	r0, #28511	; 0x6f5f
   2bd64:	movt	r3, #25441	; 0x6361
   2bd68:	eor	r0, r1, r0
   2bd6c:	eor	r3, r2, r3
   2bd70:	orrs	r0, r0, r3
   2bd74:	beq	2c200 <main@@Base+0x16164>
   2bd78:	movw	r0, #28265	; 0x6e69
   2bd7c:	movw	r7, #29793	; 0x7461
   2bd80:	ldr	r5, [sp, #40]	; 0x28
   2bd84:	movt	r0, #26479	; 0x676f
   2bd88:	movt	r7, #24942	; 0x616e
   2bd8c:	eor	r0, r1, r0
   2bd90:	eor	r2, r2, r7
   2bd94:	orrs	r0, r0, r2
   2bd98:	bne	2c29c <main@@Base+0x16200>
   2bd9c:	add	r4, r8, #8
   2bda0:	mov	r0, #8
   2bda4:	sub	ip, r5, r4
   2bda8:	cmp	ip, #8
   2bdac:	movcc	r0, ip
   2bdb0:	and	r0, r0, #15
   2bdb4:	sub	r6, r0, #1
   2bdb8:	cmp	r6, #7
   2bdbc:	bhi	2d004 <main@@Base+0x16f68>
   2bdc0:	str	r4, [sp, #32]
   2bdc4:	add	r2, pc, #28
   2bdc8:	mov	r9, #0
   2bdcc:	mov	lr, #0
   2bdd0:	mov	r1, #0
   2bdd4:	mov	r3, #0
   2bdd8:	mov	r7, #0
   2bddc:	mov	r4, #0
   2bde0:	mov	r0, #0
   2bde4:	ldr	pc, [r2, r6, lsl #2]
   2bde8:	andeq	fp, r2, r4, asr #28
   2bdec:	andeq	fp, r2, ip, lsr lr
   2bdf0:	andeq	fp, r2, r4, lsr lr
   2bdf4:	andeq	fp, r2, ip, lsr #28
   2bdf8:	andeq	fp, r2, r0, lsr #28
   2bdfc:	andeq	fp, r2, r0, lsl lr
   2be00:	andeq	fp, r2, r8, lsl #28
   2be04:	andeq	fp, r2, r8, lsl #28
   2be08:	ldrb	r0, [r8, #14]
   2be0c:	lsl	lr, r0, #8
   2be10:	ldrb	r0, [r8, #13]
   2be14:	mov	r1, r9
   2be18:	orr	r0, lr, r0, lsl #16
   2be1c:	mov	r9, r0
   2be20:	ldrb	r0, [r8, #12]
   2be24:	mov	r3, r1
   2be28:	orr	r9, r9, r0, lsl #24
   2be2c:	ldrb	r0, [r8, #11]
   2be30:	orr	r7, r0, r3
   2be34:	ldrb	r0, [r8, #10]
   2be38:	orr	r4, r7, r0, lsl #8
   2be3c:	ldrb	r0, [r8, #9]
   2be40:	orr	r0, r4, r0, lsl #16
   2be44:	ldr	r4, [sp, #32]
   2be48:	movw	r3, #25856	; 0x6500
   2be4c:	bic	r2, r9, #255	; 0xff
   2be50:	movt	r3, #31088	; 0x7970
   2be54:	eor	r2, r2, r3
   2be58:	ldrb	r1, [r4]
   2be5c:	orr	r1, r0, r1, lsl #24
   2be60:	ldr	r0, [sp, #28]
   2be64:	eor	r0, r1, r0
   2be68:	orrs	r0, r2, r0
   2be6c:	bne	2c410 <main@@Base+0x16374>
   2be70:	cmp	ip, #8
   2be74:	blt	2d004 <main@@Base+0x16f68>
   2be78:	ldr	r2, [sp, #36]	; 0x24
   2be7c:	mov	r1, r8
   2be80:	ldrb	r0, [r1, #15]!
   2be84:	ldr	r2, [r2]
   2be88:	cmp	r2, #0
   2be8c:	beq	2c5f8 <main@@Base+0x1655c>
   2be90:	cmp	r0, #33	; 0x21
   2be94:	bcc	2bea0 <main@@Base+0x15e04>
   2be98:	cmp	r0, #58	; 0x3a
   2be9c:	bne	2d004 <main@@Base+0x16f68>
   2bea0:	ldr	r0, [sp, #36]	; 0x24
   2bea4:	mov	r2, #0
   2bea8:	str	r2, [r0]
   2beac:	sub	r0, r5, r1
   2beb0:	cmp	r0, #2
   2beb4:	bge	2c610 <main@@Base+0x16574>
   2beb8:	b	2c7e4 <main@@Base+0x16748>
   2bebc:	movw	r0, #26720	; 0x6860
   2bec0:	mov	sl, r9
   2bec4:	movt	r0, #24419	; 0x5f63
   2bec8:	subs	r0, r0, r1
   2becc:	movw	r0, #26990	; 0x696e
   2bed0:	movt	r0, #28001	; 0x6d61
   2bed4:	sbcs	r0, r0, r2
   2bed8:	bcc	2c024 <main@@Base+0x15f88>
   2bedc:	movw	r0, #29797	; 0x7465
   2bee0:	movt	r0, #24931	; 0x6163
   2bee4:	eor	r0, r1, r0
   2bee8:	movw	r1, #24946	; 0x6172
   2beec:	movt	r1, #25448	; 0x6368
   2bef0:	eor	r1, r2, r1
   2bef4:	orrs	r0, r0, r1
   2bef8:	bne	2c1f0 <main@@Base+0x16154>
   2befc:	ldr	r5, [sp, #40]	; 0x28
   2bf00:	add	r4, r8, #8
   2bf04:	mov	r0, #8
   2bf08:	sub	ip, r5, r4
   2bf0c:	cmp	ip, #8
   2bf10:	movcc	r0, ip
   2bf14:	and	r0, r0, #15
   2bf18:	sub	r6, r0, #1
   2bf1c:	cmp	r6, #7
   2bf20:	bhi	2d004 <main@@Base+0x16f68>
   2bf24:	str	r4, [sp, #32]
   2bf28:	add	r2, pc, #28
   2bf2c:	mov	r1, #0
   2bf30:	mov	lr, #0
   2bf34:	mov	r9, #0
   2bf38:	mov	r3, #0
   2bf3c:	mov	r7, #0
   2bf40:	mov	r4, #0
   2bf44:	mov	r0, #0
   2bf48:	ldr	pc, [r2, r6, lsl #2]
   2bf4c:	andeq	fp, r2, r8, lsr #31
   2bf50:	andeq	fp, r2, r0, lsr #31
   2bf54:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2bf58:	muleq	r2, r0, pc	; <UNPREDICTABLE>
   2bf5c:	andeq	fp, r2, r4, lsl #31
   2bf60:	andeq	fp, r2, r4, ror pc
   2bf64:	andeq	fp, r2, ip, ror #30
   2bf68:	andeq	fp, r2, ip, ror #30
   2bf6c:	ldrb	r0, [r8, #14]
   2bf70:	lsl	lr, r0, #8
   2bf74:	ldrb	r0, [r8, #13]
   2bf78:	mov	r9, r1
   2bf7c:	orr	r0, lr, r0, lsl #16
   2bf80:	mov	r1, r0
   2bf84:	ldrb	r0, [r8, #12]
   2bf88:	mov	r3, r9
   2bf8c:	orr	r1, r1, r0, lsl #24
   2bf90:	ldrb	r0, [r8, #11]
   2bf94:	orr	r7, r0, r3
   2bf98:	ldrb	r0, [r8, #10]
   2bf9c:	orr	r4, r7, r0, lsl #8
   2bfa0:	ldrb	r0, [r8, #9]
   2bfa4:	orr	r0, r4, r0, lsl #16
   2bfa8:	ldr	r4, [sp, #32]
   2bfac:	movw	r2, #25856	; 0x6500
   2bfb0:	bic	r1, r1, #255	; 0xff
   2bfb4:	movt	r2, #31088	; 0x7970
   2bfb8:	eor	r1, r1, r2
   2bfbc:	ldrb	r2, [r4]
   2bfc0:	orr	r0, r0, r2, lsl #24
   2bfc4:	movw	r2, #24436	; 0x5f74
   2bfc8:	movt	r2, #29299	; 0x7273
   2bfcc:	eor	r2, r0, r2
   2bfd0:	orrs	r1, r1, r2
   2bfd4:	bne	2c470 <main@@Base+0x163d4>
   2bfd8:	cmp	ip, #8
   2bfdc:	blt	2d004 <main@@Base+0x16f68>
   2bfe0:	ldr	r2, [sp, #36]	; 0x24
   2bfe4:	mov	r1, r8
   2bfe8:	ldrb	r0, [r1, #15]!
   2bfec:	ldr	r2, [r2]
   2bff0:	cmp	r2, #0
   2bff4:	beq	2c67c <main@@Base+0x165e0>
   2bff8:	cmp	r0, #33	; 0x21
   2bffc:	bcc	2c008 <main@@Base+0x15f6c>
   2c000:	cmp	r0, #58	; 0x3a
   2c004:	bne	2d004 <main@@Base+0x16f68>
   2c008:	ldr	r0, [sp, #36]	; 0x24
   2c00c:	mov	r2, #0
   2c010:	str	r2, [r0]
   2c014:	sub	r0, r5, r1
   2c018:	cmp	r0, #2
   2c01c:	bge	2c694 <main@@Base+0x165f8>
   2c020:	b	2c94c <main@@Base+0x168b0>
   2c024:	movw	r0, #26979	; 0x6963
   2c028:	movw	r3, #25701	; 0x6465
   2c02c:	movt	r0, #24427	; 0x5f6b
   2c030:	movt	r3, #29545	; 0x7369
   2c034:	eor	r0, r1, r0
   2c038:	eor	r3, r2, r3
   2c03c:	orrs	r0, r0, r3
   2c040:	beq	2c300 <main@@Base+0x16264>
   2c044:	movw	r0, #26721	; 0x6861
   2c048:	movt	r0, #24419	; 0x5f63
   2c04c:	eor	r0, r1, r0
   2c050:	movw	r1, #26990	; 0x696e
   2c054:	movt	r1, #28001	; 0x6d61
   2c058:	eor	r1, r2, r1
   2c05c:	orrs	r0, r0, r1
   2c060:	bne	2c1f0 <main@@Base+0x16154>
   2c064:	ldr	r0, [sp, #40]	; 0x28
   2c068:	add	r4, r8, #8
   2c06c:	sub	lr, r0, r4
   2c070:	mov	r0, #8
   2c074:	cmp	lr, #8
   2c078:	movcc	r0, lr
   2c07c:	and	r0, r0, #15
   2c080:	sub	r6, r0, #1
   2c084:	cmp	r6, #7
   2c088:	bhi	2c5b4 <main@@Base+0x16518>
   2c08c:	str	r4, [sp, #32]
   2c090:	add	r7, pc, #32
   2c094:	mov	r1, #0
   2c098:	mov	ip, #0
   2c09c:	mov	sl, #0
   2c0a0:	mov	r5, #0
   2c0a4:	mov	r3, #0
   2c0a8:	mov	r4, #0
   2c0ac:	mov	r2, #0
   2c0b0:	mov	r0, #0
   2c0b4:	ldr	pc, [r7, r6, lsl #2]
   2c0b8:	andeq	ip, r2, ip, lsl r1
   2c0bc:	andeq	ip, r2, r4, lsl r1
   2c0c0:	andeq	ip, r2, ip, lsl #2
   2c0c4:	andeq	ip, r2, r4, lsl #2
   2c0c8:	strdeq	ip, [r2], -r8
   2c0cc:	andeq	ip, r2, ip, ror #1
   2c0d0:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   2c0d4:	ldrdeq	ip, [r2], -r8
   2c0d8:	ldrb	ip, [r8, #15]
   2c0dc:	ldrb	r0, [r8, #14]
   2c0e0:	mov	sl, r1
   2c0e4:	orr	r0, ip, r0, lsl #8
   2c0e8:	mov	r1, r0
   2c0ec:	ldrb	r0, [r8, #13]
   2c0f0:	mov	r5, sl
   2c0f4:	orr	r1, r1, r0, lsl #16
   2c0f8:	ldrb	r0, [r8, #12]
   2c0fc:	mov	r3, r5
   2c100:	orr	r1, r1, r0, lsl #24
   2c104:	ldrb	r0, [r8, #11]
   2c108:	orr	r4, r0, r3
   2c10c:	ldrb	r0, [r8, #10]
   2c110:	orr	r2, r4, r0, lsl #8
   2c114:	ldrb	r0, [r8, #9]
   2c118:	orr	r0, r2, r0, lsl #16
   2c11c:	ldr	r4, [sp, #32]
   2c120:	movw	r2, #24436	; 0x5f74
   2c124:	movt	r2, #25970	; 0x6572
   2c128:	eor	r2, r1, r2
   2c12c:	ldrb	r3, [r4]
   2c130:	orr	r0, r0, r3, lsl #24
   2c134:	movw	r3, #25460	; 0x6374
   2c138:	movt	r3, #29281	; 0x7261
   2c13c:	eor	r3, r0, r3
   2c140:	orrs	r2, r2, r3
   2c144:	bne	2c4d0 <main@@Base+0x16434>
   2c148:	ldr	r0, [sp, #40]	; 0x28
   2c14c:	add	r4, r8, #16
   2c150:	mov	r1, #8
   2c154:	mov	sl, r9
   2c158:	sub	r0, r0, r4
   2c15c:	cmp	r0, #8
   2c160:	movcc	r1, r0
   2c164:	and	r2, r1, #15
   2c168:	sub	r1, r2, #3
   2c16c:	cmp	r1, #6
   2c170:	bcs	2c660 <main@@Base+0x165c4>
   2c174:	ldrb	r1, [r8, #18]
   2c178:	ldr	r5, [sp, #40]	; 0x28
   2c17c:	lsl	r1, r1, #8
   2c180:	ldrb	r2, [r8, #17]
   2c184:	orr	r1, r1, r2, lsl #16
   2c188:	ldrb	r2, [r4]
   2c18c:	bic	r1, r1, #255	; 0xff
   2c190:	orr	r1, r1, r2, lsl #24
   2c194:	movw	r2, #25856	; 0x6500
   2c198:	movt	r2, #31088	; 0x7970
   2c19c:	teq	r1, r2
   2c1a0:	bne	2d004 <main@@Base+0x16f68>
   2c1a4:	cmp	r0, #4
   2c1a8:	blt	2d004 <main@@Base+0x16f68>
   2c1ac:	ldr	r2, [sp, #36]	; 0x24
   2c1b0:	mov	r1, r8
   2c1b4:	ldrb	r0, [r1, #19]!
   2c1b8:	ldr	r2, [r2]
   2c1bc:	cmp	r2, #0
   2c1c0:	beq	2c9b4 <main@@Base+0x16918>
   2c1c4:	cmp	r0, #33	; 0x21
   2c1c8:	bcc	2c1d4 <main@@Base+0x16138>
   2c1cc:	cmp	r0, #58	; 0x3a
   2c1d0:	bne	2d004 <main@@Base+0x16f68>
   2c1d4:	ldr	r0, [sp, #36]	; 0x24
   2c1d8:	mov	r2, #0
   2c1dc:	str	r2, [r0]
   2c1e0:	sub	r0, r5, r1
   2c1e4:	cmp	r0, #2
   2c1e8:	bge	2c9cc <main@@Base+0x16930>
   2c1ec:	b	2cdd4 <main@@Base+0x16d38>
   2c1f0:	mov	r0, sl
   2c1f4:	mov	r1, r8
   2c1f8:	ldr	r5, [sp, #40]	; 0x28
   2c1fc:	b	2d00c <main@@Base+0x16f70>
   2c200:	ldr	r5, [sp, #40]	; 0x28
   2c204:	add	r6, r8, #8
   2c208:	mov	r1, #8
   2c20c:	sub	r0, r5, r6
   2c210:	cmp	r0, #8
   2c214:	movcc	r1, r0
   2c218:	and	r2, r1, #15
   2c21c:	sub	r1, r2, #2
   2c220:	cmp	r1, #7
   2c224:	bcs	2c548 <main@@Base+0x164ac>
   2c228:	ldrb	r1, [r8, #9]
   2c22c:	lsl	r2, r1, #16
   2c230:	mov	r1, #0
   2c234:	ldrb	r3, [r6]
   2c238:	orr	r2, r2, r3, lsl #24
   2c23c:	movw	r3, #0
   2c240:	movt	r3, #28773	; 0x7065
   2c244:	eor	r2, r2, r3
   2c248:	orrs	r1, r1, r2
   2c24c:	bne	2c8ac <main@@Base+0x16810>
   2c250:	cmp	r0, #3
   2c254:	blt	2c8ac <main@@Base+0x16810>
   2c258:	ldr	r2, [sp, #36]	; 0x24
   2c25c:	mov	r1, r8
   2c260:	ldrb	r0, [r1, #10]!
   2c264:	ldr	r2, [r2]
   2c268:	cmp	r2, #0
   2c26c:	beq	2c62c <main@@Base+0x16590>
   2c270:	cmp	r0, #33	; 0x21
   2c274:	bcc	2c280 <main@@Base+0x161e4>
   2c278:	cmp	r0, #58	; 0x3a
   2c27c:	bne	2c8ac <main@@Base+0x16810>
   2c280:	ldr	r0, [sp, #36]	; 0x24
   2c284:	mov	r2, #0
   2c288:	str	r2, [r0]
   2c28c:	sub	r0, r5, r1
   2c290:	cmp	r0, #2
   2c294:	bge	2c644 <main@@Base+0x165a8>
   2c298:	b	2c860 <main@@Base+0x167c4>
   2c29c:	and	r0, r1, #-16777216	; 0xff000000
   2c2a0:	eor	r0, r0, #1862270976	; 0x6f000000
   2c2a4:	orrs	r0, r0, r3
   2c2a8:	bne	2c7b0 <main@@Base+0x16714>
   2c2ac:	cmp	ip, #6
   2c2b0:	mov	r1, r8
   2c2b4:	blt	2cb80 <main@@Base+0x16ae4>
   2c2b8:	ldr	r1, [sp, #36]	; 0x24
   2c2bc:	mov	r2, r8
   2c2c0:	ldrb	r0, [r2, #5]!
   2c2c4:	ldr	r1, [r1]
   2c2c8:	cmp	r1, #0
   2c2cc:	beq	2c5c0 <main@@Base+0x16524>
   2c2d0:	cmp	r0, #33	; 0x21
   2c2d4:	bcc	2c2e4 <main@@Base+0x16248>
   2c2d8:	cmp	r0, #58	; 0x3a
   2c2dc:	mov	r1, r8
   2c2e0:	bne	2cb80 <main@@Base+0x16ae4>
   2c2e4:	ldr	r0, [sp, #36]	; 0x24
   2c2e8:	mov	r1, #0
   2c2ec:	str	r1, [r0]
   2c2f0:	sub	r0, r5, r2
   2c2f4:	cmp	r0, #2
   2c2f8:	bge	2c5dc <main@@Base+0x16540>
   2c2fc:	b	2c760 <main@@Base+0x166c4>
   2c300:	ldr	r5, [sp, #40]	; 0x28
   2c304:	add	r9, r8, #8
   2c308:	mov	r1, #8
   2c30c:	sub	lr, r5, r9
   2c310:	cmp	lr, #8
   2c314:	movcc	r1, lr
   2c318:	and	r1, r1, #15
   2c31c:	sub	r3, r1, #1
   2c320:	cmp	r3, #7
   2c324:	bhi	2cf90 <main@@Base+0x16ef4>
   2c328:	add	r6, pc, #24
   2c32c:	mov	ip, #0
   2c330:	mov	r2, #0
   2c334:	mov	r1, #0
   2c338:	mov	r0, #0
   2c33c:	mov	r7, #0
   2c340:	mov	r4, #0
   2c344:	ldr	pc, [r6, r3, lsl #2]
   2c348:	muleq	r2, r8, r3
   2c34c:	muleq	r2, r0, r3
   2c350:	andeq	ip, r2, r8, lsl #7
   2c354:	andeq	ip, r2, r0, lsl #7
   2c358:	andeq	ip, r2, r0, ror r3
   2c35c:	andeq	ip, r2, r8, ror #6
   2c360:	andeq	ip, r2, r8, ror #6
   2c364:	andeq	ip, r2, r8, ror #6
   2c368:	ldrb	r1, [r8, #13]
   2c36c:	lsl	r2, r1, #16
   2c370:	ldrb	r1, [r8, #12]
   2c374:	orr	r2, r2, r1, lsl #24
   2c378:	mov	r1, ip
   2c37c:	mov	ip, r2
   2c380:	ldrb	r2, [r8, #11]
   2c384:	orr	r0, r2, r1
   2c388:	ldrb	r1, [r8, #10]
   2c38c:	orr	r7, r0, r1, lsl #8
   2c390:	ldrb	r1, [r8, #9]
   2c394:	orr	r4, r7, r1, lsl #16
   2c398:	ldrb	r1, [r9]
   2c39c:	movw	r0, #27487	; 0x6b5f
   2c3a0:	lsr	r3, ip, #16
   2c3a4:	orr	r1, r4, r1, lsl #24
   2c3a8:	eor	r2, r0, r1, lsr #16
   2c3ac:	movw	r0, #28773	; 0x7065
   2c3b0:	orr	r3, r3, r1, lsl #16
   2c3b4:	movt	r0, #29817	; 0x7479
   2c3b8:	eor	r3, r3, r0
   2c3bc:	orrs	r2, r3, r2
   2c3c0:	bne	2c55c <main@@Base+0x164c0>
   2c3c4:	cmp	lr, #7
   2c3c8:	blt	2cf90 <main@@Base+0x16ef4>
   2c3cc:	ldr	r2, [sp, #36]	; 0x24
   2c3d0:	mov	r1, r8
   2c3d4:	ldrb	r0, [r1, #14]!
   2c3d8:	ldr	r2, [r2]
   2c3dc:	cmp	r2, #0
   2c3e0:	beq	2c6b0 <main@@Base+0x16614>
   2c3e4:	cmp	r0, #33	; 0x21
   2c3e8:	bcc	2c3f4 <main@@Base+0x16358>
   2c3ec:	cmp	r0, #58	; 0x3a
   2c3f0:	bne	2cf90 <main@@Base+0x16ef4>
   2c3f4:	ldr	r0, [sp, #36]	; 0x24
   2c3f8:	mov	r2, #0
   2c3fc:	str	r2, [r0]
   2c400:	sub	r0, r5, r1
   2c404:	cmp	r0, #2
   2c408:	bge	2c6c8 <main@@Base+0x1662c>
   2c40c:	b	2c9fc <main@@Base+0x16960>
   2c410:	movw	r0, #0
   2c414:	bfc	r1, #0, #16
   2c418:	movt	r0, #29556	; 0x7374
   2c41c:	teq	r1, r0
   2c420:	bne	2d004 <main@@Base+0x16f68>
   2c424:	cmp	ip, #3
   2c428:	blt	2d004 <main@@Base+0x16f68>
   2c42c:	ldr	r2, [sp, #36]	; 0x24
   2c430:	mov	r1, r8
   2c434:	ldrb	r0, [r1, #10]!
   2c438:	ldr	r2, [r2]
   2c43c:	cmp	r2, #0
   2c440:	beq	2c6e4 <main@@Base+0x16648>
   2c444:	cmp	r0, #33	; 0x21
   2c448:	bcc	2c454 <main@@Base+0x163b8>
   2c44c:	cmp	r0, #58	; 0x3a
   2c450:	bne	2d004 <main@@Base+0x16f68>
   2c454:	ldr	r0, [sp, #36]	; 0x24
   2c458:	mov	r2, #0
   2c45c:	str	r2, [r0]
   2c460:	sub	r0, r5, r1
   2c464:	cmp	r0, #2
   2c468:	bge	2c6fc <main@@Base+0x16660>
   2c46c:	b	2ca78 <main@@Base+0x169dc>
   2c470:	movw	r1, #0
   2c474:	bfc	r0, #0, #16
   2c478:	movt	r1, #29299	; 0x7273
   2c47c:	teq	r0, r1
   2c480:	bne	2d004 <main@@Base+0x16f68>
   2c484:	cmp	ip, #3
   2c488:	blt	2d004 <main@@Base+0x16f68>
   2c48c:	ldr	r2, [sp, #36]	; 0x24
   2c490:	mov	r1, r8
   2c494:	ldrb	r0, [r1, #10]!
   2c498:	ldr	r2, [r2]
   2c49c:	cmp	r2, #0
   2c4a0:	beq	2c718 <main@@Base+0x1667c>
   2c4a4:	cmp	r0, #33	; 0x21
   2c4a8:	bcc	2c4b4 <main@@Base+0x16418>
   2c4ac:	cmp	r0, #58	; 0x3a
   2c4b0:	bne	2d004 <main@@Base+0x16f68>
   2c4b4:	ldr	r0, [sp, #36]	; 0x24
   2c4b8:	mov	r2, #0
   2c4bc:	str	r2, [r0]
   2c4c0:	sub	r0, r5, r1
   2c4c4:	cmp	r0, #2
   2c4c8:	bge	2c730 <main@@Base+0x16694>
   2c4cc:	b	2caf4 <main@@Base+0x16a58>
   2c4d0:	movw	r2, #29281	; 0x7261
   2c4d4:	lsr	r1, r1, #16
   2c4d8:	mov	sl, r9
   2c4dc:	eor	r2, r2, r0, lsr #16
   2c4e0:	orr	r0, r1, r0, lsl #16
   2c4e4:	movw	r1, #25970	; 0x6572
   2c4e8:	movt	r1, #25460	; 0x6374
   2c4ec:	eor	r0, r0, r1
   2c4f0:	orrs	r0, r0, r2
   2c4f4:	bne	2c5b4 <main@@Base+0x16518>
   2c4f8:	ldr	r5, [sp, #40]	; 0x28
   2c4fc:	cmp	lr, #7
   2c500:	blt	2d004 <main@@Base+0x16f68>
   2c504:	ldr	r2, [sp, #36]	; 0x24
   2c508:	mov	r1, r8
   2c50c:	ldrb	r0, [r1, #14]!
   2c510:	ldr	r2, [r2]
   2c514:	cmp	r2, #0
   2c518:	beq	2c8d0 <main@@Base+0x16834>
   2c51c:	cmp	r0, #33	; 0x21
   2c520:	bcc	2c52c <main@@Base+0x16490>
   2c524:	cmp	r0, #58	; 0x3a
   2c528:	bne	2d004 <main@@Base+0x16f68>
   2c52c:	ldr	r0, [sp, #36]	; 0x24
   2c530:	mov	r2, #0
   2c534:	str	r2, [r0]
   2c538:	sub	r0, r5, r1
   2c53c:	cmp	r0, #2
   2c540:	bge	2c8e8 <main@@Base+0x1684c>
   2c544:	b	2cc68 <main@@Base+0x16bcc>
   2c548:	cmp	r2, #1
   2c54c:	mov	r1, #0
   2c550:	mov	r2, #0
   2c554:	beq	2c234 <main@@Base+0x16198>
   2c558:	b	2c8ac <main@@Base+0x16810>
   2c55c:	and	r1, r1, #-16777216	; 0xff000000
   2c560:	teq	r1, #1795162112	; 0x6b000000
   2c564:	bne	2cf90 <main@@Base+0x16ef4>
   2c568:	cmp	lr, #2
   2c56c:	blt	2cf90 <main@@Base+0x16ef4>
   2c570:	ldr	r2, [sp, #36]	; 0x24
   2c574:	mov	r1, r8
   2c578:	ldrb	r0, [r1, #9]!
   2c57c:	ldr	r2, [r2]
   2c580:	cmp	r2, #0
   2c584:	beq	2c904 <main@@Base+0x16868>
   2c588:	cmp	r0, #33	; 0x21
   2c58c:	bcc	2c598 <main@@Base+0x164fc>
   2c590:	cmp	r0, #58	; 0x3a
   2c594:	bne	2cf90 <main@@Base+0x16ef4>
   2c598:	ldr	r0, [sp, #36]	; 0x24
   2c59c:	mov	r2, #0
   2c5a0:	str	r2, [r0]
   2c5a4:	sub	r0, r5, r1
   2c5a8:	cmp	r0, #2
   2c5ac:	bge	2c91c <main@@Base+0x16880>
   2c5b0:	b	2cce4 <main@@Base+0x16c48>
   2c5b4:	mov	r0, sl
   2c5b8:	mov	r1, r4
   2c5bc:	b	2c1f8 <main@@Base+0x1615c>
   2c5c0:	cmp	r0, #34	; 0x22
   2c5c4:	mov	r1, r8
   2c5c8:	bne	2cb80 <main@@Base+0x16ae4>
   2c5cc:	add	r2, r8, #6
   2c5d0:	sub	r0, r5, r2
   2c5d4:	cmp	r0, #2
   2c5d8:	blt	2c760 <main@@Base+0x166c4>
   2c5dc:	ldrb	r0, [r2]
   2c5e0:	cmp	r0, #32
   2c5e4:	bls	2c74c <main@@Base+0x166b0>
   2c5e8:	mov	r1, r2
   2c5ec:	cmp	r1, r5
   2c5f0:	bne	2c77c <main@@Base+0x166e0>
   2c5f4:	b	2c7bc <main@@Base+0x16720>
   2c5f8:	cmp	r0, #34	; 0x22
   2c5fc:	bne	2d004 <main@@Base+0x16f68>
   2c600:	add	r1, r8, #16
   2c604:	sub	r0, r5, r1
   2c608:	cmp	r0, #2
   2c60c:	blt	2c7e4 <main@@Base+0x16748>
   2c610:	ldrb	r0, [r1]
   2c614:	cmp	r0, #32
   2c618:	bls	2c7d0 <main@@Base+0x16734>
   2c61c:	mov	r2, r1
   2c620:	cmp	r2, r5
   2c624:	bne	2c7fc <main@@Base+0x16760>
   2c628:	b	2c834 <main@@Base+0x16798>
   2c62c:	cmp	r0, #34	; 0x22
   2c630:	bne	2c8ac <main@@Base+0x16810>
   2c634:	add	r1, r8, #11
   2c638:	sub	r0, r5, r1
   2c63c:	cmp	r0, #2
   2c640:	blt	2c860 <main@@Base+0x167c4>
   2c644:	ldrb	r0, [r1]
   2c648:	cmp	r0, #32
   2c64c:	bls	2c84c <main@@Base+0x167b0>
   2c650:	mov	r2, r1
   2c654:	cmp	r2, r5
   2c658:	bne	2c878 <main@@Base+0x167dc>
   2c65c:	b	2c8b8 <main@@Base+0x1681c>
   2c660:	ldr	r5, [sp, #40]	; 0x28
   2c664:	mov	r1, #0
   2c668:	cmp	r2, #1
   2c66c:	beq	2c188 <main@@Base+0x160ec>
   2c670:	cmp	r2, #2
   2c674:	beq	2c180 <main@@Base+0x160e4>
   2c678:	b	2d004 <main@@Base+0x16f68>
   2c67c:	cmp	r0, #34	; 0x22
   2c680:	bne	2d004 <main@@Base+0x16f68>
   2c684:	add	r1, r8, #16
   2c688:	sub	r0, r5, r1
   2c68c:	cmp	r0, #2
   2c690:	blt	2c94c <main@@Base+0x168b0>
   2c694:	ldrb	r0, [r1]
   2c698:	cmp	r0, #32
   2c69c:	bls	2c938 <main@@Base+0x1689c>
   2c6a0:	mov	r2, r1
   2c6a4:	cmp	r2, r5
   2c6a8:	bne	2c964 <main@@Base+0x168c8>
   2c6ac:	b	2c99c <main@@Base+0x16900>
   2c6b0:	cmp	r0, #34	; 0x22
   2c6b4:	bne	2cf90 <main@@Base+0x16ef4>
   2c6b8:	add	r1, r8, #15
   2c6bc:	sub	r0, r5, r1
   2c6c0:	cmp	r0, #2
   2c6c4:	blt	2c9fc <main@@Base+0x16960>
   2c6c8:	ldrb	r0, [r1]
   2c6cc:	cmp	r0, #32
   2c6d0:	bls	2c9e8 <main@@Base+0x1694c>
   2c6d4:	mov	r2, r1
   2c6d8:	cmp	r2, r5
   2c6dc:	bne	2ca14 <main@@Base+0x16978>
   2c6e0:	b	2ca4c <main@@Base+0x169b0>
   2c6e4:	cmp	r0, #34	; 0x22
   2c6e8:	bne	2d004 <main@@Base+0x16f68>
   2c6ec:	add	r1, r8, #11
   2c6f0:	sub	r0, r5, r1
   2c6f4:	cmp	r0, #2
   2c6f8:	blt	2ca78 <main@@Base+0x169dc>
   2c6fc:	ldrb	r0, [r1]
   2c700:	cmp	r0, #32
   2c704:	bls	2ca64 <main@@Base+0x169c8>
   2c708:	mov	r2, r1
   2c70c:	cmp	r2, r5
   2c710:	bne	2ca90 <main@@Base+0x169f4>
   2c714:	b	2cac8 <main@@Base+0x16a2c>
   2c718:	cmp	r0, #34	; 0x22
   2c71c:	bne	2d004 <main@@Base+0x16f68>
   2c720:	add	r1, r8, #11
   2c724:	sub	r0, r5, r1
   2c728:	cmp	r0, #2
   2c72c:	blt	2caf4 <main@@Base+0x16a58>
   2c730:	ldrb	r0, [r1]
   2c734:	cmp	r0, #32
   2c738:	bls	2cae0 <main@@Base+0x16a44>
   2c73c:	mov	r2, r1
   2c740:	cmp	r2, r5
   2c744:	bne	2cb0c <main@@Base+0x16a70>
   2c748:	b	2cb44 <main@@Base+0x16aa8>
   2c74c:	bne	2c760 <main@@Base+0x166c4>
   2c750:	mov	r1, r2
   2c754:	ldrb	r0, [r1, #1]!
   2c758:	cmp	r0, #32
   2c75c:	bhi	2c774 <main@@Base+0x166d8>
   2c760:	mov	r1, r2
   2c764:	mov	r0, sl
   2c768:	mov	r2, r5
   2c76c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2c770:	mov	r1, r0
   2c774:	cmp	r1, r5
   2c778:	beq	2c7bc <main@@Base+0x16720>
   2c77c:	ldrb	r0, [r1]
   2c780:	cmp	r0, #58	; 0x3a
   2c784:	bne	2c7bc <main@@Base+0x16720>
   2c788:	add	r2, r1, #1
   2c78c:	sub	r0, r5, r2
   2c790:	cmp	r0, #2
   2c794:	blt	2cb6c <main@@Base+0x16ad0>
   2c798:	ldrb	r0, [r2]
   2c79c:	cmp	r0, #32
   2c7a0:	bls	2cb5c <main@@Base+0x16ac0>
   2c7a4:	mov	r1, r2
   2c7a8:	cmp	r8, r1
   2c7ac:	bne	2cb88 <main@@Base+0x16aec>
   2c7b0:	mov	r0, sl
   2c7b4:	mov	r1, r8
   2c7b8:	b	2d00c <main@@Base+0x16f70>
   2c7bc:	mov	r0, sl
   2c7c0:	mov	r2, r5
   2c7c4:	mov	r3, #4
   2c7c8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2c7cc:	b	2cb7c <main@@Base+0x16ae0>
   2c7d0:	bne	2c7e4 <main@@Base+0x16748>
   2c7d4:	mov	r2, r1
   2c7d8:	ldrb	r0, [r2, #1]!
   2c7dc:	cmp	r0, #32
   2c7e0:	bhi	2c7f4 <main@@Base+0x16758>
   2c7e4:	mov	r0, sl
   2c7e8:	mov	r2, r5
   2c7ec:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2c7f0:	mov	r2, r0
   2c7f4:	cmp	r2, r5
   2c7f8:	beq	2c834 <main@@Base+0x16798>
   2c7fc:	ldrb	r0, [r2]
   2c800:	cmp	r0, #58	; 0x3a
   2c804:	bne	2c834 <main@@Base+0x16798>
   2c808:	add	r1, r2, #1
   2c80c:	sub	r0, r5, r1
   2c810:	cmp	r0, #2
   2c814:	blt	2cbc8 <main@@Base+0x16b2c>
   2c818:	ldrb	r0, [r1]
   2c81c:	cmp	r0, #32
   2c820:	bls	2cbb8 <main@@Base+0x16b1c>
   2c824:	mov	r2, r1
   2c828:	cmp	r4, r2
   2c82c:	bne	2cbe0 <main@@Base+0x16b44>
   2c830:	b	2d004 <main@@Base+0x16f68>
   2c834:	mov	r1, r2
   2c838:	mov	r0, sl
   2c83c:	mov	r2, r5
   2c840:	mov	r3, #4
   2c844:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2c848:	b	2cbd4 <main@@Base+0x16b38>
   2c84c:	bne	2c860 <main@@Base+0x167c4>
   2c850:	mov	r2, r1
   2c854:	ldrb	r0, [r2, #1]!
   2c858:	cmp	r0, #32
   2c85c:	bhi	2c870 <main@@Base+0x167d4>
   2c860:	mov	r0, sl
   2c864:	mov	r2, r5
   2c868:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2c86c:	mov	r2, r0
   2c870:	cmp	r2, r5
   2c874:	beq	2c8b8 <main@@Base+0x1681c>
   2c878:	ldrb	r0, [r2]
   2c87c:	cmp	r0, #58	; 0x3a
   2c880:	bne	2c8b8 <main@@Base+0x1681c>
   2c884:	add	r1, r2, #1
   2c888:	sub	r0, r5, r1
   2c88c:	cmp	r0, #2
   2c890:	blt	2cc10 <main@@Base+0x16b74>
   2c894:	ldrb	r0, [r1]
   2c898:	cmp	r0, #32
   2c89c:	bls	2cc00 <main@@Base+0x16b64>
   2c8a0:	mov	r2, r1
   2c8a4:	cmp	r6, r2
   2c8a8:	bne	2cc28 <main@@Base+0x16b8c>
   2c8ac:	mov	r0, sl
   2c8b0:	mov	r1, r6
   2c8b4:	b	2d00c <main@@Base+0x16f70>
   2c8b8:	mov	r1, r2
   2c8bc:	mov	r0, sl
   2c8c0:	mov	r2, r5
   2c8c4:	mov	r3, #4
   2c8c8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2c8cc:	b	2cc1c <main@@Base+0x16b80>
   2c8d0:	cmp	r0, #34	; 0x22
   2c8d4:	bne	2d004 <main@@Base+0x16f68>
   2c8d8:	add	r1, r8, #15
   2c8dc:	sub	r0, r5, r1
   2c8e0:	cmp	r0, #2
   2c8e4:	blt	2cc68 <main@@Base+0x16bcc>
   2c8e8:	ldrb	r0, [r1]
   2c8ec:	cmp	r0, #32
   2c8f0:	bls	2cc54 <main@@Base+0x16bb8>
   2c8f4:	mov	r2, r1
   2c8f8:	cmp	r2, r5
   2c8fc:	bne	2cc80 <main@@Base+0x16be4>
   2c900:	b	2ccb8 <main@@Base+0x16c1c>
   2c904:	cmp	r0, #34	; 0x22
   2c908:	bne	2cf90 <main@@Base+0x16ef4>
   2c90c:	add	r1, r8, #10
   2c910:	sub	r0, r5, r1
   2c914:	cmp	r0, #2
   2c918:	blt	2cce4 <main@@Base+0x16c48>
   2c91c:	ldrb	r0, [r1]
   2c920:	cmp	r0, #32
   2c924:	bls	2ccd0 <main@@Base+0x16c34>
   2c928:	mov	r2, r1
   2c92c:	cmp	r2, r5
   2c930:	bne	2ccfc <main@@Base+0x16c60>
   2c934:	b	2cd34 <main@@Base+0x16c98>
   2c938:	bne	2c94c <main@@Base+0x168b0>
   2c93c:	mov	r2, r1
   2c940:	ldrb	r0, [r2, #1]!
   2c944:	cmp	r0, #32
   2c948:	bhi	2c95c <main@@Base+0x168c0>
   2c94c:	mov	r0, sl
   2c950:	mov	r2, r5
   2c954:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2c958:	mov	r2, r0
   2c95c:	cmp	r2, r5
   2c960:	beq	2c99c <main@@Base+0x16900>
   2c964:	ldrb	r0, [r2]
   2c968:	cmp	r0, #58	; 0x3a
   2c96c:	bne	2c99c <main@@Base+0x16900>
   2c970:	add	r1, r2, #1
   2c974:	sub	r0, r5, r1
   2c978:	cmp	r0, #2
   2c97c:	blt	2cd5c <main@@Base+0x16cc0>
   2c980:	ldrb	r0, [r1]
   2c984:	cmp	r0, #32
   2c988:	bls	2cd4c <main@@Base+0x16cb0>
   2c98c:	mov	r2, r1
   2c990:	cmp	r4, r2
   2c994:	bne	2cd74 <main@@Base+0x16cd8>
   2c998:	b	2d004 <main@@Base+0x16f68>
   2c99c:	mov	r1, r2
   2c9a0:	mov	r0, sl
   2c9a4:	mov	r2, r5
   2c9a8:	mov	r3, #4
   2c9ac:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2c9b0:	b	2cd68 <main@@Base+0x16ccc>
   2c9b4:	cmp	r0, #34	; 0x22
   2c9b8:	bne	2d004 <main@@Base+0x16f68>
   2c9bc:	add	r1, r8, #20
   2c9c0:	sub	r0, r5, r1
   2c9c4:	cmp	r0, #2
   2c9c8:	blt	2cdd4 <main@@Base+0x16d38>
   2c9cc:	ldrb	r0, [r1]
   2c9d0:	cmp	r0, #32
   2c9d4:	bls	2cdc0 <main@@Base+0x16d24>
   2c9d8:	mov	r2, r1
   2c9dc:	cmp	r2, r5
   2c9e0:	bne	2cdec <main@@Base+0x16d50>
   2c9e4:	b	2ce24 <main@@Base+0x16d88>
   2c9e8:	bne	2c9fc <main@@Base+0x16960>
   2c9ec:	mov	r2, r1
   2c9f0:	ldrb	r0, [r2, #1]!
   2c9f4:	cmp	r0, #32
   2c9f8:	bhi	2ca0c <main@@Base+0x16970>
   2c9fc:	mov	r0, sl
   2ca00:	mov	r2, r5
   2ca04:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2ca08:	mov	r2, r0
   2ca0c:	cmp	r2, r5
   2ca10:	beq	2ca4c <main@@Base+0x169b0>
   2ca14:	ldrb	r0, [r2]
   2ca18:	cmp	r0, #58	; 0x3a
   2ca1c:	bne	2ca4c <main@@Base+0x169b0>
   2ca20:	add	r1, r2, #1
   2ca24:	sub	r0, r5, r1
   2ca28:	cmp	r0, #2
   2ca2c:	blt	2ce84 <main@@Base+0x16de8>
   2ca30:	ldrb	r0, [r1]
   2ca34:	cmp	r0, #32
   2ca38:	bls	2ce74 <main@@Base+0x16dd8>
   2ca3c:	mov	r2, r1
   2ca40:	cmp	r9, r2
   2ca44:	bne	2ce9c <main@@Base+0x16e00>
   2ca48:	b	2cf90 <main@@Base+0x16ef4>
   2ca4c:	mov	r1, r2
   2ca50:	mov	r0, sl
   2ca54:	mov	r2, r5
   2ca58:	mov	r3, #4
   2ca5c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2ca60:	b	2ce90 <main@@Base+0x16df4>
   2ca64:	bne	2ca78 <main@@Base+0x169dc>
   2ca68:	mov	r2, r1
   2ca6c:	ldrb	r0, [r2, #1]!
   2ca70:	cmp	r0, #32
   2ca74:	bhi	2ca88 <main@@Base+0x169ec>
   2ca78:	mov	r0, sl
   2ca7c:	mov	r2, r5
   2ca80:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2ca84:	mov	r2, r0
   2ca88:	cmp	r2, r5
   2ca8c:	beq	2cac8 <main@@Base+0x16a2c>
   2ca90:	ldrb	r0, [r2]
   2ca94:	cmp	r0, #58	; 0x3a
   2ca98:	bne	2cac8 <main@@Base+0x16a2c>
   2ca9c:	add	r1, r2, #1
   2caa0:	sub	r0, r5, r1
   2caa4:	cmp	r0, #2
   2caa8:	blt	2ce4c <main@@Base+0x16db0>
   2caac:	ldrb	r0, [r1]
   2cab0:	cmp	r0, #32
   2cab4:	bls	2ce3c <main@@Base+0x16da0>
   2cab8:	mov	r2, r1
   2cabc:	cmp	r4, r2
   2cac0:	bne	2ce64 <main@@Base+0x16dc8>
   2cac4:	b	2d004 <main@@Base+0x16f68>
   2cac8:	mov	r1, r2
   2cacc:	mov	r0, sl
   2cad0:	mov	r2, r5
   2cad4:	mov	r3, #4
   2cad8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2cadc:	b	2ce58 <main@@Base+0x16dbc>
   2cae0:	bne	2caf4 <main@@Base+0x16a58>
   2cae4:	mov	r2, r1
   2cae8:	ldrb	r0, [r2, #1]!
   2caec:	cmp	r0, #32
   2caf0:	bhi	2cb04 <main@@Base+0x16a68>
   2caf4:	mov	r0, sl
   2caf8:	mov	r2, r5
   2cafc:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2cb00:	mov	r2, r0
   2cb04:	cmp	r2, r5
   2cb08:	beq	2cb44 <main@@Base+0x16aa8>
   2cb0c:	ldrb	r0, [r2]
   2cb10:	cmp	r0, #58	; 0x3a
   2cb14:	bne	2cb44 <main@@Base+0x16aa8>
   2cb18:	add	r1, r2, #1
   2cb1c:	sub	r0, r5, r1
   2cb20:	cmp	r0, #2
   2cb24:	blt	2cecc <main@@Base+0x16e30>
   2cb28:	ldrb	r0, [r1]
   2cb2c:	cmp	r0, #32
   2cb30:	bls	2cebc <main@@Base+0x16e20>
   2cb34:	mov	r2, r1
   2cb38:	cmp	r4, r2
   2cb3c:	bne	2cee4 <main@@Base+0x16e48>
   2cb40:	b	2d004 <main@@Base+0x16f68>
   2cb44:	mov	r1, r2
   2cb48:	mov	r0, sl
   2cb4c:	mov	r2, r5
   2cb50:	mov	r3, #4
   2cb54:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2cb58:	b	2ced8 <main@@Base+0x16e3c>
   2cb5c:	bne	2cb6c <main@@Base+0x16ad0>
   2cb60:	ldrb	r0, [r1, #2]!
   2cb64:	cmp	r0, #32
   2cb68:	bhi	2cb80 <main@@Base+0x16ae4>
   2cb6c:	mov	r1, r2
   2cb70:	mov	r0, sl
   2cb74:	mov	r2, r5
   2cb78:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2cb7c:	mov	r1, r0
   2cb80:	cmp	r8, r1
   2cb84:	beq	2c7b0 <main@@Base+0x16714>
   2cb88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2cb8c:	mov	r2, #7
   2cb90:	mov	r3, #3
   2cb94:	str	r2, [sp]
   2cb98:	mov	r2, r5
   2cb9c:	str	r0, [sp, #4]
   2cba0:	movw	r0, #53948	; 0xd2bc
   2cba4:	movt	r0, #2
   2cba8:	str	r0, [sp, #8]
   2cbac:	mov	r0, sl
   2cbb0:	bl	39cd4 <flatcc_json_parser_union@@Base>
   2cbb4:	b	2d014 <main@@Base+0x16f78>
   2cbb8:	bne	2cbc8 <main@@Base+0x16b2c>
   2cbbc:	ldrb	r0, [r2, #2]!
   2cbc0:	cmp	r0, #32
   2cbc4:	bhi	2cbd8 <main@@Base+0x16b3c>
   2cbc8:	mov	r0, sl
   2cbcc:	mov	r2, r5
   2cbd0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2cbd4:	mov	r2, r0
   2cbd8:	cmp	r4, r2
   2cbdc:	beq	2d004 <main@@Base+0x16f68>
   2cbe0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2cbe4:	movw	r1, #740	; 0x2e4
   2cbe8:	mov	r3, #3
   2cbec:	movt	r1, #6
   2cbf0:	str	r3, [sp]
   2cbf4:	mov	r3, #1
   2cbf8:	add	r1, r1, #16
   2cbfc:	b	2cfe0 <main@@Base+0x16f44>
   2cc00:	bne	2cc10 <main@@Base+0x16b74>
   2cc04:	ldrb	r0, [r2, #2]!
   2cc08:	cmp	r0, #32
   2cc0c:	bhi	2cc20 <main@@Base+0x16b84>
   2cc10:	mov	r0, sl
   2cc14:	mov	r2, r5
   2cc18:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2cc1c:	mov	r2, r0
   2cc20:	cmp	r6, r2
   2cc24:	beq	2c8ac <main@@Base+0x16810>
   2cc28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2cc2c:	mov	r1, #7
   2cc30:	mov	r3, #3
   2cc34:	str	r1, [sp]
   2cc38:	mov	r1, r2
   2cc3c:	mov	r2, r5
   2cc40:	str	r0, [sp, #4]
   2cc44:	ldr	r0, [sp, #24]
   2cc48:	str	r0, [sp, #8]
   2cc4c:	movw	r0, #53948	; 0xd2bc
   2cc50:	b	2cff0 <main@@Base+0x16f54>
   2cc54:	bne	2cc68 <main@@Base+0x16bcc>
   2cc58:	mov	r2, r1
   2cc5c:	ldrb	r0, [r2, #1]!
   2cc60:	cmp	r0, #32
   2cc64:	bhi	2cc78 <main@@Base+0x16bdc>
   2cc68:	mov	r0, sl
   2cc6c:	mov	r2, r5
   2cc70:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2cc74:	mov	r2, r0
   2cc78:	cmp	r2, r5
   2cc7c:	beq	2ccb8 <main@@Base+0x16c1c>
   2cc80:	ldrb	r0, [r2]
   2cc84:	cmp	r0, #58	; 0x3a
   2cc88:	bne	2ccb8 <main@@Base+0x16c1c>
   2cc8c:	add	r1, r2, #1
   2cc90:	sub	r0, r5, r1
   2cc94:	cmp	r0, #2
   2cc98:	blt	2cf28 <main@@Base+0x16e8c>
   2cc9c:	ldrb	r0, [r1]
   2cca0:	cmp	r0, #32
   2cca4:	bls	2cf18 <main@@Base+0x16e7c>
   2cca8:	mov	r2, r1
   2ccac:	cmp	r4, r2
   2ccb0:	bne	2cf40 <main@@Base+0x16ea4>
   2ccb4:	b	2d004 <main@@Base+0x16f68>
   2ccb8:	mov	r1, r2
   2ccbc:	mov	r0, sl
   2ccc0:	mov	r2, r5
   2ccc4:	mov	r3, #4
   2ccc8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2cccc:	b	2cf34 <main@@Base+0x16e98>
   2ccd0:	bne	2cce4 <main@@Base+0x16c48>
   2ccd4:	mov	r2, r1
   2ccd8:	ldrb	r0, [r2, #1]!
   2ccdc:	cmp	r0, #32
   2cce0:	bhi	2ccf4 <main@@Base+0x16c58>
   2cce4:	mov	r0, sl
   2cce8:	mov	r2, r5
   2ccec:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2ccf0:	mov	r2, r0
   2ccf4:	cmp	r2, r5
   2ccf8:	beq	2cd34 <main@@Base+0x16c98>
   2ccfc:	ldrb	r0, [r2]
   2cd00:	cmp	r0, #58	; 0x3a
   2cd04:	bne	2cd34 <main@@Base+0x16c98>
   2cd08:	add	r1, r2, #1
   2cd0c:	sub	r0, r5, r1
   2cd10:	cmp	r0, #2
   2cd14:	blt	2cf60 <main@@Base+0x16ec4>
   2cd18:	ldrb	r0, [r1]
   2cd1c:	cmp	r0, #32
   2cd20:	bls	2cf50 <main@@Base+0x16eb4>
   2cd24:	mov	r2, r1
   2cd28:	cmp	r9, r2
   2cd2c:	bne	2cf78 <main@@Base+0x16edc>
   2cd30:	b	2cf90 <main@@Base+0x16ef4>
   2cd34:	mov	r1, r2
   2cd38:	mov	r0, sl
   2cd3c:	mov	r2, r5
   2cd40:	mov	r3, #4
   2cd44:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2cd48:	b	2cf6c <main@@Base+0x16ed0>
   2cd4c:	bne	2cd5c <main@@Base+0x16cc0>
   2cd50:	ldrb	r0, [r2, #2]!
   2cd54:	cmp	r0, #32
   2cd58:	bhi	2cd6c <main@@Base+0x16cd0>
   2cd5c:	mov	r0, sl
   2cd60:	mov	r2, r5
   2cd64:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2cd68:	mov	r2, r0
   2cd6c:	cmp	r4, r2
   2cd70:	beq	2d004 <main@@Base+0x16f68>
   2cd74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2cd78:	movw	r1, #740	; 0x2e4
   2cd7c:	mov	r3, #9
   2cd80:	movt	r1, #6
   2cd84:	str	r3, [sp]
   2cd88:	mov	r3, #4
   2cd8c:	add	r1, r1, #48	; 0x30
   2cd90:	stmib	sp, {r0, r1}
   2cd94:	movw	r0, #53948	; 0xd2bc
   2cd98:	mov	r1, r2
   2cd9c:	mov	r2, r5
   2cda0:	movt	r0, #2
   2cda4:	str	r0, [sp, #12]
   2cda8:	movw	r0, #57972	; 0xe274
   2cdac:	movt	r0, #2
   2cdb0:	str	r0, [sp, #16]
   2cdb4:	mov	r0, sl
   2cdb8:	bl	3a964 <flatcc_json_parser_union_type_vector@@Base>
   2cdbc:	b	2d014 <main@@Base+0x16f78>
   2cdc0:	bne	2cdd4 <main@@Base+0x16d38>
   2cdc4:	mov	r2, r1
   2cdc8:	ldrb	r0, [r2, #1]!
   2cdcc:	cmp	r0, #32
   2cdd0:	bhi	2cde4 <main@@Base+0x16d48>
   2cdd4:	mov	r0, sl
   2cdd8:	mov	r2, r5
   2cddc:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2cde0:	mov	r2, r0
   2cde4:	cmp	r2, r5
   2cde8:	beq	2ce24 <main@@Base+0x16d88>
   2cdec:	ldrb	r0, [r2]
   2cdf0:	cmp	r0, #58	; 0x3a
   2cdf4:	bne	2ce24 <main@@Base+0x16d88>
   2cdf8:	add	r1, r2, #1
   2cdfc:	sub	r0, r5, r1
   2ce00:	cmp	r0, #2
   2ce04:	blt	2cfac <main@@Base+0x16f10>
   2ce08:	ldrb	r0, [r1]
   2ce0c:	cmp	r0, #32
   2ce10:	bls	2cf9c <main@@Base+0x16f00>
   2ce14:	mov	r2, r1
   2ce18:	cmp	r4, r2
   2ce1c:	bne	2cfc4 <main@@Base+0x16f28>
   2ce20:	b	2d004 <main@@Base+0x16f68>
   2ce24:	mov	r1, r2
   2ce28:	mov	r0, sl
   2ce2c:	mov	r2, r5
   2ce30:	mov	r3, #4
   2ce34:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2ce38:	b	2cfb8 <main@@Base+0x16f1c>
   2ce3c:	bne	2ce4c <main@@Base+0x16db0>
   2ce40:	ldrb	r0, [r2, #2]!
   2ce44:	cmp	r0, #32
   2ce48:	bhi	2ce5c <main@@Base+0x16dc0>
   2ce4c:	mov	r0, sl
   2ce50:	mov	r2, r5
   2ce54:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2ce58:	mov	r2, r0
   2ce5c:	cmp	r4, r2
   2ce60:	beq	2d004 <main@@Base+0x16f68>
   2ce64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ce68:	mov	r1, #3
   2ce6c:	mov	r3, #1
   2ce70:	b	2cf84 <main@@Base+0x16ee8>
   2ce74:	bne	2ce84 <main@@Base+0x16de8>
   2ce78:	ldrb	r0, [r2, #2]!
   2ce7c:	cmp	r0, #32
   2ce80:	bhi	2ce94 <main@@Base+0x16df8>
   2ce84:	mov	r0, sl
   2ce88:	mov	r2, r5
   2ce8c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2ce90:	mov	r2, r0
   2ce94:	cmp	r9, r2
   2ce98:	beq	2cf90 <main@@Base+0x16ef4>
   2ce9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2cea0:	movw	r1, #740	; 0x2e4
   2cea4:	mov	r3, #5
   2cea8:	movt	r1, #6
   2ceac:	str	r3, [sp]
   2ceb0:	mov	r3, #2
   2ceb4:	add	r1, r1, #80	; 0x50
   2ceb8:	b	2cfe0 <main@@Base+0x16f44>
   2cebc:	bne	2cecc <main@@Base+0x16e30>
   2cec0:	ldrb	r0, [r2, #2]!
   2cec4:	cmp	r0, #32
   2cec8:	bhi	2cedc <main@@Base+0x16e40>
   2cecc:	mov	r0, sl
   2ced0:	mov	r2, r5
   2ced4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2ced8:	mov	r2, r0
   2cedc:	cmp	r4, r2
   2cee0:	beq	2d004 <main@@Base+0x16f68>
   2cee4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2cee8:	mov	r1, #9
   2ceec:	mov	r3, #4
   2cef0:	str	r1, [sp]
   2cef4:	mov	r1, r2
   2cef8:	mov	r2, r5
   2cefc:	str	r0, [sp, #4]
   2cf00:	movw	r0, #53948	; 0xd2bc
   2cf04:	movt	r0, #2
   2cf08:	str	r0, [sp, #8]
   2cf0c:	mov	r0, sl
   2cf10:	bl	3a3f0 <flatcc_json_parser_union_vector@@Base>
   2cf14:	b	2d014 <main@@Base+0x16f78>
   2cf18:	bne	2cf28 <main@@Base+0x16e8c>
   2cf1c:	ldrb	r0, [r2, #2]!
   2cf20:	cmp	r0, #32
   2cf24:	bhi	2cf38 <main@@Base+0x16e9c>
   2cf28:	mov	r0, sl
   2cf2c:	mov	r2, r5
   2cf30:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2cf34:	mov	r2, r0
   2cf38:	cmp	r4, r2
   2cf3c:	beq	2d004 <main@@Base+0x16f68>
   2cf40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2cf44:	mov	r1, #1
   2cf48:	mov	r3, #0
   2cf4c:	b	2cf84 <main@@Base+0x16ee8>
   2cf50:	bne	2cf60 <main@@Base+0x16ec4>
   2cf54:	ldrb	r0, [r2, #2]!
   2cf58:	cmp	r0, #32
   2cf5c:	bhi	2cf70 <main@@Base+0x16ed4>
   2cf60:	mov	r0, sl
   2cf64:	mov	r2, r5
   2cf68:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2cf6c:	mov	r2, r0
   2cf70:	cmp	r9, r2
   2cf74:	beq	2cf90 <main@@Base+0x16ef4>
   2cf78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2cf7c:	mov	r1, #5
   2cf80:	mov	r3, #2
   2cf84:	str	r1, [sp]
   2cf88:	mov	r1, r2
   2cf8c:	b	2cb98 <main@@Base+0x16afc>
   2cf90:	mov	r0, sl
   2cf94:	mov	r1, r9
   2cf98:	b	2d00c <main@@Base+0x16f70>
   2cf9c:	bne	2cfac <main@@Base+0x16f10>
   2cfa0:	ldrb	r0, [r2, #2]!
   2cfa4:	cmp	r0, #32
   2cfa8:	bhi	2cfbc <main@@Base+0x16f20>
   2cfac:	mov	r0, sl
   2cfb0:	mov	r2, r5
   2cfb4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2cfb8:	mov	r2, r0
   2cfbc:	cmp	r4, r2
   2cfc0:	beq	2d004 <main@@Base+0x16f68>
   2cfc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2cfc8:	movw	r1, #740	; 0x2e4
   2cfcc:	mov	r3, #1
   2cfd0:	movt	r1, #6
   2cfd4:	str	r3, [sp]
   2cfd8:	mov	r3, #0
   2cfdc:	add	r1, r1, #64	; 0x40
   2cfe0:	stmib	sp, {r0, r1}
   2cfe4:	movw	r0, #53948	; 0xd2bc
   2cfe8:	mov	r1, r2
   2cfec:	mov	r2, r5
   2cff0:	movt	r0, #2
   2cff4:	str	r0, [sp, #12]
   2cff8:	mov	r0, sl
   2cffc:	bl	39e2c <flatcc_json_parser_union_type@@Base>
   2d000:	b	2d014 <main@@Base+0x16f78>
   2d004:	mov	r0, sl
   2d008:	mov	r1, r4
   2d00c:	mov	r2, r5
   2d010:	bl	376d0 <flatcc_json_parser_unmatched_symbol@@Base>
   2d014:	ldr	r4, [fp, #-36]	; 0xffffffdc
   2d018:	mov	r2, r0
   2d01c:	sub	r0, r5, r0
   2d020:	cmp	r0, #2
   2d024:	blt	2d098 <main@@Base+0x16ffc>
   2d028:	ldrb	r0, [r2]
   2d02c:	cmp	r0, #32
   2d030:	bls	2d084 <main@@Base+0x16fe8>
   2d034:	mov	r3, r2
   2d038:	cmp	r3, r5
   2d03c:	beq	2d0ec <main@@Base+0x17050>
   2d040:	ldrb	r0, [r3]
   2d044:	cmp	r0, #44	; 0x2c
   2d048:	bne	2d100 <main@@Base+0x17064>
   2d04c:	add	r1, r3, #1
   2d050:	sub	r0, r5, r1
   2d054:	cmp	r0, #2
   2d058:	blt	2d0c8 <main@@Base+0x1702c>
   2d05c:	ldrb	r0, [r1]
   2d060:	cmp	r0, #32
   2d064:	bls	2d0b8 <main@@Base+0x1701c>
   2d068:	mov	r3, r1
   2d06c:	cmp	r3, r5
   2d070:	beq	2d0e0 <main@@Base+0x17044>
   2d074:	ldrb	r0, [r3]
   2d078:	cmp	r0, #125	; 0x7d
   2d07c:	bne	2bc24 <main@@Base+0x15b88>
   2d080:	b	2d108 <main@@Base+0x1706c>
   2d084:	bne	2d098 <main@@Base+0x16ffc>
   2d088:	mov	r3, r2
   2d08c:	ldrb	r0, [r3, #1]!
   2d090:	cmp	r0, #32
   2d094:	bhi	2d0ac <main@@Base+0x17010>
   2d098:	mov	r1, r2
   2d09c:	mov	r0, sl
   2d0a0:	mov	r2, r5
   2d0a4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2d0a8:	mov	r3, r0
   2d0ac:	cmp	r3, r5
   2d0b0:	bne	2d040 <main@@Base+0x16fa4>
   2d0b4:	b	2d0ec <main@@Base+0x17050>
   2d0b8:	bne	2d0c8 <main@@Base+0x1702c>
   2d0bc:	ldrb	r0, [r3, #2]!
   2d0c0:	cmp	r0, #32
   2d0c4:	bhi	2d0d8 <main@@Base+0x1703c>
   2d0c8:	mov	r0, sl
   2d0cc:	mov	r2, r5
   2d0d0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2d0d4:	mov	r3, r0
   2d0d8:	cmp	r3, r5
   2d0dc:	bne	2d074 <main@@Base+0x16fd8>
   2d0e0:	mov	r0, sl
   2d0e4:	mov	r1, r5
   2d0e8:	b	2d140 <main@@Base+0x170a4>
   2d0ec:	mov	r7, r5
   2d0f0:	ldr	r0, [sl, #24]
   2d0f4:	cmp	r0, #0
   2d0f8:	bne	2baa4 <main@@Base+0x15a08>
   2d0fc:	b	2bb54 <main@@Base+0x15ab8>
   2d100:	cmp	r0, #125	; 0x7d
   2d104:	bne	2d138 <main@@Base+0x1709c>
   2d108:	add	r1, r3, #1
   2d10c:	sub	r0, r5, r1
   2d110:	cmp	r0, #2
   2d114:	blt	2d160 <main@@Base+0x170c4>
   2d118:	ldrb	r0, [r1]
   2d11c:	cmp	r0, #32
   2d120:	bls	2d14c <main@@Base+0x170b0>
   2d124:	mov	r7, r1
   2d128:	ldr	r0, [sl, #24]
   2d12c:	cmp	r0, #0
   2d130:	bne	2baa4 <main@@Base+0x15a08>
   2d134:	b	2bb54 <main@@Base+0x15ab8>
   2d138:	mov	r0, sl
   2d13c:	mov	r1, r3
   2d140:	mov	r2, r5
   2d144:	mov	r3, #10
   2d148:	b	2bb40 <main@@Base+0x15aa4>
   2d14c:	bne	2d160 <main@@Base+0x170c4>
   2d150:	ldrb	r0, [r3, #2]!
   2d154:	cmp	r0, #32
   2d158:	mov	r7, r3
   2d15c:	bhi	2bb48 <main@@Base+0x15aac>
   2d160:	mov	r0, sl
   2d164:	mov	r2, r5
   2d168:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2d16c:	b	2bb44 <main@@Base+0x15aa8>
   2d170:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d174:	add	fp, sp, #28
   2d178:	push	{r3}		; (str r3, [sp, #-4]!)
   2d17c:	sub	r7, r2, r1
   2d180:	cmp	r7, #8
   2d184:	movcs	r7, #8
   2d188:	and	r7, r7, #15
   2d18c:	sub	r5, r7, #1
   2d190:	cmp	r5, #7
   2d194:	bhi	2d278 <main@@Base+0x171dc>
   2d198:	add	lr, pc, #32
   2d19c:	mov	ip, #0
   2d1a0:	mov	r3, #0
   2d1a4:	mov	r8, #0
   2d1a8:	mov	r9, #0
   2d1ac:	mov	sl, #0
   2d1b0:	mov	r7, #0
   2d1b4:	mov	r4, #0
   2d1b8:	mov	r6, #0
   2d1bc:	ldr	pc, [lr, r5, lsl #2]
   2d1c0:	andeq	sp, r2, r4, lsr #4
   2d1c4:	andeq	sp, r2, ip, lsl r2
   2d1c8:	andeq	sp, r2, r4, lsl r2
   2d1cc:	andeq	sp, r2, ip, lsl #4
   2d1d0:	andeq	sp, r2, r0, lsl #4
   2d1d4:	strdeq	sp, [r2], -r4
   2d1d8:	andeq	sp, r2, r4, ror #3
   2d1dc:	andeq	sp, r2, r0, ror #3
   2d1e0:	ldrb	r3, [r1, #7]
   2d1e4:	ldrb	r7, [r1, #6]
   2d1e8:	mov	r8, ip
   2d1ec:	orr	r3, r3, r7, lsl #8
   2d1f0:	mov	ip, r3
   2d1f4:	ldrb	r3, [r1, #5]
   2d1f8:	mov	r9, r8
   2d1fc:	orr	ip, ip, r3, lsl #16
   2d200:	ldrb	r3, [r1, #4]
   2d204:	mov	sl, r9
   2d208:	orr	ip, ip, r3, lsl #24
   2d20c:	ldrb	r3, [r1, #3]
   2d210:	orr	r7, r3, sl
   2d214:	ldrb	r3, [r1, #2]
   2d218:	orr	r4, r7, r3, lsl #8
   2d21c:	ldrb	r3, [r1, #1]
   2d220:	orr	r6, r4, r3, lsl #16
   2d224:	ldrb	r7, [r1]
   2d228:	movw	r3, #29797	; 0x7465
   2d22c:	movt	r3, #24931	; 0x6163
   2d230:	eor	r3, ip, r3
   2d234:	orr	r7, r6, r7, lsl #24
   2d238:	movw	r6, #24946	; 0x6172
   2d23c:	movt	r6, #17256	; 0x4368
   2d240:	eor	r7, r7, r6
   2d244:	orrs	r3, r3, r7
   2d248:	bne	2d278 <main@@Base+0x171dc>
   2d24c:	add	lr, r1, #8
   2d250:	mov	r6, #-268435456	; 0xf0000000
   2d254:	sub	r7, r2, lr
   2d258:	cmp	r7, #8
   2d25c:	mov	r3, r7
   2d260:	movcs	r3, #8
   2d264:	add	r3, r6, r3, lsl #28
   2d268:	asr	r3, r3, #28
   2d26c:	cmp	r3, #0
   2d270:	cmpge	r7, #2
   2d274:	bge	2d284 <main@@Base+0x171e8>
   2d278:	mov	r0, r1
   2d27c:	sub	sp, fp, #28
   2d280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d284:	ldrb	r3, [lr]
   2d288:	cmp	r3, #114	; 0x72
   2d28c:	bne	2d278 <main@@Base+0x171dc>
   2d290:	ldrb	r3, [r1, #9]
   2d294:	mov	ip, lr
   2d298:	cmp	r3, #46	; 0x2e
   2d29c:	addeq	ip, r1, #10
   2d2a0:	cmp	ip, lr
   2d2a4:	beq	2d278 <main@@Base+0x171dc>
   2d2a8:	ldr	r3, [sp]
   2d2ac:	mov	r1, ip
   2d2b0:	sub	sp, fp, #28
   2d2b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d2b8:	b	27370 <main@@Base+0x112d4>
   2d2bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d2c0:	add	fp, sp, #28
   2d2c4:	sub	sp, sp, #44	; 0x2c
   2d2c8:	ldr	r7, [fp, #8]
   2d2cc:	mov	r9, r0
   2d2d0:	mov	r0, #0
   2d2d4:	mov	r8, r2
   2d2d8:	mov	r4, r1
   2d2dc:	cmp	r3, #11
   2d2e0:	str	r0, [r7]
   2d2e4:	bhi	2d338 <main@@Base+0x1729c>
   2d2e8:	add	r0, pc, #0
   2d2ec:	ldr	pc, [r0, r3, lsl #2]
   2d2f0:	andeq	sp, r2, r0, lsl #7
   2d2f4:	andeq	sp, r2, r8, asr r3
   2d2f8:			; <UNDEFINED> instruction: 0x0002d3bc
   2d2fc:	andeq	sp, r2, r8, asr r3
   2d300:	andeq	sp, r2, r8, asr r3
   2d304:	andeq	sp, r2, r8, asr r3
   2d308:	andeq	sp, r2, r8, asr r3
   2d30c:	andeq	sp, r2, r8, asr r3
   2d310:	andeq	sp, r2, ip, lsl r4
   2d314:	andeq	sp, r2, r0, lsr #6
   2d318:	andeq	sp, r2, r0, lsr #6
   2d31c:	andeq	sp, r2, r0, asr #6
   2d320:	mov	r0, r9
   2d324:	mov	r1, r4
   2d328:	mov	r2, r8
   2d32c:	mov	r3, r7
   2d330:	bl	2e29c <main@@Base+0x18200>
   2d334:	b	2d520 <main@@Base+0x17484>
   2d338:	cmp	r3, #255	; 0xff
   2d33c:	bne	2d358 <main@@Base+0x172bc>
   2d340:	mov	r0, r9
   2d344:	mov	r1, r4
   2d348:	mov	r2, r8
   2d34c:	mov	r3, r7
   2d350:	bl	398b4 <flatcc_json_parser_build_string@@Base>
   2d354:	b	2d520 <main@@Base+0x17484>
   2d358:	ldrb	r0, [r9, #8]
   2d35c:	tst	r0, #1
   2d360:	bne	2d484 <main@@Base+0x173e8>
   2d364:	mov	r0, r9
   2d368:	mov	r1, r4
   2d36c:	mov	r2, r8
   2d370:	mov	r3, #15
   2d374:	sub	sp, fp, #28
   2d378:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d37c:	b	36da0 <flatcc_json_parser_set_error@@Base>
   2d380:	sub	r0, r8, r4
   2d384:	cmp	r0, #4
   2d388:	blt	2d3a0 <main@@Base+0x17304>
   2d38c:	ldr	r0, [r4]
   2d390:	movw	r1, #30062	; 0x756e
   2d394:	movt	r1, #27756	; 0x6c6c
   2d398:	cmp	r0, r1
   2d39c:	beq	2d56c <main@@Base+0x174d0>
   2d3a0:	mov	r0, r9
   2d3a4:	mov	r1, r4
   2d3a8:	mov	r2, r8
   2d3ac:	mov	r3, #26
   2d3b0:	sub	sp, fp, #28
   2d3b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d3b8:	b	36da0 <flatcc_json_parser_set_error@@Base>
   2d3bc:	mov	r0, #0
   2d3c0:	mov	r1, #1
   2d3c4:	str	r0, [r7]
   2d3c8:	ldr	r0, [r9]
   2d3cc:	bl	32294 <flatcc_builder_start_table@@Base>
   2d3d0:	cmp	r0, #0
   2d3d4:	bne	2d50c <main@@Base+0x17470>
   2d3d8:	cmp	r4, r8
   2d3dc:	beq	2d4e8 <main@@Base+0x1744c>
   2d3e0:	ldrb	r0, [r4]
   2d3e4:	cmp	r0, #123	; 0x7b
   2d3e8:	bne	2d4e8 <main@@Base+0x1744c>
   2d3ec:	add	r1, r4, #1
   2d3f0:	sub	r0, r8, r1
   2d3f4:	cmp	r0, #2
   2d3f8:	blt	2db0c <main@@Base+0x17a70>
   2d3fc:	ldrb	r0, [r1]
   2d400:	cmp	r0, #32
   2d404:	bls	2dafc <main@@Base+0x17a60>
   2d408:	mov	r4, r1
   2d40c:	cmp	r4, r8
   2d410:	mov	r2, r8
   2d414:	bne	2db28 <main@@Base+0x17a8c>
   2d418:	b	2db68 <main@@Base+0x17acc>
   2d41c:	mov	r0, #0
   2d420:	mov	r1, #2
   2d424:	mov	r2, #2
   2d428:	str	r0, [r7]
   2d42c:	ldr	r0, [r9]
   2d430:	bl	30fbc <flatcc_builder_start_struct@@Base>
   2d434:	cmp	r0, #0
   2d438:	beq	2d4dc <main@@Base+0x17440>
   2d43c:	cmp	r4, r8
   2d440:	beq	2d49c <main@@Base+0x17400>
   2d444:	ldrb	r1, [r4]
   2d448:	cmp	r1, #123	; 0x7b
   2d44c:	bne	2d49c <main@@Base+0x17400>
   2d450:	add	r1, r4, #1
   2d454:	str	r0, [sp, #12]
   2d458:	sub	r0, r8, r1
   2d45c:	cmp	r0, #2
   2d460:	blt	2d58c <main@@Base+0x174f0>
   2d464:	ldrb	r0, [r1]
   2d468:	cmp	r0, #32
   2d46c:	bls	2d57c <main@@Base+0x174e0>
   2d470:	mov	r4, r1
   2d474:	cmp	r4, r8
   2d478:	mov	r2, r8
   2d47c:	bne	2d5a8 <main@@Base+0x1750c>
   2d480:	b	2d5e8 <main@@Base+0x1754c>
   2d484:	mov	r0, r9
   2d488:	mov	r1, r4
   2d48c:	mov	r2, r8
   2d490:	sub	sp, fp, #28
   2d494:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d498:	b	37960 <flatcc_json_parser_generic_json@@Base>
   2d49c:	mov	r0, r9
   2d4a0:	mov	r1, r4
   2d4a4:	mov	r2, r8
   2d4a8:	mov	r3, #21
   2d4ac:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2d4b0:	mov	r4, r0
   2d4b4:	cmp	r4, r8
   2d4b8:	mov	r1, r8
   2d4bc:	beq	2d4e0 <main@@Base+0x17444>
   2d4c0:	ldr	r0, [r9]
   2d4c4:	bl	310b0 <flatcc_builder_end_struct@@Base>
   2d4c8:	cmp	r0, #0
   2d4cc:	mov	r1, r4
   2d4d0:	str	r0, [r7]
   2d4d4:	bne	2d524 <main@@Base+0x17488>
   2d4d8:	b	2d4e0 <main@@Base+0x17444>
   2d4dc:	mov	r1, r4
   2d4e0:	mov	r0, r9
   2d4e4:	b	2d514 <main@@Base+0x17478>
   2d4e8:	mov	r0, r9
   2d4ec:	mov	r1, r4
   2d4f0:	mov	r2, r8
   2d4f4:	mov	r3, #21
   2d4f8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2d4fc:	mov	r4, r0
   2d500:	ldr	r0, [r9, #24]
   2d504:	cmp	r0, #0
   2d508:	beq	2e200 <main@@Base+0x18164>
   2d50c:	mov	r0, r9
   2d510:	mov	r1, r4
   2d514:	mov	r2, r8
   2d518:	mov	r3, #33	; 0x21
   2d51c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2d520:	mov	r4, r0
   2d524:	ldr	r0, [r9, #24]
   2d528:	cmp	r0, #0
   2d52c:	bne	2d53c <main@@Base+0x174a0>
   2d530:	ldr	r0, [r7]
   2d534:	cmp	r0, #0
   2d538:	beq	2d548 <main@@Base+0x174ac>
   2d53c:	mov	r0, r4
   2d540:	sub	sp, fp, #28
   2d544:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d548:	mov	r0, r9
   2d54c:	mov	r1, r4
   2d550:	mov	r2, r8
   2d554:	mov	r3, #33	; 0x21
   2d558:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2d55c:	mov	r4, r0
   2d560:	mov	r0, r4
   2d564:	sub	sp, fp, #28
   2d568:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d56c:	add	r4, r4, #4
   2d570:	mov	r0, r4
   2d574:	sub	sp, fp, #28
   2d578:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d57c:	bne	2d58c <main@@Base+0x174f0>
   2d580:	ldrb	r0, [r4, #2]!
   2d584:	cmp	r0, #32
   2d588:	bhi	2d59c <main@@Base+0x17500>
   2d58c:	mov	r0, r9
   2d590:	mov	r2, r8
   2d594:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2d598:	mov	r4, r0
   2d59c:	cmp	r4, r8
   2d5a0:	mov	r2, r8
   2d5a4:	beq	2d5e8 <main@@Base+0x1754c>
   2d5a8:	ldrb	r0, [r4]
   2d5ac:	cmp	r0, #125	; 0x7d
   2d5b0:	bne	2d5e4 <main@@Base+0x17548>
   2d5b4:	add	r1, r4, #1
   2d5b8:	sub	r0, r8, r1
   2d5bc:	cmp	r0, #2
   2d5c0:	blt	2dba8 <main@@Base+0x17b0c>
   2d5c4:	ldrb	r0, [r1]
   2d5c8:	cmp	r0, #32
   2d5cc:	bhi	2dadc <main@@Base+0x17a40>
   2d5d0:	bne	2dba8 <main@@Base+0x17b0c>
   2d5d4:	ldrb	r0, [r4, #2]!
   2d5d8:	cmp	r0, #32
   2d5dc:	bhi	2d4b4 <main@@Base+0x17418>
   2d5e0:	b	2dba8 <main@@Base+0x17b0c>
   2d5e4:	mov	r2, r4
   2d5e8:	movw	r0, #508	; 0x1fc
   2d5ec:	movt	r0, #6
   2d5f0:	add	r0, r0, #108	; 0x6c
   2d5f4:	str	r0, [sp, #8]
   2d5f8:	str	r9, [sp, #20]
   2d5fc:	b	2d788 <main@@Base+0x176ec>
   2d600:	bne	2d610 <main@@Base+0x17574>
   2d604:	ldrb	r0, [r2, #2]!
   2d608:	cmp	r0, #32
   2d60c:	bhi	2d620 <main@@Base+0x17584>
   2d610:	mov	r0, r9
   2d614:	mov	r2, r8
   2d618:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2d61c:	mov	r2, r0
   2d620:	cmp	r2, r8
   2d624:	bne	2da74 <main@@Base+0x179d8>
   2d628:	b	2daf0 <main@@Base+0x17a54>
   2d62c:	mov	r0, r9
   2d630:	mov	r1, r5
   2d634:	mov	r2, r8
   2d638:	mov	r3, #4
   2d63c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2d640:	b	2d660 <main@@Base+0x175c4>
   2d644:	bne	2d654 <main@@Base+0x175b8>
   2d648:	ldrb	r0, [r5, #2]!
   2d64c:	cmp	r0, #32
   2d650:	bhi	2d664 <main@@Base+0x175c8>
   2d654:	mov	r0, r9
   2d658:	mov	r2, r8
   2d65c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2d660:	mov	r5, r0
   2d664:	cmp	r4, r5
   2d668:	beq	2da08 <main@@Base+0x1796c>
   2d66c:	mov	r4, #0
   2d670:	cmp	r5, r8
   2d674:	str	r4, [sp, #36]	; 0x24
   2d678:	str	r4, [sp, #32]
   2d67c:	strh	r4, [sp, #24]
   2d680:	str	r4, [sp, #28]
   2d684:	beq	2d6dc <main@@Base+0x17640>
   2d688:	add	r0, sp, #32
   2d68c:	mov	r1, r5
   2d690:	mov	r2, r8
   2d694:	add	r3, sp, #28
   2d698:	str	r0, [sp]
   2d69c:	mov	r0, r9
   2d6a0:	bl	392f4 <flatcc_json_parser_integer@@Base>
   2d6a4:	cmp	r0, r5
   2d6a8:	beq	2d6ec <main@@Base+0x17650>
   2d6ac:	mov	r1, r0
   2d6b0:	ldr	r0, [sp, #28]
   2d6b4:	cmp	r0, #0
   2d6b8:	beq	2d6fc <main@@Base+0x17660>
   2d6bc:	mov	r0, r9
   2d6c0:	mov	r2, r8
   2d6c4:	mov	r3, #8
   2d6c8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2d6cc:	mov	r1, r0
   2d6d0:	cmp	r5, r1
   2d6d4:	bne	2d770 <main@@Base+0x176d4>
   2d6d8:	b	2d740 <main@@Base+0x176a4>
   2d6dc:	mov	r1, r8
   2d6e0:	cmp	r5, r1
   2d6e4:	bne	2d770 <main@@Base+0x176d4>
   2d6e8:	b	2d740 <main@@Base+0x176a4>
   2d6ec:	mov	r1, r5
   2d6f0:	cmp	r5, r1
   2d6f4:	bne	2d770 <main@@Base+0x176d4>
   2d6f8:	b	2d740 <main@@Base+0x176a4>
   2d6fc:	ldr	r0, [sp, #32]
   2d700:	ldr	r2, [sp, #36]	; 0x24
   2d704:	subs	r3, r0, #65536	; 0x10000
   2d708:	sbcs	r2, r2, #0
   2d70c:	bcc	2d730 <main@@Base+0x17694>
   2d710:	mov	r0, r9
   2d714:	mov	r2, r8
   2d718:	mov	r3, #7
   2d71c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2d720:	mov	r1, r0
   2d724:	cmp	r5, r1
   2d728:	bne	2d770 <main@@Base+0x176d4>
   2d72c:	b	2d740 <main@@Base+0x176a4>
   2d730:	mov	r4, r0
   2d734:	strh	r0, [sp, #24]
   2d738:	cmp	r5, r1
   2d73c:	bne	2d770 <main@@Base+0x176d4>
   2d740:	add	r0, sp, #24
   2d744:	mov	r1, r5
   2d748:	mov	r2, r8
   2d74c:	str	r0, [sp]
   2d750:	mov	r0, r9
   2d754:	ldr	r3, [sp, #8]
   2d758:	bl	2e944 <main@@Base+0x188a8>
   2d75c:	mov	r1, r0
   2d760:	cmp	r0, r5
   2d764:	cmpne	r1, r8
   2d768:	beq	2e25c <main@@Base+0x181c0>
   2d76c:	ldrh	r4, [sp, #24]
   2d770:	ldr	r0, [sp, #12]
   2d774:	strh	r4, [r0]
   2d778:	sub	r0, r8, r1
   2d77c:	cmp	r0, #2
   2d780:	bge	2da28 <main@@Base+0x1798c>
   2d784:	b	2da98 <main@@Base+0x179fc>
   2d788:	cmp	r2, r8
   2d78c:	mov	r1, r8
   2d790:	beq	2d7dc <main@@Base+0x17740>
   2d794:	ldrb	r0, [r2]
   2d798:	cmp	r0, #46	; 0x2e
   2d79c:	beq	2d7b4 <main@@Base+0x17718>
   2d7a0:	cmp	r0, #34	; 0x22
   2d7a4:	bne	2d7d0 <main@@Base+0x17734>
   2d7a8:	mov	r0, #0
   2d7ac:	add	r1, r2, #1
   2d7b0:	b	2d7d8 <main@@Base+0x1773c>
   2d7b4:	mov	r1, r2
   2d7b8:	mov	r0, r9
   2d7bc:	mov	r2, r8
   2d7c0:	mov	r3, #5
   2d7c4:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2d7c8:	mov	r1, r0
   2d7cc:	b	2d7dc <main@@Base+0x17740>
   2d7d0:	mov	r0, #1
   2d7d4:	mov	r1, r2
   2d7d8:	str	r0, [r9, #12]
   2d7dc:	sub	r0, r8, r1
   2d7e0:	mov	r2, #8
   2d7e4:	cmp	r0, #8
   2d7e8:	movcs	r0, r2
   2d7ec:	and	r0, r0, #15
   2d7f0:	sub	r4, r0, #1
   2d7f4:	cmp	r4, #7
   2d7f8:	bhi	2d950 <main@@Base+0x178b4>
   2d7fc:	add	r0, pc, #36	; 0x24
   2d800:	mov	r9, r7
   2d804:	mov	sl, #0
   2d808:	mov	ip, #0
   2d80c:	mov	lr, #0
   2d810:	mov	r6, #0
   2d814:	mov	r3, #0
   2d818:	mov	r5, #0
   2d81c:	mov	r2, #0
   2d820:	mov	r7, #0
   2d824:	ldr	pc, [r0, r4, lsl #2]
   2d828:	andeq	sp, r2, ip, lsl #17
   2d82c:	andeq	sp, r2, r4, lsl #17
   2d830:	andeq	sp, r2, ip, ror r8
   2d834:	andeq	sp, r2, r4, ror r8
   2d838:	andeq	sp, r2, r8, ror #16
   2d83c:	andeq	sp, r2, ip, asr r8
   2d840:	andeq	sp, r2, ip, asr #16
   2d844:	andeq	sp, r2, r8, asr #16
   2d848:	ldrb	ip, [r1, #7]
   2d84c:	ldrb	r0, [r1, #6]
   2d850:	mov	lr, sl
   2d854:	orr	r0, ip, r0, lsl #8
   2d858:	mov	sl, r0
   2d85c:	ldrb	r0, [r1, #5]
   2d860:	mov	r6, lr
   2d864:	orr	sl, sl, r0, lsl #16
   2d868:	ldrb	r0, [r1, #4]
   2d86c:	mov	r3, r6
   2d870:	orr	sl, sl, r0, lsl #24
   2d874:	ldrb	r0, [r1, #3]
   2d878:	orr	r5, r0, r3
   2d87c:	ldrb	r0, [r1, #2]
   2d880:	orr	r2, r5, r0, lsl #8
   2d884:	ldrb	r0, [r1, #1]
   2d888:	orr	r7, r2, r0, lsl #16
   2d88c:	ldrb	r2, [r1]
   2d890:	movw	r0, #25966	; 0x656e
   2d894:	movw	r3, #26994	; 0x6972
   2d898:	movt	r0, #24428	; 0x5f6c
   2d89c:	movt	r3, #26721	; 0x6861
   2d8a0:	eor	r0, sl, r0
   2d8a4:	orr	r2, r7, r2, lsl #24
   2d8a8:	mov	r7, r9
   2d8ac:	ldr	r9, [sp, #20]
   2d8b0:	eor	r2, r2, r3
   2d8b4:	orrs	r0, r0, r2
   2d8b8:	bne	2d950 <main@@Base+0x178b4>
   2d8bc:	add	r4, r1, #8
   2d8c0:	mov	r2, #8
   2d8c4:	sub	r0, r8, r4
   2d8c8:	cmp	r0, #8
   2d8cc:	movcc	r2, r0
   2d8d0:	and	r3, r2, #15
   2d8d4:	sub	r2, r3, #3
   2d8d8:	cmp	r2, #6
   2d8dc:	bcs	2d958 <main@@Base+0x178bc>
   2d8e0:	ldrb	r2, [r1, #10]
   2d8e4:	lsl	r2, r2, #8
   2d8e8:	ldrb	r3, [r1, #9]
   2d8ec:	orr	r2, r2, r3, lsl #16
   2d8f0:	ldrb	r3, [r4]
   2d8f4:	bic	r2, r2, #255	; 0xff
   2d8f8:	orr	r2, r2, r3, lsl #24
   2d8fc:	movw	r3, #26624	; 0x6800
   2d900:	movt	r3, #26484	; 0x6774
   2d904:	teq	r2, r3
   2d908:	bne	2da08 <main@@Base+0x1796c>
   2d90c:	cmp	r0, #4
   2d910:	blt	2da08 <main@@Base+0x1796c>
   2d914:	mov	r2, r1
   2d918:	ldr	r3, [r9, #12]
   2d91c:	ldrb	r0, [r2, #11]!
   2d920:	cmp	r3, #0
   2d924:	beq	2d970 <main@@Base+0x178d4>
   2d928:	cmp	r0, #33	; 0x21
   2d92c:	bcc	2d938 <main@@Base+0x1789c>
   2d930:	cmp	r0, #58	; 0x3a
   2d934:	bne	2da08 <main@@Base+0x1796c>
   2d938:	mov	r0, #0
   2d93c:	str	r0, [r9, #12]
   2d940:	sub	r0, r8, r2
   2d944:	cmp	r0, #2
   2d948:	bge	2d988 <main@@Base+0x178ec>
   2d94c:	b	2d9b8 <main@@Base+0x1791c>
   2d950:	mov	r0, r9
   2d954:	b	2da10 <main@@Base+0x17974>
   2d958:	mov	r2, #0
   2d95c:	cmp	r3, #1
   2d960:	beq	2d8f0 <main@@Base+0x17854>
   2d964:	cmp	r3, #2
   2d968:	beq	2d8e8 <main@@Base+0x1784c>
   2d96c:	b	2da08 <main@@Base+0x1796c>
   2d970:	cmp	r0, #34	; 0x22
   2d974:	bne	2da08 <main@@Base+0x1796c>
   2d978:	add	r2, r1, #12
   2d97c:	sub	r0, r8, r2
   2d980:	cmp	r0, #2
   2d984:	blt	2d9b8 <main@@Base+0x1791c>
   2d988:	ldrb	r0, [r2]
   2d98c:	cmp	r0, #32
   2d990:	bls	2d9a4 <main@@Base+0x17908>
   2d994:	mov	r5, r2
   2d998:	cmp	r5, r8
   2d99c:	bne	2d9d4 <main@@Base+0x17938>
   2d9a0:	b	2d62c <main@@Base+0x17590>
   2d9a4:	bne	2d9b8 <main@@Base+0x1791c>
   2d9a8:	mov	r5, r2
   2d9ac:	ldrb	r0, [r5, #1]!
   2d9b0:	cmp	r0, #32
   2d9b4:	bhi	2d9cc <main@@Base+0x17930>
   2d9b8:	mov	r1, r2
   2d9bc:	mov	r0, r9
   2d9c0:	mov	r2, r8
   2d9c4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2d9c8:	mov	r5, r0
   2d9cc:	cmp	r5, r8
   2d9d0:	beq	2d62c <main@@Base+0x17590>
   2d9d4:	ldrb	r0, [r5]
   2d9d8:	cmp	r0, #58	; 0x3a
   2d9dc:	bne	2d62c <main@@Base+0x17590>
   2d9e0:	add	r1, r5, #1
   2d9e4:	sub	r0, r8, r1
   2d9e8:	cmp	r0, #2
   2d9ec:	blt	2d654 <main@@Base+0x175b8>
   2d9f0:	ldrb	r0, [r1]
   2d9f4:	cmp	r0, #32
   2d9f8:	bls	2d644 <main@@Base+0x175a8>
   2d9fc:	mov	r5, r1
   2da00:	cmp	r4, r5
   2da04:	bne	2d66c <main@@Base+0x175d0>
   2da08:	mov	r0, r9
   2da0c:	mov	r1, r4
   2da10:	mov	r2, r8
   2da14:	bl	376d0 <flatcc_json_parser_unmatched_symbol@@Base>
   2da18:	mov	r1, r0
   2da1c:	sub	r0, r8, r1
   2da20:	cmp	r0, #2
   2da24:	blt	2da98 <main@@Base+0x179fc>
   2da28:	ldrb	r0, [r1]
   2da2c:	cmp	r0, #32
   2da30:	bls	2da84 <main@@Base+0x179e8>
   2da34:	mov	r2, r1
   2da38:	cmp	r2, r8
   2da3c:	beq	2dab0 <main@@Base+0x17a14>
   2da40:	ldrb	r0, [r2]
   2da44:	cmp	r0, #44	; 0x2c
   2da48:	bne	2dab8 <main@@Base+0x17a1c>
   2da4c:	add	r1, r2, #1
   2da50:	sub	r0, r8, r1
   2da54:	cmp	r0, #2
   2da58:	blt	2d610 <main@@Base+0x17574>
   2da5c:	ldrb	r0, [r1]
   2da60:	cmp	r0, #32
   2da64:	bls	2d600 <main@@Base+0x17564>
   2da68:	mov	r2, r1
   2da6c:	cmp	r2, r8
   2da70:	beq	2daf0 <main@@Base+0x17a54>
   2da74:	ldrb	r0, [r2]
   2da78:	cmp	r0, #125	; 0x7d
   2da7c:	bne	2d788 <main@@Base+0x176ec>
   2da80:	b	2dac0 <main@@Base+0x17a24>
   2da84:	bne	2da98 <main@@Base+0x179fc>
   2da88:	mov	r2, r1
   2da8c:	ldrb	r0, [r2, #1]!
   2da90:	cmp	r0, #32
   2da94:	bhi	2daa8 <main@@Base+0x17a0c>
   2da98:	mov	r0, r9
   2da9c:	mov	r2, r8
   2daa0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2daa4:	mov	r2, r0
   2daa8:	cmp	r2, r8
   2daac:	bne	2da40 <main@@Base+0x179a4>
   2dab0:	mov	r1, r8
   2dab4:	b	2d4e0 <main@@Base+0x17444>
   2dab8:	cmp	r0, #125	; 0x7d
   2dabc:	bne	2db80 <main@@Base+0x17ae4>
   2dac0:	add	r1, r2, #1
   2dac4:	sub	r0, r8, r1
   2dac8:	cmp	r0, #2
   2dacc:	blt	2dba8 <main@@Base+0x17b0c>
   2dad0:	ldrb	r0, [r1]
   2dad4:	cmp	r0, #32
   2dad8:	bls	2db94 <main@@Base+0x17af8>
   2dadc:	mov	r4, r1
   2dae0:	cmp	r4, r8
   2dae4:	mov	r1, r8
   2dae8:	bne	2d4c0 <main@@Base+0x17424>
   2daec:	b	2d4e0 <main@@Base+0x17444>
   2daf0:	mov	r0, r9
   2daf4:	mov	r1, r8
   2daf8:	b	2db88 <main@@Base+0x17aec>
   2dafc:	bne	2db0c <main@@Base+0x17a70>
   2db00:	ldrb	r0, [r4, #2]!
   2db04:	cmp	r0, #32
   2db08:	bhi	2db1c <main@@Base+0x17a80>
   2db0c:	mov	r0, r9
   2db10:	mov	r2, r8
   2db14:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2db18:	mov	r4, r0
   2db1c:	cmp	r4, r8
   2db20:	mov	r2, r8
   2db24:	beq	2db68 <main@@Base+0x17acc>
   2db28:	ldrb	r0, [r4]
   2db2c:	cmp	r0, #125	; 0x7d
   2db30:	bne	2db64 <main@@Base+0x17ac8>
   2db34:	add	r1, r4, #1
   2db38:	sub	r0, r8, r1
   2db3c:	cmp	r0, #2
   2db40:	blt	2e24c <main@@Base+0x181b0>
   2db44:	ldrb	r0, [r1]
   2db48:	cmp	r0, #32
   2db4c:	bhi	2e1f0 <main@@Base+0x18154>
   2db50:	bne	2e24c <main@@Base+0x181b0>
   2db54:	ldrb	r0, [r4, #2]!
   2db58:	cmp	r0, #32
   2db5c:	bhi	2d500 <main@@Base+0x17464>
   2db60:	b	2e24c <main@@Base+0x181b0>
   2db64:	mov	r2, r4
   2db68:	movw	r0, #508	; 0x1fc
   2db6c:	movt	r0, #6
   2db70:	add	r0, r0, #96	; 0x60
   2db74:	str	r0, [sp, #8]
   2db78:	str	r7, [sp, #16]
   2db7c:	b	2dd58 <main@@Base+0x17cbc>
   2db80:	mov	r0, r9
   2db84:	mov	r1, r2
   2db88:	mov	r2, r8
   2db8c:	mov	r3, #10
   2db90:	b	2d4ac <main@@Base+0x17410>
   2db94:	bne	2dba8 <main@@Base+0x17b0c>
   2db98:	ldrb	r0, [r2, #2]!
   2db9c:	cmp	r0, #32
   2dba0:	mov	r4, r2
   2dba4:	bhi	2d4b4 <main@@Base+0x17418>
   2dba8:	mov	r0, r9
   2dbac:	mov	r2, r8
   2dbb0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2dbb4:	b	2d4b0 <main@@Base+0x17414>
   2dbb8:	mov	r0, r9
   2dbbc:	mov	r1, r6
   2dbc0:	mov	r2, r8
   2dbc4:	mov	r3, #4
   2dbc8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2dbcc:	b	2dbec <main@@Base+0x17b50>
   2dbd0:	bne	2dbe0 <main@@Base+0x17b44>
   2dbd4:	ldrb	r0, [r6, #2]!
   2dbd8:	cmp	r0, #32
   2dbdc:	bhi	2dbf0 <main@@Base+0x17b54>
   2dbe0:	mov	r0, r9
   2dbe4:	mov	r2, r8
   2dbe8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2dbec:	mov	r6, r0
   2dbf0:	cmp	r4, r6
   2dbf4:	beq	2e17c <main@@Base+0x180e0>
   2dbf8:	mov	r5, #0
   2dbfc:	cmp	r6, r8
   2dc00:	str	r5, [sp, #36]	; 0x24
   2dc04:	str	r5, [sp, #32]
   2dc08:	str	r5, [sp, #24]
   2dc0c:	str	r5, [sp, #28]
   2dc10:	beq	2dc70 <main@@Base+0x17bd4>
   2dc14:	add	r0, sp, #32
   2dc18:	mov	r1, r6
   2dc1c:	mov	r2, r8
   2dc20:	add	r3, sp, #28
   2dc24:	str	r0, [sp]
   2dc28:	mov	r0, r9
   2dc2c:	bl	392f4 <flatcc_json_parser_integer@@Base>
   2dc30:	cmp	r0, r6
   2dc34:	beq	2dc80 <main@@Base+0x17be4>
   2dc38:	ldr	r2, [sp, #28]
   2dc3c:	mov	r4, r0
   2dc40:	ldr	r0, [sp, #32]
   2dc44:	ldr	r1, [sp, #36]	; 0x24
   2dc48:	cmp	r2, #0
   2dc4c:	beq	2dc90 <main@@Base+0x17bf4>
   2dc50:	subs	r2, r0, #-2147483647	; 0x80000001
   2dc54:	sbcs	r1, r1, #0
   2dc58:	bcc	2dcc0 <main@@Base+0x17c24>
   2dc5c:	mov	r0, r9
   2dc60:	mov	r1, r4
   2dc64:	mov	r2, r8
   2dc68:	mov	r3, #8
   2dc6c:	b	2dcac <main@@Base+0x17c10>
   2dc70:	mov	r4, r8
   2dc74:	cmp	r6, r4
   2dc78:	bne	2dd14 <main@@Base+0x17c78>
   2dc7c:	b	2dce4 <main@@Base+0x17c48>
   2dc80:	mov	r4, r6
   2dc84:	cmp	r6, r4
   2dc88:	bne	2dd14 <main@@Base+0x17c78>
   2dc8c:	b	2dce4 <main@@Base+0x17c48>
   2dc90:	subs	r2, r0, #-2147483648	; 0x80000000
   2dc94:	sbcs	r1, r1, #0
   2dc98:	bcc	2dcd4 <main@@Base+0x17c38>
   2dc9c:	mov	r0, r9
   2dca0:	mov	r1, r4
   2dca4:	mov	r2, r8
   2dca8:	mov	r3, #7
   2dcac:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2dcb0:	mov	r4, r0
   2dcb4:	cmp	r6, r4
   2dcb8:	bne	2dd14 <main@@Base+0x17c78>
   2dcbc:	b	2dce4 <main@@Base+0x17c48>
   2dcc0:	rsb	r5, r0, #0
   2dcc4:	str	r5, [sp, #24]
   2dcc8:	cmp	r6, r4
   2dccc:	bne	2dd14 <main@@Base+0x17c78>
   2dcd0:	b	2dce4 <main@@Base+0x17c48>
   2dcd4:	mov	r5, r0
   2dcd8:	str	r5, [sp, #24]
   2dcdc:	cmp	r6, r4
   2dce0:	bne	2dd14 <main@@Base+0x17c78>
   2dce4:	add	r0, sp, #24
   2dce8:	mov	r1, r6
   2dcec:	mov	r2, r8
   2dcf0:	str	r0, [sp]
   2dcf4:	mov	r0, r9
   2dcf8:	ldr	r3, [sp, #8]
   2dcfc:	bl	26114 <main@@Base+0x10078>
   2dd00:	mov	r4, r0
   2dd04:	cmp	r0, r6
   2dd08:	cmpne	r4, r8
   2dd0c:	beq	2e26c <main@@Base+0x181d0>
   2dd10:	ldr	r5, [sp, #24]
   2dd14:	cmp	r5, #0
   2dd18:	bne	2dd28 <main@@Base+0x17c8c>
   2dd1c:	ldrb	r0, [r9, #8]
   2dd20:	tst	r0, #2
   2dd24:	beq	2e01c <main@@Base+0x17f80>
   2dd28:	ldr	r0, [r9]
   2dd2c:	mov	r1, #0
   2dd30:	mov	r2, #4
   2dd34:	mov	r3, #4
   2dd38:	bl	33604 <flatcc_builder_table_add@@Base>
   2dd3c:	cmp	r0, #0
   2dd40:	beq	2e26c <main@@Base+0x181d0>
   2dd44:	str	r5, [r0]
   2dd48:	sub	r0, r8, r4
   2dd4c:	cmp	r0, #2
   2dd50:	bge	2e028 <main@@Base+0x17f8c>
   2dd54:	b	2e19c <main@@Base+0x18100>
   2dd58:	cmp	r2, r8
   2dd5c:	mov	r1, r8
   2dd60:	beq	2ddac <main@@Base+0x17d10>
   2dd64:	ldrb	r0, [r2]
   2dd68:	cmp	r0, #46	; 0x2e
   2dd6c:	beq	2dd84 <main@@Base+0x17ce8>
   2dd70:	cmp	r0, #34	; 0x22
   2dd74:	bne	2dda0 <main@@Base+0x17d04>
   2dd78:	mov	r0, #0
   2dd7c:	add	r1, r2, #1
   2dd80:	b	2dda8 <main@@Base+0x17d0c>
   2dd84:	mov	r1, r2
   2dd88:	mov	r0, r9
   2dd8c:	mov	r2, r8
   2dd90:	mov	r3, #5
   2dd94:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2dd98:	mov	r1, r0
   2dd9c:	b	2ddac <main@@Base+0x17d10>
   2dda0:	mov	r0, #1
   2dda4:	mov	r1, r2
   2dda8:	str	r0, [r9, #12]
   2ddac:	sub	r0, r8, r1
   2ddb0:	mov	r2, #8
   2ddb4:	cmp	r0, #8
   2ddb8:	movcs	r0, r2
   2ddbc:	and	r0, r0, #15
   2ddc0:	sub	r4, r0, #1
   2ddc4:	cmp	r4, #7
   2ddc8:	bhi	2dffc <main@@Base+0x17f60>
   2ddcc:	add	sl, pc, #32
   2ddd0:	mov	r0, #0
   2ddd4:	mov	ip, #0
   2ddd8:	mov	lr, #0
   2dddc:	mov	r6, #0
   2dde0:	mov	r3, #0
   2dde4:	mov	r2, #0
   2dde8:	mov	r7, #0
   2ddec:	mov	r5, #0
   2ddf0:	ldr	pc, [sl, r4, lsl #2]
   2ddf4:	andeq	sp, r2, r8, asr lr
   2ddf8:	andeq	sp, r2, r0, asr lr
   2ddfc:	andeq	sp, r2, r8, asr #28
   2de00:	andeq	sp, r2, r0, asr #28
   2de04:	andeq	sp, r2, r4, lsr lr
   2de08:	andeq	sp, r2, r8, lsr #28
   2de0c:	andeq	sp, r2, r8, lsl lr
   2de10:	andeq	sp, r2, r4, lsl lr
   2de14:	ldrb	ip, [r1, #7]
   2de18:	ldrb	r2, [r1, #6]
   2de1c:	mov	lr, r0
   2de20:	orr	r2, ip, r2, lsl #8
   2de24:	mov	r0, r2
   2de28:	ldrb	r2, [r1, #5]
   2de2c:	mov	r6, lr
   2de30:	orr	r0, r0, r2, lsl #16
   2de34:	ldrb	r2, [r1, #4]
   2de38:	mov	r3, r6
   2de3c:	orr	r0, r0, r2, lsl #24
   2de40:	ldrb	r2, [r1, #3]
   2de44:	orr	r2, r2, r3
   2de48:	ldrb	r3, [r1, #2]
   2de4c:	orr	r7, r2, r3, lsl #8
   2de50:	ldrb	r2, [r1, #1]
   2de54:	orr	r5, r7, r2, lsl #16
   2de58:	movw	r2, #24948	; 0x6174
   2de5c:	movw	r3, #28530	; 0x6f72
   2de60:	movt	r2, #25695	; 0x645f
   2de64:	movt	r3, #29559	; 0x7377
   2de68:	eor	r0, r0, r2
   2de6c:	ldrb	r2, [r1]
   2de70:	orr	r2, r5, r2, lsl #24
   2de74:	eor	r2, r2, r3
   2de78:	orrs	r0, r0, r2
   2de7c:	bne	2dffc <main@@Base+0x17f60>
   2de80:	add	lr, r1, #8
   2de84:	mov	r2, #8
   2de88:	sub	r0, r8, lr
   2de8c:	cmp	r0, #8
   2de90:	movcs	r0, r2
   2de94:	and	r0, r0, #15
   2de98:	sub	r3, r0, #1
   2de9c:	cmp	r3, #7
   2dea0:	bhi	2e004 <main@@Base+0x17f68>
   2dea4:	add	r6, pc, #36	; 0x24
   2dea8:	mov	r2, #0
   2deac:	mov	r0, #0
   2deb0:	mov	sl, #0
   2deb4:	mov	r4, #0
   2deb8:	mov	r5, #0
   2debc:	mov	r7, #0
   2dec0:	mov	ip, #0
   2dec4:	str	r2, [sp, #12]
   2dec8:	mov	r2, #0
   2decc:	ldr	pc, [r6, r3, lsl #2]
   2ded0:	andeq	sp, r2, ip, lsr pc
   2ded4:	andeq	sp, r2, r4, lsr pc
   2ded8:	andeq	sp, r2, ip, lsr #30
   2dedc:	andeq	sp, r2, r4, lsr #30
   2dee0:	andeq	sp, r2, r8, lsl pc
   2dee4:	andeq	sp, r2, ip, lsl #30
   2dee8:	strdeq	sp, [r2], -r8
   2deec:	strdeq	sp, [r2], -r0
   2def0:	ldrb	r2, [r1, #15]
   2def4:	str	r2, [sp, #12]
   2def8:	ldrb	r2, [r1, #14]
   2defc:	ldr	r3, [sp, #12]
   2df00:	mov	sl, r0
   2df04:	orr	r2, r3, r2, lsl #8
   2df08:	mov	r0, r2
   2df0c:	ldrb	r2, [r1, #13]
   2df10:	mov	r4, sl
   2df14:	orr	r0, r0, r2, lsl #16
   2df18:	ldrb	r2, [r1, #12]
   2df1c:	mov	r5, r4
   2df20:	orr	r0, r0, r2, lsl #24
   2df24:	ldrb	r2, [r1, #11]
   2df28:	orr	r2, r2, r5
   2df2c:	ldrb	r3, [r1, #10]
   2df30:	orr	r7, r2, r3, lsl #8
   2df34:	ldrb	r2, [r1, #9]
   2df38:	orr	ip, r7, r2, lsl #16
   2df3c:	movw	r2, #24941	; 0x616d
   2df40:	movw	r3, #25451	; 0x636b
   2df44:	movt	r2, #24420	; 0x5f64
   2df48:	movt	r3, #29793	; 0x7461
   2df4c:	eor	r0, r0, r2
   2df50:	ldrb	r2, [lr]
   2df54:	orr	r2, ip, r2, lsl #24
   2df58:	eor	r2, r2, r3
   2df5c:	orrs	r0, r0, r2
   2df60:	bne	2e004 <main@@Base+0x17f68>
   2df64:	add	r4, r1, #16
   2df68:	mov	r2, #8
   2df6c:	sub	r0, r8, r4
   2df70:	cmp	r0, #8
   2df74:	movcc	r2, r0
   2df78:	and	r3, r2, #15
   2df7c:	sub	r2, r3, #3
   2df80:	cmp	r2, #6
   2df84:	bcs	2e0c8 <main@@Base+0x1802c>
   2df88:	ldrb	r2, [r1, #18]
   2df8c:	ldr	r7, [sp, #16]
   2df90:	lsl	r2, r2, #8
   2df94:	ldrb	r3, [r1, #17]
   2df98:	orr	r2, r2, r3, lsl #16
   2df9c:	ldrb	r3, [r4]
   2dfa0:	bic	r2, r2, #255	; 0xff
   2dfa4:	orr	r2, r2, r3, lsl #24
   2dfa8:	movw	r3, #25856	; 0x6500
   2dfac:	movt	r3, #24935	; 0x6167
   2dfb0:	teq	r2, r3
   2dfb4:	bne	2e17c <main@@Base+0x180e0>
   2dfb8:	cmp	r0, #4
   2dfbc:	blt	2e17c <main@@Base+0x180e0>
   2dfc0:	mov	r2, r1
   2dfc4:	ldr	r3, [r9, #12]
   2dfc8:	ldrb	r0, [r2, #19]!
   2dfcc:	cmp	r3, #0
   2dfd0:	beq	2e0e4 <main@@Base+0x18048>
   2dfd4:	cmp	r0, #33	; 0x21
   2dfd8:	bcc	2dfe4 <main@@Base+0x17f48>
   2dfdc:	cmp	r0, #58	; 0x3a
   2dfe0:	bne	2e17c <main@@Base+0x180e0>
   2dfe4:	mov	r0, #0
   2dfe8:	str	r0, [r9, #12]
   2dfec:	sub	r0, r8, r2
   2dff0:	cmp	r0, #2
   2dff4:	bge	2e0fc <main@@Base+0x18060>
   2dff8:	b	2e12c <main@@Base+0x18090>
   2dffc:	mov	r0, r9
   2e000:	b	2e00c <main@@Base+0x17f70>
   2e004:	mov	r0, r9
   2e008:	mov	r1, lr
   2e00c:	mov	r2, r8
   2e010:	bl	376d0 <flatcc_json_parser_unmatched_symbol@@Base>
   2e014:	ldr	r7, [sp, #16]
   2e018:	mov	r4, r0
   2e01c:	sub	r0, r8, r4
   2e020:	cmp	r0, #2
   2e024:	blt	2e19c <main@@Base+0x18100>
   2e028:	ldrb	r0, [r4]
   2e02c:	cmp	r0, #32
   2e030:	bls	2e078 <main@@Base+0x17fdc>
   2e034:	mov	r2, r4
   2e038:	cmp	r2, r8
   2e03c:	beq	2e1b8 <main@@Base+0x1811c>
   2e040:	ldrb	r0, [r2]
   2e044:	cmp	r0, #44	; 0x2c
   2e048:	bne	2e1cc <main@@Base+0x18130>
   2e04c:	add	r1, r2, #1
   2e050:	sub	r0, r8, r1
   2e054:	cmp	r0, #2
   2e058:	blt	2e0a0 <main@@Base+0x18004>
   2e05c:	ldrb	r0, [r1]
   2e060:	cmp	r0, #32
   2e064:	bls	2e090 <main@@Base+0x17ff4>
   2e068:	mov	r2, r1
   2e06c:	cmp	r2, r8
   2e070:	bne	2e0b8 <main@@Base+0x1801c>
   2e074:	b	2e218 <main@@Base+0x1817c>
   2e078:	bne	2e19c <main@@Base+0x18100>
   2e07c:	mov	r2, r4
   2e080:	ldrb	r0, [r2, #1]!
   2e084:	cmp	r0, #32
   2e088:	bhi	2e1b0 <main@@Base+0x18114>
   2e08c:	b	2e19c <main@@Base+0x18100>
   2e090:	bne	2e0a0 <main@@Base+0x18004>
   2e094:	ldrb	r0, [r2, #2]!
   2e098:	cmp	r0, #32
   2e09c:	bhi	2e0b0 <main@@Base+0x18014>
   2e0a0:	mov	r0, r9
   2e0a4:	mov	r2, r8
   2e0a8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2e0ac:	mov	r2, r0
   2e0b0:	cmp	r2, r8
   2e0b4:	beq	2e218 <main@@Base+0x1817c>
   2e0b8:	ldrb	r0, [r2]
   2e0bc:	cmp	r0, #125	; 0x7d
   2e0c0:	bne	2dd58 <main@@Base+0x17cbc>
   2e0c4:	b	2e1d4 <main@@Base+0x18138>
   2e0c8:	ldr	r7, [sp, #16]
   2e0cc:	mov	r2, #0
   2e0d0:	cmp	r3, #1
   2e0d4:	beq	2df9c <main@@Base+0x17f00>
   2e0d8:	cmp	r3, #2
   2e0dc:	beq	2df94 <main@@Base+0x17ef8>
   2e0e0:	b	2e17c <main@@Base+0x180e0>
   2e0e4:	cmp	r0, #34	; 0x22
   2e0e8:	bne	2e17c <main@@Base+0x180e0>
   2e0ec:	add	r2, r1, #20
   2e0f0:	sub	r0, r8, r2
   2e0f4:	cmp	r0, #2
   2e0f8:	blt	2e12c <main@@Base+0x18090>
   2e0fc:	ldrb	r0, [r2]
   2e100:	cmp	r0, #32
   2e104:	bls	2e118 <main@@Base+0x1807c>
   2e108:	mov	r6, r2
   2e10c:	cmp	r6, r8
   2e110:	bne	2e148 <main@@Base+0x180ac>
   2e114:	b	2dbb8 <main@@Base+0x17b1c>
   2e118:	bne	2e12c <main@@Base+0x18090>
   2e11c:	mov	r6, r2
   2e120:	ldrb	r0, [r6, #1]!
   2e124:	cmp	r0, #32
   2e128:	bhi	2e140 <main@@Base+0x180a4>
   2e12c:	mov	r1, r2
   2e130:	mov	r0, r9
   2e134:	mov	r2, r8
   2e138:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2e13c:	mov	r6, r0
   2e140:	cmp	r6, r8
   2e144:	beq	2dbb8 <main@@Base+0x17b1c>
   2e148:	ldrb	r0, [r6]
   2e14c:	cmp	r0, #58	; 0x3a
   2e150:	bne	2dbb8 <main@@Base+0x17b1c>
   2e154:	add	r1, r6, #1
   2e158:	sub	r0, r8, r1
   2e15c:	cmp	r0, #2
   2e160:	blt	2dbe0 <main@@Base+0x17b44>
   2e164:	ldrb	r0, [r1]
   2e168:	cmp	r0, #32
   2e16c:	bls	2dbd0 <main@@Base+0x17b34>
   2e170:	mov	r6, r1
   2e174:	cmp	r4, r6
   2e178:	bne	2dbf8 <main@@Base+0x17b5c>
   2e17c:	mov	r0, r9
   2e180:	mov	r1, r4
   2e184:	mov	r2, r8
   2e188:	bl	376d0 <flatcc_json_parser_unmatched_symbol@@Base>
   2e18c:	mov	r4, r0
   2e190:	sub	r0, r8, r4
   2e194:	cmp	r0, #2
   2e198:	bge	2e028 <main@@Base+0x17f8c>
   2e19c:	mov	r0, r9
   2e1a0:	mov	r1, r4
   2e1a4:	mov	r2, r8
   2e1a8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2e1ac:	mov	r2, r0
   2e1b0:	cmp	r2, r8
   2e1b4:	bne	2e040 <main@@Base+0x17fa4>
   2e1b8:	mov	r4, r8
   2e1bc:	ldr	r0, [r9, #24]
   2e1c0:	cmp	r0, #0
   2e1c4:	bne	2d50c <main@@Base+0x17470>
   2e1c8:	b	2e200 <main@@Base+0x18164>
   2e1cc:	cmp	r0, #125	; 0x7d
   2e1d0:	bne	2e224 <main@@Base+0x18188>
   2e1d4:	add	r1, r2, #1
   2e1d8:	sub	r0, r8, r1
   2e1dc:	cmp	r0, #2
   2e1e0:	blt	2e24c <main@@Base+0x181b0>
   2e1e4:	ldrb	r0, [r1]
   2e1e8:	cmp	r0, #32
   2e1ec:	bls	2e238 <main@@Base+0x1819c>
   2e1f0:	mov	r4, r1
   2e1f4:	ldr	r0, [r9, #24]
   2e1f8:	cmp	r0, #0
   2e1fc:	bne	2d50c <main@@Base+0x17470>
   2e200:	ldr	r0, [r9]
   2e204:	bl	32c44 <flatcc_builder_end_table@@Base>
   2e208:	cmp	r0, #0
   2e20c:	str	r0, [r7]
   2e210:	bne	2d524 <main@@Base+0x17488>
   2e214:	b	2d50c <main@@Base+0x17470>
   2e218:	mov	r0, r9
   2e21c:	mov	r1, r8
   2e220:	b	2e22c <main@@Base+0x18190>
   2e224:	mov	r0, r9
   2e228:	mov	r1, r2
   2e22c:	mov	r2, r8
   2e230:	mov	r3, #10
   2e234:	b	2d4f8 <main@@Base+0x1745c>
   2e238:	bne	2e24c <main@@Base+0x181b0>
   2e23c:	ldrb	r0, [r2, #2]!
   2e240:	cmp	r0, #32
   2e244:	mov	r4, r2
   2e248:	bhi	2d500 <main@@Base+0x17464>
   2e24c:	mov	r0, r9
   2e250:	mov	r2, r8
   2e254:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2e258:	b	2d4fc <main@@Base+0x17460>
   2e25c:	mov	r0, r9
   2e260:	mov	r2, r8
   2e264:	mov	r3, #33	; 0x21
   2e268:	b	2d4ac <main@@Base+0x17410>
   2e26c:	ldr	r7, [sp, #16]
   2e270:	b	2d50c <main@@Base+0x17470>
   2e274:	add	r0, r0, #1
   2e278:	uxtb	r1, r0
   2e27c:	cmp	r1, #12
   2e280:	movhi	r0, #0
   2e284:	bxhi	lr
   2e288:	movw	r1, #49952	; 0xc320
   2e28c:	sxtb	r0, r0
   2e290:	movt	r1, #4
   2e294:	ldr	r0, [r1, r0, lsl #2]
   2e298:	bx	lr
   2e29c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e2a0:	add	fp, sp, #28
   2e2a4:	sub	sp, sp, #36	; 0x24
   2e2a8:	mov	r9, r0
   2e2ac:	mov	r0, #0
   2e2b0:	mov	sl, r2
   2e2b4:	mov	r6, r1
   2e2b8:	mov	r1, #4
   2e2bc:	mov	r2, #4
   2e2c0:	str	r3, [sp, #12]
   2e2c4:	str	r0, [r3]
   2e2c8:	ldr	r0, [r9]
   2e2cc:	bl	30fbc <flatcc_builder_start_struct@@Base>
   2e2d0:	cmp	r0, #0
   2e2d4:	beq	2e3a4 <main@@Base+0x18308>
   2e2d8:	cmp	r6, sl
   2e2dc:	beq	2e358 <main@@Base+0x182bc>
   2e2e0:	ldrb	r1, [r6]
   2e2e4:	cmp	r1, #123	; 0x7b
   2e2e8:	bne	2e358 <main@@Base+0x182bc>
   2e2ec:	add	r1, r6, #1
   2e2f0:	str	r0, [sp, #8]
   2e2f4:	sub	r0, sl, r1
   2e2f8:	cmp	r0, #2
   2e2fc:	blt	2e3e0 <main@@Base+0x18344>
   2e300:	ldrb	r0, [r1]
   2e304:	cmp	r0, #32
   2e308:	bls	2e3d0 <main@@Base+0x18334>
   2e30c:	mov	r6, r1
   2e310:	cmp	r6, sl
   2e314:	mov	r2, sl
   2e318:	beq	2e59c <main@@Base+0x18500>
   2e31c:	ldrb	r0, [r6]
   2e320:	cmp	r0, #125	; 0x7d
   2e324:	bne	2e3c8 <main@@Base+0x1832c>
   2e328:	add	r1, r6, #1
   2e32c:	sub	r0, sl, r1
   2e330:	cmp	r0, #2
   2e334:	blt	2e924 <main@@Base+0x18888>
   2e338:	ldrb	r0, [r1]
   2e33c:	cmp	r0, #32
   2e340:	bhi	2e8dc <main@@Base+0x18840>
   2e344:	bne	2e924 <main@@Base+0x18888>
   2e348:	ldrb	r0, [r6, #2]!
   2e34c:	cmp	r0, #32
   2e350:	bhi	2e370 <main@@Base+0x182d4>
   2e354:	b	2e924 <main@@Base+0x18888>
   2e358:	mov	r0, r9
   2e35c:	mov	r1, r6
   2e360:	mov	r2, sl
   2e364:	mov	r3, #21
   2e368:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2e36c:	mov	r6, r0
   2e370:	cmp	r6, sl
   2e374:	mov	r1, sl
   2e378:	beq	2e3a8 <main@@Base+0x1830c>
   2e37c:	ldr	r0, [r9]
   2e380:	bl	310b0 <flatcc_builder_end_struct@@Base>
   2e384:	ldr	r1, [sp, #12]
   2e388:	cmp	r0, #0
   2e38c:	str	r0, [r1]
   2e390:	mov	r1, r6
   2e394:	beq	2e3a8 <main@@Base+0x1830c>
   2e398:	mov	r0, r6
   2e39c:	sub	sp, fp, #28
   2e3a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e3a4:	mov	r1, r6
   2e3a8:	mov	r0, r9
   2e3ac:	mov	r2, sl
   2e3b0:	mov	r3, #33	; 0x21
   2e3b4:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2e3b8:	mov	r6, r0
   2e3bc:	mov	r0, r6
   2e3c0:	sub	sp, fp, #28
   2e3c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e3c8:	mov	r2, r6
   2e3cc:	b	2e59c <main@@Base+0x18500>
   2e3d0:	bne	2e3e0 <main@@Base+0x18344>
   2e3d4:	ldrb	r0, [r6, #2]!
   2e3d8:	cmp	r0, #32
   2e3dc:	bhi	2e3f0 <main@@Base+0x18354>
   2e3e0:	mov	r0, r9
   2e3e4:	mov	r2, sl
   2e3e8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2e3ec:	mov	r6, r0
   2e3f0:	cmp	r6, sl
   2e3f4:	mov	r2, sl
   2e3f8:	bne	2e31c <main@@Base+0x18280>
   2e3fc:	b	2e59c <main@@Base+0x18500>
   2e400:	bne	2e410 <main@@Base+0x18374>
   2e404:	ldrb	r0, [r2, #2]!
   2e408:	cmp	r0, #32
   2e40c:	bhi	2e420 <main@@Base+0x18384>
   2e410:	mov	r0, r9
   2e414:	mov	r2, sl
   2e418:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2e41c:	mov	r2, r0
   2e420:	cmp	r2, sl
   2e424:	bne	2e874 <main@@Base+0x187d8>
   2e428:	b	2e8f0 <main@@Base+0x18854>
   2e42c:	mov	r0, r9
   2e430:	mov	r1, r7
   2e434:	mov	r2, sl
   2e438:	mov	r3, #4
   2e43c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2e440:	b	2e460 <main@@Base+0x183c4>
   2e444:	bne	2e454 <main@@Base+0x183b8>
   2e448:	ldrb	r0, [r7, #2]!
   2e44c:	cmp	r0, #32
   2e450:	bhi	2e464 <main@@Base+0x183c8>
   2e454:	mov	r0, r9
   2e458:	mov	r2, sl
   2e45c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2e460:	mov	r7, r0
   2e464:	cmp	r8, r7
   2e468:	beq	2e808 <main@@Base+0x1876c>
   2e46c:	mov	r6, #0
   2e470:	cmp	r7, sl
   2e474:	str	r6, [sp, #28]
   2e478:	str	r6, [sp, #24]
   2e47c:	str	r6, [sp, #16]
   2e480:	str	r6, [sp, #20]
   2e484:	beq	2e4e0 <main@@Base+0x18444>
   2e488:	add	r0, sp, #24
   2e48c:	mov	r1, r7
   2e490:	mov	r2, sl
   2e494:	add	r3, sp, #20
   2e498:	str	r0, [sp]
   2e49c:	mov	r0, r9
   2e4a0:	bl	392f4 <flatcc_json_parser_integer@@Base>
   2e4a4:	cmp	r0, r7
   2e4a8:	beq	2e4f0 <main@@Base+0x18454>
   2e4ac:	ldr	r3, [sp, #20]
   2e4b0:	mov	r1, r0
   2e4b4:	ldr	r0, [sp, #24]
   2e4b8:	ldr	r2, [sp, #28]
   2e4bc:	cmp	r3, #0
   2e4c0:	beq	2e500 <main@@Base+0x18464>
   2e4c4:	subs	r3, r0, #-2147483647	; 0x80000001
   2e4c8:	sbcs	r2, r2, #0
   2e4cc:	bcc	2e52c <main@@Base+0x18490>
   2e4d0:	mov	r0, r9
   2e4d4:	mov	r2, sl
   2e4d8:	mov	r3, #8
   2e4dc:	b	2e518 <main@@Base+0x1847c>
   2e4e0:	mov	r1, sl
   2e4e4:	cmp	r7, r1
   2e4e8:	bne	2e584 <main@@Base+0x184e8>
   2e4ec:	b	2e550 <main@@Base+0x184b4>
   2e4f0:	mov	r1, r7
   2e4f4:	cmp	r7, r1
   2e4f8:	bne	2e584 <main@@Base+0x184e8>
   2e4fc:	b	2e550 <main@@Base+0x184b4>
   2e500:	subs	r3, r0, #-2147483648	; 0x80000000
   2e504:	sbcs	r2, r2, #0
   2e508:	bcc	2e540 <main@@Base+0x184a4>
   2e50c:	mov	r0, r9
   2e510:	mov	r2, sl
   2e514:	mov	r3, #7
   2e518:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2e51c:	mov	r1, r0
   2e520:	cmp	r7, r1
   2e524:	bne	2e584 <main@@Base+0x184e8>
   2e528:	b	2e550 <main@@Base+0x184b4>
   2e52c:	rsb	r6, r0, #0
   2e530:	str	r6, [sp, #16]
   2e534:	cmp	r7, r1
   2e538:	bne	2e584 <main@@Base+0x184e8>
   2e53c:	b	2e550 <main@@Base+0x184b4>
   2e540:	mov	r6, r0
   2e544:	str	r6, [sp, #16]
   2e548:	cmp	r7, r1
   2e54c:	bne	2e584 <main@@Base+0x184e8>
   2e550:	movw	r3, #136	; 0x88
   2e554:	add	r0, sp, #16
   2e558:	mov	r1, r7
   2e55c:	mov	r2, sl
   2e560:	str	r0, [sp]
   2e564:	mov	r0, r9
   2e568:	movt	r3, #6
   2e56c:	bl	26114 <main@@Base+0x10078>
   2e570:	mov	r1, r0
   2e574:	cmp	r0, r7
   2e578:	cmpne	r1, sl
   2e57c:	beq	2e934 <main@@Base+0x18898>
   2e580:	ldr	r6, [sp, #16]
   2e584:	ldr	r0, [sp, #8]
   2e588:	str	r6, [r0]
   2e58c:	sub	r0, sl, r1
   2e590:	cmp	r0, #2
   2e594:	bge	2e828 <main@@Base+0x1878c>
   2e598:	b	2e898 <main@@Base+0x187fc>
   2e59c:	cmp	r2, sl
   2e5a0:	mov	r1, sl
   2e5a4:	beq	2e5f0 <main@@Base+0x18554>
   2e5a8:	ldrb	r0, [r2]
   2e5ac:	cmp	r0, #46	; 0x2e
   2e5b0:	beq	2e5c8 <main@@Base+0x1852c>
   2e5b4:	cmp	r0, #34	; 0x22
   2e5b8:	bne	2e5e4 <main@@Base+0x18548>
   2e5bc:	mov	r0, #0
   2e5c0:	add	r1, r2, #1
   2e5c4:	b	2e5ec <main@@Base+0x18550>
   2e5c8:	mov	r1, r2
   2e5cc:	mov	r0, r9
   2e5d0:	mov	r2, sl
   2e5d4:	mov	r3, #5
   2e5d8:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2e5dc:	mov	r1, r0
   2e5e0:	b	2e5f0 <main@@Base+0x18554>
   2e5e4:	mov	r0, #1
   2e5e8:	mov	r1, r2
   2e5ec:	str	r0, [r9, #12]
   2e5f0:	sub	r0, sl, r1
   2e5f4:	mov	r2, #8
   2e5f8:	cmp	r0, #8
   2e5fc:	movcs	r0, r2
   2e600:	and	r0, r0, #15
   2e604:	sub	r6, r0, #1
   2e608:	cmp	r6, #7
   2e60c:	bhi	2e754 <main@@Base+0x186b8>
   2e610:	add	r0, pc, #32
   2e614:	mov	r8, #0
   2e618:	mov	ip, #0
   2e61c:	mov	lr, #0
   2e620:	mov	r7, #0
   2e624:	mov	r3, #0
   2e628:	mov	r5, #0
   2e62c:	mov	r2, #0
   2e630:	mov	r4, #0
   2e634:	ldr	pc, [r0, r6, lsl #2]
   2e638:	muleq	r2, ip, r6
   2e63c:	muleq	r2, r4, r6
   2e640:	andeq	lr, r2, ip, lsl #13
   2e644:	andeq	lr, r2, r4, lsl #13
   2e648:	andeq	lr, r2, r8, ror r6
   2e64c:	andeq	lr, r2, ip, ror #12
   2e650:	andeq	lr, r2, ip, asr r6
   2e654:	andeq	lr, r2, r8, asr r6
   2e658:	ldrb	ip, [r1, #7]
   2e65c:	ldrb	r0, [r1, #6]
   2e660:	mov	lr, r8
   2e664:	orr	r0, ip, r0, lsl #8
   2e668:	mov	r8, r0
   2e66c:	ldrb	r0, [r1, #5]
   2e670:	mov	r7, lr
   2e674:	orr	r8, r8, r0, lsl #16
   2e678:	ldrb	r0, [r1, #4]
   2e67c:	mov	r3, r7
   2e680:	orr	r8, r8, r0, lsl #24
   2e684:	ldrb	r0, [r1, #3]
   2e688:	orr	r5, r0, r3
   2e68c:	ldrb	r0, [r1, #2]
   2e690:	orr	r2, r5, r0, lsl #8
   2e694:	ldrb	r0, [r1, #1]
   2e698:	orr	r4, r2, r0, lsl #16
   2e69c:	ldrb	r2, [r1]
   2e6a0:	movw	r0, #29285	; 0x7265
   2e6a4:	movw	r3, #28523	; 0x6f6b
   2e6a8:	movt	r0, #29535	; 0x735f
   2e6ac:	movt	r3, #25199	; 0x626f
   2e6b0:	eor	r0, r8, r0
   2e6b4:	orr	r2, r4, r2, lsl #24
   2e6b8:	eor	r2, r2, r3
   2e6bc:	orrs	r0, r0, r2
   2e6c0:	bne	2e754 <main@@Base+0x186b8>
   2e6c4:	add	r8, r1, #8
   2e6c8:	mov	r2, #8
   2e6cc:	sub	r0, sl, r8
   2e6d0:	cmp	r0, #8
   2e6d4:	movcc	r2, r0
   2e6d8:	and	r3, r2, #15
   2e6dc:	sub	r2, r3, #2
   2e6e0:	cmp	r2, #7
   2e6e4:	bcs	2e75c <main@@Base+0x186c0>
   2e6e8:	ldrb	r2, [r1, #9]
   2e6ec:	lsl	r3, r2, #16
   2e6f0:	mov	r2, #0
   2e6f4:	ldrb	r7, [r8]
   2e6f8:	orr	r3, r3, r7, lsl #24
   2e6fc:	movw	r7, #0
   2e700:	movt	r7, #24932	; 0x6164
   2e704:	eor	r3, r3, r7
   2e708:	orrs	r2, r2, r3
   2e70c:	bne	2e808 <main@@Base+0x1876c>
   2e710:	cmp	r0, #3
   2e714:	blt	2e808 <main@@Base+0x1876c>
   2e718:	mov	r2, r1
   2e71c:	ldr	r3, [r9, #12]
   2e720:	ldrb	r0, [r2, #10]!
   2e724:	cmp	r3, #0
   2e728:	beq	2e770 <main@@Base+0x186d4>
   2e72c:	cmp	r0, #33	; 0x21
   2e730:	bcc	2e73c <main@@Base+0x186a0>
   2e734:	cmp	r0, #58	; 0x3a
   2e738:	bne	2e808 <main@@Base+0x1876c>
   2e73c:	mov	r0, #0
   2e740:	str	r0, [r9, #12]
   2e744:	sub	r0, sl, r2
   2e748:	cmp	r0, #2
   2e74c:	bge	2e788 <main@@Base+0x186ec>
   2e750:	b	2e7b8 <main@@Base+0x1871c>
   2e754:	mov	r0, r9
   2e758:	b	2e810 <main@@Base+0x18774>
   2e75c:	cmp	r3, #1
   2e760:	mov	r2, #0
   2e764:	mov	r3, #0
   2e768:	beq	2e6f4 <main@@Base+0x18658>
   2e76c:	b	2e808 <main@@Base+0x1876c>
   2e770:	cmp	r0, #34	; 0x22
   2e774:	bne	2e808 <main@@Base+0x1876c>
   2e778:	add	r2, r1, #11
   2e77c:	sub	r0, sl, r2
   2e780:	cmp	r0, #2
   2e784:	blt	2e7b8 <main@@Base+0x1871c>
   2e788:	ldrb	r0, [r2]
   2e78c:	cmp	r0, #32
   2e790:	bls	2e7a4 <main@@Base+0x18708>
   2e794:	mov	r7, r2
   2e798:	cmp	r7, sl
   2e79c:	bne	2e7d4 <main@@Base+0x18738>
   2e7a0:	b	2e42c <main@@Base+0x18390>
   2e7a4:	bne	2e7b8 <main@@Base+0x1871c>
   2e7a8:	mov	r7, r2
   2e7ac:	ldrb	r0, [r7, #1]!
   2e7b0:	cmp	r0, #32
   2e7b4:	bhi	2e7cc <main@@Base+0x18730>
   2e7b8:	mov	r1, r2
   2e7bc:	mov	r0, r9
   2e7c0:	mov	r2, sl
   2e7c4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2e7c8:	mov	r7, r0
   2e7cc:	cmp	r7, sl
   2e7d0:	beq	2e42c <main@@Base+0x18390>
   2e7d4:	ldrb	r0, [r7]
   2e7d8:	cmp	r0, #58	; 0x3a
   2e7dc:	bne	2e42c <main@@Base+0x18390>
   2e7e0:	add	r1, r7, #1
   2e7e4:	sub	r0, sl, r1
   2e7e8:	cmp	r0, #2
   2e7ec:	blt	2e454 <main@@Base+0x183b8>
   2e7f0:	ldrb	r0, [r1]
   2e7f4:	cmp	r0, #32
   2e7f8:	bls	2e444 <main@@Base+0x183a8>
   2e7fc:	mov	r7, r1
   2e800:	cmp	r8, r7
   2e804:	bne	2e46c <main@@Base+0x183d0>
   2e808:	mov	r0, r9
   2e80c:	mov	r1, r8
   2e810:	mov	r2, sl
   2e814:	bl	376d0 <flatcc_json_parser_unmatched_symbol@@Base>
   2e818:	mov	r1, r0
   2e81c:	sub	r0, sl, r1
   2e820:	cmp	r0, #2
   2e824:	blt	2e898 <main@@Base+0x187fc>
   2e828:	ldrb	r0, [r1]
   2e82c:	cmp	r0, #32
   2e830:	bls	2e884 <main@@Base+0x187e8>
   2e834:	mov	r2, r1
   2e838:	cmp	r2, sl
   2e83c:	beq	2e8b0 <main@@Base+0x18814>
   2e840:	ldrb	r0, [r2]
   2e844:	cmp	r0, #44	; 0x2c
   2e848:	bne	2e8b8 <main@@Base+0x1881c>
   2e84c:	add	r1, r2, #1
   2e850:	sub	r0, sl, r1
   2e854:	cmp	r0, #2
   2e858:	blt	2e410 <main@@Base+0x18374>
   2e85c:	ldrb	r0, [r1]
   2e860:	cmp	r0, #32
   2e864:	bls	2e400 <main@@Base+0x18364>
   2e868:	mov	r2, r1
   2e86c:	cmp	r2, sl
   2e870:	beq	2e8f0 <main@@Base+0x18854>
   2e874:	ldrb	r0, [r2]
   2e878:	cmp	r0, #125	; 0x7d
   2e87c:	bne	2e59c <main@@Base+0x18500>
   2e880:	b	2e8c0 <main@@Base+0x18824>
   2e884:	bne	2e898 <main@@Base+0x187fc>
   2e888:	mov	r2, r1
   2e88c:	ldrb	r0, [r2, #1]!
   2e890:	cmp	r0, #32
   2e894:	bhi	2e8a8 <main@@Base+0x1880c>
   2e898:	mov	r0, r9
   2e89c:	mov	r2, sl
   2e8a0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2e8a4:	mov	r2, r0
   2e8a8:	cmp	r2, sl
   2e8ac:	bne	2e840 <main@@Base+0x187a4>
   2e8b0:	mov	r1, sl
   2e8b4:	b	2e3a8 <main@@Base+0x1830c>
   2e8b8:	cmp	r0, #125	; 0x7d
   2e8bc:	bne	2e8fc <main@@Base+0x18860>
   2e8c0:	add	r1, r2, #1
   2e8c4:	sub	r0, sl, r1
   2e8c8:	cmp	r0, #2
   2e8cc:	blt	2e924 <main@@Base+0x18888>
   2e8d0:	ldrb	r0, [r1]
   2e8d4:	cmp	r0, #32
   2e8d8:	bls	2e910 <main@@Base+0x18874>
   2e8dc:	mov	r6, r1
   2e8e0:	cmp	r6, sl
   2e8e4:	mov	r1, sl
   2e8e8:	bne	2e37c <main@@Base+0x182e0>
   2e8ec:	b	2e3a8 <main@@Base+0x1830c>
   2e8f0:	mov	r0, r9
   2e8f4:	mov	r1, sl
   2e8f8:	b	2e904 <main@@Base+0x18868>
   2e8fc:	mov	r0, r9
   2e900:	mov	r1, r2
   2e904:	mov	r2, sl
   2e908:	mov	r3, #10
   2e90c:	b	2e368 <main@@Base+0x182cc>
   2e910:	bne	2e924 <main@@Base+0x18888>
   2e914:	ldrb	r0, [r2, #2]!
   2e918:	cmp	r0, #32
   2e91c:	mov	r6, r2
   2e920:	bhi	2e370 <main@@Base+0x182d4>
   2e924:	mov	r0, r9
   2e928:	mov	r2, sl
   2e92c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2e930:	b	2e36c <main@@Base+0x182d0>
   2e934:	mov	r0, r9
   2e938:	mov	r2, sl
   2e93c:	mov	r3, #33	; 0x21
   2e940:	b	2e368 <main@@Base+0x182cc>
   2e944:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e948:	add	fp, sp, #28
   2e94c:	sub	sp, sp, #44	; 0x2c
   2e950:	mov	r6, r2
   2e954:	ldr	r2, [fp, #8]
   2e958:	mov	r5, r0
   2e95c:	mov	r0, #0
   2e960:	mov	r8, r3
   2e964:	cmp	r1, r6
   2e968:	strh	r0, [r2]
   2e96c:	beq	2e990 <main@@Base+0x188f4>
   2e970:	ldrb	r0, [r1]
   2e974:	cmp	r0, #46	; 0x2e
   2e978:	beq	2e9b8 <main@@Base+0x1891c>
   2e97c:	cmp	r0, #34	; 0x22
   2e980:	bne	2eb60 <main@@Base+0x18ac4>
   2e984:	mov	r0, #0
   2e988:	add	r1, r1, #1
   2e98c:	str	r0, [r5, #12]
   2e990:	ldr	r0, [r5, #12]
   2e994:	cmp	r0, #0
   2e998:	beq	2e9d8 <main@@Base+0x1893c>
   2e99c:	mov	r7, r1
   2e9a0:	cmp	r7, r6
   2e9a4:	bne	2ea1c <main@@Base+0x18980>
   2e9a8:	mov	r4, r6
   2e9ac:	mov	r0, r4
   2e9b0:	sub	sp, fp, #28
   2e9b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e9b8:	mov	r0, r5
   2e9bc:	mov	r2, r6
   2e9c0:	mov	r3, #5
   2e9c4:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2e9c8:	mov	r1, r0
   2e9cc:	ldr	r0, [r5, #12]
   2e9d0:	cmp	r0, #0
   2e9d4:	bne	2e99c <main@@Base+0x18900>
   2e9d8:	sub	r0, r6, r1
   2e9dc:	cmp	r0, #2
   2e9e0:	blt	2ea04 <main@@Base+0x18968>
   2e9e4:	ldrb	r0, [r1]
   2e9e8:	cmp	r0, #32
   2e9ec:	bhi	2e99c <main@@Base+0x18900>
   2e9f0:	bne	2ea04 <main@@Base+0x18968>
   2e9f4:	mov	r7, r1
   2e9f8:	ldrb	r0, [r7, #1]!
   2e9fc:	cmp	r0, #32
   2ea00:	bhi	2ea14 <main@@Base+0x18978>
   2ea04:	mov	r0, r5
   2ea08:	mov	r2, r6
   2ea0c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   2ea10:	mov	r7, r0
   2ea14:	cmp	r7, r6
   2ea18:	beq	2e9a8 <main@@Base+0x1890c>
   2ea1c:	add	r0, r8, #4
   2ea20:	mov	r1, #0
   2ea24:	add	sl, sp, #32
   2ea28:	add	r9, sp, #28
   2ea2c:	str	r8, [sp, #16]
   2ea30:	str	r1, [sp, #20]
   2ea34:	str	r0, [sp, #12]
   2ea38:	ldr	r4, [r8]
   2ea3c:	mov	r8, r0
   2ea40:	add	r0, sp, #24
   2ea44:	mov	r1, r7
   2ea48:	mov	r2, r6
   2ea4c:	mov	r3, r9
   2ea50:	str	sl, [sp]
   2ea54:	str	r0, [sp, #4]
   2ea58:	mov	r0, r5
   2ea5c:	blx	r4
   2ea60:	cmp	r0, r6
   2ea64:	beq	2eb2c <main@@Base+0x18a90>
   2ea68:	mov	r4, r0
   2ea6c:	cmp	r0, r7
   2ea70:	bne	2ea84 <main@@Base+0x189e8>
   2ea74:	ldr	r4, [r8], #4
   2ea78:	cmp	r4, #0
   2ea7c:	bne	2ea40 <main@@Base+0x189a4>
   2ea80:	b	2eb3c <main@@Base+0x18aa0>
   2ea84:	ldr	r0, [sp, #28]
   2ea88:	cmp	r0, #0
   2ea8c:	beq	2eab4 <main@@Base+0x18a18>
   2ea90:	mov	r0, r5
   2ea94:	mov	r1, r4
   2ea98:	mov	r2, r6
   2ea9c:	mov	r3, #8
   2eaa0:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2eaa4:	ldr	r8, [sp, #16]
   2eaa8:	cmp	r0, r6
   2eaac:	bne	2eafc <main@@Base+0x18a60>
   2eab0:	b	2eb78 <main@@Base+0x18adc>
   2eab4:	ldr	r0, [sp, #32]
   2eab8:	ldr	r1, [sp, #36]	; 0x24
   2eabc:	ldr	r8, [sp, #16]
   2eac0:	subs	r2, r0, #65536	; 0x10000
   2eac4:	sbcs	r1, r1, #0
   2eac8:	bcc	2eaec <main@@Base+0x18a50>
   2eacc:	mov	r0, r5
   2ead0:	mov	r1, r4
   2ead4:	mov	r2, r6
   2ead8:	mov	r3, #7
   2eadc:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2eae0:	cmp	r0, r6
   2eae4:	bne	2eafc <main@@Base+0x18a60>
   2eae8:	b	2eb78 <main@@Base+0x18adc>
   2eaec:	str	r0, [sp, #20]
   2eaf0:	mov	r0, r4
   2eaf4:	cmp	r0, r6
   2eaf8:	beq	2eb78 <main@@Base+0x18adc>
   2eafc:	ldr	r0, [fp, #8]
   2eb00:	ldr	r2, [sp, #20]
   2eb04:	mov	r7, r4
   2eb08:	mov	r1, r0
   2eb0c:	ldrh	r0, [r0]
   2eb10:	add	r0, r0, r2
   2eb14:	strh	r0, [r1]
   2eb18:	ldr	r0, [sp, #24]
   2eb1c:	cmp	r0, #0
   2eb20:	ldr	r0, [sp, #12]
   2eb24:	bne	2ea38 <main@@Base+0x1899c>
   2eb28:	b	2e9ac <main@@Base+0x18910>
   2eb2c:	mov	r4, r6
   2eb30:	mov	r0, r4
   2eb34:	sub	sp, fp, #28
   2eb38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2eb3c:	mov	r0, r5
   2eb40:	mov	r1, r7
   2eb44:	mov	r2, r6
   2eb48:	mov	r3, #23
   2eb4c:	bl	36da0 <flatcc_json_parser_set_error@@Base>
   2eb50:	mov	r4, r0
   2eb54:	mov	r0, r4
   2eb58:	sub	sp, fp, #28
   2eb5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2eb60:	mov	r0, #1
   2eb64:	str	r0, [r5, #12]
   2eb68:	ldr	r0, [r5, #12]
   2eb6c:	cmp	r0, #0
   2eb70:	bne	2e99c <main@@Base+0x18900>
   2eb74:	b	2e9d8 <main@@Base+0x1893c>
   2eb78:	mov	r4, r6
   2eb7c:	mov	r0, r4
   2eb80:	sub	sp, fp, #28
   2eb84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2eb88:	push	{r4, r5, r6, sl, fp, lr}
   2eb8c:	add	fp, sp, #16
   2eb90:	sub	sp, sp, #16
   2eb94:	mov	r5, r0
   2eb98:	movw	r0, #48967	; 0xbf47
   2eb9c:	mov	r4, r1
   2eba0:	mov	r6, #1
   2eba4:	mov	r1, #0
   2eba8:	mov	r3, #0
   2ebac:	movt	r0, #4
   2ebb0:	mov	r2, r4
   2ebb4:	stm	sp, {r0, r6}
   2ebb8:	mov	r0, r5
   2ebbc:	bl	3f3d0 <flatcc_json_printer_float_struct_field@@Base>
   2ebc0:	movw	r0, #58911	; 0xe61f
   2ebc4:	mov	r1, #1
   2ebc8:	mov	r2, r4
   2ebcc:	mov	r3, #4
   2ebd0:	movt	r0, #4
   2ebd4:	stm	sp, {r0, r6}
   2ebd8:	mov	r0, r5
   2ebdc:	bl	3f3d0 <flatcc_json_printer_float_struct_field@@Base>
   2ebe0:	movw	r0, #49408	; 0xc100
   2ebe4:	mov	r1, #2
   2ebe8:	mov	r2, r4
   2ebec:	mov	r3, #8
   2ebf0:	movt	r0, #4
   2ebf4:	stm	sp, {r0, r6}
   2ebf8:	mov	r0, r5
   2ebfc:	bl	3f3d0 <flatcc_json_printer_float_struct_field@@Base>
   2ec00:	movw	r0, #49410	; 0xc102
   2ec04:	mov	r6, #5
   2ec08:	mov	r1, #3
   2ec0c:	mov	r2, r4
   2ec10:	mov	r3, #16
   2ec14:	movt	r0, #4
   2ec18:	stm	sp, {r0, r6}
   2ec1c:	mov	r0, r5
   2ec20:	bl	3f434 <flatcc_json_printer_double_struct_field@@Base>
   2ec24:	movw	r0, #60548	; 0xec84
   2ec28:	movw	r1, #49416	; 0xc108
   2ec2c:	mov	r2, r4
   2ec30:	mov	r3, #24
   2ec34:	movt	r1, #4
   2ec38:	movt	r0, #2
   2ec3c:	stm	sp, {r1, r6}
   2ec40:	str	r0, [sp, #8]
   2ec44:	mov	r0, r5
   2ec48:	mov	r1, #4
   2ec4c:	bl	3f738 <flatcc_json_printer_int8_enum_struct_field@@Base>
   2ec50:	movw	r0, #60980	; 0xee34
   2ec54:	movw	r1, #49422	; 0xc10e
   2ec58:	mov	r2, r4
   2ec5c:	mov	r3, #26
   2ec60:	movt	r1, #4
   2ec64:	movt	r0, #2
   2ec68:	stm	sp, {r1, r6}
   2ec6c:	str	r0, [sp, #8]
   2ec70:	mov	r0, r5
   2ec74:	mov	r1, #5
   2ec78:	bl	46dc0 <flatcc_json_printer_embedded_struct_field@@Base>
   2ec7c:	sub	sp, fp, #16
   2ec80:	pop	{r4, r5, r6, sl, fp, pc}
   2ec84:	push	{r4, r5, r6, r7, fp, lr}
   2ec88:	add	fp, sp, #16
   2ec8c:	mov	r4, r0
   2ec90:	mvn	r0, #0
   2ec94:	uxtb	r7, r1
   2ec98:	uxtab	r0, r0, r1
   2ec9c:	ands	r5, r0, r7
   2eca0:	movwne	r5, #1
   2eca4:	cmp	r1, #0
   2eca8:	beq	2ecec <main@@Base+0x18c50>
   2ecac:	ands	r0, r1, #244	; 0xf4
   2ecb0:	bne	2ecec <main@@Base+0x18c50>
   2ecb4:	mov	r0, r4
   2ecb8:	mov	r1, r5
   2ecbc:	bl	3d44c <flatcc_json_printer_delimit_enum_flags@@Base>
   2ecc0:	mov	r6, #0
   2ecc4:	tst	r7, #1
   2ecc8:	bne	2ecf8 <main@@Base+0x18c5c>
   2eccc:	tst	r7, #2
   2ecd0:	bne	2ed1c <main@@Base+0x18c80>
   2ecd4:	tst	r7, #8
   2ecd8:	bne	2ed40 <main@@Base+0x18ca4>
   2ecdc:	mov	r0, r4
   2ece0:	mov	r1, r5
   2ece4:	pop	{r4, r5, r6, r7, fp, lr}
   2ece8:	b	3d44c <flatcc_json_printer_delimit_enum_flags@@Base>
   2ecec:	mov	r0, r4
   2ecf0:	pop	{r4, r5, r6, r7, fp, lr}
   2ecf4:	b	3d15c <flatcc_json_printer_int8@@Base>
   2ecf8:	movw	r2, #49428	; 0xc114
   2ecfc:	mov	r0, r4
   2ed00:	mov	r1, #0
   2ed04:	mov	r3, #3
   2ed08:	movt	r2, #4
   2ed0c:	bl	3d480 <flatcc_json_printer_enum_flag@@Base>
   2ed10:	mov	r6, #1
   2ed14:	tst	r7, #2
   2ed18:	beq	2ecd4 <main@@Base+0x18c38>
   2ed1c:	movw	r2, #49432	; 0xc118
   2ed20:	mov	r0, r4
   2ed24:	mov	r1, r6
   2ed28:	mov	r3, #5
   2ed2c:	movt	r2, #4
   2ed30:	bl	3d480 <flatcc_json_printer_enum_flag@@Base>
   2ed34:	add	r6, r6, #1
   2ed38:	tst	r7, #8
   2ed3c:	beq	2ecdc <main@@Base+0x18c40>
   2ed40:	movw	r2, #49438	; 0xc11e
   2ed44:	mov	r0, r4
   2ed48:	mov	r1, r6
   2ed4c:	mov	r3, #4
   2ed50:	movt	r2, #4
   2ed54:	bl	3d480 <flatcc_json_printer_enum_flag@@Base>
   2ed58:	mov	r0, r4
   2ed5c:	mov	r1, r5
   2ed60:	pop	{r4, r5, r6, r7, fp, lr}
   2ed64:	b	3d44c <flatcc_json_printer_delimit_enum_flags@@Base>
   2ed68:	sub	r1, r1, #1
   2ed6c:	cmp	r1, #3
   2ed70:	bhi	2ed9c <main@@Base+0x18d00>
   2ed74:	add	r2, pc, #0
   2ed78:	ldr	pc, [r2, r1, lsl #2]
   2ed7c:	andeq	lr, r2, ip, lsl #27
   2ed80:	andeq	lr, r2, ip, lsr #27
   2ed84:			; <UNDEFINED> instruction: 0x0002edbc
   2ed88:	andeq	lr, r2, ip, asr #27
   2ed8c:	movw	r1, #49443	; 0xc123
   2ed90:	mov	r2, #7
   2ed94:	movt	r1, #4
   2ed98:	b	3d360 <flatcc_json_printer_enum@@Base>
   2ed9c:	movw	r1, #55892	; 0xda54
   2eda0:	mov	r2, #4
   2eda4:	movt	r1, #4
   2eda8:	b	3d360 <flatcc_json_printer_enum@@Base>
   2edac:	movw	r1, #49451	; 0xc12b
   2edb0:	mov	r2, #23
   2edb4:	movt	r1, #4
   2edb8:	b	3d360 <flatcc_json_printer_enum@@Base>
   2edbc:	movw	r1, #49475	; 0xc143
   2edc0:	mov	r2, #8
   2edc4:	movt	r1, #4
   2edc8:	b	3d360 <flatcc_json_printer_enum@@Base>
   2edcc:	movw	r1, #49484	; 0xc14c
   2edd0:	mov	r2, #3
   2edd4:	movt	r1, #4
   2edd8:	b	3d360 <flatcc_json_printer_enum@@Base>
   2eddc:	ldrb	r2, [r1, #8]
   2ede0:	sub	r2, r2, #1
   2ede4:	cmp	r2, #3
   2ede8:	bxhi	lr
   2edec:	add	r3, pc, #0
   2edf0:	ldr	pc, [r3, r2, lsl #2]
   2edf4:	andeq	lr, r2, r4, lsl #28
   2edf8:	andeq	lr, r2, r8, lsr #28
   2edfc:	andeq	lr, r2, r0, lsl lr
   2ee00:	andeq	lr, r2, ip, lsl lr
   2ee04:	movw	r2, #6516	; 0x1974
   2ee08:	movt	r2, #2
   2ee0c:	b	46b0c <flatcc_json_printer_union_table@@Base>
   2ee10:	movw	r2, #61616	; 0xf0b0
   2ee14:	movt	r2, #2
   2ee18:	b	46b0c <flatcc_json_printer_union_table@@Base>
   2ee1c:	movw	r2, #61620	; 0xf0b4
   2ee20:	movt	r2, #2
   2ee24:	b	46b0c <flatcc_json_printer_union_table@@Base>
   2ee28:	movw	r2, #61452	; 0xf00c
   2ee2c:	movt	r2, #2
   2ee30:	b	46b0c <flatcc_json_printer_union_table@@Base>
   2ee34:	push	{r4, r5, r6, sl, fp, lr}
   2ee38:	add	fp, sp, #16
   2ee3c:	sub	sp, sp, #8
   2ee40:	mov	r5, r0
   2ee44:	movw	r0, #49194	; 0xc02a
   2ee48:	mov	r4, r1
   2ee4c:	mov	r6, #1
   2ee50:	mov	r1, #0
   2ee54:	mov	r3, #0
   2ee58:	movt	r0, #4
   2ee5c:	mov	r2, r4
   2ee60:	stm	sp, {r0, r6}
   2ee64:	mov	r0, r5
   2ee68:	bl	3f1d4 <flatcc_json_printer_int16_struct_field@@Base>
   2ee6c:	movw	r0, #49609	; 0xc1c9
   2ee70:	mov	r1, #1
   2ee74:	mov	r2, r4
   2ee78:	mov	r3, #2
   2ee7c:	movt	r0, #4
   2ee80:	stm	sp, {r0, r6}
   2ee84:	mov	r0, r5
   2ee88:	bl	3f0bc <flatcc_json_printer_int8_struct_field@@Base>
   2ee8c:	sub	sp, fp, #16
   2ee90:	pop	{r4, r5, r6, sl, fp, pc}
   2ee94:	push	{r4, r5, r6, sl, fp, lr}
   2ee98:	add	fp, sp, #16
   2ee9c:	sub	sp, sp, #16
   2eea0:	movw	r3, #49856	; 0xc2c0
   2eea4:	mov	r5, r0
   2eea8:	mov	r0, #2
   2eeac:	mov	r2, #0
   2eeb0:	mov	r4, r1
   2eeb4:	mov	r6, #0
   2eeb8:	str	r0, [sp]
   2eebc:	movt	r3, #4
   2eec0:	mov	r0, r5
   2eec4:	bl	3d54c <flatcc_json_printer_string_field@@Base>
   2eec8:	movw	r3, #49859	; 0xc2c3
   2eecc:	mov	r0, #3
   2eed0:	mov	r1, r4
   2eed4:	mov	r2, #1
   2eed8:	str	r6, [sp, #8]
   2eedc:	str	r6, [sp, #12]
   2eee0:	str	r0, [sp]
   2eee4:	movt	r3, #4
   2eee8:	mov	r0, r5
   2eeec:	bl	3e0d8 <flatcc_json_printer_int64_field@@Base>
   2eef0:	movw	r3, #52144	; 0xcbb0
   2eef4:	mov	r0, #5
   2eef8:	mov	r1, r4
   2eefc:	mov	r2, #2
   2ef00:	stm	sp, {r0, r6}
   2ef04:	movt	r3, #4
   2ef08:	mov	r0, r5
   2ef0c:	bl	3db40 <flatcc_json_printer_uint16_field@@Base>
   2ef10:	sub	sp, fp, #16
   2ef14:	pop	{r4, r5, r6, sl, fp, pc}
   2ef18:	push	{r4, r5, fp, lr}
   2ef1c:	add	fp, sp, #8
   2ef20:	sub	sp, sp, #8
   2ef24:	mov	r4, r1
   2ef28:	movw	r1, #49856	; 0xc2c0
   2ef2c:	mov	r5, r0
   2ef30:	mov	r0, #2
   2ef34:	mov	r3, #0
   2ef38:	movt	r1, #4
   2ef3c:	str	r0, [sp, #4]
   2ef40:	mov	r0, r5
   2ef44:	mov	r2, r4
   2ef48:	str	r1, [sp]
   2ef4c:	mov	r1, #0
   2ef50:	bl	3f004 <flatcc_json_printer_uint32_struct_field@@Base>
   2ef54:	movw	r1, #49863	; 0xc2c7
   2ef58:	mov	r0, #8
   2ef5c:	mov	r2, r4
   2ef60:	mov	r3, #4
   2ef64:	movt	r1, #4
   2ef68:	str	r0, [sp, #4]
   2ef6c:	mov	r0, r5
   2ef70:	str	r1, [sp]
   2ef74:	mov	r1, #1
   2ef78:	bl	3f004 <flatcc_json_printer_uint32_struct_field@@Base>
   2ef7c:	sub	sp, fp, #8
   2ef80:	pop	{r4, r5, fp, pc}
   2ef84:	bx	lr
   2ef88:	push	{r4, r5, r6, sl, fp, lr}
   2ef8c:	add	fp, sp, #16
   2ef90:	sub	sp, sp, #8
   2ef94:	movw	r3, #49875	; 0xc2d3
   2ef98:	mov	r5, r0
   2ef9c:	mov	r6, #0
   2efa0:	mov	r0, #4
   2efa4:	mov	r2, #0
   2efa8:	mov	r4, r1
   2efac:	stm	sp, {r0, r6}
   2efb0:	movt	r3, #4
   2efb4:	mov	r0, r5
   2efb8:	bl	3d7dc <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2efbc:	movw	r3, #49872	; 0xc2d0
   2efc0:	mov	r0, #1
   2efc4:	mov	r1, #7
   2efc8:	mov	r2, #1
   2efcc:	str	r1, [sp]
   2efd0:	str	r0, [sp, #4]
   2efd4:	movt	r3, #4
   2efd8:	mov	r0, r5
   2efdc:	mov	r1, r4
   2efe0:	bl	3d7dc <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2efe4:	movw	r3, #49880	; 0xc2d8
   2efe8:	mov	r0, #6
   2efec:	mov	r1, r4
   2eff0:	mov	r2, #2
   2eff4:	stm	sp, {r0, r6}
   2eff8:	movt	r3, #4
   2effc:	mov	r0, r5
   2f000:	bl	3d7dc <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2f004:	sub	sp, fp, #16
   2f008:	pop	{r4, r5, r6, sl, fp, pc}
   2f00c:	push	{r4, r5, r6, r7, fp, lr}
   2f010:	add	fp, sp, #16
   2f014:	sub	sp, sp, #16
   2f018:	movw	r7, #60548	; 0xec84
   2f01c:	movw	r3, #49016	; 0xbf78
   2f020:	mov	r5, r0
   2f024:	mov	r6, #2
   2f028:	mov	r0, #5
   2f02c:	mov	r2, #0
   2f030:	mov	r4, r1
   2f034:	movt	r7, #2
   2f038:	movt	r3, #4
   2f03c:	stm	sp, {r0, r6, r7}
   2f040:	mov	r0, r5
   2f044:	bl	3e8b0 <flatcc_json_printer_int8_enum_field@@Base>
   2f048:	movw	r3, #49488	; 0xc150
   2f04c:	mov	r0, #6
   2f050:	mov	r1, r4
   2f054:	mov	r2, #1
   2f058:	stm	sp, {r0, r6, r7}
   2f05c:	movt	r3, #4
   2f060:	mov	r0, r5
   2f064:	bl	3e8b0 <flatcc_json_printer_int8_enum_field@@Base>
   2f068:	movw	r3, #49495	; 0xc157
   2f06c:	mov	r0, r5
   2f070:	mov	r1, r4
   2f074:	mov	r2, #2
   2f078:	str	r6, [sp]
   2f07c:	str	r6, [sp, #4]
   2f080:	movt	r3, #4
   2f084:	bl	3d9e8 <flatcc_json_printer_uint8_field@@Base>
   2f088:	movw	r3, #49498	; 0xc15a
   2f08c:	mov	r0, #3
   2f090:	mov	r1, r4
   2f094:	mov	r2, #3
   2f098:	stm	sp, {r0, r6}
   2f09c:	movt	r3, #4
   2f0a0:	mov	r0, r5
   2f0a4:	bl	3d9e8 <flatcc_json_printer_uint8_field@@Base>
   2f0a8:	sub	sp, fp, #16
   2f0ac:	pop	{r4, r5, r6, r7, fp, pc}
   2f0b0:	bx	lr
   2f0b4:	push	{r4, r5, fp, lr}
   2f0b8:	add	fp, sp, #8
   2f0bc:	sub	sp, sp, #16
   2f0c0:	mov	r5, r0
   2f0c4:	movw	r0, #61792	; 0xf160
   2f0c8:	movw	r3, #49502	; 0xc15e
   2f0cc:	mov	r4, r1
   2f0d0:	mov	r1, #6
   2f0d4:	mov	r2, #0
   2f0d8:	movt	r0, #2
   2f0dc:	str	r1, [sp]
   2f0e0:	movt	r3, #4
   2f0e4:	mov	r1, r4
   2f0e8:	str	r0, [sp, #4]
   2f0ec:	mov	r0, r5
   2f0f0:	bl	46430 <flatcc_json_printer_table_field@@Base>
   2f0f4:	movw	r0, #61948	; 0xf1fc
   2f0f8:	movw	r3, #49509	; 0xc165
   2f0fc:	mov	r1, #5
   2f100:	mov	r2, #1
   2f104:	movt	r0, #2
   2f108:	str	r1, [sp]
   2f10c:	movt	r3, #4
   2f110:	mov	r1, r4
   2f114:	str	r0, [sp, #4]
   2f118:	mov	r0, r5
   2f11c:	bl	46430 <flatcc_json_printer_table_field@@Base>
   2f120:	movw	r0, #60892	; 0xeddc
   2f124:	movw	r1, #60776	; 0xed68
   2f128:	movw	r3, #49515	; 0xc16b
   2f12c:	mov	r2, #7
   2f130:	movt	r0, #2
   2f134:	movt	r1, #2
   2f138:	str	r2, [sp]
   2f13c:	movt	r3, #4
   2f140:	mov	r2, #3
   2f144:	str	r1, [sp, #4]
   2f148:	str	r0, [sp, #8]
   2f14c:	mov	r0, r5
   2f150:	mov	r1, r4
   2f154:	bl	46058 <flatcc_json_printer_union_vector_field@@Base>
   2f158:	sub	sp, fp, #8
   2f15c:	pop	{r4, r5, fp, pc}
   2f160:	push	{r4, r5, r6, sl, fp, lr}
   2f164:	add	fp, sp, #16
   2f168:	sub	sp, sp, #8
   2f16c:	mov	r5, r0
   2f170:	movw	r0, #62176	; 0xf2e0
   2f174:	movw	r3, #49523	; 0xc173
   2f178:	mov	r4, r1
   2f17c:	mov	r1, #21
   2f180:	mov	r2, #0
   2f184:	movt	r0, #2
   2f188:	str	r1, [sp]
   2f18c:	movt	r3, #4
   2f190:	mov	r1, r4
   2f194:	str	r0, [sp, #4]
   2f198:	mov	r0, r5
   2f19c:	bl	46430 <flatcc_json_printer_table_field@@Base>
   2f1a0:	movw	r0, #62500	; 0xf424
   2f1a4:	movw	r3, #49545	; 0xc189
   2f1a8:	mov	r6, #22
   2f1ac:	mov	r1, r4
   2f1b0:	mov	r2, #1
   2f1b4:	movt	r0, #2
   2f1b8:	movt	r3, #4
   2f1bc:	str	r6, [sp]
   2f1c0:	str	r0, [sp, #4]
   2f1c4:	mov	r0, r5
   2f1c8:	bl	46430 <flatcc_json_printer_table_field@@Base>
   2f1cc:	movw	r0, #62600	; 0xf488
   2f1d0:	movw	r3, #49568	; 0xc1a0
   2f1d4:	mov	r1, r4
   2f1d8:	mov	r2, #2
   2f1dc:	str	r6, [sp]
   2f1e0:	movt	r0, #2
   2f1e4:	movt	r3, #4
   2f1e8:	str	r0, [sp, #4]
   2f1ec:	mov	r0, r5
   2f1f0:	bl	46430 <flatcc_json_printer_table_field@@Base>
   2f1f4:	sub	sp, fp, #16
   2f1f8:	pop	{r4, r5, r6, sl, fp, pc}
   2f1fc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2f200:	add	fp, sp, #24
   2f204:	sub	sp, sp, #16
   2f208:	movw	r7, #62700	; 0xf4ec
   2f20c:	movw	r6, #62880	; 0xf5a0
   2f210:	movw	r3, #49718	; 0xc236
   2f214:	mov	r5, r0
   2f218:	mov	r0, #14
   2f21c:	mov	r2, #1
   2f220:	mov	r4, r1
   2f224:	movt	r7, #2
   2f228:	movt	r6, #2
   2f22c:	movt	r3, #4
   2f230:	stm	sp, {r0, r7}
   2f234:	mov	r0, r5
   2f238:	str	r6, [sp, #8]
   2f23c:	bl	46618 <flatcc_json_printer_union_field@@Base>
   2f240:	movw	r3, #49733	; 0xc245
   2f244:	mov	r8, #10
   2f248:	mov	r0, r5
   2f24c:	mov	r1, r4
   2f250:	mov	r2, #3
   2f254:	str	r7, [sp, #4]
   2f258:	str	r6, [sp, #8]
   2f25c:	movt	r3, #4
   2f260:	str	r8, [sp]
   2f264:	bl	46618 <flatcc_json_printer_union_field@@Base>
   2f268:	movw	r3, #49744	; 0xc250
   2f26c:	mov	r0, #9
   2f270:	mov	r1, r4
   2f274:	mov	r2, #5
   2f278:	mov	r9, #5
   2f27c:	stm	sp, {r0, r7}
   2f280:	movt	r3, #4
   2f284:	mov	r0, r5
   2f288:	str	r6, [sp, #8]
   2f28c:	bl	46618 <flatcc_json_printer_union_field@@Base>
   2f290:	movw	r3, #49754	; 0xc25a
   2f294:	mov	r0, r5
   2f298:	mov	r1, r4
   2f29c:	mov	r2, #7
   2f2a0:	str	r9, [sp]
   2f2a4:	str	r7, [sp, #4]
   2f2a8:	str	r6, [sp, #8]
   2f2ac:	movt	r3, #4
   2f2b0:	bl	46618 <flatcc_json_printer_union_field@@Base>
   2f2b4:	movw	r3, #49760	; 0xc260
   2f2b8:	mov	r0, r5
   2f2bc:	mov	r1, r4
   2f2c0:	mov	r2, #9
   2f2c4:	str	r8, [sp]
   2f2c8:	str	r7, [sp, #4]
   2f2cc:	str	r6, [sp, #8]
   2f2d0:	movt	r3, #4
   2f2d4:	bl	46058 <flatcc_json_printer_union_vector_field@@Base>
   2f2d8:	sub	sp, fp, #24
   2f2dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2f2e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2f2e4:	add	fp, sp, #24
   2f2e8:	sub	sp, sp, #16
   2f2ec:	movw	r3, #49591	; 0xc1b7
   2f2f0:	mov	r9, #4
   2f2f4:	mov	r2, #0
   2f2f8:	mov	r4, r1
   2f2fc:	mov	r5, r0
   2f300:	mov	r6, #0
   2f304:	movt	r3, #4
   2f308:	str	r9, [sp]
   2f30c:	bl	3d54c <flatcc_json_printer_string_field@@Base>
   2f310:	movw	r3, #49596	; 0xc1bc
   2f314:	mov	r8, #9
   2f318:	mov	r0, r5
   2f31c:	mov	r1, r4
   2f320:	mov	r2, #1
   2f324:	str	r6, [sp, #4]
   2f328:	movt	r3, #4
   2f32c:	str	r8, [sp]
   2f330:	bl	3dc00 <flatcc_json_printer_uint32_field@@Base>
   2f334:	movw	r3, #49606	; 0xc1c6
   2f338:	mov	r0, r5
   2f33c:	mov	r1, r4
   2f340:	mov	r2, #2
   2f344:	str	r9, [sp]
   2f348:	movt	r3, #4
   2f34c:	bl	3d54c <flatcc_json_printer_string_field@@Base>
   2f350:	movw	r3, #49611	; 0xc1cb
   2f354:	mov	r7, #8
   2f358:	mov	r0, r5
   2f35c:	mov	r1, r4
   2f360:	mov	r2, #3
   2f364:	str	r6, [sp, #8]
   2f368:	str	r6, [sp, #12]
   2f36c:	movt	r3, #4
   2f370:	str	r7, [sp]
   2f374:	bl	3e0d8 <flatcc_json_printer_int64_field@@Base>
   2f378:	movw	r3, #49620	; 0xc1d4
   2f37c:	mov	r0, r5
   2f380:	mov	r1, r4
   2f384:	mov	r2, #4
   2f388:	str	r9, [sp]
   2f38c:	movt	r3, #4
   2f390:	bl	3d54c <flatcc_json_printer_string_field@@Base>
   2f394:	movw	r3, #49625	; 0xc1d9
   2f398:	mov	r0, r5
   2f39c:	mov	r1, r4
   2f3a0:	mov	r2, #5
   2f3a4:	str	r6, [sp, #8]
   2f3a8:	str	r6, [sp, #12]
   2f3ac:	str	r7, [sp]
   2f3b0:	movt	r3, #4
   2f3b4:	bl	3e0d8 <flatcc_json_printer_int64_field@@Base>
   2f3b8:	movw	r3, #49634	; 0xc1e2
   2f3bc:	mov	r0, r5
   2f3c0:	mov	r1, r4
   2f3c4:	mov	r2, #6
   2f3c8:	str	r8, [sp]
   2f3cc:	str	r6, [sp, #4]
   2f3d0:	movt	r3, #4
   2f3d4:	bl	3dc00 <flatcc_json_printer_uint32_field@@Base>
   2f3d8:	movw	r3, #49644	; 0xc1ec
   2f3dc:	mov	r0, r5
   2f3e0:	mov	r1, r4
   2f3e4:	mov	r2, #7
   2f3e8:	str	r6, [sp, #8]
   2f3ec:	str	r6, [sp, #12]
   2f3f0:	str	r7, [sp]
   2f3f4:	movt	r3, #4
   2f3f8:	bl	3e0d8 <flatcc_json_printer_int64_field@@Base>
   2f3fc:	movw	r3, #49653	; 0xc1f5
   2f400:	mov	r0, r5
   2f404:	mov	r1, r4
   2f408:	mov	r2, #8
   2f40c:	str	r8, [sp]
   2f410:	str	r6, [sp, #4]
   2f414:	movt	r3, #4
   2f418:	bl	3dc00 <flatcc_json_printer_uint32_field@@Base>
   2f41c:	sub	sp, fp, #24
   2f420:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2f424:	push	{r4, r5, r6, sl, fp, lr}
   2f428:	add	fp, sp, #16
   2f42c:	sub	sp, sp, #16
   2f430:	movw	r3, #49663	; 0xc1ff
   2f434:	mov	r5, r0
   2f438:	mov	r0, #15
   2f43c:	mov	r6, #0
   2f440:	mov	r2, #0
   2f444:	mov	r4, r1
   2f448:	str	r0, [sp]
   2f44c:	movt	r3, #4
   2f450:	mov	r0, r5
   2f454:	str	r6, [sp, #8]
   2f458:	str	r6, [sp, #12]
   2f45c:	bl	3e0d8 <flatcc_json_printer_int64_field@@Base>
   2f460:	movw	r3, #49679	; 0xc20f
   2f464:	mov	r0, #16
   2f468:	mov	r1, r4
   2f46c:	mov	r2, #1
   2f470:	stm	sp, {r0, r6}
   2f474:	movt	r3, #4
   2f478:	mov	r0, r5
   2f47c:	bl	3dc00 <flatcc_json_printer_uint32_field@@Base>
   2f480:	sub	sp, fp, #16
   2f484:	pop	{r4, r5, r6, sl, fp, pc}
   2f488:	push	{r4, r5, r6, sl, fp, lr}
   2f48c:	add	fp, sp, #16
   2f490:	sub	sp, sp, #16
   2f494:	movw	r3, #49663	; 0xc1ff
   2f498:	mov	r5, r0
   2f49c:	mov	r0, #15
   2f4a0:	mov	r6, #0
   2f4a4:	mov	r2, #0
   2f4a8:	mov	r4, r1
   2f4ac:	str	r0, [sp]
   2f4b0:	movt	r3, #4
   2f4b4:	mov	r0, r5
   2f4b8:	str	r6, [sp, #8]
   2f4bc:	str	r6, [sp, #12]
   2f4c0:	bl	3e0d8 <flatcc_json_printer_int64_field@@Base>
   2f4c4:	movw	r3, #49696	; 0xc220
   2f4c8:	mov	r0, #21
   2f4cc:	mov	r1, r4
   2f4d0:	mov	r2, #1
   2f4d4:	stm	sp, {r0, r6}
   2f4d8:	movt	r3, #4
   2f4dc:	mov	r0, r5
   2f4e0:	bl	3dc00 <flatcc_json_printer_uint32_field@@Base>
   2f4e4:	sub	sp, fp, #16
   2f4e8:	pop	{r4, r5, r6, sl, fp, pc}
   2f4ec:	sub	r2, r1, #2
   2f4f0:	cmp	r2, #9
   2f4f4:	bhi	2f538 <main@@Base+0x1949c>
   2f4f8:	add	r1, pc, #0
   2f4fc:	ldr	pc, [r1, r2, lsl #2]
   2f500:	andeq	pc, r2, r8, lsr #10
   2f504:	andeq	pc, r2, r0, asr r5	; <UNPREDICTABLE>
   2f508:	andeq	pc, r2, r0, asr r5	; <UNPREDICTABLE>
   2f50c:	andeq	pc, r2, r0, asr r5	; <UNPREDICTABLE>
   2f510:	andeq	pc, r2, r0, asr r5	; <UNPREDICTABLE>
   2f514:	andeq	pc, r2, r0, asr r5	; <UNPREDICTABLE>
   2f518:	andeq	pc, r2, r0, ror #10
   2f51c:	andeq	pc, r2, r0, ror r5	; <UNPREDICTABLE>
   2f520:	andeq	pc, r2, r0, lsl #11
   2f524:	muleq	r2, r0, r5
   2f528:	movw	r1, #49771	; 0xc26b
   2f52c:	mov	r2, #5
   2f530:	movt	r1, #4
   2f534:	b	3d360 <flatcc_json_printer_enum@@Base>
   2f538:	cmp	r1, #255	; 0xff
   2f53c:	bne	2f550 <main@@Base+0x194b4>
   2f540:	movw	r1, #49806	; 0xc28e
   2f544:	mov	r2, #6
   2f548:	movt	r1, #4
   2f54c:	b	3d360 <flatcc_json_printer_enum@@Base>
   2f550:	movw	r1, #55892	; 0xda54
   2f554:	mov	r2, #4
   2f558:	movt	r1, #4
   2f55c:	b	3d360 <flatcc_json_printer_enum@@Base>
   2f560:	movw	r1, #49777	; 0xc271
   2f564:	mov	r2, #8
   2f568:	movt	r1, #4
   2f56c:	b	3d360 <flatcc_json_printer_enum@@Base>
   2f570:	movw	r1, #49786	; 0xc27a
   2f574:	mov	r2, #5
   2f578:	movt	r1, #4
   2f57c:	b	3d360 <flatcc_json_printer_enum@@Base>
   2f580:	movw	r1, #49792	; 0xc280
   2f584:	mov	r2, #7
   2f588:	movt	r1, #4
   2f58c:	b	3d360 <flatcc_json_printer_enum@@Base>
   2f590:	movw	r1, #49800	; 0xc288
   2f594:	mov	r2, #5
   2f598:	movt	r1, #4
   2f59c:	b	3d360 <flatcc_json_printer_enum@@Base>
   2f5a0:	ldrb	r3, [r1, #8]
   2f5a4:	sub	r2, r3, #2
   2f5a8:	cmp	r2, #9
   2f5ac:	bhi	2f5ec <main@@Base+0x19550>
   2f5b0:	add	r3, pc, #0
   2f5b4:	ldr	pc, [r3, r2, lsl #2]
   2f5b8:	strdeq	pc, [r2], -r8
   2f5bc:	andeq	pc, r2, r0, lsl r6	; <UNPREDICTABLE>
   2f5c0:	andeq	pc, r2, r0, lsl r6	; <UNPREDICTABLE>
   2f5c4:	andeq	pc, r2, r0, lsl r6	; <UNPREDICTABLE>
   2f5c8:	andeq	pc, r2, r0, lsl r6	; <UNPREDICTABLE>
   2f5cc:	andeq	pc, r2, r0, lsl r6	; <UNPREDICTABLE>
   2f5d0:	andeq	pc, r2, r4, lsl #12
   2f5d4:	andeq	pc, r2, r0, ror #11
   2f5d8:	andeq	pc, r2, r0, ror #11
   2f5dc:	strdeq	pc, [r2], -r4
   2f5e0:	movw	r2, #63104	; 0xf680
   2f5e4:	movt	r2, #2
   2f5e8:	b	46c8c <flatcc_json_printer_union_struct@@Base>
   2f5ec:	cmp	r3, #255	; 0xff
   2f5f0:	bxne	lr
   2f5f4:	b	46dac <flatcc_json_printer_union_string@@Base>
   2f5f8:	movw	r2, #62996	; 0xf614
   2f5fc:	movt	r2, #2
   2f600:	b	46b0c <flatcc_json_printer_union_table@@Base>
   2f604:	movw	r2, #63048	; 0xf648
   2f608:	movt	r2, #2
   2f60c:	b	46c8c <flatcc_json_printer_union_struct@@Base>
   2f610:	bx	lr
   2f614:	push	{fp, lr}
   2f618:	mov	fp, sp
   2f61c:	sub	sp, sp, #8
   2f620:	mov	r3, #19
   2f624:	mov	r2, #0
   2f628:	str	r3, [sp]
   2f62c:	movw	r3, #49813	; 0xc295
   2f630:	str	r2, [sp, #4]
   2f634:	mov	r2, #0
   2f638:	movt	r3, #4
   2f63c:	bl	3e000 <flatcc_json_printer_int32_field@@Base>
   2f640:	mov	sp, fp
   2f644:	pop	{fp, pc}
   2f648:	push	{fp, lr}
   2f64c:	mov	fp, sp
   2f650:	sub	sp, sp, #8
   2f654:	movw	r3, #49833	; 0xc2a9
   2f658:	mov	r2, r1
   2f65c:	mov	r1, #11
   2f660:	movt	r3, #4
   2f664:	str	r1, [sp, #4]
   2f668:	mov	r1, #0
   2f66c:	str	r3, [sp]
   2f670:	mov	r3, #0
   2f674:	bl	3efa8 <flatcc_json_printer_uint16_struct_field@@Base>
   2f678:	mov	sp, fp
   2f67c:	pop	{fp, pc}
   2f680:	push	{fp, lr}
   2f684:	mov	fp, sp
   2f688:	sub	sp, sp, #8
   2f68c:	movw	r3, #49845	; 0xc2b5
   2f690:	mov	r2, r1
   2f694:	mov	r1, #10
   2f698:	movt	r3, #4
   2f69c:	str	r1, [sp, #4]
   2f6a0:	mov	r1, #0
   2f6a4:	str	r3, [sp]
   2f6a8:	mov	r3, #0
   2f6ac:	bl	3f248 <flatcc_json_printer_int32_struct_field@@Base>
   2f6b0:	mov	sp, fp
   2f6b4:	pop	{fp, pc}
   2f6b8:	ldrb	r1, [r0, #12]
   2f6bc:	sub	r1, r1, #1
   2f6c0:	uxtb	r2, r1
   2f6c4:	cmp	r2, #3
   2f6c8:	movhi	r0, #0
   2f6cc:	bxhi	lr
   2f6d0:	movw	r2, #50004	; 0xc354
   2f6d4:	sxtb	r1, r1
   2f6d8:	movt	r2, #4
   2f6dc:	ldr	r1, [r2, r1, lsl #2]
   2f6e0:	b	35738 <flatcc_verify_union_table@@Base>
   2f6e4:	push	{r4, sl, fp, lr}
   2f6e8:	add	fp, sp, #8
   2f6ec:	mov	r1, #0
   2f6f0:	mov	r2, #0
   2f6f4:	mov	r4, r0
   2f6f8:	bl	34f4c <flatcc_verify_string_field@@Base>
   2f6fc:	cmp	r0, #0
   2f700:	popne	{r4, sl, fp, pc}
   2f704:	mov	r0, r4
   2f708:	mov	r1, #1
   2f70c:	mov	r2, #8
   2f710:	mov	r3, #8
   2f714:	bl	34ec8 <flatcc_verify_field@@Base>
   2f718:	cmp	r0, #0
   2f71c:	beq	2f724 <main@@Base+0x19688>
   2f720:	pop	{r4, sl, fp, pc}
   2f724:	mov	r0, r4
   2f728:	mov	r1, #2
   2f72c:	mov	r2, #2
   2f730:	mov	r3, #2
   2f734:	pop	{r4, sl, fp, lr}
   2f738:	b	34ec8 <flatcc_verify_field@@Base>
   2f73c:	mov	r0, #0
   2f740:	bx	lr
   2f744:	push	{r4, r5, r6, sl, fp, lr}
   2f748:	add	fp, sp, #16
   2f74c:	sub	sp, sp, #8
   2f750:	mvn	r5, #0
   2f754:	mov	r6, #1
   2f758:	mov	r1, #0
   2f75c:	mov	r2, #0
   2f760:	mov	r3, #1
   2f764:	mov	r4, r0
   2f768:	str	r6, [sp]
   2f76c:	str	r5, [sp, #4]
   2f770:	bl	35030 <flatcc_verify_vector_field@@Base>
   2f774:	cmp	r0, #0
   2f778:	bne	2f7a0 <main@@Base+0x19704>
   2f77c:	mov	r0, r4
   2f780:	mov	r1, #1
   2f784:	mov	r2, #0
   2f788:	mov	r3, #1
   2f78c:	str	r6, [sp]
   2f790:	str	r5, [sp, #4]
   2f794:	bl	35030 <flatcc_verify_vector_field@@Base>
   2f798:	cmp	r0, #0
   2f79c:	beq	2f7a8 <main@@Base+0x1970c>
   2f7a0:	sub	sp, fp, #16
   2f7a4:	pop	{r4, r5, r6, sl, fp, pc}
   2f7a8:	movw	r0, #7808	; 0x1e80
   2f7ac:	mov	r1, #1
   2f7b0:	mov	r2, #0
   2f7b4:	mov	r3, #0
   2f7b8:	movt	r0, #2
   2f7bc:	str	r1, [sp]
   2f7c0:	mov	r1, #2
   2f7c4:	str	r0, [sp, #4]
   2f7c8:	mov	r0, r4
   2f7cc:	bl	3603c <flatcc_verify_table_as_nested_root@@Base>
   2f7d0:	sub	sp, fp, #16
   2f7d4:	pop	{r4, r5, r6, sl, fp, pc}
   2f7d8:	push	{r4, sl, fp, lr}
   2f7dc:	add	fp, sp, #8
   2f7e0:	mov	r1, #0
   2f7e4:	mov	r2, #1
   2f7e8:	mov	r3, #1
   2f7ec:	mov	r4, r0
   2f7f0:	bl	34ec8 <flatcc_verify_field@@Base>
   2f7f4:	cmp	r0, #0
   2f7f8:	bne	2f834 <main@@Base+0x19798>
   2f7fc:	mov	r0, r4
   2f800:	mov	r1, #1
   2f804:	mov	r2, #1
   2f808:	mov	r3, #1
   2f80c:	bl	34ec8 <flatcc_verify_field@@Base>
   2f810:	cmp	r0, #0
   2f814:	popne	{r4, sl, fp, pc}
   2f818:	mov	r0, r4
   2f81c:	mov	r1, #2
   2f820:	mov	r2, #1
   2f824:	mov	r3, #1
   2f828:	bl	34ec8 <flatcc_verify_field@@Base>
   2f82c:	cmp	r0, #0
   2f830:	beq	2f838 <main@@Base+0x1979c>
   2f834:	pop	{r4, sl, fp, pc}
   2f838:	mov	r0, r4
   2f83c:	mov	r1, #3
   2f840:	mov	r2, #1
   2f844:	mov	r3, #1
   2f848:	pop	{r4, sl, fp, lr}
   2f84c:	b	34ec8 <flatcc_verify_field@@Base>
   2f850:	mov	r0, #0
   2f854:	bx	lr
   2f858:	push	{r4, sl, fp, lr}
   2f85c:	add	fp, sp, #8
   2f860:	movw	r3, #63680	; 0xf8c0
   2f864:	mov	r1, #0
   2f868:	mov	r2, #0
   2f86c:	mov	r4, r0
   2f870:	movt	r3, #2
   2f874:	bl	352cc <flatcc_verify_table_field@@Base>
   2f878:	cmp	r0, #0
   2f87c:	popne	{r4, sl, fp, pc}
   2f880:	movw	r3, #63784	; 0xf928
   2f884:	mov	r0, r4
   2f888:	mov	r1, #1
   2f88c:	mov	r2, #0
   2f890:	movt	r3, #2
   2f894:	bl	352cc <flatcc_verify_table_field@@Base>
   2f898:	cmp	r0, #0
   2f89c:	beq	2f8a4 <main@@Base+0x19808>
   2f8a0:	pop	{r4, sl, fp, pc}
   2f8a4:	movw	r3, #63160	; 0xf6b8
   2f8a8:	mov	r0, r4
   2f8ac:	mov	r1, #3
   2f8b0:	mov	r2, #0
   2f8b4:	movt	r3, #2
   2f8b8:	pop	{r4, sl, fp, lr}
   2f8bc:	b	364f8 <flatcc_verify_union_vector_field@@Base>
   2f8c0:	push	{r4, sl, fp, lr}
   2f8c4:	add	fp, sp, #8
   2f8c8:	movw	r3, #63952	; 0xf9d0
   2f8cc:	mov	r1, #0
   2f8d0:	mov	r2, #0
   2f8d4:	mov	r4, r0
   2f8d8:	movt	r3, #2
   2f8dc:	bl	352cc <flatcc_verify_table_field@@Base>
   2f8e0:	cmp	r0, #0
   2f8e4:	popne	{r4, sl, fp, pc}
   2f8e8:	movw	r3, #64200	; 0xfac8
   2f8ec:	mov	r0, r4
   2f8f0:	mov	r1, #1
   2f8f4:	mov	r2, #0
   2f8f8:	movt	r3, #2
   2f8fc:	bl	352cc <flatcc_verify_table_field@@Base>
   2f900:	cmp	r0, #0
   2f904:	beq	2f90c <main@@Base+0x19870>
   2f908:	pop	{r4, sl, fp, pc}
   2f90c:	movw	r3, #64260	; 0xfb04
   2f910:	mov	r0, r4
   2f914:	mov	r1, #2
   2f918:	mov	r2, #0
   2f91c:	movt	r3, #2
   2f920:	pop	{r4, sl, fp, lr}
   2f924:	b	352cc <flatcc_verify_table_field@@Base>
   2f928:	push	{r4, sl, fp, lr}
   2f92c:	add	fp, sp, #8
   2f930:	movw	r3, #64320	; 0xfb40
   2f934:	mov	r1, #1
   2f938:	mov	r2, #0
   2f93c:	mov	r4, r0
   2f940:	movt	r3, #2
   2f944:	bl	36374 <flatcc_verify_union_field@@Base>
   2f948:	cmp	r0, #0
   2f94c:	bne	2f9b0 <main@@Base+0x19914>
   2f950:	movw	r3, #64320	; 0xfb40
   2f954:	mov	r0, r4
   2f958:	mov	r1, #3
   2f95c:	mov	r2, #0
   2f960:	movt	r3, #2
   2f964:	bl	36374 <flatcc_verify_union_field@@Base>
   2f968:	cmp	r0, #0
   2f96c:	bne	2f9b0 <main@@Base+0x19914>
   2f970:	movw	r3, #64320	; 0xfb40
   2f974:	mov	r0, r4
   2f978:	mov	r1, #5
   2f97c:	mov	r2, #0
   2f980:	movt	r3, #2
   2f984:	bl	36374 <flatcc_verify_union_field@@Base>
   2f988:	cmp	r0, #0
   2f98c:	popne	{r4, sl, fp, pc}
   2f990:	movw	r3, #64320	; 0xfb40
   2f994:	mov	r0, r4
   2f998:	mov	r1, #7
   2f99c:	mov	r2, #0
   2f9a0:	movt	r3, #2
   2f9a4:	bl	36374 <flatcc_verify_union_field@@Base>
   2f9a8:	cmp	r0, #0
   2f9ac:	beq	2f9b4 <main@@Base+0x19918>
   2f9b0:	pop	{r4, sl, fp, pc}
   2f9b4:	movw	r3, #64320	; 0xfb40
   2f9b8:	mov	r0, r4
   2f9bc:	mov	r1, #9
   2f9c0:	mov	r2, #0
   2f9c4:	movt	r3, #2
   2f9c8:	pop	{r4, sl, fp, lr}
   2f9cc:	b	364f8 <flatcc_verify_union_vector_field@@Base>
   2f9d0:	push	{r4, sl, fp, lr}
   2f9d4:	add	fp, sp, #8
   2f9d8:	mov	r1, #0
   2f9dc:	mov	r2, #0
   2f9e0:	mov	r4, r0
   2f9e4:	bl	34f4c <flatcc_verify_string_field@@Base>
   2f9e8:	cmp	r0, #0
   2f9ec:	bne	2faac <main@@Base+0x19a10>
   2f9f0:	mov	r0, r4
   2f9f4:	mov	r1, #1
   2f9f8:	mov	r2, #4
   2f9fc:	mov	r3, #4
   2fa00:	bl	34ec8 <flatcc_verify_field@@Base>
   2fa04:	cmp	r0, #0
   2fa08:	bne	2faac <main@@Base+0x19a10>
   2fa0c:	mov	r0, r4
   2fa10:	mov	r1, #2
   2fa14:	mov	r2, #0
   2fa18:	bl	34f4c <flatcc_verify_string_field@@Base>
   2fa1c:	cmp	r0, #0
   2fa20:	bne	2faac <main@@Base+0x19a10>
   2fa24:	mov	r0, r4
   2fa28:	mov	r1, #3
   2fa2c:	mov	r2, #8
   2fa30:	mov	r3, #8
   2fa34:	bl	34ec8 <flatcc_verify_field@@Base>
   2fa38:	cmp	r0, #0
   2fa3c:	bne	2faac <main@@Base+0x19a10>
   2fa40:	mov	r0, r4
   2fa44:	mov	r1, #4
   2fa48:	mov	r2, #0
   2fa4c:	bl	34f4c <flatcc_verify_string_field@@Base>
   2fa50:	cmp	r0, #0
   2fa54:	bne	2faac <main@@Base+0x19a10>
   2fa58:	mov	r0, r4
   2fa5c:	mov	r1, #5
   2fa60:	mov	r2, #8
   2fa64:	mov	r3, #8
   2fa68:	bl	34ec8 <flatcc_verify_field@@Base>
   2fa6c:	cmp	r0, #0
   2fa70:	bne	2faac <main@@Base+0x19a10>
   2fa74:	mov	r0, r4
   2fa78:	mov	r1, #6
   2fa7c:	mov	r2, #4
   2fa80:	mov	r3, #4
   2fa84:	bl	34ec8 <flatcc_verify_field@@Base>
   2fa88:	cmp	r0, #0
   2fa8c:	popne	{r4, sl, fp, pc}
   2fa90:	mov	r0, r4
   2fa94:	mov	r1, #7
   2fa98:	mov	r2, #8
   2fa9c:	mov	r3, #8
   2faa0:	bl	34ec8 <flatcc_verify_field@@Base>
   2faa4:	cmp	r0, #0
   2faa8:	beq	2fab0 <main@@Base+0x19a14>
   2faac:	pop	{r4, sl, fp, pc}
   2fab0:	mov	r0, r4
   2fab4:	mov	r1, #8
   2fab8:	mov	r2, #4
   2fabc:	mov	r3, #4
   2fac0:	pop	{r4, sl, fp, lr}
   2fac4:	b	34ec8 <flatcc_verify_field@@Base>
   2fac8:	push	{r4, sl, fp, lr}
   2facc:	add	fp, sp, #8
   2fad0:	mov	r1, #0
   2fad4:	mov	r2, #8
   2fad8:	mov	r3, #8
   2fadc:	mov	r4, r0
   2fae0:	bl	34ec8 <flatcc_verify_field@@Base>
   2fae4:	cmp	r0, #0
   2fae8:	popne	{r4, sl, fp, pc}
   2faec:	mov	r0, r4
   2faf0:	mov	r1, #1
   2faf4:	mov	r2, #4
   2faf8:	mov	r3, #4
   2fafc:	pop	{r4, sl, fp, lr}
   2fb00:	b	34ec8 <flatcc_verify_field@@Base>
   2fb04:	push	{r4, sl, fp, lr}
   2fb08:	add	fp, sp, #8
   2fb0c:	mov	r1, #0
   2fb10:	mov	r2, #8
   2fb14:	mov	r3, #8
   2fb18:	mov	r4, r0
   2fb1c:	bl	34ec8 <flatcc_verify_field@@Base>
   2fb20:	cmp	r0, #0
   2fb24:	popne	{r4, sl, fp, pc}
   2fb28:	mov	r0, r4
   2fb2c:	mov	r1, #1
   2fb30:	mov	r2, #4
   2fb34:	mov	r3, #4
   2fb38:	pop	{r4, sl, fp, lr}
   2fb3c:	b	34ec8 <flatcc_verify_field@@Base>
   2fb40:	ldrb	r2, [r0, #12]
   2fb44:	sub	r1, r2, #2
   2fb48:	cmp	r1, #9
   2fb4c:	bhi	2fb8c <main@@Base+0x19af0>
   2fb50:	add	r2, pc, #0
   2fb54:	ldr	pc, [r2, r1, lsl #2]
   2fb58:	andeq	pc, r2, r0, lsr #23
   2fb5c:	muleq	r2, r8, fp
   2fb60:	muleq	r2, r8, fp
   2fb64:	muleq	r2, r8, fp
   2fb68:	muleq	r2, r8, fp
   2fb6c:	muleq	r2, r8, fp
   2fb70:	andeq	pc, r2, ip, lsr #23
   2fb74:	andeq	pc, r2, r0, lsl #23
   2fb78:	andeq	pc, r2, r0, lsl #23
   2fb7c:	muleq	r2, r4, fp
   2fb80:	mov	r1, #4
   2fb84:	mov	r2, #4
   2fb88:	b	35820 <flatcc_verify_union_struct@@Base>
   2fb8c:	cmp	r2, #255	; 0xff
   2fb90:	bne	2fb98 <main@@Base+0x19afc>
   2fb94:	b	35878 <flatcc_verify_union_string@@Base>
   2fb98:	mov	r0, #0
   2fb9c:	bx	lr
   2fba0:	movw	r1, #64440	; 0xfbb8
   2fba4:	movt	r1, #2
   2fba8:	b	35738 <flatcc_verify_union_table@@Base>
   2fbac:	mov	r1, #2
   2fbb0:	mov	r2, #2
   2fbb4:	b	35820 <flatcc_verify_union_struct@@Base>
   2fbb8:	mov	r1, #0
   2fbbc:	mov	r2, #4
   2fbc0:	mov	r3, #4
   2fbc4:	b	34ec8 <flatcc_verify_field@@Base>

0002fbc8 <flatcc_builder_default_alloc@@Base>:
   2fbc8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2fbcc:	add	fp, sp, #24
   2fbd0:	mov	r4, r1
   2fbd4:	cmp	r2, #0
   2fbd8:	beq	2fc20 <flatcc_builder_default_alloc@@Base+0x58>
   2fbdc:	ldr	r0, [fp, #8]
   2fbe0:	mov	r8, r3
   2fbe4:	sub	r1, r0, #1
   2fbe8:	cmp	r1, #6
   2fbec:	bhi	2fc4c <flatcc_builder_default_alloc@@Base+0x84>
   2fbf0:	add	r3, pc, #4
   2fbf4:	mov	r0, #256	; 0x100
   2fbf8:	ldr	pc, [r3, r1, lsl #2]
   2fbfc:	andeq	pc, r2, r0, ror #24
   2fc00:	andeq	pc, r2, ip, asr #24
   2fc04:	andeq	pc, r2, ip, asr #24
   2fc08:	andeq	pc, r2, r8, lsl ip	; <UNPREDICTABLE>
   2fc0c:	andeq	pc, r2, r4, asr ip	; <UNPREDICTABLE>
   2fc10:	andeq	pc, r2, ip, asr #24
   2fc14:	andeq	pc, r2, ip, asr ip	; <UNPREDICTABLE>
   2fc18:	mov	r0, #288	; 0x120
   2fc1c:	b	2fc60 <flatcc_builder_default_alloc@@Base+0x98>
   2fc20:	ldr	r0, [r4]
   2fc24:	cmp	r0, #0
   2fc28:	moveq	r6, #0
   2fc2c:	moveq	r0, r6
   2fc30:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2fc34:	bl	14e54 <free@plt>
   2fc38:	mov	r6, #0
   2fc3c:	mov	r0, r6
   2fc40:	str	r6, [r4]
   2fc44:	str	r6, [r4, #4]
   2fc48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2fc4c:	mov	r0, #32
   2fc50:	b	2fc60 <flatcc_builder_default_alloc@@Base+0x98>
   2fc54:	mov	r0, r2
   2fc58:	b	2fc60 <flatcc_builder_default_alloc@@Base+0x98>
   2fc5c:	mov	r0, #64	; 0x40
   2fc60:	mov	r7, r0
   2fc64:	lsl	r0, r0, #1
   2fc68:	cmp	r7, r2
   2fc6c:	bcc	2fc60 <flatcc_builder_default_alloc@@Base+0x98>
   2fc70:	ldr	r0, [r4, #4]
   2fc74:	mov	r6, #0
   2fc78:	cmp	r0, r2
   2fc7c:	lsrcs	r0, r0, #1
   2fc80:	cmpcs	r0, r7
   2fc84:	bcs	2fcbc <flatcc_builder_default_alloc@@Base+0xf4>
   2fc88:	ldr	r0, [r4]
   2fc8c:	mov	r1, r7
   2fc90:	bl	14e90 <realloc@plt>
   2fc94:	cmp	r0, #0
   2fc98:	mvneq	r6, #0
   2fc9c:	moveq	r0, r6
   2fca0:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2fca4:	cmp	r8, #0
   2fca8:	mov	r5, r0
   2fcac:	ldrne	r1, [r4, #4]
   2fcb0:	cmpne	r7, r1
   2fcb4:	bhi	2fcc4 <flatcc_builder_default_alloc@@Base+0xfc>
   2fcb8:	stm	r4, {r5, r7}
   2fcbc:	mov	r0, r6
   2fcc0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2fcc4:	add	r0, r5, r1
   2fcc8:	sub	r2, r7, r1
   2fccc:	mov	r1, #0
   2fcd0:	bl	14ef0 <memset@plt>
   2fcd4:	b	2fcb8 <flatcc_builder_default_alloc@@Base+0xf0>

0002fcd8 <flatcc_builder_flush_vtable_cache@@Base>:
   2fcd8:	push	{r4, r5, fp, lr}
   2fcdc:	add	fp, sp, #8
   2fce0:	mov	r4, r0
   2fce4:	ldr	r0, [r0, #116]	; 0x74
   2fce8:	cmp	r0, #0
   2fcec:	popeq	{r4, r5, fp, pc}
   2fcf0:	ldr	r0, [r4, #92]	; 0x5c
   2fcf4:	ldr	r2, [r4, #96]	; 0x60
   2fcf8:	mov	r1, #0
   2fcfc:	mov	r5, #0
   2fd00:	bl	14ef0 <memset@plt>
   2fd04:	mov	r0, #16
   2fd08:	str	r5, [r4, #120]	; 0x78
   2fd0c:	str	r0, [r4, #124]	; 0x7c
   2fd10:	pop	{r4, r5, fp, pc}

0002fd14 <flatcc_builder_custom_init@@Base>:
   2fd14:	push	{r4, r5, r6, r7, fp, lr}
   2fd18:	add	fp, sp, #16
   2fd1c:	mov	r6, r2
   2fd20:	mov	r7, r1
   2fd24:	mov	r1, #0
   2fd28:	mov	r2, #232	; 0xe8
   2fd2c:	mov	r5, r3
   2fd30:	mov	r4, r0
   2fd34:	bl	14ef0 <memset@plt>
   2fd38:	ldr	r0, [fp, #8]
   2fd3c:	cmp	r7, #0
   2fd40:	bne	2fd58 <flatcc_builder_custom_init@@Base+0x44>
   2fd44:	movw	r7, #19060	; 0x4a74
   2fd48:	mov	r1, #1
   2fd4c:	add	r6, r4, #188	; 0xbc
   2fd50:	movt	r7, #3
   2fd54:	str	r1, [r4, #184]	; 0xb8
   2fd58:	movw	r1, #64456	; 0xfbc8
   2fd5c:	cmp	r5, #0
   2fd60:	str	r6, [r4, #36]	; 0x24
   2fd64:	str	r0, [r4, #40]	; 0x28
   2fd68:	mov	r0, #0
   2fd6c:	str	r7, [r4, #44]	; 0x2c
   2fd70:	movt	r1, #2
   2fd74:	movne	r1, r5
   2fd78:	str	r1, [r4, #48]	; 0x30
   2fd7c:	pop	{r4, r5, r6, r7, fp, pc}

0002fd80 <flatcc_builder_init@@Base>:
   2fd80:	push	{r4, r5, fp, lr}
   2fd84:	add	fp, sp, #8
   2fd88:	mov	r1, #0
   2fd8c:	mov	r2, #232	; 0xe8
   2fd90:	mov	r4, r0
   2fd94:	mov	r5, #0
   2fd98:	bl	14ef0 <memset@plt>
   2fd9c:	mov	r0, #1
   2fda0:	movw	r2, #19060	; 0x4a74
   2fda4:	add	r1, r4, #188	; 0xbc
   2fda8:	str	r0, [r4, #184]	; 0xb8
   2fdac:	movw	r0, #64456	; 0xfbc8
   2fdb0:	movt	r2, #3
   2fdb4:	str	r1, [r4, #36]	; 0x24
   2fdb8:	str	r5, [r4, #40]	; 0x28
   2fdbc:	movt	r0, #2
   2fdc0:	str	r2, [r4, #44]	; 0x2c
   2fdc4:	str	r0, [r4, #48]	; 0x30
   2fdc8:	mov	r0, #0
   2fdcc:	pop	{r4, r5, fp, pc}

0002fdd0 <flatcc_builder_custom_reset@@Base>:
   2fdd0:	push	{r4, r5, r6, sl, fp, lr}
   2fdd4:	add	fp, sp, #16
   2fdd8:	sub	sp, sp, #8
   2fddc:	mov	r5, r1
   2fde0:	mov	r4, r0
   2fde4:	cmp	r2, #0
   2fde8:	beq	2fe48 <flatcc_builder_custom_reset@@Base+0x78>
   2fdec:	mov	r1, r4
   2fdf0:	ldr	r0, [r1, #52]!	; 0x34
   2fdf4:	cmp	r0, #0
   2fdf8:	beq	2fe74 <flatcc_builder_custom_reset@@Base+0xa4>
   2fdfc:	ldr	r0, [r4, #40]	; 0x28
   2fe00:	ldr	r6, [r4, #48]	; 0x30
   2fe04:	mov	r2, #0
   2fe08:	mov	r3, #1
   2fe0c:	str	r2, [sp]
   2fe10:	mov	r2, #1
   2fe14:	blx	r6
   2fe18:	mvn	r6, #0
   2fe1c:	cmp	r0, #0
   2fe20:	bne	30128 <flatcc_builder_custom_reset@@Base+0x358>
   2fe24:	ldr	r0, [r4, #52]	; 0x34
   2fe28:	ldr	r2, [r4, #56]	; 0x38
   2fe2c:	mov	r1, #0
   2fe30:	bl	14ef0 <memset@plt>
   2fe34:	mov	r1, r4
   2fe38:	ldr	r0, [r1, #60]!	; 0x3c
   2fe3c:	cmp	r0, #0
   2fe40:	bne	2fe90 <flatcc_builder_custom_reset@@Base+0xc0>
   2fe44:	b	2fedc <flatcc_builder_custom_reset@@Base+0x10c>
   2fe48:	ldr	r0, [r4, #52]	; 0x34
   2fe4c:	ldr	r2, [r4, #56]	; 0x38
   2fe50:	cmp	r0, #0
   2fe54:	beq	2ff44 <flatcc_builder_custom_reset@@Base+0x174>
   2fe58:	mov	r1, #0
   2fe5c:	bl	14ef0 <memset@plt>
   2fe60:	ldr	r0, [r4, #60]	; 0x3c
   2fe64:	ldr	r2, [r4, #64]	; 0x40
   2fe68:	cmp	r0, #0
   2fe6c:	bne	2ff5c <flatcc_builder_custom_reset@@Base+0x18c>
   2fe70:	b	2ff78 <flatcc_builder_custom_reset@@Base+0x1a8>
   2fe74:	ldr	r0, [r4, #56]	; 0x38
   2fe78:	cmp	r0, #0
   2fe7c:	bne	302fc <flatcc_builder_custom_reset@@Base+0x52c>
   2fe80:	mov	r1, r4
   2fe84:	ldr	r0, [r1, #60]!	; 0x3c
   2fe88:	cmp	r0, #0
   2fe8c:	beq	2fedc <flatcc_builder_custom_reset@@Base+0x10c>
   2fe90:	ldr	r0, [r4, #40]	; 0x28
   2fe94:	ldr	r6, [r4, #48]	; 0x30
   2fe98:	mov	r2, #1
   2fe9c:	mov	r3, #1
   2fea0:	str	r2, [sp]
   2fea4:	mov	r2, #1
   2fea8:	blx	r6
   2feac:	mvn	r6, #0
   2feb0:	cmp	r0, #0
   2feb4:	bne	30128 <flatcc_builder_custom_reset@@Base+0x358>
   2feb8:	ldr	r0, [r4, #60]	; 0x3c
   2febc:	ldr	r2, [r4, #64]	; 0x40
   2fec0:	mov	r1, #0
   2fec4:	bl	14ef0 <memset@plt>
   2fec8:	mov	r1, r4
   2fecc:	ldr	r0, [r1, #68]!	; 0x44
   2fed0:	cmp	r0, #0
   2fed4:	bne	2fef8 <flatcc_builder_custom_reset@@Base+0x128>
   2fed8:	b	30134 <flatcc_builder_custom_reset@@Base+0x364>
   2fedc:	ldr	r0, [r4, #64]	; 0x40
   2fee0:	cmp	r0, #0
   2fee4:	bne	302fc <flatcc_builder_custom_reset@@Base+0x52c>
   2fee8:	mov	r1, r4
   2feec:	ldr	r0, [r1, #68]!	; 0x44
   2fef0:	cmp	r0, #0
   2fef4:	beq	30134 <flatcc_builder_custom_reset@@Base+0x364>
   2fef8:	ldr	r0, [r4, #40]	; 0x28
   2fefc:	ldr	r6, [r4, #48]	; 0x30
   2ff00:	mov	r2, #2
   2ff04:	mov	r3, #1
   2ff08:	str	r2, [sp]
   2ff0c:	mov	r2, #1
   2ff10:	blx	r6
   2ff14:	mvn	r6, #0
   2ff18:	cmp	r0, #0
   2ff1c:	bne	30128 <flatcc_builder_custom_reset@@Base+0x358>
   2ff20:	ldr	r0, [r4, #68]	; 0x44
   2ff24:	ldr	r2, [r4, #72]	; 0x48
   2ff28:	mov	r1, #0
   2ff2c:	bl	14ef0 <memset@plt>
   2ff30:	mov	r1, r4
   2ff34:	ldr	r0, [r1, #76]!	; 0x4c
   2ff38:	cmp	r0, #0
   2ff3c:	bne	30150 <flatcc_builder_custom_reset@@Base+0x380>
   2ff40:	b	3019c <flatcc_builder_custom_reset@@Base+0x3cc>
   2ff44:	cmp	r2, #0
   2ff48:	bne	302fc <flatcc_builder_custom_reset@@Base+0x52c>
   2ff4c:	ldr	r0, [r4, #60]	; 0x3c
   2ff50:	ldr	r2, [r4, #64]	; 0x40
   2ff54:	cmp	r0, #0
   2ff58:	beq	2ff78 <flatcc_builder_custom_reset@@Base+0x1a8>
   2ff5c:	mov	r1, #0
   2ff60:	bl	14ef0 <memset@plt>
   2ff64:	ldr	r0, [r4, #68]	; 0x44
   2ff68:	ldr	r2, [r4, #72]	; 0x48
   2ff6c:	cmp	r0, #0
   2ff70:	bne	2ff90 <flatcc_builder_custom_reset@@Base+0x1c0>
   2ff74:	b	2ffac <flatcc_builder_custom_reset@@Base+0x1dc>
   2ff78:	cmp	r2, #0
   2ff7c:	bne	302fc <flatcc_builder_custom_reset@@Base+0x52c>
   2ff80:	ldr	r0, [r4, #68]	; 0x44
   2ff84:	ldr	r2, [r4, #72]	; 0x48
   2ff88:	cmp	r0, #0
   2ff8c:	beq	2ffac <flatcc_builder_custom_reset@@Base+0x1dc>
   2ff90:	mov	r1, #0
   2ff94:	bl	14ef0 <memset@plt>
   2ff98:	ldr	r0, [r4, #76]	; 0x4c
   2ff9c:	ldr	r2, [r4, #80]	; 0x50
   2ffa0:	cmp	r0, #0
   2ffa4:	bne	2ffc4 <flatcc_builder_custom_reset@@Base+0x1f4>
   2ffa8:	b	2ffe0 <flatcc_builder_custom_reset@@Base+0x210>
   2ffac:	cmp	r2, #0
   2ffb0:	bne	302fc <flatcc_builder_custom_reset@@Base+0x52c>
   2ffb4:	ldr	r0, [r4, #76]	; 0x4c
   2ffb8:	ldr	r2, [r4, #80]	; 0x50
   2ffbc:	cmp	r0, #0
   2ffc0:	beq	2ffe0 <flatcc_builder_custom_reset@@Base+0x210>
   2ffc4:	mov	r1, #0
   2ffc8:	bl	14ef0 <memset@plt>
   2ffcc:	ldr	r0, [r4, #84]	; 0x54
   2ffd0:	ldr	r2, [r4, #88]	; 0x58
   2ffd4:	cmp	r0, #0
   2ffd8:	bne	2fff8 <flatcc_builder_custom_reset@@Base+0x228>
   2ffdc:	b	30014 <flatcc_builder_custom_reset@@Base+0x244>
   2ffe0:	cmp	r2, #0
   2ffe4:	bne	302fc <flatcc_builder_custom_reset@@Base+0x52c>
   2ffe8:	ldr	r0, [r4, #84]	; 0x54
   2ffec:	ldr	r2, [r4, #88]	; 0x58
   2fff0:	cmp	r0, #0
   2fff4:	beq	30014 <flatcc_builder_custom_reset@@Base+0x244>
   2fff8:	mov	r1, #0
   2fffc:	bl	14ef0 <memset@plt>
   30000:	ldr	r0, [r4, #92]	; 0x5c
   30004:	ldr	r2, [r4, #96]	; 0x60
   30008:	cmp	r0, #0
   3000c:	bne	3002c <flatcc_builder_custom_reset@@Base+0x25c>
   30010:	b	30048 <flatcc_builder_custom_reset@@Base+0x278>
   30014:	cmp	r2, #0
   30018:	bne	302fc <flatcc_builder_custom_reset@@Base+0x52c>
   3001c:	ldr	r0, [r4, #92]	; 0x5c
   30020:	ldr	r2, [r4, #96]	; 0x60
   30024:	cmp	r0, #0
   30028:	beq	30048 <flatcc_builder_custom_reset@@Base+0x278>
   3002c:	mov	r1, #0
   30030:	bl	14ef0 <memset@plt>
   30034:	ldr	r0, [r4, #100]	; 0x64
   30038:	ldr	r2, [r4, #104]	; 0x68
   3003c:	cmp	r0, #0
   30040:	bne	30060 <flatcc_builder_custom_reset@@Base+0x290>
   30044:	b	3007c <flatcc_builder_custom_reset@@Base+0x2ac>
   30048:	cmp	r2, #0
   3004c:	bne	302fc <flatcc_builder_custom_reset@@Base+0x52c>
   30050:	ldr	r0, [r4, #100]	; 0x64
   30054:	ldr	r2, [r4, #104]	; 0x68
   30058:	cmp	r0, #0
   3005c:	beq	3007c <flatcc_builder_custom_reset@@Base+0x2ac>
   30060:	mov	r1, #0
   30064:	bl	14ef0 <memset@plt>
   30068:	ldr	r0, [r4, #108]	; 0x6c
   3006c:	ldr	r2, [r4, #112]	; 0x70
   30070:	cmp	r0, #0
   30074:	bne	30094 <flatcc_builder_custom_reset@@Base+0x2c4>
   30078:	b	300a0 <flatcc_builder_custom_reset@@Base+0x2d0>
   3007c:	cmp	r2, #0
   30080:	bne	302fc <flatcc_builder_custom_reset@@Base+0x52c>
   30084:	ldr	r0, [r4, #108]	; 0x6c
   30088:	ldr	r2, [r4, #112]	; 0x70
   3008c:	cmp	r0, #0
   30090:	beq	300a0 <flatcc_builder_custom_reset@@Base+0x2d0>
   30094:	mov	r1, #0
   30098:	bl	14ef0 <memset@plt>
   3009c:	b	300a8 <flatcc_builder_custom_reset@@Base+0x2d8>
   300a0:	cmp	r2, #0
   300a4:	bne	302fc <flatcc_builder_custom_reset@@Base+0x52c>
   300a8:	mov	r0, #0
   300ac:	vmov.i32	q8, #0	; 0x00000000
   300b0:	mov	r6, #0
   300b4:	str	r0, [r4, #120]	; 0x78
   300b8:	ldr	r1, [r4, #124]	; 0x7c
   300bc:	cmp	r1, #0
   300c0:	movne	r1, #16
   300c4:	strne	r1, [r4, #124]	; 0x7c
   300c8:	add	r1, r4, #148	; 0x94
   300cc:	strh	r0, [r4, #128]	; 0x80
   300d0:	str	r0, [r4, #136]	; 0x88
   300d4:	str	r0, [r4, #140]	; 0x8c
   300d8:	str	r0, [r4, #32]
   300dc:	cmp	r5, #0
   300e0:	vst1.32	{d16-d17}, [r1]
   300e4:	ldr	r2, [r4, #60]	; 0x3c
   300e8:	ldr	r1, [r4, #52]	; 0x34
   300ec:	ldr	r3, [r4, #76]	; 0x4c
   300f0:	str	r2, [r4, #16]
   300f4:	str	r0, [r4, #20]
   300f8:	str	r0, [r4, #24]
   300fc:	movne	r0, #0
   30100:	str	r3, [r4]
   30104:	str	r1, [r4, #4]
   30108:	strne	r0, [r4, #172]	; 0xac
   3010c:	strne	r0, [r4, #176]	; 0xb0
   30110:	strne	r0, [r4, #180]	; 0xb4
   30114:	ldr	r0, [r4, #184]	; 0xb8
   30118:	cmp	r0, #0
   3011c:	beq	30128 <flatcc_builder_custom_reset@@Base+0x358>
   30120:	add	r0, r4, #188	; 0xbc
   30124:	bl	3493c <flatcc_emitter_reset@@Base>
   30128:	mov	r0, r6
   3012c:	sub	sp, fp, #16
   30130:	pop	{r4, r5, r6, sl, fp, pc}
   30134:	ldr	r0, [r4, #72]	; 0x48
   30138:	cmp	r0, #0
   3013c:	bne	302fc <flatcc_builder_custom_reset@@Base+0x52c>
   30140:	mov	r1, r4
   30144:	ldr	r0, [r1, #76]!	; 0x4c
   30148:	cmp	r0, #0
   3014c:	beq	3019c <flatcc_builder_custom_reset@@Base+0x3cc>
   30150:	ldr	r0, [r4, #40]	; 0x28
   30154:	ldr	r6, [r4, #48]	; 0x30
   30158:	mov	r2, #3
   3015c:	mov	r3, #1
   30160:	str	r2, [sp]
   30164:	mov	r2, #1
   30168:	blx	r6
   3016c:	mvn	r6, #0
   30170:	cmp	r0, #0
   30174:	bne	30128 <flatcc_builder_custom_reset@@Base+0x358>
   30178:	ldr	r0, [r4, #76]	; 0x4c
   3017c:	ldr	r2, [r4, #80]	; 0x50
   30180:	mov	r1, #0
   30184:	bl	14ef0 <memset@plt>
   30188:	mov	r1, r4
   3018c:	ldr	r0, [r1, #84]!	; 0x54
   30190:	cmp	r0, #0
   30194:	bne	301b8 <flatcc_builder_custom_reset@@Base+0x3e8>
   30198:	b	30204 <flatcc_builder_custom_reset@@Base+0x434>
   3019c:	ldr	r0, [r4, #80]	; 0x50
   301a0:	cmp	r0, #0
   301a4:	bne	302fc <flatcc_builder_custom_reset@@Base+0x52c>
   301a8:	mov	r1, r4
   301ac:	ldr	r0, [r1, #84]!	; 0x54
   301b0:	cmp	r0, #0
   301b4:	beq	30204 <flatcc_builder_custom_reset@@Base+0x434>
   301b8:	ldr	r0, [r4, #40]	; 0x28
   301bc:	ldr	r6, [r4, #48]	; 0x30
   301c0:	mov	r2, #4
   301c4:	mov	r3, #1
   301c8:	str	r2, [sp]
   301cc:	mov	r2, #1
   301d0:	blx	r6
   301d4:	mvn	r6, #0
   301d8:	cmp	r0, #0
   301dc:	bne	30128 <flatcc_builder_custom_reset@@Base+0x358>
   301e0:	ldr	r0, [r4, #84]	; 0x54
   301e4:	ldr	r2, [r4, #88]	; 0x58
   301e8:	mov	r1, #0
   301ec:	bl	14ef0 <memset@plt>
   301f0:	ldr	r0, [r4, #92]	; 0x5c
   301f4:	ldr	r2, [r4, #96]	; 0x60
   301f8:	cmp	r0, #0
   301fc:	bne	30220 <flatcc_builder_custom_reset@@Base+0x450>
   30200:	b	3023c <flatcc_builder_custom_reset@@Base+0x46c>
   30204:	ldr	r0, [r4, #88]	; 0x58
   30208:	cmp	r0, #0
   3020c:	bne	302fc <flatcc_builder_custom_reset@@Base+0x52c>
   30210:	ldr	r0, [r4, #92]	; 0x5c
   30214:	ldr	r2, [r4, #96]	; 0x60
   30218:	cmp	r0, #0
   3021c:	beq	3023c <flatcc_builder_custom_reset@@Base+0x46c>
   30220:	mov	r1, #0
   30224:	bl	14ef0 <memset@plt>
   30228:	mov	r1, r4
   3022c:	ldr	r0, [r1, #100]!	; 0x64
   30230:	cmp	r0, #0
   30234:	bne	30254 <flatcc_builder_custom_reset@@Base+0x484>
   30238:	b	302a0 <flatcc_builder_custom_reset@@Base+0x4d0>
   3023c:	cmp	r2, #0
   30240:	bne	302fc <flatcc_builder_custom_reset@@Base+0x52c>
   30244:	mov	r1, r4
   30248:	ldr	r0, [r1, #100]!	; 0x64
   3024c:	cmp	r0, #0
   30250:	beq	302a0 <flatcc_builder_custom_reset@@Base+0x4d0>
   30254:	ldr	r0, [r4, #40]	; 0x28
   30258:	ldr	r6, [r4, #48]	; 0x30
   3025c:	mov	r2, #6
   30260:	mov	r3, #1
   30264:	str	r2, [sp]
   30268:	mov	r2, #1
   3026c:	blx	r6
   30270:	mvn	r6, #0
   30274:	cmp	r0, #0
   30278:	bne	30128 <flatcc_builder_custom_reset@@Base+0x358>
   3027c:	ldr	r0, [r4, #100]	; 0x64
   30280:	ldr	r2, [r4, #104]	; 0x68
   30284:	mov	r1, #0
   30288:	bl	14ef0 <memset@plt>
   3028c:	mov	r1, r4
   30290:	ldr	r0, [r1, #108]!	; 0x6c
   30294:	cmp	r0, #0
   30298:	bne	302bc <flatcc_builder_custom_reset@@Base+0x4ec>
   3029c:	b	302f0 <flatcc_builder_custom_reset@@Base+0x520>
   302a0:	ldr	r0, [r4, #104]	; 0x68
   302a4:	cmp	r0, #0
   302a8:	bne	302fc <flatcc_builder_custom_reset@@Base+0x52c>
   302ac:	mov	r1, r4
   302b0:	ldr	r0, [r1, #108]!	; 0x6c
   302b4:	cmp	r0, #0
   302b8:	beq	302f0 <flatcc_builder_custom_reset@@Base+0x520>
   302bc:	ldr	r0, [r4, #40]	; 0x28
   302c0:	ldr	r6, [r4, #48]	; 0x30
   302c4:	mov	r2, #7
   302c8:	mov	r3, #1
   302cc:	str	r2, [sp]
   302d0:	mov	r2, #1
   302d4:	blx	r6
   302d8:	mvn	r6, #0
   302dc:	cmp	r0, #0
   302e0:	bne	30128 <flatcc_builder_custom_reset@@Base+0x358>
   302e4:	ldr	r0, [r4, #108]	; 0x6c
   302e8:	ldr	r2, [r4, #112]	; 0x70
   302ec:	b	30094 <flatcc_builder_custom_reset@@Base+0x2c4>
   302f0:	ldr	r0, [r4, #112]	; 0x70
   302f4:	cmp	r0, #0
   302f8:	beq	300a8 <flatcc_builder_custom_reset@@Base+0x2d8>
   302fc:	movw	r0, #50532	; 0xc564
   30300:	movw	r1, #50550	; 0xc576
   30304:	movw	r3, #50620	; 0xc5bc
   30308:	movw	r2, #434	; 0x1b2
   3030c:	movt	r0, #4
   30310:	movt	r1, #4
   30314:	movt	r3, #4
   30318:	bl	14f44 <__assert_fail@plt>

0003031c <flatcc_builder_reset@@Base>:
   3031c:	mov	r1, #0
   30320:	mov	r2, #0
   30324:	b	2fdd0 <flatcc_builder_custom_reset@@Base>

00030328 <flatcc_builder_clear@@Base>:
   30328:	push	{r4, sl, fp, lr}
   3032c:	add	fp, sp, #8
   30330:	sub	sp, sp, #8
   30334:	mov	r4, r0
   30338:	ldr	r0, [r0, #40]	; 0x28
   3033c:	mov	r1, #0
   30340:	mov	r2, #0
   30344:	mov	r3, #0
   30348:	ldr	ip, [r4, #48]	; 0x30
   3034c:	str	r1, [sp]
   30350:	add	r1, r4, #52	; 0x34
   30354:	blx	ip
   30358:	ldr	r0, [r4, #40]	; 0x28
   3035c:	ldr	ip, [r4, #48]	; 0x30
   30360:	mov	r1, #1
   30364:	mov	r2, #0
   30368:	mov	r3, #0
   3036c:	str	r1, [sp]
   30370:	add	r1, r4, #60	; 0x3c
   30374:	blx	ip
   30378:	ldr	r0, [r4, #40]	; 0x28
   3037c:	ldr	ip, [r4, #48]	; 0x30
   30380:	mov	r1, #2
   30384:	mov	r2, #0
   30388:	mov	r3, #0
   3038c:	str	r1, [sp]
   30390:	add	r1, r4, #68	; 0x44
   30394:	blx	ip
   30398:	ldr	r0, [r4, #40]	; 0x28
   3039c:	ldr	ip, [r4, #48]	; 0x30
   303a0:	mov	r1, #3
   303a4:	mov	r2, #0
   303a8:	mov	r3, #0
   303ac:	str	r1, [sp]
   303b0:	add	r1, r4, #76	; 0x4c
   303b4:	blx	ip
   303b8:	ldr	r0, [r4, #40]	; 0x28
   303bc:	ldr	ip, [r4, #48]	; 0x30
   303c0:	mov	r1, #4
   303c4:	mov	r2, #0
   303c8:	mov	r3, #0
   303cc:	str	r1, [sp]
   303d0:	add	r1, r4, #84	; 0x54
   303d4:	blx	ip
   303d8:	ldr	r0, [r4, #40]	; 0x28
   303dc:	ldr	ip, [r4, #48]	; 0x30
   303e0:	mov	r1, #5
   303e4:	mov	r2, #0
   303e8:	mov	r3, #0
   303ec:	str	r1, [sp]
   303f0:	add	r1, r4, #92	; 0x5c
   303f4:	blx	ip
   303f8:	ldr	r0, [r4, #40]	; 0x28
   303fc:	ldr	ip, [r4, #48]	; 0x30
   30400:	mov	r1, #6
   30404:	mov	r2, #0
   30408:	mov	r3, #0
   3040c:	str	r1, [sp]
   30410:	add	r1, r4, #100	; 0x64
   30414:	blx	ip
   30418:	ldr	r0, [r4, #40]	; 0x28
   3041c:	ldr	ip, [r4, #48]	; 0x30
   30420:	mov	r1, #7
   30424:	mov	r2, #0
   30428:	mov	r3, #0
   3042c:	str	r1, [sp]
   30430:	add	r1, r4, #108	; 0x6c
   30434:	blx	ip
   30438:	ldr	r0, [r4, #184]	; 0xb8
   3043c:	cmp	r0, #0
   30440:	beq	3044c <flatcc_builder_clear@@Base+0x124>
   30444:	add	r0, r4, #188	; 0xbc
   30448:	bl	34a08 <flatcc_emitter_clear@@Base>
   3044c:	mov	r0, r4
   30450:	mov	r1, #0
   30454:	mov	r2, #232	; 0xe8
   30458:	sub	sp, fp, #8
   3045c:	pop	{r4, sl, fp, lr}
   30460:	b	14ef0 <memset@plt>

00030464 <flatcc_builder_enter_user_frame_ptr@@Base>:
   30464:	push	{r4, r5, r6, r7, fp, lr}
   30468:	add	fp, sp, #16
   3046c:	sub	sp, sp, #8
   30470:	mov	r4, r0
   30474:	ldr	r0, [r0, #112]	; 0x70
   30478:	add	r1, r1, #7
   3047c:	ldr	r7, [r4, #228]	; 0xe4
   30480:	bic	r5, r1, #3
   30484:	add	r6, r4, #108	; 0x6c
   30488:	add	r2, r7, r5
   3048c:	cmp	r2, r0
   30490:	bls	304b8 <flatcc_builder_enter_user_frame_ptr@@Base+0x54>
   30494:	ldr	r0, [r4, #40]	; 0x28
   30498:	ldr	ip, [r4, #48]	; 0x30
   3049c:	mov	r1, #7
   304a0:	mov	r3, #0
   304a4:	str	r1, [sp]
   304a8:	mov	r1, r6
   304ac:	blx	ip
   304b0:	cmp	r0, #0
   304b4:	bne	3050c <flatcc_builder_enter_user_frame_ptr@@Base+0xa8>
   304b8:	ldr	r0, [r6]
   304bc:	adds	r6, r0, r7
   304c0:	beq	304fc <flatcc_builder_enter_user_frame_ptr@@Base+0x98>
   304c4:	mov	r0, r6
   304c8:	mov	r1, #0
   304cc:	mov	r2, r5
   304d0:	bl	14ef0 <memset@plt>
   304d4:	ldr	r0, [r4, #224]	; 0xe0
   304d8:	str	r0, [r6], #4
   304dc:	ldr	r0, [r4, #228]	; 0xe4
   304e0:	add	r1, r0, #4
   304e4:	add	r0, r0, r5
   304e8:	str	r1, [r4, #224]	; 0xe0
   304ec:	str	r0, [r4, #228]	; 0xe4
   304f0:	mov	r0, r6
   304f4:	sub	sp, fp, #16
   304f8:	pop	{r4, r5, r6, r7, fp, pc}
   304fc:	mov	r6, #0
   30500:	mov	r0, r6
   30504:	sub	sp, fp, #16
   30508:	pop	{r4, r5, r6, r7, fp, pc}
   3050c:	movw	r0, #55068	; 0xd71c
   30510:	movw	r1, #50550	; 0xc576
   30514:	movw	r3, #54614	; 0xd556
   30518:	mov	r2, #308	; 0x134
   3051c:	movt	r0, #4
   30520:	movt	r1, #4
   30524:	movt	r3, #4
   30528:	bl	14f44 <__assert_fail@plt>

0003052c <flatcc_builder_enter_user_frame@@Base>:
   3052c:	push	{r4, r5, r6, r7, fp, lr}
   30530:	add	fp, sp, #16
   30534:	sub	sp, sp, #8
   30538:	mov	r4, r0
   3053c:	ldr	r0, [r0, #112]	; 0x70
   30540:	add	r1, r1, #7
   30544:	ldr	r7, [r4, #228]	; 0xe4
   30548:	bic	r5, r1, #3
   3054c:	add	r6, r4, #108	; 0x6c
   30550:	add	r2, r7, r5
   30554:	cmp	r2, r0
   30558:	bls	30580 <flatcc_builder_enter_user_frame@@Base+0x54>
   3055c:	ldr	r0, [r4, #40]	; 0x28
   30560:	ldr	ip, [r4, #48]	; 0x30
   30564:	mov	r1, #7
   30568:	mov	r3, #0
   3056c:	str	r1, [sp]
   30570:	mov	r1, r6
   30574:	blx	ip
   30578:	cmp	r0, #0
   3057c:	bne	305c8 <flatcc_builder_enter_user_frame@@Base+0x9c>
   30580:	ldr	r0, [r6]
   30584:	adds	r6, r0, r7
   30588:	moveq	r0, #0
   3058c:	subeq	sp, fp, #16
   30590:	popeq	{r4, r5, r6, r7, fp, pc}
   30594:	mov	r0, r6
   30598:	mov	r1, #0
   3059c:	mov	r2, r5
   305a0:	bl	14ef0 <memset@plt>
   305a4:	ldr	r0, [r4, #224]	; 0xe0
   305a8:	str	r0, [r6]
   305ac:	ldr	r1, [r4, #228]	; 0xe4
   305b0:	add	r0, r1, #4
   305b4:	add	r1, r1, r5
   305b8:	str	r0, [r4, #224]	; 0xe0
   305bc:	str	r1, [r4, #228]	; 0xe4
   305c0:	sub	sp, fp, #16
   305c4:	pop	{r4, r5, r6, r7, fp, pc}
   305c8:	movw	r0, #55068	; 0xd71c
   305cc:	movw	r1, #50550	; 0xc576
   305d0:	movw	r3, #54614	; 0xd556
   305d4:	mov	r2, #308	; 0x134
   305d8:	movt	r0, #4
   305dc:	movt	r1, #4
   305e0:	movt	r3, #4
   305e4:	bl	14f44 <__assert_fail@plt>

000305e8 <flatcc_builder_exit_user_frame@@Base>:
   305e8:	ldr	r1, [r0, #224]	; 0xe0
   305ec:	cmp	r1, #0
   305f0:	subne	r2, r1, #4
   305f4:	strne	r2, [r0, #228]	; 0xe4
   305f8:	ldrne	r2, [r0, #108]	; 0x6c
   305fc:	addne	r1, r2, r1
   30600:	ldrne	r1, [r1, #-4]
   30604:	strne	r1, [r0, #224]	; 0xe0
   30608:	movne	r0, r1
   3060c:	bxne	lr
   30610:	push	{fp, lr}
   30614:	mov	fp, sp
   30618:	movw	r0, #50682	; 0xc5fa
   3061c:	movw	r1, #50550	; 0xc576
   30620:	movw	r3, #50707	; 0xc613
   30624:	movw	r2, #542	; 0x21e
   30628:	movt	r0, #4
   3062c:	movt	r1, #4
   30630:	movt	r3, #4
   30634:	bl	14f44 <__assert_fail@plt>

00030638 <flatcc_builder_exit_user_frame_at@@Base>:
   30638:	push	{fp, lr}
   3063c:	mov	fp, sp
   30640:	ldr	r2, [r0, #224]	; 0xe0
   30644:	cmp	r2, r1
   30648:	bcc	30694 <flatcc_builder_exit_user_frame_at@@Base+0x5c>
   3064c:	cmp	r1, #0
   30650:	str	r1, [r0, #224]	; 0xe0
   30654:	subne	r2, r1, #4
   30658:	strne	r2, [r0, #228]	; 0xe4
   3065c:	ldrne	r2, [r0, #108]	; 0x6c
   30660:	addne	r1, r2, r1
   30664:	ldrne	r1, [r1, #-4]
   30668:	strne	r1, [r0, #224]	; 0xe0
   3066c:	movne	r0, r1
   30670:	popne	{fp, pc}
   30674:	movw	r0, #50682	; 0xc5fa
   30678:	movw	r1, #50550	; 0xc576
   3067c:	movw	r3, #50707	; 0xc613
   30680:	movw	r2, #542	; 0x21e
   30684:	movt	r0, #4
   30688:	movt	r1, #4
   3068c:	movt	r3, #4
   30690:	bl	14f44 <__assert_fail@plt>
   30694:	movw	r0, #50765	; 0xc64d
   30698:	movw	r1, #50550	; 0xc576
   3069c:	movw	r3, #50796	; 0xc66c
   306a0:	movw	r2, #551	; 0x227
   306a4:	movt	r0, #4
   306a8:	movt	r1, #4
   306ac:	movt	r3, #4
   306b0:	bl	14f44 <__assert_fail@plt>

000306b4 <flatcc_builder_get_current_user_frame@@Base>:
   306b4:	ldr	r0, [r0, #224]	; 0xe0
   306b8:	bx	lr

000306bc <flatcc_builder_get_user_frame_ptr@@Base>:
   306bc:	ldr	r0, [r0, #108]	; 0x6c
   306c0:	add	r0, r0, r1
   306c4:	bx	lr

000306c8 <flatcc_builder_embed_buffer@@Base>:
   306c8:	push	{r4, r5, r6, r7, fp, lr}
   306cc:	add	fp, sp, #16
   306d0:	sub	sp, sp, #88	; 0x58
   306d4:	mov	r4, r0
   306d8:	ldr	r0, [fp, #8]
   306dc:	mov	r5, r3
   306e0:	mov	r7, r2
   306e4:	mov	r2, r1
   306e8:	sub	r1, fp, #18
   306ec:	strh	r0, [fp, #-18]	; 0xffffffee
   306f0:	mov	r0, r4
   306f4:	ldr	r3, [r4, #152]	; 0x98
   306f8:	cmp	r3, #0
   306fc:	movwne	r3, #1
   30700:	bl	30838 <flatcc_builder_embed_buffer@@Base+0x170>
   30704:	ldr	r1, [fp, #12]
   30708:	ldrh	r3, [fp, #-18]	; 0xffffffee
   3070c:	ldr	r0, [r4, #136]	; 0x88
   30710:	mov	r2, #0
   30714:	str	r2, [sp, #8]
   30718:	str	r2, [sp, #12]
   3071c:	and	r1, r1, #2
   30720:	sub	r3, r3, #1
   30724:	add	r1, r5, r1, lsl #1
   30728:	sub	r1, r0, r1
   3072c:	and	r3, r3, r1
   30730:	add	r1, r3, r5
   30734:	str	r1, [fp, #-24]	; 0xffffffe8
   30738:	ldr	r1, [r4, #152]	; 0x98
   3073c:	cmp	r1, #0
   30740:	mov	r1, #0
   30744:	beq	30764 <flatcc_builder_embed_buffer@@Base+0x9c>
   30748:	sub	r1, fp, #24
   3074c:	mov	r2, #1
   30750:	str	r1, [sp, #16]
   30754:	mov	r1, #4
   30758:	str	r1, [sp, #8]
   3075c:	str	r1, [sp, #20]
   30760:	str	r2, [sp, #12]
   30764:	cmp	r5, #0
   30768:	beq	3078c <flatcc_builder_embed_buffer@@Base+0xc4>
   3076c:	add	r6, sp, #8
   30770:	add	r1, r1, r5
   30774:	add	r6, r6, r2, lsl #3
   30778:	add	r2, r2, #1
   3077c:	str	r1, [sp, #8]
   30780:	str	r7, [r6, #8]
   30784:	str	r5, [r6, #12]
   30788:	str	r2, [sp, #12]
   3078c:	cmp	r3, #0
   30790:	beq	307bc <flatcc_builder_embed_buffer@@Base+0xf4>
   30794:	add	r7, sp, #8
   30798:	movw	r6, #50020	; 0xc364
   3079c:	add	r1, r1, r3
   307a0:	add	r7, r7, r2, lsl #3
   307a4:	add	r2, r2, #1
   307a8:	movt	r6, #4
   307ac:	str	r1, [sp, #8]
   307b0:	str	r6, [r7, #8]
   307b4:	str	r3, [r7, #12]
   307b8:	str	r2, [sp, #12]
   307bc:	cmp	r1, #0
   307c0:	ble	30818 <flatcc_builder_embed_buffer@@Base+0x150>
   307c4:	sub	r5, r0, r1
   307c8:	ldr	r0, [r4, #36]	; 0x24
   307cc:	ldr	r7, [r4, #44]	; 0x2c
   307d0:	str	r1, [sp]
   307d4:	add	r1, sp, #8
   307d8:	add	r1, r1, #8
   307dc:	mov	r3, r5
   307e0:	blx	r7
   307e4:	cmp	r0, #0
   307e8:	streq	r5, [r4, #136]	; 0x88
   307ec:	moveq	r0, r5
   307f0:	subeq	sp, fp, #16
   307f4:	popeq	{r4, r5, r6, r7, fp, pc}
   307f8:	movw	r0, #55068	; 0xd71c
   307fc:	movw	r1, #50550	; 0xc576
   30800:	movw	r3, #54747	; 0xd5db
   30804:	movw	r2, #651	; 0x28b
   30808:	movt	r0, #4
   3080c:	movt	r1, #4
   30810:	movt	r3, #4
   30814:	bl	14f44 <__assert_fail@plt>
   30818:	movw	r0, #55068	; 0xd71c
   3081c:	movw	r1, #50550	; 0xc576
   30820:	movw	r3, #54747	; 0xd5db
   30824:	movw	r2, #647	; 0x287
   30828:	movt	r0, #4
   3082c:	movt	r1, #4
   30830:	movt	r3, #4
   30834:	bl	14f44 <__assert_fail@plt>
   30838:	push	{r4, sl, fp, lr}
   3083c:	add	fp, sp, #8
   30840:	sub	sp, sp, #80	; 0x50
   30844:	cmp	r2, #0
   30848:	bne	30858 <flatcc_builder_embed_buffer@@Base+0x190>
   3084c:	ldrh	r2, [r0, #132]	; 0x84
   30850:	cmp	r2, #0
   30854:	movweq	r2, #1
   30858:	ldrh	r4, [r1]
   3085c:	cmp	r4, #4
   30860:	movwcc	r4, #4
   30864:	cmpcs	r4, r2
   30868:	bcs	30878 <flatcc_builder_embed_buffer@@Base+0x1b0>
   3086c:	cmp	r4, r2
   30870:	movcc	r4, r2
   30874:	strh	r4, [r1]
   30878:	cmp	r3, #0
   3087c:	bne	308f0 <flatcc_builder_embed_buffer@@Base+0x228>
   30880:	ldr	r4, [r0, #140]	; 0x8c
   30884:	sub	r1, r2, #1
   30888:	ands	r1, r4, r1
   3088c:	beq	308f0 <flatcc_builder_embed_buffer@@Base+0x228>
   30890:	movw	r2, #50020	; 0xc364
   30894:	cmn	r1, #1
   30898:	movt	r2, #4
   3089c:	str	r2, [sp, #16]
   308a0:	mov	r2, #1
   308a4:	str	r1, [sp, #8]
   308a8:	str	r1, [sp, #20]
   308ac:	str	r2, [sp, #12]
   308b0:	add	r2, r4, r1
   308b4:	str	r2, [r0, #140]	; 0x8c
   308b8:	ble	308f8 <flatcc_builder_embed_buffer@@Base+0x230>
   308bc:	ldr	r2, [r0, #36]	; 0x24
   308c0:	ldr	ip, [r0, #44]	; 0x2c
   308c4:	add	r0, sp, #8
   308c8:	str	r1, [sp]
   308cc:	mov	r3, r4
   308d0:	add	r1, r0, #8
   308d4:	mov	r0, r2
   308d8:	mov	r2, #1
   308dc:	blx	ip
   308e0:	cmp	r0, #0
   308e4:	bne	30918 <flatcc_builder_embed_buffer@@Base+0x250>
   308e8:	cmn	r4, #1
   308ec:	beq	30938 <flatcc_builder_embed_buffer@@Base+0x270>
   308f0:	sub	sp, fp, #8
   308f4:	pop	{r4, sl, fp, pc}
   308f8:	movw	r0, #55068	; 0xd71c
   308fc:	movw	r1, #50550	; 0xc576
   30900:	movw	r3, #54935	; 0xd697
   30904:	movw	r2, #673	; 0x2a1
   30908:	movt	r0, #4
   3090c:	movt	r1, #4
   30910:	movt	r3, #4
   30914:	bl	14f44 <__assert_fail@plt>
   30918:	movw	r0, #55068	; 0xd71c
   3091c:	movw	r1, #50550	; 0xc576
   30920:	movw	r3, #54935	; 0xd697
   30924:	movw	r2, #677	; 0x2a5
   30928:	movt	r0, #4
   3092c:	movt	r1, #4
   30930:	movt	r3, #4
   30934:	bl	14f44 <__assert_fail@plt>
   30938:	movw	r0, #55068	; 0xd71c
   3093c:	movw	r1, #50550	; 0xc576
   30940:	movw	r3, #54681	; 0xd599
   30944:	movw	r2, #702	; 0x2be
   30948:	movt	r0, #4
   3094c:	movt	r1, #4
   30950:	movt	r3, #4
   30954:	bl	14f44 <__assert_fail@plt>

00030958 <flatcc_builder_create_buffer@@Base>:
   30958:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3095c:	add	fp, sp, #28
   30960:	sub	sp, sp, #100	; 0x64
   30964:	ldr	r8, [fp, #12]
   30968:	mov	r4, r0
   3096c:	ldr	r0, [fp, #8]
   30970:	mov	r7, r1
   30974:	mov	r5, #0
   30978:	mov	r9, r3
   3097c:	sub	r1, fp, #30
   30980:	str	r5, [sp, #12]
   30984:	and	r6, r8, #1
   30988:	strh	r0, [fp, #-30]	; 0xffffffe2
   3098c:	mov	r0, r4
   30990:	mov	r3, r6
   30994:	bl	30838 <flatcc_builder_embed_buffer@@Base+0x170>
   30998:	ldrh	r0, [r4, #128]	; 0x80
   3099c:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   309a0:	cmp	r0, r1
   309a4:	strhcc	r1, [r4, #128]	; 0x80
   309a8:	cmp	r7, #0
   309ac:	stmib	sp, {r6, r9}
   309b0:	beq	309cc <flatcc_builder_create_buffer@@Base+0x74>
   309b4:	ldr	r5, [r7]
   309b8:	cmp	r5, #0
   309bc:	str	r5, [sp, #12]
   309c0:	movwne	r5, #1
   309c4:	lsl	r7, r5, #2
   309c8:	b	309d0 <flatcc_builder_create_buffer@@Base+0x78>
   309cc:	mov	r7, #0
   309d0:	ldr	r9, [r4, #136]	; 0x88
   309d4:	mov	sl, #4
   309d8:	mvn	r6, #3
   309dc:	mov	r3, #0
   309e0:	ands	ip, r8, #3
   309e4:	and	r2, sl, r8, lsl #1
   309e8:	str	r3, [sp, #20]
   309ec:	str	r3, [sp, #16]
   309f0:	sub	r2, r6, r2
   309f4:	sub	r6, r1, #1
   309f8:	mov	r1, #4
   309fc:	add	r2, r2, r9
   30a00:	sub	r2, r2, r7
   30a04:	beq	30a28 <flatcc_builder_create_buffer@@Base+0xd0>
   30a08:	sub	r1, fp, #40	; 0x28
   30a0c:	mov	r3, #1
   30a10:	str	r1, [sp, #24]
   30a14:	mov	r1, #4
   30a18:	str	r1, [sp, #16]
   30a1c:	str	r1, [sp, #28]
   30a20:	mov	r1, #8
   30a24:	str	r3, [sp, #20]
   30a28:	add	lr, sp, #16
   30a2c:	and	r6, r2, r6
   30a30:	sub	r0, fp, #36	; 0x24
   30a34:	str	r1, [sp, #16]
   30a38:	cmp	r5, #0
   30a3c:	add	r2, lr, r3, lsl #3
   30a40:	str	r0, [r2, #8]
   30a44:	str	sl, [r2, #12]
   30a48:	add	r2, r3, #1
   30a4c:	str	r2, [sp, #20]
   30a50:	beq	30a74 <flatcc_builder_create_buffer@@Base+0x11c>
   30a54:	add	r1, r1, r7
   30a58:	add	r0, lr, r2, lsl #3
   30a5c:	add	r2, sp, #12
   30a60:	str	r1, [sp, #16]
   30a64:	str	r2, [r0, #8]
   30a68:	orr	r2, r3, #2
   30a6c:	str	r7, [r0, #12]
   30a70:	str	r2, [sp, #20]
   30a74:	cmp	r6, #0
   30a78:	beq	30aa0 <flatcc_builder_create_buffer@@Base+0x148>
   30a7c:	movw	r3, #50020	; 0xc364
   30a80:	add	r1, r1, r6
   30a84:	add	r0, lr, r2, lsl #3
   30a88:	add	r2, r2, #1
   30a8c:	movt	r3, #4
   30a90:	str	r1, [sp, #16]
   30a94:	str	r3, [r0, #8]
   30a98:	str	r6, [r0, #12]
   30a9c:	str	r2, [sp, #20]
   30aa0:	ldr	r5, [sp, #4]
   30aa4:	sub	r7, r9, r1
   30aa8:	cmp	ip, #0
   30aac:	mov	r6, #144	; 0x90
   30ab0:	ldr	r3, [sp, #8]
   30ab4:	mov	r0, r7
   30ab8:	addne	r0, r0, #4
   30abc:	cmp	r5, #0
   30ac0:	sub	r3, r3, r0
   30ac4:	movweq	r6, #140	; 0x8c
   30ac8:	cmp	r1, #0
   30acc:	ldr	r6, [r4, r6]
   30ad0:	str	r3, [fp, #-36]	; 0xffffffdc
   30ad4:	sub	r0, r6, r0
   30ad8:	str	r0, [fp, #-40]	; 0xffffffd8
   30adc:	ble	30b34 <flatcc_builder_create_buffer@@Base+0x1dc>
   30ae0:	ldr	r0, [r4, #36]	; 0x24
   30ae4:	ldr	r6, [r4, #44]	; 0x2c
   30ae8:	str	r1, [sp]
   30aec:	add	r1, lr, #8
   30af0:	mov	r3, r7
   30af4:	blx	r6
   30af8:	cmp	r0, #0
   30afc:	bne	30b54 <flatcc_builder_create_buffer@@Base+0x1fc>
   30b00:	cmp	r7, #0
   30b04:	str	r7, [r4, #136]	; 0x88
   30b08:	movne	r0, r7
   30b0c:	subne	sp, fp, #28
   30b10:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30b14:	movw	r0, #55068	; 0xd71c
   30b18:	movw	r1, #50550	; 0xc576
   30b1c:	movw	r3, #50865	; 0xc6b1
   30b20:	mov	r2, #772	; 0x304
   30b24:	movt	r0, #4
   30b28:	movt	r1, #4
   30b2c:	movt	r3, #4
   30b30:	bl	14f44 <__assert_fail@plt>
   30b34:	movw	r0, #55068	; 0xd71c
   30b38:	movw	r1, #50550	; 0xc576
   30b3c:	movw	r3, #54747	; 0xd5db
   30b40:	movw	r2, #647	; 0x287
   30b44:	movt	r0, #4
   30b48:	movt	r1, #4
   30b4c:	movt	r3, #4
   30b50:	bl	14f44 <__assert_fail@plt>
   30b54:	movw	r0, #55068	; 0xd71c
   30b58:	movw	r1, #50550	; 0xc576
   30b5c:	movw	r3, #54747	; 0xd5db
   30b60:	movw	r2, #651	; 0x28b
   30b64:	movt	r0, #4
   30b68:	movt	r1, #4
   30b6c:	movt	r3, #4
   30b70:	bl	14f44 <__assert_fail@plt>

00030b74 <flatcc_builder_create_struct@@Base>:
   30b74:	push	{r4, r5, r6, sl, fp, lr}
   30b78:	add	fp, sp, #16
   30b7c:	sub	sp, sp, #80	; 0x50
   30b80:	cmp	r3, #0
   30b84:	beq	30c5c <flatcc_builder_create_struct@@Base+0xe8>
   30b88:	mov	r5, r0
   30b8c:	ldrh	r0, [r0, #128]	; 0x80
   30b90:	mov	r4, #0
   30b94:	cmp	r0, r3
   30b98:	strhcc	r3, [r5, #128]	; 0x80
   30b9c:	sub	r3, r3, #1
   30ba0:	cmp	r2, #0
   30ba4:	ldr	r0, [r5, #136]	; 0x88
   30ba8:	str	r4, [sp, #12]
   30bac:	str	r4, [sp, #8]
   30bb0:	movne	r4, #1
   30bb4:	strne	r1, [sp, #16]
   30bb8:	strne	r2, [sp, #8]
   30bbc:	strne	r2, [sp, #20]
   30bc0:	strne	r4, [sp, #12]
   30bc4:	sub	r6, r0, r2
   30bc8:	and	r3, r6, r3
   30bcc:	cmp	r3, #0
   30bd0:	beq	30bfc <flatcc_builder_create_struct@@Base+0x88>
   30bd4:	add	r1, sp, #8
   30bd8:	movw	r6, #50020	; 0xc364
   30bdc:	add	r2, r3, r2
   30be0:	add	r1, r1, r4, lsl #3
   30be4:	add	r4, r4, #1
   30be8:	movt	r6, #4
   30bec:	str	r2, [sp, #8]
   30bf0:	str	r6, [r1, #8]
   30bf4:	str	r3, [r1, #12]
   30bf8:	str	r4, [sp, #12]
   30bfc:	cmp	r2, #0
   30c00:	ble	30c7c <flatcc_builder_create_struct@@Base+0x108>
   30c04:	sub	r6, r0, r2
   30c08:	ldr	r0, [r5, #36]	; 0x24
   30c0c:	ldr	ip, [r5, #44]	; 0x2c
   30c10:	add	r1, sp, #8
   30c14:	str	r2, [sp]
   30c18:	mov	r2, r4
   30c1c:	add	r1, r1, #8
   30c20:	mov	r3, r6
   30c24:	blx	ip
   30c28:	cmp	r0, #0
   30c2c:	streq	r6, [r5, #136]	; 0x88
   30c30:	moveq	r0, r6
   30c34:	subeq	sp, fp, #16
   30c38:	popeq	{r4, r5, r6, sl, fp, pc}
   30c3c:	movw	r0, #55068	; 0xd71c
   30c40:	movw	r1, #50550	; 0xc576
   30c44:	movw	r3, #54747	; 0xd5db
   30c48:	movw	r2, #651	; 0x28b
   30c4c:	movt	r0, #4
   30c50:	movt	r1, #4
   30c54:	movt	r3, #4
   30c58:	bl	14f44 <__assert_fail@plt>
   30c5c:	movw	r0, #50996	; 0xc734
   30c60:	movw	r1, #50550	; 0xc576
   30c64:	movw	r3, #51007	; 0xc73f
   30c68:	movw	r2, #783	; 0x30f
   30c6c:	movt	r0, #4
   30c70:	movt	r1, #4
   30c74:	movt	r3, #4
   30c78:	bl	14f44 <__assert_fail@plt>
   30c7c:	movw	r0, #55068	; 0xd71c
   30c80:	movw	r1, #50550	; 0xc576
   30c84:	movw	r3, #54747	; 0xd5db
   30c88:	movw	r2, #647	; 0x287
   30c8c:	movt	r0, #4
   30c90:	movt	r1, #4
   30c94:	movt	r3, #4
   30c98:	bl	14f44 <__assert_fail@plt>

00030c9c <flatcc_builder_start_buffer@@Base>:
   30c9c:	push	{r4, r5, r6, r7, fp, lr}
   30ca0:	add	fp, sp, #16
   30ca4:	mov	r5, r1
   30ca8:	ldrh	r1, [r0, #128]	; 0x80
   30cac:	mov	r6, r3
   30cb0:	mov	r7, r2
   30cb4:	mov	r4, r0
   30cb8:	bl	30d58 <flatcc_builder_start_buffer@@Base+0xbc>
   30cbc:	mov	r1, r0
   30cc0:	mvn	r0, #0
   30cc4:	cmp	r1, #0
   30cc8:	popne	{r4, r5, r6, r7, fp, pc}
   30ccc:	mov	r0, #1
   30cd0:	cmp	r5, #0
   30cd4:	strh	r0, [r4, #128]	; 0x80
   30cd8:	ldrh	r1, [r4, #132]	; 0x84
   30cdc:	ldr	r2, [r4, #32]
   30ce0:	strh	r1, [r2, #34]	; 0x22
   30ce4:	strh	r7, [r4, #132]	; 0x84
   30ce8:	ldrh	r1, [r4, #164]	; 0xa4
   30cec:	ldr	r2, [r4, #32]
   30cf0:	strh	r1, [r2, #32]
   30cf4:	strh	r6, [r4, #164]	; 0xa4
   30cf8:	ldr	r1, [r4, #32]
   30cfc:	ldr	r2, [r4, #144]	; 0x90
   30d00:	str	r2, [r1, #20]
   30d04:	ldr	r1, [r4, #32]
   30d08:	ldr	r2, [r4, #152]	; 0x98
   30d0c:	str	r2, [r1, #28]
   30d10:	ldr	r3, [r4, #148]	; 0x94
   30d14:	ldr	r1, [r4, #32]
   30d18:	ldr	r2, [r4, #136]	; 0x88
   30d1c:	ldr	r7, [r4, #168]	; 0xa8
   30d20:	add	r6, r3, #1
   30d24:	str	r2, [r4, #144]	; 0x90
   30d28:	str	r6, [r4, #148]	; 0x94
   30d2c:	str	r3, [r4, #152]	; 0x98
   30d30:	str	r7, [r1, #16]
   30d34:	movw	r1, #50020	; 0xc364
   30d38:	movt	r1, #4
   30d3c:	movne	r1, r5
   30d40:	ldr	r1, [r1]
   30d44:	str	r1, [r4, #168]	; 0xa8
   30d48:	ldr	r1, [r4, #32]
   30d4c:	strh	r0, [r1, #14]
   30d50:	mov	r0, #0
   30d54:	pop	{r4, r5, r6, r7, fp, pc}
   30d58:	push	{r4, r5, r6, r7, fp, lr}
   30d5c:	add	fp, sp, #16
   30d60:	sub	sp, sp, #8
   30d64:	mov	r5, r1
   30d68:	ldr	r1, [r0, #156]	; 0x9c
   30d6c:	ldr	r2, [r0, #160]	; 0xa0
   30d70:	mov	r4, r0
   30d74:	add	r0, r1, #1
   30d78:	cmp	r1, r2
   30d7c:	str	r0, [r4, #156]	; 0x9c
   30d80:	bge	30d94 <flatcc_builder_start_buffer@@Base+0xf8>
   30d84:	ldr	r0, [r4, #32]
   30d88:	add	r0, r0, #36	; 0x24
   30d8c:	str	r0, [r4, #32]
   30d90:	b	30e28 <flatcc_builder_start_buffer@@Base+0x18c>
   30d94:	ldr	r2, [r4, #176]	; 0xb0
   30d98:	mvn	r6, #0
   30d9c:	cmp	r2, #1
   30da0:	cmpge	r1, r2
   30da4:	bge	30e60 <flatcc_builder_start_buffer@@Base+0x1c4>
   30da8:	add	r7, r0, r0, lsl #3
   30dac:	ldr	r0, [r4, #88]	; 0x58
   30db0:	lsl	r2, r7, #2
   30db4:	cmp	r2, r0
   30db8:	bls	30de0 <flatcc_builder_start_buffer@@Base+0x144>
   30dbc:	ldr	r0, [r4, #40]	; 0x28
   30dc0:	ldr	ip, [r4, #48]	; 0x30
   30dc4:	mov	r3, #4
   30dc8:	add	r1, r4, #84	; 0x54
   30dcc:	str	r3, [sp]
   30dd0:	mov	r3, #0
   30dd4:	blx	ip
   30dd8:	cmp	r0, #0
   30ddc:	bne	30e6c <flatcc_builder_start_buffer@@Base+0x1d0>
   30de0:	ldr	r1, [r4, #84]	; 0x54
   30de4:	mvn	r0, #35	; 0x23
   30de8:	add	r0, r0, r7, lsl #2
   30dec:	adds	r0, r0, r1
   30df0:	str	r0, [r4, #32]
   30df4:	beq	30e60 <flatcc_builder_start_buffer@@Base+0x1c4>
   30df8:	ldr	r1, [r4, #88]	; 0x58
   30dfc:	movw	r3, #36409	; 0x8e39
   30e00:	ldr	r2, [r4, #176]	; 0xb0
   30e04:	movt	r3, #14563	; 0x38e3
   30e08:	umull	r1, r3, r1, r3
   30e0c:	lsr	r1, r3, #3
   30e10:	cmp	r2, r3, lsr #3
   30e14:	mov	r3, r1
   30e18:	movlt	r3, r2
   30e1c:	cmp	r2, #0
   30e20:	movle	r3, r1
   30e24:	str	r3, [r4, #160]	; 0xa0
   30e28:	ldr	r1, [r4, #20]
   30e2c:	mvn	r3, #3
   30e30:	mov	r6, #0
   30e34:	str	r1, [r0, #8]
   30e38:	ldrh	r2, [r4, #130]	; 0x82
   30e3c:	strh	r2, [r0, #12]
   30e40:	strh	r5, [r4, #130]	; 0x82
   30e44:	ldr	r2, [r4, #28]
   30e48:	stm	r0, {r2, r3}
   30e4c:	add	r0, r1, r2
   30e50:	str	r6, [r4, #20]
   30e54:	add	r0, r0, #7
   30e58:	bic	r0, r0, #7
   30e5c:	str	r0, [r4, #28]
   30e60:	mov	r0, r6
   30e64:	sub	sp, fp, #16
   30e68:	pop	{r4, r5, r6, r7, fp, pc}
   30e6c:	movw	r0, #55068	; 0xd71c
   30e70:	movw	r1, #50550	; 0xc576
   30e74:	movw	r3, #54614	; 0xd556
   30e78:	mov	r2, #308	; 0x134
   30e7c:	movt	r0, #4
   30e80:	movt	r1, #4
   30e84:	movt	r3, #4
   30e88:	bl	14f44 <__assert_fail@plt>

00030e8c <flatcc_builder_end_buffer@@Base>:
   30e8c:	push	{r4, r5, r6, sl, fp, lr}
   30e90:	add	fp, sp, #16
   30e94:	sub	sp, sp, #8
   30e98:	mov	r4, r0
   30e9c:	ldr	r0, [r0, #32]
   30ea0:	ldrh	r0, [r0, #14]
   30ea4:	cmp	r0, #1
   30ea8:	bne	30f9c <flatcc_builder_end_buffer@@Base+0x110>
   30eac:	mov	r3, r1
   30eb0:	ldr	r1, [r4, #152]	; 0x98
   30eb4:	ldrh	r0, [r4, #164]	; 0xa4
   30eb8:	ldrh	r2, [r4, #132]	; 0x84
   30ebc:	cmp	r1, #0
   30ec0:	ldrh	r1, [r4, #128]	; 0x80
   30ec4:	and	r0, r0, #2
   30ec8:	orrne	r0, r0, #1
   30ecc:	cmp	r1, r2
   30ed0:	movcc	r1, r2
   30ed4:	strhcc	r2, [r4, #128]	; 0x80
   30ed8:	str	r0, [sp, #4]
   30edc:	mov	r0, r4
   30ee0:	str	r1, [sp]
   30ee4:	add	r1, r4, #168	; 0xa8
   30ee8:	bl	30958 <flatcc_builder_create_buffer@@Base>
   30eec:	mov	r6, r0
   30ef0:	cmp	r0, #0
   30ef4:	beq	30f90 <flatcc_builder_end_buffer@@Base+0x104>
   30ef8:	ldr	r1, [r4, #32]
   30efc:	ldr	r0, [r4, #16]
   30f00:	ldr	r2, [r4, #20]
   30f04:	ldr	r3, [r1, #20]
   30f08:	str	r3, [r4, #144]	; 0x90
   30f0c:	ldr	r3, [r1, #28]
   30f10:	str	r3, [r4, #152]	; 0x98
   30f14:	ldr	r3, [r1, #16]
   30f18:	str	r3, [r4, #168]	; 0xa8
   30f1c:	ldrh	r1, [r1, #32]
   30f20:	strh	r1, [r4, #164]	; 0xa4
   30f24:	mov	r1, #0
   30f28:	bl	14ef0 <memset@plt>
   30f2c:	ldr	r0, [r4, #32]
   30f30:	ldr	r1, [r4, #60]	; 0x3c
   30f34:	ldr	r2, [r4, #64]	; 0x40
   30f38:	ldr	r3, [r0, #8]
   30f3c:	str	r3, [r4, #20]
   30f40:	ldr	r3, [r0]
   30f44:	str	r3, [r4, #28]
   30f48:	add	r1, r1, r3
   30f4c:	ldr	r5, [r0, #4]
   30f50:	str	r1, [r4, #16]
   30f54:	sub	r1, r2, r3
   30f58:	cmp	r1, r5
   30f5c:	movhi	r1, r5
   30f60:	str	r1, [r4, #24]
   30f64:	ldrh	r1, [r4, #130]	; 0x82
   30f68:	ldrh	r2, [r4, #128]	; 0x80
   30f6c:	cmp	r2, r1
   30f70:	strhcc	r1, [r4, #128]	; 0x80
   30f74:	ldrh	r1, [r0, #12]
   30f78:	sub	r0, r0, #36	; 0x24
   30f7c:	str	r0, [r4, #32]
   30f80:	strh	r1, [r4, #130]	; 0x82
   30f84:	ldr	r0, [r4, #156]	; 0x9c
   30f88:	sub	r0, r0, #1
   30f8c:	str	r0, [r4, #156]	; 0x9c
   30f90:	mov	r0, r6
   30f94:	sub	sp, fp, #16
   30f98:	pop	{r4, r5, r6, sl, fp, pc}
   30f9c:	movw	r0, #51109	; 0xc7a5
   30fa0:	movw	r1, #50550	; 0xc576
   30fa4:	movw	r3, #51153	; 0xc7d1
   30fa8:	movw	r2, #838	; 0x346
   30fac:	movt	r0, #4
   30fb0:	movt	r1, #4
   30fb4:	movt	r3, #4
   30fb8:	bl	14f44 <__assert_fail@plt>

00030fbc <flatcc_builder_start_struct@@Base>:
   30fbc:	push	{r4, r5, r6, r7, fp, lr}
   30fc0:	add	fp, sp, #16
   30fc4:	sub	sp, sp, #8
   30fc8:	mov	r6, r1
   30fcc:	mov	r1, r2
   30fd0:	mov	r4, r0
   30fd4:	bl	30d58 <flatcc_builder_start_buffer@@Base+0xbc>
   30fd8:	mov	r5, #0
   30fdc:	cmp	r0, #0
   30fe0:	bne	3105c <flatcc_builder_start_struct@@Base+0xa0>
   30fe4:	ldr	r2, [r4, #32]
   30fe8:	mov	r0, #2
   30fec:	mvn	r7, #3
   30ff0:	strh	r0, [r2, #14]
   30ff4:	ldr	r1, [r4, #28]
   30ff8:	ldr	r3, [r4, #64]	; 0x40
   30ffc:	ldr	r0, [r4, #60]	; 0x3c
   31000:	sub	r3, r3, r1
   31004:	add	r0, r0, r1
   31008:	cmn	r3, #4
   3100c:	str	r0, [r4, #16]
   31010:	movcs	r3, r7
   31014:	str	r3, [r4, #24]
   31018:	str	r7, [r2, #4]
   3101c:	ldr	r7, [r4, #20]
   31020:	add	r2, r7, r6
   31024:	cmp	r2, r3
   31028:	str	r2, [r4, #20]
   3102c:	bcc	31098 <flatcc_builder_start_struct@@Base+0xdc>
   31030:	ldr	r0, [r4, #40]	; 0x28
   31034:	ldr	r6, [r4, #48]	; 0x30
   31038:	add	r1, r1, r2
   3103c:	mov	r3, #1
   31040:	str	r3, [sp]
   31044:	add	r2, r1, #1
   31048:	add	r1, r4, #60	; 0x3c
   3104c:	mov	r3, #1
   31050:	blx	r6
   31054:	cmp	r0, #0
   31058:	beq	31068 <flatcc_builder_start_struct@@Base+0xac>
   3105c:	mov	r0, r5
   31060:	sub	sp, fp, #16
   31064:	pop	{r4, r5, r6, r7, fp, pc}
   31068:	ldr	r1, [r4, #28]
   3106c:	ldr	r0, [r4, #60]	; 0x3c
   31070:	ldr	r3, [r4, #64]	; 0x40
   31074:	ldr	r2, [r4, #32]
   31078:	add	r0, r0, r1
   3107c:	sub	r1, r3, r1
   31080:	mvn	r3, #3
   31084:	cmn	r1, #4
   31088:	str	r0, [r4, #16]
   3108c:	movcs	r1, r3
   31090:	str	r1, [r4, #24]
   31094:	str	r3, [r2, #4]
   31098:	add	r5, r0, r7
   3109c:	mov	r0, r5
   310a0:	sub	sp, fp, #16
   310a4:	pop	{r4, r5, r6, r7, fp, pc}

000310a8 <flatcc_builder_struct_edit@@Base>:
   310a8:	ldr	r0, [r0, #16]
   310ac:	bx	lr

000310b0 <flatcc_builder_end_struct@@Base>:
   310b0:	push	{r4, r5, fp, lr}
   310b4:	add	fp, sp, #8
   310b8:	mov	r4, r0
   310bc:	ldr	r0, [r0, #32]
   310c0:	ldrh	r0, [r0, #14]
   310c4:	cmp	r0, #2
   310c8:	bne	31168 <flatcc_builder_end_struct@@Base+0xb8>
   310cc:	ldrh	r3, [r4, #130]	; 0x82
   310d0:	ldr	r1, [r4, #16]
   310d4:	ldr	r2, [r4, #20]
   310d8:	mov	r0, r4
   310dc:	bl	30b74 <flatcc_builder_create_struct@@Base>
   310e0:	mov	r5, r0
   310e4:	cmp	r0, #0
   310e8:	beq	31160 <flatcc_builder_end_struct@@Base+0xb0>
   310ec:	ldr	r0, [r4, #16]
   310f0:	ldr	r2, [r4, #20]
   310f4:	mov	r1, #0
   310f8:	bl	14ef0 <memset@plt>
   310fc:	ldr	r0, [r4, #32]
   31100:	ldr	r1, [r4, #60]	; 0x3c
   31104:	ldr	ip, [r4, #64]	; 0x40
   31108:	ldr	r3, [r0, #8]
   3110c:	str	r3, [r4, #20]
   31110:	ldr	r3, [r0]
   31114:	str	r3, [r4, #28]
   31118:	add	r1, r1, r3
   3111c:	ldr	r2, [r0, #4]
   31120:	str	r1, [r4, #16]
   31124:	sub	r1, ip, r3
   31128:	cmp	r1, r2
   3112c:	movhi	r1, r2
   31130:	str	r1, [r4, #24]
   31134:	ldrh	r1, [r4, #130]	; 0x82
   31138:	ldrh	r2, [r4, #128]	; 0x80
   3113c:	cmp	r2, r1
   31140:	strhcc	r1, [r4, #128]	; 0x80
   31144:	ldrh	r1, [r0, #12]
   31148:	sub	r0, r0, #36	; 0x24
   3114c:	str	r0, [r4, #32]
   31150:	strh	r1, [r4, #130]	; 0x82
   31154:	ldr	r0, [r4, #156]	; 0x9c
   31158:	sub	r0, r0, #1
   3115c:	str	r0, [r4, #156]	; 0x9c
   31160:	mov	r0, r5
   31164:	pop	{r4, r5, fp, pc}
   31168:	movw	r0, #51242	; 0xc82a
   3116c:	movw	r1, #50550	; 0xc576
   31170:	movw	r3, #51286	; 0xc856
   31174:	mov	r2, #872	; 0x368
   31178:	movt	r0, #4
   3117c:	movt	r1, #4
   31180:	movt	r3, #4
   31184:	bl	14f44 <__assert_fail@plt>

00031188 <flatcc_builder_extend_vector@@Base>:
   31188:	push	{r4, r5, fp, lr}
   3118c:	add	fp, sp, #8
   31190:	sub	sp, sp, #8
   31194:	mov	r4, r0
   31198:	ldr	r0, [r0, #32]
   3119c:	ldr	r2, [r0, #20]
   311a0:	adds	r2, r2, r1
   311a4:	bcs	31264 <flatcc_builder_extend_vector@@Base+0xdc>
   311a8:	ldr	r3, [r0, #24]
   311ac:	cmp	r2, r3
   311b0:	bhi	31264 <flatcc_builder_extend_vector@@Base+0xdc>
   311b4:	str	r2, [r0, #20]
   311b8:	ldr	r2, [r4, #32]
   311bc:	ldr	r5, [r4, #20]
   311c0:	ldr	r0, [r4, #24]
   311c4:	ldr	r2, [r2, #16]
   311c8:	mla	r1, r2, r1, r5
   311cc:	cmp	r1, r0
   311d0:	str	r1, [r4, #20]
   311d4:	bcs	311e8 <flatcc_builder_extend_vector@@Base+0x60>
   311d8:	ldr	r0, [r4, #16]
   311dc:	add	r0, r0, r5
   311e0:	sub	sp, fp, #8
   311e4:	pop	{r4, r5, fp, pc}
   311e8:	ldr	r2, [r4, #28]
   311ec:	ldr	r0, [r4, #40]	; 0x28
   311f0:	ldr	ip, [r4, #48]	; 0x30
   311f4:	mov	r3, #1
   311f8:	str	r3, [sp]
   311fc:	mov	r3, #1
   31200:	add	r1, r1, r2
   31204:	add	r2, r1, #1
   31208:	add	r1, r4, #60	; 0x3c
   3120c:	blx	ip
   31210:	mov	r1, r0
   31214:	mov	r0, #0
   31218:	cmp	r1, #0
   3121c:	beq	31228 <flatcc_builder_extend_vector@@Base+0xa0>
   31220:	sub	sp, fp, #8
   31224:	pop	{r4, r5, fp, pc}
   31228:	ldr	r1, [r4, #28]
   3122c:	ldr	r0, [r4, #60]	; 0x3c
   31230:	ldr	r3, [r4, #64]	; 0x40
   31234:	ldr	r2, [r4, #32]
   31238:	add	r0, r0, r1
   3123c:	sub	r1, r3, r1
   31240:	mvn	r3, #3
   31244:	cmn	r1, #4
   31248:	str	r0, [r4, #16]
   3124c:	movcs	r1, r3
   31250:	str	r1, [r4, #24]
   31254:	str	r3, [r2, #4]
   31258:	add	r0, r0, r5
   3125c:	sub	sp, fp, #8
   31260:	pop	{r4, r5, fp, pc}
   31264:	movw	r0, #54821	; 0xd625
   31268:	movw	r1, #50550	; 0xc576
   3126c:	movw	r3, #54848	; 0xd640
   31270:	mov	r2, #892	; 0x37c
   31274:	movt	r0, #4
   31278:	movt	r1, #4
   3127c:	movt	r3, #4
   31280:	bl	14f44 <__assert_fail@plt>

00031284 <flatcc_builder_vector_push@@Base>:
   31284:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   31288:	add	fp, sp, #24
   3128c:	sub	sp, sp, #8
   31290:	mov	r5, r0
   31294:	ldr	r0, [r0, #32]
   31298:	mov	r8, r1
   3129c:	ldrh	r1, [r0, #14]
   312a0:	cmp	r1, #4
   312a4:	bne	31390 <flatcc_builder_vector_push@@Base+0x10c>
   312a8:	ldr	r1, [r0, #20]
   312ac:	ldr	r2, [r0, #24]
   312b0:	cmp	r1, r2
   312b4:	bhi	313b0 <flatcc_builder_vector_push@@Base+0x12c>
   312b8:	add	r1, r1, #1
   312bc:	str	r1, [r0, #20]
   312c0:	ldr	r1, [r5, #32]
   312c4:	ldr	r4, [r5, #20]
   312c8:	ldr	r0, [r5, #24]
   312cc:	ldr	r6, [r1, #16]
   312d0:	add	r1, r4, r6
   312d4:	cmp	r1, r0
   312d8:	str	r1, [r5, #20]
   312dc:	bcs	31308 <flatcc_builder_vector_push@@Base+0x84>
   312e0:	ldr	r0, [r5, #16]
   312e4:	adds	r7, r0, r4
   312e8:	beq	31380 <flatcc_builder_vector_push@@Base+0xfc>
   312ec:	mov	r0, r7
   312f0:	mov	r1, r8
   312f4:	mov	r2, r6
   312f8:	bl	14e60 <memcpy@plt>
   312fc:	mov	r0, r7
   31300:	sub	sp, fp, #24
   31304:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31308:	ldr	r2, [r5, #28]
   3130c:	ldr	r0, [r5, #40]	; 0x28
   31310:	ldr	r7, [r5, #48]	; 0x30
   31314:	mov	r3, #1
   31318:	str	r3, [sp]
   3131c:	mov	r3, #1
   31320:	add	r1, r1, r2
   31324:	add	r2, r1, #1
   31328:	add	r1, r5, #60	; 0x3c
   3132c:	blx	r7
   31330:	mov	r7, #0
   31334:	cmp	r0, #0
   31338:	beq	31348 <flatcc_builder_vector_push@@Base+0xc4>
   3133c:	mov	r0, r7
   31340:	sub	sp, fp, #24
   31344:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31348:	ldr	r1, [r5, #28]
   3134c:	ldr	r0, [r5, #60]	; 0x3c
   31350:	ldr	r3, [r5, #64]	; 0x40
   31354:	ldr	r2, [r5, #32]
   31358:	add	r0, r0, r1
   3135c:	sub	r1, r3, r1
   31360:	mvn	r3, #3
   31364:	cmn	r1, #4
   31368:	str	r0, [r5, #16]
   3136c:	movcs	r1, r3
   31370:	str	r1, [r5, #24]
   31374:	str	r3, [r2, #4]
   31378:	adds	r7, r0, r4
   3137c:	bne	312ec <flatcc_builder_vector_push@@Base+0x68>
   31380:	mov	r7, #0
   31384:	mov	r0, r7
   31388:	sub	sp, fp, #24
   3138c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31390:	movw	r0, #51353	; 0xc899
   31394:	movw	r1, #50550	; 0xc576
   31398:	movw	r3, #51397	; 0xc8c5
   3139c:	movw	r2, #907	; 0x38b
   313a0:	movt	r0, #4
   313a4:	movt	r1, #4
   313a8:	movt	r3, #4
   313ac:	bl	14f44 <__assert_fail@plt>
   313b0:	movw	r0, #51464	; 0xc908
   313b4:	movw	r1, #50550	; 0xc576
   313b8:	movw	r3, #51397	; 0xc8c5
   313bc:	mov	r2, #908	; 0x38c
   313c0:	movt	r0, #4
   313c4:	movt	r1, #4
   313c8:	movt	r3, #4
   313cc:	bl	14f44 <__assert_fail@plt>

000313d0 <flatcc_builder_append_vector@@Base>:
   313d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   313d4:	add	fp, sp, #24
   313d8:	sub	sp, sp, #8
   313dc:	mov	r6, r0
   313e0:	ldr	r0, [r0, #32]
   313e4:	mov	r8, r1
   313e8:	ldrh	r1, [r0, #14]
   313ec:	cmp	r1, #4
   313f0:	bne	31504 <flatcc_builder_append_vector@@Base+0x134>
   313f4:	ldr	r1, [r0, #20]
   313f8:	mov	r5, r2
   313fc:	adds	r1, r1, r2
   31400:	bcs	314e4 <flatcc_builder_append_vector@@Base+0x114>
   31404:	ldr	r2, [r0, #24]
   31408:	cmp	r1, r2
   3140c:	bhi	314e4 <flatcc_builder_append_vector@@Base+0x114>
   31410:	str	r1, [r0, #20]
   31414:	ldr	r1, [r6, #32]
   31418:	ldr	r4, [r6, #20]
   3141c:	ldr	r0, [r6, #24]
   31420:	ldr	r9, [r1, #16]
   31424:	mla	r1, r9, r5, r4
   31428:	cmp	r1, r0
   3142c:	str	r1, [r6, #20]
   31430:	bcs	3145c <flatcc_builder_append_vector@@Base+0x8c>
   31434:	ldr	r0, [r6, #16]
   31438:	adds	r7, r0, r4
   3143c:	beq	314d4 <flatcc_builder_append_vector@@Base+0x104>
   31440:	mul	r2, r9, r5
   31444:	mov	r0, r7
   31448:	mov	r1, r8
   3144c:	bl	14e60 <memcpy@plt>
   31450:	mov	r0, r7
   31454:	sub	sp, fp, #24
   31458:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3145c:	ldr	r2, [r6, #28]
   31460:	ldr	r0, [r6, #40]	; 0x28
   31464:	ldr	r7, [r6, #48]	; 0x30
   31468:	mov	r3, #1
   3146c:	str	r3, [sp]
   31470:	mov	r3, #1
   31474:	add	r1, r1, r2
   31478:	add	r2, r1, #1
   3147c:	add	r1, r6, #60	; 0x3c
   31480:	blx	r7
   31484:	mov	r7, #0
   31488:	cmp	r0, #0
   3148c:	beq	3149c <flatcc_builder_append_vector@@Base+0xcc>
   31490:	mov	r0, r7
   31494:	sub	sp, fp, #24
   31498:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3149c:	ldr	r1, [r6, #28]
   314a0:	ldr	r0, [r6, #60]	; 0x3c
   314a4:	ldr	r3, [r6, #64]	; 0x40
   314a8:	ldr	r2, [r6, #32]
   314ac:	add	r0, r0, r1
   314b0:	sub	r1, r3, r1
   314b4:	mvn	r3, #3
   314b8:	cmn	r1, #4
   314bc:	str	r0, [r6, #16]
   314c0:	movcs	r1, r3
   314c4:	str	r1, [r6, #24]
   314c8:	str	r3, [r2, #4]
   314cc:	adds	r7, r0, r4
   314d0:	bne	31440 <flatcc_builder_append_vector@@Base+0x70>
   314d4:	mov	r7, #0
   314d8:	mov	r0, r7
   314dc:	sub	sp, fp, #24
   314e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   314e4:	movw	r0, #54821	; 0xd625
   314e8:	movw	r1, #50550	; 0xc576
   314ec:	movw	r3, #54848	; 0xd640
   314f0:	mov	r2, #892	; 0x37c
   314f4:	movt	r0, #4
   314f8:	movt	r1, #4
   314fc:	movt	r3, #4
   31500:	bl	14f44 <__assert_fail@plt>
   31504:	movw	r0, #51353	; 0xc899
   31508:	movw	r1, #50550	; 0xc576
   3150c:	movw	r3, #51525	; 0xc945
   31510:	movw	r2, #915	; 0x393
   31514:	movt	r0, #4
   31518:	movt	r1, #4
   3151c:	movt	r3, #4
   31520:	bl	14f44 <__assert_fail@plt>

00031524 <flatcc_builder_extend_offset_vector@@Base>:
   31524:	push	{r4, r5, fp, lr}
   31528:	add	fp, sp, #8
   3152c:	sub	sp, sp, #8
   31530:	mov	r4, r0
   31534:	ldr	r0, [r0, #32]
   31538:	ldr	r2, [r0, #20]
   3153c:	adds	r2, r2, r1
   31540:	cmpcc	r2, #1073741824	; 0x40000000
   31544:	bcc	31568 <flatcc_builder_extend_offset_vector@@Base+0x44>
   31548:	movw	r0, #54821	; 0xd625
   3154c:	movw	r1, #50550	; 0xc576
   31550:	movw	r3, #54848	; 0xd640
   31554:	mov	r2, #892	; 0x37c
   31558:	movt	r0, #4
   3155c:	movt	r1, #4
   31560:	movt	r3, #4
   31564:	bl	14f44 <__assert_fail@plt>
   31568:	str	r2, [r0, #20]
   3156c:	ldr	r5, [r4, #20]
   31570:	ldr	r0, [r4, #24]
   31574:	add	r1, r5, r1, lsl #2
   31578:	cmp	r1, r0
   3157c:	str	r1, [r4, #20]
   31580:	bcs	31594 <flatcc_builder_extend_offset_vector@@Base+0x70>
   31584:	ldr	r0, [r4, #16]
   31588:	add	r0, r0, r5
   3158c:	sub	sp, fp, #8
   31590:	pop	{r4, r5, fp, pc}
   31594:	ldr	r2, [r4, #28]
   31598:	ldr	r0, [r4, #40]	; 0x28
   3159c:	ldr	ip, [r4, #48]	; 0x30
   315a0:	mov	r3, #1
   315a4:	str	r3, [sp]
   315a8:	mov	r3, #1
   315ac:	add	r1, r1, r2
   315b0:	add	r2, r1, #1
   315b4:	add	r1, r4, #60	; 0x3c
   315b8:	blx	ip
   315bc:	mov	r1, r0
   315c0:	mov	r0, #0
   315c4:	cmp	r1, #0
   315c8:	beq	315d4 <flatcc_builder_extend_offset_vector@@Base+0xb0>
   315cc:	sub	sp, fp, #8
   315d0:	pop	{r4, r5, fp, pc}
   315d4:	ldr	r1, [r4, #28]
   315d8:	ldr	r0, [r4, #60]	; 0x3c
   315dc:	ldr	r3, [r4, #64]	; 0x40
   315e0:	ldr	r2, [r4, #32]
   315e4:	add	r0, r0, r1
   315e8:	sub	r1, r3, r1
   315ec:	mvn	r3, #3
   315f0:	cmn	r1, #4
   315f4:	str	r0, [r4, #16]
   315f8:	movcs	r1, r3
   315fc:	str	r1, [r4, #24]
   31600:	str	r3, [r2, #4]
   31604:	add	r0, r0, r5
   31608:	sub	sp, fp, #8
   3160c:	pop	{r4, r5, fp, pc}

00031610 <flatcc_builder_offset_vector_push@@Base>:
   31610:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   31614:	add	fp, sp, #24
   31618:	sub	sp, sp, #8
   3161c:	mov	r6, r0
   31620:	ldr	r0, [r0, #32]
   31624:	mov	r8, r1
   31628:	ldrh	r1, [r0, #14]
   3162c:	cmp	r1, #5
   31630:	bne	316f0 <flatcc_builder_offset_vector_push@@Base+0xe0>
   31634:	ldr	r1, [r0, #20]
   31638:	mov	r5, #0
   3163c:	cmn	r1, #-1073741823	; 0xc0000001
   31640:	beq	3169c <flatcc_builder_offset_vector_push@@Base+0x8c>
   31644:	add	r1, r1, #1
   31648:	str	r1, [r0, #20]
   3164c:	ldr	r7, [r6, #20]
   31650:	ldr	r0, [r6, #24]
   31654:	add	r1, r7, #4
   31658:	cmp	r1, r0
   3165c:	str	r1, [r6, #20]
   31660:	bcs	3166c <flatcc_builder_offset_vector_push@@Base+0x5c>
   31664:	ldr	r0, [r6, #16]
   31668:	b	316d8 <flatcc_builder_offset_vector_push@@Base+0xc8>
   3166c:	ldr	r1, [r6, #28]
   31670:	ldr	r0, [r6, #40]	; 0x28
   31674:	ldr	r4, [r6, #48]	; 0x30
   31678:	mov	r2, #1
   3167c:	mov	r3, #1
   31680:	str	r2, [sp]
   31684:	add	r1, r7, r1
   31688:	add	r2, r1, #5
   3168c:	add	r1, r6, #60	; 0x3c
   31690:	blx	r4
   31694:	cmp	r0, #0
   31698:	beq	316a8 <flatcc_builder_offset_vector_push@@Base+0x98>
   3169c:	mov	r0, r5
   316a0:	sub	sp, fp, #24
   316a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   316a8:	ldr	r1, [r6, #28]
   316ac:	ldr	r0, [r6, #60]	; 0x3c
   316b0:	ldr	r3, [r6, #64]	; 0x40
   316b4:	ldr	r2, [r6, #32]
   316b8:	add	r0, r0, r1
   316bc:	sub	r1, r3, r1
   316c0:	mvn	r3, #3
   316c4:	cmn	r1, #4
   316c8:	str	r0, [r6, #16]
   316cc:	movcs	r1, r3
   316d0:	str	r1, [r6, #24]
   316d4:	str	r3, [r2, #4]
   316d8:	adds	r0, r0, r7
   316dc:	movne	r5, r0
   316e0:	strne	r8, [r0]
   316e4:	mov	r0, r5
   316e8:	sub	sp, fp, #24
   316ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   316f0:	movw	r0, #51602	; 0xc992
   316f4:	movw	r1, #50550	; 0xc576
   316f8:	movw	r3, #51653	; 0xc9c5
   316fc:	movw	r2, #934	; 0x3a6
   31700:	movt	r0, #4
   31704:	movt	r1, #4
   31708:	movt	r3, #4
   3170c:	bl	14f44 <__assert_fail@plt>

00031710 <flatcc_builder_append_offset_vector@@Base>:
   31710:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   31714:	add	fp, sp, #24
   31718:	sub	sp, sp, #8
   3171c:	mov	r6, r0
   31720:	ldr	r0, [r0, #32]
   31724:	mov	r8, r1
   31728:	ldrh	r1, [r0, #14]
   3172c:	cmp	r1, #5
   31730:	bne	31834 <flatcc_builder_append_offset_vector@@Base+0x124>
   31734:	ldr	r1, [r0, #20]
   31738:	mov	r5, r2
   3173c:	adds	r1, r1, r2
   31740:	cmpcc	r1, #1073741824	; 0x40000000
   31744:	bcc	31768 <flatcc_builder_append_offset_vector@@Base+0x58>
   31748:	movw	r0, #54821	; 0xd625
   3174c:	movw	r1, #50550	; 0xc576
   31750:	movw	r3, #54848	; 0xd640
   31754:	mov	r2, #892	; 0x37c
   31758:	movt	r0, #4
   3175c:	movt	r1, #4
   31760:	movt	r3, #4
   31764:	bl	14f44 <__assert_fail@plt>
   31768:	str	r1, [r0, #20]
   3176c:	ldr	r4, [r6, #20]
   31770:	ldr	r0, [r6, #24]
   31774:	add	r1, r4, r5, lsl #2
   31778:	cmp	r1, r0
   3177c:	str	r1, [r6, #20]
   31780:	bcs	317ac <flatcc_builder_append_offset_vector@@Base+0x9c>
   31784:	ldr	r0, [r6, #16]
   31788:	adds	r7, r0, r4
   3178c:	beq	31824 <flatcc_builder_append_offset_vector@@Base+0x114>
   31790:	lsl	r2, r5, #2
   31794:	mov	r0, r7
   31798:	mov	r1, r8
   3179c:	bl	14e60 <memcpy@plt>
   317a0:	mov	r0, r7
   317a4:	sub	sp, fp, #24
   317a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   317ac:	ldr	r2, [r6, #28]
   317b0:	ldr	r0, [r6, #40]	; 0x28
   317b4:	ldr	r7, [r6, #48]	; 0x30
   317b8:	mov	r3, #1
   317bc:	str	r3, [sp]
   317c0:	mov	r3, #1
   317c4:	add	r1, r1, r2
   317c8:	add	r2, r1, #1
   317cc:	add	r1, r6, #60	; 0x3c
   317d0:	blx	r7
   317d4:	mov	r7, #0
   317d8:	cmp	r0, #0
   317dc:	beq	317ec <flatcc_builder_append_offset_vector@@Base+0xdc>
   317e0:	mov	r0, r7
   317e4:	sub	sp, fp, #24
   317e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   317ec:	ldr	r1, [r6, #28]
   317f0:	ldr	r0, [r6, #60]	; 0x3c
   317f4:	ldr	r3, [r6, #64]	; 0x40
   317f8:	ldr	r2, [r6, #32]
   317fc:	add	r0, r0, r1
   31800:	sub	r1, r3, r1
   31804:	mvn	r3, #3
   31808:	cmn	r1, #4
   3180c:	str	r0, [r6, #16]
   31810:	movcs	r1, r3
   31814:	str	r1, [r6, #24]
   31818:	str	r3, [r2, #4]
   3181c:	adds	r7, r0, r4
   31820:	bne	31790 <flatcc_builder_append_offset_vector@@Base+0x80>
   31824:	mov	r7, #0
   31828:	mov	r0, r7
   3182c:	sub	sp, fp, #24
   31830:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31834:	movw	r0, #51602	; 0xc992
   31838:	movw	r1, #50550	; 0xc576
   3183c:	movw	r3, #51751	; 0xca27
   31840:	mov	r2, #948	; 0x3b4
   31844:	movt	r0, #4
   31848:	movt	r1, #4
   3184c:	movt	r3, #4
   31850:	bl	14f44 <__assert_fail@plt>

00031854 <flatcc_builder_extend_string@@Base>:
   31854:	push	{r4, r5, fp, lr}
   31858:	add	fp, sp, #8
   3185c:	sub	sp, sp, #8
   31860:	mov	r4, r0
   31864:	ldr	r0, [r0, #32]
   31868:	ldrh	r2, [r0, #14]
   3186c:	cmp	r2, #6
   31870:	bne	31928 <flatcc_builder_extend_string@@Base+0xd4>
   31874:	ldr	r2, [r0, #20]
   31878:	adds	r2, r2, r1
   3187c:	bcs	31948 <flatcc_builder_extend_string@@Base+0xf4>
   31880:	str	r2, [r0, #20]
   31884:	ldr	r5, [r4, #20]
   31888:	ldr	r0, [r4, #24]
   3188c:	add	r1, r5, r1
   31890:	cmp	r1, r0
   31894:	str	r1, [r4, #20]
   31898:	bcs	318ac <flatcc_builder_extend_string@@Base+0x58>
   3189c:	ldr	r0, [r4, #16]
   318a0:	add	r0, r0, r5
   318a4:	sub	sp, fp, #8
   318a8:	pop	{r4, r5, fp, pc}
   318ac:	ldr	r2, [r4, #28]
   318b0:	ldr	r0, [r4, #40]	; 0x28
   318b4:	ldr	ip, [r4, #48]	; 0x30
   318b8:	mov	r3, #1
   318bc:	str	r3, [sp]
   318c0:	mov	r3, #1
   318c4:	add	r1, r1, r2
   318c8:	add	r2, r1, #1
   318cc:	add	r1, r4, #60	; 0x3c
   318d0:	blx	ip
   318d4:	mov	r1, r0
   318d8:	mov	r0, #0
   318dc:	cmp	r1, #0
   318e0:	beq	318ec <flatcc_builder_extend_string@@Base+0x98>
   318e4:	sub	sp, fp, #8
   318e8:	pop	{r4, r5, fp, pc}
   318ec:	ldr	r1, [r4, #28]
   318f0:	ldr	r0, [r4, #60]	; 0x3c
   318f4:	ldr	r3, [r4, #64]	; 0x40
   318f8:	ldr	r2, [r4, #32]
   318fc:	add	r0, r0, r1
   31900:	sub	r1, r3, r1
   31904:	mvn	r3, #3
   31908:	cmn	r1, #4
   3190c:	str	r0, [r4, #16]
   31910:	movcs	r1, r3
   31914:	str	r1, [r4, #24]
   31918:	str	r3, [r2, #4]
   3191c:	add	r0, r0, r5
   31920:	sub	sp, fp, #8
   31924:	pop	{r4, r5, fp, pc}
   31928:	movw	r0, #51867	; 0xca9b
   3192c:	movw	r1, #50550	; 0xc576
   31930:	movw	r3, #51911	; 0xcac7
   31934:	movw	r2, #957	; 0x3bd
   31938:	movt	r0, #4
   3193c:	movt	r1, #4
   31940:	movt	r3, #4
   31944:	bl	14f44 <__assert_fail@plt>
   31948:	movw	r0, #54821	; 0xd625
   3194c:	movw	r1, #50550	; 0xc576
   31950:	movw	r3, #54848	; 0xd640
   31954:	mov	r2, #892	; 0x37c
   31958:	movt	r0, #4
   3195c:	movt	r1, #4
   31960:	movt	r3, #4
   31964:	bl	14f44 <__assert_fail@plt>

00031968 <flatcc_builder_append_string@@Base>:
   31968:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3196c:	add	fp, sp, #24
   31970:	sub	sp, sp, #8
   31974:	mov	r6, r0
   31978:	ldr	r0, [r0, #32]
   3197c:	mov	r8, r1
   31980:	ldrh	r1, [r0, #14]
   31984:	cmp	r1, #6
   31988:	bne	31a68 <flatcc_builder_append_string@@Base+0x100>
   3198c:	ldr	r1, [r0, #20]
   31990:	mov	r4, r2
   31994:	adds	r1, r1, r2
   31998:	bcs	31a88 <flatcc_builder_append_string@@Base+0x120>
   3199c:	str	r1, [r0, #20]
   319a0:	ldr	r5, [r6, #20]
   319a4:	ldr	r0, [r6, #24]
   319a8:	add	r1, r5, r4
   319ac:	cmp	r1, r0
   319b0:	str	r1, [r6, #20]
   319b4:	bcs	319e0 <flatcc_builder_append_string@@Base+0x78>
   319b8:	ldr	r0, [r6, #16]
   319bc:	adds	r7, r0, r5
   319c0:	beq	31a58 <flatcc_builder_append_string@@Base+0xf0>
   319c4:	mov	r0, r7
   319c8:	mov	r1, r8
   319cc:	mov	r2, r4
   319d0:	bl	14e60 <memcpy@plt>
   319d4:	mov	r0, r7
   319d8:	sub	sp, fp, #24
   319dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   319e0:	ldr	r2, [r6, #28]
   319e4:	ldr	r0, [r6, #40]	; 0x28
   319e8:	ldr	r7, [r6, #48]	; 0x30
   319ec:	mov	r3, #1
   319f0:	str	r3, [sp]
   319f4:	mov	r3, #1
   319f8:	add	r1, r1, r2
   319fc:	add	r2, r1, #1
   31a00:	add	r1, r6, #60	; 0x3c
   31a04:	blx	r7
   31a08:	mov	r7, #0
   31a0c:	cmp	r0, #0
   31a10:	beq	31a20 <flatcc_builder_append_string@@Base+0xb8>
   31a14:	mov	r0, r7
   31a18:	sub	sp, fp, #24
   31a1c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31a20:	ldr	r1, [r6, #28]
   31a24:	ldr	r0, [r6, #60]	; 0x3c
   31a28:	ldr	r3, [r6, #64]	; 0x40
   31a2c:	ldr	r2, [r6, #32]
   31a30:	add	r0, r0, r1
   31a34:	sub	r1, r3, r1
   31a38:	mvn	r3, #3
   31a3c:	cmn	r1, #4
   31a40:	str	r0, [r6, #16]
   31a44:	movcs	r1, r3
   31a48:	str	r1, [r6, #24]
   31a4c:	str	r3, [r2, #4]
   31a50:	adds	r7, r0, r5
   31a54:	bne	319c4 <flatcc_builder_append_string@@Base+0x5c>
   31a58:	mov	r7, #0
   31a5c:	mov	r0, r7
   31a60:	sub	sp, fp, #24
   31a64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31a68:	movw	r0, #51867	; 0xca9b
   31a6c:	movw	r1, #50550	; 0xc576
   31a70:	movw	r3, #51974	; 0xcb06
   31a74:	movw	r2, #966	; 0x3c6
   31a78:	movt	r0, #4
   31a7c:	movt	r1, #4
   31a80:	movt	r3, #4
   31a84:	bl	14f44 <__assert_fail@plt>
   31a88:	movw	r0, #54821	; 0xd625
   31a8c:	movw	r1, #50550	; 0xc576
   31a90:	movw	r3, #54848	; 0xd640
   31a94:	mov	r2, #892	; 0x37c
   31a98:	movt	r0, #4
   31a9c:	movt	r1, #4
   31aa0:	movt	r3, #4
   31aa4:	bl	14f44 <__assert_fail@plt>

00031aa8 <flatcc_builder_append_string_str@@Base>:
   31aa8:	push	{r4, r5, fp, lr}
   31aac:	add	fp, sp, #8
   31ab0:	mov	r5, r0
   31ab4:	mov	r0, r1
   31ab8:	mov	r4, r1
   31abc:	bl	14ecc <strlen@plt>
   31ac0:	mov	r2, r0
   31ac4:	mov	r0, r5
   31ac8:	mov	r1, r4
   31acc:	pop	{r4, r5, fp, lr}
   31ad0:	b	31968 <flatcc_builder_append_string@@Base>

00031ad4 <flatcc_builder_append_string_strn@@Base>:
   31ad4:	push	{r4, r5, r6, sl, fp, lr}
   31ad8:	add	fp, sp, #16
   31adc:	mov	r6, r0
   31ae0:	mov	r5, r1
   31ae4:	mov	r0, r1
   31ae8:	mov	r1, #0
   31aec:	mov	r4, r2
   31af0:	bl	14f14 <memchr@plt>
   31af4:	cmp	r0, #0
   31af8:	mov	r1, r5
   31afc:	subne	r4, r0, r5
   31b00:	mov	r0, r6
   31b04:	mov	r2, r4
   31b08:	pop	{r4, r5, r6, sl, fp, lr}
   31b0c:	b	31968 <flatcc_builder_append_string@@Base>

00031b10 <flatcc_builder_truncate_vector@@Base>:
   31b10:	push	{fp, lr}
   31b14:	mov	fp, sp
   31b18:	ldr	r2, [r0, #32]
   31b1c:	ldrh	r3, [r2, #14]
   31b20:	cmp	r3, #4
   31b24:	bne	31b6c <flatcc_builder_truncate_vector@@Base+0x5c>
   31b28:	ldr	r3, [r2, #20]
   31b2c:	cmp	r3, r1
   31b30:	bcc	31b8c <flatcc_builder_truncate_vector@@Base+0x7c>
   31b34:	sub	r3, r3, r1
   31b38:	str	r3, [r2, #20]
   31b3c:	ldr	r2, [r0, #32]
   31b40:	ldr	r3, [r0, #20]
   31b44:	ldr	ip, [r0, #16]
   31b48:	ldr	r2, [r2, #16]
   31b4c:	mls	r3, r2, r1, r3
   31b50:	mul	r2, r2, r1
   31b54:	mov	r1, #0
   31b58:	str	r3, [r0, #20]
   31b5c:	add	r0, ip, r3
   31b60:	bl	14ef0 <memset@plt>
   31b64:	mov	r0, #0
   31b68:	pop	{fp, pc}
   31b6c:	movw	r0, #51353	; 0xc899
   31b70:	movw	r1, #50550	; 0xc576
   31b74:	movw	r3, #52051	; 0xcb53
   31b78:	movw	r2, #985	; 0x3d9
   31b7c:	movt	r0, #4
   31b80:	movt	r1, #4
   31b84:	movt	r3, #4
   31b88:	bl	14f44 <__assert_fail@plt>
   31b8c:	movw	r0, #52114	; 0xcb92
   31b90:	movw	r1, #50550	; 0xc576
   31b94:	movw	r3, #52051	; 0xcb53
   31b98:	movw	r2, #986	; 0x3da
   31b9c:	movt	r0, #4
   31ba0:	movt	r1, #4
   31ba4:	movt	r3, #4
   31ba8:	bl	14f44 <__assert_fail@plt>

00031bac <flatcc_builder_truncate_offset_vector@@Base>:
   31bac:	push	{fp, lr}
   31bb0:	mov	fp, sp
   31bb4:	ldr	r2, [r0, #32]
   31bb8:	ldrh	r3, [r2, #14]
   31bbc:	cmp	r3, #5
   31bc0:	bne	31c08 <flatcc_builder_truncate_offset_vector@@Base+0x5c>
   31bc4:	ldr	r3, [r2, #20]
   31bc8:	cmp	r3, r1
   31bcc:	bcc	31c28 <flatcc_builder_truncate_offset_vector@@Base+0x7c>
   31bd0:	sub	r3, r3, r1
   31bd4:	str	r3, [r2, #20]
   31bd8:	ldr	r2, [r0, #32]
   31bdc:	ldr	r3, [r0, #20]
   31be0:	ldr	ip, [r0, #16]
   31be4:	ldr	r2, [r2, #16]
   31be8:	mls	r3, r2, r1, r3
   31bec:	mul	r2, r2, r1
   31bf0:	mov	r1, #0
   31bf4:	str	r3, [r0, #20]
   31bf8:	add	r0, ip, r3
   31bfc:	bl	14ef0 <memset@plt>
   31c00:	mov	r0, #0
   31c04:	pop	{fp, pc}
   31c08:	movw	r0, #51602	; 0xc992
   31c0c:	movw	r1, #50550	; 0xc576
   31c10:	movw	r3, #52150	; 0xcbb6
   31c14:	movw	r2, #994	; 0x3e2
   31c18:	movt	r0, #4
   31c1c:	movt	r1, #4
   31c20:	movt	r3, #4
   31c24:	bl	14f44 <__assert_fail@plt>
   31c28:	movw	r0, #52220	; 0xcbfc
   31c2c:	movw	r1, #50550	; 0xc576
   31c30:	movw	r3, #52150	; 0xcbb6
   31c34:	movw	r2, #995	; 0x3e3
   31c38:	movt	r0, #4
   31c3c:	movt	r1, #4
   31c40:	movt	r3, #4
   31c44:	bl	14f44 <__assert_fail@plt>

00031c48 <flatcc_builder_truncate_string@@Base>:
   31c48:	push	{fp, lr}
   31c4c:	mov	fp, sp
   31c50:	mov	r2, r1
   31c54:	ldr	r1, [r0, #32]
   31c58:	ldrh	r3, [r1, #14]
   31c5c:	cmp	r3, #6
   31c60:	bne	31c9c <flatcc_builder_truncate_string@@Base+0x54>
   31c64:	ldr	r3, [r1, #20]
   31c68:	cmp	r3, r2
   31c6c:	bcc	31cbc <flatcc_builder_truncate_string@@Base+0x74>
   31c70:	sub	r3, r3, r2
   31c74:	str	r3, [r1, #20]
   31c78:	ldr	r3, [r0, #20]
   31c7c:	ldr	r1, [r0, #16]
   31c80:	sub	r3, r3, r2
   31c84:	str	r3, [r0, #20]
   31c88:	add	r0, r1, r3
   31c8c:	mov	r1, #0
   31c90:	bl	14ef0 <memset@plt>
   31c94:	mov	r0, #0
   31c98:	pop	{fp, pc}
   31c9c:	movw	r0, #51867	; 0xca9b
   31ca0:	movw	r1, #50550	; 0xc576
   31ca4:	movw	r3, #52279	; 0xcc37
   31ca8:	movw	r2, #1003	; 0x3eb
   31cac:	movt	r0, #4
   31cb0:	movt	r1, #4
   31cb4:	movt	r3, #4
   31cb8:	bl	14f44 <__assert_fail@plt>
   31cbc:	movw	r0, #52342	; 0xcc76
   31cc0:	movw	r1, #50550	; 0xc576
   31cc4:	movw	r3, #52279	; 0xcc37
   31cc8:	mov	r2, #1004	; 0x3ec
   31ccc:	movt	r0, #4
   31cd0:	movt	r1, #4
   31cd4:	movt	r3, #4
   31cd8:	bl	14f44 <__assert_fail@plt>

00031cdc <flatcc_builder_start_vector@@Base>:
   31cdc:	push	{r4, r5, r6, r7, fp, lr}
   31ce0:	add	fp, sp, #16
   31ce4:	mov	r7, #4
   31ce8:	cmp	r2, #4
   31cec:	mov	r6, r1
   31cf0:	mov	r5, r3
   31cf4:	mov	r4, r0
   31cf8:	movls	r2, r7
   31cfc:	mov	r1, r2
   31d00:	bl	30d58 <flatcc_builder_start_buffer@@Base+0xbc>
   31d04:	mov	r1, r0
   31d08:	mvn	r0, #0
   31d0c:	cmp	r1, #0
   31d10:	popne	{r4, r5, r6, r7, fp, pc}
   31d14:	ldr	r0, [r4, #32]
   31d18:	str	r6, [r0, #16]
   31d1c:	mov	r0, #0
   31d20:	ldr	r1, [r4, #32]
   31d24:	str	r0, [r1, #20]
   31d28:	ldr	r1, [r4, #32]
   31d2c:	str	r5, [r1, #24]
   31d30:	ldr	r1, [r4, #32]
   31d34:	strh	r7, [r1, #14]
   31d38:	ldr	r2, [r4, #28]
   31d3c:	ldr	r3, [r4, #60]	; 0x3c
   31d40:	ldr	r7, [r4, #64]	; 0x40
   31d44:	add	r3, r3, r2
   31d48:	sub	r2, r7, r2
   31d4c:	str	r3, [r4, #16]
   31d50:	mvn	r3, #3
   31d54:	cmn	r2, #4
   31d58:	movcs	r2, r3
   31d5c:	str	r2, [r4, #24]
   31d60:	str	r3, [r1, #4]
   31d64:	pop	{r4, r5, r6, r7, fp, pc}

00031d68 <flatcc_builder_start_offset_vector@@Base>:
   31d68:	push	{r4, r5, fp, lr}
   31d6c:	add	fp, sp, #8
   31d70:	mov	r1, #4
   31d74:	mov	r4, r0
   31d78:	mov	r5, #4
   31d7c:	bl	30d58 <flatcc_builder_start_buffer@@Base+0xbc>
   31d80:	mov	r1, r0
   31d84:	mvn	r0, #0
   31d88:	cmp	r1, #0
   31d8c:	popne	{r4, r5, fp, pc}
   31d90:	ldr	r0, [r4, #32]
   31d94:	mov	r2, #5
   31d98:	str	r5, [r0, #16]
   31d9c:	mov	r0, #0
   31da0:	ldr	r1, [r4, #32]
   31da4:	str	r0, [r1, #20]
   31da8:	ldr	r1, [r4, #32]
   31dac:	strh	r2, [r1, #14]
   31db0:	ldr	r2, [r4, #28]
   31db4:	ldr	r3, [r4, #60]	; 0x3c
   31db8:	ldr	r5, [r4, #64]	; 0x40
   31dbc:	add	r3, r3, r2
   31dc0:	sub	r2, r5, r2
   31dc4:	str	r3, [r4, #16]
   31dc8:	mvn	r3, #3
   31dcc:	cmn	r2, #4
   31dd0:	movcs	r2, r3
   31dd4:	str	r2, [r4, #24]
   31dd8:	str	r3, [r1, #4]
   31ddc:	pop	{r4, r5, fp, pc}

00031de0 <flatcc_builder_create_offset_vector@@Base>:
   31de0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   31de4:	add	fp, sp, #24
   31de8:	sub	sp, sp, #8
   31dec:	mov	r8, r1
   31df0:	mov	r1, #4
   31df4:	mov	r6, r2
   31df8:	mov	r4, r0
   31dfc:	mov	r5, #4
   31e00:	bl	30d58 <flatcc_builder_start_buffer@@Base+0xbc>
   31e04:	mov	r7, #0
   31e08:	cmp	r0, #0
   31e0c:	beq	31e1c <flatcc_builder_create_offset_vector@@Base+0x3c>
   31e10:	mov	r0, r7
   31e14:	sub	sp, fp, #24
   31e18:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31e1c:	ldr	r0, [r4, #32]
   31e20:	mov	r1, #0
   31e24:	str	r5, [r0, #16]
   31e28:	ldr	r0, [r4, #32]
   31e2c:	str	r1, [r0, #20]
   31e30:	mov	r1, #5
   31e34:	ldr	r0, [r4, #32]
   31e38:	strh	r1, [r0, #14]
   31e3c:	ldr	r1, [r4, #28]
   31e40:	ldr	r2, [r4, #60]	; 0x3c
   31e44:	ldr	r3, [r4, #64]	; 0x40
   31e48:	add	r2, r2, r1
   31e4c:	sub	r1, r3, r1
   31e50:	str	r2, [r4, #16]
   31e54:	mvn	r2, #3
   31e58:	cmn	r1, #4
   31e5c:	movcs	r1, r2
   31e60:	str	r1, [r4, #24]
   31e64:	str	r2, [r0, #4]
   31e68:	ldr	r1, [r0, #20]
   31e6c:	adds	r1, r1, r6
   31e70:	cmpcc	r1, #1073741824	; 0x40000000
   31e74:	bcc	31e98 <flatcc_builder_create_offset_vector@@Base+0xb8>
   31e78:	movw	r0, #54821	; 0xd625
   31e7c:	movw	r1, #50550	; 0xc576
   31e80:	movw	r3, #54848	; 0xd640
   31e84:	mov	r2, #892	; 0x37c
   31e88:	movt	r0, #4
   31e8c:	movt	r1, #4
   31e90:	movt	r3, #4
   31e94:	bl	14f44 <__assert_fail@plt>
   31e98:	str	r1, [r0, #20]
   31e9c:	ldr	r5, [r4, #20]
   31ea0:	ldr	r0, [r4, #24]
   31ea4:	add	r1, r5, r6, lsl #2
   31ea8:	cmp	r1, r0
   31eac:	str	r1, [r4, #20]
   31eb0:	bcs	31f84 <flatcc_builder_create_offset_vector@@Base+0x1a4>
   31eb4:	ldr	r0, [r4, #16]
   31eb8:	adds	r0, r0, r5
   31ebc:	beq	31ff0 <flatcc_builder_create_offset_vector@@Base+0x210>
   31ec0:	lsl	r2, r6, #2
   31ec4:	mov	r1, r8
   31ec8:	bl	14e60 <memcpy@plt>
   31ecc:	ldr	r0, [r4, #32]
   31ed0:	ldrh	r1, [r0, #14]
   31ed4:	cmp	r1, #5
   31ed8:	bne	32000 <flatcc_builder_create_offset_vector@@Base+0x220>
   31edc:	ldr	r2, [r0, #20]
   31ee0:	ldr	r1, [r4, #16]
   31ee4:	mov	r0, r4
   31ee8:	mov	r3, #0
   31eec:	mov	r7, #0
   31ef0:	bl	33068 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   31ef4:	cmp	r0, #0
   31ef8:	beq	31e10 <flatcc_builder_create_offset_vector@@Base+0x30>
   31efc:	mov	r5, r0
   31f00:	ldr	r0, [r4, #16]
   31f04:	ldr	r2, [r4, #20]
   31f08:	mov	r1, #0
   31f0c:	bl	14ef0 <memset@plt>
   31f10:	ldr	r0, [r4, #32]
   31f14:	ldr	r1, [r4, #60]	; 0x3c
   31f18:	ldr	r2, [r4, #64]	; 0x40
   31f1c:	ldr	r3, [r0, #8]
   31f20:	str	r3, [r4, #20]
   31f24:	ldr	r3, [r0]
   31f28:	str	r3, [r4, #28]
   31f2c:	add	r1, r1, r3
   31f30:	ldr	r7, [r0, #4]
   31f34:	str	r1, [r4, #16]
   31f38:	sub	r1, r2, r3
   31f3c:	cmp	r1, r7
   31f40:	movhi	r1, r7
   31f44:	mov	r7, r5
   31f48:	str	r1, [r4, #24]
   31f4c:	ldrh	r1, [r4, #130]	; 0x82
   31f50:	ldrh	r2, [r4, #128]	; 0x80
   31f54:	cmp	r2, r1
   31f58:	strhcc	r1, [r4, #128]	; 0x80
   31f5c:	ldrh	r1, [r0, #12]
   31f60:	sub	r0, r0, #36	; 0x24
   31f64:	str	r0, [r4, #32]
   31f68:	strh	r1, [r4, #130]	; 0x82
   31f6c:	ldr	r0, [r4, #156]	; 0x9c
   31f70:	sub	r0, r0, #1
   31f74:	str	r0, [r4, #156]	; 0x9c
   31f78:	mov	r0, r7
   31f7c:	sub	sp, fp, #24
   31f80:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31f84:	ldr	r2, [r4, #28]
   31f88:	ldr	r0, [r4, #40]	; 0x28
   31f8c:	ldr	r7, [r4, #48]	; 0x30
   31f90:	mov	r3, #1
   31f94:	str	r3, [sp]
   31f98:	mov	r3, #1
   31f9c:	add	r1, r1, r2
   31fa0:	add	r2, r1, #1
   31fa4:	add	r1, r4, #60	; 0x3c
   31fa8:	blx	r7
   31fac:	mov	r7, #0
   31fb0:	cmp	r0, #0
   31fb4:	bne	31e10 <flatcc_builder_create_offset_vector@@Base+0x30>
   31fb8:	ldr	r1, [r4, #28]
   31fbc:	ldr	r0, [r4, #60]	; 0x3c
   31fc0:	ldr	r3, [r4, #64]	; 0x40
   31fc4:	ldr	r2, [r4, #32]
   31fc8:	add	r0, r0, r1
   31fcc:	sub	r1, r3, r1
   31fd0:	mvn	r3, #3
   31fd4:	cmn	r1, #4
   31fd8:	str	r0, [r4, #16]
   31fdc:	movcs	r1, r3
   31fe0:	str	r1, [r4, #24]
   31fe4:	str	r3, [r2, #4]
   31fe8:	adds	r0, r0, r5
   31fec:	bne	31ec0 <flatcc_builder_create_offset_vector@@Base+0xe0>
   31ff0:	mov	r7, #0
   31ff4:	mov	r0, r7
   31ff8:	sub	sp, fp, #24
   31ffc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   32000:	movw	r0, #51602	; 0xc992
   32004:	movw	r1, #50550	; 0xc576
   32008:	movw	r3, #53185	; 0xcfc1
   3200c:	movw	r2, #1480	; 0x5c8
   32010:	movt	r0, #4
   32014:	movt	r1, #4
   32018:	movt	r3, #4
   3201c:	bl	14f44 <__assert_fail@plt>

00032020 <flatcc_builder_end_offset_vector@@Base>:
   32020:	push	{r4, r5, fp, lr}
   32024:	add	fp, sp, #8
   32028:	mov	r4, r0
   3202c:	ldr	r0, [r0, #32]
   32030:	ldrh	r1, [r0, #14]
   32034:	cmp	r1, #5
   32038:	bne	320d8 <flatcc_builder_end_offset_vector@@Base+0xb8>
   3203c:	ldr	r2, [r0, #20]
   32040:	ldr	r1, [r4, #16]
   32044:	mov	r0, r4
   32048:	mov	r3, #0
   3204c:	bl	33068 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   32050:	mov	r5, r0
   32054:	cmp	r0, #0
   32058:	beq	320d0 <flatcc_builder_end_offset_vector@@Base+0xb0>
   3205c:	ldr	r0, [r4, #16]
   32060:	ldr	r2, [r4, #20]
   32064:	mov	r1, #0
   32068:	bl	14ef0 <memset@plt>
   3206c:	ldr	r0, [r4, #32]
   32070:	ldr	r1, [r4, #60]	; 0x3c
   32074:	ldr	ip, [r4, #64]	; 0x40
   32078:	ldr	r3, [r0, #8]
   3207c:	str	r3, [r4, #20]
   32080:	ldr	r3, [r0]
   32084:	str	r3, [r4, #28]
   32088:	add	r1, r1, r3
   3208c:	ldr	r2, [r0, #4]
   32090:	str	r1, [r4, #16]
   32094:	sub	r1, ip, r3
   32098:	cmp	r1, r2
   3209c:	movhi	r1, r2
   320a0:	str	r1, [r4, #24]
   320a4:	ldrh	r1, [r4, #130]	; 0x82
   320a8:	ldrh	r2, [r4, #128]	; 0x80
   320ac:	cmp	r2, r1
   320b0:	strhcc	r1, [r4, #128]	; 0x80
   320b4:	ldrh	r1, [r0, #12]
   320b8:	sub	r0, r0, #36	; 0x24
   320bc:	str	r0, [r4, #32]
   320c0:	strh	r1, [r4, #130]	; 0x82
   320c4:	ldr	r0, [r4, #156]	; 0x9c
   320c8:	sub	r0, r0, #1
   320cc:	str	r0, [r4, #156]	; 0x9c
   320d0:	mov	r0, r5
   320d4:	pop	{r4, r5, fp, pc}
   320d8:	movw	r0, #51602	; 0xc992
   320dc:	movw	r1, #50550	; 0xc576
   320e0:	movw	r3, #53185	; 0xcfc1
   320e4:	movw	r2, #1480	; 0x5c8
   320e8:	movt	r0, #4
   320ec:	movt	r1, #4
   320f0:	movt	r3, #4
   320f4:	bl	14f44 <__assert_fail@plt>

000320f8 <flatcc_builder_start_string@@Base>:
   320f8:	push	{r4, r5, fp, lr}
   320fc:	add	fp, sp, #8
   32100:	mov	r1, #1
   32104:	mov	r4, r0
   32108:	mov	r5, #1
   3210c:	bl	30d58 <flatcc_builder_start_buffer@@Base+0xbc>
   32110:	mov	r1, r0
   32114:	mvn	r0, #0
   32118:	cmp	r1, #0
   3211c:	popne	{r4, r5, fp, pc}
   32120:	ldr	r0, [r4, #32]
   32124:	mov	r2, #6
   32128:	str	r5, [r0, #16]
   3212c:	mov	r0, #0
   32130:	ldr	r1, [r4, #32]
   32134:	str	r0, [r1, #20]
   32138:	ldr	r1, [r4, #32]
   3213c:	strh	r2, [r1, #14]
   32140:	ldr	r2, [r4, #28]
   32144:	ldr	r3, [r4, #60]	; 0x3c
   32148:	ldr	r5, [r4, #64]	; 0x40
   3214c:	add	r3, r3, r2
   32150:	sub	r2, r5, r2
   32154:	str	r3, [r4, #16]
   32158:	mvn	r3, #3
   3215c:	cmn	r2, #4
   32160:	movcs	r2, r3
   32164:	str	r2, [r4, #24]
   32168:	str	r3, [r1, #4]
   3216c:	pop	{r4, r5, fp, pc}

00032170 <flatcc_builder_reserve_table@@Base>:
   32170:	push	{r4, r5, r6, sl, fp, lr}
   32174:	add	fp, sp, #16
   32178:	sub	sp, sp, #8
   3217c:	cmn	r1, #1
   32180:	ble	32254 <flatcc_builder_reserve_table@@Base+0xe4>
   32184:	mov	r4, r0
   32188:	ldr	r0, [r0, #32]
   3218c:	mov	r5, r1
   32190:	ldr	r1, [r4, #56]	; 0x38
   32194:	ldrh	r2, [r0, #28]
   32198:	ldr	r0, [r0, #16]
   3219c:	add	r6, r0, r2, lsl #1
   321a0:	add	r0, r6, r5, lsl #1
   321a4:	add	r2, r0, #4
   321a8:	cmp	r2, r1
   321ac:	bls	321d4 <flatcc_builder_reserve_table@@Base+0x64>
   321b0:	ldr	r0, [r4, #40]	; 0x28
   321b4:	ldr	ip, [r4, #48]	; 0x30
   321b8:	mov	r3, #0
   321bc:	add	r1, r4, #52	; 0x34
   321c0:	str	r3, [sp]
   321c4:	mov	r3, #1
   321c8:	blx	ip
   321cc:	cmp	r0, #0
   321d0:	bne	32274 <flatcc_builder_reserve_table@@Base+0x104>
   321d4:	ldr	r0, [r4, #52]	; 0x34
   321d8:	adds	r0, r0, r6
   321dc:	str	r0, [r4, #4]
   321e0:	mvneq	r0, #0
   321e4:	subeq	sp, fp, #16
   321e8:	popeq	{r4, r5, r6, sl, fp, pc}
   321ec:	add	r0, r0, #4
   321f0:	lsl	r1, r5, #1
   321f4:	str	r0, [r4, #4]
   321f8:	ldr	r0, [r4, #32]
   321fc:	ldr	r3, [r4, #80]	; 0x50
   32200:	ldr	r5, [r0, #20]
   32204:	orr	r0, r1, #1
   32208:	add	r2, r5, r0
   3220c:	cmp	r2, r3
   32210:	bls	32238 <flatcc_builder_reserve_table@@Base+0xc8>
   32214:	ldr	r0, [r4, #40]	; 0x28
   32218:	ldr	r6, [r4, #48]	; 0x30
   3221c:	mov	r3, #3
   32220:	add	r1, r4, #76	; 0x4c
   32224:	str	r3, [sp]
   32228:	mov	r3, #0
   3222c:	blx	r6
   32230:	cmp	r0, #0
   32234:	bne	32274 <flatcc_builder_reserve_table@@Base+0x104>
   32238:	ldr	r0, [r4, #76]	; 0x4c
   3223c:	adds	r0, r0, r5
   32240:	str	r0, [r4]
   32244:	mov	r0, #0
   32248:	mvneq	r0, #0
   3224c:	sub	sp, fp, #16
   32250:	pop	{r4, r5, r6, sl, fp, pc}
   32254:	movw	r0, #52441	; 0xccd9
   32258:	movw	r1, #50550	; 0xc576
   3225c:	movw	r3, #52376	; 0xcc98
   32260:	movw	r2, #1065	; 0x429
   32264:	movt	r0, #4
   32268:	movt	r1, #4
   3226c:	movt	r3, #4
   32270:	bl	14f44 <__assert_fail@plt>
   32274:	movw	r0, #55068	; 0xd71c
   32278:	movw	r1, #50550	; 0xc576
   3227c:	movw	r3, #54614	; 0xd556
   32280:	mov	r2, #308	; 0x134
   32284:	movt	r0, #4
   32288:	movt	r1, #4
   3228c:	movt	r3, #4
   32290:	bl	14f44 <__assert_fail@plt>

00032294 <flatcc_builder_start_table@@Base>:
   32294:	push	{r4, r5, r6, r7, fp, lr}
   32298:	add	fp, sp, #16
   3229c:	sub	sp, sp, #8
   322a0:	mov	r6, r1
   322a4:	mov	r1, #4
   322a8:	mov	r4, r0
   322ac:	bl	30d58 <flatcc_builder_start_buffer@@Base+0xbc>
   322b0:	mvn	r5, #0
   322b4:	cmp	r0, #0
   322b8:	beq	322c8 <flatcc_builder_start_table@@Base+0x34>
   322bc:	mov	r0, r5
   322c0:	sub	sp, fp, #16
   322c4:	pop	{r4, r5, r6, r7, fp, pc}
   322c8:	mov	r1, r4
   322cc:	ldr	r2, [r4, #4]
   322d0:	ldr	r3, [r4, #32]
   322d4:	ldr	r0, [r1, #52]!	; 0x34
   322d8:	sub	r0, r2, r0
   322dc:	str	r0, [r3, #16]
   322e0:	ldr	r0, [r4]
   322e4:	ldr	r3, [r4, #76]	; 0x4c
   322e8:	ldr	r2, [r4, #32]
   322ec:	sub	r0, r0, r3
   322f0:	mov	r3, #0
   322f4:	str	r0, [r2, #20]
   322f8:	ldr	r0, [r4, #12]
   322fc:	ldr	r2, [r4, #32]
   32300:	str	r0, [r2, #24]
   32304:	ldr	r0, [r4, #32]
   32308:	ldrh	r2, [r4, #8]
   3230c:	strh	r2, [r0, #28]
   32310:	movw	r0, #15186	; 0x3b52
   32314:	strh	r3, [r4, #8]
   32318:	mov	r2, #3
   3231c:	movt	r0, #12137	; 0x2f69
   32320:	str	r0, [r4, #12]
   32324:	ldr	r0, [r4, #32]
   32328:	strh	r2, [r0, #14]
   3232c:	ldrh	r2, [r0, #28]
   32330:	ldr	r0, [r0, #16]
   32334:	add	r7, r0, r2, lsl #1
   32338:	add	r0, r7, r6, lsl #1
   3233c:	add	r2, r0, #4
   32340:	ldr	r0, [r4, #56]	; 0x38
   32344:	cmp	r2, r0
   32348:	bls	32368 <flatcc_builder_start_table@@Base+0xd4>
   3234c:	ldr	r0, [r4, #40]	; 0x28
   32350:	ldr	ip, [r4, #48]	; 0x30
   32354:	str	r3, [sp]
   32358:	mov	r3, #1
   3235c:	blx	ip
   32360:	cmp	r0, #0
   32364:	bne	32414 <flatcc_builder_start_table@@Base+0x180>
   32368:	ldr	r0, [r4, #52]	; 0x34
   3236c:	adds	r0, r0, r7
   32370:	str	r0, [r4, #4]
   32374:	beq	322bc <flatcc_builder_start_table@@Base+0x28>
   32378:	add	r0, r0, #4
   3237c:	lsl	r1, r6, #1
   32380:	str	r0, [r4, #4]
   32384:	ldr	r0, [r4, #32]
   32388:	ldr	r3, [r4, #80]	; 0x50
   3238c:	ldr	r6, [r0, #20]
   32390:	orr	r0, r1, #1
   32394:	add	r2, r6, r0
   32398:	cmp	r2, r3
   3239c:	bls	323c4 <flatcc_builder_start_table@@Base+0x130>
   323a0:	ldr	r0, [r4, #40]	; 0x28
   323a4:	ldr	r7, [r4, #48]	; 0x30
   323a8:	mov	r3, #3
   323ac:	add	r1, r4, #76	; 0x4c
   323b0:	str	r3, [sp]
   323b4:	mov	r3, #0
   323b8:	blx	r7
   323bc:	cmp	r0, #0
   323c0:	bne	32414 <flatcc_builder_start_table@@Base+0x180>
   323c4:	ldr	r0, [r4, #76]	; 0x4c
   323c8:	adds	r0, r0, r6
   323cc:	str	r0, [r4]
   323d0:	beq	322bc <flatcc_builder_start_table@@Base+0x28>
   323d4:	ldr	r0, [r4, #28]
   323d8:	ldr	r2, [r4, #60]	; 0x3c
   323dc:	ldr	r3, [r4, #64]	; 0x40
   323e0:	ldr	r1, [r4, #32]
   323e4:	mov	r5, #0
   323e8:	add	r2, r2, r0
   323ec:	sub	r0, r3, r0
   323f0:	str	r2, [r4, #16]
   323f4:	movw	r2, #65532	; 0xfffc
   323f8:	cmp	r0, r2
   323fc:	movcs	r0, r2
   32400:	str	r0, [r4, #24]
   32404:	str	r2, [r1, #4]
   32408:	mov	r0, r5
   3240c:	sub	sp, fp, #16
   32410:	pop	{r4, r5, r6, r7, fp, pc}
   32414:	movw	r0, #55068	; 0xd71c
   32418:	movw	r1, #50550	; 0xc576
   3241c:	movw	r3, #54614	; 0xd556
   32420:	mov	r2, #308	; 0x134
   32424:	movt	r0, #4
   32428:	movt	r1, #4
   3242c:	movt	r3, #4
   32430:	bl	14f44 <__assert_fail@plt>

00032434 <flatcc_builder_create_vtable@@Base>:
   32434:	push	{r4, r5, fp, lr}
   32438:	add	fp, sp, #8
   3243c:	sub	sp, sp, #80	; 0x50
   32440:	mov	r3, r2
   32444:	mov	r2, #0
   32448:	mov	r4, r0
   3244c:	cmp	r3, #0
   32450:	str	r2, [sp, #12]
   32454:	str	r2, [sp, #8]
   32458:	movne	r2, #1
   3245c:	strne	r1, [sp, #16]
   32460:	strne	r3, [sp, #8]
   32464:	strne	r3, [sp, #20]
   32468:	strne	r2, [sp, #12]
   3246c:	ldr	r0, [r4, #152]	; 0x98
   32470:	cmp	r0, #0
   32474:	bne	32484 <flatcc_builder_create_vtable@@Base+0x50>
   32478:	ldr	r0, [r4, #180]	; 0xb4
   3247c:	cmp	r0, #0
   32480:	beq	324d0 <flatcc_builder_create_vtable@@Base+0x9c>
   32484:	cmp	r3, #0
   32488:	beq	32514 <flatcc_builder_create_vtable@@Base+0xe0>
   3248c:	ldr	r0, [r4, #136]	; 0x88
   32490:	ldr	ip, [r4, #44]	; 0x2c
   32494:	add	r1, sp, #8
   32498:	add	r1, r1, #8
   3249c:	sub	r5, r0, r3
   324a0:	ldr	r0, [r4, #36]	; 0x24
   324a4:	str	r3, [sp]
   324a8:	mov	r3, r5
   324ac:	blx	ip
   324b0:	cmp	r0, #0
   324b4:	bne	32534 <flatcc_builder_create_vtable@@Base+0x100>
   324b8:	cmp	r5, #0
   324bc:	str	r5, [r4, #136]	; 0x88
   324c0:	beq	32508 <flatcc_builder_create_vtable@@Base+0xd4>
   324c4:	add	r0, r5, #1
   324c8:	sub	sp, fp, #8
   324cc:	pop	{r4, r5, fp, pc}
   324d0:	ldr	r5, [r4, #140]	; 0x8c
   324d4:	ldr	r0, [r4, #36]	; 0x24
   324d8:	ldr	ip, [r4, #44]	; 0x2c
   324dc:	add	r1, r5, r3
   324e0:	str	r1, [r4, #140]	; 0x8c
   324e4:	add	r1, sp, #8
   324e8:	str	r3, [sp]
   324ec:	mov	r3, r5
   324f0:	add	r1, r1, #8
   324f4:	blx	ip
   324f8:	cmp	r0, #0
   324fc:	bne	32554 <flatcc_builder_create_vtable@@Base+0x120>
   32500:	adds	r0, r5, #1
   32504:	bne	324c8 <flatcc_builder_create_vtable@@Base+0x94>
   32508:	mov	r0, #0
   3250c:	sub	sp, fp, #8
   32510:	pop	{r4, r5, fp, pc}
   32514:	movw	r0, #55068	; 0xd71c
   32518:	movw	r1, #50550	; 0xc576
   3251c:	movw	r3, #54747	; 0xd5db
   32520:	movw	r2, #647	; 0x287
   32524:	movt	r0, #4
   32528:	movt	r1, #4
   3252c:	movt	r3, #4
   32530:	bl	14f44 <__assert_fail@plt>
   32534:	movw	r0, #55068	; 0xd71c
   32538:	movw	r1, #50550	; 0xc576
   3253c:	movw	r3, #54747	; 0xd5db
   32540:	movw	r2, #651	; 0x28b
   32544:	movt	r0, #4
   32548:	movt	r1, #4
   3254c:	movt	r3, #4
   32550:	bl	14f44 <__assert_fail@plt>
   32554:	movw	r0, #55068	; 0xd71c
   32558:	movw	r1, #50550	; 0xc576
   3255c:	movw	r3, #54935	; 0xd697
   32560:	movw	r2, #677	; 0x2a5
   32564:	movt	r0, #4
   32568:	movt	r1, #4
   3256c:	movt	r3, #4
   32570:	bl	14f44 <__assert_fail@plt>

00032574 <flatcc_builder_create_cached_vtable@@Base>:
   32574:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32578:	add	fp, sp, #28
   3257c:	sub	sp, sp, #20
   32580:	mov	sl, r0
   32584:	ldr	r0, [r0, #116]	; 0x74
   32588:	mov	r8, r3
   3258c:	mov	r5, r2
   32590:	str	r1, [sp, #16]
   32594:	cmp	r0, #0
   32598:	beq	3263c <flatcc_builder_create_cached_vtable@@Base+0xc8>
   3259c:	ldr	r1, [sl, #92]	; 0x5c
   325a0:	rsb	r0, r0, #32
   325a4:	lsr	r0, r8, r0
   325a8:	add	r6, r1, r0, lsl #2
   325ac:	cmp	r6, #0
   325b0:	beq	32700 <flatcc_builder_create_cached_vtable@@Base+0x18c>
   325b4:	ldr	r7, [r6]
   325b8:	str	r6, [sp, #12]
   325bc:	cmp	r7, #0
   325c0:	beq	32710 <flatcc_builder_create_cached_vtable@@Base+0x19c>
   325c4:	ldr	r4, [sl, #68]	; 0x44
   325c8:	ldr	r8, [sl, #100]	; 0x64
   325cc:	mov	r0, #0
   325d0:	str	r0, [sp, #8]
   325d4:	add	r9, r8, r7
   325d8:	mov	r1, r4
   325dc:	ldr	r0, [r9, #8]
   325e0:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   325e4:	cmp	r0, r5
   325e8:	bne	32600 <flatcc_builder_create_cached_vtable@@Base+0x8c>
   325ec:	ldr	r0, [sp, #16]
   325f0:	mov	r2, r5
   325f4:	bl	14e6c <memcmp@plt>
   325f8:	cmp	r0, #0
   325fc:	beq	32614 <flatcc_builder_create_cached_vtable@@Base+0xa0>
   32600:	ldr	r7, [r9, #12]!
   32604:	cmp	r7, #0
   32608:	mov	r6, r9
   3260c:	bne	325d4 <flatcc_builder_create_cached_vtable@@Base+0x60>
   32610:	b	326f8 <flatcc_builder_create_cached_vtable@@Base+0x184>
   32614:	ldr	r0, [sl, #152]	; 0x98
   32618:	ldr	r1, [r9, #4]
   3261c:	cmp	r1, r0
   32620:	beq	3287c <flatcc_builder_create_cached_vtable@@Base+0x308>
   32624:	mov	r6, r9
   32628:	mov	r0, r9
   3262c:	ldr	r7, [r6, #12]!
   32630:	cmp	r7, #0
   32634:	bne	325d0 <flatcc_builder_create_cached_vtable@@Base+0x5c>
   32638:	b	32714 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   3263c:	ldr	r0, [sl, #124]	; 0x7c
   32640:	cmp	r0, #0
   32644:	bne	328d0 <flatcc_builder_create_cached_vtable@@Base+0x35c>
   32648:	ldr	r0, [sl, #104]	; 0x68
   3264c:	add	r7, sl, #100	; 0x64
   32650:	cmp	r0, #15
   32654:	bhi	32680 <flatcc_builder_create_cached_vtable@@Base+0x10c>
   32658:	ldr	r0, [sl, #40]	; 0x28
   3265c:	ldr	r6, [sl, #48]	; 0x30
   32660:	mov	r1, #6
   32664:	mov	r2, #16
   32668:	mov	r3, #0
   3266c:	str	r1, [sp]
   32670:	mov	r1, r7
   32674:	blx	r6
   32678:	cmp	r0, #0
   3267c:	bne	328b0 <flatcc_builder_create_cached_vtable@@Base+0x33c>
   32680:	ldr	r0, [r7]
   32684:	mov	r7, #0
   32688:	cmp	r0, #0
   3268c:	beq	327b4 <flatcc_builder_create_cached_vtable@@Base+0x240>
   32690:	mov	r0, #16
   32694:	mov	r2, #5
   32698:	add	r1, sl, #92	; 0x5c
   3269c:	mov	r3, #1
   326a0:	mov	r4, #256	; 0x100
   326a4:	str	r0, [sl, #124]	; 0x7c
   326a8:	ldr	r0, [sl, #40]	; 0x28
   326ac:	ldr	r6, [sl, #48]	; 0x30
   326b0:	str	r2, [sp]
   326b4:	mov	r2, #256	; 0x100
   326b8:	blx	r6
   326bc:	cmp	r0, #0
   326c0:	bne	327b4 <flatcc_builder_create_cached_vtable@@Base+0x240>
   326c4:	ldr	r0, [sl, #96]	; 0x60
   326c8:	mov	r1, r4
   326cc:	lsl	r4, r4, #1
   326d0:	cmp	r0, r1, lsl #1
   326d4:	bcs	326c8 <flatcc_builder_create_cached_vtable@@Base+0x154>
   326d8:	lsr	r1, r1, #2
   326dc:	mvn	r0, #0
   326e0:	mov	r2, #1
   326e4:	add	r0, r0, #1
   326e8:	cmp	r1, r2, lsl r0
   326ec:	bhi	326e4 <flatcc_builder_create_cached_vtable@@Base+0x170>
   326f0:	str	r0, [sl, #116]	; 0x74
   326f4:	b	3259c <flatcc_builder_create_cached_vtable@@Base+0x28>
   326f8:	ldr	r9, [sp, #8]
   326fc:	b	32714 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   32700:	mov	r7, #0
   32704:	mov	r0, r7
   32708:	sub	sp, fp, #28
   3270c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32710:	mov	r9, #0
   32714:	ldr	r4, [sl, #124]	; 0x7c
   32718:	ldr	r0, [sl, #104]	; 0x68
   3271c:	add	r7, sl, #100	; 0x64
   32720:	add	r2, r4, #16
   32724:	cmp	r2, r0
   32728:	bls	32750 <flatcc_builder_create_cached_vtable@@Base+0x1dc>
   3272c:	ldr	r0, [sl, #40]	; 0x28
   32730:	ldr	r6, [sl, #48]	; 0x30
   32734:	mov	r1, #6
   32738:	mov	r3, #0
   3273c:	str	r1, [sp]
   32740:	mov	r1, r7
   32744:	blx	r6
   32748:	cmp	r0, #0
   3274c:	bne	328b0 <flatcc_builder_create_cached_vtable@@Base+0x33c>
   32750:	ldr	r0, [r7]
   32754:	mov	r7, #0
   32758:	adds	r4, r0, r4
   3275c:	beq	327b4 <flatcc_builder_create_cached_vtable@@Base+0x240>
   32760:	ldr	r0, [sl, #124]	; 0x7c
   32764:	ldr	r1, [sl, #152]	; 0x98
   32768:	add	r2, r0, #16
   3276c:	str	r2, [sl, #124]	; 0x7c
   32770:	ldr	r2, [sp, #12]
   32774:	str	r1, [r4, #4]
   32778:	ldr	r1, [r2]
   3277c:	str	r1, [r4, #12]
   32780:	ldr	r1, [sp, #16]
   32784:	str	r0, [r2]
   32788:	mov	r0, sl
   3278c:	mov	r2, r5
   32790:	bl	32434 <flatcc_builder_create_vtable@@Base>
   32794:	cmp	r0, #0
   32798:	str	r0, [r4]
   3279c:	beq	327b4 <flatcc_builder_create_cached_vtable@@Base+0x240>
   327a0:	cmp	r9, #0
   327a4:	beq	327c0 <flatcc_builder_create_cached_vtable@@Base+0x24c>
   327a8:	ldr	r0, [r9, #8]
   327ac:	str	r0, [r4, #8]
   327b0:	ldr	r7, [r4]
   327b4:	mov	r0, r7
   327b8:	sub	sp, fp, #28
   327bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   327c0:	ldr	r6, [sl, #120]	; 0x78
   327c4:	ldr	r0, [sl, #172]	; 0xac
   327c8:	add	r2, r6, r5
   327cc:	cmp	r0, #0
   327d0:	beq	3280c <flatcc_builder_create_cached_vtable@@Base+0x298>
   327d4:	cmp	r0, r2
   327d8:	bcs	3280c <flatcc_builder_create_cached_vtable@@Base+0x298>
   327dc:	ldr	r0, [sl, #116]	; 0x74
   327e0:	cmp	r0, #0
   327e4:	beq	327b0 <flatcc_builder_create_cached_vtable@@Base+0x23c>
   327e8:	ldr	r0, [sl, #92]	; 0x5c
   327ec:	ldr	r2, [sl, #96]	; 0x60
   327f0:	mov	r1, #0
   327f4:	mov	r5, #0
   327f8:	bl	14ef0 <memset@plt>
   327fc:	mov	r0, #16
   32800:	str	r5, [sl, #120]	; 0x78
   32804:	str	r0, [sl, #124]	; 0x7c
   32808:	b	327b0 <flatcc_builder_create_cached_vtable@@Base+0x23c>
   3280c:	ldr	r0, [sl, #72]	; 0x48
   32810:	add	r7, sl, #68	; 0x44
   32814:	cmp	r2, r0
   32818:	bls	32840 <flatcc_builder_create_cached_vtable@@Base+0x2cc>
   3281c:	ldr	r0, [sl, #40]	; 0x28
   32820:	ldr	ip, [sl, #48]	; 0x30
   32824:	mov	r1, #2
   32828:	mov	r3, #0
   3282c:	str	r1, [sp]
   32830:	mov	r1, r7
   32834:	blx	ip
   32838:	cmp	r0, #0
   3283c:	bne	328b0 <flatcc_builder_create_cached_vtable@@Base+0x33c>
   32840:	ldr	r0, [r7]
   32844:	adds	r0, r0, r6
   32848:	beq	3286c <flatcc_builder_create_cached_vtable@@Base+0x2f8>
   3284c:	ldr	r1, [sl, #120]	; 0x78
   32850:	mov	r2, r5
   32854:	str	r1, [r4, #8]
   32858:	add	r1, r1, r5
   3285c:	str	r1, [sl, #120]	; 0x78
   32860:	ldr	r1, [sp, #16]
   32864:	bl	14e60 <memcpy@plt>
   32868:	b	327b0 <flatcc_builder_create_cached_vtable@@Base+0x23c>
   3286c:	mvn	r7, #0
   32870:	mov	r0, r7
   32874:	sub	sp, fp, #28
   32878:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3287c:	ldr	r0, [sp, #12]
   32880:	cmp	r6, r0
   32884:	beq	328a0 <flatcc_builder_create_cached_vtable@@Base+0x32c>
   32888:	mov	r1, r0
   3288c:	ldr	r0, [r9, #12]
   32890:	str	r0, [r6]
   32894:	ldr	r0, [r1]
   32898:	str	r0, [r9, #12]
   3289c:	str	r7, [r1]
   328a0:	ldr	r7, [r9]
   328a4:	mov	r0, r7
   328a8:	sub	sp, fp, #28
   328ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   328b0:	movw	r0, #55068	; 0xd71c
   328b4:	movw	r1, #50550	; 0xc576
   328b8:	movw	r3, #54614	; 0xd556
   328bc:	mov	r2, #308	; 0x134
   328c0:	movt	r0, #4
   328c4:	movt	r1, #4
   328c8:	movt	r3, #4
   328cc:	bl	14f44 <__assert_fail@plt>
   328d0:	movw	r0, #55008	; 0xd6e0
   328d4:	movw	r1, #50550	; 0xc576
   328d8:	movw	r3, #55023	; 0xd6ef
   328dc:	movw	r2, #342	; 0x156
   328e0:	movt	r0, #4
   328e4:	movt	r1, #4
   328e8:	movt	r3, #4
   328ec:	bl	14f44 <__assert_fail@plt>

000328f0 <flatcc_builder_create_table@@Base>:
   328f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   328f4:	add	fp, sp, #24
   328f8:	sub	sp, sp, #80	; 0x50
   328fc:	ldr	r5, [fp, #12]
   32900:	cmn	r5, #1
   32904:	ble	32a58 <flatcc_builder_create_table@@Base+0x168>
   32908:	ldr	ip, [fp, #16]
   3290c:	tst	ip, #1
   32910:	beq	32a78 <flatcc_builder_create_table@@Base+0x188>
   32914:	mov	r8, r0
   32918:	ldrh	r0, [r0, #128]	; 0x80
   3291c:	cmp	r3, #4
   32920:	movls	r3, #4
   32924:	cmp	r0, r3
   32928:	strhcc	r3, [r8, #128]	; 0x80
   3292c:	sub	r3, r3, #1
   32930:	cmp	r5, #1
   32934:	ldr	r4, [r8, #136]	; 0x88
   32938:	sub	r0, r4, r2
   3293c:	and	r0, r0, r3
   32940:	add	r3, ip, r0
   32944:	mvn	ip, #3
   32948:	sub	r6, ip, r2
   3294c:	add	r4, r6, r4
   32950:	add	r6, r4, #1
   32954:	sub	r3, r6, r3
   32958:	str	r3, [fp, #-28]	; 0xffffffe4
   3295c:	blt	32988 <flatcc_builder_create_table@@Base+0x98>
   32960:	ldr	r3, [fp, #8]
   32964:	sub	r6, r4, r0
   32968:	sub	r4, ip, r6
   3296c:	ldrh	r6, [r3], #2
   32970:	subs	r5, r5, #1
   32974:	ldr	r7, [r6, r1]
   32978:	add	r7, r4, r7
   3297c:	sub	r7, r7, r6
   32980:	str	r7, [r6, r1]
   32984:	bne	3296c <flatcc_builder_create_table@@Base+0x7c>
   32988:	sub	r3, fp, #28
   3298c:	mov	r4, #4
   32990:	cmp	r2, #0
   32994:	str	r3, [sp, #12]
   32998:	mov	r3, #1
   3299c:	str	r4, [sp, #4]
   329a0:	str	r4, [sp, #16]
   329a4:	str	r3, [sp, #8]
   329a8:	beq	329c4 <flatcc_builder_create_table@@Base+0xd4>
   329ac:	mov	r3, #2
   329b0:	add	r4, r2, #4
   329b4:	str	r1, [sp, #20]
   329b8:	str	r2, [sp, #24]
   329bc:	str	r3, [sp, #8]
   329c0:	str	r4, [sp, #4]
   329c4:	cmp	r0, #0
   329c8:	beq	329f4 <flatcc_builder_create_table@@Base+0x104>
   329cc:	add	r1, sp, #4
   329d0:	movw	r2, #50020	; 0xc364
   329d4:	add	r4, r4, r0
   329d8:	add	r1, r1, r3, lsl #3
   329dc:	add	r3, r3, #1
   329e0:	movt	r2, #4
   329e4:	str	r4, [sp, #4]
   329e8:	str	r2, [r1, #8]
   329ec:	str	r0, [r1, #12]
   329f0:	str	r3, [sp, #8]
   329f4:	cmp	r4, #0
   329f8:	ble	32a98 <flatcc_builder_create_table@@Base+0x1a8>
   329fc:	ldr	r0, [r8, #136]	; 0x88
   32a00:	ldr	r7, [r8, #44]	; 0x2c
   32a04:	add	r1, sp, #4
   32a08:	mov	r2, r3
   32a0c:	add	r1, r1, #8
   32a10:	sub	r5, r0, r4
   32a14:	ldr	r0, [r8, #36]	; 0x24
   32a18:	str	r4, [sp]
   32a1c:	mov	r3, r5
   32a20:	blx	r7
   32a24:	cmp	r0, #0
   32a28:	streq	r5, [r8, #136]	; 0x88
   32a2c:	moveq	r0, r5
   32a30:	subeq	sp, fp, #24
   32a34:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   32a38:	movw	r0, #55068	; 0xd71c
   32a3c:	movw	r1, #50550	; 0xc576
   32a40:	movw	r3, #54747	; 0xd5db
   32a44:	movw	r2, #651	; 0x28b
   32a48:	movt	r0, #4
   32a4c:	movt	r1, #4
   32a50:	movt	r3, #4
   32a54:	bl	14f44 <__assert_fail@plt>
   32a58:	movw	r0, #52434	; 0xccd2
   32a5c:	movw	r1, #50550	; 0xc576
   32a60:	movw	r3, #52452	; 0xcce4
   32a64:	movw	r2, #1237	; 0x4d5
   32a68:	movt	r0, #4
   32a6c:	movt	r1, #4
   32a70:	movt	r3, #4
   32a74:	bl	14f44 <__assert_fail@plt>
   32a78:	movw	r0, #52608	; 0xcd80
   32a7c:	movw	r1, #50550	; 0xc576
   32a80:	movw	r3, #52452	; 0xcce4
   32a84:	movw	r2, #1243	; 0x4db
   32a88:	movt	r0, #4
   32a8c:	movt	r1, #4
   32a90:	movt	r3, #4
   32a94:	bl	14f44 <__assert_fail@plt>
   32a98:	movw	r0, #55068	; 0xd71c
   32a9c:	movw	r1, #50550	; 0xc576
   32aa0:	movw	r3, #54747	; 0xd5db
   32aa4:	movw	r2, #647	; 0x287
   32aa8:	movt	r0, #4
   32aac:	movt	r1, #4
   32ab0:	movt	r3, #4
   32ab4:	bl	14f44 <__assert_fail@plt>

00032ab8 <flatcc_builder_check_required_field@@Base>:
   32ab8:	ldr	r2, [r0, #32]
   32abc:	ldrh	r2, [r2, #14]
   32ac0:	cmp	r2, #3
   32ac4:	bne	32af4 <flatcc_builder_check_required_field@@Base+0x3c>
   32ac8:	ldrh	r3, [r0, #8]
   32acc:	mov	r2, #0
   32ad0:	cmp	r3, r1
   32ad4:	bls	32aec <flatcc_builder_check_required_field@@Base+0x34>
   32ad8:	ldr	r0, [r0, #4]
   32adc:	add	r0, r0, r1, lsl #1
   32ae0:	ldrh	r2, [r0]
   32ae4:	cmp	r2, #0
   32ae8:	movwne	r2, #1
   32aec:	mov	r0, r2
   32af0:	bx	lr
   32af4:	push	{fp, lr}
   32af8:	mov	fp, sp
   32afc:	movw	r0, #52619	; 0xcd8b
   32b00:	movw	r1, #50550	; 0xc576
   32b04:	movw	r3, #52662	; 0xcdb6
   32b08:	movw	r2, #1272	; 0x4f8
   32b0c:	movt	r0, #4
   32b10:	movt	r1, #4
   32b14:	movt	r3, #4
   32b18:	bl	14f44 <__assert_fail@plt>

00032b1c <flatcc_builder_check_union_field@@Base>:
   32b1c:	mov	r2, r0
   32b20:	ldr	r0, [r0, #32]
   32b24:	ldrh	r0, [r0, #14]
   32b28:	cmp	r0, #3
   32b2c:	bne	32b8c <flatcc_builder_check_union_field@@Base+0x70>
   32b30:	cmp	r1, #0
   32b34:	mov	r0, #0
   32b38:	ldrhne	r3, [r2, #8]
   32b3c:	cmpne	r3, r1
   32b40:	bhi	32b48 <flatcc_builder_check_union_field@@Base+0x2c>
   32b44:	bx	lr
   32b48:	ldr	r0, [r2, #4]
   32b4c:	add	r0, r0, r1, lsl #1
   32b50:	ldrh	r1, [r0, #-2]
   32b54:	cmp	r1, #0
   32b58:	beq	32b7c <flatcc_builder_check_union_field@@Base+0x60>
   32b5c:	ldr	r2, [r2, #16]
   32b60:	ldrh	r0, [r0]
   32b64:	ldrb	r1, [r2, r1]
   32b68:	cmp	r1, #0
   32b6c:	beq	32b80 <flatcc_builder_check_union_field@@Base+0x64>
   32b70:	cmp	r0, #0
   32b74:	movwne	r0, #1
   32b78:	bx	lr
   32b7c:	ldrh	r0, [r0]
   32b80:	clz	r0, r0
   32b84:	lsr	r0, r0, #5
   32b88:	bx	lr
   32b8c:	push	{fp, lr}
   32b90:	mov	fp, sp
   32b94:	movw	r0, #52619	; 0xcd8b
   32b98:	movw	r1, #50550	; 0xc576
   32b9c:	movw	r3, #52745	; 0xce09
   32ba0:	movw	r2, #1279	; 0x4ff
   32ba4:	movt	r0, #4
   32ba8:	movt	r1, #4
   32bac:	movt	r3, #4
   32bb0:	bl	14f44 <__assert_fail@plt>

00032bb4 <flatcc_builder_check_required@@Base>:
   32bb4:	push	{fp, lr}
   32bb8:	mov	fp, sp
   32bbc:	mov	r3, r0
   32bc0:	ldr	r0, [r0, #32]
   32bc4:	ldrh	r0, [r0, #14]
   32bc8:	cmp	r0, #3
   32bcc:	bne	32c24 <flatcc_builder_check_required@@Base+0x70>
   32bd0:	ldrh	ip, [r3, #8]
   32bd4:	mov	r0, #0
   32bd8:	cmp	ip, r2
   32bdc:	movge	r0, #1
   32be0:	cmpge	r2, #1
   32be4:	bge	32bec <flatcc_builder_check_required@@Base+0x38>
   32be8:	pop	{fp, pc}
   32bec:	ldr	ip, [r3, #4]
   32bf0:	mov	lr, #0
   32bf4:	b	32c08 <flatcc_builder_check_required@@Base+0x54>
   32bf8:	add	lr, lr, #1
   32bfc:	add	r1, r1, #2
   32c00:	cmp	lr, r2
   32c04:	popge	{fp, pc}
   32c08:	ldrh	r3, [r1]
   32c0c:	add	r3, ip, r3, lsl #1
   32c10:	ldrh	r3, [r3]
   32c14:	cmp	r3, #0
   32c18:	bne	32bf8 <flatcc_builder_check_required@@Base+0x44>
   32c1c:	mov	r0, #0
   32c20:	pop	{fp, pc}
   32c24:	movw	r0, #52619	; 0xcd8b
   32c28:	movw	r1, #50550	; 0xc576
   32c2c:	movw	r3, #52825	; 0xce59
   32c30:	movw	r2, #1297	; 0x511
   32c34:	movt	r0, #4
   32c38:	movt	r1, #4
   32c3c:	movt	r3, #4
   32c40:	bl	14f44 <__assert_fail@plt>

00032c44 <flatcc_builder_end_table@@Base>:
   32c44:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   32c48:	add	fp, sp, #24
   32c4c:	sub	sp, sp, #16
   32c50:	mov	r4, r0
   32c54:	ldr	r0, [r0, #32]
   32c58:	ldrh	r0, [r0, #14]
   32c5c:	cmp	r0, #3
   32c60:	bne	32de4 <flatcc_builder_end_table@@Base+0x1a0>
   32c64:	ldrh	r0, [r4, #8]
   32c68:	ldr	r5, [r4, #4]
   32c6c:	mov	r1, #4
   32c70:	movw	r2, #31153	; 0x79b1
   32c74:	movt	r2, #40503	; 0x9e37
   32c78:	add	r0, r1, r0, lsl #1
   32c7c:	strh	r0, [r5, #-4]!
   32c80:	ldrh	r1, [r4, #20]
   32c84:	uxth	r6, r0
   32c88:	add	r1, r1, #4
   32c8c:	strh	r1, [r5, #2]
   32c90:	uxth	r1, r1
   32c94:	ldr	r0, [r4, #12]
   32c98:	eor	r0, r0, r6
   32c9c:	mul	r0, r0, r2
   32ca0:	eor	r0, r0, r1
   32ca4:	mov	r1, r5
   32ca8:	mul	r3, r0, r2
   32cac:	mov	r0, r4
   32cb0:	mov	r2, r6
   32cb4:	str	r3, [r4, #12]
   32cb8:	bl	32574 <flatcc_builder_create_cached_vtable@@Base>
   32cbc:	cmp	r0, #0
   32cc0:	beq	32dd4 <flatcc_builder_end_table@@Base+0x190>
   32cc4:	mov	r7, r0
   32cc8:	mov	r0, r5
   32ccc:	mov	r1, #0
   32cd0:	mov	r2, r6
   32cd4:	mov	r8, #0
   32cd8:	bl	14ef0 <memset@plt>
   32cdc:	ldr	r5, [r4, #32]
   32ce0:	ldr	r0, [r4, #76]	; 0x4c
   32ce4:	ldr	r6, [r4]
   32ce8:	ldrh	r3, [r4, #130]	; 0x82
   32cec:	ldr	r1, [r4, #16]
   32cf0:	ldr	r2, [r4, #20]
   32cf4:	ldr	r5, [r5, #20]
   32cf8:	add	r0, r0, r5
   32cfc:	sub	r6, r6, r0
   32d00:	asr	r6, r6, #1
   32d04:	stm	sp, {r0, r6, r7}
   32d08:	mov	r0, r4
   32d0c:	bl	328f0 <flatcc_builder_create_table@@Base>
   32d10:	cmp	r0, #0
   32d14:	beq	32dc8 <flatcc_builder_end_table@@Base+0x184>
   32d18:	ldr	r1, [r4, #32]
   32d1c:	mov	r5, r0
   32d20:	ldr	r0, [r4, #16]
   32d24:	ldr	r2, [r4, #20]
   32d28:	ldr	r3, [r4, #52]	; 0x34
   32d2c:	ldr	r7, [r1, #24]
   32d30:	str	r7, [r4, #12]
   32d34:	ldrh	r7, [r1, #28]
   32d38:	strh	r7, [r4, #8]
   32d3c:	ldr	r7, [r1, #16]
   32d40:	add	r3, r3, r7
   32d44:	str	r3, [r4, #4]
   32d48:	ldr	r3, [r4, #76]	; 0x4c
   32d4c:	ldr	r1, [r1, #20]
   32d50:	add	r1, r3, r1
   32d54:	str	r1, [r4]
   32d58:	mov	r1, #0
   32d5c:	bl	14ef0 <memset@plt>
   32d60:	ldr	r0, [r4, #32]
   32d64:	ldr	r1, [r4, #60]	; 0x3c
   32d68:	ldr	r2, [r4, #64]	; 0x40
   32d6c:	mov	r8, r5
   32d70:	ldr	r3, [r0, #8]
   32d74:	str	r3, [r4, #20]
   32d78:	ldr	r3, [r0]
   32d7c:	str	r3, [r4, #28]
   32d80:	add	r1, r1, r3
   32d84:	ldr	r7, [r0, #4]
   32d88:	str	r1, [r4, #16]
   32d8c:	sub	r1, r2, r3
   32d90:	cmp	r1, r7
   32d94:	movhi	r1, r7
   32d98:	str	r1, [r4, #24]
   32d9c:	ldrh	r1, [r4, #130]	; 0x82
   32da0:	ldrh	r2, [r4, #128]	; 0x80
   32da4:	cmp	r2, r1
   32da8:	strhcc	r1, [r4, #128]	; 0x80
   32dac:	ldrh	r1, [r0, #12]
   32db0:	sub	r0, r0, #36	; 0x24
   32db4:	str	r0, [r4, #32]
   32db8:	strh	r1, [r4, #130]	; 0x82
   32dbc:	ldr	r0, [r4, #156]	; 0x9c
   32dc0:	sub	r0, r0, #1
   32dc4:	str	r0, [r4, #156]	; 0x9c
   32dc8:	mov	r0, r8
   32dcc:	sub	sp, fp, #24
   32dd0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   32dd4:	mov	r8, #0
   32dd8:	mov	r0, r8
   32ddc:	sub	sp, fp, #24
   32de0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   32de4:	movw	r0, #52619	; 0xcd8b
   32de8:	movw	r1, #50550	; 0xc576
   32dec:	movw	r3, #52915	; 0xceb3
   32df0:	movw	r2, #1317	; 0x525
   32df4:	movt	r0, #4
   32df8:	movt	r1, #4
   32dfc:	movt	r3, #4
   32e00:	bl	14f44 <__assert_fail@plt>

00032e04 <flatcc_builder_create_vector@@Base>:
   32e04:	push	{r4, r5, r6, r7, fp, lr}
   32e08:	add	fp, sp, #16
   32e0c:	sub	sp, sp, #80	; 0x50
   32e10:	mov	r7, r0
   32e14:	ldr	r0, [fp, #12]
   32e18:	cmp	r2, r0
   32e1c:	bhi	32f1c <flatcc_builder_create_vector@@Base+0x118>
   32e20:	ldr	r0, [fp, #8]
   32e24:	mov	r4, r2
   32e28:	ldrh	r2, [r7, #128]	; 0x80
   32e2c:	mov	r5, #4
   32e30:	cmp	r0, #4
   32e34:	movls	r0, r5
   32e38:	cmp	r2, r0
   32e3c:	sub	r2, fp, #20
   32e40:	strhcc	r0, [r7, #128]	; 0x80
   32e44:	str	r4, [fp, #-20]	; 0xffffffec
   32e48:	sub	r0, r0, #1
   32e4c:	ldr	ip, [r7, #136]	; 0x88
   32e50:	str	r2, [sp, #12]
   32e54:	mov	r2, #1
   32e58:	str	r5, [sp, #4]
   32e5c:	str	r5, [sp, #16]
   32e60:	str	r2, [sp, #8]
   32e64:	mls	r6, r3, r4, ip
   32e68:	mul	r3, r3, r4
   32e6c:	and	r0, r6, r0
   32e70:	cmp	r3, #0
   32e74:	beq	32e90 <flatcc_builder_create_vector@@Base+0x8c>
   32e78:	mov	r2, #2
   32e7c:	add	r5, r3, #4
   32e80:	str	r1, [sp, #20]
   32e84:	str	r3, [sp, #24]
   32e88:	str	r2, [sp, #8]
   32e8c:	str	r5, [sp, #4]
   32e90:	cmp	r0, #0
   32e94:	beq	32ec0 <flatcc_builder_create_vector@@Base+0xbc>
   32e98:	add	r1, sp, #4
   32e9c:	movw	r3, #50020	; 0xc364
   32ea0:	add	r5, r5, r0
   32ea4:	add	r1, r1, r2, lsl #3
   32ea8:	add	r2, r2, #1
   32eac:	movt	r3, #4
   32eb0:	str	r5, [sp, #4]
   32eb4:	str	r3, [r1, #8]
   32eb8:	str	r0, [r1, #12]
   32ebc:	str	r2, [sp, #8]
   32ec0:	cmp	r5, #0
   32ec4:	ble	32f3c <flatcc_builder_create_vector@@Base+0x138>
   32ec8:	ldr	r0, [r7, #36]	; 0x24
   32ecc:	ldr	r6, [r7, #44]	; 0x2c
   32ed0:	add	r1, sp, #4
   32ed4:	sub	r4, ip, r5
   32ed8:	str	r5, [sp]
   32edc:	add	r1, r1, #8
   32ee0:	mov	r3, r4
   32ee4:	blx	r6
   32ee8:	cmp	r0, #0
   32eec:	streq	r4, [r7, #136]	; 0x88
   32ef0:	moveq	r0, r4
   32ef4:	subeq	sp, fp, #16
   32ef8:	popeq	{r4, r5, r6, r7, fp, pc}
   32efc:	movw	r0, #55068	; 0xd71c
   32f00:	movw	r1, #50550	; 0xc576
   32f04:	movw	r3, #54747	; 0xd5db
   32f08:	movw	r2, #651	; 0x28b
   32f0c:	movt	r0, #4
   32f10:	movt	r1, #4
   32f14:	movt	r3, #4
   32f18:	bl	14f44 <__assert_fail@plt>
   32f1c:	movw	r0, #52981	; 0xcef5
   32f20:	movw	r1, #50550	; 0xc576
   32f24:	movw	r3, #53000	; 0xcf08
   32f28:	movw	r2, #1365	; 0x555
   32f2c:	movt	r0, #4
   32f30:	movt	r1, #4
   32f34:	movt	r3, #4
   32f38:	bl	14f44 <__assert_fail@plt>
   32f3c:	movw	r0, #55068	; 0xd71c
   32f40:	movw	r1, #50550	; 0xc576
   32f44:	movw	r3, #54747	; 0xd5db
   32f48:	movw	r2, #647	; 0x287
   32f4c:	movt	r0, #4
   32f50:	movt	r1, #4
   32f54:	movt	r3, #4
   32f58:	bl	14f44 <__assert_fail@plt>

00032f5c <flatcc_builder_end_vector@@Base>:
   32f5c:	push	{r4, r5, fp, lr}
   32f60:	add	fp, sp, #8
   32f64:	sub	sp, sp, #8
   32f68:	mov	r4, r0
   32f6c:	ldr	r0, [r0, #32]
   32f70:	ldrh	r1, [r0, #14]
   32f74:	cmp	r1, #4
   32f78:	bne	3302c <flatcc_builder_end_vector@@Base+0xd0>
   32f7c:	ldr	r3, [r0, #16]
   32f80:	ldr	r2, [r0, #20]
   32f84:	ldr	r0, [r0, #24]
   32f88:	ldr	r1, [r4, #16]
   32f8c:	ldrh	r5, [r4, #130]	; 0x82
   32f90:	str	r0, [sp, #4]
   32f94:	mov	r0, r4
   32f98:	str	r5, [sp]
   32f9c:	bl	32e04 <flatcc_builder_create_vector@@Base>
   32fa0:	mov	r5, r0
   32fa4:	cmp	r0, #0
   32fa8:	beq	33020 <flatcc_builder_end_vector@@Base+0xc4>
   32fac:	ldr	r0, [r4, #16]
   32fb0:	ldr	r2, [r4, #20]
   32fb4:	mov	r1, #0
   32fb8:	bl	14ef0 <memset@plt>
   32fbc:	ldr	r0, [r4, #32]
   32fc0:	ldr	r1, [r4, #60]	; 0x3c
   32fc4:	ldr	ip, [r4, #64]	; 0x40
   32fc8:	ldr	r3, [r0, #8]
   32fcc:	str	r3, [r4, #20]
   32fd0:	ldr	r3, [r0]
   32fd4:	str	r3, [r4, #28]
   32fd8:	add	r1, r1, r3
   32fdc:	ldr	r2, [r0, #4]
   32fe0:	str	r1, [r4, #16]
   32fe4:	sub	r1, ip, r3
   32fe8:	cmp	r1, r2
   32fec:	movhi	r1, r2
   32ff0:	str	r1, [r4, #24]
   32ff4:	ldrh	r1, [r4, #130]	; 0x82
   32ff8:	ldrh	r2, [r4, #128]	; 0x80
   32ffc:	cmp	r2, r1
   33000:	strhcc	r1, [r4, #128]	; 0x80
   33004:	ldrh	r1, [r0, #12]
   33008:	sub	r0, r0, #36	; 0x24
   3300c:	str	r0, [r4, #32]
   33010:	strh	r1, [r4, #130]	; 0x82
   33014:	ldr	r0, [r4, #156]	; 0x9c
   33018:	sub	r0, r0, #1
   3301c:	str	r0, [r4, #156]	; 0x9c
   33020:	mov	r0, r5
   33024:	sub	sp, fp, #8
   33028:	pop	{r4, r5, fp, pc}
   3302c:	movw	r0, #51353	; 0xc899
   33030:	movw	r1, #50550	; 0xc576
   33034:	movw	r3, #53118	; 0xcf7e
   33038:	movw	r2, #1400	; 0x578
   3303c:	movt	r0, #4
   33040:	movt	r1, #4
   33044:	movt	r3, #4
   33048:	bl	14f44 <__assert_fail@plt>

0003304c <flatcc_builder_vector_count@@Base>:
   3304c:	ldr	r0, [r0, #32]
   33050:	ldr	r0, [r0, #20]
   33054:	bx	lr

00033058 <flatcc_builder_vector_edit@@Base>:
   33058:	ldr	r0, [r0, #16]
   3305c:	bx	lr

00033060 <flatcc_builder_create_offset_vector_direct@@Base>:
   33060:	mov	r3, #0
   33064:	b	33068 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   33068:	push	{r4, r5, r6, r7, fp, lr}
   3306c:	add	fp, sp, #16
   33070:	sub	sp, sp, #80	; 0x50
   33074:	mov	r5, #0
   33078:	cmn	r2, #-1073741823	; 0xc0000001
   3307c:	bhi	331dc <flatcc_builder_create_offset_vector_direct@@Base+0x17c>
   33080:	mov	r7, r0
   33084:	ldrh	r0, [r0, #128]	; 0x80
   33088:	sub	r6, fp, #20
   3308c:	mov	r4, #4
   33090:	mov	ip, #1
   33094:	cmp	r0, #3
   33098:	movls	r0, #4
   3309c:	strhls	r0, [r7, #128]	; 0x80
   330a0:	str	r2, [fp, #-20]	; 0xffffffec
   330a4:	ldr	lr, [r7, #136]	; 0x88
   330a8:	str	r6, [sp, #12]
   330ac:	mov	r6, #0
   330b0:	str	r4, [sp, #4]
   330b4:	str	r4, [sp, #16]
   330b8:	str	ip, [sp, #8]
   330bc:	cmp	r6, r2, lsl #2
   330c0:	and	r5, lr, #3
   330c4:	beq	330e4 <flatcc_builder_create_offset_vector_direct@@Base+0x84>
   330c8:	lsl	r6, r2, #2
   330cc:	mov	ip, #2
   330d0:	str	r1, [sp, #20]
   330d4:	add	r4, r6, #4
   330d8:	str	r6, [sp, #24]
   330dc:	str	ip, [sp, #8]
   330e0:	str	r4, [sp, #4]
   330e4:	cmp	r5, #0
   330e8:	beq	33114 <flatcc_builder_create_offset_vector_direct@@Base+0xb4>
   330ec:	add	r6, sp, #4
   330f0:	movw	r0, #50020	; 0xc364
   330f4:	add	r4, r4, r5
   330f8:	add	r6, r6, ip, lsl #3
   330fc:	add	ip, ip, #1
   33100:	movt	r0, #4
   33104:	str	r4, [sp, #4]
   33108:	str	r0, [r6, #8]
   3310c:	str	r5, [r6, #12]
   33110:	str	ip, [sp, #8]
   33114:	cmp	r2, #0
   33118:	beq	331a0 <flatcc_builder_create_offset_vector_direct@@Base+0x140>
   3311c:	mvn	r0, #3
   33120:	cmp	r3, #0
   33124:	sub	r0, r0, lr
   33128:	add	r0, r0, r4
   3312c:	beq	33178 <flatcc_builder_create_offset_vector_direct@@Base+0x118>
   33130:	mov	r5, #0
   33134:	ldr	r6, [r1, r5, lsl #2]
   33138:	cmp	r6, #0
   3313c:	beq	33158 <flatcc_builder_create_offset_vector_direct@@Base+0xf8>
   33140:	add	r6, r0, r6
   33144:	str	r6, [r1, r5, lsl #2]
   33148:	ldrb	r6, [r3, r5]
   3314c:	cmp	r6, #0
   33150:	bne	33164 <flatcc_builder_create_offset_vector_direct@@Base+0x104>
   33154:	b	331e8 <flatcc_builder_create_offset_vector_direct@@Base+0x188>
   33158:	ldrb	r6, [r3, r5]
   3315c:	cmp	r6, #0
   33160:	bne	33228 <flatcc_builder_create_offset_vector_direct@@Base+0x1c8>
   33164:	add	r5, r5, #1
   33168:	sub	r0, r0, #4
   3316c:	cmp	r5, r2
   33170:	bcc	33134 <flatcc_builder_create_offset_vector_direct@@Base+0xd4>
   33174:	b	331a0 <flatcc_builder_create_offset_vector_direct@@Base+0x140>
   33178:	mov	r3, #0
   3317c:	ldr	r5, [r1, r3, lsl #2]
   33180:	cmp	r5, #0
   33184:	beq	33208 <flatcc_builder_create_offset_vector_direct@@Base+0x1a8>
   33188:	add	r6, r0, r5
   3318c:	sub	r0, r0, #4
   33190:	str	r6, [r1, r3, lsl #2]
   33194:	add	r3, r3, #1
   33198:	cmp	r3, r2
   3319c:	bcc	3317c <flatcc_builder_create_offset_vector_direct@@Base+0x11c>
   331a0:	cmp	r4, #0
   331a4:	ble	33248 <flatcc_builder_create_offset_vector_direct@@Base+0x1e8>
   331a8:	ldr	r0, [r7, #136]	; 0x88
   331ac:	ldr	r6, [r7, #44]	; 0x2c
   331b0:	add	r1, sp, #4
   331b4:	mov	r2, ip
   331b8:	add	r1, r1, #8
   331bc:	sub	r5, r0, r4
   331c0:	ldr	r0, [r7, #36]	; 0x24
   331c4:	str	r4, [sp]
   331c8:	mov	r3, r5
   331cc:	blx	r6
   331d0:	cmp	r0, #0
   331d4:	bne	33268 <flatcc_builder_create_offset_vector_direct@@Base+0x208>
   331d8:	str	r5, [r7, #136]	; 0x88
   331dc:	mov	r0, r5
   331e0:	sub	sp, fp, #16
   331e4:	pop	{r4, r5, r6, r7, fp, pc}
   331e8:	movw	r0, #55056	; 0xd710
   331ec:	movw	r1, #50550	; 0xc576
   331f0:	movw	r3, #55070	; 0xd71e
   331f4:	movw	r2, #1457	; 0x5b1
   331f8:	movt	r0, #4
   331fc:	movt	r1, #4
   33200:	movt	r3, #4
   33204:	bl	14f44 <__assert_fail@plt>
   33208:	movw	r0, #55068	; 0xd71c
   3320c:	movw	r1, #50550	; 0xc576
   33210:	movw	r3, #55070	; 0xd71e
   33214:	movw	r2, #1463	; 0x5b7
   33218:	movt	r0, #4
   3321c:	movt	r1, #4
   33220:	movt	r3, #4
   33224:	bl	14f44 <__assert_fail@plt>
   33228:	movw	r0, #55201	; 0xd7a1
   3322c:	movw	r1, #50550	; 0xc576
   33230:	movw	r3, #55070	; 0xd71e
   33234:	movw	r2, #1461	; 0x5b5
   33238:	movt	r0, #4
   3323c:	movt	r1, #4
   33240:	movt	r3, #4
   33244:	bl	14f44 <__assert_fail@plt>
   33248:	movw	r0, #55068	; 0xd71c
   3324c:	movw	r1, #50550	; 0xc576
   33250:	movw	r3, #54747	; 0xd5db
   33254:	movw	r2, #647	; 0x287
   33258:	movt	r0, #4
   3325c:	movt	r1, #4
   33260:	movt	r3, #4
   33264:	bl	14f44 <__assert_fail@plt>
   33268:	movw	r0, #55068	; 0xd71c
   3326c:	movw	r1, #50550	; 0xc576
   33270:	movw	r3, #54747	; 0xd5db
   33274:	movw	r2, #651	; 0x28b
   33278:	movt	r0, #4
   3327c:	movt	r1, #4
   33280:	movt	r3, #4
   33284:	bl	14f44 <__assert_fail@plt>

00033288 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   33288:	push	{r4, r5, fp, lr}
   3328c:	add	fp, sp, #8
   33290:	mov	r4, r0
   33294:	ldr	r0, [r0, #32]
   33298:	mov	r3, r1
   3329c:	ldrh	r1, [r0, #14]
   332a0:	cmp	r1, #5
   332a4:	bne	33340 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb8>
   332a8:	ldr	r2, [r0, #20]
   332ac:	ldr	r1, [r4, #16]
   332b0:	mov	r0, r4
   332b4:	bl	33068 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   332b8:	mov	r5, r0
   332bc:	cmp	r0, #0
   332c0:	beq	33338 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb0>
   332c4:	ldr	r0, [r4, #16]
   332c8:	ldr	r2, [r4, #20]
   332cc:	mov	r1, #0
   332d0:	bl	14ef0 <memset@plt>
   332d4:	ldr	r0, [r4, #32]
   332d8:	ldr	r1, [r4, #60]	; 0x3c
   332dc:	ldr	ip, [r4, #64]	; 0x40
   332e0:	ldr	r3, [r0, #8]
   332e4:	str	r3, [r4, #20]
   332e8:	ldr	r3, [r0]
   332ec:	str	r3, [r4, #28]
   332f0:	add	r1, r1, r3
   332f4:	ldr	r2, [r0, #4]
   332f8:	str	r1, [r4, #16]
   332fc:	sub	r1, ip, r3
   33300:	cmp	r1, r2
   33304:	movhi	r1, r2
   33308:	str	r1, [r4, #24]
   3330c:	ldrh	r1, [r4, #130]	; 0x82
   33310:	ldrh	r2, [r4, #128]	; 0x80
   33314:	cmp	r2, r1
   33318:	strhcc	r1, [r4, #128]	; 0x80
   3331c:	ldrh	r1, [r0, #12]
   33320:	sub	r0, r0, #36	; 0x24
   33324:	str	r0, [r4, #32]
   33328:	strh	r1, [r4, #130]	; 0x82
   3332c:	ldr	r0, [r4, #156]	; 0x9c
   33330:	sub	r0, r0, #1
   33334:	str	r0, [r4, #156]	; 0x9c
   33338:	mov	r0, r5
   3333c:	pop	{r4, r5, fp, pc}
   33340:	movw	r0, #51602	; 0xc992
   33344:	movw	r1, #50550	; 0xc576
   33348:	movw	r3, #53259	; 0xd00b
   3334c:	movw	r2, #1493	; 0x5d5
   33350:	movt	r0, #4
   33354:	movt	r1, #4
   33358:	movt	r3, #4
   3335c:	bl	14f44 <__assert_fail@plt>

00033360 <flatcc_builder_offset_vector_edit@@Base>:
   33360:	ldr	r0, [r0, #16]
   33364:	bx	lr

00033368 <flatcc_builder_offset_vector_count@@Base>:
   33368:	ldr	r0, [r0, #32]
   3336c:	ldr	r0, [r0, #20]
   33370:	bx	lr

00033374 <flatcc_builder_table_add_union@@Base>:
   33374:	push	{r4, r5, r6, r7, fp, lr}
   33378:	add	fp, sp, #16
   3337c:	mov	r5, r0
   33380:	ldr	r0, [r0, #32]
   33384:	ldrh	r0, [r0, #14]
   33388:	cmp	r0, #3
   3338c:	bne	33414 <flatcc_builder_table_add_union@@Base+0xa0>
   33390:	mov	r7, r3
   33394:	mov	r4, r2
   33398:	mov	r6, r1
   3339c:	cmp	r3, #0
   333a0:	beq	333b0 <flatcc_builder_table_add_union@@Base+0x3c>
   333a4:	uxtb	r0, r4
   333a8:	cmp	r0, #0
   333ac:	beq	33434 <flatcc_builder_table_add_union@@Base+0xc0>
   333b0:	cmp	r7, #0
   333b4:	beq	333d0 <flatcc_builder_table_add_union@@Base+0x5c>
   333b8:	mov	r0, r5
   333bc:	mov	r1, r6
   333c0:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   333c4:	cmp	r0, #0
   333c8:	beq	33454 <flatcc_builder_table_add_union@@Base+0xe0>
   333cc:	str	r7, [r0]
   333d0:	sub	r1, r6, #1
   333d4:	mov	r0, r5
   333d8:	mov	r2, #1
   333dc:	mov	r3, #1
   333e0:	bl	33604 <flatcc_builder_table_add@@Base>
   333e4:	cmp	r0, #0
   333e8:	strbne	r4, [r0]
   333ec:	movne	r0, #0
   333f0:	popne	{r4, r5, r6, r7, fp, pc}
   333f4:	movw	r0, #53505	; 0xd101
   333f8:	movw	r1, #50550	; 0xc576
   333fc:	movw	r3, #53373	; 0xd07d
   33400:	movw	r2, #1526	; 0x5f6
   33404:	movt	r0, #4
   33408:	movt	r1, #4
   3340c:	movt	r3, #4
   33410:	bl	14f44 <__assert_fail@plt>
   33414:	movw	r0, #52619	; 0xcd8b
   33418:	movw	r1, #50550	; 0xc576
   3341c:	movw	r3, #53373	; 0xd07d
   33420:	movw	r2, #1518	; 0x5ee
   33424:	movt	r0, #4
   33428:	movt	r1, #4
   3342c:	movt	r3, #4
   33430:	bl	14f44 <__assert_fail@plt>
   33434:	movw	r0, #53461	; 0xd0d5
   33438:	movw	r1, #50550	; 0xc576
   3343c:	movw	r3, #53373	; 0xd07d
   33440:	movw	r2, #1519	; 0x5ef
   33444:	movt	r0, #4
   33448:	movt	r1, #4
   3344c:	movt	r3, #4
   33450:	bl	14f44 <__assert_fail@plt>
   33454:	movw	r0, #53495	; 0xd0f7
   33458:	movw	r1, #50550	; 0xc576
   3345c:	movw	r3, #53373	; 0xd07d
   33460:	movw	r2, #1522	; 0x5f2
   33464:	movt	r0, #4
   33468:	movt	r1, #4
   3346c:	movt	r3, #4
   33470:	bl	14f44 <__assert_fail@plt>

00033474 <flatcc_builder_table_add_offset@@Base>:
   33474:	push	{r4, r5, r6, r7, fp, lr}
   33478:	add	fp, sp, #16
   3347c:	sub	sp, sp, #8
   33480:	mov	r4, r0
   33484:	ldr	r0, [r0, #32]
   33488:	ldrh	r0, [r0, #14]
   3348c:	cmp	r0, #3
   33490:	bne	335a4 <flatcc_builder_table_add_offset@@Base+0x130>
   33494:	movw	r0, #32765	; 0x7ffd
   33498:	mov	r5, r1
   3349c:	cmp	r1, r0
   334a0:	bcs	335c4 <flatcc_builder_table_add_offset@@Base+0x150>
   334a4:	ldr	r0, [r4, #4]
   334a8:	add	r1, r0, r5, lsl #1
   334ac:	ldrh	r1, [r1]
   334b0:	cmp	r1, #0
   334b4:	bne	335e4 <flatcc_builder_table_add_offset@@Base+0x170>
   334b8:	ldr	r2, [r4, #20]
   334bc:	ldr	r1, [r4, #12]
   334c0:	ldr	r3, [r4, #24]
   334c4:	add	r2, r2, #3
   334c8:	eor	r1, r1, r5
   334cc:	bic	r6, r2, #3
   334d0:	movw	r2, #31153	; 0x79b1
   334d4:	movt	r2, #40503	; 0x9e37
   334d8:	add	r7, r6, #4
   334dc:	mul	r1, r1, r2
   334e0:	cmp	r7, r3
   334e4:	str	r7, [r4, #20]
   334e8:	eor	r1, r1, #4
   334ec:	mul	r1, r1, r2
   334f0:	str	r1, [r4, #12]
   334f4:	bls	33568 <flatcc_builder_table_add_offset@@Base+0xf4>
   334f8:	ldr	r1, [r4, #28]
   334fc:	ldr	r0, [r4, #40]	; 0x28
   33500:	ldr	ip, [r4, #48]	; 0x30
   33504:	mov	r2, #1
   33508:	mov	r3, #1
   3350c:	str	r2, [sp]
   33510:	add	r2, r1, r7
   33514:	add	r1, r4, #60	; 0x3c
   33518:	blx	ip
   3351c:	mov	r1, r0
   33520:	mov	r0, #0
   33524:	cmp	r1, #0
   33528:	beq	33534 <flatcc_builder_table_add_offset@@Base+0xc0>
   3352c:	sub	sp, fp, #16
   33530:	pop	{r4, r5, r6, r7, fp, pc}
   33534:	ldr	r0, [r4, #28]
   33538:	ldr	r2, [r4, #60]	; 0x3c
   3353c:	ldr	r3, [r4, #64]	; 0x40
   33540:	ldr	r1, [r4, #32]
   33544:	add	r2, r2, r0
   33548:	sub	r0, r3, r0
   3354c:	str	r2, [r4, #16]
   33550:	movw	r2, #65532	; 0xfffc
   33554:	cmp	r0, r2
   33558:	movcs	r0, r2
   3355c:	str	r0, [r4, #24]
   33560:	str	r2, [r1, #4]
   33564:	ldr	r0, [r4, #4]
   33568:	uxth	r1, r5
   3356c:	add	r0, r0, r1, lsl #1
   33570:	strh	r7, [r0]
   33574:	ldrh	r0, [r4, #8]
   33578:	cmp	r0, r1
   3357c:	addls	r0, r5, #1
   33580:	strhls	r0, [r4, #8]
   33584:	ldr	r0, [r4]
   33588:	add	r1, r0, #2
   3358c:	str	r1, [r4]
   33590:	strh	r6, [r0]
   33594:	ldr	r0, [r4, #16]
   33598:	add	r0, r0, r6
   3359c:	sub	sp, fp, #16
   335a0:	pop	{r4, r5, r6, r7, fp, pc}
   335a4:	movw	r0, #52619	; 0xcd8b
   335a8:	movw	r1, #50550	; 0xc576
   335ac:	movw	r3, #54399	; 0xd47f
   335b0:	movw	r2, #1811	; 0x713
   335b4:	movt	r0, #4
   335b8:	movt	r1, #4
   335bc:	movt	r3, #4
   335c0:	bl	14f44 <__assert_fail@plt>
   335c4:	movw	r0, #54271	; 0xd3ff
   335c8:	movw	r1, #50550	; 0xc576
   335cc:	movw	r3, #54399	; 0xd47f
   335d0:	movw	r2, #1812	; 0x714
   335d4:	movt	r0, #4
   335d8:	movt	r1, #4
   335dc:	movt	r3, #4
   335e0:	bl	14f44 <__assert_fail@plt>
   335e4:	movw	r0, #55068	; 0xd71c
   335e8:	movw	r1, #50550	; 0xc576
   335ec:	movw	r3, #54399	; 0xd47f
   335f0:	movw	r2, #1819	; 0x71b
   335f4:	movt	r0, #4
   335f8:	movt	r1, #4
   335fc:	movt	r3, #4
   33600:	bl	14f44 <__assert_fail@plt>

00033604 <flatcc_builder_table_add@@Base>:
   33604:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   33608:	add	fp, sp, #24
   3360c:	sub	sp, sp, #8
   33610:	mov	r4, r0
   33614:	ldr	r0, [r0, #32]
   33618:	ldrh	r0, [r0, #14]
   3361c:	cmp	r0, #3
   33620:	bne	33740 <flatcc_builder_table_add@@Base+0x13c>
   33624:	movw	r0, #32765	; 0x7ffd
   33628:	mov	r8, r1
   3362c:	cmp	r1, r0
   33630:	bcs	33760 <flatcc_builder_table_add@@Base+0x15c>
   33634:	ldrh	r0, [r4, #130]	; 0x82
   33638:	cmp	r0, r3
   3363c:	strhcc	r3, [r4, #130]	; 0x82
   33640:	ldr	r0, [r4, #4]
   33644:	add	r1, r0, r8, lsl #1
   33648:	ldrh	r1, [r1]
   3364c:	cmp	r1, #0
   33650:	bne	33780 <flatcc_builder_table_add@@Base+0x17c>
   33654:	ldr	r1, [r4, #12]
   33658:	movw	r7, #31153	; 0x79b1
   3365c:	ldr	r6, [r4, #20]
   33660:	ldr	r5, [r4, #24]
   33664:	movt	r7, #40503	; 0x9e37
   33668:	eor	r1, r1, r8
   3366c:	mul	r1, r1, r7
   33670:	eor	r1, r1, r2
   33674:	mul	r1, r1, r7
   33678:	str	r1, [r4, #12]
   3367c:	add	r1, r3, r6
   33680:	rsb	r3, r3, #0
   33684:	sub	r1, r1, #1
   33688:	and	r6, r1, r3
   3368c:	add	r1, r6, r2
   33690:	cmp	r1, r5
   33694:	str	r1, [r4, #20]
   33698:	bcc	33710 <flatcc_builder_table_add@@Base+0x10c>
   3369c:	ldr	r2, [r4, #28]
   336a0:	ldr	r0, [r4, #40]	; 0x28
   336a4:	ldr	r7, [r4, #48]	; 0x30
   336a8:	mov	r3, #1
   336ac:	str	r3, [sp]
   336b0:	mov	r3, #1
   336b4:	add	r1, r1, r2
   336b8:	add	r2, r1, #1
   336bc:	add	r1, r4, #60	; 0x3c
   336c0:	blx	r7
   336c4:	mov	r1, r0
   336c8:	mov	r0, #0
   336cc:	cmp	r1, #0
   336d0:	beq	336dc <flatcc_builder_table_add@@Base+0xd8>
   336d4:	sub	sp, fp, #24
   336d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   336dc:	ldr	r0, [r4, #28]
   336e0:	ldr	r2, [r4, #60]	; 0x3c
   336e4:	ldr	r3, [r4, #64]	; 0x40
   336e8:	ldr	r1, [r4, #32]
   336ec:	add	r2, r2, r0
   336f0:	sub	r0, r3, r0
   336f4:	str	r2, [r4, #16]
   336f8:	movw	r2, #65532	; 0xfffc
   336fc:	cmp	r0, r2
   33700:	movcs	r0, r2
   33704:	str	r0, [r4, #24]
   33708:	str	r2, [r1, #4]
   3370c:	ldr	r0, [r4, #4]
   33710:	uxth	r1, r8
   33714:	add	r2, r6, #4
   33718:	add	r0, r0, r1, lsl #1
   3371c:	strh	r2, [r0]
   33720:	ldrh	r0, [r4, #8]
   33724:	cmp	r0, r1
   33728:	addls	r0, r8, #1
   3372c:	strhls	r0, [r4, #8]
   33730:	ldr	r0, [r4, #16]
   33734:	add	r0, r0, r6
   33738:	sub	sp, fp, #24
   3373c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   33740:	movw	r0, #52619	; 0xcd8b
   33744:	movw	r1, #50550	; 0xc576
   33748:	movw	r3, #54197	; 0xd3b5
   3374c:	movw	r2, #1773	; 0x6ed
   33750:	movt	r0, #4
   33754:	movt	r1, #4
   33758:	movt	r3, #4
   3375c:	bl	14f44 <__assert_fail@plt>
   33760:	movw	r0, #54271	; 0xd3ff
   33764:	movw	r1, #50550	; 0xc576
   33768:	movw	r3, #54197	; 0xd3b5
   3376c:	movw	r2, #1774	; 0x6ee
   33770:	movt	r0, #4
   33774:	movt	r1, #4
   33778:	movt	r3, #4
   3377c:	bl	14f44 <__assert_fail@plt>
   33780:	movw	r0, #55068	; 0xd71c
   33784:	movw	r1, #50550	; 0xc576
   33788:	movw	r3, #54197	; 0xd3b5
   3378c:	movw	r2, #1784	; 0x6f8
   33790:	movt	r0, #4
   33794:	movt	r1, #4
   33798:	movt	r3, #4
   3379c:	bl	14f44 <__assert_fail@plt>

000337a0 <flatcc_builder_table_add_union_vector@@Base>:
   337a0:	push	{r4, r5, r6, r7, fp, lr}
   337a4:	add	fp, sp, #16
   337a8:	mov	r6, r0
   337ac:	ldr	r0, [r0, #32]
   337b0:	ldrh	r0, [r0, #14]
   337b4:	cmp	r0, #3
   337b8:	bne	33820 <flatcc_builder_table_add_union_vector@@Base+0x80>
   337bc:	clz	r0, r3
   337c0:	mov	r5, r1
   337c4:	clz	r1, r2
   337c8:	mov	r4, r3
   337cc:	mov	r7, r2
   337d0:	lsr	r0, r0, #5
   337d4:	lsr	r1, r1, #5
   337d8:	cmp	r1, r0
   337dc:	bne	33840 <flatcc_builder_table_add_union_vector@@Base+0xa0>
   337e0:	cmp	r7, #0
   337e4:	beq	33818 <flatcc_builder_table_add_union_vector@@Base+0x78>
   337e8:	sub	r1, r5, #1
   337ec:	mov	r0, r6
   337f0:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   337f4:	cmp	r0, #0
   337f8:	beq	33860 <flatcc_builder_table_add_union_vector@@Base+0xc0>
   337fc:	str	r7, [r0]
   33800:	mov	r0, r6
   33804:	mov	r1, r5
   33808:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   3380c:	cmp	r0, #0
   33810:	beq	33880 <flatcc_builder_table_add_union_vector@@Base+0xe0>
   33814:	str	r4, [r0]
   33818:	mov	r0, #0
   3381c:	pop	{r4, r5, r6, r7, fp, pc}
   33820:	movw	r0, #52619	; 0xcd8b
   33824:	movw	r1, #50550	; 0xc576
   33828:	movw	r3, #53517	; 0xd10d
   3382c:	mov	r2, #1536	; 0x600
   33830:	movt	r0, #4
   33834:	movt	r1, #4
   33838:	movt	r3, #4
   3383c:	bl	14f44 <__assert_fail@plt>
   33840:	movw	r0, #53616	; 0xd170
   33844:	movw	r1, #50550	; 0xc576
   33848:	movw	r3, #53517	; 0xd10d
   3384c:	movw	r2, #1537	; 0x601
   33850:	movt	r0, #4
   33854:	movt	r1, #4
   33858:	movt	r3, #4
   3385c:	bl	14f44 <__assert_fail@plt>
   33860:	movw	r0, #53495	; 0xd0f7
   33864:	movw	r1, #50550	; 0xc576
   33868:	movw	r3, #53517	; 0xd10d
   3386c:	movw	r2, #1540	; 0x604
   33870:	movt	r0, #4
   33874:	movt	r1, #4
   33878:	movt	r3, #4
   3387c:	bl	14f44 <__assert_fail@plt>
   33880:	movw	r0, #53495	; 0xd0f7
   33884:	movw	r1, #50550	; 0xc576
   33888:	movw	r3, #53517	; 0xd10d
   3388c:	movw	r2, #1544	; 0x608
   33890:	movt	r0, #4
   33894:	movt	r1, #4
   33898:	movt	r3, #4
   3389c:	bl	14f44 <__assert_fail@plt>

000338a0 <flatcc_builder_create_union_vector@@Base>:
   338a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   338a4:	add	fp, sp, #28
   338a8:	sub	sp, sp, #12
   338ac:	mov	r7, #0
   338b0:	mov	r4, r1
   338b4:	mov	r5, r0
   338b8:	mov	sl, r3
   338bc:	mov	r9, r2
   338c0:	mov	r6, #4
   338c4:	str	r7, [r0]
   338c8:	str	r7, [r0, #4]
   338cc:	mov	r0, r1
   338d0:	mov	r1, #4
   338d4:	bl	30d58 <flatcc_builder_start_buffer@@Base+0xbc>
   338d8:	cmp	r0, #0
   338dc:	beq	338e8 <flatcc_builder_create_union_vector@@Base+0x48>
   338e0:	sub	sp, fp, #28
   338e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   338e8:	ldr	r0, [r4, #32]
   338ec:	mov	r1, #5
   338f0:	str	r6, [r0, #16]
   338f4:	ldr	r0, [r4, #32]
   338f8:	str	r7, [r0, #20]
   338fc:	ldr	r0, [r4, #32]
   33900:	strh	r1, [r0, #14]
   33904:	ldr	r1, [r4, #28]
   33908:	ldr	r2, [r4, #60]	; 0x3c
   3390c:	ldr	r3, [r4, #64]	; 0x40
   33910:	add	r2, r2, r1
   33914:	sub	r1, r3, r1
   33918:	str	r2, [r4, #16]
   3391c:	mvn	r2, #3
   33920:	cmn	r1, #4
   33924:	movcs	r1, r2
   33928:	str	r1, [r4, #24]
   3392c:	str	r2, [r0, #4]
   33930:	ldr	r1, [r0, #20]
   33934:	adds	r1, r1, sl
   33938:	cmpcc	r1, #1073741824	; 0x40000000
   3393c:	bcc	33960 <flatcc_builder_create_union_vector@@Base+0xc0>
   33940:	movw	r0, #54821	; 0xd625
   33944:	movw	r1, #50550	; 0xc576
   33948:	movw	r3, #54848	; 0xd640
   3394c:	mov	r2, #892	; 0x37c
   33950:	movt	r0, #4
   33954:	movt	r1, #4
   33958:	movt	r3, #4
   3395c:	bl	14f44 <__assert_fail@plt>
   33960:	str	r1, [r0, #20]
   33964:	ldr	r7, [r4, #20]
   33968:	ldr	r0, [r4, #24]
   3396c:	add	r1, r7, sl, lsl #2
   33970:	cmp	r1, r0
   33974:	str	r1, [r4, #20]
   33978:	bcs	3398c <flatcc_builder_create_union_vector@@Base+0xec>
   3397c:	ldr	r1, [r4, #16]
   33980:	adds	r2, r1, r7
   33984:	bne	339f4 <flatcc_builder_create_union_vector@@Base+0x154>
   33988:	b	338e0 <flatcc_builder_create_union_vector@@Base+0x40>
   3398c:	ldr	r2, [r4, #28]
   33990:	ldr	r0, [r4, #40]	; 0x28
   33994:	ldr	r6, [r4, #48]	; 0x30
   33998:	mov	r3, #1
   3399c:	str	r3, [sp]
   339a0:	mov	r3, #1
   339a4:	add	r1, r1, r2
   339a8:	add	r2, r1, #1
   339ac:	add	r1, r4, #60	; 0x3c
   339b0:	blx	r6
   339b4:	cmp	r0, #0
   339b8:	bne	338e0 <flatcc_builder_create_union_vector@@Base+0x40>
   339bc:	ldr	r0, [r4, #28]
   339c0:	ldr	r1, [r4, #60]	; 0x3c
   339c4:	ldr	r3, [r4, #64]	; 0x40
   339c8:	ldr	r2, [r4, #32]
   339cc:	add	r1, r1, r0
   339d0:	sub	r0, r3, r0
   339d4:	mvn	r3, #3
   339d8:	cmn	r0, #4
   339dc:	str	r1, [r4, #16]
   339e0:	movcs	r0, r3
   339e4:	str	r0, [r4, #24]
   339e8:	str	r3, [r2, #4]
   339ec:	adds	r2, r1, r7
   339f0:	beq	338e0 <flatcc_builder_create_union_vector@@Base+0x40>
   339f4:	ldr	r7, [r4, #20]
   339f8:	add	r2, r7, sl
   339fc:	cmp	r2, r0
   33a00:	str	r2, [r4, #20]
   33a04:	bcc	33a68 <flatcc_builder_create_union_vector@@Base+0x1c8>
   33a08:	ldr	r1, [r4, #28]
   33a0c:	ldr	r0, [r4, #40]	; 0x28
   33a10:	ldr	r6, [r4, #48]	; 0x30
   33a14:	mov	r3, #1
   33a18:	str	r3, [sp]
   33a1c:	mov	r3, #1
   33a20:	add	r1, r2, r1
   33a24:	add	r2, r1, #1
   33a28:	add	r1, r4, #60	; 0x3c
   33a2c:	blx	r6
   33a30:	cmp	r0, #0
   33a34:	bne	338e0 <flatcc_builder_create_union_vector@@Base+0x40>
   33a38:	ldr	r0, [r4, #28]
   33a3c:	ldr	r1, [r4, #60]	; 0x3c
   33a40:	ldr	r3, [r4, #64]	; 0x40
   33a44:	ldr	r2, [r4, #32]
   33a48:	add	r1, r1, r0
   33a4c:	sub	r0, r3, r0
   33a50:	mvn	r3, #3
   33a54:	cmn	r0, #4
   33a58:	str	r1, [r4, #16]
   33a5c:	movcs	r0, r3
   33a60:	str	r0, [r4, #24]
   33a64:	str	r3, [r2, #4]
   33a68:	adds	r8, r1, r7
   33a6c:	beq	338e0 <flatcc_builder_create_union_vector@@Base+0x40>
   33a70:	cmp	sl, #0
   33a74:	beq	33aa4 <flatcc_builder_create_union_vector@@Base+0x204>
   33a78:	add	r0, r9, #4
   33a7c:	mov	r2, sl
   33a80:	mov	r3, r1
   33a84:	mov	r7, r8
   33a88:	ldrb	r6, [r0, #-4]
   33a8c:	subs	r2, r2, #1
   33a90:	strb	r6, [r7], #1
   33a94:	ldr	r6, [r0]
   33a98:	add	r0, r0, #8
   33a9c:	str	r6, [r3], #4
   33aa0:	bne	33a88 <flatcc_builder_create_union_vector@@Base+0x1e8>
   33aa4:	mov	r0, r4
   33aa8:	mov	r2, sl
   33aac:	mov	r3, r8
   33ab0:	bl	33068 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   33ab4:	mov	r7, r0
   33ab8:	mov	r9, #0
   33abc:	cmp	r0, #0
   33ac0:	beq	33aec <flatcc_builder_create_union_vector@@Base+0x24c>
   33ac4:	mvn	r0, #0
   33ac8:	mov	r1, #1
   33acc:	mov	r2, sl
   33ad0:	mov	r3, #1
   33ad4:	str	r1, [sp]
   33ad8:	str	r0, [sp, #4]
   33adc:	mov	r0, r4
   33ae0:	mov	r1, r8
   33ae4:	bl	32e04 <flatcc_builder_create_vector@@Base>
   33ae8:	b	33af0 <flatcc_builder_create_union_vector@@Base+0x250>
   33aec:	mov	r0, #0
   33af0:	orr	r1, r9, r7
   33af4:	stm	r5, {r0, r1}
   33af8:	mov	r1, #0
   33afc:	ldr	r0, [r4, #16]
   33b00:	ldr	r2, [r4, #20]
   33b04:	bl	14ef0 <memset@plt>
   33b08:	ldr	r0, [r4, #32]
   33b0c:	ldr	r1, [r4, #60]	; 0x3c
   33b10:	ldr	r2, [r4, #64]	; 0x40
   33b14:	ldr	r3, [r0, #8]
   33b18:	str	r3, [r4, #20]
   33b1c:	ldr	r3, [r0]
   33b20:	str	r3, [r4, #28]
   33b24:	add	r1, r1, r3
   33b28:	ldr	r7, [r0, #4]
   33b2c:	str	r1, [r4, #16]
   33b30:	sub	r1, r2, r3
   33b34:	cmp	r1, r7
   33b38:	movhi	r1, r7
   33b3c:	str	r1, [r4, #24]
   33b40:	ldrh	r1, [r4, #130]	; 0x82
   33b44:	ldrh	r2, [r4, #128]	; 0x80
   33b48:	cmp	r2, r1
   33b4c:	strhcc	r1, [r4, #128]	; 0x80
   33b50:	ldrh	r1, [r0, #12]
   33b54:	sub	r0, r0, #36	; 0x24
   33b58:	str	r0, [r4, #32]
   33b5c:	strh	r1, [r4, #130]	; 0x82
   33b60:	ldr	r0, [r4, #156]	; 0x9c
   33b64:	sub	r0, r0, #1
   33b68:	str	r0, [r4, #156]	; 0x9c
   33b6c:	sub	sp, fp, #28
   33b70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00033b74 <flatcc_builder_create_union_vector_direct@@Base>:
   33b74:	push	{r4, r5, r6, r7, fp, lr}
   33b78:	add	fp, sp, #16
   33b7c:	sub	sp, sp, #8
   33b80:	ldr	r7, [fp, #8]
   33b84:	mov	r5, r2
   33b88:	mov	r4, r0
   33b8c:	mov	r0, #0
   33b90:	mov	r6, r1
   33b94:	str	r0, [r4]
   33b98:	str	r0, [r4, #4]
   33b9c:	mov	r0, r1
   33ba0:	mov	r1, r3
   33ba4:	mov	r3, r5
   33ba8:	mov	r2, r7
   33bac:	bl	33068 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   33bb0:	cmp	r0, #0
   33bb4:	str	r0, [r4, #4]
   33bb8:	beq	33be4 <flatcc_builder_create_union_vector_direct@@Base+0x70>
   33bbc:	mvn	r0, #0
   33bc0:	mov	r1, #1
   33bc4:	mov	r2, r7
   33bc8:	mov	r3, #1
   33bcc:	str	r1, [sp]
   33bd0:	str	r0, [sp, #4]
   33bd4:	mov	r0, r6
   33bd8:	mov	r1, r5
   33bdc:	bl	32e04 <flatcc_builder_create_vector@@Base>
   33be0:	str	r0, [r4]
   33be4:	sub	sp, fp, #16
   33be8:	pop	{r4, r5, r6, r7, fp, pc}

00033bec <flatcc_builder_start_union_vector@@Base>:
   33bec:	push	{r4, sl, fp, lr}
   33bf0:	add	fp, sp, #8
   33bf4:	mov	r1, #4
   33bf8:	mov	r4, r0
   33bfc:	bl	30d58 <flatcc_builder_start_buffer@@Base+0xbc>
   33c00:	mov	r1, r0
   33c04:	mvn	r0, #0
   33c08:	cmp	r1, #0
   33c0c:	popne	{r4, sl, fp, pc}
   33c10:	ldr	r0, [r4, #32]
   33c14:	mov	r1, #8
   33c18:	mov	r2, #7
   33c1c:	str	r1, [r0, #16]
   33c20:	mov	r0, #0
   33c24:	ldr	r1, [r4, #32]
   33c28:	str	r0, [r1, #20]
   33c2c:	ldr	r1, [r4, #32]
   33c30:	strh	r2, [r1, #14]
   33c34:	ldr	r2, [r4, #28]
   33c38:	ldr	r3, [r4, #60]	; 0x3c
   33c3c:	ldr	ip, [r4, #64]	; 0x40
   33c40:	add	r3, r3, r2
   33c44:	sub	r2, ip, r2
   33c48:	str	r3, [r4, #16]
   33c4c:	mvn	r3, #3
   33c50:	cmn	r2, #4
   33c54:	movcs	r2, r3
   33c58:	str	r2, [r4, #24]
   33c5c:	str	r3, [r1, #4]
   33c60:	pop	{r4, sl, fp, pc}

00033c64 <flatcc_builder_end_union_vector@@Base>:
   33c64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33c68:	add	fp, sp, #28
   33c6c:	sub	sp, sp, #12
   33c70:	mov	sl, r0
   33c74:	mov	r0, #0
   33c78:	mov	r4, r1
   33c7c:	str	r0, [sl]
   33c80:	str	r0, [sl, #4]
   33c84:	ldr	r0, [r1, #32]
   33c88:	ldrh	r1, [r0, #14]
   33c8c:	cmp	r1, #7
   33c90:	bne	33e38 <flatcc_builder_end_union_vector@@Base+0x1d4>
   33c94:	ldr	r6, [r0, #20]
   33c98:	ldr	r7, [r4, #20]
   33c9c:	ldr	r2, [r4, #24]
   33ca0:	add	r0, r6, r6, lsl #2
   33ca4:	add	r1, r7, r0
   33ca8:	cmp	r1, r2
   33cac:	str	r1, [r4, #20]
   33cb0:	bcs	33d40 <flatcc_builder_end_union_vector@@Base+0xdc>
   33cb4:	ldr	r0, [r4, #16]
   33cb8:	adds	r1, r0, r7
   33cbc:	beq	33da8 <flatcc_builder_end_union_vector@@Base+0x144>
   33cc0:	add	r8, r1, r6, lsl #2
   33cc4:	cmp	r6, #0
   33cc8:	beq	33cf8 <flatcc_builder_end_union_vector@@Base+0x94>
   33ccc:	add	r0, r0, #4
   33cd0:	mov	r2, r6
   33cd4:	mov	r3, r1
   33cd8:	mov	r7, r8
   33cdc:	ldrb	r5, [r0, #-4]
   33ce0:	subs	r2, r2, #1
   33ce4:	strb	r5, [r7], #1
   33ce8:	ldr	r5, [r0]
   33cec:	add	r0, r0, #8
   33cf0:	str	r5, [r3], #4
   33cf4:	bne	33cdc <flatcc_builder_end_union_vector@@Base+0x78>
   33cf8:	mov	r0, r4
   33cfc:	mov	r2, r6
   33d00:	mov	r3, r8
   33d04:	bl	33068 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   33d08:	mov	r7, r0
   33d0c:	mov	r9, #0
   33d10:	cmp	r0, #0
   33d14:	beq	33db0 <flatcc_builder_end_union_vector@@Base+0x14c>
   33d18:	mvn	r0, #0
   33d1c:	mov	r1, #1
   33d20:	mov	r2, r6
   33d24:	mov	r3, #1
   33d28:	str	r1, [sp]
   33d2c:	str	r0, [sp, #4]
   33d30:	mov	r0, r4
   33d34:	mov	r1, r8
   33d38:	bl	32e04 <flatcc_builder_create_vector@@Base>
   33d3c:	b	33db4 <flatcc_builder_end_union_vector@@Base+0x150>
   33d40:	ldr	r2, [r4, #28]
   33d44:	ldr	r0, [r4, #40]	; 0x28
   33d48:	ldr	r5, [r4, #48]	; 0x30
   33d4c:	mov	r3, #1
   33d50:	str	r3, [sp]
   33d54:	mov	r3, #1
   33d58:	add	r1, r1, r2
   33d5c:	add	r2, r1, #1
   33d60:	add	r1, r4, #60	; 0x3c
   33d64:	blx	r5
   33d68:	cmp	r0, #0
   33d6c:	bne	33da8 <flatcc_builder_end_union_vector@@Base+0x144>
   33d70:	ldr	r1, [r4, #28]
   33d74:	ldr	r0, [r4, #60]	; 0x3c
   33d78:	ldr	r3, [r4, #64]	; 0x40
   33d7c:	ldr	r2, [r4, #32]
   33d80:	add	r0, r0, r1
   33d84:	sub	r1, r3, r1
   33d88:	mvn	r3, #3
   33d8c:	cmn	r1, #4
   33d90:	str	r0, [r4, #16]
   33d94:	movcs	r1, r3
   33d98:	str	r1, [r4, #24]
   33d9c:	str	r3, [r2, #4]
   33da0:	adds	r1, r0, r7
   33da4:	bne	33cc0 <flatcc_builder_end_union_vector@@Base+0x5c>
   33da8:	sub	sp, fp, #28
   33dac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33db0:	mov	r0, #0
   33db4:	orr	r1, r9, r7
   33db8:	stm	sl, {r0, r1}
   33dbc:	mov	r1, #0
   33dc0:	ldr	r0, [r4, #16]
   33dc4:	ldr	r2, [r4, #20]
   33dc8:	bl	14ef0 <memset@plt>
   33dcc:	ldr	r0, [r4, #32]
   33dd0:	ldr	r1, [r4, #60]	; 0x3c
   33dd4:	ldr	r2, [r4, #64]	; 0x40
   33dd8:	ldr	r3, [r0, #8]
   33ddc:	str	r3, [r4, #20]
   33de0:	ldr	r3, [r0]
   33de4:	str	r3, [r4, #28]
   33de8:	add	r1, r1, r3
   33dec:	ldr	r7, [r0, #4]
   33df0:	str	r1, [r4, #16]
   33df4:	sub	r1, r2, r3
   33df8:	cmp	r1, r7
   33dfc:	movhi	r1, r7
   33e00:	str	r1, [r4, #24]
   33e04:	ldrh	r1, [r4, #130]	; 0x82
   33e08:	ldrh	r2, [r4, #128]	; 0x80
   33e0c:	cmp	r2, r1
   33e10:	strhcc	r1, [r4, #128]	; 0x80
   33e14:	ldrh	r1, [r0, #12]
   33e18:	sub	r0, r0, #36	; 0x24
   33e1c:	str	r0, [r4, #32]
   33e20:	strh	r1, [r4, #130]	; 0x82
   33e24:	ldr	r0, [r4, #156]	; 0x9c
   33e28:	sub	r0, r0, #1
   33e2c:	str	r0, [r4, #156]	; 0x9c
   33e30:	sub	sp, fp, #28
   33e34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33e38:	movw	r0, #53656	; 0xd198
   33e3c:	movw	r1, #50550	; 0xc576
   33e40:	movw	r3, #53706	; 0xd1ca
   33e44:	movw	r2, #1617	; 0x651
   33e48:	movt	r0, #4
   33e4c:	movt	r1, #4
   33e50:	movt	r3, #4
   33e54:	bl	14f44 <__assert_fail@plt>

00033e58 <flatcc_builder_union_vector_count@@Base>:
   33e58:	ldr	r0, [r0, #32]
   33e5c:	ldr	r0, [r0, #20]
   33e60:	bx	lr

00033e64 <flatcc_builder_union_vector_edit@@Base>:
   33e64:	ldr	r0, [r0, #16]
   33e68:	bx	lr

00033e6c <flatcc_builder_extend_union_vector@@Base>:
   33e6c:	push	{r4, r5, fp, lr}
   33e70:	add	fp, sp, #8
   33e74:	sub	sp, sp, #8
   33e78:	mov	r4, r0
   33e7c:	ldr	r0, [r0, #32]
   33e80:	ldr	r2, [r0, #20]
   33e84:	adds	r2, r2, r1
   33e88:	cmpcc	r2, #536870912	; 0x20000000
   33e8c:	bcc	33eb0 <flatcc_builder_extend_union_vector@@Base+0x44>
   33e90:	movw	r0, #54821	; 0xd625
   33e94:	movw	r1, #50550	; 0xc576
   33e98:	movw	r3, #54848	; 0xd640
   33e9c:	mov	r2, #892	; 0x37c
   33ea0:	movt	r0, #4
   33ea4:	movt	r1, #4
   33ea8:	movt	r3, #4
   33eac:	bl	14f44 <__assert_fail@plt>
   33eb0:	str	r2, [r0, #20]
   33eb4:	ldr	r5, [r4, #20]
   33eb8:	ldr	r0, [r4, #24]
   33ebc:	add	r1, r5, r1, lsl #3
   33ec0:	cmp	r1, r0
   33ec4:	str	r1, [r4, #20]
   33ec8:	bcs	33edc <flatcc_builder_extend_union_vector@@Base+0x70>
   33ecc:	ldr	r0, [r4, #16]
   33ed0:	add	r0, r0, r5
   33ed4:	sub	sp, fp, #8
   33ed8:	pop	{r4, r5, fp, pc}
   33edc:	ldr	r2, [r4, #28]
   33ee0:	ldr	r0, [r4, #40]	; 0x28
   33ee4:	ldr	ip, [r4, #48]	; 0x30
   33ee8:	mov	r3, #1
   33eec:	str	r3, [sp]
   33ef0:	mov	r3, #1
   33ef4:	add	r1, r1, r2
   33ef8:	add	r2, r1, #1
   33efc:	add	r1, r4, #60	; 0x3c
   33f00:	blx	ip
   33f04:	mov	r1, r0
   33f08:	mov	r0, #0
   33f0c:	cmp	r1, #0
   33f10:	beq	33f1c <flatcc_builder_extend_union_vector@@Base+0xb0>
   33f14:	sub	sp, fp, #8
   33f18:	pop	{r4, r5, fp, pc}
   33f1c:	ldr	r1, [r4, #28]
   33f20:	ldr	r0, [r4, #60]	; 0x3c
   33f24:	ldr	r3, [r4, #64]	; 0x40
   33f28:	ldr	r2, [r4, #32]
   33f2c:	add	r0, r0, r1
   33f30:	sub	r1, r3, r1
   33f34:	mvn	r3, #3
   33f38:	cmn	r1, #4
   33f3c:	str	r0, [r4, #16]
   33f40:	movcs	r1, r3
   33f44:	str	r1, [r4, #24]
   33f48:	str	r3, [r2, #4]
   33f4c:	add	r0, r0, r5
   33f50:	sub	sp, fp, #8
   33f54:	pop	{r4, r5, fp, pc}

00033f58 <flatcc_builder_truncate_union_vector@@Base>:
   33f58:	push	{fp, lr}
   33f5c:	mov	fp, sp
   33f60:	ldr	r2, [r0, #32]
   33f64:	ldrh	r3, [r2, #14]
   33f68:	cmp	r3, #7
   33f6c:	bne	33fb4 <flatcc_builder_truncate_union_vector@@Base+0x5c>
   33f70:	ldr	r3, [r2, #20]
   33f74:	cmp	r3, r1
   33f78:	bcc	33fd4 <flatcc_builder_truncate_union_vector@@Base+0x7c>
   33f7c:	sub	r3, r3, r1
   33f80:	str	r3, [r2, #20]
   33f84:	ldr	r2, [r0, #32]
   33f88:	ldr	r3, [r0, #20]
   33f8c:	ldr	ip, [r0, #16]
   33f90:	ldr	r2, [r2, #16]
   33f94:	mls	r3, r2, r1, r3
   33f98:	mul	r2, r2, r1
   33f9c:	mov	r1, #0
   33fa0:	str	r3, [r0, #20]
   33fa4:	add	r0, ip, r3
   33fa8:	bl	14ef0 <memset@plt>
   33fac:	mov	r0, #0
   33fb0:	pop	{fp, pc}
   33fb4:	movw	r0, #53656	; 0xd198
   33fb8:	movw	r1, #50550	; 0xc576
   33fbc:	movw	r3, #53789	; 0xd21d
   33fc0:	movw	r2, #1665	; 0x681
   33fc4:	movt	r0, #4
   33fc8:	movt	r1, #4
   33fcc:	movt	r3, #4
   33fd0:	bl	14f44 <__assert_fail@plt>
   33fd4:	movw	r0, #52220	; 0xcbfc
   33fd8:	movw	r1, #50550	; 0xc576
   33fdc:	movw	r3, #53789	; 0xd21d
   33fe0:	movw	r2, #1666	; 0x682
   33fe4:	movt	r0, #4
   33fe8:	movt	r1, #4
   33fec:	movt	r3, #4
   33ff0:	bl	14f44 <__assert_fail@plt>

00033ff4 <flatcc_builder_union_vector_push@@Base>:
   33ff4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   33ff8:	add	fp, sp, #24
   33ffc:	sub	sp, sp, #8
   34000:	mov	r7, r0
   34004:	ldr	r0, [r0, #32]
   34008:	mov	r9, r1
   3400c:	ldrh	r1, [r0, #14]
   34010:	cmp	r1, #7
   34014:	bne	340dc <flatcc_builder_union_vector_push@@Base+0xe8>
   34018:	ldr	r1, [r0, #20]
   3401c:	mov	r6, #0
   34020:	cmn	r1, #-536870911	; 0xe0000001
   34024:	beq	34084 <flatcc_builder_union_vector_push@@Base+0x90>
   34028:	add	r1, r1, #1
   3402c:	mov	r8, r2
   34030:	str	r1, [r0, #20]
   34034:	ldr	r4, [r7, #20]
   34038:	ldr	r0, [r7, #24]
   3403c:	add	r1, r4, #8
   34040:	cmp	r1, r0
   34044:	str	r1, [r7, #20]
   34048:	bcs	34054 <flatcc_builder_union_vector_push@@Base+0x60>
   3404c:	ldr	r0, [r7, #16]
   34050:	b	340c0 <flatcc_builder_union_vector_push@@Base+0xcc>
   34054:	ldr	r1, [r7, #28]
   34058:	ldr	r0, [r7, #40]	; 0x28
   3405c:	ldr	r5, [r7, #48]	; 0x30
   34060:	mov	r2, #1
   34064:	mov	r3, #1
   34068:	str	r2, [sp]
   3406c:	add	r1, r4, r1
   34070:	add	r2, r1, #9
   34074:	add	r1, r7, #60	; 0x3c
   34078:	blx	r5
   3407c:	cmp	r0, #0
   34080:	beq	34090 <flatcc_builder_union_vector_push@@Base+0x9c>
   34084:	mov	r0, r6
   34088:	sub	sp, fp, #24
   3408c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   34090:	ldr	r1, [r7, #28]
   34094:	ldr	r0, [r7, #60]	; 0x3c
   34098:	ldr	r3, [r7, #64]	; 0x40
   3409c:	ldr	r2, [r7, #32]
   340a0:	add	r0, r0, r1
   340a4:	sub	r1, r3, r1
   340a8:	mvn	r3, #3
   340ac:	cmn	r1, #4
   340b0:	str	r0, [r7, #16]
   340b4:	movcs	r1, r3
   340b8:	str	r1, [r7, #24]
   340bc:	str	r3, [r2, #4]
   340c0:	adds	r0, r0, r4
   340c4:	movne	r6, r0
   340c8:	strne	r9, [r0]
   340cc:	strne	r8, [r0, #4]
   340d0:	mov	r0, r6
   340d4:	sub	sp, fp, #24
   340d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   340dc:	movw	r0, #53656	; 0xd198
   340e0:	movw	r1, #50550	; 0xc576
   340e4:	movw	r3, #53858	; 0xd262
   340e8:	movw	r2, #1677	; 0x68d
   340ec:	movt	r0, #4
   340f0:	movt	r1, #4
   340f4:	movt	r3, #4
   340f8:	bl	14f44 <__assert_fail@plt>

000340fc <flatcc_builder_append_union_vector@@Base>:
   340fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   34100:	add	fp, sp, #24
   34104:	sub	sp, sp, #8
   34108:	mov	r6, r0
   3410c:	ldr	r0, [r0, #32]
   34110:	mov	r8, r1
   34114:	ldrh	r1, [r0, #14]
   34118:	cmp	r1, #7
   3411c:	bne	34220 <flatcc_builder_append_union_vector@@Base+0x124>
   34120:	ldr	r1, [r0, #20]
   34124:	mov	r5, r2
   34128:	adds	r1, r1, r2
   3412c:	cmpcc	r1, #536870912	; 0x20000000
   34130:	bcc	34154 <flatcc_builder_append_union_vector@@Base+0x58>
   34134:	movw	r0, #54821	; 0xd625
   34138:	movw	r1, #50550	; 0xc576
   3413c:	movw	r3, #54848	; 0xd640
   34140:	mov	r2, #892	; 0x37c
   34144:	movt	r0, #4
   34148:	movt	r1, #4
   3414c:	movt	r3, #4
   34150:	bl	14f44 <__assert_fail@plt>
   34154:	str	r1, [r0, #20]
   34158:	ldr	r4, [r6, #20]
   3415c:	ldr	r0, [r6, #24]
   34160:	add	r1, r4, r5, lsl #3
   34164:	cmp	r1, r0
   34168:	str	r1, [r6, #20]
   3416c:	bcs	34198 <flatcc_builder_append_union_vector@@Base+0x9c>
   34170:	ldr	r0, [r6, #16]
   34174:	adds	r7, r0, r4
   34178:	beq	34210 <flatcc_builder_append_union_vector@@Base+0x114>
   3417c:	lsl	r2, r5, #3
   34180:	mov	r0, r7
   34184:	mov	r1, r8
   34188:	bl	14e60 <memcpy@plt>
   3418c:	mov	r0, r7
   34190:	sub	sp, fp, #24
   34194:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   34198:	ldr	r2, [r6, #28]
   3419c:	ldr	r0, [r6, #40]	; 0x28
   341a0:	ldr	r7, [r6, #48]	; 0x30
   341a4:	mov	r3, #1
   341a8:	str	r3, [sp]
   341ac:	mov	r3, #1
   341b0:	add	r1, r1, r2
   341b4:	add	r2, r1, #1
   341b8:	add	r1, r6, #60	; 0x3c
   341bc:	blx	r7
   341c0:	mov	r7, #0
   341c4:	cmp	r0, #0
   341c8:	beq	341d8 <flatcc_builder_append_union_vector@@Base+0xdc>
   341cc:	mov	r0, r7
   341d0:	sub	sp, fp, #24
   341d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   341d8:	ldr	r1, [r6, #28]
   341dc:	ldr	r0, [r6, #60]	; 0x3c
   341e0:	ldr	r3, [r6, #64]	; 0x40
   341e4:	ldr	r2, [r6, #32]
   341e8:	add	r0, r0, r1
   341ec:	sub	r1, r3, r1
   341f0:	mvn	r3, #3
   341f4:	cmn	r1, #4
   341f8:	str	r0, [r6, #16]
   341fc:	movcs	r1, r3
   34200:	str	r1, [r6, #24]
   34204:	str	r3, [r2, #4]
   34208:	adds	r7, r0, r4
   3420c:	bne	3417c <flatcc_builder_append_union_vector@@Base+0x80>
   34210:	mov	r7, #0
   34214:	mov	r0, r7
   34218:	sub	sp, fp, #24
   3421c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   34220:	movw	r0, #53656	; 0xd198
   34224:	movw	r1, #50550	; 0xc576
   34228:	movw	r3, #53967	; 0xd2cf
   3422c:	movw	r2, #1692	; 0x69c
   34230:	movt	r0, #4
   34234:	movt	r1, #4
   34238:	movt	r3, #4
   3423c:	bl	14f44 <__assert_fail@plt>

00034240 <flatcc_builder_create_string@@Base>:
   34240:	push	{r4, r5, r6, sl, fp, lr}
   34244:	add	fp, sp, #16
   34248:	sub	sp, sp, #80	; 0x50
   3424c:	str	r2, [fp, #-20]	; 0xffffffec
   34250:	mvn	r5, r2
   34254:	mov	r6, r0
   34258:	mov	r3, #1
   3425c:	cmp	r2, #0
   34260:	ldr	ip, [r0, #136]	; 0x88
   34264:	sub	r0, fp, #20
   34268:	str	r0, [sp, #12]
   3426c:	mov	r0, #4
   34270:	str	r0, [sp, #4]
   34274:	str	r0, [sp, #16]
   34278:	str	r3, [sp, #8]
   3427c:	add	r5, ip, r5
   34280:	and	r5, r5, #3
   34284:	add	r5, r5, #1
   34288:	beq	342a4 <flatcc_builder_create_string@@Base+0x64>
   3428c:	mov	r3, #2
   34290:	add	r0, r2, #4
   34294:	str	r1, [sp, #20]
   34298:	str	r2, [sp, #24]
   3429c:	str	r3, [sp, #8]
   342a0:	str	r0, [sp, #4]
   342a4:	movw	r2, #50020	; 0xc364
   342a8:	add	lr, sp, #4
   342ac:	add	r1, r0, r5
   342b0:	add	r0, lr, r3, lsl #3
   342b4:	movt	r2, #4
   342b8:	str	r1, [sp, #4]
   342bc:	cmp	r1, #0
   342c0:	str	r2, [r0, #8]
   342c4:	add	r2, r3, #1
   342c8:	str	r5, [r0, #12]
   342cc:	str	r2, [sp, #8]
   342d0:	ble	34324 <flatcc_builder_create_string@@Base+0xe4>
   342d4:	ldr	r0, [r6, #36]	; 0x24
   342d8:	ldr	r4, [r6, #44]	; 0x2c
   342dc:	sub	r5, ip, r1
   342e0:	str	r1, [sp]
   342e4:	add	r1, lr, #8
   342e8:	mov	r3, r5
   342ec:	blx	r4
   342f0:	cmp	r0, #0
   342f4:	streq	r5, [r6, #136]	; 0x88
   342f8:	moveq	r0, r5
   342fc:	subeq	sp, fp, #16
   34300:	popeq	{r4, r5, r6, sl, fp, pc}
   34304:	movw	r0, #55068	; 0xd71c
   34308:	movw	r1, #50550	; 0xc576
   3430c:	movw	r3, #54747	; 0xd5db
   34310:	movw	r2, #651	; 0x28b
   34314:	movt	r0, #4
   34318:	movt	r1, #4
   3431c:	movt	r3, #4
   34320:	bl	14f44 <__assert_fail@plt>
   34324:	movw	r0, #55068	; 0xd71c
   34328:	movw	r1, #50550	; 0xc576
   3432c:	movw	r3, #54747	; 0xd5db
   34330:	movw	r2, #647	; 0x287
   34334:	movt	r0, #4
   34338:	movt	r1, #4
   3433c:	movt	r3, #4
   34340:	bl	14f44 <__assert_fail@plt>

00034344 <flatcc_builder_create_string_str@@Base>:
   34344:	push	{r4, r5, fp, lr}
   34348:	add	fp, sp, #8
   3434c:	mov	r5, r0
   34350:	mov	r0, r1
   34354:	mov	r4, r1
   34358:	bl	14ecc <strlen@plt>
   3435c:	mov	r2, r0
   34360:	mov	r0, r5
   34364:	mov	r1, r4
   34368:	pop	{r4, r5, fp, lr}
   3436c:	b	34240 <flatcc_builder_create_string@@Base>

00034370 <flatcc_builder_create_string_strn@@Base>:
   34370:	push	{r4, r5, r6, sl, fp, lr}
   34374:	add	fp, sp, #16
   34378:	mov	r6, r0
   3437c:	mov	r5, r1
   34380:	mov	r0, r1
   34384:	mov	r1, #0
   34388:	mov	r4, r2
   3438c:	bl	14f14 <memchr@plt>
   34390:	cmp	r0, #0
   34394:	mov	r1, r5
   34398:	subne	r4, r0, r5
   3439c:	mov	r0, r6
   343a0:	mov	r2, r4
   343a4:	pop	{r4, r5, r6, sl, fp, lr}
   343a8:	b	34240 <flatcc_builder_create_string@@Base>

000343ac <flatcc_builder_end_string@@Base>:
   343ac:	push	{r4, r5, fp, lr}
   343b0:	add	fp, sp, #8
   343b4:	mov	r4, r0
   343b8:	ldr	r0, [r0, #32]
   343bc:	ldrh	r1, [r0, #14]
   343c0:	cmp	r1, #6
   343c4:	bne	3446c <flatcc_builder_end_string@@Base+0xc0>
   343c8:	ldr	r2, [r0, #20]
   343cc:	ldr	r0, [r4, #20]
   343d0:	cmp	r2, r0
   343d4:	bne	3448c <flatcc_builder_end_string@@Base+0xe0>
   343d8:	ldr	r1, [r4, #16]
   343dc:	mov	r0, r4
   343e0:	bl	34240 <flatcc_builder_create_string@@Base>
   343e4:	mov	r5, r0
   343e8:	cmp	r0, #0
   343ec:	beq	34464 <flatcc_builder_end_string@@Base+0xb8>
   343f0:	ldr	r0, [r4, #16]
   343f4:	ldr	r2, [r4, #20]
   343f8:	mov	r1, #0
   343fc:	bl	14ef0 <memset@plt>
   34400:	ldr	r0, [r4, #32]
   34404:	ldr	r1, [r4, #60]	; 0x3c
   34408:	ldr	ip, [r4, #64]	; 0x40
   3440c:	ldr	r3, [r0, #8]
   34410:	str	r3, [r4, #20]
   34414:	ldr	r3, [r0]
   34418:	str	r3, [r4, #28]
   3441c:	add	r1, r1, r3
   34420:	ldr	r2, [r0, #4]
   34424:	str	r1, [r4, #16]
   34428:	sub	r1, ip, r3
   3442c:	cmp	r1, r2
   34430:	movhi	r1, r2
   34434:	str	r1, [r4, #24]
   34438:	ldrh	r1, [r4, #130]	; 0x82
   3443c:	ldrh	r2, [r4, #128]	; 0x80
   34440:	cmp	r2, r1
   34444:	strhcc	r1, [r4, #128]	; 0x80
   34448:	ldrh	r1, [r0, #12]
   3444c:	sub	r0, r0, #36	; 0x24
   34450:	str	r0, [r4, #32]
   34454:	strh	r1, [r4, #130]	; 0x82
   34458:	ldr	r0, [r4, #156]	; 0x9c
   3445c:	sub	r0, r0, #1
   34460:	str	r0, [r4, #156]	; 0x9c
   34464:	mov	r0, r5
   34468:	pop	{r4, r5, fp, pc}
   3446c:	movw	r0, #51867	; 0xca9b
   34470:	movw	r1, #50550	; 0xc576
   34474:	movw	r3, #54094	; 0xd34e
   34478:	movw	r2, #1732	; 0x6c4
   3447c:	movt	r0, #4
   34480:	movt	r1, #4
   34484:	movt	r3, #4
   34488:	bl	14f44 <__assert_fail@plt>
   3448c:	movw	r0, #54161	; 0xd391
   34490:	movw	r1, #50550	; 0xc576
   34494:	movw	r3, #54094	; 0xd34e
   34498:	movw	r2, #1733	; 0x6c5
   3449c:	movt	r0, #4
   344a0:	movt	r1, #4
   344a4:	movt	r3, #4
   344a8:	bl	14f44 <__assert_fail@plt>

000344ac <flatcc_builder_string_edit@@Base>:
   344ac:	ldr	r0, [r0, #16]
   344b0:	bx	lr

000344b4 <flatcc_builder_string_len@@Base>:
   344b4:	ldr	r0, [r0, #32]
   344b8:	ldr	r0, [r0, #20]
   344bc:	bx	lr

000344c0 <flatcc_builder_table_edit@@Base>:
   344c0:	ldr	r2, [r0, #32]
   344c4:	ldrh	r2, [r2, #14]
   344c8:	cmp	r2, #3
   344cc:	ldreq	r2, [r0, #16]
   344d0:	ldreq	r0, [r0, #20]
   344d4:	addeq	r0, r2, r0
   344d8:	subeq	r0, r0, r1
   344dc:	bxeq	lr
   344e0:	push	{fp, lr}
   344e4:	mov	fp, sp
   344e8:	movw	r0, #52619	; 0xcd8b
   344ec:	movw	r1, #50550	; 0xc576
   344f0:	movw	r3, #54339	; 0xd443
   344f4:	movw	r2, #1794	; 0x702
   344f8:	movt	r0, #4
   344fc:	movt	r1, #4
   34500:	movt	r3, #4
   34504:	bl	14f44 <__assert_fail@plt>

00034508 <flatcc_builder_table_add_copy@@Base>:
   34508:	push	{r4, r5, r6, sl, fp, lr}
   3450c:	add	fp, sp, #16
   34510:	mov	r4, r3
   34514:	ldr	r3, [fp, #8]
   34518:	mov	r5, r2
   3451c:	mov	r2, r4
   34520:	bl	33604 <flatcc_builder_table_add@@Base>
   34524:	mov	r6, r0
   34528:	cmp	r0, #0
   3452c:	beq	34540 <flatcc_builder_table_add_copy@@Base+0x38>
   34530:	mov	r0, r6
   34534:	mov	r1, r5
   34538:	mov	r2, r4
   3453c:	bl	14e60 <memcpy@plt>
   34540:	mov	r0, r6
   34544:	pop	{r4, r5, r6, sl, fp, pc}

00034548 <flatcc_builder_push_buffer_alignment@@Base>:
   34548:	ldrh	r1, [r0, #128]	; 0x80
   3454c:	mov	r2, #4
   34550:	strh	r2, [r0, #128]	; 0x80
   34554:	mov	r0, r1
   34558:	bx	lr

0003455c <flatcc_builder_pop_buffer_alignment@@Base>:
   3455c:	ldrh	r2, [r0, #128]	; 0x80
   34560:	cmp	r2, r1
   34564:	strhcc	r1, [r0, #128]	; 0x80
   34568:	bx	lr

0003456c <flatcc_builder_get_buffer_alignment@@Base>:
   3456c:	ldrh	r0, [r0, #128]	; 0x80
   34570:	bx	lr

00034574 <flatcc_builder_set_vtable_clustering@@Base>:
   34574:	clz	r1, r1
   34578:	lsr	r1, r1, #5
   3457c:	str	r1, [r0, #180]	; 0xb4
   34580:	bx	lr

00034584 <flatcc_builder_set_block_align@@Base>:
   34584:	strh	r1, [r0, #132]	; 0x84
   34588:	bx	lr

0003458c <flatcc_builder_get_level@@Base>:
   3458c:	ldr	r0, [r0, #156]	; 0x9c
   34590:	bx	lr

00034594 <flatcc_builder_set_max_level@@Base>:
   34594:	str	r1, [r0, #176]	; 0xb0
   34598:	ldr	r2, [r0, #160]	; 0xa0
   3459c:	cmp	r2, r1
   345a0:	strlt	r1, [r0, #160]	; 0xa0
   345a4:	bx	lr

000345a8 <flatcc_builder_get_buffer_size@@Base>:
   345a8:	ldr	r1, [r0, #136]	; 0x88
   345ac:	ldr	r0, [r0, #140]	; 0x8c
   345b0:	sub	r0, r0, r1
   345b4:	bx	lr

000345b8 <flatcc_builder_get_buffer_start@@Base>:
   345b8:	ldr	r0, [r0, #136]	; 0x88
   345bc:	bx	lr

000345c0 <flatcc_builder_get_buffer_end@@Base>:
   345c0:	ldr	r0, [r0, #140]	; 0x8c
   345c4:	bx	lr

000345c8 <flatcc_builder_set_vtable_cache_limit@@Base>:
   345c8:	str	r1, [r0, #172]	; 0xac
   345cc:	bx	lr

000345d0 <flatcc_builder_set_identifier@@Base>:
   345d0:	movw	r2, #50020	; 0xc364
   345d4:	cmp	r1, #0
   345d8:	movt	r2, #4
   345dc:	movne	r2, r1
   345e0:	ldr	r1, [r2]
   345e4:	str	r1, [r0, #168]	; 0xa8
   345e8:	bx	lr

000345ec <flatcc_builder_get_type@@Base>:
   345ec:	ldr	r0, [r0, #32]
   345f0:	cmp	r0, #0
   345f4:	ldrhne	r0, [r0, #14]
   345f8:	moveq	r0, #0
   345fc:	bx	lr

00034600 <flatcc_builder_get_type_at@@Base>:
   34600:	mov	r2, r0
   34604:	cmp	r1, #1
   34608:	mov	r0, #0
   3460c:	ldrge	r3, [r2, #156]	; 0x9c
   34610:	cmpge	r3, r1
   34614:	bge	3461c <flatcc_builder_get_type_at@@Base+0x1c>
   34618:	bx	lr
   3461c:	sub	r0, r1, r3
   34620:	ldr	r1, [r2, #32]
   34624:	add	r0, r0, r0, lsl #3
   34628:	add	r0, r1, r0, lsl #2
   3462c:	ldrh	r0, [r0, #14]
   34630:	bx	lr

00034634 <flatcc_builder_get_direct_buffer@@Base>:
   34634:	ldr	r2, [r0, #184]	; 0xb8
   34638:	cmp	r2, #0
   3463c:	beq	34668 <flatcc_builder_get_direct_buffer@@Base+0x34>
   34640:	ldr	r2, [r0, #188]	; 0xbc
   34644:	ldr	r3, [r0, #192]	; 0xc0
   34648:	cmp	r2, r3
   3464c:	beq	34680 <flatcc_builder_get_direct_buffer@@Base+0x4c>
   34650:	cmp	r1, #0
   34654:	moveq	r0, #0
   34658:	bxeq	lr
   3465c:	mov	r0, #0
   34660:	str	r0, [r1]
   34664:	bx	lr
   34668:	cmp	r1, #0
   3466c:	moveq	r0, #0
   34670:	bxeq	lr
   34674:	mov	r0, #0
   34678:	str	r0, [r1]
   3467c:	bx	lr
   34680:	cmp	r1, #0
   34684:	ldrne	r2, [r0, #212]	; 0xd4
   34688:	strne	r2, [r1]
   3468c:	ldr	r0, [r0, #196]	; 0xc4
   34690:	bx	lr

00034694 <flatcc_builder_copy_buffer@@Base>:
   34694:	push	{fp, lr}
   34698:	mov	fp, sp
   3469c:	ldr	r3, [r0, #184]	; 0xb8
   346a0:	cmp	r3, #0
   346a4:	beq	346d8 <flatcc_builder_copy_buffer@@Base+0x44>
   346a8:	add	r0, r0, #188	; 0xbc
   346ac:	bl	34dec <flatcc_emitter_copy_buffer@@Base>
   346b0:	cmp	r0, #0
   346b4:	popne	{fp, pc}
   346b8:	movw	r0, #34967	; 0x8897
   346bc:	movw	r1, #50550	; 0xc576
   346c0:	movw	r3, #54478	; 0xd4ce
   346c4:	movw	r2, #1926	; 0x786
   346c8:	movt	r0, #4
   346cc:	movt	r1, #4
   346d0:	movt	r3, #4
   346d4:	bl	14f44 <__assert_fail@plt>
   346d8:	mov	r0, #0
   346dc:	pop	{fp, pc}

000346e0 <flatcc_builder_finalize_buffer@@Base>:
   346e0:	push	{r4, r5, r6, sl, fp, lr}
   346e4:	add	fp, sp, #16
   346e8:	mov	r5, r0
   346ec:	ldr	r0, [r0, #136]	; 0x88
   346f0:	cmp	r1, #0
   346f4:	ldr	r2, [r5, #140]	; 0x8c
   346f8:	sub	r4, r2, r0
   346fc:	mov	r0, r4
   34700:	strne	r4, [r1]
   34704:	bl	14ea8 <malloc@plt>
   34708:	cmp	r0, #0
   3470c:	beq	3475c <flatcc_builder_finalize_buffer@@Base+0x7c>
   34710:	mov	r6, r0
   34714:	ldr	r0, [r5, #184]	; 0xb8
   34718:	cmp	r0, #0
   3471c:	beq	3477c <flatcc_builder_finalize_buffer@@Base+0x9c>
   34720:	add	r0, r5, #188	; 0xbc
   34724:	mov	r1, r6
   34728:	mov	r2, r4
   3472c:	bl	34dec <flatcc_emitter_copy_buffer@@Base>
   34730:	cmp	r0, #0
   34734:	movne	r0, r6
   34738:	popne	{r4, r5, r6, sl, fp, pc}
   3473c:	movw	r0, #34967	; 0x8897
   34740:	movw	r1, #50550	; 0xc576
   34744:	movw	r3, #54478	; 0xd4ce
   34748:	movw	r2, #1926	; 0x786
   3474c:	movt	r0, #4
   34750:	movt	r1, #4
   34754:	movt	r3, #4
   34758:	bl	14f44 <__assert_fail@plt>
   3475c:	movw	r0, #55068	; 0xd71c
   34760:	movw	r1, #50550	; 0xc576
   34764:	movw	r3, #54547	; 0xd513
   34768:	movw	r2, #1944	; 0x798
   3476c:	movt	r0, #4
   34770:	movt	r1, #4
   34774:	movt	r3, #4
   34778:	bl	14f44 <__assert_fail@plt>
   3477c:	movw	r0, #55068	; 0xd71c
   34780:	movw	r1, #50550	; 0xc576
   34784:	movw	r3, #54547	; 0xd513
   34788:	movw	r2, #1948	; 0x79c
   3478c:	movt	r0, #4
   34790:	movt	r1, #4
   34794:	movt	r3, #4
   34798:	bl	14f44 <__assert_fail@plt>

0003479c <flatcc_builder_finalize_aligned_buffer@@Base>:
   3479c:	push	{r4, r5, r6, r7, fp, lr}
   347a0:	add	fp, sp, #16
   347a4:	sub	sp, sp, #8
   347a8:	mov	r5, r0
   347ac:	mov	r4, r1
   347b0:	ldr	r0, [r0, #136]	; 0x88
   347b4:	ldr	r1, [r5, #140]	; 0x8c
   347b8:	cmp	r4, #0
   347bc:	sub	r0, r1, r0
   347c0:	mov	r1, #0
   347c4:	strne	r0, [r4]
   347c8:	ldrh	r2, [r5, #128]	; 0x80
   347cc:	str	r1, [sp, #4]
   347d0:	add	r0, r0, r2
   347d4:	cmp	r2, #4
   347d8:	mov	r1, r2
   347dc:	rsb	r2, r2, #0
   347e0:	sub	r0, r0, #1
   347e4:	movls	r1, #4
   347e8:	and	r7, r0, r2
   347ec:	add	r0, sp, #4
   347f0:	mov	r2, r7
   347f4:	bl	14ee4 <posix_memalign@plt>
   347f8:	ldr	r6, [sp, #4]
   347fc:	cmp	r0, #0
   34800:	cmpne	r6, #0
   34804:	bne	34840 <flatcc_builder_finalize_aligned_buffer@@Base+0xa4>
   34808:	cmp	r6, #0
   3480c:	beq	34848 <flatcc_builder_finalize_aligned_buffer@@Base+0xac>
   34810:	ldr	r0, [r5, #184]	; 0xb8
   34814:	cmp	r0, #0
   34818:	beq	34840 <flatcc_builder_finalize_aligned_buffer@@Base+0xa4>
   3481c:	add	r0, r5, #188	; 0xbc
   34820:	mov	r1, r6
   34824:	mov	r2, r7
   34828:	bl	34dec <flatcc_emitter_copy_buffer@@Base>
   3482c:	cmp	r0, #0
   34830:	beq	34860 <flatcc_builder_finalize_aligned_buffer@@Base+0xc4>
   34834:	mov	r0, r6
   34838:	sub	sp, fp, #16
   3483c:	pop	{r4, r5, r6, r7, fp, pc}
   34840:	mov	r0, r6
   34844:	bl	14e54 <free@plt>
   34848:	mov	r6, #0
   3484c:	cmp	r4, #0
   34850:	strne	r6, [r4]
   34854:	mov	r0, r6
   34858:	sub	sp, fp, #16
   3485c:	pop	{r4, r5, r6, r7, fp, pc}
   34860:	movw	r0, #34967	; 0x8897
   34864:	movw	r1, #50550	; 0xc576
   34868:	movw	r3, #54478	; 0xd4ce
   3486c:	movw	r2, #1926	; 0x786
   34870:	movt	r0, #4
   34874:	movt	r1, #4
   34878:	movt	r3, #4
   3487c:	bl	14f44 <__assert_fail@plt>

00034880 <flatcc_builder_aligned_alloc@@Base>:
   34880:	push	{fp, lr}
   34884:	mov	fp, sp
   34888:	sub	sp, sp, #8
   3488c:	mov	r2, r1
   34890:	mov	r1, r0
   34894:	mov	r0, #0
   34898:	cmp	r1, #4
   3489c:	str	r0, [sp, #4]
   348a0:	add	r0, sp, #4
   348a4:	movls	r1, #4
   348a8:	bl	14ee4 <posix_memalign@plt>
   348ac:	mov	r1, r0
   348b0:	ldr	r0, [sp, #4]
   348b4:	cmp	r1, #0
   348b8:	cmpne	r0, #0
   348bc:	bne	348c8 <flatcc_builder_aligned_alloc@@Base+0x48>
   348c0:	mov	sp, fp
   348c4:	pop	{fp, pc}
   348c8:	bl	14e54 <free@plt>
   348cc:	mov	r0, #0
   348d0:	str	r0, [sp, #4]
   348d4:	mov	sp, fp
   348d8:	pop	{fp, pc}

000348dc <flatcc_builder_aligned_free@@Base>:
   348dc:	b	14e54 <free@plt>

000348e0 <flatcc_builder_get_emit_context@@Base>:
   348e0:	ldr	r0, [r0, #36]	; 0x24
   348e4:	bx	lr

000348e8 <flatcc_emitter_recycle_page@@Base>:
   348e8:	ldr	r3, [r0]
   348ec:	mov	r2, r0
   348f0:	mvn	r0, #0
   348f4:	cmp	r3, r1
   348f8:	ldrne	r2, [r2, #4]
   348fc:	cmpne	r2, r1
   34900:	bne	34908 <flatcc_emitter_recycle_page@@Base+0x20>
   34904:	bx	lr
   34908:	ldr	r0, [r1, #2944]	; 0xb80
   3490c:	ldr	r2, [r1, #2948]	; 0xb84
   34910:	str	r2, [r0, #2948]	; 0xb84
   34914:	ldr	r2, [r1, #2948]	; 0xb84
   34918:	str	r0, [r2, #2944]	; 0xb80
   3491c:	ldr	r0, [r3, #2948]	; 0xb84
   34920:	str	r3, [r1, #2944]	; 0xb80
   34924:	str	r0, [r1, #2948]	; 0xb84
   34928:	str	r1, [r0, #2944]	; 0xb80
   3492c:	ldr	r0, [r1, #2944]	; 0xb80
   34930:	str	r1, [r0, #2948]	; 0xb84
   34934:	mov	r0, #0
   34938:	bx	lr

0003493c <flatcc_emitter_reset@@Base>:
   3493c:	push	{r4, sl, fp, lr}
   34940:	add	fp, sp, #8
   34944:	ldr	r1, [r0]
   34948:	cmp	r1, #0
   3494c:	beq	34a04 <flatcc_emitter_reset@@Base+0xc8>
   34950:	mov	r4, r0
   34954:	add	r2, r1, #1472	; 0x5c0
   34958:	mov	r0, #1472	; 0x5c0
   3495c:	mov	r3, #0
   34960:	stmib	r4, {r1, r2}
   34964:	str	r0, [r4, #12]
   34968:	str	r2, [r4, #16]
   3496c:	str	r0, [r4, #20]
   34970:	movw	r0, #64064	; 0xfa40
   34974:	movt	r0, #65535	; 0xffff
   34978:	str	r0, [r1, #2952]	; 0xb88
   3497c:	ldr	r2, [r4, #32]
   34980:	ldr	r0, [r4, #24]
   34984:	cmp	r2, #0
   34988:	moveq	r2, r0
   3498c:	streq	r0, [r4, #32]
   34990:	str	r3, [r4, #24]
   34994:	add	r2, r2, r2, lsl #1
   34998:	lsr	r2, r2, #2
   3499c:	add	r0, r2, r0, lsr #2
   349a0:	str	r0, [r4, #32]
   349a4:	ldr	r2, [r4, #28]
   349a8:	cmp	r2, r0, lsl #1
   349ac:	bls	34a04 <flatcc_emitter_reset@@Base+0xc8>
   349b0:	mov	r2, r1
   349b4:	ldr	r0, [r2, #2944]!	; 0xb80
   349b8:	cmp	r0, r1
   349bc:	beq	34a04 <flatcc_emitter_reset@@Base+0xc8>
   349c0:	ldr	r3, [r0, #2944]	; 0xb80
   349c4:	str	r3, [r2]
   349c8:	ldr	r2, [r0, #2944]	; 0xb80
   349cc:	str	r1, [r2, #2948]	; 0xb84
   349d0:	bl	14e54 <free@plt>
   349d4:	ldr	r0, [r4, #28]
   349d8:	ldr	r1, [r4, #32]
   349dc:	sub	r0, r0, #2944	; 0xb80
   349e0:	cmp	r0, r1, lsl #1
   349e4:	str	r0, [r4, #28]
   349e8:	popls	{r4, sl, fp, pc}
   349ec:	ldr	r1, [r4, #4]
   349f0:	ldr	r3, [r4]
   349f4:	mov	r2, r1
   349f8:	ldr	r0, [r2, #2944]!	; 0xb80
   349fc:	cmp	r0, r3
   34a00:	bne	349c0 <flatcc_emitter_reset@@Base+0x84>
   34a04:	pop	{r4, sl, fp, pc}

00034a08 <flatcc_emitter_clear@@Base>:
   34a08:	push	{r4, r5, r6, sl, fp, lr}
   34a0c:	add	fp, sp, #16
   34a10:	ldr	r5, [r0]
   34a14:	cmp	r5, #0
   34a18:	popeq	{r4, r5, r6, sl, fp, pc}
   34a1c:	mov	r4, r0
   34a20:	ldr	r0, [r5, #2948]	; 0xb84
   34a24:	mov	r6, #0
   34a28:	str	r6, [r0, #2944]	; 0xb80
   34a2c:	ldr	r0, [r5, #2944]	; 0xb80
   34a30:	cmp	r0, #0
   34a34:	beq	34a50 <flatcc_emitter_clear@@Base+0x48>
   34a38:	mov	r5, r0
   34a3c:	ldr	r0, [r0, #2948]	; 0xb84
   34a40:	bl	14e54 <free@plt>
   34a44:	ldr	r0, [r5, #2944]	; 0xb80
   34a48:	cmp	r0, #0
   34a4c:	bne	34a38 <flatcc_emitter_clear@@Base+0x30>
   34a50:	mov	r0, r5
   34a54:	bl	14e54 <free@plt>
   34a58:	vmov.i32	q8, #0	; 0x00000000
   34a5c:	add	r0, r4, #16
   34a60:	vst1.32	{d16-d17}, [r0]
   34a64:	mov	r0, #32
   34a68:	vst1.32	{d16-d17}, [r4], r0
   34a6c:	str	r6, [r4]
   34a70:	pop	{r4, r5, r6, sl, fp, pc}

00034a74 <flatcc_emitter@@Base>:
   34a74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34a78:	add	fp, sp, #28
   34a7c:	sub	sp, sp, #4
   34a80:	mov	r6, r0
   34a84:	mov	r7, r1
   34a88:	ldr	r0, [r0, #24]
   34a8c:	ldr	r1, [fp, #8]
   34a90:	mov	r4, r2
   34a94:	cmn	r3, #1
   34a98:	mov	r9, r6
   34a9c:	add	r0, r0, r1
   34aa0:	str	r0, [r6, #24]
   34aa4:	ble	34bf0 <flatcc_emitter@@Base+0x17c>
   34aa8:	ldr	r0, [r9, #20]!
   34aac:	cmp	r0, r1
   34ab0:	bcs	34d70 <flatcc_emitter@@Base+0x2fc>
   34ab4:	mov	r8, #0
   34ab8:	cmp	r4, #0
   34abc:	beq	34dd0 <flatcc_emitter@@Base+0x35c>
   34ac0:	movw	sl, #64064	; 0xfa40
   34ac4:	movt	sl, #65535	; 0xffff
   34ac8:	ldr	r8, [r7, #4]
   34acc:	cmp	r8, #0
   34ad0:	beq	34bd4 <flatcc_emitter@@Base+0x160>
   34ad4:	ldr	r9, [r7]
   34ad8:	cmp	r8, r0
   34adc:	mov	r5, r8
   34ae0:	bls	34ba0 <flatcc_emitter@@Base+0x12c>
   34ae4:	mov	r5, r0
   34ae8:	cmp	r5, #0
   34aec:	bne	34ba0 <flatcc_emitter@@Base+0x12c>
   34af0:	ldr	r5, [r6, #4]
   34af4:	cmp	r5, #0
   34af8:	beq	34b0c <flatcc_emitter@@Base+0x98>
   34afc:	ldr	r0, [r5, #2944]	; 0xb80
   34b00:	ldr	r1, [r6]
   34b04:	cmp	r0, r1
   34b08:	bne	34b44 <flatcc_emitter@@Base+0xd0>
   34b0c:	movw	r0, #2956	; 0xb8c
   34b10:	bl	14ea8 <malloc@plt>
   34b14:	cmp	r0, #0
   34b18:	beq	34d80 <flatcc_emitter@@Base+0x30c>
   34b1c:	ldr	r1, [r6, #28]
   34b20:	cmp	r5, #0
   34b24:	add	r1, r1, #2944	; 0xb80
   34b28:	str	r1, [r6, #28]
   34b2c:	beq	34b70 <flatcc_emitter@@Base+0xfc>
   34b30:	ldr	r1, [r6]
   34b34:	str	r1, [r0, #2944]	; 0xb80
   34b38:	str	r5, [r0, #2948]	; 0xb84
   34b3c:	str	r0, [r1, #2948]	; 0xb84
   34b40:	str	r0, [r5, #2944]	; 0xb80
   34b44:	mov	r5, #2944	; 0xb80
   34b48:	str	r0, [r6, #4]
   34b4c:	str	r0, [r6, #16]
   34b50:	str	r5, [r6, #20]
   34b54:	ldr	r1, [r0, #2948]	; 0xb84
   34b58:	ldr	r1, [r1, #2952]	; 0xb88
   34b5c:	add	r1, r1, #2944	; 0xb80
   34b60:	str	r1, [r0, #2952]	; 0xb88
   34b64:	cmp	r8, r5
   34b68:	bhi	34ae8 <flatcc_emitter@@Base+0x74>
   34b6c:	b	34b9c <flatcc_emitter@@Base+0x128>
   34b70:	add	r1, r0, #1472	; 0x5c0
   34b74:	mov	r5, #1472	; 0x5c0
   34b78:	str	r0, [r6]
   34b7c:	stmib	r6, {r0, r1, r5}
   34b80:	str	r1, [r6, #16]
   34b84:	str	r5, [r6, #20]
   34b88:	str	r0, [r0, #2944]	; 0xb80
   34b8c:	str	r0, [r0, #2948]	; 0xb84
   34b90:	str	sl, [r0, #2952]	; 0xb88
   34b94:	cmp	r8, r5
   34b98:	bhi	34ae8 <flatcc_emitter@@Base+0x74>
   34b9c:	mov	r5, r8
   34ba0:	ldr	r0, [r6, #16]
   34ba4:	mov	r1, r9
   34ba8:	mov	r2, r5
   34bac:	bl	14e60 <memcpy@plt>
   34bb0:	ldr	r0, [r6, #16]
   34bb4:	ldr	r1, [r6, #20]
   34bb8:	add	r9, r9, r5
   34bbc:	subs	r8, r8, r5
   34bc0:	add	r2, r0, r5
   34bc4:	sub	r0, r1, r5
   34bc8:	str	r2, [r6, #16]
   34bcc:	str	r0, [r6, #20]
   34bd0:	bne	34ad8 <flatcc_emitter@@Base+0x64>
   34bd4:	subs	r4, r4, #1
   34bd8:	add	r7, r7, #8
   34bdc:	bne	34ac8 <flatcc_emitter@@Base+0x54>
   34be0:	mov	r8, #0
   34be4:	mov	r0, r8
   34be8:	sub	sp, fp, #28
   34bec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34bf0:	ldr	r0, [r9, #12]!
   34bf4:	cmp	r0, r1
   34bf8:	bcs	34d90 <flatcc_emitter@@Base+0x31c>
   34bfc:	mov	r8, #0
   34c00:	cmp	r4, #0
   34c04:	beq	34dd0 <flatcc_emitter@@Base+0x35c>
   34c08:	add	r0, r7, r4, lsl #3
   34c0c:	movw	sl, #2952	; 0xb88
   34c10:	ldr	r8, [r0, #-4]
   34c14:	sub	r1, r0, #8
   34c18:	str	r1, [sp]
   34c1c:	cmp	r8, #0
   34c20:	beq	34d54 <flatcc_emitter@@Base+0x2e0>
   34c24:	ldr	r0, [sp]
   34c28:	ldr	r0, [r0]
   34c2c:	add	r7, r0, r8
   34c30:	ldr	r1, [r9]
   34c34:	cmp	r8, r1
   34c38:	bhi	34c68 <flatcc_emitter@@Base+0x1f4>
   34c3c:	b	34d24 <flatcc_emitter@@Base+0x2b0>
   34c40:	add	r3, r0, #2944	; 0xb80
   34c44:	mov	r1, #2944	; 0xb80
   34c48:	str	r3, [r6, #8]
   34c4c:	str	r1, [r6, #12]
   34c50:	ldr	r0, [r0, #2944]	; 0xb80
   34c54:	ldr	r0, [r0, #2952]	; 0xb88
   34c58:	sub	r0, r0, #2944	; 0xb80
   34c5c:	str	r0, [r2]
   34c60:	cmp	r8, r1
   34c64:	bls	34d24 <flatcc_emitter@@Base+0x2b0>
   34c68:	cmp	r1, #0
   34c6c:	mov	r5, r1
   34c70:	bne	34d28 <flatcc_emitter@@Base+0x2b4>
   34c74:	ldr	r5, [r6]
   34c78:	cmp	r5, #0
   34c7c:	beq	34ca8 <flatcc_emitter@@Base+0x234>
   34c80:	ldr	r0, [r5, #2948]	; 0xb84
   34c84:	ldr	r1, [r6, #4]
   34c88:	cmp	r0, r1
   34c8c:	beq	34ca8 <flatcc_emitter@@Base+0x234>
   34c90:	ldr	r1, [r5, #2952]	; 0xb88
   34c94:	mov	r2, r0
   34c98:	sub	r1, r1, #2944	; 0xb80
   34c9c:	str	r1, [r2, #2952]!	; 0xb88
   34ca0:	str	r0, [r6]
   34ca4:	b	34c40 <flatcc_emitter@@Base+0x1cc>
   34ca8:	movw	r0, #2956	; 0xb8c
   34cac:	bl	14ea8 <malloc@plt>
   34cb0:	cmp	r0, #0
   34cb4:	beq	34ddc <flatcc_emitter@@Base+0x368>
   34cb8:	ldr	r1, [r6, #28]
   34cbc:	cmp	r5, #0
   34cc0:	add	r1, r1, #2944	; 0xb80
   34cc4:	str	r1, [r6, #28]
   34cc8:	beq	34cec <flatcc_emitter@@Base+0x278>
   34ccc:	ldr	r1, [r6, #4]
   34cd0:	add	r2, r0, sl
   34cd4:	str	r5, [r0, #2944]	; 0xb80
   34cd8:	str	r1, [r0, #2948]	; 0xb84
   34cdc:	str	r0, [r5, #2948]	; 0xb84
   34ce0:	str	r0, [r1, #2944]	; 0xb80
   34ce4:	str	r0, [r6]
   34ce8:	b	34c40 <flatcc_emitter@@Base+0x1cc>
   34cec:	add	r2, r0, #1472	; 0x5c0
   34cf0:	mov	r1, #1472	; 0x5c0
   34cf4:	str	r0, [r6]
   34cf8:	stmib	r6, {r0, r2}
   34cfc:	str	r1, [r6, #12]
   34d00:	str	r2, [r6, #16]
   34d04:	movw	r2, #64064	; 0xfa40
   34d08:	str	r1, [r6, #20]
   34d0c:	str	r0, [r0, #2944]	; 0xb80
   34d10:	str	r0, [r0, #2948]	; 0xb84
   34d14:	movt	r2, #65535	; 0xffff
   34d18:	str	r2, [r0, #2952]	; 0xb88
   34d1c:	cmp	r8, r1
   34d20:	bhi	34c68 <flatcc_emitter@@Base+0x1f4>
   34d24:	mov	r5, r8
   34d28:	sub	r0, r1, r5
   34d2c:	sub	r7, r7, r5
   34d30:	mov	r2, r5
   34d34:	str	r0, [r6, #12]
   34d38:	mov	r1, r7
   34d3c:	ldr	r0, [r6, #8]
   34d40:	sub	r0, r0, r5
   34d44:	str	r0, [r6, #8]
   34d48:	bl	14e60 <memcpy@plt>
   34d4c:	subs	r8, r8, r5
   34d50:	bne	34c30 <flatcc_emitter@@Base+0x1bc>
   34d54:	ldr	r0, [sp]
   34d58:	subs	r4, r4, #1
   34d5c:	bne	34c10 <flatcc_emitter@@Base+0x19c>
   34d60:	mov	r8, #0
   34d64:	mov	r0, r8
   34d68:	sub	sp, fp, #28
   34d6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34d70:	ldr	r5, [r6, #16]
   34d74:	add	r2, r5, r1
   34d78:	str	r2, [r6, #16]
   34d7c:	b	34d9c <flatcc_emitter@@Base+0x328>
   34d80:	mvn	r8, #0
   34d84:	mov	r0, r8
   34d88:	sub	sp, fp, #28
   34d8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34d90:	ldr	r2, [r6, #8]
   34d94:	sub	r5, r2, r1
   34d98:	str	r5, [r6, #8]
   34d9c:	sub	r0, r0, r1
   34da0:	mov	r8, #0
   34da4:	cmp	r4, #0
   34da8:	str	r0, [r9]
   34dac:	beq	34dd0 <flatcc_emitter@@Base+0x35c>
   34db0:	ldm	r7, {r1, r2}
   34db4:	mov	r0, r5
   34db8:	bl	14e60 <memcpy@plt>
   34dbc:	ldr	r0, [r7, #4]
   34dc0:	add	r7, r7, #8
   34dc4:	subs	r4, r4, #1
   34dc8:	add	r5, r5, r0
   34dcc:	bne	34db0 <flatcc_emitter@@Base+0x33c>
   34dd0:	mov	r0, r8
   34dd4:	sub	sp, fp, #28
   34dd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34ddc:	mvn	r8, #0
   34de0:	mov	r0, r8
   34de4:	sub	sp, fp, #28
   34de8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00034dec <flatcc_emitter_copy_buffer@@Base>:
   34dec:	push	{r4, r5, r6, sl, fp, lr}
   34df0:	add	fp, sp, #16
   34df4:	mov	r3, r2
   34df8:	ldr	r2, [r0, #24]
   34dfc:	mov	r5, #0
   34e00:	cmp	r2, r3
   34e04:	bhi	34e8c <flatcc_emitter_copy_buffer@@Base+0xa0>
   34e08:	mov	r4, r0
   34e0c:	ldr	r0, [r0]
   34e10:	cmp	r0, #0
   34e14:	beq	34e8c <flatcc_emitter_copy_buffer@@Base+0xa0>
   34e18:	mov	r6, r1
   34e1c:	ldr	r1, [r4, #4]
   34e20:	cmp	r0, r1
   34e24:	beq	34e94 <flatcc_emitter_copy_buffer@@Base+0xa8>
   34e28:	ldr	r0, [r4, #12]
   34e2c:	ldr	r1, [r4, #8]
   34e30:	rsb	r5, r0, #2944	; 0xb80
   34e34:	mov	r0, r6
   34e38:	mov	r2, r5
   34e3c:	bl	14e60 <memcpy@plt>
   34e40:	ldm	r4, {r0, r1}
   34e44:	add	r5, r6, r5
   34e48:	ldr	r6, [r0, #2944]	; 0xb80
   34e4c:	cmp	r6, r1
   34e50:	beq	34e78 <flatcc_emitter_copy_buffer@@Base+0x8c>
   34e54:	mov	r0, r5
   34e58:	mov	r1, r6
   34e5c:	mov	r2, #2944	; 0xb80
   34e60:	bl	14e60 <memcpy@plt>
   34e64:	ldr	r6, [r6, #2944]	; 0xb80
   34e68:	ldr	r0, [r4, #4]
   34e6c:	add	r5, r5, #2944	; 0xb80
   34e70:	cmp	r6, r0
   34e74:	bne	34e54 <flatcc_emitter_copy_buffer@@Base+0x68>
   34e78:	ldr	r0, [r4, #20]
   34e7c:	mov	r1, r6
   34e80:	rsb	r2, r0, #2944	; 0xb80
   34e84:	mov	r0, r5
   34e88:	bl	14e60 <memcpy@plt>
   34e8c:	mov	r0, r5
   34e90:	pop	{r4, r5, r6, sl, fp, pc}
   34e94:	ldr	r1, [r4, #8]
   34e98:	mov	r0, r6
   34e9c:	bl	14e60 <memcpy@plt>
   34ea0:	mov	r0, r6
   34ea4:	pop	{r4, r5, r6, sl, fp, pc}

00034ea8 <flatcc_verify_error_string@@Base>:
   34ea8:	cmp	r0, #36	; 0x24
   34eac:	movwhi	r0, #56282	; 0xdbda
   34eb0:	movthi	r0, #4
   34eb4:	bxhi	lr
   34eb8:	movw	r1, #56304	; 0xdbf0
   34ebc:	movt	r1, #4
   34ec0:	ldr	r0, [r1, r0, lsl #2]
   34ec4:	bx	lr

00034ec8 <flatcc_verify_field@@Base>:
   34ec8:	push	{r4, sl, fp, lr}
   34ecc:	add	fp, sp, #8
   34ed0:	ldrh	r4, [r0, #22]
   34ed4:	mov	ip, #4
   34ed8:	mov	lr, #0
   34edc:	add	r1, ip, r1, lsl #1
   34ee0:	uxth	ip, r1
   34ee4:	cmp	ip, r4
   34ee8:	bcs	34f44 <flatcc_verify_field@@Base+0x7c>
   34eec:	ldr	r4, [r0, #12]
   34ef0:	uxtah	r1, r4, r1
   34ef4:	ldrh	ip, [r1]
   34ef8:	cmp	ip, #0
   34efc:	beq	34f44 <flatcc_verify_field@@Base+0x7c>
   34f00:	add	r1, ip, r2
   34f04:	ldrh	r2, [r0, #20]
   34f08:	mov	lr, #13
   34f0c:	cmp	r1, r2
   34f10:	bhi	34f44 <flatcc_verify_field@@Base+0x7c>
   34f14:	ldr	r1, [r0]
   34f18:	mov	lr, #0
   34f1c:	add	r2, r1, ip
   34f20:	ldr	r1, [r0, #16]
   34f24:	add	r4, r2, r1
   34f28:	sub	r1, r3, #1
   34f2c:	tst	r4, r1
   34f30:	beq	34f44 <flatcc_verify_field@@Base+0x7c>
   34f34:	ldr	r0, [r0, #16]
   34f38:	add	r0, r2, r0
   34f3c:	ands	lr, r0, r1
   34f40:	movwne	lr, #12
   34f44:	mov	r0, lr
   34f48:	pop	{r4, sl, fp, pc}

00034f4c <flatcc_verify_string_field@@Base>:
   34f4c:	push	{fp, lr}
   34f50:	mov	fp, sp
   34f54:	mov	lr, r2
   34f58:	ldrh	r2, [r0, #22]
   34f5c:	mov	r3, #4
   34f60:	add	r1, r3, r1, lsl #1
   34f64:	uxth	r3, r1
   34f68:	cmp	r3, r2
   34f6c:	bcs	35008 <flatcc_verify_string_field@@Base+0xbc>
   34f70:	ldr	r2, [r0, #12]
   34f74:	uxtah	r1, r2, r1
   34f78:	ldrh	r1, [r1]
   34f7c:	cmp	r1, #0
   34f80:	beq	35008 <flatcc_verify_string_field@@Base+0xbc>
   34f84:	ldrh	r2, [r0, #20]
   34f88:	add	r3, r1, #4
   34f8c:	mov	lr, #13
   34f90:	cmp	r3, r2
   34f94:	bhi	35000 <flatcc_verify_string_field@@Base+0xb4>
   34f98:	ldr	r2, [r0, #16]
   34f9c:	mov	lr, #12
   34fa0:	add	r3, r2, r1
   34fa4:	tst	r3, #3
   34fa8:	bne	35000 <flatcc_verify_string_field@@Base+0xb4>
   34fac:	cmp	r3, #0
   34fb0:	moveq	lr, #0
   34fb4:	moveq	r0, lr
   34fb8:	popeq	{fp, pc}
   34fbc:	ldr	ip, [r0]
   34fc0:	mov	lr, #17
   34fc4:	ldr	r1, [ip, r3]
   34fc8:	add	r1, r1, r3
   34fcc:	tst	r1, #3
   34fd0:	bne	35000 <flatcc_verify_string_field@@Base+0xb4>
   34fd4:	cmp	r1, r3
   34fd8:	bls	35000 <flatcc_verify_string_field@@Base+0xb4>
   34fdc:	ldr	r3, [r0, #4]
   34fe0:	add	r0, r1, #4
   34fe4:	cmp	r3, r0
   34fe8:	ldrcs	r1, [ip, r1]
   34fec:	subcs	r2, r3, r0
   34ff0:	movcs	lr, #8
   34ff4:	addcs	r3, r1, #1
   34ff8:	cmpcs	r2, r3
   34ffc:	bcs	35018 <flatcc_verify_string_field@@Base+0xcc>
   35000:	mov	r0, lr
   35004:	pop	{fp, pc}
   35008:	cmp	lr, #0
   3500c:	movwne	lr, #4
   35010:	mov	r0, lr
   35014:	pop	{fp, pc}
   35018:	add	r0, ip, r0
   3501c:	ldrb	lr, [r0, r1]
   35020:	cmp	lr, #0
   35024:	movwne	lr, #7
   35028:	mov	r0, lr
   3502c:	pop	{fp, pc}

00035030 <flatcc_verify_vector_field@@Base>:
   35030:	push	{r4, r5, fp, lr}
   35034:	add	fp, sp, #8
   35038:	mov	r5, r2
   3503c:	ldrh	r2, [r0, #22]
   35040:	mov	r4, #4
   35044:	add	r1, r4, r1, lsl #1
   35048:	uxth	r4, r1
   3504c:	cmp	r4, r2
   35050:	bcs	35118 <flatcc_verify_vector_field@@Base+0xe8>
   35054:	ldr	r2, [r0, #12]
   35058:	uxtah	r1, r2, r1
   3505c:	ldrh	r1, [r1]
   35060:	cmp	r1, #0
   35064:	beq	35118 <flatcc_verify_vector_field@@Base+0xe8>
   35068:	ldrh	r2, [r0, #20]
   3506c:	add	r4, r1, #4
   35070:	mov	r5, #13
   35074:	cmp	r4, r2
   35078:	bhi	35110 <flatcc_verify_vector_field@@Base+0xe0>
   3507c:	ldr	r2, [r0, #16]
   35080:	mov	r5, #12
   35084:	add	r1, r2, r1
   35088:	tst	r1, #3
   3508c:	bne	35110 <flatcc_verify_vector_field@@Base+0xe0>
   35090:	cmp	r1, #0
   35094:	moveq	r5, #0
   35098:	moveq	r0, r5
   3509c:	popeq	{r4, r5, fp, pc}
   350a0:	ldr	ip, [r0]
   350a4:	ldr	r4, [fp, #8]
   350a8:	mov	r5, #16
   350ac:	ldr	r2, [ip, r1]
   350b0:	cmp	r4, #4
   350b4:	movls	r4, #4
   350b8:	add	lr, r2, r1
   350bc:	cmp	lr, r1
   350c0:	bls	35110 <flatcc_verify_vector_field@@Base+0xe0>
   350c4:	ldr	r0, [r0, #4]
   350c8:	add	r1, lr, #4
   350cc:	cmp	r1, r0
   350d0:	bhi	35110 <flatcc_verify_vector_field@@Base+0xe0>
   350d4:	sub	r2, r4, #1
   350d8:	orr	r2, r2, #3
   350dc:	tst	r1, r2
   350e0:	bne	35110 <flatcc_verify_vector_field@@Base+0xe0>
   350e4:	ldr	r2, [fp, #12]
   350e8:	ldr	r1, [ip, lr]
   350ec:	mov	r5, #25
   350f0:	cmp	r1, r2
   350f4:	bhi	35110 <flatcc_verify_vector_field@@Base+0xe0>
   350f8:	sub	r0, r0, #4
   350fc:	mul	r1, r1, r3
   35100:	mov	r5, #0
   35104:	sub	r0, r0, lr
   35108:	cmp	r0, r1
   3510c:	movwcc	r5, #26
   35110:	mov	r0, r5
   35114:	pop	{r4, r5, fp, pc}
   35118:	cmp	r5, #0
   3511c:	movwne	r5, #4
   35120:	mov	r0, r5
   35124:	pop	{r4, r5, fp, pc}

00035128 <flatcc_verify_string_vector_field@@Base>:
   35128:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3512c:	add	fp, sp, #24
   35130:	ldrh	r7, [r0, #22]
   35134:	mov	r3, #4
   35138:	add	r1, r3, r1, lsl #1
   3513c:	uxth	r3, r1
   35140:	cmp	r3, r7
   35144:	bcs	3518c <flatcc_verify_string_vector_field@@Base+0x64>
   35148:	ldr	r3, [r0, #12]
   3514c:	uxtah	r1, r3, r1
   35150:	ldrh	r1, [r1]
   35154:	cmp	r1, #0
   35158:	beq	3518c <flatcc_verify_string_vector_field@@Base+0x64>
   3515c:	ldrh	r3, [r0, #20]
   35160:	add	r7, r1, #4
   35164:	mov	r2, #13
   35168:	cmp	r7, r3
   3516c:	bhi	35184 <flatcc_verify_string_vector_field@@Base+0x5c>
   35170:	ldr	r4, [r0, #16]
   35174:	mov	r2, #12
   35178:	add	r6, r4, r1
   3517c:	tst	r6, #3
   35180:	beq	3519c <flatcc_verify_string_vector_field@@Base+0x74>
   35184:	mov	r0, r2
   35188:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3518c:	cmp	r2, #0
   35190:	movwne	r2, #4
   35194:	mov	r0, r2
   35198:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3519c:	mov	r2, #0
   351a0:	cmp	r6, #0
   351a4:	beq	35184 <flatcc_verify_string_vector_field@@Base+0x5c>
   351a8:	ldr	r5, [r0]
   351ac:	mov	r2, #16
   351b0:	ldr	r7, [r5, r6]
   351b4:	add	r3, r7, r6
   351b8:	cmp	r3, r6
   351bc:	bls	35184 <flatcc_verify_string_vector_field@@Base+0x5c>
   351c0:	ldr	lr, [r0, #4]
   351c4:	add	r0, r3, #4
   351c8:	cmp	r0, lr
   351cc:	bhi	35184 <flatcc_verify_string_vector_field@@Base+0x5c>
   351d0:	ands	r0, r0, #3
   351d4:	bne	35184 <flatcc_verify_string_vector_field@@Base+0x5c>
   351d8:	ldr	ip, [r5, r3]
   351dc:	mov	r2, #25
   351e0:	cmn	ip, #-1073741823	; 0xc0000001
   351e4:	bhi	35184 <flatcc_verify_string_vector_field@@Base+0x5c>
   351e8:	sub	r0, lr, #4
   351ec:	mov	r2, #26
   351f0:	sub	r0, r0, r3
   351f4:	cmp	r0, ip, lsl #2
   351f8:	bcc	35184 <flatcc_verify_string_vector_field@@Base+0x5c>
   351fc:	cmp	ip, #0
   35200:	mov	r2, #0
   35204:	beq	35184 <flatcc_verify_string_vector_field@@Base+0x5c>
   35208:	sub	r0, lr, #8
   3520c:	add	r9, r7, r4
   35210:	sub	r0, r0, r1
   35214:	sub	r0, r0, r7
   35218:	sub	r8, r0, r4
   3521c:	add	r0, r5, r9
   35220:	mov	r5, #0
   35224:	rsb	r4, r0, #0
   35228:	sub	r0, r1, r4
   3522c:	add	r3, r1, r9
   35230:	mov	r2, #17
   35234:	ldr	r6, [r0, #4]
   35238:	add	r7, r3, r6
   3523c:	add	r0, r7, #4
   35240:	tst	r0, #3
   35244:	bne	35184 <flatcc_verify_string_vector_field@@Base+0x5c>
   35248:	add	r3, r3, #4
   3524c:	cmp	r0, r3
   35250:	bls	35184 <flatcc_verify_string_vector_field@@Base+0x5c>
   35254:	add	r0, r7, #8
   35258:	cmp	lr, r0
   3525c:	bcc	35184 <flatcc_verify_string_vector_field@@Base+0x5c>
   35260:	add	r0, r1, r6
   35264:	sub	r2, r8, r6
   35268:	sub	r0, r0, r4
   3526c:	ldr	r0, [r0, #4]
   35270:	add	r3, r0, #1
   35274:	cmp	r2, r3
   35278:	bcc	352b4 <flatcc_verify_string_vector_field@@Base+0x18c>
   3527c:	add	r0, r6, r0
   35280:	add	r0, r1, r0
   35284:	sub	r0, r0, r4
   35288:	ldrb	r0, [r0, #8]
   3528c:	cmp	r0, #0
   35290:	bne	352c0 <flatcc_verify_string_vector_field@@Base+0x198>
   35294:	add	r5, r5, #1
   35298:	sub	r8, r8, #4
   3529c:	add	r9, r9, #4
   352a0:	sub	r4, r4, #4
   352a4:	mov	r2, #0
   352a8:	cmp	r5, ip
   352ac:	bcc	35228 <flatcc_verify_string_vector_field@@Base+0x100>
   352b0:	b	35184 <flatcc_verify_string_vector_field@@Base+0x5c>
   352b4:	mov	r2, #8
   352b8:	mov	r0, r2
   352bc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   352c0:	mov	r2, #7
   352c4:	mov	r0, r2
   352c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000352cc <flatcc_verify_table_field@@Base>:
   352cc:	push	{r4, r5, r6, sl, fp, lr}
   352d0:	add	fp, sp, #16
   352d4:	sub	sp, sp, #24
   352d8:	ldrh	r5, [r0, #22]
   352dc:	mov	r6, #4
   352e0:	add	r1, r6, r1, lsl #1
   352e4:	uxth	r6, r1
   352e8:	cmp	r6, r5
   352ec:	bcs	35404 <flatcc_verify_table_field@@Base+0x138>
   352f0:	ldr	r6, [r0, #12]
   352f4:	uxtah	r1, r6, r1
   352f8:	ldrh	r1, [r1]
   352fc:	cmp	r1, #0
   35300:	beq	35404 <flatcc_verify_table_field@@Base+0x138>
   35304:	ldrh	r6, [r0, #20]
   35308:	add	r5, r1, #4
   3530c:	mov	r2, #13
   35310:	cmp	r5, r6
   35314:	bhi	3540c <flatcc_verify_table_field@@Base+0x140>
   35318:	ldr	r2, [r0, #16]
   3531c:	add	r4, r2, r1
   35320:	mov	r2, #12
   35324:	tst	r4, #3
   35328:	bne	3540c <flatcc_verify_table_field@@Base+0x140>
   3532c:	cmp	r4, #0
   35330:	beq	35418 <flatcc_verify_table_field@@Base+0x14c>
   35334:	ldm	r0, {r1, ip}
   35338:	ldr	r2, [r0, #8]
   3533c:	ldr	r0, [r1, r4]
   35340:	subs	r2, r2, #1
   35344:	str	r2, [sp, #8]
   35348:	beq	35428 <flatcc_verify_table_field@@Base+0x15c>
   3534c:	add	r0, r0, r4
   35350:	mov	r2, #15
   35354:	tst	r0, #3
   35358:	bne	3540c <flatcc_verify_table_field@@Base+0x140>
   3535c:	cmp	r0, r4
   35360:	bls	3540c <flatcc_verify_table_field@@Base+0x140>
   35364:	add	r6, r0, #4
   35368:	cmp	r6, ip
   3536c:	bhi	3540c <flatcc_verify_table_field@@Base+0x140>
   35370:	str	r0, [sp, #16]
   35374:	ldr	r2, [r1, r0]
   35378:	sub	r5, r0, r2
   3537c:	mov	r2, #29
   35380:	tst	r5, #-2147483647	; 0x80000001
   35384:	bne	3540c <flatcc_verify_table_field@@Base+0x140>
   35388:	add	r4, r5, #2
   3538c:	mov	r2, #27
   35390:	cmp	r4, ip
   35394:	bhi	3540c <flatcc_verify_table_field@@Base+0x140>
   35398:	mov	lr, r1
   3539c:	mov	r2, #30
   353a0:	ldrh	r6, [lr, r5]!
   353a4:	tst	r6, #1
   353a8:	strh	r6, [sp, #22]
   353ac:	bne	3540c <flatcc_verify_table_field@@Base+0x140>
   353b0:	add	r5, r5, r6
   353b4:	cmp	r5, ip
   353b8:	bhi	3540c <flatcc_verify_table_field@@Base+0x140>
   353bc:	mov	r2, #28
   353c0:	cmp	r6, #4
   353c4:	bcc	3540c <flatcc_verify_table_field@@Base+0x140>
   353c8:	add	r2, r1, r4
   353cc:	sub	r0, ip, r0
   353d0:	ldrh	r4, [r2]
   353d4:	mov	r2, #20
   353d8:	cmp	r0, r4
   353dc:	strh	r4, [sp, #20]
   353e0:	bcc	3540c <flatcc_verify_table_field@@Base+0x140>
   353e4:	mov	r0, sp
   353e8:	str	lr, [sp, #12]
   353ec:	stm	sp, {r1, ip}
   353f0:	blx	r3
   353f4:	mov	r2, r0
   353f8:	mov	r0, r2
   353fc:	sub	sp, fp, #16
   35400:	pop	{r4, r5, r6, sl, fp, pc}
   35404:	cmp	r2, #0
   35408:	movwne	r2, #4
   3540c:	mov	r0, r2
   35410:	sub	sp, fp, #16
   35414:	pop	{r4, r5, r6, sl, fp, pc}
   35418:	mov	r2, #0
   3541c:	mov	r0, r2
   35420:	sub	sp, fp, #16
   35424:	pop	{r4, r5, r6, sl, fp, pc}
   35428:	mov	r2, #3
   3542c:	mov	r0, r2
   35430:	sub	sp, fp, #16
   35434:	pop	{r4, r5, r6, sl, fp, pc}

00035438 <flatcc_verify_table_vector_field@@Base>:
   35438:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3543c:	add	fp, sp, #28
   35440:	sub	sp, sp, #36	; 0x24
   35444:	ldrh	r7, [r0, #22]
   35448:	mov	r4, r3
   3544c:	mov	r3, #4
   35450:	add	r1, r3, r1, lsl #1
   35454:	uxth	r3, r1
   35458:	cmp	r3, r7
   3545c:	bcs	3561c <flatcc_verify_table_vector_field@@Base+0x1e4>
   35460:	ldr	r3, [r0, #12]
   35464:	uxtah	r1, r3, r1
   35468:	ldrh	r1, [r1]
   3546c:	cmp	r1, #0
   35470:	beq	3561c <flatcc_verify_table_vector_field@@Base+0x1e4>
   35474:	ldrh	r3, [r0, #20]
   35478:	add	r7, r1, #4
   3547c:	mov	r2, #13
   35480:	cmp	r7, r3
   35484:	bhi	35624 <flatcc_verify_table_vector_field@@Base+0x1ec>
   35488:	ldr	r3, [r0, #16]
   3548c:	mov	r2, #12
   35490:	add	r6, r3, r1
   35494:	tst	r6, #3
   35498:	bne	35624 <flatcc_verify_table_vector_field@@Base+0x1ec>
   3549c:	mov	r2, #0
   354a0:	cmp	r6, #0
   354a4:	beq	35624 <flatcc_verify_table_vector_field@@Base+0x1ec>
   354a8:	ldr	r7, [r0, #8]
   354ac:	cmp	r7, #1
   354b0:	blt	35630 <flatcc_verify_table_vector_field@@Base+0x1f8>
   354b4:	ldr	sl, [r0]
   354b8:	mov	r2, #16
   354bc:	ldr	ip, [sl, r6]
   354c0:	add	r5, ip, r6
   354c4:	cmp	r5, r6
   354c8:	bls	35624 <flatcc_verify_table_vector_field@@Base+0x1ec>
   354cc:	ldr	r9, [r0, #4]
   354d0:	add	r8, r5, #4
   354d4:	cmp	r8, r9
   354d8:	bhi	35624 <flatcc_verify_table_vector_field@@Base+0x1ec>
   354dc:	ands	r0, r8, #3
   354e0:	bne	35624 <flatcc_verify_table_vector_field@@Base+0x1ec>
   354e4:	ldr	lr, [sl, r5]
   354e8:	mov	r2, #25
   354ec:	cmn	lr, #-1073741823	; 0xc0000001
   354f0:	bhi	35624 <flatcc_verify_table_vector_field@@Base+0x1ec>
   354f4:	sub	r0, r9, #4
   354f8:	mov	r2, #26
   354fc:	sub	r6, r0, r5
   35500:	cmp	r6, lr, lsl #2
   35504:	bcc	35624 <flatcc_verify_table_vector_field@@Base+0x1ec>
   35508:	cmp	lr, #0
   3550c:	mov	r2, #0
   35510:	beq	35624 <flatcc_verify_table_vector_field@@Base+0x1ec>
   35514:	subs	r2, r7, #2
   35518:	str	r2, [sp, #4]
   3551c:	beq	356fc <flatcc_verify_table_vector_field@@Base+0x2c4>
   35520:	sub	r0, r0, r1
   35524:	sub	r0, r0, ip
   35528:	sub	r5, r0, r3
   3552c:	mov	r0, #0
   35530:	str	r0, [sp, #8]
   35534:	ldr	r2, [sl, r8]
   35538:	ldr	r0, [sp, #4]
   3553c:	str	r0, [sp, #20]
   35540:	add	r0, r8, r2
   35544:	add	ip, r0, #4
   35548:	tst	r0, #3
   3554c:	bne	35640 <flatcc_verify_table_vector_field@@Base+0x208>
   35550:	cmp	r0, r8
   35554:	bls	35640 <flatcc_verify_table_vector_field@@Base+0x208>
   35558:	cmp	ip, r9
   3555c:	bhi	35640 <flatcc_verify_table_vector_field@@Base+0x208>
   35560:	str	r0, [sp, #28]
   35564:	add	r1, sl, r2
   35568:	ldr	r7, [r1, r8]
   3556c:	sub	r1, r2, r7
   35570:	add	r3, r8, r1
   35574:	tst	r3, #-2147483647	; 0x80000001
   35578:	bne	35640 <flatcc_verify_table_vector_field@@Base+0x208>
   3557c:	add	r6, r3, #2
   35580:	cmp	r6, r9
   35584:	bhi	35640 <flatcc_verify_table_vector_field@@Base+0x208>
   35588:	add	r1, sl, r1
   3558c:	add	r1, r1, r8
   35590:	ldrh	r1, [r1]
   35594:	cmp	r1, #4
   35598:	strh	r1, [sp, #34]	; 0x22
   3559c:	bcc	35640 <flatcc_verify_table_vector_field@@Base+0x208>
   355a0:	ands	r6, r1, #1
   355a4:	bne	35640 <flatcc_verify_table_vector_field@@Base+0x208>
   355a8:	add	r1, r2, r1
   355ac:	sub	r1, r1, r7
   355b0:	add	r1, r8, r1
   355b4:	cmp	r1, r9
   355b8:	bhi	35640 <flatcc_verify_table_vector_field@@Base+0x208>
   355bc:	add	r1, sl, r3
   355c0:	sub	r2, r5, r2
   355c4:	ldrh	r3, [r1, #2]
   355c8:	cmp	r2, r3
   355cc:	strh	r3, [sp, #32]
   355d0:	bcc	35640 <flatcc_verify_table_vector_field@@Base+0x208>
   355d4:	add	r0, sp, #12
   355d8:	str	sl, [sp, #12]
   355dc:	str	r1, [sp, #24]
   355e0:	mov	r6, lr
   355e4:	str	r9, [sp, #16]
   355e8:	blx	r4
   355ec:	cmp	r0, #0
   355f0:	bne	35714 <flatcc_verify_table_vector_field@@Base+0x2dc>
   355f4:	ldr	r0, [sp, #8]
   355f8:	sub	r5, r5, #4
   355fc:	add	r8, r8, #4
   35600:	mov	r2, #0
   35604:	mov	lr, r6
   35608:	add	r0, r0, #1
   3560c:	cmp	r0, r6
   35610:	str	r0, [sp, #8]
   35614:	bcc	35534 <flatcc_verify_table_vector_field@@Base+0xfc>
   35618:	b	35624 <flatcc_verify_table_vector_field@@Base+0x1ec>
   3561c:	cmp	r2, #0
   35620:	movwne	r2, #4
   35624:	mov	r0, r2
   35628:	sub	sp, fp, #28
   3562c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35630:	mov	r2, #3
   35634:	mov	r0, r2
   35638:	sub	sp, fp, #28
   3563c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35640:	ldr	r1, [sp, #4]
   35644:	str	r1, [sp, #20]
   35648:	mov	r2, #15
   3564c:	tst	r0, #3
   35650:	bne	35624 <flatcc_verify_table_vector_field@@Base+0x1ec>
   35654:	cmp	r0, r8
   35658:	bls	35624 <flatcc_verify_table_vector_field@@Base+0x1ec>
   3565c:	cmp	ip, r9
   35660:	bhi	35624 <flatcc_verify_table_vector_field@@Base+0x1ec>
   35664:	str	r0, [sp, #28]
   35668:	mov	r2, #29
   3566c:	ldr	r1, [sl, r0]
   35670:	sub	r7, r0, r1
   35674:	tst	r7, #-2147483647	; 0x80000001
   35678:	bne	35624 <flatcc_verify_table_vector_field@@Base+0x1ec>
   3567c:	add	r3, r7, #2
   35680:	mov	r2, #27
   35684:	cmp	r3, r9
   35688:	bhi	35624 <flatcc_verify_table_vector_field@@Base+0x1ec>
   3568c:	mov	r1, sl
   35690:	mov	r2, #30
   35694:	ldrh	r6, [r1, r7]!
   35698:	tst	r6, #1
   3569c:	strh	r6, [sp, #34]	; 0x22
   356a0:	bne	35624 <flatcc_verify_table_vector_field@@Base+0x1ec>
   356a4:	add	r7, r7, r6
   356a8:	cmp	r7, r9
   356ac:	bhi	35624 <flatcc_verify_table_vector_field@@Base+0x1ec>
   356b0:	mov	r2, #28
   356b4:	cmp	r6, #4
   356b8:	bcc	35624 <flatcc_verify_table_vector_field@@Base+0x1ec>
   356bc:	add	r2, sl, r3
   356c0:	sub	r0, r9, r0
   356c4:	ldrh	r3, [r2]
   356c8:	mov	r2, #20
   356cc:	cmp	r0, r3
   356d0:	strh	r3, [sp, #32]
   356d4:	bcc	35624 <flatcc_verify_table_vector_field@@Base+0x1ec>
   356d8:	add	r0, sp, #12
   356dc:	str	sl, [sp, #12]
   356e0:	str	r1, [sp, #24]
   356e4:	str	r9, [sp, #16]
   356e8:	blx	r4
   356ec:	mov	r2, r0
   356f0:	mov	r0, r2
   356f4:	sub	sp, fp, #28
   356f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   356fc:	mov	r0, #0
   35700:	mov	r2, #3
   35704:	str	r0, [sp, #20]
   35708:	mov	r0, r2
   3570c:	sub	sp, fp, #28
   35710:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35714:	ldr	r0, [sl, r8]
   35718:	ldr	r1, [sp, #4]
   3571c:	add	r0, r0, r8
   35720:	str	r1, [sp, #20]
   35724:	add	ip, r0, #4
   35728:	mov	r2, #15
   3572c:	tst	r0, #3
   35730:	beq	35654 <flatcc_verify_table_vector_field@@Base+0x21c>
   35734:	b	35624 <flatcc_verify_table_vector_field@@Base+0x1ec>

00035738 <flatcc_verify_union_table@@Base>:
   35738:	push	{r4, r5, r6, sl, fp, lr}
   3573c:	add	fp, sp, #16
   35740:	sub	sp, sp, #24
   35744:	ldr	r5, [r0, #16]
   35748:	ldr	r3, [r0, #20]
   3574c:	ldr	ip, [r0]
   35750:	ldr	r2, [r0, #4]
   35754:	ldr	r0, [r0, #8]
   35758:	subs	r0, r0, #1
   3575c:	str	r0, [sp, #8]
   35760:	moveq	r0, #3
   35764:	subeq	sp, fp, #16
   35768:	popeq	{r4, r5, r6, sl, fp, pc}
   3576c:	add	r3, r3, r5
   35770:	mov	r0, #15
   35774:	tst	r3, #3
   35778:	bne	35818 <flatcc_verify_union_table@@Base+0xe0>
   3577c:	cmp	r3, r5
   35780:	bls	35818 <flatcc_verify_union_table@@Base+0xe0>
   35784:	add	r6, r3, #4
   35788:	cmp	r6, r2
   3578c:	bhi	35818 <flatcc_verify_union_table@@Base+0xe0>
   35790:	str	r3, [sp, #16]
   35794:	ldr	r0, [ip, r3]
   35798:	sub	r5, r3, r0
   3579c:	mov	r0, #29
   357a0:	tst	r5, #-2147483647	; 0x80000001
   357a4:	bne	35818 <flatcc_verify_union_table@@Base+0xe0>
   357a8:	add	r4, r5, #2
   357ac:	mov	r0, #27
   357b0:	cmp	r4, r2
   357b4:	bhi	35818 <flatcc_verify_union_table@@Base+0xe0>
   357b8:	mov	lr, ip
   357bc:	mov	r0, #30
   357c0:	ldrh	r6, [lr, r5]!
   357c4:	tst	r6, #1
   357c8:	strh	r6, [sp, #22]
   357cc:	bne	35818 <flatcc_verify_union_table@@Base+0xe0>
   357d0:	add	r5, r5, r6
   357d4:	cmp	r5, r2
   357d8:	bhi	35818 <flatcc_verify_union_table@@Base+0xe0>
   357dc:	mov	r0, #28
   357e0:	cmp	r6, #4
   357e4:	bcc	35818 <flatcc_verify_union_table@@Base+0xe0>
   357e8:	add	r0, ip, r4
   357ec:	sub	r3, r2, r3
   357f0:	ldrh	r4, [r0]
   357f4:	mov	r0, #20
   357f8:	cmp	r3, r4
   357fc:	strh	r4, [sp, #20]
   35800:	bcc	35818 <flatcc_verify_union_table@@Base+0xe0>
   35804:	mov	r0, sp
   35808:	str	ip, [sp]
   3580c:	str	lr, [sp, #12]
   35810:	str	r2, [sp, #4]
   35814:	blx	r1
   35818:	sub	sp, fp, #16
   3581c:	pop	{r4, r5, r6, sl, fp, pc}

00035820 <flatcc_verify_union_struct@@Base>:
   35820:	push	{fp, lr}
   35824:	mov	fp, sp
   35828:	ldr	lr, [r0, #20]
   3582c:	mov	r3, r0
   35830:	mov	r0, #18
   35834:	cmp	lr, #0
   35838:	beq	35874 <flatcc_verify_union_struct@@Base+0x54>
   3583c:	ldr	ip, [r3, #4]
   35840:	ldr	r3, [r3, #16]
   35844:	add	r3, r3, lr
   35848:	cmp	r3, ip
   3584c:	bhi	35874 <flatcc_verify_union_struct@@Base+0x54>
   35850:	adds	r1, r3, r1
   35854:	mov	r0, #10
   35858:	bcs	35874 <flatcc_verify_union_struct@@Base+0x54>
   3585c:	mov	r0, #9
   35860:	cmp	r1, ip
   35864:	pophi	{fp, pc}
   35868:	sub	r0, r2, #1
   3586c:	ands	r0, r3, r0
   35870:	movwne	r0, #11
   35874:	pop	{fp, pc}

00035878 <flatcc_verify_union_string@@Base>:
   35878:	mov	r1, r0
   3587c:	ldr	r3, [r0, #16]
   35880:	ldr	r0, [r0, #20]
   35884:	add	r2, r0, r3
   35888:	mov	r0, #17
   3588c:	tst	r2, #3
   35890:	bne	358e4 <flatcc_verify_union_string@@Base+0x6c>
   35894:	cmp	r2, r3
   35898:	bls	358e4 <flatcc_verify_union_string@@Base+0x6c>
   3589c:	ldr	r3, [r1, #4]
   358a0:	add	ip, r2, #4
   358a4:	cmp	r3, ip
   358a8:	bcc	358e4 <flatcc_verify_union_string@@Base+0x6c>
   358ac:	push	{fp, lr}
   358b0:	mov	fp, sp
   358b4:	ldr	r1, [r1]
   358b8:	sub	lr, r3, ip
   358bc:	mov	r0, #8
   358c0:	ldr	r2, [r1, r2]
   358c4:	add	r3, r2, #1
   358c8:	cmp	lr, r3
   358cc:	pop	{fp, lr}
   358d0:	bxcc	lr
   358d4:	add	r0, r1, ip
   358d8:	ldrb	r0, [r0, r2]
   358dc:	cmp	r0, #0
   358e0:	movwne	r0, #7
   358e4:	bx	lr

000358e8 <flatcc_verify_buffer_header@@Base>:
   358e8:	push	{r4, sl, fp, lr}
   358ec:	add	fp, sp, #8
   358f0:	sub	sp, sp, #8
   358f4:	mov	r4, r0
   358f8:	mov	r0, #5
   358fc:	tst	r4, #3
   35900:	bne	35954 <flatcc_verify_buffer_header@@Base+0x6c>
   35904:	mov	r0, #6
   35908:	cmn	r1, #9
   3590c:	bhi	35954 <flatcc_verify_buffer_header@@Base+0x6c>
   35910:	mov	r0, #1
   35914:	cmp	r1, #8
   35918:	bcc	35954 <flatcc_verify_buffer_header@@Base+0x6c>
   3591c:	cmp	r2, #0
   35920:	beq	3595c <flatcc_verify_buffer_header@@Base+0x74>
   35924:	mov	r0, #0
   35928:	mov	r1, r2
   3592c:	mov	r2, #4
   35930:	str	r0, [sp, #4]
   35934:	add	r0, sp, #4
   35938:	bl	14efc <strncpy@plt>
   3593c:	ldr	r1, [sp, #4]
   35940:	cmp	r1, #0
   35944:	ldrne	r2, [r4, #4]
   35948:	movne	r0, #2
   3594c:	cmpne	r2, r1
   35950:	moveq	r0, #0
   35954:	sub	sp, fp, #8
   35958:	pop	{r4, sl, fp, pc}
   3595c:	mov	r0, #0
   35960:	sub	sp, fp, #8
   35964:	pop	{r4, sl, fp, pc}

00035968 <flatcc_verify_typed_buffer_header@@Base>:
   35968:	mov	r3, r0
   3596c:	mov	r0, #5
   35970:	tst	r3, #3
   35974:	bne	359a8 <flatcc_verify_typed_buffer_header@@Base+0x40>
   35978:	mov	r0, #6
   3597c:	cmn	r1, #9
   35980:	bhi	359a8 <flatcc_verify_typed_buffer_header@@Base+0x40>
   35984:	mov	r0, #1
   35988:	cmp	r1, #8
   3598c:	bxcc	lr
   35990:	cmp	r2, #0
   35994:	beq	359ac <flatcc_verify_typed_buffer_header@@Base+0x44>
   35998:	ldr	r1, [r3, #4]
   3599c:	mov	r0, #2
   359a0:	cmp	r1, r2
   359a4:	moveq	r0, #0
   359a8:	bx	lr
   359ac:	mov	r0, #0
   359b0:	bx	lr

000359b4 <flatcc_verify_struct_as_root@@Base>:
   359b4:	push	{r4, r5, r6, r7, fp, lr}
   359b8:	add	fp, sp, #16
   359bc:	sub	sp, sp, #8
   359c0:	mov	r5, r0
   359c4:	mov	r0, #5
   359c8:	tst	r5, #3
   359cc:	bne	35a64 <flatcc_verify_struct_as_root@@Base+0xb0>
   359d0:	mov	r4, r1
   359d4:	mov	r0, #6
   359d8:	cmn	r1, #9
   359dc:	bhi	35a64 <flatcc_verify_struct_as_root@@Base+0xb0>
   359e0:	mov	r0, #1
   359e4:	cmp	r4, #8
   359e8:	bcc	35a64 <flatcc_verify_struct_as_root@@Base+0xb0>
   359ec:	mov	r6, r3
   359f0:	mov	r7, r2
   359f4:	cmp	r2, #0
   359f8:	beq	35a28 <flatcc_verify_struct_as_root@@Base+0x74>
   359fc:	mov	r0, #0
   35a00:	mov	r1, r7
   35a04:	mov	r2, #4
   35a08:	str	r0, [sp]
   35a0c:	mov	r0, sp
   35a10:	bl	14efc <strncpy@plt>
   35a14:	ldr	r0, [sp]
   35a18:	cmp	r0, #0
   35a1c:	ldrne	r1, [r5, #4]
   35a20:	cmpne	r1, r0
   35a24:	bne	35a6c <flatcc_verify_struct_as_root@@Base+0xb8>
   35a28:	ldr	r1, [r5]
   35a2c:	mov	r0, #18
   35a30:	sub	r2, r1, #1
   35a34:	cmp	r2, r4
   35a38:	bcs	35a64 <flatcc_verify_struct_as_root@@Base+0xb0>
   35a3c:	adds	r2, r1, r6
   35a40:	mov	r0, #10
   35a44:	bcs	35a64 <flatcc_verify_struct_as_root@@Base+0xb0>
   35a48:	mov	r0, #9
   35a4c:	cmp	r2, r4
   35a50:	bhi	35a64 <flatcc_verify_struct_as_root@@Base+0xb0>
   35a54:	ldr	r0, [fp, #8]
   35a58:	sub	r0, r0, #1
   35a5c:	ands	r0, r1, r0
   35a60:	movwne	r0, #11
   35a64:	sub	sp, fp, #16
   35a68:	pop	{r4, r5, r6, r7, fp, pc}
   35a6c:	mov	r0, #0
   35a70:	mov	r1, r7
   35a74:	mov	r2, #4
   35a78:	str	r0, [sp, #4]
   35a7c:	add	r0, sp, #4
   35a80:	bl	14efc <strncpy@plt>
   35a84:	ldr	r1, [sp, #4]
   35a88:	ldr	r0, [r5, #4]
   35a8c:	subs	r0, r0, r1
   35a90:	movwne	r0, #2
   35a94:	cmp	r1, #0
   35a98:	moveq	r0, r1
   35a9c:	sub	sp, fp, #16
   35aa0:	pop	{r4, r5, r6, r7, fp, pc}

00035aa4 <flatcc_verify_struct_as_typed_root@@Base>:
   35aa4:	push	{fp, lr}
   35aa8:	mov	fp, sp
   35aac:	mov	ip, r0
   35ab0:	mov	r0, #5
   35ab4:	tst	ip, #3
   35ab8:	bne	35b28 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   35abc:	mov	r0, #6
   35ac0:	cmn	r1, #9
   35ac4:	bhi	35b28 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   35ac8:	mov	r0, #1
   35acc:	cmp	r1, #8
   35ad0:	bcc	35b28 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   35ad4:	cmp	r2, #0
   35ad8:	beq	35aec <flatcc_verify_struct_as_typed_root@@Base+0x48>
   35adc:	ldr	lr, [ip, #4]
   35ae0:	mov	r0, #2
   35ae4:	cmp	lr, r2
   35ae8:	bne	35b28 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   35aec:	ldr	ip, [ip]
   35af0:	mov	r0, #18
   35af4:	sub	r2, ip, #1
   35af8:	cmp	r2, r1
   35afc:	bcs	35b28 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   35b00:	adds	r3, ip, r3
   35b04:	mov	r0, #10
   35b08:	bcs	35b28 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   35b0c:	mov	r0, #9
   35b10:	cmp	r3, r1
   35b14:	pophi	{fp, pc}
   35b18:	ldr	r0, [fp, #8]
   35b1c:	sub	r0, r0, #1
   35b20:	ands	r0, ip, r0
   35b24:	movwne	r0, #11
   35b28:	pop	{fp, pc}

00035b2c <flatcc_verify_table_as_root@@Base>:
   35b2c:	push	{r4, r5, r6, r7, fp, lr}
   35b30:	add	fp, sp, #16
   35b34:	sub	sp, sp, #24
   35b38:	mov	r4, r0
   35b3c:	mov	r0, #5
   35b40:	tst	r4, #3
   35b44:	bne	35c50 <flatcc_verify_table_as_root@@Base+0x124>
   35b48:	mov	r6, r1
   35b4c:	mov	r0, #6
   35b50:	cmn	r1, #9
   35b54:	bhi	35c50 <flatcc_verify_table_as_root@@Base+0x124>
   35b58:	mov	r0, #1
   35b5c:	cmp	r6, #8
   35b60:	bcc	35c50 <flatcc_verify_table_as_root@@Base+0x124>
   35b64:	mov	r5, r3
   35b68:	mov	r7, r2
   35b6c:	cmp	r2, #0
   35b70:	beq	35ba0 <flatcc_verify_table_as_root@@Base+0x74>
   35b74:	mov	r0, #0
   35b78:	mov	r1, r7
   35b7c:	mov	r2, #4
   35b80:	str	r0, [sp]
   35b84:	mov	r0, sp
   35b88:	bl	14efc <strncpy@plt>
   35b8c:	ldr	r0, [sp]
   35b90:	cmp	r0, #0
   35b94:	ldrne	r1, [r4, #4]
   35b98:	cmpne	r1, r0
   35b9c:	bne	35c58 <flatcc_verify_table_as_root@@Base+0x12c>
   35ba0:	ldr	r1, [r4]
   35ba4:	mov	r0, #99	; 0x63
   35ba8:	str	r0, [sp, #8]
   35bac:	mov	r0, #15
   35bb0:	tst	r1, #3
   35bb4:	bne	35c50 <flatcc_verify_table_as_root@@Base+0x124>
   35bb8:	cmp	r1, #0
   35bbc:	beq	35c50 <flatcc_verify_table_as_root@@Base+0x124>
   35bc0:	add	r2, r1, #4
   35bc4:	cmp	r2, r6
   35bc8:	bhi	35c50 <flatcc_verify_table_as_root@@Base+0x124>
   35bcc:	str	r1, [sp, #16]
   35bd0:	ldr	r0, [r4, r1]
   35bd4:	sub	r7, r1, r0
   35bd8:	mov	r0, #29
   35bdc:	tst	r7, #-2147483647	; 0x80000001
   35be0:	bne	35c50 <flatcc_verify_table_as_root@@Base+0x124>
   35be4:	add	r3, r7, #2
   35be8:	mov	r0, #27
   35bec:	cmp	r3, r6
   35bf0:	bhi	35c50 <flatcc_verify_table_as_root@@Base+0x124>
   35bf4:	mov	ip, r4
   35bf8:	mov	r0, #30
   35bfc:	ldrh	r2, [ip, r7]!
   35c00:	tst	r2, #1
   35c04:	strh	r2, [sp, #22]
   35c08:	bne	35c50 <flatcc_verify_table_as_root@@Base+0x124>
   35c0c:	add	r7, r7, r2
   35c10:	cmp	r7, r6
   35c14:	bhi	35c50 <flatcc_verify_table_as_root@@Base+0x124>
   35c18:	mov	r0, #28
   35c1c:	cmp	r2, #4
   35c20:	bcc	35c50 <flatcc_verify_table_as_root@@Base+0x124>
   35c24:	add	r0, r4, r3
   35c28:	sub	r1, r6, r1
   35c2c:	ldrh	r2, [r0]
   35c30:	mov	r0, #20
   35c34:	cmp	r1, r2
   35c38:	strh	r2, [sp, #20]
   35c3c:	bcc	35c50 <flatcc_verify_table_as_root@@Base+0x124>
   35c40:	mov	r0, sp
   35c44:	str	ip, [sp, #12]
   35c48:	stm	sp, {r4, r6}
   35c4c:	blx	r5
   35c50:	sub	sp, fp, #16
   35c54:	pop	{r4, r5, r6, r7, fp, pc}
   35c58:	mov	r0, #0
   35c5c:	mov	r1, r7
   35c60:	mov	r2, #4
   35c64:	str	r0, [sp]
   35c68:	mov	r0, sp
   35c6c:	bl	14efc <strncpy@plt>
   35c70:	ldr	r1, [sp]
   35c74:	ldr	r0, [r4, #4]
   35c78:	subs	r0, r0, r1
   35c7c:	movwne	r0, #2
   35c80:	cmp	r1, #0
   35c84:	moveq	r0, r1
   35c88:	sub	sp, fp, #16
   35c8c:	pop	{r4, r5, r6, r7, fp, pc}

00035c90 <flatcc_verify_table_as_typed_root@@Base>:
   35c90:	push	{r4, r5, r6, sl, fp, lr}
   35c94:	add	fp, sp, #16
   35c98:	sub	sp, sp, #24
   35c9c:	mov	ip, #5
   35ca0:	tst	r0, #3
   35ca4:	bne	35d8c <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35ca8:	mov	ip, #6
   35cac:	cmn	r1, #9
   35cb0:	bhi	35d8c <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35cb4:	mov	ip, #1
   35cb8:	cmp	r1, #8
   35cbc:	bcc	35d8c <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35cc0:	cmp	r2, #0
   35cc4:	beq	35cd8 <flatcc_verify_table_as_typed_root@@Base+0x48>
   35cc8:	ldr	r6, [r0, #4]
   35ccc:	mov	ip, #2
   35cd0:	cmp	r6, r2
   35cd4:	bne	35d8c <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35cd8:	ldr	r2, [r0]
   35cdc:	mov	r6, #99	; 0x63
   35ce0:	mov	ip, #15
   35ce4:	str	r6, [sp, #8]
   35ce8:	tst	r2, #3
   35cec:	bne	35d8c <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35cf0:	cmp	r2, #0
   35cf4:	beq	35d8c <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35cf8:	add	r6, r2, #4
   35cfc:	cmp	r6, r1
   35d00:	bhi	35d8c <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35d04:	str	r2, [sp, #16]
   35d08:	mov	ip, #29
   35d0c:	ldr	r6, [r0, r2]
   35d10:	sub	r5, r2, r6
   35d14:	tst	r5, #-2147483647	; 0x80000001
   35d18:	bne	35d8c <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35d1c:	add	r4, r5, #2
   35d20:	mov	ip, #27
   35d24:	cmp	r4, r1
   35d28:	bhi	35d8c <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35d2c:	mov	lr, r0
   35d30:	mov	ip, #30
   35d34:	ldrh	r6, [lr, r5]!
   35d38:	tst	r6, #1
   35d3c:	strh	r6, [sp, #22]
   35d40:	bne	35d8c <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35d44:	add	r5, r5, r6
   35d48:	cmp	r5, r1
   35d4c:	bhi	35d8c <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35d50:	mov	ip, #28
   35d54:	cmp	r6, #4
   35d58:	bcc	35d8c <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35d5c:	add	r6, r0, r4
   35d60:	sub	r2, r1, r2
   35d64:	mov	ip, #20
   35d68:	ldrh	r4, [r6]
   35d6c:	cmp	r2, r4
   35d70:	strh	r4, [sp, #20]
   35d74:	bcc	35d8c <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35d78:	str	lr, [sp, #12]
   35d7c:	stm	sp, {r0, r1}
   35d80:	mov	r0, sp
   35d84:	blx	r3
   35d88:	mov	ip, r0
   35d8c:	mov	r0, ip
   35d90:	sub	sp, fp, #16
   35d94:	pop	{r4, r5, r6, sl, fp, pc}

00035d98 <flatcc_verify_struct_as_nested_root@@Base>:
   35d98:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   35d9c:	add	fp, sp, #24
   35da0:	sub	sp, sp, #8
   35da4:	ldrh	r6, [r0, #22]
   35da8:	mov	r4, r3
   35dac:	mov	r3, #4
   35db0:	ldr	r9, [fp, #12]
   35db4:	add	r3, r3, r1, lsl #1
   35db8:	uxth	r7, r3
   35dbc:	cmp	r7, r6
   35dc0:	bcs	35e44 <flatcc_verify_struct_as_nested_root@@Base+0xac>
   35dc4:	ldr	r1, [r0, #12]
   35dc8:	ldrh	r5, [r1, r7]!
   35dcc:	cmp	r5, #0
   35dd0:	beq	35e44 <flatcc_verify_struct_as_nested_root@@Base+0xac>
   35dd4:	ldrh	r3, [r0, #20]
   35dd8:	add	r7, r5, #4
   35ddc:	cmp	r7, r3
   35de0:	bhi	35e5c <flatcc_verify_struct_as_nested_root@@Base+0xc4>
   35de4:	ldr	r3, [r0, #16]
   35de8:	add	r6, r3, r5
   35dec:	tst	r6, #3
   35df0:	bne	35e5c <flatcc_verify_struct_as_nested_root@@Base+0xc4>
   35df4:	cmp	r6, #0
   35df8:	beq	35f18 <flatcc_verify_struct_as_nested_root@@Base+0x180>
   35dfc:	ldr	r3, [r0]
   35e00:	ldr	r7, [r3, r6]
   35e04:	add	r7, r7, r6
   35e08:	cmp	r7, r6
   35e0c:	bls	35e5c <flatcc_verify_struct_as_nested_root@@Base+0xc4>
   35e10:	ldr	r6, [r0, #4]
   35e14:	add	r5, r7, #4
   35e18:	cmp	r5, r6
   35e1c:	bhi	35e5c <flatcc_verify_struct_as_nested_root@@Base+0xc4>
   35e20:	ands	r5, r5, #3
   35e24:	bne	35e5c <flatcc_verify_struct_as_nested_root@@Base+0xc4>
   35e28:	ldr	r3, [r3, r7]
   35e2c:	sub	r6, r6, #4
   35e30:	sub	r6, r6, r7
   35e34:	mul	r3, r3, r9
   35e38:	cmp	r6, r3
   35e3c:	bcc	35e5c <flatcc_verify_struct_as_nested_root@@Base+0xc4>
   35e40:	b	35f18 <flatcc_verify_struct_as_nested_root@@Base+0x180>
   35e44:	cmp	r2, #0
   35e48:	beq	35f04 <flatcc_verify_struct_as_nested_root@@Base+0x16c>
   35e4c:	cmp	r7, r6
   35e50:	bcs	35ef0 <flatcc_verify_struct_as_nested_root@@Base+0x158>
   35e54:	ldr	r1, [r0, #12]
   35e58:	uxtah	r1, r1, r3
   35e5c:	ldrh	r1, [r1]
   35e60:	cmp	r1, #0
   35e64:	beq	35ef0 <flatcc_verify_struct_as_nested_root@@Base+0x158>
   35e68:	ldrh	r3, [r0, #20]
   35e6c:	add	r7, r1, #4
   35e70:	mov	r2, #13
   35e74:	cmp	r7, r3
   35e78:	bhi	35f38 <flatcc_verify_struct_as_nested_root@@Base+0x1a0>
   35e7c:	ldr	r2, [r0, #16]
   35e80:	add	r7, r2, r1
   35e84:	mov	r2, #12
   35e88:	tst	r7, #3
   35e8c:	bne	35f38 <flatcc_verify_struct_as_nested_root@@Base+0x1a0>
   35e90:	cmp	r7, #0
   35e94:	beq	35ff0 <flatcc_verify_struct_as_nested_root@@Base+0x258>
   35e98:	ldr	r1, [r0]
   35e9c:	ldr	r2, [r1, r7]
   35ea0:	add	r3, r2, r7
   35ea4:	mov	r2, #16
   35ea8:	cmp	r3, r7
   35eac:	bls	35f38 <flatcc_verify_struct_as_nested_root@@Base+0x1a0>
   35eb0:	ldr	r0, [r0, #4]
   35eb4:	add	r7, r3, #4
   35eb8:	cmp	r7, r0
   35ebc:	bhi	35f38 <flatcc_verify_struct_as_nested_root@@Base+0x1a0>
   35ec0:	ands	r7, r7, #3
   35ec4:	bne	35f38 <flatcc_verify_struct_as_nested_root@@Base+0x1a0>
   35ec8:	ldr	r1, [r1, r3]
   35ecc:	sub	r0, r0, #4
   35ed0:	mov	r2, #0
   35ed4:	sub	r0, r0, r3
   35ed8:	mul	r1, r1, r9
   35edc:	cmp	r0, r1
   35ee0:	movwcc	r2, #26
   35ee4:	mov	r0, r2
   35ee8:	sub	sp, fp, #24
   35eec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   35ef0:	cmp	r2, #0
   35ef4:	movwne	r2, #4
   35ef8:	mov	r0, r2
   35efc:	sub	sp, fp, #24
   35f00:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   35f04:	mov	r2, #0
   35f08:	cmp	r7, r6
   35f0c:	bcs	35f38 <flatcc_verify_struct_as_nested_root@@Base+0x1a0>
   35f10:	ldr	r1, [r0, #12]
   35f14:	uxtah	r1, r1, r3
   35f18:	ldrh	r1, [r1]
   35f1c:	mov	r2, #0
   35f20:	cmp	r1, #0
   35f24:	ldrne	r3, [r0]
   35f28:	ldrne	r0, [r0, #16]
   35f2c:	addne	r0, r3, r0
   35f30:	addsne	r0, r0, r1
   35f34:	bne	35f44 <flatcc_verify_struct_as_nested_root@@Base+0x1ac>
   35f38:	mov	r0, r2
   35f3c:	sub	sp, fp, #24
   35f40:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   35f44:	ldr	r7, [r0]
   35f48:	mov	r2, #5
   35f4c:	ldr	r8, [r7, r0]!
   35f50:	add	r6, r7, #4
   35f54:	tst	r6, #3
   35f58:	bne	35f38 <flatcc_verify_struct_as_nested_root@@Base+0x1a0>
   35f5c:	mov	r2, #6
   35f60:	cmn	r8, #9
   35f64:	bhi	35f38 <flatcc_verify_struct_as_nested_root@@Base+0x1a0>
   35f68:	mov	r2, #1
   35f6c:	cmp	r8, #8
   35f70:	bcc	35f38 <flatcc_verify_struct_as_nested_root@@Base+0x1a0>
   35f74:	cmp	r4, #0
   35f78:	beq	35fa8 <flatcc_verify_struct_as_nested_root@@Base+0x210>
   35f7c:	mov	r0, #0
   35f80:	mov	r1, r4
   35f84:	mov	r2, #4
   35f88:	str	r0, [sp]
   35f8c:	mov	r0, sp
   35f90:	bl	14efc <strncpy@plt>
   35f94:	ldr	r0, [sp]
   35f98:	cmp	r0, #0
   35f9c:	ldrne	r1, [r7, #8]
   35fa0:	cmpne	r1, r0
   35fa4:	bne	36000 <flatcc_verify_struct_as_nested_root@@Base+0x268>
   35fa8:	ldr	r0, [r6]
   35fac:	mov	r2, #18
   35fb0:	sub	r1, r0, #1
   35fb4:	cmp	r1, r8
   35fb8:	bcs	35f38 <flatcc_verify_struct_as_nested_root@@Base+0x1a0>
   35fbc:	ldr	r1, [fp, #8]
   35fc0:	mov	r2, #10
   35fc4:	adds	r1, r0, r1
   35fc8:	bcs	35f38 <flatcc_verify_struct_as_nested_root@@Base+0x1a0>
   35fcc:	mov	r2, #9
   35fd0:	cmp	r1, r8
   35fd4:	bhi	35f38 <flatcc_verify_struct_as_nested_root@@Base+0x1a0>
   35fd8:	sub	r1, r9, #1
   35fdc:	ands	r2, r0, r1
   35fe0:	movwne	r2, #11
   35fe4:	mov	r0, r2
   35fe8:	sub	sp, fp, #24
   35fec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   35ff0:	mov	r2, #0
   35ff4:	mov	r0, r2
   35ff8:	sub	sp, fp, #24
   35ffc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   36000:	mov	r0, #0
   36004:	mov	r1, r4
   36008:	mov	r2, #4
   3600c:	str	r0, [sp, #4]
   36010:	add	r0, sp, #4
   36014:	bl	14efc <strncpy@plt>
   36018:	ldr	r0, [sp, #4]
   3601c:	ldr	r1, [r7, #8]
   36020:	subs	r2, r1, r0
   36024:	movwne	r2, #2
   36028:	cmp	r0, #0
   3602c:	moveq	r2, r0
   36030:	mov	r0, r2
   36034:	sub	sp, fp, #24
   36038:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0003603c <flatcc_verify_table_as_nested_root@@Base>:
   3603c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   36040:	add	fp, sp, #24
   36044:	sub	sp, sp, #24
   36048:	mov	r4, r0
   3604c:	mov	r0, #4
   36050:	ldr	ip, [fp, #8]
   36054:	mov	r5, r3
   36058:	ldrh	r6, [r4, #22]
   3605c:	add	r3, r0, r1, lsl #1
   36060:	uxth	r7, r3
   36064:	cmp	r7, r6
   36068:	bcs	360ec <flatcc_verify_table_as_nested_root@@Base+0xb0>
   3606c:	ldr	r1, [r4, #12]
   36070:	ldrh	r0, [r1, r7]!
   36074:	cmp	r0, #0
   36078:	beq	360ec <flatcc_verify_table_as_nested_root@@Base+0xb0>
   3607c:	ldrh	r3, [r4, #20]
   36080:	add	r7, r0, #4
   36084:	cmp	r7, r3
   36088:	bhi	36104 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   3608c:	ldr	r3, [r4, #16]
   36090:	add	r0, r3, r0
   36094:	tst	r0, #3
   36098:	bne	36104 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   3609c:	cmp	r0, #0
   360a0:	beq	361c0 <flatcc_verify_table_as_nested_root@@Base+0x184>
   360a4:	ldr	r3, [r4]
   360a8:	ldr	r7, [r3, r0]
   360ac:	add	r7, r7, r0
   360b0:	cmp	r7, r0
   360b4:	bls	36104 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   360b8:	ldr	r0, [r4, #4]
   360bc:	add	r6, r7, #4
   360c0:	cmp	r6, r0
   360c4:	bhi	36104 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   360c8:	ands	r6, r6, #3
   360cc:	bne	36104 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   360d0:	ldr	r3, [r3, r7]
   360d4:	sub	r0, r0, #4
   360d8:	sub	r0, r0, r7
   360dc:	mul	r3, r3, ip
   360e0:	cmp	r0, r3
   360e4:	bcc	36104 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   360e8:	b	361c0 <flatcc_verify_table_as_nested_root@@Base+0x184>
   360ec:	cmp	r2, #0
   360f0:	beq	361ac <flatcc_verify_table_as_nested_root@@Base+0x170>
   360f4:	cmp	r7, r6
   360f8:	bcs	36198 <flatcc_verify_table_as_nested_root@@Base+0x15c>
   360fc:	ldr	r0, [r4, #12]
   36100:	uxtah	r1, r0, r3
   36104:	ldrh	r0, [r1]
   36108:	cmp	r0, #0
   3610c:	beq	36198 <flatcc_verify_table_as_nested_root@@Base+0x15c>
   36110:	ldrh	r1, [r4, #20]
   36114:	add	r3, r0, #4
   36118:	mov	r2, #13
   3611c:	cmp	r3, r1
   36120:	bhi	361e0 <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   36124:	ldr	r1, [r4, #16]
   36128:	mov	r2, #12
   3612c:	add	r0, r1, r0
   36130:	tst	r0, #3
   36134:	bne	361e0 <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   36138:	cmp	r0, #0
   3613c:	beq	3631c <flatcc_verify_table_as_nested_root@@Base+0x2e0>
   36140:	ldr	r1, [r4]
   36144:	ldr	r2, [r1, r0]
   36148:	add	r3, r2, r0
   3614c:	mov	r2, #16
   36150:	cmp	r3, r0
   36154:	bls	361e0 <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   36158:	ldr	r0, [r4, #4]
   3615c:	add	r7, r3, #4
   36160:	cmp	r7, r0
   36164:	bhi	361e0 <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   36168:	ands	r7, r7, #3
   3616c:	bne	361e0 <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   36170:	ldr	r1, [r1, r3]
   36174:	sub	r0, r0, #4
   36178:	mov	r2, #0
   3617c:	sub	r0, r0, r3
   36180:	mul	r1, r1, ip
   36184:	cmp	r0, r1
   36188:	movwcc	r2, #26
   3618c:	mov	r0, r2
   36190:	sub	sp, fp, #24
   36194:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   36198:	cmp	r2, #0
   3619c:	movwne	r2, #4
   361a0:	mov	r0, r2
   361a4:	sub	sp, fp, #24
   361a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   361ac:	mov	r2, #0
   361b0:	cmp	r7, r6
   361b4:	bcs	361e0 <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   361b8:	ldr	r0, [r4, #12]
   361bc:	uxtah	r1, r0, r3
   361c0:	ldrh	r0, [r1]
   361c4:	mov	r2, #0
   361c8:	cmp	r0, #0
   361cc:	ldrne	r1, [r4]
   361d0:	ldrne	r3, [r4, #16]
   361d4:	addne	r1, r1, r3
   361d8:	addsne	r0, r1, r0
   361dc:	bne	361ec <flatcc_verify_table_as_nested_root@@Base+0x1b0>
   361e0:	mov	r0, r2
   361e4:	sub	sp, fp, #24
   361e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   361ec:	ldr	r6, [r0]
   361f0:	mov	r2, #5
   361f4:	ldr	r8, [r6, r0]!
   361f8:	add	r7, r6, #4
   361fc:	tst	r7, #3
   36200:	bne	361e0 <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   36204:	mov	r2, #6
   36208:	cmn	r8, #9
   3620c:	bhi	361e0 <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   36210:	mov	r2, #1
   36214:	cmp	r8, #8
   36218:	bcc	361e0 <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   3621c:	cmp	r5, #0
   36220:	beq	36250 <flatcc_verify_table_as_nested_root@@Base+0x214>
   36224:	mov	r0, #0
   36228:	mov	r1, r5
   3622c:	mov	r2, #4
   36230:	str	r0, [sp]
   36234:	mov	r0, sp
   36238:	bl	14efc <strncpy@plt>
   3623c:	ldr	r0, [sp]
   36240:	cmp	r0, #0
   36244:	ldrne	r1, [r6, #8]
   36248:	cmpne	r1, r0
   3624c:	bne	3632c <flatcc_verify_table_as_nested_root@@Base+0x2f0>
   36250:	ldr	r1, [r4, #8]
   36254:	ldr	r0, [r7]
   36258:	subs	r1, r1, #1
   3625c:	str	r1, [sp, #8]
   36260:	beq	36364 <flatcc_verify_table_as_nested_root@@Base+0x328>
   36264:	mov	r2, #15
   36268:	tst	r0, #3
   3626c:	bne	361e0 <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   36270:	cmp	r0, #0
   36274:	beq	361e0 <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   36278:	add	r1, r0, #4
   3627c:	cmp	r1, r8
   36280:	bhi	361e0 <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   36284:	str	r0, [sp, #16]
   36288:	mov	r2, #29
   3628c:	ldr	r1, [r7, r0]
   36290:	sub	r6, r0, r1
   36294:	tst	r6, #-2147483647	; 0x80000001
   36298:	bne	361e0 <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   3629c:	add	r3, r6, #2
   362a0:	mov	r2, #27
   362a4:	cmp	r3, r8
   362a8:	bhi	361e0 <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   362ac:	mov	r1, r7
   362b0:	mov	r2, #30
   362b4:	ldrh	r5, [r1, r6]!
   362b8:	tst	r5, #1
   362bc:	strh	r5, [sp, #22]
   362c0:	bne	361e0 <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   362c4:	add	r6, r6, r5
   362c8:	cmp	r6, r8
   362cc:	bhi	361e0 <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   362d0:	mov	r2, #28
   362d4:	cmp	r5, #4
   362d8:	bcc	361e0 <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   362dc:	add	r2, r7, r3
   362e0:	sub	r0, r8, r0
   362e4:	ldrh	r3, [r2]
   362e8:	mov	r2, #20
   362ec:	cmp	r0, r3
   362f0:	strh	r3, [sp, #20]
   362f4:	bcc	361e0 <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   362f8:	ldr	r2, [fp, #12]
   362fc:	mov	r0, sp
   36300:	str	r1, [sp, #12]
   36304:	stm	sp, {r7, r8}
   36308:	blx	r2
   3630c:	mov	r2, r0
   36310:	mov	r0, r2
   36314:	sub	sp, fp, #24
   36318:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3631c:	mov	r2, #0
   36320:	mov	r0, r2
   36324:	sub	sp, fp, #24
   36328:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3632c:	mov	r0, #0
   36330:	mov	r1, r5
   36334:	mov	r2, #4
   36338:	str	r0, [sp]
   3633c:	mov	r0, sp
   36340:	bl	14efc <strncpy@plt>
   36344:	ldr	r1, [sp]
   36348:	ldr	r0, [r6, #8]
   3634c:	subs	r0, r0, r1
   36350:	movwne	r0, #2
   36354:	cmp	r1, #0
   36358:	moveq	r0, r1
   3635c:	sub	sp, fp, #24
   36360:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   36364:	mov	r2, #3
   36368:	mov	r0, r2
   3636c:	sub	sp, fp, #24
   36370:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00036374 <flatcc_verify_union_field@@Base>:
   36374:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36378:	add	fp, sp, #28
   3637c:	sub	sp, sp, #28
   36380:	ldrh	r4, [r0, #22]
   36384:	mov	r7, #2
   36388:	lsl	r5, r1, #1
   3638c:	add	r7, r7, r1, lsl #1
   36390:	uxth	r6, r7
   36394:	cmp	r6, r4
   36398:	bcs	36494 <flatcc_verify_union_field@@Base+0x120>
   3639c:	ldr	r6, [r0, #12]
   363a0:	uxtah	r1, r6, r7
   363a4:	ldrh	ip, [r1]
   363a8:	cmp	ip, #0
   363ac:	beq	36494 <flatcc_verify_union_field@@Base+0x120>
   363b0:	ldrh	r7, [r0, #20]
   363b4:	mov	r1, #13
   363b8:	cmp	ip, r7
   363bc:	bcs	364bc <flatcc_verify_union_field@@Base+0x148>
   363c0:	add	r7, r5, #4
   363c4:	ldr	lr, [r0]
   363c8:	ldr	r9, [r0, #16]
   363cc:	mov	r1, #1
   363d0:	uxth	sl, r7
   363d4:	cmp	sl, r4
   363d8:	uxtahcc	r1, r6, r7
   363dc:	ldrhcc	r1, [r1]
   363e0:	add	r8, lr, r9
   363e4:	ldrb	r5, [r8, ip]
   363e8:	clzcc	r1, r1
   363ec:	lsrcc	r1, r1, #5
   363f0:	cmp	r1, #0
   363f4:	moveq	r1, #24
   363f8:	cmpeq	r5, #0
   363fc:	beq	364bc <flatcc_verify_union_field@@Base+0x148>
   36400:	mov	r1, #0
   36404:	cmp	r5, #0
   36408:	beq	364bc <flatcc_verify_union_field@@Base+0x148>
   3640c:	cmp	sl, r4
   36410:	bcs	364e0 <flatcc_verify_union_field@@Base+0x16c>
   36414:	uxtah	r1, r6, r7
   36418:	ldrh	r4, [r1]
   3641c:	cmp	r4, #0
   36420:	beq	364e0 <flatcc_verify_union_field@@Base+0x16c>
   36424:	ldrh	r1, [r0, #20]
   36428:	add	r2, r4, #4
   3642c:	cmp	r2, r1
   36430:	mov	r1, #13
   36434:	bhi	364bc <flatcc_verify_union_field@@Base+0x148>
   36438:	add	r2, r9, r4
   3643c:	mov	r1, #12
   36440:	tst	r2, #3
   36444:	bne	364bc <flatcc_verify_union_field@@Base+0x148>
   36448:	cmp	r2, #0
   3644c:	mov	r1, #0
   36450:	beq	364bc <flatcc_verify_union_field@@Base+0x148>
   36454:	str	lr, [sp, #4]
   36458:	ldr	r1, [r0, #4]
   3645c:	ldr	r0, [r0, #8]
   36460:	str	r1, [sp, #8]
   36464:	str	r2, [sp, #20]
   36468:	str	r0, [sp, #12]
   3646c:	ldr	r0, [lr, r2]
   36470:	str	r0, [sp, #24]
   36474:	ldrb	r0, [r8, ip]
   36478:	strb	r0, [sp, #16]
   3647c:	add	r0, sp, #4
   36480:	blx	r3
   36484:	mov	r1, r0
   36488:	mov	r0, r1
   3648c:	sub	sp, fp, #28
   36490:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36494:	add	r1, r5, #4
   36498:	uxth	r3, r1
   3649c:	cmp	r3, r4
   364a0:	bcs	364c8 <flatcc_verify_union_field@@Base+0x154>
   364a4:	ldr	r0, [r0, #12]
   364a8:	uxtah	r0, r0, r1
   364ac:	mov	r1, #23
   364b0:	ldrh	r0, [r0]
   364b4:	cmp	r0, #0
   364b8:	beq	364c8 <flatcc_verify_union_field@@Base+0x154>
   364bc:	mov	r0, r1
   364c0:	sub	sp, fp, #28
   364c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   364c8:	cmp	r2, #0
   364cc:	movwne	r2, #21
   364d0:	mov	r1, r2
   364d4:	mov	r0, r1
   364d8:	sub	sp, fp, #28
   364dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   364e0:	cmp	r2, #0
   364e4:	movwne	r2, #4
   364e8:	mov	r1, r2
   364ec:	mov	r0, r1
   364f0:	sub	sp, fp, #28
   364f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000364f8 <flatcc_verify_union_vector_field@@Base>:
   364f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   364fc:	add	fp, sp, #28
   36500:	sub	sp, sp, #28
   36504:	mov	r9, r3
   36508:	mov	r3, #2
   3650c:	lsl	lr, r1, #1
   36510:	add	r6, r3, r1, lsl #1
   36514:	ldrh	r3, [r0, #22]
   36518:	uxth	r4, r6
   3651c:	cmp	r4, r3
   36520:	bcs	36538 <flatcc_verify_union_vector_field@@Base+0x40>
   36524:	ldr	r7, [r0, #12]
   36528:	mov	r1, r7
   3652c:	ldrh	r5, [r1, r4]!
   36530:	cmp	r5, #0
   36534:	bne	36584 <flatcc_verify_union_vector_field@@Base+0x8c>
   36538:	add	r1, lr, #4
   3653c:	uxth	r7, r1
   36540:	cmp	r7, r3
   36544:	bcs	365f0 <flatcc_verify_union_vector_field@@Base+0xf8>
   36548:	cmp	r2, #0
   3654c:	beq	36568 <flatcc_verify_union_vector_field@@Base+0x70>
   36550:	ldr	r7, [r0, #12]
   36554:	uxtah	r1, r7, r1
   36558:	ldrh	r7, [r1]
   3655c:	mov	r1, #22
   36560:	cmp	r7, #0
   36564:	beq	36830 <flatcc_verify_union_vector_field@@Base+0x338>
   36568:	cmp	r4, r3
   3656c:	bcs	36600 <flatcc_verify_union_vector_field@@Base+0x108>
   36570:	ldr	r7, [r0, #12]
   36574:	mov	r1, r7
   36578:	ldrh	r5, [r1, r4]!
   3657c:	cmp	r5, #0
   36580:	beq	36600 <flatcc_verify_union_vector_field@@Base+0x108>
   36584:	ldrh	r6, [r0, #20]
   36588:	add	r4, r5, #4
   3658c:	cmp	r4, r6
   36590:	bhi	36618 <flatcc_verify_union_vector_field@@Base+0x120>
   36594:	ldr	r6, [r0, #16]
   36598:	add	r4, r6, r5
   3659c:	tst	r4, #3
   365a0:	bne	36618 <flatcc_verify_union_vector_field@@Base+0x120>
   365a4:	cmp	r4, #0
   365a8:	beq	366bc <flatcc_verify_union_vector_field@@Base+0x1c4>
   365ac:	ldr	r6, [r0]
   365b0:	ldr	r5, [r6, r4]
   365b4:	add	r5, r5, r4
   365b8:	cmp	r5, r4
   365bc:	bls	36618 <flatcc_verify_union_vector_field@@Base+0x120>
   365c0:	ldr	ip, [r0, #4]
   365c4:	add	r4, r5, #4
   365c8:	cmp	r4, ip
   365cc:	bhi	36618 <flatcc_verify_union_vector_field@@Base+0x120>
   365d0:	ands	r4, r4, #3
   365d4:	bne	36618 <flatcc_verify_union_vector_field@@Base+0x120>
   365d8:	ldr	r4, [r6, r5]
   365dc:	sub	r6, ip, #4
   365e0:	sub	r6, r6, r5
   365e4:	cmp	r6, r4
   365e8:	bcc	36618 <flatcc_verify_union_vector_field@@Base+0x120>
   365ec:	b	366bc <flatcc_verify_union_vector_field@@Base+0x1c4>
   365f0:	mov	r1, #22
   365f4:	cmp	r2, #0
   365f8:	bne	36830 <flatcc_verify_union_vector_field@@Base+0x338>
   365fc:	b	36568 <flatcc_verify_union_vector_field@@Base+0x70>
   36600:	cmp	r2, #0
   36604:	beq	366a8 <flatcc_verify_union_vector_field@@Base+0x1b0>
   36608:	cmp	r4, r3
   3660c:	bcs	36824 <flatcc_verify_union_vector_field@@Base+0x32c>
   36610:	ldr	r1, [r0, #12]
   36614:	uxtah	r1, r1, r6
   36618:	ldrh	r3, [r1]
   3661c:	cmp	r3, #0
   36620:	beq	36824 <flatcc_verify_union_vector_field@@Base+0x32c>
   36624:	ldrh	r2, [r0, #20]
   36628:	add	r7, r3, #4
   3662c:	mov	r1, #13
   36630:	cmp	r7, r2
   36634:	bhi	36830 <flatcc_verify_union_vector_field@@Base+0x338>
   36638:	ldr	r1, [r0, #16]
   3663c:	add	r7, r1, r3
   36640:	mov	r1, #12
   36644:	tst	r7, #3
   36648:	bne	36830 <flatcc_verify_union_vector_field@@Base+0x338>
   3664c:	cmp	r7, #0
   36650:	beq	3683c <flatcc_verify_union_vector_field@@Base+0x344>
   36654:	ldr	r2, [r0]
   36658:	ldr	r1, [r2, r7]
   3665c:	add	r3, r1, r7
   36660:	mov	r1, #16
   36664:	cmp	r3, r7
   36668:	bls	36830 <flatcc_verify_union_vector_field@@Base+0x338>
   3666c:	ldr	r0, [r0, #4]
   36670:	add	r7, r3, #4
   36674:	cmp	r7, r0
   36678:	bhi	36830 <flatcc_verify_union_vector_field@@Base+0x338>
   3667c:	ands	r7, r7, #3
   36680:	bne	36830 <flatcc_verify_union_vector_field@@Base+0x338>
   36684:	ldr	r2, [r2, r3]
   36688:	sub	r0, r0, #4
   3668c:	mov	r1, #0
   36690:	sub	r0, r0, r3
   36694:	cmp	r0, r2
   36698:	movwcc	r1, #26
   3669c:	mov	r0, r1
   366a0:	sub	sp, fp, #28
   366a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   366a8:	mov	r1, #0
   366ac:	cmp	r4, r3
   366b0:	bcs	36830 <flatcc_verify_union_vector_field@@Base+0x338>
   366b4:	ldr	r7, [r0, #12]
   366b8:	uxtah	r1, r7, r6
   366bc:	ldrh	r5, [r1]
   366c0:	mov	r1, #0
   366c4:	cmp	r5, #0
   366c8:	ldrne	r8, [r0]
   366cc:	ldrne	r6, [r0, #16]
   366d0:	addne	r4, r8, r6
   366d4:	addsne	ip, r4, r5
   366d8:	beq	36830 <flatcc_verify_union_vector_field@@Base+0x338>
   366dc:	add	r1, lr, #4
   366e0:	uxth	r5, r1
   366e4:	cmp	r5, r3
   366e8:	bcs	36824 <flatcc_verify_union_vector_field@@Base+0x32c>
   366ec:	uxtah	r1, r7, r1
   366f0:	ldrh	r3, [r1]
   366f4:	cmp	r3, #0
   366f8:	beq	36824 <flatcc_verify_union_vector_field@@Base+0x32c>
   366fc:	ldrh	r2, [r0, #20]
   36700:	add	r7, r3, #4
   36704:	mov	r1, #13
   36708:	cmp	r7, r2
   3670c:	bhi	36830 <flatcc_verify_union_vector_field@@Base+0x338>
   36710:	add	r4, r6, r3
   36714:	mov	r1, #12
   36718:	tst	r4, #3
   3671c:	bne	36830 <flatcc_verify_union_vector_field@@Base+0x338>
   36720:	cmp	r4, #0
   36724:	mov	r1, #0
   36728:	beq	36830 <flatcc_verify_union_vector_field@@Base+0x338>
   3672c:	ldr	r7, [r0, #8]
   36730:	cmp	r7, #1
   36734:	blt	3684c <flatcc_verify_union_vector_field@@Base+0x354>
   36738:	ldr	r2, [r8, r4]
   3673c:	mov	r1, #16
   36740:	add	r5, r2, r4
   36744:	cmp	r5, r4
   36748:	bls	36830 <flatcc_verify_union_vector_field@@Base+0x338>
   3674c:	ldr	r0, [r0, #4]
   36750:	add	r4, r5, #4
   36754:	cmp	r4, r0
   36758:	bhi	36830 <flatcc_verify_union_vector_field@@Base+0x338>
   3675c:	ands	r4, r4, #3
   36760:	bne	36830 <flatcc_verify_union_vector_field@@Base+0x338>
   36764:	ldr	r4, [r8, r5]
   36768:	mov	r1, #25
   3676c:	cmn	r4, #-1073741823	; 0xc0000001
   36770:	bhi	36830 <flatcc_verify_union_vector_field@@Base+0x338>
   36774:	sub	r1, r0, #4
   36778:	sub	r5, r1, r5
   3677c:	mov	r1, #26
   36780:	cmp	r5, r4, lsl #2
   36784:	bcc	36830 <flatcc_verify_union_vector_field@@Base+0x338>
   36788:	ldr	r5, [ip]
   3678c:	mov	r1, #34	; 0x22
   36790:	ldr	sl, [r5, ip]!
   36794:	cmp	r4, sl
   36798:	bne	36830 <flatcc_verify_union_vector_field@@Base+0x338>
   3679c:	cmp	sl, #0
   367a0:	sub	r1, r7, #1
   367a4:	str	r0, [sp, #8]
   367a8:	str	r8, [sp, #4]
   367ac:	str	r1, [sp, #12]
   367b0:	beq	3685c <flatcc_verify_union_vector_field@@Base+0x364>
   367b4:	add	r0, r2, r6
   367b8:	add	r7, r5, #4
   367bc:	mov	r5, #0
   367c0:	add	r4, sp, #4
   367c4:	add	r0, r0, r3
   367c8:	add	r6, r0, #4
   367cc:	ldr	r1, [r8, r6]
   367d0:	ldrb	r0, [r7, r5]
   367d4:	cmp	r1, #0
   367d8:	beq	36804 <flatcc_verify_union_vector_field@@Base+0x30c>
   367dc:	cmp	r0, #0
   367e0:	beq	3686c <flatcc_verify_union_vector_field@@Base+0x374>
   367e4:	str	r6, [sp, #20]
   367e8:	strb	r0, [sp, #16]
   367ec:	mov	r0, r4
   367f0:	str	r1, [sp, #24]
   367f4:	blx	r9
   367f8:	cmp	r0, #0
   367fc:	beq	3680c <flatcc_verify_union_vector_field@@Base+0x314>
   36800:	b	3687c <flatcc_verify_union_vector_field@@Base+0x384>
   36804:	cmp	r0, #0
   36808:	bne	36894 <flatcc_verify_union_vector_field@@Base+0x39c>
   3680c:	add	r5, r5, #1
   36810:	add	r6, r6, #4
   36814:	mov	r1, #0
   36818:	cmp	r5, sl
   3681c:	bcc	367cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   36820:	b	36830 <flatcc_verify_union_vector_field@@Base+0x338>
   36824:	cmp	r2, #0
   36828:	movwne	r2, #4
   3682c:	mov	r1, r2
   36830:	mov	r0, r1
   36834:	sub	sp, fp, #28
   36838:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3683c:	mov	r1, #0
   36840:	mov	r0, r1
   36844:	sub	sp, fp, #28
   36848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3684c:	mov	r1, #3
   36850:	mov	r0, r1
   36854:	sub	sp, fp, #28
   36858:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3685c:	mov	r1, #0
   36860:	mov	r0, r1
   36864:	sub	sp, fp, #28
   36868:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3686c:	mov	r1, #33	; 0x21
   36870:	mov	r0, r1
   36874:	sub	sp, fp, #28
   36878:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3687c:	add	r0, sp, #4
   36880:	blx	r9
   36884:	mov	r1, r0
   36888:	mov	r0, r1
   3688c:	sub	sp, fp, #28
   36890:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36894:	mov	r1, #32
   36898:	mov	r0, r1
   3689c:	sub	sp, fp, #28
   368a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   368a4:	andeq	r0, r0, r0

000368a8 <grisu3_diy_fp_encode_double@@Base>:
   368a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   368ac:	add	fp, sp, #28
   368b0:	sub	sp, sp, #12
   368b4:	ldr	lr, [fp, #8]
   368b8:	orr	r7, r0, r1
   368bc:	cmp	lr, #0
   368c0:	movwne	lr, #4
   368c4:	cmp	r7, #0
   368c8:	beq	36cc0 <grisu3_diy_fp_encode_double@@Base+0x418>
   368cc:	mov	ip, #0
   368d0:	mov	r5, #0
   368d4:	cmp	ip, r1, lsr #22
   368d8:	bne	368f8 <grisu3_diy_fp_encode_double@@Base+0x50>
   368dc:	mov	ip, #0
   368e0:	lsl	r1, r1, #10
   368e4:	sub	ip, ip, #10
   368e8:	orr	r1, r1, r0, lsr #22
   368ec:	lsl	r0, r0, #10
   368f0:	cmp	r1, #4194304	; 0x400000
   368f4:	bcc	368e0 <grisu3_diy_fp_encode_double@@Base+0x38>
   368f8:	sub	r6, r2, r3
   368fc:	mvn	r2, #0
   36900:	cmp	r1, #0
   36904:	blt	3692c <grisu3_diy_fp_encode_double@@Base+0x84>
   36908:	lsl	r1, r1, #1
   3690c:	lsl	r4, r0, #1
   36910:	sub	ip, ip, #1
   36914:	orr	r1, r1, r0, lsr #31
   36918:	subs	r0, r2, r0, lsl #1
   3691c:	sbcs	r0, r2, r1
   36920:	mov	r0, r4
   36924:	blt	36908 <grisu3_diy_fp_encode_double@@Base+0x60>
   36928:	b	36930 <grisu3_diy_fp_encode_double@@Base+0x88>
   3692c:	mov	r4, r0
   36930:	cmn	r6, #348	; 0x15c
   36934:	blt	36ce0 <grisu3_diy_fp_encode_double@@Base+0x438>
   36938:	cmp	r6, #348	; 0x15c
   3693c:	bge	36d00 <grisu3_diy_fp_encode_double@@Base+0x458>
   36940:	add	r0, r6, #348	; 0x15c
   36944:	movw	r9, #56576	; 0xdd00
   36948:	asr	r5, r0, #31
   3694c:	movt	r9, #4
   36950:	add	r0, r0, r5, lsr #29
   36954:	mvn	r5, #15
   36958:	and	r0, r5, r0, lsl #1
   3695c:	ldr	r5, [r9, r0]!
   36960:	ldrsh	r0, [r9, #10]
   36964:	cmp	r6, r0
   36968:	blt	36d20 <grisu3_diy_fp_encode_double@@Base+0x478>
   3696c:	add	r7, r0, #8
   36970:	cmp	r7, r6
   36974:	ble	36d40 <grisu3_diy_fp_encode_double@@Base+0x498>
   36978:	rsb	r7, ip, #0
   3697c:	cmp	r6, r0
   36980:	lsl	r8, lr, r7
   36984:	beq	36a10 <grisu3_diy_fp_encode_double@@Base+0x168>
   36988:	mvn	r0, r0
   3698c:	str	r8, [sp, #4]
   36990:	str	r3, [sp, #8]
   36994:	add	sl, r6, r0
   36998:	cmp	sl, #7
   3699c:	bcs	36d60 <grisu3_diy_fp_encode_double@@Base+0x4b8>
   369a0:	movw	r0, #56464	; 0xdc90
   369a4:	movt	r0, #4
   369a8:	ldr	r7, [r0, sl, lsl #4]!
   369ac:	ldr	r8, [r0, #4]
   369b0:	ldr	r0, [r0, #8]
   369b4:	umull	lr, r6, r7, r1
   369b8:	str	r0, [sp]
   369bc:	umull	r3, r0, r8, r4
   369c0:	umaal	r6, r0, r8, r1
   369c4:	umull	r1, r4, r7, r4
   369c8:	ldr	r8, [sp, #4]
   369cc:	mov	r1, #0
   369d0:	adds	r7, lr, r4
   369d4:	adc	r1, r1, #0
   369d8:	adds	r3, r7, r3
   369dc:	adc	r1, r1, #0
   369e0:	adds	r3, r3, #-2147483648	; 0x80000000
   369e4:	adc	r1, r1, #0
   369e8:	adds	r4, r6, r1
   369ec:	adc	r1, r0, #0
   369f0:	ldr	r0, [sp, #8]
   369f4:	add	r0, r0, sl
   369f8:	add	r0, r0, #1
   369fc:	cmp	r0, #19
   36a00:	ldr	r0, [sp]
   36a04:	addgt	r8, r8, #4
   36a08:	add	r0, ip, r0
   36a0c:	add	ip, r0, #64	; 0x40
   36a10:	ldr	r0, [r9, #4]
   36a14:	umull	r3, r6, r4, r5
   36a18:	mov	lr, #0
   36a1c:	umull	r3, r7, r1, r5
   36a20:	adds	r3, r3, r6
   36a24:	adc	r6, lr, #0
   36a28:	umull	r4, r5, r4, r0
   36a2c:	adds	r3, r3, r4
   36a30:	umaal	r7, r5, r1, r0
   36a34:	adc	r4, r6, #0
   36a38:	adds	r3, r3, #-2147483648	; 0x80000000
   36a3c:	mov	r6, #9
   36a40:	adc	r3, r4, #0
   36a44:	adds	r4, r7, r3
   36a48:	adc	r3, r5, #0
   36a4c:	cmp	r8, #0
   36a50:	orr	r0, r4, r3
   36a54:	movweq	r6, #8
   36a58:	cmp	r0, #0
   36a5c:	beq	36cc0 <grisu3_diy_fp_encode_double@@Base+0x418>
   36a60:	ldrsh	r0, [r9, #8]
   36a64:	cmp	lr, r3, lsr #22
   36a68:	add	r0, r0, ip
   36a6c:	add	r5, r0, #64	; 0x40
   36a70:	bne	36aa8 <grisu3_diy_fp_encode_double@@Base+0x200>
   36a74:	mov	lr, #0
   36a78:	mov	r1, r5
   36a7c:	lsl	r0, r3, #10
   36a80:	sub	r1, r1, #10
   36a84:	orr	r3, r0, r4, lsr #22
   36a88:	lsl	r4, r4, #10
   36a8c:	cmp	r3, #4194304	; 0x400000
   36a90:	bcc	36a7c <grisu3_diy_fp_encode_double@@Base+0x1d4>
   36a94:	subs	r0, r2, r4
   36a98:	add	r7, r6, r8
   36a9c:	sbcs	r0, r2, r3
   36aa0:	blt	36abc <grisu3_diy_fp_encode_double@@Base+0x214>
   36aa4:	b	36ae0 <grisu3_diy_fp_encode_double@@Base+0x238>
   36aa8:	mov	r1, r5
   36aac:	subs	r0, r2, r4
   36ab0:	add	r7, r6, r8
   36ab4:	sbcs	r0, r2, r3
   36ab8:	bge	36ae0 <grisu3_diy_fp_encode_double@@Base+0x238>
   36abc:	lsl	r0, r3, #1
   36ac0:	subs	r6, r2, r4, lsl #1
   36ac4:	sub	r1, r1, #1
   36ac8:	orr	r3, r0, r4, lsr #31
   36acc:	lsl	r0, r4, #1
   36ad0:	sbcs	r6, r2, r3
   36ad4:	mov	r4, r0
   36ad8:	blt	36abc <grisu3_diy_fp_encode_double@@Base+0x214>
   36adc:	b	36ae4 <grisu3_diy_fp_encode_double@@Base+0x23c>
   36ae0:	mov	r0, r4
   36ae4:	movw	ip, #64462	; 0xfbce
   36ae8:	sub	r2, r5, r1
   36aec:	mov	r5, #0
   36af0:	movt	ip, #65535	; 0xffff
   36af4:	lsl	lr, r7, r2
   36af8:	sub	r2, ip, #1
   36afc:	cmp	r1, r2
   36b00:	bgt	36b54 <grisu3_diy_fp_encode_double@@Base+0x2ac>
   36b04:	mvn	r2, #1136	; 0x470
   36b08:	mov	r5, #64	; 0x40
   36b0c:	cmp	r1, r2
   36b10:	blt	36b20 <grisu3_diy_fp_encode_double@@Base+0x278>
   36b14:	sub	r5, ip, r1
   36b18:	cmp	r5, #61	; 0x3d
   36b1c:	blt	36b54 <grisu3_diy_fp_encode_double@@Base+0x2ac>
   36b20:	sub	r2, r5, #62	; 0x3e
   36b24:	mov	r4, #9
   36b28:	add	lr, r4, lr, asr r2
   36b2c:	lsr	r0, r0, r2
   36b30:	rsb	r4, r5, #94	; 0x5e
   36b34:	add	r1, r2, r1
   36b38:	orr	r0, r0, r3, lsl r4
   36b3c:	sub	r4, r5, #94	; 0x5e
   36b40:	mov	r5, #62	; 0x3e
   36b44:	cmp	r4, #0
   36b48:	lsrge	r0, r3, r4
   36b4c:	lsr	r3, r3, r2
   36b50:	movwge	r3, #0
   36b54:	lsr	r2, r0, r5
   36b58:	rsb	r4, r5, #32
   36b5c:	lsr	r6, r3, r5
   36b60:	add	r1, r1, r5
   36b64:	orr	r2, r2, r3, lsl r4
   36b68:	sub	r4, r5, #32
   36b6c:	cmp	r4, #0
   36b70:	lsrge	r2, r3, r4
   36b74:	sub	r3, r5, #1
   36b78:	mov	r4, #1
   36b7c:	movwge	r6, #0
   36b80:	lsl	r4, r4, r3
   36b84:	sub	r3, r5, #33	; 0x21
   36b88:	cmp	r3, #0
   36b8c:	movwge	r4, #0
   36b90:	add	sl, lr, r4, lsl #3
   36b94:	cmp	r5, sl
   36b98:	blt	36bb8 <grisu3_diy_fp_encode_double@@Base+0x310>
   36b9c:	adds	r2, r2, #1
   36ba0:	adc	r6, r6, #0
   36ba4:	tst	r6, #2097152	; 0x200000
   36ba8:	beq	36bb8 <grisu3_diy_fp_encode_double@@Base+0x310>
   36bac:	lsrs	r6, r6, #1
   36bb0:	add	r1, r1, #1
   36bb4:	rrx	r2, r2
   36bb8:	and	r0, r4, r0
   36bbc:	cmp	r6, #2097152	; 0x200000
   36bc0:	bcc	36be4 <grisu3_diy_fp_encode_double@@Base+0x33c>
   36bc4:	mov	r3, #0
   36bc8:	lsrs	r7, r6, #1
   36bcc:	add	r1, r1, #1
   36bd0:	rrx	r2, r2
   36bd4:	cmp	r3, r6, lsr #22
   36bd8:	mov	r6, r7
   36bdc:	bne	36bc8 <grisu3_diy_fp_encode_double@@Base+0x320>
   36be0:	b	36be8 <grisu3_diy_fp_encode_double@@Base+0x340>
   36be4:	mov	r7, r6
   36be8:	ldr	r8, [fp, #12]
   36bec:	lsl	r9, r4, #3
   36bf0:	lsl	r0, r0, #3
   36bf4:	vmov.i32	d16, #0	; 0x00000000
   36bf8:	cmp	r1, ip
   36bfc:	blt	36c94 <grisu3_diy_fp_encode_double@@Base+0x3ec>
   36c00:	and	r3, r7, #1048576	; 0x100000
   36c04:	mov	r4, #1
   36c08:	cmp	r1, ip
   36c0c:	eor	r5, r4, r3, lsr #20
   36c10:	beq	36c54 <grisu3_diy_fp_encode_double@@Base+0x3ac>
   36c14:	cmp	r3, #0
   36c18:	bne	36c54 <grisu3_diy_fp_encode_double@@Base+0x3ac>
   36c1c:	mov	r3, #1
   36c20:	lsl	r4, r7, #1
   36c24:	and	r7, r7, #524288	; 0x80000
   36c28:	cmn	r1, #1072	; 0x430
   36c2c:	orr	r6, r4, r2, lsr #31
   36c30:	eor	r5, r3, r7, lsr #19
   36c34:	lsl	r2, r2, #1
   36c38:	sub	r4, r1, #1
   36c3c:	blt	36c5c <grisu3_diy_fp_encode_double@@Base+0x3b4>
   36c40:	cmp	r7, #0
   36c44:	mov	r7, r6
   36c48:	mov	r1, r4
   36c4c:	beq	36c20 <grisu3_diy_fp_encode_double@@Base+0x378>
   36c50:	b	36c5c <grisu3_diy_fp_encode_double@@Base+0x3b4>
   36c54:	mov	r4, r1
   36c58:	mov	r6, r7
   36c5c:	cmp	r4, ip
   36c60:	bne	36c74 <grisu3_diy_fp_encode_double@@Base+0x3cc>
   36c64:	mov	r1, #0
   36c68:	cmp	r5, #0
   36c6c:	mov	r3, #0
   36c70:	bne	36c84 <grisu3_diy_fp_encode_double@@Base+0x3dc>
   36c74:	movw	r1, #0
   36c78:	movt	r1, #17200	; 0x4330
   36c7c:	add	r3, r1, r4, lsl #20
   36c80:	mov	r1, #0
   36c84:	bfc	r6, #20, #12
   36c88:	orr	r1, r1, r2
   36c8c:	orr	r2, r3, r6
   36c90:	vmov	d16, r1, r2
   36c94:	cmp	r0, sl
   36c98:	mov	r2, #0
   36c9c:	sub	r3, r9, lr
   36ca0:	mov	r1, #0
   36ca4:	vstr	d16, [r8]
   36ca8:	movwge	r2, #1
   36cac:	cmp	r3, r0
   36cb0:	movwge	r1, #1
   36cb4:	orr	r0, r2, r1
   36cb8:	sub	sp, fp, #28
   36cbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36cc0:	movw	r0, #59938	; 0xea22
   36cc4:	movw	r1, #59947	; 0xea2b
   36cc8:	movw	r3, #60033	; 0xea81
   36ccc:	mov	r2, #260	; 0x104
   36cd0:	movt	r0, #4
   36cd4:	movt	r1, #4
   36cd8:	movt	r3, #4
   36cdc:	bl	14f44 <__assert_fail@plt>
   36ce0:	movw	r0, #60090	; 0xeaba
   36ce4:	movw	r1, #58648	; 0xe518
   36ce8:	movw	r3, #60121	; 0xead9
   36cec:	mov	r2, #80	; 0x50
   36cf0:	movt	r0, #4
   36cf4:	movt	r1, #4
   36cf8:	movt	r3, #4
   36cfc:	bl	14f44 <__assert_fail@plt>
   36d00:	movw	r0, #60178	; 0xeb12
   36d04:	movw	r1, #58648	; 0xe518
   36d08:	movw	r3, #60121	; 0xead9
   36d0c:	mov	r2, #81	; 0x51
   36d10:	movt	r0, #4
   36d14:	movt	r1, #4
   36d18:	movt	r3, #4
   36d1c:	bl	14f44 <__assert_fail@plt>
   36d20:	movw	r0, #60221	; 0xeb3d
   36d24:	movw	r1, #58648	; 0xe518
   36d28:	movw	r3, #60121	; 0xead9
   36d2c:	mov	r2, #88	; 0x58
   36d30:	movt	r0, #4
   36d34:	movt	r1, #4
   36d38:	movt	r3, #4
   36d3c:	bl	14f44 <__assert_fail@plt>
   36d40:	movw	r0, #60236	; 0xeb4c
   36d44:	movw	r1, #58648	; 0xe518
   36d48:	movw	r3, #60121	; 0xead9
   36d4c:	mov	r2, #89	; 0x59
   36d50:	movt	r0, #4
   36d54:	movt	r1, #4
   36d58:	movt	r3, #4
   36d5c:	bl	14f44 <__assert_fail@plt>
   36d60:	movw	r0, #58620	; 0xe4fc
   36d64:	movw	r1, #58648	; 0xe518
   36d68:	movw	r3, #58735	; 0xe56f
   36d6c:	mov	r2, #185	; 0xb9
   36d70:	movt	r0, #4
   36d74:	movt	r1, #4
   36d78:	movt	r3, #4
   36d7c:	bl	14f44 <__assert_fail@plt>

00036d80 <flatcc_json_parser_error_string@@Base>:
   36d80:	cmp	r0, #34	; 0x22
   36d84:	movwhi	r0, #56282	; 0xdbda
   36d88:	movthi	r0, #4
   36d8c:	bxhi	lr
   36d90:	movw	r1, #58480	; 0xe470
   36d94:	movt	r1, #4
   36d98:	ldr	r0, [r1, r0, lsl #2]
   36d9c:	bx	lr

00036da0 <flatcc_json_parser_set_error@@Base>:
   36da0:	mov	ip, r2
   36da4:	ldr	r2, [r0, #24]
   36da8:	cmp	r2, #0
   36dac:	beq	36db8 <flatcc_json_parser_set_error@@Base+0x18>
   36db0:	mov	r0, ip
   36db4:	bx	lr
   36db8:	str	r1, [r0, #36]	; 0x24
   36dbc:	add	r1, r1, #1
   36dc0:	ldr	r2, [r0, #4]
   36dc4:	sub	r1, r1, r2
   36dc8:	str	r1, [r0, #20]
   36dcc:	str	r3, [r0, #24]
   36dd0:	mov	r0, ip
   36dd4:	bx	lr

00036dd8 <flatcc_json_parser_string_part@@Base>:
   36dd8:	cmp	r1, r2
   36ddc:	beq	36e08 <flatcc_json_parser_string_part@@Base+0x30>
   36de0:	ldrb	r3, [r1]
   36de4:	cmp	r3, #32
   36de8:	bcc	36e3c <flatcc_json_parser_string_part@@Base+0x64>
   36dec:	cmp	r3, #34	; 0x22
   36df0:	cmpne	r3, #92	; 0x5c
   36df4:	beq	36e34 <flatcc_json_parser_string_part@@Base+0x5c>
   36df8:	add	r1, r1, #1
   36dfc:	cmp	r2, r1
   36e00:	bne	36de0 <flatcc_json_parser_string_part@@Base+0x8>
   36e04:	mov	r1, r2
   36e08:	ldr	r3, [r0, #24]
   36e0c:	cmp	r3, #0
   36e10:	bne	36e30 <flatcc_json_parser_string_part@@Base+0x58>
   36e14:	mov	ip, #20
   36e18:	str	r1, [r0, #36]	; 0x24
   36e1c:	add	r1, r1, #1
   36e20:	ldr	r3, [r0, #4]
   36e24:	sub	r1, r1, r3
   36e28:	str	r1, [r0, #20]
   36e2c:	str	ip, [r0, #24]
   36e30:	mov	r1, r2
   36e34:	mov	r0, r1
   36e38:	bx	lr
   36e3c:	ldr	r3, [r0, #24]
   36e40:	cmp	r3, #0
   36e44:	bne	36e30 <flatcc_json_parser_string_part@@Base+0x58>
   36e48:	mov	ip, #17
   36e4c:	b	36e18 <flatcc_json_parser_string_part@@Base+0x40>

00036e50 <flatcc_json_parser_space_ext@@Base>:
   36e50:	mov	ip, r2
   36e54:	cmp	r1, r2
   36e58:	bne	36f34 <flatcc_json_parser_space_ext@@Base+0xe4>
   36e5c:	b	36f5c <flatcc_json_parser_space_ext@@Base+0x10c>
   36e60:	add	r1, r1, #1
   36e64:	str	r1, [r0, #4]
   36e68:	ldr	r2, [r0, #16]
   36e6c:	add	r2, r2, #1
   36e70:	str	r2, [r0, #16]
   36e74:	cmp	r1, ip
   36e78:	bne	36e8c <flatcc_json_parser_space_ext@@Base+0x3c>
   36e7c:	b	36f5c <flatcc_json_parser_space_ext@@Base+0x10c>
   36e80:	add	r1, r1, #1
   36e84:	cmp	r1, ip
   36e88:	beq	36f5c <flatcc_json_parser_space_ext@@Base+0x10c>
   36e8c:	ldrb	r3, [r1]
   36e90:	cmp	r3, #32
   36e94:	movhi	r0, r1
   36e98:	bxhi	lr
   36e9c:	sub	r3, r3, #9
   36ea0:	cmp	r3, #23
   36ea4:	bhi	36f50 <flatcc_json_parser_space_ext@@Base+0x100>
   36ea8:	add	r2, pc, #0
   36eac:	ldr	pc, [r2, r3, lsl #2]
   36eb0:	andeq	r6, r3, r0, lsl #29
   36eb4:	andeq	r6, r3, r0, ror #28
   36eb8:	andeq	r6, r3, r0, asr pc
   36ebc:	andeq	r6, r3, r0, asr pc
   36ec0:	andeq	r6, r3, r0, lsl pc
   36ec4:	andeq	r6, r3, r0, asr pc
   36ec8:	andeq	r6, r3, r0, asr pc
   36ecc:	andeq	r6, r3, r0, asr pc
   36ed0:	andeq	r6, r3, r0, asr pc
   36ed4:	andeq	r6, r3, r0, asr pc
   36ed8:	andeq	r6, r3, r0, asr pc
   36edc:	andeq	r6, r3, r0, asr pc
   36ee0:	andeq	r6, r3, r0, asr pc
   36ee4:	andeq	r6, r3, r0, asr pc
   36ee8:	andeq	r6, r3, r0, asr pc
   36eec:	andeq	r6, r3, r0, asr pc
   36ef0:	andeq	r6, r3, r0, asr pc
   36ef4:	andeq	r6, r3, r0, asr pc
   36ef8:	andeq	r6, r3, r0, asr pc
   36efc:	andeq	r6, r3, r0, asr pc
   36f00:	andeq	r6, r3, r0, asr pc
   36f04:	andeq	r6, r3, r0, asr pc
   36f08:	andeq	r6, r3, r0, asr pc
   36f0c:	andeq	r6, r3, r4, asr #30
   36f10:	sub	r2, ip, r1
   36f14:	mov	r3, #0
   36f18:	cmp	r2, #2
   36f1c:	ldrbge	r2, [r1, #1]
   36f20:	subge	r2, r2, #10
   36f24:	clzge	r2, r2
   36f28:	lsrge	r3, r2, #5
   36f2c:	add	r1, r1, r3
   36f30:	b	36e60 <flatcc_json_parser_space_ext@@Base+0x10>
   36f34:	ldrb	r3, [r1]
   36f38:	cmp	r3, #32
   36f3c:	bne	36e74 <flatcc_json_parser_space_ext@@Base+0x24>
   36f40:	add	r1, r1, #1
   36f44:	cmp	r1, ip
   36f48:	bne	36f34 <flatcc_json_parser_space_ext@@Base+0xe4>
   36f4c:	b	36f5c <flatcc_json_parser_space_ext@@Base+0x10c>
   36f50:	ldr	r2, [r0, #24]
   36f54:	cmp	r2, #0
   36f58:	beq	36f64 <flatcc_json_parser_space_ext@@Base+0x114>
   36f5c:	mov	r0, ip
   36f60:	bx	lr
   36f64:	str	r1, [r0, #36]	; 0x24
   36f68:	add	r1, r1, #1
   36f6c:	mov	r2, #5
   36f70:	ldr	r3, [r0, #4]
   36f74:	sub	r1, r1, r3
   36f78:	str	r1, [r0, #20]
   36f7c:	str	r2, [r0, #24]
   36f80:	mov	r0, ip
   36f84:	bx	lr

00036f88 <flatcc_json_parser_string_escape@@Base>:
   36f88:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   36f8c:	add	fp, sp, #24
   36f90:	sub	r7, r2, r1
   36f94:	cmp	r7, #2
   36f98:	blt	371f0 <flatcc_json_parser_string_escape@@Base+0x268>
   36f9c:	ldrb	r6, [r1]
   36fa0:	cmp	r6, #92	; 0x5c
   36fa4:	bne	371f0 <flatcc_json_parser_string_escape@@Base+0x268>
   36fa8:	ldrb	r6, [r1, #1]
   36fac:	sub	r6, r6, #34	; 0x22
   36fb0:	cmp	r6, #86	; 0x56
   36fb4:	bhi	371f0 <flatcc_json_parser_string_escape@@Base+0x268>
   36fb8:	add	r5, pc, #0
   36fbc:	ldr	pc, [r5, r6, lsl #2]
   36fc0:	andeq	r7, r3, ip, lsl r1
   36fc4:	strdeq	r7, [r3], -r0
   36fc8:	strdeq	r7, [r3], -r0
   36fcc:	strdeq	r7, [r3], -r0
   36fd0:	strdeq	r7, [r3], -r0
   36fd4:	strdeq	r7, [r3], -r0
   36fd8:	strdeq	r7, [r3], -r0
   36fdc:	strdeq	r7, [r3], -r0
   36fe0:	strdeq	r7, [r3], -r0
   36fe4:	strdeq	r7, [r3], -r0
   36fe8:	strdeq	r7, [r3], -r0
   36fec:	strdeq	r7, [r3], -r0
   36ff0:	strdeq	r7, [r3], -r0
   36ff4:	andeq	r7, r3, r0, lsr r1
   36ff8:	strdeq	r7, [r3], -r0
   36ffc:	strdeq	r7, [r3], -r0
   37000:	strdeq	r7, [r3], -r0
   37004:	strdeq	r7, [r3], -r0
   37008:	strdeq	r7, [r3], -r0
   3700c:	strdeq	r7, [r3], -r0
   37010:	strdeq	r7, [r3], -r0
   37014:	strdeq	r7, [r3], -r0
   37018:	strdeq	r7, [r3], -r0
   3701c:	strdeq	r7, [r3], -r0
   37020:	strdeq	r7, [r3], -r0
   37024:	strdeq	r7, [r3], -r0
   37028:	strdeq	r7, [r3], -r0
   3702c:	strdeq	r7, [r3], -r0
   37030:	strdeq	r7, [r3], -r0
   37034:	strdeq	r7, [r3], -r0
   37038:	strdeq	r7, [r3], -r0
   3703c:	strdeq	r7, [r3], -r0
   37040:	strdeq	r7, [r3], -r0
   37044:	strdeq	r7, [r3], -r0
   37048:	strdeq	r7, [r3], -r0
   3704c:	strdeq	r7, [r3], -r0
   37050:	strdeq	r7, [r3], -r0
   37054:	strdeq	r7, [r3], -r0
   37058:	strdeq	r7, [r3], -r0
   3705c:	strdeq	r7, [r3], -r0
   37060:	strdeq	r7, [r3], -r0
   37064:	strdeq	r7, [r3], -r0
   37068:	strdeq	r7, [r3], -r0
   3706c:	strdeq	r7, [r3], -r0
   37070:	strdeq	r7, [r3], -r0
   37074:	strdeq	r7, [r3], -r0
   37078:	strdeq	r7, [r3], -r0
   3707c:	strdeq	r7, [r3], -r0
   37080:	strdeq	r7, [r3], -r0
   37084:	strdeq	r7, [r3], -r0
   37088:	strdeq	r7, [r3], -r0
   3708c:	strdeq	r7, [r3], -r0
   37090:	strdeq	r7, [r3], -r0
   37094:	strdeq	r7, [r3], -r0
   37098:	strdeq	r7, [r3], -r0
   3709c:	strdeq	r7, [r3], -r0
   370a0:	strdeq	r7, [r3], -r0
   370a4:	strdeq	r7, [r3], -r0
   370a8:	andeq	r7, r3, r4, asr #2
   370ac:	strdeq	r7, [r3], -r0
   370b0:	strdeq	r7, [r3], -r0
   370b4:	strdeq	r7, [r3], -r0
   370b8:	strdeq	r7, [r3], -r0
   370bc:	strdeq	r7, [r3], -r0
   370c0:	andeq	r7, r3, r8, asr r1
   370c4:	strdeq	r7, [r3], -r0
   370c8:	strdeq	r7, [r3], -r0
   370cc:	strdeq	r7, [r3], -r0
   370d0:	andeq	r7, r3, ip, ror #2
   370d4:	strdeq	r7, [r3], -r0
   370d8:	strdeq	r7, [r3], -r0
   370dc:	strdeq	r7, [r3], -r0
   370e0:	strdeq	r7, [r3], -r0
   370e4:	strdeq	r7, [r3], -r0
   370e8:	strdeq	r7, [r3], -r0
   370ec:	strdeq	r7, [r3], -r0
   370f0:	andeq	r7, r3, r0, lsl #3
   370f4:	strdeq	r7, [r3], -r0
   370f8:	strdeq	r7, [r3], -r0
   370fc:	strdeq	r7, [r3], -r0
   37100:	muleq	r3, r4, r1
   37104:	strdeq	r7, [r3], -r0
   37108:	andeq	r7, r3, r8, lsr #3
   3710c:			; <UNDEFINED> instruction: 0x000371bc
   37110:	strdeq	r7, [r3], -r0
   37114:	strdeq	r7, [r3], -r0
   37118:	andeq	r7, r3, r0, ror #3
   3711c:	movw	r0, #8705	; 0x2201
   37120:	add	r2, r1, #2
   37124:	strh	r0, [r3]
   37128:	mov	r0, r2
   3712c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   37130:	movw	r0, #12033	; 0x2f01
   37134:	add	r2, r1, #2
   37138:	strh	r0, [r3]
   3713c:	mov	r0, r2
   37140:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   37144:	movw	r0, #23553	; 0x5c01
   37148:	add	r2, r1, #2
   3714c:	strh	r0, [r3]
   37150:	mov	r0, r2
   37154:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   37158:	movw	r0, #2049	; 0x801
   3715c:	add	r2, r1, #2
   37160:	strh	r0, [r3]
   37164:	mov	r0, r2
   37168:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3716c:	movw	r0, #3073	; 0xc01
   37170:	add	r2, r1, #2
   37174:	strh	r0, [r3]
   37178:	mov	r0, r2
   3717c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   37180:	movw	r0, #2561	; 0xa01
   37184:	add	r2, r1, #2
   37188:	strh	r0, [r3]
   3718c:	mov	r0, r2
   37190:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   37194:	movw	r0, #3329	; 0xd01
   37198:	add	r2, r1, #2
   3719c:	strh	r0, [r3]
   371a0:	mov	r0, r2
   371a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   371a8:	movw	r0, #2305	; 0x901
   371ac:	add	r2, r1, #2
   371b0:	strh	r0, [r3]
   371b4:	mov	r0, r2
   371b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   371bc:	cmp	r7, #5
   371c0:	ble	371f0 <flatcc_json_parser_string_escape@@Base+0x268>
   371c4:	ldrb	r7, [r1, #2]
   371c8:	sub	r6, r7, #48	; 0x30
   371cc:	uxtb	r6, r6
   371d0:	cmp	r6, #9
   371d4:	bhi	3724c <flatcc_json_parser_string_escape@@Base+0x2c4>
   371d8:	lsl	ip, r7, #12
   371dc:	b	3726c <flatcc_json_parser_string_escape@@Base+0x2e4>
   371e0:	mov	r6, #1
   371e4:	cmp	r7, #3
   371e8:	strb	r6, [r3]
   371ec:	bgt	37230 <flatcc_json_parser_string_escape@@Base+0x2a8>
   371f0:	mov	r7, #0
   371f4:	strb	r7, [r3]
   371f8:	ldr	r3, [r0, #24]
   371fc:	cmp	r3, #0
   37200:	beq	3720c <flatcc_json_parser_string_escape@@Base+0x284>
   37204:	mov	r0, r2
   37208:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3720c:	str	r1, [r0, #36]	; 0x24
   37210:	add	r1, r1, #1
   37214:	mov	r3, #18
   37218:	ldr	r7, [r0, #4]
   3721c:	sub	r1, r1, r7
   37220:	str	r1, [r0, #20]
   37224:	str	r3, [r0, #24]
   37228:	mov	r0, r2
   3722c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   37230:	ldrb	r7, [r1, #2]
   37234:	sub	r6, r7, #48	; 0x30
   37238:	uxtb	r6, r6
   3723c:	cmp	r6, #9
   37240:	bhi	37288 <flatcc_json_parser_string_escape@@Base+0x300>
   37244:	lsl	r7, r7, #4
   37248:	b	372a4 <flatcc_json_parser_string_escape@@Base+0x31c>
   3724c:	orr	r6, r7, #32
   37250:	sub	r6, r6, #97	; 0x61
   37254:	uxtb	r6, r6
   37258:	cmp	r6, #5
   3725c:	bhi	371f0 <flatcc_json_parser_string_escape@@Base+0x268>
   37260:	movw	r6, #36864	; 0x9000
   37264:	movt	r6, #65535	; 0xffff
   37268:	add	ip, r6, r7, lsl #12
   3726c:	ldrb	lr, [r1, #3]
   37270:	sub	r4, lr, #48	; 0x30
   37274:	uxtb	r4, r4
   37278:	cmp	r4, #10
   3727c:	bcs	372e4 <flatcc_json_parser_string_escape@@Base+0x35c>
   37280:	mov	r8, #53248	; 0xd000
   37284:	b	372fc <flatcc_json_parser_string_escape@@Base+0x374>
   37288:	orr	r6, r7, #32
   3728c:	sub	r6, r6, #97	; 0x61
   37290:	uxtb	r6, r6
   37294:	cmp	r6, #5
   37298:	bhi	371f0 <flatcc_json_parser_string_escape@@Base+0x268>
   3729c:	mvn	r6, #111	; 0x6f
   372a0:	add	r7, r6, r7, lsl #4
   372a4:	ldrb	r5, [r1, #3]
   372a8:	sub	r6, r5, #48	; 0x30
   372ac:	uxtb	r4, r6
   372b0:	cmp	r4, #10
   372b4:	bcc	372d0 <flatcc_json_parser_string_escape@@Base+0x348>
   372b8:	orr	r6, r5, #32
   372bc:	sub	r5, r6, #97	; 0x61
   372c0:	uxtb	r5, r5
   372c4:	cmp	r5, #5
   372c8:	bhi	371f0 <flatcc_json_parser_string_escape@@Base+0x268>
   372cc:	sub	r6, r6, #87	; 0x57
   372d0:	orr	r0, r6, r7
   372d4:	add	r2, r1, #4
   372d8:	strb	r0, [r3, #1]
   372dc:	mov	r0, r2
   372e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   372e4:	orr	lr, lr, #32
   372e8:	mov	r8, #43264	; 0xa900
   372ec:	sub	r4, lr, #97	; 0x61
   372f0:	uxtb	r4, r4
   372f4:	cmp	r4, #6
   372f8:	bcs	371f0 <flatcc_json_parser_string_escape@@Base+0x268>
   372fc:	ldrb	r5, [r1, #4]
   37300:	sub	r4, r5, #48	; 0x30
   37304:	uxtb	r4, r4
   37308:	cmp	r4, #10
   3730c:	bcs	37318 <flatcc_json_parser_string_escape@@Base+0x390>
   37310:	mov	r9, #64768	; 0xfd00
   37314:	b	37330 <flatcc_json_parser_string_escape@@Base+0x3a8>
   37318:	orr	r5, r5, #32
   3731c:	movw	r9, #64144	; 0xfa90
   37320:	sub	r4, r5, #97	; 0x61
   37324:	uxtb	r4, r4
   37328:	cmp	r4, #6
   3732c:	bcs	371f0 <flatcc_json_parser_string_escape@@Base+0x268>
   37330:	ldrb	r7, [r1, #5]
   37334:	sub	r4, r7, #48	; 0x30
   37338:	uxtb	r4, r4
   3733c:	cmp	r4, #10
   37340:	bcs	37350 <flatcc_json_parser_string_escape@@Base+0x3c8>
   37344:	mvn	r0, #86	; 0x56
   37348:	add	r4, r0, #39	; 0x27
   3734c:	b	37368 <flatcc_json_parser_string_escape@@Base+0x3e0>
   37350:	orr	r7, r7, #32
   37354:	movw	r4, #65449	; 0xffa9
   37358:	sub	r6, r7, #97	; 0x61
   3735c:	uxtb	r6, r6
   37360:	cmp	r6, #6
   37364:	bcs	371f0 <flatcc_json_parser_string_escape@@Base+0x268>
   37368:	add	r0, r8, lr, lsl #8
   3736c:	add	r2, r9, r5, lsl #4
   37370:	orr	r0, r0, ip
   37374:	orr	r0, r0, r2
   37378:	add	r2, r4, r7
   3737c:	orr	r0, r0, r2
   37380:	uxth	r7, r0
   37384:	cmp	r7, #127	; 0x7f
   37388:	bhi	373a4 <flatcc_json_parser_string_escape@@Base+0x41c>
   3738c:	mov	r2, #1
   37390:	strb	r2, [r3]
   37394:	strb	r0, [r3, r2]
   37398:	add	r2, r1, #6
   3739c:	mov	r0, r2
   373a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   373a4:	and	r2, r0, #63488	; 0xf800
   373a8:	mov	r6, #0
   373ac:	cmp	r6, r2, lsr #11
   373b0:	bne	373cc <flatcc_json_parser_string_escape@@Base+0x444>
   373b4:	mov	r7, #192	; 0xc0
   373b8:	mov	r2, #2
   373bc:	orr	r7, r7, r0, lsr #6
   373c0:	strb	r2, [r3]
   373c4:	strb	r7, [r3, #1]
   373c8:	b	373f0 <flatcc_json_parser_string_escape@@Base+0x468>
   373cc:	mov	r6, #224	; 0xe0
   373d0:	mov	r2, #3
   373d4:	orr	r6, r6, r7, lsr #12
   373d8:	strb	r2, [r3]
   373dc:	lsr	r7, r7, #6
   373e0:	strb	r6, [r3, #1]
   373e4:	mov	r6, #2
   373e8:	bfi	r7, r6, #6, #26
   373ec:	strb	r7, [r3, #2]
   373f0:	mvn	r7, #-67108863	; 0xfc000001
   373f4:	bfi	r0, r7, #6, #26
   373f8:	strb	r0, [r3, r2]
   373fc:	add	r2, r1, #6
   37400:	mov	r0, r2
   37404:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00037408 <flatcc_json_parser_skip_constant@@Base>:
   37408:	push	{r4, r5, r6, sl, fp, lr}
   3740c:	add	fp, sp, #16
   37410:	cmp	r1, r2
   37414:	moveq	r0, r1
   37418:	popeq	{r4, r5, r6, sl, fp, pc}
   3741c:	mov	r4, r2
   37420:	mov	r5, r0
   37424:	ldrsb	r0, [r1]
   37428:	mov	r6, r1
   3742c:	cmp	r0, #0
   37430:	bge	37454 <flatcc_json_parser_skip_constant@@Base+0x4c>
   37434:	b	37488 <flatcc_json_parser_skip_constant@@Base+0x80>
   37438:	cmp	r1, r4
   3743c:	moveq	r0, r4
   37440:	popeq	{r4, r5, r6, sl, fp, pc}
   37444:	ldrsb	r0, [r1]
   37448:	mov	r6, r1
   3744c:	cmp	r0, #0
   37450:	blt	37488 <flatcc_json_parser_skip_constant@@Base+0x80>
   37454:	uxtb	r0, r0
   37458:	cmp	r0, #95	; 0x5f
   3745c:	cmpne	r0, #46	; 0x2e
   37460:	beq	37488 <flatcc_json_parser_skip_constant@@Base+0x80>
   37464:	sub	r1, r0, #48	; 0x30
   37468:	uxtb	r1, r1
   3746c:	cmp	r1, #9
   37470:	bls	37488 <flatcc_json_parser_skip_constant@@Base+0x80>
   37474:	orr	r1, r0, #32
   37478:	sub	r1, r1, #97	; 0x61
   3747c:	uxtb	r1, r1
   37480:	cmp	r1, #25
   37484:	bhi	37490 <flatcc_json_parser_skip_constant@@Base+0x88>
   37488:	add	r1, r6, #1
   3748c:	b	37438 <flatcc_json_parser_skip_constant@@Base+0x30>
   37490:	sub	r1, r4, r6
   37494:	cmp	r1, #2
   37498:	blt	374b8 <flatcc_json_parser_skip_constant@@Base+0xb0>
   3749c:	cmp	r0, #32
   374a0:	bhi	374d4 <flatcc_json_parser_skip_constant@@Base+0xcc>
   374a4:	bne	374b8 <flatcc_json_parser_skip_constant@@Base+0xb0>
   374a8:	mov	r1, r6
   374ac:	ldrb	r0, [r1, #1]!
   374b0:	cmp	r0, #32
   374b4:	bhi	37438 <flatcc_json_parser_skip_constant@@Base+0x30>
   374b8:	mov	r0, r5
   374bc:	mov	r1, r6
   374c0:	mov	r2, r4
   374c4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   374c8:	mov	r1, r0
   374cc:	cmp	r0, r6
   374d0:	bne	37438 <flatcc_json_parser_skip_constant@@Base+0x30>
   374d4:	mov	r0, r6
   374d8:	pop	{r4, r5, r6, sl, fp, pc}

000374dc <flatcc_json_parser_match_constant@@Base>:
   374dc:	push	{r4, r5, r6, r7, fp, lr}
   374e0:	add	fp, sp, #16
   374e4:	ldr	r7, [fp, #8]
   374e8:	mov	r4, r1
   374ec:	sub	r1, r2, r1
   374f0:	cmp	r1, r3
   374f4:	ble	37608 <flatcc_json_parser_match_constant@@Base+0x12c>
   374f8:	ldr	r1, [r0, #12]
   374fc:	mov	r5, r2
   37500:	add	r6, r4, r3
   37504:	cmp	r1, #0
   37508:	beq	37594 <flatcc_json_parser_match_constant@@Base+0xb8>
   3750c:	sub	r1, r5, r6
   37510:	cmp	r1, #2
   37514:	blt	3753c <flatcc_json_parser_match_constant@@Base+0x60>
   37518:	ldrb	r1, [r6]
   3751c:	mov	r2, r6
   37520:	cmp	r1, #32
   37524:	bhi	3754c <flatcc_json_parser_match_constant@@Base+0x70>
   37528:	bne	3753c <flatcc_json_parser_match_constant@@Base+0x60>
   3752c:	mov	r2, r6
   37530:	ldrb	r1, [r2, #1]!
   37534:	cmp	r1, #32
   37538:	bhi	3754c <flatcc_json_parser_match_constant@@Base+0x70>
   3753c:	mov	r1, r6
   37540:	mov	r2, r5
   37544:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   37548:	mov	r2, r0
   3754c:	cmp	r2, r5
   37550:	beq	3761c <flatcc_json_parser_match_constant@@Base+0x140>
   37554:	cmp	r2, r6
   37558:	beq	3762c <flatcc_json_parser_match_constant@@Base+0x150>
   3755c:	ldrsb	r0, [r2]
   37560:	cmp	r0, #95	; 0x5f
   37564:	beq	37584 <flatcc_json_parser_match_constant@@Base+0xa8>
   37568:	cmn	r0, #1
   3756c:	ble	37584 <flatcc_json_parser_match_constant@@Base+0xa8>
   37570:	orr	r0, r0, #32
   37574:	sub	r0, r0, #97	; 0x61
   37578:	uxtb	r0, r0
   3757c:	cmp	r0, #25
   37580:	bhi	3762c <flatcc_json_parser_match_constant@@Base+0x150>
   37584:	mov	r0, #1
   37588:	str	r0, [r7]
   3758c:	mov	r0, r2
   37590:	pop	{r4, r5, r6, r7, fp, pc}
   37594:	ldrb	r1, [r6]
   37598:	cmp	r1, #92	; 0x5c
   3759c:	beq	37654 <flatcc_json_parser_match_constant@@Base+0x178>
   375a0:	cmp	r1, #34	; 0x22
   375a4:	beq	375d8 <flatcc_json_parser_match_constant@@Base+0xfc>
   375a8:	cmp	r1, #32
   375ac:	bne	37608 <flatcc_json_parser_match_constant@@Base+0x12c>
   375b0:	add	r1, r4, r3
   375b4:	add	r1, r1, #1
   375b8:	cmp	r5, r1
   375bc:	beq	3761c <flatcc_json_parser_match_constant@@Base+0x140>
   375c0:	ldrb	r2, [r1], #1
   375c4:	cmp	r2, #32
   375c8:	beq	375b8 <flatcc_json_parser_match_constant@@Base+0xdc>
   375cc:	cmp	r2, #34	; 0x22
   375d0:	bne	376bc <flatcc_json_parser_match_constant@@Base+0x1e0>
   375d4:	sub	r6, r1, #1
   375d8:	mvn	r2, r6
   375dc:	add	r1, r6, #1
   375e0:	cmp	r2, #2
   375e4:	blt	376a0 <flatcc_json_parser_match_constant@@Base+0x1c4>
   375e8:	ldrb	r2, [r1]
   375ec:	cmp	r2, #32
   375f0:	bls	3768c <flatcc_json_parser_match_constant@@Base+0x1b0>
   375f4:	mov	r2, r1
   375f8:	mov	r0, #0
   375fc:	str	r0, [r7]
   37600:	mov	r0, r2
   37604:	pop	{r4, r5, r6, r7, fp, pc}
   37608:	mov	r0, #0
   3760c:	mov	r2, r4
   37610:	str	r0, [r7]
   37614:	mov	r0, r2
   37618:	pop	{r4, r5, r6, r7, fp, pc}
   3761c:	mov	r0, #0
   37620:	str	r0, [r7]
   37624:	mov	r0, r5
   37628:	pop	{r4, r5, r6, r7, fp, pc}
   3762c:	mov	r0, #0
   37630:	str	r0, [r7]
   37634:	ldrb	r0, [r2]
   37638:	cmp	r0, #44	; 0x2c
   3763c:	cmpne	r0, #93	; 0x5d
   37640:	beq	37614 <flatcc_json_parser_match_constant@@Base+0x138>
   37644:	cmp	r0, #125	; 0x7d
   37648:	movne	r2, r4
   3764c:	mov	r0, r2
   37650:	pop	{r4, r5, r6, r7, fp, pc}
   37654:	mov	r1, #0
   37658:	str	r1, [r7]
   3765c:	ldr	r1, [r0, #24]
   37660:	cmp	r1, #0
   37664:	bne	37624 <flatcc_json_parser_match_constant@@Base+0x148>
   37668:	str	r6, [r0, #36]	; 0x24
   3766c:	add	r3, r6, #1
   37670:	mov	r1, #18
   37674:	ldr	r2, [r0, #4]
   37678:	sub	r2, r3, r2
   3767c:	str	r2, [r0, #20]
   37680:	str	r1, [r0, #24]
   37684:	mov	r0, r5
   37688:	pop	{r4, r5, r6, r7, fp, pc}
   3768c:	bne	376a0 <flatcc_json_parser_match_constant@@Base+0x1c4>
   37690:	ldrb	r2, [r6, #2]!
   37694:	cmp	r2, #32
   37698:	mov	r2, r6
   3769c:	bhi	376ac <flatcc_json_parser_match_constant@@Base+0x1d0>
   376a0:	mov	r2, #0
   376a4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   376a8:	mov	r2, r0
   376ac:	mov	r0, #0
   376b0:	str	r0, [r7]
   376b4:	mov	r0, r2
   376b8:	pop	{r4, r5, r6, r7, fp, pc}
   376bc:	mov	r0, #1
   376c0:	sub	r2, r1, #1
   376c4:	str	r0, [r7]
   376c8:	mov	r0, r2
   376cc:	pop	{r4, r5, r6, r7, fp, pc}

000376d0 <flatcc_json_parser_unmatched_symbol@@Base>:
   376d0:	push	{r4, r5, r6, sl, fp, lr}
   376d4:	add	fp, sp, #16
   376d8:	mov	r6, r0
   376dc:	ldrb	r0, [r0, #8]
   376e0:	mov	r4, r2
   376e4:	tst	r0, #1
   376e8:	bne	3771c <flatcc_json_parser_unmatched_symbol@@Base+0x4c>
   376ec:	ldr	r0, [r6, #24]
   376f0:	cmp	r0, #0
   376f4:	bne	37900 <flatcc_json_parser_unmatched_symbol@@Base+0x230>
   376f8:	str	r1, [r6, #36]	; 0x24
   376fc:	add	r1, r1, #1
   37700:	mov	r0, #13
   37704:	ldr	r2, [r6, #4]
   37708:	sub	r1, r1, r2
   3770c:	str	r1, [r6, #20]
   37710:	str	r0, [r6, #24]
   37714:	mov	r0, r4
   37718:	pop	{r4, r5, r6, sl, fp, pc}
   3771c:	ldr	r0, [r6, #12]
   37720:	cmp	r0, #0
   37724:	beq	37800 <flatcc_json_parser_unmatched_symbol@@Base+0x130>
   37728:	cmp	r1, r4
   3772c:	beq	377a8 <flatcc_json_parser_unmatched_symbol@@Base+0xd8>
   37730:	ldrb	r3, [r1]
   37734:	cmp	r3, #33	; 0x21
   37738:	bcc	377a8 <flatcc_json_parser_unmatched_symbol@@Base+0xd8>
   3773c:	add	r0, r1, #1
   37740:	uxtb	r2, r3
   37744:	cmp	r2, #46	; 0x2e
   37748:	cmpne	r2, #95	; 0x5f
   3774c:	bne	3776c <flatcc_json_parser_unmatched_symbol@@Base+0x9c>
   37750:	cmp	r4, r0
   37754:	beq	37890 <flatcc_json_parser_unmatched_symbol@@Base+0x1c0>
   37758:	ldrb	r3, [r0], #1
   3775c:	add	r1, r1, #1
   37760:	cmp	r3, #33	; 0x21
   37764:	bcs	37740 <flatcc_json_parser_unmatched_symbol@@Base+0x70>
   37768:	b	37894 <flatcc_json_parser_unmatched_symbol@@Base+0x1c4>
   3776c:	sxtb	r5, r3
   37770:	cmp	r5, #0
   37774:	blt	37750 <flatcc_json_parser_unmatched_symbol@@Base+0x80>
   37778:	sub	r5, r3, #48	; 0x30
   3777c:	uxtb	r5, r5
   37780:	cmp	r5, #9
   37784:	bls	37750 <flatcc_json_parser_unmatched_symbol@@Base+0x80>
   37788:	orr	r3, r3, #32
   3778c:	sub	r3, r3, #97	; 0x61
   37790:	uxtb	r3, r3
   37794:	cmp	r3, #26
   37798:	bcc	37750 <flatcc_json_parser_unmatched_symbol@@Base+0x80>
   3779c:	sub	r1, r0, #1
   377a0:	cmp	r2, #46	; 0x2e
   377a4:	beq	3789c <flatcc_json_parser_unmatched_symbol@@Base+0x1cc>
   377a8:	mov	r2, r1
   377ac:	sub	r0, r4, r2
   377b0:	cmp	r0, #2
   377b4:	blt	378d8 <flatcc_json_parser_unmatched_symbol@@Base+0x208>
   377b8:	ldrb	r0, [r2]
   377bc:	cmp	r0, #32
   377c0:	bls	37864 <flatcc_json_parser_unmatched_symbol@@Base+0x194>
   377c4:	mov	r3, r2
   377c8:	cmp	r3, r4
   377cc:	beq	378f4 <flatcc_json_parser_unmatched_symbol@@Base+0x224>
   377d0:	ldrb	r0, [r3]
   377d4:	cmp	r0, #58	; 0x3a
   377d8:	bne	378f4 <flatcc_json_parser_unmatched_symbol@@Base+0x224>
   377dc:	add	r1, r3, #1
   377e0:	sub	r0, r4, r1
   377e4:	cmp	r0, #2
   377e8:	blt	3793c <flatcc_json_parser_unmatched_symbol@@Base+0x26c>
   377ec:	ldrb	r0, [r1]
   377f0:	cmp	r0, #32
   377f4:	bls	3792c <flatcc_json_parser_unmatched_symbol@@Base+0x25c>
   377f8:	mov	r3, r1
   377fc:	b	3794c <flatcc_json_parser_unmatched_symbol@@Base+0x27c>
   37800:	cmp	r1, r4
   37804:	beq	3784c <flatcc_json_parser_unmatched_symbol@@Base+0x17c>
   37808:	ldrb	r0, [r1]
   3780c:	cmp	r0, #92	; 0x5c
   37810:	beq	3782c <flatcc_json_parser_unmatched_symbol@@Base+0x15c>
   37814:	cmp	r0, #34	; 0x22
   37818:	beq	3787c <flatcc_json_parser_unmatched_symbol@@Base+0x1ac>
   3781c:	add	r1, r1, #1
   37820:	cmp	r1, r4
   37824:	bne	37808 <flatcc_json_parser_unmatched_symbol@@Base+0x138>
   37828:	b	37848 <flatcc_json_parser_unmatched_symbol@@Base+0x178>
   3782c:	sub	r0, r4, r1
   37830:	cmp	r0, #2
   37834:	blt	3784c <flatcc_json_parser_unmatched_symbol@@Base+0x17c>
   37838:	add	r1, r1, #1
   3783c:	add	r1, r1, #1
   37840:	cmp	r1, r4
   37844:	bne	37808 <flatcc_json_parser_unmatched_symbol@@Base+0x138>
   37848:	mov	r1, r4
   3784c:	ldr	r0, [r6, #24]
   37850:	mov	r2, r4
   37854:	cmp	r0, #0
   37858:	bne	378cc <flatcc_json_parser_unmatched_symbol@@Base+0x1fc>
   3785c:	mov	r0, #20
   37860:	b	378b0 <flatcc_json_parser_unmatched_symbol@@Base+0x1e0>
   37864:	bne	378d8 <flatcc_json_parser_unmatched_symbol@@Base+0x208>
   37868:	mov	r3, r2
   3786c:	ldrb	r0, [r3, #1]!
   37870:	cmp	r0, #32
   37874:	bls	378d8 <flatcc_json_parser_unmatched_symbol@@Base+0x208>
   37878:	b	378ec <flatcc_json_parser_unmatched_symbol@@Base+0x21c>
   3787c:	add	r2, r1, #1
   37880:	sub	r0, r4, r2
   37884:	cmp	r0, #2
   37888:	bge	377b8 <flatcc_json_parser_unmatched_symbol@@Base+0xe8>
   3788c:	b	378d8 <flatcc_json_parser_unmatched_symbol@@Base+0x208>
   37890:	mov	r1, r4
   37894:	cmp	r2, #46	; 0x2e
   37898:	bne	377a8 <flatcc_json_parser_unmatched_symbol@@Base+0xd8>
   3789c:	ldr	r0, [r6, #24]
   378a0:	mov	r2, r4
   378a4:	cmp	r0, #0
   378a8:	bne	378cc <flatcc_json_parser_unmatched_symbol@@Base+0x1fc>
   378ac:	mov	r0, #5
   378b0:	str	r1, [r6, #36]	; 0x24
   378b4:	add	r1, r1, #1
   378b8:	ldr	r2, [r6, #4]
   378bc:	sub	r1, r1, r2
   378c0:	mov	r2, r4
   378c4:	str	r1, [r6, #20]
   378c8:	str	r0, [r6, #24]
   378cc:	sub	r0, r4, r2
   378d0:	cmp	r0, #2
   378d4:	bge	377b8 <flatcc_json_parser_unmatched_symbol@@Base+0xe8>
   378d8:	mov	r1, r2
   378dc:	mov	r0, r6
   378e0:	mov	r2, r4
   378e4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   378e8:	mov	r3, r0
   378ec:	cmp	r3, r4
   378f0:	bne	377d0 <flatcc_json_parser_unmatched_symbol@@Base+0x100>
   378f4:	ldr	r0, [r6, #24]
   378f8:	cmp	r0, #0
   378fc:	beq	37908 <flatcc_json_parser_unmatched_symbol@@Base+0x238>
   37900:	mov	r0, r4
   37904:	pop	{r4, r5, r6, sl, fp, pc}
   37908:	str	r3, [r6, #36]	; 0x24
   3790c:	add	r2, r3, #1
   37910:	mov	r0, #4
   37914:	ldr	r1, [r6, #4]
   37918:	sub	r1, r2, r1
   3791c:	str	r1, [r6, #20]
   37920:	str	r0, [r6, #24]
   37924:	mov	r0, r4
   37928:	pop	{r4, r5, r6, sl, fp, pc}
   3792c:	bne	3793c <flatcc_json_parser_unmatched_symbol@@Base+0x26c>
   37930:	ldrb	r0, [r3, #2]!
   37934:	cmp	r0, #32
   37938:	bhi	3794c <flatcc_json_parser_unmatched_symbol@@Base+0x27c>
   3793c:	mov	r0, r6
   37940:	mov	r2, r4
   37944:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   37948:	mov	r3, r0
   3794c:	mov	r0, r6
   37950:	mov	r1, r3
   37954:	mov	r2, r4
   37958:	pop	{r4, r5, r6, sl, fp, lr}
   3795c:	b	37960 <flatcc_json_parser_generic_json@@Base>

00037960 <flatcc_json_parser_generic_json@@Base>:
   37960:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37964:	add	fp, sp, #28
   37968:	sub	sp, sp, #540	; 0x21c
   3796c:	mov	r7, r1
   37970:	cmp	r1, r2
   37974:	beq	38654 <flatcc_json_parser_generic_json@@Base+0xcf4>
   37978:	mov	r5, r0
   3797c:	add	r0, r2, #1
   37980:	add	r1, sp, #24
   37984:	mov	r6, r2
   37988:	mov	r8, #0
   3798c:	str	r0, [sp, #4]
   37990:	add	r0, r5, #36	; 0x24
   37994:	sub	sl, r1, #1
   37998:	add	r9, r5, #24
   3799c:	str	r0, [sp, #16]
   379a0:	add	r0, r5, #20
   379a4:	str	r0, [sp, #12]
   379a8:	add	r0, r5, #4
   379ac:	str	r0, [sp, #8]
   379b0:	mov	r0, r1
   379b4:	cmp	r8, #0
   379b8:	beq	37ca0 <flatcc_json_parser_generic_json@@Base+0x340>
   379bc:	ldrb	r0, [r0, #-1]
   379c0:	cmp	r0, #125	; 0x7d
   379c4:	bne	37ca0 <flatcc_json_parser_generic_json@@Base+0x340>
   379c8:	ldrb	r0, [r7]
   379cc:	cmp	r0, #46	; 0x2e
   379d0:	beq	37a4c <flatcc_json_parser_generic_json@@Base+0xec>
   379d4:	cmp	r0, #34	; 0x22
   379d8:	bne	37ae0 <flatcc_json_parser_generic_json@@Base+0x180>
   379dc:	mov	r0, #0
   379e0:	mov	r2, r6
   379e4:	str	r0, [r5, #12]
   379e8:	add	r0, r7, #1
   379ec:	cmp	r0, r6
   379f0:	beq	37a94 <flatcc_json_parser_generic_json@@Base+0x134>
   379f4:	ldrb	r1, [r0]
   379f8:	cmp	r1, #92	; 0x5c
   379fc:	beq	37a18 <flatcc_json_parser_generic_json@@Base+0xb8>
   37a00:	cmp	r1, #34	; 0x22
   37a04:	beq	37b80 <flatcc_json_parser_generic_json@@Base+0x220>
   37a08:	add	r0, r0, #1
   37a0c:	cmp	r0, r6
   37a10:	bne	379f4 <flatcc_json_parser_generic_json@@Base+0x94>
   37a14:	b	37a34 <flatcc_json_parser_generic_json@@Base+0xd4>
   37a18:	sub	r1, r6, r0
   37a1c:	cmp	r1, #2
   37a20:	blt	37bdc <flatcc_json_parser_generic_json@@Base+0x27c>
   37a24:	add	r0, r0, #1
   37a28:	add	r0, r0, #1
   37a2c:	cmp	r0, r6
   37a30:	bne	379f4 <flatcc_json_parser_generic_json@@Base+0x94>
   37a34:	mov	r2, r6
   37a38:	ldr	r0, [r9]
   37a3c:	mov	r1, r6
   37a40:	cmp	r0, #0
   37a44:	bne	37bf0 <flatcc_json_parser_generic_json@@Base+0x290>
   37a48:	b	37aa4 <flatcc_json_parser_generic_json@@Base+0x144>
   37a4c:	ldr	r0, [r9]
   37a50:	cmp	r0, #0
   37a54:	bne	37a80 <flatcc_json_parser_generic_json@@Base+0x120>
   37a58:	mov	r0, #5
   37a5c:	add	r1, r7, #1
   37a60:	str	r0, [r9]
   37a64:	ldr	r0, [sp, #8]
   37a68:	ldr	r0, [r0]
   37a6c:	sub	r0, r1, r0
   37a70:	ldr	r1, [sp, #12]
   37a74:	str	r0, [r1]
   37a78:	ldr	r0, [sp, #16]
   37a7c:	str	r7, [r0]
   37a80:	ldr	r0, [r5, #12]
   37a84:	mov	r2, r6
   37a88:	mov	r1, r6
   37a8c:	cmp	r0, #0
   37a90:	bne	37bf0 <flatcc_json_parser_generic_json@@Base+0x290>
   37a94:	ldr	r0, [r9]
   37a98:	mov	r1, r6
   37a9c:	cmp	r0, #0
   37aa0:	bne	37bf0 <flatcc_json_parser_generic_json@@Base+0x290>
   37aa4:	mov	r0, #20
   37aa8:	add	r1, r2, #1
   37aac:	str	r0, [r9]
   37ab0:	ldr	r0, [sp, #8]
   37ab4:	ldr	r0, [r0]
   37ab8:	sub	r0, r1, r0
   37abc:	ldr	r1, [sp, #12]
   37ac0:	str	r0, [r1]
   37ac4:	ldr	r0, [sp, #16]
   37ac8:	str	r2, [r0]
   37acc:	mov	r1, r6
   37ad0:	sub	r0, r6, r1
   37ad4:	cmp	r0, #2
   37ad8:	bge	37bfc <flatcc_json_parser_generic_json@@Base+0x29c>
   37adc:	b	37c64 <flatcc_json_parser_generic_json@@Base+0x304>
   37ae0:	mov	r0, #1
   37ae4:	cmp	r7, r6
   37ae8:	mov	r1, r6
   37aec:	str	r0, [r5, #12]
   37af0:	beq	37bf0 <flatcc_json_parser_generic_json@@Base+0x290>
   37af4:	ldrb	r2, [r7]
   37af8:	cmp	r2, #33	; 0x21
   37afc:	bcc	37b6c <flatcc_json_parser_generic_json@@Base+0x20c>
   37b00:	add	r0, r7, #1
   37b04:	uxtb	r1, r2
   37b08:	cmp	r1, #46	; 0x2e
   37b0c:	cmpne	r1, #95	; 0x5f
   37b10:	bne	37b30 <flatcc_json_parser_generic_json@@Base+0x1d0>
   37b14:	cmp	r6, r0
   37b18:	beq	37b94 <flatcc_json_parser_generic_json@@Base+0x234>
   37b1c:	ldrb	r2, [r0], #1
   37b20:	add	r7, r7, #1
   37b24:	cmp	r2, #33	; 0x21
   37b28:	bcs	37b04 <flatcc_json_parser_generic_json@@Base+0x1a4>
   37b2c:	b	37b98 <flatcc_json_parser_generic_json@@Base+0x238>
   37b30:	sxtb	r3, r2
   37b34:	cmp	r3, #0
   37b38:	blt	37b14 <flatcc_json_parser_generic_json@@Base+0x1b4>
   37b3c:	sub	r3, r2, #48	; 0x30
   37b40:	uxtb	r3, r3
   37b44:	cmp	r3, #9
   37b48:	bls	37b14 <flatcc_json_parser_generic_json@@Base+0x1b4>
   37b4c:	orr	r2, r2, #32
   37b50:	sub	r2, r2, #97	; 0x61
   37b54:	uxtb	r2, r2
   37b58:	cmp	r2, #26
   37b5c:	bcc	37b14 <flatcc_json_parser_generic_json@@Base+0x1b4>
   37b60:	sub	r7, r0, #1
   37b64:	cmp	r1, #46	; 0x2e
   37b68:	beq	37ba0 <flatcc_json_parser_generic_json@@Base+0x240>
   37b6c:	mov	r1, r7
   37b70:	sub	r0, r6, r1
   37b74:	cmp	r0, #2
   37b78:	bge	37bfc <flatcc_json_parser_generic_json@@Base+0x29c>
   37b7c:	b	37c64 <flatcc_json_parser_generic_json@@Base+0x304>
   37b80:	add	r1, r0, #1
   37b84:	sub	r0, r6, r1
   37b88:	cmp	r0, #2
   37b8c:	bge	37bfc <flatcc_json_parser_generic_json@@Base+0x29c>
   37b90:	b	37c64 <flatcc_json_parser_generic_json@@Base+0x304>
   37b94:	mov	r7, r6
   37b98:	cmp	r1, #46	; 0x2e
   37b9c:	bne	37b6c <flatcc_json_parser_generic_json@@Base+0x20c>
   37ba0:	ldr	r0, [r9]
   37ba4:	mov	r1, r6
   37ba8:	cmp	r0, #0
   37bac:	bne	37bf0 <flatcc_json_parser_generic_json@@Base+0x290>
   37bb0:	mov	r0, #5
   37bb4:	add	r1, r7, #1
   37bb8:	str	r0, [r9]
   37bbc:	ldr	r0, [sp, #8]
   37bc0:	ldr	r0, [r0]
   37bc4:	sub	r0, r1, r0
   37bc8:	ldr	r1, [sp, #12]
   37bcc:	str	r0, [r1]
   37bd0:	ldr	r0, [sp, #16]
   37bd4:	str	r7, [r0]
   37bd8:	b	37acc <flatcc_json_parser_generic_json@@Base+0x16c>
   37bdc:	mov	r2, r0
   37be0:	ldr	r0, [r9]
   37be4:	mov	r1, r6
   37be8:	cmp	r0, #0
   37bec:	beq	37aa4 <flatcc_json_parser_generic_json@@Base+0x144>
   37bf0:	sub	r0, r6, r1
   37bf4:	cmp	r0, #2
   37bf8:	blt	37c64 <flatcc_json_parser_generic_json@@Base+0x304>
   37bfc:	ldrb	r0, [r1]
   37c00:	cmp	r0, #32
   37c04:	bls	37c50 <flatcc_json_parser_generic_json@@Base+0x2f0>
   37c08:	mov	r7, r1
   37c0c:	cmp	r7, r6
   37c10:	beq	386e0 <flatcc_json_parser_generic_json@@Base+0xd80>
   37c14:	ldrb	r0, [r7]
   37c18:	cmp	r0, #58	; 0x3a
   37c1c:	bne	386f8 <flatcc_json_parser_generic_json@@Base+0xd98>
   37c20:	add	r1, r7, #1
   37c24:	sub	r0, r6, r1
   37c28:	cmp	r0, #2
   37c2c:	blt	37c90 <flatcc_json_parser_generic_json@@Base+0x330>
   37c30:	ldrb	r2, [r1]
   37c34:	cmp	r2, #32
   37c38:	bls	37c80 <flatcc_json_parser_generic_json@@Base+0x320>
   37c3c:	mov	r7, r1
   37c40:	sub	r0, r2, #48	; 0x30
   37c44:	cmp	r0, #10
   37c48:	bcc	37cb0 <flatcc_json_parser_generic_json@@Base+0x350>
   37c4c:	b	37d48 <flatcc_json_parser_generic_json@@Base+0x3e8>
   37c50:	bne	37c64 <flatcc_json_parser_generic_json@@Base+0x304>
   37c54:	mov	r7, r1
   37c58:	ldrb	r0, [r7, #1]!
   37c5c:	cmp	r0, #32
   37c60:	bhi	37c74 <flatcc_json_parser_generic_json@@Base+0x314>
   37c64:	mov	r0, r5
   37c68:	mov	r2, r6
   37c6c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   37c70:	mov	r7, r0
   37c74:	cmp	r7, r6
   37c78:	bne	37c14 <flatcc_json_parser_generic_json@@Base+0x2b4>
   37c7c:	b	386e0 <flatcc_json_parser_generic_json@@Base+0xd80>
   37c80:	bne	37c90 <flatcc_json_parser_generic_json@@Base+0x330>
   37c84:	ldrb	r2, [r7, #2]!
   37c88:	cmp	r2, #32
   37c8c:	bhi	37ca4 <flatcc_json_parser_generic_json@@Base+0x344>
   37c90:	mov	r0, r5
   37c94:	mov	r2, r6
   37c98:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   37c9c:	mov	r7, r0
   37ca0:	ldrb	r2, [r7]
   37ca4:	sub	r0, r2, #48	; 0x30
   37ca8:	cmp	r0, #10
   37cac:	bcs	37d48 <flatcc_json_parser_generic_json@@Base+0x3e8>
   37cb0:	cmp	r7, r6
   37cb4:	beq	38324 <flatcc_json_parser_generic_json@@Base+0x9c4>
   37cb8:	cmp	r2, #45	; 0x2d
   37cbc:	bne	37cd0 <flatcc_json_parser_generic_json@@Base+0x370>
   37cc0:	add	r7, r7, #1
   37cc4:	cmp	r7, r6
   37cc8:	beq	380ec <flatcc_json_parser_generic_json@@Base+0x78c>
   37ccc:	ldrb	r2, [r7]
   37cd0:	cmp	r2, #48	; 0x30
   37cd4:	bne	37d64 <flatcc_json_parser_generic_json@@Base+0x404>
   37cd8:	add	r4, r7, #1
   37cdc:	cmp	r4, r6
   37ce0:	mov	r1, r6
   37ce4:	beq	38318 <flatcc_json_parser_generic_json@@Base+0x9b8>
   37ce8:	ldrb	r0, [r4]
   37cec:	cmp	r0, #46	; 0x2e
   37cf0:	bne	37f8c <flatcc_json_parser_generic_json@@Base+0x62c>
   37cf4:	mov	r0, r4
   37cf8:	ldrb	r1, [r0, #1]!
   37cfc:	sub	r1, r1, #48	; 0x30
   37d00:	uxtb	r1, r1
   37d04:	cmp	r1, #10
   37d08:	bcc	37f58 <flatcc_json_parser_generic_json@@Base+0x5f8>
   37d0c:	ldr	r1, [r9]
   37d10:	cmp	r1, #0
   37d14:	bne	38324 <flatcc_json_parser_generic_json@@Base+0x9c4>
   37d18:	mov	r1, #6
   37d1c:	add	r2, r0, #1
   37d20:	mov	r4, r6
   37d24:	str	r1, [r9]
   37d28:	ldr	r1, [sp, #8]
   37d2c:	ldr	r1, [r1]
   37d30:	sub	r1, r2, r1
   37d34:	ldr	r2, [sp, #12]
   37d38:	str	r1, [r2]
   37d3c:	ldr	r1, [sp, #16]
   37d40:	str	r0, [r1]
   37d44:	b	38328 <flatcc_json_parser_generic_json@@Base+0x9c8>
   37d48:	cmp	r2, #90	; 0x5a
   37d4c:	bgt	37dac <flatcc_json_parser_generic_json@@Base+0x44c>
   37d50:	cmp	r2, #34	; 0x22
   37d54:	beq	37e30 <flatcc_json_parser_generic_json@@Base+0x4d0>
   37d58:	cmp	r2, #45	; 0x2d
   37d5c:	beq	37cb0 <flatcc_json_parser_generic_json@@Base+0x350>
   37d60:	b	37e94 <flatcc_json_parser_generic_json@@Base+0x534>
   37d64:	sub	r0, r2, #49	; 0x31
   37d68:	uxtb	r0, r0
   37d6c:	cmp	r0, #8
   37d70:	bls	37dfc <flatcc_json_parser_generic_json@@Base+0x49c>
   37d74:	ldr	r0, [r9]
   37d78:	cmp	r0, #0
   37d7c:	bne	38324 <flatcc_json_parser_generic_json@@Base+0x9c4>
   37d80:	mov	r0, #6
   37d84:	add	r1, r7, #1
   37d88:	str	r0, [r9]
   37d8c:	ldr	r0, [sp, #8]
   37d90:	ldr	r0, [r0]
   37d94:	sub	r0, r1, r0
   37d98:	ldr	r1, [sp, #12]
   37d9c:	str	r0, [r1]
   37da0:	ldr	r0, [sp, #16]
   37da4:	str	r7, [r0]
   37da8:	b	38324 <flatcc_json_parser_generic_json@@Base+0x9c4>
   37dac:	cmp	r2, #91	; 0x5b
   37db0:	beq	37e54 <flatcc_json_parser_generic_json@@Base+0x4f4>
   37db4:	cmp	r2, #123	; 0x7b
   37db8:	bne	37e94 <flatcc_json_parser_generic_json@@Base+0x534>
   37dbc:	cmp	r8, #512	; 0x200
   37dc0:	beq	3870c <flatcc_json_parser_generic_json@@Base+0xdac>
   37dc4:	add	r0, sp, #24
   37dc8:	mov	r1, #125	; 0x7d
   37dcc:	strb	r1, [r0, r8]
   37dd0:	add	r1, r7, #1
   37dd4:	sub	r0, r6, r1
   37dd8:	cmp	r0, #2
   37ddc:	blt	38160 <flatcc_json_parser_generic_json@@Base+0x800>
   37de0:	ldrb	r0, [r1]
   37de4:	cmp	r0, #32
   37de8:	bls	38150 <flatcc_json_parser_generic_json@@Base+0x7f0>
   37dec:	mov	r7, r1
   37df0:	cmp	r7, r6
   37df4:	bne	38178 <flatcc_json_parser_generic_json@@Base+0x818>
   37df8:	b	386d0 <flatcc_json_parser_generic_json@@Base+0xd70>
   37dfc:	add	r0, r7, #1
   37e00:	cmp	r6, r0
   37e04:	beq	38100 <flatcc_json_parser_generic_json@@Base+0x7a0>
   37e08:	ldrb	r1, [r0], #1
   37e0c:	sub	r1, r1, #48	; 0x30
   37e10:	uxtb	r1, r1
   37e14:	cmp	r1, #10
   37e18:	bcc	37e00 <flatcc_json_parser_generic_json@@Base+0x4a0>
   37e1c:	sub	r4, r0, #1
   37e20:	cmp	r4, r6
   37e24:	mov	r1, r6
   37e28:	bne	37ce8 <flatcc_json_parser_generic_json@@Base+0x388>
   37e2c:	b	38318 <flatcc_json_parser_generic_json@@Base+0x9b8>
   37e30:	cmp	r7, r6
   37e34:	beq	38114 <flatcc_json_parser_generic_json@@Base+0x7b4>
   37e38:	add	r0, r7, #1
   37e3c:	mov	r1, r6
   37e40:	add	r4, sp, #20
   37e44:	mov	r7, #17
   37e48:	cmp	r0, r6
   37e4c:	bne	38210 <flatcc_json_parser_generic_json@@Base+0x8b0>
   37e50:	b	382f0 <flatcc_json_parser_generic_json@@Base+0x990>
   37e54:	cmp	r8, #512	; 0x200
   37e58:	beq	3870c <flatcc_json_parser_generic_json@@Base+0xdac>
   37e5c:	add	r0, sp, #24
   37e60:	mov	r1, #93	; 0x5d
   37e64:	strb	r1, [r0, r8]
   37e68:	add	r1, r7, #1
   37e6c:	sub	r0, r6, r1
   37e70:	cmp	r0, #2
   37e74:	blt	381a0 <flatcc_json_parser_generic_json@@Base+0x840>
   37e78:	ldrb	r0, [r1]
   37e7c:	cmp	r0, #32
   37e80:	bls	38190 <flatcc_json_parser_generic_json@@Base+0x830>
   37e84:	mov	r7, r1
   37e88:	cmp	r7, r6
   37e8c:	bne	381b8 <flatcc_json_parser_generic_json@@Base+0x858>
   37e90:	b	386d0 <flatcc_json_parser_generic_json@@Base+0xd70>
   37e94:	cmp	r7, r6
   37e98:	mov	r4, r6
   37e9c:	beq	37f4c <flatcc_json_parser_generic_json@@Base+0x5ec>
   37ea0:	mov	r4, r7
   37ea4:	sxtb	r0, r2
   37ea8:	cmp	r0, #0
   37eac:	blt	37f3c <flatcc_json_parser_generic_json@@Base+0x5dc>
   37eb0:	uxtb	r0, r2
   37eb4:	cmp	r0, #95	; 0x5f
   37eb8:	cmpne	r0, #46	; 0x2e
   37ebc:	beq	37f3c <flatcc_json_parser_generic_json@@Base+0x5dc>
   37ec0:	sub	r1, r2, #48	; 0x30
   37ec4:	uxtb	r1, r1
   37ec8:	cmp	r1, #9
   37ecc:	bls	37f3c <flatcc_json_parser_generic_json@@Base+0x5dc>
   37ed0:	orr	r1, r2, #32
   37ed4:	sub	r1, r1, #97	; 0x61
   37ed8:	uxtb	r1, r1
   37edc:	cmp	r1, #25
   37ee0:	bls	37f3c <flatcc_json_parser_generic_json@@Base+0x5dc>
   37ee4:	sub	r1, r6, r4
   37ee8:	cmp	r1, #2
   37eec:	blt	37f0c <flatcc_json_parser_generic_json@@Base+0x5ac>
   37ef0:	cmp	r0, #32
   37ef4:	bhi	37f4c <flatcc_json_parser_generic_json@@Base+0x5ec>
   37ef8:	bne	37f0c <flatcc_json_parser_generic_json@@Base+0x5ac>
   37efc:	mov	r0, r4
   37f00:	ldrb	r1, [r0, #1]!
   37f04:	cmp	r1, #32
   37f08:	bhi	37f40 <flatcc_json_parser_generic_json@@Base+0x5e0>
   37f0c:	mov	r0, r5
   37f10:	mov	r1, r4
   37f14:	mov	r2, r6
   37f18:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   37f1c:	cmp	r0, r4
   37f20:	bne	37f40 <flatcc_json_parser_generic_json@@Base+0x5e0>
   37f24:	b	37f4c <flatcc_json_parser_generic_json@@Base+0x5ec>
   37f28:	ldrb	r2, [r0]
   37f2c:	mov	r4, r0
   37f30:	sxtb	r0, r2
   37f34:	cmp	r0, #0
   37f38:	bge	37eb0 <flatcc_json_parser_generic_json@@Base+0x550>
   37f3c:	add	r0, r4, #1
   37f40:	cmp	r0, r6
   37f44:	bne	37f28 <flatcc_json_parser_generic_json@@Base+0x5c8>
   37f48:	mov	r4, r6
   37f4c:	cmp	r7, r4
   37f50:	bne	38328 <flatcc_json_parser_generic_json@@Base+0x9c8>
   37f54:	b	38720 <flatcc_json_parser_generic_json@@Base+0xdc0>
   37f58:	add	r4, r4, #2
   37f5c:	mov	r1, r6
   37f60:	cmp	r4, r6
   37f64:	beq	38318 <flatcc_json_parser_generic_json@@Base+0x9b8>
   37f68:	ldrb	r0, [r4]
   37f6c:	sub	r1, r0, #48	; 0x30
   37f70:	uxtb	r1, r1
   37f74:	cmp	r1, #9
   37f78:	bhi	37f8c <flatcc_json_parser_generic_json@@Base+0x62c>
   37f7c:	add	r4, r4, #1
   37f80:	cmp	r6, r4
   37f84:	bne	37f68 <flatcc_json_parser_generic_json@@Base+0x608>
   37f88:	b	38100 <flatcc_json_parser_generic_json@@Base+0x7a0>
   37f8c:	cmp	r4, r6
   37f90:	mov	r1, r6
   37f94:	beq	38318 <flatcc_json_parser_generic_json@@Base+0x9b8>
   37f98:	orr	r1, r0, #32
   37f9c:	cmp	r1, #101	; 0x65
   37fa0:	bne	38000 <flatcc_json_parser_generic_json@@Base+0x6a0>
   37fa4:	add	r0, r4, #1
   37fa8:	cmp	r0, r6
   37fac:	beq	380ec <flatcc_json_parser_generic_json@@Base+0x78c>
   37fb0:	ldrb	r1, [r0]
   37fb4:	cmp	r1, #45	; 0x2d
   37fb8:	cmpne	r1, #43	; 0x2b
   37fbc:	addeq	r0, r4, #2
   37fc0:	cmp	r0, r6
   37fc4:	beq	37d0c <flatcc_json_parser_generic_json@@Base+0x3ac>
   37fc8:	ldrb	r1, [r0]
   37fcc:	sub	r1, r1, #48	; 0x30
   37fd0:	uxtb	r1, r1
   37fd4:	cmp	r1, #9
   37fd8:	bhi	37d0c <flatcc_json_parser_generic_json@@Base+0x3ac>
   37fdc:	add	r1, r0, #1
   37fe0:	cmp	r6, r1
   37fe4:	beq	38100 <flatcc_json_parser_generic_json@@Base+0x7a0>
   37fe8:	ldrb	r0, [r1], #1
   37fec:	sub	r2, r0, #48	; 0x30
   37ff0:	uxtb	r2, r2
   37ff4:	cmp	r2, #10
   37ff8:	bcc	37fe0 <flatcc_json_parser_generic_json@@Base+0x680>
   37ffc:	sub	r4, r1, #1
   38000:	cmp	r4, r6
   38004:	mov	r1, r6
   38008:	beq	38318 <flatcc_json_parser_generic_json@@Base+0x9b8>
   3800c:	sub	r2, r0, #9
   38010:	cmp	r2, #49	; 0x31
   38014:	bhi	38304 <flatcc_json_parser_generic_json@@Base+0x9a4>
   38018:	add	r0, pc, #4
   3801c:	mov	r1, r4
   38020:	ldr	pc, [r0, r2, lsl #2]
   38024:	andeq	r8, r3, r8, lsr #6
   38028:	andeq	r8, r3, r8, lsr #6
   3802c:	andeq	r8, r3, r8, lsr #6
   38030:	andeq	r8, r3, r8, lsl r3
   38034:	andeq	r8, r3, r8, lsr #6
   38038:	andeq	r8, r3, r8, lsl r3
   3803c:	andeq	r8, r3, r8, lsl r3
   38040:	andeq	r8, r3, r8, lsl r3
   38044:	andeq	r8, r3, r8, lsl r3
   38048:	andeq	r8, r3, r8, lsl r3
   3804c:	andeq	r8, r3, r8, lsl r3
   38050:	andeq	r8, r3, r8, lsl r3
   38054:	andeq	r8, r3, r8, lsl r3
   38058:	andeq	r8, r3, r8, lsl r3
   3805c:	andeq	r8, r3, r8, lsl r3
   38060:	andeq	r8, r3, r8, lsl r3
   38064:	andeq	r8, r3, r8, lsl r3
   38068:	andeq	r8, r3, r8, lsl r3
   3806c:	andeq	r8, r3, r8, lsl r3
   38070:	andeq	r8, r3, r8, lsl r3
   38074:	andeq	r8, r3, r8, lsl r3
   38078:	andeq	r8, r3, r8, lsl r3
   3807c:	andeq	r8, r3, r8, lsl r3
   38080:	andeq	r8, r3, r8, lsr #6
   38084:	andeq	r8, r3, r8, lsl r3
   38088:	andeq	r8, r3, r8, lsl r3
   3808c:	andeq	r8, r3, r8, lsl r3
   38090:	andeq	r8, r3, r8, lsl r3
   38094:	andeq	r8, r3, r8, lsl r3
   38098:	andeq	r8, r3, r8, lsl r3
   3809c:	andeq	r8, r3, r8, lsl r3
   380a0:	andeq	r8, r3, r8, lsl r3
   380a4:	andeq	r8, r3, r8, lsl r3
   380a8:	andeq	r8, r3, r8, lsl r3
   380ac:	andeq	r8, r3, r8, lsl r3
   380b0:	andeq	r8, r3, r8, lsr #6
   380b4:	andeq	r8, r3, r8, lsl r3
   380b8:	andeq	r8, r3, r8, lsl r3
   380bc:	andeq	r8, r3, r8, lsl r3
   380c0:	andeq	r8, r3, r8, lsl r3
   380c4:	andeq	r8, r3, r8, lsl r3
   380c8:	andeq	r8, r3, r8, lsl r3
   380cc:	andeq	r8, r3, r8, lsl r3
   380d0:	andeq	r8, r3, r8, lsl r3
   380d4:	andeq	r8, r3, r8, lsl r3
   380d8:	andeq	r8, r3, r8, lsl r3
   380dc:	andeq	r8, r3, r8, lsl r3
   380e0:	andeq	r8, r3, r8, lsl r3
   380e4:	andeq	r8, r3, r8, lsl r3
   380e8:	andeq	r8, r3, r8, lsr #6
   380ec:	ldr	r0, [r9]
   380f0:	cmp	r0, #0
   380f4:	bne	38324 <flatcc_json_parser_generic_json@@Base+0x9c4>
   380f8:	mov	r0, #6
   380fc:	b	38124 <flatcc_json_parser_generic_json@@Base+0x7c4>
   38100:	mov	r1, r6
   38104:	ldr	r0, [r9]
   38108:	cmp	r0, #0
   3810c:	bne	38324 <flatcc_json_parser_generic_json@@Base+0x9c4>
   38110:	b	38624 <flatcc_json_parser_generic_json@@Base+0xcc4>
   38114:	ldr	r0, [r9]
   38118:	cmp	r0, #0
   3811c:	bne	38324 <flatcc_json_parser_generic_json@@Base+0x9c4>
   38120:	mov	r0, #16
   38124:	str	r0, [r9]
   38128:	ldr	r0, [sp, #8]
   3812c:	ldr	r1, [sp, #4]
   38130:	mov	r4, r6
   38134:	ldr	r0, [r0]
   38138:	sub	r0, r1, r0
   3813c:	ldr	r1, [sp, #12]
   38140:	str	r0, [r1]
   38144:	ldr	r0, [sp, #16]
   38148:	str	r6, [r0]
   3814c:	b	38328 <flatcc_json_parser_generic_json@@Base+0x9c8>
   38150:	bne	38160 <flatcc_json_parser_generic_json@@Base+0x800>
   38154:	ldrb	r0, [r7, #2]!
   38158:	cmp	r0, #32
   3815c:	bhi	38170 <flatcc_json_parser_generic_json@@Base+0x810>
   38160:	mov	r0, r5
   38164:	mov	r2, r6
   38168:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   3816c:	mov	r7, r0
   38170:	cmp	r7, r6
   38174:	beq	386d0 <flatcc_json_parser_generic_json@@Base+0xd70>
   38178:	ldrb	r0, [r7]
   3817c:	add	r8, r8, #1
   38180:	cmp	r0, #125	; 0x7d
   38184:	mov	r4, r7
   38188:	bne	38610 <flatcc_json_parser_generic_json@@Base+0xcb0>
   3818c:	b	38328 <flatcc_json_parser_generic_json@@Base+0x9c8>
   38190:	bne	381a0 <flatcc_json_parser_generic_json@@Base+0x840>
   38194:	ldrb	r0, [r7, #2]!
   38198:	cmp	r0, #32
   3819c:	bhi	381b0 <flatcc_json_parser_generic_json@@Base+0x850>
   381a0:	mov	r0, r5
   381a4:	mov	r2, r6
   381a8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   381ac:	mov	r7, r0
   381b0:	cmp	r7, r6
   381b4:	beq	386d0 <flatcc_json_parser_generic_json@@Base+0xd70>
   381b8:	ldrb	r0, [r7]
   381bc:	add	r8, r8, #1
   381c0:	cmp	r0, #93	; 0x5d
   381c4:	mov	r4, r7
   381c8:	beq	38328 <flatcc_json_parser_generic_json@@Base+0x9c8>
   381cc:	b	38610 <flatcc_json_parser_generic_json@@Base+0xcb0>
   381d0:	ldr	r0, [r9]
   381d4:	mov	r1, r6
   381d8:	cmp	r0, #0
   381dc:	bne	382b0 <flatcc_json_parser_generic_json@@Base+0x950>
   381e0:	mov	r0, #20
   381e4:	ldr	r1, [sp, #4]
   381e8:	str	r0, [r9]
   381ec:	ldr	r0, [sp, #8]
   381f0:	ldr	r0, [r0]
   381f4:	sub	r0, r1, r0
   381f8:	ldr	r1, [sp, #12]
   381fc:	str	r0, [r1]
   38200:	ldr	r0, [sp, #16]
   38204:	mov	r1, r6
   38208:	str	r6, [r0]
   3820c:	b	382b0 <flatcc_json_parser_generic_json@@Base+0x950>
   38210:	ldrb	r1, [r0]
   38214:	cmp	r1, #34	; 0x22
   38218:	beq	382d0 <flatcc_json_parser_generic_json@@Base+0x970>
   3821c:	cmp	r1, #32
   38220:	bcc	3825c <flatcc_json_parser_generic_json@@Base+0x8fc>
   38224:	rsb	r0, r0, #0
   38228:	uxtb	r2, r1
   3822c:	cmp	r2, #34	; 0x22
   38230:	cmpne	r2, #92	; 0x5c
   38234:	beq	38298 <flatcc_json_parser_generic_json@@Base+0x938>
   38238:	add	r1, r6, r0
   3823c:	cmp	r1, #1
   38240:	beq	381d0 <flatcc_json_parser_generic_json@@Base+0x870>
   38244:	rsb	r1, r0, #0
   38248:	sub	r0, r0, #1
   3824c:	ldrb	r1, [r1, #1]
   38250:	cmp	r1, #32
   38254:	bcs	38228 <flatcc_json_parser_generic_json@@Base+0x8c8>
   38258:	rsb	r0, r0, #0
   3825c:	ldr	r1, [r9]
   38260:	cmp	r1, #0
   38264:	mov	r1, r6
   38268:	bne	382b0 <flatcc_json_parser_generic_json@@Base+0x950>
   3826c:	ldr	r1, [sp, #8]
   38270:	str	r7, [r9]
   38274:	add	r2, r0, #1
   38278:	ldr	r1, [r1]
   3827c:	sub	r1, r2, r1
   38280:	ldr	r2, [sp, #12]
   38284:	str	r1, [r2]
   38288:	ldr	r1, [sp, #16]
   3828c:	str	r0, [r1]
   38290:	mov	r1, r6
   38294:	b	382b0 <flatcc_json_parser_generic_json@@Base+0x950>
   38298:	adds	r1, r6, r0
   3829c:	mov	r1, r6
   382a0:	beq	382b0 <flatcc_json_parser_generic_json@@Base+0x950>
   382a4:	rsb	r1, r0, #0
   382a8:	cmp	r2, #34	; 0x22
   382ac:	beq	382d4 <flatcc_json_parser_generic_json@@Base+0x974>
   382b0:	mov	r0, r5
   382b4:	mov	r2, r6
   382b8:	mov	r3, r4
   382bc:	bl	36f88 <flatcc_json_parser_string_escape@@Base>
   382c0:	cmp	r0, r6
   382c4:	bne	38210 <flatcc_json_parser_generic_json@@Base+0x8b0>
   382c8:	mov	r1, r6
   382cc:	b	382f0 <flatcc_json_parser_generic_json@@Base+0x990>
   382d0:	mov	r1, r0
   382d4:	cmp	r1, r6
   382d8:	beq	382f0 <flatcc_json_parser_generic_json@@Base+0x990>
   382dc:	ldrb	r0, [r1]
   382e0:	cmp	r0, #34	; 0x22
   382e4:	bne	382f0 <flatcc_json_parser_generic_json@@Base+0x990>
   382e8:	add	r4, r1, #1
   382ec:	b	38328 <flatcc_json_parser_generic_json@@Base+0x9c8>
   382f0:	ldr	r0, [r9]
   382f4:	cmp	r0, #0
   382f8:	bne	38324 <flatcc_json_parser_generic_json@@Base+0x9c4>
   382fc:	mov	r0, #20
   38300:	b	38628 <flatcc_json_parser_generic_json@@Base+0xcc8>
   38304:	cmp	r0, #93	; 0x5d
   38308:	beq	38328 <flatcc_json_parser_generic_json@@Base+0x9c8>
   3830c:	cmp	r0, #125	; 0x7d
   38310:	mov	r1, r4
   38314:	beq	38328 <flatcc_json_parser_generic_json@@Base+0x9c8>
   38318:	ldr	r0, [r9]
   3831c:	cmp	r0, #0
   38320:	beq	38624 <flatcc_json_parser_generic_json@@Base+0xcc4>
   38324:	mov	r4, r6
   38328:	subs	r1, r4, r6
   3832c:	mov	r2, r8
   38330:	movwne	r1, #1
   38334:	cmp	r8, #0
   38338:	movwne	r2, #1
   3833c:	beq	38664 <flatcc_json_parser_generic_json@@Base+0xd04>
   38340:	cmp	r4, r6
   38344:	beq	38674 <flatcc_json_parser_generic_json@@Base+0xd14>
   38348:	ldrb	r1, [sl, r8]
   3834c:	sub	r0, r6, r4
   38350:	cmp	r1, #93	; 0x5d
   38354:	bne	383a8 <flatcc_json_parser_generic_json@@Base+0xa48>
   38358:	cmp	r0, #2
   3835c:	blt	38434 <flatcc_json_parser_generic_json@@Base+0xad4>
   38360:	ldrb	r0, [r4]
   38364:	cmp	r0, #32
   38368:	bls	38420 <flatcc_json_parser_generic_json@@Base+0xac0>
   3836c:	mov	r7, r4
   38370:	cmp	r7, r6
   38374:	mov	r4, r6
   38378:	beq	385b4 <flatcc_json_parser_generic_json@@Base+0xc54>
   3837c:	ldrb	r0, [r7]
   38380:	cmp	r0, #44	; 0x2c
   38384:	beq	38490 <flatcc_json_parser_generic_json@@Base+0xb30>
   38388:	cmp	r0, #93	; 0x5d
   3838c:	beq	3856c <flatcc_json_parser_generic_json@@Base+0xc0c>
   38390:	ldr	r0, [r9]
   38394:	mov	r4, r6
   38398:	cmp	r0, #0
   3839c:	bne	385b4 <flatcc_json_parser_generic_json@@Base+0xc54>
   383a0:	mov	r0, #9
   383a4:	b	383f4 <flatcc_json_parser_generic_json@@Base+0xa94>
   383a8:	cmp	r0, #2
   383ac:	blt	3846c <flatcc_json_parser_generic_json@@Base+0xb0c>
   383b0:	ldrb	r0, [r4]
   383b4:	cmp	r0, #32
   383b8:	bls	38458 <flatcc_json_parser_generic_json@@Base+0xaf8>
   383bc:	mov	r7, r4
   383c0:	cmp	r7, r6
   383c4:	mov	r4, r6
   383c8:	beq	385b4 <flatcc_json_parser_generic_json@@Base+0xc54>
   383cc:	ldrb	r0, [r7]
   383d0:	cmp	r0, #44	; 0x2c
   383d4:	beq	384d0 <flatcc_json_parser_generic_json@@Base+0xb70>
   383d8:	cmp	r0, #125	; 0x7d
   383dc:	beq	3856c <flatcc_json_parser_generic_json@@Base+0xc0c>
   383e0:	ldr	r0, [r9]
   383e4:	mov	r4, r6
   383e8:	cmp	r0, #0
   383ec:	bne	385b4 <flatcc_json_parser_generic_json@@Base+0xc54>
   383f0:	mov	r0, #10
   383f4:	str	r0, [r9]
   383f8:	ldr	r0, [sp, #8]
   383fc:	add	r1, r7, #1
   38400:	mov	r4, r6
   38404:	ldr	r0, [r0]
   38408:	sub	r0, r1, r0
   3840c:	ldr	r1, [sp, #12]
   38410:	str	r0, [r1]
   38414:	ldr	r0, [sp, #16]
   38418:	str	r7, [r0]
   3841c:	b	385b4 <flatcc_json_parser_generic_json@@Base+0xc54>
   38420:	bne	38434 <flatcc_json_parser_generic_json@@Base+0xad4>
   38424:	mov	r7, r4
   38428:	ldrb	r0, [r7, #1]!
   3842c:	cmp	r0, #32
   38430:	bhi	38448 <flatcc_json_parser_generic_json@@Base+0xae8>
   38434:	mov	r0, r5
   38438:	mov	r1, r4
   3843c:	mov	r2, r6
   38440:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   38444:	mov	r7, r0
   38448:	cmp	r7, r6
   3844c:	mov	r4, r6
   38450:	bne	3837c <flatcc_json_parser_generic_json@@Base+0xa1c>
   38454:	b	385b4 <flatcc_json_parser_generic_json@@Base+0xc54>
   38458:	bne	3846c <flatcc_json_parser_generic_json@@Base+0xb0c>
   3845c:	mov	r7, r4
   38460:	ldrb	r0, [r7, #1]!
   38464:	cmp	r0, #32
   38468:	bhi	38480 <flatcc_json_parser_generic_json@@Base+0xb20>
   3846c:	mov	r0, r5
   38470:	mov	r1, r4
   38474:	mov	r2, r6
   38478:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   3847c:	mov	r7, r0
   38480:	cmp	r7, r6
   38484:	mov	r4, r6
   38488:	bne	383cc <flatcc_json_parser_generic_json@@Base+0xa6c>
   3848c:	b	385b4 <flatcc_json_parser_generic_json@@Base+0xc54>
   38490:	add	r1, r7, #1
   38494:	sub	r0, r6, r1
   38498:	cmp	r0, #2
   3849c:	blt	38548 <flatcc_json_parser_generic_json@@Base+0xbe8>
   384a0:	ldrb	r0, [r1]
   384a4:	cmp	r0, #32
   384a8:	bls	38538 <flatcc_json_parser_generic_json@@Base+0xbd8>
   384ac:	mov	r7, r1
   384b0:	cmp	r7, r6
   384b4:	bne	38560 <flatcc_json_parser_generic_json@@Base+0xc00>
   384b8:	ldr	r0, [r9]
   384bc:	mov	r4, r6
   384c0:	cmp	r0, #0
   384c4:	bne	385b4 <flatcc_json_parser_generic_json@@Base+0xc54>
   384c8:	mov	r0, #9
   384cc:	b	3850c <flatcc_json_parser_generic_json@@Base+0xbac>
   384d0:	add	r1, r7, #1
   384d4:	sub	r0, r6, r1
   384d8:	cmp	r0, #2
   384dc:	blt	385ec <flatcc_json_parser_generic_json@@Base+0xc8c>
   384e0:	ldrb	r0, [r1]
   384e4:	cmp	r0, #32
   384e8:	bls	385dc <flatcc_json_parser_generic_json@@Base+0xc7c>
   384ec:	mov	r7, r1
   384f0:	cmp	r7, r6
   384f4:	bne	38604 <flatcc_json_parser_generic_json@@Base+0xca4>
   384f8:	ldr	r0, [r9]
   384fc:	mov	r4, r6
   38500:	cmp	r0, #0
   38504:	bne	385b4 <flatcc_json_parser_generic_json@@Base+0xc54>
   38508:	mov	r0, #10
   3850c:	str	r0, [r9]
   38510:	ldr	r0, [sp, #8]
   38514:	ldr	r1, [sp, #4]
   38518:	mov	r4, r6
   3851c:	ldr	r0, [r0]
   38520:	sub	r0, r1, r0
   38524:	ldr	r1, [sp, #12]
   38528:	str	r0, [r1]
   3852c:	ldr	r0, [sp, #16]
   38530:	str	r6, [r0]
   38534:	b	385b4 <flatcc_json_parser_generic_json@@Base+0xc54>
   38538:	bne	38548 <flatcc_json_parser_generic_json@@Base+0xbe8>
   3853c:	ldrb	r0, [r7, #2]!
   38540:	cmp	r0, #32
   38544:	bhi	38558 <flatcc_json_parser_generic_json@@Base+0xbf8>
   38548:	mov	r0, r5
   3854c:	mov	r2, r6
   38550:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   38554:	mov	r7, r0
   38558:	cmp	r7, r6
   3855c:	beq	384b8 <flatcc_json_parser_generic_json@@Base+0xb58>
   38560:	ldrb	r0, [r7]
   38564:	cmp	r0, #93	; 0x5d
   38568:	bne	38610 <flatcc_json_parser_generic_json@@Base+0xcb0>
   3856c:	add	r1, r7, #1
   38570:	sub	r0, r6, r1
   38574:	cmp	r0, #2
   38578:	blt	385a4 <flatcc_json_parser_generic_json@@Base+0xc44>
   3857c:	ldrb	r0, [r1]
   38580:	cmp	r0, #32
   38584:	bls	38590 <flatcc_json_parser_generic_json@@Base+0xc30>
   38588:	mov	r4, r1
   3858c:	b	385b4 <flatcc_json_parser_generic_json@@Base+0xc54>
   38590:	bne	385a4 <flatcc_json_parser_generic_json@@Base+0xc44>
   38594:	ldrb	r0, [r7, #2]!
   38598:	cmp	r0, #32
   3859c:	mov	r4, r7
   385a0:	bhi	385b4 <flatcc_json_parser_generic_json@@Base+0xc54>
   385a4:	mov	r0, r5
   385a8:	mov	r2, r6
   385ac:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   385b0:	mov	r4, r0
   385b4:	subs	r1, r4, r6
   385b8:	sub	r0, r8, #1
   385bc:	movwne	r1, #1
   385c0:	subs	r2, r8, #1
   385c4:	movwne	r2, #1
   385c8:	beq	38678 <flatcc_json_parser_generic_json@@Base+0xd18>
   385cc:	cmp	r4, r6
   385d0:	mov	r8, r0
   385d4:	bne	38348 <flatcc_json_parser_generic_json@@Base+0x9e8>
   385d8:	b	38678 <flatcc_json_parser_generic_json@@Base+0xd18>
   385dc:	bne	385ec <flatcc_json_parser_generic_json@@Base+0xc8c>
   385e0:	ldrb	r0, [r7, #2]!
   385e4:	cmp	r0, #32
   385e8:	bhi	385fc <flatcc_json_parser_generic_json@@Base+0xc9c>
   385ec:	mov	r0, r5
   385f0:	mov	r2, r6
   385f4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   385f8:	mov	r7, r0
   385fc:	cmp	r7, r6
   38600:	beq	384f8 <flatcc_json_parser_generic_json@@Base+0xb98>
   38604:	ldrb	r0, [r7]
   38608:	cmp	r0, #125	; 0x7d
   3860c:	beq	3856c <flatcc_json_parser_generic_json@@Base+0xc0c>
   38610:	add	r0, sp, #24
   38614:	cmp	r7, r6
   38618:	add	r0, r0, r8
   3861c:	bne	379b4 <flatcc_json_parser_generic_json@@Base+0x54>
   38620:	b	386d0 <flatcc_json_parser_generic_json@@Base+0xd70>
   38624:	mov	r0, #6
   38628:	str	r0, [r9]
   3862c:	ldr	r0, [sp, #8]
   38630:	add	r2, r1, #1
   38634:	mov	r4, r6
   38638:	ldr	r0, [r0]
   3863c:	sub	r0, r2, r0
   38640:	ldr	r2, [sp, #12]
   38644:	str	r0, [r2]
   38648:	ldr	r0, [sp, #16]
   3864c:	str	r1, [r0]
   38650:	b	38328 <flatcc_json_parser_generic_json@@Base+0x9c8>
   38654:	mov	r4, r7
   38658:	mov	r0, r4
   3865c:	sub	sp, fp, #28
   38660:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38664:	mov	r0, r8
   38668:	cmp	r1, #0
   3866c:	beq	38680 <flatcc_json_parser_generic_json@@Base+0xd20>
   38670:	b	386d4 <flatcc_json_parser_generic_json@@Base+0xd74>
   38674:	mov	r0, r8
   38678:	cmp	r1, #0
   3867c:	bne	386d4 <flatcc_json_parser_generic_json@@Base+0xd74>
   38680:	cmp	r2, #0
   38684:	beq	386d4 <flatcc_json_parser_generic_json@@Base+0xd74>
   38688:	ldr	r1, [r9]
   3868c:	cmp	r1, #0
   38690:	bne	386d0 <flatcc_json_parser_generic_json@@Base+0xd70>
   38694:	add	r1, sp, #24
   38698:	add	r0, r1, r0
   3869c:	mov	r1, #10
   386a0:	ldrb	r0, [r0, #-1]
   386a4:	cmp	r0, #93	; 0x5d
   386a8:	movweq	r1, #9
   386ac:	str	r1, [r9]
   386b0:	ldr	r0, [sp, #8]
   386b4:	ldr	r1, [sp, #4]
   386b8:	ldr	r0, [r0]
   386bc:	sub	r0, r1, r0
   386c0:	ldr	r1, [sp, #12]
   386c4:	str	r0, [r1]
   386c8:	ldr	r0, [sp, #16]
   386cc:	str	r6, [r0]
   386d0:	mov	r4, r6
   386d4:	mov	r0, r4
   386d8:	sub	sp, fp, #28
   386dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   386e0:	ldr	r0, [r9]
   386e4:	cmp	r0, #0
   386e8:	bne	386d0 <flatcc_json_parser_generic_json@@Base+0xd70>
   386ec:	mov	r0, #10
   386f0:	str	r0, [r9]
   386f4:	b	386b0 <flatcc_json_parser_generic_json@@Base+0xd50>
   386f8:	ldr	r0, [r9]
   386fc:	cmp	r0, #0
   38700:	bne	386d0 <flatcc_json_parser_generic_json@@Base+0xd70>
   38704:	mov	r0, #4
   38708:	b	38730 <flatcc_json_parser_generic_json@@Base+0xdd0>
   3870c:	ldr	r0, [r9]
   38710:	cmp	r0, #0
   38714:	bne	386d0 <flatcc_json_parser_generic_json@@Base+0xd70>
   38718:	mov	r0, #2
   3871c:	b	38730 <flatcc_json_parser_generic_json@@Base+0xdd0>
   38720:	ldr	r0, [r9]
   38724:	cmp	r0, #0
   38728:	bne	386d0 <flatcc_json_parser_generic_json@@Base+0xd70>
   3872c:	mov	r0, #5
   38730:	str	r0, [r9]
   38734:	ldr	r0, [sp, #8]
   38738:	add	r1, r7, #1
   3873c:	ldr	r0, [r0]
   38740:	sub	r0, r1, r0
   38744:	ldr	r1, [sp, #12]
   38748:	str	r0, [r1]
   3874c:	ldr	r0, [sp, #16]
   38750:	str	r7, [r0]
   38754:	b	386d0 <flatcc_json_parser_generic_json@@Base+0xd70>

00038758 <flatcc_json_parser_double@@Base>:
   38758:	push	{r4, r5, r6, r7, fp, lr}
   3875c:	add	fp, sp, #16
   38760:	mov	r5, r0
   38764:	mov	r0, #0
   38768:	mov	r6, r1
   3876c:	cmp	r1, r2
   38770:	str	r0, [r3]
   38774:	str	r0, [r3, #4]
   38778:	moveq	r0, r6
   3877c:	popeq	{r4, r5, r6, r7, fp, pc}
   38780:	mov	r0, r6
   38784:	mov	r4, r2
   38788:	mov	r7, r3
   3878c:	ldrb	r1, [r0], #1
   38790:	cmp	r1, #45	; 0x2d
   38794:	movne	r0, r6
   38798:	sub	r2, r2, r0
   3879c:	cmp	r2, #2
   387a0:	blt	387cc <flatcc_json_parser_double@@Base+0x74>
   387a4:	sub	r1, r1, #45	; 0x2d
   387a8:	clz	r1, r1
   387ac:	lsr	r1, r1, #5
   387b0:	ldrb	r1, [r6, r1]
   387b4:	cmp	r1, #46	; 0x2e
   387b8:	beq	3881c <flatcc_json_parser_double@@Base+0xc4>
   387bc:	cmp	r1, #48	; 0x30
   387c0:	ldrbeq	r0, [r0, #1]
   387c4:	cmpeq	r0, #48	; 0x30
   387c8:	beq	3881c <flatcc_json_parser_double@@Base+0xc4>
   387cc:	sub	r1, r4, r6
   387d0:	mov	r0, r6
   387d4:	mov	r2, r7
   387d8:	bl	38850 <flatcc_json_parser_double@@Base+0xf8>
   387dc:	cmp	r0, #0
   387e0:	cmpne	r0, r6
   387e4:	popne	{r4, r5, r6, r7, fp, pc}
   387e8:	vldr	d0, [r7]
   387ec:	bl	14e84 <__isinf@plt>
   387f0:	ldr	r1, [r5, #24]
   387f4:	cmp	r0, #0
   387f8:	beq	3880c <flatcc_json_parser_double@@Base+0xb4>
   387fc:	cmp	r1, #0
   38800:	bne	38814 <flatcc_json_parser_double@@Base+0xbc>
   38804:	mov	r0, #7
   38808:	b	3882c <flatcc_json_parser_double@@Base+0xd4>
   3880c:	cmp	r1, #0
   38810:	beq	38828 <flatcc_json_parser_double@@Base+0xd0>
   38814:	mov	r0, r4
   38818:	pop	{r4, r5, r6, r7, fp, pc}
   3881c:	ldr	r0, [r5, #24]
   38820:	cmp	r0, #0
   38824:	bne	38814 <flatcc_json_parser_double@@Base+0xbc>
   38828:	mov	r0, #6
   3882c:	str	r6, [r5, #36]	; 0x24
   38830:	add	r2, r6, #1
   38834:	ldr	r1, [r5, #4]
   38838:	sub	r1, r2, r1
   3883c:	str	r1, [r5, #20]
   38840:	str	r0, [r5, #24]
   38844:	mov	r0, r4
   38848:	pop	{r4, r5, r6, r7, fp, pc}
   3884c:	nop	{0}
   38850:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38854:	add	fp, sp, #28
   38858:	sub	sp, sp, #36	; 0x24
   3885c:	cmp	r1, #1000	; 0x3e8
   38860:	mov	r3, r1
   38864:	mov	r6, #0
   38868:	mov	r9, r0
   3886c:	movge	r1, #1000	; 0x3e8
   38870:	str	r6, [r2]
   38874:	str	r6, [r2, #4]
   38878:	add	lr, r0, r1
   3887c:	add	r4, lr, #1
   38880:	cmp	r4, r0
   38884:	beq	388ec <flatcc_json_parser_double@@Base+0x194>
   38888:	ldrb	r0, [r9]
   3888c:	mov	r5, r9
   38890:	cmp	r0, #45	; 0x2d
   38894:	bne	388ac <flatcc_json_parser_double@@Base+0x154>
   38898:	cmp	r1, #0
   3889c:	beq	3893c <flatcc_json_parser_double@@Base+0x1e4>
   388a0:	add	r5, r9, #1
   388a4:	mov	r6, #1
   388a8:	ldrb	r0, [r5]
   388ac:	cmp	r0, #48	; 0x30
   388b0:	bne	388fc <flatcc_json_parser_double@@Base+0x1a4>
   388b4:	add	ip, r5, #1
   388b8:	cmp	r5, lr
   388bc:	beq	3897c <flatcc_json_parser_double@@Base+0x224>
   388c0:	ldrb	r1, [ip]
   388c4:	orr	r0, r1, #32
   388c8:	cmp	r0, #120	; 0x78
   388cc:	bne	3894c <flatcc_json_parser_double@@Base+0x1f4>
   388d0:	mov	r0, #0
   388d4:	str	r0, [r2]
   388d8:	str	r0, [r2, #4]
   388dc:	mov	r2, r9
   388e0:	mov	r0, r2
   388e4:	sub	sp, fp, #28
   388e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   388ec:	mov	r2, r9
   388f0:	mov	r0, r2
   388f4:	sub	sp, fp, #28
   388f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   388fc:	sub	r1, r0, #49	; 0x31
   38900:	uxtb	r1, r1
   38904:	cmp	r1, #9
   38908:	bcc	38924 <flatcc_json_parser_double@@Base+0x1cc>
   3890c:	cmp	r6, #0
   38910:	movne	r9, #0
   38914:	mov	r2, r9
   38918:	mov	r0, r2
   3891c:	sub	sp, fp, #28
   38920:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38924:	sub	r0, r0, #48	; 0x30
   38928:	add	ip, r5, #1
   3892c:	asr	r1, r0, #31
   38930:	cmp	ip, r4
   38934:	bne	3898c <flatcc_json_parser_double@@Base+0x234>
   38938:	b	38a08 <flatcc_json_parser_double@@Base+0x2b0>
   3893c:	mov	r2, #0
   38940:	mov	r0, r2
   38944:	sub	sp, fp, #28
   38948:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3894c:	cmp	r1, #48	; 0x30
   38950:	mov	r0, #0
   38954:	mov	r1, #0
   38958:	bne	38984 <flatcc_json_parser_double@@Base+0x22c>
   3895c:	add	r0, r5, #2
   38960:	mov	ip, r0
   38964:	cmp	r4, r0
   38968:	beq	3897c <flatcc_json_parser_double@@Base+0x224>
   3896c:	mov	r0, ip
   38970:	ldrb	r1, [r0], #1
   38974:	cmp	r1, #48	; 0x30
   38978:	beq	38960 <flatcc_json_parser_double@@Base+0x208>
   3897c:	mov	r0, #0
   38980:	mov	r1, #0
   38984:	cmp	ip, r4
   38988:	beq	38a08 <flatcc_json_parser_double@@Base+0x2b0>
   3898c:	movw	r5, #39321	; 0x9999
   38990:	mov	sl, #10
   38994:	mov	r7, ip
   38998:	str	r6, [sp, #20]
   3899c:	str	r2, [sp, #24]
   389a0:	movt	r5, #6553	; 0x1999
   389a4:	ldrb	r8, [r7]
   389a8:	sub	r2, r8, #48	; 0x30
   389ac:	uxtb	r6, r2
   389b0:	mov	r2, #0
   389b4:	cmp	r6, #9
   389b8:	bhi	389f0 <flatcc_json_parser_double@@Base+0x298>
   389bc:	movw	r6, #39320	; 0x9998
   389c0:	movt	r6, #39321	; 0x9999
   389c4:	subs	r6, r6, r0
   389c8:	sbcs	r6, r5, r1
   389cc:	bcc	38a18 <flatcc_json_parser_double@@Base+0x2c0>
   389d0:	add	r1, r1, r1, lsl #2
   389d4:	add	r7, r7, #1
   389d8:	lsl	r1, r1, #1
   389dc:	umlal	r8, r1, r0, sl
   389e0:	subs	r0, r8, #48	; 0x30
   389e4:	sbc	r1, r1, #0
   389e8:	cmp	r4, r7
   389ec:	bne	389a4 <flatcc_json_parser_double@@Base+0x24c>
   389f0:	mov	r5, r1
   389f4:	mov	sl, #0
   389f8:	str	r0, [sp, #28]
   389fc:	cmp	r7, r4
   38a00:	bne	38a3c <flatcc_json_parser_double@@Base+0x2e4>
   38a04:	b	38f34 <flatcc_json_parser_double@@Base+0x7dc>
   38a08:	mov	r2, #0
   38a0c:	mov	r0, r2
   38a10:	sub	sp, fp, #28
   38a14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38a18:	adds	r6, r0, #1
   38a1c:	mov	sl, #1
   38a20:	adc	r5, r1, #0
   38a24:	cmp	r8, #52	; 0x34
   38a28:	movls	r6, r0
   38a2c:	movls	r5, r1
   38a30:	str	r6, [sp, #28]
   38a34:	cmp	r7, r4
   38a38:	beq	38f34 <flatcc_json_parser_double@@Base+0x7dc>
   38a3c:	sub	r8, r7, ip
   38a40:	mvn	ip, r3
   38a44:	mov	r3, #0
   38a48:	cmn	ip, #1000	; 0x3e8
   38a4c:	mov	r0, ip
   38a50:	mvnlt	r0, #1000	; 0x3e8
   38a54:	mvn	r0, r0
   38a58:	sub	r0, r0, r7
   38a5c:	add	r0, r9, r0
   38a60:	ldrb	r1, [r7]
   38a64:	cmp	r1, #48	; 0x30
   38a68:	bne	38a98 <flatcc_json_parser_double@@Base+0x340>
   38a6c:	add	r1, r7, #1
   38a70:	cmp	r7, lr
   38a74:	sub	r0, r0, #1
   38a78:	add	r3, r3, #1
   38a7c:	mov	r7, r1
   38a80:	bne	38a60 <flatcc_json_parser_double@@Base+0x308>
   38a84:	mov	r7, r1
   38a88:	mov	r2, #0
   38a8c:	cmp	r7, r4
   38a90:	bne	38aec <flatcc_json_parser_double@@Base+0x394>
   38a94:	b	38f34 <flatcc_json_parser_double@@Base+0x7dc>
   38a98:	sub	r1, r1, #49	; 0x31
   38a9c:	uxtb	r1, r1
   38aa0:	cmp	r1, #8
   38aa4:	bhi	38ae0 <flatcc_json_parser_double@@Base+0x388>
   38aa8:	mvn	r2, #0
   38aac:	mov	r1, r2
   38ab0:	cmp	r0, #0
   38ab4:	beq	38ad4 <flatcc_json_parser_double@@Base+0x37c>
   38ab8:	ldrb	r2, [r7, -r1]
   38abc:	sub	r0, r0, #1
   38ac0:	sub	r2, r2, #48	; 0x30
   38ac4:	uxtb	r6, r2
   38ac8:	sub	r2, r1, #1
   38acc:	cmp	r6, #10
   38ad0:	bcc	38aac <flatcc_json_parser_double@@Base+0x354>
   38ad4:	sub	r3, r3, r1
   38ad8:	sub	r7, r7, r1
   38adc:	mov	sl, #1
   38ae0:	mov	r2, #0
   38ae4:	cmp	r7, r4
   38ae8:	beq	38f34 <flatcc_json_parser_double@@Base+0x7dc>
   38aec:	ldrb	r0, [r7]
   38af0:	cmp	r0, #46	; 0x2e
   38af4:	bne	38c98 <flatcc_json_parser_double@@Base+0x540>
   38af8:	mov	r6, r7
   38afc:	ldrb	r0, [r6, #1]!
   38b00:	sub	r1, r0, #48	; 0x30
   38b04:	uxtb	r1, r1
   38b08:	cmp	r1, #9
   38b0c:	bhi	38f34 <flatcc_json_parser_double@@Base+0x7dc>
   38b10:	cmp	r7, lr
   38b14:	beq	38bd8 <flatcc_json_parser_double@@Base+0x480>
   38b18:	cmn	ip, #1000	; 0x3e8
   38b1c:	mvn	r1, #1
   38b20:	str	sl, [sp, #12]
   38b24:	str	r6, [sp, #8]
   38b28:	str	r8, [sp, #16]
   38b2c:	mvnlt	ip, #1000	; 0x3e8
   38b30:	sub	r1, r1, ip
   38b34:	sub	r1, r1, r7
   38b38:	add	sl, r9, r1
   38b3c:	mov	r1, #0
   38b40:	mov	ip, r1
   38b44:	ldr	r1, [sp, #28]
   38b48:	movw	r6, #39320	; 0x9998
   38b4c:	movt	r6, #39321	; 0x9999
   38b50:	subs	r1, r6, r1
   38b54:	movw	r1, #39321	; 0x9999
   38b58:	movt	r1, #6553	; 0x1999
   38b5c:	sbcs	r1, r1, r5
   38b60:	bcc	38be8 <flatcc_json_parser_double@@Base+0x490>
   38b64:	add	r1, r5, r5, lsl #2
   38b68:	ldr	r5, [sp, #28]
   38b6c:	uxtb	r0, r0
   38b70:	mov	r6, #10
   38b74:	lsl	r1, r1, #1
   38b78:	umlal	r0, r1, r5, r6
   38b7c:	add	r6, r7, ip
   38b80:	subs	r0, r0, #48	; 0x30
   38b84:	sbc	r5, r1, #0
   38b88:	cmp	sl, ip
   38b8c:	str	r0, [sp, #28]
   38b90:	beq	38bb4 <flatcc_json_parser_double@@Base+0x45c>
   38b94:	ldrb	r0, [r6, #2]
   38b98:	mov	r8, r5
   38b9c:	add	r1, ip, #1
   38ba0:	sub	r5, r0, #48	; 0x30
   38ba4:	uxtb	r5, r5
   38ba8:	cmp	r5, #10
   38bac:	mov	r5, r8
   38bb0:	bcc	38b40 <flatcc_json_parser_double@@Base+0x3e8>
   38bb4:	ldr	r8, [sp, #16]
   38bb8:	ldr	sl, [sp, #12]
   38bbc:	sub	r0, r3, #1
   38bc0:	add	r7, r6, #2
   38bc4:	sub	r3, r0, ip
   38bc8:	ldr	r6, [sp, #8]
   38bcc:	cmp	r7, r4
   38bd0:	bne	38c34 <flatcc_json_parser_double@@Base+0x4dc>
   38bd4:	b	38f34 <flatcc_json_parser_double@@Base+0x7dc>
   38bd8:	mov	r7, r6
   38bdc:	cmp	r7, r4
   38be0:	bne	38c34 <flatcc_json_parser_double@@Base+0x4dc>
   38be4:	b	38f34 <flatcc_json_parser_double@@Base+0x7dc>
   38be8:	ldr	sl, [sp, #12]
   38bec:	ldr	r8, [sp, #16]
   38bf0:	add	r1, r7, ip
   38bf4:	sub	r3, r3, ip
   38bf8:	add	r7, r1, #1
   38bfc:	cmp	sl, #0
   38c00:	bne	38c28 <flatcc_json_parser_double@@Base+0x4d0>
   38c04:	ldr	r6, [sp, #28]
   38c08:	uxtb	r0, r0
   38c0c:	mov	sl, #1
   38c10:	adds	r1, r6, #1
   38c14:	adc	ip, r5, #0
   38c18:	cmp	r0, #52	; 0x34
   38c1c:	movhi	r6, r1
   38c20:	movhi	r5, ip
   38c24:	str	r6, [sp, #28]
   38c28:	ldr	r6, [sp, #8]
   38c2c:	cmp	r7, r4
   38c30:	beq	38f34 <flatcc_json_parser_double@@Base+0x7dc>
   38c34:	sub	r0, r7, r6
   38c38:	add	r8, r0, r8
   38c3c:	ldrb	r0, [r7]
   38c40:	cmp	r0, #48	; 0x30
   38c44:	bne	38c5c <flatcc_json_parser_double@@Base+0x504>
   38c48:	add	r7, r7, #1
   38c4c:	add	r3, r3, #1
   38c50:	cmp	r4, r7
   38c54:	bne	38c3c <flatcc_json_parser_double@@Base+0x4e4>
   38c58:	b	38c98 <flatcc_json_parser_double@@Base+0x540>
   38c5c:	sub	r0, r0, #49	; 0x31
   38c60:	uxtb	r0, r0
   38c64:	cmp	r0, #8
   38c68:	bhi	38c98 <flatcc_json_parser_double@@Base+0x540>
   38c6c:	add	r0, r7, #1
   38c70:	mov	sl, #1
   38c74:	mov	r7, r0
   38c78:	cmp	r4, r0
   38c7c:	beq	38c98 <flatcc_json_parser_double@@Base+0x540>
   38c80:	mov	r0, r7
   38c84:	ldrb	r1, [r0], #1
   38c88:	sub	r1, r1, #48	; 0x30
   38c8c:	uxtb	r1, r1
   38c90:	cmp	r1, #10
   38c94:	bcc	38c74 <flatcc_json_parser_double@@Base+0x51c>
   38c98:	cmp	r7, r4
   38c9c:	beq	38f34 <flatcc_json_parser_double@@Base+0x7dc>
   38ca0:	ldrb	r0, [r7]
   38ca4:	mov	ip, #0
   38ca8:	orr	r0, r0, #32
   38cac:	cmp	r0, #101	; 0x65
   38cb0:	bne	38cd0 <flatcc_json_parser_double@@Base+0x578>
   38cb4:	sub	r0, r4, r7
   38cb8:	cmp	r0, #2
   38cbc:	bge	38d48 <flatcc_json_parser_double@@Base+0x5f0>
   38cc0:	mov	r2, #0
   38cc4:	mov	r0, r2
   38cc8:	sub	sp, fp, #28
   38ccc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38cd0:	mov	r0, #0
   38cd4:	cmp	r7, r4
   38cd8:	mov	r2, #0
   38cdc:	beq	38f34 <flatcc_json_parser_double@@Base+0x7dc>
   38ce0:	ldr	r1, [sp, #28]
   38ce4:	cmp	ip, #0
   38ce8:	vmov.i32	d16, #0	; 0x00000000
   38cec:	rsbne	r0, r0, #0
   38cf0:	orrs	r1, r1, r5
   38cf4:	beq	38d18 <flatcc_json_parser_double@@Base+0x5c0>
   38cf8:	add	r1, r8, r3
   38cfc:	add	r4, r1, r0
   38d00:	cmn	r4, #324	; 0x144
   38d04:	blt	38d18 <flatcc_json_parser_double@@Base+0x5c0>
   38d08:	movw	r0, #310	; 0x136
   38d0c:	cmp	r4, r0
   38d10:	ble	38d7c <flatcc_json_parser_double@@Base+0x624>
   38d14:	vldr	d16, [pc, #988]	; 390f8 <flatcc_json_parser_double@@Base+0x9a0>
   38d18:	ldr	r0, [sp, #24]
   38d1c:	vstr	d16, [r0]
   38d20:	ldr	r0, [sp, #20]
   38d24:	cmp	r0, #0
   38d28:	ldrne	r0, [sp, #24]
   38d2c:	vldrne	d16, [r0]
   38d30:	vnegne.f64	d16, d16
   38d34:	vstrne	d16, [r0]
   38d38:	mov	r2, r7
   38d3c:	mov	r0, r2
   38d40:	sub	sp, fp, #28
   38d44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38d48:	mov	r1, r7
   38d4c:	ldrb	r0, [r1, #1]!
   38d50:	cmp	r0, #45	; 0x2d
   38d54:	beq	38e74 <flatcc_json_parser_double@@Base+0x71c>
   38d58:	mov	ip, #0
   38d5c:	cmp	r0, #43	; 0x2b
   38d60:	bne	38e84 <flatcc_json_parser_double@@Base+0x72c>
   38d64:	add	r1, r7, #2
   38d68:	mov	r2, #0
   38d6c:	cmp	r1, r4
   38d70:	beq	38f34 <flatcc_json_parser_double@@Base+0x7dc>
   38d74:	mov	ip, #0
   38d78:	b	38e84 <flatcc_json_parser_double@@Base+0x72c>
   38d7c:	mov	r0, #0
   38d80:	cmp	r0, r5, lsr #21
   38d84:	bne	38ee4 <flatcc_json_parser_double@@Base+0x78c>
   38d88:	cmp	r4, #22
   38d8c:	bhi	38ee4 <flatcc_json_parser_double@@Base+0x78c>
   38d90:	ldr	r0, [sp, #28]
   38d94:	mov	r1, r5
   38d98:	bl	482a8 <flatcc_json_printer_clear@@Base+0x4e4>
   38d9c:	sub	r2, r4, r8
   38da0:	vmov	d16, r0, r1
   38da4:	add	r0, r2, #22
   38da8:	cmp	r0, #44	; 0x2c
   38dac:	bhi	38d18 <flatcc_json_parser_double@@Base+0x5c0>
   38db0:	add	r1, pc, #0
   38db4:	ldr	pc, [r1, r0, lsl #2]
   38db8:	andeq	r8, r3, ip, ror #28
   38dbc:	andeq	r8, r3, r0, asr #30
   38dc0:	andeq	r8, r3, r8, asr #30
   38dc4:	andeq	r8, r3, r0, asr pc
   38dc8:	andeq	r8, r3, r8, asr pc
   38dcc:	andeq	r8, r3, r0, ror #30
   38dd0:	andeq	r8, r3, r8, ror #30
   38dd4:	andeq	r8, r3, r0, ror pc
   38dd8:	andeq	r8, r3, r8, ror pc
   38ddc:	andeq	r8, r3, r0, lsl #31
   38de0:	andeq	r8, r3, r8, lsl #31
   38de4:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   38de8:	muleq	r3, r8, pc	; <UNPREDICTABLE>
   38dec:	andeq	r8, r3, r0, lsr #31
   38df0:	andeq	r8, r3, r8, lsr #31
   38df4:			; <UNDEFINED> instruction: 0x00038fb0
   38df8:			; <UNDEFINED> instruction: 0x00038fb8
   38dfc:	andeq	r8, r3, r0, asr #31
   38e00:	andeq	r8, r3, r8, asr #31
   38e04:	ldrdeq	r8, [r3], -r0
   38e08:	ldrdeq	r8, [r3], -r8	; <UNPREDICTABLE>
   38e0c:	andeq	r8, r3, r0, ror #31
   38e10:	andeq	r8, r3, r8, lsl sp
   38e14:	andeq	r8, r3, ip, ror #31
   38e18:	strdeq	r8, [r3], -r8	; <UNPREDICTABLE>
   38e1c:	andeq	r9, r3, r4
   38e20:	andeq	r9, r3, r0, lsl r0
   38e24:	andeq	r9, r3, ip, lsl r0
   38e28:	andeq	r9, r3, r8, lsr #32
   38e2c:	andeq	r9, r3, r4, lsr r0
   38e30:	andeq	r9, r3, r0, asr #32
   38e34:	andeq	r9, r3, ip, asr #32
   38e38:	andeq	r9, r3, r8, asr r0
   38e3c:	andeq	r9, r3, r4, rrx
   38e40:	andeq	r9, r3, r0, ror r0
   38e44:	andeq	r9, r3, ip, ror r0
   38e48:	andeq	r9, r3, r8, lsl #1
   38e4c:	muleq	r3, r4, r0
   38e50:	andeq	r9, r3, r0, lsr #1
   38e54:	andeq	r9, r3, ip, lsr #1
   38e58:	strheq	r9, [r3], -r8
   38e5c:	andeq	r9, r3, r4, asr #1
   38e60:	ldrdeq	r9, [r3], -r0
   38e64:	ldrdeq	r9, [r3], -ip
   38e68:	andeq	r9, r3, r8, ror #1
   38e6c:	vldr	d17, [pc, #812]	; 391a0 <flatcc_json_parser_double@@Base+0xa48>
   38e70:	b	38fe4 <flatcc_json_parser_double@@Base+0x88c>
   38e74:	add	r1, r7, #2
   38e78:	mov	ip, #1
   38e7c:	cmp	r1, r4
   38e80:	beq	38f30 <flatcc_json_parser_double@@Base+0x7d8>
   38e84:	ldrb	r0, [r1]
   38e88:	mov	r7, r5
   38e8c:	mov	r2, #0
   38e90:	sub	r0, r0, #48	; 0x30
   38e94:	uxtb	r5, r0
   38e98:	cmp	r5, #9
   38e9c:	bhi	38f34 <flatcc_json_parser_double@@Base+0x7dc>
   38ea0:	mov	r5, r7
   38ea4:	add	r7, r1, #1
   38ea8:	cmp	r1, lr
   38eac:	beq	38cd4 <flatcc_json_parser_double@@Base+0x57c>
   38eb0:	ldrb	r1, [r7]
   38eb4:	sub	r2, r1, #48	; 0x30
   38eb8:	uxtb	r2, r2
   38ebc:	cmp	r2, #9
   38ec0:	bhi	38cd4 <flatcc_json_parser_double@@Base+0x57c>
   38ec4:	cmp	r0, #32768	; 0x8000
   38ec8:	add	r7, r7, #1
   38ecc:	addlt	r0, r0, r0, lsl #2
   38ed0:	addlt	r0, r1, r0, lsl #1
   38ed4:	sublt	r0, r0, #48	; 0x30
   38ed8:	cmp	r4, r7
   38edc:	bne	38eb0 <flatcc_json_parser_double@@Base+0x758>
   38ee0:	b	38cd4 <flatcc_json_parser_double@@Base+0x57c>
   38ee4:	ldr	r0, [sp, #24]
   38ee8:	mov	r1, r5
   38eec:	mov	r2, r4
   38ef0:	mov	r3, r8
   38ef4:	str	sl, [sp]
   38ef8:	str	r0, [sp, #4]
   38efc:	ldr	r0, [sp, #28]
   38f00:	bl	368a8 <grisu3_diy_fp_encode_double@@Base>
   38f04:	cmp	r0, #0
   38f08:	bne	38d20 <flatcc_json_parser_double@@Base+0x5c8>
   38f0c:	add	r1, sp, #32
   38f10:	mov	r0, r9
   38f14:	bl	14f08 <strtod@plt>
   38f18:	ldr	r0, [sp, #24]
   38f1c:	vstr	d0, [r0]
   38f20:	ldr	r0, [sp, #32]
   38f24:	cmp	r0, r7
   38f28:	movcc	r7, r0
   38f2c:	b	38d38 <flatcc_json_parser_double@@Base+0x5e0>
   38f30:	mov	r2, #0
   38f34:	mov	r0, r2
   38f38:	sub	sp, fp, #28
   38f3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38f40:	vldr	d17, [pc, #440]	; 39100 <flatcc_json_parser_double@@Base+0x9a8>
   38f44:	b	38fe4 <flatcc_json_parser_double@@Base+0x88c>
   38f48:	vldr	d17, [pc, #440]	; 39108 <flatcc_json_parser_double@@Base+0x9b0>
   38f4c:	b	38fe4 <flatcc_json_parser_double@@Base+0x88c>
   38f50:	vldr	d17, [pc, #440]	; 39110 <flatcc_json_parser_double@@Base+0x9b8>
   38f54:	b	38fe4 <flatcc_json_parser_double@@Base+0x88c>
   38f58:	vldr	d17, [pc, #440]	; 39118 <flatcc_json_parser_double@@Base+0x9c0>
   38f5c:	b	38fe4 <flatcc_json_parser_double@@Base+0x88c>
   38f60:	vldr	d17, [pc, #440]	; 39120 <flatcc_json_parser_double@@Base+0x9c8>
   38f64:	b	38fe4 <flatcc_json_parser_double@@Base+0x88c>
   38f68:	vldr	d17, [pc, #440]	; 39128 <flatcc_json_parser_double@@Base+0x9d0>
   38f6c:	b	38fe4 <flatcc_json_parser_double@@Base+0x88c>
   38f70:	vldr	d17, [pc, #440]	; 39130 <flatcc_json_parser_double@@Base+0x9d8>
   38f74:	b	38fe4 <flatcc_json_parser_double@@Base+0x88c>
   38f78:	vldr	d17, [pc, #440]	; 39138 <flatcc_json_parser_double@@Base+0x9e0>
   38f7c:	b	38fe4 <flatcc_json_parser_double@@Base+0x88c>
   38f80:	vldr	d17, [pc, #440]	; 39140 <flatcc_json_parser_double@@Base+0x9e8>
   38f84:	b	38fe4 <flatcc_json_parser_double@@Base+0x88c>
   38f88:	vldr	d17, [pc, #440]	; 39148 <flatcc_json_parser_double@@Base+0x9f0>
   38f8c:	b	38fe4 <flatcc_json_parser_double@@Base+0x88c>
   38f90:	vldr	d17, [pc, #440]	; 39150 <flatcc_json_parser_double@@Base+0x9f8>
   38f94:	b	38fe4 <flatcc_json_parser_double@@Base+0x88c>
   38f98:	vldr	d17, [pc, #440]	; 39158 <flatcc_json_parser_double@@Base+0xa00>
   38f9c:	b	38fe4 <flatcc_json_parser_double@@Base+0x88c>
   38fa0:	vldr	d17, [pc, #440]	; 39160 <flatcc_json_parser_double@@Base+0xa08>
   38fa4:	b	38fe4 <flatcc_json_parser_double@@Base+0x88c>
   38fa8:	vldr	d17, [pc, #440]	; 39168 <flatcc_json_parser_double@@Base+0xa10>
   38fac:	b	38fe4 <flatcc_json_parser_double@@Base+0x88c>
   38fb0:	vldr	d17, [pc, #440]	; 39170 <flatcc_json_parser_double@@Base+0xa18>
   38fb4:	b	38fe4 <flatcc_json_parser_double@@Base+0x88c>
   38fb8:	vldr	d17, [pc, #440]	; 39178 <flatcc_json_parser_double@@Base+0xa20>
   38fbc:	b	38fe4 <flatcc_json_parser_double@@Base+0x88c>
   38fc0:	vldr	d17, [pc, #440]	; 39180 <flatcc_json_parser_double@@Base+0xa28>
   38fc4:	b	38fe4 <flatcc_json_parser_double@@Base+0x88c>
   38fc8:	vldr	d17, [pc, #440]	; 39188 <flatcc_json_parser_double@@Base+0xa30>
   38fcc:	b	38fe4 <flatcc_json_parser_double@@Base+0x88c>
   38fd0:	vldr	d17, [pc, #440]	; 39190 <flatcc_json_parser_double@@Base+0xa38>
   38fd4:	b	38fe4 <flatcc_json_parser_double@@Base+0x88c>
   38fd8:	vldr	d17, [pc, #440]	; 39198 <flatcc_json_parser_double@@Base+0xa40>
   38fdc:	b	38fe4 <flatcc_json_parser_double@@Base+0x88c>
   38fe0:	vmov.f64	d17, #36	; 0x41200000  10.0
   38fe4:	vdiv.f64	d16, d16, d17
   38fe8:	b	38d18 <flatcc_json_parser_double@@Base+0x5c0>
   38fec:	vmov.f64	d17, #36	; 0x41200000  10.0
   38ff0:	vmul.f64	d16, d16, d17
   38ff4:	b	38d18 <flatcc_json_parser_double@@Base+0x5c0>
   38ff8:	vldr	d17, [pc, #408]	; 39198 <flatcc_json_parser_double@@Base+0xa40>
   38ffc:	vmul.f64	d16, d16, d17
   39000:	b	38d18 <flatcc_json_parser_double@@Base+0x5c0>
   39004:	vldr	d17, [pc, #388]	; 39190 <flatcc_json_parser_double@@Base+0xa38>
   39008:	vmul.f64	d16, d16, d17
   3900c:	b	38d18 <flatcc_json_parser_double@@Base+0x5c0>
   39010:	vldr	d17, [pc, #368]	; 39188 <flatcc_json_parser_double@@Base+0xa30>
   39014:	vmul.f64	d16, d16, d17
   39018:	b	38d18 <flatcc_json_parser_double@@Base+0x5c0>
   3901c:	vldr	d17, [pc, #348]	; 39180 <flatcc_json_parser_double@@Base+0xa28>
   39020:	vmul.f64	d16, d16, d17
   39024:	b	38d18 <flatcc_json_parser_double@@Base+0x5c0>
   39028:	vldr	d17, [pc, #328]	; 39178 <flatcc_json_parser_double@@Base+0xa20>
   3902c:	vmul.f64	d16, d16, d17
   39030:	b	38d18 <flatcc_json_parser_double@@Base+0x5c0>
   39034:	vldr	d17, [pc, #308]	; 39170 <flatcc_json_parser_double@@Base+0xa18>
   39038:	vmul.f64	d16, d16, d17
   3903c:	b	38d18 <flatcc_json_parser_double@@Base+0x5c0>
   39040:	vldr	d17, [pc, #288]	; 39168 <flatcc_json_parser_double@@Base+0xa10>
   39044:	vmul.f64	d16, d16, d17
   39048:	b	38d18 <flatcc_json_parser_double@@Base+0x5c0>
   3904c:	vldr	d17, [pc, #268]	; 39160 <flatcc_json_parser_double@@Base+0xa08>
   39050:	vmul.f64	d16, d16, d17
   39054:	b	38d18 <flatcc_json_parser_double@@Base+0x5c0>
   39058:	vldr	d17, [pc, #248]	; 39158 <flatcc_json_parser_double@@Base+0xa00>
   3905c:	vmul.f64	d16, d16, d17
   39060:	b	38d18 <flatcc_json_parser_double@@Base+0x5c0>
   39064:	vldr	d17, [pc, #228]	; 39150 <flatcc_json_parser_double@@Base+0x9f8>
   39068:	vmul.f64	d16, d16, d17
   3906c:	b	38d18 <flatcc_json_parser_double@@Base+0x5c0>
   39070:	vldr	d17, [pc, #208]	; 39148 <flatcc_json_parser_double@@Base+0x9f0>
   39074:	vmul.f64	d16, d16, d17
   39078:	b	38d18 <flatcc_json_parser_double@@Base+0x5c0>
   3907c:	vldr	d17, [pc, #188]	; 39140 <flatcc_json_parser_double@@Base+0x9e8>
   39080:	vmul.f64	d16, d16, d17
   39084:	b	38d18 <flatcc_json_parser_double@@Base+0x5c0>
   39088:	vldr	d17, [pc, #168]	; 39138 <flatcc_json_parser_double@@Base+0x9e0>
   3908c:	vmul.f64	d16, d16, d17
   39090:	b	38d18 <flatcc_json_parser_double@@Base+0x5c0>
   39094:	vldr	d17, [pc, #148]	; 39130 <flatcc_json_parser_double@@Base+0x9d8>
   39098:	vmul.f64	d16, d16, d17
   3909c:	b	38d18 <flatcc_json_parser_double@@Base+0x5c0>
   390a0:	vldr	d17, [pc, #128]	; 39128 <flatcc_json_parser_double@@Base+0x9d0>
   390a4:	vmul.f64	d16, d16, d17
   390a8:	b	38d18 <flatcc_json_parser_double@@Base+0x5c0>
   390ac:	vldr	d17, [pc, #108]	; 39120 <flatcc_json_parser_double@@Base+0x9c8>
   390b0:	vmul.f64	d16, d16, d17
   390b4:	b	38d18 <flatcc_json_parser_double@@Base+0x5c0>
   390b8:	vldr	d17, [pc, #88]	; 39118 <flatcc_json_parser_double@@Base+0x9c0>
   390bc:	vmul.f64	d16, d16, d17
   390c0:	b	38d18 <flatcc_json_parser_double@@Base+0x5c0>
   390c4:	vldr	d17, [pc, #68]	; 39110 <flatcc_json_parser_double@@Base+0x9b8>
   390c8:	vmul.f64	d16, d16, d17
   390cc:	b	38d18 <flatcc_json_parser_double@@Base+0x5c0>
   390d0:	vldr	d17, [pc, #48]	; 39108 <flatcc_json_parser_double@@Base+0x9b0>
   390d4:	vmul.f64	d16, d16, d17
   390d8:	b	38d18 <flatcc_json_parser_double@@Base+0x5c0>
   390dc:	vldr	d17, [pc, #28]	; 39100 <flatcc_json_parser_double@@Base+0x9a8>
   390e0:	vmul.f64	d16, d16, d17
   390e4:	b	38d18 <flatcc_json_parser_double@@Base+0x5c0>
   390e8:	vldr	d17, [pc, #176]	; 391a0 <flatcc_json_parser_double@@Base+0xa48>
   390ec:	vmul.f64	d16, d16, d17
   390f0:	b	38d18 <flatcc_json_parser_double@@Base+0x5c0>
   390f4:	nop	{0}
   390f8:	andeq	r0, r0, r0
   390fc:	svcvc	0x00f00000	; IMB
   39100:	usatle	lr, #2, r0, asr #30
   39104:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   39108:	ldmvc	r5!, {r6, sl, fp, pc}
   3910c:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   39110:	addsvs	r3, r1, r0, lsl #26
   39114:	mvnmi	r5, #228, 16	; 0xe40000
   39118:	strbvs	ip, [lr, -r0, lsl #16]
   3911c:			; <UNDEFINED> instruction: 0x43abc16d
   39120:	ldrbhi	sl, [r8]
   39124:	cmnmi	r6, #1459617792	; 0x57000000
   39128:	strbcc	r8, [r0, r0]!
   3912c:	movtmi	ip, #4985	; 0x1379
   39130:	ldrtcs	r0, [r4], -r0
   39134:	movwmi	r6, #52213	; 0xcbf5
   39138:	cdpne	0, 9, cr0, cr0, cr0, {0}
   3913c:	sbcsmi	fp, r6, #196, 24	; 0xc400
   39140:	strb	r0, [r0, #-0]
   39144:	adcmi	r3, r2, #156	; 0x9c
   39148:	andge	r0, r0, #0
   3914c:	rsbmi	r1, sp, #148, 20	; 0x94000
   39150:	stmda	r0, {}	; <UNPREDICTABLE>
   39154:	eorsmi	r4, r7, #7733248	; 0x760000
   39158:	andcs	r0, r0, r0
   3915c:	andmi	sl, r2, #95	; 0x5f
   39160:	andeq	r0, r0, r0
   39164:	bicmi	ip, sp, r5, ror #26
   39168:	andeq	r0, r0, r0
   3916c:	orrsmi	sp, r7, r4, lsl #15
   39170:	andeq	r0, r0, r0
   39174:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   39178:	andeq	r0, r0, r0
   3917c:	smlawbmi	lr, r0, r4, r8
   39180:	andeq	r0, r0, r0
   39184:	rscsmi	r6, r8, r0, lsl #20
   39188:	andeq	r0, r0, r0
   3918c:	sbcmi	r8, r3, r0, lsl #16
   39190:	andeq	r0, r0, r0
   39194:	addmi	r4, pc, r0
   39198:	andeq	r0, r0, r0
   3919c:	subsmi	r0, r9, r0
   391a0:			; <UNDEFINED> instruction: 0x064dd592
   391a4:	strmi	pc, [r0], #207	; 0xcf

000391a8 <flatcc_json_parser_float@@Base>:
   391a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   391ac:	add	fp, sp, #24
   391b0:	vpush	{d8-d9}
   391b4:	sub	sp, sp, #8
   391b8:	mov	r8, r0
   391bc:	mov	r0, #0
   391c0:	mov	r6, r1
   391c4:	cmp	r1, r2
   391c8:	str	r0, [r3]
   391cc:	beq	39290 <flatcc_json_parser_float@@Base+0xe8>
   391d0:	mov	r0, r6
   391d4:	mov	r5, r2
   391d8:	mov	r7, r3
   391dc:	ldrb	r1, [r0], #1
   391e0:	cmp	r1, #45	; 0x2d
   391e4:	movne	r0, r6
   391e8:	sub	r2, r2, r0
   391ec:	cmp	r2, #2
   391f0:	blt	3921c <flatcc_json_parser_float@@Base+0x74>
   391f4:	sub	r1, r1, #45	; 0x2d
   391f8:	clz	r1, r1
   391fc:	lsr	r1, r1, #5
   39200:	ldrb	r1, [r6, r1]
   39204:	cmp	r1, #46	; 0x2e
   39208:	beq	392a4 <flatcc_json_parser_float@@Base+0xfc>
   3920c:	cmp	r1, #48	; 0x30
   39210:	ldrbeq	r0, [r0, #1]
   39214:	cmpeq	r0, #48	; 0x30
   39218:	beq	392a4 <flatcc_json_parser_float@@Base+0xfc>
   3921c:	sub	r1, r5, r6
   39220:	mov	r2, sp
   39224:	mov	r0, r6
   39228:	bl	38850 <flatcc_json_parser_double@@Base+0xf8>
   3922c:	vldr	d16, [sp]
   39230:	mov	r4, r0
   39234:	add	r0, pc, #176	; 0xb0
   39238:	vcmpe.f64	d16, #0.0
   3923c:	vcvt.f32.f64	s16, d16
   39240:	vmrs	APSR_nzcv, fpscr
   39244:	vmov.f32	s0, s16
   39248:	addmi	r0, r0, #4
   3924c:	vldr	s18, [r0]
   39250:	bl	14e78 <__isinff@plt>
   39254:	cmp	r0, #0
   39258:	movne	r4, r6
   3925c:	vseleq.f32	s0, s16, s18
   39260:	cmp	r4, #0
   39264:	vstr	s0, [r7]
   39268:	cmpne	r4, r6
   3926c:	bne	39294 <flatcc_json_parser_float@@Base+0xec>
   39270:	bl	14e78 <__isinff@plt>
   39274:	ldr	r1, [r8, #24]
   39278:	cmp	r0, #0
   3927c:	beq	392b4 <flatcc_json_parser_float@@Base+0x10c>
   39280:	cmp	r1, #0
   39284:	bne	392d8 <flatcc_json_parser_float@@Base+0x130>
   39288:	mov	r0, #7
   3928c:	b	392c0 <flatcc_json_parser_float@@Base+0x118>
   39290:	mov	r4, r6
   39294:	mov	r0, r4
   39298:	sub	sp, fp, #40	; 0x28
   3929c:	vpop	{d8-d9}
   392a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   392a4:	ldr	r0, [r8, #24]
   392a8:	cmp	r0, #0
   392ac:	bne	392d8 <flatcc_json_parser_float@@Base+0x130>
   392b0:	b	392bc <flatcc_json_parser_float@@Base+0x114>
   392b4:	cmp	r1, #0
   392b8:	bne	392d8 <flatcc_json_parser_float@@Base+0x130>
   392bc:	mov	r0, #6
   392c0:	str	r6, [r8, #36]	; 0x24
   392c4:	add	r2, r6, #1
   392c8:	ldr	r1, [r8, #4]
   392cc:	sub	r1, r2, r1
   392d0:	str	r1, [r8, #20]
   392d4:	str	r0, [r8, #24]
   392d8:	mov	r4, r5
   392dc:	mov	r0, r4
   392e0:	sub	sp, fp, #40	; 0x28
   392e4:	vpop	{d8-d9}
   392e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   392ec:	svcvc	0x00800000
   392f0:			; <UNDEFINED> instruction: 0xff800000

000392f4 <flatcc_json_parser_integer@@Base>:
   392f4:	push	{r4, r5, r6, r7, fp, lr}
   392f8:	add	fp, sp, #16
   392fc:	mov	ip, r1
   39300:	cmp	r1, r2
   39304:	beq	393f0 <flatcc_json_parser_integer@@Base+0xfc>
   39308:	ldrb	r1, [ip]
   3930c:	mov	r4, #0
   39310:	sub	r1, r1, #45	; 0x2d
   39314:	clz	r1, r1
   39318:	lsr	r1, r1, #5
   3931c:	str	r1, [r3]
   39320:	add	r1, ip, r1
   39324:	cmp	r1, r2
   39328:	beq	393dc <flatcc_json_parser_integer@@Base+0xe8>
   3932c:	mov	lr, #10
   39330:	mov	r5, #0
   39334:	ldrb	r6, [r1]
   39338:	sub	r7, r6, #48	; 0x30
   3933c:	uxtb	r7, r7
   39340:	cmp	r7, #9
   39344:	bhi	393f8 <flatcc_json_parser_integer@@Base+0x104>
   39348:	add	r7, r5, r5, lsl #2
   3934c:	lsl	r7, r7, #1
   39350:	umlal	r6, r7, r4, lr
   39354:	subs	r6, r6, #48	; 0x30
   39358:	sbc	r7, r7, #0
   3935c:	subs	r4, r6, r4
   39360:	sbcs	r4, r7, r5
   39364:	bcc	39408 <flatcc_json_parser_integer@@Base+0x114>
   39368:	add	r1, r1, #1
   3936c:	mov	r4, r6
   39370:	mov	r5, r7
   39374:	cmp	r2, r1
   39378:	bne	39334 <flatcc_json_parser_integer@@Base+0x40>
   3937c:	mov	r3, #0
   39380:	mov	r1, r2
   39384:	mov	r4, r6
   39388:	mov	r5, r7
   3938c:	cmp	r1, ip
   39390:	beq	393f0 <flatcc_json_parser_integer@@Base+0xfc>
   39394:	cmp	r3, #0
   39398:	beq	39424 <flatcc_json_parser_integer@@Base+0x130>
   3939c:	ldrb	r3, [r1]
   393a0:	cmp	r3, #46	; 0x2e
   393a4:	cmpne	r3, #101	; 0x65
   393a8:	bne	3941c <flatcc_json_parser_integer@@Base+0x128>
   393ac:	ldr	r3, [r0, #24]
   393b0:	cmp	r3, #0
   393b4:	bne	39414 <flatcc_json_parser_integer@@Base+0x120>
   393b8:	str	r1, [r0, #36]	; 0x24
   393bc:	add	r1, r1, #1
   393c0:	mov	r3, #12
   393c4:	ldr	r7, [r0, #4]
   393c8:	sub	r1, r1, r7
   393cc:	str	r1, [r0, #20]
   393d0:	str	r3, [r0, #24]
   393d4:	mov	r0, r2
   393d8:	pop	{r4, r5, r6, r7, fp, pc}
   393dc:	mov	r1, r2
   393e0:	mov	r5, #0
   393e4:	mov	r3, #0
   393e8:	cmp	r1, ip
   393ec:	bne	39394 <flatcc_json_parser_integer@@Base+0xa0>
   393f0:	mov	r0, ip
   393f4:	pop	{r4, r5, r6, r7, fp, pc}
   393f8:	mov	r3, #1
   393fc:	cmp	r1, ip
   39400:	bne	39394 <flatcc_json_parser_integer@@Base+0xa0>
   39404:	b	393f0 <flatcc_json_parser_integer@@Base+0xfc>
   39408:	ldr	r7, [r0, #24]
   3940c:	cmp	r7, #0
   39410:	beq	39438 <flatcc_json_parser_integer@@Base+0x144>
   39414:	mov	r0, r2
   39418:	pop	{r4, r5, r6, r7, fp, pc}
   3941c:	cmp	r3, #69	; 0x45
   39420:	beq	393ac <flatcc_json_parser_integer@@Base+0xb8>
   39424:	ldr	r0, [fp, #8]
   39428:	mov	ip, r1
   3942c:	strd	r4, [r0]
   39430:	mov	r0, ip
   39434:	pop	{r4, r5, r6, r7, fp, pc}
   39438:	str	r1, [r0, #36]	; 0x24
   3943c:	cmp	r3, #0
   39440:	mov	r7, #8
   39444:	add	r1, r1, #1
   39448:	ldr	r3, [r0, #4]
   3944c:	movweq	r7, #7
   39450:	sub	r1, r1, r3
   39454:	str	r1, [r0, #20]
   39458:	str	r7, [r0, #24]
   3945c:	mov	r0, r2
   39460:	pop	{r4, r5, r6, r7, fp, pc}

00039464 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   39464:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39468:	add	fp, sp, #28
   3946c:	sub	sp, sp, #28
   39470:	ldr	r9, [fp, #8]
   39474:	mov	r6, r3
   39478:	mov	r4, r2
   3947c:	mov	r5, r0
   39480:	cmp	r1, r2
   39484:	beq	394cc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x68>
   39488:	ldrb	r0, [r1]
   3948c:	cmp	r0, #34	; 0x22
   39490:	bne	394cc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x68>
   39494:	add	sl, r1, #1
   39498:	cmp	sl, r4
   3949c:	beq	394d8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x74>
   394a0:	mov	r7, sl
   394a4:	ldrb	r1, [r7]
   394a8:	cmp	r1, #32
   394ac:	bcc	3971c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2b8>
   394b0:	cmp	r1, #34	; 0x22
   394b4:	cmpne	r1, #92	; 0x5c
   394b8:	beq	3957c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x118>
   394bc:	add	r7, r7, #1
   394c0:	cmp	r4, r7
   394c4:	bne	394a4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x40>
   394c8:	b	394d8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x74>
   394cc:	ldr	r0, [r5, #24]
   394d0:	cmp	r0, #0
   394d4:	beq	394ec <flatcc_json_parser_build_uint8_vector_base64@@Base+0x88>
   394d8:	ldr	r0, [r5, #24]
   394dc:	cmp	r0, #0
   394e0:	mov	r0, r4
   394e4:	bne	39538 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   394e8:	b	39518 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xb4>
   394ec:	str	r1, [r5, #36]	; 0x24
   394f0:	add	r1, r1, #1
   394f4:	mov	r0, #16
   394f8:	ldr	r2, [r5, #4]
   394fc:	sub	r1, r1, r2
   39500:	str	r1, [r5, #20]
   39504:	str	r0, [r5, #24]
   39508:	ldr	r0, [r5, #24]
   3950c:	cmp	r0, #0
   39510:	mov	r0, r4
   39514:	bne	39538 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   39518:	str	r4, [r5, #36]	; 0x24
   3951c:	mov	r0, #20
   39520:	add	r2, r4, #1
   39524:	ldr	r1, [r5, #4]
   39528:	sub	r1, r2, r1
   3952c:	str	r1, [r5, #20]
   39530:	str	r0, [r5, #24]
   39534:	mov	r0, r4
   39538:	mov	r1, #0
   3953c:	str	r1, [r6]
   39540:	ldr	r1, [r5, #24]
   39544:	cmp	r1, #0
   39548:	bne	39570 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x10c>
   3954c:	str	r0, [r5, #36]	; 0x24
   39550:	mov	r1, #31
   39554:	cmp	r9, #0
   39558:	add	r0, r0, #1
   3955c:	ldr	r2, [r5, #4]
   39560:	movwne	r1, #32
   39564:	sub	r0, r0, r2
   39568:	str	r0, [r5, #20]
   3956c:	str	r1, [r5, #24]
   39570:	mov	r0, r4
   39574:	sub	sp, fp, #28
   39578:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3957c:	cmp	r4, r7
   39580:	mov	r0, r4
   39584:	beq	39538 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   39588:	cmp	r1, #34	; 0x22
   3958c:	bne	395b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x154>
   39590:	sub	r1, r7, sl
   39594:	and	r0, r1, #3
   39598:	str	r1, [sp, #20]
   3959c:	lsr	r1, r1, #2
   395a0:	add	r8, r1, r1, lsl #1
   395a4:	cmp	r0, #2
   395a8:	beq	395c0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x15c>
   395ac:	cmp	r0, #3
   395b0:	addeq	r8, r8, #2
   395b4:	b	395c4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x160>
   395b8:	mov	r0, r7
   395bc:	b	39538 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   395c0:	add	r8, r8, #1
   395c4:	ldr	r0, [r5]
   395c8:	mov	r1, #1
   395cc:	mov	r2, #1
   395d0:	mvn	r3, #0
   395d4:	bl	31cdc <flatcc_builder_start_vector@@Base>
   395d8:	cmp	r0, #0
   395dc:	beq	3961c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b8>
   395e0:	mov	r0, #0
   395e4:	str	r0, [r6]
   395e8:	ldr	r0, [r5, #24]
   395ec:	cmp	r0, #0
   395f0:	bne	39570 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x10c>
   395f4:	mov	r0, #33	; 0x21
   395f8:	str	r7, [r5, #36]	; 0x24
   395fc:	add	r2, r7, #1
   39600:	ldr	r1, [r5, #4]
   39604:	sub	r1, r2, r1
   39608:	str	r1, [r5, #20]
   3960c:	str	r0, [r5, #24]
   39610:	mov	r0, r4
   39614:	sub	sp, fp, #28
   39618:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3961c:	ldr	r0, [r5]
   39620:	mov	r1, r8
   39624:	bl	31188 <flatcc_builder_extend_vector@@Base>
   39628:	cmp	r0, #0
   3962c:	beq	395e0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x17c>
   39630:	movw	r2, #58224	; 0xe370
   39634:	mov	r1, r8
   39638:	movw	r8, #57968	; 0xe270
   3963c:	str	r0, [sp]
   39640:	str	r0, [sp, #12]
   39644:	ldr	r0, [sp, #20]
   39648:	cmp	r9, #0
   3964c:	add	lr, sp, #24
   39650:	mov	ip, sl
   39654:	movt	r2, #4
   39658:	movt	r8, #4
   3965c:	str	r1, [sp, #4]
   39660:	movne	r8, r2
   39664:	cmp	r1, #0
   39668:	mvneq	r1, #0
   3966c:	str	r1, [sp, #16]
   39670:	mov	r1, #0
   39674:	str	r0, [sp, #8]
   39678:	cmp	r0, r1
   3967c:	beq	3973c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d8>
   39680:	ldrb	r2, [ip, r1]
   39684:	ldrb	r3, [r8, r2]
   39688:	cmp	r3, #64	; 0x40
   3968c:	strb	r3, [lr, r1]
   39690:	bcc	396a8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x244>
   39694:	cmp	r3, #65	; 0x41
   39698:	bne	39778 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x314>
   3969c:	sub	r1, r1, #1
   396a0:	sub	r0, r0, #1
   396a4:	add	ip, ip, #1
   396a8:	add	r1, r1, #1
   396ac:	cmp	r1, #4
   396b0:	bcc	39678 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x214>
   396b4:	ldr	lr, [sp, #16]
   396b8:	cmp	lr, #3
   396bc:	bcc	3976c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x308>
   396c0:	ldrb	r2, [sp, #25]
   396c4:	ldrb	r1, [sp, #24]
   396c8:	subs	lr, lr, #3
   396cc:	sub	r0, r0, #4
   396d0:	add	ip, ip, #4
   396d4:	str	lr, [sp, #16]
   396d8:	add	lr, sp, #24
   396dc:	lsr	r3, r2, #4
   396e0:	orr	r1, r3, r1, lsl #2
   396e4:	ldr	r3, [sp, #12]
   396e8:	strb	r1, [r3]
   396ec:	ldrb	r1, [sp, #26]
   396f0:	lsr	r1, r1, #2
   396f4:	orr	r1, r1, r2, lsl #4
   396f8:	strb	r1, [r3, #1]
   396fc:	ldrb	r1, [sp, #26]
   39700:	ldrb	r2, [sp, #27]
   39704:	orr	r1, r2, r1, lsl #6
   39708:	strb	r1, [r3, #2]
   3970c:	add	r3, r3, #3
   39710:	str	r3, [sp, #12]
   39714:	bne	39670 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x20c>
   39718:	b	39828 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c4>
   3971c:	ldr	r0, [r5, #24]
   39720:	cmp	r0, #0
   39724:	mov	r0, r4
   39728:	bne	39538 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   3972c:	str	r7, [r5, #36]	; 0x24
   39730:	mov	r0, #17
   39734:	add	r2, r7, #1
   39738:	b	39524 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   3973c:	mov	r1, r0
   39740:	mov	r3, r0
   39744:	ldr	r2, [sp, #16]
   39748:	sub	r0, r0, r3
   3974c:	cmp	r1, #0
   39750:	beq	39828 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c4>
   39754:	cmp	r1, #3
   39758:	beq	397b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x354>
   3975c:	cmp	r1, #2
   39760:	ldrbeq	r1, [sp, #25]
   39764:	tsteq	r1, #15
   39768:	beq	39810 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3ac>
   3976c:	ldr	r0, [sp, #20]
   39770:	ldr	r1, [sp, #8]
   39774:	b	39838 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3d4>
   39778:	cmp	r3, #66	; 0x42
   3977c:	bne	397f8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x394>
   39780:	add	r2, r1, #1
   39784:	mov	r3, r2
   39788:	cmp	r2, r0
   3978c:	bcs	39744 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e0>
   39790:	cmp	r3, #7
   39794:	bhi	39744 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e0>
   39798:	ldrb	r2, [ip, r3]
   3979c:	ldrb	r2, [r8, r2]
   397a0:	sub	r2, r2, #65	; 0x41
   397a4:	uxtb	lr, r2
   397a8:	add	r2, r3, #1
   397ac:	cmp	lr, #2
   397b0:	bcc	39784 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x320>
   397b4:	b	39744 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e0>
   397b8:	cmp	r2, #2
   397bc:	bcc	3976c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x308>
   397c0:	ldrb	r1, [sp, #26]
   397c4:	ands	r2, r1, #3
   397c8:	bne	3976c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x308>
   397cc:	ldrb	r3, [sp, #25]
   397d0:	ldrb	ip, [sp, #24]
   397d4:	lsl	r2, r3, #4
   397d8:	orr	r1, r2, r1, lsr #2
   397dc:	ldr	r2, [sp, #12]
   397e0:	strb	r1, [r2, #1]
   397e4:	lsr	r1, r3, #4
   397e8:	orr	r1, r1, ip, lsl #2
   397ec:	strb	r1, [r2]
   397f0:	add	r2, r2, #2
   397f4:	b	39824 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c0>
   397f8:	mov	r3, r1
   397fc:	ldr	r2, [sp, #16]
   39800:	sub	r0, r0, r3
   39804:	cmp	r1, #0
   39808:	bne	39754 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2f0>
   3980c:	b	39828 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c4>
   39810:	ldrb	r2, [sp, #24]
   39814:	lsl	r2, r2, #2
   39818:	orr	r1, r2, r1, lsr #4
   3981c:	ldr	r2, [sp, #12]
   39820:	strb	r1, [r2], #1
   39824:	str	r2, [sp, #12]
   39828:	cmp	r0, #0
   3982c:	beq	39844 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3e0>
   39830:	mov	r1, r0
   39834:	ldr	r0, [sp, #20]
   39838:	sub	r0, r0, r1
   3983c:	add	r0, sl, r0
   39840:	b	39538 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   39844:	ldr	r0, [sp]
   39848:	ldr	r1, [sp, #12]
   3984c:	sub	r0, r1, r0
   39850:	ldr	r1, [sp, #4]
   39854:	cmp	r1, r0
   39858:	bls	39870 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x40c>
   3985c:	sub	r1, r1, r0
   39860:	ldr	r0, [r5]
   39864:	bl	31b10 <flatcc_builder_truncate_vector@@Base>
   39868:	cmp	r0, #0
   3986c:	bne	395e0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x17c>
   39870:	ldr	r0, [r5]
   39874:	bl	32f5c <flatcc_builder_end_vector@@Base>
   39878:	cmp	r0, #0
   3987c:	str	r0, [r6]
   39880:	beq	395e0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x17c>
   39884:	ldrb	r0, [r7]
   39888:	cmp	r0, #34	; 0x22
   3988c:	bne	398a0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x43c>
   39890:	add	r4, r7, #1
   39894:	mov	r0, r4
   39898:	sub	sp, fp, #28
   3989c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   398a0:	ldr	r0, [r5, #24]
   398a4:	cmp	r0, #0
   398a8:	bne	39570 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x10c>
   398ac:	mov	r0, #20
   398b0:	b	395f8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x194>

000398b4 <flatcc_json_parser_build_string@@Base>:
   398b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   398b8:	add	fp, sp, #28
   398bc:	sub	sp, sp, #4
   398c0:	mov	sl, r3
   398c4:	mov	r4, r2
   398c8:	mov	r5, r0
   398cc:	cmp	r1, r2
   398d0:	beq	3992c <flatcc_json_parser_build_string@@Base+0x78>
   398d4:	ldrb	r0, [r1]
   398d8:	cmp	r0, #34	; 0x22
   398dc:	bne	3992c <flatcc_json_parser_build_string@@Base+0x78>
   398e0:	add	r1, r1, #1
   398e4:	mov	r6, r4
   398e8:	cmp	r1, r4
   398ec:	beq	3993c <flatcc_json_parser_build_string@@Base+0x88>
   398f0:	mov	r6, r1
   398f4:	ldrb	r0, [r6]
   398f8:	cmp	r0, #32
   398fc:	bcc	39b70 <flatcc_json_parser_build_string@@Base+0x2bc>
   39900:	cmp	r0, #34	; 0x22
   39904:	cmpne	r0, #92	; 0x5c
   39908:	beq	39a70 <flatcc_json_parser_build_string@@Base+0x1bc>
   3990c:	add	r6, r6, #1
   39910:	cmp	r4, r6
   39914:	bne	398f4 <flatcc_json_parser_build_string@@Base+0x40>
   39918:	mov	r6, r1
   3991c:	ldr	r0, [r5, #24]
   39920:	cmp	r0, #0
   39924:	bne	39964 <flatcc_json_parser_build_string@@Base+0xb0>
   39928:	b	39948 <flatcc_json_parser_build_string@@Base+0x94>
   3992c:	ldr	r0, [r5, #24]
   39930:	mov	r6, r4
   39934:	cmp	r0, #0
   39938:	beq	39a40 <flatcc_json_parser_build_string@@Base+0x18c>
   3993c:	ldr	r0, [r5, #24]
   39940:	cmp	r0, #0
   39944:	bne	39964 <flatcc_json_parser_build_string@@Base+0xb0>
   39948:	str	r4, [r5, #36]	; 0x24
   3994c:	add	r2, r4, #1
   39950:	mov	r0, #20
   39954:	ldr	r1, [r5, #4]
   39958:	sub	r1, r2, r1
   3995c:	str	r1, [r5, #20]
   39960:	str	r0, [r5, #24]
   39964:	mov	r7, r4
   39968:	ldr	r0, [r5]
   3996c:	bl	320f8 <flatcc_builder_start_string@@Base>
   39970:	cmp	r0, #0
   39974:	bne	39b94 <flatcc_json_parser_build_string@@Base+0x2e0>
   39978:	ldr	r0, [r5]
   3997c:	sub	r2, r7, r6
   39980:	mov	r1, r6
   39984:	bl	31968 <flatcc_builder_append_string@@Base>
   39988:	cmp	r0, #0
   3998c:	beq	39b94 <flatcc_json_parser_build_string@@Base+0x2e0>
   39990:	cmp	r7, r4
   39994:	mov	r6, r4
   39998:	beq	39b14 <flatcc_json_parser_build_string@@Base+0x260>
   3999c:	mov	r8, sp
   399a0:	add	r9, r8, #1
   399a4:	ldrb	r0, [r7]
   399a8:	cmp	r0, #34	; 0x22
   399ac:	beq	39b10 <flatcc_json_parser_build_string@@Base+0x25c>
   399b0:	mov	r0, r5
   399b4:	mov	r1, r7
   399b8:	mov	r2, r4
   399bc:	mov	r3, r8
   399c0:	bl	36f88 <flatcc_json_parser_string_escape@@Base>
   399c4:	mov	r6, r0
   399c8:	ldr	r0, [r5]
   399cc:	ldrb	r2, [sp]
   399d0:	mov	r1, r9
   399d4:	bl	31968 <flatcc_builder_append_string@@Base>
   399d8:	cmp	r0, #0
   399dc:	beq	39b68 <flatcc_json_parser_build_string@@Base+0x2b4>
   399e0:	cmp	r6, r4
   399e4:	beq	39abc <flatcc_json_parser_build_string@@Base+0x208>
   399e8:	mov	r7, r6
   399ec:	ldrb	r0, [r7]
   399f0:	cmp	r0, #32
   399f4:	bcc	39adc <flatcc_json_parser_build_string@@Base+0x228>
   399f8:	cmp	r0, #34	; 0x22
   399fc:	cmpne	r0, #92	; 0x5c
   39a00:	beq	39a14 <flatcc_json_parser_build_string@@Base+0x160>
   39a04:	add	r7, r7, #1
   39a08:	cmp	r4, r7
   39a0c:	bne	399ec <flatcc_json_parser_build_string@@Base+0x138>
   39a10:	b	39abc <flatcc_json_parser_build_string@@Base+0x208>
   39a14:	cmp	r4, r7
   39a18:	beq	39b08 <flatcc_json_parser_build_string@@Base+0x254>
   39a1c:	ldr	r0, [r5]
   39a20:	sub	r2, r7, r6
   39a24:	mov	r1, r6
   39a28:	bl	31968 <flatcc_builder_append_string@@Base>
   39a2c:	cmp	r0, #0
   39a30:	beq	39b94 <flatcc_json_parser_build_string@@Base+0x2e0>
   39a34:	cmp	r4, r7
   39a38:	bne	399a4 <flatcc_json_parser_build_string@@Base+0xf0>
   39a3c:	b	39b08 <flatcc_json_parser_build_string@@Base+0x254>
   39a40:	str	r1, [r5, #36]	; 0x24
   39a44:	add	r1, r1, #1
   39a48:	mov	r0, #16
   39a4c:	mov	r6, r4
   39a50:	ldr	r2, [r5, #4]
   39a54:	sub	r1, r1, r2
   39a58:	str	r1, [r5, #20]
   39a5c:	str	r0, [r5, #24]
   39a60:	ldr	r0, [r5, #24]
   39a64:	cmp	r0, #0
   39a68:	bne	39964 <flatcc_json_parser_build_string@@Base+0xb0>
   39a6c:	b	39948 <flatcc_json_parser_build_string@@Base+0x94>
   39a70:	cmp	r4, r6
   39a74:	beq	39b7c <flatcc_json_parser_build_string@@Base+0x2c8>
   39a78:	cmp	r0, #34	; 0x22
   39a7c:	bne	39ab4 <flatcc_json_parser_build_string@@Base+0x200>
   39a80:	ldr	r0, [r5]
   39a84:	sub	r2, r6, r1
   39a88:	bl	34240 <flatcc_builder_create_string@@Base>
   39a8c:	cmp	r6, r4
   39a90:	str	r0, [sl]
   39a94:	beq	39b28 <flatcc_json_parser_build_string@@Base+0x274>
   39a98:	ldrb	r0, [r6]
   39a9c:	cmp	r0, #34	; 0x22
   39aa0:	bne	39b28 <flatcc_json_parser_build_string@@Base+0x274>
   39aa4:	add	r4, r6, #1
   39aa8:	mov	r0, r4
   39aac:	sub	sp, fp, #28
   39ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39ab4:	mov	r7, r6
   39ab8:	b	39b80 <flatcc_json_parser_build_string@@Base+0x2cc>
   39abc:	ldr	r0, [r5, #24]
   39ac0:	mov	r6, r4
   39ac4:	cmp	r0, #0
   39ac8:	bne	39b14 <flatcc_json_parser_build_string@@Base+0x260>
   39acc:	str	r4, [r5, #36]	; 0x24
   39ad0:	mov	r0, #20
   39ad4:	add	r2, r4, #1
   39ad8:	b	39af8 <flatcc_json_parser_build_string@@Base+0x244>
   39adc:	ldr	r0, [r5, #24]
   39ae0:	mov	r6, r4
   39ae4:	cmp	r0, #0
   39ae8:	bne	39b14 <flatcc_json_parser_build_string@@Base+0x260>
   39aec:	str	r7, [r5, #36]	; 0x24
   39af0:	mov	r0, #17
   39af4:	add	r2, r7, #1
   39af8:	ldr	r1, [r5, #4]
   39afc:	sub	r1, r2, r1
   39b00:	str	r1, [r5, #20]
   39b04:	str	r0, [r5, #24]
   39b08:	mov	r6, r4
   39b0c:	b	39b14 <flatcc_json_parser_build_string@@Base+0x260>
   39b10:	mov	r6, r7
   39b14:	ldr	r0, [r5]
   39b18:	bl	343ac <flatcc_builder_end_string@@Base>
   39b1c:	cmp	r6, r4
   39b20:	str	r0, [sl]
   39b24:	bne	39a98 <flatcc_json_parser_build_string@@Base+0x1e4>
   39b28:	ldr	r0, [r5, #24]
   39b2c:	cmp	r0, #0
   39b30:	beq	39b40 <flatcc_json_parser_build_string@@Base+0x28c>
   39b34:	mov	r0, r4
   39b38:	sub	sp, fp, #28
   39b3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39b40:	str	r6, [r5, #36]	; 0x24
   39b44:	add	r2, r6, #1
   39b48:	mov	r0, #20
   39b4c:	ldr	r1, [r5, #4]
   39b50:	sub	r1, r2, r1
   39b54:	str	r1, [r5, #20]
   39b58:	str	r0, [r5, #24]
   39b5c:	mov	r0, r4
   39b60:	sub	sp, fp, #28
   39b64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39b68:	mov	r4, r6
   39b6c:	b	39b98 <flatcc_json_parser_build_string@@Base+0x2e4>
   39b70:	ldr	r0, [r5, #24]
   39b74:	cmp	r0, #0
   39b78:	beq	39bac <flatcc_json_parser_build_string@@Base+0x2f8>
   39b7c:	mov	r7, r4
   39b80:	mov	r6, r1
   39b84:	ldr	r0, [r5]
   39b88:	bl	320f8 <flatcc_builder_start_string@@Base>
   39b8c:	cmp	r0, #0
   39b90:	beq	39978 <flatcc_json_parser_build_string@@Base+0xc4>
   39b94:	mov	r4, r7
   39b98:	mov	r0, #0
   39b9c:	str	r0, [sl]
   39ba0:	mov	r0, r4
   39ba4:	sub	sp, fp, #28
   39ba8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39bac:	str	r6, [r5, #36]	; 0x24
   39bb0:	add	r3, r6, #1
   39bb4:	mov	r0, #17
   39bb8:	mov	r7, r4
   39bbc:	ldr	r2, [r5, #4]
   39bc0:	sub	r2, r3, r2
   39bc4:	str	r2, [r5, #20]
   39bc8:	str	r0, [r5, #24]
   39bcc:	b	39b80 <flatcc_json_parser_build_string@@Base+0x2cc>

00039bd0 <flatcc_json_parser_prepare_unions@@Base>:
   39bd0:	push	{r4, r5, r6, r7, fp, lr}
   39bd4:	add	fp, sp, #16
   39bd8:	mov	r5, r1
   39bdc:	mov	r6, r0
   39be0:	add	r0, r3, r3, lsl #1
   39be4:	mov	r1, #8
   39be8:	mov	r7, r3
   39bec:	mov	r4, r2
   39bf0:	add	r1, r1, r0, lsl #3
   39bf4:	ldr	r0, [r6]
   39bf8:	bl	3052c <flatcc_builder_enter_user_frame@@Base>
   39bfc:	mov	r1, r0
   39c00:	ldr	r0, [fp, #8]
   39c04:	cmp	r1, #0
   39c08:	str	r1, [r0]
   39c0c:	beq	39c28 <flatcc_json_parser_prepare_unions@@Base+0x58>
   39c10:	ldr	r0, [r6]
   39c14:	bl	306bc <flatcc_builder_get_user_frame_ptr@@Base>
   39c18:	mov	r4, r5
   39c1c:	str	r7, [r0]
   39c20:	mov	r0, r4
   39c24:	pop	{r4, r5, r6, r7, fp, pc}
   39c28:	ldr	r0, [r6, #24]
   39c2c:	cmp	r0, #0
   39c30:	beq	39c3c <flatcc_json_parser_prepare_unions@@Base+0x6c>
   39c34:	mov	r0, r4
   39c38:	pop	{r4, r5, r6, r7, fp, pc}
   39c3c:	str	r5, [r6, #36]	; 0x24
   39c40:	add	r2, r5, #1
   39c44:	mov	r0, #33	; 0x21
   39c48:	ldr	r1, [r6, #4]
   39c4c:	sub	r1, r2, r1
   39c50:	str	r1, [r6, #20]
   39c54:	str	r0, [r6, #24]
   39c58:	mov	r0, r4
   39c5c:	pop	{r4, r5, r6, r7, fp, pc}

00039c60 <flatcc_json_parser_finalize_unions@@Base>:
   39c60:	push	{r4, r5, r6, r7, fp, lr}
   39c64:	add	fp, sp, #16
   39c68:	mov	r6, r0
   39c6c:	ldr	r0, [r0]
   39c70:	mov	r7, r1
   39c74:	mov	r1, r3
   39c78:	mov	r5, r3
   39c7c:	mov	r4, r2
   39c80:	bl	306bc <flatcc_builder_get_user_frame_ptr@@Base>
   39c84:	ldr	r0, [r0, #4]
   39c88:	cmp	r0, #0
   39c8c:	beq	39cbc <flatcc_json_parser_finalize_unions@@Base+0x5c>
   39c90:	ldr	r0, [r6, #24]
   39c94:	cmp	r0, #0
   39c98:	bne	39cc0 <flatcc_json_parser_finalize_unions@@Base+0x60>
   39c9c:	str	r7, [r6, #36]	; 0x24
   39ca0:	add	r2, r7, #1
   39ca4:	mov	r0, #27
   39ca8:	ldr	r1, [r6, #4]
   39cac:	sub	r1, r2, r1
   39cb0:	str	r1, [r6, #20]
   39cb4:	str	r0, [r6, #24]
   39cb8:	b	39cc0 <flatcc_json_parser_finalize_unions@@Base+0x60>
   39cbc:	mov	r4, r7
   39cc0:	ldr	r0, [r6]
   39cc4:	mov	r1, r5
   39cc8:	bl	30638 <flatcc_builder_exit_user_frame_at@@Base>
   39ccc:	mov	r0, r4
   39cd0:	pop	{r4, r5, r6, r7, fp, pc}

00039cd4 <flatcc_json_parser_union@@Base>:
   39cd4:	push	{r4, r5, r6, r7, fp, lr}
   39cd8:	add	fp, sp, #16
   39cdc:	sub	sp, sp, #16
   39ce0:	mov	r6, r1
   39ce4:	mov	r5, r0
   39ce8:	ldr	r0, [r0]
   39cec:	ldr	r1, [fp, #12]
   39cf0:	mov	r7, r3
   39cf4:	mov	r4, r2
   39cf8:	bl	306bc <flatcc_builder_get_user_frame_ptr@@Base>
   39cfc:	add	r2, r0, #8
   39d00:	add	r3, r7, r7, lsl #1
   39d04:	mov	r1, r2
   39d08:	ldr	r7, [r1, r3, lsl #3]!
   39d0c:	cmp	r7, #0
   39d10:	beq	39d48 <flatcc_json_parser_union@@Base+0x74>
   39d14:	ldr	r0, [r5, #24]
   39d18:	cmp	r0, #0
   39d1c:	bne	39e18 <flatcc_json_parser_union@@Base+0x144>
   39d20:	mov	r0, #28
   39d24:	str	r6, [r5, #36]	; 0x24
   39d28:	add	r2, r6, #1
   39d2c:	ldr	r1, [r5, #4]
   39d30:	sub	r1, r2, r1
   39d34:	str	r1, [r5, #20]
   39d38:	str	r0, [r5, #24]
   39d3c:	mov	r0, r4
   39d40:	sub	sp, fp, #16
   39d44:	pop	{r4, r5, r6, r7, fp, pc}
   39d48:	add	r2, r2, r3, lsl #3
   39d4c:	ldrb	r3, [r2, #12]
   39d50:	cmp	r3, #0
   39d54:	beq	39dcc <flatcc_json_parser_union@@Base+0xf8>
   39d58:	ldrb	r3, [r2, #13]
   39d5c:	cmp	r3, #0
   39d60:	strb	r3, [sp, #8]
   39d64:	beq	39e0c <flatcc_json_parser_union@@Base+0x138>
   39d68:	ldr	r1, [r0, #4]
   39d6c:	ldr	r7, [fp, #16]
   39d70:	mov	r2, r4
   39d74:	sub	r1, r1, #1
   39d78:	str	r1, [r0, #4]
   39d7c:	add	r0, sp, #8
   39d80:	mov	r1, r6
   39d84:	add	r0, r0, #4
   39d88:	str	r0, [sp]
   39d8c:	mov	r0, r5
   39d90:	blx	r7
   39d94:	cmp	r0, r4
   39d98:	beq	39e18 <flatcc_json_parser_union@@Base+0x144>
   39d9c:	mov	r6, r0
   39da0:	ldr	r1, [fp, #8]
   39da4:	ldr	r0, [r5]
   39da8:	ldr	r2, [sp, #8]
   39dac:	ldr	r3, [sp, #12]
   39db0:	bl	33374 <flatcc_builder_table_add_union@@Base>
   39db4:	cmp	r0, #0
   39db8:	bne	39d14 <flatcc_json_parser_union@@Base+0x40>
   39dbc:	mov	r4, r6
   39dc0:	mov	r0, r4
   39dc4:	sub	sp, fp, #16
   39dc8:	pop	{r4, r5, r6, r7, fp, pc}
   39dcc:	ldr	r3, [r0, #4]
   39dd0:	add	r3, r3, #1
   39dd4:	str	r3, [r0, #4]
   39dd8:	ldr	r0, [r5, #16]
   39ddc:	str	r0, [r2, #8]
   39de0:	ldr	r0, [r5, #4]
   39de4:	str	r0, [r2, #4]
   39de8:	str	r6, [r1]
   39dec:	mov	r0, r5
   39df0:	mov	r1, r6
   39df4:	mov	r2, r4
   39df8:	bl	37960 <flatcc_json_parser_generic_json@@Base>
   39dfc:	mov	r4, r0
   39e00:	mov	r0, r4
   39e04:	sub	sp, fp, #16
   39e08:	pop	{r4, r5, r6, r7, fp, pc}
   39e0c:	ldr	r0, [r5, #24]
   39e10:	cmp	r0, #0
   39e14:	beq	39e24 <flatcc_json_parser_union@@Base+0x150>
   39e18:	mov	r0, r4
   39e1c:	sub	sp, fp, #16
   39e20:	pop	{r4, r5, r6, r7, fp, pc}
   39e24:	mov	r0, #25
   39e28:	b	39d24 <flatcc_json_parser_union@@Base+0x50>

00039e2c <flatcc_json_parser_union_type@@Base>:
   39e2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39e30:	add	fp, sp, #28
   39e34:	sub	sp, sp, #20
   39e38:	mov	r8, r1
   39e3c:	mov	r5, r0
   39e40:	ldr	r0, [r0]
   39e44:	ldr	r1, [fp, #12]
   39e48:	mov	r6, r3
   39e4c:	mov	r4, r2
   39e50:	bl	306bc <flatcc_builder_get_user_frame_ptr@@Base>
   39e54:	add	r2, r0, #8
   39e58:	add	r3, r6, r6, lsl #1
   39e5c:	mov	r9, r0
   39e60:	add	sl, r2, r3, lsl #3
   39e64:	mov	r0, sl
   39e68:	ldrb	r1, [r0, #12]!
   39e6c:	cmp	r1, #0
   39e70:	beq	39e8c <flatcc_json_parser_union_type@@Base+0x60>
   39e74:	ldr	r0, [r5, #24]
   39e78:	cmp	r0, #0
   39e7c:	beq	39f74 <flatcc_json_parser_union_type@@Base+0x148>
   39e80:	mov	r0, r4
   39e84:	sub	sp, fp, #28
   39e88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39e8c:	mov	r1, #1
   39e90:	mov	r6, #0
   39e94:	mov	lr, sl
   39e98:	cmp	r8, r4
   39e9c:	str	r3, [sp, #4]
   39ea0:	str	r2, [sp, #8]
   39ea4:	strb	r1, [r0]
   39ea8:	strb	r6, [lr, #13]!
   39eac:	beq	3a094 <flatcc_json_parser_union_type@@Base+0x268>
   39eb0:	mov	r2, r8
   39eb4:	ldrb	ip, [r2], #1
   39eb8:	cmp	ip, #45	; 0x2d
   39ebc:	movne	r2, r8
   39ec0:	cmp	r2, r4
   39ec4:	beq	39f9c <flatcc_json_parser_union_type@@Base+0x170>
   39ec8:	mov	r6, #0
   39ecc:	mov	r0, #10
   39ed0:	mov	r7, #0
   39ed4:	ldrb	r1, [r2]
   39ed8:	sub	r3, r1, #48	; 0x30
   39edc:	uxtb	r3, r3
   39ee0:	cmp	r3, #9
   39ee4:	bhi	3a028 <flatcc_json_parser_union_type@@Base+0x1fc>
   39ee8:	add	r3, r7, r7, lsl #2
   39eec:	lsl	r3, r3, #1
   39ef0:	umlal	r1, r3, r6, r0
   39ef4:	subs	r1, r1, #48	; 0x30
   39ef8:	sbc	r3, r3, #0
   39efc:	subs	r6, r1, r6
   39f00:	sbcs	r7, r3, r7
   39f04:	bcc	3a038 <flatcc_json_parser_union_type@@Base+0x20c>
   39f08:	add	r2, r2, #1
   39f0c:	mov	r6, r1
   39f10:	mov	r7, r3
   39f14:	cmp	r4, r2
   39f18:	bne	39ed4 <flatcc_json_parser_union_type@@Base+0xa8>
   39f1c:	mov	r0, #0
   39f20:	mov	r2, r4
   39f24:	mov	r6, r1
   39f28:	mov	r7, r3
   39f2c:	cmp	r2, r8
   39f30:	beq	3a094 <flatcc_json_parser_union_type@@Base+0x268>
   39f34:	cmp	r0, #0
   39f38:	beq	39fb4 <flatcc_json_parser_union_type@@Base+0x188>
   39f3c:	ldrb	r0, [r2]
   39f40:	cmp	r0, #46	; 0x2e
   39f44:	beq	39f54 <flatcc_json_parser_union_type@@Base+0x128>
   39f48:	cmp	r0, #101	; 0x65
   39f4c:	cmpne	r0, #69	; 0x45
   39f50:	bne	39fb4 <flatcc_json_parser_union_type@@Base+0x188>
   39f54:	ldr	r0, [r5, #24]
   39f58:	mov	r6, #0
   39f5c:	mov	r7, #0
   39f60:	cmp	r0, #0
   39f64:	mov	r0, r4
   39f68:	bne	3a078 <flatcc_json_parser_union_type@@Base+0x24c>
   39f6c:	mov	r0, #12
   39f70:	b	3a054 <flatcc_json_parser_union_type@@Base+0x228>
   39f74:	str	r8, [r5, #36]	; 0x24
   39f78:	mov	r0, #28
   39f7c:	add	r2, r8, #1
   39f80:	ldr	r1, [r5, #4]
   39f84:	sub	r1, r2, r1
   39f88:	str	r1, [r5, #20]
   39f8c:	str	r0, [r5, #24]
   39f90:	mov	r0, r4
   39f94:	sub	sp, fp, #28
   39f98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39f9c:	mov	r2, r4
   39fa0:	mov	r7, #0
   39fa4:	mov	r0, #0
   39fa8:	cmp	r2, r8
   39fac:	bne	39f34 <flatcc_json_parser_union_type@@Base+0x108>
   39fb0:	b	3a094 <flatcc_json_parser_union_type@@Base+0x268>
   39fb4:	mov	r0, r2
   39fb8:	cmp	r0, r8
   39fbc:	beq	3a094 <flatcc_json_parser_union_type@@Base+0x268>
   39fc0:	cmp	ip, #45	; 0x2d
   39fc4:	bne	39fe0 <flatcc_json_parser_union_type@@Base+0x1b4>
   39fc8:	ldr	r1, [r5, #24]
   39fcc:	mov	r2, r4
   39fd0:	cmp	r1, #0
   39fd4:	bne	3a08c <flatcc_json_parser_union_type@@Base+0x260>
   39fd8:	mov	r1, #8
   39fdc:	b	3a000 <flatcc_json_parser_union_type@@Base+0x1d4>
   39fe0:	subs	r1, r6, #256	; 0x100
   39fe4:	sbcs	r1, r7, #0
   39fe8:	bcc	3a084 <flatcc_json_parser_union_type@@Base+0x258>
   39fec:	ldr	r1, [r5, #24]
   39ff0:	mov	r2, r4
   39ff4:	cmp	r1, #0
   39ff8:	bne	3a08c <flatcc_json_parser_union_type@@Base+0x260>
   39ffc:	mov	r1, #7
   3a000:	str	r0, [r5, #36]	; 0x24
   3a004:	add	r0, r0, #1
   3a008:	ldr	r2, [r5, #4]
   3a00c:	sub	r0, r0, r2
   3a010:	mov	r2, r4
   3a014:	str	r0, [r5, #20]
   3a018:	str	r1, [r5, #24]
   3a01c:	cmp	r2, r8
   3a020:	bne	3a0b8 <flatcc_json_parser_union_type@@Base+0x28c>
   3a024:	b	3a094 <flatcc_json_parser_union_type@@Base+0x268>
   3a028:	mov	r0, #1
   3a02c:	cmp	r2, r8
   3a030:	bne	39f34 <flatcc_json_parser_union_type@@Base+0x108>
   3a034:	b	3a094 <flatcc_json_parser_union_type@@Base+0x268>
   3a038:	ldr	r0, [r5, #24]
   3a03c:	mov	r6, #0
   3a040:	mov	r7, #0
   3a044:	cmp	r0, #0
   3a048:	mov	r0, r4
   3a04c:	bne	3a078 <flatcc_json_parser_union_type@@Base+0x24c>
   3a050:	mov	r0, #8
   3a054:	str	r2, [r5, #36]	; 0x24
   3a058:	add	r2, r2, #1
   3a05c:	mov	r6, #0
   3a060:	mov	r7, #0
   3a064:	ldr	r1, [r5, #4]
   3a068:	sub	r1, r2, r1
   3a06c:	str	r1, [r5, #20]
   3a070:	str	r0, [r5, #24]
   3a074:	mov	r0, r4
   3a078:	cmp	r0, r8
   3a07c:	bne	39fc0 <flatcc_json_parser_union_type@@Base+0x194>
   3a080:	b	3a094 <flatcc_json_parser_union_type@@Base+0x268>
   3a084:	mov	r2, r0
   3a088:	strb	r6, [lr]
   3a08c:	cmp	r2, r8
   3a090:	bne	3a0b8 <flatcc_json_parser_union_type@@Base+0x28c>
   3a094:	ldr	r3, [fp, #16]
   3a098:	mov	r0, r5
   3a09c:	mov	r1, r8
   3a0a0:	mov	r2, r4
   3a0a4:	str	lr, [sp]
   3a0a8:	mov	r6, lr
   3a0ac:	bl	3a1c0 <flatcc_json_parser_union_type@@Base+0x394>
   3a0b0:	mov	lr, r6
   3a0b4:	mov	r2, r0
   3a0b8:	ldr	r0, [sp, #8]
   3a0bc:	ldr	r1, [sp, #4]
   3a0c0:	ldr	r1, [r0, r1, lsl #3]
   3a0c4:	cmp	r1, #0
   3a0c8:	beq	3a164 <flatcc_json_parser_union_type@@Base+0x338>
   3a0cc:	ldr	r0, [r9, #4]
   3a0d0:	str	r2, [sp, #8]
   3a0d4:	cmp	r0, #0
   3a0d8:	beq	3a1a0 <flatcc_json_parser_union_type@@Base+0x374>
   3a0dc:	sub	r0, r0, #1
   3a0e0:	ldr	r6, [fp, #20]
   3a0e4:	mov	r2, r4
   3a0e8:	str	r0, [r9, #4]
   3a0ec:	ldr	r0, [sl, #8]
   3a0f0:	ldr	r8, [r5, #4]
   3a0f4:	ldr	r7, [r5, #16]
   3a0f8:	str	r0, [r5, #16]
   3a0fc:	ldr	r0, [sl, #4]
   3a100:	str	r0, [r5, #4]
   3a104:	add	r0, sp, #12
   3a108:	ldrb	r3, [lr]
   3a10c:	add	r0, r0, #4
   3a110:	str	r0, [sp]
   3a114:	mov	r0, r5
   3a118:	strb	r3, [sp, #12]
   3a11c:	blx	r6
   3a120:	cmp	r0, r4
   3a124:	beq	39e80 <flatcc_json_parser_union_type@@Base+0x54>
   3a128:	ldr	r1, [fp, #8]
   3a12c:	ldr	r0, [r5]
   3a130:	ldr	r2, [sp, #12]
   3a134:	ldr	r3, [sp, #16]
   3a138:	bl	33374 <flatcc_builder_table_add_union@@Base>
   3a13c:	cmp	r0, #0
   3a140:	beq	3a188 <flatcc_json_parser_union_type@@Base+0x35c>
   3a144:	ldr	r0, [r5, #24]
   3a148:	cmp	r0, #0
   3a14c:	bne	39e80 <flatcc_json_parser_union_type@@Base+0x54>
   3a150:	ldr	r2, [sp, #8]
   3a154:	mov	r0, #28
   3a158:	str	r2, [r5, #36]	; 0x24
   3a15c:	add	r2, r2, #1
   3a160:	b	39f80 <flatcc_json_parser_union_type@@Base+0x154>
   3a164:	ldrb	r0, [lr]
   3a168:	ldr	r1, [r9, #4]
   3a16c:	mov	r4, r2
   3a170:	cmp	r0, #0
   3a174:	addne	r1, r1, #1
   3a178:	str	r1, [r9, #4]
   3a17c:	mov	r0, r4
   3a180:	sub	sp, fp, #28
   3a184:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a188:	ldr	r4, [sp, #8]
   3a18c:	str	r8, [r5, #4]
   3a190:	str	r7, [r5, #16]
   3a194:	mov	r0, r4
   3a198:	sub	sp, fp, #28
   3a19c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a1a0:	movw	r0, #59396	; 0xe804
   3a1a4:	movw	r1, #59411	; 0xe813
   3a1a8:	movw	r3, #59485	; 0xe85d
   3a1ac:	movw	r2, #965	; 0x3c5
   3a1b0:	movt	r0, #4
   3a1b4:	movt	r1, #4
   3a1b8:	movt	r3, #4
   3a1bc:	bl	14f44 <__assert_fail@plt>
   3a1c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a1c4:	add	fp, sp, #28
   3a1c8:	sub	sp, sp, #36	; 0x24
   3a1cc:	mov	r4, r2
   3a1d0:	mov	r2, r1
   3a1d4:	ldr	r1, [fp, #8]
   3a1d8:	mov	r5, r0
   3a1dc:	mov	r0, #0
   3a1e0:	mov	r6, r3
   3a1e4:	cmp	r2, r4
   3a1e8:	strb	r0, [r1]
   3a1ec:	beq	3a3a8 <flatcc_json_parser_union_type@@Base+0x57c>
   3a1f0:	ldrb	r0, [r2]
   3a1f4:	cmp	r0, #46	; 0x2e
   3a1f8:	beq	3a264 <flatcc_json_parser_union_type@@Base+0x438>
   3a1fc:	cmp	r0, #34	; 0x22
   3a200:	bne	3a3a0 <flatcc_json_parser_union_type@@Base+0x574>
   3a204:	mov	r0, #0
   3a208:	add	r1, r2, #1
   3a20c:	str	r0, [r5, #12]
   3a210:	ldr	r0, [r5, #12]
   3a214:	cmp	r0, #0
   3a218:	bne	3a2a0 <flatcc_json_parser_union_type@@Base+0x474>
   3a21c:	sub	r0, r4, r1
   3a220:	cmp	r0, #2
   3a224:	blt	3a248 <flatcc_json_parser_union_type@@Base+0x41c>
   3a228:	ldrb	r0, [r1]
   3a22c:	cmp	r0, #32
   3a230:	bhi	3a2a0 <flatcc_json_parser_union_type@@Base+0x474>
   3a234:	bne	3a248 <flatcc_json_parser_union_type@@Base+0x41c>
   3a238:	mov	r7, r1
   3a23c:	ldrb	r0, [r7, #1]!
   3a240:	cmp	r0, #32
   3a244:	bhi	3a258 <flatcc_json_parser_union_type@@Base+0x42c>
   3a248:	mov	r0, r5
   3a24c:	mov	r2, r4
   3a250:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   3a254:	mov	r7, r0
   3a258:	cmp	r7, r4
   3a25c:	bne	3a2ac <flatcc_json_parser_union_type@@Base+0x480>
   3a260:	b	3a394 <flatcc_json_parser_union_type@@Base+0x568>
   3a264:	ldr	r0, [r5, #24]
   3a268:	mov	r1, r4
   3a26c:	cmp	r0, #0
   3a270:	bne	3a3ac <flatcc_json_parser_union_type@@Base+0x580>
   3a274:	str	r2, [r5, #36]	; 0x24
   3a278:	add	r2, r2, #1
   3a27c:	mov	r0, #5
   3a280:	ldr	r1, [r5, #4]
   3a284:	sub	r1, r2, r1
   3a288:	str	r1, [r5, #20]
   3a28c:	str	r0, [r5, #24]
   3a290:	mov	r1, r4
   3a294:	ldr	r0, [r5, #12]
   3a298:	cmp	r0, #0
   3a29c:	beq	3a21c <flatcc_json_parser_union_type@@Base+0x3f0>
   3a2a0:	mov	r7, r1
   3a2a4:	cmp	r7, r4
   3a2a8:	beq	3a394 <flatcc_json_parser_union_type@@Base+0x568>
   3a2ac:	add	sl, r6, #4
   3a2b0:	add	r8, sp, #24
   3a2b4:	add	r9, sp, #20
   3a2b8:	str	r6, [sp, #12]
   3a2bc:	str	sl, [sp, #8]
   3a2c0:	b	3a2f4 <flatcc_json_parser_union_type@@Base+0x4c8>
   3a2c4:	ldr	r2, [fp, #8]
   3a2c8:	ldr	r6, [sp, #12]
   3a2cc:	ldr	sl, [sp, #8]
   3a2d0:	mov	r7, r0
   3a2d4:	mov	r3, r2
   3a2d8:	ldrb	r2, [r2]
   3a2dc:	add	r1, r2, r1
   3a2e0:	strb	r1, [r3]
   3a2e4:	ldr	r1, [sp, #16]
   3a2e8:	cmp	r1, #0
   3a2ec:	subeq	sp, fp, #28
   3a2f0:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a2f4:	ldr	r6, [r6]
   3a2f8:	add	r0, sp, #16
   3a2fc:	mov	r1, r7
   3a300:	mov	r2, r4
   3a304:	mov	r3, r9
   3a308:	str	r8, [sp]
   3a30c:	str	r0, [sp, #4]
   3a310:	mov	r0, r5
   3a314:	blx	r6
   3a318:	cmp	r0, r4
   3a31c:	beq	3a394 <flatcc_json_parser_union_type@@Base+0x568>
   3a320:	cmp	r0, r7
   3a324:	bne	3a338 <flatcc_json_parser_union_type@@Base+0x50c>
   3a328:	ldr	r6, [sl], #4
   3a32c:	cmp	r6, #0
   3a330:	bne	3a2f8 <flatcc_json_parser_union_type@@Base+0x4cc>
   3a334:	b	3a36c <flatcc_json_parser_union_type@@Base+0x540>
   3a338:	ldr	r1, [sp, #20]
   3a33c:	cmp	r1, #0
   3a340:	bne	3a3bc <flatcc_json_parser_union_type@@Base+0x590>
   3a344:	ldr	r1, [sp, #24]
   3a348:	ldr	r2, [sp, #28]
   3a34c:	subs	r3, r1, #256	; 0x100
   3a350:	sbcs	r2, r2, #0
   3a354:	bcc	3a2c4 <flatcc_json_parser_union_type@@Base+0x498>
   3a358:	ldr	r1, [r5, #24]
   3a35c:	cmp	r1, #0
   3a360:	bne	3a394 <flatcc_json_parser_union_type@@Base+0x568>
   3a364:	mov	r1, #7
   3a368:	b	3a3cc <flatcc_json_parser_union_type@@Base+0x5a0>
   3a36c:	ldr	r0, [r5, #24]
   3a370:	cmp	r0, #0
   3a374:	bne	3a394 <flatcc_json_parser_union_type@@Base+0x568>
   3a378:	str	r7, [r5, #36]	; 0x24
   3a37c:	add	r2, r7, #1
   3a380:	mov	r0, #23
   3a384:	ldr	r1, [r5, #4]
   3a388:	sub	r1, r2, r1
   3a38c:	str	r1, [r5, #20]
   3a390:	str	r0, [r5, #24]
   3a394:	mov	r0, r4
   3a398:	sub	sp, fp, #28
   3a39c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a3a0:	mov	r0, #1
   3a3a4:	str	r0, [r5, #12]
   3a3a8:	mov	r1, r2
   3a3ac:	ldr	r0, [r5, #12]
   3a3b0:	cmp	r0, #0
   3a3b4:	bne	3a2a0 <flatcc_json_parser_union_type@@Base+0x474>
   3a3b8:	b	3a21c <flatcc_json_parser_union_type@@Base+0x3f0>
   3a3bc:	ldr	r1, [r5, #24]
   3a3c0:	cmp	r1, #0
   3a3c4:	bne	3a394 <flatcc_json_parser_union_type@@Base+0x568>
   3a3c8:	mov	r1, #8
   3a3cc:	str	r0, [r5, #36]	; 0x24
   3a3d0:	add	r0, r0, #1
   3a3d4:	ldr	r2, [r5, #4]
   3a3d8:	sub	r0, r0, r2
   3a3dc:	str	r0, [r5, #20]
   3a3e0:	str	r1, [r5, #24]
   3a3e4:	mov	r0, r4
   3a3e8:	sub	sp, fp, #28
   3a3ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003a3f0 <flatcc_json_parser_union_vector@@Base>:
   3a3f0:	push	{r4, r5, r6, r7, fp, lr}
   3a3f4:	add	fp, sp, #16
   3a3f8:	sub	sp, sp, #16
   3a3fc:	mov	r6, r1
   3a400:	mov	r5, r0
   3a404:	ldr	r0, [r0]
   3a408:	ldr	r1, [fp, #12]
   3a40c:	mov	r7, r3
   3a410:	mov	r4, r2
   3a414:	bl	306bc <flatcc_builder_get_user_frame_ptr@@Base>
   3a418:	add	r2, r0, #8
   3a41c:	add	r3, r7, r7, lsl #1
   3a420:	mov	r1, r2
   3a424:	ldr	r7, [r1, r3, lsl #3]!
   3a428:	cmp	r7, #0
   3a42c:	beq	3a448 <flatcc_json_parser_union_vector@@Base+0x58>
   3a430:	ldr	r0, [r5, #24]
   3a434:	cmp	r0, #0
   3a438:	beq	3a494 <flatcc_json_parser_union_vector@@Base+0xa4>
   3a43c:	mov	r0, r4
   3a440:	sub	sp, fp, #16
   3a444:	pop	{r4, r5, r6, r7, fp, pc}
   3a448:	add	r2, r2, r3, lsl #3
   3a44c:	ldr	r3, [r0, #4]
   3a450:	ldrb	r7, [r2, #12]
   3a454:	cmp	r7, #0
   3a458:	beq	3a4bc <flatcc_json_parser_union_vector@@Base+0xcc>
   3a45c:	sub	r3, r3, #1
   3a460:	ldr	r1, [fp, #16]
   3a464:	ldr	r7, [fp, #8]
   3a468:	str	r3, [r0, #4]
   3a46c:	ldr	r0, [r2, #16]
   3a470:	ldr	r3, [r2, #20]
   3a474:	mov	r2, r4
   3a478:	stm	sp, {r0, r7}
   3a47c:	str	r1, [sp, #8]
   3a480:	mov	r0, r5
   3a484:	mov	r1, r6
   3a488:	bl	3a4f0 <flatcc_json_parser_union_vector@@Base+0x100>
   3a48c:	sub	sp, fp, #16
   3a490:	pop	{r4, r5, r6, r7, fp, pc}
   3a494:	str	r6, [r5, #36]	; 0x24
   3a498:	add	r2, r6, #1
   3a49c:	mov	r0, #28
   3a4a0:	ldr	r1, [r5, #4]
   3a4a4:	sub	r1, r2, r1
   3a4a8:	str	r1, [r5, #20]
   3a4ac:	str	r0, [r5, #24]
   3a4b0:	mov	r0, r4
   3a4b4:	sub	sp, fp, #16
   3a4b8:	pop	{r4, r5, r6, r7, fp, pc}
   3a4bc:	add	r3, r3, #1
   3a4c0:	str	r3, [r0, #4]
   3a4c4:	ldr	r0, [r5, #16]
   3a4c8:	str	r0, [r2, #8]
   3a4cc:	ldr	r0, [r5, #4]
   3a4d0:	str	r0, [r2, #4]
   3a4d4:	str	r6, [r1]
   3a4d8:	mov	r0, r5
   3a4dc:	mov	r1, r6
   3a4e0:	mov	r2, r4
   3a4e4:	sub	sp, fp, #16
   3a4e8:	pop	{r4, r5, r6, r7, fp, lr}
   3a4ec:	b	37960 <flatcc_json_parser_generic_json@@Base>
   3a4f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a4f4:	add	fp, sp, #28
   3a4f8:	sub	sp, sp, #12
   3a4fc:	mov	r5, r0
   3a500:	mov	r0, #0
   3a504:	mov	r8, r3
   3a508:	mov	r6, r2
   3a50c:	mov	r7, r1
   3a510:	str	r0, [sp, #8]
   3a514:	ldr	r0, [r5]
   3a518:	bl	31d68 <flatcc_builder_start_offset_vector@@Base>
   3a51c:	cmp	r0, #0
   3a520:	beq	3a540 <flatcc_json_parser_union_vector@@Base+0x150>
   3a524:	ldr	r0, [r5, #24]
   3a528:	cmp	r0, #0
   3a52c:	bne	3a5c8 <flatcc_json_parser_union_vector@@Base+0x1d8>
   3a530:	str	r7, [r5, #36]	; 0x24
   3a534:	mov	r0, #33	; 0x21
   3a538:	add	r2, r7, #1
   3a53c:	b	3a5b8 <flatcc_json_parser_union_vector@@Base+0x1c8>
   3a540:	ldr	sl, [fp, #8]
   3a544:	cmp	r7, r6
   3a548:	beq	3a588 <flatcc_json_parser_union_vector@@Base+0x198>
   3a54c:	ldrb	r0, [r7]
   3a550:	cmp	r0, #91	; 0x5b
   3a554:	bne	3a588 <flatcc_json_parser_union_vector@@Base+0x198>
   3a558:	add	r1, r7, #1
   3a55c:	sub	r0, r6, r1
   3a560:	cmp	r0, #2
   3a564:	blt	3a670 <flatcc_json_parser_union_vector@@Base+0x280>
   3a568:	ldrb	r0, [r1]
   3a56c:	cmp	r0, #32
   3a570:	bls	3a660 <flatcc_json_parser_union_vector@@Base+0x270>
   3a574:	mov	r7, r1
   3a578:	cmp	r7, r6
   3a57c:	mov	r4, r6
   3a580:	bne	3a68c <flatcc_json_parser_union_vector@@Base+0x29c>
   3a584:	b	3a6c8 <flatcc_json_parser_union_vector@@Base+0x2d8>
   3a588:	ldr	r0, [r5, #24]
   3a58c:	mov	r9, r6
   3a590:	cmp	r0, #0
   3a594:	beq	3a5d4 <flatcc_json_parser_union_vector@@Base+0x1e4>
   3a598:	cmp	sl, #0
   3a59c:	beq	3a5fc <flatcc_json_parser_union_vector@@Base+0x20c>
   3a5a0:	ldr	r0, [r5, #24]
   3a5a4:	cmp	r0, #0
   3a5a8:	bne	3a5c8 <flatcc_json_parser_union_vector@@Base+0x1d8>
   3a5ac:	str	r9, [r5, #36]	; 0x24
   3a5b0:	mov	r0, #30
   3a5b4:	add	r2, r9, #1
   3a5b8:	ldr	r1, [r5, #4]
   3a5bc:	sub	r1, r2, r1
   3a5c0:	str	r1, [r5, #20]
   3a5c4:	str	r0, [r5, #24]
   3a5c8:	mov	r0, r6
   3a5cc:	sub	sp, fp, #28
   3a5d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a5d4:	str	r7, [r5, #36]	; 0x24
   3a5d8:	add	r2, r7, #1
   3a5dc:	mov	r0, #22
   3a5e0:	mov	r9, r6
   3a5e4:	ldr	r1, [r5, #4]
   3a5e8:	sub	r1, r2, r1
   3a5ec:	str	r1, [r5, #20]
   3a5f0:	str	r0, [r5, #24]
   3a5f4:	cmp	sl, #0
   3a5f8:	bne	3a5a0 <flatcc_json_parser_union_vector@@Base+0x1b0>
   3a5fc:	ldr	r0, [r5]
   3a600:	mov	r1, r8
   3a604:	bl	306bc <flatcc_builder_get_user_frame_ptr@@Base>
   3a608:	mov	r1, r0
   3a60c:	ldr	r0, [r5]
   3a610:	bl	33288 <flatcc_builder_end_offset_vector_for_unions@@Base>
   3a614:	cmp	r0, #0
   3a618:	str	r0, [sp, #8]
   3a61c:	beq	3a64c <flatcc_json_parser_union_vector@@Base+0x25c>
   3a620:	ldr	r1, [fp, #12]
   3a624:	ldr	r0, [r5]
   3a628:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   3a62c:	cmp	r0, #0
   3a630:	beq	3a64c <flatcc_json_parser_union_vector@@Base+0x25c>
   3a634:	ldr	r1, [sp, #8]
   3a638:	mov	r6, r9
   3a63c:	str	r1, [r0]
   3a640:	mov	r0, r6
   3a644:	sub	sp, fp, #28
   3a648:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a64c:	mov	r7, r9
   3a650:	ldr	r0, [r5, #24]
   3a654:	cmp	r0, #0
   3a658:	bne	3a5c8 <flatcc_json_parser_union_vector@@Base+0x1d8>
   3a65c:	b	3a530 <flatcc_json_parser_union_vector@@Base+0x140>
   3a660:	bne	3a670 <flatcc_json_parser_union_vector@@Base+0x280>
   3a664:	ldrb	r0, [r7, #2]!
   3a668:	cmp	r0, #32
   3a66c:	bhi	3a680 <flatcc_json_parser_union_vector@@Base+0x290>
   3a670:	mov	r0, r5
   3a674:	mov	r2, r6
   3a678:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   3a67c:	mov	r7, r0
   3a680:	cmp	r7, r6
   3a684:	mov	r4, r6
   3a688:	beq	3a6c8 <flatcc_json_parser_union_vector@@Base+0x2d8>
   3a68c:	ldrb	r0, [r7]
   3a690:	cmp	r0, #93	; 0x5d
   3a694:	bne	3a6c4 <flatcc_json_parser_union_vector@@Base+0x2d4>
   3a698:	add	r1, r7, #1
   3a69c:	sub	r0, r6, r1
   3a6a0:	cmp	r0, #2
   3a6a4:	blt	3a854 <flatcc_json_parser_union_vector@@Base+0x464>
   3a6a8:	ldrb	r0, [r1]
   3a6ac:	cmp	r0, #32
   3a6b0:	bls	3a840 <flatcc_json_parser_union_vector@@Base+0x450>
   3a6b4:	mov	r9, r1
   3a6b8:	cmp	sl, #0
   3a6bc:	bne	3a5a0 <flatcc_json_parser_union_vector@@Base+0x1b0>
   3a6c0:	b	3a5fc <flatcc_json_parser_union_vector@@Base+0x20c>
   3a6c4:	mov	r4, r7
   3a6c8:	cmp	sl, #0
   3a6cc:	beq	3a824 <flatcc_json_parser_union_vector@@Base+0x434>
   3a6d0:	add	r0, r6, #1
   3a6d4:	mov	sl, #0
   3a6d8:	add	r9, sp, #8
   3a6dc:	str	r0, [sp, #4]
   3a6e0:	ldr	r0, [r5]
   3a6e4:	mov	r1, r8
   3a6e8:	bl	306bc <flatcc_builder_get_user_frame_ptr@@Base>
   3a6ec:	ldrb	r3, [r0, -sl]
   3a6f0:	ldr	r7, [fp, #16]
   3a6f4:	mov	r0, r5
   3a6f8:	mov	r1, r4
   3a6fc:	mov	r2, r6
   3a700:	str	r9, [sp]
   3a704:	blx	r7
   3a708:	cmp	r0, r6
   3a70c:	beq	3a5c8 <flatcc_json_parser_union_vector@@Base+0x1d8>
   3a710:	mov	r7, r0
   3a714:	ldr	r0, [r5]
   3a718:	mov	r1, #1
   3a71c:	bl	31524 <flatcc_builder_extend_offset_vector@@Base>
   3a720:	cmp	r0, #0
   3a724:	beq	3a524 <flatcc_json_parser_union_vector@@Base+0x134>
   3a728:	ldr	r1, [sp, #8]
   3a72c:	str	r1, [r0]
   3a730:	sub	r0, r6, r7
   3a734:	cmp	r0, #2
   3a738:	blt	3a7bc <flatcc_json_parser_union_vector@@Base+0x3cc>
   3a73c:	ldrb	r0, [r7]
   3a740:	cmp	r0, #32
   3a744:	bls	3a7a8 <flatcc_json_parser_union_vector@@Base+0x3b8>
   3a748:	mov	r4, r7
   3a74c:	cmp	r4, r6
   3a750:	beq	3a870 <flatcc_json_parser_union_vector@@Base+0x480>
   3a754:	ldrb	r0, [r4]
   3a758:	cmp	r0, #44	; 0x2c
   3a75c:	bne	3a888 <flatcc_json_parser_union_vector@@Base+0x498>
   3a760:	add	r1, r4, #1
   3a764:	sub	r0, r6, r1
   3a768:	cmp	r0, #2
   3a76c:	blt	3a7ec <flatcc_json_parser_union_vector@@Base+0x3fc>
   3a770:	ldrb	r0, [r1]
   3a774:	cmp	r0, #32
   3a778:	bls	3a7dc <flatcc_json_parser_union_vector@@Base+0x3ec>
   3a77c:	mov	r4, r1
   3a780:	cmp	r4, r6
   3a784:	beq	3a804 <flatcc_json_parser_union_vector@@Base+0x414>
   3a788:	ldrb	r0, [r4]
   3a78c:	cmp	r0, #93	; 0x5d
   3a790:	beq	3a8c4 <flatcc_json_parser_union_vector@@Base+0x4d4>
   3a794:	ldr	r0, [fp, #8]
   3a798:	sub	sl, sl, #1
   3a79c:	adds	r0, r0, sl
   3a7a0:	bne	3a6e0 <flatcc_json_parser_union_vector@@Base+0x2f0>
   3a7a4:	b	3a824 <flatcc_json_parser_union_vector@@Base+0x434>
   3a7a8:	bne	3a7bc <flatcc_json_parser_union_vector@@Base+0x3cc>
   3a7ac:	mov	r4, r7
   3a7b0:	ldrb	r0, [r4, #1]!
   3a7b4:	cmp	r0, #32
   3a7b8:	bhi	3a7d0 <flatcc_json_parser_union_vector@@Base+0x3e0>
   3a7bc:	mov	r0, r5
   3a7c0:	mov	r1, r7
   3a7c4:	mov	r2, r6
   3a7c8:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   3a7cc:	mov	r4, r0
   3a7d0:	cmp	r4, r6
   3a7d4:	bne	3a754 <flatcc_json_parser_union_vector@@Base+0x364>
   3a7d8:	b	3a870 <flatcc_json_parser_union_vector@@Base+0x480>
   3a7dc:	bne	3a7ec <flatcc_json_parser_union_vector@@Base+0x3fc>
   3a7e0:	ldrb	r0, [r4, #2]!
   3a7e4:	cmp	r0, #32
   3a7e8:	bhi	3a7fc <flatcc_json_parser_union_vector@@Base+0x40c>
   3a7ec:	mov	r0, r5
   3a7f0:	mov	r2, r6
   3a7f4:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   3a7f8:	mov	r4, r0
   3a7fc:	cmp	r4, r6
   3a800:	bne	3a788 <flatcc_json_parser_union_vector@@Base+0x398>
   3a804:	ldr	r0, [r5, #24]
   3a808:	mov	r9, r6
   3a80c:	cmp	r0, #0
   3a810:	bne	3a91c <flatcc_json_parser_union_vector@@Base+0x52c>
   3a814:	str	r6, [r5, #36]	; 0x24
   3a818:	ldr	r2, [sp, #4]
   3a81c:	mov	r0, #9
   3a820:	b	3a93c <flatcc_json_parser_union_vector@@Base+0x54c>
   3a824:	ldr	r0, [r5, #24]
   3a828:	cmp	r0, #0
   3a82c:	bne	3a5c8 <flatcc_json_parser_union_vector@@Base+0x1d8>
   3a830:	str	r4, [r5, #36]	; 0x24
   3a834:	mov	r0, #30
   3a838:	add	r2, r4, #1
   3a83c:	b	3a5b8 <flatcc_json_parser_union_vector@@Base+0x1c8>
   3a840:	bne	3a854 <flatcc_json_parser_union_vector@@Base+0x464>
   3a844:	ldrb	r0, [r7, #2]!
   3a848:	cmp	r0, #32
   3a84c:	mov	r9, r7
   3a850:	bhi	3a598 <flatcc_json_parser_union_vector@@Base+0x1a8>
   3a854:	mov	r0, r5
   3a858:	mov	r2, r6
   3a85c:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   3a860:	mov	r9, r0
   3a864:	cmp	sl, #0
   3a868:	bne	3a5a0 <flatcc_json_parser_union_vector@@Base+0x1b0>
   3a86c:	b	3a5fc <flatcc_json_parser_union_vector@@Base+0x20c>
   3a870:	mov	r9, r6
   3a874:	ldr	r0, [fp, #8]
   3a878:	add	r0, r0, sl
   3a87c:	cmp	r0, #1
   3a880:	bne	3a5a0 <flatcc_json_parser_union_vector@@Base+0x1b0>
   3a884:	b	3a5fc <flatcc_json_parser_union_vector@@Base+0x20c>
   3a888:	cmp	r0, #93	; 0x5d
   3a88c:	bne	3a90c <flatcc_json_parser_union_vector@@Base+0x51c>
   3a890:	add	r1, r4, #1
   3a894:	sub	r0, r6, r1
   3a898:	cmp	r0, #2
   3a89c:	blt	3a8f8 <flatcc_json_parser_union_vector@@Base+0x508>
   3a8a0:	ldrb	r0, [r1]
   3a8a4:	cmp	r0, #32
   3a8a8:	bhi	3a8e0 <flatcc_json_parser_union_vector@@Base+0x4f0>
   3a8ac:	bne	3a8f8 <flatcc_json_parser_union_vector@@Base+0x508>
   3a8b0:	ldrb	r0, [r4, #2]!
   3a8b4:	cmp	r0, #32
   3a8b8:	mov	r9, r4
   3a8bc:	bhi	3a91c <flatcc_json_parser_union_vector@@Base+0x52c>
   3a8c0:	b	3a8f8 <flatcc_json_parser_union_vector@@Base+0x508>
   3a8c4:	add	r1, r4, #1
   3a8c8:	sub	r0, r6, r1
   3a8cc:	cmp	r0, #2
   3a8d0:	blt	3a8f8 <flatcc_json_parser_union_vector@@Base+0x508>
   3a8d4:	ldrb	r0, [r1]
   3a8d8:	cmp	r0, #32
   3a8dc:	bls	3a8ac <flatcc_json_parser_union_vector@@Base+0x4bc>
   3a8e0:	mov	r9, r1
   3a8e4:	ldr	r0, [fp, #8]
   3a8e8:	add	r0, r0, sl
   3a8ec:	cmp	r0, #1
   3a8f0:	bne	3a5a0 <flatcc_json_parser_union_vector@@Base+0x1b0>
   3a8f4:	b	3a5fc <flatcc_json_parser_union_vector@@Base+0x20c>
   3a8f8:	mov	r0, r5
   3a8fc:	mov	r2, r6
   3a900:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   3a904:	mov	r9, r0
   3a908:	b	3a91c <flatcc_json_parser_union_vector@@Base+0x52c>
   3a90c:	ldr	r0, [r5, #24]
   3a910:	mov	r9, r6
   3a914:	cmp	r0, #0
   3a918:	beq	3a930 <flatcc_json_parser_union_vector@@Base+0x540>
   3a91c:	ldr	r0, [fp, #8]
   3a920:	add	r0, r0, sl
   3a924:	cmp	r0, #1
   3a928:	bne	3a5a0 <flatcc_json_parser_union_vector@@Base+0x1b0>
   3a92c:	b	3a5fc <flatcc_json_parser_union_vector@@Base+0x20c>
   3a930:	str	r4, [r5, #36]	; 0x24
   3a934:	mov	r0, #9
   3a938:	add	r2, r4, #1
   3a93c:	ldr	r1, [r5, #4]
   3a940:	sub	r1, r2, r1
   3a944:	mov	r9, r6
   3a948:	str	r1, [r5, #20]
   3a94c:	str	r0, [r5, #24]
   3a950:	ldr	r0, [fp, #8]
   3a954:	add	r0, r0, sl
   3a958:	cmp	r0, #1
   3a95c:	bne	3a5a0 <flatcc_json_parser_union_vector@@Base+0x1b0>
   3a960:	b	3a5fc <flatcc_json_parser_union_vector@@Base+0x20c>

0003a964 <flatcc_json_parser_union_type_vector@@Base>:
   3a964:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a968:	add	fp, sp, #28
   3a96c:	sub	sp, sp, #28
   3a970:	mov	r7, r1
   3a974:	mov	r5, r0
   3a978:	ldr	r0, [r0]
   3a97c:	ldr	r1, [fp, #12]
   3a980:	mov	r4, r3
   3a984:	mov	r8, r2
   3a988:	bl	306bc <flatcc_builder_get_user_frame_ptr@@Base>
   3a98c:	add	r0, r0, #8
   3a990:	add	r6, r4, r4, lsl #1
   3a994:	add	r4, r0, r6, lsl #3
   3a998:	mov	r0, r4
   3a99c:	ldrb	r1, [r0, #12]!
   3a9a0:	cmp	r1, #0
   3a9a4:	beq	3a9c4 <flatcc_json_parser_union_type_vector@@Base+0x60>
   3a9a8:	ldr	r0, [r5, #24]
   3a9ac:	cmp	r0, #0
   3a9b0:	bne	3aa14 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   3a9b4:	str	r7, [r5, #36]	; 0x24
   3a9b8:	mov	r0, #28
   3a9bc:	add	r2, r7, #1
   3a9c0:	b	3aa04 <flatcc_json_parser_union_type_vector@@Base+0xa0>
   3a9c4:	mov	r1, #1
   3a9c8:	mov	r2, #1
   3a9cc:	mvn	r3, #0
   3a9d0:	strb	r1, [r0]
   3a9d4:	mov	r1, #1
   3a9d8:	ldr	r0, [r5]
   3a9dc:	bl	31cdc <flatcc_builder_start_vector@@Base>
   3a9e0:	cmp	r0, #0
   3a9e4:	beq	3aa20 <flatcc_json_parser_union_type_vector@@Base+0xbc>
   3a9e8:	mov	sl, r7
   3a9ec:	ldr	r0, [r5, #24]
   3a9f0:	cmp	r0, #0
   3a9f4:	bne	3aa14 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   3a9f8:	str	sl, [r5, #36]	; 0x24
   3a9fc:	mov	r0, #33	; 0x21
   3aa00:	add	r2, sl, #1
   3aa04:	ldr	r1, [r5, #4]
   3aa08:	sub	r1, r2, r1
   3aa0c:	str	r1, [r5, #20]
   3aa10:	str	r0, [r5, #24]
   3aa14:	mov	r0, r8
   3aa18:	sub	sp, fp, #28
   3aa1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3aa20:	cmp	r7, r8
   3aa24:	beq	3aa64 <flatcc_json_parser_union_type_vector@@Base+0x100>
   3aa28:	ldrb	r0, [r7]
   3aa2c:	cmp	r0, #91	; 0x5b
   3aa30:	bne	3aa64 <flatcc_json_parser_union_type_vector@@Base+0x100>
   3aa34:	add	r1, r7, #1
   3aa38:	sub	r0, r8, r1
   3aa3c:	cmp	r0, #2
   3aa40:	blt	3aaa8 <flatcc_json_parser_union_type_vector@@Base+0x144>
   3aa44:	ldrb	r0, [r1]
   3aa48:	cmp	r0, #32
   3aa4c:	bls	3aa98 <flatcc_json_parser_union_type_vector@@Base+0x134>
   3aa50:	mov	r7, r1
   3aa54:	cmp	r7, r8
   3aa58:	mov	sl, r8
   3aa5c:	bne	3aac4 <flatcc_json_parser_union_type_vector@@Base+0x160>
   3aa60:	b	3ab08 <flatcc_json_parser_union_type_vector@@Base+0x1a4>
   3aa64:	ldr	r0, [r5, #24]
   3aa68:	cmp	r0, #0
   3aa6c:	mov	r0, r8
   3aa70:	bne	3af78 <flatcc_json_parser_union_type_vector@@Base+0x614>
   3aa74:	str	r7, [r5, #36]	; 0x24
   3aa78:	mov	r0, #22
   3aa7c:	add	r2, r7, #1
   3aa80:	ldr	r1, [r5, #4]
   3aa84:	sub	r1, r2, r1
   3aa88:	str	r1, [r5, #20]
   3aa8c:	str	r0, [r5, #24]
   3aa90:	mov	r0, r8
   3aa94:	b	3af78 <flatcc_json_parser_union_type_vector@@Base+0x614>
   3aa98:	bne	3aaa8 <flatcc_json_parser_union_type_vector@@Base+0x144>
   3aa9c:	ldrb	r0, [r7, #2]!
   3aaa0:	cmp	r0, #32
   3aaa4:	bhi	3aab8 <flatcc_json_parser_union_type_vector@@Base+0x154>
   3aaa8:	mov	r0, r5
   3aaac:	mov	r2, r8
   3aab0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   3aab4:	mov	r7, r0
   3aab8:	cmp	r7, r8
   3aabc:	mov	sl, r8
   3aac0:	beq	3ab08 <flatcc_json_parser_union_type_vector@@Base+0x1a4>
   3aac4:	ldrb	r0, [r7]
   3aac8:	cmp	r0, #93	; 0x5d
   3aacc:	bne	3ab04 <flatcc_json_parser_union_type_vector@@Base+0x1a0>
   3aad0:	add	r1, r7, #1
   3aad4:	sub	r0, r8, r1
   3aad8:	cmp	r0, #2
   3aadc:	blt	3af6c <flatcc_json_parser_union_type_vector@@Base+0x608>
   3aae0:	ldrb	r0, [r1]
   3aae4:	cmp	r0, #32
   3aae8:	bhi	3af00 <flatcc_json_parser_union_type_vector@@Base+0x59c>
   3aaec:	bne	3af6c <flatcc_json_parser_union_type_vector@@Base+0x608>
   3aaf0:	ldrb	r0, [r7, #2]!
   3aaf4:	cmp	r0, #32
   3aaf8:	mov	r0, r7
   3aafc:	bls	3af6c <flatcc_json_parser_union_type_vector@@Base+0x608>
   3ab00:	b	3af78 <flatcc_json_parser_union_type_vector@@Base+0x614>
   3ab04:	mov	sl, r7
   3ab08:	ldr	r0, [r5]
   3ab0c:	mov	r1, #1
   3ab10:	bl	31188 <flatcc_builder_extend_vector@@Base>
   3ab14:	cmp	r0, #0
   3ab18:	beq	3a9ec <flatcc_json_parser_union_type_vector@@Base+0x88>
   3ab1c:	mov	r1, r0
   3ab20:	add	r0, r8, #1
   3ab24:	str	r4, [sp, #16]
   3ab28:	str	r0, [sp, #12]
   3ab2c:	mov	r9, #0
   3ab30:	cmp	sl, r8
   3ab34:	mov	r4, r8
   3ab38:	str	r1, [sp, #20]
   3ab3c:	strb	r9, [sp, #27]
   3ab40:	beq	3ad64 <flatcc_json_parser_union_type_vector@@Base+0x400>
   3ab44:	mov	r2, sl
   3ab48:	mov	r9, #0
   3ab4c:	ldrb	ip, [r2], #1
   3ab50:	cmp	ip, #45	; 0x2d
   3ab54:	movne	r2, sl
   3ab58:	cmp	r2, r8
   3ab5c:	beq	3abd4 <flatcc_json_parser_union_type_vector@@Base+0x270>
   3ab60:	mov	r7, #0
   3ab64:	mov	r0, #0
   3ab68:	mov	r4, #10
   3ab6c:	ldrb	r1, [r2]
   3ab70:	sub	r3, r1, #48	; 0x30
   3ab74:	uxtb	r3, r3
   3ab78:	cmp	r3, #9
   3ab7c:	bhi	3abf4 <flatcc_json_parser_union_type_vector@@Base+0x290>
   3ab80:	add	r3, r0, r0, lsl #2
   3ab84:	lsl	r3, r3, #1
   3ab88:	umlal	r1, r3, r7, r4
   3ab8c:	subs	r1, r1, #48	; 0x30
   3ab90:	sbc	r3, r3, #0
   3ab94:	subs	r7, r1, r7
   3ab98:	sbcs	r0, r3, r0
   3ab9c:	bcc	3ac78 <flatcc_json_parser_union_type_vector@@Base+0x314>
   3aba0:	add	r2, r2, #1
   3aba4:	mov	r7, r1
   3aba8:	mov	r0, r3
   3abac:	cmp	r8, r2
   3abb0:	bne	3ab6c <flatcc_json_parser_union_type_vector@@Base+0x208>
   3abb4:	mov	lr, #0
   3abb8:	mov	r2, r8
   3abbc:	mov	r7, r1
   3abc0:	mov	r0, r3
   3abc4:	cmp	r2, sl
   3abc8:	mov	r4, sl
   3abcc:	bne	3ac04 <flatcc_json_parser_union_type_vector@@Base+0x2a0>
   3abd0:	b	3ad64 <flatcc_json_parser_union_type_vector@@Base+0x400>
   3abd4:	mov	r2, r8
   3abd8:	mov	r7, #0
   3abdc:	mov	r0, #0
   3abe0:	mov	lr, #0
   3abe4:	cmp	r2, sl
   3abe8:	mov	r4, sl
   3abec:	bne	3ac04 <flatcc_json_parser_union_type_vector@@Base+0x2a0>
   3abf0:	b	3ad64 <flatcc_json_parser_union_type_vector@@Base+0x400>
   3abf4:	mov	lr, #1
   3abf8:	cmp	r2, sl
   3abfc:	mov	r4, sl
   3ac00:	beq	3ad64 <flatcc_json_parser_union_type_vector@@Base+0x400>
   3ac04:	cmp	lr, #0
   3ac08:	beq	3ac58 <flatcc_json_parser_union_type_vector@@Base+0x2f4>
   3ac0c:	ldrb	r1, [r2]
   3ac10:	cmp	r1, #46	; 0x2e
   3ac14:	beq	3ac24 <flatcc_json_parser_union_type_vector@@Base+0x2c0>
   3ac18:	cmp	r1, #101	; 0x65
   3ac1c:	cmpne	r1, #69	; 0x45
   3ac20:	bne	3acc8 <flatcc_json_parser_union_type_vector@@Base+0x364>
   3ac24:	ldr	r0, [r5, #24]
   3ac28:	mov	r7, #0
   3ac2c:	mov	r4, r8
   3ac30:	cmp	r0, #0
   3ac34:	mov	r0, #0
   3ac38:	bne	3accc <flatcc_json_parser_union_type_vector@@Base+0x368>
   3ac3c:	str	r2, [r5, #36]	; 0x24
   3ac40:	add	r1, r2, #1
   3ac44:	ldr	r0, [r5, #4]
   3ac48:	sub	r0, r1, r0
   3ac4c:	str	r0, [r5, #20]
   3ac50:	mov	r0, #12
   3ac54:	b	3aca8 <flatcc_json_parser_union_type_vector@@Base+0x344>
   3ac58:	mov	r4, r2
   3ac5c:	mov	r9, #0
   3ac60:	cmp	r4, sl
   3ac64:	bne	3acd8 <flatcc_json_parser_union_type_vector@@Base+0x374>
   3ac68:	mov	r4, sl
   3ac6c:	cmp	sl, r4
   3ac70:	bne	3ada0 <flatcc_json_parser_union_type_vector@@Base+0x43c>
   3ac74:	b	3ad6c <flatcc_json_parser_union_type_vector@@Base+0x408>
   3ac78:	ldr	r0, [r5, #24]
   3ac7c:	mov	r7, #0
   3ac80:	mov	r4, r8
   3ac84:	cmp	r0, #0
   3ac88:	mov	r0, #0
   3ac8c:	bne	3accc <flatcc_json_parser_union_type_vector@@Base+0x368>
   3ac90:	str	r2, [r5, #36]	; 0x24
   3ac94:	add	r1, r2, #1
   3ac98:	ldr	r0, [r5, #4]
   3ac9c:	sub	r0, r1, r0
   3aca0:	str	r0, [r5, #20]
   3aca4:	mov	r0, #8
   3aca8:	str	r0, [r5, #24]
   3acac:	mov	r7, #0
   3acb0:	mov	r0, #0
   3acb4:	mov	r4, r8
   3acb8:	mov	r9, #0
   3acbc:	cmp	r4, sl
   3acc0:	bne	3acd8 <flatcc_json_parser_union_type_vector@@Base+0x374>
   3acc4:	b	3ac68 <flatcc_json_parser_union_type_vector@@Base+0x304>
   3acc8:	mov	r4, r2
   3accc:	mov	r9, #0
   3acd0:	cmp	r4, sl
   3acd4:	beq	3ac68 <flatcc_json_parser_union_type_vector@@Base+0x304>
   3acd8:	cmp	ip, #45	; 0x2d
   3acdc:	bne	3ad08 <flatcc_json_parser_union_type_vector@@Base+0x3a4>
   3ace0:	ldr	r0, [r5, #24]
   3ace4:	cmp	r0, #0
   3ace8:	bne	3ad20 <flatcc_json_parser_union_type_vector@@Base+0x3bc>
   3acec:	str	r4, [r5, #36]	; 0x24
   3acf0:	add	r1, r4, #1
   3acf4:	ldr	r0, [r5, #4]
   3acf8:	sub	r0, r1, r0
   3acfc:	str	r0, [r5, #20]
   3ad00:	mov	r0, #8
   3ad04:	b	3ad5c <flatcc_json_parser_union_type_vector@@Base+0x3f8>
   3ad08:	subs	r1, r7, #256	; 0x100
   3ad0c:	sbcs	r0, r0, #0
   3ad10:	bcc	3ad30 <flatcc_json_parser_union_type_vector@@Base+0x3cc>
   3ad14:	ldr	r0, [r5, #24]
   3ad18:	cmp	r0, #0
   3ad1c:	beq	3ad44 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   3ad20:	mov	r4, r8
   3ad24:	cmp	sl, r4
   3ad28:	bne	3ada0 <flatcc_json_parser_union_type_vector@@Base+0x43c>
   3ad2c:	b	3ad6c <flatcc_json_parser_union_type_vector@@Base+0x408>
   3ad30:	mov	r9, r7
   3ad34:	strb	r7, [sp, #27]
   3ad38:	cmp	sl, r4
   3ad3c:	bne	3ada0 <flatcc_json_parser_union_type_vector@@Base+0x43c>
   3ad40:	b	3ad6c <flatcc_json_parser_union_type_vector@@Base+0x408>
   3ad44:	str	r4, [r5, #36]	; 0x24
   3ad48:	add	r1, r4, #1
   3ad4c:	ldr	r0, [r5, #4]
   3ad50:	sub	r0, r1, r0
   3ad54:	str	r0, [r5, #20]
   3ad58:	mov	r0, #7
   3ad5c:	str	r0, [r5, #24]
   3ad60:	mov	r4, r8
   3ad64:	cmp	sl, r4
   3ad68:	bne	3ada0 <flatcc_json_parser_union_type_vector@@Base+0x43c>
   3ad6c:	ldr	r3, [fp, #16]
   3ad70:	add	r0, sp, #27
   3ad74:	mov	r1, sl
   3ad78:	mov	r2, r8
   3ad7c:	str	r0, [sp]
   3ad80:	mov	r0, r5
   3ad84:	bl	3a1c0 <flatcc_json_parser_union_type@@Base+0x394>
   3ad88:	mov	r4, r0
   3ad8c:	cmp	r0, sl
   3ad90:	beq	3af28 <flatcc_json_parser_union_type_vector@@Base+0x5c4>
   3ad94:	cmp	r4, r8
   3ad98:	beq	3af28 <flatcc_json_parser_union_type_vector@@Base+0x5c4>
   3ad9c:	ldrb	r9, [sp, #27]
   3ada0:	ldr	r1, [fp, #24]
   3ada4:	uxtb	r0, r9
   3ada8:	blx	r1
   3adac:	cmp	r0, #0
   3adb0:	bne	3adc8 <flatcc_json_parser_union_type_vector@@Base+0x464>
   3adb4:	ldrb	r0, [r5, #8]
   3adb8:	tst	r0, #1
   3adbc:	beq	3af3c <flatcc_json_parser_union_type_vector@@Base+0x5d8>
   3adc0:	mov	r9, #0
   3adc4:	strb	r9, [sp, #27]
   3adc8:	ldr	r0, [sp, #20]
   3adcc:	strb	r9, [r0]
   3add0:	sub	r0, r8, r4
   3add4:	cmp	r0, #2
   3add8:	blt	3ae68 <flatcc_json_parser_union_type_vector@@Base+0x504>
   3addc:	ldrb	r0, [r4]
   3ade0:	cmp	r0, #32
   3ade4:	bls	3ae54 <flatcc_json_parser_union_type_vector@@Base+0x4f0>
   3ade8:	mov	sl, r4
   3adec:	cmp	sl, r8
   3adf0:	beq	3aed0 <flatcc_json_parser_union_type_vector@@Base+0x56c>
   3adf4:	ldrb	r0, [sl]
   3adf8:	ldr	r4, [sp, #16]
   3adfc:	cmp	r0, #44	; 0x2c
   3ae00:	bne	3aedc <flatcc_json_parser_union_type_vector@@Base+0x578>
   3ae04:	add	r1, sl, #1
   3ae08:	sub	r0, r8, r1
   3ae0c:	cmp	r0, #2
   3ae10:	blt	3ae98 <flatcc_json_parser_union_type_vector@@Base+0x534>
   3ae14:	ldrb	r0, [r1]
   3ae18:	cmp	r0, #32
   3ae1c:	bls	3ae88 <flatcc_json_parser_union_type_vector@@Base+0x524>
   3ae20:	mov	sl, r1
   3ae24:	cmp	sl, r8
   3ae28:	beq	3aeb0 <flatcc_json_parser_union_type_vector@@Base+0x54c>
   3ae2c:	ldrb	r0, [sl]
   3ae30:	cmp	r0, #93	; 0x5d
   3ae34:	beq	3aee4 <flatcc_json_parser_union_type_vector@@Base+0x580>
   3ae38:	ldr	r0, [r5]
   3ae3c:	mov	r1, #1
   3ae40:	bl	31188 <flatcc_builder_extend_vector@@Base>
   3ae44:	mov	r1, r0
   3ae48:	cmp	r0, #0
   3ae4c:	bne	3ab2c <flatcc_json_parser_union_type_vector@@Base+0x1c8>
   3ae50:	b	3a9ec <flatcc_json_parser_union_type_vector@@Base+0x88>
   3ae54:	bne	3ae68 <flatcc_json_parser_union_type_vector@@Base+0x504>
   3ae58:	mov	sl, r4
   3ae5c:	ldrb	r0, [sl, #1]!
   3ae60:	cmp	r0, #32
   3ae64:	bhi	3ae7c <flatcc_json_parser_union_type_vector@@Base+0x518>
   3ae68:	mov	r0, r5
   3ae6c:	mov	r1, r4
   3ae70:	mov	r2, r8
   3ae74:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   3ae78:	mov	sl, r0
   3ae7c:	cmp	sl, r8
   3ae80:	bne	3adf4 <flatcc_json_parser_union_type_vector@@Base+0x490>
   3ae84:	b	3aed0 <flatcc_json_parser_union_type_vector@@Base+0x56c>
   3ae88:	bne	3ae98 <flatcc_json_parser_union_type_vector@@Base+0x534>
   3ae8c:	ldrb	r0, [sl, #2]!
   3ae90:	cmp	r0, #32
   3ae94:	bhi	3aea8 <flatcc_json_parser_union_type_vector@@Base+0x544>
   3ae98:	mov	r0, r5
   3ae9c:	mov	r2, r8
   3aea0:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   3aea4:	mov	sl, r0
   3aea8:	cmp	sl, r8
   3aeac:	bne	3ae2c <flatcc_json_parser_union_type_vector@@Base+0x4c8>
   3aeb0:	ldr	r0, [r5, #24]
   3aeb4:	cmp	r0, #0
   3aeb8:	mov	r0, r8
   3aebc:	bne	3af78 <flatcc_json_parser_union_type_vector@@Base+0x614>
   3aec0:	str	r8, [r5, #36]	; 0x24
   3aec4:	ldr	r2, [sp, #12]
   3aec8:	mov	r0, #9
   3aecc:	b	3aa80 <flatcc_json_parser_union_type_vector@@Base+0x11c>
   3aed0:	ldr	r4, [sp, #16]
   3aed4:	mov	r0, r8
   3aed8:	b	3af78 <flatcc_json_parser_union_type_vector@@Base+0x614>
   3aedc:	cmp	r0, #93	; 0x5d
   3aee0:	bne	3af08 <flatcc_json_parser_union_type_vector@@Base+0x5a4>
   3aee4:	add	r1, sl, #1
   3aee8:	sub	r0, r8, r1
   3aeec:	cmp	r0, #2
   3aef0:	blt	3af6c <flatcc_json_parser_union_type_vector@@Base+0x608>
   3aef4:	ldrb	r0, [r1]
   3aef8:	cmp	r0, #32
   3aefc:	bls	3af58 <flatcc_json_parser_union_type_vector@@Base+0x5f4>
   3af00:	mov	r0, r1
   3af04:	b	3af78 <flatcc_json_parser_union_type_vector@@Base+0x614>
   3af08:	ldr	r0, [r5, #24]
   3af0c:	cmp	r0, #0
   3af10:	mov	r0, r8
   3af14:	bne	3af78 <flatcc_json_parser_union_type_vector@@Base+0x614>
   3af18:	str	sl, [r5, #36]	; 0x24
   3af1c:	mov	r0, #9
   3af20:	add	r2, sl, #1
   3af24:	b	3aa80 <flatcc_json_parser_union_type_vector@@Base+0x11c>
   3af28:	mov	sl, r4
   3af2c:	ldr	r0, [r5, #24]
   3af30:	cmp	r0, #0
   3af34:	bne	3aa14 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   3af38:	b	3a9f8 <flatcc_json_parser_union_type_vector@@Base+0x94>
   3af3c:	ldr	r0, [r5, #24]
   3af40:	cmp	r0, #0
   3af44:	bne	3aa14 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   3af48:	str	r4, [r5, #36]	; 0x24
   3af4c:	mov	r0, #15
   3af50:	add	r2, r4, #1
   3af54:	b	3aa04 <flatcc_json_parser_union_type_vector@@Base+0xa0>
   3af58:	bne	3af6c <flatcc_json_parser_union_type_vector@@Base+0x608>
   3af5c:	ldrb	r0, [sl, #2]!
   3af60:	cmp	r0, #32
   3af64:	mov	r0, sl
   3af68:	bhi	3af78 <flatcc_json_parser_union_type_vector@@Base+0x614>
   3af6c:	mov	r0, r5
   3af70:	mov	r2, r8
   3af74:	bl	36e50 <flatcc_json_parser_space_ext@@Base>
   3af78:	mov	sl, r0
   3af7c:	ldr	r0, [r5]
   3af80:	bl	3304c <flatcc_builder_vector_count@@Base>
   3af84:	str	r0, [r4, #16]
   3af88:	mov	r7, r0
   3af8c:	ldr	r0, [r5]
   3af90:	mov	r1, r7
   3af94:	bl	3052c <flatcc_builder_enter_user_frame@@Base>
   3af98:	mov	r9, r0
   3af9c:	ldr	r0, [r5]
   3afa0:	mov	r1, r9
   3afa4:	bl	306bc <flatcc_builder_get_user_frame_ptr@@Base>
   3afa8:	mov	r4, r0
   3afac:	ldr	r0, [r5]
   3afb0:	bl	33058 <flatcc_builder_vector_edit@@Base>
   3afb4:	mov	r1, r0
   3afb8:	mov	r0, r4
   3afbc:	mov	r2, r7
   3afc0:	bl	14e60 <memcpy@plt>
   3afc4:	ldr	r0, [r5]
   3afc8:	bl	32f5c <flatcc_builder_end_vector@@Base>
   3afcc:	cmp	r0, #0
   3afd0:	beq	3a9ec <flatcc_json_parser_union_type_vector@@Base+0x88>
   3afd4:	ldr	r1, [fp, #8]
   3afd8:	mov	r4, r0
   3afdc:	ldr	r0, [r5]
   3afe0:	sub	r1, r1, #1
   3afe4:	bl	33474 <flatcc_builder_table_add_offset@@Base>
   3afe8:	cmp	r0, #0
   3afec:	beq	3a9ec <flatcc_json_parser_union_type_vector@@Base+0x88>
   3aff0:	str	r4, [r0]
   3aff4:	ldr	r1, [fp, #12]
   3aff8:	ldr	r0, [r5]
   3affc:	bl	306bc <flatcc_builder_get_user_frame_ptr@@Base>
   3b000:	add	r2, r0, #8
   3b004:	mov	r3, r2
   3b008:	ldr	r1, [r3, r6, lsl #3]!
   3b00c:	str	r9, [r3, #20]
   3b010:	cmp	r1, #0
   3b014:	ldr	r3, [r0, #4]
   3b018:	beq	3b088 <flatcc_json_parser_union_type_vector@@Base+0x724>
   3b01c:	cmp	r3, #0
   3b020:	beq	3b0a0 <flatcc_json_parser_union_type_vector@@Base+0x73c>
   3b024:	sub	r3, r3, #1
   3b028:	ldr	ip, [fp, #20]
   3b02c:	str	r3, [r0, #4]
   3b030:	add	r0, r2, r6, lsl #3
   3b034:	mov	r3, r9
   3b038:	ldr	r2, [r0, #8]
   3b03c:	ldr	r6, [r5, #4]
   3b040:	ldr	r4, [r5, #16]
   3b044:	str	r2, [r5, #16]
   3b048:	mov	r2, r8
   3b04c:	ldr	r0, [r0, #4]
   3b050:	str	r0, [r5, #4]
   3b054:	ldr	r0, [fp, #8]
   3b058:	str	r7, [sp]
   3b05c:	stmib	sp, {r0, ip}
   3b060:	mov	r0, r5
   3b064:	bl	3a4f0 <flatcc_json_parser_union_vector@@Base+0x100>
   3b068:	cmp	r0, r8
   3b06c:	beq	3aa14 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   3b070:	str	r6, [r5, #4]
   3b074:	str	r4, [r5, #16]
   3b078:	mov	r8, sl
   3b07c:	mov	r0, r8
   3b080:	sub	sp, fp, #28
   3b084:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b088:	add	r1, r3, #1
   3b08c:	str	r1, [r0, #4]
   3b090:	mov	r8, sl
   3b094:	mov	r0, r8
   3b098:	sub	sp, fp, #28
   3b09c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b0a0:	movw	r0, #59396	; 0xe804
   3b0a4:	movw	r1, #59411	; 0xe813
   3b0a8:	movw	r3, #59689	; 0xe929
   3b0ac:	movw	r2, #1122	; 0x462
   3b0b0:	movt	r0, #4
   3b0b4:	movt	r1, #4
   3b0b8:	movt	r3, #4
   3b0bc:	bl	14f44 <__assert_fail@plt>

0003b0c0 <flatcc_json_parser_table_as_root@@Base>:
   3b0c0:	push	{r4, r5, r6, r7, fp, lr}
   3b0c4:	add	fp, sp, #16
   3b0c8:	sub	sp, sp, #48	; 0x30
   3b0cc:	add	r5, sp, #4
   3b0d0:	cmp	r1, #0
   3b0d4:	mov	r6, r0
   3b0d8:	vmov.i32	q8, #0	; 0x00000000
   3b0dc:	add	r7, r2, r3
   3b0e0:	mov	r4, r2
   3b0e4:	movne	r5, r1
   3b0e8:	mov	r1, #1
   3b0ec:	add	r0, r5, #12
   3b0f0:	vst1.32	{d16-d17}, [r0]
   3b0f4:	add	r0, r5, #28
   3b0f8:	vst1.32	{d16-d17}, [r0]
   3b0fc:	ldr	r0, [fp, #8]
   3b100:	str	r6, [r5]
   3b104:	str	r2, [r5, #4]
   3b108:	str	r0, [r5, #8]
   3b10c:	str	r1, [r5, #16]
   3b110:	mov	r1, #2
   3b114:	str	r2, [r5, #28]
   3b118:	str	r7, [r5, #32]
   3b11c:	str	r2, [r5, #36]	; 0x24
   3b120:	mov	r2, #0
   3b124:	and	r3, r1, r0, lsr #1
   3b128:	ldr	r1, [fp, #12]
   3b12c:	mov	r0, r6
   3b130:	bl	30c9c <flatcc_builder_start_buffer@@Base>
   3b134:	mov	r1, r0
   3b138:	mvn	r0, #0
   3b13c:	cmp	r1, #0
   3b140:	bne	3b168 <flatcc_json_parser_table_as_root@@Base+0xa8>
   3b144:	ldr	ip, [fp, #16]
   3b148:	mov	r3, sp
   3b14c:	mov	r0, r5
   3b150:	mov	r1, r4
   3b154:	mov	r2, r7
   3b158:	blx	ip
   3b15c:	ldr	r0, [r5, #24]
   3b160:	cmp	r0, #0
   3b164:	beq	3b170 <flatcc_json_parser_table_as_root@@Base+0xb0>
   3b168:	sub	sp, fp, #16
   3b16c:	pop	{r4, r5, r6, r7, fp, pc}
   3b170:	ldr	r1, [sp]
   3b174:	mov	r0, r6
   3b178:	bl	30e8c <flatcc_builder_end_buffer@@Base>
   3b17c:	cmp	r0, #0
   3b180:	mvn	r0, #0
   3b184:	movne	r0, #0
   3b188:	strne	r4, [r5, #40]	; 0x28
   3b18c:	sub	sp, fp, #16
   3b190:	pop	{r4, r5, r6, r7, fp, pc}

0003b194 <flatcc_json_parser_struct_as_root@@Base>:
   3b194:	push	{r4, r5, r6, r7, fp, lr}
   3b198:	add	fp, sp, #16
   3b19c:	sub	sp, sp, #48	; 0x30
   3b1a0:	add	r5, sp, #4
   3b1a4:	cmp	r1, #0
   3b1a8:	mov	r6, r0
   3b1ac:	vmov.i32	q8, #0	; 0x00000000
   3b1b0:	add	r7, r2, r3
   3b1b4:	mov	r4, r2
   3b1b8:	movne	r5, r1
   3b1bc:	mov	r1, #1
   3b1c0:	add	r0, r5, #12
   3b1c4:	vst1.32	{d16-d17}, [r0]
   3b1c8:	add	r0, r5, #28
   3b1cc:	vst1.32	{d16-d17}, [r0]
   3b1d0:	ldr	r0, [fp, #8]
   3b1d4:	str	r6, [r5]
   3b1d8:	str	r2, [r5, #4]
   3b1dc:	str	r0, [r5, #8]
   3b1e0:	str	r1, [r5, #16]
   3b1e4:	mov	r1, #2
   3b1e8:	str	r2, [r5, #28]
   3b1ec:	str	r7, [r5, #32]
   3b1f0:	str	r2, [r5, #36]	; 0x24
   3b1f4:	mov	r2, #0
   3b1f8:	and	r3, r1, r0, lsr #1
   3b1fc:	ldr	r1, [fp, #12]
   3b200:	mov	r0, r6
   3b204:	bl	30c9c <flatcc_builder_start_buffer@@Base>
   3b208:	mov	r1, r0
   3b20c:	mvn	r0, #0
   3b210:	cmp	r1, #0
   3b214:	bne	3b23c <flatcc_json_parser_struct_as_root@@Base+0xa8>
   3b218:	ldr	ip, [fp, #16]
   3b21c:	mov	r3, sp
   3b220:	mov	r0, r5
   3b224:	mov	r1, r4
   3b228:	mov	r2, r7
   3b22c:	blx	ip
   3b230:	ldr	r0, [r5, #24]
   3b234:	cmp	r0, #0
   3b238:	beq	3b244 <flatcc_json_parser_struct_as_root@@Base+0xb0>
   3b23c:	sub	sp, fp, #16
   3b240:	pop	{r4, r5, r6, r7, fp, pc}
   3b244:	ldr	r1, [sp]
   3b248:	mov	r0, r6
   3b24c:	bl	30e8c <flatcc_builder_end_buffer@@Base>
   3b250:	cmp	r0, #0
   3b254:	mvn	r0, #0
   3b258:	movne	r0, #0
   3b25c:	strne	r4, [r5, #40]	; 0x28
   3b260:	sub	sp, fp, #16
   3b264:	pop	{r4, r5, r6, r7, fp, pc}

0003b268 <flatcc_json_printer_error_string@@Base>:
   3b268:	cmp	r0, #3
   3b26c:	movwhi	r0, #56282	; 0xdbda
   3b270:	movthi	r0, #4
   3b274:	bxhi	lr
   3b278:	movw	r1, #63052	; 0xf64c
   3b27c:	movt	r1, #4
   3b280:	ldr	r0, [r1, r0, lsl #2]
   3b284:	bx	lr

0003b288 <flatcc_json_printer_fmt_float@@Base>:
   3b288:	vcvt.f64.f32	d0, s0
   3b28c:	b	3b290 <flatcc_json_printer_fmt_float@@Base+0x8>
   3b290:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b294:	add	fp, sp, #28
   3b298:	sub	sp, sp, #84	; 0x54
   3b29c:	cmp	r0, #0
   3b2a0:	beq	3c060 <flatcc_json_printer_fmt_float@@Base+0xdd8>
   3b2a4:	mov	ip, r0
   3b2a8:	vmov	r3, r2, d0
   3b2ac:	mov	r0, #-2147483648	; 0x80000000
   3b2b0:	mov	r6, #0
   3b2b4:	add	r1, r0, #266338304	; 0xfe00000
   3b2b8:	lsl	r7, r2, #1
   3b2bc:	subs	r6, r6, r3, lsl #1
   3b2c0:	add	r1, r1, #1879048192	; 0x70000000
   3b2c4:	orr	r7, r7, r3, lsr #31
   3b2c8:	sbcs	r1, r1, r7
   3b2cc:	bcs	3b2e8 <flatcc_json_printer_fmt_float@@Base+0x60>
   3b2d0:	movw	r1, #60847	; 0xedaf
   3b2d4:	mov	r0, ip
   3b2d8:	movt	r1, #4
   3b2dc:	sub	sp, fp, #28
   3b2e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b2e4:	b	14f2c <sprintf@plt>
   3b2e8:	cmn	r2, #1
   3b2ec:	ble	3b2f8 <flatcc_json_printer_fmt_float@@Base+0x70>
   3b2f0:	mov	r5, ip
   3b2f4:	b	3b30c <flatcc_json_printer_fmt_float@@Base+0x84>
   3b2f8:	mov	r1, #45	; 0x2d
   3b2fc:	mov	r5, ip
   3b300:	vneg.f64	d0, d0
   3b304:	eor	r2, r2, r0
   3b308:	strb	r1, [r5], #1
   3b30c:	movw	r0, #0
   3b310:	movt	r0, #32752	; 0x7ff0
   3b314:	eor	r1, r2, r0
   3b318:	orrs	r1, r3, r1
   3b31c:	beq	3b33c <flatcc_json_printer_fmt_float@@Base+0xb4>
   3b320:	orrs	r1, r3, r2
   3b324:	bne	3b354 <flatcc_json_printer_fmt_float@@Base+0xcc>
   3b328:	mov	r0, #48	; 0x30
   3b32c:	strh	r0, [r5], #1
   3b330:	sub	r0, r5, ip
   3b334:	sub	sp, fp, #28
   3b338:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b33c:	movw	r0, #28265	; 0x6e69
   3b340:	movt	r0, #102	; 0x66
   3b344:	str	r0, [r5], #3
   3b348:	sub	r0, r5, ip
   3b34c:	sub	sp, fp, #28
   3b350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b354:	vmov	sl, r9, d0
   3b358:	ands	r1, r9, r0
   3b35c:	bfc	r9, #20, #12
   3b360:	str	r1, [fp, #-40]	; 0xffffffd8
   3b364:	beq	3b380 <flatcc_json_printer_fmt_float@@Base+0xf8>
   3b368:	movw	r0, #64461	; 0xfbcd
   3b36c:	orr	r6, r9, #1048576	; 0x100000
   3b370:	movt	r0, #65535	; 0xffff
   3b374:	add	r4, r0, r1, lsr #20
   3b378:	mov	r0, #0
   3b37c:	b	3b398 <flatcc_json_printer_fmt_float@@Base+0x110>
   3b380:	orrs	r0, sl, r9
   3b384:	beq	3c0c0 <flatcc_json_printer_fmt_float@@Base+0xe38>
   3b388:	movw	r4, #64462	; 0xfbce
   3b38c:	mov	r0, #0
   3b390:	mov	r6, r9
   3b394:	movt	r4, #65535	; 0xffff
   3b398:	mov	r7, r4
   3b39c:	mov	r3, sl
   3b3a0:	mov	r2, r6
   3b3a4:	lsl	r1, r2, #10
   3b3a8:	sub	r7, r7, #10
   3b3ac:	orr	r2, r1, r3, lsr #22
   3b3b0:	lsl	r3, r3, #10
   3b3b4:	cmp	r2, #4194304	; 0x400000
   3b3b8:	bcc	3b3a4 <flatcc_json_printer_fmt_float@@Base+0x11c>
   3b3bc:	cmp	r2, #0
   3b3c0:	str	r5, [fp, #-36]	; 0xffffffdc
   3b3c4:	blt	3b3f0 <flatcc_json_printer_fmt_float@@Base+0x168>
   3b3c8:	mvn	r5, #0
   3b3cc:	lsl	r1, r2, #1
   3b3d0:	sub	r7, r7, #1
   3b3d4:	orr	r2, r1, r3, lsr #31
   3b3d8:	lsl	r1, r3, #1
   3b3dc:	subs	r3, r5, r3, lsl #1
   3b3e0:	sbcs	r3, r5, r2
   3b3e4:	mov	r3, r1
   3b3e8:	blt	3b3cc <flatcc_json_printer_fmt_float@@Base+0x144>
   3b3ec:	b	3b3f8 <flatcc_json_printer_fmt_float@@Base+0x170>
   3b3f0:	mov	r1, r3
   3b3f4:	mvn	r5, #0
   3b3f8:	mov	r0, #1
   3b3fc:	sub	r8, r4, #1
   3b400:	str	r6, [fp, #-44]	; 0xffffffd4
   3b404:	str	r4, [fp, #-32]	; 0xffffffe0
   3b408:	orr	r3, r0, sl, lsl #1
   3b40c:	lsl	r0, r6, #1
   3b410:	orr	lr, r0, sl, lsr #31
   3b414:	mov	r0, #0
   3b418:	cmp	r0, lr, lsr #22
   3b41c:	bne	3b45c <flatcc_json_printer_fmt_float@@Base+0x1d4>
   3b420:	mov	r0, #0
   3b424:	mov	r6, lr
   3b428:	mov	r4, r8
   3b42c:	str	r0, [fp, #-48]	; 0xffffffd0
   3b430:	lsl	r0, r6, #10
   3b434:	sub	r4, r4, #10
   3b438:	orr	r6, r0, r3, lsr #22
   3b43c:	lsl	r3, r3, #10
   3b440:	cmp	r6, #4194304	; 0x400000
   3b444:	bcc	3b430 <flatcc_json_printer_fmt_float@@Base+0x1a8>
   3b448:	subs	r0, r5, r3
   3b44c:	str	ip, [sp, #24]
   3b450:	sbcs	r0, r5, r6
   3b454:	blt	3b47c <flatcc_json_printer_fmt_float@@Base+0x1f4>
   3b458:	b	3b4a0 <flatcc_json_printer_fmt_float@@Base+0x218>
   3b45c:	mov	r0, #0
   3b460:	mov	r4, r8
   3b464:	mov	r6, lr
   3b468:	str	r0, [fp, #-48]	; 0xffffffd0
   3b46c:	subs	r0, r5, r3
   3b470:	str	ip, [sp, #24]
   3b474:	sbcs	r0, r5, r6
   3b478:	bge	3b4a0 <flatcc_json_printer_fmt_float@@Base+0x218>
   3b47c:	lsl	r0, r6, #1
   3b480:	lsl	ip, r3, #1
   3b484:	sub	r4, r4, #1
   3b488:	orr	r6, r0, r3, lsr #31
   3b48c:	subs	r0, r5, r3, lsl #1
   3b490:	mov	r3, ip
   3b494:	sbcs	r0, r5, r6
   3b498:	blt	3b47c <flatcc_json_printer_fmt_float@@Base+0x1f4>
   3b49c:	b	3b4a4 <flatcc_json_printer_fmt_float@@Base+0x21c>
   3b4a0:	mov	ip, r3
   3b4a4:	vcmpe.f64	d0, #0.0
   3b4a8:	vmrs	APSR_nzcv, fpscr
   3b4ac:	ble	3c0a0 <flatcc_json_printer_fmt_float@@Base+0xe18>
   3b4b0:	vldr	d16, [pc, #672]	; 3b758 <flatcc_json_printer_fmt_float@@Base+0x4d0>
   3b4b4:	vcmpe.f64	d0, d16
   3b4b8:	vmrs	APSR_nzcv, fpscr
   3b4bc:	bhi	3c0a0 <flatcc_json_printer_fmt_float@@Base+0xe18>
   3b4c0:	ldr	r5, [fp, #-40]	; 0xffffffd8
   3b4c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3b4c8:	orrs	r3, sl, r9
   3b4cc:	vldr	d16, [pc, #652]	; 3b760 <flatcc_json_printer_fmt_float@@Base+0x4d8>
   3b4d0:	movwne	r3, #1
   3b4d4:	clz	r5, r5
   3b4d8:	lsl	r0, r0, #2
   3b4dc:	lsr	r5, r5, #5
   3b4e0:	orrs	r3, r3, r5
   3b4e4:	mvn	r5, #60	; 0x3c
   3b4e8:	sub	r5, r5, r7
   3b4ec:	orreq	lr, r0, sl, lsr #30
   3b4f0:	lsl	r0, sl, #2
   3b4f4:	lslne	r0, sl, #1
   3b4f8:	vmov	s2, r5
   3b4fc:	subs	r9, r0, #1
   3b500:	vcvt.f64.s32	d17, s2
   3b504:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3b508:	sbc	lr, lr, #0
   3b50c:	cmp	r3, #0
   3b510:	vmul.f64	d16, d17, d16
   3b514:	vcvt.s32.f64	s2, d16
   3b518:	vcmpe.f64	d16, #0.0
   3b51c:	subeq	r8, r0, #2
   3b520:	sub	r3, r8, r4
   3b524:	rsb	r0, r3, #32
   3b528:	lsl	sl, r9, r3
   3b52c:	lsr	r0, r9, r0
   3b530:	orr	r5, r0, lr, lsl r3
   3b534:	sub	r0, r3, #32
   3b538:	cmp	r0, #0
   3b53c:	lslge	r5, r9, r0
   3b540:	movwge	sl, #0
   3b544:	vmrs	APSR_nzcv, fpscr
   3b548:	str	r5, [fp, #-32]	; 0xffffffe0
   3b54c:	vmov	r5, s2
   3b550:	bmi	3b568 <flatcc_json_printer_fmt_float@@Base+0x2e0>
   3b554:	vcvt.f64.s32	d17, s2
   3b558:	vsub.f64	d16, d16, d17
   3b55c:	vcmp.f64	d16, #0.0
   3b560:	vmrs	APSR_nzcv, fpscr
   3b564:	addne	r5, r5, #1
   3b568:	movw	r0, #347	; 0x15b
   3b56c:	bic	r1, r1, #1
   3b570:	add	r0, r5, r0
   3b574:	asr	r5, r0, #31
   3b578:	add	r0, r0, r5, lsr #29
   3b57c:	mvn	r5, #15
   3b580:	and	r0, r5, r0, lsl #1
   3b584:	movw	r5, #61600	; 0xf0a0
   3b588:	movt	r5, #4
   3b58c:	add	r0, r5, r0
   3b590:	ldrd	r8, [r0, #16]
   3b594:	str	r0, [sp, #28]
   3b598:	umull	r0, r5, r9, ip
   3b59c:	str	r0, [fp, #-40]	; 0xffffffd8
   3b5a0:	umull	r0, lr, r8, r6
   3b5a4:	umaal	lr, r5, r9, r6
   3b5a8:	umull	r6, r3, r8, ip
   3b5ac:	ldr	r6, [fp, #-40]	; 0xffffffd8
   3b5b0:	adds	r0, r0, r3
   3b5b4:	mov	r3, #0
   3b5b8:	adc	r3, r3, #0
   3b5bc:	adds	r0, r0, r6
   3b5c0:	adc	r3, r3, #0
   3b5c4:	adds	r0, r0, #-2147483648	; 0x80000000
   3b5c8:	adc	r0, r3, #0
   3b5cc:	adds	r0, lr, r0
   3b5d0:	adc	r3, r5, #0
   3b5d4:	adds	r0, r0, #1
   3b5d8:	str	r0, [sp, #36]	; 0x24
   3b5dc:	adc	ip, r3, #0
   3b5e0:	umull	r0, r3, r9, sl
   3b5e4:	str	r0, [fp, #-40]	; 0xffffffd8
   3b5e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3b5ec:	umull	lr, r5, r8, r0
   3b5f0:	umaal	r5, r3, r9, r0
   3b5f4:	umull	r0, r6, r8, sl
   3b5f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3b5fc:	adds	sl, lr, r6
   3b600:	mov	r6, #0
   3b604:	mov	lr, ip
   3b608:	adc	r6, r6, #0
   3b60c:	adds	r0, sl, r0
   3b610:	adc	r6, r6, #0
   3b614:	adds	r0, r0, #-2147483648	; 0x80000000
   3b618:	adc	r0, r6, #0
   3b61c:	adds	r0, r5, r0
   3b620:	adc	r3, r3, #0
   3b624:	subs	ip, r0, #1
   3b628:	umull	r0, r6, r8, r2
   3b62c:	sbc	sl, r3, #0
   3b630:	umull	r3, r5, r9, r1
   3b634:	umaal	r6, r5, r9, r2
   3b638:	umull	r1, r2, r8, r1
   3b63c:	ldr	r8, [sp, #36]	; 0x24
   3b640:	mov	r1, #0
   3b644:	adds	r0, r0, r2
   3b648:	bic	r2, r3, #1
   3b64c:	str	r1, [sp, #40]	; 0x28
   3b650:	mov	r1, #0
   3b654:	adc	r1, r1, #0
   3b658:	adds	r0, r0, r2
   3b65c:	adc	r1, r1, #0
   3b660:	adds	r0, r0, #-2147483648	; 0x80000000
   3b664:	adc	r0, r1, #0
   3b668:	adds	r0, r6, r0
   3b66c:	str	r0, [sp, #12]
   3b670:	adc	r0, r5, #0
   3b674:	str	r0, [sp, #16]
   3b678:	subs	r0, r8, ip
   3b67c:	str	r0, [sp, #48]	; 0x30
   3b680:	sbcs	r0, lr, sl
   3b684:	str	r0, [fp, #-44]	; 0xffffffd4
   3b688:	bcc	3c080 <flatcc_json_printer_fmt_float@@Base+0xdf8>
   3b68c:	ldr	r0, [sp, #28]
   3b690:	movw	sl, #62992	; 0xf610
   3b694:	movt	sl, #4
   3b698:	ldrsh	r0, [r0, #24]
   3b69c:	add	r0, r0, #64	; 0x40
   3b6a0:	add	r1, r0, r4
   3b6a4:	add	r6, r0, r7
   3b6a8:	movw	r7, #1233	; 0x4d1
   3b6ac:	str	r1, [sp, #8]
   3b6b0:	mvn	r1, #31
   3b6b4:	rsb	r3, r6, #0
   3b6b8:	add	r2, r6, #32
   3b6bc:	str	r6, [sp, #4]
   3b6c0:	sub	r4, r1, r6
   3b6c4:	movw	r1, #14609	; 0x3911
   3b6c8:	lsr	r0, r8, r3
   3b6cc:	movt	r1, #1
   3b6d0:	orr	r0, r0, lr, lsl r2
   3b6d4:	cmp	r4, #0
   3b6d8:	mla	r5, r6, r7, r1
   3b6dc:	mov	r1, #1
   3b6e0:	lsrge	r0, lr, r4
   3b6e4:	add	r7, r1, r5, asr #12
   3b6e8:	lsr	r2, r1, r2
   3b6ec:	ldr	r6, [sl, r7, lsl #2]
   3b6f0:	cmp	r6, r0
   3b6f4:	asrhi	r7, r5, #12
   3b6f8:	cmp	r4, #0
   3b6fc:	lslge	r2, r1, r4
   3b700:	str	r2, [sp, #44]	; 0x2c
   3b704:	str	r3, [fp, #-40]	; 0xffffffd8
   3b708:	lsl	r3, r1, r3
   3b70c:	movwge	r3, #0
   3b710:	subs	r1, r3, #1
   3b714:	str	r3, [sp, #32]
   3b718:	str	lr, [sp, #20]
   3b71c:	sbc	r2, r2, #0
   3b720:	and	r3, r8, r1
   3b724:	cmp	r7, #0
   3b728:	str	r1, [fp, #-48]	; 0xffffffd0
   3b72c:	and	r9, lr, r2
   3b730:	str	r2, [fp, #-52]	; 0xffffffcc
   3b734:	ble	3b7ec <flatcc_json_printer_fmt_float@@Base+0x564>
   3b738:	ldr	r1, [sl, r7, lsl #2]
   3b73c:	movw	ip, #52429	; 0xcccd
   3b740:	sub	r7, r7, #1
   3b744:	mov	r4, #0
   3b748:	mov	r8, r9
   3b74c:	movt	ip, #52428	; 0xcccc
   3b750:	str	r7, [fp, #-32]	; 0xffffffe0
   3b754:	b	3b780 <flatcc_json_printer_fmt_float@@Base+0x4f8>
   3b758:			; <UNDEFINED> instruction: 0xffffffff
   3b75c:	svcvc	0x00efffff
   3b760:			; <UNDEFINED> instruction: 0x509f79fe
   3b764:	svccc	0x00d34413
   3b768:	umull	r1, r2, r1, ip
   3b76c:	mov	r4, lr
   3b770:	sub	r7, r7, #1
   3b774:	add	r4, lr, #1
   3b778:	lsr	r1, r2, #3
   3b77c:	str	r7, [fp, #-32]	; 0xffffffe0
   3b780:	udiv	r2, r0, r1
   3b784:	ldr	r5, [fp, #-36]	; 0xffffffdc
   3b788:	mov	lr, r4
   3b78c:	ldr	r7, [sp, #48]	; 0x30
   3b790:	add	r6, r2, #48	; 0x30
   3b794:	mls	r0, r2, r1, r0
   3b798:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3b79c:	strb	r6, [r5, r4]
   3b7a0:	sub	r4, r2, #32
   3b7a4:	rsb	sl, r2, #32
   3b7a8:	lsl	r2, r0, r2
   3b7ac:	cmp	r4, #0
   3b7b0:	lsr	r5, r0, sl
   3b7b4:	movwge	r2, #0
   3b7b8:	lslge	r5, r0, r4
   3b7bc:	adds	r2, r2, r3
   3b7c0:	adc	r5, r5, r8
   3b7c4:	subs	r7, r2, r7
   3b7c8:	ldr	r7, [fp, #-44]	; 0xffffffd4
   3b7cc:	sbcs	r7, r5, r7
   3b7d0:	bcc	3b9fc <flatcc_json_printer_fmt_float@@Base+0x774>
   3b7d4:	ldr	r7, [fp, #-32]	; 0xffffffe0
   3b7d8:	add	r2, r7, #1
   3b7dc:	cmp	r2, #2
   3b7e0:	bge	3b768 <flatcc_json_printer_fmt_float@@Base+0x4e0>
   3b7e4:	add	r0, lr, #1
   3b7e8:	str	r0, [sp, #40]	; 0x28
   3b7ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3b7f0:	mov	r4, r9
   3b7f4:	mov	r1, #0
   3b7f8:	mov	r9, #1
   3b7fc:	rsb	r2, r0, #32
   3b800:	str	r2, [sp, #56]	; 0x38
   3b804:	sub	r2, r0, #32
   3b808:	str	r2, [sp, #52]	; 0x34
   3b80c:	ldr	lr, [sp, #40]	; 0x28
   3b810:	ldr	sl, [fp, #-44]	; 0xffffffd4
   3b814:	ldr	r6, [sp, #48]	; 0x30
   3b818:	mov	ip, r1
   3b81c:	mov	r1, #10
   3b820:	str	r7, [fp, #-32]	; 0xffffffe0
   3b824:	mov	r2, r9
   3b828:	umull	r7, r1, r3, r1
   3b82c:	add	r3, r4, r4, lsl #2
   3b830:	add	r8, ip, ip, lsl #2
   3b834:	lsr	r5, r7, r0
   3b838:	ldr	r0, [sp, #56]	; 0x38
   3b83c:	add	r3, r1, r3, lsl #1
   3b840:	orr	r1, r5, r3, lsl r0
   3b844:	ldr	r0, [sp, #52]	; 0x34
   3b848:	cmp	r0, #0
   3b84c:	lsrge	r1, r3, r0
   3b850:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3b854:	add	r5, r1, #48	; 0x30
   3b858:	strb	r5, [r0, lr]
   3b85c:	mov	r0, #10
   3b860:	add	lr, lr, #1
   3b864:	umull	r9, r1, r9, r0
   3b868:	umull	r6, r4, r6, r0
   3b86c:	add	r0, sl, sl, lsl #2
   3b870:	add	sl, r4, r0, lsl #1
   3b874:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3b878:	add	r1, r1, r8, lsl #1
   3b87c:	and	r4, r3, r0
   3b880:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3b884:	and	r3, r7, r0
   3b888:	ldr	r7, [fp, #-32]	; 0xffffffe0
   3b88c:	subs	r0, r3, r6
   3b890:	sbcs	r0, r4, sl
   3b894:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3b898:	sub	r7, r7, #1
   3b89c:	bcs	3b818 <flatcc_json_printer_fmt_float@@Base+0x590>
   3b8a0:	str	r4, [sp]
   3b8a4:	str	r8, [sp, #52]	; 0x34
   3b8a8:	str	r2, [sp, #56]	; 0x38
   3b8ac:	str	ip, [fp, #-52]	; 0xffffffcc
   3b8b0:	str	lr, [sp, #40]	; 0x28
   3b8b4:	ldr	r0, [sp, #8]
   3b8b8:	ldr	r2, [sp, #4]
   3b8bc:	ldr	ip, [sp, #20]
   3b8c0:	ldr	lr, [sp, #36]	; 0x24
   3b8c4:	ldr	r4, [sp, #12]
   3b8c8:	cmp	r0, r2
   3b8cc:	ldr	r2, [sp, #16]
   3b8d0:	bne	3c080 <flatcc_json_printer_fmt_float@@Base+0xdf8>
   3b8d4:	subs	r0, lr, r4
   3b8d8:	sbcs	r0, ip, r2
   3b8dc:	bcc	3c080 <flatcc_json_printer_fmt_float@@Base+0xdf8>
   3b8e0:	subs	r0, lr, r4
   3b8e4:	sbc	r2, ip, r2
   3b8e8:	umull	ip, r4, r9, r0
   3b8ec:	mla	r2, r9, r2, r4
   3b8f0:	mla	r0, r1, r0, r2
   3b8f4:	adds	r2, ip, r9
   3b8f8:	str	r2, [sp, #36]	; 0x24
   3b8fc:	adc	r2, r0, r1
   3b900:	subs	lr, ip, r9
   3b904:	mov	ip, #0
   3b908:	str	r2, [sp, #20]
   3b90c:	sbc	r9, r0, r1
   3b910:	subs	r0, r6, r3
   3b914:	ldr	r4, [sp]
   3b918:	str	sl, [fp, #-44]	; 0xffffffd4
   3b91c:	ldr	r2, [sp, #32]
   3b920:	sbc	r1, sl, r4
   3b924:	subs	r0, r0, r2
   3b928:	ldr	r0, [sp, #44]	; 0x2c
   3b92c:	str	r7, [fp, #-32]	; 0xffffffe0
   3b930:	str	r6, [sp, #48]	; 0x30
   3b934:	sbcs	r0, r1, r0
   3b938:	movwcc	ip, #1
   3b93c:	cmp	ip, #0
   3b940:	bne	3b9f4 <flatcc_json_printer_fmt_float@@Base+0x76c>
   3b944:	subs	r0, r3, lr
   3b948:	str	lr, [fp, #-40]	; 0xffffffd8
   3b94c:	sbcs	r0, r4, r9
   3b950:	bcs	3b9f4 <flatcc_json_printer_fmt_float@@Base+0x76c>
   3b954:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3b958:	ldr	r1, [sp, #40]	; 0x28
   3b95c:	add	r0, r0, r1
   3b960:	str	r0, [fp, #-48]	; 0xffffffd0
   3b964:	ldr	r6, [sp, #44]	; 0x2c
   3b968:	ldr	lr, [sp, #32]
   3b96c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3b970:	adds	r8, r3, lr
   3b974:	adc	sl, r4, r6
   3b978:	subs	r0, r8, r2
   3b97c:	sbcs	r0, sl, r9
   3b980:	bcc	3b9a4 <flatcc_json_printer_fmt_float@@Base+0x71c>
   3b984:	subs	r0, r8, r2
   3b988:	sbc	r1, sl, r9
   3b98c:	subs	r7, r2, r3
   3b990:	sbc	r6, r9, r4
   3b994:	subs	r0, r7, r0
   3b998:	sbcs	r0, r6, r1
   3b99c:	ldr	r6, [sp, #44]	; 0x2c
   3b9a0:	bcc	3bb50 <flatcc_json_printer_fmt_float@@Base+0x8c8>
   3b9a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3b9a8:	sub	r5, r5, #1
   3b9ac:	mov	ip, #0
   3b9b0:	strb	r5, [r0, #-1]
   3b9b4:	ldr	r0, [sp, #48]	; 0x30
   3b9b8:	subs	r1, r0, r8
   3b9bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3b9c0:	sbc	r7, r0, sl
   3b9c4:	subs	r0, r1, lr
   3b9c8:	sbcs	r0, r7, r6
   3b9cc:	movwcc	ip, #1
   3b9d0:	subs	r0, r8, r2
   3b9d4:	sbcs	r0, sl, r9
   3b9d8:	bcs	3bb5c <flatcc_json_printer_fmt_float@@Base+0x8d4>
   3b9dc:	subs	r0, r1, lr
   3b9e0:	mov	r3, r8
   3b9e4:	mov	r4, sl
   3b9e8:	sbcs	r0, r7, r6
   3b9ec:	bcs	3b970 <flatcc_json_printer_fmt_float@@Base+0x6e8>
   3b9f0:	b	3bb5c <flatcc_json_printer_fmt_float@@Base+0x8d4>
   3b9f4:	ldr	r6, [sp, #44]	; 0x2c
   3b9f8:	b	3bb54 <flatcc_json_printer_fmt_float@@Base+0x8cc>
   3b9fc:	ldr	r9, [sp, #36]	; 0x24
   3ba00:	ldr	r0, [sp, #12]
   3ba04:	subs	r3, r9, r0
   3ba08:	str	r3, [sp, #52]	; 0x34
   3ba0c:	ldr	r8, [sp, #20]
   3ba10:	ldr	r7, [sp, #16]
   3ba14:	sbc	r3, r8, r7
   3ba18:	str	r3, [sp, #56]	; 0x38
   3ba1c:	ldr	r3, [sp, #8]
   3ba20:	ldr	ip, [sp, #4]
   3ba24:	cmp	r3, ip
   3ba28:	bne	3c080 <flatcc_json_printer_fmt_float@@Base+0xdf8>
   3ba2c:	subs	r0, r9, r0
   3ba30:	sbcs	r0, r8, r7
   3ba34:	bcc	3c080 <flatcc_json_printer_fmt_float@@Base+0xdf8>
   3ba38:	ldr	r0, [sp, #48]	; 0x30
   3ba3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3ba40:	lsr	r8, r1, sl
   3ba44:	subs	r0, r0, r2
   3ba48:	sbc	r3, r3, r5
   3ba4c:	cmp	r4, #0
   3ba50:	mov	sl, r3
   3ba54:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ba58:	lslge	r8, r1, r4
   3ba5c:	lsl	r9, r1, r3
   3ba60:	mov	r1, #0
   3ba64:	movwge	r9, #0
   3ba68:	subs	r7, r0, r9
   3ba6c:	sbcs	r7, sl, r8
   3ba70:	ldr	r7, [sp, #52]	; 0x34
   3ba74:	movwcc	r1, #1
   3ba78:	adds	r3, r7, #1
   3ba7c:	str	r3, [fp, #-48]	; 0xffffffd0
   3ba80:	ldr	r4, [sp, #56]	; 0x38
   3ba84:	adc	r3, r4, #0
   3ba88:	subs	ip, r7, #1
   3ba8c:	str	r3, [fp, #-52]	; 0xffffffcc
   3ba90:	sbc	r3, r4, #0
   3ba94:	subs	r4, r2, ip
   3ba98:	sbcs	r4, r5, r3
   3ba9c:	bcs	3bb48 <flatcc_json_printer_fmt_float@@Base+0x8c0>
   3baa0:	subs	r0, r0, r9
   3baa4:	sbcs	r0, sl, r8
   3baa8:	bcc	3bb48 <flatcc_json_printer_fmt_float@@Base+0x8c0>
   3baac:	ldr	sl, [sp, #48]	; 0x30
   3bab0:	adds	r4, r2, r9
   3bab4:	adc	r0, r5, r8
   3bab8:	subs	r1, r4, ip
   3babc:	sbcs	r1, r0, r3
   3bac0:	bcc	3bafc <flatcc_json_printer_fmt_float@@Base+0x874>
   3bac4:	subs	sl, r4, ip
   3bac8:	mov	r7, r9
   3bacc:	mov	r9, r8
   3bad0:	sbc	r1, r0, r3
   3bad4:	str	r1, [fp, #-40]	; 0xffffffd8
   3bad8:	subs	r1, ip, r2
   3badc:	sbc	r8, r3, r5
   3bae0:	subs	r1, r1, sl
   3bae4:	ldr	sl, [sp, #48]	; 0x30
   3bae8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3baec:	sbcs	r1, r8, r1
   3baf0:	mov	r8, r9
   3baf4:	mov	r9, r7
   3baf8:	bcc	3bc38 <flatcc_json_printer_fmt_float@@Base+0x9b0>
   3bafc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3bb00:	sub	r6, r6, #1
   3bb04:	subs	r2, sl, r4
   3bb08:	strb	r6, [r1, lr]
   3bb0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3bb10:	sbc	r5, r1, r0
   3bb14:	subs	r1, r2, r9
   3bb18:	sbcs	r1, r5, r8
   3bb1c:	mov	r1, #0
   3bb20:	movwcc	r1, #1
   3bb24:	subs	r7, r4, ip
   3bb28:	sbcs	r7, r0, r3
   3bb2c:	bcs	3bc44 <flatcc_json_printer_fmt_float@@Base+0x9bc>
   3bb30:	subs	r2, r2, r9
   3bb34:	sbcs	r2, r5, r8
   3bb38:	mov	r5, r0
   3bb3c:	mov	r2, r4
   3bb40:	bcs	3bab0 <flatcc_json_printer_fmt_float@@Base+0x828>
   3bb44:	b	3bc44 <flatcc_json_printer_fmt_float@@Base+0x9bc>
   3bb48:	ldr	sl, [sp, #48]	; 0x30
   3bb4c:	b	3bc3c <flatcc_json_printer_fmt_float@@Base+0x9b4>
   3bb50:	mov	ip, #0
   3bb54:	mov	r8, r3
   3bb58:	mov	sl, r4
   3bb5c:	ldr	r3, [sp, #36]	; 0x24
   3bb60:	ldr	r4, [sp, #20]
   3bb64:	subs	r0, r8, r3
   3bb68:	sbcs	r0, sl, r4
   3bb6c:	bcs	3bbd4 <flatcc_json_printer_fmt_float@@Base+0x94c>
   3bb70:	cmp	ip, #0
   3bb74:	bne	3bbd4 <flatcc_json_printer_fmt_float@@Base+0x94c>
   3bb78:	ldr	r0, [sp, #32]
   3bb7c:	ldr	r5, [sp, #56]	; 0x38
   3bb80:	ldr	r9, [sp, #52]	; 0x34
   3bb84:	adds	r1, r8, r0
   3bb88:	adc	r7, sl, r6
   3bb8c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   3bb90:	subs	r0, r1, r3
   3bb94:	sbcs	r0, r7, r4
   3bb98:	bcc	3bd3c <flatcc_json_printer_fmt_float@@Base+0xab4>
   3bb9c:	subs	ip, r1, r3
   3bba0:	mov	r0, #20
   3bba4:	sbc	lr, r7, r4
   3bba8:	subs	r7, r3, r8
   3bbac:	umull	r0, r3, r5, r0
   3bbb0:	sbc	r1, r4, sl
   3bbb4:	add	r3, r3, r9, lsl #2
   3bbb8:	subs	r0, r8, r0
   3bbbc:	sbcs	r0, sl, r3
   3bbc0:	bcc	3bd3c <flatcc_json_printer_fmt_float@@Base+0xab4>
   3bbc4:	subs	r0, ip, r7
   3bbc8:	sbcs	r0, lr, r1
   3bbcc:	bcs	3bbf8 <flatcc_json_printer_fmt_float@@Base+0x970>
   3bbd0:	b	3bd3c <flatcc_json_printer_fmt_float@@Base+0xab4>
   3bbd4:	ldr	r5, [sp, #56]	; 0x38
   3bbd8:	ldr	r3, [sp, #52]	; 0x34
   3bbdc:	mov	r0, #20
   3bbe0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   3bbe4:	umull	r0, r1, r5, r0
   3bbe8:	add	r1, r1, r3, lsl #2
   3bbec:	subs	r0, r8, r0
   3bbf0:	sbcs	r0, sl, r1
   3bbf4:	bcc	3bd3c <flatcc_json_printer_fmt_float@@Base+0xab4>
   3bbf8:	mvn	r7, #0
   3bbfc:	ldr	r2, [sp, #48]	; 0x30
   3bc00:	subs	r0, r7, #39	; 0x27
   3bc04:	umull	r1, r3, r5, r0
   3bc08:	sbc	r7, r7, #0
   3bc0c:	mla	r3, r5, r7, r3
   3bc10:	mla	r0, r6, r0, r3
   3bc14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3bc18:	adds	r1, r1, r2
   3bc1c:	adc	r0, r0, r3
   3bc20:	subs	r1, r1, r8
   3bc24:	sbcs	r0, r0, sl
   3bc28:	bcc	3bd3c <flatcc_json_printer_fmt_float@@Base+0xab4>
   3bc2c:	ldr	r0, [sp, #40]	; 0x28
   3bc30:	sub	lr, r0, #1
   3bc34:	b	3bce4 <flatcc_json_printer_fmt_float@@Base+0xa5c>
   3bc38:	mov	r1, #0
   3bc3c:	mov	r4, r2
   3bc40:	mov	r0, r5
   3bc44:	add	r2, lr, #1
   3bc48:	str	r2, [sp, #40]	; 0x28
   3bc4c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   3bc50:	ldr	r6, [fp, #-52]	; 0xffffffcc
   3bc54:	subs	r2, r4, r5
   3bc58:	sbcs	r2, r0, r6
   3bc5c:	bcs	3bcc0 <flatcc_json_printer_fmt_float@@Base+0xa38>
   3bc60:	cmp	r1, #0
   3bc64:	bne	3bcc0 <flatcc_json_printer_fmt_float@@Base+0xa38>
   3bc68:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3bc6c:	adds	r1, r4, r9
   3bc70:	adc	r2, r0, r8
   3bc74:	subs	r7, r1, r5
   3bc78:	sbcs	r7, r2, r6
   3bc7c:	bcc	3bd3c <flatcc_json_printer_fmt_float@@Base+0xab4>
   3bc80:	subs	ip, r1, r5
   3bc84:	sbc	r9, r2, r6
   3bc88:	subs	r7, r5, r4
   3bc8c:	sbc	r1, r6, r0
   3bc90:	subs	r8, sl, #4
   3bc94:	sbc	r3, r3, #0
   3bc98:	subs	r2, r4, #2
   3bc9c:	sbcs	r2, r0, #0
   3bca0:	bcc	3bd3c <flatcc_json_printer_fmt_float@@Base+0xab4>
   3bca4:	subs	r2, ip, r7
   3bca8:	sbcs	r1, r9, r1
   3bcac:	bcc	3bd3c <flatcc_json_printer_fmt_float@@Base+0xab4>
   3bcb0:	subs	r1, r8, r4
   3bcb4:	sbcs	r0, r3, r0
   3bcb8:	bcs	3bce4 <flatcc_json_printer_fmt_float@@Base+0xa5c>
   3bcbc:	b	3bd3c <flatcc_json_printer_fmt_float@@Base+0xab4>
   3bcc0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3bcc4:	subs	r1, sl, #4
   3bcc8:	sbc	r2, r2, #0
   3bccc:	subs	r3, r4, #2
   3bcd0:	sbcs	r3, r0, #0
   3bcd4:	bcc	3bd3c <flatcc_json_printer_fmt_float@@Base+0xab4>
   3bcd8:	subs	r1, r1, r4
   3bcdc:	sbcs	r0, r2, r0
   3bce0:	bcc	3bd3c <flatcc_json_printer_fmt_float@@Base+0xab4>
   3bce4:	ldr	r0, [sp, #28]
   3bce8:	ldr	r4, [sp, #40]	; 0x28
   3bcec:	ldr	r7, [fp, #-32]	; 0xffffffe0
   3bcf0:	ldrsh	r5, [r0, #26]
   3bcf4:	sub	r0, r4, #1
   3bcf8:	cmp	r4, #3
   3bcfc:	movwlt	r0, #1
   3bd00:	sub	r9, r7, r5
   3bd04:	rsb	r3, r9, #0
   3bd08:	cmp	r0, r3
   3bd0c:	movge	r0, r3
   3bd10:	cmn	r9, #1
   3bd14:	ble	3bd68 <flatcc_json_printer_fmt_float@@Base+0xae0>
   3bd18:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3bd1c:	cmp	r9, #3
   3bd20:	bcc	3bde8 <flatcc_json_printer_fmt_float@@Base+0xb60>
   3bd24:	mov	r0, #101	; 0x65
   3bd28:	add	lr, r4, #1
   3bd2c:	strb	r0, [r1, r4]
   3bd30:	add	r0, r1, lr
   3bd34:	mov	r2, r0
   3bd38:	b	3bf44 <flatcc_json_printer_fmt_float@@Base+0xcbc>
   3bd3c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   3bd40:	movw	r1, #60861	; 0xedbd
   3bd44:	vmov	r2, r3, d0
   3bd48:	movt	r1, #4
   3bd4c:	mov	r0, r4
   3bd50:	bl	14f2c <sprintf@plt>
   3bd54:	ldr	r1, [sp, #24]
   3bd58:	sub	r1, r4, r1
   3bd5c:	add	r0, r1, r0
   3bd60:	sub	sp, fp, #28
   3bd64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3bd68:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3bd6c:	cmp	r4, r3
   3bd70:	bgt	3be4c <flatcc_json_printer_fmt_float@@Base+0xbc4>
   3bd74:	add	r2, r9, r4
   3bd78:	cmn	r2, #2
   3bd7c:	blt	3be4c <flatcc_json_printer_fmt_float@@Base+0xbc4>
   3bd80:	add	r8, r1, #2
   3bd84:	mvn	r0, lr
   3bd88:	add	r2, r8, r3
   3bd8c:	add	r0, r2, r0
   3bd90:	mov	r2, r4
   3bd94:	bl	14e48 <memmove@plt>
   3bd98:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3bd9c:	movw	r0, #11824	; 0x2e30
   3bda0:	mov	r6, r4
   3bda4:	strh	r0, [r1]
   3bda8:	rsb	r0, r4, #2
   3bdac:	sub	r4, r0, r9
   3bdb0:	mov	r0, #2
   3bdb4:	cmp	r4, #3
   3bdb8:	blt	3bdd8 <flatcc_json_printer_fmt_float@@Base+0xb50>
   3bdbc:	sub	r0, r5, r7
   3bdc0:	mov	r1, #48	; 0x30
   3bdc4:	sub	r2, r0, r6
   3bdc8:	mov	r0, r8
   3bdcc:	bl	14ef0 <memset@plt>
   3bdd0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3bdd4:	mov	r0, r4
   3bdd8:	ldr	ip, [sp, #24]
   3bddc:	add	r6, r0, r6
   3bde0:	mov	r4, r6
   3bde4:	b	3bfc0 <flatcc_json_printer_fmt_float@@Base+0xd38>
   3bde8:	cmp	r9, #0
   3bdec:	beq	3bebc <flatcc_json_printer_fmt_float@@Base+0xc34>
   3bdf0:	add	r0, r1, r4
   3bdf4:	mvn	r1, r7
   3bdf8:	mov	r6, r4
   3bdfc:	mvn	r4, #1
   3be00:	add	r1, r1, r5
   3be04:	cmn	r1, #2
   3be08:	movle	r1, r4
   3be0c:	add	r1, r7, r1
   3be10:	add	r1, r1, #2
   3be14:	sub	r2, r1, r5
   3be18:	mov	r1, #48	; 0x30
   3be1c:	bl	14ef0 <memset@plt>
   3be20:	mvn	r0, r9
   3be24:	cmn	r0, #2
   3be28:	movgt	r4, r0
   3be2c:	add	r0, r9, r4
   3be30:	add	r0, r0, #2
   3be34:	cmp	r0, #4
   3be38:	bcs	3bec4 <flatcc_json_printer_fmt_float@@Base+0xc3c>
   3be3c:	ldr	ip, [sp, #24]
   3be40:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3be44:	mov	r4, r6
   3be48:	b	3bf10 <flatcc_json_printer_fmt_float@@Base+0xc88>
   3be4c:	cmp	r4, #2
   3be50:	blt	3bf28 <flatcc_json_printer_fmt_float@@Base+0xca0>
   3be54:	ldr	ip, [sp, #24]
   3be58:	cmp	r0, #1
   3be5c:	blt	3be84 <flatcc_json_printer_fmt_float@@Base+0xbfc>
   3be60:	add	r2, r1, r4
   3be64:	mov	r6, #0
   3be68:	mov	r3, r2
   3be6c:	ldrb	r7, [r3, #-1]!
   3be70:	add	r6, r6, #1
   3be74:	cmp	r6, r0
   3be78:	strb	r7, [r2]
   3be7c:	mov	r2, r3
   3be80:	blt	3be6c <flatcc_json_printer_fmt_float@@Base+0xbe4>
   3be84:	sub	r3, r4, r0
   3be88:	mov	r2, #46	; 0x2e
   3be8c:	adds	r7, r0, r9
   3be90:	add	r0, r4, #1
   3be94:	strb	r2, [r1, r3]
   3be98:	beq	3bfd4 <flatcc_json_printer_fmt_float@@Base+0xd4c>
   3be9c:	mov	r2, #101	; 0x65
   3bea0:	add	lr, r4, #2
   3bea4:	cmn	r7, #1
   3bea8:	strb	r2, [r1, r0]
   3beac:	add	r0, r1, lr
   3beb0:	ble	3bfdc <flatcc_json_printer_fmt_float@@Base+0xd54>
   3beb4:	mov	r2, r0
   3beb8:	b	3bfec <flatcc_json_printer_fmt_float@@Base+0xd64>
   3bebc:	ldr	ip, [sp, #24]
   3bec0:	b	3bfc0 <flatcc_json_printer_fmt_float@@Base+0xd38>
   3bec4:	ldr	ip, [sp, #24]
   3bec8:	mov	r1, #0
   3becc:	vmov.i32	q9, #1	; 0x00000001
   3bed0:	vdup.32	q8, r1
   3bed4:	bic	r1, r0, #3
   3bed8:	vmov.32	d16[0], r6
   3bedc:	sub	r9, r9, r1
   3bee0:	mov	r2, r1
   3bee4:	subs	r2, r2, #4
   3bee8:	vadd.i32	q8, q8, q9
   3beec:	bne	3bee4 <flatcc_json_printer_fmt_float@@Base+0xc5c>
   3bef0:	vext.8	q9, q8, q8, #8
   3bef4:	cmp	r0, r1
   3bef8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3befc:	vadd.i32	q8, q8, q9
   3bf00:	vdup.32	q9, d16[1]
   3bf04:	vadd.i32	q8, q8, q9
   3bf08:	vmov.32	r4, d16[0]
   3bf0c:	beq	3bfc0 <flatcc_json_printer_fmt_float@@Base+0xd38>
   3bf10:	add	r0, r9, #1
   3bf14:	sub	r0, r0, #1
   3bf18:	add	r4, r4, #1
   3bf1c:	cmp	r0, #1
   3bf20:	bgt	3bf14 <flatcc_json_printer_fmt_float@@Base+0xc8c>
   3bf24:	b	3bfc0 <flatcc_json_printer_fmt_float@@Base+0xd38>
   3bf28:	add	r0, r1, r4
   3bf2c:	movw	r2, #11621	; 0x2d65
   3bf30:	add	lr, r4, #1
   3bf34:	mov	r9, r3
   3bf38:	strh	r2, [r0]
   3bf3c:	add	r0, r1, lr
   3bf40:	add	r2, r0, #1
   3bf44:	ldr	ip, [sp, #24]
   3bf48:	movw	r7, #26215	; 0x6667
   3bf4c:	mov	r3, r2
   3bf50:	movt	r7, #26214	; 0x6666
   3bf54:	smmul	r6, r9, r7
   3bf58:	asr	r5, r6, #2
   3bf5c:	add	r4, r5, r6, lsr #31
   3bf60:	add	r6, r4, r4, lsl #2
   3bf64:	sub	r6, r9, r6, lsl #1
   3bf68:	add	r6, r6, #48	; 0x30
   3bf6c:	strb	r6, [r3], #1
   3bf70:	add	r6, r9, #9
   3bf74:	mov	r9, r4
   3bf78:	cmp	r6, #18
   3bf7c:	bhi	3bf54 <flatcc_json_printer_fmt_float@@Base+0xccc>
   3bf80:	mov	r6, #0
   3bf84:	mov	r7, r3
   3bf88:	strb	r6, [r7], -r2
   3bf8c:	cmp	r7, #2
   3bf90:	blt	3bfb8 <flatcc_json_printer_fmt_float@@Base+0xd30>
   3bf94:	add	r7, r7, r7, lsr #31
   3bf98:	sub	r6, r3, #1
   3bf9c:	asr	r7, r7, #1
   3bfa0:	ldrb	r5, [r2]
   3bfa4:	ldrb	r4, [r6]
   3bfa8:	subs	r7, r7, #1
   3bfac:	strb	r4, [r2], #1
   3bfb0:	strb	r5, [r6], #-1
   3bfb4:	bne	3bfa0 <flatcc_json_printer_fmt_float@@Base+0xd18>
   3bfb8:	sub	r0, lr, r0
   3bfbc:	add	r4, r0, r3
   3bfc0:	mov	r0, #0
   3bfc4:	strb	r0, [r1, r4]!
   3bfc8:	sub	r0, r1, ip
   3bfcc:	sub	sp, fp, #28
   3bfd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3bfd4:	mov	r4, r0
   3bfd8:	b	3bfc0 <flatcc_json_printer_fmt_float@@Base+0xd38>
   3bfdc:	mov	r3, #45	; 0x2d
   3bfe0:	mov	r2, r0
   3bfe4:	rsb	r7, r7, #0
   3bfe8:	strb	r3, [r2], #1
   3bfec:	movw	r6, #26215	; 0x6667
   3bff0:	mov	r3, r2
   3bff4:	movt	r6, #26214	; 0x6666
   3bff8:	smmul	r5, r7, r6
   3bffc:	asr	r4, r5, #2
   3c000:	add	r5, r4, r5, lsr #31
   3c004:	add	r4, r5, r5, lsl #2
   3c008:	sub	r4, r7, r4, lsl #1
   3c00c:	add	r7, r7, #9
   3c010:	add	r4, r4, #48	; 0x30
   3c014:	cmp	r7, #18
   3c018:	mov	r7, r5
   3c01c:	strb	r4, [r3], #1
   3c020:	bhi	3bff8 <flatcc_json_printer_fmt_float@@Base+0xd70>
   3c024:	mov	r6, #0
   3c028:	mov	r7, r3
   3c02c:	strb	r6, [r7], -r2
   3c030:	cmp	r7, #2
   3c034:	blt	3bfb8 <flatcc_json_printer_fmt_float@@Base+0xd30>
   3c038:	add	r7, r7, r7, lsr #31
   3c03c:	sub	r6, r3, #1
   3c040:	asr	r7, r7, #1
   3c044:	ldrb	r5, [r2]
   3c048:	ldrb	r4, [r6]
   3c04c:	subs	r7, r7, #1
   3c050:	strb	r4, [r2], #1
   3c054:	strb	r5, [r6], #-1
   3c058:	bne	3c044 <flatcc_json_printer_fmt_float@@Base+0xdbc>
   3c05c:	b	3bfb8 <flatcc_json_printer_fmt_float@@Base+0xd30>
   3c060:	movw	r0, #60716	; 0xed2c
   3c064:	movw	r1, #60720	; 0xed30
   3c068:	movw	r3, #60807	; 0xed87
   3c06c:	mov	r2, #189	; 0xbd
   3c070:	movt	r0, #4
   3c074:	movt	r1, #4
   3c078:	movt	r3, #4
   3c07c:	bl	14f44 <__assert_fail@plt>
   3c080:	movw	r0, #60945	; 0xee11
   3c084:	movw	r1, #59947	; 0xea2b
   3c088:	movw	r3, #60970	; 0xee2a
   3c08c:	mov	r2, #239	; 0xef
   3c090:	movt	r0, #4
   3c094:	movt	r1, #4
   3c098:	movt	r3, #4
   3c09c:	bl	14f44 <__assert_fail@plt>
   3c0a0:	movw	r0, #60867	; 0xedc3
   3c0a4:	movw	r1, #60720	; 0xed30
   3c0a8:	movw	r3, #60904	; 0xede8
   3c0ac:	mov	r2, #138	; 0x8a
   3c0b0:	movt	r0, #4
   3c0b4:	movt	r1, #4
   3c0b8:	movt	r3, #4
   3c0bc:	bl	14f44 <__assert_fail@plt>
   3c0c0:	movw	r0, #59938	; 0xea22
   3c0c4:	movw	r1, #59947	; 0xea2b
   3c0c8:	movw	r3, #60033	; 0xea81
   3c0cc:	mov	r2, #260	; 0x104
   3c0d0:	movt	r0, #4
   3c0d4:	movt	r1, #4
   3c0d8:	movt	r3, #4
   3c0dc:	bl	14f44 <__assert_fail@plt>

0003c0e0 <flatcc_json_printer_fmt_double@@Base>:
   3c0e0:	b	3b290 <flatcc_json_printer_fmt_float@@Base+0x8>

0003c0e4 <flatcc_json_printer_fmt_bool@@Base>:
   3c0e4:	cmp	r1, #0
   3c0e8:	movwne	r1, #29300	; 0x7274
   3c0ec:	movtne	r1, #25973	; 0x6575
   3c0f0:	strne	r1, [r0]
   3c0f4:	movne	r0, #4
   3c0f8:	bxne	lr
   3c0fc:	mov	r1, #101	; 0x65
   3c100:	strb	r1, [r0, #4]
   3c104:	movw	r1, #24934	; 0x6166
   3c108:	movt	r1, #29548	; 0x736c
   3c10c:	str	r1, [r0]
   3c110:	mov	r0, #5
   3c114:	bx	lr

0003c118 <flatcc_json_printer_string@@Base>:
   3c118:	b	3c11c <flatcc_json_printer_string@@Base+0x4>
   3c11c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c120:	add	fp, sp, #28
   3c124:	sub	sp, sp, #12
   3c128:	mov	r5, r0
   3c12c:	mov	r4, r0
   3c130:	mov	r6, r1
   3c134:	mov	r3, r2
   3c138:	ldr	r0, [r5, #20]!
   3c13c:	add	r1, r0, #1
   3c140:	str	r5, [sp, #4]
   3c144:	str	r1, [r5]
   3c148:	mov	r1, #34	; 0x22
   3c14c:	strb	r1, [r0]
   3c150:	ldrb	sl, [r6]
   3c154:	mov	r8, r6
   3c158:	cmp	sl, #32
   3c15c:	bcc	3c19c <flatcc_json_printer_string@@Base+0x84>
   3c160:	b	3c180 <flatcc_json_printer_string@@Base+0x68>
   3c164:	strb	r2, [r1]
   3c168:	sub	r3, r0, #1
   3c16c:	add	r6, r8, #1
   3c170:	ldrb	sl, [r6]
   3c174:	mov	r8, r6
   3c178:	cmp	sl, #32
   3c17c:	bcc	3c19c <flatcc_json_printer_string@@Base+0x84>
   3c180:	uxtb	r0, sl
   3c184:	cmp	r0, #34	; 0x22
   3c188:	cmpne	r0, #92	; 0x5c
   3c18c:	beq	3c19c <flatcc_json_printer_string@@Base+0x84>
   3c190:	ldrb	sl, [r8, #1]!
   3c194:	cmp	sl, #31
   3c198:	bhi	3c180 <flatcc_json_printer_string@@Base+0x68>
   3c19c:	ldr	r0, [r4, #20]
   3c1a0:	ldr	r1, [r4, #16]
   3c1a4:	sub	r9, r8, r6
   3c1a8:	add	r2, r0, r9
   3c1ac:	cmp	r2, r1
   3c1b0:	bcs	3c1d0 <flatcc_json_printer_string@@Base+0xb8>
   3c1b4:	mov	r1, r6
   3c1b8:	mov	r2, r9
   3c1bc:	mov	r6, r3
   3c1c0:	bl	14e60 <memcpy@plt>
   3c1c4:	mov	r2, r6
   3c1c8:	mov	r7, r9
   3c1cc:	b	3c25c <flatcc_json_printer_string@@Base+0x144>
   3c1d0:	cmp	r0, r1
   3c1d4:	str	r3, [sp, #8]
   3c1d8:	bcc	3c1f4 <flatcc_json_printer_string@@Base+0xdc>
   3c1dc:	ldr	r2, [r4, #44]	; 0x2c
   3c1e0:	mov	r0, r4
   3c1e4:	mov	r1, #0
   3c1e8:	blx	r2
   3c1ec:	ldr	r1, [r4, #16]
   3c1f0:	ldr	r0, [r4, #20]
   3c1f4:	sub	r5, r1, r0
   3c1f8:	mov	r7, r9
   3c1fc:	cmp	r5, r9
   3c200:	bcs	3c248 <flatcc_json_printer_string@@Base+0x130>
   3c204:	mov	r1, r6
   3c208:	mov	r2, r5
   3c20c:	bl	14e60 <memcpy@plt>
   3c210:	ldr	r0, [r4, #20]
   3c214:	ldr	r2, [r4, #44]	; 0x2c
   3c218:	mov	r1, #0
   3c21c:	add	r0, r0, r5
   3c220:	str	r0, [r4, #20]
   3c224:	mov	r0, r4
   3c228:	blx	r2
   3c22c:	ldr	r1, [r4, #16]
   3c230:	ldr	r0, [r4, #20]
   3c234:	sub	r7, r7, r5
   3c238:	add	r6, r6, r5
   3c23c:	sub	r5, r1, r0
   3c240:	cmp	r7, r5
   3c244:	bhi	3c204 <flatcc_json_printer_string@@Base+0xec>
   3c248:	ldr	r5, [sp, #4]
   3c24c:	mov	r1, r6
   3c250:	mov	r2, r7
   3c254:	bl	14e60 <memcpy@plt>
   3c258:	ldr	r2, [sp, #8]
   3c25c:	ldr	r0, [r5]
   3c260:	add	r1, r0, r7
   3c264:	add	r0, r1, #1
   3c268:	str	r0, [r5]
   3c26c:	subs	r0, r2, r9
   3c270:	beq	3c414 <flatcc_json_printer_string@@Base+0x2fc>
   3c274:	mov	r2, #92	; 0x5c
   3c278:	strb	r2, [r1]
   3c27c:	mvn	r1, #7
   3c280:	uxtab	r2, r1, sl
   3c284:	uxtb	r1, sl
   3c288:	cmp	r2, #26
   3c28c:	bhi	3c318 <flatcc_json_printer_string@@Base+0x200>
   3c290:	add	r3, pc, #0
   3c294:	ldr	pc, [r3, r2, lsl #2]
   3c298:	andeq	ip, r3, r4, lsl #6
   3c29c:			; <UNDEFINED> instruction: 0x0003c3b0
   3c2a0:	andeq	ip, r3, r4, asr #7
   3c2a4:	andeq	ip, r3, r4, lsr r3
   3c2a8:	ldrdeq	ip, [r3], -r8
   3c2ac:	andeq	ip, r3, ip, ror #7
   3c2b0:	andeq	ip, r3, r4, lsr r3
   3c2b4:	andeq	ip, r3, r4, lsr r3
   3c2b8:	andeq	ip, r3, r4, lsr r3
   3c2bc:	andeq	ip, r3, r4, lsr r3
   3c2c0:	andeq	ip, r3, r4, lsr r3
   3c2c4:	andeq	ip, r3, r4, lsr r3
   3c2c8:	andeq	ip, r3, r4, lsr r3
   3c2cc:	andeq	ip, r3, r4, lsr r3
   3c2d0:	andeq	ip, r3, r4, lsr r3
   3c2d4:	andeq	ip, r3, r4, lsr r3
   3c2d8:	andeq	ip, r3, r4, lsr r3
   3c2dc:	andeq	ip, r3, r4, lsr r3
   3c2e0:	andeq	ip, r3, r4, lsr r3
   3c2e4:	andeq	ip, r3, r4, lsr r3
   3c2e8:	andeq	ip, r3, r4, lsr r3
   3c2ec:	andeq	ip, r3, r4, lsr r3
   3c2f0:	andeq	ip, r3, r4, lsr r3
   3c2f4:	andeq	ip, r3, r4, lsr r3
   3c2f8:	andeq	ip, r3, r4, lsr r3
   3c2fc:	andeq	ip, r3, r4, lsr r3
   3c300:	andeq	ip, r3, r0, lsl #8
   3c304:	ldr	r1, [r5]
   3c308:	add	r2, r1, #1
   3c30c:	str	r2, [r5]
   3c310:	mov	r2, #98	; 0x62
   3c314:	b	3c164 <flatcc_json_printer_string@@Base+0x4c>
   3c318:	cmp	r1, #92	; 0x5c
   3c31c:	bne	3c334 <flatcc_json_printer_string@@Base+0x21c>
   3c320:	ldr	r1, [r5]
   3c324:	add	r2, r1, #1
   3c328:	str	r2, [r5]
   3c32c:	mov	r2, #92	; 0x5c
   3c330:	b	3c164 <flatcc_json_printer_string@@Base+0x4c>
   3c334:	ldr	r2, [r5]
   3c338:	mov	r7, #48	; 0x30
   3c33c:	cmp	r1, #160	; 0xa0
   3c340:	add	r3, r2, #1
   3c344:	str	r3, [r5]
   3c348:	mov	r3, #117	; 0x75
   3c34c:	strb	r3, [r2]
   3c350:	ldr	r2, [r5]
   3c354:	add	r3, r2, #1
   3c358:	str	r3, [r5]
   3c35c:	strb	r7, [r2]
   3c360:	ldr	r2, [r5]
   3c364:	add	r3, r2, #1
   3c368:	str	r3, [r5]
   3c36c:	strb	r7, [r2]
   3c370:	ldr	r2, [r5]
   3c374:	add	r3, r2, #1
   3c378:	str	r3, [r5]
   3c37c:	mov	r3, #87	; 0x57
   3c380:	movwcc	r3, #48	; 0x30
   3c384:	add	r1, r3, r1, lsr #4
   3c388:	mov	r3, #87	; 0x57
   3c38c:	strb	r1, [r2]
   3c390:	ldr	r1, [r5]
   3c394:	add	r2, r1, #1
   3c398:	str	r2, [r5]
   3c39c:	and	r2, sl, #15
   3c3a0:	cmp	r2, #10
   3c3a4:	movwcc	r3, #48	; 0x30
   3c3a8:	add	r2, r3, r2
   3c3ac:	b	3c164 <flatcc_json_printer_string@@Base+0x4c>
   3c3b0:	ldr	r1, [r5]
   3c3b4:	add	r2, r1, #1
   3c3b8:	str	r2, [r5]
   3c3bc:	mov	r2, #116	; 0x74
   3c3c0:	b	3c164 <flatcc_json_printer_string@@Base+0x4c>
   3c3c4:	ldr	r1, [r5]
   3c3c8:	add	r2, r1, #1
   3c3cc:	str	r2, [r5]
   3c3d0:	mov	r2, #110	; 0x6e
   3c3d4:	b	3c164 <flatcc_json_printer_string@@Base+0x4c>
   3c3d8:	ldr	r1, [r5]
   3c3dc:	add	r2, r1, #1
   3c3e0:	str	r2, [r5]
   3c3e4:	mov	r2, #102	; 0x66
   3c3e8:	b	3c164 <flatcc_json_printer_string@@Base+0x4c>
   3c3ec:	ldr	r1, [r5]
   3c3f0:	add	r2, r1, #1
   3c3f4:	str	r2, [r5]
   3c3f8:	mov	r2, #114	; 0x72
   3c3fc:	b	3c164 <flatcc_json_printer_string@@Base+0x4c>
   3c400:	ldr	r1, [r5]
   3c404:	add	r2, r1, #1
   3c408:	str	r2, [r5]
   3c40c:	mov	r2, #34	; 0x22
   3c410:	b	3c164 <flatcc_json_printer_string@@Base+0x4c>
   3c414:	mov	r0, #34	; 0x22
   3c418:	strb	r0, [r1]
   3c41c:	sub	sp, fp, #28
   3c420:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003c424 <flatcc_json_printer_write@@Base>:
   3c424:	push	{r4, r5, r6, r7, fp, lr}
   3c428:	add	fp, sp, #16
   3c42c:	mov	r6, r1
   3c430:	mov	r5, r0
   3c434:	ldr	r1, [r0, #16]
   3c438:	ldr	r0, [r0, #20]
   3c43c:	mov	r4, r2
   3c440:	add	r2, r0, r2
   3c444:	cmp	r2, r1
   3c448:	bcc	3c4bc <flatcc_json_printer_write@@Base+0x98>
   3c44c:	cmp	r0, r1
   3c450:	bcc	3c46c <flatcc_json_printer_write@@Base+0x48>
   3c454:	ldr	r2, [r5, #44]	; 0x2c
   3c458:	mov	r0, r5
   3c45c:	mov	r1, #0
   3c460:	blx	r2
   3c464:	ldr	r1, [r5, #16]
   3c468:	ldr	r0, [r5, #20]
   3c46c:	sub	r7, r1, r0
   3c470:	cmp	r7, r4
   3c474:	bcs	3c4bc <flatcc_json_printer_write@@Base+0x98>
   3c478:	mov	r1, r6
   3c47c:	mov	r2, r7
   3c480:	bl	14e60 <memcpy@plt>
   3c484:	ldr	r0, [r5, #20]
   3c488:	ldr	r2, [r5, #44]	; 0x2c
   3c48c:	mov	r1, #0
   3c490:	add	r0, r0, r7
   3c494:	str	r0, [r5, #20]
   3c498:	mov	r0, r5
   3c49c:	blx	r2
   3c4a0:	ldr	r1, [r5, #16]
   3c4a4:	ldr	r0, [r5, #20]
   3c4a8:	sub	r4, r4, r7
   3c4ac:	add	r6, r6, r7
   3c4b0:	sub	r7, r1, r0
   3c4b4:	cmp	r4, r7
   3c4b8:	bhi	3c478 <flatcc_json_printer_write@@Base+0x54>
   3c4bc:	mov	r1, r6
   3c4c0:	mov	r2, r4
   3c4c4:	bl	14e60 <memcpy@plt>
   3c4c8:	ldr	r0, [r5, #20]
   3c4cc:	add	r0, r0, r4
   3c4d0:	str	r0, [r5, #20]
   3c4d4:	pop	{r4, r5, r6, r7, fp, pc}

0003c4d8 <flatcc_json_printer_nl@@Base>:
   3c4d8:	ldr	r1, [r0, #20]
   3c4dc:	add	r2, r1, #1
   3c4e0:	str	r2, [r0, #20]
   3c4e4:	mov	r2, #10
   3c4e8:	strb	r2, [r1]
   3c4ec:	ldr	r1, [r0, #16]
   3c4f0:	ldr	r2, [r0, #20]
   3c4f4:	cmp	r2, r1
   3c4f8:	bxcc	lr
   3c4fc:	ldr	r2, [r0, #44]	; 0x2c
   3c500:	mov	r1, #0
   3c504:	bx	r2

0003c508 <flatcc_json_printer_char@@Base>:
   3c508:	ldr	r2, [r0, #20]
   3c50c:	add	r3, r2, #1
   3c510:	str	r3, [r0, #20]
   3c514:	strb	r1, [r2]
   3c518:	bx	lr

0003c51c <flatcc_json_printer_indent@@Base>:
   3c51c:	push	{r4, r5, r6, sl, fp, lr}
   3c520:	add	fp, sp, #16
   3c524:	mov	r4, r0
   3c528:	ldr	r1, [r0, #16]
   3c52c:	ldr	r0, [r0, #20]
   3c530:	ldrb	r2, [r4, #25]
   3c534:	ldr	r3, [r4, #32]
   3c538:	mla	r6, r3, r2, r0
   3c53c:	mul	r5, r3, r2
   3c540:	cmp	r6, r1
   3c544:	bls	3c5b4 <flatcc_json_printer_indent@@Base+0x98>
   3c548:	cmp	r0, r1
   3c54c:	bcc	3c568 <flatcc_json_printer_indent@@Base+0x4c>
   3c550:	ldr	r2, [r4, #44]	; 0x2c
   3c554:	mov	r0, r4
   3c558:	mov	r1, #0
   3c55c:	blx	r2
   3c560:	ldr	r1, [r4, #16]
   3c564:	ldr	r0, [r4, #20]
   3c568:	sub	r6, r1, r0
   3c56c:	cmp	r6, r5
   3c570:	bcs	3c5b4 <flatcc_json_printer_indent@@Base+0x98>
   3c574:	mov	r1, #32
   3c578:	mov	r2, r6
   3c57c:	bl	14ef0 <memset@plt>
   3c580:	ldr	r0, [r4, #20]
   3c584:	ldr	r2, [r4, #44]	; 0x2c
   3c588:	mov	r1, #0
   3c58c:	add	r0, r0, r6
   3c590:	str	r0, [r4, #20]
   3c594:	mov	r0, r4
   3c598:	blx	r2
   3c59c:	ldr	r1, [r4, #16]
   3c5a0:	ldr	r0, [r4, #20]
   3c5a4:	sub	r5, r5, r6
   3c5a8:	sub	r6, r1, r0
   3c5ac:	cmp	r5, r6
   3c5b0:	bhi	3c574 <flatcc_json_printer_indent@@Base+0x58>
   3c5b4:	mov	r1, #32
   3c5b8:	mov	r2, r5
   3c5bc:	bl	14ef0 <memset@plt>
   3c5c0:	ldr	r0, [r4, #20]
   3c5c4:	add	r0, r0, r5
   3c5c8:	str	r0, [r4, #20]
   3c5cc:	pop	{r4, r5, r6, sl, fp, pc}

0003c5d0 <flatcc_json_printer_add_level@@Base>:
   3c5d0:	ldr	r2, [r0, #32]
   3c5d4:	add	r1, r2, r1
   3c5d8:	str	r1, [r0, #32]
   3c5dc:	bx	lr

0003c5e0 <flatcc_json_printer_get_level@@Base>:
   3c5e0:	ldr	r0, [r0, #32]
   3c5e4:	bx	lr

0003c5e8 <flatcc_json_printer_uint8@@Base>:
   3c5e8:	push	{fp, lr}
   3c5ec:	mov	fp, sp
   3c5f0:	ldr	lr, [r0, #20]
   3c5f4:	cmp	r1, #100	; 0x64
   3c5f8:	bcc	3c650 <flatcc_json_printer_uint8@@Base+0x68>
   3c5fc:	mov	r3, #0
   3c600:	strb	r3, [lr, #3]
   3c604:	movw	r3, #34079	; 0x851f
   3c608:	movt	r3, #20971	; 0x51eb
   3c60c:	umull	r3, ip, r1, r3
   3c610:	mov	r3, #48	; 0x30
   3c614:	orr	r3, r3, ip, lsr #5
   3c618:	lsr	ip, ip, #5
   3c61c:	strb	r3, [lr]
   3c620:	mov	r3, #100	; 0x64
   3c624:	mls	r1, ip, r3, r1
   3c628:	movw	r3, #61040	; 0xee70
   3c62c:	movt	r3, #4
   3c630:	add	r1, r3, r1, lsl #1
   3c634:	ldrh	r1, [r1]
   3c638:	strh	r1, [lr, #1]
   3c63c:	mov	r1, #3
   3c640:	ldr	r2, [r0, #20]
   3c644:	add	r1, r2, r1
   3c648:	str	r1, [r0, #20]
   3c64c:	pop	{fp, pc}
   3c650:	cmp	r1, #10
   3c654:	bcc	3c6a0 <flatcc_json_printer_uint8@@Base+0xb8>
   3c658:	mov	r3, #0
   3c65c:	strb	r3, [lr, #2]
   3c660:	movw	r3, #34079	; 0x851f
   3c664:	movt	r3, #20971	; 0x51eb
   3c668:	umull	r3, r2, r1, r3
   3c66c:	lsr	r2, r2, #5
   3c670:	mov	r3, #100	; 0x64
   3c674:	mls	r1, r2, r3, r1
   3c678:	movw	r2, #61040	; 0xee70
   3c67c:	movt	r2, #4
   3c680:	add	r1, r2, r1, lsl #1
   3c684:	ldrh	r1, [r1]
   3c688:	strh	r1, [lr]
   3c68c:	mov	r1, #2
   3c690:	ldr	r2, [r0, #20]
   3c694:	add	r1, r2, r1
   3c698:	str	r1, [r0, #20]
   3c69c:	pop	{fp, pc}
   3c6a0:	mov	r2, #0
   3c6a4:	add	r1, r1, #48	; 0x30
   3c6a8:	strb	r2, [lr, #1]
   3c6ac:	strb	r1, [lr]
   3c6b0:	mov	r1, #1
   3c6b4:	ldr	r2, [r0, #20]
   3c6b8:	add	r1, r2, r1
   3c6bc:	str	r1, [r0, #20]
   3c6c0:	pop	{fp, pc}

0003c6c4 <flatcc_json_printer_uint16@@Base>:
   3c6c4:	push	{r4, sl, fp, lr}
   3c6c8:	add	fp, sp, #8
   3c6cc:	mov	r2, r1
   3c6d0:	ldr	r1, [r0, #20]
   3c6d4:	mov	r4, r0
   3c6d8:	mov	r0, r2
   3c6dc:	bl	3c6f0 <flatcc_json_printer_uint16@@Base+0x2c>
   3c6e0:	ldr	r1, [r4, #20]
   3c6e4:	add	r0, r1, r0
   3c6e8:	str	r0, [r4, #20]
   3c6ec:	pop	{r4, sl, fp, pc}
   3c6f0:	mov	ip, r0
   3c6f4:	cmp	r0, #1000	; 0x3e8
   3c6f8:	bcc	3c760 <flatcc_json_printer_uint16@@Base+0x9c>
   3c6fc:	movw	r3, #9999	; 0x270f
   3c700:	mov	r0, #4
   3c704:	cmp	ip, r3
   3c708:	movwhi	r0, #5
   3c70c:	mov	r3, #0
   3c710:	tst	r0, #1
   3c714:	strb	r3, [r1, r0]!
   3c718:	bne	3c794 <flatcc_json_printer_uint16@@Base+0xd0>
   3c71c:	cmp	r0, #2
   3c720:	beq	3c81c <flatcc_json_printer_uint16@@Base+0x158>
   3c724:	cmp	r0, #4
   3c728:	bxne	lr
   3c72c:	movw	r2, #34079	; 0x851f
   3c730:	movt	r2, #20971	; 0x51eb
   3c734:	umull	r2, r3, ip, r2
   3c738:	lsr	r3, r3, #5
   3c73c:	mov	r2, #100	; 0x64
   3c740:	mls	r2, r3, r2, ip
   3c744:	uxth	ip, r2
   3c748:	movw	r2, #61040	; 0xee70
   3c74c:	movt	r2, #4
   3c750:	add	r2, r2, ip, lsl #1
   3c754:	ldrh	r2, [r2]
   3c758:	strh	r2, [r1, #-2]!
   3c75c:	b	3c820 <flatcc_json_printer_uint16@@Base+0x15c>
   3c760:	cmp	ip, #100	; 0x64
   3c764:	bcc	3c778 <flatcc_json_printer_uint16@@Base+0xb4>
   3c768:	mov	r0, #0
   3c76c:	strb	r0, [r1, #3]!
   3c770:	mov	r0, #3
   3c774:	b	3c7dc <flatcc_json_printer_uint16@@Base+0x118>
   3c778:	mov	r0, #1
   3c77c:	cmp	ip, #9
   3c780:	movwhi	r0, #2
   3c784:	mov	r3, #0
   3c788:	tst	r0, #1
   3c78c:	strb	r3, [r1, r0]!
   3c790:	beq	3c71c <flatcc_json_printer_uint16@@Base+0x58>
   3c794:	cmp	r0, #1
   3c798:	beq	3c854 <flatcc_json_printer_uint16@@Base+0x190>
   3c79c:	cmp	r0, #3
   3c7a0:	beq	3c7dc <flatcc_json_printer_uint16@@Base+0x118>
   3c7a4:	cmp	r0, #5
   3c7a8:	bne	3c850 <flatcc_json_printer_uint16@@Base+0x18c>
   3c7ac:	movw	r3, #34079	; 0x851f
   3c7b0:	movt	r3, #20971	; 0x51eb
   3c7b4:	umull	r3, r2, ip, r3
   3c7b8:	lsr	r2, r2, #5
   3c7bc:	mov	r3, #100	; 0x64
   3c7c0:	mls	ip, r2, r3, ip
   3c7c4:	movw	r3, #61040	; 0xee70
   3c7c8:	movt	r3, #4
   3c7cc:	add	r3, r3, ip, lsl #1
   3c7d0:	mov	ip, r2
   3c7d4:	ldrh	r3, [r3]
   3c7d8:	strh	r3, [r1, #-2]!
   3c7dc:	movw	r3, #34079	; 0x851f
   3c7e0:	uxth	r2, ip
   3c7e4:	movt	r3, #20971	; 0x51eb
   3c7e8:	umull	r2, r3, r2, r3
   3c7ec:	lsr	r3, r3, #5
   3c7f0:	mov	r2, #100	; 0x64
   3c7f4:	mls	r2, r3, r2, ip
   3c7f8:	uxth	ip, r2
   3c7fc:	movw	r2, #61040	; 0xee70
   3c800:	movt	r2, #4
   3c804:	add	r2, r2, ip, lsl #1
   3c808:	ldrh	r2, [r2]
   3c80c:	strh	r2, [r1, #-2]!
   3c810:	add	r2, r3, #48	; 0x30
   3c814:	strb	r2, [r1, #-1]
   3c818:	bx	lr
   3c81c:	mov	r3, ip
   3c820:	uxth	ip, r3
   3c824:	movw	r3, #34079	; 0x851f
   3c828:	movt	r3, #20971	; 0x51eb
   3c82c:	umull	r3, r2, ip, r3
   3c830:	lsr	r2, r2, #5
   3c834:	mov	r3, #100	; 0x64
   3c838:	mls	r2, r2, r3, ip
   3c83c:	movw	r3, #61040	; 0xee70
   3c840:	movt	r3, #4
   3c844:	add	r2, r3, r2, lsl #1
   3c848:	ldrh	r2, [r2]
   3c84c:	strh	r2, [r1, #-2]
   3c850:	bx	lr
   3c854:	mov	r3, ip
   3c858:	add	r2, r3, #48	; 0x30
   3c85c:	strb	r2, [r1, #-1]
   3c860:	bx	lr

0003c864 <flatcc_json_printer_uint32@@Base>:
   3c864:	push	{r4, sl, fp, lr}
   3c868:	add	fp, sp, #8
   3c86c:	mov	r2, r1
   3c870:	ldr	r1, [r0, #20]
   3c874:	mov	r4, r0
   3c878:	mov	r0, r2
   3c87c:	bl	3c890 <flatcc_json_printer_uint32@@Base+0x2c>
   3c880:	ldr	r1, [r4, #20]
   3c884:	add	r0, r1, r0
   3c888:	str	r0, [r4, #20]
   3c88c:	pop	{r4, sl, fp, pc}
   3c890:	mov	ip, r0
   3c894:	movw	r0, #10000	; 0x2710
   3c898:	cmp	ip, r0
   3c89c:	bcc	3c8d0 <flatcc_json_printer_uint32@@Base+0x6c>
   3c8a0:	movw	r0, #38528	; 0x9680
   3c8a4:	movt	r0, #152	; 0x98
   3c8a8:	cmp	ip, r0
   3c8ac:	bcc	3c8fc <flatcc_json_printer_uint32@@Base+0x98>
   3c8b0:	movw	r0, #51712	; 0xca00
   3c8b4:	movt	r0, #15258	; 0x3b9a
   3c8b8:	cmp	ip, r0
   3c8bc:	bcc	3ca6c <flatcc_json_printer_uint32@@Base+0x208>
   3c8c0:	mov	r0, #0
   3c8c4:	strb	r0, [r1, #10]!
   3c8c8:	mov	r0, #10
   3c8cc:	b	3c938 <flatcc_json_printer_uint32@@Base+0xd4>
   3c8d0:	cmp	ip, #100	; 0x64
   3c8d4:	bcc	3c91c <flatcc_json_printer_uint32@@Base+0xb8>
   3c8d8:	lsr	r3, ip, #3
   3c8dc:	mov	r0, #3
   3c8e0:	cmp	r3, #124	; 0x7c
   3c8e4:	movwhi	r0, #4
   3c8e8:	mov	r3, #0
   3c8ec:	tst	r0, #1
   3c8f0:	strb	r3, [r1, r0]!
   3c8f4:	beq	3c938 <flatcc_json_printer_uint32@@Base+0xd4>
   3c8f8:	b	3cab8 <flatcc_json_printer_uint32@@Base+0x254>
   3c8fc:	movw	r0, #16960	; 0x4240
   3c900:	movt	r0, #15
   3c904:	cmp	ip, r0
   3c908:	bcc	3ca94 <flatcc_json_printer_uint32@@Base+0x230>
   3c90c:	mov	r0, #0
   3c910:	strb	r0, [r1, #7]!
   3c914:	mov	r0, #7
   3c918:	b	3cab8 <flatcc_json_printer_uint32@@Base+0x254>
   3c91c:	mov	r0, #1
   3c920:	cmp	ip, #9
   3c924:	movwhi	r0, #2
   3c928:	mov	r3, #0
   3c92c:	tst	r0, #1
   3c930:	strb	r3, [r1, r0]!
   3c934:	bne	3cab8 <flatcc_json_printer_uint32@@Base+0x254>
   3c938:	lsr	r2, r0, #1
   3c93c:	orr	r2, r2, r0, lsl #3
   3c940:	eor	r3, r2, #4
   3c944:	sbfx	r2, r3, #0, #4
   3c948:	cmp	r2, #0
   3c94c:	blt	3ca68 <flatcc_json_printer_uint32@@Base+0x204>
   3c950:	and	r2, r3, #15
   3c954:	add	r3, pc, #0
   3c958:	ldr	pc, [r3, r2, lsl #2]
   3c95c:	andeq	ip, r3, ip, lsr #19
   3c960:	andeq	ip, r3, ip, ror r9
   3c964:	andeq	ip, r3, r8, ror #20
   3c968:	andeq	ip, r3, r8, ror #20
   3c96c:	andeq	ip, r3, r8, ror #20
   3c970:	andeq	ip, r3, ip, lsr sl
   3c974:	andeq	ip, r3, ip, lsl #20
   3c978:	ldrdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   3c97c:	movw	r2, #34079	; 0x851f
   3c980:	movt	r2, #20971	; 0x51eb
   3c984:	umull	r2, r3, ip, r2
   3c988:	lsr	r2, r3, #5
   3c98c:	mov	r3, #100	; 0x64
   3c990:	mls	ip, r2, r3, ip
   3c994:	movw	r3, #61040	; 0xee70
   3c998:	movt	r3, #4
   3c99c:	add	r3, r3, ip, lsl #1
   3c9a0:	mov	ip, r2
   3c9a4:	ldrh	r3, [r3]
   3c9a8:	strh	r3, [r1, #-2]!
   3c9ac:	movw	r2, #34079	; 0x851f
   3c9b0:	movt	r2, #20971	; 0x51eb
   3c9b4:	umull	r2, r3, ip, r2
   3c9b8:	lsr	r2, r3, #5
   3c9bc:	mov	r3, #100	; 0x64
   3c9c0:	mls	ip, r2, r3, ip
   3c9c4:	movw	r3, #61040	; 0xee70
   3c9c8:	movt	r3, #4
   3c9cc:	add	r3, r3, ip, lsl #1
   3c9d0:	mov	ip, r2
   3c9d4:	ldrh	r3, [r3]
   3c9d8:	strh	r3, [r1, #-2]!
   3c9dc:	movw	r2, #34079	; 0x851f
   3c9e0:	movt	r2, #20971	; 0x51eb
   3c9e4:	umull	r2, r3, ip, r2
   3c9e8:	lsr	r2, r3, #5
   3c9ec:	mov	r3, #100	; 0x64
   3c9f0:	mls	ip, r2, r3, ip
   3c9f4:	movw	r3, #61040	; 0xee70
   3c9f8:	movt	r3, #4
   3c9fc:	add	r3, r3, ip, lsl #1
   3ca00:	mov	ip, r2
   3ca04:	ldrh	r3, [r3]
   3ca08:	strh	r3, [r1, #-2]!
   3ca0c:	movw	r2, #34079	; 0x851f
   3ca10:	movt	r2, #20971	; 0x51eb
   3ca14:	umull	r2, r3, ip, r2
   3ca18:	lsr	r2, r3, #5
   3ca1c:	mov	r3, #100	; 0x64
   3ca20:	mls	ip, r2, r3, ip
   3ca24:	movw	r3, #61040	; 0xee70
   3ca28:	movt	r3, #4
   3ca2c:	add	r3, r3, ip, lsl #1
   3ca30:	mov	ip, r2
   3ca34:	ldrh	r3, [r3]
   3ca38:	strh	r3, [r1, #-2]!
   3ca3c:	movw	r2, #34079	; 0x851f
   3ca40:	movt	r2, #20971	; 0x51eb
   3ca44:	umull	r2, r3, ip, r2
   3ca48:	lsr	r2, r3, #5
   3ca4c:	mov	r3, #100	; 0x64
   3ca50:	mls	r2, r2, r3, ip
   3ca54:	movw	r3, #61040	; 0xee70
   3ca58:	movt	r3, #4
   3ca5c:	add	r2, r3, r2, lsl #1
   3ca60:	ldrh	r2, [r2]
   3ca64:	strh	r2, [r1, #-2]
   3ca68:	bx	lr
   3ca6c:	movw	r3, #57599	; 0xe0ff
   3ca70:	mov	r0, #8
   3ca74:	movt	r3, #1525	; 0x5f5
   3ca78:	cmp	ip, r3
   3ca7c:	movwhi	r0, #9
   3ca80:	mov	r3, #0
   3ca84:	tst	r0, #1
   3ca88:	strb	r3, [r1, r0]!
   3ca8c:	beq	3c938 <flatcc_json_printer_uint32@@Base+0xd4>
   3ca90:	b	3cab8 <flatcc_json_printer_uint32@@Base+0x254>
   3ca94:	movw	r3, #34463	; 0x869f
   3ca98:	mov	r0, #5
   3ca9c:	movt	r3, #1
   3caa0:	cmp	ip, r3
   3caa4:	movwhi	r0, #6
   3caa8:	mov	r3, #0
   3caac:	tst	r0, #1
   3cab0:	strb	r3, [r1, r0]!
   3cab4:	beq	3c938 <flatcc_json_printer_uint32@@Base+0xd4>
   3cab8:	add	r3, r0, #7
   3cabc:	ubfx	r2, r3, #1, #3
   3cac0:	orr	r3, r2, r3, lsl #3
   3cac4:	sbfx	r2, r3, #0, #4
   3cac8:	cmp	r2, #0
   3cacc:	bxlt	lr
   3cad0:	and	r2, r3, #15
   3cad4:	add	r3, pc, #0
   3cad8:	ldr	pc, [r3, r2, lsl #2]
   3cadc:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   3cae0:	andeq	ip, r3, r8, ror #20
   3cae4:	andeq	ip, r3, r8, ror #20
   3cae8:	andeq	ip, r3, r8, ror #20
   3caec:			; <UNDEFINED> instruction: 0x0003cbbc
   3caf0:	andeq	ip, r3, ip, lsl #23
   3caf4:	andeq	ip, r3, ip, asr fp
   3caf8:	andeq	ip, r3, ip, lsr #22
   3cafc:	movw	r2, #34079	; 0x851f
   3cb00:	movt	r2, #20971	; 0x51eb
   3cb04:	umull	r2, r3, ip, r2
   3cb08:	lsr	r2, r3, #5
   3cb0c:	mov	r3, #100	; 0x64
   3cb10:	mls	ip, r2, r3, ip
   3cb14:	movw	r3, #61040	; 0xee70
   3cb18:	movt	r3, #4
   3cb1c:	add	r3, r3, ip, lsl #1
   3cb20:	mov	ip, r2
   3cb24:	ldrh	r3, [r3]
   3cb28:	strh	r3, [r1, #-2]!
   3cb2c:	movw	r2, #34079	; 0x851f
   3cb30:	movt	r2, #20971	; 0x51eb
   3cb34:	umull	r2, r3, ip, r2
   3cb38:	lsr	r2, r3, #5
   3cb3c:	mov	r3, #100	; 0x64
   3cb40:	mls	ip, r2, r3, ip
   3cb44:	movw	r3, #61040	; 0xee70
   3cb48:	movt	r3, #4
   3cb4c:	add	r3, r3, ip, lsl #1
   3cb50:	mov	ip, r2
   3cb54:	ldrh	r3, [r3]
   3cb58:	strh	r3, [r1, #-2]!
   3cb5c:	movw	r2, #34079	; 0x851f
   3cb60:	movt	r2, #20971	; 0x51eb
   3cb64:	umull	r2, r3, ip, r2
   3cb68:	lsr	r2, r3, #5
   3cb6c:	mov	r3, #100	; 0x64
   3cb70:	mls	ip, r2, r3, ip
   3cb74:	movw	r3, #61040	; 0xee70
   3cb78:	movt	r3, #4
   3cb7c:	add	r3, r3, ip, lsl #1
   3cb80:	mov	ip, r2
   3cb84:	ldrh	r3, [r3]
   3cb88:	strh	r3, [r1, #-2]!
   3cb8c:	movw	r2, #34079	; 0x851f
   3cb90:	movt	r2, #20971	; 0x51eb
   3cb94:	umull	r2, r3, ip, r2
   3cb98:	lsr	r2, r3, #5
   3cb9c:	mov	r3, #100	; 0x64
   3cba0:	mls	ip, r2, r3, ip
   3cba4:	movw	r3, #61040	; 0xee70
   3cba8:	movt	r3, #4
   3cbac:	add	r3, r3, ip, lsl #1
   3cbb0:	mov	ip, r2
   3cbb4:	ldrh	r3, [r3]
   3cbb8:	strh	r3, [r1, #-2]!
   3cbbc:	add	r2, ip, #48	; 0x30
   3cbc0:	strb	r2, [r1, #-1]
   3cbc4:	bx	lr

0003cbc8 <flatcc_json_printer_uint64@@Base>:
   3cbc8:	push	{r4, sl, fp, lr}
   3cbcc:	add	fp, sp, #8
   3cbd0:	mov	r1, r3
   3cbd4:	mov	r3, r2
   3cbd8:	ldr	r2, [r0, #20]
   3cbdc:	mov	r4, r0
   3cbe0:	mov	r0, r3
   3cbe4:	bl	3cbf8 <flatcc_json_printer_uint64@@Base+0x30>
   3cbe8:	ldr	r1, [r4, #20]
   3cbec:	add	r0, r1, r0
   3cbf0:	str	r0, [r4, #20]
   3cbf4:	pop	{r4, sl, fp, pc}
   3cbf8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3cbfc:	add	fp, sp, #24
   3cc00:	mov	r7, r0
   3cc04:	movw	r0, #51711	; 0xc9ff
   3cc08:	mov	r4, r2
   3cc0c:	movt	r0, #15258	; 0x3b9a
   3cc10:	subs	r0, r0, r7
   3cc14:	rscs	r0, r1, #0
   3cc18:	bcc	3cc2c <flatcc_json_printer_uint64@@Base+0x64>
   3cc1c:	mov	r0, r7
   3cc20:	mov	r1, r4
   3cc24:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   3cc28:	b	3c890 <flatcc_json_printer_uint32@@Base+0x2c>
   3cc2c:	mov	r6, r1
   3cc30:	movw	r1, #40960	; 0xa000
   3cc34:	movw	r0, #2328	; 0x918
   3cc38:	movt	r1, #20082	; 0x4e72
   3cc3c:	subs	r1, r7, r1
   3cc40:	sbcs	r0, r6, r0
   3cc44:	bcc	3ccb4 <flatcc_json_printer_uint64@@Base+0xec>
   3cc48:	movw	r1, #0
   3cc4c:	movw	r0, #34546	; 0x86f2
   3cc50:	movt	r1, #28609	; 0x6fc1
   3cc54:	movt	r0, #35	; 0x23
   3cc58:	subs	r1, r7, r1
   3cc5c:	sbcs	r0, r6, r0
   3cc60:	bcc	3ce68 <flatcc_json_printer_uint64@@Base+0x2a0>
   3cc64:	movw	r1, #0
   3cc68:	movw	r0, #46771	; 0xb6b3
   3cc6c:	movt	r1, #42852	; 0xa764
   3cc70:	movt	r0, #3552	; 0xde0
   3cc74:	subs	r1, r7, r1
   3cc78:	sbcs	r0, r6, r0
   3cc7c:	bcc	3d0f8 <flatcc_json_printer_uint64@@Base+0x530>
   3cc80:	movw	r1, #65535	; 0xffff
   3cc84:	movw	r0, #8964	; 0x2304
   3cc88:	mov	r8, #19
   3cc8c:	movt	r1, #35303	; 0x89e7
   3cc90:	movt	r0, #35527	; 0x8ac7
   3cc94:	subs	r1, r1, r7
   3cc98:	sbcs	r0, r0, r6
   3cc9c:	movwcc	r8, #20
   3cca0:	mov	r0, #0
   3cca4:	tst	r8, #1
   3cca8:	strb	r0, [r4, r8]!
   3ccac:	bne	3ccf0 <flatcc_json_printer_uint64@@Base+0x128>
   3ccb0:	b	3cebc <flatcc_json_printer_uint64@@Base+0x2f4>
   3ccb4:	movw	r0, #59392	; 0xe800
   3ccb8:	movt	r0, #18550	; 0x4876
   3ccbc:	subs	r0, r7, r0
   3ccc0:	sbcs	r0, r6, #23
   3ccc4:	bcc	3ce94 <flatcc_json_printer_uint64@@Base+0x2cc>
   3ccc8:	movw	r0, #4095	; 0xfff
   3cccc:	mov	r8, #12
   3ccd0:	movt	r0, #54437	; 0xd4a5
   3ccd4:	subs	r0, r0, r7
   3ccd8:	rscs	r0, r6, #232	; 0xe8
   3ccdc:	movwcc	r8, #13
   3cce0:	mov	r0, #0
   3cce4:	tst	r8, #1
   3cce8:	strb	r0, [r4, r8]!
   3ccec:	beq	3cebc <flatcc_json_printer_uint64@@Base+0x2f4>
   3ccf0:	sub	r0, r8, #11
   3ccf4:	cmp	r0, #8
   3ccf8:	bhi	3d04c <flatcc_json_printer_uint64@@Base+0x484>
   3ccfc:	add	r1, pc, #0
   3cd00:	ldr	pc, [r1, r0, lsl #2]
   3cd04:	andeq	ip, r3, r0, lsl #28
   3cd08:	andeq	sp, r3, ip, asr #32
   3cd0c:	andeq	ip, r3, r8, asr #27
   3cd10:	andeq	sp, r3, ip, asr #32
   3cd14:	muleq	r3, r0, sp
   3cd18:	andeq	sp, r3, ip, asr #32
   3cd1c:	andeq	ip, r3, r8, asr sp
   3cd20:	andeq	sp, r3, ip, asr #32
   3cd24:	andeq	ip, r3, r8, lsr #26
   3cd28:	mov	r0, r7
   3cd2c:	mov	r1, r6
   3cd30:	mov	r2, #100	; 0x64
   3cd34:	mov	r3, #0
   3cd38:	bl	4856c <flatcc_json_printer_clear@@Base+0x7a8>
   3cd3c:	mov	r7, r0
   3cd40:	movw	r0, #61040	; 0xee70
   3cd44:	mov	r6, r1
   3cd48:	movt	r0, #4
   3cd4c:	add	r0, r0, r2, lsl #1
   3cd50:	ldrh	r0, [r0]
   3cd54:	strh	r0, [r4, #-2]!
   3cd58:	mov	r0, r7
   3cd5c:	mov	r1, r6
   3cd60:	mov	r2, #100	; 0x64
   3cd64:	mov	r3, #0
   3cd68:	mov	r5, #100	; 0x64
   3cd6c:	bl	4856c <flatcc_json_printer_clear@@Base+0x7a8>
   3cd70:	movw	r2, #61040	; 0xee70
   3cd74:	mov	r6, r1
   3cd78:	mls	r1, r0, r5, r7
   3cd7c:	mov	r7, r0
   3cd80:	movt	r2, #4
   3cd84:	add	r1, r2, r1, lsl #1
   3cd88:	ldrh	r1, [r1]
   3cd8c:	strh	r1, [r4, #-2]!
   3cd90:	mov	r0, r7
   3cd94:	mov	r1, r6
   3cd98:	mov	r2, #100	; 0x64
   3cd9c:	mov	r3, #0
   3cda0:	mov	r5, #100	; 0x64
   3cda4:	bl	4856c <flatcc_json_printer_clear@@Base+0x7a8>
   3cda8:	movw	r2, #61040	; 0xee70
   3cdac:	mov	r6, r1
   3cdb0:	mls	r1, r0, r5, r7
   3cdb4:	mov	r7, r0
   3cdb8:	movt	r2, #4
   3cdbc:	add	r1, r2, r1, lsl #1
   3cdc0:	ldrh	r1, [r1]
   3cdc4:	strh	r1, [r4, #-2]!
   3cdc8:	mov	r0, r7
   3cdcc:	mov	r1, r6
   3cdd0:	mov	r2, #100	; 0x64
   3cdd4:	mov	r3, #0
   3cdd8:	mov	r5, #100	; 0x64
   3cddc:	bl	4856c <flatcc_json_printer_clear@@Base+0x7a8>
   3cde0:	movw	r2, #61040	; 0xee70
   3cde4:	mov	r6, r1
   3cde8:	mls	r1, r0, r5, r7
   3cdec:	mov	r7, r0
   3cdf0:	movt	r2, #4
   3cdf4:	add	r1, r2, r1, lsl #1
   3cdf8:	ldrh	r1, [r1]
   3cdfc:	strh	r1, [r4, #-2]!
   3ce00:	mov	r0, r7
   3ce04:	mov	r1, r6
   3ce08:	mov	r2, #100	; 0x64
   3ce0c:	mov	r3, #0
   3ce10:	mov	r9, #100	; 0x64
   3ce14:	bl	4856c <flatcc_json_printer_clear@@Base+0x7a8>
   3ce18:	mov	r2, #10
   3ce1c:	mov	r3, #0
   3ce20:	mov	r5, r0
   3ce24:	bl	4856c <flatcc_json_printer_clear@@Base+0x7a8>
   3ce28:	orr	r0, r2, #48	; 0x30
   3ce2c:	movw	r1, #61040	; 0xee70
   3ce30:	mov	r2, #1000	; 0x3e8
   3ce34:	mov	r3, #0
   3ce38:	strb	r0, [r4, #-3]!
   3ce3c:	mls	r0, r5, r9, r7
   3ce40:	movt	r1, #4
   3ce44:	add	r0, r1, r0, lsl #1
   3ce48:	mov	r1, r6
   3ce4c:	ldrh	r0, [r0]
   3ce50:	strh	r0, [r4, #1]
   3ce54:	mov	r0, r7
   3ce58:	bl	4856c <flatcc_json_printer_clear@@Base+0x7a8>
   3ce5c:	mov	r7, r0
   3ce60:	mov	r6, r1
   3ce64:	b	3d04c <flatcc_json_printer_uint64@@Base+0x484>
   3ce68:	movw	r1, #32768	; 0x8000
   3ce6c:	movw	r0, #36222	; 0x8d7e
   3ce70:	movt	r1, #42182	; 0xa4c6
   3ce74:	movt	r0, #3
   3ce78:	subs	r1, r7, r1
   3ce7c:	sbcs	r0, r6, r0
   3ce80:	bcc	3d12c <flatcc_json_printer_uint64@@Base+0x564>
   3ce84:	mov	r0, #0
   3ce88:	mov	r8, #16
   3ce8c:	strb	r0, [r4, #16]!
   3ce90:	b	3cf6c <flatcc_json_printer_uint64@@Base+0x3a4>
   3ce94:	movw	r0, #58367	; 0xe3ff
   3ce98:	mov	r8, #10
   3ce9c:	movt	r0, #21515	; 0x540b
   3cea0:	subs	r0, r0, r7
   3cea4:	rscs	r0, r6, #2
   3cea8:	movwcc	r8, #11
   3ceac:	mov	r0, #0
   3ceb0:	tst	r8, #1
   3ceb4:	strb	r0, [r4, r8]!
   3ceb8:	bne	3ccf0 <flatcc_json_printer_uint64@@Base+0x128>
   3cebc:	sub	r0, r8, #10
   3cec0:	cmp	r0, #10
   3cec4:	bhi	3d04c <flatcc_json_printer_uint64@@Base+0x484>
   3cec8:	add	r1, pc, #0
   3cecc:	ldr	pc, [r1, r0, lsl #2]
   3ced0:	andeq	sp, r3, r4, lsl r0
   3ced4:	andeq	sp, r3, ip, asr #32
   3ced8:	ldrdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   3cedc:	andeq	sp, r3, ip, asr #32
   3cee0:	andeq	ip, r3, r4, lsr #31
   3cee4:	andeq	sp, r3, ip, asr #32
   3cee8:	andeq	ip, r3, ip, ror #30
   3ceec:	andeq	sp, r3, ip, asr #32
   3cef0:	andeq	ip, r3, r4, lsr pc
   3cef4:	andeq	sp, r3, ip, asr #32
   3cef8:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   3cefc:	mov	r0, r7
   3cf00:	mov	r1, r6
   3cf04:	mov	r2, #100	; 0x64
   3cf08:	mov	r3, #0
   3cf0c:	mov	r5, #100	; 0x64
   3cf10:	bl	4856c <flatcc_json_printer_clear@@Base+0x7a8>
   3cf14:	movw	r2, #61040	; 0xee70
   3cf18:	mov	r6, r1
   3cf1c:	mls	r1, r0, r5, r7
   3cf20:	mov	r7, r0
   3cf24:	movt	r2, #4
   3cf28:	add	r1, r2, r1, lsl #1
   3cf2c:	ldrh	r1, [r1]
   3cf30:	strh	r1, [r4, #-2]!
   3cf34:	mov	r0, r7
   3cf38:	mov	r1, r6
   3cf3c:	mov	r2, #100	; 0x64
   3cf40:	mov	r3, #0
   3cf44:	mov	r5, #100	; 0x64
   3cf48:	bl	4856c <flatcc_json_printer_clear@@Base+0x7a8>
   3cf4c:	movw	r2, #61040	; 0xee70
   3cf50:	mov	r6, r1
   3cf54:	mls	r1, r0, r5, r7
   3cf58:	mov	r7, r0
   3cf5c:	movt	r2, #4
   3cf60:	add	r1, r2, r1, lsl #1
   3cf64:	ldrh	r1, [r1]
   3cf68:	strh	r1, [r4, #-2]!
   3cf6c:	mov	r0, r7
   3cf70:	mov	r1, r6
   3cf74:	mov	r2, #100	; 0x64
   3cf78:	mov	r3, #0
   3cf7c:	mov	r5, #100	; 0x64
   3cf80:	bl	4856c <flatcc_json_printer_clear@@Base+0x7a8>
   3cf84:	movw	r2, #61040	; 0xee70
   3cf88:	mov	r6, r1
   3cf8c:	mls	r1, r0, r5, r7
   3cf90:	mov	r7, r0
   3cf94:	movt	r2, #4
   3cf98:	add	r1, r2, r1, lsl #1
   3cf9c:	ldrh	r1, [r1]
   3cfa0:	strh	r1, [r4, #-2]!
   3cfa4:	mov	r0, r7
   3cfa8:	mov	r1, r6
   3cfac:	mov	r2, #100	; 0x64
   3cfb0:	mov	r3, #0
   3cfb4:	mov	r5, #100	; 0x64
   3cfb8:	bl	4856c <flatcc_json_printer_clear@@Base+0x7a8>
   3cfbc:	movw	r2, #61040	; 0xee70
   3cfc0:	mov	r6, r1
   3cfc4:	mls	r1, r0, r5, r7
   3cfc8:	mov	r7, r0
   3cfcc:	movt	r2, #4
   3cfd0:	add	r1, r2, r1, lsl #1
   3cfd4:	ldrh	r1, [r1]
   3cfd8:	strh	r1, [r4, #-2]!
   3cfdc:	mov	r0, r7
   3cfe0:	mov	r1, r6
   3cfe4:	mov	r2, #100	; 0x64
   3cfe8:	mov	r3, #0
   3cfec:	mov	r5, #100	; 0x64
   3cff0:	bl	4856c <flatcc_json_printer_clear@@Base+0x7a8>
   3cff4:	movw	r2, #61040	; 0xee70
   3cff8:	mov	r6, r1
   3cffc:	mls	r1, r0, r5, r7
   3d000:	mov	r7, r0
   3d004:	movt	r2, #4
   3d008:	add	r1, r2, r1, lsl #1
   3d00c:	ldrh	r1, [r1]
   3d010:	strh	r1, [r4, #-2]!
   3d014:	mov	r0, r7
   3d018:	mov	r1, r6
   3d01c:	mov	r2, #100	; 0x64
   3d020:	mov	r3, #0
   3d024:	mov	r5, #100	; 0x64
   3d028:	bl	4856c <flatcc_json_printer_clear@@Base+0x7a8>
   3d02c:	movw	r2, #61040	; 0xee70
   3d030:	mov	r6, r1
   3d034:	mls	r1, r0, r5, r7
   3d038:	mov	r7, r0
   3d03c:	movt	r2, #4
   3d040:	add	r1, r2, r1, lsl #1
   3d044:	ldrh	r1, [r1]
   3d048:	strh	r1, [r4, #-2]!
   3d04c:	mov	r0, r7
   3d050:	mov	r1, r6
   3d054:	mov	r2, #100	; 0x64
   3d058:	mov	r3, #0
   3d05c:	mov	r5, #100	; 0x64
   3d060:	bl	4856c <flatcc_json_printer_clear@@Base+0x7a8>
   3d064:	mls	r2, r0, r5, r7
   3d068:	movw	r5, #61040	; 0xee70
   3d06c:	mov	r3, #0
   3d070:	movt	r5, #4
   3d074:	add	r2, r5, r2, lsl #1
   3d078:	ldrh	r2, [r2]
   3d07c:	strh	r2, [r4, #-2]
   3d080:	mov	r2, #100	; 0x64
   3d084:	bl	4856c <flatcc_json_printer_clear@@Base+0x7a8>
   3d088:	add	r0, r5, r2, lsl #1
   3d08c:	mov	r1, r6
   3d090:	movw	r2, #10000	; 0x2710
   3d094:	mov	r3, #0
   3d098:	ldrh	r0, [r0]
   3d09c:	strh	r0, [r4, #-4]
   3d0a0:	mov	r0, r7
   3d0a4:	bl	4856c <flatcc_json_printer_clear@@Base+0x7a8>
   3d0a8:	mov	r2, #100	; 0x64
   3d0ac:	mov	r3, #0
   3d0b0:	bl	4856c <flatcc_json_printer_clear@@Base+0x7a8>
   3d0b4:	add	r0, r5, r2, lsl #1
   3d0b8:	movw	r2, #16960	; 0x4240
   3d0bc:	mov	r1, r6
   3d0c0:	mov	r3, #0
   3d0c4:	ldrh	r0, [r0]
   3d0c8:	movt	r2, #15
   3d0cc:	strh	r0, [r4, #-6]
   3d0d0:	mov	r0, r7
   3d0d4:	bl	4856c <flatcc_json_printer_clear@@Base+0x7a8>
   3d0d8:	mov	r2, #100	; 0x64
   3d0dc:	mov	r3, #0
   3d0e0:	bl	4856c <flatcc_json_printer_clear@@Base+0x7a8>
   3d0e4:	add	r0, r5, r2, lsl #1
   3d0e8:	ldrh	r0, [r0]
   3d0ec:	strh	r0, [r4, #-8]
   3d0f0:	mov	r0, r8
   3d0f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3d0f8:	movw	r1, #65535	; 0xffff
   3d0fc:	movw	r0, #17784	; 0x4578
   3d100:	mov	r8, #17
   3d104:	movt	r1, #23945	; 0x5d89
   3d108:	movt	r0, #355	; 0x163
   3d10c:	subs	r1, r1, r7
   3d110:	sbcs	r0, r0, r6
   3d114:	movwcc	r8, #18
   3d118:	mov	r0, #0
   3d11c:	tst	r8, #1
   3d120:	strb	r0, [r4, r8]!
   3d124:	bne	3ccf0 <flatcc_json_printer_uint64@@Base+0x128>
   3d128:	b	3cebc <flatcc_json_printer_uint64@@Base+0x2f4>
   3d12c:	movw	r1, #16383	; 0x3fff
   3d130:	movw	r0, #23283	; 0x5af3
   3d134:	mov	r8, #14
   3d138:	movt	r1, #4218	; 0x107a
   3d13c:	subs	r1, r1, r7
   3d140:	sbcs	r0, r0, r6
   3d144:	movwcc	r8, #15
   3d148:	mov	r0, #0
   3d14c:	tst	r8, #1
   3d150:	strb	r0, [r4, r8]!
   3d154:	bne	3ccf0 <flatcc_json_printer_uint64@@Base+0x128>
   3d158:	b	3cebc <flatcc_json_printer_uint64@@Base+0x2f4>

0003d15c <flatcc_json_printer_int8@@Base>:
   3d15c:	push	{r4, sl, fp, lr}
   3d160:	add	fp, sp, #8
   3d164:	ubfx	ip, r1, #7, #1
   3d168:	ldr	r4, [r0, #20]
   3d16c:	cmn	r1, #1
   3d170:	movle	r2, #45	; 0x2d
   3d174:	rsble	r1, r1, #0
   3d178:	strble	r2, [r4], #1
   3d17c:	uxtb	r2, r1
   3d180:	cmp	r2, #100	; 0x64
   3d184:	bcc	3d1d0 <flatcc_json_printer_int8@@Base+0x74>
   3d188:	mov	r1, #0
   3d18c:	strb	r1, [r4, #3]
   3d190:	movw	r1, #34079	; 0x851f
   3d194:	movt	r1, #20971	; 0x51eb
   3d198:	umull	r1, lr, r2, r1
   3d19c:	mov	r1, #48	; 0x30
   3d1a0:	orr	r1, r1, lr, lsr #5
   3d1a4:	lsr	lr, lr, #5
   3d1a8:	strb	r1, [r4]
   3d1ac:	mov	r1, #100	; 0x64
   3d1b0:	mls	r1, lr, r1, r2
   3d1b4:	movw	r2, #61040	; 0xee70
   3d1b8:	movt	r2, #4
   3d1bc:	add	r1, r2, r1, lsl #1
   3d1c0:	ldrh	r1, [r1]
   3d1c4:	strh	r1, [r4, #1]
   3d1c8:	mov	r1, #3
   3d1cc:	b	3d228 <flatcc_json_printer_int8@@Base+0xcc>
   3d1d0:	cmp	r2, #10
   3d1d4:	bcc	3d214 <flatcc_json_printer_int8@@Base+0xb8>
   3d1d8:	mov	r1, #0
   3d1dc:	strb	r1, [r4, #2]
   3d1e0:	movw	r1, #34079	; 0x851f
   3d1e4:	movt	r1, #20971	; 0x51eb
   3d1e8:	umull	r1, r3, r2, r1
   3d1ec:	lsr	r1, r3, #5
   3d1f0:	mov	r3, #100	; 0x64
   3d1f4:	mls	r1, r1, r3, r2
   3d1f8:	movw	r2, #61040	; 0xee70
   3d1fc:	movt	r2, #4
   3d200:	add	r1, r2, r1, lsl #1
   3d204:	ldrh	r1, [r1]
   3d208:	strh	r1, [r4]
   3d20c:	mov	r1, #2
   3d210:	b	3d228 <flatcc_json_printer_int8@@Base+0xcc>
   3d214:	mov	r2, #0
   3d218:	add	r1, r1, #48	; 0x30
   3d21c:	strb	r2, [r4, #1]
   3d220:	strb	r1, [r4]
   3d224:	mov	r1, #1
   3d228:	ldr	r2, [r0, #20]
   3d22c:	add	r1, r1, ip
   3d230:	add	r1, r2, r1
   3d234:	str	r1, [r0, #20]
   3d238:	pop	{r4, sl, fp, pc}

0003d23c <flatcc_json_printer_int16@@Base>:
   3d23c:	push	{r4, r5, fp, lr}
   3d240:	add	fp, sp, #8
   3d244:	ubfx	r5, r1, #15, #1
   3d248:	ldr	r2, [r0, #20]
   3d24c:	cmn	r1, #1
   3d250:	mov	r4, r0
   3d254:	movle	r0, #45	; 0x2d
   3d258:	rsble	r1, r1, #0
   3d25c:	strble	r0, [r2], #1
   3d260:	uxth	r0, r1
   3d264:	mov	r1, r2
   3d268:	bl	3c6f0 <flatcc_json_printer_uint16@@Base+0x2c>
   3d26c:	ldr	r1, [r4, #20]
   3d270:	add	r0, r0, r5
   3d274:	add	r0, r1, r0
   3d278:	str	r0, [r4, #20]
   3d27c:	pop	{r4, r5, fp, pc}

0003d280 <flatcc_json_printer_int32@@Base>:
   3d280:	push	{r4, r5, fp, lr}
   3d284:	add	fp, sp, #8
   3d288:	mov	r2, r1
   3d28c:	lsr	r5, r1, #31
   3d290:	ldr	r1, [r0, #20]
   3d294:	mov	r4, r0
   3d298:	cmn	r2, #1
   3d29c:	movle	r0, #45	; 0x2d
   3d2a0:	rsble	r2, r2, #0
   3d2a4:	strble	r0, [r1], #1
   3d2a8:	mov	r0, r2
   3d2ac:	bl	3c890 <flatcc_json_printer_uint32@@Base+0x2c>
   3d2b0:	ldr	r1, [r4, #20]
   3d2b4:	add	r0, r0, r5
   3d2b8:	add	r0, r1, r0
   3d2bc:	str	r0, [r4, #20]
   3d2c0:	pop	{r4, r5, fp, pc}

0003d2c4 <flatcc_json_printer_int64@@Base>:
   3d2c4:	push	{r4, r5, fp, lr}
   3d2c8:	add	fp, sp, #8
   3d2cc:	mov	r1, r3
   3d2d0:	mov	r3, r2
   3d2d4:	ldr	r2, [r0, #20]
   3d2d8:	mov	r4, r0
   3d2dc:	lsr	r5, r1, #31
   3d2e0:	cmn	r1, #1
   3d2e4:	bgt	3d2f8 <flatcc_json_printer_int64@@Base+0x34>
   3d2e8:	mov	r0, #45	; 0x2d
   3d2ec:	rsbs	r3, r3, #0
   3d2f0:	strb	r0, [r2], #1
   3d2f4:	rsc	r1, r1, #0
   3d2f8:	mov	r0, r3
   3d2fc:	bl	3cbf8 <flatcc_json_printer_uint64@@Base+0x30>
   3d300:	ldr	r1, [r4, #20]
   3d304:	add	r0, r0, r5
   3d308:	add	r0, r1, r0
   3d30c:	str	r0, [r4, #20]
   3d310:	pop	{r4, r5, fp, pc}

0003d314 <flatcc_json_printer_float@@Base>:
   3d314:	push	{r4, sl, fp, lr}
   3d318:	add	fp, sp, #8
   3d31c:	mov	r4, r0
   3d320:	ldr	r0, [r0, #20]
   3d324:	vcvt.f64.f32	d0, s0
   3d328:	bl	3b290 <flatcc_json_printer_fmt_float@@Base+0x8>
   3d32c:	ldr	r1, [r4, #20]
   3d330:	add	r0, r1, r0
   3d334:	str	r0, [r4, #20]
   3d338:	pop	{r4, sl, fp, pc}

0003d33c <flatcc_json_printer_double@@Base>:
   3d33c:	push	{r4, sl, fp, lr}
   3d340:	add	fp, sp, #8
   3d344:	mov	r4, r0
   3d348:	ldr	r0, [r0, #20]
   3d34c:	bl	3b290 <flatcc_json_printer_fmt_float@@Base+0x8>
   3d350:	ldr	r1, [r4, #20]
   3d354:	add	r0, r1, r0
   3d358:	str	r0, [r4, #20]
   3d35c:	pop	{r4, sl, fp, pc}

0003d360 <flatcc_json_printer_enum@@Base>:
   3d360:	push	{r4, r5, r6, r7, fp, lr}
   3d364:	add	fp, sp, #16
   3d368:	mov	r4, r0
   3d36c:	ldr	r0, [r0, #20]
   3d370:	mov	r6, r1
   3d374:	mov	r1, #34	; 0x22
   3d378:	mov	r5, r2
   3d37c:	strb	r1, [r0]
   3d380:	ldrb	r2, [r4, #26]
   3d384:	ldr	r0, [r4, #20]
   3d388:	ldr	r1, [r4, #16]
   3d38c:	cmp	r2, #0
   3d390:	addeq	r0, r0, #1
   3d394:	add	r2, r0, r5
   3d398:	str	r0, [r4, #20]
   3d39c:	cmp	r2, r1
   3d3a0:	bcc	3d414 <flatcc_json_printer_enum@@Base+0xb4>
   3d3a4:	cmp	r0, r1
   3d3a8:	bcc	3d3c4 <flatcc_json_printer_enum@@Base+0x64>
   3d3ac:	ldr	r2, [r4, #44]	; 0x2c
   3d3b0:	mov	r0, r4
   3d3b4:	mov	r1, #0
   3d3b8:	blx	r2
   3d3bc:	ldr	r1, [r4, #16]
   3d3c0:	ldr	r0, [r4, #20]
   3d3c4:	sub	r7, r1, r0
   3d3c8:	cmp	r7, r5
   3d3cc:	bcs	3d414 <flatcc_json_printer_enum@@Base+0xb4>
   3d3d0:	mov	r1, r6
   3d3d4:	mov	r2, r7
   3d3d8:	bl	14e60 <memcpy@plt>
   3d3dc:	ldr	r0, [r4, #20]
   3d3e0:	ldr	r2, [r4, #44]	; 0x2c
   3d3e4:	mov	r1, #0
   3d3e8:	add	r0, r0, r7
   3d3ec:	str	r0, [r4, #20]
   3d3f0:	mov	r0, r4
   3d3f4:	blx	r2
   3d3f8:	ldr	r1, [r4, #16]
   3d3fc:	ldr	r0, [r4, #20]
   3d400:	sub	r5, r5, r7
   3d404:	add	r6, r6, r7
   3d408:	sub	r7, r1, r0
   3d40c:	cmp	r5, r7
   3d410:	bhi	3d3d0 <flatcc_json_printer_enum@@Base+0x70>
   3d414:	mov	r1, r6
   3d418:	mov	r2, r5
   3d41c:	bl	14e60 <memcpy@plt>
   3d420:	ldr	r0, [r4, #20]
   3d424:	add	r1, r0, r5
   3d428:	str	r1, [r4, #20]
   3d42c:	mov	r1, #34	; 0x22
   3d430:	strb	r1, [r0, r5]
   3d434:	ldrb	r0, [r4, #26]
   3d438:	ldr	r1, [r4, #20]
   3d43c:	cmp	r0, #0
   3d440:	addeq	r1, r1, #1
   3d444:	str	r1, [r4, #20]
   3d448:	pop	{r4, r5, r6, r7, fp, pc}

0003d44c <flatcc_json_printer_delimit_enum_flags@@Base>:
   3d44c:	ldrb	ip, [r0, #26]
   3d450:	ldr	r3, [r0, #20]
   3d454:	mov	r2, #34	; 0x22
   3d458:	cmp	r1, #0
   3d45c:	movwne	r1, #1
   3d460:	strb	r2, [r3]
   3d464:	clz	r2, ip
   3d468:	lsr	r2, r2, #5
   3d46c:	orr	r1, r1, r2
   3d470:	ldr	r2, [r0, #20]
   3d474:	add	r1, r2, r1
   3d478:	str	r1, [r0, #20]
   3d47c:	bx	lr

0003d480 <flatcc_json_printer_enum_flag@@Base>:
   3d480:	push	{r4, r5, r6, r7, fp, lr}
   3d484:	add	fp, sp, #16
   3d488:	mov	r5, r0
   3d48c:	ldr	r0, [r0, #20]
   3d490:	mov	r6, r2
   3d494:	mov	r2, #32
   3d498:	cmp	r1, #0
   3d49c:	mov	r4, r3
   3d4a0:	strb	r2, [r0]
   3d4a4:	ldr	r0, [r5, #20]
   3d4a8:	ldr	r2, [r5, #16]
   3d4ac:	addgt	r0, r0, #1
   3d4b0:	add	r1, r0, r3
   3d4b4:	str	r0, [r5, #20]
   3d4b8:	cmp	r1, r2
   3d4bc:	bcc	3d530 <flatcc_json_printer_enum_flag@@Base+0xb0>
   3d4c0:	cmp	r0, r2
   3d4c4:	bcc	3d4e0 <flatcc_json_printer_enum_flag@@Base+0x60>
   3d4c8:	ldr	r2, [r5, #44]	; 0x2c
   3d4cc:	mov	r0, r5
   3d4d0:	mov	r1, #0
   3d4d4:	blx	r2
   3d4d8:	ldr	r2, [r5, #16]
   3d4dc:	ldr	r0, [r5, #20]
   3d4e0:	sub	r7, r2, r0
   3d4e4:	cmp	r7, r4
   3d4e8:	bcs	3d530 <flatcc_json_printer_enum_flag@@Base+0xb0>
   3d4ec:	mov	r1, r6
   3d4f0:	mov	r2, r7
   3d4f4:	bl	14e60 <memcpy@plt>
   3d4f8:	ldr	r0, [r5, #20]
   3d4fc:	ldr	r2, [r5, #44]	; 0x2c
   3d500:	mov	r1, #0
   3d504:	add	r0, r0, r7
   3d508:	str	r0, [r5, #20]
   3d50c:	mov	r0, r5
   3d510:	blx	r2
   3d514:	ldr	r1, [r5, #16]
   3d518:	ldr	r0, [r5, #20]
   3d51c:	sub	r4, r4, r7
   3d520:	add	r6, r6, r7
   3d524:	sub	r7, r1, r0
   3d528:	cmp	r4, r7
   3d52c:	bhi	3d4ec <flatcc_json_printer_enum_flag@@Base+0x6c>
   3d530:	mov	r1, r6
   3d534:	mov	r2, r4
   3d538:	bl	14e60 <memcpy@plt>
   3d53c:	ldr	r0, [r5, #20]
   3d540:	add	r0, r0, r4
   3d544:	str	r0, [r5, #20]
   3d548:	pop	{r4, r5, r6, r7, fp, pc}

0003d54c <flatcc_json_printer_string_field@@Base>:
   3d54c:	push	{r4, r5, r6, sl, fp, lr}
   3d550:	add	fp, sp, #16
   3d554:	mov	r4, r0
   3d558:	mov	r0, #4
   3d55c:	add	r0, r0, r2, lsl #1
   3d560:	ldr	r2, [r1, #8]
   3d564:	cmp	r0, r2
   3d568:	popge	{r4, r5, r6, sl, fp, pc}
   3d56c:	ldr	r2, [r1, #4]
   3d570:	add	r0, r2, r0
   3d574:	ldrh	r0, [r0]
   3d578:	cmp	r0, #0
   3d57c:	ldrne	r2, [r1]
   3d580:	addsne	r6, r2, r0
   3d584:	bne	3d58c <flatcc_json_printer_string_field@@Base+0x40>
   3d588:	pop	{r4, r5, r6, sl, fp, pc}
   3d58c:	ldr	r0, [r1, #16]
   3d590:	ldr	r2, [fp, #8]
   3d594:	add	r5, r0, #1
   3d598:	cmp	r0, #0
   3d59c:	str	r5, [r1, #16]
   3d5a0:	ldrne	r0, [r4, #20]
   3d5a4:	addne	r1, r0, #1
   3d5a8:	strne	r1, [r4, #20]
   3d5ac:	movne	r1, #44	; 0x2c
   3d5b0:	strbne	r1, [r0]
   3d5b4:	mov	r0, r4
   3d5b8:	mov	r1, r3
   3d5bc:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3d5c0:	ldr	r0, [r6]
   3d5c4:	ldr	r2, [r6, r0]!
   3d5c8:	mov	r0, r4
   3d5cc:	add	r1, r6, #4
   3d5d0:	pop	{r4, r5, r6, sl, fp, lr}
   3d5d4:	b	3c11c <flatcc_json_printer_string@@Base+0x4>
   3d5d8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3d5dc:	add	fp, sp, #24
   3d5e0:	mov	r4, r0
   3d5e4:	mov	r6, r1
   3d5e8:	ldr	r0, [r0, #20]
   3d5ec:	mov	r8, r2
   3d5f0:	ldrb	r1, [r4, #25]
   3d5f4:	cmp	r1, #0
   3d5f8:	beq	3d6b8 <flatcc_json_printer_string_field@@Base+0x16c>
   3d5fc:	add	r1, r0, #1
   3d600:	mov	r9, r4
   3d604:	str	r1, [r4, #20]
   3d608:	mov	r1, #10
   3d60c:	strb	r1, [r0]
   3d610:	ldr	r1, [r9, #16]!
   3d614:	ldr	r0, [r4, #20]
   3d618:	ldrb	r2, [r9, #9]
   3d61c:	ldr	r3, [r9, #16]
   3d620:	mla	r5, r3, r2, r0
   3d624:	mul	r7, r3, r2
   3d628:	cmp	r5, r1
   3d62c:	bls	3d69c <flatcc_json_printer_string_field@@Base+0x150>
   3d630:	cmp	r0, r1
   3d634:	bcc	3d650 <flatcc_json_printer_string_field@@Base+0x104>
   3d638:	ldr	r2, [r4, #44]	; 0x2c
   3d63c:	mov	r0, r4
   3d640:	mov	r1, #0
   3d644:	blx	r2
   3d648:	ldr	r1, [r4, #16]
   3d64c:	ldr	r0, [r4, #20]
   3d650:	sub	r5, r1, r0
   3d654:	cmp	r5, r7
   3d658:	bcs	3d69c <flatcc_json_printer_string_field@@Base+0x150>
   3d65c:	mov	r1, #32
   3d660:	mov	r2, r5
   3d664:	bl	14ef0 <memset@plt>
   3d668:	ldr	r0, [r4, #20]
   3d66c:	ldr	r2, [r4, #44]	; 0x2c
   3d670:	mov	r1, #0
   3d674:	add	r0, r0, r5
   3d678:	str	r0, [r4, #20]
   3d67c:	mov	r0, r4
   3d680:	blx	r2
   3d684:	ldr	r1, [r4, #16]
   3d688:	ldr	r0, [r4, #20]
   3d68c:	sub	r7, r7, r5
   3d690:	sub	r5, r1, r0
   3d694:	cmp	r7, r5
   3d698:	bhi	3d65c <flatcc_json_printer_string_field@@Base+0x110>
   3d69c:	mov	r1, #32
   3d6a0:	mov	r2, r7
   3d6a4:	bl	14ef0 <memset@plt>
   3d6a8:	ldr	r0, [r4, #20]
   3d6ac:	add	r0, r0, r7
   3d6b0:	str	r0, [r4, #20]
   3d6b4:	b	3d6dc <flatcc_json_printer_string_field@@Base+0x190>
   3d6b8:	mov	r9, r4
   3d6bc:	ldr	r1, [r9, #16]!
   3d6c0:	cmp	r0, r1
   3d6c4:	bcc	3d6dc <flatcc_json_printer_string_field@@Base+0x190>
   3d6c8:	ldr	r2, [r4, #44]	; 0x2c
   3d6cc:	mov	r0, r4
   3d6d0:	mov	r1, #0
   3d6d4:	blx	r2
   3d6d8:	ldr	r0, [r4, #20]
   3d6dc:	mov	r1, #34	; 0x22
   3d6e0:	strb	r1, [r0]
   3d6e4:	ldrb	r2, [r4, #26]
   3d6e8:	ldr	r0, [r4, #20]
   3d6ec:	ldr	r1, [r4, #16]
   3d6f0:	cmp	r2, #0
   3d6f4:	addeq	r0, r0, #1
   3d6f8:	add	r2, r0, r8
   3d6fc:	str	r0, [r4, #20]
   3d700:	cmp	r2, r1
   3d704:	bcc	3d778 <flatcc_json_printer_string_field@@Base+0x22c>
   3d708:	cmp	r0, r1
   3d70c:	bcc	3d728 <flatcc_json_printer_string_field@@Base+0x1dc>
   3d710:	ldr	r2, [r4, #44]	; 0x2c
   3d714:	mov	r0, r4
   3d718:	mov	r1, #0
   3d71c:	blx	r2
   3d720:	ldr	r0, [r4, #20]
   3d724:	ldr	r1, [r9]
   3d728:	sub	r7, r1, r0
   3d72c:	cmp	r7, r8
   3d730:	bcs	3d778 <flatcc_json_printer_string_field@@Base+0x22c>
   3d734:	mov	r1, r6
   3d738:	mov	r2, r7
   3d73c:	bl	14e60 <memcpy@plt>
   3d740:	ldr	r0, [r4, #20]
   3d744:	ldr	r2, [r4, #44]	; 0x2c
   3d748:	mov	r1, #0
   3d74c:	add	r0, r0, r7
   3d750:	str	r0, [r4, #20]
   3d754:	mov	r0, r4
   3d758:	blx	r2
   3d75c:	ldr	r0, [r4, #20]
   3d760:	ldr	r1, [r9]
   3d764:	sub	r8, r8, r7
   3d768:	add	r6, r6, r7
   3d76c:	sub	r7, r1, r0
   3d770:	cmp	r8, r7
   3d774:	bhi	3d734 <flatcc_json_printer_string_field@@Base+0x1e8>
   3d778:	mov	r1, r6
   3d77c:	mov	r2, r8
   3d780:	bl	14e60 <memcpy@plt>
   3d784:	ldr	r0, [r4, #20]
   3d788:	add	r1, r0, r8
   3d78c:	str	r1, [r4, #20]
   3d790:	mov	r1, #34	; 0x22
   3d794:	strb	r1, [r0, r8]
   3d798:	ldrb	r0, [r4, #26]
   3d79c:	ldr	r1, [r4, #20]
   3d7a0:	cmp	r0, #0
   3d7a4:	addeq	r1, r1, #1
   3d7a8:	add	r0, r1, #1
   3d7ac:	str	r0, [r4, #20]
   3d7b0:	mov	r0, #58	; 0x3a
   3d7b4:	strb	r0, [r1]
   3d7b8:	mov	r1, #32
   3d7bc:	ldr	r0, [r4, #20]
   3d7c0:	strb	r1, [r0]
   3d7c4:	ldrb	r0, [r4, #25]
   3d7c8:	ldr	r1, [r4, #20]
   3d7cc:	cmp	r0, #0
   3d7d0:	addne	r1, r1, #1
   3d7d4:	str	r1, [r4, #20]
   3d7d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0003d7dc <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   3d7dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d7e0:	add	fp, sp, #28
   3d7e4:	sub	sp, sp, #12
   3d7e8:	mov	r4, r0
   3d7ec:	mov	r0, #4
   3d7f0:	add	r0, r0, r2, lsl #1
   3d7f4:	ldr	r2, [r1, #8]
   3d7f8:	cmp	r0, r2
   3d7fc:	bge	3d9c0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1e4>
   3d800:	ldr	r2, [r1, #4]
   3d804:	add	r0, r2, r0
   3d808:	ldrh	r0, [r0]
   3d80c:	cmp	r0, #0
   3d810:	beq	3d9c0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1e4>
   3d814:	ldr	r5, [fp, #12]
   3d818:	ldr	r2, [r1]
   3d81c:	cmp	r5, #0
   3d820:	add	r6, r2, r0
   3d824:	movwne	r5, #1
   3d828:	cmp	r6, #0
   3d82c:	beq	3d9c0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1e4>
   3d830:	ldr	r0, [r1, #16]
   3d834:	ldr	r2, [fp, #8]
   3d838:	add	r7, r0, #1
   3d83c:	cmp	r0, #0
   3d840:	str	r7, [r1, #16]
   3d844:	beq	3d874 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x98>
   3d848:	mov	r7, r4
   3d84c:	ldr	r0, [r7, #20]!
   3d850:	add	r1, r0, #1
   3d854:	str	r7, [sp]
   3d858:	str	r1, [r7]
   3d85c:	mov	r1, #44	; 0x2c
   3d860:	strb	r1, [r0]
   3d864:	mov	r0, r4
   3d868:	mov	r1, r3
   3d86c:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3d870:	b	3d888 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xac>
   3d874:	mov	r0, r4
   3d878:	mov	r1, r3
   3d87c:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3d880:	add	r0, r4, #20
   3d884:	str	r0, [sp]
   3d888:	ldr	r0, [r6]
   3d88c:	ldr	r0, [r6, r0]!
   3d890:	str	r0, [sp, #8]
   3d894:	ldr	r0, [r4, #20]
   3d898:	add	r1, r0, #1
   3d89c:	str	r1, [r4, #20]
   3d8a0:	mov	r1, #34	; 0x22
   3d8a4:	strb	r1, [r0]
   3d8a8:	movw	r1, #43691	; 0xaaab
   3d8ac:	ldr	r0, [sp, #8]
   3d8b0:	movt	r1, #43690	; 0xaaaa
   3d8b4:	lsl	r0, r0, #2
   3d8b8:	umull	r0, r1, r0, r1
   3d8bc:	mov	r0, #3
   3d8c0:	add	r0, r0, r1, lsr #1
   3d8c4:	ldr	r1, [r4, #16]
   3d8c8:	bic	r7, r0, #3
   3d8cc:	ldr	r0, [r4, #20]
   3d8d0:	add	r2, r0, r7
   3d8d4:	cmp	r2, r1
   3d8d8:	bcc	3d8f8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x11c>
   3d8dc:	ldr	r2, [r4, #44]	; 0x2c
   3d8e0:	mov	r0, r4
   3d8e4:	mov	r1, #0
   3d8e8:	blx	r2
   3d8ec:	ldr	r0, [r4, #20]
   3d8f0:	ldr	r1, [r4, #16]
   3d8f4:	add	r2, r0, r7
   3d8f8:	add	r6, r6, #4
   3d8fc:	cmp	r2, r1
   3d900:	bls	3d994 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1b8>
   3d904:	add	sl, sp, #4
   3d908:	mov	r8, #3
   3d90c:	sub	r1, r1, r0
   3d910:	bic	r7, r1, #3
   3d914:	add	r1, r7, r7, lsl #1
   3d918:	cmp	r1, #0
   3d91c:	beq	3d9c8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1ec>
   3d920:	lsr	r9, r1, #2
   3d924:	mov	r1, r6
   3d928:	mov	r2, sl
   3d92c:	mov	r3, r5
   3d930:	str	r9, [sp, #4]
   3d934:	bl	47e04 <flatcc_json_printer_clear@@Base+0x40>
   3d938:	ldr	r0, [r4, #20]
   3d93c:	mov	r1, #0
   3d940:	add	r0, r0, r7
   3d944:	str	r0, [r4, #20]
   3d948:	ldr	r0, [sp, #8]
   3d94c:	sub	r0, r0, r9
   3d950:	str	r0, [sp, #8]
   3d954:	mov	r0, r4
   3d958:	ldr	r2, [r4, #44]	; 0x2c
   3d95c:	blx	r2
   3d960:	ldr	r0, [sp, #8]
   3d964:	movw	r1, #43691	; 0xaaab
   3d968:	add	r6, r6, r9
   3d96c:	movt	r1, #43690	; 0xaaaa
   3d970:	lsl	r0, r0, #2
   3d974:	umull	r0, r1, r0, r1
   3d978:	add	r0, r8, r1, lsr #1
   3d97c:	ldr	r1, [r4, #16]
   3d980:	bic	r7, r0, #3
   3d984:	ldr	r0, [r4, #20]
   3d988:	add	r2, r0, r7
   3d98c:	cmp	r2, r1
   3d990:	bhi	3d90c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x130>
   3d994:	orr	r3, r5, #128	; 0x80
   3d998:	add	r2, sp, #8
   3d99c:	mov	r1, r6
   3d9a0:	bl	47e04 <flatcc_json_printer_clear@@Base+0x40>
   3d9a4:	ldr	r2, [sp]
   3d9a8:	ldr	r0, [r2]
   3d9ac:	add	r1, r0, r7
   3d9b0:	add	r1, r1, #1
   3d9b4:	str	r1, [r2]
   3d9b8:	mov	r1, #34	; 0x22
   3d9bc:	strb	r1, [r0, r7]
   3d9c0:	sub	sp, fp, #28
   3d9c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d9c8:	movw	r0, #61241	; 0xef39
   3d9cc:	movw	r1, #60315	; 0xeb9b
   3d9d0:	movw	r3, #61247	; 0xef3f
   3d9d4:	movw	r2, #277	; 0x115
   3d9d8:	movt	r0, #4
   3d9dc:	movt	r1, #4
   3d9e0:	movt	r3, #4
   3d9e4:	bl	14f44 <__assert_fail@plt>

0003d9e8 <flatcc_json_printer_uint8_field@@Base>:
   3d9e8:	push	{r4, r5, r6, sl, fp, lr}
   3d9ec:	add	fp, sp, #16
   3d9f0:	mov	r6, r0
   3d9f4:	mov	r0, #4
   3d9f8:	ldr	r5, [r1, #8]
   3d9fc:	add	r2, r0, r2, lsl #1
   3da00:	ldr	r0, [fp, #12]
   3da04:	cmp	r2, r5
   3da08:	bge	3da28 <flatcc_json_printer_uint8_field@@Base+0x40>
   3da0c:	ldr	r5, [r1, #4]
   3da10:	add	r2, r5, r2
   3da14:	ldrh	r2, [r2]
   3da18:	cmp	r2, #0
   3da1c:	ldrne	r5, [r1]
   3da20:	addsne	r2, r5, r2
   3da24:	bne	3db20 <flatcc_json_printer_uint8_field@@Base+0x138>
   3da28:	ldrb	r2, [r6, #29]
   3da2c:	mov	r5, r0
   3da30:	cmp	r2, #0
   3da34:	popeq	{r4, r5, r6, sl, fp, pc}
   3da38:	ldr	r0, [r1, #16]
   3da3c:	ldr	r2, [fp, #8]
   3da40:	add	r4, r0, #1
   3da44:	cmp	r0, #0
   3da48:	str	r4, [r1, #16]
   3da4c:	ldrne	r0, [r6, #20]
   3da50:	addne	r1, r0, #1
   3da54:	strne	r1, [r6, #20]
   3da58:	movne	r1, #44	; 0x2c
   3da5c:	strbne	r1, [r0]
   3da60:	mov	r0, r6
   3da64:	mov	r1, r3
   3da68:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3da6c:	ldr	r0, [r6, #20]
   3da70:	mov	r1, #0
   3da74:	cmp	r5, #100	; 0x64
   3da78:	bcc	3dac0 <flatcc_json_printer_uint8_field@@Base+0xd8>
   3da7c:	strb	r1, [r0, #3]
   3da80:	movw	r1, #34079	; 0x851f
   3da84:	movt	r1, #20971	; 0x51eb
   3da88:	umull	r1, r2, r5, r1
   3da8c:	mov	r1, #48	; 0x30
   3da90:	orr	r1, r1, r2, lsr #5
   3da94:	strb	r1, [r0]
   3da98:	lsr	r1, r2, #5
   3da9c:	mov	r2, #100	; 0x64
   3daa0:	mls	r1, r1, r2, r5
   3daa4:	movw	r2, #61040	; 0xee70
   3daa8:	movt	r2, #4
   3daac:	add	r1, r2, r1, lsl #1
   3dab0:	ldrh	r1, [r1]
   3dab4:	strh	r1, [r0, #1]
   3dab8:	mov	r0, #3
   3dabc:	b	3db10 <flatcc_json_printer_uint8_field@@Base+0x128>
   3dac0:	cmp	r5, #10
   3dac4:	bcc	3db00 <flatcc_json_printer_uint8_field@@Base+0x118>
   3dac8:	strb	r1, [r0, #2]
   3dacc:	movw	r1, #34079	; 0x851f
   3dad0:	movt	r1, #20971	; 0x51eb
   3dad4:	umull	r1, r2, r5, r1
   3dad8:	lsr	r1, r2, #5
   3dadc:	mov	r2, #100	; 0x64
   3dae0:	mls	r1, r1, r2, r5
   3dae4:	movw	r2, #61040	; 0xee70
   3dae8:	movt	r2, #4
   3daec:	add	r1, r2, r1, lsl #1
   3daf0:	ldrh	r1, [r1]
   3daf4:	strh	r1, [r0]
   3daf8:	mov	r0, #2
   3dafc:	b	3db10 <flatcc_json_printer_uint8_field@@Base+0x128>
   3db00:	strb	r1, [r0, #1]
   3db04:	add	r1, r5, #48	; 0x30
   3db08:	strb	r1, [r0]
   3db0c:	mov	r0, #1
   3db10:	ldr	r1, [r6, #20]
   3db14:	add	r0, r1, r0
   3db18:	str	r0, [r6, #20]
   3db1c:	pop	{r4, r5, r6, sl, fp, pc}
   3db20:	ldrb	r5, [r2]
   3db24:	cmp	r5, r0
   3db28:	bne	3da38 <flatcc_json_printer_uint8_field@@Base+0x50>
   3db2c:	ldrb	r2, [r6, #28]
   3db30:	mov	r5, r0
   3db34:	cmp	r2, #0
   3db38:	bne	3db1c <flatcc_json_printer_uint8_field@@Base+0x134>
   3db3c:	b	3da38 <flatcc_json_printer_uint8_field@@Base+0x50>

0003db40 <flatcc_json_printer_uint16_field@@Base>:
   3db40:	push	{r4, r5, r6, sl, fp, lr}
   3db44:	add	fp, sp, #16
   3db48:	mov	r4, r0
   3db4c:	mov	r0, #4
   3db50:	ldr	r5, [r1, #8]
   3db54:	add	r2, r0, r2, lsl #1
   3db58:	ldr	r0, [fp, #12]
   3db5c:	cmp	r2, r5
   3db60:	bge	3db80 <flatcc_json_printer_uint16_field@@Base+0x40>
   3db64:	ldr	r5, [r1, #4]
   3db68:	add	r2, r5, r2
   3db6c:	ldrh	r2, [r2]
   3db70:	cmp	r2, #0
   3db74:	ldrne	r5, [r1]
   3db78:	addsne	r2, r5, r2
   3db7c:	bne	3dbe0 <flatcc_json_printer_uint16_field@@Base+0xa0>
   3db80:	ldrb	r2, [r4, #29]
   3db84:	mov	r6, r0
   3db88:	cmp	r2, #0
   3db8c:	popeq	{r4, r5, r6, sl, fp, pc}
   3db90:	ldr	r0, [r1, #16]
   3db94:	ldr	r2, [fp, #8]
   3db98:	add	r5, r0, #1
   3db9c:	cmp	r0, #0
   3dba0:	str	r5, [r1, #16]
   3dba4:	ldrne	r0, [r4, #20]
   3dba8:	addne	r1, r0, #1
   3dbac:	strne	r1, [r4, #20]
   3dbb0:	movne	r1, #44	; 0x2c
   3dbb4:	strbne	r1, [r0]
   3dbb8:	mov	r0, r4
   3dbbc:	mov	r1, r3
   3dbc0:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3dbc4:	ldr	r1, [r4, #20]
   3dbc8:	mov	r0, r6
   3dbcc:	bl	3c6f0 <flatcc_json_printer_uint16@@Base+0x2c>
   3dbd0:	ldr	r1, [r4, #20]
   3dbd4:	add	r0, r1, r0
   3dbd8:	str	r0, [r4, #20]
   3dbdc:	pop	{r4, r5, r6, sl, fp, pc}
   3dbe0:	ldrh	r6, [r2]
   3dbe4:	cmp	r6, r0
   3dbe8:	bne	3db90 <flatcc_json_printer_uint16_field@@Base+0x50>
   3dbec:	ldrb	r2, [r4, #28]
   3dbf0:	mov	r6, r0
   3dbf4:	cmp	r2, #0
   3dbf8:	bne	3dbdc <flatcc_json_printer_uint16_field@@Base+0x9c>
   3dbfc:	b	3db90 <flatcc_json_printer_uint16_field@@Base+0x50>

0003dc00 <flatcc_json_printer_uint32_field@@Base>:
   3dc00:	push	{r4, r5, r6, sl, fp, lr}
   3dc04:	add	fp, sp, #16
   3dc08:	mov	r4, r0
   3dc0c:	mov	r0, #4
   3dc10:	ldr	r5, [r1, #8]
   3dc14:	add	r2, r0, r2, lsl #1
   3dc18:	ldr	r0, [fp, #12]
   3dc1c:	cmp	r2, r5
   3dc20:	bge	3dc40 <flatcc_json_printer_uint32_field@@Base+0x40>
   3dc24:	ldr	r5, [r1, #4]
   3dc28:	add	r2, r5, r2
   3dc2c:	ldrh	r2, [r2]
   3dc30:	cmp	r2, #0
   3dc34:	ldrne	r5, [r1]
   3dc38:	addsne	r2, r5, r2
   3dc3c:	bne	3dca0 <flatcc_json_printer_uint32_field@@Base+0xa0>
   3dc40:	ldrb	r2, [r4, #29]
   3dc44:	mov	r6, r0
   3dc48:	cmp	r2, #0
   3dc4c:	popeq	{r4, r5, r6, sl, fp, pc}
   3dc50:	ldr	r0, [r1, #16]
   3dc54:	ldr	r2, [fp, #8]
   3dc58:	add	r5, r0, #1
   3dc5c:	cmp	r0, #0
   3dc60:	str	r5, [r1, #16]
   3dc64:	ldrne	r0, [r4, #20]
   3dc68:	addne	r1, r0, #1
   3dc6c:	strne	r1, [r4, #20]
   3dc70:	movne	r1, #44	; 0x2c
   3dc74:	strbne	r1, [r0]
   3dc78:	mov	r0, r4
   3dc7c:	mov	r1, r3
   3dc80:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3dc84:	ldr	r1, [r4, #20]
   3dc88:	mov	r0, r6
   3dc8c:	bl	3c890 <flatcc_json_printer_uint32@@Base+0x2c>
   3dc90:	ldr	r1, [r4, #20]
   3dc94:	add	r0, r1, r0
   3dc98:	str	r0, [r4, #20]
   3dc9c:	pop	{r4, r5, r6, sl, fp, pc}
   3dca0:	ldr	r6, [r2]
   3dca4:	cmp	r6, r0
   3dca8:	bne	3dc50 <flatcc_json_printer_uint32_field@@Base+0x50>
   3dcac:	ldrb	r2, [r4, #28]
   3dcb0:	mov	r6, r0
   3dcb4:	cmp	r2, #0
   3dcb8:	bne	3dc9c <flatcc_json_printer_uint32_field@@Base+0x9c>
   3dcbc:	b	3dc50 <flatcc_json_printer_uint32_field@@Base+0x50>

0003dcc0 <flatcc_json_printer_uint64_field@@Base>:
   3dcc0:	push	{r4, r6, r7, r8, fp, lr}
   3dcc4:	add	fp, sp, #16
   3dcc8:	mov	r4, r0
   3dccc:	mov	r0, #4
   3dcd0:	ldr	r6, [r1, #8]
   3dcd4:	ldr	lr, [fp, #20]
   3dcd8:	add	r7, r0, r2, lsl #1
   3dcdc:	ldr	r2, [fp, #16]
   3dce0:	cmp	r7, r6
   3dce4:	bge	3dd04 <flatcc_json_printer_uint64_field@@Base+0x44>
   3dce8:	ldr	r6, [r1, #4]
   3dcec:	add	r7, r6, r7
   3dcf0:	ldrh	r7, [r7]
   3dcf4:	cmp	r7, #0
   3dcf8:	ldrne	r6, [r1]
   3dcfc:	addsne	r7, r6, r7
   3dd00:	bne	3dd6c <flatcc_json_printer_uint64_field@@Base+0xac>
   3dd04:	ldrb	r0, [r4, #29]
   3dd08:	mov	r8, r2
   3dd0c:	mov	r7, lr
   3dd10:	cmp	r0, #0
   3dd14:	popeq	{r4, r6, r7, r8, fp, pc}
   3dd18:	ldr	r0, [r1, #16]
   3dd1c:	ldr	r2, [fp, #8]
   3dd20:	add	r6, r0, #1
   3dd24:	cmp	r0, #0
   3dd28:	str	r6, [r1, #16]
   3dd2c:	ldrne	r0, [r4, #20]
   3dd30:	addne	r1, r0, #1
   3dd34:	strne	r1, [r4, #20]
   3dd38:	movne	r1, #44	; 0x2c
   3dd3c:	strbne	r1, [r0]
   3dd40:	mov	r0, r4
   3dd44:	mov	r1, r3
   3dd48:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3dd4c:	ldr	r2, [r4, #20]
   3dd50:	mov	r0, r8
   3dd54:	mov	r1, r7
   3dd58:	bl	3cbf8 <flatcc_json_printer_uint64@@Base+0x30>
   3dd5c:	ldr	r1, [r4, #20]
   3dd60:	add	r0, r1, r0
   3dd64:	str	r0, [r4, #20]
   3dd68:	pop	{r4, r6, r7, r8, fp, pc}
   3dd6c:	ldr	r8, [r7]
   3dd70:	ldr	r7, [r7, #4]
   3dd74:	eor	ip, r7, lr
   3dd78:	eor	r0, r8, r2
   3dd7c:	orrs	r0, r0, ip
   3dd80:	bne	3dd18 <flatcc_json_printer_uint64_field@@Base+0x58>
   3dd84:	ldrb	r0, [r4, #28]
   3dd88:	mov	r8, r2
   3dd8c:	mov	r7, lr
   3dd90:	cmp	r0, #0
   3dd94:	bne	3dd68 <flatcc_json_printer_uint64_field@@Base+0xa8>
   3dd98:	b	3dd18 <flatcc_json_printer_uint64_field@@Base+0x58>

0003dd9c <flatcc_json_printer_int8_field@@Base>:
   3dd9c:	push	{r4, r5, r6, sl, fp, lr}
   3dda0:	add	fp, sp, #16
   3dda4:	mov	r6, r0
   3dda8:	mov	r0, #4
   3ddac:	ldr	r5, [r1, #8]
   3ddb0:	add	r2, r0, r2, lsl #1
   3ddb4:	ldr	r0, [fp, #12]
   3ddb8:	cmp	r2, r5
   3ddbc:	bge	3dddc <flatcc_json_printer_int8_field@@Base+0x40>
   3ddc0:	ldr	r5, [r1, #4]
   3ddc4:	add	r2, r5, r2
   3ddc8:	ldrh	r2, [r2]
   3ddcc:	cmp	r2, #0
   3ddd0:	ldrne	r5, [r1]
   3ddd4:	addsne	r2, r5, r2
   3ddd8:	bne	3defc <flatcc_json_printer_int8_field@@Base+0x160>
   3dddc:	ldrb	r2, [r6, #29]
   3dde0:	mov	r5, r0
   3dde4:	cmp	r2, #0
   3dde8:	popeq	{r4, r5, r6, sl, fp, pc}
   3ddec:	ldr	r0, [r1, #16]
   3ddf0:	ldr	r2, [fp, #8]
   3ddf4:	add	r4, r0, #1
   3ddf8:	cmp	r0, #0
   3ddfc:	str	r4, [r1, #16]
   3de00:	ldrne	r0, [r6, #20]
   3de04:	addne	r1, r0, #1
   3de08:	strne	r1, [r6, #20]
   3de0c:	movne	r1, #44	; 0x2c
   3de10:	strbne	r1, [r0]
   3de14:	mov	r0, r6
   3de18:	mov	r1, r3
   3de1c:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3de20:	ubfx	r0, r5, #7, #1
   3de24:	ldr	r1, [r6, #20]
   3de28:	sxtb	r2, r5
   3de2c:	cmn	r2, #1
   3de30:	movle	r2, #45	; 0x2d
   3de34:	rsble	r5, r5, #0
   3de38:	strble	r2, [r1], #1
   3de3c:	uxtb	r2, r5
   3de40:	cmp	r2, #100	; 0x64
   3de44:	bcc	3de90 <flatcc_json_printer_int8_field@@Base+0xf4>
   3de48:	mov	r3, #0
   3de4c:	strb	r3, [r1, #3]
   3de50:	movw	r3, #34079	; 0x851f
   3de54:	movt	r3, #20971	; 0x51eb
   3de58:	umull	r3, r5, r2, r3
   3de5c:	mov	r3, #48	; 0x30
   3de60:	orr	r3, r3, r5, lsr #5
   3de64:	strb	r3, [r1]
   3de68:	lsr	r3, r5, #5
   3de6c:	mov	r5, #100	; 0x64
   3de70:	mls	r2, r3, r5, r2
   3de74:	movw	r3, #61040	; 0xee70
   3de78:	movt	r3, #4
   3de7c:	add	r2, r3, r2, lsl #1
   3de80:	ldrh	r2, [r2]
   3de84:	strh	r2, [r1, #1]
   3de88:	mov	r1, #3
   3de8c:	b	3dee8 <flatcc_json_printer_int8_field@@Base+0x14c>
   3de90:	cmp	r2, #10
   3de94:	bcc	3ded4 <flatcc_json_printer_int8_field@@Base+0x138>
   3de98:	mov	r3, #0
   3de9c:	strb	r3, [r1, #2]
   3dea0:	movw	r3, #34079	; 0x851f
   3dea4:	movt	r3, #20971	; 0x51eb
   3dea8:	umull	r3, r5, r2, r3
   3deac:	lsr	r3, r5, #5
   3deb0:	mov	r5, #100	; 0x64
   3deb4:	mls	r2, r3, r5, r2
   3deb8:	movw	r3, #61040	; 0xee70
   3debc:	movt	r3, #4
   3dec0:	add	r2, r3, r2, lsl #1
   3dec4:	ldrh	r2, [r2]
   3dec8:	strh	r2, [r1]
   3decc:	mov	r1, #2
   3ded0:	b	3dee8 <flatcc_json_printer_int8_field@@Base+0x14c>
   3ded4:	mov	r2, #0
   3ded8:	strb	r2, [r1, #1]
   3dedc:	add	r2, r5, #48	; 0x30
   3dee0:	strb	r2, [r1]
   3dee4:	mov	r1, #1
   3dee8:	add	r0, r1, r0
   3deec:	ldr	r1, [r6, #20]
   3def0:	add	r0, r1, r0
   3def4:	str	r0, [r6, #20]
   3def8:	pop	{r4, r5, r6, sl, fp, pc}
   3defc:	ldrb	r5, [r2]
   3df00:	uxtb	r2, r0
   3df04:	cmp	r5, r2
   3df08:	bne	3ddec <flatcc_json_printer_int8_field@@Base+0x50>
   3df0c:	ldrb	r2, [r6, #28]
   3df10:	mov	r5, r0
   3df14:	cmp	r2, #0
   3df18:	bne	3def8 <flatcc_json_printer_int8_field@@Base+0x15c>
   3df1c:	b	3ddec <flatcc_json_printer_int8_field@@Base+0x50>

0003df20 <flatcc_json_printer_int16_field@@Base>:
   3df20:	push	{r4, r5, r6, sl, fp, lr}
   3df24:	add	fp, sp, #16
   3df28:	mov	r4, r0
   3df2c:	mov	r0, #4
   3df30:	ldr	r6, [r1, #8]
   3df34:	add	r2, r0, r2, lsl #1
   3df38:	ldr	r0, [fp, #12]
   3df3c:	cmp	r2, r6
   3df40:	bge	3df60 <flatcc_json_printer_int16_field@@Base+0x40>
   3df44:	ldr	r6, [r1, #4]
   3df48:	add	r2, r6, r2
   3df4c:	ldrh	r2, [r2]
   3df50:	cmp	r2, #0
   3df54:	ldrne	r6, [r1]
   3df58:	addsne	r2, r6, r2
   3df5c:	bne	3dfdc <flatcc_json_printer_int16_field@@Base+0xbc>
   3df60:	ldrb	r2, [r4, #29]
   3df64:	mov	r5, r0
   3df68:	cmp	r2, #0
   3df6c:	popeq	{r4, r5, r6, sl, fp, pc}
   3df70:	ldr	r0, [r1, #16]
   3df74:	ldr	r2, [fp, #8]
   3df78:	add	r6, r0, #1
   3df7c:	cmp	r0, #0
   3df80:	str	r6, [r1, #16]
   3df84:	ldrne	r0, [r4, #20]
   3df88:	addne	r1, r0, #1
   3df8c:	strne	r1, [r4, #20]
   3df90:	movne	r1, #44	; 0x2c
   3df94:	strbne	r1, [r0]
   3df98:	mov	r0, r4
   3df9c:	mov	r1, r3
   3dfa0:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3dfa4:	ubfx	r6, r5, #15, #1
   3dfa8:	ldr	r1, [r4, #20]
   3dfac:	sxth	r0, r5
   3dfb0:	cmn	r0, #1
   3dfb4:	movle	r0, #45	; 0x2d
   3dfb8:	rsble	r5, r5, #0
   3dfbc:	strble	r0, [r1], #1
   3dfc0:	uxth	r0, r5
   3dfc4:	bl	3c6f0 <flatcc_json_printer_uint16@@Base+0x2c>
   3dfc8:	ldr	r1, [r4, #20]
   3dfcc:	add	r0, r0, r6
   3dfd0:	add	r0, r1, r0
   3dfd4:	str	r0, [r4, #20]
   3dfd8:	pop	{r4, r5, r6, sl, fp, pc}
   3dfdc:	ldrh	r5, [r2]
   3dfe0:	uxth	r2, r0
   3dfe4:	cmp	r5, r2
   3dfe8:	bne	3df70 <flatcc_json_printer_int16_field@@Base+0x50>
   3dfec:	ldrb	r2, [r4, #28]
   3dff0:	mov	r5, r0
   3dff4:	cmp	r2, #0
   3dff8:	bne	3dfd8 <flatcc_json_printer_int16_field@@Base+0xb8>
   3dffc:	b	3df70 <flatcc_json_printer_int16_field@@Base+0x50>

0003e000 <flatcc_json_printer_int32_field@@Base>:
   3e000:	push	{r4, r5, r6, sl, fp, lr}
   3e004:	add	fp, sp, #16
   3e008:	mov	r4, r0
   3e00c:	mov	r0, #4
   3e010:	ldr	r6, [r1, #8]
   3e014:	add	r2, r0, r2, lsl #1
   3e018:	ldr	r0, [fp, #12]
   3e01c:	cmp	r2, r6
   3e020:	bge	3e040 <flatcc_json_printer_int32_field@@Base+0x40>
   3e024:	ldr	r6, [r1, #4]
   3e028:	add	r2, r6, r2
   3e02c:	ldrh	r2, [r2]
   3e030:	cmp	r2, #0
   3e034:	ldrne	r6, [r1]
   3e038:	addsne	r2, r6, r2
   3e03c:	bne	3e0b8 <flatcc_json_printer_int32_field@@Base+0xb8>
   3e040:	ldrb	r2, [r4, #29]
   3e044:	mov	r5, r0
   3e048:	cmp	r2, #0
   3e04c:	popeq	{r4, r5, r6, sl, fp, pc}
   3e050:	ldr	r0, [r1, #16]
   3e054:	ldr	r2, [fp, #8]
   3e058:	add	r6, r0, #1
   3e05c:	cmp	r0, #0
   3e060:	str	r6, [r1, #16]
   3e064:	ldrne	r0, [r4, #20]
   3e068:	addne	r1, r0, #1
   3e06c:	strne	r1, [r4, #20]
   3e070:	movne	r1, #44	; 0x2c
   3e074:	strbne	r1, [r0]
   3e078:	mov	r0, r4
   3e07c:	mov	r1, r3
   3e080:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3e084:	ldr	r1, [r4, #20]
   3e088:	cmn	r5, #1
   3e08c:	lsr	r6, r5, #31
   3e090:	movle	r0, #45	; 0x2d
   3e094:	rsble	r5, r5, #0
   3e098:	strble	r0, [r1], #1
   3e09c:	mov	r0, r5
   3e0a0:	bl	3c890 <flatcc_json_printer_uint32@@Base+0x2c>
   3e0a4:	ldr	r1, [r4, #20]
   3e0a8:	add	r0, r0, r6
   3e0ac:	add	r0, r1, r0
   3e0b0:	str	r0, [r4, #20]
   3e0b4:	pop	{r4, r5, r6, sl, fp, pc}
   3e0b8:	ldr	r5, [r2]
   3e0bc:	cmp	r5, r0
   3e0c0:	bne	3e050 <flatcc_json_printer_int32_field@@Base+0x50>
   3e0c4:	ldrb	r2, [r4, #28]
   3e0c8:	mov	r5, r0
   3e0cc:	cmp	r2, #0
   3e0d0:	bne	3e0b4 <flatcc_json_printer_int32_field@@Base+0xb4>
   3e0d4:	b	3e050 <flatcc_json_printer_int32_field@@Base+0x50>

0003e0d8 <flatcc_json_printer_int64_field@@Base>:
   3e0d8:	push	{r4, r5, r6, r7, fp, lr}
   3e0dc:	add	fp, sp, #16
   3e0e0:	mov	r4, r0
   3e0e4:	mov	r0, #4
   3e0e8:	ldr	r6, [r1, #8]
   3e0ec:	add	r7, r0, r2, lsl #1
   3e0f0:	ldr	r0, [fp, #20]
   3e0f4:	ldr	r2, [fp, #16]
   3e0f8:	cmp	r7, r6
   3e0fc:	bge	3e11c <flatcc_json_printer_int64_field@@Base+0x44>
   3e100:	ldr	r6, [r1, #4]
   3e104:	add	r7, r6, r7
   3e108:	ldrh	r7, [r7]
   3e10c:	cmp	r7, #0
   3e110:	ldrne	r6, [r1]
   3e114:	addsne	r7, r6, r7
   3e118:	bne	3e1a4 <flatcc_json_printer_int64_field@@Base+0xcc>
   3e11c:	ldrb	r7, [r4, #29]
   3e120:	mov	r6, r2
   3e124:	cmp	r7, #0
   3e128:	mov	r7, r0
   3e12c:	popeq	{r4, r5, r6, r7, fp, pc}
   3e130:	ldr	r0, [r1, #16]
   3e134:	ldr	r2, [fp, #8]
   3e138:	add	r5, r0, #1
   3e13c:	cmp	r0, #0
   3e140:	str	r5, [r1, #16]
   3e144:	ldrne	r0, [r4, #20]
   3e148:	addne	r1, r0, #1
   3e14c:	strne	r1, [r4, #20]
   3e150:	movne	r1, #44	; 0x2c
   3e154:	strbne	r1, [r0]
   3e158:	mov	r0, r4
   3e15c:	mov	r1, r3
   3e160:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3e164:	ldr	r2, [r4, #20]
   3e168:	lsr	r5, r7, #31
   3e16c:	cmn	r7, #1
   3e170:	bgt	3e184 <flatcc_json_printer_int64_field@@Base+0xac>
   3e174:	mov	r0, #45	; 0x2d
   3e178:	rsbs	r6, r6, #0
   3e17c:	strb	r0, [r2], #1
   3e180:	rsc	r7, r7, #0
   3e184:	mov	r0, r6
   3e188:	mov	r1, r7
   3e18c:	bl	3cbf8 <flatcc_json_printer_uint64@@Base+0x30>
   3e190:	ldr	r1, [r4, #20]
   3e194:	add	r0, r0, r5
   3e198:	add	r0, r1, r0
   3e19c:	str	r0, [r4, #20]
   3e1a0:	pop	{r4, r5, r6, r7, fp, pc}
   3e1a4:	ldrd	r6, [r7]
   3e1a8:	eor	ip, r7, r0
   3e1ac:	eor	r5, r6, r2
   3e1b0:	orrs	r5, r5, ip
   3e1b4:	bne	3e130 <flatcc_json_printer_int64_field@@Base+0x58>
   3e1b8:	ldrb	r7, [r4, #28]
   3e1bc:	mov	r6, r2
   3e1c0:	cmp	r7, #0
   3e1c4:	mov	r7, r0
   3e1c8:	bne	3e1a0 <flatcc_json_printer_int64_field@@Base+0xc8>
   3e1cc:	b	3e130 <flatcc_json_printer_int64_field@@Base+0x58>

0003e1d0 <flatcc_json_printer_bool_field@@Base>:
   3e1d0:	push	{r4, r5, r6, sl, fp, lr}
   3e1d4:	add	fp, sp, #16
   3e1d8:	mov	r4, r0
   3e1dc:	mov	r0, #4
   3e1e0:	ldr	r5, [r1, #8]
   3e1e4:	add	r2, r0, r2, lsl #1
   3e1e8:	ldr	r0, [fp, #12]
   3e1ec:	cmp	r2, r5
   3e1f0:	bge	3e210 <flatcc_json_printer_bool_field@@Base+0x40>
   3e1f4:	ldr	r5, [r1, #4]
   3e1f8:	add	r2, r5, r2
   3e1fc:	ldrh	r2, [r2]
   3e200:	cmp	r2, #0
   3e204:	ldrne	r5, [r1]
   3e208:	addsne	r2, r5, r2
   3e20c:	bne	3e2a4 <flatcc_json_printer_bool_field@@Base+0xd4>
   3e210:	ldrb	r2, [r4, #29]
   3e214:	mov	r6, r0
   3e218:	cmp	r2, #0
   3e21c:	popeq	{r4, r5, r6, sl, fp, pc}
   3e220:	ldr	r0, [r1, #16]
   3e224:	ldr	r2, [fp, #8]
   3e228:	add	r5, r0, #1
   3e22c:	cmp	r0, #0
   3e230:	str	r5, [r1, #16]
   3e234:	ldrne	r0, [r4, #20]
   3e238:	addne	r1, r0, #1
   3e23c:	strne	r1, [r4, #20]
   3e240:	movne	r1, #44	; 0x2c
   3e244:	strbne	r1, [r0]
   3e248:	mov	r0, r4
   3e24c:	mov	r1, r3
   3e250:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3e254:	ldr	r0, [r4, #20]
   3e258:	cmp	r6, #0
   3e25c:	beq	3e27c <flatcc_json_printer_bool_field@@Base+0xac>
   3e260:	mov	r1, #0
   3e264:	strb	r1, [r0, #4]
   3e268:	movw	r1, #29300	; 0x7274
   3e26c:	movt	r1, #25973	; 0x6575
   3e270:	str	r1, [r0]
   3e274:	mov	r0, #4
   3e278:	b	3e294 <flatcc_json_printer_bool_field@@Base+0xc4>
   3e27c:	mov	r1, #101	; 0x65
   3e280:	strh	r1, [r0, #4]
   3e284:	movw	r1, #24934	; 0x6166
   3e288:	movt	r1, #29548	; 0x736c
   3e28c:	str	r1, [r0]
   3e290:	mov	r0, #5
   3e294:	ldr	r1, [r4, #20]
   3e298:	add	r0, r1, r0
   3e29c:	str	r0, [r4, #20]
   3e2a0:	pop	{r4, r5, r6, sl, fp, pc}
   3e2a4:	ldrb	r6, [r2]
   3e2a8:	cmp	r6, r0
   3e2ac:	bne	3e220 <flatcc_json_printer_bool_field@@Base+0x50>
   3e2b0:	ldrb	r2, [r4, #28]
   3e2b4:	mov	r6, r0
   3e2b8:	cmp	r2, #0
   3e2bc:	bne	3e2a0 <flatcc_json_printer_bool_field@@Base+0xd0>
   3e2c0:	b	3e220 <flatcc_json_printer_bool_field@@Base+0x50>

0003e2c4 <flatcc_json_printer_float_field@@Base>:
   3e2c4:	push	{r4, r5, fp, lr}
   3e2c8:	add	fp, sp, #8
   3e2cc:	vpush	{d8}
   3e2d0:	mov	r5, r0
   3e2d4:	mov	r0, #4
   3e2d8:	vmov.f32	s16, s0
   3e2dc:	add	r0, r0, r2, lsl #1
   3e2e0:	ldr	r2, [r1, #8]
   3e2e4:	cmp	r0, r2
   3e2e8:	bge	3e308 <flatcc_json_printer_float_field@@Base+0x44>
   3e2ec:	ldr	r2, [r1, #4]
   3e2f0:	add	r0, r2, r0
   3e2f4:	ldrh	r0, [r0]
   3e2f8:	cmp	r0, #0
   3e2fc:	ldrne	r2, [r1]
   3e300:	addsne	r0, r2, r0
   3e304:	bne	3e368 <flatcc_json_printer_float_field@@Base+0xa4>
   3e308:	ldrb	r0, [r5, #29]
   3e30c:	cmp	r0, #0
   3e310:	beq	3e360 <flatcc_json_printer_float_field@@Base+0x9c>
   3e314:	ldr	r0, [r1, #16]
   3e318:	ldr	r2, [fp, #8]
   3e31c:	add	r4, r0, #1
   3e320:	cmp	r0, #0
   3e324:	str	r4, [r1, #16]
   3e328:	ldrne	r0, [r5, #20]
   3e32c:	addne	r1, r0, #1
   3e330:	strne	r1, [r5, #20]
   3e334:	movne	r1, #44	; 0x2c
   3e338:	strbne	r1, [r0]
   3e33c:	mov	r0, r5
   3e340:	mov	r1, r3
   3e344:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3e348:	ldr	r0, [r5, #20]
   3e34c:	vcvt.f64.f32	d0, s16
   3e350:	bl	3b290 <flatcc_json_printer_fmt_float@@Base+0x8>
   3e354:	ldr	r1, [r5, #20]
   3e358:	add	r0, r1, r0
   3e35c:	str	r0, [r5, #20]
   3e360:	vpop	{d8}
   3e364:	pop	{r4, r5, fp, pc}
   3e368:	vldr	s0, [r0]
   3e36c:	vcmp.f32	s0, s16
   3e370:	vmrs	APSR_nzcv, fpscr
   3e374:	bne	3e38c <flatcc_json_printer_float_field@@Base+0xc8>
   3e378:	ldrb	r0, [r5, #28]
   3e37c:	vmov.f32	s16, s0
   3e380:	cmp	r0, #0
   3e384:	bne	3e360 <flatcc_json_printer_float_field@@Base+0x9c>
   3e388:	b	3e314 <flatcc_json_printer_float_field@@Base+0x50>
   3e38c:	vmov.f32	s16, s0
   3e390:	b	3e314 <flatcc_json_printer_float_field@@Base+0x50>

0003e394 <flatcc_json_printer_double_field@@Base>:
   3e394:	push	{r4, r5, fp, lr}
   3e398:	add	fp, sp, #8
   3e39c:	vpush	{d8}
   3e3a0:	mov	r5, r0
   3e3a4:	mov	r0, #4
   3e3a8:	vmov.f64	d8, d0
   3e3ac:	add	r0, r0, r2, lsl #1
   3e3b0:	ldr	r2, [r1, #8]
   3e3b4:	cmp	r0, r2
   3e3b8:	bge	3e3d8 <flatcc_json_printer_double_field@@Base+0x44>
   3e3bc:	ldr	r2, [r1, #4]
   3e3c0:	add	r0, r2, r0
   3e3c4:	ldrh	r0, [r0]
   3e3c8:	cmp	r0, #0
   3e3cc:	ldrne	r2, [r1]
   3e3d0:	addsne	r0, r2, r0
   3e3d4:	bne	3e438 <flatcc_json_printer_double_field@@Base+0xa4>
   3e3d8:	ldrb	r0, [r5, #29]
   3e3dc:	cmp	r0, #0
   3e3e0:	beq	3e430 <flatcc_json_printer_double_field@@Base+0x9c>
   3e3e4:	ldr	r0, [r1, #16]
   3e3e8:	ldr	r2, [fp, #8]
   3e3ec:	add	r4, r0, #1
   3e3f0:	cmp	r0, #0
   3e3f4:	str	r4, [r1, #16]
   3e3f8:	ldrne	r0, [r5, #20]
   3e3fc:	addne	r1, r0, #1
   3e400:	strne	r1, [r5, #20]
   3e404:	movne	r1, #44	; 0x2c
   3e408:	strbne	r1, [r0]
   3e40c:	mov	r0, r5
   3e410:	mov	r1, r3
   3e414:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3e418:	ldr	r0, [r5, #20]
   3e41c:	vmov.f64	d0, d8
   3e420:	bl	3b290 <flatcc_json_printer_fmt_float@@Base+0x8>
   3e424:	ldr	r1, [r5, #20]
   3e428:	add	r0, r1, r0
   3e42c:	str	r0, [r5, #20]
   3e430:	vpop	{d8}
   3e434:	pop	{r4, r5, fp, pc}
   3e438:	vldr	d16, [r0]
   3e43c:	vcmp.f64	d16, d8
   3e440:	vmrs	APSR_nzcv, fpscr
   3e444:	bne	3e45c <flatcc_json_printer_double_field@@Base+0xc8>
   3e448:	ldrb	r0, [r5, #28]
   3e44c:	vmov.f64	d8, d16
   3e450:	cmp	r0, #0
   3e454:	bne	3e430 <flatcc_json_printer_double_field@@Base+0x9c>
   3e458:	b	3e3e4 <flatcc_json_printer_double_field@@Base+0x50>
   3e45c:	vmov.f64	d8, d16
   3e460:	b	3e3e4 <flatcc_json_printer_double_field@@Base+0x50>

0003e464 <flatcc_json_printer_uint8_enum_field@@Base>:
   3e464:	push	{r4, r5, r6, r7, fp, lr}
   3e468:	add	fp, sp, #16
   3e46c:	mov	r6, r0
   3e470:	mov	r0, #4
   3e474:	ldr	r4, [r1, #8]
   3e478:	ldr	ip, [fp, #16]
   3e47c:	add	r5, r0, r2, lsl #1
   3e480:	ldr	r0, [fp, #12]
   3e484:	ldr	r2, [fp, #8]
   3e488:	cmp	r5, r4
   3e48c:	bge	3e4ac <flatcc_json_printer_uint8_enum_field@@Base+0x48>
   3e490:	ldr	r4, [r1, #4]
   3e494:	add	r5, r4, r5
   3e498:	ldrh	r5, [r5]
   3e49c:	cmp	r5, #0
   3e4a0:	ldrne	r4, [r1]
   3e4a4:	addsne	r5, r4, r5
   3e4a8:	bne	3e5c4 <flatcc_json_printer_uint8_enum_field@@Base+0x160>
   3e4ac:	ldrb	r5, [r6, #29]
   3e4b0:	cmp	r5, #0
   3e4b4:	mov	r5, r0
   3e4b8:	popeq	{r4, r5, r6, r7, fp, pc}
   3e4bc:	ldr	r0, [r1, #16]
   3e4c0:	mov	r7, ip
   3e4c4:	add	r4, r0, #1
   3e4c8:	cmp	r0, #0
   3e4cc:	str	r4, [r1, #16]
   3e4d0:	ldrne	r0, [r6, #20]
   3e4d4:	addne	r1, r0, #1
   3e4d8:	strne	r1, [r6, #20]
   3e4dc:	movne	r1, #44	; 0x2c
   3e4e0:	strbne	r1, [r0]
   3e4e4:	mov	r0, r6
   3e4e8:	mov	r1, r3
   3e4ec:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3e4f0:	ldrb	r0, [r6, #27]
   3e4f4:	cmp	r0, #0
   3e4f8:	beq	3e550 <flatcc_json_printer_uint8_enum_field@@Base+0xec>
   3e4fc:	ldr	r0, [r6, #20]
   3e500:	mov	r1, #0
   3e504:	cmp	r5, #100	; 0x64
   3e508:	bcc	3e564 <flatcc_json_printer_uint8_enum_field@@Base+0x100>
   3e50c:	strb	r1, [r0, #3]
   3e510:	movw	r1, #34079	; 0x851f
   3e514:	movt	r1, #20971	; 0x51eb
   3e518:	umull	r1, r2, r5, r1
   3e51c:	mov	r1, #48	; 0x30
   3e520:	orr	r1, r1, r2, lsr #5
   3e524:	strb	r1, [r0]
   3e528:	lsr	r1, r2, #5
   3e52c:	mov	r2, #100	; 0x64
   3e530:	mls	r1, r1, r2, r5
   3e534:	movw	r2, #61040	; 0xee70
   3e538:	movt	r2, #4
   3e53c:	add	r1, r2, r1, lsl #1
   3e540:	ldrh	r1, [r1]
   3e544:	strh	r1, [r0, #1]
   3e548:	mov	r0, #3
   3e54c:	b	3e5b4 <flatcc_json_printer_uint8_enum_field@@Base+0x150>
   3e550:	mov	r0, r6
   3e554:	mov	r1, r5
   3e558:	mov	r2, r7
   3e55c:	pop	{r4, r5, r6, r7, fp, lr}
   3e560:	bx	r2
   3e564:	cmp	r5, #10
   3e568:	bcc	3e5a4 <flatcc_json_printer_uint8_enum_field@@Base+0x140>
   3e56c:	strb	r1, [r0, #2]
   3e570:	movw	r1, #34079	; 0x851f
   3e574:	movt	r1, #20971	; 0x51eb
   3e578:	umull	r1, r2, r5, r1
   3e57c:	lsr	r1, r2, #5
   3e580:	mov	r2, #100	; 0x64
   3e584:	mls	r1, r1, r2, r5
   3e588:	movw	r2, #61040	; 0xee70
   3e58c:	movt	r2, #4
   3e590:	add	r1, r2, r1, lsl #1
   3e594:	ldrh	r1, [r1]
   3e598:	strh	r1, [r0]
   3e59c:	mov	r0, #2
   3e5a0:	b	3e5b4 <flatcc_json_printer_uint8_enum_field@@Base+0x150>
   3e5a4:	strb	r1, [r0, #1]
   3e5a8:	add	r1, r5, #48	; 0x30
   3e5ac:	strb	r1, [r0]
   3e5b0:	mov	r0, #1
   3e5b4:	ldr	r1, [r6, #20]
   3e5b8:	add	r0, r1, r0
   3e5bc:	str	r0, [r6, #20]
   3e5c0:	pop	{r4, r5, r6, r7, fp, pc}
   3e5c4:	ldrb	r5, [r5]
   3e5c8:	cmp	r5, r0
   3e5cc:	bne	3e4bc <flatcc_json_printer_uint8_enum_field@@Base+0x58>
   3e5d0:	ldrb	r5, [r6, #28]
   3e5d4:	cmp	r5, #0
   3e5d8:	mov	r5, r0
   3e5dc:	bne	3e5c0 <flatcc_json_printer_uint8_enum_field@@Base+0x15c>
   3e5e0:	b	3e4bc <flatcc_json_printer_uint8_enum_field@@Base+0x58>

0003e5e4 <flatcc_json_printer_uint16_enum_field@@Base>:
   3e5e4:	push	{r4, r5, r6, r7, fp, lr}
   3e5e8:	add	fp, sp, #16
   3e5ec:	mov	r4, r0
   3e5f0:	mov	r0, #4
   3e5f4:	ldr	r7, [fp, #16]
   3e5f8:	ldr	ip, [fp, #12]
   3e5fc:	add	r5, r0, r2, lsl #1
   3e600:	ldr	r0, [r1, #8]
   3e604:	ldr	r2, [fp, #8]
   3e608:	cmp	r5, r0
   3e60c:	bge	3e62c <flatcc_json_printer_uint16_enum_field@@Base+0x48>
   3e610:	ldr	r0, [r1, #4]
   3e614:	add	r0, r0, r5
   3e618:	ldrh	r5, [r0]
   3e61c:	cmp	r5, #0
   3e620:	ldrne	r0, [r1]
   3e624:	addsne	r5, r0, r5
   3e628:	bne	3e6a8 <flatcc_json_printer_uint16_enum_field@@Base+0xc4>
   3e62c:	ldrb	r0, [r4, #29]
   3e630:	mov	r6, ip
   3e634:	cmp	r0, #0
   3e638:	popeq	{r4, r5, r6, r7, fp, pc}
   3e63c:	ldr	r0, [r1, #16]
   3e640:	add	r5, r0, #1
   3e644:	cmp	r0, #0
   3e648:	str	r5, [r1, #16]
   3e64c:	ldrne	r0, [r4, #20]
   3e650:	addne	r1, r0, #1
   3e654:	strne	r1, [r4, #20]
   3e658:	movne	r1, #44	; 0x2c
   3e65c:	strbne	r1, [r0]
   3e660:	mov	r0, r4
   3e664:	mov	r1, r3
   3e668:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3e66c:	ldrb	r0, [r4, #27]
   3e670:	cmp	r0, #0
   3e674:	beq	3e694 <flatcc_json_printer_uint16_enum_field@@Base+0xb0>
   3e678:	ldr	r1, [r4, #20]
   3e67c:	mov	r0, r6
   3e680:	bl	3c6f0 <flatcc_json_printer_uint16@@Base+0x2c>
   3e684:	ldr	r1, [r4, #20]
   3e688:	add	r0, r1, r0
   3e68c:	str	r0, [r4, #20]
   3e690:	pop	{r4, r5, r6, r7, fp, pc}
   3e694:	mov	r0, r4
   3e698:	mov	r1, r6
   3e69c:	mov	r2, r7
   3e6a0:	pop	{r4, r5, r6, r7, fp, lr}
   3e6a4:	bx	r2
   3e6a8:	ldrh	r6, [r5]
   3e6ac:	cmp	r6, ip
   3e6b0:	bne	3e63c <flatcc_json_printer_uint16_enum_field@@Base+0x58>
   3e6b4:	ldrb	r0, [r4, #28]
   3e6b8:	mov	r6, ip
   3e6bc:	cmp	r0, #0
   3e6c0:	bne	3e690 <flatcc_json_printer_uint16_enum_field@@Base+0xac>
   3e6c4:	b	3e63c <flatcc_json_printer_uint16_enum_field@@Base+0x58>

0003e6c8 <flatcc_json_printer_uint32_enum_field@@Base>:
   3e6c8:	push	{r4, r5, r6, r7, fp, lr}
   3e6cc:	add	fp, sp, #16
   3e6d0:	mov	r4, r0
   3e6d4:	mov	r0, #4
   3e6d8:	ldr	r7, [fp, #16]
   3e6dc:	ldr	ip, [fp, #12]
   3e6e0:	add	r5, r0, r2, lsl #1
   3e6e4:	ldr	r0, [r1, #8]
   3e6e8:	ldr	r2, [fp, #8]
   3e6ec:	cmp	r5, r0
   3e6f0:	bge	3e710 <flatcc_json_printer_uint32_enum_field@@Base+0x48>
   3e6f4:	ldr	r0, [r1, #4]
   3e6f8:	add	r0, r0, r5
   3e6fc:	ldrh	r5, [r0]
   3e700:	cmp	r5, #0
   3e704:	ldrne	r0, [r1]
   3e708:	addsne	r5, r0, r5
   3e70c:	bne	3e78c <flatcc_json_printer_uint32_enum_field@@Base+0xc4>
   3e710:	ldrb	r0, [r4, #29]
   3e714:	mov	r6, ip
   3e718:	cmp	r0, #0
   3e71c:	popeq	{r4, r5, r6, r7, fp, pc}
   3e720:	ldr	r0, [r1, #16]
   3e724:	add	r5, r0, #1
   3e728:	cmp	r0, #0
   3e72c:	str	r5, [r1, #16]
   3e730:	ldrne	r0, [r4, #20]
   3e734:	addne	r1, r0, #1
   3e738:	strne	r1, [r4, #20]
   3e73c:	movne	r1, #44	; 0x2c
   3e740:	strbne	r1, [r0]
   3e744:	mov	r0, r4
   3e748:	mov	r1, r3
   3e74c:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3e750:	ldrb	r0, [r4, #27]
   3e754:	cmp	r0, #0
   3e758:	beq	3e778 <flatcc_json_printer_uint32_enum_field@@Base+0xb0>
   3e75c:	ldr	r1, [r4, #20]
   3e760:	mov	r0, r6
   3e764:	bl	3c890 <flatcc_json_printer_uint32@@Base+0x2c>
   3e768:	ldr	r1, [r4, #20]
   3e76c:	add	r0, r1, r0
   3e770:	str	r0, [r4, #20]
   3e774:	pop	{r4, r5, r6, r7, fp, pc}
   3e778:	mov	r0, r4
   3e77c:	mov	r1, r6
   3e780:	mov	r2, r7
   3e784:	pop	{r4, r5, r6, r7, fp, lr}
   3e788:	bx	r2
   3e78c:	ldr	r6, [r5]
   3e790:	cmp	r6, ip
   3e794:	bne	3e720 <flatcc_json_printer_uint32_enum_field@@Base+0x58>
   3e798:	ldrb	r0, [r4, #28]
   3e79c:	mov	r6, ip
   3e7a0:	cmp	r0, #0
   3e7a4:	bne	3e774 <flatcc_json_printer_uint32_enum_field@@Base+0xac>
   3e7a8:	b	3e720 <flatcc_json_printer_uint32_enum_field@@Base+0x58>

0003e7ac <flatcc_json_printer_uint64_enum_field@@Base>:
   3e7ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3e7b0:	add	fp, sp, #24
   3e7b4:	mov	r4, r0
   3e7b8:	mov	r0, #4
   3e7bc:	ldr	ip, [fp, #20]
   3e7c0:	ldr	r6, [fp, #16]
   3e7c4:	ldr	r5, [fp, #24]
   3e7c8:	add	r7, r0, r2, lsl #1
   3e7cc:	ldr	r0, [r1, #8]
   3e7d0:	ldr	r2, [fp, #8]
   3e7d4:	cmp	r7, r0
   3e7d8:	bge	3e7f8 <flatcc_json_printer_uint64_enum_field@@Base+0x4c>
   3e7dc:	ldr	r0, [r1, #4]
   3e7e0:	add	r0, r0, r7
   3e7e4:	ldrh	r7, [r0]
   3e7e8:	cmp	r7, #0
   3e7ec:	ldrne	r0, [r1]
   3e7f0:	addsne	r7, r0, r7
   3e7f4:	bne	3e880 <flatcc_json_printer_uint64_enum_field@@Base+0xd4>
   3e7f8:	ldrb	r0, [r4, #29]
   3e7fc:	mov	r8, r6
   3e800:	mov	r7, ip
   3e804:	cmp	r0, #0
   3e808:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   3e80c:	ldr	r0, [r1, #16]
   3e810:	add	r6, r0, #1
   3e814:	cmp	r0, #0
   3e818:	str	r6, [r1, #16]
   3e81c:	ldrne	r0, [r4, #20]
   3e820:	addne	r1, r0, #1
   3e824:	strne	r1, [r4, #20]
   3e828:	movne	r1, #44	; 0x2c
   3e82c:	strbne	r1, [r0]
   3e830:	mov	r0, r4
   3e834:	mov	r1, r3
   3e838:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3e83c:	ldrb	r0, [r4, #27]
   3e840:	cmp	r0, #0
   3e844:	beq	3e868 <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   3e848:	ldr	r2, [r4, #20]
   3e84c:	mov	r0, r8
   3e850:	mov	r1, r7
   3e854:	bl	3cbf8 <flatcc_json_printer_uint64@@Base+0x30>
   3e858:	ldr	r1, [r4, #20]
   3e85c:	add	r0, r1, r0
   3e860:	str	r0, [r4, #20]
   3e864:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3e868:	mov	r0, r4
   3e86c:	mov	r2, r8
   3e870:	mov	r3, r7
   3e874:	mov	r1, r5
   3e878:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3e87c:	bx	r1
   3e880:	ldr	r8, [r7]
   3e884:	ldr	r7, [r7, #4]
   3e888:	eor	lr, r7, ip
   3e88c:	eor	r0, r8, r6
   3e890:	orrs	r0, r0, lr
   3e894:	bne	3e80c <flatcc_json_printer_uint64_enum_field@@Base+0x60>
   3e898:	ldrb	r0, [r4, #28]
   3e89c:	mov	r8, r6
   3e8a0:	mov	r7, ip
   3e8a4:	cmp	r0, #0
   3e8a8:	bne	3e864 <flatcc_json_printer_uint64_enum_field@@Base+0xb8>
   3e8ac:	b	3e80c <flatcc_json_printer_uint64_enum_field@@Base+0x60>

0003e8b0 <flatcc_json_printer_int8_enum_field@@Base>:
   3e8b0:	push	{r4, r5, r6, r7, fp, lr}
   3e8b4:	add	fp, sp, #16
   3e8b8:	mov	r6, r0
   3e8bc:	mov	r0, #4
   3e8c0:	ldr	r4, [r1, #8]
   3e8c4:	ldr	ip, [fp, #16]
   3e8c8:	add	r5, r0, r2, lsl #1
   3e8cc:	ldr	r0, [fp, #12]
   3e8d0:	ldr	r2, [fp, #8]
   3e8d4:	cmp	r5, r4
   3e8d8:	bge	3e8f8 <flatcc_json_printer_int8_enum_field@@Base+0x48>
   3e8dc:	ldr	r4, [r1, #4]
   3e8e0:	add	r5, r4, r5
   3e8e4:	ldrh	r5, [r5]
   3e8e8:	cmp	r5, #0
   3e8ec:	ldrne	r4, [r1]
   3e8f0:	addsne	r5, r4, r5
   3e8f4:	bne	3ea38 <flatcc_json_printer_int8_enum_field@@Base+0x188>
   3e8f8:	ldrb	r5, [r6, #29]
   3e8fc:	cmp	r5, #0
   3e900:	mov	r5, r0
   3e904:	popeq	{r4, r5, r6, r7, fp, pc}
   3e908:	ldr	r0, [r1, #16]
   3e90c:	mov	r7, ip
   3e910:	add	r4, r0, #1
   3e914:	cmp	r0, #0
   3e918:	str	r4, [r1, #16]
   3e91c:	ldrne	r0, [r6, #20]
   3e920:	addne	r1, r0, #1
   3e924:	strne	r1, [r6, #20]
   3e928:	movne	r1, #44	; 0x2c
   3e92c:	strbne	r1, [r0]
   3e930:	mov	r0, r6
   3e934:	mov	r1, r3
   3e938:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3e93c:	ldrb	r0, [r6, #27]
   3e940:	cmp	r0, #0
   3e944:	beq	3e9b8 <flatcc_json_printer_int8_enum_field@@Base+0x108>
   3e948:	ubfx	r0, r5, #7, #1
   3e94c:	ldr	r1, [r6, #20]
   3e950:	sxtb	r2, r5
   3e954:	cmn	r2, #1
   3e958:	movle	r2, #45	; 0x2d
   3e95c:	rsble	r5, r5, #0
   3e960:	strble	r2, [r1], #1
   3e964:	uxtb	r2, r5
   3e968:	cmp	r2, #100	; 0x64
   3e96c:	bcc	3e9cc <flatcc_json_printer_int8_enum_field@@Base+0x11c>
   3e970:	mov	r3, #0
   3e974:	strb	r3, [r1, #3]
   3e978:	movw	r3, #34079	; 0x851f
   3e97c:	movt	r3, #20971	; 0x51eb
   3e980:	umull	r3, r5, r2, r3
   3e984:	mov	r3, #48	; 0x30
   3e988:	orr	r3, r3, r5, lsr #5
   3e98c:	strb	r3, [r1]
   3e990:	lsr	r3, r5, #5
   3e994:	mov	r5, #100	; 0x64
   3e998:	mls	r2, r3, r5, r2
   3e99c:	movw	r3, #61040	; 0xee70
   3e9a0:	movt	r3, #4
   3e9a4:	add	r2, r3, r2, lsl #1
   3e9a8:	ldrh	r2, [r2]
   3e9ac:	strh	r2, [r1, #1]
   3e9b0:	mov	r1, #3
   3e9b4:	b	3ea24 <flatcc_json_printer_int8_enum_field@@Base+0x174>
   3e9b8:	sxtb	r1, r5
   3e9bc:	mov	r0, r6
   3e9c0:	mov	r2, r7
   3e9c4:	pop	{r4, r5, r6, r7, fp, lr}
   3e9c8:	bx	r2
   3e9cc:	cmp	r2, #10
   3e9d0:	bcc	3ea10 <flatcc_json_printer_int8_enum_field@@Base+0x160>
   3e9d4:	mov	r3, #0
   3e9d8:	strb	r3, [r1, #2]
   3e9dc:	movw	r3, #34079	; 0x851f
   3e9e0:	movt	r3, #20971	; 0x51eb
   3e9e4:	umull	r3, r5, r2, r3
   3e9e8:	lsr	r3, r5, #5
   3e9ec:	mov	r5, #100	; 0x64
   3e9f0:	mls	r2, r3, r5, r2
   3e9f4:	movw	r3, #61040	; 0xee70
   3e9f8:	movt	r3, #4
   3e9fc:	add	r2, r3, r2, lsl #1
   3ea00:	ldrh	r2, [r2]
   3ea04:	strh	r2, [r1]
   3ea08:	mov	r1, #2
   3ea0c:	b	3ea24 <flatcc_json_printer_int8_enum_field@@Base+0x174>
   3ea10:	mov	r2, #0
   3ea14:	strb	r2, [r1, #1]
   3ea18:	add	r2, r5, #48	; 0x30
   3ea1c:	strb	r2, [r1]
   3ea20:	mov	r1, #1
   3ea24:	add	r0, r1, r0
   3ea28:	ldr	r1, [r6, #20]
   3ea2c:	add	r0, r1, r0
   3ea30:	str	r0, [r6, #20]
   3ea34:	pop	{r4, r5, r6, r7, fp, pc}
   3ea38:	ldrb	r5, [r5]
   3ea3c:	uxtb	r4, r0
   3ea40:	cmp	r5, r4
   3ea44:	bne	3e908 <flatcc_json_printer_int8_enum_field@@Base+0x58>
   3ea48:	ldrb	r5, [r6, #28]
   3ea4c:	cmp	r5, #0
   3ea50:	mov	r5, r0
   3ea54:	bne	3ea34 <flatcc_json_printer_int8_enum_field@@Base+0x184>
   3ea58:	b	3e908 <flatcc_json_printer_int8_enum_field@@Base+0x58>

0003ea5c <flatcc_json_printer_int16_enum_field@@Base>:
   3ea5c:	push	{r4, r5, r6, r7, fp, lr}
   3ea60:	add	fp, sp, #16
   3ea64:	mov	r4, r0
   3ea68:	mov	r0, #4
   3ea6c:	ldr	r5, [r1, #8]
   3ea70:	ldr	ip, [fp, #16]
   3ea74:	add	r6, r0, r2, lsl #1
   3ea78:	ldr	r0, [fp, #12]
   3ea7c:	ldr	r2, [fp, #8]
   3ea80:	cmp	r6, r5
   3ea84:	bge	3eaa4 <flatcc_json_printer_int16_enum_field@@Base+0x48>
   3ea88:	ldr	r5, [r1, #4]
   3ea8c:	add	r6, r5, r6
   3ea90:	ldrh	r6, [r6]
   3ea94:	cmp	r6, #0
   3ea98:	ldrne	r5, [r1]
   3ea9c:	addsne	r6, r5, r6
   3eaa0:	bne	3eb40 <flatcc_json_printer_int16_enum_field@@Base+0xe4>
   3eaa4:	ldrb	r6, [r4, #29]
   3eaa8:	mov	r5, r0
   3eaac:	cmp	r6, #0
   3eab0:	popeq	{r4, r5, r6, r7, fp, pc}
   3eab4:	ldr	r0, [r1, #16]
   3eab8:	mov	r7, ip
   3eabc:	add	r6, r0, #1
   3eac0:	cmp	r0, #0
   3eac4:	str	r6, [r1, #16]
   3eac8:	ldrne	r0, [r4, #20]
   3eacc:	addne	r1, r0, #1
   3ead0:	strne	r1, [r4, #20]
   3ead4:	movne	r1, #44	; 0x2c
   3ead8:	strbne	r1, [r0]
   3eadc:	mov	r0, r4
   3eae0:	mov	r1, r3
   3eae4:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3eae8:	ldrb	r0, [r4, #27]
   3eaec:	cmp	r0, #0
   3eaf0:	beq	3eb2c <flatcc_json_printer_int16_enum_field@@Base+0xd0>
   3eaf4:	ubfx	r6, r5, #15, #1
   3eaf8:	ldr	r1, [r4, #20]
   3eafc:	sxth	r0, r5
   3eb00:	cmn	r0, #1
   3eb04:	movle	r0, #45	; 0x2d
   3eb08:	rsble	r5, r5, #0
   3eb0c:	strble	r0, [r1], #1
   3eb10:	uxth	r0, r5
   3eb14:	bl	3c6f0 <flatcc_json_printer_uint16@@Base+0x2c>
   3eb18:	ldr	r1, [r4, #20]
   3eb1c:	add	r0, r0, r6
   3eb20:	add	r0, r1, r0
   3eb24:	str	r0, [r4, #20]
   3eb28:	pop	{r4, r5, r6, r7, fp, pc}
   3eb2c:	sxth	r1, r5
   3eb30:	mov	r0, r4
   3eb34:	mov	r2, r7
   3eb38:	pop	{r4, r5, r6, r7, fp, lr}
   3eb3c:	bx	r2
   3eb40:	ldrh	r5, [r6]
   3eb44:	uxth	r6, r0
   3eb48:	cmp	r5, r6
   3eb4c:	bne	3eab4 <flatcc_json_printer_int16_enum_field@@Base+0x58>
   3eb50:	ldrb	r6, [r4, #28]
   3eb54:	mov	r5, r0
   3eb58:	cmp	r6, #0
   3eb5c:	bne	3eb28 <flatcc_json_printer_int16_enum_field@@Base+0xcc>
   3eb60:	b	3eab4 <flatcc_json_printer_int16_enum_field@@Base+0x58>

0003eb64 <flatcc_json_printer_int32_enum_field@@Base>:
   3eb64:	push	{r4, r5, r6, r7, fp, lr}
   3eb68:	add	fp, sp, #16
   3eb6c:	mov	r4, r0
   3eb70:	mov	r0, #4
   3eb74:	ldr	r5, [r1, #8]
   3eb78:	ldr	ip, [fp, #16]
   3eb7c:	add	r6, r0, r2, lsl #1
   3eb80:	ldr	r0, [fp, #12]
   3eb84:	ldr	r2, [fp, #8]
   3eb88:	cmp	r6, r5
   3eb8c:	bge	3ebac <flatcc_json_printer_int32_enum_field@@Base+0x48>
   3eb90:	ldr	r5, [r1, #4]
   3eb94:	add	r6, r5, r6
   3eb98:	ldrh	r6, [r6]
   3eb9c:	cmp	r6, #0
   3eba0:	ldrne	r5, [r1]
   3eba4:	addsne	r6, r5, r6
   3eba8:	bne	3ec44 <flatcc_json_printer_int32_enum_field@@Base+0xe0>
   3ebac:	ldrb	r6, [r4, #29]
   3ebb0:	mov	r5, r0
   3ebb4:	cmp	r6, #0
   3ebb8:	popeq	{r4, r5, r6, r7, fp, pc}
   3ebbc:	ldr	r0, [r1, #16]
   3ebc0:	mov	r7, ip
   3ebc4:	add	r6, r0, #1
   3ebc8:	cmp	r0, #0
   3ebcc:	str	r6, [r1, #16]
   3ebd0:	ldrne	r0, [r4, #20]
   3ebd4:	addne	r1, r0, #1
   3ebd8:	strne	r1, [r4, #20]
   3ebdc:	movne	r1, #44	; 0x2c
   3ebe0:	strbne	r1, [r0]
   3ebe4:	mov	r0, r4
   3ebe8:	mov	r1, r3
   3ebec:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3ebf0:	ldrb	r0, [r4, #27]
   3ebf4:	cmp	r0, #0
   3ebf8:	beq	3ec30 <flatcc_json_printer_int32_enum_field@@Base+0xcc>
   3ebfc:	ldr	r1, [r4, #20]
   3ec00:	cmn	r5, #1
   3ec04:	lsr	r6, r5, #31
   3ec08:	movle	r0, #45	; 0x2d
   3ec0c:	rsble	r5, r5, #0
   3ec10:	strble	r0, [r1], #1
   3ec14:	mov	r0, r5
   3ec18:	bl	3c890 <flatcc_json_printer_uint32@@Base+0x2c>
   3ec1c:	ldr	r1, [r4, #20]
   3ec20:	add	r0, r0, r6
   3ec24:	add	r0, r1, r0
   3ec28:	str	r0, [r4, #20]
   3ec2c:	pop	{r4, r5, r6, r7, fp, pc}
   3ec30:	mov	r0, r4
   3ec34:	mov	r1, r5
   3ec38:	mov	r2, r7
   3ec3c:	pop	{r4, r5, r6, r7, fp, lr}
   3ec40:	bx	r2
   3ec44:	ldr	r5, [r6]
   3ec48:	cmp	r5, r0
   3ec4c:	bne	3ebbc <flatcc_json_printer_int32_enum_field@@Base+0x58>
   3ec50:	ldrb	r6, [r4, #28]
   3ec54:	mov	r5, r0
   3ec58:	cmp	r6, #0
   3ec5c:	bne	3ec2c <flatcc_json_printer_int32_enum_field@@Base+0xc8>
   3ec60:	b	3ebbc <flatcc_json_printer_int32_enum_field@@Base+0x58>

0003ec64 <flatcc_json_printer_int64_enum_field@@Base>:
   3ec64:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3ec68:	add	fp, sp, #24
   3ec6c:	mov	r4, r0
   3ec70:	mov	r0, #4
   3ec74:	ldr	r5, [r1, #8]
   3ec78:	ldr	r6, [fp, #16]
   3ec7c:	ldr	r9, [fp, #24]
   3ec80:	add	r7, r0, r2, lsl #1
   3ec84:	ldr	r0, [fp, #20]
   3ec88:	ldr	r2, [fp, #8]
   3ec8c:	cmp	r7, r5
   3ec90:	bge	3ecb0 <flatcc_json_printer_int64_enum_field@@Base+0x4c>
   3ec94:	ldr	r5, [r1, #4]
   3ec98:	add	r7, r5, r7
   3ec9c:	ldrh	r7, [r7]
   3eca0:	cmp	r7, #0
   3eca4:	ldrne	r5, [r1]
   3eca8:	addsne	r7, r5, r7
   3ecac:	bne	3ed58 <flatcc_json_printer_int64_enum_field@@Base+0xf4>
   3ecb0:	ldrb	r7, [r4, #29]
   3ecb4:	mov	r8, r6
   3ecb8:	cmp	r7, #0
   3ecbc:	mov	r7, r0
   3ecc0:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   3ecc4:	ldr	r0, [r1, #16]
   3ecc8:	add	r6, r0, #1
   3eccc:	cmp	r0, #0
   3ecd0:	str	r6, [r1, #16]
   3ecd4:	ldrne	r0, [r4, #20]
   3ecd8:	addne	r1, r0, #1
   3ecdc:	strne	r1, [r4, #20]
   3ece0:	movne	r1, #44	; 0x2c
   3ece4:	strbne	r1, [r0]
   3ece8:	mov	r0, r4
   3ecec:	mov	r1, r3
   3ecf0:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3ecf4:	ldrb	r0, [r4, #27]
   3ecf8:	cmp	r0, #0
   3ecfc:	beq	3ed40 <flatcc_json_printer_int64_enum_field@@Base+0xdc>
   3ed00:	ldr	r2, [r4, #20]
   3ed04:	lsr	r5, r7, #31
   3ed08:	cmn	r7, #1
   3ed0c:	bgt	3ed20 <flatcc_json_printer_int64_enum_field@@Base+0xbc>
   3ed10:	mov	r0, #45	; 0x2d
   3ed14:	rsbs	r8, r8, #0
   3ed18:	strb	r0, [r2], #1
   3ed1c:	rsc	r7, r7, #0
   3ed20:	mov	r0, r8
   3ed24:	mov	r1, r7
   3ed28:	bl	3cbf8 <flatcc_json_printer_uint64@@Base+0x30>
   3ed2c:	ldr	r1, [r4, #20]
   3ed30:	add	r0, r0, r5
   3ed34:	add	r0, r1, r0
   3ed38:	str	r0, [r4, #20]
   3ed3c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3ed40:	mov	r0, r4
   3ed44:	mov	r2, r8
   3ed48:	mov	r3, r7
   3ed4c:	mov	r1, r9
   3ed50:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   3ed54:	bx	r1
   3ed58:	ldr	r8, [r7]
   3ed5c:	ldr	r7, [r7, #4]
   3ed60:	eor	ip, r7, r0
   3ed64:	eor	r5, r8, r6
   3ed68:	orrs	r5, r5, ip
   3ed6c:	bne	3ecc4 <flatcc_json_printer_int64_enum_field@@Base+0x60>
   3ed70:	ldrb	r7, [r4, #28]
   3ed74:	mov	r8, r6
   3ed78:	cmp	r7, #0
   3ed7c:	mov	r7, r0
   3ed80:	bne	3ed3c <flatcc_json_printer_int64_enum_field@@Base+0xd8>
   3ed84:	b	3ecc4 <flatcc_json_printer_int64_enum_field@@Base+0x60>

0003ed88 <flatcc_json_printer_bool_enum_field@@Base>:
   3ed88:	push	{r4, r5, r6, r7, fp, lr}
   3ed8c:	add	fp, sp, #16
   3ed90:	mov	r4, r0
   3ed94:	mov	r0, #4
   3ed98:	ldr	r7, [fp, #16]
   3ed9c:	ldr	ip, [fp, #12]
   3eda0:	add	r5, r0, r2, lsl #1
   3eda4:	ldr	r0, [r1, #8]
   3eda8:	ldr	r2, [fp, #8]
   3edac:	cmp	r5, r0
   3edb0:	bge	3edd0 <flatcc_json_printer_bool_enum_field@@Base+0x48>
   3edb4:	ldr	r0, [r1, #4]
   3edb8:	add	r0, r0, r5
   3edbc:	ldrh	r5, [r0]
   3edc0:	cmp	r5, #0
   3edc4:	ldrne	r0, [r1]
   3edc8:	addsne	r5, r0, r5
   3edcc:	bne	3ee80 <flatcc_json_printer_bool_enum_field@@Base+0xf8>
   3edd0:	ldrb	r0, [r4, #29]
   3edd4:	mov	r6, ip
   3edd8:	cmp	r0, #0
   3eddc:	popeq	{r4, r5, r6, r7, fp, pc}
   3ede0:	ldr	r0, [r1, #16]
   3ede4:	add	r5, r0, #1
   3ede8:	cmp	r0, #0
   3edec:	str	r5, [r1, #16]
   3edf0:	ldrne	r0, [r4, #20]
   3edf4:	addne	r1, r0, #1
   3edf8:	strne	r1, [r4, #20]
   3edfc:	movne	r1, #44	; 0x2c
   3ee00:	strbne	r1, [r0]
   3ee04:	mov	r0, r4
   3ee08:	mov	r1, r3
   3ee0c:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3ee10:	ldrb	r0, [r4, #27]
   3ee14:	cmp	r0, #0
   3ee18:	beq	3ee44 <flatcc_json_printer_bool_enum_field@@Base+0xbc>
   3ee1c:	ldr	r0, [r4, #20]
   3ee20:	cmp	r6, #0
   3ee24:	beq	3ee58 <flatcc_json_printer_bool_enum_field@@Base+0xd0>
   3ee28:	mov	r1, #0
   3ee2c:	strb	r1, [r0, #4]
   3ee30:	movw	r1, #29300	; 0x7274
   3ee34:	movt	r1, #25973	; 0x6575
   3ee38:	str	r1, [r0]
   3ee3c:	mov	r0, #4
   3ee40:	b	3ee70 <flatcc_json_printer_bool_enum_field@@Base+0xe8>
   3ee44:	mov	r0, r4
   3ee48:	mov	r1, r6
   3ee4c:	mov	r2, r7
   3ee50:	pop	{r4, r5, r6, r7, fp, lr}
   3ee54:	bx	r2
   3ee58:	mov	r1, #101	; 0x65
   3ee5c:	strh	r1, [r0, #4]
   3ee60:	movw	r1, #24934	; 0x6166
   3ee64:	movt	r1, #29548	; 0x736c
   3ee68:	str	r1, [r0]
   3ee6c:	mov	r0, #5
   3ee70:	ldr	r1, [r4, #20]
   3ee74:	add	r0, r1, r0
   3ee78:	str	r0, [r4, #20]
   3ee7c:	pop	{r4, r5, r6, r7, fp, pc}
   3ee80:	ldrb	r6, [r5]
   3ee84:	cmp	r6, ip
   3ee88:	bne	3ede0 <flatcc_json_printer_bool_enum_field@@Base+0x58>
   3ee8c:	ldrb	r0, [r4, #28]
   3ee90:	mov	r6, ip
   3ee94:	cmp	r0, #0
   3ee98:	bne	3ee7c <flatcc_json_printer_bool_enum_field@@Base+0xf4>
   3ee9c:	b	3ede0 <flatcc_json_printer_bool_enum_field@@Base+0x58>

0003eea0 <flatcc_json_printer_uint8_struct_field@@Base>:
   3eea0:	push	{r4, r5, r6, sl, fp, lr}
   3eea4:	add	fp, sp, #16
   3eea8:	mov	r4, r1
   3eeac:	mov	r5, r0
   3eeb0:	ldrb	r6, [r2, r3]
   3eeb4:	ldr	r2, [fp, #12]
   3eeb8:	ldr	r1, [fp, #8]
   3eebc:	cmp	r4, #0
   3eec0:	ldrne	r0, [r5, #20]
   3eec4:	addne	r3, r0, #1
   3eec8:	strne	r3, [r5, #20]
   3eecc:	movne	r3, #44	; 0x2c
   3eed0:	strbne	r3, [r0]
   3eed4:	mov	r0, r5
   3eed8:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3eedc:	ldr	r0, [r5, #20]
   3eee0:	mov	r1, #0
   3eee4:	cmp	r6, #100	; 0x64
   3eee8:	bcc	3ef3c <flatcc_json_printer_uint8_struct_field@@Base+0x9c>
   3eeec:	strb	r1, [r0, #3]
   3eef0:	movw	r1, #34079	; 0x851f
   3eef4:	movt	r1, #20971	; 0x51eb
   3eef8:	umull	r1, r2, r6, r1
   3eefc:	mov	r1, #48	; 0x30
   3ef00:	orr	r1, r1, r2, lsr #5
   3ef04:	strb	r1, [r0]
   3ef08:	lsr	r1, r2, #5
   3ef0c:	mov	r2, #100	; 0x64
   3ef10:	mls	r1, r1, r2, r6
   3ef14:	movw	r2, #61040	; 0xee70
   3ef18:	movt	r2, #4
   3ef1c:	add	r1, r2, r1, lsl #1
   3ef20:	ldrh	r1, [r1]
   3ef24:	strh	r1, [r0, #1]
   3ef28:	mov	r0, #3
   3ef2c:	ldr	r1, [r5, #20]
   3ef30:	add	r0, r1, r0
   3ef34:	str	r0, [r5, #20]
   3ef38:	pop	{r4, r5, r6, sl, fp, pc}
   3ef3c:	cmp	r6, #10
   3ef40:	bcc	3ef88 <flatcc_json_printer_uint8_struct_field@@Base+0xe8>
   3ef44:	strb	r1, [r0, #2]
   3ef48:	movw	r1, #34079	; 0x851f
   3ef4c:	movt	r1, #20971	; 0x51eb
   3ef50:	umull	r1, r2, r6, r1
   3ef54:	lsr	r1, r2, #5
   3ef58:	mov	r2, #100	; 0x64
   3ef5c:	mls	r1, r1, r2, r6
   3ef60:	movw	r2, #61040	; 0xee70
   3ef64:	movt	r2, #4
   3ef68:	add	r1, r2, r1, lsl #1
   3ef6c:	ldrh	r1, [r1]
   3ef70:	strh	r1, [r0]
   3ef74:	mov	r0, #2
   3ef78:	ldr	r1, [r5, #20]
   3ef7c:	add	r0, r1, r0
   3ef80:	str	r0, [r5, #20]
   3ef84:	pop	{r4, r5, r6, sl, fp, pc}
   3ef88:	strb	r1, [r0, #1]
   3ef8c:	add	r1, r6, #48	; 0x30
   3ef90:	strb	r1, [r0]
   3ef94:	mov	r0, #1
   3ef98:	ldr	r1, [r5, #20]
   3ef9c:	add	r0, r1, r0
   3efa0:	str	r0, [r5, #20]
   3efa4:	pop	{r4, r5, r6, sl, fp, pc}

0003efa8 <flatcc_json_printer_uint16_struct_field@@Base>:
   3efa8:	push	{r4, r5, r6, sl, fp, lr}
   3efac:	add	fp, sp, #16
   3efb0:	mov	r5, r1
   3efb4:	mov	r4, r0
   3efb8:	add	r0, r2, r3
   3efbc:	ldr	r2, [fp, #12]
   3efc0:	ldr	r1, [fp, #8]
   3efc4:	cmp	r5, #0
   3efc8:	ldrh	r6, [r0]
   3efcc:	ldrne	r0, [r4, #20]
   3efd0:	addne	r3, r0, #1
   3efd4:	strne	r3, [r4, #20]
   3efd8:	movne	r3, #44	; 0x2c
   3efdc:	strbne	r3, [r0]
   3efe0:	mov	r0, r4
   3efe4:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3efe8:	ldr	r1, [r4, #20]
   3efec:	mov	r0, r6
   3eff0:	bl	3c6f0 <flatcc_json_printer_uint16@@Base+0x2c>
   3eff4:	ldr	r1, [r4, #20]
   3eff8:	add	r0, r1, r0
   3effc:	str	r0, [r4, #20]
   3f000:	pop	{r4, r5, r6, sl, fp, pc}

0003f004 <flatcc_json_printer_uint32_struct_field@@Base>:
   3f004:	push	{r4, r5, r6, sl, fp, lr}
   3f008:	add	fp, sp, #16
   3f00c:	mov	r5, r1
   3f010:	mov	r4, r0
   3f014:	ldr	r6, [r2, r3]
   3f018:	ldr	r2, [fp, #12]
   3f01c:	ldr	r1, [fp, #8]
   3f020:	cmp	r5, #0
   3f024:	ldrne	r0, [r4, #20]
   3f028:	addne	r3, r0, #1
   3f02c:	strne	r3, [r4, #20]
   3f030:	movne	r3, #44	; 0x2c
   3f034:	strbne	r3, [r0]
   3f038:	mov	r0, r4
   3f03c:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3f040:	ldr	r1, [r4, #20]
   3f044:	mov	r0, r6
   3f048:	bl	3c890 <flatcc_json_printer_uint32@@Base+0x2c>
   3f04c:	ldr	r1, [r4, #20]
   3f050:	add	r0, r1, r0
   3f054:	str	r0, [r4, #20]
   3f058:	pop	{r4, r5, r6, sl, fp, pc}

0003f05c <flatcc_json_printer_uint64_struct_field@@Base>:
   3f05c:	push	{r4, r5, r6, r7, fp, lr}
   3f060:	add	fp, sp, #16
   3f064:	mov	r5, r1
   3f068:	ldr	r7, [r2, r3]!
   3f06c:	mov	r4, r0
   3f070:	ldr	r1, [fp, #8]
   3f074:	cmp	r5, #0
   3f078:	ldrne	r0, [r4, #20]
   3f07c:	ldr	r6, [r2, #4]
   3f080:	ldr	r2, [fp, #12]
   3f084:	addne	r3, r0, #1
   3f088:	strne	r3, [r4, #20]
   3f08c:	movne	r3, #44	; 0x2c
   3f090:	strbne	r3, [r0]
   3f094:	mov	r0, r4
   3f098:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3f09c:	ldr	r2, [r4, #20]
   3f0a0:	mov	r0, r7
   3f0a4:	mov	r1, r6
   3f0a8:	bl	3cbf8 <flatcc_json_printer_uint64@@Base+0x30>
   3f0ac:	ldr	r1, [r4, #20]
   3f0b0:	add	r0, r1, r0
   3f0b4:	str	r0, [r4, #20]
   3f0b8:	pop	{r4, r5, r6, r7, fp, pc}

0003f0bc <flatcc_json_printer_int8_struct_field@@Base>:
   3f0bc:	push	{r4, r5, r6, sl, fp, lr}
   3f0c0:	add	fp, sp, #16
   3f0c4:	mov	r4, r1
   3f0c8:	mov	r5, r0
   3f0cc:	add	r0, r2, r3
   3f0d0:	ldr	r2, [fp, #12]
   3f0d4:	ldr	r1, [fp, #8]
   3f0d8:	cmp	r4, #0
   3f0dc:	ldrsb	r6, [r0]
   3f0e0:	ldrne	r0, [r5, #20]
   3f0e4:	addne	r3, r0, #1
   3f0e8:	strne	r3, [r5, #20]
   3f0ec:	movne	r3, #44	; 0x2c
   3f0f0:	strbne	r3, [r0]
   3f0f4:	mov	r0, r5
   3f0f8:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3f0fc:	ubfx	r0, r6, #7, #1
   3f100:	ldr	r1, [r5, #20]
   3f104:	cmn	r6, #1
   3f108:	movle	r2, #45	; 0x2d
   3f10c:	rsble	r6, r6, #0
   3f110:	strble	r2, [r1], #1
   3f114:	uxtb	r2, r6
   3f118:	cmp	r2, #100	; 0x64
   3f11c:	bcc	3f168 <flatcc_json_printer_int8_struct_field@@Base+0xac>
   3f120:	mov	r3, #0
   3f124:	strb	r3, [r1, #3]
   3f128:	movw	r3, #34079	; 0x851f
   3f12c:	movt	r3, #20971	; 0x51eb
   3f130:	umull	r3, r6, r2, r3
   3f134:	mov	r3, #48	; 0x30
   3f138:	orr	r3, r3, r6, lsr #5
   3f13c:	strb	r3, [r1]
   3f140:	lsr	r3, r6, #5
   3f144:	mov	r6, #100	; 0x64
   3f148:	mls	r2, r3, r6, r2
   3f14c:	movw	r3, #61040	; 0xee70
   3f150:	movt	r3, #4
   3f154:	add	r2, r3, r2, lsl #1
   3f158:	ldrh	r2, [r2]
   3f15c:	strh	r2, [r1, #1]
   3f160:	mov	r1, #3
   3f164:	b	3f1c0 <flatcc_json_printer_int8_struct_field@@Base+0x104>
   3f168:	cmp	r2, #10
   3f16c:	bcc	3f1ac <flatcc_json_printer_int8_struct_field@@Base+0xf0>
   3f170:	mov	r3, #0
   3f174:	strb	r3, [r1, #2]
   3f178:	movw	r3, #34079	; 0x851f
   3f17c:	movt	r3, #20971	; 0x51eb
   3f180:	umull	r3, r6, r2, r3
   3f184:	lsr	r3, r6, #5
   3f188:	mov	r6, #100	; 0x64
   3f18c:	mls	r2, r3, r6, r2
   3f190:	movw	r3, #61040	; 0xee70
   3f194:	movt	r3, #4
   3f198:	add	r2, r3, r2, lsl #1
   3f19c:	ldrh	r2, [r2]
   3f1a0:	strh	r2, [r1]
   3f1a4:	mov	r1, #2
   3f1a8:	b	3f1c0 <flatcc_json_printer_int8_struct_field@@Base+0x104>
   3f1ac:	mov	r2, #0
   3f1b0:	strb	r2, [r1, #1]
   3f1b4:	add	r2, r6, #48	; 0x30
   3f1b8:	strb	r2, [r1]
   3f1bc:	mov	r1, #1
   3f1c0:	add	r0, r1, r0
   3f1c4:	ldr	r1, [r5, #20]
   3f1c8:	add	r0, r1, r0
   3f1cc:	str	r0, [r5, #20]
   3f1d0:	pop	{r4, r5, r6, sl, fp, pc}

0003f1d4 <flatcc_json_printer_int16_struct_field@@Base>:
   3f1d4:	push	{r4, r5, r6, sl, fp, lr}
   3f1d8:	add	fp, sp, #16
   3f1dc:	mov	ip, r1
   3f1e0:	mov	r4, r0
   3f1e4:	add	r0, r2, r3
   3f1e8:	ldr	r2, [fp, #12]
   3f1ec:	ldr	r1, [fp, #8]
   3f1f0:	cmp	ip, #0
   3f1f4:	ldrsh	r5, [r0]
   3f1f8:	ldrne	r0, [r4, #20]
   3f1fc:	addne	r3, r0, #1
   3f200:	strne	r3, [r4, #20]
   3f204:	movne	r3, #44	; 0x2c
   3f208:	strbne	r3, [r0]
   3f20c:	mov	r0, r4
   3f210:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3f214:	ubfx	r6, r5, #15, #1
   3f218:	ldr	r1, [r4, #20]
   3f21c:	cmn	r5, #1
   3f220:	movle	r0, #45	; 0x2d
   3f224:	rsble	r5, r5, #0
   3f228:	strble	r0, [r1], #1
   3f22c:	uxth	r0, r5
   3f230:	bl	3c6f0 <flatcc_json_printer_uint16@@Base+0x2c>
   3f234:	ldr	r1, [r4, #20]
   3f238:	add	r0, r0, r6
   3f23c:	add	r0, r1, r0
   3f240:	str	r0, [r4, #20]
   3f244:	pop	{r4, r5, r6, sl, fp, pc}

0003f248 <flatcc_json_printer_int32_struct_field@@Base>:
   3f248:	push	{r4, r5, r6, sl, fp, lr}
   3f24c:	add	fp, sp, #16
   3f250:	mov	ip, r1
   3f254:	mov	r4, r0
   3f258:	ldr	r5, [r2, r3]
   3f25c:	ldr	r2, [fp, #12]
   3f260:	ldr	r1, [fp, #8]
   3f264:	cmp	ip, #0
   3f268:	ldrne	r0, [r4, #20]
   3f26c:	addne	r3, r0, #1
   3f270:	strne	r3, [r4, #20]
   3f274:	movne	r3, #44	; 0x2c
   3f278:	strbne	r3, [r0]
   3f27c:	mov	r0, r4
   3f280:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3f284:	ldr	r1, [r4, #20]
   3f288:	cmn	r5, #1
   3f28c:	lsr	r6, r5, #31
   3f290:	movle	r0, #45	; 0x2d
   3f294:	rsble	r5, r5, #0
   3f298:	strble	r0, [r1], #1
   3f29c:	mov	r0, r5
   3f2a0:	bl	3c890 <flatcc_json_printer_uint32@@Base+0x2c>
   3f2a4:	ldr	r1, [r4, #20]
   3f2a8:	add	r0, r0, r6
   3f2ac:	add	r0, r1, r0
   3f2b0:	str	r0, [r4, #20]
   3f2b4:	pop	{r4, r5, r6, sl, fp, pc}

0003f2b8 <flatcc_json_printer_int64_struct_field@@Base>:
   3f2b8:	push	{r4, r5, r6, r7, fp, lr}
   3f2bc:	add	fp, sp, #16
   3f2c0:	mov	r5, r1
   3f2c4:	ldr	r7, [r2, r3]!
   3f2c8:	mov	r4, r0
   3f2cc:	ldr	r1, [fp, #8]
   3f2d0:	cmp	r5, #0
   3f2d4:	ldrne	r0, [r4, #20]
   3f2d8:	ldr	r6, [r2, #4]
   3f2dc:	ldr	r2, [fp, #12]
   3f2e0:	addne	r3, r0, #1
   3f2e4:	strne	r3, [r4, #20]
   3f2e8:	movne	r3, #44	; 0x2c
   3f2ec:	strbne	r3, [r0]
   3f2f0:	mov	r0, r4
   3f2f4:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3f2f8:	ldr	r2, [r4, #20]
   3f2fc:	lsr	r5, r6, #31
   3f300:	cmn	r6, #1
   3f304:	bgt	3f318 <flatcc_json_printer_int64_struct_field@@Base+0x60>
   3f308:	mov	r0, #45	; 0x2d
   3f30c:	rsbs	r7, r7, #0
   3f310:	strb	r0, [r2], #1
   3f314:	rsc	r6, r6, #0
   3f318:	mov	r0, r7
   3f31c:	mov	r1, r6
   3f320:	bl	3cbf8 <flatcc_json_printer_uint64@@Base+0x30>
   3f324:	ldr	r1, [r4, #20]
   3f328:	add	r0, r0, r5
   3f32c:	add	r0, r1, r0
   3f330:	str	r0, [r4, #20]
   3f334:	pop	{r4, r5, r6, r7, fp, pc}

0003f338 <flatcc_json_printer_bool_struct_field@@Base>:
   3f338:	push	{r4, r5, fp, lr}
   3f33c:	add	fp, sp, #8
   3f340:	mov	ip, r1
   3f344:	mov	r4, r0
   3f348:	ldrb	r5, [r2, r3]
   3f34c:	ldr	r2, [fp, #12]
   3f350:	ldr	r1, [fp, #8]
   3f354:	cmp	ip, #0
   3f358:	ldrne	r0, [r4, #20]
   3f35c:	addne	r3, r0, #1
   3f360:	strne	r3, [r4, #20]
   3f364:	movne	r3, #44	; 0x2c
   3f368:	strbne	r3, [r0]
   3f36c:	mov	r0, r4
   3f370:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3f374:	ldr	r0, [r4, #20]
   3f378:	cmp	r5, #0
   3f37c:	beq	3f3a8 <flatcc_json_printer_bool_struct_field@@Base+0x70>
   3f380:	mov	r1, #0
   3f384:	strb	r1, [r0, #4]
   3f388:	movw	r1, #29300	; 0x7274
   3f38c:	movt	r1, #25973	; 0x6575
   3f390:	str	r1, [r0]
   3f394:	mov	r0, #4
   3f398:	ldr	r1, [r4, #20]
   3f39c:	add	r0, r1, r0
   3f3a0:	str	r0, [r4, #20]
   3f3a4:	pop	{r4, r5, fp, pc}
   3f3a8:	mov	r1, #101	; 0x65
   3f3ac:	strh	r1, [r0, #4]
   3f3b0:	movw	r1, #24934	; 0x6166
   3f3b4:	movt	r1, #29548	; 0x736c
   3f3b8:	str	r1, [r0]
   3f3bc:	mov	r0, #5
   3f3c0:	ldr	r1, [r4, #20]
   3f3c4:	add	r0, r1, r0
   3f3c8:	str	r0, [r4, #20]
   3f3cc:	pop	{r4, r5, fp, pc}

0003f3d0 <flatcc_json_printer_float_struct_field@@Base>:
   3f3d0:	push	{r4, sl, fp, lr}
   3f3d4:	add	fp, sp, #8
   3f3d8:	vpush	{d8}
   3f3dc:	mov	ip, r1
   3f3e0:	mov	r4, r0
   3f3e4:	add	r0, r2, r3
   3f3e8:	ldr	r2, [fp, #12]
   3f3ec:	ldr	r1, [fp, #8]
   3f3f0:	cmp	ip, #0
   3f3f4:	vldr	s16, [r0]
   3f3f8:	ldrne	r0, [r4, #20]
   3f3fc:	addne	r3, r0, #1
   3f400:	strne	r3, [r4, #20]
   3f404:	movne	r3, #44	; 0x2c
   3f408:	strbne	r3, [r0]
   3f40c:	mov	r0, r4
   3f410:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3f414:	ldr	r0, [r4, #20]
   3f418:	vcvt.f64.f32	d0, s16
   3f41c:	bl	3b290 <flatcc_json_printer_fmt_float@@Base+0x8>
   3f420:	ldr	r1, [r4, #20]
   3f424:	add	r0, r1, r0
   3f428:	str	r0, [r4, #20]
   3f42c:	vpop	{d8}
   3f430:	pop	{r4, sl, fp, pc}

0003f434 <flatcc_json_printer_double_struct_field@@Base>:
   3f434:	push	{r4, sl, fp, lr}
   3f438:	add	fp, sp, #8
   3f43c:	vpush	{d8}
   3f440:	mov	ip, r1
   3f444:	mov	r4, r0
   3f448:	add	r0, r2, r3
   3f44c:	ldr	r2, [fp, #12]
   3f450:	ldr	r1, [fp, #8]
   3f454:	cmp	ip, #0
   3f458:	vldr	d8, [r0]
   3f45c:	ldrne	r0, [r4, #20]
   3f460:	addne	r3, r0, #1
   3f464:	strne	r3, [r4, #20]
   3f468:	movne	r3, #44	; 0x2c
   3f46c:	strbne	r3, [r0]
   3f470:	mov	r0, r4
   3f474:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3f478:	ldr	r0, [r4, #20]
   3f47c:	vorr	d0, d8, d8
   3f480:	bl	3b290 <flatcc_json_printer_fmt_float@@Base+0x8>
   3f484:	ldr	r1, [r4, #20]
   3f488:	add	r0, r1, r0
   3f48c:	str	r0, [r4, #20]
   3f490:	vpop	{d8}
   3f494:	pop	{r4, sl, fp, pc}

0003f498 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   3f498:	push	{r4, r5, r6, r7, fp, lr}
   3f49c:	add	fp, sp, #16
   3f4a0:	mov	r5, r1
   3f4a4:	mov	r4, r0
   3f4a8:	add	r7, fp, #8
   3f4ac:	ldrb	r6, [r2, r3]
   3f4b0:	cmp	r5, #0
   3f4b4:	ldm	r7, {r1, r2, r7}
   3f4b8:	ldrne	r0, [r4, #20]
   3f4bc:	addne	r3, r0, #1
   3f4c0:	strne	r3, [r4, #20]
   3f4c4:	movne	r3, #44	; 0x2c
   3f4c8:	strbne	r3, [r0]
   3f4cc:	mov	r0, r4
   3f4d0:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3f4d4:	ldrb	r0, [r4, #27]
   3f4d8:	cmp	r0, #0
   3f4dc:	beq	3f540 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xa8>
   3f4e0:	ldr	r0, [r4, #20]
   3f4e4:	mov	r1, #0
   3f4e8:	cmp	r6, #100	; 0x64
   3f4ec:	bcc	3f554 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xbc>
   3f4f0:	strb	r1, [r0, #3]
   3f4f4:	movw	r1, #34079	; 0x851f
   3f4f8:	movt	r1, #20971	; 0x51eb
   3f4fc:	umull	r1, r2, r6, r1
   3f500:	mov	r1, #48	; 0x30
   3f504:	orr	r1, r1, r2, lsr #5
   3f508:	strb	r1, [r0]
   3f50c:	lsr	r1, r2, #5
   3f510:	mov	r2, #100	; 0x64
   3f514:	mls	r1, r1, r2, r6
   3f518:	movw	r2, #61040	; 0xee70
   3f51c:	movt	r2, #4
   3f520:	add	r1, r2, r1, lsl #1
   3f524:	ldrh	r1, [r1]
   3f528:	strh	r1, [r0, #1]
   3f52c:	mov	r0, #3
   3f530:	ldr	r1, [r4, #20]
   3f534:	add	r0, r1, r0
   3f538:	str	r0, [r4, #20]
   3f53c:	pop	{r4, r5, r6, r7, fp, pc}
   3f540:	mov	r0, r4
   3f544:	mov	r1, r6
   3f548:	mov	r2, r7
   3f54c:	pop	{r4, r5, r6, r7, fp, lr}
   3f550:	bx	r2
   3f554:	cmp	r6, #10
   3f558:	bcc	3f5a0 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x108>
   3f55c:	strb	r1, [r0, #2]
   3f560:	movw	r1, #34079	; 0x851f
   3f564:	movt	r1, #20971	; 0x51eb
   3f568:	umull	r1, r2, r6, r1
   3f56c:	lsr	r1, r2, #5
   3f570:	mov	r2, #100	; 0x64
   3f574:	mls	r1, r1, r2, r6
   3f578:	movw	r2, #61040	; 0xee70
   3f57c:	movt	r2, #4
   3f580:	add	r1, r2, r1, lsl #1
   3f584:	ldrh	r1, [r1]
   3f588:	strh	r1, [r0]
   3f58c:	mov	r0, #2
   3f590:	ldr	r1, [r4, #20]
   3f594:	add	r0, r1, r0
   3f598:	str	r0, [r4, #20]
   3f59c:	pop	{r4, r5, r6, r7, fp, pc}
   3f5a0:	strb	r1, [r0, #1]
   3f5a4:	add	r1, r6, #48	; 0x30
   3f5a8:	strb	r1, [r0]
   3f5ac:	mov	r0, #1
   3f5b0:	ldr	r1, [r4, #20]
   3f5b4:	add	r0, r1, r0
   3f5b8:	str	r0, [r4, #20]
   3f5bc:	pop	{r4, r5, r6, r7, fp, pc}

0003f5c0 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   3f5c0:	push	{r4, r5, r6, r7, fp, lr}
   3f5c4:	add	fp, sp, #16
   3f5c8:	mov	r5, r1
   3f5cc:	mov	r4, r0
   3f5d0:	add	r0, r2, r3
   3f5d4:	add	r7, fp, #8
   3f5d8:	cmp	r5, #0
   3f5dc:	ldrh	r6, [r0]
   3f5e0:	ldm	r7, {r1, r2, r7}
   3f5e4:	ldrne	r0, [r4, #20]
   3f5e8:	addne	r3, r0, #1
   3f5ec:	strne	r3, [r4, #20]
   3f5f0:	movne	r3, #44	; 0x2c
   3f5f4:	strbne	r3, [r0]
   3f5f8:	mov	r0, r4
   3f5fc:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3f600:	ldrb	r0, [r4, #27]
   3f604:	cmp	r0, #0
   3f608:	beq	3f628 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x68>
   3f60c:	ldr	r1, [r4, #20]
   3f610:	mov	r0, r6
   3f614:	bl	3c6f0 <flatcc_json_printer_uint16@@Base+0x2c>
   3f618:	ldr	r1, [r4, #20]
   3f61c:	add	r0, r1, r0
   3f620:	str	r0, [r4, #20]
   3f624:	pop	{r4, r5, r6, r7, fp, pc}
   3f628:	mov	r0, r4
   3f62c:	mov	r1, r6
   3f630:	mov	r2, r7
   3f634:	pop	{r4, r5, r6, r7, fp, lr}
   3f638:	bx	r2

0003f63c <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   3f63c:	push	{r4, r5, r6, r7, fp, lr}
   3f640:	add	fp, sp, #16
   3f644:	mov	r5, r1
   3f648:	mov	r4, r0
   3f64c:	add	r7, fp, #8
   3f650:	ldr	r6, [r2, r3]
   3f654:	cmp	r5, #0
   3f658:	ldm	r7, {r1, r2, r7}
   3f65c:	ldrne	r0, [r4, #20]
   3f660:	addne	r3, r0, #1
   3f664:	strne	r3, [r4, #20]
   3f668:	movne	r3, #44	; 0x2c
   3f66c:	strbne	r3, [r0]
   3f670:	mov	r0, r4
   3f674:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3f678:	ldrb	r0, [r4, #27]
   3f67c:	cmp	r0, #0
   3f680:	beq	3f6a0 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x64>
   3f684:	ldr	r1, [r4, #20]
   3f688:	mov	r0, r6
   3f68c:	bl	3c890 <flatcc_json_printer_uint32@@Base+0x2c>
   3f690:	ldr	r1, [r4, #20]
   3f694:	add	r0, r1, r0
   3f698:	str	r0, [r4, #20]
   3f69c:	pop	{r4, r5, r6, r7, fp, pc}
   3f6a0:	mov	r0, r4
   3f6a4:	mov	r1, r6
   3f6a8:	mov	r2, r7
   3f6ac:	pop	{r4, r5, r6, r7, fp, lr}
   3f6b0:	bx	r2

0003f6b4 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   3f6b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3f6b8:	add	fp, sp, #24
   3f6bc:	ldr	r6, [r2, r3]!
   3f6c0:	mov	r5, r1
   3f6c4:	mov	r4, r0
   3f6c8:	add	r8, fp, #8
   3f6cc:	cmp	r5, #0
   3f6d0:	ldr	r7, [r2, #4]
   3f6d4:	ldm	r8, {r1, r2, r8}
   3f6d8:	ldrne	r0, [r4, #20]
   3f6dc:	addne	r3, r0, #1
   3f6e0:	strne	r3, [r4, #20]
   3f6e4:	movne	r3, #44	; 0x2c
   3f6e8:	strbne	r3, [r0]
   3f6ec:	mov	r0, r4
   3f6f0:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3f6f4:	ldrb	r0, [r4, #27]
   3f6f8:	cmp	r0, #0
   3f6fc:	beq	3f720 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x6c>
   3f700:	ldr	r2, [r4, #20]
   3f704:	mov	r0, r6
   3f708:	mov	r1, r7
   3f70c:	bl	3cbf8 <flatcc_json_printer_uint64@@Base+0x30>
   3f710:	ldr	r1, [r4, #20]
   3f714:	add	r0, r1, r0
   3f718:	str	r0, [r4, #20]
   3f71c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3f720:	mov	r0, r4
   3f724:	mov	r2, r6
   3f728:	mov	r3, r7
   3f72c:	mov	r1, r8
   3f730:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3f734:	bx	r1

0003f738 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   3f738:	push	{r4, r5, r6, r7, fp, lr}
   3f73c:	add	fp, sp, #16
   3f740:	mov	r5, r1
   3f744:	mov	r4, r0
   3f748:	add	r0, r2, r3
   3f74c:	add	r7, fp, #8
   3f750:	cmp	r5, #0
   3f754:	ldrsb	r6, [r0]
   3f758:	ldm	r7, {r1, r2, r7}
   3f75c:	ldrne	r0, [r4, #20]
   3f760:	addne	r3, r0, #1
   3f764:	strne	r3, [r4, #20]
   3f768:	movne	r3, #44	; 0x2c
   3f76c:	strbne	r3, [r0]
   3f770:	mov	r0, r4
   3f774:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3f778:	ldrb	r0, [r4, #27]
   3f77c:	cmp	r0, #0
   3f780:	beq	3f7f0 <flatcc_json_printer_int8_enum_struct_field@@Base+0xb8>
   3f784:	ubfx	r0, r6, #7, #1
   3f788:	ldr	r1, [r4, #20]
   3f78c:	cmn	r6, #1
   3f790:	movle	r2, #45	; 0x2d
   3f794:	rsble	r6, r6, #0
   3f798:	strble	r2, [r1], #1
   3f79c:	uxtb	r2, r6
   3f7a0:	cmp	r2, #100	; 0x64
   3f7a4:	bcc	3f804 <flatcc_json_printer_int8_enum_struct_field@@Base+0xcc>
   3f7a8:	mov	r3, #0
   3f7ac:	strb	r3, [r1, #3]
   3f7b0:	movw	r3, #34079	; 0x851f
   3f7b4:	movt	r3, #20971	; 0x51eb
   3f7b8:	umull	r3, r6, r2, r3
   3f7bc:	mov	r3, #48	; 0x30
   3f7c0:	orr	r3, r3, r6, lsr #5
   3f7c4:	strb	r3, [r1]
   3f7c8:	lsr	r3, r6, #5
   3f7cc:	mov	r6, #100	; 0x64
   3f7d0:	mls	r2, r3, r6, r2
   3f7d4:	movw	r3, #61040	; 0xee70
   3f7d8:	movt	r3, #4
   3f7dc:	add	r2, r3, r2, lsl #1
   3f7e0:	ldrh	r2, [r2]
   3f7e4:	strh	r2, [r1, #1]
   3f7e8:	mov	r1, #3
   3f7ec:	b	3f85c <flatcc_json_printer_int8_enum_struct_field@@Base+0x124>
   3f7f0:	mov	r0, r4
   3f7f4:	mov	r1, r6
   3f7f8:	mov	r2, r7
   3f7fc:	pop	{r4, r5, r6, r7, fp, lr}
   3f800:	bx	r2
   3f804:	cmp	r2, #10
   3f808:	bcc	3f848 <flatcc_json_printer_int8_enum_struct_field@@Base+0x110>
   3f80c:	mov	r3, #0
   3f810:	strb	r3, [r1, #2]
   3f814:	movw	r3, #34079	; 0x851f
   3f818:	movt	r3, #20971	; 0x51eb
   3f81c:	umull	r3, r6, r2, r3
   3f820:	lsr	r3, r6, #5
   3f824:	mov	r6, #100	; 0x64
   3f828:	mls	r2, r3, r6, r2
   3f82c:	movw	r3, #61040	; 0xee70
   3f830:	movt	r3, #4
   3f834:	add	r2, r3, r2, lsl #1
   3f838:	ldrh	r2, [r2]
   3f83c:	strh	r2, [r1]
   3f840:	mov	r1, #2
   3f844:	b	3f85c <flatcc_json_printer_int8_enum_struct_field@@Base+0x124>
   3f848:	mov	r2, #0
   3f84c:	strb	r2, [r1, #1]
   3f850:	add	r2, r6, #48	; 0x30
   3f854:	strb	r2, [r1]
   3f858:	mov	r1, #1
   3f85c:	add	r0, r1, r0
   3f860:	ldr	r1, [r4, #20]
   3f864:	add	r0, r1, r0
   3f868:	str	r0, [r4, #20]
   3f86c:	pop	{r4, r5, r6, r7, fp, pc}

0003f870 <flatcc_json_printer_int16_enum_struct_field@@Base>:
   3f870:	push	{r4, r5, r6, r7, fp, lr}
   3f874:	add	fp, sp, #16
   3f878:	mov	r5, r1
   3f87c:	mov	r4, r0
   3f880:	add	r0, r2, r3
   3f884:	add	r7, fp, #8
   3f888:	cmp	r5, #0
   3f88c:	ldrsh	r6, [r0]
   3f890:	ldm	r7, {r1, r2, r7}
   3f894:	ldrne	r0, [r4, #20]
   3f898:	addne	r3, r0, #1
   3f89c:	strne	r3, [r4, #20]
   3f8a0:	movne	r3, #44	; 0x2c
   3f8a4:	strbne	r3, [r0]
   3f8a8:	mov	r0, r4
   3f8ac:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3f8b0:	ldrb	r0, [r4, #27]
   3f8b4:	cmp	r0, #0
   3f8b8:	beq	3f8f0 <flatcc_json_printer_int16_enum_struct_field@@Base+0x80>
   3f8bc:	ubfx	r5, r6, #15, #1
   3f8c0:	ldr	r1, [r4, #20]
   3f8c4:	cmn	r6, #1
   3f8c8:	movle	r0, #45	; 0x2d
   3f8cc:	rsble	r6, r6, #0
   3f8d0:	strble	r0, [r1], #1
   3f8d4:	uxth	r0, r6
   3f8d8:	bl	3c6f0 <flatcc_json_printer_uint16@@Base+0x2c>
   3f8dc:	ldr	r1, [r4, #20]
   3f8e0:	add	r0, r0, r5
   3f8e4:	add	r0, r1, r0
   3f8e8:	str	r0, [r4, #20]
   3f8ec:	pop	{r4, r5, r6, r7, fp, pc}
   3f8f0:	mov	r0, r4
   3f8f4:	mov	r1, r6
   3f8f8:	mov	r2, r7
   3f8fc:	pop	{r4, r5, r6, r7, fp, lr}
   3f900:	bx	r2

0003f904 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   3f904:	push	{r4, r5, r6, r7, fp, lr}
   3f908:	add	fp, sp, #16
   3f90c:	mov	r5, r1
   3f910:	mov	r4, r0
   3f914:	add	r7, fp, #8
   3f918:	ldr	r6, [r2, r3]
   3f91c:	cmp	r5, #0
   3f920:	ldm	r7, {r1, r2, r7}
   3f924:	ldrne	r0, [r4, #20]
   3f928:	addne	r3, r0, #1
   3f92c:	strne	r3, [r4, #20]
   3f930:	movne	r3, #44	; 0x2c
   3f934:	strbne	r3, [r0]
   3f938:	mov	r0, r4
   3f93c:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3f940:	ldrb	r0, [r4, #27]
   3f944:	cmp	r0, #0
   3f948:	beq	3f980 <flatcc_json_printer_int32_enum_struct_field@@Base+0x7c>
   3f94c:	ldr	r1, [r4, #20]
   3f950:	cmn	r6, #1
   3f954:	lsr	r5, r6, #31
   3f958:	movle	r0, #45	; 0x2d
   3f95c:	rsble	r6, r6, #0
   3f960:	strble	r0, [r1], #1
   3f964:	mov	r0, r6
   3f968:	bl	3c890 <flatcc_json_printer_uint32@@Base+0x2c>
   3f96c:	ldr	r1, [r4, #20]
   3f970:	add	r0, r0, r5
   3f974:	add	r0, r1, r0
   3f978:	str	r0, [r4, #20]
   3f97c:	pop	{r4, r5, r6, r7, fp, pc}
   3f980:	mov	r0, r4
   3f984:	mov	r1, r6
   3f988:	mov	r2, r7
   3f98c:	pop	{r4, r5, r6, r7, fp, lr}
   3f990:	bx	r2

0003f994 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   3f994:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3f998:	add	fp, sp, #24
   3f99c:	ldr	r7, [r2, r3]!
   3f9a0:	mov	r6, r1
   3f9a4:	mov	r4, r0
   3f9a8:	add	r8, fp, #8
   3f9ac:	cmp	r6, #0
   3f9b0:	ldr	r5, [r2, #4]
   3f9b4:	ldm	r8, {r1, r2, r8}
   3f9b8:	ldrne	r0, [r4, #20]
   3f9bc:	addne	r3, r0, #1
   3f9c0:	strne	r3, [r4, #20]
   3f9c4:	movne	r3, #44	; 0x2c
   3f9c8:	strbne	r3, [r0]
   3f9cc:	mov	r0, r4
   3f9d0:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3f9d4:	ldrb	r0, [r4, #27]
   3f9d8:	cmp	r0, #0
   3f9dc:	beq	3fa20 <flatcc_json_printer_int64_enum_struct_field@@Base+0x8c>
   3f9e0:	ldr	r2, [r4, #20]
   3f9e4:	lsr	r6, r5, #31
   3f9e8:	cmn	r5, #1
   3f9ec:	bgt	3fa00 <flatcc_json_printer_int64_enum_struct_field@@Base+0x6c>
   3f9f0:	mov	r0, #45	; 0x2d
   3f9f4:	rsbs	r7, r7, #0
   3f9f8:	strb	r0, [r2], #1
   3f9fc:	rsc	r5, r5, #0
   3fa00:	mov	r0, r7
   3fa04:	mov	r1, r5
   3fa08:	bl	3cbf8 <flatcc_json_printer_uint64@@Base+0x30>
   3fa0c:	ldr	r1, [r4, #20]
   3fa10:	add	r0, r0, r6
   3fa14:	add	r0, r1, r0
   3fa18:	str	r0, [r4, #20]
   3fa1c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3fa20:	mov	r0, r4
   3fa24:	mov	r2, r7
   3fa28:	mov	r3, r5
   3fa2c:	mov	r1, r8
   3fa30:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3fa34:	bx	r1

0003fa38 <flatcc_json_printer_bool_enum_struct_field@@Base>:
   3fa38:	push	{r4, r5, r6, r7, fp, lr}
   3fa3c:	add	fp, sp, #16
   3fa40:	mov	r5, r1
   3fa44:	mov	r4, r0
   3fa48:	add	r7, fp, #8
   3fa4c:	ldrb	r6, [r2, r3]
   3fa50:	cmp	r5, #0
   3fa54:	ldm	r7, {r1, r2, r7}
   3fa58:	ldrne	r0, [r4, #20]
   3fa5c:	addne	r3, r0, #1
   3fa60:	strne	r3, [r4, #20]
   3fa64:	movne	r3, #44	; 0x2c
   3fa68:	strbne	r3, [r0]
   3fa6c:	mov	r0, r4
   3fa70:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3fa74:	ldrb	r0, [r4, #27]
   3fa78:	cmp	r0, #0
   3fa7c:	beq	3fab4 <flatcc_json_printer_bool_enum_struct_field@@Base+0x7c>
   3fa80:	ldr	r0, [r4, #20]
   3fa84:	cmp	r6, #0
   3fa88:	beq	3fac8 <flatcc_json_printer_bool_enum_struct_field@@Base+0x90>
   3fa8c:	mov	r1, #0
   3fa90:	strb	r1, [r0, #4]
   3fa94:	movw	r1, #29300	; 0x7274
   3fa98:	movt	r1, #25973	; 0x6575
   3fa9c:	str	r1, [r0]
   3faa0:	mov	r0, #4
   3faa4:	ldr	r1, [r4, #20]
   3faa8:	add	r0, r1, r0
   3faac:	str	r0, [r4, #20]
   3fab0:	pop	{r4, r5, r6, r7, fp, pc}
   3fab4:	mov	r0, r4
   3fab8:	mov	r1, r6
   3fabc:	mov	r2, r7
   3fac0:	pop	{r4, r5, r6, r7, fp, lr}
   3fac4:	bx	r2
   3fac8:	mov	r1, #101	; 0x65
   3facc:	strh	r1, [r0, #4]
   3fad0:	movw	r1, #24934	; 0x6166
   3fad4:	movt	r1, #29548	; 0x736c
   3fad8:	str	r1, [r0]
   3fadc:	mov	r0, #5
   3fae0:	ldr	r1, [r4, #20]
   3fae4:	add	r0, r1, r0
   3fae8:	str	r0, [r4, #20]
   3faec:	pop	{r4, r5, r6, r7, fp, pc}

0003faf0 <flatcc_json_printer_utype_vector_field@@Base>:
   3faf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3faf4:	add	fp, sp, #28
   3faf8:	sub	sp, sp, #4
   3fafc:	mov	r4, r0
   3fb00:	mov	r0, #4
   3fb04:	add	r0, r0, r2, lsl #1
   3fb08:	ldr	r2, [r1, #8]
   3fb0c:	cmp	r0, r2
   3fb10:	bge	3fb30 <flatcc_json_printer_utype_vector_field@@Base+0x40>
   3fb14:	ldr	r2, [r1, #4]
   3fb18:	add	r0, r2, r0
   3fb1c:	ldrh	r0, [r0]
   3fb20:	cmp	r0, #0
   3fb24:	ldrne	r2, [r1]
   3fb28:	addsne	r9, r2, r0
   3fb2c:	bne	3fb38 <flatcc_json_printer_utype_vector_field@@Base+0x48>
   3fb30:	sub	sp, fp, #28
   3fb34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3fb38:	ldr	r0, [r1, #16]
   3fb3c:	ldr	r2, [fp, #8]
   3fb40:	add	r7, r0, #1
   3fb44:	cmp	r0, #0
   3fb48:	str	r7, [r1, #16]
   3fb4c:	ldrne	r0, [r4, #20]
   3fb50:	addne	r1, r0, #1
   3fb54:	strne	r1, [r4, #20]
   3fb58:	movne	r1, #44	; 0x2c
   3fb5c:	strbne	r1, [r0]
   3fb60:	mov	r1, r3
   3fb64:	ldr	r0, [r9]
   3fb68:	ldr	r8, [r9, r0]!
   3fb6c:	mov	r0, r4
   3fb70:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   3fb74:	ldr	r1, [r4, #32]
   3fb78:	ldr	r0, [r4, #20]
   3fb7c:	cmp	r8, #0
   3fb80:	add	r1, r1, #1
   3fb84:	str	r1, [r4, #32]
   3fb88:	add	r1, r0, #1
   3fb8c:	str	r1, [r4, #20]
   3fb90:	mov	r1, #91	; 0x5b
   3fb94:	strb	r1, [r0]
   3fb98:	beq	3ff1c <flatcc_json_printer_utype_vector_field@@Base+0x42c>
   3fb9c:	ldrb	r1, [r4, #25]
   3fba0:	ldr	r0, [r4, #20]
   3fba4:	cmp	r1, #0
   3fba8:	beq	3fc74 <flatcc_json_printer_utype_vector_field@@Base+0x184>
   3fbac:	add	r1, r0, #1
   3fbb0:	str	r1, [r4, #20]
   3fbb4:	mov	r1, #10
   3fbb8:	strb	r1, [r0]
   3fbbc:	ldr	r0, [r4, #20]
   3fbc0:	ldrb	r2, [r4, #25]
   3fbc4:	ldr	r3, [r4, #32]
   3fbc8:	ldr	r1, [r4, #16]
   3fbcc:	mla	r7, r3, r2, r0
   3fbd0:	mul	r5, r3, r2
   3fbd4:	cmp	r7, r1
   3fbd8:	bls	3fc48 <flatcc_json_printer_utype_vector_field@@Base+0x158>
   3fbdc:	cmp	r0, r1
   3fbe0:	bcc	3fbfc <flatcc_json_printer_utype_vector_field@@Base+0x10c>
   3fbe4:	ldr	r2, [r4, #44]	; 0x2c
   3fbe8:	mov	r0, r4
   3fbec:	mov	r1, #0
   3fbf0:	blx	r2
   3fbf4:	ldr	r1, [r4, #16]
   3fbf8:	ldr	r0, [r4, #20]
   3fbfc:	sub	r6, r1, r0
   3fc00:	cmp	r6, r5
   3fc04:	bcs	3fc48 <flatcc_json_printer_utype_vector_field@@Base+0x158>
   3fc08:	mov	r1, #32
   3fc0c:	mov	r2, r6
   3fc10:	bl	14ef0 <memset@plt>
   3fc14:	ldr	r0, [r4, #20]
   3fc18:	ldr	r2, [r4, #44]	; 0x2c
   3fc1c:	mov	r1, #0
   3fc20:	add	r0, r0, r6
   3fc24:	str	r0, [r4, #20]
   3fc28:	mov	r0, r4
   3fc2c:	blx	r2
   3fc30:	ldr	r1, [r4, #16]
   3fc34:	ldr	r0, [r4, #20]
   3fc38:	sub	r5, r5, r6
   3fc3c:	sub	r6, r1, r0
   3fc40:	cmp	r5, r6
   3fc44:	bhi	3fc08 <flatcc_json_printer_utype_vector_field@@Base+0x118>
   3fc48:	mov	r1, #32
   3fc4c:	mov	r2, r5
   3fc50:	bl	14ef0 <memset@plt>
   3fc54:	ldr	r0, [r4, #20]
   3fc58:	add	r0, r0, r5
   3fc5c:	str	r0, [r4, #20]
   3fc60:	ldrb	r1, [r9, #4]
   3fc64:	mov	r2, #0
   3fc68:	cmp	r1, #100	; 0x64
   3fc6c:	bcs	3fca4 <flatcc_json_printer_utype_vector_field@@Base+0x1b4>
   3fc70:	b	3fce8 <flatcc_json_printer_utype_vector_field@@Base+0x1f8>
   3fc74:	ldr	r1, [r4, #16]
   3fc78:	cmp	r0, r1
   3fc7c:	bcc	3fc94 <flatcc_json_printer_utype_vector_field@@Base+0x1a4>
   3fc80:	ldr	r2, [r4, #44]	; 0x2c
   3fc84:	mov	r0, r4
   3fc88:	mov	r1, #0
   3fc8c:	blx	r2
   3fc90:	ldr	r0, [r4, #20]
   3fc94:	ldrb	r1, [r9, #4]
   3fc98:	mov	r2, #0
   3fc9c:	cmp	r1, #100	; 0x64
   3fca0:	bcc	3fce8 <flatcc_json_printer_utype_vector_field@@Base+0x1f8>
   3fca4:	strb	r2, [r0, #3]
   3fca8:	movw	r2, #34079	; 0x851f
   3fcac:	movt	r2, #20971	; 0x51eb
   3fcb0:	umull	r2, r3, r1, r2
   3fcb4:	mov	r2, #48	; 0x30
   3fcb8:	orr	r2, r2, r3, lsr #5
   3fcbc:	strb	r2, [r0]
   3fcc0:	lsr	r2, r3, #5
   3fcc4:	mov	r3, #100	; 0x64
   3fcc8:	mls	r1, r2, r3, r1
   3fccc:	movw	r2, #61040	; 0xee70
   3fcd0:	movt	r2, #4
   3fcd4:	add	r1, r2, r1, lsl #1
   3fcd8:	ldrh	r1, [r1]
   3fcdc:	strh	r1, [r0, #1]
   3fce0:	mov	r0, #3
   3fce4:	b	3fd38 <flatcc_json_printer_utype_vector_field@@Base+0x248>
   3fce8:	cmp	r1, #10
   3fcec:	bcc	3fd28 <flatcc_json_printer_utype_vector_field@@Base+0x238>
   3fcf0:	strb	r2, [r0, #2]
   3fcf4:	movw	r2, #34079	; 0x851f
   3fcf8:	movt	r2, #20971	; 0x51eb
   3fcfc:	umull	r2, r3, r1, r2
   3fd00:	lsr	r2, r3, #5
   3fd04:	mov	r3, #100	; 0x64
   3fd08:	mls	r1, r2, r3, r1
   3fd0c:	movw	r2, #61040	; 0xee70
   3fd10:	movt	r2, #4
   3fd14:	add	r1, r2, r1, lsl #1
   3fd18:	ldrh	r1, [r1]
   3fd1c:	strh	r1, [r0]
   3fd20:	mov	r0, #2
   3fd24:	b	3fd38 <flatcc_json_printer_utype_vector_field@@Base+0x248>
   3fd28:	add	r1, r1, #48	; 0x30
   3fd2c:	strb	r2, [r0, #1]
   3fd30:	strb	r1, [r0]
   3fd34:	mov	r0, #1
   3fd38:	ldr	r1, [r4, #20]
   3fd3c:	subs	r8, r8, #1
   3fd40:	add	r0, r1, r0
   3fd44:	str	r0, [r4, #20]
   3fd48:	beq	3ff1c <flatcc_json_printer_utype_vector_field@@Base+0x42c>
   3fd4c:	ldr	r0, [r4, #20]
   3fd50:	add	r7, r9, #5
   3fd54:	mov	r9, #44	; 0x2c
   3fd58:	mov	sl, #0
   3fd5c:	add	r1, r0, #1
   3fd60:	str	r1, [r4, #20]
   3fd64:	strb	r9, [r0]
   3fd68:	ldrb	r1, [r4, #25]
   3fd6c:	ldr	r0, [r4, #20]
   3fd70:	cmp	r1, #0
   3fd74:	beq	3fe40 <flatcc_json_printer_utype_vector_field@@Base+0x350>
   3fd78:	add	r1, r0, #1
   3fd7c:	str	r1, [r4, #20]
   3fd80:	mov	r1, #10
   3fd84:	strb	r1, [r0]
   3fd88:	ldr	r0, [r4, #20]
   3fd8c:	ldrb	r2, [r4, #25]
   3fd90:	ldr	r3, [r4, #32]
   3fd94:	ldr	r1, [r4, #16]
   3fd98:	mla	r6, r3, r2, r0
   3fd9c:	mul	r5, r3, r2
   3fda0:	cmp	r6, r1
   3fda4:	bls	3fe14 <flatcc_json_printer_utype_vector_field@@Base+0x324>
   3fda8:	cmp	r0, r1
   3fdac:	bcc	3fdc8 <flatcc_json_printer_utype_vector_field@@Base+0x2d8>
   3fdb0:	ldr	r2, [r4, #44]	; 0x2c
   3fdb4:	mov	r0, r4
   3fdb8:	mov	r1, #0
   3fdbc:	blx	r2
   3fdc0:	ldr	r1, [r4, #16]
   3fdc4:	ldr	r0, [r4, #20]
   3fdc8:	sub	r6, r1, r0
   3fdcc:	cmp	r6, r5
   3fdd0:	bcs	3fe14 <flatcc_json_printer_utype_vector_field@@Base+0x324>
   3fdd4:	mov	r1, #32
   3fdd8:	mov	r2, r6
   3fddc:	bl	14ef0 <memset@plt>
   3fde0:	ldr	r0, [r4, #20]
   3fde4:	ldr	r2, [r4, #44]	; 0x2c
   3fde8:	mov	r1, #0
   3fdec:	add	r0, r0, r6
   3fdf0:	str	r0, [r4, #20]
   3fdf4:	mov	r0, r4
   3fdf8:	blx	r2
   3fdfc:	ldr	r1, [r4, #16]
   3fe00:	ldr	r0, [r4, #20]
   3fe04:	sub	r5, r5, r6
   3fe08:	sub	r6, r1, r0
   3fe0c:	cmp	r5, r6
   3fe10:	bhi	3fdd4 <flatcc_json_printer_utype_vector_field@@Base+0x2e4>
   3fe14:	mov	r1, #32
   3fe18:	mov	r2, r5
   3fe1c:	bl	14ef0 <memset@plt>
   3fe20:	ldr	r0, [r4, #20]
   3fe24:	add	r0, r0, r5
   3fe28:	str	r0, [r4, #20]
   3fe2c:	ldrb	r1, [r7]
   3fe30:	sub	r8, r8, #1
   3fe34:	cmp	r1, #100	; 0x64
   3fe38:	bcs	3fe70 <flatcc_json_printer_utype_vector_field@@Base+0x380>
   3fe3c:	b	3feb4 <flatcc_json_printer_utype_vector_field@@Base+0x3c4>
   3fe40:	ldr	r1, [r4, #16]
   3fe44:	cmp	r0, r1
   3fe48:	bcc	3fe60 <flatcc_json_printer_utype_vector_field@@Base+0x370>
   3fe4c:	ldr	r2, [r4, #44]	; 0x2c
   3fe50:	mov	r0, r4
   3fe54:	mov	r1, #0
   3fe58:	blx	r2
   3fe5c:	ldr	r0, [r4, #20]
   3fe60:	ldrb	r1, [r7]
   3fe64:	sub	r8, r8, #1
   3fe68:	cmp	r1, #100	; 0x64
   3fe6c:	bcc	3feb4 <flatcc_json_printer_utype_vector_field@@Base+0x3c4>
   3fe70:	movw	r2, #34079	; 0x851f
   3fe74:	strb	sl, [r0, #3]
   3fe78:	movt	r2, #20971	; 0x51eb
   3fe7c:	umull	r2, r3, r1, r2
   3fe80:	mov	r2, #48	; 0x30
   3fe84:	orr	r2, r2, r3, lsr #5
   3fe88:	strb	r2, [r0]
   3fe8c:	lsr	r2, r3, #5
   3fe90:	mov	r3, #100	; 0x64
   3fe94:	mls	r1, r2, r3, r1
   3fe98:	movw	r2, #61040	; 0xee70
   3fe9c:	movt	r2, #4
   3fea0:	add	r1, r2, r1, lsl #1
   3fea4:	ldrh	r1, [r1]
   3fea8:	strh	r1, [r0, #1]
   3feac:	mov	r0, #3
   3feb0:	b	3ff04 <flatcc_json_printer_utype_vector_field@@Base+0x414>
   3feb4:	cmp	r1, #10
   3feb8:	bcc	3fef4 <flatcc_json_printer_utype_vector_field@@Base+0x404>
   3febc:	movw	r2, #34079	; 0x851f
   3fec0:	strb	sl, [r0, #2]
   3fec4:	movt	r2, #20971	; 0x51eb
   3fec8:	umull	r2, r3, r1, r2
   3fecc:	lsr	r2, r3, #5
   3fed0:	mov	r3, #100	; 0x64
   3fed4:	mls	r1, r2, r3, r1
   3fed8:	movw	r2, #61040	; 0xee70
   3fedc:	movt	r2, #4
   3fee0:	add	r1, r2, r1, lsl #1
   3fee4:	ldrh	r1, [r1]
   3fee8:	strh	r1, [r0]
   3feec:	mov	r0, #2
   3fef0:	b	3ff04 <flatcc_json_printer_utype_vector_field@@Base+0x414>
   3fef4:	add	r1, r1, #48	; 0x30
   3fef8:	strb	sl, [r0, #1]
   3fefc:	strb	r1, [r0]
   3ff00:	mov	r0, #1
   3ff04:	ldr	r1, [r4, #20]
   3ff08:	add	r7, r7, #1
   3ff0c:	cmp	r8, #0
   3ff10:	add	r0, r1, r0
   3ff14:	str	r0, [r4, #20]
   3ff18:	bne	3fd5c <flatcc_json_printer_utype_vector_field@@Base+0x26c>
   3ff1c:	ldrb	r1, [r4, #25]
   3ff20:	ldr	r0, [r4, #20]
   3ff24:	cmp	r1, #0
   3ff28:	beq	3ffe8 <flatcc_json_printer_utype_vector_field@@Base+0x4f8>
   3ff2c:	add	r1, r0, #1
   3ff30:	str	r1, [r4, #20]
   3ff34:	mov	r1, #10
   3ff38:	strb	r1, [r0]
   3ff3c:	ldr	r0, [r4, #32]
   3ff40:	sub	r2, r0, #1
   3ff44:	str	r2, [r4, #32]
   3ff48:	ldrb	r3, [r4, #25]
   3ff4c:	ldr	r0, [r4, #20]
   3ff50:	ldr	r1, [r4, #16]
   3ff54:	mla	r7, r2, r3, r0
   3ff58:	mul	r5, r2, r3
   3ff5c:	cmp	r7, r1
   3ff60:	bls	3ffd0 <flatcc_json_printer_utype_vector_field@@Base+0x4e0>
   3ff64:	cmp	r0, r1
   3ff68:	bcc	3ff84 <flatcc_json_printer_utype_vector_field@@Base+0x494>
   3ff6c:	ldr	r2, [r4, #44]	; 0x2c
   3ff70:	mov	r0, r4
   3ff74:	mov	r1, #0
   3ff78:	blx	r2
   3ff7c:	ldr	r1, [r4, #16]
   3ff80:	ldr	r0, [r4, #20]
   3ff84:	sub	r6, r1, r0
   3ff88:	cmp	r6, r5
   3ff8c:	bcs	3ffd0 <flatcc_json_printer_utype_vector_field@@Base+0x4e0>
   3ff90:	mov	r1, #32
   3ff94:	mov	r2, r6
   3ff98:	bl	14ef0 <memset@plt>
   3ff9c:	ldr	r0, [r4, #20]
   3ffa0:	ldr	r2, [r4, #44]	; 0x2c
   3ffa4:	mov	r1, #0
   3ffa8:	add	r0, r0, r6
   3ffac:	str	r0, [r4, #20]
   3ffb0:	mov	r0, r4
   3ffb4:	blx	r2
   3ffb8:	ldr	r1, [r4, #16]
   3ffbc:	ldr	r0, [r4, #20]
   3ffc0:	sub	r5, r5, r6
   3ffc4:	sub	r6, r1, r0
   3ffc8:	cmp	r5, r6
   3ffcc:	bhi	3ff90 <flatcc_json_printer_utype_vector_field@@Base+0x4a0>
   3ffd0:	mov	r1, #32
   3ffd4:	mov	r2, r5
   3ffd8:	bl	14ef0 <memset@plt>
   3ffdc:	ldr	r0, [r4, #20]
   3ffe0:	add	r0, r0, r5
   3ffe4:	str	r0, [r4, #20]
   3ffe8:	add	r1, r0, #1
   3ffec:	str	r1, [r4, #20]
   3fff0:	mov	r1, #93	; 0x5d
   3fff4:	strb	r1, [r0]
   3fff8:	sub	sp, fp, #28
   3fffc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040000 <flatcc_json_printer_uint8_vector_field@@Base>:
   40000:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40004:	add	fp, sp, #28
   40008:	sub	sp, sp, #4
   4000c:	mov	r4, r0
   40010:	mov	r0, #4
   40014:	add	r0, r0, r2, lsl #1
   40018:	ldr	r2, [r1, #8]
   4001c:	cmp	r0, r2
   40020:	bge	40040 <flatcc_json_printer_uint8_vector_field@@Base+0x40>
   40024:	ldr	r2, [r1, #4]
   40028:	add	r0, r2, r0
   4002c:	ldrh	r0, [r0]
   40030:	cmp	r0, #0
   40034:	ldrne	r2, [r1]
   40038:	addsne	r9, r2, r0
   4003c:	bne	40048 <flatcc_json_printer_uint8_vector_field@@Base+0x48>
   40040:	sub	sp, fp, #28
   40044:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40048:	ldr	r0, [r1, #16]
   4004c:	ldr	r2, [fp, #8]
   40050:	add	r7, r0, #1
   40054:	cmp	r0, #0
   40058:	str	r7, [r1, #16]
   4005c:	ldrne	r0, [r4, #20]
   40060:	addne	r1, r0, #1
   40064:	strne	r1, [r4, #20]
   40068:	movne	r1, #44	; 0x2c
   4006c:	strbne	r1, [r0]
   40070:	mov	r1, r3
   40074:	ldr	r0, [r9]
   40078:	ldr	r8, [r9, r0]!
   4007c:	mov	r0, r4
   40080:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   40084:	ldr	r1, [r4, #32]
   40088:	ldr	r0, [r4, #20]
   4008c:	cmp	r8, #0
   40090:	add	r1, r1, #1
   40094:	str	r1, [r4, #32]
   40098:	add	r1, r0, #1
   4009c:	str	r1, [r4, #20]
   400a0:	mov	r1, #91	; 0x5b
   400a4:	strb	r1, [r0]
   400a8:	beq	4042c <flatcc_json_printer_uint8_vector_field@@Base+0x42c>
   400ac:	ldrb	r1, [r4, #25]
   400b0:	ldr	r0, [r4, #20]
   400b4:	cmp	r1, #0
   400b8:	beq	40184 <flatcc_json_printer_uint8_vector_field@@Base+0x184>
   400bc:	add	r1, r0, #1
   400c0:	str	r1, [r4, #20]
   400c4:	mov	r1, #10
   400c8:	strb	r1, [r0]
   400cc:	ldr	r0, [r4, #20]
   400d0:	ldrb	r2, [r4, #25]
   400d4:	ldr	r3, [r4, #32]
   400d8:	ldr	r1, [r4, #16]
   400dc:	mla	r7, r3, r2, r0
   400e0:	mul	r5, r3, r2
   400e4:	cmp	r7, r1
   400e8:	bls	40158 <flatcc_json_printer_uint8_vector_field@@Base+0x158>
   400ec:	cmp	r0, r1
   400f0:	bcc	4010c <flatcc_json_printer_uint8_vector_field@@Base+0x10c>
   400f4:	ldr	r2, [r4, #44]	; 0x2c
   400f8:	mov	r0, r4
   400fc:	mov	r1, #0
   40100:	blx	r2
   40104:	ldr	r1, [r4, #16]
   40108:	ldr	r0, [r4, #20]
   4010c:	sub	r6, r1, r0
   40110:	cmp	r6, r5
   40114:	bcs	40158 <flatcc_json_printer_uint8_vector_field@@Base+0x158>
   40118:	mov	r1, #32
   4011c:	mov	r2, r6
   40120:	bl	14ef0 <memset@plt>
   40124:	ldr	r0, [r4, #20]
   40128:	ldr	r2, [r4, #44]	; 0x2c
   4012c:	mov	r1, #0
   40130:	add	r0, r0, r6
   40134:	str	r0, [r4, #20]
   40138:	mov	r0, r4
   4013c:	blx	r2
   40140:	ldr	r1, [r4, #16]
   40144:	ldr	r0, [r4, #20]
   40148:	sub	r5, r5, r6
   4014c:	sub	r6, r1, r0
   40150:	cmp	r5, r6
   40154:	bhi	40118 <flatcc_json_printer_uint8_vector_field@@Base+0x118>
   40158:	mov	r1, #32
   4015c:	mov	r2, r5
   40160:	bl	14ef0 <memset@plt>
   40164:	ldr	r0, [r4, #20]
   40168:	add	r0, r0, r5
   4016c:	str	r0, [r4, #20]
   40170:	ldrb	r1, [r9, #4]
   40174:	mov	r2, #0
   40178:	cmp	r1, #100	; 0x64
   4017c:	bcs	401b4 <flatcc_json_printer_uint8_vector_field@@Base+0x1b4>
   40180:	b	401f8 <flatcc_json_printer_uint8_vector_field@@Base+0x1f8>
   40184:	ldr	r1, [r4, #16]
   40188:	cmp	r0, r1
   4018c:	bcc	401a4 <flatcc_json_printer_uint8_vector_field@@Base+0x1a4>
   40190:	ldr	r2, [r4, #44]	; 0x2c
   40194:	mov	r0, r4
   40198:	mov	r1, #0
   4019c:	blx	r2
   401a0:	ldr	r0, [r4, #20]
   401a4:	ldrb	r1, [r9, #4]
   401a8:	mov	r2, #0
   401ac:	cmp	r1, #100	; 0x64
   401b0:	bcc	401f8 <flatcc_json_printer_uint8_vector_field@@Base+0x1f8>
   401b4:	strb	r2, [r0, #3]
   401b8:	movw	r2, #34079	; 0x851f
   401bc:	movt	r2, #20971	; 0x51eb
   401c0:	umull	r2, r3, r1, r2
   401c4:	mov	r2, #48	; 0x30
   401c8:	orr	r2, r2, r3, lsr #5
   401cc:	strb	r2, [r0]
   401d0:	lsr	r2, r3, #5
   401d4:	mov	r3, #100	; 0x64
   401d8:	mls	r1, r2, r3, r1
   401dc:	movw	r2, #61040	; 0xee70
   401e0:	movt	r2, #4
   401e4:	add	r1, r2, r1, lsl #1
   401e8:	ldrh	r1, [r1]
   401ec:	strh	r1, [r0, #1]
   401f0:	mov	r0, #3
   401f4:	b	40248 <flatcc_json_printer_uint8_vector_field@@Base+0x248>
   401f8:	cmp	r1, #10
   401fc:	bcc	40238 <flatcc_json_printer_uint8_vector_field@@Base+0x238>
   40200:	strb	r2, [r0, #2]
   40204:	movw	r2, #34079	; 0x851f
   40208:	movt	r2, #20971	; 0x51eb
   4020c:	umull	r2, r3, r1, r2
   40210:	lsr	r2, r3, #5
   40214:	mov	r3, #100	; 0x64
   40218:	mls	r1, r2, r3, r1
   4021c:	movw	r2, #61040	; 0xee70
   40220:	movt	r2, #4
   40224:	add	r1, r2, r1, lsl #1
   40228:	ldrh	r1, [r1]
   4022c:	strh	r1, [r0]
   40230:	mov	r0, #2
   40234:	b	40248 <flatcc_json_printer_uint8_vector_field@@Base+0x248>
   40238:	add	r1, r1, #48	; 0x30
   4023c:	strb	r2, [r0, #1]
   40240:	strb	r1, [r0]
   40244:	mov	r0, #1
   40248:	ldr	r1, [r4, #20]
   4024c:	subs	r8, r8, #1
   40250:	add	r0, r1, r0
   40254:	str	r0, [r4, #20]
   40258:	beq	4042c <flatcc_json_printer_uint8_vector_field@@Base+0x42c>
   4025c:	ldr	r0, [r4, #20]
   40260:	add	r7, r9, #5
   40264:	mov	r9, #44	; 0x2c
   40268:	mov	sl, #0
   4026c:	add	r1, r0, #1
   40270:	str	r1, [r4, #20]
   40274:	strb	r9, [r0]
   40278:	ldrb	r1, [r4, #25]
   4027c:	ldr	r0, [r4, #20]
   40280:	cmp	r1, #0
   40284:	beq	40350 <flatcc_json_printer_uint8_vector_field@@Base+0x350>
   40288:	add	r1, r0, #1
   4028c:	str	r1, [r4, #20]
   40290:	mov	r1, #10
   40294:	strb	r1, [r0]
   40298:	ldr	r0, [r4, #20]
   4029c:	ldrb	r2, [r4, #25]
   402a0:	ldr	r3, [r4, #32]
   402a4:	ldr	r1, [r4, #16]
   402a8:	mla	r6, r3, r2, r0
   402ac:	mul	r5, r3, r2
   402b0:	cmp	r6, r1
   402b4:	bls	40324 <flatcc_json_printer_uint8_vector_field@@Base+0x324>
   402b8:	cmp	r0, r1
   402bc:	bcc	402d8 <flatcc_json_printer_uint8_vector_field@@Base+0x2d8>
   402c0:	ldr	r2, [r4, #44]	; 0x2c
   402c4:	mov	r0, r4
   402c8:	mov	r1, #0
   402cc:	blx	r2
   402d0:	ldr	r1, [r4, #16]
   402d4:	ldr	r0, [r4, #20]
   402d8:	sub	r6, r1, r0
   402dc:	cmp	r6, r5
   402e0:	bcs	40324 <flatcc_json_printer_uint8_vector_field@@Base+0x324>
   402e4:	mov	r1, #32
   402e8:	mov	r2, r6
   402ec:	bl	14ef0 <memset@plt>
   402f0:	ldr	r0, [r4, #20]
   402f4:	ldr	r2, [r4, #44]	; 0x2c
   402f8:	mov	r1, #0
   402fc:	add	r0, r0, r6
   40300:	str	r0, [r4, #20]
   40304:	mov	r0, r4
   40308:	blx	r2
   4030c:	ldr	r1, [r4, #16]
   40310:	ldr	r0, [r4, #20]
   40314:	sub	r5, r5, r6
   40318:	sub	r6, r1, r0
   4031c:	cmp	r5, r6
   40320:	bhi	402e4 <flatcc_json_printer_uint8_vector_field@@Base+0x2e4>
   40324:	mov	r1, #32
   40328:	mov	r2, r5
   4032c:	bl	14ef0 <memset@plt>
   40330:	ldr	r0, [r4, #20]
   40334:	add	r0, r0, r5
   40338:	str	r0, [r4, #20]
   4033c:	ldrb	r1, [r7]
   40340:	sub	r8, r8, #1
   40344:	cmp	r1, #100	; 0x64
   40348:	bcs	40380 <flatcc_json_printer_uint8_vector_field@@Base+0x380>
   4034c:	b	403c4 <flatcc_json_printer_uint8_vector_field@@Base+0x3c4>
   40350:	ldr	r1, [r4, #16]
   40354:	cmp	r0, r1
   40358:	bcc	40370 <flatcc_json_printer_uint8_vector_field@@Base+0x370>
   4035c:	ldr	r2, [r4, #44]	; 0x2c
   40360:	mov	r0, r4
   40364:	mov	r1, #0
   40368:	blx	r2
   4036c:	ldr	r0, [r4, #20]
   40370:	ldrb	r1, [r7]
   40374:	sub	r8, r8, #1
   40378:	cmp	r1, #100	; 0x64
   4037c:	bcc	403c4 <flatcc_json_printer_uint8_vector_field@@Base+0x3c4>
   40380:	movw	r2, #34079	; 0x851f
   40384:	strb	sl, [r0, #3]
   40388:	movt	r2, #20971	; 0x51eb
   4038c:	umull	r2, r3, r1, r2
   40390:	mov	r2, #48	; 0x30
   40394:	orr	r2, r2, r3, lsr #5
   40398:	strb	r2, [r0]
   4039c:	lsr	r2, r3, #5
   403a0:	mov	r3, #100	; 0x64
   403a4:	mls	r1, r2, r3, r1
   403a8:	movw	r2, #61040	; 0xee70
   403ac:	movt	r2, #4
   403b0:	add	r1, r2, r1, lsl #1
   403b4:	ldrh	r1, [r1]
   403b8:	strh	r1, [r0, #1]
   403bc:	mov	r0, #3
   403c0:	b	40414 <flatcc_json_printer_uint8_vector_field@@Base+0x414>
   403c4:	cmp	r1, #10
   403c8:	bcc	40404 <flatcc_json_printer_uint8_vector_field@@Base+0x404>
   403cc:	movw	r2, #34079	; 0x851f
   403d0:	strb	sl, [r0, #2]
   403d4:	movt	r2, #20971	; 0x51eb
   403d8:	umull	r2, r3, r1, r2
   403dc:	lsr	r2, r3, #5
   403e0:	mov	r3, #100	; 0x64
   403e4:	mls	r1, r2, r3, r1
   403e8:	movw	r2, #61040	; 0xee70
   403ec:	movt	r2, #4
   403f0:	add	r1, r2, r1, lsl #1
   403f4:	ldrh	r1, [r1]
   403f8:	strh	r1, [r0]
   403fc:	mov	r0, #2
   40400:	b	40414 <flatcc_json_printer_uint8_vector_field@@Base+0x414>
   40404:	add	r1, r1, #48	; 0x30
   40408:	strb	sl, [r0, #1]
   4040c:	strb	r1, [r0]
   40410:	mov	r0, #1
   40414:	ldr	r1, [r4, #20]
   40418:	add	r7, r7, #1
   4041c:	cmp	r8, #0
   40420:	add	r0, r1, r0
   40424:	str	r0, [r4, #20]
   40428:	bne	4026c <flatcc_json_printer_uint8_vector_field@@Base+0x26c>
   4042c:	ldrb	r1, [r4, #25]
   40430:	ldr	r0, [r4, #20]
   40434:	cmp	r1, #0
   40438:	beq	404f8 <flatcc_json_printer_uint8_vector_field@@Base+0x4f8>
   4043c:	add	r1, r0, #1
   40440:	str	r1, [r4, #20]
   40444:	mov	r1, #10
   40448:	strb	r1, [r0]
   4044c:	ldr	r0, [r4, #32]
   40450:	sub	r2, r0, #1
   40454:	str	r2, [r4, #32]
   40458:	ldrb	r3, [r4, #25]
   4045c:	ldr	r0, [r4, #20]
   40460:	ldr	r1, [r4, #16]
   40464:	mla	r7, r2, r3, r0
   40468:	mul	r5, r2, r3
   4046c:	cmp	r7, r1
   40470:	bls	404e0 <flatcc_json_printer_uint8_vector_field@@Base+0x4e0>
   40474:	cmp	r0, r1
   40478:	bcc	40494 <flatcc_json_printer_uint8_vector_field@@Base+0x494>
   4047c:	ldr	r2, [r4, #44]	; 0x2c
   40480:	mov	r0, r4
   40484:	mov	r1, #0
   40488:	blx	r2
   4048c:	ldr	r1, [r4, #16]
   40490:	ldr	r0, [r4, #20]
   40494:	sub	r6, r1, r0
   40498:	cmp	r6, r5
   4049c:	bcs	404e0 <flatcc_json_printer_uint8_vector_field@@Base+0x4e0>
   404a0:	mov	r1, #32
   404a4:	mov	r2, r6
   404a8:	bl	14ef0 <memset@plt>
   404ac:	ldr	r0, [r4, #20]
   404b0:	ldr	r2, [r4, #44]	; 0x2c
   404b4:	mov	r1, #0
   404b8:	add	r0, r0, r6
   404bc:	str	r0, [r4, #20]
   404c0:	mov	r0, r4
   404c4:	blx	r2
   404c8:	ldr	r1, [r4, #16]
   404cc:	ldr	r0, [r4, #20]
   404d0:	sub	r5, r5, r6
   404d4:	sub	r6, r1, r0
   404d8:	cmp	r5, r6
   404dc:	bhi	404a0 <flatcc_json_printer_uint8_vector_field@@Base+0x4a0>
   404e0:	mov	r1, #32
   404e4:	mov	r2, r5
   404e8:	bl	14ef0 <memset@plt>
   404ec:	ldr	r0, [r4, #20]
   404f0:	add	r0, r0, r5
   404f4:	str	r0, [r4, #20]
   404f8:	add	r1, r0, #1
   404fc:	str	r1, [r4, #20]
   40500:	mov	r1, #93	; 0x5d
   40504:	strb	r1, [r0]
   40508:	sub	sp, fp, #28
   4050c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040510 <flatcc_json_printer_uint16_vector_field@@Base>:
   40510:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40514:	add	fp, sp, #28
   40518:	sub	sp, sp, #4
   4051c:	mov	r4, r0
   40520:	mov	r0, #4
   40524:	add	r0, r0, r2, lsl #1
   40528:	ldr	r2, [r1, #8]
   4052c:	cmp	r0, r2
   40530:	bge	40550 <flatcc_json_printer_uint16_vector_field@@Base+0x40>
   40534:	ldr	r2, [r1, #4]
   40538:	add	r0, r2, r0
   4053c:	ldrh	r0, [r0]
   40540:	cmp	r0, #0
   40544:	ldrne	r2, [r1]
   40548:	addsne	r8, r2, r0
   4054c:	bne	40558 <flatcc_json_printer_uint16_vector_field@@Base+0x48>
   40550:	sub	sp, fp, #28
   40554:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40558:	ldr	r0, [r1, #16]
   4055c:	ldr	r2, [fp, #8]
   40560:	add	r7, r0, #1
   40564:	cmp	r0, #0
   40568:	str	r7, [r1, #16]
   4056c:	ldrne	r0, [r4, #20]
   40570:	addne	r1, r0, #1
   40574:	strne	r1, [r4, #20]
   40578:	movne	r1, #44	; 0x2c
   4057c:	strbne	r1, [r0]
   40580:	mov	r1, r3
   40584:	ldr	r0, [r8]
   40588:	ldr	r7, [r8, r0]!
   4058c:	mov	r0, r4
   40590:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   40594:	ldr	r1, [r4, #32]
   40598:	ldr	r0, [r4, #20]
   4059c:	cmp	r7, #0
   405a0:	add	r1, r1, #1
   405a4:	str	r1, [r4, #32]
   405a8:	add	r1, r0, #1
   405ac:	str	r1, [r4, #20]
   405b0:	mov	r1, #91	; 0x5b
   405b4:	strb	r1, [r0]
   405b8:	beq	407e0 <flatcc_json_printer_uint16_vector_field@@Base+0x2d0>
   405bc:	ldrb	r0, [r4, #25]
   405c0:	ldr	r1, [r4, #20]
   405c4:	cmp	r0, #0
   405c8:	beq	40684 <flatcc_json_printer_uint16_vector_field@@Base+0x174>
   405cc:	add	r0, r1, #1
   405d0:	str	r0, [r4, #20]
   405d4:	mov	r0, #10
   405d8:	strb	r0, [r1]
   405dc:	ldr	r0, [r4, #20]
   405e0:	ldrb	r2, [r4, #25]
   405e4:	ldr	r3, [r4, #32]
   405e8:	ldr	r1, [r4, #16]
   405ec:	mla	r6, r3, r2, r0
   405f0:	mul	r5, r3, r2
   405f4:	cmp	r6, r1
   405f8:	bls	40668 <flatcc_json_printer_uint16_vector_field@@Base+0x158>
   405fc:	cmp	r0, r1
   40600:	bcc	4061c <flatcc_json_printer_uint16_vector_field@@Base+0x10c>
   40604:	ldr	r2, [r4, #44]	; 0x2c
   40608:	mov	r0, r4
   4060c:	mov	r1, #0
   40610:	blx	r2
   40614:	ldr	r1, [r4, #16]
   40618:	ldr	r0, [r4, #20]
   4061c:	sub	r6, r1, r0
   40620:	cmp	r6, r5
   40624:	bcs	40668 <flatcc_json_printer_uint16_vector_field@@Base+0x158>
   40628:	mov	r1, #32
   4062c:	mov	r2, r6
   40630:	bl	14ef0 <memset@plt>
   40634:	ldr	r0, [r4, #20]
   40638:	ldr	r2, [r4, #44]	; 0x2c
   4063c:	mov	r1, #0
   40640:	add	r0, r0, r6
   40644:	str	r0, [r4, #20]
   40648:	mov	r0, r4
   4064c:	blx	r2
   40650:	ldr	r1, [r4, #16]
   40654:	ldr	r0, [r4, #20]
   40658:	sub	r5, r5, r6
   4065c:	sub	r6, r1, r0
   40660:	cmp	r5, r6
   40664:	bhi	40628 <flatcc_json_printer_uint16_vector_field@@Base+0x118>
   40668:	mov	r1, #32
   4066c:	mov	r2, r5
   40670:	bl	14ef0 <memset@plt>
   40674:	ldr	r0, [r4, #20]
   40678:	add	r1, r0, r5
   4067c:	str	r1, [r4, #20]
   40680:	b	406a4 <flatcc_json_printer_uint16_vector_field@@Base+0x194>
   40684:	ldr	r0, [r4, #16]
   40688:	cmp	r1, r0
   4068c:	bcc	406a4 <flatcc_json_printer_uint16_vector_field@@Base+0x194>
   40690:	ldr	r2, [r4, #44]	; 0x2c
   40694:	mov	r0, r4
   40698:	mov	r1, #0
   4069c:	blx	r2
   406a0:	ldr	r1, [r4, #20]
   406a4:	ldrh	r0, [r8, #4]
   406a8:	bl	3c6f0 <flatcc_json_printer_uint16@@Base+0x2c>
   406ac:	ldr	r1, [r4, #20]
   406b0:	subs	r9, r7, #1
   406b4:	add	r0, r1, r0
   406b8:	str	r0, [r4, #20]
   406bc:	beq	407e0 <flatcc_json_printer_uint16_vector_field@@Base+0x2d0>
   406c0:	ldr	r0, [r4, #20]
   406c4:	add	r7, r8, #6
   406c8:	mov	r8, #44	; 0x2c
   406cc:	mov	sl, #10
   406d0:	add	r1, r0, #1
   406d4:	sub	r9, r9, #1
   406d8:	str	r1, [r4, #20]
   406dc:	strb	r8, [r0]
   406e0:	ldrb	r0, [r4, #25]
   406e4:	ldr	r1, [r4, #20]
   406e8:	cmp	r0, #0
   406ec:	beq	407a4 <flatcc_json_printer_uint16_vector_field@@Base+0x294>
   406f0:	add	r0, r1, #1
   406f4:	str	r0, [r4, #20]
   406f8:	strb	sl, [r1]
   406fc:	ldr	r0, [r4, #20]
   40700:	ldrb	r2, [r4, #25]
   40704:	ldr	r3, [r4, #32]
   40708:	ldr	r1, [r4, #16]
   4070c:	mla	r6, r3, r2, r0
   40710:	mul	r5, r3, r2
   40714:	cmp	r6, r1
   40718:	bls	40788 <flatcc_json_printer_uint16_vector_field@@Base+0x278>
   4071c:	cmp	r0, r1
   40720:	bcc	4073c <flatcc_json_printer_uint16_vector_field@@Base+0x22c>
   40724:	ldr	r2, [r4, #44]	; 0x2c
   40728:	mov	r0, r4
   4072c:	mov	r1, #0
   40730:	blx	r2
   40734:	ldr	r1, [r4, #16]
   40738:	ldr	r0, [r4, #20]
   4073c:	sub	r6, r1, r0
   40740:	cmp	r6, r5
   40744:	bcs	40788 <flatcc_json_printer_uint16_vector_field@@Base+0x278>
   40748:	mov	r1, #32
   4074c:	mov	r2, r6
   40750:	bl	14ef0 <memset@plt>
   40754:	ldr	r0, [r4, #20]
   40758:	ldr	r2, [r4, #44]	; 0x2c
   4075c:	mov	r1, #0
   40760:	add	r0, r0, r6
   40764:	str	r0, [r4, #20]
   40768:	mov	r0, r4
   4076c:	blx	r2
   40770:	ldr	r1, [r4, #16]
   40774:	ldr	r0, [r4, #20]
   40778:	sub	r5, r5, r6
   4077c:	sub	r6, r1, r0
   40780:	cmp	r5, r6
   40784:	bhi	40748 <flatcc_json_printer_uint16_vector_field@@Base+0x238>
   40788:	mov	r1, #32
   4078c:	mov	r2, r5
   40790:	bl	14ef0 <memset@plt>
   40794:	ldr	r0, [r4, #20]
   40798:	add	r1, r0, r5
   4079c:	str	r1, [r4, #20]
   407a0:	b	407c4 <flatcc_json_printer_uint16_vector_field@@Base+0x2b4>
   407a4:	ldr	r0, [r4, #16]
   407a8:	cmp	r1, r0
   407ac:	bcc	407c4 <flatcc_json_printer_uint16_vector_field@@Base+0x2b4>
   407b0:	ldr	r2, [r4, #44]	; 0x2c
   407b4:	mov	r0, r4
   407b8:	mov	r1, #0
   407bc:	blx	r2
   407c0:	ldr	r1, [r4, #20]
   407c4:	ldrh	r0, [r7], #2
   407c8:	bl	3c6f0 <flatcc_json_printer_uint16@@Base+0x2c>
   407cc:	ldr	r1, [r4, #20]
   407d0:	cmp	r9, #0
   407d4:	add	r0, r1, r0
   407d8:	str	r0, [r4, #20]
   407dc:	bne	406d0 <flatcc_json_printer_uint16_vector_field@@Base+0x1c0>
   407e0:	ldrb	r1, [r4, #25]
   407e4:	ldr	r0, [r4, #20]
   407e8:	cmp	r1, #0
   407ec:	beq	408ac <flatcc_json_printer_uint16_vector_field@@Base+0x39c>
   407f0:	add	r1, r0, #1
   407f4:	str	r1, [r4, #20]
   407f8:	mov	r1, #10
   407fc:	strb	r1, [r0]
   40800:	ldr	r0, [r4, #32]
   40804:	sub	r2, r0, #1
   40808:	str	r2, [r4, #32]
   4080c:	ldrb	r3, [r4, #25]
   40810:	ldr	r0, [r4, #20]
   40814:	ldr	r1, [r4, #16]
   40818:	mla	r7, r2, r3, r0
   4081c:	mul	r5, r2, r3
   40820:	cmp	r7, r1
   40824:	bls	40894 <flatcc_json_printer_uint16_vector_field@@Base+0x384>
   40828:	cmp	r0, r1
   4082c:	bcc	40848 <flatcc_json_printer_uint16_vector_field@@Base+0x338>
   40830:	ldr	r2, [r4, #44]	; 0x2c
   40834:	mov	r0, r4
   40838:	mov	r1, #0
   4083c:	blx	r2
   40840:	ldr	r1, [r4, #16]
   40844:	ldr	r0, [r4, #20]
   40848:	sub	r6, r1, r0
   4084c:	cmp	r6, r5
   40850:	bcs	40894 <flatcc_json_printer_uint16_vector_field@@Base+0x384>
   40854:	mov	r1, #32
   40858:	mov	r2, r6
   4085c:	bl	14ef0 <memset@plt>
   40860:	ldr	r0, [r4, #20]
   40864:	ldr	r2, [r4, #44]	; 0x2c
   40868:	mov	r1, #0
   4086c:	add	r0, r0, r6
   40870:	str	r0, [r4, #20]
   40874:	mov	r0, r4
   40878:	blx	r2
   4087c:	ldr	r1, [r4, #16]
   40880:	ldr	r0, [r4, #20]
   40884:	sub	r5, r5, r6
   40888:	sub	r6, r1, r0
   4088c:	cmp	r5, r6
   40890:	bhi	40854 <flatcc_json_printer_uint16_vector_field@@Base+0x344>
   40894:	mov	r1, #32
   40898:	mov	r2, r5
   4089c:	bl	14ef0 <memset@plt>
   408a0:	ldr	r0, [r4, #20]
   408a4:	add	r0, r0, r5
   408a8:	str	r0, [r4, #20]
   408ac:	add	r1, r0, #1
   408b0:	str	r1, [r4, #20]
   408b4:	mov	r1, #93	; 0x5d
   408b8:	strb	r1, [r0]
   408bc:	sub	sp, fp, #28
   408c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000408c4 <flatcc_json_printer_uint32_vector_field@@Base>:
   408c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   408c8:	add	fp, sp, #28
   408cc:	sub	sp, sp, #4
   408d0:	mov	r4, r0
   408d4:	mov	r0, #4
   408d8:	add	r0, r0, r2, lsl #1
   408dc:	ldr	r2, [r1, #8]
   408e0:	cmp	r0, r2
   408e4:	bge	40904 <flatcc_json_printer_uint32_vector_field@@Base+0x40>
   408e8:	ldr	r2, [r1, #4]
   408ec:	add	r0, r2, r0
   408f0:	ldrh	r0, [r0]
   408f4:	cmp	r0, #0
   408f8:	ldrne	r2, [r1]
   408fc:	addsne	r8, r2, r0
   40900:	bne	4090c <flatcc_json_printer_uint32_vector_field@@Base+0x48>
   40904:	sub	sp, fp, #28
   40908:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4090c:	ldr	r0, [r1, #16]
   40910:	ldr	r2, [fp, #8]
   40914:	add	r7, r0, #1
   40918:	cmp	r0, #0
   4091c:	str	r7, [r1, #16]
   40920:	ldrne	r0, [r4, #20]
   40924:	addne	r1, r0, #1
   40928:	strne	r1, [r4, #20]
   4092c:	movne	r1, #44	; 0x2c
   40930:	strbne	r1, [r0]
   40934:	mov	r1, r3
   40938:	ldr	r0, [r8]
   4093c:	ldr	r7, [r8, r0]!
   40940:	mov	r0, r4
   40944:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   40948:	ldr	r1, [r4, #32]
   4094c:	ldr	r0, [r4, #20]
   40950:	cmp	r7, #0
   40954:	add	r1, r1, #1
   40958:	str	r1, [r4, #32]
   4095c:	add	r1, r0, #1
   40960:	str	r1, [r4, #20]
   40964:	mov	r1, #91	; 0x5b
   40968:	strb	r1, [r0]
   4096c:	beq	40b94 <flatcc_json_printer_uint32_vector_field@@Base+0x2d0>
   40970:	ldrb	r0, [r4, #25]
   40974:	ldr	r1, [r4, #20]
   40978:	cmp	r0, #0
   4097c:	beq	40a38 <flatcc_json_printer_uint32_vector_field@@Base+0x174>
   40980:	add	r0, r1, #1
   40984:	str	r0, [r4, #20]
   40988:	mov	r0, #10
   4098c:	strb	r0, [r1]
   40990:	ldr	r0, [r4, #20]
   40994:	ldrb	r2, [r4, #25]
   40998:	ldr	r3, [r4, #32]
   4099c:	ldr	r1, [r4, #16]
   409a0:	mla	r6, r3, r2, r0
   409a4:	mul	r5, r3, r2
   409a8:	cmp	r6, r1
   409ac:	bls	40a1c <flatcc_json_printer_uint32_vector_field@@Base+0x158>
   409b0:	cmp	r0, r1
   409b4:	bcc	409d0 <flatcc_json_printer_uint32_vector_field@@Base+0x10c>
   409b8:	ldr	r2, [r4, #44]	; 0x2c
   409bc:	mov	r0, r4
   409c0:	mov	r1, #0
   409c4:	blx	r2
   409c8:	ldr	r1, [r4, #16]
   409cc:	ldr	r0, [r4, #20]
   409d0:	sub	r6, r1, r0
   409d4:	cmp	r6, r5
   409d8:	bcs	40a1c <flatcc_json_printer_uint32_vector_field@@Base+0x158>
   409dc:	mov	r1, #32
   409e0:	mov	r2, r6
   409e4:	bl	14ef0 <memset@plt>
   409e8:	ldr	r0, [r4, #20]
   409ec:	ldr	r2, [r4, #44]	; 0x2c
   409f0:	mov	r1, #0
   409f4:	add	r0, r0, r6
   409f8:	str	r0, [r4, #20]
   409fc:	mov	r0, r4
   40a00:	blx	r2
   40a04:	ldr	r1, [r4, #16]
   40a08:	ldr	r0, [r4, #20]
   40a0c:	sub	r5, r5, r6
   40a10:	sub	r6, r1, r0
   40a14:	cmp	r5, r6
   40a18:	bhi	409dc <flatcc_json_printer_uint32_vector_field@@Base+0x118>
   40a1c:	mov	r1, #32
   40a20:	mov	r2, r5
   40a24:	bl	14ef0 <memset@plt>
   40a28:	ldr	r0, [r4, #20]
   40a2c:	add	r1, r0, r5
   40a30:	str	r1, [r4, #20]
   40a34:	b	40a58 <flatcc_json_printer_uint32_vector_field@@Base+0x194>
   40a38:	ldr	r0, [r4, #16]
   40a3c:	cmp	r1, r0
   40a40:	bcc	40a58 <flatcc_json_printer_uint32_vector_field@@Base+0x194>
   40a44:	ldr	r2, [r4, #44]	; 0x2c
   40a48:	mov	r0, r4
   40a4c:	mov	r1, #0
   40a50:	blx	r2
   40a54:	ldr	r1, [r4, #20]
   40a58:	ldr	r0, [r8, #4]
   40a5c:	bl	3c890 <flatcc_json_printer_uint32@@Base+0x2c>
   40a60:	ldr	r1, [r4, #20]
   40a64:	subs	r9, r7, #1
   40a68:	add	r0, r1, r0
   40a6c:	str	r0, [r4, #20]
   40a70:	beq	40b94 <flatcc_json_printer_uint32_vector_field@@Base+0x2d0>
   40a74:	ldr	r0, [r4, #20]
   40a78:	add	r7, r8, #8
   40a7c:	mov	r8, #44	; 0x2c
   40a80:	mov	sl, #10
   40a84:	add	r1, r0, #1
   40a88:	sub	r9, r9, #1
   40a8c:	str	r1, [r4, #20]
   40a90:	strb	r8, [r0]
   40a94:	ldrb	r0, [r4, #25]
   40a98:	ldr	r1, [r4, #20]
   40a9c:	cmp	r0, #0
   40aa0:	beq	40b58 <flatcc_json_printer_uint32_vector_field@@Base+0x294>
   40aa4:	add	r0, r1, #1
   40aa8:	str	r0, [r4, #20]
   40aac:	strb	sl, [r1]
   40ab0:	ldr	r0, [r4, #20]
   40ab4:	ldrb	r2, [r4, #25]
   40ab8:	ldr	r3, [r4, #32]
   40abc:	ldr	r1, [r4, #16]
   40ac0:	mla	r6, r3, r2, r0
   40ac4:	mul	r5, r3, r2
   40ac8:	cmp	r6, r1
   40acc:	bls	40b3c <flatcc_json_printer_uint32_vector_field@@Base+0x278>
   40ad0:	cmp	r0, r1
   40ad4:	bcc	40af0 <flatcc_json_printer_uint32_vector_field@@Base+0x22c>
   40ad8:	ldr	r2, [r4, #44]	; 0x2c
   40adc:	mov	r0, r4
   40ae0:	mov	r1, #0
   40ae4:	blx	r2
   40ae8:	ldr	r1, [r4, #16]
   40aec:	ldr	r0, [r4, #20]
   40af0:	sub	r6, r1, r0
   40af4:	cmp	r6, r5
   40af8:	bcs	40b3c <flatcc_json_printer_uint32_vector_field@@Base+0x278>
   40afc:	mov	r1, #32
   40b00:	mov	r2, r6
   40b04:	bl	14ef0 <memset@plt>
   40b08:	ldr	r0, [r4, #20]
   40b0c:	ldr	r2, [r4, #44]	; 0x2c
   40b10:	mov	r1, #0
   40b14:	add	r0, r0, r6
   40b18:	str	r0, [r4, #20]
   40b1c:	mov	r0, r4
   40b20:	blx	r2
   40b24:	ldr	r1, [r4, #16]
   40b28:	ldr	r0, [r4, #20]
   40b2c:	sub	r5, r5, r6
   40b30:	sub	r6, r1, r0
   40b34:	cmp	r5, r6
   40b38:	bhi	40afc <flatcc_json_printer_uint32_vector_field@@Base+0x238>
   40b3c:	mov	r1, #32
   40b40:	mov	r2, r5
   40b44:	bl	14ef0 <memset@plt>
   40b48:	ldr	r0, [r4, #20]
   40b4c:	add	r1, r0, r5
   40b50:	str	r1, [r4, #20]
   40b54:	b	40b78 <flatcc_json_printer_uint32_vector_field@@Base+0x2b4>
   40b58:	ldr	r0, [r4, #16]
   40b5c:	cmp	r1, r0
   40b60:	bcc	40b78 <flatcc_json_printer_uint32_vector_field@@Base+0x2b4>
   40b64:	ldr	r2, [r4, #44]	; 0x2c
   40b68:	mov	r0, r4
   40b6c:	mov	r1, #0
   40b70:	blx	r2
   40b74:	ldr	r1, [r4, #20]
   40b78:	ldr	r0, [r7], #4
   40b7c:	bl	3c890 <flatcc_json_printer_uint32@@Base+0x2c>
   40b80:	ldr	r1, [r4, #20]
   40b84:	cmp	r9, #0
   40b88:	add	r0, r1, r0
   40b8c:	str	r0, [r4, #20]
   40b90:	bne	40a84 <flatcc_json_printer_uint32_vector_field@@Base+0x1c0>
   40b94:	ldrb	r1, [r4, #25]
   40b98:	ldr	r0, [r4, #20]
   40b9c:	cmp	r1, #0
   40ba0:	beq	40c60 <flatcc_json_printer_uint32_vector_field@@Base+0x39c>
   40ba4:	add	r1, r0, #1
   40ba8:	str	r1, [r4, #20]
   40bac:	mov	r1, #10
   40bb0:	strb	r1, [r0]
   40bb4:	ldr	r0, [r4, #32]
   40bb8:	sub	r2, r0, #1
   40bbc:	str	r2, [r4, #32]
   40bc0:	ldrb	r3, [r4, #25]
   40bc4:	ldr	r0, [r4, #20]
   40bc8:	ldr	r1, [r4, #16]
   40bcc:	mla	r7, r2, r3, r0
   40bd0:	mul	r5, r2, r3
   40bd4:	cmp	r7, r1
   40bd8:	bls	40c48 <flatcc_json_printer_uint32_vector_field@@Base+0x384>
   40bdc:	cmp	r0, r1
   40be0:	bcc	40bfc <flatcc_json_printer_uint32_vector_field@@Base+0x338>
   40be4:	ldr	r2, [r4, #44]	; 0x2c
   40be8:	mov	r0, r4
   40bec:	mov	r1, #0
   40bf0:	blx	r2
   40bf4:	ldr	r1, [r4, #16]
   40bf8:	ldr	r0, [r4, #20]
   40bfc:	sub	r6, r1, r0
   40c00:	cmp	r6, r5
   40c04:	bcs	40c48 <flatcc_json_printer_uint32_vector_field@@Base+0x384>
   40c08:	mov	r1, #32
   40c0c:	mov	r2, r6
   40c10:	bl	14ef0 <memset@plt>
   40c14:	ldr	r0, [r4, #20]
   40c18:	ldr	r2, [r4, #44]	; 0x2c
   40c1c:	mov	r1, #0
   40c20:	add	r0, r0, r6
   40c24:	str	r0, [r4, #20]
   40c28:	mov	r0, r4
   40c2c:	blx	r2
   40c30:	ldr	r1, [r4, #16]
   40c34:	ldr	r0, [r4, #20]
   40c38:	sub	r5, r5, r6
   40c3c:	sub	r6, r1, r0
   40c40:	cmp	r5, r6
   40c44:	bhi	40c08 <flatcc_json_printer_uint32_vector_field@@Base+0x344>
   40c48:	mov	r1, #32
   40c4c:	mov	r2, r5
   40c50:	bl	14ef0 <memset@plt>
   40c54:	ldr	r0, [r4, #20]
   40c58:	add	r0, r0, r5
   40c5c:	str	r0, [r4, #20]
   40c60:	add	r1, r0, #1
   40c64:	str	r1, [r4, #20]
   40c68:	mov	r1, #93	; 0x5d
   40c6c:	strb	r1, [r0]
   40c70:	sub	sp, fp, #28
   40c74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040c78 <flatcc_json_printer_uint64_vector_field@@Base>:
   40c78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40c7c:	add	fp, sp, #28
   40c80:	sub	sp, sp, #4
   40c84:	mov	r4, r0
   40c88:	mov	r0, #4
   40c8c:	add	r0, r0, r2, lsl #1
   40c90:	ldr	r2, [r1, #8]
   40c94:	cmp	r0, r2
   40c98:	bge	40cb8 <flatcc_json_printer_uint64_vector_field@@Base+0x40>
   40c9c:	ldr	r2, [r1, #4]
   40ca0:	add	r0, r2, r0
   40ca4:	ldrh	r0, [r0]
   40ca8:	cmp	r0, #0
   40cac:	ldrne	r2, [r1]
   40cb0:	addsne	r8, r2, r0
   40cb4:	bne	40cc0 <flatcc_json_printer_uint64_vector_field@@Base+0x48>
   40cb8:	sub	sp, fp, #28
   40cbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40cc0:	ldr	r0, [r1, #16]
   40cc4:	ldr	r2, [fp, #8]
   40cc8:	add	r7, r0, #1
   40ccc:	cmp	r0, #0
   40cd0:	str	r7, [r1, #16]
   40cd4:	ldrne	r0, [r4, #20]
   40cd8:	addne	r1, r0, #1
   40cdc:	strne	r1, [r4, #20]
   40ce0:	movne	r1, #44	; 0x2c
   40ce4:	strbne	r1, [r0]
   40ce8:	mov	r1, r3
   40cec:	ldr	r0, [r8]
   40cf0:	ldr	r7, [r8, r0]!
   40cf4:	mov	r0, r4
   40cf8:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   40cfc:	ldr	r1, [r4, #32]
   40d00:	ldr	r0, [r4, #20]
   40d04:	cmp	r7, #0
   40d08:	add	r1, r1, #1
   40d0c:	str	r1, [r4, #32]
   40d10:	add	r1, r0, #1
   40d14:	str	r1, [r4, #20]
   40d18:	mov	r1, #91	; 0x5b
   40d1c:	strb	r1, [r0]
   40d20:	beq	40f4c <flatcc_json_printer_uint64_vector_field@@Base+0x2d4>
   40d24:	ldrb	r0, [r4, #25]
   40d28:	ldr	r2, [r4, #20]
   40d2c:	cmp	r0, #0
   40d30:	beq	40dec <flatcc_json_printer_uint64_vector_field@@Base+0x174>
   40d34:	add	r0, r2, #1
   40d38:	str	r0, [r4, #20]
   40d3c:	mov	r0, #10
   40d40:	strb	r0, [r2]
   40d44:	ldr	r0, [r4, #20]
   40d48:	ldrb	r2, [r4, #25]
   40d4c:	ldr	r3, [r4, #32]
   40d50:	ldr	r1, [r4, #16]
   40d54:	mla	r6, r3, r2, r0
   40d58:	mul	r5, r3, r2
   40d5c:	cmp	r6, r1
   40d60:	bls	40dd0 <flatcc_json_printer_uint64_vector_field@@Base+0x158>
   40d64:	cmp	r0, r1
   40d68:	bcc	40d84 <flatcc_json_printer_uint64_vector_field@@Base+0x10c>
   40d6c:	ldr	r2, [r4, #44]	; 0x2c
   40d70:	mov	r0, r4
   40d74:	mov	r1, #0
   40d78:	blx	r2
   40d7c:	ldr	r1, [r4, #16]
   40d80:	ldr	r0, [r4, #20]
   40d84:	sub	r6, r1, r0
   40d88:	cmp	r6, r5
   40d8c:	bcs	40dd0 <flatcc_json_printer_uint64_vector_field@@Base+0x158>
   40d90:	mov	r1, #32
   40d94:	mov	r2, r6
   40d98:	bl	14ef0 <memset@plt>
   40d9c:	ldr	r0, [r4, #20]
   40da0:	ldr	r2, [r4, #44]	; 0x2c
   40da4:	mov	r1, #0
   40da8:	add	r0, r0, r6
   40dac:	str	r0, [r4, #20]
   40db0:	mov	r0, r4
   40db4:	blx	r2
   40db8:	ldr	r1, [r4, #16]
   40dbc:	ldr	r0, [r4, #20]
   40dc0:	sub	r5, r5, r6
   40dc4:	sub	r6, r1, r0
   40dc8:	cmp	r5, r6
   40dcc:	bhi	40d90 <flatcc_json_printer_uint64_vector_field@@Base+0x118>
   40dd0:	mov	r1, #32
   40dd4:	mov	r2, r5
   40dd8:	bl	14ef0 <memset@plt>
   40ddc:	ldr	r0, [r4, #20]
   40de0:	add	r2, r0, r5
   40de4:	str	r2, [r4, #20]
   40de8:	b	40e0c <flatcc_json_printer_uint64_vector_field@@Base+0x194>
   40dec:	ldr	r0, [r4, #16]
   40df0:	cmp	r2, r0
   40df4:	bcc	40e0c <flatcc_json_printer_uint64_vector_field@@Base+0x194>
   40df8:	ldr	r2, [r4, #44]	; 0x2c
   40dfc:	mov	r0, r4
   40e00:	mov	r1, #0
   40e04:	blx	r2
   40e08:	ldr	r2, [r4, #20]
   40e0c:	ldrd	r0, [r8, #4]
   40e10:	bl	3cbf8 <flatcc_json_printer_uint64@@Base+0x30>
   40e14:	ldr	r1, [r4, #20]
   40e18:	subs	r9, r7, #1
   40e1c:	add	r0, r1, r0
   40e20:	str	r0, [r4, #20]
   40e24:	beq	40f4c <flatcc_json_printer_uint64_vector_field@@Base+0x2d4>
   40e28:	ldr	r0, [r4, #20]
   40e2c:	add	r7, r8, #12
   40e30:	mov	r8, #44	; 0x2c
   40e34:	mov	sl, #10
   40e38:	add	r1, r0, #1
   40e3c:	sub	r9, r9, #1
   40e40:	str	r1, [r4, #20]
   40e44:	strb	r8, [r0]
   40e48:	ldrb	r0, [r4, #25]
   40e4c:	ldr	r2, [r4, #20]
   40e50:	cmp	r0, #0
   40e54:	beq	40f0c <flatcc_json_printer_uint64_vector_field@@Base+0x294>
   40e58:	add	r0, r2, #1
   40e5c:	str	r0, [r4, #20]
   40e60:	strb	sl, [r2]
   40e64:	ldr	r0, [r4, #20]
   40e68:	ldrb	r2, [r4, #25]
   40e6c:	ldr	r3, [r4, #32]
   40e70:	ldr	r1, [r4, #16]
   40e74:	mla	r6, r3, r2, r0
   40e78:	mul	r5, r3, r2
   40e7c:	cmp	r6, r1
   40e80:	bls	40ef0 <flatcc_json_printer_uint64_vector_field@@Base+0x278>
   40e84:	cmp	r0, r1
   40e88:	bcc	40ea4 <flatcc_json_printer_uint64_vector_field@@Base+0x22c>
   40e8c:	ldr	r2, [r4, #44]	; 0x2c
   40e90:	mov	r0, r4
   40e94:	mov	r1, #0
   40e98:	blx	r2
   40e9c:	ldr	r1, [r4, #16]
   40ea0:	ldr	r0, [r4, #20]
   40ea4:	sub	r6, r1, r0
   40ea8:	cmp	r6, r5
   40eac:	bcs	40ef0 <flatcc_json_printer_uint64_vector_field@@Base+0x278>
   40eb0:	mov	r1, #32
   40eb4:	mov	r2, r6
   40eb8:	bl	14ef0 <memset@plt>
   40ebc:	ldr	r0, [r4, #20]
   40ec0:	ldr	r2, [r4, #44]	; 0x2c
   40ec4:	mov	r1, #0
   40ec8:	add	r0, r0, r6
   40ecc:	str	r0, [r4, #20]
   40ed0:	mov	r0, r4
   40ed4:	blx	r2
   40ed8:	ldr	r1, [r4, #16]
   40edc:	ldr	r0, [r4, #20]
   40ee0:	sub	r5, r5, r6
   40ee4:	sub	r6, r1, r0
   40ee8:	cmp	r5, r6
   40eec:	bhi	40eb0 <flatcc_json_printer_uint64_vector_field@@Base+0x238>
   40ef0:	mov	r1, #32
   40ef4:	mov	r2, r5
   40ef8:	bl	14ef0 <memset@plt>
   40efc:	ldr	r0, [r4, #20]
   40f00:	add	r2, r0, r5
   40f04:	str	r2, [r4, #20]
   40f08:	b	40f2c <flatcc_json_printer_uint64_vector_field@@Base+0x2b4>
   40f0c:	ldr	r0, [r4, #16]
   40f10:	cmp	r2, r0
   40f14:	bcc	40f2c <flatcc_json_printer_uint64_vector_field@@Base+0x2b4>
   40f18:	ldr	r2, [r4, #44]	; 0x2c
   40f1c:	mov	r0, r4
   40f20:	mov	r1, #0
   40f24:	blx	r2
   40f28:	ldr	r2, [r4, #20]
   40f2c:	ldrd	r0, [r7]
   40f30:	bl	3cbf8 <flatcc_json_printer_uint64@@Base+0x30>
   40f34:	ldr	r1, [r4, #20]
   40f38:	add	r7, r7, #8
   40f3c:	cmp	r9, #0
   40f40:	add	r0, r1, r0
   40f44:	str	r0, [r4, #20]
   40f48:	bne	40e38 <flatcc_json_printer_uint64_vector_field@@Base+0x1c0>
   40f4c:	ldrb	r1, [r4, #25]
   40f50:	ldr	r0, [r4, #20]
   40f54:	cmp	r1, #0
   40f58:	beq	41018 <flatcc_json_printer_uint64_vector_field@@Base+0x3a0>
   40f5c:	add	r1, r0, #1
   40f60:	str	r1, [r4, #20]
   40f64:	mov	r1, #10
   40f68:	strb	r1, [r0]
   40f6c:	ldr	r0, [r4, #32]
   40f70:	sub	r2, r0, #1
   40f74:	str	r2, [r4, #32]
   40f78:	ldrb	r3, [r4, #25]
   40f7c:	ldr	r0, [r4, #20]
   40f80:	ldr	r1, [r4, #16]
   40f84:	mla	r7, r2, r3, r0
   40f88:	mul	r5, r2, r3
   40f8c:	cmp	r7, r1
   40f90:	bls	41000 <flatcc_json_printer_uint64_vector_field@@Base+0x388>
   40f94:	cmp	r0, r1
   40f98:	bcc	40fb4 <flatcc_json_printer_uint64_vector_field@@Base+0x33c>
   40f9c:	ldr	r2, [r4, #44]	; 0x2c
   40fa0:	mov	r0, r4
   40fa4:	mov	r1, #0
   40fa8:	blx	r2
   40fac:	ldr	r1, [r4, #16]
   40fb0:	ldr	r0, [r4, #20]
   40fb4:	sub	r6, r1, r0
   40fb8:	cmp	r6, r5
   40fbc:	bcs	41000 <flatcc_json_printer_uint64_vector_field@@Base+0x388>
   40fc0:	mov	r1, #32
   40fc4:	mov	r2, r6
   40fc8:	bl	14ef0 <memset@plt>
   40fcc:	ldr	r0, [r4, #20]
   40fd0:	ldr	r2, [r4, #44]	; 0x2c
   40fd4:	mov	r1, #0
   40fd8:	add	r0, r0, r6
   40fdc:	str	r0, [r4, #20]
   40fe0:	mov	r0, r4
   40fe4:	blx	r2
   40fe8:	ldr	r1, [r4, #16]
   40fec:	ldr	r0, [r4, #20]
   40ff0:	sub	r5, r5, r6
   40ff4:	sub	r6, r1, r0
   40ff8:	cmp	r5, r6
   40ffc:	bhi	40fc0 <flatcc_json_printer_uint64_vector_field@@Base+0x348>
   41000:	mov	r1, #32
   41004:	mov	r2, r5
   41008:	bl	14ef0 <memset@plt>
   4100c:	ldr	r0, [r4, #20]
   41010:	add	r0, r0, r5
   41014:	str	r0, [r4, #20]
   41018:	add	r1, r0, #1
   4101c:	str	r1, [r4, #20]
   41020:	mov	r1, #93	; 0x5d
   41024:	strb	r1, [r0]
   41028:	sub	sp, fp, #28
   4102c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00041030 <flatcc_json_printer_int8_vector_field@@Base>:
   41030:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41034:	add	fp, sp, #28
   41038:	sub	sp, sp, #4
   4103c:	mov	r4, r0
   41040:	mov	r0, #4
   41044:	add	r0, r0, r2, lsl #1
   41048:	ldr	r2, [r1, #8]
   4104c:	cmp	r0, r2
   41050:	bge	41070 <flatcc_json_printer_int8_vector_field@@Base+0x40>
   41054:	ldr	r2, [r1, #4]
   41058:	add	r0, r2, r0
   4105c:	ldrh	r0, [r0]
   41060:	cmp	r0, #0
   41064:	ldrne	r2, [r1]
   41068:	addsne	r9, r2, r0
   4106c:	bne	41078 <flatcc_json_printer_int8_vector_field@@Base+0x48>
   41070:	sub	sp, fp, #28
   41074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41078:	ldr	r0, [r1, #16]
   4107c:	ldr	r2, [fp, #8]
   41080:	add	r7, r0, #1
   41084:	cmp	r0, #0
   41088:	str	r7, [r1, #16]
   4108c:	ldrne	r0, [r4, #20]
   41090:	addne	r1, r0, #1
   41094:	strne	r1, [r4, #20]
   41098:	movne	r1, #44	; 0x2c
   4109c:	strbne	r1, [r0]
   410a0:	mov	r1, r3
   410a4:	ldr	r0, [r9]
   410a8:	ldr	r8, [r9, r0]!
   410ac:	mov	r0, r4
   410b0:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   410b4:	ldr	r1, [r4, #32]
   410b8:	ldr	r0, [r4, #20]
   410bc:	cmp	r8, #0
   410c0:	add	r1, r1, #1
   410c4:	str	r1, [r4, #32]
   410c8:	add	r1, r0, #1
   410cc:	str	r1, [r4, #20]
   410d0:	mov	r1, #91	; 0x5b
   410d4:	strb	r1, [r0]
   410d8:	beq	41484 <flatcc_json_printer_int8_vector_field@@Base+0x454>
   410dc:	ldrb	r1, [r4, #25]
   410e0:	ldr	r0, [r4, #20]
   410e4:	cmp	r1, #0
   410e8:	beq	411a4 <flatcc_json_printer_int8_vector_field@@Base+0x174>
   410ec:	add	r1, r0, #1
   410f0:	str	r1, [r4, #20]
   410f4:	mov	r1, #10
   410f8:	strb	r1, [r0]
   410fc:	ldr	r0, [r4, #20]
   41100:	ldrb	r2, [r4, #25]
   41104:	ldr	r3, [r4, #32]
   41108:	ldr	r1, [r4, #16]
   4110c:	mla	r7, r3, r2, r0
   41110:	mul	r5, r3, r2
   41114:	cmp	r7, r1
   41118:	bls	41188 <flatcc_json_printer_int8_vector_field@@Base+0x158>
   4111c:	cmp	r0, r1
   41120:	bcc	4113c <flatcc_json_printer_int8_vector_field@@Base+0x10c>
   41124:	ldr	r2, [r4, #44]	; 0x2c
   41128:	mov	r0, r4
   4112c:	mov	r1, #0
   41130:	blx	r2
   41134:	ldr	r1, [r4, #16]
   41138:	ldr	r0, [r4, #20]
   4113c:	sub	r6, r1, r0
   41140:	cmp	r6, r5
   41144:	bcs	41188 <flatcc_json_printer_int8_vector_field@@Base+0x158>
   41148:	mov	r1, #32
   4114c:	mov	r2, r6
   41150:	bl	14ef0 <memset@plt>
   41154:	ldr	r0, [r4, #20]
   41158:	ldr	r2, [r4, #44]	; 0x2c
   4115c:	mov	r1, #0
   41160:	add	r0, r0, r6
   41164:	str	r0, [r4, #20]
   41168:	mov	r0, r4
   4116c:	blx	r2
   41170:	ldr	r1, [r4, #16]
   41174:	ldr	r0, [r4, #20]
   41178:	sub	r5, r5, r6
   4117c:	sub	r6, r1, r0
   41180:	cmp	r5, r6
   41184:	bhi	41148 <flatcc_json_printer_int8_vector_field@@Base+0x118>
   41188:	mov	r1, #32
   4118c:	mov	r2, r5
   41190:	bl	14ef0 <memset@plt>
   41194:	ldr	r0, [r4, #20]
   41198:	add	r0, r0, r5
   4119c:	str	r0, [r4, #20]
   411a0:	b	411c4 <flatcc_json_printer_int8_vector_field@@Base+0x194>
   411a4:	ldr	r1, [r4, #16]
   411a8:	cmp	r0, r1
   411ac:	bcc	411c4 <flatcc_json_printer_int8_vector_field@@Base+0x194>
   411b0:	ldr	r2, [r4, #44]	; 0x2c
   411b4:	mov	r0, r4
   411b8:	mov	r1, #0
   411bc:	blx	r2
   411c0:	ldr	r0, [r4, #20]
   411c4:	ldrb	r1, [r9, #4]
   411c8:	sxtb	r2, r1
   411cc:	lsr	r1, r1, #7
   411d0:	cmn	r2, #1
   411d4:	movle	r3, #45	; 0x2d
   411d8:	rsble	r2, r2, #0
   411dc:	strble	r3, [r0], #1
   411e0:	uxtb	r3, r2
   411e4:	cmp	r3, #100	; 0x64
   411e8:	bcc	41234 <flatcc_json_printer_int8_vector_field@@Base+0x204>
   411ec:	mov	r2, #0
   411f0:	strb	r2, [r0, #3]
   411f4:	movw	r2, #34079	; 0x851f
   411f8:	movt	r2, #20971	; 0x51eb
   411fc:	umull	r2, r7, r3, r2
   41200:	mov	r2, #48	; 0x30
   41204:	orr	r2, r2, r7, lsr #5
   41208:	strb	r2, [r0]
   4120c:	lsr	r2, r7, #5
   41210:	mov	r7, #100	; 0x64
   41214:	mls	r2, r2, r7, r3
   41218:	movw	r3, #61040	; 0xee70
   4121c:	movt	r3, #4
   41220:	add	r2, r3, r2, lsl #1
   41224:	ldrh	r2, [r2]
   41228:	strh	r2, [r0, #1]
   4122c:	mov	r0, #3
   41230:	b	4128c <flatcc_json_printer_int8_vector_field@@Base+0x25c>
   41234:	cmp	r3, #10
   41238:	bcc	41278 <flatcc_json_printer_int8_vector_field@@Base+0x248>
   4123c:	mov	r2, #0
   41240:	strb	r2, [r0, #2]
   41244:	movw	r2, #34079	; 0x851f
   41248:	movt	r2, #20971	; 0x51eb
   4124c:	umull	r2, r7, r3, r2
   41250:	lsr	r2, r7, #5
   41254:	mov	r7, #100	; 0x64
   41258:	mls	r2, r2, r7, r3
   4125c:	movw	r3, #61040	; 0xee70
   41260:	movt	r3, #4
   41264:	add	r2, r3, r2, lsl #1
   41268:	ldrh	r2, [r2]
   4126c:	strh	r2, [r0]
   41270:	mov	r0, #2
   41274:	b	4128c <flatcc_json_printer_int8_vector_field@@Base+0x25c>
   41278:	mov	r3, #0
   4127c:	add	r2, r2, #48	; 0x30
   41280:	strb	r3, [r0, #1]
   41284:	strb	r2, [r0]
   41288:	mov	r0, #1
   4128c:	add	r0, r0, r1
   41290:	ldr	r1, [r4, #20]
   41294:	subs	r8, r8, #1
   41298:	add	r0, r1, r0
   4129c:	str	r0, [r4, #20]
   412a0:	beq	41484 <flatcc_json_printer_int8_vector_field@@Base+0x454>
   412a4:	ldr	r0, [r4, #20]
   412a8:	add	r7, r9, #5
   412ac:	mov	r9, #44	; 0x2c
   412b0:	mov	sl, #0
   412b4:	add	r1, r0, #1
   412b8:	str	r1, [r4, #20]
   412bc:	strb	r9, [r0]
   412c0:	ldrb	r1, [r4, #25]
   412c4:	ldr	r0, [r4, #20]
   412c8:	cmp	r1, #0
   412cc:	beq	41388 <flatcc_json_printer_int8_vector_field@@Base+0x358>
   412d0:	add	r1, r0, #1
   412d4:	str	r1, [r4, #20]
   412d8:	mov	r1, #10
   412dc:	strb	r1, [r0]
   412e0:	ldr	r0, [r4, #20]
   412e4:	ldrb	r2, [r4, #25]
   412e8:	ldr	r3, [r4, #32]
   412ec:	ldr	r1, [r4, #16]
   412f0:	mla	r6, r3, r2, r0
   412f4:	mul	r5, r3, r2
   412f8:	cmp	r6, r1
   412fc:	bls	4136c <flatcc_json_printer_int8_vector_field@@Base+0x33c>
   41300:	cmp	r0, r1
   41304:	bcc	41320 <flatcc_json_printer_int8_vector_field@@Base+0x2f0>
   41308:	ldr	r2, [r4, #44]	; 0x2c
   4130c:	mov	r0, r4
   41310:	mov	r1, #0
   41314:	blx	r2
   41318:	ldr	r1, [r4, #16]
   4131c:	ldr	r0, [r4, #20]
   41320:	sub	r6, r1, r0
   41324:	cmp	r6, r5
   41328:	bcs	4136c <flatcc_json_printer_int8_vector_field@@Base+0x33c>
   4132c:	mov	r1, #32
   41330:	mov	r2, r6
   41334:	bl	14ef0 <memset@plt>
   41338:	ldr	r0, [r4, #20]
   4133c:	ldr	r2, [r4, #44]	; 0x2c
   41340:	mov	r1, #0
   41344:	add	r0, r0, r6
   41348:	str	r0, [r4, #20]
   4134c:	mov	r0, r4
   41350:	blx	r2
   41354:	ldr	r1, [r4, #16]
   41358:	ldr	r0, [r4, #20]
   4135c:	sub	r5, r5, r6
   41360:	sub	r6, r1, r0
   41364:	cmp	r5, r6
   41368:	bhi	4132c <flatcc_json_printer_int8_vector_field@@Base+0x2fc>
   4136c:	mov	r1, #32
   41370:	mov	r2, r5
   41374:	bl	14ef0 <memset@plt>
   41378:	ldr	r0, [r4, #20]
   4137c:	add	r0, r0, r5
   41380:	str	r0, [r4, #20]
   41384:	b	413a8 <flatcc_json_printer_int8_vector_field@@Base+0x378>
   41388:	ldr	r1, [r4, #16]
   4138c:	cmp	r0, r1
   41390:	bcc	413a8 <flatcc_json_printer_int8_vector_field@@Base+0x378>
   41394:	ldr	r2, [r4, #44]	; 0x2c
   41398:	mov	r0, r4
   4139c:	mov	r1, #0
   413a0:	blx	r2
   413a4:	ldr	r0, [r4, #20]
   413a8:	ldrb	r1, [r7]
   413ac:	sub	r8, r8, #1
   413b0:	sxtb	r2, r1
   413b4:	lsr	r1, r1, #7
   413b8:	cmn	r2, #1
   413bc:	movle	r3, #45	; 0x2d
   413c0:	rsble	r2, r2, #0
   413c4:	strble	r3, [r0], #1
   413c8:	uxtb	r3, r2
   413cc:	cmp	r3, #100	; 0x64
   413d0:	bcc	41418 <flatcc_json_printer_int8_vector_field@@Base+0x3e8>
   413d4:	movw	r2, #34079	; 0x851f
   413d8:	strb	sl, [r0, #3]
   413dc:	movt	r2, #20971	; 0x51eb
   413e0:	umull	r2, r6, r3, r2
   413e4:	mov	r2, #48	; 0x30
   413e8:	orr	r2, r2, r6, lsr #5
   413ec:	strb	r2, [r0]
   413f0:	lsr	r2, r6, #5
   413f4:	mov	r6, #100	; 0x64
   413f8:	mls	r2, r2, r6, r3
   413fc:	movw	r3, #61040	; 0xee70
   41400:	movt	r3, #4
   41404:	add	r2, r3, r2, lsl #1
   41408:	ldrh	r2, [r2]
   4140c:	strh	r2, [r0, #1]
   41410:	mov	r0, #3
   41414:	b	41468 <flatcc_json_printer_int8_vector_field@@Base+0x438>
   41418:	cmp	r3, #10
   4141c:	bcc	41458 <flatcc_json_printer_int8_vector_field@@Base+0x428>
   41420:	movw	r2, #34079	; 0x851f
   41424:	strb	sl, [r0, #2]
   41428:	movt	r2, #20971	; 0x51eb
   4142c:	umull	r2, r6, r3, r2
   41430:	lsr	r2, r6, #5
   41434:	mov	r6, #100	; 0x64
   41438:	mls	r2, r2, r6, r3
   4143c:	movw	r3, #61040	; 0xee70
   41440:	movt	r3, #4
   41444:	add	r2, r3, r2, lsl #1
   41448:	ldrh	r2, [r2]
   4144c:	strh	r2, [r0]
   41450:	mov	r0, #2
   41454:	b	41468 <flatcc_json_printer_int8_vector_field@@Base+0x438>
   41458:	add	r2, r2, #48	; 0x30
   4145c:	strb	sl, [r0, #1]
   41460:	strb	r2, [r0]
   41464:	mov	r0, #1
   41468:	add	r0, r0, r1
   4146c:	ldr	r1, [r4, #20]
   41470:	add	r7, r7, #1
   41474:	cmp	r8, #0
   41478:	add	r0, r1, r0
   4147c:	str	r0, [r4, #20]
   41480:	bne	412b4 <flatcc_json_printer_int8_vector_field@@Base+0x284>
   41484:	ldrb	r1, [r4, #25]
   41488:	ldr	r0, [r4, #20]
   4148c:	cmp	r1, #0
   41490:	beq	41550 <flatcc_json_printer_int8_vector_field@@Base+0x520>
   41494:	add	r1, r0, #1
   41498:	str	r1, [r4, #20]
   4149c:	mov	r1, #10
   414a0:	strb	r1, [r0]
   414a4:	ldr	r0, [r4, #32]
   414a8:	sub	r2, r0, #1
   414ac:	str	r2, [r4, #32]
   414b0:	ldrb	r3, [r4, #25]
   414b4:	ldr	r0, [r4, #20]
   414b8:	ldr	r1, [r4, #16]
   414bc:	mla	r7, r2, r3, r0
   414c0:	mul	r5, r2, r3
   414c4:	cmp	r7, r1
   414c8:	bls	41538 <flatcc_json_printer_int8_vector_field@@Base+0x508>
   414cc:	cmp	r0, r1
   414d0:	bcc	414ec <flatcc_json_printer_int8_vector_field@@Base+0x4bc>
   414d4:	ldr	r2, [r4, #44]	; 0x2c
   414d8:	mov	r0, r4
   414dc:	mov	r1, #0
   414e0:	blx	r2
   414e4:	ldr	r1, [r4, #16]
   414e8:	ldr	r0, [r4, #20]
   414ec:	sub	r6, r1, r0
   414f0:	cmp	r6, r5
   414f4:	bcs	41538 <flatcc_json_printer_int8_vector_field@@Base+0x508>
   414f8:	mov	r1, #32
   414fc:	mov	r2, r6
   41500:	bl	14ef0 <memset@plt>
   41504:	ldr	r0, [r4, #20]
   41508:	ldr	r2, [r4, #44]	; 0x2c
   4150c:	mov	r1, #0
   41510:	add	r0, r0, r6
   41514:	str	r0, [r4, #20]
   41518:	mov	r0, r4
   4151c:	blx	r2
   41520:	ldr	r1, [r4, #16]
   41524:	ldr	r0, [r4, #20]
   41528:	sub	r5, r5, r6
   4152c:	sub	r6, r1, r0
   41530:	cmp	r5, r6
   41534:	bhi	414f8 <flatcc_json_printer_int8_vector_field@@Base+0x4c8>
   41538:	mov	r1, #32
   4153c:	mov	r2, r5
   41540:	bl	14ef0 <memset@plt>
   41544:	ldr	r0, [r4, #20]
   41548:	add	r0, r0, r5
   4154c:	str	r0, [r4, #20]
   41550:	add	r1, r0, #1
   41554:	str	r1, [r4, #20]
   41558:	mov	r1, #93	; 0x5d
   4155c:	strb	r1, [r0]
   41560:	sub	sp, fp, #28
   41564:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00041568 <flatcc_json_printer_int16_vector_field@@Base>:
   41568:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4156c:	add	fp, sp, #28
   41570:	sub	sp, sp, #4
   41574:	mov	r4, r0
   41578:	mov	r0, #4
   4157c:	add	r0, r0, r2, lsl #1
   41580:	ldr	r2, [r1, #8]
   41584:	cmp	r0, r2
   41588:	bge	415a8 <flatcc_json_printer_int16_vector_field@@Base+0x40>
   4158c:	ldr	r2, [r1, #4]
   41590:	add	r0, r2, r0
   41594:	ldrh	r0, [r0]
   41598:	cmp	r0, #0
   4159c:	ldrne	r2, [r1]
   415a0:	addsne	r8, r2, r0
   415a4:	bne	415b0 <flatcc_json_printer_int16_vector_field@@Base+0x48>
   415a8:	sub	sp, fp, #28
   415ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   415b0:	ldr	r0, [r1, #16]
   415b4:	ldr	r2, [fp, #8]
   415b8:	add	r7, r0, #1
   415bc:	cmp	r0, #0
   415c0:	str	r7, [r1, #16]
   415c4:	ldrne	r0, [r4, #20]
   415c8:	addne	r1, r0, #1
   415cc:	strne	r1, [r4, #20]
   415d0:	movne	r1, #44	; 0x2c
   415d4:	strbne	r1, [r0]
   415d8:	mov	r1, r3
   415dc:	ldr	r0, [r8]
   415e0:	ldr	r7, [r8, r0]!
   415e4:	mov	r0, r4
   415e8:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   415ec:	ldr	r1, [r4, #32]
   415f0:	ldr	r0, [r4, #20]
   415f4:	cmp	r7, #0
   415f8:	add	r1, r1, #1
   415fc:	str	r1, [r4, #32]
   41600:	add	r1, r0, #1
   41604:	str	r1, [r4, #20]
   41608:	mov	r1, #91	; 0x5b
   4160c:	strb	r1, [r0]
   41610:	beq	4187c <flatcc_json_printer_int16_vector_field@@Base+0x314>
   41614:	ldrb	r0, [r4, #25]
   41618:	ldr	r1, [r4, #20]
   4161c:	cmp	r0, #0
   41620:	beq	416dc <flatcc_json_printer_int16_vector_field@@Base+0x174>
   41624:	add	r0, r1, #1
   41628:	str	r0, [r4, #20]
   4162c:	mov	r0, #10
   41630:	strb	r0, [r1]
   41634:	ldr	r0, [r4, #20]
   41638:	ldrb	r2, [r4, #25]
   4163c:	ldr	r3, [r4, #32]
   41640:	ldr	r1, [r4, #16]
   41644:	mla	r6, r3, r2, r0
   41648:	mul	r5, r3, r2
   4164c:	cmp	r6, r1
   41650:	bls	416c0 <flatcc_json_printer_int16_vector_field@@Base+0x158>
   41654:	cmp	r0, r1
   41658:	bcc	41674 <flatcc_json_printer_int16_vector_field@@Base+0x10c>
   4165c:	ldr	r2, [r4, #44]	; 0x2c
   41660:	mov	r0, r4
   41664:	mov	r1, #0
   41668:	blx	r2
   4166c:	ldr	r1, [r4, #16]
   41670:	ldr	r0, [r4, #20]
   41674:	sub	r6, r1, r0
   41678:	cmp	r6, r5
   4167c:	bcs	416c0 <flatcc_json_printer_int16_vector_field@@Base+0x158>
   41680:	mov	r1, #32
   41684:	mov	r2, r6
   41688:	bl	14ef0 <memset@plt>
   4168c:	ldr	r0, [r4, #20]
   41690:	ldr	r2, [r4, #44]	; 0x2c
   41694:	mov	r1, #0
   41698:	add	r0, r0, r6
   4169c:	str	r0, [r4, #20]
   416a0:	mov	r0, r4
   416a4:	blx	r2
   416a8:	ldr	r1, [r4, #16]
   416ac:	ldr	r0, [r4, #20]
   416b0:	sub	r5, r5, r6
   416b4:	sub	r6, r1, r0
   416b8:	cmp	r5, r6
   416bc:	bhi	41680 <flatcc_json_printer_int16_vector_field@@Base+0x118>
   416c0:	mov	r1, #32
   416c4:	mov	r2, r5
   416c8:	bl	14ef0 <memset@plt>
   416cc:	ldr	r0, [r4, #20]
   416d0:	add	r1, r0, r5
   416d4:	str	r1, [r4, #20]
   416d8:	b	416fc <flatcc_json_printer_int16_vector_field@@Base+0x194>
   416dc:	ldr	r0, [r4, #16]
   416e0:	cmp	r1, r0
   416e4:	bcc	416fc <flatcc_json_printer_int16_vector_field@@Base+0x194>
   416e8:	ldr	r2, [r4, #44]	; 0x2c
   416ec:	mov	r0, r4
   416f0:	mov	r1, #0
   416f4:	blx	r2
   416f8:	ldr	r1, [r4, #20]
   416fc:	ldrh	r0, [r8, #4]
   41700:	lsr	r5, r0, #15
   41704:	sxth	r0, r0
   41708:	cmn	r0, #1
   4170c:	rsble	r0, r0, #0
   41710:	movle	r2, #45	; 0x2d
   41714:	strble	r2, [r1], #1
   41718:	uxth	r0, r0
   4171c:	bl	3c6f0 <flatcc_json_printer_uint16@@Base+0x2c>
   41720:	ldr	r1, [r4, #20]
   41724:	add	r0, r0, r5
   41728:	subs	r9, r7, #1
   4172c:	add	r0, r1, r0
   41730:	str	r0, [r4, #20]
   41734:	beq	4187c <flatcc_json_printer_int16_vector_field@@Base+0x314>
   41738:	ldr	r0, [r4, #20]
   4173c:	add	r7, r8, #6
   41740:	mov	r8, #44	; 0x2c
   41744:	mov	sl, #10
   41748:	add	r1, r0, #1
   4174c:	str	r1, [r4, #20]
   41750:	strb	r8, [r0]
   41754:	ldrb	r0, [r4, #25]
   41758:	ldr	r1, [r4, #20]
   4175c:	cmp	r0, #0
   41760:	beq	41818 <flatcc_json_printer_int16_vector_field@@Base+0x2b0>
   41764:	add	r0, r1, #1
   41768:	str	r0, [r4, #20]
   4176c:	strb	sl, [r1]
   41770:	ldr	r0, [r4, #20]
   41774:	ldrb	r2, [r4, #25]
   41778:	ldr	r3, [r4, #32]
   4177c:	ldr	r1, [r4, #16]
   41780:	mla	r6, r3, r2, r0
   41784:	mul	r5, r3, r2
   41788:	cmp	r6, r1
   4178c:	bls	417fc <flatcc_json_printer_int16_vector_field@@Base+0x294>
   41790:	cmp	r0, r1
   41794:	bcc	417b0 <flatcc_json_printer_int16_vector_field@@Base+0x248>
   41798:	ldr	r2, [r4, #44]	; 0x2c
   4179c:	mov	r0, r4
   417a0:	mov	r1, #0
   417a4:	blx	r2
   417a8:	ldr	r1, [r4, #16]
   417ac:	ldr	r0, [r4, #20]
   417b0:	sub	r6, r1, r0
   417b4:	cmp	r6, r5
   417b8:	bcs	417fc <flatcc_json_printer_int16_vector_field@@Base+0x294>
   417bc:	mov	r1, #32
   417c0:	mov	r2, r6
   417c4:	bl	14ef0 <memset@plt>
   417c8:	ldr	r0, [r4, #20]
   417cc:	ldr	r2, [r4, #44]	; 0x2c
   417d0:	mov	r1, #0
   417d4:	add	r0, r0, r6
   417d8:	str	r0, [r4, #20]
   417dc:	mov	r0, r4
   417e0:	blx	r2
   417e4:	ldr	r1, [r4, #16]
   417e8:	ldr	r0, [r4, #20]
   417ec:	sub	r5, r5, r6
   417f0:	sub	r6, r1, r0
   417f4:	cmp	r5, r6
   417f8:	bhi	417bc <flatcc_json_printer_int16_vector_field@@Base+0x254>
   417fc:	mov	r1, #32
   41800:	mov	r2, r5
   41804:	bl	14ef0 <memset@plt>
   41808:	ldr	r0, [r4, #20]
   4180c:	add	r1, r0, r5
   41810:	str	r1, [r4, #20]
   41814:	b	41838 <flatcc_json_printer_int16_vector_field@@Base+0x2d0>
   41818:	ldr	r0, [r4, #16]
   4181c:	cmp	r1, r0
   41820:	bcc	41838 <flatcc_json_printer_int16_vector_field@@Base+0x2d0>
   41824:	ldr	r2, [r4, #44]	; 0x2c
   41828:	mov	r0, r4
   4182c:	mov	r1, #0
   41830:	blx	r2
   41834:	ldr	r1, [r4, #20]
   41838:	ldrh	r0, [r7]
   4183c:	sub	r9, r9, #1
   41840:	lsr	r5, r0, #15
   41844:	sxth	r0, r0
   41848:	cmn	r0, #1
   4184c:	rsble	r0, r0, #0
   41850:	movle	r2, #45	; 0x2d
   41854:	strble	r2, [r1], #1
   41858:	uxth	r0, r0
   4185c:	bl	3c6f0 <flatcc_json_printer_uint16@@Base+0x2c>
   41860:	ldr	r1, [r4, #20]
   41864:	add	r0, r0, r5
   41868:	add	r7, r7, #2
   4186c:	cmp	r9, #0
   41870:	add	r0, r1, r0
   41874:	str	r0, [r4, #20]
   41878:	bne	41748 <flatcc_json_printer_int16_vector_field@@Base+0x1e0>
   4187c:	ldrb	r1, [r4, #25]
   41880:	ldr	r0, [r4, #20]
   41884:	cmp	r1, #0
   41888:	beq	41948 <flatcc_json_printer_int16_vector_field@@Base+0x3e0>
   4188c:	add	r1, r0, #1
   41890:	str	r1, [r4, #20]
   41894:	mov	r1, #10
   41898:	strb	r1, [r0]
   4189c:	ldr	r0, [r4, #32]
   418a0:	sub	r2, r0, #1
   418a4:	str	r2, [r4, #32]
   418a8:	ldrb	r3, [r4, #25]
   418ac:	ldr	r0, [r4, #20]
   418b0:	ldr	r1, [r4, #16]
   418b4:	mla	r7, r2, r3, r0
   418b8:	mul	r5, r2, r3
   418bc:	cmp	r7, r1
   418c0:	bls	41930 <flatcc_json_printer_int16_vector_field@@Base+0x3c8>
   418c4:	cmp	r0, r1
   418c8:	bcc	418e4 <flatcc_json_printer_int16_vector_field@@Base+0x37c>
   418cc:	ldr	r2, [r4, #44]	; 0x2c
   418d0:	mov	r0, r4
   418d4:	mov	r1, #0
   418d8:	blx	r2
   418dc:	ldr	r1, [r4, #16]
   418e0:	ldr	r0, [r4, #20]
   418e4:	sub	r6, r1, r0
   418e8:	cmp	r6, r5
   418ec:	bcs	41930 <flatcc_json_printer_int16_vector_field@@Base+0x3c8>
   418f0:	mov	r1, #32
   418f4:	mov	r2, r6
   418f8:	bl	14ef0 <memset@plt>
   418fc:	ldr	r0, [r4, #20]
   41900:	ldr	r2, [r4, #44]	; 0x2c
   41904:	mov	r1, #0
   41908:	add	r0, r0, r6
   4190c:	str	r0, [r4, #20]
   41910:	mov	r0, r4
   41914:	blx	r2
   41918:	ldr	r1, [r4, #16]
   4191c:	ldr	r0, [r4, #20]
   41920:	sub	r5, r5, r6
   41924:	sub	r6, r1, r0
   41928:	cmp	r5, r6
   4192c:	bhi	418f0 <flatcc_json_printer_int16_vector_field@@Base+0x388>
   41930:	mov	r1, #32
   41934:	mov	r2, r5
   41938:	bl	14ef0 <memset@plt>
   4193c:	ldr	r0, [r4, #20]
   41940:	add	r0, r0, r5
   41944:	str	r0, [r4, #20]
   41948:	add	r1, r0, #1
   4194c:	str	r1, [r4, #20]
   41950:	mov	r1, #93	; 0x5d
   41954:	strb	r1, [r0]
   41958:	sub	sp, fp, #28
   4195c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00041960 <flatcc_json_printer_int32_vector_field@@Base>:
   41960:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41964:	add	fp, sp, #28
   41968:	sub	sp, sp, #4
   4196c:	mov	r4, r0
   41970:	mov	r0, #4
   41974:	add	r0, r0, r2, lsl #1
   41978:	ldr	r2, [r1, #8]
   4197c:	cmp	r0, r2
   41980:	bge	419a0 <flatcc_json_printer_int32_vector_field@@Base+0x40>
   41984:	ldr	r2, [r1, #4]
   41988:	add	r0, r2, r0
   4198c:	ldrh	r0, [r0]
   41990:	cmp	r0, #0
   41994:	ldrne	r2, [r1]
   41998:	addsne	r8, r2, r0
   4199c:	bne	419a8 <flatcc_json_printer_int32_vector_field@@Base+0x48>
   419a0:	sub	sp, fp, #28
   419a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   419a8:	ldr	r0, [r1, #16]
   419ac:	ldr	r2, [fp, #8]
   419b0:	add	r7, r0, #1
   419b4:	cmp	r0, #0
   419b8:	str	r7, [r1, #16]
   419bc:	ldrne	r0, [r4, #20]
   419c0:	addne	r1, r0, #1
   419c4:	strne	r1, [r4, #20]
   419c8:	movne	r1, #44	; 0x2c
   419cc:	strbne	r1, [r0]
   419d0:	mov	r1, r3
   419d4:	ldr	r0, [r8]
   419d8:	ldr	r7, [r8, r0]!
   419dc:	mov	r0, r4
   419e0:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   419e4:	ldr	r1, [r4, #32]
   419e8:	ldr	r0, [r4, #20]
   419ec:	cmp	r7, #0
   419f0:	add	r1, r1, #1
   419f4:	str	r1, [r4, #32]
   419f8:	add	r1, r0, #1
   419fc:	str	r1, [r4, #20]
   41a00:	mov	r1, #91	; 0x5b
   41a04:	strb	r1, [r0]
   41a08:	beq	41c64 <flatcc_json_printer_int32_vector_field@@Base+0x304>
   41a0c:	ldrb	r0, [r4, #25]
   41a10:	ldr	r1, [r4, #20]
   41a14:	cmp	r0, #0
   41a18:	beq	41ad4 <flatcc_json_printer_int32_vector_field@@Base+0x174>
   41a1c:	add	r0, r1, #1
   41a20:	str	r0, [r4, #20]
   41a24:	mov	r0, #10
   41a28:	strb	r0, [r1]
   41a2c:	ldr	r0, [r4, #20]
   41a30:	ldrb	r2, [r4, #25]
   41a34:	ldr	r3, [r4, #32]
   41a38:	ldr	r1, [r4, #16]
   41a3c:	mla	r6, r3, r2, r0
   41a40:	mul	r5, r3, r2
   41a44:	cmp	r6, r1
   41a48:	bls	41ab8 <flatcc_json_printer_int32_vector_field@@Base+0x158>
   41a4c:	cmp	r0, r1
   41a50:	bcc	41a6c <flatcc_json_printer_int32_vector_field@@Base+0x10c>
   41a54:	ldr	r2, [r4, #44]	; 0x2c
   41a58:	mov	r0, r4
   41a5c:	mov	r1, #0
   41a60:	blx	r2
   41a64:	ldr	r1, [r4, #16]
   41a68:	ldr	r0, [r4, #20]
   41a6c:	sub	r6, r1, r0
   41a70:	cmp	r6, r5
   41a74:	bcs	41ab8 <flatcc_json_printer_int32_vector_field@@Base+0x158>
   41a78:	mov	r1, #32
   41a7c:	mov	r2, r6
   41a80:	bl	14ef0 <memset@plt>
   41a84:	ldr	r0, [r4, #20]
   41a88:	ldr	r2, [r4, #44]	; 0x2c
   41a8c:	mov	r1, #0
   41a90:	add	r0, r0, r6
   41a94:	str	r0, [r4, #20]
   41a98:	mov	r0, r4
   41a9c:	blx	r2
   41aa0:	ldr	r1, [r4, #16]
   41aa4:	ldr	r0, [r4, #20]
   41aa8:	sub	r5, r5, r6
   41aac:	sub	r6, r1, r0
   41ab0:	cmp	r5, r6
   41ab4:	bhi	41a78 <flatcc_json_printer_int32_vector_field@@Base+0x118>
   41ab8:	mov	r1, #32
   41abc:	mov	r2, r5
   41ac0:	bl	14ef0 <memset@plt>
   41ac4:	ldr	r0, [r4, #20]
   41ac8:	add	r1, r0, r5
   41acc:	str	r1, [r4, #20]
   41ad0:	b	41af4 <flatcc_json_printer_int32_vector_field@@Base+0x194>
   41ad4:	ldr	r0, [r4, #16]
   41ad8:	cmp	r1, r0
   41adc:	bcc	41af4 <flatcc_json_printer_int32_vector_field@@Base+0x194>
   41ae0:	ldr	r2, [r4, #44]	; 0x2c
   41ae4:	mov	r0, r4
   41ae8:	mov	r1, #0
   41aec:	blx	r2
   41af0:	ldr	r1, [r4, #20]
   41af4:	ldr	r0, [r8, #4]
   41af8:	cmn	r0, #1
   41afc:	lsr	r5, r0, #31
   41b00:	movle	r2, #45	; 0x2d
   41b04:	rsble	r0, r0, #0
   41b08:	strble	r2, [r1], #1
   41b0c:	bl	3c890 <flatcc_json_printer_uint32@@Base+0x2c>
   41b10:	ldr	r1, [r4, #20]
   41b14:	add	r0, r0, r5
   41b18:	subs	r9, r7, #1
   41b1c:	add	r0, r1, r0
   41b20:	str	r0, [r4, #20]
   41b24:	beq	41c64 <flatcc_json_printer_int32_vector_field@@Base+0x304>
   41b28:	ldr	r0, [r4, #20]
   41b2c:	add	r7, r8, #8
   41b30:	mov	r8, #44	; 0x2c
   41b34:	mov	sl, #10
   41b38:	add	r1, r0, #1
   41b3c:	str	r1, [r4, #20]
   41b40:	strb	r8, [r0]
   41b44:	ldrb	r0, [r4, #25]
   41b48:	ldr	r1, [r4, #20]
   41b4c:	cmp	r0, #0
   41b50:	beq	41c08 <flatcc_json_printer_int32_vector_field@@Base+0x2a8>
   41b54:	add	r0, r1, #1
   41b58:	str	r0, [r4, #20]
   41b5c:	strb	sl, [r1]
   41b60:	ldr	r0, [r4, #20]
   41b64:	ldrb	r2, [r4, #25]
   41b68:	ldr	r3, [r4, #32]
   41b6c:	ldr	r1, [r4, #16]
   41b70:	mla	r6, r3, r2, r0
   41b74:	mul	r5, r3, r2
   41b78:	cmp	r6, r1
   41b7c:	bls	41bec <flatcc_json_printer_int32_vector_field@@Base+0x28c>
   41b80:	cmp	r0, r1
   41b84:	bcc	41ba0 <flatcc_json_printer_int32_vector_field@@Base+0x240>
   41b88:	ldr	r2, [r4, #44]	; 0x2c
   41b8c:	mov	r0, r4
   41b90:	mov	r1, #0
   41b94:	blx	r2
   41b98:	ldr	r1, [r4, #16]
   41b9c:	ldr	r0, [r4, #20]
   41ba0:	sub	r6, r1, r0
   41ba4:	cmp	r6, r5
   41ba8:	bcs	41bec <flatcc_json_printer_int32_vector_field@@Base+0x28c>
   41bac:	mov	r1, #32
   41bb0:	mov	r2, r6
   41bb4:	bl	14ef0 <memset@plt>
   41bb8:	ldr	r0, [r4, #20]
   41bbc:	ldr	r2, [r4, #44]	; 0x2c
   41bc0:	mov	r1, #0
   41bc4:	add	r0, r0, r6
   41bc8:	str	r0, [r4, #20]
   41bcc:	mov	r0, r4
   41bd0:	blx	r2
   41bd4:	ldr	r1, [r4, #16]
   41bd8:	ldr	r0, [r4, #20]
   41bdc:	sub	r5, r5, r6
   41be0:	sub	r6, r1, r0
   41be4:	cmp	r5, r6
   41be8:	bhi	41bac <flatcc_json_printer_int32_vector_field@@Base+0x24c>
   41bec:	mov	r1, #32
   41bf0:	mov	r2, r5
   41bf4:	bl	14ef0 <memset@plt>
   41bf8:	ldr	r0, [r4, #20]
   41bfc:	add	r1, r0, r5
   41c00:	str	r1, [r4, #20]
   41c04:	b	41c28 <flatcc_json_printer_int32_vector_field@@Base+0x2c8>
   41c08:	ldr	r0, [r4, #16]
   41c0c:	cmp	r1, r0
   41c10:	bcc	41c28 <flatcc_json_printer_int32_vector_field@@Base+0x2c8>
   41c14:	ldr	r2, [r4, #44]	; 0x2c
   41c18:	mov	r0, r4
   41c1c:	mov	r1, #0
   41c20:	blx	r2
   41c24:	ldr	r1, [r4, #20]
   41c28:	ldr	r0, [r7]
   41c2c:	sub	r9, r9, #1
   41c30:	cmn	r0, #1
   41c34:	lsr	r5, r0, #31
   41c38:	movle	r2, #45	; 0x2d
   41c3c:	rsble	r0, r0, #0
   41c40:	strble	r2, [r1], #1
   41c44:	bl	3c890 <flatcc_json_printer_uint32@@Base+0x2c>
   41c48:	ldr	r1, [r4, #20]
   41c4c:	add	r0, r0, r5
   41c50:	add	r7, r7, #4
   41c54:	cmp	r9, #0
   41c58:	add	r0, r1, r0
   41c5c:	str	r0, [r4, #20]
   41c60:	bne	41b38 <flatcc_json_printer_int32_vector_field@@Base+0x1d8>
   41c64:	ldrb	r1, [r4, #25]
   41c68:	ldr	r0, [r4, #20]
   41c6c:	cmp	r1, #0
   41c70:	beq	41d30 <flatcc_json_printer_int32_vector_field@@Base+0x3d0>
   41c74:	add	r1, r0, #1
   41c78:	str	r1, [r4, #20]
   41c7c:	mov	r1, #10
   41c80:	strb	r1, [r0]
   41c84:	ldr	r0, [r4, #32]
   41c88:	sub	r2, r0, #1
   41c8c:	str	r2, [r4, #32]
   41c90:	ldrb	r3, [r4, #25]
   41c94:	ldr	r0, [r4, #20]
   41c98:	ldr	r1, [r4, #16]
   41c9c:	mla	r7, r2, r3, r0
   41ca0:	mul	r5, r2, r3
   41ca4:	cmp	r7, r1
   41ca8:	bls	41d18 <flatcc_json_printer_int32_vector_field@@Base+0x3b8>
   41cac:	cmp	r0, r1
   41cb0:	bcc	41ccc <flatcc_json_printer_int32_vector_field@@Base+0x36c>
   41cb4:	ldr	r2, [r4, #44]	; 0x2c
   41cb8:	mov	r0, r4
   41cbc:	mov	r1, #0
   41cc0:	blx	r2
   41cc4:	ldr	r1, [r4, #16]
   41cc8:	ldr	r0, [r4, #20]
   41ccc:	sub	r6, r1, r0
   41cd0:	cmp	r6, r5
   41cd4:	bcs	41d18 <flatcc_json_printer_int32_vector_field@@Base+0x3b8>
   41cd8:	mov	r1, #32
   41cdc:	mov	r2, r6
   41ce0:	bl	14ef0 <memset@plt>
   41ce4:	ldr	r0, [r4, #20]
   41ce8:	ldr	r2, [r4, #44]	; 0x2c
   41cec:	mov	r1, #0
   41cf0:	add	r0, r0, r6
   41cf4:	str	r0, [r4, #20]
   41cf8:	mov	r0, r4
   41cfc:	blx	r2
   41d00:	ldr	r1, [r4, #16]
   41d04:	ldr	r0, [r4, #20]
   41d08:	sub	r5, r5, r6
   41d0c:	sub	r6, r1, r0
   41d10:	cmp	r5, r6
   41d14:	bhi	41cd8 <flatcc_json_printer_int32_vector_field@@Base+0x378>
   41d18:	mov	r1, #32
   41d1c:	mov	r2, r5
   41d20:	bl	14ef0 <memset@plt>
   41d24:	ldr	r0, [r4, #20]
   41d28:	add	r0, r0, r5
   41d2c:	str	r0, [r4, #20]
   41d30:	add	r1, r0, #1
   41d34:	str	r1, [r4, #20]
   41d38:	mov	r1, #93	; 0x5d
   41d3c:	strb	r1, [r0]
   41d40:	sub	sp, fp, #28
   41d44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00041d48 <flatcc_json_printer_int64_vector_field@@Base>:
   41d48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41d4c:	add	fp, sp, #28
   41d50:	sub	sp, sp, #4
   41d54:	mov	r4, r0
   41d58:	mov	r0, #4
   41d5c:	add	r0, r0, r2, lsl #1
   41d60:	ldr	r2, [r1, #8]
   41d64:	cmp	r0, r2
   41d68:	bge	41d88 <flatcc_json_printer_int64_vector_field@@Base+0x40>
   41d6c:	ldr	r2, [r1, #4]
   41d70:	add	r0, r2, r0
   41d74:	ldrh	r0, [r0]
   41d78:	cmp	r0, #0
   41d7c:	ldrne	r2, [r1]
   41d80:	addsne	r8, r2, r0
   41d84:	bne	41d90 <flatcc_json_printer_int64_vector_field@@Base+0x48>
   41d88:	sub	sp, fp, #28
   41d8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41d90:	ldr	r0, [r1, #16]
   41d94:	ldr	r2, [fp, #8]
   41d98:	add	r7, r0, #1
   41d9c:	cmp	r0, #0
   41da0:	str	r7, [r1, #16]
   41da4:	ldrne	r0, [r4, #20]
   41da8:	addne	r1, r0, #1
   41dac:	strne	r1, [r4, #20]
   41db0:	movne	r1, #44	; 0x2c
   41db4:	strbne	r1, [r0]
   41db8:	mov	r1, r3
   41dbc:	ldr	r0, [r8]
   41dc0:	ldr	r7, [r8, r0]!
   41dc4:	mov	r0, r4
   41dc8:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   41dcc:	ldr	r1, [r4, #32]
   41dd0:	ldr	r0, [r4, #20]
   41dd4:	cmp	r7, #0
   41dd8:	add	r1, r1, #1
   41ddc:	str	r1, [r4, #32]
   41de0:	add	r1, r0, #1
   41de4:	str	r1, [r4, #20]
   41de8:	mov	r1, #91	; 0x5b
   41dec:	strb	r1, [r0]
   41df0:	beq	4206c <flatcc_json_printer_int64_vector_field@@Base+0x324>
   41df4:	ldrb	r0, [r4, #25]
   41df8:	ldr	r2, [r4, #20]
   41dfc:	cmp	r0, #0
   41e00:	beq	41ecc <flatcc_json_printer_int64_vector_field@@Base+0x184>
   41e04:	add	r0, r2, #1
   41e08:	str	r0, [r4, #20]
   41e0c:	mov	r0, #10
   41e10:	strb	r0, [r2]
   41e14:	ldr	r0, [r4, #20]
   41e18:	ldrb	r2, [r4, #25]
   41e1c:	ldr	r3, [r4, #32]
   41e20:	ldr	r1, [r4, #16]
   41e24:	mla	r6, r3, r2, r0
   41e28:	mul	r5, r3, r2
   41e2c:	cmp	r6, r1
   41e30:	bls	41ea0 <flatcc_json_printer_int64_vector_field@@Base+0x158>
   41e34:	cmp	r0, r1
   41e38:	bcc	41e54 <flatcc_json_printer_int64_vector_field@@Base+0x10c>
   41e3c:	ldr	r2, [r4, #44]	; 0x2c
   41e40:	mov	r0, r4
   41e44:	mov	r1, #0
   41e48:	blx	r2
   41e4c:	ldr	r1, [r4, #16]
   41e50:	ldr	r0, [r4, #20]
   41e54:	sub	r6, r1, r0
   41e58:	cmp	r6, r5
   41e5c:	bcs	41ea0 <flatcc_json_printer_int64_vector_field@@Base+0x158>
   41e60:	mov	r1, #32
   41e64:	mov	r2, r6
   41e68:	bl	14ef0 <memset@plt>
   41e6c:	ldr	r0, [r4, #20]
   41e70:	ldr	r2, [r4, #44]	; 0x2c
   41e74:	mov	r1, #0
   41e78:	add	r0, r0, r6
   41e7c:	str	r0, [r4, #20]
   41e80:	mov	r0, r4
   41e84:	blx	r2
   41e88:	ldr	r1, [r4, #16]
   41e8c:	ldr	r0, [r4, #20]
   41e90:	sub	r5, r5, r6
   41e94:	sub	r6, r1, r0
   41e98:	cmp	r5, r6
   41e9c:	bhi	41e60 <flatcc_json_printer_int64_vector_field@@Base+0x118>
   41ea0:	mov	r1, #32
   41ea4:	mov	r2, r5
   41ea8:	bl	14ef0 <memset@plt>
   41eac:	ldr	r0, [r4, #20]
   41eb0:	add	r2, r0, r5
   41eb4:	str	r2, [r4, #20]
   41eb8:	ldrd	r0, [r8, #4]
   41ebc:	lsr	r5, r1, #31
   41ec0:	cmn	r1, #1
   41ec4:	bgt	41f0c <flatcc_json_printer_int64_vector_field@@Base+0x1c4>
   41ec8:	b	41efc <flatcc_json_printer_int64_vector_field@@Base+0x1b4>
   41ecc:	ldr	r0, [r4, #16]
   41ed0:	cmp	r2, r0
   41ed4:	bcc	41eec <flatcc_json_printer_int64_vector_field@@Base+0x1a4>
   41ed8:	ldr	r2, [r4, #44]	; 0x2c
   41edc:	mov	r0, r4
   41ee0:	mov	r1, #0
   41ee4:	blx	r2
   41ee8:	ldr	r2, [r4, #20]
   41eec:	ldrd	r0, [r8, #4]
   41ef0:	lsr	r5, r1, #31
   41ef4:	cmn	r1, #1
   41ef8:	bgt	41f0c <flatcc_json_printer_int64_vector_field@@Base+0x1c4>
   41efc:	mov	r3, #45	; 0x2d
   41f00:	rsbs	r0, r0, #0
   41f04:	strb	r3, [r2], #1
   41f08:	rsc	r1, r1, #0
   41f0c:	bl	3cbf8 <flatcc_json_printer_uint64@@Base+0x30>
   41f10:	ldr	r1, [r4, #20]
   41f14:	add	r0, r0, r5
   41f18:	subs	r9, r7, #1
   41f1c:	add	r0, r1, r0
   41f20:	str	r0, [r4, #20]
   41f24:	beq	4206c <flatcc_json_printer_int64_vector_field@@Base+0x324>
   41f28:	ldr	r0, [r4, #20]
   41f2c:	add	r7, r8, #12
   41f30:	mov	r8, #44	; 0x2c
   41f34:	mov	sl, #10
   41f38:	add	r1, r0, #1
   41f3c:	str	r1, [r4, #20]
   41f40:	strb	r8, [r0]
   41f44:	ldrb	r0, [r4, #25]
   41f48:	ldr	r2, [r4, #20]
   41f4c:	cmp	r0, #0
   41f50:	beq	42008 <flatcc_json_printer_int64_vector_field@@Base+0x2c0>
   41f54:	add	r0, r2, #1
   41f58:	str	r0, [r4, #20]
   41f5c:	strb	sl, [r2]
   41f60:	ldr	r0, [r4, #20]
   41f64:	ldrb	r2, [r4, #25]
   41f68:	ldr	r3, [r4, #32]
   41f6c:	ldr	r1, [r4, #16]
   41f70:	mla	r6, r3, r2, r0
   41f74:	mul	r5, r3, r2
   41f78:	cmp	r6, r1
   41f7c:	bls	41fec <flatcc_json_printer_int64_vector_field@@Base+0x2a4>
   41f80:	cmp	r0, r1
   41f84:	bcc	41fa0 <flatcc_json_printer_int64_vector_field@@Base+0x258>
   41f88:	ldr	r2, [r4, #44]	; 0x2c
   41f8c:	mov	r0, r4
   41f90:	mov	r1, #0
   41f94:	blx	r2
   41f98:	ldr	r1, [r4, #16]
   41f9c:	ldr	r0, [r4, #20]
   41fa0:	sub	r6, r1, r0
   41fa4:	cmp	r6, r5
   41fa8:	bcs	41fec <flatcc_json_printer_int64_vector_field@@Base+0x2a4>
   41fac:	mov	r1, #32
   41fb0:	mov	r2, r6
   41fb4:	bl	14ef0 <memset@plt>
   41fb8:	ldr	r0, [r4, #20]
   41fbc:	ldr	r2, [r4, #44]	; 0x2c
   41fc0:	mov	r1, #0
   41fc4:	add	r0, r0, r6
   41fc8:	str	r0, [r4, #20]
   41fcc:	mov	r0, r4
   41fd0:	blx	r2
   41fd4:	ldr	r1, [r4, #16]
   41fd8:	ldr	r0, [r4, #20]
   41fdc:	sub	r5, r5, r6
   41fe0:	sub	r6, r1, r0
   41fe4:	cmp	r5, r6
   41fe8:	bhi	41fac <flatcc_json_printer_int64_vector_field@@Base+0x264>
   41fec:	mov	r1, #32
   41ff0:	mov	r2, r5
   41ff4:	bl	14ef0 <memset@plt>
   41ff8:	ldr	r0, [r4, #20]
   41ffc:	add	r2, r0, r5
   42000:	str	r2, [r4, #20]
   42004:	b	42028 <flatcc_json_printer_int64_vector_field@@Base+0x2e0>
   42008:	ldr	r0, [r4, #16]
   4200c:	cmp	r2, r0
   42010:	bcc	42028 <flatcc_json_printer_int64_vector_field@@Base+0x2e0>
   42014:	ldr	r2, [r4, #44]	; 0x2c
   42018:	mov	r0, r4
   4201c:	mov	r1, #0
   42020:	blx	r2
   42024:	ldr	r2, [r4, #20]
   42028:	ldrd	r0, [r7]
   4202c:	sub	r9, r9, #1
   42030:	lsr	r5, r1, #31
   42034:	cmn	r1, #1
   42038:	bgt	4204c <flatcc_json_printer_int64_vector_field@@Base+0x304>
   4203c:	mov	r3, #45	; 0x2d
   42040:	rsbs	r0, r0, #0
   42044:	strb	r3, [r2], #1
   42048:	rsc	r1, r1, #0
   4204c:	bl	3cbf8 <flatcc_json_printer_uint64@@Base+0x30>
   42050:	ldr	r1, [r4, #20]
   42054:	add	r0, r0, r5
   42058:	add	r7, r7, #8
   4205c:	cmp	r9, #0
   42060:	add	r0, r1, r0
   42064:	str	r0, [r4, #20]
   42068:	bne	41f38 <flatcc_json_printer_int64_vector_field@@Base+0x1f0>
   4206c:	ldrb	r1, [r4, #25]
   42070:	ldr	r0, [r4, #20]
   42074:	cmp	r1, #0
   42078:	beq	42138 <flatcc_json_printer_int64_vector_field@@Base+0x3f0>
   4207c:	add	r1, r0, #1
   42080:	str	r1, [r4, #20]
   42084:	mov	r1, #10
   42088:	strb	r1, [r0]
   4208c:	ldr	r0, [r4, #32]
   42090:	sub	r2, r0, #1
   42094:	str	r2, [r4, #32]
   42098:	ldrb	r3, [r4, #25]
   4209c:	ldr	r0, [r4, #20]
   420a0:	ldr	r1, [r4, #16]
   420a4:	mla	r7, r2, r3, r0
   420a8:	mul	r5, r2, r3
   420ac:	cmp	r7, r1
   420b0:	bls	42120 <flatcc_json_printer_int64_vector_field@@Base+0x3d8>
   420b4:	cmp	r0, r1
   420b8:	bcc	420d4 <flatcc_json_printer_int64_vector_field@@Base+0x38c>
   420bc:	ldr	r2, [r4, #44]	; 0x2c
   420c0:	mov	r0, r4
   420c4:	mov	r1, #0
   420c8:	blx	r2
   420cc:	ldr	r1, [r4, #16]
   420d0:	ldr	r0, [r4, #20]
   420d4:	sub	r6, r1, r0
   420d8:	cmp	r6, r5
   420dc:	bcs	42120 <flatcc_json_printer_int64_vector_field@@Base+0x3d8>
   420e0:	mov	r1, #32
   420e4:	mov	r2, r6
   420e8:	bl	14ef0 <memset@plt>
   420ec:	ldr	r0, [r4, #20]
   420f0:	ldr	r2, [r4, #44]	; 0x2c
   420f4:	mov	r1, #0
   420f8:	add	r0, r0, r6
   420fc:	str	r0, [r4, #20]
   42100:	mov	r0, r4
   42104:	blx	r2
   42108:	ldr	r1, [r4, #16]
   4210c:	ldr	r0, [r4, #20]
   42110:	sub	r5, r5, r6
   42114:	sub	r6, r1, r0
   42118:	cmp	r5, r6
   4211c:	bhi	420e0 <flatcc_json_printer_int64_vector_field@@Base+0x398>
   42120:	mov	r1, #32
   42124:	mov	r2, r5
   42128:	bl	14ef0 <memset@plt>
   4212c:	ldr	r0, [r4, #20]
   42130:	add	r0, r0, r5
   42134:	str	r0, [r4, #20]
   42138:	add	r1, r0, #1
   4213c:	str	r1, [r4, #20]
   42140:	mov	r1, #93	; 0x5d
   42144:	strb	r1, [r0]
   42148:	sub	sp, fp, #28
   4214c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00042150 <flatcc_json_printer_bool_vector_field@@Base>:
   42150:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42154:	add	fp, sp, #28
   42158:	sub	sp, sp, #4
   4215c:	mov	r4, r0
   42160:	mov	r0, #4
   42164:	add	r0, r0, r2, lsl #1
   42168:	ldr	r2, [r1, #8]
   4216c:	cmp	r0, r2
   42170:	bge	42190 <flatcc_json_printer_bool_vector_field@@Base+0x40>
   42174:	ldr	r2, [r1, #4]
   42178:	add	r0, r2, r0
   4217c:	ldrh	r0, [r0]
   42180:	cmp	r0, #0
   42184:	ldrne	r2, [r1]
   42188:	addsne	r8, r2, r0
   4218c:	bne	42198 <flatcc_json_printer_bool_vector_field@@Base+0x48>
   42190:	sub	sp, fp, #28
   42194:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42198:	ldr	r0, [r1, #16]
   4219c:	ldr	r2, [fp, #8]
   421a0:	add	r7, r0, #1
   421a4:	cmp	r0, #0
   421a8:	str	r7, [r1, #16]
   421ac:	ldrne	r0, [r4, #20]
   421b0:	addne	r1, r0, #1
   421b4:	strne	r1, [r4, #20]
   421b8:	movne	r1, #44	; 0x2c
   421bc:	strbne	r1, [r0]
   421c0:	mov	r1, r3
   421c4:	ldr	r0, [r8]
   421c8:	ldr	r7, [r8, r0]!
   421cc:	mov	r0, r4
   421d0:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   421d4:	ldr	r1, [r4, #32]
   421d8:	ldr	r0, [r4, #20]
   421dc:	cmp	r7, #0
   421e0:	add	r1, r1, #1
   421e4:	str	r1, [r4, #32]
   421e8:	add	r1, r0, #1
   421ec:	str	r1, [r4, #20]
   421f0:	mov	r1, #91	; 0x5b
   421f4:	strb	r1, [r0]
   421f8:	beq	424b0 <flatcc_json_printer_bool_vector_field@@Base+0x360>
   421fc:	ldrb	r1, [r4, #25]
   42200:	ldr	r0, [r4, #20]
   42204:	cmp	r1, #0
   42208:	beq	422d0 <flatcc_json_printer_bool_vector_field@@Base+0x180>
   4220c:	add	r1, r0, #1
   42210:	str	r1, [r4, #20]
   42214:	mov	r1, #10
   42218:	strb	r1, [r0]
   4221c:	ldr	r0, [r4, #20]
   42220:	ldrb	r2, [r4, #25]
   42224:	ldr	r3, [r4, #32]
   42228:	ldr	r1, [r4, #16]
   4222c:	mla	r6, r3, r2, r0
   42230:	mul	r5, r3, r2
   42234:	cmp	r6, r1
   42238:	bls	422a8 <flatcc_json_printer_bool_vector_field@@Base+0x158>
   4223c:	cmp	r0, r1
   42240:	bcc	4225c <flatcc_json_printer_bool_vector_field@@Base+0x10c>
   42244:	ldr	r2, [r4, #44]	; 0x2c
   42248:	mov	r0, r4
   4224c:	mov	r1, #0
   42250:	blx	r2
   42254:	ldr	r1, [r4, #16]
   42258:	ldr	r0, [r4, #20]
   4225c:	sub	r6, r1, r0
   42260:	cmp	r6, r5
   42264:	bcs	422a8 <flatcc_json_printer_bool_vector_field@@Base+0x158>
   42268:	mov	r1, #32
   4226c:	mov	r2, r6
   42270:	bl	14ef0 <memset@plt>
   42274:	ldr	r0, [r4, #20]
   42278:	ldr	r2, [r4, #44]	; 0x2c
   4227c:	mov	r1, #0
   42280:	add	r0, r0, r6
   42284:	str	r0, [r4, #20]
   42288:	mov	r0, r4
   4228c:	blx	r2
   42290:	ldr	r1, [r4, #16]
   42294:	ldr	r0, [r4, #20]
   42298:	sub	r5, r5, r6
   4229c:	sub	r6, r1, r0
   422a0:	cmp	r5, r6
   422a4:	bhi	42268 <flatcc_json_printer_bool_vector_field@@Base+0x118>
   422a8:	mov	r1, #32
   422ac:	mov	r2, r5
   422b0:	bl	14ef0 <memset@plt>
   422b4:	ldr	r0, [r4, #20]
   422b8:	add	r0, r0, r5
   422bc:	str	r0, [r4, #20]
   422c0:	ldrb	r1, [r8, #4]
   422c4:	cmp	r1, #0
   422c8:	bne	422fc <flatcc_json_printer_bool_vector_field@@Base+0x1ac>
   422cc:	b	42318 <flatcc_json_printer_bool_vector_field@@Base+0x1c8>
   422d0:	ldr	r1, [r4, #16]
   422d4:	cmp	r0, r1
   422d8:	bcc	422f0 <flatcc_json_printer_bool_vector_field@@Base+0x1a0>
   422dc:	ldr	r2, [r4, #44]	; 0x2c
   422e0:	mov	r0, r4
   422e4:	mov	r1, #0
   422e8:	blx	r2
   422ec:	ldr	r0, [r4, #20]
   422f0:	ldrb	r1, [r8, #4]
   422f4:	cmp	r1, #0
   422f8:	beq	42318 <flatcc_json_printer_bool_vector_field@@Base+0x1c8>
   422fc:	mov	r1, #0
   42300:	strb	r1, [r0, #4]
   42304:	movw	r1, #29300	; 0x7274
   42308:	movt	r1, #25973	; 0x6575
   4230c:	str	r1, [r0]
   42310:	mov	r0, #4
   42314:	b	42330 <flatcc_json_printer_bool_vector_field@@Base+0x1e0>
   42318:	mov	r1, #101	; 0x65
   4231c:	strh	r1, [r0, #4]
   42320:	movw	r1, #24934	; 0x6166
   42324:	movt	r1, #29548	; 0x736c
   42328:	str	r1, [r0]
   4232c:	mov	r0, #5
   42330:	ldr	r1, [r4, #20]
   42334:	subs	r9, r7, #1
   42338:	add	r0, r1, r0
   4233c:	str	r0, [r4, #20]
   42340:	beq	424b0 <flatcc_json_printer_bool_vector_field@@Base+0x360>
   42344:	ldr	r0, [r4, #20]
   42348:	add	r7, r8, #5
   4234c:	mov	r8, #44	; 0x2c
   42350:	mov	sl, #10
   42354:	add	r1, r0, #1
   42358:	str	r1, [r4, #20]
   4235c:	strb	r8, [r0]
   42360:	ldrb	r1, [r4, #25]
   42364:	ldr	r0, [r4, #20]
   42368:	cmp	r1, #0
   4236c:	beq	42434 <flatcc_json_printer_bool_vector_field@@Base+0x2e4>
   42370:	add	r1, r0, #1
   42374:	str	r1, [r4, #20]
   42378:	strb	sl, [r0]
   4237c:	ldr	r0, [r4, #20]
   42380:	ldrb	r2, [r4, #25]
   42384:	ldr	r3, [r4, #32]
   42388:	ldr	r1, [r4, #16]
   4238c:	mla	r6, r3, r2, r0
   42390:	mul	r5, r3, r2
   42394:	cmp	r6, r1
   42398:	bls	42408 <flatcc_json_printer_bool_vector_field@@Base+0x2b8>
   4239c:	cmp	r0, r1
   423a0:	bcc	423bc <flatcc_json_printer_bool_vector_field@@Base+0x26c>
   423a4:	ldr	r2, [r4, #44]	; 0x2c
   423a8:	mov	r0, r4
   423ac:	mov	r1, #0
   423b0:	blx	r2
   423b4:	ldr	r1, [r4, #16]
   423b8:	ldr	r0, [r4, #20]
   423bc:	sub	r6, r1, r0
   423c0:	cmp	r6, r5
   423c4:	bcs	42408 <flatcc_json_printer_bool_vector_field@@Base+0x2b8>
   423c8:	mov	r1, #32
   423cc:	mov	r2, r6
   423d0:	bl	14ef0 <memset@plt>
   423d4:	ldr	r0, [r4, #20]
   423d8:	ldr	r2, [r4, #44]	; 0x2c
   423dc:	mov	r1, #0
   423e0:	add	r0, r0, r6
   423e4:	str	r0, [r4, #20]
   423e8:	mov	r0, r4
   423ec:	blx	r2
   423f0:	ldr	r1, [r4, #16]
   423f4:	ldr	r0, [r4, #20]
   423f8:	sub	r5, r5, r6
   423fc:	sub	r6, r1, r0
   42400:	cmp	r5, r6
   42404:	bhi	423c8 <flatcc_json_printer_bool_vector_field@@Base+0x278>
   42408:	mov	r1, #32
   4240c:	mov	r2, r5
   42410:	bl	14ef0 <memset@plt>
   42414:	ldr	r0, [r4, #20]
   42418:	add	r0, r0, r5
   4241c:	str	r0, [r4, #20]
   42420:	ldrb	r1, [r7]
   42424:	sub	r9, r9, #1
   42428:	cmp	r1, #0
   4242c:	bne	42464 <flatcc_json_printer_bool_vector_field@@Base+0x314>
   42430:	b	42480 <flatcc_json_printer_bool_vector_field@@Base+0x330>
   42434:	ldr	r1, [r4, #16]
   42438:	cmp	r0, r1
   4243c:	bcc	42454 <flatcc_json_printer_bool_vector_field@@Base+0x304>
   42440:	ldr	r2, [r4, #44]	; 0x2c
   42444:	mov	r0, r4
   42448:	mov	r1, #0
   4244c:	blx	r2
   42450:	ldr	r0, [r4, #20]
   42454:	ldrb	r1, [r7]
   42458:	sub	r9, r9, #1
   4245c:	cmp	r1, #0
   42460:	beq	42480 <flatcc_json_printer_bool_vector_field@@Base+0x330>
   42464:	mov	r1, #0
   42468:	strb	r1, [r0, #4]
   4246c:	movw	r1, #29300	; 0x7274
   42470:	movt	r1, #25973	; 0x6575
   42474:	str	r1, [r0]
   42478:	mov	r0, #4
   4247c:	b	42498 <flatcc_json_printer_bool_vector_field@@Base+0x348>
   42480:	mov	r1, #101	; 0x65
   42484:	strh	r1, [r0, #4]
   42488:	movw	r1, #24934	; 0x6166
   4248c:	movt	r1, #29548	; 0x736c
   42490:	str	r1, [r0]
   42494:	mov	r0, #5
   42498:	ldr	r1, [r4, #20]
   4249c:	add	r7, r7, #1
   424a0:	cmp	r9, #0
   424a4:	add	r0, r1, r0
   424a8:	str	r0, [r4, #20]
   424ac:	bne	42354 <flatcc_json_printer_bool_vector_field@@Base+0x204>
   424b0:	ldrb	r1, [r4, #25]
   424b4:	ldr	r0, [r4, #20]
   424b8:	cmp	r1, #0
   424bc:	beq	4257c <flatcc_json_printer_bool_vector_field@@Base+0x42c>
   424c0:	add	r1, r0, #1
   424c4:	str	r1, [r4, #20]
   424c8:	mov	r1, #10
   424cc:	strb	r1, [r0]
   424d0:	ldr	r0, [r4, #32]
   424d4:	sub	r2, r0, #1
   424d8:	str	r2, [r4, #32]
   424dc:	ldrb	r3, [r4, #25]
   424e0:	ldr	r0, [r4, #20]
   424e4:	ldr	r1, [r4, #16]
   424e8:	mla	r7, r2, r3, r0
   424ec:	mul	r5, r2, r3
   424f0:	cmp	r7, r1
   424f4:	bls	42564 <flatcc_json_printer_bool_vector_field@@Base+0x414>
   424f8:	cmp	r0, r1
   424fc:	bcc	42518 <flatcc_json_printer_bool_vector_field@@Base+0x3c8>
   42500:	ldr	r2, [r4, #44]	; 0x2c
   42504:	mov	r0, r4
   42508:	mov	r1, #0
   4250c:	blx	r2
   42510:	ldr	r1, [r4, #16]
   42514:	ldr	r0, [r4, #20]
   42518:	sub	r6, r1, r0
   4251c:	cmp	r6, r5
   42520:	bcs	42564 <flatcc_json_printer_bool_vector_field@@Base+0x414>
   42524:	mov	r1, #32
   42528:	mov	r2, r6
   4252c:	bl	14ef0 <memset@plt>
   42530:	ldr	r0, [r4, #20]
   42534:	ldr	r2, [r4, #44]	; 0x2c
   42538:	mov	r1, #0
   4253c:	add	r0, r0, r6
   42540:	str	r0, [r4, #20]
   42544:	mov	r0, r4
   42548:	blx	r2
   4254c:	ldr	r1, [r4, #16]
   42550:	ldr	r0, [r4, #20]
   42554:	sub	r5, r5, r6
   42558:	sub	r6, r1, r0
   4255c:	cmp	r5, r6
   42560:	bhi	42524 <flatcc_json_printer_bool_vector_field@@Base+0x3d4>
   42564:	mov	r1, #32
   42568:	mov	r2, r5
   4256c:	bl	14ef0 <memset@plt>
   42570:	ldr	r0, [r4, #20]
   42574:	add	r0, r0, r5
   42578:	str	r0, [r4, #20]
   4257c:	add	r1, r0, #1
   42580:	str	r1, [r4, #20]
   42584:	mov	r1, #93	; 0x5d
   42588:	strb	r1, [r0]
   4258c:	sub	sp, fp, #28
   42590:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00042594 <flatcc_json_printer_float_vector_field@@Base>:
   42594:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42598:	add	fp, sp, #28
   4259c:	sub	sp, sp, #4
   425a0:	mov	r4, r0
   425a4:	mov	r0, #4
   425a8:	add	r0, r0, r2, lsl #1
   425ac:	ldr	r2, [r1, #8]
   425b0:	cmp	r0, r2
   425b4:	bge	425d4 <flatcc_json_printer_float_vector_field@@Base+0x40>
   425b8:	ldr	r2, [r1, #4]
   425bc:	add	r0, r2, r0
   425c0:	ldrh	r0, [r0]
   425c4:	cmp	r0, #0
   425c8:	ldrne	r2, [r1]
   425cc:	addsne	r8, r2, r0
   425d0:	bne	425dc <flatcc_json_printer_float_vector_field@@Base+0x48>
   425d4:	sub	sp, fp, #28
   425d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   425dc:	ldr	r0, [r1, #16]
   425e0:	ldr	r2, [fp, #8]
   425e4:	add	r7, r0, #1
   425e8:	cmp	r0, #0
   425ec:	str	r7, [r1, #16]
   425f0:	ldrne	r0, [r4, #20]
   425f4:	addne	r1, r0, #1
   425f8:	strne	r1, [r4, #20]
   425fc:	movne	r1, #44	; 0x2c
   42600:	strbne	r1, [r0]
   42604:	mov	r1, r3
   42608:	ldr	r0, [r8]
   4260c:	ldr	r7, [r8, r0]!
   42610:	mov	r0, r4
   42614:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   42618:	ldr	r1, [r4, #32]
   4261c:	ldr	r0, [r4, #20]
   42620:	cmp	r7, #0
   42624:	add	r1, r1, #1
   42628:	str	r1, [r4, #32]
   4262c:	add	r1, r0, #1
   42630:	str	r1, [r4, #20]
   42634:	mov	r1, #91	; 0x5b
   42638:	strb	r1, [r0]
   4263c:	beq	42870 <flatcc_json_printer_float_vector_field@@Base+0x2dc>
   42640:	ldrb	r1, [r4, #25]
   42644:	ldr	r0, [r4, #20]
   42648:	cmp	r1, #0
   4264c:	beq	42708 <flatcc_json_printer_float_vector_field@@Base+0x174>
   42650:	add	r1, r0, #1
   42654:	str	r1, [r4, #20]
   42658:	mov	r1, #10
   4265c:	strb	r1, [r0]
   42660:	ldr	r0, [r4, #20]
   42664:	ldrb	r2, [r4, #25]
   42668:	ldr	r3, [r4, #32]
   4266c:	ldr	r1, [r4, #16]
   42670:	mla	r6, r3, r2, r0
   42674:	mul	r5, r3, r2
   42678:	cmp	r6, r1
   4267c:	bls	426ec <flatcc_json_printer_float_vector_field@@Base+0x158>
   42680:	cmp	r0, r1
   42684:	bcc	426a0 <flatcc_json_printer_float_vector_field@@Base+0x10c>
   42688:	ldr	r2, [r4, #44]	; 0x2c
   4268c:	mov	r0, r4
   42690:	mov	r1, #0
   42694:	blx	r2
   42698:	ldr	r1, [r4, #16]
   4269c:	ldr	r0, [r4, #20]
   426a0:	sub	r6, r1, r0
   426a4:	cmp	r6, r5
   426a8:	bcs	426ec <flatcc_json_printer_float_vector_field@@Base+0x158>
   426ac:	mov	r1, #32
   426b0:	mov	r2, r6
   426b4:	bl	14ef0 <memset@plt>
   426b8:	ldr	r0, [r4, #20]
   426bc:	ldr	r2, [r4, #44]	; 0x2c
   426c0:	mov	r1, #0
   426c4:	add	r0, r0, r6
   426c8:	str	r0, [r4, #20]
   426cc:	mov	r0, r4
   426d0:	blx	r2
   426d4:	ldr	r1, [r4, #16]
   426d8:	ldr	r0, [r4, #20]
   426dc:	sub	r5, r5, r6
   426e0:	sub	r6, r1, r0
   426e4:	cmp	r5, r6
   426e8:	bhi	426ac <flatcc_json_printer_float_vector_field@@Base+0x118>
   426ec:	mov	r1, #32
   426f0:	mov	r2, r5
   426f4:	bl	14ef0 <memset@plt>
   426f8:	ldr	r0, [r4, #20]
   426fc:	add	r0, r0, r5
   42700:	str	r0, [r4, #20]
   42704:	b	42728 <flatcc_json_printer_float_vector_field@@Base+0x194>
   42708:	ldr	r1, [r4, #16]
   4270c:	cmp	r0, r1
   42710:	bcc	42728 <flatcc_json_printer_float_vector_field@@Base+0x194>
   42714:	ldr	r2, [r4, #44]	; 0x2c
   42718:	mov	r0, r4
   4271c:	mov	r1, #0
   42720:	blx	r2
   42724:	ldr	r0, [r4, #20]
   42728:	vldr	s0, [r8, #4]
   4272c:	vcvt.f64.f32	d0, s0
   42730:	bl	3b290 <flatcc_json_printer_fmt_float@@Base+0x8>
   42734:	ldr	r1, [r4, #20]
   42738:	subs	r9, r7, #1
   4273c:	add	r0, r1, r0
   42740:	str	r0, [r4, #20]
   42744:	beq	42870 <flatcc_json_printer_float_vector_field@@Base+0x2dc>
   42748:	ldr	r0, [r4, #20]
   4274c:	add	r7, r8, #8
   42750:	mov	r8, #44	; 0x2c
   42754:	mov	sl, #10
   42758:	add	r1, r0, #1
   4275c:	sub	r9, r9, #1
   42760:	str	r1, [r4, #20]
   42764:	strb	r8, [r0]
   42768:	ldrb	r1, [r4, #25]
   4276c:	ldr	r0, [r4, #20]
   42770:	cmp	r1, #0
   42774:	beq	4282c <flatcc_json_printer_float_vector_field@@Base+0x298>
   42778:	add	r1, r0, #1
   4277c:	str	r1, [r4, #20]
   42780:	strb	sl, [r0]
   42784:	ldr	r0, [r4, #20]
   42788:	ldrb	r2, [r4, #25]
   4278c:	ldr	r3, [r4, #32]
   42790:	ldr	r1, [r4, #16]
   42794:	mla	r6, r3, r2, r0
   42798:	mul	r5, r3, r2
   4279c:	cmp	r6, r1
   427a0:	bls	42810 <flatcc_json_printer_float_vector_field@@Base+0x27c>
   427a4:	cmp	r0, r1
   427a8:	bcc	427c4 <flatcc_json_printer_float_vector_field@@Base+0x230>
   427ac:	ldr	r2, [r4, #44]	; 0x2c
   427b0:	mov	r0, r4
   427b4:	mov	r1, #0
   427b8:	blx	r2
   427bc:	ldr	r1, [r4, #16]
   427c0:	ldr	r0, [r4, #20]
   427c4:	sub	r6, r1, r0
   427c8:	cmp	r6, r5
   427cc:	bcs	42810 <flatcc_json_printer_float_vector_field@@Base+0x27c>
   427d0:	mov	r1, #32
   427d4:	mov	r2, r6
   427d8:	bl	14ef0 <memset@plt>
   427dc:	ldr	r0, [r4, #20]
   427e0:	ldr	r2, [r4, #44]	; 0x2c
   427e4:	mov	r1, #0
   427e8:	add	r0, r0, r6
   427ec:	str	r0, [r4, #20]
   427f0:	mov	r0, r4
   427f4:	blx	r2
   427f8:	ldr	r1, [r4, #16]
   427fc:	ldr	r0, [r4, #20]
   42800:	sub	r5, r5, r6
   42804:	sub	r6, r1, r0
   42808:	cmp	r5, r6
   4280c:	bhi	427d0 <flatcc_json_printer_float_vector_field@@Base+0x23c>
   42810:	mov	r1, #32
   42814:	mov	r2, r5
   42818:	bl	14ef0 <memset@plt>
   4281c:	ldr	r0, [r4, #20]
   42820:	add	r0, r0, r5
   42824:	str	r0, [r4, #20]
   42828:	b	4284c <flatcc_json_printer_float_vector_field@@Base+0x2b8>
   4282c:	ldr	r1, [r4, #16]
   42830:	cmp	r0, r1
   42834:	bcc	4284c <flatcc_json_printer_float_vector_field@@Base+0x2b8>
   42838:	ldr	r2, [r4, #44]	; 0x2c
   4283c:	mov	r0, r4
   42840:	mov	r1, #0
   42844:	blx	r2
   42848:	ldr	r0, [r4, #20]
   4284c:	vldr	s0, [r7]
   42850:	vcvt.f64.f32	d0, s0
   42854:	bl	3b290 <flatcc_json_printer_fmt_float@@Base+0x8>
   42858:	ldr	r1, [r4, #20]
   4285c:	add	r7, r7, #4
   42860:	cmp	r9, #0
   42864:	add	r0, r1, r0
   42868:	str	r0, [r4, #20]
   4286c:	bne	42758 <flatcc_json_printer_float_vector_field@@Base+0x1c4>
   42870:	ldrb	r1, [r4, #25]
   42874:	ldr	r0, [r4, #20]
   42878:	cmp	r1, #0
   4287c:	beq	4293c <flatcc_json_printer_float_vector_field@@Base+0x3a8>
   42880:	add	r1, r0, #1
   42884:	str	r1, [r4, #20]
   42888:	mov	r1, #10
   4288c:	strb	r1, [r0]
   42890:	ldr	r0, [r4, #32]
   42894:	sub	r2, r0, #1
   42898:	str	r2, [r4, #32]
   4289c:	ldrb	r3, [r4, #25]
   428a0:	ldr	r0, [r4, #20]
   428a4:	ldr	r1, [r4, #16]
   428a8:	mla	r7, r2, r3, r0
   428ac:	mul	r5, r2, r3
   428b0:	cmp	r7, r1
   428b4:	bls	42924 <flatcc_json_printer_float_vector_field@@Base+0x390>
   428b8:	cmp	r0, r1
   428bc:	bcc	428d8 <flatcc_json_printer_float_vector_field@@Base+0x344>
   428c0:	ldr	r2, [r4, #44]	; 0x2c
   428c4:	mov	r0, r4
   428c8:	mov	r1, #0
   428cc:	blx	r2
   428d0:	ldr	r1, [r4, #16]
   428d4:	ldr	r0, [r4, #20]
   428d8:	sub	r6, r1, r0
   428dc:	cmp	r6, r5
   428e0:	bcs	42924 <flatcc_json_printer_float_vector_field@@Base+0x390>
   428e4:	mov	r1, #32
   428e8:	mov	r2, r6
   428ec:	bl	14ef0 <memset@plt>
   428f0:	ldr	r0, [r4, #20]
   428f4:	ldr	r2, [r4, #44]	; 0x2c
   428f8:	mov	r1, #0
   428fc:	add	r0, r0, r6
   42900:	str	r0, [r4, #20]
   42904:	mov	r0, r4
   42908:	blx	r2
   4290c:	ldr	r1, [r4, #16]
   42910:	ldr	r0, [r4, #20]
   42914:	sub	r5, r5, r6
   42918:	sub	r6, r1, r0
   4291c:	cmp	r5, r6
   42920:	bhi	428e4 <flatcc_json_printer_float_vector_field@@Base+0x350>
   42924:	mov	r1, #32
   42928:	mov	r2, r5
   4292c:	bl	14ef0 <memset@plt>
   42930:	ldr	r0, [r4, #20]
   42934:	add	r0, r0, r5
   42938:	str	r0, [r4, #20]
   4293c:	add	r1, r0, #1
   42940:	str	r1, [r4, #20]
   42944:	mov	r1, #93	; 0x5d
   42948:	strb	r1, [r0]
   4294c:	sub	sp, fp, #28
   42950:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00042954 <flatcc_json_printer_double_vector_field@@Base>:
   42954:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42958:	add	fp, sp, #28
   4295c:	sub	sp, sp, #4
   42960:	mov	r4, r0
   42964:	mov	r0, #4
   42968:	add	r0, r0, r2, lsl #1
   4296c:	ldr	r2, [r1, #8]
   42970:	cmp	r0, r2
   42974:	bge	42994 <flatcc_json_printer_double_vector_field@@Base+0x40>
   42978:	ldr	r2, [r1, #4]
   4297c:	add	r0, r2, r0
   42980:	ldrh	r0, [r0]
   42984:	cmp	r0, #0
   42988:	ldrne	r2, [r1]
   4298c:	addsne	r8, r2, r0
   42990:	bne	4299c <flatcc_json_printer_double_vector_field@@Base+0x48>
   42994:	sub	sp, fp, #28
   42998:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4299c:	ldr	r0, [r1, #16]
   429a0:	ldr	r2, [fp, #8]
   429a4:	add	r7, r0, #1
   429a8:	cmp	r0, #0
   429ac:	str	r7, [r1, #16]
   429b0:	ldrne	r0, [r4, #20]
   429b4:	addne	r1, r0, #1
   429b8:	strne	r1, [r4, #20]
   429bc:	movne	r1, #44	; 0x2c
   429c0:	strbne	r1, [r0]
   429c4:	mov	r1, r3
   429c8:	ldr	r0, [r8]
   429cc:	ldr	r7, [r8, r0]!
   429d0:	mov	r0, r4
   429d4:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   429d8:	ldr	r1, [r4, #32]
   429dc:	ldr	r0, [r4, #20]
   429e0:	cmp	r7, #0
   429e4:	add	r1, r1, #1
   429e8:	str	r1, [r4, #32]
   429ec:	add	r1, r0, #1
   429f0:	str	r1, [r4, #20]
   429f4:	mov	r1, #91	; 0x5b
   429f8:	strb	r1, [r0]
   429fc:	beq	42c28 <flatcc_json_printer_double_vector_field@@Base+0x2d4>
   42a00:	ldrb	r1, [r4, #25]
   42a04:	ldr	r0, [r4, #20]
   42a08:	cmp	r1, #0
   42a0c:	beq	42ac8 <flatcc_json_printer_double_vector_field@@Base+0x174>
   42a10:	add	r1, r0, #1
   42a14:	str	r1, [r4, #20]
   42a18:	mov	r1, #10
   42a1c:	strb	r1, [r0]
   42a20:	ldr	r0, [r4, #20]
   42a24:	ldrb	r2, [r4, #25]
   42a28:	ldr	r3, [r4, #32]
   42a2c:	ldr	r1, [r4, #16]
   42a30:	mla	r6, r3, r2, r0
   42a34:	mul	r5, r3, r2
   42a38:	cmp	r6, r1
   42a3c:	bls	42aac <flatcc_json_printer_double_vector_field@@Base+0x158>
   42a40:	cmp	r0, r1
   42a44:	bcc	42a60 <flatcc_json_printer_double_vector_field@@Base+0x10c>
   42a48:	ldr	r2, [r4, #44]	; 0x2c
   42a4c:	mov	r0, r4
   42a50:	mov	r1, #0
   42a54:	blx	r2
   42a58:	ldr	r1, [r4, #16]
   42a5c:	ldr	r0, [r4, #20]
   42a60:	sub	r6, r1, r0
   42a64:	cmp	r6, r5
   42a68:	bcs	42aac <flatcc_json_printer_double_vector_field@@Base+0x158>
   42a6c:	mov	r1, #32
   42a70:	mov	r2, r6
   42a74:	bl	14ef0 <memset@plt>
   42a78:	ldr	r0, [r4, #20]
   42a7c:	ldr	r2, [r4, #44]	; 0x2c
   42a80:	mov	r1, #0
   42a84:	add	r0, r0, r6
   42a88:	str	r0, [r4, #20]
   42a8c:	mov	r0, r4
   42a90:	blx	r2
   42a94:	ldr	r1, [r4, #16]
   42a98:	ldr	r0, [r4, #20]
   42a9c:	sub	r5, r5, r6
   42aa0:	sub	r6, r1, r0
   42aa4:	cmp	r5, r6
   42aa8:	bhi	42a6c <flatcc_json_printer_double_vector_field@@Base+0x118>
   42aac:	mov	r1, #32
   42ab0:	mov	r2, r5
   42ab4:	bl	14ef0 <memset@plt>
   42ab8:	ldr	r0, [r4, #20]
   42abc:	add	r0, r0, r5
   42ac0:	str	r0, [r4, #20]
   42ac4:	b	42ae8 <flatcc_json_printer_double_vector_field@@Base+0x194>
   42ac8:	ldr	r1, [r4, #16]
   42acc:	cmp	r0, r1
   42ad0:	bcc	42ae8 <flatcc_json_printer_double_vector_field@@Base+0x194>
   42ad4:	ldr	r2, [r4, #44]	; 0x2c
   42ad8:	mov	r0, r4
   42adc:	mov	r1, #0
   42ae0:	blx	r2
   42ae4:	ldr	r0, [r4, #20]
   42ae8:	vldr	d0, [r8, #4]
   42aec:	bl	3b290 <flatcc_json_printer_fmt_float@@Base+0x8>
   42af0:	ldr	r1, [r4, #20]
   42af4:	subs	r9, r7, #1
   42af8:	add	r0, r1, r0
   42afc:	str	r0, [r4, #20]
   42b00:	beq	42c28 <flatcc_json_printer_double_vector_field@@Base+0x2d4>
   42b04:	ldr	r0, [r4, #20]
   42b08:	add	r7, r8, #12
   42b0c:	mov	r8, #44	; 0x2c
   42b10:	mov	sl, #10
   42b14:	add	r1, r0, #1
   42b18:	sub	r9, r9, #1
   42b1c:	str	r1, [r4, #20]
   42b20:	strb	r8, [r0]
   42b24:	ldrb	r1, [r4, #25]
   42b28:	ldr	r0, [r4, #20]
   42b2c:	cmp	r1, #0
   42b30:	beq	42be8 <flatcc_json_printer_double_vector_field@@Base+0x294>
   42b34:	add	r1, r0, #1
   42b38:	str	r1, [r4, #20]
   42b3c:	strb	sl, [r0]
   42b40:	ldr	r0, [r4, #20]
   42b44:	ldrb	r2, [r4, #25]
   42b48:	ldr	r3, [r4, #32]
   42b4c:	ldr	r1, [r4, #16]
   42b50:	mla	r6, r3, r2, r0
   42b54:	mul	r5, r3, r2
   42b58:	cmp	r6, r1
   42b5c:	bls	42bcc <flatcc_json_printer_double_vector_field@@Base+0x278>
   42b60:	cmp	r0, r1
   42b64:	bcc	42b80 <flatcc_json_printer_double_vector_field@@Base+0x22c>
   42b68:	ldr	r2, [r4, #44]	; 0x2c
   42b6c:	mov	r0, r4
   42b70:	mov	r1, #0
   42b74:	blx	r2
   42b78:	ldr	r1, [r4, #16]
   42b7c:	ldr	r0, [r4, #20]
   42b80:	sub	r6, r1, r0
   42b84:	cmp	r6, r5
   42b88:	bcs	42bcc <flatcc_json_printer_double_vector_field@@Base+0x278>
   42b8c:	mov	r1, #32
   42b90:	mov	r2, r6
   42b94:	bl	14ef0 <memset@plt>
   42b98:	ldr	r0, [r4, #20]
   42b9c:	ldr	r2, [r4, #44]	; 0x2c
   42ba0:	mov	r1, #0
   42ba4:	add	r0, r0, r6
   42ba8:	str	r0, [r4, #20]
   42bac:	mov	r0, r4
   42bb0:	blx	r2
   42bb4:	ldr	r1, [r4, #16]
   42bb8:	ldr	r0, [r4, #20]
   42bbc:	sub	r5, r5, r6
   42bc0:	sub	r6, r1, r0
   42bc4:	cmp	r5, r6
   42bc8:	bhi	42b8c <flatcc_json_printer_double_vector_field@@Base+0x238>
   42bcc:	mov	r1, #32
   42bd0:	mov	r2, r5
   42bd4:	bl	14ef0 <memset@plt>
   42bd8:	ldr	r0, [r4, #20]
   42bdc:	add	r0, r0, r5
   42be0:	str	r0, [r4, #20]
   42be4:	b	42c08 <flatcc_json_printer_double_vector_field@@Base+0x2b4>
   42be8:	ldr	r1, [r4, #16]
   42bec:	cmp	r0, r1
   42bf0:	bcc	42c08 <flatcc_json_printer_double_vector_field@@Base+0x2b4>
   42bf4:	ldr	r2, [r4, #44]	; 0x2c
   42bf8:	mov	r0, r4
   42bfc:	mov	r1, #0
   42c00:	blx	r2
   42c04:	ldr	r0, [r4, #20]
   42c08:	vldr	d0, [r7]
   42c0c:	bl	3b290 <flatcc_json_printer_fmt_float@@Base+0x8>
   42c10:	ldr	r1, [r4, #20]
   42c14:	add	r7, r7, #8
   42c18:	cmp	r9, #0
   42c1c:	add	r0, r1, r0
   42c20:	str	r0, [r4, #20]
   42c24:	bne	42b14 <flatcc_json_printer_double_vector_field@@Base+0x1c0>
   42c28:	ldrb	r1, [r4, #25]
   42c2c:	ldr	r0, [r4, #20]
   42c30:	cmp	r1, #0
   42c34:	beq	42cf4 <flatcc_json_printer_double_vector_field@@Base+0x3a0>
   42c38:	add	r1, r0, #1
   42c3c:	str	r1, [r4, #20]
   42c40:	mov	r1, #10
   42c44:	strb	r1, [r0]
   42c48:	ldr	r0, [r4, #32]
   42c4c:	sub	r2, r0, #1
   42c50:	str	r2, [r4, #32]
   42c54:	ldrb	r3, [r4, #25]
   42c58:	ldr	r0, [r4, #20]
   42c5c:	ldr	r1, [r4, #16]
   42c60:	mla	r7, r2, r3, r0
   42c64:	mul	r5, r2, r3
   42c68:	cmp	r7, r1
   42c6c:	bls	42cdc <flatcc_json_printer_double_vector_field@@Base+0x388>
   42c70:	cmp	r0, r1
   42c74:	bcc	42c90 <flatcc_json_printer_double_vector_field@@Base+0x33c>
   42c78:	ldr	r2, [r4, #44]	; 0x2c
   42c7c:	mov	r0, r4
   42c80:	mov	r1, #0
   42c84:	blx	r2
   42c88:	ldr	r1, [r4, #16]
   42c8c:	ldr	r0, [r4, #20]
   42c90:	sub	r6, r1, r0
   42c94:	cmp	r6, r5
   42c98:	bcs	42cdc <flatcc_json_printer_double_vector_field@@Base+0x388>
   42c9c:	mov	r1, #32
   42ca0:	mov	r2, r6
   42ca4:	bl	14ef0 <memset@plt>
   42ca8:	ldr	r0, [r4, #20]
   42cac:	ldr	r2, [r4, #44]	; 0x2c
   42cb0:	mov	r1, #0
   42cb4:	add	r0, r0, r6
   42cb8:	str	r0, [r4, #20]
   42cbc:	mov	r0, r4
   42cc0:	blx	r2
   42cc4:	ldr	r1, [r4, #16]
   42cc8:	ldr	r0, [r4, #20]
   42ccc:	sub	r5, r5, r6
   42cd0:	sub	r6, r1, r0
   42cd4:	cmp	r5, r6
   42cd8:	bhi	42c9c <flatcc_json_printer_double_vector_field@@Base+0x348>
   42cdc:	mov	r1, #32
   42ce0:	mov	r2, r5
   42ce4:	bl	14ef0 <memset@plt>
   42ce8:	ldr	r0, [r4, #20]
   42cec:	add	r0, r0, r5
   42cf0:	str	r0, [r4, #20]
   42cf4:	add	r1, r0, #1
   42cf8:	str	r1, [r4, #20]
   42cfc:	mov	r1, #93	; 0x5d
   42d00:	strb	r1, [r0]
   42d04:	sub	sp, fp, #28
   42d08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00042d0c <flatcc_json_printer_utype_enum_vector_field@@Base>:
   42d0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42d10:	add	fp, sp, #28
   42d14:	sub	sp, sp, #4
   42d18:	mov	r4, r0
   42d1c:	ldrb	r0, [r0, #27]
   42d20:	cmp	r0, #0
   42d24:	beq	42d38 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c>
   42d28:	mov	r0, r4
   42d2c:	sub	sp, fp, #28
   42d30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42d34:	b	3faf0 <flatcc_json_printer_utype_vector_field@@Base>
   42d38:	mov	r0, #4
   42d3c:	add	r0, r0, r2, lsl #1
   42d40:	ldr	r2, [r1, #8]
   42d44:	cmp	r0, r2
   42d48:	bge	42d68 <flatcc_json_printer_utype_enum_vector_field@@Base+0x5c>
   42d4c:	ldr	r2, [r1, #4]
   42d50:	add	r0, r2, r0
   42d54:	ldrh	r0, [r0]
   42d58:	cmp	r0, #0
   42d5c:	ldrne	r2, [r1]
   42d60:	addsne	r8, r2, r0
   42d64:	bne	42d70 <flatcc_json_printer_utype_enum_vector_field@@Base+0x64>
   42d68:	sub	sp, fp, #28
   42d6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42d70:	ldr	r0, [r1, #16]
   42d74:	ldr	sl, [fp, #12]
   42d78:	ldr	r2, [fp, #8]
   42d7c:	add	r7, r0, #1
   42d80:	cmp	r0, #0
   42d84:	str	r7, [r1, #16]
   42d88:	ldrne	r0, [r4, #20]
   42d8c:	addne	r1, r0, #1
   42d90:	strne	r1, [r4, #20]
   42d94:	movne	r1, #44	; 0x2c
   42d98:	strbne	r1, [r0]
   42d9c:	mov	r1, r3
   42da0:	ldr	r0, [r8]
   42da4:	ldr	r9, [r8, r0]!
   42da8:	mov	r0, r4
   42dac:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   42db0:	ldr	r1, [r4, #32]
   42db4:	ldr	r0, [r4, #20]
   42db8:	cmp	r9, #0
   42dbc:	add	r1, r1, #1
   42dc0:	str	r1, [r4, #32]
   42dc4:	add	r1, r0, #1
   42dc8:	str	r1, [r4, #20]
   42dcc:	mov	r1, #91	; 0x5b
   42dd0:	strb	r1, [r0]
   42dd4:	beq	42fe4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2d8>
   42dd8:	ldrb	r1, [r4, #25]
   42ddc:	ldr	r0, [r4, #20]
   42de0:	cmp	r1, #0
   42de4:	beq	42ea0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x194>
   42de8:	add	r1, r0, #1
   42dec:	str	r1, [r4, #20]
   42df0:	mov	r1, #10
   42df4:	strb	r1, [r0]
   42df8:	ldr	r0, [r4, #20]
   42dfc:	ldrb	r2, [r4, #25]
   42e00:	ldr	r3, [r4, #32]
   42e04:	ldr	r1, [r4, #16]
   42e08:	mla	r7, r3, r2, r0
   42e0c:	mul	r5, r3, r2
   42e10:	cmp	r7, r1
   42e14:	bls	42e84 <flatcc_json_printer_utype_enum_vector_field@@Base+0x178>
   42e18:	cmp	r0, r1
   42e1c:	bcc	42e38 <flatcc_json_printer_utype_enum_vector_field@@Base+0x12c>
   42e20:	ldr	r2, [r4, #44]	; 0x2c
   42e24:	mov	r0, r4
   42e28:	mov	r1, #0
   42e2c:	blx	r2
   42e30:	ldr	r1, [r4, #16]
   42e34:	ldr	r0, [r4, #20]
   42e38:	sub	r6, r1, r0
   42e3c:	cmp	r6, r5
   42e40:	bcs	42e84 <flatcc_json_printer_utype_enum_vector_field@@Base+0x178>
   42e44:	mov	r1, #32
   42e48:	mov	r2, r6
   42e4c:	bl	14ef0 <memset@plt>
   42e50:	ldr	r0, [r4, #20]
   42e54:	ldr	r2, [r4, #44]	; 0x2c
   42e58:	mov	r1, #0
   42e5c:	add	r0, r0, r6
   42e60:	str	r0, [r4, #20]
   42e64:	mov	r0, r4
   42e68:	blx	r2
   42e6c:	ldr	r1, [r4, #16]
   42e70:	ldr	r0, [r4, #20]
   42e74:	sub	r5, r5, r6
   42e78:	sub	r6, r1, r0
   42e7c:	cmp	r5, r6
   42e80:	bhi	42e44 <flatcc_json_printer_utype_enum_vector_field@@Base+0x138>
   42e84:	mov	r1, #32
   42e88:	mov	r2, r5
   42e8c:	bl	14ef0 <memset@plt>
   42e90:	ldr	r0, [r4, #20]
   42e94:	add	r0, r0, r5
   42e98:	str	r0, [r4, #20]
   42e9c:	b	42ebc <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b0>
   42ea0:	ldr	r1, [r4, #16]
   42ea4:	cmp	r0, r1
   42ea8:	bcc	42ebc <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b0>
   42eac:	ldr	r2, [r4, #44]	; 0x2c
   42eb0:	mov	r0, r4
   42eb4:	mov	r1, #0
   42eb8:	blx	r2
   42ebc:	ldrb	r1, [r8, #4]
   42ec0:	mov	r0, r4
   42ec4:	blx	sl
   42ec8:	subs	r9, r9, #1
   42ecc:	beq	42fe4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2d8>
   42ed0:	add	r7, r8, #5
   42ed4:	mov	r8, #44	; 0x2c
   42ed8:	ldr	r0, [r4, #20]
   42edc:	sub	r9, r9, #1
   42ee0:	add	r1, r0, #1
   42ee4:	str	r1, [r4, #20]
   42ee8:	strb	r8, [r0]
   42eec:	ldrb	r1, [r4, #25]
   42ef0:	ldr	r0, [r4, #20]
   42ef4:	cmp	r1, #0
   42ef8:	beq	42fb4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2a8>
   42efc:	add	r1, r0, #1
   42f00:	str	r1, [r4, #20]
   42f04:	mov	r1, #10
   42f08:	strb	r1, [r0]
   42f0c:	ldr	r0, [r4, #20]
   42f10:	ldrb	r2, [r4, #25]
   42f14:	ldr	r3, [r4, #32]
   42f18:	ldr	r1, [r4, #16]
   42f1c:	mla	r6, r3, r2, r0
   42f20:	mul	r5, r3, r2
   42f24:	cmp	r6, r1
   42f28:	bls	42f98 <flatcc_json_printer_utype_enum_vector_field@@Base+0x28c>
   42f2c:	cmp	r0, r1
   42f30:	bcc	42f4c <flatcc_json_printer_utype_enum_vector_field@@Base+0x240>
   42f34:	ldr	r2, [r4, #44]	; 0x2c
   42f38:	mov	r0, r4
   42f3c:	mov	r1, #0
   42f40:	blx	r2
   42f44:	ldr	r1, [r4, #16]
   42f48:	ldr	r0, [r4, #20]
   42f4c:	sub	r6, r1, r0
   42f50:	cmp	r6, r5
   42f54:	bcs	42f98 <flatcc_json_printer_utype_enum_vector_field@@Base+0x28c>
   42f58:	mov	r1, #32
   42f5c:	mov	r2, r6
   42f60:	bl	14ef0 <memset@plt>
   42f64:	ldr	r0, [r4, #20]
   42f68:	ldr	r2, [r4, #44]	; 0x2c
   42f6c:	mov	r1, #0
   42f70:	add	r0, r0, r6
   42f74:	str	r0, [r4, #20]
   42f78:	mov	r0, r4
   42f7c:	blx	r2
   42f80:	ldr	r1, [r4, #16]
   42f84:	ldr	r0, [r4, #20]
   42f88:	sub	r5, r5, r6
   42f8c:	sub	r6, r1, r0
   42f90:	cmp	r5, r6
   42f94:	bhi	42f58 <flatcc_json_printer_utype_enum_vector_field@@Base+0x24c>
   42f98:	mov	r1, #32
   42f9c:	mov	r2, r5
   42fa0:	bl	14ef0 <memset@plt>
   42fa4:	ldr	r0, [r4, #20]
   42fa8:	add	r0, r0, r5
   42fac:	str	r0, [r4, #20]
   42fb0:	b	42fd0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c4>
   42fb4:	ldr	r1, [r4, #16]
   42fb8:	cmp	r0, r1
   42fbc:	bcc	42fd0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c4>
   42fc0:	ldr	r2, [r4, #44]	; 0x2c
   42fc4:	mov	r0, r4
   42fc8:	mov	r1, #0
   42fcc:	blx	r2
   42fd0:	ldrb	r1, [r7], #1
   42fd4:	mov	r0, r4
   42fd8:	blx	sl
   42fdc:	cmp	r9, #0
   42fe0:	bne	42ed8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1cc>
   42fe4:	ldrb	r1, [r4, #25]
   42fe8:	ldr	r0, [r4, #20]
   42fec:	cmp	r1, #0
   42ff0:	beq	430b0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x3a4>
   42ff4:	add	r1, r0, #1
   42ff8:	str	r1, [r4, #20]
   42ffc:	mov	r1, #10
   43000:	strb	r1, [r0]
   43004:	ldr	r0, [r4, #32]
   43008:	sub	r2, r0, #1
   4300c:	str	r2, [r4, #32]
   43010:	ldrb	r3, [r4, #25]
   43014:	ldr	r0, [r4, #20]
   43018:	ldr	r1, [r4, #16]
   4301c:	mla	r7, r2, r3, r0
   43020:	mul	r5, r2, r3
   43024:	cmp	r7, r1
   43028:	bls	43098 <flatcc_json_printer_utype_enum_vector_field@@Base+0x38c>
   4302c:	cmp	r0, r1
   43030:	bcc	4304c <flatcc_json_printer_utype_enum_vector_field@@Base+0x340>
   43034:	ldr	r2, [r4, #44]	; 0x2c
   43038:	mov	r0, r4
   4303c:	mov	r1, #0
   43040:	blx	r2
   43044:	ldr	r1, [r4, #16]
   43048:	ldr	r0, [r4, #20]
   4304c:	sub	r6, r1, r0
   43050:	cmp	r6, r5
   43054:	bcs	43098 <flatcc_json_printer_utype_enum_vector_field@@Base+0x38c>
   43058:	mov	r1, #32
   4305c:	mov	r2, r6
   43060:	bl	14ef0 <memset@plt>
   43064:	ldr	r0, [r4, #20]
   43068:	ldr	r2, [r4, #44]	; 0x2c
   4306c:	mov	r1, #0
   43070:	add	r0, r0, r6
   43074:	str	r0, [r4, #20]
   43078:	mov	r0, r4
   4307c:	blx	r2
   43080:	ldr	r1, [r4, #16]
   43084:	ldr	r0, [r4, #20]
   43088:	sub	r5, r5, r6
   4308c:	sub	r6, r1, r0
   43090:	cmp	r5, r6
   43094:	bhi	43058 <flatcc_json_printer_utype_enum_vector_field@@Base+0x34c>
   43098:	mov	r1, #32
   4309c:	mov	r2, r5
   430a0:	bl	14ef0 <memset@plt>
   430a4:	ldr	r0, [r4, #20]
   430a8:	add	r0, r0, r5
   430ac:	str	r0, [r4, #20]
   430b0:	add	r1, r0, #1
   430b4:	str	r1, [r4, #20]
   430b8:	mov	r1, #93	; 0x5d
   430bc:	strb	r1, [r0]
   430c0:	sub	sp, fp, #28
   430c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000430c8 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   430c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   430cc:	add	fp, sp, #28
   430d0:	sub	sp, sp, #4
   430d4:	mov	r4, r0
   430d8:	ldrb	r0, [r0, #27]
   430dc:	cmp	r0, #0
   430e0:	beq	430f4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c>
   430e4:	mov	r0, r4
   430e8:	sub	sp, fp, #28
   430ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   430f0:	b	40000 <flatcc_json_printer_uint8_vector_field@@Base>
   430f4:	mov	r0, #4
   430f8:	add	r0, r0, r2, lsl #1
   430fc:	ldr	r2, [r1, #8]
   43100:	cmp	r0, r2
   43104:	bge	43124 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x5c>
   43108:	ldr	r2, [r1, #4]
   4310c:	add	r0, r2, r0
   43110:	ldrh	r0, [r0]
   43114:	cmp	r0, #0
   43118:	ldrne	r2, [r1]
   4311c:	addsne	r8, r2, r0
   43120:	bne	4312c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x64>
   43124:	sub	sp, fp, #28
   43128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4312c:	ldr	r0, [r1, #16]
   43130:	ldr	sl, [fp, #12]
   43134:	ldr	r2, [fp, #8]
   43138:	add	r7, r0, #1
   4313c:	cmp	r0, #0
   43140:	str	r7, [r1, #16]
   43144:	ldrne	r0, [r4, #20]
   43148:	addne	r1, r0, #1
   4314c:	strne	r1, [r4, #20]
   43150:	movne	r1, #44	; 0x2c
   43154:	strbne	r1, [r0]
   43158:	mov	r1, r3
   4315c:	ldr	r0, [r8]
   43160:	ldr	r9, [r8, r0]!
   43164:	mov	r0, r4
   43168:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   4316c:	ldr	r1, [r4, #32]
   43170:	ldr	r0, [r4, #20]
   43174:	cmp	r9, #0
   43178:	add	r1, r1, #1
   4317c:	str	r1, [r4, #32]
   43180:	add	r1, r0, #1
   43184:	str	r1, [r4, #20]
   43188:	mov	r1, #91	; 0x5b
   4318c:	strb	r1, [r0]
   43190:	beq	433a0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2d8>
   43194:	ldrb	r1, [r4, #25]
   43198:	ldr	r0, [r4, #20]
   4319c:	cmp	r1, #0
   431a0:	beq	4325c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x194>
   431a4:	add	r1, r0, #1
   431a8:	str	r1, [r4, #20]
   431ac:	mov	r1, #10
   431b0:	strb	r1, [r0]
   431b4:	ldr	r0, [r4, #20]
   431b8:	ldrb	r2, [r4, #25]
   431bc:	ldr	r3, [r4, #32]
   431c0:	ldr	r1, [r4, #16]
   431c4:	mla	r7, r3, r2, r0
   431c8:	mul	r5, r3, r2
   431cc:	cmp	r7, r1
   431d0:	bls	43240 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x178>
   431d4:	cmp	r0, r1
   431d8:	bcc	431f4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x12c>
   431dc:	ldr	r2, [r4, #44]	; 0x2c
   431e0:	mov	r0, r4
   431e4:	mov	r1, #0
   431e8:	blx	r2
   431ec:	ldr	r1, [r4, #16]
   431f0:	ldr	r0, [r4, #20]
   431f4:	sub	r6, r1, r0
   431f8:	cmp	r6, r5
   431fc:	bcs	43240 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x178>
   43200:	mov	r1, #32
   43204:	mov	r2, r6
   43208:	bl	14ef0 <memset@plt>
   4320c:	ldr	r0, [r4, #20]
   43210:	ldr	r2, [r4, #44]	; 0x2c
   43214:	mov	r1, #0
   43218:	add	r0, r0, r6
   4321c:	str	r0, [r4, #20]
   43220:	mov	r0, r4
   43224:	blx	r2
   43228:	ldr	r1, [r4, #16]
   4322c:	ldr	r0, [r4, #20]
   43230:	sub	r5, r5, r6
   43234:	sub	r6, r1, r0
   43238:	cmp	r5, r6
   4323c:	bhi	43200 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x138>
   43240:	mov	r1, #32
   43244:	mov	r2, r5
   43248:	bl	14ef0 <memset@plt>
   4324c:	ldr	r0, [r4, #20]
   43250:	add	r0, r0, r5
   43254:	str	r0, [r4, #20]
   43258:	b	43278 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b0>
   4325c:	ldr	r1, [r4, #16]
   43260:	cmp	r0, r1
   43264:	bcc	43278 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b0>
   43268:	ldr	r2, [r4, #44]	; 0x2c
   4326c:	mov	r0, r4
   43270:	mov	r1, #0
   43274:	blx	r2
   43278:	ldrb	r1, [r8, #4]
   4327c:	mov	r0, r4
   43280:	blx	sl
   43284:	subs	r9, r9, #1
   43288:	beq	433a0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2d8>
   4328c:	add	r7, r8, #5
   43290:	mov	r8, #44	; 0x2c
   43294:	ldr	r0, [r4, #20]
   43298:	sub	r9, r9, #1
   4329c:	add	r1, r0, #1
   432a0:	str	r1, [r4, #20]
   432a4:	strb	r8, [r0]
   432a8:	ldrb	r1, [r4, #25]
   432ac:	ldr	r0, [r4, #20]
   432b0:	cmp	r1, #0
   432b4:	beq	43370 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2a8>
   432b8:	add	r1, r0, #1
   432bc:	str	r1, [r4, #20]
   432c0:	mov	r1, #10
   432c4:	strb	r1, [r0]
   432c8:	ldr	r0, [r4, #20]
   432cc:	ldrb	r2, [r4, #25]
   432d0:	ldr	r3, [r4, #32]
   432d4:	ldr	r1, [r4, #16]
   432d8:	mla	r6, r3, r2, r0
   432dc:	mul	r5, r3, r2
   432e0:	cmp	r6, r1
   432e4:	bls	43354 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x28c>
   432e8:	cmp	r0, r1
   432ec:	bcc	43308 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x240>
   432f0:	ldr	r2, [r4, #44]	; 0x2c
   432f4:	mov	r0, r4
   432f8:	mov	r1, #0
   432fc:	blx	r2
   43300:	ldr	r1, [r4, #16]
   43304:	ldr	r0, [r4, #20]
   43308:	sub	r6, r1, r0
   4330c:	cmp	r6, r5
   43310:	bcs	43354 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x28c>
   43314:	mov	r1, #32
   43318:	mov	r2, r6
   4331c:	bl	14ef0 <memset@plt>
   43320:	ldr	r0, [r4, #20]
   43324:	ldr	r2, [r4, #44]	; 0x2c
   43328:	mov	r1, #0
   4332c:	add	r0, r0, r6
   43330:	str	r0, [r4, #20]
   43334:	mov	r0, r4
   43338:	blx	r2
   4333c:	ldr	r1, [r4, #16]
   43340:	ldr	r0, [r4, #20]
   43344:	sub	r5, r5, r6
   43348:	sub	r6, r1, r0
   4334c:	cmp	r5, r6
   43350:	bhi	43314 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x24c>
   43354:	mov	r1, #32
   43358:	mov	r2, r5
   4335c:	bl	14ef0 <memset@plt>
   43360:	ldr	r0, [r4, #20]
   43364:	add	r0, r0, r5
   43368:	str	r0, [r4, #20]
   4336c:	b	4338c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c4>
   43370:	ldr	r1, [r4, #16]
   43374:	cmp	r0, r1
   43378:	bcc	4338c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c4>
   4337c:	ldr	r2, [r4, #44]	; 0x2c
   43380:	mov	r0, r4
   43384:	mov	r1, #0
   43388:	blx	r2
   4338c:	ldrb	r1, [r7], #1
   43390:	mov	r0, r4
   43394:	blx	sl
   43398:	cmp	r9, #0
   4339c:	bne	43294 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1cc>
   433a0:	ldrb	r1, [r4, #25]
   433a4:	ldr	r0, [r4, #20]
   433a8:	cmp	r1, #0
   433ac:	beq	4346c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x3a4>
   433b0:	add	r1, r0, #1
   433b4:	str	r1, [r4, #20]
   433b8:	mov	r1, #10
   433bc:	strb	r1, [r0]
   433c0:	ldr	r0, [r4, #32]
   433c4:	sub	r2, r0, #1
   433c8:	str	r2, [r4, #32]
   433cc:	ldrb	r3, [r4, #25]
   433d0:	ldr	r0, [r4, #20]
   433d4:	ldr	r1, [r4, #16]
   433d8:	mla	r7, r2, r3, r0
   433dc:	mul	r5, r2, r3
   433e0:	cmp	r7, r1
   433e4:	bls	43454 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x38c>
   433e8:	cmp	r0, r1
   433ec:	bcc	43408 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x340>
   433f0:	ldr	r2, [r4, #44]	; 0x2c
   433f4:	mov	r0, r4
   433f8:	mov	r1, #0
   433fc:	blx	r2
   43400:	ldr	r1, [r4, #16]
   43404:	ldr	r0, [r4, #20]
   43408:	sub	r6, r1, r0
   4340c:	cmp	r6, r5
   43410:	bcs	43454 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x38c>
   43414:	mov	r1, #32
   43418:	mov	r2, r6
   4341c:	bl	14ef0 <memset@plt>
   43420:	ldr	r0, [r4, #20]
   43424:	ldr	r2, [r4, #44]	; 0x2c
   43428:	mov	r1, #0
   4342c:	add	r0, r0, r6
   43430:	str	r0, [r4, #20]
   43434:	mov	r0, r4
   43438:	blx	r2
   4343c:	ldr	r1, [r4, #16]
   43440:	ldr	r0, [r4, #20]
   43444:	sub	r5, r5, r6
   43448:	sub	r6, r1, r0
   4344c:	cmp	r5, r6
   43450:	bhi	43414 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x34c>
   43454:	mov	r1, #32
   43458:	mov	r2, r5
   4345c:	bl	14ef0 <memset@plt>
   43460:	ldr	r0, [r4, #20]
   43464:	add	r0, r0, r5
   43468:	str	r0, [r4, #20]
   4346c:	add	r1, r0, #1
   43470:	str	r1, [r4, #20]
   43474:	mov	r1, #93	; 0x5d
   43478:	strb	r1, [r0]
   4347c:	sub	sp, fp, #28
   43480:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00043484 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   43484:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43488:	add	fp, sp, #28
   4348c:	sub	sp, sp, #4
   43490:	mov	r4, r0
   43494:	ldrb	r0, [r0, #27]
   43498:	cmp	r0, #0
   4349c:	beq	434b0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c>
   434a0:	mov	r0, r4
   434a4:	sub	sp, fp, #28
   434a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   434ac:	b	40510 <flatcc_json_printer_uint16_vector_field@@Base>
   434b0:	mov	r0, #4
   434b4:	add	r0, r0, r2, lsl #1
   434b8:	ldr	r2, [r1, #8]
   434bc:	cmp	r0, r2
   434c0:	bge	434e0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x5c>
   434c4:	ldr	r2, [r1, #4]
   434c8:	add	r0, r2, r0
   434cc:	ldrh	r0, [r0]
   434d0:	cmp	r0, #0
   434d4:	ldrne	r2, [r1]
   434d8:	addsne	r8, r2, r0
   434dc:	bne	434e8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x64>
   434e0:	sub	sp, fp, #28
   434e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   434e8:	ldr	r0, [r1, #16]
   434ec:	ldr	sl, [fp, #12]
   434f0:	ldr	r2, [fp, #8]
   434f4:	add	r7, r0, #1
   434f8:	cmp	r0, #0
   434fc:	str	r7, [r1, #16]
   43500:	ldrne	r0, [r4, #20]
   43504:	addne	r1, r0, #1
   43508:	strne	r1, [r4, #20]
   4350c:	movne	r1, #44	; 0x2c
   43510:	strbne	r1, [r0]
   43514:	mov	r1, r3
   43518:	ldr	r0, [r8]
   4351c:	ldr	r9, [r8, r0]!
   43520:	mov	r0, r4
   43524:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   43528:	ldr	r1, [r4, #32]
   4352c:	ldr	r0, [r4, #20]
   43530:	cmp	r9, #0
   43534:	add	r1, r1, #1
   43538:	str	r1, [r4, #32]
   4353c:	add	r1, r0, #1
   43540:	str	r1, [r4, #20]
   43544:	mov	r1, #91	; 0x5b
   43548:	strb	r1, [r0]
   4354c:	beq	4375c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2d8>
   43550:	ldrb	r1, [r4, #25]
   43554:	ldr	r0, [r4, #20]
   43558:	cmp	r1, #0
   4355c:	beq	43618 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x194>
   43560:	add	r1, r0, #1
   43564:	str	r1, [r4, #20]
   43568:	mov	r1, #10
   4356c:	strb	r1, [r0]
   43570:	ldr	r0, [r4, #20]
   43574:	ldrb	r2, [r4, #25]
   43578:	ldr	r3, [r4, #32]
   4357c:	ldr	r1, [r4, #16]
   43580:	mla	r7, r3, r2, r0
   43584:	mul	r5, r3, r2
   43588:	cmp	r7, r1
   4358c:	bls	435fc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x178>
   43590:	cmp	r0, r1
   43594:	bcc	435b0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x12c>
   43598:	ldr	r2, [r4, #44]	; 0x2c
   4359c:	mov	r0, r4
   435a0:	mov	r1, #0
   435a4:	blx	r2
   435a8:	ldr	r1, [r4, #16]
   435ac:	ldr	r0, [r4, #20]
   435b0:	sub	r6, r1, r0
   435b4:	cmp	r6, r5
   435b8:	bcs	435fc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x178>
   435bc:	mov	r1, #32
   435c0:	mov	r2, r6
   435c4:	bl	14ef0 <memset@plt>
   435c8:	ldr	r0, [r4, #20]
   435cc:	ldr	r2, [r4, #44]	; 0x2c
   435d0:	mov	r1, #0
   435d4:	add	r0, r0, r6
   435d8:	str	r0, [r4, #20]
   435dc:	mov	r0, r4
   435e0:	blx	r2
   435e4:	ldr	r1, [r4, #16]
   435e8:	ldr	r0, [r4, #20]
   435ec:	sub	r5, r5, r6
   435f0:	sub	r6, r1, r0
   435f4:	cmp	r5, r6
   435f8:	bhi	435bc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x138>
   435fc:	mov	r1, #32
   43600:	mov	r2, r5
   43604:	bl	14ef0 <memset@plt>
   43608:	ldr	r0, [r4, #20]
   4360c:	add	r0, r0, r5
   43610:	str	r0, [r4, #20]
   43614:	b	43634 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b0>
   43618:	ldr	r1, [r4, #16]
   4361c:	cmp	r0, r1
   43620:	bcc	43634 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b0>
   43624:	ldr	r2, [r4, #44]	; 0x2c
   43628:	mov	r0, r4
   4362c:	mov	r1, #0
   43630:	blx	r2
   43634:	ldrh	r1, [r8, #4]
   43638:	mov	r0, r4
   4363c:	blx	sl
   43640:	subs	r9, r9, #1
   43644:	beq	4375c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2d8>
   43648:	add	r7, r8, #6
   4364c:	mov	r8, #44	; 0x2c
   43650:	ldr	r0, [r4, #20]
   43654:	sub	r9, r9, #1
   43658:	add	r1, r0, #1
   4365c:	str	r1, [r4, #20]
   43660:	strb	r8, [r0]
   43664:	ldrb	r1, [r4, #25]
   43668:	ldr	r0, [r4, #20]
   4366c:	cmp	r1, #0
   43670:	beq	4372c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2a8>
   43674:	add	r1, r0, #1
   43678:	str	r1, [r4, #20]
   4367c:	mov	r1, #10
   43680:	strb	r1, [r0]
   43684:	ldr	r0, [r4, #20]
   43688:	ldrb	r2, [r4, #25]
   4368c:	ldr	r3, [r4, #32]
   43690:	ldr	r1, [r4, #16]
   43694:	mla	r6, r3, r2, r0
   43698:	mul	r5, r3, r2
   4369c:	cmp	r6, r1
   436a0:	bls	43710 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x28c>
   436a4:	cmp	r0, r1
   436a8:	bcc	436c4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x240>
   436ac:	ldr	r2, [r4, #44]	; 0x2c
   436b0:	mov	r0, r4
   436b4:	mov	r1, #0
   436b8:	blx	r2
   436bc:	ldr	r1, [r4, #16]
   436c0:	ldr	r0, [r4, #20]
   436c4:	sub	r6, r1, r0
   436c8:	cmp	r6, r5
   436cc:	bcs	43710 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x28c>
   436d0:	mov	r1, #32
   436d4:	mov	r2, r6
   436d8:	bl	14ef0 <memset@plt>
   436dc:	ldr	r0, [r4, #20]
   436e0:	ldr	r2, [r4, #44]	; 0x2c
   436e4:	mov	r1, #0
   436e8:	add	r0, r0, r6
   436ec:	str	r0, [r4, #20]
   436f0:	mov	r0, r4
   436f4:	blx	r2
   436f8:	ldr	r1, [r4, #16]
   436fc:	ldr	r0, [r4, #20]
   43700:	sub	r5, r5, r6
   43704:	sub	r6, r1, r0
   43708:	cmp	r5, r6
   4370c:	bhi	436d0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x24c>
   43710:	mov	r1, #32
   43714:	mov	r2, r5
   43718:	bl	14ef0 <memset@plt>
   4371c:	ldr	r0, [r4, #20]
   43720:	add	r0, r0, r5
   43724:	str	r0, [r4, #20]
   43728:	b	43748 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c4>
   4372c:	ldr	r1, [r4, #16]
   43730:	cmp	r0, r1
   43734:	bcc	43748 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c4>
   43738:	ldr	r2, [r4, #44]	; 0x2c
   4373c:	mov	r0, r4
   43740:	mov	r1, #0
   43744:	blx	r2
   43748:	ldrh	r1, [r7], #2
   4374c:	mov	r0, r4
   43750:	blx	sl
   43754:	cmp	r9, #0
   43758:	bne	43650 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1cc>
   4375c:	ldrb	r1, [r4, #25]
   43760:	ldr	r0, [r4, #20]
   43764:	cmp	r1, #0
   43768:	beq	43828 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x3a4>
   4376c:	add	r1, r0, #1
   43770:	str	r1, [r4, #20]
   43774:	mov	r1, #10
   43778:	strb	r1, [r0]
   4377c:	ldr	r0, [r4, #32]
   43780:	sub	r2, r0, #1
   43784:	str	r2, [r4, #32]
   43788:	ldrb	r3, [r4, #25]
   4378c:	ldr	r0, [r4, #20]
   43790:	ldr	r1, [r4, #16]
   43794:	mla	r7, r2, r3, r0
   43798:	mul	r5, r2, r3
   4379c:	cmp	r7, r1
   437a0:	bls	43810 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x38c>
   437a4:	cmp	r0, r1
   437a8:	bcc	437c4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x340>
   437ac:	ldr	r2, [r4, #44]	; 0x2c
   437b0:	mov	r0, r4
   437b4:	mov	r1, #0
   437b8:	blx	r2
   437bc:	ldr	r1, [r4, #16]
   437c0:	ldr	r0, [r4, #20]
   437c4:	sub	r6, r1, r0
   437c8:	cmp	r6, r5
   437cc:	bcs	43810 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x38c>
   437d0:	mov	r1, #32
   437d4:	mov	r2, r6
   437d8:	bl	14ef0 <memset@plt>
   437dc:	ldr	r0, [r4, #20]
   437e0:	ldr	r2, [r4, #44]	; 0x2c
   437e4:	mov	r1, #0
   437e8:	add	r0, r0, r6
   437ec:	str	r0, [r4, #20]
   437f0:	mov	r0, r4
   437f4:	blx	r2
   437f8:	ldr	r1, [r4, #16]
   437fc:	ldr	r0, [r4, #20]
   43800:	sub	r5, r5, r6
   43804:	sub	r6, r1, r0
   43808:	cmp	r5, r6
   4380c:	bhi	437d0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x34c>
   43810:	mov	r1, #32
   43814:	mov	r2, r5
   43818:	bl	14ef0 <memset@plt>
   4381c:	ldr	r0, [r4, #20]
   43820:	add	r0, r0, r5
   43824:	str	r0, [r4, #20]
   43828:	add	r1, r0, #1
   4382c:	str	r1, [r4, #20]
   43830:	mov	r1, #93	; 0x5d
   43834:	strb	r1, [r0]
   43838:	sub	sp, fp, #28
   4383c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00043840 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   43840:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43844:	add	fp, sp, #28
   43848:	sub	sp, sp, #4
   4384c:	mov	r4, r0
   43850:	ldrb	r0, [r0, #27]
   43854:	cmp	r0, #0
   43858:	beq	4386c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c>
   4385c:	mov	r0, r4
   43860:	sub	sp, fp, #28
   43864:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43868:	b	408c4 <flatcc_json_printer_uint32_vector_field@@Base>
   4386c:	mov	r0, #4
   43870:	add	r0, r0, r2, lsl #1
   43874:	ldr	r2, [r1, #8]
   43878:	cmp	r0, r2
   4387c:	bge	4389c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x5c>
   43880:	ldr	r2, [r1, #4]
   43884:	add	r0, r2, r0
   43888:	ldrh	r0, [r0]
   4388c:	cmp	r0, #0
   43890:	ldrne	r2, [r1]
   43894:	addsne	r8, r2, r0
   43898:	bne	438a4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x64>
   4389c:	sub	sp, fp, #28
   438a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   438a4:	ldr	r0, [r1, #16]
   438a8:	ldr	sl, [fp, #12]
   438ac:	ldr	r2, [fp, #8]
   438b0:	add	r7, r0, #1
   438b4:	cmp	r0, #0
   438b8:	str	r7, [r1, #16]
   438bc:	ldrne	r0, [r4, #20]
   438c0:	addne	r1, r0, #1
   438c4:	strne	r1, [r4, #20]
   438c8:	movne	r1, #44	; 0x2c
   438cc:	strbne	r1, [r0]
   438d0:	mov	r1, r3
   438d4:	ldr	r0, [r8]
   438d8:	ldr	r9, [r8, r0]!
   438dc:	mov	r0, r4
   438e0:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   438e4:	ldr	r1, [r4, #32]
   438e8:	ldr	r0, [r4, #20]
   438ec:	cmp	r9, #0
   438f0:	add	r1, r1, #1
   438f4:	str	r1, [r4, #32]
   438f8:	add	r1, r0, #1
   438fc:	str	r1, [r4, #20]
   43900:	mov	r1, #91	; 0x5b
   43904:	strb	r1, [r0]
   43908:	beq	43b18 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2d8>
   4390c:	ldrb	r1, [r4, #25]
   43910:	ldr	r0, [r4, #20]
   43914:	cmp	r1, #0
   43918:	beq	439d4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x194>
   4391c:	add	r1, r0, #1
   43920:	str	r1, [r4, #20]
   43924:	mov	r1, #10
   43928:	strb	r1, [r0]
   4392c:	ldr	r0, [r4, #20]
   43930:	ldrb	r2, [r4, #25]
   43934:	ldr	r3, [r4, #32]
   43938:	ldr	r1, [r4, #16]
   4393c:	mla	r7, r3, r2, r0
   43940:	mul	r5, r3, r2
   43944:	cmp	r7, r1
   43948:	bls	439b8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x178>
   4394c:	cmp	r0, r1
   43950:	bcc	4396c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x12c>
   43954:	ldr	r2, [r4, #44]	; 0x2c
   43958:	mov	r0, r4
   4395c:	mov	r1, #0
   43960:	blx	r2
   43964:	ldr	r1, [r4, #16]
   43968:	ldr	r0, [r4, #20]
   4396c:	sub	r6, r1, r0
   43970:	cmp	r6, r5
   43974:	bcs	439b8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x178>
   43978:	mov	r1, #32
   4397c:	mov	r2, r6
   43980:	bl	14ef0 <memset@plt>
   43984:	ldr	r0, [r4, #20]
   43988:	ldr	r2, [r4, #44]	; 0x2c
   4398c:	mov	r1, #0
   43990:	add	r0, r0, r6
   43994:	str	r0, [r4, #20]
   43998:	mov	r0, r4
   4399c:	blx	r2
   439a0:	ldr	r1, [r4, #16]
   439a4:	ldr	r0, [r4, #20]
   439a8:	sub	r5, r5, r6
   439ac:	sub	r6, r1, r0
   439b0:	cmp	r5, r6
   439b4:	bhi	43978 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x138>
   439b8:	mov	r1, #32
   439bc:	mov	r2, r5
   439c0:	bl	14ef0 <memset@plt>
   439c4:	ldr	r0, [r4, #20]
   439c8:	add	r0, r0, r5
   439cc:	str	r0, [r4, #20]
   439d0:	b	439f0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b0>
   439d4:	ldr	r1, [r4, #16]
   439d8:	cmp	r0, r1
   439dc:	bcc	439f0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b0>
   439e0:	ldr	r2, [r4, #44]	; 0x2c
   439e4:	mov	r0, r4
   439e8:	mov	r1, #0
   439ec:	blx	r2
   439f0:	ldr	r1, [r8, #4]
   439f4:	mov	r0, r4
   439f8:	blx	sl
   439fc:	subs	r9, r9, #1
   43a00:	beq	43b18 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2d8>
   43a04:	add	r7, r8, #8
   43a08:	mov	r8, #44	; 0x2c
   43a0c:	ldr	r0, [r4, #20]
   43a10:	sub	r9, r9, #1
   43a14:	add	r1, r0, #1
   43a18:	str	r1, [r4, #20]
   43a1c:	strb	r8, [r0]
   43a20:	ldrb	r1, [r4, #25]
   43a24:	ldr	r0, [r4, #20]
   43a28:	cmp	r1, #0
   43a2c:	beq	43ae8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2a8>
   43a30:	add	r1, r0, #1
   43a34:	str	r1, [r4, #20]
   43a38:	mov	r1, #10
   43a3c:	strb	r1, [r0]
   43a40:	ldr	r0, [r4, #20]
   43a44:	ldrb	r2, [r4, #25]
   43a48:	ldr	r3, [r4, #32]
   43a4c:	ldr	r1, [r4, #16]
   43a50:	mla	r6, r3, r2, r0
   43a54:	mul	r5, r3, r2
   43a58:	cmp	r6, r1
   43a5c:	bls	43acc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x28c>
   43a60:	cmp	r0, r1
   43a64:	bcc	43a80 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x240>
   43a68:	ldr	r2, [r4, #44]	; 0x2c
   43a6c:	mov	r0, r4
   43a70:	mov	r1, #0
   43a74:	blx	r2
   43a78:	ldr	r1, [r4, #16]
   43a7c:	ldr	r0, [r4, #20]
   43a80:	sub	r6, r1, r0
   43a84:	cmp	r6, r5
   43a88:	bcs	43acc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x28c>
   43a8c:	mov	r1, #32
   43a90:	mov	r2, r6
   43a94:	bl	14ef0 <memset@plt>
   43a98:	ldr	r0, [r4, #20]
   43a9c:	ldr	r2, [r4, #44]	; 0x2c
   43aa0:	mov	r1, #0
   43aa4:	add	r0, r0, r6
   43aa8:	str	r0, [r4, #20]
   43aac:	mov	r0, r4
   43ab0:	blx	r2
   43ab4:	ldr	r1, [r4, #16]
   43ab8:	ldr	r0, [r4, #20]
   43abc:	sub	r5, r5, r6
   43ac0:	sub	r6, r1, r0
   43ac4:	cmp	r5, r6
   43ac8:	bhi	43a8c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x24c>
   43acc:	mov	r1, #32
   43ad0:	mov	r2, r5
   43ad4:	bl	14ef0 <memset@plt>
   43ad8:	ldr	r0, [r4, #20]
   43adc:	add	r0, r0, r5
   43ae0:	str	r0, [r4, #20]
   43ae4:	b	43b04 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c4>
   43ae8:	ldr	r1, [r4, #16]
   43aec:	cmp	r0, r1
   43af0:	bcc	43b04 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c4>
   43af4:	ldr	r2, [r4, #44]	; 0x2c
   43af8:	mov	r0, r4
   43afc:	mov	r1, #0
   43b00:	blx	r2
   43b04:	ldr	r1, [r7], #4
   43b08:	mov	r0, r4
   43b0c:	blx	sl
   43b10:	cmp	r9, #0
   43b14:	bne	43a0c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1cc>
   43b18:	ldrb	r1, [r4, #25]
   43b1c:	ldr	r0, [r4, #20]
   43b20:	cmp	r1, #0
   43b24:	beq	43be4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x3a4>
   43b28:	add	r1, r0, #1
   43b2c:	str	r1, [r4, #20]
   43b30:	mov	r1, #10
   43b34:	strb	r1, [r0]
   43b38:	ldr	r0, [r4, #32]
   43b3c:	sub	r2, r0, #1
   43b40:	str	r2, [r4, #32]
   43b44:	ldrb	r3, [r4, #25]
   43b48:	ldr	r0, [r4, #20]
   43b4c:	ldr	r1, [r4, #16]
   43b50:	mla	r7, r2, r3, r0
   43b54:	mul	r5, r2, r3
   43b58:	cmp	r7, r1
   43b5c:	bls	43bcc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x38c>
   43b60:	cmp	r0, r1
   43b64:	bcc	43b80 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x340>
   43b68:	ldr	r2, [r4, #44]	; 0x2c
   43b6c:	mov	r0, r4
   43b70:	mov	r1, #0
   43b74:	blx	r2
   43b78:	ldr	r1, [r4, #16]
   43b7c:	ldr	r0, [r4, #20]
   43b80:	sub	r6, r1, r0
   43b84:	cmp	r6, r5
   43b88:	bcs	43bcc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x38c>
   43b8c:	mov	r1, #32
   43b90:	mov	r2, r6
   43b94:	bl	14ef0 <memset@plt>
   43b98:	ldr	r0, [r4, #20]
   43b9c:	ldr	r2, [r4, #44]	; 0x2c
   43ba0:	mov	r1, #0
   43ba4:	add	r0, r0, r6
   43ba8:	str	r0, [r4, #20]
   43bac:	mov	r0, r4
   43bb0:	blx	r2
   43bb4:	ldr	r1, [r4, #16]
   43bb8:	ldr	r0, [r4, #20]
   43bbc:	sub	r5, r5, r6
   43bc0:	sub	r6, r1, r0
   43bc4:	cmp	r5, r6
   43bc8:	bhi	43b8c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x34c>
   43bcc:	mov	r1, #32
   43bd0:	mov	r2, r5
   43bd4:	bl	14ef0 <memset@plt>
   43bd8:	ldr	r0, [r4, #20]
   43bdc:	add	r0, r0, r5
   43be0:	str	r0, [r4, #20]
   43be4:	add	r1, r0, #1
   43be8:	str	r1, [r4, #20]
   43bec:	mov	r1, #93	; 0x5d
   43bf0:	strb	r1, [r0]
   43bf4:	sub	sp, fp, #28
   43bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00043bfc <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   43bfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43c00:	add	fp, sp, #28
   43c04:	sub	sp, sp, #4
   43c08:	mov	r4, r0
   43c0c:	ldrb	r0, [r0, #27]
   43c10:	cmp	r0, #0
   43c14:	beq	43c28 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c>
   43c18:	mov	r0, r4
   43c1c:	sub	sp, fp, #28
   43c20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43c24:	b	40c78 <flatcc_json_printer_uint64_vector_field@@Base>
   43c28:	mov	r0, #4
   43c2c:	add	r0, r0, r2, lsl #1
   43c30:	ldr	r2, [r1, #8]
   43c34:	cmp	r0, r2
   43c38:	bge	43c58 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x5c>
   43c3c:	ldr	r2, [r1, #4]
   43c40:	add	r0, r2, r0
   43c44:	ldrh	r0, [r0]
   43c48:	cmp	r0, #0
   43c4c:	ldrne	r2, [r1]
   43c50:	addsne	r8, r2, r0
   43c54:	bne	43c60 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x64>
   43c58:	sub	sp, fp, #28
   43c5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43c60:	ldr	r0, [r1, #16]
   43c64:	ldr	sl, [fp, #12]
   43c68:	ldr	r2, [fp, #8]
   43c6c:	add	r7, r0, #1
   43c70:	cmp	r0, #0
   43c74:	str	r7, [r1, #16]
   43c78:	ldrne	r0, [r4, #20]
   43c7c:	addne	r1, r0, #1
   43c80:	strne	r1, [r4, #20]
   43c84:	movne	r1, #44	; 0x2c
   43c88:	strbne	r1, [r0]
   43c8c:	mov	r1, r3
   43c90:	ldr	r0, [r8]
   43c94:	ldr	r9, [r8, r0]!
   43c98:	mov	r0, r4
   43c9c:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   43ca0:	ldr	r1, [r4, #32]
   43ca4:	ldr	r0, [r4, #20]
   43ca8:	cmp	r9, #0
   43cac:	add	r1, r1, #1
   43cb0:	str	r1, [r4, #32]
   43cb4:	add	r1, r0, #1
   43cb8:	str	r1, [r4, #20]
   43cbc:	mov	r1, #91	; 0x5b
   43cc0:	strb	r1, [r0]
   43cc4:	beq	43ed8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2dc>
   43cc8:	ldrb	r1, [r4, #25]
   43ccc:	ldr	r0, [r4, #20]
   43cd0:	cmp	r1, #0
   43cd4:	beq	43d90 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x194>
   43cd8:	add	r1, r0, #1
   43cdc:	str	r1, [r4, #20]
   43ce0:	mov	r1, #10
   43ce4:	strb	r1, [r0]
   43ce8:	ldr	r0, [r4, #20]
   43cec:	ldrb	r2, [r4, #25]
   43cf0:	ldr	r3, [r4, #32]
   43cf4:	ldr	r1, [r4, #16]
   43cf8:	mla	r7, r3, r2, r0
   43cfc:	mul	r5, r3, r2
   43d00:	cmp	r7, r1
   43d04:	bls	43d74 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x178>
   43d08:	cmp	r0, r1
   43d0c:	bcc	43d28 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x12c>
   43d10:	ldr	r2, [r4, #44]	; 0x2c
   43d14:	mov	r0, r4
   43d18:	mov	r1, #0
   43d1c:	blx	r2
   43d20:	ldr	r1, [r4, #16]
   43d24:	ldr	r0, [r4, #20]
   43d28:	sub	r6, r1, r0
   43d2c:	cmp	r6, r5
   43d30:	bcs	43d74 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x178>
   43d34:	mov	r1, #32
   43d38:	mov	r2, r6
   43d3c:	bl	14ef0 <memset@plt>
   43d40:	ldr	r0, [r4, #20]
   43d44:	ldr	r2, [r4, #44]	; 0x2c
   43d48:	mov	r1, #0
   43d4c:	add	r0, r0, r6
   43d50:	str	r0, [r4, #20]
   43d54:	mov	r0, r4
   43d58:	blx	r2
   43d5c:	ldr	r1, [r4, #16]
   43d60:	ldr	r0, [r4, #20]
   43d64:	sub	r5, r5, r6
   43d68:	sub	r6, r1, r0
   43d6c:	cmp	r5, r6
   43d70:	bhi	43d34 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x138>
   43d74:	mov	r1, #32
   43d78:	mov	r2, r5
   43d7c:	bl	14ef0 <memset@plt>
   43d80:	ldr	r0, [r4, #20]
   43d84:	add	r0, r0, r5
   43d88:	str	r0, [r4, #20]
   43d8c:	b	43dac <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b0>
   43d90:	ldr	r1, [r4, #16]
   43d94:	cmp	r0, r1
   43d98:	bcc	43dac <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b0>
   43d9c:	ldr	r2, [r4, #44]	; 0x2c
   43da0:	mov	r0, r4
   43da4:	mov	r1, #0
   43da8:	blx	r2
   43dac:	ldrd	r2, [r8, #4]
   43db0:	mov	r0, r4
   43db4:	blx	sl
   43db8:	subs	r9, r9, #1
   43dbc:	beq	43ed8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2dc>
   43dc0:	add	r7, r8, #12
   43dc4:	mov	r8, #44	; 0x2c
   43dc8:	ldr	r0, [r4, #20]
   43dcc:	sub	r9, r9, #1
   43dd0:	add	r1, r0, #1
   43dd4:	str	r1, [r4, #20]
   43dd8:	strb	r8, [r0]
   43ddc:	ldrb	r1, [r4, #25]
   43de0:	ldr	r0, [r4, #20]
   43de4:	cmp	r1, #0
   43de8:	beq	43ea4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2a8>
   43dec:	add	r1, r0, #1
   43df0:	str	r1, [r4, #20]
   43df4:	mov	r1, #10
   43df8:	strb	r1, [r0]
   43dfc:	ldr	r0, [r4, #20]
   43e00:	ldrb	r2, [r4, #25]
   43e04:	ldr	r3, [r4, #32]
   43e08:	ldr	r1, [r4, #16]
   43e0c:	mla	r6, r3, r2, r0
   43e10:	mul	r5, r3, r2
   43e14:	cmp	r6, r1
   43e18:	bls	43e88 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x28c>
   43e1c:	cmp	r0, r1
   43e20:	bcc	43e3c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x240>
   43e24:	ldr	r2, [r4, #44]	; 0x2c
   43e28:	mov	r0, r4
   43e2c:	mov	r1, #0
   43e30:	blx	r2
   43e34:	ldr	r1, [r4, #16]
   43e38:	ldr	r0, [r4, #20]
   43e3c:	sub	r6, r1, r0
   43e40:	cmp	r6, r5
   43e44:	bcs	43e88 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x28c>
   43e48:	mov	r1, #32
   43e4c:	mov	r2, r6
   43e50:	bl	14ef0 <memset@plt>
   43e54:	ldr	r0, [r4, #20]
   43e58:	ldr	r2, [r4, #44]	; 0x2c
   43e5c:	mov	r1, #0
   43e60:	add	r0, r0, r6
   43e64:	str	r0, [r4, #20]
   43e68:	mov	r0, r4
   43e6c:	blx	r2
   43e70:	ldr	r1, [r4, #16]
   43e74:	ldr	r0, [r4, #20]
   43e78:	sub	r5, r5, r6
   43e7c:	sub	r6, r1, r0
   43e80:	cmp	r5, r6
   43e84:	bhi	43e48 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x24c>
   43e88:	mov	r1, #32
   43e8c:	mov	r2, r5
   43e90:	bl	14ef0 <memset@plt>
   43e94:	ldr	r0, [r4, #20]
   43e98:	add	r0, r0, r5
   43e9c:	str	r0, [r4, #20]
   43ea0:	b	43ec0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c4>
   43ea4:	ldr	r1, [r4, #16]
   43ea8:	cmp	r0, r1
   43eac:	bcc	43ec0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c4>
   43eb0:	ldr	r2, [r4, #44]	; 0x2c
   43eb4:	mov	r0, r4
   43eb8:	mov	r1, #0
   43ebc:	blx	r2
   43ec0:	ldrd	r2, [r7]
   43ec4:	mov	r0, r4
   43ec8:	blx	sl
   43ecc:	add	r7, r7, #8
   43ed0:	cmp	r9, #0
   43ed4:	bne	43dc8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1cc>
   43ed8:	ldrb	r1, [r4, #25]
   43edc:	ldr	r0, [r4, #20]
   43ee0:	cmp	r1, #0
   43ee4:	beq	43fa4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3a8>
   43ee8:	add	r1, r0, #1
   43eec:	str	r1, [r4, #20]
   43ef0:	mov	r1, #10
   43ef4:	strb	r1, [r0]
   43ef8:	ldr	r0, [r4, #32]
   43efc:	sub	r2, r0, #1
   43f00:	str	r2, [r4, #32]
   43f04:	ldrb	r3, [r4, #25]
   43f08:	ldr	r0, [r4, #20]
   43f0c:	ldr	r1, [r4, #16]
   43f10:	mla	r7, r2, r3, r0
   43f14:	mul	r5, r2, r3
   43f18:	cmp	r7, r1
   43f1c:	bls	43f8c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x390>
   43f20:	cmp	r0, r1
   43f24:	bcc	43f40 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x344>
   43f28:	ldr	r2, [r4, #44]	; 0x2c
   43f2c:	mov	r0, r4
   43f30:	mov	r1, #0
   43f34:	blx	r2
   43f38:	ldr	r1, [r4, #16]
   43f3c:	ldr	r0, [r4, #20]
   43f40:	sub	r6, r1, r0
   43f44:	cmp	r6, r5
   43f48:	bcs	43f8c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x390>
   43f4c:	mov	r1, #32
   43f50:	mov	r2, r6
   43f54:	bl	14ef0 <memset@plt>
   43f58:	ldr	r0, [r4, #20]
   43f5c:	ldr	r2, [r4, #44]	; 0x2c
   43f60:	mov	r1, #0
   43f64:	add	r0, r0, r6
   43f68:	str	r0, [r4, #20]
   43f6c:	mov	r0, r4
   43f70:	blx	r2
   43f74:	ldr	r1, [r4, #16]
   43f78:	ldr	r0, [r4, #20]
   43f7c:	sub	r5, r5, r6
   43f80:	sub	r6, r1, r0
   43f84:	cmp	r5, r6
   43f88:	bhi	43f4c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x350>
   43f8c:	mov	r1, #32
   43f90:	mov	r2, r5
   43f94:	bl	14ef0 <memset@plt>
   43f98:	ldr	r0, [r4, #20]
   43f9c:	add	r0, r0, r5
   43fa0:	str	r0, [r4, #20]
   43fa4:	add	r1, r0, #1
   43fa8:	str	r1, [r4, #20]
   43fac:	mov	r1, #93	; 0x5d
   43fb0:	strb	r1, [r0]
   43fb4:	sub	sp, fp, #28
   43fb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00043fbc <flatcc_json_printer_int8_enum_vector_field@@Base>:
   43fbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43fc0:	add	fp, sp, #28
   43fc4:	sub	sp, sp, #4
   43fc8:	mov	r4, r0
   43fcc:	ldrb	r0, [r0, #27]
   43fd0:	cmp	r0, #0
   43fd4:	beq	43fe8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c>
   43fd8:	mov	r0, r4
   43fdc:	sub	sp, fp, #28
   43fe0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43fe4:	b	41030 <flatcc_json_printer_int8_vector_field@@Base>
   43fe8:	mov	r0, #4
   43fec:	add	r0, r0, r2, lsl #1
   43ff0:	ldr	r2, [r1, #8]
   43ff4:	cmp	r0, r2
   43ff8:	bge	44018 <flatcc_json_printer_int8_enum_vector_field@@Base+0x5c>
   43ffc:	ldr	r2, [r1, #4]
   44000:	add	r0, r2, r0
   44004:	ldrh	r0, [r0]
   44008:	cmp	r0, #0
   4400c:	ldrne	r2, [r1]
   44010:	addsne	r8, r2, r0
   44014:	bne	44020 <flatcc_json_printer_int8_enum_vector_field@@Base+0x64>
   44018:	sub	sp, fp, #28
   4401c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   44020:	ldr	r0, [r1, #16]
   44024:	ldr	sl, [fp, #12]
   44028:	ldr	r2, [fp, #8]
   4402c:	add	r7, r0, #1
   44030:	cmp	r0, #0
   44034:	str	r7, [r1, #16]
   44038:	ldrne	r0, [r4, #20]
   4403c:	addne	r1, r0, #1
   44040:	strne	r1, [r4, #20]
   44044:	movne	r1, #44	; 0x2c
   44048:	strbne	r1, [r0]
   4404c:	mov	r1, r3
   44050:	ldr	r0, [r8]
   44054:	ldr	r9, [r8, r0]!
   44058:	mov	r0, r4
   4405c:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   44060:	ldr	r1, [r4, #32]
   44064:	ldr	r0, [r4, #20]
   44068:	cmp	r9, #0
   4406c:	add	r1, r1, #1
   44070:	str	r1, [r4, #32]
   44074:	add	r1, r0, #1
   44078:	str	r1, [r4, #20]
   4407c:	mov	r1, #91	; 0x5b
   44080:	strb	r1, [r0]
   44084:	beq	44294 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2d8>
   44088:	ldrb	r1, [r4, #25]
   4408c:	ldr	r0, [r4, #20]
   44090:	cmp	r1, #0
   44094:	beq	44150 <flatcc_json_printer_int8_enum_vector_field@@Base+0x194>
   44098:	add	r1, r0, #1
   4409c:	str	r1, [r4, #20]
   440a0:	mov	r1, #10
   440a4:	strb	r1, [r0]
   440a8:	ldr	r0, [r4, #20]
   440ac:	ldrb	r2, [r4, #25]
   440b0:	ldr	r3, [r4, #32]
   440b4:	ldr	r1, [r4, #16]
   440b8:	mla	r7, r3, r2, r0
   440bc:	mul	r5, r3, r2
   440c0:	cmp	r7, r1
   440c4:	bls	44134 <flatcc_json_printer_int8_enum_vector_field@@Base+0x178>
   440c8:	cmp	r0, r1
   440cc:	bcc	440e8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x12c>
   440d0:	ldr	r2, [r4, #44]	; 0x2c
   440d4:	mov	r0, r4
   440d8:	mov	r1, #0
   440dc:	blx	r2
   440e0:	ldr	r1, [r4, #16]
   440e4:	ldr	r0, [r4, #20]
   440e8:	sub	r6, r1, r0
   440ec:	cmp	r6, r5
   440f0:	bcs	44134 <flatcc_json_printer_int8_enum_vector_field@@Base+0x178>
   440f4:	mov	r1, #32
   440f8:	mov	r2, r6
   440fc:	bl	14ef0 <memset@plt>
   44100:	ldr	r0, [r4, #20]
   44104:	ldr	r2, [r4, #44]	; 0x2c
   44108:	mov	r1, #0
   4410c:	add	r0, r0, r6
   44110:	str	r0, [r4, #20]
   44114:	mov	r0, r4
   44118:	blx	r2
   4411c:	ldr	r1, [r4, #16]
   44120:	ldr	r0, [r4, #20]
   44124:	sub	r5, r5, r6
   44128:	sub	r6, r1, r0
   4412c:	cmp	r5, r6
   44130:	bhi	440f4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x138>
   44134:	mov	r1, #32
   44138:	mov	r2, r5
   4413c:	bl	14ef0 <memset@plt>
   44140:	ldr	r0, [r4, #20]
   44144:	add	r0, r0, r5
   44148:	str	r0, [r4, #20]
   4414c:	b	4416c <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b0>
   44150:	ldr	r1, [r4, #16]
   44154:	cmp	r0, r1
   44158:	bcc	4416c <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b0>
   4415c:	ldr	r2, [r4, #44]	; 0x2c
   44160:	mov	r0, r4
   44164:	mov	r1, #0
   44168:	blx	r2
   4416c:	ldrsb	r1, [r8, #4]
   44170:	mov	r0, r4
   44174:	blx	sl
   44178:	subs	r9, r9, #1
   4417c:	beq	44294 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2d8>
   44180:	add	r7, r8, #5
   44184:	mov	r8, #44	; 0x2c
   44188:	ldr	r0, [r4, #20]
   4418c:	sub	r9, r9, #1
   44190:	add	r1, r0, #1
   44194:	str	r1, [r4, #20]
   44198:	strb	r8, [r0]
   4419c:	ldrb	r1, [r4, #25]
   441a0:	ldr	r0, [r4, #20]
   441a4:	cmp	r1, #0
   441a8:	beq	44264 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2a8>
   441ac:	add	r1, r0, #1
   441b0:	str	r1, [r4, #20]
   441b4:	mov	r1, #10
   441b8:	strb	r1, [r0]
   441bc:	ldr	r0, [r4, #20]
   441c0:	ldrb	r2, [r4, #25]
   441c4:	ldr	r3, [r4, #32]
   441c8:	ldr	r1, [r4, #16]
   441cc:	mla	r6, r3, r2, r0
   441d0:	mul	r5, r3, r2
   441d4:	cmp	r6, r1
   441d8:	bls	44248 <flatcc_json_printer_int8_enum_vector_field@@Base+0x28c>
   441dc:	cmp	r0, r1
   441e0:	bcc	441fc <flatcc_json_printer_int8_enum_vector_field@@Base+0x240>
   441e4:	ldr	r2, [r4, #44]	; 0x2c
   441e8:	mov	r0, r4
   441ec:	mov	r1, #0
   441f0:	blx	r2
   441f4:	ldr	r1, [r4, #16]
   441f8:	ldr	r0, [r4, #20]
   441fc:	sub	r6, r1, r0
   44200:	cmp	r6, r5
   44204:	bcs	44248 <flatcc_json_printer_int8_enum_vector_field@@Base+0x28c>
   44208:	mov	r1, #32
   4420c:	mov	r2, r6
   44210:	bl	14ef0 <memset@plt>
   44214:	ldr	r0, [r4, #20]
   44218:	ldr	r2, [r4, #44]	; 0x2c
   4421c:	mov	r1, #0
   44220:	add	r0, r0, r6
   44224:	str	r0, [r4, #20]
   44228:	mov	r0, r4
   4422c:	blx	r2
   44230:	ldr	r1, [r4, #16]
   44234:	ldr	r0, [r4, #20]
   44238:	sub	r5, r5, r6
   4423c:	sub	r6, r1, r0
   44240:	cmp	r5, r6
   44244:	bhi	44208 <flatcc_json_printer_int8_enum_vector_field@@Base+0x24c>
   44248:	mov	r1, #32
   4424c:	mov	r2, r5
   44250:	bl	14ef0 <memset@plt>
   44254:	ldr	r0, [r4, #20]
   44258:	add	r0, r0, r5
   4425c:	str	r0, [r4, #20]
   44260:	b	44280 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c4>
   44264:	ldr	r1, [r4, #16]
   44268:	cmp	r0, r1
   4426c:	bcc	44280 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c4>
   44270:	ldr	r2, [r4, #44]	; 0x2c
   44274:	mov	r0, r4
   44278:	mov	r1, #0
   4427c:	blx	r2
   44280:	ldrsb	r1, [r7], #1
   44284:	mov	r0, r4
   44288:	blx	sl
   4428c:	cmp	r9, #0
   44290:	bne	44188 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1cc>
   44294:	ldrb	r1, [r4, #25]
   44298:	ldr	r0, [r4, #20]
   4429c:	cmp	r1, #0
   442a0:	beq	44360 <flatcc_json_printer_int8_enum_vector_field@@Base+0x3a4>
   442a4:	add	r1, r0, #1
   442a8:	str	r1, [r4, #20]
   442ac:	mov	r1, #10
   442b0:	strb	r1, [r0]
   442b4:	ldr	r0, [r4, #32]
   442b8:	sub	r2, r0, #1
   442bc:	str	r2, [r4, #32]
   442c0:	ldrb	r3, [r4, #25]
   442c4:	ldr	r0, [r4, #20]
   442c8:	ldr	r1, [r4, #16]
   442cc:	mla	r7, r2, r3, r0
   442d0:	mul	r5, r2, r3
   442d4:	cmp	r7, r1
   442d8:	bls	44348 <flatcc_json_printer_int8_enum_vector_field@@Base+0x38c>
   442dc:	cmp	r0, r1
   442e0:	bcc	442fc <flatcc_json_printer_int8_enum_vector_field@@Base+0x340>
   442e4:	ldr	r2, [r4, #44]	; 0x2c
   442e8:	mov	r0, r4
   442ec:	mov	r1, #0
   442f0:	blx	r2
   442f4:	ldr	r1, [r4, #16]
   442f8:	ldr	r0, [r4, #20]
   442fc:	sub	r6, r1, r0
   44300:	cmp	r6, r5
   44304:	bcs	44348 <flatcc_json_printer_int8_enum_vector_field@@Base+0x38c>
   44308:	mov	r1, #32
   4430c:	mov	r2, r6
   44310:	bl	14ef0 <memset@plt>
   44314:	ldr	r0, [r4, #20]
   44318:	ldr	r2, [r4, #44]	; 0x2c
   4431c:	mov	r1, #0
   44320:	add	r0, r0, r6
   44324:	str	r0, [r4, #20]
   44328:	mov	r0, r4
   4432c:	blx	r2
   44330:	ldr	r1, [r4, #16]
   44334:	ldr	r0, [r4, #20]
   44338:	sub	r5, r5, r6
   4433c:	sub	r6, r1, r0
   44340:	cmp	r5, r6
   44344:	bhi	44308 <flatcc_json_printer_int8_enum_vector_field@@Base+0x34c>
   44348:	mov	r1, #32
   4434c:	mov	r2, r5
   44350:	bl	14ef0 <memset@plt>
   44354:	ldr	r0, [r4, #20]
   44358:	add	r0, r0, r5
   4435c:	str	r0, [r4, #20]
   44360:	add	r1, r0, #1
   44364:	str	r1, [r4, #20]
   44368:	mov	r1, #93	; 0x5d
   4436c:	strb	r1, [r0]
   44370:	sub	sp, fp, #28
   44374:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00044378 <flatcc_json_printer_int16_enum_vector_field@@Base>:
   44378:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4437c:	add	fp, sp, #28
   44380:	sub	sp, sp, #4
   44384:	mov	r4, r0
   44388:	ldrb	r0, [r0, #27]
   4438c:	cmp	r0, #0
   44390:	beq	443a4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c>
   44394:	mov	r0, r4
   44398:	sub	sp, fp, #28
   4439c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   443a0:	b	41568 <flatcc_json_printer_int16_vector_field@@Base>
   443a4:	mov	r0, #4
   443a8:	add	r0, r0, r2, lsl #1
   443ac:	ldr	r2, [r1, #8]
   443b0:	cmp	r0, r2
   443b4:	bge	443d4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x5c>
   443b8:	ldr	r2, [r1, #4]
   443bc:	add	r0, r2, r0
   443c0:	ldrh	r0, [r0]
   443c4:	cmp	r0, #0
   443c8:	ldrne	r2, [r1]
   443cc:	addsne	r8, r2, r0
   443d0:	bne	443dc <flatcc_json_printer_int16_enum_vector_field@@Base+0x64>
   443d4:	sub	sp, fp, #28
   443d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   443dc:	ldr	r0, [r1, #16]
   443e0:	ldr	sl, [fp, #12]
   443e4:	ldr	r2, [fp, #8]
   443e8:	add	r7, r0, #1
   443ec:	cmp	r0, #0
   443f0:	str	r7, [r1, #16]
   443f4:	ldrne	r0, [r4, #20]
   443f8:	addne	r1, r0, #1
   443fc:	strne	r1, [r4, #20]
   44400:	movne	r1, #44	; 0x2c
   44404:	strbne	r1, [r0]
   44408:	mov	r1, r3
   4440c:	ldr	r0, [r8]
   44410:	ldr	r9, [r8, r0]!
   44414:	mov	r0, r4
   44418:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   4441c:	ldr	r1, [r4, #32]
   44420:	ldr	r0, [r4, #20]
   44424:	cmp	r9, #0
   44428:	add	r1, r1, #1
   4442c:	str	r1, [r4, #32]
   44430:	add	r1, r0, #1
   44434:	str	r1, [r4, #20]
   44438:	mov	r1, #91	; 0x5b
   4443c:	strb	r1, [r0]
   44440:	beq	44650 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2d8>
   44444:	ldrb	r1, [r4, #25]
   44448:	ldr	r0, [r4, #20]
   4444c:	cmp	r1, #0
   44450:	beq	4450c <flatcc_json_printer_int16_enum_vector_field@@Base+0x194>
   44454:	add	r1, r0, #1
   44458:	str	r1, [r4, #20]
   4445c:	mov	r1, #10
   44460:	strb	r1, [r0]
   44464:	ldr	r0, [r4, #20]
   44468:	ldrb	r2, [r4, #25]
   4446c:	ldr	r3, [r4, #32]
   44470:	ldr	r1, [r4, #16]
   44474:	mla	r7, r3, r2, r0
   44478:	mul	r5, r3, r2
   4447c:	cmp	r7, r1
   44480:	bls	444f0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x178>
   44484:	cmp	r0, r1
   44488:	bcc	444a4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x12c>
   4448c:	ldr	r2, [r4, #44]	; 0x2c
   44490:	mov	r0, r4
   44494:	mov	r1, #0
   44498:	blx	r2
   4449c:	ldr	r1, [r4, #16]
   444a0:	ldr	r0, [r4, #20]
   444a4:	sub	r6, r1, r0
   444a8:	cmp	r6, r5
   444ac:	bcs	444f0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x178>
   444b0:	mov	r1, #32
   444b4:	mov	r2, r6
   444b8:	bl	14ef0 <memset@plt>
   444bc:	ldr	r0, [r4, #20]
   444c0:	ldr	r2, [r4, #44]	; 0x2c
   444c4:	mov	r1, #0
   444c8:	add	r0, r0, r6
   444cc:	str	r0, [r4, #20]
   444d0:	mov	r0, r4
   444d4:	blx	r2
   444d8:	ldr	r1, [r4, #16]
   444dc:	ldr	r0, [r4, #20]
   444e0:	sub	r5, r5, r6
   444e4:	sub	r6, r1, r0
   444e8:	cmp	r5, r6
   444ec:	bhi	444b0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x138>
   444f0:	mov	r1, #32
   444f4:	mov	r2, r5
   444f8:	bl	14ef0 <memset@plt>
   444fc:	ldr	r0, [r4, #20]
   44500:	add	r0, r0, r5
   44504:	str	r0, [r4, #20]
   44508:	b	44528 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b0>
   4450c:	ldr	r1, [r4, #16]
   44510:	cmp	r0, r1
   44514:	bcc	44528 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b0>
   44518:	ldr	r2, [r4, #44]	; 0x2c
   4451c:	mov	r0, r4
   44520:	mov	r1, #0
   44524:	blx	r2
   44528:	ldrsh	r1, [r8, #4]
   4452c:	mov	r0, r4
   44530:	blx	sl
   44534:	subs	r9, r9, #1
   44538:	beq	44650 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2d8>
   4453c:	add	r7, r8, #6
   44540:	mov	r8, #44	; 0x2c
   44544:	ldr	r0, [r4, #20]
   44548:	sub	r9, r9, #1
   4454c:	add	r1, r0, #1
   44550:	str	r1, [r4, #20]
   44554:	strb	r8, [r0]
   44558:	ldrb	r1, [r4, #25]
   4455c:	ldr	r0, [r4, #20]
   44560:	cmp	r1, #0
   44564:	beq	44620 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2a8>
   44568:	add	r1, r0, #1
   4456c:	str	r1, [r4, #20]
   44570:	mov	r1, #10
   44574:	strb	r1, [r0]
   44578:	ldr	r0, [r4, #20]
   4457c:	ldrb	r2, [r4, #25]
   44580:	ldr	r3, [r4, #32]
   44584:	ldr	r1, [r4, #16]
   44588:	mla	r6, r3, r2, r0
   4458c:	mul	r5, r3, r2
   44590:	cmp	r6, r1
   44594:	bls	44604 <flatcc_json_printer_int16_enum_vector_field@@Base+0x28c>
   44598:	cmp	r0, r1
   4459c:	bcc	445b8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x240>
   445a0:	ldr	r2, [r4, #44]	; 0x2c
   445a4:	mov	r0, r4
   445a8:	mov	r1, #0
   445ac:	blx	r2
   445b0:	ldr	r1, [r4, #16]
   445b4:	ldr	r0, [r4, #20]
   445b8:	sub	r6, r1, r0
   445bc:	cmp	r6, r5
   445c0:	bcs	44604 <flatcc_json_printer_int16_enum_vector_field@@Base+0x28c>
   445c4:	mov	r1, #32
   445c8:	mov	r2, r6
   445cc:	bl	14ef0 <memset@plt>
   445d0:	ldr	r0, [r4, #20]
   445d4:	ldr	r2, [r4, #44]	; 0x2c
   445d8:	mov	r1, #0
   445dc:	add	r0, r0, r6
   445e0:	str	r0, [r4, #20]
   445e4:	mov	r0, r4
   445e8:	blx	r2
   445ec:	ldr	r1, [r4, #16]
   445f0:	ldr	r0, [r4, #20]
   445f4:	sub	r5, r5, r6
   445f8:	sub	r6, r1, r0
   445fc:	cmp	r5, r6
   44600:	bhi	445c4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x24c>
   44604:	mov	r1, #32
   44608:	mov	r2, r5
   4460c:	bl	14ef0 <memset@plt>
   44610:	ldr	r0, [r4, #20]
   44614:	add	r0, r0, r5
   44618:	str	r0, [r4, #20]
   4461c:	b	4463c <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c4>
   44620:	ldr	r1, [r4, #16]
   44624:	cmp	r0, r1
   44628:	bcc	4463c <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c4>
   4462c:	ldr	r2, [r4, #44]	; 0x2c
   44630:	mov	r0, r4
   44634:	mov	r1, #0
   44638:	blx	r2
   4463c:	ldrsh	r1, [r7], #2
   44640:	mov	r0, r4
   44644:	blx	sl
   44648:	cmp	r9, #0
   4464c:	bne	44544 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1cc>
   44650:	ldrb	r1, [r4, #25]
   44654:	ldr	r0, [r4, #20]
   44658:	cmp	r1, #0
   4465c:	beq	4471c <flatcc_json_printer_int16_enum_vector_field@@Base+0x3a4>
   44660:	add	r1, r0, #1
   44664:	str	r1, [r4, #20]
   44668:	mov	r1, #10
   4466c:	strb	r1, [r0]
   44670:	ldr	r0, [r4, #32]
   44674:	sub	r2, r0, #1
   44678:	str	r2, [r4, #32]
   4467c:	ldrb	r3, [r4, #25]
   44680:	ldr	r0, [r4, #20]
   44684:	ldr	r1, [r4, #16]
   44688:	mla	r7, r2, r3, r0
   4468c:	mul	r5, r2, r3
   44690:	cmp	r7, r1
   44694:	bls	44704 <flatcc_json_printer_int16_enum_vector_field@@Base+0x38c>
   44698:	cmp	r0, r1
   4469c:	bcc	446b8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x340>
   446a0:	ldr	r2, [r4, #44]	; 0x2c
   446a4:	mov	r0, r4
   446a8:	mov	r1, #0
   446ac:	blx	r2
   446b0:	ldr	r1, [r4, #16]
   446b4:	ldr	r0, [r4, #20]
   446b8:	sub	r6, r1, r0
   446bc:	cmp	r6, r5
   446c0:	bcs	44704 <flatcc_json_printer_int16_enum_vector_field@@Base+0x38c>
   446c4:	mov	r1, #32
   446c8:	mov	r2, r6
   446cc:	bl	14ef0 <memset@plt>
   446d0:	ldr	r0, [r4, #20]
   446d4:	ldr	r2, [r4, #44]	; 0x2c
   446d8:	mov	r1, #0
   446dc:	add	r0, r0, r6
   446e0:	str	r0, [r4, #20]
   446e4:	mov	r0, r4
   446e8:	blx	r2
   446ec:	ldr	r1, [r4, #16]
   446f0:	ldr	r0, [r4, #20]
   446f4:	sub	r5, r5, r6
   446f8:	sub	r6, r1, r0
   446fc:	cmp	r5, r6
   44700:	bhi	446c4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x34c>
   44704:	mov	r1, #32
   44708:	mov	r2, r5
   4470c:	bl	14ef0 <memset@plt>
   44710:	ldr	r0, [r4, #20]
   44714:	add	r0, r0, r5
   44718:	str	r0, [r4, #20]
   4471c:	add	r1, r0, #1
   44720:	str	r1, [r4, #20]
   44724:	mov	r1, #93	; 0x5d
   44728:	strb	r1, [r0]
   4472c:	sub	sp, fp, #28
   44730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00044734 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   44734:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44738:	add	fp, sp, #28
   4473c:	sub	sp, sp, #4
   44740:	mov	r4, r0
   44744:	ldrb	r0, [r0, #27]
   44748:	cmp	r0, #0
   4474c:	beq	44760 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c>
   44750:	mov	r0, r4
   44754:	sub	sp, fp, #28
   44758:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4475c:	b	41960 <flatcc_json_printer_int32_vector_field@@Base>
   44760:	mov	r0, #4
   44764:	add	r0, r0, r2, lsl #1
   44768:	ldr	r2, [r1, #8]
   4476c:	cmp	r0, r2
   44770:	bge	44790 <flatcc_json_printer_int32_enum_vector_field@@Base+0x5c>
   44774:	ldr	r2, [r1, #4]
   44778:	add	r0, r2, r0
   4477c:	ldrh	r0, [r0]
   44780:	cmp	r0, #0
   44784:	ldrne	r2, [r1]
   44788:	addsne	r8, r2, r0
   4478c:	bne	44798 <flatcc_json_printer_int32_enum_vector_field@@Base+0x64>
   44790:	sub	sp, fp, #28
   44794:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   44798:	ldr	r0, [r1, #16]
   4479c:	ldr	sl, [fp, #12]
   447a0:	ldr	r2, [fp, #8]
   447a4:	add	r7, r0, #1
   447a8:	cmp	r0, #0
   447ac:	str	r7, [r1, #16]
   447b0:	ldrne	r0, [r4, #20]
   447b4:	addne	r1, r0, #1
   447b8:	strne	r1, [r4, #20]
   447bc:	movne	r1, #44	; 0x2c
   447c0:	strbne	r1, [r0]
   447c4:	mov	r1, r3
   447c8:	ldr	r0, [r8]
   447cc:	ldr	r9, [r8, r0]!
   447d0:	mov	r0, r4
   447d4:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   447d8:	ldr	r1, [r4, #32]
   447dc:	ldr	r0, [r4, #20]
   447e0:	cmp	r9, #0
   447e4:	add	r1, r1, #1
   447e8:	str	r1, [r4, #32]
   447ec:	add	r1, r0, #1
   447f0:	str	r1, [r4, #20]
   447f4:	mov	r1, #91	; 0x5b
   447f8:	strb	r1, [r0]
   447fc:	beq	44a0c <flatcc_json_printer_int32_enum_vector_field@@Base+0x2d8>
   44800:	ldrb	r1, [r4, #25]
   44804:	ldr	r0, [r4, #20]
   44808:	cmp	r1, #0
   4480c:	beq	448c8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x194>
   44810:	add	r1, r0, #1
   44814:	str	r1, [r4, #20]
   44818:	mov	r1, #10
   4481c:	strb	r1, [r0]
   44820:	ldr	r0, [r4, #20]
   44824:	ldrb	r2, [r4, #25]
   44828:	ldr	r3, [r4, #32]
   4482c:	ldr	r1, [r4, #16]
   44830:	mla	r7, r3, r2, r0
   44834:	mul	r5, r3, r2
   44838:	cmp	r7, r1
   4483c:	bls	448ac <flatcc_json_printer_int32_enum_vector_field@@Base+0x178>
   44840:	cmp	r0, r1
   44844:	bcc	44860 <flatcc_json_printer_int32_enum_vector_field@@Base+0x12c>
   44848:	ldr	r2, [r4, #44]	; 0x2c
   4484c:	mov	r0, r4
   44850:	mov	r1, #0
   44854:	blx	r2
   44858:	ldr	r1, [r4, #16]
   4485c:	ldr	r0, [r4, #20]
   44860:	sub	r6, r1, r0
   44864:	cmp	r6, r5
   44868:	bcs	448ac <flatcc_json_printer_int32_enum_vector_field@@Base+0x178>
   4486c:	mov	r1, #32
   44870:	mov	r2, r6
   44874:	bl	14ef0 <memset@plt>
   44878:	ldr	r0, [r4, #20]
   4487c:	ldr	r2, [r4, #44]	; 0x2c
   44880:	mov	r1, #0
   44884:	add	r0, r0, r6
   44888:	str	r0, [r4, #20]
   4488c:	mov	r0, r4
   44890:	blx	r2
   44894:	ldr	r1, [r4, #16]
   44898:	ldr	r0, [r4, #20]
   4489c:	sub	r5, r5, r6
   448a0:	sub	r6, r1, r0
   448a4:	cmp	r5, r6
   448a8:	bhi	4486c <flatcc_json_printer_int32_enum_vector_field@@Base+0x138>
   448ac:	mov	r1, #32
   448b0:	mov	r2, r5
   448b4:	bl	14ef0 <memset@plt>
   448b8:	ldr	r0, [r4, #20]
   448bc:	add	r0, r0, r5
   448c0:	str	r0, [r4, #20]
   448c4:	b	448e4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b0>
   448c8:	ldr	r1, [r4, #16]
   448cc:	cmp	r0, r1
   448d0:	bcc	448e4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b0>
   448d4:	ldr	r2, [r4, #44]	; 0x2c
   448d8:	mov	r0, r4
   448dc:	mov	r1, #0
   448e0:	blx	r2
   448e4:	ldr	r1, [r8, #4]
   448e8:	mov	r0, r4
   448ec:	blx	sl
   448f0:	subs	r9, r9, #1
   448f4:	beq	44a0c <flatcc_json_printer_int32_enum_vector_field@@Base+0x2d8>
   448f8:	add	r7, r8, #8
   448fc:	mov	r8, #44	; 0x2c
   44900:	ldr	r0, [r4, #20]
   44904:	sub	r9, r9, #1
   44908:	add	r1, r0, #1
   4490c:	str	r1, [r4, #20]
   44910:	strb	r8, [r0]
   44914:	ldrb	r1, [r4, #25]
   44918:	ldr	r0, [r4, #20]
   4491c:	cmp	r1, #0
   44920:	beq	449dc <flatcc_json_printer_int32_enum_vector_field@@Base+0x2a8>
   44924:	add	r1, r0, #1
   44928:	str	r1, [r4, #20]
   4492c:	mov	r1, #10
   44930:	strb	r1, [r0]
   44934:	ldr	r0, [r4, #20]
   44938:	ldrb	r2, [r4, #25]
   4493c:	ldr	r3, [r4, #32]
   44940:	ldr	r1, [r4, #16]
   44944:	mla	r6, r3, r2, r0
   44948:	mul	r5, r3, r2
   4494c:	cmp	r6, r1
   44950:	bls	449c0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x28c>
   44954:	cmp	r0, r1
   44958:	bcc	44974 <flatcc_json_printer_int32_enum_vector_field@@Base+0x240>
   4495c:	ldr	r2, [r4, #44]	; 0x2c
   44960:	mov	r0, r4
   44964:	mov	r1, #0
   44968:	blx	r2
   4496c:	ldr	r1, [r4, #16]
   44970:	ldr	r0, [r4, #20]
   44974:	sub	r6, r1, r0
   44978:	cmp	r6, r5
   4497c:	bcs	449c0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x28c>
   44980:	mov	r1, #32
   44984:	mov	r2, r6
   44988:	bl	14ef0 <memset@plt>
   4498c:	ldr	r0, [r4, #20]
   44990:	ldr	r2, [r4, #44]	; 0x2c
   44994:	mov	r1, #0
   44998:	add	r0, r0, r6
   4499c:	str	r0, [r4, #20]
   449a0:	mov	r0, r4
   449a4:	blx	r2
   449a8:	ldr	r1, [r4, #16]
   449ac:	ldr	r0, [r4, #20]
   449b0:	sub	r5, r5, r6
   449b4:	sub	r6, r1, r0
   449b8:	cmp	r5, r6
   449bc:	bhi	44980 <flatcc_json_printer_int32_enum_vector_field@@Base+0x24c>
   449c0:	mov	r1, #32
   449c4:	mov	r2, r5
   449c8:	bl	14ef0 <memset@plt>
   449cc:	ldr	r0, [r4, #20]
   449d0:	add	r0, r0, r5
   449d4:	str	r0, [r4, #20]
   449d8:	b	449f8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c4>
   449dc:	ldr	r1, [r4, #16]
   449e0:	cmp	r0, r1
   449e4:	bcc	449f8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c4>
   449e8:	ldr	r2, [r4, #44]	; 0x2c
   449ec:	mov	r0, r4
   449f0:	mov	r1, #0
   449f4:	blx	r2
   449f8:	ldr	r1, [r7], #4
   449fc:	mov	r0, r4
   44a00:	blx	sl
   44a04:	cmp	r9, #0
   44a08:	bne	44900 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1cc>
   44a0c:	ldrb	r1, [r4, #25]
   44a10:	ldr	r0, [r4, #20]
   44a14:	cmp	r1, #0
   44a18:	beq	44ad8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x3a4>
   44a1c:	add	r1, r0, #1
   44a20:	str	r1, [r4, #20]
   44a24:	mov	r1, #10
   44a28:	strb	r1, [r0]
   44a2c:	ldr	r0, [r4, #32]
   44a30:	sub	r2, r0, #1
   44a34:	str	r2, [r4, #32]
   44a38:	ldrb	r3, [r4, #25]
   44a3c:	ldr	r0, [r4, #20]
   44a40:	ldr	r1, [r4, #16]
   44a44:	mla	r7, r2, r3, r0
   44a48:	mul	r5, r2, r3
   44a4c:	cmp	r7, r1
   44a50:	bls	44ac0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x38c>
   44a54:	cmp	r0, r1
   44a58:	bcc	44a74 <flatcc_json_printer_int32_enum_vector_field@@Base+0x340>
   44a5c:	ldr	r2, [r4, #44]	; 0x2c
   44a60:	mov	r0, r4
   44a64:	mov	r1, #0
   44a68:	blx	r2
   44a6c:	ldr	r1, [r4, #16]
   44a70:	ldr	r0, [r4, #20]
   44a74:	sub	r6, r1, r0
   44a78:	cmp	r6, r5
   44a7c:	bcs	44ac0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x38c>
   44a80:	mov	r1, #32
   44a84:	mov	r2, r6
   44a88:	bl	14ef0 <memset@plt>
   44a8c:	ldr	r0, [r4, #20]
   44a90:	ldr	r2, [r4, #44]	; 0x2c
   44a94:	mov	r1, #0
   44a98:	add	r0, r0, r6
   44a9c:	str	r0, [r4, #20]
   44aa0:	mov	r0, r4
   44aa4:	blx	r2
   44aa8:	ldr	r1, [r4, #16]
   44aac:	ldr	r0, [r4, #20]
   44ab0:	sub	r5, r5, r6
   44ab4:	sub	r6, r1, r0
   44ab8:	cmp	r5, r6
   44abc:	bhi	44a80 <flatcc_json_printer_int32_enum_vector_field@@Base+0x34c>
   44ac0:	mov	r1, #32
   44ac4:	mov	r2, r5
   44ac8:	bl	14ef0 <memset@plt>
   44acc:	ldr	r0, [r4, #20]
   44ad0:	add	r0, r0, r5
   44ad4:	str	r0, [r4, #20]
   44ad8:	add	r1, r0, #1
   44adc:	str	r1, [r4, #20]
   44ae0:	mov	r1, #93	; 0x5d
   44ae4:	strb	r1, [r0]
   44ae8:	sub	sp, fp, #28
   44aec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00044af0 <flatcc_json_printer_int64_enum_vector_field@@Base>:
   44af0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44af4:	add	fp, sp, #28
   44af8:	sub	sp, sp, #4
   44afc:	mov	r4, r0
   44b00:	ldrb	r0, [r0, #27]
   44b04:	cmp	r0, #0
   44b08:	beq	44b1c <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c>
   44b0c:	mov	r0, r4
   44b10:	sub	sp, fp, #28
   44b14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44b18:	b	41d48 <flatcc_json_printer_int64_vector_field@@Base>
   44b1c:	mov	r0, #4
   44b20:	add	r0, r0, r2, lsl #1
   44b24:	ldr	r2, [r1, #8]
   44b28:	cmp	r0, r2
   44b2c:	bge	44b4c <flatcc_json_printer_int64_enum_vector_field@@Base+0x5c>
   44b30:	ldr	r2, [r1, #4]
   44b34:	add	r0, r2, r0
   44b38:	ldrh	r0, [r0]
   44b3c:	cmp	r0, #0
   44b40:	ldrne	r2, [r1]
   44b44:	addsne	r8, r2, r0
   44b48:	bne	44b54 <flatcc_json_printer_int64_enum_vector_field@@Base+0x64>
   44b4c:	sub	sp, fp, #28
   44b50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   44b54:	ldr	r0, [r1, #16]
   44b58:	ldr	sl, [fp, #12]
   44b5c:	ldr	r2, [fp, #8]
   44b60:	add	r7, r0, #1
   44b64:	cmp	r0, #0
   44b68:	str	r7, [r1, #16]
   44b6c:	ldrne	r0, [r4, #20]
   44b70:	addne	r1, r0, #1
   44b74:	strne	r1, [r4, #20]
   44b78:	movne	r1, #44	; 0x2c
   44b7c:	strbne	r1, [r0]
   44b80:	mov	r1, r3
   44b84:	ldr	r0, [r8]
   44b88:	ldr	r9, [r8, r0]!
   44b8c:	mov	r0, r4
   44b90:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   44b94:	ldr	r1, [r4, #32]
   44b98:	ldr	r0, [r4, #20]
   44b9c:	cmp	r9, #0
   44ba0:	add	r1, r1, #1
   44ba4:	str	r1, [r4, #32]
   44ba8:	add	r1, r0, #1
   44bac:	str	r1, [r4, #20]
   44bb0:	mov	r1, #91	; 0x5b
   44bb4:	strb	r1, [r0]
   44bb8:	beq	44dcc <flatcc_json_printer_int64_enum_vector_field@@Base+0x2dc>
   44bbc:	ldrb	r1, [r4, #25]
   44bc0:	ldr	r0, [r4, #20]
   44bc4:	cmp	r1, #0
   44bc8:	beq	44c84 <flatcc_json_printer_int64_enum_vector_field@@Base+0x194>
   44bcc:	add	r1, r0, #1
   44bd0:	str	r1, [r4, #20]
   44bd4:	mov	r1, #10
   44bd8:	strb	r1, [r0]
   44bdc:	ldr	r0, [r4, #20]
   44be0:	ldrb	r2, [r4, #25]
   44be4:	ldr	r3, [r4, #32]
   44be8:	ldr	r1, [r4, #16]
   44bec:	mla	r7, r3, r2, r0
   44bf0:	mul	r5, r3, r2
   44bf4:	cmp	r7, r1
   44bf8:	bls	44c68 <flatcc_json_printer_int64_enum_vector_field@@Base+0x178>
   44bfc:	cmp	r0, r1
   44c00:	bcc	44c1c <flatcc_json_printer_int64_enum_vector_field@@Base+0x12c>
   44c04:	ldr	r2, [r4, #44]	; 0x2c
   44c08:	mov	r0, r4
   44c0c:	mov	r1, #0
   44c10:	blx	r2
   44c14:	ldr	r1, [r4, #16]
   44c18:	ldr	r0, [r4, #20]
   44c1c:	sub	r6, r1, r0
   44c20:	cmp	r6, r5
   44c24:	bcs	44c68 <flatcc_json_printer_int64_enum_vector_field@@Base+0x178>
   44c28:	mov	r1, #32
   44c2c:	mov	r2, r6
   44c30:	bl	14ef0 <memset@plt>
   44c34:	ldr	r0, [r4, #20]
   44c38:	ldr	r2, [r4, #44]	; 0x2c
   44c3c:	mov	r1, #0
   44c40:	add	r0, r0, r6
   44c44:	str	r0, [r4, #20]
   44c48:	mov	r0, r4
   44c4c:	blx	r2
   44c50:	ldr	r1, [r4, #16]
   44c54:	ldr	r0, [r4, #20]
   44c58:	sub	r5, r5, r6
   44c5c:	sub	r6, r1, r0
   44c60:	cmp	r5, r6
   44c64:	bhi	44c28 <flatcc_json_printer_int64_enum_vector_field@@Base+0x138>
   44c68:	mov	r1, #32
   44c6c:	mov	r2, r5
   44c70:	bl	14ef0 <memset@plt>
   44c74:	ldr	r0, [r4, #20]
   44c78:	add	r0, r0, r5
   44c7c:	str	r0, [r4, #20]
   44c80:	b	44ca0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b0>
   44c84:	ldr	r1, [r4, #16]
   44c88:	cmp	r0, r1
   44c8c:	bcc	44ca0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b0>
   44c90:	ldr	r2, [r4, #44]	; 0x2c
   44c94:	mov	r0, r4
   44c98:	mov	r1, #0
   44c9c:	blx	r2
   44ca0:	ldrd	r2, [r8, #4]
   44ca4:	mov	r0, r4
   44ca8:	blx	sl
   44cac:	subs	r9, r9, #1
   44cb0:	beq	44dcc <flatcc_json_printer_int64_enum_vector_field@@Base+0x2dc>
   44cb4:	add	r7, r8, #12
   44cb8:	mov	r8, #44	; 0x2c
   44cbc:	ldr	r0, [r4, #20]
   44cc0:	sub	r9, r9, #1
   44cc4:	add	r1, r0, #1
   44cc8:	str	r1, [r4, #20]
   44ccc:	strb	r8, [r0]
   44cd0:	ldrb	r1, [r4, #25]
   44cd4:	ldr	r0, [r4, #20]
   44cd8:	cmp	r1, #0
   44cdc:	beq	44d98 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2a8>
   44ce0:	add	r1, r0, #1
   44ce4:	str	r1, [r4, #20]
   44ce8:	mov	r1, #10
   44cec:	strb	r1, [r0]
   44cf0:	ldr	r0, [r4, #20]
   44cf4:	ldrb	r2, [r4, #25]
   44cf8:	ldr	r3, [r4, #32]
   44cfc:	ldr	r1, [r4, #16]
   44d00:	mla	r6, r3, r2, r0
   44d04:	mul	r5, r3, r2
   44d08:	cmp	r6, r1
   44d0c:	bls	44d7c <flatcc_json_printer_int64_enum_vector_field@@Base+0x28c>
   44d10:	cmp	r0, r1
   44d14:	bcc	44d30 <flatcc_json_printer_int64_enum_vector_field@@Base+0x240>
   44d18:	ldr	r2, [r4, #44]	; 0x2c
   44d1c:	mov	r0, r4
   44d20:	mov	r1, #0
   44d24:	blx	r2
   44d28:	ldr	r1, [r4, #16]
   44d2c:	ldr	r0, [r4, #20]
   44d30:	sub	r6, r1, r0
   44d34:	cmp	r6, r5
   44d38:	bcs	44d7c <flatcc_json_printer_int64_enum_vector_field@@Base+0x28c>
   44d3c:	mov	r1, #32
   44d40:	mov	r2, r6
   44d44:	bl	14ef0 <memset@plt>
   44d48:	ldr	r0, [r4, #20]
   44d4c:	ldr	r2, [r4, #44]	; 0x2c
   44d50:	mov	r1, #0
   44d54:	add	r0, r0, r6
   44d58:	str	r0, [r4, #20]
   44d5c:	mov	r0, r4
   44d60:	blx	r2
   44d64:	ldr	r1, [r4, #16]
   44d68:	ldr	r0, [r4, #20]
   44d6c:	sub	r5, r5, r6
   44d70:	sub	r6, r1, r0
   44d74:	cmp	r5, r6
   44d78:	bhi	44d3c <flatcc_json_printer_int64_enum_vector_field@@Base+0x24c>
   44d7c:	mov	r1, #32
   44d80:	mov	r2, r5
   44d84:	bl	14ef0 <memset@plt>
   44d88:	ldr	r0, [r4, #20]
   44d8c:	add	r0, r0, r5
   44d90:	str	r0, [r4, #20]
   44d94:	b	44db4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c4>
   44d98:	ldr	r1, [r4, #16]
   44d9c:	cmp	r0, r1
   44da0:	bcc	44db4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c4>
   44da4:	ldr	r2, [r4, #44]	; 0x2c
   44da8:	mov	r0, r4
   44dac:	mov	r1, #0
   44db0:	blx	r2
   44db4:	ldrd	r2, [r7]
   44db8:	mov	r0, r4
   44dbc:	blx	sl
   44dc0:	add	r7, r7, #8
   44dc4:	cmp	r9, #0
   44dc8:	bne	44cbc <flatcc_json_printer_int64_enum_vector_field@@Base+0x1cc>
   44dcc:	ldrb	r1, [r4, #25]
   44dd0:	ldr	r0, [r4, #20]
   44dd4:	cmp	r1, #0
   44dd8:	beq	44e98 <flatcc_json_printer_int64_enum_vector_field@@Base+0x3a8>
   44ddc:	add	r1, r0, #1
   44de0:	str	r1, [r4, #20]
   44de4:	mov	r1, #10
   44de8:	strb	r1, [r0]
   44dec:	ldr	r0, [r4, #32]
   44df0:	sub	r2, r0, #1
   44df4:	str	r2, [r4, #32]
   44df8:	ldrb	r3, [r4, #25]
   44dfc:	ldr	r0, [r4, #20]
   44e00:	ldr	r1, [r4, #16]
   44e04:	mla	r7, r2, r3, r0
   44e08:	mul	r5, r2, r3
   44e0c:	cmp	r7, r1
   44e10:	bls	44e80 <flatcc_json_printer_int64_enum_vector_field@@Base+0x390>
   44e14:	cmp	r0, r1
   44e18:	bcc	44e34 <flatcc_json_printer_int64_enum_vector_field@@Base+0x344>
   44e1c:	ldr	r2, [r4, #44]	; 0x2c
   44e20:	mov	r0, r4
   44e24:	mov	r1, #0
   44e28:	blx	r2
   44e2c:	ldr	r1, [r4, #16]
   44e30:	ldr	r0, [r4, #20]
   44e34:	sub	r6, r1, r0
   44e38:	cmp	r6, r5
   44e3c:	bcs	44e80 <flatcc_json_printer_int64_enum_vector_field@@Base+0x390>
   44e40:	mov	r1, #32
   44e44:	mov	r2, r6
   44e48:	bl	14ef0 <memset@plt>
   44e4c:	ldr	r0, [r4, #20]
   44e50:	ldr	r2, [r4, #44]	; 0x2c
   44e54:	mov	r1, #0
   44e58:	add	r0, r0, r6
   44e5c:	str	r0, [r4, #20]
   44e60:	mov	r0, r4
   44e64:	blx	r2
   44e68:	ldr	r1, [r4, #16]
   44e6c:	ldr	r0, [r4, #20]
   44e70:	sub	r5, r5, r6
   44e74:	sub	r6, r1, r0
   44e78:	cmp	r5, r6
   44e7c:	bhi	44e40 <flatcc_json_printer_int64_enum_vector_field@@Base+0x350>
   44e80:	mov	r1, #32
   44e84:	mov	r2, r5
   44e88:	bl	14ef0 <memset@plt>
   44e8c:	ldr	r0, [r4, #20]
   44e90:	add	r0, r0, r5
   44e94:	str	r0, [r4, #20]
   44e98:	add	r1, r0, #1
   44e9c:	str	r1, [r4, #20]
   44ea0:	mov	r1, #93	; 0x5d
   44ea4:	strb	r1, [r0]
   44ea8:	sub	sp, fp, #28
   44eac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00044eb0 <flatcc_json_printer_bool_enum_vector_field@@Base>:
   44eb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44eb4:	add	fp, sp, #28
   44eb8:	sub	sp, sp, #4
   44ebc:	mov	r4, r0
   44ec0:	ldrb	r0, [r0, #27]
   44ec4:	cmp	r0, #0
   44ec8:	beq	44edc <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c>
   44ecc:	mov	r0, r4
   44ed0:	sub	sp, fp, #28
   44ed4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44ed8:	b	42150 <flatcc_json_printer_bool_vector_field@@Base>
   44edc:	mov	r0, #4
   44ee0:	add	r0, r0, r2, lsl #1
   44ee4:	ldr	r2, [r1, #8]
   44ee8:	cmp	r0, r2
   44eec:	bge	44f0c <flatcc_json_printer_bool_enum_vector_field@@Base+0x5c>
   44ef0:	ldr	r2, [r1, #4]
   44ef4:	add	r0, r2, r0
   44ef8:	ldrh	r0, [r0]
   44efc:	cmp	r0, #0
   44f00:	ldrne	r2, [r1]
   44f04:	addsne	r8, r2, r0
   44f08:	bne	44f14 <flatcc_json_printer_bool_enum_vector_field@@Base+0x64>
   44f0c:	sub	sp, fp, #28
   44f10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   44f14:	ldr	r0, [r1, #16]
   44f18:	ldr	sl, [fp, #12]
   44f1c:	ldr	r2, [fp, #8]
   44f20:	add	r7, r0, #1
   44f24:	cmp	r0, #0
   44f28:	str	r7, [r1, #16]
   44f2c:	ldrne	r0, [r4, #20]
   44f30:	addne	r1, r0, #1
   44f34:	strne	r1, [r4, #20]
   44f38:	movne	r1, #44	; 0x2c
   44f3c:	strbne	r1, [r0]
   44f40:	mov	r1, r3
   44f44:	ldr	r0, [r8]
   44f48:	ldr	r9, [r8, r0]!
   44f4c:	mov	r0, r4
   44f50:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   44f54:	ldr	r1, [r4, #32]
   44f58:	ldr	r0, [r4, #20]
   44f5c:	cmp	r9, #0
   44f60:	add	r1, r1, #1
   44f64:	str	r1, [r4, #32]
   44f68:	add	r1, r0, #1
   44f6c:	str	r1, [r4, #20]
   44f70:	mov	r1, #91	; 0x5b
   44f74:	strb	r1, [r0]
   44f78:	beq	45188 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2d8>
   44f7c:	ldrb	r1, [r4, #25]
   44f80:	ldr	r0, [r4, #20]
   44f84:	cmp	r1, #0
   44f88:	beq	45044 <flatcc_json_printer_bool_enum_vector_field@@Base+0x194>
   44f8c:	add	r1, r0, #1
   44f90:	str	r1, [r4, #20]
   44f94:	mov	r1, #10
   44f98:	strb	r1, [r0]
   44f9c:	ldr	r0, [r4, #20]
   44fa0:	ldrb	r2, [r4, #25]
   44fa4:	ldr	r3, [r4, #32]
   44fa8:	ldr	r1, [r4, #16]
   44fac:	mla	r7, r3, r2, r0
   44fb0:	mul	r5, r3, r2
   44fb4:	cmp	r7, r1
   44fb8:	bls	45028 <flatcc_json_printer_bool_enum_vector_field@@Base+0x178>
   44fbc:	cmp	r0, r1
   44fc0:	bcc	44fdc <flatcc_json_printer_bool_enum_vector_field@@Base+0x12c>
   44fc4:	ldr	r2, [r4, #44]	; 0x2c
   44fc8:	mov	r0, r4
   44fcc:	mov	r1, #0
   44fd0:	blx	r2
   44fd4:	ldr	r1, [r4, #16]
   44fd8:	ldr	r0, [r4, #20]
   44fdc:	sub	r6, r1, r0
   44fe0:	cmp	r6, r5
   44fe4:	bcs	45028 <flatcc_json_printer_bool_enum_vector_field@@Base+0x178>
   44fe8:	mov	r1, #32
   44fec:	mov	r2, r6
   44ff0:	bl	14ef0 <memset@plt>
   44ff4:	ldr	r0, [r4, #20]
   44ff8:	ldr	r2, [r4, #44]	; 0x2c
   44ffc:	mov	r1, #0
   45000:	add	r0, r0, r6
   45004:	str	r0, [r4, #20]
   45008:	mov	r0, r4
   4500c:	blx	r2
   45010:	ldr	r1, [r4, #16]
   45014:	ldr	r0, [r4, #20]
   45018:	sub	r5, r5, r6
   4501c:	sub	r6, r1, r0
   45020:	cmp	r5, r6
   45024:	bhi	44fe8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x138>
   45028:	mov	r1, #32
   4502c:	mov	r2, r5
   45030:	bl	14ef0 <memset@plt>
   45034:	ldr	r0, [r4, #20]
   45038:	add	r0, r0, r5
   4503c:	str	r0, [r4, #20]
   45040:	b	45060 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b0>
   45044:	ldr	r1, [r4, #16]
   45048:	cmp	r0, r1
   4504c:	bcc	45060 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b0>
   45050:	ldr	r2, [r4, #44]	; 0x2c
   45054:	mov	r0, r4
   45058:	mov	r1, #0
   4505c:	blx	r2
   45060:	ldrb	r1, [r8, #4]
   45064:	mov	r0, r4
   45068:	blx	sl
   4506c:	subs	r9, r9, #1
   45070:	beq	45188 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2d8>
   45074:	add	r7, r8, #5
   45078:	mov	r8, #44	; 0x2c
   4507c:	ldr	r0, [r4, #20]
   45080:	sub	r9, r9, #1
   45084:	add	r1, r0, #1
   45088:	str	r1, [r4, #20]
   4508c:	strb	r8, [r0]
   45090:	ldrb	r1, [r4, #25]
   45094:	ldr	r0, [r4, #20]
   45098:	cmp	r1, #0
   4509c:	beq	45158 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2a8>
   450a0:	add	r1, r0, #1
   450a4:	str	r1, [r4, #20]
   450a8:	mov	r1, #10
   450ac:	strb	r1, [r0]
   450b0:	ldr	r0, [r4, #20]
   450b4:	ldrb	r2, [r4, #25]
   450b8:	ldr	r3, [r4, #32]
   450bc:	ldr	r1, [r4, #16]
   450c0:	mla	r6, r3, r2, r0
   450c4:	mul	r5, r3, r2
   450c8:	cmp	r6, r1
   450cc:	bls	4513c <flatcc_json_printer_bool_enum_vector_field@@Base+0x28c>
   450d0:	cmp	r0, r1
   450d4:	bcc	450f0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x240>
   450d8:	ldr	r2, [r4, #44]	; 0x2c
   450dc:	mov	r0, r4
   450e0:	mov	r1, #0
   450e4:	blx	r2
   450e8:	ldr	r1, [r4, #16]
   450ec:	ldr	r0, [r4, #20]
   450f0:	sub	r6, r1, r0
   450f4:	cmp	r6, r5
   450f8:	bcs	4513c <flatcc_json_printer_bool_enum_vector_field@@Base+0x28c>
   450fc:	mov	r1, #32
   45100:	mov	r2, r6
   45104:	bl	14ef0 <memset@plt>
   45108:	ldr	r0, [r4, #20]
   4510c:	ldr	r2, [r4, #44]	; 0x2c
   45110:	mov	r1, #0
   45114:	add	r0, r0, r6
   45118:	str	r0, [r4, #20]
   4511c:	mov	r0, r4
   45120:	blx	r2
   45124:	ldr	r1, [r4, #16]
   45128:	ldr	r0, [r4, #20]
   4512c:	sub	r5, r5, r6
   45130:	sub	r6, r1, r0
   45134:	cmp	r5, r6
   45138:	bhi	450fc <flatcc_json_printer_bool_enum_vector_field@@Base+0x24c>
   4513c:	mov	r1, #32
   45140:	mov	r2, r5
   45144:	bl	14ef0 <memset@plt>
   45148:	ldr	r0, [r4, #20]
   4514c:	add	r0, r0, r5
   45150:	str	r0, [r4, #20]
   45154:	b	45174 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c4>
   45158:	ldr	r1, [r4, #16]
   4515c:	cmp	r0, r1
   45160:	bcc	45174 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c4>
   45164:	ldr	r2, [r4, #44]	; 0x2c
   45168:	mov	r0, r4
   4516c:	mov	r1, #0
   45170:	blx	r2
   45174:	ldrb	r1, [r7], #1
   45178:	mov	r0, r4
   4517c:	blx	sl
   45180:	cmp	r9, #0
   45184:	bne	4507c <flatcc_json_printer_bool_enum_vector_field@@Base+0x1cc>
   45188:	ldrb	r1, [r4, #25]
   4518c:	ldr	r0, [r4, #20]
   45190:	cmp	r1, #0
   45194:	beq	45254 <flatcc_json_printer_bool_enum_vector_field@@Base+0x3a4>
   45198:	add	r1, r0, #1
   4519c:	str	r1, [r4, #20]
   451a0:	mov	r1, #10
   451a4:	strb	r1, [r0]
   451a8:	ldr	r0, [r4, #32]
   451ac:	sub	r2, r0, #1
   451b0:	str	r2, [r4, #32]
   451b4:	ldrb	r3, [r4, #25]
   451b8:	ldr	r0, [r4, #20]
   451bc:	ldr	r1, [r4, #16]
   451c0:	mla	r7, r2, r3, r0
   451c4:	mul	r5, r2, r3
   451c8:	cmp	r7, r1
   451cc:	bls	4523c <flatcc_json_printer_bool_enum_vector_field@@Base+0x38c>
   451d0:	cmp	r0, r1
   451d4:	bcc	451f0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x340>
   451d8:	ldr	r2, [r4, #44]	; 0x2c
   451dc:	mov	r0, r4
   451e0:	mov	r1, #0
   451e4:	blx	r2
   451e8:	ldr	r1, [r4, #16]
   451ec:	ldr	r0, [r4, #20]
   451f0:	sub	r6, r1, r0
   451f4:	cmp	r6, r5
   451f8:	bcs	4523c <flatcc_json_printer_bool_enum_vector_field@@Base+0x38c>
   451fc:	mov	r1, #32
   45200:	mov	r2, r6
   45204:	bl	14ef0 <memset@plt>
   45208:	ldr	r0, [r4, #20]
   4520c:	ldr	r2, [r4, #44]	; 0x2c
   45210:	mov	r1, #0
   45214:	add	r0, r0, r6
   45218:	str	r0, [r4, #20]
   4521c:	mov	r0, r4
   45220:	blx	r2
   45224:	ldr	r1, [r4, #16]
   45228:	ldr	r0, [r4, #20]
   4522c:	sub	r5, r5, r6
   45230:	sub	r6, r1, r0
   45234:	cmp	r5, r6
   45238:	bhi	451fc <flatcc_json_printer_bool_enum_vector_field@@Base+0x34c>
   4523c:	mov	r1, #32
   45240:	mov	r2, r5
   45244:	bl	14ef0 <memset@plt>
   45248:	ldr	r0, [r4, #20]
   4524c:	add	r0, r0, r5
   45250:	str	r0, [r4, #20]
   45254:	add	r1, r0, #1
   45258:	str	r1, [r4, #20]
   4525c:	mov	r1, #93	; 0x5d
   45260:	strb	r1, [r0]
   45264:	sub	sp, fp, #28
   45268:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0004526c <flatcc_json_printer_struct_vector_field@@Base>:
   4526c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   45270:	add	fp, sp, #28
   45274:	sub	sp, sp, #4
   45278:	mov	r4, r0
   4527c:	mov	r0, #4
   45280:	add	r0, r0, r2, lsl #1
   45284:	ldr	r2, [r1, #8]
   45288:	cmp	r0, r2
   4528c:	bge	452ac <flatcc_json_printer_struct_vector_field@@Base+0x40>
   45290:	ldr	r2, [r1, #4]
   45294:	add	r0, r2, r0
   45298:	ldrh	r0, [r0]
   4529c:	cmp	r0, #0
   452a0:	ldrne	r2, [r1]
   452a4:	addsne	r6, r2, r0
   452a8:	bne	452b4 <flatcc_json_printer_struct_vector_field@@Base+0x48>
   452ac:	sub	sp, fp, #28
   452b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   452b4:	ldr	r0, [r1, #16]
   452b8:	ldr	r2, [fp, #8]
   452bc:	add	r7, r0, #1
   452c0:	cmp	r0, #0
   452c4:	str	r7, [r1, #16]
   452c8:	ldrne	r0, [r4, #20]
   452cc:	addne	r1, r0, #1
   452d0:	strne	r1, [r4, #20]
   452d4:	movne	r1, #44	; 0x2c
   452d8:	strbne	r1, [r0]
   452dc:	mov	r1, r3
   452e0:	ldr	r0, [r6]
   452e4:	ldr	r5, [r6, r0]!
   452e8:	mov	r0, r4
   452ec:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   452f0:	ldr	r1, [r4, #32]
   452f4:	ldr	r0, [r4, #20]
   452f8:	cmp	r5, #0
   452fc:	add	r1, r1, #1
   45300:	str	r1, [r4, #32]
   45304:	add	r1, r0, #1
   45308:	str	r1, [r4, #20]
   4530c:	mov	r1, #91	; 0x5b
   45310:	strb	r1, [r0]
   45314:	beq	45724 <flatcc_json_printer_struct_vector_field@@Base+0x4b8>
   45318:	ldrb	r1, [r4, #25]
   4531c:	ldr	r0, [r4, #20]
   45320:	add	r9, r6, #4
   45324:	cmp	r1, #0
   45328:	beq	453e4 <flatcc_json_printer_struct_vector_field@@Base+0x178>
   4532c:	add	r1, r0, #1
   45330:	str	r1, [r4, #20]
   45334:	mov	r1, #10
   45338:	strb	r1, [r0]
   4533c:	ldr	r0, [r4, #20]
   45340:	ldrb	r2, [r4, #25]
   45344:	ldr	r3, [r4, #32]
   45348:	ldr	r1, [r4, #16]
   4534c:	mla	r7, r3, r2, r0
   45350:	mul	r6, r3, r2
   45354:	cmp	r7, r1
   45358:	bls	453c8 <flatcc_json_printer_struct_vector_field@@Base+0x15c>
   4535c:	cmp	r0, r1
   45360:	bcc	4537c <flatcc_json_printer_struct_vector_field@@Base+0x110>
   45364:	ldr	r2, [r4, #44]	; 0x2c
   45368:	mov	r0, r4
   4536c:	mov	r1, #0
   45370:	blx	r2
   45374:	ldr	r1, [r4, #16]
   45378:	ldr	r0, [r4, #20]
   4537c:	sub	r7, r1, r0
   45380:	cmp	r7, r6
   45384:	bcs	453c8 <flatcc_json_printer_struct_vector_field@@Base+0x15c>
   45388:	mov	r1, #32
   4538c:	mov	r2, r7
   45390:	bl	14ef0 <memset@plt>
   45394:	ldr	r0, [r4, #20]
   45398:	ldr	r2, [r4, #44]	; 0x2c
   4539c:	mov	r1, #0
   453a0:	add	r0, r0, r7
   453a4:	str	r0, [r4, #20]
   453a8:	mov	r0, r4
   453ac:	blx	r2
   453b0:	ldr	r1, [r4, #16]
   453b4:	ldr	r0, [r4, #20]
   453b8:	sub	r6, r6, r7
   453bc:	sub	r7, r1, r0
   453c0:	cmp	r6, r7
   453c4:	bhi	45388 <flatcc_json_printer_struct_vector_field@@Base+0x11c>
   453c8:	mov	r1, #32
   453cc:	mov	r2, r6
   453d0:	bl	14ef0 <memset@plt>
   453d4:	ldr	r0, [r4, #20]
   453d8:	add	r0, r0, r6
   453dc:	str	r0, [r4, #20]
   453e0:	b	45404 <flatcc_json_printer_struct_vector_field@@Base+0x198>
   453e4:	ldr	r1, [r4, #16]
   453e8:	cmp	r0, r1
   453ec:	bcc	45404 <flatcc_json_printer_struct_vector_field@@Base+0x198>
   453f0:	ldr	r2, [r4, #44]	; 0x2c
   453f4:	mov	r0, r4
   453f8:	mov	r1, #0
   453fc:	blx	r2
   45400:	ldr	r0, [r4, #20]
   45404:	add	r1, r0, #1
   45408:	ldr	r2, [fp, #16]
   4540c:	str	r1, [r4, #20]
   45410:	ldr	r1, [r4, #32]
   45414:	add	r1, r1, #1
   45418:	str	r1, [r4, #32]
   4541c:	mov	r1, #123	; 0x7b
   45420:	strb	r1, [r0]
   45424:	mov	r0, r4
   45428:	mov	r1, r9
   4542c:	blx	r2
   45430:	ldrb	r1, [r4, #25]
   45434:	ldr	r0, [r4, #20]
   45438:	cmp	r1, #0
   4543c:	beq	454fc <flatcc_json_printer_struct_vector_field@@Base+0x290>
   45440:	add	r1, r0, #1
   45444:	str	r1, [r4, #20]
   45448:	mov	r1, #10
   4544c:	strb	r1, [r0]
   45450:	ldr	r0, [r4, #32]
   45454:	sub	r2, r0, #1
   45458:	str	r2, [r4, #32]
   4545c:	ldrb	r3, [r4, #25]
   45460:	ldr	r0, [r4, #20]
   45464:	ldr	r1, [r4, #16]
   45468:	mla	r7, r2, r3, r0
   4546c:	mul	r6, r2, r3
   45470:	cmp	r7, r1
   45474:	bls	454e4 <flatcc_json_printer_struct_vector_field@@Base+0x278>
   45478:	cmp	r0, r1
   4547c:	bcc	45498 <flatcc_json_printer_struct_vector_field@@Base+0x22c>
   45480:	ldr	r2, [r4, #44]	; 0x2c
   45484:	mov	r0, r4
   45488:	mov	r1, #0
   4548c:	blx	r2
   45490:	ldr	r1, [r4, #16]
   45494:	ldr	r0, [r4, #20]
   45498:	sub	r7, r1, r0
   4549c:	cmp	r7, r6
   454a0:	bcs	454e4 <flatcc_json_printer_struct_vector_field@@Base+0x278>
   454a4:	mov	r1, #32
   454a8:	mov	r2, r7
   454ac:	bl	14ef0 <memset@plt>
   454b0:	ldr	r0, [r4, #20]
   454b4:	ldr	r2, [r4, #44]	; 0x2c
   454b8:	mov	r1, #0
   454bc:	add	r0, r0, r7
   454c0:	str	r0, [r4, #20]
   454c4:	mov	r0, r4
   454c8:	blx	r2
   454cc:	ldr	r1, [r4, #16]
   454d0:	ldr	r0, [r4, #20]
   454d4:	sub	r6, r6, r7
   454d8:	sub	r7, r1, r0
   454dc:	cmp	r6, r7
   454e0:	bhi	454a4 <flatcc_json_printer_struct_vector_field@@Base+0x238>
   454e4:	mov	r1, #32
   454e8:	mov	r2, r6
   454ec:	bl	14ef0 <memset@plt>
   454f0:	ldr	r0, [r4, #20]
   454f4:	add	r0, r0, r6
   454f8:	str	r0, [r4, #20]
   454fc:	add	r1, r0, #1
   45500:	mov	sl, #125	; 0x7d
   45504:	subs	r5, r5, #1
   45508:	str	r1, [r4, #20]
   4550c:	strb	sl, [r0]
   45510:	beq	45724 <flatcc_json_printer_struct_vector_field@@Base+0x4b8>
   45514:	mov	r8, #10
   45518:	ldr	r0, [r4, #20]
   4551c:	add	r1, r0, #1
   45520:	str	r1, [r4, #20]
   45524:	mov	r1, #44	; 0x2c
   45528:	strb	r1, [r0]
   4552c:	ldr	r0, [fp, #12]
   45530:	ldrb	r1, [r4, #25]
   45534:	add	r9, r9, r0
   45538:	ldr	r0, [r4, #20]
   4553c:	cmp	r1, #0
   45540:	beq	455f8 <flatcc_json_printer_struct_vector_field@@Base+0x38c>
   45544:	add	r1, r0, #1
   45548:	str	r1, [r4, #20]
   4554c:	strb	r8, [r0]
   45550:	ldr	r0, [r4, #20]
   45554:	ldrb	r2, [r4, #25]
   45558:	ldr	r3, [r4, #32]
   4555c:	ldr	r1, [r4, #16]
   45560:	mla	r7, r3, r2, r0
   45564:	mul	r6, r3, r2
   45568:	cmp	r7, r1
   4556c:	bls	455dc <flatcc_json_printer_struct_vector_field@@Base+0x370>
   45570:	cmp	r0, r1
   45574:	bcc	45590 <flatcc_json_printer_struct_vector_field@@Base+0x324>
   45578:	ldr	r2, [r4, #44]	; 0x2c
   4557c:	mov	r0, r4
   45580:	mov	r1, #0
   45584:	blx	r2
   45588:	ldr	r1, [r4, #16]
   4558c:	ldr	r0, [r4, #20]
   45590:	sub	r7, r1, r0
   45594:	cmp	r7, r6
   45598:	bcs	455dc <flatcc_json_printer_struct_vector_field@@Base+0x370>
   4559c:	mov	r1, #32
   455a0:	mov	r2, r7
   455a4:	bl	14ef0 <memset@plt>
   455a8:	ldr	r0, [r4, #20]
   455ac:	ldr	r2, [r4, #44]	; 0x2c
   455b0:	mov	r1, #0
   455b4:	add	r0, r0, r7
   455b8:	str	r0, [r4, #20]
   455bc:	mov	r0, r4
   455c0:	blx	r2
   455c4:	ldr	r1, [r4, #16]
   455c8:	ldr	r0, [r4, #20]
   455cc:	sub	r6, r6, r7
   455d0:	sub	r7, r1, r0
   455d4:	cmp	r6, r7
   455d8:	bhi	4559c <flatcc_json_printer_struct_vector_field@@Base+0x330>
   455dc:	mov	r1, #32
   455e0:	mov	r2, r6
   455e4:	bl	14ef0 <memset@plt>
   455e8:	ldr	r0, [r4, #20]
   455ec:	add	r0, r0, r6
   455f0:	str	r0, [r4, #20]
   455f4:	b	45618 <flatcc_json_printer_struct_vector_field@@Base+0x3ac>
   455f8:	ldr	r1, [r4, #16]
   455fc:	cmp	r0, r1
   45600:	bcc	45618 <flatcc_json_printer_struct_vector_field@@Base+0x3ac>
   45604:	ldr	r2, [r4, #44]	; 0x2c
   45608:	mov	r0, r4
   4560c:	mov	r1, #0
   45610:	blx	r2
   45614:	ldr	r0, [r4, #20]
   45618:	add	r1, r0, #1
   4561c:	ldr	r2, [fp, #16]
   45620:	sub	r5, r5, #1
   45624:	str	r1, [r4, #20]
   45628:	ldr	r1, [r4, #32]
   4562c:	add	r1, r1, #1
   45630:	str	r1, [r4, #32]
   45634:	mov	r1, #123	; 0x7b
   45638:	strb	r1, [r0]
   4563c:	mov	r0, r4
   45640:	mov	r1, r9
   45644:	blx	r2
   45648:	ldrb	r1, [r4, #25]
   4564c:	ldr	r0, [r4, #20]
   45650:	cmp	r1, #0
   45654:	beq	45710 <flatcc_json_printer_struct_vector_field@@Base+0x4a4>
   45658:	add	r1, r0, #1
   4565c:	str	r1, [r4, #20]
   45660:	strb	r8, [r0]
   45664:	ldr	r0, [r4, #32]
   45668:	sub	r2, r0, #1
   4566c:	str	r2, [r4, #32]
   45670:	ldrb	r3, [r4, #25]
   45674:	ldr	r0, [r4, #20]
   45678:	ldr	r1, [r4, #16]
   4567c:	mla	r7, r2, r3, r0
   45680:	mul	r6, r2, r3
   45684:	cmp	r7, r1
   45688:	bls	456f8 <flatcc_json_printer_struct_vector_field@@Base+0x48c>
   4568c:	cmp	r0, r1
   45690:	bcc	456ac <flatcc_json_printer_struct_vector_field@@Base+0x440>
   45694:	ldr	r2, [r4, #44]	; 0x2c
   45698:	mov	r0, r4
   4569c:	mov	r1, #0
   456a0:	blx	r2
   456a4:	ldr	r1, [r4, #16]
   456a8:	ldr	r0, [r4, #20]
   456ac:	sub	r7, r1, r0
   456b0:	cmp	r7, r6
   456b4:	bcs	456f8 <flatcc_json_printer_struct_vector_field@@Base+0x48c>
   456b8:	mov	r1, #32
   456bc:	mov	r2, r7
   456c0:	bl	14ef0 <memset@plt>
   456c4:	ldr	r0, [r4, #20]
   456c8:	ldr	r2, [r4, #44]	; 0x2c
   456cc:	mov	r1, #0
   456d0:	add	r0, r0, r7
   456d4:	str	r0, [r4, #20]
   456d8:	mov	r0, r4
   456dc:	blx	r2
   456e0:	ldr	r1, [r4, #16]
   456e4:	ldr	r0, [r4, #20]
   456e8:	sub	r6, r6, r7
   456ec:	sub	r7, r1, r0
   456f0:	cmp	r6, r7
   456f4:	bhi	456b8 <flatcc_json_printer_struct_vector_field@@Base+0x44c>
   456f8:	mov	r1, #32
   456fc:	mov	r2, r6
   45700:	bl	14ef0 <memset@plt>
   45704:	ldr	r0, [r4, #20]
   45708:	add	r0, r0, r6
   4570c:	str	r0, [r4, #20]
   45710:	add	r1, r0, #1
   45714:	cmp	r5, #0
   45718:	str	r1, [r4, #20]
   4571c:	strb	sl, [r0]
   45720:	bne	45518 <flatcc_json_printer_struct_vector_field@@Base+0x2ac>
   45724:	ldrb	r1, [r4, #25]
   45728:	ldr	r0, [r4, #20]
   4572c:	cmp	r1, #0
   45730:	beq	457f0 <flatcc_json_printer_struct_vector_field@@Base+0x584>
   45734:	add	r1, r0, #1
   45738:	str	r1, [r4, #20]
   4573c:	mov	r1, #10
   45740:	strb	r1, [r0]
   45744:	ldr	r0, [r4, #32]
   45748:	sub	r2, r0, #1
   4574c:	str	r2, [r4, #32]
   45750:	ldrb	r3, [r4, #25]
   45754:	ldr	r0, [r4, #20]
   45758:	ldr	r1, [r4, #16]
   4575c:	mla	r7, r2, r3, r0
   45760:	mul	r5, r2, r3
   45764:	cmp	r7, r1
   45768:	bls	457d8 <flatcc_json_printer_struct_vector_field@@Base+0x56c>
   4576c:	cmp	r0, r1
   45770:	bcc	4578c <flatcc_json_printer_struct_vector_field@@Base+0x520>
   45774:	ldr	r2, [r4, #44]	; 0x2c
   45778:	mov	r0, r4
   4577c:	mov	r1, #0
   45780:	blx	r2
   45784:	ldr	r1, [r4, #16]
   45788:	ldr	r0, [r4, #20]
   4578c:	sub	r6, r1, r0
   45790:	cmp	r6, r5
   45794:	bcs	457d8 <flatcc_json_printer_struct_vector_field@@Base+0x56c>
   45798:	mov	r1, #32
   4579c:	mov	r2, r6
   457a0:	bl	14ef0 <memset@plt>
   457a4:	ldr	r0, [r4, #20]
   457a8:	ldr	r2, [r4, #44]	; 0x2c
   457ac:	mov	r1, #0
   457b0:	add	r0, r0, r6
   457b4:	str	r0, [r4, #20]
   457b8:	mov	r0, r4
   457bc:	blx	r2
   457c0:	ldr	r1, [r4, #16]
   457c4:	ldr	r0, [r4, #20]
   457c8:	sub	r5, r5, r6
   457cc:	sub	r6, r1, r0
   457d0:	cmp	r5, r6
   457d4:	bhi	45798 <flatcc_json_printer_struct_vector_field@@Base+0x52c>
   457d8:	mov	r1, #32
   457dc:	mov	r2, r5
   457e0:	bl	14ef0 <memset@plt>
   457e4:	ldr	r0, [r4, #20]
   457e8:	add	r0, r0, r5
   457ec:	str	r0, [r4, #20]
   457f0:	add	r1, r0, #1
   457f4:	str	r1, [r4, #20]
   457f8:	mov	r1, #93	; 0x5d
   457fc:	strb	r1, [r0]
   45800:	sub	sp, fp, #28
   45804:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00045808 <flatcc_json_printer_string_vector_field@@Base>:
   45808:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4580c:	add	fp, sp, #28
   45810:	sub	sp, sp, #4
   45814:	mov	r4, r0
   45818:	mov	r0, #4
   4581c:	add	r0, r0, r2, lsl #1
   45820:	ldr	r2, [r1, #8]
   45824:	cmp	r0, r2
   45828:	bge	45848 <flatcc_json_printer_string_vector_field@@Base+0x40>
   4582c:	ldr	r2, [r1, #4]
   45830:	add	r0, r2, r0
   45834:	ldrh	r0, [r0]
   45838:	cmp	r0, #0
   4583c:	ldrne	r2, [r1]
   45840:	addsne	r5, r2, r0
   45844:	bne	45850 <flatcc_json_printer_string_vector_field@@Base+0x48>
   45848:	sub	sp, fp, #28
   4584c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   45850:	ldr	r0, [r1, #16]
   45854:	ldr	r2, [fp, #8]
   45858:	add	r7, r0, #1
   4585c:	cmp	r0, #0
   45860:	str	r7, [r1, #16]
   45864:	ldrne	r0, [r4, #20]
   45868:	addne	r1, r0, #1
   4586c:	strne	r1, [r4, #20]
   45870:	movne	r1, #44	; 0x2c
   45874:	strbne	r1, [r0]
   45878:	mov	r1, r3
   4587c:	ldr	r0, [r5]
   45880:	ldr	r8, [r5, r0]!
   45884:	mov	r0, r4
   45888:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   4588c:	ldr	r1, [r4, #32]
   45890:	ldr	r0, [r4, #20]
   45894:	cmp	r8, #0
   45898:	add	r1, r1, #1
   4589c:	str	r1, [r4, #32]
   458a0:	add	r1, r0, #1
   458a4:	str	r1, [r4, #20]
   458a8:	mov	r1, #91	; 0x5b
   458ac:	strb	r1, [r0]
   458b0:	beq	45adc <flatcc_json_printer_string_vector_field@@Base+0x2d4>
   458b4:	ldrb	r1, [r4, #25]
   458b8:	ldr	r0, [r4, #20]
   458bc:	add	r9, r5, #4
   458c0:	cmp	r1, #0
   458c4:	beq	45980 <flatcc_json_printer_string_vector_field@@Base+0x178>
   458c8:	add	r1, r0, #1
   458cc:	str	r1, [r4, #20]
   458d0:	mov	r1, #10
   458d4:	strb	r1, [r0]
   458d8:	ldr	r0, [r4, #20]
   458dc:	ldrb	r2, [r4, #25]
   458e0:	ldr	r3, [r4, #32]
   458e4:	ldr	r1, [r4, #16]
   458e8:	mla	r7, r3, r2, r0
   458ec:	mul	r5, r3, r2
   458f0:	cmp	r7, r1
   458f4:	bls	45964 <flatcc_json_printer_string_vector_field@@Base+0x15c>
   458f8:	cmp	r0, r1
   458fc:	bcc	45918 <flatcc_json_printer_string_vector_field@@Base+0x110>
   45900:	ldr	r2, [r4, #44]	; 0x2c
   45904:	mov	r0, r4
   45908:	mov	r1, #0
   4590c:	blx	r2
   45910:	ldr	r1, [r4, #16]
   45914:	ldr	r0, [r4, #20]
   45918:	sub	r6, r1, r0
   4591c:	cmp	r6, r5
   45920:	bcs	45964 <flatcc_json_printer_string_vector_field@@Base+0x15c>
   45924:	mov	r1, #32
   45928:	mov	r2, r6
   4592c:	bl	14ef0 <memset@plt>
   45930:	ldr	r0, [r4, #20]
   45934:	ldr	r2, [r4, #44]	; 0x2c
   45938:	mov	r1, #0
   4593c:	add	r0, r0, r6
   45940:	str	r0, [r4, #20]
   45944:	mov	r0, r4
   45948:	blx	r2
   4594c:	ldr	r1, [r4, #16]
   45950:	ldr	r0, [r4, #20]
   45954:	sub	r5, r5, r6
   45958:	sub	r6, r1, r0
   4595c:	cmp	r5, r6
   45960:	bhi	45924 <flatcc_json_printer_string_vector_field@@Base+0x11c>
   45964:	mov	r1, #32
   45968:	mov	r2, r5
   4596c:	bl	14ef0 <memset@plt>
   45970:	ldr	r0, [r4, #20]
   45974:	add	r0, r0, r5
   45978:	str	r0, [r4, #20]
   4597c:	b	4599c <flatcc_json_printer_string_vector_field@@Base+0x194>
   45980:	ldr	r1, [r4, #16]
   45984:	cmp	r0, r1
   45988:	bcc	4599c <flatcc_json_printer_string_vector_field@@Base+0x194>
   4598c:	ldr	r2, [r4, #44]	; 0x2c
   45990:	mov	r0, r4
   45994:	mov	r1, #0
   45998:	blx	r2
   4599c:	ldr	r0, [r9]
   459a0:	mov	r1, r9
   459a4:	ldr	r2, [r1, r0]!
   459a8:	mov	r0, r4
   459ac:	add	r1, r1, #4
   459b0:	bl	3c11c <flatcc_json_printer_string@@Base+0x4>
   459b4:	subs	r7, r8, #1
   459b8:	beq	45adc <flatcc_json_printer_string_vector_field@@Base+0x2d4>
   459bc:	mov	r8, #44	; 0x2c
   459c0:	mov	sl, #10
   459c4:	ldr	r0, [r4, #20]
   459c8:	add	r9, r9, #4
   459cc:	sub	r7, r7, #1
   459d0:	add	r1, r0, #1
   459d4:	str	r1, [r4, #20]
   459d8:	strb	r8, [r0]
   459dc:	ldrb	r1, [r4, #25]
   459e0:	ldr	r0, [r4, #20]
   459e4:	cmp	r1, #0
   459e8:	beq	45aa0 <flatcc_json_printer_string_vector_field@@Base+0x298>
   459ec:	add	r1, r0, #1
   459f0:	str	r1, [r4, #20]
   459f4:	strb	sl, [r0]
   459f8:	ldr	r0, [r4, #20]
   459fc:	ldrb	r2, [r4, #25]
   45a00:	ldr	r3, [r4, #32]
   45a04:	ldr	r1, [r4, #16]
   45a08:	mla	r6, r3, r2, r0
   45a0c:	mul	r5, r3, r2
   45a10:	cmp	r6, r1
   45a14:	bls	45a84 <flatcc_json_printer_string_vector_field@@Base+0x27c>
   45a18:	cmp	r0, r1
   45a1c:	bcc	45a38 <flatcc_json_printer_string_vector_field@@Base+0x230>
   45a20:	ldr	r2, [r4, #44]	; 0x2c
   45a24:	mov	r0, r4
   45a28:	mov	r1, #0
   45a2c:	blx	r2
   45a30:	ldr	r1, [r4, #16]
   45a34:	ldr	r0, [r4, #20]
   45a38:	sub	r6, r1, r0
   45a3c:	cmp	r6, r5
   45a40:	bcs	45a84 <flatcc_json_printer_string_vector_field@@Base+0x27c>
   45a44:	mov	r1, #32
   45a48:	mov	r2, r6
   45a4c:	bl	14ef0 <memset@plt>
   45a50:	ldr	r0, [r4, #20]
   45a54:	ldr	r2, [r4, #44]	; 0x2c
   45a58:	mov	r1, #0
   45a5c:	add	r0, r0, r6
   45a60:	str	r0, [r4, #20]
   45a64:	mov	r0, r4
   45a68:	blx	r2
   45a6c:	ldr	r1, [r4, #16]
   45a70:	ldr	r0, [r4, #20]
   45a74:	sub	r5, r5, r6
   45a78:	sub	r6, r1, r0
   45a7c:	cmp	r5, r6
   45a80:	bhi	45a44 <flatcc_json_printer_string_vector_field@@Base+0x23c>
   45a84:	mov	r1, #32
   45a88:	mov	r2, r5
   45a8c:	bl	14ef0 <memset@plt>
   45a90:	ldr	r0, [r4, #20]
   45a94:	add	r0, r0, r5
   45a98:	str	r0, [r4, #20]
   45a9c:	b	45abc <flatcc_json_printer_string_vector_field@@Base+0x2b4>
   45aa0:	ldr	r1, [r4, #16]
   45aa4:	cmp	r0, r1
   45aa8:	bcc	45abc <flatcc_json_printer_string_vector_field@@Base+0x2b4>
   45aac:	ldr	r2, [r4, #44]	; 0x2c
   45ab0:	mov	r0, r4
   45ab4:	mov	r1, #0
   45ab8:	blx	r2
   45abc:	ldr	r0, [r9]
   45ac0:	mov	r1, r9
   45ac4:	ldr	r2, [r1, r0]!
   45ac8:	mov	r0, r4
   45acc:	add	r1, r1, #4
   45ad0:	bl	3c11c <flatcc_json_printer_string@@Base+0x4>
   45ad4:	cmp	r7, #0
   45ad8:	bne	459c4 <flatcc_json_printer_string_vector_field@@Base+0x1bc>
   45adc:	ldrb	r1, [r4, #25]
   45ae0:	ldr	r0, [r4, #20]
   45ae4:	cmp	r1, #0
   45ae8:	beq	45ba8 <flatcc_json_printer_string_vector_field@@Base+0x3a0>
   45aec:	add	r1, r0, #1
   45af0:	str	r1, [r4, #20]
   45af4:	mov	r1, #10
   45af8:	strb	r1, [r0]
   45afc:	ldr	r0, [r4, #32]
   45b00:	sub	r2, r0, #1
   45b04:	str	r2, [r4, #32]
   45b08:	ldrb	r3, [r4, #25]
   45b0c:	ldr	r0, [r4, #20]
   45b10:	ldr	r1, [r4, #16]
   45b14:	mla	r7, r2, r3, r0
   45b18:	mul	r5, r2, r3
   45b1c:	cmp	r7, r1
   45b20:	bls	45b90 <flatcc_json_printer_string_vector_field@@Base+0x388>
   45b24:	cmp	r0, r1
   45b28:	bcc	45b44 <flatcc_json_printer_string_vector_field@@Base+0x33c>
   45b2c:	ldr	r2, [r4, #44]	; 0x2c
   45b30:	mov	r0, r4
   45b34:	mov	r1, #0
   45b38:	blx	r2
   45b3c:	ldr	r1, [r4, #16]
   45b40:	ldr	r0, [r4, #20]
   45b44:	sub	r6, r1, r0
   45b48:	cmp	r6, r5
   45b4c:	bcs	45b90 <flatcc_json_printer_string_vector_field@@Base+0x388>
   45b50:	mov	r1, #32
   45b54:	mov	r2, r6
   45b58:	bl	14ef0 <memset@plt>
   45b5c:	ldr	r0, [r4, #20]
   45b60:	ldr	r2, [r4, #44]	; 0x2c
   45b64:	mov	r1, #0
   45b68:	add	r0, r0, r6
   45b6c:	str	r0, [r4, #20]
   45b70:	mov	r0, r4
   45b74:	blx	r2
   45b78:	ldr	r1, [r4, #16]
   45b7c:	ldr	r0, [r4, #20]
   45b80:	sub	r5, r5, r6
   45b84:	sub	r6, r1, r0
   45b88:	cmp	r5, r6
   45b8c:	bhi	45b50 <flatcc_json_printer_string_vector_field@@Base+0x348>
   45b90:	mov	r1, #32
   45b94:	mov	r2, r5
   45b98:	bl	14ef0 <memset@plt>
   45b9c:	ldr	r0, [r4, #20]
   45ba0:	add	r0, r0, r5
   45ba4:	str	r0, [r4, #20]
   45ba8:	add	r1, r0, #1
   45bac:	str	r1, [r4, #20]
   45bb0:	mov	r1, #93	; 0x5d
   45bb4:	strb	r1, [r0]
   45bb8:	sub	sp, fp, #28
   45bbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00045bc0 <flatcc_json_printer_table_vector_field@@Base>:
   45bc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   45bc4:	add	fp, sp, #28
   45bc8:	sub	sp, sp, #20
   45bcc:	mov	sl, r1
   45bd0:	ldr	r1, [r1, #8]
   45bd4:	mov	r4, r0
   45bd8:	mov	r0, #4
   45bdc:	add	r0, r0, r2, lsl #1
   45be0:	cmp	r0, r1
   45be4:	bge	45c04 <flatcc_json_printer_table_vector_field@@Base+0x44>
   45be8:	ldr	r1, [sl, #4]
   45bec:	add	r0, r1, r0
   45bf0:	ldrh	r0, [r0]
   45bf4:	cmp	r0, #0
   45bf8:	ldrne	r1, [sl]
   45bfc:	addsne	r5, r1, r0
   45c00:	bne	45c0c <flatcc_json_printer_table_vector_field@@Base+0x4c>
   45c04:	sub	sp, fp, #28
   45c08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   45c0c:	ldr	r0, [sl, #16]
   45c10:	ldr	r2, [fp, #8]
   45c14:	add	r1, r0, #1
   45c18:	cmp	r0, #0
   45c1c:	str	r1, [sl, #16]
   45c20:	ldrne	r0, [r4, #20]
   45c24:	addne	r1, r0, #1
   45c28:	strne	r1, [r4, #20]
   45c2c:	movne	r1, #44	; 0x2c
   45c30:	strbne	r1, [r0]
   45c34:	mov	r1, r3
   45c38:	ldr	r0, [r5]
   45c3c:	ldr	r8, [r5, r0]!
   45c40:	mov	r0, r4
   45c44:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   45c48:	ldr	r1, [r4, #32]
   45c4c:	ldr	r0, [r4, #20]
   45c50:	cmp	r8, #0
   45c54:	add	r1, r1, #1
   45c58:	str	r1, [r4, #32]
   45c5c:	add	r1, r0, #1
   45c60:	str	r1, [r4, #20]
   45c64:	mov	r1, #91	; 0x5b
   45c68:	strb	r1, [r0]
   45c6c:	beq	45f74 <flatcc_json_printer_table_vector_field@@Base+0x3b4>
   45c70:	ldr	r0, [sl, #12]
   45c74:	ldr	r6, [fp, #12]
   45c78:	add	r5, r5, #4
   45c7c:	subs	r0, r0, #1
   45c80:	beq	45dc8 <flatcc_json_printer_table_vector_field@@Base+0x208>
   45c84:	ldr	r3, [r4, #32]
   45c88:	ldr	r2, [r4, #20]
   45c8c:	ldr	r1, [r5]
   45c90:	add	r3, r3, #1
   45c94:	add	r1, r5, r1
   45c98:	str	r3, [r4, #32]
   45c9c:	add	r3, r2, #1
   45ca0:	str	r3, [r4, #20]
   45ca4:	mov	r3, #123	; 0x7b
   45ca8:	strb	r3, [r2]
   45cac:	str	r0, [sp, #12]
   45cb0:	mov	r0, #0
   45cb4:	str	r0, [sp, #16]
   45cb8:	str	r1, [sp]
   45cbc:	ldr	r0, [r1]
   45cc0:	sub	r2, r1, r0
   45cc4:	str	r2, [sp, #4]
   45cc8:	ldrh	r0, [r1, -r0]
   45ccc:	mov	r1, sp
   45cd0:	str	r0, [sp, #8]
   45cd4:	mov	r0, r4
   45cd8:	blx	r6
   45cdc:	ldrb	r1, [r4, #25]
   45ce0:	ldr	r0, [r4, #20]
   45ce4:	cmp	r1, #0
   45ce8:	beq	45dac <flatcc_json_printer_table_vector_field@@Base+0x1ec>
   45cec:	add	r1, r0, #1
   45cf0:	str	r1, [r4, #20]
   45cf4:	mov	r1, #10
   45cf8:	strb	r1, [r0]
   45cfc:	ldr	r0, [r4, #32]
   45d00:	sub	r2, r0, #1
   45d04:	str	r2, [r4, #32]
   45d08:	ldrb	r3, [r4, #25]
   45d0c:	ldr	r0, [r4, #20]
   45d10:	ldr	r1, [r4, #16]
   45d14:	mla	r7, r2, r3, r0
   45d18:	mul	r6, r2, r3
   45d1c:	cmp	r7, r1
   45d20:	bls	45d90 <flatcc_json_printer_table_vector_field@@Base+0x1d0>
   45d24:	cmp	r0, r1
   45d28:	bcc	45d44 <flatcc_json_printer_table_vector_field@@Base+0x184>
   45d2c:	ldr	r2, [r4, #44]	; 0x2c
   45d30:	mov	r0, r4
   45d34:	mov	r1, #0
   45d38:	blx	r2
   45d3c:	ldr	r1, [r4, #16]
   45d40:	ldr	r0, [r4, #20]
   45d44:	sub	r7, r1, r0
   45d48:	cmp	r7, r6
   45d4c:	bcs	45d90 <flatcc_json_printer_table_vector_field@@Base+0x1d0>
   45d50:	mov	r1, #32
   45d54:	mov	r2, r7
   45d58:	bl	14ef0 <memset@plt>
   45d5c:	ldr	r0, [r4, #20]
   45d60:	ldr	r2, [r4, #44]	; 0x2c
   45d64:	mov	r1, #0
   45d68:	add	r0, r0, r7
   45d6c:	str	r0, [r4, #20]
   45d70:	mov	r0, r4
   45d74:	blx	r2
   45d78:	ldr	r1, [r4, #16]
   45d7c:	ldr	r0, [r4, #20]
   45d80:	sub	r6, r6, r7
   45d84:	sub	r7, r1, r0
   45d88:	cmp	r6, r7
   45d8c:	bhi	45d50 <flatcc_json_printer_table_vector_field@@Base+0x190>
   45d90:	mov	r1, #32
   45d94:	mov	r2, r6
   45d98:	bl	14ef0 <memset@plt>
   45d9c:	ldr	r0, [r4, #20]
   45da0:	add	r0, r0, r6
   45da4:	ldr	r6, [fp, #12]
   45da8:	str	r0, [r4, #20]
   45dac:	add	r1, r0, #1
   45db0:	str	r1, [r4, #20]
   45db4:	mov	r1, #125	; 0x7d
   45db8:	strb	r1, [r0]
   45dbc:	subs	r9, r8, #1
   45dc0:	bne	45de0 <flatcc_json_printer_table_vector_field@@Base+0x220>
   45dc4:	b	45f74 <flatcc_json_printer_table_vector_field@@Base+0x3b4>
   45dc8:	ldr	r0, [r4, #36]	; 0x24
   45dcc:	cmp	r0, #0
   45dd0:	moveq	r0, #2
   45dd4:	streq	r0, [r4, #36]	; 0x24
   45dd8:	subs	r9, r8, #1
   45ddc:	beq	45f74 <flatcc_json_printer_table_vector_field@@Base+0x3b4>
   45de0:	mov	r8, #44	; 0x2c
   45de4:	ldr	r0, [r4, #20]
   45de8:	sub	r9, r9, #1
   45dec:	add	r1, r0, #1
   45df0:	str	r1, [r4, #20]
   45df4:	strb	r8, [r0]
   45df8:	ldr	r0, [sl, #12]
   45dfc:	ldr	r1, [r5, #4]!
   45e00:	subs	r0, r0, #1
   45e04:	beq	45f24 <flatcc_json_printer_table_vector_field@@Base+0x364>
   45e08:	ldr	r3, [r4, #32]
   45e0c:	ldr	r2, [r4, #20]
   45e10:	add	r1, r5, r1
   45e14:	add	r3, r3, #1
   45e18:	str	r3, [r4, #32]
   45e1c:	add	r3, r2, #1
   45e20:	str	r3, [r4, #20]
   45e24:	mov	r3, #123	; 0x7b
   45e28:	strb	r3, [r2]
   45e2c:	str	r0, [sp, #12]
   45e30:	mov	r0, #0
   45e34:	str	r0, [sp, #16]
   45e38:	str	r1, [sp]
   45e3c:	ldr	r0, [r1]
   45e40:	sub	r2, r1, r0
   45e44:	str	r2, [sp, #4]
   45e48:	ldrh	r0, [r1, -r0]
   45e4c:	mov	r1, sp
   45e50:	str	r0, [sp, #8]
   45e54:	mov	r0, r4
   45e58:	blx	r6
   45e5c:	ldrb	r1, [r4, #25]
   45e60:	ldr	r0, [r4, #20]
   45e64:	cmp	r1, #0
   45e68:	beq	45f5c <flatcc_json_printer_table_vector_field@@Base+0x39c>
   45e6c:	add	r1, r0, #1
   45e70:	str	r1, [r4, #20]
   45e74:	mov	r1, #10
   45e78:	strb	r1, [r0]
   45e7c:	ldr	r0, [r4, #32]
   45e80:	sub	r2, r0, #1
   45e84:	str	r2, [r4, #32]
   45e88:	ldrb	r3, [r4, #25]
   45e8c:	ldr	r0, [r4, #20]
   45e90:	ldr	r1, [r4, #16]
   45e94:	mla	r6, r2, r3, r0
   45e98:	mul	r7, r2, r3
   45e9c:	cmp	r6, r1
   45ea0:	bls	45f40 <flatcc_json_printer_table_vector_field@@Base+0x380>
   45ea4:	cmp	r0, r1
   45ea8:	bcc	45ec4 <flatcc_json_printer_table_vector_field@@Base+0x304>
   45eac:	ldr	r2, [r4, #44]	; 0x2c
   45eb0:	mov	r0, r4
   45eb4:	mov	r1, #0
   45eb8:	blx	r2
   45ebc:	ldr	r1, [r4, #16]
   45ec0:	ldr	r0, [r4, #20]
   45ec4:	sub	r6, r1, r0
   45ec8:	cmp	r6, r7
   45ecc:	bcs	45f10 <flatcc_json_printer_table_vector_field@@Base+0x350>
   45ed0:	mov	r1, #32
   45ed4:	mov	r2, r6
   45ed8:	bl	14ef0 <memset@plt>
   45edc:	ldr	r0, [r4, #20]
   45ee0:	ldr	r2, [r4, #44]	; 0x2c
   45ee4:	mov	r1, #0
   45ee8:	add	r0, r0, r6
   45eec:	str	r0, [r4, #20]
   45ef0:	mov	r0, r4
   45ef4:	blx	r2
   45ef8:	ldr	r1, [r4, #16]
   45efc:	ldr	r0, [r4, #20]
   45f00:	sub	r7, r7, r6
   45f04:	sub	r6, r1, r0
   45f08:	cmp	r7, r6
   45f0c:	bhi	45ed0 <flatcc_json_printer_table_vector_field@@Base+0x310>
   45f10:	ldr	r6, [fp, #12]
   45f14:	mov	r1, #32
   45f18:	mov	r2, r7
   45f1c:	bl	14ef0 <memset@plt>
   45f20:	b	45f50 <flatcc_json_printer_table_vector_field@@Base+0x390>
   45f24:	ldr	r0, [r4, #36]	; 0x24
   45f28:	cmp	r0, #0
   45f2c:	moveq	r0, #2
   45f30:	streq	r0, [r4, #36]	; 0x24
   45f34:	cmp	r9, #0
   45f38:	bne	45de4 <flatcc_json_printer_table_vector_field@@Base+0x224>
   45f3c:	b	45f74 <flatcc_json_printer_table_vector_field@@Base+0x3b4>
   45f40:	mov	r1, #32
   45f44:	mov	r2, r7
   45f48:	bl	14ef0 <memset@plt>
   45f4c:	ldr	r6, [fp, #12]
   45f50:	ldr	r0, [r4, #20]
   45f54:	add	r0, r0, r7
   45f58:	str	r0, [r4, #20]
   45f5c:	add	r1, r0, #1
   45f60:	str	r1, [r4, #20]
   45f64:	mov	r1, #125	; 0x7d
   45f68:	strb	r1, [r0]
   45f6c:	cmp	r9, #0
   45f70:	bne	45de4 <flatcc_json_printer_table_vector_field@@Base+0x224>
   45f74:	ldrb	r1, [r4, #25]
   45f78:	ldr	r0, [r4, #20]
   45f7c:	cmp	r1, #0
   45f80:	beq	46040 <flatcc_json_printer_table_vector_field@@Base+0x480>
   45f84:	add	r1, r0, #1
   45f88:	str	r1, [r4, #20]
   45f8c:	mov	r1, #10
   45f90:	strb	r1, [r0]
   45f94:	ldr	r0, [r4, #32]
   45f98:	sub	r2, r0, #1
   45f9c:	str	r2, [r4, #32]
   45fa0:	ldrb	r3, [r4, #25]
   45fa4:	ldr	r0, [r4, #20]
   45fa8:	ldr	r1, [r4, #16]
   45fac:	mla	r7, r2, r3, r0
   45fb0:	mul	r5, r2, r3
   45fb4:	cmp	r7, r1
   45fb8:	bls	46028 <flatcc_json_printer_table_vector_field@@Base+0x468>
   45fbc:	cmp	r0, r1
   45fc0:	bcc	45fdc <flatcc_json_printer_table_vector_field@@Base+0x41c>
   45fc4:	ldr	r2, [r4, #44]	; 0x2c
   45fc8:	mov	r0, r4
   45fcc:	mov	r1, #0
   45fd0:	blx	r2
   45fd4:	ldr	r1, [r4, #16]
   45fd8:	ldr	r0, [r4, #20]
   45fdc:	sub	r6, r1, r0
   45fe0:	cmp	r6, r5
   45fe4:	bcs	46028 <flatcc_json_printer_table_vector_field@@Base+0x468>
   45fe8:	mov	r1, #32
   45fec:	mov	r2, r6
   45ff0:	bl	14ef0 <memset@plt>
   45ff4:	ldr	r0, [r4, #20]
   45ff8:	ldr	r2, [r4, #44]	; 0x2c
   45ffc:	mov	r1, #0
   46000:	add	r0, r0, r6
   46004:	str	r0, [r4, #20]
   46008:	mov	r0, r4
   4600c:	blx	r2
   46010:	ldr	r1, [r4, #16]
   46014:	ldr	r0, [r4, #20]
   46018:	sub	r5, r5, r6
   4601c:	sub	r6, r1, r0
   46020:	cmp	r5, r6
   46024:	bhi	45fe8 <flatcc_json_printer_table_vector_field@@Base+0x428>
   46028:	mov	r1, #32
   4602c:	mov	r2, r5
   46030:	bl	14ef0 <memset@plt>
   46034:	ldr	r0, [r4, #20]
   46038:	add	r0, r0, r5
   4603c:	str	r0, [r4, #20]
   46040:	add	r1, r0, #1
   46044:	str	r1, [r4, #20]
   46048:	mov	r1, #93	; 0x5d
   4604c:	strb	r1, [r0]
   46050:	sub	sp, fp, #28
   46054:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00046058 <flatcc_json_printer_union_vector_field@@Base>:
   46058:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4605c:	add	fp, sp, #28
   46060:	sub	sp, sp, #140	; 0x8c
   46064:	mov	r6, r1
   46068:	mov	r9, r0
   4606c:	sub	r1, r2, #1
   46070:	mov	r0, #4
   46074:	mov	r4, r3
   46078:	mov	r5, #0
   4607c:	mov	r8, #0
   46080:	str	r1, [sp, #8]
   46084:	add	r3, r0, r1, lsl #1
   46088:	ldr	r1, [r6, #8]
   4608c:	cmp	r3, r1
   46090:	bge	460b0 <flatcc_json_printer_union_vector_field@@Base+0x58>
   46094:	ldr	r7, [r6, #4]
   46098:	mov	r8, #0
   4609c:	add	r3, r7, r3
   460a0:	ldrh	r3, [r3]
   460a4:	cmp	r3, #0
   460a8:	ldrne	r7, [r6]
   460ac:	addne	r8, r7, r3
   460b0:	ldr	sl, [fp, #8]
   460b4:	add	r0, r0, r2, lsl #1
   460b8:	cmp	r0, r1
   460bc:	bge	460d8 <flatcc_json_printer_union_vector_field@@Base+0x80>
   460c0:	ldr	r1, [r6, #4]
   460c4:	add	r0, r1, r0
   460c8:	ldrh	r0, [r0]
   460cc:	cmp	r0, #0
   460d0:	ldrne	r1, [r6]
   460d4:	addne	r5, r1, r0
   460d8:	ldr	r0, [r6, #12]
   460dc:	cmp	sl, #101	; 0x65
   460e0:	str	r5, [sp, #16]
   460e4:	str	r0, [sp, #24]
   460e8:	bge	46400 <flatcc_json_printer_union_vector_field@@Base+0x3a8>
   460ec:	add	r5, sp, #32
   460f0:	mov	r1, r4
   460f4:	mov	r2, sl
   460f8:	str	r4, [sp, #12]
   460fc:	mov	r0, r5
   46100:	bl	14e60 <memcpy@plt>
   46104:	movw	r0, #29791	; 0x745f
   46108:	cmp	r8, #0
   4610c:	mov	r1, #101	; 0x65
   46110:	movt	r0, #28793	; 0x7079
   46114:	str	r0, [r5, sl]
   46118:	add	r0, r5, sl
   4611c:	ldr	r5, [sp, #16]
   46120:	strb	r1, [r0, #4]
   46124:	cmpne	r5, #0
   46128:	bne	46134 <flatcc_json_printer_union_vector_field@@Base+0xdc>
   4612c:	sub	sp, fp, #28
   46130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   46134:	ldr	r0, [fp, #12]
   46138:	ldr	r2, [sp, #8]
   4613c:	add	r1, sl, #5
   46140:	add	r3, sp, #32
   46144:	str	r1, [sp]
   46148:	mov	r1, r6
   4614c:	str	r0, [sp, #4]
   46150:	mov	r0, r9
   46154:	bl	42d0c <flatcc_json_printer_utype_enum_vector_field@@Base>
   46158:	ldr	r0, [r6, #16]
   4615c:	add	r7, r9, #20
   46160:	mov	r2, sl
   46164:	add	r1, r0, #1
   46168:	cmp	r0, #0
   4616c:	str	r1, [r6, #16]
   46170:	mov	r6, r5
   46174:	ldrne	r0, [r7]
   46178:	addne	r1, r0, #1
   4617c:	strne	r1, [r7]
   46180:	movne	r1, #44	; 0x2c
   46184:	strbne	r1, [r0]
   46188:	ldr	r1, [sp, #12]
   4618c:	ldr	r0, [r5]
   46190:	ldr	r5, [r8]
   46194:	ldr	r4, [r6, r0]!
   46198:	str	r0, [sp, #8]
   4619c:	mov	r0, r9
   461a0:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   461a4:	ldr	r1, [r9, #32]
   461a8:	ldr	r0, [r9, #20]
   461ac:	cmp	r4, #0
   461b0:	add	r1, r1, #1
   461b4:	str	r1, [r9, #32]
   461b8:	add	r1, r0, #1
   461bc:	str	r1, [r9, #20]
   461c0:	mov	r1, #91	; 0x5b
   461c4:	strb	r1, [r0]
   461c8:	beq	4631c <flatcc_json_printer_union_vector_field@@Base+0x2c4>
   461cc:	add	r5, r8, r5
   461d0:	ldr	r2, [fp, #16]
   461d4:	ldrb	r0, [r5, #4]
   461d8:	cmp	r0, #0
   461dc:	beq	46208 <flatcc_json_printer_union_vector_field@@Base+0x1b0>
   461e0:	add	r1, r6, #4
   461e4:	mov	r8, r2
   461e8:	str	r1, [sp, #20]
   461ec:	strb	r0, [sp, #28]
   461f0:	add	r1, sp, #20
   461f4:	mov	r0, r9
   461f8:	blx	r2
   461fc:	cmp	r4, #1
   46200:	bne	46260 <flatcc_json_printer_union_vector_field@@Base+0x208>
   46204:	b	4631c <flatcc_json_printer_union_vector_field@@Base+0x2c4>
   46208:	ldr	r0, [r7]
   4620c:	mov	r8, r2
   46210:	add	r1, r0, #1
   46214:	str	r1, [r7]
   46218:	mov	r1, #110	; 0x6e
   4621c:	strb	r1, [r0]
   46220:	ldr	r0, [r7]
   46224:	add	r1, r0, #1
   46228:	str	r1, [r7]
   4622c:	mov	r1, #117	; 0x75
   46230:	strb	r1, [r0]
   46234:	ldr	r0, [r7]
   46238:	add	r1, r0, #1
   4623c:	str	r1, [r7]
   46240:	mov	r1, #108	; 0x6c
   46244:	strb	r1, [r0]
   46248:	ldr	r0, [r7]
   4624c:	add	r2, r0, #1
   46250:	str	r2, [r7]
   46254:	strb	r1, [r0]
   46258:	cmp	r4, #1
   4625c:	beq	4631c <flatcc_json_printer_union_vector_field@@Base+0x2c4>
   46260:	ldr	r0, [sp, #16]
   46264:	ldr	r1, [sp, #8]
   46268:	add	r5, r5, #5
   4626c:	rsb	r4, r4, #1
   46270:	mov	sl, #44	; 0x2c
   46274:	add	r0, r0, r1
   46278:	add	r6, r0, #8
   4627c:	ldrb	r0, [r5]
   46280:	ldr	r1, [r7]
   46284:	add	r2, r1, #1
   46288:	cmp	r0, #0
   4628c:	str	r2, [r7]
   46290:	strb	sl, [r1]
   46294:	beq	462c0 <flatcc_json_printer_union_vector_field@@Base+0x268>
   46298:	str	r6, [sp, #20]
   4629c:	strb	r0, [sp, #28]
   462a0:	mov	r0, r9
   462a4:	add	r1, sp, #20
   462a8:	blx	r8
   462ac:	add	r6, r6, #4
   462b0:	add	r5, r5, #1
   462b4:	adds	r4, r4, #1
   462b8:	bne	4627c <flatcc_json_printer_union_vector_field@@Base+0x224>
   462bc:	b	4631c <flatcc_json_printer_union_vector_field@@Base+0x2c4>
   462c0:	ldr	r0, [r7]
   462c4:	mov	r2, #108	; 0x6c
   462c8:	add	r1, r0, #1
   462cc:	str	r1, [r7]
   462d0:	mov	r1, #110	; 0x6e
   462d4:	strb	r1, [r0]
   462d8:	ldr	r0, [r7]
   462dc:	add	r1, r0, #1
   462e0:	str	r1, [r7]
   462e4:	mov	r1, #117	; 0x75
   462e8:	strb	r1, [r0]
   462ec:	ldr	r0, [r7]
   462f0:	add	r1, r0, #1
   462f4:	str	r1, [r7]
   462f8:	strb	r2, [r0]
   462fc:	ldr	r0, [r7]
   46300:	add	r1, r0, #1
   46304:	str	r1, [r7]
   46308:	strb	r2, [r0]
   4630c:	add	r6, r6, #4
   46310:	add	r5, r5, #1
   46314:	adds	r4, r4, #1
   46318:	bne	4627c <flatcc_json_printer_union_vector_field@@Base+0x224>
   4631c:	ldrb	r1, [r9, #25]
   46320:	ldr	r0, [r9, #20]
   46324:	cmp	r1, #0
   46328:	beq	463e8 <flatcc_json_printer_union_vector_field@@Base+0x390>
   4632c:	add	r1, r0, #1
   46330:	str	r1, [r9, #20]
   46334:	mov	r1, #10
   46338:	strb	r1, [r0]
   4633c:	ldr	r0, [r9, #32]
   46340:	sub	r2, r0, #1
   46344:	str	r2, [r9, #32]
   46348:	ldrb	r3, [r9, #25]
   4634c:	ldr	r0, [r9, #20]
   46350:	ldr	r1, [r9, #16]
   46354:	mla	r6, r2, r3, r0
   46358:	mul	r5, r2, r3
   4635c:	cmp	r6, r1
   46360:	bls	463d0 <flatcc_json_printer_union_vector_field@@Base+0x378>
   46364:	cmp	r0, r1
   46368:	bcc	46384 <flatcc_json_printer_union_vector_field@@Base+0x32c>
   4636c:	ldr	r2, [r9, #44]	; 0x2c
   46370:	mov	r0, r9
   46374:	mov	r1, #0
   46378:	blx	r2
   4637c:	ldr	r1, [r9, #16]
   46380:	ldr	r0, [r9, #20]
   46384:	sub	r6, r1, r0
   46388:	cmp	r6, r5
   4638c:	bcs	463d0 <flatcc_json_printer_union_vector_field@@Base+0x378>
   46390:	mov	r1, #32
   46394:	mov	r2, r6
   46398:	bl	14ef0 <memset@plt>
   4639c:	ldr	r0, [r9, #20]
   463a0:	ldr	r2, [r9, #44]	; 0x2c
   463a4:	mov	r1, #0
   463a8:	add	r0, r0, r6
   463ac:	str	r0, [r9, #20]
   463b0:	mov	r0, r9
   463b4:	blx	r2
   463b8:	ldr	r1, [r9, #16]
   463bc:	ldr	r0, [r9, #20]
   463c0:	sub	r5, r5, r6
   463c4:	sub	r6, r1, r0
   463c8:	cmp	r5, r6
   463cc:	bhi	46390 <flatcc_json_printer_union_vector_field@@Base+0x338>
   463d0:	mov	r1, #32
   463d4:	mov	r2, r5
   463d8:	bl	14ef0 <memset@plt>
   463dc:	ldr	r0, [r7]
   463e0:	add	r0, r0, r5
   463e4:	str	r0, [r7]
   463e8:	add	r1, r0, #1
   463ec:	str	r1, [r7]
   463f0:	mov	r1, #93	; 0x5d
   463f4:	strb	r1, [r0]
   463f8:	sub	sp, fp, #28
   463fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   46400:	ldr	r0, [r9, #36]	; 0x24
   46404:	movw	r1, #60315	; 0xeb9b
   46408:	movw	r3, #60390	; 0xebe6
   4640c:	movw	r2, #843	; 0x34b
   46410:	movt	r1, #4
   46414:	movt	r3, #4
   46418:	cmp	r0, #0
   4641c:	moveq	r0, #1
   46420:	streq	r0, [r9, #36]	; 0x24
   46424:	movw	r0, #60288	; 0xeb80
   46428:	movt	r0, #4
   4642c:	bl	14f44 <__assert_fail@plt>

00046430 <flatcc_json_printer_table_field@@Base>:
   46430:	push	{r4, r5, r6, sl, fp, lr}
   46434:	add	fp, sp, #16
   46438:	sub	sp, sp, #24
   4643c:	mov	r5, r1
   46440:	ldr	r1, [r1, #8]
   46444:	mov	r4, r0
   46448:	mov	r0, #4
   4644c:	add	r0, r0, r2, lsl #1
   46450:	cmp	r0, r1
   46454:	bge	46474 <flatcc_json_printer_table_field@@Base+0x44>
   46458:	ldr	r1, [r5, #4]
   4645c:	add	r0, r1, r0
   46460:	ldrh	r0, [r0]
   46464:	cmp	r0, #0
   46468:	ldrne	r1, [r5]
   4646c:	addsne	r6, r1, r0
   46470:	bne	4647c <flatcc_json_printer_table_field@@Base+0x4c>
   46474:	sub	sp, fp, #16
   46478:	pop	{r4, r5, r6, sl, fp, pc}
   4647c:	ldr	r0, [r5, #16]
   46480:	ldr	r2, [fp, #8]
   46484:	add	r1, r0, #1
   46488:	cmp	r0, #0
   4648c:	str	r1, [r5, #16]
   46490:	ldrne	r0, [r4, #20]
   46494:	addne	r1, r0, #1
   46498:	strne	r1, [r4, #20]
   4649c:	movne	r1, #44	; 0x2c
   464a0:	strbne	r1, [r0]
   464a4:	mov	r0, r4
   464a8:	mov	r1, r3
   464ac:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   464b0:	ldr	r0, [r5, #12]
   464b4:	subs	r0, r0, #1
   464b8:	beq	465fc <flatcc_json_printer_table_field@@Base+0x1cc>
   464bc:	ldr	r1, [r6]
   464c0:	ldr	r3, [r4, #20]
   464c4:	ldr	r2, [fp, #12]
   464c8:	add	r1, r6, r1
   464cc:	ldr	r6, [r4, #32]
   464d0:	add	r6, r6, #1
   464d4:	str	r6, [r4, #32]
   464d8:	add	r6, r3, #1
   464dc:	str	r6, [r4, #20]
   464e0:	mov	r6, #123	; 0x7b
   464e4:	strb	r6, [r3]
   464e8:	str	r0, [sp, #16]
   464ec:	mov	r0, #0
   464f0:	str	r0, [sp, #20]
   464f4:	str	r1, [sp, #4]
   464f8:	ldr	r0, [r1]
   464fc:	sub	r3, r1, r0
   46500:	str	r3, [sp, #8]
   46504:	ldrh	r0, [r1, -r0]
   46508:	add	r1, sp, #4
   4650c:	str	r0, [sp, #12]
   46510:	mov	r0, r4
   46514:	blx	r2
   46518:	ldrb	r1, [r4, #25]
   4651c:	ldr	r0, [r4, #20]
   46520:	cmp	r1, #0
   46524:	beq	465e4 <flatcc_json_printer_table_field@@Base+0x1b4>
   46528:	add	r1, r0, #1
   4652c:	str	r1, [r4, #20]
   46530:	mov	r1, #10
   46534:	strb	r1, [r0]
   46538:	ldr	r0, [r4, #32]
   4653c:	sub	r2, r0, #1
   46540:	str	r2, [r4, #32]
   46544:	ldrb	r3, [r4, #25]
   46548:	ldr	r0, [r4, #20]
   4654c:	ldr	r1, [r4, #16]
   46550:	mla	r6, r2, r3, r0
   46554:	mul	r5, r2, r3
   46558:	cmp	r6, r1
   4655c:	bls	465cc <flatcc_json_printer_table_field@@Base+0x19c>
   46560:	cmp	r0, r1
   46564:	bcc	46580 <flatcc_json_printer_table_field@@Base+0x150>
   46568:	ldr	r2, [r4, #44]	; 0x2c
   4656c:	mov	r0, r4
   46570:	mov	r1, #0
   46574:	blx	r2
   46578:	ldr	r1, [r4, #16]
   4657c:	ldr	r0, [r4, #20]
   46580:	sub	r6, r1, r0
   46584:	cmp	r6, r5
   46588:	bcs	465cc <flatcc_json_printer_table_field@@Base+0x19c>
   4658c:	mov	r1, #32
   46590:	mov	r2, r6
   46594:	bl	14ef0 <memset@plt>
   46598:	ldr	r0, [r4, #20]
   4659c:	ldr	r2, [r4, #44]	; 0x2c
   465a0:	mov	r1, #0
   465a4:	add	r0, r0, r6
   465a8:	str	r0, [r4, #20]
   465ac:	mov	r0, r4
   465b0:	blx	r2
   465b4:	ldr	r1, [r4, #16]
   465b8:	ldr	r0, [r4, #20]
   465bc:	sub	r5, r5, r6
   465c0:	sub	r6, r1, r0
   465c4:	cmp	r5, r6
   465c8:	bhi	4658c <flatcc_json_printer_table_field@@Base+0x15c>
   465cc:	mov	r1, #32
   465d0:	mov	r2, r5
   465d4:	bl	14ef0 <memset@plt>
   465d8:	ldr	r0, [r4, #20]
   465dc:	add	r0, r0, r5
   465e0:	str	r0, [r4, #20]
   465e4:	add	r1, r0, #1
   465e8:	str	r1, [r4, #20]
   465ec:	mov	r1, #125	; 0x7d
   465f0:	strb	r1, [r0]
   465f4:	sub	sp, fp, #16
   465f8:	pop	{r4, r5, r6, sl, fp, pc}
   465fc:	ldr	r0, [r4, #36]	; 0x24
   46600:	cmp	r0, #0
   46604:	bne	46474 <flatcc_json_printer_table_field@@Base+0x44>
   46608:	mov	r0, #2
   4660c:	str	r0, [r4, #36]	; 0x24
   46610:	sub	sp, fp, #16
   46614:	pop	{r4, r5, r6, sl, fp, pc}

00046618 <flatcc_json_printer_union_field@@Base>:
   46618:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4661c:	add	fp, sp, #28
   46620:	sub	sp, sp, #20
   46624:	mov	r9, r1
   46628:	mov	r4, r0
   4662c:	mov	r0, #2
   46630:	mov	r8, r3
   46634:	lsl	r1, r2, #1
   46638:	add	r3, r0, r2, lsl #1
   4663c:	ldr	r2, [r9, #8]
   46640:	mov	r0, #0
   46644:	cmp	r3, r2
   46648:	bge	46664 <flatcc_json_printer_union_field@@Base+0x4c>
   4664c:	ldr	r7, [r9, #4]
   46650:	add	r3, r7, r3
   46654:	ldrh	r3, [r3]
   46658:	cmp	r3, #0
   4665c:	ldrne	r0, [r9]
   46660:	addne	r0, r0, r3
   46664:	add	r1, r1, #4
   46668:	cmp	r1, r2
   4666c:	bge	46694 <flatcc_json_printer_union_field@@Base+0x7c>
   46670:	ldr	r2, [r9, #4]
   46674:	add	r1, r2, r1
   46678:	ldrh	r1, [r1]
   4667c:	cmp	r1, #0
   46680:	beq	46694 <flatcc_json_printer_union_field@@Base+0x7c>
   46684:	cmp	r0, #0
   46688:	ldrne	r2, [r9]
   4668c:	addsne	r2, r2, r1
   46690:	bne	4669c <flatcc_json_printer_union_field@@Base+0x84>
   46694:	sub	sp, fp, #28
   46698:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4669c:	ldrb	r6, [r0]
   466a0:	ldr	r0, [r9, #16]
   466a4:	ldr	r7, [fp, #8]
   466a8:	str	r2, [sp]
   466ac:	add	r1, r0, #1
   466b0:	cmp	r0, #0
   466b4:	str	r1, [r9, #16]
   466b8:	ldrne	r0, [r4, #20]
   466bc:	addne	r1, r0, #1
   466c0:	strne	r1, [r4, #20]
   466c4:	movne	r1, #44	; 0x2c
   466c8:	strbne	r1, [r0]
   466cc:	ldrb	r1, [r4, #25]
   466d0:	ldr	r0, [r4, #20]
   466d4:	cmp	r1, #0
   466d8:	beq	46794 <flatcc_json_printer_union_field@@Base+0x17c>
   466dc:	add	r1, r0, #1
   466e0:	mov	sl, r4
   466e4:	mov	r5, r6
   466e8:	str	r1, [r4, #20]
   466ec:	mov	r1, #10
   466f0:	strb	r1, [r0]
   466f4:	ldr	r1, [sl, #16]!
   466f8:	ldr	r0, [r4, #20]
   466fc:	ldrb	r2, [sl, #9]
   46700:	ldr	r3, [sl, #16]
   46704:	mla	r6, r3, r2, r0
   46708:	mul	r7, r3, r2
   4670c:	cmp	r6, r1
   46710:	bls	467bc <flatcc_json_printer_union_field@@Base+0x1a4>
   46714:	cmp	r0, r1
   46718:	bcc	46734 <flatcc_json_printer_union_field@@Base+0x11c>
   4671c:	ldr	r2, [r4, #44]	; 0x2c
   46720:	mov	r0, r4
   46724:	mov	r1, #0
   46728:	blx	r2
   4672c:	ldr	r1, [r4, #16]
   46730:	ldr	r0, [r4, #20]
   46734:	mov	r6, r5
   46738:	sub	r5, r1, r0
   4673c:	cmp	r5, r7
   46740:	bcs	46784 <flatcc_json_printer_union_field@@Base+0x16c>
   46744:	mov	r1, #32
   46748:	mov	r2, r5
   4674c:	bl	14ef0 <memset@plt>
   46750:	ldr	r0, [r4, #20]
   46754:	ldr	r2, [r4, #44]	; 0x2c
   46758:	mov	r1, #0
   4675c:	add	r0, r0, r5
   46760:	str	r0, [r4, #20]
   46764:	mov	r0, r4
   46768:	blx	r2
   4676c:	ldr	r1, [r4, #16]
   46770:	ldr	r0, [r4, #20]
   46774:	sub	r7, r7, r5
   46778:	sub	r5, r1, r0
   4677c:	cmp	r7, r5
   46780:	bhi	46744 <flatcc_json_printer_union_field@@Base+0x12c>
   46784:	mov	r1, #32
   46788:	mov	r2, r7
   4678c:	bl	14ef0 <memset@plt>
   46790:	b	467cc <flatcc_json_printer_union_field@@Base+0x1b4>
   46794:	mov	sl, r4
   46798:	ldr	r1, [sl, #16]!
   4679c:	cmp	r0, r1
   467a0:	bcc	467dc <flatcc_json_printer_union_field@@Base+0x1c4>
   467a4:	ldr	r2, [r4, #44]	; 0x2c
   467a8:	mov	r0, r4
   467ac:	mov	r1, #0
   467b0:	blx	r2
   467b4:	ldr	r0, [r4, #20]
   467b8:	b	467dc <flatcc_json_printer_union_field@@Base+0x1c4>
   467bc:	mov	r1, #32
   467c0:	mov	r2, r7
   467c4:	bl	14ef0 <memset@plt>
   467c8:	mov	r6, r5
   467cc:	ldr	r0, [r4, #20]
   467d0:	add	r0, r0, r7
   467d4:	ldr	r7, [fp, #8]
   467d8:	str	r0, [r4, #20]
   467dc:	mov	r1, #34	; 0x22
   467e0:	str	r6, [sp, #4]
   467e4:	strb	r1, [r0]
   467e8:	ldrb	r2, [r4, #26]
   467ec:	ldr	r0, [r4, #20]
   467f0:	ldr	r1, [r4, #16]
   467f4:	cmp	r2, #0
   467f8:	addeq	r0, r0, #1
   467fc:	add	r2, r0, r7
   46800:	str	r0, [r4, #20]
   46804:	cmp	r2, r1
   46808:	bcs	4681c <flatcc_json_printer_union_field@@Base+0x204>
   4680c:	mov	r1, r8
   46810:	mov	r2, r7
   46814:	bl	14e60 <memcpy@plt>
   46818:	b	468b0 <flatcc_json_printer_union_field@@Base+0x298>
   4681c:	mov	r5, r8
   46820:	cmp	r0, r1
   46824:	bcc	46840 <flatcc_json_printer_union_field@@Base+0x228>
   46828:	ldr	r2, [r4, #44]	; 0x2c
   4682c:	mov	r0, r4
   46830:	mov	r1, #0
   46834:	blx	r2
   46838:	ldr	r0, [r4, #20]
   4683c:	ldr	r1, [sl]
   46840:	sub	r8, r1, r0
   46844:	mov	r6, r5
   46848:	cmp	r8, r7
   4684c:	bcs	4689c <flatcc_json_printer_union_field@@Base+0x284>
   46850:	ldr	r7, [fp, #8]
   46854:	mov	r6, r5
   46858:	mov	r1, r6
   4685c:	mov	r2, r8
   46860:	bl	14e60 <memcpy@plt>
   46864:	ldr	r0, [r4, #20]
   46868:	ldr	r2, [r4, #44]	; 0x2c
   4686c:	mov	r1, #0
   46870:	add	r0, r0, r8
   46874:	str	r0, [r4, #20]
   46878:	mov	r0, r4
   4687c:	blx	r2
   46880:	ldr	r0, [r4, #20]
   46884:	ldr	r1, [sl]
   46888:	sub	r7, r7, r8
   4688c:	add	r6, r6, r8
   46890:	sub	r8, r1, r0
   46894:	cmp	r7, r8
   46898:	bhi	46858 <flatcc_json_printer_union_field@@Base+0x240>
   4689c:	mov	r1, r6
   468a0:	mov	r2, r7
   468a4:	bl	14e60 <memcpy@plt>
   468a8:	ldr	r6, [sp, #4]
   468ac:	mov	r8, r5
   468b0:	ldr	r0, [r4, #20]
   468b4:	ldr	r1, [r4, #16]
   468b8:	add	r0, r0, r7
   468bc:	add	r2, r0, #5
   468c0:	str	r0, [r4, #20]
   468c4:	cmp	r2, r1
   468c8:	bcs	468ec <flatcc_json_printer_union_field@@Base+0x2d4>
   468cc:	ldr	sl, [sp]
   468d0:	mov	r1, #101	; 0x65
   468d4:	mov	r7, #5
   468d8:	strb	r1, [r0, #4]
   468dc:	movw	r1, #29791	; 0x745f
   468e0:	movt	r1, #28793	; 0x7079
   468e4:	str	r1, [r0]
   468e8:	b	4698c <flatcc_json_printer_union_field@@Base+0x374>
   468ec:	cmp	r0, r1
   468f0:	bcc	4690c <flatcc_json_printer_union_field@@Base+0x2f4>
   468f4:	ldr	r2, [r4, #44]	; 0x2c
   468f8:	mov	r0, r4
   468fc:	mov	r1, #0
   46900:	blx	r2
   46904:	ldr	r0, [r4, #20]
   46908:	ldr	r1, [sl]
   4690c:	sub	r5, r1, r0
   46910:	cmp	r5, #4
   46914:	bhi	4696c <flatcc_json_printer_union_field@@Base+0x354>
   46918:	movw	r6, #60592	; 0xecb0
   4691c:	mov	r7, #5
   46920:	movt	r6, #4
   46924:	mov	r1, r6
   46928:	mov	r2, r5
   4692c:	bl	14e60 <memcpy@plt>
   46930:	ldr	r0, [r4, #20]
   46934:	ldr	r2, [r4, #44]	; 0x2c
   46938:	mov	r1, #0
   4693c:	add	r0, r0, r5
   46940:	str	r0, [r4, #20]
   46944:	mov	r0, r4
   46948:	blx	r2
   4694c:	ldr	r0, [r4, #20]
   46950:	ldr	r1, [sl]
   46954:	sub	r7, r7, r5
   46958:	add	r6, r6, r5
   4695c:	sub	r5, r1, r0
   46960:	cmp	r7, r5
   46964:	bhi	46924 <flatcc_json_printer_union_field@@Base+0x30c>
   46968:	b	46978 <flatcc_json_printer_union_field@@Base+0x360>
   4696c:	movw	r6, #60592	; 0xecb0
   46970:	mov	r7, #5
   46974:	movt	r6, #4
   46978:	ldr	sl, [sp]
   4697c:	mov	r1, r6
   46980:	mov	r2, r7
   46984:	bl	14e60 <memcpy@plt>
   46988:	ldr	r6, [sp, #4]
   4698c:	ldr	r0, [r4, #20]
   46990:	add	r1, r0, r7
   46994:	str	r1, [r4, #20]
   46998:	mov	r1, #34	; 0x22
   4699c:	strb	r1, [r0, r7]
   469a0:	ldrb	r0, [r4, #26]
   469a4:	ldr	r1, [r4, #20]
   469a8:	cmp	r0, #0
   469ac:	addeq	r1, r1, #1
   469b0:	add	r0, r1, #1
   469b4:	str	r0, [r4, #20]
   469b8:	mov	r0, #58	; 0x3a
   469bc:	strb	r0, [r1]
   469c0:	mov	r1, #32
   469c4:	ldr	r0, [r4, #20]
   469c8:	strb	r1, [r0]
   469cc:	ldrb	r1, [r4, #25]
   469d0:	ldr	r0, [r4, #20]
   469d4:	cmp	r1, #0
   469d8:	addne	r0, r0, #1
   469dc:	str	r0, [r4, #20]
   469e0:	ldrb	r1, [r4, #27]
   469e4:	cmp	r1, #0
   469e8:	beq	46a3c <flatcc_json_printer_union_field@@Base+0x424>
   469ec:	mov	r1, #0
   469f0:	cmp	r6, #100	; 0x64
   469f4:	bcc	46a5c <flatcc_json_printer_union_field@@Base+0x444>
   469f8:	strb	r1, [r0, #3]
   469fc:	movw	r1, #34079	; 0x851f
   46a00:	movt	r1, #20971	; 0x51eb
   46a04:	umull	r1, r2, r6, r1
   46a08:	mov	r1, #48	; 0x30
   46a0c:	orr	r1, r1, r2, lsr #5
   46a10:	strb	r1, [r0]
   46a14:	lsr	r1, r2, #5
   46a18:	mov	r2, #100	; 0x64
   46a1c:	mls	r1, r1, r2, r6
   46a20:	movw	r2, #61040	; 0xee70
   46a24:	movt	r2, #4
   46a28:	add	r1, r2, r1, lsl #1
   46a2c:	ldrh	r1, [r1]
   46a30:	strh	r1, [r0, #1]
   46a34:	mov	r0, #3
   46a38:	b	46aac <flatcc_json_printer_union_field@@Base+0x494>
   46a3c:	ldr	r2, [fp, #12]
   46a40:	mov	r0, r4
   46a44:	mov	r1, r6
   46a48:	blx	r2
   46a4c:	ldr	r2, [fp, #8]
   46a50:	cmp	r6, #0
   46a54:	bne	46ac4 <flatcc_json_printer_union_field@@Base+0x4ac>
   46a58:	b	46694 <flatcc_json_printer_union_field@@Base+0x7c>
   46a5c:	cmp	r6, #10
   46a60:	bcc	46a9c <flatcc_json_printer_union_field@@Base+0x484>
   46a64:	strb	r1, [r0, #2]
   46a68:	movw	r1, #34079	; 0x851f
   46a6c:	movt	r1, #20971	; 0x51eb
   46a70:	umull	r1, r2, r6, r1
   46a74:	lsr	r1, r2, #5
   46a78:	mov	r2, #100	; 0x64
   46a7c:	mls	r1, r1, r2, r6
   46a80:	movw	r2, #61040	; 0xee70
   46a84:	movt	r2, #4
   46a88:	add	r1, r2, r1, lsl #1
   46a8c:	ldrh	r1, [r1]
   46a90:	strh	r1, [r0]
   46a94:	mov	r0, #2
   46a98:	b	46aac <flatcc_json_printer_union_field@@Base+0x494>
   46a9c:	strb	r1, [r0, #1]
   46aa0:	add	r1, r6, #48	; 0x30
   46aa4:	strb	r1, [r0]
   46aa8:	mov	r0, #1
   46aac:	ldr	r1, [r4, #20]
   46ab0:	ldr	r2, [fp, #8]
   46ab4:	add	r0, r1, r0
   46ab8:	str	r0, [r4, #20]
   46abc:	cmp	r6, #0
   46ac0:	beq	46694 <flatcc_json_printer_union_field@@Base+0x7c>
   46ac4:	ldr	r0, [r4, #20]
   46ac8:	ldr	r5, [fp, #16]
   46acc:	add	r1, r0, #1
   46ad0:	str	r1, [r4, #20]
   46ad4:	mov	r1, #44	; 0x2c
   46ad8:	strb	r1, [r0]
   46adc:	mov	r0, r4
   46ae0:	mov	r1, r8
   46ae4:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   46ae8:	ldr	r0, [r9, #12]
   46aec:	strb	r6, [sp, #16]
   46af0:	str	sl, [sp, #8]
   46af4:	add	r1, sp, #8
   46af8:	str	r0, [sp, #12]
   46afc:	mov	r0, r4
   46b00:	blx	r5
   46b04:	sub	sp, fp, #28
   46b08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00046b0c <flatcc_json_printer_union_table@@Base>:
   46b0c:	push	{r4, r5, r6, sl, fp, lr}
   46b10:	add	fp, sp, #16
   46b14:	sub	sp, sp, #24
   46b18:	mov	r4, r0
   46b1c:	ldr	r0, [r1, #4]
   46b20:	subs	r0, r0, #1
   46b24:	beq	46c68 <flatcc_json_printer_union_table@@Base+0x15c>
   46b28:	ldr	r1, [r1]
   46b2c:	ldr	r6, [r4, #32]
   46b30:	ldr	r3, [r1]
   46b34:	add	r6, r6, #1
   46b38:	add	r1, r1, r3
   46b3c:	ldr	r3, [r4, #20]
   46b40:	str	r6, [r4, #32]
   46b44:	add	r6, r3, #1
   46b48:	str	r6, [r4, #20]
   46b4c:	mov	r6, #123	; 0x7b
   46b50:	strb	r6, [r3]
   46b54:	str	r0, [sp, #16]
   46b58:	mov	r0, #0
   46b5c:	str	r0, [sp, #20]
   46b60:	str	r1, [sp, #4]
   46b64:	ldr	r0, [r1]
   46b68:	sub	r3, r1, r0
   46b6c:	str	r3, [sp, #8]
   46b70:	ldrh	r0, [r1, -r0]
   46b74:	add	r1, sp, #4
   46b78:	str	r0, [sp, #12]
   46b7c:	mov	r0, r4
   46b80:	blx	r2
   46b84:	ldrb	r1, [r4, #25]
   46b88:	ldr	r0, [r4, #20]
   46b8c:	cmp	r1, #0
   46b90:	beq	46c50 <flatcc_json_printer_union_table@@Base+0x144>
   46b94:	add	r1, r0, #1
   46b98:	str	r1, [r4, #20]
   46b9c:	mov	r1, #10
   46ba0:	strb	r1, [r0]
   46ba4:	ldr	r0, [r4, #32]
   46ba8:	sub	r2, r0, #1
   46bac:	str	r2, [r4, #32]
   46bb0:	ldrb	r3, [r4, #25]
   46bb4:	ldr	r0, [r4, #20]
   46bb8:	ldr	r1, [r4, #16]
   46bbc:	mla	r6, r2, r3, r0
   46bc0:	mul	r5, r2, r3
   46bc4:	cmp	r6, r1
   46bc8:	bls	46c38 <flatcc_json_printer_union_table@@Base+0x12c>
   46bcc:	cmp	r0, r1
   46bd0:	bcc	46bec <flatcc_json_printer_union_table@@Base+0xe0>
   46bd4:	ldr	r2, [r4, #44]	; 0x2c
   46bd8:	mov	r0, r4
   46bdc:	mov	r1, #0
   46be0:	blx	r2
   46be4:	ldr	r1, [r4, #16]
   46be8:	ldr	r0, [r4, #20]
   46bec:	sub	r6, r1, r0
   46bf0:	cmp	r6, r5
   46bf4:	bcs	46c38 <flatcc_json_printer_union_table@@Base+0x12c>
   46bf8:	mov	r1, #32
   46bfc:	mov	r2, r6
   46c00:	bl	14ef0 <memset@plt>
   46c04:	ldr	r0, [r4, #20]
   46c08:	ldr	r2, [r4, #44]	; 0x2c
   46c0c:	mov	r1, #0
   46c10:	add	r0, r0, r6
   46c14:	str	r0, [r4, #20]
   46c18:	mov	r0, r4
   46c1c:	blx	r2
   46c20:	ldr	r1, [r4, #16]
   46c24:	ldr	r0, [r4, #20]
   46c28:	sub	r5, r5, r6
   46c2c:	sub	r6, r1, r0
   46c30:	cmp	r5, r6
   46c34:	bhi	46bf8 <flatcc_json_printer_union_table@@Base+0xec>
   46c38:	mov	r1, #32
   46c3c:	mov	r2, r5
   46c40:	bl	14ef0 <memset@plt>
   46c44:	ldr	r0, [r4, #20]
   46c48:	add	r0, r0, r5
   46c4c:	str	r0, [r4, #20]
   46c50:	add	r1, r0, #1
   46c54:	str	r1, [r4, #20]
   46c58:	mov	r1, #125	; 0x7d
   46c5c:	strb	r1, [r0]
   46c60:	sub	sp, fp, #16
   46c64:	pop	{r4, r5, r6, sl, fp, pc}
   46c68:	ldr	r0, [r4, #36]	; 0x24
   46c6c:	cmp	r0, #0
   46c70:	beq	46c7c <flatcc_json_printer_union_table@@Base+0x170>
   46c74:	sub	sp, fp, #16
   46c78:	pop	{r4, r5, r6, sl, fp, pc}
   46c7c:	mov	r0, #2
   46c80:	str	r0, [r4, #36]	; 0x24
   46c84:	sub	sp, fp, #16
   46c88:	pop	{r4, r5, r6, sl, fp, pc}

00046c8c <flatcc_json_printer_union_struct@@Base>:
   46c8c:	push	{r4, r5, r6, sl, fp, lr}
   46c90:	add	fp, sp, #16
   46c94:	mov	r4, r0
   46c98:	ldr	r0, [r0, #20]
   46c9c:	ldr	r3, [r4, #32]
   46ca0:	add	r3, r3, #1
   46ca4:	str	r3, [r4, #32]
   46ca8:	add	r3, r0, #1
   46cac:	str	r3, [r4, #20]
   46cb0:	mov	r3, #123	; 0x7b
   46cb4:	strb	r3, [r0]
   46cb8:	ldr	r0, [r1]
   46cbc:	ldr	r1, [r0]
   46cc0:	add	r1, r0, r1
   46cc4:	mov	r0, r4
   46cc8:	blx	r2
   46ccc:	ldrb	r1, [r4, #25]
   46cd0:	ldr	r0, [r4, #20]
   46cd4:	cmp	r1, #0
   46cd8:	beq	46d98 <flatcc_json_printer_union_struct@@Base+0x10c>
   46cdc:	add	r1, r0, #1
   46ce0:	str	r1, [r4, #20]
   46ce4:	mov	r1, #10
   46ce8:	strb	r1, [r0]
   46cec:	ldr	r0, [r4, #32]
   46cf0:	sub	r2, r0, #1
   46cf4:	str	r2, [r4, #32]
   46cf8:	ldrb	r3, [r4, #25]
   46cfc:	ldr	r0, [r4, #20]
   46d00:	ldr	r1, [r4, #16]
   46d04:	mla	r6, r2, r3, r0
   46d08:	mul	r5, r2, r3
   46d0c:	cmp	r6, r1
   46d10:	bls	46d80 <flatcc_json_printer_union_struct@@Base+0xf4>
   46d14:	cmp	r0, r1
   46d18:	bcc	46d34 <flatcc_json_printer_union_struct@@Base+0xa8>
   46d1c:	ldr	r2, [r4, #44]	; 0x2c
   46d20:	mov	r0, r4
   46d24:	mov	r1, #0
   46d28:	blx	r2
   46d2c:	ldr	r1, [r4, #16]
   46d30:	ldr	r0, [r4, #20]
   46d34:	sub	r6, r1, r0
   46d38:	cmp	r6, r5
   46d3c:	bcs	46d80 <flatcc_json_printer_union_struct@@Base+0xf4>
   46d40:	mov	r1, #32
   46d44:	mov	r2, r6
   46d48:	bl	14ef0 <memset@plt>
   46d4c:	ldr	r0, [r4, #20]
   46d50:	ldr	r2, [r4, #44]	; 0x2c
   46d54:	mov	r1, #0
   46d58:	add	r0, r0, r6
   46d5c:	str	r0, [r4, #20]
   46d60:	mov	r0, r4
   46d64:	blx	r2
   46d68:	ldr	r1, [r4, #16]
   46d6c:	ldr	r0, [r4, #20]
   46d70:	sub	r5, r5, r6
   46d74:	sub	r6, r1, r0
   46d78:	cmp	r5, r6
   46d7c:	bhi	46d40 <flatcc_json_printer_union_struct@@Base+0xb4>
   46d80:	mov	r1, #32
   46d84:	mov	r2, r5
   46d88:	bl	14ef0 <memset@plt>
   46d8c:	ldr	r0, [r4, #20]
   46d90:	add	r0, r0, r5
   46d94:	str	r0, [r4, #20]
   46d98:	add	r1, r0, #1
   46d9c:	str	r1, [r4, #20]
   46da0:	mov	r1, #125	; 0x7d
   46da4:	strb	r1, [r0]
   46da8:	pop	{r4, r5, r6, sl, fp, pc}

00046dac <flatcc_json_printer_union_string@@Base>:
   46dac:	ldr	r1, [r1]
   46db0:	ldr	r2, [r1]
   46db4:	ldr	r2, [r1, r2]!
   46db8:	add	r1, r1, #4
   46dbc:	b	3c11c <flatcc_json_printer_string@@Base+0x4>

00046dc0 <flatcc_json_printer_embedded_struct_field@@Base>:
   46dc0:	push	{r4, r5, r6, r7, fp, lr}
   46dc4:	add	fp, sp, #16
   46dc8:	mov	r5, r3
   46dcc:	mov	r3, r1
   46dd0:	mov	r4, r0
   46dd4:	add	r7, fp, #8
   46dd8:	mov	r6, r2
   46ddc:	cmp	r3, #0
   46de0:	ldm	r7, {r1, r2, r7}
   46de4:	ldrne	r0, [r4, #20]
   46de8:	addne	r3, r0, #1
   46dec:	strne	r3, [r4, #20]
   46df0:	movne	r3, #44	; 0x2c
   46df4:	strbne	r3, [r0]
   46df8:	mov	r0, r4
   46dfc:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   46e00:	ldr	r1, [r4, #32]
   46e04:	ldr	r0, [r4, #20]
   46e08:	add	r1, r1, #1
   46e0c:	str	r1, [r4, #32]
   46e10:	add	r1, r0, #1
   46e14:	str	r1, [r4, #20]
   46e18:	mov	r1, #123	; 0x7b
   46e1c:	strb	r1, [r0]
   46e20:	add	r1, r6, r5
   46e24:	mov	r0, r4
   46e28:	blx	r7
   46e2c:	ldrb	r1, [r4, #25]
   46e30:	ldr	r0, [r4, #20]
   46e34:	cmp	r1, #0
   46e38:	beq	46ef8 <flatcc_json_printer_embedded_struct_field@@Base+0x138>
   46e3c:	add	r1, r0, #1
   46e40:	str	r1, [r4, #20]
   46e44:	mov	r1, #10
   46e48:	strb	r1, [r0]
   46e4c:	ldr	r0, [r4, #32]
   46e50:	sub	r2, r0, #1
   46e54:	str	r2, [r4, #32]
   46e58:	ldrb	r3, [r4, #25]
   46e5c:	ldr	r0, [r4, #20]
   46e60:	ldr	r1, [r4, #16]
   46e64:	mla	r7, r2, r3, r0
   46e68:	mul	r5, r2, r3
   46e6c:	cmp	r7, r1
   46e70:	bls	46ee0 <flatcc_json_printer_embedded_struct_field@@Base+0x120>
   46e74:	cmp	r0, r1
   46e78:	bcc	46e94 <flatcc_json_printer_embedded_struct_field@@Base+0xd4>
   46e7c:	ldr	r2, [r4, #44]	; 0x2c
   46e80:	mov	r0, r4
   46e84:	mov	r1, #0
   46e88:	blx	r2
   46e8c:	ldr	r1, [r4, #16]
   46e90:	ldr	r0, [r4, #20]
   46e94:	sub	r6, r1, r0
   46e98:	cmp	r6, r5
   46e9c:	bcs	46ee0 <flatcc_json_printer_embedded_struct_field@@Base+0x120>
   46ea0:	mov	r1, #32
   46ea4:	mov	r2, r6
   46ea8:	bl	14ef0 <memset@plt>
   46eac:	ldr	r0, [r4, #20]
   46eb0:	ldr	r2, [r4, #44]	; 0x2c
   46eb4:	mov	r1, #0
   46eb8:	add	r0, r0, r6
   46ebc:	str	r0, [r4, #20]
   46ec0:	mov	r0, r4
   46ec4:	blx	r2
   46ec8:	ldr	r1, [r4, #16]
   46ecc:	ldr	r0, [r4, #20]
   46ed0:	sub	r5, r5, r6
   46ed4:	sub	r6, r1, r0
   46ed8:	cmp	r5, r6
   46edc:	bhi	46ea0 <flatcc_json_printer_embedded_struct_field@@Base+0xe0>
   46ee0:	mov	r1, #32
   46ee4:	mov	r2, r5
   46ee8:	bl	14ef0 <memset@plt>
   46eec:	ldr	r0, [r4, #20]
   46ef0:	add	r0, r0, r5
   46ef4:	str	r0, [r4, #20]
   46ef8:	add	r1, r0, #1
   46efc:	str	r1, [r4, #20]
   46f00:	mov	r1, #125	; 0x7d
   46f04:	strb	r1, [r0]
   46f08:	pop	{r4, r5, r6, r7, fp, pc}

00046f0c <flatcc_json_printer_struct_field@@Base>:
   46f0c:	push	{r4, r5, r6, r7, fp, lr}
   46f10:	add	fp, sp, #16
   46f14:	mov	r4, r0
   46f18:	mov	r0, #4
   46f1c:	add	r0, r0, r2, lsl #1
   46f20:	ldr	r2, [r1, #8]
   46f24:	cmp	r0, r2
   46f28:	popge	{r4, r5, r6, r7, fp, pc}
   46f2c:	ldr	r2, [r1, #4]
   46f30:	add	r0, r2, r0
   46f34:	ldrh	r0, [r0]
   46f38:	cmp	r0, #0
   46f3c:	ldrne	r2, [r1]
   46f40:	addsne	r5, r2, r0
   46f44:	bne	46f4c <flatcc_json_printer_struct_field@@Base+0x40>
   46f48:	pop	{r4, r5, r6, r7, fp, pc}
   46f4c:	ldr	r0, [r1, #16]
   46f50:	ldr	r2, [fp, #8]
   46f54:	ldr	r7, [fp, #12]
   46f58:	add	r6, r0, #1
   46f5c:	cmp	r0, #0
   46f60:	str	r6, [r1, #16]
   46f64:	ldrne	r0, [r4, #20]
   46f68:	addne	r1, r0, #1
   46f6c:	strne	r1, [r4, #20]
   46f70:	movne	r1, #44	; 0x2c
   46f74:	strbne	r1, [r0]
   46f78:	mov	r0, r4
   46f7c:	mov	r1, r3
   46f80:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   46f84:	ldr	r1, [r4, #32]
   46f88:	ldr	r0, [r4, #20]
   46f8c:	add	r1, r1, #1
   46f90:	str	r1, [r4, #32]
   46f94:	add	r1, r0, #1
   46f98:	str	r1, [r4, #20]
   46f9c:	mov	r1, #123	; 0x7b
   46fa0:	strb	r1, [r0]
   46fa4:	mov	r0, r4
   46fa8:	mov	r1, r5
   46fac:	blx	r7
   46fb0:	ldrb	r1, [r4, #25]
   46fb4:	ldr	r0, [r4, #20]
   46fb8:	cmp	r1, #0
   46fbc:	beq	4707c <flatcc_json_printer_struct_field@@Base+0x170>
   46fc0:	add	r1, r0, #1
   46fc4:	str	r1, [r4, #20]
   46fc8:	mov	r1, #10
   46fcc:	strb	r1, [r0]
   46fd0:	ldr	r0, [r4, #32]
   46fd4:	sub	r2, r0, #1
   46fd8:	str	r2, [r4, #32]
   46fdc:	ldrb	r3, [r4, #25]
   46fe0:	ldr	r0, [r4, #20]
   46fe4:	ldr	r1, [r4, #16]
   46fe8:	mla	r7, r2, r3, r0
   46fec:	mul	r5, r2, r3
   46ff0:	cmp	r7, r1
   46ff4:	bls	47064 <flatcc_json_printer_struct_field@@Base+0x158>
   46ff8:	cmp	r0, r1
   46ffc:	bcc	47018 <flatcc_json_printer_struct_field@@Base+0x10c>
   47000:	ldr	r2, [r4, #44]	; 0x2c
   47004:	mov	r0, r4
   47008:	mov	r1, #0
   4700c:	blx	r2
   47010:	ldr	r1, [r4, #16]
   47014:	ldr	r0, [r4, #20]
   47018:	sub	r6, r1, r0
   4701c:	cmp	r6, r5
   47020:	bcs	47064 <flatcc_json_printer_struct_field@@Base+0x158>
   47024:	mov	r1, #32
   47028:	mov	r2, r6
   4702c:	bl	14ef0 <memset@plt>
   47030:	ldr	r0, [r4, #20]
   47034:	ldr	r2, [r4, #44]	; 0x2c
   47038:	mov	r1, #0
   4703c:	add	r0, r0, r6
   47040:	str	r0, [r4, #20]
   47044:	mov	r0, r4
   47048:	blx	r2
   4704c:	ldr	r1, [r4, #16]
   47050:	ldr	r0, [r4, #20]
   47054:	sub	r5, r5, r6
   47058:	sub	r6, r1, r0
   4705c:	cmp	r5, r6
   47060:	bhi	47024 <flatcc_json_printer_struct_field@@Base+0x118>
   47064:	mov	r1, #32
   47068:	mov	r2, r5
   4706c:	bl	14ef0 <memset@plt>
   47070:	ldr	r0, [r4, #20]
   47074:	add	r0, r0, r5
   47078:	str	r0, [r4, #20]
   4707c:	add	r1, r0, #1
   47080:	str	r1, [r4, #20]
   47084:	mov	r1, #125	; 0x7d
   47088:	strb	r1, [r0]
   4708c:	pop	{r4, r5, r6, r7, fp, pc}

00047090 <flatcc_json_printer_struct_as_root@@Base>:
   47090:	push	{r4, r5, r6, sl, fp, lr}
   47094:	add	fp, sp, #16
   47098:	sub	sp, sp, #8
   4709c:	cmp	r1, #0
   470a0:	mov	r4, r0
   470a4:	mov	r0, #0
   470a8:	cmpne	r2, #7
   470ac:	str	r0, [sp, #4]
   470b0:	bls	47264 <flatcc_json_printer_struct_as_root@@Base+0x1d4>
   470b4:	mov	r5, r1
   470b8:	cmp	r3, #0
   470bc:	beq	470e4 <flatcc_json_printer_struct_as_root@@Base+0x54>
   470c0:	add	r0, sp, #4
   470c4:	mov	r1, r3
   470c8:	mov	r2, #4
   470cc:	bl	14efc <strncpy@plt>
   470d0:	ldr	r0, [sp, #4]
   470d4:	cmp	r0, #0
   470d8:	ldrne	r1, [r5, #4]
   470dc:	cmpne	r1, r0
   470e0:	bne	47294 <flatcc_json_printer_struct_as_root@@Base+0x204>
   470e4:	ldr	r1, [r4, #32]
   470e8:	ldr	r0, [r4, #20]
   470ec:	ldr	r2, [fp, #8]
   470f0:	add	r1, r1, #1
   470f4:	str	r1, [r4, #32]
   470f8:	add	r1, r0, #1
   470fc:	str	r1, [r4, #20]
   47100:	mov	r1, #123	; 0x7b
   47104:	strb	r1, [r0]
   47108:	ldr	r0, [r5]
   4710c:	add	r1, r5, r0
   47110:	mov	r0, r4
   47114:	blx	r2
   47118:	ldrb	r1, [r4, #25]
   4711c:	ldr	r0, [r4, #20]
   47120:	cmp	r1, #0
   47124:	beq	471e4 <flatcc_json_printer_struct_as_root@@Base+0x154>
   47128:	add	r1, r0, #1
   4712c:	str	r1, [r4, #20]
   47130:	mov	r1, #10
   47134:	strb	r1, [r0]
   47138:	ldr	r0, [r4, #32]
   4713c:	sub	r2, r0, #1
   47140:	str	r2, [r4, #32]
   47144:	ldrb	r3, [r4, #25]
   47148:	ldr	r0, [r4, #20]
   4714c:	ldr	r1, [r4, #16]
   47150:	mla	r6, r2, r3, r0
   47154:	mul	r5, r2, r3
   47158:	cmp	r6, r1
   4715c:	bls	471cc <flatcc_json_printer_struct_as_root@@Base+0x13c>
   47160:	cmp	r0, r1
   47164:	bcc	47180 <flatcc_json_printer_struct_as_root@@Base+0xf0>
   47168:	ldr	r2, [r4, #44]	; 0x2c
   4716c:	mov	r0, r4
   47170:	mov	r1, #0
   47174:	blx	r2
   47178:	ldr	r1, [r4, #16]
   4717c:	ldr	r0, [r4, #20]
   47180:	sub	r6, r1, r0
   47184:	cmp	r6, r5
   47188:	bcs	471cc <flatcc_json_printer_struct_as_root@@Base+0x13c>
   4718c:	mov	r1, #32
   47190:	mov	r2, r6
   47194:	bl	14ef0 <memset@plt>
   47198:	ldr	r0, [r4, #20]
   4719c:	ldr	r2, [r4, #44]	; 0x2c
   471a0:	mov	r1, #0
   471a4:	add	r0, r0, r6
   471a8:	str	r0, [r4, #20]
   471ac:	mov	r0, r4
   471b0:	blx	r2
   471b4:	ldr	r1, [r4, #16]
   471b8:	ldr	r0, [r4, #20]
   471bc:	sub	r5, r5, r6
   471c0:	sub	r6, r1, r0
   471c4:	cmp	r5, r6
   471c8:	bhi	4718c <flatcc_json_printer_struct_as_root@@Base+0xfc>
   471cc:	mov	r1, #32
   471d0:	mov	r2, r5
   471d4:	bl	14ef0 <memset@plt>
   471d8:	ldr	r0, [r4, #20]
   471dc:	add	r0, r0, r5
   471e0:	str	r0, [r4, #20]
   471e4:	add	r1, r0, #1
   471e8:	str	r1, [r4, #20]
   471ec:	mov	r1, #125	; 0x7d
   471f0:	strb	r1, [r0]
   471f4:	ldrb	r0, [r4, #25]
   471f8:	cmp	r0, #0
   471fc:	beq	47220 <flatcc_json_printer_struct_as_root@@Base+0x190>
   47200:	ldr	r0, [r4, #32]
   47204:	cmp	r0, #0
   47208:	bne	47220 <flatcc_json_printer_struct_as_root@@Base+0x190>
   4720c:	ldr	r0, [r4, #20]
   47210:	add	r1, r0, #1
   47214:	str	r1, [r4, #20]
   47218:	mov	r1, #10
   4721c:	strb	r1, [r0]
   47220:	ldr	r2, [r4, #44]	; 0x2c
   47224:	mov	r0, r4
   47228:	mov	r1, #1
   4722c:	blx	r2
   47230:	ldr	r1, [r4, #36]	; 0x24
   47234:	mvn	r0, #0
   47238:	cmp	r1, #0
   4723c:	beq	47248 <flatcc_json_printer_struct_as_root@@Base+0x1b8>
   47240:	sub	sp, fp, #16
   47244:	pop	{r4, r5, r6, sl, fp, pc}
   47248:	ldr	r1, [r4, #12]
   4724c:	ldr	r2, [r4, #20]
   47250:	ldr	r0, [r4]
   47254:	add	r1, r2, r1
   47258:	sub	r0, r1, r0
   4725c:	sub	sp, fp, #16
   47260:	pop	{r4, r5, r6, sl, fp, pc}
   47264:	ldr	r0, [r4, #36]	; 0x24
   47268:	movw	r1, #60315	; 0xeb9b
   4726c:	movw	r3, #61490	; 0xf032
   47270:	movw	r2, #1019	; 0x3fb
   47274:	movt	r1, #4
   47278:	movt	r3, #4
   4727c:	cmp	r0, #0
   47280:	moveq	r0, #1
   47284:	streq	r0, [r4, #36]	; 0x24
   47288:	movw	r0, #61459	; 0xf013
   4728c:	movt	r0, #4
   47290:	bl	14f44 <__assert_fail@plt>
   47294:	ldr	r0, [r4, #36]	; 0x24
   47298:	movw	r1, #60315	; 0xeb9b
   4729c:	movw	r3, #61490	; 0xf032
   472a0:	movw	r2, #1028	; 0x404
   472a4:	movt	r1, #4
   472a8:	movt	r3, #4
   472ac:	cmp	r0, #0
   472b0:	moveq	r0, #1
   472b4:	streq	r0, [r4, #36]	; 0x24
   472b8:	movw	r0, #61569	; 0xf081
   472bc:	movt	r0, #4
   472c0:	bl	14f44 <__assert_fail@plt>

000472c4 <flatcc_json_printer_table_as_root@@Base>:
   472c4:	push	{r4, r5, r6, sl, fp, lr}
   472c8:	add	fp, sp, #16
   472cc:	sub	sp, sp, #24
   472d0:	cmp	r1, #0
   472d4:	mov	r4, r0
   472d8:	mov	r0, #0
   472dc:	cmpne	r2, #7
   472e0:	str	r0, [sp, #4]
   472e4:	bls	474c4 <flatcc_json_printer_table_as_root@@Base+0x200>
   472e8:	mov	r5, r1
   472ec:	cmp	r3, #0
   472f0:	beq	47318 <flatcc_json_printer_table_as_root@@Base+0x54>
   472f4:	add	r0, sp, #4
   472f8:	mov	r1, r3
   472fc:	mov	r2, #4
   47300:	bl	14efc <strncpy@plt>
   47304:	ldr	r0, [sp, #4]
   47308:	cmp	r0, #0
   4730c:	ldrne	r1, [r5, #4]
   47310:	cmpne	r1, r0
   47314:	bne	474f4 <flatcc_json_printer_table_as_root@@Base+0x230>
   47318:	ldr	r3, [r4, #32]
   4731c:	ldr	r1, [r4, #20]
   47320:	ldr	r0, [r5]
   47324:	ldr	r2, [fp, #8]
   47328:	add	r3, r3, #1
   4732c:	str	r3, [r4, #32]
   47330:	add	r3, r1, #1
   47334:	str	r3, [r4, #20]
   47338:	mov	r3, #123	; 0x7b
   4733c:	strb	r3, [r1]
   47340:	mov	r1, #99	; 0x63
   47344:	str	r1, [sp, #16]
   47348:	mov	r1, #0
   4734c:	str	r1, [sp, #20]
   47350:	add	r1, r5, r0
   47354:	str	r1, [sp, #4]
   47358:	ldr	r0, [r5, r0]
   4735c:	sub	r3, r1, r0
   47360:	str	r3, [sp, #8]
   47364:	ldrh	r0, [r1, -r0]
   47368:	add	r1, sp, #4
   4736c:	str	r0, [sp, #12]
   47370:	mov	r0, r4
   47374:	blx	r2
   47378:	ldrb	r1, [r4, #25]
   4737c:	ldr	r0, [r4, #20]
   47380:	cmp	r1, #0
   47384:	beq	47444 <flatcc_json_printer_table_as_root@@Base+0x180>
   47388:	add	r1, r0, #1
   4738c:	str	r1, [r4, #20]
   47390:	mov	r1, #10
   47394:	strb	r1, [r0]
   47398:	ldr	r0, [r4, #32]
   4739c:	sub	r2, r0, #1
   473a0:	str	r2, [r4, #32]
   473a4:	ldrb	r3, [r4, #25]
   473a8:	ldr	r0, [r4, #20]
   473ac:	ldr	r1, [r4, #16]
   473b0:	mla	r6, r2, r3, r0
   473b4:	mul	r5, r2, r3
   473b8:	cmp	r6, r1
   473bc:	bls	4742c <flatcc_json_printer_table_as_root@@Base+0x168>
   473c0:	cmp	r0, r1
   473c4:	bcc	473e0 <flatcc_json_printer_table_as_root@@Base+0x11c>
   473c8:	ldr	r2, [r4, #44]	; 0x2c
   473cc:	mov	r0, r4
   473d0:	mov	r1, #0
   473d4:	blx	r2
   473d8:	ldr	r1, [r4, #16]
   473dc:	ldr	r0, [r4, #20]
   473e0:	sub	r6, r1, r0
   473e4:	cmp	r6, r5
   473e8:	bcs	4742c <flatcc_json_printer_table_as_root@@Base+0x168>
   473ec:	mov	r1, #32
   473f0:	mov	r2, r6
   473f4:	bl	14ef0 <memset@plt>
   473f8:	ldr	r0, [r4, #20]
   473fc:	ldr	r2, [r4, #44]	; 0x2c
   47400:	mov	r1, #0
   47404:	add	r0, r0, r6
   47408:	str	r0, [r4, #20]
   4740c:	mov	r0, r4
   47410:	blx	r2
   47414:	ldr	r1, [r4, #16]
   47418:	ldr	r0, [r4, #20]
   4741c:	sub	r5, r5, r6
   47420:	sub	r6, r1, r0
   47424:	cmp	r5, r6
   47428:	bhi	473ec <flatcc_json_printer_table_as_root@@Base+0x128>
   4742c:	mov	r1, #32
   47430:	mov	r2, r5
   47434:	bl	14ef0 <memset@plt>
   47438:	ldr	r0, [r4, #20]
   4743c:	add	r0, r0, r5
   47440:	str	r0, [r4, #20]
   47444:	add	r1, r0, #1
   47448:	str	r1, [r4, #20]
   4744c:	mov	r1, #125	; 0x7d
   47450:	strb	r1, [r0]
   47454:	ldrb	r0, [r4, #25]
   47458:	cmp	r0, #0
   4745c:	beq	47480 <flatcc_json_printer_table_as_root@@Base+0x1bc>
   47460:	ldr	r0, [r4, #32]
   47464:	cmp	r0, #0
   47468:	bne	47480 <flatcc_json_printer_table_as_root@@Base+0x1bc>
   4746c:	ldr	r0, [r4, #20]
   47470:	add	r1, r0, #1
   47474:	str	r1, [r4, #20]
   47478:	mov	r1, #10
   4747c:	strb	r1, [r0]
   47480:	ldr	r2, [r4, #44]	; 0x2c
   47484:	mov	r0, r4
   47488:	mov	r1, #1
   4748c:	blx	r2
   47490:	ldr	r1, [r4, #36]	; 0x24
   47494:	mvn	r0, #0
   47498:	cmp	r1, #0
   4749c:	beq	474a8 <flatcc_json_printer_table_as_root@@Base+0x1e4>
   474a0:	sub	sp, fp, #16
   474a4:	pop	{r4, r5, r6, sl, fp, pc}
   474a8:	ldr	r1, [r4, #12]
   474ac:	ldr	r2, [r4, #20]
   474b0:	ldr	r0, [r4]
   474b4:	add	r1, r2, r1
   474b8:	sub	r0, r1, r0
   474bc:	sub	sp, fp, #16
   474c0:	pop	{r4, r5, r6, sl, fp, pc}
   474c4:	ldr	r0, [r4, #36]	; 0x24
   474c8:	movw	r1, #60315	; 0xeb9b
   474cc:	movw	r3, #61490	; 0xf032
   474d0:	movw	r2, #1019	; 0x3fb
   474d4:	movt	r1, #4
   474d8:	movt	r3, #4
   474dc:	cmp	r0, #0
   474e0:	moveq	r0, #1
   474e4:	streq	r0, [r4, #36]	; 0x24
   474e8:	movw	r0, #61459	; 0xf013
   474ec:	movt	r0, #4
   474f0:	bl	14f44 <__assert_fail@plt>
   474f4:	ldr	r0, [r4, #36]	; 0x24
   474f8:	movw	r1, #60315	; 0xeb9b
   474fc:	movw	r3, #61490	; 0xf032
   47500:	movw	r2, #1028	; 0x404
   47504:	movt	r1, #4
   47508:	movt	r3, #4
   4750c:	cmp	r0, #0
   47510:	moveq	r0, #1
   47514:	streq	r0, [r4, #36]	; 0x24
   47518:	movw	r0, #61569	; 0xf081
   4751c:	movt	r0, #4
   47520:	bl	14f44 <__assert_fail@plt>

00047524 <flatcc_json_printer_struct_as_nested_root@@Base>:
   47524:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   47528:	add	fp, sp, #24
   4752c:	sub	sp, sp, #8
   47530:	mov	r6, r1
   47534:	ldr	r1, [r1, #8]
   47538:	mov	r4, r0
   4753c:	mov	r0, #4
   47540:	add	r0, r0, r2, lsl #1
   47544:	cmp	r0, r1
   47548:	bge	47568 <flatcc_json_printer_struct_as_nested_root@@Base+0x44>
   4754c:	ldr	r1, [r6, #4]
   47550:	add	r0, r1, r0
   47554:	ldrh	r0, [r0]
   47558:	cmp	r0, #0
   4755c:	ldrne	r1, [r6]
   47560:	addsne	r0, r1, r0
   47564:	bne	47570 <flatcc_json_printer_struct_as_nested_root@@Base+0x4c>
   47568:	sub	sp, fp, #24
   4756c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   47570:	ldr	r7, [r0]
   47574:	mov	r1, #0
   47578:	ldr	r0, [r7, r0]!
   4757c:	str	r1, [sp, #4]
   47580:	cmp	r7, #0
   47584:	cmpne	r0, #7
   47588:	bls	47708 <flatcc_json_printer_struct_as_nested_root@@Base+0x1e4>
   4758c:	ldr	r1, [fp, #12]
   47590:	mov	r5, r3
   47594:	cmp	r1, #0
   47598:	beq	475bc <flatcc_json_printer_struct_as_nested_root@@Base+0x98>
   4759c:	add	r0, sp, #4
   475a0:	mov	r2, #4
   475a4:	bl	14efc <strncpy@plt>
   475a8:	ldr	r0, [sp, #4]
   475ac:	cmp	r0, #0
   475b0:	ldrne	r1, [r7, #4]
   475b4:	cmpne	r1, r0
   475b8:	bne	47738 <flatcc_json_printer_struct_as_nested_root@@Base+0x214>
   475bc:	ldr	r0, [r6, #16]
   475c0:	ldr	r2, [fp, #8]
   475c4:	ldr	r8, [fp, #16]
   475c8:	add	r1, r0, #1
   475cc:	cmp	r0, #0
   475d0:	str	r1, [r6, #16]
   475d4:	ldrne	r0, [r4, #20]
   475d8:	addne	r1, r0, #1
   475dc:	strne	r1, [r4, #20]
   475e0:	movne	r1, #44	; 0x2c
   475e4:	strbne	r1, [r0]
   475e8:	mov	r0, r4
   475ec:	mov	r1, r5
   475f0:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   475f4:	ldr	r1, [r4, #32]
   475f8:	ldr	r0, [r4, #20]
   475fc:	add	r1, r1, #1
   47600:	str	r1, [r4, #32]
   47604:	add	r1, r0, #1
   47608:	str	r1, [r4, #20]
   4760c:	mov	r1, #123	; 0x7b
   47610:	strb	r1, [r0]
   47614:	ldr	r0, [r7]
   47618:	add	r1, r7, r0
   4761c:	mov	r0, r4
   47620:	blx	r8
   47624:	ldrb	r1, [r4, #25]
   47628:	ldr	r0, [r4, #20]
   4762c:	cmp	r1, #0
   47630:	beq	476f0 <flatcc_json_printer_struct_as_nested_root@@Base+0x1cc>
   47634:	add	r1, r0, #1
   47638:	str	r1, [r4, #20]
   4763c:	mov	r1, #10
   47640:	strb	r1, [r0]
   47644:	ldr	r0, [r4, #32]
   47648:	sub	r2, r0, #1
   4764c:	str	r2, [r4, #32]
   47650:	ldrb	r3, [r4, #25]
   47654:	ldr	r0, [r4, #20]
   47658:	ldr	r1, [r4, #16]
   4765c:	mla	r7, r2, r3, r0
   47660:	mul	r5, r2, r3
   47664:	cmp	r7, r1
   47668:	bls	476d8 <flatcc_json_printer_struct_as_nested_root@@Base+0x1b4>
   4766c:	cmp	r0, r1
   47670:	bcc	4768c <flatcc_json_printer_struct_as_nested_root@@Base+0x168>
   47674:	ldr	r2, [r4, #44]	; 0x2c
   47678:	mov	r0, r4
   4767c:	mov	r1, #0
   47680:	blx	r2
   47684:	ldr	r1, [r4, #16]
   47688:	ldr	r0, [r4, #20]
   4768c:	sub	r6, r1, r0
   47690:	cmp	r6, r5
   47694:	bcs	476d8 <flatcc_json_printer_struct_as_nested_root@@Base+0x1b4>
   47698:	mov	r1, #32
   4769c:	mov	r2, r6
   476a0:	bl	14ef0 <memset@plt>
   476a4:	ldr	r0, [r4, #20]
   476a8:	ldr	r2, [r4, #44]	; 0x2c
   476ac:	mov	r1, #0
   476b0:	add	r0, r0, r6
   476b4:	str	r0, [r4, #20]
   476b8:	mov	r0, r4
   476bc:	blx	r2
   476c0:	ldr	r1, [r4, #16]
   476c4:	ldr	r0, [r4, #20]
   476c8:	sub	r5, r5, r6
   476cc:	sub	r6, r1, r0
   476d0:	cmp	r5, r6
   476d4:	bhi	47698 <flatcc_json_printer_struct_as_nested_root@@Base+0x174>
   476d8:	mov	r1, #32
   476dc:	mov	r2, r5
   476e0:	bl	14ef0 <memset@plt>
   476e4:	ldr	r0, [r4, #20]
   476e8:	add	r0, r0, r5
   476ec:	str	r0, [r4, #20]
   476f0:	add	r1, r0, #1
   476f4:	str	r1, [r4, #20]
   476f8:	mov	r1, #125	; 0x7d
   476fc:	strb	r1, [r0]
   47700:	sub	sp, fp, #24
   47704:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   47708:	ldr	r0, [r4, #36]	; 0x24
   4770c:	movw	r1, #60315	; 0xeb9b
   47710:	movw	r3, #61490	; 0xf032
   47714:	movw	r2, #1019	; 0x3fb
   47718:	movt	r1, #4
   4771c:	movt	r3, #4
   47720:	cmp	r0, #0
   47724:	moveq	r0, #1
   47728:	streq	r0, [r4, #36]	; 0x24
   4772c:	movw	r0, #61459	; 0xf013
   47730:	movt	r0, #4
   47734:	bl	14f44 <__assert_fail@plt>
   47738:	ldr	r0, [r4, #36]	; 0x24
   4773c:	movw	r1, #60315	; 0xeb9b
   47740:	movw	r3, #61490	; 0xf032
   47744:	movw	r2, #1028	; 0x404
   47748:	movt	r1, #4
   4774c:	movt	r3, #4
   47750:	cmp	r0, #0
   47754:	moveq	r0, #1
   47758:	streq	r0, [r4, #36]	; 0x24
   4775c:	movw	r0, #61569	; 0xf081
   47760:	movt	r0, #4
   47764:	bl	14f44 <__assert_fail@plt>

00047768 <flatcc_json_printer_table_as_nested_root@@Base>:
   47768:	push	{r4, r5, r6, r7, fp, lr}
   4776c:	add	fp, sp, #16
   47770:	sub	sp, sp, #24
   47774:	mov	r5, r1
   47778:	ldr	r1, [r1, #8]
   4777c:	mov	r4, r0
   47780:	mov	r0, #4
   47784:	add	r0, r0, r2, lsl #1
   47788:	cmp	r0, r1
   4778c:	bge	477ac <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   47790:	ldr	r1, [r5, #4]
   47794:	add	r0, r1, r0
   47798:	ldrh	r0, [r0]
   4779c:	cmp	r0, #0
   477a0:	ldrne	r1, [r5]
   477a4:	addsne	r0, r1, r0
   477a8:	bne	477b4 <flatcc_json_printer_table_as_nested_root@@Base+0x4c>
   477ac:	sub	sp, fp, #16
   477b0:	pop	{r4, r5, r6, r7, fp, pc}
   477b4:	ldr	r7, [r0]
   477b8:	mov	r1, #0
   477bc:	ldr	r0, [r7, r0]!
   477c0:	str	r1, [sp, #4]
   477c4:	cmp	r0, #7
   477c8:	bls	4799c <flatcc_json_printer_table_as_nested_root@@Base+0x234>
   477cc:	ldr	r1, [fp, #12]
   477d0:	mov	r6, r3
   477d4:	cmp	r1, #0
   477d8:	beq	477fc <flatcc_json_printer_table_as_nested_root@@Base+0x94>
   477dc:	add	r0, sp, #4
   477e0:	mov	r2, #4
   477e4:	bl	14efc <strncpy@plt>
   477e8:	ldr	r0, [sp, #4]
   477ec:	cmp	r0, #0
   477f0:	ldrne	r1, [r7, #8]
   477f4:	cmpne	r1, r0
   477f8:	bne	479cc <flatcc_json_printer_table_as_nested_root@@Base+0x264>
   477fc:	ldr	r0, [r5, #16]
   47800:	ldr	r2, [fp, #8]
   47804:	add	r1, r0, #1
   47808:	cmp	r0, #0
   4780c:	str	r1, [r5, #16]
   47810:	ldrne	r0, [r4, #20]
   47814:	addne	r1, r0, #1
   47818:	strne	r1, [r4, #20]
   4781c:	movne	r1, #44	; 0x2c
   47820:	strbne	r1, [r0]
   47824:	mov	r0, r4
   47828:	mov	r1, r6
   4782c:	bl	3d5d8 <flatcc_json_printer_string_field@@Base+0x8c>
   47830:	ldr	r0, [r5, #12]
   47834:	subs	r0, r0, #1
   47838:	beq	47980 <flatcc_json_printer_table_as_nested_root@@Base+0x218>
   4783c:	add	r1, r7, #4
   47840:	ldr	r7, [r4, #32]
   47844:	ldr	r2, [fp, #16]
   47848:	ldr	r3, [r1]
   4784c:	add	r7, r7, #1
   47850:	add	r1, r1, r3
   47854:	ldr	r3, [r4, #20]
   47858:	str	r7, [r4, #32]
   4785c:	add	r7, r3, #1
   47860:	str	r7, [r4, #20]
   47864:	mov	r7, #123	; 0x7b
   47868:	strb	r7, [r3]
   4786c:	str	r0, [sp, #16]
   47870:	mov	r0, #0
   47874:	str	r0, [sp, #20]
   47878:	str	r1, [sp, #4]
   4787c:	ldr	r0, [r1]
   47880:	sub	r3, r1, r0
   47884:	str	r3, [sp, #8]
   47888:	ldrh	r0, [r1, -r0]
   4788c:	add	r1, sp, #4
   47890:	str	r0, [sp, #12]
   47894:	mov	r0, r4
   47898:	blx	r2
   4789c:	ldrb	r1, [r4, #25]
   478a0:	ldr	r0, [r4, #20]
   478a4:	cmp	r1, #0
   478a8:	beq	47968 <flatcc_json_printer_table_as_nested_root@@Base+0x200>
   478ac:	add	r1, r0, #1
   478b0:	str	r1, [r4, #20]
   478b4:	mov	r1, #10
   478b8:	strb	r1, [r0]
   478bc:	ldr	r0, [r4, #32]
   478c0:	sub	r2, r0, #1
   478c4:	str	r2, [r4, #32]
   478c8:	ldrb	r3, [r4, #25]
   478cc:	ldr	r0, [r4, #20]
   478d0:	ldr	r1, [r4, #16]
   478d4:	mla	r7, r2, r3, r0
   478d8:	mul	r5, r2, r3
   478dc:	cmp	r7, r1
   478e0:	bls	47950 <flatcc_json_printer_table_as_nested_root@@Base+0x1e8>
   478e4:	cmp	r0, r1
   478e8:	bcc	47904 <flatcc_json_printer_table_as_nested_root@@Base+0x19c>
   478ec:	ldr	r2, [r4, #44]	; 0x2c
   478f0:	mov	r0, r4
   478f4:	mov	r1, #0
   478f8:	blx	r2
   478fc:	ldr	r1, [r4, #16]
   47900:	ldr	r0, [r4, #20]
   47904:	sub	r6, r1, r0
   47908:	cmp	r6, r5
   4790c:	bcs	47950 <flatcc_json_printer_table_as_nested_root@@Base+0x1e8>
   47910:	mov	r1, #32
   47914:	mov	r2, r6
   47918:	bl	14ef0 <memset@plt>
   4791c:	ldr	r0, [r4, #20]
   47920:	ldr	r2, [r4, #44]	; 0x2c
   47924:	mov	r1, #0
   47928:	add	r0, r0, r6
   4792c:	str	r0, [r4, #20]
   47930:	mov	r0, r4
   47934:	blx	r2
   47938:	ldr	r1, [r4, #16]
   4793c:	ldr	r0, [r4, #20]
   47940:	sub	r5, r5, r6
   47944:	sub	r6, r1, r0
   47948:	cmp	r5, r6
   4794c:	bhi	47910 <flatcc_json_printer_table_as_nested_root@@Base+0x1a8>
   47950:	mov	r1, #32
   47954:	mov	r2, r5
   47958:	bl	14ef0 <memset@plt>
   4795c:	ldr	r0, [r4, #20]
   47960:	add	r0, r0, r5
   47964:	str	r0, [r4, #20]
   47968:	add	r1, r0, #1
   4796c:	str	r1, [r4, #20]
   47970:	mov	r1, #125	; 0x7d
   47974:	strb	r1, [r0]
   47978:	sub	sp, fp, #16
   4797c:	pop	{r4, r5, r6, r7, fp, pc}
   47980:	ldr	r0, [r4, #36]	; 0x24
   47984:	cmp	r0, #0
   47988:	bne	477ac <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   4798c:	mov	r0, #2
   47990:	str	r0, [r4, #36]	; 0x24
   47994:	sub	sp, fp, #16
   47998:	pop	{r4, r5, r6, r7, fp, pc}
   4799c:	ldr	r0, [r4, #36]	; 0x24
   479a0:	movw	r1, #60315	; 0xeb9b
   479a4:	movw	r3, #61490	; 0xf032
   479a8:	movw	r2, #1019	; 0x3fb
   479ac:	movt	r1, #4
   479b0:	movt	r3, #4
   479b4:	cmp	r0, #0
   479b8:	moveq	r0, #1
   479bc:	streq	r0, [r4, #36]	; 0x24
   479c0:	movw	r0, #61459	; 0xf013
   479c4:	movt	r0, #4
   479c8:	bl	14f44 <__assert_fail@plt>
   479cc:	ldr	r0, [r4, #36]	; 0x24
   479d0:	movw	r1, #60315	; 0xeb9b
   479d4:	movw	r3, #61490	; 0xf032
   479d8:	movw	r2, #1028	; 0x404
   479dc:	movt	r1, #4
   479e0:	movt	r3, #4
   479e4:	cmp	r0, #0
   479e8:	moveq	r0, #1
   479ec:	streq	r0, [r4, #36]	; 0x24
   479f0:	movw	r0, #61569	; 0xf081
   479f4:	movt	r0, #4
   479f8:	bl	14f44 <__assert_fail@plt>

000479fc <flatcc_json_printer_init@@Base>:
   479fc:	push	{r4, r5, r6, sl, fp, lr}
   47a00:	add	fp, sp, #16
   47a04:	mov	r5, r0
   47a08:	mov	r4, #0
   47a0c:	vmov.i32	q8, #0	; 0x00000000
   47a10:	cmp	r1, #0
   47a14:	movw	r6, #16448	; 0x4040
   47a18:	str	r4, [r0, #32]
   47a1c:	mov	r0, #36	; 0x24
   47a20:	mov	r2, r5
   47a24:	vst1.32	{d16-d17}, [r2], r0
   47a28:	add	r0, r5, #16
   47a2c:	vst1.32	{d16-d17}, [r0]
   47a30:	movw	r0, #844	; 0x34c
   47a34:	str	r4, [r2]
   47a38:	movw	r2, #31384	; 0x7a98
   47a3c:	movt	r0, #6
   47a40:	movt	r2, #4
   47a44:	ldr	r0, [r0]
   47a48:	movne	r0, r1
   47a4c:	str	r0, [r5, #40]	; 0x28
   47a50:	movw	r0, #16448	; 0x4040
   47a54:	str	r2, [r5, #44]	; 0x2c
   47a58:	bl	14ea8 <malloc@plt>
   47a5c:	cmp	r0, #0
   47a60:	str	r0, [r5]
   47a64:	mvneq	r4, #0
   47a68:	moveq	r0, r4
   47a6c:	popeq	{r4, r5, r6, sl, fp, pc}
   47a70:	mov	r1, #1
   47a74:	strb	r1, [r5, #24]
   47a78:	mov	r1, #16384	; 0x4000
   47a7c:	str	r6, [r5, #4]
   47a80:	str	r1, [r5, #8]
   47a84:	add	r1, r0, #16384	; 0x4000
   47a88:	str	r1, [r5, #16]
   47a8c:	str	r0, [r5, #20]
   47a90:	mov	r0, r4
   47a94:	pop	{r4, r5, r6, sl, fp, pc}
   47a98:	push	{r4, r5, r6, sl, fp, lr}
   47a9c:	add	fp, sp, #16
   47aa0:	mov	r4, r0
   47aa4:	cmp	r1, #0
   47aa8:	beq	47ab4 <flatcc_json_printer_init@@Base+0xb8>
   47aac:	ldr	r5, [r4, #20]
   47ab0:	b	47ac4 <flatcc_json_printer_init@@Base+0xc8>
   47ab4:	ldr	r6, [r4, #16]
   47ab8:	ldr	r5, [r4, #20]
   47abc:	cmp	r5, r6
   47ac0:	bcs	47afc <flatcc_json_printer_init@@Base+0x100>
   47ac4:	ldr	r0, [r4]
   47ac8:	ldr	r3, [r4, #40]	; 0x28
   47acc:	mov	r2, #1
   47ad0:	sub	r5, r5, r0
   47ad4:	mov	r1, r5
   47ad8:	bl	14e9c <fwrite@plt>
   47adc:	ldr	r1, [r4, #12]
   47ae0:	ldr	r0, [r4]
   47ae4:	str	r0, [r4, #20]
   47ae8:	add	r1, r1, r5
   47aec:	str	r1, [r4, #12]
   47af0:	mov	r1, #0
   47af4:	strb	r1, [r0]
   47af8:	pop	{r4, r5, r6, sl, fp, pc}
   47afc:	ldr	r0, [r4]
   47b00:	ldr	r1, [r4, #8]
   47b04:	ldr	r3, [r4, #40]	; 0x28
   47b08:	mov	r2, #1
   47b0c:	bl	14e9c <fwrite@plt>
   47b10:	ldr	r0, [r4]
   47b14:	ldr	r1, [r4, #8]
   47b18:	sub	r5, r5, r6
   47b1c:	mov	r2, r5
   47b20:	add	r1, r0, r1
   47b24:	bl	14e60 <memcpy@plt>
   47b28:	ldr	r0, [r4]
   47b2c:	ldr	r1, [r4, #8]
   47b30:	ldr	r2, [r4, #12]
   47b34:	add	r0, r0, r5
   47b38:	add	r1, r2, r1
   47b3c:	str	r0, [r4, #20]
   47b40:	str	r1, [r4, #12]
   47b44:	mov	r1, #0
   47b48:	strb	r1, [r0]
   47b4c:	pop	{r4, r5, r6, sl, fp, pc}

00047b50 <flatcc_json_printer_init_buffer@@Base>:
   47b50:	cmp	r2, #63	; 0x3f
   47b54:	bls	47b94 <flatcc_json_printer_init_buffer@@Base+0x44>
   47b58:	vmov.i32	q8, #0	; 0x00000000
   47b5c:	add	r3, r0, #12
   47b60:	vst1.32	{d16-d17}, [r3]
   47b64:	movw	r3, #31676	; 0x7bbc
   47b68:	movt	r3, #4
   47b6c:	str	r3, [r0, #44]	; 0x2c
   47b70:	add	r3, r0, #28
   47b74:	vst1.32	{d16-d17}, [r3]
   47b78:	sub	r3, r2, #64	; 0x40
   47b7c:	stm	r0, {r1, r2, r3}
   47b80:	add	r2, r1, r3
   47b84:	str	r2, [r0, #16]
   47b88:	str	r1, [r0, #20]
   47b8c:	mov	r0, #0
   47b90:	bx	lr
   47b94:	push	{fp, lr}
   47b98:	mov	fp, sp
   47b9c:	movw	r0, #60598	; 0xecb6
   47ba0:	movw	r1, #60315	; 0xeb9b
   47ba4:	movw	r3, #60639	; 0xecdf
   47ba8:	movw	r2, #1165	; 0x48d
   47bac:	movt	r0, #4
   47bb0:	movt	r1, #4
   47bb4:	movt	r3, #4
   47bb8:	bl	14f44 <__assert_fail@plt>
   47bbc:	ldr	r2, [r0, #16]
   47bc0:	ldr	r1, [r0, #20]
   47bc4:	cmp	r1, r2
   47bc8:	bcs	47bdc <flatcc_json_printer_init_buffer@@Base+0x8c>
   47bcc:	mov	r2, r1
   47bd0:	mov	r0, #0
   47bd4:	strb	r0, [r2]
   47bd8:	bx	lr
   47bdc:	ldr	r2, [r0, #36]	; 0x24
   47be0:	cmp	r2, #0
   47be4:	moveq	r2, #3
   47be8:	streq	r2, [r0, #36]	; 0x24
   47bec:	ldr	r2, [r0]
   47bf0:	ldr	r3, [r0, #12]
   47bf4:	sub	r1, r1, r2
   47bf8:	str	r2, [r0, #20]
   47bfc:	add	r1, r1, r3
   47c00:	str	r1, [r0, #12]
   47c04:	mov	r0, #0
   47c08:	strb	r0, [r2]
   47c0c:	bx	lr

00047c10 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   47c10:	push	{r4, r5, fp, lr}
   47c14:	add	fp, sp, #8
   47c18:	mov	r5, r1
   47c1c:	cmp	r1, #0
   47c20:	mov	r4, r0
   47c24:	vmov.i32	q8, #0	; 0x00000000
   47c28:	add	r0, r0, #28
   47c2c:	movweq	r5, #4096	; 0x1000
   47c30:	vst1.32	{d16-d17}, [r0]
   47c34:	add	r0, r4, #12
   47c38:	cmp	r5, #64	; 0x40
   47c3c:	vst1.32	{d16-d17}, [r0]
   47c40:	movls	r5, #64	; 0x40
   47c44:	mov	r0, r5
   47c48:	bl	14ea8 <malloc@plt>
   47c4c:	mov	r1, r0
   47c50:	mov	r0, #1
   47c54:	movw	r2, #31892	; 0x7c94
   47c58:	strb	r0, [r4, #24]
   47c5c:	sub	r0, r5, #64	; 0x40
   47c60:	stm	r4, {r1, r5}
   47c64:	movt	r2, #4
   47c68:	cmp	r1, #0
   47c6c:	str	r0, [r4, #8]
   47c70:	add	r0, r1, r0
   47c74:	str	r2, [r4, #44]	; 0x2c
   47c78:	str	r0, [r4, #16]
   47c7c:	mov	r0, #0
   47c80:	str	r1, [r4, #20]
   47c84:	moveq	r0, #3
   47c88:	streq	r0, [r4, #36]	; 0x24
   47c8c:	mvneq	r0, #0
   47c90:	pop	{r4, r5, fp, pc}
   47c94:	push	{r4, r5, fp, lr}
   47c98:	add	fp, sp, #8
   47c9c:	mov	r4, r0
   47ca0:	ldr	r0, [r0]
   47ca4:	mov	r1, #0
   47ca8:	ldr	r5, [r4, #20]
   47cac:	strb	r1, [r5], -r0
   47cb0:	ldr	r0, [r4, #16]
   47cb4:	ldr	r1, [r4, #20]
   47cb8:	cmp	r1, r0
   47cbc:	popcc	{r4, r5, fp, pc}
   47cc0:	ldm	r4, {r0, r1}
   47cc4:	lsl	r1, r1, #1
   47cc8:	bl	14e90 <realloc@plt>
   47ccc:	cmp	r0, #0
   47cd0:	beq	47d0c <flatcc_json_printer_init_dynamic_buffer@@Base+0xfc>
   47cd4:	str	r0, [r4]
   47cd8:	mvn	r3, #63	; 0x3f
   47cdc:	add	r1, r0, r5
   47ce0:	ldr	r2, [r4, #4]
   47ce4:	add	r3, r3, r2, lsl #1
   47ce8:	lsl	r2, r2, #1
   47cec:	add	r0, r0, r3
   47cf0:	str	r3, [r4, #8]
   47cf4:	str	r2, [r4, #4]
   47cf8:	str	r0, [r4, #16]
   47cfc:	str	r1, [r4, #20]
   47d00:	mov	r0, #0
   47d04:	strb	r0, [r1]
   47d08:	pop	{r4, r5, fp, pc}
   47d0c:	ldr	r0, [r4, #36]	; 0x24
   47d10:	cmp	r0, #0
   47d14:	moveq	r0, #3
   47d18:	streq	r0, [r4, #36]	; 0x24
   47d1c:	ldr	r0, [r4, #12]
   47d20:	ldr	r1, [r4]
   47d24:	add	r0, r0, r5
   47d28:	str	r1, [r4, #20]
   47d2c:	str	r0, [r4, #12]
   47d30:	mov	r0, #0
   47d34:	strb	r0, [r1]
   47d38:	pop	{r4, r5, fp, pc}

00047d3c <flatcc_json_printer_get_buffer@@Base>:
   47d3c:	push	{r4, r5, fp, lr}
   47d40:	add	fp, sp, #8
   47d44:	ldr	r2, [r0, #44]	; 0x2c
   47d48:	mov	r4, r1
   47d4c:	mov	r1, #0
   47d50:	mov	r5, r0
   47d54:	blx	r2
   47d58:	cmp	r4, #0
   47d5c:	ldrne	r0, [r5]
   47d60:	ldrne	r1, [r5, #20]
   47d64:	subne	r1, r1, r0
   47d68:	strne	r1, [r4]
   47d6c:	popne	{r4, r5, fp, pc}
   47d70:	ldr	r0, [r5]
   47d74:	pop	{r4, r5, fp, pc}

00047d78 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   47d78:	push	{r4, r5, fp, lr}
   47d7c:	add	fp, sp, #8
   47d80:	ldr	r2, [r0, #44]	; 0x2c
   47d84:	mov	r5, r1
   47d88:	mov	r1, #0
   47d8c:	mov	r4, r0
   47d90:	blx	r2
   47d94:	cmp	r5, #0
   47d98:	ldr	r0, [r4]
   47d9c:	vmov.i32	q8, #0	; 0x00000000
   47da0:	add	r2, r4, #16
   47da4:	ldrne	r1, [r4, #20]
   47da8:	subne	r1, r1, r0
   47dac:	strne	r1, [r5]
   47db0:	mov	r1, #32
   47db4:	vst1.32	{d16-d17}, [r2]
   47db8:	vst1.32	{d16-d17}, [r4], r1
   47dbc:	vst1.32	{d16-d17}, [r4]
   47dc0:	pop	{r4, r5, fp, pc}

00047dc4 <flatcc_json_printer_clear@@Base>:
   47dc4:	push	{r4, sl, fp, lr}
   47dc8:	add	fp, sp, #8
   47dcc:	mov	r4, r0
   47dd0:	ldrb	r0, [r0, #24]
   47dd4:	cmp	r0, #0
   47dd8:	ldrne	r0, [r4]
   47ddc:	cmpne	r0, #0
   47de0:	beq	47de8 <flatcc_json_printer_clear@@Base+0x24>
   47de4:	bl	14e54 <free@plt>
   47de8:	vmov.i32	q8, #0	; 0x00000000
   47dec:	mov	r0, #32
   47df0:	add	r1, r4, #16
   47df4:	vst1.32	{d16-d17}, [r4], r0
   47df8:	vst1.32	{d16-d17}, [r1]
   47dfc:	vst1.32	{d16-d17}, [r4]
   47e00:	pop	{r4, sl, fp, pc}
   47e04:	cmp	r2, #0
   47e08:	bxeq	lr
   47e0c:	push	{r4, r5, fp, lr}
   47e10:	add	fp, sp, #8
   47e14:	ldr	lr, [r2]
   47e18:	bic	ip, r3, #224	; 0xe0
   47e1c:	cmp	ip, #0
   47e20:	beq	47e40 <flatcc_json_printer_clear@@Base+0x7c>
   47e24:	cmp	ip, #1
   47e28:	bne	47f08 <flatcc_json_printer_clear@@Base+0x144>
   47e2c:	movw	ip, #61394	; 0xefd2
   47e30:	movt	ip, #4
   47e34:	cmp	lr, #3
   47e38:	bcs	47e50 <flatcc_json_printer_clear@@Base+0x8c>
   47e3c:	b	47eb0 <flatcc_json_printer_clear@@Base+0xec>
   47e40:	movw	ip, #61329	; 0xef91
   47e44:	movt	ip, #4
   47e48:	cmp	lr, #3
   47e4c:	bcc	47eb0 <flatcc_json_printer_clear@@Base+0xec>
   47e50:	ldrb	r4, [r1]
   47e54:	sub	lr, lr, #3
   47e58:	cmp	lr, #2
   47e5c:	ldrb	r4, [ip, r4, lsr #2]
   47e60:	strb	r4, [r0]
   47e64:	ldrb	r5, [r1, #1]
   47e68:	ldrb	r4, [r1]
   47e6c:	lsr	r5, r5, #4
   47e70:	bfi	r5, r4, #4, #2
   47e74:	ldrb	r4, [ip, r5]
   47e78:	strb	r4, [r0, #1]
   47e7c:	ldrb	r5, [r1, #2]
   47e80:	ldrb	r4, [r1, #1]
   47e84:	lsr	r5, r5, #6
   47e88:	bfi	r5, r4, #2, #4
   47e8c:	ldrb	r4, [ip, r5]
   47e90:	strb	r4, [r0, #2]
   47e94:	ldrb	r4, [r1, #2]
   47e98:	add	r1, r1, #3
   47e9c:	and	r4, r4, #63	; 0x3f
   47ea0:	ldrb	r4, [ip, r4]
   47ea4:	strb	r4, [r0, #3]
   47ea8:	add	r0, r0, #4
   47eac:	bhi	47e50 <flatcc_json_printer_clear@@Base+0x8c>
   47eb0:	and	r3, r3, #128	; 0x80
   47eb4:	cmp	lr, #1
   47eb8:	beq	47f1c <flatcc_json_printer_clear@@Base+0x158>
   47ebc:	cmp	lr, #2
   47ec0:	bne	47f44 <flatcc_json_printer_clear@@Base+0x180>
   47ec4:	ldrb	r5, [r1]
   47ec8:	cmp	r3, #0
   47ecc:	ldrb	r5, [ip, r5, lsr #2]
   47ed0:	strb	r5, [r0]
   47ed4:	ldrb	r4, [r1, #1]
   47ed8:	ldrb	r5, [r1]
   47edc:	lsr	r4, r4, #4
   47ee0:	bfi	r4, r5, #4, #2
   47ee4:	ldrb	r5, [ip, r4]
   47ee8:	strb	r5, [r0, #1]
   47eec:	ldrb	r1, [r1, #1]
   47ef0:	and	r1, r1, #15
   47ef4:	ldrb	r1, [ip, r1, lsl #2]
   47ef8:	strb	r1, [r0, #2]
   47efc:	movne	r1, #61	; 0x3d
   47f00:	strbne	r1, [r0, #3]
   47f04:	b	47f44 <flatcc_json_printer_clear@@Base+0x180>
   47f08:	mov	r0, lr
   47f0c:	sub	r0, lr, r0
   47f10:	str	r0, [r2]
   47f14:	pop	{r4, r5, fp, lr}
   47f18:	bx	lr
   47f1c:	ldrb	r5, [r1]
   47f20:	cmp	r3, #0
   47f24:	ldrb	r5, [ip, r5, lsr #2]
   47f28:	strb	r5, [r0]
   47f2c:	ldrb	r1, [r1]
   47f30:	and	r1, r1, #3
   47f34:	ldrb	r1, [ip, r1, lsl #4]
   47f38:	strb	r1, [r0, #1]
   47f3c:	movwne	r1, #15677	; 0x3d3d
   47f40:	strhne	r1, [r0, #2]
   47f44:	ldr	lr, [r2]
   47f48:	mov	r0, #0
   47f4c:	sub	r0, lr, r0
   47f50:	str	r0, [r2]
   47f54:	pop	{r4, r5, fp, lr}
   47f58:	bx	lr
   47f5c:	eor	r1, r1, #-2147483648	; 0x80000000
   47f60:	b	47f68 <flatcc_json_printer_clear@@Base+0x1a4>
   47f64:	eor	r3, r3, #-2147483648	; 0x80000000
   47f68:	push	{r4, r5, lr}
   47f6c:	lsl	r4, r1, #1
   47f70:	lsl	r5, r3, #1
   47f74:	teq	r4, r5
   47f78:	teqeq	r0, r2
   47f7c:	orrsne	ip, r4, r0
   47f80:	orrsne	ip, r5, r2
   47f84:	mvnsne	ip, r4, asr #21
   47f88:	mvnsne	ip, r5, asr #21
   47f8c:	beq	48178 <flatcc_json_printer_clear@@Base+0x3b4>
   47f90:	lsr	r4, r4, #21
   47f94:	rsbs	r5, r4, r5, lsr #21
   47f98:	rsblt	r5, r5, #0
   47f9c:	ble	47fbc <flatcc_json_printer_clear@@Base+0x1f8>
   47fa0:	add	r4, r4, r5
   47fa4:	eor	r2, r0, r2
   47fa8:	eor	r3, r1, r3
   47fac:	eor	r0, r2, r0
   47fb0:	eor	r1, r3, r1
   47fb4:	eor	r2, r0, r2
   47fb8:	eor	r3, r1, r3
   47fbc:	cmp	r5, #54	; 0x36
   47fc0:	pophi	{r4, r5, pc}
   47fc4:	tst	r1, #-2147483648	; 0x80000000
   47fc8:	lsl	r1, r1, #12
   47fcc:	mov	ip, #1048576	; 0x100000
   47fd0:	orr	r1, ip, r1, lsr #12
   47fd4:	beq	47fe0 <flatcc_json_printer_clear@@Base+0x21c>
   47fd8:	rsbs	r0, r0, #0
   47fdc:	rsc	r1, r1, #0
   47fe0:	tst	r3, #-2147483648	; 0x80000000
   47fe4:	lsl	r3, r3, #12
   47fe8:	orr	r3, ip, r3, lsr #12
   47fec:	beq	47ff8 <flatcc_json_printer_clear@@Base+0x234>
   47ff0:	rsbs	r2, r2, #0
   47ff4:	rsc	r3, r3, #0
   47ff8:	teq	r4, r5
   47ffc:	beq	48160 <flatcc_json_printer_clear@@Base+0x39c>
   48000:	sub	r4, r4, #1
   48004:	rsbs	lr, r5, #32
   48008:	blt	48024 <flatcc_json_printer_clear@@Base+0x260>
   4800c:	lsl	ip, r2, lr
   48010:	adds	r0, r0, r2, lsr r5
   48014:	adc	r1, r1, #0
   48018:	adds	r0, r0, r3, lsl lr
   4801c:	adcs	r1, r1, r3, asr r5
   48020:	b	48040 <flatcc_json_printer_clear@@Base+0x27c>
   48024:	sub	r5, r5, #32
   48028:	add	lr, lr, #32
   4802c:	cmp	r2, #1
   48030:	lsl	ip, r3, lr
   48034:	orrcs	ip, ip, #2
   48038:	adds	r0, r0, r3, asr r5
   4803c:	adcs	r1, r1, r3, asr #31
   48040:	and	r5, r1, #-2147483648	; 0x80000000
   48044:	bpl	48054 <flatcc_json_printer_clear@@Base+0x290>
   48048:	rsbs	ip, ip, #0
   4804c:	rscs	r0, r0, #0
   48050:	rsc	r1, r1, #0
   48054:	cmp	r1, #1048576	; 0x100000
   48058:	bcc	48098 <flatcc_json_printer_clear@@Base+0x2d4>
   4805c:	cmp	r1, #2097152	; 0x200000
   48060:	bcc	48080 <flatcc_json_printer_clear@@Base+0x2bc>
   48064:	lsrs	r1, r1, #1
   48068:	rrxs	r0, r0
   4806c:	rrx	ip, ip
   48070:	add	r4, r4, #1
   48074:	lsl	r2, r4, #21
   48078:	cmn	r2, #4194304	; 0x400000
   4807c:	bcs	481d8 <flatcc_json_printer_clear@@Base+0x414>
   48080:	cmp	ip, #-2147483648	; 0x80000000
   48084:	lsrseq	ip, r0, #1
   48088:	adcs	r0, r0, #0
   4808c:	adc	r1, r1, r4, lsl #20
   48090:	orr	r1, r1, r5
   48094:	pop	{r4, r5, pc}
   48098:	lsls	ip, ip, #1
   4809c:	adcs	r0, r0, r0
   480a0:	adc	r1, r1, r1
   480a4:	tst	r1, #1048576	; 0x100000
   480a8:	sub	r4, r4, #1
   480ac:	bne	48080 <flatcc_json_printer_clear@@Base+0x2bc>
   480b0:	teq	r1, #0
   480b4:	moveq	r1, r0
   480b8:	moveq	r0, #0
   480bc:	clz	r3, r1
   480c0:	addeq	r3, r3, #32
   480c4:	sub	r3, r3, #11
   480c8:	subs	r2, r3, #32
   480cc:	bge	480f0 <flatcc_json_printer_clear@@Base+0x32c>
   480d0:	adds	r2, r2, #12
   480d4:	ble	480ec <flatcc_json_printer_clear@@Base+0x328>
   480d8:	add	ip, r2, #20
   480dc:	rsb	r2, r2, #12
   480e0:	lsl	r0, r1, ip
   480e4:	lsr	r1, r1, r2
   480e8:	b	48100 <flatcc_json_printer_clear@@Base+0x33c>
   480ec:	add	r2, r2, #20
   480f0:	rsble	ip, r2, #32
   480f4:	lsl	r1, r1, r2
   480f8:	orrle	r1, r1, r0, lsr ip
   480fc:	lslle	r0, r0, r2
   48100:	subs	r4, r4, r3
   48104:	addge	r1, r1, r4, lsl #20
   48108:	orrge	r1, r1, r5
   4810c:	popge	{r4, r5, pc}
   48110:	mvn	r4, r4
   48114:	subs	r4, r4, #31
   48118:	bge	48154 <flatcc_json_printer_clear@@Base+0x390>
   4811c:	adds	r4, r4, #12
   48120:	bgt	4813c <flatcc_json_printer_clear@@Base+0x378>
   48124:	add	r4, r4, #20
   48128:	rsb	r2, r4, #32
   4812c:	lsr	r0, r0, r4
   48130:	orr	r0, r0, r1, lsl r2
   48134:	orr	r1, r5, r1, lsr r4
   48138:	pop	{r4, r5, pc}
   4813c:	rsb	r4, r4, #12
   48140:	rsb	r2, r4, #32
   48144:	lsr	r0, r0, r2
   48148:	orr	r0, r0, r1, lsl r4
   4814c:	mov	r1, r5
   48150:	pop	{r4, r5, pc}
   48154:	lsr	r0, r1, r4
   48158:	mov	r1, r5
   4815c:	pop	{r4, r5, pc}
   48160:	teq	r4, #0
   48164:	eor	r3, r3, #1048576	; 0x100000
   48168:	eoreq	r1, r1, #1048576	; 0x100000
   4816c:	addeq	r4, r4, #1
   48170:	subne	r5, r5, #1
   48174:	b	48000 <flatcc_json_printer_clear@@Base+0x23c>
   48178:	mvns	ip, r4, asr #21
   4817c:	mvnsne	ip, r5, asr #21
   48180:	beq	481e8 <flatcc_json_printer_clear@@Base+0x424>
   48184:	teq	r4, r5
   48188:	teqeq	r0, r2
   4818c:	beq	481a0 <flatcc_json_printer_clear@@Base+0x3dc>
   48190:	orrs	ip, r4, r0
   48194:	moveq	r1, r3
   48198:	moveq	r0, r2
   4819c:	pop	{r4, r5, pc}
   481a0:	teq	r1, r3
   481a4:	movne	r1, #0
   481a8:	movne	r0, #0
   481ac:	popne	{r4, r5, pc}
   481b0:	lsrs	ip, r4, #21
   481b4:	bne	481c8 <flatcc_json_printer_clear@@Base+0x404>
   481b8:	lsls	r0, r0, #1
   481bc:	adcs	r1, r1, r1
   481c0:	orrcs	r1, r1, #-2147483648	; 0x80000000
   481c4:	pop	{r4, r5, pc}
   481c8:	adds	r4, r4, #4194304	; 0x400000
   481cc:	addcc	r1, r1, #1048576	; 0x100000
   481d0:	popcc	{r4, r5, pc}
   481d4:	and	r5, r1, #-2147483648	; 0x80000000
   481d8:	orr	r1, r5, #2130706432	; 0x7f000000
   481dc:	orr	r1, r1, #15728640	; 0xf00000
   481e0:	mov	r0, #0
   481e4:	pop	{r4, r5, pc}
   481e8:	mvns	ip, r4, asr #21
   481ec:	movne	r1, r3
   481f0:	movne	r0, r2
   481f4:	mvnseq	ip, r5, asr #21
   481f8:	movne	r3, r1
   481fc:	movne	r2, r0
   48200:	orrs	r4, r0, r1, lsl #12
   48204:	orrseq	r5, r2, r3, lsl #12
   48208:	teqeq	r1, r3
   4820c:	orrne	r1, r1, #524288	; 0x80000
   48210:	pop	{r4, r5, pc}
   48214:	teq	r0, #0
   48218:	moveq	r1, #0
   4821c:	bxeq	lr
   48220:	push	{r4, r5, lr}
   48224:	mov	r4, #1024	; 0x400
   48228:	add	r4, r4, #50	; 0x32
   4822c:	mov	r5, #0
   48230:	mov	r1, #0
   48234:	b	480b0 <flatcc_json_printer_clear@@Base+0x2ec>
   48238:	teq	r0, #0
   4823c:	moveq	r1, #0
   48240:	bxeq	lr
   48244:	push	{r4, r5, lr}
   48248:	mov	r4, #1024	; 0x400
   4824c:	add	r4, r4, #50	; 0x32
   48250:	ands	r5, r0, #-2147483648	; 0x80000000
   48254:	rsbmi	r0, r0, #0
   48258:	mov	r1, #0
   4825c:	b	480b0 <flatcc_json_printer_clear@@Base+0x2ec>
   48260:	lsls	r2, r0, #1
   48264:	asr	r1, r2, #3
   48268:	rrx	r1, r1
   4826c:	lsl	r0, r2, #28
   48270:	andsne	r3, r2, #-16777216	; 0xff000000
   48274:	teqne	r3, #-16777216	; 0xff000000
   48278:	eorne	r1, r1, #939524096	; 0x38000000
   4827c:	bxne	lr
   48280:	bics	r2, r2, #-16777216	; 0xff000000
   48284:	bxeq	lr
   48288:	teq	r3, #-16777216	; 0xff000000
   4828c:	orreq	r1, r1, #524288	; 0x80000
   48290:	bxeq	lr
   48294:	push	{r4, r5, lr}
   48298:	mov	r4, #896	; 0x380
   4829c:	and	r5, r1, #-2147483648	; 0x80000000
   482a0:	bic	r1, r1, #-2147483648	; 0x80000000
   482a4:	b	480b0 <flatcc_json_printer_clear@@Base+0x2ec>
   482a8:	orrs	r2, r0, r1
   482ac:	bxeq	lr
   482b0:	push	{r4, r5, lr}
   482b4:	mov	r5, #0
   482b8:	b	482d8 <flatcc_json_printer_clear@@Base+0x514>
   482bc:	orrs	r2, r0, r1
   482c0:	bxeq	lr
   482c4:	push	{r4, r5, lr}
   482c8:	ands	r5, r1, #-2147483648	; 0x80000000
   482cc:	bpl	482d8 <flatcc_json_printer_clear@@Base+0x514>
   482d0:	rsbs	r0, r0, #0
   482d4:	rsc	r1, r1, #0
   482d8:	mov	r4, #1024	; 0x400
   482dc:	add	r4, r4, #50	; 0x32
   482e0:	lsrs	ip, r1, #22
   482e4:	beq	48054 <flatcc_json_printer_clear@@Base+0x290>
   482e8:	mov	r2, #3
   482ec:	lsrs	ip, ip, #3
   482f0:	addne	r2, r2, #3
   482f4:	lsrs	ip, ip, #3
   482f8:	addne	r2, r2, #3
   482fc:	add	r2, r2, ip, lsr #3
   48300:	rsb	r3, r2, #32
   48304:	lsl	ip, r0, r3
   48308:	lsr	r0, r0, r2
   4830c:	orr	r0, r0, r1, lsl r3
   48310:	lsr	r1, r1, r2
   48314:	add	r4, r4, r2
   48318:	b	48054 <flatcc_json_printer_clear@@Base+0x290>
   4831c:	eor	r0, r0, #-2147483648	; 0x80000000
   48320:	b	48328 <flatcc_json_printer_clear@@Base+0x564>
   48324:	eor	r1, r1, #-2147483648	; 0x80000000
   48328:	lsls	r2, r0, #1
   4832c:	lslsne	r3, r1, #1
   48330:	teqne	r2, r3
   48334:	mvnsne	ip, r2, asr #24
   48338:	mvnsne	ip, r3, asr #24
   4833c:	beq	48434 <flatcc_json_printer_clear@@Base+0x670>
   48340:	lsr	r2, r2, #24
   48344:	rsbs	r3, r2, r3, lsr #24
   48348:	addgt	r2, r2, r3
   4834c:	eorgt	r1, r0, r1
   48350:	eorgt	r0, r1, r0
   48354:	eorgt	r1, r0, r1
   48358:	rsblt	r3, r3, #0
   4835c:	cmp	r3, #25
   48360:	bxhi	lr
   48364:	tst	r0, #-2147483648	; 0x80000000
   48368:	orr	r0, r0, #8388608	; 0x800000
   4836c:	bic	r0, r0, #-16777216	; 0xff000000
   48370:	rsbne	r0, r0, #0
   48374:	tst	r1, #-2147483648	; 0x80000000
   48378:	orr	r1, r1, #8388608	; 0x800000
   4837c:	bic	r1, r1, #-16777216	; 0xff000000
   48380:	rsbne	r1, r1, #0
   48384:	teq	r2, r3
   48388:	beq	4841c <flatcc_json_printer_clear@@Base+0x658>
   4838c:	sub	r2, r2, #1
   48390:	adds	r0, r0, r1, asr r3
   48394:	rsb	r3, r3, #32
   48398:	lsl	r1, r1, r3
   4839c:	and	r3, r0, #-2147483648	; 0x80000000
   483a0:	bpl	483ac <flatcc_json_printer_clear@@Base+0x5e8>
   483a4:	rsbs	r1, r1, #0
   483a8:	rsc	r0, r0, #0
   483ac:	cmp	r0, #8388608	; 0x800000
   483b0:	bcc	483e4 <flatcc_json_printer_clear@@Base+0x620>
   483b4:	cmp	r0, #16777216	; 0x1000000
   483b8:	bcc	483d0 <flatcc_json_printer_clear@@Base+0x60c>
   483bc:	lsrs	r0, r0, #1
   483c0:	rrx	r1, r1
   483c4:	add	r2, r2, #1
   483c8:	cmp	r2, #254	; 0xfe
   483cc:	bcs	48488 <flatcc_json_printer_clear@@Base+0x6c4>
   483d0:	cmp	r1, #-2147483648	; 0x80000000
   483d4:	adc	r0, r0, r2, lsl #23
   483d8:	biceq	r0, r0, #1
   483dc:	orr	r0, r0, r3
   483e0:	bx	lr
   483e4:	lsls	r1, r1, #1
   483e8:	adc	r0, r0, r0
   483ec:	tst	r0, #8388608	; 0x800000
   483f0:	sub	r2, r2, #1
   483f4:	bne	483d0 <flatcc_json_printer_clear@@Base+0x60c>
   483f8:	clz	ip, r0
   483fc:	sub	ip, ip, #8
   48400:	subs	r2, r2, ip
   48404:	lsl	r0, r0, ip
   48408:	addge	r0, r0, r2, lsl #23
   4840c:	rsblt	r2, r2, #0
   48410:	orrge	r0, r0, r3
   48414:	orrlt	r0, r3, r0, lsr r2
   48418:	bx	lr
   4841c:	teq	r2, #0
   48420:	eor	r1, r1, #8388608	; 0x800000
   48424:	eoreq	r0, r0, #8388608	; 0x800000
   48428:	addeq	r2, r2, #1
   4842c:	subne	r3, r3, #1
   48430:	b	4838c <flatcc_json_printer_clear@@Base+0x5c8>
   48434:	lsl	r3, r1, #1
   48438:	mvns	ip, r2, asr #24
   4843c:	mvnsne	ip, r3, asr #24
   48440:	beq	48494 <flatcc_json_printer_clear@@Base+0x6d0>
   48444:	teq	r2, r3
   48448:	beq	48458 <flatcc_json_printer_clear@@Base+0x694>
   4844c:	teq	r2, #0
   48450:	moveq	r0, r1
   48454:	bx	lr
   48458:	teq	r0, r1
   4845c:	movne	r0, #0
   48460:	bxne	lr
   48464:	tst	r2, #-16777216	; 0xff000000
   48468:	bne	48478 <flatcc_json_printer_clear@@Base+0x6b4>
   4846c:	lsls	r0, r0, #1
   48470:	orrcs	r0, r0, #-2147483648	; 0x80000000
   48474:	bx	lr
   48478:	adds	r2, r2, #33554432	; 0x2000000
   4847c:	addcc	r0, r0, #8388608	; 0x800000
   48480:	bxcc	lr
   48484:	and	r3, r0, #-2147483648	; 0x80000000
   48488:	orr	r0, r3, #2130706432	; 0x7f000000
   4848c:	orr	r0, r0, #8388608	; 0x800000
   48490:	bx	lr
   48494:	mvns	r2, r2, asr #24
   48498:	movne	r0, r1
   4849c:	mvnseq	r3, r3, asr #24
   484a0:	movne	r1, r0
   484a4:	lsls	r2, r0, #9
   484a8:	lslseq	r3, r1, #9
   484ac:	teqeq	r0, r1
   484b0:	orrne	r0, r0, #4194304	; 0x400000
   484b4:	bx	lr
   484b8:	mov	r3, #0
   484bc:	b	484c8 <flatcc_json_printer_clear@@Base+0x704>
   484c0:	ands	r3, r0, #-2147483648	; 0x80000000
   484c4:	rsbmi	r0, r0, #0
   484c8:	movs	ip, r0
   484cc:	bxeq	lr
   484d0:	orr	r3, r3, #1258291200	; 0x4b000000
   484d4:	mov	r1, r0
   484d8:	mov	r0, #0
   484dc:	b	48520 <flatcc_json_printer_clear@@Base+0x75c>
   484e0:	orrs	r2, r0, r1
   484e4:	bxeq	lr
   484e8:	mov	r3, #0
   484ec:	b	48508 <flatcc_json_printer_clear@@Base+0x744>
   484f0:	orrs	r2, r0, r1
   484f4:	bxeq	lr
   484f8:	ands	r3, r1, #-2147483648	; 0x80000000
   484fc:	bpl	48508 <flatcc_json_printer_clear@@Base+0x744>
   48500:	rsbs	r0, r0, #0
   48504:	rsc	r1, r1, #0
   48508:	movs	ip, r1
   4850c:	moveq	ip, r0
   48510:	moveq	r1, r0
   48514:	moveq	r0, #0
   48518:	orr	r3, r3, #1526726656	; 0x5b000000
   4851c:	subeq	r3, r3, #268435456	; 0x10000000
   48520:	sub	r3, r3, #8388608	; 0x800000
   48524:	clz	r2, ip
   48528:	subs	r2, r2, #8
   4852c:	sub	r3, r3, r2, lsl #23
   48530:	blt	48550 <flatcc_json_printer_clear@@Base+0x78c>
   48534:	add	r3, r3, r1, lsl r2
   48538:	lsl	ip, r0, r2
   4853c:	rsb	r2, r2, #32
   48540:	cmp	ip, #-2147483648	; 0x80000000
   48544:	adc	r0, r3, r0, lsr r2
   48548:	biceq	r0, r0, #1
   4854c:	bx	lr
   48550:	add	r2, r2, #32
   48554:	lsl	ip, r1, r2
   48558:	rsb	r2, r2, #32
   4855c:	orrs	r0, r0, ip, lsl #1
   48560:	adc	r0, r3, r1, lsr r2
   48564:	biceq	r0, r0, ip, lsr #31
   48568:	bx	lr
   4856c:	cmp	r3, #0
   48570:	cmpeq	r2, #0
   48574:	bne	4858c <flatcc_json_printer_clear@@Base+0x7c8>
   48578:	cmp	r1, #0
   4857c:	cmpeq	r0, #0
   48580:	mvnne	r1, #0
   48584:	mvnne	r0, #0
   48588:	b	485a8 <flatcc_json_printer_clear@@Base+0x7e4>
   4858c:	sub	sp, sp, #8
   48590:	push	{sp, lr}
   48594:	bl	485b8 <flatcc_json_printer_clear@@Base+0x7f4>
   48598:	ldr	lr, [sp, #4]
   4859c:	add	sp, sp, #8
   485a0:	pop	{r2, r3}
   485a4:	bx	lr
   485a8:	push	{r1, lr}
   485ac:	mov	r0, #8
   485b0:	bl	14e30 <raise@plt>
   485b4:	pop	{r1, pc}
   485b8:	cmp	r1, r3
   485bc:	cmpeq	r0, r2
   485c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   485c4:	mov	r4, r0
   485c8:	movcc	r0, #0
   485cc:	mov	r5, r1
   485d0:	ldr	lr, [sp, #36]	; 0x24
   485d4:	movcc	r1, r0
   485d8:	bcc	486d4 <flatcc_json_printer_clear@@Base+0x910>
   485dc:	cmp	r3, #0
   485e0:	clzeq	ip, r2
   485e4:	clzne	ip, r3
   485e8:	addeq	ip, ip, #32
   485ec:	cmp	r5, #0
   485f0:	clzeq	r1, r4
   485f4:	addeq	r1, r1, #32
   485f8:	clzne	r1, r5
   485fc:	sub	ip, ip, r1
   48600:	sub	sl, ip, #32
   48604:	lsl	r9, r3, ip
   48608:	rsb	fp, ip, #32
   4860c:	orr	r9, r9, r2, lsl sl
   48610:	orr	r9, r9, r2, lsr fp
   48614:	lsl	r8, r2, ip
   48618:	cmp	r5, r9
   4861c:	cmpeq	r4, r8
   48620:	movcc	r0, #0
   48624:	movcc	r1, r0
   48628:	bcc	48644 <flatcc_json_printer_clear@@Base+0x880>
   4862c:	mov	r0, #1
   48630:	subs	r4, r4, r8
   48634:	lsl	r1, r0, sl
   48638:	orr	r1, r1, r0, lsr fp
   4863c:	lsl	r0, r0, ip
   48640:	sbc	r5, r5, r9
   48644:	cmp	ip, #0
   48648:	beq	486d4 <flatcc_json_printer_clear@@Base+0x910>
   4864c:	lsr	r6, r8, #1
   48650:	orr	r6, r6, r9, lsl #31
   48654:	lsr	r7, r9, #1
   48658:	mov	r2, ip
   4865c:	b	48680 <flatcc_json_printer_clear@@Base+0x8bc>
   48660:	subs	r3, r4, r6
   48664:	sbc	r8, r5, r7
   48668:	adds	r3, r3, r3
   4866c:	adc	r8, r8, r8
   48670:	adds	r4, r3, #1
   48674:	adc	r5, r8, #0
   48678:	subs	r2, r2, #1
   4867c:	beq	4869c <flatcc_json_printer_clear@@Base+0x8d8>
   48680:	cmp	r5, r7
   48684:	cmpeq	r4, r6
   48688:	bcs	48660 <flatcc_json_printer_clear@@Base+0x89c>
   4868c:	adds	r4, r4, r4
   48690:	adc	r5, r5, r5
   48694:	subs	r2, r2, #1
   48698:	bne	48680 <flatcc_json_printer_clear@@Base+0x8bc>
   4869c:	lsr	r3, r4, ip
   486a0:	orr	r3, r3, r5, lsl fp
   486a4:	lsr	r2, r5, ip
   486a8:	orr	r3, r3, r5, lsr sl
   486ac:	adds	r0, r0, r4
   486b0:	mov	r4, r3
   486b4:	lsl	r3, r2, ip
   486b8:	orr	r3, r3, r4, lsl sl
   486bc:	lsl	ip, r4, ip
   486c0:	orr	r3, r3, r4, lsr fp
   486c4:	adc	r1, r1, r5
   486c8:	subs	r0, r0, ip
   486cc:	mov	r5, r2
   486d0:	sbc	r1, r1, r3
   486d4:	cmp	lr, #0
   486d8:	strdne	r4, [lr]
   486dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000486e0 <__libc_csu_init@@Base>:
   486e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   486e4:	mov	r7, r0
   486e8:	ldr	r6, [pc, #72]	; 48738 <__libc_csu_init@@Base+0x58>
   486ec:	ldr	r5, [pc, #72]	; 4873c <__libc_csu_init@@Base+0x5c>
   486f0:	add	r6, pc, r6
   486f4:	add	r5, pc, r5
   486f8:	sub	r6, r6, r5
   486fc:	mov	r8, r1
   48700:	mov	r9, r2
   48704:	bl	14e10 <raise@plt-0x20>
   48708:	asrs	r6, r6, #2
   4870c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   48710:	mov	r4, #0
   48714:	add	r4, r4, #1
   48718:	ldr	r3, [r5], #4
   4871c:	mov	r2, r9
   48720:	mov	r1, r8
   48724:	mov	r0, r7
   48728:	blx	r3
   4872c:	cmp	r6, r4
   48730:	bne	48714 <__libc_csu_init@@Base+0x34>
   48734:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   48738:	andeq	r7, r1, r4, lsl r8
   4873c:	andeq	r7, r1, ip, lsl #16

00048740 <__libc_csu_fini@@Base>:
   48740:	bx	lr

Disassembly of section .fini:

00048744 <.fini>:
   48744:	push	{r3, lr}
   48748:	pop	{r3, pc}
